
64f60957d37b3e6f918101bfec0c96ed7b4d991255603e28033b6b8ecdaed233.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	out    0xb,al
  4010fd:	stc    
  4010fe:	adc    BYTE PTR [ecx],0xa3
  401101:	fld    QWORD PTR [edi+eiz*1+0x314efb64]
  401108:	jae    0x4010b9
  40110a:	adc    al,0xa9
  40110c:	pop    edi
  40110d:	jmp    FWORD PTR [ebp+0x28a4b7da]
  401113:	jp     0x401148
  401115:	push   eax
  401116:	jmp    FWORD PTR [eax+0x34f8f6b7]
  40111c:	jnp    0x40114d
  40111e:	ror    DWORD PTR [ebp+0x2dfd3303],1
  401124:	fdivr  st,st(6)
  401126:	and    esp,DWORD PTR [edi-0x7a]
  401129:	mov    dh,0x9
  40112b:	sub    edx,DWORD PTR [eax]
  40112d:	jmp    0x555a774c
  401132:	sar    al,1
  401134:	arpl   WORD PTR [ebx-0x37],cx
  401137:	mov    dh,0xb1
  401139:	repnz dec edi
  40113b:	jge    0x401138
  40113d:	inc    esp
  40113e:	rol    DWORD PTR [edi-0x2fe7c09d],0x6a
  401145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401146:	push   esp
  401147:	and    dl,BYTE PTR [esi-0x42]
  40114a:	and    eax,0xfb2e9621
  40114f:	psubb  mm5,QWORD PTR [ebp-0x6d]
  401153:	imul   eax,DWORD PTR [ebx+eax*1-0x4b],0xf7278bd9
  40115b:	inc    esi
  40115c:	mov    WORD PTR [eax+eiz*2+0x7b],fs
  401160:	js     0x4010f4
  401162:	xor    BYTE PTR [esi+0x559337d5],ah
  401168:	aaa    
  401169:	btr    ebx,esi
  40116c:	push   eax
  40116d:	cvtdq2ps xmm5,XMMWORD PTR [edi+0x46]
  401171:	addr16 je 0x4011a5
  401174:	test   al,0x48
  401176:	mov    esp,0x65b936c3
  40117b:	scas   eax,DWORD PTR es:[edi]
  40117c:	mov    al,0x2
  40117e:	stos   DWORD PTR es:[edi],eax
  40117f:	adc    edi,ebp
  401181:	leave  
  401182:	xchg   DWORD PTR [edx+0x6a],esi
  401185:	mov    ds:0x801b7743,eax
  40118a:	out    0x4d,al
  40118c:	and    edi,edi
  40118e:	shl    DWORD PTR [ecx+0x39],1
  401191:	addr16 cmp eax,0x264b3e40
  401197:	popa   
  401198:	call   FWORD PTR [edx-0x5d046894]
  40119e:	stc    
  40119f:	sti    
  4011a0:	pop    ds
  4011a1:	pushf  
  4011a2:	jl     0x4011a1
  4011a4:	and    ch,cl
  4011a6:	mov    eax,ds:0x6b90eb94
  4011ab:	xor    al,0x46
  4011ad:	and    dl,BYTE PTR [eax-0x4]
  4011b0:	repnz push es
  4011b2:	ret    
  4011b3:	addr16 je 0x40122a
  4011b6:	lods   eax,DWORD PTR ds:[esi]
  4011b7:	fs jbe 0x4011a1
  4011ba:	inc    esi
  4011bb:	aam    0xb9
  4011bd:	add    al,0x60
  4011bf:	int3   
  4011c0:	clc    
  4011c1:	dec    ebx
  4011c2:	push   ebx
  4011c3:	cmp    DWORD PTR [edi+0x69df83ee],0x94392427
  4011cd:	sahf   
  4011ce:	add    ecx,DWORD PTR [ecx-0x4a74cc75]
  4011d4:	and    BYTE PTR [edi-0x373dea6c],bh
  4011da:	addr16 xor al,0x53
  4011dd:	xchg   BYTE PTR [ebx+0x2],dl
  4011e0:	cdq    
  4011e1:	lock mov ecx,0xca926d2b
  4011e7:	popa   
  4011e8:	cmp    esi,DWORD PTR [esi-0x5f]
  4011eb:	int    0xeb
  4011ed:	sbb    edx,DWORD PTR [ebx]
  4011ef:	add    esp,0x2a
  4011f2:	sub    BYTE PTR [edx+0x30ecf351],ah
  4011f8:	lods   al,BYTE PTR ds:[esi]
  4011f9:	clc    
  4011fa:	push   esp
  4011fb:	clc    
  4011fc:	in     eax,0x2d
  4011fe:	in     al,dx
  4011ff:	lea    edx,[ecx+0x2fe7752b]
  401205:	std    
  401206:	xchg   edi,eax
  401207:	stc    
  401208:	addr16 mov eax,0x34d036d
  40120e:	test   DWORD PTR [esi+0x55c51832],ebx
  401214:	cmp    esp,0xcd4ff678
  40121a:	push   ss
  40121b:	scas   al,BYTE PTR es:[edi]
  40121c:	jnp    0x401239
  40121e:	mov    ds:0x993fa27e,al
  401223:	and    eax,0x333129c8
  401228:	ins    BYTE PTR es:[edi],dx
  401229:	ins    BYTE PTR es:[edi],dx
  40122a:	and    dl,BYTE PTR [eax-0x2f]
  40122d:	xchg   edx,eax
  40122e:	(bad)  
  40122f:	cmp    DWORD PTR [esi+0x6f],edx
  401232:	xchg   ebp,eax
  401233:	outs   dx,DWORD PTR ds:[esi]
  401234:	or     BYTE PTR [edx],0x7
  401237:	int3   
  401238:	outs   dx,BYTE PTR ds:[esi]
  401239:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40123a:	fsqrt  
  40123c:	fdiv   QWORD PTR [edx]
  40123e:	setne  BYTE PTR [edx]
  401241:	in     al,0x5b
  401243:	mov    eax,0xc21bb460
  401248:	je     0x40122d
  40124a:	mov    cs,WORD PTR [ecx]
  40124c:	pop    ecx
  40124d:	ins    BYTE PTR es:[edi],dx
  40124e:	xor    esp,DWORD PTR [ebx+0x316a6346]
  401254:	pushf  
  401255:	std    
  401256:	xor    esi,ebp
  401258:	bound  eax,QWORD PTR [edx-0x1b]
  40125b:	fidivr DWORD PTR [ebp-0x487487cf]
  401261:	out    0x6d,al
  401263:	add    BYTE PTR ds:0x640eb174,cl
  401269:	fmul   QWORD PTR [eax+0x62]
  40126c:	test   ecx,edx
  40126e:	push   0x7d65ca01
  401273:	inc    esi
  401274:	mov    edi,0xfd54b70b
  401279:	ds dec eax
  40127b:	dec    esi
  40127c:	mov    eax,ds:0x495a6dfc
  401281:	jo     0x401301
  401283:	xor    BYTE PTR [esi],0x32
  401286:	es in  eax,0x7e
  401289:	loop   0x4012bf
  40128b:	daa    
  40128c:	popf   
  40128d:	pop    ss
  40128e:	inc    ecx
  40128f:	idiv   DWORD PTR [edi-0x76]
  401292:	call   0x64b4a7c0
  401297:	xchg   ebx,eax
  401298:	xchg   esi,eax
  401299:	pop    ds
  40129a:	fcomp  QWORD PTR [edi]
  40129c:	repnz lds ebx,FWORD PTR [eax+0x781fa984]
  4012a3:	rol    BYTE PTR [ebx+0x310c1be2],cl
  4012a9:	adc    edi,DWORD PTR [ebx]
  4012ab:	xor    dh,cl
  4012ad:	cwde   
  4012ae:	dec    ecx
  4012af:	adc    eax,0x1cd74204
  4012b4:	adc    bh,BYTE PTR [ebx]
  4012b6:	adc    bl,BYTE PTR [eax]
  4012b8:	test   DWORD PTR [ecx],0xb27bf42a
  4012be:	add    DWORD PTR [esi+0x435bcfa9],ebx
  4012c4:	add    BYTE PTR [esi],bl
  4012c6:	bound  esi,QWORD PTR [ebx]
  4012c8:	into   
  4012c9:	sbb    BYTE PTR [eax],dh
  4012cb:	inc    eax
  4012cc:	stos   DWORD PTR es:[edi],eax
  4012cd:	adc    al,0xa0
  4012cf:	pop    ss
  4012d0:	and    eax,0x8ae4cc1e
  4012d5:	cdq    
  4012d6:	jle    0x401299
  4012d8:	push   ecx
  4012d9:	scas   eax,DWORD PTR es:[edi]
  4012da:	call   0xebe0:0x91eb2058
  4012e1:	mov    dl,0x4c
  4012e3:	mov    al,bh
  4012e5:	dec    ebx
  4012e6:	and    dh,0x48
  4012e9:	sbb    al,0x65
  4012eb:	adc    eax,0xda2da788
  4012f0:	sub    ebp,DWORD PTR [edi+ebx*4]
  4012f3:	xchg   edi,eax
  4012f4:	jb     0x40130c
  4012f6:	(bad)  
  4012f8:	mov    fs,WORD PTR es:[edi+edi*1+0x4e]
  4012fd:	loopne 0x401328
  4012ff:	adc    eax,0xfa43ea40
  401304:	int    0x60
  401306:	xor    eax,0x6af3890c
  40130b:	sub    al,0x99
  40130d:	cmp    DWORD PTR [ebx],ebx
  40130f:	jl     0x401315
  401311:	mov    edi,0xc4b5d809
  401316:	cld    
  401317:	sub    edi,DWORD PTR [eax+eiz*8-0x2180e60a]
  40131e:	mov    ch,BYTE PTR [eax]
  401320:	xchg   esi,eax
  401321:	ds xchg ah,dh
  401324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401325:	jge    0x401399
  401327:	int3   
  401328:	call   0x8683:0x5c2b1f8a
  40132f:	mov    dh,0x56
  401331:	xchg   ecx,eax
  401332:	hlt    
  401333:	aaa    
  401334:	fcomip st,st(6)
  401336:	pop    ecx
  401337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401338:	xchg   DWORD PTR [eax+0x71],ebx
  40133b:	mov    ecx,0xd4c5e923
  401340:	test   al,0x1
  401342:	mov    dh,0xc4
  401344:	int3   
  401345:	dec    eax
  401346:	es out dx,eax
  401348:	xchg   ebx,eax
  401349:	mov    eax,ds:0x630309d6
  40134e:	ins    BYTE PTR es:[edi],dx
  40134f:	adc    bh,BYTE PTR [eax]
  401351:	sub    DWORD PTR [edi+0x4bfe3335],esp
  401357:	push   ds
  401358:	xor    eax,0xda41bb3d
  40135d:	fimul  DWORD PTR [ecx-0x3e]
  401360:	mov    ecx,0x3e41ed62
  401365:	pop    ecx
  401366:	aas    
  401367:	jp     0x40131e
  401369:	and    eax,0xf799256
  40136e:	add    al,0x87
  401370:	inc    esi
  401371:	lahf   
  401372:	xor    BYTE PTR [ebx],dl
  401374:	arpl   WORD PTR [edx+0x39151e73],bp
  40137a:	add    DWORD PTR [eax],edx
  40137c:	dec    ebp
  40137d:	in     al,dx
  40137e:	jo     0x40130a
  401380:	xchg   edi,eax
  401381:	addr16 dec ecx
  401383:	push   ebx
  401384:	pop    es
  401385:	and    al,0x66
  401387:	jmp    0x40135f
  401389:	out    0x3,al
  40138b:	mov    dl,0xe9
  40138d:	je     0x401310
  40138f:	sbb    edi,DWORD PTR ds:0xfc1ed12a
  401395:	bound  eax,QWORD PTR [edi+0x3e5571d2]
  40139b:	inc    eax
  40139c:	mov    dl,BYTE PTR [eax]
  40139e:	shl    esi,cl
  4013a0:	daa    
  4013a1:	add    ecx,DWORD PTR [edx+0x7cbbbe13]
  4013a7:	jmp    0x401396
  4013a9:	or     esp,DWORD PTR [ebx+0x3f]
  4013ac:	push   ebp
  4013ad:	xchg   edx,eax
  4013ae:	and    ah,dl
  4013b0:	xchg   esi,eax
  4013b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013b2:	add    DWORD PTR [esp+edx*2],0xffffff95
  4013b6:	cmp    eax,0x6771a250
  4013bb:	div    edi
  4013bd:	jbe    0x401393
  4013bf:	sbb    DWORD PTR [ebp+0x40f1759a],0x1d3e4552
  4013c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013ca:	mov    ebx,0xcaaadefd
  4013cf:	loope  0x401443
  4013d1:	lds    edx,FWORD PTR [edx+0x31]
  4013d4:	jno    0x401403
  4013d6:	idiv   BYTE PTR [ebx-0xd]
  4013d9:	and    BYTE PTR [esi],ch
  4013db:	test   eax,0xc47a8c9e
  4013e0:	in     al,dx
  4013e1:	popf   
  4013e2:	popf   
  4013e3:	jge    0x401400
  4013e5:	jnp    0x40140d
  4013e7:	aas    
  4013e8:	fmul   QWORD PTR [ecx+0x63]
  4013eb:	aad    0x53
  4013ed:	jbe    0x4013d0
  4013ef:	aaa    
  4013f0:	inc    edx
  4013f1:	bound  eax,QWORD PTR [edi+ebx*4]
  4013f4:	mov    esp,0x5b327517
  4013f9:	(bad)  
  4013fa:	or     al,0x27
  4013fc:	icebp  
  4013fd:	mov    ebp,0x61fdde3b
  401402:	retf   
  401403:	jb     0x401456
  401405:	test   al,0x5
  401407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401408:	sar    DWORD PTR [ebx-0x3120933d],cl
  40140e:	xor    BYTE PTR [edx-0x39],0x74
  401412:	push   edx
  401413:	sbb    DWORD PTR [esi],ebp
  401415:	inc    esp
  401416:	pop    ss
  401417:	clc    
  401418:	rcr    DWORD PTR [eax],0x81
  40141b:	mov    bh,BYTE PTR [edi]
  40141d:	or     al,0x84
  40141f:	outs   dx,BYTE PTR ds:[esi]
  401420:	(bad)  
  401421:	lods   al,BYTE PTR ds:[esi]
  401422:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401423:	sub    bl,dh
  401425:	fidivr DWORD PTR [ebp-0x11bfba92]
  40142b:	out    dx,eax
  40142c:	test   BYTE PTR [ebx-0x34],ah
  40142f:	daa    
  401430:	push   cs
  401431:	adc    esp,DWORD PTR [eax+ebx*2+0x33]
  401435:	stc    
  401436:	xchg   ecx,eax
  401437:	mov    eax,0x987612ff
  40143c:	sbb    ah,BYTE PTR [esi+0x3e50c944]
  401442:	or     eax,0x71c87684
  401447:	fwait
  401448:	ins    DWORD PTR es:[edi],dx
  401449:	in     al,dx
  40144a:	sbb    cl,BYTE PTR [esi]
  40144c:	pusha  
  40144d:	mov    DWORD PTR [ecx+eax*1+0x16df85e6],esi
  401454:	scas   al,BYTE PTR es:[edi]
  401455:	mov    DWORD PTR [edi],esp
  401457:	shl    BYTE PTR [edi+0x43539db3],cl
  40145d:	push   es
  40145e:	xor    eax,0x8dc53fb1
  401463:	dec    eax
  401464:	jbe    0x4014d0
  401466:	scas   eax,DWORD PTR es:[edi]
  401467:	lahf   
  401468:	in     al,0x5b
  40146a:	xchg   ebp,eax
  40146b:	and    al,0x71
  40146d:	adc    ebp,edi
  40146f:	and    al,0xc6
  401471:	push   ecx
  401472:	rcr    BYTE PTR [edi-0x3b],1
  401475:	push   0x350d44aa
  40147a:	sbb    ebx,0xffffffb8
  40147d:	lock jmp 0x4014ed
  401480:	push   edx
  401481:	lds    ebx,FWORD PTR [ebx+0x2c05070]
  401487:	push   ecx
  401488:	push   0x9aa9bcbe
  40148d:	pmulhw mm7,QWORD PTR [esi-0xf1894e2]
  401494:	xchg   DWORD PTR [esi-0x35],ecx
  401497:	or     al,0x6
  401499:	and    DWORD PTR [edx],ecx
  40149b:	or     al,0xb4
  40149d:	xlat   BYTE PTR ds:[ebx]
  40149e:	jo     0x4014e2
  4014a0:	or     ebx,edx
  4014a2:	cmp    bl,BYTE PTR [ebp+0xb]
  4014a5:	sbb    DWORD PTR ds:[ebp-0x13],esi
  4014a9:	ret    
  4014aa:	lock mov eax,ds:0x76551619
  4014b0:	and    al,0x92
  4014b2:	mov    eax,0xb6354e32
  4014b7:	adc    ch,bh
  4014b9:	mov    ebx,0xdf1590f5
  4014be:	les    ebx,FWORD PTR [edi+edi*8-0x9b0af7a]
  4014c5:	xor    al,0xe8
  4014c7:	shl    BYTE PTR [eax-0x1345eff3],0x9f
  4014ce:	stos   DWORD PTR es:[edi],eax
  4014cf:	pop    edi
  4014d0:	add    eax,0x482d99e8
  4014d5:	test   al,0x27
  4014d7:	fisttp QWORD PTR [eax]
  4014d9:	or     DWORD PTR [ebp-0x1],edi
  4014dc:	pop    ebp
  4014dd:	xor    eax,0xaa025b3a
  4014e2:	and    al,0x87
  4014e4:	jbe    0x401492
  4014e6:	lock loopne 0x4014f8
  4014e9:	cmp    esp,DWORD PTR [ebx]
  4014eb:	pop    edi
  4014ec:	ret    0xeca8
  4014ef:	cmp    BYTE PTR [edi+0x4cfa61c4],ch
  4014f5:	cs das 
  4014f7:	ss push ebx
  4014f9:	or     DWORD PTR [esi-0x19bf41ad],esp
  4014ff:	arpl   WORD PTR [eax+0x37],bp
  401502:	push   ebx
  401503:	loop   0x4014a0
  401505:	aas    
  401506:	stos   DWORD PTR es:[edi],eax
  401507:	mov    al,ds:0xef9c5ae5
  40150c:	cli    
  40150d:	mov    bh,BYTE PTR [ecx-0x62b19b02]
  401513:	fsubr  QWORD PTR [ebx+edi*4+0x37604b62]
  40151a:	dec    ebp
  40151b:	ins    BYTE PTR es:[edi],dx
  40151c:	add    al,0x53
  40151e:	stos   DWORD PTR es:[edi],eax
  40151f:	xchg   esi,eax
  401520:	push   0x75
  401522:	adc    DWORD PTR [esi+0x7b],edx
  401525:	arpl   WORD PTR [eiz*4-0x52133cc],bp
  40152c:	cld    
  40152d:	test   DWORD PTR [ecx-0x5e848ed6],esi
  401533:	push   ebp
  401534:	mov    dl,0x98
  401536:	gs out 0xcf,eax
  401539:	out    0xd,al
  40153b:	push   es
  40153c:	mov    ?,esi
  40153e:	pop    ds
  40153f:	pop    edi
  401540:	sar    BYTE PTR [ecx],1
  401542:	jae    0x40153e
  401544:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401545:	fld    TBYTE PTR [ecx+0x4b]
  401548:	pop    ecx
  401549:	xor    BYTE PTR [ebx],0xa6
  40154c:	jne    0x4014db
  40154e:	dec    edi
  40154f:	mov    edx,0x1089da04
  401554:	dec    esi
  401555:	pop    edx
  401556:	outs   dx,DWORD PTR ds:[esi]
  401557:	enter  0x1739,0x7b
  40155b:	xor    al,0xbf
  40155d:	mov    esp,0x1e148118
  401562:	jl     0x401562
  401564:	mov    ebp,0xcf87c198
  401569:	mov    dl,dh
  40156b:	and    DWORD PTR [edx+0x59a9a9e1],ebp
  401571:	mov    WORD PTR [esi],ds
  401573:	out    0x86,eax
  401575:	mov    ecx,0xb188c8a8
  40157a:	xor    ah,ah
  40157c:	and    al,0xc2
  40157e:	and    eax,0x915e130d
  401583:	loop   0x4015b6
  401585:	inc    eax
  401586:	pop    edx
  401587:	fnstenv [eax]
  401589:	dec    ecx
  40158a:	gs pop ds
  40158c:	repnz xchg ebp,eax
  40158e:	dec    ebp
  40158f:	dec    esp
  401590:	idiv   BYTE PTR [esi+0x6f]
  401593:	(bad)
  401596:	inc    ebx
  401597:	inc    ebp
  401598:	cmp    eax,0x4e898f39
  40159d:	xlat   BYTE PTR ds:[ebx]
  40159e:	addr16 mov esi,0x64958d1e
  4015a4:	dec    edi
  4015a5:	mov    dh,0xcb
  4015a7:	test   DWORD PTR [eax+ebp*1+0x79929408],ebx
  4015ae:	lds    eax,FWORD PTR [ebx-0x4f]
  4015b1:	mov    dl,0x64
  4015b3:	leave  
  4015b4:	pop    ss
  4015b5:	ins    DWORD PTR es:[edi],dx
  4015b6:	(bad)  
  4015b7:	out    0x6f,al
  4015b9:	rcr    DWORD PTR [ecx],0xe5
  4015bc:	inc    edx
  4015bd:	mov    WORD PTR [eax+esi*4-0x63dc234],cs
  4015c4:	xlat   BYTE PTR ds:[ebx]
  4015c5:	enter  0x1c4d,0xf2
  4015c9:	stc    
  4015ca:	dec    ebx
  4015cb:	sahf   
  4015cc:	push   esi
  4015cd:	fadd   QWORD PTR [eax+0x7f]
  4015d0:	jo     0x4015ce
  4015d2:	add    BYTE PTR [ecx],ch
  4015d4:	sbb    BYTE PTR ds:0xed247221,cl
  4015da:	leave  
  4015db:	mov    eax,ds:0xcaa14ec7
  4015e0:	mov    cl,0xd9
  4015e2:	fwait
  4015e3:	lea    esp,ds:0x98efd58
  4015e9:	or     esi,DWORD PTR [edx]
  4015eb:	xor    al,0xb7
  4015ed:	mov    ecx,0x4b55d2fc
  4015f2:	dec    edi
  4015f3:	ins    DWORD PTR es:[edi],dx
  4015f4:	add    ebp,0xffffffb5
  4015f7:	jne    0x401593
  4015f9:	ss push eax
  4015fc:	push   esp
  4015fd:	mov    ds:0xe61a8a9,al
  401602:	dec    esi
  401603:	lds    edx,FWORD PTR [edx-0x32]
  401606:	sbb    al,0xd7
  401608:	mov    eax,0xa6c7bb41
  40160d:	mov    cl,0x7e
  40160f:	test   eax,0xdd874d23
  401614:	sbb    edi,ebx
  401616:	sub    eax,edx
  401618:	cmc    
  401619:	cmp    al,0x1e
  40161b:	cmc    
  40161c:	xlat   BYTE PTR ds:[ebx]
  40161d:	sub    DWORD PTR [ecx+eiz*4],ebp
  401620:	data16 js 0x4015ab
  401623:	and    eax,0xae648f2b
  401628:	mov    edi,0x99249f72
  40162d:	mov    ds:0xea191ec9,al
  401632:	or     eax,0x46879701
  401637:	test   eax,0x39d3e1c5
  40163c:	fbstp  TBYTE PTR [ebx+0x2f]
  40163f:	cmp    edi,ebp
  401641:	into   
  401642:	xor    edi,edx
  401644:	and    ebx,DWORD PTR [edx+0x77]
  401647:	repz mov eax,0x6ae17b58
  40164d:	fwait
  40164e:	popf   
  40164f:	cwde   
  401650:	das    
  401651:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401652:	fcom   QWORD PTR [eax+0x18]
  401655:	sbb    ebp,DWORD PTR [ecx-0x5ea51d48]
  40165b:	add    DWORD PTR [ebx],0x4d
  40165e:	lea    eax,ds:0xf53ee541
  401664:	dec    edx
  401665:	pop    es
  401666:	jle    0x4016e1
  401668:	(bad)  
  401669:	dec    edx
  40166a:	xor    BYTE PTR [esi-0x1f862418],dh
  401670:	mov    ebp,0x73bf44ab
  401675:	pop    ebp
  401676:	or     BYTE PTR [edi+edx*1+0x45522bc3],bh
  40167d:	pushf  
  40167e:	mov    ecx,eax
  401680:	call   0x7ad61bb8
  401685:	shr    DWORD PTR [ecx+0x21],0xa1
  401689:	xor    bl,BYTE PTR [ebp+edx*1-0x14]
  40168d:	push   ds
  40168e:	and    ch,bh
  401690:	dec    ebp
  401691:	mov    ch,0x1b
  401693:	jnp    0x4016ae
  401695:	enter  0xdbf3,0xf5
  401699:	sub    BYTE PTR [esp+esi*8],dl
  40169c:	loope  0x4016c6
  40169e:	cmp    BYTE PTR [ebx+eiz*8+0x48],bh
  4016a2:	retf   
  4016a3:	and    eax,0xfca4f05f
  4016a8:	push   ecx
  4016a9:	es cmp al,0x6f
  4016ac:	dec    eax
  4016ad:	js     0x4016d0
  4016af:	sub    ecx,0x8
  4016b2:	push   eax
  4016b3:	bound  edi,QWORD PTR [eax+ecx*2+0x6cab8d29]
  4016ba:	and    ch,BYTE PTR [esi]
  4016bc:	aaa    
  4016bd:	pushf  
  4016be:	in     al,0x4e
  4016c0:	loopne 0x4016cd
  4016c2:	bound  esp,QWORD PTR [ebp+0x72faa4f6]
  4016c8:	ficom  WORD PTR [ecx]
  4016ca:	loope  0x4016b0
  4016cc:	inc    ecx
  4016cd:	retfw  0xb964
  4016d1:	push   es
  4016d2:	(bad)  
  4016d3:	mov    cl,0x5a
  4016d5:	dec    ecx
  4016d6:	inc    esp
  4016d7:	scas   al,BYTE PTR es:[edi]
  4016d8:	push   eax
  4016d9:	mov    dh,0xd7
  4016db:	xchg   ebx,eax
  4016dc:	jmp    DWORD PTR [esi+ebx*2]
  4016df:	lds    esi,FWORD PTR [ecx]
  4016e1:	xchg   edi,eax
  4016e2:	data16 sahf 
  4016e4:	or     al,BYTE PTR [esp+eiz*8-0x26ab63c7]
  4016eb:	(bad)  
  4016ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016ee:	mov    bl,0x99
  4016f0:	ss shl edx,1
  4016f3:	mov    ch,0x7c
  4016f5:	pop    edi
  4016f6:	mov    dh,0xd4
  4016f8:	mov    ds:0x484bcee9,eax
  4016fd:	mov    ecx,0xd17d23f7
  401702:	shr    BYTE PTR [eiz*8+0x7c9076b],0x1b
  40170a:	xor    eax,0x9990137f
  40170f:	call   0xa8dd3ddf
  401714:	repnz (bad) 
  401716:	mov    ebp,0x75197bc2
  40171b:	shr    BYTE PTR [eax+ebx*1-0x1a18f6ad],1
  401722:	or     bh,ch
  401724:	out    0x96,al
  401726:	push   eax
  401727:	ins    BYTE PTR es:[edi],dx
  401728:	ret    
  401729:	aaa    
  40172a:	shr    ebp,1
  40172c:	mov    edx,0x6b38bce4
  401731:	sbb    eax,DWORD PTR [edi+0x4c]
  401734:	addr16 xchg ebp,ebx
  401737:	shl    DWORD PTR [ecx+0x33],cl
  40173a:	or     cl,BYTE PTR [ebp-0x4e5c1aee]
  401740:	xor    al,dl
  401742:	or     bh,ch
  401744:	jg     0x4016eb
  401746:	xchg   edx,eax
  401747:	mov    al,0x74
  401749:	clc    
  40174a:	call   0x93d:0x2462ec0
  401751:	mov    al,ds:0xf34d916d
  401756:	sahf   
  401757:	sub    eax,0x58695ca0
  40175c:	mov    al,ds:0xac9f972d
  401761:	xchg   esp,eax
  401762:	icebp  
  401763:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401764:	push   ss
  401765:	adc    ebx,esp
  401767:	mov    edi,0xeacd2b1a
  40176c:	(bad)  
  40176d:	adc    edx,DWORD PTR [esp+edi*8]
  401770:	sbb    eax,0x4fadcd42
  401775:	jle    0x401715
  401777:	repz test DWORD PTR [edi+0x383b80f9],esi
  40177e:	lea    ecx,[edx-0x4d683c57]
  401784:	call   0x6013:0xef2bbca3
  40178b:	mov    eax,ds:0x90f5ce19
  401790:	cmp    cl,0xa7
  401793:	fnstenv fs:[ebp-0x38]
  401797:	retf   
  401798:	fld    TBYTE PTR [edi+ebp*4+0x2a2bd0fe]
  40179f:	call   0xb34:0xcca2cf63
  4017a6:	cwde   
  4017a7:	rcr    DWORD PTR [esi+0x6a2624e0],cl
  4017ad:	add    eax,0x3f2e36fe
  4017b2:	arpl   WORD PTR [ecx-0x4437f1a6],bp
  4017b8:	xchg   ecx,eax
  4017b9:	mov    ds:0x21dea1dd,al
  4017be:	sbb    BYTE PTR [eax-0x25],al
  4017c1:	lahf   
  4017c2:	pop    DWORD PTR [esi+0x2c743072]
  4017c8:	call   0xb8a47698
  4017cd:	clc    
  4017ce:	mov    esi,0x75f3a08f
  4017d3:	out    dx,eax
  4017d4:	out    0x32,al
  4017d6:	cs jb  0x4017bf
  4017d9:	mov    edi,0x45687807
  4017de:	mov    esi,DWORD PTR [ecx-0x642a55a5]
  4017e4:	mov    bl,0x82
  4017e6:	or     BYTE PTR [ecx-0x7d],ah
  4017e9:	(bad)  
  4017ea:	test   eax,0xf9560688
  4017ef:	push   ebp
  4017f0:	push   edx
  4017f1:	cmp    edx,DWORD PTR [ecx]
  4017f3:	js     0x401796
  4017f5:	data16 mov bh,0xf
  4017f8:	sbb    al,0x62
  4017fa:	add    dh,BYTE PTR [esi+0x15]
  4017fd:	imul   edi,DWORD PTR cs:[esi+0x35a1b7aa],0xffffffec
  401805:	arpl   WORD PTR [edx+edx*4-0x29],si
  401809:	call   DWORD PTR [eax+0x5ed4a052]
  40180f:	(bad)  
  401811:	(bad)  
  401812:	dec    esi
  401813:	inc    ecx
  401814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401815:	in     al,dx
  401816:	ins    BYTE PTR es:[di],dx
  401818:	dec    ebx
  401819:	sqrtps xmm7,XMMWORD PTR [ecx+0x1a]
  40181d:	iret   
  40181e:	mov    eax,0x7bf9b2a6
  401823:	pop    esi
  401824:	jmp    0x8040eed
  401829:	mov    edi,0xa5633940
  40182e:	xlat   BYTE PTR ds:[ebx]
  40182f:	ja     0x401824
  401831:	sub    dl,ah
  401833:	push   0x70c2df7e
  401838:	fisttp QWORD PTR [eax]
  40183a:	retw   0x4d52
  40183e:	(bad)  
  40183f:	(bad)  
  401840:	mov    ah,0xa1
  401842:	lds    edi,FWORD PTR [ebp+0x10]
  401845:	dec    esi
  401846:	xchg   ebx,eax
  401847:	cli    
  401848:	adc    DWORD PTR [esp+ebp*2],ecx
  40184b:	dec    esp
  40184c:	dec    eax
  40184d:	aas    
  40184e:	mov    ch,0x4d
  401850:	mov    bl,bh
  401852:	cmc    
  401853:	mov    al,es:0x1ef15e8a
  401859:	daa    
  40185a:	inc    eax
  40185b:	aad    0x32
  40185d:	sub    al,bl
  40185f:	inc    esi
  401860:	mov    cl,0x7f
  401862:	jmp    0x4018bf
  401864:	adc    eax,0xc1bf4ec8
  401869:	mov    edx,0x8c79c8b4
  40186e:	mov    esp,0x9a220608
  401873:	sub    bl,ah
  401875:	inc    ecx
  401876:	fwait
  401877:	or     ebx,DWORD PTR [edi]
  401879:	test   DWORD PTR [ebx-0x2547d162],ecx
  40187f:	jle    0x40189c
  401881:	imul   ecx,ebx,0x7e
  401884:	dec    ecx
  401885:	in     al,dx
  401886:	out    0xa4,al
  401888:	adc    edx,edx
  40188a:	xchg   ecx,eax
  40188b:	imul   eax,DWORD PTR [esi],0xd9cdf5a3
  401891:	test   BYTE PTR [eax-0x57],bl
  401894:	xor    eax,0xd4750603
  401899:	scas   al,BYTE PTR es:[edi]
  40189a:	sbb    bl,bh
  40189c:	outs   dx,DWORD PTR ds:[esi]
  40189e:	add    dh,BYTE PTR [ebp-0x62]
  4018a1:	xor    ecx,edx
  4018a3:	adc    edx,DWORD PTR [ebx]
  4018a5:	out    dx,eax
  4018a6:	or     BYTE PTR [edx-0x2ef51492],bh
  4018ac:	sar    DWORD PTR [ebx+edx*1+0x5c3d154],0x6a
  4018b4:	ja     0x4018c1
  4018b6:	pminub mm5,mm6
  4018b9:	mov    DWORD PTR [ecx],edi
  4018bb:	adc    al,0x54
  4018bd:	xchg   edx,eax
  4018be:	xchg   esi,eax
  4018bf:	mov    eax,ebx
  4018c1:	and    ebx,ecx
  4018c3:	adc    DWORD PTR [eax],ecx
  4018c5:	adc    al,0x4c
  4018c7:	push   ss
  4018c8:	xor    BYTE PTR [ebx+0x22],al
  4018cb:	add    esp,eax
  4018cd:	in     al,dx
  4018ce:	or     DWORD PTR [edx+0x7c],esp
  4018d1:	xchg   edx,eax
  4018d2:	fmul   DWORD PTR [edx+eiz*4-0x5b6d8c71]
  4018d9:	mov    ecx,0xf4c1f67f
  4018de:	dec    ebp
  4018df:	data16 jae 0x401918
  4018e2:	cmp    edx,esi
  4018e4:	in     al,0x95
  4018e6:	or     cl,cl
  4018e8:	mov    BYTE PTR [ebx-0x2c],ah
  4018eb:	pop    ecx
  4018ec:	pop    eax
  4018ed:	pop    ebp
  4018ee:	ret    
  4018ef:	push   0x61503fa
  4018f4:	sub    eax,0x5609d7e4
  4018f9:	inc    ebx
  4018fa:	enter  0x472b,0x1f
  4018fe:	(bad)  
  4018ff:	mov    ah,0x17
  401901:	adc    esi,edi
  401903:	and    bl,BYTE PTR [edi]
  401905:	jle    0x40188b
  401907:	jne    0x4018e4
  401909:	inc    ebx
  40190a:	xor    eax,0xc4627fcd
  40190f:	xchg   DWORD PTR [ecx+0x72],ecx
  401912:	pusha  
  401913:	push   es
  401914:	push   cs
  401915:	leave  
  401916:	pop    ebx
  401917:	(bad)  
  401918:	rcr    ch,0xe7
  40191b:	push   0xffffffb1
  40191d:	in     al,0x42
  40191f:	adc    dh,0x52
  401922:	dec    edx
  401923:	and    BYTE PTR [eax-0x13c6a098],bl
  401929:	retf   0x32a2
  40192c:	mov    al,0xe2
  40192e:	xor    ah,BYTE PTR [ecx]
  401930:	inc    esi
  401931:	pop    esp
  401932:	fld    TBYTE PTR [edx-0x6bcff9c9]
  401938:	loopne 0x40191d
  40193a:	rcr    edx,0x7b
  40193d:	mov    cl,0x5
  40193f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401940:	jl     0x4019b5
  401942:	cmp    DWORD PTR [edx+0x107412d9],ecx
  401948:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401949:	fimul  WORD PTR [esi+0x218ee69a]
  40194f:	aaa    
  401950:	ss in  eax,dx
  401952:	xchg   ebx,eax
  401953:	ins    DWORD PTR es:[edi],dx
  401954:	out    0xc1,eax
  401956:	cmp    eax,0x9e7cd4da
  40195b:	jle    0x4019b9
  40195d:	in     eax,dx
  40195e:	jo     0x4019d3
  401960:	cmp    eax,0xc62abbd3
  401965:	ror    DWORD PTR [ecx],1
  401967:	mov    dh,0xb5
  401969:	ins    BYTE PTR es:[edi],dx
  40196a:	imul   edx,DWORD PTR [edi],0x3034e61f
  401970:	inc    eax
  401971:	sbb    eax,0xd5344564
  401976:	iret   
  401977:	sti    
  401978:	daa    
  401979:	xlat   BYTE PTR ds:[ebx]
  40197a:	dec    esi
  40197b:	aas    
  40197c:	sbb    DWORD PTR [edi],ebx
  40197e:	mov    dh,0x66
  401980:	and    al,0x20
  401982:	dec    edi
  401983:	pop    ebx
  401984:	adc    edx,DWORD PTR [ebx-0x58509874]
  40198a:	stos   DWORD PTR es:[edi],eax
  40198b:	test   eax,0x1efc8cf8
  401990:	cwde   
  401991:	fcmovb st,st(4)
  401993:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401994:	inc    esp
  401995:	(bad)  
  401996:	fdiv   st,st(3)
  401998:	fwait
  401999:	xchg   ebx,eax
  40199a:	shr    DWORD PTR [esi-0x4bc35607],0x7a
  4019a1:	dec    ebx
  4019a2:	(bad)  
  4019a3:	adc    eax,DWORD PTR [eax+0x58]
  4019a6:	daa    
  4019a7:	pushf  
  4019a8:	cmp    eax,0x9b960d77
  4019ad:	stc    
  4019ae:	ins    BYTE PTR es:[edi],dx
  4019af:	push   esi
  4019b0:	mov    eax,ds:0x5ce2c475
  4019b5:	dec    ecx
  4019b6:	pop    ebp
  4019b7:	mov    ss,WORD PTR [eax-0x1d]
  4019ba:	in     al,dx
  4019bb:	mov    BYTE PTR [eax],bl
  4019bd:	mov    ?,WORD PTR [ebp-0xfbabdc8]
  4019c3:	xor    al,0xb4
  4019c5:	mov    ah,0xe5
  4019c7:	mov    ds:0x80bf8fea,eax
  4019cc:	or     eax,DWORD PTR [ebp+0x6e3665b9]
  4019d2:	sub    BYTE PTR [eax],bh
  4019d4:	xchg   edx,eax
  4019d5:	and    BYTE PTR [esi+ebx*4],dl
  4019d8:	add    eax,0x55eff6f3
  4019dd:	xchg   ebx,eax
  4019de:	push   0xffffff90
  4019e0:	(bad)  
  4019e1:	rcr    DWORD PTR [esi+0x3d],0x59
  4019e5:	inc    eax
  4019e6:	push   0xd220e9c6
  4019eb:	(bad)  
  4019ed:	sar    esp,cl
  4019ef:	mov    ebp,0x13b003a
  4019f4:	idiv   BYTE PTR [ebx+0x61a64a43]
  4019fa:	data16 mov WORD PTR [ebx],fs
  4019fd:	in     al,0xaf
  4019ff:	dec    esp
  401a00:	mov    ah,0x47
  401a02:	push   esp
  401a03:	ror    DWORD PTR [ebp+0x44],1
  401a06:	mov    dl,0xb1
  401a08:	fdivr  DWORD PTR [edi-0x26]
  401a0b:	sbb    BYTE PTR es:[ecx+0x1443f1d],bh
  401a12:	jmp    0x4019ba
  401a14:	pop    es
  401a15:	pusha  
  401a16:	mov    esi,0xb5f47643
  401a1b:	retf   0xe5cc
  401a1e:	pop    ecx
  401a1f:	loop   0x4019ae
  401a21:	call   0xfad5:0x7e537cc
  401a28:	cdq    
  401a29:	push   es
  401a2a:	add    al,0x26
  401a2c:	push   ebx
  401a2d:	sub    al,0xf0
  401a2f:	mov    esi,0xdfdf9193
  401a34:	pusha  
  401a35:	pushf  
  401a36:	dec    eax
  401a37:	cld    
  401a38:	fwait
  401a39:	in     eax,dx
  401a3a:	pop    ebp
  401a3b:	loope  0x401a2e
  401a3d:	es js  0x401a11
  401a40:	loopne 0x401a94
  401a42:	mov    edx,0x4a894de9
  401a47:	aam    0x54
  401a49:	test   al,0xe7
  401a4b:	call   0xbbd4:0xc499224c
  401a52:	jg     0x401a76
  401a54:	cmp    eax,0x2f769316
  401a59:	fld    QWORD PTR [edi-0x25]
  401a5c:	jge    0x401a34
  401a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a5f:	gs mov ch,0x53
  401a62:	in     al,0xfd
  401a64:	pop    ebp
  401a65:	or     eax,DWORD PTR [ecx+0x6a62f4da]
  401a6b:	inc    edx
  401a6c:	mov    edx,0xabdbb1c5
  401a71:	xor    DWORD PTR [eax],ebp
  401a73:	xor    al,0x6b
  401a75:	jp     0x401abe
  401a77:	call   0x91601a91
  401a7c:	adc    al,0x77
  401a7e:	shl    edi,cl
  401a80:	sub    edx,DWORD PTR [ecx+edx*1]
  401a83:	push   0xffffffbe
  401a85:	enter  0x20af,0x52
  401a89:	mov    edx,0x71c3a26f
  401a8e:	cdq    
  401a8f:	sbb    edi,ebp
  401a91:	test   BYTE PTR [esi-0x35],0x45
  401a95:	test   edx,edi
  401a97:	imul   esi,esp,0xea7b88f3
  401a9d:	mov    DWORD PTR [edi-0xb],ecx
  401aa0:	cmc    
  401aa1:	mov    esi,0x78768374
  401aa6:	sub    al,0xc4
  401aa8:	inc    eax
  401aa9:	fsubr  st(5),st
  401aab:	call   0xde48:0xe31fdd1d
  401ab2:	aam    0xad
  401ab4:	(bad)  
  401ab5:	inc    edi
  401ab6:	mov    ds:0xcb36d186,eax
  401abb:	add    ah,BYTE PTR [ebx]
  401abd:	or     DWORD PTR [ebx],ebp
  401abf:	scas   eax,DWORD PTR es:[edi]
  401ac0:	int3   
  401ac1:	ret    0x7f7e
  401ac4:	into   
  401ac5:	xor    al,0x5d
  401ac7:	jg     0x401a89
  401ac9:	cli    
  401aca:	sbb    bl,dh
  401acc:	sub    bl,BYTE PTR [ecx+ecx*2+0x78]
  401ad0:	pop    edx
  401ad1:	(bad)  
  401ad2:	mov    al,ds:0x4389e647
  401ad7:	(bad)  
  401ad8:	stos   DWORD PTR es:[edi],eax
  401ad9:	pop    ebp
  401ada:	and    BYTE PTR [ecx+esi*4],ch
  401add:	out    dx,eax
  401ade:	ds clc 
  401ae0:	rcl    esp,cl
  401ae2:	nop
  401ae3:	iret   
  401ae4:	dec    BYTE PTR [ebx-0x2a92f1c6]
  401aea:	lock xor cl,bl
  401aed:	retf   
  401aee:	pushf  
  401aef:	rcl    BYTE PTR [ecx-0x458df5a6],1
  401af5:	daa    
  401af6:	sub    eax,0x8ca6dea9
  401afb:	in     al,dx
  401afc:	pop    DWORD PTR [edi-0x359a8530]
  401b02:	xchg   ebx,eax
  401b03:	jno    0x401a9c
  401b05:	loopne 0x401abe
  401b07:	xlat   BYTE PTR ds:[ebx]
  401b08:	ins    DWORD PTR es:[edi],dx
  401b09:	cmp    DWORD PTR [eax+0x1],ecx
  401b0c:	sbb    eax,0x36e52168
  401b11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b12:	push   eax
  401b13:	fwait
  401b14:	mov    ah,0xf1
  401b16:	xchg   edi,eax
  401b17:	popa   
  401b18:	out    0x4d,al
  401b1a:	out    0x3a,al
  401b1c:	repz loope 0x401b54
  401b1f:	pop    esi
  401b20:	or     al,0x37
  401b22:	mov    ecx,0x8939987a
  401b27:	and    BYTE PTR [ecx],al
  401b29:	xor    bl,al
  401b2b:	xchg   edx,ecx
  401b2d:	fwait
  401b2e:	sub    esp,esi
  401b30:	nop
  401b31:	(bad)  
  401b32:	fwait
  401b33:	xchg   ch,ch
  401b35:	xor    al,0x2b
  401b37:	jmp    0x2164:0xa13660c2
  401b3e:	sbb    ecx,ebp
  401b40:	stos   BYTE PTR es:[edi],al
  401b41:	rol    BYTE PTR [eax-0x412a73],cl
  401b47:	popa   
  401b48:	lahf   
  401b49:	ret    0x6ff4
  401b4c:	stc    
  401b4d:	mov    ebp,0xebcbbda6
  401b52:	int3   
  401b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b54:	dec    esp
  401b55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b56:	xchg   esp,eax
  401b57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b58:	std    
  401b59:	cmc    
  401b5a:	jb     0x401b1c
  401b5c:	cli    
  401b5d:	es into 
  401b5f:	ins    BYTE PTR es:[edi],dx
  401b60:	sti    
  401b61:	pop    eax
  401b62:	mov    al,0x6b
  401b64:	(bad)  
  401b67:	xchg   ebp,eax
  401b68:	xor    BYTE PTR [ecx],0x6a
  401b6b:	mul    BYTE PTR [edx-0x30b46f56]
  401b71:	jne    0x401bcf
  401b73:	mov    al,ds:0xeece9607
  401b78:	cmp    al,0xd8
  401b7a:	fsubp  st(1),st
  401b7c:	push   esi
  401b7d:	xchg   ebp,eax
  401b7e:	gs inc esi
  401b80:	mov    WORD PTR [esi-0x1c19359f],?
  401b86:	fwait
  401b87:	adc    bh,al
  401b89:	sbb    eax,0xe4098090
  401b8e:	push   ds
  401b8f:	or     BYTE PTR [ecx],dh
  401b91:	mov    al,ds:0xc10f3fe8
  401b96:	mul    BYTE PTR [ebp-0x28f69e52]
  401b9c:	lahf   
  401b9d:	sbb    ebp,DWORD PTR [ecx-0x2d2c57d8]
  401ba3:	or     DWORD PTR [edx+0x77230c83],ecx
  401ba9:	and    eax,0xecae30ea
  401bae:	or     eax,0x395934b9
  401bb3:	mov    bl,0x53
  401bb5:	lea    edx,[esi-0xa8b75c4]
  401bbb:	xor    DWORD PTR [ecx+eax*1],ecx
  401bbe:	adc    ch,BYTE PTR [edx]
  401bc0:	push   eax
  401bc1:	or     eax,0xd6c2fbed
  401bc6:	call   0xe818:0x84b4c583
  401bcd:	xchg   ebx,eax
  401bce:	pop    edi
  401bcf:	scas   eax,DWORD PTR es:[edi]
  401bd0:	jecxz  0x401b78
  401bd2:	xor    edx,0x3b
  401bd5:	mov    esp,0x9a109703
  401bda:	or     al,0xee
  401bdc:	in     al,0x93
  401bde:	in     eax,dx
  401bdf:	push   0xdef5adec
  401be4:	sbb    al,0xa0
  401be6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401be7:	sbb    al,0x2c
  401be9:	or     al,0x42
  401beb:	jo     0x401bf4
  401bed:	jne    0x401bff
  401bef:	cdq    
  401bf0:	shl    BYTE PTR [edi],cl
  401bf2:	jae    0x401b92
  401bf4:	dec    eax
  401bf5:	lods   eax,DWORD PTR ds:[esi]
  401bf6:	xchg   edi,eax
  401bf7:	(bad)  
  401bf8:	jnp    0x401bac
  401bfa:	stos   DWORD PTR es:[edi],eax
  401bfb:	mov    ecx,0x97eb18f5
  401c00:	adc    BYTE PTR [ecx],dh
  401c02:	adc    BYTE PTR [eax+eax*4],dl
  401c05:	cld    
  401c06:	mov    bh,0xd7
  401c08:	call   0x4c5d:0x9259bb9c
  401c0f:	mov    al,0x36
  401c11:	out    dx,al
  401c12:	mov    cl,0xa9
  401c14:	mov    WORD PTR [edx+0x9],es
  401c17:	int3   
  401c18:	(bad)  [ebx+0x26]
  401c1b:	lods   eax,DWORD PTR ds:[esi]
  401c1c:	enter  0xe804,0x46
  401c20:	dec    ecx
  401c21:	aas    
  401c22:	sub    eax,0xa241d8c5
  401c27:	in     al,dx
  401c28:	sub    bl,BYTE PTR [ebx-0x6cbf7c67]
  401c2e:	fdivr  DWORD PTR [edi-0x521dd796]
  401c34:	pop    es
  401c35:	xchg   ebx,eax
  401c36:	xor    bl,BYTE PTR ds:0x1e212dd9
  401c3c:	aad    0x6d
  401c3e:	add    edi,DWORD PTR [eax+0x7f8a4ab3]
  401c44:	cmp    ecx,0x53
  401c47:	popf   
  401c48:	into   
  401c49:	sysexit 
  401c4b:	push   0x66
  401c4d:	idiv   DWORD PTR [esi+0x43]
  401c50:	mov    ds,WORD PTR [esi]
  401c52:	hlt    
  401c53:	mov    ds,ebx
  401c55:	jmp    0xa93161cd
  401c5a:	leave  
  401c5b:	push   ebp
  401c5c:	add    DWORD PTR [edi+0x4fbd0ca],esp
  401c62:	jmp    0x401cc6
  401c64:	jg     0x401cd8
  401c66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c67:	jl     0x401c15
  401c69:	add    al,0xff
  401c6b:	repnz mov ds:0xe5b002e8,eax
  401c71:	push   edi
  401c72:	cdq    
  401c73:	dec    edi
  401c74:	inc    edi
  401c75:	add    BYTE PTR [edx],bl
  401c77:	loopne 0x401cc9
  401c79:	jecxz  0x401cbc
  401c7b:	xor    dh,0x4b
  401c7e:	mov    bl,0x9a
  401c80:	sub    al,0xaf
  401c82:	mov    esp,0xc60d9f98
  401c87:	retf   
  401c88:	popf   
  401c89:	ror    DWORD PTR [eax],0x8a
  401c8c:	jbe    0x401c53
  401c8e:	inc    ebx
  401c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c90:	or     BYTE PTR [ebx+ebx*8-0x78edf714],al
  401c97:	outs   dx,DWORD PTR ds:[esi]
  401c98:	mov    cl,0x89
  401c9a:	stos   DWORD PTR es:[edi],eax
  401c9b:	jae    0x401c6f
  401c9d:	cdq    
  401c9e:	xchg   edi,eax
  401c9f:	push   ecx
  401ca0:	jnp    0x401c84
  401ca2:	icebp  
  401ca3:	aas    
  401ca4:	mov    ebp,0x40f739dd
  401ca9:	sahf   
  401caa:	inc    ebp
  401cab:	jno    0x401c90
  401cad:	or     ebx,esp
  401caf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401cb0:	inc    ebx
  401cb1:	jb     0x401c6a
  401cb3:	sbb    DWORD PTR [eax+0x55],esi
  401cb6:	pusha  
  401cb7:	push   ebp
  401cb8:	jg     0x401cd2
  401cba:	popa   
  401cbb:	std    
  401cbc:	jo     0x401ca7
  401cbe:	jae    0x401c86
  401cc0:	sbb    eax,0xe51847fa
  401cc5:	(bad)  
  401cc6:	mov    edx,0x1ddca56a
  401ccb:	xlat   BYTE PTR ds:[ebx]
  401ccc:	mov    edi,esp
  401cce:	es iret 
  401cd0:	addr16 xor dl,ah
  401cd3:	inc    eax
  401cd4:	sbb    BYTE PTR [ecx],bh
  401cd6:	mov    ch,0x63
  401cd8:	mov    al,BYTE PTR [edx-0x45]
  401cdb:	shr    DWORD PTR [ebx],cl
  401cdd:	pusha  
  401cde:	jmp    FWORD PTR [esi]
  401ce0:	stc    
  401ce1:	das    
  401ce2:	or     BYTE PTR [edx+ebp*1],dl
  401ce5:	nop
  401ce6:	mov    esi,0xbaa94151
  401ceb:	in     eax,0x13
  401ced:	adc    eax,0xee715729
  401cf2:	jnp    0x401cc8
  401cf4:	pop    ss
  401cf5:	xchg   edx,eax
  401cf6:	adc    DWORD PTR [ecx+0x70],eax
  401cf9:	xor    BYTE PTR [ebp-0x292fbda3],dh
  401cff:	xchg   esp,eax
  401d00:	pop    edi
  401d01:	mov    dh,BYTE PTR [ebx]
  401d03:	in     al,0x2
  401d05:	jp     0x401d06
  401d07:	scas   al,BYTE PTR es:[edi]
  401d08:	lea    esp,[edi]
  401d0a:	shl    BYTE PTR [ebx],cl
  401d0c:	repnz push 0xffffffb0
  401d0f:	xor    eax,ebx
  401d11:	xchg   ebp,eax
  401d12:	stos   BYTE PTR es:[edi],al
  401d13:	and    al,0xf0
  401d15:	scas   al,BYTE PTR es:[edi]
  401d16:	inc    ebx
  401d17:	ss jmp 0xe569:0x8a9c57d4
  401d1f:	mov    ebx,0x521b3626
  401d24:	sbb    ch,ah
  401d26:	popa   
  401d27:	(bad)  
  401d28:	xchg   ebx,eax
  401d29:	(bad)  
  401d2a:	cwde   
  401d2b:	inc    ecx
  401d2c:	xor    edx,edx
  401d2e:	or     edx,esi
  401d30:	(bad)  
  401d31:	call   0xcf59:0xeed0b700
  401d38:	pop    es
  401d39:	push   0xffffffa3
  401d3b:	test   DWORD PTR [ecx-0x23],eax
  401d3e:	(bad)  
  401d3f:	jne    0x401d1c
  401d41:	mov    al,ds:0x5f6dec79
  401d46:	adc    al,al
  401d48:	ror    DWORD PTR [edx],cl
  401d4a:	inc    esi
  401d4b:	stc    
  401d4c:	xchg   DWORD PTR [esi],esi
  401d4e:	cmp    BYTE PTR [eax],ah
  401d50:	xor    ebx,DWORD PTR [ecx]
  401d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d54:	jns    0x401db8
  401d56:	xchg   edx,eax
  401d57:	lds    ebp,FWORD PTR ds:0x2fbf25a9
  401d5d:	pop    esp
  401d5e:	in     eax,0xfd
  401d60:	pop    edx
  401d61:	add    ch,bl
  401d63:	push   ebx
  401d64:	stos   BYTE PTR es:[edi],al
  401d65:	(bad)  
  401d66:	jo     0x401d54
  401d68:	out    dx,al
  401d69:	ss inc esi
  401d6b:	xchg   DWORD PTR [esp+edx*4+0x67bb57e4],ebp
  401d72:	jmp    0x401dc8
  401d74:	cld    
  401d75:	inc    ecx
  401d76:	rol    dh,1
  401d78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d79:	in     al,dx
  401d7a:	xchg   esp,eax
  401d7b:	sahf   
  401d7c:	test   BYTE PTR [edi],0xf0
  401d7f:	int    0xa8
  401d81:	fmul   QWORD PTR [ecx+ecx*2+0x1d5b958d]
  401d88:	jge    0x401d9d
  401d8a:	cmp    BYTE PTR [eax+0x5b9681eb],bl
  401d90:	adc    ch,BYTE PTR [edx+eax*1-0x7ad9afcb]
  401d97:	add    DWORD PTR [edx+0x64224bfe],ecx
  401d9d:	mov    ss,WORD PTR [eax]
  401d9f:	jnp    0x401d3a
  401da1:	aam    0xed
  401da3:	push   edi
  401da4:	sub    al,0x3b
  401da6:	gs mov edx,0xe44ca3bb
  401dac:	lea    esi,[edi-0x32035203]
  401db2:	adc    cl,BYTE PTR [eax-0x557efc3e]
  401db8:	jo     0x401d61
  401dba:	adc    BYTE PTR [esi+0x7e],al
  401dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dbe:	mov    al,ds:0x8c3864be
  401dc3:	call   0x597e:0x697ae319
  401dca:	shl    DWORD PTR [eax-0x30],cl
  401dcd:	push   edx
  401dce:	int3   
  401dcf:	mov    eax,ds:0x64312254
  401dd4:	retf   
  401dd5:	dec    esp
  401dd6:	inc    ebp
  401dd7:	fcmovb st,st(6)
  401dd9:	bound  esp,QWORD PTR ds:[esi-0x7d]
  401ddd:	ss sub al,0x16
  401de0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401de1:	jecxz  0x401d68
  401de3:	je     0x401d96
  401de5:	xchg   BYTE PTR [ebp+0x7f],bh
  401de8:	enter  0x629f,0x6
  401dec:	je     0x401e52
  401dee:	add    DWORD PTR [ecx],eax
  401df0:	stos   DWORD PTR es:[edi],eax
  401df1:	lock cmp BYTE PTR [ebx],al
  401df4:	sbb    al,0x7c
  401df6:	mov    eax,ds:0xaa3d5134
  401dfb:	or     eax,0xc67c4e76
  401e00:	xchg   edx,eax
  401e01:	mov    ecx,0x71b7ee30
  401e06:	lahf   
  401e07:	test   eax,0x9bb46a8a
  401e0c:	retf   0xf9ea
  401e0f:	mov    eax,ds:0xe8228d4e
  401e14:	in     al,0x56
  401e16:	f2xm1  
  401e18:	imul   ebx,DWORD PTR [ebx-0x4a37aa3a],0xffffff87
  401e1f:	inc    esp
  401e20:	sbb    BYTE PTR [ebx-0x5d4ce37],0xbf
  401e27:	mov    eax,ds:0xc92380e2
  401e2c:	and    esi,DWORD PTR [ecx+0x53]
  401e2f:	jle    0x401e2b
  401e31:	push   eax
  401e32:	daa    
  401e33:	int    0x89
  401e35:	std    
  401e36:	fwait
  401e37:	dec    esp
  401e38:	int3   
  401e39:	mov    ebp,0x225cf905
  401e3e:	inc    ecx
  401e3f:	fs pop eax
  401e41:	jne    0x401eb2
  401e43:	in     al,0x54
  401e45:	loop   0x401e6b
  401e47:	cmp    eax,0xb6667674
  401e4c:	ins    DWORD PTR es:[edi],dx
  401e4d:	imul   ebp,DWORD PTR [edx-0x2cb359af],0xffffffa7
  401e54:	pop    ebx
  401e55:	push   edx
  401e56:	adc    al,0xfe
  401e58:	and    ah,bh
  401e5a:	jle    0x401ebf
  401e5c:	into   
  401e5d:	mov    esp,0x9f4240f2
  401e62:	aaa    
  401e63:	mov    ah,BYTE PTR [edi+0x195908c]
  401e69:	push   eax
  401e6a:	dec    edi
  401e6b:	and    edx,ebx
  401e6d:	cdq    
  401e6e:	xor    BYTE PTR ds:0x82b58535,dh
  401e74:	mov    esi,0x5ff3e786
  401e79:	dec    ebx
  401e7a:	fwait
  401e7b:	mov    cl,0x3
  401e7d:	pop    edx
  401e7e:	xlat   BYTE PTR ds:[ebx]
  401e7f:	test   BYTE PTR [edx-0x3],bh
  401e82:	shl    esp,cl
  401e84:	je     0x401e2d
  401e86:	lahf   
  401e87:	pop    ebp
  401e88:	fs jo  0x401f00
  401e8b:	loope  0x401e85
  401e8d:	(bad)  
  401e8e:	leave  
  401e8f:	stos   BYTE PTR es:[edi],al
  401e90:	(bad)  
  401e91:	sti    
  401e92:	inc    esp
  401e93:	ins    BYTE PTR es:[edi],dx
  401e94:	addr16 mov esi,0x7d1c1324
  401e9a:	retf   0x6441
  401e9d:	call   0xa410:0x33db5d9e
  401ea4:	dec    ecx
  401ea5:	jb     0x401ef1
  401ea7:	adc    cl,bl
  401ea9:	xor    DWORD PTR [ecx],edx
  401eab:	adc    bl,dl
  401ead:	jge    0x401ee3
  401eaf:	mov    cs,WORD PTR ds:0xf909ac9a
  401eb5:	data16 loop 0x401e74
  401eb8:	icebp  
  401eb9:	cmp    BYTE PTR [esi+0x6e],ah
  401ebc:	lock ret 0x4c0b
  401ec0:	xchg   esi,eax
  401ec1:	xchg   ebx,eax
  401ec2:	scas   eax,DWORD PTR es:[edi]
  401ec3:	jmp    0x3ba6:0xe3c2b1a9
  401eca:	add    ah,bl
  401ecc:	imul   esi,DWORD PTR [ebx],0x3f
  401ecf:	imul   ebp,DWORD PTR ds:0x4f05a646,0xd05a19dc
  401ed9:	(bad)  
  401eda:	addr16 dec esi
  401edc:	push   0x8e13b973
  401ee1:	cli    
  401ee2:	lods   al,BYTE PTR ds:[esi]
  401ee3:	and    bh,dl
  401ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ee6:	add    al,0x35
  401ee8:	dec    esp
  401ee9:	mov    edx,0x6ce71d60
  401eee:	fist   DWORD PTR [edx+esi*8]
  401ef1:	and    al,0xc8
  401ef3:	mov    bl,0xc1
  401ef5:	xor    cl,dh
  401ef7:	dec    edi
  401ef8:	int3   
  401ef9:	xchg   edx,eax
  401efa:	xchg   ebp,eax
  401efb:	adc    dl,BYTE PTR [esi+0x5b]
  401efe:	mov    ds:0x5bdd6746,eax
  401f03:	mov    ds:0x5322b81f,eax
  401f08:	je     0x401f7f
  401f0a:	lahf   
  401f0b:	mov    es,WORD PTR [eax-0x14]
  401f0e:	iret   
  401f0f:	mov    ebx,0xf3c60f7a
  401f14:	and    al,0x21
  401f16:	cld    
  401f17:	or     BYTE PTR [ebx-0x3c221bed],0x9e
  401f1e:	addr16 mov cl,0x7d
  401f21:	mov    ebx,0x2b1f649c
  401f26:	leave  
  401f27:	aaa    
  401f28:	add    DWORD PTR [eax],edx
  401f2a:	imul   bp,WORD PTR [eax-0x641b530f],0xff9c
  401f32:	mov    bh,0x81
  401f34:	fisttp DWORD PTR [ecx]
  401f36:	mov    ecx,0x3e21ae9e
  401f3b:	adc    al,0xab
  401f3d:	daa    
  401f3e:	mov    cl,0xc1
  401f40:	sub    al,BYTE PTR [ebp+0x3e]
  401f43:	(bad)  
  401f44:	stc    
  401f45:	mov    eax,0x3939c83a
  401f4a:	mov    ecx,0x881aac59
  401f4f:	sub    BYTE PTR [esi-0x76],0x6c
  401f53:	add    eax,0xab6113a4
  401f58:	test   BYTE PTR [ecx],0xa2
  401f5b:	lds    esp,FWORD PTR [ecx-0x21]
  401f5e:	mov    cl,0x63
  401f60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f61:	stos   DWORD PTR es:[edi],eax
  401f62:	adc    esi,ecx
  401f64:	test   BYTE PTR [esi+0x899ea68],ah
  401f6a:	xor    ch,BYTE PTR [edi+0x4f6a3ee3]
  401f70:	ds retf 
  401f72:	mov    ah,0x73
  401f74:	fs mov esi,0x77c6cc0d
  401f7a:	(bad)  
  401f7b:	loop   0x401f05
  401f7d:	xor    al,0x49
  401f7f:	iret   
  401f80:	not    DWORD PTR [ebp-0x116e5227]
  401f86:	jne    0x401f23
  401f88:	xchg   esi,eax
  401f89:	fdivr  QWORD PTR [esi+0x50]
  401f8c:	lods   eax,DWORD PTR gs:[esi]
  401f8e:	not    eax
  401f90:	push   es
  401f91:	xor    DWORD PTR [ebx+0x77c61861],edi
  401f97:	mov    BYTE PTR [edx-0x15],dl
  401f9a:	(bad)  
  401f9b:	stc    
  401f9c:	in     eax,dx
  401f9d:	(bad)  
  401f9e:	and    eax,0xe92d5d1b
  401fa3:	mov    eax,0xaf03345a
  401fa8:	push   0x26
  401faa:	stos   DWORD PTR es:[edi],eax
  401fab:	(bad)  
  401fac:	mov    bh,0x95
  401fae:	icebp  
  401faf:	imul   esi,DWORD PTR [ebx+0x3d43903a],0x3510c155
  401fb9:	cmp    eax,DWORD PTR [ebp+0x49750fd]
  401fbf:	and    eax,DWORD PTR [esi]
  401fc1:	mov    esp,0x96b8890d
  401fc6:	out    0xd5,eax
  401fc8:	xchg   BYTE PTR [ebx],ah
  401fca:	push   0xe4f61321
  401fcf:	xchg   ecx,eax
  401fd0:	fdiv   QWORD PTR [esi-0x7f3f7cb3]
  401fd6:	push   0x7cb8ea7c
  401fdb:	xchg   esi,eax
  401fdc:	in     al,dx
  401fdd:	test   eax,0x502f6e67
  401fe2:	push   0xf
  401fe4:	stc    
  401fe5:	test   BYTE PTR [esi],dh
  401fe7:	iret   
  401fe8:	mov    ch,BYTE PTR [ecx]
  401fea:	xor    edx,edi
  401fec:	icebp  
  401fed:	std    
  401fee:	cmp    edi,eax
  401ff0:	push   ebp
  401ff1:	lods   eax,DWORD PTR ds:[esi]
  401ff2:	loope  0x401fef
  401ff4:	push   cs
  401ff5:	loopne 0x401ffe
  401ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ff8:	sbb    BYTE PTR [eax+0x2c4833dc],0xec
  401fff:	mov    dh,0x9d
  402001:	push   ecx
  402002:	inc    ebx
  402003:	jg     0x40207f
  402005:	mov    ebp,0x84cb1167
  40200a:	jle    0x402034
  40200c:	dec    esp
  40200d:	repz and ebp,edx
  402010:	cs jmp 0x4202dd90
  402016:	cmp    eax,0x92e964bd
  40201b:	out    dx,eax
  40201c:	jmp    0x13ea8175
  402021:	(bad)  
  402022:	xchg   esi,eax
  402023:	cdq    
  402024:	push   ebp
  402025:	dec    ecx
  402026:	iret   
  402027:	or     al,0x9b
  402029:	ret    
  40202a:	sub    ebx,DWORD PTR [eax+0x50]
  40202d:	test   al,0xb9
  40202f:	fdiv   DWORD PTR [ebp-0x7875846f]
  402035:	cs call 0xeeb9e9ff
  40203b:	mov    al,ds:0x7147702d
  402040:	rcr    cl,0x30
  402043:	out    0xcf,al
  402045:	and    esi,ebp
  402047:	mov    esi,0x2bd97a44
  40204c:	add    BYTE PTR [edi],bh
  40204e:	pop    ss
  40204f:	push   ebx
  402050:	rol    BYTE PTR [eax-0x39120bf2],cl
  402056:	rol    BYTE PTR [edi+0x7b2f69f7],0x67
  40205d:	test   eax,0x22c2dbac
  402062:	xor    BYTE PTR [edx+0x6f],0x3d
  402066:	js     0x402089
  402068:	xchg   BYTE PTR [ecx+0x4f],ch
  40206b:	jno    0x402053
  40206d:	xor    DWORD PTR [ecx-0x3],0xffffffe2
  402071:	and    esp,DWORD PTR [ebx+0x53026546]
  402077:	mov    esp,0x83571fe9
  40207c:	sbb    BYTE PTR [edx-0x69d6f1be],al
  402082:	inc    eax
  402083:	inc    esp
  402084:	push   ds
  402085:	rol    BYTE PTR [eax+0x10404c1d],1
  40208b:	sbb    BYTE PTR [eax],cl
  40208d:	sti    
  40208e:	in     al,dx
  40208f:	xchg   BYTE PTR [edi+eiz*2+0x71],bl
  402093:	mov    edi,0xd52d63a7
  402098:	test   al,0xd7
  40209a:	pop    esp
  40209b:	xchg   ebx,eax
  40209c:	ins    BYTE PTR es:[edi],dx
  40209d:	or     ch,dl
  40209f:	(bad)  
  4020a0:	cld    
  4020a1:	into   
  4020a2:	jg     0x4020f5
  4020a4:	hlt    
  4020a5:	jno    0x40204e
  4020a7:	and    esp,DWORD PTR ds:0x9f6b9bb1
  4020ad:	(bad)  
  4020ae:	clc    
  4020af:	dec    esp
  4020b0:	xor    dh,bl
  4020b2:	push   edx
  4020b3:	std    
  4020b4:	fldcw  WORD PTR [ebx+esi*8-0x30417c1d]
  4020bb:	pop    esp
  4020bd:	ja     0x402058
  4020bf:	arpl   WORD PTR [ebx],bx
  4020c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020c2:	and    ebx,edx
  4020c4:	mov    cl,0xbf
  4020c6:	bound  eax,QWORD PTR [edi-0x419f0f16]
  4020cc:	sub    eax,DWORD PTR [ebx+0x24b4c403]
  4020d2:	pop    edx
  4020d3:	xor    bh,BYTE PTR [ecx-0x6d]
  4020d6:	popa   
  4020d7:	(bad)  
  4020d8:	shl    DWORD PTR [ecx-0x75],1
  4020db:	adc    al,0xce
  4020dd:	and    dh,BYTE PTR [edx+0x5e0083c8]
  4020e3:	ret    
  4020e4:	in     eax,dx
  4020e5:	xchg   BYTE PTR [edx],al
  4020e7:	mov    ds:0xf2ee7d30,eax
  4020ec:	push   esi
  4020ed:	inc    ebp
  4020ee:	cmp    DWORD PTR ds:0xe90ef104,eax
  4020f4:	sub    esp,ecx
  4020f6:	nop
  4020f7:	adc    ebp,DWORD PTR [edx+0x25f1253f]
  4020fd:	aad    0x6d
  4020ff:	leave  
  402100:	dec    ebx
  402101:	mov    dl,0x52
  402103:	pop    ebx
  402104:	or     DWORD PTR [eax],esp
  402106:	sub    eax,0x54243891
  40210b:	sbb    al,BYTE PTR [esi+ecx*1]
  40210e:	cmp    eax,0x6af242be
  402113:	mov    bh,0xd7
  402115:	mov    bh,0x6b
  402117:	sbb    cl,BYTE PTR [esi+0x52]
  40211a:	arpl   bx,dx
  40211c:	mov    ch,0x99
  40211e:	pop    ebp
  40211f:	(bad)  [edi]
  402121:	lods   eax,DWORD PTR ds:[esi]
  402122:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402123:	stos   DWORD PTR es:[edi],eax
  402124:	jg     0x40216b
  402126:	out    0xb3,al
  402128:	sbb    bl,BYTE PTR [ebx]
  40212a:	daa    
  40212b:	mov    ds:0x66bc3b52,al
  402130:	dec    edx
  402131:	mov    ebx,0x5d5e716b
  402136:	sahf   
  402137:	jmp    0x4d4f:0x79d675ca
  40213e:	outs   dx,DWORD PTR ds:[esi]
  40213f:	lahf   
  402140:	cmp    DWORD PTR [ebp-0x4b7df403],edi
  402146:	lock jnp 0x402151
  402149:	push   ebx
  40214a:	xor    edx,DWORD PTR [esi-0x2d089d04]
  402150:	push   ds
  402151:	mov    BYTE PTR [ecx+0x6f47ea33],cl
  402157:	(bad)  [eax+0x287725f1]
  40215d:	pop    ecx
  40215e:	mov    ch,BYTE PTR [ecx+eax*1]
  402161:	add    BYTE PTR [ebp-0x22],dh
  402164:	out    dx,al
  402165:	xchg   ecx,eax
  402166:	(bad)
  402169:	or     edx,DWORD PTR [esi]
  40216b:	mov    edi,ebp
  40216d:	pop    ds
  40216e:	xchg   BYTE PTR [esi+0x3f],bl
  402171:	sahf   
  402172:	xor    al,0x95
  402174:	cmp    eax,0xd570fec0
  402179:	loope  0x402165
  40217b:	scas   eax,DWORD PTR es:[edi]
  40217c:	loope  0x4021cf
  40217e:	xor    edx,DWORD PTR [ebx]
  402180:	shr    DWORD PTR [edx+0x73],cl
  402183:	ja     0x4021dc
  402185:	mov    bl,0x97
  402187:	fistp  WORD PTR [edx+0x29bb42a9]
  40218d:	arpl   WORD PTR [edx+esi*1+0x30],si
  402191:	rcl    ebp,0xc8
  402194:	mul    BYTE PTR [ecx+0x69d2034d]
  40219a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40219b:	xor    eax,0xc2dbb17d
  4021a0:	dec    eax
  4021a1:	sti    
  4021a2:	dec    ebp
  4021a3:	jo     0x4021c8
  4021a5:	stc    
  4021a6:	ss jb  0x402145
  4021a9:	sbb    eax,esi
  4021ab:	pop    esi
  4021ac:	pop    ebp
  4021ad:	mov    edi,0x631b882
  4021b2:	leave  
  4021b3:	(bad)  
  4021b4:	cld    
  4021b5:	sbb    ecx,DWORD PTR [ecx]
  4021b7:	bound  ebp,QWORD PTR [ecx-0x4ae00698]
  4021bd:	lea    edx,[ebx-0x4e14bd1d]
  4021c3:	(bad)  
  4021c4:	fdivr  DWORD PTR [ebp-0x2b]
  4021c7:	dec    edx
  4021c8:	cld    
  4021c9:	or     al,0x3e
  4021cb:	add    BYTE PTR [edx],al
  4021cd:	xor    al,0x2b
  4021cf:	aad    0x28
  4021d1:	ficom  DWORD PTR [edi-0x23]
  4021d4:	xchg   ecx,eax
  4021d5:	dec    ecx
  4021d6:	mov    ah,0x41
  4021d8:	or     edi,DWORD PTR [esi]
  4021da:	fbld   TBYTE PTR [ebx]
  4021dc:	in     eax,dx
  4021dd:	pop    ebx
  4021de:	loopne 0x402255
  4021e0:	fcom   DWORD PTR [ebx]
  4021e2:	sbb    ebp,eax
  4021e4:	sbb    DWORD PTR [eax+0x39],0x7777184c
  4021eb:	stos   BYTE PTR es:[edi],al
  4021ec:	sbb    dh,ch
  4021ee:	adc    BYTE PTR [ebx-0x270beaff],dh
  4021f4:	xchg   ebx,eax
  4021f5:	pop    ecx
  4021f6:	and    BYTE PTR [esi-0x3a651b04],dl
  4021fc:	push   ds
  4021fd:	xor    al,ah
  4021ff:	jb     0x402214
  402201:	or     edx,DWORD PTR [esp+ecx*8+0x48]
  402205:	jecxz  0x4021f7
  402207:	push   es
  402208:	popa   
  402209:	jmp    0xca18:0xdb348948
  402210:	jb     0x4021bc
  402212:	adc    edx,esi
  402214:	enter  0x17e3,0xe8
  402218:	(bad)  
  402219:	jnp    0x402203
  40221b:	pop    ds
  40221c:	sub    BYTE PTR [edi],cl
  40221e:	or     eax,0x8265275b
  402223:	lock add esp,DWORD PTR [edi+esi*8+0x4]
  402228:	or     DWORD PTR [esi],0x92f4a57
  40222e:	pop    edi
  40222f:	cmp    BYTE PTR [ebp+esi*4+0x39],al
  402233:	push   es
  402234:	lahf   
  402235:	add    eax,esi
  402237:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402239:	call   0xed35:0xa7c58f2b
  402240:	ds (bad) 
  402242:	and    DWORD PTR [edx-0x7a],esp
  402245:	add    ebx,DWORD PTR [ecx+0x4c306cbc]
  40224b:	test   BYTE PTR [ebp+0x407e5cdd],cl
  402251:	xchg   ebx,eax
  402252:	or     BYTE PTR [edi+eiz*2],bl
  402255:	sub    al,0xc
  402257:	rcr    DWORD PTR [ecx],1
  402259:	pop    es
  40225a:	out    0x89,eax
  40225c:	inc    esp
  40225d:	sub    al,0x94
  40225f:	mov    edi,0xadb7708f
  402264:	mov    ch,0x1
  402266:	bound  eax,QWORD PTR [ebx+0x7c]
  402269:	out    dx,al
  40226a:	bound  sp,DWORD PTR [ebp+0x6752e32e]
  402271:	jge    0x4022e4
  402273:	cmp    BYTE PTR ds:0xff359990,ah
  402279:	hlt    
  40227a:	push   esi
  40227b:	cld    
  40227c:	stos   BYTE PTR es:[edi],al
  40227d:	mov    esi,0x579bb442
  402282:	push   eax
  402283:	add    DWORD PTR [ebx+ebp*1],0xffffffc5
  402287:	js     0x40227b
  402289:	mul    DWORD PTR [esp+ebp*2]
  40228c:	pop    es
  40228d:	call   0x9fdedd2d
  402292:	nop
  402293:	jae    0x402282
  402295:	mov    bl,0x1f
  402297:	inc    esp
  402298:	loopne 0x4022b9
  40229a:	or     al,0x40
  40229c:	addr16 lock in eax,dx
  40229f:	mov    esi,0x5af0c0ba
  4022a4:	sub    eax,0xf5420173
  4022a9:	stos   DWORD PTR es:[edi],eax
  4022aa:	and    al,0xd
  4022ac:	jle    0x402287
  4022ae:	add    eax,0x700e48ed
  4022b3:	push   0xffffffd4
  4022b5:	mov    BYTE PTR [ebx],dl
  4022b7:	mov    ebp,0xb5948d39
  4022bc:	neg    DWORD PTR fs:[esi]
  4022bf:	mov    ss,WORD PTR [ecx-0x43e341dc]
  4022c5:	dec    eax
  4022c6:	push   cs
  4022c7:	pusha  
  4022c8:	test   al,0xa
  4022ca:	in     eax,0xea
  4022cc:	lahf   
  4022cd:	pop    edi
  4022ce:	hlt    
  4022cf:	ret    
  4022d0:	adc    DWORD PTR [eax+0x47],esi
  4022d3:	adc    esi,edi
  4022d5:	jge    0x40227d
  4022d7:	cmp    BYTE PTR [ebp-0xb18a777],al
  4022dd:	and    DWORD PTR [ecx],0x8f5eb018
  4022e3:	and    al,0xd9
  4022e5:	lock imul esp,DWORD PTR [ebp+esi*8-0x21],0xbf22d75f
  4022ee:	int3   
  4022ef:	jne    0x4022f1
  4022f1:	call   0x99f3c5f7
  4022f6:	ss pop ebp
  4022f8:	scas   eax,DWORD PTR es:[edi]
  4022f9:	inc    esp
  4022fa:	ficomp WORD PTR [esi-0x2ef42974]
  402300:	xchg   ecx,eax
  402301:	popf   
  402302:	test   BYTE PTR [edi-0x278c3a34],cl
  402308:	mov    esi,0xcc3d2b83
  40230d:	stos   DWORD PTR es:[edi],eax
  40230e:	sub    BYTE PTR [edx-0x30],cl
  402311:	dec    esp
  402312:	lods   al,BYTE PTR ds:[esi]
  402313:	inc    ebx
  402314:	pop    ebp
  402315:	imul   ecx,DWORD PTR [ecx+ecx*8+0x55],0x19e36a34
  40231d:	jl     0x402365
  40231f:	pop    ecx
  402320:	jmp    DWORD PTR [edi]
  402322:	es jo  0x4022d7
  402325:	push   esp
  402326:	mov    ch,0x80
  402328:	and    eax,eax
  40232a:	jmp    0xc6d82642
  40232f:	sar    DWORD PTR [edi],cl
  402331:	int3   
  402332:	pop    edx
  402333:	and    esi,DWORD PTR [edi+eax*4+0x38]
  402337:	fs ret 0xaf38
  40233b:	stos   DWORD PTR es:[edi],eax
  40233c:	push   ecx
  40233d:	mov    edi,DWORD PTR [esi+0x7d]
  402340:	fbstp  TBYTE PTR gs:[edx+0x48349d31]
  402347:	jb     0x4022e8
  402349:	xlat   BYTE PTR ds:[ebx]
  40234a:	outs   dx,BYTE PTR ds:[esi]
  40234b:	shr    si,1
  40234e:	dec    esi
  40234f:	dec    esp
  402350:	clc    
  402351:	and    ah,BYTE PTR [edi-0x7a]
  402354:	pop    esp
  402355:	pusha  
  402356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402357:	push   fs
  402359:	mov    edx,0xeeac916e
  40235e:	ins    DWORD PTR es:[edi],dx
  40235f:	push   esi
  402360:	lock test DWORD PTR [bx-0x5],ebp
  402365:	je     0x4023bd
  402367:	jb     0x4023de
  402369:	(bad)  
  40236b:	imul   edx,DWORD PTR ds:0x3f7a18c5,0x58
  402372:	mov    bh,0x56
  402374:	xchg   eax,esi
  402376:	or     eax,0x4b030f94
  40237b:	jg     0x402358
  40237d:	ins    BYTE PTR es:[edi],dx
  40237e:	sahf   
  40237f:	pushf  
  402380:	das    
  402381:	xchg   esp,eax
  402382:	add    bh,bl
  402384:	or     ebp,DWORD PTR [edx]
  402386:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402387:	ins    DWORD PTR es:[edi],dx
  402388:	ins    BYTE PTR es:[edi],dx
  402389:	add    cl,cl
  40238b:	loop   0x402336
  40238d:	jno    0x4023ea
  40238f:	cmc    
  402390:	cmp    eax,0x78658836
  402395:	or     DWORD PTR [esi+eiz*2],0x3b
  402399:	fwait
  40239a:	or     eax,0xed64d953
  40239f:	retf   
  4023a0:	mov    ebx,0xa8543581
  4023a5:	ins    DWORD PTR es:[edi],dx
  4023a6:	add    esp,esp
  4023a8:	stc    
  4023a9:	jne    0x4023dc
  4023ab:	arpl   WORD PTR [ebx],dx
  4023ad:	sub    bh,al
  4023af:	jge    0x402355
  4023b1:	jb     0x402354
  4023b3:	test   al,0xcb
  4023b5:	jnp    0x402396
  4023b7:	fadd   QWORD PTR [edx+edi*8+0x50]
  4023bb:	xor    DWORD PTR [edx-0x65b58312],edi
  4023c1:	arpl   WORD PTR [edx-0x56],ax
  4023c4:	xchg   BYTE PTR [edi],dh
  4023c6:	stc    
  4023c7:	lods   eax,DWORD PTR ds:[esi]
  4023c8:	jb     0x4023ab
  4023ca:	push   edi
  4023cb:	out    dx,al
  4023cc:	adc    eax,0xa1b3989d
  4023d1:	xchg   ebx,eax
  4023d2:	sub    eax,0x6c0d90b7
  4023d7:	dec    eax
  4023d8:	(bad)  
  4023d9:	jge    0x4023c2
  4023db:	cmp    DWORD PTR [eax-0x2134d850],edi
  4023e1:	int    0xb7
  4023e3:	jae    0x4023fe
  4023e5:	pop    ebp
  4023e6:	(bad)  
  4023e7:	call   0xcc02:0x34df5e67
  4023ee:	mov    cl,0xa7
  4023f0:	inc    ecx
  4023f1:	add    edi,DWORD PTR [ecx-0x6e139ae9]
  4023f7:	jl     0x4023fa
  4023f9:	xor    ah,BYTE PTR [edi+0x51]
  4023fc:	(bad)  
  4023ff:	xchg   edi,eax
  402400:	in     eax,dx
  402401:	frstor [esi-0x34]
  402404:	cdq    
  402405:	loope  0x40240f
  402407:	lds    edi,FWORD PTR [ecx-0x5aa5b52d]
  40240d:	test   eax,0xcf9ac632
  402412:	and    BYTE PTR [ebx+ebp*1-0x6b],ah
  402416:	jecxz  0x4023cf
  402418:	cmp    al,0x15
  40241a:	mov    ebx,0xe1cb2664
  40241f:	aad    0x20
  402421:	pop    edx
  402422:	adc    dh,BYTE PTR [eax-0x12064ff6]
  402428:	shr    BYTE PTR [esi-0x6ac582ed],1
  40242e:	inc    ebx
  40242f:	and    DWORD PTR [esi],eax
  402431:	cs fsubr st,st(1)
  402434:	sbb    ebp,DWORD PTR [ecx-0x77]
  402437:	pop    ebx
  402438:	sbb    eax,0xb992837c
  40243d:	jmp    0x402427
  40243f:	sbb    eax,0x8d47e841
  402444:	fcomp  QWORD PTR [eax+0x46a2749]
  40244a:	jbe    0x4024c7
  40244c:	jl     0x402438
  40244e:	xchg   esi,eax
  40244f:	add    al,BYTE PTR [ebp-0x5d3d6daf]
  402455:	call   0x96e43c6d
  40245a:	mov    edx,DWORD PTR [ebx+0x21d3b969]
  402460:	jge    0x40248f
  402462:	add    DWORD PTR [ebx],ebp
  402464:	xchg   ebx,eax
  402465:	pop    esp
  402466:	cmp    ebx,DWORD PTR [esi+ecx*8+0x5cfa3545]
  40246d:	mov    esi,0x2c861401
  402472:	sti    
  402473:	adc    BYTE PTR [ecx+0x30],dl
  402476:	jae    0x40247b
  402478:	jbe    0x4024dd
  40247a:	ss out 0x47,eax
  40247d:	popf   
  40247e:	cld    
  40247f:	and    eax,0x2e0412a2
  402484:	mov    ecx,0xe2a31dd6
  402489:	test   al,0x50
  40248b:	stc    
  40248c:	mov    dl,0x7c
  40248e:	test   eax,0xf142874a
  402493:	mov    eax,0xa9b759a2
  402498:	xlat   BYTE PTR ds:[ebx]
  402499:	mov    bl,0xd0
  40249b:	call   0xe6f84ffb
  4024a0:	les    ebp,FWORD PTR [ecx+0x36792ef7]
  4024a6:	xor    eax,ebx
  4024a8:	jmp    0x297ccc6
  4024ad:	sub    eax,0x91bf1c45
  4024b2:	cmp    bl,BYTE PTR [edi+esi*2]
  4024b5:	call   0xc3b099c9
  4024ba:	jb     0x4024d0
  4024bc:	add    ebx,DWORD PTR [ebx-0x75395fd2]
  4024c2:	pop    cx
  4024c4:	sub    DWORD PTR [ebx+0x1b],ebx
  4024c7:	adc    BYTE PTR [edi-0x2a],0xc3
  4024cb:	dec    edi
  4024cc:	neg    BYTE PTR [eax-0x448851c2]
  4024d2:	sub    BYTE PTR [edx-0x31],cl
  4024d5:	xlat   BYTE PTR ds:[ebx]
  4024d6:	xor    BYTE PTR [ebx-0x640ebfcc],ah
  4024dc:	fs push eax
  4024de:	xchg   ebx,eax
  4024df:	call   0xd9d550e8
  4024e4:	pop    edx
  4024e5:	enter  0x2a8f,0xcf
  4024e9:	xchg   ecx,eax
  4024ea:	ds and al,0x57
  4024ed:	test   DWORD PTR [ebp+0x55],0x8fd498e3
  4024f4:	enter  0x2c0c,0xf6
  4024f8:	xchg   ecx,eax
  4024f9:	dec    esi
  4024fa:	imul   ecx,DWORD PTR [edx-0x49],0x5b
  4024fe:	cld    
  4024ff:	mov    ebp,0x12f97920
  402504:	in     eax,0xfd
  402506:	repz cmp esp,DWORD PTR [edi-0x6eb3ea00]
  40250d:	in     al,dx
  40250e:	ja     0x40254c
  402510:	rol    DWORD PTR [eax-0x22a66632],cl
  402516:	enter  0xf94d,0x8e
  40251a:	test   DWORD PTR [eax+0xf],ebp
  40251d:	nop
  40251e:	push   es
  40251f:	xlat   BYTE PTR ds:[ebx]
  402520:	out    0xbd,al
  402522:	js     0x4024a7
  402524:	sub    ebx,DWORD PTR [eax-0x20e744c5]
  40252a:	pop    es
  40252b:	inc    eax
  40252c:	in     eax,0xe2
  40252e:	push   edx
  40252f:	std    
  402530:	jmp    0x95436f8b
  402535:	pop    edx
  402536:	xchg   ebp,eax
  402537:	push   ss
  402538:	sub    BYTE PTR [ebp-0x2a1dedff],0x52
  40253f:	sub    DWORD PTR [edi-0x4c],esi
  402542:	inc    esp
  402543:	pop    es
  402544:	int    0xd3
  402546:	lods   eax,DWORD PTR ds:[esi]
  402547:	adc    ah,BYTE PTR [ebp-0x6e]
  40254a:	xor    DWORD PTR [edx],ecx
  40254c:	aas    
  40254d:	inc    edi
  40254e:	add    esi,DWORD PTR [edx+ebp*2-0x75c60420]
  402555:	sbb    al,0xf2
  402557:	or     ch,BYTE PTR [eax+0x5d]
  40255a:	mov    cl,0x7a
  40255c:	das    
  40255d:	push   ebx
  40255e:	sar    BYTE PTR [eax+0x2c],cl
  402561:	pop    edi
  402562:	(bad)  
  402563:	fwait
  402564:	jecxz  0x4024ee
  402566:	hlt    
  402567:	xor    ch,BYTE PTR [eax+0x6b04973f]
  40256d:	xor    al,0x1f
  40256f:	or     DWORD PTR [edx-0x2d],ecx
  402572:	das    
  402573:	adc    al,0xdf
  402575:	fsubr  QWORD PTR [edx]
  402577:	xchg   ecx,eax
  402578:	pop    eax
  402579:	lock push 0x35
  40257c:	dec    ebx
  40257d:	xchg   BYTE PTR [ebx-0x2cbc73f3],cl
  402583:	repnz adc DWORD PTR [ebx],0x97743eba
  40258a:	pushf  
  40258b:	xchg   ebp,eax
  40258c:	add    BYTE PTR [edi],dh
  40258e:	loope  0x402538
  402590:	fimul  WORD PTR ds:0x4e7882f3
  402596:	out    dx,al
  402597:	push   esi
  402598:	stc    
  402599:	pushf  
  40259a:	(bad)  
  40259b:	lock inc ecx
  40259d:	push   ebp
  40259e:	mov    edi,0xd70ad04
  4025a3:	or     eax,0xe3348c32
  4025a8:	jne    0x40261c
  4025aa:	fimul  DWORD PTR [ebp-0x27]
  4025ad:	pop    ebp
  4025ae:	dec    edi
  4025af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025b0:	inc    ebp
  4025b1:	retf   
  4025b2:	jle    0x40260b
  4025b4:	jge    0x4025cc
  4025b6:	pop    ecx
  4025b7:	mov    dl,0x9f
  4025b9:	sbb    ebp,DWORD PTR [edx+0x43]
  4025bc:	sahf   
  4025bd:	dec    ebx
  4025be:	jmp    0x7cfece7c
  4025c3:	sub    BYTE PTR [ebp+0x336e015c],dl
  4025c9:	je     0x402608
  4025cb:	out    dx,eax
  4025cc:	lahf   
  4025cd:	(bad)  [edx+0x7e7a7ce1]
  4025d3:	dec    esi
  4025d4:	push   esp
  4025d5:	mov    edx,0x4557b9d4
  4025da:	ret    
  4025db:	cmp    DWORD PTR [esi+edi*4-0x2a667e78],edx
  4025e2:	push   eax
  4025e3:	out    dx,eax
  4025e4:	(bad)  [eax-0x72]
  4025e7:	fimul  WORD PTR [ecx-0x92121ce]
  4025ed:	xchg   esi,eax
  4025ee:	cdq    
  4025ef:	data16 mov ch,0x13
  4025f2:	pop    ds
  4025f3:	(bad)  
  4025f4:	out    dx,al
  4025f5:	or     DWORD PTR [esi-0x38227798],esp
  4025fb:	ins    DWORD PTR es:[edi],dx
  4025fc:	add    DWORD PTR [edi-0x6721bbb8],0xffffffc5
  402603:	adc    ah,BYTE PTR [ecx+0x424b5142]
  402609:	jbe    0x4025c1
  40260b:	mov    WORD PTR [eax+esi*4],gs
  40260e:	cs jl  0x4025e7
  402611:	je     0x40261d
  402613:	fisub  DWORD PTR [edi+0x1d]
  402616:	mov    edx,ebp
  402618:	xchg   edi,eax
  402619:	das    
  40261a:	mov    esp,ecx
  40261c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40261d:	cli    
  40261e:	mov    ah,BYTE PTR [esi]
  402620:	into   
  402621:	pop    ebx
  402622:	fwait
  402623:	inc    edx
  402624:	or     ah,dl
  402626:	dec    DWORD PTR [esi+0x1c8d7d4]
  40262c:	(bad)  [esi+0x35cedec4]
  402632:	fnstenv [eax]
  402634:	cmp    bh,0xe6
  402637:	mov    ebx,0x1af06d5f
  40263c:	call   DWORD PTR [edx]
  40263e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40263f:	fcomp  DWORD PTR [ebp+eax*4+0x4ee7d30]
  402646:	inc    edi
  402647:	sbb    BYTE PTR [edi+0x22],al
  40264a:	out    0x9b,al
  40264c:	adc    eax,0x2d1abd69
  402651:	fs icebp 
  402653:	push   es
  402654:	hlt    
  402655:	inc    edx
  402656:	inc    esi
  402657:	jns    0x4026bc
  402659:	mov    ebp,0x8324573c
  40265e:	mov    ds:0x431ee8ec,eax
  402663:	(bad)  
  402664:	loop   0x402604
  402666:	xchg   esp,eax
  402667:	mov    edi,0xf1a18a40
  40266c:	lock mov ebp,DWORD PTR [ebp+0x67]
  402670:	sbb    BYTE PTR [ebp+0xb33448],bl
  402676:	icebp  
  402677:	push   DWORD PTR [edx-0x35d2eea]
  40267d:	stos   DWORD PTR es:[edi],eax
  40267e:	push   eax
  40267f:	mov    al,ds:0x61483db9
  402684:	lock in eax,dx
  402686:	aaa    
  402687:	push   ecx
  402688:	pusha  
  402689:	xchg   BYTE PTR [edi+0x48],bl
  40268c:	dec    esi
  40268d:	out    dx,eax
  40268e:	lahf   
  40268f:	xchg   ebp,eax
  402690:	into   
  402691:	adc    eax,0xc9ad5cb5
  402696:	pop    es
  402697:	das    
  402698:	pushf  
  402699:	aad    0xbe
  40269b:	pop    edi
  40269c:	int    0x57
  40269e:	push   cs
  40269f:	inc    esp
  4026a0:	mov    eax,ebx
  4026a2:	mov    cl,0x64
  4026a4:	mov    eax,0xd1d10063
  4026a9:	in     al,dx
  4026aa:	test   al,0x58
  4026ac:	fisttp QWORD PTR [eax+0x15b417c8]
  4026b2:	lahf   
  4026b3:	inc    esi
  4026b4:	das    
  4026b5:	fcomp  DWORD PTR [ebx+0x17a63b29]
  4026bb:	iret   
  4026bc:	pop    edi
  4026bd:	jle    0x4026dd
  4026bf:	cmp    eax,0xa60cd7e8
  4026c4:	jg     0x402676
  4026c6:	pusha  
  4026c7:	outs   dx,BYTE PTR ds:[esi]
  4026c8:	sbb    al,0xf6
  4026ca:	xor    eax,0x929217f7
  4026cf:	sub    eax,0x5dd22204
  4026d4:	test   al,0x6b
  4026d6:	mov    ds,WORD PTR [ebx+0x24959ade]
  4026dc:	adc    cl,BYTE PTR [edx+0x4e77feaf]
  4026e2:	mov    ax,ds:0x96f56e2b
  4026e8:	sbb    BYTE PTR [eax+0x640edc69],bl
  4026ee:	test   BYTE PTR [edx-0x8],cl
  4026f1:	popa   
  4026f2:	mov    ebx,DWORD PTR [edi]
  4026f4:	mov    BYTE PTR [edi+0x15],ch
  4026f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026f8:	mov    eax,ds:0x15835de5
  4026fd:	xor    eax,0x5627e17f
  402702:	mov    ebx,0x92eea40a
  402707:	fstp   QWORD PTR [esi]
  402709:	sbb    ebx,DWORD PTR [ecx-0x73]
  40270c:	cwde   
  40270d:	cmp    al,0xff
  40270f:	xor    BYTE PTR [eax+0x25],ah
  402712:	cmp    BYTE PTR [ecx-0x66],ah
  402715:	mov    esp,0x19771ed
  40271a:	in     al,0xdd
  40271c:	pop    eax
  40271d:	push   esi
  40271e:	pmulhw mm5,mm2
  402721:	lods   al,BYTE PTR ds:[esi]
  402722:	std    
  402723:	push   ecx
  402724:	mov    eax,0x34c8033d
  402729:	jl     0x402789
  40272b:	in     eax,0x69
  40272d:	mov    DWORD PTR [ebx],edx
  40272f:	xor    DWORD PTR [esi],esp
  402731:	pop    edi
  402732:	dec    ebp
  402733:	inc    esi
  402734:	shl    esi,1
  402736:	ja     0x40272a
  402738:	lock and BYTE PTR [ebx-0x3d],dl
  40273c:	sahf   
  40273d:	(bad)  
  40273e:	sub    cl,BYTE PTR [esi-0x5bd0e058]
  402744:	push   ss
  402745:	mov    cl,0x1e
  402747:	dec    ecx
  402748:	push   0x25
  40274a:	sbb    BYTE PTR [esi],0x82
  40274d:	cmp    DWORD PTR [edx],ebp
  40274f:	dec    esp
  402750:	dec    esi
  402751:	jne    0x40274f
  402753:	test   DWORD PTR [ebx-0x7b],ecx
  402756:	aaa    
  402757:	loopne 0x402790
  402759:	fidiv  WORD PTR [eax]
  40275b:	stc    
  40275c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40275d:	test   DWORD PTR [edi+0x76],ecx
  402760:	or     esi,DWORD PTR ds:0x6651232c
  402766:	int    0xe4
  402768:	add    al,0x8a
  40276a:	push   ecx
  40276b:	aas    
  40276c:	jbe    0x40276f
  40276e:	xor    BYTE PTR [esi+0xb0ab840],ah
  402774:	sub    DWORD PTR ds:[edx-0x3b],esi
  402778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402779:	and    al,al
  40277b:	mov    dl,0x10
  40277d:	mov    bh,0xe
  40277f:	jbe    0x402713
  402781:	push   ds
  402782:	sbb    eax,0x1894c16f
  402787:	arpl   WORD PTR ds:0x5df6a6ae,bp
  40278d:	jae    0x402715
  40278f:	mov    al,0x82
  402791:	enter  0xa296,0x4a
  402795:	iret   
  402796:	add    ebx,DWORD PTR [ebp+eax*1-0x1]
  40279a:	push   ds
  40279b:	sbb    DWORD PTR [ebp-0x7d],0xffffffc2
  40279f:	cmp    eax,0xb52cf41e
  4027a4:	(bad)  
  4027a5:	xchg   ebp,eax
  4027a6:	xor    al,0x92
  4027a8:	or     eax,0x758f565d
  4027ad:	dec    edi
  4027ae:	xor    esi,esp
  4027b0:	inc    ebx
  4027b1:	(bad)  
  4027b3:	xor    dl,BYTE PTR [ecx]
  4027b5:	sbb    al,0x30
  4027b7:	sub    BYTE PTR [edi],dh
  4027b9:	cld    
  4027ba:	mov    ebp,0x3c719c73
  4027bf:	mov    ecx,0xe6688481
  4027c4:	idiv   DWORD PTR [esi]
  4027c6:	jnp    0x4027b4
  4027c8:	add    DWORD PTR [esi+0xa],esi
  4027cb:	cmp    ebp,DWORD PTR [ebx-0x5fcb0b95]
  4027d1:	frstpm(287 only) 
  4027d3:	jnp    0x40276d
  4027d5:	aam    0xe6
  4027d7:	fild   WORD PTR [eax+0x3b]
  4027da:	jl     0x4027b2
  4027dc:	push   esi
  4027dd:	sub    DWORD PTR [edi],edi
  4027df:	sbb    al,0x36
  4027e1:	ret    
  4027e2:	test   eax,0xf8abdad3
  4027e7:	mov    eax,0x409e93e
  4027ec:	int    0x67
  4027ee:	mov    esp,0x84292ea
  4027f3:	jnp    0x4027d2
  4027f5:	sub    dl,BYTE PTR [ecx-0x22356443]
  4027fb:	sahf   
  4027fc:	xor    bl,BYTE PTR [ebx]
  4027fe:	cmp    eax,0xa4ae9108
  402803:	dec    edi
  402804:	ds mov edx,0xe7cb316d
  40280a:	xor    al,0x99
  40280c:	mov    ecx,cs
  40280e:	stos   BYTE PTR es:[edi],al
  40280f:	jecxz  0x4027fc
  402811:	dec    esi
  402812:	outs   dx,DWORD PTR ds:[esi]
  402813:	(bad)  
  402815:	sbb    al,0xc
  402817:	lea    ecx,[edx]
  402819:	leave  
  40281a:	mov    eax,ds:0xbfce3038
  40281f:	in     al,dx
  402820:	cmp    al,ch
  402822:	jnp    0x4027fa
  402824:	rol    cl,cl
  402826:	lock (bad) 
  402828:	lock lock push es
  40282b:	inc    eax
  40282c:	mul    BYTE PTR [ecx+0x59]
  40282f:	mov    al,0x48
  402831:	imul   edi,DWORD PTR [edi+0x30e479ae],0x6378554c
  40283b:	xchg   ebx,eax
  40283c:	aam    0xe0
  40283e:	jg     0x402823
  402840:	and    ch,cl
  402842:	adc    al,BYTE PTR [ebx+edx*2]
  402845:	xchg   ebp,eax
  402846:	jg     0x40284f
  402848:	mov    dh,0x79
  40284a:	ins    BYTE PTR es:[edi],dx
  40284b:	mov    edi,0x35f6d1ac
  402850:	push   edi
  402851:	lahf   
  402852:	rcr    BYTE PTR [eax],1
  402854:	or     al,0x72
  402856:	fidiv  WORD PTR [edx+0x5245157c]
  40285c:	sbb    esi,DWORD PTR ss:[esi]
  40285f:	or     eax,0x92050968
  402864:	out    0x48,al
  402866:	push   0xd68a0d7
  40286b:	xchg   ebp,eax
  40286c:	xchg   BYTE PTR [edi+esi*8-0x4d8a0043],bh
  402873:	pop    dx
  402875:	bnd jle 0x4028f1
  402878:	sub    BYTE PTR [edi],dl
  40287a:	xor    bl,BYTE PTR [ecx]
  40287c:	mov    al,0x6f
  40287e:	sahf   
  40287f:	je     0x40281a
  402881:	sbb    al,0x9f
  402883:	xor    BYTE PTR [ebp-0x30],ah
  402886:	mov    al,0xff
  402888:	inc    edx
  402889:	pop    ds
  40288a:	es jecxz 0x4028c1
  40288d:	icebp  
  40288e:	mov    ds:0x181b8d32,eax
  402893:	hlt    
  402894:	cdq    
  402895:	mov    ecx,0xe6ed5184
  40289a:	pop    esi
  40289b:	ss mov eax,0xbd457ae0
  4028a1:	xor    edi,esi
  4028a3:	mov    esp,0xe28884dc
  4028a8:	cmp    edx,ebp
  4028aa:	jmp    0xb7ba:0x80ef14a0
  4028b1:	push   eax
  4028b2:	cld    
  4028b3:	and    BYTE PTR [ebx],dh
  4028b5:	hlt    
  4028b6:	xchg   esp,eax
  4028b7:	inc    edx
  4028b8:	jecxz  0x402843
  4028ba:	xor    DWORD PTR [edi+ebp*2-0x36],ebp
  4028be:	int3   
  4028bf:	(bad)  
  4028c0:	cmp    eax,0x3d82a64a
  4028c5:	mov    ds:0xa31347ec,eax
  4028ca:	bound  edi,QWORD PTR [esi]
  4028cc:	in     al,dx
  4028cd:	or     BYTE PTR [eax+0x552e162c],ch
  4028d3:	cwde   
  4028d4:	dec    edx
  4028d5:	test   eax,0x130d3402
  4028da:	ret    0x2cb3
  4028dd:	dec    edi
  4028de:	mov    al,0x9
  4028e0:	stos   DWORD PTR es:[edi],eax
  4028e1:	xor    al,0x73
  4028e3:	add    eax,0x376fb343
  4028e8:	sbb    DWORD PTR [edi+ebx*1],esp
  4028eb:	push   ecx
  4028ec:	lock sub cl,BYTE PTR [ebp+0x62]
  4028f0:	jmp    0xaaf1747b
  4028f5:	push   esp
  4028f6:	stos   BYTE PTR es:[edi],al
  4028f7:	fimul  WORD PTR [ecx]
  4028f9:	loop   0x4028be
  4028fb:	enter  0x1c20,0x7
  4028ff:	std    
  402900:	xor    eax,0xe0462a8
  402905:	pop    es
  402906:	mov    al,BYTE PTR [ebp+0x64]
  402909:	leave  
  40290a:	push   eax
  40290b:	lods   al,BYTE PTR ds:[esi]
  40290c:	repnz xor DWORD PTR [esp+edx*8+0x31136873],edi
  402914:	bound  esp,QWORD PTR [edx+0x21]
  402917:	icebp  
  402918:	add    al,0x95
  40291a:	(bad)  
  40291b:	rcr    BYTE PTR [edi-0x45],0x84
  40291f:	loopne 0x4028e6
  402921:	cmp    ch,BYTE PTR [ecx]
  402923:	mov    edx,0x2c088957
  402928:	inc    edi
  402929:	xor    eax,0xdcd343a5
  40292e:	jns    0x4028bd
  402930:	int    0x60
  402932:	mov    bl,0xa6
  402934:	xor    BYTE PTR [edi],bl
  402936:	lods   al,BYTE PTR ds:[esi]
  402937:	adc    BYTE PTR [ebp-0x1ece723b],ah
  40293d:	pop    ds
  40293e:	jo     0x40295d
  402940:	adc    cl,BYTE PTR [eax+0x11627d5a]
  402946:	sub    BYTE PTR [esi+edx*2-0x20253c63],ah
  40294d:	pop    ebx
  40294e:	in     al,dx
  40294f:	pop    eax
  402950:	jae    0x4029b5
  402952:	mov    DWORD PTR [esi+0x7078b4d7],eax
  402958:	js     0x40297a
  40295a:	jmp    0x7fad:0xc5dfdd5a
  402961:	aad    0xcc
  402963:	or     DWORD PTR [ebp-0x11f9af91],ebx
  402969:	adc    eax,0xc927c28
  40296e:	popa   
  40296f:	pop    ebx
  402970:	inc    edx
  402971:	(bad)  
  402972:	push   cs
  402973:	gs pop ebp
  402975:	sbb    bh,BYTE PTR [eax]
  402977:	dec    ebp
  402978:	bound  edi,QWORD PTR [esp+eax*8-0x79]
  40297c:	push   0x4
  40297e:	mov    ebp,0xfc9b5fbb
  402983:	imul   esp,DWORD PTR [edx+0x73],0x4339a190
  40298a:	xchg   edi,eax
  40298b:	mov    DWORD PTR [esi],edx
  40298d:	out    dx,al
  40298e:	mov    WORD PTR [edi],gs
  402990:	add    al,0x62
  402992:	fistp  WORD PTR [ebx-0x6a12935c]
  402998:	loope  0x4029b3
  40299a:	add    BYTE PTR [edi+ebx*8],al
  40299d:	pushf  
  40299e:	inc    BYTE PTR [edi+0x511dafd9]
  4029a4:	push   0x3e
  4029a6:	push   es
  4029a7:	inc    edi
  4029a8:	xor    DWORD PTR [edi],edx
  4029aa:	fst    QWORD PTR [ebx]
  4029ac:	push   edx
  4029ad:	std    
  4029ae:	dec    eax
  4029af:	mov    ds:0xa16c46ac,al
  4029b4:	pop    ecx
  4029b5:	std    
  4029b6:	in     al,dx
  4029b7:	xchg   esp,eax
  4029b8:	mov    BYTE PTR [edx],al
  4029ba:	xchg   esi,eax
  4029bb:	xchg   edi,eax
  4029bc:	and    esp,DWORD PTR [edi]
  4029be:	jmp    0xbdb0e266
  4029c3:	dec    ecx
  4029c4:	xor    DWORD PTR [ebx],esp
  4029c6:	std    
  4029c7:	ret    0x3dec
  4029ca:	js     0x4029a0
  4029cc:	add    eax,0xfdc6247
  4029d1:	or     eax,0x89539ac0
  4029d6:	stc    
  4029d7:	call   0xab72bc1
  4029dc:	into   
  4029dd:	das    
  4029de:	sahf   
  4029df:	dec    BYTE PTR [esi+0x15f8b9fd]
  4029e5:	dec    esi
  4029e6:	into   
  4029e7:	sbb    esp,esi
  4029e9:	jno    0x402a21
  4029eb:	push   esp
  4029ec:	and    al,0x7a
  4029ee:	mov    esp,0xa294abe6
  4029f3:	and    dh,dh
  4029f5:	lahf   
  4029f6:	and    ah,ch
  4029f8:	fld    TBYTE PTR [esi+0x5]
  4029fb:	xchg   DWORD PTR [eax],eax
  4029fd:	mov    al,ds:0xb92da6df
  402a02:	fild   DWORD PTR ds:0x818c7b6b
  402a08:	pop    esi
  402a09:	or     BYTE PTR [ebx-0x67],al
  402a0c:	int    0xf2
  402a0e:	bound  edi,QWORD PTR [edx+0x24]
  402a11:	test   eax,0x6bb63acc
  402a16:	mov    ebp,0x8d20e424
  402a1b:	mov    bh,0x1a
  402a1d:	bound  ebx,QWORD PTR [ebx-0x4c]
  402a20:	jp     0x402a0a
  402a22:	nop
  402a23:	popa   
  402a24:	mov    ds:0x25f677e7,al
  402a29:	cdq    
  402a2a:	in     al,dx
  402a2b:	je     0x4029e3
  402a2d:	les    edi,FWORD PTR [ebx]
  402a2f:	das    
  402a30:	push   esi
  402a31:	mov    edi,gs
  402a33:	xchg   ebp,eax
  402a34:	push   edi
  402a35:	push   eax
  402a36:	and    edx,DWORD PTR [ebp+0x66]
  402a39:	leave  
  402a3a:	ins    DWORD PTR es:[edi],dx
  402a3b:	xor    bl,BYTE PTR [esi]
  402a3d:	xor    ch,BYTE PTR [ecx]
  402a3f:	aas    
  402a40:	pushf  
  402a41:	leave  
  402a42:	leave  
  402a43:	js     0x4029f9
  402a45:	or     BYTE PTR [ebx],0x5c
  402a48:	jge    0x402a91
  402a4a:	mov    ah,0xbb
  402a4c:	sbb    DWORD PTR [esi+0x7b4cff0d],0x16
  402a53:	xchg   edi,eax
  402a54:	mov    edi,0xf01d2c8f
  402a59:	jmp    0x4029df
  402a5b:	not    BYTE PTR [esi-0x17]
  402a5e:	pop    ss
  402a5f:	in     eax,dx
  402a60:	push   ecx
  402a61:	xor    DWORD PTR [eax*8+0x46f269b7],eax
  402a68:	cmp    al,0xb7
  402a6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a6b:	fcomp  DWORD PTR es:[ecx]
  402a6e:	sar    BYTE PTR ds:0xdb7e93b8,1
  402a74:	cmc    
  402a75:	cld    
  402a76:	pop    DWORD PTR [ecx-0x54]
  402a79:	push   0xd71f13e0
  402a7e:	push   edx
  402a7f:	xchg   ecx,eax
  402a80:	sbb    DWORD PTR ss:[edi-0x53],edx
  402a84:	fistp  DWORD PTR ds:0xb14a1b55
  402a8a:	stos   DWORD PTR es:[edi],eax
  402a8b:	outs   dx,DWORD PTR ds:[esi]
  402a8c:	data16 adc BYTE PTR [esi],bh
  402a8f:	imul   ecx,DWORD PTR [ecx+0x73],0x69
  402a93:	lods   eax,DWORD PTR ds:[esi]
  402a94:	(bad)  
  402a95:	daa    
  402a96:	mov    ch,0xd0
  402a98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a99:	stos   BYTE PTR es:[edi],al
  402a9a:	xchg   edx,eax
  402a9b:	cld    
  402a9c:	(bad)  
  402a9d:	popa   
  402a9e:	sti    
  402a9f:	push   es
  402aa0:	rcl    edi,0x8
  402aa3:	and    ebx,DWORD PTR [edi+ebx*4]
  402aa6:	sub    al,0x7d
  402aa8:	fst    QWORD PTR [edi-0x51]
  402aab:	jo     0x402af3
  402aad:	jae    0x402b12
  402aaf:	jno    0x402a6c
  402ab1:	mov    edi,DWORD PTR [edi-0x5fe5ae49]
  402ab7:	ror    ebp,0x7
  402aba:	daa    
  402abb:	aam    0x9d
  402abd:	add    DWORD PTR [edx-0x3],0x75ee1d1a
  402ac4:	aaa    
  402ac5:	rcl    ebx,0x15
  402ac8:	std    
  402ac9:	push   es
  402aca:	adc    BYTE PTR [ebx-0x30],ch
  402acd:	cmp    DWORD PTR [eax+0x67],eax
  402ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ad1:	shr    BYTE PTR [esi],0xa5
  402ad4:	popf   
  402ad5:	inc    ebx
  402ad6:	popa   
  402ad7:	ret    
  402ad8:	rcl    DWORD PTR [edx+0x4c2d1ce6],0x65
  402adf:	ja     0x402a69
  402ae1:	fstp   TBYTE PTR [ebx]
  402ae3:	stos   BYTE PTR es:[edi],al
  402ae4:	mov    edx,0x6a3d6b14
  402ae9:	mov    gs,WORD PTR [ebx-0x70]
  402aec:	fild   QWORD PTR [ebp-0x18]
  402aef:	test   BYTE PTR [eax-0x24],dl
  402af2:	aaa    
  402af3:	xor    eax,0xd7e636be
  402af8:	jbe    0x402b38
  402afa:	mov    ds:0xbff7a9c3,eax
  402aff:	ins    BYTE PTR es:[edi],dx
  402b00:	or     eax,0x3f085a35
  402b05:	dec    ebx
  402b06:	ret    
  402b07:	(bad)  
  402b08:	or     ch,BYTE PTR [edi-0x39]
  402b0b:	test   al,0x1c
  402b0d:	mov    bl,0x37
  402b0f:	jno    0x402b37
  402b11:	pop    edx
  402b12:	xlat   BYTE PTR ds:[ebx]
  402b13:	xor    BYTE PTR [ebx],al
  402b15:	mov    ebp,0xd803de85
  402b1a:	adc    DWORD PTR [esi+0x4461b315],ebp
  402b20:	or     cl,BYTE PTR [esi-0xecc430b]
  402b26:	stos   BYTE PTR es:[edi],al
  402b27:	clc    
  402b28:	in     eax,dx
  402b29:	mov    bh,0xef
  402b2b:	push   ecx
  402b2c:	jmp    0x786427d7
  402b31:	inc    ebx
  402b32:	push   ecx
  402b33:	xchg   BYTE PTR [edx],dl
  402b35:	jne    0x402b32
  402b37:	retf   0x7a49
  402b3a:	dec    edx
  402b3b:	xor    DWORD PTR [edi-0x2c4ae68b],esi
  402b41:	aad    0x69
  402b43:	ins    BYTE PTR es:[edi],dx
  402b44:	iret   
  402b45:	nop
  402b46:	and    BYTE PTR [ebp-0x544555e],bh
  402b4c:	scas   al,BYTE PTR es:[edi]
  402b4d:	mov    cl,0x94
  402b4f:	xor    BYTE PTR [esi-0xd9d98ab],ah
  402b55:	mov    edx,0x68ac01bd
  402b5a:	add    bh,BYTE PTR [ebx+edi*4-0x61caf1b6]
  402b61:	stos   DWORD PTR es:[edi],eax
  402b62:	or     eax,0x50e5c195
  402b67:	jl     0x402b16
  402b69:	jp     0x402be9
  402b6b:	pop    edi
  402b6c:	(bad)  
  402b6d:	outs   dx,DWORD PTR ds:[esi]
  402b6e:	push   cs
  402b6f:	or     edi,DWORD PTR [ebp+0x61a6ad90]
  402b75:	lods   eax,DWORD PTR ds:[esi]
  402b76:	(bad)  
  402b77:	dec    esp
  402b78:	push   cs
  402b79:	pop    ebp
  402b7a:	jl     0x402bdc
  402b7c:	mov    eax,ds:0xab55505c
  402b81:	mov    ebx,0xe81095da
  402b86:	or     al,0x4e
  402b88:	icebp  
  402b89:	mov    ch,0x99
  402b8b:	stc    
  402b8c:	arpl   WORD PTR [eax+0x7a9f37a],bx
  402b92:	fisub  WORD PTR [ecx-0xb]
  402b95:	mov    eax,0x7aaf25d1
  402b9a:	(bad)  
  402b9b:	loopne 0x402bc5
  402b9d:	lods   eax,DWORD PTR ds:[esi]
  402b9e:	lahf   
  402b9f:	sub    al,0x29
  402ba1:	mov    ch,0xb3
  402ba3:	outs   dx,BYTE PTR ds:[esi]
  402ba4:	lock pop ds
  402ba6:	loopne 0x402bb3
  402ba8:	fist   DWORD PTR ds:0x9138b54a
  402bae:	enter  0x54c8,0x8f
  402bb2:	(bad)  
  402bb3:	out    dx,eax
  402bb4:	cmc    
  402bb5:	cmp    BYTE PTR [ebp+0x70],dh
  402bb8:	cmp    eax,0x855b1ddb
  402bbd:	cmp    bh,cl
  402bbf:	cmp    DWORD PTR [ebp+0x2d7b399f],0xccdba0f1
  402bc9:	mov    ?,WORD PTR [ecx+eax*8+0x66386d88]
  402bd0:	in     eax,0xf3
  402bd2:	stos   DWORD PTR es:[edi],eax
  402bd3:	leave  
  402bd4:	(bad)  
  402bd5:	repnz mov bh,0xde
  402bd8:	fsubp  st(3),st
  402bda:	mov    edx,0xee711209
  402bdf:	out    dx,al
  402be0:	xchg   esp,eax
  402be1:	inc    esi
  402be2:	imul   ebx,DWORD PTR [ebx+0x40a046bc],0xffffffdd
  402be9:	leave  
  402bea:	cmp    eax,0xc0e9425
  402bef:	scas   al,BYTE PTR es:[edi]
  402bf0:	cmp    esi,DWORD PTR [esi+ecx*4]
  402bf3:	hlt    
  402bf4:	push   esi
  402bf5:	mov    ah,dh
  402bf7:	mov    esp,0x7e2c80e8
  402bfc:	aad    0xe1
  402bfe:	and    al,0x3f
  402c00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c01:	or     al,0x3
  402c03:	mov    DWORD PTR [ebp-0x45abf99f],edx
  402c09:	pop    esi
  402c0a:	ror    esi,0xab
  402c0d:	and    DWORD PTR [ebp-0x3a],ebp
  402c10:	(bad)  
  402c11:	imul   esi,esi,0xfffffffa
  402c14:	loopne 0x402c2e
  402c16:	arpl   WORD PTR [ecx],bx
  402c18:	pop    ebp
  402c19:	loope  0x402c56
  402c1b:	xchg   esi,eax
  402c1c:	shr    DWORD PTR [ecx],0xbf
  402c1f:	loop   0x402bae
  402c21:	dec    edx
  402c22:	sub    DWORD PTR [edi+0x38e884f3],ebx
  402c28:	loopne 0x402c71
  402c2a:	pop    ebx
  402c2b:	(bad)  
  402c2c:	gs xchg esp,eax
  402c2e:	add    al,0x78
  402c30:	ret    0xae51
  402c33:	mov    ecx,0x587d6d1
  402c38:	mov    eax,0x72e44594
  402c3d:	pop    ds
  402c3e:	mov    esp,0x29de389b
  402c43:	iret   
  402c44:	mov    ds:0xc41a5497,eax
  402c49:	rcl    BYTE PTR [ecx+0x14277617],0x6e
  402c50:	iret   
  402c51:	out    0xdb,eax
  402c53:	ds out dx,al
  402c55:	(bad)  
  402c56:	dec    ebx
  402c57:	cmp    eax,0x51a42a0
  402c5c:	es cwde 
  402c5e:	inc    ecx
  402c5f:	lock sbb ecx,edx
  402c62:	xchg   edx,eax
  402c63:	test   al,0xa1
  402c65:	test   DWORD PTR [edx-0x6c24efd2],ebp
  402c6b:	loopne 0x402ccc
  402c6d:	mov    esi,0x2052c570
  402c72:	addr16 retf 0x67b9
  402c76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c77:	das    
  402c78:	pushf  
  402c79:	sbb    DWORD PTR [edi+0xa],esp
  402c7c:	pop    ebx
  402c7d:	jb     0x402ca5
  402c7f:	sub    al,0xbc
  402c81:	or     eax,0x86cb0988
  402c86:	pause  
  402c88:	pop    eax
  402c89:	mov    eax,0xf10c06c8
  402c8e:	cli    
  402c8f:	push   cs
  402c90:	ja     0x402cf1
  402c92:	dec    edx
  402c93:	mov    WORD PTR [edi],cs
  402c95:	outs   dx,BYTE PTR ds:[esi]
  402c96:	cli    
  402c97:	sub    al,0xcf
  402c99:	push   ss
  402c9a:	sar    DWORD PTR [edi+0x54fc0306],1
  402ca0:	addr16 cli 
  402ca2:	mov    al,ds:0x10fb42f4
  402ca7:	cli    
  402ca8:	mov    ebp,0x1bc677f7
  402cad:	arpl   WORD PTR [ecx],ax
  402caf:	xchg   ebx,eax
  402cb0:	arpl   WORD PTR [eax-0x406c7be6],ax
  402cb6:	add    ebp,DWORD PTR [ebx+0x2b]
  402cb9:	fwait
  402cba:	push   es
  402cbb:	jbe    0x402c6f
  402cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cbe:	mov    eax,0xf5deedf
  402cc3:	add    edi,DWORD PTR [edx]
  402cc5:	scas   eax,DWORD PTR es:[edi]
  402cc6:	cmp    ebx,eax
  402cc8:	push   ebp
  402cc9:	add    esp,DWORD PTR cs:[edx-0x7c458baf]
  402cd0:	(bad)  
  402cd1:	out    0x48,eax
  402cd3:	xor    esp,DWORD PTR [esp+ecx*2-0xd]
  402cd7:	jbe    0x402d1a
  402cd9:	icebp  
  402cda:	retf   0x54e4
  402cdd:	cmp    eax,0x506b0275
  402ce2:	pop    ss
  402ce3:	add    DWORD PTR [edi],edx
  402ce5:	sub    eax,0xd06ae39a
  402cea:	jo     0x402caa
  402cec:	adc    esi,edx
  402cee:	pop    esp
  402cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cf0:	xchg   DWORD PTR [ecx+eax*2-0x289d6891],esp
  402cf7:	lahf   
  402cf8:	out    dx,al
  402cf9:	jb     0x402d23
  402cfb:	out    dx,eax
  402cfc:	xor    al,0x9b
  402cfe:	fs data16 mov dh,0x55
  402d02:	inc    ecx
  402d03:	xor    al,0xc8
  402d05:	sub    al,0x45
  402d07:	xchg   edi,eax
  402d08:	dec    edx
  402d09:	cld    
  402d0a:	push   eax
  402d0b:	retf   0x5bf3
  402d0e:	sub    eax,0x4db970da
  402d13:	enter  0xaf3a,0xbc
  402d17:	je     0x402d5b
  402d19:	pop    es
  402d1a:	iret   
  402d1b:	pushf  
  402d1c:	idiv   DWORD PTR [edi]
  402d1e:	mov    al,0x5a
  402d20:	pop    ecx
  402d21:	pop    ds
  402d22:	cmp    eax,0xe9bbbc02
  402d27:	ja     0x402d1c
  402d29:	jmp    DWORD PTR [edi-0x25a82a6b]
  402d2f:	add    BYTE PTR [ecx],ch
  402d31:	mov    bh,0xbd
  402d33:	aas    
  402d34:	cmp    eax,DWORD PTR [esi]
  402d36:	adc    dh,BYTE PTR [edi+0xb]
  402d39:	push   ds
  402d3a:	adc    BYTE PTR [esi],0xb5
  402d3d:	pushf  
  402d3e:	pop    DWORD PTR [edi-0x4e8ce03b]
  402d44:	push   ebp
  402d45:	and    DWORD PTR [ebp-0x3d6d4b6b],ecx
  402d4b:	add    ch,BYTE PTR [eax+0x287fed1]
  402d51:	loop   0x402cf1
  402d53:	xlat   BYTE PTR ds:[ebx]
  402d54:	and    ah,ch
  402d56:	out    0x41,al
  402d58:	add    eax,0xbae039e1
  402d5d:	mov    ds:0x9f7accd5,eax
  402d62:	and    edi,DWORD PTR [ecx+0x5f6f6ed4]
  402d68:	aaa    
  402d69:	sti    
  402d6a:	jle    0x402dc5
  402d6c:	adc    esp,ecx
  402d6e:	ss jbe 0x402de0
  402d71:	xor    DWORD PTR [edx+ecx*8],ebp
  402d74:	in     eax,dx
  402d75:	test   ebx,0x5f9a5aac
  402d7b:	push   es
  402d7c:	sar    DWORD PTR [ecx-0x64b35265],0x10
  402d83:	imul   ebp,DWORD PTR [eax+0x3f],0x5aedfbe5
  402d8a:	fscale 
  402d8c:	cmp    al,0x8a
  402d8e:	adc    DWORD PTR [eax-0x60],edi
  402d91:	add    BYTE PTR [edx],0x5e
  402d94:	lods   eax,DWORD PTR ds:[esi]
  402d95:	retf   
  402d96:	mov    ebx,0xd058fcdd
  402d9b:	sar    DWORD PTR [esi+0x1b2b35c0],0x90
  402da2:	shl    BYTE PTR [ebp+0x5],1
  402da5:	(bad)  
  402da6:	sub    DWORD PTR [eax-0x19],eax
  402da9:	mov    al,0x2e
  402dab:	dec    esp
  402dac:	push   ds
  402dad:	mov    BYTE PTR [ebx],al
  402daf:	repnz xchg edx,edx
  402db2:	idiv   eax
  402db4:	push   esi
  402db5:	cli    
  402db6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402db7:	mov    dl,0xa2
  402db9:	repnz out 0x32,al
  402dbc:	icebp  
  402dbd:	pop    esp
  402dbe:	add    al,ah
  402dc0:	xor    al,BYTE PTR [ebx+edx*2]
  402dc3:	mov    ecx,0xb54d45ad
  402dc8:	or     eax,0xeaf31c5e
  402dcd:	xor    bh,dl
  402dcf:	in     eax,0x6a
  402dd1:	stos   DWORD PTR es:[edi],eax
  402dd2:	mov    edx,0xc14f08d7
  402dd7:	jbe    0x402de2
  402dd9:	stc    
  402dda:	cmp    ebp,esp
  402ddc:	inc    ebp
  402ddd:	aaa    
  402dde:	push   ss
  402ddf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402de0:	jmp    0xa3563e01
  402de5:	sub    eax,0xc733a759
  402dea:	mov    edi,0x7f79eccf
  402def:	add    DWORD PTR [ecx],0xfffffffa
  402df2:	outs   dx,BYTE PTR ds:[esi]
  402df3:	call   0x60b1:0xe99be383
  402dfa:	inc    DWORD PTR [ebp-0x2be1eb1c]
  402e00:	inc    esi
  402e01:	lock int3 
  402e03:	int    0xeb
  402e05:	retf   
  402e06:	in     al,dx
  402e07:	out    dx,eax
  402e08:	lds    ebx,FWORD PTR [eax]
  402e0a:	repnz push edx
  402e0c:	and    al,ah
  402e0e:	and    bh,dh
  402e10:	cli    
  402e11:	and    BYTE PTR ds:0x71328290,ah
  402e17:	add    al,0x1e
  402e19:	sbb    dh,bh
  402e1b:	or     al,0xca
  402e1d:	lods   al,BYTE PTR ds:[esi]
  402e1e:	jbe    0x402e7a
  402e20:	or     BYTE PTR [esi],dh
  402e22:	aam    0x1f
  402e24:	outs   dx,BYTE PTR ds:[esi]
  402e25:	mov    ecx,0xede1a17d
  402e2a:	bound  edx,QWORD PTR [eax-0x51]
  402e2d:	cmp    BYTE PTR [edi],0x4e
  402e30:	imul   esi,DWORD PTR [ecx],0xcd3646b7
  402e36:	jecxz  0x402e8a
  402e38:	mul    BYTE PTR [edi+0x24]
  402e3b:	test   DWORD PTR [ecx+0x66],esi
  402e3e:	push   0xbfb5d8eb
  402e43:	lods   eax,DWORD PTR ds:[esi]
  402e44:	pusha  
  402e45:	mov    ds:0x29c4aead,eax
  402e4a:	jae    0x402e37
  402e4c:	or     esp,DWORD PTR [ecx]
  402e4e:	ins    BYTE PTR es:[edi],dx
  402e4f:	push   0xbda5b394
  402e54:	jle    0x402e13
  402e56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e57:	xchg   ecx,eax
  402e58:	jmp    0xf2bc0945
  402e5d:	cli    
  402e5e:	xor    eax,0x45467bcb
  402e63:	loop   0x402e51
  402e65:	test   eax,0x4a6f3291
  402e6a:	push   ecx
  402e6b:	or     BYTE PTR [ebx+0x76],bh
  402e6e:	test   DWORD PTR [esi+esi*1],esi
  402e71:	adc    al,0xd
  402e73:	sti    
  402e74:	push   ds
  402e75:	imul   eax,DWORD PTR ds:0x385101d1,0x2e0140ee
  402e7f:	adc    esi,esi
  402e81:	add    BYTE PTR [esi+0x40],dh
  402e84:	ds test eax,0xb33c30e1
  402e8a:	or     BYTE PTR [eax-0x1c],bh
  402e8d:	jle    0x402e57
  402e8f:	fxch   st(4)
  402e91:	shr    BYTE PTR [ebx],1
  402e93:	cs mov esi,0x41dfdede
  402e99:	push   ss
  402e9a:	and    edi,esi
  402e9c:	imul   edx,DWORD PTR [ebp-0x47],0xffffff9b
  402ea0:	or     eax,esi
  402ea2:	and    al,0xc9
  402ea4:	enter  0xade2,0xb
  402ea8:	cmp    eax,0x52b02b13
  402ead:	jg     0x402e90
  402eaf:	out    dx,eax
  402eb0:	fld    TBYTE PTR [eax+0x23]
  402eb3:	dec    edx
  402eb4:	in     al,dx
  402eb5:	adc    cl,BYTE PTR [ebx+0x4d]
  402eb8:	mov    esi,0xada45576
  402ebd:	jb     0x402ec3
  402ebf:	xchg   esp,eax
  402ec0:	xor    al,0xfc
  402ec2:	xchg   ebp,eax
  402ec3:	into   
  402ec4:	mul    BYTE PTR [edx]
  402ec6:	add    al,0x53
  402ec8:	aam    0x8f
  402eca:	aaa    
  402ecb:	hlt    
  402ecc:	sub    BYTE PTR [edi],dl
  402ece:	mov    gs,WORD PTR [edi]
  402ed0:	push   0xdb8bcb73
  402ed5:	leave  
  402ed6:	cmp    ecx,ebx
  402ed8:	xchg   BYTE PTR [edx],ch
  402eda:	sti    
  402edb:	shl    DWORD PTR [esi-0x31392859],0x96
  402ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ee3:	test   DWORD PTR [eax+0x7c],ebp
  402ee6:	pop    edi
  402ee7:	or     ah,0x65
  402eea:	loopne 0x402f3c
  402eec:	scas   al,BYTE PTR es:[edi]
  402eed:	pop    ebx
  402eee:	fisubr WORD PTR [edx]
  402ef0:	call   0xc528:0x2885a5e7
  402ef7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ef8:	adc    bh,bl
  402efa:	jns    0x402f51
  402efc:	xlat   BYTE PTR ds:[ebx]
  402efd:	inc    edx
  402efe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402eff:	fwait
  402f00:	sahf   
  402f01:	mov    eax,0x24926a8f
  402f06:	add    DWORD PTR [edx-0x3ebe4b2d],esp
  402f0c:	aam    0x59
  402f0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f0f:	mov    ebx,DWORD PTR ds:0xa86af4b1
  402f15:	sbb    DWORD PTR [esi],esi
  402f17:	leave  
  402f18:	add    edx,DWORD PTR [esi+0x1a]
  402f1b:	sbb    ebp,DWORD PTR ds:0x9e51536
  402f21:	jmp    0xa877f9a2
  402f26:	lods   al,BYTE PTR ds:[esi]
  402f27:	out    dx,al
  402f28:	jo     0x402ed3
  402f2a:	sahf   
  402f2b:	loop   0x402f2c
  402f2d:	inc    esi
  402f2e:	fnstcw WORD PTR [edx]
  402f30:	pop    ebp
  402f31:	adc    ebp,DWORD PTR [edx+0xdc4cd62]
  402f37:	idiv   dl
  402f39:	ins    DWORD PTR es:[edi],dx
  402f3a:	push   es
  402f3b:	adc    esi,ecx
  402f3d:	out    dx,eax
  402f3e:	enter  0x1820,0xc9
  402f42:	test   DWORD PTR [eax-0x1c14fc2d],esi
  402f48:	imul   ecx,DWORD PTR [edi+eax*2],0x4f
  402f4c:	cmp    edi,esi
  402f4e:	shr    esi,0x76
  402f51:	mov    edi,0xb18d7195
  402f56:	cmp    DWORD PTR [edi],esi
  402f58:	add    BYTE PTR [edi-0x1],ah
  402f5b:	movzx  esi,BYTE PTR [edi-0x6e]
  402f5f:	div    ecx
  402f61:	test   al,0x55
  402f63:	add    al,0x7e
  402f65:	and    esi,ecx
  402f67:	inc    ebx
  402f68:	into   
  402f69:	aas    
  402f6a:	into   
  402f6b:	push   edi
  402f6c:	dec    edi
  402f6d:	mov    ds:0xd4d879b9,al
  402f72:	cmc    
  402f73:	xchg   edi,eax
  402f74:	xlat   BYTE PTR ds:[ebx]
  402f75:	jge    0x402ef7
  402f77:	cmp    eax,0xfbb244d1
  402f7c:	das    
  402f7d:	(bad)  
  402f7e:	or     eax,0x6b915559
  402f83:	pop    ebx
  402f84:	lock shl edi,0xac
  402f88:	icebp  
  402f89:	rcr    bl,1
  402f8b:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  402f8d:	cmp    bh,0x6f
  402f90:	les    ebp,FWORD PTR [edi+0x4c]
  402f93:	cmp    esp,ebx
  402f95:	xchg   ecx,eax
  402f96:	pop    ds
  402f97:	sub    DWORD PTR ds:0x351add48,edi
  402f9d:	inc    edx
  402f9e:	sub    BYTE PTR [esi+edi*1-0x2353c6b4],dl
  402fa5:	adc    BYTE PTR [edx-0x46b9ebaa],ah
  402fab:	mov    BYTE PTR [esi+0x336f9f78],al
  402fb1:	pop    ds
  402fb2:	sub    DWORD PTR ds:0x180ee8c0,esi
  402fb8:	xor    eax,0x1fd30c88
  402fbd:	addr16 icebp 
  402fbf:	in     eax,0x3
  402fc1:	sub    cl,BYTE PTR [esi+ebp*2+0x3]
  402fc5:	jmp    0x3a8:0x86e17fb2
  402fcc:	mov    bl,0x4c
  402fce:	(bad)  
  402fcf:	jmp    0x56c1a033
  402fd4:	jmp    0x5914:0x70ebbbde
  402fdb:	adc    edi,esp
  402fdd:	cwde   
  402fde:	xchg   edi,eax
  402fdf:	jg     0x40301f
  402fe1:	xor    cl,BYTE PTR [esi-0x7]
  402fe4:	dec    edi
  402fe5:	xchg   esp,eax
  402fe6:	dec    ebx
  402fe7:	xchg   edi,eax
  402fe8:	stos   BYTE PTR es:[edi],al
  402fe9:	mov    ah,0xb0
  402feb:	lods   al,BYTE PTR ds:[esi]
  402fec:	xchg   edx,eax
  402fed:	shl    BYTE PTR [ebp-0xf1156a0],1
  402ff3:	retf   
  402ff4:	and    al,cl
  402ff6:	cdq    
  402ff7:	ja     0x402ff8
  402ff9:	lahf   
  402ffa:	rcr    DWORD PTR [esi+0x68],1
  402ffd:	fist   DWORD PTR [esi+0x339f3f99]
  403003:	sbb    eax,0xf69cd785
  403008:	dec    ebx
  403009:	outs   dx,BYTE PTR ds:[esi]
  40300a:	not    BYTE PTR [esi-0x7a]
  40300d:	jge    0x402fe8
  40300f:	cmp    al,0x5f
  403011:	mov    bh,0x6f
  403013:	sbb    BYTE PTR [edi-0x2b],0x6b
  403017:	pop    ds
  403018:	ja     0x403065
  40301a:	jg     0x403003
  40301c:	and    al,BYTE PTR cs:[edi-0x32]
  403020:	xchg   bh,ah
  403022:	mov    ds,WORD PTR [edx+0x7fa66d72]
  403028:	jmp    0xb0a:0x4b84c324
  40302f:	fdiv   st,st(5)
  403031:	cmp    ch,bl
  403033:	(bad)  
  403034:	cdq    
  403035:	mov    al,ds:0xf91d4667
  40303a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40303b:	adc    eax,0x3a3345ce
  403040:	cmp    al,BYTE PTR [edi+0x6d]
  403043:	or     al,dl
  403045:	repnz clc 
  403047:	mov    esp,0x3af2cbeb
  40304c:	add    DWORD PTR [edx+ebx*4-0x6374de8d],edi
  403053:	push   0x30
  403055:	and    al,BYTE PTR [edi]
  403057:	fiadd  DWORD PTR [esi+0x0]
  40305a:	mov    ebp,0xea035af
  40305f:	inc    esp
  403060:	xor    BYTE PTR [eax],ch
  403062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403063:	std    
  403064:	out    dx,eax
  403065:	xor    BYTE PTR [esi+0x27],bl
  403068:	pusha  
  403069:	cmp    edx,DWORD PTR [esi+eiz*2-0x2e]
  40306d:	int3   
  40306e:	xor    DWORD PTR [esi-0x28],ecx
  403071:	sub    DWORD PTR [ebp-0x614d45ec],ebx
  403077:	sar    bh,0x54
  40307a:	mov    ds:0x297c4776,eax
  40307f:	ret    0xdbfb
  403082:	inc    ecx
  403083:	outs   dx,DWORD PTR ds:[esi]
  403084:	or     bl,0xac
  403087:	cmp    ebp,ecx
  403089:	jnp    0x40303a
  40308b:	mov    ebx,0xea28a85d
  403090:	mov    esp,0xadfb33be
  403095:	aas    
  403096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403097:	test   BYTE PTR [eax+0x2dd653a4],0xd7
  40309e:	cdq    
  40309f:	push   0x62
  4030a1:	cmp    bl,BYTE PTR [edx-0x11]
  4030a4:	adc    dl,ah
  4030a6:	sub    edx,DWORD PTR [esi+ebp*4-0x3c]
  4030aa:	in     eax,dx
  4030ab:	jmp    0x40305d
  4030ad:	ror    DWORD PTR [eax+0x43],cl
  4030b0:	xchg   edx,eax
  4030b1:	cmp    eax,DWORD PTR [ebp-0x1e351dd]
  4030b7:	test   eax,0xfde609b9
  4030bc:	mov    dh,0x35
  4030be:	pop    esi
  4030bf:	mov    BYTE PTR [ecx+0x51e6487a],al
  4030c5:	lea    esi,[ebx+0x5a07028]
  4030cb:	ja     0x40310c
  4030cd:	inc    esp
  4030ce:	cs fwait
  4030d0:	jo     0x40314d
  4030d2:	sub    eax,0x84e7f545
  4030d7:	into   
  4030d8:	mov    WORD PTR [edx],?
  4030da:	ror    ecx,1
  4030dc:	and    DWORD PTR [eax+ebp*2-0x30],eax
  4030e0:	jnp    0x403122
  4030e2:	jns    0x4030b4
  4030e4:	js     0x403077
  4030e6:	pop    ds
  4030e7:	call   0x8ac5:0x7220891f
  4030ee:	jmp    0x4030e9
  4030f0:	pop    ds
  4030f1:	mov    edi,0x849fca5e
  4030f6:	jb     0x403165
  4030f8:	pop    ss
  4030f9:	or     cl,bl
  4030fb:	mov    edi,0x8dd7e623
  403100:	ins    DWORD PTR es:[edi],dx
  403101:	or     edi,edx
  403103:	pop    ss
  403104:	dec    ebp
  403105:	push   esi
  403106:	push   es
  403107:	and    al,BYTE PTR [eax-0x51]
  40310a:	sub    dh,BYTE PTR [ebp-0x1360c8ae]
  403110:	fiadd  WORD PTR [ecx-0x13]
  403113:	es jmp 0x9246673b
  403119:	iret   
  40311a:	jnp    0x403148
  40311c:	adc    al,0xdb
  40311e:	enter  0x3e16,0x8d
  403122:	(bad)  
  403123:	retf   
  403124:	repz mov eax,ds:0x2b054b7e
  40312a:	stc    
  40312b:	or     al,BYTE PTR [edi-0x2c]
  40312e:	mov    edx,0x673771f3
  403133:	dec    ebx
  403134:	jg     0x403110
  403136:	aaa    
  403137:	test   BYTE PTR [ecx-0x57],al
  40313a:	push   esp
  40313b:	xor    bl,BYTE PTR [edi+0x12]
  40313e:	retf   0xfbc1
  403141:	out    dx,al
  403142:	dec    edi
  403143:	or     BYTE PTR [ebx+0x3d29670],dh
  403149:	dec    esi
  40314a:	add    dl,BYTE PTR [esi-0x656684c9]
  403150:	bound  esi,QWORD PTR [edx+0x18833bf5]
  403156:	xor    ah,ah
  403158:	xor    ebx,DWORD PTR [ecx]
  40315a:	aaa    
  40315b:	aas    
  40315c:	ret    
  40315d:	mov    bh,0xc4
  40315f:	inc    ebp
  403160:	dec    esi
  403161:	pusha  
  403162:	cdq    
  403163:	mov    DWORD PTR [ecx],ebp
  403165:	cmp    DWORD PTR [esi-0x381e26be],edi
  40316b:	pop    ebx
  40316c:	or     bl,BYTE PTR [edx+0x11716d1f]
  403172:	jmp    0x4da5:0xf8ea41cf
  403179:	movnti DWORD PTR [edi+edx*8+0xe32bc62],ebx
  403181:	out    0x1d,eax
  403183:	cmp    DWORD PTR [esi-0x53],ebp
  403186:	inc    edi
  403187:	push   0x33212b5e
  40318c:	dec    edi
  40318d:	and    dh,BYTE PTR [edx+ecx*8+0x64]
  403191:	xchg   edi,eax
  403192:	push   0x42
  403194:	jno    0x40315c
  403196:	xor    edi,0x6d51b443
  40319c:	mov    al,0x50
  40319e:	pop    esi
  40319f:	call   0xfa5dc556
  4031a4:	shl    BYTE PTR [edx+0x2e2d7c40],1
  4031aa:	jge    0x40322b
  4031ac:	add    DWORD PTR [ebp-0x17b88311],esi
  4031b2:	jge    0x40313c
  4031b4:	mov    edx,esp
  4031b6:	rol    DWORD PTR [eax],1
  4031b8:	out    dx,eax
  4031b9:	call   0xcf58:0x640a15b6
  4031c0:	(bad)  
  4031c1:	fstp   DWORD PTR [edx+0x3b]
  4031c4:	push   edi
  4031c5:	adc    ecx,ebx
  4031c7:	fs out 0x24,eax
  4031ca:	or     al,0x6f
  4031cc:	mov    DWORD PTR [edi+esi*8-0x199569bd],edi
  4031d3:	or     eax,0x68933293
  4031d8:	jmp    0xe751:0x2617888d
  4031df:	jp     0x40319b
  4031e1:	inc    ebx
  4031e2:	xchg   ebx,eax
  4031e3:	and    eax,0xe5f95be1
  4031e8:	inc    ecx
  4031e9:	push   edx
  4031ea:	adc    DWORD PTR [esi],edi
  4031ec:	adc    bh,ch
  4031ee:	int    0x53
  4031f0:	cmp    eax,0x20bcb622
  4031f5:	push   edx
  4031f6:	gs dec edi
  4031f8:	popa   
  4031f9:	data16 xor BYTE PTR ds:0x62eee69e,0x98
  403201:	mov    esp,0x4c90a17
  403206:	outs   dx,BYTE PTR ds:[esi]
  403207:	adc    al,0x77
  403209:	(bad)  
  40320a:	imul   esp,DWORD PTR [edi-0x30],0x3e
  40320e:	das    
  40320f:	cdq    
  403210:	in     eax,dx
  403211:	push   esi
  403212:	ret    0x4688
  403215:	lds    ecx,FWORD PTR [edi-0x55]
  403218:	(bad)  
  403219:	mov    ebx,0xc33fc698
  40321e:	dec    esi
  40321f:	pop    ebx
  403220:	dec    ecx
  403221:	dec    ebx
  403222:	pop    edi
  403223:	rcl    DWORD PTR [eax],0x10
  403226:	mov    al,0x93
  403228:	pop    edi
  403229:	sbb    al,0xae
  40322b:	push   edi
  40322c:	and    eax,0x8edc4308
  403231:	clc    
  403232:	jge    0x4032a6
  403234:	or     ah,cl
  403236:	and    BYTE PTR [ecx-0x20],dl
  403239:	mov    al,0x7
  40323b:	cmp    al,0xef
  40323d:	ins    DWORD PTR es:[edi],dx
  40323e:	mov    ah,0x2d
  403240:	mov    al,ds:0xec18b0fb
  403245:	into   
  403246:	gs mov ah,0xec
  403249:	fucomp st(3)
  40324b:	popf   
  40324c:	add    dh,al
  40324e:	mov    esp,0x319754cb
  403253:	push   ebp
  403254:	inc    ecx
  403255:	or     ecx,0x65
  403258:	adc    eax,0xede58ba8
  40325d:	mov    edx,0x731b4b30
  403262:	xchg   ecx,eax
  403263:	stos   DWORD PTR es:[edi],eax
  403264:	inc    esp
  403265:	sub    al,BYTE PTR [ebx+0x6]
  403268:	mov    al,0x98
  40326a:	data16 stc 
  40326c:	mov    DWORD PTR [esi],esp
  40326e:	sbb    ebx,DWORD PTR [esi-0x21]
  403271:	ret    0x8bc2
  403274:	sub    ebp,DWORD PTR [edi-0xfa42d4a]
  40327a:	sbb    eax,DWORD PTR [edi+0x20]
  40327d:	sub    DWORD PTR [ebp+0x0],ecx
  403280:	mov    cl,0x86
  403282:	mov    al,ds:0x78d040bd
  403287:	inc    ecx
  403288:	fldenv [ecx-0x2f]
  40328b:	dec    eax
  40328c:	push   esi
  40328d:	adc    eax,0xff69cdb7
  403292:	dec    edi
  403293:	je     0x40329f
  403295:	loopne 0x4032eb
  403297:	call   0xf192:0x6d139594
  40329e:	pop    edi
  40329f:	aad    0x3b
  4032a1:	mov    ds:0x954d396c,eax
  4032a6:	jge    0x4032ed
  4032a8:	out    dx,eax
  4032a9:	push   es
  4032aa:	add    dl,bl
  4032ac:	mov    dh,0xce
  4032ae:	jnp    0x4032b3
  4032b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b1:	shl    edi,1
  4032b3:	sub    ch,bh
  4032b5:	and    BYTE PTR [esi+0x5b9637aa],ch
  4032bb:	inc    edx
  4032bc:	js     0x4032c4
  4032be:	stc    
  4032bf:	mov    dh,0x11
  4032c1:	fs inc ebp
  4032c3:	and    al,0x9f
  4032c5:	gs mov esp,0x1231c7b8
  4032cb:	inc    edi
  4032cc:	xchg   esi,eax
  4032cd:	outs   dx,DWORD PTR ds:[esi]
  4032ce:	mov    esp,0x87584ab5
  4032d3:	mov    ebx,0x7134a120
  4032d8:	arpl   WORD PTR [esi+0x56],sp
  4032db:	clc    
  4032dc:	sti    
  4032dd:	sub    dl,BYTE PTR [edx+0x825817]
  4032e3:	mov    dh,0x58
  4032e5:	fs (bad) 
  4032e7:	xor    BYTE PTR [edx+0x40],al
  4032ea:	es aaa 
  4032ec:	sbb    DWORD PTR [esi+0x35],ecx
  4032ef:	repz dec edi
  4032f1:	pop    es
  4032f2:	dec    ebx
  4032f3:	ins    DWORD PTR es:[edi],dx
  4032f4:	dec    edx
  4032f5:	gs inc ebx
  4032f7:	push   cs
  4032f8:	jl     0x4032c1
  4032fa:	mov    al,BYTE PTR [esi-0x27a333b8]
  403300:	jne    0x403311
  403302:	iret   
  403303:	mov    ebp,0x6ca50148
  403308:	inc    esi
  403309:	int3   
  40330a:	mov    eax,0xefcfc94
  40330f:	mov    esi,0x22eb294a
  403314:	adc    esi,DWORD PTR [esp+ebp*8]
  403317:	sti    
  403318:	xchg   edx,eax
  403319:	jg     0x403365
  40331b:	je     0x403341
  40331d:	dec    ebx
  40331e:	repnz sar ah,0xd4
  403322:	mov    dl,0x5d
  403324:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403325:	es dec eax
  403327:	add    BYTE PTR [eax+0x6631027],dl
  40332d:	pop    ebx
  40332e:	push   ecx
  40332f:	mov    dh,0x6f
  403331:	push   ecx
  403332:	data16 sbb bh,BYTE PTR [eax]
  403335:	in     eax,dx
  403336:	clc    
  403337:	mov    eax,DWORD PTR [ecx+0x6872ba14]
  40333d:	or     eax,0x4b6da1ce
  403342:	mov    al,ds:0x87129ec6
  403347:	mov    cl,BYTE PTR [esi]
  403349:	into   
  40334a:	mov    eax,0x243be1e
  40334f:	push   ebp
  403350:	test   DWORD PTR [esi+esi*8],0x1b7d2a36
  403357:	cmc    
  403358:	add    BYTE PTR [ecx+0x3f1e2042],dl
  40335e:	loope  0x403389
  403360:	or     ch,ch
  403362:	scas   eax,DWORD PTR es:[edi]
  403363:	jns    0x403335
  403365:	shl    DWORD PTR [edi],0x2e
  403368:	nop
  403369:	ss iret 
  40336b:	mul    BYTE PTR [ebx-0x5c546e91]
  403371:	das    
  403372:	pushf  
  403373:	in     eax,0xeb
  403375:	pop    esi
  403376:	out    dx,al
  403377:	(bad)  
  403378:	and    cl,BYTE PTR [ecx-0x27db35d2]
  40337e:	xlat   BYTE PTR ds:[ebx]
  40337f:	mov    DWORD PTR [esi-0x5d],edx
  403382:	adc    BYTE PTR [eax+eiz*1],ah
  403385:	div    BYTE PTR [eax+0x6f]
  403388:	sbb    ch,cl
  40338a:	fnstsw ax
  40338c:	mov    ebx,0xe0632e4a
  403391:	popa   
  403392:	popf   
  403393:	push   cs
  403394:	pop    ecx
  403395:	and    ecx,edi
  403397:	and    eax,0xeba01861
  40339c:	mov    edi,es
  40339e:	lock cmp esi,DWORD PTR [esi-0x46]
  4033a2:	sbb    dl,BYTE PTR [edx+0x66c2abb3]
  4033a8:	push   es
  4033a9:	scas   eax,DWORD PTR es:[edi]
  4033aa:	fsubr  st(3),st
  4033ac:	or     esp,DWORD PTR [ecx-0x2910da1f]
  4033b2:	lea    ecx,[ecx+0x58]
  4033b5:	rol    ecx,1
  4033b7:	std    
  4033b8:	push   ecx
  4033b9:	leave  
  4033ba:	xor    bl,cl
  4033bc:	hlt    
  4033bd:	or     esp,DWORD PTR [eax]
  4033bf:	test   al,0x9d
  4033c1:	xchg   edx,eax
  4033c2:	push   es
  4033c3:	aad    0x86
  4033c5:	rol    DWORD PTR [edi+0x646d0784],cl
  4033cb:	xchg   ecx,eax
  4033cc:	shl    cl,cl
  4033ce:	or     BYTE PTR [edi],dl
  4033d0:	fucomp st(0)
  4033d2:	jno    0x40336b
  4033d4:	sbb    ch,BYTE PTR [esi+0x20]
  4033d7:	mov    dl,0xf8
  4033d9:	mov    eax,0xa43fb3a0
  4033de:	scas   eax,DWORD PTR es:[edi]
  4033df:	jb     0x403363
  4033e1:	push   ecx
  4033e2:	arpl   WORD PTR [edx-0x3f],di
  4033e5:	dec    ebp
  4033e6:	mov    edx,DWORD PTR [edx+0x7d3c8fe1]
  4033ec:	mov    edi,0x27dcfd87
  4033f1:	cli    
  4033f2:	xchg   DWORD PTR [edx+0x4b],ebp
  4033f5:	jno    0x40340b
  4033f7:	mov    bh,0xb7
  4033f9:	mov    dl,0xcd
  4033fb:	hlt    
  4033fc:	mov    edx,0x954c1579
  403401:	es or  eax,0x1c1c3805
  403407:	lods   al,BYTE PTR ds:[esi]
  403408:	push   esi
  403409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40340a:	mov    ds:0x6ebf6294,eax
  40340f:	out    dx,eax
  403410:	fiadd  WORD PTR [edi]
  403412:	mov    ds:0x6c0571e,eax
  403417:	jno    0x403400
  403419:	add    dh,0x48
  40341c:	imul   ebx,DWORD PTR [eax+ebp*1-0x7d],0xffffffc6
  403421:	mov    DWORD PTR [eax+0x10],esp
  403424:	enter  0xffab,0x89
  403428:	(bad)  
  403429:	jge    0x403476
  40342b:	mov    edi,DWORD PTR [ebx+0x1e46f164]
  403431:	jbe    0x403420
  403433:	(bad)  
  403434:	jg     0x40347e
  403436:	test   BYTE PTR [edi],dh
  403438:	setge  BYTE PTR [ecx-0x36]
  40343c:	push   edi
  40343d:	into   
  40343e:	mov    dl,0x84
  403440:	(bad)  
  403441:	sahf   
  403442:	or     BYTE PTR [ebx-0xa],al
  403445:	and    al,0x4c
  403447:	and    al,dl
  403449:	mov    dh,0xc8
  40344b:	out    dx,eax
  40344c:	xor    esi,DWORD PTR [ebx+ebp*1+0x13888b9a]
  403453:	ds or  eax,0x8c9c268f
  403459:	ret    0x1d6b
  40345c:	mov    WORD PTR [edx+0x54],cs
  40345f:	jae    0x403451
  403461:	jne    0x403458
  403463:	in     al,dx
  403464:	in     eax,dx
  403465:	mov    edi,0xe3a4d39c
  40346a:	lods   eax,DWORD PTR ds:[esi]
  40346b:	xor    eax,DWORD PTR [ecx+0x4c]
  40346e:	mov    ss,WORD PTR [edi-0x27cc501a]
  403474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403475:	xor    ch,BYTE PTR [ebx]
  403477:	fcom   QWORD PTR [eax-0x61cb09a]
  40347d:	repnz pop edx
  40347f:	bound  esp,QWORD PTR [ecx+0x74]
  403482:	aas    
  403483:	je     0x403461
  403485:	push   eax
  403486:	lods   eax,DWORD PTR ds:[esi]
  403487:	and    eax,0xa908fca1
  40348c:	sub    eax,0x96d36c1f
  403491:	inc    ecx
  403492:	inc    eax
  403493:	and    bh,BYTE PTR [ebx+0x3d214a4c]
  403499:	push   0x66cce4c8
  40349e:	test   eax,0xb1f3dacf
  4034a3:	cwde   
  4034a4:	lock js 0x403500
  4034a7:	push   edx
  4034a8:	retf   
  4034a9:	xor    ebx,ebp
  4034ab:	das    
  4034ac:	and    esp,DWORD PTR [edi-0x2b1deb6d]
  4034b2:	push   esp
  4034b3:	sbb    al,0x45
  4034b5:	retf   
  4034b6:	imul   ecx,esp,0xb
  4034b9:	ficomp DWORD PTR [esi+esi*1+0x387668b0]
  4034c0:	jp     0x403491
  4034c2:	out    dx,al
  4034c3:	jmp    0x403504
  4034c5:	dec    ebp
  4034c6:	lods   al,BYTE PTR gs:[esi]
  4034c8:	repnz cmp bl,al
  4034cb:	pop    es
  4034cc:	into   
  4034cd:	repnz sbb al,0x58
  4034d0:	cs into 
  4034d2:	xor    esp,edx
  4034d4:	fmul   st(6),st
  4034d6:	addr16 je 0x40352f
  4034d9:	inc    edi
  4034da:	or     eax,0xb1a78920
  4034df:	and    al,0xaf
  4034e1:	shr    DWORD PTR [edx+0x751b095e],0xc2
  4034e8:	ror    BYTE PTR ds:0x30ba9aaf,0x2f
  4034ef:	pop    esi
  4034f0:	or     edx,esi
  4034f2:	dec    ecx
  4034f3:	aas    
  4034f4:	push   edi
  4034f5:	imul   eax,DWORD PTR [ecx+0x3e],0xfa87aca5
  4034fc:	sub    bh,BYTE PTR [edi+ebx*2]
  4034ff:	mov    eax,ds:0x7c16d400
  403504:	or     dh,al
  403506:	jno    0x403577
  403508:	lds    ebx,FWORD PTR [edi-0x2c]
  40350b:	lahf   
  40350c:	lods   eax,DWORD PTR ds:[esi]
  40350d:	xor    ecx,DWORD PTR [ebp-0x87efe90]
  403513:	pop    esi
  403514:	ret    
  403515:	test   eax,0x8cf26c1a
  40351a:	mov    cl,0x55
  40351c:	aaa    
  40351d:	cmp    ch,BYTE PTR [eax]
  40351f:	mov    cl,0xc2
  403521:	aaa    
  403522:	jbe    0x403513
  403524:	dec    eax
  403525:	add    al,0xa2
  403527:	xchg   BYTE PTR [edx],bh
  403529:	ins    BYTE PTR es:[edi],dx
  40352a:	test   eax,0x1b900015
  40352f:	push   edi
  403530:	mov    ds:0x1622cc91,eax
  403535:	out    0x5a,eax
  403537:	je     0x403501
  403539:	jns    0x4034bd
  40353b:	out    dx,eax
  40353c:	and    bh,dl
  40353e:	mov    cx,0xa549
  403542:	pop    ss
  403543:	test   DWORD PTR [eax-0x23],0x1636d4b8
  40354a:	mov    DWORD PTR [esi+0x7265476],0x281e2a19
  403554:	jae    0x4034ef
  403556:	inc    ebp
  403557:	icebp  
  403558:	jmp    0xf7867555
  40355d:	das    
  40355e:	and    edi,esp
  403560:	mov    edi,0x6bbac1f4
  403565:	or     eax,DWORD PTR [edx+ebx*8]
  403568:	and    eax,0x7b0ef328
  40356d:	cmp    ebx,DWORD PTR [ebx-0xd]
  403570:	outs   dx,DWORD PTR ds:[esi]
  403571:	adc    DWORD PTR [esi+0x66],ebp
  403574:	retf   
  403575:	jg     0x40351b
  403577:	jmp    DWORD PTR [esi+0x68]
  40357a:	mov    es,WORD PTR [ebp+eiz*4+0x61]
  40357e:	loope  0x403520
  403580:	push   0xc69f3795
  403585:	add    ecx,esp
  403587:	jae    0x4035f0
  403589:	outs   dx,DWORD PTR ds:[esi]
  40358a:	and    ah,ch
  40358c:	adc    al,0x83
  40358e:	cmp    ebx,DWORD PTR [edi]
  403590:	dec    ebx
  403591:	repnz xor eax,0x88df45e
  403597:	or     al,0x6e
  403599:	xor    bh,ch
  40359b:	xor    al,0x8d
  40359d:	jmp    0x40359e
  40359f:	enter  0x5481,0x49
  4035a3:	aam    0x6c
  4035a5:	dec    edi
  4035a6:	pop    ebx
  4035a7:	mov    ?,WORD PTR [ecx]
  4035a9:	repz push ecx
  4035ab:	in     eax,0xb
  4035ad:	and    eax,0xbf734d25
  4035b2:	xchg   DWORD PTR [eax+ebp*4+0x6e],edi
  4035b6:	int    0x88
  4035b8:	pushf  
  4035b9:	or     BYTE PTR [edi-0x2750b012],al
  4035bf:	std    
  4035c0:	and    eax,0x96888512
  4035c5:	adc    DWORD PTR [edx],ebp
  4035c7:	rol    BYTE PTR [ebx-0xd3c966b],0x1a
  4035ce:	rcr    BYTE PTR [esi+0x25],1
  4035d1:	scas   eax,DWORD PTR es:[edi]
  4035d2:	int3   
  4035d3:	adc    al,0x13
  4035d5:	mov    al,ds:0x52758b39
  4035da:	jmp    0x4fa1:0xb3b0d7f2
  4035e1:	cmp    edi,DWORD PTR [eax]
  4035e3:	jo     0x40364a
  4035e5:	mov    cl,BYTE PTR [ebx+ebx*2+0x6]
  4035e9:	xchg   edx,eax
  4035ea:	and    ecx,DWORD PTR [esi-0x3b]
  4035ed:	sbb    DWORD PTR [esi],eax
  4035ef:	aas    
  4035f0:	cwde   
  4035f1:	mov    edx,0xd1bb2b78
  4035f6:	mov    al,0x33
  4035f8:	xor    al,ah
  4035fa:	or     esi,edi
  4035fc:	jg     0x40363d
  4035fe:	inc    esp
  4035ff:	sbb    edi,DWORD PTR [esi+0x50]
  403602:	stc    
  403603:	xchg   dh,ah
  403605:	push   es
  403606:	dec    edx
  403607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403608:	push   ds
  403609:	or     bh,BYTE PTR [ebx+0x34624777]
  40360f:	cmc    
  403610:	stos   BYTE PTR es:[edi],al
  403611:	cld    
  403612:	jmp    0x98f175ab
  403617:	out    dx,eax
  403618:	(bad)  
  40361a:	jae    0x3c1688e3
  403620:	mov    al,ds:0xc7828d28
  403625:	push   ebx
  403626:	sbb    bl,BYTE PTR [ebx+ecx*4+0x7e]
  40362a:	call   0x2d4c:0xcfe4cc61
  403631:	loopne 0x40360a
  403633:	es push ecx
  403635:	inc    esp
  403636:	jmp    0xd71d:0xf37f618d
  40363d:	dec    cl
  40363f:	int    0x54
  403641:	mov    DWORD PTR [eax+0x4b],eax
  403644:	(bad)
  403648:	mov    WORD PTR [ecx+0x40],gs
  40364b:	cwde   
  40364c:	adc    BYTE PTR [edx-0x77],bl
  40364f:	push   ecx
  403650:	sbb    eax,0x5b5287d
  403655:	mov    bh,bl
  403657:	cmc    
  403658:	shl    ah,cl
  40365a:	adc    DWORD PTR [ecx],esp
  40365c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40365d:	jge    0x4036a4
  40365f:	sub    al,0x5
  403661:	test   DWORD PTR [ebp-0x6],edi
  403664:	and    eax,eax
  403666:	inc    esp
  403667:	mov    esp,?
  403669:	or     DWORD PTR [eax-0x4e1cd3eb],ebx
  40366f:	xchg   ebp,eax
  403670:	sahf   
  403671:	popf   
  403672:	jb     0x40367a
  403674:	je     0x403692
  403676:	popa   
  403677:	lea    edi,[esi-0x34]
  40367a:	sub    al,0x71
  40367c:	imul   eax,DWORD PTR [esi],0x0
  40367f:	jns    0x403686
  403681:	rcr    bl,1
  403683:	pop    esp
  403684:	sbb    eax,0xc1f64c0b
  403689:	in     al,0xac
  40368b:	jae    0x403694
  40368d:	int3   
  40368e:	lds    ebx,FWORD PTR ds:0x293a85bb
  403694:	add    BYTE PTR [edx+0x21d0839a],al
  40369a:	mov    cl,0xc
  40369c:	cmc    
  40369d:	pusha  
  40369e:	dec    ecx
  40369f:	or     BYTE PTR [esi],cl
  4036a1:	xchg   esp,eax
  4036a2:	jns    0x4036e0
  4036a4:	xchg   ecx,eax
  4036a5:	cmp    BYTE PTR [ebx+0x36a654ba],bh
  4036ab:	push   esp
  4036ac:	lock xor ebp,DWORD PTR [ebx-0x2a647bdc]
  4036b3:	add    bh,al
  4036b5:	sub    DWORD PTR ds:0x5267,edi
  4036ba:	mov    ecx,0xcd51d433
  4036bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036c0:	pop    eax
  4036c1:	push   ebp
  4036c2:	and    dl,BYTE PTR [esi]
  4036c4:	cmp    DWORD PTR ds:0xfa674dea,esp
  4036ca:	push   es
  4036cb:	jae    0x4036e2
  4036cd:	in     eax,dx
  4036ce:	sub    edi,DWORD PTR [ecx-0x71]
  4036d1:	jae    0x40367f
  4036d3:	ja     0x40368f
  4036d5:	dec    ecx
  4036d6:	push   edx
  4036d7:	not    DWORD PTR [esi+0xc]
  4036da:	adc    dh,BYTE PTR [esi]
  4036dc:	dec    edi
  4036dd:	xor    al,0xfe
  4036df:	or     DWORD PTR [edi],edi
  4036e1:	xor    eax,DWORD PTR [edi]
  4036e3:	(bad)  
  4036e4:	fbld   TBYTE PTR [esi]
  4036e6:	mov    eax,0xc0162b73
  4036eb:	jb     0x4036f4
  4036ed:	loopne 0x4036ec
  4036ef:	add    al,0x22
  4036f1:	mov    al,ds:0x3ba70f3f
  4036f6:	sbb    dh,ch
  4036f8:	or     BYTE PTR [esi-0x20],0x3e
  4036fc:	jmp    0xb798:0xbcb0a797
  403703:	sub    dl,BYTE PTR [ecx]
  403705:	mov    cl,0xd1
  403707:	sub    ebx,DWORD PTR [esi]
  403709:	or     BYTE PTR [esi-0x4],al
  40370c:	xor    dh,BYTE PTR [ebx-0x53]
  40370f:	bound  ebx,QWORD PTR [edi-0x3a6a23fc]
  403715:	jbe    0x4036dd
  403717:	sub    eax,0xc92bb637
  40371c:	sub    eax,0x3267bc76
  403721:	ret    
  403722:	jl     0x403706
  403724:	in     al,dx
  403725:	daa    
  403726:	std    
  403727:	mov    ecx,0xef2f22e5
  40372c:	add    eax,0xf5d59574
  403731:	lods   eax,DWORD PTR ds:[esi]
  403732:	pop    eax
  403733:	scas   eax,DWORD PTR es:[edi]
  403734:	add    al,0x15
  403736:	dec    eax
  403737:	test   eax,0x260260b2
  40373c:	and    eax,0x59aa9690
  403741:	lods   al,BYTE PTR ds:[esi]
  403742:	repnz outs dx,DWORD PTR ds:[esi]
  403744:	or     ebx,DWORD PTR [ebp+0x20]
  403747:	je     0x403768
  403749:	xor    BYTE PTR [edx+0x2e33a00c],bl
  40374f:	call   0x2560fdb1
  403754:	jp     0x4037af
  403756:	push   cs
  403757:	ds loop 0x403730
  40375a:	jecxz  0x4036e2
  40375c:	lds    edi,FWORD PTR [edx-0x6e6cc22e]
  403762:	and    bl,BYTE PTR [ebp+0x73]
  403765:	ret    0x7103
  403768:	iret   
  403769:	add    DWORD PTR [ebx+0x43],0xffffff93
  40376d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40376e:	fsubr  st,st(5)
  403770:	xchg   ecx,eax
  403771:	or     edx,DWORD PTR [ebx+0x78731dc1]
  403777:	lds    edi,FWORD PTR [ebx]
  403779:	pop    ebx
  40377a:	jne    0x403745
  40377c:	push   0xe
  40377e:	scas   eax,DWORD PTR es:[edi]
  40377f:	ins    BYTE PTR es:[edi],dx
  403780:	sbb    eax,0x5163f2b4
  403785:	das    
  403786:	out    0xe2,al
  403788:	inc    edi
  403789:	and    eax,0x55088c68
  40378e:	dec    esp
  40378f:	jg     0x403711
  403791:	jno    0x4037d9
  403793:	gs jae 0x403812
  403796:	int    0x55
  403798:	and    DWORD PTR [ebp+edi*2-0x67],ecx
  40379c:	sub    eax,0x4516b60c
  4037a1:	mov    al,0xf9
  4037a3:	data16 mov dl,0x55
  4037a6:	retf   
  4037a7:	push   ebp
  4037a8:	test   BYTE PTR [edx+0x509f22f9],0xf8
  4037af:	add    dl,bl
  4037b1:	fs dec edi
  4037b3:	xchg   ebx,eax
  4037b4:	mov    bh,0xf1
  4037b6:	lock loopne 0x403785
  4037b9:	adc    DWORD PTR [ebp+0x658095d6],edi
  4037bf:	push   esi
  4037c0:	mov    edx,eax
  4037c2:	inc    ebx
  4037c3:	and    bl,ch
  4037c5:	sub    DWORD PTR [edi],edx
  4037c7:	adc    al,0x97
  4037c9:	or     ebp,DWORD PTR [ebx-0x46]
  4037cc:	retf   0x3150
  4037cf:	adc    BYTE PTR [eax+0x52d81089],ah
  4037d5:	cmp    al,BYTE PTR [eax]
  4037d7:	ret    0xc160
  4037da:	sahf   
  4037db:	cmp    esi,DWORD PTR [esi+ebp*2]
  4037de:	ins    DWORD PTR es:[edi],dx
  4037df:	(bad)  
  4037e0:	pmaxsw mm2,QWORD PTR [ecx+0x79bc8f7]
  4037e7:	add    esp,ebp
  4037e9:	adc    ecx,DWORD PTR [eax-0x54]
  4037ec:	test   DWORD PTR [ebx],edi
  4037ee:	and    DWORD PTR [esi],eax
  4037f0:	jnp    0x403831
  4037f2:	jp     0x403820
  4037f4:	aad    0x91
  4037f6:	inc    esi
  4037f7:	xchg   esp,eax
  4037f8:	outs   dx,DWORD PTR ds:[esi]
  4037f9:	dec    eax
  4037fa:	xor    ebx,eax
  4037fc:	pop    ebx
  4037fd:	jge    0x4037f0
  4037ff:	clc    
  403800:	gs test al,0x68
  403803:	stos   BYTE PTR es:[edi],al
  403804:	dec    esp
  403805:	call   0x116732dc
  40380a:	sbb    DWORD PTR [edx+0x5d],ecx
  40380d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40380e:	and    ebx,DWORD PTR [edi]
  403810:	cmp    cl,al
  403812:	dec    edx
  403813:	add    eax,0x439253ab
  403818:	outs   dx,BYTE PTR ds:[esi]
  403819:	jl     0x4037be
  40381b:	(bad)  
  40381c:	repnz rol BYTE PTR [edx+0x4a],0xe1
  403821:	lahf   
  403822:	mov    esi,0xd73ca040
  403827:	cmp    eax,0xd4bb51dd
  40382c:	ja     0x40383f
  40382e:	cli    
  40382f:	push   es
  403830:	jecxz  0x4037bb
  403832:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403833:	mov    bh,0x9d
  403835:	jp     0x403810
  403837:	xor    dh,0x1
  40383a:	push   0xffffffc2
  40383c:	cmp    edi,edi
  40383e:	push   edi
  40383f:	cmp    al,0xd5
  403841:	pusha  
  403842:	xchg   edx,eax
  403843:	aad    0xde
  403845:	mov    dh,0x83
  403847:	es cmp al,0x54
  40384a:	mov    WORD PTR [ebp-0x38],gs
  40384d:	mov    BYTE PTR [ebp-0x7e],0x7c
  403851:	add    eax,0xde9371cd
  403856:	cmp    BYTE PTR [edx-0x6feda78f],ah
  40385c:	mov    ah,BYTE PTR [ecx-0x67b3e228]
  403862:	or     dh,BYTE PTR [ecx-0x9]
  403865:	in     eax,0x0
  403867:	xor    ebx,0xfffffff0
  40386a:	jmp    0x4038a8
  40386c:	or     ebp,DWORD PTR [esi]
  40386e:	jge    0x40383d
  403870:	aad    0x6f
  403872:	fwait
  403873:	int    0xcf
  403875:	fisttp WORD PTR [eax+0x699cc0eb]
  40387b:	sbb    edx,edi
  40387d:	es mov ebx,0x46925851
  403883:	aam    0x12
  403885:	test   al,0xb
  403887:	push   eax
  403888:	xchg   ecx,eax
  403889:	(bad)
  40388e:	mov    BYTE PTR [edx],0x83
  403891:	imul   edi,DWORD PTR [ebx],0xbeafbfee
  403897:	stos   BYTE PTR es:[edi],al
  403898:	lahf   
  403899:	pop    es
  40389a:	call   0x9e1b:0xf04ee6a3
  4038a1:	or     BYTE PTR [esp+ebx*4+0x36],bl
  4038a5:	lea    ecx,[edi]
  4038a7:	xor    BYTE PTR [esi-0x3f],0xa4
  4038ab:	sbb    ch,ah
  4038ad:	pop    es
  4038ae:	in     eax,0x88
  4038b0:	(bad)  
  4038b1:	ja     0x40392e
  4038b3:	pop    es
  4038b4:	sbb    eax,0x47cc6451
  4038b9:	test   DWORD PTR [ebp+0x36],ecx
  4038bc:	adc    edi,DWORD PTR [ebx+0x42]
  4038bf:	bnd jmp 0x403902
  4038c2:	fdivr  DWORD PTR [edx+eax*4]
  4038c5:	retf   
  4038c6:	bound  esp,QWORD PTR [esi+0x2be814d7]
  4038cc:	sbb    edi,ebp
  4038ce:	lss    edi,FWORD PTR [ebx+ebx*1]
  4038d2:	mov    dh,0xd4
  4038d4:	rcl    BYTE PTR [ecx],0x41
  4038d7:	dec    esi
  4038d8:	retf   0x35e9
  4038db:	sub    eax,ebp
  4038dd:	inc    edx
  4038de:	adc    DWORD PTR [ebp+esi*2+0x21],edx
  4038e2:	or     eax,esp
  4038e4:	and    eax,0xb522c3e1
  4038e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038ea:	les    eax,FWORD PTR [esi+0x57]
  4038ed:	stos   BYTE PTR es:[edi],al
  4038ee:	cmpps  xmm7,XMMWORD PTR [ebp+0x7a],0xb3
  4038f3:	jge    0x403958
  4038f5:	test   al,0xfb
  4038f7:	pusha  
  4038f8:	mov    esi,esp
  4038fa:	clc    
  4038fb:	std    
  4038fc:	push   esi
  4038fd:	xor    ecx,DWORD PTR [eax]
  4038ff:	out    dx,al
  403900:	call   0x529:0x80ccc70a
  403907:	in     al,dx
  403908:	dec    edx
  403909:	and    DWORD PTR ds:0x835a9a00,esi
  40390f:	add    eax,0xc5fecd4b
  403914:	add    al,0xfd
  403916:	mov    esi,0x8df0655b
  40391b:	xchg   ebx,eax
  40391c:	outs   dx,DWORD PTR ss:[esi]
  40391e:	and    ebx,DWORD PTR [edi+edi*8]
  403921:	mov    DWORD PTR [edx+ecx*4-0x58],edi
  403925:	push   edx
  403926:	xor    ch,BYTE PTR [ecx]
  403928:	push   ecx
  403929:	cmp    dh,BYTE PTR [ecx-0x41110644]
  40392f:	lods   eax,DWORD PTR ds:[esi]
  403930:	push   esp
  403931:	sahf   
  403932:	call   0xa960:0xa23160ab
  403939:	repz (bad) 
  40393b:	lods   al,BYTE PTR ds:[esi]
  40393c:	ror    dl,1
  40393e:	ss mov edx,0xdd89fd7e
  403944:	in     al,0xa8
  403946:	ret    0x4b6
  403949:	ror    BYTE PTR [edi],cl
  40394b:	rcr    DWORD PTR [eax+0x232ee24],0x9c
  403952:	add    BYTE PTR [esi-0x6],bl
  403955:	xchg   esp,eax
  403956:	pusha  
  403957:	jnp    0x4039bd
  403959:	mov    dl,0xb9
  40395b:	and    dh,BYTE PTR [esi+eax*1-0x11]
  40395f:	mov    bh,BYTE PTR [ecx]
  403961:	sub    DWORD PTR [eax-0x38f66ab2],edx
  403967:	cmp    eax,0xc4cbaf35
  40396c:	je     0x4039eb
  40396e:	pop    ecx
  40396f:	mov    dh,0x53
  403971:	jb     0x4039da
  403973:	jp     0x4038fd
  403975:	cmp    eax,0xb57d127b
  40397a:	rcr    BYTE PTR [edx+0x1732c84d],1
  403980:	sub    al,0x36
  403982:	hlt    
  403983:	aaa    
  403984:	cmp    DWORD PTR [ebp+0x74],eax
  403987:	arpl   WORD PTR [edx+0x1a287d26],di
  40398d:	int3   
  40398e:	sbb    al,0x72
  403990:	jmp    0x4039b6
  403992:	push   esp
  403993:	mov    ch,0xf2
  403995:	and    eax,0x48ac65df
  40399a:	pop    esp
  40399b:	(bad)  
  40399c:	or     BYTE PTR [edi+esi*8-0xfb202f0],0x45
  4039a4:	mov    bh,0x75
  4039a6:	mov    ebx,DWORD PTR [ebp+0x1b91c26a]
  4039ac:	pushf  
  4039ad:	es mov ah,0xfc
  4039b0:	mov    esp,0x259ec4cf
  4039b5:	pop    ebp
  4039b6:	fcomp  QWORD PTR [eax+0x62]
  4039b9:	mov    eax,ds:0xc10f6d73
  4039be:	aam    0xfa
  4039c0:	jns    0x4039aa
  4039c2:	push   ecx
  4039c3:	jp     0x403985
  4039c5:	jmp    0x91d8:0x2716ab33
  4039cc:	mov    esp,0x2dc3c196
  4039d1:	xchg   ebp,eax
  4039d2:	cdq    
  4039d3:	in     al,0x12
  4039d5:	or     ebp,esi
  4039d7:	push   esi
  4039d8:	or     DWORD PTR [esi+0x24791167],esi
  4039de:	mov    bl,dl
  4039e0:	mov    DWORD PTR [eax+edx*8+0x45],esi
  4039e4:	repz pop es
  4039e6:	jb     0x4039ea
  4039e8:	and    al,0xc9
  4039ea:	popa   
  4039eb:	cmp    DWORD PTR [eax-0x1373dcdf],ebp
  4039f1:	(bad)  
  4039f2:	cmp    eax,ecx
  4039f4:	shl    DWORD PTR [esi],1
  4039f6:	sub    BYTE PTR [edi-0x382a2f52],bh
  4039fc:	aad    0x9
  4039fe:	out    dx,eax
  4039ff:	mov    ch,0x8f
  403a01:	inc    edx
  403a02:	sub    al,0xdd
  403a04:	and    cl,BYTE PTR [ecx+0x1d]
  403a07:	fwait
  403a08:	add    al,0xfb
  403a0a:	daa    
  403a0b:	mov    ebx,eax
  403a0d:	cmp    ecx,DWORD PTR [esp+edi*1]
  403a10:	js     0x403a7c
  403a12:	pop    ss
  403a13:	int3   
  403a14:	xor    al,BYTE PTR [esi*4-0x64d076d6]
  403a1b:	ss push si
  403a1e:	out    0x76,al
  403a20:	(bad)  
  403a22:	adc    BYTE PTR [edx-0x26],ch
  403a25:	cmc    
  403a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a27:	in     eax,0x9b
  403a29:	retf   
  403a2a:	add    BYTE PTR [ebx+0x304aeb45],dl
  403a30:	loop   0x4039b3
  403a32:	ds (bad) 
  403a34:	loope  0x403a49
  403a36:	arpl   WORD PTR [esi+ebx*2],si
  403a39:	repz or ebx,eax
  403a3c:	mov    DWORD PTR [esi],ebp
  403a3e:	aad    0xf2
  403a40:	jmp    0x513b40cb
  403a45:	xor    BYTE PTR [edx],bl
  403a47:	sub    al,0xd5
  403a49:	lock jns 0x403a19
  403a4c:	lea    eax,[edi+0x330bb286]
  403a52:	call   0xe3bf040c
  403a57:	xor    DWORD PTR [eax-0x79],0x41
  403a5b:	outs   dx,DWORD PTR ds:[esi]
  403a5c:	mov    cl,0xc2
  403a5e:	aam    0xac
  403a60:	push   0xceb9170
  403a65:	sbb    bl,BYTE PTR [eax]
  403a67:	mov    dl,0xbf
  403a69:	mov    al,0x98
  403a6b:	arpl   WORD PTR [ecx-0x79],cx
  403a6e:	jmp    0x89d3:0x887805f7
  403a75:	cwde   
  403a76:	mov    dl,0x7
  403a78:	inc    esi
  403a79:	adc    BYTE PTR [ebp+eiz*8-0x1b449983],0xf0
  403a81:	jge    0x403ace
  403a83:	xchg   edx,eax
  403a84:	fmulp  st(3),st
  403a86:	fstp   TBYTE PTR [esi+ebp*8+0xc]
  403a8a:	add    BYTE PTR [esi-0x6e],0x87
  403a8e:	jae    0x403a7f
  403a90:	or     BYTE PTR [edx],0x5a
  403a93:	sub    esi,esp
  403a95:	dec    edi
  403a96:	sub    ah,ah
  403a98:	jmp    0x7b00:0x89ce72e7
  403a9f:	in     al,0x1d
  403aa1:	mov    edi,0xf729c558
  403aa6:	cmp    BYTE PTR [ebp+0x74],dl
  403aa9:	xor    al,BYTE PTR [ebp+0x1a]
  403aac:	out    dx,al
  403aad:	sbb    BYTE PTR [ebp+0x45],ah
  403ab0:	int    0x63
  403ab2:	push   ecx
  403ab3:	iret   
  403ab4:	pop    esp
  403ab5:	sub    BYTE PTR [ecx],dl
  403ab7:	inc    eax
  403ab8:	mov    eax,0x5c67bc86
  403abd:	jbe    0x403b3d
  403abf:	xchg   ecx,eax
  403ac0:	imul   esp,esp,0xf049ae86
  403ac6:	cmp    esp,DWORD PTR [ecx-0x6d89a890]
  403acc:	cmp    al,0x5a
  403ace:	call   FWORD PTR [eax]
  403ad0:	jge    0x403b03
  403ad2:	mov    cl,0xb2
  403ad4:	stos   BYTE PTR es:[edi],al
  403ad5:	div    BYTE PTR [ebx]
  403ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ad8:	sbb    edx,ebx
  403ada:	mov    dh,0x43
  403adc:	cmp    dl,ah
  403ade:	bound  ecx,QWORD PTR [eax+0x25a3d75b]
  403ae4:	pop    ebp
  403ae5:	and    al,0xf3
  403ae7:	out    dx,eax
  403ae8:	adc    dl,ah
  403aea:	out    dx,al
  403aeb:	icebp  
  403aec:	aas    
  403aed:	repz frstor [eax]
  403af0:	fimul  DWORD PTR [edi-0x4fd256f8]
  403af6:	inc    ecx
  403af7:	cmp    eax,0xa4cf22ed
  403afc:	and    dl,dh
  403afe:	pop    esp
  403aff:	je     0x403b5d
  403b01:	push   edx
  403b02:	popf   
  403b03:	push   cs
  403b04:	aas    
  403b05:	sti    
  403b06:	pop    ebp
  403b07:	push   edi
  403b08:	mov    eax,0x9243666
  403b0d:	xchg   ebx,eax
  403b0e:	aaa    
  403b0f:	pop    ebx
  403b10:	pop    ds
  403b11:	jnp    0x403adf
  403b13:	sbb    BYTE PTR [edx],ch
  403b15:	imul   edi,ecx,0xabce0c40
  403b1b:	cmp    BYTE PTR [edi],ah
  403b1d:	mov    bl,ah
  403b1f:	add    BYTE PTR [edx+eax*8-0xf],ch
  403b23:	mov    ah,0xf9
  403b25:	fild   QWORD PTR [ebx+0x1bd69a90]
  403b2b:	xor    edx,DWORD PTR [ebx]
  403b2d:	pop    es
  403b2e:	xor    ebx,edx
  403b30:	xor    ebp,DWORD PTR [esi+0x2]
  403b33:	(bad)  
  403b34:	mov    ds:0x33e503c2,al
  403b39:	and    ebx,DWORD PTR [edx+0x75]
  403b3c:	add    BYTE PTR [edi-0x3b],bl
  403b3f:	mov    esi,0x845d4350
  403b44:	dec    ebp
  403b45:	ds clc 
  403b47:	sbb    DWORD PTR [ebx],edi
  403b49:	push   esp
  403b4a:	cmp    dh,dl
  403b4c:	cwde   
  403b4d:	jmp    0x403b99
  403b4f:	inc    ebx
  403b50:	fbstp  TBYTE PTR [ebx]
  403b52:	mov    dl,0x47
  403b54:	xchg   edi,eax
  403b55:	and    al,0x31
  403b57:	hlt    
  403b58:	mov    ds:0xd4749a65,al
  403b5d:	iret   
  403b5e:	xlat   BYTE PTR ds:[ebx]
  403b5f:	and    edx,ebp
  403b61:	and    BYTE PTR [edi],bl
  403b63:	xchg   edi,eax
  403b64:	inc    eax
  403b65:	out    dx,al
  403b66:	mov    ecx,0xbdf19ca1
  403b6b:	test   al,0xef
  403b6d:	jmp    0x251050b9
  403b72:	pop    eax
  403b73:	mov    BYTE PTR [ecx],cl
  403b75:	enter  0xa445,0xec
  403b79:	js     0x403bd1
  403b7b:	(bad)  
  403b7c:	(bad)  
  403b7d:	xchg   edx,eax
  403b7e:	jne    0x403b76
  403b80:	push   ebp
  403b81:	and    ecx,esi
  403b83:	add    al,0x54
  403b85:	(bad)  
  403b86:	arpl   WORD PTR [eax+0x3f],cx
  403b89:	dec    eax
  403b8a:	ret    
  403b8b:	retf   0x61ba
  403b8e:	mul    BYTE PTR [ebx]
  403b90:	sbb    DWORD PTR [ebx+ebp*4],eax
  403b93:	sbb    cl,BYTE PTR [edx]
  403b95:	jb     0x403bcb
  403b97:	jo     0x403bd1
  403b99:	mov    DWORD PTR [esi],0x84306552
  403b9f:	xor    eax,0xa8d8aa2b
  403ba4:	cwde   
  403ba5:	xchg   ebp,eax
  403ba6:	sub    eax,0x402f7874
  403bab:	mov    esp,0x1d773151
  403bb0:	outs   dx,BYTE PTR ds:[esi]
  403bb1:	jge    0x403c1f
  403bb3:	inc    ecx
  403bb4:	sahf   
  403bb5:	scas   eax,DWORD PTR es:[edi]
  403bb6:	add    BYTE PTR [edi+0x2e],ch
  403bb9:	mov    eax,ds:0x32014293
  403bbe:	aas    
  403bbf:	sub    ebx,esp
  403bc1:	jnp    0x403c14
  403bc3:	mov    ebx,0x9df867c1
  403bc8:	pop    edi
  403bc9:	into   
  403bca:	adc    DWORD PTR ds:[edi-0x2559f6ca],0x6c
  403bd2:	aaa    
  403bd3:	xor    eax,0x68893fbc
  403bd8:	xor    esi,DWORD PTR [ebp+0x2e01c0a9]
  403bde:	cmp    al,al
  403be0:	and    al,0xd2
  403be2:	shl    DWORD PTR [edx+eax*2-0x1d],0x3f
  403be7:	xchg   esi,eax
  403be8:	add    ebx,DWORD PTR [eax+0x76]
  403beb:	mov    esi,0xc10f87fe
  403bf0:	test   al,0x88
  403bf2:	in     al,dx
  403bf3:	arpl   WORD PTR [edi+0x30151de2],sp
  403bf9:	out    0xc,al
  403bfb:	jmp    0x403ba3
  403bfd:	xchg   ebx,eax
  403bfe:	mov    eax,gs
  403c00:	cdq    
  403c01:	or     BYTE PTR [edi-0x7516bd94],ah
  403c07:	pop    ecx
  403c08:	cld    
  403c09:	add    al,0x6d
  403c0b:	dec    esp
  403c0c:	iret   
  403c0d:	add    al,0x41
  403c0f:	int3   
  403c10:	jne    0x403bc2
  403c12:	scas   eax,DWORD PTR es:[edi]
  403c13:	mov    ch,0xf4
  403c15:	or     eax,0x832d582d
  403c1a:	xor    eax,ecx
  403c1c:	cld    
  403c1d:	stc    
  403c1e:	mov    edi,0xec6a0fae
  403c23:	inc    ecx
  403c24:	or     al,0xc7
  403c26:	shl    BYTE PTR [esi+0x6b],0x20
  403c2a:	test   al,0x64
  403c2c:	movd   DWORD PTR [eax-0x360c50bf],mm6
  403c33:	sbb    eax,0x6de78a1c
  403c38:	fldenv [eax-0x53]
  403c3b:	pop    edi
  403c3c:	outs   dx,BYTE PTR ds:[esi]
  403c3d:	lods   al,BYTE PTR ds:[esi]
  403c3e:	lahf   
  403c3f:	jmp    0x8591a99a
  403c44:	icebp  
  403c45:	outs   dx,DWORD PTR ds:[esi]
  403c46:	ja     0x403c12
  403c48:	sub    ebx,DWORD PTR [edx]
  403c4a:	sub    al,ah
  403c4c:	sbb    al,0x67
  403c4e:	loope  0x403c61
  403c50:	sbb    BYTE PTR [ebp+0x1c],cl
  403c53:	xchg   ebx,eax
  403c54:	and    DWORD PTR [ecx-0x21],0xffffffda
  403c58:	mov    ecx,DWORD PTR [ecx+0x3f]
  403c5b:	and    al,0x94
  403c5d:	jg     0x403ca6
  403c5f:	in     al,0x11
  403c61:	es dec edx
  403c63:	or     ebx,DWORD PTR [eax-0x62f8cafe]
  403c69:	sbb    al,0xce
  403c6b:	dec    ebx
  403c6c:	nop
  403c6d:	add    BYTE PTR [ebx+0x5cce8683],dl
  403c73:	dec    esi
  403c74:	cmovns ecx,DWORD PTR [edx]
  403c77:	mov    ch,0x93
  403c79:	push   edi
  403c7a:	ltr    sp
  403c7d:	pop    ecx
  403c7e:	lds    edx,FWORD PTR ds:0xf2daa1c8
  403c84:	xchg   esi,eax
  403c85:	and    eax,0xbdcacd02
  403c8a:	cmp    eax,0xfa46ab88
  403c8f:	mov    ebp,0xe90abc10
  403c94:	pop    es
  403c95:	xor    al,0xe7
  403c97:	pop    ss
  403c98:	dec    ebp
  403c99:	ins    DWORD PTR es:[edi],dx
  403c9a:	jl     0x403c32
  403c9c:	xlat   BYTE PTR ds:[ebx]
  403c9d:	test   eax,0x2a6cc4da
  403ca2:	or     eax,0x29fa87c9
  403ca7:	inc    edi
  403ca8:	pop    esi
  403ca9:	push   ebx
  403caa:	leave  
  403cab:	cmp    al,0xac
  403cad:	cmc    
  403cae:	lock add BYTE PTR [edi],ch
  403cb1:	fsubr  DWORD PTR [esi+esi*2]
  403cb4:	dec    eax
  403cb5:	rcl    BYTE PTR gs:[edi-0x2d],0x17
  403cba:	lahf   
  403cbb:	dec    edx
  403cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cbd:	add    BYTE PTR [ebx+edx*4],dl
  403cc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cc2:	jnp    0x403c6b
  403cc4:	push   ecx
  403cc5:	scas   eax,DWORD PTR es:[edi]
  403cc6:	arpl   WORD PTR [eax+0x36],cx
  403cc9:	in     eax,dx
  403cca:	(bad)
  403cce:	fcmovnbe st,st(4)
  403cd0:	xlat   BYTE PTR ds:[ebx]
  403cd1:	test   DWORD PTR [ecx-0x37],0x99d8bf46
  403cd8:	xchg   esp,eax
  403cd9:	or     eax,DWORD PTR gs:[edi+0x73]
  403cdd:	mov    al,0x7c
  403cdf:	mov    bl,0x5c
  403ce1:	fbstp  TBYTE PTR [ebx]
  403ce3:	sar    ecx,0x5f
  403ce6:	sbb    BYTE PTR [edi+0x32],al
  403ce9:	or     dl,BYTE PTR [edi]
  403ceb:	aas    
  403cec:	adc    edx,edx
  403cee:	mov    ?,WORD PTR ds:[edi-0x7b72eb52]
  403cf5:	rcr    ebx,cl
  403cf7:	xchg   edi,eax
  403cf8:	mov    bh,0x50
  403cfa:	jl     0x403caf
  403cfc:	and    al,0x91
  403cfe:	and    eax,0xaa893723
  403d03:	sub    DWORD PTR [ebx+0x21],edx
  403d06:	pop    edi
  403d07:	adc    bl,BYTE PTR [ebp-0x6634b170]
  403d0d:	shr    BYTE PTR [ebx-0x6c],cl
  403d10:	mov    eax,ds:0x81df01a1
  403d15:	or     DWORD PTR [edx-0x466c927d],esi
  403d1b:	sbb    bh,BYTE PTR [ebp-0x660bd3c2]
  403d21:	ss dec esp
  403d23:	icebp  
  403d24:	mov    ebp,0xc0fb1532
  403d29:	je     0x403d09
  403d2b:	mov    ebp,0x440afd3f
  403d30:	stc    
  403d31:	int    0xac
  403d33:	aas    
  403d34:	or     eax,0xb47408de
  403d39:	aaa    
  403d3a:	xchg   BYTE PTR [edi+0xee0c849],ah
  403d40:	(bad)  
  403d41:	and    BYTE PTR [esi],al
  403d43:	inc    DWORD PTR [eax]
  403d45:	lahf   
  403d46:	xor    al,ch
  403d48:	imul   eax,DWORD PTR es:[edi-0x30],0xffffff9e
  403d4d:	dec    ebp
  403d4e:	scas   al,BYTE PTR es:[edi]
  403d4f:	xchg   esi,eax
  403d50:	rcr    BYTE PTR [ebp-0x552e51cf],0x37
  403d57:	es aaa 
  403d59:	push   ss
  403d5a:	jne    0x403cef
  403d5c:	xor    eax,0x482902c8
  403d61:	sbb    DWORD PTR [edi+0x57],ebp
  403d64:	xchg   esp,ebp
  403d66:	cmp    DWORD PTR [edx+0x2a07e606],edi
  403d6c:	jns    0x403d88
  403d6e:	mov    es,esi
  403d70:	push   edx
  403d71:	push   0xf3939704
  403d76:	in     al,0xa5
  403d78:	ins    DWORD PTR es:[edi],dx
  403d79:	fdiv   QWORD PTR [ebx]
  403d7b:	data16 mov ah,0x88
  403d7e:	in     eax,0xd3
  403d80:	dec    esi
  403d81:	xchg   BYTE PTR [eax],dh
  403d83:	add    DWORD PTR [esi],ebp
  403d85:	aas    
  403d86:	mov    al,BYTE PTR [ecx+esi*1]
  403d89:	xor    al,0x21
  403d8b:	mov    ebp,0xf06e08ac
  403d90:	inc    edi
  403d91:	stos   BYTE PTR es:[edi],al
  403d92:	pop    ebx
  403d93:	gs retf 
  403d95:	push   cs
  403d96:	adc    ebx,DWORD PTR [eax]
  403d98:	push   esi
  403d99:	jp     0x403d8f
  403d9b:	aaa    
  403d9c:	xor    esi,DWORD PTR cs:[ebx+0x52]
  403da0:	lock jg 0x403dfe
  403da3:	scas   al,BYTE PTR es:[edi]
  403da4:	es aad 0x6f
  403da7:	sar    BYTE PTR [ebp-0x737dd3d6],0xfc
  403dae:	inc    ebp
  403daf:	fwait
  403db0:	inc    eax
  403db1:	dec    edx
  403db2:	lods   al,BYTE PTR ds:[esi]
  403db3:	stos   DWORD PTR es:[edi],eax
  403db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403db5:	jae    0x403e25
  403db7:	iret   
  403db8:	xor    ebp,ecx
  403dba:	push   0x28
  403dbc:	mov    edi,0x5ba34762
  403dc1:	into   
  403dc2:	rcr    DWORD PTR [edx],1
  403dc4:	test   BYTE PTR [esi-0x7a],0x69
  403dc8:	aam    0x66
  403dca:	stos   BYTE PTR es:[edi],al
  403dcb:	stc    
  403dcc:	inc    edx
  403dcd:	in     eax,0x62
  403dcf:	arpl   WORD PTR [ebx+0x66],sp
  403dd2:	dec    ebp
  403dd3:	not    DWORD PTR [esi]
  403dd5:	popf   
  403dd6:	mov    ch,0x9f
  403dd8:	pop    esi
  403dd9:	pop    ebp
  403dda:	add    eax,ecx
  403ddc:	fucom  st(2)
  403dde:	int    0x76
  403de0:	fucomip st,st(1)
  403de2:	and    eax,0xa50e6e27
  403de7:	pop    ebp
  403de8:	and    DWORD PTR [ebp-0x50],eax
  403deb:	inc    esi
  403dec:	mov    dl,0x6c
  403dee:	mov    ds:0xf154e1af,eax
  403df3:	push   0xffffffee
  403df5:	pop    ds
  403df6:	ins    BYTE PTR es:[edi],dx
  403df7:	pop    ebp
  403df8:	ret    
  403df9:	test   BYTE PTR [ebp-0x357bdf37],0x90
  403e00:	jb     0x403e7d
  403e02:	(bad)  [ebp-0x48]
  403e05:	add    DWORD PTR [esi],ecx
  403e07:	mov    DWORD PTR [ebp+0x79],0x995a3fd8
  403e0e:	xchg   edi,eax
  403e0f:	cmp    bl,BYTE PTR [edi-0x63bd7786]
  403e15:	sub    BYTE PTR [eax+ebx*1-0x67],0x36
  403e1a:	outs   dx,BYTE PTR ds:[esi]
  403e1b:	jle    0x403e36
  403e1d:	or     edx,edi
  403e1f:	or     eax,0xc998c21e
  403e24:	xor    eax,DWORD PTR [esi]
  403e26:	shl    DWORD PTR [edi+0x4ec2dfe7],cl
  403e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e2d:	pop    ebp
  403e2e:	ror    BYTE PTR ds:0x63b76fab,cl
  403e34:	nop
  403e35:	jecxz  0x403e20
  403e37:	int3   
  403e38:	jnp    0x403e32
  403e3a:	adc    al,0xa1
  403e3c:	add    eax,0xc498e085
  403e41:	pop    ebx
  403e42:	fcmove st,st(6)
  403e44:	xor    al,dl
  403e46:	mov    eax,ds:0x8aa092b7
  403e4b:	test   DWORD PTR [ecx-0x56ae3ee6],0x1dee7e35
  403e55:	push   0xffffff87
  403e57:	iret   
  403e58:	pop    ds
  403e59:	and    al,0x36
  403e5b:	add    ebx,DWORD PTR [edi-0x55cbb3b3]
  403e61:	jmp    0x403e8b
  403e63:	jmp    0x8fc:0x6ebbefc8
  403e6a:	jl     0x403eb1
  403e6c:	stos   DWORD PTR es:[edi],eax
  403e6d:	sbb    dh,BYTE PTR [esi+ebx*8-0x4f45487c]
  403e74:	in     al,dx
  403e75:	ja     0x403e86
  403e77:	add    esi,eax
  403e79:	xor    DWORD PTR [ebx],ebp
  403e7b:	dec    edx
  403e7c:	shl    DWORD PTR [esi+0x18f8f1e0],0x36
  403e83:	test   eax,0x92cb444b
  403e88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e89:	or     bh,BYTE PTR [ecx]
  403e8b:	lea    edi,[ebp-0x77]
  403e8e:	outs   dx,DWORD PTR ds:[esi]
  403e8f:	lods   eax,DWORD PTR ds:[esi]
  403e90:	lock jl 0x403e3c
  403e93:	dec    esp
  403e94:	xor    al,0x62
  403e96:	test   esi,esp
  403e98:	ins    BYTE PTR es:[edi],dx
  403e99:	ja     0x403e27
  403e9b:	jp     0x403e7d
  403e9d:	sbb    cl,BYTE PTR [esi-0x28fedaad]
  403ea3:	pop    es
  403ea4:	fdivr  st,st(2)
  403ea6:	cld    
  403ea7:	jp     0x403e93
  403ea9:	push   cs
  403eaa:	add    BYTE PTR [eax],ah
  403eac:	xor    al,0xf8
  403eae:	xchg   ebx,eax
  403eaf:	xchg   ebp,eax
  403eb0:	pop    es
  403eb1:	nop
  403eb2:	into   
  403eb3:	cmp    BYTE PTR [edx],dh
  403eb5:	add    eax,0x17deade6
  403eba:	xchg   esp,eax
  403ebb:	and    DWORD PTR [ecx],eax
  403ebd:	mov    edx,0x1d35406
  403ec2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ec3:	xchg   ebp,eax
  403ec4:	mov    ?,esi
  403ec6:	xchg   BYTE PTR [eax*2+0x7060bdd],dl
  403ecd:	dec    esi
  403ece:	mov    dh,0x46
  403ed0:	xchg   ecx,eax
  403ed1:	push   eax
  403ed2:	lahf   
  403ed3:	mov    DWORD PTR [esi+0x2f],edx
  403ed6:	(bad)  
  403ed7:	repz push esp
  403ed9:	int    0xaa
  403edb:	sbb    esi,edi
  403edd:	aaa    
  403ede:	daa    
  403edf:	daa    
  403ee0:	int    0x80
  403ee2:	jo     0x403f62
  403ee4:	fmul   DWORD PTR [eax-0x74]
  403ee7:	sbb    DWORD PTR [esi-0x354ac4d],esi
  403eed:	lea    eax,[edi-0x4d]
  403ef0:	mov    ebx,0x29e861d3
  403ef5:	ret    
  403ef6:	xchg   ecx,eax
  403ef7:	and    BYTE PTR [esi+0x5b0c2fdf],bl
  403efd:	scas   eax,DWORD PTR es:[edi]
  403efe:	cs in  eax,0xd7
  403f01:	outs   dx,DWORD PTR ds:[esi]
  403f02:	inc    ecx
  403f03:	aam    0xcc
  403f05:	xor    DWORD PTR [esi+esi*1],0x9786140
  403f0c:	test   ah,0x83
  403f0f:	pop    esp
  403f10:	pushf  
  403f11:	xchg   DWORD PTR [eax-0x15b403e7],edx
  403f17:	not    DWORD PTR [ecx]
  403f19:	movaps XMMWORD PTR [edx-0x559e7bad],xmm3
  403f20:	dec    ebp
  403f21:	sbb    al,0x1c
  403f23:	mov    eax,0xe726ae3
  403f28:	mov    edx,0x79b2814d
  403f2d:	sbb    al,0x74
  403f2f:	dec    ebp
  403f30:	icebp  
  403f31:	jge    0x403f0b
  403f33:	pop    ss
  403f34:	mov    BYTE PTR [esi-0x61],bl
  403f37:	popf   
  403f38:	xor    eax,DWORD PTR [ecx+ecx*1]
  403f3b:	lds    ebx,FWORD PTR [ebx-0x58e11b9b]
  403f41:	dec    ecx
  403f42:	add    BYTE PTR [ecx],cl
  403f44:	xchg   edi,eax
  403f45:	lds    eax,FWORD PTR [edx-0x79]
  403f48:	out    dx,al
  403f49:	dec    esp
  403f4a:	mov    ah,0xd4
  403f4c:	or     BYTE PTR [esi+0x597787cd],cl
  403f52:	fist   DWORD PTR [ecx+0x5]
  403f55:	sbb    BYTE PTR ds:0xdf7892da,cl
  403f5b:	(bad)  
  403f5c:	jmp    0x1786:0xd9604313
  403f63:	bound  eax,QWORD PTR [ecx+0x36]
  403f66:	(bad)  
  403f68:	ror    DWORD PTR [edx+0x6],cl
  403f6b:	lahf   
  403f6c:	stc    
  403f6d:	lock mov edx,0xfc7cf6d5
  403f73:	aad    0x4e
  403f75:	sahf   
  403f76:	mov    cl,0xef
  403f78:	jmp    0x4637fd74
  403f7d:	mov    esp,edx
  403f7f:	mov    dl,0xb6
  403f81:	mov    ebp,0xd7cb4618
  403f86:	sbb    bh,BYTE PTR [edx+ecx*8-0x30]
  403f8a:	stos   DWORD PTR es:[edi],eax
  403f8b:	pop    ebx
  403f8c:	adc    eax,0xe6f4270e
  403f91:	fmul   st,st(7)
  403f93:	out    0xc,eax
  403f95:	mov    bh,0x54
  403f97:	xchg   ebx,eax
  403f98:	ja     0x403f7a
  403f9a:	int    0x49
  403f9c:	sbb    eax,0xe6ba771b
  403fa1:	inc    ebx
  403fa2:	xchg   edi,eax
  403fa3:	fild   WORD PTR [ecx]
  403fa5:	pop    ss
  403fa6:	add    dl,0xc0
  403fa9:	sub    dh,0xb1
  403fac:	push   ebx
  403fad:	pop    edi
  403fae:	push   esp
  403faf:	stc    
  403fb0:	push   0xf1e0ad19
  403fb5:	xchg   BYTE PTR [esi+0x7970975e],dl
  403fbb:	mov    bh,0xfe
  403fbd:	xor    edi,DWORD PTR [ecx]
  403fbf:	pop    edi
  403fc0:	xchg   edi,eax
  403fc1:	shl    BYTE PTR [eax-0x15296908],cl
  403fc7:	setbe  BYTE PTR [edi]
  403fca:	fwait
  403fcb:	cs mov edx,DWORD PTR cs:[ebx]
  403fcf:	rcr    DWORD PTR [ebx+0x720ac61],cl
  403fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fd6:	jg     0x403fbc
  403fd8:	and    eax,0xded61bb6
  403fdd:	arpl   bx,bx
  403fdf:	sub    ecx,DWORD PTR [eax]
  403fe1:	stos   BYTE PTR es:[edi],al
  403fe2:	sahf   
  403fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fe4:	dec    eax
  403fe5:	add    edx,DWORD PTR [ebp-0x5c]
  403fe8:	les    ebp,FWORD PTR [ebx-0x7da89672]
  403fee:	ins    DWORD PTR es:[edi],dx
  403fef:	enter  0x8966,0x33
  403ff3:	popa   
  403ff4:	cdq    
  403ff5:	(bad)  [edi+0x8]
  403ff8:	mov    al,0x6b
  403ffa:	mov    eax,0x7b5eb64b
  403fff:	sub    eax,0x8c35bfa8
  404004:	out    dx,eax
  404005:	imul   edx,DWORD PTR [eax+0x2b],0x1fe27605
  40400c:	jno    0x404086
  40400e:	mov    ebx,0xabdab20e
  404013:	loope  0x403fb0
  404015:	aaa    
  404016:	ror    DWORD PTR [ecx+0x27a367ac],cl
  40401c:	xor    DWORD PTR [esi+0x74e432b6],0x3acd5682
  404026:	clc    
  404027:	outs   dx,BYTE PTR ds:[esi]
  404028:	stc    
  404029:	xor    al,0x76
  40402b:	stc    
  40402c:	xchg   ecx,eax
  40402d:	ret    0x4380
  404030:	pushf  
  404031:	pop    ebp
  404032:	in     eax,0x1a
  404034:	dec    esi
  404035:	fcmove st,st(5)
  404037:	push   esi
  404038:	and    cl,BYTE PTR [edi+0x74e06460]
  40403e:	stc    
  40403f:	mov    fs,WORD PTR [ebp-0x17dbdb1c]
  404045:	mov    esi,0xd42f0296
  40404a:	xor    ch,BYTE PTR [ebx+ebx*2]
  40404d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40404e:	jne    0x404023
  404050:	fild   DWORD PTR ds:0xe24aee0
  404056:	lea    ebx,[eax]
  404058:	push   0x343c6860
  40405d:	scas   al,BYTE PTR es:[edi]
  40405e:	pusha  
  40405f:	test   al,0x92
  404061:	jp     0x40409b
  404063:	push   esp
  404064:	mov    esi,esp
  404066:	xchg   edx,eax
  404067:	dec    ebp
  404068:	dec    ebx
  404069:	nop
  40406a:	cld    
  40406b:	mov    edx,0x1ff1a681
  404070:	retf   0x9644
  404073:	shr    dl,cl
  404075:	inc    ebp
  404076:	inc    esi
  404077:	repnz sbb al,0x8f
  40407a:	jb     0x4040c2
  40407c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40407d:	cmp    al,0x3
  40407f:	std    
  404080:	lods   eax,DWORD PTR ds:[esi]
  404081:	clc    
  404082:	fcom   DWORD PTR [ebx+ebp*2+0x2430541c]
  404089:	cwde   
  40408a:	mov    WORD PTR [ebx],ds
  40408c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40408d:	stc    
  40408e:	xor    eax,0x54f8634e
  404093:	push   edi
  404094:	mov    cl,0xf1
  404096:	jmp    0x7ec05a6b
  40409b:	pop    ss
  40409c:	xlat   BYTE PTR ds:[ebx]
  40409d:	les    edi,FWORD PTR [ebp-0x3c71d225]
  4040a3:	mov    esp,0xbc79bda
  4040a8:	add    ebx,DWORD PTR [edx+edx*4]
  4040ab:	sbb    ebx,edi
  4040ad:	enter  0x500d,0xd
  4040b1:	xor    eax,0xcd1b54a3
  4040b6:	ins    DWORD PTR es:[edi],dx
  4040b7:	add    eax,0x54e519e3
  4040bc:	leave  
  4040bd:	add    ebp,DWORD PTR [ebx]
  4040bf:	jecxz  0x404073
  4040c1:	lods   eax,DWORD PTR ds:[esi]
  4040c2:	dec    ebp
  4040c3:	xchg   ecx,eax
  4040c4:	inc    ebp
  4040c5:	mov    edi,0x5221533
  4040ca:	stos   DWORD PTR es:[edi],eax
  4040cb:	stos   DWORD PTR es:[edi],eax
  4040cc:	das    
  4040cd:	or     eax,0xbf652732
  4040d2:	fimul  WORD PTR ds:0xd5e6e0db
  4040d8:	repnz and DWORD PTR [eax],ecx
  4040db:	mov    ch,0xed
  4040dd:	(bad)  
  4040de:	std    
  4040df:	fnstsw WORD PTR [eax-0x28]
  4040e2:	lds    ebx,FWORD PTR [edx-0x6b10c7c9]
  4040e8:	push   edx
  4040e9:	mov    ah,0x2a
  4040eb:	out    dx,al
  4040ec:	push   cs
  4040ed:	dec    ebp
  4040ee:	int3   
  4040ef:	rcl    al,0x83
  4040f2:	mov    esi,0x3c09352
  4040f7:	les    ecx,FWORD PTR [ebx+0x264eea78]
  4040fd:	adc    dl,BYTE PTR [esi+0x67de665d]
  404103:	out    0xed,al
  404105:	jp     0x404173
  404107:	stc    
  404108:	adc    bl,BYTE PTR [edi]
  40410a:	xor    eax,0x645e78b
  40410f:	sub    DWORD PTR [esi+0x1],eax
  404112:	cli    
  404113:	outs   dx,DWORD PTR ds:[esi]
  404114:	shl    DWORD PTR [eax-0x79],cl
  404117:	les    esi,FWORD PTR [esi]
  404119:	loope  0x404149
  40411b:	inc    esp
  40411c:	xchg   ebx,eax
  40411d:	mov    dl,0x7c
  40411f:	cs push 0x8159c75b
  404125:	add    DWORD PTR ds:0xb56e5a7,ecx
  40412b:	pop    ss
  40412c:	or     DWORD PTR [esi-0x29],0xffffff9a
  404130:	pop    esi
  404131:	ds and edx,edi
  404134:	and    ecx,eax
  404136:	or     eax,esi
  404138:	mov    ebx,0xbd184ada
  40413d:	sub    eax,ebp
  40413f:	scas   eax,DWORD PTR es:[edi]
  404140:	sub    DWORD PTR [edx+0x4d173971],0xfca5c8a0
  40414a:	repnz mov ebx,cs
  40414d:	inc    esp
  40414e:	push   ecx
  40414f:	or     al,0x90
  404151:	fsub   DWORD PTR ds:0xb60fbdb7
  404157:	stos   DWORD PTR es:[edi],eax
  404158:	ja     0x404105
  40415a:	inc    edi
  40415b:	jns    0x4040ea
  40415d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40415e:	sbb    DWORD PTR ds:0x6884a41b,ecx
  404164:	push   ss
  404165:	cmp    al,0xf3
  404167:	inc    esi
  404168:	out    0x1,al
  40416a:	cmp    DWORD PTR [edx],0x30
  40416d:	out    dx,eax
  40416e:	(bad)  
  40416f:	in     eax,dx
  404170:	fisubr WORD PTR [edx+0x5bc86f85]
  404176:	or     DWORD PTR [esi+0x79],ecx
  404179:	xor    bh,BYTE PTR [esi-0x63]
  40417c:	mov    bl,0x36
  40417e:	icebp  
  40417f:	imul   ebx,esp,0x3cbc8619
  404185:	daa    
  404186:	ror    DWORD PTR [ecx],1
  404188:	aam    0x3b
  40418a:	fnstcw WORD PTR [esi+edi*4+0x54]
  40418e:	int    0xa0
  404190:	out    0x36,al
  404192:	shl    edi,1
  404194:	xlat   BYTE PTR ds:[ebx]
  404195:	pop    ss
  404196:	add    al,0x73
  404198:	jnp    0x4041b0
  40419a:	add    DWORD PTR [ebx],esp
  40419c:	shl    BYTE PTR ds:0x8754089f,cl
  4041a2:	jp     0x404198
  4041a4:	pop    es
  4041a5:	xchg   esi,ecx
  4041a7:	push   ebp
  4041a8:	(bad)  
  4041a9:	sbb    DWORD PTR [ebx-0x13],edx
  4041ac:	inc    esi
  4041ad:	jbe    0x4041ea
  4041af:	(bad)
  4041b2:	sahf   
  4041b3:	outs   dx,BYTE PTR ds:[esi]
  4041b4:	sar    DWORD PTR [edi],cl
  4041b6:	push   ss
  4041b7:	dec    ebp
  4041b8:	jbe    0x404199
  4041ba:	inc    eax
  4041bb:	scas   al,BYTE PTR es:[edi]
  4041bc:	push   ss
  4041bd:	xor    eax,DWORD PTR [edi-0x6f0a8d16]
  4041c3:	ins    DWORD PTR es:[edi],dx
  4041c4:	fdivr  QWORD PTR [ebx]
  4041c6:	repnz and DWORD PTR [ecx+0x3084f5a],edi
  4041cd:	pusha  
  4041ce:	ja     0x4041f1
  4041d0:	mov    ch,0xe
  4041d2:	cmp    cl,bh
  4041d4:	dec    esp
  4041d5:	jl     0x40421b
  4041d7:	mov    cl,0x5f
  4041d9:	jno    0x404241
  4041db:	stos   DWORD PTR es:[edi],eax
  4041dc:	xor    eax,0xe1e13751
  4041e1:	mov    ?,WORD PTR [edi+0x1c]
  4041e4:	cmp    bh,BYTE PTR [eax]
  4041e6:	add    DWORD PTR [eax],eax
  4041e8:	dec    ecx
  4041e9:	inc    ebp
  4041ea:	shr    DWORD PTR [esi+eax*8-0x1c],0x5f
  4041ef:	sbb    al,0x5f
  4041f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041f2:	mov    ch,0x1c
  4041f4:	sub    DWORD PTR ds:0xa8f1024a,ecx
  4041fa:	add    cl,dh
  4041fc:	jno    0x404180
  4041fe:	jge    0x4041e6
  404200:	adc    DWORD PTR [edx+0x5a],ecx
  404203:	jae    0x404280
  404205:	pop    esp
  404206:	push   edi
  404207:	clc    
  404208:	inc    edi
  404209:	or     BYTE PTR [ecx+0x21],ah
  40420c:	adc    bl,cl
  40420e:	pushf  
  40420f:	ds pop ebx
  404211:	cmp    al,0xa0
  404213:	sbb    BYTE PTR [esi+edx*2-0x22a526c1],ah
  40421a:	aad    0xb0
  40421c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40421d:	in     al,0x1c
  40421f:	mov    ecx,0xece8ea45
  404224:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404225:	xchg   ebp,eax
  404226:	sub    DWORD PTR [esi],edx
  404228:	xchg   ebx,eax
  404229:	jecxz  0x4041f4
  40422b:	sub    cl,bl
  40422d:	xor    esp,DWORD PTR [edi-0xd]
  404230:	clc    
  404231:	cs fwait
  404233:	sar    DWORD PTR [edx],0xe7
  404236:	repz push ss
  404238:	jp     0x4041f9
  40423a:	push   es
  40423b:	sbb    al,0x24
  40423d:	xchg   esp,eax
  40423e:	daa    
  40423f:	push   0xffffffdf
  404241:	cmp    dl,BYTE PTR [edi]
  404243:	xchg   ebp,eax
  404244:	ss xchg ebp,eax
  404246:	rol    DWORD PTR [ecx-0x1ece284f],0xd2
  40424d:	scas   eax,DWORD PTR es:[edi]
  40424e:	in     eax,dx
  40424f:	ror    ecx,0xee
  404252:	bound  edx,QWORD PTR [eax+0xc466776]
  404258:	sbb    edi,DWORD PTR [ebp+0x23084578]
  40425e:	repnz (bad) 
  404260:	mov    bh,0x63
  404262:	lods   eax,DWORD PTR ds:[esi]
  404263:	aad    0x3
  404265:	fsub   QWORD PTR [eax]
  404267:	add    esi,esi
  404269:	jns    0x4042be
  40426b:	pop    es
  40426c:	(bad)  
  40426e:	and    eax,0xad6ccff8
  404273:	out    0x99,eax
  404275:	jb     0x404244
  404277:	lods   eax,DWORD PTR ds:[esi]
  404278:	fisubr DWORD PTR [ecx-0x45cdef96]
  40427e:	xchg   ebx,eax
  40427f:	sbb    eax,edi
  404281:	pop    ds
  404282:	mov    cl,0x1d
  404284:	adc    eax,0x96b2ed95
  404289:	cmp    ch,BYTE PTR [esi]
  40428b:	cmp    DWORD PTR [ecx],0xffffffcd
  40428e:	ja     0x40430c
  404290:	pop    esi
  404291:	mov    al,0x2f
  404293:	daa    
  404294:	ret    
  404295:	popf   
  404296:	call   0x8c53822a
  40429b:	push   ds
  40429c:	leave  
  40429d:	inc    edx
  40429e:	mov    al,ds:0x894a9513
  4042a3:	aaa    
  4042a4:	jnp    0x4042e8
  4042a6:	jae    0x404326
  4042a8:	mov    es,WORD PTR [eax]
  4042aa:	and    BYTE PTR [ebp+edi*2+0x21],dh
  4042ae:	push   edi
  4042af:	jne    0x40426e
  4042b1:	mov    BYTE PTR [eax+0x78bf5358],al
  4042b7:	stos   DWORD PTR es:[edi],eax
  4042b8:	ja     0x404259
  4042ba:	fild   WORD PTR [ebp+eax*2+0x15b2c33d]
  4042c1:	mov    dl,ch
  4042c3:	dec    esp
  4042c4:	frstor [esi+0x68]
  4042c7:	mov    esp,0xc8deff72
  4042cc:	ss sbb eax,0x5b2aa263
  4042d2:	imul   esp,edx,0x6e691291
  4042d8:	lahf   
  4042d9:	icebp  
  4042da:	sub    bl,dl
  4042dc:	mov    eax,ebx
  4042de:	fild   QWORD PTR [esi+edx*4+0x68]
  4042e2:	lahf   
  4042e3:	arpl   WORD PTR [ebp-0x50],si
  4042e6:	xchg   esi,eax
  4042e7:	cmp    al,0xc0
  4042e9:	cmp    eax,0x65d455a4
  4042ee:	addr16 mov ch,0x64
  4042f1:	test   BYTE PTR [esi],al
  4042f3:	(bad)  
  4042f4:	(bad)  
  4042f5:	xlat   BYTE PTR ds:[ebx]
  4042f6:	xchg   edx,eax
  4042f7:	add    BYTE PTR [edx+0x54],ah
  4042fa:	ret    0x568a
  4042fd:	xor    esp,esi
  4042ff:	mov    dh,BYTE PTR [edx-0x69b9ab9]
  404305:	push   esi
  404306:	push   ebp
  404307:	addr16 not dh
  40430a:	mov    bl,ah
  40430c:	jp     0x40431b
  40430e:	ror    bl,0xed
  404311:	fst    DWORD PTR ds:0x15bb50b9
  404317:	fdivr  DWORD PTR [ebx+0xc]
  40431a:	cmp    eax,0x4ad5c62e
  40431f:	ret    
  404320:	xlat   BYTE PTR ds:[ebx]
  404321:	or     DWORD PTR [eax],edx
  404323:	test   eax,0xda730828
  404328:	jecxz  0x4043a7
  40432a:	jle    0x404391
  40432c:	and    DWORD PTR [ecx],0x670433cb
  404332:	xchg   ebp,eax
  404333:	cmp    al,0x8a
  404335:	cmp    dh,0xfe
  404338:	push   ebx
  404339:	mov    DWORD PTR [ebp+0x48],ecx
  40433c:	lods   eax,DWORD PTR ds:[esi]
  40433d:	add    al,0xde
  40433f:	inc    ebp
  404340:	(bad)  
  404341:	push   ebx
  404342:	std    
  404343:	clc    
  404344:	cwde   
  404345:	mov    ecx,0x250d98a5
  40434a:	imul   DWORD PTR [edx+0x223566f9]
  404350:	mov    WORD PTR [esi],fs
  404352:	inc    eax
  404353:	pop    esi
  404354:	hlt    
  404355:	or     eax,0xddf9cd8c
  40435a:	out    dx,eax
  40435b:	jle    0x40432c
  40435d:	or     al,0xbb
  40435f:	inc    esp
  404360:	inc    eax
  404361:	push   ebp
  404362:	lahf   
  404363:	xor    cl,BYTE PTR [eax+edi*8+0x77]
  404367:	xor    al,0xd7
  404369:	sub    eax,0x284a9a5d
  40436e:	xchg   edx,eax
  40436f:	cs jle 0x4043c5
  404372:	push   esi
  404373:	addr16 call 0x94e31152
  404379:	xor    ebp,DWORD PTR [esi+0x6ad58d9a]
  40437f:	cmp    esp,esi
  404381:	push   ecx
  404382:	int3   
  404383:	int3   
  404384:	mul    eax
  404386:	enter  0x2a17,0xd7
  40438a:	xor    al,0x4a
  40438c:	es cli 
  40438e:	pop    ds
  40438f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404391:	xchg   edx,eax
  404392:	ins    DWORD PTR es:[edi],dx
  404393:	xor    al,0x86
  404395:	push   eax
  404396:	pusha  
  404397:	jne    0x4043c3
  404399:	add    DWORD PTR ds:0x9b06cb08,ecx
  40439f:	sub    dh,BYTE PTR [ecx+0x2d]
  4043a2:	sbb    eax,0xd66d3ff2
  4043a7:	(bad)  
  4043a8:	ret    0xc6e8
  4043ab:	push   edx
  4043ac:	dec    ebp
  4043ad:	jnp    0x4043ca
  4043af:	loope  0x4043c5
  4043b1:	pop    ds
  4043b2:	xchg   ebx,eax
  4043b3:	xor    al,0xcb
  4043b5:	push   cs
  4043b6:	mov    ds,WORD PTR [eax-0x1a]
  4043b9:	lds    eax,FWORD PTR [edi-0x3f]
  4043bc:	popa   
  4043bd:	loope  0x40439a
  4043bf:	stos   BYTE PTR es:[edi],al
  4043c0:	mov    al,0xe3
  4043c2:	pop    es
  4043c3:	xor    al,0xcf
  4043c5:	xchg   edx,eax
  4043c6:	int    0xfe
  4043c8:	or     edi,esp
  4043ca:	lods   eax,DWORD PTR es:[esi]
  4043cc:	into   
  4043cd:	aas    
  4043ce:	les    esp,FWORD PTR [edi+0x79]
  4043d1:	push   eax
  4043d2:	jbe    0x4043cd
  4043d4:	arpl   WORD PTR [edx],si
  4043d6:	adc    eax,0xcfc7aea4
  4043db:	imul   edi,DWORD PTR [ecx+0x5446d9f1],0xffffff82
  4043e2:	adc    al,0x5a
  4043e4:	push   edx
  4043e5:	dec    edx
  4043e6:	daa    
  4043e7:	in     al,0xf1
  4043e9:	daa    
  4043ea:	xor    ecx,eax
  4043ec:	int3   
  4043ed:	ins    DWORD PTR es:[edi],dx
  4043ee:	ret    
  4043ef:	xchg   ebx,eax
  4043f0:	inc    esp
  4043f1:	enter  0x949a,0xa9
  4043f5:	sar    BYTE PTR [esi+0x17],cl
  4043f8:	xor    BYTE PTR [esi-0x6],0x9a
  4043fc:	mov    bh,0xb9
  4043fe:	sbb    DWORD PTR [esi],ebx
  404400:	sbb    al,0x18
  404402:	mov    edx,0x203bec62
  404407:	cwde   
  404408:	and    ebx,DWORD PTR [ecx+0xdce3949]
  40440e:	fs daa 
  404410:	repz inc esp
  404412:	adc    esp,esp
  404414:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404415:	outs   dx,DWORD PTR ds:[esi]
  404416:	icebp  
  404417:	push   esp
  404418:	jmp    0x404434
  40441a:	push   edx
  40441b:	in     eax,0xaf
  40441d:	inc    ebx
  40441e:	stos   BYTE PTR es:[edi],al
  40441f:	inc    edx
  404420:	jo     0x4043da
  404422:	rcl    BYTE PTR [ebx+0x37d9a1c2],cl
  404428:	(bad)  
  40442a:	sbb    BYTE PTR [ecx+0x5d1f3262],dh
  404430:	mov    ecx,0x348dea25
  404435:	lods   eax,DWORD PTR ds:[esi]
  404436:	dec    eax
  404437:	sbb    al,0xa5
  404439:	sahf   
  40443a:	adc    al,dh
  40443c:	mov    ds:0xd41ff966,al
  404441:	inc    edx
  404442:	das    
  404443:	ror    DWORD PTR [edi+0x840e27b],0xba
  40444a:	scas   eax,DWORD PTR es:[edi]
  40444b:	cmc    
  40444c:	add    al,0xe8
  40444e:	pop    ecx
  40444f:	pop    eax
  404450:	je     0x40440e
  404452:	dec    edx
  404453:	popa   
  404454:	and    cl,ah
  404456:	fstp   QWORD PTR [ecx]
  404458:	dec    ebp
  404459:	and    eax,0x1849ebd3
  40445e:	xor    eax,0x72a95bb4
  404463:	lea    ebx,[edx]
  404465:	aad    0x38
  404467:	into   
  404468:	repnz add eax,0xf5b218c
  40446e:	xor    bh,BYTE PTR [edx+eax*1+0x29e01f8f]
  404475:	call   0x36930ce6
  40447a:	xchg   esi,edi
  40447c:	push   edi
  40447d:	call   0x12dd7d41
  404482:	jmp    0x2ff9d1f4
  404487:	xchg   esp,eax
  404488:	xlat   BYTE PTR ds:[ebx]
  404489:	(bad)  
  40448b:	xchg   esi,eax
  40448c:	lahf   
  40448d:	push   eax
  40448e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  404490:	xchg   cl,dl
  404492:	xor    esp,DWORD PTR ds:0x365936a9
  404498:	loope  0x404512
  40449a:	and    cl,dl
  40449c:	or     al,BYTE PTR [esi+eiz*8-0x1a55a2ed]
  4044a3:	js     0x404503
  4044a5:	jne    0x4044af
  4044a7:	dec    ecx
  4044a8:	dec    esp
  4044a9:	pop    esi
  4044aa:	scas   al,BYTE PTR es:[edi]
  4044ab:	xchg   esp,eax
  4044ac:	outs   dx,BYTE PTR ds:[esi]
  4044ad:	fmul   QWORD PTR [esi+0x29b097e7]
  4044b3:	arpl   WORD PTR [esi],si
  4044b5:	add    BYTE PTR [ebp+0x44662aed],0x7b
  4044bc:	jecxz  0x4044a0
  4044be:	mov    ah,0x26
  4044c0:	fyl2x  
  4044c2:	xor    al,0x3d
  4044c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c5:	gs inc edi
  4044c7:	or     bh,BYTE PTR [ecx]
  4044c9:	retf   0xc187
  4044cc:	aaa    
  4044cd:	test   BYTE PTR [edx],al
  4044cf:	rcl    DWORD PTR [ebx-0x2b89641],1
  4044d5:	or     BYTE PTR [edx+0x32c91e48],0x15
  4044dc:	xchg   ebp,eax
  4044dd:	push   DWORD PTR [edx+ecx*8-0x74]
  4044e1:	jne    0x404483
  4044e3:	push   edx
  4044e4:	and    eax,0xa9864ba5
  4044e9:	mov    ah,0xe3
  4044eb:	or     ecx,eax
  4044ed:	cld    
  4044ee:	xchg   BYTE PTR [ecx+esi*8-0x5f63e344],dh
  4044f5:	mov    al,ds:0x92c538ae
  4044fa:	sbb    DWORD PTR [eax-0x57],ecx
  4044fd:	push   es
  4044fe:	xor    BYTE PTR [eax-0x6c],ah
  404501:	outs   dx,DWORD PTR ds:[esi]
  404502:	nop
  404503:	or     edx,edi
  404505:	mov    esp,0x7b95a800
  40450a:	bnd jae 0x404587
  40450d:	adc    al,0x85
  40450f:	loop   0x40450a
  404511:	jecxz  0x4044bb
  404513:	arpl   bp,si
  404515:	mov    cl,0xb3
  404517:	inc    eax
  404518:	xor    DWORD PTR [edx+0x35],ebx
  40451b:	jne    0x404545
  40451d:	pop    esp
  40451e:	or     al,bh
  404520:	adc    BYTE PTR [eax-0x7e758c38],bl
  404526:	or     eax,0x3cd2078d
  40452b:	lahf   
  40452c:	xor    esp,edi
  40452e:	mov    ebx,0xc077eea7
  404533:	mov    DWORD PTR [eax],edi
  404535:	push   eax
  404536:	inc    edx
  404537:	push   es
  404538:	sbb    DWORD PTR [eax-0x350bcd12],ecx
  40453e:	repnz inc esp
  404540:	and    al,0x6f
  404542:	xor    DWORD PTR [esp+ebp*8],ecx
  404545:	fbld   TBYTE PTR [eax+0x6]
  404548:	out    0x60,al
  40454a:	cmp    BYTE PTR [ebx+0x3035a191],bh
  404550:	jns    0x4044d3
  404552:	mov    eax,0xa6d2fea9
  404557:	mov    ds:0x4eb6c501,al
  40455c:	(bad)  
  40455d:	sbb    BYTE PTR [eax*1+0xc59a7f5],ch
  404564:	xor    eax,0xa17aa782
  404569:	jg     0x4045a9
  40456b:	out    0x23,eax
  40456d:	mov    WORD PTR [edx],gs
  40456f:	dec    esi
  404570:	test   DWORD PTR [ebx-0x47],ebp
  404573:	loop   0x404536
  404575:	jg     0x4044fe
  404577:	mov    ds:0xb1a65132,eax
  40457c:	jge    0x4045bb
  40457e:	push   esi
  40457f:	std    
  404580:	dec    esi
  404581:	xor    dh,BYTE PTR [edx+0x3e]
  404584:	cmp    ecx,esi
  404586:	jb     0x4045bd
  404588:	bound  edi,QWORD PTR [edx-0x797c25b7]
  40458e:	push   ecx
  40458f:	add    al,0x2c
  404591:	pop    ebx
  404592:	ins    DWORD PTR es:[edi],dx
  404593:	in     al,0xf2
  404595:	mov    BYTE PTR ds:0xcde9151,dh
  40459b:	aas    
  40459c:	dec    BYTE PTR [edi-0x69]
  40459f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a0:	sub    edi,DWORD PTR [eax+0x7489eea7]
  4045a6:	mov    cl,0xd5
  4045a8:	test   BYTE PTR [ebx-0x14],al
  4045ab:	test   eax,0x383360f9
  4045b0:	fisubr WORD PTR [edi+0x3e6c1954]
  4045b6:	push   cs
  4045b7:	pop    es
  4045b8:	(bad)  
  4045b9:	jae    0x404628
  4045bb:	jae    0x40456f
  4045bd:	les    edx,FWORD PTR [edi+0x4edc2e82]
  4045c3:	jbe    0x4045b8
  4045c5:	(bad)  [edi+0x2d894afd]
  4045cb:	inc    edx
  4045cc:	inc    edx
  4045cd:	addr16 xchg ecx,eax
  4045cf:	or     eax,0xe1cde026
  4045d4:	push   es
  4045d5:	mov    eax,0x4993a6b3
  4045da:	repnz adc esp,ebx
  4045dd:	jo     0x4045e1
  4045df:	xchg   ecx,eax
  4045e0:	xor    al,0xf1
  4045e2:	xchg   ebp,eax
  4045e3:	or     BYTE PTR [esi-0x28986321],bl
  4045e9:	mov    cl,0x3c
  4045eb:	pop    ebx
  4045ec:	cs push esp
  4045ee:	lods   al,BYTE PTR ds:[esi]
  4045ef:	mov    BYTE PTR ds:0x88a58abb,ah
  4045f5:	out    0x2e,eax
  4045f7:	pop    es
  4045f8:	pop    ebx
  4045f9:	add    al,0xee
  4045fb:	outs   dx,DWORD PTR ds:[esi]
  4045fc:	test   DWORD PTR [ebp+0x2e035e94],ecx
  404602:	mov    edx,0xa6df3e0a
  404607:	aad    0x36
  404609:	shl    BYTE PTR [ecx+edi*2+0x48],cl
  40460d:	inc    esi
  40460e:	xor    cl,BYTE PTR [ebx+0x442a2b0a]
  404614:	(bad)  
  404616:	stos   DWORD PTR es:[edi],eax
  404617:	and    al,0x56
  404619:	adc    BYTE PTR fs:[esi+0x45],0xf8
  40461e:	rcl    BYTE PTR [edx-0x3adf9141],0xd5
  404625:	xchg   DWORD PTR [ebx-0x6e],ebx
  404628:	dec    edx
  404629:	xchg   esi,eax
  40462a:	lahf   
  40462b:	sbb    ecx,ebp
  40462d:	push   eax
  40462e:	sub    eax,0xc775c325
  404633:	mov    ch,0x4c
  404635:	mov    cl,0x3b
  404637:	xor    BYTE PTR ds:0x760dbffe,dl
  40463d:	jae    0x4045f6
  40463f:	mov    ch,0x70
  404641:	arpl   WORD PTR [eax+0x4c82d500],sp
  404647:	jns    0x40466c
  404649:	jne    0x4045db
  40464b:	jne    0x4046b3
  40464d:	lods   eax,DWORD PTR ds:[esi]
  40464e:	xchg   edi,eax
  40464f:	es add eax,0xc2475110
  404655:	loop   0x40467b
  404657:	(bad)  
  404658:	call   0x2d8f:0xca5c7753
  40465f:	sbb    ax,0x9b20
  404663:	test   ebx,esp
  404665:	adc    al,0xf6
  404667:	aas    
  404668:	jbe    0x4046d4
  40466a:	xor    ah,BYTE PTR [eax+0x3a]
  40466d:	out    0x7c,eax
  40466f:	sbb    dh,cl
  404671:	jle    0x404685
  404673:	push   ebx
  404674:	iret   
  404675:	mov    ebx,0xdcece8f7
  40467a:	pop    ecx
  40467b:	jp     0x4046ef
  40467d:	xchg   esi,eax
  40467e:	hlt    
  40467f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404680:	cmp    cl,ah
  404682:	mov    cl,0x1c
  404684:	xor    DWORD PTR [esi+0x714a3155],0x70f1f655
  40468e:	xor    al,0xc1
  404690:	add    eax,DWORD PTR [esi+0x323ca7de]
  404696:	adc    ebp,DWORD PTR [esi-0x6e]
  404699:	inc    edi
  40469a:	jle    0x4046a6
  40469c:	test   al,0x5
  40469e:	mov    WORD PTR [edi],ss
  4046a0:	or     DWORD PTR [eax+0x60],esi
  4046a3:	add    BYTE PTR [esi],al
  4046a5:	scas   eax,DWORD PTR es:[edi]
  4046a6:	cmc    
  4046a7:	(bad)  
  4046a8:	jbe    0x4046f7
  4046aa:	fidiv  WORD PTR [ecx-0x1c]
  4046ad:	pop    ecx
  4046ae:	mov    dh,0x3f
  4046b0:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4046b2:	mov    ebp,0x32acac73
  4046b7:	test   DWORD PTR [ecx],edx
  4046b9:	into   
  4046ba:	ret    
  4046bb:	mov    dh,0x88
  4046bd:	mov    dl,0xe
  4046bf:	push   ebx
  4046c0:	dec    BYTE PTR ds:0x3d8aa5ea
  4046c6:	nop
  4046c7:	shl    ecx,0x65
  4046ca:	xchg   edi,eax
  4046cb:	mov    al,ds:0x9a054fda
  4046d0:	inc    eax
  4046d1:	or     al,0xa6
  4046d3:	push   ecx
  4046d4:	xchg   DWORD PTR [esi-0x38],ebp
  4046d7:	out    dx,al
  4046d8:	jo     0x404679
  4046da:	loopne 0x404724
  4046dc:	mov    ch,0x2
  4046de:	scas   al,BYTE PTR es:[edi]
  4046df:	pop    esp
  4046e0:	adc    ch,BYTE PTR [edx+0x18b8aded]
  4046e6:	pop    ebx
  4046e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046e8:	je     0x40475b
  4046ea:	pop    ds
  4046eb:	inc    esp
  4046ec:	xchg   edi,eax
  4046ed:	hlt    
  4046ee:	lods   al,BYTE PTR ds:[esi]
  4046ef:	and    ah,dl
  4046f1:	test   eax,0x9325cf50
  4046f7:	fs push 0x33
  4046fa:	xlat   BYTE PTR ds:[ebx]
  4046fb:	add    eax,DWORD PTR [eax+0x619c5950]
  404701:	xlat   BYTE PTR ds:[ebx]
  404702:	pop    ds
  404703:	dec    esi
  404704:	cdq    
  404705:	cpuid  
  404707:	dec    edx
  404708:	pop    ebx
  404709:	lea    ebp,[eax]
  40470b:	sahf   
  40470c:	loopne 0x40477e
  40470e:	push   esi
  40470f:	test   DWORD PTR [edi+edx*8-0x35],0x32c77972
  404717:	retf   
  404718:	xor    al,0xa3
  40471a:	and    ah,bh
  40471c:	mov    dl,BYTE PTR [esi+ebp*2]
  40471f:	sub    al,0xc6
  404721:	and    BYTE PTR [esi],0xcc
  404724:	xor    ebx,edi
  404726:	add    BYTE PTR [esi],dh
  404728:	retf   0xf788
  40472b:	(bad)  
  40472c:	cmp    cl,BYTE PTR [edx-0x55]
  40472f:	pop    edx
  404730:	es (bad) 
  404733:	ins    BYTE PTR es:[edi],dx
  404734:	jns    0x404705
  404736:	mov    edx,0xc441d97c
  40473b:	je     0x4046d7
  40473d:	ins    BYTE PTR es:[edi],dx
  40473e:	aam    0x24
  404740:	ldmxcsr DWORD PTR [edi-0x296bdfa1]
  404747:	enter  0x509c,0x4b
  40474b:	(bad)  
  40474c:	fwait
  40474d:	cld    
  40474e:	imul   esp,DWORD PTR [ecx-0x2185123d],0x92741981
  404758:	aad    0x2c
  40475a:	inc    esi
  40475b:	sbb    ch,al
  40475d:	(bad)  
  40475e:	fxch   st(6)
  404760:	mov    ebp,0x68a9f4f
  404765:	call   0xdfed:0x81a6d496
  40476c:	or     BYTE PTR [edi-0x3a],dl
  40476f:	ret    
  404770:	imul   edi,DWORD PTR [eax+0x5b92451a],0xeb9609d2
  40477a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40477b:	jmp    0x40474b
  40477d:	in     al,0x8d
  40477f:	sub    al,BYTE PTR [ebx+ecx*2]
  404782:	jae    0x4047a3
  404784:	jo     0x404743
  404786:	fadd   QWORD PTR [eax]
  404788:	dec    esp
  404789:	sbb    BYTE PTR [esi-0x31],bl
  40478c:	ins    DWORD PTR es:[edi],dx
  40478d:	int3   
  40478e:	or     al,0x34
  404790:	lods   al,BYTE PTR ds:[esi]
  404791:	fild   DWORD PTR ss:[esi]
  404794:	dec    ebx
  404795:	push   0xffffff81
  404797:	(bad)  
  404799:	mov    ds:0x4b8142de,eax
  40479e:	xlat   BYTE PTR ds:[ebx]
  40479f:	mov    fs,WORD PTR ds:0xdebe4302
  4047a5:	inc    ebx
  4047a6:	or     eax,0xe6ad6203
  4047ab:	inc    edx
  4047ac:	lods   eax,DWORD PTR ds:[esi]
  4047ad:	xchg   ebx,eax
  4047ae:	cwde   
  4047af:	adc    DWORD PTR [ecx],esi
  4047b1:	mov    esi,0x747a1d08
  4047b6:	dec    BYTE PTR [esp+ecx*2]
  4047b9:	jp     0x40474a
  4047bb:	fprem1 
  4047bd:	les    edi,FWORD PTR [eax+0x25]
  4047c0:	js     0x4047c6
  4047c2:	test   DWORD PTR [ebx-0x7e],eax
  4047c5:	mov    eax,ds:0x7baa95e
  4047ca:	(bad)  
  4047cc:	mov    ecx,0x7b4010f7
  4047d1:	addr16 dec ebp
  4047d3:	cwde   
  4047d4:	mov    ebx,ss
  4047d6:	push   ecx
  4047d7:	sbb    DWORD PTR [ecx],esp
  4047d9:	xchg   edx,eax
  4047da:	in     al,0x44
  4047dc:	xor    BYTE PTR [edx],ch
  4047de:	jge    0x4047c3
  4047e0:	cmp    eax,ebx
  4047e2:	xchg   ebx,eax
  4047e3:	loop   0x404846
  4047e5:	add    al,0xe0
  4047e7:	dec    esi
  4047e8:	(bad)  
  4047ea:	push   es
  4047eb:	mov    esp,0xea6e480a
  4047f0:	stc    
  4047f1:	stos   BYTE PTR es:[edi],al
  4047f2:	js     0x404788
  4047f4:	(bad)  
  4047f5:	cli    
  4047f6:	jb     0x4047ff
  4047f8:	aaa    
  4047f9:	mov    cl,0xbe
  4047fb:	int3   
  4047fc:	mov    cl,0x4
  4047fe:	sar    BYTE PTR [esi],cl
  404800:	mov    ebx,0xd2fd26bd
  404805:	test   DWORD PTR [edi],eax
  404807:	cmp    esi,DWORD PTR [ebx+0x5d55bc50]
  40480d:	test   DWORD PTR [edx+0x34],0xc73afa6c
  404814:	ja     0x404832
  404816:	cmp    dh,dh
  404818:	popa   
  404819:	je     0x40485d
  40481b:	and    DWORD PTR [esi],edx
  40481d:	popa   
  40481e:	lahf   
  40481f:	pop    esi
  404820:	lock fwait
  404822:	pop    eax
  404823:	jg     0x4047a9
  404825:	adc    DWORD PTR [esi-0x46015684],esp
  40482b:	xor    DWORD PTR [edi],0xffffffce
  40482e:	test   al,0x25
  404830:	or     eax,0x4c368ee6
  404835:	mov    eax,ds:0x36989750
  40483a:	mov    ch,0x14
  40483c:	jg     0x404823
  40483e:	scas   al,BYTE PTR es:[edi]
  40483f:	mov    BYTE PTR ds:0x7c4d6403,al
  404845:	adc    ebx,ebp
  404847:	jne    0x404860
  404849:	add    bl,BYTE PTR [ecx-0x2d]
  40484c:	lds    eax,FWORD PTR [esi+0x5cc20f3d]
  404852:	test   DWORD PTR [ecx+eiz*1-0x57],edx
  404856:	bound  ecx,QWORD PTR [ecx+0x555df7c2]
  40485c:	in     eax,dx
  40485d:	retf   0x48b5
  404860:	dec    DWORD PTR [ebx]
  404862:	iret   
  404863:	lock ins DWORD PTR es:[edi],dx
  404865:	dec    eax
  404866:	xchg   edi,eax
  404867:	and    dl,BYTE PTR [edi-0x43bd2f49]
  40486d:	cwde   
  40486e:	bound  ecx,QWORD PTR [edi-0x43]
  404871:	loope  0x40480f
  404873:	bswap  eax
  404875:	es jae 0x40488a
  404878:	jnp    0x40485b
  40487a:	mov    edx,0x9deaa3f4
  40487f:	loop   0x4048dd
  404881:	xchg   esi,eax
  404882:	dec    ecx
  404883:	aad    0xbe
  404885:	call   0xb9ff5ffc
  40488a:	ja     0x40484b
  40488c:	cmp    eax,0x922481a9
  404891:	mov    ebp,0x4812f44d
  404896:	jne    0x40484b
  404898:	push   ebp
  404899:	(bad)  
  40489a:	push   si
  40489c:	add    al,0x91
  40489e:	push   esp
  40489f:	(bad)  
  4048a0:	and    DWORD PTR [ebx+0x67c35082],edi
  4048a6:	mov    edi,0x2509fcac
  4048ab:	pop    ecx
  4048ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048ad:	or     ah,BYTE PTR [eax+0x2e34a1eb]
  4048b3:	mov    eax,es:0x94f58512
  4048b9:	mov    dl,0x9c
  4048bb:	mov    edi,0xa79e8c20
  4048c0:	out    dx,al
  4048c1:	or     DWORD PTR [ebx],esp
  4048c3:	adc    BYTE PTR [ebp-0x2e],al
  4048c6:	dec    ebx
  4048c7:	test   al,0xb5
  4048c9:	jb     0x404936
  4048cb:	and    al,0xc
  4048cd:	arpl   cx,dx
  4048cf:	add    esi,DWORD PTR [ebx-0x28a625b3]
  4048d5:	inc    esp
  4048d6:	fcom   QWORD PTR [edi]
  4048d8:	push   ebx
  4048d9:	push   ds
  4048da:	adc    esp,DWORD PTR [ebp+0x56]
  4048dd:	sbb    al,0x98
  4048df:	pop    ds
  4048e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e1:	sbb    dl,0x39
  4048e4:	xor    DWORD PTR [edi+0x1f4c62a9],0xd2df3b84
  4048ee:	imul   eax,DWORD PTR [edx-0x2e5fc406],0xf57f6ea3
  4048f8:	pop    ecx
  4048f9:	fstp   DWORD PTR [ebx]
  4048fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048fc:	sbb    dh,BYTE PTR ss:[edx]
  4048ff:	aaa    
  404900:	cwde   
  404901:	sbb    DWORD PTR [ecx+0x29f37d06],eax
  404907:	xor    BYTE PTR [edi],dl
  404909:	data16 arpl WORD PTR [edx],bp
  40490c:	xor    BYTE PTR [edx-0x42],dl
  40490f:	sub    eax,0x92c42d8a
  404914:	ret    0x85f7
  404917:	inc    esi
  404918:	xchg   ebx,eax
  404919:	inc    esi
  40491a:	rep lods eax,DWORD PTR ds:[esi]
  40491c:	xchg   ebx,eax
  40491d:	pop    eax
  40491e:	arpl   WORD PTR [eax+edi*8-0x46],dx
  404922:	std    
  404923:	clc    
  404924:	mov    eax,0x4a484783
  404929:	ss mov ebp,0x57cc2a24
  40492f:	pop    edx
  404930:	out    0x95,eax
  404932:	(bad)  
  404934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404935:	test   eax,0x7220b8e1
  40493a:	inc    edi
  40493b:	lahf   
  40493c:	daa    
  40493d:	push   eax
  40493e:	jp     0x4049b4
  404940:	scas   eax,DWORD PTR es:[edi]
  404941:	sub    al,0x1c
  404943:	jge    0x404961
  404945:	ins    DWORD PTR es:[edi],dx
  404946:	int3   
  404947:	sbb    eax,0xa2887cca
  40494c:	sub    cl,bh
  40494e:	xor    BYTE PTR ds:0xc14742f9,bl
  404954:	ret    
  404955:	fwait
  404956:	popf   
  404957:	cwde   
  404958:	adc    al,0x55
  40495a:	push   ds
  40495b:	dec    edi
  40495c:	mov    esi,0x73b5bb09
  404961:	rcl    DWORD PTR [ecx+esi*2+0x23aff9a],cl
  404968:	adc    dh,bl
  40496a:	mov    al,0xb9
  40496c:	cmp    DWORD PTR ds:0x6c978756,edi
  404972:	mov    ds:0x30b7a7b0,al
  404977:	aad    0x4e
  404979:	and    BYTE PTR [edi+0x7b],0xfe
  40497d:	outs   dx,BYTE PTR ds:[esi]
  40497e:	in     al,dx
  40497f:	mov    esi,0x84c8a71c
  404984:	iret   
  404985:	mov    ah,BYTE PTR [edx]
  404987:	shl    BYTE PTR [ecx+0x70],0x16
  40498b:	mov    edx,DWORD PTR [ebx-0x1]
  40498e:	mov    ecx,0x2631c2aa
  404993:	jb     0x4049d8
  404995:	cmp    BYTE PTR [ecx],dl
  404997:	jae    0x4049c9
  404999:	push   edx
  40499a:	dec    ebp
  40499b:	pop    eax
  40499c:	sub    bh,cl
  40499e:	xchg   edi,eax
  40499f:	add    al,0x83
  4049a1:	(bad)  
  4049a2:	rcr    DWORD PTR [edi+0x11],0x66
  4049a6:	and    ebx,DWORD PTR [esp+ecx*4-0x9858505]
  4049ad:	jmp    0x4049d7
  4049af:	(bad)  
  4049b0:	es jmp 0xd5c2:0x8841454d
  4049b8:	mov    ebx,0xa496759e
  4049bd:	(bad)  
  4049be:	test   eax,0xfe65debb
  4049c3:	xchg   ebx,eax
  4049c4:	imul   ecx,DWORD PTR [edx-0x43],0xebf63896
  4049cb:	xchg   esi,edi
  4049cd:	mov    dl,0x72
  4049cf:	dec    eax
  4049d0:	sbb    al,0x8a
  4049d2:	data16 test BYTE PTR [edi+0x52],ch
  4049d6:	scas   al,BYTE PTR es:[edi]
  4049d7:	aaa    
  4049d8:	fisubr WORD PTR [eax-0x3249ce0d]
  4049de:	jno    0x404998
  4049e0:	mov    ch,BYTE PTR [edi-0x67]
  4049e3:	fisubr WORD PTR [ebp+0x43]
  4049e6:	loope  0x404a63
  4049e8:	xchg   ecx,eax
  4049e9:	and    DWORD PTR [ebp+0x2e77cf4f],esi
  4049ef:	xchg   ebp,eax
  4049f0:	jge    0x4049f4
  4049f2:	and    BYTE PTR [esi+0x3a032b],ah
  4049f8:	(bad)  
  4049f9:	repz jno 0x4049ce
  4049fc:	push   ss
  4049fd:	pop    ebx
  4049fe:	(bad)  [esi-0x5]
  404a01:	sbb    eax,0xfe33ddd
  404a06:	(bad)  
  404a07:	(bad)  
  404a08:	jp     0x40499e
  404a0a:	push   edx
  404a0b:	jb     0x404a19
  404a0d:	xchg   ebp,eax
  404a0e:	jmp    0x4049a7
  404a10:	push   edi
  404a11:	xchg   esp,eax
  404a12:	aam    0x59
  404a14:	dec    eax
  404a15:	mov    esp,0xa44dcdb9
  404a1a:	sbb    BYTE PTR [edi],bh
  404a1c:	rcl    BYTE PTR [esi-0x2d],1
  404a1f:	aad    0x83
  404a21:	cmp    edx,ebx
  404a23:	leave  
  404a24:	fs or  eax,0x39
  404a28:	nop
  404a29:	scas   eax,DWORD PTR es:[edi]
  404a2a:	sbb    eax,0x54559b04
  404a2f:	jge    0x404a7b
  404a31:	pop    ds
  404a32:	push   0x4a109a5b
  404a37:	adc    edi,eax
  404a39:	and    bl,al
  404a3b:	call   0x43f9:0x50b26f3b
  404a42:	cmp    BYTE PTR [ebx-0x78],al
  404a45:	and    eax,0xf7c93a2e
  404a4a:	xchg   ebx,eax
  404a4b:	inc    ecx
  404a4c:	and    ebp,DWORD PTR [ebx+edi*1+0x28a8189e]
  404a53:	push   cs
  404a54:	jecxz  0x404aae
  404a56:	into   
  404a57:	fwait
  404a58:	mov    ecx,0xd3998f93
  404a5d:	(bad)  
  404a5e:	push   edi
  404a5f:	iret   
  404a60:	cdq    
  404a61:	or     edi,DWORD PTR [esp+esi*2-0x11]
  404a65:	nop
  404a66:	popf   
  404a67:	lds    esp,FWORD PTR [ebx]
  404a69:	push   edi
  404a6a:	add    BYTE PTR [edi-0x7a],al
  404a6d:	mov    ebx,0xea5f0ea2
  404a72:	add    eax,0xb9cb5569
  404a77:	(bad)  
  404a78:	retf   0x565b
  404a7b:	shl    DWORD PTR [eax-0x77b6135],cl
  404a81:	cmc    
  404a82:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404a84:	and    dl,dl
  404a86:	dec    edi
  404a87:	inc    ecx
  404a88:	icebp  
  404a89:	adc    esi,0x58
  404a8c:	jl     0x404afe
  404a8e:	mov    dh,0xae
  404a90:	test   al,0x74
  404a92:	stc    
  404a93:	loop   0x404b05
  404a95:	and    edx,edi
  404a97:	popa   
  404a98:	outs   dx,DWORD PTR ds:[esi]
  404a99:	retf   
  404a9a:	xchg   BYTE PTR [esi+0x48],ah
  404a9d:	jae    0x404a50
  404a9f:	xchg   edx,eax
  404aa0:	sub    bh,bl
  404aa2:	setg   al
  404aa5:	cld    
  404aa6:	fild   DWORD PTR [edi]
  404aa8:	jb     0x404b0f
  404aaa:	cdq    
  404aab:	sbb    DWORD PTR [edi],ecx
  404aad:	mov    BYTE PTR [ebp-0x12],0x18
  404ab1:	push   edx
  404ab2:	ds call 0xf5429f8c
  404ab8:	cmp    eax,0xdb58dd30
  404abd:	lods   eax,DWORD PTR ds:[esi]
  404abe:	jnp    0x404aa1
  404ac0:	mov    esi,0x9630b53e
  404ac5:	es push esi
  404ac7:	sbb    esp,ebp
  404ac9:	pop    ss
  404aca:	sub    al,0x7a
  404acc:	pop    ds
  404acd:	xor    DWORD PTR [edi+0xb],ebx
  404ad0:	xor    ecx,DWORD PTR [ebp+0x68]
  404ad3:	popf   
  404ad4:	out    0x2,eax
  404ad6:	ror    BYTE PTR [esi],cl
  404ad8:	or     DWORD PTR [ecx+0x1511428],ebp
  404ade:	push   0x4bfed587
  404ae3:	push   eax
  404ae4:	xchg   ebx,eax
  404ae5:	and    esp,edx
  404ae7:	add    BYTE PTR [edi+0x4f878f0d],dl
  404aed:	iret   
  404aee:	sub    eax,ecx
  404af0:	outs   dx,DWORD PTR ds:[esi]
  404af1:	mov    bh,0x89
  404af3:	pop    ebp
  404af4:	jle    0x404ad5
  404af6:	mov    ebp,0xfa6979b7
  404afb:	les    esp,FWORD PTR [edx-0x6e7dcde9]
  404b01:	xor    ecx,DWORD PTR [ebp-0x72]
  404b04:	mov    fs,WORD PTR [esi]
  404b06:	sti    
  404b07:	outs   dx,BYTE PTR ds:[esi]
  404b08:	nop
  404b09:	inc    ebx
  404b0a:	retf   0x4c12
  404b0d:	adc    ebx,ebp
  404b0f:	mov    al,0x17
  404b11:	ss xor al,0xfc
  404b14:	cmp    DWORD PTR [ebx+0x6f4debeb],0x5c472a03
  404b1e:	fucomip st,st(0)
  404b20:	rcr    BYTE PTR [edi-0x4f],1
  404b23:	(bad)  
  404b24:	std    
  404b25:	add    esi,DWORD PTR [eax-0x7723ad6f]
  404b2b:	(bad)
  404b2f:	adc    ch,BYTE PTR [edx+0x42ce507c]
  404b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b36:	out    0xf6,al
  404b38:	out    dx,al
  404b39:	mov    ebx,0xde73047a
  404b3e:	jae    0x404ae7
  404b40:	jge    0x404b37
  404b42:	into   
  404b43:	sahf   
  404b44:	adc    ebp,DWORD PTR [edi]
  404b46:	test   al,0x61
  404b48:	cmp    al,0x53
  404b4a:	stc    
  404b4b:	outs   dx,DWORD PTR ds:[esi]
  404b4c:	add    ebx,DWORD PTR [edi+0x73]
  404b4f:	mov    ds:0x1327a8ae,eax
  404b54:	jmp    0x404af2
  404b56:	dec    edi
  404b57:	xor    al,0xde
  404b59:	cdq    
  404b5a:	xor    bh,BYTE PTR [eax+0x46]
  404b5d:	cld    
  404b5e:	adc    dl,ah
  404b60:	add    eax,0x3b2d46ae
  404b65:	in     al,dx
  404b66:	xchg   ebp,eax
  404b67:	jb     0x404be8
  404b69:	shr    ecx,1
  404b6b:	shl    edi,1
  404b6d:	arpl   WORD PTR [ebx-0x37b54d79],ax
  404b73:	(bad)  
  404b75:	jl     0x404b9f
  404b77:	call   0xf49f7a96
  404b7c:	mov    ch,0xa5
  404b7e:	daa    
  404b7f:	adc    bl,al
  404b81:	xor    al,0x5f
  404b83:	and    DWORD PTR [edi+0x4fea7a62],edx
  404b89:	jecxz  0x404bbe
  404b8b:	pop    ds
  404b8c:	rcl    DWORD PTR [esi+0x3a422ceb],1
  404b92:	push   ecx
  404b93:	mov    edi,0xd92e5f78
  404b98:	inc    ebp
  404b99:	js     0x404b24
  404b9b:	push   cs
  404b9c:	add    BYTE PTR [eax-0x3be4cb9f],bl
  404ba2:	inc    eax
  404ba3:	inc    edx
  404ba4:	add    ch,BYTE PTR ds:0x1904f9e1
  404baa:	jno    0x404b9d
  404bac:	xor    eax,0xbf425735
  404bb1:	inc    ebp
  404bb2:	aam    0x31
  404bb4:	pop    edi
  404bb5:	in     al,0x57
  404bb7:	and    BYTE PTR ds:[ebx],ah
  404bba:	repnz ins DWORD PTR es:[edi],dx
  404bbc:	mov    ebx,0xab0370d1
  404bc1:	and    eax,0xbb7ab9e4
  404bc6:	nop
  404bc7:	cwde   
  404bc8:	aaa    
  404bc9:	sub    edx,0xffffffd0
  404bcc:	or     dl,BYTE PTR [eax+esi*2-0x3a8f252]
  404bd3:	test   al,0x7a
  404bd5:	push   ebp
  404bd6:	les    esp,FWORD PTR [eax+edx*2]
  404bd9:	(bad)  
  404bda:	retf   0x8cc6
  404bdd:	sti    
  404bde:	xor    DWORD PTR [edx-0x33a7c373],esp
  404be4:	add    ebp,DWORD PTR [eax-0x3b]
  404be7:	push   esi
  404be9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bea:	mov    edx,0xef86fcf2
  404bef:	retf   
  404bf0:	sahf   
  404bf1:	fsubp  st(1),st
  404bf3:	mov    ch,0x38
  404bf5:	rcr    ebx,cl
  404bf7:	jmp    0x6641:0xe6b3b739
  404bfe:	clc    
  404bff:	sahf   
  404c00:	xor    al,0x53
  404c02:	ins    BYTE PTR es:[edi],dx
  404c03:	into   
  404c04:	add    eax,0xbe36c1b9
  404c09:	xchg   ebp,eax
  404c0a:	cli    
  404c0b:	ret    0x21d2
  404c0e:	xchg   ebp,eax
  404c0f:	out    0xf9,eax
  404c11:	mov    edx,edx
  404c13:	adc    al,0xc9
  404c15:	mov    al,ds:0xdc441f75
  404c1a:	and    esi,DWORD PTR [ecx+0x53]
  404c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c1e:	(bad)  
  404c20:	push   0xc8d04117
  404c25:	xchg   ebx,eax
  404c26:	hlt    
  404c27:	xchg   BYTE PTR [edi+0x40],dh
  404c2a:	cmc    
  404c2b:	ficomp WORD PTR [edi+0x74]
  404c2e:	retf   0xec83
  404c31:	call   0x98d7:0x62d46c7c
  404c38:	jnp    0x404c39
  404c3a:	or     dl,BYTE PTR [ebx]
  404c3c:	retf   
  404c3d:	sar    ah,cl
  404c3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c40:	lock addr16 loop 0x404c47
  404c44:	addr16 inc edi
  404c46:	inc    esp
  404c47:	mov    ebp,0x6f2a3a6e
  404c4c:	push   ecx
  404c4d:	jnp    0x404bd4
  404c4f:	or     DWORD PTR [ebp+0x67ea0b09],esp
  404c55:	mov    esi,0x9023dd8b
  404c5a:	lds    edx,FWORD PTR [ecx]
  404c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c5d:	inc    edi
  404c5e:	mov    ds:0x6a487053,al
  404c63:	rcr    DWORD PTR [esi],0xbe
  404c66:	jle    0x404c52
  404c68:	inc    ebx
  404c69:	icebp  
  404c6a:	xchg   ebp,edx
  404c6c:	loop   0x404bf0
  404c6e:	cdq    
  404c6f:	into   
  404c70:	call   FWORD PTR [ebx-0x2c79e086]
  404c76:	lods   al,BYTE PTR ds:[esi]
  404c77:	sub    eax,0xf1d3da3e
  404c7c:	pop    ecx
  404c7d:	shr    dl,0x71
  404c80:	jmp    0xe1850cf8
  404c85:	mov    ebx,DWORD PTR [esi-0x4f]
  404c88:	mov    al,ds:0x4c370da5
  404c8d:	inc    esi
  404c8e:	in     eax,0x7e
  404c90:	sbb    al,0x9b
  404c92:	lods   al,BYTE PTR ds:[esi]
  404c93:	jmp    0x404c79
  404c95:	cli    
  404c96:	push   ebx
  404c97:	or     al,0x73
  404c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c9a:	fisttp QWORD PTR [ecx-0x30]
  404c9d:	cmp    eax,0x7cf2d029
  404ca2:	xor    DWORD PTR [esi+0x3767436a],ebx
  404ca8:	and    DWORD PTR [edi-0xb57b70d],edx
  404cae:	retf   0x32d6
  404cb1:	ret    
  404cb2:	mov    ds,WORD PTR [eax+0x5d]
  404cb5:	jl     0x404c82
  404cb7:	add    DWORD PTR [edx+0x7f06ada],0xffffffec
  404cbe:	dec    eax
  404cbf:	mov    ds:0x86997b73,eax
  404cc4:	lahf   
  404cc5:	test   BYTE PTR [eax+0x17eb3c90],bl
  404ccb:	jo     0x404c86
  404ccd:	sub    esi,DWORD PTR [ebx+edx*8-0x7b057561]
  404cd4:	outs   dx,BYTE PTR ds:[esi]
  404cd5:	scas   al,BYTE PTR es:[edi]
  404cd6:	(bad)  
  404cd7:	mul    DWORD PTR [eax+0x78]
  404cda:	fistp  DWORD PTR [ecx-0x7b0c45f9]
  404ce0:	xor    eax,0x9e01adbc
  404ce5:	in     eax,0x70
  404ce7:	fiadd  WORD PTR [eax]
  404ce9:	mov    BYTE PTR [edx+0x1df5a219],al
  404cef:	sub    eax,0x235e2204
  404cf4:	mov    BYTE PTR [ecx-0x17073d08],al
  404cfa:	out    dx,eax
  404cfb:	add    ebx,ebp
  404cfd:	aas    
  404cfe:	ins    DWORD PTR es:[edi],dx
  404cff:	adc    al,0xb7
  404d01:	mov    eax,ds:0xbec49c07
  404d06:	test   ebp,edx
  404d08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d09:	clc    
  404d0a:	add    al,0x43
  404d0c:	and    eax,0xabca7705
  404d11:	cld    
  404d12:	sbb    eax,0x2465bad4
  404d17:	iret   
  404d18:	sub    DWORD PTR [esi+ebp*1],ebx
  404d1b:	sub    ch,ah
  404d1d:	sub    ch,BYTE PTR [ebx]
  404d1f:	(bad)  
  404d20:	in     eax,dx
  404d21:	and    al,0xb8
  404d24:	push   ds
  404d25:	xor    al,0x4b
  404d27:	xor    ch,dh
  404d29:	lods   al,BYTE PTR ds:[esi]
  404d2a:	mov    WORD PTR [edx],?
  404d2c:	pushf  
  404d2d:	sbb    ah,0x9e
  404d30:	hlt    
  404d31:	pop    esi
  404d32:	or     al,0x8a
  404d34:	dec    esp
  404d35:	xor    dh,al
  404d37:	in     al,dx
  404d38:	in     eax,0xb8
  404d3a:	cs jnp 0x404d6c
  404d3d:	and    al,0xa2
  404d3f:	pop    esi
  404d40:	xchg   BYTE PTR [ebx+0x62993fbd],bh
  404d46:	add    DWORD PTR [ebx-0x5f3896b4],esp
  404d4c:	sub    ch,BYTE PTR [edi+ecx*1+0x6ad9dba2]
  404d53:	je     0x404d25
  404d55:	xchg   edx,eax
  404d56:	mov    al,0xdf
  404d58:	cmp    BYTE PTR [eax],0xea
  404d5b:	daa    
  404d5c:	jl     0x404d92
  404d5e:	(bad)  
  404d5f:	lock inc esp
  404d61:	imul   esp,esi,0x952ddc17
  404d67:	arpl   WORD PTR [edi+0x6e],ax
  404d6a:	cdq    
  404d6b:	out    dx,al
  404d6c:	add    ebp,DWORD PTR [ebp+0x90909ed]
  404d72:	inc    esp
  404d73:	cmc    
  404d74:	xchg   ebp,eax
  404d75:	imul   eax,esi,0xeb685b8b
  404d7b:	pop    esp
  404d7c:	sar    BYTE PTR [ebp+0x2],cl
  404d7f:	push   eax
  404d80:	inc    ebx
  404d81:	or     bh,BYTE PTR [ecx]
  404d83:	enter  0x28a6,0x5e
  404d87:	sbb    eax,0x18e047cd
  404d8c:	jno    0x404d38
  404d8e:	mov    ch,0x63
  404d90:	or     BYTE PTR [ecx],dh
  404d92:	clc    
  404d93:	sub    bl,cl
  404d95:	in     al,0xf4
  404d97:	mov    ch,0x21
  404d99:	(bad)  
  404d9a:	mov    esp,0xa5e1d1b3
  404d9f:	call   0x486f:0xb42f54d4
  404da6:	iret   
  404da7:	ds sbb cl,cl
  404daa:	inc    ebx
  404dab:	or     al,0x8d
  404dad:	pop    ds
  404dae:	sbb    dh,al
  404db0:	mov    ?,WORD PTR [esi]
  404db2:	in     eax,dx
  404db3:	dec    esi
  404db4:	test   DWORD PTR [ecx+ebx*4],esp
  404db7:	aam    0xe
  404db9:	mov    edi,esi
  404dbb:	std    
  404dbc:	scas   al,BYTE PTR es:[edi]
  404dbd:	inc    ebx
  404dbe:	rcr    DWORD PTR [eax+0x2d8b5dc4],cl
  404dc4:	adc    al,0x8
  404dc6:	retf   
  404dc7:	xor    al,0x76
  404dc9:	xchg   bl,ch
  404dcb:	jp     0x404db2
  404dcd:	jno    0x404d58
  404dcf:	pop    ss
  404dd0:	ja     0x404da3
  404dd2:	sub    DWORD PTR [ecx+0x2dfbd07c],ecx
  404dd8:	push   0xa57c8336
  404ddd:	fs adc esp,esp
  404de0:	and    BYTE PTR [edi+0x39],ch
  404de3:	cdq    
  404de4:	outs   dx,DWORD PTR ds:[esi]
  404de5:	outs   dx,BYTE PTR ds:[esi]
  404de6:	out    dx,al
  404de7:	inc    esi
  404de8:	test   DWORD PTR [esi],ecx
  404dea:	clc    
  404deb:	add    ch,BYTE PTR [ecx+ebp*8]
  404dee:	in     al,dx
  404def:	push   esp
  404df0:	mov    edx,0x8da1895b
  404df5:	mov    dh,0xc8
  404df7:	shl    BYTE PTR [ecx-0x67f25d8c],cl
  404dfd:	mov    al,0x14
  404dff:	in     eax,dx
  404e00:	scas   eax,DWORD PTR es:[edi]
  404e01:	mov    al,ds:0x132c3296
  404e06:	imul   eax,DWORD PTR [edx+0x5b],0xffffff97
  404e0a:	xchg   ebx,eax
  404e0b:	into   
  404e0c:	pop    edx
  404e0d:	(bad)  
  404e0e:	dec    edi
  404e0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e10:	and    eax,0x91718bb4
  404e15:	loope  0x404e11
  404e17:	lods   eax,DWORD PTR ds:[esi]
  404e18:	ja     0x404e59
  404e1a:	ins    DWORD PTR es:[edi],dx
  404e1b:	push   ebx
  404e1c:	(bad)  
  404e1d:	mov    eax,0x7acf10fc
  404e22:	xchg   BYTE PTR [esi],bl
  404e24:	xchg   ebx,eax
  404e25:	lea    esp,[ecx+0x15]
  404e28:	not    ebp
  404e2a:	js     0x404e2c
  404e2c:	sahf   
  404e2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2e:	or     al,0x2d
  404e30:	scas   al,BYTE PTR es:[edi]
  404e31:	mov    WORD PTR [eax+0x3221bea9],ds
  404e37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e38:	iret   
  404e39:	cmc    
  404e3a:	cmp    al,0xb8
  404e3c:	mov    esi,0xa684a2e2
  404e41:	dec    ebx
  404e42:	shr    DWORD PTR [ecx],0x75
  404e45:	cwde   
  404e46:	jns    0x404df9
  404e48:	(bad)  
  404e49:	cld    
  404e4a:	int    0xdd
  404e4c:	fild   WORD PTR ds:0xfcc282fd
  404e52:	dec    edi
  404e53:	clc    
  404e54:	sub    al,0x15
  404e56:	les    eax,FWORD PTR [ebx]
  404e58:	cmc    
  404e59:	sbb    edx,esi
  404e5b:	jecxz  0x404e6e
  404e5d:	inc    esp
  404e5e:	push   es
  404e5f:	stos   BYTE PTR es:[edi],al
  404e60:	xchg   edi,eax
  404e61:	jnp    0x404e9b
  404e63:	fs or  eax,0x7b04d8dc
  404e69:	pop    eax
  404e6a:	xchg   esi,eax
  404e6b:	cmp    edi,ecx
  404e6d:	push   eax
  404e6e:	jmp    0x99e453d2
  404e73:	test   al,0x4f
  404e75:	jmp    0xa07c:0x8efa18c6
  404e7c:	wbinvd 
  404e7e:	sbb    BYTE PTR [ecx],ah
  404e80:	int3   
  404e81:	xor    al,0x80
  404e83:	cld    
  404e84:	cmp    al,0x8
  404e86:	cmp    ecx,DWORD PTR [eax]
  404e88:	jmp    0x3105:0x2bf8ec11
  404e8f:	jle    0x404ef8
  404e91:	xchg   al,al
  404e93:	jne    0x404e66
  404e95:	mov    eax,0x6534a6dc
  404e9a:	(bad)  
  404e9b:	mov    dh,0xf5
  404e9d:	loope  0x404efb
  404e9f:	xchg   ecx,eax
  404ea0:	mov    cl,0x38
  404ea2:	jae    0x404e6b
  404ea4:	mov    esp,DWORD PTR [edi-0x6d1b9a68]
  404eaa:	xor    al,bl
  404eac:	sbb    eax,0xdec2688c
  404eb1:	cwde   
  404eb2:	cdq    
  404eb3:	outs   dx,BYTE PTR ds:[esi]
  404eb4:	stc    
  404eb5:	jmp    0xf13c:0xbabf73a3
  404ebc:	add    edx,DWORD PTR [ecx-0x7c]
  404ebf:	mov    ds:0xde486450,eax
  404ec4:	mov    eax,0xa79ed212
  404ec9:	add    BYTE PTR [esi+0x39],dl
  404ecc:	repnz stos DWORD PTR es:[edi],eax
  404ece:	jg     0x404eea
  404ed0:	addr16 pop ss
  404ed2:	test   DWORD PTR [ecx-0x56ad3fcf],0xda0059f1
  404edc:	push   ebp
  404edd:	stos   BYTE PTR es:[edi],al
  404ede:	gs ret 0x331d
  404ee2:	lahf   
  404ee3:	call   0xa4a4:0x35390f80
  404eea:	xchg   DWORD PTR [edx+0x2f40c5f1],eax
  404ef0:	lock sbb esi,eax
  404ef3:	lods   eax,DWORD PTR ds:[esi]
  404ef4:	xchg   ebx,eax
  404ef5:	pop    ecx
  404ef6:	outs   dx,DWORD PTR ds:[esi]
  404ef7:	lahf   
  404ef8:	jl     0x404e7a
  404efa:	or     ch,ch
  404efc:	imul   ecx,DWORD PTR [esi-0x14a9cc49],0xd9a888f9
  404f06:	push   esp
  404f07:	mov    ecx,0x82f76315
  404f0c:	jge    0x404f7c
  404f0e:	sbb    eax,0x8ef68192
  404f13:	dec    ebx
  404f14:	popa   
  404f15:	mov    cl,0x6d
  404f17:	std    
  404f18:	lods   al,BYTE PTR ds:[esi]
  404f19:	mov    edi,DWORD PTR [ecx+ecx*4+0x2c]
  404f1d:	jmp    DWORD PTR [ebp+edi*2+0x123eff68]
  404f24:	mov    bl,0x93
  404f26:	aad    0x29
  404f28:	(bad)  
  404f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f2a:	mov    ecx,0xc05d8e73
  404f2f:	aam    0x11
  404f31:	mov    ah,0x2c
  404f33:	data16 loop 0x404fab
  404f36:	adc    BYTE PTR [ecx-0x482c8ba7],0x5d
  404f3d:	(bad)  
  404f3e:	test   DWORD PTR [ebp-0x2a8b6e1c],edx
  404f44:	adc    ah,BYTE PTR [edi]
  404f46:	mov    al,ds:0x8884fe12
  404f4b:	pop    ecx
  404f4c:	sbb    BYTE PTR [esi-0x1f],al
  404f4f:	stos   BYTE PTR es:[edi],al
  404f50:	cs mov ah,0xf5
  404f53:	fidiv  DWORD PTR [ebx]
  404f55:	sbb    edx,DWORD PTR [eax+0xf49fa79]
  404f5b:	push   ecx
  404f5c:	or     DWORD PTR [ecx],edi
  404f5e:	jp     0x404f25
  404f60:	jp     0x404f09
  404f62:	push   ss
  404f63:	adc    cl,ch
  404f65:	ret    0x12a4
  404f68:	fsub   DWORD PTR ds:0x202f4174
  404f6e:	(bad)  
  404f70:	pop    edx
  404f71:	adc    al,0x4c
  404f73:	push   ecx
  404f74:	inc    edi
  404f75:	aam    0xb4
  404f77:	(bad)  
  404f78:	push   ebx
  404f79:	pop    es
  404f7a:	ret    0x790b
  404f7d:	(bad)  [ebp-0x5c]
  404f80:	cld    
  404f81:	mov    edx,0x60ecbf77
  404f86:	ret    
  404f87:	sub    ch,BYTE PTR [esp+ecx*2]
  404f8a:	sbb    bl,dl
  404f8c:	adc    BYTE PTR [ebp+0x46888ddc],ch
  404f92:	int    0xee
  404f94:	mov    ebp,DWORD PTR [ecx+0x74f19dd1]
  404f9a:	push   0x6b3aeac6
  404f9f:	mov    dl,0xe3
  404fa1:	imul   ebx,DWORD PTR [ecx*4+0x2d6719c3],0x597cadf3
  404fac:	fsubr  st,st(7)
  404fae:	inc    edi
  404faf:	imul   ebx,DWORD PTR [edi+0x11],0x4a
  404fb3:	xchg   ebx,eax
  404fb4:	mov    dl,BYTE PTR [ecx+0x27]
  404fb7:	xor    ebx,eax
  404fb9:	sub    al,al
  404fbb:	scas   eax,DWORD PTR es:[edi]
  404fbc:	or     bl,dl
  404fbe:	jns    0x40500d
  404fc0:	and    bl,BYTE PTR [ecx]
  404fc2:	pop    esi
  404fc3:	pop    ebp
  404fc4:	imul   ebx,ecx,0x751ef837
  404fca:	pop    eax
  404fcb:	jae    0x404f73
  404fcd:	int3   
  404fce:	stos   DWORD PTR es:[edi],eax
  404fcf:	pop    esp
  404fd0:	and    edx,DWORD PTR [ecx]
  404fd2:	scas   al,BYTE PTR es:[edi]
  404fd3:	jns    0x40501f
  404fd5:	in     al,0x5f
  404fd7:	mov    edi,0x2e0d4b86
  404fdc:	or     BYTE PTR [eax+eax*1],bl
  404fdf:	inc    ebp
  404fe0:	sbb    al,ch
  404fe2:	push   edx
  404fe3:	xchg   dl,dh
  404fe5:	dec    ecx
  404fe6:	or     dl,BYTE PTR [edi+0x2b0bd055]
  404fec:	cmp    eax,0xf122a2a9
  404ff1:	pop    es
  404ff2:	sti    
  404ff3:	ja     0x405061
  404ff5:	adc    al,0x5a
  404ff7:	daa    
  404ff8:	rol    BYTE PTR [eax+ecx*4+0x8],0xe8
  404ffd:	inc    ebx
  404ffe:	sti    
  404fff:	int3   
  405000:	push   ebx
  405001:	mov    ebp,0x76e75c30
  405006:	and    BYTE PTR [ebx],dl
  405008:	repnz daa 
  40500a:	lea    edx,[esp+edi*1-0x7c]
  40500e:	inc    edx
  40500f:	and    ebp,DWORD PTR [ebx+edx*2]
  405012:	icebp  
  405013:	sub    dh,bh
  405015:	dec    edx
  405016:	pop    ds
  405017:	dec    ecx
  405018:	jg     0x404fd6
  40501a:	psubq  mm7,mm4
  40501d:	xchg   esp,eax
  40501e:	aaa    
  40501f:	sub    ch,BYTE PTR [ebp-0x68055bba]
  405025:	dec    ebx
  405026:	sub    al,0x5
  405028:	adc    al,BYTE PTR [ebp+0x48fc0d88]
  40502e:	pop    DWORD PTR ds:0x8c630565
  405034:	push   es
  405035:	fs mov esp,ecx
  405038:	mov    edx,0x56af46d1
  40503d:	das    
  40503e:	jns    0x40500a
  405040:	dec    esi
  405041:	or     eax,0xbb4555f2
  405046:	inc    edx
  405047:	pop    es
  405048:	dec    DWORD PTR [ebx+0x1ae49f4c]
  40504e:	mov    ecx,0xaece6994
  405054:	dec    ebx
  405055:	shr    DWORD PTR [esi],cl
  405057:	sub    eax,0x4194f478
  40505c:	repz xchg ebp,edx
  40505f:	mov    ch,0x83
  405061:	pop    ds
  405062:	mov    ebp,0x16452d92
  405067:	mov    ebx,0x32954039
  40506c:	cdq    
  40506d:	clc    
  40506e:	daa    
  40506f:	sub    edi,DWORD PTR [ecx]
  405071:	sub    dh,BYTE PTR [edi]
  405073:	in     al,0x6c
  405075:	scas   al,BYTE PTR es:[edi]
  405076:	ret    0xee9f
  405079:	push   es
  40507a:	inc    esi
  40507b:	dec    esi
  40507c:	mov    esi,0x8f37a943
  405081:	sub    eax,0x32a2e127
  405086:	retf   0x3a4e
  405089:	or     DWORD PTR [esi+0xf8ac1ec],edi
  40508f:	ret    
  405090:	clc    
  405091:	enter  0xcf59,0xe7
  405095:	leave  
  405096:	mov    edx,0x3e07de08
  40509b:	mov    ebp,0x81645c7d
  4050a0:	inc    ebp
  4050a1:	inc    edx
  4050a2:	imul   ebp,DWORD PTR [edi],0xffffffa8
  4050a5:	loop   0x4050f6
  4050a7:	call   0xae22:0x35c8b4ca
  4050ae:	retf   
  4050af:	sar    DWORD PTR [ebp+0x17ca6966],cl
  4050b5:	arpl   WORD PTR [edi+esi*1-0x370c78ee],ax
  4050bc:	loopne 0x405064
  4050be:	aam    0xdd
  4050c0:	and    al,BYTE PTR [eax-0x33]
  4050c3:	xlat   BYTE PTR ds:[ebx]
  4050c4:	sub    eax,0xd9819c12
  4050c9:	mov    ds:0x77d3b711,eax
  4050ce:	fs dec ecx
  4050d0:	rol    BYTE PTR [esi],0x4e
  4050d3:	cli    
  4050d4:	loopne 0x4050fc
  4050d6:	cwde   
  4050d7:	mov    ebp,0x8641ce38
  4050dc:	adc    DWORD PTR [bp+si-0x5a],esi
  4050e0:	daa    
  4050e1:	in     al,dx
  4050e2:	xchg   BYTE PTR [ecx+0x53a281b6],ch
  4050e8:	jne    0x4050bb
  4050ea:	add    al,0xa8
  4050ec:	les    ecx,FWORD PTR ds:0xdcf90f2
  4050f2:	mov    dh,0xea
  4050f4:	add    eax,0xa2c79ef
  4050f9:	or     al,0x9c
  4050fb:	xchg   ebp,eax
  4050fc:	sbb    BYTE PTR [eax+0x21],al
  4050ff:	push   0x2788289a
  405104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405105:	mov    ebp,DWORD PTR [edx-0x6847af52]
  40510b:	xchg   ecx,eax
  40510c:	pop    es
  40510d:	xor    edi,ecx
  40510f:	adc    edi,esp
  405111:	(bad)
  405114:	sub    dh,BYTE PTR [eax]
  405116:	mov    esi,0xa6bae10a
  40511b:	aaa    
  40511c:	dec    ecx
  40511d:	leave  
  40511e:	cdq    
  40511f:	inc    ebx
  405120:	out    0xad,eax
  405122:	push   ds
  405123:	sar    BYTE PTR [edx-0x619bd5a],1
  405129:	rcr    BYTE PTR [esi-0x12],1
  40512c:	(bad)  
  40512d:	retf   0x1500
  405130:	xchg   ecx,eax
  405131:	call   0xe42c362a
  405136:	call   0x97de:0x7e3530d7
  40513d:	lods   al,BYTE PTR ds:[esi]
  40513e:	out    dx,eax
  40513f:	cmp    BYTE PTR [esi],al
  405141:	inc    ebx
  405142:	mov    DWORD PTR [ebx-0x570180c],0xc0be6389
  40514c:	xchg   ebp,eax
  40514d:	dec    esp
  40514e:	dec    ebx
  40514f:	mov    WORD PTR [eax],?
  405151:	lahf   
  405152:	dec    edi
  405153:	adc    BYTE PTR [edi+ecx*8],al
  405156:	into   
  405157:	call   0xb8e4:0x775d679f
  40515e:	push   ebx
  40515f:	scas   eax,DWORD PTR es:[edi]
  405160:	xor    DWORD PTR [edx-0x5ed4dd88],ebx
  405166:	pop    es
  405167:	sbb    BYTE PTR [eax],0x2e
  40516a:	mov    dh,0xf8
  40516c:	adc    eax,0x8f2062a6
  405171:	(bad)  
  405172:	jbe    0x405110
  405174:	push   cs
  405175:	push   cs
  405176:	sbb    DWORD PTR [edx],esi
  405178:	imul   edx,DWORD PTR [esi+edi*8-0x7885fa36],0x11
  405180:	das    
  405181:	in     al,0xda
  405183:	cmp    BYTE PTR [ecx-0x73c1a338],ah
  405189:	popf   
  40518a:	cmp    esi,esi
  40518c:	mov    edi,0x55437490
  405191:	data16 fwait
  405193:	adc    eax,0xbc829c4
  405198:	cmc    
  405199:	or     bh,BYTE PTR [edi-0x3c5e09eb]
  40519f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051a0:	mov    ?,WORD PTR [eax+0x40]
  4051a3:	fcom   QWORD PTR [ebx+0x201f06bc]
  4051a9:	mov    dl,0x58
  4051ab:	dec    ecx
  4051ac:	jmp    0xb1fbfda2
  4051b1:	hlt    
  4051b2:	add    eax,0xe12f370f
  4051b7:	fisub  DWORD PTR [eax+edi*1+0x48]
  4051bb:	cwde   
  4051bc:	mov    ?,WORD PTR [ebp-0x64aed67b]
  4051c2:	push   ss
  4051c3:	dec    ecx
  4051c4:	iret   
  4051c5:	xchg   ebx,eax
  4051c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051c7:	dec    esi
  4051c8:	retf   
  4051c9:	pop    ebp
  4051ca:	sbb    BYTE PTR [ebx+0x6c869ace],bh
  4051d0:	sub    eax,0x81c60f5f
  4051d5:	mov    edi,0xade61dfe
  4051da:	jnp    0x40524e
  4051dc:	and    ecx,esi
  4051de:	daa    
  4051df:	mov    ds:0x9e2c1510,eax
  4051e4:	(bad)  
  4051e5:	loop   0x405181
  4051e7:	or     al,0x8
  4051e9:	fdivp  st(7),st
  4051eb:	popa   
  4051ec:	xor    eax,0x3de75d92
  4051f1:	add    DWORD PTR [ebp+0x5b8732ee],edi
  4051f7:	xor    BYTE PTR [ebx],cl
  4051f9:	mov    esp,0x6da32538
  4051fe:	inc    esi
  4051ff:	sub    DWORD PTR [ecx],eax
  405201:	xchg   ebp,eax
  405202:	std    
  405203:	xor    esp,edi
  405205:	fbstp  TBYTE PTR [esi+ebx*1-0x319ba79f]
  40520c:	mov    cl,0xd7
  40520e:	xor    eax,0x5540b0a0
  405213:	enter  0xd00b,0x53
  405217:	cs test al,0x4e
  40521a:	mov    esi,0x9c4de843
  40521f:	sbb    bh,BYTE PTR ds:[esi-0x1b7b329e]
  405226:	pop    edi
  405227:	in     al,0x78
  405229:	sub    BYTE PTR ds:0xed10190e,al
  40522f:	or     eax,0xfab3a7e5
  405234:	dec    ebp
  405235:	retf   0x80f4
  405238:	push   0xfffffff0
  40523a:	mov    esp,0xd536967d
  40523f:	int3   
  405240:	add    BYTE PTR [edx-0xf4f5c0f],bl
  405246:	jns    0x40525b
  405248:	sti    
  405249:	xor    ecx,DWORD PTR [eax-0x72]
  40524c:	stc    
  40524d:	out    0xa3,al
  40524f:	fild   QWORD PTR [ebp+0xe22ea4]
  405255:	xor    dl,bh
  405257:	daa    
  405258:	or     ebx,DWORD PTR [ecx+0x54]
  40525b:	mov    esp,0x1ba96d4
  405260:	mov    DWORD PTR [edi+0x13],edx
  405263:	repnz or BYTE PTR [edi],dh
  405266:	adc    DWORD PTR [edi-0x312940fd],ecx
  40526c:	mov    ah,BYTE PTR ds:0xa72bf5f3
  405272:	jecxz  0x405216
  405274:	sbb    ch,dh
  405276:	jae    0x405299
  405278:	div    DWORD PTR [eax-0x74]
  40527b:	add    esp,DWORD PTR [eax]
  40527d:	fs int 0x49
  405280:	cdq    
  405281:	aaa    
  405282:	outs   dx,DWORD PTR ds:[esi]
  405283:	clc    
  405284:	jmp    0xef25:0xcf1aa4b1
  40528b:	call   0xad28:0x579f4f63
  405292:	in     eax,0x2e
  405294:	jo     0x40521a
  405296:	jb     0x4052e2
  405298:	dec    ebx
  405299:	ror    BYTE PTR [ecx-0x70],0x9e
  40529d:	loopne 0x405222
  40529f:	mov    ch,0x1d
  4052a1:	pop    es
  4052a2:	out    dx,al
  4052a3:	push   eax
  4052a4:	mov    ebx,0x72190cca
  4052a9:	call   0xafa1:0xd8f1bf90
  4052b0:	xchg   di,ax
  4052b2:	fisubr DWORD PTR [ebx]
  4052b4:	mov    al,ds:0x837cbc5
  4052b9:	mov    ecx,0x6822b55a
  4052be:	add    ecx,DWORD PTR [ebx]
  4052c0:	vmread DWORD PTR ds:0xe01a5ec8,eax
  4052c7:	adc    cl,bl
  4052c9:	(bad)  
  4052ca:	pusha  
  4052cb:	inc    esp
  4052cc:	push   edx
  4052cd:	pop    ds
  4052ce:	dec    ebp
  4052cf:	aas    
  4052d0:	fxch   st(3)
  4052d2:	clc    
  4052d3:	(bad)  
  4052d4:	(bad)  
  4052d5:	mov    esp,0xa2780810
  4052da:	jge    0x405277
  4052dc:	loop   0x405332
  4052de:	mov    DWORD PTR [edi+0x7e],esp
  4052e1:	mov    bl,0x35
  4052e3:	mov    dl,0x97
  4052e5:	pop    ds
  4052e6:	(bad)  
  4052e7:	into   
  4052e8:	or     ebp,ecx
  4052ea:	cs ins DWORD PTR es:[edi],dx
  4052ec:	sub    eax,0xab6ea7a5
  4052f1:	fwait
  4052f2:	out    0x7b,eax
  4052f4:	adc    ch,BYTE PTR [edi-0x68ebc81]
  4052fa:	outs   dx,DWORD PTR ds:[esi]
  4052fb:	mov    eax,0x8a282be1
  405300:	mov    esi,0x95502e33
  405305:	sti    
  405306:	mov    bl,0x7
  405308:	inc    esi
  405309:	jno    0x40531b
  40530b:	sub    esp,DWORD PTR [ebp+eiz*4-0x71509401]
  405312:	xor    al,0x20
  405314:	mov    eax,0xdafba7a
  405319:	gs mov ecx,0x67e22dd6
  40531f:	adc    DWORD PTR [eax+0x1b97c8cb],esp
  405325:	dec    edi
  405326:	(bad)  
  405327:	mov    ds:0x8aa2d9e2,al
  40532c:	in     eax,dx
  40532d:	mov    ch,0xf3
  40532f:	or     eax,0xff7313ad
  405334:	imul   ebp,DWORD PTR [ecx+edx*1],0x3d
  405338:	adc    ch,BYTE PTR [ecx-0x1f]
  40533b:	mov    ds:0xaa622442,eax
  405340:	xlat   BYTE PTR ds:[ebx]
  405341:	pop    DWORD PTR [edx-0x54af5019]
  405347:	or     dl,bh
  405349:	addr16 inc ebx
  40534b:	loope  0x40531e
  40534d:	pushf  
  40534e:	jp     0x40538b
  405350:	(bad)
  405353:	xchg   DWORD PTR [esi-0x7c],ebx
  405356:	ret    
  405357:	shr    DWORD PTR [edi-0x25055976],cl
  40535d:	(bad)  
  40535e:	xor    al,0x90
  405360:	or     dh,BYTE PTR [edi-0x46048f04]
  405366:	xchg   esi,eax
  405367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405368:	shl    DWORD PTR [ecx-0x3b],0x70
  40536c:	leave  
  40536d:	je     0x4053b8
  40536f:	adc    esp,DWORD PTR [edx-0x21]
  405372:	xchg   BYTE PTR [edx+edx*2-0x5660444e],dl
  405379:	icebp  
  40537a:	mov    bh,BYTE PTR [edx+ecx*8+0x51]
  40537e:	adc    eax,0x4900a930
  405383:	dec    eax
  405384:	xlat   BYTE PTR ds:[ebx]
  405385:	clc    
  405386:	popa   
  405387:	cmc    
  405388:	jecxz  0x4053b3
  40538a:	fistp  DWORD PTR gs:[ecx]
  40538d:	mov    ah,0xee
  40538f:	popa   
  405390:	out    0xc4,eax
  405392:	repz and eax,0x17f846d8
  405398:	cmp    al,0xe7
  40539a:	push   edi
  40539b:	adc    DWORD PTR [eax],0xad86cf77
  4053a1:	dec    ecx
  4053a2:	setns  dl
  4053a5:	xor    eax,ecx
  4053a7:	nop
  4053a8:	in     al,dx
  4053a9:	add    eax,0x7c0cca57
  4053ae:	je     0x40537b
  4053b0:	pop    es
  4053b1:	and    edx,esp
  4053b3:	mov    ds:0x82eb93d2,al
  4053b8:	cmp    BYTE PTR [edx],dl
  4053ba:	cmp    BYTE PTR [ecx],bh
  4053bc:	fadd   DWORD PTR [ecx+0x68]
  4053bf:	cmp    esi,esp
  4053c1:	xor    bl,BYTE PTR [ebx-0x53ebae49]
  4053c7:	jp     0x4053d4
  4053c9:	call   0x8dc5:0xd42be860
  4053d0:	add    DWORD PTR [ecx+0x31],ecx
  4053d3:	test   al,0x84
  4053d5:	adc    eax,0x1ca298d9
  4053da:	sbb    bh,0x8
  4053dd:	cmp    BYTE PTR [ecx+0x48805b7d],dh
  4053e3:	int    0x4a
  4053e5:	repnz inc ecx
  4053e7:	xor    dl,dl
  4053e9:	dec    esi
  4053ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053eb:	or     BYTE PTR [edx+0x3cae6950],al
  4053f1:	jae    0x4053de
  4053f3:	and    BYTE PTR [eax+edi*4+0x4e],ch
  4053f7:	cmp    esp,esp
  4053f9:	frstor [edi+ebp*4]
  4053fc:	call   0xba5a13
  405401:	bound  ebx,QWORD PTR [edi]
  405403:	rcl    BYTE PTR [edx+0x4f],0xa0
  405407:	cmp    DWORD PTR [edi-0x58],esi
  40540a:	xchg   edi,eax
  40540b:	dec    ecx
  40540c:	inc    al
  40540e:	sub    cl,al
  405410:	ins    DWORD PTR es:[edi],dx
  405411:	add    al,0x6f
  405413:	and    esp,DWORD PTR [edx]
  405415:	retf   0xdea9
  405418:	retf   0x5f27
  40541b:	dec    edi
  40541c:	mov    esi,cs
  40541e:	hlt    
  40541f:	add    al,0x96
  405421:	mov    bh,0x9e
  405423:	aam    0xc2
  405425:	jg     0x405485
  405427:	imul   ecx,edi,0x9733eded
  40542d:	or     eax,0x5dcdf9a5
  405432:	xor    BYTE PTR ds:0xa3782c94,ch
  405438:	adc    ebx,DWORD PTR [ebp+0x2a]
  40543b:	call   0xd95422f3
  405440:	mov    ss:0x9c255d64,eax
  405446:	adc    ah,BYTE PTR [eax]
  405448:	cli    
  405449:	and    eax,DWORD PTR [edx*1-0x3d1e20c4]
  405450:	dec    ebp
  405451:	stc    
  405452:	fisub  DWORD PTR [eax-0x68a6d7bb]
  405458:	aas    
  405459:	out    dx,eax
  40545a:	adc    eax,0x2f63face
  40545f:	xchg   esi,eax
  405460:	daa    
  405461:	rcr    ebp,0xd9
  405464:	jmp    0x405478
  405466:	push   ds
  405467:	and    DWORD PTR [eax+0x4ee51147],edx
  40546d:	dec    ecx
  40546e:	call   0x47de089a
  405473:	call   0x6e17:0x27770262
  40547a:	xchg   esp,eax
  40547b:	data16 stc 
  40547d:	mov    bh,0x8e
  40547f:	sti    
  405480:	popf   
  405481:	and    DWORD PTR [ebx-0x447c392d],esi
  405487:	jl     0x4054e3
  405489:	in     al,0x69
  40548b:	lahf   
  40548c:	es out dx,al
  40548e:	adc    al,0xd2
  405490:	xlat   BYTE PTR gs:[ebx]
  405492:	mov    edi,0x24b92cb7
  405497:	xor    BYTE PTR [esi],bl
  405499:	lahf   
  40549a:	shr    DWORD PTR [ebp+eax*1-0xf],cl
  40549e:	les    edi,FWORD PTR [edi+0x7e]
  4054a1:	stos   BYTE PTR es:[edi],al
  4054a2:	or     al,0xf
  4054a4:	lds    ecx,FWORD PTR [ecx+eax*8+0x10]
  4054a8:	neg    bl
  4054aa:	pop    eax
  4054ab:	pop    esp
  4054ac:	stos   BYTE PTR es:[edi],al
  4054ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054ae:	stos   BYTE PTR es:[edi],al
  4054af:	outs   dx,BYTE PTR ds:[esi]
  4054b0:	cmc    
  4054b1:	int3   
  4054b2:	repz sbb dh,ah
  4054b5:	sti    
  4054b6:	nop
  4054b7:	mov    esp,0xfd6c2393
  4054bc:	mov    ebp,0x3a023b61
  4054c1:	mov    bh,0x5f
  4054c3:	lods   eax,DWORD PTR ds:[esi]
  4054c4:	mov    dh,0x25
  4054c7:	xchg   dl,bl
  4054c9:	dec    edx
  4054ca:	push   0xb01f9c6
  4054cf:	loope  0x405484
  4054d1:	mov    edx,0xa29d1d5
  4054d6:	cmp    BYTE PTR [ecx+0x4a],0xd9
  4054da:	adc    ebp,DWORD PTR [esi+eax*8]
  4054dd:	repz (bad) 
  4054df:	xchg   ecx,eax
  4054e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054e1:	xor    ebp,DWORD PTR [eax-0x477168e4]
  4054e7:	(bad)  
  4054e9:	popf   
  4054ea:	maskmovq mm5,(bad)
  4054eb:	imul   DWORD PTR [eax+0x5d95a7b8]
  4054f1:	mov    dl,0x87
  4054f3:	shl    BYTE PTR [ebp+0x3537b22f],1
  4054f9:	ja     0x405540
  4054fb:	data16 jbe 0x4054b8
  4054fe:	mov    DWORD PTR ds:0xb14120d0,esp
  405504:	cdq    
  405505:	mov    bl,0x65
  405507:	sbb    DWORD PTR [edx-0x63],ebp
  40550a:	mov    eax,ds:0xbbfce95
  40550f:	rcl    BYTE PTR [eax],0xf1
  405512:	lods   eax,DWORD PTR ds:[esi]
  405513:	xor    BYTE PTR [esi+0x75],ah
  405516:	push   ecx
  405517:	jle    0x4054c0
  405519:	inc    ebp
  40551a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40551b:	mov    ah,0x81
  40551d:	cmp    ah,cl
  40551f:	xchg   esp,eax
  405520:	adc    esp,0xffffffb9
  405523:	jnp    0x405541
  405525:	daa    
  405526:	cli    
  405527:	lock ret 0x616e
  40552b:	add    esi,DWORD PTR [ecx+0x6baed5be]
  405531:	dec    esi
  405532:	out    dx,al
  405533:	mov    al,0xff
  405535:	in     al,0xb2
  405537:	mov    edx,0x5eb64cee
  40553c:	inc    edi
  40553d:	aaa    
  40553e:	mov    al,0xbb
  405540:	out    0x1c,al
  405542:	outs   dx,BYTE PTR ds:[esi]
  405543:	test   DWORD PTR [edi+edi*8],esi
  405546:	sbb    BYTE PTR [esi],al
  405548:	push   ecx
  405549:	jecxz  0x405528
  40554b:	arpl   WORD PTR [edi],si
  40554d:	iret   
  40554e:	add    DWORD PTR [eax],eax
  405550:	ins    DWORD PTR es:[edi],dx
  405551:	stos   BYTE PTR es:[edi],al
  405552:	gs ins DWORD PTR es:[edi],dx
  405554:	std    
  405555:	je     0x4054e9
  405557:	daa    
  405558:	call   0x3895a874
  40555d:	mov    bl,0x35
  40555f:	cli    
  405560:	jg     0x40555d
  405562:	loope  0x40557e
  405564:	lock call 0x401f:0x46cc374d
  40556c:	dec    eax
  40556d:	fimul  DWORD PTR [edx-0x6ebc6495]
  405573:	mov    edx,0xd7029f96
  405578:	push   0x4a
  40557a:	scas   al,BYTE PTR es:[edi]
  40557b:	sbb    bl,BYTE PTR [ebp+0x41d7ecca]
  405581:	xchg   BYTE PTR [esi+0x20],bh
  405584:	mov    ebx,0xf6f91d6a
  405589:	sbb    al,0x68
  40558b:	sub    eax,ebp
  40558d:	sub    DWORD PTR [ebp+0x14],ebp
  405590:	xchg   esp,eax
  405591:	pop    ecx
  405592:	outs   dx,DWORD PTR ds:[esi]
  405593:	stc    
  405594:	mov    ebx,0xfac8b439
  405599:	dec    ebp
  40559a:	lea    esi,[ebp-0x60]
  40559d:	jle    0x4055c7
  40559f:	mov    gs,WORD PTR [eax+0x6f600aee]
  4055a5:	push   es
  4055a6:	jne    0x4055a7
  4055a8:	ret    0x3cab
  4055ab:	inc    ebp
  4055ac:	xor    esi,DWORD PTR [ecx]
  4055ae:	push   ebx
  4055af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055b0:	(bad)  
  4055b1:	mov    ch,0x9
  4055b3:	pop    ebp
  4055b4:	leave  
  4055b5:	jne    0x4055a0
  4055b7:	cs loope 0x405620
  4055ba:	fist   WORD PTR ds:[edi]
  4055bd:	out    0x5b,eax
  4055bf:	add    ch,bl
  4055c1:	sbb    ebx,eax
  4055c3:	imul   edx,ecx,0xffffffd2
  4055c6:	inc    ebx
  4055c7:	repnz push edi
  4055c9:	aad    0xd9
  4055cb:	or     eax,0xfe99f0d9
  4055d0:	pop    edi
  4055d1:	xchg   ebp,eax
  4055d2:	fidivr DWORD PTR [eax]
  4055d4:	inc    esi
  4055d5:	and    BYTE PTR [ecx-0xe89df0e],bh
  4055db:	sahf   
  4055dc:	xor    BYTE PTR [edi],0xc5
  4055df:	in     eax,0x7f
  4055e1:	popf   
  4055e2:	adc    al,0x71
  4055e4:	(bad)  [ebp+0x4c]
  4055e7:	cmp    cl,BYTE PTR [eax-0x5]
  4055ea:	fwait
  4055eb:	and    dh,BYTE PTR [eax]
  4055ed:	lock dec eax
  4055ef:	jge    0x405580
  4055f1:	add    eax,0xeff7dc30
  4055f6:	cmp    BYTE PTR ds:0x6a7b0ced,ah
  4055fc:	mov    ds:0xd81bf028,eax
  405601:	out    0x7e,al
  405603:	out    0x17,al
  405605:	add    BYTE PTR [edi],bh
  405607:	inc    ebx
  405608:	push   cs
  405609:	add    dh,BYTE PTR [esi]
  40560b:	inc    ebx
  40560c:	sbb    esp,edx
  40560e:	in     al,dx
  40560f:	push   ds
  405610:	mov    bl,BYTE PTR [esi+0xc8b390c]
  405616:	dec    ecx
  405617:	xchg   esi,eax
  405618:	loop   0x4055e6
  40561a:	test   eax,ecx
  40561c:	stos   BYTE PTR es:[edi],al
  40561d:	ins    DWORD PTR es:[edi],dx
  40561e:	sub    esp,DWORD PTR [ecx]
  405620:	(bad)  
  405621:	shr    ebp,0x67
  405624:	(bad)  
  405625:	xchg   esi,eax
  405626:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405627:	sub    ebx,DWORD PTR [ecx+0x1f]
  40562a:	neg    BYTE PTR [eax+0x73b2cc04]
  405630:	in     al,dx
  405631:	test   BYTE PTR [ebx+0x18],al
  405634:	aas    
  405635:	xchg   ebp,eax
  405636:	pop    eax
  405637:	imul   esp,DWORD PTR [ebp+esi*1+0x5e],0xfffffffd
  40563c:	push   ebp
  40563d:	sub    DWORD PTR [edi],esp
  40563f:	jbe    0x4055e9
  405641:	or     edx,eax
  405643:	dec    edx
  405644:	pop    ecx
  405645:	cmp    al,ah
  405647:	fstp   DWORD PTR [ebx]
  405649:	jbe    0x4055fa
  40564b:	outs   dx,DWORD PTR ds:[esi]
  40564c:	ja     0x4056bb
  40564e:	sbb    al,BYTE PTR [edx+0xbd0db35]
  405654:	pop    edx
  405655:	sbb    al,0x9e
  405657:	xlat   BYTE PTR ds:[ebx]
  405658:	sti    
  405659:	int3   
  40565a:	jge    0x405620
  40565c:	sbb    DWORD PTR [edx-0x467247a3],esp
  405662:	ficom  WORD PTR [edx-0xb]
  405665:	dec    edx
  405666:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405667:	mov    dl,BYTE PTR [ecx+0x133de4bb]
  40566d:	(bad)  
  40566e:	jnp    0x4056d2
  405670:	not    ebp
  405672:	xor    bh,BYTE PTR [edi]
  405674:	jnp    0x405695
  405676:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  405678:	xchg   esi,eax
  405679:	call   0x78ce:0x7be72099
  405680:	inc    esp
  405681:	inc    esp
  405682:	jno    0x40562e
  405684:	cli    
  405685:	call   0x5cbf300f
  40568a:	xlat   BYTE PTR ds:[ebx]
  40568b:	popa   
  40568c:	push   esp
  40568d:	js     0x40563e
  40568f:	push   ecx
  405690:	sub    eax,0x3703043a
  405695:	lock imul edi,DWORD PTR [ebx+0x65],0xfffffffb
  40569a:	ret    0x3e82
  40569d:	push   ss
  40569e:	pop    ecx
  40569f:	push   edx
  4056a0:	ins    DWORD PTR es:[edi],dx
  4056a1:	gs push eax
  4056a3:	ds inc edx
  4056a5:	mov    esi,0x8e4ba78b
  4056aa:	je     0x40567e
  4056ac:	jne    0x405678
  4056ae:	cmp    eax,0xe23b831
  4056b3:	or     DWORD PTR [ecx+0x7e3ddb2f],esp
  4056b9:	sti    
  4056ba:	pop    eax
  4056bb:	xlat   BYTE PTR ds:[ebx]
  4056bc:	data16 mov bl,0x5c
  4056bf:	push   edi
  4056c0:	add    ecx,ebx
  4056c2:	mov    esp,DWORD PTR [ebx+edx*8+0x216c62f3]
  4056c9:	or     esp,esi
  4056cb:	fwait
  4056cc:	dec    DWORD PTR [edi+0x6d]
  4056cf:	repnz mov ds:0xee2e2438,al
  4056d5:	add    eax,0xc9ba91fb
  4056da:	cmp    esi,ecx
  4056dc:	jo     0x405722
  4056de:	add    DWORD PTR es:[eax-0x11783098],ebx
  4056e5:	dec    esp
  4056e6:	push   0xffffffc9
  4056e8:	in     eax,0xbe
  4056ea:	mov    eax,0x803d4151
  4056ef:	dec    ebx
  4056f0:	in     eax,0x2d
  4056f2:	jmp    0x405678
  4056f4:	jbe    0x405741
  4056f6:	sub    edx,DWORD PTR [ecx]
  4056f8:	lea    edx,[edx]
  4056fa:	jae    0x4056e6
  4056fc:	jb     0x405731
  4056fe:	es out dx,al
  405700:	pop    edx
  405701:	jecxz  0x4056f4
  405703:	(bad)  
  405704:	hlt    
  405705:	(bad)
  405708:	fidiv  WORD PTR [ebx]
  40570a:	jne    0x4056ba
  40570c:	clc    
  40570d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40570e:	sbb    DWORD PTR [ecx-0x23],eax
  405711:	das    
  405712:	adc    eax,0x6b8119b3
  405717:	mov    bl,0xac
  405719:	imul   eax,DWORD PTR [esi+0x28b94560],0x62
  405720:	add    DWORD PTR [ecx],edx
  405722:	adc    DWORD PTR [ebp+0x69],0xffffffc7
  405726:	out    dx,al
  405727:	mov    bl,0x2f
  405729:	adc    DWORD PTR ds:0x6d4b0c2,0x3e
  405730:	pop    es
  405731:	outs   dx,BYTE PTR ds:[esi]
  405732:	das    
  405733:	mov    ch,0x5d
  405735:	add    BYTE PTR [esp+eax*8-0x25487ea8],al
  40573c:	xor    BYTE PTR [ebp-0x49],al
  40573f:	and    al,0x6b
  405741:	sbb    al,0xf9
  405743:	pop    esi
  405744:	pop    ecx
  405745:	sub    al,0x58
  405747:	xlat   BYTE PTR ds:[ebx]
  405748:	add    bh,BYTE PTR [ebp+0x11]
  40574b:	sbb    bl,bh
  40574d:	(bad)  
  40574e:	and    al,0x8
  405750:	loope  0x405787
  405752:	push   edi
  405753:	ss mov ebp,0xc7339fc5
  405759:	pop    ss
  40575a:	inc    ecx
  40575b:	mov    edi,0xfa99ffa0
  405760:	jae    0x405734
  405762:	frstor [eax]
  405764:	lahf   
  405765:	mov    WORD PTR [edi-0xa],?
  405768:	xchg   ebp,eax
  405769:	mov    edx,0x57ba095c
  40576e:	dec    ebx
  40576f:	div    edx
  405771:	sub    edi,0x1c
  405774:	in     eax,0x9b
  405776:	push   ebp
  405777:	cmp    BYTE PTR [ebp+0x7c39408b],dh
  40577d:	test   dl,dh
  40577f:	xor    al,al
  405781:	pop    esi
  405782:	sub    BYTE PTR [ebx+ebp*8+0xefe56e4],dh
  405789:	jne    0x405774
  40578b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40578c:	sub    eax,0xe58d1563
  405791:	inc    esp
  405792:	inc    edi
  405793:	mov    edi,0x9df28356
  405798:	jae    0x4057ea
  40579a:	xchg   ecx,eax
  40579b:	dec    edx
  40579c:	pushf  
  40579d:	sub    BYTE PTR [ebp-0x476d7e3d],bh
  4057a3:	push   esi
  4057a4:	jmp    0x8be53581
  4057a9:	xchg   edi,eax
  4057aa:	xor    esp,DWORD PTR [ebx-0x28]
  4057ad:	mov    esi,0xfc194d61
  4057b2:	push   ebp
  4057b3:	loopne 0x40579b
  4057b5:	jmp    0x85bb92f9
  4057ba:	adc    ch,ah
  4057bc:	pushf  
  4057bd:	pop    ebx
  4057be:	pushf  
  4057bf:	adc    al,0xcd
  4057c1:	pop    esi
  4057c2:	pop    ss
  4057c3:	inc    esp
  4057c4:	push   es
  4057c5:	or     eax,0xfdb5a337
  4057ca:	fistp  QWORD PTR [esi+0x32b6c1ff]
  4057d0:	dec    ecx
  4057d1:	in     eax,0xe2
  4057d3:	scas   al,BYTE PTR es:[edi]
  4057d4:	pop    edx
  4057d5:	stos   BYTE PTR es:[edi],al
  4057d6:	xor    DWORD PTR [ebx],0x6b2913ca
  4057dc:	mov    eax,ds:0x4385703e
  4057e1:	paddw  mm0,QWORD PTR [ecx-0x3d1fea1]
  4057e8:	xor    edi,ebp
  4057ea:	fistp  WORD PTR [edi]
  4057ec:	leave  
  4057ed:	jmp    0x4057ca
  4057ef:	test   DWORD PTR [eax+eax*2+0x4f],esi
  4057f3:	stos   BYTE PTR es:[edi],al
  4057f4:	dec    ebx
  4057f5:	mov    al,BYTE PTR [edi+0x3e]
  4057f8:	xor    dh,BYTE PTR [ebx+0x4a]
  4057fb:	fcomp  DWORD PTR [edi+edx*2-0x5c]
  4057ff:	add    DWORD PTR [ecx],esp
  405801:	arpl   WORD PTR [eax+0x73],dx
  405804:	or     BYTE PTR [ebp+0x32],ah
  405807:	inc    esi
  405808:	(bad)  
  405809:	shr    ch,1
  40580b:	cmp    bl,BYTE PTR [ebx+0x29256882]
  405811:	cli    
  405812:	jmp    0xb447fa9f
  405817:	or     cl,BYTE PTR [ebx+0x30c4b2d0]
  40581d:	mov    cl,0xed
  40581f:	mov    dh,0x2d
  405821:	enter  0xb083,0x9b
  405825:	jle    0x405811
  405827:	push   edx
  405828:	xor    eax,0xa8b5b165
  40582d:	push   esi
  40582e:	scas   eax,DWORD PTR es:[edi]
  40582f:	and    eax,0xb9407ecc
  405834:	push   cs
  405835:	(bad)  
  405836:	mov    eax,0xb10c455d
  40583b:	test   eax,0xf8482fc9
  405840:	js     0x4058bf
  405842:	loope  0x40580e
  405844:	xchg   esp,eax
  405845:	or     BYTE PTR [edx],ah
  405847:	dec    ebp
  405848:	cdq    
  405849:	test   ecx,ebp
  40584b:	(bad)  
  40584c:	cli    
  40584d:	inc    ecx
  40584e:	mov    ds:0xd0a22981,al
  405853:	ds lahf 
  405855:	(bad)  
  405856:	push   ds
  405857:	xchg   edx,eax
  405858:	push   esp
  405859:	rol    BYTE PTR [esi+edx*4],cl
  40585c:	je     0x4057f7
  40585e:	ins    DWORD PTR es:[edi],dx
  40585f:	cdq    
  405860:	out    dx,al
  405861:	rol    bl,1
  405863:	sbb    DWORD PTR [esp+esi*8],0xfbacbbfc
  40586a:	dec    ecx
  40586b:	push   ebp
  40586c:	dec    edi
  40586d:	in     al,0x7d
  40586f:	xor    BYTE PTR [edi-0x5f],al
  405872:	pop    ebp
  405873:	repz jmp 0x4058bb
  405876:	sub    DWORD PTR [edx-0x55],eax
  405879:	jmp    0xd2d43e36
  40587e:	inc    esp
  40587f:	mov    esp,0xaf2c6373
  405884:	aas    
  405885:	sbb    BYTE PTR [eax+0x25c8498e],bh
  40588b:	jmp    0xeae8e97
  405890:	mov    bh,0x3
  405892:	push   ebp
  405893:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405894:	cmp    eax,DWORD PTR [ecx-0x62454042]
  40589a:	hlt    
  40589b:	cmp    dl,BYTE PTR [edi]
  40589d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40589e:	shl    BYTE PTR [edx+0x26],0x89
  4058a2:	xchg   edx,eax
  4058a3:	(bad)  
  4058a4:	aad    0xb7
  4058a6:	and    BYTE PTR [edx-0x2995c1f0],dl
  4058ac:	adc    DWORD PTR [ebp+0x538c36e7],edi
  4058b2:	push   edi
  4058b3:	es daa 
  4058b5:	mov    ecx,0xecdfe2dc
  4058ba:	inc    edi
  4058bb:	add    BYTE PTR [ebx+0x37],cl
  4058be:	xor    ebx,ebp
  4058c0:	jp     0x4058e6
  4058c2:	dec    bl
  4058c4:	xor    dl,dh
  4058c6:	sti    
  4058c7:	mov    ch,0xd1
  4058c9:	sub    eax,0x302b9fff
  4058ce:	fild   DWORD PTR [eax-0x47]
  4058d1:	push   esp
  4058d2:	call   0xfb2f:0x3bb20da2
  4058d9:	fcmovu st,st(0)
  4058db:	or     eax,0x34167d16
  4058e0:	pop    ebx
  4058e1:	mov    esp,0xb89f2c72
  4058e6:	imul   ah
  4058e8:	jbe    0x4058c7
  4058ea:	mov    dh,0x6
  4058ec:	rcr    BYTE PTR [edx],0x3b
  4058ef:	test   BYTE PTR [ebp-0x3b],al
  4058f2:	xor    cl,bl
  4058f4:	ds js  0x4058ff
  4058f7:	out    0xa1,al
  4058f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058fa:	call   0xbeac085
  4058ff:	mov    esi,0x6f36f3a7
  405904:	ins    DWORD PTR es:[edi],dx
  405905:	mov    BYTE PTR [ebx],bh
  405907:	xchg   esp,eax
  405908:	xchg   edi,eax
  405909:	add    al,0x67
  40590b:	test   BYTE PTR [ebp-0x3661544],bh
  405911:	int3   
  405912:	nop
  405913:	ret    0xf217
  405916:	dec    esi
  405917:	xchg   DWORD PTR [edi],ebx
  405919:	push   eax
  40591a:	hlt    
  40591b:	jae    0x405913
  40591d:	jp     0x405972
  40591f:	mov    esp,0x3ce30ac4
  405924:	pop    ecx
  405925:	mul    BYTE PTR [edx-0x5a]
  405928:	push   ecx
  405929:	mov    ecx,0x5c2500f6
  40592e:	cmp    bh,ah
  405930:	std    
  405931:	lea    si,[ebp-0x508e724a]
  405938:	cwde   
  405939:	push   ss
  40593a:	mov    ecx,0x49104b75
  40593f:	cmp    ch,BYTE PTR [ecx+0x510e608]
  405945:	pop    edi
  405946:	and    al,0x5b
  405948:	cmp    DWORD PTR [esi],ecx
  40594a:	add    DWORD PTR [ebx-0x35],esp
  40594d:	pop    edx
  40594e:	data16 jb 0x40598b
  405951:	pusha  
  405952:	ss lahf 
  405954:	cld    
  405955:	add    DWORD PTR [eax-0x60],edi
  405958:	stos   DWORD PTR es:[edi],eax
  405959:	jbe    0x40590d
  40595b:	inc    esp
  40595c:	div    BYTE PTR [edx+0x2c]
  40595f:	push   0xca1fdcf4
  405964:	fwait
  405965:	xor    ah,BYTE PTR [ebx+0x79]
  405968:	and    eax,0xa468c069
  40596d:	pop    es
  40596e:	inc    ebx
  40596f:	mov    ecx,0xc9b66e9
  405974:	sub    al,0xc5
  405976:	mov    BYTE PTR ds:0x98482d0e,dl
  40597c:	pop    ebx
  40597d:	mov    eax,ds:0xe1640b92
  405982:	xor    edi,DWORD PTR [eax-0x65]
  405985:	or     ebx,0x3a
  405988:	and    eax,0x6fc0ba62
  40598d:	xor    DWORD PTR [edx-0x4a],edi
  405990:	das    
  405991:	cmp    ecx,esi
  405993:	call   0x9460:0xd4d687bd
  40599a:	push   ebp
  40599b:	test   DWORD PTR [ebx-0x15],esp
  40599e:	test   edi,ecx
  4059a0:	push   cs
  4059a1:	stc    
  4059a2:	cmp    al,0xb6
  4059a4:	mov    dl,bl
  4059a6:	shl    DWORD PTR [edx+0x4f],cl
  4059a9:	jp     0x405983
  4059ab:	push   eax
  4059ac:	inc    eax
  4059ad:	mov    edx,0xcae429bb
  4059b2:	sahf   
  4059b3:	aaa    
  4059b4:	call   0x83fa:0xf2c84fca
  4059bb:	pop    ds
  4059bc:	push   ebx
  4059bd:	fisubr DWORD PTR [ecx-0x3a]
  4059c0:	xchg   edi,eax
  4059c1:	je     0x405961
  4059c3:	ss std 
  4059c5:	pop    ss
  4059c6:	jg     0x4059e1
  4059c8:	cli    
  4059c9:	dec    esi
  4059ca:	shl    DWORD PTR [esi+eiz*4],0x3a
  4059ce:	adc    ah,bh
  4059d0:	ins    DWORD PTR es:[edi],dx
  4059d1:	ja     0x405989
  4059d3:	fiadd  DWORD PTR [ebx]
  4059d5:	stos   DWORD PTR es:[edi],eax
  4059d6:	mov    ds:0xcb14ab36,al
  4059db:	dec    esi
  4059dc:	xchg   ebp,eax
  4059dd:	jl     0x405982
  4059df:	daa    
  4059e0:	loope  0x405a45
  4059e2:	data16 jne 0x405a59
  4059e5:	xchg   esi,eax
  4059e6:	push   ebp
  4059e7:	add    eax,0xb756b979
  4059ec:	xchg   ebp,eax
  4059ed:	stos   DWORD PTR es:[edi],eax
  4059ee:	sub    ebx,eax
  4059f0:	mov    cl,0xc2
  4059f2:	out    dx,al
  4059f3:	pusha  
  4059f4:	sub    eax,0x20f4c2e
  4059f9:	sub    bh,BYTE PTR [eax]
  4059fb:	lds    ebp,FWORD PTR [ecx-0x3b]
  4059fe:	mov    esp,esp
  405a00:	in     al,dx
  405a01:	(bad)  
  405a02:	clc    
  405a03:	not    al
  405a05:	mov    cl,0x7b
  405a07:	retf   0xb90e
  405a0a:	daa    
  405a0b:	(bad)  
  405a0c:	(bad)  
  405a0d:	xor    DWORD PTR [edx+0x6c],esi
  405a10:	shl    DWORD PTR [ebp+esi*2+0x37],cl
  405a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a15:	or     edx,DWORD PTR [edi+0x1e]
  405a18:	sahf   
  405a19:	lods   al,BYTE PTR ds:[esi]
  405a1a:	into   
  405a1b:	iret   
  405a1c:	fadd   DWORD PTR [edi+0x3e]
  405a1f:	inc    esp
  405a20:	ret    0xe1a4
  405a23:	mov    dl,0xea
  405a25:	mov    ebx,DWORD PTR [ebx+0x48]
  405a28:	stc    
  405a29:	rol    ebx,0xed
  405a2c:	stc    
  405a2d:	or     DWORD PTR [edi-0x62c43471],eax
  405a33:	adc    eax,0x29053d4a
  405a38:	out    dx,eax
  405a39:	cld    
  405a3a:	daa    
  405a3b:	cmp    edi,DWORD PTR [ebx]
  405a3d:	or     ch,bl
  405a3f:	and    eax,0xe771e95c
  405a44:	ror    DWORD PTR [ebp+0x4c],cl
  405a47:	stc    
  405a48:	out    0xbd,al
  405a4a:	jno    0x405a7e
  405a4c:	(bad)  
  405a4e:	xchg   edx,eax
  405a4f:	idiv   edx
  405a51:	xchg   ecx,eax
  405a52:	fadd   QWORD PTR [edi+0x15]
  405a55:	dec    DWORD PTR [ecx+0x59b96663]
  405a5b:	mov    ds:0x413c9df4,eax
  405a60:	call   0x3506:0xf17c4d55
  405a67:	pop    ecx
  405a68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a69:	mov    eax,0x24bf8c03
  405a6e:	in     eax,0x84
  405a70:	hlt    
  405a71:	push   ds
  405a72:	add    DWORD PTR [esi+0x173a8acc],esi
  405a78:	ins    DWORD PTR es:[edi],dx
  405a79:	fist   WORD PTR [ecx+0x7faec38d]
  405a7f:	and    edx,edi
  405a81:	and    edi,DWORD PTR [ebx]
  405a83:	sbb    al,0x3
  405a85:	and    al,0x3d
  405a87:	loopne 0x405ab3
  405a89:	sub    ah,al
  405a8b:	inc    esi
  405a8c:	leave  
  405a8d:	cmp    BYTE PTR [ecx+0x5366b22a],0xff
  405a94:	shl    BYTE PTR [ebp+0x69],0xff
  405a98:	out    0xe,al
  405a9a:	rcl    DWORD PTR [edx-0x6f732672],cl
  405aa0:	nop
  405aa1:	pop    ss
  405aa2:	xor    ah,0x1a
  405aa5:	cmp    BYTE PTR es:[eax+0x7c4bc4e],0x1e
  405aad:	loope  0x405ae8
  405aaf:	scas   eax,DWORD PTR es:[edi]
  405ab0:	dec    esi
  405ab1:	sub    esp,DWORD PTR [ebx-0x1c]
  405ab4:	cmovnp esp,ecx
  405ab7:	shr    DWORD PTR [edi+0x78304ff4],cl
  405abd:	retf   0x929
  405ac0:	(bad)
  405ac4:	and    BYTE PTR [esi+0x576df99b],bl
  405aca:	sub    DWORD PTR [esi-0x3b9961ed],0xdf0c2489
  405ad4:	cmp    BYTE PTR [edi+0x5e5c0c77],cl
  405ada:	jo     0x405aa5
  405adc:	or     DWORD PTR [edi+0x67],0x2627acb4
  405ae3:	out    dx,eax
  405ae4:	hlt    
  405ae5:	and    al,0xbb
  405ae7:	cld    
  405ae8:	sub    al,0x63
  405aea:	or     dh,bl
  405aec:	push   ss
  405aed:	jo     0x405aec
  405aef:	push   es
  405af0:	rcl    BYTE PTR [ecx+0x2bd9fa3a],1
  405af6:	cdq    
  405af7:	push   esi
  405af8:	popa   
  405af9:	sub    esp,ebx
  405afb:	loopne 0x405af8
  405afd:	test   eax,0x61d7aa6e
  405b02:	test   DWORD PTR [ecx-0x3c12b984],esi
  405b08:	gs xchg ecx,eax
  405b0a:	mov    dl,0x14
  405b0c:	push   ss
  405b0d:	cmp    DWORD PTR [ecx-0x1a],eax
  405b10:	and    dh,BYTE PTR [ebx-0x1affff9]
  405b16:	inc    ebp
  405b17:	xchg   edi,eax
  405b18:	mov    esp,0x20a7a8e4
  405b1d:	jnp    0x405b0d
  405b1f:	xlat   BYTE PTR ds:[ebx]
  405b20:	inc    ebx
  405b21:	imul   esp,ebp,0xec9c9787
  405b27:	fnstcw WORD PTR [edx]
  405b29:	pop    edi
  405b2a:	packssdw mm2,QWORD PTR [ebp+0x479c9fd4]
  405b31:	xchg   edx,eax
  405b32:	ja     0x405b7e
  405b34:	es and eax,ecx
  405b37:	int    0xf0
  405b39:	sbb    DWORD PTR [ebp-0x65],ebx
  405b3c:	js     0x405b5e
  405b3e:	loopne 0x405b22
  405b40:	jne    0x405b8c
  405b42:	test   DWORD PTR [esi+0x3af7d43e],esp
  405b48:	and    BYTE PTR [ecx+edi*2+0x46],cl
  405b4c:	inc    eax
  405b4d:	inc    ecx
  405b4e:	and    DWORD PTR ds:0xad3666ea,edx
  405b54:	repz sub DWORD PTR [edi],ebx
  405b57:	js     0x405b83
  405b59:	imul   esi,ebx,0x26ad6b75
  405b5f:	jb     0x405bd3
  405b61:	cli    
  405b62:	sub    sp,sp
  405b65:	shl    DWORD PTR [ecx-0x547810ba],0xa2
  405b6c:	xchg   ecx,eax
  405b6d:	cli    
  405b6e:	lods   eax,DWORD PTR ds:[esi]
  405b6f:	hlt    
  405b70:	out    dx,eax
  405b71:	mov    DWORD PTR [ecx],0x5fe255da
  405b77:	adc    edi,ecx
  405b79:	cmp    BYTE PTR [ebx+0x43],cl
  405b7c:	mov    cs,WORD PTR cs:[edi+ebx*8-0x54fb4378]
  405b84:	dec    ebx
  405b85:	scas   al,BYTE PTR es:[edi]
  405b86:	es mov ebx,0x7585e58e
  405b8c:	mov    BYTE PTR [ebx-0x3e],dh
  405b8f:	ficom  DWORD PTR [esi+0x3c]
  405b92:	sahf   
  405b93:	jle    0x405b47
  405b95:	pushf  
  405b96:	not    DWORD PTR [esi+0x3a]
  405b99:	imul   ebx,edx,0x5214f0ed
  405b9f:	test   DWORD PTR [ebp-0x62],edi
  405ba2:	imul   ebx,esi,0xd6943cee
  405ba8:	xchg   BYTE PTR [edx-0x3686bc4c],dl
  405bae:	and    ch,BYTE PTR [edx+0x81bb5a4]
  405bb4:	push   0x4
  405bb6:	ss add bl,BYTE PTR gs:[eax]
  405bba:	dec    eax
  405bbb:	popf   
  405bbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bbd:	out    dx,al
  405bbe:	imul   eax,edx,0xd5f65de3
  405bc4:	add    edx,edx
  405bc6:	pop    ebx
  405bc7:	mov    al,ds:0x6bee3112
  405bcc:	ret    0x3b91
  405bcf:	or     al,0xaa
  405bd1:	pop    ds
  405bd2:	pop    edx
  405bd3:	xor    DWORD PTR [eax+0x7141b451],0x816f57c5
  405bdd:	or     al,bh
  405bdf:	cmova  ebp,DWORD PTR ds:0xdca7b1ee
  405be6:	pop    edi
  405be7:	and    eax,0xf3a918c9
  405bec:	nop
  405bed:	mov    al,ds:0x1338cc95
  405bf2:	xchg   esi,eax
  405bf3:	mov    eax,ds:0xae7f4d86
  405bf8:	mov    eax,0xfbe531d7
  405bfd:	sub    ecx,0x72
  405c00:	adc    ecx,DWORD PTR gs:[edi+0x37850e9]
  405c07:	xchg   edi,eax
  405c08:	inc    eax
  405c09:	jl     0x405b99
  405c0b:	xlat   BYTE PTR ds:[ebx]
  405c0c:	pop    ecx
  405c0d:	popa   
  405c0e:	loopne 0x405bda
  405c10:	imul   ecx,DWORD PTR [esi],0xb6b77289
  405c16:	icebp  
  405c17:	aam    0x83
  405c19:	ret    
  405c1a:	mov    BYTE PTR [eax+0x2f472811],cl
  405c20:	fidiv  DWORD PTR [edi-0x55]
  405c23:	je     0x405c32
  405c25:	xchg   esi,eax
  405c26:	test   al,0x0
  405c28:	addr16 pop ss
  405c2a:	push   ecx
  405c2b:	shl    BYTE PTR [edx],cl
  405c2d:	mov    ebx,0x40358f1f
  405c32:	dec    edx
  405c33:	mov    edx,0xdcdd056b
  405c38:	dec    eax
  405c39:	fild   DWORD PTR [edi]
  405c3b:	push   edi
  405c3c:	popa   
  405c3d:	add    ebx,0xffffff9e
  405c40:	sbb    al,0xb
  405c42:	add    cl,BYTE PTR [ebp+eax*1+0x52878cb5]
  405c49:	imul   ecx,DWORD PTR [ecx-0x31aadf6c],0xffffffcc
  405c50:	inc    ecx
  405c51:	push   0x23a5a99f
  405c56:	mov    ecx,0xa166e24c
  405c5b:	mov    dl,0xb5
  405c5d:	xor    al,0xe5
  405c5f:	adc    edx,DWORD PTR [edi]
  405c61:	fcmovnu st,st(0)
  405c63:	sti    
  405c64:	repz pop ds
  405c66:	adc    cl,dl
  405c68:	shr    DWORD PTR [edx+0x60b381e4],cl
  405c6e:	sbb    al,0xc9
  405c70:	dec    bx
  405c72:	imul   esp,DWORD PTR fs:[edi+0x6b],0x58
  405c77:	pop    esi
  405c78:	hlt    
  405c79:	cmp    eax,0x8315d8c5
  405c7e:	xchg   ebx,eax
  405c7f:	inc    esp
  405c80:	push   cs
  405c81:	mov    edi,0x333a37d5
  405c86:	sbb    dl,BYTE PTR [ecx]
  405c88:	stos   DWORD PTR es:[edi],eax
  405c89:	push   ds
  405c8a:	cmc    
  405c8b:	arpl   WORD PTR [ebp-0x31],bx
  405c8e:	(bad)  
  405c8f:	gs pusha 
  405c91:	sar    DWORD PTR [ebx+0x73],1
  405c94:	outs   dx,DWORD PTR ds:[esi]
  405c95:	ins    BYTE PTR es:[edi],dx
  405c96:	push   es
  405c97:	neg    BYTE PTR [edi+0xb]
  405c9a:	iret   
  405c9b:	lea    esi,[esi+0x68130167]
  405ca1:	add    dh,BYTE PTR [eax+0x366956]
  405ca7:	inc    ebx
  405ca8:	cmp    eax,0x5a997f6a
  405cad:	js     0x405cd9
  405caf:	add    BYTE PTR [ebx+edx*1+0x2baaa683],dh
  405cb6:	cs cmc 
  405cb8:	mov    cs,WORD PTR [edi-0x7c]
  405cbb:	and    ecx,DWORD PTR [eax]
  405cbd:	push   esi
  405cbe:	retf   
  405cbf:	bound  ebx,QWORD PTR [ecx+0x6d94af79]
  405cc5:	mov    eax,ds:0x41ab825b
  405cca:	mov    ecx,0x336101c9
  405ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd0:	push   ds
  405cd1:	mov    bl,0x87
  405cd3:	mov    esi,0xbd38cfc3
  405cd8:	cdq    
  405cd9:	or     dh,ah
  405cdb:	jmp    DWORD PTR [eax+ebp*2]
  405cde:	push   es
  405cdf:	es pop edi
  405ce1:	xor    dh,BYTE PTR [ecx-0x3fe87768]
  405ce7:	push   ecx
  405ce8:	cmp    al,0x4e
  405cea:	pop    ds
  405ceb:	or     al,0x25
  405ced:	push   ss
  405cee:	sub    ah,BYTE PTR [edi+0x36]
  405cf1:	nop
  405cf2:	mov    eax,ds:0x355e18f3
  405cf7:	int3   
  405cf8:	imul   sp
  405cfb:	test   eax,0x40dc2d61
  405d00:	sub    bl,BYTE PTR [ebp*4+0x10797290]
  405d07:	cdq    
  405d08:	call   0xe1a4aac0
  405d0d:	cmc    
  405d0e:	sahf   
  405d0f:	or     eax,0xf94705b8
  405d14:	mov    BYTE PTR [esi-0x5d],dl
  405d17:	fucomip st,st(5)
  405d19:	fdivr  st(5),st
  405d1b:	ret    
  405d1c:	sbb    BYTE PTR [edx+0x76],al
  405d1f:	imul   eax,ebx,0xa22ccdd3
  405d25:	add    DWORD PTR [edx],ecx
  405d27:	mov    dl,0x93
  405d29:	pop    ecx
  405d2a:	mov    ds:0x7b9afc9a,eax
  405d2f:	or     al,0xcd
  405d31:	call   0x4784:0x44765c64
  405d38:	ins    DWORD PTR es:[edi],dx
  405d39:	mov    cl,0xd9
  405d3b:	pop    ss
  405d3c:	lea    ecx,[eax-0x45]
  405d3f:	call   0x81824389
  405d44:	sub    BYTE PTR [edi+0x74413cad],bh
  405d4a:	mov    ds,eax
  405d4c:	loopne 0x405db6
  405d4e:	xchg   BYTE PTR [ebx-0x535c49ef],ch
  405d54:	sub    eax,0xef6effc9
  405d59:	adc    BYTE PTR [edi],dl
  405d5b:	jle    0x405ce8
  405d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5e:	(bad)  
  405d5f:	xlat   BYTE PTR ds:[ebx]
  405d60:	mov    ss,WORD PTR [ecx-0x7d]
  405d63:	add    eax,0xe727c116
  405d68:	fcom   QWORD PTR [edx]
  405d6a:	test   al,0x48
  405d6c:	sahf   
  405d6d:	or     dl,BYTE PTR [edx]
  405d6f:	cdq    
  405d70:	lock mov ch,0x3a
  405d73:	lock sub edx,edx
  405d76:	aam    0x96
  405d78:	loop   0x405df1
  405d7a:	sub    BYTE PTR [ebx],bl
  405d7c:	fmul   QWORD PTR [esi-0x6]
  405d7f:	push   esi
  405d80:	sar    ecx,1
  405d82:	lods   eax,DWORD PTR ds:[esi]
  405d83:	aad    0xef
  405d85:	push   edx
  405d86:	jge    0x405d14
  405d88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d89:	(bad)  
  405d8a:	mov    ebx,0xb31b438a
  405d8f:	popa   
  405d90:	aad    0xc7
  405d92:	cmp    DWORD PTR [ecx-0x2b],ebp
  405d95:	pop    ecx
  405d96:	sbb    eax,0xbe0561aa
  405d9b:	jnp    0x405d6b
  405d9d:	into   
  405d9e:	aas    
  405d9f:	pop    edx
  405da0:	out    dx,eax
  405da1:	add    al,0x35
  405da3:	xor    BYTE PTR [edi],bl
  405da5:	mov    ds:0x928313d2,al
  405dab:	sub    DWORD PTR [esi+ebx*8+0x58f59fe8],ebx
  405db2:	push   0x6fd630cf
  405db7:	lods   eax,DWORD PTR ds:[esi]
  405db8:	(bad)  
  405db9:	xchg   ecx,eax
  405dba:	xchg   DWORD PTR [edx],edx
  405dbc:	mov    bh,0x66
  405dbe:	push   ds
  405dbf:	rcl    dl,1
  405dc1:	mov    ch,0x3a
  405dc3:	push   0xffffffa5
  405dc5:	adc    ecx,esi
  405dc7:	shr    DWORD PTR es:[esi-0x1b],0x5f
  405dcc:	repz popa 
  405dce:	emms   
  405dd0:	loop   0x405e3b
  405dd2:	repnz push ss
  405dd4:	jmp    0x405d8f
  405dd6:	enter  0x3fd,0x64
  405dda:	scas   al,BYTE PTR es:[edi]
  405ddb:	bound  ebp,QWORD PTR [ebp+0x404de214]
  405de1:	xchg   ecx,eax
  405de2:	xor    esi,ebp
  405de4:	mov    ebx,0xb101f592
  405de9:	jge    0x405df9
  405deb:	xor    ebx,esp
  405ded:	xor    eax,0xffffffb7
  405df0:	jns    0x405de3
  405df2:	jns    0x405e5f
  405df4:	loopne 0x405dde
  405df6:	ja     0x405dfd
  405df8:	cmp    BYTE PTR [esi-0x480af105],dl
  405dfe:	and    bl,cl
  405e00:	lods   eax,DWORD PTR ds:[esi]
  405e01:	jno    0x405dfa
  405e03:	stc    
  405e04:	mov    eax,0x75aa954e
  405e09:	enter  0xf4a3,0x67
  405e0d:	pop    edi
  405e0e:	push   eax
  405e0f:	rol    BYTE PTR [ebx+0x52],1
  405e12:	xchg   esp,eax
  405e13:	jb     0x405db1
  405e15:	jns    0x405d9a
  405e17:	push   edx
  405e18:	xor    ah,BYTE PTR [ecx-0xf21623e]
  405e1e:	ret    0x949f
  405e21:	mov    eax,0x2124f5cc
  405e26:	or     DWORD PTR ds:[edx-0x75b7a314],ebp
  405e2d:	push   ebp
  405e2e:	lods   eax,DWORD PTR ds:[esi]
  405e2f:	clc    
  405e30:	adc    DWORD PTR [ecx-0x4a6db77a],0x7f8c3013
  405e3a:	inc    eax
  405e3b:	push   cs
  405e3c:	retf   0x2679
  405e3f:	repnz cmp eax,0x317527db
  405e45:	adc    eax,0x8c236368
  405e4a:	mov    dl,0x96
  405e4c:	pop    edx
  405e4d:	js     0x405e90
  405e4f:	repz cmc 
  405e51:	(bad)  
  405e52:	fcmovnu st,st(0)
  405e54:	cmp    BYTE PTR [edx],cl
  405e56:	cmp    ecx,DWORD PTR [ebp+0x53]
  405e59:	sbb    eax,0x6a4194dc
  405e5e:	sub    ch,BYTE PTR [ebx]
  405e60:	or     al,0x82
  405e62:	push   esi
  405e63:	jbe    0x405ed8
  405e65:	or     al,0x1f
  405e67:	into   
  405e68:	sub    eax,0xa66a304
  405e6d:	xor    eax,0x409b5e19
  405e72:	in     eax,0xc7
  405e74:	(bad)  
  405e75:	mov    dh,0x44
  405e77:	adc    DWORD PTR ds:0x78be0ab2,ebp
  405e7d:	dec    edi
  405e7e:	push   ebx
  405e7f:	jl     0x405eb0
  405e81:	xchg   edx,eax
  405e82:	aaa    
  405e83:	dec    ebp
  405e84:	mov    dl,0x17
  405e86:	(bad)  
  405e88:	dec    ecx
  405e89:	mov    eax,0xce9962cf
  405e8e:	pop    ebp
  405e8f:	in     eax,dx
  405e90:	xchg   edi,eax
  405e91:	ins    BYTE PTR es:[edi],dx
  405e92:	shl    BYTE PTR [edi-0x379d6598],0x42
  405e99:	mov    bh,0x5a
  405e9b:	lds    edi,FWORD PTR [esi]
  405e9d:	sub    BYTE PTR [ecx+0x3e],bh
  405ea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ea1:	sub    bh,BYTE PTR [edi-0x3a]
  405ea4:	or     eax,0x6750f671
  405ea9:	enter  0x26ee,0xef
  405ead:	adc    ebx,ecx
  405eaf:	loopne 0x405efe
  405eb1:	lea    esp,[ebp+0x5e]
  405eb4:	mov    ch,0xbc
  405eb6:	or     dh,dl
  405eb8:	ins    BYTE PTR es:[edi],dx
  405eb9:	stc    
  405eba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ebb:	aam    0xcb
  405ebd:	pop    edi
  405ebe:	(bad)  
  405ebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ec0:	jne    0x405e81
  405ec2:	bound  ebp,QWORD PTR [ebp+0x2aad8b62]
  405ec8:	js     0x405e8b
  405eca:	pop    eax
  405ecb:	ret    
  405ecc:	in     eax,0x92
  405ece:	ficom  WORD PTR [edx-0x33]
  405ed1:	adc    ch,BYTE PTR [edi]
  405ed3:	xchg   esp,eax
  405ed4:	jmp    0xf2c9:0x5208ba55
  405edb:	daa    
  405edc:	push   ebx
  405edd:	push   es
  405ede:	pushf  
  405edf:	repnz or bl,BYTE PTR [edx+0x68]
  405ee3:	push   esp
  405ee4:	rcr    DWORD PTR [edx+eiz*8+0x2af22f38],1
  405eeb:	icebp  
  405eec:	mov    DWORD PTR [ecx+esi*8-0x3b],ebp
  405ef0:	mov    esi,0x2cf5807f
  405ef5:	xlat   BYTE PTR ds:[ebx]
  405ef6:	dec    edi
  405ef7:	sub    eax,0xc496631d
  405efc:	scas   al,BYTE PTR es:[edi]
  405efd:	mov    dh,0xa4
  405eff:	inc    eax
  405f00:	std    
  405f01:	data16 mov BYTE PTR [edx-0xb],al
  405f05:	loope  0x405ee8
  405f07:	arpl   si,bp
  405f09:	test   DWORD PTR [esi-0x6b],edx
  405f0c:	mov    al,ds:0xdf9df9b
  405f11:	popa   
  405f12:	mov    dl,0x8a
  405f14:	and    al,0xcc
  405f16:	ins    BYTE PTR es:[edi],dx
  405f17:	scas   eax,DWORD PTR es:[edi]
  405f18:	xchg   edx,eax
  405f19:	xlat   BYTE PTR cs:[ebx]
  405f1b:	hlt    
  405f1c:	jle    0x405f95
  405f1e:	sbb    BYTE PTR [ecx-0x51],al
  405f21:	out    dx,eax
  405f22:	adc    BYTE PTR [ecx],bh
  405f24:	dec    edi
  405f25:	sub    BYTE PTR [esi-0x1d0d87fd],0x51
  405f2c:	js     0x405f71
  405f2e:	jp     0x405f0b
  405f30:	jo     0x405f9e
  405f32:	mov    edi,0xfde6e01a
  405f37:	dec    ebx
  405f38:	std    
  405f39:	pop    ecx
  405f3a:	xor    ah,bl
  405f3c:	std    
  405f3d:	add    eax,0xa58c11f5
  405f42:	ins    BYTE PTR es:[edi],dx
  405f43:	cmp    DWORD PTR [ebp-0x10e6bc],ebp
  405f49:	popf   
  405f4a:	sar    esi,cl
  405f4c:	inc    ecx
  405f4d:	push   0xe32d41e8
  405f52:	bound  edx,QWORD PTR [edi]
  405f54:	vxorps xmm1,xmm3,XMMWORD PTR [eax]
  405f58:	pop    ebx
  405f59:	stc    
  405f5a:	ror    ah,cl
  405f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f5d:	xchg   ecx,eax
  405f5e:	dec    ebx
  405f5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f60:	jbe    0x405f46
  405f62:	ja     0x405fc3
  405f64:	aas    
  405f65:	lock sub eax,0x723ba65
  405f6b:	and    DWORD PTR ds:0xe2d07bc4,esi
  405f71:	or     esp,edi
  405f73:	mov    bl,bh
  405f75:	dec    edi
  405f76:	sbb    ebp,DWORD PTR [esi-0x22]
  405f79:	pop    ecx
  405f7a:	mov    al,ds:0x2b3b41c9
  405f7f:	inc    ebp
  405f80:	out    dx,al
  405f81:	test   al,0xa1
  405f83:	or     al,0x48
  405f85:	cwde   
  405f86:	sub    esp,DWORD PTR [ebp-0x42585738]
  405f8c:	push   cs
  405f8d:	icebp  
  405f8e:	pusha  
  405f8f:	outs   dx,BYTE PTR ds:[esi]
  405f90:	pushw  0xff84
  405f93:	sbb    BYTE PTR [eax+0x5159303f],ch
  405f99:	lahf   
  405f9a:	daa    
  405f9b:	adc    al,0x16
  405f9d:	pop    esp
  405f9e:	inc    ecx
  405f9f:	sub    DWORD PTR [ecx+0x79],ecx
  405fa2:	push   0x1756ce2e
  405fa7:	fadd   QWORD PTR [edi-0x12999852]
  405fad:	shl    BYTE PTR [eax-0x1e],cl
  405fb0:	retf   0xea25
  405fb3:	mov    WORD PTR [eax-0xc5df4b5],es
  405fb9:	mov    al,0x69
  405fbb:	push   ds
  405fbc:	nop
  405fbd:	shl    DWORD PTR [eax],cl
  405fbf:	aad    0x26
  405fc1:	rol    DWORD PTR [ecx+0x7cb7c67a],0x7
  405fc8:	pusha  
  405fc9:	or     al,0x1f
  405fcb:	mov    eax,ds:0x73396ec
  405fd0:	sub    DWORD PTR [ecx-0x562f8a21],ebp
  405fd6:	inc    eax
  405fd7:	ja     0x405fea
  405fd9:	test   bl,dh
  405fdb:	add    dh,bl
  405fdd:	cwde   
  405fde:	pop    ebp
  405fdf:	and    ecx,DWORD PTR [ebp+0x331590fa]
  405fe5:	adc    al,0xb6
  405fe7:	xchg   esp,eax
  405fe8:	repnz fsubr st,st(5)
  405feb:	pushf  
  405fec:	popf   
  405fed:	call   0x3738:0xfda1e32d
  405ff4:	xor    DWORD PTR [edx+ecx*8],ebp
  405ff7:	out    dx,al
  405ff8:	clc    
  405ff9:	mov    edi,0xfcf34a56
  405ffe:	out    0xe,al
  406000:	popf   
  406001:	outs   dx,BYTE PTR ds:[esi]
  406002:	fwait
  406003:	out    0x5d,eax
  406005:	dec    edi
  406006:	pop    esp
  406007:	fist   WORD PTR [eax]
  406009:	and    BYTE PTR [eax+edx*4],cl
  40600c:	and    DWORD PTR [ebp-0x37a20835],0xffffff9f
  406013:	xchg   ebx,eax
  406014:	mov    al,0x5f
  406016:	push   ecx
  406017:	popa   
  406018:	mov    bl,0xc7
  40601a:	pop    es
  40601b:	sub    BYTE PTR ds:0x7ec00843,0xab
  406022:	add    al,0x64
  406024:	stc    
  406025:	or     bl,bh
  406027:	add    esi,edi
  406029:	sbb    eax,0x3fa3e70c
  40602e:	popa   
  40602f:	pop    ebp
  406030:	mov    eax,0xc79215b2
  406035:	mov    esp,ecx
  406037:	push   edi
  406038:	not    DWORD PTR [edi-0x70]
  40603b:	(bad)  
  40603d:	stc    
  40603e:	mov    dh,0xa4
  406040:	mov    ds:0xf938012d,al
  406045:	inc    edx
  406046:	adc    DWORD PTR [edx-0x60],ebp
  406049:	mov    bh,0xca
  40604b:	test   al,0xf7
  40604d:	pop    edx
  40604e:	loop   0x406039
  406050:	inc    ebx
  406051:	adc    DWORD PTR [eax],esp
  406053:	dec    ebx
  406054:	jecxz  0x406073
  406056:	shr    edi,0xf8
  406059:	mov    cl,0x92
  40605b:	fldenv [esi]
  40605d:	pop    ebp
  40605e:	mov    ecx,0x9c3fbd5a
  406063:	and    BYTE PTR [eax-0x4c],0xdb
  406067:	scas   eax,DWORD PTR es:[edi]
  406068:	add    al,0x12
  40606a:	popf   
  40606b:	int3   
  40606c:	add    eax,0x9184d370
  406071:	scas   eax,DWORD PTR es:[edi]
  406072:	mov    esp,0x5d79f2f0
  406077:	fisttp WORD PTR [eax+0x56]
  40607a:	jb     0x4060c4
  40607c:	mov    edx,0xe6ea181a
  406081:	xlat   BYTE PTR ds:[ebx]
  406082:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406083:	(bad)  
  406084:	cmp    al,0xbe
  406086:	add    dl,ch
  406088:	adc    BYTE PTR [edx-0x43],ah
  40608b:	dec    ebp
  40608c:	call   0xff238711
  406091:	popf   
  406092:	xor    BYTE PTR [edx+edx*4+0x59f861a1],0x81
  40609a:	lods   eax,DWORD PTR ds:[esi]
  40609b:	stos   DWORD PTR es:[edi],eax
  40609c:	fwait
  40609d:	inc    esi
  40609e:	jnp    0x40602f
  4060a0:	adc    eax,0x66dc2889
  4060a5:	ds xchg edi,eax
  4060a7:	imul   esi,DWORD PTR [eax-0x66],0x31cd8fea
  4060ae:	blsic  ecx,edx
  4060b3:	mov    es,WORD PTR ds:0x1d5ead9e
  4060b9:	sar    DWORD PTR [ebx],0xa3
  4060bc:	out    dx,al
  4060bd:	icebp  
  4060be:	pop    edx
  4060bf:	not    DWORD PTR [ecx-0x4db7a708]
  4060c5:	adc    esi,DWORD PTR [esi]
  4060c7:	inc    esi
  4060c8:	fst    QWORD PTR [esi-0x5f435800]
  4060ce:	jmp    0xcfa35eb0
  4060d3:	and    al,0x5c
  4060d5:	mov    bl,0xeb
  4060d7:	pop    edi
  4060d8:	out    0xf0,al
  4060da:	out    dx,al
  4060db:	and    bh,BYTE PTR [esi-0x3ec34aed]
  4060e1:	ins    DWORD PTR es:[edi],dx
  4060e2:	jle    0x406162
  4060e4:	ret    
  4060e5:	fadd   QWORD PTR [ebp+esi*1-0x3]
  4060e9:	sub    ah,0x85
  4060ec:	clc    
  4060ed:	mov    al,cs:0x3abe9963
  4060f3:	pushf  
  4060f4:	aam    0x91
  4060f6:	stc    
  4060f7:	jl     0x406170
  4060f9:	jo     0x40614b
  4060fb:	jns    0x406103
  4060fd:	lock sbb bp,di
  406101:	xchg   edi,eax
  406102:	or     ah,BYTE PTR [ebp-0x54e7171f]
  406108:	div    BYTE PTR [ecx-0x4f]
  40610b:	xchg   DWORD PTR [esi+0x458f3009],edi
  406111:	in     eax,0x90
  406113:	mov    ebx,0x251915a0
  406118:	shr    DWORD PTR [esi-0x3dbc9d0],0x66
  40611f:	adc    edi,DWORD PTR [edi+0xd]
  406122:	test   BYTE PTR [esi+0x4e],bl
  406125:	jns    0x406176
  406127:	sub    esi,DWORD PTR [edi+0x6af8fffc]
  40612d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40612e:	xchg   DWORD PTR ds:0x668617e8,ebp
  406134:	mov    dl,0x4f
  406136:	jbe    0x40610a
  406138:	inc    esp
  406139:	jle    0x406113
  40613b:	cmp    edx,DWORD PTR [eax+0x5e]
  40613e:	stos   BYTE PTR es:[edi],al
  40613f:	and    ah,BYTE PTR [eax]
  406141:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406142:	mov    cs,ecx
  406144:	dec    eax
  406145:	push   ebp
  406146:	and    cl,BYTE PTR ds:[edx]
  406149:	stos   BYTE PTR es:[edi],al
  40614a:	jge    0x406106
  40614c:	loope  0x406168
  40614e:	scas   al,BYTE PTR es:[edi]
  40614f:	push   ebp
  406150:	lock dec esi
  406152:	jg     0x406103
  406154:	push   ds
  406155:	jae    0x406176
  406157:	cli    
  406158:	daa    
  406159:	mov    eax,ds:0x77239b7b
  40615e:	push   ds
  40615f:	sub    eax,0x2f3baad0
  406164:	sub    BYTE PTR [esi-0x24],0x68
  406168:	inc    edx
  406169:	cmp    eax,0xb3c0824a
  40616e:	rcr    esp,1
  406170:	sbb    ebp,DWORD PTR [ebx]
  406172:	ins    BYTE PTR es:[edi],dx
  406173:	lahf   
  406174:	popf   
  406175:	inc    edx
  406176:	(bad)  
  406177:	dec    ebx
  406178:	jno    0x4061d2
  40617a:	mov    ds:0xffea52c,al
  40617f:	adc    ebp,DWORD PTR [esi+edx*8+0x6a78c563]
  406186:	sub    al,0x3
  406188:	(bad)  
  406189:	retf   
  40618a:	and    BYTE PTR [ebx-0x6a9dc659],ch
  406190:	mov    esp,0xba548edf
  406195:	inc    ecx
  406196:	daa    
  406197:	dec    ecx
  406198:	mov    bl,0xed
  40619a:	imul   BYTE PTR ds:0xc06e5137
  4061a0:	mov    WORD PTR [eax],cs
  4061a2:	push   es
  4061a3:	imul   edi,DWORD PTR [edx+ebx*4],0x52f6522b
  4061aa:	shl    DWORD PTR [ebp-0x2f87d929],1
  4061b0:	je     0x4061de
  4061b2:	jecxz  0x4061c4
  4061b4:	outs   dx,BYTE PTR ds:[esi]
  4061b5:	add    ch,BYTE PTR [ebx]
  4061b7:	fst    st(0)
  4061b9:	fbld   TBYTE PTR [ebp+0x52]
  4061bc:	fdiv   QWORD PTR [esi+eiz*4+0x58]
  4061c0:	stc    
  4061c1:	lea    esp,[ecx]
  4061c3:	xchg   BYTE PTR [ebx],ah
  4061c5:	mov    eax,ds:0xddb98ba2
  4061ca:	dec    ebp
  4061cb:	sbb    cl,dh
  4061cd:	ror    DWORD PTR [esi-0x31],1
  4061d0:	enter  0x7861,0xf7
  4061d4:	sub    eax,0xb6cf16a2
  4061d9:	adc    al,0x36
  4061db:	sbb    BYTE PTR [esi+eax*2],0x1a
  4061df:	push   ss
  4061e0:	ins    DWORD PTR es:[edi],dx
  4061e1:	mov    ebp,0x5ddea6fb
  4061e6:	or     al,0x87
  4061e8:	jno    0x406234
  4061ea:	repz and al,0x7
  4061ed:	pop    eax
  4061ee:	int3   
  4061ef:	stc    
  4061f0:	xchg   esi,eax
  4061f1:	mov    BYTE PTR [edx+0x2794f188],cl
  4061f7:	mov    dl,0x8b
  4061f9:	lock retf 
  4061fb:	push   0xffffffeb
  4061fd:	jl     0x4061b0
  4061ff:	test   eax,edi
  406201:	cmp    bl,dl
  406203:	scas   al,BYTE PTR es:[edi]
  406204:	repz rol BYTE PTR [ecx-0x55200239],cl
  40620b:	mov    esi,0xcf9c943
  406210:	loopne 0x406213
  406212:	inc    ebx
  406213:	dec    esi
  406214:	neg    eax
  406216:	test   eax,0xa259d7ca
  40621b:	outs   dx,BYTE PTR ds:[esi]
  40621c:	xor    ebx,ebx
  40621e:	jle    0x4061a3
  406220:	fs cmp al,0xfb
  406223:	rcl    BYTE PTR [edx+0x3a],1
  406226:	into   
  406227:	mov    edx,DWORD PTR [ebx]
  406229:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40622a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40622b:	mov    al,0x35
  40622d:	push   ds
  40622e:	cmp    al,BYTE PTR [ebp-0x4b4cd61c]
  406234:	(bad)  
  406235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406236:	mov    eax,ds:0x6183cc71
  40623b:	pop    ds
  40623c:	(bad)
  406241:	sbb    esp,ebx
  406243:	mov    ch,0xa3
  406245:	mov    esp,0x4b33a22e
  40624a:	xchg   edi,eax
  40624b:	aad    0x45
  40624d:	adc    bl,BYTE PTR [edx+0x3f]
  406250:	cmp    eax,0xf97b0663
  406255:	fwait
  406256:	or     ebp,ecx
  406258:	rcr    BYTE PTR [eax],1
  40625a:	mov    al,ds:0x7effbc37
  40625f:	add    bl,bh
  406261:	dec    ecx
  406262:	pop    edi
  406263:	xchg   edi,eax
  406264:	inc    ecx
  406265:	ins    BYTE PTR es:[edi],dx
  406266:	pop    edx
  406267:	fs xchg esi,eax
  406269:	mov    eax,0x4f116067
  40626e:	das    
  40626f:	daa    
  406270:	push   esi
  406271:	sbb    ah,dl
  406273:	push   0x832afa7a
  406278:	push   edi
  406279:	cmp    ecx,edi
  40627b:	enter  0xa64a,0xc2
  40627f:	inc    ecx
  406280:	and    eax,0xbda92d44
  406285:	xor    bl,BYTE PTR [eax]
  406287:	gs inc eax
  406289:	dec    ebp
  40628a:	cmp    BYTE PTR [edi+0x3e],ah
  40628d:	push   esi
  40628e:	add    dh,0xcd
  406291:	arpl   WORD PTR [edx+0x69393fd3],cx
  406297:	and    edi,DWORD PTR [ecx-0x3e]
  40629a:	sub    DWORD PTR [ebp+0x3b190b],esi
  4062a0:	fcom   DWORD PTR [ecx]
  4062a2:	lods   eax,DWORD PTR ds:[esi]
  4062a3:	xor    al,0x13
  4062a5:	mov    al,0x44
  4062a7:	push   edi
  4062a8:	adc    DWORD PTR [ebp+0x115076ea],edx
  4062ae:	mov    eax,ds:0x4cb5b4b6
  4062b3:	jmp    0xbf0ba2cf
  4062b8:	daa    
  4062b9:	and    al,0x17
  4062bb:	sbb    BYTE PTR [eax],ah
  4062bd:	mov    eax,0x64717480
  4062c2:	mov    ds:0xd1f7c001,eax
  4062c7:	xchg   esi,eax
  4062c8:	(bad)  
  4062c9:	stc    
  4062ca:	repz sub ebp,DWORD PTR [ecx-0x44]
  4062ce:	push   ds
  4062cf:	xor    eax,0xff86bce9
  4062d4:	xor    DWORD PTR [ebp-0x4e26c11b],0xe2c4a312
  4062de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062df:	iret   
  4062e0:	shr    BYTE PTR [edi-0x30],cl
  4062e3:	lods   eax,DWORD PTR ds:[esi]
  4062e4:	test   BYTE PTR [ecx-0xcd531e5],al
  4062ea:	mov    dh,0x92
  4062ec:	lods   eax,DWORD PTR ds:[esi]
  4062ed:	jns    0x40632f
  4062ef:	rol    BYTE PTR [esi-0x2],cl
  4062f2:	pop    ebp
  4062f3:	mov    ds:0x52e1284c,eax
  4062f8:	enter  0x91d6,0x99
  4062fc:	mov    dl,0x39
  4062fe:	(bad)  
  4062ff:	(bad)  
  406300:	cmc    
  406301:	push   eax
  406302:	scas   al,BYTE PTR es:[edi]
  406303:	inc    esp
  406304:	lldt   WORD PTR [ecx-0x4a]
  406308:	outs   dx,BYTE PTR ds:[esi]
  406309:	mov    bl,BYTE PTR [ecx+0x5d]
  40630c:	sub    al,0x94
  40630e:	test   BYTE PTR [ebx+0x1c5c32c3],ah
  406314:	jno    0x4062d2
  406316:	sti    
  406317:	mov    esi,0x39b1fb42
  40631c:	push   es
  40631d:	jne    0x406322
  40631f:	sbb    dl,BYTE PTR [ecx+0x4a]
  406322:	popf   
  406323:	fcom   DWORD PTR [esi+0x459e78d5]
  406329:	pop    ebx
  40632a:	scas   al,BYTE PTR es:[edi]
  40632b:	pushf  
  40632c:	or     ah,BYTE PTR [edi-0x74]
  40632f:	stos   BYTE PTR es:[edi],al
  406330:	ja     0x40636f
  406332:	mov    DWORD PTR [ebx],edi
  406334:	stc    
  406335:	out    dx,eax
  406336:	push   edi
  406337:	push   edx
  406338:	or     al,0xcf
  40633a:	or     dh,0x1d
  40633d:	pop    eax
  40633e:	push   es
  40633f:	outs   dx,DWORD PTR ds:[esi]
  406340:	loop   0x40631c
  406342:	xchg   ebx,eax
  406343:	icebp  
  406344:	push   eax
  406345:	dec    DWORD PTR [ebp+ebp*2-0x1dd425e8]
  40634c:	xchg   edi,eax
  40634d:	fcomp  DWORD PTR [esi]
  40634f:	js     0x406332
  406351:	mov    eax,ds:0x5a4e65bc
  406356:	js     0x406384
  406358:	ret    0x4aa3
  40635b:	fldenv ds:0x8597876f
  406361:	div    BYTE PTR [edi+0x26]
  406364:	mov    eax,0xd775af3c
  406369:	sub    dh,BYTE PTR [eax-0x7e27b70]
  40636f:	retf   
  406370:	pop    esi
  406371:	call   0xb565:0xa73c6c57
  406378:	lahf   
  406379:	mov    ebp,DWORD PTR [eax+edx*4-0x7e0dfbdb]
  406380:	or     eax,0x3c771a28
  406385:	xchg   edx,eax
  406386:	gs jmp 0x406395
  406389:	jmp    0x4063dd
  40638b:	push   0x7c
  40638d:	mov    dh,0x82
  40638f:	mov    BYTE PTR [ebx+0x42c6c494],bl
  406395:	(bad)  
  406396:	jno    0x40638f
  406398:	hlt    
  406399:	push   esp
  40639a:	or     DWORD PTR [ecx],eax
  40639c:	inc    eax
  40639d:	aaa    
  40639e:	bound  ecx,QWORD PTR [edx]
  4063a0:	pop    ecx
  4063a1:	sbb    BYTE PTR [esi+0x34d010d0],0xf6
  4063a8:	fnstenv [edi+0x7a76b970]
  4063ae:	or     DWORD PTR [esi],eax
  4063b0:	repz js 0x4063ad
  4063b3:	(bad)  
  4063b4:	and    cl,bl
  4063b6:	fnstsw WORD PTR [esi-0x3c]
  4063b9:	pop    ebx
  4063ba:	mov    DWORD PTR [esi],ebx
  4063bc:	jb     0x406354
  4063be:	inc    ecx
  4063bf:	int3   
  4063c0:	dec    ecx
  4063c1:	std    
  4063c2:	les    eax,FWORD PTR [esi+ebx*1]
  4063c5:	xlat   BYTE PTR ds:[ebx]
  4063c6:	mov    eax,0xd45603c6
  4063cb:	pop    ebp
  4063cc:	cwde   
  4063cd:	(bad)  
  4063ce:	ins    BYTE PTR es:[edi],dx
  4063cf:	dec    esp
  4063d0:	hlt    
  4063d1:	shl    DWORD PTR [eax+eax*8],cl
  4063d4:	push   esp
  4063d5:	cmp    eax,0x3d6f01da
  4063da:	mov    esi,0x2a18b443
  4063df:	loopne 0x406385
  4063e1:	fwait
  4063e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063e3:	add    eax,0xacbc2920
  4063e8:	cs dec eax
  4063ea:	dec    edx
  4063eb:	xor    cl,bl
  4063ed:	jmp    0xfc7:0xc4c2dd97
  4063f4:	and    DWORD PTR [ecx-0x41],0xca14220c
  4063fb:	mov    ds:0xf800ff72,eax
  406400:	push   ecx
  406401:	jp     0x4063a3
  406403:	adc    DWORD PTR [ecx-0x3b],ecx
  406406:	fsubr  DWORD PTR [esi]
  406408:	inc    esp
  406409:	sahf   
  40640a:	adc    ecx,ebx
  40640c:	inc    ebp
  40640d:	test   DWORD PTR [edx-0x34],edi
  406410:	pushf  
  406411:	fld    DWORD PTR ds:0xb4c4c3a8
  406417:	sbb    BYTE PTR [edx+0x2c],bl
  40641a:	popf   
  40641b:	inc    esp
  40641c:	stos   DWORD PTR es:[edi],eax
  40641d:	pop    ebp
  40641e:	imul   edi,DWORD PTR [ecx-0x63],0x99427093
  406425:	int    0x92
  406427:	ret    
  406428:	inc    BYTE PTR [edx+edx*4+0x19]
  40642c:	(bad)
  40642f:	outs   dx,DWORD PTR ds:[esi]
  406430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406431:	sbb    BYTE PTR [edi],bh
  406433:	add    BYTE PTR [ecx+esi*8],dl
  406436:	pushw  cs
  406438:	je     0x40640a
  40643a:	add    ah,BYTE PTR [edi-0x113e6f34]
  406440:	jno    0x4063ca
  406442:	lock dec ecx
  406444:	ret    0xc3da
  406447:	rol    BYTE PTR [eax-0x3988abd9],0x6d
  40644e:	inc    eax
  40644f:	push   esp
  406450:	cmc    
  406451:	(bad)  
  406452:	fsub   st,st(3)
  406454:	inc    ebp
  406455:	addr16 mov bl,0xef
  406458:	xor    al,0xe1
  40645a:	shr    DWORD PTR [edi-0x7a],0xf4
  40645e:	inc    edx
  40645f:	lds    esi,FWORD PTR [ecx+0x1d]
  406462:	or     al,0x12
  406464:	loope  0x406456
  406466:	inc    ebp
  406467:	xor    eax,0xde3940ca
  40646c:	inc    edi
  40646d:	sbb    ch,BYTE PTR [ebx-0x27e7090a]
  406473:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406475:	push   esp
  406476:	push   ds
  406477:	cmp    ebx,DWORD PTR [ebx]
  406479:	pop    edi
  40647a:	xchg   esp,eax
  40647b:	bound  ebp,QWORD PTR [eax+0x30]
  40647e:	adc    dh,0x14
  406481:	or     bl,dl
  406483:	sbb    eax,DWORD PTR [edi]
  406485:	and    al,0xeb
  406487:	adc    DWORD PTR [ecx-0x6c],ecx
  40648a:	xchg   edi,eax
  40648b:	push   edx
  40648c:	cmp    al,0x52
  40648e:	imul   edx,DWORD PTR [ecx+0x38],0x60
  406492:	leave  
  406493:	mov    cl,0xc5
  406495:	push   ebx
  406496:	int3   
  406497:	pop    es
  406498:	test   BYTE PTR [eax],ch
  40649a:	push   ss
  40649b:	push   ds
  40649c:	mov    es,WORD PTR [esi]
  40649e:	sbb    eax,eax
  4064a0:	sub    DWORD PTR [edx-0x7443e691],edi
  4064a6:	aad    0xb6
  4064a8:	inc    esp
  4064a9:	or     DWORD PTR [ecx+0x4b1a3d82],edi
  4064af:	dec    ecx
  4064b0:	cwde   
  4064b1:	push   edi
  4064b2:	or     dh,BYTE PTR [eax+0x36091665]
  4064b8:	out    dx,al
  4064b9:	xchg   esp,eax
  4064ba:	mov    al,0x41
  4064bc:	out    dx,al
  4064bd:	jae    0x4064b1
  4064bf:	and    eax,DWORD PTR [edi]
  4064c1:	inc    ebx
  4064c2:	mov    ah,BYTE PTR [eax-0x28e11ea7]
  4064c8:	push   cs
  4064c9:	(bad)  
  4064ca:	pushf  
  4064cb:	pop    ds
  4064cc:	aad    0x2e
  4064ce:	xor    bh,BYTE PTR [edx+0x15]
  4064d1:	inc    ecx
  4064d2:	retf   0x229e
  4064d5:	pop    ss
  4064d6:	loope  0x4064cd
  4064d8:	sub    DWORD PTR [ebp+0x38],edi
  4064db:	xor    al,0x50
  4064dd:	aaa    
  4064de:	xor    al,0x62
  4064e0:	sub    al,0x10
  4064e2:	jo     0x406506
  4064e4:	pop    esi
  4064e5:	jb     0x406502
  4064e7:	cli    
  4064e8:	js     0x4064eb
  4064ea:	or     eax,0x95d08884
  4064ef:	lea    eax,[esi-0x2]
  4064f2:	(bad)  
  4064f4:	(bad)  
  4064f5:	jns    0x406501
  4064f7:	int3   
  4064f8:	pop    esi
  4064f9:	xchg   esi,eax
  4064fa:	fidiv  WORD PTR [ebx+0x7]
  4064fd:	jne    0x4064f2
  4064ff:	push   cs
  406500:	shr    DWORD PTR [esi],0x11
  406503:	popa   
  406504:	jbe    0x4064dc
  406506:	push   ebx
  406507:	(bad)  
  406508:	xchg   esp,eax
  406509:	add    eax,0x39e18674
  40650e:	inc    esp
  40650f:	clc    
  406510:	mov    bl,0xb9
  406512:	adc    BYTE PTR [ecx],bl
  406514:	stos   BYTE PTR es:[edi],al
  406515:	aad    0x99
  406517:	call   0x18018b50
  40651c:	inc    ebp
  40651d:	ins    BYTE PTR es:[edi],dx
  40651e:	add    BYTE PTR [ebx-0x7fc7004],cl
  406524:	adc    BYTE PTR [ebp-0x6feb5ece],bh
  40652a:	jecxz  0x40655b
  40652c:	sbb    al,0x56
  40652e:	mov    edx,0x8cff2b67
  406533:	jmp    0xb687:0xa89a79bb
  40653a:	mov    dh,0x2
  40653c:	les    eax,FWORD PTR [edi+0x36777edb]
  406542:	cmp    DWORD PTR [esp+ecx*2],edi
  406545:	ds aas 
  406547:	rol    DWORD PTR [ecx-0x294da833],1
  40654d:	std    
  40654e:	pop    ds
  40654f:	cmp    BYTE PTR [edi],cl
  406551:	and    BYTE PTR [eax],dl
  406553:	cld    
  406554:	and    DWORD PTR [edx],edx
  406556:	jns    0x40650d
  406558:	push   es
  406559:	adc    ebx,DWORD PTR [ebx+0x4e]
  40655c:	mov    bl,0x8
  40655e:	xchg   esi,eax
  40655f:	xchg   ebx,eax
  406560:	enter  0x114a,0xdc
  406564:	std    
  406565:	adc    al,0x35
  406567:	sub    bl,BYTE PTR [ecx]
  406569:	ret    
  40656a:	jmp    0x915cb154
  40656f:	icebp  
  406570:	imul   esp,DWORD PTR [esi+0x1176caad],0xffffff84
  406577:	sub    BYTE PTR [esi],dh
  406579:	cmp    BYTE PTR [edi+0x20],dl
  40657c:	mov    BYTE PTR [ebx-0x5d0869b1],ah
  406582:	mov    ah,0x58
  406584:	xor    bh,bh
  406586:	pop    ds
  406587:	and    edx,DWORD PTR [eax+edi*1-0x491aa321]
  40658e:	mov    bl,0x4f
  406590:	mov    ebx,es
  406592:	enter  0x7074,0x99
  406596:	adc    eax,0xb369046d
  40659b:	and    BYTE PTR [edx+0x49],0x54
  40659f:	sar    DWORD PTR [ecx-0x63743270],cl
  4065a5:	or     BYTE PTR [ecx+0x7d],0x61
  4065a9:	mov    edi,DWORD PTR [esi+0x69]
  4065ac:	push   0xffffffdc
  4065ae:	mov    eax,0xeef0ff3d
  4065b3:	xor    ecx,DWORD PTR [eax+0x32e04fd6]
  4065b9:	xchg   edx,eax
  4065ba:	jl     0x40657b
  4065bc:	fsubr  QWORD PTR [eax+0xa]
  4065bf:	test   BYTE PTR [ebp+0x6a],dh
  4065c2:	and    BYTE PTR [ebp-0x28],al
  4065c5:	int    0x8f
  4065c7:	push   0x12
  4065c9:	clc    
  4065ca:	iret   
  4065cb:	mov    ebp,0xc9496583
  4065d0:	jb     0x40655d
  4065d2:	icebp  
  4065d3:	lods   al,BYTE PTR ds:[esi]
  4065d4:	sub    BYTE PTR [ecx-0x273a0e26],0x61
  4065db:	push   es
  4065dc:	dec    esp
  4065dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065de:	js     0x40660d
  4065e0:	xchg   edx,eax
  4065e1:	xlat   BYTE PTR ds:[ebx]
  4065e2:	jl     0x406634
  4065e4:	rcl    ebp,0xb1
  4065e7:	cmp    ch,ah
  4065e9:	inc    esp
  4065ea:	or     bl,BYTE PTR [ebp-0x68]
  4065ed:	add    BYTE PTR ds:0x167c1297,bl
  4065f3:	pop    ebp
  4065f4:	hlt    
  4065f5:	daa    
  4065f6:	mov    ebx,0xa8295e3c
  4065fb:	inc    esp
  4065fc:	mov    ecx,0x442b1a9b
  406601:	shl    dh,cl
  406603:	or     bh,al
  406605:	jmp    0x4065d2
  406607:	icebp  
  406608:	div    BYTE PTR [edx]
  40660a:	adc    BYTE PTR [eax],cl
  40660c:	sbb    dl,BYTE PTR [ebx]
  40660e:	scas   al,BYTE PTR es:[edi]
  40660f:	push   esp
  406610:	jg     0x406675
  406612:	sub    BYTE PTR [esi+0x21],cl
  406615:	cdq    
  406616:	aam    0x37
  406618:	call   0xfc74a560
  40661d:	cld    
  40661e:	fidivr DWORD PTR [edi-0x30]
  406621:	push   edi
  406622:	and    eax,ecx
  406624:	push   ds
  406625:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406626:	ficomp DWORD PTR [esi+ecx*4-0x73]
  40662a:	push   es
  40662b:	aam    0x3
  40662d:	pop    esp
  40662e:	outs   dx,DWORD PTR ds:[esi]
  40662f:	lahf   
  406630:	xlat   BYTE PTR ds:[ebx]
  406631:	inc    ebp
  406632:	ret    0x6977
  406635:	fidiv  DWORD PTR [eax+0x47]
  406638:	popa   
  406639:	fucomi st,st(6)
  40663b:	jge    0x406653
  40663d:	xor    edx,DWORD PTR [ecx]
  40663f:	xchg   BYTE PTR [esi-0x3abd5492],al
  406645:	fwait
  406646:	out    0x7f,al
  406648:	jecxz  0x40667c
  40664a:	mul    BYTE PTR [eax]
  40664c:	cmp    cl,dl
  40664e:	or     BYTE PTR [ecx-0x19],ch
  406651:	cwde   
  406652:	xchg   ebp,eax
  406653:	sbb    esp,DWORD PTR [esi+0x6f882767]
  406659:	popa   
  40665a:	out    0x1d,eax
  40665c:	mov    dl,0xe6
  40665e:	stc    
  40665f:	jmp    0x1c34:0x87e72cfe
  406666:	jmp    0x406631
  406668:	xchg   edx,eax
  406669:	sub    eax,0x81221996
  40666e:	xor    dl,BYTE PTR [esi]
  406670:	dec    edx
  406671:	sbb    DWORD PTR [edi-0x5c33abf2],esi
  406677:	in     al,dx
  406678:	test   al,0x8e
  40667a:	iret   
  40667b:	pop    esp
  40667c:	xchg   BYTE PTR [ecx-0x75],bl
  40667f:	sti    
  406680:	ret    0xb701
  406683:	adc    bh,BYTE PTR [eax+0x2e]
  406686:	add    eax,0xc05cbc53
  40668b:	mov    edx,eax
  40668d:	iret   
  40668e:	iret   
  40668f:	imul   edx,edx,0xfffffff9
  406692:	add    DWORD PTR ds:0x3c253afc,esi
  406698:	pcmpgtd mm7,QWORD PTR [edx]
  40669b:	xor    al,0xe6
  40669d:	and    al,0xd0
  40669f:	xchg   ecx,eax
  4066a0:	hlt    
  4066a1:	push   cs
  4066a2:	adc    bh,BYTE PTR [ecx]
  4066a4:	push   es
  4066a5:	ja     0x4066a8
  4066a7:	push   cs
  4066a8:	(bad)  
  4066a9:	shl    bl,1
  4066ab:	popf   
  4066ac:	xor    cl,ch
  4066ae:	xchg   esp,eax
  4066af:	xchg   ecx,eax
  4066b0:	adc    DWORD PTR [esi+edx*4],0x51382904
  4066b7:	xchg   ebx,eax
  4066b8:	jmp    0x1ce393ea
  4066bd:	or     eax,0xad9d51f5
  4066c2:	mov    al,0x90
  4066c4:	in     al,dx
  4066c5:	sub    eax,0x93662f5f
  4066ca:	div    bh
  4066cc:	jge    0x406721
  4066ce:	jns    0x406735
  4066d0:	push   edi
  4066d1:	dec    ebp
  4066d2:	inc    eax
  4066d3:	or     DWORD PTR [ecx+0x6c],esp
  4066d6:	retf   
  4066d7:	dec    esi
  4066d8:	xchg   DWORD PTR [ebp-0x27],edi
  4066db:	sub    al,0x92
  4066dd:	push   cs
  4066de:	repnz pop ss
  4066e0:	fadd   QWORD PTR [ebp+0x30]
  4066e3:	mov    edi,0x616c4ba2
  4066e8:	or     BYTE PTR ds:0xd3eb0878,bh
  4066ee:	xlat   BYTE PTR ds:[ebx]
  4066ef:	cdq    
  4066f0:	cmp    ah,cl
  4066f2:	mov    edx,0xb9422c20
  4066f7:	lea    ebx,[edx+0x3c]
  4066fa:	int3   
  4066fb:	lock clc 
  4066fd:	in     eax,dx
  4066fe:	inc    edi
  4066ff:	or     eax,0x14bac1d8
  406704:	mov    al,ds:0x3457bf3f
  406709:	pop    ebx
  40670a:	xchg   esp,eax
  40670b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40670c:	daa    
  40670d:	dec    ebp
  40670e:	fadd   QWORD PTR [edx+0x433b4fb7]
  406714:	adc    ecx,DWORD PTR [ebx+edx*4-0x62]
  406718:	jnp    0x406743
  40671a:	mov    ds:0xbce109b5,al
  40671f:	dec    esi
  406720:	xor    eax,0xc94d93b7
  406725:	out    dx,eax
  406726:	or     eax,0x14c6628f
  40672b:	push   esi
  40672c:	or     eax,0x64ee8f8d
  406731:	sbb    eax,0xf770235c
  406736:	aaa    
  406737:	loopne 0x406749
  406739:	mov    al,0xb
  40673b:	push   eax
  40673c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40673d:	shr    DWORD PTR [edx],cl
  40673f:	nop
  406740:	add    dl,cl
  406742:	jge    0x406721
  406744:	enter  0xbe73,0x98
  406748:	out    0x17,eax
  40674a:	jb     0x406743
  40674c:	sbb    BYTE PTR [edi],ah
  40674e:	test   DWORD PTR [edi-0x2e620df2],eax
  406754:	inc    edi
  406755:	pop    ebp
  406756:	icebp  
  406757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406758:	pop    edi
  406759:	mov    eax,0x36d2a8fe
  40675e:	call   0xd8d2:0xfe59c30e
  406765:	add    eax,0x85e3f7c6
  40676a:	cli    
  40676b:	fwait
  40676c:	mov    esp,0x6d8feb19
  406771:	add    ecx,DWORD PTR [eax-0x4e]
  406774:	or     BYTE PTR [ecx+0x72c1705f],al
  40677a:	das    
  40677b:	or     al,0x7
  40677d:	push   esp
  40677e:	mov    ecx,0x2e297e5f
  406783:	inc    edx
  406784:	repz add eax,0x78a119c5
  40678a:	dec    esp
  40678b:	mov    ah,0xb2
  40678d:	mul    DWORD PTR [esi-0x54]
  406790:	dec    edi
  406791:	xlat   BYTE PTR ds:[ebx]
  406792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406793:	aam    0xca
  406795:	dec    esi
  406796:	call   0x9e15:0xbe11d424
  40679d:	(bad)  
  40679e:	jnp    0x4067d2
  4067a0:	stos   DWORD PTR es:[edi],eax
  4067a1:	cmp    ebp,ecx
  4067a3:	pop    ebp
  4067a4:	shr    BYTE PTR [ebx],1
  4067a6:	ret    
  4067a7:	xchg   esi,eax
  4067a8:	stos   BYTE PTR es:[edi],al
  4067a9:	(bad)  
  4067aa:	aas    
  4067ab:	pop    ds
  4067ac:	repz js 0x406787
  4067af:	inc    ebp
  4067b0:	loopne 0x406763
  4067b2:	and    al,0xa6
  4067b4:	jae    0x40675e
  4067b6:	cwde   
  4067b7:	add    eax,0xd437f645
  4067bc:	int3   
  4067bd:	mov    eax,0xfaa52ced
  4067c2:	add    BYTE PTR [edi-0x10],ah
  4067c5:	cmp    eax,0x9d9c237e
  4067ca:	pusha  
  4067cb:	out    dx,al
  4067cc:	xchg   esp,eax
  4067cd:	sbb    dh,al
  4067cf:	jae    0x4067de
  4067d1:	or     eax,0x428cd497
  4067d6:	cld    
  4067d7:	imul   ebx,eax,0xffffffdd
  4067da:	addr16 das 
  4067dc:	int    0x32
  4067de:	sub    DWORD PTR [edi+eiz*8-0x31],ebp
  4067e2:	push   es
  4067e3:	xor    al,0x73
  4067e5:	pop    esp
  4067e6:	mov    edx,0xd615ccba
  4067eb:	nop
  4067ec:	xchg   edi,eax
  4067ed:	jecxz  0x40680f
  4067ef:	push   edx
  4067f0:	push   ss
  4067f1:	(bad)
  4067f5:	pop    edx
  4067f6:	dec    edx
  4067f7:	stc    
  4067f8:	push   ebx
  4067f9:	sub    ebx,DWORD PTR [edi]
  4067fb:	aaa    
  4067fc:	adc    edx,DWORD PTR [ebp-0x8]
  4067ff:	ds fwait
  406801:	mov    cl,0xa3
  406803:	fs xor eax,0x345253c7
  406809:	jno    0x406851
  40680b:	xchg   esi,eax
  40680c:	aad    0x6d
  40680e:	mov    ds:0xd6f71415,al
  406813:	pop    esp
  406814:	popf   
  406815:	ret    
  406816:	ja     0x406829
  406818:	std    
  406819:	pushf  
  40681a:	dec    ebx
  40681b:	push   edi
  40681c:	loop   0x4067c3
  40681e:	jne    0x406820
  406820:	hlt    
  406821:	inc    edx
  406822:	mov    DWORD PTR [edx],ecx
  406824:	mul    BYTE PTR [esi]
  406826:	aaa    
  406827:	inc    esi
  406828:	fwait
  406829:	shr    BYTE PTR [esi],1
  40682b:	or     DWORD PTR ds:0x6519fde0,ebx
  406831:	lock imul edi,DWORD PTR [eax-0x4a64612a],0xee45970f
  40683c:	imul   esp,DWORD PTR [ebx-0x48841bb3],0x5e814189
  406846:	and    edi,ebp
  406848:	(bad)  
  406849:	(bad)  
  40684a:	js     0x4067ef
  40684c:	add    DWORD PTR [eax+ebp*4-0x10],eax
  406850:	and    ch,BYTE PTR [ebx]
  406852:	xchg   ecx,eax
  406853:	adc    DWORD PTR [esi-0x2536eb20],ebp
  406859:	or     DWORD PTR [ebx+0x9],edi
  40685c:	and    eax,0xb237910e
  406861:	into   
  406862:	mov    bl,0x6e
  406864:	(bad)  
  406865:	fadd   DWORD PTR [ecx]
  406867:	sub    DWORD PTR [ebx-0x38],esi
  40686a:	jmp    0xacf4d16c
  40686f:	pop    es
  406870:	(bad)  [edi-0x37]
  406873:	lahf   
  406874:	retf   
  406875:	adc    cl,BYTE PTR [eax]
  406877:	dec    ecx
  406878:	push   cs
  406879:	les    ebp,FWORD PTR [ebx-0x5b11b089]
  40687f:	push   ss
  406880:	sub    DWORD PTR [ebp+0x3e],ebx
  406883:	push   edi
  406884:	loopne 0x406819
  406886:	cmp    DWORD PTR [ecx],esp
  406888:	dec    ebx
  406889:	lods   eax,DWORD PTR ds:[esi]
  40688a:	xchg   edx,eax
  40688b:	dec    esi
  40688c:	mov    dh,0xc6
  40688e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40688f:	xchg   BYTE PTR [esi-0x2fd9da],bl
  406895:	loopne 0x406853
  406897:	adc    bh,BYTE PTR [ebx]
  406899:	mov    ecx,0xe9070797
  40689e:	add    edi,DWORD PTR [edx-0x3100edd2]
  4068a4:	mov    eax,es
  4068a6:	fs cmc 
  4068a8:	addr16 jns 0x4068c0
  4068ab:	fcomp  DWORD PTR ds:0xf72f5d03
  4068b1:	int    0x98
  4068b3:	push   ecx
  4068b4:	jmp    0x4068b2
  4068b6:	mov    esi,0x9dc95ae6
  4068bb:	mov    al,ds:0xce713947
  4068c0:	fwait
  4068c1:	adc    BYTE PTR [edi+0x2bbd556],ah
  4068c7:	sub    dh,ah
  4068c9:	add    eax,0x543919cc
  4068ce:	add    al,0x2c
  4068d0:	aam    0x19
  4068d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4068d3:	adc    dl,BYTE PTR [esi-0x7a624d39]
  4068d9:	dec    ebx
  4068da:	popa   
  4068db:	pop    ebp
  4068dc:	sub    DWORD PTR [ecx],0x58
  4068df:	popa   
  4068e0:	pop    esi
  4068e1:	fisttp QWORD PTR [edx+edx*1-0xa]
  4068e5:	test   al,0x20
  4068e7:	shl    DWORD PTR [esi+ebx*1-0xdc1c4ee],0x75
  4068ef:	jb     0x4068f4
  4068f1:	daa    
  4068f2:	mov    eax,ds:0xc085acde
  4068f7:	repz dec ecx
  4068f9:	mov    edi,0x1947eae1
  4068fe:	add    ch,cl
  406900:	mov    edx,0xb957ccc7
  406905:	adc    al,ch
  406907:	adc    dl,ah
  406909:	es jge 0x406893
  40690c:	cli    
  40690d:	sub    DWORD PTR es:[edx+0x654a55ea],ebx
  406914:	jb     0x406926
  406916:	jg     0x4068a1
  406918:	inc    ebx
  406919:	xor    eax,0x4db76332
  40691e:	push   ebx
  40691f:	jl     0x40697a
  406921:	es inc eax
  406923:	jp     0x406986
  406925:	adc    BYTE PTR [ecx+0x5f12a223],bl
  40692b:	push   esp
  40692c:	mov    ebx,0x9e65d30e
  406931:	repnz push ecx
  406933:	loope  0x406943
  406935:	cmp    al,0x2b
  406937:	push   edx
  406938:	adc    al,0xf3
  40693a:	mov    ah,0x21
  40693c:	test   BYTE PTR [eax+0x43],0x88
  406940:	popf   
  406941:	loope  0x4069b1
  406943:	mov    bh,0xd0
  406945:	sbb    ah,dh
  406947:	push   es
  406948:	jge    0x406916
  40694a:	out    0x60,eax
  40694c:	and    eax,0xeef655b4
  406951:	in     al,0xe0
  406953:	nop
  406954:	ins    DWORD PTR es:[edi],dx
  406955:	cmp    al,0x8e
  406957:	fldcw  WORD PTR [esi+0x1f]
  40695a:	test   DWORD PTR [edi-0x211e9dc5],0xb73be97c
  406964:	mov    bh,0xd8
  406966:	nop    DWORD PTR [edi]
  406969:	fdivr  st(7),st
  40696b:	mov    al,0xb7
  40696d:	imul   eax,ebx,0xfc9d35d6
  406973:	ins    DWORD PTR es:[edi],dx
  406974:	ret    
  406975:	sub    al,0xa7
  406977:	(bad)  
  406979:	adc    DWORD PTR [esi],eax
  40697b:	test   BYTE PTR [edx+0x0],ah
  40697e:	and    ebx,DWORD PTR [edi+0x30]
  406981:	popf   
  406982:	sub    BYTE PTR [eax-0x4e],cl
  406985:	cs fcmovnu st,st(0)
  406988:	lock push edx
  40698a:	mov    WORD PTR [edi+0x57676c4],fs
  406990:	test   ah,dl
  406992:	nop
  406993:	shr    BYTE PTR [eax],1
  406995:	mov    esp,0xeb879da0
  40699a:	push   cs
  40699b:	xlat   BYTE PTR ds:[ebx]
  40699c:	stos   BYTE PTR es:[edi],al
  40699d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40699e:	cmc    
  40699f:	jne    0x406a1c
  4069a1:	mov    eax,ds:0xaf896ba5
  4069a6:	and    ah,BYTE PTR [esi]
  4069a8:	pop    ecx
  4069a9:	es int 0x3f
  4069ac:	mov    ebx,0xa5bf5a21
  4069b1:	bound  eax,QWORD PTR [eax+0x59]
  4069b4:	daa    
  4069b5:	ins    BYTE PTR es:[edi],dx
  4069b6:	sub    cl,ah
  4069b8:	retf   
  4069b9:	scas   al,BYTE PTR es:[edi]
  4069ba:	mov    ah,0x60
  4069bc:	(bad)  
  4069bd:	adc    ebx,esi
  4069bf:	retf   0x1603
  4069c2:	mov    ebp,0x231d604a
  4069c7:	mov    ds:0xeb5a7b61,al
  4069cc:	fucomp st(2)
  4069ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4069cf:	xchg   edx,eax
  4069d0:	pop    esi
  4069d1:	push   0xe91e25ca
  4069d6:	imul   esi,DWORD PTR [ecx+0x4a],0x8360cd6d
  4069dd:	cdq    
  4069de:	mov    BYTE PTR [ebx+0x73087a50],dl
  4069e4:	jbe    0x4069e4
  4069e6:	popf   
  4069e7:	(bad)
  4069eb:	mov    edi,0x4a695111
  4069f0:	dec    edi
  4069f1:	lods   eax,DWORD PTR ds:[esi]
  4069f2:	rol    eax,0xe5
  4069f5:	leave  
  4069f6:	push   esp
  4069f7:	ins    BYTE PTR es:[edi],dx
  4069f8:	xchg   dl,dh
  4069fa:	nop
  4069fb:	daa    
  4069fc:	outs   dx,BYTE PTR ds:[esi]
  4069fd:	pushf  
  4069fe:	sti    
  4069ff:	inc    edi
  406a00:	sahf   
  406a01:	lahf   
  406a02:	jae    0x406a41
  406a04:	fnstsw WORD PTR [ecx-0x70]
  406a07:	push   esp
  406a08:	push   0xf9ed3010
  406a0d:	aaa    
  406a0e:	clc    
  406a0f:	push   es
  406a10:	pusha  
  406a11:	sub    ecx,DWORD PTR [eax]
  406a13:	call   0x8b8e0d7f
  406a18:	and    edi,edi
  406a1a:	xchg   esi,eax
  406a1b:	or     ah,BYTE PTR [eax-0x52]
  406a1e:	dec    edi
  406a1f:	jp     0x406a74
  406a21:	push   es
  406a22:	ficom  DWORD PTR [edi]
  406a24:	sbb    eax,0xffc37fae
  406a29:	stos   BYTE PTR es:[edi],al
  406a2a:	pusha  
  406a2b:	push   ss
  406a2c:	fwait
  406a2d:	pushf  
  406a2e:	push   cs
  406a2f:	push   eax
  406a30:	cmp    bl,ch
  406a32:	cmp    ebx,DWORD PTR [edx-0x52]
  406a35:	push   ebp
  406a36:	dec    ebx
  406a37:	ss mov dl,0xbb
  406a3a:	inc    ecx
  406a3b:	test   DWORD PTR [ebx+esi*2-0x43],eax
  406a3f:	sar    edi,0x4d
  406a42:	je     0x406a9f
  406a44:	or     ebx,DWORD PTR [ebx+0x11]
  406a47:	mov    dl,0x7c
  406a49:	adc    eax,0x575af458
  406a4e:	add    dl,BYTE PTR [esp+eiz*4]
  406a51:	dec    edx
  406a52:	jmp    0x406a33
  406a54:	lods   eax,DWORD PTR ds:[esi]
  406a55:	mov    ebx,0xb5c5de7c
  406a5a:	gs into 
  406a5c:	stos   DWORD PTR es:[edi],eax
  406a5d:	adc    edi,DWORD PTR [edi+eax*1-0x2b835d3f]
  406a64:	out    dx,al
  406a65:	outs   dx,BYTE PTR ds:[esi]
  406a66:	sub    eax,ecx
  406a68:	jg     0x406a8b
  406a6a:	push   edx
  406a6b:	mov    eax,ds:0xfdd06df7
  406a70:	sti    
  406a71:	xchg   ecx,eax
  406a72:	push   ds
  406a73:	fidiv  DWORD PTR es:0xa2590636
  406a7a:	(bad)  
  406a7b:	xchg   esi,eax
  406a7c:	(bad)  
  406a7d:	loop   0x406a13
  406a7f:	dec    al
  406a81:	mov    dh,BYTE PTR [eax+0x7a]
  406a84:	ja     0x406ab9
  406a86:	cs push ecx
  406a88:	jle    0x406b05
  406a8a:	imul   edi,DWORD PTR [ebp+0x19],0xffffffb9
  406a8e:	push   edx
  406a8f:	add    DWORD PTR [edx],ebx
  406a91:	fsubr  st,st(0)
  406a93:	mov    cl,0xf3
  406a95:	pusha  
  406a96:	sbb    al,0xf3
  406a98:	push   edi
  406a99:	inc    esi
  406a9a:	mov    al,ds:0xd2fbd591
  406a9f:	or     edi,esi
  406aa1:	jo     0x406ac5
  406aa3:	shl    DWORD PTR [ebp-0x5dce6b8],0x7c
  406aaa:	popf   
  406aab:	stos   BYTE PTR es:[edi],al
  406aac:	loopne 0x406ae4
  406aae:	mov    ecx,0x384e5786
  406ab3:	in     al,0xaf
  406ab5:	mov    ebx,0xce3fb5cd
  406aba:	inc    eax
  406abb:	sar    BYTE PTR [edx-0x6473eca7],0xfc
  406ac2:	ins    BYTE PTR es:[edi],dx
  406ac3:	test   eax,0xde01443
  406ac8:	jge    0x406a5d
  406aca:	xchg   esi,eax
  406acb:	jmp    0x5ab5be2
  406ad0:	bound  ebx,QWORD PTR [esp+eiz*2-0x775b0274]
  406ad7:	and    BYTE PTR [eax-0x8],cl
  406ada:	in     al,0x6f
  406adc:	cli    
  406add:	add    DWORD PTR [esi+0x32],esi
  406ae0:	lds    edi,FWORD PTR [edx]
  406ae2:	pop    ecx
  406ae3:	jns    0x406acc
  406ae5:	jge    0x406ae1
  406ae7:	push   0xfffffffe
  406ae9:	fwait
  406aea:	push   eax
  406aeb:	xor    eax,DWORD PTR [ecx+eiz*8]
  406aee:	mov    ebx,0xbe2f4c26
  406af3:	test   al,0xe8
  406af5:	test   DWORD PTR [ecx],edi
  406af7:	and    dl,BYTE PTR [ebp+0x792a4ce3]
  406afd:	xchg   esp,eax
  406afe:	xor    edi,DWORD PTR [ebp+0x37898e79]
  406b04:	pushf  
  406b05:	push   es
  406b06:	jae    0x406b75
  406b08:	or     eax,0x5f7567d1
  406b0d:	ja     0x406b01
  406b0f:	mov    DWORD PTR [edi+eax*2],eax
  406b12:	lods   al,BYTE PTR ds:[esi]
  406b13:	mov    cl,0x2c
  406b15:	out    dx,al
  406b16:	in     eax,dx
  406b17:	clc    
  406b18:	cmc    
  406b19:	imul   ebx,esi,0x9
  406b1c:	dec    esp
  406b1d:	adc    esp,DWORD PTR [ebx-0x5c066d7a]
  406b23:	xor    al,0xc6
  406b25:	add    eax,0x4d072312
  406b2a:	outs   dx,BYTE PTR ds:[esi]
  406b2b:	outs   dx,DWORD PTR ds:[esi]
  406b2c:	pop    ds
  406b2d:	jp     0x406ad4
  406b2f:	sub    BYTE PTR [esp+esi*4],0xa1
  406b33:	in     al,0x2f
  406b35:	(bad)  
  406b36:	xchg   ebx,eax
  406b37:	xor    edi,DWORD PTR [ebx+0x1ab9ac88]
  406b3d:	lahf   
  406b3e:	es int3 
  406b40:	iret   
  406b41:	dec    ebx
  406b42:	push   DWORD PTR [ebp+0x768c5378]
  406b48:	sbb    al,0x20
  406b4a:	shr    BYTE PTR [ecx],1
  406b4c:	xor    ebp,DWORD PTR [ecx]
  406b4e:	mov    DWORD PTR [eax+0x7b3987d1],ecx
  406b54:	mov    ah,0x22
  406b56:	cmp    eax,0x1b183056
  406b5b:	sbb    eax,0x3b4cbf91
  406b60:	ret    0x21f4
  406b63:	rol    DWORD PTR [edx+0x6ac38126],cl
  406b69:	imul   BYTE PTR [ebp-0x18]
  406b6c:	and    al,BYTE PTR [ebx]
  406b6e:	(bad)  
  406b6f:	retf   
  406b70:	mov    DWORD PTR [edi],ebx
  406b72:	jo     0x406b75
  406b74:	push   DWORD PTR [edi-0x80]
  406b77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b78:	adc    DWORD PTR [esi-0x18f86d8e],0x60a3341b
  406b82:	sub    ch,BYTE PTR [edx+0x6a]
  406b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b86:	adc    dh,bh
  406b88:	and    ch,BYTE PTR [edx-0x53]
  406b8b:	sti    
  406b8c:	in     al,dx
  406b8d:	jg     0x406be3
  406b8f:	jbe    0x406bde
  406b91:	in     al,0x57
  406b93:	jo     0x406b5b
  406b95:	dec    edx
  406b96:	xchg   edx,eax
  406b97:	sub    cl,cl
  406b99:	xchg   esi,eax
  406b9a:	fisttp DWORD PTR [edi-0x7ea7b772]
  406ba0:	daa    
  406ba1:	lods   al,BYTE PTR ds:[esi]
  406ba2:	jg     0x406b60
  406ba4:	popf   
  406ba5:	cmp    edi,0xd2702d2f
  406bab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bac:	pop    edi
  406bad:	dec    edx
  406bae:	mov    ebp,0xe2628358
  406bb3:	xlat   BYTE PTR ds:[ebx]
  406bb4:	cmp    al,0xd9
  406bb6:	xchg   esp,eax
  406bb7:	test   al,0xd7
  406bb9:	mov    al,0x2d
  406bbb:	rcr    DWORD PTR [edi+0x7c36027f],1
  406bc1:	jecxz  0x406c00
  406bc3:	xor    BYTE PTR [ecx+edx*1],dh
  406bc6:	out    0x1c,eax
  406bc8:	sbb    BYTE PTR [ebx+0x6e],bl
  406bcb:	jne    0x406b9a
  406bcd:	jno    0x406b9e
  406bcf:	test   al,0x43
  406bd1:	daa    
  406bd2:	into   
  406bd3:	jmp    DWORD PTR fs:[edi]
  406bd6:	ins    DWORD PTR es:[edi],dx
  406bd7:	(bad)  
  406bd8:	sub    BYTE PTR [ebp+0x6f],ah
  406bdb:	add    ebx,DWORD PTR [ecx-0x5a3bc32d]
  406be1:	dec    DWORD PTR ds:[ebx+0x639225e1]
  406be8:	(bad)  
  406be9:	shl    BYTE PTR [ebx-0x6d],cl
  406bec:	or     al,0x22
  406bee:	loope  0x406bfc
  406bf0:	ret    
  406bf1:	lock sub DWORD PTR [edi+ebx*8],esp
  406bf5:	cmp    al,0x47
  406bf7:	mov    al,0x71
  406bf9:	das    
  406bfa:	mov    eax,0xa92ddd3
  406bff:	xchg   ebp,eax
  406c00:	jns    0x406c0a
  406c02:	and    eax,0x5c861019
  406c07:	sub    edi,ebx
  406c09:	dec    edi
  406c0a:	pop    eax
  406c0b:	bnd jbe 0x406c1c
  406c0e:	lods   eax,DWORD PTR ds:[esi]
  406c0f:	out    dx,al
  406c10:	cmovge edi,ebx
  406c13:	xchg   ebp,eax
  406c14:	dec    BYTE PTR [ebx]
  406c16:	retf   0x4bc3
  406c19:	fdivr  st,st(6)
  406c1b:	dec    ebx
  406c1c:	and    ch,bl
  406c1e:	mov    ebx,0x83bf1edd
  406c23:	push   0xffffffd3
  406c25:	data16 arpl WORD PTR [edi-0x64a4b677],bx
  406c2c:	adc    BYTE PTR [esi+0x9],cl
  406c2f:	jg     0x406caf
  406c31:	and    dh,BYTE PTR [ecx]
  406c33:	mov    cl,0xe1
  406c35:	dec    ebx
  406c36:	(bad)  
  406c37:	mov    ch,0xea
  406c39:	mov    WORD PTR ds:0x50db9267,?
  406c3f:	inc    ecx
  406c40:	jge    0x406cb0
  406c42:	leave  
  406c43:	shr    esp,1
  406c45:	adc    edi,esp
  406c47:	jne    0x406c63
  406c49:	and    ecx,DWORD PTR [edi+0x15]
  406c4c:	xchg   BYTE PTR [edi+eax*2-0x290ed0f0],bl
  406c53:	mov    bl,0xc8
  406c55:	sti    
  406c56:	push   0xfffffffd
  406c58:	js     0x406ccb
  406c5a:	(bad)  
  406c5b:	outs   dx,DWORD PTR ds:[esi]
  406c5c:	stos   DWORD PTR es:[edi],eax
  406c5d:	retf   
  406c5e:	xchg   ecx,eax
  406c5f:	pop    esi
  406c60:	aam    0xc7
  406c62:	cmp    BYTE PTR [eax-0x3779cbfd],cl
  406c68:	jnp    0x406c7f
  406c6a:	and    ch,al
  406c6c:	ficomp DWORD PTR [eax]
  406c6e:	cmp    BYTE PTR [edx],0xf9
  406c71:	sahf   
  406c72:	cdq    
  406c73:	and    BYTE PTR [eax+0x41],0x38
  406c77:	jnp    0x406cf6
  406c79:	stc    
  406c7a:	inc    edx
  406c7b:	xor    eax,0x2acf74d2
  406c80:	xchg   edx,eax
  406c81:	xor    BYTE PTR [ebx-0x4ffb9b52],dl
  406c87:	push   eax
  406c88:	std    
  406c89:	sbb    al,0x6f
  406c8b:	xchg   BYTE PTR [eax],bh
  406c8d:	inc    edi
  406c8e:	out    dx,eax
  406c8f:	and    eax,0x4a426451
  406c94:	dec    esp
  406c95:	pop    ss
  406c96:	aam    0x74
  406c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c99:	xor    esp,DWORD PTR [ebx]
  406c9b:	loopne 0x406d0c
  406c9d:	jge    0x406c67
  406c9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ca0:	push   ebx
  406ca1:	xchg   DWORD PTR [edi+0x780fa209],esi
  406ca7:	inc    ebp
  406ca8:	test   DWORD PTR [ebx+0x51e6049b],esi
  406cae:	dec    ecx
  406caf:	(bad)  
  406cb0:	test   DWORD PTR [ebp+eiz*2+0x206849d7],ebx
  406cb7:	pop    es
  406cb8:	loope  0x406d0a
  406cba:	daa    
  406cbb:	sbb    ah,BYTE PTR [edi]
  406cbd:	sbb    eax,0xe995345c
  406cc2:	stos   DWORD PTR es:[edi],eax
  406cc3:	jl     0x406c62
  406cc5:	push   ebx
  406cc6:	mov    ch,BYTE PTR [esp+edx*1-0x40e2205d]
  406ccd:	adc    edx,eax
  406ccf:	fiadd  DWORD PTR [eax+0x64512dee]
  406cd5:	jne    0x406c8f
  406cd7:	daa    
  406cd8:	push   ds
  406cd9:	dec    ecx
  406cda:	div    ch
  406cdc:	jae    0x406caa
  406cde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406cdf:	out    dx,eax
  406ce0:	push   ss
  406ce1:	sbb    ah,bl
  406ce3:	dec    eax
  406ce4:	imul   edi,DWORD PTR [ecx+0x2e8d3b55],0x4224a22d
  406cee:	lea    esp,[edx-0x468a421d]
  406cf4:	je     0x406c76
  406cf6:	pop    ebp
  406cf7:	lods   eax,DWORD PTR ds:[esi]
  406cf8:	scas   al,BYTE PTR es:[edi]
  406cf9:	aam    0x15
  406cfb:	mov    bh,0xfd
  406cfd:	cmp    DWORD PTR [eax+0x3834b3db],eax
  406d03:	stos   BYTE PTR es:[edi],al
  406d04:	jmp    FWORD PTR [ebx]
  406d06:	lock dec ecx
  406d08:	cmp    ch,bl
  406d0a:	and    BYTE PTR [ebx-0x62],0x47
  406d0e:	jb     0x406ce2
  406d10:	xor    BYTE PTR [esi+0x33a02697],0xe3
  406d17:	(bad)  [ecx+0x27]
  406d1a:	add    eax,0x45672e48
  406d1f:	out    dx,al
  406d20:	cwde   
  406d21:	je     0x406d27
  406d23:	sbb    al,0xf5
  406d25:	mov    BYTE PTR [ebp-0x2e],bl
  406d28:	pand   mm0,QWORD PTR [eax]
  406d2b:	std    
  406d2c:	xor    BYTE PTR [bp+di],ch
  406d2f:	test   eax,0xd146c368
  406d34:	cmp    BYTE PTR [eax-0x5a],0x51
  406d38:	cmp    al,0xd4
  406d3a:	stos   BYTE PTR es:[edi],al
  406d3b:	or     eax,0x3a129a7
  406d40:	(bad)  
  406d41:	mov    edi,0xf206db78
  406d46:	daa    
  406d47:	and    eax,0xc4070da4
  406d4c:	sbb    eax,0xd5f05be3
  406d51:	sti    
  406d52:	je     0x406d69
  406d54:	mov    al,ds:0xb6698f27
  406d59:	test   DWORD PTR [edx+0x6a5e0e92],0x1f096e1e
  406d63:	push   ebx
  406d64:	add    eax,0x53e80cd9
  406d69:	mov    ecx,0xd4b581c2
  406d6e:	call   0x510dfba5
  406d73:	xchg   ecx,eax
  406d74:	addr16 mov esi,0x5b10922f
  406d7a:	fs xor al,0x2e
  406d7d:	ret    
  406d7e:	mov    edx,0x359a67f9
  406d83:	loopne 0x406d21
  406d85:	aaa    
  406d86:	or     DWORD PTR [ecx+0x59e62dfd],ebp
  406d8c:	mov    edx,0xfbf26393
  406d91:	mov    esp,0xd1eff2ac
  406d96:	jnp    0x406d97
  406d98:	cwde   
  406d99:	xchg   ebp,eax
  406d9a:	and    eax,0x7feafba8
  406d9f:	push   ss
  406da0:	xor    esp,eax
  406da2:	jae    0x406ddb
  406da4:	pop    edx
  406da5:	das    
  406da6:	lea    esp,[esi]
  406da8:	jne    0x406df0
  406daa:	push   ss
  406dab:	stc    
  406dac:	fisubr DWORD PTR [edx+0x62]
  406daf:	or     cl,BYTE PTR [ecx+ebx*2-0x75]
  406db3:	loope  0x406d87
  406db5:	mov    al,ds:0x21f8a92b
  406dba:	xor    cl,cl
  406dbc:	jb     0x406dc3
  406dbe:	mov    ch,0x9
  406dc0:	push   0xfa911387
  406dc5:	(bad)  
  406dc6:	mov    cl,0xc
  406dc8:	arpl   WORD PTR [esp+esi*8],bp
  406dcb:	xor    DWORD PTR [edi],edx
  406dcd:	mov    eax,ds:0xd0abcd15
  406dd2:	add    DWORD PTR [ebx-0x4f],0xc6ae1c15
  406dd9:	cld    
  406dda:	inc    eax
  406ddb:	in     al,0xb9
  406ddd:	jp     0x406df7
  406ddf:	and    DWORD PTR [ebp+0x65],edi
  406de2:	pop    ss
  406de3:	sub    eax,0x470ad262
  406de8:	icebp  
  406de9:	mov    dl,0xef
  406deb:	sub    dh,bl
  406ded:	fs (bad) 
  406def:	stos   BYTE PTR es:[edi],al
  406df0:	daa    
  406df1:	fdivr  QWORD PTR [edx-0x5c988e6d]
  406df7:	inc    ebx
  406df8:	jmp    0x406e33
  406dfa:	and    eax,0x3e200a6
  406dff:	rol    DWORD PTR [esp+eax*4],0x7b
  406e03:	xor    BYTE PTR [ebx],dh
  406e05:	stos   BYTE PTR es:[edi],al
  406e06:	mov    bh,0xb4
  406e08:	mov    cl,0x5a
  406e0a:	mov    ecx,edx
  406e0c:	(bad)  
  406e0e:	sub    al,BYTE PTR [ebx]
  406e10:	les    esp,FWORD PTR [ecx+eax*8]
  406e13:	mov    bl,0xc0
  406e15:	retf   0x3f31
  406e18:	cmc    
  406e19:	das    
  406e1a:	imul   ebx,ebx,0xffffffe5
  406e1d:	inc    esi
  406e1e:	pop    ecx
  406e1f:	xor    BYTE PTR [ebx+ebp*4-0x9726139],ch
  406e26:	jns    0x406e93
  406e28:	jp     0x406e77
  406e2a:	cmp    cl,BYTE PTR [edx-0x6a]
  406e2d:	pop    eax
  406e2e:	(bad)  
  406e2f:	pop    ebp
  406e30:	lahf   
  406e31:	adc    al,0x3e
  406e33:	push   ds
  406e34:	cs call 0xf7e8fb1d
  406e3a:	or     eax,eax
  406e3c:	or     BYTE PTR [edx],0xda
  406e3f:	mov    dl,0xe4
  406e41:	cli    
  406e42:	push   eax
  406e43:	ficomp DWORD PTR [eax+0x55d7cbc4]
  406e49:	mov    al,ds:0x53181d48
  406e4e:	dec    ebp
  406e4f:	scas   eax,DWORD PTR es:[di]
  406e51:	dec    edx
  406e52:	out    dx,al
  406e53:	inc    ebx
  406e54:	or     eax,0x205df3ed
  406e59:	fwait
  406e5a:	repz pop ds
  406e5c:	or     eax,0x484adf3d
  406e61:	push   cs
  406e62:	test   al,0xa7
  406e64:	popa   
  406e65:	xchg   esi,eax
  406e66:	scas   eax,DWORD PTR es:[edi]
  406e67:	stc    
  406e68:	sahf   
  406e69:	and    DWORD PTR [ecx+ecx*8-0x29],ebp
  406e6d:	jns    0x406ebd
  406e6f:	ins    DWORD PTR es:[edi],dx
  406e70:	inc    ebx
  406e71:	fstp   TBYTE PTR [ebx]
  406e73:	int    0x9b
  406e75:	arpl   WORD PTR [ebx+ebp*8],si
  406e78:	jmp    0x406e9e
  406e7a:	scas   eax,DWORD PTR es:[edi]
  406e7b:	mov    edx,0x32357f0
  406e80:	push   eax
  406e81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e82:	mov    ch,0x86
  406e84:	inc    esi
  406e85:	dec    esi
  406e86:	cmp    bl,cl
  406e88:	push   ss
  406e89:	add    DWORD PTR [esi+0x70e5d7b8],edx
  406e8f:	shl    ch,1
  406e91:	adc    bl,ch
  406e93:	and    al,0xf8
  406e95:	(bad)
  406e98:	xchg   edi,eax
  406e99:	sahf   
  406e9a:	fdivr  QWORD PTR [edi+edx*1]
  406e9d:	cmp    eax,0xef321f62
  406ea2:	mov    ds:0xec56f4b,eax
  406ea7:	xchg   edi,eax
  406ea8:	std    
  406ea9:	jno    0x406eae
  406eab:	jo     0x406e97
  406ead:	rol    DWORD PTR ss:[edi-0x139f4af4],1
  406eb4:	mov    ds:0x40d558be,eax
  406eb9:	cmp    al,0x8
  406ebb:	loop   0x406f29
  406ebd:	add    bh,BYTE PTR [edx+0x54]
  406ec0:	dec    edi
  406ec1:	mov    bl,0xed
  406ec3:	aam    0x6e
  406ec5:	lods   al,BYTE PTR ds:[esi]
  406ec6:	mov    dl,0xf2
  406ec8:	lods   eax,DWORD PTR ds:[esi]
  406ec9:	test   al,0x6
  406ecb:	push   edx
  406ecc:	mov    bh,0x43
  406ece:	hlt    
  406ecf:	std    
  406ed0:	adc    al,0xa5
  406ed2:	outs   dx,DWORD PTR ds:[esi]
  406ed3:	mov    dh,0x63
  406ed5:	xchg   edx,eax
  406ed6:	jne    0x406f3e
  406ed8:	sub    edx,edi
  406eda:	bound  esi,QWORD PTR [ebp+0x7e3890a]
  406ee0:	xor    DWORD PTR [ebx+eax*8-0x6c040c55],ebp
  406ee7:	je     0x406eaa
  406ee9:	lock mov bh,0xcd
  406eec:	fmul   DWORD PTR [ebx+0x3615742a]
  406ef2:	cwde   
  406ef3:	jecxz  0x406f6e
  406ef5:	sub    al,0xb4
  406ef7:	call   0xcc5b:0xa297ef20
  406efe:	adc    al,0xb9
  406f00:	or     BYTE PTR [esi],dl
  406f02:	in     eax,dx
  406f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f04:	mov    esi,0x1f4f680c
  406f09:	xchg   eax,edi
  406f0b:	jmp    0x406f2d
  406f0d:	daa    
  406f0e:	xor    eax,0x6d47ffd8
  406f13:	shl    BYTE PTR [ecx],cl
  406f15:	test   BYTE PTR es:[edi+0x66d32554],ch
  406f1c:	cmp    BYTE PTR [edi],ah
  406f1e:	or     ah,BYTE PTR [ebp+0x8]
  406f21:	scas   eax,DWORD PTR es:[edi]
  406f22:	mov    ecx,0xfbc71835
  406f27:	jns    0x406f73
  406f29:	retf   0x2f4b
  406f2c:	mov    ebp,fs
  406f2e:	xchg   edi,eax
  406f2f:	call   0xf582f89c
  406f34:	ror    esi,1
  406f36:	xchg   ecx,eax
  406f37:	and    DWORD PTR [ebx-0xf],0x7b9e39ad
  406f3e:	repz sbb ch,cl
  406f41:	cmp    al,0xfe
  406f43:	call   ebx
  406f45:	pop    edi
  406f46:	sbb    BYTE PTR [ebx-0x27ebb4bb],bl
  406f4c:	in     al,dx
  406f4d:	into   
  406f4e:	sub    ebp,eax
  406f50:	xlat   BYTE PTR ds:[ebx]
  406f51:	aad    0x52
  406f53:	ins    BYTE PTR es:[edi],dx
  406f54:	jge    0x406f44
  406f56:	pop    edx
  406f57:	retf   
  406f58:	aad    0xd0
  406f5a:	dec    edx
  406f5b:	addr16 xchg ebp,eax
  406f5d:	in     eax,0x11
  406f5f:	ins    DWORD PTR es:[edi],dx
  406f60:	addr16 dec esp
  406f62:	(bad)  
  406f63:	out    0xd4,eax
  406f65:	jg     0x406f61
  406f67:	bound  ebp,QWORD PTR [edi]
  406f69:	dec    esi
  406f6a:	push   ds
  406f6b:	loop   0x406efe
  406f6d:	and    ebp,DWORD PTR [ebx]
  406f6f:	loope  0x406f9a
  406f71:	cmp    esp,DWORD PTR [esi]
  406f73:	mov    esi,0x175aea22
  406f78:	and    eax,0x5f31f89a
  406f7d:	sahf   
  406f7e:	inc    edi
  406f7f:	iret   
  406f80:	test   al,0xec
  406f82:	stc    
  406f83:	sbb    BYTE PTR [eax+0x231cdd81],bh
  406f89:	and    eax,0x669cc5ab
  406f8e:	out    0x25,al
  406f90:	xchg   DWORD PTR [ebx+ebp*8],eax
  406f93:	das    
  406f94:	xor    BYTE PTR [edi-0x6e],ch
  406f97:	mov    ebp,0xfa328bc0
  406f9c:	xor    esi,DWORD PTR [edx+ebx*8]
  406f9f:	sbb    eax,0x9a6a8ec4
  406fa4:	xor    ebp,0xffffff8a
  406fa7:	fild   QWORD PTR [ebx+eiz*1-0x10b7ed4c]
  406fae:	enter  0xcf9a,0x2e
  406fb2:	add    BYTE PTR [edx+0x22820de9],0xc8
  406fb9:	daa    
  406fba:	les    esi,FWORD PTR [edi]
  406fbc:	pop    eax
  406fbd:	sbb    BYTE PTR [eax-0x21287c15],cl
  406fc3:	cmp    eax,0x7ca1e096
  406fc8:	xor    al,0xd8
  406fca:	lods   eax,DWORD PTR ds:[esi]
  406fcb:	and    DWORD PTR [esi+0x6a250d4d],edi
  406fd1:	push   edi
  406fd2:	retf   0x4e4f
  406fd5:	aaa    
  406fd6:	test   al,0xf3
  406fd8:	mov    ecx,0xe77764b5
  406fdd:	(bad)  
  406fde:	mov    al,ds:0x31f1b2df
  406fe3:	sub    al,0xc0
  406fe5:	cwde   
  406fe6:	or     BYTE PTR [ebx-0x14],ah
  406fe9:	dec    ebp
  406fea:	inc    esi
  406feb:	jmp    0x2d71:0xb497341a
  406ff2:	push   ebx
  406ff3:	jns    0x40700c
  406ff5:	mov    BYTE PTR [esi-0x43],al
  406ff8:	out    0xaa,al
  406ffa:	retf   
  406ffb:	xchg   edi,eax
  406ffc:	push   ecx
  406ffd:	repz push ds
  406fff:	int3   
  407000:	aaa    
  407001:	add    ah,BYTE PTR [edx+0x36c4a3f4]
  407007:	adc    DWORD PTR [esi+eax*2+0x43],ebx
  40700b:	repnz sti 
  40700d:	mov    dh,0xcd
  40700f:	xrelease xchg DWORD PTR [ebp+0x28],esp
  407013:	retf   0x16b
  407016:	pop    ecx
  407017:	fmul   DWORD PTR [esi-0x62b2cd23]
  40701d:	and    ch,BYTE PTR [eax]
  40701f:	sub    eax,0x7889de4c
  407024:	(bad)
  407029:	mov    ds:0xa1296c4d,eax
  40702e:	mov    DWORD PTR [esi-0x4f2e9495],edi
  407034:	test   eax,0xacb9385d
  407039:	cs popa 
  40703b:	retf   0x8abc
  40703e:	jo     0x40709b
  407040:	sub    al,0xde
  407042:	xchg   esi,eax
  407043:	xor    BYTE PTR [ebx-0x41],ch
  407046:	(bad)
  40704a:	ds pop eax
  40704c:	dec    edx
  40704d:	xor    al,0xb8
  40704f:	mov    dh,0x27
  407051:	and    dh,BYTE PTR ds:0x78df28fa
  407057:	ins    BYTE PTR es:[edi],dx
  407058:	push   eax
  407059:	pop    esi
  40705a:	add    DWORD PTR [edx+0x8],ecx
  40705d:	shl    DWORD PTR [edi+0x4d],0x5b
  407061:	mov    al,0xca
  407063:	push   eax
  407064:	sbb    edx,DWORD PTR [ecx]
  407066:	ds sub al,0xc9
  407069:	pop    eax
  40706a:	cmp    bh,bl
  40706c:	out    0xca,al
  40706e:	lahf   
  40706f:	call   0x1941f8b7
  407074:	dec    edx
  407075:	arpl   WORD PTR [ebx+esi*2],ax
  407078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407079:	sahf   
  40707a:	lods   eax,DWORD PTR ds:[esi]
  40707b:	jg     0x40707f
  40707d:	push   ds
  40707e:	jo     0x4070e9
  407080:	adc    edi,ecx
  407082:	cmp    BYTE PTR [esp+eax*1-0x373ea424],bh
  407089:	sbb    dh,BYTE PTR [edi]
  40708b:	das    
  40708c:	stos   BYTE PTR es:[edi],al
  40708d:	ret    0x422f
  407090:	or     BYTE PTR [edx-0x7ec23e05],dh
  407096:	scas   eax,DWORD PTR es:[edi]
  407097:	sbb    DWORD PTR [esi+0x7f6b2e93],0x6f8ce1b0
  4070a1:	pop    ebp
  4070a2:	shl    esp,cl
  4070a4:	adc    al,0x1b
  4070a6:	sar    BYTE PTR [edi+0x7f082899],1
  4070ac:	outs   dx,DWORD PTR ds:[esi]
  4070ad:	inc    ecx
  4070ae:	(bad)  
  4070af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070b0:	pop    ss
  4070b1:	lock mov ah,0x11
  4070b4:	adc    cl,BYTE PTR [edx-0x2225ec8]
  4070ba:	xor    ah,bl
  4070bc:	and    eax,0xedf25fb8
  4070c1:	cmp    al,BYTE PTR [edi+ebp*4]
  4070c4:	mov    edi,0xcad46201
  4070c9:	outs   dx,BYTE PTR ds:[esi]
  4070ca:	cmc    
  4070cb:	mov    ds:0xfb369856,al
  4070d0:	adc    esp,ebp
  4070d2:	jbe    0x407152
  4070d4:	cwde   
  4070d5:	rol    BYTE PTR [eax],cl
  4070d7:	(bad)
  4070db:	add    eax,0xa444a8bc
  4070e0:	mov    ds:0x5fc87f48,al
  4070e5:	xchg   edx,eax
  4070e6:	inc    ecx
  4070e7:	push   es
  4070e8:	sub    edx,ebx
  4070ea:	sub    edi,DWORD PTR [eax+0x409a3311]
  4070f0:	add    BYTE PTR [esp+eax*2-0x37],ah
  4070f4:	lds    ebx,FWORD PTR [edx+0x11c6d2d]
  4070fa:	add    ebp,DWORD PTR cs:[esi+0x3801a0b0]
  407101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407102:	cli    
  407103:	lods   al,BYTE PTR ds:[esi]
  407104:	lea    esi,[ebx-0x776cf147]
  40710a:	jle    0x407127
  40710c:	pop    ss
  40710d:	sub    eax,0x5e4d4e76
  407112:	sub    eax,0x7f6c62c2
  407117:	inc    ebx
  407118:	and    eax,DWORD PTR [ecx+0xc]
  40711b:	(bad)  
  40711c:	popa   
  40711d:	adc    al,0x28
  40711f:	scas   eax,DWORD PTR es:[edi]
  407120:	ins    BYTE PTR es:[edi],dx
  407121:	(bad)  
  407122:	int3   
  407123:	aas    
  407124:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407125:	push   ebx
  407126:	add    al,0x75
  407128:	and    dl,dh
  40712a:	mov    ds:0xc4c36a90,eax
  40712f:	fs dec dl
  407132:	out    dx,al
  407133:	xlat   BYTE PTR ds:[ebx]
  407134:	mov    ah,al
  407136:	in     al,0xc1
  407138:	jne    0x407151
  40713a:	mov    dl,0xaf
  40713c:	pop    es
  40713d:	push   ebp
  40713e:	popf   
  40713f:	add    al,0xff
  407141:	push   0x7de0b3de
  407146:	fild   DWORD PTR [ebx-0x3a3c3432]
  40714c:	mov    ah,0x59
  40714e:	inc    ebx
  40714f:	outs   dx,DWORD PTR ds:[esi]
  407150:	mov    ebx,0xa16af400
  407155:	not    BYTE PTR [esi+esi*2-0x312b91a0]
  40715c:	push   eax
  40715d:	test   BYTE PTR [eax-0x14],ch
  407160:	inc    edi
  407161:	jge    0x4070f2
  407163:	loopne 0x4070f8
  407165:	pop    ebx
  407166:	jg     0x407170
  407168:	lods   al,BYTE PTR ds:[esi]
  407169:	adc    ch,BYTE PTR [esi]
  40716b:	dec    esi
  40716c:	jno    0x40719b
  40716e:	cld    
  40716f:	aaa    
  407170:	imul   esi,DWORD PTR [ebx+0x67],0x3688cf26
  407177:	shl    BYTE PTR [esi],cl
  407179:	mov    DWORD PTR ds:0x71a12785,eax
  40717f:	scas   eax,DWORD PTR es:[edi]
  407180:	es pop es
  407182:	out    dx,al
  407183:	xchg   DWORD PTR [ebp+0x199976b5],ebx
  407189:	xor    DWORD PTR [ebp-0x63a96453],edi
  40718f:	retf   
  407190:	lahf   
  407191:	sub    al,0xf7
  407193:	mov    ah,0x7e
  407195:	test   DWORD PTR [ebx+edx*4],0xfe5ab237
  40719c:	shr    DWORD PTR [edx],cl
  40719e:	fisttp WORD PTR [ebx]
  4071a0:	popf   
  4071a1:	pop    edi
  4071a2:	mov    ch,0xd1
  4071a4:	shl    BYTE PTR [edx-0x509b8647],cl
  4071aa:	out    0x8e,al
  4071ac:	push   cs
  4071ad:	fisub  DWORD PTR [eax+0x2]
  4071b0:	mov    al,ds:0xc81f3f28
  4071b5:	inc    eax
  4071b6:	inc    eax
  4071b7:	sbb    DWORD PTR [ebp+0x7e],esi
  4071ba:	aaa    
  4071bb:	ret    
  4071bc:	mov    edx,0xf502b0a
  4071c1:	push   eax
  4071c2:	enter  0x1511,0x3a
  4071c6:	xor    BYTE PTR [edx],dh
  4071c8:	lds    esp,FWORD PTR [ebx+ebx*2-0x53]
  4071cc:	push   0xffffffbb
  4071ce:	retf   
  4071cf:	mov    edx,DWORD PTR [esi+0x6e0e42f1]
  4071d5:	pop    eax
  4071d6:	inc    esi
  4071d7:	in     eax,dx
  4071d8:	(bad)  
  4071d9:	cwde   
  4071da:	fiadd  WORD PTR [edx+eax*8]
  4071dd:	and    dl,ah
  4071df:	mov    eax,ds:0xdb6af211
  4071e4:	call   0x63ed:0xb0c222da
  4071eb:	inc    eax
  4071ec:	and    BYTE PTR [edi-0x26bcc65],bl
  4071f2:	inc    esi
  4071f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f4:	std    
  4071f5:	test   eax,0x201e0f46
  4071fa:	dec    ebx
  4071fb:	fldenv [eax]
  4071fd:	mov    eax,0xe7df4f19
  407202:	push   ss
  407203:	les    eax,FWORD PTR [eax-0x292ad10c]
  407209:	xlat   BYTE PTR ds:[ebx]
  40720a:	ja     0x4071c4
  40720c:	mov    edi,0xf9702e8c
  407211:	mov    ch,0xbb
  407213:	add    al,0x2c
  407215:	xlat   BYTE PTR ds:[ebx]
  407216:	out    dx,eax
  407217:	ret    0x39f0
  40721a:	mov    ebp,0x1b68d29d
  40721f:	push   ss
  407220:	jle    0x40724d
  407222:	retf   0x42e0
  407225:	cli    
  407226:	push   edi
  407227:	or     dl,BYTE PTR [ecx-0x3e]
  40722a:	out    dx,eax
  40722b:	das    
  40722c:	push   0xffffffe5
  40722e:	mov    bh,0x1e
  407230:	inc    eax
  407231:	imul   edi,DWORD PTR [esi-0x74],0xffffffdc
  407235:	xlat   BYTE PTR cs:[ebx]
  407237:	je     0x4071d7
  407239:	aaa    
  40723a:	sub    BYTE PTR [ebx+0x16],0xb4
  40723e:	pop    ss
  40723f:	sbb    eax,0x86f95a8b
  407244:	dec    esi
  407245:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407246:	add    BYTE PTR [ecx],al
  407248:	jmp    0x7723:0x7b6b2ebc
  40724f:	pop    ecx
  407250:	(bad)  
  407251:	and    eax,0x674421ec
  407256:	inc    esp
  407257:	pop    es
  407258:	in     al,dx
  407259:	push   esi
  40725a:	mov    eax,ds:0x94449ff5
  40725f:	dec    esp
  407260:	jecxz  0x407278
  407262:	push   ebx
  407263:	xchg   DWORD PTR [eax+0x4f],esi
  407266:	jp     0x407297
  407268:	ins    DWORD PTR es:[edi],dx
  407269:	test   eax,0x7b005494
  40726e:	cmp    dl,cl
  407270:	jmp    0x7f05f95b
  407275:	sub    eax,DWORD PTR [esi-0x4b]
  407278:	scas   eax,DWORD PTR es:[edi]
  407279:	push   ebp
  40727a:	es sbb eax,0x24421caf
  407280:	fdivp  st(3),st
  407282:	and    al,BYTE PTR [ebp+eiz*8-0x7ccee05e]
  407289:	sub    BYTE PTR [ebp-0x5971992c],0xad
  407290:	and    eax,0xc8e17755
  407295:	xor    BYTE PTR [edx+ecx*2+0x6b],0x93
  40729a:	push   esp
  40729b:	mov    bh,BYTE PTR [eax-0x4f18fb42]
  4072a1:	dec    edi
  4072a2:	sbb    ebp,DWORD PTR [ebx]
  4072a4:	inc    esp
  4072a5:	push   edx
  4072a6:	loop   0x407240
  4072a8:	push   0x6b
  4072aa:	or     DWORD PTR [eax+0x8],esp
  4072ad:	pop    es
  4072ae:	(bad)  
  4072b0:	aad    0xaa
  4072b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b3:	arpl   bx,sp
  4072b5:	out    dx,al
  4072b6:	stc    
  4072b7:	or     al,BYTE PTR [esi+0x24808d46]
  4072bd:	je     0x40729e
  4072bf:	test   al,0x1e
  4072c1:	rol    eax,0x49
  4072c4:	clc    
  4072c5:	bound  edx,QWORD PTR [edi]
  4072c7:	(bad)  
  4072c8:	dec    esi
  4072c9:	adc    al,0xe9
  4072cb:	or     cl,BYTE PTR [ebp+ebx*4+0x39]
  4072cf:	lods   eax,DWORD PTR ds:[esi]
  4072d0:	test   DWORD PTR [ecx],eax
  4072d2:	jae    0x407330
  4072d4:	aam    0xe0
  4072d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072d7:	ins    BYTE PTR es:[edi],dx
  4072d8:	dec    ebp
  4072d9:	(bad)  
  4072da:	fstp   DWORD PTR [edi+0x3949db66]
  4072e0:	jge    0x4072d4
  4072e2:	lds    ebx,FWORD PTR [edx+0x1cc54acb]
  4072e8:	push   ecx
  4072e9:	add    DWORD PTR [ebp-0x2d],ecx
  4072ec:	and    BYTE PTR [ecx-0x4e],bl
  4072ef:	test   DWORD PTR [ebp+0x4a30e79c],0x7a6a9727
  4072f9:	push   ebx
  4072fa:	cmp    bl,0x7c
  4072fd:	in     al,0xb2
  4072ff:	or     al,0x27
  407301:	or     BYTE PTR [ebp+0x8eefaf0],cl
  407307:	adc    BYTE PTR [ecx+0x75],bh
  40730a:	cmp    ch,0x9f
  40730d:	inc    ecx
  40730e:	das    
  40730f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407310:	xchg   ecx,eax
  407311:	inc    ebx
  407312:	jl     0x407370
  407314:	xchg   esi,eax
  407315:	fstp   DWORD PTR [eax-0x15]
  407318:	(bad)  
  407319:	jno    0x4072fa
  40731b:	cmp    eax,0x5c384fbf
  407320:	cli    
  407321:	fwait
  407322:	ds scas al,BYTE PTR es:[edi]
  407324:	cdq    
  407325:	push   es
  407326:	int3   
  407327:	and    DWORD PTR [ebp-0x2e],ecx
  40732a:	cld    
  40732b:	mov    ch,0x3e
  40732d:	pminsw mm7,mm1
  407330:	xchg   esi,eax
  407331:	out    0x49,al
  407333:	jle    0x4072c6
  407335:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407336:	mov    esp,0x34c00305
  40733b:	sub    ecx,DWORD PTR [esi]
  40733d:	mov    edi,0x28973bb6
  407342:	and    BYTE PTR [esi],0xd3
  407345:	pop    ds
  407346:	ss jle 0x40733c
  407349:	cmp    al,0x7e
  40734b:	fisttp WORD PTR [ebp-0x229dfe8]
  407351:	mov    cl,0xdb
  407353:	xchg   bh,bl
  407355:	(bad)  
  407356:	inc    ebp
  407357:	cmp    al,0xd0
  407359:	imul   BYTE PTR [eax]
  40735b:	sub    edx,ecx
  40735d:	and    ebp,ebp
  40735f:	(bad)  [esi+0x23fd4a1d]
  407365:	jmp    0x40738f
  407367:	aad    0x65
  407369:	mov    DWORD PTR [edx],eax
  40736b:	mov    WORD PTR [edi-0x7f1668aa],ds
  407371:	fs jno 0x4073f3
  407374:	gs mov bl,0x7
  407377:	rcr    BYTE PTR [edx-0x15],cl
  40737a:	mov    ds:0xa7cfcc3b,al
  40737f:	push   ds
  407380:	pop    edx
  407381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407382:	pop    eax
  407383:	add    ah,BYTE PTR [ecx]
  407385:	(bad)  [edx+0x741193c5]
  40738b:	xrelease mov DWORD PTR [ebx],ebp
  40738e:	repnz mov ah,0xb5
  407391:	pop    esp
  407392:	ret    0x4925
  407395:	pop    es
  407396:	cwde   
  407397:	adc    bh,dh
  407399:	lods   al,BYTE PTR ds:[esi]
  40739a:	pop    es
  40739b:	jl     0x40734e
  40739d:	enter  0xae12,0xe
  4073a1:	fs xchg esp,eax
  4073a3:	or     DWORD PTR [esi],ebp
  4073a5:	iret   
  4073a6:	dec    esi
  4073a7:	jle    0x40734c
  4073a9:	push   eax
  4073aa:	mov    dl,0x8
  4073ac:	pop    ebp
  4073ad:	inc    esi
  4073ae:	and    DWORD PTR [edx+eiz*8+0x34],ecx
  4073b2:	popa   
  4073b3:	je     0x407393
  4073b5:	xchg   al,ah
  4073b7:	mov    ah,0x33
  4073b9:	loop   0x407416
  4073bb:	and    esp,DWORD PTR [esi]
  4073bd:	jl     0x40738b
  4073bf:	adc    al,ah
  4073c1:	(bad)  
  4073c2:	(bad)  
  4073c3:	dec    esi
  4073c4:	ins    BYTE PTR es:[edi],dx
  4073c5:	fwait
  4073c6:	dec    ebp
  4073c7:	jecxz  0x4073e7
  4073c9:	mov    al,ds:0x11e0968f
  4073ce:	data16 fcmovu st,st(2)
  4073d1:	xchg   ebx,eax
  4073d2:	pop    ebx
  4073d3:	repnz ins DWORD PTR es:[edi],dx
  4073d5:	lahf   
  4073d6:	es inc esi
  4073d8:	shl    BYTE PTR [esi-0x36],cl
  4073db:	mov    cl,0xbd
  4073dd:	enter  0xaad7,0x49
  4073e1:	cdq    
  4073e2:	xor    dh,bh
  4073e4:	sahf   
  4073e5:	aas    
  4073e6:	fwait
  4073e7:	das    
  4073e8:	retf   0xf29
  4073eb:	add    DWORD PTR [edi+0xe],ebp
  4073ee:	popf   
  4073ef:	push   eax
  4073f0:	imul   ebp,DWORD PTR [esi-0x7ba33204],0x22dc1459
  4073fa:	push   edi
  4073fb:	(bad)  
  4073fd:	add    bl,BYTE PTR [ebx]
  4073ff:	fs jmp 0x9997:0xcca00e1b
  407407:	shr    BYTE PTR [edi+0x6865f80d],0x3c
  40740e:	sbb    BYTE PTR [edx],al
  407410:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407411:	adc    eax,0x80b98585
  407416:	pop    esi
  407417:	aaa    
  407418:	scas   eax,DWORD PTR es:[edi]
  407419:	pop    esp
  40741a:	xchg   ebx,eax
  40741b:	xor    ah,BYTE PTR [ecx+0x6c]
  40741e:	fadd   QWORD PTR [esi-0x6]
  407421:	(bad)
  407426:	scas   al,BYTE PTR es:[edi]
  407427:	mov    ch,0x86
  407429:	cwde   
  40742a:	pavgb  mm4,mm7
  40742d:	add    bh,cl
  40742f:	jbe    0x407454
  407431:	push   edi
  407432:	ror    BYTE PTR [edi+0x2],cl
  407435:	and    al,0x6c
  407437:	inc    ebx
  407438:	ror    edx,1
  40743a:	dec    eax
  40743b:	scas   eax,DWORD PTR es:[edi]
  40743c:	(bad)  
  40743d:	adc    eax,ebp
  40743f:	mov    dh,0xe2
  407441:	adc    eax,0xe7b2fab0
  407446:	jno    0x407401
  407448:	sub    ah,BYTE PTR [eax]
  40744a:	jg     0x40741e
  40744c:	sub    BYTE PTR [ebp+0x68],bl
  40744f:	ins    DWORD PTR es:[edi],dx
  407450:	fdiv   QWORD PTR [esi]
  407452:	ins    DWORD PTR es:[edi],dx
  407453:	push   eax
  407454:	int    0xdb
  407456:	cwde   
  407457:	or     DWORD PTR [edi-0x71f5b7b1],ebx
  40745d:	xor    edi,esp
  40745f:	dec    esi
  407460:	push   edi
  407461:	xchg   edi,eax
  407462:	mov    edx,0x80e29197
  407467:	fld    TBYTE PTR [edx+0x1183366f]
  40746d:	mov    dl,0xfb
  40746f:	imul   ebx,edx,0x71fd66e7
  407475:	stc    
  407476:	sbb    BYTE PTR [ecx-0xf716ca8],al
  40747c:	push   es
  40747d:	sub    bh,ch
  40747f:	mov    ds:0x1fd30c79,eax
  407484:	(bad)  
  407485:	out    dx,eax
  407486:	push   eax
  407487:	test   bl,dh
  407489:	imul   eax,edi,0xffffffc0
  40748c:	aas    
  40748d:	pusha  
  40748e:	sbb    al,0x2
  407490:	mov    bl,0xc4
  407492:	mov    edi,0xe6badfa8
  407497:	jmp    0x407511
  407499:	aad    0xf1
  40749b:	push   ebp
  40749c:	push   0x1f
  40749e:	adc    DWORD PTR [edx+0x7a],edx
  4074a1:	ins    DWORD PTR es:[edi],dx
  4074a2:	(bad)  
  4074a3:	(bad)  
  4074a4:	mov    esi,0xe854e758
  4074a9:	ins    BYTE PTR es:[edi],dx
  4074aa:	mov    bh,0x2b
  4074ac:	fbstp  TBYTE PTR [eax]
  4074ae:	pusha  
  4074af:	xlat   BYTE PTR ds:[ebx]
  4074b0:	out    dx,al
  4074b1:	inc    eax
  4074b2:	cmp    eax,0x1d4f045f
  4074b7:	loopne 0x4074d1
  4074b9:	xchg   ebp,eax
  4074ba:	lods   al,BYTE PTR ds:[esi]
  4074bb:	dec    ecx
  4074bc:	imul   eax,DWORD PTR [edi-0x1b27931e],0x2b
  4074c3:	sub    ebx,DWORD PTR [ecx]
  4074c5:	retf   0xae4e
  4074c8:	xor    al,BYTE PTR [ebx+0x65]
  4074cb:	push   ecx
  4074cc:	mov    al,0xbb
  4074ce:	mov    cl,0x3f
  4074d0:	out    dx,ax
  4074d2:	mov    edi,0x44ab201a
  4074d7:	xchg   ebx,eax
  4074d8:	js     0x4074c9
  4074da:	test   BYTE PTR [esi-0xf70ba57],dl
  4074e0:	in     eax,0xb1
  4074e2:	mov    cl,0x40
  4074e4:	sbb    al,0xa2
  4074e6:	cmc    
  4074e7:	sbb    DWORD PTR [eax-0x60],0x9f9ff220
  4074ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ef:	dec    esi
  4074f0:	sub    eax,0xfc5ebbe4
  4074f5:	addr16 out 0xff,eax
  4074f8:	mov    ah,0x15
  4074fa:	add    ecx,esi
  4074fc:	arpl   WORD PTR ds:0xc191aec4,ax
  407502:	pushf  
  407503:	retf   0x3993
  407506:	mov    esp,0xdb1aa6cc
  40750b:	retf   0x5b00
  40750e:	jno    0x407507
  407510:	ficomp DWORD PTR [edx+0x65f379a5]
  407516:	arpl   WORD PTR [ecx],bx
  407518:	rcr    esi,1
  40751a:	jmp    0x56c9:0xfd9523fa
  407521:	push   0x7b62527f
  407526:	mov    ds,WORD PTR [edx-0xe]
  407529:	mov    ch,0xb9
  40752b:	shl    BYTE PTR [esp+edx*4+0x2d],1
  40752f:	jmp    0xc7be114e
  407534:	std    
  407535:	fimul  WORD PTR [ebp+ebx*2+0x6a4ab3aa]
  40753c:	(bad)  
  40753d:	cwde   
  40753e:	mov    eax,ds:0xb7ce41a0
  407543:	mov    WORD PTR [esi],gs
  407545:	xor    al,0x8e
  407547:	pop    ds
  407548:	(bad)  
  407549:	fsubr  DWORD PTR [ecx+0x6baa13e3]
  40754f:	mov    ds:0x17794587,eax
  407554:	xchg   esi,eax
  407555:	or     al,0x64
  407557:	dec    edi
  407558:	(bad)  
  407559:	jmp    0x8748:0x33943207
  407560:	pusha  
  407561:	cdq    
  407562:	inc    ecx
  407563:	jne    0x4074e5
  407565:	xor    eax,0xe242f8cd
  40756a:	jl     0x407501
  40756c:	add    DWORD PTR [esi-0x28],esi
  40756f:	retf   
  407570:	into   
  407571:	push   es
  407572:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407573:	and    bh,BYTE PTR [ebx+0x28]
  407576:	xchg   edx,eax
  407577:	sti    
  407578:	into   
  407579:	loope  0x40756f
  40757b:	(bad)  
  40757c:	adc    al,0x98
  40757e:	fistp  DWORD PTR [esi+0x1d75af4f]
  407584:	aad    0xa6
  407586:	outs   dx,BYTE PTR ds:[esi]
  407587:	jnp    0x40750a
  407589:	inc    esp
  40758a:	xor    BYTE PTR [esi-0x3c],ch
  40758d:	jle    0x407573
  40758f:	sub    al,BYTE PTR [ecx]
  407591:	arpl   si,dx
  407593:	cwde   
  407594:	lds    ebp,FWORD PTR [ebx+0x4d7eb581]
  40759a:	sub    ecx,ebp
  40759c:	fiadd  WORD PTR [ebx+0x33]
  40759f:	ja     0x407615
  4075a1:	sbb    eax,0xd6524eff
  4075a6:	fsubr  st(1),st
  4075a8:	xchg   ecx,eax
  4075a9:	jp     0x40755d
  4075ab:	jno    0x4075ca
  4075ad:	mov    ch,0xda
  4075af:	mov    BYTE PTR [esp+esi*4-0x3],bl
  4075b3:	fiadd  DWORD PTR [edx+0x42e985a5]
  4075b9:	fmul   st(6),st
  4075bb:	fisttp WORD PTR [ecx+0x1d6cafd3]
  4075c2:	xchg   ebx,eax
  4075c3:	xor    DWORD PTR [ebx],0xfffffff4
  4075c6:	mov    esi,0x9ac088f0
  4075cb:	adc    al,0x45
  4075cd:	mov    ebp,DWORD PTR [ecx+0x3f]
  4075d0:	jae    0x40761c
  4075d2:	xor    eax,0xe77d5688
  4075d7:	cdq    
  4075d8:	pop    ecx
  4075d9:	dec    esi
  4075da:	mov    ss,WORD PTR [eax-0x7dcc9672]
  4075e0:	sbb    edi,DWORD PTR [edx+0x6a]
  4075e3:	or     bl,BYTE PTR [ecx-0xa]
  4075e6:	aam    0x93
  4075e8:	mov    ds:0xbe15b1e,eax
  4075ed:	mov    dl,0x2
  4075ef:	sbb    al,0x3d
  4075f1:	mov    esp,0x60e07142
  4075f6:	mov    cs,WORD PTR [edx]
  4075f8:	mov    esi,esi
  4075fa:	xchg   BYTE PTR [ebp+edx*2-0x2d],bl
  4075fe:	pushf  
  4075ff:	out    dx,eax
  407600:	ins    BYTE PTR es:[edi],dx
  407601:	jnp    0x407680
  407603:	jge    0x4075d4
  407605:	call   0x296269ca
  40760a:	es or  bh,dl
  40760d:	mov    cl,0xeb
  40760f:	ins    BYTE PTR es:[edi],dx
  407610:	je     0x407683
  407612:	in     al,dx
  407613:	sbb    eax,0x4005305e
  407618:	ss push edx
  40761a:	jg     0x40769a
  40761c:	dec    edx
  40761d:	jo     0x407631
  40761f:	and    eax,0xac0d5202
  407624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407625:	push   ebp
  407626:	xchg   dl,ah
  407628:	in     eax,dx
  407629:	je     0x40765d
  40762b:	call   DWORD PTR [ebp-0xf]
  40762e:	jmp    0x1a0857e
  407633:	ins    DWORD PTR es:[edi],dx
  407634:	loope  0x4075e3
  407636:	iret   
  407637:	xor    al,0x9c
  40763a:	sub    ebp,DWORD PTR cs:[ecx+0x7972ecfe]
  407641:	scas   al,BYTE PTR es:[edi]
  407642:	push   ebp
  407643:	jbe    0x40762c
  407645:	xchg   DWORD PTR [edi+0x7bb427b4],eax
  40764b:	loopne 0x407693
  40764d:	inc    eax
  40764e:	cld    
  40764f:	int3   
  407650:	mov    ds,esp
  407652:	aas    
  407653:	test   bl,bl
  407655:	inc    esi
  407656:	push   0xffffffd0
  407658:	ror    DWORD PTR [edi-0x18591b50],0x74
  40765f:	jmp    0x19c4735d
  407664:	(bad)  
  407665:	(bad)  
  407667:	xchg   ebp,eax
  407668:	and    eax,0x203709fe
  40766d:	pop    eax
  40766e:	xor    DWORD PTR [ebx],ebx
  407670:	lods   eax,DWORD PTR ds:[esi]
  407671:	repz test ch,dh
  407674:	xor    eax,0x2eefa9e5
  407679:	out    0x83,eax
  40767b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40767c:	xchg   edi,eax
  40767d:	rcr    DWORD PTR fs:[eax+edx*8],1
  407681:	push   edi
  407682:	sbb    eax,0xbba18638
  407687:	test   eax,esi
  407689:	jg     0x4076ab
  40768b:	je     0x407675
  40768d:	sahf   
  40768e:	inc    edi
  40768f:	push   0x61
  407691:	rcl    DWORD PTR [ecx+0x69],cl
  407694:	sub    BYTE PTR [esi-0x7d61c9a6],dl
  40769a:	xchg   ecx,eax
  40769b:	sub    al,BYTE PTR [edx]
  40769d:	fcmovb st,st(0)
  40769f:	leave  
  4076a0:	test   DWORD PTR [ecx+0x513849b8],0x8c25c2d8
  4076aa:	mov    bh,0x28
  4076ac:	sub    BYTE PTR [ebp+0x31],0x9f
  4076b0:	lods   al,BYTE PTR ds:[esi]
  4076b1:	xor    DWORD PTR [ebp+ebp*2-0x6d],0x6
  4076b6:	xchg   BYTE PTR [ecx+0x43afa031],dh
  4076bc:	jecxz  0x407710
  4076be:	call   FWORD PTR [ecx-0x7b]
  4076c1:	retf   0x44b4
  4076c4:	out    dx,al
  4076c5:	es fcmovnbe st,st(2)
  4076c8:	daa    
  4076c9:	inc    esp
  4076ca:	add    BYTE PTR [edi],0x2a
  4076cd:	test   al,0x4e
  4076cf:	retf   0xaa7c
  4076d2:	(bad)  [edi]
  4076d4:	ficom  WORD PTR [edx]
  4076d6:	aas    
  4076d7:	out    dx,eax
  4076d8:	repz cs inc eax
  4076db:	mov    ebx,DWORD PTR [edi]
  4076dd:	fldcw  WORD PTR [edx-0x2d]
  4076e0:	iret   
  4076e1:	aam    0xea
  4076e3:	sub    al,0x30
  4076e5:	shr    esp,1
  4076e7:	push   ecx
  4076e8:	mov    ds:0xb35781f4,eax
  4076ed:	pop    esi
  4076ee:	mov    dl,0x6d
  4076f0:	cld    
  4076f1:	fldenv [ebx+0x29]
  4076f4:	inc    esi
  4076f5:	adc    eax,0xe69dd37b
  4076fa:	and    dl,BYTE PTR [eax]
  4076fc:	clc    
  4076fd:	add    eax,0x8be25362
  407702:	loope  0x4076e6
  407704:	test   BYTE PTR [esi+0x34],bh
  407707:	xor    DWORD PTR [esi+0x43],ebp
  40770a:	lods   eax,DWORD PTR ds:[esi]
  40770b:	push   eax
  40770c:	int    0xde
  40770e:	loopne 0x40774c
  407710:	push   esi
  407711:	push   edi
  407712:	xchg   esi,ebp
  407714:	retf   0x3ac3
  407717:	jns    0x407773
  407719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40771a:	neg    esi
  40771c:	pop    edx
  40771d:	jle    0x407761
  40771f:	std    
  407720:	jns    0x407746
  407722:	or     al,0x5
  407724:	mov    ds:0xf0e610b8,al
  407729:	and    eax,0x21fa9dcb
  40772e:	fisttp DWORD PTR [edi+0x604d95a]
  407734:	rcl    BYTE PTR ds:0x3a004692,1
  40773a:	mov    al,ds:0xa088cb86
  40773f:	jbe    0x407739
  407741:	push   edi
  407742:	mov    edx,0x9c263b92
  407747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407748:	and    eax,0xe3f898db
  40774d:	outs   dx,BYTE PTR ds:[esi]
  40774e:	mov    al,ds:0x569a4447
  407753:	addr16 xchg esi,eax
  407755:	mov    eax,0x6c84aa00
  40775a:	push   ds
  40775b:	or     bl,bh
  40775d:	rcl    DWORD PTR [edi+0x595be3b0],cl
  407763:	out    dx,al
  407764:	sti    
  407765:	nop
  407766:	repz sub esi,DWORD PTR [edi+ecx*4]
  40776a:	push   esi
  40776b:	sbb    bl,bl
  40776d:	(bad)  
  40776e:	fidivr WORD PTR [ecx]
  407770:	leave  
  407771:	xchg   BYTE PTR [edx+edi*4-0x6a],dh
  407775:	push   edx
  407776:	jl     0x4077f0
  407778:	aad    0x46
  40777a:	sbb    al,BYTE PTR [ebx+esi*1-0x73083ec8]
  407781:	xor    BYTE PTR [esi],dl
  407783:	aas    
  407784:	cdq    
  407785:	cld    
  407786:	imul   bx,bx,0x6a73
  40778b:	inc    edx
  40778c:	imul   eax,DWORD PTR [edi+0x67760722],0xffffffe8
  407793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407794:	mov    DWORD PTR [esi+0x2aa954d],eax
  40779a:	fld    DWORD PTR [ecx-0x6bccff22]
  4077a0:	pushf  
  4077a1:	or     eax,0x76c88e5f
  4077a6:	push   esp
  4077a7:	repz cmp ch,BYTE PTR [esi+0x20]
  4077ab:	jmp    FWORD PTR [ebx-0x4231f07d]
  4077b1:	ret    
  4077b2:	daa    
  4077b3:	push   esp
  4077b4:	mov    dl,0x63
  4077b6:	out    dx,eax
  4077b7:	ds in  eax,dx
  4077b9:	addr16 xchg edi,eax
  4077bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077bc:	into   
  4077bd:	add    BYTE PTR [esp+ecx*1-0x6f2b516d],0x6d
  4077c5:	xor    al,0xb8
  4077c7:	push   DWORD PTR [esi+0x3dfde07b]
  4077cd:	fwait
  4077ce:	hlt    
  4077cf:	mov    ebx,0xb1dc4335
  4077d4:	not    BYTE PTR [edi]
  4077d6:	or     cl,BYTE PTR [edx+eiz*4-0x26fb67a5]
  4077dd:	mov    edi,0x4742c976
  4077e2:	call   0x7833:0xf48546d1
  4077e9:	into   
  4077ea:	xchg   ecx,eax
  4077eb:	dec    ebp
  4077ec:	inc    ebp
  4077ed:	push   esi
  4077ee:	adc    bl,al
  4077f0:	xor    al,0x4f
  4077f2:	fs int3 
  4077f4:	es aas 
  4077f6:	mov    ds:0x8d3b53e9,al
  4077fb:	fadd   QWORD PTR [ebx+0x3c]
  4077fe:	push   edx
  4077ff:	repz pop ebp
  407801:	rcr    BYTE PTR fs:[esi+0x6a],1
  407805:	mov    al,ds:0x911bc32e
  40780a:	leave  
  40780b:	and    cl,BYTE PTR [eax-0x6eea4bc0]
  407811:	push   ss
  407812:	das    
  407813:	xor    bh,BYTE PTR [ebx-0x1]
  407816:	sbb    ch,BYTE PTR [eax-0x39]
  407819:	data16 stc 
  40781b:	ja     0x4077cd
  40781d:	inc    edi
  40781e:	pop    eax
  40781f:	lods   eax,DWORD PTR ds:[esi]
  407820:	daa    
  407821:	mov    eax,0x86336908
  407826:	fbstp  TBYTE PTR [eax+0x16]
  407829:	inc    edi
  40782a:	mov    BYTE PTR [edi+eax*4],ah
  40782d:	xor    ch,BYTE PTR [ecx+esi*8]
  407830:	stos   BYTE PTR es:[edi],al
  407831:	cmc    
  407832:	push   0x18
  407834:	xchg   esi,eax
  407835:	stos   BYTE PTR es:[edi],al
  407836:	sub    eax,0xa3cd7f6f
  40783b:	adc    al,0xbd
  40783d:	setle  BYTE PTR [ecx+0x39]
  407841:	xchg   ecx,eax
  407842:	jle    0x4078a8
  407844:	sti    
  407845:	fild   DWORD PTR [edi-0x55c2e309]
  40784b:	aam    0xf1
  40784d:	in     eax,dx
  40784e:	retf   0x2325
  407851:	xchg   edi,eax
  407852:	pop    ebp
  407853:	adc    eax,0x5cab5174
  407858:	xor    BYTE PTR [ecx+0x78],cl
  40785b:	xor    al,0xe4
  40785d:	sub    ah,0x76
  407860:	(bad)  
  407861:	xchg   ecx,eax
  407862:	popf   
  407863:	cs mov edi,0xf86b9431
  407869:	retf   
  40786a:	dec    ecx
  40786b:	(bad)  
  40786c:	adc    DWORD PTR ds:[edx],eax
  40786f:	test   DWORD PTR [eax+0x43],0x6d74e27f
  407876:	std    
  407877:	dec    edx
  407878:	(bad)  
  407879:	retf   0xf38
  40787c:	jnp    0x4078f2
  40787e:	mov    al,ds:0x9b69f96
  407883:	jne    0x4078e7
  407885:	hlt    
  407886:	mov    bh,0xd8
  407888:	or     al,0xfc
  40788a:	inc    esi
  40788b:	mov    ds:0x7cfb05b8,eax
  407890:	mov    edx,0x8c6c7417
  407895:	pop    eax
  407896:	retf   0xd26
  407899:	inc    ebp
  40789a:	pop    esi
  40789b:	sbb    BYTE PTR [edi-0x192c3255],0x7a
  4078a2:	ja     0x40789f
  4078a4:	jge    0x407899
  4078a6:	xor    al,0x96
  4078a8:	cld    
  4078a9:	pop    esp
  4078aa:	cmp    ah,bl
  4078ac:	cmp    al,0x3a
  4078ae:	pop    edi
  4078af:	push   edx
  4078b0:	push   esp
  4078b1:	jg     0x4078b5
  4078b3:	adc    eax,0x1f7b7fa6
  4078b8:	gs push ebx
  4078ba:	scas   al,BYTE PTR es:[edi]
  4078bb:	push   es
  4078bc:	addr16 iret 
  4078be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078bf:	jns    0x407880
  4078c1:	jecxz  0x40788c
  4078c3:	mov    edx,0x5f040618
  4078c8:	xor    dl,BYTE PTR [ebp-0x35]
  4078cb:	mov    al,ds:0xe5c6b001
  4078d0:	mov    ebp,0x5cd9c847
  4078d5:	les    esi,FWORD PTR [eax-0x5f09a8a5]
  4078db:	xchg   edi,eax
  4078dc:	xchg   ebx,eax
  4078dd:	loope  0x4078e9
  4078df:	cmp    DWORD PTR [eax+0xdd8ddd5],0x45
  4078e6:	ss push ss
  4078e8:	add    al,0x84
  4078ea:	stos   BYTE PTR es:[edi],al
  4078eb:	shl    DWORD PTR [ecx-0x26],cl
  4078ee:	popf   
  4078ef:	frstor [ebp+0x6a6971d4]
  4078f5:	std    
  4078f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078f7:	inc    BYTE PTR [eax]
  4078f9:	es xchg edi,ebp
  4078fc:	jno    0x40788a
  4078fe:	fsubr  QWORD PTR [edx]
  407900:	out    0x55,al
  407902:	sub    al,0x8e
  407905:	cwde   
  407906:	div    DWORD PTR [edx+0x63014640]
  40790c:	jge    0x407914
  40790e:	add    al,cl
  407910:	jg     0x4078f1
  407912:	fisubr DWORD PTR [edi]
  407914:	retf   0xe5f1
  407917:	loope  0x40792d
  407919:	inc    esi
  40791a:	push   es
  40791b:	jns    0x407930
  40791d:	enter  0x2e7c,0x8
  407921:	inc    esi
  407922:	stc    
  407923:	cdq    
  407924:	ja     0x40796c
  407926:	add    al,BYTE PTR [edx-0x7]
  407929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40792a:	jae    0x4078fa
  40792c:	pop    ds
  40792d:	pop    esp
  40792e:	mov    ecx,0x2c456a7c
  407933:	rcl    BYTE PTR [ecx],1
  407935:	jb     0x4078d6
  407937:	mov    dh,BYTE PTR [ecx+0x2ce84f97]
  40793d:	iret   
  40793e:	mov    ds:0x9b72f047,al
  407943:	lock ss aaa 
  407946:	mov    eax,0xe3d19cfb
  40794b:	into   
  40794c:	xor    al,0xa0
  40794e:	std    
  40794f:	and    eax,0x1659c412
  407954:	push   eax
  407955:	or     BYTE PTR [ebx],ah
  407957:	xchg   ebx,eax
  407958:	dec    edx
  407959:	fs or  eax,0x574dc554
  40795f:	call   DWORD PTR [eiz*2-0x33550a6e]
  407966:	add    ch,dh
  407968:	xor    al,0x1c
  40796a:	sbb    DWORD PTR [ebx-0x10],esi
  40796d:	sbb    BYTE PTR [edx+0x5e],ah
  407970:	pop    ds
  407971:	rol    ecx,1
  407973:	rcl    BYTE PTR [ecx+0x40],1
  407976:	stos   DWORD PTR es:[edi],eax
  407977:	mov    ebp,0x71819408
  40797c:	in     eax,0x81
  40797e:	and    ah,cl
  407980:	ret    
  407981:	cmp    edx,DWORD PTR [eax-0x43]
  407984:	popf   
  407985:	add    ah,ah
  407987:	sub    DWORD PTR [ecx],esp
  407989:	push   cs
  40798a:	push   ecx
  40798b:	sbb    eax,0x9045b210
  407990:	jno    0x4079cf
  407992:	push   esi
  407993:	adc    BYTE PTR [ebx-0x11c5b283],0x8
  40799a:	push   esi
  40799b:	mov    ebx,0xa7c7ce46
  4079a0:	std    
  4079a1:	fld    TBYTE PTR [eax+0x1]
  4079a4:	mov    BYTE PTR [ebx+0x28],bl
  4079a7:	or     eax,0x596a7492
  4079ac:	rcr    DWORD PTR [edi+eax*4],0x4f
  4079b0:	cmc    
  4079b1:	in     eax,0x3a
  4079b3:	push   ebp
  4079b4:	pop    edi
  4079b5:	and    BYTE PTR [eax],dl
  4079b7:	mov    ebp,DWORD PTR [edx+esi*4-0x5709da94]
  4079be:	retf   0x918d
  4079c1:	test   dl,bl
  4079c3:	mov    bl,0x34
  4079c5:	dec    eax
  4079c6:	mov    BYTE PTR [esi-0x71],0x3e
  4079ca:	dec    ebx
  4079cb:	xlat   BYTE PTR ds:[ebx]
  4079cc:	inc    edi
  4079cd:	sub    bh,al
  4079cf:	call   0x710ed258
  4079d4:	(bad)  
  4079d6:	push   ebp
  4079d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d8:	pop    edi
  4079d9:	and    esp,ecx
  4079db:	jge    0x407a41
  4079dd:	lea    ebp,[ecx]
  4079df:	xchg   edx,eax
  4079e0:	popf   
  4079e1:	ds inc edi
  4079e3:	jg     0x4079f6
  4079e5:	(bad)  
  4079e6:	and    al,0x98
  4079e8:	jge    0x407a25
  4079ea:	fcom   DWORD PTR [eax+0x1c]
  4079ed:	jnp    0x407a60
  4079ef:	mov    al,0xb3
  4079f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079f2:	jne    0x4079fe
  4079f4:	push   eax
  4079f5:	loopne 0x407a49
  4079f7:	inc    ebp
  4079f8:	(bad)  
  4079f9:	adc    eax,0x9aa598bf
  4079fe:	test   al,0xc1
  407a00:	ds daa 
  407a02:	clc    
  407a03:	(bad)  
  407a06:	cmp    al,0xdb
  407a08:	push   0x6c169561
  407a0d:	in     eax,dx
  407a0e:	jne    0x407a5e
  407a10:	arpl   WORD PTR [ebp+0x2359a829],si
  407a16:	and    eax,0x1a386ca0
  407a1b:	ret    
  407a1c:	cmp    BYTE PTR gs:0x90cbaf1,ch
  407a23:	sti    
  407a24:	mov    al,ds:0x623c54ae
  407a29:	ror    BYTE PTR ds:0x5534905e,0x93
  407a30:	fbstp  TBYTE PTR [eax+0xfb64585]
  407a36:	pop    esi
  407a37:	sbb    al,0x95
  407a39:	retf   0x2dda
  407a3c:	push   ebp
  407a3d:	sar    BYTE PTR ds:0xae40b0c8,0xf9
  407a44:	test   eax,0xf4bb3bbd
  407a49:	sbb    eax,DWORD PTR gs:[eax-0x7f]
  407a4d:	cld    
  407a4e:	in     al,dx
  407a4f:	call   0xcc6afe7c
  407a54:	pop    esp
  407a55:	ds icebp 
  407a57:	mov    cl,0xdc
  407a59:	and    ecx,DWORD PTR [ebp+0x30]
  407a5c:	xchg   edx,eax
  407a5d:	stc    
  407a5e:	jb     0x407a01
  407a60:	fdivp  st(6),st
  407a62:	mov    edi,0xe6d5d739
  407a67:	add    DWORD PTR [ebx-0x26e3d96],edi
  407a6d:	mov    esp,0xf624e398
  407a72:	cmp    al,0x4b
  407a74:	into   
  407a75:	cmp    edx,eax
  407a77:	mov    esp,0xc2c3112f
  407a7c:	xchg   BYTE PTR [edi+0x7ab54402],al
  407a82:	xchg   ecx,eax
  407a83:	mov    ebp,0xde8c8e9d
  407a88:	xchg   edx,eax
  407a89:	lods   al,BYTE PTR ds:[esi]
  407a8a:	mov    al,ds:0xd76fbfdf
  407a8f:	leave  
  407a90:	outs   dx,DWORD PTR ds:[esi]
  407a91:	cmp    al,0x1f
  407a93:	je     0x407a95
  407a95:	(bad)  
  407a96:	jecxz  0x407a5b
  407a98:	and    al,0x7b
  407a9a:	cld    
  407a9b:	fidivr DWORD PTR [edx-0x42]
  407a9e:	inc    eax
  407a9f:	push   cs
  407aa0:	sub    eax,0x26704236
  407aa5:	dec    edi
  407aa6:	retf   
  407aa7:	inc    esp
  407aa8:	and    eax,0x8a4e2025
  407aad:	jle    0x407a67
  407aaf:	adc    al,0x7c
  407ab1:	retf   
  407ab2:	(bad)  
  407ab5:	enter  0x91c9,0xc4
  407ab9:	(bad)  
  407aba:	mov    ch,0xc9
  407abc:	add    eax,0x5ddbf8d6
  407ac1:	enter  0x882d,0x2f
  407ac5:	(bad)
  407ac9:	push   eax
  407aca:	jmp    0x19c8:0xc326067b
  407ad1:	and    BYTE PTR ds:0xd35f53f9,ah
  407ad7:	mov    esi,0x2638eda8
  407adc:	push   eax
  407add:	xchg   edx,eax
  407ade:	push   esi
  407adf:	cmp    eax,0x33da75cd
  407ae4:	push   ds
  407ae5:	pop    ebp
  407ae6:	outs   dx,BYTE PTR ds:[esi]
  407ae7:	xchg   BYTE PTR [ebx],ch
  407ae9:	sub    DWORD PTR [ebp-0x78a7a4c5],0xfffffffe
  407af0:	push   0x44
  407af2:	xlat   BYTE PTR ds:[ebx]
  407af3:	jbe    0x407add
  407af5:	pop    esp
  407af6:	icebp  
  407af7:	mov    ch,0x92
  407af9:	frstor [edi]
  407afb:	sub    cl,BYTE PTR [ebx+0x73a3c918]
  407b01:	push   edi
  407b02:	jmp    0x2014aa11
  407b07:	ret    
  407b08:	mov    bl,0x2f
  407b0a:	mov    DWORD PTR [ecx-0xaddda7b],eax
  407b10:	pop    eax
  407b11:	test   DWORD PTR [eax],esi
  407b13:	mov    edi,0xe48cca14
  407b18:	cmp    DWORD PTR [ebp+0x3f97e643],esp
  407b1e:	adc    ebx,DWORD PTR [esi-0x62ac7134]
  407b24:	sbb    al,0xd8
  407b26:	cld    
  407b27:	cmp    DWORD PTR [eax+eax*8-0x6e],ecx
  407b2b:	imul   edx,eax,0x3c223b36
  407b31:	test   DWORD PTR [ebp+0x8],esp
  407b34:	cmp    DWORD PTR [ebx-0x75],ebp
  407b37:	cmp    al,0xac
  407b39:	cwde   
  407b3a:	fstp   st(6)
  407b3c:	loop   0x407ac1
  407b3e:	xchg   esp,eax
  407b3f:	ins    DWORD PTR es:[edi],dx
  407b40:	and    bh,BYTE PTR [ecx]
  407b42:	das    
  407b43:	cdq    
  407b44:	xchg   esi,eax
  407b45:	sub    cl,ch
  407b47:	enter  0x538c,0x1d
  407b4b:	stos   DWORD PTR es:[edi],eax
  407b4c:	pop    edx
  407b4d:	xor    eax,0x608d88d2
  407b52:	push   ebx
  407b53:	jae    0x407b1b
  407b55:	mov    ch,BYTE PTR [ebp-0x5f]
  407b58:	fs jmp 0x6bf2ae64
  407b5e:	pop    ds
  407b5f:	sbb    DWORD PTR [eax+edi*4-0x2078c68e],eax
  407b66:	mov    edi,0xcb107905
  407b6b:	retf   0xd875
  407b6e:	mov    ch,0xd6
  407b70:	loop   0x407b6a
  407b72:	paddusw mm4,QWORD PTR [esi-0x66a71241]
  407b79:	hlt    
  407b7a:	int3   
  407b7b:	jmp    0x1cce:0xa5f250f7
  407b82:	lock (bad) 
  407b87:	ds jns 0x407ba3
  407b8a:	or     edx,DWORD PTR [edx]
  407b8c:	and    DWORD PTR [eax-0x682d7de4],edx
  407b92:	inc    esi
  407b93:	scas   al,BYTE PTR es:[edi]
  407b94:	stos   BYTE PTR es:[edi],al
  407b95:	cmp    edi,DWORD PTR [esi+eiz*2]
  407b98:	jl     0x407be3
  407b9a:	pop    ds
  407b9b:	cmp    eax,0x88092072
  407ba0:	adc    eax,esi
  407ba2:	data16 aas 
  407ba4:	aas    
  407ba5:	cmp    al,0xf5
  407ba7:	push   edx
  407ba8:	fdivr  QWORD PTR [eax+edi*2-0x23]
  407bac:	leave  
  407bad:	xor    eax,0x42218484
  407bb2:	sub    DWORD PTR [edi+edi*4-0x15],esp
  407bb6:	and    DWORD PTR ds:0x40879593,eax
  407bbd:	xor    DWORD PTR [eax+0x44b866af],esp
  407bc3:	push   0x2f1193e0
  407bc8:	test   edi,0xf2d96ebf
  407bce:	mov    bh,0x43
  407bd0:	sbb    eax,0x586c1140
  407bd5:	jnp    0x407b7b
  407bd7:	imul   BYTE PTR [ecx]
  407bd9:	pop    esp
  407bda:	adc    BYTE PTR [esi+0x9],dh
  407bdd:	cld    
  407bde:	xor    ch,0x46
  407be1:	loope  0x407c17
  407be3:	mov    cl,0x2a
  407be5:	dec    edi
  407be6:	add    DWORD PTR gs:[ebp-0x1f1c178a],ecx
  407bed:	push   edi
  407bee:	pop    ss
  407bef:	mov    al,ds:0x232db973
  407bf4:	sbb    ebp,edx
  407bf6:	sar    ecx,cl
  407bf8:	push   ss
  407bf9:	in     al,0x97
  407bfb:	sub    BYTE PTR [edi],cl
  407bfd:	int    0x7
  407bff:	cmp    bl,dh
  407c01:	psllw  mm0,QWORD PTR [ecx+0x18f3b14b]
  407c08:	xchg   esi,eax
  407c09:	sub    DWORD PTR [edx+0x70],0x8a4e547e
  407c10:	pop    esi
  407c11:	sub    bh,BYTE PTR [edi]
  407c13:	mov    al,0x2b
  407c15:	mov    ebp,0x141c6421
  407c1a:	cs (bad) 
  407c1c:	fnstsw WORD PTR [ecx+0x2d3efede]
  407c22:	fadd   st(7),st
  407c24:	daa    
  407c25:	data16 or al,al
  407c28:	adc    al,0x41
  407c2a:	jne    0x407c87
  407c2c:	popa   
  407c2d:	popf   
  407c2e:	mov    ds:0x9eab7911,eax
  407c33:	mov    ds:0x1003c4bb,eax
  407c38:	repnz ficom DWORD PTR [esi+0x44]
  407c3c:	ja     0x407c82
  407c3e:	repnz or eax,0x8543a42e
  407c44:	data16 in al,dx
  407c46:	xor    DWORD PTR [esi],eax
  407c48:	icebp  
  407c49:	icebp  
  407c4a:	jae    0x407c92
  407c4c:	fstp   st(4)
  407c4e:	dec    eax
  407c4f:	jmp    0x407c64
  407c51:	xor    eax,0x89f77940
  407c56:	add    esp,DWORD PTR ds:0xbf8e6bc3
  407c5c:	lods   al,BYTE PTR ds:[esi]
  407c5d:	jp     0x407c57
  407c5f:	lods   al,BYTE PTR ds:[esi]
  407c60:	mov    ebx,0xb59a3c8c
  407c65:	xor    cl,dh
  407c67:	push   ss
  407c68:	jle    0x407c3c
  407c6a:	mov    ecx,0x9772b634
  407c6f:	mov    bl,0x22
  407c71:	int    0xf1
  407c73:	jo     0x407c93
  407c75:	fisub  DWORD PTR [ebp+0x50]
  407c78:	adc    edi,eax
  407c7a:	stc    
  407c7b:	sub    ebp,DWORD PTR [edi+ebp*8]
  407c7e:	fisttp WORD PTR [esi]
  407c80:	retf   0xc8ba
  407c83:	fcmove st,st(3)
  407c85:	cmp    BYTE PTR [ebp+0x3c3781d0],0x27
  407c8c:	and    BYTE PTR [ebp-0x7959e5bf],bl
  407c92:	fld    st(1)
  407c94:	in     eax,dx
  407c95:	cmc    
  407c96:	fldcw  WORD PTR [ebx+0x42]
  407c99:	shl    esp,0xf4
  407c9c:	mov    al,BYTE PTR [esi+0x1f]
  407c9f:	mov    BYTE PTR [ebx],al
  407ca1:	loopne 0x407c4d
  407ca3:	ret    
  407ca4:	and    BYTE PTR [esi+0x3071aac9],bh
  407caa:	hlt    
  407cab:	nop
  407cac:	mov    gs,esi
  407cae:	loop   0x407cc0
  407cb0:	sbb    al,0xc8
  407cb2:	mov    edi,0x6920cca
  407cb7:	int    0x45
  407cb9:	cwde   
  407cba:	test   eax,0xa148b9b3
  407cbf:	call   0xb305:0xcb8ec64a
  407cc6:	fcomi  st,st(4)
  407cc8:	inc    ebx
  407cc9:	dec    ebp
  407cca:	ret    0x629c
  407ccd:	scas   eax,DWORD PTR es:[edi]
  407cce:	jbe    0x407ca5
  407cd0:	cmp    eax,0x11cbe7b0
  407cd5:	inc    edx
  407cd6:	or     ebp,esi
  407cd8:	enter  0xc0ea,0x25
  407cdc:	not    bl
  407cde:	adc    al,BYTE PTR [esi-0x57f2f65c]
  407ce4:	out    0x12,al
  407ce6:	cmp    BYTE PTR [edi+ecx*1],dh
  407ce9:	enter  0x16fa,0xc4
  407ced:	jae    0x407ca6
  407cef:	xchg   esp,eax
  407cf0:	popf   
  407cf1:	ret    
  407cf2:	fwait
  407cf3:	outs   dx,DWORD PTR ds:[esi]
  407cf4:	int3   
  407cf5:	mov    ebx,0x846ac7ba
  407cfa:	mov    ds:0x8d3fd9f0,eax
  407cff:	loop   0x407c9b
  407d01:	cdq    
  407d02:	ins    DWORD PTR es:[edi],dx
  407d03:	in     al,dx
  407d04:	clc    
  407d05:	inc    eax
  407d06:	mov    ah,0xb9
  407d08:	test   DWORD PTR [eax+0xb],ebp
  407d0b:	push   0xf5a34d3e
  407d10:	push   eax
  407d11:	xor    eax,0xec2b036a
  407d16:	sub    edi,DWORD PTR [ebx+0x7f]
  407d19:	jp     0x407d9a
  407d1b:	dec    ecx
  407d1c:	xor    al,0xd5
  407d1e:	and    edx,DWORD PTR [ebp-0x20]
  407d21:	dec    ebx
  407d22:	xlat   BYTE PTR ds:[ebx]
  407d23:	adc    ecx,ebp
  407d25:	mov    dl,0x1c
  407d27:	addr16 jp 0x407d79
  407d2a:	arpl   WORD PTR [ebp-0x2b4d4c51],bx
  407d30:	leave  
  407d31:	inc    ebx
  407d32:	xor    ebx,esi
  407d34:	jne    0x407cb8
  407d36:	(bad)  
  407d38:	in     al,0xd3
  407d3a:	sbb    edx,DWORD PTR [ebp-0x1bcf28ad]
  407d40:	jne    0x407d41
  407d42:	jae    0x407ce5
  407d44:	adc    BYTE PTR [eax],bl
  407d46:	and    al,0xd7
  407d48:	jno    0x407d07
  407d4a:	xchg   ebp,eax
  407d4b:	stc    
  407d4c:	push   edi
  407d4d:	test   BYTE PTR [ebx-0x4152ca29],cl
  407d53:	js     0x407d0c
  407d55:	outs   dx,BYTE PTR ds:[esi]
  407d56:	ret    
  407d57:	mov    bh,0x58
  407d59:	sub    al,0x4
  407d5b:	rcl    cl,0x71
  407d5e:	mov    eax,0xd6033ebd
  407d63:	aas    
  407d64:	(bad)  
  407d65:	call   DWORD PTR fs:[ebx]
  407d68:	les    esp,FWORD PTR [eax-0x45]
  407d6b:	cdq    
  407d6c:	stos   BYTE PTR es:[edi],al
  407d6d:	cld    
  407d6e:	xor    DWORD PTR [edi+0x714f74fc],ecx
  407d74:	xchg   edx,eax
  407d75:	stos   DWORD PTR es:[edi],eax
  407d76:	imul   ecx,DWORD PTR [esi],0x75
  407d79:	or     eax,0x57ec4d3f
  407d7e:	inc    esi
  407d7f:	jecxz  0x407d64
  407d81:	cmp    esi,DWORD PTR [edx+eiz*2+0x18621f3e]
  407d88:	adc    esp,edi
  407d8a:	fsub   DWORD PTR [ebx]
  407d8c:	jmp    0x407dfc
  407d8e:	popa   
  407d8f:	rcr    DWORD PTR [ebx+0x1e3fcf1],cl
  407d95:	adc    eax,0xefd7f60f
  407d9a:	push   esp
  407d9b:	scas   eax,DWORD PTR es:[edi]
  407d9c:	fidiv  DWORD PTR [ebx+eiz*2]
  407d9f:	cmc    
  407da0:	xchg   esi,eax
  407da1:	bound  eax,QWORD PTR ds:0xe331057
  407da7:	add    al,0x1c
  407da9:	mov    al,0xd4
  407dab:	sbb    DWORD PTR [edi],edi
  407dad:	sbb    eax,0x132945fd
  407db2:	stos   DWORD PTR es:[edi],eax
  407db3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407db4:	stos   DWORD PTR es:[edi],eax
  407db5:	and    BYTE PTR fs:[ebx+0xeb90209],ch
  407dbc:	hlt    
  407dbd:	mov    ecx,DWORD PTR [eax+0x4f22ef2c]
  407dc3:	push   ecx
  407dc4:	xchg   esp,ebx
  407dc6:	push   eax
  407dc7:	jmp    0xa957:0xef455126
  407dce:	mov    al,0x58
  407dd0:	mov    esp,ds
  407dd2:	in     al,0x33
  407dd4:	jge    0x407e4f
  407dd6:	ror    DWORD PTR [esi],1
  407dd8:	clc    
  407dd9:	enter  0xe6c1,0x2
  407ddd:	out    0x44,al
  407ddf:	mov    ebp,0xc8f78574
  407de4:	push   eax
  407de5:	out    dx,al
  407de6:	gs or  al,0x37
  407de9:	push   edi
  407dea:	xchg   BYTE PTR [ebx+0xe0c1fce],dh
  407df0:	xor    BYTE PTR [ebx+0x22],ch
  407df3:	sar    BYTE PTR [edi],cl
  407df5:	cmp    esp,DWORD PTR [edx+0x3f39f6b1]
  407dfb:	mov    edx,0x48cce481
  407e00:	out    dx,al
  407e01:	dec    eax
  407e02:	or     BYTE PTR [ecx],al
  407e04:	(bad)  
  407e05:	sbb    al,0x75
  407e07:	iret   
  407e08:	mov    bl,0xd8
  407e0a:	aas    
  407e0b:	std    
  407e0c:	(bad)
  407e0f:	dec    esi
  407e10:	call   0x1ea9:0x9bb45fe0
  407e17:	jmp    0x407e94
  407e19:	cmc    
  407e1a:	mov    bl,0x95
  407e1c:	out    dx,eax
  407e1d:	adc    ecx,DWORD PTR [ebx]
  407e1f:	mov    ds:0x5cba7cdd,al
  407e24:	pop    esi
  407e25:	xchg   ecx,eax
  407e26:	addr16 jge 0x407de0
  407e29:	cmp    al,0x3f
  407e2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e2c:	addr16 push ebp
  407e2e:	retf   
  407e2f:	jmp    0xb9d84003
  407e34:	cmp    esi,ebp
  407e36:	ins    BYTE PTR es:[edi],dx
  407e37:	call   0xbbbcac84
  407e3c:	jge    0x407e1b
  407e3e:	test   al,0x19
  407e40:	mov    ebp,0x40094d7a
  407e45:	or     ch,0xed
  407e48:	push   ebp
  407e49:	push   ds
  407e4a:	mov    ds:0x6e9afb38,eax
  407e4f:	xor    ecx,DWORD PTR [esi]
  407e51:	sub    BYTE PTR [ebx],bh
  407e53:	clc    
  407e54:	xchg   ebp,eax
  407e55:	lahf   
  407e56:	cmc    
  407e57:	mov    al,bh
  407e59:	(bad)  
  407e5a:	push   ecx
  407e5b:	xchg   ebx,eax
  407e5c:	adc    DWORD PTR [esi+ebx*2+0x1b7ebdc0],ecx
  407e63:	jno    0x407eb9
  407e65:	in     al,dx
  407e66:	inc    ebx
  407e67:	adc    al,0x73
  407e69:	and    al,0xb9
  407e6b:	test   BYTE PTR [esi-0x42c791be],dh
  407e71:	xchg   DWORD PTR [ecx-0x6b603e82],ebx
  407e77:	data16 rdpmc 
  407e7a:	mov    BYTE PTR [ecx+0x52],ch
  407e7d:	cmp    cl,BYTE PTR [edx-0x3]
  407e80:	push   esp
  407e81:	inc    edx
  407e82:	cld    
  407e83:	push   0xd38308b5
  407e88:	inc    ebp
  407e89:	test   DWORD PTR [ebx+eax*4],esp
  407e8c:	mov    gs:0xe3a8c364,al
  407e92:	pand   mm1,mm0
  407e95:	or     BYTE PTR [ecx],0xa
  407e98:	push   ebx
  407e99:	mov    bh,0xa
  407e9b:	xor    al,0xa3
  407e9d:	leave  
  407e9e:	mov    ebx,0x4e045c8e
  407ea3:	dec    esi
  407ea4:	test   al,0x1b
  407ea6:	or     BYTE PTR [eax+0x45],dh
  407ea9:	mov    ebp,0xf32fda00
  407eae:	dec    esp
  407eaf:	les    esi,FWORD PTR [ebx]
  407eb1:	das    
  407eb2:	sahf   
  407eb3:	push   eax
  407eb4:	jne    0x407e49
  407eb6:	pop    esp
  407eb7:	or     ebp,DWORD PTR [edi]
  407eb9:	cmp    DWORD PTR [edi-0x36c1df19],edi
  407ebf:	fs jecxz 0x407f12
  407ec2:	aaa    
  407ec3:	xchg   esi,eax
  407ec4:	je     0x407eb0
  407ec6:	jecxz  0x407ebb
  407ec8:	add    al,0x85
  407eca:	retf   
  407ecb:	das    
  407ecc:	dec    esi
  407ecd:	ror    eax,0xcd
  407ed0:	inc    ebp
  407ed1:	fstp   TBYTE PTR [esp+eax*4+0x54b52029]
  407ed8:	mov    bl,0xf9
  407eda:	mov    ecx,ebp
  407edc:	cmp    BYTE PTR [edx],dl
  407ede:	xlat   BYTE PTR ds:[ebx]
  407edf:	pop    ecx
  407ee0:	mov    edi,0x10a3c6a4
  407ee5:	dec    eax
  407ee6:	push   esi
  407ee7:	cmc    
  407ee8:	sahf   
  407ee9:	rcl    DWORD PTR [ecx+0x14f861de],0xfe
  407ef0:	cmp    BYTE PTR [esi+0x2a],al
  407ef3:	inc    eax
  407ef4:	lods   al,BYTE PTR ds:[esi]
  407ef5:	ins    BYTE PTR es:[edi],dx
  407ef6:	test   bh,bh
  407ef8:	or     al,BYTE PTR [edi+0xa]
  407efb:	repnz mov ebp,0x35342308
  407f01:	ja     0x407ec9
  407f03:	or     BYTE PTR [edi],dh
  407f05:	mov    ecx,0xb046c674
  407f0a:	rol    BYTE PTR [ebx-0x74398b96],cl
  407f10:	pushf  
  407f11:	lea    ebx,[ebx-0x67c7ba8]
  407f17:	cdq    
  407f18:	cmc    
  407f19:	xchg   bl,dl
  407f1b:	or     al,0x11
  407f1d:	ret    
  407f1e:	stos   BYTE PTR es:[edi],al
  407f1f:	(bad)  
  407f20:	mov    al,ds:0x3ab78cff
  407f25:	inc    ebx
  407f26:	jns    0x407ed6
  407f28:	pop    ecx
  407f29:	sub    al,0x6b
  407f2b:	inc    edi
  407f2c:	sbb    edx,ebx
  407f2e:	add    al,0xb
  407f30:	int3   
  407f31:	cmp    bh,0x7b
  407f34:	jns    0x407ec0
  407f36:	adc    BYTE PTR [edi],cl
  407f38:	gs popa 
  407f3a:	mov    bl,0x1d
  407f3c:	fmul   st,st(1)
  407f3e:	xor    eax,0xffcaf31c
  407f43:	loop   0x407ed9
  407f45:	hlt    
  407f46:	icebp  
  407f47:	test   al,0x89
  407f49:	(bad)  
  407f4a:	(bad)  
  407f4b:	loopne 0x407f3f
  407f4d:	mov    ch,ch
  407f4f:	idiv   BYTE PTR ss:[ebx+0x5ce957f8]
  407f56:	(bad)  
  407f57:	rcr    cl,1
  407f59:	sti    
  407f5a:	iret   
  407f5b:	push   esp
  407f5c:	or     ebx,ecx
  407f5e:	mov    dh,0x4f
  407f60:	push   ebp
  407f61:	ret    
  407f62:	and    ch,BYTE PTR [eax+0x6926870]
  407f68:	add    al,0xdf
  407f6a:	loopne 0x407f12
  407f6c:	jmp    0x407f42
  407f6e:	je     0x407fc9
  407f70:	mov    al,ds:0x7a8fa50d
  407f75:	mov    ecx,DWORD PTR [eax+esi*8+0x517a990a]
  407f7c:	pop    ebp
  407f7d:	sub    DWORD PTR [eax+ebx*8+0x39c9af48],esp
  407f84:	jno    0x407f61
  407f86:	(bad)  [ecx]
  407f88:	out    dx,eax
  407f89:	push   edx
  407f8a:	pop    es
  407f8b:	xchg   ecx,eax
  407f8c:	fldenv [edx+eiz*8]
  407f8f:	retf   0xacc3
  407f92:	nop
  407f93:	sub    eax,0xfef79256
  407f98:	aam    0x5c
  407f9a:	ret    
  407f9b:	jae    0x407f52
  407f9d:	hlt    
  407f9e:	xor    dh,0x1e
  407fa1:	scas   eax,DWORD PTR es:[edi]
  407fa2:	add    dh,BYTE PTR [eax-0x2e]
  407fa5:	pop    ebx
  407fa6:	jle    0x407f97
  407fa8:	shl    BYTE PTR [edi+0x7ad1d78a],0xe2
  407faf:	nop
  407fb0:	cmp    BYTE PTR [esi+0x149338dc],dl
  407fb6:	mov    WORD PTR [esi],gs
  407fb8:	mov    cl,0x97
  407fba:	test   eax,0x6c331453
  407fbf:	dec    esp
  407fc0:	nop
  407fc1:	sub    dl,BYTE PTR [esi]
  407fc3:	bound  edi,QWORD PTR gs:[edi]
  407fc6:	bound  eax,QWORD PTR [edx]
  407fc8:	call   0xb772:0x26338fc1
  407fcf:	inc    ebx
  407fd0:	imul   esi,DWORD PTR [eax+esi*2+0x4e],0xffffffa7
  407fd5:	or     BYTE PTR [ecx],bl
  407fd7:	ds pop ss
  407fd9:	(bad)  
  407fda:	stos   DWORD PTR es:[edi],eax
  407fdb:	aaa    
  407fdc:	xchg   BYTE PTR [edx+0x4cb8b67e],bl
  407fe2:	and    al,0x7d
  407fe4:	xor    DWORD PTR [esi],edx
  407fe6:	rol    edi,cl
  407fe8:	lods   eax,DWORD PTR ds:[esi]
  407fe9:	sub    al,0xd8
  407feb:	xchg   BYTE PTR [edx-0x1c67a26c],dl
  407ff1:	jge    0x408017
  407ff3:	push   ss
  407ff4:	cli    
  407ff5:	into   
  407ff6:	jp     0x408044
  407ff8:	test   al,0xeb
  407ffa:	out    dx,al
  407ffb:	sub    DWORD PTR [edi-0xa],edx
  407ffe:	mov    al,0x66
  408000:	mov    esp,0x3be3d6ad
  408005:	jbe    0x407fae
  408007:	pop    ds
  408008:	dec    esi
  408009:	mov    ebp,0xcee96979
  40800e:	clc    
  40800f:	popf   
  408010:	je     0x407fd6
  408012:	cmp    DWORD PTR [ecx-0x67f59a7d],0x55
  408019:	xchg   ebp,eax
  40801a:	push   cs
  40801b:	(bad)  
  40801c:	clc    
  40801d:	xchg   ecx,eax
  40801e:	inc    eax
  40801f:	leave  
  408020:	sbb    bl,ah
  408022:	test   eax,0x4dd8fb2
  408027:	lods   eax,DWORD PTR ds:[esi]
  408028:	test   DWORD PTR [edx+0x3b166b73],edx
  40802e:	mov    eax,ds:0x62d8859b
  408033:	and    bh,BYTE PTR [ebx+0x16d1effd]
  408039:	retf   0x423c
  40803c:	ja     0x40800a
  40803e:	sti    
  40803f:	pushf  
  408040:	pop    ds
  408041:	hlt    
  408042:	add    BYTE PTR [eax-0x4ccab703],ah
  408048:	call   0x4949:0x3b0aeb18
  40804f:	push   ss
  408050:	xchg   edx,eax
  408051:	fsub   DWORD PTR [eax]
  408053:	scas   al,BYTE PTR es:[edi]
  408054:	(bad)  [esi+0x5e]
  408057:	ss dec ebp
  408059:	imul   esp,DWORD PTR [ecx+0x4bbcb928],0x12
  408060:	or     ch,BYTE PTR [ebx+ecx*8-0x6f6a2873]
  408067:	lock xchg edi,eax
  408069:	or     DWORD PTR [eax+edi*2+0x57],edi
  40806d:	xchg   ebx,eax
  40806e:	scas   eax,DWORD PTR es:[edi]
  40806f:	jnp    0x408078
  408071:	cld    
  408072:	imul   edi,DWORD PTR [edi+0x66d60d38],0xd2e86f5f
  40807c:	push   0xffffff95
  40807e:	arpl   WORD PTR [edi+0x70],cx
  408081:	jmp    0x4080ff
  408083:	pop    ss
  408084:	popa   
  408085:	loopne 0x408104
  408087:	sbb    bl,BYTE PTR [edx+0xc069efc]
  40808d:	shr    DWORD PTR [ecx-0x3b],0xbd
  408091:	ja     0x40810d
  408093:	outs   dx,DWORD PTR ds:[esi]
  408094:	ds ss sbb eax,0xc863554b
  40809b:	in     al,dx
  40809c:	xchg   edx,eax
  40809d:	jns    0x408108
  40809f:	aas    
  4080a0:	dec    eax
  4080a1:	in     eax,dx
  4080a2:	xchg   edx,eax
  4080a3:	inc    ecx
  4080a4:	cld    
  4080a5:	or     edi,DWORD PTR [eax]
  4080a7:	sar    DWORD PTR [esi],1
  4080a9:	in     eax,0x22
  4080ab:	cmp    ah,BYTE PTR [eax]
  4080ad:	sti    
  4080ae:	pop    edx
  4080af:	sbb    al,0xb3
  4080b1:	mov    ebx,ecx
  4080b3:	aad    0xfb
  4080b5:	lahf   
  4080b6:	lahf   
  4080b7:	repnz dec ecx
  4080b9:	xchg   ecx,eax
  4080ba:	add    al,0xce
  4080bc:	jg     0x40810b
  4080be:	push   ebp
  4080bf:	adc    BYTE PTR [eax],ah
  4080c1:	sbb    cl,BYTE PTR [ebp+edi*1-0x6f481421]
  4080c8:	ucomiss xmm0,DWORD PTR [ecx+0x16]
  4080cc:	pop    ss
  4080cd:	loope  0x408138
  4080cf:	retf   0xc421
  4080d2:	bound  edi,QWORD PTR [eax+0x7d]
  4080d5:	jno    0x408068
  4080d7:	push   edi
  4080d8:	sub    al,0x59
  4080da:	pop    edx
  4080db:	loope  0x4080f3
  4080dd:	sbb    eax,0xcafbc005
  4080e2:	cwde   
  4080e3:	out    0x57,al
  4080e5:	mov    al,0x4c
  4080e7:	and    eax,0x9d9b7
  4080ec:	pop    edi
  4080ed:	not    BYTE PTR [ecx+0x250fbad8]
  4080f3:	mov    DWORD PTR [eax+0x5c],0x23903e4c
  4080fa:	sub    eax,0xbb25cc45
  4080ff:	int3   
  408100:	les    ebx,FWORD PTR [edx+0x3fc8cd57]
  408106:	xchg   ebp,eax
  408107:	repnz inc esp
  408109:	lods   al,BYTE PTR ds:[esi]
  40810a:	(bad)  
  40810b:	mov    ch,0xc1
  40810d:	loopne 0x40813c
  40810f:	or     BYTE PTR [edx],bh
  408111:	dec    ebp
  408112:	push   cs
  408113:	shl    DWORD PTR [ecx+0x7],0xf3
  408117:	lods   eax,DWORD PTR ds:[esi]
  408118:	jge    0x40810c
  40811a:	pop    ebx
  40811b:	(bad)  
  40811c:	inc    eax
  40811d:	push   eax
  40811e:	ficomp WORD PTR [ebx]
  408120:	(bad)  [eax+edi*2]
  408123:	dec    ecx
  408124:	(bad)  
  408125:	pushf  
  408126:	out    0x43,eax
  408128:	pusha  
  408129:	jecxz  0x408107
  40812b:	daa    
  40812c:	fwait
  40812d:	not    DWORD PTR [ebx+0x52]
  408130:	cmp    BYTE PTR [eax+0x22],cl
  408133:	ja     0x40810a
  408135:	cmp    ebx,ebp
  408137:	cmp    eax,0x9db51d71
  40813c:	neg    BYTE PTR [eax-0x22]
  40813f:	jl     0x408114
  408141:	pop    edx
  408142:	cmp    BYTE PTR [ebx+ecx*4+0x4a],bh
  408146:	inc    ecx
  408147:	lock xchg DWORD PTR [ecx],esp
  40814a:	cwde   
  40814b:	fwait
  40814c:	icebp  
  40814d:	(bad)  
  40814f:	nop
  408150:	sub    ch,BYTE PTR [edi-0x5b9fc51f]
  408156:	or     BYTE PTR [edx-0x3bb783d2],dl
  40815c:	or     eax,0xd7869460
  408161:	cmp    bl,bl
  408163:	sbb    eax,DWORD PTR [edi+0x53]
  408166:	loopne 0x40815f
  408168:	push   ebx
  408169:	sbb    al,0xd6
  40816b:	dec    edx
  40816c:	and    esp,eax
  40816e:	clc    
  40816f:	stos   DWORD PTR es:[edi],eax
  408170:	retf   0xf32c
  408173:	and    ah,0xc5
  408176:	mov    ecx,0xf0a339c7
  40817b:	dec    ebp
  40817c:	add    al,0x4a
  40817e:	push   edi
  40817f:	js     0x408191
  408181:	dec    ebp
  408182:	or     dl,bl
  408184:	xchg   DWORD PTR [ebx+0x31e720a4],eax
  40818a:	fdivr  DWORD PTR [edi]
  40818c:	push   eax
  40818d:	fs pop ss
  40818f:	add    ah,BYTE PTR [edi+0x4f]
  408192:	xchg   esi,eax
  408193:	mov    dl,0x1d
  408195:	jp     0x408171
  408197:	das    
  408198:	test   al,0xc7
  40819a:	dec    ebp
  40819b:	pop    ebx
  40819c:	inc    esi
  40819d:	cld    
  40819e:	push   eax
  4081a0:	push   eax
  4081a1:	shl    ebp,1
  4081a3:	mov    bl,0xd0
  4081a5:	and    al,0xfb
  4081a7:	mov    edx,0x92c25042
  4081ad:	inc    ebx
  4081ae:	dec    esp
  4081af:	gs mov dl,0x31
  4081b2:	cmp    ebp,ebp
  4081b4:	push   ds
  4081b5:	mov    esi,0xb5618d32
  4081ba:	push   esi
  4081bb:	xchg   ecx,eax
  4081bc:	pop    edx
  4081bd:	outs   dx,BYTE PTR ds:[esi]
  4081be:	xchg   esi,eax
  4081bf:	mov    ecx,0x2037765c
  4081c4:	ror    BYTE PTR [ebx],cl
  4081c6:	ds fcmovbe st,st(4)
  4081c9:	jo     0x408247
  4081cb:	addr16 je 0x408225
  4081ce:	add    eax,edi
  4081d0:	mov    dl,0xf7
  4081d2:	or     ah,BYTE PTR [esi+0x466102dd]
  4081d8:	out    0x56,eax
  4081da:	jle    0x408254
  4081dc:	mov    al,ds:0x66cdb421
  4081e1:	dec    ebp
  4081e2:	int    0x8a
  4081e4:	in     eax,dx
  4081e5:	cdq    
  4081e6:	pop    esp
  4081e7:	outs   dx,DWORD PTR ds:[esi]
  4081e8:	add    al,0xe4
  4081ea:	ret    0xb0b7
  4081ed:	sub    DWORD PTR [esp+edx*1-0x74],ebx
  4081f1:	mov    ebp,DWORD PTR [ecx+0x4d3ab54]
  4081f7:	mov    edi,0x6e230567
  4081fc:	fcom   DWORD PTR [edx]
  4081fe:	push   ebp
  4081ff:	addr16 push es
  408201:	cs popa 
  408203:	mov    eax,ds:0x5f883670
  408208:	stos   DWORD PTR es:[edi],eax
  408209:	jbe    0x408201
  40820b:	or     bl,ch
  40820d:	mov    al,ds:0xd50d2bba
  408212:	push   esp
  408213:	inc    ebp
  408214:	aas    
  408215:	hlt    
  408216:	in     al,0x95
  408218:	adc    al,0xc
  40821a:	mov    ch,0x6f
  40821c:	adc    BYTE PTR [edi],dh
  40821e:	jo     0x40823b
  408220:	mov    bh,0xe8
  408222:	in     al,0x85
  408224:	dec    ecx
  408225:	call   0xd38d69cb
  40822a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40822b:	(bad)  
  40822c:	(bad)  
  40822d:	repnz push 0x12
  408230:	imul   esi,DWORD PTR [ecx],0x3c
  408233:	and    BYTE PTR [esi-0x21e6acb1],dl
  408239:	mov    cs,WORD PTR [ecx]
  40823b:	push   esi
  40823c:	add    al,0x6
  40823e:	adc    BYTE PTR [edx+edi*2-0x5355ae78],bh
  408245:	jbe    0x40820f
  408247:	retf   
  408248:	sub    ebx,DWORD PTR [ecx+0x4c1c97d5]
  40824e:	cmp    eax,edi
  408250:	add    al,0x8
  408252:	sub    ebx,DWORD PTR [edx-0x1ac74a0c]
  408258:	rol    ecx,0xad
  40825b:	inc    ebx
  40825c:	cs and al,0xe1
  40825f:	jbe    0x408209
  408261:	pushf  
  408262:	add    bh,al
  408264:	xchg   esp,eax
  408265:	aas    
  408266:	mov    ebx,0xa7b29baf
  40826b:	jns    0x4082c6
  40826d:	stos   DWORD PTR es:[edi],eax
  40826e:	mov    esi,DWORD PTR [edx+0x5f4edc8a]
  408274:	mov    ebp,0xc9e9a780
  408279:	adc    DWORD PTR [edx+eiz*4+0x14a6a992],edi
  408280:	das    
  408281:	mov    edx,0xec7b63e9
  408286:	or     DWORD PTR [ebp+0x33],edx
  408289:	hlt    
  40828a:	(bad)  
  40828b:	out    dx,al
  40828c:	repnz and eax,0x7f33ff0e
  408292:	fucomip st,st(0)
  408294:	js     0x408229
  408296:	mov    dl,0x27
  408298:	div    DWORD PTR [esi]
  40829a:	into   
  40829b:	(bad)  
  40829d:	outs   dx,DWORD PTR ds:[esi]
  40829e:	(bad)  
  40829f:	inc    edx
  4082a0:	mov    bl,0xb2
  4082a2:	xchg   esp,eax
  4082a3:	nop
  4082a4:	cmp    bl,BYTE PTR [ebp-0x19602b66]
  4082aa:	fnstenv [ebp+0x2462ecc0]
  4082b0:	fst    QWORD PTR [ecx-0x60]
  4082b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082b4:	movlps xmm4,QWORD PTR [edx+0x1e0601b8]
  4082bb:	test   eax,0x3beab1a1
  4082c0:	sbb    eax,0x45479580
  4082c5:	xor    al,0x3d
  4082c7:	sub    dl,BYTE PTR [ecx]
  4082c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082ca:	dec    esi
  4082cb:	rcl    DWORD PTR [ebx+0x67],0xbf
  4082cf:	les    edx,FWORD PTR [edi-0x19]
  4082d2:	push   es
  4082d3:	add    BYTE PTR [ebx],ah
  4082d5:	(bad)  
  4082d7:	scas   al,BYTE PTR es:[edi]
  4082d8:	jns    0x408260
  4082da:	mov    BYTE PTR [ebp+0x30],dh
  4082dd:	rol    DWORD PTR [eax+0x6518c3bc],1
  4082e3:	outs   dx,DWORD PTR ds:[esi]
  4082e4:	in     al,0x53
  4082e6:	rcr    DWORD PTR [eax+0x0],1
  4082e9:	(bad)  
  4082ea:	stc    
  4082eb:	outs   dx,BYTE PTR ds:[esi]
  4082ec:	jb     0x408348
  4082ee:	and    eax,0xc7651610
  4082f3:	cld    
  4082f4:	push   esi
  4082f5:	std    
  4082f6:	out    0x7b,eax
  4082f8:	mov    eax,0xb74786af
  4082fd:	mov    edi,0x49bd8f31
  408302:	jne    0x4082eb
  408304:	sbb    BYTE PTR [ebx-0xc438183],cl
  40830a:	and    ebx,DWORD PTR ds:0xcf08894c
  408310:	pushf  
  408311:	mov    bh,0x49
  408313:	adc    BYTE PTR ds:0xdbb9b715,dh
  408319:	xchg   edx,eax
  40831a:	fidivr DWORD PTR [edi]
  40831c:	in     eax,0x95
  40831e:	push   ebp
  40831f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408320:	sub    DWORD PTR [edx+ecx*2],edx
  408323:	mov    esi,0xccfa019d
  408328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408329:	xor    ecx,ebp
  40832b:	mov    bh,0xf
  40832d:	adc    al,0x9e
  40832f:	test   DWORD PTR [eax],esi
  408331:	or     al,0x73
  408333:	mov    ?,WORD PTR [edi]
  408335:	sbb    eax,0xb18b292d
  40833a:	or     eax,0x220c6e5c
  40833f:	pop    edx
  408340:	aad    0x57
  408342:	dec    ebp
  408343:	cmp    eax,0xb97667e5
  408348:	mov    ah,bh
  40834a:	clc    
  40834b:	xchg   esp,eax
  40834c:	inc    esi
  40834d:	out    dx,al
  40834e:	push   esp
  40834f:	jnp    0x4082ee
  408351:	inc    esi
  408352:	push   ds
  408353:	js     0x40836a
  408355:	sbb    BYTE PTR [eax-0x40],ah
  408358:	mov    edi,edi
  40835a:	pop    ds
  40835b:	inc    eax
  40835c:	repnz icebp 
  40835e:	outs   dx,DWORD PTR ds:[esi]
  40835f:	xor    ch,al
  408361:	js     0x408340
  408363:	mov    edx,0x7323e3c1
  408368:	scas   al,BYTE PTR es:[edi]
  408369:	xchg   esi,eax
  40836a:	sbb    DWORD PTR ds:0x283df52c,ebx
  408370:	mov    ebp,ds
  408372:	jmp    0x408307
  408374:	stos   DWORD PTR es:[edi],eax
  408375:	xor    dh,BYTE PTR [edi]
  408377:	jmp    0xfdd9:0x48bbb517
  40837e:	in     al,0x77
  408380:	arpl   WORD PTR [ebx+0x4f91a531],bx
  408386:	jecxz  0x40836f
  408388:	mov    ecx,cs
  40838a:	mov    BYTE PTR [ecx],ah
  40838c:	mov    eax,0xcf521703
  408391:	daa    
  408392:	sbb    edi,DWORD PTR [ebx]
  408394:	sbb    eax,0xa19981a0
  408399:	mov    WORD PTR [eax-0x3a72e544],?
  40839f:	jmp    0x408409
  4083a1:	das    
  4083a2:	mov    ebx,0x6562f696
  4083a7:	mov    bh,0xbd
  4083a9:	fstp   QWORD PTR [ebp+0x35]
  4083ac:	mov    eax,DWORD PTR [ecx]
  4083ae:	sahf   
  4083af:	push   ss
  4083b0:	call   FWORD PTR [ebx-0x55018725]
  4083b6:	and    DWORD PTR [edx+0x7e42ed15],ecx
  4083bc:	mov    ah,BYTE PTR [ecx+0x6b]
  4083bf:	fbld   TBYTE PTR [eax]
  4083c1:	dec    ebx
  4083c2:	push   edx
  4083c3:	sub    eax,0x62299ecf
  4083c8:	xchg   DWORD PTR [ecx+0x478bcebc],edx
  4083ce:	hlt    
  4083cf:	lods   al,BYTE PTR ds:[esi]
  4083d0:	push   es
  4083d1:	mov    cl,0x67
  4083d3:	call   0x6ba5b0a9
  4083d8:	xchg   ah,ah
  4083da:	sbb    BYTE PTR [ecx-0x2428c539],cl
  4083e0:	in     al,0x72
  4083e2:	loope  0x408367
  4083e4:	fwait
  4083e5:	dec    edx
  4083e6:	inc    edi
  4083e7:	ds jno 0x4083d0
  4083ea:	sbb    edi,ebp
  4083ec:	xchg   BYTE PTR [esi-0x18b76eac],dl
  4083f2:	sbb    BYTE PTR [ebx+ecx*1],0x75
  4083f6:	cmp    al,0xb6
  4083f8:	imul   esi,DWORD PTR [eax+0x6213b288],0xe09f7665
  408402:	mov    ch,0xc8
  408404:	cli    
  408405:	pop    edi
  408406:	shl    edi,0xa1
  408409:	xor    bh,BYTE PTR [edi]
  40840b:	pop    ebp
  40840c:	test   DWORD PTR [ebx+eax*2],eax
  40840f:	mov    cl,0x2b
  408411:	das    
  408412:	sub    eax,0x6b6bd3cc
  408417:	mov    eax,ds:0x89f779c3
  40841c:	(bad)  
  40841d:	shr    DWORD PTR [ebx+ebp*8-0x4e],cl
  408421:	mov    ch,dh
  408423:	jle    0x408423
  408425:	call   0x388a0e72
  40842a:	jg     0x408469
  40842c:	jo     0x408443
  40842e:	xor    DWORD PTR [edx],ebx
  408430:	je     0x4083f4
  408432:	mov    ah,0xf6
  408434:	test   DWORD PTR [ebp+0x6b],edi
  408437:	pushf  
  408438:	ja     0x4083fc
  40843a:	cld    
  40843b:	jmp    0xd590:0xcf85f34e
  408442:	dec    edi
  408443:	inc    edi
  408444:	jecxz  0x408491
  408446:	into   
  408447:	(bad)  
  408448:	mov    dl,0xd5
  40844a:	popa   
  40844b:	xor    bl,BYTE PTR es:0x7d8311a0
  408452:	sbb    DWORD PTR [edi],esp
  408454:	out    0xa6,eax
  408456:	push   eax
  408457:	ins    BYTE PTR es:[edi],dx
  408458:	mov    bh,0x73
  40845a:	outs   dx,BYTE PTR ds:[esi]
  40845b:	jo     0x408446
  40845d:	and    eax,0x71b5de22
  408462:	gs pop ds
  408464:	cmp    BYTE PTR [eax+0x2f],dl
  408467:	push   es
  408468:	mov    eax,0x1ccc933d
  40846d:	mov    ecx,0xdb183995
  408472:	mov    eax,ds:0xa87f96da
  408477:	cmc    
  408478:	fs call 0x2cae:0x8b82d231
  408480:	call   0x174be61c
  408485:	jp     0x408478
  408487:	sub    BYTE PTR [eax-0x290073a4],al
  40848d:	add    BYTE PTR [eax-0x5ba14083],0x82
  408494:	sar    ecx,cl
  408496:	(bad)  
  408497:	div    BYTE PTR ds:0xd9fe9f20
  40849d:	ret    
  40849e:	mov    DWORD PTR [ecx],ecx
  4084a0:	mov    gs,WORD PTR [ebp+0x142b365e]
  4084a6:	push   edx
  4084a7:	xor    ebp,ecx
  4084a9:	or     esp,ebp
  4084ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084ac:	mov    ecx,0xc17855e2
  4084b1:	rcl    BYTE PTR [ebx+esi*2],cl
  4084b4:	rcl    DWORD PTR [esi-0x2a2b6911],cl
  4084ba:	cmp    al,0x2
  4084bc:	dec    esp
  4084bd:	adc    dh,BYTE PTR [esi+ecx*2]
  4084c0:	sub    eax,0x4fbd20b2
  4084c5:	popf   
  4084c6:	push   esi
  4084c7:	push   cs
  4084c8:	push   0x24
  4084ca:	ror    ebp,1
  4084cc:	je     0x4084ca
  4084ce:	and    edi,ebp
  4084d0:	mov    bl,ch
  4084d2:	cmp    ecx,DWORD PTR [edx]
  4084d4:	mov    cl,BYTE PTR [eax+0x6a057874]
  4084da:	push   ebp
  4084db:	outs   dx,DWORD PTR ds:[esi]
  4084dc:	test   al,0x6b
  4084de:	(bad)  
  4084df:	stc    
  4084e0:	push   ecx
  4084e1:	stc    
  4084e2:	mov    bh,0x46
  4084e4:	and    WORD PTR [edi+0x4d7671d7],ax
  4084eb:	test   BYTE PTR [ecx-0x7075adc4],bh
  4084f1:	push   ebx
  4084f2:	xor    bl,BYTE PTR [ebp+0x1c5fcb77]
  4084f8:	cli    
  4084f9:	mov    ah,0x4f
  4084fb:	popa   
  4084fc:	mov    al,ds:0xc2c95e0e
  408501:	cs fwait
  408503:	jns    0x408519
  408505:	imul   ecx,esp,0x55
  408508:	(bad)  
  408509:	xor    DWORD PTR [eax-0x26],esi
  40850c:	cdq    
  40850d:	out    dx,eax
  40850e:	pop    edx
  40850f:	es scas al,BYTE PTR es:[edi]
  408511:	cli    
  408512:	xchg   ebx,eax
  408514:	pop    edx
  408515:	push   ds
  408516:	xchg   esi,eax
  408517:	push   ebp
  408518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408519:	aad    0x3
  40851b:	pop    esi
  40851c:	adc    ah,BYTE PTR [edx+ebp*2+0x44]
  408520:	pop    ebx
  408521:	bound  edx,QWORD PTR [ebx+ecx*8+0x17]
  408525:	popf   
  408526:	icebp  
  408527:	jp     0x408571
  408529:	retf   
  40852a:	cld    
  40852b:	sbb    edx,edx
  40852d:	sbb    al,cl
  40852f:	pushf  
  408530:	(bad)  
  408531:	lahf   
  408532:	mov    WORD PTR [edi+ebx*1-0x80],gs
  408536:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408537:	push   ebx
  408538:	dec    ebx
  408539:	outs   dx,DWORD PTR ds:[esi]
  40853a:	loop   0x40853e
  40853c:	add    ebx,DWORD PTR [edx]
  40853e:	and    ah,dh
  408540:	push   cs
  408541:	jecxz  0x40850c
  408543:	cmp    ah,0x80
  408546:	lds    edi,FWORD PTR [esi+edx*8-0x389d6400]
  40854d:	and    bh,BYTE PTR [edx-0x23]
  408550:	pop    ebx
  408551:	cmp    eax,DWORD PTR [ecx+0x13]
  408554:	cmp    BYTE PTR [eax],dh
  408556:	fidivr WORD PTR [edi+0x3cce9f1a]
  40855c:	push   0x43db853d
  408561:	test   al,0x92
  408563:	jp     0x4084f0
  408565:	sbb    ebp,DWORD PTR [ecx+eiz*4]
  408568:	test   eax,0xfe45c3bc
  40856d:	jbe    0x4085e0
  40856f:	scas   eax,DWORD PTR es:[edi]
  408570:	enter  0xd6c8,0xf0
  408574:	test   DWORD PTR [eax],ebp
  408576:	mov    ch,0x80
  408578:	and    ecx,DWORD PTR [eax+ebx*4+0x3c35b967]
  40857f:	push   ebx
  408580:	aam    0x2c
  408582:	inc    eax
  408583:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408584:	mov    ds:0xff4059d9,al
  408589:	(bad)  
  40858b:	ret    
  40858c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40858d:	or     ah,BYTE PTR [edx-0x24]
  408590:	pop    ebx
  408591:	jbe    0x408541
  408593:	or     al,0x64
  408595:	xor    al,0xca
  408597:	jo     0x40856e
  408599:	mov    ecx,0x3ea6050f
  40859e:	inc    esi
  40859f:	push   ecx
  4085a0:	outs   dx,BYTE PTR ds:[esi]
  4085a1:	or     eax,0x2997c6e0
  4085a6:	ds int 0x21
  4085a9:	lock pop edi
  4085ab:	jmp    0x4085bb
  4085ad:	fst    QWORD PTR [eax]
  4085af:	inc    esp
  4085b0:	imul   ecx,edx,0xffffffc1
  4085b3:	mov    al,ds:0x282b4cca
  4085b8:	mov    ds:0x45233f86,al
  4085bd:	ins    DWORD PTR es:[edi],dx
  4085be:	ins    BYTE PTR es:[edi],dx
  4085bf:	mov    edi,0x299f2b57
  4085c4:	pop    eax
  4085c5:	stos   BYTE PTR es:[edi],al
  4085c6:	jge    0x4085ab
  4085c8:	rol    BYTE PTR [eax-0x28],1
  4085cb:	and    edi,DWORD PTR [edi+ebx*2]
  4085ce:	fistp  WORD PTR [ebp-0x13]
  4085d1:	sahf   
  4085d2:	rcr    BYTE PTR ds:0xa735a920,0x98
  4085d9:	mov    al,0x62
  4085db:	(bad)  
  4085dc:	clc    
  4085dd:	adc    DWORD PTR [edx-0x798a66d8],ecx
  4085e3:	sti    
  4085e4:	cmp    DWORD PTR [esi-0x58a92c2c],edi
  4085ea:	cmp    DWORD PTR [edx],0xffffffc4
  4085ed:	test   al,0xf7
  4085ef:	xchg   ecx,eax
  4085f0:	addr16 push ds
  4085f2:	test   BYTE PTR [ebx+0xf79c163],bh
  4085f8:	icebp  
  4085f9:	js     0x408583
  4085fb:	push   edx
  4085fc:	aad    0x9c
  4085fe:	fs xor eax,0xcb6efadd
  408604:	loop   0x4085f5
  408606:	jp     0x408616
  408608:	call   0x7876:0x26a7e7f8
  40860f:	inc    ecx
  408610:	into   
  408611:	push   ecx
  408612:	inc    edx
  408613:	push   ebp
  408614:	repz mov dl,0x67
  408617:	pop    edx
  408618:	mov    edx,0x50bb4f6c
  40861d:	cmp    ch,BYTE PTR [esi]
  40861f:	inc    edi
  408620:	add    DWORD PTR [esi],edx
  408622:	dec    ebx
  408623:	mov    ds:0xe6f9d949,al
  408628:	out    dx,al
  408629:	aad    0xd5
  40862b:	lods   al,BYTE PTR ds:[esi]
  40862c:	enter  0xe766,0xaa
  408630:	xchg   ecx,eax
  408631:	jg     0x408695
  408633:	arpl   WORD PTR [eax-0x5c408112],di
  408639:	js     0x4085cd
  40863b:	ficomp WORD PTR ds:0xd69c01ec
  408641:	addr16 xor al,0xc7
  408644:	fcom   DWORD PTR [edx-0x7b4cef81]
  40864a:	or     DWORD PTR [ebp+0x51],esp
  40864d:	add    DWORD PTR [edx-0x796f02d1],edi
  408653:	fsub   st,st(7)
  408655:	inc    edi
  408656:	push   edx
  408657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408658:	fmul   DWORD PTR [ecx-0x2df3059d]
  40865e:	pop    edi
  40865f:	nop
  408660:	inc    ebx
  408661:	bound  ebp,QWORD PTR [ecx+0x32172239]
  408667:	mov    ebp,gs
  408669:	and    ch,dh
  40866b:	stc    
  40866c:	repnz and esp,esi
  40866f:	push   eax
  408670:	dec    esi
  408671:	pop    ebp
  408672:	icebp  
  408673:	sar    DWORD PTR [ecx+0x27],cl
  408676:	cmp    al,0xe7
  408678:	adc    BYTE PTR [eax+0x64],0xa5
  40867c:	push   edi
  40867d:	inc    esi
  40867e:	jmp    0x40860f
  408680:	das    
  408681:	es ret 
  408683:	bound  edi,QWORD PTR [edi-0x325e5191]
  408689:	sbb    BYTE PTR [esi],0xe3
  40868c:	fld    QWORD PTR [edi+esi*4]
  40868f:	jg     0x408667
  408691:	xchg   DWORD PTR [ebx+0x2c946405],esi
  408697:	mov    edi,0xa3dc6556
  40869c:	push   ebp
  40869d:	loop   0x4086a9
  40869f:	cmp    eax,0xc40b2e63
  4086a4:	add    eax,0x26354ef3
  4086a9:	aaa    
  4086aa:	stos   DWORD PTR es:[edi],eax
  4086ab:	sar    DWORD PTR ds:0x85f5637b,0x8
  4086b2:	jecxz  0x4086a7
  4086b4:	out    0x14,al
  4086b6:	and    eax,0xa5e9df84
  4086bb:	ins    DWORD PTR es:[edi],dx
  4086bc:	shr    DWORD PTR ds:[esi+0x70],cl
  4086c0:	mov    bl,0x91
  4086c2:	fidivr DWORD PTR [edx]
  4086c4:	loopne 0x4086d2
  4086c6:	dec    esp
  4086c7:	fwait
  4086c8:	iret   
  4086c9:	sbb    ah,BYTE PTR [edx-0x4e36e800]
  4086cf:	out    0x34,al
  4086d1:	rol    DWORD PTR [ecx],cl
  4086d3:	dec    esp
  4086d4:	pop    ebp
  4086d5:	fst    DWORD PTR [ecx-0x2f487dc0]
  4086db:	in     al,0x14
  4086dd:	sbb    al,0xa7
  4086df:	dec    ebp
  4086e0:	add    al,0x67
  4086e2:	in     eax,dx
  4086e3:	lds    edx,FWORD PTR [edi-0x14e87efb]
  4086e9:	popf   
  4086ea:	or     BYTE PTR [edx+eiz*4],0xca
  4086ee:	or     ah,bl
  4086f0:	cdq    
  4086f1:	(bad)  
  4086f2:	jecxz  0x4086cd
  4086f4:	fstp   DWORD PTR ds:0x8ecb8194
  4086fa:	jne    0x40867f
  4086fc:	or     al,0x1c
  4086fe:	pushf  
  4086ff:	lock pusha 
  408701:	push   0xffffff9d
  408703:	and    esp,DWORD PTR [ebx-0x56]
  408706:	jg     0x408776
  408708:	mov    dl,0xe
  40870a:	cdq    
  40870b:	xchg   edx,eax
  40870c:	cmp    cl,BYTE PTR [edx+0x7abf74ec]
  408712:	aad    0xbb
  408714:	ror    DWORD PTR [ebp+0x34],0x1d
  408718:	inc    edx
  408719:	push   esp
  40871a:	fwait
  40871b:	dec    eax
  40871c:	pop    ecx
  40871d:	cwde   
  40871e:	mov    cl,0x84
  408720:	push   edx
  408721:	fisubr WORD PTR [edi-0x3b]
  408724:	jae    0x4086de
  408726:	pop    ecx
  408727:	and    bl,BYTE PTR [edi]
  408729:	pusha  
  40872a:	pop    ecx
  40872b:	dec    edx
  40872c:	and    BYTE PTR [ebx-0x766f5fa2],dh
  408732:	aad    0x9f
  408734:	lods   eax,DWORD PTR ds:[esi]
  408735:	aad    0x3a
  408737:	dec    ebx
  408738:	es retf 
  40873a:	push   0xdda34bc2
  40873f:	jmp    0x1abb9b08
  408744:	adc    al,dl
  408746:	xchg   ecx,eax
  408747:	enter  0x92c9,0xff
  40874b:	jb     0x4086de
  40874d:	les    edx,FWORD PTR [edx+0x17]
  408750:	out    dx,al
  408751:	and    edx,DWORD PTR [ebx]
  408753:	aaa    
  408754:	dec    esp
  408755:	and    DWORD PTR [esi],0xffffff94
  408758:	mov    al,0x4
  40875a:	mov    al,ds:0x74656a2c
  40875f:	xor    eax,edi
  408761:	repnz fmul QWORD PTR [edx-0x5549f8dd]
  408768:	xchg   ebx,eax
  408769:	inc    esi
  40876a:	push   edi
  40876b:	iret   
  40876c:	in     al,0x68
  40876e:	xchg   esp,esi
  408770:	ror    DWORD PTR [edx-0x5c],1
  408773:	clc    
  408774:	push   eax
  408775:	mov    ds,WORD PTR [esi-0x204368b1]
  40877b:	jp     0x4087e5
  40877d:	sub    cl,bh
  40877f:	add    DWORD PTR [esi-0x36417ee9],ebp
  408785:	cld    
  408786:	xchg   edx,eax
  408787:	push   cs
  408788:	cmp    DWORD PTR [esi+ebx*2],eax
  40878b:	ds mov ecx,0x7041d6
  408791:	mov    DWORD PTR [esi-0x52],eax
  408794:	aam    0x4b
  408796:	adc    esp,eax
  408798:	or     eax,0xdd633dc0
  40879d:	stos   BYTE PTR es:[edi],al
  40879e:	bound  ecx,QWORD PTR [edx-0x19972914]
  4087a4:	jle    0x408753
  4087a6:	jns    0x408780
  4087a8:	fcom   st(6)
  4087aa:	and    bl,BYTE PTR [edx]
  4087ac:	iret   
  4087ad:	mov    cl,BYTE PTR [edi+0x1347b28a]
  4087b3:	pop    esp
  4087b4:	xor    DWORD PTR [ecx-0x7c],ecx
  4087b7:	ret    
  4087b8:	adc    DWORD PTR [ebx],esi
  4087ba:	mov    dh,0xea
  4087bc:	adc    DWORD PTR ds:0x22edd01d,esp
  4087c2:	je     0x4087fb
  4087c4:	cmp    DWORD PTR [ecx],ebp
  4087c6:	mov    ebp,0x1fd6d995
  4087cb:	sbb    DWORD PTR [ebx+0x46],ebx
  4087ce:	xor    al,0xbe
  4087d0:	dec    eax
  4087d1:	fadd   DWORD PTR [edx-0x7231879b]
  4087d7:	xor    ch,BYTE PTR [edx-0x5b]
  4087da:	push   0xffffff8f
  4087dc:	jg     0x408777
  4087de:	inc    edi
  4087df:	pop    ecx
  4087e0:	ror    BYTE PTR [ecx],1
  4087e2:	fs jnp 0x408825
  4087e5:	cmp    dh,BYTE PTR ds:0xef90a100
  4087eb:	or     BYTE PTR [esi+0x57a99bac],0xc3
  4087f2:	test   eax,0x3127d8a3
  4087f7:	dec    esp
  4087f8:	shr    DWORD PTR [eax+0x15],cl
  4087fb:	int    0x1a
  4087fd:	repz pop ebx
  4087ff:	lea    esi,[esp+edx*1+0x74]
  408803:	cdq    
  408804:	jno    0x408855
  408806:	les    eax,FWORD PTR [eax+0x3e]
  408809:	aad    0x54
  40880b:	or     al,0x30
  40880d:	fucomip st,st(6)
  40880f:	xchg   ecx,eax
  408810:	mov    bl,bl
  408812:	jmp    DWORD PTR [edx+0x46f4f36a]
  408818:	mov    edx,0xe7926f1e
  40881d:	cmp    esp,esp
  40881f:	pop    esi
  408820:	pusha  
  408821:	jno    0x40882d
  408823:	adc    ah,bl
  408825:	mov    cs,WORD PTR [ebx-0x49ee8be6]
  40882b:	sahf   
  40882c:	sbb    dh,BYTE PTR [esp+ebp*4-0x6a]
  408830:	loope  0x408881
  408832:	stc    
  408833:	lods   eax,DWORD PTR ds:[esi]
  408834:	or     al,0x50
  408836:	sub    al,0x9b
  408838:	sbb    BYTE PTR [edi+0x2a753336],bh
  40883e:	mov    esi,0x7ecb84ce
  408843:	add    BYTE PTR [esp+eax*1],bh
  408846:	sbb    cl,BYTE PTR [ebp-0x6168681f]
  40884c:	adc    eax,0x4207673a
  408851:	sbb    eax,0xc4f366fa
  408856:	adc    edx,DWORD PTR [ecx+0x34]
  408859:	dec    ebp
  40885a:	lock out 0x9e,al
  40885d:	daa    
  40885e:	lds    edi,FWORD PTR [ebp+0x1173a77f]
  408864:	mov    ecx,0x5f05fd3b
  408869:	xchg   edi,eax
  40886a:	shl    BYTE PTR [ebx],0x20
  40886d:	adc    bh,BYTE PTR [ecx-0x2d]
  408870:	leave  
  408871:	mov    ch,bl
  408873:	adc    DWORD PTR [ebp-0x6b],esi
  408876:	push   esi
  408877:	or     DWORD PTR [eax+ebx*2],esp
  40887a:	fcmovbe st,st(5)
  40887c:	push   es
  40887d:	sbb    al,0x90
  40887f:	push   ds
  408880:	pop    ds
  408881:	jmp    0x60ed75d2
  408886:	imul   edi
  408888:	mov    al,ds:0xf3008271
  40888d:	push   0xbae187b1
  408892:	xchg   ebp,eax
  408893:	fiadd  DWORD PTR [ebx]
  408895:	pusha  
  408896:	cmp    al,0x59
  408898:	std    
  408899:	rcl    DWORD PTR [ebp-0x30df9530],cl
  40889f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088a0:	int    0x98
  4088a2:	push   esp
  4088a3:	mov    fs,esi
  4088a5:	das    
  4088a6:	lahf   
  4088a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088a8:	aaa    
  4088a9:	xchg   edi,eax
  4088aa:	xchg   ebp,eax
  4088ab:	bnd call 0xc6220b04
  4088b1:	sbb    eax,0xfe9acd24
  4088b6:	lods   al,BYTE PTR ds:[esi]
  4088b7:	rol    ebx,1
  4088b9:	jo     0x4088f9
  4088bb:	call   0x8b5fc2be
  4088c0:	imul   eax,DWORD PTR [esi-0x30],0x5c
  4088c4:	ret    0xaecd
  4088c7:	xchg   ebx,eax
  4088c8:	fimul  WORD PTR [eax-0x44]
  4088cb:	fdivr  QWORD PTR [edx]
  4088cd:	aas    
  4088ce:	jnp    0x408937
  4088d0:	ret    
  4088d1:	out    0xdb,al
  4088d3:	mov    bl,0xc7
  4088d5:	mov    ah,0xc5
  4088d7:	loop   0x4088cf
  4088d9:	cld    
  4088da:	adc    eax,DWORD PTR [eax-0x79b158a1]
  4088e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088e1:	push   cs
  4088e2:	xor    ebp,esi
  4088e4:	sub    ebx,esp
  4088e6:	xor    bl,BYTE PTR [ebp-0x2e]
  4088e9:	ficomp WORD PTR [ebx]
  4088eb:	or     DWORD PTR [edi+0x1e],edi
  4088ee:	lods   eax,DWORD PTR ds:[esi]
  4088ef:	outs   dx,DWORD PTR ds:[esi]
  4088f0:	lds    edx,FWORD PTR [ecx+0x61]
  4088f3:	out    dx,eax
  4088f4:	addr16 push ss
  4088f6:	pop    ss
  4088f7:	mov    esp,0x53e5814d
  4088fc:	dec    esi
  4088fd:	fidiv  DWORD PTR [ebp-0x19]
  408900:	fdiv   QWORD PTR [ecx]
  408902:	push   ebx
  408903:	sub    ebp,esp
  408905:	retf   
  408906:	dec    eax
  408907:	xchg   ebp,eax
  408908:	repz fyl2x 
  40890b:	adc    BYTE PTR [esi-0x25f99425],ch
  408911:	cmp    al,0xc
  408913:	ror    DWORD PTR [edi-0x5d70742e],0x70
  40891a:	in     al,0x79
  40891c:	retf   
  40891d:	retf   
  40891e:	mov    edi,ebp
  408920:	and    BYTE PTR [esi],al
  408922:	pop    edi
  408923:	jb     0x4088a5
  408925:	sub    al,BYTE PTR [esi+0x50701ac3]
  40892b:	mov    ecx,0x8f72d5c1
  408930:	sub    eax,DWORD PTR [edi-0x67]
  408933:	inc    esi
  408934:	mov    ds:0x3e9b104e,al
  408939:	or     eax,0x100c2fdd
  40893e:	mov    bh,0xb2
  408940:	test   al,0xf2
  408942:	add    ebp,DWORD PTR [ebp+0x5a]
  408945:	and    al,0x4
  408947:	inc    edx
  408948:	xchg   esp,eax
  408949:	out    dx,eax
  40894a:	push   edx
  40894b:	xchg   edi,eax
  40894c:	in     eax,dx
  40894d:	not    DWORD PTR [esi]
  40894f:	xchg   edx,eax
  408950:	pop    es
  408951:	pusha  
  408952:	cmp    al,0xfc
  408954:	adc    DWORD PTR [esi-0x69f92008],0x7473f3b2
  40895e:	xchg   esi,eax
  40895f:	mul    cl
  408961:	cmp    DWORD PTR [edx+0x5374ac37],0x708a4a94
  40896b:	jge    0x40890e
  40896d:	sbb    edx,eax
  40896f:	sbb    DWORD PTR [eax],ebx
  408971:	sub    al,0x82
  408973:	adc    al,0xc6
  408975:	xor    esp,DWORD PTR [esi+0x6824c3b2]
  40897b:	retf   0xd63e
  40897e:	sub    eax,DWORD PTR [edi]
  408980:	inc    esi
  408981:	int    0x2e
  408983:	popf   
  408984:	les    esp,FWORD PTR [edi+0x32]
  408987:	mov    bh,0xc6
  408989:	lods   al,BYTE PTR ds:[esi]
  40898a:	adc    eax,0x57f35707
  40898f:	das    
  408990:	call   0xa1e2bf74
  408995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408996:	sub    dl,BYTE PTR [edi+0x5c]
  408999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40899a:	(bad)  
  40899b:	jle    0x4089b0
  40899d:	enter  0x8489,0xeb
  4089a1:	int3   
  4089a2:	mov    eax,ds:0x578b80af
  4089a7:	pop    edx
  4089a8:	push   ecx
  4089a9:	test   al,0x56
  4089ab:	outs   dx,BYTE PTR ds:[esi]
  4089ac:	jne    0x40899c
  4089ae:	xor    cl,bl
  4089b0:	adc    ebp,eax
  4089b2:	sbb    eax,DWORD PTR [eax+ebx*8+0xc]
  4089b6:	pop    ebx
  4089b7:	pop    ebx
  4089b8:	daa    
  4089b9:	rcl    BYTE PTR [edx+0x2cc60039],1
  4089bf:	retf   
  4089c0:	int3   
  4089c1:	mov    ebp,0x76b4ab0f
  4089c6:	mov    eax,0xccc4c915
  4089cb:	rol    DWORD PTR ds:0x296d6ea9,1
  4089d1:	and    al,0xf8
  4089d3:	jge    0x408a2e
  4089d5:	ja     0x4089b8
  4089d7:	mov    esi,0x8a56c72
  4089dc:	scas   eax,DWORD PTR es:[edi]
  4089dd:	outs   dx,DWORD PTR ds:[esi]
  4089de:	outs   dx,DWORD PTR ds:[esi]
  4089df:	pop    edi
  4089e0:	out    0xb6,al
  4089e2:	out    dx,eax
  4089e3:	rcr    bh,cl
  4089e5:	sub    al,0x52
  4089e7:	mov    edi,0x13117f9d
  4089ec:	imul   edi,edi,0x27
  4089ef:	xchg   ebp,eax
  4089f0:	adc    DWORD PTR [eax-0x12],ebp
  4089f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089f4:	pop    ebx
  4089f5:	in     eax,0x30
  4089f7:	sbb    DWORD PTR [edi-0x178554e2],eax
  4089fd:	mov    WORD PTR [ebp+0x6c050b00],gs
  408a03:	inc    edi
  408a04:	pop    eax
  408a05:	mov    eax,0xddeb742e
  408a0a:	inc    eax
  408a0b:	hlt    
  408a0c:	mov    bh,0x90
  408a0e:	mov    bh,0x48
  408a10:	out    dx,eax
  408a11:	sti    
  408a12:	xchg   esi,eax
  408a13:	and    al,0xd6
  408a15:	push   ebp
  408a16:	outs   dx,DWORD PTR ds:[esi]
  408a17:	jo     0x408a8d
  408a19:	bound  edi,QWORD PTR [edx]
  408a1b:	sbb    BYTE PTR [edx+0x5f],0xcb
  408a1f:	add    DWORD PTR [eax+0x10],edx
  408a22:	pop    ss
  408a23:	pop    ecx
  408a24:	xor    al,0xf1
  408a26:	loope  0x408a33
  408a28:	int    0xf9
  408a2a:	mov    al,ds:0x24a57993
  408a2f:	mov    ds:0x98d71788,eax
  408a34:	xor    DWORD PTR [ecx],eax
  408a36:	or     ecx,DWORD PTR [edi-0x5c491b83]
  408a3c:	pushf  
  408a3d:	xchg   dl,ch
  408a3f:	repz inc esp
  408a41:	inc    esi
  408a42:	sub    al,0xa6
  408a44:	push   0xb3e26a0
  408a49:	and    DWORD PTR [esi-0x42dfd76b],eax
  408a4f:	push   edi
  408a50:	mov    BYTE PTR [ebx+edi*2],al
  408a53:	in     al,dx
  408a54:	sbb    BYTE PTR cs:[edi-0x2f12660a],bl
  408a5b:	mov    cl,0xb0
  408a5d:	mov    ?,WORD PTR [eax-0x2f7e5fdb]
  408a63:	mov    dh,dl
  408a65:	mov    edi,0x11aedc8a
  408a6a:	iret   
  408a6b:	xor    ch,BYTE PTR [edi+0x269a8fd]
  408a71:	or     eax,0xd2c67e84
  408a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a77:	or     ebp,esp
  408a79:	xchg   ebp,eax
  408a7a:	jno    0x408a85
  408a7c:	ret    
  408a7d:	xchg   ebp,eax
  408a7e:	dec    edx
  408a7f:	inc    ebx
  408a80:	push   eax
  408a81:	mov    si,0xd8f8
  408a85:	scas   eax,DWORD PTR es:[edi]
  408a86:	adc    al,BYTE PTR [esi]
  408a88:	push   es
  408a89:	mov    ds:0xdcdeca1f,eax
  408a8e:	cmp    bl,bl
  408a90:	xchg   ecx,eax
  408a91:	lods   al,BYTE PTR ds:[esi]
  408a92:	ds pop edi
  408a94:	enter  0x21c7,0xe9
  408a98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a99:	mov    esi,0x9198c431
  408a9e:	and    bl,0x28
  408aa1:	xchg   edi,eax
  408aa2:	inc    DWORD PTR ds:0xbf122717
  408aa8:	inc    edi
  408aa9:	jg     0x408a67
  408aab:	fs xor esi,ebx
  408aae:	add    eax,0xb59b0c4f
  408ab3:	pop    ebp
  408ab4:	inc    edi
  408ab5:	jo     0x408b35
  408ab7:	cmp    eax,0x34d92565
  408abc:	stc    
  408abd:	inc    edi
  408abe:	pop    ebp
  408abf:	sub    DWORD PTR [edi],edi
  408ac1:	push   eax
  408ac2:	fcom   QWORD PTR [ebx+0x3ed95ece]
  408ac8:	mov    al,0xb
  408aca:	fucomp st(3)
  408acc:	mov    cl,0x38
  408ace:	pushf  
  408acf:	cmp    ecx,DWORD PTR [edx-0x7c5aef99]
  408ad5:	mov    DWORD PTR [ebp-0x45198801],ecx
  408adb:	aam    0xe
  408add:	jb     0x408b49
  408adf:	push   ds
  408ae0:	cld    
  408ae1:	cmp    BYTE PTR [edi+0x55ba0f2e],0xea
  408ae8:	lods   al,BYTE PTR ds:[esi]
  408ae9:	bound  esp,QWORD PTR [edi-0x71a7e6ad]
  408aef:	cdq    
  408af0:	sbb    edi,DWORD PTR ds:0x1a91b66d
  408af6:	cmp    BYTE PTR [edi+0x45904dde],bh
  408afc:	mov    ch,0x4
  408afe:	rol    DWORD PTR [esp+edi*8+0x2d4f3306],0x51
  408b06:	fnstsw WORD PTR [eax]
  408b08:	inc    edx
  408b09:	(bad)  
  408b0a:	repz mov cl,0x2d
  408b0d:	mov    ecx,0x6536c523
  408b12:	push   ds
  408b13:	lahf   
  408b14:	fild   DWORD PTR [ebx+0x16]
  408b17:	icebp  
  408b18:	or     edx,0xfcd34e53
  408b1e:	icebp  
  408b1f:	jae    0x408afd
  408b21:	int    0xfc
  408b23:	mov    eax,ds:0x78dc1fb4
  408b28:	sub    al,bh
  408b2a:	xor    bl,cl
  408b2c:	sub    ebp,DWORD PTR [eax]
  408b2e:	pop    esp
  408b2f:	xlat   BYTE PTR ds:[ebx]
  408b30:	cmp    bh,0xbb
  408b33:	icebp  
  408b34:	leave  
  408b35:	imul   ecx,DWORD PTR [ebx-0x25],0xffffffa0
  408b39:	mov    edi,0xbf4b3097
  408b3e:	int3   
  408b3f:	ficomp DWORD PTR [ecx]
  408b41:	mov    ebp,0x552b15a4
  408b46:	or     bh,BYTE PTR [esi-0x62b78743]
  408b4c:	xchg   edx,eax
  408b4d:	xlat   BYTE PTR ds:[ebx]
  408b4e:	xor    eax,0x914425b6
  408b53:	test   BYTE PTR [eax],bl
  408b55:	(bad)  
  408b56:	dec    ebp
  408b57:	pop    ss
  408b58:	inc    ebx
  408b59:	cmc    
  408b5a:	push   es
  408b5b:	xchg   BYTE PTR [ebp+0x34],bh
  408b5e:	popa   
  408b5f:	add    DWORD PTR [ebp-0x53afbf3c],ebx
  408b65:	mul    DWORD PTR [esi+0x7]
  408b68:	es xor eax,0x4a2c079d
  408b6e:	inc    ecx
  408b6f:	or     al,0x8c
  408b71:	push   es
  408b72:	push   eax
  408b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b74:	dec    bp
  408b76:	outs   dx,DWORD PTR ds:[esi]
  408b77:	das    
  408b78:	dec    eax
  408b79:	inc    edi
  408b7a:	add    DWORD PTR [edx],ecx
  408b7c:	push   ds
  408b7d:	adc    DWORD PTR [esi],ebp
  408b7f:	ret    0x8e98
  408b82:	js     0x408b45
  408b84:	daa    
  408b85:	out    0x5e,al
  408b87:	sbb    BYTE PTR [esi-0x2a4c2aab],ah
  408b8d:	ret    
  408b8e:	into   
  408b8f:	pop    esp
  408b90:	in     al,0x4f
  408b92:	adc    eax,0x744d65b4
  408b97:	jmp    0x408bab
  408b99:	fmul   DWORD PTR gs:[esi]
  408b9c:	jbe    0x408b95
  408b9e:	sbb    al,0x39
  408ba0:	lea    eax,[ebx+0x73]
  408ba3:	loop   0x408c02
  408ba5:	sub    DWORD PTR [edx],esp
  408ba7:	mov    esp,0x6658bcb1
  408bac:	mov    BYTE PTR [esi],dh
  408bae:	(bad)  
  408baf:	sub    DWORD PTR [eax-0x6bd68352],esi
  408bb5:	call   0x9ac96e85
  408bba:	fs xchg esi,eax
  408bbc:	fistp  DWORD PTR [eax-0x41]
  408bbf:	cli    
  408bc0:	xchg   ebp,eax
  408bc1:	xchg   BYTE PTR ds:0x3f3721cf,bh
  408bc7:	(bad)  
  408bc8:	shr    DWORD PTR [edx-0x15],1
  408bcb:	shr    BYTE PTR [esi],0x53
  408bce:	sbb    ch,BYTE PTR [ebp+0x32]
  408bd1:	mov    ecx,DWORD PTR [ebx+0x3e]
  408bd4:	das    
  408bd5:	mov    ebx,0x80b57caa
  408bda:	inc    ebp
  408bdb:	pop    eax
  408bdc:	and    BYTE PTR [esi],0xd9
  408bdf:	mov    dl,0xd7
  408be1:	sbb    esp,edi
  408be3:	xchg   BYTE PTR ds:0x6825395b,bl
  408be9:	mov    bl,0xd2
  408beb:	mov    bh,0xf5
  408bed:	test   eax,0x484cd963
  408bf2:	sbb    ebp,esi
  408bf4:	mov    DWORD PTR [ebx],edi
  408bf6:	add    al,0x47
  408bf8:	ror    ebx,0x4e
  408bfb:	out    0xdd,eax
  408bfd:	sbb    eax,0x85f8a80d
  408c02:	mov    DWORD PTR [edx],edi
  408c04:	inc    ebp
  408c05:	(bad)  [edx+0x63e6d141]
  408c0b:	dec    ecx
  408c0c:	jbe    0x408c23
  408c0e:	lods   al,BYTE PTR ds:[esi]
  408c0f:	xor    eax,0xc5f1a2bf
  408c14:	frstor [ebx-0x1033cf73]
  408c1a:	xchg   ebp,eax
  408c1b:	mov    al,0xdf
  408c1d:	mov    eax,0x858e8168
  408c22:	ja     0x408c4a
  408c24:	add    BYTE PTR [ebx+0x251360c2],0x55
  408c2b:	ss das 
  408c2d:	mov    bl,0x78
  408c2f:	fstp   QWORD PTR [edx-0x5b]
  408c32:	bound  ecx,QWORD PTR [ebp+0x2e]
  408c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c36:	pop    eax
  408c37:	and    eax,0x65ea821a
  408c3c:	and    al,0x13
  408c3e:	adc    DWORD PTR [eax+0x1f],esi
  408c41:	mov    ecx,0x23be2150
  408c46:	mov    esp,0x95d9b137
  408c4b:	sub    eax,edx
  408c4d:	cmp    ah,BYTE PTR [eax+0xd321405]
  408c53:	cli    
  408c54:	jno    0x408bde
  408c56:	or     eax,0x8da2ec7b
  408c5b:	jb     0x408cd7
  408c5d:	int3   
  408c5e:	jns    0x408ca6
  408c60:	and    BYTE PTR [ecx+0x313b6776],dh
  408c66:	sbb    BYTE PTR [ecx],dh
  408c68:	aas    
  408c69:	inc    edx
  408c6a:	push   es
  408c6b:	jle    0x408c33
  408c6d:	jae    0x408c72
  408c6f:	retf   0x123f
  408c72:	xchg   ebx,eax
  408c73:	sete   cl
  408c76:	dec    eax
  408c77:	mov    al,0x6d
  408c79:	pop    ss
  408c7a:	out    dx,al
  408c7b:	jae    0x408c5d
  408c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c7e:	out    dx,eax
  408c7f:	mov    dl,0x16
  408c81:	rol    cl,cl
  408c83:	add    esp,DWORD PTR [eax]
  408c85:	das    
  408c86:	cmp    ah,dh
  408c88:	jg     0x408cea
  408c8a:	add    eax,DWORD PTR [edx]
  408c8c:	pop    eax
  408c8d:	into   
  408c8e:	dec    ebx
  408c8f:	not    BYTE PTR [ebx]
  408c91:	pop    ebp
  408c92:	fst    DWORD PTR [esi+ebx*4+0x4b]
  408c96:	add    eax,0xb42c797e
  408c9b:	push   cs
  408c9c:	mov    ds:0x6210b269,al
  408ca1:	sahf   
  408ca2:	mov    dh,0x91
  408ca4:	lea    edx,[ebp+0x55]
  408ca7:	das    
  408ca8:	sub    ah,BYTE PTR [edi]
  408caa:	scas   eax,DWORD PTR es:[edi]
  408cab:	stos   DWORD PTR es:[edi],eax
  408cac:	fwait
  408cad:	mov    eax,ds:0x8c4a1c41
  408cb2:	inc    ecx
  408cb3:	dec    ebp
  408cb4:	out    dx,al
  408cb5:	outs   dx,BYTE PTR ds:[esi]
  408cb6:	cmp    al,0xbd
  408cb8:	outs   dx,BYTE PTR ds:[esi]
  408cb9:	fs out 0x55,eax
  408cbc:	cmp    DWORD PTR [eax],edi
  408cbe:	aad    0xc0
  408cc0:	aad    0x3a
  408cc2:	fidiv  WORD PTR [ecx+0x6b80bfad]
  408cc8:	push   edx
  408cc9:	xchg   esi,eax
  408cca:	push   esi
  408ccb:	cmc    
  408ccc:	mov    dl,0x65
  408cce:	outs   dx,DWORD PTR ds:[esi]
  408ccf:	aas    
  408cd0:	pop    ecx
  408cd1:	test   BYTE PTR [edi],ch
  408cd3:	hlt    
  408cd4:	sub    ch,BYTE PTR [eax+0x693a5dab]
  408cda:	ror    ch,cl
  408cdc:	retf   
  408cdd:	jmp    0x408ca4
  408cdf:	loopne 0x408cb8
  408ce1:	cmp    eax,0x403914e0
  408ce6:	xchg   al,bh
  408ce8:	pop    eax
  408ce9:	mov    edx,0x91db6453
  408cee:	push   0xfa003c44
  408cf3:	mov    edx,esp
  408cf5:	push   ebp
  408cf6:	and    bl,BYTE PTR [edx-0x4c]
  408cf9:	sbb    DWORD PTR [edi-0x3d3a014b],edi
  408cff:	mov    bl,0x83
  408d01:	cli    
  408d02:	add    ecx,DWORD PTR [edx-0x1869ac9e]
  408d08:	inc    edx
  408d09:	inc    BYTE PTR [edi+0x12a3ea8a]
  408d0f:	and    bl,BYTE PTR [eax]
  408d11:	mov    al,ds:0xc2ce0e5
  408d16:	sbb    ah,al
  408d18:	xchg   ebx,eax
  408d19:	sar    DWORD PTR [eax+edi*2],1
  408d1c:	neg    DWORD PTR [esp+ebx*2+0x4a8902ff]
  408d23:	pop    edx
  408d24:	(bad)  
  408d25:	mov    edx,0xae076ff1
  408d2a:	cmp    DWORD PTR [eax+edx*2],esp
  408d2d:	mov    ds:0x26530f81,eax
  408d32:	mov    eax,ds:0x490ecffa
  408d37:	add    al,0xad
  408d39:	cmp    dl,ah
  408d3b:	dec    ecx
  408d3c:	pushf  
  408d3d:	pushf  
  408d3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3f:	or     al,al
  408d41:	daa    
  408d42:	aas    
  408d43:	jmp    0x9329:0xd2cb8048
  408d4a:	or     eax,0x38f5c11a
  408d4f:	cs and bl,bl
  408d52:	sbb    esi,0x44
  408d55:	lea    eax,[eax+edi*1+0x4b8f4cff]
  408d5c:	sbb    al,0x77
  408d5e:	sbb    DWORD PTR [edi-0x5e],edi
  408d61:	cmc    
  408d62:	enter  0x778d,0x73
  408d66:	xor    ebp,ecx
  408d68:	fild   WORD PTR ds:0x27b2201e
  408d6e:	cwde   
  408d6f:	dec    edx
  408d70:	add    al,0x82
  408d72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d73:	or     DWORD PTR [eax+0x74aeca5f],ebp
  408d79:	jns    0x408d24
  408d7b:	das    
  408d7c:	loopne 0x408db1
  408d7e:	(bad)  
  408d7f:	in     al,dx
  408d80:	adc    DWORD PTR [ebx+ebx*8],edi
  408d83:	push   0x598d2032
  408d88:	loope  0x408d57
  408d8a:	outs   dx,DWORD PTR ds:[esi]
  408d8b:	mov    ebx,0xd9a4a52b
  408d90:	cmc    
  408d91:	mov    al,ds:0xe54ab2f8
  408d96:	call   0x169d:0x76151625
  408d9d:	test   BYTE PTR [edx+0x785ca6fe],ch
  408da3:	shr    ecx,cl
  408da5:	call   0x8e400393
  408daa:	xor    esi,edx
  408dac:	lods   eax,DWORD PTR ds:[esi]
  408dad:	mov    ebp,0x9e015699
  408db2:	inc    esp
  408db3:	dec    ebx
  408db4:	jbe    0x408dac
  408db6:	nop
  408db7:	xchg   DWORD PTR [ebp-0x63ff09a3],esp
  408dbd:	mov    ecx,0x7e5a8d6c
  408dc2:	pushf  
  408dc3:	mov    bh,0x64
  408dc5:	mov    edx,ebp
  408dc7:	imul   esi,esi,0x17
  408dca:	jg     0x408dda
  408dcc:	cmp    eax,0xcdf9d19d
  408dd1:	sub    bl,BYTE PTR [eax]
  408dd3:	(bad)  
  408dd4:	fdiv   QWORD PTR [ecx]
  408dd6:	les    eax,FWORD PTR [edx+0x4109a5e2]
  408ddc:	out    0xa7,al
  408dde:	jp     0x408e25
  408de0:	in     eax,0x43
  408de2:	jl     0x408d65
  408de4:	scas   al,BYTE PTR es:[edi]
  408de5:	sbb    bl,BYTE PTR [edx+0x75]
  408de8:	jo     0x408e5c
  408dea:	mov    BYTE PTR [esi+0x16],cl
  408ded:	ss daa 
  408def:	pop    es
  408df0:	dec    edx
  408df1:	mov    ds:0xb0bfad0a,eax
  408df6:	leave  
  408df7:	fpatan 
  408df9:	and    cl,BYTE PTR [ecx+0x3413ff3]
  408dff:	jecxz  0x408db8
  408e01:	test   BYTE PTR [edx],bl
  408e03:	out    dx,eax
  408e04:	cmp    eax,0x730cca6e
  408e09:	cmp    ebp,DWORD PTR [edx-0x2b1452fe]
  408e0f:	mov    DWORD PTR [eax],0xafaedbd4
  408e15:	or     al,al
  408e17:	cs pop ss
  408e19:	fwait
  408e1a:	cwde   
  408e1b:	dec    eax
  408e1c:	repz add BYTE PTR [ebp-0x8],bh
  408e20:	mov    WORD PTR [ecx+0x36],?
  408e23:	and    ch,ah
  408e25:	std    
  408e26:	sbb    esi,ebp
  408e28:	mov    al,ds:0xeb249767
  408e2d:	shl    DWORD PTR [ebp+0x4501ed7],0x67
  408e34:	inc    edx
  408e35:	add    ebx,esi
  408e37:	cs sbb al,0x4
  408e3a:	jle    0x408e24
  408e3c:	or     bl,BYTE PTR [eax*4-0x4e6c4fbe]
  408e43:	test   BYTE PTR ds:0x6d614205,bl
  408e49:	jecxz  0x408dd4
  408e4b:	pusha  
  408e4c:	(bad)  
  408e4d:	iret   
  408e4e:	data16 daa 
  408e50:	xor    DWORD PTR [esi+edi*2-0x4bbe83e3],ecx
  408e57:	pop    edi
  408e58:	adc    DWORD PTR [ecx+0x6fe14ef],ebp
  408e5e:	dec    esp
  408e5f:	(bad)  
  408e60:	out    0x89,eax
  408e62:	sub    dl,dl
  408e64:	jo     0x408e6d
  408e66:	adc    DWORD PTR [ecx+0x5e],0xc6d6de8b
  408e6d:	test   BYTE PTR [ebp+0x7a53cabd],bh
  408e73:	mov    BYTE PTR [eax-0x53],bl
  408e76:	pop    ds
  408e77:	(bad)  
  408e79:	sbb    bh,dh
  408e7b:	xor    ecx,DWORD PTR [eax]
  408e7d:	ins    DWORD PTR es:[edi],dx
  408e7e:	(bad)  
  408e7f:	pop    ebp
  408e80:	out    0x69,al
  408e82:	ss mov edx,0x256d9bc
  408e88:	adc    ebp,DWORD PTR [esi]
  408e8a:	cmc    
  408e8b:	cli    
  408e8c:	sbb    eax,0xcf5f95c4
  408e91:	mov    ds:0x50b6b280,al
  408e96:	mov    ah,0x60
  408e98:	loopne 0x408e31
  408e9a:	js     0x408e42
  408e9c:	fs inc eax
  408e9e:	dec    edi
  408e9f:	fld    QWORD PTR [esp+edx*4]
  408ea2:	push   eax
  408ea3:	jecxz  0x408e80
  408ea5:	mov    al,ds:0x7d54d018
  408eaa:	mov    ebx,0xc76a805a
  408eaf:	popf   
  408eb0:	jns    0x408f0c
  408eb2:	push   esi
  408eb3:	jle    0x408f0b
  408eb5:	stos   BYTE PTR es:[edi],al
  408eb6:	sbb    eax,0xf4d46fd4
  408ebb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ebc:	icebp  
  408ebd:	add    BYTE PTR [ecx-0x2a8d6eee],al
  408ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ec4:	iret   
  408ec5:	jnp    0x408f1c
  408ec7:	xor    DWORD PTR [eax],ecx
  408ec9:	mov    eax,0x3e34ffbf
  408ece:	push   ds
  408ecf:	fscale 
  408ed1:	mov    al,0xeb
  408ed3:	aad    0xb5
  408ed5:	jmp    0xd3592027
  408eda:	push   ebp
  408edb:	test   al,0x57
  408edd:	shl    dl,cl
  408edf:	pop    ebp
  408ee0:	dec    ecx
  408ee1:	or     eax,0x2a16cbe0
  408ee6:	add    dh,BYTE PTR [eax-0x54487833]
  408eec:	bound  eax,QWORD PTR [esi]
  408eee:	cdq    
  408eef:	xor    DWORD PTR ss:[eax-0x40],0xca264eb9
  408ef7:	mov    ds:0x9017c2e3,al
  408efc:	in     al,0x7d
  408efe:	ins    BYTE PTR es:[edi],dx
  408eff:	xchg   ecx,eax
  408f00:	pop    ds
  408f01:	xchg   ebp,eax
  408f02:	push   ebp
  408f03:	in     al,dx
  408f04:	(bad)  
  408f06:	cmc    
  408f07:	push   edi
  408f08:	sbb    DWORD PTR [ebp-0x68b778dc],ebp
  408f0e:	xor    BYTE PTR [edx-0x29861be1],cl
  408f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f15:	jno    0x408f88
  408f17:	cmp    esi,DWORD PTR [edi-0x1f94b4c0]
  408f1d:	rcl    DWORD PTR [esi+0x1f68ddf1],0x9a
  408f24:	xor    eax,0xc58ee42c
  408f29:	push   0xc8cb5da8
  408f2e:	aam    0x8a
  408f30:	mov    dh,0x2c
  408f32:	or     cl,BYTE PTR [esi-0x66af466e]
  408f38:	aad    0xe6
  408f3a:	mov    al,0x1b
  408f3c:	mov    ebp,0x4035a903
  408f41:	xor    eax,0xe7bc294e
  408f46:	adc    dl,BYTE PTR [edx+0x55dc0d05]
  408f4c:	pushf  
  408f4d:	call   0x4cb7e5a3
  408f52:	cli    
  408f53:	push   es
  408f54:	mov    ds:0xe0ab9fc7,eax
  408f59:	or     DWORD PTR [eax],esi
  408f5b:	or     ebp,DWORD PTR [ecx+0x15385ffd]
  408f61:	int    0xb7
  408f63:	or     al,0x66
  408f65:	add    bl,dl
  408f67:	adc    al,0x44
  408f69:	iret   
  408f6a:	imul   ebx,DWORD PTR [esi+0x16],0x82fcfc1f
  408f71:	ret    0x7174
  408f74:	push   edx
  408f75:	daa    
  408f76:	xchg   esi,eax
  408f78:	add    al,0x15
  408f7a:	data16 std 
  408f7c:	mov    bl,0xb6
  408f7e:	cld    
  408f7f:	loope  0x408fe4
  408f81:	ret    
  408f82:	cmp    bh,bh
  408f84:	sub    BYTE PTR [esp+eax*4+0x2c],0xe2
  408f89:	sahf   
  408f8a:	mov    DWORD PTR [ecx+0x69],ebx
  408f8d:	daa    
  408f8e:	fwait
  408f8f:	int    0xf8
  408f91:	sbb    DWORD PTR [edi-0x53],0x6b
  408f95:	iret   
  408f96:	daa    
  408f97:	xchg   esi,eax
  408f98:	dec    edx
  408f99:	inc    ebp
  408f9a:	cmp    al,bh
  408f9c:	dec    edx
  408f9d:	mov    edx,0x3b23e1ce
  408fa2:	push   esp
  408fa3:	jl     0x408f38
  408fa5:	sti    
  408fa6:	in     eax,0x12
  408fa8:	call   0xe4e3:0x44595d9c
  408faf:	inc    ebp
  408fb0:	or     edi,DWORD PTR [esi]
  408fb2:	(bad)  
  408fb3:	idiv   BYTE PTR [edx-0x1]
  408fb6:	call   0x13349d68
  408fbb:	jno    0x408f97
  408fbd:	xchg   DWORD PTR [esi],esp
  408fbf:	push   cs
  408fc0:	cmp    al,0x54
  408fc2:	sub    BYTE PTR [eax-0x7f],bh
  408fc5:	out    dx,al
  408fc6:	push   0x7cca4ea4
  408fcb:	sub    BYTE PTR [eax],bl
  408fcd:	jle    0x408f98
  408fcf:	mov    al,0x56
  408fd1:	push   eax
  408fd2:	jecxz  0x409004
  408fd4:	push   eax
  408fd5:	push   ss
  408fd6:	mov    ds,WORD PTR [esi+0xb]
  408fd9:	in     al,dx
  408fda:	jb     0x408f79
  408fdc:	cwde   
  408fdd:	in     eax,0x62
  408fdf:	imul   ecx,DWORD PTR [edx],0xffffff8e
  408fe2:	or     edx,DWORD PTR [ebx]
  408fe4:	jl     0x408f77
  408fe6:	pushf  
  408fe7:	les    ebp,FWORD PTR [edi]
  408fe9:	shr    BYTE PTR [edi-0x47c9c43a],1
  408fef:	std    
  408ff0:	popf   
  408ff1:	lock test al,0x8b
  408ff4:	pop    edi
  408ff5:	repz bswap edi
  408ff8:	xchg   bh,bh
  408ffa:	sbb    DWORD PTR [esi+0x60],ebp
  408ffd:	adc    al,0x2d
  408fff:	cmp    edi,edi
  409001:	or     BYTE PTR ds:0x22504aa7,0x66
  409008:	and    esi,DWORD PTR [edi+0x32]
  40900b:	sbb    eax,0xe1055b3b
  409010:	mov    ebx,0x807def67
  409015:	cmp    al,0x32
  409017:	ror    DWORD PTR [ebx],1
  409019:	pop    ebx
  40901a:	out    0xb2,eax
  40901c:	imul   esi,DWORD PTR [ebp-0x29],0x28624f72
  409023:	sbb    ecx,eax
  409025:	and    BYTE PTR [edx],bl
  409027:	lea    edi,[esi+0x33d86580]
  40902d:	sub    al,0x1a
  40902f:	mov    ah,0xd5
  409031:	jno    0x408fc0
  409033:	add    BYTE PTR [edx+ebp*4-0x23989f2b],0x4c
  40903b:	stos   DWORD PTR es:[edi],eax
  40903c:	test   DWORD PTR [edx+0x2343bd72],edx
  409042:	(bad)  
  409043:	fbstp  TBYTE PTR [esi]
  409045:	(bad)  ds:0x5cc6b432
  40904b:	cmp    eax,0x3a4cc793
  409050:	scas   eax,DWORD PTR es:[edi]
  409051:	dec    edi
  409052:	mov    al,0xb7
  409054:	xor    eax,0xa17be256
  409059:	shl    DWORD PTR [edx+esi*8],1
  40905c:	sbb    ecx,DWORD PTR [edx]
  40905e:	or     BYTE PTR [edx+esi*2-0xa],ah
  409062:	shl    dl,0x1b
  409065:	xor    BYTE PTR ds:0x4edf817,dl
  40906b:	ret    0x5e30
  40906e:	xlat   BYTE PTR ds:[ebx]
  40906f:	xchg   DWORD PTR [ebx-0x4f],ebx
  409072:	ror    BYTE PTR [esi+0x5619a2b9],1
  409078:	xor    DWORD PTR [ebx-0x33ba0a4c],edi
  40907e:	sub    ch,bl
  409080:	xor    BYTE PTR [ebx+esi*1],al
  409083:	jp     0x409077
  409085:	fistp  WORD PTR [edi-0x5a]
  409088:	into   
  409089:	or     ch,BYTE PTR [edi-0x45]
  40908c:	int    0x6c
  40908e:	ins    BYTE PTR es:[edi],dx
  40908f:	inc    esi
  409090:	jle    0x409067
  409092:	fstp   DWORD PTR [eax]
  409094:	push   esi
  409095:	pop    esp
  409096:	sbb    BYTE PTR [esi+0x20a03bc9],cl
  40909c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909d:	inc    edi
  40909e:	dec    edi
  40909f:	sbb    DWORD PTR [ebx+0x5afcaf1],ecx
  4090a5:	stos   BYTE PTR es:[edi],al
  4090a6:	pop    ds
  4090a7:	lods   eax,DWORD PTR ds:[esi]
  4090a8:	sbb    eax,0xec183ca4
  4090ad:	fcomp  DWORD PTR [ecx]
  4090af:	aad    0xfc
  4090b1:	add    BYTE PTR [ebx-0x27],dh
  4090b4:	loope  0x4090fa
  4090b6:	jbe    0x4090c8
  4090b8:	rcl    BYTE PTR [eax+0x17ac2d15],cl
  4090be:	xchg   BYTE PTR [eax],ch
  4090c0:	jne    0x4090d7
  4090c2:	(bad)  
  4090c3:	xchg   edi,eax
  4090c4:	jmp    DWORD PTR [ebx-0x2d]
  4090c7:	jbe    0x409065
  4090c9:	cmc    
  4090ca:	push   ebp
  4090cb:	iret   
  4090cc:	cmp    BYTE PTR [esi-0x48c35f91],dl
  4090d2:	(bad)  
  4090d3:	cmp    al,BYTE PTR [ebp+edx*8+0x19a0ec39]
  4090da:	adc    eax,0x365ec706
  4090df:	mov    edi,0x8113ded
  4090e4:	jp     0x4090df
  4090e6:	or     ah,BYTE PTR [esi+0x5b7d9790]
  4090ec:	test   eax,0x83956d79
  4090f1:	and    al,0x32
  4090f3:	in     eax,0xae
  4090f5:	sub    al,BYTE PTR [ecx+esi*4+0x27]
  4090f9:	mov    eax,ds:0x954469f3
  4090fe:	sub    al,0x58
  409100:	pushf  
  409101:	pop    ebx
  409102:	sti    
  409103:	mov    dh,0xdb
  409105:	imul   DWORD PTR [esi+0x5c]
  409108:	fld    QWORD PTR [ebx+0x4a]
  40910b:	xor    bl,al
  40910d:	mov    esi,esp
  40910f:	xchg   edx,eax
  409110:	cmp    BYTE PTR [edx-0x1ebcadb6],ah
  409116:	cmp    al,0x5e
  409118:	pop    esi
  409119:	or     eax,0x4f4a3a7a
  40911e:	(bad)  
  40911f:	loop   0x409167
  409121:	sar    DWORD PTR [ebp+0x325fcb95],cl
  409127:	mov    ebp,0xcd373c89
  40912c:	popf   
  40912d:	outs   dx,BYTE PTR ds:[esi]
  40912e:	ja     0x40911d
  409130:	sub    eax,0x1a2f2af
  409135:	jae    0x4090ef
  409137:	sbb    ebp,DWORD PTR [edi+0x3c]
  40913a:	and    edi,DWORD PTR [esi-0x3e]
  40913d:	outs   dx,DWORD PTR ds:[esi]
  40913e:	xchg   ebx,eax
  40913f:	xchg   edi,eax
  409140:	mov    eax,ds:0x511e786e
  409145:	fiadd  DWORD PTR [ecx]
  409147:	cmp    dh,0x5d
  40914a:	and    cl,bh
  40914c:	call   eax
  40914e:	inc    esi
  40914f:	es sub al,0xc
  409152:	jmp    0xaf79:0xa7bb3c6f
  409159:	pop    ecx
  40915a:	push   0xf9a1dd28
  40915f:	inc    esi
  409160:	cld    
  409161:	cwde   
  409162:	test   al,0xa3
  409164:	add    eax,0xe7ccee82
  409169:	or     bl,ch
  40916b:	ret    
  40916c:	icebp  
  40916d:	out    dx,al
  40916e:	mov    al,0x54
  409170:	inc    edx
  409171:	out    dx,al
  409172:	sahf   
  409173:	xchg   DWORD PTR [ecx],eax
  409175:	and    al,0x43
  409177:	xchg   edx,eax
  409178:	add    eax,0xa2465c4
  40917d:	push   0x14
  40917f:	popaw  
  409181:	xchg   edx,eax
  409182:	enter  0x1d06,0x49
  409186:	jecxz  0x409204
  409188:	(bad)  
  409189:	test   al,0x5
  40918b:	aaa    
  40918c:	rcl    DWORD PTR [esi+ebp*2],0x7c
  409190:	mov    WORD PTR [edx*8-0x65b14726],cs
  409197:	pcmpgtb mm3,QWORD PTR [ecx-0x4f2c0fce]
  40919e:	data16 xor cl,dl
  4091a1:	xchg   ebx,eax
  4091a2:	cdq    
  4091a3:	dec    ecx
  4091a4:	or     al,0x2
  4091a6:	add    DWORD PTR [eax+0x7c],edi
  4091a9:	dec    ebx
  4091aa:	jb     0x409141
  4091ac:	sti    
  4091ad:	test   DWORD PTR [ebx-0x41d7a1a3],ebx
  4091b3:	xor    esp,DWORD PTR [esi+0x1c611bf]
  4091b9:	sbb    eax,0xfc73ced9
  4091be:	inc    esp
  4091bf:	and    BYTE PTR [esi-0x2de011d8],dl
  4091c5:	shl    BYTE PTR [ebx+0x7719784e],0x37
  4091cc:	leave  
  4091cd:	hlt    
  4091ce:	leave  
  4091cf:	test   BYTE PTR [eax-0x56],ah
  4091d2:	xchg   esp,eax
  4091d3:	mov    WORD PTR [edi+0x28],?
  4091d6:	out    0x70,al
  4091d8:	sub    ecx,DWORD PTR [esi+ebx*1]
  4091db:	and    dh,BYTE PTR [edx-0x1]
  4091de:	movmskps edx,xmm0
  4091e1:	xor    bh,BYTE PTR [edi-0x31]
  4091e4:	(bad)  
  4091e5:	f2xm1  
  4091e7:	enter  0xe094,0xee
  4091eb:	cdq    
  4091ec:	retf   
  4091ed:	sub    BYTE PTR [ebx+0x58d45049],0x81
  4091f4:	jbe    0x409200
  4091f6:	cli    
  4091f7:	sub    BYTE PTR [edx*8-0x7bc83ea9],0x4e
  4091ff:	push   ebp
  409200:	popa   
  409201:	cmp    BYTE PTR [edi-0x3cd1a7fc],dh
  409207:	push   ss
  409208:	inc    edx
  409209:	and    dl,0xc5
  40920c:	lods   eax,DWORD PTR ds:[esi]
  40920d:	and    bl,BYTE PTR [esi]
  40920f:	rol    eax,1
  409211:	inc    eax
  409212:	pop    ds
  409213:	aad    0x17
  409215:	aaa    
  409216:	pop    edx
  409217:	shr    BYTE PTR [ebx],cl
  409219:	lds    edx,FWORD PTR [edi]
  40921b:	sub    bh,dh
  40921d:	pop    esi
  40921e:	cmp    BYTE PTR [ebp+0x26],al
  409221:	sbb    DWORD PTR [ecx],esp
  409223:	push   edx
  409224:	ss xor al,0xa8
  409227:	xchg   dl,al
  409229:	(bad)  
  40922a:	fmulp  st(7),st
  40922c:	add    cl,BYTE PTR gs:[ecx]
  40922f:	mov    dl,0xc3
  409231:	aad    0xfc
  409233:	xchg   edx,eax
  409234:	aas    
  409235:	pop    ecx
  409236:	and    DWORD PTR [ebp-0x2c58799d],0x4de25460
  409240:	fmul   st,st(0)
  409242:	sbb    BYTE PTR [ecx+0x5c1c61d7],al
  409248:	nop
  409249:	mov    esi,0x89eca71f
  40924e:	push   0x2b
  409250:	adc    al,0x8d
  409252:	adc    eax,0x8f6f23c3
  409257:	mov    edx,esp
  409259:	clc    
  40925a:	fcom   QWORD PTR [esp+edx*2+0x37]
  40925e:	in     eax,dx
  40925f:	sub    eax,0x2a37cb2e
  409264:	or     al,0x0
  409266:	out    0xd9,eax
  409268:	lahf   
  409269:	push   edi
  40926a:	mov    ebx,0x1f1bf75d
  40926f:	fsubr  QWORD PTR [esi+0x26b2e427]
  409275:	dec    esp
  409276:	push   ecx
  409277:	aam    0xb5
  409279:	retf   0x7526
  40927c:	sub    eax,0xd397fa16
  409281:	sub    esp,edi
  409283:	or     eax,0x8ceb471b
  409288:	in     eax,0xb8
  40928a:	rcr    ch,0x4b
  40928d:	mov    DWORD PTR [ebx],ecx
  40928f:	add    esi,DWORD PTR [ebx-0xc]
  409292:	aas    
  409293:	adc    DWORD PTR [ecx+edx*4+0x1227438c],0xffffffb4
  40929b:	popa   
  40929c:	ret    0x47df
  40929f:	arpl   WORD PTR [eax+0x1e],si
  4092a2:	js     0x40924e
  4092a4:	mov    cl,0x38
  4092a6:	int    0xa2
  4092a8:	out    dx,eax
  4092a9:	fs (bad) 
  4092ab:	stos   DWORD PTR es:[edi],eax
  4092ac:	xor    edi,DWORD PTR [ebp-0x3b5bf672]
  4092b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b3:	jle    0x4092f6
  4092b5:	pop    ss
  4092b6:	and    ah,BYTE PTR [ecx]
  4092b8:	push   eax
  4092b9:	inc    edi
  4092ba:	push   0x25fe8f95
  4092bf:	add    BYTE PTR [ebx],dh
  4092c1:	not    BYTE PTR [edi+0x50d7e191]
  4092c7:	sbb    al,0xda
  4092c9:	jbe    0x409258
  4092cb:	dec    ecx
  4092cc:	dec    ebp
  4092cd:	nop
  4092ce:	lods   al,BYTE PTR ss:[esi]
  4092d0:	xchg   BYTE PTR [eax+edi*8],ch
  4092d3:	xchg   ebp,eax
  4092d4:	cdq    
  4092d5:	(bad)  
  4092d7:	lods   al,BYTE PTR ds:[esi]
  4092d8:	xor    DWORD PTR gs:[eax-0x77],ebp
  4092dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092dd:	jo     0x409318
  4092df:	sbb    ebx,DWORD PTR [ebx]
  4092e1:	shr    DWORD PTR ss:[edi],cl
  4092e4:	pop    ebx
  4092e5:	xor    BYTE PTR [esi],ah
  4092e7:	mov    dh,0x85
  4092e9:	(bad)  
  4092ea:	pop    esi
  4092eb:	push   edx
  4092ec:	jb     0x40931c
  4092ee:	les    edx,FWORD PTR [edi]
  4092f0:	mov    DWORD PTR [ecx+0x6d],ecx
  4092f3:	jmp    0x40932e
  4092f5:	(bad)  
  4092f6:	jmp    0x381c483e
  4092fb:	cmp    DWORD PTR [ebp+0x13898ff],ebp
  409301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409302:	cdq    
  409303:	inc    ecx
  409304:	sub    al,ch
  409306:	div    DWORD PTR [edi-0x2773fcd2]
  40930c:	fsub   st(7),st
  40930e:	(bad)  
  40930f:	fnstenv [eax+0x69ffcbcd]
  409315:	mov    edx,DWORD PTR [ecx+0x6]
  409318:	dec    ebx
  409319:	jg     0x40936a
  40931b:	and    edi,DWORD PTR [edx+0x70]
  40931e:	pop    es
  40931f:	cmp    bh,BYTE PTR [eax+0x1903a95f]
  409325:	or     al,ah
  409327:	pop    ds
  409328:	inc    edx
  409329:	fbld   TBYTE PTR [edi+0x69288a0a]
  40932f:	ror    DWORD PTR [edi+0x66],1
  409332:	push   ss
  409333:	jmp    0x4092ba
  409335:	pop    esi
  409336:	adc    ch,BYTE PTR [ebx-0x33f2f613]
  40933c:	mov    ?,WORD PTR [edi]
  40933e:	dec    ebx
  40933f:	arpl   WORD PTR [eax+0x58b95ce0],sp
  409345:	cwde   
  409346:	xor    al,0x5a
  409348:	in     eax,0xb8
  40934a:	scas   eax,DWORD PTR es:[edi]
  40934b:	pop    edx
  40934c:	and    edi,DWORD PTR [edi+0x5422f1b2]
  409352:	push   cs
  409353:	addr16 xchg edx,eax
  409355:	xchg   esp,eax
  409356:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409357:	mov    DWORD PTR [eax],0x399f40da
  40935d:	push   ds
  40935e:	fistp  QWORD PTR [edi]
  409360:	fs cld 
  409362:	leave  
  409363:	dec    edx
  409364:	jge    0x4093e5
  409366:	nop
  409367:	(bad)  
  409369:	fdivr  st(5),st
  40936b:	aas    
  40936c:	xchg   esi,eax
  40936e:	xchg   esp,eax
  40936f:	add    al,0xdd
  409371:	int    0x2
  409373:	xor    edi,edx
  409375:	pop    esi
  409376:	(bad)
  409379:	push   ebp
  40937a:	cld    
  40937b:	ja     0x4093ac
  40937d:	das    
  40937e:	in     eax,0x13
  409380:	sahf   
  409381:	sti    
  409382:	xor    eax,0x2a4d034e
  409387:	xchg   ecx,eax
  409388:	sti    
  409389:	cs stos DWORD PTR es:[edi],eax
  40938b:	gs pop edx
  40938d:	scas   al,BYTE PTR es:[edi]
  40938e:	push   ss
  40938f:	jae    0x40936b
  409391:	loop   0x4093a5
  409393:	loopne 0x409385
  409395:	xchg   ebp,eax
  409396:	mov    eax,0xa677e8de
  40939b:	adc    eax,0xe6b7f427
  4093a0:	nop
  4093a1:	push   ds
  4093a2:	bound  edx,QWORD PTR [ebp+0x3cd7376e]
  4093a8:	retf   0x8a57
  4093ab:	mov    esi,DWORD PTR [esp+0xd]
  4093af:	pop    edx
  4093b0:	jno    0x409345
  4093b2:	sub    BYTE PTR [eax+edi*4],ch
  4093b5:	sub    al,0xa1
  4093b7:	int    0x5e
  4093b9:	inc    esp
  4093ba:	into   
  4093bb:	and    BYTE PTR [edi-0x59],0x22
  4093bf:	mov    ds:0x3346c0d0,eax
  4093c4:	lds    eax,FWORD PTR [edi*2-0xb70a60]
  4093cb:	inc    edx
  4093cc:	stc    
  4093cd:	pop    esp
  4093ce:	aaa    
  4093cf:	mov    ah,dl
  4093d1:	shl    DWORD PTR cs:[edi+0x33],0xd4
  4093d6:	cmp    eax,0xfe266c39
  4093db:	jo     0x409394
  4093dd:	ja     0x4093a6
  4093df:	push   0x5ef30cd7
  4093e4:	cdq    
  4093e5:	mov    eax,0x2fee6d66
  4093ea:	add    BYTE PTR [esi-0x1a],bh
  4093ed:	addr16 in al,0xec
  4093f0:	push   esp
  4093f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093f2:	dec    edx
  4093f3:	scas   eax,DWORD PTR es:[edi]
  4093f4:	call   0xbdf65e5a
  4093f9:	retf   
  4093fa:	cs js  0x4093ab
  4093fd:	imul   DWORD PTR [esi+eax*4-0x6f]
  409401:	jg     0x4093c4
  409403:	daa    
  409404:	loop   0x40943d
  409406:	mov    bl,0xaa
  409408:	call   0xdb040d10
  40940d:	test   eax,0xe6b9af7e
  409412:	shl    DWORD PTR [esi-0x4f],1
  409415:	mov    eax,0xdf61ee66
  40941a:	jbe    0x4093ac
  40941c:	in     al,0x75
  40941e:	das    
  40941f:	fmulp  st(7),st
  409421:	mul    al
  409423:	add    eax,0x4a7d0395
  409428:	jns    0x409469
  40942a:	fnstenv [ecx-0x5d]
  40942d:	push   esi
  40942e:	adc    eax,0x62767c58
  409433:	sbb    eax,0xffffff8e
  409436:	mov    al,0xd5
  409438:	hlt    
  409439:	xchg   edx,eax
  40943a:	js     0x409458
  40943c:	pop    ebp
  40943d:	adc    eax,0xcae384d1
  409442:	mov    al,0xae
  409444:	das    
  409445:	mov    BYTE PTR [ebx],bl
  409447:	sub    ebp,DWORD PTR [ebp-0x8]
  40944a:	cwde   
  40944b:	ror    BYTE PTR ds:[ecx-0x3e3960fa],cl
  409452:	add    eax,0x64d2bbe8
  409457:	ins    BYTE PTR es:[edi],dx
  409458:	inc    ebp
  409459:	inc    ecx
  40945a:	popa   
  40945b:	pop    eax
  40945c:	add    DWORD PTR [ebx+edx*8-0x34013fdf],esp
  409463:	lahf   
  409464:	add    BYTE PTR [ebp-0x6a],dl
  409467:	mov    cl,0x55
  409469:	mov    ds:0x124e6f7b,al
  40946e:	or     edi,DWORD PTR [ecx+eiz*8]
  409471:	and    bh,dh
  409473:	mov    ebx,0xa8b9049e
  409478:	clc    
  409479:	shr    DWORD PTR [edi-0x44],0x95
  40947d:	daa    
  40947e:	pop    ebx
  40947f:	rcl    BYTE PTR [ecx],0x27
  409482:	ins    BYTE PTR es:[edi],dx
  409483:	imul   ebx,ebx,0xdaaf08fc
  409489:	push   esi
  40948a:	dec    ecx
  40948b:	aas    
  40948c:	loopne 0x409487
  40948e:	and    BYTE PTR [edx],dl
  409490:	rcr    al,0x8f
  409493:	inc    BYTE PTR [eax-0x10]
  409496:	inc    edi
  409497:	bnd jne 0x409515
  40949a:	call   0x9f39:0x51803065
  4094a1:	xchg   esi,eax
  4094a3:	xor    eax,0xf493e2d4
  4094a8:	inc    edx
  4094a9:	daa    
  4094aa:	mov    al,ds:0x73c2669c
  4094af:	or     eax,0x4272a7d4
  4094b4:	loop   0x409474
  4094b6:	or     bh,BYTE PTR [edx+0x25233e53]
  4094bc:	mov    ds:0x17b4ad2d,al
  4094c1:	push   ss
  4094c2:	(bad)  
  4094c3:	out    0x7,eax
  4094c5:	pop    es
  4094c6:	dec    esp
  4094c7:	jp     0x409464
  4094c9:	(bad)  [edx]
  4094cb:	push   ds
  4094cc:	push   0xffffffcb
  4094ce:	inc    DWORD PTR [eax+0x7a822a4e]
  4094d4:	sub    cl,BYTE PTR [edi]
  4094d6:	mov    bh,BYTE PTR [edi+0xec9831b]
  4094dc:	lahf   
  4094dd:	xchg   ebx,eax
  4094de:	jge    0x4094c7
  4094e0:	mov    ds,WORD PTR [ebp+edx*8-0x25f7924e]
  4094e7:	je     0x4094c6
  4094e9:	retf   
  4094ea:	test   DWORD PTR [ecx],0x2966e4d7
  4094f0:	test   DWORD PTR [ebx-0x6b604c23],ebx
  4094f6:	mov    esp,0xdd135873
  4094fb:	mov    cl,bh
  4094fd:	adc    BYTE PTR [esi-0x2eeecc1f],0xc6
  409504:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409505:	mov    esp,DWORD PTR ds:0xc1a49877
  40950b:	xchg   BYTE PTR ds:0x278d0e59,al
  409511:	dec    esi
  409512:	jb     0x40956c
  409514:	inc    esp
  409515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409516:	push   esi
  409517:	jb     0x40950b
  409519:	and    dl,bl
  40951b:	mul    DWORD PTR gs:[edi]
  40951e:	xchg   esp,eax
  40951f:	or     al,dh
  409521:	paddusw mm7,QWORD PTR [eax+ebp*1]
  409525:	xchg   edx,eax
  409526:	out    0xfa,al
  409528:	pop    es
  409529:	xor    DWORD PTR [edx],edx
  40952b:	loopne 0x40953e
  40952d:	inc    ebx
  40952e:	xchg   esp,eax
  40952f:	rcr    BYTE PTR [edi],0x80
  409532:	and    BYTE PTR [eax-0x6c8c07ac],cl
  409538:	inc    ebx
  409539:	mov    eax,0x5ddf3901
  40953e:	dec    edi
  40953f:	dec    esp
  409540:	sbb    BYTE PTR [edi-0x3e2d5684],bh
  409546:	jno    0x409521
  409548:	adc    BYTE PTR [esi],bh
  40954a:	(bad)  
  40954b:	enter  0x2f8,0xd9
  40954f:	das    
  409550:	ja     0x40958f
  409552:	in     eax,dx
  409553:	mov    ds:0x8923c9a,eax
  409558:	xor    ah,dh
  40955a:	imul   ebp,DWORD PTR [edi+ebx*8+0x2147bbb0],0xffffffcd
  409562:	lds    edx,FWORD PTR ds:0x5cc17837
  409568:	cmp    al,al
  40956a:	or     eax,0x554e9928
  40956f:	int    0x6b
  409571:	in     eax,dx
  409572:	jmp    0x6fa4f49e
  409577:	dec    esi
  409578:	pop    edi
  409579:	adc    BYTE PTR [ebx],bl
  40957b:	jb     0x409527
  40957d:	jmp    0x40951d
  40957f:	(bad)  
  409580:	aam    0xb3
  409582:	mov    dh,0xc3
  409584:	pop    ecx
  409585:	pop    es
  409586:	out    dx,al
  409587:	inc    edi
  409588:	sub    dl,BYTE PTR [edi+0x8e35b95]
  40958e:	push   ebp
  40958f:	(bad)  
  409590:	mov    esp,0x1e8c39e9
  409595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409596:	or     al,0xe3
  409598:	xchg   BYTE PTR [edx],ch
  40959a:	jne    0x40956b
  40959c:	sub    esi,edx
  40959e:	mov    edx,DWORD PTR [edx]
  4095a0:	shl    bh,1
  4095a2:	fscale 
  4095a4:	xor    ebp,DWORD PTR [edi+ecx*4+0x52bc9cb9]
  4095ab:	pop    ss
  4095ac:	aam    0x60
  4095ae:	dec    eax
  4095af:	les    ebx,FWORD PTR [edi+0xa62fde6]
  4095b5:	xchg   ebp,eax
  4095b6:	and    eax,0xacedc0f7
  4095bb:	push   eax
  4095bc:	pop    ds
  4095bd:	mov    eax,ds:0x511374bc
  4095c2:	push   edi
  4095c3:	out    dx,eax
  4095c4:	jno    0x4095ac
  4095c6:	mov    ds:0x2be678b,al
  4095cb:	int    0x99
  4095cd:	in     al,0x65
  4095cf:	in     al,0x9a
  4095d1:	cmp    eax,0x46299406
  4095d6:	je     0x409656
  4095d8:	retf   
  4095d9:	pop    es
  4095da:	xor    ebx,esp
  4095dc:	enter  0xcd55,0xd7
  4095e0:	and    al,0x1
  4095e2:	push   ecx
  4095e3:	neg    BYTE PTR [edx]
  4095e5:	ds retf 0x8bfe
  4095e9:	cmp    eax,0xcfd68236
  4095ee:	inc    ebp
  4095ef:	gs jns 0x409660
  4095f2:	ss push eax
  4095f4:	je     0x4095f2
  4095f6:	(bad)  
  4095f7:	fcom   QWORD PTR [eax+ebx*4+0x7603c3ce]
  4095fe:	sbb    BYTE PTR [ebp-0xa99c779],0x7f
  409605:	or     ecx,DWORD PTR [ecx+0x58997ef3]
  40960b:	lahf   
  40960c:	pop    ebx
  40960d:	pop    edx
  40960e:	out    dx,eax
  40960f:	inc    BYTE PTR [esi+0x4a]
  409612:	xchg   edx,eax
  409613:	fdiv   DWORD PTR [edx]
  409615:	jp     0x4095fa
  409617:	test   al,0xf6
  409619:	mov    edi,0x4e8dba3d
  40961e:	jnp    0x4095c5
  409620:	dec    ebx
  409621:	(bad)  
  409622:	mov    ebx,edi
  409624:	push   es
  409625:	xchg   ebp,edx
  409627:	mov    esi,0xb0e0a35a
  40962c:	ins    BYTE PTR es:[edi],dx
  40962d:	add    eax,0x8bc76123
  409632:	jo     0x4095fe
  409634:	xor    ebx,DWORD PTR [ebx]
  409636:	cmp    al,BYTE PTR [edi-0x56]
  409639:	in     al,0x30
  40963b:	cmc    
  40963c:	fdivr  QWORD PTR [ebp-0x4]
  40963f:	xor    BYTE PTR [ebx],dh
  409641:	inc    ecx
  409642:	scas   eax,DWORD PTR es:[edi]
  409643:	mov    ah,0x7c
  409645:	pop    es
  409646:	shr    DWORD PTR [eax+0x107a6faa],1
  40964c:	fs jle 0x409688
  40964f:	xchg   ebp,eax
  409650:	push   ds
  409651:	push   ebp
  409652:	sub    al,0xc0
  409654:	outs   dx,DWORD PTR ds:[esi]
  409655:	sub    edx,DWORD PTR [esi]
  409657:	popa   
  409658:	push   ebp
  409659:	test   al,0x18
  40965b:	jnp    0x409627
  40965d:	xor    al,0x52
  40965f:	cld    
  409660:	mov    ds:0xdf87229d,eax
  409665:	dec    esi
  409666:	outs   dx,BYTE PTR ds:[esi]
  409667:	aas    
  409668:	je     0x409621
  40966a:	or     eax,0x5f8ac67d
  40966f:	or     BYTE PTR [edx],dl
  409671:	add    DWORD PTR [ebp+esi*1+0x2c],0x8d0be6a6
  409679:	jns    0x409666
  40967b:	mov    al,ds:0x769da228
  409680:	push   0xb96f7dd9
  409685:	scas   eax,DWORD PTR es:[edi]
  409686:	inc    esi
  409687:	adc    DWORD PTR [edi-0x5acf709a],esp
  40968d:	or     ecx,DWORD PTR [edx-0x5d]
  409690:	push   cs
  409691:	std    
  409692:	aaa    
  409693:	mov    BYTE PTR [esi-0x6b],bl
  409696:	test   al,0x1f
  409698:	adc    DWORD PTR [bp+di-0x21],ebp
  40969c:	jmp    0x3ec83d23
  4096a1:	rcr    DWORD PTR [edi],1
  4096a3:	cmc    
  4096a4:	xchg   ebx,eax
  4096a5:	xchg   BYTE PTR [esi-0x7b],bh
  4096a8:	and    esi,DWORD PTR [ebp-0x5f66b198]
  4096ae:	adc    esp,esp
  4096b0:	das    
  4096b1:	sbb    ch,BYTE PTR [eax+0x4]
  4096b4:	in     al,0x50
  4096b6:	mov    al,ch
  4096b8:	dec    ecx
  4096b9:	pop    sp
  4096bb:	and    bh,BYTE PTR [ebp-0x61551c48]
  4096c1:	jecxz  0x4096dd
  4096c3:	adc    eax,0x45388194
  4096c8:	inc    edx
  4096c9:	ss inc ebp
  4096cb:	in     al,dx
  4096cc:	adc    al,0x38
  4096ce:	cli    
  4096cf:	arpl   WORD PTR [eax],ax
  4096d1:	sbb    DWORD PTR [ecx],esp
  4096d3:	cmp    ecx,DWORD PTR [edi+0x2aa07509]
  4096d9:	jl     0x40969a
  4096db:	fwait
  4096dc:	sbb    al,0x86
  4096de:	test   BYTE PTR [esp+edx*2+0x2522e5e5],bl
  4096e5:	jnp    0x4096fe
  4096e7:	adc    ebx,esi
  4096e9:	lds    ebp,FWORD PTR [edx+0x3d5ef67e]
  4096ef:	mov    ebp,0xbf3c3c35
  4096f4:	cmp    DWORD PTR [eax+edx*2+0x61],esp
  4096f8:	int    0x70
  4096fa:	jbe    0x409759
  4096fc:	lahf   
  4096fd:	jp     0x4096b1
  4096ff:	cmp    BYTE PTR [eax+0x2a591d90],bh
  409705:	xor    al,BYTE PTR [esi]
  409707:	lods   eax,DWORD PTR ds:[esi]
  409708:	push   ss
  409709:	fld    DWORD PTR [edi+0x5e]
  40970c:	mov    edx,0xaf1a5feb
  409711:	pop    edi
  409712:	loope  0x409717
  409714:	fldcw  WORD PTR [ebx]
  409716:	or     al,0x11
  409718:	pusha  
  409719:	jae    0x409729
  40971b:	scas   eax,DWORD PTR es:[edi]
  40971c:	pop    ss
  40971d:	sub    esp,DWORD PTR [edx+0x3a27c77f]
  409723:	std    
  409724:	push   ds
  409725:	ror    DWORD PTR [ebx-0x692acf14],0x70
  40972c:	(bad)  
  40972d:	out    dx,al
  40972e:	push   edi
  40972f:	push   edi
  409730:	or     edi,DWORD PTR [edi+0x4d12254e]
  409736:	std    
  409737:	sub    ebp,DWORD PTR [eax-0x2b]
  40973a:	xor    DWORD PTR [esi-0x7d70f8e4],0x1a6c2769
  409744:	and    DWORD PTR [edx-0x44],0xffffffd3
  409748:	cmp    eax,0x9112b74
  40974d:	push   ebx
  40974e:	sub    eax,0x2c0d673b
  409753:	sub    al,0x24
  409755:	fcom   QWORD PTR [ebp-0x6b]
  409758:	xor    eax,0xb3dfcb21
  40975d:	addr16 add cl,bl
  409760:	or     DWORD PTR [edi-0x17],edi
  409763:	jae    0x409724
  409765:	push   ecx
  409766:	rol    DWORD PTR [eax-0x75],1
  409769:	pop    ss
  40976a:	push   ebp
  40976b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40976c:	cs aam 0x8f
  40976f:	shr    BYTE PTR [edi],1
  409771:	mov    eax,0x159fe546
  409776:	sbb    BYTE PTR [edi+0x7bca64c3],ah
  40977c:	and    DWORD PTR [eax+ebx*4],0x1c4c9880
  409783:	fst    DWORD PTR [eax]
  409785:	add    al,0x5a
  409787:	sahf   
  409788:	ds pop ebx
  40978a:	test   BYTE PTR [ebp-0x15ab5bec],cl
  409790:	test   BYTE PTR [ebx],ch
  409792:	mov    dh,0x4b
  409794:	push   ebx
  409795:	mov    ecx,0xbe25867d
  40979a:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40979c:	push   edi
  40979d:	jg     0x409786
  40979f:	inc    ebp
  4097a0:	add    DWORD PTR [edx-0x5c],edx
  4097a3:	jne    0x409775
  4097a5:	pop    ebx
  4097a6:	mov    dh,0xe5
  4097a8:	jo     0x4097f4
  4097aa:	call   0x22c4:0xbd00d073
  4097b1:	or     edi,ebx
  4097b3:	inc    ebp
  4097b4:	jne    0x4097d2
  4097b6:	dec    ecx
  4097b7:	test   DWORD PTR [esi-0x7d],esp
  4097ba:	xchg   ecx,eax
  4097bb:	sar    DWORD PTR [esi+0x7b],1
  4097be:	fnstcw WORD PTR [edi-0x66]
  4097c1:	sub    BYTE PTR [edi-0x55],cl
  4097c4:	sbb    al,0x68
  4097c6:	push   ss
  4097c7:	mov    dl,0xd5
  4097c9:	xor    DWORD PTR [edi],ebp
  4097cb:	xor    eax,0x71d410f5
  4097d0:	out    0xe7,eax
  4097d2:	xlat   BYTE PTR ds:[ebx]
  4097d3:	int3   
  4097d4:	dec    ecx
  4097d5:	pop    esp
  4097d6:	fnsave [esi+0x6c6301c1]
  4097dc:	adc    bl,BYTE PTR [ebp+0x25]
  4097df:	xchg   esp,eax
  4097e0:	jbe    0x4097a9
  4097e2:	xchg   esp,eax
  4097e3:	mov    esi,0x4344b5af
  4097e8:	and    BYTE PTR ds:0xf448412e,dl
  4097ee:	sbb    DWORD PTR [ebx],ebp
  4097f0:	popa   
  4097f1:	pand   mm1,QWORD PTR [edi+0xa868ed9]
  4097f8:	adc    BYTE PTR [ebp+0x5bf5a060],dh
  4097fe:	mov    edx,0xabe6a889
  409803:	sub    al,BYTE PTR [edi+0x131b0f88]
  409809:	stos   BYTE PTR es:[edi],al
  40980a:	daa    
  40980b:	ror    BYTE PTR [eax],0xe8
  40980e:	or     ebx,DWORD PTR [eax]
  409810:	add    dh,BYTE PTR [ecx]
  409812:	pushf  
  409813:	sub    eax,0x1d3ce366
  409818:	repz cmp DWORD PTR [edx+0x6a],ebp
  40981c:	std    
  40981d:	test   eax,0x74761f4e
  409822:	pop    ds
  409823:	mov    esp,DWORD PTR [ecx-0x5e62f2c8]
  409829:	ins    BYTE PTR es:[edi],dx
  40982a:	rep lock stos DWORD PTR es:[edi],eax
  40982d:	sbb    bl,ch
  40982f:	out    dx,eax
  409830:	fwait
  409831:	lahf   
  409832:	push   ebx
  409833:	sbb    ebx,DWORD PTR ds:0x652de05f
  409839:	sbb    eax,0xbed50861
  40983e:	stos   DWORD PTR es:[edi],eax
  40983f:	adc    DWORD PTR ds:0x783b61cb,0x2fdfc94b
  409849:	jle    0x40982a
  40984b:	int3   
  40984c:	fild   DWORD PTR [eax+ecx*4-0x79d6ed59]
  409853:	mov    gs,WORD PTR [ecx+0x65]
  409856:	test   DWORD PTR [ecx+eiz*8-0x43],ebp
  40985a:	lock adc al,0x9c
  40985d:	mov    ah,BYTE PTR [esi]
  40985f:	pop    es
  409860:	jae    0x40983c
  409862:	sbb    esi,ebx
  409864:	adc    al,0x5
  409866:	aas    
  409867:	mov    esp,0x2184c97d
  40986c:	or     DWORD PTR [ecx-0x33879f92],ebx
  409872:	xchg   ebx,eax
  409873:	hlt    
  409874:	outs   dx,DWORD PTR ds:[esi]
  409875:	sub    eax,0xf727f5c
  40987a:	ret    0x5afc
  40987d:	add    eax,DWORD PTR [eax+0x1c]
  409880:	mov    cl,0x4f
  409882:	sbb    al,0xd1
  409884:	hlt    
  409885:	add    al,0x17
  409887:	jno    0x4098e5
  409889:	int    0x35
  40988b:	cmp    ecx,edi
  40988d:	sahf   
  40988e:	daa    
  40988f:	xchg   esp,eax
  409890:	xlat   BYTE PTR ds:[ebx]
  409891:	fwait
  409892:	(bad)  
  409893:	idiv   dl
  409895:	mov    eax,0x7f111823
  40989a:	or     BYTE PTR [esi+0x1b83b014],dh
  4098a0:	dec    esi
  4098a1:	sbb    esp,esi
  4098a3:	iret   
  4098a4:	idiv   DWORD PTR [edi]
  4098a6:	leave  
  4098a7:	fild   QWORD PTR [edx]
  4098a9:	loopne 0x409831
  4098ab:	clc    
  4098ac:	ret    
  4098ad:	add    DWORD PTR [esi],edx
  4098af:	pop    edi
  4098b0:	add    dl,BYTE PTR [esi+0xde12d61]
  4098b6:	mov    ebx,DWORD PTR [ebx-0xdbec8d9]
  4098bc:	and    BYTE PTR [eax+eiz*1],al
  4098bf:	cmp    al,0x85
  4098c1:	pop    ds
  4098c2:	sub    BYTE PTR [ecx+0x42],dl
  4098c5:	push   0x3fde485
  4098ca:	push   esi
  4098cb:	xchg   ebp,eax
  4098cc:	pusha  
  4098cd:	pop    di
  4098cf:	sub    dh,BYTE PTR [ebx+0x69]
  4098d2:	fldenv [ebx+0x27]
  4098d5:	mov    bh,0xfb
  4098d7:	inc    esp
  4098d8:	inc    eax
  4098d9:	bound  esp,QWORD PTR [edi+edx*4]
  4098dc:	cmc    
  4098dd:	out    0xb0,al
  4098df:	add    eax,0xd112d1d3
  4098e4:	test   bh,bl
  4098e6:	inc    esi
  4098e7:	rol    DWORD PTR [edi],cl
  4098e9:	pop    es
  4098ea:	add    eax,0x97d06a4
  4098ef:	vunpckhps ymm0,ymm0,ymm0
  4098f3:	dec    ebx
  4098f4:	cmp    ebp,DWORD PTR [ecx-0x500d5ad]
  4098fa:	push   edi
  4098fb:	jl     0x40993d
  4098fd:	call   0x3175:0x29e6cd5c
  409904:	dec    esp
  409905:	psllq  mm1,mm2
  409908:	mov    esi,0x3aa61aec
  40990d:	mov    cl,0x31
  40990f:	mov    dl,0xf4
  409911:	push   edi
  409912:	js     0x40989f
  409914:	and    eax,DWORD PTR fs:[ebp+0x1e9a761b]
  40991b:	inc    esi
  40991c:	xlat   BYTE PTR ds:[ebx]
  40991d:	stos   BYTE PTR es:[edi],al
  40991e:	pop    DWORD PTR [ebx]
  409920:	xor    cl,BYTE PTR [esi+0x68]
  409923:	xlat   BYTE PTR ds:[ebx]
  409924:	outs   dx,BYTE PTR ds:[esi]
  409925:	fiadd  DWORD PTR [edi+0x68]
  409928:	jae    0x409912
  40992a:	mov    DWORD PTR [eax],esp
  40992c:	fistp  QWORD PTR [edi-0x4a]
  40992f:	cmc    
  409930:	cmp    eax,0xd7789431
  409935:	cwde   
  409936:	push   ebp
  409937:	mov    al,ds:0xacc0d477
  40993c:	sub    dh,BYTE PTR [edx]
  40993e:	mov    esp,0xe0367e12
  409943:	push   ds
  409944:	jp     0x40990d
  409946:	push   esi
  409947:	dec    eax
  409948:	push   ds
  409949:	xor    eax,0xcb517f46
  40994e:	daa    
  40994f:	test   al,0x43
  409951:	xchg   esp,eax
  409952:	dec    edi
  409953:	cwde   
  409954:	popa   
  409955:	outs   dx,BYTE PTR ds:[esi]
  409956:	stos   DWORD PTR es:[edi],eax
  409957:	dec    esi
  409958:	sti    
  409959:	mov    esi,0xc75cc68
  40995e:	sbb    DWORD PTR [edi],ecx
  409960:	cmc    
  409961:	frstor [ebp-0x4b]
  409964:	(bad)  
  409965:	xor    ch,cl
  409967:	add    DWORD PTR [edx],edi
  409969:	mov    ah,0xb1
  40996b:	fldlg2 
  40996d:	clc    
  40996e:	jno    0x4098f5
  409970:	popf   
  409971:	scas   al,BYTE PTR es:[edi]
  409972:	jno    0x409970
  409974:	push   ds
  409975:	popf   
  409976:	adc    BYTE PTR [ebp+0x3bf2f30e],bl
  40997c:	imul   esp,ecx,0xffffffb5
  40997f:	fnstsw WORD PTR [eax]
  409981:	pushw  es
  409983:	or     eax,0xde865fba
  409988:	xchg   ecx,eax
  409989:	push   es
  40998a:	ds clc 
  40998c:	xor    eax,0x5a3adec3
  409991:	cmp    dh,BYTE PTR [ebx]
  409993:	xchg   BYTE PTR [esi-0x6a],ch
  409996:	adc    DWORD PTR [edi-0x3abc446f],edx
  40999c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40999d:	rol    DWORD PTR [edx-0x644f053f],0x47
  4099a4:	xchg   edx,eax
  4099a5:	popf   
  4099a6:	mov    dh,0x40
  4099a8:	out    dx,al
  4099a9:	or     al,0xeb
  4099ab:	mov    esi,0x32fa58b2
  4099b0:	add    DWORD PTR [esi+0x6],0xffffff80
  4099b4:	into   
  4099b5:	xor    al,0x29
  4099b7:	push   esp
  4099b8:	retf   
  4099b9:	ds pop eax
  4099bb:	mov    dl,BYTE PTR [edi+edx*2-0x80]
  4099bf:	xchg   esp,eax
  4099c0:	inc    esp
  4099c1:	iret   
  4099c2:	(bad)  
  4099c3:	repz stc 
  4099c5:	fild   DWORD PTR [ebp+0x3f423b78]
  4099cb:	inc    ebp
  4099cc:	add    BYTE PTR [ebp-0x5f8794e],dh
  4099d2:	(bad)  
  4099d3:	push   ecx
  4099d4:	adc    DWORD PTR [ebx],0x4
  4099d7:	outs   dx,BYTE PTR ds:[esi]
  4099d8:	ins    DWORD PTR es:[edi],dx
  4099d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099da:	gs in  eax,0x8b
  4099dd:	cmp    bh,BYTE PTR [edi-0x60]
  4099e0:	jmp    0xd2c6:0xcd56ae69
  4099e7:	cli    
  4099e8:	inc    ecx
  4099e9:	sub    dh,BYTE PTR [ebx+0x26]
  4099ec:	loope  0x409a20
  4099ee:	pop    ds
  4099ef:	push   ds
  4099f0:	jg     0x409985
  4099f2:	and    DWORD PTR ds:0xd594764b,0x663e5ec7
  4099fc:	push   esp
  4099fd:	push   esp
  4099fe:	adc    al,BYTE PTR [esi+edx*4+0x9f89525]
  409a05:	dec    ebx
  409a06:	xor    DWORD PTR [eax-0x1fa64d31],ebx
  409a0c:	xchg   edi,eax
  409a0d:	in     eax,0xef
  409a0f:	lea    ebx,[ecx+0x31]
  409a12:	(bad)  
  409a13:	pop    ds
  409a14:	xchg   ebx,eax
  409a15:	daa    
  409a16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a17:	(bad)  
  409a18:	xchg   ebp,eax
  409a19:	or     bl,bl
  409a1b:	rcr    DWORD PTR [edi+edi*8+0x61],cl
  409a1f:	outs   dx,DWORD PTR ds:[esi]
  409a20:	pop    esi
  409a21:	es push ebx
  409a23:	in     eax,0x4
  409a25:	sub    ch,cl
  409a27:	(bad)  
  409a28:	push   edi
  409a29:	sub    bl,BYTE PTR [ecx+0x6c]
  409a2c:	cmp    edi,ebx
  409a2e:	call   FWORD PTR [bx+si+0x79e5]
  409a33:	sahf   
  409a34:	or     DWORD PTR [ebx+0x18],0x1f
  409a38:	in     eax,dx
  409a39:	push   edi
  409a3a:	inc    esi
  409a3c:	sub    eax,0x1ca24c49
  409a41:	mov    cl,0x93
  409a43:	cmp    DWORD PTR [ecx+0x10],eax
  409a46:	push   cs
  409a47:	hlt    
  409a48:	aaa    
  409a49:	call   0x67b4:0xde826c68
  409a50:	cli    
  409a51:	dec    eax
  409a52:	push   ecx
  409a53:	dec    esi
  409a54:	jns    0x409a0b
  409a56:	pushf  
  409a57:	push   esp
  409a58:	lods   eax,DWORD PTR ds:[esi]
  409a59:	ja     0x409acc
  409a5b:	(bad)  
  409a5c:	retf   0x5c17
  409a5f:	inc    edi
  409a60:	mov    eax,0x9f68caf
  409a65:	inc    edi
  409a66:	jae    0x409a56
  409a68:	dec    ecx
  409a69:	mov    ebx,0xdef7157e
  409a6e:	cmc    
  409a6f:	inc    esi
  409a70:	lds    eax,FWORD PTR [edi-0x1aa33f2f]
  409a76:	inc    ebp
  409a77:	push   0x72fc61c0
  409a7c:	adc    al,BYTE PTR [ebp*8-0x5d18ab6f]
  409a83:	imul   ebp,ecx,0xffffffc9
  409a86:	outs   dx,BYTE PTR ds:[esi]
  409a87:	pop    eax
  409a88:	stos   DWORD PTR es:[edi],eax
  409a89:	(bad)  
  409a8a:	(bad)  
  409a8b:	mov    BYTE PTR [esi-0xc75a66d],0x3a
  409a92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a93:	or     edx,eax
  409a95:	mov    ds:0x8ddd969f,al
  409a9a:	test   al,al
  409a9c:	(bad)  
  409a9e:	aad    0xab
  409aa0:	cld    
  409aa1:	in     al,dx
  409aa2:	(bad)  
  409aa3:	fsubr  DWORD PTR [ecx+0x505d96dc]
  409aa9:	fwait
  409aaa:	adc    dl,BYTE PTR [edx-0x6db9b665]
  409ab0:	jb     0x409ad1
  409ab2:	(bad)  
  409ab3:	push   ebx
  409ab4:	iret   
  409ab5:	ret    
  409ab6:	push   ebp
  409ab7:	push   esi
  409ab8:	pop    ss
  409ab9:	fwait
  409aba:	add    edx,edx
  409abc:	mov    eax,ds:0xefd5cbcd
  409ac1:	and    DWORD PTR [esi+0x3e14a2eb],esp
  409ac7:	pop    eax
  409ac8:	pushf  
  409ac9:	arpl   WORD PTR ds:0xf0c6cfc0,sp
  409acf:	ret    
  409ad0:	mov    BYTE PTR [esi-0x5a],ah
  409ad3:	mov    al,ds:0xa245937d
  409ad8:	cmp    DWORD PTR [edx+ecx*2+0x2ec0cffb],ebx
  409adf:	push   es
  409ae0:	or     bl,cl
  409ae2:	or     eax,0x11637f8c
  409ae7:	call   0xcf1d:0x30ea959c
  409aee:	mov    es,WORD PTR [edx+0xa1c7ba1]
  409af4:	push   0xffffff9c
  409af6:	push   edx
  409af8:	jns    0x409a85
  409afa:	mov    esp,esi
  409afc:	pop    ecx
  409afd:	les    ebx,FWORD PTR [edi]
  409aff:	sbb    DWORD PTR [ecx+0x7005a671],edx
  409b05:	stos   BYTE PTR es:[edi],al
  409b06:	test   BYTE PTR [ecx+0x190f75b8],dl
  409b0c:	mov    eax,ds:0x494ec1fe
  409b11:	mov    dh,ah
  409b13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b14:	mov    ebx,0xd844146a
  409b19:	pop    edx
  409b1a:	mov    ecx,0x6c0f404e
  409b1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b20:	adc    DWORD PTR [ebx+0x7b],ebp
  409b23:	fst    QWORD PTR [ecx-0x6223464c]
  409b29:	retfw  0x82ec
  409b2d:	mov    eax,0xd333832d
  409b32:	rol    DWORD PTR [esi-0x197ef05c],0x2e
  409b39:	fidivr WORD PTR [esi-0x2c]
  409b3c:	pusha  
  409b3d:	add    BYTE PTR [eax+0x1],cl
  409b40:	push   ebx
  409b41:	(bad)  
  409b42:	pop    ss
  409b43:	jle    0x409b9f
  409b45:	(bad)  
  409b46:	imul   esi,eax,0x9598d541
  409b4c:	or     ah,bh
  409b4e:	push   esp
  409b4f:	mov    bl,0xb8
  409b51:	punpcklwd mm1,mm1
  409b54:	ficomp DWORD PTR [esi+edi*1+0x47]
  409b58:	or     al,0x71
  409b5a:	(bad)  
  409b5b:	mov    WORD PTR [ecx],?
  409b5d:	xchg   esp,eax
  409b5e:	pop    esi
  409b5f:	mov    al,ds:0x1e485971
  409b64:	(bad)  
  409b65:	cmc    
  409b66:	loop   0x409b6a
  409b68:	scas   eax,DWORD PTR es:[edi]
  409b69:	test   BYTE PTR [ebp-0x24cdf2db],bh
  409b6f:	cmp    BYTE PTR [edi+0x17],cl
  409b72:	push   edi
  409b73:	sahf   
  409b74:	std    
  409b75:	in     al,dx
  409b76:	push   esp
  409b77:	fdivr  QWORD PTR [eax-0x1ec35421]
  409b7d:	es push edi
  409b7f:	mov    eax,ds:0x2f3188ee
  409b84:	mov    edx,0x44fc51e3
  409b89:	(bad)  
  409b8a:	fbld   TBYTE PTR [edi-0x2]
  409b8d:	int3   
  409b8e:	mov    bh,0x8e
  409b90:	out    0x17,al
  409b92:	mov    dh,0x4e
  409b94:	or     ah,BYTE PTR [esi+0x7475cc90]
  409b9a:	sahf   
  409b9b:	leave  
  409b9c:	fs scas al,BYTE PTR es:[edi]
  409b9e:	mov    bl,0xa1
  409ba0:	cmp    BYTE PTR [esi-0x5b6a74e2],dl
  409ba6:	pop    ecx
  409ba7:	das    
  409ba8:	(bad)  
  409baa:	and    eax,0x775a7a8e
  409baf:	repz and DWORD PTR [ecx-0x6e],edi
  409bb3:	mov    dh,0x5c
  409bb5:	imul   ebx,ecx,0x62
  409bb8:	sub    ebp,DWORD PTR [eax+0x4148d0a8]
  409bbe:	call   0x9ef91da0
  409bc3:	in     eax,0x13
  409bc5:	jnp    0x409c0d
  409bc7:	or     dl,al
  409bc9:	test   BYTE PTR [esi-0x19629687],ch
  409bcf:	cli    
  409bd0:	xchg   ecx,edi
  409bd2:	pop    esi
  409bd3:	mov    al,0x57
  409bd5:	stos   DWORD PTR es:[edi],eax
  409bd6:	jnp    0x409b8c
  409bd8:	add    DWORD PTR [ebp-0x6d],0x56885b43
  409bdf:	std    
  409be0:	mov    ebx,0x32b29776
  409be5:	xlat   BYTE PTR ds:[ebx]
  409be6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409be7:	shl    BYTE PTR [ecx+0x29],cl
  409bea:	jmp    0x6b0b:0x85a231d1
  409bf1:	loop   0x409c02
  409bf3:	xchg   DWORD PTR [eax+0x79],ebx
  409bf6:	ds pop ds
  409bf8:	ins    DWORD PTR es:[edi],dx
  409bf9:	cmp    al,0xbc
  409bfb:	mov    bl,0xf3
  409bfd:	mov    dl,0x19
  409bff:	sub    BYTE PTR [ebx+0x44],dl
  409c02:	hlt    
  409c03:	xchg   ebx,eax
  409c04:	fstp   TBYTE PTR [esi+ebp*1+0x65194247]
  409c0b:	pop    edi
  409c0c:	cdq    
  409c0d:	dec    eax
  409c0e:	xchg   edi,eax
  409c0f:	loopne 0x409bea
  409c11:	xchg   esp,eax
  409c12:	and    DWORD PTR [ebx],edx
  409c14:	fnstsw WORD PTR [ebx-0x40]
  409c17:	xchg   ebx,eax
  409c18:	xchg   edi,eax
  409c19:	xor    eax,0xf90e3753
  409c1e:	dec    eax
  409c1f:	mov    al,ds:0x53241229
  409c24:	fisttp DWORD PTR [eax-0xf]
  409c27:	inc    eax
  409c28:	push   ecx
  409c29:	in     eax,dx
  409c2a:	inc    edx
  409c2b:	adc    ecx,DWORD PTR [ebp-0x68]
  409c2e:	fiadd  DWORD PTR [ecx]
  409c30:	xor    DWORD PTR [ecx+0x7b],0xffffffae
  409c34:	out    0x7e,eax
  409c36:	cwde   
  409c37:	add    ah,cl
  409c39:	inc    ebp
  409c3a:	mov    dl,0xcd
  409c3c:	hlt    
  409c3d:	das    
  409c3e:	outs   dx,DWORD PTR ds:[esi]
  409c3f:	mov    al,0xe
  409c41:	mov    ah,0x95
  409c43:	and    DWORD PTR [ecx],edx
  409c45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c46:	cmp    eax,0xf89926ca
  409c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c4c:	je     0x409c15
  409c4e:	sbb    esp,DWORD PTR [ebx]
  409c50:	xchg   ecx,eax
  409c51:	or     DWORD PTR [edi-0x7eba87dd],ebp
  409c57:	test   DWORD PTR [edi+0x54],ebx
  409c5a:	mov    ds:0x24d80f90,al
  409c5f:	inc    esp
  409c60:	mov    bh,0x21
  409c62:	test   eax,0xd1a40bfa
  409c67:	lods   al,BYTE PTR ds:[esi]
  409c68:	mov    cl,0x4a
  409c6a:	dec    edx
  409c6b:	mov    eax,ebx
  409c6d:	ret    
  409c6e:	jmp    0x409c90
  409c70:	shl    BYTE PTR [edx-0x68],cl
  409c73:	std    
  409c74:	xor    ecx,DWORD PTR [ebp+eiz*1-0x6cf610c8]
  409c7b:	out    0x92,al
  409c7d:	fdivrp st(3),st
  409c7f:	cdq    
  409c80:	cmp    DWORD PTR [edx+0x32f04fef],edx
  409c86:	adc    al,0x4c
  409c88:	aas    
  409c89:	jnp    0x409cbb
  409c8b:	inc    esp
  409c8c:	sbb    DWORD PTR [esi+eax*4+0xa],esi
  409c90:	dec    esi
  409c91:	pop    ecx
  409c92:	ja     0x409cda
  409c94:	pushf  
  409c95:	push   es
  409c96:	sbb    BYTE PTR [edi-0x74952ad],al
  409c9c:	push   0xd4f80da5
  409ca1:	jmp    DWORD PTR [ebx-0x3aa8e8d6]
  409ca7:	jge    0x409cdb
  409ca9:	push   eax
  409caa:	add    al,BYTE PTR [eax]
  409cac:	mov    esp,0xacf21aa4
  409cb1:	fsubr  st,st(0)
  409cb3:	mov    ch,0x79
  409cb5:	mov    ah,0xd5
  409cb7:	inc    esi
  409cb8:	std    
  409cb9:	js     0x409d28
  409cbb:	dec    ecx
  409cbc:	jne    0x409c8e
  409cbe:	pop    ecx
  409cbf:	add    eax,0xcbe1cc69
  409cc4:	iret   
  409cc5:	push   edx
  409cc6:	sub    DWORD PTR [edi],esp
  409cc8:	les    esi,FWORD PTR [esi-0x1b178eac]
  409cce:	mov    bl,0xbc
  409cd0:	xor    eax,0xf9eb833e
  409cd5:	cmp    DWORD PTR [ebx],esp
  409cd7:	mov    al,0xf4
  409cd9:	pop    edx
  409cda:	das    
  409cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409cdc:	repnz out dx,al
  409cde:	in     al,0x11
  409ce0:	jl     0x409d31
  409ce2:	in     al,0x80
  409ce4:	mov    ebx,0xa3caf824
  409ce9:	adc    bl,BYTE PTR [edi]
  409ceb:	outs   dx,BYTE PTR ds:[esi]
  409cec:	scas   al,BYTE PTR es:[edi]
  409ced:	add    al,0x75
  409cef:	or     al,BYTE PTR [ebx+0x4f445fff]
  409cf5:	inc    esp
  409cf6:	(bad)  
  409cf7:	or     eax,0x8e8c03eb
  409cfc:	xchg   ebx,eax
  409cfd:	mov    ds:0xa8752f2,al
  409d02:	mov    eax,0xb3883f69
  409d07:	aas    
  409d08:	mov    ecx,0x41b895c0
  409d0d:	pop    edx
  409d0e:	ret    
  409d0f:	jmp    0xb9d45d3c
  409d14:	je     0x409cae
  409d16:	sti    
  409d17:	and    BYTE PTR [ecx],dl
  409d19:	ret    
  409d1a:	mov    ecx,0x88df047
  409d1f:	int3   
  409d20:	and    cl,cl
  409d22:	fldenv [eax]
  409d24:	clc    
  409d25:	cs scas al,BYTE PTR es:[edi]
  409d27:	dec    ecx
  409d28:	adc    edi,DWORD PTR [esi-0x5e]
  409d2b:	sub    bh,BYTE PTR [ebx-0x24]
  409d2e:	shl    BYTE PTR [esi],1
  409d30:	bound  ebp,QWORD PTR [ebp-0x7d2e9113]
  409d36:	test   BYTE PTR [eax],0xbb
  409d39:	lods   al,BYTE PTR ds:[esi]
  409d3a:	cmp    eax,0xc05bd2e7
  409d3f:	push   ebx
  409d40:	mov    al,0xb
  409d42:	inc    edi
  409d43:	std    
  409d44:	loope  0x409d4f
  409d46:	sub    al,0x1b
  409d48:	shl    BYTE PTR [esi+ebx*1],1
  409d4b:	push   es
  409d4c:	cdq    
  409d4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d4e:	push   ds
  409d4f:	push   edx
  409d50:	inc    esp
  409d51:	inc    ecx
  409d52:	xchg   edi,eax
  409d53:	add    eax,0x69598adc
  409d58:	ins    DWORD PTR es:[edi],dx
  409d59:	dec    esp
  409d5a:	sar    BYTE PTR [esi+0x2d194ca3],0x0
  409d61:	jp     0x409cea
  409d63:	test   DWORD PTR [edi],0x2da5fea2
  409d69:	pushf  
  409d6a:	test   al,0xe6
  409d6c:	stc    
  409d6d:	cwde   
  409d6e:	add    al,0xa2
  409d70:	pusha  
  409d71:	or     al,0xe
  409d73:	mov    edx,DWORD PTR [edi-0x40a6c5f1]
  409d79:	(bad)  
  409d7b:	inc    eax
  409d7c:	mov    cl,0x2c
  409d7e:	sbb    DWORD PTR [ebp-0x47],0x3dc147e7
  409d85:	cmp    BYTE PTR [ebx+0x1712d76d],dl
  409d8b:	std    
  409d8c:	cwde   
  409d8d:	ins    BYTE PTR es:[edi],dx
  409d8e:	scas   eax,DWORD PTR es:[edi]
  409d8f:	sub    DWORD PTR [edi+0x206e5f96],esp
  409d95:	adc    al,0xb6
  409d97:	sbb    ax,0x30a4
  409d9b:	ficomp DWORD PTR [ebp+0x69]
  409d9e:	stos   DWORD PTR es:[edi],eax
  409d9f:	jo     0x409d3f
  409da1:	loopne 0x409e14
  409da3:	jne    0x409de0
  409da5:	mov    dh,0xff
  409da7:	out    0x4a,al
  409da9:	iret   
  409daa:	dec    BYTE PTR [esi+0x70]
  409dad:	jp     0x409d94
  409daf:	sbb    bl,BYTE PTR [eax-0x6c]
  409db2:	push   cs
  409db3:	push   ebx
  409db4:	dec    edx
  409db5:	mov    edx,0x9a9ad9d1
  409dba:	repnz mov ecx,0x2ee1d17b
  409dc0:	and    DWORD PTR [ebp-0x5f11990f],edx
  409dc6:	mov    eax,ds:0xc6d0b2ad
  409dcb:	hlt    
  409dcc:	in     al,dx
  409dcd:	addr16 mov eax,ds:0x39e2
  409dd1:	test   eax,0x96da1715
  409dd6:	stc    
  409dd7:	jecxz  0x409e51
  409dd9:	mov    esp,0x95951a28
  409dde:	pop    edi
  409ddf:	mov    ds:0xdbc09771,eax
  409de4:	sub    dl,dl
  409de6:	mov    eax,0x73251684
  409deb:	jg     0x409e45
  409ded:	xchg   ebp,eax
  409dee:	pop    edi
  409def:	cmp    esp,DWORD PTR [eax+edx*8]
  409df2:	outs   dx,DWORD PTR ds:[esi]
  409df3:	xor    cl,BYTE PTR [ecx-0x1163342d]
  409df9:	les    ecx,FWORD PTR [edx+esi*8-0x2c]
  409dfd:	add    DWORD PTR [ebx-0x5c],ebp
  409e00:	fisubr DWORD PTR [ebx-0x36]
  409e03:	xchg   esp,eax
  409e04:	mov    BYTE PTR [ebx+0x42b7e738],ch
  409e0a:	pop    ss
  409e0b:	dec    ecx
  409e0c:	retf   
  409e0d:	sbb    eax,esp
  409e0f:	scas   eax,DWORD PTR es:[edi]
  409e10:	adc    al,0xe8
  409e12:	inc    edx
  409e13:	loop   0x409dc3
  409e15:	(bad)  
  409e16:	jg     0x409e36
  409e18:	sar    ecx,cl
  409e1a:	jge    0x409dbb
  409e1c:	out    dx,al
  409e1d:	push   eax
  409e1e:	je     0x409e3c
  409e20:	daa    
  409e21:	add    BYTE PTR [ebx],0x7e
  409e24:	sub    edi,esp
  409e26:	sub    BYTE PTR es:[ecx],0x9b
  409e2a:	mov    ch,0xa3
  409e2c:	xchg   BYTE PTR [edx+eax*4-0x8],dh
  409e30:	adc    BYTE PTR [ebx-0x3e],cl
  409e33:	push   0x1fba56e3
  409e38:	aad    0x6f
  409e3a:	xor    al,BYTE PTR [esi]
  409e3c:	and    al,0x66
  409e3e:	(bad)  
  409e3f:	jns    0x409e4b
  409e41:	mov    al,0xa6
  409e43:	std    
  409e44:	daa    
  409e45:	mov    eax,gs
  409e47:	push   edi
  409e48:	scas   al,BYTE PTR es:[edi]
  409e49:	pop    es
  409e4a:	adc    eax,0xb13c138b
  409e4f:	shr    edx,0xe
  409e52:	test   dl,0x24
  409e55:	mov    cl,0x45
  409e57:	mov    dl,0x58
  409e59:	scas   al,BYTE PTR es:[edi]
  409e5a:	out    dx,eax
  409e5b:	addr16 pushf 
  409e5d:	inc    esp
  409e5e:	pop    esp
  409e5f:	pop    ecx
  409e60:	pop    ecx
  409e61:	jp     0x409e5b
  409e63:	cmp    BYTE PTR [esi],0xf2
  409e66:	repnz push ebx
  409e68:	pop    ss
  409e69:	sub    al,0xc7
  409e6b:	push   cs
  409e6c:	ins    DWORD PTR es:[edi],dx
  409e6d:	imul   edi,edi,0xa3bc0fd8
  409e73:	lahf   
  409e74:	ins    BYTE PTR es:[edi],dx
  409e75:	xor    ch,BYTE PTR [ecx-0x3b]
  409e78:	or     ebx,0xc638dc0e
  409e7e:	dec    ecx
  409e7f:	mov    ch,BYTE PTR [eax+0x7d]
  409e82:	stos   BYTE PTR es:[edi],al
  409e83:	jae    0x409e24
  409e85:	or     BYTE PTR [esi-0x5df40674],bh
  409e8b:	cmp    ah,BYTE PTR [ecx]
  409e8d:	jmp    0x409eaa
  409e8f:	or     dh,ah
  409e91:	mov    bl,0x7a
  409e93:	out    dx,al
  409e94:	stos   BYTE PTR es:[edi],al
  409e95:	and    eax,0xf715a000
  409e9a:	add    BYTE PTR [ebp+0x74],dl
  409e9d:	mov    al,ds:0xff13101a
  409ea2:	xchg   DWORD PTR [ecx-0xa],edx
  409ea5:	data16 mov bl,0x38
  409ea8:	(bad)  
  409ea9:	cmp    ecx,ebp
  409eab:	repz rcl BYTE PTR [ecx+0x317373b7],cl
  409eb2:	leave  
  409eb3:	mov    ds:0xf26bdb50,al
  409eb8:	add    ecx,DWORD PTR [eax+0x48957fbd]
  409ebe:	pop    ebp
  409ebf:	stc    
  409ec0:	push   ss
  409ec1:	sub    DWORD PTR [eax+0x78284923],ebp
  409ec7:	cmc    
  409ec8:	(bad)  
  409ec9:	call   0x34945398
  409ece:	mov    eax,0xdbe644fd
  409ed3:	dec    ebp
  409ed4:	bt     DWORD PTR [esi-0x4f],ebx
  409ed8:	imul   edx,DWORD PTR [esi+0x4e],0xffffffad
  409edc:	aaa    
  409edd:	mov    dl,0x6a
  409edf:	popf   
  409ee0:	std    
  409ee1:	sbb    edx,0xd9b90b80
  409ee7:	sub    eax,0xec1312d8
  409eec:	shl    DWORD PTR [ebx+0x571eadb8],1
  409ef2:	fisubr WORD PTR [ecx+0x4a2a3d28]
  409ef8:	jne    0x409ec7
  409efa:	gs inc esp
  409efc:	mov    BYTE PTR ds:0xf0f08e62,dh
  409f02:	sub    ebx,0x2f
  409f05:	jo     0x409f4c
  409f07:	jg     0x409efd
  409f09:	inc    eax
  409f0a:	mov    eax,ds:0x23e4429f
  409f0f:	and    DWORD PTR [ebx],ecx
  409f11:	mov    ch,0x1d
  409f13:	push   ss
  409f14:	(bad)  
  409f16:	adc    DWORD PTR [ecx],0xb4c9da45
  409f1c:	pop    es
  409f1d:	pusha  
  409f1e:	xor    al,0x94
  409f20:	retf   
  409f21:	lahf   
  409f22:	arpl   WORD PTR [esi+0x76],sp
  409f25:	pop    eax
  409f26:	gs lahf 
  409f28:	fdiv   QWORD PTR [edx+0x1e250594]
  409f2e:	sahf   
  409f2f:	inc    BYTE PTR [edi+ebp*4+0x7175ece7]
  409f36:	jg     0x409ec6
  409f38:	popf   
  409f39:	daa    
  409f3a:	call   0x8bef:0x4b5f117b
  409f41:	daa    
  409f42:	ja     0x409f7e
  409f44:	in     eax,dx
  409f45:	jmp    0x409f10
  409f47:	xchg   edi,eax
  409f48:	retf   0x3327
  409f4b:	out    dx,eax
  409f4c:	sub    eax,0x79c8d680
  409f51:	sbb    edx,DWORD PTR [ebx-0x7f]
  409f54:	pop    ds
  409f55:	sbb    edi,DWORD PTR gs:[ebx-0x3b]
  409f59:	mov    ebx,0x875047cf
  409f5e:	lods   eax,DWORD PTR ds:[esi]
  409f5f:	dec    esp
  409f60:	adc    cl,BYTE PTR [edi]
  409f62:	mov    ecx,0x8fb1ece4
  409f67:	lock dec di
  409f6a:	shr    BYTE PTR [edi-0x52fe35b5],0x6
  409f71:	mov    edi,0xbbdcf326
  409f76:	pop    esp
  409f77:	add    bh,bh
  409f79:	rol    dh,cl
  409f7b:	jl     0x409f0d
  409f7d:	(bad)  
  409f7e:	aas    
  409f7f:	pop    eax
  409f80:	dec    eax
  409f81:	xchg   ecx,eax
  409f82:	adc    BYTE PTR [ebp-0x72],dl
  409f85:	add    ah,ah
  409f87:	xor    eax,ebp
  409f89:	sar    DWORD PTR [ecx-0x13],0xd
  409f8d:	push   ebx
  409f8e:	xchg   ebx,eax
  409f8f:	mov    eax,ds:0x41805460
  409f94:	and    DWORD PTR [ebp-0x7b],esi
  409f97:	mov    ds:0xaf0ea8db,al
  409f9c:	inc    ebp
  409f9d:	retf   
  409f9e:	pop    edi
  409f9f:	lea    ecx,[eax-0x11]
  409fa2:	jne    0x409f35
  409fa4:	retf   0x3c09
  409fa7:	ret    0xb3d7
  409faa:	jecxz  0x40a028
  409fac:	dec    ebp
  409fad:	lods   al,BYTE PTR ds:[si]
  409faf:	daa    
  409fb0:	push   ecx
  409fb1:	mov    dl,BYTE PTR [edx+eax*8]
  409fb4:	leave  
  409fb5:	dec    ebp
  409fb6:	scas   eax,DWORD PTR es:[edi]
  409fb7:	je     0x409fb1
  409fb9:	push   0xbe4cf6a3
  409fbe:	pusha  
  409fbf:	gs mov edi,ecx
  409fc2:	in     eax,dx
  409fc3:	adc    ebp,esi
  409fc5:	fcom   DWORD PTR [esi-0x71]
  409fc8:	sub    ebp,DWORD PTR [ebp+0x42e36724]
  409fce:	inc    eax
  409fcf:	dec    eax
  409fd0:	dec    eax
  409fd1:	dec    esp
  409fd2:	test   BYTE PTR [ebp+0x1e],al
  409fd5:	clc    
  409fd6:	stos   DWORD PTR es:[edi],eax
  409fd7:	xor    bh,bh
  409fd9:	stc    
  409fda:	adc    al,0x1b
  409fdc:	xchg   edx,eax
  409fdd:	scas   eax,DWORD PTR es:[edi]
  409fde:	jmp    0x6e58:0xa179c7c7
  409fe5:	mov    cl,al
  409fe7:	scas   al,BYTE PTR es:[edi]
  409fe8:	and    dh,ch
  409fea:	jb     0x40a063
  409fec:	xor    bh,BYTE PTR [edx+0x5e]
  409fef:	ins    BYTE PTR es:[edi],dx
  409ff0:	in     eax,0x58
  409ff2:	scas   al,BYTE PTR es:[edi]
  409ff3:	jg     0x40a01c
  409ff5:	inc    ebp
  409ff6:	rcr    DWORD PTR [ebx],0x5d
  409ff9:	loope  0x409fb3
  409ffb:	jne    0x409ff5
  409ffd:	add    al,0x39
  409fff:	and    eax,0x1b5948b1
  40a004:	jnp    0x409fe0
  40a006:	(bad)  
  40a007:	fsubr  QWORD PTR [edx+eiz*2-0x6b]
  40a00b:	mov    bh,0xb7
  40a00d:	and    ebx,DWORD PTR [edi]
  40a00f:	or     al,0x5a
  40a011:	sahf   
  40a012:	(bad)  
  40a013:	mov    edx,0xd8931dab
  40a018:	cmp    BYTE PTR [ebp+0x68],al
  40a01b:	and    dh,BYTE PTR [esp+ebx*1]
  40a01e:	jae    0x409fa4
  40a020:	push   ebx
  40a021:	inc    esi
  40a022:	push   ss
  40a023:	push   esi
  40a024:	mov    eax,DWORD PTR [esi+ebp*1-0x4a]
  40a028:	xchg   ebx,eax
  40a029:	inc    esp
  40a02a:	test   BYTE PTR [edx+0x1b1d9d50],cl
  40a030:	std    
  40a031:	inc    ebx
  40a032:	push   edi
  40a033:	test   eax,0xab5ea68c
  40a038:	(bad)  
  40a039:	loopne 0x40a095
  40a03b:	stc    
  40a03c:	fstp   QWORD PTR [edx-0x23]
  40a03f:	add    cl,BYTE PTR [edx+0x2c]
  40a042:	mov    bl,0x7f
  40a044:	jo     0x40a0b9
  40a046:	int    0xe5
  40a048:	ss pop ecx
  40a04a:	xchg   esp,eax
  40a04b:	and    bl,BYTE PTR [ebx+0x178416a9]
  40a051:	pop    ecx
  40a052:	jmp    0x298e:0xbf8e326c
  40a059:	mov    esi,0xac886499
  40a05e:	jmp    0xee21:0x7d759eab
  40a065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a066:	push   0x74
  40a068:	shl    DWORD PTR [esi+0x21],cl
  40a06b:	push   es
  40a06c:	cmc    
  40a06d:	shr    esi,cl
  40a06f:	repz fsubr DWORD PTR [esi+edi*2+0x70]
  40a074:	push   edi
  40a075:	adc    dh,BYTE PTR [edi+0x3d]
  40a078:	ins    DWORD PTR es:[di],dx
  40a07a:	dec    esp
  40a07b:	cmp    eax,0x29b56781
  40a080:	add    al,0xdb
  40a082:	popf   
  40a083:	in     al,dx
  40a084:	sub    edi,DWORD PTR [ebx]
  40a086:	aaa    
  40a087:	jbe    0x40a0f0
  40a089:	sub    eax,0xe3c33afe
  40a08e:	sub    ch,BYTE PTR [edx]
  40a090:	xor    eax,0xbabe25f
  40a095:	mov    al,ds:0x22673ab6
  40a09a:	das    
  40a09b:	pop    edi
  40a09c:	mov    ds:0x426dfb73,al
  40a0a1:	mov    BYTE PTR [esi+edx*8],cl
  40a0a4:	test   DWORD PTR [edx],edi
  40a0a6:	mov    eax,0xe1e5f0a4
  40a0ab:	int3   
  40a0ac:	adc    DWORD PTR [esi+0x45],ebx
  40a0af:	out    0x3e,eax
  40a0b1:	(bad)  
  40a0b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0b4:	bnd ja 0x40a0d4
  40a0b7:	inc    esp
  40a0b8:	jns    0x40a104
  40a0ba:	and    BYTE PTR [edi],0x42
  40a0bd:	into   
  40a0be:	retf   
  40a0bf:	pop    DWORD PTR [ecx+0x66]
  40a0c2:	push   esi
  40a0c3:	xchg   ebp,eax
  40a0c4:	and    eax,DWORD PTR [edi+ecx*2+0x62efea36]
  40a0cb:	and    al,0x74
  40a0cd:	or     ah,BYTE PTR [ecx-0x14165c8f]
  40a0d3:	cmp    al,0xb
  40a0d5:	in     eax,0xdf
  40a0d7:	or     ebx,DWORD PTR [ebx]
  40a0d9:	inc    eax
  40a0da:	out    0xd6,eax
  40a0dc:	jl     0x40a0ad
  40a0de:	scas   eax,DWORD PTR es:[edi]
  40a0df:	xchg   esi,eax
  40a0e0:	xchg   ecx,eax
  40a0e1:	mov    edi,0x6a2e4b05
  40a0e6:	mov    edx,0xdb2495b9
  40a0eb:	pop    eax
  40a0ec:	mov    eax,0xd6c87d47
  40a0f1:	neg    ecx
  40a0f3:	shl    DWORD PTR [edx+ebx*8+0x11620913],cl
  40a0fa:	clc    
  40a0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a0fc:	mov    esp,0xfbdd8284
  40a101:	mov    ds:0xe334e8a,al
  40a106:	cmp    edi,DWORD PTR [ecx]
  40a108:	mov    ecx,0x8cfaf6ff
  40a10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a10e:	test   DWORD PTR [ebp-0x25],ebx
  40a111:	jmp    0x40a111
  40a113:	jg     0x40a16c
  40a115:	retf   
  40a116:	dec    BYTE PTR [edi-0x380f11d6]
  40a11c:	fs test al,0x44
  40a11f:	jmp    0x109c2992
  40a124:	sub    eax,0x5172f317
  40a129:	ret    0x1181
  40a12c:	add    DWORD PTR [ebx+0x7265f891],0x88db2ba9
  40a136:	mov    esi,0x7bd6ff86
  40a13b:	sub    ebx,ebp
  40a13d:	jbe    0x40a115
  40a13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a140:	fnstcw WORD PTR [eax+0x327b15a2]
  40a146:	int3   
  40a147:	pop    es
  40a148:	js     0x40a167
  40a14a:	and    BYTE PTR [edx],ch
  40a14c:	stos   BYTE PTR es:[edi],al
  40a14d:	sbb    eax,0xf94d3feb
  40a152:	push   eax
  40a153:	jg     0x40a143
  40a155:	jmp    0xe2d:0x1e545d67
  40a15c:	or     al,0x45
  40a15e:	inc    eax
  40a15f:	lahf   
  40a160:	sub    DWORD PTR [eax],0x3e
  40a163:	sub    cl,BYTE PTR [ecx]
  40a165:	loopne 0x40a192
  40a167:	(bad)  
  40a169:	loopne 0x40a1a4
  40a16b:	xor    DWORD PTR [edx],edi
  40a16d:	xchg   ebx,eax
  40a16e:	xor    BYTE PTR [ecx],cl
  40a170:	je     0x40a13c
  40a172:	jne    0x40a109
  40a174:	loop   0x40a174
  40a176:	cld    
  40a177:	es jo  0x40a170
  40a17a:	adc    eax,0xdb380ebc
  40a17f:	test   BYTE PTR [edx],ah
  40a181:	push   0x224ca2a9
  40a186:	mov    DWORD PTR [eax+0x63827f48],edi
  40a18c:	jae    0x40a154
  40a18e:	inc    esi
  40a18f:	leave  
  40a190:	sub    BYTE PTR [ecx+0x6e],dl
  40a193:	enter  0xf965,0x74
  40a197:	aaa    
  40a198:	rcr    ebp,0x40
  40a19b:	jp     0x40a202
  40a19d:	and    al,0x1d
  40a19f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1a0:	or     dh,BYTE PTR [edx+ebp*8]
  40a1a3:	and    bh,dl
  40a1a5:	inc    ecx
  40a1a6:	push   ebp
  40a1a7:	sub    ch,BYTE PTR [edi-0x37]
  40a1aa:	sbb    dl,BYTE PTR [esi]
  40a1ac:	scas   al,BYTE PTR es:[edi]
  40a1ad:	scas   eax,DWORD PTR es:[edi]
  40a1ae:	sahf   
  40a1af:	jp     0x40a1e0
  40a1b1:	(bad)
  40a1b5:	imul   ebp,DWORD PTR cs:[ecx+0x38cb8322],0x2539f20f
  40a1c0:	and    al,0xab
  40a1c2:	mov    al,BYTE PTR [ebx+0x3b147f8d]
  40a1c8:	retf   
  40a1c9:	stos   BYTE PTR es:[edi],al
  40a1ca:	mov    ah,bh
  40a1cc:	lahf   
  40a1cd:	mov    bl,0x8a
  40a1cf:	jp     0x40a248
  40a1d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a1d2:	out    0x39,eax
  40a1d4:	test   DWORD PTR [eax],ebx
  40a1d6:	mov    dl,0x66
  40a1d8:	mov    ecx,0x23d20ff9
  40a1dd:	test   ecx,ecx
  40a1df:	push   ss
  40a1e0:	sbb    DWORD PTR [ebp+eiz*1+0x7e],ecx
  40a1e4:	xor    dl,BYTE PTR [esi]
  40a1e6:	jmp    0x2be996f5
  40a1eb:	cdq    
  40a1ec:	rol    DWORD PTR [ecx-0x5f7ef815],cl
  40a1f2:	aaa    
  40a1f3:	dec    esp
  40a1f4:	dec    esp
  40a1f5:	leave  
  40a1f6:	add    ecx,DWORD PTR [edx+0x4abb45ca]
  40a1fc:	xchg   esi,eax
  40a1fd:	cdq    
  40a1fe:	push   ebx
  40a1ff:	int    0xc0
  40a201:	pop    esi
  40a202:	mov    WORD PTR [edx+esi*1-0x45eb64eb],ds
  40a209:	jmp    0x2616:0xe1af8c90
  40a210:	iret   
  40a211:	push   edi
  40a212:	inc    eax
  40a213:	sbb    esp,DWORD PTR [ecx-0x355d03cf]
  40a219:	popf   
  40a21a:	mov    bh,0x7e
  40a21c:	pop    esi
  40a21d:	sahf   
  40a21e:	sbb    eax,0xe767faef
  40a223:	outs   dx,BYTE PTR ds:[esi]
  40a224:	lock mov dl,0xab
  40a227:	ret    0x90ce
  40a22a:	jecxz  0x40a1ce
  40a22c:	push   ebx
  40a22e:	xchg   ebp,eax
  40a22f:	rcl    BYTE PTR [eax+0x786ef4c8],0x6c
  40a236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a237:	pop    ebx
  40a238:	or     BYTE PTR [edx],0x2d
  40a23b:	mov    dl,0x2c
  40a23d:	in     al,0x5
  40a23f:	or     bl,BYTE PTR [edi-0x2202c57f]
  40a245:	scas   eax,DWORD PTR es:[edi]
  40a246:	loopne 0x40a2a7
  40a248:	push   0x49a2a36f
  40a24d:	dec    edx
  40a24e:	mov    ds:0x3dcd8d97,eax
  40a253:	add    DWORD PTR [eax+0x12],ecx
  40a256:	and    eax,0xf8c91c
  40a25b:	push   ebp
  40a25c:	add    eax,0x93daa41
  40a261:	int3   
  40a262:	xchg   edi,eax
  40a263:	xor    dh,ah
  40a265:	loop   0x40a25f
  40a267:	cs push ebx
  40a269:	scas   eax,DWORD PTR es:[edi]
  40a26a:	retf   
  40a26b:	dec    edi
  40a26c:	adc    ecx,DWORD PTR [edi+0x23fd3585]
  40a272:	pushf  
  40a273:	or     al,0x5
  40a275:	and    ah,BYTE PTR [edx]
  40a277:	or     eax,0xa3853231
  40a27c:	jns    0x40a2d5
  40a27e:	retf   
  40a27f:	jecxz  0x40a2e8
  40a281:	stos   DWORD PTR es:[edi],eax
  40a282:	ret    0xbcd5
  40a285:	aas    
  40a286:	icebp  
  40a287:	mov    DWORD PTR [esp+esi*2+0x7c],edx
  40a28b:	ret    
  40a28c:	push   0xffffffae
  40a28e:	dec    ebx
  40a28f:	retf   0x73e0
  40a292:	stc    
  40a293:	mov    eax,DWORD PTR [ecx-0x4f]
  40a296:	mov    eax,ds:0xc8101748
  40a29b:	test   al,0x3a
  40a29d:	mul    BYTE PTR [esi]
  40a29f:	add    eax,0xea770de2
  40a2a4:	cs dec esi
  40a2a6:	dec    eax
  40a2a7:	and    edi,DWORD PTR [esi-0x3c]
  40a2aa:	pop    ecx
  40a2ab:	mov    eax,0x88c80f88
  40a2b0:	mov    ecx,0x64a58716
  40a2b5:	mov    ds:0xa1143c3a,al
  40a2ba:	xchg   dl,bl
  40a2bc:	push   ebp
  40a2bd:	jae    0x40a24d
  40a2bf:	clc    
  40a2c0:	cmp    ebx,DWORD PTR [esi-0xb050bb8]
  40a2c6:	xchg   esp,eax
  40a2c7:	push   cs
  40a2c8:	adc    DWORD PTR [ecx],ecx
  40a2ca:	js     0x40a295
  40a2cc:	mov    bl,0xf
  40a2ce:	les    eax,FWORD PTR [esi+0x1f0d0952]
  40a2d4:	ds push ss
  40a2d6:	push   edx
  40a2d7:	inc    esp
  40a2d8:	mov    ds:0x73bf612,eax
  40a2dd:	js     0x40a300
  40a2df:	jnp    0x40a337
  40a2e1:	pop    es
  40a2e2:	data16 (bad) 
  40a2e4:	mov    ebp,0xb5bfca18
  40a2e9:	cmp    ah,ah
  40a2eb:	clc    
  40a2ec:	sub    eax,ebx
  40a2ee:	mov    ebp,0x8a266530
  40a2f3:	mov    BYTE PTR [edx],ch
  40a2f5:	mov    ebx,0x9dd0b546
  40a2fa:	xchg   DWORD PTR [ebx+0x7a],esi
  40a2fd:	lahf   
  40a2fe:	mov    dh,0x55
  40a300:	push   edx
  40a301:	xchg   bh,cl
  40a303:	xchg   ecx,eax
  40a304:	push   0xfffffff9
  40a306:	fsubr  QWORD PTR ds:0xc15caad3
  40a30c:	xor    esi,ecx
  40a30e:	js     0x40a329
  40a310:	cld    
  40a311:	jb     0x40a2df
  40a313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a314:	mov    esi,0x5558729c
  40a319:	das    
  40a31a:	cmp    BYTE PTR [ebx-0x33],0x1d
  40a31e:	xchg   bl,bh
  40a320:	xor    al,0xab
  40a322:	ret    0x6f47
  40a325:	add    DWORD PTR [ebp-0x5c1e9ff2],eax
  40a32b:	dec    esp
  40a32c:	imul   edx,DWORD PTR [eax-0xd16c851],0xcff1122f
  40a336:	add    BYTE PTR [esi+edx*4+0x1],0x90
  40a33b:	fstp   TBYTE PTR [esi+eax*4]
  40a33e:	adc    al,0x5
  40a340:	fldcw  WORD PTR [ebx-0x1a536368]
  40a346:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a347:	in     eax,0x1a
  40a349:	sub    eax,0xd3ffaf29
  40a34e:	pop    ds
  40a34f:	leave  
  40a350:	int    0x92
  40a352:	push   edi
  40a353:	or     ecx,edi
  40a355:	popf   
  40a356:	push   edi
  40a357:	add    al,0x4a
  40a359:	or     dh,dh
  40a35b:	sbb    eax,0x88e28222
  40a360:	sbb    ebx,DWORD PTR [eax+0x6806c2c0]
  40a366:	mov    esp,0x1f6045d4
  40a36b:	mov    ch,0x45
  40a36d:	lahf   
  40a36e:	(bad)  
  40a370:	cmp    eax,0xb4e8b594
  40a375:	leave  
  40a376:	stc    
  40a377:	pop    ds
  40a378:	addr16 aas 
  40a37a:	mov    al,0xe4
  40a37c:	cdq    
  40a37d:	mov    ds:0x4109bc4f,al
  40a382:	jp     0x40a34f
  40a384:	ficom  WORD PTR [ebp-0x30]
  40a387:	inc    edi
  40a388:	ds pop esi
  40a38a:	aas    
  40a38b:	xor    al,0x8f
  40a38d:	xchg   DWORD PTR [ebp+0x40262c89],ecx
  40a393:	lods   al,BYTE PTR ds:[esi]
  40a394:	ins    DWORD PTR es:[edi],dx
  40a395:	push   es
  40a396:	rol    ebp,1
  40a398:	push   0x23a0f579
  40a39d:	leave  
  40a39e:	cmp    ebx,DWORD PTR [edx+0x35]
  40a3a1:	mov    ebp,0xd279ee74
  40a3a6:	push   ds
  40a3a7:	push   ecx
  40a3a8:	dec    eax
  40a3a9:	adc    DWORD PTR [edx-0xc],ecx
  40a3ac:	xchg   ebp,eax
  40a3ad:	lock inc esi
  40a3af:	pop    es
  40a3b0:	inc    esp
  40a3b1:	(bad)  
  40a3b3:	test   DWORD PTR [ecx],0x9d98c68c
  40a3b9:	xor    ecx,DWORD PTR [ebx+0x7f6896c8]
  40a3bf:	mov    edi,DWORD PTR [edx]
  40a3c1:	mov    ebx,DWORD PTR [ebp+0x68300252]
  40a3c7:	push   ss
  40a3c8:	sbb    bl,ah
  40a3ca:	jo     0x40a432
  40a3cc:	rol    cl,1
  40a3ce:	enter  0x8b69,0x69
  40a3d2:	sbb    BYTE PTR [ebx],0x40
  40a3d5:	pop    eax
  40a3d6:	mov    eax,ds:0x9c1c3a54
  40a3db:	ret    
  40a3dc:	fldcw  WORD PTR [esi-0x5bc780a0]
  40a3e2:	jo     0x40a3fe
  40a3e4:	fadd   st,st(6)
  40a3e6:	pushf  
  40a3e7:	inc    ecx
  40a3e8:	xchg   edi,eax
  40a3e9:	test   bl,ah
  40a3eb:	dec    ebp
  40a3ec:	pop    ebp
  40a3ed:	or     edi,edi
  40a3ef:	hlt    
  40a3f0:	stos   DWORD PTR es:[edi],eax
  40a3f1:	jae    0x40a46b
  40a3f3:	sti    
  40a3f4:	ja     0x40a404
  40a3f6:	xchg   esi,eax
  40a3f7:	cmc    
  40a3f8:	push   eax
  40a3f9:	(bad)  
  40a3fb:	sub    al,0xde
  40a3fd:	repz mov cl,0xa7
  40a400:	inc    ebp
  40a401:	cmp    esi,DWORD PTR [ebx+0x8]
  40a404:	push   es
  40a405:	in     eax,dx
  40a406:	test   cl,0xa5
  40a409:	mov    eax,0xb37f8d1e
  40a40e:	mov    dh,0x95
  40a410:	das    
  40a411:	push   ebp
  40a412:	lock jle 0x40a415
  40a415:	pop    ss
  40a416:	clc    
  40a417:	js     0x40a3c9
  40a419:	outs   dx,DWORD PTR ds:[esi]
  40a41a:	ss in  al,dx
  40a41c:	and    ah,BYTE PTR [ecx+0x64]
  40a41f:	xchg   ebx,eax
  40a420:	push   edi
  40a421:	jns    0x40a3c5
  40a423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a424:	xchg   edx,eax
  40a425:	and    DWORD PTR [esi-0x6],edi
  40a428:	add    dl,BYTE PTR [edx-0x3e]
  40a42b:	sbb    ebp,esp
  40a42d:	les    esp,FWORD PTR [ebx-0x71]
  40a430:	push   eax
  40a431:	ror    DWORD PTR [edx-0x6d],cl
  40a434:	dec    esi
  40a435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a436:	adc    bl,BYTE PTR [eax]
  40a438:	stc    
  40a439:	adc    dh,BYTE PTR ds:0x394aa63e
  40a43f:	in     al,0xdc
  40a441:	aam    0xa0
  40a443:	xlat   BYTE PTR ds:[ebx]
  40a444:	pop    DWORD PTR [esi-0x5a00dea9]
  40a44a:	inc    ecx
  40a44b:	push   ebx
  40a44c:	cli    
  40a44d:	jb     0x40a41f
  40a44f:	lods   al,BYTE PTR ds:[esi]
  40a450:	or     al,0xc3
  40a452:	xchg   cl,ch
  40a454:	not    BYTE PTR [esi]
  40a456:	and    BYTE PTR [eax+ebx*2+0x7ab44324],dl
  40a45d:	ret    
  40a45e:	add    DWORD PTR [edi],ebx
  40a460:	scas   eax,DWORD PTR es:[edi]
  40a461:	add    ebx,DWORD PTR [ebp+0x80f5295]
  40a467:	mov    ebp,0xc4089dc2
  40a46c:	xchg   edx,eax
  40a46d:	into   
  40a46e:	sub    al,0x2c
  40a470:	push   edx
  40a471:	adc    eax,0xa7821e12
  40a476:	xor    DWORD PTR [edx-0x48503998],0xe0e7851e
  40a480:	mov    edi,0xcb16d839
  40a485:	sbb    eax,DWORD PTR [ebp+ecx*4+0x646273a0]
  40a48c:	xor    bh,BYTE PTR [esi+eax*1]
  40a48f:	or     bl,dl
  40a491:	inc    edx
  40a492:	xchg   edx,eax
  40a493:	loop   0x40a43e
  40a495:	sub    BYTE PTR [ebp-0x38863ec0],0x1d
  40a49c:	call   0x7d5b2925
  40a4a1:	or     al,0xae
  40a4a3:	xchg   edx,eax
  40a4a4:	xchg   BYTE PTR [ebx],bl
  40a4a6:	add    bh,BYTE PTR [eax+0x3dcfd597]
  40a4ac:	sar    BYTE PTR [ebp-0x39260f01],0x4a
  40a4b3:	mov    cl,0xc7
  40a4b5:	leave  
  40a4b6:	jo     0x40a443
  40a4b8:	xchg   edi,eax
  40a4b9:	in     eax,dx
  40a4ba:	xchg   ecx,eax
  40a4bb:	out    0x56,al
  40a4bd:	jl     0x40a4a6
  40a4bf:	add    edx,DWORD PTR [edx-0x32]
  40a4c2:	ss pop esp
  40a4c4:	out    0xde,al
  40a4c6:	rcr    BYTE PTR [ecx-0x7ac47d00],0x13
  40a4cd:	aam    0x9b
  40a4cf:	push   edx
  40a4d0:	out    dx,al
  40a4d1:	mov    cl,0x12
  40a4d3:	and    al,0xd3
  40a4d5:	popa   
  40a4d6:	cmp    eax,0x5f4a11ba
  40a4db:	or     al,0xb1
  40a4dd:	xchg   edx,eax
  40a4de:	repnz sti 
  40a4e0:	push   ss
  40a4e1:	stos   BYTE PTR es:[edi],al
  40a4e2:	test   eax,0xd6c2b457
  40a4e7:	inc    DWORD PTR [edi+0x40]
  40a4ea:	fisub  DWORD PTR [ecx+0x7b]
  40a4ed:	js     0x40a51a
  40a4ef:	and    BYTE PTR [ebp-0x7b],cl
  40a4f2:	or     ecx,esi
  40a4f4:	retf   
  40a4f5:	pop    ds
  40a4f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4f7:	rcl    BYTE PTR [di+0x9],cl
  40a4fb:	jg     0x40a502
  40a4fd:	(bad)  
  40a4fe:	call   0xce74:0x16bd48a3
  40a505:	jecxz  0x40a574
  40a507:	pop    edi
  40a508:	retf   
  40a509:	mov    edx,0xdbb2a54b
  40a50e:	jmp    0x4cc:0xfee2a7b9
  40a515:	leave  
  40a516:	add    eax,DWORD PTR [eax+0x37af4fc9]
  40a51c:	mov    DWORD PTR [ecx-0x27],ebp
  40a51f:	(bad)  
  40a520:	mov    ah,0x92
  40a522:	outs   dx,BYTE PTR ds:[esi]
  40a523:	or     edx,DWORD PTR [ebx]
  40a525:	lods   eax,DWORD PTR ds:[esi]
  40a526:	out    0xd6,eax
  40a528:	adc    bl,ch
  40a52a:	repnz int3 
  40a52c:	and    dh,BYTE PTR ds:[ebx-0x7f]
  40a530:	pop    edx
  40a531:	pop    eax
  40a532:	out    dx,eax
  40a533:	enter  0x8034,0x4f
  40a537:	pop    ebx
  40a538:	aad    0xed
  40a53a:	stos   DWORD PTR es:[edi],eax
  40a53b:	push   cs
  40a53c:	sub    dl,BYTE PTR ds:0xac7ff2e5
  40a542:	(bad)  
  40a543:	test   al,0x37
  40a545:	test   eax,0x4b8f5ae7
  40a54a:	and    al,0x74
  40a54c:	jb     0x40a543
  40a54e:	or     BYTE PTR [eax+0x3d85f925],ah
  40a554:	xor    BYTE PTR [eax*1-0x2c12785a],ah
  40a55b:	mov    esp,0xa4124559
  40a560:	(bad)  
  40a561:	mov    edx,DWORD PTR [edi-0x1a10fa26]
  40a567:	and    al,0xb3
  40a569:	enter  0x5e4a,0xff
  40a56d:	mov    cl,0xb
  40a56f:	icebp  
  40a570:	aaa    
  40a571:	rcr    ebp,1
  40a573:	adc    esi,edi
  40a575:	int3   
  40a576:	ins    DWORD PTR es:[edi],dx
  40a577:	pop    ebp
  40a578:	outs   dx,BYTE PTR ds:[esi]
  40a579:	add    dh,cl
  40a57b:	iret   
  40a57c:	in     al,0x9c
  40a57e:	std    
  40a57f:	popa   
  40a580:	jmp    0x40a577
  40a582:	jnp    0x40a509
  40a584:	fcmovnbe st,st(5)
  40a586:	jne    0x40a5fd
  40a588:	dec    ebx
  40a589:	fmul   DWORD PTR [ebx+eiz*8+0x19]
  40a58d:	mov    bl,dh
  40a58f:	ins    BYTE PTR es:[edi],dx
  40a590:	add    DWORD PTR [eax+0x57],eax
  40a593:	(bad)  
  40a595:	ror    DWORD PTR [eax+0x30],1
  40a598:	(bad)  
  40a599:	popf   
  40a59a:	dec    ebp
  40a59b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a59c:	mov    eax,ds:0xda48c1de
  40a5a1:	pop    esp
  40a5a2:	rcr    BYTE PTR [ebp+0x5674003a],cl
  40a5a8:	jmp    0x40a580
  40a5aa:	xor    edi,DWORD PTR [eax+0x4f4f85aa]
  40a5b0:	scas   eax,DWORD PTR es:[edi]
  40a5b1:	xor    bh,BYTE PTR [ebp+0x23270b60]
  40a5b7:	mov    al,bh
  40a5b9:	int3   
  40a5ba:	inc    edx
  40a5bb:	jmp    0xa516:0xefa84fdd
  40a5c2:	pop    eax
  40a5c3:	jae    0x40a5f8
  40a5c5:	mov    cl,0x5a
  40a5c7:	call   0x24992b51
  40a5cc:	push   ecx
  40a5cd:	aaa    
  40a5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a5cf:	jb     0x40a57a
  40a5d1:	leave  
  40a5d2:	fwait
  40a5d3:	cwde   
  40a5d4:	jb     0x40a576
  40a5d6:	lds    edx,FWORD PTR ds:0x9940444a
  40a5dc:	sti    
  40a5dd:	(bad)  
  40a5de:	cmp    BYTE PTR [edx-0x73],bl
  40a5e1:	jge    0x40a616
  40a5e3:	cmp    ebp,ebp
  40a5e5:	icebp  
  40a5e6:	lods   al,BYTE PTR ds:[esi]
  40a5e7:	sbb    al,bl
  40a5e9:	jo     0x40a5c0
  40a5eb:	and    DWORD PTR [eax-0x5c],esi
  40a5ee:	fwait
  40a5ef:	repnz cmp BYTE PTR [esp+ebx*4+0x70aa07df],al
  40a5f7:	mov    ds:0x12ed8954,al
  40a5fc:	leave  
  40a5fd:	jge    0x40a5e6
  40a5ff:	xor    eax,0x17fe3c77
  40a604:	pop    edi
  40a605:	lods   al,BYTE PTR ds:[esi]
  40a606:	lods   eax,DWORD PTR ds:[esi]
  40a607:	and    al,0xf9
  40a609:	adc    ch,dh
  40a60b:	retf   
  40a60c:	std    
  40a60d:	ins    BYTE PTR es:[edi],dx
  40a60e:	inc    esi
  40a60f:	or     DWORD PTR [ecx+0x212acd21],esi
  40a615:	test   DWORD PTR [ebp+edi*8+0x68],ebx
  40a619:	mov    dh,cl
  40a61b:	cwde   
  40a61c:	sbb    al,0x6e
  40a61e:	adc    cl,BYTE PTR [esi]
  40a620:	push   eax
  40a621:	or     edi,DWORD PTR [edi+0x20]
  40a624:	mov    bl,dh
  40a626:	stos   DWORD PTR es:[edi],eax
  40a627:	xchg   edi,esp
  40a629:	in     eax,dx
  40a62a:	dec    edx
  40a62b:	ds hlt 
  40a62d:	stos   DWORD PTR es:[edi],eax
  40a62e:	cmp    al,0x1c
  40a630:	dec    eax
  40a631:	jecxz  0x40a603
  40a633:	lods   al,BYTE PTR ds:[esi]
  40a634:	and    edx,ebp
  40a636:	jb     0x40a6a0
  40a638:	mov    ecx,0x5d1884c6
  40a63d:	test   al,0x6a
  40a63f:	jb     0x40a601
  40a641:	cmp    eax,0x432e044d
  40a646:	shl    BYTE PTR [ecx],1
  40a648:	pop    esp
  40a649:	aas    
  40a64a:	mov    eax,ds:0x3b822e83
  40a64f:	adc    ah,bl
  40a651:	xchg   DWORD PTR [eax],ecx
  40a653:	push   eax
  40a654:	mov    ds,WORD PTR [ecx-0x77]
  40a657:	fwait
  40a658:	or     DWORD PTR [eax],edx
  40a65a:	lds    ecx,FWORD PTR [ecx]
  40a65c:	daa    
  40a65d:	lods   eax,DWORD PTR ds:[esi]
  40a65e:	lods   al,BYTE PTR ds:[esi]
  40a65f:	or     al,0x76
  40a661:	idiv   BYTE PTR [esi+esi*2]
  40a664:	pushf  
  40a665:	mov    esp,DWORD PTR [ecx-0x11440873]
  40a66b:	inc    ecx
  40a66c:	je     0x40a5f5
  40a66e:	pop    ebp
  40a66f:	addr16 jle 0x40a65a
  40a672:	fwait
  40a673:	push   ds
  40a674:	cmp    ebp,eax
  40a676:	into   
  40a677:	xlat   BYTE PTR ds:[ebx]
  40a678:	cmp    eax,0x82e7de80
  40a67d:	xchg   edi,eax
  40a67e:	cmp    ecx,DWORD PTR [edx]
  40a680:	jg     0x40a69d
  40a682:	cld    
  40a683:	aas    
  40a684:	cs loope 0x40a665
  40a687:	mov    bl,BYTE PTR [edi+eax*2-0x31]
  40a68b:	or     al,0xd7
  40a68d:	test   eax,0x602dfc7e
  40a692:	mov    eax,0x88f5f365
  40a697:	pop    esi
  40a698:	popa   
  40a699:	adc    eax,0xb58cdc9a
  40a69e:	ss jns 0x40a695
  40a6a1:	div    BYTE PTR [ecx+0xed1a91c]
  40a6a7:	dec    ebx
  40a6a8:	inc    ecx
  40a6a9:	xor    eax,0x6cb357f
  40a6ae:	bnd js 0x40a68f
  40a6b1:	call   0x36ce:0xd880b818
  40a6b8:	push   esi
  40a6b9:	pop    ebx
  40a6ba:	cmp    ah,BYTE PTR [ecx-0x44ab0c0b]
  40a6c0:	in     eax,dx
  40a6c1:	leave  
  40a6c2:	mov    al,ds:0x2da477db
  40a6c7:	fs mov dh,0x3a
  40a6ca:	sub    BYTE PTR [edx+eiz*4+0x4bdb681],bh
  40a6d1:	sbb    esp,DWORD PTR [edx]
  40a6d3:	mov    eax,0xc45eb5cd
  40a6d8:	mov    ecx,0xd47a8c4b
  40a6dd:	out    dx,eax
  40a6de:	mov    ebx,0x64d766dc
  40a6e3:	xchg   ecx,eax
  40a6e4:	jns    0x40a6d7
  40a6e6:	mov    ebx,0x861be8d7
  40a6eb:	(bad)  
  40a6ed:	sahf   
  40a6ee:	sahf   
  40a6ef:	jne    0x40a765
  40a6f1:	mov    dh,bl
  40a6f3:	and    ah,BYTE PTR [edi-0x68248e19]
  40a6f9:	gs pop es
  40a6fb:	xor    al,0x85
  40a6fd:	call   0xbdc855de
  40a702:	stos   DWORD PTR es:[edi],eax
  40a703:	adc    eax,0xfcd4bf95
  40a708:	or     BYTE PTR [eax-0x16],ch
  40a70b:	push   esi
  40a70c:	es mov ebp,ecx
  40a70f:	sbb    DWORD PTR [edi-0x57338812],ebp
  40a715:	(bad)  
  40a716:	fucomip st,st(3)
  40a718:	std    
  40a719:	xchg   ecx,eax
  40a71a:	sub    DWORD PTR [ebp-0x4cb77766],edi
  40a720:	stos   BYTE PTR es:[edi],al
  40a721:	pop    esp
  40a722:	(bad)  
  40a723:	repz pop es
  40a725:	ss clc 
  40a727:	loopne 0x40a770
  40a729:	cdq    
  40a72a:	daa    
  40a72b:	mov    dh,0xec
  40a72d:	dec    edi
  40a72e:	dec    eax
  40a72f:	shl    BYTE PTR [esi+0x59],cl
  40a732:	mov    al,0xa3
  40a734:	cmp    al,0x1a
  40a736:	(bad)  [eax+0x6c]
  40a739:	cmp    DWORD PTR [esi+esi*1],edx
  40a73c:	adc    edx,edi
  40a73e:	mov    cl,dh
  40a740:	int    0x67
  40a742:	bound  ebp,QWORD PTR [esi-0x68]
  40a745:	pop    ds
  40a746:	lea    ebp,[ebx+ebp*4-0x4b]
  40a74a:	aas    
  40a74b:	mov    ds:0x7968db71,al
  40a750:	sbb    BYTE PTR ds:0x538bcb51,al
  40a756:	adc    al,0x6a
  40a758:	rcr    DWORD PTR [edx],0xa4
  40a75b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a75c:	icebp  
  40a75d:	mov    ebp,0xd8d61e33
  40a762:	test   BYTE PTR [ecx],0xb7
  40a765:	push   0xffffff9e
  40a767:	inc    bx
  40a769:	sbb    ebx,DWORD PTR [edx+0x63d9037c]
  40a76f:	push   ecx
  40a770:	dec    esp
  40a771:	aaa    
  40a772:	mov    edi,0x14b6424
  40a777:	xchg   DWORD PTR [ebx+0x35],ecx
  40a77a:	into   
  40a77b:	cmp    BYTE PTR [edx-0x1e1d8c7f],dl
  40a781:	push   ebp
  40a782:	sti    
  40a783:	int3   
  40a784:	push   edx
  40a785:	xchg   BYTE PTR [ebx-0x31],dh
  40a788:	xor    bh,BYTE PTR [edi]
  40a78a:	xor    eax,0x7ba8f3d2
  40a78f:	jle    0x40a785
  40a791:	lds    ebx,FWORD PTR [edi+esi*8-0x7eace405]
  40a798:	inc    ebp
  40a799:	outs   dx,DWORD PTR ds:[esi]
  40a79a:	cli    
  40a79b:	int3   
  40a79c:	not    DWORD PTR [ebx*8+0x2efc64b2]
  40a7a3:	inc    esp
  40a7a4:	jmp    0xf76ea664
  40a7a9:	dec    ecx
  40a7aa:	mov    ds:0x1b31d8c7,eax
  40a7af:	icebp  
  40a7b0:	xchg   BYTE PTR [esi],ch
  40a7b2:	xor    bh,bh
  40a7b4:	inc    edi
  40a7b5:	push   eax
  40a7b6:	and    cl,cl
  40a7b8:	fbstp  TBYTE PTR [ebx]
  40a7ba:	icebp  
  40a7bb:	loop   0x40a784
  40a7bd:	popf   
  40a7be:	sub    ebx,DWORD PTR [edx-0x324e713a]
  40a7c4:	dec    edi
  40a7c5:	sub    al,0xcb
  40a7c7:	out    dx,al
  40a7c8:	jne    0x40a7e4
  40a7ca:	sbb    bl,BYTE PTR [eax-0xd]
  40a7cd:	bound  esi,QWORD PTR [edi+edx*4+0x2]
  40a7d1:	leave  
  40a7d2:	adc    cl,BYTE PTR [ebp-0x75]
  40a7d5:	xor    eax,0x330d540c
  40a7da:	(bad)  
  40a7db:	mov    esp,0x1ad4213b
  40a7e0:	nop
  40a7e1:	pusha  
  40a7e2:	cld    
  40a7e3:	ins    DWORD PTR es:[edi],dx
  40a7e4:	div    DWORD PTR [ebx+0x1a]
  40a7e7:	mov    eax,0xa31d4eb6
  40a7ec:	clc    
  40a7ed:	jg     0x40a7e2
  40a7ef:	int3   
  40a7f0:	(bad)  
  40a7f1:	mov    ch,BYTE PTR ds:0x65d9e203
  40a7f7:	inc    ebp
  40a7f8:	push   esp
  40a7f9:	inc    esi
  40a7fa:	cld    
  40a7fb:	push   ss
  40a7fc:	fscale 
  40a7fe:	xchg   ebp,eax
  40a7ff:	retf   0x4b4e
  40a802:	inc    ebp
  40a803:	cmp    bl,BYTE PTR [eax]
  40a805:	xchg   ebp,eax
  40a806:	repnz and eax,0x6aeef30c
  40a80c:	xchg   esp,eax
  40a80d:	sbb    edx,esi
  40a80f:	popf   
  40a810:	mov    al,0xd0
  40a812:	or     DWORD PTR [ecx-0x669a20e],0x35
  40a819:	xor    al,0x36
  40a81b:	dec    ebx
  40a81c:	mov    bl,ch
  40a81e:	fdivr  DWORD PTR [ebp+0x321ff9e4]
  40a824:	and    DWORD PTR [esi-0x64],ebx
  40a827:	aam    0x2
  40a829:	imul   ebx,DWORD PTR [ecx+0x5d7f2564],0xe507ab0
  40a833:	cmp    eax,0x74fd6562
  40a838:	enter  0x5423,0xb7
  40a83c:	xchg   ebp,eax
  40a83d:	jae    0x40a8be
  40a83f:	int    0xa7
  40a841:	or     ebx,0x8e15e025
  40a847:	aam    0x73
  40a849:	das    
  40a84a:	and    BYTE PTR [ebp+0x7a],ah
  40a84d:	arpl   si,ax
  40a84f:	or     ah,BYTE PTR [edi+0x207be850]
  40a855:	jns    0x40a86f
  40a857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a858:	fcmovu st,st(3)
  40a85a:	push   di
  40a85c:	xchg   BYTE PTR [esi-0x35],bh
  40a85f:	test   DWORD PTR [ecx-0x6d56027c],ebx
  40a865:	lods   eax,DWORD PTR ds:[esi]
  40a866:	fucomi st,st(3)
  40a868:	push   cs
  40a869:	cmc    
  40a86a:	inc    edi
  40a86b:	pop    ss
  40a86c:	fs pop ds
  40a86e:	clc    
  40a86f:	cmp    al,BYTE PTR [edx]
  40a871:	mov    cl,0x8c
  40a873:	cmp    ah,dl
  40a875:	retf   0xf2f1
  40a878:	add    al,0xf5
  40a87a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a87b:	adc    edx,DWORD PTR [ebp+0x6e]
  40a87e:	cli    
  40a87f:	fwait
  40a880:	sbb    edi,ecx
  40a882:	push   ds
  40a883:	xor    eax,0x668a908a
  40a888:	leave  
  40a889:	test   al,0x8e
  40a88b:	push   ss
  40a88c:	leave  
  40a88d:	mov    ah,bh
  40a88f:	adc    BYTE PTR [edx-0x3f36c14d],al
  40a895:	sub    DWORD PTR [esi+0x3637cc2f],ebp
  40a89b:	(bad)  
  40a89d:	dec    eax
  40a89e:	and    eax,0x88a5fffd
  40a8a3:	sbb    al,0x79
  40a8a5:	cmp    al,0xbd
  40a8a7:	or     BYTE PTR [edi+eax*8-0x6c78ae4f],dl
  40a8ae:	sub    eax,0x8472e10
  40a8b3:	outs   dx,DWORD PTR ds:[esi]
  40a8b4:	xor    ch,cl
  40a8b6:	mov    ch,0x3
  40a8b8:	sub    ecx,DWORD PTR [esi]
  40a8ba:	xchg   esi,eax
  40a8bb:	adc    eax,0x389c44c1
  40a8c0:	shr    DWORD PTR [esi],cl
  40a8c2:	jnp    0x40a92d
  40a8c4:	sbb    esi,esi
  40a8c6:	mov    ch,0xd7
  40a8c8:	icebp  
  40a8c9:	xor    bl,BYTE PTR ds:0xb71661c1
  40a8cf:	xchg   edx,eax
  40a8d0:	es call 0x3853:0x65bb185d
  40a8d8:	cmc    
  40a8d9:	in     al,0xc0
  40a8db:	adc    al,0x17
  40a8dd:	mov    ecx,0x96bd8a3f
  40a8e2:	fnstcw WORD PTR [eax]
  40a8e4:	shr    BYTE PTR [esp+ebx*4+0x2c],cl
  40a8e8:	xchg   esp,eax
  40a8e9:	xor    edi,0x37ba58f3
  40a8ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8f0:	aas    
  40a8f1:	arpl   si,bx
  40a8f3:	inc    edx
  40a8f4:	fild   DWORD PTR [ecx+0x7c0d4caf]
  40a8fa:	pushf  
  40a8fb:	jcxz   0x40a8e2
  40a8fe:	xchg   esi,eax
  40a8ff:	pop    ecx
  40a900:	push   edx
  40a901:	adc    eax,0x7ead65c6
  40a906:	adc    eax,0xfe732963
  40a90b:	nop
  40a90c:	pop    ss
  40a90d:	mov    esi,0xfb411bb0
  40a912:	mov    dh,0xc5
  40a914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a915:	sbb    ch,BYTE PTR [ebp+0x304bc93c]
  40a91b:	jmp    0x5168:0xb65ecba0
  40a922:	popa   
  40a923:	mov    bl,0xd
  40a925:	inc    ecx
  40a926:	stos   BYTE PTR es:[edi],al
  40a927:	loope  0x40a953
  40a929:	adc    eax,0x2ad4ccf6
  40a92e:	rep stos DWORD PTR es:[edi],eax
  40a930:	jp     0x40a8bb
  40a932:	push   cs
  40a933:	pop    edi
  40a934:	mov    bl,0x55
  40a936:	push   edi
  40a937:	or     ebp,DWORD PTR [ebx+0x17]
  40a93a:	icebp  
  40a93b:	cmp    DWORD PTR [eax-0x12],ecx
  40a93e:	outs   dx,DWORD PTR ds:[esi]
  40a93f:	pop    ds
  40a940:	bound  ecx,QWORD PTR [ebx]
  40a942:	jns    0x40a94c
  40a944:	mov    ebx,0xd8559691
  40a949:	leave  
  40a94a:	outs   dx,DWORD PTR ds:[esi]
  40a94b:	mov    al,ds:0x508331fe
  40a950:	sub    ah,BYTE PTR [eax+0x69]
  40a953:	mov    DWORD PTR [ecx-0x47],ebx
  40a956:	jmp    0xe6a8:0xd329b20b
  40a95d:	sahf   
  40a95e:	sub    BYTE PTR [eax-0x30],al
  40a961:	xchg   esp,eax
  40a962:	pop    esp
  40a963:	sahf   
  40a964:	mov    eax,0x376d21b7
  40a969:	xchg   edx,eax
  40a96a:	lds    edx,FWORD PTR ds:0x69d9926d
  40a970:	aad    0xa1
  40a972:	mov    cl,0xf8
  40a974:	mov    esp,0x16b9529
  40a979:	jno    0x40a9e9
  40a97b:	mov    edi,cs
  40a97d:	and    edi,DWORD PTR [ecx]
  40a97f:	loope  0x40a926
  40a981:	mov    dh,0x94
  40a983:	fcmovbe st,st(2)
  40a985:	popf   
  40a986:	push   edi
  40a987:	sub    eax,0xed8ac17c
  40a98c:	mov    ebx,0x88994bc0
  40a991:	push   ebx
  40a992:	outs   dx,DWORD PTR ds:[esi]
  40a993:	pop    esp
  40a994:	xchg   ecx,eax
  40a995:	gs pop eax
  40a997:	inc    BYTE PTR [bx+si-0x62]
  40a99b:	scas   al,BYTE PTR es:[edi]
  40a99c:	dec    esi
  40a99d:	mov    bl,BYTE PTR [edi]
  40a99f:	add    BYTE PTR [ebp+ebx*8+0x4a],0xc2
  40a9a4:	mov    DWORD PTR [edx],ebx
  40a9a6:	xor    eax,0x7d9bee8f
  40a9ab:	stos   DWORD PTR es:[edi],eax
  40a9ac:	jns    0x40a940
  40a9ae:	cmp    eax,0x1176aed4
  40a9b3:	sbb    dl,BYTE PTR [ecx-0x4a92de3c]
  40a9b9:	add    al,0xc5
  40a9bb:	jae    0x40aa1a
  40a9bd:	and    eax,0xb52937f0
  40a9c2:	call   0x9b55c2b4
  40a9c7:	push   ecx
  40a9c8:	scas   eax,DWORD PTR es:[edi]
  40a9c9:	rcl    BYTE PTR [edx+0x57],cl
  40a9cc:	add    eax,0x4948bc11
  40a9d1:	xchg   esp,eax
  40a9d2:	or     edx,DWORD PTR [ecx+0x18bbf0b9]
  40a9d8:	sbb    ah,dl
  40a9da:	sti    
  40a9db:	jno    0x40a970
  40a9dd:	add    al,0x9e
  40a9df:	add    DWORD PTR [ebx],esi
  40a9e1:	mov    ebp,0x1f8246e0
  40a9e6:	jg     0x40a9ab
  40a9e8:	pop    esi
  40a9e9:	mov    ebp,0x17fb0365
  40a9ee:	repnz stc 
  40a9f0:	into   
  40a9f1:	sbb    dh,dl
  40a9f3:	scas   al,BYTE PTR es:[edi]
  40a9f4:	jae    0x40aa56
  40a9f6:	leave  
  40a9f7:	sahf   
  40a9f8:	xchg   ebp,eax
  40a9f9:	bound  ebp,QWORD PTR [edi-0x5f9ab42a]
  40a9ff:	pop    es
  40aa00:	adc    DWORD PTR [ebx-0x5b487df6],esp
  40aa06:	ins    DWORD PTR es:[edi],dx
  40aa07:	outs   dx,BYTE PTR ds:[esi]
  40aa08:	push   esp
  40aa09:	and    ch,BYTE PTR [esi-0x56ca5e9e]
  40aa0f:	ret    0x1dbc
  40aa12:	in     eax,dx
  40aa13:	in     eax,dx
  40aa14:	jo     0x40aa95
  40aa16:	(bad)  
  40aa17:	mov    dl,0xd0
  40aa19:	ds jmp 0x1fc70c2b
  40aa1f:	mov    al,ds:0xabedbf78
  40aa24:	icebp  
  40aa25:	ins    DWORD PTR es:[edi],dx
  40aa26:	add    edx,DWORD PTR [esi-0x3969bd87]
  40aa2c:	aas    
  40aa2d:	scas   eax,DWORD PTR es:[edi]
  40aa2e:	test   eax,0xffa69b24
  40aa34:	(bad)  
  40aa35:	dec    ebx
  40aa36:	add    bl,BYTE PTR [ebx+esi*1-0x7a803b3b]
  40aa3d:	test   BYTE PTR [edx],bh
  40aa3f:	pusha  
  40aa40:	or     ebx,0x36
  40aa43:	fwait
  40aa44:	mov    al,0xcb
  40aa46:	sub    DWORD PTR ds:0xd5a56eca,esp
  40aa4c:	adc    al,0xb5
  40aa4e:	push   edi
  40aa4f:	cwde   
  40aa50:	mov    ds,WORD PTR [edx-0x7b]
  40aa53:	add    ebp,DWORD PTR [edi+0x49]
  40aa56:	jle    0x40aabb
  40aa58:	clc    
  40aa59:	test   BYTE PTR [eax],bl
  40aa5b:	jns    0x40aaa2
  40aa5d:	inc    ebx
  40aa5e:	or     eax,0x9b98ceb5
  40aa63:	je     0x40aa64
  40aa65:	jmp    0x40aa03
  40aa67:	jmp    0x40aae6
  40aa69:	jmp    0x40aabf
  40aa6b:	sbb    eax,0x6340fc6d
  40aa70:	xchg   ebx,eax
  40aa72:	xor    edx,DWORD PTR [edx+0x48]
  40aa75:	pop    esi
  40aa76:	jns    0x40aacb
  40aa78:	mov    cl,0xed
  40aa7a:	rcl    BYTE PTR [ebx+0x618ca1da],0x15
  40aa81:	inc    esp
  40aa82:	sbb    al,0xb9
  40aa84:	adc    esp,DWORD PTR [eax+0x77]
  40aa87:	fcmovnu st,st(4)
  40aa89:	dec    eax
  40aa8a:	pop    ebp
  40aa8b:	ror    edi,1
  40aa8d:	(bad)  
  40aa8f:	(bad)  
  40aa90:	pusha  
  40aa91:	iret   
  40aa92:	mov    BYTE PTR [edx+0x79f6a435],ch
  40aa98:	xchg   edx,eax
  40aa99:	mov    al,ds:0x4da66a70
  40aa9e:	mov    al,0x9
  40aaa1:	out    dx,al
  40aaa2:	push   es
  40aaa3:	aaa    
  40aaa4:	xchg   ebx,eax
  40aaa5:	fdiv   st(2),st
  40aaa7:	push   edi
  40aaa9:	mov    dl,0xf4
  40aaab:	jae    0x40ab1d
  40aaad:	jp     0x40aad7
  40aaaf:	scas   eax,DWORD PTR es:[edi]
  40aab0:	outs   dx,BYTE PTR ds:[esi]
  40aab1:	push   ecx
  40aab2:	stos   BYTE PTR es:[edi],al
  40aab3:	ret    0xd337
  40aab6:	dec    ebp
  40aab7:	in     eax,dx
  40aab8:	pop    ss
  40aab9:	sbb    ebx,eax
  40aabb:	pop    ss
  40aabc:	mov    ebp,0x3e6a7d24
  40aac1:	jns    0x40aa73
  40aac3:	repnz scas eax,DWORD PTR es:[edi]
  40aac5:	dec    esp
  40aac6:	sbb    eax,0xb264cb81
  40aacb:	add    bl,dl
  40aacd:	mov    BYTE PTR [esi-0x1c498568],ah
  40aad3:	sbb    esi,DWORD PTR [edx-0x47]
  40aad6:	(bad)  [ecx+0xa]
  40aad9:	(bad)
  40aadc:	imul   ecx,DWORD PTR [edi-0x47bd1b84],0x7159789a
  40aae6:	xor    esi,DWORD PTR [edx-0xe2e1348]
  40aaec:	jne    0x40ab16
  40aaee:	(bad)  
  40aaef:	jb     0x40ab1a
  40aaf1:	hlt    
  40aaf2:	in     eax,0xec
  40aaf4:	push   esi
  40aaf5:	ja     0x40aa78
  40aaf7:	mov    cl,0x6
  40aaf9:	dec    esp
  40aafa:	or     cl,BYTE PTR [edi]
  40aafc:	ja     0x40ab52
  40aafe:	sub    esp,DWORD PTR [ecx+esi*2+0x36e94725]
  40ab05:	out    dx,eax
  40ab06:	test   BYTE PTR [eax+ecx*8],ch
  40ab09:	jge    0x40ab56
  40ab0b:	retf   0x11dd
  40ab0e:	jg     0x40aafa
  40ab10:	add    edx,DWORD PTR [ebp-0x6cfa301e]
  40ab16:	mov    DWORD PTR [esi],eax
  40ab18:	call   0x1cfe:0x7029bd49
  40ab1f:	pop    es
  40ab20:	jle    0x40ab2c
  40ab22:	sub    edx,edi
  40ab24:	(bad)  
  40ab25:	in     eax,0xac
  40ab27:	mov    edx,0xbd6fd3ab
  40ab2c:	inc    ebx
  40ab2d:	adc    BYTE PTR [edi+0x18],0x6
  40ab31:	dec    eax
  40ab32:	stc    
  40ab33:	popa   
  40ab34:	jmp    0x40aabb
  40ab36:	stos   BYTE PTR es:[edi],al
  40ab37:	aas    
  40ab38:	sub    eax,eax
  40ab3a:	arpl   WORD PTR [edi-0x6686a745],sp
  40ab40:	out    0xc5,eax
  40ab42:	loope  0x40aae1
  40ab44:	jb     0x40ab0e
  40ab46:	daa    
  40ab47:	jp     0x40aade
  40ab49:	cmp    ah,bh
  40ab4b:	add    DWORD PTR [esp+edi*4],eax
  40ab4e:	comiss xmm6,DWORD PTR [ebx+0x702f184f]
  40ab55:	gs and ebp,ecx
  40ab58:	sub    eax,0xfa393c0b
  40ab5d:	pop    ds
  40ab5e:	add    eax,0x2406e160
  40ab63:	enter  0x809c,0xe3
  40ab67:	fcomp  QWORD PTR [edx-0x26]
  40ab6a:	xchg   ebp,eax
  40ab6b:	xchg   edx,eax
  40ab6c:	pop    edi
  40ab6d:	lods   eax,DWORD PTR ds:[esi]
  40ab6e:	mov    dl,0x6c
  40ab70:	std    
  40ab71:	push   edx
  40ab72:	test   esp,0x6cf7a24b
  40ab78:	mul    BYTE PTR [eax+ebp*2+0x20d23cbb]
  40ab7f:	fstp   TBYTE PTR [ebx*4-0x2e231d32]
  40ab86:	or     BYTE PTR [ecx-0x51619247],al
  40ab8c:	push   cs
  40ab8d:	jp     0x40aba5
  40ab8f:	add    DWORD PTR [ebx],edx
  40ab91:	sub    dl,0xd5
  40ab94:	test   eax,0xf24061c2
  40ab99:	hlt    
  40ab9a:	pop    ebx
  40ab9b:	ds addr16 jle 0x40abbe
  40ab9f:	repnz aad 0x98
  40aba2:	jae    0x40abc4
  40aba4:	lds    ebp,FWORD PTR [ebx]
  40aba6:	xchg   esp,eax
  40aba7:	xchg   ebp,eax
  40aba8:	icebp  
  40aba9:	jnp    0x40ab60
  40abab:	jno    0x40ab49
  40abad:	aam    0x4f
  40abaf:	mov    ch,0x98
  40abb1:	es mov dh,0xc4
  40abb4:	aas    
  40abb5:	mov    ebx,DWORD PTR [ebx]
  40abb7:	xor    eax,DWORD PTR [esp+edx*1]
  40abba:	add    esi,DWORD PTR [ebx]
  40abbc:	and    eax,0x1635052b
  40abc1:	mov    eax,0x60a726ee
  40abc6:	popa   
  40abc7:	xchg   BYTE PTR [eax],dl
  40abc9:	mov    dh,0xc1
  40abcb:	pop    ds
  40abcc:	jle    0x40ac07
  40abce:	jecxz  0x40ab66
  40abd0:	scas   al,BYTE PTR es:[edi]
  40abd1:	push   cs
  40abd2:	cmc    
  40abd3:	ret    
  40abd4:	sbb    edx,DWORD PTR [edx]
  40abd6:	lahf   
  40abd7:	sar    BYTE PTR [edx+0x13],1
  40abda:	das    
  40abdb:	mov    ebx,0x51e5752b
  40abe0:	gs mov ch,0x5
  40abe3:	loopne 0x40ac12
  40abe5:	mov    ecx,0xf3bb7055
  40abea:	ins    DWORD PTR es:[edi],dx
  40abeb:	cmp    al,0xd3
  40abed:	or     eax,0x78299dc0
  40abf2:	test   DWORD PTR [ebp+0x7f],edi
  40abf5:	mov    al,ds:0x94454926
  40abfa:	cs mov al,0x62
  40abfd:	ins    DWORD PTR es:[edi],dx
  40abfe:	add    al,0xb0
  40ac00:	out    dx,al
  40ac01:	and    DWORD PTR [ebp+0x55],0x50bc8d64
  40ac08:	int3   
  40ac09:	ret    0xb9f2
  40ac0c:	and    ch,bh
  40ac0e:	inc    edi
  40ac0f:	gs loope 0x40abf5
  40ac12:	lods   eax,DWORD PTR ds:[esi]
  40ac13:	sub    DWORD PTR [ecx+edi*8+0x7fc5cfdb],eax
  40ac1a:	push   edi
  40ac1b:	(bad)
  40ac20:	mov    ch,0x86
  40ac22:	xchg   esp,eax
  40ac23:	cld    
  40ac24:	or     DWORD PTR [esi],esi
  40ac26:	cmp    dh,BYTE PTR [ebp+0xa]
  40ac29:	xchg   ecx,eax
  40ac2a:	ins    DWORD PTR es:[edi],dx
  40ac2b:	mov    DWORD PTR [edi-0xf26c440],ecx
  40ac31:	je     0x40abf0
  40ac33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac34:	pop    edx
  40ac35:	mov    ecx,0xe99d270d
  40ac3a:	arpl   WORD PTR [edi],si
  40ac3c:	enter  0xf415,0x6c
  40ac40:	out    0x34,eax
  40ac42:	fst    QWORD PTR [ecx-0x57]
  40ac45:	mov    esi,0x375b718b
  40ac4a:	ss dec esp
  40ac4c:	add    eax,0xe9ee807a
  40ac51:	les    ebp,FWORD PTR [edi]
  40ac53:	(bad)  
  40ac54:	jmp    0x2db4:0x577960c
  40ac5b:	nop    edx
  40ac5e:	sbb    BYTE PTR [ebp-0x9c4bba9],ch
  40ac64:	sti    
  40ac65:	pop    eax
  40ac66:	std    
  40ac67:	mov    bl,0xad
  40ac69:	jno    0x40ac5f
  40ac6b:	mov    esp,DWORD PTR [ecx+edx*4-0x3ba77439]
  40ac72:	inc    esi
  40ac73:	(bad)  
  40ac74:	cmc    
  40ac75:	xchg   ebp,eax
  40ac76:	ret    0x22b2
  40ac79:	jg     0x40ac5e
  40ac7b:	cld    
  40ac7c:	xchg   edi,eax
  40ac7d:	sub    bh,BYTE PTR [ecx]
  40ac7f:	retf   0xf6c6
  40ac82:	stos   DWORD PTR es:[edi],eax
  40ac83:	add    DWORD PTR [esi],0x97fbf92
  40ac89:	sub    BYTE PTR [ebx-0x48],bh
  40ac8c:	xchg   ecx,eax
  40ac8d:	test   bh,0xb9
  40ac90:	ret    
  40ac91:	jmp    0xd563:0x137dedeb
  40ac98:	or     eax,0x4d569f20
  40ac9d:	in     al,dx
  40ac9e:	(bad)  [eax+0x4a]
  40aca1:	(bad)  
  40aca2:	fnstenv [ebx]
  40aca4:	push   esp
  40aca5:	jp     0x40ac55
  40aca7:	push   edx
  40aca8:	cdq    
  40aca9:	pusha  
  40acaa:	xchg   edi,eax
  40acab:	aas    
  40acac:	loop   0x40acc4
  40acae:	ror    BYTE PTR [esi+0x4b89da26],cl
  40acb4:	call   0xcbf2d5a4
  40acb9:	mov    eax,ds:0x7871af75
  40acbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acc0:	push   edi
  40acc1:	or     BYTE PTR [ebp+esi*8+0x52],bl
  40acc5:	mov    ?,WORD PTR [ebx]
  40acc7:	push   edx
  40acc8:	aas    
  40acc9:	inc    eax
  40acca:	cld    
  40accb:	xchg   edi,eax
  40accc:	ret    
  40accd:	daa    
  40acce:	arpl   WORD PTR [ecx-0x7b],ax
  40acd1:	push   eax
  40acd2:	daa    
  40acd3:	fst    st(6)
  40acd5:	mov    ebp,0xb0ab36a5
  40acda:	pop    esp
  40acdb:	(bad)  
  40acdc:	fsubr  QWORD PTR [ebx+0x8]
  40acdf:	push   ds
  40ace0:	jg     0x40ad05
  40ace2:	test   DWORD PTR [edi-0x1a],0x190c8ad7
  40ace9:	pop    edi
  40acea:	jmp    0xb18acc2c
  40acef:	fsub   st,st(2)
  40acf1:	sub    BYTE PTR [ebx+0x79],0x55
  40acf5:	fnstenv [edi+0x3773020b]
  40acfb:	loopne 0x40ad4d
  40acfd:	aad    0xde
  40acff:	pop    ds
  40ad00:	xor    ah,dh
  40ad02:	into   
  40ad03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad04:	cmp    DWORD PTR [edi+ebp*1-0x61],eax
  40ad08:	fisttp WORD PTR [edi+0x1a0bfe66]
  40ad0e:	ins    BYTE PTR es:[edi],dx
  40ad0f:	jg     0x40ad14
  40ad11:	(bad)  
  40ad14:	call   0x8e6d33dd
  40ad19:	fisubr DWORD PTR [ebp+0x52939319]
  40ad1f:	shl    BYTE PTR [esi-0x2c91a6ad],1
  40ad25:	mov    al,ds:0x8405aa89
  40ad2a:	mov    esi,0x3cd4aa05
  40ad2f:	xchg   edi,eax
  40ad30:	imul   edx,DWORD PTR [ebx-0x63bf3aaa],0x8a46ab9a
  40ad3a:	call   0x5470:0xc31cdfc0
  40ad41:	pop    ecx
  40ad42:	int3   
  40ad43:	outs   dx,BYTE PTR ds:[esi]
  40ad44:	pop    ss
  40ad45:	lods   eax,DWORD PTR ds:[esi]
  40ad46:	pop    es
  40ad47:	and    al,0x2b
  40ad49:	sub    BYTE PTR [ecx],bh
  40ad4b:	push   cs
  40ad4c:	aas    
  40ad4d:	into   
  40ad4e:	or     BYTE PTR [ecx],al
  40ad50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad51:	(bad)  
  40ad53:	repnz bound eax,QWORD PTR [ecx]
  40ad56:	sub    DWORD PTR [esi-0x35],edi
  40ad59:	and    al,0x50
  40ad5b:	xchg   edx,eax
  40ad5c:	fidivr DWORD PTR [ebx]
  40ad5e:	popf   
  40ad5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad60:	mov    ebx,0xce5bccd6
  40ad65:	mov    ecx,DWORD PTR [edx+0x5bfde02f]
  40ad6b:	or     eax,0xabd66f19
  40ad70:	out    0x8f,al
  40ad72:	sbb    bl,ah
  40ad74:	clc    
  40ad75:	push   edi
  40ad76:	test   al,0x56
  40ad78:	std    
  40ad79:	mov    ch,0x37
  40ad7b:	stos   BYTE PTR es:[edi],al
  40ad7c:	ficom  WORD PTR [edx+0x46]
  40ad7f:	adc    DWORD PTR [ebp+0x65],eax
  40ad82:	push   edx
  40ad83:	(bad)  
  40ad84:	shl    BYTE PTR [ebx+0x16],cl
  40ad87:	ret    0xe3d6
  40ad8a:	icebp  
  40ad8b:	fdiv   DWORD PTR [edx-0x432ec3d]
  40ad91:	push   edi
  40ad92:	xchg   DWORD PTR [ecx],eax
  40ad94:	mov    edx,0xf428e90c
  40ad99:	inc    esi
  40ad9a:	sbb    al,0xe0
  40ad9c:	xchg   esp,eax
  40ad9d:	out    dx,al
  40ad9e:	push   0xd479370f
  40ada3:	imul   ecx,DWORD PTR [eax+ebp*8-0x33d6e4ee],0xffffffeb
  40adab:	push   edi
  40adac:	and    ecx,ecx
  40adae:	int3   
  40adaf:	jp     0x40ae0f
  40adb1:	out    dx,eax
  40adb2:	mov    ah,0xc2
  40adb4:	addr16 daa 
  40adb6:	xchg   ch,bh
  40adb8:	sub    al,0x65
  40adba:	test   BYTE PTR ds:0x3b9da710,dl
  40adc0:	pushf  
  40adc1:	sbb    eax,0xb2759df1
  40adc6:	add    eax,DWORD PTR [edi*2-0x11bea876]
  40adcd:	jae    0x40ad69
  40adcf:	push   esi
  40add0:	mov    ds:0xe04b5f8b,eax
  40add5:	out    0x33,eax
  40add7:	(bad)  
  40add8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40add9:	enter  0x2b03,0xf4
  40addd:	test   eax,0x906661cf
  40ade2:	cmp    eax,0x5133d711
  40ade7:	xchg   edi,eax
  40ade8:	sub    dl,BYTE PTR [edx-0x57bb8607]
  40adee:	pop    edx
  40adef:	xchg   ecx,eax
  40adf0:	fdiv   st,st(0)
  40adf2:	mov    ?,WORD PTR es:[ebp+0x60]
  40adf6:	retf   0x78e4
  40adf9:	and    eax,0x1e3e4f98
  40adfe:	ins    DWORD PTR es:[edi],dx
  40adff:	sub    edi,DWORD PTR [esi+0x4c]
  40ae02:	inc    ebx
  40ae03:	mov    ecx,0x4c352ba7
  40ae08:	stos   BYTE PTR es:[edi],al
  40ae09:	push   ds
  40ae0a:	sub    cl,bl
  40ae0c:	push   0xf1556a2d
  40ae11:	cmp    esi,DWORD PTR [esi+edi*2+0x66348790]
  40ae18:	retf   
  40ae19:	cmp    BYTE PTR [ecx-0x5a],cl
  40ae1c:	mov    al,ds:0x3be43378
  40ae21:	mov    bh,0x61
  40ae23:	jl     0x40ae3b
  40ae25:	stos   BYTE PTR es:[edi],al
  40ae26:	pop    ebx
  40ae27:	cmp    eax,0x4c0d60a7
  40ae2c:	xchg   esi,eax
  40ae2d:	sub    DWORD PTR [ecx+0x7fdb67a9],esp
  40ae33:	or     dl,BYTE PTR [ecx-0x59d6b36b]
  40ae39:	enter  0x904b,0xb2
  40ae3d:	fcmovb st,st(4)
  40ae3f:	pop    esi
  40ae40:	int    0xb8
  40ae42:	scas   al,BYTE PTR es:[edi]
  40ae43:	jl     0x40ae57
  40ae45:	push   ecx
  40ae46:	scas   eax,DWORD PTR es:[edi]
  40ae47:	rol    DWORD PTR [esi],1
  40ae49:	push   edi
  40ae4a:	jmp    0xa9c21ba6
  40ae4f:	(bad)  
  40ae50:	nop
  40ae51:	lock mov cl,0x4b
  40ae54:	inc    ebx
  40ae55:	mov    esp,0x929b35e3
  40ae5a:	xor    BYTE PTR [ecx],ah
  40ae5c:	jnp    0x40ae2a
  40ae5e:	call   0xe6d0:0x8240565e
  40ae65:	adc    al,0x78
  40ae67:	lods   al,BYTE PTR ds:[esi]
  40ae68:	fdiv   DWORD PTR [esi]
  40ae6a:	sbb    ebp,edi
  40ae6c:	push   0x26484746
  40ae71:	scas   al,BYTE PTR es:[edi]
  40ae72:	mov    edi,0xe8a63ad1
  40ae77:	daa    
  40ae78:	xchg   esi,eax
  40ae79:	pop    ecx
  40ae7a:	inc    esi
  40ae7b:	adc    al,0x11
  40ae7d:	dec    ebx
  40ae7e:	int3   
  40ae7f:	mov    bl,0xd5
  40ae81:	dec    eax
  40ae82:	(bad)
  40ae86:	push   ss
  40ae87:	out    dx,al
  40ae88:	jp     0x40ae83
  40ae8a:	sbb    edi,eax
  40ae8c:	mov    edi,0x2e2af9a0
  40ae91:	into   
  40ae92:	into   
  40ae93:	cmp    DWORD PTR [ebp-0x1bc1f374],esp
  40ae99:	sbb    al,0xa
  40ae9b:	cli    
  40ae9c:	repnz xchg ebx,eax
  40ae9e:	xchg   esi,eax
  40ae9f:	pop    eax
  40aea0:	leave  
  40aea1:	add    esp,DWORD PTR ds:0x182c0f23
  40aea7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aea8:	shr    eax,1
  40aeaa:	dec    ebp
  40aeab:	mov    ebx,edx
  40aead:	cmc    
  40aeae:	fimul  WORD PTR fs:[edi-0x63bb9c53]
  40aeb5:	lea    ecx,[ebp+0x769bdb9b]
  40aebb:	into   
  40aebc:	mov    ss,WORD PTR ds:0xc81c6129
  40aec2:	jo     0x40ae6e
  40aec4:	xchg   edx,eax
  40aec5:	ror    DWORD PTR [ebp-0x1c],1
  40aec8:	jb     0x40ae57
  40aeca:	add    eax,0xa4d6487f
  40aecf:	sub    bl,BYTE PTR [eax]
  40aed1:	ja     0x40af44
  40aed3:	mov    ah,0xa8
  40aed5:	cs nop
  40aed7:	in     eax,0xf1
  40aed9:	xchg   esi,eax
  40aeda:	inc    esi
  40aedb:	xchg   edi,eax
  40aedc:	test   al,0x50
  40aede:	in     eax,dx
  40aedf:	mov    edx,0x228e65c9
  40aee4:	out    dx,al
  40aee5:	mov    eax,ds:0xd4406f08
  40aeea:	lock cdq 
  40aeec:	push   cs
  40aeed:	adc    eax,0xf03355d8
  40aef2:	clc    
  40aef3:	inc    esp
  40aef4:	xor    DWORD PTR [edx+edi*4],edi
  40aef7:	pop    ebx
  40aef8:	jmp    0x40af0d
  40aefa:	popf   
  40aefb:	inc    esp
  40aefc:	inc    edx
  40aefd:	jecxz  0x40ae98
  40aeff:	enter  0x9d9e,0xdd
  40af03:	mov    dh,0xef
  40af05:	xchg   BYTE PTR [esi+ebx*2],bl
  40af08:	push   edi
  40af09:	dec    ecx
  40af0a:	push   0xffffffc2
  40af0c:	jmp    0x40aec1
  40af0e:	retf   
  40af0f:	int    0xdb
  40af11:	adc    BYTE PTR [edx+0x10],al
  40af14:	lahf   
  40af15:	hlt    
  40af16:	jne    0x40af4b
  40af18:	scas   al,BYTE PTR es:[edi]
  40af19:	stos   DWORD PTR es:[edi],eax
  40af1a:	pop    es
  40af1b:	or     al,0xd
  40af1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af1e:	cld    
  40af1f:	nop
  40af20:	fldenv [esi+edx*4-0x5bec87f9]
  40af27:	sbb    al,0x97
  40af29:	mov    DWORD PTR [edi+0x20426201],esi
  40af2f:	fmul   QWORD PTR [edi]
  40af31:	xor    eax,0x14e980f8
  40af36:	jns    0x40af00
  40af38:	ja     0x40aef2
  40af3a:	inc    edi
  40af3b:	push   ds
  40af3c:	ret    0x25f1
  40af3f:	adc    DWORD PTR [ebp+0x123466f7],esp
  40af45:	std    
  40af46:	fwait
  40af47:	lahf   
  40af48:	mov    dl,0x5b
  40af4a:	sbb    ecx,DWORD PTR [eax-0x2d]
  40af4d:	sub    ebp,DWORD PTR [ebx+0xba344bd]
  40af53:	fstp   DWORD PTR [ebp-0x1b5da633]
  40af59:	jb     0x40afce
  40af5b:	in     eax,dx
  40af5c:	out    0xfd,al
  40af5e:	fdiv   st,st(6)
  40af60:	loopne 0x40af24
  40af62:	sahf   
  40af63:	and    eax,0xf76e6246
  40af68:	pop    eax
  40af69:	pop    edi
  40af6a:	xor    BYTE PTR [esp+edx*2-0x47],cl
  40af6e:	jg     0x40af05
  40af70:	js     0x40afe7
  40af72:	add    eax,0x76df9dd1
  40af77:	dec    esp
  40af78:	adc    DWORD PTR [edi+0x2eff4d0d],esi
  40af7e:	call   0x45dc:0xc2cff939
  40af85:	add    eax,0x69bb5b1e
  40af8a:	test   eax,0x1cd53422
  40af8f:	pop    es
  40af90:	out    dx,al
  40af91:	jmp    0xffda:0xc9c8d951
  40af98:	scas   al,BYTE PTR es:[edi]
  40af99:	test   eax,0x36defe86
  40af9e:	mov    ebx,0x932c13ed
  40afa3:	and    ebx,DWORD PTR [ebp+0x363eb3a6]
  40afa9:	ficom  WORD PTR [ebp-0x2af37135]
  40afaf:	add    bh,BYTE PTR [ecx-0x5effd2f7]
  40afb5:	dec    ecx
  40afb6:	mov    ebx,0xa903f6e3
  40afbb:	rcr    BYTE PTR [edx-0x3d],1
  40afbe:	out    0xdb,al
  40afc0:	addr16 dec eax
  40afc2:	outs   dx,BYTE PTR ds:[esi]
  40afc3:	xchg   BYTE PTR [eax+ecx*8],dl
  40afc6:	(bad)  
  40afc7:	and    cl,bh
  40afc9:	mov    WORD PTR [eax+esi*8],ds
  40afcc:	xchg   BYTE PTR [edx-0x1fe2c8bc],dh
  40afd2:	and    BYTE PTR [ecx],0x1
  40afd5:	sub    BYTE PTR [edx],al
  40afd7:	popf   
  40afd8:	jns    0x40af99
  40afda:	push   0x70ebed63
  40afdf:	mov    eax,0x65d88c46
  40afe4:	arpl   WORD PTR [esi+0x5ad6df38],sp
  40afea:	cmp    esp,ecx
  40afec:	push   ds
  40afed:	fs jno 0x40affb
  40aff0:	push   ecx
  40aff1:	stos   BYTE PTR es:[edi],al
  40aff2:	inc    ecx
  40aff3:	adc    ebx,eax
  40aff5:	inc    ecx
  40aff6:	mov    ds:0x802decff,eax
  40affb:	adc    eax,0xf22b19a6
  40b000:	cwde   
  40b001:	nop
  40b002:	ins    BYTE PTR es:[edi],dx
  40b003:	pusha  
  40b004:	jns    0x40afca
  40b006:	mov    dh,0x4e
  40b008:	hlt    
  40b009:	xor    al,al
  40b00b:	or     BYTE PTR [ecx+0x8c8ae40],ah
  40b011:	mov    ebp,0x302ff9b2
  40b016:	or     edx,DWORD PTR [ebx+0x3e]
  40b019:	scas   al,BYTE PTR es:[edi]
  40b01a:	adc    al,0xa6
  40b01c:	xlat   BYTE PTR ds:[ebx]
  40b01d:	loopne 0x40b07f
  40b01f:	aas    
  40b020:	outs   dx,DWORD PTR ds:[esi]
  40b021:	push   eax
  40b022:	cwde   
  40b023:	jbe    0x40b01e
  40b025:	in     al,dx
  40b026:	leave  
  40b027:	mov    WORD PTR [edi-0x19d95cd5],fs
  40b02d:	jbe    0x40afc3
  40b02f:	ret    0xe0e2
  40b032:	retf   
  40b033:	loopne 0x40b064
  40b035:	inc    edi
  40b036:	mov    ch,0xec
  40b038:	aaa    
  40b039:	pop    ebp
  40b03a:	and    BYTE PTR [ecx-0x56f47fda],bl
  40b040:	push   ds
  40b041:	ss push cs
  40b043:	cmp    ah,BYTE PTR [ecx-0x5c32db84]
  40b049:	shr    edi,1
  40b04b:	enter  0x3ee5,0x82
  40b04f:	and    DWORD PTR [eax+0x31],esi
  40b052:	or     eax,0x683ce451
  40b057:	inc    edi
  40b058:	sub    DWORD PTR [edi-0xa],esi
  40b05b:	fld    DWORD PTR [edi+0x29]
  40b05e:	pop    esi
  40b05f:	cmp    eax,0x65ebf00a
  40b064:	pop    edx
  40b065:	or     eax,0xc8ba1ccf
  40b06a:	(bad)  
  40b06b:	mov    al,0xca
  40b06d:	ror    DWORD PTR [ebx],1
  40b06f:	adc    eax,ebp
  40b071:	inc    edx
  40b072:	pop    eax
  40b073:	scas   eax,DWORD PTR es:[edi]
  40b074:	sbb    dh,al
  40b076:	scas   eax,DWORD PTR es:[edi]
  40b077:	stos   DWORD PTR es:[edi],eax
  40b078:	mov    esp,0x7b79ec52
  40b07d:	(bad)  
  40b07e:	sub    ebp,DWORD PTR [eax-0x454e56ab]
  40b084:	neg    edx
  40b086:	ins    BYTE PTR es:[edi],dx
  40b087:	dec    ecx
  40b088:	lds    esi,FWORD PTR [edx+0x6439071a]
  40b08e:	pop    esp
  40b08f:	aam    0x47
  40b091:	or     eax,DWORD PTR [ecx]
  40b093:	or     DWORD PTR [ecx+0x38b2673b],edi
  40b099:	call   0x67f949b6
  40b09e:	adc    al,0xb7
  40b0a0:	scas   eax,DWORD PTR es:[edi]
  40b0a1:	pushf  
  40b0a2:	test   DWORD PTR [esi-0x20059301],0x6d1a8d16
  40b0ac:	mov    DWORD PTR [edi+0x7535e418],esp
  40b0b2:	(bad)  
  40b0b3:	mov    al,0xdc
  40b0b5:	scas   al,BYTE PTR es:[edi]
  40b0b6:	sbb    ecx,DWORD PTR [esi+edi*4]
  40b0b9:	dec    esp
  40b0ba:	out    0x93,al
  40b0bc:	jmp    0x3fb1fd08
  40b0c1:	dec    ebx
  40b0c2:	mov    eax,ds:0x8d3d3214
  40b0c7:	mov    dh,0x7d
  40b0c9:	bound  esi,QWORD PTR ss:[edx]
  40b0cc:	sbb    al,0xe2
  40b0ce:	mov    ch,0x1b
  40b0d0:	push   0xffffff9d
  40b0d2:	mov    ah,0xc
  40b0d4:	and    ebx,DWORD PTR [eax]
  40b0d6:	jns    0x40b0e8
  40b0d8:	push   cs
  40b0d9:	xor    ecx,DWORD PTR [edi-0x133dfe1c]
  40b0df:	xlat   BYTE PTR ds:[ebx]
  40b0e0:	sbb    DWORD PTR [ecx+0x4d],0xbb4eb3aa
  40b0e7:	jmp    0x40b111
  40b0e9:	xchg   esp,eax
  40b0ea:	lock out dx,al
  40b0ec:	mov    eax,ds:0xa5f8bc0d
  40b0f1:	sahf   
  40b0f2:	sar    BYTE PTR [ecx-0x44],0x1b
  40b0f6:	ret    0x80cd
  40b0f9:	mov    ebx,0x7076571c
  40b0fe:	imul   ebp,DWORD PTR ds:0xde221ea7,0x94b30424
  40b108:	out    0x34,eax
  40b10a:	jne    0x40b13a
  40b10c:	inc    edi
  40b10d:	sub    edi,DWORD PTR fs:[ebp-0x39]
  40b111:	adc    DWORD PTR [eax-0x7521e92f],ebp
  40b117:	mov    cl,BYTE PTR [edx+0x73510e4e]
  40b11d:	sti    
  40b11e:	xlat   BYTE PTR ds:[ebx]
  40b11f:	test   ch,dl
  40b121:	scas   al,BYTE PTR es:[edi]
  40b122:	(bad)  [ebx+0x34]
  40b125:	dec    esp
  40b126:	aam    0x5b
  40b128:	(bad)  
  40b129:	std    
  40b12a:	xchg   edx,eax
  40b12b:	and    al,0xb6
  40b12d:	or     eax,DWORD PTR [ebx+0x550fcfad]
  40b133:	sti    
  40b134:	into   
  40b135:	xchg   DWORD PTR [esi+eiz*1+0x2a],esp
  40b139:	pop    edx
  40b13a:	scas   al,BYTE PTR es:[edi]
  40b13b:	enter  0x7de7,0xae
  40b13f:	adc    ebx,edi
  40b141:	mov    bh,BYTE PTR [edx-0x20]
  40b144:	pusha  
  40b145:	or     esi,DWORD PTR [edi-0x48466ec0]
  40b14b:	test   DWORD PTR [edi+0x105c5df1],0x2422b678
  40b155:	jbe    0x40b18f
  40b157:	ret    0x316c
  40b15a:	stc    
  40b15b:	mov    fs,WORD PTR ds:0xcda44e54
  40b161:	(bad)
  40b165:	xchg   ah,bl
  40b167:	aas    
  40b168:	sbb    eax,0x54e631be
  40b16d:	aam    0x6a
  40b16f:	or     DWORD PTR [ecx-0x7abdf548],edx
  40b175:	aaa    
  40b176:	pop    ebp
  40b177:	je     0x40b14d
  40b179:	(bad)  
  40b17a:	jmp    0x60644de7
  40b17f:	push   ecx
  40b180:	mov    ds:0x70c9022f,eax
  40b185:	and    eax,0x93c433
  40b18a:	das    
  40b18b:	test   DWORD PTR [edx],0x68480309
  40b191:	lahf   
  40b192:	push   cs
  40b193:	inc    eax
  40b194:	cmp    dh,BYTE PTR [ebp-0x6e]
  40b197:	or     eax,0x7a74e4d4
  40b19c:	sbb    BYTE PTR ds:0x4c64e95d,al
  40b1a2:	sub    edi,DWORD PTR [ecx-0x4e]
  40b1a5:	aam    0x86
  40b1a7:	pop    ecx
  40b1a8:	mov    bl,0x0
  40b1aa:	push   ebp
  40b1ab:	mov    ecx,0x85a194cd
  40b1b0:	jne    0x40b1d0
  40b1b2:	aaa    
  40b1b3:	cmp    DWORD PTR [ebx+0x8],ebx
  40b1b6:	jl     0x40b1e4
  40b1b8:	mov    ds:0x63533e87,al
  40b1bd:	sub    eax,0x46bb8c2a
  40b1c2:	rcr    DWORD PTR [edx-0x43],cl
  40b1c5:	or     esi,edi
  40b1c7:	lods   al,BYTE PTR ds:[esi]
  40b1c8:	pop    ecx
  40b1c9:	lds    esp,FWORD PTR [ebx-0x1]
  40b1cc:	dec    esp
  40b1cd:	pop    ds
  40b1ce:	(bad)  
  40b1d0:	mov    DWORD PTR [eax+0x0],ebp
  40b1d3:	(bad)  
  40b1d4:	inc    edi
  40b1d5:	pop    es
  40b1d6:	aaa    
  40b1d7:	dec    ebx
  40b1d8:	(bad)  es:[eax+ebx*8+0x6b903a49]
  40b1e0:	ror    DWORD PTR [edx+0x21ced3ef],0x22
  40b1e7:	jnp    0x40b20b
  40b1e9:	jl     0x40b1d7
  40b1eb:	(bad)  
  40b1ec:	dec    eax
  40b1ed:	fwait
  40b1ee:	js     0x40b236
  40b1f0:	jo     0x40b1d3
  40b1f2:	xchg   esp,eax
  40b1f3:	cmp    DWORD PTR [edi+0x3a],ebp
  40b1f6:	scas   al,BYTE PTR es:[edi]
  40b1f7:	and    al,0xcf
  40b1f9:	stos   DWORD PTR es:[edi],eax
  40b1fa:	pop    ecx
  40b1fb:	ins    BYTE PTR es:[edi],dx
  40b1fc:	push   0x66dd53c
  40b201:	test   eax,0x61b2475e
  40b206:	sub    BYTE PTR [eax+0x481c1aac],dh
  40b20c:	jmp    0xe0f8:0x2fab3493
  40b213:	fisttp DWORD PTR [eax+0x55]
  40b216:	icebp  
  40b217:	fwait
  40b218:	add    cl,BYTE PTR [eax-0x5d]
  40b21b:	sub    eax,0xd51c9f34
  40b220:	jmp    FWORD PTR [ecx]
  40b222:	push   ds
  40b223:	adc    BYTE PTR [esi],dh
  40b225:	xor    al,bl
  40b227:	pop    esi
  40b228:	std    
  40b229:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b22a:	leave  
  40b22b:	pop    ebx
  40b22c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b22d:	shr    DWORD PTR [eax+0x7b514932],cl
  40b233:	and    ebx,DWORD PTR ds:[esi+0x56467b91]
  40b23a:	adc    BYTE PTR [edx+0x56],ah
  40b23d:	xlat   BYTE PTR ds:[ebx]
  40b23e:	xchg   edx,eax
  40b23f:	mov    dl,0x8
  40b241:	fwait
  40b242:	push   es
  40b243:	xchg   ebp,eax
  40b244:	or     eax,0x1664b131
  40b249:	ror    ecx,0x40
  40b24c:	clc    
  40b24d:	hlt    
  40b24e:	imul   ebp,DWORD PTR [ebx+eiz*1+0x4eaf872b],0xc46ec080
  40b259:	cwde   
  40b25a:	pop    edx
  40b25b:	(bad)  
  40b25c:	in     al,0x1
  40b25e:	and    al,0x86
  40b260:	pop    es
  40b261:	ds loopne 0x40b1ee
  40b264:	daa    
  40b265:	xchg   edi,eax
  40b266:	scas   al,BYTE PTR es:[edi]
  40b267:	xor    al,0x98
  40b269:	sbb    BYTE PTR [eax+0x54],al
  40b26c:	inc    esp
  40b26d:	adc    bl,BYTE PTR [edx+0x2acf8693]
  40b273:	and    dh,BYTE PTR [esi+0x75]
  40b276:	popf   
  40b277:	shr    DWORD PTR [edi],cl
  40b279:	aad    0x7e
  40b27b:	jae    0x40b235
  40b27d:	and    eax,0x9a371488
  40b282:	fiadd  WORD PTR [ebp+0x530a80]
  40b288:	adc    BYTE PTR [eax],bh
  40b28a:	adc    bl,BYTE PTR [ebp+0x70]
  40b28d:	mov    ah,0x80
  40b28f:	or     eax,0x96d4b646
  40b294:	cs test eax,0x4f1c615f
  40b29a:	mov    ecx,0x9b1d014b
  40b29f:	iret   
  40b2a0:	mov    ah,0xc8
  40b2a2:	aaa    
  40b2a3:	and    BYTE PTR [edi-0x68],0xf5
  40b2a7:	retf   0x8796
  40b2aa:	popfw  
  40b2ac:	fiadd  WORD PTR [edi-0x8]
  40b2af:	shl    BYTE PTR [eax],1
  40b2b1:	sbb    DWORD PTR [ebx+eiz*4-0x24],edx
  40b2b5:	push   cs
  40b2b6:	arpl   WORD PTR [ecx+0x38],bp
  40b2b9:	inc    eax
  40b2ba:	(bad)  
  40b2bb:	ficom  WORD PTR [eax]
  40b2bd:	stos   DWORD PTR es:[edi],eax
  40b2be:	xchg   ecx,ebp
  40b2c0:	aam    0x9c
  40b2c2:	mov    ch,0x61
  40b2c4:	push   edx
  40b2c5:	lds    ebp,FWORD PTR [eax]
  40b2c7:	imul   edi,DWORD PTR [ebp+0x18],0x4d72e9c7
  40b2ce:	sub    bl,0x16
  40b2d1:	iret   
  40b2d2:	out    dx,eax
  40b2d3:	push   edx
  40b2d4:	dec    esp
  40b2d5:	sbb    edx,edi
  40b2d7:	(bad)  
  40b2d8:	sub    al,0x17
  40b2da:	mov    ebx,0xa8e02f80
  40b2df:	push   cs
  40b2e0:	adc    BYTE PTR [eax],cl
  40b2e2:	loop   0x40b29f
  40b2e4:	jae    0x40b345
  40b2e6:	icebp  
  40b2e7:	nop
  40b2e8:	arpl   bp,dx
  40b2ea:	add    DWORD PTR [esi],edi
  40b2ec:	mov    ax,si
  40b2ef:	jp     0x40b320
  40b2f1:	in     al,dx
  40b2f2:	and    BYTE PTR [edx+edx*2-0x46f230bd],al
  40b2f9:	xlat   BYTE PTR ds:[ebx]
  40b2fa:	dec    ecx
  40b2fb:	mov    al,BYTE PTR [ebp-0x126a1505]
  40b301:	jg     0x40b380
  40b303:	adc    al,BYTE PTR [ecx-0x44fed8e6]
  40b309:	and    cl,0x73
  40b30c:	cs push ecx
  40b30e:	ret    
  40b30f:	sbb    BYTE PTR [ecx+0x2b],ah
  40b312:	jl     0x40b2d4
  40b314:	(bad)  
  40b315:	push   ebx
  40b316:	push   edi
  40b317:	sub    BYTE PTR [esi-0xc6dc699],dl
  40b31d:	frstor [edx-0x6c316b32]
  40b323:	shr    BYTE PTR [esi+0x3b],cl
  40b326:	sbb    edx,0xdc610a41
  40b32c:	and    BYTE PTR [ebx+eiz*8],ah
  40b32f:	je     0x40b3ad
  40b331:	push   ebx
  40b332:	cdq    
  40b333:	adc    ecx,DWORD PTR [eax]
  40b335:	add    ebx,DWORD PTR [edi+0x4d63ac9d]
  40b33b:	inc    ebp
  40b33c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b33d:	test   al,0x1a
  40b33f:	xor    cl,BYTE PTR [eax-0x726554aa]
  40b345:	int    0x73
  40b347:	jne    0x40b2ef
  40b349:	push   ebx
  40b34a:	xchg   ebx,eax
  40b34b:	(bad)  
  40b34c:	mov    esi,0x82dfdbda
  40b351:	xchg   ebp,eax
  40b352:	(bad)  
  40b353:	mov    BYTE PTR [edi+0x75ea6aac],bh
  40b359:	pop    esi
  40b35a:	in     al,0x13
  40b35c:	sbb    esi,DWORD PTR [ecx+0x51]
  40b35f:	xchg   edi,eax
  40b360:	iret   
  40b361:	push   ebp
  40b362:	gs loope 0x40b3c1
  40b365:	or     dl,BYTE PTR [ebp+0x23]
  40b368:	sub    esi,DWORD PTR [edi]
  40b36a:	imul   edx,DWORD PTR [eax],0xffffffc6
  40b36d:	or     BYTE PTR [edi+ebx*1],dh
  40b370:	fmul   st,st(2)
  40b372:	sti    
  40b373:	cmc    
  40b374:	lea    ecx,[esi]
  40b376:	dec    ecx
  40b377:	pop    eax
  40b378:	dec    esi
  40b379:	aas    
  40b37a:	cld    
  40b37b:	out    dx,al
  40b37c:	sti    
  40b37d:	jb     0x40b387
  40b37f:	push   ebx
  40b380:	test   DWORD PTR [ebx+0x76],0x2790d4e9
  40b387:	cmp    BYTE PTR [ebp-0xd6ca8d4],0x7
  40b38e:	sbb    esi,DWORD PTR [ebx+0x6273cdb]
  40b394:	mov    esi,DWORD PTR [ebp+eax*2-0x4fd948c9]
  40b39b:	fdiv   st(0),st
  40b39d:	jmp    0xf0e9027b
  40b3a2:	dec    edi
  40b3a3:	aas    
  40b3a4:	sbb    eax,DWORD PTR [eax+0x3607e607]
  40b3aa:	fsub   DWORD PTR [esi-0x16]
  40b3ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3ae:	out    dx,eax
  40b3af:	pop    esi
  40b3b0:	inc    ebp
  40b3b1:	(bad)  
  40b3b2:	jbe    0x40b38f
  40b3b4:	xor    eax,0x937fb6d4
  40b3b9:	shr    BYTE PTR [ebx],cl
  40b3bb:	scas   al,BYTE PTR es:[edi]
  40b3bc:	test   al,0xcf
  40b3be:	lods   eax,DWORD PTR ds:[esi]
  40b3bf:	(bad)  
  40b3c0:	fwait
  40b3c1:	dec    esi
  40b3c2:	inc    esi
  40b3c3:	push   esp
  40b3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b3c5:	cmp    al,0x7e
  40b3c7:	push   cs
  40b3c8:	xor    edx,DWORD PTR [esi+0x66]
  40b3cb:	mov    ebx,0xcbc01eba
  40b3d0:	(bad)  
  40b3d1:	cmp    eax,0x76d4adeb
  40b3d6:	clc    
  40b3d7:	leave  
  40b3d8:	ret    
  40b3d9:	gs data16 and al,0xed
  40b3dd:	js     0x40b39a
  40b3df:	lahf   
  40b3e0:	shr    DWORD PTR [edx],0x79
  40b3e3:	icebp  
  40b3e4:	jbe    0x40b39f
  40b3e6:	dec    edx
  40b3e7:	ret    
  40b3e8:	xchg   edi,eax
  40b3e9:	scas   al,BYTE PTR es:[edi]
  40b3ea:	push   esi
  40b3eb:	adc    eax,0x9e45177
  40b3f0:	push   ds
  40b3f1:	popa   
  40b3f2:	cdq    
  40b3f3:	cs retf 0x3ca6
  40b3f7:	mov    WORD PTR [edx+0x33],fs
  40b3fa:	in     eax,0x7c
  40b3fc:	or     al,0x0
  40b3fe:	push   esp
  40b3ff:	mov    dl,0x41
  40b401:	fdivr  QWORD PTR [eax+0x30a0e298]
  40b407:	(bad)  
  40b408:	pop    ebp
  40b409:	lds    ecx,FWORD PTR [edx+0x70]
  40b40c:	inc    ebp
  40b40d:	xchg   esi,eax
  40b40e:	or     bl,BYTE PTR [edi-0x11]
  40b411:	ret    
  40b412:	out    dx,eax
  40b413:	ss in  eax,dx
  40b415:	dec    ebp
  40b416:	pusha  
  40b417:	xchg   edx,eax
  40b418:	inc    esp
  40b419:	sub    DWORD PTR [ebx+0x1d],ecx
  40b41c:	push   es
  40b41d:	push   0xffffff84
  40b41f:	add    eax,0xf088287a
  40b424:	mov    ebp,0x3f1fdfdf
  40b429:	push   eax
  40b42a:	fnstenv [ebx+ebp*8-0x8]
  40b42e:	adc    eax,0x33b5a9b1
  40b433:	lods   al,BYTE PTR ds:[esi]
  40b434:	xor    BYTE PTR [esp-0x4b957bea],dl
  40b43b:	jecxz  0x40b4b1
  40b43d:	jae    0x40b482
  40b43f:	add    ebp,DWORD PTR [ecx-0x3ddf6e96]
  40b445:	jmp    0xaed11451
  40b44a:	pop    esi
  40b44b:	inc    ebp
  40b44c:	jle    0x40b4b8
  40b44e:	pop    ebp
  40b44f:	daa    
  40b450:	rcr    BYTE PTR cs:[ebp-0x6b4417ba],0xf3
  40b458:	cld    
  40b459:	cs push es
  40b45b:	push   eax
  40b45c:	xlat   BYTE PTR ds:[ebx]
  40b45d:	and    al,0x94
  40b45f:	je     0x40b47c
  40b461:	ret    0xadd6
  40b464:	stos   BYTE PTR es:[edi],al
  40b465:	or     BYTE PTR [edi+eax*2],0xb6
  40b469:	add    eax,0x9ce6e51d
  40b46e:	sbb    esp,esp
  40b470:	imul   edi,DWORD PTR [esi-0x5c12be2a],0xedb8ee77
  40b47a:	and    DWORD PTR [ecx],0xffffffd5
  40b47d:	fdivr  QWORD PTR [ecx-0x396339f7]
  40b483:	push   ebp
  40b484:	push   esp
  40b485:	mov    eax,ds:0xa9bcdb1c
  40b48a:	mov    ebx,0x34a56eb4
  40b48f:	add    ebx,DWORD PTR [ebp-0x2b9482d3]
  40b495:	loopne 0x40b477
  40b497:	mov    ds:0xbfc6e49d,eax
  40b49c:	jmp    0x6db0:0xb3ef6ad8
  40b4a3:	sub    dh,bh
  40b4a5:	data16 sub BYTE PTR [ebp-0x4],ch
  40b4a9:	sbb    DWORD PTR [edi-0x2dd8ac67],ebx
  40b4af:	add    BYTE PTR ds:0x55f51729,dl
  40b4b5:	aas    
  40b4b6:	jns    0x40b51e
  40b4b8:	xchg   ebx,eax
  40b4b9:	lods   al,BYTE PTR ds:[esi]
  40b4ba:	in     al,0x1e
  40b4bc:	adc    dl,bh
  40b4be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4bf:	jle    0x40b47e
  40b4c1:	mov    ecx,0xa3a4395c
  40b4c6:	sbb    esp,edi
  40b4c8:	dec    edi
  40b4c9:	or     bl,BYTE PTR [eax-0x50e05fb9]
  40b4cf:	jne    0x40b51f
  40b4d1:	mov    eax,ds:0x71c91b92
  40b4d6:	or     al,0x17
  40b4d8:	add    eax,0x6b6a47ed
  40b4dd:	sti    
  40b4de:	pavgb  mm6,QWORD PTR [esi]
  40b4e1:	add    al,0x3
  40b4e3:	ror    BYTE PTR [esi-0x5968ff1],0x86
  40b4ea:	in     eax,dx
  40b4eb:	inc    ecx
  40b4ec:	and    eax,0xa7e8d4e0
  40b4f1:	mov    ch,0x2d
  40b4f3:	mov    edi,DWORD PTR [edi+ebx*2-0x4f]
  40b4f7:	dec    esi
  40b4f8:	stos   DWORD PTR es:[edi],eax
  40b4f9:	fbstp  TBYTE PTR [edi-0x472de4b5]
  40b4ff:	dec    edx
  40b500:	daa    
  40b501:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b502:	sbb    DWORD PTR [edi-0xad70dc3],ebp
  40b508:	aam    0xc3
  40b50a:	push   edx
  40b50b:	mov    dh,0x82
  40b50d:	lgs    edi,FWORD PTR [eax+ebx*4-0x44]
  40b512:	(bad)  
  40b513:	mov    eax,0xe3a53311
  40b518:	ja     0x40b52f
  40b51a:	cmp    ah,BYTE PTR [edx-0xa]
  40b51d:	in     al,dx
  40b51e:	pop    es
  40b51f:	fistp  QWORD PTR [eax-0x76fafd9c]
  40b525:	repz mov es,esp
  40b528:	outs   dx,BYTE PTR ds:[esi]
  40b529:	fucomip st,st(0)
  40b52b:	in     al,0xf2
  40b52d:	or     DWORD PTR [edi+0x4661cd22],edx
  40b533:	bound  esi,QWORD PTR [esi]
  40b535:	test   eax,0xe1ea1874
  40b53a:	(bad)  
  40b53b:	jno    0x40b518
  40b53d:	mov    al,0x48
  40b53f:	mov    bl,0x47
  40b541:	xor    edi,ebp
  40b543:	xor    edx,DWORD PTR [esi+ebx*2+0x73]
  40b547:	js     0x40b587
  40b549:	icebp  
  40b54a:	fdiv   st,st(7)
  40b54c:	arpl   si,si
  40b54e:	mov    bh,0xc5
  40b550:	bound  esi,QWORD PTR [eax+0x63]
  40b553:	xchg   edi,eax
  40b554:	nop
  40b555:	sub    al,0xbc
  40b557:	jno    0x40b511
  40b559:	cmc    
  40b55a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b55b:	sub    al,0x29
  40b55d:	in     al,0x28
  40b55f:	je     0x40b504
  40b561:	sub    edi,eax
  40b563:	ret    0x4183
  40b566:	cmp    DWORD PTR [ebp-0x16192bb4],ebp
  40b56c:	dec    ecx
  40b56d:	add    eax,0x6aaa1702
  40b572:	sahf   
  40b573:	mov    ebx,DWORD PTR [ebp-0x46]
  40b576:	out    0x3,al
  40b578:	push   edi
  40b579:	and    dh,BYTE PTR [ebx]
  40b57b:	cld    
  40b57c:	jns    0x40b5e7
  40b57e:	adc    al,0xc2
  40b580:	xor    eax,0x1fab9b5f
  40b585:	in     eax,0x80
  40b587:	mov    eax,0xb1ed6847
  40b58c:	aaa    
  40b58d:	dec    BYTE PTR [eax]
  40b58f:	xchg   ebp,eax
  40b590:	xchg   edx,esi
  40b592:	dec    ebx
  40b593:	addr16 pop bp
  40b596:	das    
  40b597:	sub    bh,BYTE PTR [ecx]
  40b599:	iret   
  40b59a:	jg     0x40b590
  40b59c:	jl     0x40b53c
  40b59e:	xor    DWORD PTR [ebx-0x3001eb90],eax
  40b5a4:	shl    edx,1
  40b5a6:	and    eax,0x806e189a
  40b5ab:	lea    edx,[ecx+0x3dac15d0]
  40b5b1:	push   esp
  40b5b2:	adc    DWORD PTR [esi-0x61731c7b],edx
  40b5b8:	push   esi
  40b5b9:	xor    ah,BYTE PTR [ecx-0x73504026]
  40b5bf:	dec    edi
  40b5c0:	jecxz  0x40b616
  40b5c2:	les    esp,FWORD PTR [edi+ebp*4]
  40b5c5:	jae    0x40b638
  40b5c7:	push   0x4c
  40b5c9:	repz adc ch,BYTE PTR [ecx+0x46]
  40b5cd:	xor    dh,0x98
  40b5d0:	or     al,0xe9
  40b5d2:	test   al,0xbf
  40b5d4:	inc    esp
  40b5d5:	mov    bl,0xd9
  40b5d7:	clc    
  40b5d8:	cmp    eax,0xaf6bf516
  40b5dd:	or     BYTE PTR [edx],bh
  40b5df:	enter  0x7023,0xcf
  40b5e3:	fist   DWORD PTR [ebx+edi*1-0x66a7f270]
  40b5ea:	mov    esi,0x1b75e52d
  40b5ef:	jne    0x40b64b
  40b5f1:	rcr    BYTE PTR [esi+0x11a26bdb],0xed
  40b5f8:	dec    ebx
  40b5f9:	fist   DWORD PTR [ebx]
  40b5fb:	aaa    
  40b5fc:	add    eax,0x9a2bc038
  40b601:	out    0x12,al
  40b603:	cmp    al,0xc0
  40b605:	sub    BYTE PTR [ebx+0x6f],ch
  40b608:	mov    esi,esp
  40b60a:	mov    ecx,0x6f7c1d10
  40b60f:	jge    0x40b602
  40b611:	repnz adc edi,eax
  40b614:	outs   dx,BYTE PTR ds:[esi]
  40b615:	push   0x91dd6184
  40b61a:	shl    BYTE PTR ss:[ebx+0x65],1
  40b61e:	fs adc al,0x55
  40b621:	sub    DWORD PTR [ecx-0x59f4c14a],0xfffffff6
  40b628:	sbb    DWORD PTR [ecx],esp
  40b62a:	xlat   BYTE PTR ds:[ebx]
  40b62b:	xlat   BYTE PTR ds:[ebx]
  40b62c:	adc    BYTE PTR [ebx],0xca
  40b62f:	jl     0x40b5f3
  40b631:	int3   
  40b632:	aas    
  40b633:	push   cs
  40b634:	out    0x68,eax
  40b636:	outs   dx,DWORD PTR ds:[esi]
  40b637:	pop    eax
  40b638:	xlat   BYTE PTR ds:[ebx]
  40b639:	jp     0x40b5bd
  40b63b:	(bad)  
  40b63c:	popa   
  40b63d:	sbb    cl,BYTE PTR [edi]
  40b63f:	mov    WORD PTR [ebx-0x15],ds
  40b642:	std    
  40b643:	pop    eax
  40b644:	mov    eax,DWORD PTR [edi]
  40b646:	sbb    DWORD PTR [edx+0x2d49831d],eax
  40b64c:	mov    al,ds:0x19a696b
  40b651:	push   esp
  40b652:	jnp    0x40b601
  40b654:	call   0xe91:0x3b5e220e
  40b65b:	dec    ebx
  40b65c:	jl     0x40b63f
  40b65e:	and    eax,0x1a64c72a
  40b663:	jl     0x40b697
  40b665:	and    ah,BYTE PTR [eax+0x2b]
  40b668:	inc    ebp
  40b669:	push   edi
  40b66a:	js     0x40b60e
  40b66c:	push   esp
  40b66d:	hlt    
  40b66e:	jne    0x40b6b0
  40b670:	fcomp  st(6)
  40b672:	pop    edx
  40b673:	or     DWORD PTR [edx],edi
  40b675:	and    al,0x6
  40b677:	test   DWORD PTR [esi-0x4],eax
  40b67a:	mov    ah,0xc5
  40b67c:	adc    DWORD PTR [ebx+0x26],ebp
  40b67f:	les    ebp,FWORD PTR [ebx-0xb]
  40b682:	idiv   BYTE PTR [ecx-0x7d]
  40b685:	clc    
  40b686:	enter  0xc9d7,0x74
  40b68a:	ins    DWORD PTR es:[edi],dx
  40b68b:	or     eax,0x7602fd75
  40b690:	test   BYTE PTR [ebx+0x4a417f62],ah
  40b696:	fnstcw WORD PTR [ebp+0x57]
  40b699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b69a:	rol    BYTE PTR [bx+0x6],1
  40b69e:	aas    
  40b69f:	add    BYTE PTR [ecx+0x1357fbee],al
  40b6a5:	mov    ds:0x84db31b9,eax
  40b6aa:	addr16 jmp 0xdefe4d91
  40b6b0:	rcr    DWORD PTR [edi+0x6b],1
  40b6b3:	cmp    DWORD PTR [ebx],eax
  40b6b5:	aaa    
  40b6b6:	mov    dh,0x83
  40b6b8:	fwait
  40b6b9:	(bad)  
  40b6ba:	fucom  st(2)
  40b6bc:	xchg   esi,eax
  40b6bd:	and    eax,0x868581a
  40b6c2:	aad    0x5f
  40b6c4:	add    edi,DWORD PTR [ebp+0x815bb0b]
  40b6ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6cb:	xchg   esp,eax
  40b6cc:	dec    ebx
  40b6cd:	ins    DWORD PTR es:[edi],dx
  40b6ce:	pop    ds
  40b6cf:	pushf  
  40b6d0:	jl     0x40b6a5
  40b6d2:	cmc    
  40b6d3:	and    al,0xb0
  40b6d5:	dec    ebp
  40b6d6:	inc    esp
  40b6d7:	xor    al,0x4c
  40b6d9:	xor    edi,DWORD PTR [ecx-0x2]
  40b6dc:	hlt    
  40b6dd:	sbb    DWORD PTR [esi-0x29c8a28e],ebp
  40b6e3:	xchg   esp,eax
  40b6e4:	in     al,0xfe
  40b6e6:	xchg   esi,eax
  40b6e7:	or     al,0xe1
  40b6e9:	scas   al,BYTE PTR es:[edi]
  40b6ea:	fcomp  DWORD PTR [ebx+esi*4+0x16]
  40b6ee:	out    dx,eax
  40b6ef:	call   0xb693:0xacc69461
  40b6f6:	outs   dx,DWORD PTR ds:[esi]
  40b6f8:	pop    ebx
  40b6f9:	jns    0x40b686
  40b6fb:	mov    cl,0xb4
  40b6fd:	mov    bh,0x84
  40b6ff:	jnp    0x40b6ef
  40b701:	hlt    
  40b702:	push   es
  40b703:	sub    eax,0x37d0ddc5
  40b708:	mov    edx,0x83109ed0
  40b70d:	add    ah,cl
  40b70f:	add    esi,esi
  40b711:	cmc    
  40b712:	mov    ?,WORD PTR [ecx+0x2f5f82e8]
  40b718:	scas   eax,DWORD PTR es:[edi]
  40b719:	adc    eax,0x4ef46b3c
  40b71e:	mov    eax,0x4c8246b3
  40b723:	jbe    0x40b77f
  40b725:	aam    0x8b
  40b727:	add    dh,BYTE PTR [esi-0x1fe28970]
  40b72d:	push   esp
  40b72e:	test   BYTE PTR [esi-0x4f3cf2eb],dh
  40b734:	adc    al,0x6b
  40b736:	push   es
  40b737:	or     BYTE PTR [ecx+0x11],dl
  40b73a:	push   eax
  40b73b:	and    dh,cl
  40b73d:	scas   eax,DWORD PTR es:[edi]
  40b73e:	popa   
  40b73f:	pusha  
  40b740:	mov    dl,0x12
  40b742:	push   es
  40b743:	mov    ds:0x917ea628,eax
  40b748:	mov    al,ds:0x8a83395b
  40b74d:	mov    eax,ds:0x42d1f7f8
  40b752:	mov    WORD PTR [esi+0x63d33103],cs
  40b758:	push   0xffffffba
  40b75a:	xor    ebp,edi
  40b75c:	push   ss
  40b75d:	shr    BYTE PTR [ebp+0x7b49dff1],0x8a
  40b764:	repnz mov ah,0xd7
  40b767:	ja     0x40b752
  40b769:	out    dx,eax
  40b76a:	mov    BYTE PTR [esi],ah
  40b76c:	and    bh,BYTE PTR ds:0xcd45f11f
  40b772:	mov    esp,0x86fa88a9
  40b777:	fdivp  st(1),st
  40b779:	retf   
  40b77a:	and    ch,dh
  40b77c:	add    ebp,DWORD PTR ds:[esi]
  40b77f:	fcomp  st(4)
  40b781:	sbb    dl,BYTE PTR [edi+0x4]
  40b784:	and    al,0x6a
  40b786:	or     dl,cl
  40b788:	int3   
  40b789:	clc    
  40b78a:	mov    edx,DWORD PTR [esi]
  40b78c:	out    dx,al
  40b78d:	xchg   esp,eax
  40b78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b78f:	push   es
  40b790:	push   ds
  40b791:	loopne 0x40b73b
  40b793:	inc    ebp
  40b794:	hlt    
  40b795:	daa    
  40b796:	adc    al,0x50
  40b798:	fisubr WORD PTR [ecx+0x44a0651f]
  40b79e:	in     al,dx
  40b79f:	mov    ecx,DWORD PTR ds:0xb62463eb
  40b7a5:	ret    
  40b7a6:	(bad)  
  40b7a7:	jno    0x40b7fc
  40b7a9:	(bad)  
  40b7ab:	pusha  
  40b7ac:	imul   ecx,DWORD PTR [edi+esi*2-0x2e],0x3b88dba7
  40b7b4:	push   esp
  40b7b5:	mov    ch,0xa3
  40b7b7:	scas   al,BYTE PTR es:[edi]
  40b7b8:	sub    al,0x17
  40b7ba:	push   edx
  40b7bb:	xlat   BYTE PTR ds:[ebx]
  40b7bc:	xor    BYTE PTR [edx+0x2d8bb98b],0xea
  40b7c3:	fs jmp 0x2eef:0x63873aa0
  40b7cb:	lds    ebx,FWORD PTR [edx]
  40b7cd:	jo     0x40b777
  40b7cf:	das    
  40b7d0:	call   0x63fe:0xb43ce130
  40b7d7:	mov    ecx,DWORD PTR [eax-0x157fa524]
  40b7dd:	and    ecx,0xffffffc8
  40b7e0:	inc    edx
  40b7e1:	enter  0x821c,0x55
  40b7e5:	dec    ecx
  40b7e6:	dec    ebp
  40b7e7:	xor    dl,BYTE PTR [edi+ebp*4]
  40b7ea:	sub    al,0x7
  40b7ec:	test   eax,0xf53bf270
  40b7f1:	sbb    ebp,DWORD PTR [ebx]
  40b7f3:	xor    eax,0x40f2a421
  40b7f8:	out    0x17,al
  40b7fa:	bound  ecx,QWORD PTR cs:[esi+ebp*1-0x42]
  40b7ff:	test   eax,0x79aecd45
  40b804:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b805:	cmc    
  40b806:	mov    BYTE PTR [eax+0x61],0x7f
  40b80a:	or     BYTE PTR [ecx+0x23],dl
  40b80d:	mov    cl,0x4c
  40b80f:	aam    0x2a
  40b811:	xor    DWORD PTR [ecx],esi
  40b813:	add    eax,0xfbe70b1
  40b818:	popa   
  40b819:	xor    eax,0x28fc420d
  40b81e:	push   ebx
  40b81f:	pop    ecx
  40b820:	jb     0x40b871
  40b822:	xor    al,0xb1
  40b824:	(bad)  
  40b825:	das    
  40b826:	adc    edx,DWORD PTR [edi+0x3a14dc7a]
  40b82c:	ret    
  40b82d:	fcomp  DWORD PTR [ebp+0x5c2dbacc]
  40b833:	sbb    dl,BYTE PTR [ebx-0x58]
  40b836:	fild   WORD PTR [ecx-0x3a]
  40b839:	(bad)  
  40b83b:	add    bl,BYTE PTR [edx+0x18e13f39]
  40b841:	sti    
  40b842:	repnz mov ebx,0xe5e047ca
  40b848:	nop
  40b849:	add    BYTE PTR [ebp+0x6886de52],ch
  40b84f:	sti    
  40b850:	mov    dh,0xed
  40b852:	repnz sbb ecx,DWORD PTR [ebp-0x6a1de7d8]
  40b859:	std    
  40b85a:	add    BYTE PTR ds:0x75dfc05,bh
  40b860:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b861:	jmp    0x7f80474d
  40b866:	push   ebx
  40b867:	in     al,0x27
  40b869:	aas    
  40b86a:	dec    esp
  40b86b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b86c:	mov    bl,0x9d
  40b86e:	or     eax,0x967d2992
  40b873:	sub    eax,0x4699ebb3
  40b879:	xor    DWORD PTR [edi],edx
  40b87b:	cld    
  40b87c:	xchg   ecx,eax
  40b87d:	sbb    DWORD PTR [ecx-0x44c40e55],edi
  40b883:	sub    cl,al
  40b885:	mov    ebx,0x6a0ebd16
  40b88a:	neg    DWORD PTR [edi+0x34]
  40b88d:	loop   0x40b89f
  40b88f:	sub    al,0x4e
  40b891:	(bad)  
  40b893:	cdq    
  40b894:	mov    es,ecx
  40b896:	pusha  
  40b897:	xor    eax,0x4d3487fb
  40b89c:	xor    BYTE PTR [ebx+0x171f079d],dh
  40b8a2:	sub    eax,0x3e9fe360
  40b8a7:	xor    eax,0x9a6ee8fb
  40b8ac:	jp     0x40b92d
  40b8ae:	push   ecx
  40b8af:	in     al,0x80
  40b8b1:	test   BYTE PTR [eax-0x5fc0c29f],cl
  40b8b7:	sub    esp,DWORD PTR [ebx+eax*2+0x67ec9915]
  40b8be:	sub    al,0x8f
  40b8c0:	imul   ebx,DWORD PTR [edi-0x790f886d],0xbcf102
  40b8ca:	aam    0x5
  40b8cc:	inc    ebp
  40b8cd:	fisttp DWORD PTR [ebx]
  40b8cf:	xor    eax,esp
  40b8d1:	les    edx,FWORD PTR [edi]
  40b8d3:	push   edi
  40b8d4:	cld    
  40b8d5:	xchg   ebp,eax
  40b8d6:	pop    ecx
  40b8d7:	shr    DWORD PTR [edx],cl
  40b8d9:	pop    esi
  40b8da:	sti    
  40b8db:	or     ebp,ebx
  40b8dd:	jne    0x40b8a0
  40b8df:	push   esp
  40b8e0:	mov    esi,0x652a2180
  40b8e5:	inc    ebx
  40b8e6:	mov    bl,0xdb
  40b8e8:	lahf   
  40b8e9:	imul   edi,esi,0x43
  40b8ec:	adc    ecx,ecx
  40b8ee:	xlat   BYTE PTR ds:[ebx]
  40b8ef:	mov    ds:0x77e5b562,eax
  40b8f4:	sub    al,0xce
  40b8f6:	scas   al,BYTE PTR es:[edi]
  40b8f7:	in     eax,0x5c
  40b8f9:	inc    ebp
  40b8fa:	xor    BYTE PTR [esi+0x2d],0x34
  40b8fe:	pop    ebx
  40b8ff:	stc    
  40b900:	xchg   ecx,eax
  40b901:	inc    esp
  40b902:	sbb    DWORD PTR fs:[esi-0x21],ebp
  40b906:	mov    DWORD PTR ds:0x6446775d,eax
  40b90c:	ja     0x40b8aa
  40b90e:	mov    ah,0x8a
  40b910:	loopne 0x40b8a3
  40b912:	jle    0x40b93e
  40b914:	fnsetpm(287 only) 
  40b916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b917:	call   esi
  40b919:	outs   dx,DWORD PTR ds:[esi]
  40b91a:	mov    edx,0xacef18b1
  40b920:	sbb    ah,BYTE PTR [ebp-0x51]
  40b923:	sti    
  40b924:	scas   eax,DWORD PTR es:[edi]
  40b925:	sbb    DWORD PTR [ebp+ebp*1+0x4cb9358a],eax
  40b92c:	mov    bl,0x2c
  40b92e:	shr    DWORD PTR [ebp+0x74],1
  40b931:	test   BYTE PTR [ebx+0x2e],cl
  40b934:	and    eax,DWORD PTR ds:0x9d77bc6f
  40b93a:	pop    es
  40b93b:	sbb    al,0x52
  40b93d:	pop    es
  40b93e:	jle    0x40b901
  40b940:	(bad)  
  40b942:	mov    ds:0x46c34f96,eax
  40b947:	mov    ah,0x6c
  40b949:	lods   eax,DWORD PTR ds:[esi]
  40b94a:	jbe    0x40b915
  40b94c:	cwde   
  40b94d:	adc    dl,ah
  40b94f:	rol    BYTE PTR [ebp-0x3069fd6a],cl
  40b955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b956:	adc    bl,bl
  40b958:	xor    bh,BYTE PTR [edx-0x4c]
  40b95b:	pop    esp
  40b95c:	dec    ebx
  40b95d:	push   edi
  40b95e:	out    0xf,eax
  40b960:	call   DWORD PTR [edi]
  40b962:	mov    ds:0xba9737f3,al
  40b967:	mov    bh,0x4
  40b969:	je     0x40b939
  40b96b:	jp     0x40b910
  40b96d:	jbe    0x40b961
  40b96f:	scas   eax,DWORD PTR es:[edi]
  40b970:	jo     0x40b943
  40b972:	out    dx,eax
  40b973:	mov    esi,0xaef6dd3f
  40b978:	or     ah,BYTE PTR [esi+0xf4fc142]
  40b97e:	mov    esp,0x15086ecc
  40b983:	pop    ds
  40b984:	pop    es
  40b985:	sbb    DWORD PTR [esi-0x51],edx
  40b988:	jne    0x40b91c
  40b98a:	inc    esp
  40b98b:	inc    edi
  40b98c:	dec    edx
  40b98d:	nop
  40b98e:	cs adc esp,esp
  40b991:	fldenv [edx+0x3afd7cef]
  40b997:	sbb    esi,edx
  40b999:	(bad)  
  40b99a:	xchg   edx,eax
  40b99b:	sub    BYTE PTR [edx-0x62],0xc3
  40b99f:	inc    edi
  40b9a0:	and    edi,DWORD PTR [edi+0x11]
  40b9a3:	jl     0x40b95d
  40b9a5:	pop    es
  40b9a6:	leave  
  40b9a7:	or     al,0x99
  40b9a9:	mov    esp,0x595388ef
  40b9ae:	outs   dx,DWORD PTR ds:[esi]
  40b9af:	mov    ah,0xac
  40b9b1:	jle    0x40ba04
  40b9b3:	adc    ebx,DWORD PTR [edx+ecx*1-0x586e42d0]
  40b9ba:	(bad)  
  40b9bb:	das    
  40b9bc:	xlat   BYTE PTR ds:[ebx]
  40b9bd:	and    BYTE PTR [ebp+0x7a],0x61
  40b9c1:	std    
  40b9c2:	in     al,0xb8
  40b9c4:	leave  
  40b9c5:	retf   0xafe3
  40b9c8:	das    
  40b9c9:	pop    ds
  40b9ca:	mov    eax,ds:0x26a2ba12
  40b9cf:	jl     0x40b9f1
  40b9d1:	das    
  40b9d2:	xchg   esi,eax
  40b9d3:	sbb    ecx,DWORD PTR [edx-0x6efeeaf6]
  40b9d9:	xchg   edx,eax
  40b9da:	loopne 0x40b9c6
  40b9dc:	fs push ebp
  40b9de:	push   ds
  40b9df:	cdq    
  40b9e0:	push   eax
  40b9e1:	mov    esi,0x6d809ac0
  40b9e6:	fidivr DWORD PTR [ebx+0x4abbcffd]
  40b9ec:	bound  ecx,QWORD PTR [bx+di+0x1a]
  40b9f0:	je     0x40b9e7
  40b9f2:	aam    0x92
  40b9f4:	leave  
  40b9f5:	inc    edi
  40b9f6:	nop
  40b9f7:	ja     0x40b997
  40b9f9:	add    BYTE PTR [edi-0x69],bh
  40b9fc:	dec    ebx
  40b9fd:	cdq    
  40b9fe:	arpl   sp,di
  40ba00:	cmp    ah,BYTE PTR [edx-0x12f2d220]
  40ba06:	into   
  40ba07:	loope  0x40ba2e
  40ba09:	scas   eax,DWORD PTR es:[edi]
  40ba0a:	imul   ebx,DWORD PTR [ecx],0x2c
  40ba0d:	leave  
  40ba0e:	and    cl,BYTE PTR [esi+0x9b80e70]
  40ba14:	mov    al,0x3
  40ba16:	into   
  40ba17:	xchg   esi,eax
  40ba18:	dec    edi
  40ba19:	test   DWORD PTR [edx],esi
  40ba1b:	je     0x40ba6a
  40ba1d:	sbb    BYTE PTR [edx+ecx*2+0x63832eb4],0x6e
  40ba25:	lods   al,BYTE PTR ds:[esi]
  40ba26:	fmul   st(3),st
  40ba28:	aam    0x1f
  40ba2a:	call   0xec647f08
  40ba2f:	sbb    eax,0x585635a5
  40ba34:	loopne 0x40ba6e
  40ba36:	sar    BYTE PTR [esi+0x7b],0x40
  40ba3a:	dec    ecx
  40ba3b:	mov    ?,esp
  40ba3d:	ins    BYTE PTR es:[edi],dx
  40ba3e:	mov    edx,ebx
  40ba40:	in     eax,dx
  40ba41:	jnp    0x40b9e1
  40ba43:	hlt    
  40ba44:	sub    ah,BYTE PTR [ebp-0x72]
  40ba47:	mov    gs,WORD PTR [esi]
  40ba49:	inc    ebx
  40ba4a:	push   edx
  40ba4b:	retf   0xa210
  40ba4e:	jne    0x40ba3f
  40ba50:	inc    ebp
  40ba51:	stos   BYTE PTR es:[edi],al
  40ba52:	inc    esp
  40ba53:	xchg   edx,eax
  40ba54:	jo     0x40ba8b
  40ba56:	or     eax,0x73431d10
  40ba5b:	lahf   
  40ba5c:	rol    DWORD PTR [eax-0x8],1
  40ba5f:	cld    
  40ba60:	mul    dl
  40ba62:	inc    eax
  40ba63:	popa   
  40ba64:	mov    dh,0x31
  40ba66:	je     0x40bac4
  40ba68:	inc    eax
  40ba69:	sti    
  40ba6a:	mov    BYTE PTR [ebx],dh
  40ba6c:	fisttp DWORD PTR [eax]
  40ba6e:	out    dx,al
  40ba6f:	shl    DWORD PTR [edx-0x647dd3ea],1
  40ba75:	mov    eax,0xf6449855
  40ba7a:	into   
  40ba7b:	push   es
  40ba7c:	mov    al,ds:0xc63f7a0b
  40ba81:	scas   eax,DWORD PTR es:[edi]
  40ba82:	jno    0x40baf9
  40ba84:	dec    eax
  40ba85:	sub    BYTE PTR [ebp-0x530a7c8d],dl
  40ba8b:	mov    edi,0x5e2edce6
  40ba90:	aaa    
  40ba91:	push   es
  40ba92:	mov    ebp,0xd2aa7439
  40ba97:	aam    0xd9
  40ba99:	dec    ebx
  40ba9a:	repnz mov dh,BYTE PTR [edx+0x7a]
  40ba9e:	add    al,0x11
  40baa0:	mov    WORD PTR [edi],gs
  40baa2:	inc    DWORD PTR [esi-0x4b]
  40baa5:	cdq    
  40baa6:	enter  0xa679,0xbe
  40baaa:	(bad)
  40baad:	ss fwait
  40baaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab0:	inc    ebx
  40bab1:	push   0xffffffd3
  40bab3:	mov    bl,0xc9
  40bab5:	cmp    DWORD PTR [eax+ebx*2+0x3b],0x5e
  40baba:	xor    BYTE PTR [bp+si+0xe],bl
  40babe:	cwde   
  40babf:	mov    al,ds:0xa5ee748b
  40bac4:	adc    al,bh
  40bac6:	jmp    0x3735:0x5e47fac1
  40bacd:	popf   
  40bace:	imul   ebp,DWORD PTR [ecx+0xea6c66],0x79
  40bad5:	xchg   esi,eax
  40bad6:	xchg   esi,eax
  40bad7:	jae    0x40bb32
  40bad9:	jb     0x40baf8
  40badb:	adc    al,0x77
  40badd:	aas    
  40bade:	sbb    DWORD PTR [edi+0x49246573],eax
  40bae4:	jge    0x40bb15
  40bae6:	jbe    0x40bab4
  40bae8:	pop    esi
  40bae9:	adc    DWORD PTR [edx-0x7b1c50b6],ecx
  40baef:	mov    ah,0xb7
  40baf1:	jle    0x40bae1
  40baf3:	ja     0x40bb40
  40baf5:	or     al,0xb
  40baf7:	pop    esp
  40baf8:	fcomp  QWORD PTR [ebp+0x2e]
  40bafb:	mov    dl,0x89
  40bafd:	mov    ds:0x76bacc25,eax
  40bb02:	in     eax,dx
  40bb03:	dec    eax
  40bb04:	pop    edx
  40bb05:	iret   
  40bb06:	or     DWORD PTR [eax],ebp
  40bb08:	sbb    eax,0x4ca886e1
  40bb0d:	xchg   edi,eax
  40bb0e:	mov    cl,ch
  40bb10:	jno    0x40bb1f
  40bb12:	xlat   BYTE PTR ds:[ebx]
  40bb13:	cmc    
  40bb14:	pop    es
  40bb15:	pop    ecx
  40bb16:	leave  
  40bb17:	pop    ss
  40bb18:	pop    ds
  40bb19:	add    al,0xc5
  40bb1b:	loop   0x40bb89
  40bb1d:	loop   0x40bb93
  40bb1f:	add    al,0x78
  40bb21:	stos   BYTE PTR es:[edi],al
  40bb22:	mov    esi,ebx
  40bb24:	mov    ah,0xb7
  40bb26:	push   ss
  40bb27:	jecxz  0x40bb85
  40bb29:	and    DWORD PTR [ebx+ebp*1-0x41],eax
  40bb2d:	in     al,0xb4
  40bb2f:	sahf   
  40bb30:	inc    edi
  40bb31:	scas   al,BYTE PTR es:[edi]
  40bb32:	adc    ch,BYTE PTR [edi-0x7a3821b8]
  40bb38:	bound  esi,QWORD PTR [eax+0xe]
  40bb3b:	icebp  
  40bb3c:	xor    cl,ch
  40bb3e:	dec    esi
  40bb3f:	mov    edi,0xf1fd50c6
  40bb44:	fdivr  QWORD PTR [ebp+0x3aa368ec]
  40bb4a:	inc    ecx
  40bb4b:	mov    esi,0xa190aca
  40bb50:	sbb    ax,0x2720
  40bb54:	aam    0xd3
  40bb56:	pop    es
  40bb57:	imul   esi,DWORD PTR [ebp+edx*2+0x5c],0x78505e5e
  40bb5f:	stos   BYTE PTR es:[edi],al
  40bb60:	test   DWORD PTR [edx+ebp*4+0x3317f297],esi
  40bb67:	ds pop ebp
  40bb69:	in     al,0xb1
  40bb6b:	stc    
  40bb6c:	mov    ch,0xb6
  40bb6e:	mov    ebx,0x57afe02a
  40bb73:	fwait
  40bb74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb75:	ret    0xf604
  40bb78:	or     al,0x52
  40bb7a:	add    eax,0x93a7ee7f
  40bb7f:	div    BYTE PTR [eax-0x6ef33ade]
  40bb85:	adc    DWORD PTR ds:0x37932931,esp
  40bb8b:	xor    edx,DWORD PTR gs:[eax]
  40bb8e:	push   0x49
  40bb90:	or     ecx,edx
  40bb92:	out    0xf1,al
  40bb94:	push   0xfffffff7
  40bb96:	push   edx
  40bb97:	and    DWORD PTR [ecx+0x34c1f0b7],0x38804667
  40bba1:	cmp    DWORD PTR gs:[ecx],edi
  40bba4:	and    ebp,DWORD PTR [bx]
  40bba7:	jmp    DWORD PTR [esi]
  40bba9:	aam    0x4a
  40bbab:	add    al,0xdd
  40bbad:	jp     0x40bb66
  40bbaf:	adc    edi,DWORD PTR [eax]
  40bbb1:	shl    DWORD PTR [edi],0xd0
  40bbb4:	jmp    0x8b4ace11
  40bbb9:	dec    ecx
  40bbba:	call   0x598b:0xe6acd857
  40bbc1:	mov    DWORD PTR [edi+edi*2-0x1f],ecx
  40bbc5:	push   cs
  40bbc6:	jmp    0x40bc43
  40bbc8:	jmp    0x8ea4:0x7b047eb5
  40bbcf:	stos   DWORD PTR es:[edi],eax
  40bbd0:	mov    ah,0x15
  40bbd2:	inc    eax
  40bbd3:	pop    ds
  40bbd4:	mov    esp,0x3051dee5
  40bbd9:	xchg   DWORD PTR [eax-0x18],edi
  40bbdc:	sar    DWORD PTR [edx+0x51],1
  40bbdf:	and    DWORD PTR [eax+0x63553cb1],ebx
  40bbe5:	cwde   
  40bbe6:	push   cs
  40bbe7:	sbb    al,0x0
  40bbe9:	(bad)  
  40bbea:	mov    eax,DWORD PTR [edi]
  40bbec:	out    0x3c,al
  40bbee:	jne    0x40bb78
  40bbf0:	inc    eax
  40bbf1:	xchg   DWORD PTR [edx-0x4],eax
  40bbf4:	dec    esi
  40bbf5:	inc    ecx
  40bbf6:	iret   
  40bbf7:	out    0xdd,eax
  40bbf9:	call   0x90e7:0x8740982f
  40bc00:	mov    eax,0xc2818e2d
  40bc05:	test   ebp,esi
  40bc07:	and    BYTE PTR [ebx],dh
  40bc09:	push   ds
  40bc0a:	mov    dh,BYTE PTR [ebx+0x59]
  40bc0d:	xor    DWORD PTR [ebp-0x79d2a6b],esi
  40bc13:	sbb    eax,0x5223796e
  40bc18:	out    0x12,eax
  40bc1a:	idiv   ch
  40bc1c:	pop    ebx
  40bc1d:	and    DWORD PTR [eax+0x1b],edi
  40bc20:	(bad)  
  40bc21:	jae    0x40bc4a
  40bc23:	cli    
  40bc24:	pop    ds
  40bc25:	and    eax,edx
  40bc27:	push   eax
  40bc28:	xchg   BYTE PTR [edi-0x63e3f78c],cl
  40bc2e:	js     0x40bc45
  40bc30:	mov    ecx,0x43a650c7
  40bc35:	sub    BYTE PTR [ebx+0xe98edd0],al
  40bc3b:	mov    ah,0xea
  40bc3d:	loope  0x40bc5e
  40bc3f:	in     eax,dx
  40bc40:	sbb    DWORD PTR [eax-0x5],0x51
  40bc44:	jl     0x40bca3
  40bc46:	xchg   edi,eax
  40bc47:	(bad)  
  40bc48:	stos   DWORD PTR es:[edi],eax
  40bc49:	or     eax,0xa579679b
  40bc4e:	scas   al,BYTE PTR es:[edi]
  40bc4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc50:	mov    bl,0x74
  40bc52:	(bad)  
  40bc53:	cmp    cl,BYTE PTR [esi-0x17221eb8]
  40bc59:	fistp  WORD PTR [esi+0x9]
  40bc5c:	mov    dl,0x26
  40bc5e:	xlat   BYTE PTR ds:[ebx]
  40bc5f:	pop    edi
  40bc60:	pusha  
  40bc61:	dec    esp
  40bc62:	dec    edx
  40bc63:	pop    es
  40bc64:	int    0x5b
  40bc66:	in     eax,0x1e
  40bc68:	jmp    0x2e279985
  40bc6d:	dec    ecx
  40bc6e:	push   eax
  40bc6f:	retfw  
  40bc71:	mov    edx,eax
  40bc73:	add    ah,BYTE PTR [ebx+0x74]
  40bc76:	push   ds
  40bc77:	mov    al,0xf3
  40bc79:	das    
  40bc7a:	sbb    eax,0x411ac147
  40bc7f:	ror    DWORD PTR [esi-0x78],0x5e
  40bc83:	in     eax,0xcc
  40bc85:	xchg   ebp,eax
  40bc86:	(bad)  
  40bc87:	stos   DWORD PTR es:[edi],eax
  40bc88:	loopne 0x40bcc5
  40bc8a:	adc    BYTE PTR [edi-0x34],dh
  40bc8d:	lods   eax,DWORD PTR ds:[esi]
  40bc8e:	sub    DWORD PTR [edx],0xb96e022e
  40bc94:	mov    eax,0x93f961f0
  40bc99:	xor    BYTE PTR fs:[eax+esi*1-0x594e03f8],0x2d
  40bca2:	fisttp DWORD PTR [ebp-0x5d]
  40bca5:	ret    0xf8a9
  40bca8:	jno    0x40bc86
  40bcaa:	fist   WORD PTR [esi+edx*4]
  40bcad:	cmp    ebp,edi
  40bcaf:	sbb    ecx,DWORD PTR [ecx-0x26]
  40bcb2:	fucomp st(4)
  40bcb4:	sbb    DWORD PTR [ecx],esp
  40bcb6:	mov    esi,0x5e7bc982
  40bcbb:	cmp    cl,BYTE PTR [edx+0x1014dded]
  40bcc1:	jno    0x40bcc9
  40bcc3:	mov    es,WORD PTR [ebx-0x60eedb3]
  40bcc9:	mov    cl,0x19
  40bccb:	mov    ds:0x7a76b85d,al
  40bcd0:	test   al,0x4c
  40bcd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bcd3:	es xchg esp,eax
  40bcd5:	mov    edi,0xee40bc2c
  40bcda:	cmc    
  40bcdb:	jmp    0x40bce1
  40bcdd:	add    al,0x3c
  40bcdf:	sbb    ebx,edx
  40bce1:	xor    edx,DWORD PTR [ecx]
  40bce3:	das    
  40bce4:	fwait
  40bce5:	hlt    
  40bce6:	dec    ebx
  40bce7:	or     BYTE PTR [eax+0xc30fcc2],ch
  40bced:	in     eax,0xf
  40bcef:	int3   
  40bcf0:	into   
  40bcf1:	retf   0x4a8d
  40bcf4:	adc    bh,dh
  40bcf6:	inc    edx
  40bcf7:	adc    BYTE PTR ds:0x52bd248a,dl
  40bcfd:	jmp    DWORD PTR [ebx+esi*8-0x5d8ed964]
  40bd04:	add    al,0xbe
  40bd06:	xchg   esi,eax
  40bd07:	mov    eax,ds:0x3d8782c
  40bd0c:	mov    bl,0x50
  40bd0e:	cmc    
  40bd0f:	mov    dh,0xa4
  40bd11:	hlt    
  40bd12:	mov    ebx,0xb8f3fd35
  40bd17:	push   0x93291571
  40bd1c:	or     edx,ebp
  40bd1e:	dec    ebp
  40bd1f:	mov    DWORD PTR [eax],esi
  40bd21:	push   ecx
  40bd22:	int3   
  40bd23:	in     al,0x1f
  40bd25:	xor    al,0x69
  40bd27:	(bad)  
  40bd28:	not    edi
  40bd2a:	pop    esp
  40bd2b:	and    eax,0x214dd053
  40bd30:	mov    al,ds:0x1a965aaa
  40bd35:	cmp    eax,0x9fd572da
  40bd3a:	jecxz  0x40bd78
  40bd3c:	pop    es
  40bd3d:	sti    
  40bd3e:	jns    0x40bcd4
  40bd40:	mov    WORD PTR [eax],cs
  40bd42:	mov    ebx,0x4120887
  40bd47:	mov    dl,0x72
  40bd49:	push   0x924b29a
  40bd4e:	mov    eax,ds:0xece83f0e
  40bd53:	call   0xf2a6:0x5a0b47f2
  40bd5a:	mov    gs,WORD PTR ds:0x9e4e5484
  40bd60:	sbb    eax,0xd5d4b232
  40bd65:	sub    cl,BYTE PTR [ecx]
  40bd67:	sub    edi,DWORD PTR [ebp+0x3d]
  40bd6a:	sbb    al,0x7a
  40bd6c:	inc    edx
  40bd6d:	sbb    eax,0x6d118d5b
  40bd72:	aad    0xd2
  40bd74:	das    
  40bd75:	pop    ebp
  40bd76:	sub    eax,0x6e6ecd83
  40bd7b:	add    dl,BYTE PTR [eax-0x70]
  40bd7e:	dec    eax
  40bd7f:	mov    DWORD PTR [ebx+0x7dde378c],ecx
  40bd85:	fmul   st(2),st
  40bd87:	xor    ebx,DWORD PTR [edi+0x5c]
  40bd8a:	xchg   esi,eax
  40bd8b:	dec    eax
  40bd8c:	mov    ds:0xb0ceec44,eax
  40bd91:	vcvtdq2ps ymm6,YMMWORD PTR [eax*2-0x760fcef7]
  40bd9a:	dec    eax
  40bd9b:	in     eax,dx
  40bd9c:	in     al,0xb4
  40bd9e:	push   eax
  40bd9f:	mov    edx,0x9de8af1a
  40bda4:	cmp    BYTE PTR [ebp+ecx*4-0x48],dl
  40bda8:	loopne 0x40be19
  40bdaa:	lods   al,BYTE PTR ds:[esi]
  40bdab:	dec    ebx
  40bdac:	adc    eax,0xf3f10b45
  40bdb1:	xchg   ebx,eax
  40bdb2:	dec    esi
  40bdb3:	loope  0x40bd3e
  40bdb5:	aam    0xd6
  40bdb7:	stos   DWORD PTR es:[edi],eax
  40bdb8:	out    0x1d,eax
  40bdba:	lahf   
  40bdbb:	outs   dx,BYTE PTR ds:[esi]
  40bdbc:	out    0xee,al
  40bdbe:	das    
  40bdbf:	ret    
  40bdc0:	adc    BYTE PTR [eax-0x705b4cfa],ch
  40bdc6:	push   0x3d
  40bdc8:	icebp  
  40bdc9:	xchg   ebp,eax
  40bdca:	data16 mov BYTE PTR [ebx-0x7a6dc7f4],cl
  40bdd1:	inc    edi
  40bdd2:	popf   
  40bdd3:	outs   dx,DWORD PTR ds:[esi]
  40bdd4:	xchg   BYTE PTR [edx],ch
  40bdd6:	xor    BYTE PTR ds:[ebp-0x56],cl
  40bdda:	or     DWORD PTR ds:[esi+0x7f3936a2],ebx
  40bde1:	xchg   esi,eax
  40bde2:	pop    eax
  40bde3:	les    ecx,FWORD PTR [ebx+0x70]
  40bde6:	rcl    BYTE PTR [ebx+eiz*4-0x2b],0xc7
  40bdeb:	add    DWORD PTR [ecx-0x62c2796a],ebx
  40bdf1:	mov    BYTE PTR gs:[edx-0x79],ah
  40bdf5:	addr16 push esi
  40bdf7:	aam    0xb9
  40bdf9:	or     dl,BYTE PTR [ebx-0x6f]
  40bdfc:	adc    al,0x25
  40bdfe:	aad    0xd0
  40be00:	stos   BYTE PTR es:[edi],al
  40be01:	aam    0x1d
  40be03:	jp     0x40bdd9
  40be05:	scas   al,BYTE PTR es:[edi]
  40be06:	test   DWORD PTR [ebx-0x175235a9],esi
  40be0c:	mov    ch,0xa7
  40be0e:	jmp    0x40be20
  40be10:	cmp    dl,ah
  40be12:	into   
  40be13:	shl    DWORD PTR [edx],1
  40be15:	inc    BYTE PTR [esi]
  40be17:	xchg   ebp,eax
  40be18:	(bad)  
  40be19:	sti    
  40be1a:	ss cdq 
  40be1c:	ins    BYTE PTR es:[edi],dx
  40be1d:	sahf   
  40be1e:	outs   dx,BYTE PTR ds:[esi]
  40be1f:	xor    eax,0x8ab2026b
  40be24:	ficom  WORD PTR [eax]
  40be26:	neg    BYTE PTR [edi-0x56]
  40be29:	and    DWORD PTR [ebp-0x3609d3a3],0xffffff90
  40be30:	enter  0x91eb,0x1f
  40be34:	mov    ecx,0x91ef937f
  40be39:	shl    BYTE PTR ds:0x3d1ceb7c,1
  40be3f:	stos   DWORD PTR es:[edi],eax
  40be40:	ret    0x7cc8
  40be43:	jns    0x40be22
  40be45:	mov    eax,ds:0x90d9740f
  40be4a:	xchg   ecx,eax
  40be4b:	xchg   BYTE PTR ss:[ebp-0x2945a3a0],dl
  40be52:	jmp    0x919c3712
  40be57:	mov    dh,0xc0
  40be59:	(bad)  
  40be5a:	loop   0x40bdf8
  40be5c:	mov    bl,0xe3
  40be5e:	mov    esp,0xd78f5f7e
  40be63:	lahf   
  40be64:	loop   0x40be90
  40be66:	pop    ebp
  40be67:	sbb    eax,0xa4d8719f
  40be6c:	div    DWORD PTR [ebx+ecx*2]
  40be6f:	scas   al,BYTE PTR es:[edi]
  40be70:	dec    ecx
  40be71:	mov    bh,cl
  40be73:	push   esp
  40be74:	push   ecx
  40be75:	xlat   BYTE PTR ds:[ebx]
  40be76:	repz aaa 
  40be78:	out    0x6e,al
  40be7a:	sub    eax,DWORD PTR [esp+eax*8-0x558b031a]
  40be81:	jl     0x40be0f
  40be83:	test   BYTE PTR [eax-0x438fadb3],ch
  40be89:	shr    DWORD PTR [ecx+0x49],cl
  40be8c:	lea    esp,[ecx+0x4d]
  40be8f:	out    dx,al
  40be90:	aas    
  40be91:	adc    edi,DWORD PTR ds:0x8de9b8f
  40be97:	(bad)  
  40be98:	into   
  40be99:	sbb    BYTE PTR [ebp+0x5db5bfb5],al
  40be9f:	in     al,dx
  40bea0:	imul   ebp,DWORD PTR [ebp+0xa55028e],0xf9dd91d5
  40beaa:	xor    DWORD PTR [ecx-0x75],esi
  40bead:	jbe    0x40bee1
  40beaf:	pop    esp
  40beb0:	adc    DWORD PTR [ecx+0x424e5d6d],esi
  40beb6:	dec    eax
  40beb7:	mov    eax,0x9c9ca4ce
  40bebc:	cdq    
  40bebd:	pop    esp
  40bebe:	cmp    eax,0x23da228a
  40bec3:	dec    ecx
  40bec4:	mov    ah,0x4e
  40bec6:	pop    esi
  40bec7:	push   cs
  40bec8:	rol    BYTE PTR ds:[esi+0x10],cl
  40becc:	sbb    ax,dx
  40becf:	lea    ebx,[edi+ebx*2+0x5e]
  40bed3:	add    BYTE PTR [ebx-0x78],bl
  40bed6:	stos   BYTE PTR es:[edi],al
  40bed7:	shr    DWORD PTR [ebx+eiz*8+0x3a],0xe2
  40bedc:	jno    0x40bef7
  40bede:	mov    ecx,0xf85674fb
  40bee3:	inc    ecx
  40bee4:	push   esp
  40bee5:	cmp    eax,0x6e865705
  40beea:	xchg   DWORD PTR es:[ebx+0x4efc0d0],esp
  40bef1:	mov    eax,0x27f6f763
  40bef7:	xchg   esp,eax
  40bef8:	inc    eax
  40bef9:	das    
  40befa:	push   es
  40befb:	and    cl,BYTE PTR [esi-0x27]
  40befe:	bswap  ebx
  40bf00:	xchg   esp,eax
  40bf01:	inc    esi
  40bf02:	mov    bl,BYTE PTR [ecx-0x4b3a31b5]
  40bf08:	inc    ebx
  40bf09:	stos   DWORD PTR es:[edi],eax
  40bf0a:	shl    BYTE PTR [ebx+0x1fa01f45],1
  40bf10:	xchg   ecx,eax
  40bf11:	sub    DWORD PTR [ebx],0xe
  40bf14:	mov    al,0x21
  40bf16:	shl    BYTE PTR [edx],1
  40bf18:	ins    BYTE PTR es:[edi],dx
  40bf19:	xor    esp,DWORD PTR [eax+ecx*8]
  40bf1c:	lea    eax,[ebp+0x6dc2934c]
  40bf22:	mov    edi,0x6c610e02
  40bf27:	scas   eax,DWORD PTR es:[edi]
  40bf28:	mov    ebp,0x444dcb5c
  40bf2d:	adc    eax,0x831416b1
  40bf32:	xchg   ecx,eax
  40bf33:	sbb    esi,DWORD PTR [edi-0x37]
  40bf36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf37:	test   ebx,eax
  40bf39:	cmp    DWORD PTR [edi+0x5f338b13],eax
  40bf3f:	retf   
  40bf40:	frstor [edx+0x46810559]
  40bf46:	mov    ebx,0xc4b6dcf
  40bf4b:	mov    ebp,0x64296c5a
  40bf50:	sub    BYTE PTR [esi-0x10],ch
  40bf53:	shl    BYTE PTR [ebp+0x166f50d0],1
  40bf59:	iret   
  40bf5a:	mov    dh,BYTE PTR [eax-0x2f]
  40bf5d:	xor    BYTE PTR [esi+0x431feb5b],0xf6
  40bf64:	dec    edx
  40bf65:	imul   ecx,DWORD PTR [eax],0x1818c640
  40bf6b:	call   0x5c6c8cca
  40bf70:	lds    eax,FWORD PTR [bx+di]
  40bf73:	mov    DWORD PTR [edx],ebx
  40bf75:	stc    
  40bf76:	xchg   edi,eax
  40bf77:	dec    eax
  40bf78:	mov    bh,0x8
  40bf7a:	mov    bl,0x8c
  40bf7c:	stos   DWORD PTR es:[edi],eax
  40bf7d:	fisub  WORD PTR [eax+0x15]
  40bf80:	jmp    0x40bf75
  40bf82:	fmulp  st(2),st
  40bf84:	inc    edx
  40bf85:	pop    esi
  40bf86:	sub    bh,BYTE PTR [eax-0x45]
  40bf89:	mov    WORD PTR [ecx+0x2e],ss
  40bf8c:	mov    ds:0xffe79af4,eax
  40bf91:	mov    gs:0xcc613751,eax
  40bf97:	es mov dh,0xc2
  40bf9a:	cdq    
  40bf9b:	sbb    bl,0xec
  40bf9e:	hlt    
  40bf9f:	mov    WORD PTR [ecx-0x5661da0d],ds
  40bfa5:	pop    es
  40bfa6:	mov    ecx,0x8c3c1ed2
  40bfab:	(bad)  
  40bfac:	mov    edx,0x5520c740
  40bfb1:	mov    bl,ch
  40bfb3:	mov    ah,0xc6
  40bfb5:	pop    esi
  40bfb6:	lods   eax,DWORD PTR ds:[esi]
  40bfb7:	mov    al,ds:0xeec94909
  40bfbc:	fnstsw WORD PTR [edi]
  40bfbe:	shr    BYTE PTR [ebp+esi*4-0x4ba05313],1
  40bfc5:	cmp    al,BYTE PTR [esi+0x21b4cc1e]
  40bfcb:	scas   al,BYTE PTR es:[edi]
  40bfcc:	ja     0x40c026
  40bfce:	jg     0x40bfbd
  40bfd0:	sahf   
  40bfd1:	jo     0x40c043
  40bfd3:	dec    ebx
  40bfd4:	push   es
  40bfd5:	scas   eax,DWORD PTR es:[edi]
  40bfd6:	mov    esi,0xf32d33f1
  40bfdb:	pop    edi
  40bfdc:	lahf   
  40bfdd:	mov    ch,0x30
  40bfdf:	fbld   TBYTE PTR [ecx+0x1eb89447]
  40bfe5:	cmp    al,BYTE PTR ds:0x9c543171
  40bfeb:	scas   al,BYTE PTR es:[edi]
  40bfec:	cmp    dl,BYTE PTR [ebx-0xf15ff9]
  40bff2:	inc    ecx
  40bff3:	lods   eax,DWORD PTR ds:[esi]
  40bff4:	xor    BYTE PTR [ecx+edx*8-0x214c319d],ah
  40bffb:	or     esp,ebp
  40bffd:	out    0x13,al
  40bfff:	fstp   TBYTE PTR [ecx]
  40c001:	pop    edi
  40c002:	or     al,BYTE PTR [edx]
  40c004:	fsub   st,st(3)
  40c006:	test   BYTE PTR [edx],ch
  40c008:	jmp    0x9482079c
  40c00d:	sub    DWORD PTR [ebp-0x1dbef62],ebp
  40c013:	xchg   esp,eax
  40c014:	icebp  
  40c015:	push   ss
  40c016:	mov    esi,0x41290feb
  40c01b:	adc    al,BYTE PTR [ebx+0x7c1666ac]
  40c021:	pop    ss
  40c022:	cs shl eax,0x19
  40c026:	out    0x11,al
  40c028:	test   DWORD PTR [ecx+0x74],edi
  40c02b:	push   ebx
  40c02c:	pop    esp
  40c02d:	shl    DWORD PTR [ebx+0x5],1
  40c030:	push   esp
  40c031:	iret   
  40c032:	lods   al,BYTE PTR ds:[esi]
  40c033:	xchg   BYTE PTR [edx],al
  40c035:	pop    eax
  40c036:	xchg   ebp,eax
  40c037:	out    dx,eax
  40c038:	jl     0x40c0b8
  40c03a:	out    0x80,al
  40c03c:	xor    BYTE PTR [edx+esi*4],bl
  40c03f:	add    DWORD PTR [esi+0x71],ecx
  40c042:	push   ecx
  40c043:	mov    al,0x60
  40c045:	push   ebp
  40c046:	sbb    ebx,DWORD PTR [ebx]
  40c048:	ins    DWORD PTR es:[edi],dx
  40c049:	push   ss
  40c04a:	and    eax,0x1b47126c
  40c04f:	in     eax,dx
  40c050:	xchg   BYTE PTR [edi+0x11],cl
  40c053:	sbb    dh,ah
  40c055:	sti    
  40c056:	sbb    al,dh
  40c058:	aam    0x56
  40c05a:	mov    ah,0x4f
  40c05c:	mov    bh,0x42
  40c05e:	les    ecx,FWORD PTR [esi]
  40c060:	pop    ds
  40c061:	test   al,0x9e
  40c063:	add    eax,DWORD PTR [eax]
  40c065:	(bad)  
  40c066:	jno    0x40c054
  40c068:	mov    ch,0xad
  40c06a:	jae    0x40c099
  40c06c:	lds    ebx,FWORD PTR ds:0x45044de5
  40c072:	int    0xba
  40c074:	jne    0x40c0f1
  40c076:	outs   dx,DWORD PTR ds:[esi]
  40c077:	xchg   ebp,eax
  40c078:	je     0x40c00e
  40c07a:	fnsave [eax-0x6e]
  40c07d:	sahf   
  40c07e:	rol    DWORD PTR [edi],1
  40c080:	call   0xd9aaeba0
  40c085:	shr    al,cl
  40c087:	mov    dl,0xb3
  40c089:	loope  0x40c0c0
  40c08b:	xlat   BYTE PTR ds:[ebx]
  40c08c:	call   0xd0e0:0x8ac4f0df
  40c093:	and    al,0x43
  40c095:	or     dl,BYTE PTR [eax-0x55]
  40c098:	and    BYTE PTR [ecx],bh
  40c09a:	add    eax,0x96a1090b
  40c09f:	pop    es
  40c0a0:	lock out dx,eax
  40c0a2:	int3   
  40c0a3:	cmp    al,bh
  40c0a5:	enter  0x4bb1,0x67
  40c0a9:	ret    0xcbd0
  40c0ac:	mov    ecx,esp
  40c0ae:	js     0x40c05e
  40c0b0:	push   0xffffffdd
  40c0b2:	xlat   BYTE PTR ds:[ebx]
  40c0b3:	pop    edx
  40c0b4:	and    ebx,DWORD PTR [ecx+0x704c4b3f]
  40c0ba:	dec    eax
  40c0bb:	das    
  40c0bc:	loop   0x40c0ca
  40c0be:	jno    0x40c0b3
  40c0c0:	and    BYTE PTR [edi-0x5210028a],cl
  40c0c6:	pop    eax
  40c0c7:	and    eax,0x7f1c1c51
  40c0cc:	inc    ebp
  40c0cd:	dec    esi
  40c0ce:	das    
  40c0cf:	sar    bh,cl
  40c0d1:	or     BYTE PTR [ebp+0x32f35829],cl
  40c0d7:	jnp    0x40c13c
  40c0d9:	push   es
  40c0da:	and    al,BYTE PTR [ecx+0x3f]
  40c0dd:	popf   
  40c0de:	inc    eax
  40c0df:	in     al,0x8b
  40c0e1:	sbb    DWORD PTR [ecx+0x4],0x6e
  40c0e5:	xor    ah,BYTE PTR ds:0xcbc8be23
  40c0eb:	loope  0x40c14a
  40c0ed:	mov    ah,0xcc
  40c0ef:	test   al,0xe1
  40c0f1:	fcmovu st,st(0)
  40c0f3:	jnp    0x40c0aa
  40c0f5:	push   edi
  40c0f6:	ins    BYTE PTR es:[edi],dx
  40c0f7:	arpl   dx,cx
  40c0f9:	sbb    BYTE PTR ds:0xdc2599b5,cl
  40c0ff:	fild   WORD PTR [esi+0x41]
  40c102:	into   
  40c103:	xor    eax,0x1d79c41f
  40c108:	sbb    ecx,eax
  40c10a:	sub    edi,DWORD PTR [eax]
  40c10c:	(bad)  
  40c10d:	bound  ecx,QWORD PTR [ebp+0xf]
  40c110:	adc    al,0xc3
  40c112:	fistp  QWORD PTR [edi-0x69beaa8c]
  40c118:	sub    esp,esp
  40c11a:	push   edi
  40c11b:	leave  
  40c11c:	xchg   edx,eax
  40c11d:	fs ins DWORD PTR es:[edi],dx
  40c11f:	sub    cl,BYTE PTR [esi+0x2e7d3c5d]
  40c125:	add    esp,DWORD PTR [ebp-0x2a]
  40c128:	mov    DWORD PTR [eax+0x1e919ea3],edi
  40c12e:	mov    dh,0x2c
  40c130:	out    dx,eax
  40c131:	dec    ebp
  40c132:	add    ebp,DWORD PTR [ebx+0x4d]
  40c135:	frstor [ecx-0x3307d7c3]
  40c13b:	stos   BYTE PTR es:[edi],al
  40c13c:	popf   
  40c13d:	sub    DWORD PTR [ebx],esi
  40c13f:	lods   eax,DWORD PTR ds:[esi]
  40c140:	fistp  WORD PTR [ecx-0x754271ee]
  40c146:	lar    edi,WORD PTR [ebx+eiz*4+0x7f3ed560]
  40c14e:	(bad)
  40c151:	ss push ds
  40c153:	push   eax
  40c154:	add    ebp,edx
  40c156:	sbb    dh,cl
  40c158:	dec    eax
  40c159:	sub    dh,dh
  40c15b:	xchg   esp,eax
  40c15c:	stc    
  40c15d:	mul    bh
  40c15f:	mov    esi,ebx
  40c161:	std    
  40c162:	inc    edx
  40c163:	pop    edi
  40c164:	in     al,0x6f
  40c166:	rcl    BYTE PTR [ebx+0x25e689cb],0xe9
  40c16d:	je     0x40c1dc
  40c16f:	xor    al,0x1b
  40c171:	cli    
  40c172:	mov    eax,0x3bbbd724
  40c177:	jecxz  0x40c119
  40c179:	sub    DWORD PTR [esi-0x6e2c6d5f],ebp
  40c17f:	in     eax,0x48
  40c181:	or     dh,ah
  40c183:	hlt    
  40c184:	pop    es
  40c185:	sbb    DWORD PTR [esi+eiz*2+0x44c9e89c],edi
  40c18c:	mov    bh,0x85
  40c18e:	test   eax,0x2add0559
  40c193:	test   DWORD PTR [ebx],0x10ffb65d
  40c199:	add    eax,0x223c37ad
  40c19e:	outs   dx,BYTE PTR ds:[esi]
  40c19f:	nop
  40c1a0:	pop    eax
  40c1a1:	pop    ds
  40c1a2:	mov    ch,0x6a
  40c1a4:	cmp    al,0x9f
  40c1a6:	jmp    0x84639700
  40c1ab:	pop    ss
  40c1ac:	cdq    
  40c1ad:	stos   DWORD PTR es:[edi],eax
  40c1ae:	dec    edx
  40c1af:	sub    eax,0x2409b2f0
  40c1b4:	call   FWORD PTR ss:[ebx]
  40c1b7:	push   ds
  40c1b8:	pop    eax
  40c1b9:	js     0x40c16e
  40c1bb:	in     al,dx
  40c1bc:	adc    dh,BYTE PTR [edx-0xf]
  40c1bf:	xor    ecx,DWORD PTR [edi+0x6cb54011]
  40c1c5:	sar    al,0xca
  40c1c8:	push   cs
  40c1c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1ca:	loope  0x40c1cd
  40c1cc:	(bad)  
  40c1ce:	and    ecx,edx
  40c1d0:	mov    ebp,0xe5a5a4a6
  40c1d6:	push   ebx
  40c1d7:	and    eax,0x4b5a7893
  40c1dc:	mov    ds:0xf3db5c24,al
  40c1e1:	cmp    DWORD PTR [esi-0x52],0x54
  40c1e5:	mov    dl,BYTE PTR [edi-0x42e5f7ce]
  40c1eb:	add    DWORD PTR [ebx],ebx
  40c1ed:	lods   al,BYTE PTR ds:[esi]
  40c1ee:	clc    
  40c1ef:	(bad)  
  40c1f0:	test   al,0xe3
  40c1f2:	fcom   DWORD PTR [edi+0x5c]
  40c1f5:	sbb    ebp,DWORD PTR [ebx+0x1cf47c98]
  40c1fb:	adc    DWORD PTR [ebp+0x70],edx
  40c1fe:	fisubr DWORD PTR [ecx-0x3ad4f518]
  40c204:	aad    0xb3
  40c206:	or     eax,0x8dec0bd0
  40c20b:	mov    dl,0xe2
  40c20d:	and    al,0xc9
  40c20f:	iret   
  40c210:	push   ebx
  40c211:	and    BYTE PTR [eax],ah
  40c213:	inc    esp
  40c214:	test   esi,eax
  40c216:	pop    es
  40c217:	xor    al,0x9b
  40c219:	sahf   
  40c21a:	xor    ah,bl
  40c21c:	jne    0x40c29d
  40c21e:	and    eax,0xb926cb17
  40c223:	push   ds
  40c224:	ja     0x40c24a
  40c226:	mov    ah,0xa3
  40c228:	inc    esi
  40c229:	popf   
  40c22a:	out    0xf3,al
  40c22c:	xor    edx,DWORD PTR [edi-0x62]
  40c22f:	adc    DWORD PTR [ecx],edx
  40c231:	fstp   DWORD PTR [eax]
  40c233:	imul   edx,ebp,0xf8dbb2f2
  40c239:	mov    ebp,0x7d802cf5
  40c23e:	mov    ebp,0xb9f771d0
  40c243:	les    esi,FWORD PTR [esi]
  40c245:	jae    0x40c201
  40c247:	test   al,0x6
  40c249:	inc    ebp
  40c24a:	fwait
  40c24b:	rol    DWORD PTR [edx+eiz*1+0x31],cl
  40c24f:	add    al,0xa
  40c251:	add    ebx,DWORD PTR [edi]
  40c253:	mov    WORD PTR [edx-0x8],cs
  40c256:	dec    esi
  40c257:	mov    ebp,0x187b2252
  40c25c:	call   0x62c2b43c
  40c261:	jmp    FWORD PTR [ecx+ebx*2-0x70352075]
  40c268:	iret   
  40c269:	xor    DWORD PTR fs:[edx],ebp
  40c26c:	push   ss
  40c26d:	xor    eax,DWORD PTR [ebx+0x6c]
  40c270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c271:	pop    ebx
  40c272:	gs push esi
  40c274:	mov    bh,0x50
  40c276:	adc    al,0x82
  40c278:	fwait
  40c279:	jg     0x40c209
  40c27b:	jmp    0x5506:0x6befa6d2
  40c282:	and    dh,BYTE PTR cs:[ebx]
  40c285:	lahf   
  40c286:	cmc    
  40c287:	int3   
  40c288:	int3   
  40c289:	pushf  
  40c28a:	xor    al,0x87
  40c28c:	imul   edi,eax,0xffffffba
  40c28f:	mov    gs,WORD PTR [ebp+0x6fc74638]
  40c295:	call   0x9018:0x61a2559f
  40c29c:	es ja  0x40c22c
  40c29f:	cld    
  40c2a0:	popa   
  40c2a1:	or     bh,BYTE PTR [ebx-0x171d80aa]
  40c2a7:	sub    DWORD PTR ds:0x5e561b03,eax
  40c2ad:	repz push 0x845f14bc
  40c2b3:	jle    0x40c330
  40c2b5:	cdq    
  40c2b6:	jle    0x40c2ca
  40c2b8:	std    
  40c2b9:	je     0x40c263
  40c2bb:	fwait
  40c2bc:	mov    bl,0x11
  40c2be:	jl     0x40c284
  40c2c0:	lds    ecx,FWORD PTR [esi+0x4a]
  40c2c3:	pushf  
  40c2c4:	sub    eax,esp
  40c2c6:	(bad)  
  40c2c7:	mov    edi,0x89e4cadf
  40c2cc:	test   DWORD PTR [edi+0x3d],ebp
  40c2cf:	push   edx
  40c2d0:	out    0xec,eax
  40c2d2:	pop    ss
  40c2d3:	add    BYTE PTR [eax-0x6d],al
  40c2d6:	xor    edx,DWORD PTR [edi]
  40c2d8:	and    edx,DWORD PTR [edi+0x2a444ce1]
  40c2de:	inc    edx
  40c2df:	int    0x3e
  40c2e1:	retf   
  40c2e2:	(bad)  
  40c2e3:	leave  
  40c2e4:	nop
  40c2e5:	jle    0x40c27f
  40c2e7:	stos   BYTE PTR es:[edi],al
  40c2e8:	mov    ecx,0x7873e5d3
  40c2ed:	push   ds
  40c2ee:	out    0x8a,eax
  40c2f0:	inc    edx
  40c2f1:	and    DWORD PTR [eax-0x437c4411],edi
  40c2f7:	and    ebx,DWORD PTR ds:0x690bd0d
  40c2fd:	cmp    ebx,ebp
  40c2ff:	sbb    eax,0x50af407c
  40c304:	leave  
  40c305:	lahf   
  40c306:	add    eax,0x116ee89a
  40c30b:	mov    eax,0x1c924a1e
  40c310:	adc    esi,eax
  40c312:	mov    esp,DWORD PTR [eax+0x54]
  40c315:	xchg   edi,eax
  40c316:	adc    eax,0x5c4a99a1
  40c31b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c31c:	inc    ebx
  40c31d:	jmp    0x110d:0x8634e68d
  40c324:	push   0x11857c29
  40c329:	shr    BYTE PTR [ebx+0x180f8176],cl
  40c32f:	(bad)  
  40c331:	pop    ecx
  40c332:	popa   
  40c333:	ds mov esp,0x4158e753
  40c339:	mov    ds:0xe5b95e2a,eax
  40c33e:	sub    esi,ebp
  40c340:	or     al,0x1d
  40c342:	jnp    0x40c361
  40c344:	push   edx
  40c345:	cmp    al,ah
  40c347:	out    0xfd,al
  40c349:	or     BYTE PTR [ebp+0x4673c7f6],bl
  40c34f:	mov    ecx,0xa4c5845
  40c354:	neg    BYTE PTR [edx-0x5a]
  40c357:	sbb    DWORD PTR [ebx-0x41],ebx
  40c35a:	stc    
  40c35b:	bound  ecx,QWORD PTR [esi+0x7c]
  40c35e:	repnz pop edi
  40c360:	sbb    eax,0xb1dbdf0a
  40c365:	xchg   esp,eax
  40c366:	jbe    0x40c3c6
  40c368:	mov    ch,0x70
  40c36a:	push   edx
  40c36b:	mov    ?,WORD PTR [ebp-0x350b2c43]
  40c371:	repz mul bl
  40c374:	jp     0x40c375
  40c376:	sub    al,0x47
  40c378:	cmp    esp,DWORD PTR [ecx]
  40c37a:	test   cl,cl
  40c37c:	and    al,dh
  40c37e:	mov    ch,0xdb
  40c380:	inc    edx
  40c381:	pop    eax
  40c382:	adc    ebp,esp
  40c384:	movd   mm5,esi
  40c387:	mov    eax,0xd74d45b7
  40c38c:	leave  
  40c38d:	xchg   esp,eax
  40c38e:	clc    
  40c38f:	add    al,BYTE PTR [esi]
  40c391:	int    0x99
  40c393:	ins    DWORD PTR es:[edi],dx
  40c394:	inc    edi
  40c395:	adc    ebp,DWORD PTR [ebx-0x340ecdf7]
  40c39b:	pop    es
  40c39c:	call   0x7bb9:0x7f4eec28
  40c3a3:	dec    edx
  40c3a4:	jmp    0x40c412
  40c3a6:	jae    0x40c3f4
  40c3a8:	jp     0x40c32a
  40c3aa:	mov    bh,0xd0
  40c3ac:	(bad)  
  40c3ad:	mov    edx,0xf28a736
  40c3b2:	dec    eax
  40c3b3:	stos   BYTE PTR es:[edi],al
  40c3b4:	push   ss
  40c3b5:	or     bh,bl
  40c3b7:	enter  0x31a1,0x43
  40c3bb:	mov    al,0xe3
  40c3bd:	test   eax,0x8fa5e5ca
  40c3c2:	add    ax,0xaffd
  40c3c6:	or     al,0x4e
  40c3c8:	cwde   
  40c3c9:	mov    bl,0x88
  40c3cb:	mov    ecx,0xc39f82e6
  40c3d0:	in     eax,0xa9
  40c3d2:	outs   dx,DWORD PTR ds:[esi]
  40c3d3:	mov    ds:0x3a3a7764,al
  40c3d8:	cs retf 0x2213
  40c3dc:	xor    BYTE PTR [ebp-0x74e32e85],bh
  40c3e2:	cld    
  40c3e3:	mov    edx,0xf6c925e8
  40c3e8:	das    
  40c3e9:	es push 0x5c0aadac
  40c3ef:	jmp    0x40c3a8
  40c3f1:	inc    esi
  40c3f2:	xchg   esi,eax
  40c3f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3f4:	daa    
  40c3f5:	mov    ebx,0xcd665f4e
  40c3fa:	in     eax,0x6f
  40c3fc:	push   edx
  40c3fd:	retf   0x7b3e
  40c400:	mov    BYTE PTR [ebx+0x7673e3e6],dh
  40c406:	add    bh,ah
  40c408:	or     BYTE PTR [ebp-0x4e],0x52
  40c40c:	fst    QWORD PTR [eax+0x76700236]
  40c412:	mov    ebp,0xff76540a
  40c417:	or     eax,DWORD PTR [edi+ecx*4]
  40c41a:	dec    ebp
  40c41b:	adc    cl,dh
  40c41d:	inc    edi
  40c41e:	mov    ecx,0xa80fd43e
  40c423:	inc    edi
  40c424:	pop    ecx
  40c425:	pop    edx
  40c426:	mov    bh,0x3f
  40c428:	xor    al,0xe1
  40c42a:	js     0x40c488
  40c42c:	inc    ecx
  40c42d:	into   
  40c42e:	push   0x7bb82842
  40c433:	jne    0x40c452
  40c435:	mov    bh,0x9f
  40c437:	aas    
  40c438:	jle    0x40c413
  40c43a:	mov    es,WORD PTR [ebp+0x3aadf485]
  40c440:	mov    ch,BYTE PTR ds:0x3e16634d
  40c446:	inc    ecx
  40c447:	inc    edi
  40c448:	inc    esi
  40c449:	adc    DWORD PTR [edi-0x4d3555aa],esi
  40c44f:	loop   0x40c41a
  40c451:	outs   dx,BYTE PTR ds:[esi]
  40c452:	mov    esi,0x638aa165
  40c457:	lods   al,BYTE PTR ds:[esi]
  40c458:	and    bl,BYTE PTR [ebp+0x36eb5a6e]
  40c45e:	xchg   ebx,esp
  40c460:	push   esp
  40c461:	stos   DWORD PTR es:[edi],eax
  40c462:	sub    DWORD PTR [edi],ebp
  40c464:	or     bh,ch
  40c466:	test   DWORD PTR [edi],ebp
  40c468:	call   0xa937:0x49deabc0
  40c46f:	out    dx,al
  40c470:	xor    al,0x9d
  40c472:	push   eax
  40c473:	or     esi,edi
  40c475:	xor    BYTE PTR ds:[edx+0x36],dl
  40c479:	icebp  
  40c47a:	ret    
  40c47b:	or     bh,BYTE PTR [ebx]
  40c47d:	aam    0x12
  40c47f:	push   0xffffff8e
  40c481:	out    0x2a,al
  40c483:	test   al,dl
  40c485:	shr    BYTE PTR [bp+si-0x64],0xbb
  40c48a:	sub    eax,0xcfd09450
  40c48f:	sti    
  40c490:	push   0x4a
  40c492:	aas    
  40c493:	cs mov bh,0xe
  40c496:	dec    esi
  40c497:	push   ecx
  40c498:	sub    eax,0xd27b1776
  40c49d:	ret    
  40c49e:	jae    0x40c44c
  40c4a0:	xor    eax,esi
  40c4a2:	mov    eax,0x35d219fb
  40c4a7:	scas   al,BYTE PTR es:[edi]
  40c4a8:	(bad)  
  40c4a9:	cmp    ebx,0xffffff9d
  40c4ac:	inc    ebp
  40c4ad:	sub    DWORD PTR [edi+0x4d2c8e7b],ecx
  40c4b3:	ret    
  40c4b4:	test   DWORD PTR [esi+0x18ff529e],edx
  40c4ba:	ret    0xa6d7
  40c4bd:	mov    eax,0x323dfafd
  40c4c2:	sbb    eax,0xf902f844
  40c4c7:	in     eax,dx
  40c4c8:	test   DWORD PTR [edi-0x1a],esp
  40c4cb:	mov    dh,0x22
  40c4cd:	xchg   esp,eax
  40c4ce:	lds    edx,FWORD PTR [edi+0x125ea9b6]
  40c4d4:	jae    0x40c510
  40c4d6:	or     ebp,DWORD PTR [ebx]
  40c4d8:	mov    esi,ds
  40c4da:	out    dx,eax
  40c4db:	jg     0x40c476
  40c4dd:	inc    edi
  40c4de:	sbb    BYTE PTR [esi],0x21
  40c4e1:	mov    eax,0xc42ed140
  40c4e6:	lea    si,[edi+0x15]
  40c4ea:	mov    ebx,0x70c505f6
  40c4ef:	stc    
  40c4f0:	outs   dx,BYTE PTR ds:[esi]
  40c4f1:	arpl   WORD PTR [eax+0x4d98fa34],bp
  40c4f7:	dec    ebp
  40c4f8:	iret   
  40c4f9:	xor    eax,0xcf6913e6
  40c4fe:	xchg   BYTE PTR [edx+0x45],bh
  40c501:	cs test al,0xad
  40c504:	ror    bl,cl
  40c506:	fcom   DWORD PTR [ecx]
  40c508:	push   ds
  40c509:	xor    al,0x14
  40c50b:	int    0xa
  40c50d:	popa   
  40c50e:	xor    BYTE PTR [ebx],0xa6
  40c511:	push   ds
  40c512:	cld    
  40c513:	mov    cl,0x62
  40c515:	pop    esp
  40c516:	push   esp
  40c517:	int3   
  40c518:	mov    ebp,0x3a82e10c
  40c51d:	sar    DWORD PTR [ebx+0x7a93a2f4],1
  40c523:	sti    
  40c524:	add    BYTE PTR [ebx],al
  40c526:	imul   ebp,ebx,0x4d
  40c529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c52a:	daa    
  40c52b:	sti    
  40c52c:	fdivr  DWORD PTR [edi+0x362195a]
  40c532:	mov    bl,0x5e
  40c534:	imul   edi,DWORD PTR [ebp+0x591ec08b],0xffffffc8
  40c53b:	mov    esp,0x436fc609
  40c540:	pop    ss
  40c541:	das    
  40c542:	cmc    
  40c543:	push   ds
  40c544:	into   
  40c545:	out    dx,eax
  40c546:	mov    bh,0x6
  40c548:	(bad)  
  40c549:	into   
  40c54a:	cmp    BYTE PTR [ebp-0x3226072a],dl
  40c550:	push   ecx
  40c551:	adc    ebp,DWORD PTR [esi+0x6e]
  40c554:	mov    al,0x6f
  40c556:	jnp    0x40c520
  40c558:	fs push edi
  40c55a:	aaa    
  40c55b:	fild   QWORD PTR [ebx+edx*8]
  40c55e:	sub    DWORD PTR [edx-0x3f],ecx
  40c561:	mov    esp,0x26970824
  40c566:	or     esi,DWORD PTR [eax-0x999bda]
  40c56c:	pmaxub mm5,mm0
  40c56f:	out    0xfa,al
  40c571:	sti    
  40c572:	in     eax,0x11
  40c574:	loop   0x40c55c
  40c576:	mov    eax,esi
  40c578:	jo     0x40c56c
  40c57a:	mov    edi,0xe0d3fac9
  40c57f:	cld    
  40c580:	(bad)  
  40c582:	iret   
  40c583:	fdiv   QWORD PTR [ecx+edx*1]
  40c586:	outs   dx,DWORD PTR ds:[esi]
  40c587:	es push ss
  40c589:	je     0x40c5a3
  40c58b:	pop    edi
  40c58c:	out    dx,al
  40c58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c58e:	(bad)  
  40c58f:	outs   dx,DWORD PTR ds:[esi]
  40c590:	xchg   edx,eax
  40c591:	cmp    edx,ebx
  40c593:	ins    BYTE PTR es:[edi],dx
  40c594:	push   es
  40c595:	into   
  40c596:	rcr    DWORD PTR [edx-0x37],0xda
  40c59a:	gs gs je 0x40c5c4
  40c59e:	in     al,0x3a
  40c5a0:	call   DWORD PTR [eax+eax*8+0x538b7458]
  40c5a7:	add    esp,esp
  40c5a9:	cmp    edx,DWORD PTR [edi+0x3a]
  40c5ac:	int    0xa1
  40c5ae:	or     ch,dl
  40c5b0:	stos   DWORD PTR es:[edi],eax
  40c5b1:	xor    esp,DWORD PTR [ecx]
  40c5b3:	retf   0xd6b0
  40c5b6:	or     al,0x70
  40c5b8:	inc    edx
  40c5b9:	int    0x33
  40c5bb:	lea    ecx,[eax-0x3d]
  40c5be:	addr16 jno 0x40c5de
  40c5c1:	mov    al,0xf1
  40c5c3:	dec    esp
  40c5c4:	cs jle 0x40c59d
  40c5c7:	xchg   DWORD PTR [esi-0x3d],esp
  40c5ca:	push   ebp
  40c5cb:	cmp    BYTE PTR [edx+ebp*2+0x651c4dc8],al
  40c5d2:	loopne 0x40c591
  40c5d4:	jno    0x40c64a
  40c5d6:	adc    al,0x1a
  40c5d8:	scas   eax,DWORD PTR es:[edi]
  40c5d9:	pop    ebx
  40c5da:	mov    esp,0x5a79e259
  40c5df:	jo     0x40c59d
  40c5e1:	nop
  40c5e2:	scas   al,BYTE PTR es:[edi]
  40c5e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5e4:	sub    bh,BYTE PTR [esi]
  40c5e6:	iret   
  40c5e7:	fadd   DWORD PTR [esi-0x9bd0cb5]
  40c5ed:	jmp    0x42ebf52f
  40c5f2:	aam    0x51
  40c5f4:	std    
  40c5f5:	adc    DWORD PTR [edx+ecx*4-0x33110341],ebx
  40c5fc:	cmp    dh,BYTE PTR [esi-0x3f90769a]
  40c602:	es xchg edx,eax
  40c604:	in     eax,0x7f
  40c606:	in     al,dx
  40c607:	mov    esp,0x4e5b416f
  40c60c:	fisttp DWORD PTR [ebx+ebp*4]
  40c60f:	and    DWORD PTR [edi-0x3d],ebx
  40c612:	gs xchg ebx,eax
  40c614:	scas   eax,DWORD PTR es:[edi]
  40c615:	inc    edi
  40c616:	mov    bl,0xc1
  40c618:	loopne 0x40c68f
  40c61a:	mov    ch,dl
  40c61c:	inc    eax
  40c61d:	in     al,dx
  40c61e:	push   cs
  40c61f:	jl     0x40c606
  40c621:	(bad)  
  40c622:	stc    
  40c623:	mov    BYTE PTR [edi],al
  40c625:	mov    esp,0xd3800898
  40c62a:	adc    bh,BYTE PTR [esi-0x4313df6f]
  40c630:	test   eax,0x303d89e8
  40c635:	(bad)  
  40c636:	lds    ecx,FWORD PTR [edi-0x3caa39d2]
  40c63c:	push   0xaa89ec62
  40c641:	cmp    al,0xbb
  40c643:	push   ss
  40c644:	dec    ebp
  40c645:	cwde   
  40c646:	inc    edi
  40c647:	inc    esi
  40c648:	sbb    ebx,DWORD PTR [edi+0x7e616f8d]
  40c64e:	int3   
  40c64f:	xchg   ecx,eax
  40c650:	loop   0x40c6d0
  40c652:	nop
  40c653:	xor    BYTE PTR [ecx],bl
  40c655:	mul    dl
  40c657:	add    BYTE PTR [esi-0x441db850],0x44
  40c65e:	cmp    edx,DWORD PTR [ebx+ebx*2-0x489bdf8d]
  40c665:	out    dx,eax
  40c666:	popa   
  40c667:	push   ebp
  40c668:	mov    ebx,0x118b6f3d
  40c66d:	fdiv   DWORD PTR [eax-0x72de3e21]
  40c673:	lods   al,BYTE PTR ds:[esi]
  40c674:	xchg   DWORD PTR [edx+0x51],ebp
  40c677:	mov    ds:0x29fde0b6,eax
  40c67c:	loop   0x40c6c9
  40c67e:	adc    DWORD PTR [ebx-0x15],eax
  40c681:	push   ecx
  40c682:	sbb    eax,0x7af2ce09
  40c687:	xchg   ebp,eax
  40c688:	pusha  
  40c689:	lahf   
  40c68a:	mov    WORD PTR ds:0x840c76b7,?
  40c690:	inc    eax
  40c691:	mov    BYTE PTR [edx+0x4d6c85d],0x56
  40c698:	out    dx,eax
  40c699:	jnp    0x40c705
  40c69b:	adc    eax,0x4ad12450
  40c6a0:	(bad)  
  40c6a1:	mov    esp,0x54ed29c3
  40c6a6:	into   
  40c6a7:	xchg   edx,eax
  40c6a8:	ret    
  40c6a9:	(bad)
  40c6ad:	out    0xac,eax
  40c6af:	pop    ds
  40c6b0:	icebp  
  40c6b1:	jmp    0x4633cb7
  40c6b6:	and    dh,cl
  40c6b8:	jae    0x40c66e
  40c6ba:	jb     0x40c661
  40c6bc:	push   esp
  40c6bd:	test   BYTE PTR [eax],bh
  40c6bf:	mov    dh,0xe4
  40c6c1:	js     0x40c6f8
  40c6c3:	add    DWORD PTR [eax-0x60],0x7ea8723b
  40c6ca:	xchg   BYTE PTR [esi-0x614087fa],ah
  40c6d0:	xchg   ebx,eax
  40c6d1:	dec    ebx
  40c6d2:	hlt    
  40c6d3:	cmp    eax,0x9629fc01
  40c6d8:	shl    BYTE PTR [ebx],0x79
  40c6db:	mov    fs,esp
  40c6dd:	dec    ebx
  40c6de:	out    dx,al
  40c6df:	and    dh,ah
  40c6e1:	rcr    BYTE PTR [esi+0x11],cl
  40c6e4:	or     al,BYTE PTR [edi+0x30749fb1]
  40c6ea:	or     bl,BYTE PTR [eax-0x70]
  40c6ed:	test   eax,0x2f513cde
  40c6f2:	cwde   
  40c6f3:	ds jbe 0x40c6e0
  40c6f6:	hlt    
  40c6f7:	mov    al,bl
  40c6f9:	stos   BYTE PTR es:[edi],al
  40c6fa:	jnp    0x40c737
  40c6fc:	jmp    FWORD PTR [eax+0x11]
  40c6ff:	outs   dx,BYTE PTR ds:[esi]
  40c700:	ins    BYTE PTR es:[edi],dx
  40c701:	call   0xc4ee8f41
  40c706:	push   ebp
  40c707:	mov    BYTE PTR [edx],ch
  40c709:	retf   0xf650
  40c70c:	aam    0x2c
  40c70e:	icebp  
  40c70f:	std    
  40c710:	cli    
  40c711:	je     0x40c727
  40c713:	test   al,0x3d
  40c715:	ds sbb eax,0x86bfd5c
  40c71b:	cmp    eax,0x22c0ce76
  40c720:	test   eax,0x6acbec2d
  40c725:	pop    ebx
  40c726:	push   0x64263715
  40c72b:	rol    DWORD PTR [edi+0x326f7ad4],1
  40c731:	inc    ebp
  40c732:	push   esp
  40c733:	xchg   esp,eax
  40c734:	sub    esp,DWORD PTR [ebx]
  40c736:	test   BYTE PTR [edx],bl
  40c738:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73a:	imul   eax,ecx,0xffffffd1
  40c73d:	dec    ebx
  40c73e:	bound  edx,QWORD PTR [esi-0x71a3bf6e]
  40c744:	(bad)  
  40c745:	call   0x39535b27
  40c74a:	dec    ecx
  40c74b:	imul   esi,DWORD PTR ds:0x65cf0ee3,0xffffff8e
  40c752:	sbb    DWORD PTR [esi+0x5],edx
  40c755:	sbb    DWORD PTR [ebx+0x3],esp
  40c758:	popa   
  40c759:	les    edi,FWORD PTR [edx-0x6c83e390]
  40c75f:	ror    DWORD PTR [edi],0xc6
  40c762:	pop    ecx
  40c763:	inc    edi
  40c765:	dec    esp
  40c766:	inc    edx
  40c767:	jp     0x40c7c1
  40c769:	jb     0x40c738
  40c76b:	sti    
  40c76c:	ja     0x40c731
  40c76e:	adc    BYTE PTR [ebx],0x68
  40c771:	cwde   
  40c772:	cmc    
  40c773:	dec    edi
  40c774:	clc    
  40c775:	fwait
  40c776:	add    al,0x9
  40c778:	or     ecx,DWORD PTR [edx+0x7a87f8bf]
  40c77e:	rcr    BYTE PTR [edx-0x26],0x3a
  40c782:	scas   al,BYTE PTR es:[edi]
  40c783:	push   ss
  40c784:	push   ss
  40c785:	xchg   ebp,eax
  40c786:	jecxz  0x40c7d0
  40c788:	retf   0xfbda
  40c78b:	dec    ebp
  40c78c:	int3   
  40c78d:	std    
  40c78e:	mov    ecx,ds
  40c790:	jno    0x40c7f4
  40c792:	mov    cl,0x4e
  40c794:	nop
  40c795:	leave  
  40c796:	mov    edi,0xcf5fe023
  40c79b:	jmp    0x40c774
  40c79d:	mov    dl,0xa3
  40c79f:	repz (bad) 
  40c7a2:	cwde   
  40c7a3:	sete   BYTE PTR [eax]
  40c7a6:	js     0x40c734
  40c7a8:	xor    eax,0x3a3a0fe0
  40c7ad:	call   0x9b2be34f
  40c7b2:	pop    esp
  40c7b3:	mov    edi,0x7b5e2b18
  40c7b8:	xchg   BYTE PTR [edx+edx*2+0x67],dl
  40c7bc:	cmp    al,0x3c
  40c7be:	mov    ds:0x55d489c6,eax
  40c7c3:	fisttp DWORD PTR [ecx-0x1fe72cd3]
  40c7c9:	xchg   BYTE PTR [eax+0x1600fdfb],bl
  40c7cf:	aam    0x89
  40c7d1:	in     al,dx
  40c7d2:	mov    ds:0x12105ddb,eax
  40c7d7:	stos   BYTE PTR es:[edi],al
  40c7d8:	jmp    0x40c839
  40c7da:	scas   eax,DWORD PTR es:[edi]
  40c7db:	cmp    ebp,DWORD PTR [ebx]
  40c7dd:	dec    ecx
  40c7de:	xchg   ebp,eax
  40c7df:	xchg   DWORD PTR [edx-0x39],esp
  40c7e2:	sbb    eax,0xa9dc613f
  40c7e7:	mov    edi,0xdb8e861b
  40c7ec:	out    dx,eax
  40c7ed:	mov    bl,0x18
  40c7ef:	inc    ecx
  40c7f0:	js     0x40c871
  40c7f2:	nop
  40c7f3:	push   esp
  40c7f4:	aas    
  40c7f5:	cmp    al,BYTE PTR [edx]
  40c7f7:	push   0x610b5991
  40c7fc:	repnz push ss
  40c7fe:	out    dx,eax
  40c7ff:	pop    ebp
  40c800:	inc    edi
  40c801:	xor    ah,ah
  40c803:	call   0xb373bf7b
  40c808:	scas   eax,DWORD PTR es:[edi]
  40c809:	pop    esi
  40c80a:	fnsave [edi]
  40c80c:	adc    esi,ecx
  40c80e:	out    dx,al
  40c80f:	xchg   edi,eax
  40c810:	cmp    eax,0xfa391e34
  40c815:	adc    dh,BYTE PTR [esi+edi*4]
  40c818:	icebp  
  40c819:	hlt    
  40c81a:	inc    edx
  40c81b:	cmp    eax,0x1ce9c25d
  40c820:	cdq    
  40c821:	arpl   bx,di
  40c823:	jbe    0x40c7b7
  40c825:	out    dx,al
  40c826:	inc    ebp
  40c827:	jl     0x40c7df
  40c829:	cwde   
  40c82a:	sbb    DWORD PTR [esp+eax*4-0x7120a767],ebp
  40c831:	and    ecx,DWORD PTR [eax-0x50]
  40c834:	mov    ah,0x4c
  40c836:	inc    edx
  40c837:	sar    DWORD PTR [edx],cl
  40c839:	fcom   QWORD PTR [edi+edx*2-0x7b]
  40c83d:	mov    ebp,0x1a72553b
  40c842:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c843:	mov    esp,0x99aee00b
  40c848:	pop    esi
  40c849:	push   0xa8c652da
  40c84e:	push   edx
  40c84f:	mov    esp,0x5d3a25f4
  40c854:	test   BYTE PTR [ebp+0x743d5ad8],cl
  40c85a:	and    ebp,DWORD PTR [eax+edx*8-0x2f]
  40c85e:	jge    0x40c830
  40c860:	pop    edi
  40c861:	mov    eax,0x317dbb33
  40c866:	lock (bad) 
  40c869:	int3   
  40c86a:	dec    ebp
  40c86b:	pop    ds
  40c86c:	pop    edx
  40c86d:	sub    ah,dh
  40c86f:	mov    dl,0xd7
  40c871:	cmp    DWORD PTR [eax+0x6],ebx
  40c874:	mov    esp,0x1cf0c2e6
  40c879:	pushf  
  40c87a:	pop    eax
  40c87b:	mov    eax,ds:0xeec988be
  40c880:	ins    BYTE PTR es:[edi],dx
  40c881:	pop    eax
  40c882:	bound  eax,QWORD PTR [edi+edx*2-0x5f]
  40c886:	sbb    eax,0xdcd2020
  40c88b:	or     DWORD PTR ds:0x19218ae7,0x427692ba
  40c895:	or     ebp,ebp
  40c897:	mov    BYTE PTR [ecx-0x256aaf9d],dl
  40c89d:	sbb    eax,0x65893233
  40c8a2:	pushf  
  40c8a3:	and    eax,0x46177c81
  40c8a8:	pushf  
  40c8a9:	adc    eax,0xf3e48e83
  40c8ae:	fldenv ds:0xceeb98ed
  40c8b4:	(bad)  
  40c8b5:	pop    edi
  40c8b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8b7:	int3   
  40c8b8:	outs   dx,BYTE PTR ds:[esi]
  40c8b9:	cwde   
  40c8ba:	daa    
  40c8bb:	in     eax,dx
  40c8bc:	out    0x93,eax
  40c8be:	std    
  40c8bf:	sbb    dh,BYTE PTR [ecx+0x14]
  40c8c2:	outs   dx,BYTE PTR ds:[esi]
  40c8c3:	sub    eax,0x45bd0b36
  40c8c8:	sbb    BYTE PTR [ecx],bh
  40c8ca:	aas    
  40c8cb:	inc    ebp
  40c8cc:	mov    cl,0x65
  40c8ce:	lods   eax,DWORD PTR ds:[esi]
  40c8cf:	jae    0x40c91e
  40c8d1:	sbb    DWORD PTR [ebx],ebp
  40c8d3:	inc    edi
  40c8d4:	jno    0x40c860
  40c8d6:	imul   DWORD PTR [edi+0x3b255bcc]
  40c8dc:	idiv   DWORD PTR [esi]
  40c8de:	ja     0x40c8e0
  40c8e0:	call   0x5cd3:0x8ded8b31
  40c8e7:	popf   
  40c8e8:	mov    dh,0x5a
  40c8ea:	cmp    ebx,edi
  40c8ec:	loope  0x40c8ea
  40c8ee:	mov    dl,0x8
  40c8f0:	add    BYTE PTR [ebp+0x100fb97b],0x65
  40c8f7:	scas   eax,DWORD PTR es:[edi]
  40c8f8:	cmp    eax,0x25a9472c
  40c8fd:	div    BYTE PTR [edi+0x77f71a48]
  40c903:	ins    DWORD PTR es:[edi],dx
  40c904:	sub    BYTE PTR [ecx-0x72412b1a],dh
  40c90a:	hlt    
  40c90b:	lea    edi,[ebp-0x26ce529f]
  40c911:	aam    0x4b
  40c913:	stos   DWORD PTR es:[edi],eax
  40c914:	inc    ebp
  40c915:	outs   dx,BYTE PTR ds:[esi]
  40c916:	scas   al,BYTE PTR es:[edi]
  40c917:	mov    bh,0xcd
  40c919:	(bad)  
  40c91b:	fwait
  40c91c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91d:	push   eax
  40c91e:	sar    DWORD PTR [esi],1
  40c920:	es popa 
  40c922:	daa    
  40c923:	xchg   esp,eax
  40c924:	push   0xe841bc78
  40c929:	cmp    cl,BYTE PTR [esi]
  40c92b:	and    ecx,DWORD PTR [ebx]
  40c92d:	jno    0x40c983
  40c92f:	sub    bh,BYTE PTR [eax+0x36]
  40c932:	jp     0x40c8e8
  40c934:	add    DWORD PTR [eax],edi
  40c936:	pop    ebp
  40c937:	fsub   QWORD PTR [edx+0x65c2daea]
  40c93d:	mov    dh,bh
  40c93f:	(bad)  
  40c940:	nop
  40c941:	add    DWORD PTR [eax],edx
  40c943:	and    esp,DWORD PTR [esi]
  40c945:	scas   al,BYTE PTR es:[edi]
  40c946:	je     0x40c98c
  40c948:	into   
  40c949:	add    bh,bh
  40c94b:	or     BYTE PTR [ecx+0x3f909f0a],ch
  40c951:	or     eax,0x58960d74
  40c956:	inc    esi
  40c957:	bound  ecx,QWORD PTR [ecx-0x73751453]
  40c95d:	push   edx
  40c95e:	mov    WORD PTR [ecx-0x4a],gs
  40c961:	dec    eax
  40c962:	mov    BYTE PTR [esi],ch
  40c964:	std    
  40c965:	pop    edi
  40c966:	mov    edx,0xb3f18aef
  40c96b:	and    esi,ebp
  40c96d:	retf   
  40c96e:	push   0xe769a287
  40c973:	fs xchg ebx,eax
  40c975:	imul   DWORD PTR [esi]
  40c977:	into   
  40c978:	mov    cl,0x62
  40c97a:	jp     0x40c942
  40c97c:	les    ebp,FWORD PTR [ebx]
  40c97e:	cli    
  40c97f:	xor    BYTE PTR [eax],bh
  40c981:	shl    DWORD PTR [edx-0x7b],cl
  40c984:	and    edi,ebp
  40c986:	jmp    0x40c98f
  40c988:	ins    DWORD PTR es:[edi],dx
  40c989:	popf   
  40c98a:	retf   0xf864
  40c98d:	pop    eax
  40c98e:	jb     0x40c9fa
  40c990:	call   FWORD PTR [ecx]
  40c992:	test   DWORD PTR [esi],0x49b57da5
  40c998:	sbb    esp,eax
  40c99a:	cmpps  xmm6,XMMWORD PTR [ebx-0x5d],0x9c
  40c99f:	mov    ebp,cs
  40c9a1:	fmul   DWORD PTR [ecx-0x50]
  40c9a4:	(bad)  
  40c9a5:	cmp    al,0x64
  40c9a7:	call   0x77d135ec
  40c9ac:	xchg   esi,eax
  40c9ad:	jl     0x40c935
  40c9af:	jmp    0xcd90:0x2da830a8
  40c9b6:	adc    DWORD PTR [esi],ecx
  40c9b8:	outs   dx,DWORD PTR ds:[esi]
  40c9b9:	xchg   dh,cl
  40c9bb:	stc    
  40c9bc:	mov    edi,0xc44c0acc
  40c9c1:	mov    ebp,0x7be419c3
  40c9c6:	lock cmp ch,BYTE PTR [ebp-0x4c]
  40c9ca:	ds jns 0x40ca49
  40c9cd:	lods   eax,DWORD PTR ds:[esi]
  40c9ce:	sub    eax,DWORD PTR ds:0x846d4752
  40c9d4:	xchg   ebp,eax
  40c9d5:	fwait
  40c9d6:	clc    
  40c9d7:	ret    
  40c9d8:	into   
  40c9d9:	sub    BYTE PTR [ebx-0x7080d6fd],0xfb
  40c9e0:	ret    
  40c9e1:	inc    esi
  40c9e2:	mov    ebx,ebp
  40c9e4:	fs push edi
  40c9e6:	add    DWORD PTR [eax],edi
  40c9e8:	dec    eax
  40c9e9:	adc    al,BYTE PTR [eax]
  40c9eb:	pop    ebx
  40c9ec:	outs   dx,DWORD PTR cs:[esi]
  40c9ee:	adc    eax,0xa1bcc563
  40c9f3:	loopne 0x40ca06
  40c9f5:	mov    bl,0x84
  40c9f7:	sbb    al,0xcd
  40c9f9:	pop    ebx
  40c9fa:	push   ds
  40c9fb:	test   eax,0x9a69df1d
  40ca00:	loop   0x40ca43
  40ca02:	shl    esp,cl
  40ca04:	jne    0x40ca16
  40ca06:	inc    esp
  40ca07:	adc    ah,BYTE PTR [eax]
  40ca09:	ret    0xf338
  40ca0c:	mov    esi,0x142fcf49
  40ca11:	mov    edx,0x48d0334
  40ca16:	add    ebp,ebx
  40ca18:	pushf  
  40ca19:	rcl    al,0x85
  40ca1c:	fcmove st,st(0)
  40ca1e:	pop    edi
  40ca1f:	xchg   edi,eax
  40ca20:	cmp    ebx,ebx
  40ca22:	les    ecx,FWORD PTR [edi-0xa311c12]
  40ca28:	or     bl,bh
  40ca2a:	outs   dx,BYTE PTR ds:[esi]
  40ca2b:	xchg   edi,eax
  40ca2c:	cmp    ebx,edi
  40ca2e:	fdivr  DWORD PTR [esi+0x18]
  40ca31:	cmp    al,0x68
  40ca33:	jne    0x40ca48
  40ca35:	pushf  
  40ca36:	cdq    
  40ca37:	pop    esi
  40ca38:	in     al,dx
  40ca39:	loope  0x40c9cd
  40ca3b:	pop    ds
  40ca3c:	jbe    0x40ca9b
  40ca3e:	jo     0x40ca78
  40ca40:	adc    BYTE PTR [ebx],ah
  40ca42:	aam    0xa6
  40ca44:	mov    DWORD PTR [esi+0x26],ebp
  40ca47:	and    DWORD PTR [edi+0x13],ebx
  40ca4a:	jno    0x40c9ce
  40ca4c:	jge    0x40ca92
  40ca4e:	xor    bh,BYTE PTR [edx-0x6805e458]
  40ca54:	je     0x40cac1
  40ca56:	pop    edi
  40ca57:	sbb    BYTE PTR [edx],dh
  40ca59:	(bad)  
  40ca5a:	mov    ch,0x37
  40ca5c:	lea    esi,[ecx-0x2a]
  40ca5f:	les    esp,FWORD PTR [edx-0x72]
  40ca62:	add    ecx,DWORD PTR [edx]
  40ca64:	scas   al,BYTE PTR es:[edi]
  40ca65:	fisub  WORD PTR [ecx+0x5a7bdd5]
  40ca6b:	inc    eax
  40ca6c:	call   0xfd05f9ce
  40ca71:	dec    edi
  40ca72:	enter  0xb953,0xd1
  40ca76:	out    dx,eax
  40ca77:	or     BYTE PTR [edx],bh
  40ca79:	ror    edi,cl
  40ca7b:	sti    
  40ca7c:	sub    DWORD PTR [esi],edx
  40ca7e:	stos   BYTE PTR es:[edi],al
  40ca7f:	mov    ch,0xfb
  40ca81:	xchg   ebp,eax
  40ca82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca83:	jno    0x40ca68
  40ca85:	push   cs
  40ca86:	nop
  40ca87:	int3   
  40ca88:	xchg   ebx,eax
  40ca89:	rol    al,cl
  40ca8b:	sahf   
  40ca8c:	call   FWORD PTR [ebx-0x38]
  40ca8f:	iret   
  40ca90:	push   cs
  40ca91:	or     ecx,DWORD PTR ds:[edx-0x2c]
  40ca95:	push   ecx
  40ca96:	imul   esi,DWORD PTR [ecx],0xffffff87
  40ca99:	dec    edi
  40ca9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca9b:	lock mov BYTE PTR [eax],ah
  40ca9e:	lea    esp,[ecx]
  40caa0:	clc    
  40caa1:	adc    eax,0x503f798
  40caa6:	push   ebp
  40caa7:	xor    al,0xb2
  40caa9:	xchg   ebp,eax
  40caaa:	sti    
  40caab:	inc    esp
  40caac:	xchg   DWORD PTR [ecx],eax
  40caae:	jecxz  0x40cab8
  40cab0:	popa   
  40cab1:	jle    0x40cb1d
  40cab3:	ret    0xeaab
  40cab6:	in     eax,0x79
  40cab8:	cmp    edx,esp
  40caba:	dec    esp
  40cabb:	or     ah,BYTE PTR [ebp+0x68e45354]
  40cac1:	xchg   DWORD PTR [ebp+0x336f168],ebp
  40cac7:	sub    esi,DWORD PTR [esi]
  40cac9:	dec    esi
  40caca:	xor    al,0x70
  40cacc:	inc    esi
  40cacd:	ret    
  40cace:	lahf   
  40cacf:	fmul   QWORD PTR [ebp+edi*8-0x15]
  40cad3:	jle    0x40cb11
  40cad5:	loop   0x40cb55
  40cad7:	jne    0x40cb44
  40cad9:	inc    esp
  40cada:	leave  
  40cadb:	xchg   ebp,eax
  40cadc:	out    0x86,eax
  40cade:	scas   al,BYTE PTR es:[edi]
  40cadf:	(bad)  
  40cae0:	ins    DWORD PTR es:[edi],dx
  40cae1:	mov    ds:0x5ec6b744,eax
  40cae6:	iret   
  40cae7:	enter  0xc90,0x41
  40caeb:	fucom  st(5)
  40caed:	int    0x52
  40caef:	test   eax,0x813ac313
  40caf4:	sbb    al,0x65
  40caf6:	scas   al,BYTE PTR es:[edi]
  40caf7:	rcl    BYTE PTR [edi+edi*2-0x6d],0x3c
  40cafc:	sbb    eax,0x75f1e226
  40cb01:	das    
  40cb02:	lds    esp,FWORD PTR [edi+ebx*2]
  40cb05:	fld    TBYTE PTR [esi+0x37]
  40cb08:	lods   eax,DWORD PTR ds:[esi]
  40cb09:	dec    ecx
  40cb0a:	test   dh,ah
  40cb0c:	jb     0x40cb06
  40cb0e:	es mov ebx,0xfff64594
  40cb14:	jno    0x40cad0
  40cb16:	in     eax,dx
  40cb17:	ret    
  40cb18:	out    0x7f,eax
  40cb1a:	jle    0x40cb02
  40cb1c:	ds je  0x40caaf
  40cb1f:	push   cs
  40cb20:	push   0x622116e0
  40cb25:	xlat   BYTE PTR ds:[ebx]
  40cb26:	push   0x4130fce8
  40cb2b:	push   edx
  40cb2c:	sbb    esi,DWORD PTR [edx+0x28129545]
  40cb32:	rcl    BYTE PTR [eax],1
  40cb34:	retf   0xb9ed
  40cb37:	(bad)  
  40cb38:	loope  0x40cb08
  40cb3a:	leave  
  40cb3b:	cld    
  40cb3c:	aaa    
  40cb3d:	xchg   ebp,eax
  40cb3e:	(bad)  
  40cb3f:	and    eax,0x876938aa
  40cb44:	dec    ebx
  40cb45:	shl    BYTE PTR [ecx],1
  40cb47:	pop    esi
  40cb48:	push   0x1665944d
  40cb4d:	fwait
  40cb4e:	cmp    eax,0x23bccdc1
  40cb53:	sbb    BYTE PTR [edx-0x26c467d1],cl
  40cb59:	and    eax,0x11c953ce
  40cb5e:	push   es
  40cb5f:	cmp    BYTE PTR [edi-0x67272b10],bh
  40cb65:	mov    ch,0x23
  40cb67:	cli    
  40cb68:	xchg   ebx,eax
  40cb69:	xchg   esp,eax
  40cb6a:	inc    DWORD PTR [edx]
  40cb6c:	sbb    al,0x4e
  40cb6e:	adc    ebp,DWORD PTR [edi-0x3c]
  40cb71:	lock iret 
  40cb73:	repnz xor DWORD PTR [edi-0x647ee3fa],esi
  40cb7a:	push   ss
  40cb7b:	enter  0x6506,0xf8
  40cb7f:	jge    0x40cb1c
  40cb81:	cmp    dh,bh
  40cb83:	fadd   DWORD PTR fs:[edi-0x3]
  40cb87:	lods   al,BYTE PTR ds:[esi]
  40cb88:	pusha  
  40cb89:	sbb    DWORD PTR [esi-0x79],esi
  40cb8c:	mov    dl,dh
  40cb8e:	xchg   ebx,eax
  40cb8f:	push   ebx
  40cb90:	inc    ebp
  40cb91:	jbe    0x40cb7c
  40cb93:	cdq    
  40cb94:	inc    esp
  40cb95:	retf   
  40cb96:	add    edx,esi
  40cb98:	mov    bl,0xc0
  40cb9a:	das    
  40cb9b:	test   BYTE PTR [ebx-0x35d28a3],al
  40cba1:	aas    
  40cba2:	push   ss
  40cba3:	into   
  40cba4:	ins    DWORD PTR es:[edi],dx
  40cba5:	dec    ebp
  40cba6:	sbb    al,0x6a
  40cba8:	test   BYTE PTR [ebx+ecx*2-0xf4b2f65],dl
  40cbaf:	repnz out dx,al
  40cbb1:	gs push edx
  40cbb3:	cld    
  40cbb4:	(bad)  
  40cbb5:	sbb    bh,BYTE PTR [esi+0x35]
  40cbb8:	xor    bl,dl
  40cbba:	mov    ch,0x2d
  40cbbc:	pop    ds
  40cbbd:	aaa    
  40cbbe:	lds    esp,FWORD PTR [ecx+ecx*2-0x16]
  40cbc2:	push   es
  40cbc3:	cmp    al,0xce
  40cbc5:	aaa    
  40cbc6:	shr    BYTE PTR [ebx-0x7f],1
  40cbc9:	xor    DWORD PTR [edi],0xffffffc3
  40cbcc:	ins    BYTE PTR es:[edi],dx
  40cbcd:	dec    edx
  40cbce:	sti    
  40cbcf:	push   ebx
  40cbd0:	ja     0x40cbb9
  40cbd2:	jge    0x40cb7c
  40cbd4:	fcom   st(2)
  40cbd6:	pop    es
  40cbd7:	repz push ds
  40cbd9:	(bad)  
  40cbda:	mov    edi,0x12943ebf
  40cbdf:	dec    ebp
  40cbe0:	inc    ebx
  40cbe1:	or     eax,0x551f50e5
  40cbe6:	add    DWORD PTR [eax-0x5d],ebp
  40cbe9:	sbb    bl,BYTE PTR [esi]
  40cbeb:	test   eax,0x18e29d16
  40cbf0:	mov    cl,0x1c
  40cbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbf3:	lahf   
  40cbf4:	(bad)  
  40cbf5:	mov    eax,DWORD PTR [esi+0x27]
  40cbf8:	(bad)  
  40cbf9:	sbb    al,0xc
  40cbfb:	in     eax,dx
  40cbfc:	(bad)  [ebx]
  40cbfe:	mov    ah,0x24
  40cc00:	call   0x37d42bba
  40cc05:	out    dx,eax
  40cc06:	pop    eax
  40cc07:	jmp    0xdf19:0xaf2bbb6e
  40cc0e:	outs   dx,BYTE PTR ds:[esi]
  40cc0f:	sub    al,0x76
  40cc11:	arpl   cx,bx
  40cc13:	or     bl,BYTE PTR [esi-0x7a9645d6]
  40cc19:	stos   BYTE PTR es:[edi],al
  40cc1a:	fcomp  DWORD PTR [ecx]
  40cc1c:	ficomp DWORD PTR [edx+ecx*4-0x2b]
  40cc20:	sub    al,0xd2
  40cc22:	pushf  
  40cc23:	and    BYTE PTR [esi+0x72b94648],0x3f
  40cc2a:	sahf   
  40cc2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc2c:	push   ss
  40cc2d:	mov    ?,ebx
  40cc2f:	xor    bh,BYTE PTR ds:0xd480cc6f
  40cc35:	pusha  
  40cc36:	cmp    al,0xf1
  40cc38:	pusha  
  40cc39:	and    DWORD PTR [ebp+0x11ec5350],0x69
  40cc40:	jae    0x40cbd8
  40cc42:	mov    ah,0xdc
  40cc44:	xchg   ebp,eax
  40cc45:	mov    BYTE PTR [ebx-0xf8a69f9],bh
  40cc4b:	das    
  40cc4c:	jecxz  0x40cc15
  40cc4e:	push   ecx
  40cc4f:	es mov eax,0x67d7a930
  40cc55:	xchg   bl,cl
  40cc57:	dec    edi
  40cc58:	js     0x40ccc5
  40cc5a:	js     0x40cbef
  40cc5c:	jbe    0x40cbf8
  40cc5e:	fadd   DWORD PTR [eax-0x7715f4bc]
  40cc64:	daa    
  40cc65:	sbb    ebp,DWORD PTR [edx]
  40cc67:	iret   
  40cc68:	(bad)  
  40cc69:	clc    
  40cc6a:	push   cs
  40cc6b:	pop    esi
  40cc6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc6d:	dec    edi
  40cc6e:	jne    0x40cc6c
  40cc70:	aad    0xd5
  40cc72:	scas   eax,DWORD PTR es:[edi]
  40cc73:	pop    ds
  40cc74:	dec    esi
  40cc75:	push   0x51a090ce
  40cc7a:	std    
  40cc7b:	sbb    al,0x98
  40cc7d:	sbb    DWORD PTR [ebp+0x474abfdb],ebx
  40cc83:	pushf  
  40cc84:	(bad)  
  40cc86:	loopne 0x40ccab
  40cc88:	shr    DWORD PTR [edi],cl
  40cc8a:	das    
  40cc8b:	or     al,0xd7
  40cc8d:	cmp    eax,0x3027d753
  40cc92:	or     al,al
  40cc94:	cwde   
  40cc95:	clc    
  40cc96:	int    0xda
  40cc98:	ds popa 
  40cc9a:	adc    al,0xfd
  40cc9c:	inc    ebx
  40cc9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc9e:	push   ecx
  40cc9f:	jnp    0x40cccd
  40cca1:	fisttp WORD PTR [ebx]
  40cca3:	test   BYTE PTR [ecx],bh
  40cca5:	in     eax,0x8
  40cca7:	mov    bl,dh
  40cca9:	das    
  40ccaa:	push   ebx
  40ccab:	dec    edx
  40ccac:	jecxz  0x40ccef
  40ccae:	inc    eax
  40ccaf:	adc    al,0x48
  40ccb1:	jae    0x40ccca
  40ccb3:	xor    al,0x5a
  40ccb5:	mov    eax,ds:0x8e56d896
  40ccba:	in     al,0x89
  40ccbc:	xor    DWORD PTR ds:0xf1850566,eax
  40ccc2:	xor    DWORD PTR [ecx+0x1f],ebx
  40ccc5:	dec    edx
  40ccc6:	neg    BYTE PTR ds:[esi-0x18]
  40ccca:	add    DWORD PTR [ecx],esp
  40cccc:	sub    esi,DWORD PTR [ecx+0xa]
  40cccf:	cmp    ebp,DWORD PTR [esi+0x45]
  40ccd2:	popa   
  40ccd3:	push   ds
  40ccd4:	push   edi
  40ccd5:	cli    
  40ccd6:	ins    DWORD PTR es:[edi],dx
  40ccd7:	retf   
  40ccd8:	push   ecx
  40ccd9:	arpl   WORD PTR ds:0x27796a34,si
  40ccdf:	sbb    ebp,DWORD PTR [eax-0x4f]
  40cce2:	sar    BYTE PTR [ecx-0x7a],1
  40cce5:	mov    al,0x50
  40cce7:	outs   dx,DWORD PTR ds:[esi]
  40cce8:	add    ebx,DWORD PTR [edx+0x40]
  40cceb:	test   BYTE PTR [ebp-0xd],cl
  40ccee:	adc    BYTE PTR [ebx+ebp*1],cl
  40ccf1:	sahf   
  40ccf2:	jne    0x40cd1d
  40ccf4:	mov    eax,0x6dac944c
  40ccf9:	call   0xbcb90aa3
  40ccfe:	rcr    ah,1
  40cd00:	lods   al,BYTE PTR ds:[esi]
  40cd01:	mov    eax,ds:0x98eea817
  40cd06:	sub    bl,BYTE PTR [ebp+ecx*2+0x403c661e]
  40cd0d:	cwde   
  40cd0e:	fstp   TBYTE PTR [ebp-0x3ed2a54a]
  40cd14:	or     BYTE PTR [ebp+0x3f],al
  40cd17:	pusha  
  40cd18:	sub    BYTE PTR [eax],dh
  40cd1a:	stc    
  40cd1b:	jecxz  0x40cd76
  40cd1d:	push   esp
  40cd1e:	(bad)
  40cd21:	les    ebp,FWORD PTR [eax]
  40cd23:	ins    BYTE PTR es:[edi],dx
  40cd24:	jg     0x40ccff
  40cd26:	and    eax,DWORD PTR [esi]
  40cd28:	xor    bh,dl
  40cd2a:	aad    0x66
  40cd2c:	add    DWORD PTR [edx+0x37],ecx
  40cd2f:	pop    eax
  40cd30:	sub    DWORD PTR [esi+esi*4],edx
  40cd33:	jae    0x40cd3c
  40cd35:	gs test edx,0xbe0268d8
  40cd3c:	sbb    esp,DWORD PTR [esi-0x19]
  40cd3f:	sbb    al,BYTE PTR [edx]
  40cd41:	mov    esi,0x424d820f
  40cd46:	add    dh,BYTE PTR [eax+0x34]
  40cd49:	stos   BYTE PTR es:[edi],al
  40cd4a:	or     al,0xc1
  40cd4c:	sti    
  40cd4d:	adc    eax,0x2054100b
  40cd52:	cld    
  40cd53:	jge    0x40cdd3
  40cd55:	cmc    
  40cd56:	mov    cl,0x49
  40cd58:	jno    0x40cd1e
  40cd5a:	jae    0x40cd7d
  40cd5c:	outs   dx,DWORD PTR ds:[esi]
  40cd5d:	sub    al,0xc3
  40cd5f:	addr16 dec esp
  40cd61:	push   0xc
  40cd63:	xlat   BYTE PTR ds:[ebx]
  40cd64:	jne    0x40cd61
  40cd66:	imul   edi,DWORD PTR [eax+0x79bc4e6b],0xa4d2a3f0
  40cd70:	into   
  40cd71:	rol    DWORD PTR [edi],0xba
  40cd74:	push   edi
  40cd75:	clc    
  40cd76:	rcl    DWORD PTR [ecx],1
  40cd78:	(bad)  
  40cd79:	fdivr  DWORD PTR [edx]
  40cd7b:	mov    ah,bh
  40cd7d:	out    0xf9,eax
  40cd7f:	add    ebp,DWORD PTR [edi+0x56392039]
  40cd85:	and    esp,DWORD PTR [ebp-0x67]
  40cd88:	fwait
  40cd89:	adc    eax,0xfb15b715
  40cd8e:	push   ss
  40cd8f:	call   0x575b:0xccfa4865
  40cd96:	pop    esp
  40cd97:	sbb    al,0xfb
  40cd99:	pushf  
  40cd9a:	inc    ebp
  40cd9b:	mov    ds:0x5941fffd,al
  40cda0:	or     al,0xe2
  40cda2:	sub    ebp,ebx
  40cda4:	out    dx,al
  40cda5:	mov    al,ss:0x5a70b9c5
  40cdab:	mov    al,0x95
  40cdad:	jmp    DWORD PTR [ecx-0x2b]
  40cdb0:	or     al,0x6d
  40cdb2:	imul   esi,DWORD PTR [ecx-0x2b],0xffffffc7
  40cdb6:	pop    ebx
  40cdb7:	daa    
  40cdb8:	cmp    al,0xd6
  40cdba:	lea    edi,[edi+0x5cbb7b91]
  40cdc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdc1:	(bad)
  40cdc4:	sbb    cl,BYTE PTR [eax+edi*1]
  40cdc7:	test   DWORD PTR [edx+0x2],ebp
  40cdca:	nop
  40cdcb:	out    0xf6,al
  40cdcd:	cmp    eax,0x82bf1447
  40cdd2:	inc    ebp
  40cdd3:	loopne 0x40cd84
  40cdd5:	mov    fs,WORD PTR [edx]
  40cdd7:	pop    es
  40cdd8:	mov    cl,0x26
  40cdda:	icebp  
  40cddb:	scas   eax,DWORD PTR es:[edi]
  40cddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cddd:	and    al,BYTE PTR [ebx+0xe]
  40cde0:	fucomip st,st(0)
  40cde2:	inc    edx
  40cde3:	sub    edi,esi
  40cde5:	xor    al,0xde
  40cde7:	ja     0x40cd84
  40cde9:	add    BYTE PTR [edi],dl
  40cdeb:	xchg   BYTE PTR [edi+ecx*4+0x7d17e64c],ch
  40cdf2:	mov    ?,WORD PTR [eax+0xc]
  40cdf5:	sar    BYTE PTR [esi+0x49db5ea5],cl
  40cdfb:	jg     0x40cd87
  40cdfd:	push   eax
  40cdfe:	retf   0xa199
  40ce01:	mov    cl,0xec
  40ce03:	sub    al,0x15
  40ce05:	adc    ecx,ecx
  40ce07:	cmp    esp,DWORD PTR [eax]
  40ce09:	mov    cl,0x31
  40ce0b:	dec    eax
  40ce0c:	and    ch,ah
  40ce0e:	ins    DWORD PTR es:[edi],dx
  40ce0f:	and    al,0x4e
  40ce11:	int    0x42
  40ce13:	dec    eax
  40ce14:	stos   BYTE PTR es:[edi],al
  40ce15:	push   ss
  40ce16:	js     0x40ce39
  40ce18:	adc    eax,0x1ed24afa
  40ce1d:	add    eax,0xd49cadae
  40ce22:	cld    
  40ce23:	out    dx,eax
  40ce24:	gs imul ebx,edi,0x8d13f967
  40ce2b:	inc    edi
  40ce2c:	(bad)  
  40ce2d:	popa   
  40ce2e:	inc    eax
  40ce2f:	jmp    0x9b8:0xd6ea698c
  40ce36:	scas   eax,DWORD PTR es:[edi]
  40ce37:	cdq    
  40ce38:	jb     0x40ce9f
  40ce3a:	xchg   edi,eax
  40ce3b:	pusha  
  40ce3c:	adc    al,0x26
  40ce3e:	aam    0x61
  40ce40:	std    
  40ce41:	jmp    0x40ce7a
  40ce43:	push   eax
  40ce44:	addr16 das 
  40ce46:	out    0x5a,al
  40ce48:	mov    bl,0xb0
  40ce4a:	cmc    
  40ce4b:	div    BYTE PTR ds:0x9480be7
  40ce51:	ins    DWORD PTR es:[edi],dx
  40ce52:	out    0x12,al
  40ce54:	(bad)  
  40ce56:	jno    0x40cde3
  40ce58:	or     bh,BYTE PTR [esi]
  40ce5a:	and    al,0xa2
  40ce5c:	jne    0x40ce02
  40ce5e:	rcl    BYTE PTR [ebp+0x1ffb5de2],0xae
  40ce65:	push   0x59b06a2a
  40ce6a:	xchg   ebp,eax
  40ce6b:	nop
  40ce6c:	dec    ebp
  40ce6d:	pop    edx
  40ce6e:	and    eax,0x4b84d664
  40ce73:	mov    WORD PTR [edi],cs
  40ce75:	jg     0x40ce88
  40ce77:	mov    cs,WORD PTR [ecx]
  40ce79:	mov    edi,0x7b0e4e5a
  40ce7e:	repz bound esi,QWORD PTR [edx+ecx*4-0x2368cf0f]
  40ce86:	outs   dx,BYTE PTR ds:[esi]
  40ce87:	test   eax,0x4a404490
  40ce8c:	mov    dh,0x50
  40ce8e:	in     eax,0x8b
  40ce90:	sub    BYTE PTR [eax+0x634301],ah
  40ce96:	cmc    
  40ce97:	adc    DWORD PTR [edi-0x1cf146e4],eax
  40ce9d:	ja     0x40ce52
  40ce9f:	int    0x95
  40cea1:	iret   
  40cea2:	sbb    BYTE PTR [esi-0x68],0xc
  40cea6:	sti    
  40cea7:	test   eax,0xf52758a9
  40ceac:	xor    ecx,ecx
  40ceae:	dec    eax
  40ceaf:	xor    eax,0xbb6de7b4
  40ceb4:	mov    ds:0x602f5d80,eax
  40ceb9:	jno    0x40cf37
  40cebb:	nop
  40cebc:	int    0x12
  40cebe:	or     ebx,DWORD PTR [edi-0x71]
  40cec1:	inc    esi
  40cec2:	int    0x94
  40cec4:	aam    0x13
  40cec6:	test   ebp,ecx
  40cec8:	retf   
  40cec9:	cli    
  40ceca:	mov    ds,WORD PTR [ecx+0x31]
  40cecd:	or     al,0xdc
  40cecf:	or     BYTE PTR [ebx],al
  40ced1:	in     al,dx
  40ced2:	shl    DWORD PTR [ecx],1
  40ced4:	mov    ebx,DWORD PTR [edi+ebp*4]
  40ced7:	mov    al,0x35
  40ced9:	or     ebx,DWORD PTR [edi]
  40cedb:	addr16 jbe 0x40ce7b
  40cede:	or     eax,0x23f544bb
  40cee3:	aad    0xdb
  40cee5:	out    dx,eax
  40cee6:	fst    DWORD PTR [edi+0x70]
  40cee9:	add    edi,DWORD PTR [ebx-0x2db9bd4c]
  40ceef:	nop
  40cef0:	or     ah,BYTE PTR [eax+ebx*2+0x1e]
  40cef4:	pop    ss
  40cef5:	pusha  
  40cef6:	mov    al,0xcf
  40cef8:	cmp    DWORD PTR [eax],0xffffff9a
  40cefb:	push   eax
  40cefc:	repz cwde 
  40cefe:	rol    DWORD PTR ds:0xbdf943d7,cl
  40cf04:	pop    ds
  40cf05:	aas    
  40cf06:	fdiv   QWORD PTR [eax]
  40cf08:	cmp    ch,BYTE PTR [edi-0x1c]
  40cf0b:	jbe    0x40cf5b
  40cf0d:	sub    ch,dh
  40cf0f:	push   es
  40cf10:	and    dh,BYTE PTR [ebx+0x45]
  40cf13:	mov    ecx,0xfdd8778c
  40cf18:	call   0x41a8:0x9652c2d5
  40cf1f:	jmp    0xb630:0x9c2b8fba
  40cf26:	stos   DWORD PTR es:[edi],eax
  40cf27:	les    ebx,FWORD PTR [eax+0x68de66ef]
  40cf2d:	dec    eax
  40cf2e:	add    DWORD PTR [eax+edi*8-0x788db7ae],ecx
  40cf35:	scas   eax,DWORD PTR es:[edi]
  40cf36:	fst    st(2)
  40cf38:	pop    esp
  40cf39:	xchg   BYTE PTR [edi-0x7aff1faf],ch
  40cf3f:	mov    bh,dl
  40cf41:	test   DWORD PTR [eax+0x8],esi
  40cf44:	leave  
  40cf45:	int3   
  40cf46:	cli    
  40cf47:	mov    ebp,0x1a187f90
  40cf4c:	loope  0x40cf4e
  40cf4e:	aaa    
  40cf4f:	aaa    
  40cf50:	add    DWORD PTR [eax+0x5b],esi
  40cf53:	mov    ecx,0xd3ed8e94
  40cf58:	jecxz  0x40cf76
  40cf5a:	fdiv   st,st(5)
  40cf5c:	mov    eax,es:0xdd75dfe
  40cf62:	mov    gs,edx
  40cf64:	sbb    ebx,esi
  40cf66:	mov    BYTE PTR [eax+esi*1+0xb],bh
  40cf6a:	push   esp
  40cf6b:	sub    ah,al
  40cf6d:	xchg   esi,eax
  40cf6e:	(bad)  
  40cf6f:	sar    BYTE PTR [esi],cl
  40cf71:	mov    esi,0x1793ecfe
  40cf76:	xor    DWORD PTR [ecx-0x31],edi
  40cf79:	loope  0x40cf2b
  40cf7b:	mov    bh,0xe2
  40cf7d:	add    al,0x26
  40cf7f:	hlt    
  40cf80:	mov    ebx,0xfa2e56fd
  40cf85:	pop    esi
  40cf86:	jbe    0x40cf69
  40cf88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf89:	jge    0x40cfb1
  40cf8b:	inc    edx
  40cf8c:	outs   dx,DWORD PTR ds:[esi]
  40cf8d:	mov    al,0xcb
  40cf8f:	inc    edi
  40cf90:	sbb    DWORD PTR [edx+0x34],ebp
  40cf93:	jge    0x40d00c
  40cf95:	mov    esp,0x1160cc39
  40cf9a:	pop    ss
  40cf9b:	iret   
  40cf9c:	sbb    edx,edi
  40cf9e:	fstp   TBYTE PTR [edx]
  40cfa0:	push   eax
  40cfa1:	mov    dl,0xff
  40cfa3:	lahf   
  40cfa4:	mov    bl,0x52
  40cfa6:	sub    al,0xef
  40cfa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa9:	pop    ebp
  40cfaa:	or     cl,BYTE PTR [esi+0x782c88b3]
  40cfb0:	jmp    0xe98f6a19
  40cfb5:	clc    
  40cfb6:	fwait
  40cfb7:	dec    ecx
  40cfb8:	popf   
  40cfb9:	sbb    edx,edi
  40cfbb:	dec    ebx
  40cfbc:	adc    edi,ecx
  40cfbe:	and    eax,0x230959ef
  40cfc3:	mov    dl,BYTE PTR [esi]
  40cfc5:	cs fwait
  40cfc7:	nop
  40cfc8:	inc    DWORD PTR [ebx]
  40cfca:	pop    ecx
  40cfcb:	test   al,0xb8
  40cfcd:	mov    dl,bl
  40cfcf:	add    BYTE PTR [edx-0x45],dl
  40cfd2:	xchg   edx,eax
  40cfd3:	mov    es,ebx
  40cfd5:	imul   esi,DWORD PTR [ebx+0x36],0x7f0ce7b8
  40cfdc:	jmp    0x40cfed
  40cfde:	adc    al,0xfd
  40cfe0:	imul   ebp,edi,0x6a
  40cfe3:	pop    ds
  40cfe4:	aaa    
  40cfe5:	pop    es
  40cfe6:	jp     0x40cf6c
  40cfe8:	ret    0xd61b
  40cfeb:	(bad)  
  40cfed:	addr16 jl 0x40cfcc
  40cff0:	fdivr  QWORD PTR [eax]
  40cff2:	rol    edi,cl
  40cff4:	div    eax
  40cff6:	or     DWORD PTR [esi+eax*1],edi
  40cff9:	dec    ebp
  40cffa:	ja     0x40d003
  40cffc:	ins    BYTE PTR es:[edi],dx
  40cffd:	mov    ds:0xa0bf400b,al
  40d002:	jg     0x40d06f
  40d004:	pop    esp
  40d005:	fwait
  40d006:	mov    cl,0x59
  40d008:	jl     0x40d03e
  40d00a:	test   eax,0x4857f850
  40d00f:	js     0x40cfc5
  40d011:	adc    al,0x98
  40d013:	rol    ecx,1
  40d015:	dec    ecx
  40d016:	addr16 mov esi,0x8f38e70f
  40d01c:	lods   al,BYTE PTR ds:[esi]
  40d01d:	or     BYTE PTR [eax-0x5d],ch
  40d020:	mov    DWORD PTR [ebp+ecx*2-0x47],edx
  40d024:	adc    BYTE PTR [edx-0x8],0x99
  40d028:	adc    BYTE PTR [esi+0x4e3fa1ad],0xed
  40d02f:	jmp    0xdff19f4
  40d034:	je     0x40d04e
  40d036:	bound  esp,QWORD PTR [eax-0x2f4a7d44]
  40d03c:	dec    ebx
  40d03d:	arpl   WORD PTR [ecx-0x1cad900d],dx
  40d043:	push   ebx
  40d044:	ret    0x5f5c
  40d047:	cs aad 0xd4
  40d04a:	mov    esp,0xa120c22b
  40d04f:	xor    DWORD PTR [edi-0x79824681],esi
  40d055:	(bad)  
  40d056:	xchg   DWORD PTR [edi],eax
  40d058:	mov    dl,0xf6
  40d05a:	add    eax,0x6d1a2dad
  40d05f:	pop    eax
  40d060:	pop    ss
  40d061:	ss sti 
  40d063:	sbb    DWORD PTR [esi-0x32],eax
  40d066:	add    DWORD PTR [edi+0x20],eax
  40d069:	inc    edi
  40d06a:	aad    0x1e
  40d06c:	lods   al,BYTE PTR ds:[esi]
  40d06d:	test   al,0xf7
  40d06f:	xor    DWORD PTR [ecx+eiz*1],edx
  40d072:	or     al,0x8d
  40d074:	adc    al,0xb4
  40d076:	xor    eax,0xe00b0b8c
  40d07b:	jnp    0x40d05b
  40d07d:	pop    esp
  40d07e:	rol    BYTE PTR [ebp+0x63],cl
  40d081:	and    eax,0x2277748c
  40d086:	ret    0x5cee
  40d089:	mov    edx,0xdeb12496
  40d08e:	jbe    0x40d0f2
  40d090:	bound  edx,QWORD PTR [edi+0x77de02b6]
  40d096:	mov    esp,0xe7cff93d
  40d09b:	idiv   dl
  40d09d:	or     eax,0x2bd27dbc
  40d0a2:	push   0xd6e2ffc9
  40d0a7:	dec    ecx
  40d0a8:	sbb    BYTE PTR [edi+0x77],ah
  40d0ab:	je     0x40d113
  40d0ad:	push   edx
  40d0ae:	loop   0x40d06a
  40d0b0:	mov    al,ds:0x2a18831f
  40d0b5:	pop    edx
  40d0b6:	cmp    dl,BYTE PTR [ecx+eiz*1+0x5b]
  40d0ba:	jae    0x40d06f
  40d0bc:	stos   DWORD PTR es:[edi],eax
  40d0bd:	fwait
  40d0be:	repnz pop edx
  40d0c0:	pop    es
  40d0c1:	push   eax
  40d0c2:	xor    eax,0xd6253c5f
  40d0c7:	sbb    ebx,ebx
  40d0c9:	jns    0x40d0af
  40d0cb:	aaa    
  40d0cc:	or     ebp,eax
  40d0ce:	loopne 0x40d099
  40d0d0:	and    eax,0x1a0fee23
  40d0d5:	or     DWORD PTR [ebx+0x4e],eax
  40d0d8:	bound  ebx,QWORD PTR [ecx+0x73]
  40d0db:	stos   DWORD PTR es:[edi],eax
  40d0dc:	mov    WORD PTR [edx-0x12],ds
  40d0df:	add    ebx,eax
  40d0e1:	push   edx
  40d0e2:	push   cs
  40d0e3:	out    dx,al
  40d0e4:	sbb    bh,BYTE PTR [eax]
  40d0e6:	and    esp,DWORD PTR [edx-0x30da1b95]
  40d0ec:	inc    edi
  40d0ed:	cli    
  40d0ee:	stos   BYTE PTR es:[edi],al
  40d0ef:	ins    BYTE PTR es:[edi],dx
  40d0f0:	mov    esi,ecx
  40d0f2:	push   0xfffffff0
  40d0f4:	mov    esp,0xd3c4973c
  40d0f9:	fwait
  40d0fa:	outs   dx,DWORD PTR ds:[esi]
  40d0fb:	jo     0x40d099
  40d0fd:	pop    ebx
  40d0fe:	pop    ebx
  40d0ff:	adc    eax,0x708c40c8
  40d104:	push   edi
  40d105:	sti    
  40d106:	push   ss
  40d107:	xchg   esi,eax
  40d108:	in     al,dx
  40d109:	mov    dl,BYTE PTR [ecx-0x1cddf6a1]
  40d10f:	cmp    DWORD PTR [ecx+0x5],ebx
  40d112:	push   esi
  40d113:	jmp    0x40d0eb
  40d115:	add    al,0x65
  40d117:	(bad)  
  40d118:	repz push 0x7c
  40d11b:	mov    DWORD PTR [edx-0x27],0x73e1524f
  40d122:	and    ebp,DWORD PTR [edi]
  40d124:	jns    0x40d0e8
  40d126:	test   BYTE PTR [ebx+0xb046482],0x92
  40d12d:	and    al,BYTE PTR [esi+0x6711c09d]
  40d133:	and    BYTE PTR [ebx+0x75],bl
  40d136:	push   edi
  40d137:	jg     0x40d167
  40d139:	xor    al,0x9
  40d13b:	inc    eax
  40d13c:	out    dx,eax
  40d13d:	dec    ebx
  40d13e:	jge    0x40d0d6
  40d140:	sub    eax,0x7a342d06
  40d145:	inc    BYTE PTR [esi+0x181df882]
  40d14b:	repnz sub al,0x4a
  40d14e:	sub    al,0xf1
  40d150:	imul   edi,DWORD PTR [ebp+eax*2-0x24],0x1a
  40d155:	shl    bh,cl
  40d157:	pop    ebx
  40d158:	mov    edi,0x2e8e32ce
  40d15d:	sub    al,0x79
  40d15f:	inc    esp
  40d160:	lods   al,BYTE PTR ds:[esi]
  40d161:	adc    BYTE PTR [ebx+0x33],bl
  40d164:	jae    0x40d18c
  40d166:	mul    DWORD PTR ds:0x8108f96d
  40d16c:	cld    
  40d16d:	data16 jle 0x40d16f
  40d170:	rcr    ebp,1
  40d172:	mov    ch,ch
  40d174:	(bad)  
  40d175:	mov    bl,0xb6
  40d177:	pop    ss
  40d178:	fs pop esp
  40d17a:	sub    esp,eax
  40d17c:	dec    ebx
  40d17d:	sti    
  40d17e:	pop    edi
  40d17f:	sbb    eax,0xef334786
  40d184:	out    0x65,al
  40d186:	frstor [ebx-0x26]
  40d189:	xchg   DWORD PTR [esi],esi
  40d18b:	out    dx,eax
  40d18c:	fstp   DWORD PTR [ebx+0x74c65a3f]
  40d192:	dec    ebx
  40d193:	aaa    
  40d194:	xchg   BYTE PTR [eax+0x544ccae4],ah
  40d19a:	dec    ecx
  40d19b:	xor    edx,edx
  40d19d:	sti    
  40d19e:	push   ecx
  40d19f:	in     al,dx
  40d1a0:	cmc    
  40d1a1:	mov    bh,ah
  40d1a3:	icebp  
  40d1a4:	lahf   
  40d1a5:	scas   al,BYTE PTR es:[edi]
  40d1a6:	inc    esi
  40d1a7:	xchg   esi,eax
  40d1a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1a9:	repnz cmp ebx,DWORD PTR [edi-0x1]
  40d1ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1ae:	retf   0x789f
  40d1b1:	outs   dx,DWORD PTR ds:[esi]
  40d1b2:	mov    cl,0x8
  40d1b4:	pusha  
  40d1b5:	jle    0x40d214
  40d1b7:	imul   BYTE PTR [ebx]
  40d1b9:	cmp    eax,0x15ca9cd8
  40d1be:	repnz add bl,al
  40d1c1:	sbb    BYTE PTR [edi+0x43],al
  40d1c4:	in     al,0x29
  40d1c6:	lds    eax,FWORD PTR ss:[ebp-0x4dee1f34]
  40d1cd:	xor    ch,bl
  40d1cf:	in     eax,0x8f
  40d1d1:	mov    eax,0xa05dda49
  40d1d6:	cdq    
  40d1d7:	push   esi
  40d1d8:	xor    BYTE PTR [edi],bl
  40d1da:	lods   eax,DWORD PTR ds:[esi]
  40d1db:	out    dx,al
  40d1dc:	jl     0x40d167
  40d1de:	pop    esi
  40d1df:	adc    BYTE PTR [edi-0x22],bh
  40d1e2:	or     BYTE PTR [ecx],dl
  40d1e4:	and    bh,bl
  40d1e6:	popf   
  40d1e7:	cs je  0x40d1e6
  40d1ea:	fdiv   QWORD PTR [esi-0x781b236a]
  40d1f0:	mov    edx,0xf7f71a95
  40d1f5:	jae    0x40d258
  40d1f7:	fmul   QWORD PTR [eax+0x18]
  40d1fa:	pushf  
  40d1fb:	rol    DWORD PTR [edi+0x4e170600],0xd1
  40d202:	stos   DWORD PTR es:[edi],eax
  40d203:	mov    dl,0x8c
  40d205:	xchg   ebx,eax
  40d206:	pushf  
  40d207:	stos   DWORD PTR es:[edi],eax
  40d208:	iret   
  40d209:	mov    ch,0xe0
  40d20b:	xlat   BYTE PTR ds:[ebx]
  40d20c:	test   eax,0xc810f977
  40d211:	int    0x5e
  40d213:	(bad)  
  40d214:	and    eax,0x13d69177
  40d219:	stos   BYTE PTR es:[edi],al
  40d21a:	jae    0x40d1bd
  40d21c:	loopne 0x40d206
  40d21e:	femms  
  40d220:	push   ds
  40d221:	mov    dh,0x89
  40d223:	pop    ebx
  40d224:	or     BYTE PTR [eax+0x13],ch
  40d227:	mov    ah,0x95
  40d229:	sahf   
  40d22a:	xchg   DWORD PTR [ecx+0x7f],ebx
  40d22d:	dec    ebx
  40d22e:	pop    es
  40d22f:	test   DWORD PTR [esi+0x45],0x55cb2914
  40d236:	pop    ss
  40d237:	jmp    FWORD PTR [ecx+0x2665d2e2]
  40d23d:	mov    fs,ebp
  40d23f:	mov    ah,0x6a
  40d241:	retf   0xbf37
  40d244:	cmp    eax,0x49f6ad78
  40d249:	pop    edx
  40d24a:	sub    BYTE PTR [ebp+0x8d13752],ch
  40d250:	mov    al,ds:0x69a50efd
  40d255:	call   esi
  40d257:	mov    esp,0x5346cf26
  40d25c:	cmp    DWORD PTR [edx-0x1c],edi
  40d25f:	imul   ecx,DWORD PTR [ebx+0x34],0x7453080f
  40d266:	cmp    al,0x6
  40d268:	inc    edx
  40d269:	adc    cl,BYTE PTR [eax-0x47]
  40d26c:	inc    eax
  40d26d:	inc    ebx
  40d26e:	pop    ecx
  40d26f:	ret    0xd0e4
  40d272:	popf   
  40d273:	hlt    
  40d274:	mov    esp,0x6d4e2879
  40d279:	mov    edx,0x5a808bb7
  40d27e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d27f:	jb     0x40d2ff
  40d281:	dec    esp
  40d282:	(bad)  [edi+eiz*2-0x72]
  40d286:	sub    BYTE PTR [esi],bh
  40d288:	inc    ebp
  40d289:	cmp    DWORD PTR [eax+0x60],ebx
  40d28c:	push   ebp
  40d28d:	mov    esi,0x2dcbdbb2
  40d292:	sbb    al,0x9f
  40d294:	pop    edi
  40d295:	nop
  40d296:	ds jns 0x40d2b7
  40d299:	adc    ch,0x7d
  40d29c:	dec    esp
  40d29d:	loopne 0x40d22c
  40d29f:	dec    ecx
  40d2a0:	mov    eax,0x72820332
  40d2a5:	pop    ebp
  40d2a6:	arpl   WORD PTR [eax-0x4b],di
  40d2a9:	jecxz  0x40d2a0
  40d2ab:	pushf  
  40d2ac:	test   DWORD PTR [esi],ecx
  40d2ae:	push   ebx
  40d2af:	dec    esp
  40d2b0:	sar    DWORD PTR [ebx+esi*4-0x254a1fcf],0x64
  40d2b8:	push   ss
  40d2b9:	out    0xb0,al
  40d2bb:	mov    ah,0x95
  40d2bd:	mov    dh,0x1a
  40d2bf:	push   edx
  40d2c0:	pmulhw mm6,QWORD PTR [ebx]
  40d2c3:	push   edx
  40d2c4:	stos   BYTE PTR es:[edi],al
  40d2c5:	xchg   ebx,eax
  40d2c6:	xchg   esi,eax
  40d2c7:	out    dx,eax
  40d2c8:	dec    eax
  40d2c9:	xor    al,BYTE PTR [ebx]
  40d2cb:	pop    edi
  40d2cc:	mov    esp,esi
  40d2ce:	les    esi,FWORD PTR [ebp+0x3f]
  40d2d1:	(bad)  
  40d2d3:	icebp  
  40d2d4:	das    
  40d2d5:	(bad)  
  40d2d6:	call   DWORD PTR ds:0xdd8f97e0
  40d2dc:	fcom   DWORD PTR [edx]
  40d2de:	mov    eax,0xccd36370
  40d2e3:	shr    DWORD PTR [edi],1
  40d2e5:	push   es
  40d2e6:	fdivp  st(0),st
  40d2e8:	es (bad) 
  40d2eb:	addr16 in al,0xde
  40d2ee:	imul   BYTE PTR [ebp-0x3880a53]
  40d2f4:	fsub   DWORD PTR [esi+0x48]
  40d2f7:	dec    esi
  40d2f8:	add    DWORD PTR [edx],ebx
  40d2fa:	jne    0x40d300
  40d2fc:	mov    ch,0xa
  40d2fe:	movntq (bad),mm6
  40d2ff:	out    0xf3,eax
  40d301:	clc    
  40d302:	in     al,0xd0
  40d304:	mov    ds:0xc5a4af1e,al
  40d309:	imul   ebp,DWORD PTR [ecx-0x6f],0x71547a0e
  40d310:	dec    ebx
  40d311:	mov    cl,0x86
  40d313:	jmp    0x4063:0xed205382
  40d31a:	call   0x952:0x13de585d
  40d321:	cld    
  40d322:	adc    DWORD PTR [ebp+0x36454ab8],ebp
  40d328:	test   BYTE PTR [eax+0x3e080be7],al
  40d32e:	mov    bh,0xdd
  40d330:	dec    esi
  40d331:	lods   al,BYTE PTR ds:[esi]
  40d332:	hlt    
  40d333:	xchg   BYTE PTR [eax],al
  40d335:	icebp  
  40d336:	icebp  
  40d337:	sbb    eax,0x1897af8
  40d33c:	adc    al,0x2a
  40d33e:	inc    esp
  40d33f:	xor    DWORD PTR [ecx],esp
  40d341:	push   esi
  40d342:	call   0xbee607b
  40d347:	jge    0x40d2d0
  40d349:	cwde   
  40d34a:	ss test al,0x9b
  40d34d:	ror    DWORD PTR [edx-0x79],1
  40d350:	gs jae 0x40d2db
  40d353:	icebp  
  40d354:	mov    bl,0xdd
  40d356:	scas   al,BYTE PTR es:[edi]
  40d357:	sbb    esp,0x18
  40d35a:	or     ah,BYTE PTR [ebx]
  40d35c:	dec    ecx
  40d35d:	inc    esi
  40d35e:	ds dec ebx
  40d360:	adc    edx,DWORD PTR [ecx-0x24172c0f]
  40d366:	add    al,0x4b
  40d368:	dec    edi
  40d369:	mov    eax,0x788be4a1
  40d36e:	frstor [ebp-0x57]
  40d371:	je     0x40d392
  40d373:	inc    eax
  40d374:	repz pop ecx
  40d376:	retf   
  40d377:	into   
  40d378:	sbb    esp,DWORD PTR ds:0x182b3028
  40d37e:	adc    ebx,DWORD PTR [edx+0x73644ef0]
  40d384:	ret    
  40d385:	mov    al,ds:0x36145d03
  40d38a:	(bad)  
  40d38b:	xchg   DWORD PTR [esi],ecx
  40d38d:	or     eax,edi
  40d38f:	(bad)  
  40d390:	std    
  40d391:	(bad)  
  40d392:	cli    
  40d393:	xor    dh,BYTE PTR [esi]
  40d395:	push   ecx
  40d396:	mov    ebx,0x717a79d1
  40d39b:	arpl   WORD PTR [ecx+0x20],bp
  40d39e:	xchg   BYTE PTR [ebx+ecx*2],ch
  40d3a1:	xor    eax,0x34edbce7
  40d3a6:	jns    0x40d409
  40d3a8:	call   0x33d6:0x97216b39
  40d3af:	mov    BYTE PTR [edi],ah
  40d3b1:	adc    DWORD PTR [ebx+ebp*4],eax
  40d3b4:	adc    BYTE PTR [ebx],cl
  40d3b6:	std    
  40d3b7:	xchg   edx,eax
  40d3b8:	aad    0x20
  40d3ba:	(bad)  
  40d3bb:	lods   eax,DWORD PTR es:[esi]
  40d3bd:	ja     0x40d386
  40d3bf:	sub    eax,ebp
  40d3c1:	(bad)  
  40d3c2:	aas    
  40d3c3:	out    0x7,eax
  40d3c5:	fisttp QWORD PTR [eax+ecx*8]
  40d3c8:	(bad)  [ebp-0x24]
  40d3cb:	dec    edx
  40d3cc:	sbb    BYTE PTR [ebx-0x7e],dl
  40d3cf:	loope  0x40d3c6
  40d3d1:	rcl    WORD PTR [eax-0x80],0xcf
  40d3d6:	jbe    0x40d449
  40d3d8:	push   ebp
  40d3d9:	int    0xe8
  40d3db:	pop    ecx
  40d3dc:	push   es
  40d3dd:	lock mov ebp,DWORD PTR [ebx*1-0x11e14f02]
  40d3e5:	mov    ds:0xaf46d6d6,al
  40d3ea:	add    edx,esi
  40d3ec:	add    eax,0x7de88ffa
  40d3f1:	dec    esp
  40d3f2:	mov    ds:0x150f209f,eax
  40d3f7:	xchg   esp,eax
  40d3f8:	push   0xffffffeb
  40d3fa:	jecxz  0x40d3ac
  40d3fc:	and    bh,al
  40d3fe:	in     al,0x30
  40d400:	push   eax
  40d401:	call   0x14e9:0x8706d8c6
  40d408:	inc    BYTE PTR [ecx]
  40d40a:	inc    eax
  40d40b:	cmp    BYTE PTR [esi],bh
  40d40d:	ret    0xbf5c
  40d410:	fisubr DWORD PTR [esi+0x68]
  40d413:	xchg   ecx,eax
  40d414:	xor    al,BYTE PTR [esi]
  40d416:	sar    BYTE PTR [ebp+edx*8-0x1e2f3660],1
  40d41d:	fpatan 
  40d41f:	push   cs
  40d420:	sbb    BYTE PTR [esi+0x4],ch
  40d423:	jle    0x40d3ff
  40d425:	stc    
  40d426:	aad    0x87
  40d428:	cmp    edi,DWORD PTR [edi]
  40d42a:	rcl    bl,cl
  40d42c:	fild   QWORD PTR [esi+0x7122aeb7]
  40d432:	loop   0x40d4b2
  40d434:	inc    esp
  40d435:	aas    
  40d436:	loope  0x40d46e
  40d438:	mov    dl,0xce
  40d43a:	push   0xb2bcbc9e
  40d43f:	clc    
  40d440:	enter  0xffcb,0x69
  40d444:	inc    esi
  40d445:	test   al,0x14
  40d447:	ins    BYTE PTR es:[edi],dx
  40d448:	jnp    0x40d492
  40d44a:	nop
  40d44b:	sar    BYTE PTR [edi+0x79],cl
  40d44e:	call   0x365ee0c8
  40d453:	fisub  WORD PTR [ebx+0x5b]
  40d456:	into   
  40d457:	add    eax,0x703a8d55
  40d45c:	stos   BYTE PTR es:[edi],al
  40d45d:	jnp    0x40d42e
  40d45f:	fstp   TBYTE PTR [edx+0x3f]
  40d462:	mov    al,0x56
  40d464:	js     0x40d428
  40d466:	out    dx,al
  40d467:	mov    ds:0xa85252e,al
  40d46c:	retf   0x89e0
  40d46f:	add    ah,ah
  40d471:	loopne 0x40d410
  40d473:	jns    0x40d479
  40d475:	shr    DWORD PTR [esp+ebx*1+0x5d],1
  40d479:	sbb    ebp,0x5f558721
  40d47f:	es xchg ebx,eax
  40d481:	daa    
  40d482:	mov    edx,0x2188f29a
  40d487:	outs   dx,BYTE PTR ds:[esi]
  40d488:	mov    al,0x91
  40d48a:	inc    edi
  40d48b:	daa    
  40d48c:	fstp   QWORD PTR [ecx]
  40d48e:	lods   eax,DWORD PTR ds:[esi]
  40d48f:	sbb    eax,0xda7161bf
  40d494:	pop    edi
  40d495:	stos   BYTE PTR es:[edi],al
  40d496:	and    BYTE PTR [ebp+ebx*4+0x5f],cl
  40d49a:	mov    esp,0x5435e0c8
  40d49f:	retw   
  40d4a1:	or     esi,0x8f449c18
  40d4a7:	jae    0x40d460
  40d4a9:	fwait
  40d4aa:	nop
  40d4ab:	sti    
  40d4ac:	or     al,0x15
  40d4ae:	lock jae 0x40d52d
  40d4b1:	lods   eax,DWORD PTR ds:[esi]
  40d4b2:	loop   0x40d4c0
  40d4b4:	fbld   TBYTE PTR [ecx]
  40d4b6:	pop    edi
  40d4b7:	rcl    BYTE PTR [edi-0x1e],1
  40d4ba:	mov    ecx,0x1c11f12d
  40d4bf:	sbb    edx,DWORD PTR [ebx]
  40d4c1:	dec    ecx
  40d4c2:	mov    ds:0x9ae7e0a0,eax
  40d4c7:	add    al,0x73
  40d4c9:	cwde   
  40d4ca:	popf   
  40d4cb:	aaa    
  40d4cc:	ins    DWORD PTR es:[edi],dx
  40d4cd:	arpl   WORD PTR [ebx-0x21],bx
  40d4d0:	or     eax,0x7df3a573
  40d4d5:	sahf   
  40d4d6:	mov    al,ds:0x3cbf934f
  40d4db:	mov    dl,0xf0
  40d4dd:	jo     0x40d49d
  40d4df:	out    0x23,eax
  40d4e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4e2:	jl     0x40d48b
  40d4e4:	or     edi,edx
  40d4e6:	xchg   ebx,eax
  40d4e7:	lds    ebp,FWORD PTR [esp+ecx*8]
  40d4ea:	lods   eax,DWORD PTR ds:[esi]
  40d4eb:	cdq    
  40d4ec:	mov    ebx,0x407a33f1
  40d4f1:	pop    eax
  40d4f2:	aas    
  40d4f3:	sete   BYTE PTR [edi+0x4d]
  40d4f7:	(bad)  
  40d4f8:	xlat   BYTE PTR ds:[ebx]
  40d4f9:	and    al,0xd3
  40d4fb:	fsub   st,st(3)
  40d4fd:	inc    edi
  40d4fe:	out    0x0,eax
  40d500:	in     eax,dx
  40d501:	fcomp  QWORD PTR [edx]
  40d503:	popf   
  40d504:	ret    0x86a8
  40d507:	sub    ecx,ebx
  40d509:	popf   
  40d50a:	mov    eax,0x4402fc73
  40d50f:	out    0x98,eax
  40d511:	fisttp WORD PTR [edx-0x34b8732d]
  40d517:	jle    0x40d546
  40d519:	xor    dh,BYTE PTR [esi-0x65424cba]
  40d51f:	mov    ebp,0x34eb0396
  40d524:	mov    eax,ds:0xbaa39ca9
  40d529:	out    dx,al
  40d52a:	call   0xb3b3:0x5eb03843
  40d531:	mov    eax,DWORD PTR [ebp-0x1b]
  40d534:	std    
  40d535:	xchg   edi,eax
  40d536:	mov    bh,dl
  40d538:	mov    edi,0x5b12e5e0
  40d53d:	or     esi,DWORD PTR [edx]
  40d53f:	in     al,dx
  40d540:	or     eax,0x384896c7
  40d545:	xchg   ebx,eax
  40d546:	pop    esi
  40d547:	mov    WORD PTR [ecx],?
  40d549:	dec    eax
  40d54a:	out    dx,al
  40d54b:	(bad)  
  40d54c:	daa    
  40d54d:	adc    edi,DWORD PTR [esi+0x54]
  40d550:	(bad)  
  40d551:	or     esp,edx
  40d553:	mov    al,0xcb
  40d555:	adc    ecx,DWORD PTR [ebp+0x2e5b4c3b]
  40d55b:	fsub   DWORD PTR [ebx+0x1bf6fd48]
  40d561:	sub    BYTE PTR [ebx+0x37b356b6],dl
  40d567:	jnp    0x40d5e1
  40d569:	mov    eax,0xef360be
  40d56e:	cmp    edx,0x63af256e
  40d574:	or     al,BYTE PTR cs:[esi]
  40d577:	jmp    0xb3abd96c
  40d57c:	pushf  
  40d57d:	in     eax,dx
  40d57e:	mov    esi,0x31da1b51
  40d583:	lahf   
  40d584:	push   edi
  40d585:	push   ds
  40d586:	mov    al,0xf1
  40d588:	icebp  
  40d589:	mov    dh,0xcf
  40d58b:	and    eax,0xe30db0df
  40d590:	lods   al,BYTE PTR ds:[esi]
  40d591:	shl    DWORD PTR [esi],0xf4
  40d594:	and    ebx,DWORD PTR [edi]
  40d596:	dec    ebp
  40d597:	mov    bh,BYTE PTR [ebx]
  40d599:	imul   edi,DWORD PTR [edi+0x5a],0x15008d31
  40d5a0:	inc    eax
  40d5a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5a2:	imul   eax,esp,0xffffff99
  40d5a5:	push   ebp
  40d5a6:	adc    BYTE PTR [edi-0x4b],ah
  40d5a9:	xor    eax,0x9e68339b
  40d5ae:	push   es
  40d5af:	pop    ds
  40d5b0:	push   DWORD PTR [edi+0x3f]
  40d5b3:	push   ebx
  40d5b4:	fs in  eax,dx
  40d5b6:	dec    edx
  40d5b7:	ret    
  40d5b8:	mov    cl,0xca
  40d5ba:	sar    BYTE PTR [ecx],0x3c
  40d5bd:	cmp    DWORD PTR [edx+ebx*2+0x6f],edx
  40d5c1:	inc    edi
  40d5c2:	or     BYTE PTR [ebx],ch
  40d5c4:	repz jmp 0x84f2e11e
  40d5ca:	or     eax,0xa97e0819
  40d5cf:	out    0x52,eax
  40d5d1:	into   
  40d5d2:	test   eax,0x9de7cc9a
  40d5d7:	cmp    BYTE PTR [edx-0x586397b8],0x2c
  40d5de:	loopne 0x40d57e
  40d5e0:	lahf   
  40d5e1:	mov    bh,0x9d
  40d5e3:	and    eax,0x32ec0f1a
  40d5e8:	xchg   ebx,eax
  40d5e9:	sti    
  40d5ea:	and    al,0xd1
  40d5ec:	jns    0x40d581
  40d5ee:	cli    
  40d5ef:	out    dx,eax
  40d5f0:	cmp    DWORD PTR [ebx+0x5b],esp
  40d5f3:	xchg   esp,eax
  40d5f4:	and    cl,bl
  40d5f6:	ds jl  0x40d603
  40d5f9:	je     0x40d65e
  40d5fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5fc:	mov    ecx,0x19a43c90
  40d601:	sub    DWORD PTR [eax-0x21],edx
  40d604:	cmp    esi,DWORD PTR [ebx+eax*8-0x3805d382]
  40d60b:	aad    0xd1
  40d60d:	push   edx
  40d60e:	jmp    0x88e665cc
  40d613:	mov    bh,0x7f
  40d615:	add    DWORD PTR [ebx+ebx*4+0x68],0xffffffa7
  40d61a:	ja     0x40d660
  40d61c:	stos   DWORD PTR es:[edi],eax
  40d61d:	push   ss
  40d61e:	adc    ah,cl
  40d620:	ret    
  40d621:	xor    eax,0x4a13145e
  40d626:	mov    esp,0xb677a8ab
  40d62b:	sahf   
  40d62c:	or     eax,0x1e7b8e4c
  40d631:	push   ecx
  40d632:	test   BYTE PTR [ecx+edx*1+0x5091d787],al
  40d639:	xor    al,0x3b
  40d63b:	fwait
  40d63c:	out    dx,al
  40d63d:	adc    eax,0xe5b64747
  40d642:	and    DWORD PTR [ecx+0x5f],0x1418dff
  40d649:	cdq    
  40d64a:	mov    BYTE PTR [ebp-0x77],dl
  40d64d:	pop    eax
  40d64e:	jge    0x40d691
  40d650:	pop    esp
  40d651:	retf   
  40d652:	pop    es
  40d653:	sub    eax,0x6d93a2a7
  40d658:	cmp    BYTE PTR [ecx],ch
  40d65a:	xchg   ebx,eax
  40d65b:	jmp    0xcb3b390b
  40d660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d661:	pop    edi
  40d662:	xchg   edx,eax
  40d663:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d664:	pop    ecx
  40d665:	shr    DWORD PTR ds:0xfbf027e3,cl
  40d66b:	fs add al,0x19
  40d66e:	mov    esi,0x8bca312b
  40d673:	mov    dh,0xa5
  40d675:	push   cs
  40d676:	cmp    cl,ch
  40d678:	jo     0x40d63c
  40d67a:	xchg   esi,eax
  40d67b:	inc    esi
  40d67c:	dec    ecx
  40d67d:	lahf   
  40d67e:	imul   esp,DWORD PTR [edi],0xffffffa5
  40d681:	pop    ebx
  40d682:	sub    BYTE PTR fs:[esi],bl
  40d685:	push   ebx
  40d686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d687:	in     eax,0x22
  40d689:	or     edi,eax
  40d68b:	(bad)  
  40d68c:	enter  0x9d54,0x91
  40d690:	xor    ch,al
  40d692:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d693:	xchg   ecx,eax
  40d694:	sub    edx,ebp
  40d696:	jmp    0xa3b01fbd
  40d69b:	addr16 mov cl,0xac
  40d69e:	loop   0x40d657
  40d6a0:	xchg   ebx,eax
  40d6a1:	stos   BYTE PTR es:[edi],al
  40d6a2:	in     al,dx
  40d6a3:	and    al,0x6b
  40d6a5:	sbb    DWORD PTR [edx],ecx
  40d6a7:	sub    al,0x41
  40d6a9:	adc    eax,0x13fa8bee
  40d6ae:	cmp    DWORD PTR [edx+0xdc4c5a4],ecx
  40d6b4:	adc    BYTE PTR [edi+edx*4],ch
  40d6b7:	add    bh,BYTE PTR [edx]
  40d6b9:	and    al,0xe4
  40d6bb:	adc    ch,BYTE PTR [edx-0x2f]
  40d6be:	add    al,0xb
  40d6c0:	out    0xa7,eax
  40d6c2:	stc    
  40d6c3:	gs in  eax,0x4c
  40d6c6:	lock in al,dx
  40d6c8:	jl     0x40d67c
  40d6ca:	xchg   edx,eax
  40d6cb:	dec    edx
  40d6cc:	cmp    al,0x20
  40d6ce:	sub    DWORD PTR [esi+ebx*2],0xffffffd9
  40d6d2:	test   al,0xcf
  40d6d4:	mov    al,0x37
  40d6d6:	popa   
  40d6d7:	data16 in al,dx
  40d6d9:	pop    ebp
  40d6da:	fisubr WORD PTR [edx]
  40d6dc:	jmp    0x40d72f
  40d6de:	jnp    0x40d685
  40d6e0:	in     eax,0xc
  40d6e2:	mov    edx,0xecc93c25
  40d6e7:	nop
  40d6e8:	cmp    al,0x64
  40d6ea:	aaa    
  40d6eb:	xchg   edx,eax
  40d6ec:	es ds call 0x458:0x5bdb3eb0
  40d6f5:	leave  
  40d6f6:	sub    DWORD PTR [edx-0x7f50a1bf],edx
  40d6fc:	(bad)  
  40d6fd:	call   0x399b14aa
  40d702:	dec    DWORD PTR [esi-0x33559f76]
  40d708:	pop    esi
  40d709:	mov    ebx,ss
  40d70b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d70c:	inc    esp
  40d70d:	sbb    eax,0xc07eeea0
  40d712:	mov    bl,bl
  40d714:	outs   dx,DWORD PTR ds:[esi]
  40d715:	jle    0x40d6df
  40d717:	sbb    al,0x42
  40d719:	pop    edi
  40d71a:	fisttp DWORD PTR [ecx]
  40d71c:	pop    ds
  40d71d:	cmp    al,0x5a
  40d71f:	xlat   BYTE PTR ds:[ebx]
  40d720:	jbe    0x40d74d
  40d722:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d723:	fild   WORD PTR [ecx+0x4864a6cb]
  40d729:	sbb    BYTE PTR [eax-0x2a3bdf18],dl
  40d72f:	dec    ebp
  40d730:	out    0xd4,al
  40d732:	sub    dh,BYTE PTR [esp+ecx*4-0x7e0996c]
  40d739:	pop    ds
  40d73a:	sti    
  40d73b:	les    edx,FWORD PTR [ebp-0x39]
  40d73e:	gs scas al,BYTE PTR es:[edi]
  40d740:	inc    ebx
  40d741:	cdq    
  40d742:	das    
  40d743:	xor    DWORD PTR [edi-0x52],eax
  40d746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d747:	cmovno esi,DWORD PTR [ecx]
  40d74a:	loop   0x40d765
  40d74c:	mov    bl,0x1a
  40d74e:	loopne 0x40d7cb
  40d750:	shl    DWORD PTR [edx],0x80
  40d753:	mov    dh,0x5b
  40d755:	lea    ebp,[edi-0x3]
  40d758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d759:	pusha  
  40d75a:	aas    
  40d75b:	xchg   ah,bl
  40d75d:	mov    ch,0x5b
  40d75f:	retf   0x42f5
  40d762:	ja     0x40d7cc
  40d764:	int3   
  40d765:	mov    edx,0xca7c434a
  40d76a:	cli    
  40d76b:	jmp    0x47574b5e
  40d770:	adc    eax,0x9ed608cd
  40d775:	(bad)  
  40d776:	loop   0x40d752
  40d778:	(bad)  
  40d779:	retf   0x5874
  40d77c:	ins    BYTE PTR es:[edi],dx
  40d77d:	nop
  40d77e:	xor    eax,0x8e08bb3
  40d783:	push   eax
  40d784:	mov    bh,0x6e
  40d786:	stos   BYTE PTR es:[edi],al
  40d787:	xchg   ebp,eax
  40d788:	or     DWORD PTR [ebp+0x52],ecx
  40d78b:	pop    edx
  40d78c:	adc    esi,DWORD PTR [ebx+ebp*2+0x72]
  40d790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d791:	mov    ebp,0x609c1ba6
  40d796:	inc    eax
  40d797:	jae    0x40d797
  40d799:	jnp    0x40d75b
  40d79b:	(bad)  
  40d79c:	iret   
  40d79d:	adc    ah,bl
  40d79f:	pop    ecx
  40d7a0:	pop    ds
  40d7a1:	outs   dx,BYTE PTR ds:[esi]
  40d7a2:	mov    ah,0xe5
  40d7a4:	loopne 0x40d800
  40d7a6:	inc    ebx
  40d7a7:	leave  
  40d7a8:	mov    eax,0xe33d90c5
  40d7ad:	call   0xe2c0935a
  40d7b2:	sbb    eax,0xc6c78a2
  40d7b7:	ret    
  40d7b8:	xchg   ecx,eax
  40d7b9:	push   edx
  40d7ba:	xchg   BYTE PTR [esi],dh
  40d7bc:	mov    eax,ds:0x1cd106dd
  40d7c1:	(bad)  
  40d7c2:	jmp    0x835767b8
  40d7c7:	out    0x42,al
  40d7c9:	mov    bh,bl
  40d7cb:	xor    bh,BYTE PTR [eax]
  40d7cd:	sti    
  40d7ce:	imul   edi,DWORD PTR [edi],0xc264ed5e
  40d7d4:	dec    ecx
  40d7d5:	clc    
  40d7d6:	retf   
  40d7d7:	rcr    DWORD PTR [edi],0xd5
  40d7da:	scas   al,BYTE PTR es:[edi]
  40d7db:	inc    edx
  40d7dc:	jne    0x40d827
  40d7de:	ret    0xcffe
  40d7e1:	push   esp
  40d7e2:	push   ebp
  40d7e3:	ret    0xd56f
  40d7e6:	mov    ecx,0x7984d1e8
  40d7eb:	fdiv   QWORD PTR [ecx+0x69957dfa]
  40d7f1:	jmp    0x462:0xc38bdd3f
  40d7f8:	out    dx,al
  40d7f9:	loop   0x40d788
  40d7fb:	dec    ebx
  40d7fc:	mov    cl,0x59
  40d7fe:	xor    DWORD PTR [eax-0x28],edi
  40d801:	mov    BYTE PTR [esi+0x72e5cb12],ch
  40d807:	and    edx,DWORD PTR [edi]
  40d809:	(bad)  
  40d80a:	clc    
  40d80b:	int    0x77
  40d80d:	dec    ecx
  40d80e:	std    
  40d80f:	cmp    DWORD PTR [edi+ecx*8],0xffffffeb
  40d813:	mov    WORD PTR [ecx],fs
  40d815:	and    BYTE PTR [eax],bl
  40d817:	pop    ebp
  40d818:	or     dl,BYTE PTR [edi]
  40d81a:	cld    
  40d81b:	mov    edi,0x32f5bdae
  40d820:	pop    edx
  40d821:	sar    DWORD PTR [ecx],1
  40d823:	add    eax,0x9a4ae3d
  40d828:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d829:	dec    esi
  40d82a:	dec    edi
  40d82b:	and    ecx,DWORD PTR [esi]
  40d82d:	in     al,dx
  40d82e:	popa   
  40d82f:	mov    ah,0xd1
  40d831:	sbb    bl,dh
  40d833:	mov    ecx,0x35911aaf
  40d838:	fs mov ch,dl
  40d83b:	jge    0x40d88c
  40d83d:	jnp    0x40d8a7
  40d83f:	adc    al,BYTE PTR [eax]
  40d841:	dec    ebp
  40d842:	xchg   ebp,eax
  40d843:	pop    ebx
  40d844:	adc    BYTE PTR [edx+0x5140a4bd],dh
  40d84a:	jae    0x40d868
  40d84c:	inc    ebp
  40d84d:	lea    esi,[edi]
  40d84f:	pop    ss
  40d850:	gs call 0x646:0x79984807
  40d858:	mov    edx,0xfdf110a1
  40d85d:	pushf  
  40d85e:	and    dl,BYTE PTR [eax+0x5c3ac00e]
  40d864:	or     dh,dl
  40d866:	jae    0x40d88c
  40d868:	ffree  st(3)
  40d86a:	mov    dh,0x71
  40d86c:	aam    0xe1
  40d86e:	xlat   BYTE PTR ds:[ebx]
  40d86f:	jmp    0xb405:0x943d8fbf
  40d876:	sbb    DWORD PTR [ebp-0x2a],eax
  40d879:	xlat   BYTE PTR ds:[ebx]
  40d87a:	in     al,0x26
  40d87c:	adc    bh,dh
  40d87e:	push   edx
  40d87f:	ins    DWORD PTR es:[edi],dx
  40d880:	pop    ds
  40d881:	iret   
  40d882:	jnp    0x40d86f
  40d884:	cmp    bh,BYTE PTR [ebx+esi*8+0x76aeedb2]
  40d88b:	mov    ah,0x7
  40d88d:	inc    edx
  40d88e:	aas    
  40d88f:	out    0x2c,al
  40d891:	imul   esi,esp,0x75
  40d894:	mul    dl
  40d896:	outs   dx,DWORD PTR ds:[esi]
  40d897:	push   edx
  40d898:	ret    
  40d899:	xchg   ebp,eax
  40d89a:	cmp    al,0x3d
  40d89c:	test   ch,0x32
  40d89f:	popf   
  40d8a0:	ds cmp al,0x28
  40d8a3:	mov    cl,0x11
  40d8a5:	pop    ebp
  40d8a6:	imul   edx,DWORD PTR [ebx+0x6c679f92],0xffffff94
  40d8ad:	bound  edx,QWORD PTR [esi-0x53]
  40d8b0:	hlt    
  40d8b1:	adc    ebp,DWORD PTR ds:0x85e23c68
  40d8b7:	jae    0x40d920
  40d8b9:	sbb    BYTE PTR [edx+ecx*8],al
  40d8bc:	cmp    DWORD PTR [ecx-0x21c14984],0x25
  40d8c3:	stc    
  40d8c4:	mov    bl,0x20
  40d8c6:	add    al,0xa5
  40d8c8:	shl    bl,1
  40d8ca:	sub    esi,DWORD PTR [edi]
  40d8cc:	pop    edx
  40d8cd:	scas   al,BYTE PTR es:[edi]
  40d8ce:	and    eax,0x57d46255
  40d8d3:	xchg   ebx,eax
  40d8d4:	into   
  40d8d5:	and    DWORD PTR [esi],ebx
  40d8d7:	mov    ds:0x89b40941,eax
  40d8dc:	mov    dh,0x49
  40d8de:	add    eax,0x55b1128b
  40d8e3:	add    al,0x59
  40d8e5:	sbb    eax,0x9e5d855a
  40d8ea:	or     eax,0xed15ef43
  40d8ef:	xor    al,0xf8
  40d8f1:	inc    esp
  40d8f2:	aad    0x9d
  40d8f4:	mov    ds:0x4ac6a43c,eax
  40d8f9:	dec    ebp
  40d8fa:	jle    0x40d921
  40d8fc:	repnz not DWORD PTR [edi-0x71bed681]
  40d903:	xchg   ebp,eax
  40d904:	adc    DWORD PTR [edx],ebx
  40d906:	pusha  
  40d907:	dec    esp
  40d908:	cld    
  40d909:	test   al,0x8e
  40d90b:	ficom  WORD PTR [ebx+0x19]
  40d90e:	and    bh,BYTE PTR [edi-0x68]
  40d911:	mov    eax,0x7d0342ec
  40d916:	pop    edi
  40d917:	lods   al,BYTE PTR ds:[esi]
  40d918:	aas    
  40d919:	mov    al,0xf7
  40d91b:	fst    st(3)
  40d91d:	sahf   
  40d91e:	cmp    dl,BYTE PTR [edx-0x6c]
  40d921:	pop    ds
  40d922:	out    0x0,eax
  40d924:	xor    BYTE PTR [ebp-0x1a68567b],0xc6
  40d92b:	addr16 pop ecx
  40d92d:	cwde   
  40d92e:	loopne 0x40d907
  40d930:	add    eax,0x26b39624
  40d935:	std    
  40d936:	(bad)  
  40d937:	jne    0x40d904
  40d939:	mov    ecx,0x19d7daac
  40d93e:	xor    ch,bh
  40d940:	inc    ebx
  40d941:	je     0x40d976
  40d943:	bound  edx,QWORD PTR [ebp+0x6dfb3985]
  40d949:	mov    esi,0x443e6add
  40d94e:	adc    al,0x79
  40d950:	cdq    
  40d951:	mov    esp,0xaef66eb0
  40d956:	and    al,0x6a
  40d958:	sbb    edx,eax
  40d95a:	(bad)  
  40d95b:	mov    al,0x97
  40d95d:	push   es
  40d95e:	add    eax,0x175d7863
  40d963:	outs   dx,BYTE PTR ds:[esi]
  40d964:	and    bh,BYTE PTR [ebp+0x1dc682dc]
  40d96a:	xor    al,0x3a
  40d96d:	fs das 
  40d96f:	gs out dx,al
  40d971:	daa    
  40d972:	mov    cl,0xb1
  40d974:	rcr    bl,0xf5
  40d977:	pop    esp
  40d978:	sub    al,0x27
  40d97a:	shl    BYTE PTR [eax-0x6d],0xf
  40d97e:	lock xchg esi,eax
  40d980:	neg    BYTE PTR [ebx+eiz*4-0x11]
  40d984:	in     eax,0xba
  40d986:	call   0xcbbbff5a
  40d98b:	pop    ebp
  40d98c:	xor    eax,0xd03b0904
  40d991:	xchg   ebp,eax
  40d992:	retf   0xbc5a
  40d995:	call   0xd9eeaea6
  40d99a:	and    ch,cl
  40d99c:	add    eax,0xa282ea60
  40d9a1:	test   al,0x19
  40d9a3:	in     al,0x3d
  40d9a5:	push   0xbdfa2d4b
  40d9aa:	xchg   ecx,eax
  40d9ab:	jnp    0x40d9de
  40d9ad:	push   ebp
  40d9ae:	inc    ecx
  40d9af:	push   eax
  40d9b0:	xchg   esp,eax
  40d9b1:	mov    ecx,DWORD PTR [edi]
  40d9b3:	repnz dec esi
  40d9b5:	adc    esp,esi
  40d9b7:	int    0x21
  40d9b9:	mov    ah,0xa9
  40d9bb:	and    al,BYTE PTR ds:0x1c0cdc12
  40d9c1:	dec    eax
  40d9c2:	mov    ds:0x61300da4,al
  40d9c7:	std    
  40d9c8:	fist   DWORD PTR [ebx]
  40d9ca:	out    dx,eax
  40d9cb:	pop    esi
  40d9cc:	mov    eax,0x4b174fa8
  40d9d1:	mov    edx,DWORD PTR [eax*8-0x3a58ae98]
  40d9d8:	sub    DWORD PTR ds:0xaa22369a,eax
  40d9de:	xor    al,0x2f
  40d9e0:	mov    esi,0x22dd596
  40d9e5:	outs   dx,WORD PTR ds:[esi]
  40d9e7:	dec    DWORD PTR [edi+edi*8+0x23b00ff8]
  40d9ee:	call   0x5dbc6d7a
  40d9f3:	pop    ss
  40d9f4:	sub    esi,DWORD PTR [ecx]
  40d9f6:	(bad)  
  40d9f7:	int    0xfc
  40d9f9:	scas   al,BYTE PTR es:[edi]
  40d9fa:	push   eax
  40d9fb:	inc    esi
  40d9fc:	sub    eax,0xa0b0d385
  40da01:	inc    ecx
  40da02:	or     BYTE PTR [esi-0x1d],0xb5
  40da06:	jg     0x40d9bd
  40da08:	sbb    BYTE PTR [edx-0x229f1e68],al
  40da0e:	(bad)  
  40da10:	fld    DWORD PTR [eax+eax*8+0x1f6c0df7]
  40da17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da18:	sbb    BYTE PTR [ebx],0xbd
  40da1b:	jmp    0xdbe1:0x24aba6f3
  40da22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da23:	div    DWORD PTR [edx-0x52]
  40da26:	jae    0x40da1f
  40da28:	loopne 0x40d9bd
  40da2a:	push   0xffffff87
  40da2c:	imul   esp,DWORD PTR [ebp+0x40],0x7b
  40da30:	daa    
  40da31:	or     DWORD PTR [eax],esi
  40da33:	dec    eax
  40da34:	shl    cl,1
  40da36:	push   esi
  40da37:	dec    edx
  40da38:	stos   DWORD PTR es:[edi],eax
  40da39:	dec    ecx
  40da3a:	out    dx,al
  40da3b:	mul    BYTE PTR [eax+0x276ed936]
  40da41:	mov    bh,0x70
  40da43:	xor    al,0x1d
  40da45:	jb     0x40d9f6
  40da47:	dec    esi
  40da48:	fld    st(3)
  40da4a:	retf   0xaeb3
  40da4d:	rol    BYTE PTR [edi+0x75],cl
  40da50:	sahf   
  40da51:	scas   al,BYTE PTR es:[edi]
  40da52:	cli    
  40da53:	aaa    
  40da54:	inc    ebx
  40da55:	cli    
  40da56:	push   edi
  40da57:	das    
  40da58:	mov    edx,DWORD PTR [eax]
  40da5a:	adc    esi,ebp
  40da5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da5d:	and    DWORD PTR [edx],ebx
  40da5f:	push   es
  40da60:	std    
  40da61:	cdq    
  40da62:	pop    ebp
  40da63:	sub    al,0x9b
  40da65:	inc    ebx
  40da66:	stos   BYTE PTR es:[edi],al
  40da67:	mov    al,cl
  40da69:	jg     0x40da67
  40da6b:	mov    dh,ah
  40da6d:	aam    0x1e
  40da6f:	and    ch,BYTE PTR [esi]
  40da71:	jge    0x40daa5
  40da73:	fisubr WORD PTR [eax-0x36db5df8]
  40da79:	in     al,0xbc
  40da7b:	push   ds
  40da7c:	jmp    0x40daab
  40da7e:	(bad)  
  40da7f:	cmp    eax,0x30968414
  40da84:	stos   BYTE PTR es:[edi],al
  40da85:	jnp    0x40da1f
  40da87:	shl    BYTE PTR [esi+ebx*4],0xf5
  40da8b:	xchg   edx,eax
  40da8c:	sar    DWORD PTR [esi+ecx*4-0x2a423cd5],cl
  40da93:	jge    0x40da22
  40da95:	sub    BYTE PTR [ebx+0x2850204b],dh
  40da9b:	sahf   
  40da9c:	das    
  40da9d:	retf   
  40da9e:	add    dh,BYTE PTR ds:0x734d085f
  40daa4:	clc    
  40daa5:	push   cs
  40daa6:	mov    ch,0x5a
  40daa8:	add    eax,0x9a5143d5
  40daad:	aaa    
  40daae:	test   eax,0x7c6a8b2
  40dab3:	and    BYTE PTR [edx-0x6b],dh
  40dab6:	les    ebx,FWORD PTR [ebx]
  40dab8:	sbb    edi,DWORD PTR [ebp+0x2c20ac0b]
  40dabe:	cs call 0x11e3:0x4f8700d9
  40dac6:	inc    edi
  40dac7:	or     BYTE PTR [eax+0x16],al
  40daca:	xchg   ebp,eax
  40dacb:	push   es
  40dacc:	cmp    esi,DWORD PTR [edi+ecx*1+0x23]
  40dad0:	aaa    
  40dad1:	sub    BYTE PTR [ebp+0x1f],0xe3
  40dad5:	mov    DWORD PTR [ebx-0x18d6cef8],esp
  40dadb:	gs push 0xfffffffc
  40dade:	aas    
  40dadf:	or     DWORD PTR [esi+0x5de9ee8],0x8906f886
  40dae9:	jne    0x40db39
  40daeb:	cmp    BYTE PTR [edi],dl
  40daed:	cli    
  40daee:	push   es
  40daef:	mov    ebp,0xd205d246
  40daf4:	or     DWORD PTR [edx],esp
  40daf6:	retf   0x53db
  40daf9:	loope  0x40da8c
  40dafb:	mov    BYTE PTR [ebx+0x35510269],ah
  40db01:	dec    edi
  40db02:	inc    eax
  40db03:	mov    ebx,0xa619a66f
  40db08:	ret    
  40db09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0a:	jmp    0x84c78bb7
  40db0f:	inc    ecx
  40db10:	xor    BYTE PTR [ebx+0x22],0x6c
  40db14:	or     al,0x4a
  40db16:	cmp    cl,BYTE PTR [ecx-0x12101c10]
  40db1c:	test   eax,0x5a4a0116
  40db21:	stos   DWORD PTR es:[edi],eax
  40db22:	inc    ebx
  40db23:	pop    ds
  40db24:	gs push esp
  40db26:	scas   al,BYTE PTR es:[edi]
  40db27:	in     eax,0xe3
  40db29:	mov    edx,0x9437af48
  40db2e:	sub    BYTE PTR [edi],al
  40db30:	arpl   WORD PTR [esi+eiz*4-0x3cf3158c],bx
  40db37:	lods   al,BYTE PTR ds:[esi]
  40db38:	cmp    BYTE PTR [esi],ch
  40db3a:	xchg   edx,eax
  40db3b:	mov    al,0x75
  40db3d:	mov    bh,0x9b
  40db3f:	je     0x40dbbe
  40db41:	js     0x40daf3
  40db43:	adc    eax,0x2ffb91b3
  40db48:	mov    ebp,0x84f39d96
  40db4d:	(bad)  
  40db4e:	out    dx,al
  40db4f:	shr    cl,cl
  40db51:	das    
  40db52:	(bad)  
  40db53:	push   edx
  40db54:	fidiv  DWORD PTR [edx]
  40db56:	ins    BYTE PTR es:[edi],dx
  40db57:	add    eax,0xcf4b6a36
  40db5c:	call   0xc6f9d19b
  40db61:	add    BYTE PTR [esi-0x1b],0xd0
  40db65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db66:	stos   DWORD PTR es:[edi],eax
  40db67:	imul   edx,ebp,0x39c58f0c
  40db6d:	or     al,BYTE PTR [esi+0x187c1505]
  40db73:	or     bh,bh
  40db75:	dec    esp
  40db76:	iret   
  40db77:	xlat   BYTE PTR ds:[ebx]
  40db78:	mov    bh,0x2d
  40db7a:	addr16 xor dh,0x22
  40db7e:	scas   al,BYTE PTR es:[edi]
  40db7f:	(bad)  
  40db80:	cli    
  40db81:	les    ecx,FWORD PTR ds:0x6f2987b
  40db87:	xchg   edx,eax
  40db88:	dec    ebp
  40db89:	adc    cl,ah
  40db8b:	cmp    eax,0x35db9ec4
  40db90:	rcr    BYTE PTR [ebx-0x58697a61],cl
  40db96:	imul   eax,DWORD PTR [eax-0xa],0x7
  40db9a:	xor    BYTE PTR [edi+0xe],ch
  40db9d:	cli    
  40db9e:	mov    fs,WORD PTR [esi+0x1a]
  40dba1:	mov    cl,0xbc
  40dba3:	sbb    ah,bh
  40dba5:	out    dx,al
  40dba6:	repz push ebp
  40dba8:	pop    esp
  40dba9:	in     al,dx
  40dbaa:	cmp    ebp,DWORD PTR [ecx]
  40dbac:	dec    ebp
  40dbad:	push   esp
  40dbae:	test   al,0xd8
  40dbb0:	inc    esp
  40dbb1:	mov    al,ds:0xf6bd3ee4
  40dbb6:	xor    al,BYTE PTR [esi]
  40dbb8:	adc    BYTE PTR [edx-0x53],cl
  40dbbb:	cmc    
  40dbbc:	in     eax,0xa7
  40dbbe:	fdivr  DWORD PTR [edi+eiz*1]
  40dbc1:	jb     0x40db94
  40dbc3:	in     eax,dx
  40dbc4:	(bad)
  40dbc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbc8:	sbb    eax,0x2ffaf29e
  40dbcd:	scas   al,BYTE PTR es:[edi]
  40dbce:	and    al,0xda
  40dbd0:	outs   dx,DWORD PTR ds:[esi]
  40dbd1:	call   0x29d9:0xda0f6435
  40dbd8:	neg    DWORD PTR [eax-0xe]
  40dbdb:	and    al,0x61
  40dbdd:	dec    esi
  40dbde:	ficomp DWORD PTR [esi-0x77]
  40dbe1:	fadd   DWORD PTR ds:0x15d6ca3c
  40dbe7:	fld    QWORD PTR [ebx+0x53309931]
  40dbed:	fbld   TBYTE PTR [edx]
  40dbef:	dec    esi
  40dbf0:	push   cs
  40dbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf2:	jb     0x40dc19
  40dbf4:	xchg   DWORD PTR [edi],ecx
  40dbf6:	dec    ebx
  40dbf7:	ret    0x7f92
  40dbfa:	scas   eax,DWORD PTR es:[edi]
  40dbfb:	call   0x41ff3bc9
  40dc00:	mov    edx,0xc550e648
  40dc05:	dec    ebp
  40dc06:	rcl    BYTE PTR [ebx],1
  40dc08:	bound  esp,QWORD PTR [ecx-0x248fb5dd]
  40dc0e:	fdivr  st(2),st
  40dc10:	mov    edi,0x83f16ba9
  40dc15:	rcr    esi,1
  40dc17:	shr    edi,0x3e
  40dc1a:	jne    0x40dc30
  40dc1c:	adc    ch,ch
  40dc1e:	mov    esp,0x71b58f94
  40dc23:	jg     0x40dc18
  40dc25:	idiv   BYTE PTR [esi]
  40dc27:	mov    al,ds:0xd0f5a22a
  40dc2c:	adc    eax,0xfdbdfda5
  40dc31:	adc    al,0xa5
  40dc33:	call   0x107e:0xd293f9ef
  40dc3a:	(bad)  
  40dc3b:	fist   WORD PTR [esi+0x57f6f6d6]
  40dc41:	inc    esi
  40dc42:	mov    al,ds:0x5b9ec420
  40dc47:	fiadd  WORD PTR [edx-0x16]
  40dc4a:	in     eax,dx
  40dc4b:	mul    DWORD PTR [ebx]
  40dc4d:	loopne 0x40dca2
  40dc4f:	xor    BYTE PTR [ecx+0x3ffd33ba],dh
  40dc55:	imul   ebx,DWORD PTR [ebx-0x21d77358],0x1c12b95a
  40dc5f:	out    dx,al
  40dc60:	push   ecx
  40dc61:	cmp    al,0xd
  40dc63:	arpl   WORD PTR [ebx],di
  40dc65:	jo     0x40dc01
  40dc67:	in     al,dx
  40dc68:	jo     0x40dcb5
  40dc6a:	jl     0x40dcd3
  40dc6c:	pop    esi
  40dc6d:	mov    ecx,0x2fa0b75c
  40dc72:	push   esi
  40dc73:	jae    0x40dc26
  40dc75:	rol    ch,cl
  40dc77:	test   dl,bl
  40dc79:	mov    al,0x98
  40dc7b:	xor    edx,DWORD PTR [edi+0x4]
  40dc7e:	int3   
  40dc7f:	pop    ecx
  40dc80:	inc    ecx
  40dc81:	sub    al,0xf6
  40dc83:	mov    ah,0x47
  40dc85:	fxch   st(7)
  40dc87:	or     al,0x8a
  40dc89:	in     al,0xbf
  40dc8b:	(bad)  
  40dc8c:	ins    DWORD PTR es:[edi],dx
  40dc8d:	cmc    
  40dc8e:	ins    DWORD PTR es:[edi],dx
  40dc8f:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc91:	and    ah,BYTE PTR [ecx-0x6b]
  40dc94:	pop    ebx
  40dc95:	stos   BYTE PTR es:[di],al
  40dc97:	pop    esp
  40dc98:	call   0x563a:0xffcb2d0e
  40dc9f:	and    ebx,DWORD PTR [ebx-0x2f]
  40dca2:	addr16 jle 0x40dcc9
  40dca5:	xchg   edx,eax
  40dca6:	leave  
  40dca7:	data16 (bad) 
  40dca9:	les    ebx,FWORD PTR [esi+0xba640df]
  40dcaf:	adc    ah,dl
  40dcb1:	hlt    
  40dcb2:	nop
  40dcb3:	popa   
  40dcb4:	(bad)  
  40dcb5:	push   cs
  40dcb6:	jmp    0x40dd32
  40dcb8:	add    edi,DWORD PTR [edx]
  40dcba:	pop    edx
  40dcbb:	dec    ebx
  40dcbc:	jns    0x40dcd4
  40dcbe:	int3   
  40dcbf:	(bad)  
  40dcc0:	mov    al,0x95
  40dcc2:	sbb    bh,BYTE PTR [edi]
  40dcc4:	addr16 in eax,dx
  40dcc6:	ins    BYTE PTR es:[edi],dx
  40dcc7:	jl     0x40dd16
  40dcc9:	pop    edi
  40dcca:	mov    bh,0xe9
  40dccc:	call   0x44aa61e4
  40dcd1:	jge    0x40dcf9
  40dcd3:	fcmovnb st,st(7)
  40dcd5:	stos   DWORD PTR es:[edi],eax
  40dcd6:	mov    BYTE PTR [eax-0x306a122a],dh
  40dcdc:	repz lds eax,FWORD PTR [ebx-0x13]
  40dce0:	push   cs
  40dce1:	sub    edi,DWORD PTR [ebp+0x73]
  40dce4:	clts   
  40dce6:	sbb    DWORD PTR [edi+0x59b9a9e9],0xffffffdd
  40dced:	mov    dl,0xce
  40dcef:	es pop eax
  40dcf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcf2:	pop    ecx
  40dcf3:	adc    DWORD PTR [edi+0x68],esp
  40dcf6:	sub    DWORD PTR [ecx+0x25340339],edi
  40dcfc:	sbb    DWORD PTR [eax],eax
  40dcfe:	adc    eax,0x7804bbaa
  40dd03:	ins    BYTE PTR es:[edi],dx
  40dd04:	retf   0xcf8b
  40dd07:	add    eax,0x378f8edd
  40dd0c:	test   eax,0x453af596
  40dd11:	add    ebp,ebx
  40dd13:	pop    ebx
  40dd14:	mov    esi,0xc28d18be
  40dd19:	(bad)  
  40dd1a:	xor    BYTE PTR [eax],dh
  40dd1c:	push   esi
  40dd1d:	mov    cl,0x9c
  40dd1f:	dec    ecx
  40dd20:	adc    dl,dh
  40dd22:	mov    al,ds:0x8e01a24b
  40dd27:	adc    esi,0x70952717
  40dd2d:	cmp    DWORD PTR [ebx],esp
  40dd2f:	test   eax,0x97058dd5
  40dd34:	mov    WORD PTR [edx-0x12],gs
  40dd37:	pop    ds
  40dd38:	ja     0x40dd30
  40dd3a:	add    BYTE PTR [ebx],dl
  40dd3c:	ja     0x40dd77
  40dd3e:	js     0x40dd4a
  40dd40:	or     al,0xa4
  40dd42:	push   esp
  40dd43:	push   cs
  40dd44:	gs push 0x35cba99b
  40dd4a:	and    esp,DWORD PTR [edx+0x68]
  40dd4d:	out    dx,al
  40dd4e:	or     BYTE PTR [edi+0x490ae6fc],cl
  40dd54:	(bad)  
  40dd55:	jbe    0x40dda3
  40dd57:	or     DWORD PTR [esi+0x5],ecx
  40dd5a:	xor    esi,DWORD PTR [edx-0x73]
  40dd5d:	cmp    ebp,edi
  40dd5f:	xchg   ebx,eax
  40dd60:	jnp    0x40dd8a
  40dd62:	add    al,0xa5
  40dd64:	in     al,dx
  40dd65:	je     0x40dd6f
  40dd67:	jmp    0x40dcf0
  40dd69:	les    edi,FWORD PTR [eax-0x43]
  40dd6c:	sub    eax,0x510ee1ad
  40dd71:	sbb    eax,0x9001a1e4
  40dd76:	xor    eax,DWORD PTR [ecx-0x27]
  40dd79:	mov    ah,0xed
  40dd7b:	pop    ebx
  40dd7c:	test   DWORD PTR [eax],ecx
  40dd7e:	icebp  
  40dd7f:	bound  ecx,QWORD PTR [ebx]
  40dd81:	loop   0x40dda2
  40dd83:	dec    edx
  40dd84:	or     dl,BYTE PTR [edx]
  40dd86:	cmp    al,0x79
  40dd88:	jmp    0xbc58:0xf010e0b2
  40dd8f:	gs loop 0x40de10
  40dd92:	inc    ecx
  40dd93:	lock mov dh,0x55
  40dd96:	cwde   
  40dd97:	jnp    0x40ddfd
  40dd99:	push   ebx
  40dd9a:	sub    BYTE PTR [edx-0x4cf8d83],al
  40dda0:	jno    0x40ddc0
  40dda2:	push   ss
  40dda3:	sbb    BYTE PTR [esi+0x5e],0x8b
  40dda7:	ja     0x40dd30
  40dda9:	scas   eax,DWORD PTR es:[edi]
  40ddaa:	mov    DWORD PTR [eax+0x29],ebx
  40ddad:	aam    0xe2
  40ddaf:	mov    edi,0xb58b670b
  40ddb4:	retf   
  40ddb5:	bound  edi,QWORD PTR [esi]
  40ddb7:	inc    ebp
  40ddb8:	mov    eax,ds:0xd354d457
  40ddbd:	neg    DWORD PTR [eax+0x163b3b56]
  40ddc3:	in     eax,dx
  40ddc4:	je     0x40dd52
  40ddc6:	paddsw mm5,mm1
  40ddc9:	xchg   ecx,eax
  40ddca:	fs push cs
  40ddcc:	adc    eax,0xba4f6922
  40ddd1:	and    esi,esi
  40ddd3:	and    DWORD PTR [edi],esi
  40ddd5:	xchg   ebx,eax
  40ddd6:	rcr    ebx,cl
  40ddd8:	push   ebx
  40ddd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddda:	and    al,BYTE PTR ds:0x8f974816
  40dde0:	mov    edx,0xd60b5b2e
  40dde5:	nop
  40dde6:	push   edx
  40dde7:	xchg   ebx,eax
  40dde8:	loopne 0x40de66
  40ddea:	sub    DWORD PTR [eax-0x1482e716],ecx
  40ddf0:	dec    ebx
  40ddf1:	add    BYTE PTR [edx+0x5c],ah
  40ddf4:	cmp    BYTE PTR [edi+0x248983c],0xbc
  40ddfb:	cmp    DWORD PTR ds:0x8a85366,edx
  40de01:	mov    ecx,0x8d790016
  40de06:	sub    BYTE PTR [ebx],al
  40de08:	repnz into 
  40de0a:	sub    DWORD PTR [ebp-0x434ae20e],edx
  40de10:	gs jmp ecx
  40de13:	add    ebp,edi
  40de15:	add    DWORD PTR [edi-0x68],esi
  40de18:	jmp    0x8a4b:0x278fb6ad
  40de1f:	ret    
  40de20:	xchg   BYTE PTR [esi],al
  40de22:	cdq    
  40de23:	push   eax
  40de24:	pop    es
  40de25:	xchg   ecx,eax
  40de26:	jo     0x40de26
  40de28:	shl    DWORD PTR ds:0xa905a624,cl
  40de2e:	sbb    al,0x0
  40de30:	rcr    BYTE PTR [edi+0x47],1
  40de33:	in     eax,dx
  40de34:	mov    dh,0xad
  40de36:	enter  0xf33f,0x80
  40de3a:	sub    edx,DWORD PTR [ebx]
  40de3c:	loope  0x40ddd4
  40de3e:	(bad)  
  40de3f:	stc    
  40de40:	test   al,0x68
  40de42:	pop    eax
  40de43:	jb     0x40ddcb
  40de45:	lods   al,BYTE PTR ds:[esi]
  40de46:	push   cs
  40de47:	pop    eax
  40de48:	leave  
  40de49:	jecxz  0x40dddd
  40de4b:	das    
  40de4c:	inc    ebx
  40de4d:	jmp    0x59283144
  40de52:	dec    BYTE PTR [edi+eiz*1-0x17]
  40de56:	mov    eax,ds:0xa2d71495
  40de5b:	xor    eax,DWORD PTR [ebp+0x5dbf2f36]
  40de61:	sbb    eax,0xdf796bf1
  40de66:	push   edx
  40de67:	jmp    0x30e587e4
  40de6c:	ja     0x40dec9
  40de6e:	pop    ds
  40de6f:	xchg   BYTE PTR [edi+0x56],cl
  40de72:	out    dx,al
  40de73:	xchg   edx,eax
  40de74:	mov    edi,0x339fedf1
  40de79:	in     al,0x51
  40de7b:	push   edx
  40de7c:	cmp    edi,esp
  40de7e:	mov    bl,0xed
  40de80:	and    DWORD PTR [edi],ebp
  40de82:	test   DWORD PTR [eax-0x1c65cf7f],eax
  40de88:	and    al,BYTE PTR [esi-0x35313692]
  40de8e:	pushf  
  40de8f:	mov    dl,0x18
  40de91:	test   al,0x40
  40de93:	fld    DWORD PTR [ebx-0x2c]
  40de96:	jge    0x40de2b
  40de98:	popf   
  40de99:	shl    al,1
  40de9b:	bound  esi,QWORD PTR [ebx+0x403751ac]
  40dea1:	loop   0x40defe
  40dea3:	repnz adc edi,esp
  40dea6:	cmp    eax,0x4f263ad4
  40deab:	mov    edi,0x3987c99f
  40deb0:	es xchg ah,ah
  40deb3:	dec    edi
  40deb4:	rol    edx,0x3c
  40deb7:	and    DWORD PTR [ebp+0x2e],0x8c6e4406
  40debe:	pop    ebp
  40debf:	add    ebx,edx
  40dec1:	xchg   edx,eax
  40dec2:	test   ah,cl
  40dec4:	sub    eax,0xa00559f8
  40dec9:	test   DWORD PTR [ebp+0x2a681b8],ecx
  40decf:	enter  0x68b5,0xc3
  40ded3:	jae    0x40de9b
  40ded5:	inc    esp
  40ded6:	int3   
  40ded7:	push   ss
  40ded8:	dec    ecx
  40deda:	dec    cx
  40dedc:	sar    cl,1
  40dede:	adc    al,BYTE PTR [ebp-0x58]
  40dee1:	hlt    
  40dee2:	sti    
  40dee3:	push   edi
  40dee4:	fcmovnu st,st(7)
  40dee6:	push   edx
  40dee7:	mov    edi,0x1da0c51e
  40deec:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40deee:	jno    0x40ded5
  40def0:	jmp    0x40df15
  40def2:	mov    ah,0xe5
  40def4:	jns    0x40decb
  40def6:	push   0xac6e29a7
  40defb:	aad    0x5b
  40defd:	sahf   
  40defe:	sbb    BYTE PTR [eax-0x7397a47e],cl
  40df04:	jp     0x40dea6
  40df06:	push   ebx
  40df07:	mov    edi,DWORD PTR [edx-0x3a20e5f4]
  40df0d:	and    bh,BYTE PTR [ebp+0x56]
  40df10:	popf   
  40df11:	push   edx
  40df12:	fcmovb st,st(6)
  40df14:	xor    ah,BYTE PTR [eax-0x35]
  40df17:	cmc    
  40df18:	retf   
  40df19:	js     0x40df94
  40df1b:	ins    DWORD PTR es:[edi],dx
  40df1c:	pushf  
  40df1d:	and    esp,DWORD PTR [edi-0x54]
  40df20:	sub    eax,0x472c384c
  40df25:	cmp    BYTE PTR [eax-0x11],0x1a
  40df29:	loopne 0x40df1e
  40df2b:	mov    bl,0x42
  40df2d:	pop    ds
  40df2e:	push   es
  40df2f:	pop    eax
  40df30:	(bad)  
  40df31:	aad    0x33
  40df33:	jecxz  0x40df4e
  40df35:	inc    ebp
  40df36:	repz pop esp
  40df38:	mov    eax,DWORD PTR [eax+ecx*8+0x5738746f]
  40df3f:	(bad)
  40df42:	xor    ebx,DWORD PTR [ebx]
  40df44:	stos   DWORD PTR es:[edi],eax
  40df45:	leave  
  40df46:	mul    DWORD PTR [ecx-0x6a]
  40df49:	mov    eax,ds:0x764afad5
  40df4e:	and    eax,0x5887a35f
  40df53:	dec    edx
  40df54:	push   es
  40df55:	aam    0xeb
  40df57:	add    ebp,ecx
  40df59:	pop    esp
  40df5a:	cmp    al,0x7a
  40df5c:	test   BYTE PTR [eax],dh
  40df5e:	test   DWORD PTR [ecx-0xe],ebp
  40df61:	cs mov ebx,0x4f15f32b
  40df67:	pop    esp
  40df68:	fs es iret 
  40df6b:	cmp    eax,DWORD PTR [esp+ebx*2]
  40df6e:	mov    bh,BYTE PTR [edi]
  40df70:	lods   eax,DWORD PTR ds:[esi]
  40df71:	retf   
  40df72:	inc    esi
  40df73:	dec    eax
  40df74:	ror    DWORD PTR [esi],0x42
  40df77:	icebp  
  40df78:	leave  
  40df79:	je     0x40df9c
  40df7b:	or     eax,0xec1e000a
  40df80:	and    eax,0x6987b6b6
  40df85:	and    DWORD PTR [ecx],esi
  40df87:	(bad)
  40df8b:	adc    BYTE PTR [ebp-0x72e8b56d],bl
  40df91:	sub    DWORD PTR [ebx+0x182ba628],ecx
  40df97:	imul   edx
  40df99:	dec    esi
  40df9a:	inc    ecx
  40df9b:	jb     0x40df4c
  40df9d:	sbb    al,0x2e
  40df9f:	in     eax,dx
  40dfa0:	sbb    eax,0xd0bb0217
  40dfa5:	sbb    eax,0xa7a58c16
  40dfaa:	aam    0x67
  40dfac:	or     BYTE PTR [edx],cl
  40dfae:	ret    
  40dfaf:	ret    
  40dfb0:	cmp    BYTE PTR [ecx+0x5a612a29],0x7d
  40dfb7:	test   DWORD PTR [ebx+eiz*4-0x6fe2a5cf],esp
  40dfbe:	add    ebx,ecx
  40dfc0:	data16 fcomi st,st(6)
  40dfc3:	mov    ds:0x3d480b5e,al
  40dfc8:	mov    WORD PTR [eax+0x4d],?
  40dfcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfcc:	mov    eax,0xac552f6d
  40dfd1:	push   ebx
  40dfd2:	cmp    dh,BYTE PTR [ecx-0x7fc13606]
  40dfd8:	fwait
  40dfd9:	sub    dl,BYTE PTR [ebx-0x5]
  40dfdc:	pop    ebx
  40dfdd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfde:	mov    BYTE PTR [eax-0x2b6b302e],al
  40dfe4:	cmovno ecx,DWORD PTR [edi]
  40dfe7:	(bad)
  40dfea:	fs scas al,BYTE PTR es:[edi]
  40dfec:	xchg   cl,dh
  40dfee:	mov    al,0xa7
  40dff0:	or     ch,BYTE PTR [esi+0x6d8fa724]
  40dff6:	mov    cl,0xd2
  40dff8:	sub    ah,BYTE PTR [eax+0x7]
  40dffb:	ins    BYTE PTR es:[edi],dx
  40dffc:	imul   ecx,DWORD PTR [edx+0x42846d80],0x40
  40e003:	cli    
  40e004:	enter  0x867f,0x89
  40e008:	outs   dx,BYTE PTR ds:[esi]
  40e009:	das    
  40e00a:	adc    eax,0x64325360
  40e00f:	xor    BYTE PTR [ebx],dh
  40e011:	jae    0x40dfc8
  40e013:	mov    dh,BYTE PTR [edi-0x38487064]
  40e019:	xor    eax,0x17a69693
  40e01e:	pop    ebp
  40e01f:	pop    ds
  40e020:	push   0x360a216a
  40e025:	imul   eax,DWORD PTR [eax-0x17559880],0xa6e5f4bd
  40e02f:	imul   ecx,DWORD PTR [eax],0x1f
  40e032:	push   ebp
  40e033:	xchg   edi,ebp
  40e035:	adc    al,0x30
  40e037:	loop   0x40e030
  40e039:	xor    al,BYTE PTR [ebp-0x56]
  40e03c:	sbb    edx,DWORD PTR [edi+ebx*1+0x1f448809]
  40e043:	add    al,0x3
  40e045:	rcr    BYTE PTR [esi+0x70e220d0],1
  40e04b:	jae    0x40e097
  40e04d:	mov    DWORD PTR [edi-0x44],esi
  40e050:	retf   0xd487
  40e053:	push   esp
  40e054:	or     ah,BYTE PTR [edi]
  40e056:	jl     0x40e092
  40e058:	xor    dh,BYTE PTR [edi+0x6d2d5d11]
  40e05e:	jno    0x40e074
  40e060:	mov    ch,0xd2
  40e062:	and    eax,0x2dcc69f9
  40e067:	push   eax
  40e068:	mov    eax,ds:0xf75d175e
  40e06d:	dec    edx
  40e06e:	(bad)  
  40e06f:	cmp    eax,DWORD PTR [ebp-0x7a]
  40e072:	sahf   
  40e073:	or     ch,BYTE PTR [esi-0x71]
  40e076:	or     dl,BYTE PTR [esi+0x4276bf07]
  40e07c:	retf   0x325f
  40e07f:	mov    edx,0xeb04839c
  40e084:	(bad)  
  40e085:	cmp    DWORD PTR [ecx+0x4b3bad56],ebp
  40e08b:	fcmovnb st,st(0)
  40e08d:	xchg   ebx,eax
  40e08e:	adc    eax,0xf9c0b888
  40e093:	or     BYTE PTR [edi],ah
  40e095:	in     eax,dx
  40e096:	idiv   DWORD PTR [esi+0x40305b6b]
  40e09c:	popf   
  40e09d:	lahf   
  40e09e:	cmp    BYTE PTR [ebp-0x5d5e5a08],0xf
  40e0a5:	push   edx
  40e0a6:	inc    ebx
  40e0a7:	daa    
  40e0a8:	xlat   BYTE PTR ds:[ebx]
  40e0a9:	mov    ebx,0xe20ee1c5
  40e0ae:	dec    edi
  40e0af:	pop    ebx
  40e0b0:	mov    ds:0xf57e2094,eax
  40e0b5:	aas    
  40e0b6:	scas   eax,DWORD PTR es:[edi]
  40e0b7:	mov    ch,0x9
  40e0b9:	int    0x4
  40e0bb:	adc    al,0x33
  40e0bd:	jmp    0x8821e8ac
  40e0c2:	scas   eax,DWORD PTR es:[edi]
  40e0c3:	into   
  40e0c4:	pop    edx
  40e0c5:	jns    0x40e055
  40e0c7:	sbb    ch,BYTE PTR [edi+0x76d0a42f]
  40e0cd:	das    
  40e0ce:	hlt    
  40e0cf:	fcmovbe st,st(5)
  40e0d1:	dec    eax
  40e0d2:	fadd   QWORD PTR [ecx+0x6f]
  40e0d5:	je     0x40e10e
  40e0d7:	es or  al,0x92
  40e0da:	loope  0x40e0d9
  40e0dc:	mov    ecx,DWORD PTR [esi+0x63194e3c]
  40e0e2:	aas    
  40e0e3:	sbb    BYTE PTR [edx-0x7479236e],0x9b
  40e0ea:	dec    esi
  40e0eb:	pop    esi
  40e0ec:	int    0x4
  40e0ee:	sub    al,0x2d
  40e0f0:	int3   
  40e0f1:	adc    eax,DWORD PTR [edx-0x385dd61d]
  40e0f7:	add    edx,DWORD PTR [ecx-0x6a]
  40e0fa:	and    cl,BYTE PTR [edi+0x6a]
  40e0fd:	sti    
  40e0fe:	xor    ebp,ecx
  40e100:	mov    esp,DWORD PTR [edx-0x5331f604]
  40e106:	sub    DWORD PTR [eax+0x70],edi
  40e109:	jl     0x40e137
  40e10b:	or     ecx,DWORD PTR [si-0x29]
  40e10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e110:	cmp    eax,0x9c763ed1
  40e115:	pop    ebx
  40e116:	je     0x40e126
  40e118:	nop
  40e119:	fyl2xp1 
  40e11b:	out    0x57,eax
  40e11d:	jns    0x40e151
  40e11f:	xchg   esp,edi
  40e121:	out    0xa3,eax
  40e123:	mov    al,0x6b
  40e125:	xchg   esi,eax
  40e126:	rcr    DWORD PTR cs:[edx],0xa8
  40e12a:	sahf   
  40e12b:	mov    ds:0x63323290,al
  40e130:	pop    esi
  40e131:	xor    eax,0xffa3da9b
  40e136:	jb     0x40e0df
  40e138:	imul   edx,DWORD PTR [ebp-0x46],0xffffff86
  40e13c:	test   eax,0xa21d76e3
  40e141:	cld    
  40e142:	call   0x2672:0x6d082314
  40e149:	fimul  WORD PTR [ecx+0x4f33f30f]
  40e14f:	(bad)  
  40e150:	mov    ebp,0xd17bb54e
  40e155:	int    0x8f
  40e157:	push   ss
  40e158:	jmp    0x40e1b6
  40e15a:	retf   
  40e15b:	out    0xe6,al
  40e15d:	or     eax,0xcadd50e4
  40e162:	fadd   DWORD PTR [eax-0x7]
  40e165:	mov    dl,0x1b
  40e167:	stos   BYTE PTR es:[edi],al
  40e168:	pop    ebp
  40e169:	iret   
  40e16a:	and    bl,bh
  40e16c:	jbe    0x40e10d
  40e16e:	adc    eax,0x87df22af
  40e173:	test   eax,0xfdc4aaba
  40e178:	sub    eax,0x420e62e3
  40e17d:	imul   ecx,DWORD PTR [edx],0xffffffec
  40e180:	mov    al,0xec
  40e182:	and    edx,DWORD PTR [edi+0x61477711]
  40e188:	adc    eax,0x402bcbb7
  40e18d:	scas   al,BYTE PTR es:[edi]
  40e18e:	mov    gs,WORD PTR [ebp-0x34]
  40e191:	pop    edi
  40e192:	pop    edi
  40e193:	std    
  40e194:	(bad)  
  40e195:	shl    dh,1
  40e197:	inc    ebx
  40e198:	sbb    BYTE PTR [esp+eax*2-0x2d],bl
  40e19c:	mov    ecx,0xdd4dc9e8
  40e1a1:	test   BYTE PTR es:[esi+0x18],dh
  40e1a5:	repnz in al,dx
  40e1a7:	in     al,0x5
  40e1a9:	sbb    esi,DWORD PTR gs:[ebx]
  40e1ac:	or     bh,ch
  40e1ae:	and    al,0xd4
  40e1b0:	sub    BYTE PTR [ebx+esi*4-0x399af809],al
  40e1b7:	mov    WORD PTR [edx],ss
  40e1b9:	or     al,0xef
  40e1bb:	lahf   
  40e1bc:	mov    BYTE PTR [ebx+0x63],ah
  40e1bf:	js     0x40e1fe
  40e1c1:	mov    al,ds:0x72b4c477
  40e1c6:	std    
  40e1c7:	std    
  40e1c8:	mov    eax,ds:0x8df65ed8
  40e1cd:	sbb    bh,bh
  40e1cf:	popa   
  40e1d0:	lods   eax,DWORD PTR ds:[esi]
  40e1d1:	push   edx
  40e1d2:	repz ss loop 0x40e228
  40e1d6:	mov    ds:0x3d5b738a,eax
  40e1db:	pop    ds
  40e1dc:	or     eax,edx
  40e1de:	aaa    
  40e1df:	jecxz  0x40e1da
  40e1e1:	pushf  
  40e1e2:	jb     0x40e201
  40e1e4:	test   al,0x9b
  40e1e6:	add    al,0xa0
  40e1e8:	mov    eax,ds:0xb2912943
  40e1ed:	adc    ebx,DWORD PTR [ecx]
  40e1ef:	pusha  
  40e1f0:	pop    esi
  40e1f1:	jmp    0x40e20d
  40e1f3:	jge    0x40e18c
  40e1f5:	cld    
  40e1f6:	pusha  
  40e1f7:	aaa    
  40e1f8:	cmp    ebx,esi
  40e1fa:	mov    bl,BYTE PTR [ecx]
  40e1fc:	mov    DWORD PTR gs:[esi+0x4c],edx
  40e200:	xor    BYTE PTR [ecx+0x2a62771c],ch
  40e206:	pop    ecx
  40e207:	xor    BYTE PTR [ebx],cl
  40e209:	iret   
  40e20a:	jmp    0xcfa279c2
  40e20f:	sahf   
  40e210:	iret   
  40e211:	test   BYTE PTR [ecx+0x75],0x49
  40e215:	inc    edi
  40e216:	add    bl,dh
  40e218:	and    al,0x97
  40e21a:	adc    al,0x88
  40e21c:	enter  0x90ed,0x79
  40e220:	mov    cl,0xf0
  40e222:	inc    ebp
  40e223:	pop    ds
  40e224:	scas   al,BYTE PTR es:[edi]
  40e225:	pop    ebx
  40e226:	push   ebx
  40e227:	outs   dx,DWORD PTR ds:[esi]
  40e228:	sub    edi,DWORD PTR [edi]
  40e22a:	inc    ecx
  40e22b:	clc    
  40e22c:	pop    es
  40e22d:	push   ss
  40e22e:	cmp    eax,0x2c9af25f
  40e233:	rcl    BYTE PTR [edx+ebp*2],1
  40e236:	mov    al,0xfb
  40e238:	std    
  40e239:	jg     0x40e206
  40e23b:	test   al,0x35
  40e23d:	popa   
  40e23e:	mov    eax,esp
  40e240:	repz addr16 jp 0x40e1e6
  40e244:	adc    bl,BYTE PTR [ebx-0x28ef00b6]
  40e24a:	pop    ebx
  40e24b:	lock xor DWORD PTR [ebx-0x34],ebx
  40e24f:	adc    DWORD PTR [esi+0x23a3c23a],esp
  40e255:	sahf   
  40e256:	mov    cl,BYTE PTR [edx-0x346503ae]
  40e25c:	dec    edi
  40e25d:	cld    
  40e25e:	dec    ebp
  40e25f:	sub    ebx,DWORD PTR [ebx]
  40e261:	mov    bh,0xbb
  40e263:	add    ch,BYTE PTR [edx-0x1c0577db]
  40e269:	sbb    eax,edi
  40e26b:	mov    al,BYTE PTR [ebp+0x5f701f4a]
  40e271:	mov    eax,ds:0x45cb6c2
  40e276:	dec    ebp
  40e277:	cld    
  40e278:	hlt    
  40e279:	pop    edx
  40e27a:	loope  0x40e2b1
  40e27c:	push   edx
  40e27d:	(bad)  
  40e27e:	shl    dl,1
  40e280:	mov    ebx,0x533bd43f
  40e285:	iret   
  40e286:	and    dh,bh
  40e288:	out    0xd3,al
  40e28a:	jp     0x40e2b3
  40e28c:	inc    eax
  40e28d:	out    0x38,eax
  40e28f:	out    dx,al
  40e290:	addr16 mov ecx,0xd477f8ab
  40e296:	push   es
  40e297:	scas   al,BYTE PTR es:[edi]
  40e298:	int3   
  40e299:	ret    
  40e29a:	push   ebx
  40e29b:	cmp    dh,BYTE PTR [ecx]
  40e29d:	sub    dh,al
  40e29f:	mov    ecx,0xb87ea0e7
  40e2a4:	and    bh,cl
  40e2a6:	xchg   esi,eax
  40e2a7:	mov    bl,0x72
  40e2a9:	jmp    0x6f124bd2
  40e2ae:	mov    DWORD PTR [eax],esp
  40e2b0:	aam    0xd1
  40e2b2:	jp     0x40e31e
  40e2b4:	mov    bh,dh
  40e2b6:	inc    ecx
  40e2b7:	push   esi
  40e2b8:	add    DWORD PTR [ecx-0x4b],edx
  40e2bb:	dec    eax
  40e2bc:	sub    eax,0x7b06ec04
  40e2c1:	int    0xd4
  40e2c3:	pushf  
  40e2c4:	sahf   
  40e2c5:	jo     0x40e343
  40e2c7:	xor    al,0x81
  40e2c9:	cmp    DWORD PTR [ebx+0x4918d11c],ebp
  40e2cf:	jne    0x40e31f
  40e2d1:	pop    ebp
  40e2d2:	jnp    0x40e255
  40e2d4:	leave  
  40e2d5:	or     BYTE PTR [eax-0x41fc7d8a],dl
  40e2db:	cmc    
  40e2dc:	sbb    DWORD PTR [edx+0x54],ecx
  40e2df:	outs   dx,BYTE PTR ds:[esi]
  40e2e0:	and    dl,BYTE PTR [esi-0x72b03a9f]
  40e2e6:	xchg   ch,cl
  40e2e8:	push   edi
  40e2e9:	cmp    DWORD PTR [esp+ecx*4-0x34],esi
  40e2ed:	in     al,dx
  40e2ee:	cmp    esi,DWORD PTR [esi-0x4b61d2e2]
  40e2f4:	iret   
  40e2f5:	adc    cl,BYTE PTR [esi+0x22]
  40e2f8:	sar    BYTE PTR [edi+0x4c410ff1],cl
  40e2fe:	fldenv [ecx+0x77]
  40e301:	sahf   
  40e302:	js     0x40e35c
  40e304:	dec    edx
  40e305:	cmp    al,0x4d
  40e307:	cmp    DWORD PTR [ebp+0x7e],0x41
  40e30b:	test   eax,0x99aef7fd
  40e310:	fwait
  40e311:	push   cs
  40e312:	push   esp
  40e313:	rep lods al,BYTE PTR ds:[esi]
  40e315:	push   ebx
  40e316:	cdq    
  40e317:	call   0x11f7efa2
  40e31c:	add    eax,0xdc57baad
  40e321:	dec    eax
  40e322:	push   ds
  40e323:	aam    0xa1
  40e325:	mov    es,esi
  40e327:	mov    eax,ds:0xe98f55a3
  40e32c:	dec    ebx
  40e32d:	je     0x40e2e4
  40e32f:	dec    ax
  40e331:	sbb    eax,0xb2971e57
  40e336:	lods   al,BYTE PTR ds:[esi]
  40e337:	popf   
  40e338:	jg     0x40e3ab
  40e33a:	sbb    eax,0xace23e81
  40e33f:	sub    al,0xe1
  40e341:	jle    0x40e39a
  40e343:	call   0x95960ec1
  40e348:	cmp    BYTE PTR [ebx+0xd],0x3d
  40e34c:	xlat   BYTE PTR ds:[ebx]
  40e34d:	pop    eax
  40e34e:	mov    bh,0x42
  40e350:	xor    esp,DWORD PTR [edx-0x45719aae]
  40e356:	aad    0x60
  40e358:	retf   
  40e359:	xchg   edi,eax
  40e35a:	movzx  esp,BYTE PTR [ebx+0x5fb87917]
  40e361:	loope  0x40e332
  40e363:	(bad)  
  40e365:	jmp    0xfc31:0x4fa4453c
  40e36c:	jg     0x40e32e
  40e36e:	push   eax
  40e36f:	jecxz  0x40e314
  40e371:	clc    
  40e372:	add    dl,al
  40e374:	add    al,0x83
  40e376:	mov    edi,0xff990016
  40e37b:	push   ebx
  40e37c:	push   es
  40e37d:	push   0xffffff90
  40e37f:	aad    0x2e
  40e381:	sbb    DWORD PTR [esi*2-0x1d08674],esi
  40e388:	jns    0x40e3c9
  40e38a:	jge    0x40e3bf
  40e38c:	mul    DWORD PTR [ebx]
  40e38e:	mov    al,0x24
  40e390:	outs   dx,DWORD PTR ds:[esi]
  40e391:	push   cs
  40e392:	xchg   esi,eax
  40e393:	push   esi
  40e394:	and    DWORD PTR ss:[ecx+0x30],0x2f4a04a1
  40e39c:	fwait
  40e39d:	cld    
  40e39e:	and    ebx,ebp
  40e3a0:	mov    ebp,0x4dd3939a
  40e3a5:	jp     0x40e32a
  40e3a7:	push   edx
  40e3a8:	adc    al,0xb9
  40e3aa:	stos   BYTE PTR es:[edi],al
  40e3ab:	cld    
  40e3ac:	sbb    BYTE PTR [edx+0x7b],0x55
  40e3b0:	in     eax,0x96
  40e3b2:	sbb    DWORD PTR [eax+0x4a6854bf],eax
  40e3b8:	cmp    eax,0xf5a4c14
  40e3bd:	(bad)  
  40e3be:	mov    WORD PTR [ecx],ds
  40e3c0:	xchg   esi,eax
  40e3c1:	lea    edi,[ebp+0x1dd53f57]
  40e3c7:	scas   eax,DWORD PTR es:[edi]
  40e3c8:	and    edx,DWORD PTR [ecx]
  40e3ca:	push   eax
  40e3cb:	xlat   BYTE PTR es:[ebx]
  40e3cd:	sbb    al,BYTE PTR [esi+0x3bdbf7c2]
  40e3d3:	add    eax,0x3c60ccbf
  40e3d8:	sbb    BYTE PTR [edx+0xe],0xe0
  40e3dc:	fadd   DWORD PTR [esi-0x73069f77]
  40e3e2:	add    ebp,DWORD PTR [esi+ebp*8]
  40e3e5:	ret    
  40e3e6:	pop    ss
  40e3e7:	jbe    0x40e3e4
  40e3e9:	xchg   DWORD PTR [ebx-0x38],eax
  40e3ec:	int    0x5f
  40e3ee:	js     0x40e435
  40e3f0:	jge    0x40e40b
  40e3f2:	int    0x5f
  40e3f4:	aaa    
  40e3f5:	aam    0x8
  40e3f7:	fcmovnu st,st(2)
  40e3f9:	(bad)  
  40e3fa:	jp     0x40e3e4
  40e3fc:	int3   
  40e3fd:	mov    eax,0xa191d631
  40e402:	retf   0xd010
  40e405:	add    BYTE PTR [ebx],0xdc
  40e408:	mov    al,ds:0x9c5d131e
  40e40d:	aaa    
  40e40e:	leave  
  40e40f:	mov    ebp,0x6139329d
  40e414:	add    eax,0x95f51aa6
  40e419:	fwait
  40e41a:	rol    ecx,0x82
  40e41d:	call   0x58eb:0xe6e692d2
  40e424:	fwait
  40e425:	adc    eax,0x3dbc6660
  40e42a:	inc    ebx
  40e42b:	jno    0x40e494
  40e42d:	pop    es
  40e42e:	je     0x40e3e4
  40e430:	push   ecx
  40e431:	cs sbb al,0x17
  40e434:	jne    0x40e4b3
  40e436:	mov    ebx,0x9653352a
  40e43b:	jmp    0x40e423
  40e43d:	jmp    0x92e88567
  40e442:	dec    ebp
  40e443:	popf   
  40e444:	and    esp,edx
  40e446:	into   
  40e447:	nop
  40e448:	cmp    eax,0xaf305a83
  40e44d:	add    DWORD PTR [esi+eiz*8+0x4ca4038d],ebp
  40e454:	pop    es
  40e455:	(bad)  
  40e456:	rol    bh,1
  40e458:	outs   dx,BYTE PTR ds:[esi]
  40e459:	inc    ecx
  40e45a:	sub    al,0x4
  40e45c:	or     al,0x14
  40e45e:	sti    
  40e45f:	or     al,0x20
  40e461:	gs jb  0x40e452
  40e464:	jmp    0x72cf15a8
  40e469:	hlt    
  40e46a:	addr16 jg 0x40e462
  40e46d:	cmp    BYTE PTR [esi],ah
  40e46f:	repz les ecx,FWORD PTR [ebp+0x7a]
  40e473:	(bad)  
  40e474:	add    ebx,DWORD PTR [esp+esi*8-0x2af2fdf6]
  40e47b:	(bad)  
  40e47d:	xor    BYTE PTR [esi+esi*4+0x57],ah
  40e481:	addr16 mov edx,0x4ce4cbcc
  40e487:	call   0xe98f:0xaeb803b8
  40e48e:	sti    
  40e48f:	push   eax
  40e490:	(bad)  
  40e491:	adc    esp,ecx
  40e493:	mov    ebp,DWORD PTR [edi+0x474b7f5]
  40e499:	adc    ah,BYTE PTR [ebx+0x54]
  40e49c:	xchg   BYTE PTR [ecx],ah
  40e49e:	sbb    bl,cl
  40e4a0:	icebp  
  40e4a1:	arpl   WORD PTR [edx],dx
  40e4a3:	imul   ebx,ebp,0x77
  40e4a6:	or     eax,0x7e7c0444
  40e4ab:	(bad)  
  40e4ac:	mov    esp,0x74a4d112
  40e4b1:	sbb    BYTE PTR [esi+eiz*8-0x4a1dbebc],ah
  40e4b8:	in     eax,dx
  40e4b9:	cmp    ch,BYTE PTR [edi+0x72]
  40e4bc:	xor    DWORD PTR [edi+0x72],esp
  40e4bf:	mov    bl,0x9e
  40e4c1:	mov    cl,0x64
  40e4c3:	and    edx,DWORD PTR [ebx+0x2f3d657e]
  40e4c9:	dec    esp
  40e4ca:	pop    ecx
  40e4cb:	or     eax,0x2ab355e6
  40e4d0:	mov    edx,DWORD PTR [esp+eiz*2+0x25]
  40e4d4:	pop    eax
  40e4d5:	and    BYTE PTR [eax],0x93
  40e4d8:	and    eax,0x3e82265f
  40e4dd:	add    DWORD PTR [eax+eiz*2+0x34],ecx
  40e4e1:	std    
  40e4e2:	ss ret 0x1005
  40e4e6:	outs   dx,DWORD PTR ds:[esi]
  40e4e7:	stos   DWORD PTR es:[edi],eax
  40e4e8:	icebp  
  40e4e9:	mov    eax,ds:0x3339d971
  40e4ee:	xor    esp,esi
  40e4f0:	les    ecx,FWORD PTR [ebp-0x80]
  40e4f3:	scas   al,BYTE PTR es:[edi]
  40e4f4:	fnstsw WORD PTR [edi]
  40e4f6:	sub    eax,0x6e1e4c08
  40e4fb:	leave  
  40e4fc:	icebp  
  40e4fd:	ins    DWORD PTR es:[edi],dx
  40e4fe:	or     BYTE PTR [edx+edx*2],ch
  40e501:	mov    WORD PTR [ecx-0x2b],ss
  40e504:	fsubr  st(4),st
  40e506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e507:	push   ebp
  40e508:	lods   eax,DWORD PTR ds:[esi]
  40e509:	fiadd  DWORD PTR [ebx-0xcf465ce]
  40e50f:	sbb    al,0x2d
  40e511:	bound  edx,QWORD PTR ds:0x71a2b88f
  40e517:	xchg   edx,eax
  40e518:	pusha  
  40e519:	lods   al,BYTE PTR ds:[esi]
  40e51a:	and    BYTE PTR [ebx],ch
  40e51c:	rep outs dx,DWORD PTR ds:[esi]
  40e51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e51f:	mov    ch,0x8e
  40e521:	add    al,BYTE PTR ds:0x70f90475
  40e527:	push   0x1ffbb978
  40e52c:	push   esi
  40e52d:	jae    0x40e511
  40e52f:	fst    QWORD PTR [esi+0x6e53c619]
  40e535:	pop    ecx
  40e536:	rep stos DWORD PTR es:[edi],eax
  40e538:	inc    ecx
  40e539:	test   eax,edi
  40e53b:	mov    ebx,0x2467497f
  40e540:	repz shl esp,0xf4
  40e544:	jne    0x40e530
  40e546:	inc    esp
  40e547:	retf   0x4c9b
  40e54a:	pop    edx
  40e54b:	icebp  
  40e54c:	adc    al,0x1d
  40e54e:	xor    al,0x26
  40e550:	jbe    0x40e4f1
  40e552:	jno    0x40e510
  40e554:	dec    eax
  40e555:	in     al,0x80
  40e557:	pop    es
  40e558:	imul   eax,DWORD PTR [esi+0x60],0xffffffab
  40e55c:	xchg   ecx,eax
  40e55d:	pop    eax
  40e55e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e55f:	enter  0x526c,0xf9
  40e563:	ret    0x1e01
  40e566:	pusha  
  40e567:	mov    ecx,0x8437dbfd
  40e56c:	fnsave [ebx+0x44]
  40e56f:	imul   esp,eax,0x4d
  40e572:	pop    ss
  40e573:	dec    edx
  40e574:	push   ds
  40e575:	enter  0xec2a,0x92
  40e579:	loopne 0x40e5c2
  40e57b:	fisub  WORD PTR [esi+eiz*4-0x7b]
  40e580:	mov    WORD PTR [edi-0x63],fs
  40e583:	inc    edi
  40e584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e585:	test   DWORD PTR [ecx+0x43],ebp
  40e588:	lock ins BYTE PTR es:[edi],dx
  40e58a:	fmul   DWORD PTR [edx-0x3660fb5a]
  40e590:	loopne 0x40e54b
  40e592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e593:	fidiv  DWORD PTR [ebx-0x42]
  40e596:	in     eax,0xd2
  40e598:	pushf  
  40e599:	lods   eax,DWORD PTR ds:[esi]
  40e59a:	adc    al,0xdd
  40e59c:	xchg   BYTE PTR [ecx],cl
  40e59e:	cdq    
  40e59f:	addr16 int3 
  40e5a1:	sbb    DWORD PTR [esi+0x61],esi
  40e5a4:	inc    eax
  40e5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5a6:	gs inc ebx
  40e5a8:	jno    0x40e551
  40e5aa:	pusha  
  40e5ab:	hlt    
  40e5ac:	aaa    
  40e5ad:	out    dx,eax
  40e5ae:	push   edx
  40e5af:	and    bl,dl
  40e5b1:	and    eax,0xdf22c5e1
  40e5b6:	mov    edx,0x894020
  40e5bb:	cmc    
  40e5bc:	xor    ebp,DWORD PTR [edx+0x4265c87e]
  40e5c2:	jge    0x40e5eb
  40e5c4:	or     eax,0xff1ebea8
  40e5c9:	push   ds
  40e5ca:	xchg   ecx,eax
  40e5cb:	or     eax,0x1c1c90ba
  40e5d0:	imul   ebx,DWORD PTR [esi],0xffffffc0
  40e5d3:	idiv   DWORD PTR cs:[esi+0x4eca0284]
  40e5da:	pop    ds
  40e5db:	ret    
  40e5dc:	stos   BYTE PTR es:[edi],al
  40e5dd:	or     DWORD PTR [ecx],esi
  40e5df:	sbb    al,0xe6
  40e5e1:	add    DWORD PTR [edi-0x54],eax
  40e5e4:	lock and eax,0xc5a16060
  40e5ea:	js     0x40e63e
  40e5ec:	test   edx,esp
  40e5ee:	xchg   ebp,eax
  40e5ef:	sar    DWORD PTR [edx-0x442bebc1],0xdc
  40e5f6:	outs   dx,BYTE PTR ds:[esi]
  40e5f7:	pop    ds
  40e5f8:	and    eax,0x886cec94
  40e5fd:	repz into 
  40e5ff:	inc    ecx
  40e600:	in     eax,0xda
  40e602:	out    0x6b,eax
  40e604:	retf   
  40e605:	call   0x2a8c:0xf0e6a227
  40e60c:	ins    DWORD PTR es:[edi],dx
  40e60d:	in     eax,0xf
  40e60f:	aam    0x72
  40e611:	dec    edx
  40e612:	mov    ebx,0x828f77a5
  40e617:	inc    esi
  40e618:	js     0x40e5fb
  40e61a:	jnp    0x40e680
  40e61c:	mov    esi,0x48509ee3
  40e621:	jle    0x40e61a
  40e623:	lock lea esi,[ecx+0x2d]
  40e627:	jo     0x40e5fd
  40e629:	pop    edx
  40e62a:	fidiv  DWORD PTR [edi]
  40e62c:	aam    0x81
  40e62e:	mov    ds:0x80d208c,eax
  40e633:	shl    BYTE PTR [ebp+0x5a2cc515],1
  40e639:	cld    
  40e63a:	push   0x99fe7276
  40e63f:	sub    eax,0x4d4f0ed3
  40e644:	sub    BYTE PTR [ecx+0x59e2a573],bl
  40e64a:	cmc    
  40e64b:	fdiv   DWORD PTR [eax+0x7e]
  40e64e:	leave  
  40e64f:	cwde   
  40e650:	int    0x1f
  40e652:	je     0x40e623
  40e654:	xor    al,0x10
  40e656:	mov    edi,0xcf845f11
  40e65b:	push   ebx
  40e65c:	ss push ebx
  40e65e:	xchg   ebx,eax
  40e65f:	(bad)  
  40e660:	test   DWORD PTR [esi+0x7e],0x784958dd
  40e667:	add    BYTE PTR [eax],al
  40e669:	push   es
  40e66a:	inc    edx
  40e66b:	push   eax
  40e66c:	out    dx,eax
  40e66d:	call   0x91b1:0xbee30e94
  40e674:	mov    esi,edi
  40e676:	shl    BYTE PTR [ebx-0x79],0xc8
  40e67a:	adc    ah,BYTE PTR [esi]
  40e67c:	outs   dx,DWORD PTR ds:[esi]
  40e67d:	sbb    BYTE PTR [ebp-0x7e94277a],bl
  40e683:	daa    
  40e684:	sbb    al,0x88
  40e686:	mov    eax,0x4d322d5f
  40e68b:	nop
  40e68c:	pop    es
  40e68d:	outs   dx,DWORD PTR ds:[esi]
  40e68e:	jg     0x40e618
  40e690:	into   
  40e691:	fsub   QWORD PTR [ebx-0x73]
  40e694:	and    ebp,DWORD PTR [ebp+0x71]
  40e697:	pop    edx
  40e698:	in     eax,0x42
  40e69a:	mov    esp,0xfff1b0b5
  40e69f:	pop    ebp
  40e6a0:	sbb    DWORD PTR [edi+0x14],ebx
  40e6a3:	xlat   BYTE PTR ds:[ebx]
  40e6a4:	iret   
  40e6a5:	inc    eax
  40e6a6:	fbld   TBYTE PTR [ecx+eax*2-0x763922cb]
  40e6ad:	ror    DWORD PTR [edi+esi*2],0x98
  40e6b1:	sub    esi,DWORD PTR ss:[edi]
  40e6b4:	sbb    DWORD PTR [eax-0x4b84f26d],esp
  40e6ba:	out    0x6e,eax
  40e6bc:	int    0x7a
  40e6be:	sub    al,0x60
  40e6c0:	xor    al,0x82
  40e6c2:	push   esi
  40e6c3:	test   al,0xae
  40e6c5:	dec    eax
  40e6c6:	inc    edi
  40e6c7:	cdq    
  40e6c8:	push   edx
  40e6c9:	pop    eax
  40e6ca:	aam    0x3
  40e6cc:	xchg   esp,eax
  40e6cd:	gs xchg esi,eax
  40e6cf:	and    DWORD PTR [esi+ecx*8+0x58],ecx
  40e6d3:	je     0x40e69b
  40e6d5:	push   esp
  40e6d6:	inc    edx
  40e6d7:	call   0x4c485ee6
  40e6dc:	pop    ebx
  40e6dd:	pop    esp
  40e6de:	xchg   BYTE PTR [eax-0x4b7512c5],bl
  40e6e4:	add    BYTE PTR cs:0xe2ccbfb9,0xfb
  40e6ec:	push   es
  40e6ed:	dec    eax
  40e6ee:	ror    BYTE PTR ds:0x7304ad02,0x31
  40e6f5:	lds    eax,FWORD PTR [edi-0x450a4621]
  40e6fb:	mov    ch,0xcc
  40e6fd:	rcr    BYTE PTR [ecx+0x28],cl
  40e700:	(bad)  
  40e701:	pop    esp
  40e702:	cmc    
  40e703:	jne    0x40e6be
  40e705:	ret    0x3fb
  40e708:	mov    ebp,0x7ffc900d
  40e70d:	imul   ebx,edx,0x54
  40e710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e711:	addr16 cmp ah,dl
  40e714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e715:	xchg   esi,eax
  40e716:	push   ecx
  40e717:	(bad)  
  40e718:	lea    eax,[eax+eiz*4]
  40e71b:	jmp    0xd469:0xbada4f89
  40e722:	lods   al,BYTE PTR ds:[esi]
  40e723:	ret    0xe7d5
  40e726:	ins    DWORD PTR es:[edi],dx
  40e727:	dec    edx
  40e728:	jg     0x40e787
  40e72a:	scas   al,BYTE PTR es:[edi]
  40e72b:	rcl    dl,cl
  40e72d:	mov    es,ecx
  40e72f:	(bad)  
  40e730:	int3   
  40e731:	sbb    BYTE PTR [edx+0x6aca74f],bl
  40e737:	mov    cl,0xd4
  40e739:	lds    eax,FWORD PTR [edi]
  40e73b:	nop
  40e73c:	jg     0x40e7b1
  40e73e:	add    DWORD PTR [ecx],edi
  40e740:	test   BYTE PTR [edx+0x71],al
  40e743:	inc    esi
  40e744:	sbb    ecx,ecx
  40e746:	popf   
  40e747:	inc    ebp
  40e748:	xchg   ebx,eax
  40e749:	add    BYTE PTR [esi-0x5f],dh
  40e74c:	mov    ebx,0x43466b12
  40e751:	or     dh,BYTE PTR [eax]
  40e753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e754:	sbb    al,BYTE PTR [eax]
  40e756:	adc    al,dh
  40e758:	in     eax,0xda
  40e75a:	xchg   ebp,eax
  40e75b:	scas   al,BYTE PTR es:[edi]
  40e75c:	dec    ebx
  40e75d:	int3   
  40e75e:	push   esi
  40e75f:	push   edi
  40e760:	pop    ecx
  40e761:	dec    ebx
  40e762:	mov    ch,0x2b
  40e764:	rcr    edi,0x15
  40e767:	out    0xb,eax
  40e769:	pusha  
  40e76a:	loope  0x40e742
  40e76c:	mov    ecx,0xd638865e
  40e771:	push   es
  40e772:	add    edx,DWORD PTR [ecx-0x5b]
  40e775:	ins    DWORD PTR es:[edi],dx
  40e776:	retf   0x8915
  40e779:	scas   eax,DWORD PTR es:[edi]
  40e77a:	sbb    eax,0x96bdfff1
  40e77f:	sbb    BYTE PTR [ebp-0x42],ch
  40e782:	scas   al,BYTE PTR es:[edi]
  40e783:	ss adc ah,dl
  40e786:	jo     0x40e78b
  40e788:	outs   dx,DWORD PTR ds:[esi]
  40e789:	and    DWORD PTR [eax+0x13],ebx
  40e78c:	ror    DWORD PTR [esp+esi*4+0x4a],cl
  40e790:	mov    edi,0xddc3c577
  40e795:	neg    BYTE PTR [eax-0x1e]
  40e798:	cld    
  40e799:	jo     0x40e71f
  40e79b:	cdq    
  40e79c:	clc    
  40e79d:	ins    BYTE PTR es:[edi],dx
  40e79e:	xchg   esp,eax
  40e79f:	imul   ebp,DWORD PTR [ecx-0x3db63554],0xdbe67a23
  40e7a9:	sbb    bl,ch
  40e7ab:	rcl    edi,0xce
  40e7ae:	stos   DWORD PTR es:[edi],eax
  40e7af:	cli    
  40e7b0:	push   ebp
  40e7b1:	add    ebx,esp
  40e7b3:	inc    ebx
  40e7b4:	stos   BYTE PTR es:[edi],al
  40e7b5:	loop   0x40e7e8
  40e7b7:	sub    ch,dl
  40e7b9:	add    ah,BYTE PTR [ecx-0x7f3ae385]
  40e7bf:	mov    ch,ch
  40e7c1:	cwde   
  40e7c2:	sbb    eax,0xa9e7b23f
  40e7c7:	cmp    ah,BYTE PTR [esi]
  40e7c9:	loopne 0x40e7f4
  40e7cb:	jge    0x40e821
  40e7cd:	mov    ah,0x17
  40e7cf:	mov    ebx,0x66ea5b1e
  40e7d4:	xlat   BYTE PTR ds:[ebx]
  40e7d5:	and    esp,DWORD PTR [eax-0x4ef30a2]
  40e7db:	push   ds
  40e7dc:	dec    edi
  40e7dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7df:	fs imul ebp,ebp,0x59
  40e7e3:	jle    0x40e788
  40e7e5:	adc    eax,DWORD PTR [ebx-0xe]
  40e7e8:	sub    bh,BYTE PTR [esi]
  40e7ea:	push   ebp
  40e7eb:	in     al,0x0
  40e7ed:	pop    ecx
  40e7ee:	pusha  
  40e7ef:	add    BYTE PTR [edx+0x5158be6b],bl
  40e7f5:	sub    DWORD PTR [edi+0x54],0x2a39379c
  40e7fc:	and    edi,DWORD PTR [ebx+0x4e104e61]
  40e802:	mov    WORD PTR [ebx],es
  40e804:	adc    dh,BYTE PTR [ebp-0xb]
  40e807:	or     dh,BYTE PTR [ecx+0x34da041]
  40e80d:	inc    esp
  40e80e:	outs   dx,DWORD PTR ds:[esi]
  40e80f:	out    0x31,eax
  40e811:	mov    ds:0xfe5b67cd,al
  40e816:	outs   dx,BYTE PTR ds:[esi]
  40e817:	retf   0x919
  40e81a:	mov    esi,0x980351d9
  40e81f:	gs dec ebp
  40e821:	sar    esi,0xef
  40e824:	inc    ebp
  40e825:	cmp    BYTE PTR [eax-0x26],cl
  40e828:	stos   DWORD PTR es:[edi],eax
  40e829:	or     cl,dl
  40e82b:	adc    BYTE PTR [esi-0x4b],0xb6
  40e82f:	(bad)  [edi+0x3d]
  40e832:	pop    eax
  40e833:	cmp    al,0x1c
  40e835:	imul   edi,esi,0x8
  40e838:	pop    edx
  40e839:	push   edx
  40e83a:	es in  eax,dx
  40e83c:	sub    dh,cl
  40e83e:	repz push ebp
  40e840:	add    DWORD PTR [eax+0x3ccfa8d1],0xb356869d
  40e84a:	out    0xf6,al
  40e84c:	fs daa 
  40e84e:	push   ecx
  40e84f:	jbe    0x40e802
  40e851:	nop
  40e852:	shr    DWORD PTR [eax+0x2d],0x57
  40e856:	xlat   BYTE PTR ds:[ebx]
  40e857:	xchg   ebp,eax
  40e858:	jp     0x40e7e0
  40e85a:	jecxz  0x40e7df
  40e85c:	push   ebp
  40e85d:	ds retf 0x5ad7
  40e861:	adc    bl,al
  40e863:	addr16 sbb eax,0xa255a7dd
  40e869:	shl    ebx,cl
  40e86b:	jmp    0x40e849
  40e86d:	adc    cl,ah
  40e86f:	adc    edx,0x1befb574
  40e875:	dec    edi
  40e876:	out    0x14,eax
  40e878:	pop    esp
  40e879:	cmp    al,0x12
  40e87b:	add    eax,0x71a61782
  40e880:	or     bh,BYTE PTR ds:0x450893a6
  40e886:	test   BYTE PTR [esi+0x5b622a0f],0xee
  40e88d:	out    dx,al
  40e88e:	push   ds
  40e88f:	imul   esp,DWORD PTR [ecx],0xffffffd6
  40e892:	xchg   DWORD PTR [edi+ebx*4],ebp
  40e895:	loopne 0x40e8ad
  40e897:	(bad)  
  40e898:	fist   DWORD PTR [edi+0x3a17d27f]
  40e89e:	(bad)  
  40e89f:	rol    ch,0x14
  40e8a2:	clc    
  40e8a3:	sub    eax,0xb81bf355
  40e8a8:	xchg   edx,eax
  40e8a9:	call   0x339c:0xf8afd42c
  40e8b0:	push   ds
  40e8b1:	fst    st(1)
  40e8b3:	or     ah,BYTE PTR [edx-0x3bea2b9a]
  40e8b9:	pushf  
  40e8ba:	adc    al,0xf5
  40e8bc:	adc    DWORD PTR [ebp+0x49],ebp
  40e8bf:	shl    DWORD PTR [edx-0x15],0xe9
  40e8c3:	mov    eax,0xf3ae2246
  40e8c8:	xchg   ebx,eax
  40e8c9:	imul   edi,DWORD PTR [ecx],0xffffffed
  40e8cc:	leave  
  40e8cd:	or     eax,0x32fd83cb
  40e8d2:	xor    eax,0x30f03e7d
  40e8d7:	imul   DWORD PTR [ebx+0x204ec77c]
  40e8dd:	sub    DWORD PTR [edi+0xb],0xffffffa4
  40e8e1:	mov    edi,0x67935fbf
  40e8e6:	ftst   
  40e8e8:	outs   dx,DWORD PTR ds:[esi]
  40e8e9:	mov    esp,0xb0102829
  40e8ee:	ins    DWORD PTR es:[edi],dx
  40e8ef:	inc    ecx
  40e8f0:	adc    edx,edx
  40e8f2:	lea    esi,ds:0x7a18dd5f
  40e8f8:	jae    0x40e89c
  40e8fa:	inc    esi
  40e8fb:	jecxz  0x40e905
  40e8fd:	jmp    0x5607:0xdfb848e0
  40e904:	inc    ecx
  40e905:	mov    WORD PTR [edi],fs
  40e907:	out    0x52,al
  40e909:	retf   
  40e90a:	add    DWORD PTR [edi+ecx*8],esp
  40e90d:	(bad)  
  40e90e:	and    eax,0x4f1b36fe
  40e913:	lods   eax,DWORD PTR ds:[esi]
  40e914:	mov    ebp,0x25089176
  40e919:	inc    ebx
  40e91a:	call   0xf20a7f08
  40e91f:	pop    ds
  40e920:	sub    BYTE PTR [edi],bl
  40e922:	gs imul ecx,esi,0xa
  40e926:	sub    al,BYTE PTR [edi+0xc]
  40e929:	lods   al,BYTE PTR ds:[esi]
  40e92a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e92b:	or     al,0x80
  40e92d:	hlt    
  40e92e:	scas   eax,DWORD PTR es:[edi]
  40e92f:	loope  0x40e8c6
  40e931:	pop    ebp
  40e932:	jmp    0x3ea145ad
  40e937:	iret   
  40e938:	in     eax,0xbf
  40e93a:	push   eax
  40e93b:	imul   DWORD PTR [edx-0x249a8abc]
  40e941:	pop    ebp
  40e942:	imul   edi,DWORD PTR fs:[esi+0x6d],0x7e
  40e947:	mov    bh,0xa3
  40e949:	dec    eax
  40e94a:	in     eax,0x5e
  40e94c:	fcom   QWORD PTR [ecx-0x2f]
  40e94f:	or     ebp,esi
  40e951:	in     al,0x7f
  40e953:	push   es
  40e954:	sub    DWORD PTR [ebp+0x4fbe3bc9],ecx
  40e95a:	outs   dx,DWORD PTR ds:[esi]
  40e95b:	pop    ss
  40e95c:	jo     0x40e8fc
  40e95e:	jp     0x40e9a4
  40e960:	js     0x40e984
  40e962:	sub    dl,BYTE PTR [ebp-0x4fbf9826]
  40e968:	sub    ch,bl
  40e96a:	mov    ebp,0x5de4000e
  40e96f:	ret    0x820c
  40e972:	push   cs
  40e973:	outs   dx,DWORD PTR ds:[esi]
  40e974:	scas   al,BYTE PTR es:[edi]
  40e975:	pop    ecx
  40e976:	out    dx,eax
  40e977:	mov    bh,0xcc
  40e979:	jo     0x40e913
  40e97b:	retf   0x606c
  40e97e:	or     eax,ebp
  40e980:	sub    al,0xac
  40e982:	push   edx
  40e983:	push   edx
  40e984:	in     eax,0xd9
  40e986:	js     0x40e939
  40e988:	(bad)  
  40e989:	iret   
  40e98a:	cmp    bl,BYTE PTR [edx+0x20]
  40e98d:	das    
  40e98e:	in     eax,0x73
  40e990:	setp   BYTE PTR [esi]
  40e993:	jge    0x40e930
  40e995:	not    BYTE PTR [eax-0x5af0c7c3]
  40e99b:	test   BYTE PTR [ecx-0x7c46f770],bl
  40e9a1:	or     BYTE PTR [edx],al
  40e9a3:	(bad)  
  40e9a4:	les    ebp,FWORD PTR [ecx]
  40e9a6:	jmp    0x4c13:0x3220d755
  40e9ad:	out    dx,al
  40e9ae:	and    BYTE PTR [ebp-0x4c6e14c6],bl
  40e9b4:	xor    al,0x2c
  40e9b6:	pop    edx
  40e9b7:	and    edx,DWORD PTR [ebx-0x34cd740b]
  40e9bd:	mov    bl,0x97
  40e9bf:	sub    BYTE PTR [ebp-0x17],cl
  40e9c2:	shl    BYTE PTR [eax],1
  40e9c4:	(bad)  
  40e9c5:	or     esi,ebp
  40e9c7:	push   ds
  40e9c8:	imul   ebx,DWORD PTR [esi-0x6f],0xffffffb8
  40e9cc:	scas   al,BYTE PTR es:[edi]
  40e9cd:	mov    ebp,0xa730a32e
  40e9d2:	call   0x978e:0x728b5807
  40e9d9:	mov    cl,BYTE PTR [ebx]
  40e9db:	push   ebx
  40e9dc:	mov    edi,0x9757a7d5
  40e9e1:	xchg   DWORD PTR [ebp+0x6e7971e1],edi
  40e9e7:	mov    eax,cs:0xfb7b616b
  40e9ed:	jbe    0x40e9fd
  40e9ef:	inc    edi
  40e9f0:	pop    ebx
  40e9f1:	fstp   QWORD PTR [esi]
  40e9f3:	xor    al,BYTE PTR [eax+0x3d465e48]
  40e9f9:	add    al,dl
  40e9fb:	bound  esp,QWORD PTR [eax]
  40e9fd:	mov    ebp,DWORD PTR [ebp-0x6fa2a7db]
  40ea03:	xchg   ebx,eax
  40ea04:	imul   esp,DWORD PTR [edi-0x4b3b1320],0x5a6c324f
  40ea0e:	jns    0x40ea32
  40ea10:	cmp    eax,0x77320ebe
  40ea15:	fld    DWORD PTR [ebp+0x72c00bb5]
  40ea1b:	clc    
  40ea1c:	lahf   
  40ea1d:	rcr    BYTE PTR [eax],1
  40ea1f:	test   al,0x97
  40ea21:	push   ebp
  40ea22:	stc    
  40ea23:	int    0x9f
  40ea25:	sti    
  40ea26:	xchg   ebx,eax
  40ea27:	stc    
  40ea28:	addr16 sti 
  40ea2a:	and    al,0xc
  40ea2c:	movzx  esp,dl
  40ea2f:	pop    ebx
  40ea30:	inc    esi
  40ea31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea32:	outs   dx,BYTE PTR ds:[esi]
  40ea33:	push   0xffffffe2
  40ea35:	(bad)  
  40ea36:	pop    eax
  40ea37:	dec    eax
  40ea38:	mov    ch,0xe
  40ea3a:	daa    
  40ea3b:	cs scas eax,DWORD PTR es:[edi]
  40ea3d:	adc    al,0x3b
  40ea3f:	mov    edi,DWORD PTR [edi]
  40ea41:	(bad)  
  40ea42:	aaa    
  40ea43:	jmp    0x40e9df
  40ea45:	pop    eax
  40ea46:	mov    edx,0x8691ef80
  40ea4b:	add    ah,ah
  40ea4d:	dec    ebx
  40ea4e:	xor    eax,0x70e60121
  40ea53:	(bad)  
  40ea54:	mov    ecx,0x6bd63ad1
  40ea59:	cld    
  40ea5a:	aas    
  40ea5b:	or     al,0xd1
  40ea5d:	adc    DWORD PTR [edx+eax*8-0x6d],0x3a
  40ea62:	das    
  40ea63:	lds    esi,FWORD PTR ds:0xd9e8f31c
  40ea69:	mov    BYTE PTR [ecx],dh
  40ea6b:	add    eax,0xa5af024f
  40ea70:	std    
  40ea71:	js     0x40ea15
  40ea73:	push   ss
  40ea74:	add    DWORD PTR [edx-0x23b4164f],esi
  40ea7a:	sub    ebp,ebp
  40ea7c:	jmp    0x40ea61
  40ea7e:	adc    edx,DWORD PTR [ecx+edi*8-0x6a]
  40ea82:	ret    0xe4fc
  40ea85:	mov    edi,ecx
  40ea87:	cdq    
  40ea88:	xor    ebp,DWORD PTR [ebx+0x2c]
  40ea8b:	ja     0x40ea82
  40ea8d:	psllq  mm7,QWORD PTR [ebx]
  40ea90:	(bad)
  40ea94:	jbe    0x40eac8
  40ea96:	mov    edi,0x9e150462
  40ea9b:	test   eax,0xceec8360
  40eaa0:	sub    dh,BYTE PTR [esi-0x4f948bfc]
  40eaa6:	xchg   ebp,eax
  40eaa7:	mov    ecx,0xafc10b3a
  40eaac:	in     eax,dx
  40eaad:	jecxz  0x40ead7
  40eaaf:	sub    ebp,DWORD PTR [ebx+0x1fb7499a]
  40eab5:	mov    al,ds:0xf8868317
  40eaba:	dec    edx
  40eabb:	mov    ebp,0x3a7e79b9
  40eac0:	push   edx
  40eac1:	call   0x3579:0xd016f33c
  40eac8:	inc    edx
  40eac9:	sbb    dh,BYTE PTR [edx]
  40eacb:	rdpmc  
  40eacd:	(bad)  
  40eace:	bound  edi,QWORD PTR [edx-0x63]
  40ead1:	mov    eax,ds:0x24b01037
  40ead6:	adc    BYTE PTR [ebp+0x33],bh
  40ead9:	jbe    0x40eae9
  40eadb:	mov    edi,0x2d9dd293
  40eae0:	cmc    
  40eae1:	(bad)  
  40eae2:	and    ah,BYTE PTR [ecx+0x937fc4f]
  40eae8:	sub    ah,BYTE PTR ds:0xa9eeadee
  40eaee:	repnz (bad) [edx]
  40eaf1:	xchg   esi,eax
  40eaf2:	(bad)  
  40eaf3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eaf4:	(bad)  [edx-0x7bcb499]
  40eafa:	lds    ebp,FWORD PTR [eax-0x12]
  40eafd:	mov    ?,WORD PTR [edi]
  40eaff:	jnp    0x40eb11
  40eb01:	int3   
  40eb02:	repnz xor dh,BYTE PTR [esi+eax*2]
  40eb06:	xor    eax,0x15c58cb6
  40eb0b:	sub    al,0x1e
  40eb0d:	dec    esi
  40eb0e:	imul   eax,DWORD PTR [edi],0xffffff87
  40eb11:	lock popf 
  40eb13:	mov    BYTE PTR [ecx],dh
  40eb15:	mov    WORD PTR [esp+eax*4-0xe],?
  40eb19:	mov    al,0xc
  40eb1b:	push   0xffffffd0
  40eb1d:	cmc    
  40eb1e:	jp     0x40eb33
  40eb20:	outs   dx,DWORD PTR ds:[esi]
  40eb21:	and    eax,0xac593375
  40eb26:	fisubr WORD PTR [esi+0x24eb155b]
  40eb2c:	gs repz aaa 
  40eb2f:	js     0x40eaca
  40eb31:	jns    0x40eb36
  40eb33:	dec    edx
  40eb34:	hlt    
  40eb35:	(bad)  
  40eb37:	scas   eax,DWORD PTR es:[edi]
  40eb38:	add    ah,BYTE PTR [eax]
  40eb3a:	adc    eax,eax
  40eb3c:	dec    esi
  40eb3d:	mov    dh,0x7a
  40eb3f:	mov    ebp,0xb73d3fb0
  40eb44:	or     ebp,DWORD PTR ds:0x1b900e6e
  40eb4a:	cmp    cl,bl
  40eb4c:	sbb    DWORD PTR [ecx+edx*8+0x39c978c6],ebx
  40eb53:	test   DWORD PTR [edi-0x2ae4eb25],ebp
  40eb59:	mov    ch,0x1f
  40eb5b:	je     0x40ebd7
  40eb5d:	lea    edi,[edi+0x5ed8a6d8]
  40eb63:	sahf   
  40eb64:	out    dx,eax
  40eb65:	fidiv  WORD PTR ds:0x5d879ed4
  40eb6b:	out    0xb8,al
  40eb6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb6e:	mov    ecx,0x6e3b806f
  40eb73:	mov    dl,0xf7
  40eb75:	adc    al,0x57
  40eb77:	add    BYTE PTR [eax-0x3c],dl
  40eb7a:	repnz inc esi
  40eb7c:	sbb    ebx,ebx
  40eb7e:	js     0x40eb3f
  40eb80:	mov    dl,0xc7
  40eb82:	jge    0x40eb25
  40eb84:	test   DWORD PTR [edx+ecx*1-0x4d7ea799],ebx
  40eb8b:	into   
  40eb8c:	jg     0x40eb1d
  40eb8e:	inc    ecx
  40eb8f:	jmp    0x40ebc2
  40eb91:	call   0x9958171c
  40eb96:	jp     0x40ebc1
  40eb98:	pop    es
  40eb99:	aad    0x51
  40eb9b:	outs   dx,DWORD PTR ds:[esi]
  40eb9c:	inc    edx
  40eb9d:	in     eax,dx
  40eb9e:	dec    edx
  40eb9f:	outs   dx,BYTE PTR ds:[esi]
  40eba0:	rcr    DWORD PTR [ebx-0x3ffc5efe],cl
  40eba6:	dec    ecx
  40eba7:	add    eax,0x821d1de0
  40ebac:	ret    
  40ebad:	call   0xa864:0x37e1b364
  40ebb4:	dec    esp
  40ebb5:	in     al,0x80
  40ebb7:	add    esi,DWORD PTR [ebx+0x6c3a3c40]
  40ebbd:	push   0x585777a9
  40ebc2:	movaps XMMWORD PTR [eax-0x44],xmm7
  40ebc6:	icebp  
  40ebc7:	add    eax,0x5899ec20
  40ebcc:	cwde   
  40ebcd:	imul   ebx,ebp,0xde6912e9
  40ebd3:	sub    esi,ecx
  40ebd5:	outs   dx,DWORD PTR ds:[esi]
  40ebd6:	jmp    0x7b5d:0xd83e4d0
  40ebdd:	and    edi,DWORD PTR [ecx-0x7d46898c]
  40ebe3:	and    dh,bh
  40ebe5:	pop    edx
  40ebe6:	out    dx,eax
  40ebe7:	rol    DWORD PTR [ebx-0xe],cl
  40ebea:	push   edi
  40ebeb:	and    dl,al
  40ebed:	sbb    al,0xe0
  40ebef:	mov    dl,0x91
  40ebf1:	rcr    DWORD PTR [ebx+0x34],1
  40ebf4:	popa   
  40ebf5:	add    ch,bl
  40ebf7:	jle    0x40ec3f
  40ebf9:	push   edi
  40ebfa:	mov    edx,0x19f76770
  40ebff:	xor    BYTE PTR [edi+ebx*8],0xb5
  40ec03:	and    eax,0x1bae3ee2
  40ec08:	dec    ebp
  40ec09:	mov    DWORD PTR [edi+0x37015e3],ecx
  40ec0f:	push   ds
  40ec10:	pusha  
  40ec11:	adc    ah,BYTE PTR [esi+eiz*1]
  40ec14:	mov    edx,0x421c1771
  40ec19:	jecxz  0x40ebda
  40ec1b:	or     DWORD PTR [ecx-0x11],eax
  40ec1e:	xchg   ebp,eax
  40ec1f:	fisub  WORD PTR [ebx-0x2f2e17b7]
  40ec25:	repnz shr BYTE PTR [ecx],1
  40ec28:	daa    
  40ec29:	stos   DWORD PTR es:[edi],eax
  40ec2a:	es stos BYTE PTR es:[edi],al
  40ec2c:	int    0x50
  40ec2e:	outs   dx,BYTE PTR ds:[esi]
  40ec2f:	call   esp
  40ec31:	fcomp  DWORD PTR [esi-0x397109eb]
  40ec37:	add    eax,0xccee4393
  40ec3c:	repnz sub al,0x89
  40ec3f:	adc    esi,DWORD PTR [ebp+0x43]
  40ec42:	ss out 0x2d,al
  40ec45:	mov    al,ds:0xc1991f6a
  40ec4a:	imul   esi,DWORD PTR [ecx-0x1f4220b5],0xaea1a521
  40ec54:	test   eax,0x7fb85057
  40ec59:	lds    esp,FWORD PTR [esi-0x22]
  40ec5c:	aas    
  40ec5d:	inc    ebp
  40ec5e:	mov    cl,0x8d
  40ec60:	xor    BYTE PTR ds:0xb7dbf19c,bl
  40ec66:	xor    bl,BYTE PTR [edx-0x13]
  40ec69:	push   ebp
  40ec6a:	add    esp,DWORD PTR [edi+0x63ef69c9]
  40ec70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec71:	inc    ebx
  40ec72:	call   0x8f05:0x72048225
  40ec79:	dec    esi
  40ec7a:	mov    cs,edi
  40ec7c:	stc    
  40ec7d:	mov    edx,0xab268e5
  40ec82:	inc    esi
  40ec83:	or     ah,0x47
  40ec86:	mov    eax,0x56252ced
  40ec8b:	mov    ebp,0xc784fd37
  40ec90:	scas   eax,DWORD PTR es:[edi]
  40ec91:	sbb    BYTE PTR [edi-0x25],ah
  40ec94:	adc    eax,0x2aa6f38e
  40ec99:	daa    
  40ec9a:	ds push es
  40ec9c:	pop    eax
  40ec9d:	das    
  40ec9e:	mov    bh,0x43
  40eca0:	push   cs
  40eca1:	mov    eax,ds:0x7689f5fc
  40eca6:	lock and edx,esi
  40eca9:	mov    ds:0x4f0c5bd3,eax
  40ecae:	sbb    al,0xe6
  40ecb0:	out    dx,eax
  40ecb1:	mov    ?,esp
  40ecb3:	stos   DWORD PTR es:[edi],eax
  40ecb4:	xchg   esi,eax
  40ecb5:	call   0x1cd0b7e
  40ecba:	xchg   ebp,eax
  40ecbb:	aam    0xb
  40ecbd:	adc    edx,ebp
  40ecbf:	jmp    0x7bdb:0xa19eec41
  40ecc6:	push   ds
  40ecc7:	je     0x40ecde
  40ecc9:	lahf   
  40ecca:	xchg   ecx,eax
  40eccb:	sbb    al,0x34
  40eccd:	cmc    
  40ecce:	ins    DWORD PTR es:[edi],dx
  40eccf:	sbb    BYTE PTR [edx+ecx*8-0x49],cl
  40ecd3:	lahf   
  40ecd4:	add    ah,BYTE PTR [esi-0x5df16592]
  40ecda:	cdq    
  40ecdb:	inc    ebp
  40ecdc:	ins    BYTE PTR es:[edi],dx
  40ecdd:	scas   al,BYTE PTR es:[edi]
  40ecde:	push   eax
  40ecdf:	pop    esp
  40ece0:	xchg   edi,eax
  40ece1:	test   BYTE PTR [ebx],0x7e
  40ece4:	popf   
  40ece5:	in     eax,0x65
  40ece7:	pop    ss
  40ece8:	sti    
  40ece9:	fdivr  DWORD PTR [ecx]
  40eceb:	in     al,dx
  40ecec:	mov    ds:0x239bc4a1,al
  40ecf1:	aas    
  40ecf2:	mov    esi,0x2536ccc5
  40ecf7:	and    cl,BYTE PTR [eax]
  40ecf9:	and    edx,DWORD PTR [edi+ebp*2-0x2ceac92a]
  40ed00:	je     0x40eca6
  40ed02:	out    dx,eax
  40ed03:	jno    0x40ed73
  40ed05:	into   
  40ed06:	fnstcw WORD PTR [edi+0x158ea3b5]
  40ed0c:	arpl   WORD PTR [eax],di
  40ed0e:	(bad)  
  40ed0f:	mov    edi,0x1bdbb544
  40ed14:	loope  0x40ed3e
  40ed16:	fucomip st,st(5)
  40ed18:	ins    DWORD PTR es:[edi],dx
  40ed19:	loop   0x40ed76
  40ed1b:	imul   BYTE PTR [edi+0xf]
  40ed1e:	(bad)  
  40ed1f:	loopne 0x40ecee
  40ed21:	xchg   edi,eax
  40ed22:	test   al,ah
  40ed24:	mov    eax,0xadf74444
  40ed29:	cmp    BYTE PTR [ebx],cl
  40ed2b:	jb     0x40ecb1
  40ed2d:	adc    dl,BYTE PTR [ecx+ecx*8+0x1]
  40ed31:	sub    ch,dh
  40ed33:	outs   dx,BYTE PTR ds:[esi]
  40ed34:	sub    al,BYTE PTR ds:0xa18a6e33
  40ed3a:	and    al,0xfc
  40ed3c:	mov    eax,DWORD PTR [edx]
  40ed3e:	add    BYTE PTR [ecx],al
  40ed40:	sub    ecx,esp
  40ed42:	mov    edx,0x198469fc
  40ed47:	lahf   
  40ed48:	xor    edi,DWORD PTR [eax+0x7de1a4a4]
  40ed4e:	inc    esi
  40ed4f:	test   BYTE PTR [edi+0x58],0x41
  40ed53:	jo     0x40ecd6
  40ed55:	bound  ebp,QWORD PTR [edi+0x29]
  40ed58:	arpl   si,di
  40ed5a:	jge    0x40ed6d
  40ed5c:	or     dl,BYTE PTR [eax+0x7a]
  40ed5f:	pop    es
  40ed60:	out    dx,al
  40ed61:	or     ebp,ebp
  40ed63:	jle    0x40ed2f
  40ed65:	ret    0xdb32
  40ed68:	icebp  
  40ed69:	xor    al,BYTE PTR [edi+eax*4-0x7cf54b6a]
  40ed70:	test   BYTE PTR [esi],bh
  40ed72:	cwde   
  40ed73:	push   edi
  40ed74:	jp     0x40ed60
  40ed76:	mov    al,0xff
  40ed78:	lods   al,BYTE PTR ds:[esi]
  40ed79:	or     dh,BYTE PTR [esi]
  40ed7b:	or     esi,DWORD PTR [ebx+0x73]
  40ed7e:	cmp    ch,cl
  40ed80:	mov    ah,0xc5
  40ed82:	in     eax,0x72
  40ed84:	mov    ah,BYTE PTR [eax-0x1]
  40ed87:	push   edx
  40ed88:	popf   
  40ed89:	mov    edi,0x614dea31
  40ed8e:	mov    ah,0x1f
  40ed90:	add    bh,BYTE PTR ds:[esi+0x19]
  40ed94:	pop    ss
  40ed95:	jge    0x40edf4
  40ed97:	pop    esi
  40ed98:	mov    ebp,DWORD PTR [ebx+0x21941bbe]
  40ed9e:	aaa    
  40ed9f:	cmp    BYTE PTR [edi],bl
  40eda1:	mul    BYTE PTR [eax-0x55]
  40eda4:	scas   eax,DWORD PTR es:[edi]
  40eda5:	mov    bh,0xb0
  40eda7:	mov    edi,0x5719f89c
  40edac:	xor    eax,0x8851fc9a
  40edb1:	sub    DWORD PTR [ecx-0x2b955452],ebx
  40edb7:	xchg   DWORD PTR [edi-0x7b],edx
  40edba:	jmp    0x8754:0xef3d3cff
  40edc1:	sub    esp,DWORD PTR [eax+ebp*2]
  40edc4:	cdq    
  40edc5:	mov    edi,0x175589ef
  40edca:	inc    eax
  40edcb:	and    ecx,edx
  40edcd:	cli    
  40edce:	jl     0x40ed9e
  40edd0:	aas    
  40edd1:	jecxz  0x40ee06
  40edd3:	test   eax,0x1fa866a
  40edd8:	sbb    DWORD PTR [esi],ebx
  40edda:	sbb    BYTE PTR [ebp+0x15ec55d7],al
  40ede0:	leave  
  40ede1:	fidivr DWORD PTR [edx-0x17]
  40ede4:	lahf   
  40ede5:	jle    0x40ee32
  40ede7:	or     ebx,ebp
  40ede9:	inc    edx
  40edea:	and    BYTE PTR [edx+0x371ba12f],ch
  40edf0:	rcl    esp,cl
  40edf2:	xchg   DWORD PTR [ecx],ebx
  40edf4:	mov    eax,0xe441e847
  40edf9:	add    DWORD PTR [ecx+0x49],0xffffff87
  40edfd:	jbe    0x40ee5c
  40edff:	inc    edx
  40ee00:	repz pop edx
  40ee02:	lods   al,BYTE PTR ds:[esi]
  40ee03:	push   esi
  40ee04:	es add al,0xaf
  40ee07:	push   esp
  40ee08:	fld    DWORD PTR [esi]
  40ee0a:	add    eax,0x1c284ef8
  40ee0f:	pop    ds
  40ee10:	imul   ecx,DWORD PTR [ecx],0xeaf83ca3
  40ee16:	xchg   esp,eax
  40ee17:	sbb    al,0xc8
  40ee19:	dec    esp
  40ee1a:	stc    
  40ee1b:	in     al,dx
  40ee1c:	iret   
  40ee1d:	out    dx,al
  40ee1e:	ror    BYTE PTR [esi-0xc075b02],1
  40ee24:	in     al,dx
  40ee25:	pop    ebx
  40ee26:	adc    eax,0x8fb8da0
  40ee2b:	fisttp DWORD PTR [ecx+0x5]
  40ee2e:	xor    esi,esi
  40ee30:	cmp    BYTE PTR [edi-0x23],0x7c
  40ee34:	in     eax,dx
  40ee35:	push   ebx
  40ee36:	loopne 0x40ee57
  40ee38:	call   esp
  40ee3a:	xor    eax,0x70e51b97
  40ee3f:	sbb    ecx,DWORD PTR [esi-0x7f]
  40ee42:	inc    ebp
  40ee43:	lods   al,BYTE PTR ds:[esi]
  40ee44:	pop    edi
  40ee45:	(bad)  
  40ee47:	jle    0x40eebf
  40ee49:	cmp    BYTE PTR [esi],ah
  40ee4b:	outs   dx,BYTE PTR ds:[esi]
  40ee4c:	xchg   edi,eax
  40ee4d:	push   ebx
  40ee4e:	add    edi,ebp
  40ee50:	jnp    0x40eea8
  40ee52:	pop    DWORD PTR [esi]
  40ee54:	push   ebp
  40ee55:	int    0xc3
  40ee57:	xchg   DWORD PTR [edi+0x51],esi
  40ee5a:	push   cs
  40ee5b:	mov    WORD PTR [eax+0x5dbd0834],?
  40ee61:	fdivrp st(7),st
  40ee63:	inc    DWORD PTR [eax]
  40ee65:	mov    ds:0xeac5b700,al
  40ee6a:	mov    ebp,0xd581d0a2
  40ee6f:	or     DWORD PTR [edx],ebx
  40ee71:	je     0x40ee66
  40ee73:	sub    al,0xc
  40ee75:	fst    st(2)
  40ee77:	push   esi
  40ee78:	pop    edi
  40ee79:	cwde   
  40ee7a:	pop    ebp
  40ee7b:	rol    bl,1
  40ee7d:	clc    
  40ee7e:	rol    BYTE PTR [edx+0xe548a4],1
  40ee84:	inc    ebx
  40ee85:	add    edi,DWORD PTR [esi]
  40ee87:	jns    0x40eeae
  40ee89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee8a:	mov    edi,edi
  40ee8c:	and    eax,0x1d4a6be4
  40ee91:	jl     0x40ee5c
  40ee93:	adc    BYTE PTR [ecx+0x47ba2a4c],dh
  40ee99:	inc    esi
  40ee9a:	enter  0x8ac,0x1d
  40ee9e:	jb     0x40ee46
  40eea0:	or     al,0x65
  40eea2:	and    esp,DWORD PTR [edx-0x77]
  40eea5:	push   es
  40eea6:	inc    ecx
  40eea7:	mov    DWORD PTR [ecx-0x1467a1aa],esp
  40eead:	mov    dl,0xd3
  40eeaf:	sbb    al,0x2e
  40eeb1:	mov    edx,0xece750ca
  40eeb6:	scas   eax,DWORD PTR es:[edi]
  40eeb7:	mov    ebx,0xc2f1ac6a
  40eebc:	mov    ecx,0x5f5b2d9f
  40eec1:	inc    eax
  40eec2:	mov    al,ds:0x2feb65f4
  40eec7:	and    DWORD PTR [edx-0x75],esp
  40eeca:	jl     0x40ee89
  40eecc:	imul   cx,sp,0x3a
  40eed0:	cmp    edi,eax
  40eed2:	push   esp
  40eed3:	call   0x2a144b1c
  40eed8:	and    al,0x3a
  40eeda:	cmc    
  40eedb:	daa    
  40eedc:	ja     0x40ee81
  40eede:	xchg   edx,eax
  40eedf:	or     al,0xaa
  40eee1:	ins    BYTE PTR es:[edi],dx
  40eee2:	push   0xffffff9f
  40eee4:	push   ds
  40eee5:	push   cs
  40eee6:	and    eax,0xc29bd15b
  40eeeb:	and    DWORD PTR [edi+0x63],ebp
  40eeee:	jo     0x40ee9a
  40eef0:	(bad)  
  40eef1:	retf   0xf892
  40eef4:	sahf   
  40eef5:	xor    DWORD PTR [edi-0x56],esp
  40eef8:	mov    al,BYTE PTR [edi+eax*4+0x32ee60c2]
  40eeff:	lods   al,BYTE PTR cs:[esi]
  40ef01:	js     0x40eece
  40ef03:	and    ebx,DWORD PTR [eax]
  40ef05:	push   esi
  40ef06:	sbb    DWORD PTR [esp+eax*4+0x67],0xff53b4e5
  40ef0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef0f:	sbb    eax,ebx
  40ef11:	mov    bh,BYTE PTR [ecx-0x2704a854]
  40ef17:	push   eax
  40ef18:	out    dx,eax
  40ef19:	int    0x5b
  40ef1b:	or     BYTE PTR [ebp-0x7f101e7e],ah
  40ef21:	cmp    eax,0xeffa8c97
  40ef26:	test   eax,0xa7cbe31e
  40ef2b:	call   0x159cf2b3
  40ef30:	inc    edi
  40ef31:	inc    edi
  40ef32:	dec    esp
  40ef33:	push   eax
  40ef34:	jge    0x40eebf
  40ef36:	push   0x61
  40ef38:	pop    ss
  40ef39:	mov    ah,0x73
  40ef3b:	call   0x4b51:0x70b5d213
  40ef42:	pop    esp
  40ef43:	leave  
  40ef44:	pop    ecx
  40ef45:	and    dh,BYTE PTR [edx+0x6814390c]
  40ef4b:	push   0xe9765a95
  40ef50:	jmp    0x46152b9e
  40ef55:	cli    
  40ef56:	bound  eax,QWORD PTR ds:0x5cb094e7
  40ef5c:	sbb    dl,BYTE PTR [di-0xb]
  40ef60:	mov    ds:0x132f7fd8,eax
  40ef65:	jno    0x40eeef
  40ef67:	jl     0x40ef8f
  40ef69:	(bad)  
  40ef6a:	cmp    al,0x77
  40ef6c:	imul   esi,DWORD PTR [edi],0x17
  40ef6f:	inc    ebp
  40ef70:	push   esp
  40ef71:	fimul  WORD PTR [ecx+0x102b6b8]
  40ef77:	ficomp DWORD PTR [edi-0x39]
  40ef7a:	add    BYTE PTR [edx+0x2],bl
  40ef7d:	ret    0x7825
  40ef80:	push   ebx
  40ef81:	int    0x4f
  40ef83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef84:	out    0xb8,al
  40ef86:	and    esp,DWORD PTR [edi+edx*2]
  40ef89:	mov    esi,0xa0be4e7a
  40ef8e:	and    DWORD PTR fs:[ebx],eax
  40ef91:	test   ch,ch
  40ef93:	push   edx
  40ef94:	adc    ecx,eax
  40ef96:	mov    edi,DWORD PTR [eax+esi*2-0x66]
  40ef9a:	inc    esi
  40ef9b:	mov    bh,dl
  40ef9d:	int3   
  40ef9e:	int    0xe3
  40efa0:	leave  
  40efa1:	shr    eax,0xff
  40efa4:	jg     0x40ef93
  40efa6:	sbb    ah,BYTE PTR [edx]
  40efa8:	mov    ss,WORD PTR [esi-0x782763d0]
  40efae:	scas   al,BYTE PTR es:[edi]
  40efaf:	call   0xffa926bf
  40efb4:	jo     0x40efbe
  40efb6:	adc    al,BYTE PTR [ecx+0x7420daae]
  40efbc:	xchg   esi,eax
  40efbd:	jl     0x40f035
  40efbf:	or     bl,BYTE PTR [ecx-0x4a]
  40efc2:	loop   0x40efeb
  40efc4:	sar    BYTE PTR [esi-0x1a],0xbd
  40efc8:	test   al,0xf8
  40efca:	arpl   WORD PTR [esi+edi*4+0x3e],sp
  40efce:	pop    eax
  40efcf:	idiv   DWORD PTR [ebp+0x23]
  40efd2:	out    dx,al
  40efd3:	retf   0xb0eb
  40efd6:	or     dl,al
  40efd8:	xchg   edx,eax
  40efd9:	clc    
  40efda:	fs xor al,0x8d
  40efdd:	(bad)  
  40efde:	ja     0x40efee
  40efe0:	pop    ss
  40efe1:	sbb    BYTE PTR ds:0x369a76da,cl
  40efe7:	push   ss
  40efe8:	les    esp,FWORD PTR [ecx-0x6f4a7278]
  40efee:	sar    ch,1
  40eff0:	cmp    al,bl
  40eff2:	call   0x331cf0d1
  40eff7:	test   al,0x2a
  40eff9:	pop    ecx
  40effa:	out    0x56,al
  40effc:	mov    esi,0xa4f4a188
  40f001:	push   0x7e4984d0
  40f006:	pop    eax
  40f007:	jo     0x40f065
  40f009:	ret    0x798
  40f00c:	mov    cl,BYTE PTR [edx+0x4f31be12]
  40f012:	or     eax,0x18ed084d
  40f017:	mov    eax,0xfc852f13
  40f01c:	add    ebp,DWORD PTR [ebp-0xe]
  40f01f:	ins    DWORD PTR es:[edi],dx
  40f020:	cld    
  40f021:	jge    0x40f049
  40f023:	push   ebp
  40f024:	mov    esp,?
  40f026:	pop    esi
  40f027:	cli    
  40f028:	mov    edi,0x21480ee6
  40f02d:	dec    edx
  40f02e:	fiadd  WORD PTR [eax-0x4dd3816e]
  40f034:	xchg   ebp,eax
  40f035:	clc    
  40f036:	add    BYTE PTR [eax-0x11],bh
  40f039:	in     eax,0xc2
  40f03b:	leave  
  40f03c:	jmp    FWORD PTR [ecx]
  40f03e:	imul   edi,DWORD PTR [edx+esi*4+0x121235db],0x63
  40f046:	loopne 0x40eff7
  40f048:	rol    DWORD PTR [esi],1
  40f04a:	cs loope 0x40f085
  40f04d:	push   edi
  40f04e:	shl    DWORD PTR [esi-0x1c],1
  40f051:	or     DWORD PTR [ecx-0x42010fde],edi
  40f057:	call   0xd09c:0x49b7b375
  40f05e:	pop    es
  40f05f:	ror    DWORD PTR [ecx+esi*2-0x75230e4e],cl
  40f066:	push   es
  40f067:	sub    eax,0x47bb02fe
  40f06c:	mov    ah,0xc2
  40f06e:	fmul   QWORD PTR [esi+0xbe5dd38]
  40f074:	pop    ebx
  40f075:	sub    BYTE PTR [edi],bl
  40f077:	enter  0x9122,0xb9
  40f07b:	ror    DWORD PTR [eax],cl
  40f07d:	mov    ebx,0x573ae674
  40f082:	adc    bl,BYTE PTR [esi+0x28]
  40f085:	dec    edi
  40f086:	xor    al,0x59
  40f088:	sbb    eax,0x2ea4d0ab
  40f08d:	add    al,0xd4
  40f08f:	cmp    al,0xc
  40f091:	inc    esi
  40f092:	in     al,dx
  40f093:	jle    0x40f05f
  40f095:	test   eax,0x4fca28a0
  40f09a:	popf   
  40f09b:	call   0xb473:0x5ac241ab
  40f0a2:	push   edx
  40f0a3:	mov    bh,0xf9
  40f0a5:	xchg   edi,eax
  40f0a6:	ret    0xfc77
  40f0a9:	loopne 0x40f03d
  40f0ab:	dec    ebx
  40f0ac:	sub    eax,0xab7c4415
  40f0b1:	fidivr WORD PTR [esi+0x44]
  40f0b4:	inc    ebp
  40f0b5:	jbe    0x40f0d1
  40f0b7:	sar    BYTE PTR [edi-0x2a7d2a83],cl
  40f0bd:	fdivr  DWORD PTR [ebp+0x1f]
  40f0c0:	mov    ebx,0x670547f2
  40f0c5:	jb     0x40f06e
  40f0c7:	and    dh,BYTE PTR [ebp-0x318d887e]
  40f0cd:	sub    cl,BYTE PTR [esi+0x7]
  40f0d0:	push   es
  40f0d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d2:	pop    es
  40f0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0d4:	mov    esi,0xff10eca7
  40f0d9:	push   0xffffff8b
  40f0db:	jge    0x40f100
  40f0dd:	ins    DWORD PTR es:[edi],dx
  40f0de:	(bad)  
  40f0df:	inc    ebp
  40f0e0:	push   ebp
  40f0e1:	mul    DWORD PTR [ebp-0x74]
  40f0e4:	jecxz  0x40f137
  40f0e6:	mov    eax,0x825c81fe
  40f0eb:	xchg   esi,eax
  40f0ec:	retf   
  40f0ed:	cdq    
  40f0ee:	mov    bl,0x9a
  40f0f0:	or     bl,BYTE PTR [edi+eiz*1]
  40f0f3:	fsub   QWORD PTR [ecx]
  40f0f5:	mov    al,0x29
  40f0f7:	mov    dh,0x64
  40f0f9:	xor    DWORD PTR [edx-0x3569233b],edi
  40f0ff:	dec    esp
  40f100:	shl    DWORD PTR [ecx+eax*8-0x2f],cl
  40f104:	jne    0x40f09f
  40f106:	xchg   esp,eax
  40f107:	cmp    DWORD PTR [ebx],edi
  40f109:	hlt    
  40f10a:	test   BYTE PTR [ebx-0xf],bl
  40f10d:	call   0x76d9:0xf3f1f191
  40f114:	or     DWORD PTR [edx],0xffffffaa
  40f117:	lahf   
  40f118:	stos   DWORD PTR es:[edi],eax
  40f119:	popa   
  40f11a:	pop    ebp
  40f11b:	inc    ecx
  40f11c:	sbb    bl,BYTE PTR [ebx]
  40f11e:	fistp  WORD PTR [ecx+ebx*2]
  40f121:	mov    ecx,0x55e67421
  40f126:	mov    esi,0xb981538c
  40f12b:	push   esp
  40f12c:	(bad)
  40f12f:	imul   edi,eax,0x4473f9ca
  40f135:	and    DWORD PTR [ebx+esi*2-0x2fec347a],edx
  40f13c:	aam    0x2c
  40f13e:	dec    edi
  40f13f:	xchg   edi,eax
  40f140:	ret    0x3115
  40f143:	push   eax
  40f144:	mov    ch,cl
  40f146:	sbb    BYTE PTR [esi+0x68],cl
  40f149:	push   cs
  40f14a:	xlat   BYTE PTR ds:[ebx]
  40f14b:	adc    DWORD PTR [edi+edx*1],edi
  40f14e:	xchg   BYTE PTR [esi-0x70b9ea61],ah
  40f154:	loop   0x40f170
  40f156:	jne    0x40f1b1
  40f158:	int3   
  40f159:	mov    ?,WORD PTR [eax+0x1216a65f]
  40f15f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f160:	push   0xb72183ae
  40f165:	inc    ebp
  40f166:	pop    ebp
  40f167:	jno    0x40f189
  40f169:	pop    edx
  40f16a:	loopne 0x40f1b4
  40f16c:	push   ebp
  40f16d:	hlt    
  40f16e:	imul   ecx,DWORD PTR [esi+edi*4],0xffffff95
  40f172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f173:	out    0x81,eax
  40f175:	sbb    BYTE PTR [ebp+0x62],ch
  40f178:	aaa    
  40f179:	mov    ebx,0x9a3f2ebc
  40f17e:	sbb    al,0x5
  40f180:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f181:	xchg   edx,eax
  40f182:	inc    esp
  40f183:	icebp  
  40f184:	stos   BYTE PTR es:[edi],al
  40f185:	inc    DWORD PTR [edx]
  40f187:	jp     0x40f168
  40f189:	and    esi,DWORD PTR [esi]
  40f18b:	xchg   ecx,eax
  40f18c:	mov    esi,0x836657fd
  40f191:	imul   DWORD PTR ss:[ebx+0x712e7e2a]
  40f198:	popa   
  40f199:	sub    al,0x36
  40f19b:	mov    ds:0x215f76a5,eax
  40f1a0:	js     0x40f153
  40f1a2:	jno    0x40f1ec
  40f1a4:	test   eax,0xf9d222ef
  40f1a9:	pop    esp
  40f1aa:	dec    ebp
  40f1ab:	(bad)
  40f1af:	repnz xchg ebx,eax
  40f1b1:	pop    es
  40f1b2:	cmc    
  40f1b3:	xor    eax,0x1251098f
  40f1b8:	out    dx,eax
  40f1b9:	pop    es
  40f1ba:	jmp    0x55b76323
  40f1bf:	sbb    eax,0x458580df
  40f1c4:	shl    DWORD PTR [ecx-0x3a],0xcd
  40f1c8:	jmp    0x40f189
  40f1ca:	adc    BYTE PTR [ebp+0x5414ea1b],dl
  40f1d0:	retf   0x3f2b
  40f1d3:	iret   
  40f1d4:	dec    ecx
  40f1d5:	inc    eax
  40f1d6:	es jae 0x40f1ae
  40f1d9:	inc    ecx
  40f1da:	repnz adc eax,0x78cf06a5
  40f1e0:	test   eax,0x417ba81c
  40f1e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1e6:	jp     0x40f257
  40f1e8:	or     ch,0x92
  40f1eb:	mov    eax,0x8fb0d8d0
  40f1f0:	mov    eax,0x511a8d20
  40f1f5:	or     DWORD PTR cs:[edi+eax*4+0x32c294ea],esi
  40f1fd:	addr16 fdivp st(3),st
  40f200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f201:	neg    esi
  40f203:	mov    esi,DWORD PTR [ecx+ebp*8]
  40f206:	and    eax,0xd395ef23
  40f20b:	(bad)  
  40f20c:	aam    0x87
  40f20e:	push   ecx
  40f20f:	inc    edi
  40f210:	add    eax,DWORD PTR [edi]
  40f212:	mov    dl,0x46
  40f214:	dec    edx
  40f215:	aas    
  40f216:	ficomp WORD PTR [edx+0x6c]
  40f219:	sti    
  40f21a:	push   0xa2ab22ef
  40f21f:	sbb    BYTE PTR [edx+0x433a45c2],ah
  40f225:	xlat   BYTE PTR ds:[ebx]
  40f226:	xchg   ecx,eax
  40f227:	mov    cl,0x56
  40f229:	sar    esp,0x59
  40f22c:	and    eax,0x61d527ff
  40f231:	cld    
  40f232:	or     eax,DWORD PTR ds:0x509878bf
  40f238:	retf   
  40f239:	push   edx
  40f23a:	imul   eax,DWORD PTR [edx-0x6499b361],0xfffffffb
  40f241:	cmp    esi,0x5f
  40f244:	inc    edi
  40f245:	push   cs
  40f246:	adc    dl,BYTE PTR [ebx+0x56]
  40f249:	cli    
  40f24a:	icebp  
  40f24b:	cmp    ebp,DWORD PTR [edx+0x6b2554ed]
  40f251:	mov    al,0x97
  40f253:	xor    al,0xac
  40f255:	dec    esi
  40f256:	add    ebp,DWORD PTR [esi+eiz*4]
  40f259:	mov    ah,0xcf
  40f25b:	ins    BYTE PTR es:[edi],dx
  40f25c:	shl    ebp,0x92
  40f25f:	inc    esi
  40f260:	icebp  
  40f261:	in     eax,0x58
  40f263:	in     eax,0x29
  40f265:	inc    ebx
  40f266:	mov    BYTE PTR [edx-0x1c],bh
  40f269:	xor    esi,DWORD PTR [esi]
  40f26b:	jge    0x40f2d7
  40f26d:	aam    0x3b
  40f26f:	stos   DWORD PTR es:[edi],eax
  40f270:	fild   WORD PTR [eax+0x4c]
  40f273:	enter  0xba5f,0xe8
  40f277:	push   0xffffffef
  40f279:	mov    ds:0xfc47cb83,eax
  40f27e:	lods   eax,DWORD PTR ds:[esi]
  40f27f:	push   eax
  40f280:	jp     0x40f2c2
  40f282:	(bad)  
  40f283:	pop    ds
  40f284:	mov    dh,0xe8
  40f286:	fs adc eax,0x5fbfe879
  40f28c:	mov    ah,0xe1
  40f28e:	xor    eax,0xbabcff6a
  40f293:	jae    0x40f2be
  40f295:	addr16 cmc 
  40f297:	and    al,0xe7
  40f299:	test   eax,0x7eea1762
  40f29e:	mov    esp,DWORD PTR [ecx+0x27]
  40f2a1:	adc    edx,esi
  40f2a3:	test   bl,bh
  40f2a5:	mov    edx,0x5c030dd1
  40f2aa:	xchg   esp,eax
  40f2ab:	lahf   
  40f2ac:	pop    eax
  40f2ad:	inc    ebp
  40f2ae:	cmp    eax,0xf5d32d80
  40f2b3:	shl    WORD PTR [edi+0x41],0x72
  40f2b8:	cmp    BYTE PTR [eax+0x14],bh
  40f2bb:	and    DWORD PTR [esi],edi
  40f2bd:	cmp    BYTE PTR [esi-0xc],dh
  40f2c0:	dec    ebp
  40f2c1:	mov    BYTE PTR [ebp-0x41a63023],bl
  40f2c7:	hlt    
  40f2c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f2c9:	mov    ?,ecx
  40f2cb:	jb     0x40f28a
  40f2cd:	lods   al,BYTE PTR ds:[esi]
  40f2ce:	sub    ch,BYTE PTR [ebx]
  40f2d0:	scas   eax,DWORD PTR es:[edi]
  40f2d1:	outs   dx,DWORD PTR ds:[esi]
  40f2d2:	xor    BYTE PTR [ebx],bh
  40f2d4:	test   eax,0xd9b322d4
  40f2d9:	mov    BYTE PTR [esi+0x50],bl
  40f2dc:	jb     0x40f315
  40f2de:	cmp    eax,0x37441490
  40f2e3:	mov    ds:0x33c8a0ba,al
  40f2e8:	rcr    ecx,cl
  40f2ea:	(bad)  
  40f2eb:	loop   0x40f360
  40f2ed:	fidiv  WORD PTR ds:0x6adb46fc
  40f2f3:	mov    ss,WORD PTR [esi]
  40f2f5:	mov    bl,0x74
  40f2f7:	in     eax,dx
  40f2f8:	das    
  40f2f9:	mov    dh,0xbf
  40f2fb:	inc    edx
  40f2fc:	int3   
  40f2fd:	mov    edx,0x21433cfc
  40f302:	(bad)  
  40f303:	add    eax,0x91409610
  40f308:	or     ecx,ebp
  40f30a:	sbb    ebx,0xffffff92
  40f30d:	mov    al,0xf2
  40f30f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f310:	daa    
  40f311:	dec    ebx
  40f312:	inc    ebx
  40f313:	adc    al,0xf
  40f315:	icebp  
  40f316:	pop    edi
  40f317:	mov    ch,0x71
  40f319:	popf   
  40f31a:	push   esi
  40f31b:	sbb    DWORD PTR [ebx-0x32507dcb],0x91290397
  40f325:	js     0x40f358
  40f327:	lahf   
  40f328:	retf   0x73a
  40f32b:	xlat   BYTE PTR ds:[ebx]
  40f32c:	and    dh,dl
  40f32e:	into   
  40f32f:	jg     0x40f35d
  40f331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f332:	fsqrt  
  40f334:	ins    DWORD PTR es:[edi],dx
  40f335:	icebp  
  40f336:	icebp  
  40f337:	sub    DWORD PTR [esi],0x3c
  40f33a:	adc    BYTE PTR [eax+esi*8+0xe69dde0],dh
  40f341:	stc    
  40f342:	fs push ebx
  40f344:	iret   
  40f345:	stos   BYTE PTR es:[edi],al
  40f346:	push   esi
  40f347:	sbb    eax,0x880230ea
  40f34c:	pop    esp
  40f34d:	jo     0x40f331
  40f34f:	(bad)
  40f354:	(bad)  
  40f355:	cmp    DWORD PTR [eax+0xa3de675],esp
  40f35b:	jne    0x40f324
  40f35d:	mov    ebx,DWORD PTR [ecx-0x39]
  40f360:	push   esp
  40f361:	shl    ecx,0x88
  40f364:	sti    
  40f365:	repz adc esi,ecx
  40f368:	or     bl,bh
  40f36a:	pop    ss
  40f36b:	fisubr WORD PTR [ebx]
  40f36d:	pushf  
  40f36e:	fldenv [eax+0x6b]
  40f371:	sbb    bl,BYTE PTR [ecx]
  40f373:	imul   esp,esp,0x6e687ad2
  40f379:	jb     0x40f3db
  40f37b:	pop    ss
  40f37c:	gs sbb al,0x3a
  40f37f:	loopne 0x40f361
  40f381:	sahf   
  40f382:	adc    edx,esp
  40f384:	mov    edx,0x3b05ffd
  40f389:	outs   dx,BYTE PTR ds:[esi]
  40f38a:	mov    bl,0x94
  40f38c:	stos   DWORD PTR es:[edi],eax
  40f38d:	(bad)  
  40f38e:	int3   
  40f38f:	call   0x8ed1:0x536872c9
  40f396:	push   ecx
  40f397:	fstp   QWORD PTR [edi+0x2c]
  40f39a:	xor    bl,BYTE PTR [ecx+0xc]
  40f39d:	add    BYTE PTR [ebx+0x30931462],bl
  40f3a3:	inc    esi
  40f3a4:	jp     0x40f3d8
  40f3a6:	adc    al,0xe9
  40f3a8:	int    0xf5
  40f3aa:	mov    al,ds:0x37d367b7
  40f3af:	mov    BYTE PTR [edx-0x75],dl
  40f3b2:	xchg   edx,eax
  40f3b3:	jb     0x40f3fa
  40f3b5:	cdq    
  40f3b6:	not    DWORD PTR [esi]
  40f3b8:	std    
  40f3b9:	aad    0x30
  40f3bb:	cld    
  40f3bc:	or     eax,0x5eec099e
  40f3c1:	imul   eax,ecx,0x4
  40f3c4:	xchg   DWORD PTR [edi],ebp
  40f3c6:	sahf   
  40f3c7:	scas   eax,DWORD PTR es:[edi]
  40f3c8:	jns    0x40f3a2
  40f3ca:	push   ecx
  40f3cb:	aad    0x3c
  40f3cd:	test   DWORD PTR [eax-0x17],esp
  40f3d0:	inc    esi
  40f3d1:	pop    eax
  40f3d2:	hlt    
  40f3d3:	lahf   
  40f3d4:	leave  
  40f3d5:	xor    DWORD PTR [edx+edx*1],esi
  40f3d8:	outs   dx,BYTE PTR ds:[esi]
  40f3d9:	and    dh,BYTE PTR [esi+0x6ee1f57b]
  40f3df:	pop    ds
  40f3e0:	jbe    0x40f3bb
  40f3e2:	mov    esp,0x7aee4214
  40f3e7:	adc    dl,BYTE PTR [eax-0x18]
  40f3ea:	(bad)  
  40f3eb:	mov    ds:0x1d037b8c,eax
  40f3f0:	xchg   ebx,eax
  40f3f1:	mov    BYTE PTR [edx],ch
  40f3f3:	dec    ecx
  40f3f4:	jae    0x40f3d2
  40f3f6:	lds    ebx,FWORD PTR [ecx-0x2015214b]
  40f3fc:	cmp    DWORD PTR [eax],edx
  40f3fe:	out    dx,al
  40f3ff:	pop    esi
  40f400:	sbb    BYTE PTR [edi+0x27877e6d],dl
  40f406:	ficom  DWORD PTR [ecx+0x6eae04c5]
  40f40c:	cld    
  40f40d:	movnti DWORD PTR [eax+0x1],eax
  40f411:	jne    0x40f46f
  40f413:	dec    BYTE PTR ds:0x9c318e4a
  40f419:	ss xchg esi,eax
  40f41b:	fs mov edx,0xa53cb15b
  40f421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f422:	cmp    BYTE PTR [ebp-0x50],0x2b
  40f426:	pushf  
  40f427:	mov    ecx,0xbdcb2c59
  40f42c:	bound  ebp,QWORD PTR [ecx+0x15b32ef0]
  40f432:	mov    ch,0x4a
  40f434:	jbe    0x40f47b
  40f436:	mov    cl,0xfe
  40f438:	add    DWORD PTR [esi],0x1c
  40f43b:	in     al,dx
  40f43c:	inc    eax
  40f43d:	inc    esp
  40f43e:	or     eax,0xaa3fc497
  40f443:	push   esp
  40f444:	arpl   sp,bp
  40f446:	cdq    
  40f447:	outs   dx,DWORD PTR ds:[esi]
  40f448:	int3   
  40f449:	and    al,0xd
  40f44b:	mov    ah,0x44
  40f44d:	call   0xb1c0dd0
  40f452:	ficom  WORD PTR [edi-0x25]
  40f455:	xchg   edx,eax
  40f456:	push   ds
  40f457:	pop    ecx
  40f458:	mov    ch,0xa
  40f45a:	(bad)  
  40f45b:	xchg   DWORD PTR [ebp+0x360720f8],ebp
  40f461:	les    esp,FWORD PTR [edx]
  40f463:	(bad)  
  40f465:	push   ss
  40f466:	scas   eax,DWORD PTR es:[edi]
  40f467:	lods   al,BYTE PTR ds:[esi]
  40f468:	in     al,0xf6
  40f46a:	pop    ebp
  40f46b:	ins    DWORD PTR es:[edi],dx
  40f46c:	mov    al,ds:0x8b44fef4
  40f471:	jne    0x40f48c
  40f473:	adc    DWORD PTR [ebp+0x4e73c645],0x666e3132
  40f47d:	xor    DWORD PTR [edi+ecx*4+0x4d],eax
  40f481:	push   edi
  40f482:	dec    ebp
  40f483:	adc    eax,0x2a35d10e
  40f488:	jno    0x40f4d1
  40f48a:	(bad)  
  40f48b:	hlt    
  40f48c:	jl     0x40f4f2
  40f48e:	shl    BYTE PTR [esi-0x663c86df],1
  40f494:	mov    dl,0x7d
  40f496:	xor    ecx,edx
  40f498:	mov    cl,BYTE PTR [esi]
  40f49a:	std    
  40f49b:	mov    dl,0x1
  40f49d:	test   al,0x46
  40f49f:	shl    BYTE PTR ds:0x723d45b8,cl
  40f4a5:	ja     0x40f467
  40f4a7:	jno    0x40f487
  40f4a9:	in     al,0xec
  40f4ab:	push   ecx
  40f4ac:	ficom  WORD PTR [eax-0x5e]
  40f4af:	mov    DWORD PTR [edx+0x4f],eax
  40f4b2:	outs   dx,DWORD PTR ds:[esi]
  40f4b3:	mov    cl,0x25
  40f4b5:	sti    
  40f4b6:	lods   eax,DWORD PTR ds:[esi]
  40f4b7:	or     eax,0xe2f7f94f
  40f4bc:	daa    
  40f4bd:	in     eax,dx
  40f4be:	(bad)  
  40f4bf:	pop    ebx
  40f4c0:	stc    
  40f4c1:	imul   ebp,DWORD PTR [esi*2+0x5e53d597],0xffffffd3
  40f4c9:	inc    esi
  40f4ca:	mov    dh,bh
  40f4cc:	mov    WORD PTR [ebx-0x4057e4db],?
  40f4d2:	jae    0x40f4a1
  40f4d4:	(bad)  
  40f4d5:	fidiv  WORD PTR [ecx+eax*1]
  40f4d8:	xchg   esp,ecx
  40f4da:	mov    cl,0xf5
  40f4dc:	xchg   ebx,eax
  40f4dd:	mov    al,ds:0xeb460174
  40f4e2:	and    eax,0xde63ba21
  40f4e7:	sbb    bl,BYTE PTR [eax-0x68]
  40f4ea:	adc    al,0xf5
  40f4ec:	xor    al,0x67
  40f4ee:	jnp    0x40f4eb
  40f4f0:	cmp    al,0x23
  40f4f2:	ficom  DWORD PTR [ebx]
  40f4f4:	lods   eax,DWORD PTR ds:[esi]
  40f4f5:	loopne 0x40f4ae
  40f4f7:	ins    DWORD PTR es:[edi],dx
  40f4f8:	dec    ebx
  40f4f9:	mov    al,dl
  40f4fb:	fcom   DWORD PTR [ecx+0x69]
  40f4fe:	mov    bh,0x68
  40f500:	cli    
  40f501:	jo     0x40f571
  40f503:	dec    esp
  40f504:	cmp    al,0x17
  40f506:	jmp    0x40f49b
  40f508:	test   eax,0xe362786d
  40f50d:	push   ebx
  40f50e:	data16 (bad) 
  40f510:	cmc    
  40f511:	sbb    cl,BYTE PTR [esi+ebp*4-0x1fb263fe]
  40f518:	mov    ecx,0x8aa65f20
  40f51d:	(bad)
  40f521:	lods   al,BYTE PTR ds:[esi]
  40f522:	in     al,dx
  40f523:	jnp    0x40f513
  40f525:	jbe    0x40f547
  40f527:	rcr    DWORD PTR [ecx+edi*2-0x1f081b4b],cl
  40f52e:	dec    esi
  40f52f:	inc    edi
  40f530:	dec    eax
  40f531:	jb     0x40f55d
  40f533:	push   es
  40f534:	jo     0x40f54a
  40f536:	pop    ebp
  40f537:	xchg   edi,eax
  40f538:	jno    0x40f574
  40f53a:	xchg   BYTE PTR [esi],bh
  40f53c:	lea    eax,[edx+eax*1-0x5fad2daf]
  40f543:	pop    ebx
  40f544:	jl     0x40f4d1
  40f546:	pop    ebp
  40f547:	adc    BYTE PTR [eax-0x113a9afb],bl
  40f54d:	hlt    
  40f54e:	or     dl,cl
  40f550:	fs adc eax,edi
  40f553:	outs   dx,DWORD PTR ds:[esi]
  40f554:	sub    dh,ah
  40f556:	sti    
  40f557:	and    ecx,esi
  40f559:	xor    BYTE PTR [ecx+0x219d580e],0xdf
  40f560:	sub    eax,edi
  40f562:	push   ds
  40f563:	mov    ds:0x9ad716bb,eax
  40f568:	mov    ch,BYTE PTR [edx-0x54]
  40f56b:	inc    esp
  40f56c:	xchg   ebp,eax
  40f56d:	mov    fs,WORD PTR [edi+0x75d869ee]
  40f573:	xor    cl,BYTE PTR [esi-0x195ec8c7]
  40f579:	test   eax,0x6b8b7868
  40f57e:	shr    BYTE PTR [ecx-0x11daed0c],0x72
  40f585:	jno    0x40f569
  40f587:	(bad)  
  40f588:	mov    bl,0xd
  40f58a:	adc    dh,BYTE PTR [esi-0x20]
  40f58d:	lock sti 
  40f58f:	xchg   esi,eax
  40f590:	in     al,0x34
  40f592:	fstp   DWORD PTR [ecx+ebx*4]
  40f595:	loopne 0x40f5f4
  40f597:	mov    eax,ds:0x9ff80e18
  40f59c:	(bad)  
  40f59d:	xor    DWORD PTR [esi+0x2f225995],esp
  40f5a3:	iret   
  40f5a4:	cdq    
  40f5a5:	mov    bh,0xad
  40f5a7:	in     eax,0x42
  40f5a9:	hlt    
  40f5aa:	or     ch,BYTE PTR [eax]
  40f5ac:	cmp    DWORD PTR [ecx+ecx*8],0xffffffee
  40f5b0:	std    
  40f5b1:	dec    edx
  40f5b2:	sti    
  40f5b3:	jl     0x40f5e8
  40f5b5:	imul   esp,esi,0xb59c5ad
  40f5bb:	into   
  40f5bc:	gs push esi
  40f5bf:	sub    eax,0x6fd42c50
  40f5c4:	adc    al,0xd8
  40f5c6:	int    0x4a
  40f5c8:	scas   al,BYTE PTR es:[edi]
  40f5c9:	lods   al,BYTE PTR ds:[esi]
  40f5ca:	pop    es
  40f5cb:	jae    0x40f62f
  40f5cd:	cwde   
  40f5ce:	jge    0x40f5df
  40f5d0:	push   esp
  40f5d1:	or     ebp,DWORD PTR [edx-0x1c]
  40f5d4:	test   dh,dl
  40f5d6:	jmp    0x2ab6:0x85b777bc
  40f5dd:	dec    ebp
  40f5de:	adc    DWORD PTR [eax],edi
  40f5e0:	cmp    DWORD PTR [edi+0xede51b9],edi
  40f5e6:	pop    esi
  40f5e7:	pushf  
  40f5e8:	shl    esp,1
  40f5ea:	aam    0x59
  40f5ec:	dec    ebx
  40f5ed:	js     0x40f5f7
  40f5ef:	stc    
  40f5f0:	lea    ecx,[ebx+0xa995ede]
  40f5f6:	shl    BYTE PTR [ecx],1
  40f5f8:	popf   
  40f5f9:	test   al,0xef
  40f5fb:	enter  0xec7c,0x2e
  40f5ff:	fisttp WORD PTR [edi]
  40f601:	cmp    DWORD PTR [edx-0x17126170],0x4a1a95ed
  40f60b:	xchg   ebp,eax
  40f60c:	test   cl,0x1b
  40f60f:	shl    DWORD PTR [ecx-0x3],0x88
  40f613:	out    0x95,eax
  40f615:	test   DWORD PTR [esi-0x33e01b6c],edi
  40f61b:	out    0x7f,al
  40f61d:	jl     0x40f5b1
  40f61f:	(bad)  
  40f620:	push   edi
  40f621:	push   eax
  40f622:	bound  ecx,QWORD PTR [ebp-0x7550db12]
  40f628:	(bad)
  40f62b:	sbb    ebp,esi
  40f62d:	and    bh,bh
  40f62f:	mov    bl,0x7f
  40f631:	enter  0x67d3,0x81
  40f635:	(bad)  
  40f636:	xchg   ebp,eax
  40f637:	pop    ebp
  40f638:	gs out dx,al
  40f63a:	add    al,0x44
  40f63c:	and    BYTE PTR [esi-0x30],cl
  40f63f:	int    0x62
  40f641:	imul   edx,edx,0xe8e38401
  40f647:	clc    
  40f648:	pop    es
  40f649:	jmp    0x331a:0x66b0272e
  40f650:	cli    
  40f651:	or     al,0x81
  40f653:	jg     0x40f5f2
  40f655:	fwait
  40f656:	inc    ebp
  40f657:	jmp    0xb7cf3233
  40f65c:	or     al,0x79
  40f65e:	dec    eax
  40f65f:	fsubr  DWORD PTR [esi-0x3]
  40f662:	stos   DWORD PTR es:[edi],eax
  40f663:	stos   DWORD PTR es:[edi],eax
  40f664:	lahf   
  40f665:	out    0x81,eax
  40f667:	loope  0x40f633
  40f669:	mov    bh,0x76
  40f66b:	add    ebp,DWORD PTR [edx+edx*1+0x1075ab1a]
  40f672:	test   eax,0xa160322e
  40f677:	mov    ch,0xf7
  40f679:	inc    esp
  40f67a:	loope  0x40f6e2
  40f67c:	inc    ecx
  40f67d:	sub    BYTE PTR [ebp+0x205e3835],ah
  40f683:	and    DWORD PTR [edx+ebp*1+0x68e3a048],esp
  40f68a:	add    edx,DWORD PTR [edx+edi*8]
  40f68d:	jge    0x40f624
  40f68f:	call   0x235d4d46
  40f694:	jbe    0x40f64c
  40f696:	icebp  
  40f697:	sub    ebx,ecx
  40f699:	jmp    0x9e66:0xc4b1999a
  40f6a0:	into   
  40f6a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6a2:	fiadd  WORD PTR [edx]
  40f6a4:	lods   al,BYTE PTR ds:[esi]
  40f6a5:	test   DWORD PTR [eax],edx
  40f6a7:	shl    BYTE PTR [eax-0x70],cl
  40f6aa:	jl     0x40f696
  40f6ac:	dec    ebp
  40f6ad:	mov    dh,0xc
  40f6af:	inc    ecx
  40f6b0:	lahf   
  40f6b1:	dec    esi
  40f6b2:	int    0x82
  40f6b4:	adc    ebx,edi
  40f6b6:	ja     0x40f6cb
  40f6b8:	pop    ebx
  40f6b9:	sub    eax,0x91eaa66c
  40f6be:	test   al,0x63
  40f6c0:	jle    0x40f6b2
  40f6c2:	adc    BYTE PTR [edi+ebx*4-0x3],dl
  40f6c6:	pop    esi
  40f6c7:	scas   eax,DWORD PTR es:[edi]
  40f6c8:	sub    esp,DWORD PTR [ebp+0x4e]
  40f6cb:	mov    esi,0x72a75e8d
  40f6d0:	cmp    DWORD PTR [esi+0x4b91fb4c],ecx
  40f6d6:	in     al,dx
  40f6d7:	bswap  edx
  40f6d9:	neg    BYTE PTR [eax+0x32]
  40f6dc:	or     al,0x8f
  40f6de:	js     0x40f6cc
  40f6e0:	mov    dl,0xeb
  40f6e2:	adc    al,0x7f
  40f6e4:	cdq    
  40f6e5:	les    ebx,FWORD PTR [edi+esi*1+0xd]
  40f6e9:	add    al,0xb1
  40f6eb:	cmp    DWORD PTR [eax-0x135dca2d],esi
  40f6f1:	adc    al,BYTE PTR [eax-0x4e]
  40f6f4:	inc    ebx
  40f6f5:	push   0xce7d1b1d
  40f6fa:	mov    cl,0xf4
  40f6fc:	retf   0x6ce9
  40f6ff:	pop    edx
  40f700:	ins    DWORD PTR es:[edi],dx
  40f701:	les    esp,FWORD PTR [edx+0x26]
  40f704:	jle    0x40f74d
  40f706:	data16 jle 0x40f69f
  40f709:	sbb    ch,dl
  40f70b:	jae    0x40f785
  40f70d:	jp     0x40f769
  40f70f:	push   0x49
  40f711:	adc    BYTE PTR [esi],cl
  40f713:	ss gs loopne 0x40f777
  40f717:	repz inc esp
  40f719:	or     BYTE PTR [eax+eiz*8],0x69
  40f71d:	push   esi
  40f71e:	mov    ch,0xfd
  40f720:	fmulp  st(6),st
  40f722:	push   esi
  40f723:	scas   al,BYTE PTR es:[edi]
  40f724:	call   0x9cabe1db
  40f729:	mov    eax,0x88454add
  40f72e:	(bad)  
  40f72f:	push   ebx
  40f730:	inc    eax
  40f731:	mov    ah,0xce
  40f733:	(bad)  
  40f734:	and    al,0x21
  40f736:	scas   eax,DWORD PTR es:[edi]
  40f737:	sbb    DWORD PTR [ecx-0xaaaeec4],esi
  40f73d:	cmp    al,0xc7
  40f73f:	shr    DWORD PTR [ebx+0x5b],cl
  40f742:	rol    DWORD PTR [edi-0xe68d91f],cl
  40f748:	or     dl,cl
  40f74a:	dec    eax
  40f74b:	jns    0x40f744
  40f74d:	jle    0x40f790
  40f74f:	dec    ecx
  40f750:	cmp    BYTE PTR [ebp+0x71b3f71c],dl
  40f756:	mov    edx,0xf51141c0
  40f75b:	lds    esp,FWORD PTR [eax]
  40f75d:	xlat   BYTE PTR ds:[ebx]
  40f75e:	cli    
  40f75f:	or     cl,BYTE PTR [edx]
  40f761:	xor    BYTE PTR [esi],al
  40f763:	test   eax,0x7e75023b
  40f768:	xchg   edx,eax
  40f769:	adc    al,0xd7
  40f76b:	sbb    eax,0x487ff52b
  40f770:	mov    al,ds:0x5e662cd0
  40f775:	adc    DWORD PTR [ecx],ecx
  40f777:	test   eax,0x98025b79
  40f77c:	mov    BYTE PTR [ebx],cl
  40f77e:	mov    cl,0x23
  40f780:	out    0x11,eax
  40f782:	rcl    BYTE PTR [edi-0x29],0x15
  40f786:	(bad)  
  40f787:	out    dx,al
  40f788:	jne    0x40f716
  40f78a:	jo     0x40f793
  40f78c:	paddsw mm7,QWORD PTR [ecx-0x43536eee]
  40f793:	stc    
  40f794:	xchg   DWORD PTR [ebp+0x23],edi
  40f797:	sahf   
  40f798:	mov    cl,0xc7
  40f79a:	or     ah,cl
  40f79c:	adc    BYTE PTR [ecx+0x53],ch
  40f79f:	lods   eax,DWORD PTR ds:[esi]
  40f7a0:	mov    cl,0xf1
  40f7a2:	loopne 0x40f7c3
  40f7a4:	ins    BYTE PTR es:[edi],dx
  40f7a5:	out    0x35,eax
  40f7a7:	mov    DWORD PTR [edi+0x273521d5],edx
  40f7ad:	push   es
  40f7ae:	cmp    ah,BYTE PTR [ecx]
  40f7b0:	mov    ebp,DWORD PTR [ebp-0x6e7f6139]
  40f7b6:	retf   0x1e5d
  40f7b9:	xor    dh,BYTE PTR [edx-0xd]
  40f7bc:	pop    es
  40f7bd:	xchg   edx,eax
  40f7be:	gs pop edi
  40f7c0:	ret    
  40f7c1:	aam    0x69
  40f7c3:	xchg   esi,eax
  40f7c4:	mov    eax,ds:0x3275ec34
  40f7c9:	push   edx
  40f7ca:	out    0x59,eax
  40f7cc:	imul   bh
  40f7ce:	mov    dh,0xd1
  40f7d0:	mov    al,ds:0xf7072013
  40f7d5:	jecxz  0x40f840
  40f7d7:	mov    BYTE PTR [eax],ah
  40f7d9:	int    0xb8
  40f7db:	fwait
  40f7dc:	cmovge ecx,esi
  40f7df:	retf   
  40f7e0:	out    dx,al
  40f7e1:	jno    0x40f7e5
  40f7e3:	inc    ebx
  40f7e4:	js     0x40f85e
  40f7e6:	ja     0x40f780
  40f7e8:	add    DWORD PTR [edx+0x65],edx
  40f7eb:	fucomp st(3)
  40f7ed:	imul   ebp,DWORD PTR [ecx-0x13],0xa631a639
  40f7f4:	imul   esp,DWORD PTR [eax+0x6a],0x1e
  40f7f8:	out    dx,eax
  40f7f9:	loopne 0x40f7a3
  40f7fb:	aas    
  40f7fc:	inc    BYTE PTR [edi+0x4017fe01]
  40f802:	mov    cl,0xbd
  40f804:	adc    BYTE PTR [ebp-0x4645fbf6],0xc2
  40f80b:	push   esp
  40f80c:	out    dx,al
  40f80d:	mov    eax,DWORD PTR [ecx]
  40f80f:	ds xchg esp,eax
  40f811:	shl    BYTE PTR ds:0x20381a5d,1
  40f817:	xchg   edi,eax
  40f818:	or     edi,edx
  40f81a:	cmp    ah,dh
  40f81c:	aaa    
  40f81d:	aad    0x74
  40f81f:	add    eax,0x22f024f9
  40f824:	retf   
  40f825:	inc    ecx
  40f826:	data16 scas al,BYTE PTR es:[edi]
  40f828:	iret   
  40f829:	push   es
  40f82a:	scas   al,BYTE PTR es:[edi]
  40f82b:	cld    
  40f82c:	dec    eax
  40f82d:	leave  
  40f82e:	jl     0x40f86c
  40f830:	jle    0x40f7ca
  40f832:	sti    
  40f833:	xchg   BYTE PTR [edi-0x6d],al
  40f836:	or     BYTE PTR [edi-0x5b],dh
  40f839:	pushf  
  40f83a:	inc    esi
  40f83b:	mov    ebp,0xd8749379
  40f840:	xchg   ecx,eax
  40f841:	jo     0x40f815
  40f843:	mov    edi,edi
  40f845:	cmp    bh,dl
  40f847:	scas   al,BYTE PTR es:[edi]
  40f848:	sub    al,0x6b
  40f84a:	or     bh,BYTE PTR [ebx+0x2087ab04]
  40f850:	jns    0x40f809
  40f852:	ja     0x40f861
  40f854:	or     dl,ah
  40f856:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f857:	pop    ebx
  40f858:	or     DWORD PTR [eax-0x22],0x5466af0b
  40f85f:	or     edx,DWORD PTR [edi+0x4625bc78]
  40f865:	test   al,0xe5
  40f867:	sub    edx,DWORD PTR ds:0xc4e6a789
  40f86d:	push   ebp
  40f86e:	scas   al,BYTE PTR es:[edi]
  40f86f:	retf   0x40d6
  40f872:	pop    es
  40f873:	(bad)  
  40f874:	mov    ecx,0xa9df5d02
  40f879:	sahf   
  40f87a:	outs   dx,BYTE PTR ds:[esi]
  40f87b:	inc    eax
  40f87c:	out    dx,eax
  40f87d:	pop    edx
  40f87e:	popf   
  40f87f:	fdivr  st,st(1)
  40f881:	shl    BYTE PTR [eax*1-0x2437a335],cl
  40f888:	iret   
  40f889:	into   
  40f88a:	enter  0x4383,0x23
  40f88e:	mul    edx
  40f890:	dec    ecx
  40f891:	xor    BYTE PTR [edx+edx*4],bl
  40f894:	rcl    DWORD PTR [edi],cl
  40f896:	loope  0x40f867
  40f898:	mov    BYTE PTR [edx],bh
  40f89a:	jbe    0x40f84e
  40f89c:	fyl2x  
  40f89e:	out    dx,al
  40f89f:	rol    DWORD PTR [ecx+0x1e],cl
  40f8a2:	xor    esi,eax
  40f8a4:	push   0xffffffd9
  40f8a6:	and    esp,DWORD PTR [ebx+0xf]
  40f8a9:	(bad)  
  40f8aa:	mov    dh,0x2d
  40f8ac:	cmp    bh,BYTE PTR [esi-0x7e8a7546]
  40f8b2:	adc    cl,ch
  40f8b4:	mov    edi,0xf8479dbc
  40f8b9:	jmp    0x24d2:0xef033fd1
  40f8c0:	mov    ebx,0x523d4d69
  40f8c5:	sub    dl,BYTE PTR [esp+eax*2+0x6b7448db]
  40f8cc:	sub    ecx,DWORD PTR [edx+ecx*1+0x3095d361]
  40f8d3:	arpl   WORD PTR [eax],si
  40f8d5:	lahf   
  40f8d6:	ds ins BYTE PTR es:[edi],dx
  40f8d8:	mov    ch,0x77
  40f8da:	pusha  
  40f8db:	test   BYTE PTR [esi+edx*4-0xf8e5687],dl
  40f8e2:	inc    ebx
  40f8e3:	or     DWORD PTR [eax-0x70],edi
  40f8e6:	lods   al,BYTE PTR ds:[esi]
  40f8e7:	or     eax,0xb0a58c2e
  40f8ec:	hlt    
  40f8ed:	fidivr WORD PTR ds:0xb8faaf88
  40f8f3:	lahf   
  40f8f4:	mov    ebx,0x68942fa9
  40f8f9:	push   ss
  40f8fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8fb:	sub    BYTE PTR [esi+0x3c],dh
  40f8fe:	popf   
  40f8ff:	sub    al,0x8a
  40f901:	mov    ebp,0x5d5fd9e7
  40f906:	jmp    0x15633273
  40f90b:	ss and eax,0x9f222eed
  40f911:	out    dx,al
  40f912:	and    eax,0xd3005b22
  40f917:	pop    ecx
  40f918:	adc    al,bh
  40f91a:	xor    al,0x20
  40f91c:	pop    ebx
  40f91d:	popa   
  40f91e:	(bad)  
  40f91f:	mov    eax,0x9d0a30b9
  40f924:	test   al,0xa2
  40f926:	pushf  
  40f927:	pushf  
  40f928:	pop    es
  40f929:	inc    sp
  40f92b:	js     0x40f91f
  40f92d:	ins    DWORD PTR es:[edi],dx
  40f92e:	mov    ds:0xa5112bb8,al
  40f933:	popf   
  40f934:	dec    esi
  40f935:	imul   esp,eax,0x1401b16c
  40f93b:	jb     0x40f918
  40f93d:	or     ch,BYTE PTR [eax+0x557f7161]
  40f943:	mov    ch,0x93
  40f945:	and    ecx,DWORD PTR [ebx+0x23]
  40f948:	and    DWORD PTR [eax-0x55],ecx
  40f94b:	pushf  
  40f94c:	mov    ds:0x266cda37,al
  40f951:	shl    BYTE PTR [edx-0x18],1
  40f954:	dec    eax
  40f955:	pop    ebx
  40f956:	pop    edi
  40f957:	out    0xb5,eax
  40f959:	sub    BYTE PTR [edx],ch
  40f95b:	dec    edx
  40f95c:	popa   
  40f95d:	out    dx,eax
  40f95e:	xor    DWORD PTR [eax-0x330f0c3e],0x4b
  40f965:	push   0x28
  40f967:	push   es
  40f968:	pushaw 
  40f96a:	loope  0x40f8ec
  40f96c:	add    ebx,edi
  40f96e:	clc    
  40f96f:	mov    al,0x7c
  40f971:	call   0xd4c:0x38ec0b38
  40f978:	leave  
  40f979:	js     0x40f9cd
  40f97b:	cld    
  40f97c:	loop   0x40f9b6
  40f97e:	mov    fs,WORD PTR [ebp+0x13]
  40f981:	test   DWORD PTR [eax+0x73],0xe9d5aec6
  40f988:	push   ebx
  40f989:	hlt    
  40f98a:	je     0x40f9ef
  40f98c:	jo     0x40f95d
  40f98e:	(bad)  
  40f98f:	or     eax,0x57aadd8b
  40f994:	retf   0x6916
  40f997:	xchg   ebp,eax
  40f998:	xor    eax,0x8af4e61f
  40f99d:	jg     0x40fa0c
  40f99f:	ja     0x40f92f
  40f9a1:	les    esp,FWORD PTR [eax]
  40f9a3:	in     al,0x9d
  40f9a5:	pop    esp
  40f9a6:	test   DWORD PTR [esp+ecx*8-0x7f],esi
  40f9aa:	mov    ebp,0x12e13c90
  40f9af:	test   BYTE PTR [edx+0x31],al
  40f9b2:	jnp    0x40f9b4
  40f9b4:	mov    al,ds:0xc42b6191
  40f9b9:	fidiv  DWORD PTR [ebx-0x1680a259]
  40f9bf:	sub    DWORD PTR [ebx+0x0],0x34
  40f9c3:	cdq    
  40f9c4:	dec    ecx
  40f9c5:	mov    al,0x30
  40f9c7:	and    edi,DWORD PTR [ebp+0x17]
  40f9ca:	xor    BYTE PTR [ebp+ecx*4-0x10983157],ah
  40f9d1:	mov    bl,BYTE PTR [ebx+0x6ad360bc]
  40f9d7:	das    
  40f9d8:	mov    ah,0xd1
  40f9da:	addr16 aad 0xee
  40f9dd:	addr16 mov dh,0xab
  40f9e0:	and    ecx,ebp
  40f9e2:	pop    edx
  40f9e3:	mov    eax,0xea644e21
  40f9e8:	and    ch,BYTE PTR [ebx+0x2]
  40f9eb:	push   ecx
  40f9ec:	pop    esi
  40f9ed:	cmp    dl,BYTE PTR [edi]
  40f9ef:	sbb    ecx,DWORD PTR [edx+edi*2+0x76]
  40f9f3:	mov    ebx,esp
  40f9f5:	int3   
  40f9f6:	cmp    DWORD PTR [ecx],ebp
  40f9f8:	xchg   BYTE PTR [ebp+0x2dcd6e00],ch
  40f9fe:	adc    ch,BYTE PTR fs:[edi]
  40fa01:	jns    0x40fa35
  40fa03:	add    eax,0x6db19d60
  40fa08:	ja     0x40f9cf
  40fa0a:	mov    esp,0xd26ff276
  40fa0f:	gs sub al,0xf8
  40fa12:	test   BYTE PTR [eax-0x79e1304d],ch
  40fa18:	or     eax,0xabc55cf6
  40fa1d:	data16 jl 0x40f9eb
  40fa20:	mov    ah,0x95
  40fa22:	sub    edi,DWORD PTR [ecx]
  40fa24:	hlt    
  40fa25:	imul   DWORD PTR [esi-0x40]
  40fa28:	xor    eax,0x182753b
  40fa2d:	dec    eax
  40fa2e:	and    eax,0x587bfc0e
  40fa33:	add    bh,bl
  40fa35:	out    dx,eax
  40fa36:	lea    edi,[ecx+0x33]
  40fa39:	data16 ins BYTE PTR es:[edi],dx
  40fa3b:	sub    DWORD PTR [esi*2-0x3db3813a],0xffffffc3
  40fa43:	xor    bh,BYTE PTR [edx-0x45]
  40fa46:	ret    0xee13
  40fa49:	mov    edi,0xf5a5ddfe
  40fa4e:	xor    bl,BYTE PTR [ebp-0x1f]
  40fa51:	(bad)  
  40fa54:	unpcklps xmm6,xmm7
  40fa57:	mov    BYTE PTR [ecx-0x6d9d72ee],al
  40fa5d:	enter  0x3c3d,0xe
  40fa61:	(bad)  
  40fa63:	push   edx
  40fa64:	adc    al,0x98
  40fa66:	(bad)  
  40fa68:	add    al,0x5f
  40fa6a:	inc    ebp
  40fa6b:	dec    esp
  40fa6c:	imul   edx,DWORD PTR [edx+0x4e]
  40fa70:	jb     0x40fa15
  40fa72:	js     0x40fabc
  40fa74:	fistp  DWORD PTR [edi-0x1d]
  40fa77:	sub    BYTE PTR [esi-0x154302b5],ah
  40fa7d:	add    DWORD PTR [esi+0x73],eax
  40fa80:	(bad)
  40fa83:	jp     0x40fa1b
  40fa85:	pop    ds
  40fa86:	in     eax,0x33
  40fa88:	pushf  
  40fa89:	rcr    BYTE PTR fs:[esi-0x7e],cl
  40fa8d:	add    ah,dh
  40fa8f:	dec    edx
  40fa90:	mov    al,0x3
  40fa92:	sbb    eax,0x7855ce57
  40fa97:	rcl    BYTE PTR [ecx],cl
  40fa99:	les    eax,FWORD PTR [eax]
  40fa9b:	aam    0xe6
  40fa9d:	or     ebp,edx
  40fa9f:	add    esp,DWORD PTR [esi+0x4fbbecbc]
  40faa5:	or     al,0x75
  40faa7:	mov    dl,0x7f
  40faa9:	fist   WORD PTR [esi+0x78]
  40faac:	add    edx,DWORD PTR [ebx]
  40faae:	ja     0x40fae1
  40fab0:	hlt    
  40fab1:	aad    0x85
  40fab3:	stc    
  40fab4:	dec    esi
  40fab5:	xlat   BYTE PTR ds:[ebx]
  40fab6:	pop    es
  40fab7:	dec    esi
  40fab8:	add    eax,0x51d6a94b
  40fabd:	mov    al,ds:0x88a91bba
  40fac2:	adc    esp,DWORD PTR [eax+edx*8]
  40fac5:	xrelease xchg BYTE PTR [ebx+eax*8-0x53ed5f0b],dh
  40facd:	dec    edx
  40face:	sub    ebp,DWORD PTR [edx]
  40fad0:	mov    ah,0xdf
  40fad2:	adc    DWORD PTR [ebx+ecx*8-0x68],esi
  40fad6:	jno    0x40fa87
  40fad8:	inc    ecx
  40fad9:	or     esi,ebx
  40fadb:	jne    0x40fa94
  40fadd:	inc    ecx
  40fade:	gs ja  0x40fa92
  40fae1:	mov    bh,0x6b
  40fae3:	mov    WORD PTR [esp+eax*4],?
  40fae6:	setno  bl
  40fae9:	pop    eax
  40faea:	and    esi,edi
  40faec:	test   eax,0xdfa995e5
  40faf1:	sti    
  40faf2:	sbb    al,0x72
  40faf4:	mov    dl,0x84
  40faf6:	or     BYTE PTR [edi+ebx*4],0xc4
  40fafa:	repz sub eax,esi
  40fafd:	xlat   BYTE PTR cs:[ebx]
  40faff:	shl    edx,1
  40fb01:	jge    0x40fb66
  40fb03:	xor    esi,ebp
  40fb05:	xchg   edx,eax
  40fb06:	sbb    al,0x59
  40fb08:	call   0xcd75:0x6d72434e
  40fb0f:	cdq    
  40fb10:	pop    ds
  40fb11:	leave  
  40fb12:	pop    esi
  40fb13:	aad    0xfa
  40fb15:	cld    
  40fb16:	inc    DWORD PTR [esi]
  40fb18:	sub    eax,edx
  40fb1a:	and    DWORD PTR [ecx-0x73d78d25],0x2b
  40fb21:	int3   
  40fb22:	ficomp WORD PTR [eax-0x6ed35d57]
  40fb28:	popf   
  40fb29:	mov    edi,esp
  40fb2b:	gs push ecx
  40fb2d:	push   0xc89a3426
  40fb32:	mov    bl,0xf3
  40fb34:	xchg   DWORD PTR [edi-0x42],ebx
  40fb37:	pop    esp
  40fb38:	pop    ds
  40fb39:	mov    ?,WORD PTR [eax]
  40fb3b:	xor    BYTE PTR [ebp-0x4a],bl
  40fb3e:	xor    cl,BYTE PTR [eax-0x3c]
  40fb41:	adc    ah,bh
  40fb43:	cmp    al,0x60
  40fb45:	aam    0x9f
  40fb47:	push   esi
  40fb48:	call   0xfac8fb20
  40fb4d:	pop    ebp
  40fb4e:	sahf   
  40fb4f:	test   BYTE PTR [ebx+0x1c4d4c38],al
  40fb55:	arpl   di,di
  40fb57:	dec    edi
  40fb58:	lahf   
  40fb59:	xchg   ecx,eax
  40fb5a:	cmc    
  40fb5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb5c:	jg     0x40fb42
  40fb5e:	add    DWORD PTR [ebx],ebp
  40fb60:	inc    edi
  40fb61:	mov    DWORD PTR [ebx-0x419d0f6d],edi
  40fb67:	push   edx
  40fb68:	inc    esi
  40fb69:	popf   
  40fb6a:	inc    ebx
  40fb6c:	push   0x72eb22d7
  40fb71:	andnps xmm6,xmm0
  40fb74:	stos   BYTE PTR es:[edi],al
  40fb75:	stos   DWORD PTR es:[edi],eax
  40fb76:	mov    ds:0x29e8e0d8,al
  40fb7b:	popf   
  40fb7c:	in     eax,dx
  40fb7d:	inc    esi
  40fb7e:	arpl   bx,bp
  40fb80:	xchg   DWORD PTR [esi+0x7c7a5527],ecx
  40fb86:	mov    ds:0x5959afb1,al
  40fb8b:	sub    edi,0x67b1fdb0
  40fb91:	jg     0x40fba3
  40fb93:	mov    ecx,0xa77faefd
  40fb98:	inc    ebp
  40fb99:	jne    0x40fba2
  40fb9b:	add    BYTE PTR [ecx+edx*1+0x7b],ah
  40fb9f:	adc    BYTE PTR [eax-0x78],bl
  40fba2:	cmc    
  40fba3:	test   eax,0xd371e575
  40fba8:	xchg   esp,eax
  40fba9:	mov    ds:0x658c9fbe,al
  40fbae:	scas   eax,DWORD PTR es:[edi]
  40fbaf:	rcl    BYTE PTR [ecx],0xfe
  40fbb2:	mov    ds:0xa855503b,al
  40fbb7:	ds or  ch,ah
  40fbba:	and    BYTE PTR [ecx+0x45f14bed],ch
  40fbc0:	push   0xac4a3e67
  40fbc5:	out    dx,al
  40fbc6:	add    ah,bl
  40fbc8:	repz (bad) es:[eax+0x6a]
  40fbcd:	pop    ebp
  40fbce:	mov    dl,0xb3
  40fbd0:	xchg   edx,eax
  40fbd1:	push   eax
  40fbd2:	lods   eax,DWORD PTR ds:[esi]
  40fbd3:	jno    0x40fc08
  40fbd5:	retf   0xa1f9
  40fbd8:	xchg   edi,eax
  40fbd9:	sbb    eax,0x2a1b973b
  40fbde:	repz enter 0xe925,0xf0
  40fbe3:	cdq    
  40fbe4:	ficomp WORD PTR [edi-0x25b9acb0]
  40fbea:	scas   al,BYTE PTR es:[edi]
  40fbeb:	lahf   
  40fbec:	pop    edi
  40fbed:	ret    0x408e
  40fbf0:	mov    al,0x79
  40fbf2:	mov    eax,ds:0xc5427280
  40fbf7:	and    ecx,DWORD PTR [eax]
  40fbf9:	push   0xa905aff5
  40fbfe:	xchg   DWORD PTR [ebp+0x71],esi
  40fc01:	xchg   esi,eax
  40fc02:	sub    bl,BYTE PTR [esi+0x29]
  40fc05:	mov    eax,ds:0xd19d6866
  40fc0a:	loopne 0x40fbf6
  40fc0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc0d:	jbe    0x40fc7e
  40fc0f:	mov    ds:0x92ead500,eax
  40fc14:	xchg   ebx,eax
  40fc15:	mov    al,ds:0xe0c2bfa2
  40fc1a:	pop    esi
  40fc1b:	dec    esp
  40fc1c:	retf   
  40fc1d:	sub    bh,ch
  40fc1f:	in     eax,0x96
  40fc21:	jp     0x40fbf9
  40fc23:	das    
  40fc24:	test   BYTE PTR [ecx-0xd011881],bh
  40fc2a:	add    cl,ah
  40fc2c:	and    al,0xf8
  40fc2e:	cmp    BYTE PTR [eax-0x6e],dl
  40fc31:	je     0x40fc0f
  40fc33:	(bad)  
  40fc34:	mov    ds:0x645d703e,al
  40fc39:	or     bh,BYTE PTR [esi+0x37cdaa9]
  40fc3f:	into   
  40fc40:	in     al,0xfb
  40fc42:	mov    esi,0xd24d29ca
  40fc47:	pop    ebx
  40fc48:	cmp    esp,DWORD PTR [esi+edi*8-0x23]
  40fc4c:	jge    0x40fcb7
  40fc4e:	dec    esi
  40fc4f:	stos   BYTE PTR es:[edi],al
  40fc50:	mov    edx,0x6f8aa290
  40fc55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc56:	xor    eax,0x7272285f
  40fc5b:	jae    0x40fc13
  40fc5d:	iret   
  40fc5e:	mov    al,ds:0xe40b014c
  40fc63:	ins    DWORD PTR es:[edi],dx
  40fc64:	jae    0x40fcb8
  40fc66:	(bad)  
  40fc68:	mov    ch,0x3a
  40fc6a:	mov    dh,0x31
  40fc6c:	jbe    0x40fcd5
  40fc6e:	enter  0x20a1,0xa8
  40fc72:	(bad)  
  40fc73:	scas   eax,DWORD PTR es:[edi]
  40fc74:	mov    bh,bh
  40fc76:	ffree  st(3)
  40fc78:	stos   BYTE PTR es:[edi],al
  40fc79:	cmp    al,dh
  40fc7b:	addr16 popa 
  40fc7d:	dec    eax
  40fc7e:	rcl    bl,1
  40fc80:	out    dx,al
  40fc81:	mov    esi,0xe5133b5e
  40fc86:	pusha  
  40fc87:	mov    bh,0x5b
  40fc8a:	or     ah,BYTE PTR ds:0xc869c8c4
  40fc90:	mov    bl,BYTE PTR [edx]
  40fc92:	enter  0x1948,0xcd
  40fc96:	inc    ebp
  40fc97:	das    
  40fc98:	adc    BYTE PTR [edx+0x228c66cd],cl
  40fc9e:	dec    edi
  40fc9f:	inc    edi
  40fca0:	add    al,0x42
  40fca2:	mov    dl,0x5c
  40fca4:	and    BYTE PTR [ecx-0x3d12ed48],ch
  40fcaa:	call   0xe7a7:0x6fdc5e7b
  40fcb1:	sbb    ebp,DWORD PTR [edi+0x4d]
  40fcb4:	xor    ebp,ebx
  40fcb6:	push   ss
  40fcb7:	pop    ds
  40fcb8:	daa    
  40fcb9:	and    al,0x72
  40fcbb:	push   0xffffffcf
  40fcbd:	int3   
  40fcbe:	adc    edx,edi
  40fcc0:	int3   
  40fcc1:	pop    esi
  40fcc2:	xchg   edi,eax
  40fcc3:	neg    al
  40fcc5:	imul   eax,DWORD PTR [edx-0x7d],0xaa490501
  40fccc:	retf   0x15af
  40fccf:	or     ah,bl
  40fcd1:	push   edx
  40fcd2:	scas   al,BYTE PTR es:[edi]
  40fcd3:	cmp    BYTE PTR [eax-0x58],ch
  40fcd6:	(bad)  
  40fcd7:	out    0x48,al
  40fcd9:	hlt    
  40fcda:	test   eax,0x9b7feeea
  40fcdf:	daa    
  40fce0:	mov    eax,0x68d4d1d5
  40fce5:	ss addr16 push ecx
  40fce8:	lock push 0xffffffcc
  40fceb:	rcl    BYTE PTR [ebx],1
  40fced:	test   BYTE PTR [edx+eiz*2-0x4b0ca112],ch
  40fcf4:	in     eax,0xc9
  40fcf6:	dec    edx
  40fcf7:	popf   
  40fcf8:	fs cdq 
  40fcfa:	lahf   
  40fcfb:	stos   WORD PTR es:[edi],ax
  40fcfd:	jbe    0x40fce9
  40fcff:	push   ss
  40fd00:	gs pop esi
  40fd02:	ins    BYTE PTR es:[edi],dx
  40fd03:	ins    BYTE PTR es:[edi],dx
  40fd04:	mov    edi,0xac268ac2
  40fd09:	push   esp
  40fd0a:	shr    DWORD PTR [edi],1
  40fd0c:	fwait
  40fd0d:	dec    esi
  40fd0e:	or     al,0x70
  40fd10:	repz mov bl,0x67
  40fd13:	clc    
  40fd14:	and    BYTE PTR [eax],bh
  40fd16:	or     DWORD PTR [ebx-0x1a],edi
  40fd19:	nop
  40fd1a:	pop    esp
  40fd1b:	sub    BYTE PTR [eax+0x29],bl
  40fd1e:	xor    al,0x17
  40fd20:	clc    
  40fd21:	(bad)  
  40fd22:	pop    ds
  40fd23:	cmp    BYTE PTR ds:0xf4c7b37f,0x8d
  40fd2a:	pop    bx
  40fd2c:	stos   BYTE PTR es:[edi],al
  40fd2d:	bound  esi,QWORD PTR [ecx+0x69]
  40fd30:	js     0x40fd04
  40fd32:	leave  
  40fd33:	scas   al,BYTE PTR es:[edi]
  40fd34:	hlt    
  40fd35:	cld    
  40fd36:	retf   0x8fe3
  40fd39:	mov    ah,0xf0
  40fd3b:	cmc    
  40fd3c:	shr    DWORD PTR [edx+0x2e],1
  40fd3f:	push   edi
  40fd40:	mov    ds:0x48b8dda6,al
  40fd45:	mov    eax,ds:0x34b24ae0
  40fd4a:	and    cl,dh
  40fd4c:	mov    edi,0xe938054e
  40fd51:	test   eax,0x2ec613a1
  40fd56:	dec    edx
  40fd57:	loop   0x40fd61
  40fd59:	add    eax,0xea314770
  40fd5e:	call   0xc449b07b
  40fd63:	cmc    
  40fd64:	shl    al,1
  40fd66:	push   ebp
  40fd67:	add    edx,DWORD PTR [ebp-0xdd04ce]
  40fd6d:	jmp    0x128d:0x4a1a407
  40fd74:	add    al,BYTE PTR ds:0xb63af2ee
  40fd7a:	xchg   edx,eax
  40fd7b:	sbb    al,0x35
  40fd7d:	push   0x77aa652c
  40fd82:	jle    0x40fd1b
  40fd84:	leave  
  40fd85:	stos   BYTE PTR es:[edi],al
  40fd86:	call   0x66a545cc
  40fd8b:	in     al,dx
  40fd8c:	mov    bh,0xc5
  40fd8e:	mov    es,WORD PTR [eax+0x767867cb]
  40fd94:	sbb    al,ah
  40fd96:	mov    bh,0xb9
  40fd98:	jp     0x40fd32
  40fd9a:	and    DWORD PTR [ecx+0x5df9ad75],esp
  40fda0:	pop    esp
  40fda1:	aaa    
  40fda2:	aam    0x4c
  40fda4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fda5:	cli    
  40fda6:	test   eax,0x38172e
  40fdab:	xchg   esp,eax
  40fdac:	stc    
  40fdad:	or     BYTE PTR [edx-0x1d0dd05f],cl
  40fdb3:	stc    
  40fdb4:	sbb    DWORD PTR [esi],esi
  40fdb6:	ja     0x40fe03
  40fdb8:	pop    ebp
  40fdb9:	(bad)
  40fdbc:	int    0x49
  40fdbe:	and    BYTE PTR [esi-0x378e338],cl
  40fdc4:	dec    esp
  40fdc5:	test   eax,0x387933de
  40fdca:	clc    
  40fdcb:	stos   BYTE PTR es:[edi],al
  40fdcc:	in     al,dx
  40fdcd:	sar    DWORD PTR [edi+0x14],cl
  40fdd0:	xor    BYTE PTR [eax-0x4c49d3],ch
  40fdd6:	sbb    DWORD PTR [eax+ecx*4-0x23],ecx
  40fdda:	mov    ebx,0x3f2e4323
  40fddf:	imul   esp,DWORD PTR [edx-0x6cc844a7],0xffffff80
  40fde6:	cwd    
  40fde8:	mov    ebp,0x25ee5979
  40fded:	xchg   esi,esi
  40fdef:	(bad)  
  40fdf0:	jmp    0x4a903244
  40fdf5:	cwde   
  40fdf6:	push   cs
  40fdf7:	pop    edx
  40fdf8:	ins    DWORD PTR es:[edi],dx
  40fdf9:	inc    esi
  40fdfa:	and    eax,0x4d53855c
  40fdff:	cmc    
  40fe00:	or     BYTE PTR [ebx],dh
  40fe02:	scas   al,BYTE PTR es:[edi]
  40fe03:	nop
  40fe04:	rcl    DWORD PTR [edi+0x4cb5c1cb],1
  40fe0a:	inc    eax
  40fe0b:	inc    ebp
  40fe0c:	shl    DWORD PTR [ebp-0x1a75db1f],cl
  40fe12:	xchg   ebx,eax
  40fe13:	jns    0x40fe73
  40fe15:	xor    eax,0x1a5b5bb5
  40fe1a:	mov    eax,ds:0x2471eb58
  40fe1f:	xchg   ebp,eax
  40fe20:	and    BYTE PTR [ebp+edx*2+0x5f],ah
  40fe24:	and    BYTE PTR [edx],al
  40fe26:	jbe    0x40fdf9
  40fe28:	xchg   ebp,eax
  40fe29:	mov    DWORD PTR [esi+0x21f91f8d],esi
  40fe2f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40fe31:	(bad)  
  40fe32:	jl     0x40fe8e
  40fe34:	pop    ecx
  40fe35:	fld    DWORD PTR [ecx]
  40fe37:	xlat   BYTE PTR ds:[ebx]
  40fe38:	mov    ah,0xf9
  40fe3a:	sbb    eax,0x7b027ce2
  40fe3f:	das    
  40fe40:	aam    0xe3
  40fe42:	scas   eax,DWORD PTR es:[edi]
  40fe43:	sbb    al,BYTE PTR [ecx-0x5957bcc9]
  40fe49:	or     DWORD PTR [edx+ecx*2-0x54],edx
  40fe4d:	dec    esi
  40fe4e:	push   edx
  40fe4f:	stos   BYTE PTR es:[edi],al
  40fe50:	pusha  
  40fe51:	cmp    ecx,esp
  40fe53:	jb     0x40fdec
  40fe55:	jmp    0x40fdd9
  40fe57:	or     eax,0x22da4476
  40fe5c:	pop    esi
  40fe5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe5e:	xor    bh,BYTE PTR [eax+0xf]
  40fe61:	and    dh,BYTE PTR [edi+0x7f]
  40fe64:	add    al,0x52
  40fe66:	and    eax,DWORD PTR [edx+0x1e]
  40fe69:	jb     0x40fdfa
  40fe6b:	pushf  
  40fe6c:	loope  0x40fec2
  40fe6e:	rcr    BYTE PTR [edx-0x4c],1
  40fe71:	push   ebp
  40fe72:	push   0xfffffffd
  40fe74:	mov    ebx,0xba1bb2be
  40fe79:	aas    
  40fe7a:	aam    0xd2
  40fe7c:	sbb    eax,0xee36ac09
  40fe81:	xor    ebp,DWORD PTR fs:[eax]
  40fe84:	jno    0x40fe64
  40fe86:	add    eax,0xdda49449
  40fe8b:	enter  0xd558,0x19
  40fe8f:	out    dx,al
  40fe90:	jbe    0x40fe46
  40fe92:	sbb    al,BYTE PTR [si+0x25]
  40fe96:	xlat   BYTE PTR ds:[ebx]
  40fe97:	xchg   edi,eax
  40fe98:	xchg   esp,eax
  40fe99:	out    dx,eax
  40fe9a:	pop    es
  40fe9b:	icebp  
  40fe9c:	adc    al,0x7c
  40fe9e:	imul   DWORD PTR [edx]
  40fea0:	add    eax,0x5dfa3535
  40fea5:	pop    eax
  40fea6:	xchg   edx,eax
  40fea7:	pop    ebp
  40fea8:	lock loope 0x40fe69
  40feab:	dec    ecx
  40fead:	mov    esp,0xd3bd00f1
  40feb2:	das    
  40feb3:	sbb    cl,ah
  40feb5:	or     al,0xcc
  40feb7:	dec    esi
  40feb8:	mov    edi,0x9f0517ab
  40febd:	adc    DWORD PTR [edi-0x4f28f47c],ebx
  40fec3:	in     al,dx
  40fec4:	outs   dx,DWORD PTR ds:[esi]
  40fec5:	xchg   ebp,eax
  40fec6:	(bad)  [eax-0x4f]
  40fec9:	shl    dh,cl
  40fecb:	addr16 jo 0x40fee8
  40fece:	jecxz  0x40fea3
  40fed0:	sub    ch,ch
  40fed2:	adc    ecx,DWORD PTR [edx]
  40fed4:	xor    al,0x7b
  40fed6:	mov    ecx,DWORD PTR [ebx]
  40fed8:	shl    DWORD PTR [ebx],1
  40feda:	fsubr  QWORD PTR [edx]
  40fedc:	nop
  40fedd:	test   eax,0x985f39f
  40fee2:	aas    
  40fee3:	jns    0x40feb2
  40fee5:	or     BYTE PTR [ecx],bh
  40fee7:	and    edx,DWORD PTR [ecx-0x10]
  40feea:	push   eax
  40feeb:	push   ss
  40feec:	mov    ebp,0x70981825
  40fef1:	add    eax,DWORD PTR [ecx]
  40fef3:	hlt    
  40fef4:	push   edi
  40fef5:	fwait
  40fef6:	xlat   BYTE PTR ds:[ebx]
  40fef7:	adc    al,0x71
  40fef9:	imul   ebp,DWORD PTR [ebx+edi*4-0x21],0xffffffd2
  40fefe:	bound  esp,QWORD PTR [ecx]
  40ff00:	mov    ah,0x18
  40ff02:	sub    edi,DWORD PTR [edi-0x5aa805b6]
  40ff08:	push   esp
  40ff09:	xor    eax,0xe15bca63
  40ff0e:	mov    bh,0x74
  40ff10:	fwait
  40ff11:	mov    dh,0xd5
  40ff13:	and    edx,esp
  40ff15:	aam    0xee
  40ff17:	push   esp
  40ff18:	scas   al,BYTE PTR es:[edi]
  40ff19:	ins    BYTE PTR es:[edi],dx
  40ff1a:	cwde   
  40ff1b:	in     al,0xad
  40ff1d:	int    0x9b
  40ff1f:	sar    DWORD PTR [esi+0x58],1
  40ff22:	pushf  
  40ff23:	lods   eax,DWORD PTR ds:[esi]
  40ff24:	aaa    
  40ff25:	ins    BYTE PTR es:[edi],dx
  40ff26:	push   eax
  40ff27:	test   eax,0xa910fcef
  40ff2c:	adc    eax,0x67c3a3f1
  40ff31:	cmp    edi,ecx
  40ff33:	into   
  40ff34:	int    0x50
  40ff36:	jl     0x40ff2d
  40ff38:	sbb    DWORD PTR [ebx],ebx
  40ff3a:	call   DWORD PTR [edx+0x71]
  40ff3d:	icebp  
  40ff3e:	mov    al,0xdf
  40ff40:	ja     0x40ff77
  40ff42:	mov    bh,0x3b
  40ff44:	mov    DWORD PTR [esi+0x75df217e],ebp
  40ff4a:	xor    eax,0xdfa0f175
  40ff4f:	jp     0x40feea
  40ff51:	std    
  40ff52:	xlat   BYTE PTR ds:[ebx]
  40ff53:	mov    ds:0xb7cb8d8f,eax
  40ff58:	test   al,0x78
  40ff5a:	int    0xb9
  40ff5c:	jmp    0x40fef8
  40ff5e:	call   0xa26bffe
  40ff63:	push   cs
  40ff64:	inc    ecx
  40ff65:	mov    edi,0x52325bdb
  40ff6a:	xchg   BYTE PTR [eax-0x12],al
  40ff6d:	sar    DWORD PTR [ebp+eiz*1-0x5a7e4820],0x54
  40ff75:	sahf   
  40ff76:	into   
  40ff77:	jl     0x40ff4b
  40ff79:	outs   dx,DWORD PTR ds:[esi]
  40ff7a:	daa    
  40ff7b:	retf   0xb256
  40ff7e:	adc    eax,DWORD PTR [edx+0x15]
  40ff81:	mov    al,ds:0x196fca5d
  40ff86:	mov    edx,0x26fae338
  40ff8b:	pop    ecx
  40ff8c:	jnp    0x40ff2c
  40ff8e:	mov    eax,0x96c358a9
  40ff93:	mov    ecx,0x9e2b87f3
  40ff98:	outs   dx,BYTE PTR ds:[esi]
  40ff99:	cmp    ebx,ebp
  40ff9b:	scas   al,BYTE PTR es:[edi]
  40ff9c:	or     ecx,DWORD PTR [edi+0x18f3b4ed]
  40ffa2:	xor    BYTE PTR [esp+esi*4+0x76b84869],al
  40ffa9:	loop   0x40ff54
  40ffab:	add    BYTE PTR [ebx+0x2f18389f],bl
  40ffb1:	sub    edi,0xffffffe8
  40ffb4:	pushf  
  40ffb5:	xchg   DWORD PTR [ebp+0x590e0ca2],edi
  40ffbb:	sub    esp,eax
  40ffbd:	mov    ecx,DWORD PTR [edi-0x32]
  40ffc0:	adc    eax,0xff34bbe8
  40ffc5:	fst    DWORD PTR [ebp+eax*8-0x4640d49e]
  40ffcc:	outs   dx,DWORD PTR ds:[esi]
  40ffcd:	outs   dx,BYTE PTR ds:[esi]
  40ffce:	xchg   esi,eax
  40ffcf:	inc    ebp
  40ffd0:	mov    eax,ds:0x91a74783
  40ffd5:	icebp  
  40ffd6:	cmc    
  40ffd7:	popf   
  40ffd8:	mov    esi,0xb14ba380
  40ffdd:	aad    0x1b
  40ffdf:	fsubr  QWORD PTR [esi+eax*2-0x28c25b70]
  40ffe6:	stos   BYTE PTR es:[edi],al
  40ffe7:	push   cs
  40ffe8:	into   
  40ffe9:	aam    0x48
  40ffeb:	lea    ecx,[eax+0x29]
  40ffee:	pushf  
  40ffef:	call   0x1c9d0cc7
  40fff4:	aas    
  40fff5:	pop    ebp
  40fff6:	adc    eax,0x1f6cb0c8
  40fffb:	mov    ch,0x1a
  40fffd:	rcr    BYTE PTR [edi-0x7f07a3e3],0xcd
  410004:	retf   0x65d6
  410007:	and    eax,0x62da2395
  41000c:	fs (bad) 
  41000f:	cmp    bh,BYTE PTR [eax]
  410011:	push   ds
  410012:	push   esp
  410013:	dec    esp
  410014:	test   eax,0x80d542ee
  410019:	inc    edx
  41001a:	mov    edx,0x781f7fcf
  41001f:	fs pop eax
  410021:	ja     0x40fff6
  410023:	retf   
  410024:	gs ds mov esi,0xe1e96e16
  41002b:	leave  
  41002c:	rcl    cl,1
  41002e:	sub    ax,WORD PTR [ebx+0x36edfe74]
  410035:	sub    esi,edi
  410037:	sub    dl,BYTE PTR [ecx+0x23]
  41003a:	inc    DWORD PTR [ecx]
  41003c:	in     al,0x6a
  41003e:	adc    eax,0x3f1c9a2
  410043:	xchg   edi,eax
  410044:	aam    0xa4
  410046:	xor    eax,0x257f2dc
  41004b:	mov    ds:0xf0926f44,eax
  410050:	mov    cl,0x1c
  410052:	loope  0x410059
  410054:	push   ss
  410055:	dec    ebx
  410056:	aad    0xb2
  410058:	aas    
  410059:	sti    
  41005a:	mov    al,ds:0xd1f121aa
  41005f:	mov    DWORD PTR [eax+ebx*4-0x33],esp
  410063:	sbb    BYTE PTR [ebx],al
  410065:	xchg   edx,eax
  410066:	in     al,dx
  410067:	push   ss
  410068:	pop    ebx
  410069:	loopne 0x410019
  41006b:	cmp    ebp,DWORD PTR [esi]
  41006d:	inc    ebx
  41006e:	mov    al,0x9c
  410070:	mov    edi,0x9389bcd7
  410075:	and    eax,0xa4527533
  41007a:	mov    ch,0x6f
  41007c:	aaa    
  41007d:	or     BYTE PTR [ecx],dh
  41007f:	add    DWORD PTR [esi-0x69],ebx
  410082:	std    
  410083:	inc    ecx
  410084:	xor    dh,BYTE PTR [eax-0x1a]
  410087:	lods   al,BYTE PTR ds:[esi]
  410088:	push   es
  410089:	and    al,0x37
  41008b:	mov    ebp,0x429b0ac8
  410090:	mov    bh,0x6a
  410092:	enter  0x34a8,0x12
  410096:	std    
  410097:	mov    ch,0x7a
  410099:	pop    edi
  41009a:	out    dx,eax
  41009b:	inc    eax
  41009c:	dec    edx
  41009d:	and    dl,bl
  41009f:	sub    edx,esp
  4100a1:	jmp    0x4d9f164a
  4100a6:	jecxz  0x41009a
  4100a8:	cmp    eax,0x40850d4
  4100ad:	pop    ds
  4100ae:	jno    0x4100ef
  4100b0:	jmp    0x410115
  4100b2:	inc    eax
  4100b3:	mov    eax,ds:0x937c2e2
  4100b8:	addr16 mov edi,0xafd90644
  4100be:	pop    ds
  4100bf:	mov    BYTE PTR [ebx],0x5d
  4100c2:	in     al,dx
  4100c3:	mov    WORD PTR [edi],es
  4100c5:	fcmovb st,st(7)
  4100c7:	jge    0x608ab91a
  4100cd:	jmp    0x410112
  4100cf:	retf   0x989f
  4100d2:	test   edx,0x68a8d748
  4100d8:	add    BYTE PTR [edi+eax*1-0x7a7b5728],0x30
  4100e0:	pop    ds
  4100e1:	(bad)  
  4100e2:	cdq    
  4100e3:	fisttp DWORD PTR ds:0x5f988f8a
  4100e9:	jl     0x410151
  4100eb:	fist   WORD PTR [eax+eax*4+0x42ef451b]
  4100f2:	pusha  
  4100f3:	out    dx,al
  4100f4:	dec    esp
  4100f5:	inc    eax
  4100f6:	lds    ecx,FWORD PTR [edi]
  4100f8:	push   es
  4100f9:	imul   ebx,esi,0x8
  4100fc:	inc    ebp
  4100fd:	dec    edx
  4100fe:	test   eax,0x3d2bfd76
  410103:	std    
  410104:	dec    esi
  410105:	pop    esp
  410106:	xor    DWORD PTR [ebx+0x816c291],ebx
  41010c:	sti    
  41010d:	rol    BYTE PTR [edi-0x14],cl
  410110:	sub    eax,DWORD PTR [edi+0x547f8e57]
  410116:	add    DWORD PTR [edi-0x2d],ecx
  410119:	retf   0xd072
  41011c:	mov    dh,0x37
  41011e:	iret   
  41011f:	sub    ch,BYTE PTR [edx]
  410121:	inc    edx
  410122:	sub    BYTE PTR [ebx+0x4a],dl
  410125:	fcomp  QWORD PTR [edx]
  410127:	jge    0x410103
  410129:	ficom  DWORD PTR [ebx-0x1a5dd73]
  41012f:	push   0x44
  410131:	icebp  
  410132:	cmp    al,0x33
  410134:	cld    
  410135:	inc    ebx
  410136:	mov    ebx,0x8aa6aea1
  41013b:	jge    0x410136
  41013d:	fisttp QWORD PTR [esi-0x68]
  410140:	xchg   edx,eax
  410141:	inc    ebp
  410142:	pop    edi
  410143:	mov    ch,0x1d
  410145:	ror    BYTE PTR [edi+0x40],cl
  410148:	sar    BYTE PTR [esi+0x207fa78b],0x4d
  41014f:	sub    cl,bh
  410151:	push   ds
  410152:	push   ebx
  410153:	mov    BYTE PTR [edi],0xb0
  410156:	addr16 dec ebp
  410158:	dec    eax
  410159:	adc    al,0xd2
  41015b:	std    
  41015c:	inc    esp
  41015d:	pop    ds
  41015e:	sub    DWORD PTR [esp+eiz*4-0x6c8aa7a0],edi
  410165:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410167:	sbb    BYTE PTR [edi+ebp*4],ch
  41016a:	jb     0x4100ff
  41016c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41016d:	int3   
  41016e:	lods   al,BYTE PTR ds:[esi]
  41016f:	retf   
  410170:	and    ah,BYTE PTR [edi+eiz*1]
  410173:	push   eax
  410174:	icebp  
  410175:	cmp    DWORD PTR cs:[ebp+0x29],edx
  410179:	fcmovne st,st(4)
  41017b:	mov    ebx,0xe4626494
  410180:	jl     0x4101a3
  410182:	mov    ah,0x75
  410184:	jns    0x41019b
  410186:	or     al,0xa4
  410188:	fmul   QWORD PTR [ebp-0x72]
  41018b:	ret    0xa478
  41018e:	icebp  
  41018f:	es mov edi,0x29033697
  410195:	jge    0x4101b3
  410197:	mov    ebp,0xe385dd87
  41019c:	mov    ch,0x8e
  41019e:	inc    esi
  41019f:	ins    BYTE PTR es:[edi],dx
  4101a0:	add    eax,0xf45a21f0
  4101a5:	xchg   ebp,eax
  4101a6:	pop    es
  4101a7:	pop    ss
  4101a8:	repnz cwde 
  4101aa:	adc    al,0x61
  4101ac:	dec    edi
  4101ad:	mov    al,ds:0xe2de50df
  4101b2:	rol    BYTE PTR [esi-0x12],0x40
  4101b6:	sbb    BYTE PTR [ebp-0x68],dh
  4101b9:	(bad)  
  4101ba:	cmp    al,0xd9
  4101bc:	test   bl,cl
  4101be:	hlt    
  4101bf:	sti    
  4101c0:	inc    ebx
  4101c1:	cmp    eax,0x3675c4ef
  4101c6:	sub    esi,esi
  4101c8:	cwde   
  4101c9:	ss int 0xff
  4101cc:	xor    DWORD PTR [ecx],ecx
  4101ce:	fcomp  QWORD PTR [ebx+0x44a59f48]
  4101d4:	lahf   
  4101d5:	cs (bad) 
  4101d7:	iret   
  4101d8:	out    dx,eax
  4101d9:	mov    bl,0xb0
  4101db:	inc    edi
  4101dc:	and    DWORD PTR ds:[eax],0xffffffa8
  4101e0:	xchg   esi,eax
  4101e1:	(bad)  
  4101e2:	pop    esp
  4101e3:	mov    dh,0x27
  4101e5:	clc    
  4101e6:	push   es
  4101e7:	loope  0x41021d
  4101e9:	fnsave [esp+0x35]
  4101ed:	lea    eax,[edx+0x66]
  4101f0:	push   eax
  4101f1:	aad    0x71
  4101f3:	cmp    BYTE PTR [esi+esi*1-0x5e],0x13
  4101f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101f9:	xor    WORD PTR [ecx+0x56b24712],ax
  410200:	mov    eax,ds:0x54ac6b64
  410205:	cwde   
  410206:	sub    al,0xe7
  410208:	jb     0x4101af
  41020a:	jg     0x41020d
  41020c:	adc    BYTE PTR [eax],0x84
  41020f:	rol    DWORD PTR [edx],1
  410211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410212:	xchg   edx,eax
  410213:	mov    eax,ds:0x5e3839d7
  410218:	(bad)  
  410219:	fidivr WORD PTR [edx+0x512dc759]
  41021f:	jo     0x410284
  410221:	sub    eax,0xd8edf92f
  410226:	pop    edi
  410227:	test   DWORD PTR [ebx],esi
  410229:	lods   al,BYTE PTR ds:[esi]
  41022a:	std    
  41022b:	jno    0x4102a7
  41022d:	not    DWORD PTR [ecx+0x5c]
  410230:	sub    DWORD PTR [ebp+0x6f],edx
  410233:	xor    eax,0x36cf6e64
  410238:	(bad)  
  410239:	xlat   BYTE PTR ds:[ebx]
  41023a:	scas   al,BYTE PTR es:[edi]
  41023b:	adc    cl,BYTE PTR ds:0x366791b2
  410241:	(bad)  
  410242:	sti    
  410243:	repnz (bad) 
  410245:	sub    BYTE PTR [ebx+0x62],al
  410248:	cmp    ecx,ebp
  41024a:	sub    DWORD PTR [ecx+edx*8],edi
  41024d:	xchg   BYTE PTR [eax],ah
  41024f:	sti    
  410250:	cmp    DWORD PTR [ecx],edi
  410252:	pop    edi
  410253:	call   0xc847e89b
  410258:	ins    DWORD PTR es:[edi],dx
  410259:	fmul   DWORD PTR [edx+0x78]
  41025c:	inc    eax
  41025d:	imul   esi,ebx,0x45
  410260:	add    edi,ebp
  410262:	and    eax,0xff63a8eb
  410267:	mov    ebp,DWORD PTR [ecx+ecx*8-0x69d41ecd]
  41026e:	iret   
  41026f:	cwde   
  410270:	imul   eax,DWORD PTR ss:[esi+0xc],0xffffffd4
  410275:	xor    eax,0x30323f43
  41027a:	adc    DWORD PTR ds:0x16a79587,ecx
  410280:	mov    dl,0xd4
  410282:	(bad)  
  410284:	adc    edi,DWORD PTR [edx+0x29]
  410287:	jge    0x4102d3
  410289:	test   DWORD PTR [ebx-0x1d13b2fa],ebx
  41028f:	shl    BYTE PTR [eax+0x69],1
  410292:	sbb    al,0x5b
  410294:	cmp    al,0x50
  410296:	cmc    
  410297:	fwait
  410298:	xor    ah,al
  41029a:	arpl   WORD PTR [edx-0x10],si
  41029d:	retf   
  41029e:	test   al,0xd5
  4102a0:	pop    esi
  4102a1:	sub    BYTE PTR [ebx+0x1dc867de],0xa7
  4102a8:	pop    ecx
  4102a9:	xchg   esi,eax
  4102aa:	pop    eax
  4102ab:	and    eax,DWORD PTR [ebp+0x6d]
  4102ae:	pop    es
  4102af:	psubq  mm5,QWORD PTR [edi]
  4102b2:	ss and eax,0x2b1b71ad
  4102b8:	sub    ecx,DWORD PTR [eax]
  4102ba:	dec    edx
  4102bb:	adc    edx,DWORD PTR [eax]
  4102bd:	call   0x32d2:0x6a8887f7
  4102c4:	sbb    eax,0xb028821e
  4102c9:	dec    edx
  4102ca:	or     BYTE PTR [edx],cl
  4102cc:	dec    ecx
  4102cd:	test   al,0x3a
  4102cf:	mov    ds:0x60163eac,eax
  4102d4:	pop    ebp
  4102d5:	or     ch,0xa1
  4102d8:	test   BYTE PTR [edx+0x59],al
  4102db:	fisubr DWORD PTR [ebx]
  4102dd:	pop    eax
  4102de:	imul   BYTE PTR [ebp+ecx*1-0x47]
  4102e2:	test   DWORD PTR es:[ecx+0x1aa97635],ebp
  4102e9:	or     eax,0x69f9f2f9
  4102ee:	mov    ebp,0x12a6e617
  4102f3:	(bad)  
  4102f4:	(bad)  
  4102f5:	test   al,0xdf
  4102f7:	dec    ebx
  4102f8:	dec    ebp
  4102f9:	pop    edx
  4102fa:	mov    ds:0x42656374,eax
  4102ff:	(bad)  
  410300:	jg     0x4102f4
  410302:	or     DWORD PTR [edx+eax*2],esi
  410305:	push   eax
  410306:	jno    0x410304
  410308:	adc    cl,BYTE PTR [esi+0x34]
  41030b:	loop   0x410340
  41030d:	imul   esp,DWORD PTR [edx+0x34],0xffffffb1
  410311:	ins    DWORD PTR es:[edi],dx
  410312:	mov    ds:0x5f762555,al
  410317:	xchg   edi,eax
  410318:	cs cmp eax,0xcabbb3a5
  41031e:	cmp    al,0xd1
  410320:	or     BYTE PTR [ebx-0xa82bf43],dh
  410326:	adc    BYTE PTR ds:0xd73afab,dl
  41032c:	fnstcw WORD PTR [ebx]
  41032e:	xchg   edx,eax
  41032f:	pop    ds
  410330:	pushf  
  410331:	inc    ebp
  410332:	push   eax
  410333:	fsubr  st(0),st
  410335:	ins    BYTE PTR es:[edi],dx
  410336:	ins    BYTE PTR es:[edi],dx
  410337:	jmp    0xbfe7:0x4663e8e8
  41033e:	fmulp  st(4),st
  410340:	retf   0x47f3
  410343:	test   DWORD PTR [ecx-0x24416b75],ebx
  410349:	sub    al,0xd7
  41034b:	adc    ecx,DWORD PTR [edx-0x26]
  41034e:	retf   
  41034f:	cmp    esp,DWORD PTR [ebx]
  410351:	ds aad 0x14
  410354:	pop    ebx
  410355:	popa   
  410356:	mov    gs,edi
  410358:	les    esp,FWORD PTR [ebx]
  41035a:	mov    edi,0x49ada0eb
  41035f:	push   ebp
  410360:	adc    BYTE PTR [eax+0x59],al
  410363:	push   edx
  410364:	jbe    0x410328
  410366:	rol    DWORD PTR [ebp-0x35],0xe7
  41036a:	mov    ds:0x9a113fe3,al
  41036f:	dec    ebp
  410370:	fidiv  WORD PTR [eax+eiz*2]
  410373:	mov    cl,0x6f
  410375:	(bad)  
  410376:	hlt    
  410377:	pop    edi
  410378:	adc    al,0xcc
  41037a:	jge    0x4103e6
  41037c:	loope  0x4103fb
  41037e:	in     al,0x66
  410380:	enter  0xd092,0x1
  410384:	jae    0x4103ce
  410386:	adc    al,0x30
  410388:	inc    ebp
  410389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41038a:	sub    eax,0xed99dac8
  41038f:	pop    edi
  410390:	cmp    BYTE PTR [edx],bl
  410392:	mov    gs,ecx
  410394:	xor    al,0xcc
  410396:	push   cs
  410397:	push   es
  410398:	mov    BYTE PTR [ebx],ah
  41039a:	dec    esp
  41039b:	xchg   ebx,eax
  41039c:	sub    al,BYTE PTR [esp+eax*4+0x5]
  4103a0:	add    DWORD PTR [eax+0x761a7cf3],0xffffff94
  4103a7:	push   es
  4103a8:	mov    edi,0x8d20ba7b
  4103ad:	xchg   edi,eax
  4103ae:	ds ja  0x410422
  4103b1:	cwde   
  4103b2:	and    al,0xd3
  4103b4:	or     cl,bh
  4103b6:	mov    WORD PTR [esi+esi*2-0x70],?
  4103ba:	mov    WORD PTR [esi-0xcd29a45],gs
  4103c0:	loope  0x4103b3
  4103c2:	sub    eax,0xeb35ca05
  4103c7:	in     al,0x72
  4103c9:	xchg   DWORD PTR [esp+eax*8],ebx
  4103cc:	(bad)  
  4103cd:	sub    cl,BYTE PTR [ebx+0x113781fd]
  4103d3:	mov    al,ds:0x48aa4548
  4103d8:	cmp    DWORD PTR [ebx],edx
  4103da:	xchg   esp,eax
  4103db:	pop    edx
  4103dc:	repz mov ss,WORD PTR [bx+si-0x512f]
  4103e2:	jle    0x410424
  4103e4:	imul   edx,edi,0xec289030
  4103ea:	movsx  eax,WORD PTR [ecx+0xe]
  4103ee:	into   
  4103ef:	cdq    
  4103f0:	cdq    
  4103f1:	fidiv  DWORD PTR [ebx-0x4d]
  4103f4:	lea    esi,[esi-0x40478beb]
  4103fa:	aas    
  4103fb:	sbb    DWORD PTR [edi],esp
  4103fd:	clc    
  4103fe:	push   cs
  4103ff:	xchg   ebx,eax
  410400:	xlat   BYTE PTR ds:[ebx]
  410401:	dec    ecx
  410402:	jge    0x410415
  410404:	daa    
  410405:	adc    eax,DWORD PTR [esi+0x7c]
  410408:	call   0x5219f10e
  41040d:	aas    
  41040e:	sbb    DWORD PTR [ecx+0x29],ebx
  410411:	out    0xff,al
  410413:	retf   
  410414:	mov    esi,0x176b428e
  410419:	pop    ecx
  41041a:	push   cs
  41041b:	inc    ecx
  41041c:	dec    edi
  41041d:	mov    eax,ds:0x9ed925cc
  410422:	mov    ds:0x69ed9853,eax
  410427:	push   ebp
  410428:	dec    edi
  410429:	stos   DWORD PTR es:[edi],eax
  41042a:	jnp    0x41043d
  41042c:	xor    eax,0xb1da9a8c
  410431:	(bad)  
  410432:	mov    bh,0xbf
  410434:	out    0x40,eax
  410436:	enter  0x46b8,0x3d
  41043a:	pop    ebp
  41043b:	dec    esp
  41043c:	or     BYTE PTR [ebp-0x5cc4519c],al
  410442:	or     DWORD PTR [esi-0x70],0x1d
  410446:	sbb    al,0x57
  410448:	aad    0x94
  41044a:	mov    ch,0xf7
  41044c:	mov    edi,0xdc086f51
  410451:	dec    eax
  410452:	sbb    dh,BYTE PTR [ebx]
  410454:	pop    es
  410455:	ins    DWORD PTR es:[edi],dx
  410456:	dec    edx
  410457:	std    
  410458:	jmp    0xe8bc:0x483c455e
  41045f:	or     dl,BYTE PTR ds:0x2e51477c
  410465:	dec    ebp
  410466:	mov    bl,0xc7
  410468:	daa    
  410469:	xchg   esp,eax
  41046a:	mov    eax,ds:0x29c9bdd0
  41046f:	ss iret 
  410471:	(bad)  
  410472:	sub    eax,0xe3e4f2c8
  410477:	inc    eax
  410478:	nop
  410479:	xchg   ebp,eax
  41047a:	push   ebp
  41047b:	pop    ss
  41047c:	cs pop edx
  41047e:	mov    dh,0x6f
  410480:	(bad)  
  410481:	mov    BYTE PTR [ecx-0x1a45891c],ah
  410487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410488:	or     al,0x53
  41048a:	sub    BYTE PTR [esp],0x27
  41048e:	jecxz  0x410422
  410490:	mov    edx,0xea43d9f1
  410495:	xchg   edx,eax
  410496:	cmc    
  410497:	sbb    BYTE PTR [edi-0x37],cl
  41049a:	data16 jecxz 0x4104b6
  41049d:	rcl    DWORD PTR [ecx+0x6e],1
  4104a0:	fsub   QWORD PTR [ebp+edx*8-0x7b]
  4104a4:	bnd jno 0x410524
  4104a7:	mov    ah,0x78
  4104a9:	iret   
  4104aa:	retf   0xf005
  4104ad:	xchg   esi,eax
  4104ae:	ds cld 
  4104b0:	xor    al,0xc4
  4104b2:	and    DWORD PTR ds:0xf1bfc36c,ecx
  4104b8:	adc    dl,0x21
  4104bb:	inc    ebp
  4104bc:	or     BYTE PTR es:[eax],0x7d
  4104c0:	outs   dx,DWORD PTR ds:[esi]
  4104c1:	sub    DWORD PTR [ecx],ecx
  4104c3:	mov    bh,0x34
  4104c5:	add    BYTE PTR [esi-0x77],bl
  4104c8:	(bad)  
  4104c9:	out    0xe0,eax
  4104cb:	stos   BYTE PTR es:[edi],al
  4104cc:	mul    DWORD PTR [ebp-0x38]
  4104cf:	test   DWORD PTR [esi+0x1d],eax
  4104d2:	xchg   ecx,eax
  4104d3:	gs cmp cl,dh
  4104d6:	adc    al,0xda
  4104d8:	xor    cl,dl
  4104da:	mov    eax,0x7372d30c
  4104df:	inc    edx
  4104e0:	(bad)  
  4104e1:	mov    dl,0x26
  4104e3:	dec    esp
  4104e4:	push   0x531936cd
  4104e9:	sub    dh,ah
  4104eb:	inc    edx
  4104ec:	pushf  
  4104ed:	hlt    
  4104ee:	scas   al,BYTE PTR es:[edi]
  4104ef:	pop    esp
  4104f0:	aaa    
  4104f1:	xlat   BYTE PTR ds:[ebx]
  4104f2:	mov    ch,0xcd
  4104f4:	add    DWORD PTR [eax+0x35],edi
  4104f7:	cmp    ebp,DWORD PTR [edi+0x67]
  4104fa:	(bad)  
  4104fb:	cld    
  4104fc:	mov    esi,0x3b7f878f
  410501:	nop
  410502:	jns    0x4104ff
  410504:	xchg   ebp,eax
  410505:	aam    0xcb
  410507:	outs   dx,DWORD PTR ds:[esi]
  410508:	test   al,0x24
  41050a:	out    dx,al
  41050b:	ret    
  41050c:	add    ecx,DWORD PTR ds:0xee87ec76
  410512:	nop
  410513:	dec    ebx
  410514:	push   esp
  410515:	call   0x4051:0x786b2491
  41051c:	bound  ebp,QWORD PTR [edx+edx*1+0xc85873e]
  410523:	mov    ds:0xf886efce,eax
  410528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410529:	lock fidiv DWORD PTR [ebx+ecx*4+0x69]
  41052e:	gs std 
  410530:	adc    DWORD PTR [edx+0x58c0c09c],ebp
  410536:	sbb    esp,edx
  410538:	mov    ebx,0xec5ac9d7
  41053d:	pop    ecx
  41053e:	push   es
  41053f:	push   ds
  410540:	mov    ah,0xb1
  410542:	dec    ebx
  410543:	or     esp,edx
  410545:	sti    
  410546:	mov    cl,0xc0
  410548:	mov    cl,0xeb
  41054a:	dec    ebx
  41054b:	jmp    0x4105c3
  41054d:	sub    ebp,eax
  41054f:	and    BYTE PTR [ebx+0x40],dh
  410552:	jl     0x4105a3
  410554:	pop    es
  410555:	xchg   DWORD PTR [edi],edx
  410557:	or     eax,0x9265c3ba
  41055c:	inc    esi
  41055d:	aad    0x5f
  41055f:	push   edi
  410560:	loopne 0x410580
  410562:	mov    ds:0x25681165,eax
  410567:	add    esi,DWORD PTR [ebp+0x30ab105f]
  41056d:	cli    
  41056e:	xlat   BYTE PTR ds:[ebx]
  41056f:	out    dx,al
  410570:	push   edi
  410571:	(bad)  
  410572:	repz inc BYTE PTR [ebp-0x1c]
  410576:	and    edi,DWORD PTR [ebx]
  410578:	add    ah,BYTE PTR [ecx+0x1bd7afd1]
  41057e:	pop    esp
  41057f:	dec    ecx
  410580:	fdivr  QWORD PTR [edx+0x51]
  410583:	xchg   ebp,eax
  410584:	into   
  410585:	int3   
  410586:	cmc    
  410587:	in     eax,0xb9
  410589:	arpl   WORD PTR [edi+edx*4+0x6da96ae7],di
  410590:	das    
  410591:	or     DWORD PTR [edx],ebp
  410593:	pop    esp
  410594:	fmul   QWORD PTR [esi-0x72d26fc4]
  41059a:	ds mov bh,ch
  41059d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41059e:	scas   eax,DWORD PTR es:[edi]
  41059f:	sar    eax,cl
  4105a1:	xchg   BYTE PTR [ecx],dh
  4105a3:	enter  0x3956,0x6f
  4105a7:	xchg   edi,eax
  4105a8:	push   ds
  4105a9:	push   es
  4105aa:	fistp  WORD PTR [eax+0x67ad2632]
  4105b0:	xchg   DWORD PTR [edi+0x63c74f85],edi
  4105b6:	aam    0x65
  4105b8:	and    BYTE PTR [ecx-0x589277e5],al
  4105be:	lock xchg dh,ah
  4105c1:	or     ebp,DWORD PTR [edx+0x6b]
  4105c4:	mov    ch,0x29
  4105c6:	imul   eax,DWORD PTR [eax],0x34
  4105c9:	mov    esp,0x77fa676a
  4105ce:	dec    ecx
  4105cf:	sahf   
  4105d0:	iret   
  4105d1:	adc    cl,0x2b
  4105d4:	push   0x40789d6a
  4105d9:	popa   
  4105da:	dec    edx
  4105db:	outs   dx,BYTE PTR ds:[esi]
  4105dc:	and    ebx,DWORD PTR [edx+0x59]
  4105df:	sti    
  4105e0:	aaa    
  4105e1:	jae    0x4105bf
  4105e3:	je     0x410643
  4105e5:	push   esi
  4105e6:	inc    edx
  4105e7:	jb     0x410639
  4105e9:	sahf   
  4105ea:	neg    DWORD PTR [ecx]
  4105ec:	xchg   esp,eax
  4105ed:	loope  0x410669
  4105ef:	lahf   
  4105f0:	stos   DWORD PTR es:[edi],eax
  4105f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105f2:	lock sahf 
  4105f4:	frstor [ebp+0x290e249]
  4105fa:	and    eax,0x2ee0934b
  4105ff:	(bad)  
  410600:	push   ecx
  410601:	(bad)  [eax+edx*8+0x123dba82]
  410608:	jecxz  0x41062d
  41060a:	sub    BYTE PTR [eax],dl
  41060c:	jge    0x4105b1
  41060e:	mov    dl,0xa5
  410610:	mov    esp,0x37821a64
  410615:	pop    ebp
  410616:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410617:	mov    edi,0x84d21782
  41061c:	jbe    0x41066f
  41061e:	and    dl,ch
  410620:	pop    eax
  410621:	dec    edi
  410622:	dec    edx
  410623:	pop    edx
  410624:	ret    
  410625:	fcmovb st,st(4)
  410627:	mov    ebx,0x4ec6d9b8
  41062c:	loop   0x4105bb
  41062e:	in     al,0x2b
  410630:	cwde   
  410631:	mov    edi,cs
  410633:	cwde   
  410634:	or     bh,BYTE PTR [ebp-0x62]
  410637:	inc    esp
  410638:	mov    dh,0xd0
  41063a:	(bad)  
  41063b:	fldcw  WORD PTR [esi-0x61]
  41063e:	and    eax,0xab3ce347
  410643:	lahf   
  410644:	repz mov al,0xa9
  410647:	or     bh,BYTE PTR [eax+esi*4+0x2e]
  41064b:	push   eax
  41064c:	mov    cl,0xf7
  41064e:	sub    ecx,edx
  410650:	std    
  410651:	add    DWORD PTR [eax],esp
  410653:	cmp    al,0x84
  410655:	daa    
  410656:	mov    ebx,DWORD PTR [eax+esi*4-0x30c80c9f]
  41065d:	sub    edx,ecx
  41065f:	addr16 cs pop edi
  410662:	xor    eax,0x8eb3ae14
  410667:	jb     0x41061c
  410669:	push   ecx
  41066a:	loope  0x410620
  41066c:	nop
  41066d:	dec    BYTE PTR [edi+0x6f]
  410670:	call   0xc22:0xf10138b3
  410677:	(bad)  
  410678:	cld    
  410679:	bound  ebx,QWORD PTR [ebx+0x7f]
  41067c:	mov    ecx,0x6ffe354a
  410681:	adc    eax,0x7d0d52fa
  410686:	cmp    al,0x88
  410688:	jg     0x410641
  41068a:	sar    DWORD PTR [ebp-0x35],0x49
  41068e:	test   BYTE PTR [esi+0x373bcf39],dh
  410694:	cmp    DWORD PTR ds:0xbfdeb0e2,ecx
  41069a:	jge    0x410718
  41069c:	push   eax
  41069d:	fistp  WORD PTR [edx-0x2ba1bbff]
  4106a3:	fld    QWORD PTR [eax]
  4106a5:	mov    edx,0x22de448e
  4106aa:	mov    bh,0xe2
  4106ac:	fcomp  QWORD PTR ds:[ebp+0x77]
  4106b0:	sbb    DWORD PTR [ecx],ecx
  4106b2:	arpl   WORD PTR [ecx],di
  4106b4:	push   edi
  4106b5:	cmp    BYTE PTR [esi-0x60769b36],dh
  4106bb:	repnz aas 
  4106bd:	fsub   st,st(7)
  4106bf:	ins    DWORD PTR es:[edi],dx
  4106c0:	lods   eax,DWORD PTR ds:[esi]
  4106c1:	inc    esp
  4106c2:	ret    
  4106c3:	repz in eax,dx
  4106c5:	pop    eax
  4106c6:	arpl   WORD PTR [ecx+edi*4-0x28342baa],ax
  4106cd:	fild   DWORD PTR [ecx+0x27]
  4106d0:	or     eax,DWORD PTR [ecx]
  4106d2:	loopne 0x410700
  4106d4:	es ins BYTE PTR es:[edi],dx
  4106d6:	jns    0x410716
  4106d8:	ret    
  4106d9:	jmp    0xebfc:0xd0cfdc76
  4106e0:	xchg   ebp,eax
  4106e1:	and    al,0x74
  4106e3:	lahf   
  4106e4:	push   ecx
  4106e5:	jmp    0x4106aa
  4106e7:	mov    esp,0x9ea1560d
  4106ec:	xor    al,0x56
  4106ee:	ret    
  4106ef:	leave  
  4106f0:	inc    ebp
  4106f1:	pop    esi
  4106f2:	dec    ebx
  4106f3:	mov    edi,0x8e9e39f0
  4106f8:	mov    bl,0x1b
  4106fa:	(bad)  
  4106fb:	int    0xff
  4106fd:	mov    bh,0xa
  4106ff:	or     DWORD PTR [ecx],0x4bab343
  410705:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410706:	inc    ecx
  410707:	jge    0x41070a
  410709:	out    dx,eax
  41070a:	adc    BYTE PTR [edx-0x53cf8630],bl
  410710:	cmp    eax,0x709c264
  410715:	cmp    ah,BYTE PTR [ebx]
  410717:	ffreep st(4)
  410719:	sbb    al,0xdb
  41071b:	jp     0x4106d9
  41071d:	jge    0x41070a
  41071f:	sbb    esp,edi
  410721:	shr    eax,cl
  410723:	sbb    DWORD PTR [esi+0x27],ebx
  410726:	or     al,0x22
  410728:	pop    ebx
  410729:	and    eax,ebp
  41072b:	and    BYTE PTR [eax-0x4f],bh
  41072e:	stc    
  41072f:	xchg   DWORD PTR [ecx-0x23],ebx
  410732:	outs   dx,DWORD PTR ds:[esi]
  410733:	sbb    BYTE PTR [ebx],bl
  410735:	mov    edx,0xe8b7cdcc
  41073a:	(bad)  
  41073b:	mov    edx,0xf6b8df27
  410740:	lea    esp,[ebx+ebp*2+0x61]
  410744:	inc    esp
  410745:	and    al,0x7b
  410747:	stc    
  410748:	test   al,0x9a
  41074a:	sbb    eax,0x2acf9b0b
  41074f:	clc    
  410750:	jns    0x410786
  410752:	mov    esi,0xaddff2ef
  410757:	sub    eax,0x88e4175
  41075c:	mov    ds:0xeb71961c,al
  410761:	(bad)  
  410762:	repnz repnz test eax,0xfaa0bff9
  410769:	int    0xa3
  41076b:	pop    ss
  41076c:	pop    edi
  41076d:	addr16 inc esi
  41076f:	cld    
  410770:	jns    0x4107ca
  410772:	jbe    0x4107a7
  410774:	(bad)  [edx+eax*1-0x59]
  410778:	adc    DWORD PTR [edi+0x44],esi
  41077b:	pop    esi
  41077c:	inc    ecx
  41077d:	xor    DWORD PTR [ecx+0x64b8e211],esi
  410783:	dec    ecx
  410784:	mov    eax,DWORD PTR [ecx+ecx*2-0x2984a87c]
  41078b:	cmp    eax,0x603abe7d
  410790:	shl    BYTE PTR [edx+eiz*4],cl
  410793:	iret   
  410794:	jae    0x410809
  410796:	add    DWORD PTR [edx-0x1f],edx
  410799:	ss jae 0x410777
  41079c:	and    al,0x97
  41079e:	xchg   ebp,eax
  41079f:	mov    edx,0xed7c911
  4107a4:	or     eax,0xec27b97b
  4107a9:	mov    ah,BYTE PTR [ebp-0x42]
  4107ac:	pop    es
  4107ad:	(bad)  
  4107af:	leave  
  4107b0:	mov    al,ds:0x9f1339a8
  4107b5:	push   eax
  4107b6:	les    eax,FWORD PTR [ebp-0x39]
  4107b9:	sbb    BYTE PTR [ebp+0x4fb4ba26],0x2e
  4107c0:	pop    esi
  4107c1:	repnz xchg ecx,eax
  4107c3:	addr16 mov dl,0x63
  4107c6:	(bad)  
  4107c8:	clc    
  4107c9:	mov    ds:0xd9067228,al
  4107ce:	pop    edi
  4107cf:	ja     0x410824
  4107d1:	aam    0x23
  4107d3:	pop    bx
  4107d5:	sbb    BYTE PTR [ecx+0x11],ah
  4107d8:	lock and al,0xc7
  4107db:	fimul  WORD PTR [ecx-0x75]
  4107de:	retf   
  4107df:	jmp    0x410792
  4107e1:	in     eax,0x3d
  4107e3:	add    eax,ebp
  4107e5:	sub    dl,0xa1
  4107e8:	outs   dx,DWORD PTR ds:[esi]
  4107e9:	ins    DWORD PTR es:[edi],dx
  4107ea:	xor    ah,0xfd
  4107ed:	cmc    
  4107ee:	add    eax,0x64cfa5b
  4107f3:	pop    eax
  4107f4:	inc    ebx
  4107f5:	inc    eax
  4107f6:	(bad)  
  4107f7:	clc    
  4107f8:	xlat   BYTE PTR ds:[ebx]
  4107f9:	cmc    
  4107fa:	inc    esp
  4107fb:	mov    edi,0x99d584f5
  410800:	mov    edx,0xbfc4c393
  410805:	sbb    al,0x82
  410807:	jne    0x4107e4
  410809:	jmp    0x3397:0x6ac2b719
  410810:	imul   esi,DWORD PTR [ecx+0x11f0e301],0xffffffe9
  410817:	dec    eax
  410818:	add    DWORD PTR [esi+eiz*1],ecx
  41081b:	push   ebx
  41081c:	cmovl  edx,DWORD PTR ds:0x996856e6
  410823:	retf   0xa1aa
  410826:	das    
  410827:	inc    edi
  410828:	cmp    ecx,eax
  41082a:	stc    
  41082b:	in     al,dx
  41082c:	sbb    al,0x8f
  41082e:	cmp    ebp,ecx
  410830:	sub    DWORD PTR ds:0x35151092,ebp
  410836:	ins    DWORD PTR es:[edi],dx
  410837:	add    eax,0xb56fde1e
  41083c:	aas    
  41083d:	xchg   edi,eax
  41083e:	mov    dl,0xa4
  410840:	test   eax,0x72455c73
  410845:	(bad)  
  410846:	xchg   esp,eax
  410847:	and    bl,BYTE PTR [ebp-0x7e]
  41084a:	pushf  
  41084b:	mov    bl,0x78
  41084d:	sbb    eax,0x406537a6
  410852:	imul   DWORD PTR [ebx]
  410854:	inc    esi
  410855:	add    esi,DWORD PTR [eax-0x4e2e52bd]
  41085b:	je     0x4108d0
  41085d:	mov    cl,BYTE PTR [edx+0xf7b16cc]
  410863:	lods   eax,DWORD PTR ds:[esi]
  410864:	inc    esp
  410865:	and    eax,0xa66347c0
  41086a:	fsub   DWORD PTR [ecx]
  41086c:	mov    cl,0x8d
  41086e:	mov    eax,ds:0xc28c758f
  410873:	fsub   DWORD PTR [ebp+ebp*2+0x1ef089e]
  41087a:	or     ecx,esp
  41087c:	ds (bad) 
  41087e:	fdivr  QWORD PTR [ebx]
  410880:	mov    ah,0x58
  410882:	test   eax,0x35216820
  410887:	xlat   BYTE PTR ds:[ebx]
  410888:	inc    esi
  410889:	push   edx
  41088a:	test   al,0xf5
  41088c:	adc    BYTE PTR [eax+0x1d],al
  41088f:	hlt    
  410890:	imul   ebp,esp,0x4b
  410893:	jnp    0x41089a
  410895:	mov    eax,0xb981ddc2
  41089a:	test   BYTE PTR [ebx],cl
  41089c:	std    
  41089d:	nop
  41089e:	and    DWORD PTR [esi+0x7e91c085],eax
  4108a4:	push   esp
  4108a5:	int3   
  4108a6:	push   edi
  4108a7:	(bad)  
  4108a8:	retf   0x4f58
  4108ab:	sbb    al,0x11
  4108ad:	aaa    
  4108ae:	jno    0x4108fa
  4108b0:	dec    ecx
  4108b1:	pop    ebp
  4108b2:	test   dh,cl
  4108b4:	jne    0x410884
  4108b6:	jb     0x410892
  4108b8:	loop   0x4108f6
  4108ba:	xchg   ecx,eax
  4108bb:	push   ds
  4108bc:	push   ds
  4108bd:	or     BYTE PTR [eax-0x64e9b376],0x3e
  4108c4:	dec    esi
  4108c5:	call   0xe740:0x7d6a3c97
  4108cc:	xchg   ch,dh
  4108ce:	xchg   edi,eax
  4108cf:	aam    0x2b
  4108d1:	adc    eax,0xfb464f75
  4108d6:	in     eax,0xa1
  4108d8:	dec    eax
  4108d9:	sbb    ebx,DWORD PTR [ebx-0x5ddef961]
  4108df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108e0:	jae    0x410915
  4108e2:	(bad)  
  4108e3:	jecxz  0x4108d8
  4108e5:	(bad)  
  4108e6:	mov    bh,0xef
  4108e8:	mov    ds:0xaac6b5f4,eax
  4108ed:	fild   WORD PTR [ebp-0x5e]
  4108f0:	(bad)  
  4108f1:	call   0xb4072cc9
  4108f6:	and    ah,BYTE PTR [eax]
  4108f8:	cmp    cl,BYTE PTR [esi]
  4108fa:	pop    esi
  4108fb:	loopne 0x410905
  4108fd:	ret    
  4108fe:	cld    
  4108ff:	mov    eax,0x2e329e0a
  410904:	push   cs
  410905:	std    
  410906:	pop    ds
  410907:	sub    DWORD PTR [edi+0x538c8dce],edx
  41090d:	call   0x86ec7ce1
  410912:	popa   
  410913:	dec    ebx
  410914:	push   cs
  410915:	ins    DWORD PTR es:[edi],dx
  410916:	std    
  410917:	sar    DWORD PTR [eax-0x60ee8045],1
  41091d:	cmp    DWORD PTR [ebp+0x7],esp
  410920:	sahf   
  410921:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410922:	das    
  410923:	call   0x92c3:0xa3a2df17
  41092a:	adc    eax,0xafbaab20
  41092f:	mov    eax,ds:0x145f1f60
  410934:	mov    esi,0x5bc698d9
  410939:	(bad)  
  41093a:	pop    esp
  41093b:	or     ch,ah
  41093d:	jmp    0x4109bd
  41093f:	jle    0x410902
  410941:	outs   dx,DWORD PTR ds:[esi]
  410942:	std    
  410943:	jmp    0x41096e
  410945:	mov    cl,0xbb
  410947:	outs   dx,DWORD PTR ds:[esi]
  410948:	aaa    
  410949:	pop    es
  41094a:	pop    ebx
  41094b:	or     eax,0xb896d423
  410950:	bound  ebp,QWORD PTR fs:[ebx+0x1e921803]
  410957:	dec    ecx
  410958:	(bad)  
  410959:	test   al,0xfc
  41095b:	jmp    0x4108e0
  41095d:	jmp    0x41096c
  41095f:	fs xchg ebp,eax
  410961:	dec    edi
  410962:	dec    ebp
  410963:	sub    al,0x79
  410965:	push   ebp
  410966:	mov    DWORD PTR [edx+0x7cc338bf],edx
  41096c:	xor    al,BYTE PTR [esi+0x1e832a3a]
  410972:	jo     0x4109a1
  410974:	xor    al,0xc7
  410976:	and    al,0x54
  410978:	push   esp
  410979:	push   edx
  41097a:	or     DWORD PTR [ebx+0x20],edx
  41097d:	sbb    BYTE PTR ss:[ebp+0x17f2f899],ah
  410984:	js     0x41094a
  410986:	jbe    0x4109d9
  410988:	mov    BYTE PTR [edi],dl
  41098a:	test   BYTE PTR [ebp-0x279397db],cl
  410990:	dec    esi
  410991:	add    eax,0x9b922ba0
  410996:	je     0x410971
  410998:	ins    DWORD PTR es:[edi],dx
  410999:	fisubr DWORD PTR [eax+0x5fc73860]
  41099f:	push   ds
  4109a0:	lea    esp,[ebp-0x25a1650]
  4109a6:	mov    ebp,0xbc0888e5
  4109ab:	scas   eax,DWORD PTR es:[edi]
  4109ac:	jmp    0xfe8f8691
  4109b1:	outs   dx,BYTE PTR ds:[esi]
  4109b2:	inc    edx
  4109b3:	push   ss
  4109b4:	xchg   esi,eax
  4109b5:	test   al,0x47
  4109b7:	ins    DWORD PTR es:[edi],dx
  4109b8:	jmp    0x410a26
  4109ba:	inc    esp
  4109bb:	jno    0x410a2f
  4109bd:	dec    edx
  4109be:	sbb    eax,DWORD PTR [ebx-0x3e]
  4109c1:	xlat   BYTE PTR ds:[ebx]
  4109c2:	popf   
  4109c3:	aam    0x4f
  4109c5:	jmp    0x410a05
  4109c7:	xor    DWORD PTR [ebp+ebp*4+0x68],0xffffffa3
  4109cc:	xchg   edx,ecx
  4109ce:	sub    ch,ah
  4109d0:	mov    al,ds:0x4fa49720
  4109d5:	jmp    0x1f8f:0xfec115b6
  4109dc:	ficom  DWORD PTR [ebp+0x60c61cc]
  4109e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109e3:	das    
  4109e4:	(bad)  
  4109e5:	mov    esp,0x2f71a1f8
  4109ea:	outs   dx,BYTE PTR ds:[esi]
  4109eb:	mov    edx,0x825f2f01
  4109f0:	and    DWORD PTR [esi],0xe8d4fbf9
  4109f6:	inc    edi
  4109f7:	jmp    0x4109d2
  4109f9:	fist   DWORD PTR [esi]
  4109fb:	mov    edx,0xa36bec4d
  410a00:	sbb    al,0xa5
  410a02:	xchg   bx,ax
  410a04:	lea    ecx,[eax+0x1b]
  410a07:	cdq    
  410a08:	sub    ebx,edx
  410a0a:	cld    
  410a0b:	xchg   ebx,eax
  410a0c:	sub    eax,DWORD PTR [edi+0x55abda9d]
  410a12:	mov    al,ds:0x7883990c
  410a17:	jae    0x4109c4
  410a19:	in     eax,dx
  410a1a:	xlat   BYTE PTR ds:[ebx]
  410a1b:	mov    ebp,0xbcbd1d20
  410a20:	stc    
  410a21:	clc    
  410a22:	adc    cl,BYTE PTR [ebx+0x26328791]
  410a28:	mov    ebx,0x8d3b583f
  410a2d:	sbb    DWORD PTR [ecx+0x6dfd2449],ecx
  410a33:	nop
  410a34:	pop    ds
  410a35:	mov    ds:0x9a77f8a7,al
  410a3a:	lods   eax,DWORD PTR ds:[esi]
  410a3b:	add    DWORD PTR [eax+0x16],ebp
  410a3e:	enter  0xf9fb,0x6
  410a42:	mov    esi,0x9728393e
  410a47:	hlt    
  410a48:	inc    edx
  410a49:	adc    BYTE PTR [edx+ebx*2-0x36],al
  410a4d:	jno    0x410a50
  410a4f:	ja     0x410ac2
  410a51:	sbb    ah,BYTE PTR [ecx-0x6fe9809d]
  410a57:	aam    0x8d
  410a59:	mov    esi,0x2dc3d641
  410a5e:	sti    
  410a5f:	hlt    
  410a60:	push   edi
  410a61:	in     al,dx
  410a62:	cwde   
  410a63:	test   al,0x10
  410a65:	out    dx,eax
  410a66:	xchg   esi,eax
  410a67:	call   esp
  410a69:	push   DWORD PTR [ecx-0x41]
  410a6c:	inc    ebp
  410a6d:	aas    
  410a6e:	pushf  
  410a6f:	dec    edi
  410a70:	sbb    esp,edx
  410a72:	(bad)  
  410a74:	and    al,dh
  410a76:	icebp  
  410a77:	sbb    al,0x69
  410a79:	inc    ecx
  410a7a:	pop    ebp
  410a7b:	mov    esp,0x55e41767
  410a80:	mov    eax,ds:0xe236193d
  410a85:	xlat   BYTE PTR ds:[ebx]
  410a86:	stos   DWORD PTR es:[edi],eax
  410a87:	js     0x410a72
  410a89:	push   es
  410a8a:	lods   eax,DWORD PTR ds:[esi]
  410a8b:	scas   al,BYTE PTR es:[edi]
  410a8c:	mov    bl,0x1f
  410a8e:	pop    esi
  410a90:	lods   eax,DWORD PTR ds:[esi]
  410a91:	xor    al,0x10
  410a93:	jno    0x410b10
  410a95:	shl    BYTE PTR [ebp+0x14],1
  410a98:	lods   eax,DWORD PTR ds:[esi]
  410a99:	mov    ebx,0x3abf4751
  410a9e:	and    al,BYTE PTR [ebx+edi*4]
  410aa1:	sbb    esp,eax
  410aa3:	inc    eax
  410aa4:	push   ebp
  410aa5:	dec    edi
  410aa6:	icebp  
  410aa7:	xchg   edi,eax
  410aa8:	sbb    cl,bl
  410aaa:	mov    eax,ds:0x33d9c1c8
  410aaf:	bnd jle 0x410af3
  410ab2:	xor    eax,0x5292514b
  410ab7:	loopne 0x410ac3
  410ab9:	mov    eax,ds:0xac919dbc
  410abe:	xchg   esp,eax
  410abf:	fcom   DWORD PTR [edx+0x40]
  410ac2:	or     al,0x63
  410ac4:	dec    esp
  410ac5:	pop    esp
  410ac6:	xlat   BYTE PTR ds:[ebx]
  410ac7:	out    0xde,eax
  410ac9:	add    eax,0x3a61c689
  410ace:	and    DWORD PTR [ebp+0xe],ebx
  410ad1:	or     al,cl
  410ad3:	data16 sub cl,BYTE PTR [ebx-0x1f]
  410ad7:	loop   0x410a71
  410ad9:	test   al,0x91
  410adb:	pop    ebx
  410adc:	in     al,0x1f
  410ade:	int    0x2c
  410ae0:	push   0xd5b9fff8
  410ae5:	out    0xbc,eax
  410ae7:	mov    esp,0xaafc6c2
  410aec:	cmp    al,0xd1
  410aee:	mov    ecx,0xd6e12e2e
  410af3:	pop    ebx
  410af4:	aaa    
  410af5:	add    eax,0x4dd92d42
  410afa:	icebp  
  410afb:	cmc    
  410afc:	pushf  
  410afd:	leave  
  410afe:	dec    ebx
  410aff:	rcl    bh,1
  410b01:	mov    edx,DWORD PTR [edx+0x6ce0624b]
  410b07:	in     al,0x4b
  410b09:	add    edx,DWORD PTR [ecx+edi*1+0x1409b752]
  410b10:	xchg   ebp,eax
  410b11:	adc    dh,BYTE PTR [eax]
  410b13:	sub    eax,0x25c101
  410b18:	(bad)  
  410b19:	xchg   esi,eax
  410b1a:	shl    BYTE PTR [edi],cl
  410b1c:	xor    edx,DWORD PTR [esp+edi*8+0x1]
  410b20:	sub    edi,DWORD PTR [ebx]
  410b22:	mov    fs,esp
  410b24:	ss or  al,0xa6
  410b27:	data16 jl 0x410b52
  410b2a:	jge    0x410ae7
  410b2c:	sbb    eax,0xaae4a981
  410b31:	stos   DWORD PTR es:[edi],eax
  410b32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b33:	repnz and DWORD PTR [ebx+0x58],edx
  410b37:	sub    eax,DWORD PTR [bp+0x152c]
  410b3c:	cmp    al,0x87
  410b3e:	clc    
  410b3f:	jge    0x410ae3
  410b41:	mov    esi,0x1e614f85
  410b46:	sbb    ch,bl
  410b48:	jns    0x410acf
  410b4a:	push   esp
  410b4b:	int    0xff
  410b4d:	pop    eax
  410b4e:	sub    DWORD PTR [ebp-0x3f],ebp
  410b51:	fs sub al,0x6d
  410b54:	(bad)  
  410b56:	ins    DWORD PTR es:[edi],dx
  410b57:	sbb    BYTE PTR [ebp+0x54979eb7],cl
  410b5d:	dec    esp
  410b5e:	jge    0x410b6a
  410b60:	pop    ss
  410b61:	dec    edi
  410b62:	inc    esp
  410b63:	aas    
  410b64:	mov    al,ds:0x735486e7
  410b69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b6a:	sub    al,0x87
  410b6c:	fimul  WORD PTR ds:0xd3c64076
  410b72:	ficom  DWORD PTR [edx+esi*2-0x13]
  410b76:	enter  0x2f48,0xdd
  410b7a:	ins    BYTE PTR es:[edi],dx
  410b7b:	lock fisubr WORD PTR [eax+0x633bb9fc]
  410b82:	jmp    0x65cf:0x3176b337
  410b89:	cmc    
  410b8a:	stos   DWORD PTR es:[edi],eax
  410b8b:	icebp  
  410b8c:	data16 and bh,BYTE PTR [edi+0x36e466c4]
  410b93:	fwait
  410b94:	jnp    0x410ba4
  410b96:	outs   dx,DWORD PTR ds:[esi]
  410b97:	jmp    0x1af77d22
  410b9c:	outs   dx,BYTE PTR ds:[esi]
  410b9d:	adc    BYTE PTR [eax],al
  410b9f:	jge    0x410baa
  410ba1:	in     eax,dx
  410ba2:	iret   
  410ba3:	idiv   DWORD PTR [ebx+0x75]
  410ba6:	mov    edx,0xe581e4f3
  410bab:	bound  esi,QWORD PTR [edx+0x3a]
  410bae:	mov    ds:0x79375159,eax
  410bb3:	pop    ecx
  410bb4:	xchg   ecx,eax
  410bb5:	xor    esi,DWORD PTR [ecx-0x6352246]
  410bbb:	adc    eax,0x3213bbfe
  410bc0:	jmp    0x410bde
  410bc2:	cli    
  410bc3:	addr16 aam 0x2e
  410bc6:	mov    esi,0x478df774
  410bcb:	shl    al,0x12
  410bce:	xchg   esp,eax
  410bcf:	xor    DWORD PTR ds:0x1a853ce8,0xbbda36bb
  410bd9:	pop    esp
  410bda:	vmovhpd xmm6,xmm2,QWORD PTR [ebx+0x3]
  410bdf:	mov    ch,0xb1
  410be1:	test   DWORD PTR gs:0x5e731d6e,edi
  410be8:	mov    eax,ds:0x876ca531
  410bed:	inc    ebp
  410bee:	mov    ecx,0x502d1a76
  410bf3:	xchg   ebx,eax
  410bf4:	or     dh,BYTE PTR [ecx]
  410bf6:	xchg   DWORD PTR [edi],esp
  410bf8:	xor    eax,0xb109c9f3
  410bfd:	test   DWORD PTR [eax-0x694f7bb9],edi
  410c03:	fist   DWORD PTR [eax+0x2c9d10d6]
  410c09:	leave  
  410c0a:	push   0x33f56b7a
  410c0f:	xchg   ebp,eax
  410c10:	pop    esp
  410c11:	es inc ebp
  410c13:	pop    edi
  410c14:	aaa    
  410c15:	dec    edi
  410c16:	sbb    eax,0xe14a6e53
  410c1b:	push   ebx
  410c1c:	pop    ecx
  410c1d:	adc    eax,0x7ffc2ad0
  410c22:	push   cs
  410c23:	aad    0xaf
  410c25:	mov    esp,0x13c2713e
  410c2a:	xchg   ebp,eax
  410c2b:	das    
  410c2c:	add    DWORD PTR [edi-0x39802fb2],ebx
  410c32:	inc    esi
  410c33:	xor    ebx,esp
  410c35:	(bad)  
  410c37:	inc    esp
  410c38:	lods   eax,DWORD PTR ds:[esi]
  410c39:	push   0xa323d21a
  410c3e:	push   ebp
  410c3f:	pop    ds
  410c40:	sbb    BYTE PTR ds:0xa3869f25,0xfd
  410c47:	call   0x1d7c5996
  410c4c:	out    0x37,eax
  410c4e:	fisub  DWORD PTR [ebx]
  410c50:	jge    0x410cd1
  410c52:	cmc    
  410c53:	or     eax,0xbbf7b6a8
  410c58:	jmp    0x410c16
  410c5a:	aad    0xce
  410c5c:	sbb    BYTE PTR ds:0xab76ec55,0x8d
  410c63:	lds    ecx,FWORD PTR [ecx-0x3859a637]
  410c69:	in     al,0x8
  410c6b:	sahf   
  410c6c:	outs   dx,DWORD PTR ds:[esi]
  410c6d:	clc    
  410c6e:	sbb    DWORD PTR [ebx+0x4f90c1f6],ebx
  410c74:	jl     0x410c92
  410c76:	(bad)  
  410c77:	jp     0x410ce1
  410c79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c7a:	sti    
  410c7b:	jbe    0x410c06
  410c7d:	in     al,dx
  410c7e:	jb     0x410c1d
  410c80:	mov    dl,0xc8
  410c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c83:	cmp    esi,DWORD PTR [ebx+0x513a7f00]
  410c89:	mov    eax,0x2eb9dfc5
  410c8e:	xchg   edi,eax
  410c8f:	outs   dx,BYTE PTR ds:[esi]
  410c90:	mov    cs,WORD PTR [ecx-0x46]
  410c93:	sub    BYTE PTR [edi-0x10],ah
  410c96:	inc    ebx
  410c97:	inc    ebp
  410c98:	or     ah,dh
  410c9a:	mov    al,ds:0xec44fd70
  410c9f:	test   al,0xa0
  410ca1:	pop    ss
  410ca2:	add    eax,0xfd19b3a2
  410ca7:	lods   al,BYTE PTR ds:[esi]
  410ca8:	push   edi
  410ca9:	mov    edi,0xf6ad47e8
  410cae:	mov    eax,ds:0x80b8753
  410cb3:	add    dl,BYTE PTR [edi+0x3a]
  410cb6:	mov    bh,0x2
  410cb8:	loope  0x410c80
  410cba:	sbb    eax,0x3b558ff0
  410cbf:	inc    eax
  410cc0:	mov    edx,0x530bf0bb
  410cc5:	aad    0x5a
  410cc7:	adc    BYTE PTR [ecx+esi*2],0xc7
  410ccb:	inc    edi
  410ccc:	jne    0x410c6e
  410cce:	in     eax,0x16
  410cd0:	(bad)  
  410cd1:	jecxz  0x410cb4
  410cd3:	or     eax,0x8132be21
  410cd8:	jle    0x410c8e
  410cda:	pushf  
  410cdb:	cmp    BYTE PTR [ecx+ebp*2+0x14cdd95b],ah
  410ce2:	int3   
  410ce3:	pop    esp
  410ce4:	jo     0x410c70
  410ce6:	cdq    
  410ce7:	repz and DWORD PTR [ebx+edx*2],eax
  410ceb:	jmp    0xcea5:0x5841adc5
  410cf2:	fabs   
  410cf4:	xchg   esp,eax
  410cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf7:	mov    edx,0x2bda7120
  410cfc:	or     DWORD PTR [esp+ebp*1-0x49],0xffffff93
  410d01:	je     0x410cb4
  410d03:	add    eax,0x53ecbefb
  410d08:	out    dx,al
  410d09:	sahf   
  410d0a:	lock pop esp
  410d0c:	addr16 xchg ebx,eax
  410d0e:	jb     0x410caf
  410d10:	loope  0x410c9f
  410d12:	sbb    cl,ch
  410d14:	mov    eax,0x8620ad0e
  410d19:	lock sbb esi,eax
  410d1c:	jbe    0x410cb2
  410d1e:	cld    
  410d1f:	pop    ds
  410d20:	ret    0x30c2
  410d23:	out    0x2b,eax
  410d25:	push   ebx
  410d26:	adc    DWORD PTR [ebx+0x7856c7e3],ebx
  410d2c:	push   esp
  410d2d:	or     esi,DWORD PTR fs:[edx-0x7a]
  410d31:	xor    esp,ecx
  410d33:	mov    dl,0xa
  410d35:	aas    
  410d36:	dec    edi
  410d37:	adc    eax,0xd774e2e1
  410d3c:	lahf   
  410d3d:	imul   eax,ebx,0xb947e877
  410d43:	mov    edx,0x94210ff6
  410d48:	stos   BYTE PTR es:[edi],al
  410d49:	sbb    al,0x78
  410d4b:	es cmp al,0xba
  410d4e:	xchg   esi,eax
  410d4f:	inc    ebp
  410d50:	sar    DWORD PTR [edx-0x5d],0x40
  410d54:	push   0x74
  410d56:	test   BYTE PTR [edi],ch
  410d58:	jmp    0x410d6f
  410d5a:	or     al,0x90
  410d5c:	icebp  
  410d5d:	pop    ebx
  410d5e:	adc    DWORD PTR [ecx+ecx*1],ebx
  410d61:	in     eax,0xbf
  410d63:	mov    ch,0x98
  410d65:	fwait
  410d66:	ds cwde 
  410d68:	lahf   
  410d69:	stos   BYTE PTR es:[edi],al
  410d6a:	pop    es
  410d6b:	rcl    esi,1
  410d6d:	or     esp,esi
  410d6f:	ja     0x410d40
  410d71:	pop    esi
  410d72:	js     0x410d3b
  410d74:	add    ebp,ecx
  410d76:	hlt    
  410d77:	mov    edi,0xd0afd386
  410d7c:	adc    ebp,DWORD PTR [edx]
  410d7e:	xchg   BYTE PTR [edx+0x7],dh
  410d81:	mov    eax,ds:0x20e2a6e8
  410d86:	es or  edi,ecx
  410d89:	adc    esp,DWORD PTR ds:0xa4a1081d
  410d8f:	add    BYTE PTR [ebp-0x7c],ah
  410d92:	inc    edx
  410d93:	xchg   DWORD PTR fs:[ebp+0x14be078b],edx
  410d9a:	push   esp
  410d9b:	out    dx,eax
  410d9c:	(bad)  
  410d9d:	in     al,0x25
  410d9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410da0:	repz fwait
  410da2:	mov    dl,BYTE PTR [edx-0x4b]
  410da5:	dec    ecx
  410da6:	inc    edi
  410da7:	shl    DWORD PTR [ebp-0x1b984b6c],1
  410dad:	push   edx
  410dae:	std    
  410daf:	stos   DWORD PTR es:[edi],eax
  410db0:	iret   
  410db1:	leave  
  410db2:	enter  0x872,0x76
  410db6:	frstor [ebp-0x27afce55]
  410dbc:	mov    bl,0x5b
  410dbe:	add    eax,0xec303f31
  410dc3:	add    al,ah
  410dc5:	mov    cl,ah
  410dc7:	push   ebx
  410dc8:	sub    al,0x2b
  410dca:	jp     0x410dfe
  410dcc:	repz fst DWORD PTR ds:0xd29c065c
  410dd3:	add    al,0xe1
  410dd5:	iret   
  410dd6:	imul   ecx,DWORD PTR [edi+esi*2],0xa
  410dda:	out    0x4e,eax
  410ddc:	and    DWORD PTR [ecx],ebp
  410dde:	xchg   ebp,eax
  410ddf:	mov    ecx,0x44df9ed
  410de4:	outs   dx,BYTE PTR ds:[esi]
  410de5:	cld    
  410de6:	sbb    BYTE PTR [esi+0x78],0x5c
  410dea:	rol    bh,0x59
  410ded:	and    DWORD PTR fs:[edi],eax
  410df0:	cwde   
  410df1:	push   esi
  410df2:	pop    ebx
  410df3:	imul   esi,DWORD PTR [ebp+0x340f69f7],0x6ea8de60
  410dfd:	push   ss
  410dfe:	sub    DWORD PTR [ebp+0x71],edi
  410e01:	test   dl,0xb8
  410e04:	push   esp
  410e05:	test   al,0x21
  410e07:	adc    ch,dh
  410e09:	clc    
  410e0a:	push   ebp
  410e0b:	jnp    0x410dda
  410e0d:	dec    ebp
  410e0e:	adc    BYTE PTR [esi+ebx*2+0x530299d],bl
  410e15:	xchg   BYTE PTR [ecx],bl
  410e17:	sub    ch,BYTE PTR [esi-0x5]
  410e1a:	addr16 pusha 
  410e1c:	mov    ds:0x55523691,eax
  410e21:	dec    edi
  410e22:	clc    
  410e23:	stc    
  410e24:	xor    eax,0xe34d1874
  410e29:	std    
  410e2a:	frstor [ecx+0x65cc60e3]
  410e30:	(bad)  
  410e31:	mov    eax,ds:0x2cab5896
  410e36:	loop   0x410e5a
  410e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e39:	pushf  
  410e3a:	ret    0x10d3
  410e3d:	or     eax,0xc663ecce
  410e42:	inc    esi
  410e43:	mov    cl,0x1
  410e45:	cs ret 
  410e47:	shr    dh,cl
  410e49:	cmp    al,dl
  410e4b:	in     al,0xd6
  410e4d:	loop   0x410ea4
  410e4f:	mov    WORD PTR [ebx],fs
  410e51:	dec    ecx
  410e52:	out    dx,eax
  410e53:	sbb    ah,ah
  410e55:	jne    0x410e6f
  410e57:	xor    al,dh
  410e59:	cmc    
  410e5a:	aam    0xad
  410e5c:	je     0x410de5
  410e5e:	ret    0xa738
  410e61:	push   edi
  410e62:	sub    eax,edx
  410e64:	dec    esp
  410e65:	sbb    eax,0xb677141a
  410e6a:	pushf  
  410e6b:	cld    
  410e6c:	mov    ch,0xc3
  410e6e:	jb     0x410e33
  410e70:	xlat   BYTE PTR ds:[ebx]
  410e71:	xchg   BYTE PTR [ecx-0x58818bb3],al
  410e77:	dec    ebp
  410e78:	xchg   edi,eax
  410e79:	ja     0x410e01
  410e7b:	ins    DWORD PTR es:[edi],dx
  410e7c:	test   eax,0x1420f213
  410e81:	inc    eax
  410e82:	mov    ds:0x5542ec69,eax
  410e87:	test   al,0xf0
  410e89:	mov    dl,0xad
  410e8b:	inc    edi
  410e8c:	inc    ebp
  410e8d:	push   0x4fe1d6ec
  410e92:	push   ds
  410e93:	out    dx,eax
  410e94:	fst    DWORD PTR [eax]
  410e96:	fcom   DWORD PTR [ebx-0x44076362]
  410e9c:	pop    ss
  410e9d:	push   ss
  410e9e:	inc    eax
  410e9f:	call   0xde5:0x48b2a105
  410ea6:	lds    ebx,FWORD PTR [ebx+0x54a564f6]
  410eac:	into   
  410ead:	jnp    0x410f0f
  410eaf:	(bad)  
  410eb0:	dec    ecx
  410eb1:	jno    0x410e7b
  410eb3:	mov    bh,0x22
  410eb5:	adc    al,0xb6
  410eb7:	in     al,dx
  410eb8:	mov    cl,0x1f
  410eba:	test   DWORD PTR [ebp+0x6a],ecx
  410ebd:	pusha  
  410ebe:	aam    0xfe
  410ec0:	mov    dl,0x81
  410ec2:	xchg   edi,eax
  410ec3:	adc    eax,0x7147e7dc
  410ec8:	jmp    0xbb4f:0x58a03f7f
  410ecf:	and    dh,dh
  410ed1:	ss nop
  410ed3:	xor    dl,ch
  410ed5:	cmp    bl,BYTE PTR [esi+0x1f]
  410ed8:	sub    DWORD PTR [ebx-0x3e5b1740],eax
  410ede:	test   BYTE PTR [ecx+0x3cc6c6],dh
  410ee4:	mov    DWORD PTR [edx+0x1e],esp
  410ee7:	lea    edi,[ebp+ecx*4+0x3f]
  410eeb:	(bad)  
  410eec:	out    dx,al
  410eed:	sub    BYTE PTR [esp+ebx*8],0xbd
  410ef1:	mov    ds:0x5aac74ec,eax
  410ef6:	ret    0x3f3a
  410ef9:	dec    eax
  410efa:	ss and al,0xef
  410efd:	sbb    eax,0xd1508851
  410f02:	mov    al,ds:0xa426f15b
  410f07:	aam    0xc2
  410f09:	out    dx,eax
  410f0a:	stos   DWORD PTR es:[edi],eax
  410f0b:	sub    eax,eax
  410f0d:	jle    0x410f35
  410f0f:	or     bl,BYTE PTR [ecx-0x64b2a039]
  410f15:	sar    BYTE PTR [edx-0x345e2814],cl
  410f1b:	add    esp,ebx
  410f1d:	ffree  st(4)
  410f1f:	and    DWORD PTR [ebp-0x2],edx
  410f22:	cdq    
  410f23:	inc    esi
  410f24:	xchg   esi,eax
  410f25:	(bad)  
  410f26:	cwde   
  410f27:	addr16 jge 0x410f10
  410f2a:	js     0x410ebc
  410f2c:	jo     0x410ef9
  410f2e:	or     eax,DWORD PTR [ebp+0x65]
  410f31:	push   ebx
  410f32:	push   edi
  410f33:	dec    ebp
  410f34:	fldcw  WORD PTR [ecx+0x4a2a79c6]
  410f3a:	int    0xd2
  410f3c:	ds cmp al,0x79
  410f3f:	scas   eax,DWORD PTR es:[edi]
  410f40:	sbb    DWORD PTR [ebp+ecx*8+0x24],esp
  410f44:	jbe    0x410ef3
  410f46:	retf   
  410f47:	add    esi,DWORD PTR [eax]
  410f49:	ja     0x410f9f
  410f4b:	sub    eax,0xb813729a
  410f50:	mov    esi,0x54b77208
  410f55:	jmp    0x7eb7de62
  410f5a:	mov    esp,DWORD PTR [ebx]
  410f5c:	aad    0x50
  410f5e:	mov    al,ds:0xf71a6f08
  410f63:	pop    edi
  410f64:	xor    BYTE PTR [edi],bh
  410f66:	xor    DWORD PTR [edi],edi
  410f68:	pop    edx
  410f69:	imul   ebp,DWORD PTR [ebp-0x22ca43c7],0xffffffea
  410f70:	xor    DWORD PTR [ebx-0x54],0x323a3bd2
  410f77:	cdq    
  410f78:	bound  esi,QWORD PTR [esp+edx*1]
  410f7b:	push   cs
  410f7c:	jne    0x410fdc
  410f7e:	push   esp
  410f7f:	ins    BYTE PTR es:[edi],dx
  410f80:	ret    
  410f81:	sub    al,0xc7
  410f83:	les    ebp,FWORD PTR [esi-0x17]
  410f86:	cmp    ax,0x1bf1
  410f8a:	mov    ah,0xb9
  410f8c:	ins    BYTE PTR es:[edi],dx
  410f8d:	iret   
  410f8e:	popf   
  410f8f:	dec    ebp
  410f90:	pop    esi
  410f91:	or     BYTE PTR [eax+ebp*1-0x1d482501],ah
  410f98:	xchg   edx,eax
  410f99:	daa    
  410f9a:	push   es
  410f9b:	ins    DWORD PTR es:[edi],dx
  410f9c:	pusha  
  410f9d:	xor    eax,0x793ca0eb
  410fa2:	xor    eax,DWORD PTR [esi-0x76]
  410fa5:	xchg   esp,eax
  410fa6:	stos   DWORD PTR es:[edi],eax
  410fa7:	pop    esi
  410fa8:	(bad)  
  410fa9:	dec    edi
  410faa:	fidivr WORD PTR [edx+0x38]
  410fad:	(bad)  
  410fae:	cli    
  410faf:	cmp    DWORD PTR [edx],edi
  410fb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fb2:	xlat   BYTE PTR ds:[ebx]
  410fb3:	test   al,0x9c
  410fb5:	or     DWORD PTR [ecx+0x376d2695],ecx
  410fbb:	jp     0x410fcc
  410fbd:	retf   
  410fbe:	into   
  410fbf:	mov    ecx,es
  410fc1:	icebp  
  410fc2:	nop
  410fc3:	gs push ss
  410fc5:	pop    ebx
  410fc6:	and    al,0x48
  410fc8:	add    esi,DWORD PTR [ecx]
  410fca:	xor    edi,DWORD PTR [eax+ebx*8+0x2566220f]
  410fd1:	push   esi
  410fd2:	pop    es
  410fd3:	imul   ebp,esp,0xffffff82
  410fd6:	in     eax,0x15
  410fd8:	xor    BYTE PTR [ecx-0x62],ah
  410fdb:	punpckhwd mm1,QWORD PTR [eax]
  410fde:	lods   eax,DWORD PTR ds:[esi]
  410fdf:	or     bl,dh
  410fe1:	fnsavew [ebp+0x2cc214de]
  410fe8:	nop
  410fe9:	je     0x411068
  410feb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fec:	mov    esp,0xa384bf08
  410ff1:	push   cs
  410ff2:	sub    eax,0x147dee93
  410ff7:	add    al,0x80
  410ff9:	mov    al,ds:0xeb1f0b81
  410ffe:	sub    DWORD PTR [edx+ebx*8],0x63
  411002:	sbb    BYTE PTR [esi+esi*1-0x30],0x66
  411007:	xchg   ecx,eax
  411008:	sar    eax,cl
  41100a:	adc    eax,0x185616b3
  41100f:	shl    BYTE PTR [eax+0x45],cl
  411012:	stos   DWORD PTR es:[edi],eax
  411013:	es mov dl,0xa
  411016:	push   0x43
  411018:	sub    eax,esp
  41101a:	fs mov ch,0xb9
  41101d:	call   0x4fe42515
  411022:	cmp    al,0xb5
  411024:	sbb    DWORD PTR [edx+0x5b],esp
  411027:	icebp  
  411028:	in     al,0x41
  41102a:	cs js  0x411028
  41102d:	out    dx,eax
  41102e:	sbb    eax,0x1bed4703
  411033:	test   eax,0x1e25deab
  411038:	add    ebx,DWORD PTR [eax+eiz*8]
  41103b:	xchg   edx,eax
  41103c:	mov    ebp,0xb71a7f10
  411041:	jge    0x410ffb
  411043:	loop   0x411009
  411045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411046:	mul    BYTE PTR [eax+ecx*2+0x65ef586b]
  41104d:	sbb    eax,0x22c0d8ca
  411052:	cli    
  411053:	f2xm1  
  411055:	pushf  
  411056:	sbb    BYTE PTR [edi],bl
  411058:	mov    eax,ds:0x7fb9b431
  41105e:	cmc    
  41105f:	dec    edx
  411060:	loope  0x411084
  411062:	out    dx,al
  411063:	sub    DWORD PTR [ecx-0xac0d0ae],0xffffffd3
  41106a:	fisttp QWORD PTR [eax+0x3aaa4455]
  411070:	scas   al,BYTE PTR es:[edi]
  411071:	sbb    eax,0x7477b49e
  411076:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411077:	dec    edi
  411078:	sbb    esp,DWORD PTR [edx]
  41107a:	inc    edx
  41107b:	xchg   ebx,eax
  41107c:	adc    esp,DWORD PTR [edx-0x2c]
  41107f:	xor    al,0xe4
  411081:	pop    esi
  411082:	xchg   ebp,eax
  411083:	add    BYTE PTR [eax-0x13],bl
  411086:	jb     0x411029
  411088:	loopne 0x411076
  41108a:	inc    eax
  41108b:	xchg   edi,eax
  41108c:	xor    eax,0x126fe696
  411091:	fldenv [esi]
  411093:	xlat   BYTE PTR ds:[ebx]
  411094:	aas    
  411095:	dec    ebx
  411096:	mov    ah,BYTE PTR [edi]
  411098:	adc    ebx,esp
  41109a:	daa    
  41109b:	pop    es
  41109c:	out    0x4f,eax
  41109e:	mov    eax,0x3794a4a5
  4110a3:	push   ds
  4110a4:	pop    edx
  4110a5:	cld    
  4110a6:	push   0x1f
  4110a8:	jo     0x411097
  4110aa:	mov    cl,0x39
  4110ac:	data16 ficom WORD PTR [ebx]
  4110af:	js     0x4110ff
  4110b1:	cmp    dl,BYTE PTR [ebp+0x10656f2d]
  4110b7:	mov    esp,0x9fd6defc
  4110bc:	add    al,0x4d
  4110be:	(bad)
  4110c1:	test   al,0x67
  4110c3:	iret   
  4110c4:	cmp    ecx,edi
  4110c6:	sub    ecx,DWORD PTR [edi-0x77]
  4110c9:	cdq    
  4110ca:	ror    ecx,0x80
  4110cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ce:	rcr    bh,0x5c
  4110d1:	add    BYTE PTR [esi-0x61],cl
  4110d4:	in     eax,0x26
  4110d6:	cmp    eax,0xa647dcf2
  4110db:	lock fnstcw WORD PTR [ecx+0x41d91364]
  4110e2:	repnz inc esp
  4110e4:	gs jmp 0xf16b:0x39990e8
  4110ec:	dec    edi
  4110ed:	fimul  WORD PTR gs:[ebp-0x7c17049b]
  4110f4:	sbb    eax,0xc66ec443
  4110f9:	push   edi
  4110fa:	shl    BYTE PTR [ecx+0x47cb0cc7],cl
  411100:	adc    DWORD PTR [edx],esi
  411102:	ins    DWORD PTR es:[edi],dx
  411103:	xor    eax,DWORD PTR [edi+0x13696481]
  411109:	xor    eax,0xc36ef003
  41110e:	fisttp WORD PTR [edx]
  411110:	cld    
  411111:	pop    ebp
  411112:	xchg   edi,eax
  411113:	jmp    0xfd2a:0xb7050c43
  41111a:	or     eax,0xe8f21bb5
  41111f:	mov    ecx,0xaaf0640d
  411124:	and    BYTE PTR [eax+edi*4+0x2734c8d4],ch
  41112b:	clc    
  41112c:	xor    cl,0x5f
  41112f:	or     edx,DWORD PTR [esi+ebp*1+0x757ac9fe]
  411136:	daa    
  411137:	imul   ecx,DWORD PTR [ebp-0x12],0x51e97b70
  41113e:	cmp    eax,esi
  411140:	jecxz  0x411196
  411142:	cli    
  411143:	retf   
  411144:	mov    cl,0xb2
  411146:	fist   WORD PTR [edi-0x393bfff9]
  41114c:	inc    edi
  41114d:	sbb    dl,BYTE PTR [ebp+0x2511a7bd]
  411153:	mov    dl,0x3b
  411155:	idiv   BYTE PTR [ebp+0x4c]
  411158:	or     eax,0x26d820ef
  41115d:	push   edi
  41115e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41115f:	adc    DWORD PTR [ecx+0x65],0xeb020810
  411166:	fidivr DWORD PTR [ebp+0x2c]
  411169:	pop    esp
  41116a:	mov    al,al
  41116c:	inc    edi
  41116d:	push   ss
  41116e:	xchg   edi,ecx
  411170:	dec    ebp
  411171:	mov    ?,WORD PTR [eax+ecx*1]
  411174:	mov    DWORD PTR [ebx-0x74],ecx
  411177:	lock shl DWORD PTR [ecx],1
  41117a:	pop    ecx
  41117b:	into   
  41117c:	pop    edi
  41117d:	push   cs
  41117e:	je     0x411194
  411180:	mov    esi,0xcb7decb6
  411185:	arpl   bp,dx
  411187:	rcl    BYTE PTR [edx+0x4b],cl
  41118a:	sar    DWORD PTR [esi+0x3d],0xe8
  41118e:	ins    BYTE PTR es:[edi],dx
  41118f:	add    DWORD PTR [edi-0x7b],edi
  411192:	mov    DWORD PTR [eax+esi*4],esp
  411195:	mov    ah,0x54
  411197:	ds jno 0x411154
  41119a:	mov    ecx,0x2aa6eef5
  41119f:	stc    
  4111a0:	xor    al,BYTE PTR [edx+0x6661a333]
  4111a6:	dec    eax
  4111a7:	add    al,0x75
  4111a9:	add    DWORD PTR [edx-0x76837d07],0xed10999b
  4111b3:	mov    ds:0x48752d18,eax
  4111b8:	stos   DWORD PTR es:[edi],eax
  4111b9:	add    ecx,DWORD PTR [ebx-0x591a6b64]
  4111bf:	mov    fs,edx
  4111c1:	jbe    0x41117d
  4111c3:	jo     0x411165
  4111c5:	pop    edi
  4111c6:	inc    edx
  4111c7:	pop    esp
  4111c8:	int3   
  4111c9:	aad    0xe7
  4111cb:	jmp    0xc0e4:0x62b9b10d
  4111d2:	push   ecx
  4111d3:	fld    QWORD PTR ds:0x8278f128
  4111d9:	adc    BYTE PTR [esi-0x169ea09e],ah
  4111df:	repnz add eax,0x75eb5500
  4111e5:	imul   eax,DWORD PTR [esi],0xffffffa5
  4111e8:	test   eax,0x59652a4b
  4111ed:	loop   0x411227
  4111ef:	dec    eax
  4111f0:	ficomp DWORD PTR [eax-0x4f]
  4111f3:	ins    DWORD PTR es:[edi],dx
  4111f4:	cmc    
  4111f5:	mov    al,0x75
  4111f7:	cli    
  4111f8:	jnp    0x411201
  4111fa:	push   edx
  4111fb:	fsub   DWORD PTR [edx+0x64]
  4111fe:	popf   
  4111ff:	xor    DWORD PTR [ebx-0x1c779a27],0x20
  411206:	ss bnd jae 0x411232
  41120a:	ror    dh,1
  41120c:	add    ecx,edi
  41120e:	add    BYTE PTR [ebp+0x26],0xf3
  411212:	out    dx,eax
  411213:	jl     0x4111f8
  411215:	div    BYTE PTR ds:0xe941cff8
  41121b:	xchg   dh,cl
  41121d:	sbb    dl,BYTE PTR [esi+0x4d]
  411220:	inc    ebx
  411221:	ret    0x6490
  411224:	retf   0xa6a2
  411227:	mov    esp,0x7ed22129
  41122c:	sub    eax,0x138948c5
  411231:	test   BYTE PTR [ecx],ah
  411233:	(bad)  
  411234:	push   ss
  411235:	fadd   DWORD PTR [edi-0x3f]
  411238:	cld    
  411239:	dec    DWORD PTR ds:0x8601ac93
  41123f:	xchg   ebp,eax
  411240:	dec    ebp
  411241:	jmp    0x411295
  411243:	mov    al,0x3b
  411245:	dec    eax
  411246:	pop    ebx
  411247:	add    eax,DWORD PTR [ebx+0x2253c99d]
  41124d:	and    cl,cl
  41124f:	test   edi,ebp
  411251:	push   es
  411252:	fwait
  411253:	mov    eax,DWORD PTR [esi+0x2f]
  411256:	bound  ebp,QWORD PTR [ebp+edi*2-0x43]
  41125a:	push   ss
  41125b:	xor    eax,0xc66caf40
  411260:	fistp  WORD PTR [eax-0x74]
  411263:	ss cmc 
  411265:	cmp    ecx,edx
  411267:	cmc    
  411268:	pushf  
  411269:	popf   
  41126a:	or     DWORD PTR [esi-0x61],0xffffff9d
  41126e:	pop    edx
  41126f:	jnp    0x4112e6
  411271:	cmp    al,0xde
  411273:	dec    esp
  411274:	jge    0x4112f5
  411276:	fild   WORD PTR [edx-0x1e]
  411279:	xchg   BYTE PTR [ecx-0x45],bl
  41127c:	shl    DWORD PTR [ebp+0x2e],0xce
  411280:	or     eax,0x5bad6b3b
  411285:	push   esi
  411286:	sbb    al,0xc3
  411288:	dec    edi
  411289:	add    al,0x1e
  41128b:	aad    0xb6
  41128d:	paddsw mm7,mm2
  411290:	int    0xcd
  411292:	aas    
  411293:	push   ebx
  411294:	cmp    eax,0xb23f35dc
  411299:	adc    BYTE PTR [esp+eiz*4-0x4f],0x1e
  41129e:	push   eax
  41129f:	out    dx,eax
  4112a0:	ret    
  4112a1:	inc    cl
  4112a3:	inc    esi
  4112a4:	jbe    0x41124b
  4112a6:	ds in  eax,dx
  4112a8:	(bad)  
  4112aa:	jnp    0x4112fa
  4112ac:	push   eax
  4112ad:	add    BYTE PTR [eax+0x7373c1c1],dh
  4112b3:	lahf   
  4112b4:	cmp    dh,BYTE PTR [edx+0x5c]
  4112b7:	cdq    
  4112b8:	mov    ch,0xe8
  4112ba:	ror    DWORD PTR [ebp-0x68c49487],0xd5
  4112c1:	add    al,0x81
  4112c3:	or     DWORD PTR [eax+0x578774cb],eax
  4112c9:	repnz and edi,ecx
  4112cc:	inc    ebp
  4112cd:	sub    eax,0x405b2c31
  4112d2:	jmp    0xedf2:0x2fd0aaa8
  4112d9:	sbb    BYTE PTR [edx+0x32abda93],al
  4112df:	in     al,dx
  4112e0:	repnz adc al,0x15
  4112e4:	xor    eax,0x49dd1568
  4112e9:	inc    edi
  4112ea:	call   0x1702:0xd275b8dd
  4112f1:	inc    ebx
  4112f2:	dec    ebx
  4112f3:	adc    esp,DWORD PTR [eax]
  4112f5:	push   0x2aaf60e7
  4112fa:	inc    esp
  4112fb:	ret    
  4112fc:	(bad)  
  4112fd:	xlat   BYTE PTR ds:[ebx]
  4112fe:	mov    ds:0x8ed16038,al
  411303:	add    DWORD PTR [ebp+0x49292f50],0x25
  41130a:	mov    dh,0xf3
  41130c:	lahf   
  41130d:	hlt    
  41130e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41130f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411311:	and    dl,0xa9
  411314:	stos   DWORD PTR es:[edi],eax
  411315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411316:	test   eax,0xf4dbd496
  41131b:	jo     0x411340
  41131d:	mov    bh,BYTE PTR [ebx+0x22]
  411320:	and    BYTE PTR [eax-0x3d],bl
  411323:	dec    ecx
  411324:	fdivr  DWORD PTR [esi+eiz*2-0x7c]
  411328:	test   al,0x84
  41132a:	xchg   BYTE PTR [ecx-0x535c0291],dh
  411330:	sub    edi,edx
  411332:	or     BYTE PTR ds:0x758161af,dl
  411338:	mov    DWORD PTR [ecx-0x37b8e0e2],ecx
  41133e:	inc    ebp
  41133f:	ror    BYTE PTR [ebx+0x638d426e],1
  411345:	outs   dx,DWORD PTR ds:[esi]
  411346:	ss inc ebx
  411348:	push   ss
  411349:	int    0x4e
  41134b:	ss pop esp
  41134d:	inc    esi
  41134e:	sub    DWORD PTR [ecx],edx
  411350:	cmc    
  411351:	pop    edi
  411352:	dec    BYTE PTR [eax]
  411354:	lea    ecx,[ebx-0x5b]
  411357:	(bad)  
  411358:	push   esp
  411359:	out    dx,al
  41135a:	aam    0x16
  41135c:	loopne 0x41139f
  41135e:	(bad)  
  41135f:	outs   dx,DWORD PTR ds:[esi]
  411360:	inc    esi
  411361:	mov    dh,0xb0
  411363:	add    BYTE PTR [eax+0x74de592b],ch
  411369:	pop    edx
  41136a:	push   ebp
  41136b:	fild   WORD PTR [edx+0x1e]
  41136e:	sub    eax,0x9f4783b1
  411373:	ror    esp,cl
  411375:	in     eax,dx
  411376:	(bad)  
  411377:	aad    0xd5
  411379:	xchg   ebx,eax
  41137a:	push   ss
  41137b:	cmp    DWORD PTR [ecx+0x69],edi
  41137e:	jo     0x4113a5
  411380:	inc    ebx
  411381:	inc    ebp
  411382:	lods   al,BYTE PTR ds:[esi]
  411383:	(bad)  
  411384:	pop    edx
  411385:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411386:	mov    ds:0xffe8b089,eax
  41138b:	cmp    eax,eax
  41138d:	pop    esi
  41138e:	sbb    BYTE PTR [ebp-0x2140918c],bl
  411394:	in     al,dx
  411395:	inc    edi
  411396:	mov    bh,BYTE PTR [edx+0x2a4245ed]
  41139c:	sub    eax,0xb242abb1
  4113a1:	xchg   DWORD PTR [ebp-0x34c59e7],ebp
  4113a7:	fldcw  WORD PTR [esp+edx*2-0x7b]
  4113ab:	out    0xc6,al
  4113ad:	mov    bh,0x84
  4113af:	fild   WORD PTR [ebx-0x65]
  4113b2:	loope  0x4113d8
  4113b4:	aaa    
  4113b5:	sub    eax,0x725e10ac
  4113ba:	rcr    BYTE PTR [eax],cl
  4113bc:	pop    edi
  4113bd:	jnp    0x4113da
  4113bf:	addr16 cmp al,0x0
  4113c2:	das    
  4113c3:	inc    edx
  4113c4:	ins    DWORD PTR es:[edi],dx
  4113c5:	lds    ebp,FWORD PTR ds:0x4c086c11
  4113cb:	aad    0xe2
  4113cd:	xchg   esi,eax
  4113ce:	sub    bh,BYTE PTR [ecx+0x52]
  4113d1:	ins    DWORD PTR es:[edi],dx
  4113d2:	daa    
  4113d3:	out    0x3b,al
  4113d5:	xchg   ecx,eax
  4113d6:	data16 sub al,0xd9
  4113d9:	mov    edx,esp
  4113db:	push   edx
  4113dc:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4113de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113df:	mov    ecx,0xbf08e795
  4113e4:	in     eax,dx
  4113e5:	test   DWORD PTR [edi+0x7561326d],ecx
  4113eb:	sbb    al,0x2e
  4113ed:	cmp    DWORD PTR [eax-0x17],eax
  4113f0:	mov    ebx,0xc30311ac
  4113f5:	adc    DWORD PTR [ecx-0x2],ebx
  4113f8:	scas   ax,WORD PTR es:[edi]
  4113fa:	or     ebx,DWORD PTR [ebx+0x56]
  4113fd:	pop    es
  4113fe:	(bad)  
  4113ff:	dec    eax
  411400:	inc    esp
  411401:	dec    esi
  411402:	lahf   
  411403:	scas   al,BYTE PTR es:[edi]
  411404:	cmp    eax,0x16662570
  411409:	out    dx,eax
  41140a:	pop    ebp
  41140b:	cmp    DWORD PTR [esi-0x6b],edx
  41140e:	mov    al,ds:0x8ac1c4f6
  411413:	and    eax,0x273802
  411418:	push   ebp
  411419:	and    DWORD PTR [ecx+0x3b],0xffffffcc
  41141d:	pop    ecx
  41141e:	les    eax,FWORD PTR [ecx]
  411420:	xchg   edi,eax
  411421:	dec    esi
  411422:	test   BYTE PTR [esi-0x5fd149ff],dl
  411428:	mov    bh,BYTE PTR [edi+0x5c]
  41142b:	push   es
  41142c:	push   ebp
  41142d:	js     0x1f5683f4
  411433:	jno    0x41147a
  411435:	xor    DWORD PTR [esi+eiz*2+0x5d],edx
  411439:	outs   dx,BYTE PTR ds:[esi]
  41143a:	loope  0x4113f0
  41143c:	ins    DWORD PTR es:[edi],dx
  41143d:	test   al,0x29
  41143f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411440:	outs   dx,BYTE PTR ds:[esi]
  411441:	add    ecx,DWORD PTR ds:0x641107a0
  411447:	push   es
  411448:	test   cl,ah
  41144a:	outs   dx,BYTE PTR ds:[esi]
  41144b:	xor    BYTE PTR [ecx+0x65],bl
  41144e:	(bad)  
  41144f:	and    BYTE PTR [esp+ebx*8],bl
  411452:	mov    cl,0x2b
  411454:	js     0x4114d1
  411456:	sbb    edi,DWORD PTR [ebp-0x7a]
  411459:	outs   dx,BYTE PTR ds:[esi]
  41145a:	loop   0x4114c5
  41145c:	and    ah,bl
  41145e:	dec    ecx
  41145f:	add    ebp,DWORD PTR [edi+ebp*1+0x6e]
  411463:	scas   eax,DWORD PTR es:[edi]
  411464:	pop    edx
  411465:	sti    
  411466:	adc    bl,bl
  411468:	push   ss
  411469:	and    BYTE PTR [edi],0x6e
  41146c:	dec    ecx
  41146d:	fsubr  DWORD PTR [edi]
  41146f:	in     al,dx
  411470:	xor    BYTE PTR [esi+0xe],ah
  411473:	pop    es
  411474:	xchg   edx,eax
  411475:	dec    esi
  411476:	inc    edi
  411477:	mov    BYTE PTR [ebp-0x5],bl
  41147a:	sub    eax,DWORD PTR [edi+0x25]
  41147d:	rcr    ecx,1
  41147f:	push   edi
  411480:	aam    0x44
  411482:	test   BYTE PTR [edi],al
  411484:	mov    bh,0xe6
  411486:	push   cs
  411487:	sbb    eax,0xa10ccf8
  41148c:	imul   eax,esp,0xffffffd2
  41148f:	in     eax,dx
  411490:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411491:	xchg   esp,eax
  411493:	aam    0xe0
  411495:	sub    ch,BYTE PTR [esi-0x7d]
  411498:	dec    esi
  411499:	cld    
  41149a:	fdivr  QWORD PTR [ebp-0x24440afc]
  4114a0:	xchg   ebx,eax
  4114a1:	xor    DWORD PTR [edx+edx*1-0x69],edx
  4114a5:	ins    BYTE PTR es:[edi],dx
  4114a6:	bound  esp,QWORD PTR [ebp+ebp*8-0x46928842]
  4114ad:	fdivrp st(6),st
  4114af:	gs dec esp
  4114b1:	stos   BYTE PTR es:[edi],al
  4114b2:	pop    edi
  4114b3:	xor    ch,BYTE PTR [edx]
  4114b5:	or     BYTE PTR ds:0xccb6442,dh
  4114bb:	idiv   BYTE PTR ds:0xb5345b21
  4114c1:	mov    ecx,0x3d66950e
  4114c6:	mov    es,WORD PTR ds:0x2db6586b
  4114cc:	jno    0x41147d
  4114ce:	push   ds
  4114cf:	mov    WORD PTR [edx],fs
  4114d1:	fnstenv [eax]
  4114d3:	dec    esp
  4114d4:	jae    0x4114a6
  4114d6:	add    eax,0x4c5df5ee
  4114db:	inc    ebp
  4114dc:	inc    edx
  4114dd:	pop    esi
  4114de:	int3   
  4114df:	mov    cl,0xc8
  4114e1:	aaa    
  4114e2:	xor    al,0x2b
  4114e4:	push   ebp
  4114e5:	das    
  4114e6:	pusha  
  4114e7:	xlat   BYTE PTR ds:[ebx]
  4114e8:	cdq    
  4114e9:	cdq    
  4114ea:	add    bl,BYTE PTR [esi+0x52679772]
  4114f0:	inc    ebx
  4114f1:	mov    al,0xd8
  4114f3:	rcr    DWORD PTR [edi],0xc9
  4114f6:	enter  0x32,0xbd
  4114fa:	clc    
  4114fb:	sub    eax,0x4358c785
  411500:	and    dh,ah
  411502:	jecxz  0x41149e
  411504:	aas    
  411505:	xor    al,0x32
  411507:	adc    DWORD PTR [ecx+0xa],ecx
  41150a:	adc    DWORD PTR [edi],ebp
  41150c:	adc    eax,0x598bd3d2
  411511:	aas    
  411512:	in     eax,0x27
  411514:	es je  0x411595
  411517:	pop    ebp
  411518:	cs js  0x4114ab
  41151b:	jl     0x41154e
  41151d:	cmp    ecx,DWORD PTR [edx+esi*1+0x4160c618]
  411524:	dec    ebx
  411525:	sub    eax,0xb0fe71e
  41152a:	xor    BYTE PTR [ecx],dl
  41152c:	and    DWORD PTR [ebx-0x31],edx
  41152f:	fwait
  411530:	jns    0x411563
  411532:	mov    ch,0xa0
  411534:	(bad)
  411538:	jae    0x41156d
  41153a:	lock mov WORD PTR [ebx],es
  41153d:	out    dx,eax
  41153e:	(bad)  
  41153f:	mov    ds:0x687d2118,eax
  411544:	gs (bad) 
  411546:	mov    eax,ds:0xeb3d0ff5
  41154b:	cs out dx,al
  41154d:	out    0xbb,eax
  41154f:	adc    DWORD PTR [ebx-0x1ea50066],ecx
  411555:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411556:	xchg   esi,eax
  411557:	popf   
  411558:	outs   dx,DWORD PTR ds:[esi]
  411559:	fcmovbe st,st(7)
  41155b:	xor    esi,DWORD PTR [ebp-0x53]
  41155e:	xchg   ebx,eax
  41155f:	iret   
  411560:	stc    
  411561:	lods   eax,DWORD PTR ds:[esi]
  411562:	daa    
  411563:	jns    0x411589
  411565:	sub    eax,DWORD PTR [ebp+eiz*2+0x32]
  411569:	and    edx,DWORD PTR [ebp-0x30]
  41156c:	jnp    0x411573
  41156e:	xchg   edi,eax
  41156f:	xor    eax,0xe28ac7c7
  411574:	sbb    bh,ch
  411576:	repnz sbb esi,DWORD PTR [ebx+0xe]
  41157a:	inc    eax
  41157b:	fsubr  DWORD PTR [eax-0x298e06bd]
  411581:	sub    BYTE PTR [esi+0x56995e9d],dh
  411587:	inc    esp
  411588:	aad    0x1d
  41158a:	aaa    
  41158b:	adc    al,0xda
  41158d:	dec    ebx
  41158e:	ficom  DWORD PTR [edx-0x3326bb16]
  411594:	xchg   esp,eax
  411595:	mov    dl,al
  411597:	enter  0x14e2,0x9e
  41159b:	sbb    al,ch
  41159d:	push   cs
  41159e:	aam    0x65
  4115a0:	pop    edi
  4115a1:	ror    DWORD PTR [edx],0x29
  4115a4:	into   
  4115a5:	ficom  DWORD PTR [eax-0x57]
  4115a8:	addr16 jl 0x411532
  4115ab:	pop    esi
  4115ac:	mov    bh,0x6f
  4115ae:	or     DWORD PTR [esi-0x5cf3fdee],0xffffffe4
  4115b5:	std    
  4115b6:	stos   BYTE PTR es:[edi],al
  4115b7:	imul   edx,DWORD PTR [edx+0x4f4c6c27],0x3d
  4115be:	push   eax
  4115bf:	daa    
  4115c0:	in     eax,dx
  4115c1:	mov    al,ds:0x27dfea82
  4115c6:	jmp    0xa2b9e97e
  4115cb:	(bad)  
  4115cc:	sub    DWORD PTR ds:0x6f67cab9,edx
  4115d2:	in     eax,0x20
  4115d4:	ftst   
  4115d6:	or     BYTE PTR [ebx-0x6],ah
  4115d9:	loop   0x411562
  4115db:	lods   eax,DWORD PTR ds:[esi]
  4115dc:	fbld   TBYTE PTR [edx]
  4115de:	popa   
  4115df:	and    DWORD PTR [ecx+eiz*8+0x771bad2f],ecx
  4115e6:	fldcw  WORD PTR [ebp+0x2]
  4115e9:	push   eax
  4115ea:	push   ecx
  4115eb:	test   BYTE PTR [edx+0xf35484f],cl
  4115f1:	inc    edi
  4115f2:	or     BYTE PTR gs:0x18430eda,0xaf
  4115fa:	clc    
  4115fb:	mov    ah,0x8a
  4115fd:	adc    DWORD PTR [ebp+0x10df816c],eax
  411603:	imul   ecx,DWORD PTR [edx],0x45
  411606:	xor    bl,ah
  411608:	xor    eax,0xa02be65e
  41160d:	cmp    eax,0x29ac0319
  411612:	ja     0x411658
  411614:	sbb    al,0x12
  411616:	mov    ds:0x94f2f6f3,al
  41161b:	sbb    BYTE PTR [eax],dh
  41161d:	inc    esp
  41161e:	ja     0x411646
  411620:	push   edx
  411621:	sbb    edi,DWORD PTR [edi]
  411623:	xor    BYTE PTR [eax+0x33],dl
  411626:	mov    al,0x5b
  411628:	call   0xbeb8:0x367e1e48
  41162f:	xchg   DWORD PTR es:[ebp+0x3cd2771b],ebx
  411636:	mov    bh,0x49
  411638:	repz pop es
  41163a:	jmp    0x41162c
  41163c:	push   es
  41163d:	fs js  0x41160a
  411640:	and    BYTE PTR [eax-0x8dacbbe],0x51
  411647:	pop    ebx
  411648:	fdiv   DWORD PTR [ebp-0x66]
  41164b:	and    DWORD PTR [eax+0x30e0204a],0xffffffbb
  411652:	scas   eax,DWORD PTR es:[edi]
  411653:	dec    edi
  411654:	loopne 0x4115ed
  411656:	dec    ebp
  411657:	aaa    
  411658:	rcr    DWORD PTR [ecx],0xff
  41165b:	jle    0x411646
  41165d:	xchg   ebx,eax
  41165e:	add    BYTE PTR [esi+0x1a],al
  411661:	mov    ecx,esi
  411663:	mov    bh,0x87
  411665:	push   ecx
  411666:	pop    ebp
  411667:	cmp    eax,0xc9988638
  41166c:	stos   DWORD PTR es:[edi],eax
  41166d:	mov    ds:0xe05800fe,eax
  411672:	and    eax,0x8918c6db
  411677:	in     eax,0x74
  411679:	sub    esi,DWORD PTR [eax+0x1a4bc4e6]
  41167f:	xlat   BYTE PTR ds:[ebx]
  411680:	jne    0x4116d3
  411682:	int3   
  411683:	daa    
  411684:	sub    ch,BYTE PTR [eax-0x80]
  411687:	fcomp  DWORD PTR [ecx+0x70]
  41168a:	stos   DWORD PTR es:[edi],eax
  41168b:	xchg   ebp,eax
  41168c:	cld    
  41168d:	fdivr  DWORD PTR ds:0xfe61302b
  411693:	cld    
  411694:	stos   BYTE PTR es:[edi],al
  411695:	retf   0xdd6c
  411698:	lods   eax,DWORD PTR ds:[esi]
  411699:	cmp    cl,BYTE PTR [ebx]
  41169b:	sub    esi,DWORD PTR [ecx]
  41169d:	call   0x907f:0x8410a263
  4116a4:	mov    bh,0xa1
  4116a6:	fucomi st,st(7)
  4116a8:	and    al,0x69
  4116aa:	sahf   
  4116ab:	or     esi,ebp
  4116ad:	jge    0x41172e
  4116af:	ins    DWORD PTR es:[edi],dx
  4116b0:	dec    edx
  4116b1:	cmp    edx,ebp
  4116b3:	mov    eax,ds:0xbf9b9e7
  4116b8:	pop    es
  4116b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116ba:	mov    al,0xae
  4116bc:	xchg   ebx,eax
  4116bd:	aam    0x3a
  4116bf:	cdq    
  4116c0:	and    al,0x63
  4116c2:	dec    esp
  4116c3:	or     eax,0x21f58697
  4116c8:	scas   al,BYTE PTR es:[edi]
  4116c9:	sub    dh,BYTE PTR [ebx-0x5f2688b6]
  4116cf:	pop    ebp
  4116d0:	hlt    
  4116d1:	(bad)  
  4116d3:	adc    DWORD PTR [edi+esi*4],eax
  4116d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116d7:	mov    edx,0x1dc9d260
  4116dc:	mov    al,ds:0x859acabe
  4116e1:	and    bh,BYTE PTR [ebx]
  4116e3:	dec    esi
  4116e4:	enter  0xbbf7,0x58
  4116e8:	pop    esp
  4116e9:	mov    dl,0xe4
  4116eb:	stos   DWORD PTR es:[edi],eax
  4116ec:	jo     0x411766
  4116ee:	enter  0x4a39,0xba
  4116f2:	add    eax,DWORD PTR [edi+0x40]
  4116f5:	inc    esp
  4116f6:	inc    edx
  4116f7:	jmp    0x411756
  4116f9:	not    DWORD PTR [edi+0x73]
  4116fc:	ins    BYTE PTR es:[edi],dx
  4116fd:	xor    esi,DWORD PTR [eax+esi*4+0x17f98fca]
  411704:	imul   esi,DWORD PTR [ebx+0x72f65429],0x8f49646d
  41170e:	jae    0x4116e6
  411710:	iret   
  411711:	jb     0x41178a
  411713:	popf   
  411714:	inc    ebp
  411715:	mov    dl,dl
  411717:	cwde   
  411718:	test   al,0xd4
  41171a:	retf   
  41171b:	aaa    
  41171c:	je     0x411733
  41171e:	jg     0x411797
  411720:	rcl    DWORD PTR [ebx+0x5130ec0f],0x2e
  411727:	xchg   edx,eax
  411728:	add    DWORD PTR [ebp+ebp*2+0x7eaf7823],0xcdb4150e
  411733:	mov    BYTE PTR [edx-0x32],bl
  411736:	outs   dx,BYTE PTR ds:[esi]
  411737:	adc    edx,ebx
  411739:	call   0xf3ae13bc
  41173e:	cmp    bh,bh
  411740:	lea    ecx,[edx+0x2aa5e352]
  411746:	pop    esp
  411747:	cmp    al,0x1
  411749:	mov    eax,0x4493aa64
  41174e:	inc    edx
  41174f:	mov    ebp,0x3681e07
  411754:	xor    al,0x40
  411756:	inc    edi
  411757:	into   
  411758:	stos   DWORD PTR es:[edi],eax
  411759:	inc    edi
  41175a:	div    edi
  41175c:	add    BYTE PTR [edx+0x430d10ef],al
  411762:	cmp    al,0xa5
  411764:	adc    DWORD PTR [ecx-0x6e],ebx
  411767:	mov    bl,0x2e
  411769:	xor    eax,0x6ed56b46
  41176e:	lahf   
  41176f:	adc    eax,DWORD PTR [ebx]
  411771:	cdq    
  411772:	lock cs and ecx,eax
  411776:	(bad)  
  411777:	div    BYTE PTR [edx+0x6f]
  41177a:	mov    eax,0x117cc13e
  41177f:	push   edx
  411780:	dec    ebx
  411781:	or     al,0x18
  411783:	sbb    bl,dl
  411785:	(bad)  
  411786:	dec    BYTE PTR [eax]
  411788:	or     dh,dh
  41178a:	out    0x28,eax
  41178c:	inc    esp
  41178d:	cmp    cl,ah
  41178f:	cmp    DWORD PTR [eax-0x1b],edi
  411792:	dec    esi
  411793:	lds    esp,FWORD PTR [ebx]
  411795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411796:	xchg   DWORD PTR [ebp-0x4804244a],esp
  41179c:	pop    ds
  41179d:	xchg   ebx,eax
  41179e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41179f:	and    BYTE PTR [ecx-0x78],0x5a
  4117a3:	out    dx,eax
  4117a4:	cs daa 
  4117a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a7:	les    edi,FWORD PTR [ecx+0x66786e7f]
  4117ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4117ae:	jns    0x411740
  4117b0:	sbb    ah,dl
  4117b2:	popf   
  4117b3:	ret    
  4117b4:	pop    ds
  4117b5:	in     eax,0x3d
  4117b7:	adc    ebp,eax
  4117b9:	addr16 cmp al,0xc1
  4117bc:	mov    WORD PTR [ebx],gs
  4117be:	mov    esi,0xb6a89f6
  4117c3:	push   ecx
  4117c4:	(bad)  [edi]
  4117c6:	fisttp WORD PTR [ecx+0x1d]
  4117c9:	fcom   DWORD PTR [esi+0x4485fa70]
  4117cf:	(bad)  
  4117d0:	loopne 0x411781
  4117d2:	mov    ah,0x22
  4117d4:	add    BYTE PTR [eax+0x22],ch
  4117d7:	cwde   
  4117d8:	clc    
  4117d9:	push   ds
  4117da:	int    0xc5
  4117dc:	add    esp,DWORD PTR ds:0xc67dd64c
  4117e2:	mov    BYTE PTR [ecx+0x20953f75],ah
  4117e8:	cmp    al,0x82
  4117ea:	adc    eax,0xdb400b3f
  4117ef:	pop    edx
  4117f0:	jg     0x411806
  4117f2:	shl    DWORD PTR [ecx+0x1bd5d17c],0x80
  4117f9:	hlt    
  4117fa:	loopne 0x4117b6
  4117fc:	aas    
  4117fd:	pop    ecx
  4117fe:	xchg   DWORD PTR [edx-0x29a8563c],ebx
  411804:	out    dx,eax
  411805:	pop    ss
  411806:	cmp    DWORD PTR cs:[eax],0x64
  41180a:	sub    dh,BYTE PTR [esi+0x6c860f32]
  411810:	pop    edx
  411811:	outs   dx,BYTE PTR ds:[esi]
  411812:	test   DWORD PTR [edi-0x35],edi
  411815:	xchg   esi,eax
  411816:	sahf   
  411817:	call   0xfbef:0xce881415
  41181e:	xor    al,BYTE PTR [edx]
  411820:	cmc    
  411821:	mov    eax,ds:0xd753372e
  411826:	nop
  411827:	push   es
  411828:	lahf   
  411829:	ret    0xedfc
  41182c:	push   0xfd98d2eb
  411831:	imul   esp,DWORD PTR [edi],0x77
  411834:	mov    esi,0x85c980b
  411839:	xchg   edx,eax
  41183a:	pop    ds
  41183b:	neg    DWORD PTR [edx]
  41183d:	std    
  41183e:	addr16 sbb al,0x44
  411841:	ret    
  411842:	push   es
  411843:	fist   WORD PTR [ebx-0x32eb20d2]
  411849:	xor    ecx,DWORD PTR [eax-0x1b]
  41184c:	int    0x36
  41184e:	mov    al,ds:0xeba1e5be
  411853:	cmp    ecx,DWORD PTR [eax-0x34aa16a1]
  411859:	icebp  
  41185a:	stc    
  41185b:	je     0x411871
  41185d:	add    al,0xe
  41185f:	push   esi
  411860:	jecxz  0x41182c
  411862:	push   es
  411863:	fild   WORD PTR [esi+esi*1-0x37]
  411867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411868:	sbb    BYTE PTR [ebp-0x2229083b],dl
  41186e:	add    al,0xe0
  411870:	neg    BYTE PTR [esp+edx*4-0x14]
  411874:	out    0x42,al
  411876:	and    ch,BYTE PTR [edx*4-0x41f456ac]
  41187d:	neg    cl
  41187f:	and    eax,0xb2dd4973
  411884:	push   cs
  411885:	ins    DWORD PTR es:[edi],dx
  411886:	lahf   
  411887:	cmp    BYTE PTR [edi],bl
  411889:	stc    
  41188a:	out    0x11,eax
  41188c:	push   edi
  41188d:	dec    edi
  41188e:	jp     0x41184f
  411890:	mov    eax,0xb8baf743
  411895:	jns    0x411826
  411897:	popf   
  411898:	ficomp DWORD PTR [esi-0x27]
  41189b:	icebp  
  41189c:	loop   0x411845
  41189e:	cmp    al,0x54
  4118a0:	out    0xf7,eax
  4118a2:	and    eax,0x4496600c
  4118a7:	xor    eax,0xa7aaaf6
  4118ac:	fwait
  4118ad:	aas    
  4118ae:	ins    BYTE PTR es:[edi],dx
  4118af:	addr16 cmp dl,dl
  4118b2:	mov    ebx,edx
  4118b4:	shl    ah,cl
  4118b6:	pop    ebx
  4118b7:	call   0xeb9e:0x5eb1df2
  4118be:	aas    
  4118bf:	add    BYTE PTR [ebx+0x3d073f06],0x2c
  4118c6:	jmp    0x35c5:0x59fe7675
  4118cd:	pop    es
  4118ce:	(bad)  
  4118cf:	mov    dh,0x4e
  4118d1:	fwait
  4118d2:	lds    edi,FWORD PTR [esi-0x7ea270d8]
  4118d8:	ins    BYTE PTR es:[edi],dx
  4118d9:	xchg   ebp,ecx
  4118db:	call   0x5a46f877
  4118e0:	stos   BYTE PTR es:[edi],al
  4118e1:	push   ebp
  4118e2:	add    DWORD PTR [ebp+0x11543422],esp
  4118e8:	fbstp  TBYTE PTR [edx]
  4118ea:	adc    cl,BYTE PTR [edi+0x4]
  4118ed:	leave  
  4118ee:	jp     0x41195c
  4118f0:	into   
  4118f1:	mov    ds:0x31344767,al
  4118f6:	loopne 0x4118d6
  4118f8:	ins    BYTE PTR es:[edi],dx
  4118f9:	xchg   ebx,eax
  4118fa:	lds    esp,FWORD PTR [ecx-0xddf992f]
  411900:	dec    edx
  411901:	xchg   esp,eax
  411902:	scas   al,BYTE PTR es:[edi]
  411903:	not    BYTE PTR [ebx+eiz*4]
  411906:	mov    edi,es
  411908:	bound  eax,QWORD PTR [edi+eax*8]
  41190b:	outs   dx,DWORD PTR ds:[esi]
  41190c:	ror    DWORD PTR [ebp+0x65b48de1],0x89
  411913:	adc    esp,ebp
  411915:	mov    edx,0xffdb6bf6
  41191a:	outs   dx,DWORD PTR ds:[esi]
  41191b:	xor    bh,al
  41191d:	dec    ebp
  41191e:	adc    al,0x45
  411920:	pop    ds
  411921:	fisubr DWORD PTR [edx-0x62]
  411924:	test   BYTE PTR [edx+0x61929a04],dl
  41192a:	add    al,0x8e
  41192c:	add    DWORD PTR [edi+0x4db5e24],edi
  411932:	xor    BYTE PTR [edx-0x10cb6f70],ah
  411938:	xchg   BYTE PTR [eax-0x7],cl
  41193b:	out    dx,al
  41193c:	je     0x411938
  41193e:	sub    dl,BYTE PTR [edx]
  411940:	sbb    DWORD PTR [edx+0x393ff75b],0xffffffc2
  411947:	call   0x4f91:0xb7d59fd7
  41194e:	dec    esi
  41194f:	outs   dx,DWORD PTR ds:[esi]
  411950:	jle    0x41191b
  411952:	test   al,al
  411954:	and    cl,al
  411956:	test   eax,0xaa7a649e
  41195b:	or     DWORD PTR [esi+eax*4-0x13863e4b],0xb3460640
  411966:	ret    
  411967:	data16 (bad) 
  411969:	cli    
  41196a:	adc    BYTE PTR [eax+0x5e406d25],bh
  411970:	jp     0x4119b1
  411972:	call   0x23aff08d
  411977:	xor    al,0xda
  411979:	mov    gs,ebp
  41197b:	and    eax,0x6a5a94b3
  411980:	jg     0x41193e
  411982:	adc    al,BYTE PTR ds:0x382d630e
  411988:	mov    ebx,0x33f06707
  41198d:	xor    al,0xb8
  41198f:	push   ecx
  411990:	pop    ebp
  411991:	mov    edx,0x2e2392b4
  411996:	(bad)
  411999:	inc    esi
  41199a:	and    DWORD PTR [eax+0x34],eax
  41199d:	sub    edx,ecx
  41199f:	adc    al,0xc5
  4119a1:	mov    esi,0x89a72946
  4119a6:	push   ebp
  4119a7:	aad    0xfa
  4119a9:	in     al,dx
  4119aa:	inc    ebp
  4119ab:	lods   al,BYTE PTR ds:[esi]
  4119ac:	xor    al,0x6a
  4119ae:	xchg   edi,eax
  4119af:	jae    0x411969
  4119b1:	mov    ebx,0xa1f8a615
  4119b6:	rcl    BYTE PTR [edi-0x29985f6e],1
  4119bc:	jmp    0x32e86eff
  4119c1:	gs psllw mm2,mm0
  4119c5:	xlat   BYTE PTR ds:[ebx]
  4119c6:	retf   0x3860
  4119c9:	cmp    edx,DWORD PTR [esi+ebp*8+0x1c]
  4119cd:	jmp    0x411997
  4119cf:	fistp  QWORD PTR [ecx+0x63019341]
  4119d5:	mov    bl,0x58
  4119d7:	pop    es
  4119d8:	call   0xb959:0xa0a5adca
  4119df:	jmp    0xe193:0xe9fc9cf3
  4119e6:	sbb    ecx,edi
  4119e8:	das    
  4119e9:	sbb    BYTE PTR [esi+0x36188db8],bh
  4119ef:	jp     0x4119eb
  4119f1:	jl     0x411a37
  4119f3:	mov    ebp,0x264309a0
  4119f8:	push   edi
  4119f9:	(bad)  
  4119fa:	leave  
  4119fb:	mov    esi,0xa81dfe2d
  411a00:	dec    esp
  411a01:	add    eax,0xe0901142
  411a06:	scas   al,BYTE PTR es:[edi]
  411a07:	sub    DWORD PTR ds:0x883d4f50,ecx
  411a0d:	sbb    eax,0xb224c1e7
  411a12:	dec    ebp
  411a13:	stos   BYTE PTR es:[edi],al
  411a14:	push   ebx
  411a15:	jns    0x4119b4
  411a17:	xor    al,BYTE PTR [ebx+0x2a]
  411a1a:	push   esp
  411a1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a1c:	jb     0x411a3e
  411a1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a1f:	xlat   BYTE PTR ds:[ebx]
  411a20:	mov    ebp,0xd18b5a3
  411a25:	mov    edi,0x78990c01
  411a2a:	pop    es
  411a2b:	xor    eax,0xe16b3b66
  411a30:	loopne 0x411a67
  411a32:	xchg   al,dl
  411a34:	mov    ebp,DWORD PTR [edi+0x247adcb9]
  411a3a:	sahf   
  411a3b:	push   esi
  411a3c:	pop    esp
  411a3d:	mov    eax,DWORD PTR [ebx-0x42cf1edd]
  411a43:	mov    ch,0x81
  411a45:	fucomip st,st(7)
  411a47:	jne    0x4119ef
  411a49:	out    dx,al
  411a4a:	add    cl,bl
  411a4c:	xchg   esi,edi
  411a4e:	aam    0xe5
  411a50:	jg     0x411a43
  411a52:	xchg   edx,eax
  411a53:	aad    0x3f
  411a55:	arpl   sp,bx
  411a57:	shl    DWORD PTR [ecx+0x6fbb9b31],cl
  411a5d:	jo     0x411a58
  411a5f:	pop    ss
  411a60:	mov    bh,0xa8
  411a62:	f2xm1  
  411a65:	sbb    ebx,DWORD PTR [ebx+0x6a]
  411a68:	mov    ds:0x42e470ae,al
  411a6d:	cdq    
  411a6e:	cli    
  411a6f:	dec    esi
  411a70:	fdivr  DWORD PTR [esi]
  411a72:	inc    esi
  411a73:	imul   esp,DWORD PTR [edx+0x13083d13],0xffffffda
  411a7a:	daa    
  411a7b:	out    dx,al
  411a7c:	cmp    eax,0x3cd8fe50
  411a81:	sbb    al,0xfa
  411a83:	sbb    ch,al
  411a85:	and    dh,BYTE PTR [esi-0x363eb45b]
  411a8b:	daa    
  411a8c:	mov    esi,0x960241ae
  411a91:	mov    dh,0xda
  411a93:	pushf  
  411a94:	sbb    BYTE PTR [edx+edi*1+0x377983bc],dh
  411a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a9c:	sahf   
  411a9d:	std    
  411a9e:	inc    edi
  411a9f:	mov    ecx,0xcb8b29b7
  411aa4:	push   eax
  411aa5:	xchg   esi,eax
  411aa6:	cmp    eax,ebp
  411aa8:	and    eax,0x888f1526
  411aad:	icebp  
  411aae:	sub    BYTE PTR [ecx],dh
  411ab0:	popaw  
  411ab2:	arpl   WORD PTR [ebp-0x7283149f],di
  411ab8:	xor    esi,eax
  411aba:	sub    ebp,DWORD PTR [ebx+esi*1]
  411abd:	adc    esp,DWORD PTR [esi]
  411abf:	xor    al,0xeb
  411ac1:	inc    esp
  411ac2:	lods   al,BYTE PTR ds:[esi]
  411ac3:	rcl    BYTE PTR [eax],cl
  411ac5:	pushf  
  411ac6:	jle    0x411a89
  411ac8:	xor    edi,DWORD PTR [edi+0x1b]
  411acb:	push   edx
  411acc:	and    al,0xe5
  411ace:	sub    BYTE PTR ds:0xfd73f571,al
  411ad4:	pop    esi
  411ad5:	sahf   
  411ad6:	add    al,0xd6
  411ad8:	inc    edx
  411ad9:	or     eax,0xb991f8c4
  411ade:	enter  0xb10f,0xa7
  411ae2:	dec    edx
  411ae3:	lods   eax,DWORD PTR ds:[esi]
  411ae4:	inc    esi
  411ae5:	inc    ebx
  411ae6:	loopne 0x411b4b
  411ae8:	push   ecx
  411ae9:	push   esp
  411aea:	jo     0x411a6c
  411aec:	arpl   WORD PTR [eax+0x5d9a6624],sp
  411af2:	push   esp
  411af3:	xor    BYTE PTR [edx-0x3f],0x15
  411af7:	cdq    
  411af8:	and    al,BYTE PTR [ebx+0x355a2d68]
  411afe:	jnp    0x411ac8
  411b00:	xchg   esi,eax
  411b01:	rcr    ecx,1
  411b03:	pushf  
  411b04:	mov    eax,0x44666e43
  411b09:	jl     0x411add
  411b0b:	inc    edi
  411b0c:	sub    BYTE PTR [ebp+0x30],0x66
  411b10:	cli    
  411b11:	dec    ecx
  411b12:	mov    dl,dl
  411b14:	dec    ecx
  411b15:	fdiv   QWORD PTR [ecx-0x62ceaf20]
  411b1b:	lock popa 
  411b1d:	(bad)  
  411b1e:	fst    DWORD PTR [ebx-0x5f]
  411b21:	jge    0x411abf
  411b23:	mov    WORD PTR [edi],cs
  411b25:	test   BYTE PTR [edx],ah
  411b27:	jle    0x411ab9
  411b29:	add    BYTE PTR [esi-0x7b91201d],bl
  411b2f:	adc    al,0x2a
  411b32:	iret   
  411b33:	inc    eax
  411b34:	bound  esp,QWORD PTR [edx-0x32]
  411b37:	neg    BYTE PTR [ebp+0x3e6581a6]
  411b3d:	cmp    BYTE PTR [esi-0x3bdc9d7],bh
  411b43:	loopne 0x411b2b
  411b45:	or     esi,DWORD PTR [edi]
  411b47:	jp     0x411b14
  411b49:	loope  0x411b7c
  411b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b4c:	in     eax,0xdd
  411b4e:	retf   0x75f
  411b51:	lods   eax,DWORD PTR ds:[esi]
  411b52:	xor    DWORD PTR [eax-0x15],esp
  411b55:	fwait
  411b56:	jnp    0x411b47
  411b58:	adc    BYTE PTR [edx],0x40
  411b5b:	xchg   ecx,eax
  411b5c:	jmp    0xcc0c6a28
  411b61:	cdq    
  411b62:	in     eax,0x68
  411b64:	retf   0x1798
  411b67:	jmp    0x411b2f
  411b69:	sub    esp,edx
  411b6b:	sar    BYTE PTR [edi-0x35],cl
  411b6e:	pop    ss
  411b6f:	adc    dh,0x3d
  411b72:	or     al,0xf9
  411b74:	dec    eax
  411b75:	in     eax,dx
  411b76:	push   ebx
  411b77:	dec    ebp
  411b78:	sahf   
  411b79:	mov    ah,0xae
  411b7b:	lods   al,BYTE PTR ds:[esi]
  411b7c:	out    dx,eax
  411b7d:	call   0xdab4:0x4a1e9cc7
  411b84:	shl    BYTE PTR [esi],1
  411b86:	and    DWORD PTR [eax-0x2c],eax
  411b89:	mov    esi,0xcad8570a
  411b8e:	mov    ds:0xf3328cf8,eax
  411b93:	mov    BYTE PTR [edx+eiz*1],0xc5
  411b97:	shr    ah,1
  411b99:	mov    esi,0x8a0c4640
  411b9e:	in     al,dx
  411b9f:	mov    esp,0x173e5c2d
  411ba4:	imul   ebp,esi,0x9db7787a
  411baa:	cmp    al,0xf
  411bac:	call   0x8315cb70
  411bb1:	and    eax,0x87321b6d
  411bb6:	mov    edx,0xbfa1877e
  411bbb:	stc    
  411bbc:	jecxz  0x411bfc
  411bbe:	pop    edi
  411bbf:	dec    esi
  411bc0:	mov    WORD PTR ds:0x2e06b853,gs
  411bc6:	mov    gs,eax
  411bc8:	cdq    
  411bc9:	test   al,0xac
  411bcb:	(bad)  
  411bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bcd:	ja     0x411b59
  411bcf:	sbb    al,BYTE PTR [ebp+ebp*4-0x8]
  411bd3:	xchg   ebp,eax
  411bd4:	sub    ebp,DWORD PTR [eax+0x3]
  411bd7:	mov    al,0xa4
  411bd9:	and    ebx,DWORD PTR [eax]
  411bdb:	and    al,BYTE PTR [ebx+0x31c151ff]
  411be1:	pop    ds
  411be2:	je     0x411bc9
  411be4:	fucomp st(4)
  411be6:	ins    BYTE PTR es:[edi],dx
  411be7:	test   ah,0x92
  411bea:	mov    bl,0x99
  411bec:	pop    ebx
  411bed:	out    0x69,al
  411bef:	mov    edx,0x5ce290e6
  411bf4:	js     0x411bc7
  411bf6:	sbb    BYTE PTR [eax-0x5c],ah
  411bf9:	cmc    
  411bfa:	sub    esi,ecx
  411bfc:	dec    edx
  411bfd:	jg     0x411c14
  411bff:	frstor [ecx-0x37343b13]
  411c05:	mov    ecx,0xb95cd937
  411c0a:	ss dec cl
  411c0d:	sub    DWORD PTR [edi+0x41],eax
  411c10:	add    esi,0xffffff80
  411c13:	push   esp
  411c14:	nop
  411c15:	inc    edx
  411c16:	js     0x411bee
  411c18:	fwait
  411c19:	mov    ah,0x52
  411c1b:	mov    ah,0x8d
  411c1d:	and    eax,0x6693a61e
  411c22:	inc    edi
  411c23:	pop    ecx
  411c24:	or     BYTE PTR [ebp+0x6afabacb],0x6c
  411c2b:	mov    eax,0x7e5ccce9
  411c30:	mov    WORD PTR [edi+0x7ce0039a],fs
  411c36:	in     al,dx
  411c37:	not    BYTE PTR [eax-0x6caa8a36]
  411c3d:	and    al,BYTE PTR [edx]
  411c3f:	push   ds
  411c40:	adc    BYTE PTR [ebp-0x65],ah
  411c43:	sub    bl,BYTE PTR [edx]
  411c45:	dec    esi
  411c46:	push   es
  411c47:	xor    al,0x3e
  411c49:	mov    ebx,0xba2a260a
  411c4e:	and    al,0xfc
  411c50:	mov    gs,edi
  411c52:	pop    ebx
  411c53:	sub    BYTE PTR [edi-0x46],0x73
  411c57:	jns    0x411c04
  411c59:	fdivp  st(2),st
  411c5b:	jb     0x411c66
  411c5d:	fisttp DWORD PTR [eax-0x72f3d8b6]
  411c63:	loop   0x411c12
  411c65:	cmp    DWORD PTR [ecx+0x63],ebp
  411c68:	call   FWORD PTR [edx+0x4fb30de]
  411c6e:	aam    0xbe
  411c70:	push   edx
  411c71:	aad    0xbe
  411c73:	in     al,dx
  411c74:	or     esp,DWORD PTR [edx-0x53]
  411c77:	push   ecx
  411c78:	das    
  411c79:	adc    BYTE PTR [ebp+edx*1+0x30d69e6e],bh
  411c80:	in     al,dx
  411c81:	lods   al,BYTE PTR ds:[esi]
  411c82:	ja     0x411cfe
  411c84:	adc    ebx,DWORD PTR [esp+esi*2+0x1c]
  411c88:	cli    
  411c89:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c8a:	fistp  WORD PTR [ecx-0x1]
  411c8d:	loop   0x411c73
  411c8f:	jle    0x411ca9
  411c91:	mov    BYTE PTR [ebx+eiz*8+0x3d],bl
  411c95:	pusha  
  411c96:	dec    ebx
  411c97:	sysret 
  411c99:	mov    edi,0x25baa0aa
  411c9e:	jmp    0x4056:0x8c9d79b4
  411ca5:	lods   al,BYTE PTR ds:[esi]
  411ca6:	out    dx,al
  411ca7:	nop
  411ca8:	add    eax,0x15007c8
  411cad:	imul   DWORD PTR [esi]
  411caf:	aaa    
  411cb0:	push   ebp
  411cb1:	push   ebp
  411cb2:	xchg   edi,eax
  411cb3:	into   
  411cb4:	inc    ebp
  411cb5:	in     eax,0xa
  411cb7:	mov    ebp,ss
  411cb9:	sub    DWORD PTR [esi-0x28],ecx
  411cbc:	mov    DWORD PTR [ebx+edx*1-0x76b7d8b6],esp
  411cc3:	stos   BYTE PTR es:[edi],al
  411cc4:	adc    eax,DWORD PTR [ecx]
  411cc6:	ror    DWORD PTR [edi+edi*1],0x12
  411cca:	call   0x7a4d761
  411ccf:	out    0x3c,eax
  411cd1:	xchg   esi,eax
  411cd2:	xchg   DWORD PTR [ebx-0x7d634fc],ecx
  411cd8:	retf   
  411cd9:	cdq    
  411cda:	icebp  
  411cdb:	imul   ebx,DWORD PTR [esi-0x23b4e5c0],0xffffffc1
  411ce2:	iret   
  411ce3:	mov    eax,ds:0x611d9cb4
  411ce8:	(bad)  
  411ce9:	std    
  411cea:	push   esi
  411ceb:	inc    eax
  411cec:	push   0xffffffd6
  411cee:	jnp    0x411d60
  411cf0:	sbb    al,BYTE PTR [eax-0x3f]
  411cf3:	pop    esp
  411cf4:	sbb    ebp,DWORD PTR [ebx-0x1752fe0b]
  411cfa:	mov    ebp,0x6711e91f
  411cff:	daa    
  411d00:	dec    eax
  411d01:	retf   0x2f9c
  411d04:	add    cl,BYTE PTR [ebp-0x5fff2df5]
  411d0a:	mov    ds:0xb3f5f2f0,eax
  411d0f:	scas   al,BYTE PTR es:[edi]
  411d10:	shl    DWORD PTR [esi-0x33],1
  411d13:	ret    
  411d14:	mov    al,0x30
  411d16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411d17:	inc    eax
  411d18:	jmp    0x8507:0x5045d0dd
  411d1f:	es pop es
  411d21:	(bad)  
  411d22:	leave  
  411d23:	mov    BYTE PTR [esi-0x61fec89e],0x29
  411d2a:	jmp    0xafef6d46
  411d2f:	sub    DWORD PTR [esi],esp
  411d31:	repz xchg ebp,eax
  411d33:	mov    esp,ecx
  411d35:	push   ds
  411d36:	loop   0x411d58
  411d38:	retf   0xd48d
  411d3b:	lahf   
  411d3c:	sbb    cl,BYTE PTR [edi+0x9]
  411d3f:	add    al,0x61
  411d41:	push   esi
  411d42:	jnp    0x411d23
  411d44:	enter  0x209b,0xb5
  411d48:	and    al,0x3f
  411d4a:	arpl   WORD PTR [ebx+0x40],si
  411d4d:	fwait
  411d4e:	jg     0x411cf4
  411d50:	dec    ebp
  411d51:	and    ecx,DWORD PTR [esi+ebx*2+0x73]
  411d55:	rcr    DWORD PTR [ebx-0x66da516b],cl
  411d5b:	xchg   edi,eax
  411d5c:	lock ss (bad) 
  411d60:	add    eax,0x73654672
  411d65:	cmp    al,0x76
  411d67:	aad    0xb2
  411d69:	test   al,0x29
  411d6b:	bound  eax,QWORD PTR [eax]
  411d6d:	mov    ecx,0xa6c64e4e
  411d72:	nop
  411d73:	xchg   edi,eax
  411d74:	mov    fs,esi
  411d76:	popa   
  411d77:	inc    ecx
  411d78:	sti    
  411d79:	mov    ds:0x7df0e3b4,eax
  411d7e:	call   0x7e0d0fb3
  411d83:	push   ebx
  411d84:	xchg   ebx,eax
  411d85:	push   eax
  411d86:	lods   al,BYTE PTR ds:[esi]
  411d87:	mov    ebp,0x49cdd14d
  411d8c:	inc    esp
  411d8d:	dec    esp
  411d8e:	cmp    al,BYTE PTR [ebp+0x51]
  411d91:	(bad)
  411d95:	and    edx,ecx
  411d97:	cmp    al,0xe2
  411d99:	outs   dx,BYTE PTR ds:[esi]
  411d9a:	pcmpgtw mm6,QWORD PTR [edx]
  411d9d:	xchg   esp,eax
  411d9e:	retf   
  411d9f:	div    dl
  411da1:	mov    edx,cs
  411da3:	cmp    eax,0x572d9bb0
  411da8:	push   edx
  411da9:	sti    
  411daa:	mov    bh,0xda
  411dac:	ret    0x3854
  411daf:	inc    esi
  411db0:	aad    0xe1
  411db2:	ins    DWORD PTR es:[edi],dx
  411db3:	test   eax,0x3d517ebc
  411db8:	pusha  
  411db9:	pushf  
  411dba:	adc    DWORD PTR [edx-0x6f],eax
  411dbd:	mov    ch,0xea
  411dbf:	push   edx
  411dc0:	js     0x411d50
  411dc2:	out    dx,eax
  411dc3:	inc    edi
  411dc4:	push   es
  411dc5:	cmp    di,di
  411dc8:	test   eax,0x9e2ad3bc
  411dcd:	in     eax,0x5d
  411dcf:	adc    ah,BYTE PTR [eax-0x6498f9b4]
  411dd5:	xchg   BYTE PTR [ebx-0x77972819],cl
  411ddb:	aaa    
  411ddc:	cmp    al,0x89
  411dde:	cdq    
  411ddf:	ss loopne 0x411e03
  411de2:	push   edi
  411de3:	or     DWORD PTR [esi],0x73
  411de6:	cmp    dh,BYTE PTR [edi+0x72]
  411de9:	or     edx,DWORD PTR [eax+0x4854e4b4]
  411def:	xlat   BYTE PTR ds:[ebx]
  411df0:	int    0x24
  411df2:	ds dec ebp
  411df4:	inc    ecx
  411df5:	pop    ds
  411df6:	sahf   
  411df7:	data16 sti 
  411df9:	adc    bl,BYTE PTR [ebx-0x1cb5a95e]
  411dff:	sbb    al,0x15
  411e01:	(bad)  
  411e02:	aas    
  411e03:	cld    
  411e04:	jl     0x411e48
  411e06:	out    0x9a,eax
  411e08:	cmp    ah,BYTE PTR es:[edi-0x6d6015e3]
  411e0f:	imul   eax,DWORD PTR [esp+edx*4+0x1c3f8fad],0x4d
  411e17:	mov    dl,0x9d
  411e19:	adc    DWORD PTR [ecx-0x3af630e1],ebx
  411e1f:	adc    DWORD PTR [ecx],0xffffffdc
  411e22:	push   cs
  411e23:	jg     0x411e79
  411e25:	imul   edx,DWORD PTR [ebp+edx*4-0xc],0x6558acce
  411e2d:	scas   al,BYTE PTR es:[edi]
  411e2e:	retf   
  411e2f:	jp     0x411e14
  411e31:	enter  0x8f80,0x54
  411e35:	sbb    DWORD PTR [ebx+0x5],0xa0d81990
  411e3c:	add    DWORD PTR [ebp+ecx*2+0x6f],eax
  411e40:	shl    esp,cl
  411e42:	xchg   di,ax
  411e44:	in     al,dx
  411e45:	mov    eax,ds:0x838321a9
  411e4a:	aam    0x4b
  411e4c:	push   ebp
  411e4d:	mov    bh,0x70
  411e4f:	std    
  411e50:	stos   BYTE PTR es:[edi],al
  411e51:	jecxz  0x411ebb
  411e53:	sub    al,0x1d
  411e56:	xchg   DWORD PTR [edx],esi
  411e58:	mov    ebx,DWORD PTR [ebp+0xf7764e1]
  411e5e:	iret   
  411e5f:	cdq    
  411e60:	mov    ebp,0xf7208fef
  411e65:	pop    esi
  411e66:	data16 scas al,BYTE PTR es:[edi]
  411e68:	mov    edx,0x2b0e23be
  411e6d:	gs sahf 
  411e6f:	xchg   ecx,eax
  411e70:	inc    esp
  411e71:	rcr    ecx,0xd
  411e74:	aam    0xfd
  411e76:	retf   0x7b56
  411e79:	or     al,0xc3
  411e7b:	es sbb al,0x4
  411e7e:	hlt    
  411e7f:	push   esp
  411e80:	inc    ecx
  411e81:	ja     0x411e73
  411e83:	jne    0x411e9a
  411e85:	xchg   BYTE PTR [edi],ah
  411e87:	mov    al,0xa
  411e89:	sub    ebp,DWORD PTR [ecx]
  411e8b:	push   esi
  411e8c:	(bad)
  411e8f:	adc    al,0x75
  411e91:	add    eax,0x46bf5a2
  411e96:	lods   al,BYTE PTR ds:[esi]
  411e97:	stos   DWORD PTR es:[edi],eax
  411e98:	xor    DWORD PTR [edx+0x4a],0xd838d54e
  411e9f:	adc    cl,BYTE PTR [ebx+0x3c]
  411ea2:	retf   0x2ad6
  411ea5:	out    0x28,eax
  411ea7:	loope  0x411e2e
  411ea9:	inc    ebx
  411eaa:	push   esi
  411eab:	mov    dh,0xd6
  411ead:	gs xchg esp,eax
  411eaf:	mov    dl,0x83
  411eb1:	xchg   DWORD PTR [ecx+edx*2-0x2a],ecx
  411eb5:	je     0x411efa
  411eb7:	outs   dx,DWORD PTR ds:[esi]
  411eb8:	xchg   ecx,eax
  411eb9:	data16 jnp 0x411f09
  411ebc:	xchg   ebx,eax
  411ebd:	shr    DWORD PTR [ebx+0x4b],0xae
  411ec1:	jle    0x411f36
  411ec3:	mov    eax,ds:0x9b0451f7
  411ec8:	mov    al,0xe
  411eca:	icebp  
  411ecb:	cmc    
  411ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ecd:	rol    eax,1
  411ecf:	adc    eax,0x815aeeb4
  411ed4:	into   
  411ed5:	dec    ebx
  411ed6:	add    BYTE PTR [esi+eiz*8],0x2f
  411eda:	aam    0xa
  411edc:	retf   
  411edd:	enter  0x3eb9,0x44
  411ee1:	sbb    eax,0xed631314
  411ee6:	rcl    ah,0x77
  411ee9:	add    DWORD PTR [ebp+ebp*2-0x4b10f07a],0xf64f6aab
  411ef4:	add    BYTE PTR [esi+0x67cb841a],ch
  411efa:	sti    
  411efb:	enter  0xa70e,0x3c
  411eff:	imul   esi,DWORD PTR [edi+0x11],0xffffff8d
  411f03:	addr16 or cl,dh
  411f06:	dec    ebx
  411f07:	stos   BYTE PTR es:[edi],al
  411f08:	cmp    ch,al
  411f0a:	push   esi
  411f0b:	and    al,BYTE PTR [esi+0x7d]
  411f0e:	cmc    
  411f0f:	cmp    BYTE PTR [esi+edx*8],0x24
  411f13:	adc    al,0xde
  411f15:	jne    0x411ecf
  411f17:	inc    ebx
  411f18:	in     al,0xff
  411f1a:	xor    eax,0x13fa0663
  411f1f:	xor    ecx,ebx
  411f21:	xchg   ebp,eax
  411f22:	stc    
  411f23:	inc    ecx
  411f24:	mov    ds:0xef528be2,al
  411f29:	or     BYTE PTR [edx+eiz*8],bh
  411f2c:	lods   al,BYTE PTR ds:[esi]
  411f2d:	shl    ah,0x96
  411f30:	or     eax,0xccb6c149
  411f35:	push   edi
  411f36:	dec    edi
  411f37:	dec    ebp
  411f38:	out    0xd5,al
  411f3a:	arpl   cx,cx
  411f3c:	std    
  411f3d:	std    
  411f3e:	dec    edx
  411f3f:	loop   0x411ef2
  411f41:	stc    
  411f42:	and    BYTE PTR [ecx],ch
  411f44:	test   BYTE PTR [eax-0x44a6535e],dh
  411f4a:	in     al,dx
  411f4b:	pop    ecx
  411f4c:	js     0x411f1c
  411f4e:	ss jnp 0x411f38
  411f51:	or     DWORD PTR [esi+0x37],eax
  411f54:	retf   
  411f55:	fidivr WORD PTR [esp+eax*1+0x2]
  411f59:	jne    0x411f2c
  411f5b:	adc    DWORD PTR [edi+eiz*2+0x34],eax
  411f5f:	aad    0xae
  411f61:	mov    WORD PTR cs:[edx-0x8],?
  411f65:	pop    eax
  411f66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411f67:	sbb    BYTE PTR [edi-0x1],dh
  411f6a:	push   es
  411f6b:	shr    DWORD PTR es:[eax-0x3a],1
  411f6f:	pop    edi
  411f70:	add    al,0x89
  411f72:	lahf   
  411f73:	mov    esp,0xa9838efe
  411f78:	jo     0x411fc8
  411f7a:	xchg   edx,eax
  411f7b:	inc    edi
  411f7c:	mov    al,0xc4
  411f7e:	mov    cl,0x20
  411f80:	pop    edi
  411f81:	xchg   DWORD PTR [ebx],esi
  411f83:	aad    0x80
  411f85:	and    al,0x6c
  411f87:	and    BYTE PTR [eax+0x13],0x4a
  411f8b:	cld    
  411f8c:	mov    es,WORD PTR [edi-0x6f]
  411f8f:	mov    edx,0x81f02b65
  411f94:	aam    0x44
  411f96:	aam    0xc0
  411f98:	add    BYTE PTR [esi],0xe2
  411f9b:	and    DWORD PTR [esp+eiz*2+0x1c],esp
  411f9f:	and    eax,0x2fdf15fa
  411fa4:	cld    
  411fa5:	pop    es
  411fa6:	fcmovbe st,st(0)
  411fa8:	into   
  411fa9:	stos   BYTE PTR es:[edi],al
  411faa:	push   0xffffffd5
  411fac:	lahf   
  411fad:	pop    ecx
  411fae:	add    eax,0xc7b7412c
  411fb3:	leave  
  411fb4:	xlat   BYTE PTR ds:[ebx]
  411fb5:	rsm    
  411fb7:	xchg   BYTE PTR [eax+0xb],bh
  411fba:	(bad)  
  411fbb:	(bad)  
  411fbc:	cmp    al,0x9e
  411fbe:	dec    BYTE PTR [esi+ecx*1]
  411fc1:	ss retf 
  411fc3:	mov    al,ds:0x169a2bc9
  411fc8:	mov    edi,0xb22126a1
  411fcd:	add    DWORD PTR [ecx+0x47],0x3b
  411fd1:	fwait
  411fd2:	push   esi
  411fd3:	and    al,0x5f
  411fd5:	js     0x412028
  411fd7:	popf   
  411fd8:	dec    ebp
  411fd9:	lods   eax,DWORD PTR ds:[esi]
  411fda:	jl     0x411f5d
  411fdc:	jg     0x411fc7
  411fde:	int    0x8a
  411fe0:	mov    dl,0xd0
  411fe2:	rcl    DWORD PTR [edx+0x7b984156],cl
  411fe8:	sbb    al,0xca
  411fea:	ds push 0xffffff97
  411fed:	dec    edx
  411fee:	daa    
  411fef:	das    
  411ff0:	mov    ebx,0x706c22cb
  411ff5:	sub    edi,esi
  411ff7:	cmp    DWORD PTR ds:0xb631b917,esi
  411ffd:	jmp    0x411fac
  411fff:	ror    DWORD PTR [ebx+0x58dcb5aa],1
  412005:	inc    edx
  412006:	or     eax,0x753fecfe
  41200b:	mov    ah,0xe6
  41200d:	mov    ebx,0xf76c4ec9
  412012:	popf   
  412013:	mov    cs,WORD PTR [edi-0x1e]
  412016:	jp     0x41200f
  412018:	stos   DWORD PTR es:[edi],eax
  412019:	sub    al,0xac
  41201b:	pop    ebp
  41201c:	test   al,0x3d
  41201e:	(bad)  
  41201f:	push   ecx
  412020:	(bad)  
  412021:	jo     0x41208b
  412023:	pop    edi
  412024:	mov    al,ds:0x40f8d8ac
  412029:	ins    BYTE PTR es:[edi],dx
  41202a:	cmp    al,0x68
  41202c:	mov    ds:0x216d2d71,eax
  412031:	das    
  412032:	inc    edx
  412033:	retf   0xbbf2
  412036:	adc    ecx,edi
  412038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412039:	cmp    al,0x8e
  41203b:	fwait
  41203c:	push   es
  41203d:	leave  
  41203e:	neg    BYTE PTR [edx+0x6a]
  412041:	xchg   ecx,eax
  412042:	dec    eax
  412043:	ins    DWORD PTR es:[edi],dx
  412044:	push   ebp
  412045:	push   ds
  412046:	aam    0x9e
  412048:	sbb    dl,BYTE PTR [ebp+0x6d]
  41204b:	xchg   ebp,esi
  41204d:	ret    
  41204e:	xchg   DWORD PTR [edx+ecx*4+0x62],edi
  412052:	mov    ah,0xfd
  412054:	dec    eax
  412055:	adc    eax,0x73dfbea7
  41205a:	add    edx,eax
  41205c:	or     DWORD PTR [eax],ebx
  41205e:	mov    al,ds:0x18d15b3
  412063:	shl    esi,1
  412065:	popf   
  412066:	and    cl,al
  412068:	dec    ebx
  412069:	mov    DWORD PTR [edx-0x29],ebp
  41206c:	in     eax,dx
  41206d:	inc    ebx
  41206e:	or     BYTE PTR [ebx*2+0x23b030f2],0x14
  412076:	ds (bad) 
  412078:	sub    eax,0x6b93555d
  41207d:	mov    ecx,0x3d945423
  412082:	sub    ecx,DWORD PTR ds:0x55183a51
  412088:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412089:	retf   
  41208a:	xchg   DWORD PTR gs:[ebp-0x34],ebx
  41208e:	xchg   esp,eax
  41208f:	add    BYTE PTR [eax-0x11],dl
  412092:	aam    0xeb
  412094:	or     al,0xf0
  412096:	and    DWORD PTR [edx+0x609e451e],edx
  41209c:	les    edx,FWORD PTR [ecx-0x63]
  41209f:	sbb    ah,dh
  4120a1:	dec    edi
  4120a2:	fist   DWORD PTR [esi+0x10]
  4120a5:	dec    eax
  4120a6:	out    0x43,eax
  4120a8:	aam    0x3b
  4120aa:	test   bl,0x90
  4120ad:	sahf   
  4120ae:	sub    al,BYTE PTR [edx]
  4120b0:	push   ss
  4120b1:	jp     0x4120d7
  4120b3:	(bad)  
  4120b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120b5:	mov    ?,ebx
  4120b7:	sbb    BYTE PTR [eax+edi*4+0x439e7738],0x97
  4120bf:	sub    bl,BYTE PTR [ebx]
  4120c1:	mov    edx,0x5fe87d23
  4120c6:	jg     0x4120ad
  4120c8:	dec    ebx
  4120c9:	lahf   
  4120ca:	mov    ebx,DWORD PTR [edi-0x71d9c6e8]
  4120d0:	es out 0x59,al
  4120d3:	lea    edx,[edx+esi*8+0x5f]
  4120d7:	scas   eax,DWORD PTR es:[edi]
  4120d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120d9:	and    eax,0xf2d20c8
  4120de:	scas   eax,DWORD PTR es:[edi]
  4120df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120e0:	xchg   ebx,eax
  4120e1:	icebp  
  4120e2:	into   
  4120e3:	sahf   
  4120e4:	aas    
  4120e5:	out    0x57,al
  4120e7:	mov    ds:0x6051fb2b,al
  4120ec:	ja     0x4120cd
  4120ee:	mov    DWORD PTR [ebp+0x120ddb52],esp
  4120f4:	out    0x7a,eax
  4120f6:	pop    ebx
  4120f7:	adc    eax,0xecc1d83a
  4120fc:	(bad)  
  4120fd:	jmp    0x2828296d
  412102:	push   es
  412103:	fmul   QWORD PTR [eax+0x38]
  412106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412107:	or     cl,BYTE PTR [ebx+0x31]
  41210a:	ss call 0x8f21c4ea
  412110:	pop    esi
  412111:	les    ecx,FWORD PTR [bp+0x2900]
  412116:	jmp    0x1c48ea5d
  41211b:	icebp  
  41211c:	pop    edx
  41211d:	jo     0x4120cb
  41211f:	inc    eax
  412120:	mov    ebx,0x564fecbb
  412125:	(bad)  
  412126:	es add ecx,ebp
  412129:	jmp    0x412104
  41212b:	xchg   esp,eax
  41212c:	push   esp
  41212d:	pop    edi
  41212e:	stc    
  41212f:	popa   
  412130:	(bad)  
  412131:	loopne 0x4120ea
  412133:	push   esi
  412134:	ror    DWORD PTR [ebx],1
  412136:	les    edx,FWORD PTR [ecx+0xf]
  412139:	cmp    DWORD PTR [ecx-0x23282ec3],0x74b47d00
  412143:	popf   
  412144:	jl     0x4120e7
  412146:	imul   eax,DWORD PTR [eax],0x1fc5d900
  41214c:	test   eax,0x53fbe81b
  412151:	pop    ds
  412152:	pop    eax
  412153:	xor    edx,DWORD PTR [ebx]
  412155:	xchg   ecx,eax
  412156:	fbstp  TBYTE PTR [esi-0x1]
  412159:	sbb    bl,BYTE PTR [ecx+0x27db5e15]
  41215f:	cld    
  412160:	jb     0x4121d5
  412162:	stos   DWORD PTR es:[edi],eax
  412163:	call   0x82ec:0x279c1a85
  41216a:	pop    ds
  41216b:	cli    
  41216c:	inc    ebx
  41216d:	jp     0x41212b
  41216f:	cmp    eax,edi
  412171:	cmp    esp,esi
  412173:	out    0xa2,al
  412175:	retf   
  412176:	iret   
  412177:	jns    0x4121b8
  412179:	fcmovbe st,st(3)
  41217b:	in     eax,0xbf
  41217d:	push   ss
  41217e:	out    dx,eax
  41217f:	adc    eax,0x8a322a38
  412184:	imul   esp,DWORD PTR [ebx+0x59],0x33
  412188:	xor    DWORD PTR [edx+0x36],esp
  41218b:	xchg   DWORD PTR [edx+0x2f7bd635],edx
  412191:	ins    BYTE PTR es:[edi],dx
  412192:	retf   0x522e
  412195:	pop    esp
  412196:	loop   0x41219b
  412198:	lahf   
  412199:	push   es
  41219a:	mov    edx,0x2b13f19c
  41219f:	sub    al,0x79
  4121a1:	pop    es
  4121a2:	ins    DWORD PTR es:[edi],dx
  4121a3:	dec    ebp
  4121a4:	int3   
  4121a5:	jb     0x412195
  4121a7:	inc    esp
  4121a8:	mov    al,0xff
  4121aa:	adc    eax,0xa58dd79a
  4121af:	inc    edi
  4121b0:	add    BYTE PTR [esi+ebp*8+0x6cd39089],dh
  4121b7:	pop    esp
  4121b8:	add    esi,DWORD PTR [edx+0x29]
  4121bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121bc:	adc    esi,DWORD PTR [eax+0x74]
  4121bf:	sub    eax,DWORD PTR ds:0x718c2fef
  4121c5:	sbb    DWORD PTR [ebp+0x31],edi
  4121c8:	push   cs
  4121c9:	push   edi
  4121ca:	dec    ecx
  4121cb:	and    eax,0x2a631166
  4121d0:	ss lock pop es
  4121d3:	rcl    DWORD PTR [ebx],0x76
  4121d6:	retf   0xe891
  4121d9:	shl    DWORD PTR ds:0xa4861204,0x51
  4121e0:	push   ss
  4121e1:	pop    ss
  4121e2:	pop    ds
  4121e3:	call   0x2d14:0x974e56a
  4121ea:	scas   al,BYTE PTR es:[edi]
  4121eb:	and    eax,0x6220d9fc
  4121f0:	jmp    FWORD PTR [eax]
  4121f2:	sub    edx,DWORD PTR ds:0x628756ca
  4121f8:	lahf   
  4121f9:	dec    ecx
  4121fa:	in     al,dx
  4121fb:	push   ds
  4121fc:	dec    esp
  4121fd:	gs cs (bad) 
  412200:	sub    edx,DWORD PTR [ecx-0x50dd0ef5]
  412206:	and    eax,0x2b4e7174
  41220b:	mov    esi,0x14460c5b
  412210:	jl     0x412281
  412212:	fcmovne st,st(1)
  412214:	das    
  412215:	ds mov ebp,0x4fb3c3fb
  41221b:	inc    ebp
  41221c:	or     bl,BYTE PTR [esi-0x38]
  41221f:	push   esi
  412220:	mov    al,0xd2
  412222:	(bad)  
  412224:	rol    BYTE PTR es:[ebp-0x908c6af],1
  41222b:	out    dx,eax
  41222c:	cld    
  41222d:	mov    edi,0xfec3dae
  412232:	or     DWORD PTR [eax-0x3a6d022d],edx
  412238:	out    dx,eax
  412239:	iret   
  41223a:	out    dx,eax
  41223b:	inc    edi
  41223c:	fucomip st,st(5)
  41223e:	ror    DWORD PTR [ebx-0x13],0x18
  412242:	xchg   ebp,eax
  412243:	push   es
  412244:	fwait
  412245:	adc    eax,0x72c1c6c
  41224a:	cli    
  41224b:	fcmovb st,st(6)
  41224d:	pop    ebx
  41224e:	mov    gs,ebx
  412250:	int    0xec
  412252:	adc    edx,DWORD PTR [ecx-0x4724ac37]
  412258:	add    edx,DWORD PTR [ecx+0x61]
  41225b:	mov    edi,0x4143222c
  412260:	jnp    0x412214
  412262:	out    0xf8,eax
  412264:	in     al,dx
  412265:	jge    0x412291
  412267:	lahf   
  412268:	das    
  412269:	push   edi
  41226a:	out    dx,al
  41226b:	jp     0x41225c
  41226d:	fs out dx,al
  41226f:	sub    BYTE PTR [eax+eax*4-0xb],al
  412273:	mov    ecx,0x18d3b5aa
  412278:	pop    es
  412279:	outs   dx,BYTE PTR ds:[esi]
  41227a:	mov    ebx,DWORD PTR [esi]
  41227c:	clc    
  41227d:	dec    bp
  41227f:	add    bh,BYTE PTR [edi]
  412281:	int    0x86
  412283:	not    BYTE PTR [edx-0x3f]
  412286:	pop    ds
  412287:	jbe    0x4122ac
  412289:	ror    DWORD PTR [edi],0x3a
  41228c:	xchg   ecx,eax
  41228d:	in     al,0xdd
  41228f:	lahf   
  412290:	gs mov ch,0x70
  412293:	dec    ebp
  412294:	adc    esi,DWORD PTR [eax-0x70]
  412297:	inc    esi
  412298:	pop    ecx
  412299:	cmp    eax,0x7da24632
  41229e:	mov    al,ds:0x654f37df
  4122a3:	mov    esi,0x4a5ea40f
  4122a8:	clc    
  4122a9:	push   edx
  4122aa:	lds    ebp,FWORD PTR [ecx-0x4e]
  4122ad:	daa    
  4122ae:	in     eax,0xcd
  4122b0:	pushf  
  4122b1:	iret   
  4122b2:	das    
  4122b3:	sahf   
  4122b4:	(bad)  
  4122b5:	fcmovb st,st(2)
  4122b7:	push   cs
  4122b8:	inc    esi
  4122b9:	push   esp
  4122ba:	loope  0x41223f
  4122bc:	and    bh,ch
  4122be:	clc    
  4122bf:	addr16 cld 
  4122c1:	call   0x8f82:0x1132c00d
  4122c8:	das    
  4122c9:	pop    eax
  4122ca:	les    esi,FWORD PTR [edi+0xe]
  4122cd:	inc    edi
  4122ce:	push   ebp
  4122cf:	das    
  4122d0:	push   ebx
  4122d1:	push   ebp
  4122d2:	lea    eax,[ebp-0x17]
  4122d5:	and    edi,ecx
  4122d7:	fs cmp al,0xa3
  4122da:	or     DWORD PTR [edi+0x55474983],0xffffffd1
  4122e1:	ds push 0xffffffc1
  4122e4:	jg     0x4122f7
  4122e6:	pop    edx
  4122e7:	xchg   ebp,eax
  4122e8:	xor    esi,DWORD PTR [eax+0x30b55448]
  4122ee:	outs   dx,BYTE PTR ds:[esi]
  4122ef:	mov    cl,0x56
  4122f1:	push   0x41
  4122f3:	sbb    DWORD PTR [esi-0x579b67db],eax
  4122f9:	push   es
  4122fa:	pop    edi
  4122fb:	mov    ebp,DWORD PTR [eax+0x5a]
  4122fe:	fcom   QWORD PTR [ebx-0xe]
  412301:	pop    esp
  412302:	cmp    eax,0x308ff62b
  412307:	jl     0x412292
  412309:	mov    al,0x90
  41230b:	pop    edx
  41230c:	enter  0x5946,0x84
  412310:	sub    DWORD PTR [esi],esi
  412312:	shr    DWORD PTR [ebx+edi*4-0x17],0x7f
  412317:	xchg   BYTE PTR [ebp+0x780c5f20],dh
  41231d:	mov    esp,0x320e5514
  412322:	lea    edi,[ebp-0x3]
  412325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412326:	mov    ch,0x27
  412328:	pop    es
  412329:	(bad)  
  41232a:	fbstp  TBYTE PTR [edx-0x25d1069c]
  412330:	aam    0x12
  412332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412333:	xchg   BYTE PTR [edi+0x19],cl
  412336:	and    eax,0xd2dc98f3
  41233b:	xchg   ecx,esi
  41233d:	std    
  41233e:	push   eax
  41233f:	lahf   
  412340:	(bad)  
  412341:	xor    DWORD PTR ds:0x2bad18a5,ebp
  412347:	mov    BYTE PTR [edi+0x35ce0531],ch
  41234d:	xchg   edi,eax
  41234e:	lods   al,BYTE PTR ds:[esi]
  41234f:	add    al,0xc0
  412351:	mov    ebp,0xf95159c
  412356:	arpl   WORD PTR [edi],di
  412358:	and    al,0x9f
  41235a:	pop    edi
  41235b:	aam    0x9a
  41235d:	outs   dx,BYTE PTR ds:[esi]
  41235e:	sub    al,0x20
  412360:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412361:	xor    dl,BYTE PTR [edi+0x48f4e1a6]
  412367:	mov    ebx,0xcb06cb9f
  41236c:	in     eax,dx
  41236d:	mov    ds:0xc55b761f,al
  412372:	jno    0x4123ad
  412374:	mov    dh,0xf
  412376:	es xor eax,edi
  412379:	and    al,0x2e
  41237b:	mov    edi,0xe8a0e9db
  412380:	fcmovu st,st(7)
  412382:	cmp    ebp,esp
  412384:	fisttp WORD PTR [esi-0x1049beaf]
  41238a:	bnd jb 0x412396
  41238d:	loop   0x41231f
  41238f:	loopne 0x4123f9
  412391:	shl    DWORD PTR [edi+0x63be6a18],0x57
  412398:	sub    DWORD PTR [esi+ebx*4],edi
  41239b:	mov    ds:0xefe0a2b9,eax
  4123a0:	jo     0x41240a
  4123a2:	or     ebx,DWORD PTR [ebx+esi*4+0x37feb600]
  4123a9:	xchg   BYTE PTR [ebx+0x3],dl
  4123ac:	stos   DWORD PTR es:[edi],eax
  4123ad:	icebp  
  4123ae:	adc    ah,BYTE PTR [eax-0x36]
  4123b1:	pop    ds
  4123b2:	popf   
  4123b3:	cmp    dl,bh
  4123b5:	nop
  4123b6:	inc    ecx
  4123b7:	pop    ss
  4123b8:	ret    0x3135
  4123bb:	mov    al,ds:0x78f01e4c
  4123c0:	js     0x4123cc
  4123c2:	enter  0x8fe1,0xbe
  4123c6:	inc    ebp
  4123c7:	sub    dh,bh
  4123c9:	jmp    0x369a:0x6cc7b207
  4123d0:	dec    ebx
  4123d1:	pop    esp
  4123d2:	(bad)  
  4123d3:	idiv   BYTE PTR [ebx+0x8]
  4123d6:	jo     0x4123d8
  4123d8:	enter  0x77e0,0x32
  4123dc:	or     ah,BYTE PTR [ecx+0x70]
  4123df:	addr16 push es
  4123e1:	inc    edi
  4123e2:	mov    al,ds:0x1df620ac
  4123e7:	sti    
  4123e8:	cwde   
  4123e9:	mov    ah,0x45
  4123eb:	sbb    DWORD PTR [ebx+0x29],esi
  4123ee:	dec    ebp
  4123ef:	pop    ebp
  4123f0:	push   eax
  4123f1:	aam    0x8f
  4123f3:	xor    eax,0x2d147e2c
  4123f8:	jl     0x4123f3
  4123fa:	pusha  
  4123fb:	mov    dl,0xc7
  4123fd:	pop    ecx
  4123fe:	xor    al,0xaf
  412400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412401:	mov    dh,0x95
  412403:	das    
  412404:	stos   BYTE PTR es:[edi],al
  412405:	push   es
  412406:	ret    
  412407:	fstp   DWORD PTR [edi]
  412409:	add    eax,0xaf57b216
  41240e:	xor    eax,0x178b65f3
  412413:	lods   eax,DWORD PTR ds:[esi]
  412414:	and    ebp,esp
  412416:	push   ebx
  412417:	mov    bh,0x97
  412419:	mov    dl,0x8b
  41241b:	(bad)
  41241e:	lock sahf 
  412420:	std    
  412421:	out    dx,al
  412422:	mov    DWORD PTR [esi+0x38],eax
  412425:	xlat   BYTE PTR ds:[ebx]
  412426:	mov    bl,bl
  412428:	outs   dx,DWORD PTR ds:[esi]
  412429:	loop   0x412443
  41242b:	push   edx
  41242c:	push   esi
  41242d:	test   al,0xd0
  41242f:	(bad)  [ebx+0x3f1af8c4]
  412435:	fs lock fdivr st(5),st
  412439:	cmp    edi,DWORD PTR [ecx]
  41243b:	inc    esi
  41243c:	push   0x29
  41243e:	rol    bl,1
  412440:	cwde   
  412441:	jns    0x412494
  412443:	fsubr  DWORD PTR [edx+0x69]
  412446:	xchg   esi,eax
  412447:	imul   DWORD PTR ds:0x7b62a4a9
  41244d:	inc    edi
  41244e:	repnz xor al,0x73
  412451:	mov    WORD PTR [edi-0x5c],ss
  412454:	in     al,0xf1
  412456:	aam    0xdd
  412458:	or     DWORD PTR [ebx],ecx
  41245a:	int3   
  41245b:	adc    DWORD PTR [esi+eiz*1+0x64],esi
  41245f:	jge    0x41243a
  412461:	and    DWORD PTR [edx],ebp
  412463:	stc    
  412464:	xchg   esi,eax
  412465:	std    
  412466:	repz mov ah,0x57
  412469:	sub    cl,bl
  41246b:	sub    eax,0x5267c92
  412470:	fnstcw WORD PTR [edi+ebx*8-0x4eaef18f]
  412477:	fwait
  412478:	pop    esi
  412479:	mov    eax,DWORD PTR [esi]
  41247b:	dec    esi
  41247c:	(bad)  
  41247d:	loope  0x412450
  41247f:	jmp    0xb3db8e6
  412484:	imul   esi,edx,0x480b7d67
  41248a:	fsubr  st,st(4)
  41248c:	cs or  ebp,eax
  41248f:	mov    DWORD PTR [edi-0x4a],0xeec3fe60
  412496:	inc    DWORD PTR [esi+0x70]
  412499:	xchg   ebx,ebp
  41249b:	addr16 (bad) 
  41249d:	out    0xb5,al
  41249f:	lock inc edi
  4124a1:	ret    0x7546
  4124a4:	(bad)  
  4124a5:	inc    ebp
  4124a7:	cli    
  4124a8:	adc    BYTE PTR [esi+edi*4],bh
  4124ab:	cs fwait
  4124ad:	push   ss
  4124ae:	fnstenv [ebx+ebp*8+0x6b052389]
  4124b5:	pushf  
  4124b6:	xchg   ecx,eax
  4124b7:	mov    esp,0x54001a03
  4124bc:	xchg   DWORD PTR [ebp-0x2f],esi
  4124bf:	test   al,0xc2
  4124c1:	out    0x23,eax
  4124c3:	xor    eax,DWORD PTR [eax+0x5e]
  4124c6:	push   ss
  4124c7:	out    dx,eax
  4124c8:	xchg   DWORD PTR ds:0x6e2486d5,ecx
  4124ce:	pop    ebp
  4124cf:	jmp    0x412535
  4124d1:	arpl   WORD PTR [esi-0x74ffff17],dx
  4124d7:	stos   DWORD PTR es:[edi],eax
  4124d8:	mov    bl,0x8d
  4124da:	add    eax,0xe760b326
  4124df:	mov    ds:0xbd154d2e,eax
  4124e4:	outs   dx,DWORD PTR ds:[esi]
  4124e5:	mov    WORD PTR [ebp+0x24],fs
  4124e8:	das    
  4124e9:	adc    eax,ecx
  4124eb:	jns    0x412491
  4124ed:	xchg   esp,eax
  4124ee:	adc    cl,BYTE PTR [ecx]
  4124f0:	cmp    eax,0x658a54be
  4124f5:	mov    eax,ds:0xf6350eac
  4124fa:	ds inc edx
  4124fc:	je     0x412503
  4124fe:	push   esp
  4124ff:	sar    DWORD PTR [eax+ebx*4+0x4f],0x77
  412504:	xchg   DWORD PTR [esp+ebx*1],edi
  412507:	push   0x672fab0e
  41250c:	jle    0x4124d7
  41250e:	ret    0x24a9
  412511:	aas    
  412512:	xor    esi,edi
  412514:	test   al,0x4d
  412516:	repnz and eax,esp
  412519:	pop    es
  41251a:	leave  
  41251b:	test   al,0x5d
  41251d:	sahf   
  41251e:	ret    
  41251f:	mov    dl,0x81
  412521:	test   eax,0x76b204f6
  412526:	outs   dx,BYTE PTR ds:[esi]
  412527:	std    
  412528:	sahf   
  412529:	add    al,0x36
  41252b:	mov    eax,ds:0xac357b63
  412530:	inc    esi
  412531:	fbld   TBYTE PTR [edi-0x63fcb682]
  412537:	into   
  412538:	mov    edx,0x5138ef4b
  41253d:	sti    
  41253e:	mov    ds:0x237d4f14,eax
  412543:	aam    0xec
  412545:	sub    DWORD PTR [ecx],0xffffff8a
  412548:	push   ecx
  412549:	mov    ds:0xc5d60fde,eax
  41254e:	ret    0xa570
  412551:	call   0xd25a41fd
  412556:	addr16 mov ecx,0x5d4c6601
  41255c:	fs lahf 
  41255e:	in     al,0x45
  412560:	xor    al,0xe9
  412562:	sub    cl,BYTE PTR [edx+0x2a747b17]
  412568:	outs   dx,DWORD PTR ds:[esi]
  412569:	push   eax
  41256a:	mov    bl,0x1c
  41256c:	mov    eax,ds:0xfbf90a02
  412571:	(bad)  
  412572:	fimul  WORD PTR [edi-0x6e]
  412575:	and    eax,0xb312a52e
  41257a:	ret    0xa680
  41257d:	inc    esp
  41257e:	or     BYTE PTR [ecx-0x2a59c9d0],dh
  412584:	jne    0x4125ba
  412586:	cmp    BYTE PTR [eax+0x238a5f13],dl
  41258c:	mov    ds:0x53ce1bb6,eax
  412591:	xchg   ecx,eax
  412592:	rcr    ah,0xb
  412595:	cmp    ebp,DWORD PTR [eax+0x196dafc0]
  41259b:	push   ebp
  41259c:	and    esp,edi
  41259e:	sub    DWORD PTR [esi+0x4d],ebx
  4125a1:	jecxz  0x41255f
  4125a3:	dec    ebp
  4125a4:	jae    0x41258b
  4125a6:	enter  0x26f1,0xc
  4125aa:	cmp    ecx,edx
  4125ac:	mov    gs,WORD PTR [ecx+0x121a0855]
  4125b2:	jl     0x412570
  4125b4:	test   al,0xb8
  4125b6:	pushf  
  4125b7:	xchg   bl,dl
  4125b9:	cwde   
  4125ba:	sub    dl,BYTE PTR [ebx+ebx*8]
  4125bd:	xlat   BYTE PTR ds:[ebx]
  4125be:	lahf   
  4125bf:	int3   
  4125c0:	mov    ecx,0x5c75e60f
  4125c5:	loopne 0x4125e2
  4125c7:	mov    edx,0xbb271e3d
  4125cc:	aad    0xb4
  4125ce:	cmc    
  4125cf:	cmp    edx,DWORD PTR [edx+0x70]
  4125d2:	mov    bl,BYTE PTR [edi]
  4125d4:	mov    ecx,0x4e3343ce
  4125d9:	dec    esi
  4125da:	test   DWORD PTR [ebp+0x24],0x3e8389f8
  4125e1:	xchg   ebp,eax
  4125e2:	into   
  4125e3:	cmc    
  4125e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125e5:	push   ebx
  4125e6:	and    DWORD PTR [esi+0x6da58c1a],0x17e833e9
  4125f0:	fisttp WORD PTR [edi-0x5abf77df]
  4125f6:	dec    ecx
  4125f7:	mov    ecx,0x6abb5a43
  4125fc:	or     DWORD PTR [eax],edx
  4125fe:	leave  
  4125ff:	ss pop ebp
  412601:	mov    gs,edx
  412603:	xor    eax,0x7adab2d7
  412608:	jo     0x412636
  41260a:	xor    al,0xea
  41260c:	ret    
  41260d:	das    
  41260e:	cmp    DWORD PTR [ecx],ecx
  412610:	stc    
  412611:	xor    al,0xf6
  412613:	pusha  
  412614:	xor    eax,eax
  412616:	repz leave 
  412618:	push   es
  412619:	retf   
  41261a:	pop    esp
  41261b:	and    eax,0x85c5d67c
  412620:	and    DWORD PTR [esi+0x67],edx
  412623:	outs   dx,BYTE PTR ds:[esi]
  412624:	test   eax,0x52a88247
  412629:	and    al,0xec
  41262b:	popf   
  41262c:	nop
  41262d:	mov    DWORD PTR [esi+ebp*4-0x5d],eax
  412631:	mov    ebp,0xcb96b4db
  412636:	push   esp
  412637:	rcl    esi,1
  412639:	jae    0x4126b7
  41263b:	inc    esp
  41263c:	xchg   ecx,eax
  41263d:	jmp    0x412670
  41263f:	push   cs
  412640:	inc    ebx
  412641:	gs push esp
  412643:	jae    0x41266d
  412645:	and    bh,ch
  412647:	or     eax,0xd9e3fce0
  41264c:	or     DWORD PTR [esi],ebp
  41264e:	and    eax,0x45f1b63
  412653:	aas    
  412654:	or     al,BYTE PTR [esi-0x20]
  412657:	push   edi
  412658:	cmp    DWORD PTR [edx+0x1a08c407],ecx
  41265e:	inc    edx
  41265f:	xchg   BYTE PTR [ebx+0x47cb5775],ah
  412665:	nop
  412666:	adc    ah,dl
  412668:	push   esi
  412669:	or     DWORD PTR [eax+0x15],ecx
  41266c:	arpl   WORD PTR [ebx-0x5e],sp
  41266f:	or     al,0xe7
  412671:	jae    0x4126dc
  412673:	lods   eax,DWORD PTR ds:[esi]
  412674:	and    dh,bl
  412676:	pushf  
  412677:	in     al,dx
  412678:	pop    ds
  412679:	xchg   BYTE PTR [edi-0x3a],al
  41267c:	or     ebp,DWORD PTR [ecx]
  41267e:	push   cs
  41267f:	jmp    0x412696
  412681:	inc    ecx
  412682:	adc    eax,0x7c1799c0
  412687:	pop    es
  412688:	xchg   DWORD PTR [esi+ebp*8+0x4b],eax
  41268c:	fcom   st(2)
  41268e:	ins    BYTE PTR es:[edi],dx
  41268f:	jle    0x4126b9
  412691:	jo     0x412707
  412693:	xor    ah,BYTE PTR [ebp+eiz*8+0x76966a6e]
  41269a:	scas   eax,DWORD PTR es:[edi]
  41269b:	out    0x4f,al
  41269d:	stos   BYTE PTR es:[edi],al
  41269e:	jmp    0x4126d0
  4126a0:	jae    0x412703
  4126a2:	xchg   esp,ebx
  4126a4:	clc    
  4126a5:	push   eax
  4126a6:	stos   DWORD PTR es:[edi],eax
  4126a7:	hlt    
  4126a8:	mov    eax,edx
  4126aa:	xor    edi,eax
  4126ac:	dec    eax
  4126ad:	(bad)  
  4126ae:	adc    eax,0x97b3fbbb
  4126b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4126b4:	pop    edx
  4126b5:	pop    ss
  4126b6:	outs   dx,DWORD PTR ds:[esi]
  4126b7:	mov    esp,0x57d114ff
  4126bc:	push   ebp
  4126bd:	or     esp,esp
  4126bf:	jmp    0x4126e7
  4126c1:	inc    edi
  4126c2:	push   esp
  4126c3:	mov    ds:0xeb9f15f0,al
  4126c8:	inc    esi
  4126c9:	push   0xeec0127e
  4126ce:	mov    dl,BYTE PTR [edi-0x25]
  4126d1:	jmp    0x41265f
  4126d3:	dec    esi
  4126d4:	lods   al,BYTE PTR ds:[esi]
  4126d5:	sub    BYTE PTR [ebp-0x2],bl
  4126d8:	out    dx,al
  4126d9:	lods   al,BYTE PTR ds:[esi]
  4126da:	add    eax,0x399d6aef
  4126df:	sbb    edx,ebx
  4126e1:	in     eax,dx
  4126e2:	lahf   
  4126e3:	push   esi
  4126e4:	into   
  4126e5:	adc    DWORD PTR [ecx],esp
  4126e7:	and    eax,0xa9041342
  4126ec:	cmp    cl,al
  4126ee:	shld   DWORD PTR [eax],eax,0x4a
  4126f2:	int3   
  4126f3:	push   eax
  4126f4:	and    BYTE PTR [ecx],cl
  4126f6:	in     al,dx
  4126f7:	cmp    ebp,ebp
  4126f9:	rcr    ah,1
  4126fb:	in     al,dx
  4126fc:	ret    
  4126fd:	add    al,0x5d
  4126ff:	cmp    dl,BYTE PTR [ecx]
  412701:	fistp  WORD PTR [ebx+0xe]
  412704:	and    eax,0x126368ba
  412709:	call   0x7ac21a0f
  41270e:	mov    ebx,0xf97e5103
  412713:	test   cl,dl
  412715:	inc    edx
  412716:	fwait
  412717:	cwde   
  412718:	pushf  
  412719:	mov    ds:0x266d2569,al
  41271e:	adc    DWORD PTR [edx+ecx*1],0x88d7a20c
  412725:	pop    es
  412726:	jp     0x4126fe
  412728:	cmp    ebx,esi
  41272a:	and    ch,BYTE PTR [edx+0x1e5ce80]
  412730:	ja     0x412797
  412732:	xor    ebp,esi
  412734:	outs   dx,BYTE PTR cs:[esi]
  412736:	test   eax,0x3eb078d
  41273b:	outs   dx,BYTE PTR ds:[esi]
  41273c:	push   es
  41273d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41273e:	xchg   ebp,eax
  41273f:	addr16 retf 0xe9e2
  412743:	sbb    ebx,ebp
  412745:	jno    0x412717
  412747:	daa    
  412748:	pop    esi
  412749:	repnz and eax,0x6bdb4a89
  41274f:	stc    
  412750:	cs cli 
  412752:	lock iret 
  412754:	push   0x32f91fa1
  412759:	xchg   ebx,eax
  41275a:	sub    eax,0x2bbbfbe1
  41275f:	push   0xff0a68e7
  412764:	fsub   DWORD PTR ds:0xeccdccdf
  41276a:	stos   DWORD PTR es:[edi],eax
  41276b:	stc    
  41276c:	shl    DWORD PTR [ecx+0x39],1
  41276f:	loope  0x4127b6
  412771:	lea    edx,[edi+0x1fb36277]
  412777:	lea    esp,[ebp+0x3e7636a2]
  41277d:	jl     0x4127cf
  41277f:	or     al,BYTE PTR [edi]
  412781:	pop    ds
  412782:	mov    ds:0x953124b3,al
  412787:	jle    0x412806
  412789:	xchg   dx,ax
  41278b:	dec    esi
  41278c:	or     DWORD PTR [edi],ebp
  41278e:	sti    
  41278f:	jbe    0x4127a2
  412791:	repz daa 
  412793:	in     eax,0x3e
  412795:	pop    ecx
  412796:	pusha  
  412797:	and    bl,BYTE PTR [edi+edx*4]
  41279a:	outs   dx,BYTE PTR ds:[esi]
  41279b:	jmp    0x2edd:0x7cb7b473
  4127a2:	imul   esi,DWORD PTR [ebx],0x1a
  4127a5:	sbb    BYTE PTR [ebp+0x5b],0xa4
  4127a9:	lahf   
  4127aa:	pusha  
  4127ab:	sbb    DWORD PTR [eax+0x24ca7831],ebx
  4127b1:	fisubr DWORD PTR [ebx+0x3f07829f]
  4127b7:	(bad)  
  4127b8:	cmp    eax,DWORD PTR [eax-0x34]
  4127bb:	aaa    
  4127bc:	sub    edx,DWORD PTR [ebp+0x4c]
  4127bf:	mov    eax,0xe1d0417f
  4127c4:	lods   eax,DWORD PTR ds:[esi]
  4127c5:	outs   dx,DWORD PTR ds:[esi]
  4127c6:	adc    ebp,DWORD PTR [edi-0x10ddcfb]
  4127cc:	jg     0x412799
  4127ce:	pushf  
  4127cf:	pushf  
  4127d0:	or     BYTE PTR [eax-0x50],bh
  4127d3:	add    DWORD PTR [esi],ecx
  4127d5:	cmp    DWORD PTR [eax-0x44f936e4],esi
  4127db:	pop    edx
  4127dc:	mov    ch,0xd1
  4127de:	xchg   ecx,eax
  4127df:	outs   dx,DWORD PTR ds:[esi]
  4127e0:	sbb    al,0x44
  4127e3:	mov    WORD PTR [edx+0x7b],ds
  4127e6:	mov    DWORD PTR [edi],esp
  4127e8:	xor    bh,BYTE PTR [edx-0x1c5574f2]
  4127ee:	in     eax,dx
  4127ef:	ficom  WORD PTR [ecx+0x56e0962e]
  4127f5:	pop    esi
  4127f6:	xor    al,BYTE PTR [edx-0x10]
  4127f9:	(bad)  [edx+eax*1]
  4127fc:	ins    DWORD PTR es:[edi],dx
  4127fd:	scas   al,BYTE PTR es:[edi]
  4127fe:	jmp    0x6f9cb78
  412803:	in     eax,0x65
  412805:	push   ss
  412806:	cmp    bl,dh
  412808:	jg     0x4127c0
  41280a:	sub    eax,0x81133182
  41280f:	cmp    al,0x8e
  412811:	jae    0x4127fa
  412813:	xchg   edx,eax
  412814:	jg     0x412815
  412816:	mul    BYTE PTR [edx+0x52]
  412819:	ins    BYTE PTR es:[edi],dx
  41281a:	in     al,dx
  41281b:	mov    dl,0xa7
  41281d:	push   esi
  41281e:	in     al,0xce
  412820:	out    dx,eax
  412821:	mov    ebx,0x652129fb
  412826:	inc    esp
  412827:	ret    0x92a2
  41282a:	(bad)  
  41282c:	adc    ebp,DWORD PTR [edx]
  41282e:	imul   edi,DWORD PTR [edx],0x34
  412831:	ins    BYTE PTR es:[edi],dx
  412832:	in     al,dx
  412833:	mov    ebp,0xf8fcd8f3
  412838:	inc    esi
  412839:	out    dx,eax
  41283a:	cmc    
  41283b:	lea    edx,[esi+0x367ff05d]
  412841:	test   eax,0x1ee3015f
  412846:	test   eax,0x38fcdf68
  41284b:	sar    BYTE PTR [ebx+0x12c18afb],0xea
  412852:	and    BYTE PTR gs:[ebx+0x28],dl
  412856:	adc    eax,0x79f34f5
  41285b:	cwde   
  41285c:	inc    eax
  41285d:	aad    0x67
  41285f:	dec    ebp
  412860:	sbb    edx,DWORD PTR [ebx]
  412862:	jb     0x41286e
  412864:	push   ebp
  412865:	xor    BYTE PTR [ebx-0x23],cl
  412868:	mov    edi,0x6934b954
  41286d:	loopne 0x412861
  41286f:	push   0xfffffff7
  412871:	arpl   WORD PTR [ebp-0x54],bx
  412874:	cmp    BYTE PTR [edx+0x6d],bl
  412877:	outs   dx,DWORD PTR ds:[esi]
  412878:	push   edx
  412879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41287a:	dec    edi
  41287b:	push   edi
  41287c:	sub    eax,DWORD PTR [eax+0x76]
  41287f:	les    ebp,FWORD PTR [edi]
  412881:	pop    ss
  412882:	data16 and ah,al
  412885:	ja     0x4128e1
  412887:	sbb    eax,DWORD PTR [ecx+ecx*2]
  41288a:	loopne 0x41286f
  41288c:	xchg   ebx,edx
  41288e:	frstor [edx]
  412890:	mov    bh,0xd8
  412892:	sbb    BYTE PTR ds:0x2b455572,0xe1
  412899:	rcl    DWORD PTR [edx],0xca
  41289c:	outs   dx,DWORD PTR ds:[esi]
  41289d:	out    dx,al
  41289e:	shl    BYTE PTR [eax-0x4a314ab4],1
  4128a4:	jmp    FWORD PTR [ebx]
  4128a6:	jno    0x4128bb
  4128a8:	stos   BYTE PTR es:[edi],al
  4128a9:	and    ebx,esp
  4128ab:	dec    esi
  4128ac:	sbb    al,ch
  4128ae:	fdiv   st(6),st
  4128b0:	push   edx
  4128b1:	fsubr  QWORD PTR ds:0xc8d91352
  4128b7:	pop    ds
  4128b8:	mov    al,0x9a
  4128ba:	popf   
  4128bb:	xchg   esp,eax
  4128bc:	rol    BYTE PTR [ecx+0x31],0xb6
  4128c0:	mov    ds:0x4de2b2a6,al
  4128c5:	int3   
  4128c6:	and    dl,BYTE PTR [eax+0x7fe221a9]
  4128cc:	outs   dx,DWORD PTR ds:[esi]
  4128cd:	sbb    DWORD PTR [ebp-0x921a80b],0x6a
  4128d4:	mov    cl,0x6b
  4128d6:	(bad)  
  4128d8:	imul   esi,DWORD PTR [ebp-0x54],0x615455bd
  4128df:	aad    0xce
  4128e1:	add    BYTE PTR [esi-0x78b4a253],dh
  4128e7:	inc    esi
  4128e8:	test   eax,0xfe3e000e
  4128ed:	pop    ebp
  4128ee:	push   0xb66c296c
  4128f3:	dec    esp
  4128f4:	inc    ecx
  4128f5:	pop    ecx
  4128f6:	xor    BYTE PTR [eax],0x73
  4128f9:	mov    WORD PTR [edx+0x1],es
  4128fc:	cmp    ch,bh
  4128fe:	inc    esp
  4128ff:	sub    eax,0x6ea99391
  412904:	sub    edi,DWORD PTR [esi+0x22]
  412907:	push   eax
  412908:	cdq    
  412909:	imul   eax,DWORD PTR [ecx+0x32],0xf674a211
  412910:	inc    ecx
  412911:	(bad)  
  412912:	or     dh,cl
  412914:	ret    0x73fa
  412917:	adc    BYTE PTR [edx+0x68de9fea],dl
  41291d:	sbb    ecx,ebx
  41291f:	push   cs
  412920:	pop    esi
  412921:	out    0xea,eax
  412923:	aaa    
  412924:	retf   
  412925:	(bad)  
  412926:	mov    dl,0xa6
  412928:	lods   eax,DWORD PTR ds:[esi]
  412929:	dec    DWORD PTR [eax+0x71]
  41292c:	jbe    0x412914
  41292e:	cmp    eax,0x416f1ac3
  412933:	mov    al,ds:0x6fcec5d3
  412938:	(bad)  
  412939:	cmc    
  41293a:	loop   0x4128e8
  41293c:	test   BYTE PTR [eax-0x1f],ah
  41293f:	xor    eax,ebx
  412941:	test   BYTE PTR [edx],ch
  412943:	sbb    DWORD PTR [edi+0x6fd432cc],0x21674632
  41294d:	pop    ds
  41294e:	pop    ds
  41294f:	jp     0x4129c7
  412951:	(bad)  
  412952:	jmp    0x1ad6eb01
  412957:	mov    ebx,0xe7b97779
  41295c:	and    DWORD PTR [ecx+0x75],edx
  41295f:	cmp    eax,0x110c5197
  412964:	and    ebp,DWORD PTR [ebx]
  412966:	fcom   DWORD PTR ds:0x8a0e3a62
  41296c:	inc    edi
  41296d:	add    al,0x9f
  41296f:	pop    ecx
  412970:	inc    esp
  412971:	push   eax
  412972:	retf   0x218b
  412975:	mov    cl,0x7a
  412977:	test   al,0x15
  412979:	outs   dx,BYTE PTR ds:[esi]
  41297a:	jmp    0x92:0xef847b0c
  412981:	adc    ecx,DWORD PTR [eax-0x49]
  412984:	pop    esp
  412985:	pop    esi
  412986:	rcl    bl,1
  412988:	fcmovb st,st(7)
  41298a:	or     dh,BYTE PTR [eax+0x4757e6]
  412990:	dec    edi
  412991:	push   ss
  412992:	dec    ecx
  412993:	loop   0x412955
  412995:	lds    esi,FWORD PTR [edx+0x20]
  412998:	mov    bl,0x74
  41299a:	outs   dx,DWORD PTR ds:[esi]
  41299b:	mov    al,ds:0x734aae9e
  4129a0:	adc    al,0x89
  4129a2:	sbb    edx,edi
  4129a4:	xor    edi,edi
  4129a6:	(bad)  
  4129a7:	push   esi
  4129a8:	push   ebp
  4129a9:	icebp  
  4129aa:	aaa    
  4129ab:	lds    ebp,FWORD PTR [ecx]
  4129ad:	sbb    ebx,0xc28b103c
  4129b3:	or     ebp,DWORD PTR ds:0x882dac7d
  4129b9:	cmp    ebp,esp
  4129bb:	stos   BYTE PTR es:[edi],al
  4129bc:	inc    eax
  4129bd:	stc    
  4129be:	mov    bl,BYTE PTR [edx-0x20]
  4129c1:	mov    ah,0xa6
  4129c3:	retf   0x7842
  4129c6:	fild   DWORD PTR [eax-0x50cc11b0]
  4129cc:	inc    edi
  4129cd:	es icebp 
  4129cf:	rcl    DWORD PTR [eax-0x58],cl
  4129d2:	nop
  4129d3:	jecxz  0x41298f
  4129d5:	(bad)
  4129d8:	xor    ebx,DWORD PTR [ebp-0x342d245f]
  4129de:	jecxz  0x41296f
  4129e0:	cmp    al,0x11
  4129e2:	fs mov edi,0x6168068e
  4129e8:	(bad)  
  4129e9:	std    
  4129ea:	out    dx,al
  4129eb:	adc    ecx,ebp
  4129ed:	inc    edx
  4129ee:	mov    ch,0x2c
  4129f0:	icebp  
  4129f1:	shl    ah,1
  4129f3:	jne    0x4129f6
  4129f5:	and    BYTE PTR [ebp+0x4020c09c],bl
  4129fb:	pop    edi
  4129fc:	imul   DWORD PTR [ebp+0x13]
  4129ff:	lock dec edx
  412a01:	sub    dl,dl
  412a03:	aaa    
  412a04:	cmp    ebx,DWORD PTR ds:[edi]
  412a07:	adc    ah,dh
  412a09:	add    esi,DWORD PTR [esi]
  412a0b:	aaa    
  412a0c:	pusha  
  412a0d:	cmp    al,0xd4
  412a0f:	test   DWORD PTR [eax-0x1b],ecx
  412a12:	repnz cs scas eax,DWORD PTR es:[edi]
  412a15:	(bad)  
  412a17:	js     0x412a50
  412a19:	dec    edi
  412a1a:	retf   
  412a1b:	jmp    0x412a7f
  412a1d:	xor    DWORD PTR [edx],esp
  412a1f:	dec    ebp
  412a20:	add    ch,BYTE PTR [eax-0x2b]
  412a23:	shl    DWORD PTR [edi+0x20],cl
  412a26:	lock retf 
  412a28:	sub    ebp,eax
  412a2a:	xor    DWORD PTR [esi+0x35],ebx
  412a2d:	jbe    0x4129ca
  412a2f:	scas   al,BYTE PTR es:[edi]
  412a30:	cmc    
  412a31:	jbe    0x412a29
  412a33:	iret   
  412a34:	out    0xf,al
  412a36:	mov    bh,ch
  412a38:	call   0x2f3f:0x4fd21c4f
  412a3f:	imul   esi,DWORD PTR [eax-0x80],0x92f1e139
  412a46:	in     eax,dx
  412a47:	out    0x2a,al
  412a49:	or     eax,0xc1e8de02
  412a4e:	aam    0x9
  412a50:	sbb    DWORD PTR [esi],ebp
  412a52:	daa    
  412a53:	les    esi,FWORD PTR [ebp-0x5a4fe56e]
  412a59:	mov    al,ds:0xfd5b496e
  412a5e:	pusha  
  412a5f:	adc    edx,DWORD PTR [ebx]
  412a61:	mov    al,0xd0
  412a63:	mov    DWORD PTR [esi],ebp
  412a65:	jg     0x412ad1
  412a67:	gs clc 
  412a69:	cmp    DWORD PTR [edi],esi
  412a6b:	xor    BYTE PTR [esp+edi*4+0x7119a6b0],cl
  412a72:	shl    ch,1
  412a74:	jmp    0xff8fc8d6
  412a79:	cwde   
  412a7a:	and    esi,DWORD PTR [esi+0x51]
  412a7d:	mov    ebp,0xf424b3f7
  412a82:	scas   al,BYTE PTR es:[edi]
  412a83:	jge    0x412a16
  412a85:	inc    eax
  412a86:	es call 0xfdc5:0xc9a08e39
  412a8e:	add    ch,BYTE PTR [edi-0x30]
  412a91:	neg    BYTE PTR [edi+0x3d]
  412a94:	dec    ebp
  412a95:	mov    ecx,0xc4b6170f
  412a9a:	ss push ebx
  412a9c:	je     0x412a77
  412a9e:	pop    ebx
  412a9f:	and    eax,0x85abeeba
  412aa4:	pop    ss
  412aa5:	enter  0xebea,0x25
  412aa9:	retf   
  412aaa:	lahf   
  412aab:	push   0xffffffde
  412aad:	int    0xf2
  412aaf:	mov    ebp,DWORD PTR [ebp+0x9eb343f]
  412ab5:	scas   al,BYTE PTR es:[edi]
  412ab6:	adc    al,0x4f
  412ab8:	(bad)  [edx-0x5e]
  412abb:	sbb    DWORD PTR [edx+0x19],ebx
  412abe:	and    BYTE PTR [eax-0x4],bh
  412ac1:	mov    esi,DWORD PTR [ecx]
  412ac3:	sti    
  412ac4:	fwait
  412ac5:	mov    esi,0x9a919b13
  412aca:	dec    ebp
  412acb:	cmp    DWORD PTR [edx],esi
  412acd:	call   FWORD PTR [esi]
  412acf:	jne    0x412b01
  412ad1:	fmulp  st(0),st
  412ad3:	mov    al,0xed
  412ad5:	(bad)  
  412ad6:	cwde   
  412ad7:	push   eax
  412ad8:	mov    ah,0xee
  412ada:	xor    eax,0x3b813241
  412adf:	daa    
  412ae0:	jg     0x412b00
  412ae2:	popa   
  412ae3:	ds sub al,cl
  412ae6:	nop
  412ae7:	(bad)  
  412ae9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412aea:	mov    bh,0x7b
  412aec:	mov    edx,0x405e1d37
  412af1:	call   0xac7e3efe
  412af6:	ins    BYTE PTR es:[edi],dx
  412af7:	mov    al,0xf2
  412af9:	jle    0x412a8b
  412afb:	xchg   esi,eax
  412afc:	mov    ds:0xfe652ae,al
  412b01:	pop    ebx
  412b02:	push   eax
  412b03:	cmp    DWORD PTR [ecx+0x5e64f5cb],ebx
  412b09:	imul   ebp,DWORD PTR [eax+ecx*2],0xffffffc1
  412b0d:	or     al,BYTE PTR [eax]
  412b0f:	inc    edx
  412b10:	cld    
  412b11:	mov    ds:0xe6b9f032,eax
  412b16:	rcl    BYTE PTR [edi+ecx*4-0x1d],0xb9
  412b1b:	idiv   DWORD PTR [ebp+0x2e]
  412b1e:	push   esp
  412b1f:	je     0x412b14
  412b21:	outs   dx,DWORD PTR ds:[esi]
  412b22:	pop    edi
  412b23:	xor    bh,cl
  412b25:	inc    esp
  412b26:	outs   dx,DWORD PTR ds:[esi]
  412b27:	int    0x5
  412b29:	mov    ah,0x25
  412b2b:	into   
  412b2c:	push   ebp
  412b2d:	imul   ebp,DWORD PTR [esi+eiz*8-0x5f48c3ee],0x362e66f5
  412b38:	aas    
  412b39:	loopne 0x412ac7
  412b3b:	push   es
  412b3c:	call   0x9ef40ac1
  412b41:	cs std 
  412b43:	add    BYTE PTR [ecx],0xe5
  412b46:	lea    edx,[ecx-0x6d87fae8]
  412b4c:	vcvtps2dq ymm5,YMMWORD PTR [esp+ebx*8]
  412b51:	imul   eax,DWORD PTR [ebx+0x78679228],0x5b7246c2
  412b5b:	aam    0xd9
  412b5d:	mov    ch,BYTE PTR [ebx-0x56560be8]
  412b63:	daa    
  412b64:	pop    eax
  412b65:	(bad)
  412b68:	iret   
  412b69:	push   esi
  412b6a:	mov    ?,WORD PTR [eiz*4-0x581b9a6a]
  412b71:	repnz (bad) 
  412b73:	call   0x43138b7
  412b78:	adc    al,0x78
  412b7a:	sbb    BYTE PTR [edx+0x522b3b9d],cl
  412b80:	loope  0x412b46
  412b82:	jmp    0x9519:0xce6a7908
  412b89:	fidivr DWORD PTR [edx]
  412b8b:	out    0x5b,al
  412b8d:	add    ebx,DWORD PTR ds:0x391b4074
  412b93:	lods   eax,DWORD PTR ds:[esi]
  412b94:	aam    0x24
  412b96:	in     al,dx
  412b97:	pop    ecx
  412b98:	mov    ch,0x7c
  412b9a:	or     DWORD PTR [edi],eax
  412b9c:	dec    ecx
  412b9d:	lahf   
  412b9e:	pop    ebp
  412b9f:	(bad)  [ebx+0x4b067d71]
  412ba5:	mov    ds:0x3296863c,eax
  412baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bab:	int    0x4e
  412bad:	fldcw  WORD PTR [edx+edi*4-0x79]
  412bb1:	mov    ds:0x883f35cf,eax
  412bb6:	push   0xedaac29d
  412bbb:	mov    edi,0xdfd1d19b
  412bc0:	call   0xcc41a0be
  412bc5:	sbb    esp,0x1a745bca
  412bcb:	mov    BYTE PTR [edi],0x12
  412bce:	jle    0x412c22
  412bd0:	retf   0x96bb
  412bd3:	jp     0x412bfa
  412bd5:	nop
  412bd6:	push   ebx
  412bd7:	sub    BYTE PTR es:[ebp-0x2fb5405b],dh
  412bde:	xchg   esi,eax
  412bdf:	arpl   WORD PTR [edx-0x61],dx
  412be2:	sbb    BYTE PTR [ebp+0x46b1e1e1],ch
  412be8:	pusha  
  412be9:	popa   
  412bea:	ret    
  412beb:	int3   
  412bec:	dec    ebp
  412bed:	jl     0x412bdf
  412bef:	mov    ecx,0x2510e06a
  412bf4:	or     DWORD PTR [edi],eax
  412bf6:	adc    al,0xe5
  412bf8:	fsub   st(4),st
  412bfa:	adc    edx,edi
  412bfc:	lock fwait
  412bfe:	fwait
  412bff:	mov    ebx,0x62e0812b
  412c04:	sub    DWORD PTR [eiz*2-0x656fe73f],0xffffffb4
  412c0c:	mov    bh,0xaf
  412c0e:	jmp    0xb66d:0x76ae829c
  412c15:	mov    WORD PTR [edx],es
  412c17:	push   esi
  412c18:	ds jno 0x412c88
  412c1b:	mov    ds:0xe3413b7c,eax
  412c20:	adc    al,0x22
  412c22:	into   
  412c23:	mov    ah,0xe2
  412c25:	adc    ebx,DWORD PTR [edx+0x25da4787]
  412c2b:	inc    edx
  412c2c:	fbld   TBYTE PTR [eax-0x28]
  412c2f:	and    al,0xe7
  412c31:	inc    eax
  412c32:	repz xchg edx,eax
  412c34:	inc    ecx
  412c35:	in     al,dx
  412c36:	mov    eax,0xa14e5503
  412c3b:	mov    ecx,eax
  412c3d:	call   FWORD PTR [edx+0x4b]
  412c40:	loope  0x412c7f
  412c42:	push   ebx
  412c43:	gs push esp
  412c45:	test   DWORD PTR [ecx+0x18],ecx
  412c48:	xlat   BYTE PTR ds:[ebx]
  412c49:	int3   
  412c4a:	ja     0x412bce
  412c4c:	lods   eax,DWORD PTR ds:[esi]
  412c4d:	cmc    
  412c4e:	dec    ebp
  412c4f:	jle    0x412beb
  412c51:	mov    ecx,0x93f1a733
  412c56:	xchg   ebp,eax
  412c57:	jl     0x412c70
  412c59:	cli    
  412c5a:	push   ecx
  412c5b:	push   es
  412c5c:	stc    
  412c5d:	cld    
  412c5e:	xchg   ebp,eax
  412c5f:	jge    0x412c86
  412c61:	cmc    
  412c62:	nop
  412c63:	out    dx,eax
  412c64:	mov    dl,bl
  412c66:	jb     0x412bf4
  412c68:	lods   al,BYTE PTR ds:[esi]
  412c69:	push   ecx
  412c6a:	test   eax,0xe72965b2
  412c6f:	fsubr  QWORD PTR [ebp-0x61]
  412c72:	ror    BYTE PTR [esi],cl
  412c74:	ffree  st(6)
  412c76:	loope  0x412cb4
  412c78:	sub    edi,ebx
  412c7a:	xor    ch,dh
  412c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c7d:	mov    al,0x42
  412c7f:	mov    edi,0xdb12e7ae
  412c84:	test   DWORD PTR [esi+0x220118d4],esp
  412c8a:	pop    edx
  412c8b:	iret   
  412c8c:	pop    ecx
  412c8d:	and    DWORD PTR [ebx+ebx*8-0x6079356a],esi
  412c94:	mov    ebp,0x6154ec5a
  412c99:	jo     0x412c87
  412c9b:	add    al,0x88
  412c9d:	icebp  
  412c9e:	rcl    BYTE PTR ds:0x5fd5f91b,0xea
  412ca5:	repnz inc ebx
  412ca7:	sbb    esi,DWORD PTR [edx]
  412ca9:	call   0xaa9b:0x24ec04aa
  412cb0:	cmp    BYTE PTR [ebp+0x66c9a53d],bh
  412cb6:	repz fild WORD PTR [ecx-0x4d]
  412cba:	test   DWORD PTR [edx],edi
  412cbc:	call   0x7a466cc6
  412cc1:	sub    al,0x71
  412cc3:	fwait
  412cc4:	push   ecx
  412cc5:	js     0x412d3f
  412cc7:	mov    al,ds:0xa7ad7ed7
  412ccc:	ss adc eax,0x564bccbd
  412cd2:	retf   0xa3f5
  412cd5:	add    eax,0x9df03dc7
  412cda:	mov    edi,eax
  412cdc:	jbe    0x412cc1
  412cde:	xor    al,0x7b
  412ce0:	adc    BYTE PTR gs:[edx-0x4221a1e9],ah
  412ce7:	pop    ds
  412ce8:	mov    al,ds:0xfb35c508
  412ced:	sub    ch,ah
  412cef:	dec    eax
  412cf0:	pushf  
  412cf1:	push   cs
  412cf2:	xor    DWORD PTR [ebx],ebp
  412cf4:	xor    al,0x57
  412cf6:	das    
  412cf7:	jmp    0x412c98
  412cf9:	jmp    0x412cb8
  412cfb:	aad    0x3a
  412cfd:	adc    esp,edi
  412cff:	mov    esi,0xeb23a6ce
  412d04:	loopne 0x412cc9
  412d06:	gs xor dl,ch
  412d09:	dec    edx
  412d0a:	int3   
  412d0b:	out    dx,al
  412d0c:	sub    ecx,ebp
  412d0e:	into   
  412d0f:	adc    eax,0x4b90f2eb
  412d14:	xor    eax,0x3f974bd5
  412d19:	(bad)  
  412d1b:	seto   BYTE PTR [esi-0x65ca3e8e]
  412d22:	inc    ebp
  412d23:	push   ss
  412d24:	add    eax,0x295fd7a6
  412d29:	push   cs
  412d2a:	aaa    
  412d2b:	out    0x1b,eax
  412d2d:	jg     0x412d73
  412d2f:	add    bh,BYTE PTR [edi]
  412d31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d32:	mov    al,0xbf
  412d34:	lods   al,BYTE PTR ds:[esi]
  412d35:	push   esp
  412d36:	mov    dh,0x60
  412d38:	test   al,0x35
  412d3a:	jno    0x412d6c
  412d3c:	(bad)
  412d3f:	fs xor bh,dh
  412d42:	popf   
  412d43:	pop    edi
  412d44:	xchg   dh,bl
  412d46:	ret    
  412d47:	aad    0x8c
  412d49:	ja     0x412d08
  412d4b:	jmp    0x3f60bc6e
  412d50:	dec    esi
  412d51:	je     0x412dd1
  412d53:	loope  0x412dc5
  412d55:	add    BYTE PTR [ebx-0x4c320c75],dh
  412d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d5c:	sub    esi,DWORD PTR [esi]
  412d5e:	push   es
  412d5f:	lahf   
  412d60:	xlat   BYTE PTR ds:[ebx]
  412d61:	js     0x412d39
  412d63:	popa   
  412d64:	es xor eax,0x1db22a23
  412d6a:	lods   eax,DWORD PTR ds:[esi]
  412d6b:	loopne 0x412d74
  412d6d:	scas   eax,DWORD PTR es:[edi]
  412d6e:	imul   ebp,DWORD PTR [ecx],0xffffff81
  412d71:	jne    0x412ded
  412d73:	xor    DWORD PTR [edi-0x439c585f],ebx
  412d79:	jno    0x412d8e
  412d7b:	ja     0x412de0
  412d7d:	ret    
  412d7e:	shr    BYTE PTR [eax],cl
  412d80:	lods   al,BYTE PTR ds:[esi]
  412d81:	push   0xffffff87
  412d83:	fs je  0x412d7b
  412d86:	in     eax,0xd1
  412d88:	sbb    bh,al
  412d8a:	clc    
  412d8b:	push   ss
  412d8c:	inc    edi
  412d8d:	repz lds ecx,FWORD PTR [edx+0x3ba540bb]
  412d94:	(bad)  
  412d95:	outs   dx,DWORD PTR ds:[esi]
  412d96:	div    BYTE PTR [ebp+esi*4-0x5a]
  412d9a:	call   0xf3cc:0xd62edcaf
  412da1:	ret    
  412da2:	pop    ebx
  412da3:	cwde   
  412da4:	jb     0xaeb2e217
  412daa:	adc    eax,0x161b4505
  412daf:	mov    bl,BYTE PTR [edi+0xbac2f75]
  412db5:	repnz adc edx,DWORD PTR [edi-0x49f01bfe]
  412dbc:	(bad)  
  412dbd:	daa    
  412dbe:	in     eax,dx
  412dbf:	mov    ds:0x90b3611f,eax
  412dc4:	lahf   
  412dc5:	push   es
  412dc6:	inc    edi
  412dc7:	pop    ds
  412dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc9:	xor    esp,edi
  412dcb:	cmp    DWORD PTR [eax-0x6d617432],esp
  412dd1:	je     0x412dfd
  412dd3:	jno    0x412d82
  412dd5:	add    al,BYTE PTR [edi]
  412dd7:	cld    
  412dd8:	and    esp,edi
  412dda:	test   eax,0x5d3caeef
  412ddf:	mov    bl,0x66
  412de1:	lahf   
  412de2:	sbb    eax,0x73df3b6d
  412de7:	push   0x84ffdde5
  412dec:	mov    esp,0xbb38a0b2
  412df1:	lods   eax,DWORD PTR ds:[esi]
  412df2:	pop    ebx
  412df3:	and    ebx,DWORD PTR [edx+0x77]
  412df6:	mov    WORD PTR [ebp+0x6c],fs
  412df9:	push   edx
  412dfa:	xchg   edi,eax
  412dfb:	pop    ds
  412dfc:	test   BYTE PTR [edi],dl
  412dfe:	xchg   ebx,eax
  412dff:	cs pop es
  412e01:	jne    0x412d9d
  412e03:	ror    DWORD PTR [ebp+esi*2-0x6a],0x2d
  412e08:	not    BYTE PTR [eax-0x5b]
  412e0b:	hlt    
  412e0c:	mov    WORD PTR [esi+0x55],cs
  412e0f:	test   eax,0xae68a2d6
  412e14:	xchg   edx,eax
  412e15:	sbb    bh,ch
  412e17:	jns    0x412dbc
  412e19:	fsub   QWORD PTR [esi+0x19e7a1fa]
  412e1f:	jmp    0x412e1d
  412e21:	xlat   BYTE PTR ds:[ebx]
  412e22:	ins    DWORD PTR es:[edi],dx
  412e23:	adc    al,BYTE PTR cs:[edx]
  412e26:	or     DWORD PTR [ecx],0xbdbd1dfe
  412e2c:	nop
  412e2d:	jbe    0x412e94
  412e2f:	or     BYTE PTR [edx+0x70],ah
  412e32:	je     0x412e78
  412e34:	or     ebx,DWORD PTR [ebx]
  412e36:	aas    
  412e37:	sbb    DWORD PTR [eax+0x50b5ac8],0xffffffce
  412e3e:	lahf   
  412e3f:	std    
  412e40:	mov    esi,0xd202e1cd
  412e45:	mov    ebp,0xd7d1d9dc
  412e4a:	jae    0x412eb6
  412e4c:	stos   DWORD PTR es:[edi],eax
  412e4d:	repnz out 0x94,eax
  412e50:	cmp    edx,ecx
  412e52:	fstp   st(5)
  412e54:	in     al,0x2c
  412e56:	mov    dl,0xac
  412e58:	iret   
  412e59:	loopne 0x412eb4
  412e5b:	xchg   edi,eax
  412e5c:	pop    es
  412e5d:	icebp  
  412e5e:	sub    al,0xc3
  412e60:	xlat   BYTE PTR ds:[ebx]
  412e61:	push   ebx
  412e62:	test   eax,0xf700df1a
  412e67:	jbe    0x412e7a
  412e69:	mov    esi,edx
  412e6b:	cmp    esi,esi
  412e6d:	daa    
  412e6e:	adc    DWORD PTR [edx-0x1a],ecx
  412e71:	xor    esi,ebx
  412e73:	popa   
  412e74:	dec    ecx
  412e75:	or     DWORD PTR ds:0xc805c40e,eax
  412e7b:	fiadd  DWORD PTR [ebp-0x272d3963]
  412e81:	out    dx,al
  412e82:	jmp    0x412ed6
  412e84:	imul   edx,DWORD PTR [ecx],0x58
  412e87:	sub    ebp,DWORD PTR [edi+0x2649037b]
  412e8d:	(bad)
  412e90:	lock test al,0xf0
  412e93:	xor    DWORD PTR fs:[esi+0x8],edi
  412e97:	add    eax,DWORD PTR [ecx-0x2621a025]
  412e9d:	add    eax,0xead5d4fc
  412ea2:	call   0x541ef52e
  412ea7:	mov    esp,0x7542f004
  412eac:	and    eax,0x77b69503
  412eb1:	jae    0x412efa
  412eb3:	(bad)  
  412eb4:	mov    eax,ds:0x14b272ba
  412eb9:	fwait
  412eba:	jle    0x412ebe
  412ebc:	mov    al,0x66
  412ebe:	cmp    DWORD PTR [ebx],eax
  412ec0:	xchg   ebx,eax
  412ec1:	pusha  
  412ec2:	sti    
  412ec3:	fcom   DWORD PTR [esi-0x12359987]
  412ec9:	mov    esp,0x39dd3850
  412ece:	pop    esi
  412ecf:	adc    BYTE PTR [ebp-0x64],cl
  412ed2:	fsubr  QWORD PTR [esi]
  412ed4:	ret    0x4917
  412ed7:	or     al,0xcb
  412ed9:	add    DWORD PTR ds:0x63ca52c7,esp
  412edf:	enter  0xb5ee,0xb4
  412ee3:	rcr    DWORD PTR [edx-0x38df0d36],1
  412ee9:	mov    cl,0x64
  412eeb:	pop    ecx
  412eec:	mov    BYTE PTR [ebx+esi*2-0xd],dh
  412ef0:	aad    0xc0
  412ef2:	push   ss
  412ef3:	in     eax,0xa7
  412ef5:	aaa    
  412ef6:	in     eax,0xc
  412ef8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ef9:	pop    ss
  412efa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412efb:	fwait
  412efc:	and    BYTE PTR [edx-0x5246e7a6],dh
  412f02:	mov    bl,0x19
  412f04:	inc    ecx
  412f05:	sbb    ch,0xc9
  412f08:	inc    BYTE PTR [edx-0x5ddb0ceb]
  412f0e:	inc    edx
  412f0f:	cld    
  412f10:	pop    esi
  412f11:	(bad)  
  412f12:	sub    eax,DWORD PTR [ebp+0x18]
  412f15:	mov    ebx,0x2c0a6867
  412f1a:	sbb    al,0x1b
  412f1c:	or     al,0x2d
  412f1e:	js     0x412ef1
  412f20:	into   
  412f21:	push   eax
  412f22:	inc    ebx
  412f23:	test   bh,cl
  412f25:	imul   edx,DWORD PTR [esp+ebx*2-0x4c],0xffffffc7
  412f2a:	add    dl,BYTE PTR [ebp-0x3d]
  412f2d:	ret    0xaaa2
  412f30:	sub    DWORD PTR [edi+0x62],eax
  412f33:	mov    BYTE PTR [ecx+0x1b],cl
  412f36:	jo     0x412f69
  412f38:	jle    0x412f36
  412f3a:	or     eax,DWORD PTR [ebx+0x28]
  412f3d:	js     0x412efd
  412f3f:	lds    eax,FWORD PTR [ebp-0x1c]
  412f42:	lods   al,BYTE PTR ds:[esi]
  412f43:	xchg   ebp,eax
  412f44:	mov    edx,0xc469a68
  412f4a:	xchg   ecx,eax
  412f4b:	xor    cl,BYTE PTR [ecx-0x3769b41b]
  412f51:	push   ecx
  412f52:	inc    esp
  412f53:	mov    eax,ds:0xe9b5f436
  412f58:	popf   
  412f59:	cli    
  412f5a:	xchg   ebx,eax
  412f5b:	ins    BYTE PTR es:[edi],dx
  412f5c:	je     0x412f91
  412f5e:	lea    ebp,[ebx+ecx*8+0x3a]
  412f62:	loope  0x412f4c
  412f64:	mov    eax,0x16b9bf19
  412f69:	mov    bh,BYTE PTR [edx+0x6d896cb6]
  412f6f:	cld    
  412f70:	loopne 0x412efa
  412f72:	sar    bl,cl
  412f74:	test   BYTE PTR [ecx-0xe781d6e],0x39
  412f7b:	mov    DWORD PTR [edi-0xbc110],ecx
  412f81:	fwait
  412f82:	mov    edi,0x5b505b5b
  412f87:	dec    esi
  412f88:	sub    al,BYTE PTR [eax+0x5501afee]
  412f8e:	(bad)
  412f93:	loop   0x412f42
  412f95:	aad    0xeb
  412f97:	sbb    ch,BYTE PTR [ebp+0x58d7f6e1]
  412f9d:	out    dx,eax
  412f9e:	adc    eax,0xaeafa7f0
  412fa3:	or     al,0x3c
  412fa5:	mov    esp,0x292ffdd7
  412faa:	mov    ah,0x30
  412fac:	es ss ins BYTE PTR es:[edi],dx
  412faf:	call   FWORD PTR [ecx+0x2913d4b6]
  412fb5:	std    
  412fb6:	test   eax,0x86bc9df4
  412fbb:	mov    bh,0xed
  412fbd:	or     al,0xcf
  412fbf:	stos   BYTE PTR es:[edi],al
  412fc0:	push   ebp
  412fc1:	scas   al,BYTE PTR es:[edi]
  412fc2:	sar    DWORD PTR [ebp+0x2efa739b],cl
  412fc8:	out    dx,eax
  412fc9:	shl    DWORD PTR [ecx-0x3d],1
  412fcc:	add    bl,BYTE PTR [ecx]
  412fce:	xor    al,0x8
  412fd0:	fnstcw WORD PTR [eax+0x6ac96af2]
  412fd6:	push   ebx
  412fd7:	xor    al,0xb4
  412fd9:	aas    
  412fda:	mov    cl,BYTE PTR [ecx+esi*4]
  412fdd:	shr    DWORD PTR [ebp-0xb],0xb0
  412fe1:	jmp    0xefee:0x58580473
  412fe8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fe9:	sub    eax,0x66e59739
  412fee:	loope  0x412fdd
  412ff0:	inc    ecx
  412ff1:	imul   ebx,edx,0xcf3219e3
  412ff7:	mov    es,eax
  412ff9:	push   es
  412ffa:	fnsave [ebx]
  412ffc:	mov    ebx,0x55332034
  413001:	iret   
  413002:	jmp    0x70c0:0xa714b1e
  413009:	enter  0x590a,0xcf
  41300d:	jb     0x41302c
  41300f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413010:	fwait
  413011:	sti    
  413012:	cmp    ebx,DWORD PTR [edi+0x7c]
  413015:	dec    edx
  413016:	sub    eax,0x3d89a1f1
  41301b:	bound  edi,QWORD PTR [esi+esi*1+0x37]
  41301f:	int    0x71
  413021:	(bad)  
  413022:	jl     0x413065
  413024:	adc    dl,ah
  413026:	sti    
  413027:	scas   al,BYTE PTR es:[edi]
  413028:	test   eax,0x3c6d7f00
  41302d:	loope  0x413056
  41302f:	mov    cl,0xcd
  413031:	xchg   ecx,eax
  413032:	or     ah,cl
  413034:	ror    dh,0xdf
  413037:	xor    BYTE PTR [eax],ah
  413039:	xor    DWORD PTR [ebx-0x50],edi
  41303c:	push   ds
  41303d:	push   ebx
  41303e:	add    DWORD PTR [ecx-0x14],ebx
  413041:	xor    al,BYTE PTR ds:0xf404d0e8
  413047:	mov    al,ds:0xd6dd3f7
  41304c:	jl     0x413023
  41304e:	fdiv   DWORD PTR [edi+0x5f38c318]
  413054:	(bad)  
  413055:	or     al,0xc6
  413057:	or     DWORD PTR ds:0xc7ef7a2c,ecx
  41305d:	jae    0x41301f
  41305f:	jne    0x4130c5
  413061:	xor    DWORD PTR [ecx-0x68dfeae3],eax
  413067:	fstp   DWORD PTR [ebp+0x4f]
  41306a:	pop    esi
  41306b:	mov    al,0x7c
  41306d:	jge    0x41306c
  41306f:	or     DWORD PTR [edx],eax
  413071:	mov    DWORD PTR [edi-0x20],0x57234a3a
  413078:	cmp    eax,0xb71d5710
  41307d:	push   esi
  41307e:	(bad)  
  41307f:	not    BYTE PTR [edx-0x5f]
  413082:	repz cmc 
  413084:	lea    ebx,[edi-0x2f]
  413087:	jp     0x4130be
  413089:	adc    DWORD PTR [ecx+ebp*2+0x28],0xd04a1bb9
  413091:	(bad)  
  413092:	mov    BYTE PTR [edi],ah
  413094:	add    al,BYTE PTR [ebx-0x479c8542]
  41309a:	inc    edi
  41309b:	(bad)  
  41309c:	and    eax,0x3eed74f8
  4130a1:	dec    eax
  4130a2:	mov    esp,0xcfe92a0f
  4130a7:	call   0x165990b0
  4130ac:	imul   edi,DWORD PTR [edi+edi*4],0xffffff8e
  4130b0:	test   eax,0x11bece0a
  4130b5:	mov    ds:0x56759ec0,eax
  4130ba:	fld    QWORD PTR [esi+0x1c196346]
  4130c0:	jle    0x41306d
  4130c2:	xchg   edx,eax
  4130c3:	fisttp QWORD PTR [ecx+0x3cf6d7d6]
  4130c9:	pop    ds
  4130ca:	add    DWORD PTR [ecx-0x75c36a37],ecx
  4130d0:	cli    
  4130d1:	dec    ebp
  4130d2:	inc    edx
  4130d3:	xchg   ebp,eax
  4130d4:	or     cl,0xae
  4130d7:	jbe    0x4130e4
  4130d9:	call   0xebcf:0xde44401f
  4130e0:	stos   DWORD PTR es:[edi],eax
  4130e1:	mov    WORD PTR [edx+0x1c536bfa],?
  4130e7:	push   0x29
  4130e9:	mov    eax,ds:0xc1fab41b
  4130ee:	sar    BYTE PTR [edi],0x97
  4130f1:	adc    DWORD PTR [esi+0x4d28facd],ebp
  4130f7:	jg     0x413091
  4130f9:	jecxz  0x413139
  4130fb:	clc    
  4130fc:	ja     0x413137
  4130fe:	mov    edi,DWORD PTR [edx+edx*1]
  413101:	ins    BYTE PTR es:[edi],dx
  413102:	rcr    BYTE PTR [esp+eax*4],0xb6
  413106:	fmul   DWORD PTR [ecx+0x72e191ed]
  41310c:	icebp  
  41310d:	cmp    al,BYTE PTR [ecx+0x295bda3a]
  413113:	scas   al,BYTE PTR es:[edi]
  413114:	push   ds
  413115:	add    ah,bh
  413117:	fnstsw ax
  413119:	ss add al,0x7d
  41311c:	cli    
  41311d:	pop    es
  41311e:	mov    BYTE PTR [eax-0x7997b2f2],bh
  413124:	jns    0x4130ee
  413126:	dec    edi
  413127:	psadbw mm3,QWORD PTR [edx]
  41312a:	jmp    0x9aa8:0x4d31d697
  413131:	push   eax
  413132:	pop    ss
  413133:	push   ss
  413134:	clc    
  413135:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413136:	sub    DWORD PTR [esi],edx
  413138:	lock mov fs:0xd353fdff,al
  41313f:	ret    0x303e
  413142:	jae    0x41318c
  413144:	and    DWORD PTR [edi-0x16],edx
  413147:	gs pushf 
  413149:	add    ebp,DWORD PTR [esi-0x1c988f78]
  41314f:	arpl   WORD PTR [edx+0x323ceb82],ax
  413155:	cmp    dl,BYTE PTR [ecx+eiz*2+0x6aceb3bf]
  41315c:	sti    
  41315d:	mul    dl
  41315f:	sub    bl,ch
  413161:	push   edi
  413162:	pop    es
  413163:	je     0x413105
  413165:	pop    ebp
  413166:	mov    esi,0xf92b659c
  41316b:	mov    ah,0xa8
  41316d:	dec    eax
  41316e:	sti    
  41316f:	add    BYTE PTR [edi+0xd6a9d3c],dl
  413175:	cmp    al,cl
  413177:	jbe    0x413199
  413179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41317a:	shl    BYTE PTR [ecx+esi*1-0x18daf113],1
  413181:	dec    esp
  413182:	hlt    
  413183:	addr16 push es
  413185:	outs   dx,DWORD PTR ds:[esi]
  413186:	jl     0x4131e2
  413188:	cwde   
  413189:	sub    DWORD PTR [edx+0x41081cc5],edi
  41318f:	xchg   ebp,eax
  413190:	push   cs
  413191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413192:	mov    ch,0xd9
  413194:	jmp    0x413160
  413196:	loopne 0x4131dd
  413198:	xchg   ebp,eax
  413199:	pop    eax
  41319a:	out    0x11,eax
  41319c:	aaa    
  41319d:	and    eax,0x2706cb01
  4131a2:	ja     0x4131aa
  4131a4:	jo     0x41316f
  4131a6:	(bad)  
  4131a7:	and    eax,DWORD PTR [ecx-0x5f]
  4131aa:	mov    WORD PTR [edi-0x4e],gs
  4131ad:	mov    ah,0xfb
  4131af:	mov    edi,0x32eda849
  4131b4:	sub    DWORD PTR [ebp-0x22d3f424],0xffffffb6
  4131bb:	and    dl,bl
  4131bd:	inc    ecx
  4131be:	adc    eax,ecx
  4131c0:	data16 addr16 cmp ah,bh
  4131c4:	mov    gs,WORD PTR [ebx]
  4131c6:	add    eax,0x6cb280cf
  4131cb:	fwait
  4131cc:	or     cl,BYTE PTR [edi+ebx*8+0x24]
  4131d0:	mov    ?,WORD PTR [edx]
  4131d2:	dec    edi
  4131d3:	mov    edx,esi
  4131d5:	sbb    cl,dh
  4131d7:	ret    
  4131d8:	jecxz  0x413209
  4131da:	mov    cl,0x8e
  4131dc:	xchg   edi,eax
  4131dd:	lds    esp,FWORD PTR [eax+0x5a]
  4131e0:	popa   
  4131e1:	or     dl,bh
  4131e3:	sub    ebp,DWORD PTR [ecx]
  4131e5:	and    bh,BYTE PTR [ebx+ebp*1+0x1cd129f8]
  4131ec:	stos   BYTE PTR es:[edi],al
  4131ed:	mov    ecx,0x469dc92
  4131f2:	dec    ebp
  4131f3:	push   ebp
  4131f4:	in     eax,dx
  4131f5:	int    0x4a
  4131f7:	jmp    0xd7571726
  4131fc:	add    BYTE PTR [edi-0x6e],ah
  4131ff:	int3   
  413200:	shl    DWORD PTR [edx],cl
  413202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413203:	div    DWORD PTR ds:[edx+eiz*1]
  413207:	in     eax,0xa5
  413209:	js     0x4131d3
  41320b:	lea    edi,[esi-0x32]
  41320e:	out    0xd2,al
  413210:	xchg   esp,eax
  413211:	lods   eax,DWORD PTR ds:[esi]
  413212:	ret    0x7634
  413215:	out    dx,eax
  413216:	pop    ecx
  413217:	outs   dx,BYTE PTR ds:[esi]
  413218:	sub    ah,BYTE PTR [ebx+0x1bd7d046]
  41321e:	ins    BYTE PTR es:[edi],dx
  41321f:	cmp    eax,DWORD PTR [esi+edi*4-0x60d44c6a]
  413226:	out    dx,al
  413227:	test   ecx,ecx
  413229:	dec    eax
  41322a:	push   edx
  41322b:	fs das 
  41322d:	sar    DWORD PTR [ecx+0x33b6698e],cl
  413233:	jne    0x41322b
  413235:	mov    eax,ds:0x5bcae313
  41323a:	cwde   
  41323b:	(bad)  
  41323c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41323d:	xor    eax,DWORD PTR [eax+0x5e872d8a]
  413243:	cmp    eax,0xac1bf984
  413248:	sbb    al,0x20
  41324a:	sbb    eax,DWORD PTR [ebx+0x4d01f790]
  413250:	mov    ebx,0x7f82a525
  413255:	test   eax,0x1009e07c
  41325a:	or     edi,edx
  41325c:	mov    edx,0x9ff2b466
  413261:	cs push esp
  413263:	pop    ss
  413264:	repz pop esp
  413266:	(bad)  
  413267:	imul   edi,DWORD PTR [edx+0x540c8746],0xa3a40c55
  413271:	cmp    BYTE PTR [edx],0xbd
  413274:	scas   eax,DWORD PTR es:[edi]
  413275:	cli    
  413276:	and    al,0x3b
  413278:	fs inc eax
  41327a:	mov    eax,0xb3cf6e67
  41327f:	or     al,0xb7
  413281:	mov    al,ds:0xffd8ff58
  413286:	punpcklbw mm0,DWORD PTR [ebp+0x1e029525]
  41328d:	addps  xmm2,xmm3
  413290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413291:	lea    eax,[eax+0x12]
  413294:	mov    ebp,0xdf28f3ae
  413299:	(bad)  
  41329a:	add    DWORD PTR [bp+di-0x16bc],0x5c
  4132a0:	mov    bh,0x46
  4132a2:	popa   
  4132a3:	imul   edi,edx,0x6f
  4132a6:	mov    dl,0x58
  4132a8:	mov    cl,0xbf
  4132aa:	mov    es,esi
  4132ac:	adc    al,0xe6
  4132ae:	xchg   ebx,eax
  4132af:	push   ds
  4132b0:	es dec ecx
  4132b2:	out    dx,al
  4132b3:	es jns 0x413326
  4132b6:	jnp    0x413295
  4132b8:	xor    eax,0x1e1bdb17
  4132bd:	dec    ebx
  4132be:	into   
  4132bf:	mov    WORD PTR [eax],?
  4132c1:	push   ss
  4132c2:	inc    edi
  4132c3:	ret    0xbb33
  4132c6:	ret    
  4132c7:	fcom   QWORD PTR [edx-0x57642e1a]
  4132cd:	sti    
  4132ce:	cdq    
  4132cf:	fisub  WORD PTR [eax]
  4132d1:	lds    edx,FWORD PTR [edx]
  4132d3:	(bad)  
  4132d5:	bound  edx,QWORD PTR es:[eiz*1+0x5cf7e3bc]
  4132dd:	push   edi
  4132de:	hlt    
  4132df:	push   ebp
  4132e0:	jg     0x413301
  4132e2:	jg     0x41330c
  4132e4:	mov    esi,0xdba66b96
  4132e9:	mov    edi,0xd51afdda
  4132ee:	lods   al,BYTE PTR ds:[esi]
  4132ef:	and    BYTE PTR [edi-0x36],dl
  4132f2:	nop
  4132f3:	dec    ecx
  4132f4:	cmp    eax,0x4accc171
  4132f9:	iret   
  4132fa:	(bad)  
  4132fb:	mov    eax,0x7e4221b
  413300:	adc    eax,0xfbd51b76
  413305:	ret    0x2f4c
  413308:	push   es
  413309:	add    BYTE PTR [esi+0x4f],0xe9
  41330d:	mov    esp,0xc23d636a
  413312:	mov    ecx,0x7310b749
  413317:	jno    0x4132f9
  413319:	inc    esp
  41331a:	jno    0x4132dd
  41331c:	js     0x4132f5
  41331e:	and    edx,edx
  413320:	retf   0xd6a2
  413323:	adc    edx,edx
  413325:	js     0x41336d
  413327:	jo     0x413328
  413329:	push   edx
  41332a:	clc    
  41332b:	inc    esi
  41332c:	inc    edi
  41332d:	mov    ebx,0x9395c5fa
  413332:	mov    al,ds:0x52c7f28f
  413337:	sti    
  413338:	lods   al,BYTE PTR ds:[esi]
  413339:	in     al,dx
  41333a:	ins    DWORD PTR es:[edi],dx
  41333b:	call   0x3a0456b1
  413340:	sub    dl,dl
  413342:	inc    edx
  413343:	lahf   
  413344:	mov    bl,0x76
  413346:	dec    esp
  413347:	fbstp  TBYTE PTR [ecx]
  413349:	mov    esi,0xe9bceb81
  41334e:	push   edx
  41334f:	or     BYTE PTR [ebx-0xdab416d],dl
  413355:	nop
  413356:	or     ebx,DWORD PTR [ebx+0x25]
  413359:	xor    bl,BYTE PTR [eax-0x6c]
  41335c:	loope  0x4133b9
  41335e:	fild   WORD PTR ds:0x155806a3
  413364:	cli    
  413365:	inc    ebp
  413366:	push   ebp
  413367:	sbb    esi,ebp
  413369:	push   ss
  41336a:	mov    ch,0xa7
  41336c:	and    esp,DWORD PTR [eax+ebx*2+0x4c]
  413370:	or     al,0x7e
  413372:	inc    ecx
  413373:	inc    ecx
  413374:	sub    BYTE PTR [ebp+0x28],0x9c
  413378:	repz or eax,eax
  41337b:	cmp    DWORD PTR [esi+0x2f],esp
  41337e:	sbb    BYTE PTR [ebp+0x56b3986a],ch
  413384:	adc    DWORD PTR [ebp+0x1],edx
  413387:	add    al,0x5d
  413389:	mov    ah,0x0
  41338b:	mov    esp,0xf9681e51
  413390:	ret    0xbc4f
  413393:	inc    edx
  413394:	or     bh,dh
  413396:	adc    BYTE PTR [ebx+eiz*1-0x4afb7c3b],0xf9
  41339e:	push   es
  41339f:	cmp    BYTE PTR [ecx-0x66],bl
  4133a2:	jmp    0x92f5:0xa9e522d8
  4133a9:	das    
  4133aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133ab:	sti    
  4133ac:	into   
  4133ad:	sub    eax,0x21075052
  4133b2:	xor    DWORD PTR [esi+0x75428a36],ebp
  4133b8:	push   es
  4133b9:	mov    cs,ebx
  4133bb:	mov    WORD PTR [ecx+0x2],?
  4133be:	in     eax,dx
  4133bf:	pop    ebx
  4133c0:	lods   eax,DWORD PTR ds:[esi]
  4133c1:	shl    BYTE PTR [edi+ebp*4],cl
  4133c4:	and    al,0xd7
  4133c6:	push   ebp
  4133c7:	pop    edi
  4133c8:	aam    0xb7
  4133ca:	inc    esp
  4133cb:	ret    
  4133cc:	fldenv [edi+0x1a]
  4133cf:	(bad)  
  4133d0:	or     BYTE PTR [edx+esi*1-0x7928584b],ah
  4133d7:	fwait
  4133d8:	mov    DWORD PTR [esi],esi
  4133da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133db:	or     al,0xbb
  4133dd:	xor    edi,edi
  4133df:	xchg   edi,eax
  4133e0:	mov    bl,0x29
  4133e2:	sub    DWORD PTR [eax],0xfcc18472
  4133e8:	ds pusha 
  4133ea:	cmc    
  4133eb:	pusha  
  4133ec:	das    
  4133ed:	mov    edi,esp
  4133ef:	xor    eax,0x69b88de8
  4133f4:	out    0x5c,eax
  4133f6:	in     al,dx
  4133f7:	leave  
  4133f8:	pop    edi
  4133f9:	mov    ebx,0xea3dd454
  4133fe:	retf   0xc385
  413401:	rol    bl,0xf1
  413404:	push   ebx
  413405:	test   al,0xd0
  413407:	jg     0x413399
  413409:	aam    0x9d
  41340b:	popa   
  41340c:	mov    eax,0xee93004c
  413412:	loop   0x4133bf
  413414:	dec    eax
  413415:	popf   
  413416:	out    0xc4,al
  413418:	pushf  
  413419:	jnp    0x41347b
  41341b:	jae    0x4133a5
  41341d:	sbb    eax,0x78f83c5
  413422:	ja     0x413451
  413424:	out    0x52,al
  413426:	in     eax,dx
  413427:	pop    esp
  413428:	and    DWORD PTR [edx+0x545ee3c6],esi
  41342e:	adc    BYTE PTR [ecx-0x61],al
  413431:	bound  esi,QWORD PTR [ebp-0x2f]
  413434:	mov    esi,0x2f37f3e9
  413439:	out    0x94,eax
  41343b:	adc    DWORD PTR [eax],ebp
  41343d:	stos   BYTE PTR es:[edi],al
  41343e:	popf   
  41343f:	mov    edx,0x3fcd9cc9
  413444:	std    
  413445:	mov    gs,eax
  413447:	and    DWORD PTR [edi],0x319e2d73
  41344d:	jno    0x413427
  41344f:	xor    BYTE PTR [ecx-0xfb66eeb],bl
  413455:	outs   dx,DWORD PTR ds:[esi]
  413456:	nop
  413457:	call   0xfc96:0xd8bc6b1b
  41345e:	mov    esp,ecx
  413460:	or     al,0xce
  413462:	inc    esp
  413463:	int3   
  413464:	inc    ebx
  413465:	pop    ss
  413466:	in     al,dx
  413467:	xchg   ecx,eax
  413468:	xchg   esi,eax
  413469:	sbb    ebx,DWORD PTR [eax]
  41346b:	in     al,0x9e
  41346d:	(bad)  
  41346e:	rol    DWORD PTR [edi-0x18],0x83
  413472:	push   0x49
  413474:	add    esp,DWORD PTR [esi]
  413476:	std    
  413477:	sub    ebx,DWORD PTR [esi+0x74]
  41347a:	(bad)  
  41347b:	popa   
  41347c:	xlat   BYTE PTR ds:[ebx]
  41347d:	data16 aam 0x2b
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	jge    0x41345c
  413483:	pop    eax
  413484:	outs   dx,DWORD PTR ds:[esi]
  413485:	inc    esp
  413486:	int3   
  413487:	nop
  413488:	mov    ebp,0xe941160c
  41348d:	je     0x413420
  41348f:	hlt    
  413490:	iret   
  413491:	or     al,0x30
  413493:	loope  0x41345e
  413495:	fisubr WORD PTR [ebx-0x6]
  413498:	dec    ecx
  413499:	in     eax,0xc8
  41349b:	cmc    
  41349c:	adc    BYTE PTR [esi],al
  41349e:	fisub  WORD PTR es:[eax+0x15]
  4134a2:	inc    ebx
  4134a3:	xor    DWORD PTR [edi-0x654a46da],ebx
  4134a9:	jo     0x413490
  4134ab:	lahf   
  4134ac:	cli    
  4134ad:	or     BYTE PTR [ecx],dl
  4134af:	xchg   edi,eax
  4134b0:	cs mov ah,0xb2
  4134b3:	adc    BYTE PTR [ebp+0x54],bl
  4134b6:	inc    ebp
  4134b7:	push   0x41
  4134b9:	fcom   QWORD PTR [ebx]
  4134bb:	cmp    DWORD PTR [esi],edi
  4134bd:	mov    bl,0xae
  4134bf:	pmaddwd mm3,mm7
  4134c2:	inc    esp
  4134c3:	adc    eax,0x7cc760a7
  4134c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134c9:	jns    0x413462
  4134cb:	aam    0x4
  4134cd:	stc    
  4134ce:	inc    ebp
  4134cf:	inc    esp
  4134d0:	xchg   BYTE PTR [esi+0x36],dl
  4134d3:	mov    ds:0x990f19eb,al
  4134d8:	out    0xf8,al
  4134da:	stos   BYTE PTR es:[edi],al
  4134db:	cdq    
  4134dc:	adc    eax,0x28757a9a
  4134e1:	or     al,0x42
  4134e3:	sub    BYTE PTR [eax+edx*1],al
  4134e6:	pushf  
  4134e7:	cdq    
  4134e8:	dec    esp
  4134e9:	pop    ebp
  4134ea:	mov    bl,0xe1
  4134ec:	ret    0xe180
  4134ef:	inc    ecx
  4134f0:	inc    esi
  4134f1:	outs   dx,DWORD PTR ds:[esi]
  4134f2:	nop
  4134f3:	push   sp
  4134f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134f6:	xchg   edx,ebx
  4134f8:	or     dl,0xf7
  4134fb:	jb     0x413574
  4134fd:	ret    0x76e
  413500:	adc    ah,BYTE PTR [edx+0x5a601335]
  413506:	add    eax,0x4622580
  41350b:	push   eax
  41350c:	inc    eax
  41350d:	jbe    0x4134e9
  41350f:	adc    dh,BYTE PTR [ebp-0x21]
  413512:	jge    0x4134d2
  413514:	test   ecx,eax
  413516:	jns    0x41358b
  413518:	aad    0x3f
  41351a:	push   ecx
  41351b:	mov    ds:0xbfcb1d28,eax
  413520:	jmp    0x2c74:0xccdb5eb4
  413527:	cmp    eax,0x95b1a41f
  41352c:	push   ds
  41352d:	jl     0x4134d5
  41352f:	in     eax,0x9
  413531:	inc    ecx
  413532:	push   ss
  413533:	xchg   ecx,eax
  413534:	(bad)  
  413535:	loope  0x413563
  413537:	adc    eax,esp
  413539:	sbb    eax,0x7cfe10a2
  41353e:	int3   
  41353f:	mov    DWORD PTR [eax],ebx
  413541:	ret    
  413542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413543:	xchg   esp,eax
  413544:	imul   esp,DWORD PTR [ebp+0x2e],0x5b
  413548:	add    al,0xd6
  41354a:	daa    
  41354b:	out    0x81,eax
  41354d:	cwde   
  41354e:	sbb    ah,al
  413550:	aas    
  413551:	loop   0x413570
  413553:	pop    ss
  413554:	mov    ?,WORD PTR [ebp+0x0]
  413557:	addr16 push 0x2676b31
  41355d:	in     al,dx
  41355e:	push   esi
  41355f:	mov    eax,ds:0xb6f0be54
  413564:	into   
  413565:	dec    esp
  413566:	(bad)  
  413567:	and    BYTE PTR [esi-0x3d],dl
  41356a:	das    
  41356b:	xchg   BYTE PTR [esi+0x7a79dfe7],ah
  413571:	fidiv  DWORD PTR [ebp-0x54]
  413574:	xor    dh,bh
  413576:	inc    ebp
  413577:	mov    al,bh
  413579:	sbb    eax,0xb0600f84
  41357e:	dec    edx
  41357f:	jle    0x41358f
  413581:	sbb    DWORD PTR [ebp-0x165d06e5],0x55
  413588:	gs (bad) 
  41358a:	jmp    0xe57f0232
  41358f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413590:	dec    ebx
  413591:	xchg   edi,eax
  413592:	in     al,0xd3
  413594:	dec    edx
  413595:	jle    0x413551
  413597:	sbb    bh,BYTE PTR [ebx-0x1b]
  41359a:	add    BYTE PTR [ecx+0x29567af],dl
  4135a0:	inc    edx
  4135a1:	(bad)  
  4135a2:	fdivr  st(5),st
  4135a4:	cmp    esi,edx
  4135a6:	inc    ebx
  4135a7:	or     DWORD PTR [edx],ebx
  4135a9:	clc    
  4135aa:	sub    esp,DWORD PTR [ebp-0x3]
  4135ad:	int3   
  4135ae:	or     DWORD PTR [eax],ebp
  4135b0:	xchg   BYTE PTR [ebx+0x57],ch
  4135b3:	push   ebp
  4135b4:	scas   al,BYTE PTR es:[edi]
  4135b5:	jne    0x4135ad
  4135b7:	and    eax,0x923fb732
  4135bc:	adc    DWORD PTR [ecx+edx*4+0x1a],edi
  4135c0:	pop    esi
  4135c1:	loopne 0x41355c
  4135c3:	mov    edx,0x37457796
  4135c8:	or     DWORD PTR [edx],edx
  4135ca:	mov    bh,ah
  4135cc:	call   0x63c1118c
  4135d1:	jl     0x41360a
  4135d3:	cs lahf 
  4135d5:	add    al,0xda
  4135d7:	cmc    
  4135d8:	enter  0x2228,0x3
  4135dc:	pop    ds
  4135dd:	or     BYTE PTR [ecx],0x3
  4135e0:	xor    DWORD PTR [ecx],esi
  4135e2:	fidivr WORD PTR [edi]
  4135e4:	xchg   BYTE PTR [ebx],dh
  4135e6:	or     DWORD PTR [edx+0x51],esp
  4135e9:	ja     0x4135f1
  4135eb:	or     ecx,DWORD PTR ds:0xdc45368c
  4135f1:	inc    ebx
  4135f2:	cmp    dh,bh
  4135f4:	arpl   WORD PTR [esi+0x3eb8500],bx
  4135fa:	aam    0xe3
  4135fc:	out    dx,al
  4135fd:	xor    al,0x21
  4135ff:	sub    DWORD PTR [ebp-0x11f3edac],edi
  413605:	jecxz  0x41367c
  413607:	hlt    
  413608:	jno    0x413642
  41360a:	push   es
  41360b:	or     DWORD PTR [edx+0x6e],edi
  41360e:	sti    
  41360f:	sbb    BYTE PTR [esi-0x6577f492],dl
  413615:	and    BYTE PTR ds:0x95ad2612,0x6f
  41361c:	into   
  41361d:	xchg   edi,eax
  41361e:	ss and eax,0x673ee57c
  413624:	xchg   edi,eax
  413625:	push   esi
  413626:	jns    0x4135c3
  413628:	retf   
  413629:	push   esp
  41362a:	inc    edi
  41362b:	rol    BYTE PTR [ecx-0x5276aff],1
  413631:	pop    ebp
  413632:	test   eax,0x6ddc3a6f
  413637:	fdiv   QWORD PTR [eax+0x5d]
  41363a:	push   ecx
  41363b:	push   edi
  41363c:	retf   
  41363d:	(bad)  
  41363e:	mov    BYTE PTR [ebp+0x5518bd9f],dh
  413644:	fmul   DWORD PTR [ebx]
  413646:	xor    BYTE PTR [ebp-0x2880b9c5],cl
  41364c:	sti    
  41364d:	push   0x7bb900c5
  413652:	ins    BYTE PTR es:[edi],dx
  413653:	das    
  413654:	in     eax,0xaa
  413656:	push   eax
  413657:	inc    eax
  413658:	and    eax,0x8c64c0d2
  41365d:	imul   ebx,DWORD PTR [edi+0x4b986238],0x1f8398fd
  413667:	rcr    ch,cl
  413669:	push   es
  41366a:	inc    esp
  41366b:	jmp    0x41365f
  41366d:	fs imul esp,ebx,0x9
  413671:	inc    ecx
  413672:	cdq    
  413673:	jmp    0x41364a
  413675:	sti    
  413676:	xor    bh,0x4f
  413679:	shl    BYTE PTR [ebx-0x2c],0xca
  41367d:	(bad)  
  41367e:	out    0x42,al
  413680:	pop    ecx
  413681:	cmp    DWORD PTR [eax],esp
  413683:	sahf   
  413684:	dec    esi
  413685:	ret    
  413686:	popa   
  413687:	push   ebx
  413688:	fsub   QWORD PTR [edi]
  41368a:	mov    al,0xa7
  41368c:	xchg   esi,eax
  41368d:	xor    DWORD PTR [ecx],0x4e37bcc1
  413693:	(bad)  
  413694:	mov    eax,0x88817bba
  413699:	std    
  41369a:	sbb    DWORD PTR [edi+eiz*8],ecx
  41369d:	xor    BYTE PTR [edx+0x12630872],bh
  4136a3:	mov    dh,0xa9
  4136a5:	fldenv [edx+0x15]
  4136a8:	push   edi
  4136a9:	dec    ecx
  4136aa:	sub    ecx,ebx
  4136ac:	push   cs
  4136ad:	loopne 0x4136ea
  4136af:	push   ss
  4136b0:	mov    ecx,0xe16b95ea
  4136b5:	ret    
  4136b6:	inc    eax
  4136b7:	scas   eax,DWORD PTR es:[edi]
  4136b8:	or     al,0x24
  4136ba:	mov    bh,0xf0
  4136bc:	jnp    0x413658
  4136be:	out    dx,al
  4136bf:	retf   
  4136c0:	ror    BYTE PTR [ebx-0x62491fd7],0x15
  4136c7:	fisubr WORD PTR [ecx-0x3f]
  4136ca:	mov    ds:0x53dac1a3,eax
  4136cf:	psrlw  mm3,QWORD PTR [esi+0x2bf8e5f4]
  4136d6:	jmp    0xdf5c5ce3
  4136db:	adc    ecx,DWORD PTR [ebp+0x6f]
  4136de:	inc    edi
  4136df:	inc    ecx
  4136e0:	jp     0x41374a
  4136e2:	push   cs
  4136e3:	mov    dh,0xb0
  4136e5:	cmp    al,0xc5
  4136e7:	pushf  
  4136e8:	stc    
  4136e9:	xchg   bl,ch
  4136eb:	push   eax
  4136ec:	pop    esp
  4136ed:	inc    eax
  4136ee:	(bad)  
  4136ef:	sub    al,0x57
  4136f1:	gs sti 
  4136f3:	cli    
  4136f4:	pop    edx
  4136f5:	adc    BYTE PTR [edx-0x31],0x80
  4136f9:	xchg   esi,eax
  4136fa:	dec    ebx
  4136fb:	pop    ss
  4136fc:	cmc    
  4136fd:	jmp    0xcea920b3
  413702:	adc    BYTE PTR [edi],dl
  413704:	cmp    al,ch
  413706:	ret    
  413707:	dec    eax
  413708:	push   ebx
  413709:	(bad)  
  41370b:	into   
  41370c:	pop    edi
  41370d:	push   ss
  41370e:	mov    dl,0xda
  413710:	data16 fbld TBYTE PTR [eax]
  413713:	or     DWORD PTR [ebx+ecx*4-0x43eb37b9],eax
  41371a:	dec    ebp
  41371b:	je     0x4136a3
  41371d:	fild   WORD PTR [ecx-0x62]
  413720:	jg     0x41373e
  413722:	jp     0x41377c
  413724:	push   0x7a89bd47
  413729:	out    0xc6,al
  41372b:	loope  0x4136f5
  41372d:	push   0xffffffa1
  41372f:	push   ds
  413730:	les    esi,FWORD PTR [ebx+ebp*2+0x75]
  413734:	bound  ecx,QWORD PTR [ecx-0x166423]
  41373a:	aaa    
  41373b:	sub    eax,0x121fbfeb
  413740:	cmp    al,0xb8
  413742:	pop    esi
  413743:	xchg   edx,eax
  413744:	cld    
  413745:	(bad)  
  413746:	dec    BYTE PTR [eax-0x10]
  413749:	mov    edi,0xae390aa2
  41374e:	rol    BYTE PTR es:[eax],1
  413751:	neg    dh
  413753:	repz mov eax,0xbf9b8ea2
  413759:	or     DWORD PTR [ecx],ebx
  41375b:	retf   0x8c78
  41375e:	ins    DWORD PTR es:[edi],dx
  41375f:	dec    ebx
  413760:	pop    edx
  413761:	xchg   edx,eax
  413762:	xchg   ebx,eax
  413763:	or     al,0x24
  413765:	(bad)  
  413767:	xchg   esi,eax
  413768:	stos   DWORD PTR es:[edi],eax
  413769:	mov    ds:0xb59f05ff,al
  41376e:	dec    ebx
  41376f:	and    al,0x17
  413771:	jmp    0x85a2c9ae
  413776:	cmp    BYTE PTR [esi+0x9d7f2d7],bh
  41377c:	sub    BYTE PTR [eax],bl
  41377e:	lock pop edx
  413780:	adc    ch,BYTE PTR [ebp-0x79]
  413783:	mov    bl,0xcb
  413785:	imul   edx,DWORD PTR [ebp-0x5e],0xffffff9d
  413789:	fidivr WORD PTR [ecx-0x4524a71b]
  41378f:	cmp    eax,0x797c0c3f
  413794:	mov    DWORD PTR [eax-0x53d3a8f0],eax
  41379a:	or     BYTE PTR [ebx-0x16f62a1f],bl
  4137a0:	fdiv   st(2),st
  4137a2:	xchg   esi,eax
  4137a3:	dec    ecx
  4137a4:	cmp    al,BYTE PTR [edx]
  4137a6:	mov    esp,0x44ff9ea2
  4137ab:	(bad)  
  4137ac:	bound  ecx,QWORD PTR [ebp-0x18]
  4137af:	clc    
  4137b0:	or     eax,0xe8bc89a
  4137b5:	pop    ds
  4137b6:	jbe    0x41378f
  4137b8:	aas    
  4137b9:	pop    ebx
  4137ba:	pop    edx
  4137bb:	xchg   esp,eax
  4137bc:	sbb    al,0x92
  4137be:	pushf  
  4137bf:	and    al,0xd
  4137c1:	adc    al,0xe9
  4137c3:	pop    ecx
  4137c5:	scas   eax,DWORD PTR es:[edi]
  4137c6:	ror    BYTE PTR [eax],cl
  4137c8:	sbb    DWORD PTR [esp+ebx*1+0x23523e0a],ebx
  4137cf:	xor    DWORD PTR [eax],edi
  4137d1:	jo     0x413774
  4137d3:	lock lods eax,DWORD PTR ds:[esi]
  4137d5:	inc    ecx
  4137d6:	xchg   ebx,eax
  4137d7:	dec    edi
  4137d8:	fiadd  DWORD PTR [eax+0x72]
  4137db:	mov    edx,0x7a9a84cd
  4137e0:	(bad)  
  4137e1:	repnz fstp QWORD PTR [edx-0x2b]
  4137e5:	jno    0x41382c
  4137e7:	push   0x78920346
  4137ec:	push   es
  4137ed:	mov    ebx,0xaffaf92e
  4137f2:	sbb    edi,DWORD PTR [edx+0x38378ebc]
  4137f8:	lahf   
  4137f9:	mov    DWORD PTR [edx+0x47],edi
  4137fc:	cmp    DWORD PTR ds:0x5b0199da,ecx
  413802:	jl     0x41380b
  413804:	dec    ebp
  413805:	adc    ebx,DWORD PTR [edi]
  413807:	test   BYTE PTR [ebp+0x17a2a7d3],ah
  41380d:	sbb    al,0x8d
  41380f:	popa   
  413810:	mov    ah,0x36
  413812:	and    BYTE PTR [edx],dl
  413814:	iret   
  413815:	xor    BYTE PTR [edi-0x3e064432],0xde
  41381c:	test   DWORD PTR [ebx-0x74f0ef2e],ebp
  413822:	test   eax,0x14a61410
  413827:	add    al,0x1e
  413829:	call   0x1cec7fda
  41382e:	test   DWORD PTR [edx-0x28],ecx
  413831:	in     eax,0x93
  413833:	jb     0x41383a
  413835:	add    eax,0xec2cce31
  41383a:	pop    ds
  41383b:	xchg   DWORD PTR [edi+0x29374e2b],esp
  413841:	adc    ebp,DWORD PTR [edi]
  413843:	inc    eax
  413844:	fcmovb st,st(1)
  413846:	jbe    0x413876
  413848:	shr    BYTE PTR [edx],cl
  41384a:	sti    
  41384b:	(bad)  
  41384c:	loope  0x4137eb
  41384e:	push   ss
  41384f:	dec    edx
  413850:	push   esi
  413851:	mov    eax,ds:0xfd18bdac
  413856:	leave  
  413857:	adc    BYTE PTR [ebp+0x6efdcb2a],cl
  41385d:	sbb    BYTE PTR [ebp-0x36],dh
  413860:	repnz xchg ecx,eax
  413862:	out    dx,eax
  413863:	sbb    edx,DWORD PTR [ecx+edi*8]
  413866:	jne    0x4138d7
  413868:	test   BYTE PTR [ecx*8+0x7f19d804],bl
  41386f:	jno    0x413863
  413871:	fs push ss
  413873:	lds    edx,FWORD PTR [ebp-0x2c]
  413876:	inc    eax
  413877:	jno    0x4138c8
  413879:	xchg   BYTE PTR [edx+0x64],bh
  41387c:	into   
  41387d:	mov    ds:0xaa9b07f9,al
  413882:	imul   esp,DWORD PTR [esi-0x75],0x79
  413886:	cld    
  413887:	add    al,0x8d
  413889:	inc    ebp
  41388a:	aaa    
  41388b:	rcr    BYTE PTR [edx-0x68],cl
  41388e:	mov    esp,0x257020ce
  413893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413894:	or     DWORD PTR [edx+edi*2+0x33],ebp
  413898:	std    
  413899:	arpl   WORD PTR [edi-0x9],cx
  41389c:	test   eax,0xbac80650
  4138a1:	mov    cl,0x4
  4138a3:	sbb    esp,DWORD PTR [ebx]
  4138a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138a6:	scas   al,BYTE PTR es:[edi]
  4138a7:	mov    BYTE PTR [eax-0x3a],al
  4138aa:	push   esp
  4138ab:	or     eax,DWORD PTR [esi]
  4138ad:	mov    bh,0x11
  4138af:	out    0x8c,eax
  4138b1:	or     ebx,DWORD PTR [edi+0x487ff7e2]
  4138b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b8:	xor    eax,0xbb546ded
  4138bd:	pushf  
  4138be:	xchg   ecx,eax
  4138bf:	mov    fs,ebx
  4138c1:	or     eax,0xd4c4e297
  4138c6:	xchg   edi,eax
  4138c7:	mov    cl,0x26
  4138c9:	pop    ecx
  4138ca:	adc    eax,0xfb1c9e51
  4138cf:	add    cl,BYTE PTR [ebp-0x63]
  4138d2:	inc    esp
  4138d3:	sub    edi,DWORD PTR [edi]
  4138d5:	sub    BYTE PTR [edx-0x42399fea],bl
  4138db:	jo     0x41390a
  4138dd:	cwde   
  4138de:	mov    BYTE PTR [ebx+0xfae04dd],ah
  4138e4:	adc    al,0xd8
  4138e6:	(bad)  
  4138e7:	inc    edx
  4138e8:	(bad)  
  4138e9:	data16 shl BYTE PTR [edx+0x423c90f1],cl
  4138f0:	popa   
  4138f1:	mov    ah,0x57
  4138f3:	(bad)  
  4138f4:	(bad)  
  4138f5:	fisubr WORD PTR [esp+edi*4-0x62395047]
  4138fc:	sti    
  4138fd:	je     0x41394c
  4138ff:	mov    dl,0xdd
  413901:	test   eax,0xbf25e1c
  413906:	inc    edi
  413907:	out    dx,al
  413908:	cmp    BYTE PTR [edx-0x18ac44a4],bh
  41390e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41390f:	add    eax,0x4f32b5bc
  413914:	mov    WORD PTR [edi+0x7c756665],?
  41391a:	in     eax,dx
  41391b:	xchg   edx,eax
  41391c:	add    eax,0x7cbc9bb0
  413921:	xchg   esp,eax
  413922:	mov    bh,ah
  413924:	add    ch,dl
  413926:	or     eax,0xc5de5370
  41392b:	xor    eax,0x69b3c47
  413930:	cli    
  413931:	hlt    
  413932:	in     eax,dx
  413933:	or     DWORD PTR [edi],eax
  413935:	aaa    
  413936:	das    
  413937:	dec    esi
  413938:	xchg   esp,eax
  413939:	sub    eax,0x93933443
  41393e:	mov    esp,0x3cace20c
  413943:	jb     0x413914
  413945:	and    BYTE PTR [edi+esi*8],al
  413948:	mov    ch,0xc8
  41394a:	fldenv ds:0xc66f5934
  413950:	es dec ebp
  413952:	cdq    
  413953:	xchg   edi,eax
  413954:	xchg   ebp,eax
  413955:	mov    ebx,edi
  413957:	lds    eax,FWORD PTR [eax-0x5a5cb464]
  41395d:	daa    
  41395e:	jp     0x413928
  413960:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413961:	retf   
  413962:	retf   
  413963:	neg    DWORD PTR [esi+0x18]
  413966:	icebp  
  413967:	(bad)  [edi]
  413969:	sbb    al,0x4
  41396b:	lods   eax,DWORD PTR ds:[esi]
  41396c:	in     al,dx
  41396d:	xchg   edx,eax
  41396e:	in     al,dx
  41396f:	in     eax,0x27
  413971:	inc    edi
  413972:	mov    cl,0xd6
  413974:	inc    ebp
  413975:	lods   al,BYTE PTR ds:[esi]
  413976:	cmp    al,0xfa
  413978:	icebp  
  413979:	dec    edx
  41397a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41397b:	dec    edi
  41397c:	xor    DWORD PTR [ecx],edx
  41397e:	push   ds
  41397f:	sti    
  413980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413981:	dec    ebp
  413982:	dec    ebx
  413983:	retf   
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	dec    ebx
  413986:	jae    0x4139d3
  413988:	rcr    BYTE PTR [edi-0x59],0xe6
  41398c:	mov    WORD PTR [esi],es
  41398e:	scas   al,BYTE PTR es:[edi]
  41398f:	dec    edi
  413990:	cmp    DWORD PTR [ecx+0x7a],esi
  413993:	dec    edi
  413994:	dec    ebx
  413995:	shl    BYTE PTR [ecx],cl
  413997:	ss dec esp
  413999:	(bad)  
  41399a:	pop    esi
  41399b:	pop    esp
  41399c:	jbe    0x413923
  41399e:	pop    esp
  41399f:	dec    ebp
  4139a0:	enter  0x181b,0xb2
  4139a4:	jae    0x413926
  4139a6:	pusha  
  4139a7:	xlat   BYTE PTR ds:[ebx]
  4139a8:	leave  
  4139a9:	stos   BYTE PTR es:[edi],al
  4139aa:	sbb    dh,BYTE PTR [ebp-0x2d]
  4139ad:	xchg   ebp,eax
  4139ae:	dec    eax
  4139af:	sbb    ch,BYTE PTR [ebx+0x7baab806]
  4139b5:	dec    eax
  4139b6:	xchg   esi,eax
  4139b7:	jne    0x4139cd
  4139b9:	inc    ebx
  4139ba:	int    0x3f
  4139bc:	(bad)  
  4139bd:	outs   dx,DWORD PTR ds:[esi]
  4139be:	mov    ah,0x75
  4139c0:	ss dec esi
  4139c2:	and    eax,0xeb2acb5d
  4139c7:	rcr    BYTE PTR [ebp-0x6c],1
  4139ca:	mov    dh,0x4e
  4139cc:	outs   dx,DWORD PTR ds:[esi]
  4139cd:	fld    TBYTE PTR [edi]
  4139cf:	and    esi,DWORD PTR ds:0x300a6d92
  4139d5:	test   eax,0x430bd4d4
  4139da:	ds mov dl,bh
  4139dd:	iret   
  4139de:	test   bl,dl
  4139e0:	addr16 jl 0x413a04
  4139e3:	mov    ebp,0x1098c1b7
  4139e8:	push   ebx
  4139e9:	fstp   QWORD PTR [edi-0x7873d97]
  4139ef:	retf   0xd8ab
  4139f2:	xor    DWORD PTR [edi],0x57fabc66
  4139f8:	in     eax,dx
  4139f9:	addr16 cmp esi,ebp
  4139fc:	std    
  4139fd:	inc    esi
  4139fe:	inc    ecx
  4139ff:	test   al,0x80
  413a01:	out    0xed,al
  413a03:	je     0x413a2f
  413a05:	jl     0x413a3d
  413a07:	dec    ecx
  413a08:	int    0xf
  413a0a:	dec    ecx
  413a0b:	jo     0x4139d6
  413a0d:	adc    eax,0x512eab7b
  413a12:	mov    esp,esi
  413a14:	push   edi
  413a15:	(bad)  
  413a16:	mov    eax,ds:0x73f0889a
  413a1b:	imul   ebp,DWORD PTR [edx-0x6a],0xffffffd7
  413a1f:	popf   
  413a20:	and    dl,BYTE PTR [esi-0x6f]
  413a23:	ds jl  0x413a78
  413a26:	dec    esi
  413a27:	stos   DWORD PTR es:[edi],eax
  413a28:	mov    al,0x39
  413a2a:	pop    es
  413a2b:	and    bh,BYTE PTR [ebx+0x23258295]
  413a31:	dec    edx
  413a32:	inc    edx
  413a33:	mov    al,ds:0xd79caa04
  413a38:	inc    ecx
  413a39:	repnz push es
  413a3b:	jl     0x4139db
  413a3d:	add    DWORD PTR [ebp+0x12],esi
  413a40:	inc    ebx
  413a41:	mov    ch,0x81
  413a43:	(bad)  
  413a44:	repnz rol al,cl
  413a47:	shr    DWORD PTR [edx],1
  413a49:	inc    esi
  413a4a:	enter  0x4fa5,0xf7
  413a4e:	sbb    ecx,esi
  413a50:	xchg   ecx,eax
  413a51:	scas   eax,DWORD PTR es:[edi]
  413a52:	mov    dh,0x73
  413a54:	es inc ecx
  413a56:	cmc    
  413a57:	rcl    BYTE PTR [ecx],1
  413a59:	jne    0x413a03
  413a5b:	jp     0x413aac
  413a5d:	repz bound ebp,QWORD PTR [ebx+0x5214e6d9]
  413a64:	ret    0x8342
  413a67:	nop
  413a68:	and    al,0xa
  413a6a:	fdivp  st(6),st
  413a6c:	xchg   ebp,eax
  413a6d:	ja     0x413aa2
  413a6f:	jmp    0x34e863a3
  413a74:	xor    eax,0x96bb4854
  413a79:	arpl   WORD PTR [ebp+0x549cfa07],cx
  413a7f:	jbe    0x413a12
  413a81:	nop
  413a82:	aas    
  413a83:	pop    edx
  413a84:	dec    ecx
  413a85:	jl     0x413abf
  413a87:	ins    BYTE PTR es:[edi],dx
  413a88:	cwde   
  413a89:	cs gs xor eax,0xdd71e099
  413a90:	(bad)  
  413a92:	sub    dl,BYTE PTR [esi+0x70]
  413a95:	sbb    al,0x85
  413a97:	adc    eax,0xaa9180d2
  413a9c:	retf   0xc6a5
  413a9f:	ins    BYTE PTR es:[edi],dx
  413aa0:	popf   
  413aa1:	mov    ebx,0xfd28f187
  413aa6:	je     0x413b09
  413aa8:	iret   
  413aa9:	and    DWORD PTR [edx+ebp*8+0x29519868],ebp
  413ab0:	adc    eax,0xc36bb42a
  413ab5:	aad    0xe1
  413ab7:	pop    edi
  413ab8:	mov    edi,0x47cbf777
  413abd:	add    eax,0x6b04fc24
  413ac2:	dec    ebx
  413ac3:	test   eax,0xbb933a9f
  413ac8:	sbb    al,0x2f
  413aca:	repz xor al,0x5
  413acd:	and    eax,0x9116e4b6
  413ad2:	ret    0x2731
  413ad5:	out    dx,al
  413ad6:	and    esi,DWORD PTR [ecx-0x4]
  413ad9:	ins    DWORD PTR es:[edi],dx
  413ada:	mov    eax,ds:0xb7ba217
  413adf:	and    BYTE PTR [esi-0x10],0xc3
  413ae3:	retf   0xc473
  413ae6:	jns    0x413aa8
  413ae8:	pop    edi
  413ae9:	mov    bl,0xaa
  413aeb:	shl    DWORD PTR [ebp-0x53],1
  413aee:	cmp    DWORD PTR ds:0x47fde676,esi
  413af4:	lods   al,BYTE PTR ds:[esi]
  413af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af6:	xor    al,0x2f
  413af8:	sbb    eax,0x7e068003
  413afd:	push   ecx
  413afe:	lods   al,BYTE PTR ds:[esi]
  413aff:	mov    edi,edi
  413b01:	idiv   dl
  413b03:	mov    edx,0x232af1f1
  413b08:	add    esp,esi
  413b0a:	test   eax,0x82049847
  413b0f:	(bad)  
  413b10:	push   ebp
  413b11:	aam    0xbd
  413b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b14:	push   edi
  413b15:	xor    BYTE PTR [ecx-0x7],bl
  413b18:	add    esi,edi
  413b1a:	(bad)  
  413b1b:	shr    BYTE PTR [edi+ebx*4],cl
  413b1e:	nop
  413b1f:	ins    BYTE PTR es:[edi],dx
  413b20:	and    bl,0xef
  413b23:	push   ebp
  413b24:	sub    ecx,ebp
  413b26:	lea    edi,[ebx+0x4e39a184]
  413b2c:	test   al,0x73
  413b2e:	lods   al,BYTE PTR cs:[esi]
  413b30:	cs and eax,0x17422d71
  413b36:	sbb    edi,ebx
  413b38:	inc    BYTE PTR [edi+0x7133b54b]
  413b3e:	jg     0x413b9c
  413b40:	les    ebx,FWORD PTR [edx-0x31]
  413b43:	lea    ebp,[ebx-0x40450fc6]
  413b49:	imul   BYTE PTR [edx-0x3e5c4ad9]
  413b4f:	inc    esi
  413b50:	mov    ds:0x8efea399,eax
  413b55:	out    0x4c,al
  413b57:	jmp    0x413b10
  413b59:	fist   DWORD PTR [eax-0x6fbe7660]
  413b5f:	std    
  413b60:	adc    cl,ah
  413b62:	fstp   TBYTE PTR [ecx+0x4c9ca0fa]
  413b68:	scas   eax,DWORD PTR es:[edi]
  413b69:	ror    DWORD PTR [edi+0x3e66d99b],1
  413b6f:	or     DWORD PTR [ebp+eax*1+0x49590d3c],0x7e78745b
  413b7a:	jnp    0x413b67
  413b7c:	push   esp
  413b7d:	xchg   edi,eax
  413b7e:	lods   al,BYTE PTR ds:[esi]
  413b7f:	sar    BYTE PTR [eax-0x4f],1
  413b82:	ds xchg ebp,eax
  413b84:	inc    ebp
  413b85:	sub    DWORD PTR [edi-0x7c],edi
  413b88:	push   ebx
  413b89:	inc    eax
  413b8a:	jo     0x413b14
  413b8c:	xor    ch,BYTE PTR [edx+0x1a]
  413b8f:	cli    
  413b90:	and    al,0xaf
  413b92:	cmp    edi,ebp
  413b94:	xchg   ebx,esi
  413b96:	(bad)  
  413b97:	adc    DWORD PTR [ebx+0x2d],ebp
  413b9a:	(bad)  
  413b9b:	mov    ebp,0xd118313e
  413ba0:	cmc    
  413ba1:	mov    ebx,0x55d7c695
  413ba6:	cwde   
  413ba7:	ins    DWORD PTR es:[edi],dx
  413ba8:	call   0x1b12:0x56ca6a94
  413baf:	cmp    al,0xa9
  413bb1:	jo     0x413b81
  413bb3:	jecxz  0x413b5f
  413bb5:	stos   BYTE PTR es:[edi],al
  413bb6:	dec    esp
  413bb7:	push   edi
  413bb8:	jp     0x413bf2
  413bba:	int3   
  413bbb:	cdq    
  413bbc:	in     al,0xb6
  413bbe:	mov    esp,0x9b6b48ec
  413bc3:	je     0x413bfb
  413bc5:	hlt    
  413bc6:	add    ebx,ebx
  413bc8:	out    0x87,al
  413bca:	and    bl,BYTE PTR [ebx]
  413bcc:	call   0xf1c0142a
  413bd1:	repz jge 0x413ba2
  413bd4:	pop    ds
  413bd5:	into   
  413bd6:	fwait
  413bd7:	das    
  413bd8:	mov    esi,0xa4d46d49
  413bdd:	jae    0x413c4d
  413bdf:	dec    esp
  413be0:	push   0x66f85365
  413be5:	lea    edx,[ecx-0x2f]
  413be8:	idiv   DWORD PTR [edx+0x48]
  413beb:	loop   0x413c4d
  413bed:	(bad)  
  413bee:	adc    BYTE PTR [esi],ch
  413bf0:	push   esp
  413bf1:	retf   
  413bf2:	pop    ebp
  413bf3:	inc    esp
  413bf4:	pop    ecx
  413bf5:	add    BYTE PTR [edi+0x66],ah
  413bf8:	cdq    
  413bf9:	sub    bh,cl
  413bfb:	stc    
  413bfc:	dec    esp
  413bfd:	sar    DWORD PTR [esi+eax*2+0x59],cl
  413c01:	pushf  
  413c02:	or     BYTE PTR [edx-0xbceae51],al
  413c08:	xlat   BYTE PTR ds:[ebx]
  413c09:	jmp    0xa4a:0xcd77660e
  413c10:	std    
  413c11:	fisubr DWORD PTR [edx-0x39]
  413c14:	jo     0x413c68
  413c16:	mov    ebp,0xb2f58531
  413c1b:	xor    bh,BYTE PTR [ebp-0x51]
  413c1e:	dec    ecx
  413c1f:	jp     0x413c0a
  413c21:	aad    0xc5
  413c23:	rcr    DWORD PTR [edi-0x7],0x27
  413c27:	retf   
  413c28:	xchg   dl,dh
  413c2a:	jmp    0x670f:0x176ecd8c
  413c31:	(bad)  [esi-0x28]
  413c34:	mov    ss,edi
  413c36:	(bad)  
  413c37:	repz out dx,al
  413c39:	push   edi
  413c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c3c:	dec    ebx
  413c3d:	push   esi
  413c3e:	jmp    0xfc2dc1d7
  413c43:	ret    
  413c44:	inc    esp
  413c45:	push   ebp
  413c46:	rcr    BYTE PTR [ebp-0x78],1
  413c49:	jmp    0x413c50
  413c4b:	dec    eax
  413c4c:	push   ds
  413c4d:	jae    0x413c8d
  413c4f:	fwait
  413c50:	rcr    BYTE PTR [ebx+0x3094a337],cl
  413c56:	(bad)  
  413c58:	stc    
  413c59:	mov    DWORD PTR [edx],esi
  413c5b:	aad    0x95
  413c5d:	sbb    DWORD PTR [ebx-0x415b2dad],ebx
  413c63:	inc    ebx
  413c64:	popa   
  413c65:	or     al,0x6
  413c67:	jne    0x413cd8
  413c69:	jg     0x413c0c
  413c6b:	lods   al,BYTE PTR ds:[esi]
  413c6c:	xchg   edx,eax
  413c6d:	cmc    
  413c6e:	xor    BYTE PTR [edi-0x3d5c345f],bl
  413c74:	push   esp
  413c75:	cmp    BYTE PTR [ebp+edi*2-0x28836ebc],ah
  413c7c:	ins    DWORD PTR es:[edi],dx
  413c7d:	xor    DWORD PTR [edi+0x29b108c6],ebp
  413c83:	ins    DWORD PTR es:[edi],dx
  413c84:	add    al,0xc7
  413c86:	shl    BYTE PTR ss:[ecx],cl
  413c89:	inc    edi
  413c8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c8b:	clc    
  413c8c:	in     al,dx
  413c8d:	fcom   QWORD PTR [edx+0x118c9d5b]
  413c93:	sub    ebx,DWORD PTR [edx-0x6e]
  413c96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c97:	and    eax,0x246ca605
  413c9c:	push   ebp
  413c9d:	shl    cl,cl
  413c9f:	push   cs
  413ca0:	add    ch,ch
  413ca2:	cmp    ch,BYTE PTR [ebx+0x5a339bda]
  413ca8:	mov    BYTE PTR [eax],bl
  413caa:	lods   al,BYTE PTR ds:[esi]
  413cab:	push   edi
  413cac:	shl    DWORD PTR [edi-0xddce12d],cl
  413cb2:	sbb    al,0xfc
  413cb4:	aas    
  413cb5:	mov    edx,0xc795690e
  413cba:	in     al,0x83
  413cbc:	stos   BYTE PTR es:[edi],al
  413cbd:	fwait
  413cbe:	(bad)  
  413cbf:	(bad)  [ebx]
  413cc1:	xlat   BYTE PTR ds:[ebx]
  413cc2:	sbb    eax,0x8ba842e9
  413cc7:	adc    DWORD PTR [esi],ecx
  413cc9:	rep lods al,BYTE PTR ds:[esi]
  413ccb:	inc    eax
  413ccc:	xchg   ebp,eax
  413ccd:	mov    edi,0xe0028cf1
  413cd2:	imul   esp,DWORD PTR [ebx+edi*2+0x10f62105],0x77171c59
  413cdd:	and    dh,dl
  413cdf:	and    al,0x9c
  413ce1:	and    eax,0xc0890a8
  413ce6:	stc    
  413ce7:	mov    ds:0x6cb4e10f,al
  413cec:	mov    esi,0xaa85be18
  413cf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cf2:	in     al,dx
  413cf3:	(bad)  
  413cf4:	mov    bl,BYTE PTR fs:[eax]
  413cf7:	in     al,0xb7
  413cf9:	cmc    
  413cfa:	shl    BYTE PTR [ecx+0x1708f7d2],1
  413d00:	adc    esi,DWORD PTR ds:0x57cf873c
  413d06:	add    ebp,DWORD PTR [esi+0xfd5e645]
  413d0c:	inc    esi
  413d0d:	aad    0xbc
  413d0f:	push   ds
  413d10:	mov    dl,0x69
  413d12:	clc    
  413d13:	ret    
  413d14:	rcr    ah,1
  413d16:	mov    dh,0x90
  413d18:	pop    edi
  413d19:	sahf   
  413d1a:	jno    0x413d79
  413d1c:	mov    cl,0x13
  413d1e:	in     eax,dx
  413d1f:	out    dx,al
  413d20:	sar    ecx,1
  413d22:	fbstp  TBYTE PTR [edx-0x17532f20]
  413d28:	pushf  
  413d29:	pushf  
  413d2a:	std    
  413d2b:	mov    dh,dl
  413d2d:	fisubr DWORD PTR [ebp-0x68d70e09]
  413d33:	(bad)  
  413d34:	sbb    BYTE PTR [eax+0x4e055603],dl
  413d3a:	ja     0x413d00
  413d3c:	adc    BYTE PTR [ebx-0x4b],cl
  413d3f:	jnp    0x413d99
  413d41:	mov    BYTE PTR ds:0x7b0bb88c,dl
  413d47:	and    eax,0xce6dc690
  413d4c:	shl    ch,cl
  413d4e:	(bad)  
  413d4f:	aam    0x93
  413d51:	ins    BYTE PTR es:[edi],dx
  413d52:	lds    edi,FWORD PTR [ecx-0x40]
  413d55:	jmp    0xd80476a3
  413d5a:	icebp  
  413d5b:	push   edi
  413d5c:	adc    eax,DWORD PTR [ecx]
  413d5e:	push   0x191628f4
  413d63:	mov    eax,0x6d068ca8
  413d68:	xchg   ebp,eax
  413d69:	aaa    
  413d6a:	xchg   edi,eax
  413d6b:	sbb    eax,0xda639471
  413d70:	pop    ecx
  413d71:	cmp    BYTE PTR [eax],ch
  413d73:	push   ebx
  413d74:	es mov ah,0x4c
  413d77:	push   esi
  413d79:	dec    ecx
  413d7a:	cs mov ebp,0xd7b2ce3d
  413d80:	push   ds
  413d81:	stos   BYTE PTR es:[edi],al
  413d82:	inc    eax
  413d83:	fnsave [edx+0x58bd5247]
  413d89:	mov    cl,BYTE PTR [ebp-0x297bc7ea]
  413d8f:	ret    
  413d90:	add    esi,ebx
  413d92:	xor    BYTE PTR [ecx-0x15426b41],bl
  413d98:	out    0x5d,eax
  413d9a:	scas   eax,DWORD PTR es:[edi]
  413d9b:	enter  0x7668,0xe3
  413d9f:	and    cl,ch
  413da1:	push   es
  413da2:	(bad)  
  413da3:	shl    BYTE PTR [ecx-0x11],1
  413da6:	rol    BYTE PTR [ecx],0x4a
  413da9:	cmp    ebp,eax
  413dab:	push   eax
  413dac:	sbb    DWORD PTR [ecx+0x51],ecx
  413daf:	or     ecx,DWORD PTR [ebx]
  413db1:	pusha  
  413db2:	dec    eax
  413db3:	dec    esp
  413db4:	scas   al,BYTE PTR es:[edi]
  413db5:	add    eax,0x5935023e
  413dba:	mov    esi,0xb4f5a6c6
  413dbf:	add    BYTE PTR [esi+ecx*4+0x5418e7ab],ch
  413dc6:	mov    ebp,0xc186b912
  413dcb:	test   DWORD PTR [ecx-0x40],0xb41e3823
  413dd2:	cmp    DWORD PTR [edi+0x16],0xffffff89
  413dd6:	mov    ch,BYTE PTR [esi-0x33e9c40c]
  413ddc:	xchg   esi,eax
  413ddd:	and    BYTE PTR [ebp+0x65],bl
  413de0:	bound  edi,QWORD PTR [eax]
  413de2:	sub    eax,0xe7f50141
  413de7:	jmp    0x413df5
  413de9:	fcom   QWORD PTR [ecx+esi*2+0x56e8b913]
  413df0:	adc    DWORD PTR [edx],ecx
  413df2:	clc    
  413df3:	inc    ebp
  413df4:	ret    0xf28c
  413df7:	clc    
  413df8:	jecxz  0x413d9f
  413dfa:	mov    eax,0x756fa511
  413dff:	cmp    BYTE PTR [edx-0x4544777c],0xa1
  413e06:	popf   
  413e07:	jnp    0x413e66
  413e09:	imul   ecx,esp,0x358ece95
  413e0f:	sahf   
  413e10:	sub    BYTE PTR [ecx+ecx*8-0x7e],bl
  413e14:	outs   dx,DWORD PTR ds:[esi]
  413e15:	pop    ebx
  413e16:	xchg   esi,eax
  413e17:	mov    ebx,0xa03bcf26
  413e1c:	sbb    edx,eax
  413e1e:	dec    ecx
  413e1f:	fs cdq 
  413e21:	div    DWORD PTR [edx]
  413e23:	xchg   edi,eax
  413e24:	es stos WORD PTR es:[edi],ax
  413e27:	mov    ebp,edx
  413e29:	lock pop edx
  413e2b:	hlt    
  413e2c:	cmp    al,0xd0
  413e2e:	inc    ecx
  413e2f:	pop    es
  413e30:	adc    esp,DWORD PTR [edx-0x19]
  413e33:	jb     0x413e14
  413e35:	fcmovnbe st,st(5)
  413e37:	and    ecx,ebx
  413e39:	and    BYTE PTR [edi],bl
  413e3b:	aam    0x69
  413e3d:	(bad)  
  413e3e:	iret   
  413e3f:	(bad)  
  413e40:	test   BYTE PTR [edx],0x2f
  413e43:	leave  
  413e44:	jae    0x413dfe
  413e46:	cmp    DWORD PTR [ebx-0x2775dd61],eax
  413e4c:	test   DWORD PTR [edi+0x6a],ebx
  413e4f:	jmp    0x413e17
  413e51:	sub    esi,ecx
  413e53:	xchg   ebp,eax
  413e54:	push   ss
  413e55:	sub    edx,esp
  413e57:	xchg   ebx,eax
  413e58:	pop    es
  413e59:	fcom   DWORD PTR [esi-0x4e29d5b9]
  413e5f:	mov    bl,0xfa
  413e61:	cwde   
  413e62:	std    
  413e63:	aas    
  413e64:	mov    dh,0x70
  413e66:	mov    esp,0x52b89692
  413e6b:	add    DWORD PTR [eax],edi
  413e6d:	js     0x413e04
  413e6f:	idiv   DWORD PTR [esi+edx*2-0x6]
  413e73:	popf   
  413e74:	gs push edx
  413e76:	jmp    0x8cda:0xe9ba2362
  413e7d:	fsubrp st(5),st
  413e7f:	mov    dh,0xed
  413e81:	add    bh,cl
  413e83:	jae    0x413e1c
  413e85:	mov    bh,0x63
  413e87:	add    ch,BYTE PTR [ecx-0x5e]
  413e8a:	sbb    bh,BYTE PTR [edi+0x1ab09505]
  413e90:	sbb    al,0x11
  413e92:	into   
  413e93:	(bad)  
  413e94:	bound  edx,QWORD PTR [ecx+0x69]
  413e97:	push   edi
  413e98:	out    0xcd,eax
  413e9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e9b:	enter  0x465f,0xfb
  413e9f:	push   0x21
  413ea1:	mov    ah,0x4f
  413ea3:	(bad)  
  413ea4:	mov    WORD PTR [edx-0x27d9c922],?
  413eaa:	inc    edi
  413eab:	push   ds
  413eac:	jge    0x413e77
  413eae:	inc    ecx
  413eaf:	cmp    eax,0xd8fb28cc
  413eb4:	aad    0x15
  413eb6:	inc    ecx
  413eb7:	inc    edi
  413eb8:	nop
  413eb9:	repz iret 
  413ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ebc:	mov    ebx,0x62de6039
  413ec1:	adc    DWORD PTR [ebx],edx
  413ec3:	push   cs
  413ec4:	(bad)
  413ec9:	scas   al,BYTE PTR es:[edi]
  413eca:	xlat   BYTE PTR ds:[ebx]
  413ecb:	(bad)  
  413ecd:	imul   eax,DWORD PTR [edi-0x6a],0x7d82a50
  413ed4:	mov    BYTE PTR es:[ebx],0xff
  413ed8:	jb     0x413ef3
  413eda:	add    bl,al
  413edc:	jle    0x413e90
  413ede:	popf   
  413edf:	dec    ebp
  413ee0:	je     0x413ed1
  413ee2:	outs   dx,BYTE PTR ds:[esi]
  413ee3:	jae    0x413edf
  413ee5:	xor    ebx,DWORD PTR [ecx+0x7d84ed25]
  413eeb:	int3   
  413eec:	pop    ecx
  413eed:	mov    dl,0x4a
  413eef:	(bad)  
  413ef0:	std    
  413ef1:	xor    BYTE PTR [eax-0x18],0xa9
  413ef5:	xor    DWORD PTR [ecx-0x48abb911],esi
  413efb:	dec    edi
  413efc:	mov    ah,0xb
  413efe:	fsub   QWORD PTR [edi+0x65e22f20]
  413f04:	add    esi,DWORD PTR [edx]
  413f06:	push   eax
  413f07:	mov    ss,WORD PTR [edi+0x1e3f9782]
  413f0d:	daa    
  413f0e:	lods   al,BYTE PTR ds:[esi]
  413f0f:	jle    0x413edc
  413f11:	push   edi
  413f12:	adc    eax,0xf9ecabd6
  413f17:	fwait
  413f18:	shl    BYTE PTR [ebx],1
  413f1a:	icebp  
  413f1b:	push   edi
  413f1c:	jne    0x413f0b
  413f1e:	mov    dl,BYTE PTR [esi]
  413f20:	dec    esp
  413f21:	sar    DWORD PTR [ebx+eiz*1],cl
  413f24:	aaa    
  413f25:	js     0x413efe
  413f27:	in     al,dx
  413f28:	sub    ah,BYTE PTR [ebx+0x1b20c397]
  413f2e:	mov    dh,0xa6
  413f30:	pop    edi
  413f31:	adc    DWORD PTR [esi+esi*1-0x11ffc994],edx
  413f38:	sbb    bl,dh
  413f3a:	push   edi
  413f3b:	jge    0x413f8f
  413f3d:	pop    edx
  413f3e:	icebp  
  413f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f40:	cmp    cl,BYTE PTR [esi-0x42]
  413f43:	scas   al,BYTE PTR es:[edi]
  413f44:	or     eax,0x464699b4
  413f49:	add    DWORD PTR [eax+0x6],esi
  413f4c:	(bad)  
  413f4d:	je     0x413ee0
  413f4f:	lods   eax,DWORD PTR ds:[esi]
  413f50:	fwait
  413f51:	jecxz  0x413f2a
  413f53:	push   0x2a
  413f55:	xor    ch,0xb7
  413f58:	scas   eax,DWORD PTR es:[edi]
  413f59:	xchg   esi,eax
  413f5a:	ins    BYTE PTR es:[edi],dx
  413f5b:	pusha  
  413f5c:	cmp    al,0x18
  413f5e:	aad    0x2a
  413f60:	and    eax,0x296d9072
  413f65:	call   0x843a:0x29e2f7ce
  413f6c:	jle    0x413f4a
  413f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f6f:	mov    dl,ch
  413f71:	cdq    
  413f72:	adc    eax,0x6fe0a3fa
  413f77:	out    0x71,al
  413f79:	mov    edi,0x896cb289
  413f7e:	fmul   DWORD PTR [ecx]
  413f80:	pop    edx
  413f81:	jp     0x413f22
  413f83:	jmp    0x3e65:0x8e8ccedd
  413f8a:	mov    dh,0xca
  413f8c:	fisttp QWORD PTR [edi+0xbc9088b]
  413f92:	xor    al,0x60
  413f94:	mov    ebx,0xff98fd1b
  413f99:	fisttp DWORD PTR [ecx]
  413f9b:	jno    0x413fbc
  413f9d:	and    eax,0xa0a0d8eb
  413fa2:	(bad)  
  413fa3:	jnp    0x41400f
  413fa5:	stos   BYTE PTR es:[edi],al
  413fa6:	or     eax,0xc7848515
  413fab:	or     al,0xf3
  413fad:	mov    bh,BYTE PTR [ebp-0x34]
  413fb0:	cmp    esp,esi
  413fb2:	sub    bl,BYTE PTR [ebp+0x24877fe7]
  413fb8:	add    DWORD PTR [ebp+0x52284bad],ebx
  413fbe:	mov    ?,WORD PTR [edx]
  413fc0:	or     dh,BYTE PTR ds:0x621ee7bd
  413fc6:	stos   DWORD PTR es:[edi],eax
  413fc7:	jne    0x414046
  413fc9:	call   0xecb3:0xef170e77
  413fd0:	std    
  413fd1:	imul   ebp,ecx,0xffffffab
  413fd4:	cmp    DWORD PTR [ecx+0x8],esp
  413fd7:	adc    eax,0x1baf0576
  413fdc:	pop    ebp
  413fdd:	dec    edi
  413fde:	xor    al,0x42
  413fe0:	mov    ch,0x3c
  413fe2:	add    ecx,0xffffff8d
  413fe5:	scas   eax,DWORD PTR es:[edi]
  413fe6:	sub    BYTE PTR [ebx+0x2690375c],dl
  413fec:	mov    edi,0x2d2dfbbb
  413ff1:	imul   edx,DWORD PTR [eax-0x3c5718dd],0x49ac841c
  413ffb:	leave  
  413ffc:	or     eax,DWORD PTR [ecx+0x3c14afff]
  414002:	lods   al,BYTE PTR ds:[esi]
  414003:	push   ds
  414004:	mov    ds:0x51c32e48,al
  414009:	pushf  
  41400a:	inc    edx
  41400b:	repnz inc ebp
  41400d:	sub    eax,0x5f342cbd
  414012:	jo     0x414089
  414014:	mov    eax,ds:0xf06ea9a
  414019:	sub    al,0xb0
  41401b:	cmc    
  41401c:	or     al,bl
  41401e:	inc    ebp
  41401f:	aam    0x4e
  414021:	jbe    0x414096
  414023:	cmc    
  414024:	addr16 jle 0x414031
  414027:	cmp    edx,0x986223a9
  41402d:	adc    al,BYTE PTR [edx]
  41402f:	pop    ebx
  414030:	mov    ah,0x7b
  414032:	inc    eax
  414033:	adc    esp,ebx
  414035:	sti    
  414036:	sbb    eax,DWORD PTR [ecx+0x3b0f57be]
  41403c:	fucomp st(7)
  41403e:	jbe    0x414091
  414040:	push   ecx
  414041:	(bad)  [esi]
  414043:	cli    
  414044:	out    dx,eax
  414045:	out    0x51,al
  414047:	jno    0x414076
  414049:	xchg   edi,eax
  41404a:	jp     0x41403a
  41404c:	pop    esp
  41404d:	in     eax,dx
  41404e:	test   eax,esi
  414050:	out    0xf1,eax
  414052:	(bad)  
  414053:	jl     0x413fea
  414055:	inc    edi
  414056:	(bad)  
  414058:	jmp    0x7417fb03
  41405d:	or     DWORD PTR [esi],esp
  41405f:	xor    esi,DWORD PTR [ecx-0x10d112cd]
  414065:	mov    edi,DWORD PTR [edx+eax*4+0x46]
  414069:	mov    ds:0xd306bbb2,eax
  41406e:	dec    esp
  41406f:	mov    al,0xd9
  414071:	or     esi,esi
  414073:	mov    dl,0x5c
  414075:	pop    ds
  414076:	scas   al,BYTE PTR es:[edi]
  414077:	mov    eax,ds:0x9498a14d
  41407c:	jg     0x414015
  41407e:	retf   0x6ed9
  414081:	aas    
  414082:	push   ss
  414083:	mov    DWORD PTR [eax-0x25013d83],edx
  414089:	and    cl,dl
  41408b:	push   ss
  41408c:	mov    al,0xdb
  41408e:	jns    0x4140b2
  414090:	out    0xcc,eax
  414092:	popa   
  414093:	outs   dx,BYTE PTR ds:[esi]
  414094:	add    al,0x7e
  414096:	jbe    0x41408b
  414098:	aad    0x15
  41409a:	lock sbb dh,BYTE PTR [ebp+edx*1-0x2387ec4]
  4140a2:	es add ecx,edx
  4140a5:	push   ebp
  4140a6:	(bad)  
  4140a7:	jecxz  0x41403a
  4140a9:	ficomp WORD PTR [ebx+0x23]
  4140ac:	xor    edi,ebp
  4140ae:	test   BYTE PTR [ebx+0x73],bl
  4140b1:	stc    
  4140b2:	fisubr DWORD PTR [ebp+edx*8-0x2d]
  4140b6:	sbb    ecx,0xfffffff1
  4140b9:	or     eax,0x59f1fc97
  4140be:	je     0x4140c3
  4140c0:	lods   al,BYTE PTR ds:[esi]
  4140c1:	push   ebx
  4140c2:	inc    eax
  4140c3:	leave  
  4140c4:	cmc    
  4140c5:	pop    es
  4140c6:	(bad)  
  4140c7:	sti    
  4140c8:	push   ebp
  4140c9:	push   esp
  4140ca:	(bad)  
  4140cb:	xor    BYTE PTR [ebp-0x2ab2b7bb],bl
  4140d1:	mov    ch,0x4a
  4140d3:	mov    dl,0xd0
  4140d5:	mov    edx,edi
  4140d7:	or     DWORD PTR [ecx+ecx*4-0x31d18ce7],0xe9996c1b
  4140e2:	mov    esi,0x86ef4353
  4140e7:	pop    esi
  4140e8:	mov    ds:0x2f1b261f,al
  4140ed:	push   ecx
  4140ee:	fld    QWORD PTR [esi+0x66]
  4140f1:	push   ds
  4140f2:	loope  0x4140a7
  4140f4:	scas   al,BYTE PTR es:[edi]
  4140f5:	push   ss
  4140f6:	sahf   
  4140f7:	loope  0x41416d
  4140f9:	dec    ebx
  4140fa:	adc    dl,dh
  4140fc:	sbb    BYTE PTR [edi+0xfcff266],dl
  414102:	imul   ebx,DWORD PTR [ecx-0x38],0x9e21d243
  414109:	lods   eax,DWORD PTR ds:[esi]
  41410a:	pop    esp
  41410b:	pop    ebp
  41410c:	pop    es
  41410d:	loope  0x4140fe
  41410f:	pop    esi
  414110:	mov    cl,0x67
  414112:	stos   BYTE PTR es:[edi],al
  414113:	test   DWORD PTR [esi-0x304350bd],0xd8e0096
  41411d:	add    eax,0x4f9888a7
  414122:	(bad)  
  414123:	retf   
  414124:	fdiv   st(5),st
  414126:	cli    
  414127:	adc    eax,0x9c1a02dd
  41412c:	(bad)
  41412f:	aad    0x51
  414131:	test   eax,0xabbbb40e
  414136:	mov    ebp,0xa0a50954
  41413b:	push   esi
  41413c:	and    ch,BYTE PTR [ebx+0x2894841d]
  414142:	in     eax,dx
  414143:	jbe    0x414109
  414145:	jno    0x4141a2
  414147:	sahf   
  414148:	(bad)  
  414149:	sub    al,0xd7
  41414b:	inc    ebx
  41414c:	pop    ebp
  41414d:	lock add DWORD PTR [ebp+0x44],ebp
  414151:	(bad)  
  414152:	test   BYTE PTR [ebp+ebx*1+0x48b0a3b1],dl
  414159:	and    BYTE PTR [ebp+0x8],0x46
  41415d:	ds sub al,0x82
  414160:	mov    al,ds:0x86adb278
  414165:	scas   al,BYTE PTR es:[edi]
  414166:	inc    esp
  414167:	pop    ecx
  414168:	fmul   QWORD PTR [ecx-0x565f1738]
  41416e:	inc    ebp
  41416f:	pop    ebx
  414170:	cdq    
  414171:	aad    0x23
  414173:	(bad)  
  414175:	pop    esp
  414176:	aaa    
  414177:	sub    dl,BYTE PTR [edx+0x43]
  41417a:	inc    esp
  41417b:	mov    ecx,0xf42da983
  414180:	das    
  414181:	sbb    al,BYTE PTR [ebx-0x6c31e6a5]
  414187:	into   
  414188:	mov    esp,0x25a9ad66
  41418d:	mov    BYTE PTR [edi-0x4e5288da],ah
  414193:	sar    BYTE PTR [edi+ecx*1-0x317951d5],1
  41419a:	mov    al,ds:0xe29524c2
  41419f:	das    
  4141a0:	mov    bl,0x6f
  4141a2:	popf   
  4141a3:	mov    dl,0x16
  4141a5:	jmp    0x4141cf
  4141a7:	sub    al,0x8e
  4141aa:	scas   eax,DWORD PTR es:[edi]
  4141ab:	jbe    0x414180
  4141ad:	push   0xa48d22e6
  4141b2:	add    al,0xc3
  4141b4:	out    dx,al
  4141b5:	xor    ecx,DWORD PTR [ebp+esi*4-0xe]
  4141b9:	lea    esi,[esi+0x18]
  4141bc:	cmp    ebp,DWORD PTR [ebx]
  4141be:	xchg   ebx,eax
  4141bf:	(bad)  
  4141c0:	rcl    BYTE PTR [esp+edx*1-0x4a],1
  4141c4:	push   es
  4141c5:	pop    edx
  4141c6:	stos   DWORD PTR es:[edi],eax
  4141c7:	jge    0x414203
  4141c9:	adc    cl,BYTE PTR [ebx-0xe]
  4141cc:	scas   eax,DWORD PTR es:[edi]
  4141cd:	or     eax,0x7a3d1c7c
  4141d2:	push   edx
  4141d3:	mov    eax,ecx
  4141d5:	add    eax,ebx
  4141d7:	aad    0x68
  4141d9:	mov    ?,WORD PTR [eax]
  4141db:	mov    edx,0xad84590
  4141e0:	xlat   BYTE PTR ds:[ebx]
  4141e1:	xchg   DWORD PTR [ebp-0x2e4004e],esp
  4141e7:	(bad)  
  4141e8:	in     al,0x51
  4141ea:	sub    eax,0x2e1c542d
  4141ef:	into   
  4141f0:	daa    
  4141f1:	imul   ecx,DWORD PTR [ebx+0x34],0xa69d9c41
  4141f8:	cmp    BYTE PTR [ebp+0x24],0x8
  4141fc:	or     eax,0x21487a7c
  414201:	sar    BYTE PTR [ebp+0xe],1
  414204:	shl    DWORD PTR [ebx+0x63],cl
  414207:	sub    ch,BYTE PTR [edi-0xd303635]
  41420d:	and    DWORD PTR [edx],ebx
  41420f:	cmp    al,0xea
  414211:	pop    ebp
  414212:	cmc    
  414213:	loope  0x41420e
  414215:	fdiv   st,st(2)
  414217:	out    dx,al
  414218:	sub    BYTE PTR [ebp+edi*8+0x5c5ebd38],ah
  41421f:	mov    al,0x75
  414221:	mov    ds,eax
  414223:	push   esp
  414224:	idiv   DWORD PTR [ecx]
  414226:	imul   edi,DWORD PTR [edi+ebx*4],0xffffff9b
  41422a:	push   ss
  41422b:	xlat   BYTE PTR ds:[ebx]
  41422c:	enter  0xddef,0xac
  414230:	iret   
  414231:	cmp    BYTE PTR [ebp+0x2678678e],al
  414237:	mov    esp,0x5ae3040
  41423c:	imul   edx,DWORD PTR [ecx],0x20
  41423f:	pop    ss
  414240:	(bad)  
  414242:	ror    cl,cl
  414244:	mov    eax,0xc7953e98
  414249:	mov    edi,0x29de7bb3
  41424e:	popa   
  41424f:	dec    esi
  414250:	cmp    edi,ebx
  414252:	cmp    al,0xb2
  414254:	in     al,dx
  414255:	fwait
  414256:	pop    edi
  414257:	nop
  414258:	inc    ecx
  414259:	pusha  
  41425a:	inc    ecx
  41425b:	pop    ds
  41425c:	fild   WORD PTR [ebx-0x2f3f9cfa]
  414262:	cmp    DWORD PTR ds:0x13d4a2c7,ecx
  414268:	in     al,dx
  414269:	jnp    0x41427b
  41426b:	dec    eax
  41426c:	out    dx,eax
  41426d:	push   edi
  41426e:	sbb    eax,0x6c6d6178
  414273:	cdq    
  414274:	or     DWORD PTR [ebp-0x768d0ee5],ebp
  41427a:	add    al,0x49
  41427c:	inc    eax
  41427d:	ret    
  41427e:	icebp  
  41427f:	(bad)  
  414280:	div    DWORD PTR [eax+0x3]
  414283:	mov    ax,0xd3fc
  414287:	stos   BYTE PTR es:[edi],al
  414288:	mov    ds:0xab63ce9d,al
  41428d:	popf   
  41428e:	rdtsc  
  414290:	sbb    eax,ebp
  414292:	jb     0x414262
  414294:	lods   al,BYTE PTR ds:[esi]
  414295:	jb     0x41421a
  414297:	or     cl,cl
  414299:	fst    DWORD PTR [esi-0x75353dd]
  41429f:	push   esp
  4142a0:	cmovbe ebp,DWORD PTR [edx-0x5a688302]
  4142a7:	scas   al,BYTE PTR es:[edi]
  4142a8:	addr16 (bad) 
  4142aa:	lds    ebp,FWORD PTR [esi]
  4142ac:	cmp    DWORD PTR [eax-0x17],esi
  4142af:	pop    ebx
  4142b0:	pop    ds
  4142b1:	sbb    eax,0xaec105fb
  4142b6:	dec    edx
  4142b7:	in     eax,dx
  4142b8:	std    
  4142b9:	bound  esp,QWORD PTR [edx+0x2934475c]
  4142bf:	adc    BYTE PTR [edx-0x50],cl
  4142c2:	repnz fbstp TBYTE PTR [edx-0x51]
  4142c6:	push   eax
  4142c7:	fdiv   QWORD PTR [ecx-0x42289dbf]
  4142cd:	pop    ss
  4142ce:	pop    esp
  4142cf:	cmp    BYTE PTR [ebp-0x21],cl
  4142d2:	int    0xcf
  4142d4:	and    DWORD PTR [esi],ecx
  4142d6:	xchg   edi,eax
  4142d7:	adc    cl,dl
  4142d9:	inc    edx
  4142da:	jmp    DWORD PTR [eax+0x203468f3]
  4142e0:	dec    ebp
  4142e1:	cli    
  4142e2:	or     eax,0xb6251553
  4142e7:	fwait
  4142e8:	xor    esp,edi
  4142ea:	adc    al,BYTE PTR [ecx+ebp*2+0x43e034d3]
  4142f1:	xor    al,0xd5
  4142f3:	int    0xf4
  4142f5:	inc    eax
  4142f6:	add    ebp,DWORD PTR [edi-0x37d9cea5]
  4142fc:	cmc    
  4142fd:	mov    eax,ds:0x606e0880
  414302:	bound  ebp,QWORD PTR [edi+0x2eab83c6]
  414308:	in     eax,dx
  414309:	adc    eax,edx
  41430b:	add    dl,BYTE PTR [ebp+0x6e]
  41430e:	mov    eax,0xe12402e4
  414313:	jge    0x41437e
  414315:	fsubp  st(1),st
  414317:	adc    al,0xcf
  414319:	test   al,0x10
  41431b:	add    eax,0x94fb552
  414320:	mov    esp,0xb6a1acec
  414325:	xor    edi,DWORD PTR [ecx+0x5ef6261a]
  41432b:	outs   dx,BYTE PTR ds:[esi]
  41432c:	mov    dh,0x33
  41432e:	inc    esi
  41432f:	das    
  414330:	xchg   edi,eax
  414331:	and    dh,al
  414333:	mov    eax,0x4b9725c
  414338:	hlt    
  414339:	fwait
  41433a:	int    0x8d
  41433c:	fisub  WORD PTR [eax]
  41433e:	imul   esp,ebp,0x49558ef6
  414344:	mov    al,ds:0x79b060
  414349:	aam    0xcc
  41434b:	jb     0x41430c
  41434d:	push   esp
  41434e:	pop    eax
  41434f:	pop    ds
  414350:	push   eax
  414351:	mov    esi,0x17fe00b8
  414356:	arpl   WORD PTR [esi-0x6b65dbad],dx
  41435c:	shl    BYTE PTR [ebx+0x54456764],1
  414362:	ror    edi,1
  414364:	(bad)
  414367:	push   ebp
  414368:	or     BYTE PTR [esi-0x7c],bh
  41436b:	pop    edi
  41436c:	rol    BYTE PTR [ebp+0x1b],cl
  41436f:	sub    al,0x95
  414371:	ss xor al,al
  414374:	push   esp
  414375:	das    
  414376:	sbb    eax,0x746a92d5
  41437b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41437c:	dec    ebp
  41437d:	xchg   BYTE PTR fs:[ecx-0x5a7c80d7],dl
  414384:	aad    0xc6
  414386:	imul   edx,DWORD PTR [eax],0x51
  414389:	add    al,0xee
  41438b:	das    
  41438c:	cmc    
  41438d:	aam    0x1e
  41438f:	arpl   WORD PTR [esi-0x37a188ea],si
  414395:	xor    cl,dl
  414397:	jle    0x4143e6
  414399:	sti    
  41439a:	ds call 0xcc33:0x9a5b90ad
  4143a2:	icebp  
  4143a3:	(bad)  
  4143a5:	imul   ebp,eax,0x77
  4143a8:	(bad)  
  4143a9:	mov    ecx,0x47f4f05
  4143ae:	jns    0x41441b
  4143b0:	sub    DWORD PTR [edx+0x373734f5],eax
  4143b6:	test   al,0xa9
  4143b8:	and    dh,al
  4143ba:	(bad)  
  4143bb:	repz cmp DWORD PTR [eax],0x5c4dd7e7
  4143c2:	jne    0x41441b
  4143c4:	push   cs
  4143c5:	push   esp
  4143c6:	mov    al,ds:0xcea1eb2f
  4143cb:	xor    BYTE PTR [esi-0x72acbfac],ch
  4143d1:	dec    ebp
  4143d2:	icebp  
  4143d3:	push   ecx
  4143d4:	sbb    ebp,0xffffffa9
  4143d7:	sub    BYTE PTR [ebx+0x2c97f491],cl
  4143dd:	and    eax,DWORD PTR [ebx+eax*8-0x7b6fbc47]
  4143e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e5:	pop    eax
  4143e6:	(bad)  
  4143e7:	push   edi
  4143e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4143e9:	inc    esp
  4143ea:	out    dx,eax
  4143eb:	jmp    0x2912:0x165c0bba
  4143f2:	pop    ebx
  4143f3:	pusha  
  4143f4:	fdiv   DWORD PTR [ebp+0x2f]
  4143f7:	adc    al,0xac
  4143fa:	inc    esp
  4143fb:	push   ss
  4143fc:	dec    esp
  4143fd:	xor    BYTE PTR [ecx-0xb],ah
  414400:	xchg   edx,eax
  414401:	cmp    eax,0xedaa6897
  414406:	pop    ds
  414407:	(bad)
  41440b:	mov    esi,0xcd3a7a02
  414410:	jmp    0x19bf:0x93884307
  414417:	les    esp,FWORD PTR [ebx-0x4b]
  41441a:	out    dx,eax
  41441b:	sub    al,0x7a
  41441d:	shr    DWORD PTR ds:0x35ad4106,0x32
  414424:	dec    edx
  414425:	aaa    
  414426:	or     DWORD PTR [eax+0x3b],edi
  414429:	mov    edi,0x3ac953d7
  41442e:	mov    ds:0x5f177881,al
  414433:	(bad)  
  414434:	xchg   edi,eax
  414435:	cmp    eax,0x98e06f57
  41443a:	xor    bh,BYTE PTR [edx+0x20bb6365]
  414440:	aas    
  414441:	jne    0x414489
  414443:	daa    
  414444:	add    BYTE PTR [eax+0x57],ah
  414447:	xchg   BYTE PTR [eax],bl
  414449:	push   ds
  41444a:	imul   eax,esi,0xfffffff2
  41444d:	mov    al,0x9
  41444f:	ins    BYTE PTR es:[edi],dx
  414450:	aas    
  414451:	inc    esp
  414452:	fiadd  WORD PTR [edx+0x1a]
  414455:	adc    eax,edi
  414457:	mov    ch,0x2b
  414459:	outs   dx,DWORD PTR ds:[esi]
  41445a:	mov    ecx,0xe99dbd40
  41445f:	adc    DWORD PTR [edx-0x63],esi
  414462:	or     BYTE PTR [edx-0x4e],dh
  414465:	(bad)  
  414466:	outs   dx,BYTE PTR ds:[esi]
  414467:	stc    
  414468:	inc    esp
  414469:	jno    0x4143f2
  41446b:	test   al,0x68
  41446d:	ror    bh,cl
  41446f:	clc    
  414470:	push   esi
  414471:	gs xchg ch,al
  414474:	das    
  414475:	jbe    0x414414
  414477:	mov    al,cs:0xf657c815
  41447d:	mov    esi,0x1daecba3
  414482:	jnp    0x414478
  414484:	fdivr  DWORD PTR [edx+0x302c275b]
  41448a:	xor    eax,0x6b5a7e9a
  41448f:	cmp    DWORD PTR [edi-0x3f],ebx
  414492:	mov    ds:0xf6260630,al
  414497:	pop    es
  414498:	cmp    esi,DWORD PTR [eax+eax*8+0x66]
  41449c:	out    0xf2,eax
  41449e:	add    eax,0x2a91e3bd
  4144a3:	sti    
  4144a4:	les    edi,FWORD PTR [ebx+0x5a141b62]
  4144aa:	xchg   DWORD PTR ds:0x9dee1ea7,ecx
  4144b0:	inc    DWORD PTR [edi+0x40]
  4144b3:	add    al,0xda
  4144b5:	or     eax,0xea53199
  4144ba:	pop    ss
  4144bb:	loope  0x4144ce
  4144bd:	fnstenv [ebx+eiz*4-0x80]
  4144c1:	hlt    
  4144c2:	mov    dl,0x57
  4144c4:	pop    esp
  4144c5:	add    BYTE PTR [esi],0xde
  4144c8:	scas   eax,DWORD PTR es:[edi]
  4144c9:	sti    
  4144ca:	lock clc 
  4144cc:	into   
  4144cd:	fsubr  QWORD PTR [ebx]
  4144cf:	neg    BYTE PTR [edi]
  4144d1:	ja     0x414505
  4144d3:	es jns 0x41450b
  4144d6:	loope  0x41446b
  4144d8:	push   0x43
  4144da:	nop
  4144db:	outs   dx,BYTE PTR ds:[esi]
  4144dc:	inc    esi
  4144dd:	nop
  4144de:	push   edi
  4144df:	mov    al,0xa8
  4144e1:	xor    al,0x4
  4144e3:	mov    es,WORD PTR [esi+esi*4-0x5a]
  4144e7:	or     al,0xa5
  4144e9:	push   esp
  4144ea:	jge    0x41450d
  4144ec:	aaa    
  4144ed:	pop    ecx
  4144ee:	int    0x45
  4144f0:	inc    edi
  4144f1:	pop    esp
  4144f2:	add    BYTE PTR [di-0x16],ah
  4144f6:	or     al,0x7f
  4144f8:	dec    edx
  4144f9:	bound  edi,QWORD PTR [eax]
  4144fb:	cmp    al,0x5e
  4144fd:	pop    eax
  4144fe:	push   eax
  4144ff:	xchg   edi,eax
  414500:	or     eax,0xac605fd5
  414505:	jno    0x41450a
  414507:	and    edx,DWORD PTR [esi]
  414509:	sbb    ch,BYTE PTR [edx+0x2cb78c17]
  41450f:	into   
  414510:	xchg   edx,eax
  414511:	aam    0xaa
  414513:	ins    BYTE PTR es:[edi],dx
  414514:	cwde   
  414515:	dec    ebp
  414516:	std    
  414517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414518:	(bad)  
  414519:	and    eax,0x1f48c537
  41451e:	sbb    esp,DWORD PTR [ecx+eax*2]
  414521:	add    ebx,DWORD PTR [edi-0x2a]
  414524:	inc    esp
  414525:	das    
  414526:	pop    ds
  414527:	retf   
  414528:	xchg   ebx,eax
  414529:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41452b:	test   BYTE PTR ds:0xc0c3c465,dh
  414531:	retf   0x9eb0
  414534:	mov    al,0x37
  414536:	pushf  
  414537:	or     al,0x46
  414539:	cli    
  41453a:	sub    ebp,DWORD PTR [ebp+0xc1ddeb5]
  414540:	repnz aas 
  414542:	sbb    al,0xcc
  414544:	mov    edx,0x3d0fb158
  414549:	pusha  
  41454a:	mov    ch,0xe3
  41454c:	pop    DWORD PTR [ebx-0x23]
  41454f:	call   0x1947:0x220b6751
  414556:	jecxz  0x414500
  414558:	mov    ebp,0x8f081709
  41455d:	sahf   
  41455e:	add    esp,esi
  414560:	(bad)  
  414561:	pop    ecx
  414562:	(bad)  
  414563:	test   BYTE PTR [ebp-0x7ed58abf],ah
  414569:	pop    eax
  41456a:	fsubrp st(0),st
  41456c:	or     DWORD PTR [edi-0x17f1c7f8],esp
  414572:	test   al,0x7
  414574:	push   ebp
  414575:	fs mov ebp,0xceaf8895
  41457b:	dec    edi
  41457c:	test   al,0xbc
  41457e:	and    edi,edi
  414580:	pop    eax
  414581:	add    al,0xf2
  414583:	pop    esp
  414584:	mov    bl,0x10
  414586:	mov    ecx,0x6c20e52f
  41458b:	sbb    al,0x5d
  41458d:	cmp    bh,al
  41458f:	scas   al,BYTE PTR es:[edi]
  414590:	jl     0x414525
  414592:	dec    ecx
  414593:	sbb    eax,0x905917e9
  414598:	cmp    al,BYTE PTR [ebp+0x17]
  41459b:	mov    ecx,DWORD PTR [ebx-0x56]
  41459e:	sahf   
  41459f:	aaa    
  4145a0:	or     eax,0xfc08850a
  4145a5:	lods   eax,DWORD PTR ds:[esi]
  4145a6:	in     al,dx
  4145a7:	xchg   esp,eax
  4145a8:	es mov esi,0x2097f2fa
  4145ae:	daa    
  4145af:	xchg   DWORD PTR [edx+0x73],eax
  4145b2:	icebp  
  4145b3:	icebp  
  4145b4:	jp     0x4145f8
  4145b6:	lock cmc 
  4145b8:	sbb    esi,DWORD PTR [esp+ebx*8]
  4145bb:	dec    BYTE PTR [eax-0x29d5df30]
  4145c1:	outs   dx,BYTE PTR ds:[esi]
  4145c2:	mov    ebp,0xddbc7606
  4145c7:	add    edi,ecx
  4145c9:	je     0x414642
  4145cb:	daa    
  4145cc:	bound  ecx,QWORD PTR [esi]
  4145ce:	push   edx
  4145cf:	cmc    
  4145d0:	inc    esi
  4145d1:	mov    al,0xb8
  4145d3:	lds    esp,FWORD PTR [ecx+0x557b566f]
  4145d9:	sub    al,0x60
  4145db:	fst    DWORD PTR [ebx-0x241cccc4]
  4145e1:	xchg   edi,eax
  4145e2:	cmp    al,BYTE PTR [edx-0x3490ff4e]
  4145e8:	mov    edi,DWORD PTR [edx]
  4145ea:	scas   al,BYTE PTR es:[edi]
  4145eb:	sub    esi,esp
  4145ed:	sahf   
  4145ee:	adc    eax,0x67ddf91e
  4145f3:	aad    0xf7
  4145f5:	mov    WORD PTR ds:0x172c2909,gs
  4145fb:	test   al,0x4c
  4145fd:	call   0x9a95bf9a
  414602:	call   0x8ed8:0x3609e113
  414609:	xchg   edi,eax
  41460a:	sub    dl,BYTE PTR [ebp-0x6b5e5e62]
  414610:	out    dx,eax
  414611:	imul   ebp,ecx,0xfffffff2
  414614:	sbb    ebx,0x5
  414617:	ins    BYTE PTR es:[edi],dx
  414618:	into   
  414619:	sahf   
  41461a:	lds    ecx,FWORD PTR [ebp+0x32867c19]
  414620:	(bad)  
  414621:	xchg   edi,eax
  414622:	xchg   edi,eax
  414623:	into   
  414624:	push   0x5c
  414626:	pushf  
  414627:	out    dx,al
  414628:	push   esp
  414629:	push   ds
  41462a:	mov    fs,WORD PTR [esi-0x4f]
  41462d:	cld    
  41462e:	adc    eax,0xc12680fb
  414633:	cli    
  414634:	jge    0x414603
  414636:	repz mov ebx,0xf558e7d6
  41463c:	rep outs dx,BYTE PTR ds:[esi]
  41463e:	inc    edi
  41463f:	fild   WORD PTR [ebx]
  414641:	push   ebx
  414642:	test   DWORD PTR [edx-0x9114ddb],esi
  414648:	xlat   BYTE PTR ds:[ebx]
  414649:	or     eax,0xe2b242b1
  41464e:	cmp    al,0x22
  414650:	or     al,ah
  414652:	mov    ch,0x5c
  414654:	rcr    DWORD PTR [eax],cl
  414656:	gs push esi
  414658:	fwait
  414659:	popf   
  41465a:	push   ss
  41465b:	stc    
  41465c:	cdq    
  41465d:	sti    
  41465e:	mov    dh,0x7d
  414660:	data16 xor BYTE PTR [ecx],dh
  414663:	repz cmp BYTE PTR [eax],bl
  414666:	inc    edx
  414667:	xor    DWORD PTR [ecx+edi*4-0x20],edi
  41466b:	push   esp
  41466c:	and    ah,BYTE PTR [edx]
  41466e:	mov    DWORD PTR [edi],ebx
  414670:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414671:	jl     0x4146c3
  414673:	(bad)  
  414674:	adc    al,0x55
  414676:	in     al,0x6e
  414678:	pushf  
  414679:	stos   DWORD PTR es:[edi],eax
  41467a:	mul    ebx
  41467c:	pop    es
  41467d:	xchg   ebp,eax
  41467e:	jo     0x4146c1
  414680:	mov    dh,0x3
  414682:	push   eax
  414683:	mov    ds:0x4275fc9a,eax
  414688:	fdivr  QWORD PTR [edi+0x33ee935e]
  41468e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41468f:	sub    eax,0x38148084
  414694:	push   0x51
  414696:	push   ebx
  414697:	repnz mov bl,0xe8
  41469a:	sub    al,0xdf
  41469c:	xor    eax,0xcc7d8b6c
  4146a1:	dec    ebx
  4146a2:	push   eax
  4146a3:	jnp    0x4146f4
  4146a5:	idiv   BYTE PTR [esi+0x24b6c587]
  4146ab:	push   ds
  4146ac:	setno  BYTE PTR cs:[edx+0x34e88e13]
  4146b4:	cmp    dl,BYTE PTR [edx+0x7e]
  4146b7:	ss out 0x6d,al
  4146ba:	(bad)  
  4146bc:	mov    edx,0xbee31c14
  4146c1:	inc    edi
  4146c2:	add    bh,BYTE PTR [ecx+0xf7f894a]
  4146c8:	adc    DWORD PTR [eax],ebx
  4146ca:	in     al,dx
  4146cb:	sbb    al,0x8d
  4146cd:	mov    al,0x0
  4146cf:	push   esi
  4146d0:	xor    BYTE PTR [edi+esi*1],cl
  4146d3:	leave  
  4146d4:	adc    eax,0xdf95d3c8
  4146d9:	lods   al,BYTE PTR ds:[esi]
  4146da:	mul    esi
  4146dc:	xchg   edi,eax
  4146dd:	push   esi
  4146de:	mov    ds:0x297e49b,eax
  4146e3:	cmp    ecx,DWORD PTR [ebx-0x79]
  4146e6:	cdq    
  4146e7:	mov    ds:0xd2dfc1f4,al
  4146ec:	fsub   st,st(2)
  4146ee:	xchg   DWORD PTR [ebx],ebp
  4146f0:	or     al,0xee
  4146f2:	lods   al,BYTE PTR ds:[esi]
  4146f3:	out    dx,eax
  4146f4:	pop    esi
  4146f5:	and    esi,DWORD PTR [eax+ebx*8]
  4146f8:	xchg   edi,eax
  4146f9:	push   ss
  4146fa:	jp     0x414692
  4146fc:	sbb    edi,DWORD PTR [esi+eiz*2-0x71]
  414700:	push   eax
  414701:	and    eax,0x40be8d9f
  414706:	dec    DWORD PTR [edi-0x2568fb09]
  41470c:	out    0x39,al
  41470e:	push   edi
  41470f:	dec    ecx
  414710:	int3   
  414711:	and    al,0x38
  414713:	lods   eax,DWORD PTR ds:[esi]
  414714:	lock les ebp,FWORD PTR gs:[esp+edx*8+0xe]
  41471a:	and    al,0xa0
  41471c:	xlat   BYTE PTR ds:[bx]
  41471e:	aas    
  41471f:	jbe    0x414783
  414721:	mov    ecx,0xc3f8a130
  414726:	adc    al,0x19
  414728:	loopne 0x41479d
  41472a:	outs   dx,BYTE PTR ds:[esi]
  41472b:	mov    edx,0x2b74bc45
  414730:	push   edx
  414731:	inc    esi
  414732:	push   eax
  414733:	adc    BYTE PTR [eax],al
  414735:	jl     0x4146df
  414737:	jg     0x4146cb
  414739:	xor    al,0x9b
  41473b:	pop    esp
  41473c:	into   
  41473d:	sub    ecx,ecx
  41473f:	ins    BYTE PTR es:[edi],dx
  414740:	dec    ebp
  414741:	test   DWORD PTR [ecx+eiz*8-0x16],0xecb2a3b6
  414749:	jecxz  0x4147ae
  41474b:	das    
  41474c:	pop    esp
  41474d:	pushf  
  41474e:	(bad)  
  41474f:	cmp    eax,0x44a8111b
  414754:	mov    ecx,0xc8d88753
  414759:	test   al,0x4
  41475b:	push   edi
  41475c:	sub    eax,0xff14011c
  414761:	and    BYTE PTR [ebx+0x774e14eb],bh
  414767:	shl    DWORD PTR [esi-0x19f8453f],cl
  41476d:	xor    DWORD PTR [edx+0x23],esi
  414770:	aad    0xee
  414772:	pushf  
  414773:	fs xor eax,0x422b9cf8
  414779:	dec    ecx
  41477a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41477b:	mov    ah,0x59
  41477d:	ins    BYTE PTR es:[edi],dx
  41477e:	js     0x414726
  414780:	test   eax,0xb9cd21ca
  414785:	add    eax,ebp
  414787:	scas   eax,DWORD PTR es:[edi]
  414788:	pop    esp
  414789:	mov    ebx,0x69649f
  41478e:	lds    eax,FWORD PTR [ebx]
  414790:	adc    al,0x88
  414792:	xor    DWORD PTR [edx],esp
  414794:	jge    0x414731
  414796:	mov    es,WORD PTR ds:0x2c961db3
  41479c:	nop
  41479d:	data16 xor BYTE PTR [ebp+0x5d3314f4],dh
  4147a4:	jnp    0x4147a7
  4147a6:	push   esi
  4147a7:	das    
  4147a8:	sub    eax,0x893fde27
  4147ad:	ds mov dl,0x43
  4147b0:	hlt    
  4147b1:	rcr    DWORD PTR [esi],1
  4147b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b4:	in     eax,dx
  4147b5:	mov    ch,0x3b
  4147b7:	lods   eax,DWORD PTR ds:[esi]
  4147b8:	daa    
  4147b9:	(bad)  
  4147ba:	fadd   QWORD PTR ds:0xea90a5ad
  4147c0:	bound  edx,QWORD PTR [edx-0x46]
  4147c3:	call   0x469a:0x37cb713d
  4147ca:	adc    bl,BYTE PTR [edi+0x2c]
  4147cd:	push   0x35811ad9
  4147d2:	shl    DWORD PTR [edi+0x55d3dca3],1
  4147d8:	outs   dx,DWORD PTR ds:[esi]
  4147d9:	stos   BYTE PTR es:[edi],al
  4147da:	rcl    DWORD PTR [esi+0x2960afe4],0xd9
  4147e1:	dec    DWORD PTR [ecx-0x1e]
  4147e4:	mov    dl,0x1c
  4147e6:	adc    BYTE PTR [eax+0x8],0x1c
  4147ea:	adc    bh,BYTE PTR [ebx+0x6b63c3d5]
  4147f0:	mov    ch,0xb
  4147f2:	fstp   DWORD PTR [ecx-0x6d]
  4147f5:	mov    BYTE PTR [ebx],dh
  4147f7:	push   0x54263ff9
  4147fc:	les    ebx,FWORD PTR [eax-0x22b7a45b]
  414802:	xchg   esi,eax
  414803:	iret   
  414804:	mov    edx,0x640a91fc
  414809:	fisubr DWORD PTR [edi-0x756c8fb6]
  41480f:	out    0xd0,eax
  414811:	mov    cl,0x2f
  414813:	xor    ecx,DWORD PTR [edi+ebx*1-0x7ea5f932]
  41481a:	adc    DWORD PTR [edx-0x3c],esp
  41481d:	addr16 sub eax,0xbd766425
  414823:	jg     0x4147b1
  414825:	jae    0x41485f
  414827:	mov    cl,0x0
  414829:	mov    edi,0x980427d8
  41482e:	add    eax,ecx
  414830:	mov    cl,0xb1
  414832:	arpl   WORD PTR [esi+ebx*8+0x30],cx
  414836:	mov    ecx,DWORD PTR ds:0xc6742532
  41483c:	ficom  DWORD PTR [eax-0x5a]
  41483f:	into   
  414840:	push   ebp
  414841:	jo     0x4148a2
  414843:	mov    fs,WORD PTR [edi-0x2c22e7cc]
  414849:	pop    esp
  41484a:	or     eax,DWORD PTR [esi-0x6e]
  41484d:	pop    es
  41484e:	xor    BYTE PTR [ebp+0xd],0xcd
  414852:	sbb    esi,DWORD PTR [esi]
  414854:	push   ebx
  414855:	hlt    
  414856:	add    esi,0x29
  414859:	and    DWORD PTR ds:0x95ad731c,edx
  41485f:	into   
  414860:	es jle 0x4147f3
  414863:	fisubr WORD PTR [ebx+edx*8-0x56f667d2]
  41486a:	pop    edi
  41486b:	sub    BYTE PTR [ebx-0x46],ch
  41486e:	sar    DWORD PTR [ebx-0x3bc70a20],1
  414874:	sbb    esi,DWORD PTR [edx+edi*1-0x2498fa66]
  41487b:	jae    0x41486a
  41487d:	(bad)  
  41487e:	aaa    
  41487f:	xchg   ebx,eax
  414880:	pusha  
  414881:	jmp    0xad80:0x84d67b06
  414888:	or     bl,0xd5
  41488b:	aas    
  41488c:	lock xchg ebp,eax
  41488e:	jle    0x414818
  414890:	aas    
  414891:	fnsave [edx+ebp*8]
  414894:	and    ebp,DWORD PTR [eax-0x3d75dbb8]
  41489a:	jno    0x41487d
  41489c:	aad    0xad
  41489e:	cmp    DWORD PTR [esi-0x4d],ebx
  4148a1:	scas   eax,DWORD PTR es:[edi]
  4148a2:	inc    esp
  4148a3:	cs jmp 0xfe431c98
  4148a9:	imul   ebp,DWORD PTR [ebp+0x316914bc],0x68eb6fb9
  4148b3:	js     0x4148ab
  4148b5:	clc    
  4148b6:	dec    ecx
  4148b7:	jne    0x414916
  4148b9:	xor    BYTE PTR [ebp-0x26c97740],cl
  4148bf:	aam    0x44
  4148c1:	fidiv  WORD PTR [ecx+0x4e]
  4148c4:	sar    DWORD PTR [ecx],cl
  4148c6:	mov    edi,0x82c66fa
  4148cb:	cmc    
  4148cc:	mov    al,ds:0xcb9c4bf6
  4148d1:	sbb    eax,0x12909c2b
  4148d6:	rcl    DWORD PTR [ecx],cl
  4148d8:	and    BYTE PTR [edx+0x2a],al
  4148db:	mov    ah,0xe1
  4148dd:	push   0xffffffa1
  4148df:	push   ebx
  4148e0:	dec    esp
  4148e1:	mov    ebp,0x238389dd
  4148e6:	dec    ebp
  4148e7:	arpl   WORD PTR [ebx-0x1dd299e9],ax
  4148ed:	xor    BYTE PTR [ecx],bh
  4148ef:	hlt    
  4148f0:	pop    esp
  4148f1:	and    al,0xfd
  4148f3:	cmp    DWORD PTR [ebx+0x76],ebp
  4148f6:	or     bl,BYTE PTR [ecx+0x11]
  4148f9:	je     0x414959
  4148fb:	sahf   
  4148fc:	addr16 aad 0x80
  4148ff:	jle    0x414949
  414901:	shr    ebx,cl
  414903:	push   ebp
  414904:	mov    bl,BYTE PTR [edx-0x773a2ef0]
  41490a:	mov    bh,0xcc
  41490c:	jb     0x4148c4
  41490e:	inc    DWORD PTR [esi-0x2f]
  414911:	and    eax,0xfbafa155
  414916:	mov    fs,esp
  414918:	mov    BYTE PTR [ebx+edi*8-0x28],cl
  41491c:	adc    BYTE PTR ds:0x32518043,cl
  414922:	sbb    ebp,DWORD PTR [ecx-0x6a195fcd]
  414928:	push   es
  414929:	mov    ds:0x3ca03c00,al
  41492e:	adc    DWORD PTR [ebx],esi
  414930:	fnsave [esp+esi*2-0x61]
  414934:	sar    BYTE PTR [edi+0x6f8399d4],cl
  41493a:	shr    DWORD PTR [esi-0x3f],0x99
  41493e:	sub    al,0x6f
  414940:	push   edi
  414941:	retf   0x1739
  414944:	loop   0x414904
  414946:	jae    0x4148cb
  414948:	pusha  
  414949:	xchg   ebx,eax
  41494a:	dec    eax
  41494b:	push   edi
  41494c:	retf   0x82c9
  41494f:	(bad)  
  414950:	xrelease xchg DWORD PTR [eax-0x4],edx
  414954:	xchg   ebx,eax
  414955:	in     eax,0x44
  414957:	pop    ebp
  414958:	and    dh,ch
  41495a:	in     al,0x64
  41495c:	xchg   BYTE PTR [edx+0x18],dl
  41495f:	les    esi,FWORD PTR [esi+0x7e]
  414962:	xchg   edi,eax
  414963:	or     BYTE PTR [edi],bl
  414965:	mov    ebp,0xbfbe825
  41496a:	sub    esi,DWORD PTR [eax]
  41496c:	cmp    BYTE PTR [eax+edx*2],al
  41496f:	js     0x414972
  414971:	xchg   edx,eax
  414972:	fnstenv [esi+0x4c]
  414975:	pop    esi
  414976:	ja     0x4149c5
  414978:	adc    al,bl
  41497a:	and    al,0xb6
  41497c:	rcl    BYTE PTR ds:[ebp+0x1c],1
  414980:	mov    ds:0xb8cfb325,al
  414985:	jmp    0xec6e:0x5aa562ef
  41498c:	jmp    0xbddb:0xe708393e
  414993:	das    
  414994:	push   0xf4886867
  414999:	mov    cl,0xfc
  41499b:	repz sub DWORD PTR [ebp-0x447798da],esi
  4149a2:	sbb    DWORD PTR [ebp+0x63],ecx
  4149a5:	cwde   
  4149a6:	jnp    0x4149f5
  4149a8:	push   eax
  4149a9:	xor    eax,DWORD PTR [eax]
  4149ab:	(bad)  
  4149ac:	repnz and al,0xd
  4149af:	dec    ecx
  4149b0:	xor    edx,DWORD PTR [ebx+ebp*8]
  4149b3:	dec    ecx
  4149b4:	push   0xfb2fe44d
  4149b9:	xor    DWORD PTR [esp+edi*1],0x3ddf339a
  4149c0:	jne    0x4149be
  4149c2:	jle    0x414a3f
  4149c4:	inc    eax
  4149c5:	sar    DWORD PTR [edi],1
  4149c7:	xchg   ebx,eax
  4149c8:	adc    DWORD PTR [edi-0x3e],esi
  4149cb:	jb     0x4149a5
  4149cd:	mov    esp,0xc90a4e4e
  4149d2:	mov    DWORD PTR [esi+0x310747ed],eax
  4149d8:	cdq    
  4149d9:	mov    ah,0x13
  4149db:	xchg   DWORD PTR [edi+0x7f],esi
  4149de:	jecxz  0x414a51
  4149e0:	or     BYTE PTR ds:0xdacbca09,dh
  4149e6:	fist   WORD PTR [esi]
  4149e8:	jns    0x414a38
  4149ea:	aas    
  4149eb:	mov    bh,0x0
  4149ed:	mov    ecx,0xd1f8b79
  4149f2:	in     al,0x9d
  4149f4:	and    al,0x97
  4149f6:	cwde   
  4149f7:	push   cs
  4149f8:	and    eax,0xc79209d
  4149fd:	dec    eax
  4149fe:	pusha  
  4149ff:	inc    ebp
  414a00:	aas    
  414a01:	xchg   bl,dl
  414a03:	push   edx
  414a04:	sub    cl,BYTE PTR [ebx-0x4a]
  414a07:	mov    ebp,0x64d76b81
  414a0c:	pop    esp
  414a0d:	addr16 pop ebp
  414a0f:	dec    edi
  414a10:	lahf   
  414a11:	mov    edi,0x9684f786
  414a16:	(bad)  [esi]
  414a18:	in     eax,dx
  414a19:	adc    DWORD PTR [ebx],edx
  414a1b:	call   0x4af51ad0
  414a20:	arpl   WORD PTR [eax+eiz*8],dx
  414a23:	xchg   ecx,eax
  414a24:	pop    ecx
  414a25:	fist   WORD PTR [ebp-0x13]
  414a28:	fwait
  414a29:	mov    al,ds:0xb629b351
  414a2e:	or     BYTE PTR [edx+0x60d721c6],cl
  414a34:	ret    
  414a35:	aad    0xa2
  414a37:	sahf   
  414a38:	mul    DWORD PTR [edx+0x15]
  414a3b:	in     eax,dx
  414a3c:	(bad)  
  414a3d:	loopne 0x414ab6
  414a3f:	or     DWORD PTR [edi],ecx
  414a41:	cmp    DWORD PTR [ecx-0x31],esp
  414a44:	push   eax
  414a45:	add    esi,DWORD PTR [esi+0x498fc0a4]
  414a4b:	int    0x32
  414a4d:	inc    esi
  414a4e:	jae    0x414a18
  414a50:	xchg   esp,eax
  414a51:	out    0xf9,al
  414a53:	xor    cl,0x95
  414a56:	sbb    DWORD PTR [ebp-0x37],ecx
  414a59:	enter  0x6dd4,0xc1
  414a5d:	inc    esi
  414a5e:	xchg   ebp,eax
  414a5f:	sub    eax,0xd6f1fbc5
  414a64:	jmp    0x6105:0x3b2e54f4
  414a6b:	in     eax,0x28
  414a6d:	mov    al,0x9c
  414a6f:	mov    eax,DWORD PTR [eax]
  414a71:	aas    
  414a72:	pop    eax
  414a73:	inc    edi
  414a74:	leave  
  414a75:	sub    DWORD PTR [edi],eax
  414a77:	mov    edx,0xb3f2e8c2
  414a7c:	iret   
  414a7d:	fdiv   st(5),st
  414a7f:	rol    DWORD PTR [ebx+0x463368ce],0x13
  414a86:	cdq    
  414a87:	pusha  
  414a88:	jae    0x414ad1
  414a8a:	test   DWORD PTR [ecx+edx*2-0x4c],esp
  414a8e:	test   al,0x31
  414a90:	xchg   ebp,eax
  414a91:	add    ecx,DWORD PTR [eax-0x4687c7e7]
  414a97:	or     DWORD PTR ds:0x77ce7f55,edi
  414a9d:	pop    edx
  414a9e:	aas    
  414a9f:	adc    al,0x1e
  414aa1:	popa   
  414aa2:	pop    eax
  414aa3:	sbb    DWORD PTR [eax],eax
  414aa5:	nop
  414aa6:	push   0xfffffff1
  414aa8:	inc    edi
  414aa9:	in     eax,0xdd
  414aab:	or     al,0x25
  414aad:	pusha  
  414aae:	pop    ecx
  414aaf:	or     eax,0x61bbe98b
  414ab4:	pop    esi
  414ab5:	out    dx,al
  414ab6:	inc    esp
  414ab7:	(bad)  
  414ab8:	sub    ebp,ecx
  414aba:	inc    ecx
  414abb:	mov    esi,0xbf322a5c
  414ac0:	sbb    al,0x3
  414ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac3:	adc    dl,BYTE PTR [ecx-0x42df95da]
  414ac9:	into   
  414aca:	push   0xfffffffc
  414acc:	xchg   ebp,eax
  414acd:	lods   eax,DWORD PTR ds:[esi]
  414ace:	mov    BYTE PTR [edx],0x22
  414ad1:	(bad)  
  414ad2:	mov    ecx,0x6daa09fe
  414ad7:	je     0x414b00
  414ad9:	push   0xffffffd4
  414adb:	push   ds
  414adc:	mov    edi,0x6ed7c819
  414ae1:	adc    eax,0x44f726e3
  414ae6:	ficomp DWORD PTR [ebp+0x7a]
  414ae9:	add    eax,0x5d507201
  414aee:	cmp    eax,0xe99b39c5
  414af3:	jbe    0x414ad0
  414af5:	(bad)  
  414af6:	(bad)  
  414af7:	push   eax
  414af8:	ror    BYTE PTR [esp+ebp*4-0x73],cl
  414afc:	jo     0x414afc
  414afe:	xlat   BYTE PTR ds:[ebx]
  414aff:	ja     0x414b31
  414b01:	push   esp
  414b02:	fstp   st(4)
  414b04:	stos   BYTE PTR es:[edi],al
  414b05:	and    esi,ebx
  414b07:	outs   dx,BYTE PTR ds:[esi]
  414b08:	and    DWORD PTR [edi-0x63],0xa784d829
  414b0f:	mov    BYTE PTR [ecx+0x62],dh
  414b12:	outs   dx,DWORD PTR ds:[esi]
  414b13:	mov    cl,BYTE PTR [ebx]
  414b15:	cmp    al,0x72
  414b17:	pop    esp
  414b18:	mov    ah,0x98
  414b1a:	nop
  414b1b:	dec    edi
  414b1c:	push   0x12
  414b1e:	xor    al,BYTE PTR [ebx]
  414b20:	outs   dx,BYTE PTR ds:[esi]
  414b21:	es loopne 0x414adb
  414b24:	adc    BYTE PTR [ebx-0x17],0x1d
  414b28:	pop    ds
  414b29:	test   eax,0x6ec2d8cc
  414b2e:	cmp    al,0x46
  414b30:	add    al,0x28
  414b32:	cmp    DWORD PTR [ebp-0x4664398e],0x371302a4
  414b3c:	repz xchg esi,eax
  414b3e:	inc    edx
  414b3f:	cmp    eax,DWORD PTR [edi]
  414b41:	loope  0x414bb0
  414b43:	gs pop ecx
  414b45:	xor    al,0xb3
  414b47:	add    eax,0xb806c3bb
  414b4c:	mov    ebx,0x8318e759
  414b51:	cld    
  414b52:	adc    eax,0xd3fa5f81
  414b57:	add    DWORD PTR [edi],0xffffffca
  414b5a:	and    bh,bh
  414b5c:	lock (bad) 
  414b5f:	lds    ebp,FWORD PTR [ecx-0x1cef2987]
  414b65:	xor    BYTE PTR [eax+0x319a9eda],dl
  414b6b:	cmp    eax,0xfbe844e0
  414b70:	jge    0x414b25
  414b72:	jne    0x414b3b
  414b74:	shr    BYTE PTR [ecx+0x6e],1
  414b77:	cmp    eax,esi
  414b79:	inc    ebp
  414b7a:	das    
  414b7b:	push   cs
  414b7c:	mov    al,ds:0x441abecb
  414b81:	rcl    DWORD PTR [ecx+0xeb7cbb2],1
  414b87:	in     eax,dx
  414b88:	int    0xe3
  414b8a:	cwde   
  414b8b:	sbb    DWORD PTR [ebx],esi
  414b8d:	stos   BYTE PTR es:[edi],al
  414b8e:	not    DWORD PTR [ecx+0x54]
  414b91:	jno    0x414ba0
  414b93:	lods   al,BYTE PTR ds:[esi]
  414b94:	push   0x41
  414b96:	add    BYTE PTR [eax-0x5994ebe4],bh
  414b9c:	add    BYTE PTR [ecx+0x7cdcb059],al
  414ba2:	sti    
  414ba3:	aas    
  414ba4:	(bad)  
  414ba5:	jo     0x414bbd
  414ba7:	sbb    al,0xa0
  414ba9:	fiadd  WORD PTR [edi+0x6be9dd1]
  414baf:	out    dx,eax
  414bb0:	mov    ecx,0x460c51bf
  414bb5:	sub    dh,BYTE PTR [eax-0x7e]
  414bb8:	pop    eax
  414bb9:	cs xchg ebx,eax
  414bbb:	mov    ebx,0x3d3d01b3
  414bc0:	inc    edx
  414bc1:	fidivr DWORD PTR ds:0x75060559
  414bc7:	ror    BYTE PTR [eax-0x6c],cl
  414bca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bcb:	mov    cl,0x9d
  414bcd:	loop   0x414b8a
  414bcf:	pop    ds
  414bd0:	sbb    edi,esp
  414bd2:	sti    
  414bd3:	cmp    al,0xdb
  414bd5:	adc    ecx,ecx
  414bd7:	icebp  
  414bd8:	dec    edx
  414bd9:	push   ebx
  414bda:	mov    BYTE PTR [ecx+0x24],ch
  414bdd:	bnd jnp 0x414b8c
  414be0:	jnp    0x414c4e
  414be2:	jae    0x414b91
  414be4:	mov    esi,0xd8351e0e
  414be9:	loope  0x414c44
  414beb:	mov    esp,0xcd186dd3
  414bf0:	cld    
  414bf1:	dec    edx
  414bf2:	addr16 mov ds:0xa96,eax
  414bf6:	retf   0x18b2
  414bf9:	jmp    0xd7366cd6
  414bfe:	xor    DWORD PTR [eax],0xfc0fa1d0
  414c04:	mov    edx,0xf83b806
  414c09:	(bad)  
  414c0a:	sbb    cl,BYTE PTR [edx+esi*2+0x35]
  414c0e:	sbb    eax,0xd65cd975
  414c13:	mov    BYTE PTR [ebx+0x4c46c633],al
  414c19:	xor    dh,BYTE PTR [ecx-0x291e0cf2]
  414c1f:	pusha  
  414c20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c21:	cmp    al,0xc
  414c23:	push   ds
  414c24:	loop   0x414c12
  414c26:	xor    dh,ah
  414c28:	stos   DWORD PTR es:[edi],eax
  414c29:	jge    0x414c82
  414c2b:	sub    eax,0x70f4527f
  414c30:	mov    dh,BYTE PTR [esi+eiz*2-0x1b]
  414c34:	pop    ebp
  414c35:	retf   0xf0be
  414c38:	hlt    
  414c39:	mov    edx,0x7aa87b62
  414c3e:	rol    edx,0x5d
  414c41:	push   esi
  414c42:	call   0x6824:0x4c122304
  414c49:	mov    ch,0xf0
  414c4b:	int3   
  414c4c:	js     0x414c2b
  414c4e:	sbb    BYTE PTR [edi+0x76eb49cb],0x64
  414c55:	mov    bl,al
  414c57:	push   esi
  414c58:	cmp    ah,ah
  414c5a:	lahf   
  414c5b:	mov    ebx,0x3f32e0f4
  414c60:	imul   edi,DWORD PTR [ecx],0xffffffb0
  414c63:	jg     0x414c7b
  414c65:	in     eax,0xf7
  414c67:	fwait
  414c68:	cdq    
  414c69:	mov    ecx,0x7471bc0d
  414c6e:	add    DWORD PTR [ebx-0x15947538],ecx
  414c74:	int    0xdc
  414c76:	mov    al,ds:0x862f1813
  414c7b:	xchg   esp,eax
  414c7c:	adc    al,0xf6
  414c7e:	vpmacsww xmm0,xmm3,XMMWORD PTR [ebx+0x2c872af2],xmm0
  414c88:	pusha  
  414c89:	fwait
  414c8a:	addr16 jle 0x414c6a
  414c8d:	dec    ebp
  414c8e:	iret   
  414c8f:	mov    al,ds:0x5fe10551
  414c94:	scas   al,BYTE PTR es:[edi]
  414c95:	sub    eax,DWORD PTR [eax-0x5a5a7d05]
  414c9b:	in     al,dx
  414c9c:	out    dx,eax
  414c9d:	les    ebx,FWORD PTR [ecx+eax*2]
  414ca0:	cmp    esp,DWORD PTR [esi+0x7107b802]
  414ca6:	aad    0xdd
  414ca8:	or     dl,dl
  414caa:	clc    
  414cab:	jnp    0x414c61
  414cad:	js     0x414c62
  414caf:	out    0x65,al
  414cb1:	jmp    0x6059ce10
  414cb6:	push   0xffffffc0
  414cb8:	js     0x414c93
  414cba:	inc    ebp
  414cbb:	sti    
  414cbc:	pop    edx
  414cbd:	sub    ah,BYTE PTR [ebx]
  414cbf:	sub    DWORD PTR [ebp-0x6f],0xffffffec
  414cc3:	xor    eax,0xb586baf4
  414cc8:	jne    0x414c93
  414cca:	enter  0xb422,0x7e
  414cce:	call   DWORD PTR [ebx-0x69]
  414cd1:	mov    cs,WORD PTR [ecx]
  414cd3:	mov    ds:0xa1a6e4c1,al
  414cd8:	adc    eax,0xcc814fc0
  414cdd:	fwait
  414cde:	adc    eax,0x5bfe7eed
  414ce3:	call   0x864b:0xd4750310
  414cea:	out    dx,al
  414ceb:	jmp    0xfb9b66b2
  414cf0:	dec    eax
  414cf1:	and    eax,0xe9f5c0f2
  414cf6:	pop    edx
  414cf7:	fs cdq 
  414cf9:	mov    eax,ds:0xdfdf7749
  414cfe:	call   0xe2c6:0x585c9328
  414d05:	or     DWORD PTR [ecx],eax
  414d07:	cmc    
  414d08:	call   0x5d5e67fb
  414d0d:	jmp    0x23f3d4b8
  414d12:	int    0xd
  414d14:	sub    esi,ecx
  414d16:	or     DWORD PTR [edx+0x3ecb369e],edi
  414d1c:	sahf   
  414d1d:	jo     0x414cd4
  414d1f:	xor    al,0xff
  414d21:	inc    ecx
  414d22:	cmp    ebx,edx
  414d24:	jmp    0x630dec9a
  414d29:	addr16 mov esp,0x46dd1533
  414d2f:	pop    ebp
  414d30:	xchg   esp,eax
  414d31:	es ins BYTE PTR es:[edi],dx
  414d33:	in     al,dx
  414d34:	fistp  WORD PTR [ebp+eax*2-0x3d2aa781]
  414d3b:	mov    edi,0xe5555df5
  414d40:	scas   al,BYTE PTR es:[edi]
  414d41:	push   esp
  414d42:	repz cwde 
  414d44:	fs nop
  414d46:	repz push eax
  414d48:	shl    BYTE PTR [ebx],0x60
  414d4b:	loop   0x414d76
  414d4d:	test   DWORD PTR [eax],edx
  414d4f:	sub    dl,BYTE PTR [edx+0x1bfa9282]
  414d55:	xchg   ebx,eax
  414d56:	dec    esp
  414d57:	xor    ah,BYTE PTR [edx+eiz*2+0x603aac22]
  414d5e:	fstp   QWORD PTR ds:0x9857ae69
  414d64:	out    0x96,eax
  414d66:	add    al,0x84
  414d68:	jmp    0xf6b7cf58
  414d6d:	mov    edx,0x5c4d72d4
  414d72:	nop
  414d73:	punpckhdq mm3,QWORD PTR [ebx+0x22]
  414d77:	loope  0x414d66
  414d79:	pusha  
  414d7a:	in     eax,dx
  414d7b:	mov    eax,0x61517939
  414d80:	mov    al,ds:0x9c5c5e57
  414d85:	xor    edx,DWORD PTR [ebx-0x4d1e5ba3]
  414d8b:	loopne 0x414d7e
  414d8d:	pop    ds
  414d8e:	cmp    eax,0x36be213c
  414d93:	popa   
  414d94:	lock jne 0x414dc1
  414d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d98:	xchg   esp,eax
  414d99:	sbb    edi,DWORD PTR [ebx-0x64]
  414d9c:	mov    cs,WORD PTR [edi]
  414d9e:	jns    0x414d79
  414da0:	inc    edx
  414da1:	pushf  
  414da2:	les    ebp,FWORD PTR [ebp+0x730c2e87]
  414da8:	lds    edi,FWORD PTR [ecx+0x2343613a]
  414dae:	scas   al,BYTE PTR es:[edi]
  414daf:	jecxz  0x414d55
  414db1:	jecxz  0x414d87
  414db3:	jmp    0x351491cb
  414db8:	aaa    
  414db9:	ret    
  414dba:	sti    
  414dbb:	mov    edx,0xbcc4693c
  414dc0:	daa    
  414dc1:	into   
  414dc2:	xchg   ecx,eax
  414dc3:	mov    ebx,0x26ed95df
  414dc8:	adc    bh,ch
  414dca:	aad    0x8f
  414dcc:	and    ecx,DWORD PTR [edx+0x2b]
  414dcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414dd0:	in     al,0x10
  414dd2:	pop    ss
  414dd3:	shl    DWORD PTR [ecx+ebp*1+0x56181a34],cl
  414dda:	push   ebp
  414ddb:	imul   ecx,DWORD PTR [eax+0x48],0xfe692b3a
  414de2:	lds    ebx,FWORD PTR [ebx-0x49d6576d]
  414de8:	mov    ecx,0x69f1615e
  414ded:	test   BYTE PTR [esi-0x36d28404],cl
  414df3:	or     ecx,DWORD PTR [eax+eax*8+0x1f]
  414df7:	mov    BYTE PTR ds:0x7e3b1353,cl
  414dfd:	cli    
  414dfe:	push   edi
  414dff:	pop    esi
  414e00:	retf   
  414e01:	(bad)  
  414e02:	adc    al,0x5a
  414e04:	fcom   DWORD PTR [ebx+0x1]
  414e07:	adc    DWORD PTR [ebx],ecx
  414e09:	neg    BYTE PTR [ebx+0x7f]
  414e0c:	mov    esi,ds
  414e0e:	sbb    al,0xf7
  414e10:	bsf    ebx,DWORD PTR [edx+ebp*2+0x1a1e5d64]
  414e18:	out    dx,eax
  414e19:	sti    
  414e1a:	xchg   BYTE PTR [esi+0x1b],al
  414e1d:	retf   
  414e1e:	jg     0x414e84
  414e20:	enter  0x985a,0x69
  414e24:	test   eax,0xdebd515f
  414e29:	js     0x414e03
  414e2b:	popa   
  414e2c:	pop    ebp
  414e2d:	or     al,0x4d
  414e2f:	pushf  
  414e30:	int3   
  414e31:	sub    eax,0xe3de1ad0
  414e36:	gs mov dl,ch
  414e39:	xchg   esp,eax
  414e3a:	pop    es
  414e3b:	mov    cl,ch
  414e3d:	mov    WORD PTR [ecx-0x4e],fs
  414e40:	mov    al,ds:0xf2d7bf2c
  414e45:	scas   eax,DWORD PTR es:[edi]
  414e46:	or     eax,edi
  414e48:	sub    DWORD PTR [edi-0x3e],ebp
  414e4b:	je     0x414ec3
  414e4d:	shl    DWORD PTR [esi+ecx*4],cl
  414e50:	sbb    edx,edx
  414e52:	xchg   esp,eax
  414e53:	int    0x3d
  414e55:	push   es
  414e56:	stc    
  414e57:	clc    
  414e58:	cmp    al,0xb3
  414e5a:	xchg   edi,eax
  414e5b:	test   al,0x1
  414e5d:	dec    eax
  414e5e:	lock cld 
  414e60:	aad    0x0
  414e62:	in     eax,dx
  414e63:	test   BYTE PTR [ecx],ch
  414e65:	lods   al,BYTE PTR ds:[esi]
  414e66:	les    esi,FWORD PTR [ecx]
  414e68:	adc    eax,0xcb88a5cb
  414e6d:	sub    al,0xba
  414e6f:	fisubr DWORD PTR [ecx+0x6e2cd848]
  414e75:	sbb    eax,0x4cb3ca94
  414e7a:	pop    es
  414e7b:	adc    al,0xc0
  414e7d:	pusha  
  414e7e:	mov    esp,0xd87a59b4
  414e83:	icebp  
  414e84:	cmp    dl,BYTE PTR [ecx+0x7f]
  414e87:	sbb    eax,esp
  414e89:	(bad)  
  414e8a:	retf   
  414e8b:	je     0x414e95
  414e8d:	xchg   ecx,eax
  414e8e:	jb     0x414e72
  414e90:	inc    esi
  414e91:	jmp    FWORD PTR [eax]
  414e93:	push   0xffffffd1
  414e95:	push   ss
  414e96:	inc    edi
  414e97:	sub    eax,0xc964a7d1
  414e9c:	inc    ecx
  414e9d:	push   edx
  414e9e:	rcl    dl,1
  414ea0:	add    bl,0xb1
  414ea3:	jne    0x414eb1
  414ea5:	aas    
  414ea6:	mov    ah,0xf0
  414ea8:	mov    ecx,0xbca8d65f
  414ead:	push   ds
  414eae:	ins    DWORD PTR es:[edi],dx
  414eaf:	out    0xd8,al
  414eb1:	push   cs
  414eb2:	sbb    eax,DWORD PTR [ebx+ebp*1-0x3b429549]
  414eb9:	jle    0x414ec9
  414ebb:	popa   
  414ebc:	cmp    bh,BYTE PTR [esi+0x6a]
  414ebf:	daa    
  414ec0:	int3   
  414ec1:	sbb    dh,BYTE PTR [edi-0x7ec9226c]
  414ec7:	cmp    ebx,DWORD PTR [edi+0x46]
  414eca:	xchg   esi,eax
  414ecb:	outs   dx,BYTE PTR ds:[esi]
  414ecc:	push   edx
  414ecd:	test   eax,0xce483a84
  414ed2:	or     edx,DWORD PTR [edx+0x378988d0]
  414ed8:	jbe    0x414f1b
  414eda:	push   ebp
  414edb:	jbe    0x414e82
  414edd:	retf   
  414ede:	loopne 0x414f2c
  414ee0:	xchg   BYTE PTR [edi-0x83279f9],dl
  414ee6:	into   
  414ee7:	fcmovnb st,st(7)
  414ee9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414eea:	gs jp  0x414ec8
  414eed:	mov    dh,BYTE PTR [esi+0xd]
  414ef0:	adc    DWORD PTR [edi],ecx
  414ef2:	pushf  
  414ef3:	jno    0x414f3e
  414ef5:	in     al,0x61
  414ef7:	xchg   edi,eax
  414ef8:	xchg   ebp,eax
  414ef9:	mov    ch,0x40
  414efb:	inc    ecx
  414efc:	sti    
  414efd:	stos   BYTE PTR es:[edi],al
  414efe:	mov    bl,0x2
  414f00:	add    DWORD PTR [ecx+ebp*8],esp
  414f03:	dec    esp
  414f04:	jno    0x414e9d
  414f06:	outs   dx,BYTE PTR ds:[esi]
  414f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f08:	cs pop es
  414f0a:	adc    BYTE PTR [edi+esi*8+0x3552c079],dl
  414f11:	dec    DWORD PTR ds:0x65d67060
  414f17:	jb     0x414ef7
  414f19:	push   ebp
  414f1a:	popf   
  414f1b:	sbb    DWORD PTR [edx-0x4713078a],edx
  414f21:	fidivr DWORD PTR [ebx+ebp*2-0x6bed2024]
  414f28:	xor    al,0xc6
  414f2a:	push   edx
  414f2b:	js     0x414f9c
  414f2d:	sti    
  414f2e:	dec    esp
  414f2f:	or     esi,DWORD PTR [esi]
  414f31:	push   edx
  414f32:	inc    esp
  414f33:	into   
  414f34:	inc    DWORD PTR [ecx]
  414f36:	adc    ch,ch
  414f38:	repnz fwait
  414f3a:	and    dl,BYTE PTR [edi]
  414f3c:	retf   
  414f3d:	cwde   
  414f3e:	das    
  414f3f:	pop    esp
  414f40:	scas   eax,DWORD PTR es:[edi]
  414f41:	cmp    ecx,DWORD PTR [ebp+0x3bd5199a]
  414f47:	jge    0x414f3a
  414f49:	rol    BYTE PTR [ecx+0x2297dba3],1
  414f4f:	outs   dx,DWORD PTR ds:[esi]
  414f50:	pushf  
  414f51:	cdq    
  414f52:	iret   
  414f53:	retf   0x6534
  414f56:	out    dx,eax
  414f57:	enter  0xe25f,0x1a
  414f5b:	test   ebx,ebx
  414f5d:	ret    0xb747
  414f60:	inc    ax
  414f62:	add    edi,DWORD PTR [ecx]
  414f64:	pop    esp
  414f65:	gs stc 
  414f67:	jge    0x414ef4
  414f69:	cwde   
  414f6a:	shr    DWORD PTR [eax+0x5bc70607],0xbe
  414f71:	in     eax,0xee
  414f73:	sbb    BYTE PTR [ebx],0x2
  414f76:	mov    ah,0xd7
  414f78:	(bad)  
  414f79:	loope  0x414f70
  414f7b:	outs   dx,DWORD PTR ds:[esi]
  414f7c:	(bad)  
  414f7d:	xchg   edx,eax
  414f7e:	sbb    cl,ch
  414f80:	test   eax,0xe1418b3d
  414f85:	mov    al,ds:0x49949c2a
  414f8a:	dec    ebp
  414f8b:	xor    al,0x9a
  414f8d:	adc    eax,0xac4d481a
  414f92:	idiv   esi
  414f94:	loopne 0x414f1d
  414f96:	add    BYTE PTR [esp+ecx*1-0x6],al
  414f9a:	push   ebp
  414f9b:	rcl    bh,0x51
  414f9e:	push   0x289882cf
  414fa3:	lock adc bl,dl
  414fa6:	pop    edi
  414fa7:	ficom  DWORD PTR [ebp+0x2e]
  414faa:	cmc    
  414fab:	adc    bl,0x71
  414fae:	jnp    0x414f41
  414fb0:	xchg   edx,eax
  414fb1:	mov    ecx,0x82ae68f8
  414fb6:	or     ecx,DWORD PTR [ebx+0x66a6f7db]
  414fbc:	xor    cl,BYTE PTR [edi+0x406dc850]
  414fc2:	mov    esi,0x5087990c
  414fc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fc8:	ss mov bl,bl
  414fcb:	cld    
  414fcc:	dec    ebp
  414fcd:	and    DWORD PTR [edi+0xb2fd11a],ecx
  414fd3:	mov    ch,0x38
  414fd5:	enter  0xfb38,0x15
  414fd9:	jle    0x414fc3
  414fdb:	(bad)  
  414fdc:	pop    esp
  414fdd:	dec    edi
  414fde:	aaa    
  414fdf:	je     0x414ffb
  414fe1:	test   DWORD PTR [esp+eiz*4+0x28],ecx
  414fe5:	xchg   cl,bh
  414fe7:	mov    ebx,0x9c68686c
  414fec:	out    dx,al
  414fed:	ss jne 0x41503f
  414ff0:	add    al,BYTE PTR [ebp+eax*8+0x7]
  414ff4:	inc    esp
  414ff5:	loope  0x414fd8
  414ff7:	push   edx
  414ff8:	fbstp  TBYTE PTR [eax]
  414ffa:	pop    ss
  414ffb:	sub    BYTE PTR [ebx],dl
  414ffd:	sbb    eax,0x2cc7c668
  415002:	icebp  
  415003:	stos   DWORD PTR es:[edi],eax
  415004:	daa    
  415005:	push   es
  415006:	lods   eax,DWORD PTR ds:[esi]
  415007:	or     eax,0x80109aee
  41500c:	push   eax
  41500d:	(bad)  
  415010:	sbb    BYTE PTR [edi],cl
  415012:	lods   eax,DWORD PTR ds:[esi]
  415013:	and    al,ch
  415015:	pop    ebp
  415016:	adc    eax,0xc405b86
  41501b:	out    0x68,eax
  41501d:	or     BYTE PTR [eax+esi*1],dl
  415020:	call   0x61bf95ac
  415025:	mov    ds:0x203154f,al
  41502a:	mov    ds:0x67c668dc,al
  41502f:	jb     0x414fda
  415031:	adc    ebp,edi
  415033:	mov    cl,0x4a
  415035:	loop   0x415079
  415037:	pop    ebx
  415038:	jns    0x414fcb
  41503a:	fidiv  DWORD PTR [eax+eiz*4-0x201a8f6a]
  415041:	pop    edx
  415042:	jmp    0x4150a1
  415044:	inc    esi
  415045:	jp     0x4150c4
  415047:	pop    edi
  415048:	(bad)  
  41504a:	push   ebx
  41504b:	mov    DWORD PTR [edi],ecx
  41504d:	cmc    
  41504e:	fadd   QWORD PTR [edx+0x4dc287c0]
  415054:	sbb    BYTE PTR [eax-0x1e],al
  415057:	or     eax,0x11fffa5a
  41505c:	scas   eax,DWORD PTR es:[edi]
  41505d:	mov    bl,0xe
  41505f:	mov    ds:0xdb2c20cb,eax
  415064:	xor    DWORD PTR [ebx],esp
  415066:	jbe    0x4150dc
  415068:	lock and eax,0x3c93e389
  41506e:	fisub  WORD PTR [edi+eiz*8]
  415071:	push   edi
  415072:	jp     0x415076
  415074:	jl     0x415001
  415076:	sti    
  415077:	push   edi
  415078:	cwde   
  415079:	mov    ds:0xe5783d8c,al
  41507e:	jp     0x41503d
  415080:	les    esi,FWORD PTR ds:0x788c7e17
  415086:	arpl   WORD PTR [edx-0x79],bp
  415089:	dec    edx
  41508a:	add    ebx,DWORD PTR [ebx-0x9]
  41508d:	aaa    
  41508e:	add    al,0x89
  415090:	imul   ebx,DWORD PTR [esi-0xeebd3d0],0xffffff8b
  415097:	add    eax,0x3d2b0cf5
  41509c:	add    al,0x8e
  41509e:	icebp  
  41509f:	add    DWORD PTR [ebx+eiz*4],eax
  4150a2:	rcr    DWORD PTR [ebp-0x20],1
  4150a5:	inc    esp
  4150a6:	es mov esi,0xaef9ef1a
  4150ac:	pop    edi
  4150ad:	pushf  
  4150ae:	or     BYTE PTR [edi],bl
  4150b0:	xlat   BYTE PTR ds:[ebx]
  4150b1:	sub    DWORD PTR ds:0xc52d1ff4,esi
  4150b7:	es repz test al,0xf4
  4150bb:	xor    eax,0xfb489200
  4150c0:	mov    edx,0x783ad807
  4150c5:	pop    esp
  4150c6:	or     edx,edx
  4150c8:	pop    esp
  4150c9:	jmp    0xdcdb:0xd7af4d97
  4150d0:	cld    
  4150d1:	push   cs
  4150d2:	mul    DWORD PTR [edx]
  4150d4:	(bad)  
  4150d5:	cli    
  4150d6:	adc    DWORD PTR [esi*1-0x100e3477],0x5d
  4150de:	cmp    BYTE PTR [ecx-0x429ec108],dl
  4150e4:	xor    eax,0xf7477d42
  4150e9:	or     BYTE PTR [eax+ebx*8-0x6c699ece],ah
  4150f0:	xchg   edx,eax
  4150f1:	jge    0x4150cd
  4150f3:	mov    edi,0x80a93dab
  4150f8:	dec    esi
  4150f9:	or     DWORD PTR [edx-0x3f],0x841c3e69
  415100:	ins    BYTE PTR es:[edi],dx
  415101:	ror    eax,1
  415103:	iret   
  415104:	push   edx
  415105:	(bad)  
  415107:	mov    edi,0x37be2a5e
  41510c:	fisub  WORD PTR [ebp+0x25ec6a9f]
  415112:	fcomp  st(2)
  415114:	dec    eax
  415115:	dec    ecx
  415116:	or     bh,bl
  415118:	sbb    al,BYTE PTR [esi-0x53]
  41511b:	push   ds
  41511c:	mov    dh,0xda
  41511e:	ror    BYTE PTR [edx+ebx*2-0x46],cl
  415122:	sub    esi,edx
  415124:	sub    DWORD PTR [edx+0x49],ebx
  415127:	inc    edi
  415128:	push   cs
  415129:	sbb    ebp,DWORD PTR [ebp-0x57bf7b7a]
  41512f:	jmp    0xfa02be8c
  415134:	fcom   DWORD PTR [esi-0x7da35b94]
  41513a:	cs push ss
  41513c:	xor    eax,0xd925e873
  415141:	loope  0x415112
  415143:	and    dh,dl
  415145:	fsubr  QWORD PTR [ecx+0x12488777]
  41514b:	xchg   DWORD PTR [ebx+0x51],ebp
  41514e:	(bad)
  415152:	lahf   
  415153:	les    esp,FWORD PTR ds:0x90243be8
  415159:	les    esp,FWORD PTR ds:0x7acf58f3
  41515f:	mov    ah,0x29
  415161:	adc    BYTE PTR [eax+0x2b026890],al
  415167:	retf   0xa08b
  41516a:	sbb    dl,BYTE PTR [eax+0x5e75abe6]
  415170:	(bad)  
  415171:	push   edx
  415172:	ins    BYTE PTR es:[edi],dx
  415173:	lahf   
  415174:	(bad)  
  415175:	bound  esp,QWORD PTR [edi+ebx*4]
  415178:	push   cs
  415179:	and    al,0xf4
  41517b:	add    al,0xe1
  41517d:	or     bh,0x82
  415180:	pop    es
  415181:	fwait
  415182:	in     al,dx
  415183:	(bad)  
  415184:	hlt    
  415185:	mov    DWORD PTR [edx],esi
  415187:	nop
  415188:	push   0x4d05f29f
  41518d:	inc    ebp
  41518e:	ds dec esi
  415190:	jb     0x4151f8
  415192:	imul   ebx,DWORD PTR [esi+eax*8],0x2fe399f0
  415199:	jge    0x4151ff
  41519b:	push   0x1b
  41519d:	pop    ecx
  41519e:	xchg   esi,eax
  41519f:	push   0x48
  4151a1:	ret    
  4151a2:	outs   dx,DWORD PTR ds:[esi]
  4151a3:	fwait
  4151a4:	mov    bl,0xdb
  4151a6:	mov    al,0x5c
  4151a8:	or     al,0x45
  4151aa:	sub    dl,BYTE PTR [edx]
  4151ac:	ja     0x4151ca
  4151ae:	rcr    DWORD PTR [esi],1
  4151b0:	or     eax,0x1a6362a4
  4151b5:	and    ah,BYTE PTR [esi+0x73]
  4151b8:	or     ebp,DWORD PTR [ecx+0x1bd6a869]
  4151be:	neg    edx
  4151c0:	scas   al,BYTE PTR es:[edi]
  4151c1:	push   ebx
  4151c2:	dec    ecx
  4151c3:	fcmovne st,st(7)
  4151c5:	clc    
  4151c6:	jmp    0x9a2:0x19b1e727
  4151cd:	dec    esi
  4151ce:	test   BYTE PTR [eax+eiz*2+0x2f2bea18],ch
  4151d5:	popf   
  4151d6:	jns    0x4151e3
  4151d8:	add    ecx,DWORD PTR [eax+0x246e1dc7]
  4151de:	daa    
  4151df:	xchg   ecx,eax
  4151e0:	push   esi
  4151e1:	cmp    al,0x2c
  4151e3:	xchg   ecx,eax
  4151e4:	gs mov edx,0x887c4b07
  4151ea:	dec    edi
  4151eb:	cli    
  4151ec:	jl     0x4151f4
  4151ee:	jbe    0x41517a
  4151f0:	int    0xbd
  4151f2:	cmp    al,0xce
  4151f4:	fnsave [edi-0x72]
  4151f7:	push   esp
  4151f8:	dec    ebp
  4151f9:	dec    eax
  4151fa:	push   ebp
  4151fb:	jb     0x415213
  4151fd:	ja     0x4151b6
  4151ff:	jne    0x415262
  415201:	repz sbb dl,BYTE PTR [edx+ebx*4-0x2a]
  415206:	xor    DWORD PTR [ebx],esp
  415208:	call   0x8d3e019b
  41520d:	ror    DWORD PTR [eax-0x7c17f97b],0x8f
  415214:	jg     0x41522a
  415216:	arpl   dx,ax
  415218:	mov    al,ds:0x808a490b
  41521d:	xchg   esi,eax
  41521e:	mov    edi,0x662d10ed
  415223:	xchg   ecx,eax
  415224:	nop
  415225:	and    al,0x84
  415227:	xlat   BYTE PTR ds:[ebx]
  415228:	and    al,0x29
  41522a:	shl    BYTE PTR [eax],0xe2
  41522d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41522e:	jl     0x4152ab
  415230:	push   esp
  415231:	push   cs
  415232:	mov    al,0x24
  415234:	adc    DWORD PTR [esi],ecx
  415236:	adc    al,0x47
  415238:	in     al,dx
  415239:	or     al,0xc0
  41523b:	xchg   ebx,eax
  41523c:	mov    esp,0xb26d39e1
  415241:	or     al,0xd8
  415243:	mov    edi,0x87a275a2
  415248:	fmulp  st(4),st
  41524a:	ror    BYTE PTR ss:0xc27e721e,0x33
  415252:	fidiv  WORD PTR [ebx+0x5c0da9ac]
  415258:	scas   eax,DWORD PTR es:[edi]
  415259:	(bad)  
  41525a:	gs sub al,0xd5
  41525d:	dec    esp
  41525e:	out    0xbd,eax
  415260:	fs out dx,eax
  415262:	mov    ebx,0x106444b1
  415267:	enter  0xb429,0x3a
  41526b:	xchg   edx,eax
  41526c:	xor    eax,0x2c9a26be
  415271:	aas    
  415272:	mov    eax,ds:0xae02e7ec
  415277:	(bad)  
  415278:	mov    edi,0x46e0eb93
  41527d:	aam    0x91
  41527f:	dec    bp
  415281:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415282:	pop    es
  415283:	mov    DWORD PTR [esi],ebp
  415285:	xchg   ebp,eax
  415287:	test   DWORD PTR [ecx-0x370b2464],edx
  41528d:	jmp    0x41525d
  41528f:	adc    DWORD PTR [si+0x5e9e],edi
  415294:	and    esp,eax
  415296:	jns    0x415289
  415298:	xor    al,0x4f
  41529a:	fucom  st(7)
  41529c:	push   esp
  41529d:	in     eax,dx
  41529e:	loopne 0x415235
  4152a0:	push   esp
  4152a1:	push   ecx
  4152a3:	fnstcw WORD PTR [esi+ebx*2]
  4152a6:	adc    al,0x74
  4152a8:	fisub  WORD PTR [ebx+eiz*1+0x1033cff4]
  4152af:	mov    ss,WORD PTR [esi]
  4152b1:	and    al,0xfc
  4152b3:	mov    ch,0x59
  4152b5:	popa   
  4152b6:	cmp    bl,BYTE PTR [edi]
  4152b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152b9:	ror    eax,1
  4152bb:	jp     0x415307
  4152bd:	mov    bh,0xeb
  4152bf:	in     eax,dx
  4152c0:	xchg   esp,eax
  4152c1:	mov    ch,0xc1
  4152c3:	pop    ds
  4152c4:	mov    ebx,0xd4480200
  4152c9:	leave  
  4152ca:	arpl   WORD PTR [edx-0xea1036c],ax
  4152d0:	sub    BYTE PTR [eax+0x4b75b5f],0x65
  4152d7:	adc    eax,0x54d270fd
  4152dc:	mov    al,0xd8
  4152de:	pop    es
  4152df:	sub    BYTE PTR [esi+0x2e],bl
  4152e2:	push   ebx
  4152e3:	mov    bl,0x10
  4152e5:	xchg   ebp,eax
  4152e6:	out    dx,al
  4152e7:	jb     0x41526c
  4152e9:	xchg   ebx,eax
  4152ea:	pop    ebp
  4152eb:	cmp    dl,BYTE PTR [ebx+0x47c70975]
  4152f1:	jg     0x415308
  4152f3:	aaa    
  4152f4:	jmp    0x415329
  4152f6:	adc    DWORD PTR [edx],edi
  4152f8:	mov    edx,0xbfd823e1
  4152fd:	mov    DWORD PTR [eax],ecx
  4152ff:	shr    DWORD PTR [eax+edx*2+0x5d],cl
  415303:	imul   esp,DWORD PTR [edi+0x279b9f91],0x7ab09d3f
  41530d:	rol    dh,cl
  41530f:	fcmovb st,st(7)
  415311:	jbe    0x4152eb
  415313:	aas    
  415314:	loopne 0x415362
  415316:	fcmovb st,st(1)
  415318:	dec    ebx
  415319:	mov    ecx,ss
  41531b:	inc    edx
  41531c:	add    eax,edx
  41531e:	dec    edx
  41531f:	mov    dh,0x5d
  415321:	mov    eax,ds:0x905b592
  415326:	mov    dl,0x33
  415328:	addr16 jae 0x4152fb
  41532b:	pop    esp
  41532c:	jns    0x4153a1
  41532e:	jg     0x4152c0
  415330:	pop    edi
  415331:	push   cs
  415332:	or     al,0x67
  415334:	das    
  415335:	push   esp
  415336:	ds and eax,0x94cfe139
  41533c:	xor    DWORD PTR [ecx-0x6e86780d],ecx
  415342:	mov    edi,0xe7ab0440
  415347:	jecxz  0x415389
  415349:	xchg   edx,eax
  41534a:	push   0x14
  41534c:	jbe    0x4153a5
  41534e:	xor    dl,0x85
  415351:	lea    ecx,[ecx-0x5c015f9c]
  415357:	sub    DWORD PTR [ecx+ebp*8+0x0],esp
  41535b:	out    0x22,al
  41535d:	enter  0xfed,0x53
  415361:	dec    esp
  415362:	aam    0x5b
  415364:	mov    ecx,0x31f34c6b
  415369:	xchg   edx,eax
  41536a:	push   esp
  41536b:	sub    eax,0x7b8e5957
  415370:	jnp    0x4153cb
  415372:	jl     0x415306
  415374:	in     al,dx
  415375:	mov    bh,BYTE PTR [edi+edi*1-0x1a]
  415379:	mov    BYTE PTR [ecx],cl
  41537b:	rol    dh,0x1e
  41537e:	mov    eax,?
  415380:	and    BYTE PTR [edx+edx*4],bl
  415383:	je     0x41537a
  415385:	jb     0x4153ee
  415387:	mov    edi,0x7e91fda
  41538c:	(bad)  
  41538d:	mov    eax,ds:0xd9d166eb
  415392:	jl     0x4153b4
  415394:	sahf   
  415395:	sbb    ecx,DWORD PTR [ebx]
  415397:	out    dx,al
  415398:	jne    0x41534d
  41539a:	mov    al,0x68
  41539c:	mov    edi,0xb7c481bc
  4153a1:	das    
  4153a2:	aad    0x6e
  4153a4:	inc    ebx
  4153a5:	lods   al,BYTE PTR ds:[esi]
  4153a6:	adc    bh,BYTE PTR [ebp+0x731d53e9]
  4153ac:	push   ecx
  4153ad:	test   eax,0xf4979926
  4153b2:	sbb    bl,dl
  4153b4:	mov    eax,ds:0xf6cc3a26
  4153b9:	iret   
  4153ba:	out    0x65,eax
  4153bc:	cmp    al,0x3f
  4153be:	or     cl,ah
  4153c0:	int3   
  4153c1:	pop    edi
  4153c2:	push   eax
  4153c3:	add    eax,0x19b9f3e1
  4153c8:	ffreep st(1)
  4153ca:	fdiv   DWORD PTR [edx-0x5f]
  4153cd:	mov    esi,0xa262cf10
  4153d2:	pop    ebx
  4153d3:	jmp    0x16b9:0x2273932d
  4153da:	(bad)  
  4153dc:	leave  
  4153dd:	dec    edi
  4153de:	mov    ds:0xd3ec3961,eax
  4153e3:	mov    eax,0xa8e12a7a
  4153e8:	gs daa 
  4153ea:	mov    ah,0xfd
  4153ec:	add    al,0x0
  4153ee:	ficom  WORD PTR [esi+0xd]
  4153f1:	stos   DWORD PTR es:[edi],eax
  4153f2:	or     BYTE PTR [edi+eax*4],dl
  4153f5:	pop    esi
  4153f6:	shl    DWORD PTR [ebp-0x43],0x4c
  4153fa:	xchg   esp,eax
  4153fb:	push   esp
  4153fc:	fadd   QWORD PTR [ebx+eiz*4+0x66bb8ca8]
  415403:	inc    ecx
  415404:	icebp  
  415405:	enter  0x2210,0x1c
  415409:	sbb    cl,BYTE PTR [esi]
  41540b:	repz or al,0x12
  41540e:	in     al,dx
  41540f:	mov    edi,0x3e6ea574
  415414:	cld    
  415415:	push   edx
  415416:	or     eax,DWORD PTR [edx]
  415418:	fsubr  DWORD PTR ds:0x9c96c740
  41541e:	add    BYTE PTR [esp+edx*4+0x1c],dh
  415422:	shl    edi,1
  415424:	or     al,0xb7
  415426:	rcl    al,cl
  415428:	mov    cl,0x5
  41542a:	(bad)  
  41542b:	leave  
  41542c:	sbb    al,0x26
  41542e:	jo     0x415497
  415430:	cmp    al,0x5b
  415432:	ret    0xa6ab
  415435:	(bad)
  415438:	cmp    eax,0xd2d23578
  41543d:	cld    
  41543e:	dec    eax
  41543f:	sbb    edi,DWORD PTR [edx]
  415441:	loope  0x415433
  415443:	das    
  415444:	pop    ebx
  415445:	aad    0x1c
  415447:	into   
  415448:	cmp    BYTE PTR [ebx+ecx*8+0x64],dh
  41544c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41544d:	lds    eax,FWORD PTR [ecx]
  41544f:	mov    ebp,0xd5dc8573
  415454:	jns    0x4153fc
  415456:	ins    BYTE PTR es:[edi],dx
  415457:	xlat   BYTE PTR ds:[ebx]
  415458:	imul   esi,DWORD PTR [esi],0x5cdea67f
  41545e:	sub    al,0x11
  415460:	mov    bl,0xe
  415462:	fldl2t 
  415464:	jp     0x41542a
  415466:	sti    
  415467:	sbb    ebp,DWORD PTR [ecx-0x1848c8fe]
  41546d:	jmp    FWORD PTR [ebp-0x14]
  415470:	outs   dx,DWORD PTR ds:[esi]
  415471:	in     eax,dx
  415472:	test   eax,0xa0324fa8
  415477:	fcmovnbe st,st(6)
  415479:	call   0x1eff88a0
  41547e:	mov    esp,0xb6b5c905
  415483:	sti    
  415484:	push   eax
  415485:	aas    
  415486:	or     eax,0x456550ef
  41548b:	arpl   WORD PTR [edx],cx
  41548d:	adc    dl,BYTE PTR [edx-0x18fe069a]
  415493:	or     al,0xb4
  415495:	add    bh,BYTE PTR [esi-0x54abdbd0]
  41549b:	cdq    
  41549c:	lahf   
  41549d:	lahf   
  41549e:	mov    ecx,DWORD PTR [edx-0x7ebd5836]
  4154a4:	dec    edx
  4154a5:	push   ecx
  4154a6:	imul   eax,DWORD PTR [eax],0xffffffbf
  4154a9:	test   ax,0x961b
  4154ad:	lds    edi,FWORD PTR [ebx]
  4154af:	int3   
  4154b0:	cli    
  4154b1:	mov    ah,0x40
  4154b3:	and    esi,DWORD PTR [bp+si-0x77]
  4154b7:	inc    eax
  4154b8:	jmp    0xa278f75c
  4154bd:	leave  
  4154be:	mov    dh,0xcf
  4154c0:	inc    si
  4154c2:	cmp    eax,0xfc19fc36
  4154c7:	inc    ebp
  4154c8:	dec    edx
  4154c9:	lahf   
  4154ca:	ds xchg esi,eax
  4154cc:	gs stos BYTE PTR es:[edi],al
  4154ce:	repz pop ss
  4154d0:	pop    ecx
  4154d1:	and    ecx,DWORD PTR [esp+ebp*8-0x25717723]
  4154d8:	mov    edx,0xef75044
  4154dd:	lods   eax,DWORD PTR ds:[esi]
  4154de:	xor    BYTE PTR [edx+0x55],dh
  4154e1:	add    cl,BYTE PTR [edx]
  4154e3:	pop    es
  4154e4:	(bad)  
  4154e5:	popa   
  4154e6:	daa    
  4154e7:	mov    eax,0x560165d2
  4154ec:	cmp    DWORD PTR [ecx+eiz*1-0x7272111f],esi
  4154f3:	mov    ah,0x97
  4154f5:	push   esi
  4154f6:	imul   esi,DWORD PTR [ecx+0x5b],0x6c
  4154fa:	loopne 0x41553d
  4154fc:	sub    al,0xa8
  4154fe:	mov    eax,ds:0x144e694e
  415503:	pop    eax
  415504:	shl    BYTE PTR [eax],1
  415506:	lock push ss
  415508:	mov    dh,0x54
  41550a:	fadd   st(0),st
  41550c:	push   0x760ca4dd
  415511:	pop    edi
  415512:	adc    al,0xbf
  415515:	(bad)  
  415516:	push   eax
  415517:	cwde   
  415518:	fucomp st(0)
  41551a:	mov    edi,0xdb22e22a
  41551f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415520:	sbb    eax,0x6aa41d5f
  415525:	gs cmp eax,0x2e9bcd75
  41552b:	xor    esp,DWORD PTR [esi]
  41552d:	push   ds
  41552e:	fcmovb st,st(7)
  415530:	ds xchg edx,eax
  415532:	inc    eax
  415533:	inc    esp
  415534:	sbb    ecx,ebx
  415536:	or     BYTE PTR ss:[edi+ebx*8+0x326e5007],ah
  41553e:	push   es
  41553f:	pop    ebp
  415540:	cmp    BYTE PTR [edi-0x2d],bl
  415543:	jg     0x415541
  415545:	inc    ebx
  415546:	mov    bh,0x20
  415548:	or     eax,0x39fdcd5f
  41554d:	call   0xcac7996b
  415552:	inc    ebx
  415553:	repz jmp 0x415569
  415556:	mov    ecx,0x80d3ab17
  41555b:	rol    DWORD PTR [edx+0x4d],0xc1
  41555f:	sbb    BYTE PTR [esi+ecx*2],dl
  415562:	jnp    0x4155de
  415564:	lods   al,BYTE PTR ds:[esi]
  415565:	jb     0x415546
  415567:	sbb    cl,BYTE PTR [eax+0x27]
  41556a:	aam    0x23
  41556c:	mov    ebx,0x1eecd668
  415571:	fs pop esp
  415573:	call   0x5a16f71f
  415578:	jo     0x4155cd
  41557a:	ss bound ecx,QWORD PTR ss:[edx]
  41557e:	(bad)  
  41557f:	loopne 0x4155cc
  415581:	in     eax,dx
  415582:	aas    
  415583:	sub    eax,0x3e59ca7e
  415588:	enter  0xad2b,0x69
  41558c:	pushf  
  41558d:	test   eax,0xc345c8fb
  415592:	mov    ch,0xea
  415594:	ins    DWORD PTR es:[edi],dx
  415595:	mov    al,ds:0xa6f0ad87
  41559a:	xor    dh,dl
  41559c:	pushf  
  41559d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41559e:	add    ebx,DWORD PTR [ecx]
  4155a0:	fs rol edi,0x24
  4155a4:	adc    al,0xb6
  4155a6:	inc    ebx
  4155a7:	jge    0x4155a9
  4155a9:	ror    ch,cl
  4155ab:	fld    QWORD PTR [edi-0x4994f41c]
  4155b1:	jp     0x415593
  4155b3:	xchg   ebp,eax
  4155b4:	icebp  
  4155b5:	mov    edi,0x7fad4dda
  4155ba:	test   al,0xe4
  4155bc:	cdq    
  4155bd:	lea    ebp,[edx-0x44a34f94]
  4155c3:	je     0x415628
  4155c5:	int    0xd2
  4155c7:	mov    eax,ds:0xdcb5475a
  4155cc:	clc    
  4155cd:	or     eax,0x8244d288
  4155d2:	int3   
  4155d3:	arpl   WORD PTR [edi-0x12dd420f],ax
  4155d9:	inc    ebx
  4155da:	mov    edi,0xb8960072
  4155df:	sub    BYTE PTR [eax],0xac
  4155e2:	loopne 0x41563d
  4155e4:	out    0x85,eax
  4155e6:	dec    edi
  4155e7:	inc    edi
  4155e8:	hlt    
  4155e9:	idiv   BYTE PTR [eax+0x6161461b]
  4155ef:	(bad)  
  4155f2:	popf   
  4155f3:	cli    
  4155f4:	das    
  4155f5:	jbe    0x4155f2
  4155f7:	pop    eax
  4155f8:	pop    es
  4155f9:	lock lahf 
  4155fb:	popf   
  4155fc:	and    DWORD PTR [ecx],ebx
  4155fe:	(bad)  
  4155ff:	out    0xd1,al
  415601:	jmp    0xeff5ea5a
  415606:	loope  0x4155c0
  415608:	sub    eax,0x4524a8de
  41560d:	call   0x397e:0xb7d8b0d5
  415614:	add    esp,ecx
  415616:	adc    eax,0x93f00fbc
  41561b:	in     eax,0xc
  41561d:	aad    0x5f
  41561f:	aad    0xef
  415621:	ins    DWORD PTR es:[edi],dx
  415622:	add    eax,0xb86acb08
  415627:	and    eax,0x5ea4d935
  41562c:	sub    al,BYTE PTR [esp+esi*1]
  41562f:	fs cdq 
  415631:	stc    
  415632:	stos   BYTE PTR es:[edi],al
  415633:	xor    DWORD PTR [eax],ebp
  415635:	les    edi,FWORD PTR [ecx+0x4ce8cd63]
  41563b:	dec    esi
  41563c:	jne    0x41560c
  41563e:	loope  0x41566a
  415640:	and    al,0xef
  415642:	add    eax,0x2f3c44ec
  415647:	out    0x4f,eax
  415649:	in     eax,dx
  41564a:	fs cs pop ss
  41564d:	ror    DWORD PTR [edx-0x5c],cl
  415650:	mov    BYTE PTR [ebp+0x7c426c31],cl
  415656:	rcr    edx,0x38
  415659:	sbb    edx,edi
  41565b:	lods   eax,DWORD PTR ds:[esi]
  41565c:	or     eax,0x90a14392
  415661:	cdq    
  415662:	lahf   
  415663:	lods   al,BYTE PTR ds:[esi]
  415664:	adc    BYTE PTR cs:[edx-0x7f],al
  415668:	inc    BYTE PTR [eax]
  41566a:	and    eax,0x2d5b57fe
  41566f:	inc    ebx
  415670:	aam    0x6e
  415672:	xchg   DWORD PTR [eax+0x24154f1b],esp
  415678:	rcr    DWORD PTR [esi],1
  41567a:	nop
  41567b:	inc    ebx
  41567c:	aad    0xb7
  41567e:	cmp    al,0x99
  415680:	int3   
  415681:	dec    eax
  415682:	mov    esp,ecx
  415684:	shr    DWORD PTR [ecx+0x4a0fc41a],cl
  41568a:	jg     0x4156cf
  41568c:	ficomp DWORD PTR [eax-0x1ea84b30]
  415692:	rcl    BYTE PTR [eax-0x22],cl
  415695:	add    DWORD PTR [ebp-0x3b65d65e],esp
  41569b:	push   ebp
  41569c:	mov    bh,0xdb
  41569e:	dec    ebx
  41569f:	jo     0x415621
  4156a1:	es cmp eax,0x2435cb12
  4156a7:	shl    esp,1
  4156a9:	stc    
  4156aa:	adc    eax,0x914eada4
  4156af:	xor    al,0x47
  4156b1:	lock aam 0xd8
  4156b4:	loop   0x41565f
  4156b6:	loope  0x4156c4
  4156b8:	out    dx,al
  4156b9:	mov    al,ds:0xc25db2d4
  4156be:	out    dx,eax
  4156bf:	adc    ebp,DWORD PTR [ebx]
  4156c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156c2:	in     eax,0x87
  4156c4:	test   DWORD PTR [edi],edi
  4156c6:	divps  xmm7,xmm7
  4156c9:	add    ch,BYTE PTR [edi+0x4fe8700d]
  4156cf:	mov    esp,0xa359d6f9
  4156d4:	mov    esi,0x98c2ac3f
  4156d9:	gs sahf 
  4156db:	jnp    0x41568c
  4156dd:	push   ss
  4156de:	nop
  4156df:	aas    
  4156e0:	inc    ebp
  4156e1:	jo     0x415723
  4156e3:	dec    ebx
  4156e4:	add    al,0xde
  4156e6:	sub    eax,0x75f37f71
  4156eb:	repnz mov dl,0xa4
  4156ee:	sbb    DWORD PTR es:[eax],ecx
  4156f1:	outs   dx,DWORD PTR ds:[esi]
  4156f2:	jl     0x4156b0
  4156f4:	push   es
  4156f5:	adc    eax,0xf9cb7523
  4156fa:	and    al,0x35
  4156fc:	inc    esp
  4156fd:	push   0xa8d5085
  415702:	hlt    
  415703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415704:	add    al,0xf9
  415706:	xchg   edi,eax
  415707:	jbe    0x415737
  415709:	std    
  41570a:	push   es
  41570b:	es pop edx
  41570d:	mov    dh,bh
  41570f:	gs dec esp
  415711:	pop    edx
  415712:	pop    esp
  415713:	push   0xd5e5c3a1
  415718:	rol    DWORD PTR [eax-0x70d71985],cl
  41571e:	icebp  
  41571f:	pop    ds
  415720:	mov    dl,0xb2
  415722:	icebp  
  415723:	cld    
  415724:	icebp  
  415725:	lea    edi,[edi+0x41]
  415728:	or     DWORD PTR [ebp-0x58925692],0xbe86fa9e
  415732:	push   ebx
  415733:	sahf   
  415734:	cld    
  415735:	(bad)  
  415736:	in     eax,0x29
  415738:	jp     0x41572f
  41573a:	mov    esi,0x3c04fdae
  41573f:	push   ebp
  415740:	xchg   ecx,eax
  415741:	nop
  415742:	add    DWORD PTR [ebx],0xc33def50
  415748:	inc    ebp
  415749:	pop    edi
  41574a:	mov    ebp,0x658b414c
  41574f:	neg    esi
  415751:	push   ecx
  415752:	loop   0x4157d2
  415754:	mov    ecx,0x41a87d95
  415759:	dec    edx
  41575a:	xchg   ebx,eax
  41575b:	in     eax,0x79
  41575d:	mov    es,WORD PTR [ecx+ebp*2+0x29c65a76]
  415764:	test   al,0x48
  415766:	cld    
  415767:	xor    al,0x4d
  415769:	inc    ecx
  41576a:	sub    BYTE PTR [ebx-0x37],0xbb
  41576e:	dec    eax
  41576f:	mov    BYTE PTR [eax],cl
  415771:	iret   
  415772:	stc    
  415773:	repnz mov al,0x30
  415776:	pushf  
  415777:	pop    eax
  415778:	push   ds
  415779:	mov    al,0xfc
  41577b:	push   esp
  41577c:	mov    WORD PTR [ebx-0x13608aea],es
  415782:	add    BYTE PTR [edx+0x71],cl
  415785:	mov    ds:0x46d6799c,al
  41578a:	xor    al,0x22
  41578c:	in     al,dx
  41578d:	add    eax,0x512bbaeb
  415792:	aaa    
  415793:	xor    eax,0xc121ae95
  415798:	test   DWORD PTR [ebp+0xb226ce5],edi
  41579e:	pop    ds
  41579f:	fisttp QWORD PTR [ebp-0x12]
  4157a2:	clc    
  4157a3:	sub    esp,DWORD PTR [eax+0x602f91ae]
  4157a9:	mov    ebx,0x1b8d2153
  4157ae:	sahf   
  4157af:	push   ds
  4157b0:	jne    0x4157b7
  4157b2:	add    al,0x73
  4157b4:	mov    bl,0x32
  4157b6:	push   ebp
  4157b7:	and    esp,DWORD PTR [ecx-0x77]
  4157ba:	fwait
  4157bb:	jnp    0x415813
  4157bd:	fldcw  WORD PTR [eax+0x68]
  4157c0:	in     eax,dx
  4157c1:	jo     0x4157c5
  4157c3:	dec    ebx
  4157c4:	rol    BYTE PTR [esi+0x77],0x98
  4157c8:	inc    ecx
  4157c9:	data16 loop 0x415798
  4157cc:	out    dx,al
  4157cd:	mov    edx,0x17c668f5
  4157d2:	or     cl,dl
  4157d4:	mov    ch,0x4a
  4157d6:	(bad)  
  4157d7:	cmc    
  4157d8:	jae    0x4157d5
  4157da:	das    
  4157db:	cmp    edx,0x87d465e
  4157e1:	call   0xcfe38633
  4157e6:	iret   
  4157e7:	cld    
  4157e8:	mov    esi,DWORD PTR [ecx]
  4157ea:	jge    0x415845
  4157ec:	push   esi
  4157ed:	rcr    ah,0x34
  4157f0:	dec    ebx
  4157f1:	and    eax,0x932e758e
  4157f6:	adc    al,0x8
  4157f9:	dec    ecx
  4157fa:	repnz push eax
  4157fc:	nop
  4157fd:	adc    BYTE PTR [edx],ch
  4157ff:	adc    eax,DWORD PTR [esi]
  415801:	mov    al,0xc9
  415804:	push   ss
  415805:	fbstp  TBYTE PTR [ebp-0x58]
  415808:	xor    dl,BYTE PTR [ecx-0x20]
  41580b:	cli    
  41580c:	push   ecx
  41580d:	jns    0x415814
  41580f:	aad    0x67
  415811:	das    
  415812:	adc    BYTE PTR [edi+0x415339ff],ch
  415818:	sbb    eax,0x5780740e
  41581d:	(bad)
  415821:	sar    BYTE PTR [edi+0x3a],1
  415824:	stos   DWORD PTR es:[edi],eax
  415825:	lock adc DWORD PTR [esi+0x57d57399],ebx
  41582c:	or     ah,BYTE PTR [ebp+0x4e]
  41582f:	mov    ebp,0x9b5c7a85
  415834:	(bad)  
  415835:	out    0xb9,eax
  415837:	push   0xffffff8c
  415839:	arpl   WORD PTR [ecx+edx*4-0x28],si
  41583d:	inc    ebx
  41583e:	jp     0x4158a3
  415840:	jnp    0x415818
  415842:	jl     0x4157f5
  415844:	push   ecx
  415845:	mov    edi,0xaec7d574
  41584a:	sti    
  41584b:	mov    bh,0xe4
  41584d:	mov    eax,0x835f435e
  415852:	add    BYTE PTR [edi+eiz*2+0x4e979581],cl
  415859:	add    dl,BYTE PTR [esi-0x4d]
  41585c:	inc    edx
  41585d:	cmp    DWORD PTR ds:0x5492bde,0xfffffff7
  415864:	not    BYTE PTR [ebx+0x6f]
  415867:	sar    DWORD PTR [ebp-0x3593e85d],0xa9
  41586e:	shl    BYTE PTR [ecx+ecx*8],1
  415871:	clc    
  415872:	inc    edx
  415873:	or     ebp,edi
  415875:	in     eax,dx
  415876:	icebp  
  415877:	inc    esp
  415878:	cmp    BYTE PTR [edx+0x4c],ah
  41587b:	aaa    
  41587c:	push   ebx
  41587d:	cmp    dh,BYTE PTR [edx]
  41587f:	jbe    0x415848
  415881:	mov    al,ds:0x60c59d4a
  415886:	add    eax,0x508b4695
  41588b:	(bad)  
  41588c:	or     BYTE PTR [edi-0x4c],dl
  41588f:	mov    al,0x7d
  415891:	adc    dl,BYTE PTR [esi]
  415893:	sub    BYTE PTR [esi+0x3],bl
  415896:	dec    ebp
  415897:	mov    edi,0xf8772f7b
  41589c:	jge    0x415841
  41589e:	ins    BYTE PTR es:[edi],dx
  41589f:	add    al,0xe7
  4158a1:	out    dx,eax
  4158a2:	jmp    0x1745605f
  4158a7:	push   ds
  4158a8:	shl    BYTE PTR [ebx+0x4f],1
  4158ab:	xor    edx,0x2ae47423
  4158b1:	and    bh,dl
  4158b3:	xor    ch,BYTE PTR [eax+eiz*4-0x29]
  4158b7:	and    bh,BYTE PTR [eax+0x7214598e]
  4158bd:	jae    0x41592f
  4158bf:	add    eax,0x60a600e1
  4158c4:	js     0x415933
  4158c6:	mov    edx,0xf39f1073
  4158cb:	mov    eax,ds:0xef97299d
  4158d0:	mov    ds:0xe17491b7,al
  4158d5:	mov    ss,WORD PTR [esi-0x7c]
  4158d8:	fist   DWORD PTR [ebx]
  4158da:	sbb    ah,BYTE PTR [edx+0x18427b03]
  4158e0:	es jmp 0x415902
  4158e3:	xchg   DWORD PTR ss:[ebx-0x75],esp
  4158e7:	push   0xffffffd5
  4158e9:	shl    cl,1
  4158eb:	hlt    
  4158ec:	dec    ebx
  4158ed:	mov    bl,0x1f
  4158ef:	mov    bh,0x7e
  4158f1:	jg     0x41591f
  4158f3:	rcr    BYTE PTR [ebx-0x5],cl
  4158f6:	test   al,0xc7
  4158f8:	test   BYTE PTR [eax+ebx*2+0xf],al
  4158fc:	inc    edi
  4158fd:	enter  0x6641,0x8c
  415901:	out    0xb9,al
  415903:	ins    DWORD PTR es:[edi],dx
  415904:	in     eax,dx
  415905:	ror    DWORD PTR [edx-0x15393993],1
  41590b:	mov    bh,0xb
  41590d:	in     eax,dx
  41590e:	lods   eax,DWORD PTR ds:[esi]
  41590f:	push   esp
  415910:	push   cs
  415911:	push   0x4d
  415913:	inc    edx
  415914:	shl    BYTE PTR [edi+eiz*1-0x748774a3],1
  41591b:	loopne 0x415904
  41591d:	(bad)  
  41591e:	and    al,0x1d
  415920:	(bad)  
  415921:	sbb    edi,DWORD PTR [eax+0x5ae60237]
  415927:	sbb    DWORD PTR [edi],ebx
  415929:	pop    eax
  41592a:	mov    esp,0x3e8ebe14
  41592f:	jmp    0xa100:0xf31c3595
  415936:	jge    0x415928
  415938:	pusha  
  415939:	dec    esi
  41593a:	dec    esi
  41593b:	loope  0x415988
  41593d:	test   eax,0xd79f337f
  415942:	mov    bl,0x1c
  415944:	xlat   BYTE PTR ds:[ebx]
  415945:	xchg   esi,eax
  415946:	dec    ecx
  415947:	das    
  415948:	mov    bl,dh
  41594a:	jmp    0x415999
  41594c:	loopne 0x4158f4
  41594e:	test   edi,0x9ca6112d
  415954:	lahf   
  415955:	aaa    
  415956:	lds    ebp,FWORD PTR [edi-0x439cfca4]
  41595c:	push   ds
  41595d:	pop    ebx
  41595e:	push   0x1c
  415960:	les    esp,FWORD PTR [eax]
  415962:	call   0x4ede:0xf0ab651
  415969:	ins    DWORD PTR es:[edi],dx
  41596a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41596b:	gs ins BYTE PTR es:[edi],dx
  41596d:	xor    dh,al
  41596f:	and    ebx,ecx
  415971:	inc    edx
  415972:	add    cl,dh
  415974:	loop   0x415965
  415976:	add    edi,DWORD PTR [esi+0x74584f8f]
  41597c:	mov    bl,0xaa
  41597e:	cli    
  41597f:	fld    QWORD PTR [edx+0x59]
  415982:	and    ebx,DWORD PTR [esi]
  415984:	and    eax,0x1a8a6bfb
  415989:	jne    0x41591c
  41598b:	in     eax,dx
  41598c:	dec    esi
  41598d:	add    cl,BYTE PTR [ebx+0x7717719c]
  415993:	ja     0x415915
  415995:	mov    WORD PTR [ebp+0x50],?
  415998:	cmp    dl,al
  41599a:	push   es
  41599b:	lods   al,BYTE PTR ds:[esi]
  41599c:	or     eax,0xb06d5c76
  4159a1:	mov    dl,0x6f
  4159a3:	mov    ch,0x8d
  4159a5:	pop    esi
  4159a6:	pop    ss
  4159a7:	into   
  4159a8:	inc    esi
  4159a9:	loope  0x415945
  4159ab:	bound  eax,QWORD PTR [ebx+eax*8+0x16725ff5]
  4159b2:	pop    ebx
  4159b3:	xchg   edi,eax
  4159b4:	repnz pusha 
  4159b6:	sti    
  4159b7:	inc    esp
  4159b8:	leave  
  4159b9:	dec    edx
  4159ba:	lahf   
  4159bb:	jne    0x41594f
  4159bd:	pushf  
  4159be:	mov    dh,0x3f
  4159c0:	jnp    0x415a3c
  4159c2:	sbb    al,al
  4159c4:	sbb    BYTE PTR [ecx-0x6bc75041],dh
  4159ca:	push   ebx
  4159cb:	shl    DWORD PTR [ebp-0x11],1
  4159ce:	jb     0x4159cc
  4159d0:	sub    ecx,DWORD PTR [eax]
  4159d2:	into   
  4159d3:	(bad)  
  4159d4:	xor    al,0x8b
  4159d6:	pushf  
  4159d7:	jb     0x415a26
  4159d9:	adc    ah,cl
  4159db:	out    dx,eax
  4159dc:	cmp    eax,0xe68341f
  4159e1:	dec    ebx
  4159e2:	pop    ds
  4159e3:	jae    0x415a3d
  4159e5:	and    cl,BYTE PTR [ebx-0x3d8bac3b]
  4159eb:	std    
  4159ec:	mov    ds:0xd320880e,al
  4159f1:	mov    eax,ebp
  4159f3:	lods   eax,DWORD PTR ss:[si]
  4159f6:	mov    dl,0xf
  4159f8:	dec    BYTE PTR [edi]
  4159fa:	lea    ebp,[eax]
  4159fc:	push   ebx
  4159fd:	xor    bl,BYTE PTR [ebx+0x65]
  415a00:	into   
  415a01:	jmp    0x4159ae
  415a03:	and    BYTE PTR [eax],0x21
  415a06:	sub    dh,BYTE PTR [edi-0x65]
  415a09:	mov    eax,ds:0xaaf53a23
  415a0e:	mov    eax,0x9529255c
  415a13:	mul    DWORD PTR [edx-0x7a35a633]
  415a19:	scas   al,BYTE PTR es:[edi]
  415a1a:	mov    BYTE PTR [edi-0x33da56ee],ah
  415a20:	test   al,0x3f
  415a22:	cmp    al,0x5d
  415a24:	hlt    
  415a25:	push   ebx
  415a26:	hlt    
  415a27:	dec    ebx
  415a28:	inc    eax
  415a29:	ds aam 0x1d
  415a2c:	push   esp
  415a2d:	push   ss
  415a2e:	nop
  415a2f:	cli    
  415a30:	data16 cld 
  415a32:	ja     0x415a58
  415a34:	xchg   esp,eax
  415a35:	loope  0x415a71
  415a37:	lods   al,BYTE PTR ds:[esi]
  415a38:	inc    edx
  415a39:	out    0xa1,al
  415a3b:	pop    ds
  415a3c:	imul   esp,ebx,0xffffff9f
  415a3f:	scas   al,BYTE PTR es:[edi]
  415a40:	sbb    al,0xa8
  415a42:	mov    dh,0x20
  415a44:	pop    ecx
  415a45:	mov    DWORD PTR [eax],edx
  415a47:	jge    0x415a87
  415a49:	mov    ecx,0xc607c978
  415a4e:	hlt    
  415a4f:	lea    esp,[ecx]
  415a51:	lea    edx,ds:0xfbcc2fde
  415a57:	jle    0x415aae
  415a59:	adc    cl,BYTE PTR [ebx]
  415a5b:	stc    
  415a5c:	out    dx,eax
  415a5d:	sar    BYTE PTR [ebx+0x79599072],1
  415a63:	outs   dx,DWORD PTR ds:[esi]
  415a64:	mov    ds:0x7c3af3ea,eax
  415a69:	dec    esp
  415a6a:	aas    
  415a6b:	fnsave [ebx+0x12]
  415a6e:	xchg   esp,eax
  415a6f:	(bad)  [edx]
  415a71:	sub    ecx,DWORD PTR [edx+ecx*4-0x52]
  415a75:	mov    ch,0x46
  415a77:	pop    edi
  415a78:	sbb    eax,0xf16d34b3
  415a7d:	ret    
  415a7e:	xchg   ebx,eax
  415a7f:	push   edi
  415a80:	sub    esp,ebp
  415a82:	push   0x906069cf
  415a87:	fnstenv [eax-0x4a69eb3e]
  415a8d:	lea    eax,[ebx+0x0]
  415a90:	jne    0x415a87
  415a92:	ja     0x415af8
  415a94:	and    al,0xca
  415a96:	xchg   DWORD PTR gs:[eax+0x54eadeb0],esi
  415a9d:	scas   al,BYTE PTR es:[edi]
  415a9e:	dec    ecx
  415a9f:	fdivr  DWORD PTR [esi+0x698c2670]
  415aa5:	mov    ds:0x6677f07f,al
  415aaa:	js     0x415b0b
  415aac:	addr16 pusha 
  415aae:	out    dx,eax
  415aaf:	and    al,0xc9
  415ab1:	or     bl,BYTE PTR [ebx-0x4a876cbc]
  415ab7:	in     eax,0x48
  415ab9:	cmp    al,0x41
  415abb:	iret   
  415abc:	push   es
  415abd:	fs and eax,0x34a654b0
  415ac3:	test   al,0x39
  415ac5:	sbb    eax,0xac0c8d43
  415aca:	inc    BYTE PTR [ebp-0x7b]
  415acd:	shl    BYTE PTR [esi],1
  415acf:	mov    esp,0x28c8e0a9
  415ad4:	xor    DWORD PTR [ebp+0x5190c185],0x40
  415adb:	imul   esi,DWORD PTR [edx+ecx*4],0x10d4d1f8
  415ae2:	cmc    
  415ae3:	(bad)  
  415ae4:	retf   0xbd6e
  415ae7:	jno    0x415b34
  415ae9:	and    al,0x5c
  415aeb:	hlt    
  415aec:	and    BYTE PTR [eax-0x31],dl
  415aef:	or     esp,DWORD PTR [ebx+0x35ec630e]
  415af5:	inc    ebp
  415af6:	inc    eax
  415af7:	pushf  
  415af8:	sbb    ch,BYTE PTR [ecx]
  415afa:	in     al,0x7d
  415afc:	jbe    0x415af0
  415afe:	sbb    ah,BYTE PTR [ebx]
  415b00:	not    BYTE PTR [ebp-0x3f]
  415b03:	imul   edx,eax,0x8b8d5f39
  415b09:	xchg   ecx,eax
  415b0a:	std    
  415b0b:	dec    edi
  415b0c:	xchg   esi,eax
  415b0d:	in     al,0x19
  415b0f:	pop    eax
  415b10:	dec    ecx
  415b11:	pusha  
  415b12:	stc    
  415b13:	popa   
  415b14:	stos   BYTE PTR es:[edi],al
  415b15:	ret    
  415b16:	pusha  
  415b17:	add    BYTE PTR [esi],al
  415b19:	dec    ebp
  415b1a:	xchg   esi,eax
  415b1b:	xor    al,0xc8
  415b1d:	dec    ebx
  415b1e:	mov    ah,0x6d
  415b20:	lock adc DWORD PTR [bp+di-0x54],esp
  415b25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b26:	push   ebx
  415b27:	pop    ebx
  415b28:	(bad)  
  415b29:	and    BYTE PTR [eax+0x6d],bl
  415b2c:	les    ebp,FWORD PTR [eax]
  415b2e:	ja     0x415b57
  415b30:	pop    ebx
  415b31:	pop    esp
  415b32:	xchg   ebx,eax
  415b33:	xor    DWORD PTR [ecx],0x71
  415b36:	shl    BYTE PTR [esp+edi*1-0x4f],0x76
  415b3b:	jg     0x415ba7
  415b3d:	push   0x1fd124df
  415b42:	int    0x25
  415b44:	xchg   BYTE PTR [edi],cl
  415b46:	outs   dx,DWORD PTR ds:[esi]
  415b47:	xchg   edi,eax
  415b48:	add    DWORD PTR [ecx+0x3a37505d],0xdc327177
  415b52:	jo     0x415af3
  415b54:	jmp    0x2ceb:0x21384963
  415b5b:	mov    esi,0xea4257c
  415b60:	outs   dx,BYTE PTR ds:[esi]
  415b61:	jg     0x415afc
  415b63:	shl    eax,cl
  415b65:	repz (bad) 
  415b67:	cmp    eax,0xa87c33cb
  415b6c:	mov    WORD PTR [eax],es
  415b6e:	shl    BYTE PTR [edx+0x4f],1
  415b71:	lea    ecx,[eax-0x55b5d9be]
  415b77:	cmp    bh,BYTE PTR [ecx+0x2070c632]
  415b7d:	and    al,0xe5
  415b7f:	pop    ss
  415b80:	or     al,0x6a
  415b82:	adc    ebp,edx
  415b84:	xor    al,0x9c
  415b86:	lods   al,BYTE PTR ds:[esi]
  415b87:	fnstenv [ebp-0x58173d5]
  415b8d:	mov    ebp,DWORD PTR [ebx-0x1c3fa6e]
  415b93:	and    eax,0x26221f8c
  415b98:	lods   eax,DWORD PTR ds:[esi]
  415b99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b9a:	mov    dh,0xc
  415b9c:	sbb    eax,0xdad026d7
  415ba1:	retf   
  415ba2:	mov    esp,0xef31d916
  415ba7:	xor    edx,0x3ad222c5
  415bad:	pop    edi
  415bae:	xchg   ebp,eax
  415baf:	adc    eax,0xa96185a6
  415bb4:	in     eax,0xbd
  415bb6:	in     al,0x93
  415bb8:	jns    0x415b7e
  415bba:	ds std 
  415bbc:	popf   
  415bbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bbe:	jl     0x415b40
  415bc0:	pop    es
  415bc1:	push   ss
  415bc2:	adc    DWORD PTR ds:0x132ab269,edi
  415bc8:	je     0x415b6b
  415bca:	cdq    
  415bcb:	jg     0x415b5f
  415bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bce:	bound  esp,QWORD PTR [edi-0x3ca2e6ed]
  415bd4:	sub    bh,ch
  415bd6:	popf   
  415bd7:	idiv   BYTE PTR ss:[edi]
  415bda:	adc    ebp,edi
  415bdc:	imul   eax,ebp,0xffffff91
  415bdf:	call   0xef3501ff
  415be4:	leave  
  415be5:	psllw  mm4,mm2
  415be8:	sbb    dl,BYTE PTR [esi]
  415bea:	mov    edi,0x28856ada
  415bef:	mov    esp,0x9d62a609
  415bf4:	cmp    BYTE PTR [edx+0x65],ah
  415bf7:	test   ebx,ecx
  415bf9:	sar    ebp,1
  415bfb:	clc    
  415bfc:	cmc    
  415bfd:	xor    BYTE PTR [edi-0x17],al
  415c00:	sub    edi,DWORD PTR [eax]
  415c02:	ins    DWORD PTR es:[edi],dx
  415c03:	xchg   ebx,eax
  415c04:	iret   
  415c05:	xchg   ebp,eax
  415c06:	xchg   ebp,eax
  415c07:	xor    ah,BYTE PTR [ebp+0x2c]
  415c0a:	ror    DWORD PTR [edx+0x4ee14e53],cl
  415c10:	retf   0xc32
  415c13:	aas    
  415c14:	inc    ebp
  415c15:	sbb    BYTE PTR [edx+0x4350ee2f],bl
  415c1b:	inc    edi
  415c1c:	fild   QWORD PTR [eax+0x2f]
  415c1f:	mov    ah,0x8d
  415c21:	bnd jnp 0x415c62
  415c24:	or     eax,0x1572087e
  415c29:	ins    DWORD PTR es:[edi],dx
  415c2a:	popa   
  415c2b:	gs jg  0x415bd7
  415c2e:	bound  esp,QWORD PTR [ebp+0x69acac8d]
  415c34:	inc    esi
  415c35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c36:	push   0x86f6708b
  415c3b:	mov    BYTE PTR fs:[edx],ch
  415c3e:	imul   ebp,DWORD PTR [ecx-0x3b],0xffffffff
  415c42:	lods   al,BYTE PTR ds:[esi]
  415c43:	pop    edx
  415c44:	adc    bl,BYTE PTR [esi]
  415c46:	aas    
  415c47:	int3   
  415c48:	popa   
  415c49:	mov    ah,0x4e
  415c4b:	or     edx,DWORD PTR [eax-0x34a5de68]
  415c51:	or     cl,bl
  415c53:	hlt    
  415c54:	dec    ecx
  415c55:	pop    ebp
  415c56:	retf   
  415c57:	xor    dl,BYTE PTR [edx]
  415c59:	and    BYTE PTR [eax+0x21842c4],dl
  415c5f:	aaa    
  415c60:	sbb    ebx,esp
  415c62:	mov    bh,0x61
  415c64:	jno    0x415c2f
  415c66:	sbb    al,0x29
  415c68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c69:	pop    ebx
  415c6a:	sub    al,0xb6
  415c6c:	cmp    BYTE PTR [ebx+0x5fa39cf8],0x7
  415c73:	ret    
  415c74:	cmp    al,0xf6
  415c76:	jne    0x415c25
  415c78:	sub    edi,DWORD PTR [ecx*2-0xb4a3aa1]
  415c7f:	push   ss
  415c80:	xor    ecx,eax
  415c82:	sbb    DWORD PTR [edi-0x5e],edx
  415c85:	out    0x6a,al
  415c87:	ins    DWORD PTR es:[edi],dx
  415c88:	pop    es
  415c89:	stc    
  415c8a:	pusha  
  415c8b:	inc    ebx
  415c8c:	sub    cl,BYTE PTR [edi-0x6167cf8]
  415c92:	(bad)  
  415c93:	(bad)  
  415c94:	sti    
  415c95:	and    eax,esp
  415c97:	ss lock loope 0x415cc8
  415c9b:	fisub  DWORD PTR [ebx-0x3d]
  415c9e:	xchg   ecx,eax
  415c9f:	mov    bh,0x51
  415ca1:	mov    ah,0xa
  415ca3:	pusha  
  415ca4:	pop    ebp
  415ca5:	in     al,0x28
  415ca7:	dec    edx
  415ca8:	mov    ebx,0xa0ee0c55
  415cad:	outs   dx,DWORD PTR ds:[esi]
  415cae:	jge    0x415c9c
  415cb0:	mov    ebx,esp
  415cb2:	sar    DWORD PTR [ebx+0x14],cl
  415cb5:	sub    al,ah
  415cb7:	pusha  
  415cb8:	dec    edx
  415cb9:	(bad)  
  415cba:	jecxz  0x415ca5
  415cbc:	sbb    DWORD PTR [esi+edi*2],edx
  415cbf:	mov    eax,ds:0x94e2dca4
  415cc4:	icebp  
  415cc5:	pop    esp
  415cc6:	pop    edx
  415cc7:	sbb    al,0xd
  415cc9:	mov    ebp,0xb7427d6a
  415cce:	lods   al,BYTE PTR ds:[esi]
  415ccf:	leave  
  415cd0:	and    al,0x88
  415cd2:	jmp    0x415cb8
  415cd4:	aam    0xfc
  415cd6:	fs jmp 0x81f9fef2
  415cdc:	cli    
  415cdd:	jb     0x415d10
  415cdf:	xchg   bh,dh
  415ce1:	push   0xfffffffa
  415ce3:	push   edi
  415ce4:	mov    ah,0x56
  415ce6:	mov    eax,0x932ae1cc
  415ceb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cec:	pop    eax
  415ced:	adc    DWORD PTR [ebx-0x40],edi
  415cf0:	sub    eax,0xaee1f31e
  415cf5:	call   0x7ca6d432
  415cfa:	dec    esi
  415cfb:	and    al,0xad
  415cfd:	mov    eax,ds:0xc825e3c1
  415d02:	nop
  415d03:	sbb    ecx,DWORD PTR [eax]
  415d05:	dec    ebp
  415d06:	sub    eax,0x88532cfb
  415d0b:	mov    ds:0xc305d7ef,al
  415d10:	cmp    DWORD PTR [ebx+edx*2+0x71],edi
  415d14:	jmp    0x415d05
  415d16:	pop    ecx
  415d17:	inc    ecx
  415d18:	stos   BYTE PTR es:[edi],al
  415d19:	sbb    DWORD PTR [eax+0x17890c87],edi
  415d1f:	fbld   TBYTE PTR [eax]
  415d21:	cdq    
  415d22:	shr    BYTE PTR [ebx+eax*8+0x23373115],0xfd
  415d2a:	sbb    eax,0x14c76b73
  415d2f:	adc    DWORD PTR [eax-0x34],ecx
  415d32:	mov    ds:0x1ee17e61,al
  415d37:	aam    0x6d
  415d39:	int    0x2a
  415d3b:	inc    esi
  415d3c:	add    DWORD PTR [eax+0x1c],edi
  415d3f:	mov    ch,0x58
  415d41:	and    DWORD PTR [esp+ecx*2],ebx
  415d44:	adc    cl,BYTE PTR [ebp-0x725af42e]
  415d4a:	dec    ebx
  415d4b:	ret    0xaa20
  415d4e:	jl     0x415cdd
  415d50:	xor    bh,ah
  415d52:	inc    edx
  415d53:	cli    
  415d54:	int    0x6a
  415d56:	retf   0x6df2
  415d59:	jb     0x415d06
  415d5b:	(bad)  
  415d5c:	sub    al,0xd6
  415d5e:	mul    DWORD PTR ds:[ebp-0x5de2a588]
  415d65:	repz mov edi,0x62a364a1
  415d6b:	out    dx,al
  415d6c:	pushf  
  415d6d:	mov    WORD PTR [ebx+edx*2-0x48c8f82c],ds
  415d74:	jns    0x415db4
  415d76:	add    DWORD PTR [esi+0x2],0x12
  415d7a:	or     eax,0xdced4193
  415d7f:	or     ebx,DWORD PTR [edi+0x42]
  415d82:	sbb    DWORD PTR [eax],0xffffff86
  415d85:	or     DWORD PTR [ebp+0x28cbfa35],eax
  415d8b:	inc    ebp
  415d8c:	sbb    al,0x95
  415d8e:	xor    BYTE PTR [eax+0x6f047b63],bl
  415d94:	stc    
  415d95:	inc    ecx
  415d96:	add    BYTE PTR [esi+0x6d],dh
  415d99:	cs mov al,0xa3
  415d9c:	pop    esp
  415d9d:	or     eax,0x9778a1ee
  415da2:	mov    edx,0x97e2162f
  415da7:	lock lds ebx,FWORD PTR [ebx]
  415daa:	jecxz  0x415def
  415dac:	dec    ecx
  415dad:	sahf   
  415dae:	test   dh,ah
  415db0:	add    al,0x3c
  415db2:	arpl   cx,bp
  415db4:	adc    al,0xcb
  415db6:	mov    edi,0xd7dcda72
  415dbb:	repz rcr DWORD PTR [ebx-0x27],0xed
  415dc0:	mov    dh,0xf1
  415dc2:	retf   
  415dc3:	pop    edx
  415dc4:	(bad)  
  415dc5:	mov    DWORD PTR [edi+0x2c3dcf09],esp
  415dcb:	js     0x415e2a
  415dcd:	nop
  415dce:	imul   ebx,ebx,0x21
  415dd1:	cmp    bl,BYTE PTR [edi]
  415dd3:	aaa    
  415dd4:	cdq    
  415dd5:	dec    ebx
  415dd6:	pop    edi
  415dd7:	xor    eax,0x3fb48804
  415ddc:	adc    eax,0x13323871
  415de1:	and    BYTE PTR ds:0x4e014b49,cl
  415de7:	jle    0x415dde
  415de9:	or     edx,edi
  415deb:	cld    
  415dec:	inc    edx
  415ded:	push   edx
  415dee:	das    
  415def:	dec    DWORD PTR [edx+0x4b]
  415df2:	xchg   DWORD PTR [ebp+ebx*4+0x58d6921a],edi
  415df9:	and    DWORD PTR [eax],esp
  415dfb:	cwde   
  415dfc:	out    dx,al
  415dfd:	or     BYTE PTR [edi],ah
  415dff:	pushf  
  415e00:	jb     0x415d92
  415e02:	xor    ebx,DWORD PTR [ebx+0x45]
  415e05:	and    al,0x7a
  415e07:	jp     0x415e68
  415e09:	ret    
  415e0a:	sbb    dh,dl
  415e0c:	xchg   DWORD PTR [ecx-0x30c1bde6],esi
  415e12:	or     DWORD PTR ds:0x92777f3,edx
  415e18:	outs   dx,BYTE PTR ds:[esi]
  415e19:	xor    dl,bl
  415e1b:	lahf   
  415e1c:	push   es
  415e1d:	imul   esi,DWORD PTR [ebp+0x6dc3d2],0xffffffaf
  415e24:	jecxz  0x415db9
  415e26:	mov    ah,0xa9
  415e28:	pop    edi
  415e29:	data16 lods al,BYTE PTR ds:[esi]
  415e2b:	push   esp
  415e2c:	sbb    edi,DWORD PTR [eax+ebx*4+0x70]
  415e30:	inc    esi
  415e31:	and    al,0x4c
  415e33:	sbb    BYTE PTR [eax],dh
  415e35:	lods   eax,DWORD PTR ds:[esi]
  415e36:	adc    eax,0xfb17c5e
  415e3b:	xor    BYTE PTR [eax-0x5da27575],dl
  415e41:	mov    al,ds:0xd732a367
  415e46:	out    dx,eax
  415e47:	push   ebx
  415e48:	jae    0x415de0
  415e4a:	popa   
  415e4b:	sar    DWORD PTR [esi],0x2d
  415e4e:	ds repnz pop ebx
  415e51:	inc    edx
  415e52:	rol    DWORD PTR [eax],cl
  415e54:	cli    
  415e55:	jnp    0x415e44
  415e57:	jg     0x415e84
  415e59:	mov    ebx,0xbb70f877
  415e5e:	aaa    
  415e5f:	into   
  415e60:	rcr    BYTE PTR [ebx+eax*1],cl
  415e63:	push   esi
  415e64:	and    BYTE PTR [eax-0xf8a04f0],cl
  415e6a:	ds dec eax
  415e6c:	sbb    al,0xc7
  415e6e:	xor    BYTE PTR [edi+0x76],ah
  415e71:	add    DWORD PTR [edi-0x11],eax
  415e74:	adc    DWORD PTR [ecx-0xb],ecx
  415e77:	dec    esp
  415e78:	add    al,0x73
  415e7a:	dec    eax
  415e7b:	loopne 0x415ecf
  415e7d:	add    BYTE PTR [edx-0x58],bl
  415e80:	inc    esi
  415e81:	sahf   
  415e82:	nop
  415e83:	mov    ds:0xe48fdbf,al
  415e88:	sbb    al,dl
  415e8a:	arpl   WORD PTR [ebp+edi*8-0x70],si
  415e8e:	push   ebp
  415e8f:	test   BYTE PTR [ecx+0x73],al
  415e92:	sbb    BYTE PTR [edx],0x51
  415e95:	test   DWORD PTR [ecx],ebp
  415e97:	ds arpl di,dx
  415e9a:	es call 0x95897b56
  415ea0:	std    
  415ea1:	jnp    0x415e40
  415ea3:	pushf  
  415ea4:	pop    ds
  415ea5:	mov    dl,0x3e
  415ea7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ea8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ea9:	mov    bl,0xf
  415eab:	fs sbb al,0x55
  415eae:	mov    DWORD PTR [edi-0x3f],ebx
  415eb1:	add    DWORD PTR ss:[edx-0x3636f7c6],esi
  415eb8:	iret   
  415eb9:	lock jne 0x415e8c
  415ebc:	leave  
  415ebd:	or     bh,BYTE PTR [esi+0x73]
  415ec0:	rol    DWORD PTR [edx+eiz*2],0xeb
  415ec4:	fist   DWORD PTR [ebx]
  415ec6:	lds    esp,FWORD PTR [ebx-0x6c]
  415ec9:	ss loopne 0x415ed3
  415ecc:	cli    
  415ecd:	mov    ebx,DWORD PTR [bx+di-0x50]
  415ed1:	cli    
  415ed2:	pop    ebx
  415ed3:	in     eax,dx
  415ed4:	outs   dx,DWORD PTR ds:[esi]
  415ed5:	dec    edi
  415ed6:	pop    ebp
  415ed7:	stos   DWORD PTR es:[edi],eax
  415ed8:	cs jns 0x415ea4
  415edb:	cmp    DWORD PTR [eax],esi
  415edd:	das    
  415ede:	xchg   ah,dh
  415ee0:	mov    bl,0xd6
  415ee2:	and    dl,bl
  415ee4:	ins    BYTE PTR es:[edi],dx
  415ee5:	cli    
  415ee6:	mov    ch,0x4e
  415ee8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ee9:	sbb    al,BYTE PTR [eax-0x1a]
  415eec:	mov    esp,0xa8e12a2d
  415ef1:	outs   dx,BYTE PTR ds:[esi]
  415ef2:	push   0x5a
  415ef4:	scas   eax,DWORD PTR es:[edi]
  415ef5:	(bad)  
  415ef6:	jl     0x415f41
  415ef8:	mov    ch,BYTE PTR [edi-0x8]
  415efb:	icebp  
  415efc:	add    BYTE PTR [eax+0x81fe2d5],0xc4
  415f03:	cwde   
  415f04:	icebp  
  415f05:	rol    BYTE PTR [eax-0x6a],cl
  415f08:	pusha  
  415f09:	shl    BYTE PTR [edx-0x54a946b4],cl
  415f0f:	mov    cl,0xe9
  415f11:	lahf   
  415f12:	jmp    0x415ea6
  415f14:	mov    ebp,0x31501372
  415f19:	not    DWORD PTR [edx]
  415f1b:	out    0xfc,eax
  415f1d:	jmp    0x69b2:0x5e23fe1f
  415f24:	xchg   ebp,eax
  415f25:	call   0x81791f54
  415f2a:	je     0x415ead
  415f2c:	fisubr WORD PTR [ebp-0x7a]
  415f2f:	cmp    eax,0x439d6049
  415f34:	addr16 pop es
  415f36:	mov    edx,DWORD PTR [ebp-0x1e70fe4c]
  415f3c:	jb     0x415fa7
  415f3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f3f:	mov    esi,0xa0d3b1a4
  415f44:	sub    ecx,DWORD PTR [ebp-0x44]
  415f47:	fsubr  DWORD PTR [ebx-0x5e]
  415f4a:	and    BYTE PTR [edi],dl
  415f4c:	mov    bh,0x6d
  415f4e:	jecxz  0x415f9e
  415f50:	out    0x96,eax
  415f52:	clc    
  415f53:	aad    0xba
  415f55:	adc    al,0xbb
  415f57:	adc    al,0x8d
  415f59:	inc    ebp
  415f5a:	bound  esp,QWORD PTR [eax-0x11]
  415f5d:	mov    bh,0x71
  415f5f:	outs   dx,DWORD PTR ds:[esi]
  415f60:	lds    ebp,FWORD PTR [eax+0x1076777a]
  415f66:	inc    BYTE PTR [ebp-0x54]
  415f69:	jbe    0x415f5d
  415f6b:	inc    esp
  415f6c:	(bad)  
  415f6d:	sbb    BYTE PTR [ecx],al
  415f6f:	adc    ecx,esi
  415f71:	mov    BYTE PTR [edi],ch
  415f73:	scas   al,BYTE PTR es:[edi]
  415f74:	ins    BYTE PTR es:[edi],dx
  415f75:	or     eax,0x33ccfe40
  415f7a:	xchg   edx,eax
  415f7b:	pop    esp
  415f7c:	mov    ah,BYTE PTR [edx-0x56]
  415f7f:	retf   
  415f80:	arpl   si,sp
  415f82:	push   eax
  415f83:	adc    bl,BYTE PTR [ebx]
  415f85:	xor    dl,BYTE PTR [esi+0xc1538cb]
  415f8b:	sub    eax,0x81b3e094
  415f90:	dec    ecx
  415f91:	jmp    0xda87:0x453ac2f
  415f98:	scas   eax,DWORD PTR es:[edi]
  415f99:	and    ch,bh
  415f9b:	or     DWORD PTR [ebx+ecx*4],ebp
  415f9e:	out    dx,eax
  415f9f:	or     BYTE PTR [esp+edi*1+0x59],bh
  415fa3:	ss fs jnp 0x415f41
  415fa7:	lahf   
  415fa8:	jle    0x415f76
  415faa:	pop    eax
  415fab:	push   edi
  415fac:	sahf   
  415fad:	pop    ecx
  415fae:	pop    ds
  415faf:	add    al,BYTE PTR [esi]
  415fb1:	lods   al,BYTE PTR ds:[esi]
  415fb2:	imul   ecx,DWORD PTR [esi+0x53783195],0x2cef3e6c
  415fbc:	int3   
  415fbd:	inc    esi
  415fbe:	or     BYTE PTR [ecx-0x48],dh
  415fc1:	lahf   
  415fc2:	mov    edx,0x7d48accb
  415fc7:	fimul  DWORD PTR [edx-0x34]
  415fca:	imul   eax,DWORD PTR [esi-0x23],0x16699d95
  415fd1:	loopne 0x415fb0
  415fd3:	test   al,0x75
  415fd5:	arpl   WORD PTR [edi-0x3423e301],dx
  415fdb:	cld    
  415fdc:	mov    al,BYTE PTR [ebp-0x72fb2458]
  415fe2:	mov    bl,0xcf
  415fe4:	cld    
  415fe5:	scas   eax,DWORD PTR es:[edi]
  415fe6:	sub    BYTE PTR [ebx+0x5cbe593b],al
  415fec:	pop    edi
  415fed:	xchg   esi,eax
  415fee:	or     ecx,esp
  415ff0:	adc    al,0x9b
  415ff2:	mov    edi,0xf134ec93
  415ff7:	out    dx,eax
  415ff8:	outs   dx,BYTE PTR ds:[esi]
  415ff9:	adc    eax,0x3bc7a380
  415ffe:	icebp  
  415fff:	push   edx
  416000:	cs retf 
  416002:	push   cs
  416003:	jmp    0x5521:0xbdbb66d8
  41600a:	cmp    DWORD PTR [edi+0x73],ebx
  41600d:	rol    DWORD PTR [edx+edi*8-0x20],cl
  416011:	adc    eax,0x53aebbf9
  416016:	repz inc DWORD PTR [edi-0x6]
  41601a:	sbb    al,0xde
  41601c:	dec    ebp
  41601d:	loop   0x416062
  41601f:	arpl   bx,si
  416021:	push   0x23bf586d
  416026:	bound  ebp,QWORD PTR [ecx+0x33]
  416029:	into   
  41602a:	xor    eax,0x833938ed
  41602f:	push   ebp
  416030:	rcl    BYTE PTR [ecx],0xc7
  416033:	int3   
  416034:	mov    ds:0x4b36b119,al
  416039:	repz retf 
  41603b:	inc    ecx
  41603c:	iret   
  41603d:	out    dx,eax
  41603e:	xor    al,0xc
  416040:	cmp    bl,BYTE PTR [eax+0x59]
  416043:	add    ebx,ecx
  416045:	push   edx
  416046:	sahf   
  416047:	push   0xffffffcd
  416049:	push   ss
  41604a:	sbb    bl,BYTE PTR [esi]
  41604c:	xor    ecx,DWORD PTR ds:0x54178316
  416052:	cmc    
  416053:	and    eax,ebx
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	les    edi,FWORD PTR [ecx+0x1c]
  416059:	sbb    eax,0x775f943f
  41605e:	sub    DWORD PTR [ecx],eax
  416060:	adc    dl,bh
  416062:	fwait
  416063:	dec    ecx
  416064:	jmp    0x37841765
  416069:	arpl   WORD PTR [ecx+0x5e4822f7],si
  41606f:	fnstsw WORD PTR [ebx+0x4c]
  416072:	sub    al,0x49
  416074:	or     ch,BYTE PTR [edi]
  416076:	aad    0x92
  416078:	push   ss
  416079:	int    0xdf
  41607b:	hlt    
  41607c:	mov    esi,0x981f4008
  416081:	inc    edx
  416082:	mov    dl,0xb
  416084:	push   eax
  416085:	mov    ds:0x2f860bbb,eax
  41608a:	in     eax,0xfa
  41608c:	xchg   DWORD PTR [edx+eax*4+0x1c],ebx
  416090:	outs   dx,BYTE PTR ds:[esi]
  416091:	cmp    DWORD PTR gs:[ebp-0x22],esi
  416095:	ss inc esp
  416097:	jmp    0x4160cd
  416099:	jmp    0x41602f
  41609b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41609c:	inc    ebx
  41609d:	jle    0x4160e4
  41609f:	mov    ah,0xfb
  4160a1:	inc    esp
  4160a2:	stos   BYTE PTR es:[edi],al
  4160a3:	add    BYTE PTR [ebp-0x264fd1f0],bh
  4160a9:	mov    dl,0x60
  4160ab:	xor    BYTE PTR [edx],cl
  4160ad:	ds addr16 or eax,0x219c101e
  4160b4:	es mov ebx,0x7ea571a3
  4160ba:	inc    edi
  4160bb:	mov    al,ds:0xef7a580a
  4160c0:	cld    
  4160c1:	outs   dx,BYTE PTR ds:[esi]
  4160c2:	(bad)  
  4160c3:	jmp    0x3e7e:0xb2bf99c1
  4160ca:	(bad)  
  4160cb:	aaa    
  4160cc:	(bad)  
  4160cd:	jmp    0x118d:0x90b505b9
  4160d4:	jno    0x4160f8
  4160d6:	ss pop ebp
  4160d8:	xor    al,0x38
  4160da:	inc    edi
  4160db:	clc    
  4160dc:	iret   
  4160dd:	jbe    0x4160fd
  4160df:	xchg   esp,eax
  4160e0:	rol    BYTE PTR fs:[eax+edx*8-0x5e],cl
  4160e5:	sar    DWORD PTR [edx],0xa7
  4160e8:	imul   bh
  4160ea:	rol    BYTE PTR [eax-0x35],0x33
  4160ee:	aas    
  4160ef:	jl     0x4160ca
  4160f1:	inc    ecx
  4160f2:	(bad)  
  4160f3:	in     eax,0x93
  4160f5:	push   edi
  4160f6:	scas   eax,DWORD PTR es:[edi]
  4160f7:	push   esp
  4160f8:	dec    esi
  4160f9:	pusha  
  4160fa:	lds    eax,FWORD PTR [ecx-0x5c2c87c0]
  416100:	les    esi,FWORD PTR [esi+0x765a02b7]
  416106:	inc    ebx
  416107:	jle    0x41608c
  416109:	push   edi
  41610a:	idiv   BYTE PTR [esi-0x7]
  41610d:	or     ah,BYTE PTR [edi-0x253f3003]
  416113:	dec    eax
  416114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416115:	ss lahf 
  416117:	into   
  416118:	mov    ds:0x8f8505bb,eax
  41611d:	push   edx
  41611e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41611f:	int    0xbf
  416121:	call   0x2179:0x30fdd4e0
  416128:	repnz push edx
  41612a:	clc    
  41612b:	bswap  ecx
  41612d:	push   eax
  41612e:	sub    BYTE PTR [edx+0x7034e0eb],cl
  416134:	aam    0x16
  416136:	jbe    0x41614a
  416138:	xor    DWORD PTR [ecx-0x45afb6c1],esp
  41613e:	push   0x75
  416140:	(bad)  
  416141:	popf   
  416142:	sbb    esi,DWORD PTR [ecx+0x27]
  416145:	nop
  416146:	adc    BYTE PTR [eax],0xae
  416149:	mov    ah,0x12
  41614b:	imul   edx,DWORD PTR [ebx+0xf5356e4],0xbc5244d0
  416155:	fidiv  DWORD PTR [ecx]
  416157:	mov    eax,0x85500039
  41615c:	dec    BYTE PTR [ebx]
  41615e:	push   ds
  41615f:	pop    esp
  416160:	fcomp  QWORD PTR [edx-0x53134745]
  416166:	xchg   ah,al
  416168:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416169:	sub    DWORD PTR [ebx+0x79bbd7fa],edi
  41616f:	inc    edi
  416170:	push   esi
  416171:	mov    WORD PTR [ebx+0x3b],es
  416174:	xchg   ecx,eax
  416175:	xchg   BYTE PTR [ecx+0x12],al
  416178:	jmp    DWORD PTR [eax+ebx*8-0x15cace8f]
  41617f:	cmp    BYTE PTR ds:0xbe4762fa,dh
  416185:	xor    BYTE PTR [ebp-0x62],0x1d
  416189:	inc    edx
  41618a:	ficom  DWORD PTR [eax+0x49d23c9a]
  416190:	push   edi
  416191:	cmp    eax,0x7be94727
  416196:	adc    BYTE PTR [edi+0x58],dh
  416199:	pop    esp
  41619a:	rcl    DWORD PTR [ecx],1
  41619c:	cwde   
  41619d:	adc    DWORD PTR [esi-0x31720052],ebx
  4161a3:	repz inc edx
  4161a5:	push   ebx
  4161a6:	mov    cs:0xe9b2a419,eax
  4161ac:	fs ins BYTE PTR es:[edi],dx
  4161ae:	lahf   
  4161af:	in     eax,dx
  4161b0:	(bad)  
  4161b2:	(bad)  
  4161b3:	stos   DWORD PTR es:[edi],eax
  4161b4:	cld    
  4161b5:	jmp    0x416152
  4161b7:	inc    edx
  4161b8:	mov    ah,0x0
  4161ba:	lods   al,BYTE PTR ds:[esi]
  4161bb:	mov    al,ds:0x71f1d2df
  4161c0:	inc    eax
  4161c1:	add    cl,dl
  4161c3:	mov    ecx,0xf58281bf
  4161c8:	pop    ebx
  4161c9:	dec    esi
  4161ca:	adc    BYTE PTR [edx-0x6b6f2601],al
  4161d0:	jle    0x416244
  4161d2:	dec    edx
  4161d3:	or     BYTE PTR ds:0x9727b2b7,dl
  4161d9:	jmp    0x416237
  4161db:	clc    
  4161dc:	mov    eax,ds:0xeeb21812
  4161e1:	int3   
  4161e2:	call   0x1a04:0xa6e43515
  4161e9:	mov    bh,0xe7
  4161eb:	loopne 0x416194
  4161ed:	jbe    0x41626c
  4161ef:	retf   0x245c
  4161f2:	xlat   BYTE PTR ds:[ebx]
  4161f3:	sub    eax,0xfbf0b1ba
  4161f8:	pop    ebx
  4161f9:	mov    ecx,0x793ba8e0
  4161fe:	jmp    0x4999c560
  416203:	scas   al,BYTE PTR es:[edi]
  416204:	xlat   BYTE PTR ds:[ebx]
  416205:	sbb    bl,dh
  416207:	mov    cl,0x9d
  416209:	jb     0x4161d8
  41620b:	and    DWORD PTR ds:0x257083bb,esp
  416211:	(bad)  
  416212:	push   ebp
  416213:	xchg   ecx,eax
  416214:	scas   eax,DWORD PTR es:[edi]
  416215:	outs   dx,BYTE PTR ds:[esi]
  416216:	xchg   cl,bl
  416218:	test   eax,0xf8a1823f
  41621d:	bound  esi,QWORD PTR [ebp+0x2df4e02c]
  416223:	sub    al,BYTE PTR ds:0x7137532f
  416229:	mov    ecx,0x22292518
  41622e:	test   DWORD PTR [ebx+0x65710c02],edx
  416234:	lahf   
  416235:	and    eax,0x8ac3d3aa
  41623a:	or     BYTE PTR [ebx+esi*4-0x6d],bh
  41623e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41623f:	pop    ecx
  416240:	mov    ss,WORD PTR ds:0x53ab3652
  416246:	mov    edx,0x7983f0d2
  41624b:	xlat   BYTE PTR ds:[ebx]
  41624c:	bound  edx,QWORD PTR [esi]
  41624e:	jnp    0x416289
  416250:	out    0x83,eax
  416252:	mov    DWORD PTR [esi],eax
  416254:	inc    edx
  416255:	push   ds
  416256:	in     al,dx
  416257:	pushf  
  416258:	lods   al,BYTE PTR ds:[esi]
  416259:	jp     0x8e88a11f
  41625f:	test   al,0xd0
  416261:	adc    dl,BYTE PTR [eax-0x3d]
  416264:	pop    ebp
  416265:	ins    DWORD PTR es:[edi],dx
  416266:	fild   QWORD PTR [ebx]
  416268:	fisubr DWORD PTR [edi+0x1ec3c3aa]
  41626e:	mov    edi,0x93846548
  416273:	scas   eax,DWORD PTR es:[edi]
  416274:	clc    
  416275:	cmp    BYTE PTR [edi],dh
  416277:	arpl   WORD PTR [ebx-0x10],dx
  41627a:	dec    DWORD PTR [eax]
  41627c:	xor    BYTE PTR [esi],al
  41627e:	sbb    al,0x9e
  416280:	cli    
  416281:	mov    edx,0x33b601a7
  416286:	xlat   BYTE PTR ds:[ebx]
  416287:	and    ch,BYTE PTR [esi]
  416289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41628a:	jo     0x4162c3
  41628c:	hlt    
  41628d:	mov    bl,0x84
  41628f:	and    esp,DWORD PTR [ebp-0x14]
  416292:	(bad)  
  416294:	scas   al,BYTE PTR es:[edi]
  416295:	xor    DWORD PTR [ecx-0x846f1f4],edx
  41629b:	and    BYTE PTR [edi],0x9c
  41629e:	push   edx
  41629f:	pop    ss
  4162a0:	out    dx,al
  4162a1:	rep outs dx,DWORD PTR ds:[esi]
  4162a3:	push   0x803fed4e
  4162a8:	scas   al,BYTE PTR es:[edi]
  4162a9:	xor    al,0x11
  4162ab:	ror    BYTE PTR [esi],0xf7
  4162ae:	xor    bh,BYTE PTR [edx]
  4162b0:	adc    DWORD PTR [ecx+0x6248f2d],0xffffffe8
  4162b7:	xchg   ebp,eax
  4162b8:	icebp  
  4162b9:	mov    ch,0xf9
  4162bb:	rol    dl,1
  4162bd:	enter  0x81db,0xa5
  4162c1:	test   eax,0xdd73e168
  4162c6:	repz pop es
  4162c8:	out    dx,al
  4162c9:	jne    0x41627e
  4162cb:	add    BYTE PTR [ebp+eax*1-0x238bed97],cl
  4162d2:	push   ecx
  4162d3:	mov    edi,0x5a9332f9
  4162d8:	sbb    eax,0xeac70ab7
  4162dd:	fstp   TBYTE PTR [edi]
  4162df:	and    eax,0x9ba541e1
  4162e4:	js     0x4162c4
  4162e6:	mov    ebx,0x41f2086e
  4162eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162ec:	sar    BYTE PTR [ebx],cl
  4162ee:	sub    DWORD PTR [ebx],0x566c27ee
  4162f4:	out    0x68,al
  4162f6:	bound  esi,QWORD PTR [ecx]
  4162f8:	mov    ebx,edx
  4162fa:	and    eax,0xf49fc41f
  4162ff:	pop    ecx
  416300:	stos   DWORD PTR es:[edi],eax
  416301:	ret    
  416302:	arpl   WORD PTR [edi-0x17],bp
  416305:	xchg   esp,eax
  416306:	hlt    
  416307:	cmp    edx,edi
  416309:	ret    
  41630a:	add    bh,0xe1
  41630d:	test   al,0xba
  41630f:	add    ecx,DWORD PTR [ecx-0x68]
  416312:	mov    dl,0x17
  416314:	shr    DWORD PTR [ebx+ecx*1],1
  416317:	test   DWORD PTR [esi],esi
  416319:	dec    ebp
  41631a:	not    DWORD PTR [edx+0xf]
  41631d:	lods   eax,DWORD PTR ds:[esi]
  41631e:	and    BYTE PTR [esi],dl
  416320:	and    BYTE PTR [ebx+0x3586a85a],ah
  416326:	mov    esi,0xfc3155d1
  41632b:	int    0xdf
  41632d:	cmp    ebx,esp
  41632f:	adc    al,0x7f
  416331:	test   eax,0x1934c463
  416336:	imul   edx,DWORD PTR [esi+ebp*4+0x37918ab6],0x36cdcbe4
  416341:	neg    BYTE PTR [ebp+0x47]
  416344:	mov    ds:0x65fb5dd4,al
  416349:	mov    ebp,0xcf368736
  41634e:	repz into 
  416350:	fild   DWORD PTR [eax]
  416352:	fstp   TBYTE PTR [esi-0x64]
  416355:	pusha  
  416356:	outs   dx,BYTE PTR es:[esi]
  416358:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416359:	inc    edi
  41635a:	jmp    0x13f9:0xab74f1c0
  416361:	(bad)  [ecx-0x5be36eea]
  416367:	stos   BYTE PTR es:[edi],al
  416368:	mov    BYTE PTR [esi+0x4db79c6d],bh
  41636e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41636f:	xchg   DWORD PTR [esi+eiz*4],esp
  416372:	add    BYTE PTR [eax],0x67
  416375:	popf   
  416376:	gs ins DWORD PTR es:[edi],dx
  416378:	das    
  416379:	mov    bh,0xb8
  41637b:	enter  0x403e,0xf8
  41637f:	call   0x2b0a:0x18111f64
  416386:	(bad)
  41638b:	inc    edi
  41638c:	xchg   BYTE PTR [edx],dh
  41638e:	push   ebx
  41638f:	inc    ebx
  416390:	jo     0x416334
  416392:	inc    ebx
  416393:	xor    DWORD PTR [eax+0x671aaa30],edx
  416399:	fcom   QWORD PTR [eax-0x1b7b6f32]
  41639f:	test   DWORD PTR [esi+0x5a],ebp
  4163a2:	push   esp
  4163a3:	fimul  WORD PTR [eax]
  4163a5:	and    al,BYTE PTR [esi-0x2c]
  4163a8:	xor    edx,DWORD PTR [esi-0x80]
  4163ab:	xor    DWORD PTR [esi+0x4b],ebp
  4163ae:	pop    edi
  4163af:	xor    al,0xf8
  4163b1:	jge    0x416381
  4163b3:	fbstp  TBYTE PTR [esi]
  4163b5:	popa   
  4163b6:	jne    0x41633d
  4163b8:	cmp    edx,ebp
  4163ba:	xchg   ebp,eax
  4163bb:	stc    
  4163bc:	pop    es
  4163bd:	popf   
  4163be:	repnz sub al,0xf6
  4163c1:	and    dh,BYTE PTR [eax+ebp*2]
  4163c4:	aas    
  4163c5:	scas   eax,DWORD PTR es:[edi]
  4163c6:	xchg   esp,eax
  4163c7:	pop    es
  4163c8:	pop    ebp
  4163c9:	mov    ebx,DWORD PTR [eax+0x3b279d85]
  4163cf:	pop    ecx
  4163d0:	push   edi
  4163d1:	cmp    DWORD PTR [ebx],edi
  4163d3:	test   BYTE PTR [ecx],ch
  4163d5:	(bad)  
  4163d6:	add    al,BYTE PTR [ebp-0xc31b22a]
  4163dc:	not    esp
  4163de:	add    dl,0xef
  4163e1:	popa   
  4163e2:	mov    cl,BYTE PTR [eax]
  4163e4:	(bad)  
  4163e5:	pop    edx
  4163e6:	pop    ds
  4163e7:	xchg   ebp,eax
  4163e8:	or     eax,DWORD PTR [edx-0x26]
  4163eb:	fisub  WORD PTR [ebp+0x0]
  4163ee:	xchg   ecx,eax
  4163ef:	sub    BYTE PTR [edx],ah
  4163f1:	sbb    al,0x9f
  4163f3:	bound  esi,QWORD PTR [edi+0x258b260f]
  4163f9:	sub    ebp,eax
  4163fb:	mov    ebp,0x57bc35ec
  416400:	xlat   BYTE PTR ds:[ebx]
  416401:	je     0x416448
  416403:	int3   
  416404:	xchg   ecx,eax
  416405:	add    al,0x73
  416407:	xchg   edx,eax
  416408:	sbb    BYTE PTR [ebp+0x17],dl
  41640b:	in     eax,0xd5
  41640d:	push   esp
  41640e:	in     eax,dx
  41640f:	mov    dl,0x72
  416411:	daa    
  416412:	mov    ?,WORD PTR [ebp+0x5c]
  416415:	in     al,0x54
  416417:	inc    ebx
  416418:	sti    
  416419:	push   esp
  41641a:	clc    
  41641b:	in     al,0xba
  41641d:	hlt    
  41641e:	(bad)  
  41641f:	iret   
  416420:	popf   
  416421:	pop    ss
  416422:	stos   DWORD PTR es:[edi],eax
  416423:	(bad)  
  416424:	sbb    al,0xca
  416426:	and    dh,BYTE PTR [edx-0x62]
  416429:	sub    cl,ch
  41642b:	outs   dx,DWORD PTR ds:[esi]
  41642c:	adc    DWORD PTR [eax+edx*1-0x24],ecx
  416430:	inc    esp
  416431:	mov    ah,0x1f
  416433:	mov    bl,0xfe
  416435:	xor    al,0x26
  416437:	mov    edx,0x14aabd82
  41643c:	fadd   DWORD PTR [edi-0x40]
  41643f:	into   
  416440:	jns    0x416413
  416442:	xor    al,0x16
  416444:	and    esi,ebx
  416446:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  416448:	xor    dh,ah
  41644a:	and    dh,BYTE PTR [eax]
  41644c:	out    0x10,al
  41644e:	loope  0x416453
  416450:	jle    0x416480
  416452:	sbb    eax,DWORD PTR [ecx+0x3fb9e58]
  416458:	sbb    eax,0xe8ba05cc
  41645d:	mov    ebx,0x73dc3584
  416462:	push   cs
  416463:	xchg   ecx,eax
  416464:	ror    DWORD PTR [edx+0x5b],cl
  416467:	lods   eax,DWORD PTR ds:[esi]
  416468:	dec    esi
  416469:	inc    DWORD PTR [ecx+edi*1-0x27]
  41646d:	les    eax,FWORD PTR [edx-0x33c85842]
  416473:	or     eax,0xcbb7d0af
  416478:	loopne 0x416474
  41647a:	test   al,0x48
  41647c:	pop    esi
  41647d:	out    dx,eax
  41647e:	cmp    eax,edi
  416480:	jl     0x4164f7
  416482:	inc    ecx
  416483:	mov    al,ds:0x7664fe7c
  416488:	xor    edi,ecx
  41648a:	fcomp  DWORD PTR [ecx+0x1b]
  41648d:	sti    
  41648e:	aas    
  41648f:	loop   0x4164f1
  416491:	gs pop ds
  416493:	sbb    al,0xd
  416495:	sar    bh,1
  416497:	bound  edx,QWORD PTR [ebx-0x60cf4f93]
  41649d:	xor    esi,DWORD PTR [ecx-0x73adb36e]
  4164a3:	jns    0x416479
  4164a5:	cwde   
  4164a6:	fld    QWORD PTR [edx+eax*8-0x73]
  4164aa:	add    al,0xf4
  4164ac:	dec    edi
  4164ad:	inc    ebx
  4164ae:	lods   eax,DWORD PTR ds:[esi]
  4164af:	in     eax,0xf5
  4164b1:	dec    ebp
  4164b2:	jnp    0x416531
  4164b4:	mov    DWORD PTR [edx+0x16],edi
  4164b7:	imul   esp,DWORD PTR [eax+edi*4],0xf
  4164bb:	jb     0x41649a
  4164bd:	pop    edi
  4164be:	int    0x4d
  4164c0:	xchg   DWORD PTR [ecx],esi
  4164c2:	dec    edx
  4164c3:	ja     0x416471
  4164c5:	mov    eax,0x8c6190b4
  4164ca:	adc    eax,0xe99a2216
  4164cf:	ins    DWORD PTR es:[edi],dx
  4164d0:	fdivr  DWORD PTR [eax-0x71687839]
  4164d6:	inc    edx
  4164d7:	nop
  4164d8:	jnp    0x4164a3
  4164da:	bound  ebp,QWORD PTR [ebx+edx*2+0x7a]
  4164de:	loope  0x41650c
  4164e0:	push   ebx
  4164e1:	mov    edi,0x99861fc4
  4164e6:	inc    esi
  4164e7:	pop    esi
  4164e8:	sub    cl,BYTE PTR [eax+0xe]
  4164eb:	inc    esp
  4164ec:	ss sbb al,0xd
  4164ef:	xchg   edx,eax
  4164f0:	out    dx,eax
  4164f1:	dec    ebp
  4164f2:	inc    ecx
  4164f3:	adc    ah,BYTE PTR [ebx]
  4164f5:	push   ebx
  4164f6:	jmp    0x41655e
  4164f8:	mov    ds:0xef6d8b4a,al
  4164fd:	jmp    0x9727:0x9910bb85
  416504:	fstp   QWORD PTR [esi+0x29]
  416507:	fldcw  WORD PTR [ecx+0x3ea7c776]
  41650d:	inc    esi
  41650e:	or     ecx,esp
  416510:	xchg   ebp,eax
  416511:	test   BYTE PTR [ebx+0x6c],cl
  416514:	pop    esp
  416515:	or     BYTE PTR [ebx+eax*2],cl
  416518:	adc    dh,BYTE PTR ds:0xe48bd9e5
  41651e:	jle    0x416599
  416520:	stc    
  416521:	add    al,0x2c
  416523:	rol    DWORD PTR [edx+0x6be045c9],cl
  416529:	lds    esi,FWORD PTR [edx]
  41652b:	es aam 0xfb
  41652e:	or     BYTE PTR [edi+edx*8+0x2e],ah
  416532:	hlt    
  416533:	sbb    dh,ah
  416535:	add    esp,DWORD PTR [ecx]
  416537:	jb     0x4164c6
  416539:	sub    al,0x69
  41653b:	arpl   WORD PTR [eax-0x27a34d3e],si
  416541:	pop    edi
  416542:	push   ss
  416543:	and    cl,ch
  416545:	iret   
  416546:	cmp    al,ch
  416548:	mov    esi,0x9b987330
  41654d:	out    dx,eax
  41654e:	pop    es
  41654f:	and    dh,ah
  416551:	sub    BYTE PTR [ebp+0x291416b],bl
  416557:	imul   ebx,ecx,0xd40fce92
  41655d:	inc    ebx
  41655e:	inc    edi
  41655f:	pop    esi
  416560:	in     eax,dx
  416561:	scas   eax,DWORD PTR es:[edi]
  416562:	jp     0x416566
  416564:	js     0x4165b3
  416566:	(bad)  [ecx]
  416568:	call   0xf91de51e
  41656d:	fisttp DWORD PTR [esi-0x12fbbb5b]
  416573:	mov    ds:0x15e8b621,eax
  416578:	dec    esp
  416579:	pop    esi
  41657a:	xor    eax,0x76ff3f55
  41657f:	mov    ds:0xfbd6240d,eax
  416584:	jp     0x416552
  416586:	mov    dh,0xec
  416588:	cli    
  416589:	stos   DWORD PTR es:[edi],eax
  41658a:	mov    al,ds:0xcaee8476
  41658f:	and    eax,0x746e55b9
  416594:	ds repnz sahf 
  416597:	pushf  
  416598:	dec    esp
  416599:	mov    eax,0xa30c88ee
  41659e:	scas   al,BYTE PTR es:[edi]
  41659f:	mov    al,ds:0x11823f77
  4165a4:	call   0x1ff8:0x4526d251
  4165ab:	ja     0x4165be
  4165ad:	sbb    eax,0x5f4906a6
  4165b2:	stc    
  4165b3:	dec    ecx
  4165b4:	clc    
  4165b5:	sbb    esi,DWORD PTR [ebp+0x677da26]
  4165bb:	(bad)  
  4165bc:	aad    0x30
  4165be:	imul   esi,DWORD PTR [edi+0x67],0xc666810d
  4165c5:	jp     0x4165b2
  4165c7:	(bad)  
  4165c8:	mulps  xmm2,XMMWORD PTR [edi]
  4165cb:	xor    DWORD PTR [ebp+0x4a],edx
  4165ce:	or     DWORD PTR [ebx+0x4672110b],esi
  4165d4:	mov    esi,0x7452f4e
  4165d9:	jle    0x416657
  4165db:	mov    ecx,0x9b5bf9c9
  4165e1:	cmp    DWORD PTR [edx],ecx
  4165e3:	sbb    ah,BYTE PTR ds:0xf4db1d82
  4165e9:	inc    edx
  4165ea:	pop    ebp
  4165eb:	jo     0x41665c
  4165ed:	stos   DWORD PTR es:[edi],eax
  4165ee:	and    DWORD PTR [ecx],ecx
  4165f0:	fld    DWORD PTR [ebx+0x4efd8236]
  4165f6:	ins    BYTE PTR es:[edi],dx
  4165f7:	ds ds inc esp
  4165fa:	push   eax
  4165fb:	push   edi
  4165fc:	aam    0xd9
  4165fe:	leave  
  4165ff:	loopne 0x4165a4
  416601:	mov    bl,0x45
  416603:	pop    edx
  416604:	adc    bl,BYTE PTR [ecx+edi*8-0x80]
  416608:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416609:	enter  0xec5c,0x2
  41660d:	jg     0x4165a5
  41660f:	repnz adc eax,0xa27f80e4
  416615:	imul   ebx,DWORD PTR [edx+0x53baf2c7],0x9640e569
  41661f:	push   eax
  416620:	mov    bl,0xa4
  416622:	fmul   DWORD PTR [ebp-0x55]
  416625:	aas    
  416626:	jb     0x4165ee
  416628:	xchg   DWORD PTR [edi-0x48a786e6],ebx
  41662e:	test   al,0x4b
  416630:	push   esp
  416631:	adc    al,0x95
  416633:	sbb    BYTE PTR [ebx+0x3a1d206a],0xe2
  41663a:	add    BYTE PTR [ecx+0xb],al
  41663d:	(bad)  
  41663e:	jmp    0x4166a3
  416640:	cmp    DWORD PTR ds:0x2ea567f9,edx
  416646:	xor    eax,0xc4e701ea
  41664b:	(bad)  
  41664c:	xchg   esp,eax
  41664d:	pop    eax
  41664e:	add    ecx,DWORD PTR [ebp-0x5eae9804]
  416654:	fwait
  416655:	test   al,0x3
  416657:	mov    ds:0xde0ef243,al
  41665c:	inc    eax
  41665d:	rcl    ch,cl
  41665f:	push   esp
  416660:	imul   ebp,edi,0x7a
  416663:	bound  esi,QWORD PTR [edx+esi*8]
  416666:	std    
  416667:	mov    ch,0x6d
  416669:	mov    ds:0x4b3d42e5,eax
  41666e:	imul   ebp,DWORD PTR [ecx+edx*2+0x5],0xffffffbf
  416673:	stos   DWORD PTR es:[edi],eax
  416674:	sub    al,BYTE PTR [ebx]
  416676:	data16 je 0x416669
  416679:	xor    ecx,eax
  41667b:	int3   
  41667c:	mov    edi,0x43124151
  416681:	inc    esp
  416682:	jnp    0x416643
  416684:	(bad)  [ebx-0x7d]
  416687:	pop    eax
  416688:	(bad)  
  41668b:	inc    ecx
  41668c:	stos   BYTE PTR es:[edi],al
  41668d:	xchg   esi,eax
  41668e:	sbb    dh,ch
  416690:	arpl   WORD PTR [edx-0x24],dx
  416693:	nop
  416694:	mov    bh,0x99
  416696:	sbb    eax,0x16991a4a
  41669b:	push   esp
  41669c:	sub    edi,DWORD PTR [ecx+0x78147abc]
  4166a2:	sbb    eax,0x92fe59dd
  4166a7:	loope  0x4166c9
  4166a9:	out    dx,al
  4166aa:	or     al,0xf0
  4166ac:	mov    ebp,gs
  4166ae:	adc    ebx,eax
  4166b0:	push   cs
  4166b1:	lods   al,BYTE PTR ds:[esi]
  4166b2:	sar    ebx,0x5c
  4166b5:	adc    edi,ecx
  4166b7:	les    ecx,FWORD PTR ds:0x94122116
  4166bd:	lahf   
  4166be:	retf   
  4166bf:	xor    al,BYTE PTR [esi]
  4166c1:	sub    DWORD PTR [edi-0x59],ebp
  4166c4:	iret   
  4166c5:	inc    ebp
  4166c6:	scas   al,BYTE PTR es:[edi]
  4166c7:	xchg   esp,eax
  4166c8:	aam    0xb6
  4166ca:	jns    0x41666e
  4166cc:	pop    esp
  4166cd:	lods   al,BYTE PTR ds:[esi]
  4166ce:	or     dh,BYTE PTR [edi+eiz*2-0x19]
  4166d2:	xor    edi,DWORD PTR [eax+0x9]
  4166d5:	adc    ebp,esp
  4166d7:	inc    edx
  4166d8:	jae    0x416716
  4166da:	jecxz  0x416725
  4166dc:	pusha  
  4166dd:	jo     0x4166b0
  4166df:	sar    BYTE PTR [ecx],1
  4166e1:	jl     0x41673c
  4166e3:	mov    ch,0xb
  4166e5:	sub    eax,DWORD PTR [ecx]
  4166e7:	out    0x35,eax
  4166e9:	sbb    al,0xb9
  4166eb:	adc    BYTE PTR [esi],0x47
  4166ee:	xor    DWORD PTR [ebx-0x6b],0xbe661b7f
  4166f5:	jb     0x416688
  4166f7:	xlat   BYTE PTR ds:[ebx]
  4166f8:	inc    esp
  4166f9:	loopne 0x4166e6
  4166fb:	xchg   esi,eax
  4166fc:	cmp    BYTE PTR [edi],0x5a
  4166ff:	mov    edi,0xeb5d82e8
  416704:	rcl    BYTE PTR es:[ebx-0x886e3b],1
  41670b:	shr    DWORD PTR [esi],0x17
  41670e:	mov    esi,0x6dd56781
  416713:	inc    ecx
  416714:	sti    
  416715:	loop   0x416710
  416717:	inc    ebp
  416718:	sbb    eax,0xfd2b9721
  41671d:	outs   dx,DWORD PTR ds:[esi]
  41671e:	pop    edx
  416720:	ret    
  416721:	inc    ecx
  416722:	or     DWORD PTR [esi-0x5cd98835],0x2dd1c5a5
  41672c:	(bad)  [ecx-0x11]
  41672f:	ins    DWORD PTR es:[edi],dx
  416730:	out    dx,eax
  416731:	ficomp WORD PTR [ebp+0x2d]
  416734:	mov    edi,0xd4840c43
  416739:	mov    WORD PTR [edx],es
  41673b:	std    
  41673c:	loopne 0x4166ed
  41673e:	xchg   esp,eax
  41673f:	call   0x70f7b804
  416744:	pushf  
  416745:	loope  0x416775
  416747:	sub    DWORD PTR [edi],esp
  416749:	sbb    bh,bl
  41674b:	sar    BYTE PTR [ebx],cl
  41674d:	fld    DWORD PTR [eax+eax*8+0x61]
  416751:	mov    WORD PTR [ebp+0x54],?
  416754:	and    ah,ah
  416756:	pushf  
  416757:	xchg   edx,eax
  416758:	stos   DWORD PTR es:[edi],eax
  416759:	mov    al,ds:0x11e76f48
  41675e:	jle    0x416785
  416760:	enter  0xc0a2,0x73
  416764:	and    ch,BYTE PTR [esi-0x64a80395]
  41676a:	lods   eax,DWORD PTR ds:[esi]
  41676b:	push   ss
  41676c:	xchg   ch,bh
  41676e:	sub    eax,0xfb87e5b7
  416773:	adc    DWORD PTR [esi+0x76f9aecd],esp
  416779:	js     0x416767
  41677b:	jo     0x416737
  41677d:	xchg   edi,eax
  41677e:	mov    esi,0x2825c75
  416783:	cmp    DWORD PTR [ebp-0x26387308],ebp
  416789:	outs   dx,DWORD PTR ds:[esi]
  41678a:	jg     0x416744
  41678c:	xchg   edx,eax
  41678d:	(bad)  
  41678e:	xor    edi,edx
  416790:	xor    al,0x28
  416792:	mov    dh,0xce
  416794:	shl    DWORD PTR [eax+0x54],1
  416797:	ds xchg ebp,eax
  416799:	cli    
  41679a:	and    BYTE PTR ds:[esp+eax*8+0x676cb399],dh
  4167a2:	and    eax,0x8d881f1
  4167a7:	cmp    eax,0x96090c80
  4167ac:	aad    0x22
  4167ae:	(bad)  
  4167af:	sar    BYTE PTR [ecx+0x44e1e13b],1
  4167b5:	call   DWORD PTR ds:0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x71a7b4d6
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xff7bb990
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	xchg   BYTE PTR [edx-0x27],ah
  4169d0:	xchg   ebp,eax
  4169d1:	arpl   cx,si
  4169d3:	cmp    esi,DWORD PTR [edx+edi*2-0x66eef10c]
  4169da:	xor    al,0x38
  4169dc:	dec    ecx
  4169dd:	sub    eax,0xb43bf160
  4169e2:	jle    0x4169d8
  4169e4:	push   cs
  4169e5:	push   ecx
  4169e6:	retfw  
  4169e8:	cmp    BYTE PTR [ecx-0x6b],cl
  4169eb:	pusha  
  4169ec:	icebp  
  4169ed:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  4169f4:	retf   
  4169f5:	cmp    BYTE PTR [ecx-0x6b],cl
  4169f8:	pusha  
  4169f9:	icebp  
  4169fa:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416a01:	retf   
  416a02:	cmp    BYTE PTR [ecx-0x6b],cl
  416a05:	pusha  
  416a06:	icebp  
  416a07:	cmp    esi,DWORD PTR [esi+esi*2+0x68110ef5]
  416a0e:	aam    0x82
  416a10:	inc    edi
  416a11:	xchg   ebp,eax
  416a12:	aam    0xf8
  416a14:	not    BYTE PTR [ebp-0x23bd0a3a]
  416a1a:	inc    edi
  416a1b:	lahf   
  416a1c:	push   eax
  416a1d:	and    dh,ah
  416a1f:	inc    eax
  416a20:	or     DWORD PTR [ecx-0x25],0x7c6f8619
  416a27:	inc    esi
  416a28:	test   al,0x59
  416a2a:	daa    
  416a2b:	sti    
  416a2c:	jne    0xd45d404d
  416a32:	jl     0x416a98
  416a34:	or     bl,ch
  416a36:	push   ecx
  416a37:	daa    
  416a38:	mov    ch,0x24
  416a3a:	mov    esi,0x9b139468
  416a3f:	push   0x74
  416a41:	dec    eax
  416a42:	(bad)  
  416a43:	xor    eax,0xf160b143
  416a48:	cmp    esi,DWORD PTR [esi+edi*2-0x5694f10c]
  416a4f:	fnsave [esi+0x2c183b77]
  416a55:	add    eax,0x3029061a
  416a5a:	mov    edi,0x7a1d161e
  416a5f:	jae    0x416a1e
  416a61:	rcl    DWORD PTR [ebp+0x3dd1a3cc],cl
  416a67:	ret    
  416a68:	mov    ebx,0x48319674
  416a6d:	inc    ebp
  416a6e:	ret    0x69e8
  416a71:	imul   ebx,DWORD PTR [edx+0x76],0xffffffcc
  416a75:	aaa    
  416a76:	adc    ebp,ebx
  416a78:	xchg   esp,eax
  416a79:	scas   al,BYTE PTR es:[edi]
  416a7a:	into   
  416a7b:	mov    esi,esp
  416a7d:	sub    DWORD PTR [eax-0x37d92cf1],0xffffffb3
  416a84:	in     eax,0x7e
  416a86:	inc    ebx
  416a87:	mov    ebp,DWORD PTR [esi+ebx*1]
  416a8a:	sbb    al,BYTE PTR [esi]
  416a8c:	sub    DWORD PTR [eax],esi
  416a8e:	mov    edi,0xe671161f
  416a93:	in     eax,dx
  416a94:	mov    ebp,0xa3deb533
  416a99:	les    esp,FWORD PTR [eax+0xbeebb69]
  416a9f:	sahf   
  416aa0:	dec    eax
  416aa1:	sbb    DWORD PTR [edi+0x43],ebx
  416aa4:	imul   ebx,DWORD PTR [ebx-0x39],0x6559ccec
  416aab:	inc    eax
  416aac:	xchg   esp,eax
  416aad:	mov    al,0x53
  416aaf:	adc    al,0xe6
  416ab1:	mov    edx,eax
  416ab3:	mov    ebx,ss
  416ab5:	inc    ebx
  416ab6:	push   gs
  416ab8:	push   eax
  416ab9:	ja     0x416af6
  416abb:	sbb    BYTE PTR [ebx+edi*1],ch
  416abe:	mov    ah,0x7e
  416ac0:	hlt    
  416ac1:	push   cs
  416ac2:	adc    DWORD PTR [esi-0x35],esp
  416ac5:	cmp    BYTE PTR [ecx-0x6b],cl
  416ac8:	pusha  
  416ac9:	icebp  
  416aca:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416ad1:	retf   
  416ad2:	cmp    BYTE PTR [ecx-0x6b],cl
  416ad5:	xor    BYTE PTR [ebx+edi*1+0xdf532b4],dh
  416adc:	adc    DWORD PTR [eax],eax
  416ade:	test   DWORD PTR [ebp+0x6],esi
  416ae1:	xchg   ebp,eax
  416ae2:	pusha  
  416ae3:	icebp  
  416ae4:	cmp    esi,DWORD PTR [esi+edi*2+0x66f10ef4]
  416aeb:	leave  
  416aec:	cmp    DWORD PTR [edx-0x6c],eax
  416aef:	push   0xfffffff1
  416af1:	cmp    edx,DWORD PTR [esi+0x7a]
  416af4:	hlt    
  416af5:	push   cs
  416af6:	xchg   ebp,eax
  416af7:	pusha  
  416af8:	retf   
  416af9:	cmp    BYTE PTR [ecx-0x6b],cl
  416afc:	pusha  
  416afd:	mov    dl,0x86
  416aff:	mov    ah,0x7e
  416b01:	hlt    
  416b02:	push   ds
  416b03:	adc    DWORD PTR [esi-0x35],esp
  416b06:	cmp    BYTE PTR [ebp+edx*4+0x60],cl
  416b0a:	icebp  
  416b0b:	jnp    0x416ac1
  416b0d:	jle    0x416af3
  416b0f:	push   cs
  416b10:	adc    DWORD PTR [esi-0x37],esp
  416b13:	cmp    BYTE PTR [ecx-0x70],cl
  416b16:	pusha  
  416b17:	lock cmp esi,DWORD PTR [esi+edi*2+0x66140ef4]
  416b1f:	retf   0x4938
  416b22:	xchg   ebp,eax
  416b23:	pusha  
  416b24:	icebp  
  416b25:	cmp    eax,DWORD PTR [edx+esi*2+0x66150ef4]
  416b2c:	retf   
  416b2d:	xor    dh,BYTE PTR [edi+0x3bf36091]
  416b33:	hlt    
  416b34:	push   esp
  416b36:	push   cs
  416b37:	add    DWORD PTR [esi-0x35],esp
  416b3a:	sub    BYTE PTR [ecx-0x6b],cl
  416b3d:	pusha  
  416b3e:	icebp  
  416b3f:	sub    esi,DWORD PTR [esi+edi*2+0x66110ee4]
  416b46:	retf   
  416b47:	cmp    BYTE PTR [ecx-0x7b],cl
  416b4a:	pusha  
  416b4b:	icebp  
  416b4c:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416b53:	retf   
  416b54:	cmp    BYTE PTR [ebp-0x6b],cl
  416b57:	ins    BYTE PTR es:[edi],dx
  416b58:	icebp  
  416b59:	bound  esi,QWORD PTR [edi-0x2ef10b82]
  416b5f:	ins    DWORD PTR es:[edi],dx
  416b60:	retf   
  416b61:	ins    DWORD PTR es:[edi],dx
  416b62:	jbe    0x416af9
  416b64:	pusha  
  416b65:	icebp  
  416b66:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416b6d:	retf   
  416b6e:	cmp    BYTE PTR [ecx-0x6b],cl
  416b71:	pusha  
  416b72:	icebp  
  416b73:	cmp    esi,DWORD PTR [esi+edi*2+0x7e1102d4]
  416b7a:	retf   
  416b7b:	cmp    BYTE PTR [ecx-0x6b],cl
  416b7e:	pusha  
  416b7f:	icebp  
  416b80:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416b87:	retf   
  416b88:	cmp    BYTE PTR [ecx-0x6b],cl
  416b8b:	pusha  
  416b8c:	icebp  
  416b8d:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416b94:	retf   
  416b95:	cmp    BYTE PTR [ecx-0x6b],cl
  416b98:	pusha  
  416b99:	icebp  
  416b9a:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416ba1:	retf   
  416ba2:	cmp    BYTE PTR [ecx-0x6b],cl
  416ba5:	pusha  
  416ba6:	icebp  
  416ba7:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416bae:	retf   
  416baf:	cmp    BYTE PTR [ecx-0x6b],cl
  416bb2:	pusha  
  416bb3:	icebp  
  416bb4:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416bbb:	retf   
  416bbc:	cmp    BYTE PTR [ecx-0x6b],cl
  416bbf:	pusha  
  416bc0:	icebp  
  416bc1:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416bc8:	retf   
  416bc9:	cmp    BYTE PTR [ecx-0x6b],cl
  416bcc:	pusha  
  416bcd:	fisttp WORD PTR [edi-0x2f]
  416bd0:	push   es
  416bd1:	or     BYTE PTR [esi],0x11
  416bd4:	retfw  
  416bd6:	mov    BYTE PTR [edx-0x6b],al
  416bd9:	pusha  
  416bda:	loope  0x416c17
  416bdc:	mov    ah,0x7e
  416bde:	xchg   edx,eax
  416bdf:	or     dl,BYTE PTR [ecx]
  416be1:	iretw  
  416be3:	cmp    BYTE PTR [ecx-0x3b],cl
  416be6:	and    eax,0x31e009b2
  416beb:	hlt    
  416bec:	push   cs
  416bed:	adc    DWORD PTR [esi-0x35],esp
  416bf0:	cmp    BYTE PTR [ecx-0x6b],ch
  416bf3:	pusha  
  416bf4:	adc    DWORD PTR ds:0x6d860dc6,edx
  416bfa:	adc    DWORD PTR [esi-0x35],esp
  416bfd:	cmp    BYTE PTR [ecx],ch
  416bff:	xchg   ebp,eax
  416c00:	pusha  
  416c01:	icebp  
  416c02:	sti    
  416c03:	mov    edi,0x115cf47e
  416c08:	retfw  
  416c0a:	push   edx
  416c0b:	dec    ebp
  416c0c:	xchg   ebp,eax
  416c0d:	pusha  
  416c0e:	icebp  
  416c0f:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c16:	retf   
  416c17:	cmp    BYTE PTR [ecx-0x4b],cl
  416c1a:	pusha  
  416c1b:	icebp  
  416c1c:	fistp  DWORD PTR [edx+0x7e62910c]
  416c22:	add    eax,0x974938cb
  416c27:	pusha  
  416c28:	icebp  
  416c29:	cmp    edx,DWORD PTR [edx+esi*2+0x66130ef4]
  416c30:	retf   
  416c31:	cmp    ch,dh
  416c33:	xchg   ecx,eax
  416c34:	pusha  
  416c35:	icebp  
  416c36:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c3d:	retf   
  416c3e:	cmp    BYTE PTR [ecx-0x6b],cl
  416c41:	and    cl,dh
  416c43:	cmp    esi,DWORD PTR [esi+edi*2-0xc]
  416c47:	push   cs
  416c48:	adc    DWORD PTR [esi-0x35],esp
  416c4b:	cmp    BYTE PTR [ecx-0x6b],cl
  416c4e:	pusha  
  416c4f:	icebp  
  416c50:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c57:	retf   
  416c58:	cmp    BYTE PTR [ecx-0x6b],cl
  416c5b:	pusha  
  416c5c:	icebp  
  416c5d:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c64:	retf   
  416c65:	cmp    BYTE PTR [ecx-0x6b],cl
  416c68:	pusha  
  416c69:	icebp  
  416c6a:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c71:	retf   
  416c72:	cmp    BYTE PTR [ecx-0x6b],cl
  416c75:	pusha  
  416c76:	icebp  
  416c77:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c7e:	retf   
  416c7f:	cmp    BYTE PTR [ecx-0x6b],cl
  416c82:	pusha  
  416c83:	icebp  
  416c84:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c8b:	retf   
  416c8c:	cmp    BYTE PTR [ecx-0x6b],cl
  416c8f:	pusha  
  416c90:	icebp  
  416c91:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416c98:	retf   
  416c99:	cmp    BYTE PTR [ecx-0x6b],cl
  416c9c:	pusha  
  416c9d:	icebp  
  416c9e:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416ca5:	retf   
  416ca6:	cmp    BYTE PTR [ecx-0x6b],cl
  416ca9:	pusha  
  416caa:	icebp  
  416cab:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416cb2:	retf   
  416cb3:	cmp    BYTE PTR [ecx-0x6b],cl
  416cb6:	pusha  
  416cb7:	icebp  
  416cb8:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416cbf:	retf   
  416cc0:	cmp    BYTE PTR [ecx-0x6b],cl
  416cc3:	pusha  
  416cc4:	icebp  
  416cc5:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416ccc:	retf   
  416ccd:	cmp    BYTE PTR [ecx-0x6b],cl
  416cd0:	pusha  
  416cd1:	icebp  
  416cd2:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416cd9:	retf   
  416cda:	cmp    BYTE PTR [ecx-0x6b],cl
  416cdd:	pusha  
  416cde:	icebp  
  416cdf:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416ce6:	retf   
  416ce7:	cmp    BYTE PTR [ecx-0x6b],cl
  416cea:	pusha  
  416ceb:	icebp  
  416cec:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416cf3:	retf   
  416cf4:	cmp    BYTE PTR [ecx-0x6b],cl
  416cf7:	pusha  
  416cf8:	icebp  
  416cf9:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d00:	retf   
  416d01:	cmp    BYTE PTR [ecx-0x6b],cl
  416d04:	pusha  
  416d05:	icebp  
  416d06:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d0d:	retf   
  416d0e:	cmp    BYTE PTR [ecx-0x6b],cl
  416d11:	pusha  
  416d12:	icebp  
  416d13:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d1a:	retf   
  416d1b:	cmp    BYTE PTR [ecx-0x6b],cl
  416d1e:	pusha  
  416d1f:	icebp  
  416d20:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d27:	retf   
  416d28:	cmp    BYTE PTR [ecx-0x6b],cl
  416d2b:	pusha  
  416d2c:	icebp  
  416d2d:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d34:	retf   
  416d35:	cmp    BYTE PTR [ecx-0x6b],cl
  416d38:	pusha  
  416d39:	icebp  
  416d3a:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d41:	retf   
  416d42:	cmp    BYTE PTR [ecx-0x6b],cl
  416d45:	pusha  
  416d46:	icebp  
  416d47:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d4e:	retf   
  416d4f:	cmp    BYTE PTR [ecx-0x6b],cl
  416d52:	pusha  
  416d53:	icebp  
  416d54:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d5b:	retf   
  416d5c:	cmp    BYTE PTR [ecx-0x6b],cl
  416d5f:	pusha  
  416d60:	icebp  
  416d61:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d68:	retf   
  416d69:	cmp    BYTE PTR [ecx-0x6b],cl
  416d6c:	pusha  
  416d6d:	icebp  
  416d6e:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d75:	retf   
  416d76:	cmp    BYTE PTR [ecx-0x6b],cl
  416d79:	pusha  
  416d7a:	icebp  
  416d7b:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d82:	retf   
  416d83:	cmp    BYTE PTR [ecx-0x6b],cl
  416d86:	pusha  
  416d87:	icebp  
  416d88:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d8f:	retf   
  416d90:	cmp    BYTE PTR [ecx-0x6b],cl
  416d93:	pusha  
  416d94:	icebp  
  416d95:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416d9c:	retf   
  416d9d:	cmp    BYTE PTR [ecx-0x6b],cl
  416da0:	pusha  
  416da1:	icebp  
  416da2:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416da9:	retf   
  416daa:	cmp    BYTE PTR [ecx-0x6b],cl
  416dad:	pusha  
  416dae:	icebp  
  416daf:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416db6:	retf   
  416db7:	cmp    BYTE PTR [ecx-0x6b],cl
  416dba:	pusha  
  416dbb:	icebp  
  416dbc:	cmp    esi,DWORD PTR [esi+edi*2+0x66110ef4]
  416dc3:	retf   
  416dc4:	cmp    BYTE PTR [ecx-0x6b],cl
  416dc7:	pusha  
  416dc8:	icebp  
  416dc9:	cmp    esi,DWORD PTR [esi+edi*2+0x6d5fa5f4]
  416dd0:	retf   
  416dd1:	pop    ss
  416dd2:	dec    ecx
  416dd3:	xchg   ebp,eax
  416dd4:	jo     0x416dc7
  416dd6:	cmp    ebx,DWORD PTR [esi-0x5385d124]
  416ddc:	sub    eax,edi
  416dde:	sub    ah,BYTE PTR [edx-0x52]
  416de1:	pop    ebp
  416de2:	push   ds
  416de3:	mov    fs,WORD PTR [esi]
  416de5:	js     0x416da4
  416de7:	push   edi
  416de8:	loopne 0x416da4
  416dea:	js     0x416e17
  416dec:	push   cs
  416ded:	scas   al,BYTE PTR es:[edi]
  416dee:	mov    DWORD PTR [ecx],ebp
  416df0:	mov    al,0xf6
  416df2:	(bad)  
  416df4:	hlt    
  416df5:	pop    esi
  416df6:	icebp  
  416df7:	xchg   ebp,eax
  416df8:	out    0x9d,eax
  416dfa:	aad    0x3
  416dfc:	pushf  
  416dfd:	fmul   DWORD PTR [edi]
  416dff:	scas   eax,DWORD PTR es:[edi]
  416e00:	ror    DWORD PTR [ebp+0x18],1
  416e03:	out    dx,al
  416e04:	dec    ebx
  416e05:	das    
  416e06:	mov    ah,0xb5
  416e08:	pop    ecx
  416e09:	leave  
  416e0a:	js     0x416dc2
  416e0c:	xor    dh,BYTE PTR [ebx-0x7b4e722a]
  416e12:	push   es
  416e13:	cli    
  416e14:	arpl   WORD PTR [eax+ebp*8-0x597005d4],dx
  416e1b:	popa   
  416e1c:	lea    eax,[ecx+0x3fb9a7db]
  416e22:	pop    edx
  416e23:	pop    esp
  416e24:	mov    esi,0xe15e82ff
  416e29:	test   DWORD PTR [edi+0x5c],0x470ea8e4
  416e30:	mov    ds:0x13eb00e,eax
  416e35:	sub    BYTE PTR [ebp-0x25],dh
  416e38:	and    al,0x45
  416e3a:	jno    0x416dfc
  416e3c:	xlat   BYTE PTR ds:[ebx]
  416e3d:	add    eax,0xec66e547
  416e42:	sbb    esi,DWORD PTR [esp+eax*8+0x41]
  416e46:	sbb    al,0x6a
  416e48:	pop    es
  416e49:	test   BYTE PTR [edx+0x59],ch
  416e4c:	iret   
  416e4d:	addr16 pop ss
  416e4f:	cdq    
  416e50:	xor    eax,0xbb935b33
  416e55:	or     BYTE PTR [edx],dl
  416e57:	xchg   edi,eax
  416e58:	sbb    eax,0x9b70e0e2
  416e5d:	push   esi
  416e5e:	out    dx,eax
  416e5f:	xor    cl,BYTE PTR [esi+esi*2]
  416e62:	mov    ch,0xfa
  416e64:	xchg   DWORD PTR [edi],edx
  416e66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e67:	lea    esp,[ebx]
  416e69:	cmp    edi,DWORD PTR [edi]
  416e6b:	jl     0x416dfa
  416e6d:	sbb    dh,BYTE PTR [edx-0xbc75533]
  416e73:	inc    edi
  416e74:	aam    0x3a
  416e76:	loop   0x416e3c
  416e78:	push   edx
  416e79:	xchg   edi,eax
  416e7a:	dec    esp
  416e7b:	mov    BYTE PTR [eax+0x1d10355d],cl
  416e81:	push   ss
  416e82:	inc    eax
  416e83:	out    0x9c,al
  416e85:	out    dx,al
  416e86:	push   cs
  416e87:	out    dx,eax
  416e88:	push   0xfffffff9
  416e8a:	push   eax
  416e8b:	push   esi
  416e8c:	xchg   ebx,eax
  416e8d:	in     eax,dx
  416e8e:	fst    QWORD PTR [ebx]
  416e90:	popf   
  416e91:	cld    
  416e92:	(bad)  
  416e93:	xchg   esp,eax
  416e94:	sub    eax,edx
  416e96:	mov    esi,0xc3e259bd
  416e9b:	mov    bh,0xa4
  416e9d:	mov    ah,0x80
  416e9f:	add    ebx,DWORD PTR [bp+di-0x17]
  416ea3:	adc    DWORD PTR [ebp-0x66],ebp
  416ea6:	leave  
  416ea7:	mov    cl,0x5c
  416ea9:	fwait
  416eaa:	cli    
  416eab:	mov    ecx,DWORD PTR [ebp-0x2b6fa404]
  416eb1:	mov    DWORD PTR [ecx-0x2d],edi
  416eb4:	js     0x416e88
  416eb6:	jmp    0x416e46
  416eb8:	lahf   
  416eb9:	(bad)  
  416eba:	sub    eax,0x5d49cf10
  416ebf:	mov    bh,0x4a
  416ec1:	jp     0x416e87
  416ec3:	push   ebx
  416ec4:	gs mov ebp,0x96152dac
  416eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ecb:	mov    ah,0xd4
  416ecd:	call   FWORD PTR [eax]
  416ecf:	nop
  416ed0:	outs   dx,BYTE PTR ds:[esi]
  416ed1:	lock (bad) 
  416ed3:	push   ebx
  416ed4:	sub    ecx,DWORD PTR fs:[eax+0x7f]
  416ed8:	bound  esi,QWORD PTR [ecx]
  416eda:	sahf   
  416edb:	or     bh,BYTE PTR [ecx+edx*1-0x1e53ee52]
  416ee2:	hlt    
  416ee3:	pop    edx
  416ee4:	stos   DWORD PTR es:[edi],eax
  416ee5:	pop    ss
  416ee6:	mov    eax,0xc3331fe1
  416eeb:	arpl   WORD PTR [esi-0x2319e728],bp
  416ef1:	inc    eax
  416ef2:	add    al,dh
  416ef4:	ret    0xbf3d
  416ef7:	xor    al,0xbe
  416ef9:	js     0x416ebe
  416efb:	xchg   DWORD PTR [ebx+edx*4-0x2e],ebx
  416eff:	mov    ebp,0x1c426df9
  416f04:	bnd jge 0x416ed4
  416f07:	test   BYTE PTR [edi-0x739b4425],0xa5
  416f0e:	dec    ebp
  416f0f:	jns    0x416ed3
  416f11:	inc    ebp
  416f12:	fisub  WORD PTR [esi+0x76]
  416f15:	fnsave [ebp-0x3a7fd266]
  416f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f1c:	(bad)  
  416f1d:	cmp    dh,BYTE PTR [esi]
  416f1f:	in     eax,0xbf
  416f21:	adc    DWORD PTR [esi-0x59325526],edi
  416f27:	das    
  416f28:	arpl   WORD PTR [ebx+0x64307af3],bx
  416f2e:	retf   
  416f2f:	adc    esp,DWORD PTR [eax+0x1724c1d3]
  416f35:	xlat   BYTE PTR ds:[ebx]
  416f36:	shl    cl,0x7a
  416f39:	sub    DWORD PTR [ecx+0x2f],edi
  416f3c:	push   eax
  416f3d:	call   0x47da4a04
  416f42:	inc    ebx
  416f43:	mov    DWORD PTR [ecx-0x52],eax
  416f46:	fidiv  WORD PTR [ecx+0x1bd62301]
  416f4c:	call   0xc0ab8eb7
  416f51:	pushf  
  416f52:	and    al,0x95
  416f54:	int3   
  416f55:	jb     0x416fad
  416f57:	aad    0xbb
  416f59:	cmp    ebp,DWORD PTR [edi]
  416f5b:	or     al,0x4d
  416f5d:	jns    0x416eec
  416f5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f60:	ds enter 0x82,0x17
  416f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f66:	or     al,0x9f
  416f68:	pop    ss
  416f69:	inc    eax
  416f6a:	pusha  
  416f6b:	(bad)  
  416f6c:	test   DWORD PTR [ebx+ebx*8+0x18],0x118a711a
  416f74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f75:	arpl   si,si
  416f77:	xor    edi,edx
  416f79:	in     eax,dx
  416f7a:	push   edx
  416f7b:	jne    0x416f49
  416f7d:	scas   eax,DWORD PTR es:[edi]
  416f7e:	leave  
  416f7f:	loope  0x416fa8
  416f81:	mov    ds:0x944ab88f,eax
  416f86:	jbe    0x416fdb
  416f88:	out    dx,eax
  416f89:	ror    cl,0x9c
  416f8c:	adc    eax,esp
  416f8e:	inc    eax
  416f8f:	icebp  
  416f90:	out    dx,al
  416f91:	pop    esi
  416f92:	sub    DWORD PTR [ebx+0x7f100f15],edx
  416f98:	addr16 xor ecx,eax
  416f9b:	int3   
  416f9c:	das    
  416f9d:	adc    cl,BYTE PTR [eax]
  416f9f:	test   eax,0x88c737f5
  416fa4:	mov    esp,DWORD PTR [ebx]
  416fa6:	xor    DWORD PTR es:[edi+ecx*1-0x3c7f1de9],0x51f81900
  416fb2:	inc    eax
  416fb3:	ins    DWORD PTR es:[edi],dx
  416fb4:	adc    eax,0x62f5ef62
  416fb9:	cli    
  416fba:	loope  0x416f97
  416fbc:	dec    edx
  416fbd:	int3   
  416fbe:	cld    
  416fbf:	sub    al,BYTE PTR [esi+0x3b1b1a92]
  416fc5:	jno    0x417019
  416fc7:	test   eax,0x98410fad
  416fcc:	scas   eax,DWORD PTR es:[edi]
  416fcd:	xor    eax,0xfe8e5a45
  416fd2:	inc    esi
  416fd3:	popf   
  416fd4:	inc    edi
  416fd5:	fwait
  416fd6:	aam    0x47
  416fd8:	cwde   
  416fd9:	enter  0x1e93,0x8d
  416fdd:	adc    BYTE PTR [ebx+0x4b],bl
  416fe0:	test   al,0x2b
  416fe2:	or     ebp,DWORD PTR [ebp-0x3dba8ccb]
  416fe8:	neg    DWORD PTR [edx-0x3b]
  416feb:	xor    cl,BYTE PTR [esi]
  416fed:	jmp    0x417030
  416fef:	fstp   QWORD PTR [ebx+0x24ef1263]
  416ff5:	mov    ?,WORD PTR [ebx]
  416ff7:	sbb    esi,DWORD PTR [eax+edx*2]
  416ffa:	cmp    eax,0x86cd2b4b
  416fff:	pop    edx
  417000:	sti    
  417001:	adc    ebp,0xc7fb2221
  417007:	and    al,BYTE PTR [edi+0x1d]
  41700a:	mov    eax,0xb2c461dc
  41700f:	mov    ah,0xf6
  417011:	das    
  417012:	cmp    eax,ebx
  417014:	std    
  417015:	rol    BYTE PTR [edi],1
  417017:	clc    
  417018:	and    esp,eax
  41701a:	sahf   
  41701b:	cli    
  41701c:	or     eax,0x231c6cdb
  417021:	mov    bl,0x9b
  417023:	mov    dh,0xe2
  417025:	adc    eax,0xe50fd12e
  41702a:	xor    al,BYTE PTR [edi]
  41702c:	pop    edi
  41702d:	ins    DWORD PTR es:[edi],dx
  41702e:	or     al,dh
  417030:	int    0x3c
  417032:	push   es
  417033:	test   DWORD PTR ds:0x489c68da,edx
  417039:	xchg   DWORD PTR [ecx-0x376fc836],esp
  41703f:	adc    BYTE PTR [edi+0x72],bh
  417042:	and    esp,DWORD PTR [ebp+0x573bd12]
  417048:	retf   
  417049:	jno    0x4170b8
  41704b:	ror    BYTE PTR [edx+0x9],1
  41704e:	test   eax,0x50059a22
  417053:	pop    esi
  417054:	lock and bl,al
  417057:	dec    esi
  417058:	add    ax,0xbff0
  41705c:	imul   ecx,DWORD PTR [ebx-0x28],0xdeac9533
  417063:	cwde   
  417064:	(bad)  
  417066:	sbb    eax,0x413c1709
  41706b:	xchg   esi,eax
  41706c:	stc    
  41706d:	popa   
  41706e:	inc    ecx
  41706f:	jne    0x417038
  417071:	(bad)  
  417072:	push   DWORD PTR [ebp+0x1]
  417075:	xchg   ebp,eax
  417076:	inc    edx
  417077:	xchg   esp,eax
  417078:	add    BYTE PTR [ebx+0x3],bl
  41707b:	mov    esi,0xa1359
  417080:	in     eax,dx
  417081:	push   0x262a1f62
  417086:	popa   
  417087:	sbb    eax,0xf66cb701
  41708c:	stc    
  41708d:	or     edx,DWORD PTR [esi+0x64]
  417090:	outs   dx,DWORD PTR ds:[esi]
  417091:	(bad)  
  417092:	pop    ds
  417093:	and    edx,DWORD PTR [ecx+0x66]
  417096:	imul   ebx,DWORD PTR [ecx-0x34],0x931b9668
  41709d:	data16 lahf 
  41709f:	adc    DWORD PTR ds:0xef4e3254,eax
  4170a5:	jns    0x417100
  4170a7:	(bad)  
  4170a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170a9:	add    BYTE PTR [ecx+0x6f18966d],bh
  4170af:	pop    eax
  4170b0:	push   ss
  4170b1:	or     ebp,DWORD PTR [esi-0x10]
  4170b4:	iret   
  4170b5:	jecxz  0x417090
  4170b7:	neg    BYTE PTR [ebp-0x24]
  4170ba:	and    BYTE PTR [esi+0x43],al
  4170bd:	sbb    DWORD PTR [edx+0x3af46e69],ebp
  4170c3:	aaa    
  4170c4:	int3   
  4170c5:	fcomp  st(5)
  4170c7:	bound  ecx,QWORD PTR [ecx+ebx*4-0x5b48f249]
  4170ce:	mov    cl,0xe3
  4170d0:	mov    ecx,0xf479afe
  4170d5:	ja     0x417114
  4170d7:	popf   
  4170d8:	fisttp DWORD PTR [edi+0x10]
  4170db:	push   ds
  4170dc:	and    dh,BYTE PTR [ebp-0x72]
  4170df:	xchg   edi,eax
  4170e0:	hlt    
  4170e1:	fdivr  DWORD PTR [ecx+0x69]
  4170e4:	push   edx
  4170e5:	jg     0x41710c
  4170e7:	jns    0x417092
  4170e9:	pop    ebx
  4170ea:	add    esp,esp
  4170ec:	jnp    0x417122
  4170ee:	call   0x5b56:0xed8e8252
  4170f5:	adc    al,0xa4
  4170f7:	popf   
  4170f8:	inc    esi
  4170f9:	out    dx,al
  4170fa:	mov    esi,0x7046d208
  4170ff:	dec    DWORD PTR [edx+0x4d405b2a]
  417105:	cdq    
  417106:	std    
  417107:	inc    esi
  417108:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417109:	dec    ebx
  41710a:	arpl   WORD PTR [esi],bp
  41710c:	int3   
  41710d:	and    ah,BYTE PTR [esi-0x680c7a29]
  417113:	(bad)  
  417115:	mov    edi,0xebebd2c1
  41711a:	or     esi,DWORD PTR [ecx+ebp*2+0x54]
  41711e:	stc    
  41711f:	shr    BYTE PTR [edi-0x79],cl
  417122:	xor    DWORD PTR ss:[ebx+edi*1],ebp
  417126:	inc    edi
  417127:	nop
  417128:	cli    
  417129:	or     ah,BYTE PTR [esi]
  41712b:	mov    esp,0x855fc2bf
  417130:	inc    eax
  417131:	cmp    eax,0xdbbb4aa9
  417136:	mov    bl,0xeb
  417138:	pop    ebx
  417139:	test   eax,0x59f5f601
  41713e:	shl    DWORD PTR [ecx+edi*4+0xdfdb3ee],0x0
  417146:	xlat   BYTE PTR ds:[ebx]
  417147:	and    edx,DWORD PTR [edi-0x13]
  41714a:	je     0x41718f
  41714c:	xor    BYTE PTR [ecx-0x66dab3a6],dh
  417152:	loope  0x4170ee
  417154:	pusha  
  417155:	(bad)  
  417156:	fisub  DWORD PTR [ecx]
  417158:	add    al,0xeb
  41715a:	rol    BYTE PTR [ecx+edi*8+0x479e3044],0x42
  417162:	mov    dh,0xb9
  417164:	sub    eax,DWORD PTR [ecx]
  417166:	xchg   edx,eax
  417167:	xor    edi,DWORD PTR [edx+0x45]
  41716a:	int3   
  41716b:	pop    esi
  41716c:	lds    edx,FWORD PTR [ebp+0x13eec976]
  417172:	(bad)  
  417173:	outs   dx,DWORD PTR ds:[esi]
  417174:	or     bl,BYTE PTR [edx+eax*4]
  417177:	push   ds
  417178:	(bad)  
  417179:	jge    0x417151
  41717b:	xor    eax,DWORD PTR [edx-0x425697ab]
  417181:	sbb    bl,BYTE PTR [eax+eax*2+0x34]
  417185:	mov    edi,0x14b2cae5
  41718a:	je     0x41718c
  41718c:	scas   eax,DWORD PTR es:[edi]
  41718d:	cli    
  41718e:	cs (bad) 
  417190:	clc    
  417191:	xchg   ebp,eax
  417192:	mov    esi,0x8d68b48d
  417197:	dec    esp
  417198:	sub    BYTE PTR [esi],ah
  41719a:	or     eax,0xe8c5ad3c
  41719f:	mov    edi,0x7eb7a2ae
  4171a4:	cdq    
  4171a5:	sub    edi,0xdf5d3d8a
  4171ab:	leave  
  4171ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4171ad:	jns    0x417196
  4171af:	sub    al,bh
  4171b1:	cli    
  4171b2:	les    ebx,FWORD PTR [ebx]
  4171b4:	lods   eax,DWORD PTR ds:[esi]
  4171b5:	rol    BYTE PTR [esi+0x1127e5aa],1
  4171bb:	in     eax,dx
  4171bc:	pop    ebp
  4171bd:	cmp    eax,0x3f5dd8db
  4171c2:	or     eax,0x51ce8db
  4171c7:	aas    
  4171c8:	outs   dx,BYTE PTR ds:[esi]
  4171c9:	jns    0x4171f8
  4171cb:	add    edx,edi
  4171cd:	push   eax
  4171ce:	fld    DWORD PTR cs:[ecx+edi*8]
  4171d2:	ins    BYTE PTR es:[edi],dx
  4171d3:	and    edi,esp
  4171d5:	in     al,dx
  4171d6:	shl    BYTE PTR [ecx],1
  4171d8:	js     0x41720e
  4171da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171db:	adc    DWORD PTR [ecx+ebx*8+0x5],0x7d
  4171e0:	add    cl,BYTE PTR [eax]
  4171e2:	push   ebx
  4171e3:	ins    BYTE PTR es:[edi],dx
  4171e4:	push   ds
  4171e5:	sub    BYTE PTR [edi+0x3],ah
  4171e8:	mov    bl,0x80
  4171ea:	add    bh,cl
  4171ec:	push   esi
  4171ed:	xchg   ebp,eax
  4171ee:	jg     0x41717a
  4171f0:	mov    ebp,0xdfa5382d
  4171f5:	mov    bl,0xda
  4171f7:	xchg   ebx,eax
  4171f8:	inc    esi
  4171f9:	hlt    
  4171fa:	mov    BYTE PTR [edi],dh
  4171fc:	hlt    
  4171fd:	shl    ebx,0x1d
  417200:	sahf   
  417201:	(bad)  
  417202:	stc    
  417203:	push   esi
  417204:	sti    
  417205:	add    bl,BYTE PTR [ebx]
  417207:	push   ecx
  417208:	iret   
  417209:	or     DWORD PTR [eax-0x1ce6f8b9],ebp
  41720f:	imul   esp,DWORD PTR [edx+0x73],0xe7f74532
  417216:	retf   
  417217:	(bad)  
  417218:	pop    ss
  417219:	cmp    al,0xfd
  41721b:	jecxz  0x4171f8
  41721d:	fcom   DWORD PTR [ecx+0x37]
  417220:	test   BYTE PTR ds:0xd42c1130,ah
  417226:	adc    BYTE PTR [esp+ecx*4+0x460009f],dh
  41722d:	pop    edi
  41722e:	push   es
  41722f:	or     edi,0xfa138556
  417235:	outs   dx,DWORD PTR ds:[esi]
  417236:	sbb    eax,0x25498c60
  41723b:	hlt    
  41723c:	jae    0x417288
  41723e:	pop    ss
  41723f:	xchg   edi,eax
  417240:	jmp    0xd11a:0x67eac66
  417247:	mov    eax,ds:0x9cfd45f0
  41724c:	pop    edx
  41724d:	cmp    dl,bl
  41724f:	in     al,0x16
  417251:	pop    esp
  417252:	out    0xf2,al
  417254:	stc    
  417255:	or     edi,DWORD PTR [eax+0x711ada93]
  41725b:	sbb    DWORD PTR ds:0xeaedae64,edi
  417261:	mov    al,ds:0x8f2d2c7b
  417266:	pop    eax
  417267:	jp     0x4171fc
  417269:	and    bh,BYTE PTR [ebx+0x59]
  41726c:	call   0x4a6b:0xa1b3bd4e
  417273:	mov    esi,0x722ff161
  417278:	sub    eax,0xb986f3bc
  41727d:	dec    ecx
  41727e:	stos   DWORD PTR es:[edi],eax
  41727f:	push   edx
  417280:	repnz test cl,cl
  417283:	aas    
  417284:	xchg   edx,eax
  417285:	(bad)
  41728a:	cli    
  41728b:	ret    
  41728c:	sbb    DWORD PTR [esi+0x1a58a1d9],esi
  417292:	stos   DWORD PTR es:[edi],eax
  417293:	rcr    BYTE PTR [ebx-0x3],1
  417296:	fadd   QWORD PTR [ecx-0x64c9f6d7]
  41729c:	retf   0xd403
  41729f:	cli    
  4172a0:	push   ss
  4172a1:	int3   
  4172a2:	pop    esp
  4172a3:	cwde   
  4172a4:	jmp    0x417227
  4172a6:	or     esp,DWORD PTR [ecx]
  4172a8:	pop    ds
  4172a9:	repnz stos DWORD PTR es:[edi],eax
  4172ab:	in     al,0x46
  4172ad:	cmc    
  4172ae:	xchg   ecx,eax
  4172af:	cmp    ecx,DWORD PTR [ebp-0x3b7b655d]
  4172b5:	add    bh,ch
  4172b7:	push   esi
  4172b8:	xor    al,0x7f
  4172ba:	push   esi
  4172bb:	jno    0x417257
  4172bd:	and    al,0x60
  4172bf:	push   esp
  4172c0:	into   
  4172c1:	mov    ebx,0x63aca6db
  4172c6:	and    esi,DWORD PTR [eax+0x6c]
  4172c9:	stos   DWORD PTR es:[edi],eax
  4172ca:	retf   
  4172cb:	cdq    
  4172cc:	int3   
  4172cd:	in     eax,dx
  4172ce:	adc    BYTE PTR [ecx+0x5e],0xb0
  4172d2:	cmp    al,0x1e
  4172d4:	and    DWORD PTR [edx],0xa8fbbae3
  4172da:	test   al,0xc1
  4172dc:	lods   eax,DWORD PTR ds:[esi]
  4172dd:	xor    DWORD PTR [esi],eax
  4172df:	and    ebp,edx
  4172e1:	nop
  4172e2:	push   ss
  4172e3:	in     al,dx
  4172e4:	fist   DWORD PTR [edx-0x59aa1ad]
  4172ea:	xlat   BYTE PTR ss:[ebx]
  4172ec:	xchg   ecx,eax
  4172ed:	jmp    0xfbfb1882
  4172f2:	push   0xffffffed
  4172f4:	je     0x4172b9
  4172f6:	loope  0x417336
  4172f8:	jae    0x4172e0
  4172fa:	mov    ebp,0xbeee5b15
  4172ff:	int    0x49
  417301:	fdiv   QWORD PTR [edx]
  417303:	sub    dh,BYTE PTR [ebp+0x453c8c05]
  417309:	pop    ebx
  41730a:	add    BYTE PTR [ebp+0x653aa8c9],ah
  417310:	inc    ebp
  417311:	cmp    BYTE PTR [eax],bl
  417313:	mov    edx,0x5b125fcc
  417318:	push   edi
  417319:	lock pop edi
  41731b:	fcomp  DWORD PTR [eax-0x153725c9]
  417321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417322:	jno    0x4172b5
  417324:	dec    edi
  417325:	mov    cl,0x42
  417327:	test   BYTE PTR ds:0xc4895f39,al
  41732d:	dec    esi
  41732e:	jne    0x417340
  417330:	jecxz  0x417358
  417332:	aam    0x30
  417334:	xor    edi,DWORD PTR [edi+0x2a4c97df]
  41733a:	jecxz  0x417356
  41733c:	hlt    
  41733d:	mov    dl,0xcf
  41733f:	dec    eax
  417340:	aam    0x69
  417342:	jmp    0x417354
  417344:	xchg   edx,eax
  417345:	sahf   
  417346:	std    
  417347:	sbb    eax,0x754a8111
  41734c:	xchg   ebx,eax
  41734d:	pop    eax
  41734e:	icebp  
  41734f:	sbb    ebp,0x33b226e1
  417355:	loope  0x417317
  417357:	addr16 jmp 0xa015:0x90880467
  41735f:	clc    
  417360:	mov    dh,0x31
  417362:	xchg   BYTE PTR [ecx-0x75f967bc],ah
  417368:	ss inc eax
  41736a:	push   ds
  41736b:	call   0xd0905a65
  417370:	retf   0xeaab
  417373:	(bad)
  417378:	aaa    
  417379:	push   eax
  41737a:	lahf   
  41737b:	cmp    ah,BYTE PTR [ecx-0x5fa0b7a6]
  417381:	shr    ah,cl
  417383:	scas   eax,DWORD PTR es:[edi]
  417384:	test   bh,ah
  417386:	push   eax
  417387:	cli    
  417388:	sub    DWORD PTR [esi-0x348af32],0x3d
  41738f:	push   cs
  417390:	clc    
  417391:	mov    fs,WORD PTR [eax-0x67]
  417394:	mov    cl,0x9e
  417396:	mov    dl,0x66
  417398:	or     bh,BYTE PTR [esi+ebx*4-0x677db471]
  41739f:	jl     0x4173ad
  4173a1:	and    bh,bh
  4173a3:	xchg   esi,eax
  4173a4:	pop    esp
  4173a5:	ror    BYTE PTR ds:0x55bddf04,cl
  4173ab:	lahf   
  4173ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173ad:	out    dx,eax
  4173ae:	push   edx
  4173af:	push   ss
  4173b0:	add    DWORD PTR [edi+0x31],edi
  4173b3:	(bad)  
  4173b7:	and    eax,0xf67ac900
  4173bc:	test   al,0x75
  4173be:	push   ss
  4173bf:	xchg   DWORD PTR [eax],ebp
  4173c1:	mov    esi,0xaad783af
  4173c6:	loopne 0x417380
  4173c8:	fwait
  4173c9:	cwde   
  4173ca:	dec    bx
  4173cc:	jns    0x4173de
  4173ce:	push   es
  4173cf:	mov    ecx,0x11d0ea86
  4173d4:	in     eax,0x93
  4173d6:	test   DWORD PTR [edi],esi
  4173d8:	xchg   ebp,eax
  4173d9:	call   0xe1fd6da3
  4173de:	jae    0x417362
  4173e0:	clc    
  4173e1:	stos   DWORD PTR es:[edi],eax
  4173e2:	mov    cl,0x4c
  4173e4:	push   ds
  4173e5:	xor    esi,DWORD PTR [esi+edx*2]
  4173e8:	lahf   
  4173e9:	dec    eax
  4173ea:	sbb    ebp,DWORD PTR [ebx+0x11]
  4173ed:	pop    ds
  4173ee:	xchg   ecx,eax
  4173ef:	dec    ebx
  4173f0:	cmc    
  4173f1:	nop
  4173f2:	loope  0x417384
  4173f4:	arpl   WORD PTR [edx+eax*2-0x4e],sp
  4173f8:	cmp    al,0x41
  4173fa:	imul   edi,DWORD PTR [edi+0x62],0xfffffff1
  4173fe:	data16 jp 0x417444
  417401:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  417403:	mov    eax,DWORD PTR [ebx-0x7c]
  417406:	les    eax,FWORD PTR [edx+0x72]
  417409:	inc    eax
  41740a:	ja     0x417451
  41740c:	pop    esp
  41740d:	pop    ebp
  41740e:	pop    esp
  41740f:	mov    edx,fs
  417411:	aam    0x57
  417413:	inc    edx
  417414:	inc    ebp
  417415:	cdq    
  417416:	mov    edi,0xb87ec21d
  41741b:	mov    edx,0x7e17454f
  417420:	rcr    esp,cl
  417422:	in     eax,0xf0
  417424:	cli    
  417425:	iret   
  417426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417427:	pop    esp
  417428:	cli    
  417429:	ds out dx,eax
  41742b:	test   eax,0x6623f081
  417430:	pop    ebp
  417431:	outs   dx,DWORD PTR ds:[esi]
  417432:	es out 0x52,eax
  417435:	jno    0x417489
  417437:	and    dl,cl
  417439:	cmp    eax,0xfe6b00d0
  41743e:	es test eax,0xc7e0ee2d
  417444:	lods   eax,DWORD PTR ds:[esi]
  417445:	std    
  417446:	aaa    
  417447:	xor    eax,0x1afb9d36
  41744c:	bound  ebp,QWORD PTR [ebx]
  41744e:	jle    0x41742d
  417450:	dec    ecx
  417451:	jl     0x4174c8
  417453:	xchg   edi,eax
  417454:	adc    eax,0xbfd7f20f
  417459:	bound  edx,QWORD PTR [ebp-0x165d1e93]
  41745f:	pop    esp
  417460:	jecxz  0x417414
  417462:	sub    bl,BYTE PTR [edx-0x14]
  417465:	aas    
  417466:	and    edi,DWORD PTR [ebx+0x1a9f6244]
  41746c:	out    dx,al
  41746d:	mov    al,0x6a
  41746f:	xchg   ebx,eax
  417470:	loopne 0x41741e
  417472:	jle    0x41747e
  417474:	xchg   esp,eax
  417475:	mov    ah,BYTE PTR [eax-0x1d345465]
  41747b:	mov    bh,0x6d
  41747d:	(bad)  
  41747e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41747f:	mov    ah,0xa0
  417481:	add    BYTE PTR [edx+0x72fe922f],bh
  417487:	les    edi,FWORD PTR ds:0xe93e1599
  41748d:	shl    DWORD PTR [edi+0x39f6990e],1
  417493:	in     al,0x6c
  417495:	pop    eax
  417496:	mov    ds:0x7de14bb1,eax
  41749b:	lods   al,BYTE PTR ds:[esi]
  41749c:	mov    esi,0x3f6d8f55
  4174a1:	mov    ds:0xaf523e43,eax
  4174a6:	inc    esi
  4174a7:	test   al,0x84
  4174a9:	adc    ah,BYTE PTR [ecx]
  4174ab:	and    bl,bh
  4174ad:	dec    ebx
  4174ae:	lock adc BYTE PTR [ebp-0x6ba8848],0xe8
  4174b6:	pop    eax
  4174b7:	cdq    
  4174b8:	ror    BYTE PTR [esi-0x7e],cl
  4174bb:	or     DWORD PTR [esi],esi
  4174bd:	cmp    DWORD PTR [eax+0x5d],0xffffff94
  4174c1:	dec    edi
  4174c2:	jo     0x4174c4
  4174c4:	mov    al,0x27
  4174c6:	(bad)  [edx]
  4174c8:	int3   
  4174c9:	scas   eax,DWORD PTR es:[edi]
  4174ca:	jne    0x417495
  4174cc:	clc    
  4174cd:	add    edx,edx
  4174cf:	mov    WORD PTR [ebp-0x4e],cs
  4174d2:	ds (bad) 
  4174d4:	cmp    ebx,esi
  4174d6:	pop    edx
  4174d7:	fwait
  4174d8:	jmp    0x4174cd
  4174da:	popa   
  4174db:	or     eax,0x730ccbd6
  4174e0:	push   ecx
  4174e1:	mov    ebx,0x20b116df
  4174e6:	inc    edx
  4174e7:	scas   eax,DWORD PTR es:[edi]
  4174e8:	repz fs shl ebx,0x9f
  4174ed:	push   es
  4174ee:	or     ebx,DWORD PTR [ecx]
  4174f0:	sub    cl,dl
  4174f2:	adc    BYTE PTR ds:[ecx-0x54f5725c],0x7c
  4174fa:	xchg   BYTE PTR [ebp+0x7bf6f8cb],bl
  417500:	mov    esi,DWORD PTR [esi]
  417502:	pop    ebx
  417503:	imul   eax,DWORD PTR [ebx-0x3232f85],0x37559ae1
  41750d:	xor    ch,cl
  41750f:	sbb    edx,ebx
  417511:	mov    BYTE PTR [edi],ch
  417513:	push   esp
  417514:	in     al,0x6b
  417516:	xchg   esp,eax
  417517:	mov    dl,0xa4
  417519:	jle    0x417566
  41751b:	in     al,dx
  41751c:	cmp    BYTE PTR [eax],ch
  41751e:	cmp    DWORD PTR [edi-0x52],ebp
  417521:	xlat   BYTE PTR ds:[ebx]
  417522:	sbb    al,0xed
  417524:	test   DWORD PTR cs:[edx],ebx
  417527:	jne    0x417525
  417529:	inc    ecx
  41752a:	mov    ebp,0x636a1c2
  41752f:	sbb    BYTE PTR [ebp-0x5e0f6b90],bh
  417535:	sbb    eax,DWORD PTR [edi]
  417537:	int    0x48
  417539:	jno    0x4174f8
  41753b:	shl    esp,0xf3
  41753e:	imul   esi,DWORD PTR [edx-0x4191823e],0xfffffffc
  417545:	shl    edi,1
  417547:	sbb    DWORD PTR [edx+eax*1],esi
  41754a:	mov    bh,0x4b
  41754c:	sub    DWORD PTR [edx],edx
  41754e:	xchg   edx,eax
  41754f:	or     eax,0xd5971ac
  417554:	jne    0x4175a2
  417556:	jne    0x4175b2
  417558:	(bad)  
  417559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41755a:	scas   al,BYTE PTR es:[di]
  41755c:	adc    eax,0xc1fdc44f
  417561:	ficomp WORD PTR [ecx+0x3d7bfd80]
  417567:	and    al,0x6
  417569:	sbb    eax,0x14317148
  41756e:	std    
  41756f:	out    0x87,eax
  417571:	mov    bh,BYTE PTR ds:0x8635e42c
  417577:	push   cs
  417578:	sbb    BYTE PTR [eax],bl
  41757a:	hlt    
  41757b:	ret    0x6300
  41757e:	xlat   BYTE PTR ds:[ebx]
  41757f:	or     al,0x63
  417581:	stos   DWORD PTR es:[edi],eax
  417582:	(bad)  
  417583:	push   ebp
  417584:	in     al,dx
  417585:	nop
  417586:	rol    BYTE PTR [edi-0x695a2c31],1
  41758c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758d:	(bad)  
  41758e:	mov    WORD PTR [eax],cs
  417590:	js     0x417524
  417592:	dec    ebx
  417593:	lahf   
  417594:	ins    DWORD PTR es:[edi],dx
  417595:	je     0x4175ab
  417597:	dec    eax
  417598:	push   ebx
  417599:	mov    al,ds:0x67b0f3b
  41759e:	mov    ds:0x8f83534d,al
  4175a3:	mov    eax,DWORD PTR [eax+eiz*1+0x56cea590]
  4175aa:	fs inc ebp
  4175ac:	popf   
  4175ad:	add    ecx,DWORD PTR [esp+eiz*4-0x769ac06]
  4175b4:	xor    edx,DWORD PTR [ebp+0x67]
  4175b7:	adc    eax,DWORD PTR [ebx+0x11]
  4175ba:	mov    bh,0x32
  4175bc:	mov    eax,ds:0xa3e53c4d
  4175c1:	scas   eax,DWORD PTR es:[edi]
  4175c2:	push   ds
  4175c3:	xchg   esi,eax
  4175c4:	addr16 xchg edi,eax
  4175c6:	sbb    DWORD PTR [edi-0x1e],edx
  4175c9:	and    ch,BYTE PTR [ecx+0x2d]
  4175cc:	xor    bl,BYTE PTR [edi+0xdfa694e]
  4175d2:	jno    0x4175a4
  4175d4:	shr    BYTE PTR [ecx],1
  4175d6:	mov    dl,0xda
  4175d8:	imul   edx,DWORD PTR [ebx+0xff8d50d],0x1d
  4175df:	cwde   
  4175e0:	push   esi
  4175e1:	dec    esp
  4175e2:	loop   0x4175eb
  4175e4:	xchg   esi,eax
  4175e5:	dec    ecx
  4175e6:	jb     0x4175eb
  4175e8:	sbb    eax,0x90dd15ee
  4175ed:	add    al,0xb7
  4175ef:	ins    DWORD PTR es:[edi],dx
  4175f0:	mov    ch,0x79
  4175f2:	mov    esi,0xea2eccd1
  4175f7:	fnstcw WORD PTR [ecx-0x1240b1cf]
  4175fd:	sar    esp,cl
  4175ff:	popa   
  417600:	fdivp  st(1),st
  417602:	adc    eax,0x77c914fe
  417607:	pusha  
  417608:	add    edi,DWORD PTR [ebx]
  41760a:	dec    edi
  41760b:	jp     0x417670
  41760d:	push   eax
  41760e:	(bad)  
  41760f:	into   
  417610:	add    eax,0xdc9337a6
  417615:	scas   al,BYTE PTR es:[edi]
  417616:	out    dx,al
  417617:	mov    cl,0x38
  417619:	out    0x59,al
  41761b:	cmp    DWORD PTR [ecx-0x40],0x76
  41761f:	outs   dx,DWORD PTR ds:[esi]
  417620:	adc    DWORD PTR [edi+0x49],edi
  417623:	fmul   QWORD PTR [edi+0x42]
  417626:	dec    edi
  417627:	push   edx
  417628:	mov    bl,0xfa
  41762a:	int3   
  41762b:	ds pop ebx
  41762d:	cli    
  41762e:	je     0x4175b3
  417630:	ins    DWORD PTR es:[edi],dx
  417631:	adc    DWORD PTR [ebp+0x437e152d],eax
  417637:	inc    ecx
  417638:	jmp    0xf214:0x74fb0f40
  41763f:	xchg   esp,eax
  417640:	leave  
  417641:	clc    
  417642:	pop    ebx
  417643:	aaa    
  417644:	sbb    ecx,ebx
  417646:	mov    al,ds:0xe7535e92
  41764b:	icebp  
  41764c:	adc    ecx,DWORD PTR [ecx-0x468a1d2a]
  417652:	mov    ah,0xe2
  417654:	sub    ah,dl
  417656:	ds rol BYTE PTR fs:[edx+ebx*4+0x2c],cl
  41765c:	jmp    0xf447:0x53da2cc
  417663:	imul   ecx,DWORD PTR gs:[edi+0x3f],0xffffff81
  417668:	cli    
  417669:	and    bl,BYTE PTR [esi+0x4b]
  41766c:	ds sti 
  41766e:	pop    ebx
  41766f:	push   esp
  417670:	sahf   
  417671:	loop   0x41766f
  417673:	loopne 0x4176be
  417675:	(bad)  
  417676:	pop    edi
  417677:	call   0x9aed0520
  41767c:	pop    ds
  41767d:	jb     0x417677
  41767f:	add    al,0x2f
  417681:	cmp    eax,0x37dc32e7
  417686:	adc    edi,DWORD PTR [ebx+0x20f1663d]
  41768c:	lods   eax,DWORD PTR ds:[esi]
  41768d:	inc    eax
  41768e:	and    eax,0x9608854e
  417693:	neg    DWORD PTR [edi-0xf909c59]
  417699:	imul   ebp,esi,0x8838545f
  41769f:	jae    0x417639
  4176a1:	imul   ebp,DWORD PTR [edx-0x68],0xb3c5112
  4176a8:	arpl   WORD PTR [edx],si
  4176aa:	aas    
  4176ab:	mov    WORD PTR ds:0xdac21112,cs
  4176b1:	mov    bl,0x6d
  4176b3:	pop    esi
  4176b4:	mov    ecx,0x21d94a32
  4176b9:	mov    ds:0x41d2fa8e,al
  4176be:	push   ss
  4176bf:	call   0x43aa306c
  4176c4:	pop    edi
  4176c5:	xchg   ebp,eax
  4176c6:	cwde   
  4176c7:	xor    eax,0xa6f178f
  4176cc:	add    eax,0x993a0ad9
  4176d1:	or     ch,ah
  4176d3:	jae    0x4176d3
  4176d5:	pop    eax
  4176d6:	mov    cl,0x50
  4176d8:	sbb    DWORD PTR [ecx+0x1f],eax
  4176db:	inc    edi
  4176dc:	cli    
  4176dd:	pop    edi
  4176de:	iret   
  4176df:	xor    DWORD PTR [ebx+0x25],ecx
  4176e2:	retf   
  4176e3:	dec    edi
  4176e4:	jae    0x417702
  4176e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176e7:	jg     0x417726
  4176e9:	addr16 out 0xe8,eax
  4176ec:	sbb    dl,BYTE PTR [eax-0x7a]
  4176ef:	jle    0x41769f
  4176f1:	nop
  4176f2:	cld    
  4176f3:	fistp  DWORD PTR ss:[ebx]
  4176f6:	pextrw edi,(bad),0xc5
  4176f8:	cmp    al,0xd7
  4176fa:	dec    BYTE PTR [ecx]
  4176fc:	call   0xa25f:0xdf22c923
  417703:	mov    ds:0x16821f96,al
  417708:	ror    BYTE PTR [esi+0x19],0x30
  41770c:	aas    
  41770d:	lods   al,BYTE PTR ds:[esi]
  41770e:	inc    eax
  41770f:	jbe    0x417768
  417711:	cmp    edx,DWORD PTR [edi+0x206f7d95]
  417717:	loopne 0x4176fc
  417719:	adc    BYTE PTR [ebx+ebx*4],0xac
  41771d:	dec    ebp
  41771e:	retf   0xcf20
  417721:	mov    ds:0x941e7002,eax
  417726:	or     al,0x84
  417728:	xchg   ebx,eax
  417729:	xor    eax,0x8976c7a9
  41772e:	loope  0x4176b9
  417730:	ret    
  417731:	add    eax,0xffffffdb
  417734:	mov    ds,WORD PTR fs:[esi-0x35]
  417738:	scas   al,BYTE PTR es:[edi]
  417739:	lock rcr BYTE PTR [esi+edi*4],1
  41773d:	pusha  
  41773e:	out    dx,al
  41773f:	mov    esp,0x940d32d0
  417744:	push   esi
  417745:	addr16 dec ebx
  417747:	and    bl,cl
  417749:	push   es
  41774a:	add    BYTE PTR [ecx+0x24a48eaa],dl
  417750:	enter  0xe655,0xdc
  417754:	xchg   esp,eax
  417755:	neg    DWORD PTR [eax]
  417757:	jae    0x4176f5
  417759:	aad    0xf1
  41775b:	sbb    ah,dh
  41775d:	pop    ds
  41775e:	popf   
  41775f:	dec    edx
  417760:	mov    eax,ds:0x57343521
  417765:	cli    
  417766:	cmp    al,BYTE PTR [eax+0x4d689eb6]
  41776c:	into   
  41776d:	inc    esp
  41776e:	or     BYTE PTR [esp+ebx*1],bh
  417771:	sbb    al,BYTE PTR [esi+eax*4-0x63]
  417775:	cmp    BYTE PTR [ecx+0x63],bh
  417778:	inc    eax
  417779:	int    0xc4
  41777b:	cwde   
  41777c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41777d:	shl    BYTE PTR [ebx+esi*2],0x8
  417781:	cmp    DWORD PTR [ebp-0x4f],ebx
  417784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417785:	jno    0x4177f8
  417787:	and    edi,ebp
  417789:	repz scas eax,DWORD PTR es:[edi]
  41778b:	cs push cs
  41778d:	inc    esp
  41778e:	dec    edx
  41778f:	out    dx,al
  417790:	push   esp
  417791:	ror    BYTE PTR ds:0x4b7cdcf2,0x5f
  417798:	pop    eax
  417799:	and    dl,BYTE PTR ds:0xc49e8a9d
  41779f:	shl    BYTE PTR [ebx-0x14f844b5],cl
  4177a5:	call   0x51ab:0x10a1ecb0
  4177ac:	leave  
  4177ad:	inc    edi
  4177af:	loopne 0x417790
  4177b1:	gs jl  0x41773f
  4177b4:	xor    dh,BYTE PTR [ecx+0x77f9fb03]
  4177ba:	jecxz  0x41777b
  4177bc:	push   esi
  4177bd:	jmp    0x36da:0xc9b08ec5
  4177c4:	sbb    dl,dl
  4177c6:	sti    
  4177c7:	pop    eax
  4177c8:	sti    
  4177c9:	mov    eax,ds:0x1d1136f6
  4177ce:	or     dh,bl
  4177d0:	or     ah,BYTE PTR [ecx+0x3f]
  4177d3:	mov    ebx,0x519d413f
  4177d8:	leave  
  4177d9:	cmp    eax,0xd262004e
  4177de:	mov    DWORD PTR [esi-0x3a6bf253],ebx
  4177e4:	retf   
  4177e5:	jo     0x41785b
  4177e7:	xchg   esp,ebp
  4177e9:	test   ax,0xdfa7
  4177ed:	cwde   
  4177ee:	popa   
  4177ef:	jmp    0x6bd86c39
  4177f4:	mov    ebx,0x3267eeaf
  4177f9:	inc    ecx
  4177fa:	jb     0x4177c5
  4177fc:	rol    ah,0x55
  4177ff:	adc    edi,DWORD PTR [ebp+0x1a56a770]
  417805:	sub    bh,ch
  417807:	int3   
  417808:	pop    esp
  417809:	sahf   
  41780a:	mov    ds:0x9696c52c,eax
  41780f:	cmp    esi,DWORD PTR [esi+0x31]
  417812:	jns    0x4177b4
  417814:	mov    edi,0x8f7364df
  417819:	int3   
  41781a:	add    dh,BYTE PTR [esi+0x26]
  41781d:	cmp    eax,0x4a055c69
  417822:	ficom  DWORD PTR [ecx]
  417824:	daa    
  417825:	hlt    
  417826:	push   edx
  417827:	or     cl,bh
  417829:	mov    ds:0xaaa4dfe5,ax
  41782f:	cs (bad) 
  417831:	jmp    0x812f:0xeabe92b7
  417838:	ja     0x417890
  41783a:	arpl   WORD PTR [edi],bp
  41783c:	iret   
  41783d:	inc    edi
  41783e:	sbb    al,0xf5
  417840:	xchg   DWORD PTR [ebp+0x17],esp
  417843:	push   esp
  417844:	lds    eax,FWORD PTR cs:[esi-0x1b80e942]
  41784b:	or     al,0x37
  41784d:	mov    eax,ds:0xfe1842e9
  417852:	test   al,0x6f
  417854:	and    eax,DWORD PTR [ecx]
  417856:	and    DWORD PTR [eax],ebx
  417858:	pop    ebx
  417859:	iret   
  41785a:	xchg   ecx,eax
  41785b:	es (bad) 
  41785d:	pop    ebp
  41785e:	mov    eax,0x97ff29c4
  417863:	cld    
  417864:	add    al,0x61
  417866:	les    ebp,FWORD PTR [esi-0x16]
  417869:	imul   ebx,DWORD PTR [ecx],0x36
  41786c:	ds sbb eax,0x3fbb6855
  417872:	fmul   QWORD PTR ss:[eax+0x5acc2b53]
  417879:	adc    ebx,0xffffff9f
  41787c:	call   0x82404fb9
  417881:	ja     0xf650d3a
  417887:	nop
  417888:	mov    ebp,0xbc022fd7
  41788d:	or     al,0xf0
  41788f:	ret    0xca20
  417892:	mov    esp,0x375a9541
  417897:	neg    BYTE PTR [ecx-0x3a]
  41789a:	push   ds
  41789b:	out    0x7,al
  41789d:	lds    ecx,FWORD PTR [edx+ebp*1]
  4178a0:	jno    0x417884
  4178a2:	jmp    0xbd023028
  4178a7:	fld    st(6)
  4178a9:	adc    al,0x5e
  4178ab:	les    esi,FWORD PTR [eax-0x80]
  4178ae:	jnp    0x90926fe5
  4178b4:	and    al,bl
  4178b6:	outs   dx,BYTE PTR ds:[esi]
  4178b7:	aas    
  4178b8:	idiv   DWORD PTR [eax-0x4f]
  4178bb:	add    dh,BYTE PTR [esi-0x75071a9b]
  4178c1:	xchg   ecx,eax
  4178c2:	adc    ecx,ebp
  4178c4:	inc    edi
  4178c5:	lahf   
  4178c6:	lock sbb cl,cl
  4178c9:	loopne 0x41791d
  4178cb:	out    dx,eax
  4178cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178cd:	aam    0xf7
  4178cf:	in     eax,0xa8
  4178d1:	into   
  4178d2:	mov    esi,esp
  4178d4:	int    0x2a
  4178d6:	and    BYTE PTR [ebx+0x138238c0],ch
  4178dc:	jle    0x41793d
  4178de:	out    dx,al
  4178df:	jl     0x4178b2
  4178e1:	cli    
  4178e2:	std    
  4178e3:	jb     0x417958
  4178e5:	aas    
  4178e6:	sti    
  4178e7:	inc    ebp
  4178e8:	sbb    BYTE PTR [edx-0x30b343a1],dh
  4178ee:	sbb    al,0x85
  4178f0:	(bad)  
  4178f1:	clc    
  4178f2:	sbb    ah,BYTE PTR [ebp-0x48]
  4178f5:	sub    ecx,DWORD PTR [ecx+0x24]
  4178f8:	int3   
  4178f9:	dec    DWORD PTR [ebx+0x7aa6ecf3]
  4178ff:	je     0x4178fa
  417901:	stc    
  417902:	mov    edx,0xe52cdd30
  417907:	fisub  WORD PTR [eax]
  417909:	adc    ah,cl
  41790b:	call   DWORD PTR [esi+0x6ca927de]
  417911:	gs ins DWORD PTR es:[edi],dx
  417913:	jbe    0x417953
  417915:	push   ss
  417916:	mov    dl,0x48
  417918:	fs inc edx
  41791a:	aas    
  41791b:	jo     0x4178db
  41791d:	inc    ebx
  41791e:	xchg   ebp,eax
  41791f:	outs   dx,DWORD PTR ds:[esi]
  417920:	mov    ecx,0x3482276d
  417925:	js     0x417908
  417927:	out    0xb2,al
  417929:	jmp    0x4ece:0x6d6599b5
  417930:	lods   eax,DWORD PTR ds:[esi]
  417931:	adc    al,0xf
  417933:	mul    DWORD PTR [eax+0x3647cf62]
  417939:	cmp    BYTE PTR [eax+0x137a8e13],ch
  41793f:	pop    fs
  417941:	out    0x7d,eax
  417943:	xor    esp,DWORD PTR [edi+0x100131ca]
  417949:	cs add cl,ah
  41794c:	cmp    BYTE PTR [edx+0x66],al
  41794f:	mov    esp,0xab3a87e0
  417954:	add    eax,0xc9ef87be
  417959:	repnz adc ebx,DWORD PTR [ebp+0x25]
  41795d:	mov    ebp,0x7f676ebc
  417962:	paddw  mm1,QWORD PTR [eax-0x49]
  417966:	out    dx,al
  417967:	dec    ebp
  417968:	and    eax,0x8a84f639
  41796d:	cmp    DWORD PTR [eax-0x2136a454],0x3e
  417974:	stos   BYTE PTR es:[edi],al
  417975:	js     0x41794a
  417977:	in     al,dx
  417978:	adc    dl,BYTE PTR [esi+0x26]
  41797b:	lods   al,BYTE PTR ds:[esi]
  41797c:	inc    eax
  41797d:	cli    
  41797e:	cmp    ch,cl
  417980:	lods   eax,DWORD PTR ds:[esi]
  417981:	sbb    esi,DWORD PTR [esi]
  417983:	inc    edx
  417984:	mov    edx,0x36939a97
  417989:	ds stos BYTE PTR es:[edi],al
  41798b:	or     eax,0xb418e1ec
  417990:	xchg   esp,eax
  417991:	addr16 mov cl,0x26
  417994:	push   ss
  417995:	xchg   ebp,eax
  417996:	sbb    DWORD PTR [esi+ecx*4+0x22fc8bc1],0xffffff9c
  41799e:	cmc    
  41799f:	aas    
  4179a0:	repz jmp FWORD PTR fs:[esi]
  4179a4:	xchg   edi,eax
  4179a5:	into   
  4179a6:	push   cs
  4179a7:	or     edx,DWORD PTR [ebp-0x7e673ca4]
  4179ad:	xor    BYTE PTR [ecx+0x5d],ah
  4179b0:	pop    esi
  4179b1:	inc    edi
  4179b2:	ret    0x2cb6
  4179b5:	addr16 jo 0x417955
  4179b8:	push   edx
  4179b9:	or     bl,BYTE PTR [edi-0x4b9085c5]
  4179bf:	add    BYTE PTR [eax+0x25a9b5cc],dh
  4179c5:	push   ecx
  4179c6:	xchg   ecx,eax
  4179c7:	fistp  WORD PTR [edi+0x3bafcdd5]
  4179cd:	out    0xbf,al
  4179cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179d0:	les    eax,FWORD PTR [ebx]
  4179d2:	push   edx
  4179d3:	retf   0x62a6
  4179d6:	or     al,0x32
  4179d8:	cld    
  4179d9:	setns  BYTE PTR [eax+0x11]
  4179dd:	call   0xb7f6:0xeefce27a
  4179e4:	xchg   edi,eax
  4179e5:	push   ecx
  4179e6:	fild   QWORD PTR [ecx+0x46]
  4179e9:	sbb    edx,esp
  4179eb:	mov    bh,0xa5
  4179ed:	out    0xdb,al
  4179ef:	mov    dl,0x31
  4179f1:	loopne 0x417a22
  4179f3:	(bad)  
  4179f4:	jnp    0x417995
  4179f6:	and    al,0x94
  4179f8:	sbb    ecx,DWORD PTR [edx+ecx*4-0x36]
  4179fc:	or     eax,0xf5151a3
  417a01:	mov    bh,0x8f
  417a03:	pop    ss
  417a04:	aas    
  417a05:	jmp    0xef5:0xe5a44b17
  417a0c:	add    DWORD PTR [edx+0x18571e0c],0x6e4f2d3d
  417a16:	aaa    
  417a17:	dec    esp
  417a18:	idiv   BYTE PTR [esi-0x3a6d6b80]
  417a1e:	adc    al,0xee
  417a20:	inc    ebp
  417a21:	mov    eax,ds:0x4b0d26a0
  417a26:	scas   eax,DWORD PTR es:[edi]
  417a27:	adc    dl,BYTE PTR [ebx+ebx*4-0x1b37827a]
  417a2e:	push   ecx
  417a2f:	stos   DWORD PTR es:[edi],eax
  417a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a31:	adc    eax,0xe09c7ef6
  417a36:	in     eax,0x67
  417a38:	mov    dl,0x95
  417a3a:	sar    ah,cl
  417a3c:	mov    cl,0x0
  417a3e:	jge    0x417a5b
  417a40:	(bad)  
  417a41:	xchg   ebp,eax
  417a42:	arpl   WORD PTR [ebx+0x7e],ax
  417a45:	push   cs
  417a46:	pop    eax
  417a47:	test   DWORD PTR [ebx],0xaacaeba0
  417a4d:	scas   eax,DWORD PTR es:[edi]
  417a4e:	std    
  417a4f:	mov    al,ds:0xcf52a3ed
  417a54:	pop    es
  417a55:	sub    DWORD PTR [edx-0xc],esp
  417a58:	lahf   
  417a59:	cdq    
  417a5a:	test   edx,ecx
  417a5c:	jae    0x4179ef
  417a5e:	mov    edi,0x8abed06d
  417a63:	xor    al,0x17
  417a65:	dec    edx
  417a66:	xor    edx,esp
  417a68:	jecxz  0x417a09
  417a6a:	femms  
  417a6c:	aaa    
  417a6d:	mov    DWORD PTR [edi-0x32],esp
  417a70:	lods   al,BYTE PTR ds:[esi]
  417a71:	adc    eax,0xc5af613e
  417a76:	(bad)  
  417a77:	call   0x6b2d:0xec4f4d6b
  417a7e:	push   ecx
  417a7f:	int    0x9e
  417a81:	xor    al,0xf
  417a83:	push   cs
  417a84:	jecxz  0x417b05
  417a86:	imul   esi
  417a88:	sbb    eax,0x54aceb4c
  417a8d:	and    ebp,edi
  417a8f:	into   
  417a90:	sub    BYTE PTR es:[edx+0xa938ff9],bl
  417a97:	sar    DWORD PTR [eax-0x1cd4763a],cl
  417a9d:	or     al,0x96
  417a9f:	dec    esi
  417aa0:	mov    BYTE PTR [eax-0x16],bh
  417aa3:	daa    
  417aa4:	pop    ecx
  417aa5:	mov    dh,BYTE PTR [esi+ebx*1+0xe]
  417aa9:	cli    
  417aaa:	push   ebx
  417aab:	mov    edi,0x7cc0dd05
  417ab0:	arpl   WORD PTR ds:0x6d3f2a9d,cx
  417ab6:	int    0xb2
  417ab8:	mov    edi,0x54967813
  417abd:	pop    edi
  417abe:	sar    BYTE PTR [eax],cl
  417ac0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ac1:	repnz scas al,BYTE PTR es:[edi]
  417ac3:	inc    eax
  417ac4:	mov    eax,0x6c17cbd3
  417ac9:	sbb    eax,0xef0e1c9c
  417ace:	mov    al,0x82
  417ad0:	out    dx,al
  417ad1:	dec    eax
  417ad2:	sbb    BYTE PTR [edi],dl
  417ad4:	test   DWORD PTR [ecx],ebp
  417ad6:	outs   dx,BYTE PTR ds:[esi]
  417ad7:	fwait
  417ad8:	scas   al,BYTE PTR es:[edi]
  417ad9:	xchg   BYTE PTR [edi+eax*1-0x4f],dl
  417add:	outs   dx,DWORD PTR ds:[esi]
  417ade:	adc    al,0xac
  417ae0:	xchg   esp,eax
  417ae1:	or     eax,0x320067ad
  417ae6:	or     BYTE PTR [esi-0x4ea148ac],cl
  417aec:	add    eax,0xafb15661
  417af1:	repz iret 
  417af3:	and    eax,DWORD PTR [ebx]
  417af5:	push   0xb69f75d5
  417afa:	xchg   esp,eax
  417afb:	ins    BYTE PTR es:[edi],dx
  417afc:	out    0xe7,al
  417afe:	imul   BYTE PTR [ebx-0x45f25e1d]
  417b04:	rol    DWORD PTR [ebx],0xf
  417b07:	pop    ecx
  417b08:	inc    edx
  417b09:	mov    eax,ebx
  417b0b:	mov    bl,0x8b
  417b0d:	pop    ss
  417b0e:	mov    WORD PTR [edx+0x620fd1f3],ss
  417b14:	push   ebx
  417b15:	pop    ss
  417b16:	push   esi
  417b17:	sub    eax,0xb6a01c4d
  417b1c:	ja     0x417b38
  417b1e:	repnz push ds
  417b20:	nop
  417b21:	das    
  417b22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b23:	or     al,ah
  417b25:	xor    eax,0x893036a1
  417b2a:	or     al,0xbf
  417b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b2d:	push   ss
  417b2e:	(bad)  
  417b2f:	scas   al,BYTE PTR es:[edi]
  417b30:	lds    esi,FWORD PTR [edi]
  417b32:	xchg   ecx,eax
  417b33:	and    esi,ebp
  417b35:	mov    al,ds:0xdf4d2a7a
  417b3a:	xchg   ecx,eax
  417b3b:	dec    esi
  417b3c:	sbb    al,0x4d
  417b3e:	into   
  417b3f:	call   FWORD PTR [ebp+0x13e6ae32]
  417b45:	in     eax,dx
  417b46:	mov    esp,0xecd3c771
  417b4b:	add    al,0x14
  417b4d:	sbb    ecx,edx
  417b4f:	mov    bl,0x55
  417b51:	sbb    DWORD PTR [eax+0x18],edi
  417b54:	mov    bh,0x9d
  417b56:	(bad)  
  417b57:	data16 mov ds:0x5442c69,al
  417b5d:	pop    ds
  417b5e:	icebp  
  417b5f:	pop    esi
  417b60:	mov    ecx,DWORD PTR [eax+eax*1-0x60]
  417b64:	pop    ebp
  417b65:	mov    edx,0x8d65fd86
  417b6a:	mov    ds:0x73888f59,eax
  417b6f:	pop    edi
  417b70:	sbb    bh,BYTE PTR [edx+ebp*1-0x42]
  417b74:	ret    
  417b75:	xlat   BYTE PTR ds:[ebx]
  417b76:	jg     0x417b5a
  417b78:	and    ebp,ebp
  417b7a:	xchg   DWORD PTR [edx+0xabe8ca0],edi
  417b80:	xchg   DWORD PTR [edi-0x4c12d883],eax
  417b86:	mov    eax,0x67ceae40
  417b8b:	test   BYTE PTR [ecx],bh
  417b8d:	scas   al,BYTE PTR es:[edi]
  417b8e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  417b90:	pop    es
  417b91:	hlt    
  417b92:	lds    ecx,FWORD PTR [ebx]
  417b94:	(bad)  
  417b95:	icebp  
  417b96:	aaa    
  417b97:	out    0x4f,eax
  417b99:	je     0x417bea
  417b9b:	push   ds
  417b9c:	mov    cl,0x38
  417b9e:	sbb    ebx,DWORD PTR [eax+0x6d255ba2]
  417ba4:	std    
  417ba5:	cwde   
  417ba6:	sbb    eax,0x958beaaf
  417bab:	push   esi
  417bac:	sbb    bl,BYTE PTR [edx+0x6b]
  417baf:	out    dx,eax
  417bb0:	lahf   
  417bb1:	imul   ecx,DWORD PTR [edi+ecx*8+0x29b54853],0x9107172
  417bbc:	jb     0x417c14
  417bbe:	enter  0x3f3e,0xa1
  417bc2:	jno    0x417c0c
  417bc4:	pop    esp
  417bc5:	xchg   bl,bh
  417bc7:	mov    dh,0x2
  417bc9:	cmp    ah,BYTE PTR [ebp-0x39]
  417bcc:	lds    ebp,FWORD PTR [ecx+0x2b]
  417bcf:	call   0xf2a345d5
  417bd4:	xchg   ecx,eax
  417bd5:	aaa    
  417bd6:	mov    al,ds:0x3207b917
  417bdb:	pop    ds
  417bdc:	lods   al,BYTE PTR ds:[esi]
  417bdd:	mov    edx,0xc70cdc46
  417be2:	nop
  417be3:	in     al,0x8a
  417be5:	mov    ch,0x62
  417be7:	cld    
  417be8:	mov    esp,0x1d310229
  417bed:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bef:	imul   edi,edx,0xffffffad
  417bf2:	inc    edi
  417bf3:	xor    esp,DWORD PTR [edi+0x1d41168f]
  417bf9:	sub    DWORD PTR [edx-0x516d82d6],0x966a7fd
  417c03:	sub    eax,0xb368e5fb
  417c08:	shr    esp,0x4d
  417c0b:	adc    bh,bl
  417c0d:	push   es
  417c0e:	lods   eax,DWORD PTR ds:[si]
  417c10:	pop    esi
  417c11:	mov    dl,0xdc
  417c13:	call   0xc211:0xefd53f33
  417c1a:	or     edi,ecx
  417c1c:	xchg   edx,eax
  417c1d:	dec    esi
  417c1e:	or     ch,ah
  417c20:	into   
  417c21:	repnz sub al,0x7f
  417c24:	mov    bl,0xd1
  417c26:	data16 sti 
  417c28:	gs sub al,0x9b
  417c2b:	mov    BYTE PTR [ebx+0x127574af],ch
  417c31:	fs daa 
  417c33:	mov    dh,BYTE PTR [edx-0x3a2eab94]
  417c39:	mov    bh,0xa
  417c3b:	lds    edx,FWORD PTR [edi+esi*8]
  417c3e:	js     0x417bc9
  417c40:	cmc    
  417c41:	or     al,0x2c
  417c43:	jnp    0x417c2f
  417c45:	inc    ebp
  417c46:	inc    edx
  417c47:	sbb    BYTE PTR [eax+0x29a01a69],ch
  417c4d:	das    
  417c4e:	mov    cl,0x9f
  417c50:	data16 adc al,0xed
  417c53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c54:	cs imul eax,DWORD PTR ss:[ebx-0x4],0xffffff84
  417c5a:	mov    al,0x50
  417c5c:	stc    
  417c5d:	pop    ds
  417c5e:	aaa    
  417c5f:	cdq    
  417c60:	xor    bl,BYTE PTR [ecx-0x27b4bdd3]
  417c66:	popa   
  417c67:	mov    eax,0x3ca2de6b
  417c6c:	xchg   ebx,eax
  417c6d:	enter  0xb6db,0x6c
  417c71:	mov    edi,0x6b1edb5f
  417c76:	cld    
  417c77:	stos   DWORD PTR es:[edi],eax
  417c78:	adc    al,0xb5
  417c7a:	test   DWORD PTR [ecx-0x6abfa6e4],ebp
  417c80:	loope  0x417c40
  417c82:	ja     0x417c1f
  417c84:	ret    0x78da
  417c87:	dec    esi
  417c88:	lock push esi
  417c8a:	outs   dx,BYTE PTR ds:[esi]
  417c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c8c:	sbb    BYTE PTR [ecx-0x5],0xb2
  417c90:	sub    ah,BYTE PTR [ebp-0x61e17bd]
  417c96:	retf   
  417c97:	xor    DWORD PTR [ebp+0x21],edx
  417c9a:	repz push 0x78
  417c9d:	cdq    
  417c9e:	imul   ecx,DWORD PTR [esi],0x15
  417ca1:	or     al,0x35
  417ca3:	(bad)  
  417ca4:	in     eax,dx
  417ca5:	ret    0xab23
  417ca8:	fs jns 0x417c4a
  417cab:	cdq    
  417cac:	call   0x8ec:0xed1ac304
  417cb3:	xor    esp,DWORD PTR [edx-0x791167c3]
  417cb9:	xchg   ebx,eax
  417cba:	in     eax,0xc1
  417cbc:	pop    edx
  417cbd:	inc    eax
  417cbe:	add    eax,0x2332a717
  417cc3:	ins    DWORD PTR es:[edi],dx
  417cc4:	lods   eax,DWORD PTR ds:[esi]
  417cc5:	(bad)  
  417cc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cc7:	pop    edi
  417cc8:	(bad)  
  417cc9:	or     eax,0xec142a47
  417cce:	ins    BYTE PTR es:[edi],dx
  417ccf:	inc    ecx
  417cd0:	cmp    esi,ebp
  417cd2:	jmp    0xae63aaa6
  417cd7:	and    ch,ah
  417cd9:	mov    ch,0xdf
  417cdb:	test   dl,bh
  417cdd:	pusha  
  417cde:	mov    edi,0x64a5ef00
  417ce3:	mov    edx,edi
  417ce5:	inc    esi
  417ce6:	or     al,ah
  417ce8:	add    esp,DWORD PTR [esp+eiz*8-0x612a6401]
  417cef:	mov    esi,0xd74eb4fa
  417cf4:	mov    eax,0x4378a892
  417cf9:	adc    al,0xa9
  417cfb:	mov    es,ebx
  417cfd:	ja     0x417cb1
  417cff:	mov    dl,BYTE PTR [ebx]
  417d01:	test   al,0xb
  417d03:	adc    BYTE PTR ds:0xe393f0b6,ah
  417d09:	retf   0x1270
  417d0c:	call   0xd2afe54d
  417d11:	scas   eax,DWORD PTR es:[edi]
  417d12:	aam    0x62
  417d14:	mov    esi,0xa1d33929
  417d19:	adc    edx,ebp
  417d1b:	jae    0x417d4f
  417d1d:	cli    
  417d1e:	call   0xcacf:0x83467b51
  417d25:	nop
  417d26:	add    al,0x0
  417d28:	lods   eax,DWORD PTR ds:[esi]
  417d29:	jmp    0x558dc932
  417d2e:	push   ebx
  417d2f:	adc    DWORD PTR [ecx+0x24],esi
  417d32:	push   esp
  417d33:	mov    al,0x1c
  417d35:	xor    eax,0x481f1427
  417d3a:	out    0xda,eax
  417d3c:	push   ebx
  417d3d:	mov    fs,WORD PTR [edi]
  417d3f:	push   ss
  417d40:	push   0xaddeb32f
  417d45:	(bad)  
  417d46:	retf   
  417d47:	mov    ch,0xc1
  417d49:	outs   dx,BYTE PTR ds:[esi]
  417d4a:	jne    0x417d85
  417d4c:	js     0x417d6d
  417d4e:	aad    0x30
  417d50:	push   DWORD PTR [edx-0x79]
  417d53:	and    ch,dh
  417d55:	add    DWORD PTR [ebx-0xd300ca8],0xffffffda
  417d5c:	adc    ch,BYTE PTR ds:0xce07c9a8
  417d62:	jg     0x417dd1
  417d64:	test   ah,bl
  417d66:	inc    edi
  417d67:	in     eax,dx
  417d68:	xor    eax,0xeecab797
  417d6d:	hlt    
  417d6e:	std    
  417d6f:	mov    eax,0x96a0d024
  417d74:	xchg   ebx,eax
  417d75:	jnp    0x417d1d
  417d77:	mov    dh,0x28
  417d79:	cmc    
  417d7a:	dec    esp
  417d7b:	push   es
  417d7c:	jg     0x417d77
  417d7e:	data16 add al,0x57
  417d81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d82:	sti    
  417d83:	dec    edi
  417d84:	fisub  WORD PTR [esi-0x2a]
  417d87:	lods   eax,DWORD PTR ds:[esi]
  417d88:	push   ebx
  417d89:	mov    bh,0x91
  417d8b:	inc    esi
  417d8c:	pop    ecx
  417d8d:	aaa    
  417d8e:	(bad)  
  417d8f:	(bad)  
  417d90:	mov    al,ds:0xf0504480
  417d95:	aam    0x28
  417d97:	into   
  417d98:	jecxz  0x417d4c
  417d9a:	inc    ebx
  417d9b:	adc    DWORD PTR [ecx+0x69],0xb
  417d9f:	jmp    0xaea1:0xcc85bb3d
  417da6:	shr    DWORD PTR [esi],cl
  417da8:	pop    edx
  417da9:	push   ebp
  417daa:	add    DWORD PTR ds:0x15c278d7,edx
  417db0:	pop    ss
  417db1:	sub    bh,BYTE PTR [edx+0x4b3684ff]
  417db7:	mov    edi,0xaf1ea44a
  417dbc:	xor    al,0x70
  417dbe:	loop   0x417db0
  417dc0:	jbe    0x417dea
  417dc2:	sub    DWORD PTR [edi+0x3163db21],0xffffffe8
  417dc9:	add    DWORD PTR [esi],ecx
  417dcb:	ins    DWORD PTR es:[edi],dx
  417dcc:	test   al,0x9
  417dce:	mov    cl,BYTE PTR [edi+edx*1+0x3110f5f3]
  417dd5:	cmp    al,0x65
  417dd7:	add    DWORD PTR ds:0xb6538756,esp
  417ddd:	inc    dl
  417ddf:	jmp    0x417df5
  417de1:	(bad)  
  417de2:	pop    ebx
  417de3:	in     al,dx
  417de4:	xchg   ecx,eax
  417de5:	cdq    
  417de6:	inc    edx
  417de7:	fsub   DWORD PTR [ebx+esi*4-0x6d]
  417deb:	dec    ebx
  417dec:	repnz adc BYTE PTR [ebp+0x59bcab9b],0x51
  417df4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df5:	mov    cl,0xce
  417df7:	jne    0x417dd7
  417df9:	mov    edx,0x4e451fad
  417dfe:	pop    ebx
  417dff:	push   edx
  417e00:	aam    0xa4
  417e02:	xchg   esp,eax
  417e03:	adc    eax,0xfffc758b
  417e08:	(bad)  
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
