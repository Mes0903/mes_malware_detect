
67b54f8f0cff20ab5e589e8b24990710da084837ea821a07e4e89657c3eda126.exe:     file format pei-i386


Disassembly of section .text:

10001000 <.text>:
10001000:	jmp    DWORD PTR ds:0x100c75d4
10001006:	int3   
10001007:	int3   
10001008:	int3   
10001009:	int3   
1000100a:	int3   
1000100b:	int3   
1000100c:	int3   
1000100d:	int3   
1000100e:	int3   
1000100f:	int3   
10001010:	push   esi
10001011:	mov    esi,DWORD PTR [esp+0x8]
10001015:	test   esi,esi
10001017:	je     0x10001046
10001019:	mov    eax,DWORD PTR [esp+0xc]
1000101d:	test   eax,eax
1000101f:	je     0x10001046
10001021:	mov    ecx,DWORD PTR [esp+0x10]
10001025:	mov    edx,DWORD PTR [esp+0x14]
10001029:	push   ecx
1000102a:	push   esi
1000102b:	push   0xffffffff
1000102d:	push   eax
1000102e:	push   0x0
10001030:	push   edx
10001031:	mov    WORD PTR [esi],0x0
10001036:	call   DWORD PTR ds:0x1002f098
1000103c:	neg    eax
1000103e:	sbb    eax,eax
10001040:	and    eax,esi
10001042:	pop    esi
10001043:	ret    0x10
10001046:	xor    eax,eax
10001048:	pop    esi
10001049:	ret    0x10
1000104c:	int3   
1000104d:	int3   
1000104e:	int3   
1000104f:	int3   
10001050:	push   esi
10001051:	mov    esi,DWORD PTR [esp+0x8]
10001055:	test   esi,esi
10001057:	je     0x10001088
10001059:	mov    eax,DWORD PTR [esp+0xc]
1000105d:	test   eax,eax
1000105f:	je     0x10001088
10001061:	mov    ecx,DWORD PTR [esp+0x10]
10001065:	mov    edx,DWORD PTR [esp+0x14]
10001069:	push   0x0
1000106b:	push   0x0
1000106d:	push   ecx
1000106e:	push   esi
1000106f:	push   0xffffffff
10001071:	push   eax
10001072:	push   0x0
10001074:	push   edx
10001075:	mov    BYTE PTR [esi],0x0
10001078:	call   DWORD PTR ds:0x1002f038
1000107e:	neg    eax
10001080:	sbb    eax,eax
10001082:	and    eax,esi
10001084:	pop    esi
10001085:	ret    0x10
10001088:	xor    eax,eax
1000108a:	pop    esi
1000108b:	ret    0x10
1000108e:	int3   
1000108f:	int3   
10001090:	mov    eax,DWORD PTR [esp+0x4]
10001094:	push   0x100bb92c
10001099:	lea    ecx,[esp+0x8]
1000109d:	push   ecx
1000109e:	mov    DWORD PTR [esp+0xc],eax
100010a2:	call   0x10018e6e
100010a7:	int3   
100010a8:	int3   
100010a9:	int3   
100010aa:	int3   
100010ab:	int3   
100010ac:	int3   
100010ad:	int3   
100010ae:	int3   
100010af:	int3   
100010b0:	mov    eax,DWORD PTR [esp+0x4]
100010b4:	cmp    eax,0x50
100010b7:	ja     0x100010db
100010b9:	movzx  ecx,BYTE PTR [eax+0x100010f8]
100010c0:	jmp    DWORD PTR [ecx*4+0x100010e8]
100010c7:	push   0x8007000e
100010cc:	call   0x10001090
100010d1:	push   0x80070057
100010d6:	call   0x10001090
100010db:	push   0x80004005
100010e0:	call   0x10001090
100010e5:	ret    
100010e6:	mov    edi,edi
100010e8:	in     eax,0x10
100010ea:	add    BYTE PTR [eax],dl
100010ec:	(bad)  
100010ed:	adc    BYTE PTR [eax],al
100010ef:	adc    cl,dl
100010f1:	adc    BYTE PTR [eax],al
100010f3:	adc    bl,bl
100010f5:	adc    BYTE PTR [eax],al
100010f7:	adc    BYTE PTR [eax],al
100010f9:	add    eax,DWORD PTR [ebx]
100010fb:	add    eax,DWORD PTR [ebx]
100010fd:	add    eax,DWORD PTR [ebx]
100010ff:	add    eax,DWORD PTR [ebx]
10001101:	add    eax,DWORD PTR [ebx]
10001103:	add    eax,DWORD PTR [ecx]
10001105:	add    eax,DWORD PTR [ebx]
10001107:	add    eax,DWORD PTR [ebx]
10001109:	add    eax,DWORD PTR [ebx]
1000110b:	add    eax,DWORD PTR [ebx]
1000110d:	add    eax,DWORD PTR [edx]
1000110f:	add    eax,DWORD PTR [ebx]
10001111:	add    eax,DWORD PTR [ebx]
10001113:	add    eax,DWORD PTR [ebx]
10001115:	add    eax,DWORD PTR [ebx]
10001117:	add    eax,DWORD PTR [ebx]
10001119:	add    eax,DWORD PTR [edx]
1000111b:	add    eax,DWORD PTR [ebx]
1000111d:	add    eax,DWORD PTR [ebx]
1000111f:	add    eax,DWORD PTR [ebx]
10001121:	add    eax,DWORD PTR [ebx]
10001123:	add    eax,DWORD PTR [ebx]
10001125:	add    eax,DWORD PTR [ebx]
10001127:	add    eax,DWORD PTR [ebx]
10001129:	add    eax,DWORD PTR [ebx]
1000112b:	add    eax,DWORD PTR [ebx]
1000112d:	add    eax,DWORD PTR [ebx]
1000112f:	add    eax,DWORD PTR [ebx]
10001131:	add    eax,DWORD PTR [ebx]
10001133:	add    eax,DWORD PTR [ebx]
10001135:	add    eax,DWORD PTR [ebx]
10001137:	add    eax,DWORD PTR [ebx]
10001139:	add    eax,DWORD PTR [ebx]
1000113b:	add    eax,DWORD PTR [ebx]
1000113d:	add    eax,DWORD PTR [ebx]
1000113f:	add    eax,DWORD PTR [ebx]
10001141:	add    eax,DWORD PTR [ebx]
10001143:	add    eax,DWORD PTR [ebx]
10001145:	add    eax,DWORD PTR [ebx]
10001147:	add    eax,DWORD PTR [eax]
10001149:	int3   
1000114a:	int3   
1000114b:	int3   
1000114c:	int3   
1000114d:	int3   
1000114e:	int3   
1000114f:	int3   
10001150:	mov    eax,DWORD PTR [esp+0x10]
10001154:	mov    ecx,DWORD PTR [esp+0xc]
10001158:	mov    edx,DWORD PTR [esp+0x8]
1000115c:	push   eax
1000115d:	mov    eax,DWORD PTR [esp+0x8]
10001161:	push   ecx
10001162:	push   edx
10001163:	push   eax
10001164:	call   0x1001911e
10001169:	push   eax
1000116a:	call   0x100010b0
1000116f:	add    esp,0x14
10001172:	ret    
10001173:	int3   
10001174:	int3   
10001175:	int3   
10001176:	int3   
10001177:	int3   
10001178:	int3   
10001179:	int3   
1000117a:	int3   
1000117b:	int3   
1000117c:	int3   
1000117d:	int3   
1000117e:	int3   
1000117f:	int3   
10001180:	push   ebx
10001181:	mov    ebx,DWORD PTR [esp+0x8]
10001185:	push   edi
10001186:	mov    edi,DWORD PTR [esp+0x10]
1000118a:	push   edi
1000118b:	push   ebx
1000118c:	call   DWORD PTR ds:0x1002f0a8
10001192:	test   eax,eax
10001194:	jne    0x10001199
10001196:	pop    edi
10001197:	pop    ebx
10001198:	ret    
10001199:	push   esi
1000119a:	push   eax
1000119b:	call   DWORD PTR ds:0x1002f0a4
100011a1:	mov    esi,eax
100011a3:	test   esi,esi
100011a5:	je     0x100011d4
100011a7:	push   edi
100011a8:	push   ebx
100011a9:	call   DWORD PTR ds:0x1002f0a0
100011af:	mov    ecx,DWORD PTR [esp+0x18]
100011b3:	add    eax,esi
100011b5:	and    ecx,0xf
100011b8:	jbe    0x100011d0
100011ba:	lea    ebx,[ebx+0x0]
100011c0:	cmp    esi,eax
100011c2:	jae    0x100011d4
100011c4:	sub    ecx,0x1
100011c7:	movzx  edx,WORD PTR [esi]
100011ca:	lea    esi,[esi+edx*2+0x2]
100011ce:	jne    0x100011c0
100011d0:	cmp    esi,eax
100011d2:	jb     0x100011da
100011d4:	pop    esi
100011d5:	pop    edi
100011d6:	xor    eax,eax
100011d8:	pop    ebx
100011d9:	ret    
100011da:	mov    ax,WORD PTR [esi]
100011dd:	neg    ax
100011e0:	sbb    eax,eax
100011e2:	and    eax,esi
100011e4:	pop    esi
100011e5:	pop    edi
100011e6:	pop    ebx
100011e7:	ret    
100011e8:	int3   
100011e9:	int3   
100011ea:	int3   
100011eb:	int3   
100011ec:	int3   
100011ed:	int3   
100011ee:	int3   
100011ef:	int3   
100011f0:	push   ebx
100011f1:	push   ebp
100011f2:	push   esi
100011f3:	push   edi
100011f4:	xor    edi,edi
100011f6:	push   edi
100011f7:	mov    ecx,0x100c90ac
100011fc:	call   0x100184cc
10001201:	mov    esi,eax
10001203:	test   esi,esi
10001205:	lea    ebp,[edi+0x1]
10001208:	je     0x10001257
1000120a:	mov    ebx,DWORD PTR [esp+0x14]
1000120e:	mov    edi,edi
10001210:	test   edi,edi
10001212:	jne    0x10001257
10001214:	mov    eax,DWORD PTR [esp+0x18]
10001218:	mov    ecx,ebx
1000121a:	shr    ecx,0x4
1000121d:	add    ecx,0x1
10001220:	push   eax
10001221:	movzx  edx,cx
10001224:	push   edx
10001225:	push   0x6
10001227:	push   esi
10001228:	call   DWORD PTR ds:0x1002f154
1000122e:	test   eax,eax
10001230:	je     0x10001243
10001232:	push   ebx
10001233:	push   eax
10001234:	push   esi
10001235:	call   0x10001180
1000123a:	mov    edi,eax
1000123c:	add    esp,0xc
1000123f:	test   edi,edi
10001241:	jne    0x1000125e
10001243:	push   ebp
10001244:	mov    ecx,0x100c90ac
10001249:	call   0x100184cc
1000124e:	mov    esi,eax
10001250:	add    ebp,0x1
10001253:	test   esi,esi
10001255:	jne    0x10001210
10001257:	pop    edi
10001258:	pop    esi
10001259:	pop    ebp
1000125a:	xor    eax,eax
1000125c:	pop    ebx
1000125d:	ret    
1000125e:	pop    edi
1000125f:	mov    eax,esi
10001261:	pop    esi
10001262:	pop    ebp
10001263:	pop    ebx
10001264:	ret    
10001265:	int3   
10001266:	int3   
10001267:	int3   
10001268:	int3   
10001269:	int3   
1000126a:	int3   
1000126b:	int3   
1000126c:	int3   
1000126d:	int3   
1000126e:	int3   
1000126f:	int3   
10001270:	mov    eax,ecx
10001272:	mov    DWORD PTR [eax],0x0
10001278:	ret    
10001279:	int3   
1000127a:	int3   
1000127b:	int3   
1000127c:	int3   
1000127d:	int3   
1000127e:	int3   
1000127f:	int3   
10001280:	push   esi
10001281:	mov    esi,ecx
10001283:	mov    eax,DWORD PTR [esi]
10001285:	test   eax,eax
10001287:	je     0x10001296
10001289:	push   eax
1000128a:	call   DWORD PTR ds:0x1002f008
10001290:	mov    DWORD PTR [esi],0x0
10001296:	pop    esi
10001297:	ret    
10001298:	int3   
10001299:	int3   
1000129a:	int3   
1000129b:	int3   
1000129c:	int3   
1000129d:	int3   
1000129e:	int3   
1000129f:	int3   
100012a0:	push   ecx
100012a1:	mov    edx,DWORD PTR [esp+0xc]
100012a5:	push   esi
100012a6:	lea    eax,[esp+0x4]
100012aa:	push   eax
100012ab:	mov    eax,DWORD PTR [esp+0x10]
100012af:	mov    esi,ecx
100012b1:	mov    ecx,DWORD PTR [esp+0x18]
100012b5:	push   ecx
100012b6:	push   0x0
100012b8:	push   edx
100012b9:	push   eax
100012ba:	mov    DWORD PTR [esp+0x18],0x0
100012c2:	call   DWORD PTR ds:0x1002f004
100012c8:	test   eax,eax
100012ca:	jne    0x100012e5
100012cc:	mov    ecx,DWORD PTR [esi]
100012ce:	test   ecx,ecx
100012d0:	je     0x100012df
100012d2:	push   ecx
100012d3:	call   DWORD PTR ds:0x1002f008
100012d9:	mov    DWORD PTR [esi],0x0
100012df:	mov    ecx,DWORD PTR [esp+0x4]
100012e3:	mov    DWORD PTR [esi],ecx
100012e5:	pop    esi
100012e6:	pop    ecx
100012e7:	ret    0xc
100012ea:	int3   
100012eb:	int3   
100012ec:	int3   
100012ed:	int3   
100012ee:	int3   
100012ef:	int3   
100012f0:	mov    eax,DWORD PTR [esp+0x8]
100012f4:	ret    
100012f5:	int3   
100012f6:	int3   
100012f7:	int3   
100012f8:	int3   
100012f9:	int3   
100012fa:	int3   
100012fb:	int3   
100012fc:	int3   
100012fd:	int3   
100012fe:	int3   
100012ff:	int3   
10001300:	ret    
10001301:	int3   
10001302:	int3   
10001303:	int3   
10001304:	int3   
10001305:	int3   
10001306:	int3   
10001307:	int3   
10001308:	int3   
10001309:	int3   
1000130a:	int3   
1000130b:	int3   
1000130c:	int3   
1000130d:	int3   
1000130e:	int3   
1000130f:	int3   
10001310:	push   esi
10001311:	lea    eax,[esp+0x8]
10001315:	push   eax
10001316:	mov    esi,ecx
10001318:	call   0x10018f0e
1000131d:	mov    DWORD PTR [esi],0x1002f510
10001323:	mov    eax,esi
10001325:	pop    esi
10001326:	ret    0x4
10001329:	int3   
1000132a:	int3   
1000132b:	int3   
1000132c:	int3   
1000132d:	int3   
1000132e:	int3   
1000132f:	int3   
10001330:	mov    DWORD PTR [ecx],0x1002f510
10001336:	jmp    0x10018fcc
1000133b:	int3   
1000133c:	int3   
1000133d:	int3   
1000133e:	int3   
1000133f:	int3   
10001340:	push   esi
10001341:	mov    esi,ecx
10001343:	mov    DWORD PTR [esi],0x1002f510
10001349:	call   0x10018fcc
1000134e:	test   BYTE PTR [esp+0x8],0x1
10001353:	je     0x1000135e
10001355:	push   esi
10001356:	call   0x1001876e
1000135b:	add    esp,0x4
1000135e:	mov    eax,esi
10001360:	pop    esi
10001361:	ret    0x4
10001364:	int3   
10001365:	int3   
10001366:	int3   
10001367:	int3   
10001368:	int3   
10001369:	int3   
1000136a:	int3   
1000136b:	int3   
1000136c:	int3   
1000136d:	int3   
1000136e:	int3   
1000136f:	int3   
10001370:	mov    eax,DWORD PTR [esp+0xc]
10001374:	cmp    eax,0x4
10001377:	mov    ecx,DWORD PTR [esp+0x8]
1000137b:	mov    edx,DWORD PTR [esp+0x4]
1000137f:	push   esi
10001380:	push   edi
10001381:	jb     0x10001397
10001383:	mov    esi,DWORD PTR [edx]
10001385:	cmp    esi,DWORD PTR [ecx]
10001387:	jne    0x1000139b
10001389:	sub    eax,0x4
1000138c:	add    ecx,0x4
1000138f:	add    edx,0x4
10001392:	cmp    eax,0x4
10001395:	jae    0x10001383
10001397:	test   eax,eax
10001399:	je     0x100013f9
1000139b:	movzx  esi,BYTE PTR [edx]
1000139e:	movzx  edi,BYTE PTR [ecx]
100013a1:	sub    esi,edi
100013a3:	jne    0x100013ea
100013a5:	sub    eax,0x1
100013a8:	add    ecx,0x1
100013ab:	add    edx,0x1
100013ae:	test   eax,eax
100013b0:	je     0x100013f9
100013b2:	movzx  esi,BYTE PTR [edx]
100013b5:	movzx  edi,BYTE PTR [ecx]
100013b8:	sub    esi,edi
100013ba:	jne    0x100013ea
100013bc:	sub    eax,0x1
100013bf:	add    ecx,0x1
100013c2:	add    edx,0x1
100013c5:	test   eax,eax
100013c7:	je     0x100013f9
100013c9:	movzx  esi,BYTE PTR [edx]
100013cc:	movzx  edi,BYTE PTR [ecx]
100013cf:	sub    esi,edi
100013d1:	jne    0x100013ea
100013d3:	sub    eax,0x1
100013d6:	add    ecx,0x1
100013d9:	add    edx,0x1
100013dc:	test   eax,eax
100013de:	je     0x100013f9
100013e0:	movzx  esi,BYTE PTR [edx]
100013e3:	movzx  eax,BYTE PTR [ecx]
100013e6:	sub    esi,eax
100013e8:	je     0x100013f9
100013ea:	test   esi,esi
100013ec:	mov    eax,0x1
100013f1:	jg     0x100013fb
100013f3:	pop    edi
100013f4:	or     eax,0xffffffff
100013f7:	pop    esi
100013f8:	ret    
100013f9:	xor    eax,eax
100013fb:	pop    edi
100013fc:	pop    esi
100013fd:	ret    
100013fe:	int3   
100013ff:	int3   
10001400:	push   0xffffffff
10001402:	push   0x1002d628
10001407:	mov    eax,fs:0x0
1000140d:	push   eax
1000140e:	push   ecx
1000140f:	push   esi
10001410:	mov    eax,ds:0x100c7654
10001415:	xor    eax,esp
10001417:	push   eax
10001418:	lea    eax,[esp+0xc]
1000141c:	mov    fs:0x0,eax
10001422:	mov    esi,ecx
10001424:	mov    DWORD PTR [esp+0x8],esi
10001428:	call   0x10018efd
1000142d:	xor    eax,eax
1000142f:	mov    DWORD PTR [esp+0x14],eax
10001433:	lea    ecx,[esi+0xc]
10001436:	mov    DWORD PTR [esi],0x1002f504
1000143c:	push   0xffffffff
1000143e:	mov    DWORD PTR [ecx+0x14],eax
10001441:	mov    DWORD PTR [ecx+0x18],0xf
10001448:	push   eax
10001449:	mov    BYTE PTR [ecx+0x4],al
1000144c:	mov    eax,DWORD PTR [esp+0x24]
10001450:	push   eax
10001451:	call   0x10003990
10001456:	mov    eax,esi
10001458:	mov    ecx,DWORD PTR [esp+0xc]
1000145c:	mov    DWORD PTR fs:0x0,ecx
10001463:	pop    ecx
10001464:	pop    esi
10001465:	add    esp,0x10
10001468:	ret    0x4
1000146b:	int3   
1000146c:	int3   
1000146d:	int3   
1000146e:	int3   
1000146f:	int3   
10001470:	cmp    DWORD PTR [ecx+0x24],0x10
10001474:	jb     0x1000147a
10001476:	mov    eax,DWORD PTR [ecx+0x10]
10001479:	ret    
1000147a:	lea    eax,[ecx+0x10]
1000147d:	ret    
1000147e:	int3   
1000147f:	int3   
10001480:	mov    eax,DWORD PTR [esp+0x4]
10001484:	push   esi
10001485:	push   eax
10001486:	mov    esi,ecx
10001488:	call   0x10001400
1000148d:	mov    DWORD PTR [esi],0x1002f4f8
10001493:	mov    eax,esi
10001495:	pop    esi
10001496:	ret    0x4
10001499:	int3   
1000149a:	int3   
1000149b:	int3   
1000149c:	int3   
1000149d:	int3   
1000149e:	int3   
1000149f:	int3   
100014a0:	mov    eax,DWORD PTR [esp+0x4]
100014a4:	push   esi
100014a5:	push   eax
100014a6:	mov    esi,ecx
100014a8:	call   0x10001400
100014ad:	mov    DWORD PTR [esi],0x1002f51c
100014b3:	mov    eax,esi
100014b5:	pop    esi
100014b6:	ret    0x4
100014b9:	int3   
100014ba:	int3   
100014bb:	int3   
100014bc:	int3   
100014bd:	int3   
100014be:	int3   
100014bf:	int3   
100014c0:	push   esi
100014c1:	mov    esi,ecx
100014c3:	mov    DWORD PTR [esi],0x1002f504
100014c9:	cmp    DWORD PTR [esi+0x24],0x10
100014cd:	jb     0x100014db
100014cf:	mov    eax,DWORD PTR [esi+0x10]
100014d2:	push   eax
100014d3:	call   0x1001876e
100014d8:	add    esp,0x4
100014db:	xor    eax,eax
100014dd:	mov    DWORD PTR [esi+0x24],0xf
100014e4:	mov    DWORD PTR [esi+0x20],eax
100014e7:	mov    BYTE PTR [esi+0x10],al
100014ea:	mov    ecx,esi
100014ec:	pop    esi
100014ed:	jmp    0x10018fcc
100014f2:	int3   
100014f3:	int3   
100014f4:	int3   
100014f5:	int3   
100014f6:	int3   
100014f7:	int3   
100014f8:	int3   
100014f9:	int3   
100014fa:	int3   
100014fb:	int3   
100014fc:	int3   
100014fd:	int3   
100014fe:	int3   
100014ff:	int3   
10001500:	push   esi
10001501:	mov    esi,ecx
10001503:	mov    DWORD PTR [esi],0x1002f504
10001509:	cmp    DWORD PTR [esi+0x24],0x10
1000150d:	jb     0x1000151b
1000150f:	mov    eax,DWORD PTR [esi+0x10]
10001512:	push   eax
10001513:	call   0x1001876e
10001518:	add    esp,0x4
1000151b:	xor    eax,eax
1000151d:	mov    DWORD PTR [esi+0x24],0xf
10001524:	mov    DWORD PTR [esi+0x20],eax
10001527:	mov    ecx,esi
10001529:	mov    BYTE PTR [esi+0x10],al
1000152c:	call   0x10018fcc
10001531:	test   BYTE PTR [esp+0x8],0x1
10001536:	je     0x10001541
10001538:	push   esi
10001539:	call   0x1001876e
1000153e:	add    esp,0x4
10001541:	mov    eax,esi
10001543:	pop    esi
10001544:	ret    0x4
10001547:	int3   
10001548:	int3   
10001549:	int3   
1000154a:	int3   
1000154b:	int3   
1000154c:	int3   
1000154d:	int3   
1000154e:	int3   
1000154f:	int3   
10001550:	push   0xffffffff
10001552:	push   0x1002d5f8
10001557:	mov    eax,fs:0x0
1000155d:	push   eax
1000155e:	push   esi
1000155f:	mov    eax,ds:0x100c7654
10001564:	xor    eax,esp
10001566:	push   eax
10001567:	lea    eax,[esp+0x8]
1000156b:	mov    fs:0x0,eax
10001571:	mov    esi,DWORD PTR [esp+0x18]
10001575:	mov    ecx,esi
10001577:	call   0x10018efd
1000157c:	xor    eax,eax
1000157e:	mov    DWORD PTR [esp+0x10],eax
10001582:	lea    ecx,[esi+0xc]
10001585:	mov    DWORD PTR [esi],0x100b20d8
1000158b:	push   0xffffffff
1000158d:	mov    DWORD PTR [ecx+0x14],eax
10001590:	mov    DWORD PTR [ecx+0x18],0xf
10001597:	push   eax
10001598:	mov    BYTE PTR [ecx+0x4],al
1000159b:	mov    eax,DWORD PTR [esp+0x24]
1000159f:	push   eax
100015a0:	call   0x10003990
100015a5:	mov    eax,esi
100015a7:	mov    ecx,DWORD PTR [esp+0x8]
100015ab:	mov    DWORD PTR fs:0x0,ecx
100015b2:	pop    ecx
100015b3:	pop    esi
100015b4:	add    esp,0xc
100015b7:	ret    0x8
100015ba:	int3   
100015bb:	int3   
100015bc:	int3   
100015bd:	int3   
100015be:	int3   
100015bf:	int3   
100015c0:	push   0xffffffff
100015c2:	push   0x1002d5c8
100015c7:	mov    eax,fs:0x0
100015cd:	push   eax
100015ce:	push   ecx
100015cf:	push   esi
100015d0:	push   edi
100015d1:	mov    eax,ds:0x100c7654
100015d6:	xor    eax,esp
100015d8:	push   eax
100015d9:	lea    eax,[esp+0x10]
100015dd:	mov    fs:0x0,eax
100015e3:	mov    esi,ecx
100015e5:	mov    DWORD PTR [esp+0xc],esi
100015e9:	mov    edi,DWORD PTR [esp+0x20]
100015ed:	push   edi
100015ee:	call   0x10018f74
100015f3:	xor    edx,edx
100015f5:	mov    DWORD PTR [esp+0x18],edx
100015f9:	push   0xffffffff
100015fb:	lea    ecx,[esi+0xc]
100015fe:	mov    DWORD PTR [esi],0x100b20d8
10001604:	lea    eax,[edi+0xc]
10001607:	push   edx
10001608:	mov    DWORD PTR [ecx+0x18],0xf
1000160f:	mov    DWORD PTR [ecx+0x14],edx
10001612:	push   eax
10001613:	mov    BYTE PTR [ecx+0x4],dl
10001616:	call   0x10003990
1000161b:	mov    eax,esi
1000161d:	mov    ecx,DWORD PTR [esp+0x10]
10001621:	mov    DWORD PTR fs:0x0,ecx
10001628:	pop    ecx
10001629:	pop    edi
1000162a:	pop    esi
1000162b:	add    esp,0x10
1000162e:	ret    0x4
10001631:	int3   
10001632:	int3   
10001633:	int3   
10001634:	int3   
10001635:	int3   
10001636:	int3   
10001637:	int3   
10001638:	int3   
10001639:	int3   
1000163a:	int3   
1000163b:	int3   
1000163c:	int3   
1000163d:	int3   
1000163e:	int3   
1000163f:	int3   
10001640:	push   ecx
10001641:	push   edi
10001642:	mov    edi,DWORD PTR [ecx]
10001644:	test   edi,edi
10001646:	je     0x10001689
10001648:	push   0x0
1000164a:	lea    ecx,[esp+0x8]
1000164e:	call   0x100186ea
10001653:	mov    eax,DWORD PTR [edi+0x4]
10001656:	test   eax,eax
10001658:	jbe    0x10001665
1000165a:	cmp    eax,0xffffffff
1000165d:	jae    0x10001665
1000165f:	add    eax,0xffffffff
10001662:	mov    DWORD PTR [edi+0x4],eax
10001665:	push   esi
10001666:	mov    esi,DWORD PTR [edi+0x4]
10001669:	neg    esi
1000166b:	sbb    esi,esi
1000166d:	not    esi
1000166f:	lea    ecx,[esp+0x8]
10001673:	and    esi,edi
10001675:	call   0x1001870b
1000167a:	test   esi,esi
1000167c:	je     0x10001688
1000167e:	mov    eax,DWORD PTR [esi]
10001680:	mov    edx,DWORD PTR [eax]
10001682:	push   0x1
10001684:	mov    ecx,esi
10001686:	call   edx
10001688:	pop    esi
10001689:	pop    edi
1000168a:	pop    ecx
1000168b:	ret    
1000168c:	int3   
1000168d:	int3   
1000168e:	int3   
1000168f:	int3   
10001690:	mov    eax,DWORD PTR [esp+0x4]
10001694:	push   esi
10001695:	push   eax
10001696:	mov    esi,ecx
10001698:	call   0x100016b0
1000169d:	mov    DWORD PTR [esi],0x1002f51c
100016a3:	mov    eax,esi
100016a5:	pop    esi
100016a6:	ret    0x4
100016a9:	int3   
100016aa:	int3   
100016ab:	int3   
100016ac:	int3   
100016ad:	int3   
100016ae:	int3   
100016af:	int3   
100016b0:	push   0xffffffff
100016b2:	push   0x1002d598
100016b7:	mov    eax,fs:0x0
100016bd:	push   eax
100016be:	push   ecx
100016bf:	push   esi
100016c0:	push   edi
100016c1:	mov    eax,ds:0x100c7654
100016c6:	xor    eax,esp
100016c8:	push   eax
100016c9:	lea    eax,[esp+0x10]
100016cd:	mov    fs:0x0,eax
100016d3:	mov    esi,ecx
100016d5:	mov    DWORD PTR [esp+0xc],esi
100016d9:	mov    edi,DWORD PTR [esp+0x20]
100016dd:	push   edi
100016de:	call   0x10018f74
100016e3:	xor    edx,edx
100016e5:	mov    DWORD PTR [esp+0x18],edx
100016e9:	push   0xffffffff
100016eb:	lea    ecx,[esi+0xc]
100016ee:	mov    DWORD PTR [esi],0x1002f504
100016f4:	lea    eax,[edi+0xc]
100016f7:	push   edx
100016f8:	mov    DWORD PTR [ecx+0x18],0xf
100016ff:	mov    DWORD PTR [ecx+0x14],edx
10001702:	push   eax
10001703:	mov    BYTE PTR [ecx+0x4],dl
10001706:	call   0x10003990
1000170b:	mov    eax,esi
1000170d:	mov    ecx,DWORD PTR [esp+0x10]
10001711:	mov    DWORD PTR fs:0x0,ecx
10001718:	pop    ecx
10001719:	pop    edi
1000171a:	pop    esi
1000171b:	add    esp,0x10
1000171e:	ret    0x4
10001721:	int3   
10001722:	int3   
10001723:	int3   
10001724:	int3   
10001725:	int3   
10001726:	int3   
10001727:	int3   
10001728:	int3   
10001729:	int3   
1000172a:	int3   
1000172b:	int3   
1000172c:	int3   
1000172d:	int3   
1000172e:	int3   
1000172f:	int3   
10001730:	push   ecx
10001731:	mov    eax,esi
10001733:	mov    edx,0xe3
10001738:	push   edi
10001739:	lea    esp,[esp+0x0]
10001740:	mov    ecx,DWORD PTR [eax+0x4]
10001743:	mov    edi,DWORD PTR [eax]
10001745:	xor    edi,ecx
10001747:	and    edi,0x7ffffffe
1000174d:	xor    edi,DWORD PTR [eax]
1000174f:	sub    edx,0x1
10001752:	shr    edi,1
10001754:	xor    edi,DWORD PTR [eax+0x634]
1000175a:	mov    DWORD PTR [esp+0x4],edi
1000175e:	xor    DWORD PTR [esp+0x4],0x5
10001763:	xor    DWORD PTR [esp+0x4],0x1
10001768:	xor    DWORD PTR [esp+0x4],0x4
1000176d:	and    cl,0x1
10001770:	neg    cl
10001772:	sbb    ecx,ecx
10001774:	and    ecx,0x9908b0df
1000177a:	xor    ecx,DWORD PTR [esp+0x4]
1000177e:	add    eax,0x4
10001781:	test   edx,edx
10001783:	mov    DWORD PTR [eax-0x4],ecx
10001786:	jne    0x10001740
10001788:	mov    edx,0x18c
1000178d:	lea    ecx,[ecx+0x0]
10001790:	mov    ecx,DWORD PTR [eax+0x4]
10001793:	mov    edi,DWORD PTR [eax]
10001795:	xor    edi,ecx
10001797:	and    edi,0x7ffffffe
1000179d:	xor    edi,DWORD PTR [eax]
1000179f:	shr    edi,1
100017a1:	xor    edi,DWORD PTR [eax-0x38c]
100017a7:	mov    DWORD PTR [esp+0x4],edi
100017ab:	xor    DWORD PTR [esp+0x4],0x5
100017b0:	xor    DWORD PTR [esp+0x4],0x1
100017b5:	xor    DWORD PTR [esp+0x4],0x4
100017ba:	and    cl,0x1
100017bd:	neg    cl
100017bf:	sbb    ecx,ecx
100017c1:	and    ecx,0x9908b0df
100017c7:	xor    ecx,DWORD PTR [esp+0x4]
100017cb:	add    eax,0x4
100017ce:	sub    edx,0x1
100017d1:	mov    DWORD PTR [eax-0x4],ecx
100017d4:	jne    0x10001790
100017d6:	mov    ecx,DWORD PTR [esi]
100017d8:	mov    edx,DWORD PTR [eax]
100017da:	xor    edx,ecx
100017dc:	and    edx,0x7ffffffe
100017e2:	xor    edx,DWORD PTR [eax]
100017e4:	shr    edx,1
100017e6:	xor    edx,DWORD PTR [eax-0x38c]
100017ec:	mov    DWORD PTR [esp+0x4],edx
100017f0:	xor    DWORD PTR [esp+0x4],0x5
100017f5:	xor    DWORD PTR [esp+0x4],0x1
100017fa:	xor    DWORD PTR [esp+0x4],0x4
100017ff:	and    cl,0x1
10001802:	neg    cl
10001804:	pop    edi
10001805:	sbb    ecx,ecx
10001807:	and    ecx,0x9908b0df
1000180d:	xor    ecx,DWORD PTR [esp]
10001810:	mov    DWORD PTR [eax],ecx
10001812:	mov    DWORD PTR [esi+0x9c4],0x270
1000181c:	mov    DWORD PTR [esi+0x9c0],esi
10001822:	pop    ecx
10001823:	ret    
10001824:	int3   
10001825:	int3   
10001826:	int3   
10001827:	int3   
10001828:	int3   
10001829:	int3   
1000182a:	int3   
1000182b:	int3   
1000182c:	int3   
1000182d:	int3   
1000182e:	int3   
1000182f:	int3   
10001830:	push   esi
10001831:	mov    esi,eax
10001833:	push   edi
10001834:	mov    ecx,0x1
10001839:	mov    DWORD PTR [esi],edx
1000183b:	jmp    0x10001840
1000183d:	lea    ecx,[ecx+0x0]
10001840:	mov    edx,DWORD PTR [eax]
10001842:	mov    edi,edx
10001844:	shr    edi,0x1e
10001847:	xor    edi,edx
10001849:	imul   edi,edi,0x6c078965
1000184f:	add    edi,ecx
10001851:	mov    DWORD PTR [eax+0x4],edi
10001854:	add    ecx,0x1
10001857:	add    eax,0x4
1000185a:	cmp    ecx,0x270
10001860:	jl     0x10001840
10001862:	call   0x10001730
10001867:	pop    edi
10001868:	pop    esi
10001869:	ret    
1000186a:	int3   
1000186b:	int3   
1000186c:	int3   
1000186d:	int3   
1000186e:	int3   
1000186f:	int3   
10001870:	push   esi
10001871:	push   edi
10001872:	mov    edi,ebx
10001874:	shr    edi,1
10001876:	or     edi,ebx
10001878:	mov    esi,eax
1000187a:	mov    eax,edi
1000187c:	shr    eax,0x2
1000187f:	or     edi,eax
10001881:	mov    ecx,edi
10001883:	shr    ecx,0x4
10001886:	or     edi,ecx
10001888:	mov    edx,edi
1000188a:	shr    edx,0x8
1000188d:	or     edi,edx
1000188f:	mov    eax,edi
10001891:	shr    eax,0x10
10001894:	or     edi,eax
10001896:	cmp    DWORD PTR [esi+0x9c4],0x0
1000189d:	jne    0x100018a4
1000189f:	call   0x10001730
100018a4:	mov    eax,DWORD PTR [esi+0x9c0]
100018aa:	add    DWORD PTR [esi+0x9c4],0xffffffff
100018b1:	mov    ecx,DWORD PTR [eax]
100018b3:	add    eax,0x4
100018b6:	mov    edx,ecx
100018b8:	shr    edx,0xb
100018bb:	xor    ecx,edx
100018bd:	mov    DWORD PTR [esi+0x9c0],eax
100018c3:	mov    eax,ecx
100018c5:	and    eax,0xff3a58ad
100018ca:	shl    eax,0x7
100018cd:	xor    ecx,eax
100018cf:	mov    edx,ecx
100018d1:	and    edx,0xffffdf8c
100018d7:	shl    edx,0xf
100018da:	xor    ecx,edx
100018dc:	mov    eax,ecx
100018de:	shr    eax,0x12
100018e1:	xor    eax,ecx
100018e3:	and    eax,edi
100018e5:	cmp    eax,ebx
100018e7:	ja     0x10001896
100018e9:	pop    edi
100018ea:	pop    esi
100018eb:	ret    
100018ec:	int3   
100018ed:	int3   
100018ee:	int3   
100018ef:	int3   
100018f0:	push   ebp
100018f1:	mov    ebp,esp
100018f3:	and    esp,0xfffffff8
100018f6:	push   0xffffffff
100018f8:	push   0x1002d450
100018fd:	mov    eax,fs:0x0
10001903:	push   eax
10001904:	sub    esp,0x50
10001907:	push   ebx
10001908:	push   esi
10001909:	push   edi
1000190a:	mov    eax,ds:0x100c7654
1000190f:	xor    eax,esp
10001911:	push   eax
10001912:	lea    eax,[esp+0x60]
10001916:	mov    fs:0x0,eax
1000191c:	xor    ebx,ebx
1000191e:	push   0x4000
10001923:	mov    DWORD PTR [esp+0x18],ebx
10001927:	call   0x1001868d
1000192c:	mov    edi,eax
1000192e:	push   0x38
10001930:	mov    DWORD PTR [esp+0x70],ebx
10001934:	push   0x100b77fc
10001939:	lea    eax,[esp+0x30]
1000193d:	push   0x2f
1000193f:	push   eax
10001940:	mov    DWORD PTR [esp+0x58],ebx
10001944:	mov    DWORD PTR [esp+0x5c],ebx
10001948:	mov    DWORD PTR [esp+0x60],ebx
1000194c:	mov    DWORD PTR [esp+0x3c],ebx
10001950:	mov    DWORD PTR [esp+0x38],ebx
10001954:	call   0x100281b0
10001959:	add    esp,0x14
1000195c:	test   eax,eax
1000195e:	je     0x1000198d
10001960:	mov    esi,DWORD PTR [ebp+0x8]
10001963:	push   ebx
10001964:	mov    DWORD PTR [esp+0x1c],ebx
10001968:	mov    DWORD PTR [esi],ebx
1000196a:	call   0x1001876e
1000196f:	push   edi
10001970:	call   0x1001876e
10001975:	add    esp,0x8
10001978:	mov    eax,esi
1000197a:	mov    ecx,DWORD PTR [esp+0x60]
1000197e:	mov    DWORD PTR fs:0x0,ecx
10001985:	pop    ecx
10001986:	pop    edi
10001987:	pop    esi
10001988:	pop    ebx
10001989:	mov    esp,ebp
1000198b:	pop    ebp
1000198c:	ret    
1000198d:	mov    ecx,DWORD PTR [ebp+0x10]
10001990:	mov    edx,DWORD PTR [ebp+0xc]
10001993:	mov    DWORD PTR [esp+0x28],ecx
10001997:	mov    DWORD PTR [esp+0x24],edx
1000199b:	jmp    0x100019a0
1000199d:	lea    ecx,[ecx+0x0]
100019a0:	lea    ecx,[esp+0x24]
100019a4:	lea    eax,[ebx+edi*1]
100019a7:	push   0x4
100019a9:	push   ecx
100019aa:	mov    DWORD PTR [esp+0x3c],0x4000
100019b2:	mov    DWORD PTR [esp+0x38],eax
100019b6:	call   0x10028390
100019bb:	mov    esi,eax
100019bd:	add    esp,0x8
100019c0:	cmp    esi,0xfffffffc
100019c3:	mov    DWORD PTR [esp+0x18],esi
100019c7:	jl     0x100019db
100019c9:	cmp    esi,0xfffffffd
100019cc:	jle    0x10001a72
100019d2:	cmp    esi,0x2
100019d5:	je     0x10001a72
100019db:	mov    ecx,DWORD PTR [esp+0x34]
100019df:	mov    eax,0x4000
100019e4:	sub    eax,ecx
100019e6:	add    ebx,eax
100019e8:	test   ecx,ecx
100019ea:	mov    DWORD PTR [esp+0x14],ebx
100019ee:	jne    0x10001a59
100019f0:	mov    esi,edi
100019f2:	mov    DWORD PTR [esp+0x1c],ecx
100019f6:	mov    DWORD PTR [esp+0x20],esi
100019fa:	add    ebx,0x4000
10001a00:	push   ebx
10001a01:	mov    BYTE PTR [esp+0x6c],0x1
10001a06:	call   0x1001868d
10001a0b:	mov    edi,eax
10001a0d:	add    esp,0x4
10001a10:	test   edi,edi
10001a12:	mov    DWORD PTR [esp+0x10],0x0
10001a1a:	je     0x10001a26
10001a1c:	push   0x0
10001a1e:	call   0x1001876e
10001a23:	add    esp,0x4
10001a26:	mov    edx,DWORD PTR [esp+0x10]
10001a2a:	push   edx
10001a2b:	call   0x1001876e
10001a30:	mov    ebx,DWORD PTR [esp+0x18]
10001a34:	push   ebx
10001a35:	push   esi
10001a36:	push   edi
10001a37:	call   0x10019470
10001a3c:	push   esi
10001a3d:	mov    BYTE PTR [esp+0x7c],0x0
10001a42:	call   0x1001876e
10001a47:	add    esp,0x14
10001a4a:	cmp    DWORD PTR [esp+0x34],0x0
10001a4f:	je     0x100019a0
10001a55:	mov    esi,DWORD PTR [esp+0x18]
10001a59:	lea    ecx,[esp+0x24]
10001a5d:	push   ecx
10001a5e:	call   0x10029990
10001a63:	add    esp,0x4
10001a66:	cmp    esi,0x1
10001a69:	jne    0x10001ab2
10001a6b:	mov    edx,DWORD PTR [ebp+0x14]
10001a6e:	mov    DWORD PTR [edx],ebx
10001a70:	jmp    0x10001ad6
10001a72:	lea    eax,[esp+0x24]
10001a76:	push   eax
10001a77:	call   0x10029990
10001a7c:	mov    esi,DWORD PTR [ebp+0x8]
10001a7f:	push   0x0
10001a81:	mov    DWORD PTR [esp+0x28],0x0
10001a89:	mov    DWORD PTR [esi],0x0
10001a8f:	call   0x1001876e
10001a94:	push   edi
10001a95:	call   0x1001876e
10001a9a:	add    esp,0xc
10001a9d:	mov    eax,esi
10001a9f:	mov    ecx,DWORD PTR [esp+0x60]
10001aa3:	mov    DWORD PTR fs:0x0,ecx
10001aaa:	pop    ecx
10001aab:	pop    edi
10001aac:	pop    esi
10001aad:	pop    ebx
10001aae:	mov    esp,ebp
10001ab0:	pop    ebp
10001ab1:	ret    
10001ab2:	test   edi,edi
10001ab4:	mov    DWORD PTR [esp+0x18],0x0
10001abc:	je     0x10001ac7
10001abe:	push   edi
10001abf:	call   0x1001876e
10001ac4:	add    esp,0x4
10001ac7:	mov    eax,DWORD PTR [esp+0x18]
10001acb:	push   eax
10001acc:	xor    edi,edi
10001ace:	call   0x1001876e
10001ad3:	add    esp,0x4
10001ad6:	mov    esi,DWORD PTR [ebp+0x8]
10001ad9:	push   0x0
10001adb:	mov    DWORD PTR [esi],edi
10001add:	call   0x1001876e
10001ae2:	add    esp,0x4
10001ae5:	mov    eax,esi
10001ae7:	mov    ecx,DWORD PTR [esp+0x60]
10001aeb:	mov    DWORD PTR fs:0x0,ecx
10001af2:	pop    ecx
10001af3:	pop    edi
10001af4:	pop    esi
10001af5:	pop    ebx
10001af6:	mov    esp,ebp
10001af8:	pop    ebp
10001af9:	ret    
10001afa:	int3   
10001afb:	int3   
10001afc:	int3   
10001afd:	int3   
10001afe:	int3   
10001aff:	int3   
10001b00:	push   ebp
10001b01:	mov    ebp,esp
10001b03:	and    esp,0xfffffff8
10001b06:	sub    esp,0x18
10001b09:	lea    eax,[esp+0x8]
10001b0d:	push   eax
10001b0e:	call   DWORD PTR ds:0x1002f0f4
10001b14:	lea    ecx,[esp]
10001b17:	push   ecx
10001b18:	lea    edx,[esp+0xc]
10001b1c:	push   edx
10001b1d:	call   0x1000e660
10001b22:	call   eax
10001b24:	mov    edx,DWORD PTR [esp+0x4]
10001b28:	mov    eax,DWORD PTR [esp]
10001b2b:	mov    esp,ebp
10001b2d:	pop    ebp
10001b2e:	ret    
10001b2f:	int3   
10001b30:	sub    esp,0x74
10001b33:	mov    eax,ds:0x100c7654
10001b38:	xor    eax,esp
10001b3a:	mov    DWORD PTR [esp+0x70],eax
10001b3e:	mov    eax,DWORD PTR [esp+0x78]
10001b42:	movzx  ecx,BYTE PTR [eax+0xf]
10001b46:	movzx  edx,BYTE PTR [eax+0xe]
10001b4a:	push   ecx
10001b4b:	movzx  ecx,BYTE PTR [eax+0xd]
10001b4f:	push   edx
10001b50:	movzx  edx,BYTE PTR [eax+0xc]
10001b54:	push   ecx
10001b55:	movzx  ecx,BYTE PTR [eax+0xb]
10001b59:	push   edx
10001b5a:	movzx  edx,BYTE PTR [eax+0xa]
10001b5e:	push   ecx
10001b5f:	movzx  ecx,BYTE PTR [eax+0x9]
10001b63:	push   edx
10001b64:	movzx  edx,BYTE PTR [eax+0x8]
10001b68:	push   ecx
10001b69:	movzx  ecx,WORD PTR [eax+0x6]
10001b6d:	push   edx
10001b6e:	movzx  edx,WORD PTR [eax+0x4]
10001b72:	mov    eax,DWORD PTR [eax]
10001b74:	push   ecx
10001b75:	push   edx
10001b76:	push   eax
10001b77:	push   0x100b7820
10001b7c:	push   0x32
10001b7e:	push   0x100b7874
10001b83:	mov    DWORD PTR [esp+0x38],0x0
10001b8b:	call   0x100033d0
10001b90:	add    esp,0xc
10001b93:	push   eax
10001b94:	lea    ecx,[esp+0x34]
10001b98:	push   ecx
10001b99:	call   0x1001a297
10001b9e:	lea    eax,[esp+0x38]
10001ba2:	mov    DWORD PTR [esi+0x18],0xf
10001ba9:	mov    DWORD PTR [esi+0x14],0x0
10001bb0:	add    esp,0x34
10001bb3:	mov    BYTE PTR [esi+0x4],0x0
10001bb7:	lea    edx,[eax+0x1]
10001bba:	lea    ebx,[ebx+0x0]
10001bc0:	mov    cl,BYTE PTR [eax]
10001bc2:	add    eax,0x1
10001bc5:	test   cl,cl
10001bc7:	jne    0x10001bc0
10001bc9:	sub    eax,edx
10001bcb:	push   eax
10001bcc:	lea    edx,[esp+0x8]
10001bd0:	push   edx
10001bd1:	mov    ecx,esi
10001bd3:	call   0x10003a70
10001bd8:	mov    ecx,DWORD PTR [esp+0x70]
10001bdc:	xor    ecx,esp
10001bde:	mov    eax,esi
10001be0:	call   0x10018773
10001be5:	add    esp,0x74
10001be8:	ret    
10001be9:	int3   
10001bea:	int3   
10001beb:	int3   
10001bec:	int3   
10001bed:	int3   
10001bee:	int3   
10001bef:	int3   
10001bf0:	push   0xffffffff
10001bf2:	push   0x1002e201
10001bf7:	mov    eax,fs:0x0
10001bfd:	push   eax
10001bfe:	sub    esp,0x48
10001c01:	push   ebx
10001c02:	push   esi
10001c03:	push   edi
10001c04:	mov    eax,ds:0x100c7654
10001c09:	xor    eax,esp
10001c0b:	push   eax
10001c0c:	lea    eax,[esp+0x58]
10001c10:	mov    fs:0x0,eax
10001c16:	xor    ebx,ebx
10001c18:	mov    DWORD PTR [esp+0x60],ebx
10001c1c:	mov    DWORD PTR [esp+0x10],ebx
10001c20:	mov    eax,ds:0x100c9090
10001c25:	mov    edx,DWORD PTR [eax+0xc]
10001c28:	mov    ecx,0x100c9090
10001c2d:	call   edx
10001c2f:	mov    edi,DWORD PTR [esp+0x68]
10001c33:	add    eax,0x10
10001c36:	mov    DWORD PTR [edi],eax
10001c38:	mov    DWORD PTR [esp+0x60],ebx
10001c3c:	mov    ecx,0x1
10001c41:	sub    ecx,DWORD PTR [eax-0x4]
10001c44:	mov    eax,DWORD PTR [eax-0x8]
10001c47:	sub    eax,0x800
10001c4c:	or     eax,ecx
10001c4e:	mov    DWORD PTR [esp+0x10],0x1
10001c56:	jge    0x10001c64
10001c58:	push   0x800
10001c5d:	mov    ecx,edi
10001c5f:	call   0x10004aa0
10001c64:	mov    eax,DWORD PTR [edi]
10001c66:	push   0x800
10001c6b:	push   eax
10001c6c:	call   0x1000e2f0
10001c71:	call   eax
10001c73:	test   eax,eax
10001c75:	jne    0x10001cdc
10001c77:	push   0x100b78b8
10001c7c:	push   0x1c
10001c7e:	push   0x100b7910
10001c83:	call   0x100033d0
10001c88:	mov    ecx,eax
10001c8a:	add    esp,0xc
10001c8d:	mov    DWORD PTR [esp+0x2c],0xf
10001c95:	mov    DWORD PTR [esp+0x28],ebx
10001c99:	mov    BYTE PTR [esp+0x18],bl
10001c9d:	lea    esi,[ecx+0x1]
10001ca0:	mov    dl,BYTE PTR [ecx]
10001ca2:	add    ecx,0x1
10001ca5:	cmp    dl,bl
10001ca7:	jne    0x10001ca0
10001ca9:	sub    ecx,esi
10001cab:	push   ecx
10001cac:	push   eax
10001cad:	lea    ecx,[esp+0x1c]
10001cb1:	call   0x10003a70
10001cb6:	lea    eax,[esp+0x14]
10001cba:	push   eax
10001cbb:	lea    ecx,[esp+0x34]
10001cbf:	push   ecx
10001cc0:	mov    DWORD PTR [esp+0x68],0x1
10001cc8:	call   0x10001550
10001ccd:	push   0x100bb980
10001cd2:	lea    edx,[esp+0x34]
10001cd6:	push   edx
10001cd7:	call   0x10018e6e
10001cdc:	mov    edx,DWORD PTR [edi]
10001cde:	cmp    edx,ebx
10001ce0:	jne    0x10001ce6
10001ce2:	xor    eax,eax
10001ce4:	jmp    0x10001d01
10001ce6:	mov    eax,edx
10001ce8:	lea    esi,[eax+0x2]
10001ceb:	jmp    0x10001cf0
10001ced:	lea    ecx,[ecx+0x0]
10001cf0:	mov    cx,WORD PTR [eax]
10001cf3:	add    eax,0x2
10001cf6:	cmp    cx,bx
10001cf9:	jne    0x10001cf0
10001cfb:	sub    eax,esi
10001cfd:	sar    eax,1
10001cff:	js     0x10001d45
10001d01:	cmp    eax,DWORD PTR [edx-0x8]
10001d04:	jg     0x10001d45
10001d06:	mov    DWORD PTR [edx-0xc],eax
10001d09:	mov    ecx,DWORD PTR [edi]
10001d0b:	mov    WORD PTR [ecx+eax*2],bx
10001d0f:	mov    ecx,DWORD PTR [edi]
10001d11:	mov    edx,DWORD PTR [ecx-0xc]
10001d14:	lea    eax,[edx-0x1]
10001d17:	cmp    eax,ebx
10001d19:	jl     0x10001d45
10001d1b:	cmp    eax,edx
10001d1d:	jg     0x10001d45
10001d1f:	movzx  eax,WORD PTR [ecx+eax*2]
10001d23:	cmp    ax,0x5c
10001d27:	je     0x10001d30
10001d29:	push   0x5c
10001d2b:	call   0x10002f80
10001d30:	mov    eax,edi
10001d32:	mov    ecx,DWORD PTR [esp+0x58]
10001d36:	mov    DWORD PTR fs:0x0,ecx
10001d3d:	pop    ecx
10001d3e:	pop    edi
10001d3f:	pop    esi
10001d40:	pop    ebx
10001d41:	add    esp,0x54
10001d44:	ret    
10001d45:	push   0x80070057
10001d4a:	call   0x10001090
10001d4f:	int3   
10001d50:	push   0xffffffff
10001d52:	push   0x1002e3f1
10001d57:	mov    eax,fs:0x0
10001d5d:	push   eax
10001d5e:	sub    esp,0x50
10001d61:	push   ebx
10001d62:	push   ebp
10001d63:	push   esi
10001d64:	push   edi
10001d65:	mov    eax,ds:0x100c7654
10001d6a:	xor    eax,esp
10001d6c:	push   eax
10001d6d:	lea    eax,[esp+0x64]
10001d71:	mov    fs:0x0,eax
10001d77:	mov    esi,DWORD PTR [esp+0x74]
10001d7b:	xor    ebx,ebx
10001d7d:	push   ebx
10001d7e:	mov    DWORD PTR [esp+0x70],ebx
10001d82:	push   esi
10001d83:	mov    DWORD PTR [esp+0x20],ebx
10001d87:	call   0x10001bf0
10001d8c:	add    esp,0x8
10001d8f:	mov    DWORD PTR [esp+0x6c],ebx
10001d93:	mov    eax,DWORD PTR [esi]
10001d95:	mov    ebp,0x1
10001d9a:	sub    eax,0x10
10001d9d:	cmp    DWORD PTR [eax+0xc],ebp
10001da0:	mov    DWORD PTR [esp+0x18],ebp
10001da4:	jle    0x10001db1
10001da6:	mov    eax,DWORD PTR [eax+0x4]
10001da9:	push   eax
10001daa:	mov    ecx,esi
10001dac:	call   0x10003e80
10001db1:	mov    eax,DWORD PTR [esi]
10001db3:	push   0x5c
10001db5:	push   eax
10001db6:	call   0x10019c65
10001dbb:	mov    edi,eax
10001dbd:	add    esp,0x8
10001dc0:	cmp    edi,ebx
10001dc2:	jne    0x10001e27
10001dc4:	push   0x100b7930
10001dc9:	push   0x18
10001dcb:	push   0x100b79b0
10001dd0:	call   0x100033d0
10001dd5:	mov    ecx,eax
10001dd7:	add    esp,0xc
10001dda:	mov    DWORD PTR [esp+0x34],0xf
10001de2:	mov    DWORD PTR [esp+0x30],ebx
10001de6:	mov    BYTE PTR [esp+0x20],bl
10001dea:	lea    esi,[ecx+0x1]
10001ded:	lea    ecx,[ecx+0x0]
10001df0:	mov    dl,BYTE PTR [ecx]
10001df2:	add    ecx,ebp
10001df4:	cmp    dl,bl
10001df6:	jne    0x10001df0
10001df8:	sub    ecx,esi
10001dfa:	push   ecx
10001dfb:	push   eax
10001dfc:	lea    ecx,[esp+0x24]
10001e00:	call   0x10003a70
10001e05:	lea    ecx,[esp+0x1c]
10001e09:	push   ecx
10001e0a:	lea    edx,[esp+0x3c]
10001e0e:	push   edx
10001e0f:	mov    DWORD PTR [esp+0x74],ebp
10001e13:	call   0x10001550
10001e18:	push   0x100bb980
10001e1d:	lea    eax,[esp+0x3c]
10001e21:	push   eax
10001e22:	call   0x10018e6e
10001e27:	mov    eax,DWORD PTR [esi]
10001e29:	sub    eax,0x10
10001e2c:	cmp    DWORD PTR [eax+0xc],ebp
10001e2f:	jle    0x10001e3c
10001e31:	mov    ecx,DWORD PTR [eax+0x4]
10001e34:	push   ecx
10001e35:	mov    ecx,esi
10001e37:	call   0x10003e80
10001e3c:	mov    ecx,DWORD PTR [esi]
10001e3e:	sub    edi,ecx
10001e40:	sar    edi,1
10001e42:	add    edi,ebp
10001e44:	cmp    ecx,ebx
10001e46:	jne    0x10001e4c
10001e48:	xor    eax,eax
10001e4a:	jmp    0x10001e67
10001e4c:	mov    eax,ecx
10001e4e:	lea    ebp,[eax+0x2]
10001e51:	mov    dx,WORD PTR [eax]
10001e54:	add    eax,0x2
10001e57:	cmp    dx,bx
10001e5a:	jne    0x10001e51
10001e5c:	sub    eax,ebp
10001e5e:	sar    eax,1
10001e60:	js     0x10001eba
10001e62:	mov    ebp,0x1
10001e67:	cmp    eax,DWORD PTR [ecx-0x8]
10001e6a:	jg     0x10001eba
10001e6c:	mov    DWORD PTR [ecx-0xc],eax
10001e6f:	mov    edx,DWORD PTR [esi]
10001e71:	mov    WORD PTR [edx+eax*2],bx
10001e75:	mov    eax,DWORD PTR [esi]
10001e77:	sub    eax,0x10
10001e7a:	mov    ecx,ebp
10001e7c:	sub    ecx,DWORD PTR [eax+0xc]
10001e7f:	mov    eax,DWORD PTR [eax+0x8]
10001e82:	sub    eax,edi
10001e84:	or     eax,ecx
10001e86:	jge    0x10001e90
10001e88:	push   edi
10001e89:	mov    ecx,esi
10001e8b:	call   0x10004aa0
10001e90:	cmp    edi,ebx
10001e92:	jl     0x10001eba
10001e94:	mov    eax,DWORD PTR [esi]
10001e96:	cmp    edi,DWORD PTR [eax-0x8]
10001e99:	jg     0x10001eba
10001e9b:	mov    DWORD PTR [eax-0xc],edi
10001e9e:	mov    eax,DWORD PTR [esi]
10001ea0:	mov    WORD PTR [eax+edi*2],bx
10001ea4:	mov    eax,esi
10001ea6:	mov    ecx,DWORD PTR [esp+0x64]
10001eaa:	mov    DWORD PTR fs:0x0,ecx
10001eb1:	pop    ecx
10001eb2:	pop    edi
10001eb3:	pop    esi
10001eb4:	pop    ebp
10001eb5:	pop    ebx
10001eb6:	add    esp,0x5c
10001eb9:	ret    
10001eba:	push   0x80070057
10001ebf:	call   0x10001090
10001ec4:	int3   
10001ec5:	int3   
10001ec6:	int3   
10001ec7:	int3   
10001ec8:	int3   
10001ec9:	int3   
10001eca:	int3   
10001ecb:	int3   
10001ecc:	int3   
10001ecd:	int3   
10001ece:	int3   
10001ecf:	int3   
10001ed0:	push   ebp
10001ed1:	mov    ebp,esp
10001ed3:	push   0xffffffff
10001ed5:	push   0x1002e53f
10001eda:	mov    eax,fs:0x0
10001ee0:	push   eax
10001ee1:	sub    esp,0x134
10001ee7:	mov    eax,ds:0x100c7654
10001eec:	xor    eax,ebp
10001eee:	mov    DWORD PTR [ebp-0x10],eax
10001ef1:	push   ebx
10001ef2:	push   esi
10001ef3:	push   edi
10001ef4:	push   eax
10001ef5:	lea    eax,[ebp-0xc]
10001ef8:	mov    fs:0x0,eax
10001efe:	call   DWORD PTR ds:0x100c75d4
10001f04:	mov    ebx,eax
10001f06:	lea    eax,[ebp-0x7c]
10001f09:	push   eax
10001f0a:	call   0x10001d50
10001f0f:	add    esp,0x4
10001f12:	push   0x0
10001f14:	push   0x0
10001f16:	lea    ecx,[ebp-0x88]
10001f1c:	push   ecx
10001f1d:	lea    edx,[ebp-0x84]
10001f23:	push   edx
10001f24:	lea    eax,[ebp-0x80]
10001f27:	push   eax
10001f28:	push   0x0
10001f2a:	mov    DWORD PTR [ebp-0x4],0x0
10001f31:	mov    ecx,DWORD PTR [ebp-0x7c]
10001f34:	push   0x0
10001f36:	push   ecx
10001f37:	call   0x1000e280
10001f3c:	call   eax
10001f3e:	test   eax,eax
10001f40:	jne    0x10002070
10001f46:	call   DWORD PTR ds:0x1002f094
10001f4c:	push   0xa
10001f4e:	lea    edx,[ebp-0x78]
10001f51:	push   edx
10001f52:	push   eax
10001f53:	call   0x1001a134
10001f58:	mov    eax,DWORD PTR [ebp-0x7c]
10001f5b:	add    esp,0xc
10001f5e:	test   eax,eax
10001f60:	mov    edi,eax
10001f62:	je     0x10001f90
10001f64:	push   eax
10001f65:	call   DWORD PTR ds:0x1002f034
10001f6b:	add    eax,0x1
10001f6e:	cmp    eax,0x3fffffff
10001f73:	jle    0x10001f79
10001f75:	xor    edi,edi
10001f77:	jmp    0x10001f90
10001f79:	lea    esi,[eax+eax*1]
10001f7c:	mov    eax,esi
10001f7e:	call   0x10018790
10001f83:	mov    eax,esp
10001f85:	push   ebx
10001f86:	push   esi
10001f87:	push   edi
10001f88:	push   eax
10001f89:	call   0x10001050
10001f8e:	mov    edi,eax
10001f90:	push   0x100b7a20
10001f95:	push   0x21
10001f97:	push   0x100b7a8c
10001f9c:	call   0x100033d0
10001fa1:	mov    ecx,eax
10001fa3:	add    esp,0xc
10001fa6:	mov    DWORD PTR [ebp-0x8c],0xf
10001fb0:	mov    DWORD PTR [ebp-0x90],0x0
10001fba:	mov    BYTE PTR [ebp-0xa0],0x0
10001fc1:	lea    esi,[ecx+0x1]
10001fc4:	mov    dl,BYTE PTR [ecx]
10001fc6:	add    ecx,0x1
10001fc9:	test   dl,dl
10001fcb:	jne    0x10001fc4
10001fcd:	sub    ecx,esi
10001fcf:	push   ecx
10001fd0:	push   eax
10001fd1:	lea    ecx,[ebp-0xa4]
10001fd7:	call   0x10003a70
10001fdc:	lea    eax,[ebp-0xa4]
10001fe2:	push   eax
10001fe3:	lea    esi,[ebp-0xe8]
10001fe9:	mov    BYTE PTR [ebp-0x4],0x1
10001fed:	call   0x10006d00
10001ff2:	add    esp,0x4
10001ff5:	mov    esi,eax
10001ff7:	push   0x100b79d0
10001ffc:	push   0x7
10001ffe:	push   0x100b7a18
10002003:	mov    BYTE PTR [ebp-0x4],0x2
10002007:	call   0x100033d0
1000200c:	add    esp,0xc
1000200f:	push   esi
10002010:	mov    edi,eax
10002012:	lea    esi,[ebp-0x104]
10002018:	call   0x10006d00
1000201d:	add    esp,0x4
10002020:	push   eax
10002021:	lea    edi,[ebp-0x78]
10002024:	lea    esi,[ebp-0x13c]
1000202a:	mov    BYTE PTR [ebp-0x4],0x3
1000202e:	call   0x10006d00
10002033:	add    esp,0x4
10002036:	push   eax
10002037:	mov    edi,0x100b79cc
1000203c:	lea    esi,[ebp-0x120]
10002042:	mov    BYTE PTR [ebp-0x4],0x4
10002046:	call   0x10006d00
1000204b:	add    esp,0x4
1000204e:	push   eax
1000204f:	lea    ecx,[ebp-0xcc]
10002055:	push   ecx
10002056:	mov    BYTE PTR [ebp-0x4],0x5
1000205a:	call   0x10001550
1000205f:	push   0x100bb980
10002064:	lea    edx,[ebp-0xcc]
1000206a:	push   edx
1000206b:	call   0x10018e6e
10002070:	mov    esi,DWORD PTR [ebp-0x80]
10002073:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000207a:	mov    eax,DWORD PTR [ebp-0x7c]
1000207d:	add    eax,0xfffffff0
10002080:	lea    ecx,[eax+0xc]
10002083:	or     edx,0xffffffff
10002086:	lock xadd DWORD PTR [ecx],edx
1000208a:	dec    edx
1000208b:	test   edx,edx
1000208d:	jg     0x10002099
1000208f:	mov    ecx,DWORD PTR [eax]
10002091:	mov    edx,DWORD PTR [ecx]
10002093:	push   eax
10002094:	mov    eax,DWORD PTR [edx+0x4]
10002097:	call   eax
10002099:	mov    eax,esi
1000209b:	lea    esp,[ebp-0x150]
100020a1:	mov    ecx,DWORD PTR [ebp-0xc]
100020a4:	mov    DWORD PTR fs:0x0,ecx
100020ab:	pop    ecx
100020ac:	pop    edi
100020ad:	pop    esi
100020ae:	pop    ebx
100020af:	mov    ecx,DWORD PTR [ebp-0x10]
100020b2:	xor    ecx,ebp
100020b4:	call   0x10018773
100020b9:	mov    esp,ebp
100020bb:	pop    ebp
100020bc:	ret    
100020bd:	int3   
100020be:	int3   
100020bf:	int3   
100020c0:	push   ebp
100020c1:	mov    ebp,esp
100020c3:	and    esp,0xfffffff8
100020c6:	push   ecx
100020c7:	push   edi
100020c8:	mov    DWORD PTR [esp+0x4],0x0
100020d0:	call   0x10001ed0
100020d5:	mov    ecx,DWORD PTR [ebp+0xc]
100020d8:	mov    edi,DWORD PTR [ebp+0x8]
100020db:	push   ecx
100020dc:	mov    ecx,DWORD PTR [ebp+0x10]
100020df:	mov    edx,eax
100020e1:	call   0x10002300
100020e6:	add    esp,0x4
100020e9:	mov    eax,edi
100020eb:	pop    edi
100020ec:	mov    esp,ebp
100020ee:	pop    ebp
100020ef:	ret    
100020f0:	sub    esp,0x8
100020f3:	mov    DWORD PTR [esp],0x0
100020fa:	mov    DWORD PTR [esp+0x4],0x0
10002102:	call   DWORD PTR ds:0x100c75d4
10002108:	mov    eax,DWORD PTR [esp+0x10]
1000210c:	mov    eax,DWORD PTR [eax]
1000210e:	lea    ecx,[esp+0x4]
10002112:	push   ecx
10002113:	push   0x0
10002115:	lea    edx,[esp+0x8]
10002119:	push   edx
1000211a:	push   0x0
1000211c:	push   0x0
1000211e:	push   0x4
10002120:	push   0x1
10002122:	push   eax
10002123:	call   0x1000eb80
10002128:	call   eax
1000212a:	test   eax,eax
1000212c:	jne    0x1000214a
1000212e:	mov    ecx,DWORD PTR [esp]
10002131:	mov    eax,DWORD PTR [esp+0xc]
10002135:	mov    eax,DWORD PTR [eax]
10002137:	push   0x0
10002139:	push   ecx
1000213a:	push   0x0
1000213c:	push   0x0
1000213e:	push   0x4
10002140:	push   0x1
10002142:	push   eax
10002143:	call   0x1000ec00
10002148:	call   eax
1000214a:	add    esp,0x8
1000214d:	ret    
1000214e:	int3   
1000214f:	int3   
10002150:	mov    eax,0x10000000
10002155:	ret    
10002156:	int3   
10002157:	int3   
10002158:	int3   
10002159:	int3   
1000215a:	int3   
1000215b:	int3   
1000215c:	int3   
1000215d:	int3   
1000215e:	int3   
1000215f:	int3   
10002160:	push   ecx
10002161:	mov    eax,DWORD PTR [esp+0xc]
10002165:	push   esi
10002166:	mov    esi,DWORD PTR [esp+0xc]
1000216a:	push   eax
1000216b:	push   esi
1000216c:	mov    DWORD PTR [esp+0xc],0x0
10002174:	call   0x10002190
10002179:	add    esp,0x8
1000217c:	mov    eax,esi
1000217e:	pop    esi
1000217f:	pop    ecx
10002180:	ret    
10002181:	int3   
10002182:	int3   
10002183:	int3   
10002184:	int3   
10002185:	int3   
10002186:	int3   
10002187:	int3   
10002188:	int3   
10002189:	int3   
1000218a:	int3   
1000218b:	int3   
1000218c:	int3   
1000218d:	int3   
1000218e:	int3   
1000218f:	int3   
10002190:	push   0xffffffff
10002192:	push   0x1002d818
10002197:	mov    eax,fs:0x0
1000219d:	push   eax
1000219e:	push   ecx
1000219f:	push   ebp
100021a0:	push   esi
100021a1:	mov    eax,ds:0x100c7654
100021a6:	xor    eax,esp
100021a8:	push   eax
100021a9:	lea    eax,[esp+0x10]
100021ad:	mov    fs:0x0,eax
100021b3:	mov    ebp,DWORD PTR [esp+0x20]
100021b7:	mov    DWORD PTR [esp+0xc],0x0
100021bf:	mov    eax,ds:0x100c9090
100021c4:	mov    edx,DWORD PTR [eax+0xc]
100021c7:	mov    ecx,0x100c9090
100021cc:	call   edx
100021ce:	lea    esi,[eax+0x10]
100021d1:	mov    DWORD PTR [esp+0xc],esi
100021d5:	mov    DWORD PTR [esp+0x18],0x0
100021dd:	mov    eax,DWORD PTR [esi-0x8]
100021e0:	mov    ecx,0x1
100021e5:	sub    ecx,DWORD PTR [esi-0x4]
100021e8:	sub    eax,0x104
100021ed:	or     eax,ecx
100021ef:	jge    0x10002203
100021f1:	push   0x104
100021f6:	lea    ecx,[esp+0x10]
100021fa:	call   0x10004aa0
100021ff:	mov    esi,DWORD PTR [esp+0xc]
10002203:	cmp    DWORD PTR [esi-0x8],0x104
1000220a:	jge    0x10002216
1000220c:	push   0x80070057
10002211:	call   0x10001090
10002216:	push   0x104
1000221b:	push   esi
1000221c:	mov    DWORD PTR [esi-0xc],0x104
10002223:	push   0x10000000
10002228:	mov    WORD PTR [esi+0x208],0x0
10002231:	call   DWORD PTR ds:0x1002f0ec
10002237:	mov    eax,esi
10002239:	lea    edx,[eax+0x2]
1000223c:	lea    esp,[esp+0x0]
10002240:	mov    cx,WORD PTR [eax]
10002243:	add    eax,0x2
10002246:	test   cx,cx
10002249:	jne    0x10002240
1000224b:	sub    eax,edx
1000224d:	sar    eax,1
1000224f:	js     0x1000220c
10002251:	cmp    eax,DWORD PTR [esi-0x8]
10002254:	jg     0x1000220c
10002256:	cmp    BYTE PTR [esp+0x24],cl
1000225a:	mov    DWORD PTR [esi-0xc],eax
1000225d:	mov    WORD PTR [esi+eax*2],cx
10002261:	je     0x10002291
10002263:	add    esi,0xfffffff0
10002266:	push   esi
10002267:	call   0x10004af0
1000226c:	add    eax,0x10
1000226f:	mov    DWORD PTR [ebp+0x0],eax
10002272:	add    esp,0x4
10002275:	mov    DWORD PTR [esp+0x18],0xffffffff
1000227d:	lea    eax,[esi+0xc]
10002280:	or     ecx,0xffffffff
10002283:	lock xadd DWORD PTR [eax],ecx
10002287:	dec    ecx
10002288:	test   ecx,ecx
1000228a:	jg     0x100022e6
1000228c:	mov    ecx,DWORD PTR [esi]
1000228e:	push   esi
1000228f:	jmp    0x100022df
10002291:	push   0x5c
10002293:	push   esi
10002294:	call   0x10019f44
10002299:	add    esp,0x8
1000229c:	test   eax,eax
1000229e:	je     0x100022ab
100022a0:	sub    eax,esi
100022a2:	sar    eax,1
100022a4:	mov    ecx,eax
100022a6:	cmp    ecx,0xffffffff
100022a9:	jne    0x100022af
100022ab:	xor    ecx,ecx
100022ad:	jmp    0x100022b2
100022af:	add    ecx,0x1
100022b2:	mov    eax,DWORD PTR [esi-0xc]
100022b5:	sub    eax,ecx
100022b7:	push   eax
100022b8:	push   ebp
100022b9:	lea    ecx,[esp+0x14]
100022bd:	call   0x10003010
100022c2:	lea    eax,[esi-0x10]
100022c5:	mov    DWORD PTR [esp+0x18],0xffffffff
100022cd:	lea    ecx,[eax+0xc]
100022d0:	or     edx,0xffffffff
100022d3:	lock xadd DWORD PTR [ecx],edx
100022d7:	dec    edx
100022d8:	test   edx,edx
100022da:	jg     0x100022e6
100022dc:	mov    ecx,DWORD PTR [eax]
100022de:	push   eax
100022df:	mov    edx,DWORD PTR [ecx]
100022e1:	mov    eax,DWORD PTR [edx+0x4]
100022e4:	call   eax
100022e6:	mov    eax,ebp
100022e8:	mov    ecx,DWORD PTR [esp+0x10]
100022ec:	mov    DWORD PTR fs:0x0,ecx
100022f3:	pop    ecx
100022f4:	pop    esi
100022f5:	pop    ebp
100022f6:	add    esp,0x10
100022f9:	ret    
100022fa:	int3   
100022fb:	int3   
100022fc:	int3   
100022fd:	int3   
100022fe:	int3   
100022ff:	int3   
10002300:	push   ebp
10002301:	mov    ebp,esp
10002303:	push   0xffffffff
10002305:	push   0x1002e1af
1000230a:	mov    eax,fs:0x0
10002310:	push   eax
10002311:	sub    esp,0xa14
10002317:	mov    eax,ds:0x100c7654
1000231c:	xor    eax,ebp
1000231e:	mov    DWORD PTR [ebp-0x14],eax
10002321:	push   ebx
10002322:	push   esi
10002323:	push   eax
10002324:	lea    eax,[ebp-0xc]
10002327:	mov    fs:0x0,eax
1000232d:	mov    esi,ecx
1000232f:	mov    ecx,DWORD PTR [ebp+0x8]
10002332:	xor    eax,eax
10002334:	mov    DWORD PTR [ebp-0x4],eax
10002337:	mov    DWORD PTR [ebp-0x30],eax
1000233a:	lea    eax,[esi+esi*4]
1000233d:	lea    eax,[ecx+eax*2]
10002340:	add    edx,eax
10002342:	lea    eax,[ebp-0xa1c]
10002348:	mov    DWORD PTR [ebp-0x34],edi
1000234b:	call   0x10001830
10002350:	mov    ebx,0x1
10002355:	test   BYTE PTR ds:0x100ca04c,bl
1000235b:	jne    0x10002429
10002361:	or     DWORD PTR ds:0x100ca04c,ebx
10002367:	push   0x100b7c60
1000236c:	push   0x3
1000236e:	push   0x100b7c54
10002373:	mov    DWORD PTR [ebp-0x4],ebx
10002376:	call   0x100035f0
1000237b:	add    esp,0xc
1000237e:	push   0x100b7bf0
10002383:	push   0x3
10002385:	push   0x100b7be8
1000238a:	mov    ds:0x100c9d3c,eax
1000238f:	mov    DWORD PTR ds:0x100c9d40,ebx
10002395:	call   0x100035f0
1000239a:	add    esp,0xc
1000239d:	push   0x100b7b98
100023a2:	push   0x0
100023a4:	push   0x100b77f8
100023a9:	mov    ds:0x100c9d44,eax
100023ae:	mov    DWORD PTR ds:0x100c9d48,ebx
100023b4:	call   0x100035f0
100023b9:	add    esp,0xc
100023bc:	push   0x100b7b40
100023c1:	push   0x0
100023c3:	push   0x100b77f8
100023c8:	mov    ds:0x100c9d4c,eax
100023cd:	mov    DWORD PTR ds:0x100c9d50,ebx
100023d3:	call   0x100035f0
100023d8:	add    esp,0xc
100023db:	push   0x100b7ac0
100023e0:	push   0x4
100023e2:	push   0x100b7ab0
100023e7:	mov    ds:0x100c9d54,eax
100023ec:	mov    DWORD PTR ds:0x100c9d58,ebx
100023f2:	call   0x100035f0
100023f7:	mov    ds:0x100c9d5c,eax
100023fc:	mov    ecx,0x100b77f8
10002401:	mov    eax,0x2
10002406:	add    esp,0xc
10002409:	mov    DWORD PTR ds:0x100c9d60,ebx
1000240f:	mov    DWORD PTR ds:0x100c9d64,ecx
10002415:	mov    ds:0x100c9d68,eax
1000241a:	mov    DWORD PTR ds:0x100c9d6c,ecx
10002420:	mov    ds:0x100c9d70,eax
10002425:	mov    BYTE PTR [ebp-0x4],0x0
10002429:	lea    ecx,[esi-0x1]
1000242c:	cmp    ecx,0x5
1000242f:	ja     0x1000244d
10002431:	lea    eax,[esi*8+0x0]
10002438:	sub    eax,esi
1000243a:	add    eax,DWORD PTR [ebp+0x8]
1000243d:	mov    ecx,DWORD PTR [eax*8+0x100c9d04]
10002444:	mov    esi,DWORD PTR [eax*8+0x100c9d08]
1000244b:	jmp    0x10002454
1000244d:	mov    ecx,0x100b77f8
10002452:	xor    esi,esi
10002454:	push   ecx
10002455:	mov    ecx,edi
10002457:	call   0x10002dc0
1000245c:	xor    ecx,ecx
1000245e:	mov    eax,esi
10002460:	sub    eax,ebx
10002462:	mov    DWORD PTR [ebp-0x4],ecx
10002465:	mov    DWORD PTR [ebp-0x30],ebx
10002468:	je     0x10002584
1000246e:	sub    eax,ebx
10002470:	jne    0x10002561
10002476:	mov    DWORD PTR [ebp-0x20],eax
10002479:	mov    DWORD PTR [ebp-0x1c],eax
1000247c:	mov    DWORD PTR [ebp-0x18],eax
1000247f:	or     ebx,0xffffffff
10002482:	lea    eax,[ebp-0xa1c]
10002488:	call   0x10001870
1000248d:	mov    DWORD PTR [ebp-0x24],eax
10002490:	or     ebx,0xffffffff
10002493:	lea    eax,[ebp-0xa1c]
10002499:	call   0x10001870
1000249e:	mov    DWORD PTR [ebp-0x20],eax
100024a1:	or     ebx,0xffffffff
100024a4:	lea    eax,[ebp-0xa1c]
100024aa:	call   0x10001870
100024af:	mov    DWORD PTR [ebp-0x1c],eax
100024b2:	or     ebx,0xffffffff
100024b5:	lea    eax,[ebp-0xa1c]
100024bb:	call   0x10001870
100024c0:	mov    DWORD PTR [ebp-0x18],eax
100024c3:	call   DWORD PTR ds:0x100c75d4
100024c9:	lea    edx,[ebp-0x24]
100024cc:	push   edx
100024cd:	lea    esi,[ebp-0x50]
100024d0:	mov    DWORD PTR [ebp-0x28],eax
100024d3:	call   0x10001b30
100024d8:	add    esp,0x4
100024db:	mov    DWORD PTR [ebp-0x4],0x2
100024e2:	cmp    DWORD PTR [eax+0x18],0x10
100024e6:	jb     0x100024ed
100024e8:	mov    ebx,DWORD PTR [eax+0x4]
100024eb:	jmp    0x100024f0
100024ed:	lea    ebx,[eax+0x4]
100024f0:	test   ebx,ebx
100024f2:	jne    0x100024fa
100024f4:	xor    eax,eax
100024f6:	xor    ecx,ecx
100024f8:	jmp    0x10002546
100024fa:	push   ebx
100024fb:	call   DWORD PTR ds:0x1002f044
10002501:	mov    esi,eax
10002503:	add    esi,0x1
10002506:	cmp    esi,0x3fffffff
1000250c:	jle    0x10002514
1000250e:	xor    eax,eax
10002510:	xor    ecx,ecx
10002512:	jmp    0x10002546
10002514:	lea    eax,[esi+esi*1]
10002517:	call   0x10018790
1000251c:	mov    ecx,DWORD PTR [ebp-0x28]
1000251f:	mov    eax,esp
10002521:	push   ecx
10002522:	push   esi
10002523:	push   ebx
10002524:	push   eax
10002525:	call   0x10001010
1000252a:	test   eax,eax
1000252c:	jne    0x10002532
1000252e:	xor    ecx,ecx
10002530:	jmp    0x10002546
10002532:	mov    ecx,eax
10002534:	lea    esi,[ecx+0x2]
10002537:	mov    dx,WORD PTR [ecx]
1000253a:	add    ecx,0x2
1000253d:	test   dx,dx
10002540:	jne    0x10002537
10002542:	sub    ecx,esi
10002544:	sar    ecx,1
10002546:	push   ecx
10002547:	push   eax
10002548:	mov    ecx,edi
1000254a:	call   0x10003d30
1000254f:	cmp    DWORD PTR [ebp-0x38],0x10
10002553:	jb     0x10002561
10002555:	mov    edx,DWORD PTR [ebp-0x4c]
10002558:	push   edx
10002559:	call   0x1001876e
1000255e:	add    esp,0x4
10002561:	mov    eax,edi
10002563:	lea    esp,[ebp-0xa2c]
10002569:	mov    ecx,DWORD PTR [ebp-0xc]
1000256c:	mov    DWORD PTR fs:0x0,ecx
10002573:	pop    ecx
10002574:	pop    esi
10002575:	pop    ebx
10002576:	mov    ecx,DWORD PTR [ebp-0x14]
10002579:	xor    ecx,ebp
1000257b:	call   0x10018773
10002580:	mov    esp,ebp
10002582:	pop    ebp
10002583:	ret    
10002584:	mov    DWORD PTR [ebp-0x28],ecx
10002587:	jmp    0x10002590
10002589:	lea    esp,[esp+0x0]
10002590:	mov    ebx,0x23
10002595:	lea    eax,[ebp-0xa1c]
1000259b:	call   0x10001870
100025a0:	cmp    eax,0xa
100025a3:	jae    0x100025b0
100025a5:	add    eax,0x30
100025a8:	movzx  eax,ax
100025ab:	mov    DWORD PTR [ebp-0x2c],eax
100025ae:	jmp    0x100025b9
100025b0:	add    eax,0x57
100025b3:	movzx  ecx,ax
100025b6:	mov    DWORD PTR [ebp-0x2c],ecx
100025b9:	mov    eax,DWORD PTR [edi]
100025bb:	mov    ebx,DWORD PTR [eax-0xc]
100025be:	mov    ecx,0x1
100025c3:	sub    ecx,DWORD PTR [eax-0x4]
100025c6:	mov    eax,DWORD PTR [eax-0x8]
100025c9:	lea    esi,[ebx+0x1]
100025cc:	sub    eax,esi
100025ce:	or     eax,ecx
100025d0:	jge    0x100025da
100025d2:	push   esi
100025d3:	mov    ecx,edi
100025d5:	call   0x10004aa0
100025da:	test   esi,esi
100025dc:	mov    eax,DWORD PTR [edi]
100025de:	mov    dx,WORD PTR [ebp-0x2c]
100025e2:	mov    WORD PTR [eax+ebx*2],dx
100025e6:	jl     0x1000260d
100025e8:	mov    eax,DWORD PTR [edi]
100025ea:	cmp    esi,DWORD PTR [eax-0x8]
100025ed:	jg     0x1000260d
100025ef:	mov    DWORD PTR [eax-0xc],esi
100025f2:	mov    eax,DWORD PTR [edi]
100025f4:	mov    WORD PTR [eax+esi*2],0x0
100025fa:	mov    eax,DWORD PTR [ebp-0x28]
100025fd:	add    eax,0x1
10002600:	cmp    eax,0x5
10002603:	mov    DWORD PTR [ebp-0x28],eax
10002606:	jl     0x10002590
10002608:	jmp    0x10002561
1000260d:	push   0x80070057
10002612:	call   0x10001090
10002617:	int3   
10002618:	int3   
10002619:	int3   
1000261a:	int3   
1000261b:	int3   
1000261c:	int3   
1000261d:	int3   
1000261e:	int3   
1000261f:	int3   
10002620:	push   0xffffffff
10002622:	push   0x1002e3a8
10002627:	mov    eax,fs:0x0
1000262d:	push   eax
1000262e:	push   ecx
1000262f:	mov    eax,ds:0x100c7654
10002634:	xor    eax,esp
10002636:	push   eax
10002637:	lea    eax,[esp+0x8]
1000263b:	mov    fs:0x0,eax
10002641:	cmp    DWORD PTR ds:0x100c9d74,0x0
10002648:	jne    0x100026f7
1000264e:	push   0x100b7cc0
10002653:	push   0x12
10002655:	push   0x100b7d0c
1000265a:	mov    DWORD PTR ds:0x100c9d74,0xc
10002664:	mov    DWORD PTR ds:0x100c9d7c,0x0
1000266e:	call   0x100035f0
10002673:	add    esp,0xc
10002676:	push   eax
10002677:	lea    ecx,[esp+0x8]
1000267b:	call   0x10002dc0
10002680:	mov    DWORD PTR [esp+0x10],0x0
10002688:	cmp    DWORD PTR ds:0x100c9d94,0x0
1000268f:	jne    0x10002696
10002691:	call   0x1000ddd0
10002696:	call   0x1000de50
1000269b:	cmp    eax,0x6a
1000269e:	je     0x100026aa
100026a0:	call   0x1000de50
100026a5:	cmp    eax,0x6b
100026a8:	jne    0x100026ba
100026aa:	push   0xf
100026ac:	push   0x100b7d34
100026b1:	lea    ecx,[esp+0xc]
100026b5:	call   0x10003d30
100026ba:	mov    eax,DWORD PTR [esp+0x4]
100026be:	push   0x0
100026c0:	push   0x100c9d78
100026c5:	push   0x1
100026c7:	push   eax
100026c8:	call   0x1000ec80
100026cd:	call   eax
100026cf:	mov    DWORD PTR [esp+0x10],0xffffffff
100026d7:	mov    eax,DWORD PTR [esp+0x4]
100026db:	add    eax,0xfffffff0
100026de:	lea    ecx,[eax+0xc]
100026e1:	or     edx,0xffffffff
100026e4:	lock xadd DWORD PTR [ecx],edx
100026e8:	dec    edx
100026e9:	test   edx,edx
100026eb:	jg     0x100026f7
100026ed:	mov    ecx,DWORD PTR [eax]
100026ef:	mov    edx,DWORD PTR [ecx]
100026f1:	push   eax
100026f2:	mov    eax,DWORD PTR [edx+0x4]
100026f5:	call   eax
100026f7:	mov    eax,0x100c9d74
100026fc:	mov    ecx,DWORD PTR [esp+0x8]
10002700:	mov    DWORD PTR fs:0x0,ecx
10002707:	pop    ecx
10002708:	add    esp,0x10
1000270b:	ret    
1000270c:	int3   
1000270d:	int3   
1000270e:	int3   
1000270f:	int3   
10002710:	push   0xffffffff
10002712:	push   0x1002e701
10002717:	mov    eax,fs:0x0
1000271d:	push   eax
1000271e:	sub    esp,0xc
10002721:	push   esi
10002722:	push   edi
10002723:	mov    eax,ds:0x100c7654
10002728:	xor    eax,esp
1000272a:	push   eax
1000272b:	lea    eax,[esp+0x18]
1000272f:	mov    fs:0x0,eax
10002735:	xor    edi,edi
10002737:	mov    DWORD PTR [esp+0x20],edi
1000273b:	mov    DWORD PTR [esp+0xc],edi
1000273f:	mov    eax,ds:0x100c9090
10002744:	mov    edx,DWORD PTR [eax+0xc]
10002747:	mov    ecx,0x100c9090
1000274c:	call   edx
1000274e:	mov    esi,DWORD PTR [esp+0x28]
10002752:	add    eax,0x10
10002755:	mov    DWORD PTR [esi],eax
10002757:	cmp    BYTE PTR [esp+0x2c],0x0
1000275c:	mov    DWORD PTR [esp+0x20],edi
10002760:	mov    DWORD PTR [esp+0xc],0x1
10002768:	je     0x100027b3
1000276a:	lea    eax,[esp+0x10]
1000276e:	push   edi
1000276f:	push   eax
10002770:	call   0x10001bf0
10002775:	add    esp,0x8
10002778:	mov    DWORD PTR [esp+0x20],0x1
10002780:	mov    eax,DWORD PTR [eax]
10002782:	mov    ecx,DWORD PTR [eax-0xc]
10002785:	push   ecx
10002786:	push   eax
10002787:	mov    ecx,esi
10002789:	call   0x10003d30
1000278e:	mov    BYTE PTR [esp+0x20],0x0
10002793:	mov    eax,DWORD PTR [esp+0x10]
10002797:	add    eax,0xfffffff0
1000279a:	lea    ecx,[eax+0xc]
1000279d:	or     edx,0xffffffff
100027a0:	lock xadd DWORD PTR [ecx],edx
100027a4:	dec    edx
100027a5:	test   edx,edx
100027a7:	jg     0x100027b3
100027a9:	mov    ecx,DWORD PTR [eax]
100027ab:	mov    edx,DWORD PTR [ecx]
100027ad:	push   eax
100027ae:	mov    eax,DWORD PTR [edx+0x4]
100027b1:	call   eax
100027b3:	push   0x1
100027b5:	lea    ecx,[esp+0x18]
100027b9:	push   0x2
100027bb:	push   ecx
100027bc:	call   0x100020c0
100027c1:	mov    edi,eax
100027c3:	push   0x100b7d58
100027c8:	push   0x4
100027ca:	push   0x100b7da8
100027cf:	mov    DWORD PTR [esp+0x38],0x2
100027d7:	call   0x100035f0
100027dc:	push   eax
100027dd:	lea    edx,[esp+0x2c]
100027e1:	push   edi
100027e2:	push   edx
100027e3:	call   0x10003120
100027e8:	add    esp,0x24
100027eb:	mov    BYTE PTR [esp+0x20],0x3
100027f0:	mov    eax,DWORD PTR [eax]
100027f2:	mov    ecx,DWORD PTR [eax-0xc]
100027f5:	push   ecx
100027f6:	push   eax
100027f7:	mov    ecx,esi
100027f9:	call   0x10003d30
100027fe:	mov    BYTE PTR [esp+0x20],0x2
10002803:	mov    eax,DWORD PTR [esp+0x10]
10002807:	add    eax,0xfffffff0
1000280a:	lea    ecx,[eax+0xc]
1000280d:	or     edx,0xffffffff
10002810:	lock xadd DWORD PTR [ecx],edx
10002814:	dec    edx
10002815:	test   edx,edx
10002817:	jg     0x10002823
10002819:	mov    ecx,DWORD PTR [eax]
1000281b:	mov    edx,DWORD PTR [ecx]
1000281d:	push   eax
1000281e:	mov    eax,DWORD PTR [edx+0x4]
10002821:	call   eax
10002823:	mov    BYTE PTR [esp+0x20],0x0
10002828:	mov    eax,DWORD PTR [esp+0x14]
1000282c:	add    eax,0xfffffff0
1000282f:	lea    ecx,[eax+0xc]
10002832:	or     edx,0xffffffff
10002835:	lock xadd DWORD PTR [ecx],edx
10002839:	dec    edx
1000283a:	test   edx,edx
1000283c:	jg     0x10002848
1000283e:	mov    ecx,DWORD PTR [eax]
10002840:	mov    edx,DWORD PTR [ecx]
10002842:	push   eax
10002843:	mov    eax,DWORD PTR [edx+0x4]
10002846:	call   eax
10002848:	mov    eax,esi
1000284a:	mov    ecx,DWORD PTR [esp+0x18]
1000284e:	mov    DWORD PTR fs:0x0,ecx
10002855:	pop    ecx
10002856:	pop    edi
10002857:	pop    esi
10002858:	add    esp,0x18
1000285b:	ret    
1000285c:	int3   
1000285d:	int3   
1000285e:	int3   
1000285f:	int3   
10002860:	push   0xffffffff
10002862:	push   0x1002e6b1
10002867:	mov    eax,fs:0x0
1000286d:	push   eax
1000286e:	sub    esp,0xc
10002871:	push   esi
10002872:	push   edi
10002873:	mov    eax,ds:0x100c7654
10002878:	xor    eax,esp
1000287a:	push   eax
1000287b:	lea    eax,[esp+0x18]
1000287f:	mov    fs:0x0,eax
10002885:	xor    edi,edi
10002887:	mov    DWORD PTR [esp+0x20],edi
1000288b:	mov    DWORD PTR [esp+0xc],edi
1000288f:	mov    eax,ds:0x100c9090
10002894:	mov    edx,DWORD PTR [eax+0xc]
10002897:	mov    ecx,0x100c9090
1000289c:	call   edx
1000289e:	mov    esi,DWORD PTR [esp+0x28]
100028a2:	add    eax,0x10
100028a5:	mov    DWORD PTR [esi],eax
100028a7:	cmp    BYTE PTR [esp+0x2c],0x0
100028ac:	mov    DWORD PTR [esp+0x20],edi
100028b0:	mov    DWORD PTR [esp+0xc],0x1
100028b8:	je     0x10002903
100028ba:	lea    eax,[esp+0x10]
100028be:	push   edi
100028bf:	push   eax
100028c0:	call   0x10001bf0
100028c5:	add    esp,0x8
100028c8:	mov    DWORD PTR [esp+0x20],0x1
100028d0:	mov    eax,DWORD PTR [eax]
100028d2:	mov    ecx,DWORD PTR [eax-0xc]
100028d5:	push   ecx
100028d6:	push   eax
100028d7:	mov    ecx,esi
100028d9:	call   0x10003d30
100028de:	mov    BYTE PTR [esp+0x20],0x0
100028e3:	mov    eax,DWORD PTR [esp+0x10]
100028e7:	add    eax,0xfffffff0
100028ea:	lea    ecx,[eax+0xc]
100028ed:	or     edx,0xffffffff
100028f0:	lock xadd DWORD PTR [ecx],edx
100028f4:	dec    edx
100028f5:	test   edx,edx
100028f7:	jg     0x10002903
100028f9:	mov    ecx,DWORD PTR [eax]
100028fb:	mov    edx,DWORD PTR [ecx]
100028fd:	push   eax
100028fe:	mov    eax,DWORD PTR [edx+0x4]
10002901:	call   eax
10002903:	push   0x1
10002905:	lea    ecx,[esp+0x18]
10002909:	push   0x3
1000290b:	push   ecx
1000290c:	call   0x100020c0
10002911:	mov    edi,eax
10002913:	push   0x100b7db8
10002918:	push   0x4
1000291a:	push   0x100b7da8
1000291f:	mov    DWORD PTR [esp+0x38],0x2
10002927:	call   0x100035f0
1000292c:	push   eax
1000292d:	lea    edx,[esp+0x2c]
10002931:	push   edi
10002932:	push   edx
10002933:	call   0x10003120
10002938:	add    esp,0x24
1000293b:	mov    BYTE PTR [esp+0x20],0x3
10002940:	mov    eax,DWORD PTR [eax]
10002942:	mov    ecx,DWORD PTR [eax-0xc]
10002945:	push   ecx
10002946:	push   eax
10002947:	mov    ecx,esi
10002949:	call   0x10003d30
1000294e:	mov    BYTE PTR [esp+0x20],0x2
10002953:	mov    eax,DWORD PTR [esp+0x10]
10002957:	add    eax,0xfffffff0
1000295a:	lea    ecx,[eax+0xc]
1000295d:	or     edx,0xffffffff
10002960:	lock xadd DWORD PTR [ecx],edx
10002964:	dec    edx
10002965:	test   edx,edx
10002967:	jg     0x10002973
10002969:	mov    ecx,DWORD PTR [eax]
1000296b:	mov    edx,DWORD PTR [ecx]
1000296d:	push   eax
1000296e:	mov    eax,DWORD PTR [edx+0x4]
10002971:	call   eax
10002973:	mov    BYTE PTR [esp+0x20],0x0
10002978:	mov    eax,DWORD PTR [esp+0x14]
1000297c:	add    eax,0xfffffff0
1000297f:	lea    ecx,[eax+0xc]
10002982:	or     edx,0xffffffff
10002985:	lock xadd DWORD PTR [ecx],edx
10002989:	dec    edx
1000298a:	test   edx,edx
1000298c:	jg     0x10002998
1000298e:	mov    ecx,DWORD PTR [eax]
10002990:	mov    edx,DWORD PTR [ecx]
10002992:	push   eax
10002993:	mov    eax,DWORD PTR [edx+0x4]
10002996:	call   eax
10002998:	mov    eax,esi
1000299a:	mov    ecx,DWORD PTR [esp+0x18]
1000299e:	mov    DWORD PTR fs:0x0,ecx
100029a5:	pop    ecx
100029a6:	pop    edi
100029a7:	pop    esi
100029a8:	add    esp,0x18
100029ab:	ret    
100029ac:	int3   
100029ad:	int3   
100029ae:	int3   
100029af:	int3   
100029b0:	push   0xffffffff
100029b2:	push   0x1002e143
100029b7:	mov    eax,fs:0x0
100029bd:	push   eax
100029be:	sub    esp,0x434
100029c4:	mov    eax,ds:0x100c7654
100029c9:	xor    eax,esp
100029cb:	mov    DWORD PTR [esp+0x430],eax
100029d2:	push   ebx
100029d3:	push   ebp
100029d4:	push   esi
100029d5:	push   edi
100029d6:	mov    eax,ds:0x100c7654
100029db:	xor    eax,esp
100029dd:	push   eax
100029de:	lea    eax,[esp+0x448]
100029e5:	mov    fs:0x0,eax
100029eb:	mov    eax,DWORD PTR [esp+0x458]
100029f2:	push   eax
100029f3:	push   0x18
100029f5:	mov    DWORD PTR [esp+0x458],0x0
10002a00:	call   0x1000e470
10002a05:	call   eax
10002a07:	mov    esi,eax
10002a09:	mov    DWORD PTR [esp+0x18],esi
10002a0d:	or     ebp,0xffffffff
10002a10:	cmp    esi,ebp
10002a12:	mov    BYTE PTR [esp+0x450],0x1
10002a1a:	jne    0x10002a48
10002a1c:	call   DWORD PTR ds:0x1002f094
10002a22:	push   ebp
10002a23:	mov    esi,eax
10002a25:	call   DWORD PTR ds:0x1002f064
10002a2b:	push   esi
10002a2c:	call   DWORD PTR ds:0x1002f090
10002a32:	mov    DWORD PTR [esp+0x450],ebp
10002a39:	mov    eax,DWORD PTR [esp+0x45c]
10002a40:	add    eax,0xfffffff0
10002a43:	jmp    0x10002b04
10002a48:	lea    ecx,[esp+0x1c]
10002a4c:	push   ecx
10002a4d:	push   esi
10002a4e:	mov    DWORD PTR [esp+0x24],0x428
10002a56:	call   0x1000e3f0
10002a5b:	call   eax
10002a5d:	test   eax,eax
10002a5f:	jne    0x10002a96
10002a61:	test   esi,esi
10002a63:	je     0x10002a7b
10002a65:	call   DWORD PTR ds:0x1002f094
10002a6b:	push   esi
10002a6c:	mov    edi,eax
10002a6e:	call   DWORD PTR ds:0x1002f064
10002a74:	push   edi
10002a75:	call   DWORD PTR ds:0x1002f090
10002a7b:	mov    DWORD PTR [esp+0x450],ebp
10002a82:	mov    eax,DWORD PTR [esp+0x45c]
10002a89:	add    eax,0xfffffff0
10002a8c:	lea    edx,[eax+0xc]
10002a8f:	lock xadd DWORD PTR [edx],ebp
10002a93:	dec    ebp
10002a94:	jmp    0x10002b0c
10002a96:	mov    edi,DWORD PTR [esp+0x45c]
10002a9d:	lea    ecx,[ecx+0x0]
10002aa0:	cmp    DWORD PTR [edi-0x4],0x1
10002aa4:	jle    0x10002abd
10002aa6:	mov    ecx,DWORD PTR [edi-0xc]
10002aa9:	push   ecx
10002aaa:	lea    ecx,[esp+0x460]
10002ab1:	call   0x10003e80
10002ab6:	mov    edi,DWORD PTR [esp+0x45c]
10002abd:	lea    edx,[esp+0x3c]
10002ac1:	push   edi
10002ac2:	push   edx
10002ac3:	call   0x100193db
10002ac8:	add    esp,0x8
10002acb:	test   eax,eax
10002acd:	je     0x10002b44
10002acf:	lea    eax,[esp+0x1c]
10002ad3:	push   eax
10002ad4:	push   esi
10002ad5:	call   0x1000e370
10002ada:	call   eax
10002adc:	test   eax,eax
10002ade:	jne    0x10002aa0
10002ae0:	test   esi,esi
10002ae2:	je     0x10002afa
10002ae4:	call   DWORD PTR ds:0x1002f094
10002aea:	push   esi
10002aeb:	mov    ebx,eax
10002aed:	call   DWORD PTR ds:0x1002f064
10002af3:	push   ebx
10002af4:	call   DWORD PTR ds:0x1002f090
10002afa:	mov    DWORD PTR [esp+0x450],ebp
10002b01:	lea    eax,[edi-0x10]
10002b04:	lea    ecx,[eax+0xc]
10002b07:	lock xadd DWORD PTR [ecx],ebp
10002b0b:	dec    ebp
10002b0c:	test   ebp,ebp
10002b0e:	jg     0x10002b1a
10002b10:	mov    ecx,DWORD PTR [eax]
10002b12:	mov    edx,DWORD PTR [ecx]
10002b14:	push   eax
10002b15:	mov    eax,DWORD PTR [edx+0x4]
10002b18:	call   eax
10002b1a:	xor    al,al
10002b1c:	mov    ecx,DWORD PTR [esp+0x448]
10002b23:	mov    DWORD PTR fs:0x0,ecx
10002b2a:	pop    ecx
10002b2b:	pop    edi
10002b2c:	pop    esi
10002b2d:	pop    ebp
10002b2e:	pop    ebx
10002b2f:	mov    ecx,DWORD PTR [esp+0x430]
10002b36:	xor    ecx,esp
10002b38:	call   0x10018773
10002b3d:	add    esp,0x440
10002b43:	ret    
10002b44:	test   esi,esi
10002b46:	je     0x10002b5e
10002b48:	call   DWORD PTR ds:0x1002f094
10002b4e:	push   esi
10002b4f:	mov    ebx,eax
10002b51:	call   DWORD PTR ds:0x1002f064
10002b57:	push   ebx
10002b58:	call   DWORD PTR ds:0x1002f090
10002b5e:	lea    eax,[edi-0x10]
10002b61:	mov    DWORD PTR [esp+0x450],ebp
10002b68:	lea    ecx,[eax+0xc]
10002b6b:	lock xadd DWORD PTR [ecx],ebp
10002b6f:	dec    ebp
10002b70:	test   ebp,ebp
10002b72:	jg     0x10002b7e
10002b74:	mov    ecx,DWORD PTR [eax]
10002b76:	mov    edx,DWORD PTR [ecx]
10002b78:	push   eax
10002b79:	mov    eax,DWORD PTR [edx+0x4]
10002b7c:	call   eax
10002b7e:	mov    al,0x1
10002b80:	jmp    0x10002b1c
10002b82:	int3   
10002b83:	int3   
10002b84:	int3   
10002b85:	int3   
10002b86:	int3   
10002b87:	int3   
10002b88:	int3   
10002b89:	int3   
10002b8a:	int3   
10002b8b:	int3   
10002b8c:	int3   
10002b8d:	int3   
10002b8e:	int3   
10002b8f:	int3   
10002b90:	xor    ax,ax
10002b93:	ret    
10002b94:	int3   
10002b95:	int3   
10002b96:	int3   
10002b97:	int3   
10002b98:	int3   
10002b99:	int3   
10002b9a:	int3   
10002b9b:	int3   
10002b9c:	int3   
10002b9d:	int3   
10002b9e:	int3   
10002b9f:	int3   
10002ba0:	mov    eax,ecx
10002ba2:	xor    ecx,ecx
10002ba4:	mov    DWORD PTR [eax+0x18],0xf
10002bab:	mov    DWORD PTR [eax+0x14],ecx
10002bae:	mov    BYTE PTR [eax+0x4],cl
10002bb1:	ret    
10002bb2:	int3   
10002bb3:	int3   
10002bb4:	int3   
10002bb5:	int3   
10002bb6:	int3   
10002bb7:	int3   
10002bb8:	int3   
10002bb9:	int3   
10002bba:	int3   
10002bbb:	int3   
10002bbc:	int3   
10002bbd:	int3   
10002bbe:	int3   
10002bbf:	int3   
10002bc0:	mov    edx,DWORD PTR [esp+0x4]
10002bc4:	push   esi
10002bc5:	mov    esi,ecx
10002bc7:	mov    eax,edx
10002bc9:	push   edi
10002bca:	mov    DWORD PTR [esi+0x18],0xf
10002bd1:	mov    DWORD PTR [esi+0x14],0x0
10002bd8:	mov    BYTE PTR [esi+0x4],0x0
10002bdc:	lea    edi,[eax+0x1]
10002bdf:	nop
10002be0:	mov    cl,BYTE PTR [eax]
10002be2:	add    eax,0x1
10002be5:	test   cl,cl
10002be7:	jne    0x10002be0
10002be9:	sub    eax,edi
10002beb:	push   eax
10002bec:	push   edx
10002bed:	mov    ecx,esi
10002bef:	call   0x10003a70
10002bf4:	pop    edi
10002bf5:	mov    eax,esi
10002bf7:	pop    esi
10002bf8:	ret    0x4
10002bfb:	int3   
10002bfc:	int3   
10002bfd:	int3   
10002bfe:	int3   
10002bff:	int3   
10002c00:	push   esi
10002c01:	mov    esi,ecx
10002c03:	cmp    DWORD PTR [esi+0x18],0x10
10002c07:	jb     0x10002c15
10002c09:	mov    eax,DWORD PTR [esi+0x4]
10002c0c:	push   eax
10002c0d:	call   0x1001876e
10002c12:	add    esp,0x4
10002c15:	xor    eax,eax
10002c17:	mov    DWORD PTR [esi+0x18],0xf
10002c1e:	mov    DWORD PTR [esi+0x14],eax
10002c21:	mov    BYTE PTR [esi+0x4],al
10002c24:	pop    esi
10002c25:	ret    
10002c26:	int3   
10002c27:	int3   
10002c28:	int3   
10002c29:	int3   
10002c2a:	int3   
10002c2b:	int3   
10002c2c:	int3   
10002c2d:	int3   
10002c2e:	int3   
10002c2f:	int3   
10002c30:	mov    eax,DWORD PTR [esp+0x4]
10002c34:	push   0xffffffff
10002c36:	push   0x0
10002c38:	push   eax
10002c39:	call   0x10003990
10002c3e:	ret    0x4
10002c41:	int3   
10002c42:	int3   
10002c43:	int3   
10002c44:	int3   
10002c45:	int3   
10002c46:	int3   
10002c47:	int3   
10002c48:	int3   
10002c49:	int3   
10002c4a:	int3   
10002c4b:	int3   
10002c4c:	int3   
10002c4d:	int3   
10002c4e:	int3   
10002c4f:	int3   
10002c50:	push   esi
10002c51:	mov    esi,DWORD PTR [esp+0x8]
10002c55:	mov    eax,esi
10002c57:	push   edi
10002c58:	lea    edi,[eax+0x1]
10002c5b:	jmp    0x10002c60
10002c5d:	lea    ecx,[ecx+0x0]
10002c60:	mov    dl,BYTE PTR [eax]
10002c62:	add    eax,0x1
10002c65:	test   dl,dl
10002c67:	jne    0x10002c60
10002c69:	sub    eax,edi
10002c6b:	push   eax
10002c6c:	push   esi
10002c6d:	call   0x10003a70
10002c72:	pop    edi
10002c73:	pop    esi
10002c74:	ret    0x4
10002c77:	int3   
10002c78:	int3   
10002c79:	int3   
10002c7a:	int3   
10002c7b:	int3   
10002c7c:	int3   
10002c7d:	int3   
10002c7e:	int3   
10002c7f:	int3   
10002c80:	mov    ecx,DWORD PTR [esp+0x4]
10002c84:	push   ebx
10002c85:	push   ebp
10002c86:	mov    ebp,DWORD PTR [esp+0x10]
10002c8a:	push   esi
10002c8b:	mov    esi,eax
10002c8d:	mov    edx,DWORD PTR [esi+0x18]
10002c90:	cmp    edx,0x10
10002c93:	push   edi
10002c94:	lea    ebx,[esi+0x4]
10002c97:	jb     0x10002c9d
10002c99:	mov    eax,DWORD PTR [ebx]
10002c9b:	jmp    0x10002c9f
10002c9d:	mov    eax,ebx
10002c9f:	cmp    ecx,eax
10002ca1:	jb     0x10002cd0
10002ca3:	cmp    edx,0x10
10002ca6:	jb     0x10002cac
10002ca8:	mov    eax,DWORD PTR [ebx]
10002caa:	jmp    0x10002cae
10002cac:	mov    eax,ebx
10002cae:	mov    edi,DWORD PTR [esi+0x14]
10002cb1:	add    edi,eax
10002cb3:	cmp    edi,ecx
10002cb5:	jbe    0x10002cd0
10002cb7:	cmp    edx,0x10
10002cba:	jb     0x10002cbe
10002cbc:	mov    ebx,DWORD PTR [ebx]
10002cbe:	sub    ecx,ebx
10002cc0:	push   ecx
10002cc1:	push   esi
10002cc2:	mov    eax,ebp
10002cc4:	call   0x10003810
10002cc9:	pop    edi
10002cca:	pop    esi
10002ccb:	pop    ebp
10002ccc:	pop    ebx
10002ccd:	ret    0x8
10002cd0:	mov    eax,DWORD PTR [esi+0x14]
10002cd3:	or     ecx,0xffffffff
10002cd6:	sub    ecx,eax
10002cd8:	cmp    ecx,ebp
10002cda:	jbe    0x10002ce3
10002cdc:	lea    edx,[eax+ebp*1]
10002cdf:	cmp    edx,eax
10002ce1:	jae    0x10002ce8
10002ce3:	call   0x1001860f
10002ce8:	test   ebp,ebp
10002cea:	jbe    0x10002d60
10002cec:	mov    edi,DWORD PTR [esi+0x14]
10002cef:	add    edi,ebp
10002cf1:	cmp    edi,0xfffffffe
10002cf4:	jbe    0x10002cfb
10002cf6:	call   0x1001860f
10002cfb:	mov    eax,DWORD PTR [esi+0x18]
10002cfe:	cmp    eax,edi
10002d00:	jae    0x10002d1e
10002d02:	mov    eax,DWORD PTR [esi+0x14]
10002d05:	push   eax
10002d06:	push   edi
10002d07:	mov    ecx,esi
10002d09:	call   0x10004780
10002d0e:	test   edi,edi
10002d10:	jbe    0x10002d60
10002d12:	mov    eax,DWORD PTR [esi+0x18]
10002d15:	cmp    eax,0x10
10002d18:	jb     0x10002d38
10002d1a:	mov    edx,DWORD PTR [ebx]
10002d1c:	jmp    0x10002d3a
10002d1e:	test   edi,edi
10002d20:	jne    0x10002d10
10002d22:	cmp    eax,0x10
10002d25:	mov    DWORD PTR [esi+0x14],edi
10002d28:	jb     0x10002d2c
10002d2a:	mov    ebx,DWORD PTR [ebx]
10002d2c:	pop    edi
10002d2d:	mov    eax,esi
10002d2f:	pop    esi
10002d30:	pop    ebp
10002d31:	mov    BYTE PTR [ebx],0x0
10002d34:	pop    ebx
10002d35:	ret    0x8
10002d38:	mov    edx,ebx
10002d3a:	mov    ecx,DWORD PTR [esi+0x14]
10002d3d:	push   ebp
10002d3e:	mov    ebp,DWORD PTR [esp+0x18]
10002d42:	sub    eax,ecx
10002d44:	push   ebp
10002d45:	push   eax
10002d46:	add    ecx,edx
10002d48:	push   ecx
10002d49:	call   0x10018df3
10002d4e:	add    esp,0x10
10002d51:	cmp    DWORD PTR [esi+0x18],0x10
10002d55:	mov    DWORD PTR [esi+0x14],edi
10002d58:	jb     0x10002d5c
10002d5a:	mov    ebx,DWORD PTR [ebx]
10002d5c:	mov    BYTE PTR [ebx+edi*1],0x0
10002d60:	pop    edi
10002d61:	mov    eax,esi
10002d63:	pop    esi
10002d64:	pop    ebp
10002d65:	pop    ebx
10002d66:	ret    0x8
10002d69:	int3   
10002d6a:	int3   
10002d6b:	int3   
10002d6c:	int3   
10002d6d:	int3   
10002d6e:	int3   
10002d6f:	int3   
10002d70:	mov    eax,DWORD PTR [ecx+0x14]
10002d73:	ret    
10002d74:	int3   
10002d75:	int3   
10002d76:	int3   
10002d77:	int3   
10002d78:	int3   
10002d79:	int3   
10002d7a:	int3   
10002d7b:	int3   
10002d7c:	int3   
10002d7d:	int3   
10002d7e:	int3   
10002d7f:	int3   
10002d80:	mov    eax,ds:0x100c9090
10002d85:	mov    edx,DWORD PTR [eax+0xc]
10002d88:	push   esi
10002d89:	mov    esi,ecx
10002d8b:	mov    ecx,0x100c9090
10002d90:	call   edx
10002d92:	add    eax,0x10
10002d95:	mov    DWORD PTR [esi],eax
10002d97:	mov    eax,esi
10002d99:	pop    esi
10002d9a:	ret    
10002d9b:	int3   
10002d9c:	int3   
10002d9d:	int3   
10002d9e:	int3   
10002d9f:	int3   
10002da0:	mov    eax,DWORD PTR [esp+0x4]
10002da4:	mov    eax,DWORD PTR [eax]
10002da6:	push   esi
10002da7:	sub    eax,0x10
10002daa:	push   eax
10002dab:	mov    esi,ecx
10002dad:	call   0x10004af0
10002db2:	add    eax,0x10
10002db5:	mov    DWORD PTR [esi],eax
10002db7:	add    esp,0x4
10002dba:	mov    eax,esi
10002dbc:	pop    esi
10002dbd:	ret    0x4
10002dc0:	push   0xffffffff
10002dc2:	push   0x1002d948
10002dc7:	mov    eax,fs:0x0
10002dcd:	push   eax
10002dce:	push   ecx
10002dcf:	push   esi
10002dd0:	push   edi
10002dd1:	mov    eax,ds:0x100c7654
10002dd6:	xor    eax,esp
10002dd8:	push   eax
10002dd9:	lea    eax,[esp+0x10]
10002ddd:	mov    fs:0x0,eax
10002de3:	mov    edi,ecx
10002de5:	mov    DWORD PTR [esp+0xc],edi
10002de9:	mov    eax,ds:0x100c9090
10002dee:	mov    edx,DWORD PTR [eax+0xc]
10002df1:	mov    ecx,0x100c9090
10002df6:	call   edx
10002df8:	add    eax,0x10
10002dfb:	mov    DWORD PTR [edi],eax
10002dfd:	mov    edx,DWORD PTR [esp+0x20]
10002e01:	test   edx,edx
10002e03:	mov    DWORD PTR [esp+0x18],0x0
10002e0b:	je     0x10002e32
10002e0d:	test   edx,0xffff0000
10002e13:	jne    0x10002e36
10002e15:	movzx  esi,dx
10002e18:	push   0x0
10002e1a:	push   esi
10002e1b:	call   0x100011f0
10002e20:	add    esp,0x8
10002e23:	test   eax,eax
10002e25:	je     0x10002e58
10002e27:	push   esi
10002e28:	push   eax
10002e29:	mov    ecx,edi
10002e2b:	call   0x100052f0
10002e30:	jmp    0x10002e58
10002e32:	xor    eax,eax
10002e34:	jmp    0x10002e4f
10002e36:	mov    eax,edx
10002e38:	lea    esi,[eax+0x2]
10002e3b:	jmp    0x10002e40
10002e3d:	lea    ecx,[ecx+0x0]
10002e40:	mov    cx,WORD PTR [eax]
10002e43:	add    eax,0x2
10002e46:	test   cx,cx
10002e49:	jne    0x10002e40
10002e4b:	sub    eax,esi
10002e4d:	sar    eax,1
10002e4f:	push   eax
10002e50:	push   edx
10002e51:	mov    ecx,edi
10002e53:	call   0x100049f0
10002e58:	mov    eax,edi
10002e5a:	mov    ecx,DWORD PTR [esp+0x10]
10002e5e:	mov    DWORD PTR fs:0x0,ecx
10002e65:	pop    ecx
10002e66:	pop    edi
10002e67:	pop    esi
10002e68:	add    esp,0x10
10002e6b:	ret    0x4
10002e6e:	int3   
10002e6f:	int3   
10002e70:	push   0xffffffff
10002e72:	push   0x1002d918
10002e77:	mov    eax,fs:0x0
10002e7d:	push   eax
10002e7e:	push   ecx
10002e7f:	push   esi
10002e80:	push   edi
10002e81:	mov    eax,ds:0x100c7654
10002e86:	xor    eax,esp
10002e88:	push   eax
10002e89:	lea    eax,[esp+0x10]
10002e8d:	mov    fs:0x0,eax
10002e93:	mov    esi,ecx
10002e95:	mov    DWORD PTR [esp+0xc],esi
10002e99:	mov    eax,ds:0x100c9090
10002e9e:	mov    edx,DWORD PTR [eax+0xc]
10002ea1:	mov    ecx,0x100c9090
10002ea6:	call   edx
10002ea8:	add    eax,0x10
10002eab:	mov    DWORD PTR [esi],eax
10002ead:	mov    eax,DWORD PTR [esp+0x20]
10002eb1:	test   eax,eax
10002eb3:	mov    DWORD PTR [esp+0x18],0x0
10002ebb:	je     0x10002ee1
10002ebd:	test   eax,0xffff0000
10002ec2:	jne    0x10002ee1
10002ec4:	movzx  edi,ax
10002ec7:	push   0x0
10002ec9:	push   edi
10002eca:	call   0x100011f0
10002ecf:	add    esp,0x8
10002ed2:	test   eax,eax
10002ed4:	je     0x10002ee9
10002ed6:	push   edi
10002ed7:	push   eax
10002ed8:	mov    ecx,esi
10002eda:	call   0x100052f0
10002edf:	jmp    0x10002ee9
10002ee1:	push   eax
10002ee2:	mov    ecx,esi
10002ee4:	call   0x10003c10
10002ee9:	mov    eax,esi
10002eeb:	mov    ecx,DWORD PTR [esp+0x10]
10002eef:	mov    DWORD PTR fs:0x0,ecx
10002ef6:	pop    ecx
10002ef7:	pop    edi
10002ef8:	pop    esi
10002ef9:	add    esp,0x10
10002efc:	ret    0x4
10002eff:	int3   
10002f00:	mov    eax,DWORD PTR [ecx]
10002f02:	sub    eax,0x10
10002f05:	lea    ecx,[eax+0xc]
10002f08:	or     edx,0xffffffff
10002f0b:	lock xadd DWORD PTR [ecx],edx
10002f0f:	dec    edx
10002f10:	test   edx,edx
10002f12:	jg     0x10002f1e
10002f14:	mov    ecx,DWORD PTR [eax]
10002f16:	mov    edx,DWORD PTR [ecx]
10002f18:	push   eax
10002f19:	mov    eax,DWORD PTR [edx+0x4]
10002f1c:	call   eax
10002f1e:	ret    
10002f1f:	int3   
10002f20:	mov    eax,DWORD PTR [esp+0x4]
10002f24:	push   esi
10002f25:	push   eax
10002f26:	mov    esi,ecx
10002f28:	call   0x10003cb0
10002f2d:	mov    eax,esi
10002f2f:	pop    esi
10002f30:	ret    0x4
10002f33:	int3   
10002f34:	int3   
10002f35:	int3   
10002f36:	int3   
10002f37:	int3   
10002f38:	int3   
10002f39:	int3   
10002f3a:	int3   
10002f3b:	int3   
10002f3c:	int3   
10002f3d:	int3   
10002f3e:	int3   
10002f3f:	int3   
10002f40:	mov    edx,DWORD PTR [esp+0x4]
10002f44:	test   edx,edx
10002f46:	push   edi
10002f47:	mov    edi,ecx
10002f49:	jne    0x10002f5a
10002f4b:	xor    eax,eax
10002f4d:	push   eax
10002f4e:	push   edx
10002f4f:	call   0x10003d30
10002f54:	mov    eax,edi
10002f56:	pop    edi
10002f57:	ret    0x4
10002f5a:	mov    eax,edx
10002f5c:	push   esi
10002f5d:	lea    esi,[eax+0x2]
10002f60:	mov    cx,WORD PTR [eax]
10002f63:	add    eax,0x2
10002f66:	test   cx,cx
10002f69:	jne    0x10002f60
10002f6b:	sub    eax,esi
10002f6d:	pop    esi
10002f6e:	sar    eax,1
10002f70:	push   eax
10002f71:	push   edx
10002f72:	mov    ecx,edi
10002f74:	call   0x10003d30
10002f79:	mov    eax,edi
10002f7b:	pop    edi
10002f7c:	ret    0x4
10002f7f:	int3   
10002f80:	mov    eax,DWORD PTR [edi]
10002f82:	mov    edx,DWORD PTR [eax-0x8]
10002f85:	push   ebx
10002f86:	mov    ebx,DWORD PTR [eax-0xc]
10002f89:	push   esi
10002f8a:	mov    ecx,0x1
10002f8f:	sub    ecx,DWORD PTR [eax-0x4]
10002f92:	lea    esi,[ebx+0x1]
10002f95:	sub    edx,esi
10002f97:	or     ecx,edx
10002f99:	jge    0x10002fa3
10002f9b:	push   esi
10002f9c:	mov    ecx,edi
10002f9e:	call   0x10004aa0
10002fa3:	test   esi,esi
10002fa5:	mov    eax,DWORD PTR [edi]
10002fa7:	mov    cx,WORD PTR [esp+0xc]
10002fac:	mov    WORD PTR [eax+ebx*2],cx
10002fb0:	jl     0x10002fcb
10002fb2:	mov    eax,DWORD PTR [edi]
10002fb4:	cmp    esi,DWORD PTR [eax-0x8]
10002fb7:	jg     0x10002fcb
10002fb9:	mov    DWORD PTR [eax-0xc],esi
10002fbc:	mov    edx,DWORD PTR [edi]
10002fbe:	mov    WORD PTR [edx+esi*2],0x0
10002fc4:	pop    esi
10002fc5:	mov    eax,edi
10002fc7:	pop    ebx
10002fc8:	ret    0x4
10002fcb:	push   0x80070057
10002fd0:	call   0x10001090
10002fd5:	int3   
10002fd6:	int3   
10002fd7:	int3   
10002fd8:	int3   
10002fd9:	int3   
10002fda:	int3   
10002fdb:	int3   
10002fdc:	int3   
10002fdd:	int3   
10002fde:	int3   
10002fdf:	int3   
10002fe0:	push   esi
10002fe1:	mov    esi,ecx
10002fe3:	mov    ecx,DWORD PTR [esp+0x8]
10002fe7:	mov    eax,DWORD PTR [esi]
10002fe9:	push   ecx
10002fea:	push   eax
10002feb:	call   0x10019f44
10002ff0:	add    esp,0x8
10002ff3:	test   eax,eax
10002ff5:	jne    0x10002ffe
10002ff7:	or     eax,0xffffffff
10002ffa:	pop    esi
10002ffb:	ret    0x4
10002ffe:	sub    eax,DWORD PTR [esi]
10003000:	pop    esi
10003001:	sar    eax,1
10003003:	ret    0x4
10003006:	int3   
10003007:	int3   
10003008:	int3   
10003009:	int3   
1000300a:	int3   
1000300b:	int3   
1000300c:	int3   
1000300d:	int3   
1000300e:	int3   
1000300f:	int3   
10003010:	push   ecx
10003011:	push   ebx
10003012:	push   esi
10003013:	push   edi
10003014:	mov    edi,DWORD PTR [esp+0x18]
10003018:	test   edi,edi
1000301a:	mov    ebx,ecx
1000301c:	mov    DWORD PTR [esp+0xc],0x0
10003024:	jge    0x10003028
10003026:	xor    edi,edi
10003028:	mov    eax,DWORD PTR [ebx]
1000302a:	mov    esi,DWORD PTR [eax-0xc]
1000302d:	cmp    edi,esi
1000302f:	jl     0x1000304f
10003031:	add    eax,0xfffffff0
10003034:	push   eax
10003035:	call   0x10004af0
1000303a:	add    esp,0x4
1000303d:	mov    ecx,eax
1000303f:	mov    eax,DWORD PTR [esp+0x14]
10003043:	pop    edi
10003044:	add    ecx,0x10
10003047:	pop    esi
10003048:	mov    DWORD PTR [eax],ecx
1000304a:	pop    ebx
1000304b:	pop    ecx
1000304c:	ret    0x8
1000304f:	mov    eax,DWORD PTR [eax-0x10]
10003052:	test   eax,eax
10003054:	je     0x10003063
10003056:	mov    edx,DWORD PTR [eax]
10003058:	mov    ecx,eax
1000305a:	mov    eax,DWORD PTR [edx+0x10]
1000305d:	call   eax
1000305f:	test   eax,eax
10003061:	jne    0x10003073
10003063:	mov    edx,DWORD PTR ds:0x100c9090
10003069:	mov    eax,DWORD PTR [edx+0x10]
1000306c:	mov    ecx,0x100c9090
10003071:	call   eax
10003073:	mov    ecx,DWORD PTR [ebx]
10003075:	sub    esi,edi
10003077:	push   eax
10003078:	lea    edx,[ecx+esi*2]
1000307b:	mov    esi,DWORD PTR [esp+0x18]
1000307f:	push   edi
10003080:	push   edx
10003081:	mov    ecx,esi
10003083:	call   0x10004900
10003088:	pop    edi
10003089:	mov    eax,esi
1000308b:	pop    esi
1000308c:	pop    ebx
1000308d:	pop    ecx
1000308e:	ret    0x8
10003091:	int3   
10003092:	int3   
10003093:	int3   
10003094:	int3   
10003095:	int3   
10003096:	int3   
10003097:	int3   
10003098:	int3   
10003099:	int3   
1000309a:	int3   
1000309b:	int3   
1000309c:	int3   
1000309d:	int3   
1000309e:	int3   
1000309f:	int3   
100030a0:	push   ecx
100030a1:	push   esi
100030a2:	mov    esi,DWORD PTR [esp+0x10]
100030a6:	test   esi,esi
100030a8:	push   edi
100030a9:	mov    edi,ecx
100030ab:	mov    DWORD PTR [esp+0x8],0x0
100030b3:	jge    0x100030b7
100030b5:	xor    esi,esi
100030b7:	mov    eax,DWORD PTR [edi]
100030b9:	cmp    esi,DWORD PTR [eax-0xc]
100030bc:	jl     0x100030db
100030be:	add    eax,0xfffffff0
100030c1:	push   eax
100030c2:	call   0x10004af0
100030c7:	add    esp,0x4
100030ca:	mov    ecx,eax
100030cc:	mov    eax,DWORD PTR [esp+0x10]
100030d0:	add    ecx,0x10
100030d3:	pop    edi
100030d4:	mov    DWORD PTR [eax],ecx
100030d6:	pop    esi
100030d7:	pop    ecx
100030d8:	ret    0x8
100030db:	mov    ecx,DWORD PTR [eax-0x10]
100030de:	test   ecx,ecx
100030e0:	je     0x100030ed
100030e2:	mov    edx,DWORD PTR [ecx]
100030e4:	mov    eax,DWORD PTR [edx+0x10]
100030e7:	call   eax
100030e9:	test   eax,eax
100030eb:	jne    0x100030fd
100030ed:	mov    edx,DWORD PTR ds:0x100c9090
100030f3:	mov    eax,DWORD PTR [edx+0x10]
100030f6:	mov    ecx,0x100c9090
100030fb:	call   eax
100030fd:	mov    ecx,DWORD PTR [edi]
100030ff:	push   eax
10003100:	push   esi
10003101:	mov    esi,DWORD PTR [esp+0x18]
10003105:	push   ecx
10003106:	mov    ecx,esi
10003108:	call   0x10004900
1000310d:	pop    edi
1000310e:	mov    eax,esi
10003110:	pop    esi
10003111:	pop    ecx
10003112:	ret    0x8
10003115:	int3   
10003116:	int3   
10003117:	int3   
10003118:	int3   
10003119:	int3   
1000311a:	int3   
1000311b:	int3   
1000311c:	int3   
1000311d:	int3   
1000311e:	int3   
1000311f:	int3   
10003120:	push   0xffffffff
10003122:	push   0x1002d7e9
10003127:	mov    eax,fs:0x0
1000312d:	push   eax
1000312e:	push   ecx
1000312f:	push   ebp
10003130:	push   esi
10003131:	push   edi
10003132:	mov    eax,ds:0x100c7654
10003137:	xor    eax,esp
10003139:	push   eax
1000313a:	lea    eax,[esp+0x14]
1000313e:	mov    fs:0x0,eax
10003144:	mov    ebp,DWORD PTR [esp+0x28]
10003148:	mov    DWORD PTR [esp+0x1c],0x0
10003150:	mov    DWORD PTR [esp+0x10],0x0
10003158:	mov    eax,DWORD PTR [ebp+0x0]
1000315b:	mov    ecx,DWORD PTR [eax-0x10]
1000315e:	test   ecx,ecx
10003160:	je     0x1000316d
10003162:	mov    edx,DWORD PTR [ecx]
10003164:	mov    eax,DWORD PTR [edx+0x10]
10003167:	call   eax
10003169:	test   eax,eax
1000316b:	jne    0x1000317d
1000316d:	mov    edx,DWORD PTR ds:0x100c9090
10003173:	mov    eax,DWORD PTR [edx+0x10]
10003176:	mov    ecx,0x100c9090
1000317b:	call   eax
1000317d:	xor    ecx,ecx
1000317f:	test   eax,eax
10003181:	setne  cl
10003184:	test   ecx,ecx
10003186:	jne    0x10003192
10003188:	push   0x80004005
1000318d:	call   0x10001090
10003192:	mov    edx,DWORD PTR [eax]
10003194:	mov    ecx,eax
10003196:	mov    eax,DWORD PTR [edx+0xc]
10003199:	call   eax
1000319b:	mov    esi,DWORD PTR [esp+0x24]
1000319f:	add    eax,0x10
100031a2:	mov    DWORD PTR [esi],eax
100031a4:	mov    edi,DWORD PTR [esp+0x2c]
100031a8:	test   edi,edi
100031aa:	mov    DWORD PTR [esp+0x1c],0x0
100031b2:	mov    DWORD PTR [esp+0x10],0x1
100031ba:	jne    0x100031c0
100031bc:	xor    eax,eax
100031be:	jmp    0x100031d4
100031c0:	mov    eax,edi
100031c2:	lea    edx,[eax+0x2]
100031c5:	mov    cx,WORD PTR [eax]
100031c8:	add    eax,0x2
100031cb:	test   cx,cx
100031ce:	jne    0x100031c5
100031d0:	sub    eax,edx
100031d2:	sar    eax,1
100031d4:	mov    ecx,DWORD PTR [ebp+0x0]
100031d7:	mov    edx,DWORD PTR [ecx-0xc]
100031da:	push   eax
100031db:	push   edi
100031dc:	push   edx
100031dd:	push   ecx
100031de:	push   esi
100031df:	call   0x10003df0
100031e4:	add    esp,0x14
100031e7:	mov    eax,esi
100031e9:	mov    ecx,DWORD PTR [esp+0x14]
100031ed:	mov    DWORD PTR fs:0x0,ecx
100031f4:	pop    ecx
100031f5:	pop    edi
100031f6:	pop    esi
100031f7:	pop    ebp
100031f8:	add    esp,0x10
100031fb:	ret    
100031fc:	int3   
100031fd:	int3   
100031fe:	int3   
100031ff:	int3   
10003200:	push   esi
10003201:	mov    esi,ecx
10003203:	mov    eax,DWORD PTR [esi]
10003205:	sub    eax,0x10
10003208:	cmp    DWORD PTR [eax+0xc],0x1
1000320c:	jle    0x10003217
1000320e:	mov    eax,DWORD PTR [eax+0x4]
10003211:	push   eax
10003212:	call   0x10003e80
10003217:	mov    eax,DWORD PTR [esi]
10003219:	pop    esi
1000321a:	ret    
1000321b:	int3   
1000321c:	int3   
1000321d:	int3   
1000321e:	int3   
1000321f:	int3   
10003220:	push   esi
10003221:	mov    esi,ecx
10003223:	mov    eax,DWORD PTR [esi]
10003225:	mov    edx,DWORD PTR [eax-0x8]
10003228:	sub    eax,0x10
1000322b:	mov    ecx,0x1
10003230:	sub    ecx,DWORD PTR [eax+0xc]
10003233:	mov    eax,DWORD PTR [esp+0x8]
10003237:	sub    edx,eax
10003239:	or     ecx,edx
1000323b:	jge    0x10003245
1000323d:	push   eax
1000323e:	mov    ecx,esi
10003240:	call   0x10004aa0
10003245:	mov    eax,DWORD PTR [esi]
10003247:	pop    esi
10003248:	ret    0x4
1000324b:	int3   
1000324c:	int3   
1000324d:	int3   
1000324e:	int3   
1000324f:	int3   
10003250:	mov    eax,DWORD PTR [ecx]
10003252:	mov    eax,DWORD PTR [eax-0xc]
10003255:	ret    
10003256:	int3   
10003257:	int3   
10003258:	int3   
10003259:	int3   
1000325a:	int3   
1000325b:	int3   
1000325c:	int3   
1000325d:	int3   
1000325e:	int3   
1000325f:	int3   
10003260:	mov    eax,DWORD PTR [esp+0x4]
10003264:	cmp    eax,0xffffffff
10003267:	jne    0x10003283
10003269:	mov    eax,DWORD PTR [ecx]
1000326b:	test   eax,eax
1000326d:	je     0x10003287
1000326f:	push   esi
10003270:	lea    esi,[eax+0x2]
10003273:	mov    dx,WORD PTR [eax]
10003276:	add    eax,0x2
10003279:	test   dx,dx
1000327c:	jne    0x10003273
1000327e:	sub    eax,esi
10003280:	sar    eax,1
10003282:	pop    esi
10003283:	test   eax,eax
10003285:	jl     0x1000329c
10003287:	mov    edx,DWORD PTR [ecx]
10003289:	cmp    eax,DWORD PTR [edx-0x8]
1000328c:	jg     0x1000329c
1000328e:	mov    DWORD PTR [edx-0xc],eax
10003291:	mov    ecx,DWORD PTR [ecx]
10003293:	mov    WORD PTR [ecx+eax*2],0x0
10003299:	ret    0x4
1000329c:	push   0x80070057
100032a1:	call   0x10001090
100032a6:	int3   
100032a7:	int3   
100032a8:	int3   
100032a9:	int3   
100032aa:	int3   
100032ab:	int3   
100032ac:	int3   
100032ad:	int3   
100032ae:	int3   
100032af:	int3   
100032b0:	push   esi
100032b1:	mov    esi,DWORD PTR [esp+0x8]
100032b5:	push   edi
100032b6:	mov    edi,ecx
100032b8:	mov    eax,DWORD PTR [edi]
100032ba:	mov    edx,DWORD PTR [eax-0x8]
100032bd:	sub    eax,0x10
100032c0:	mov    ecx,0x1
100032c5:	sub    ecx,DWORD PTR [eax+0xc]
100032c8:	sub    edx,esi
100032ca:	or     ecx,edx
100032cc:	jge    0x100032d6
100032ce:	push   esi
100032cf:	mov    ecx,edi
100032d1:	call   0x10004aa0
100032d6:	test   esi,esi
100032d8:	jl     0x100032f1
100032da:	mov    eax,DWORD PTR [edi]
100032dc:	cmp    esi,DWORD PTR [eax-0x8]
100032df:	jg     0x100032f1
100032e1:	mov    DWORD PTR [eax-0xc],esi
100032e4:	mov    eax,DWORD PTR [edi]
100032e6:	pop    edi
100032e7:	mov    WORD PTR [eax+esi*2],0x0
100032ed:	pop    esi
100032ee:	ret    0x4
100032f1:	push   0x80070057
100032f6:	call   0x10001090
100032fb:	int3   
100032fc:	int3   
100032fd:	int3   
100032fe:	int3   
100032ff:	int3   
10003300:	mov    eax,ecx
10003302:	mov    ecx,DWORD PTR [esp+0x4]
10003306:	mov    DWORD PTR [eax],ecx
10003308:	ret    0x4
1000330b:	int3   
1000330c:	int3   
1000330d:	int3   
1000330e:	int3   
1000330f:	int3   
10003310:	push   esi
10003311:	mov    esi,ecx
10003313:	push   edi
10003314:	mov    edi,DWORD PTR [esi]
10003316:	test   edi,edi
10003318:	je     0x10003332
1000331a:	push   ebx
1000331b:	call   DWORD PTR ds:0x1002f094
10003321:	push   edi
10003322:	mov    ebx,eax
10003324:	call   DWORD PTR ds:0x1002f064
1000332a:	push   ebx
1000332b:	call   DWORD PTR ds:0x1002f090
10003331:	pop    ebx
10003332:	pop    edi
10003333:	mov    DWORD PTR [esi],0x0
10003339:	pop    esi
1000333a:	ret    
1000333b:	int3   
1000333c:	int3   
1000333d:	int3   
1000333e:	int3   
1000333f:	int3   
10003340:	mov    eax,DWORD PTR [ecx]
10003342:	ret    
10003343:	int3   
10003344:	int3   
10003345:	int3   
10003346:	int3   
10003347:	int3   
10003348:	int3   
10003349:	int3   
1000334a:	int3   
1000334b:	int3   
1000334c:	int3   
1000334d:	int3   
1000334e:	int3   
1000334f:	int3   
10003350:	mov    eax,ecx
10003352:	mov    ecx,DWORD PTR [esp+0x4]
10003356:	mov    edx,DWORD PTR [ecx]
10003358:	mov    DWORD PTR [ecx],0x0
1000335e:	mov    DWORD PTR [eax],edx
10003360:	ret    0x4
10003363:	int3   
10003364:	int3   
10003365:	int3   
10003366:	int3   
10003367:	int3   
10003368:	int3   
10003369:	int3   
1000336a:	int3   
1000336b:	int3   
1000336c:	int3   
1000336d:	int3   
1000336e:	int3   
1000336f:	int3   
10003370:	mov    eax,DWORD PTR [esp+0x4]
10003374:	push   esi
10003375:	push   edi
10003376:	mov    edi,DWORD PTR [eax]
10003378:	mov    esi,ecx
1000337a:	mov    DWORD PTR [eax],0x0
10003380:	mov    eax,DWORD PTR [esi]
10003382:	cmp    edi,eax
10003384:	je     0x1000338f
10003386:	push   eax
10003387:	call   0x1001876e
1000338c:	add    esp,0x4
1000338f:	mov    DWORD PTR [esi],edi
10003391:	pop    edi
10003392:	mov    eax,esi
10003394:	pop    esi
10003395:	ret    0x4
10003398:	int3   
10003399:	int3   
1000339a:	int3   
1000339b:	int3   
1000339c:	int3   
1000339d:	int3   
1000339e:	int3   
1000339f:	int3   
100033a0:	mov    eax,DWORD PTR [ecx]
100033a2:	push   eax
100033a3:	call   0x1001876e
100033a8:	pop    ecx
100033a9:	ret    
100033aa:	int3   
100033ab:	int3   
100033ac:	int3   
100033ad:	int3   
100033ae:	int3   
100033af:	int3   
100033b0:	push   esi
100033b1:	mov    esi,ecx
100033b3:	mov    eax,DWORD PTR [esi]
100033b5:	push   edi
100033b6:	mov    edi,DWORD PTR [esp+0xc]
100033ba:	cmp    edi,eax
100033bc:	je     0x100033c7
100033be:	push   eax
100033bf:	call   0x1001876e
100033c4:	add    esp,0x4
100033c7:	mov    DWORD PTR [esi],edi
100033c9:	pop    edi
100033ca:	pop    esi
100033cb:	ret    0x4
100033ce:	int3   
100033cf:	int3   
100033d0:	push   ebp
100033d1:	mov    ebp,esp
100033d3:	and    esp,0xfffffff8
100033d6:	push   0xffffffff
100033d8:	push   0x1002dc00
100033dd:	mov    eax,fs:0x0
100033e3:	push   eax
100033e4:	sub    esp,0x50
100033e7:	mov    eax,ds:0x100c7654
100033ec:	xor    eax,esp
100033ee:	mov    DWORD PTR [esp+0x48],eax
100033f2:	push   ebx
100033f3:	push   esi
100033f4:	push   edi
100033f5:	mov    eax,ds:0x100c7654
100033fa:	xor    eax,esp
100033fc:	push   eax
100033fd:	lea    eax,[esp+0x60]
10003401:	mov    fs:0x0,eax
10003407:	mov    eax,ds:0x100c9d84
1000340c:	mov    esi,DWORD PTR [ebp+0x8]
1000340f:	xor    edi,edi
10003411:	cmp    eax,edi
10003413:	mov    DWORD PTR [esp+0x1c],esi
10003417:	jne    0x10003427
10003419:	push   edi
1000341a:	push   edi
1000341b:	push   edi
1000341c:	call   DWORD PTR ds:0x1002f0dc
10003422:	mov    ds:0x100c9d84,eax
10003427:	push   0xffffffff
10003429:	push   eax
1000342a:	call   DWORD PTR ds:0x1002f058
10003430:	test   eax,eax
10003432:	je     0x1000343b
10003434:	mov    eax,esi
10003436:	jmp    0x100035cc
1000343b:	mov    eax,DWORD PTR [ebp+0xc]
1000343e:	push   eax
1000343f:	push   esi
10003440:	lea    ecx,[esp+0x28]
10003444:	mov    DWORD PTR [esp+0x40],0xf
1000344c:	mov    DWORD PTR [esp+0x3c],edi
10003450:	mov    BYTE PTR [esp+0x2c],0x0
10003455:	call   0x10003a70
1000345a:	lea    ecx,[esp+0x20]
1000345e:	push   ecx
1000345f:	lea    edx,[esp+0x18]
10003463:	push   edx
10003464:	mov    DWORD PTR [esp+0x70],edi
10003468:	call   0x10003f40
1000346d:	mov    ecx,eax
1000346f:	call   0x10004360
10003474:	call   0x10003f40
10003479:	mov    esi,DWORD PTR [esp+0x14]
1000347d:	cmp    esi,edi
1000347f:	mov    ebx,DWORD PTR [eax+0x4]
10003482:	je     0x10003488
10003484:	cmp    esi,eax
10003486:	je     0x1000348d
10003488:	call   0x10018de3
1000348d:	mov    edi,DWORD PTR [esp+0x18]
10003491:	cmp    edi,ebx
10003493:	jne    0x1000350a
10003495:	sub    esp,0x1c
10003498:	mov    ecx,esp
1000349a:	mov    DWORD PTR [esp+0x30],esp
1000349e:	push   0xffffffff
100034a0:	push   0x0
100034a2:	lea    eax,[esp+0x44]
100034a6:	mov    DWORD PTR [ecx+0x18],0xf
100034ad:	mov    DWORD PTR [ecx+0x14],0x0
100034b4:	push   eax
100034b5:	mov    BYTE PTR [ecx+0x4],0x0
100034b9:	call   0x10003990
100034be:	lea    ecx,[esp+0x58]
100034c2:	push   ecx
100034c3:	call   0x10003fd0
100034c8:	add    esp,0x20
100034cb:	lea    edx,[esp+0x20]
100034cf:	push   edx
100034d0:	mov    BYTE PTR [esp+0x6c],0x1
100034d5:	call   0x10003f40
100034da:	mov    ecx,eax
100034dc:	call   0x10004200
100034e1:	push   0xffffffff
100034e3:	push   0x0
100034e5:	lea    ecx,[esp+0x44]
100034e9:	push   ecx
100034ea:	mov    ecx,eax
100034ec:	call   0x10003990
100034f1:	mov    BYTE PTR [esp+0x68],0x0
100034f6:	cmp    DWORD PTR [esp+0x54],0x10
100034fb:	jb     0x1000350a
100034fd:	mov    edx,DWORD PTR [esp+0x40]
10003501:	push   edx
10003502:	call   0x1001876e
10003507:	add    esp,0x4
1000350a:	mov    eax,DWORD PTR [ebp+0x10]
1000350d:	movzx  ecx,BYTE PTR [eax]
10003510:	cmp    ecx,0x100
10003516:	jge    0x10003533
10003518:	lea    edx,[esp+0x20]
1000351c:	push   edx
1000351d:	lea    eax,[esp+0x18]
10003521:	push   eax
10003522:	call   0x10003f40
10003527:	mov    ecx,eax
10003529:	call   0x10004360
1000352e:	mov    esi,DWORD PTR [eax]
10003530:	mov    edi,DWORD PTR [eax+0x4]
10003533:	call   0x10003f40
10003538:	test   esi,esi
1000353a:	mov    ebx,DWORD PTR [eax+0x4]
1000353d:	je     0x10003543
1000353f:	cmp    esi,eax
10003541:	je     0x10003548
10003543:	call   0x10018de3
10003548:	cmp    edi,ebx
1000354a:	je     0x1000356f
1000354c:	test   esi,esi
1000354e:	jne    0x10003555
10003550:	call   0x10018de3
10003555:	cmp    edi,DWORD PTR [esi+0x4]
10003558:	jne    0x1000355f
1000355a:	call   0x10018de3
1000355f:	cmp    DWORD PTR [edi+0x40],0x10
10003563:	jb     0x1000356a
10003565:	mov    edi,DWORD PTR [edi+0x2c]
10003568:	jmp    0x10003573
1000356a:	add    edi,0x2c
1000356d:	jmp    0x10003573
1000356f:	mov    edi,DWORD PTR [esp+0x1c]
10003573:	cmp    DWORD PTR ds:0x100c9d80,0x0
1000357a:	jne    0x10003598
1000357c:	push   0x100b7e4c
10003581:	push   0x100b7e5c
10003586:	call   DWORD PTR ds:0x1002f0b0
1000358c:	push   eax
1000358d:	call   DWORD PTR ds:0x1002f050
10003593:	mov    ds:0x100c9d80,eax
10003598:	mov    eax,ds:0x100c9d84
1000359d:	test   eax,eax
1000359f:	jne    0x100035af
100035a1:	push   eax
100035a2:	push   eax
100035a3:	push   eax
100035a4:	call   DWORD PTR ds:0x1002f0dc
100035aa:	mov    ds:0x100c9d84,eax
100035af:	push   eax
100035b0:	call   DWORD PTR ds:0x100c9d80
100035b6:	cmp    DWORD PTR [esp+0x38],0x10
100035bb:	jb     0x100035ca
100035bd:	mov    ecx,DWORD PTR [esp+0x24]
100035c1:	push   ecx
100035c2:	call   0x1001876e
100035c7:	add    esp,0x4
100035ca:	mov    eax,edi
100035cc:	mov    ecx,DWORD PTR [esp+0x60]
100035d0:	mov    DWORD PTR fs:0x0,ecx
100035d7:	pop    ecx
100035d8:	pop    edi
100035d9:	pop    esi
100035da:	pop    ebx
100035db:	mov    ecx,DWORD PTR [esp+0x48]
100035df:	xor    ecx,esp
100035e1:	call   0x10018773
100035e6:	mov    esp,ebp
100035e8:	pop    ebp
100035e9:	ret    
100035ea:	int3   
100035eb:	int3   
100035ec:	int3   
100035ed:	int3   
100035ee:	int3   
100035ef:	int3   
100035f0:	push   ebp
100035f1:	mov    ebp,esp
100035f3:	and    esp,0xfffffff8
100035f6:	push   0xffffffff
100035f8:	push   0x1002dbc0
100035fd:	mov    eax,fs:0x0
10003603:	push   eax
10003604:	sub    esp,0x50
10003607:	mov    eax,ds:0x100c7654
1000360c:	xor    eax,esp
1000360e:	mov    DWORD PTR [esp+0x48],eax
10003612:	push   ebx
10003613:	push   esi
10003614:	push   edi
10003615:	mov    eax,ds:0x100c7654
1000361a:	xor    eax,esp
1000361c:	push   eax
1000361d:	lea    eax,[esp+0x60]
10003621:	mov    fs:0x0,eax
10003627:	mov    eax,ds:0x100c9d84
1000362c:	mov    esi,DWORD PTR [ebp+0x8]
1000362f:	xor    edi,edi
10003631:	cmp    eax,edi
10003633:	mov    DWORD PTR [esp+0x1c],esi
10003637:	jne    0x10003647
10003639:	push   edi
1000363a:	push   edi
1000363b:	push   edi
1000363c:	call   DWORD PTR ds:0x1002f0dc
10003642:	mov    ds:0x100c9d84,eax
10003647:	push   0xffffffff
10003649:	push   eax
1000364a:	call   DWORD PTR ds:0x1002f058
10003650:	test   eax,eax
10003652:	je     0x1000365b
10003654:	mov    eax,esi
10003656:	jmp    0x100037e7
1000365b:	mov    eax,DWORD PTR [ebp+0xc]
1000365e:	push   eax
1000365f:	push   esi
10003660:	lea    ecx,[esp+0x28]
10003664:	mov    DWORD PTR [esp+0x40],0x7
1000366c:	mov    DWORD PTR [esp+0x3c],edi
10003670:	mov    WORD PTR [esp+0x2c],di
10003675:	call   0x10004f40
1000367a:	lea    ecx,[esp+0x20]
1000367e:	push   ecx
1000367f:	lea    edx,[esp+0x18]
10003683:	push   edx
10003684:	mov    DWORD PTR [esp+0x70],edi
10003688:	call   0x100040a0
1000368d:	mov    ecx,eax
1000368f:	call   0x10004580
10003694:	call   0x100040a0
10003699:	mov    esi,DWORD PTR [esp+0x14]
1000369d:	cmp    esi,edi
1000369f:	mov    ebx,DWORD PTR [eax+0x4]
100036a2:	je     0x100036a8
100036a4:	cmp    esi,eax
100036a6:	je     0x100036ad
100036a8:	call   0x10018de3
100036ad:	mov    edi,DWORD PTR [esp+0x18]
100036b1:	cmp    edi,ebx
100036b3:	jne    0x10003725
100036b5:	sub    esp,0x1c
100036b8:	mov    ecx,esp
100036ba:	mov    DWORD PTR [esp+0x30],esp
100036be:	xor    ebx,ebx
100036c0:	push   0xffffffff
100036c2:	push   ebx
100036c3:	lea    eax,[esp+0x44]
100036c7:	mov    DWORD PTR [ecx+0x18],0x7
100036ce:	mov    DWORD PTR [ecx+0x14],ebx
100036d1:	push   eax
100036d2:	mov    WORD PTR [ecx+0x4],bx
100036d6:	call   0x10004e50
100036db:	lea    ecx,[esp+0x58]
100036df:	push   ecx
100036e0:	call   0x10004130
100036e5:	add    esp,0x20
100036e8:	lea    edx,[esp+0x20]
100036ec:	push   edx
100036ed:	mov    BYTE PTR [esp+0x6c],0x1
100036f2:	call   0x100040a0
100036f7:	mov    ecx,eax
100036f9:	call   0x10004420
100036fe:	push   0xffffffff
10003700:	push   ebx
10003701:	lea    ecx,[esp+0x44]
10003705:	push   ecx
10003706:	mov    ecx,eax
10003708:	call   0x10004e50
1000370d:	mov    BYTE PTR [esp+0x68],bl
10003711:	cmp    DWORD PTR [esp+0x54],0x8
10003716:	jb     0x10003725
10003718:	mov    edx,DWORD PTR [esp+0x40]
1000371c:	push   edx
1000371d:	call   0x1001876e
10003722:	add    esp,0x4
10003725:	mov    eax,DWORD PTR [ebp+0x10]
10003728:	movzx  ecx,BYTE PTR [eax]
1000372b:	cmp    ecx,0x100
10003731:	jge    0x1000374e
10003733:	lea    edx,[esp+0x20]
10003737:	push   edx
10003738:	lea    eax,[esp+0x18]
1000373c:	push   eax
1000373d:	call   0x100040a0
10003742:	mov    ecx,eax
10003744:	call   0x10004580
10003749:	mov    esi,DWORD PTR [eax]
1000374b:	mov    edi,DWORD PTR [eax+0x4]
1000374e:	call   0x100040a0
10003753:	test   esi,esi
10003755:	mov    ebx,DWORD PTR [eax+0x4]
10003758:	je     0x1000375e
1000375a:	cmp    esi,eax
1000375c:	je     0x10003763
1000375e:	call   0x10018de3
10003763:	cmp    edi,ebx
10003765:	je     0x1000378a
10003767:	test   esi,esi
10003769:	jne    0x10003770
1000376b:	call   0x10018de3
10003770:	cmp    edi,DWORD PTR [esi+0x4]
10003773:	jne    0x1000377a
10003775:	call   0x10018de3
1000377a:	cmp    DWORD PTR [edi+0x40],0x8
1000377e:	jb     0x10003785
10003780:	mov    edi,DWORD PTR [edi+0x2c]
10003783:	jmp    0x1000378e
10003785:	add    edi,0x2c
10003788:	jmp    0x1000378e
1000378a:	mov    edi,DWORD PTR [esp+0x1c]
1000378e:	cmp    DWORD PTR ds:0x100c9d80,0x0
10003795:	jne    0x100037b3
10003797:	push   0x100b7e4c
1000379c:	push   0x100b7e5c
100037a1:	call   DWORD PTR ds:0x1002f0b0
100037a7:	push   eax
100037a8:	call   DWORD PTR ds:0x1002f050
100037ae:	mov    ds:0x100c9d80,eax
100037b3:	mov    eax,ds:0x100c9d84
100037b8:	test   eax,eax
100037ba:	jne    0x100037ca
100037bc:	push   eax
100037bd:	push   eax
100037be:	push   eax
100037bf:	call   DWORD PTR ds:0x1002f0dc
100037c5:	mov    ds:0x100c9d84,eax
100037ca:	push   eax
100037cb:	call   DWORD PTR ds:0x100c9d80
100037d1:	cmp    DWORD PTR [esp+0x38],0x8
100037d6:	jb     0x100037e5
100037d8:	mov    ecx,DWORD PTR [esp+0x24]
100037dc:	push   ecx
100037dd:	call   0x1001876e
100037e2:	add    esp,0x4
100037e5:	mov    eax,edi
100037e7:	mov    ecx,DWORD PTR [esp+0x60]
100037eb:	mov    DWORD PTR fs:0x0,ecx
100037f2:	pop    ecx
100037f3:	pop    edi
100037f4:	pop    esi
100037f5:	pop    ebx
100037f6:	mov    ecx,DWORD PTR [esp+0x48]
100037fa:	xor    ecx,esp
100037fc:	call   0x10018773
10003801:	mov    esp,ebp
10003803:	pop    ebp
10003804:	ret    
10003805:	int3   
10003806:	int3   
10003807:	int3   
10003808:	int3   
10003809:	int3   
1000380a:	int3   
1000380b:	int3   
1000380c:	int3   
1000380d:	int3   
1000380e:	int3   
1000380f:	int3   
10003810:	push   ebx
10003811:	push   ebp
10003812:	mov    ebp,DWORD PTR [esp+0xc]
10003816:	push   edi
10003817:	mov    edi,DWORD PTR [esp+0x14]
1000381b:	cmp    DWORD PTR [ebp+0x14],edi
1000381e:	mov    ebx,eax
10003820:	jae    0x10003827
10003822:	call   0x1001864e
10003827:	mov    eax,DWORD PTR [ebp+0x14]
1000382a:	sub    eax,edi
1000382c:	cmp    eax,ebx
1000382e:	jae    0x10003832
10003830:	mov    ebx,eax
10003832:	mov    eax,DWORD PTR [esi+0x14]
10003835:	or     ecx,0xffffffff
10003838:	sub    ecx,eax
1000383a:	cmp    ecx,ebx
1000383c:	jbe    0x10003845
1000383e:	lea    edx,[eax+ebx*1]
10003841:	cmp    edx,eax
10003843:	jae    0x1000384a
10003845:	call   0x1001860f
1000384a:	test   ebx,ebx
1000384c:	jbe    0x100038f6
10003852:	mov    edi,DWORD PTR [esi+0x14]
10003855:	add    edi,ebx
10003857:	cmp    edi,0xfffffffe
1000385a:	jbe    0x10003861
1000385c:	call   0x1001860f
10003861:	mov    eax,DWORD PTR [esi+0x18]
10003864:	cmp    eax,edi
10003866:	jae    0x10003883
10003868:	mov    eax,DWORD PTR [esi+0x14]
1000386b:	push   eax
1000386c:	push   edi
1000386d:	mov    ecx,esi
1000386f:	call   0x10004780
10003874:	test   edi,edi
10003876:	jbe    0x100038f6
10003878:	cmp    DWORD PTR [ebp+0x18],0x10
1000387c:	jb     0x100038ab
1000387e:	mov    ebp,DWORD PTR [ebp+0x4]
10003881:	jmp    0x100038ae
10003883:	test   edi,edi
10003885:	jne    0x10003876
10003887:	cmp    eax,0x10
1000388a:	mov    DWORD PTR [esi+0x14],edi
1000388d:	jb     0x1000389d
1000388f:	mov    eax,DWORD PTR [esi+0x4]
10003892:	pop    edi
10003893:	pop    ebp
10003894:	mov    BYTE PTR [eax],0x0
10003897:	mov    eax,esi
10003899:	pop    ebx
1000389a:	ret    0x8
1000389d:	pop    edi
1000389e:	lea    eax,[esi+0x4]
100038a1:	pop    ebp
100038a2:	mov    BYTE PTR [eax],0x0
100038a5:	mov    eax,esi
100038a7:	pop    ebx
100038a8:	ret    0x8
100038ab:	add    ebp,0x4
100038ae:	mov    eax,DWORD PTR [esi+0x18]
100038b1:	cmp    eax,0x10
100038b4:	jb     0x100038bb
100038b6:	mov    edx,DWORD PTR [esi+0x4]
100038b9:	jmp    0x100038be
100038bb:	lea    edx,[esi+0x4]
100038be:	mov    ecx,DWORD PTR [esi+0x14]
100038c1:	push   ebx
100038c2:	mov    ebx,DWORD PTR [esp+0x18]
100038c6:	add    ebp,ebx
100038c8:	sub    eax,ecx
100038ca:	push   ebp
100038cb:	push   eax
100038cc:	add    ecx,edx
100038ce:	push   ecx
100038cf:	call   0x10018df3
100038d4:	add    esp,0x10
100038d7:	cmp    DWORD PTR [esi+0x18],0x10
100038db:	mov    DWORD PTR [esi+0x14],edi
100038de:	jb     0x100038ef
100038e0:	mov    eax,DWORD PTR [esi+0x4]
100038e3:	mov    BYTE PTR [eax+edi*1],0x0
100038e7:	pop    edi
100038e8:	pop    ebp
100038e9:	mov    eax,esi
100038eb:	pop    ebx
100038ec:	ret    0x8
100038ef:	lea    eax,[esi+0x4]
100038f2:	mov    BYTE PTR [eax+edi*1],0x0
100038f6:	pop    edi
100038f7:	pop    ebp
100038f8:	mov    eax,esi
100038fa:	pop    ebx
100038fb:	ret    0x8
100038fe:	int3   
100038ff:	int3   
10003900:	or     eax,0xffffffff
10003903:	sub    eax,DWORD PTR [esi+0x14]
10003906:	cmp    eax,0x1
10003909:	ja     0x10003910
1000390b:	call   0x1001860f
10003910:	push   edi
10003911:	mov    edi,DWORD PTR [esi+0x14]
10003914:	add    edi,0x1
10003917:	cmp    edi,0xfffffffe
1000391a:	jbe    0x10003921
1000391c:	call   0x1001860f
10003921:	mov    eax,DWORD PTR [esi+0x18]
10003924:	cmp    eax,edi
10003926:	jae    0x1000394d
10003928:	mov    ecx,DWORD PTR [esi+0x14]
1000392b:	push   ecx
1000392c:	push   edi
1000392d:	mov    ecx,esi
1000392f:	call   0x10004780
10003934:	test   edi,edi
10003936:	jbe    0x10003981
10003938:	mov    edx,0x10
1000393d:	cmp    DWORD PTR [esi+0x18],edx
10003940:	push   ebp
10003941:	mov    ebp,DWORD PTR [esi+0x14]
10003944:	lea    eax,[esi+0x4]
10003947:	jb     0x1000396d
10003949:	mov    ecx,DWORD PTR [eax]
1000394b:	jmp    0x1000396f
1000394d:	test   edi,edi
1000394f:	jne    0x10003936
10003951:	cmp    eax,0x10
10003954:	mov    DWORD PTR [esi+0x14],edi
10003957:	jb     0x10003963
10003959:	mov    eax,DWORD PTR [esi+0x4]
1000395c:	mov    BYTE PTR [eax],0x0
1000395f:	mov    eax,esi
10003961:	pop    edi
10003962:	ret    
10003963:	lea    eax,[esi+0x4]
10003966:	mov    BYTE PTR [eax],0x0
10003969:	mov    eax,esi
1000396b:	pop    edi
1000396c:	ret    
1000396d:	mov    ecx,eax
1000396f:	mov    BYTE PTR [ecx+ebp*1],bl
10003972:	cmp    DWORD PTR [esi+0x18],edx
10003975:	mov    DWORD PTR [esi+0x14],edi
10003978:	pop    ebp
10003979:	jb     0x1000397d
1000397b:	mov    eax,DWORD PTR [eax]
1000397d:	mov    BYTE PTR [eax+edi*1],0x0
10003981:	mov    eax,esi
10003983:	pop    edi
10003984:	ret    
10003985:	int3   
10003986:	int3   
10003987:	int3   
10003988:	int3   
10003989:	int3   
1000398a:	int3   
1000398b:	int3   
1000398c:	int3   
1000398d:	int3   
1000398e:	int3   
1000398f:	int3   
10003990:	push   ebx
10003991:	mov    ebx,DWORD PTR [esp+0x8]
10003995:	push   ebp
10003996:	mov    ebp,DWORD PTR [esp+0x10]
1000399a:	cmp    DWORD PTR [ebx+0x14],ebp
1000399d:	push   esi
1000399e:	push   edi
1000399f:	mov    esi,ecx
100039a1:	jae    0x100039a8
100039a3:	call   0x1001864e
100039a8:	mov    edi,DWORD PTR [ebx+0x14]
100039ab:	mov    eax,DWORD PTR [esp+0x1c]
100039af:	sub    edi,ebp
100039b1:	cmp    eax,edi
100039b3:	jae    0x100039b7
100039b5:	mov    edi,eax
100039b7:	cmp    esi,ebx
100039b9:	jne    0x100039da
100039bb:	push   0xffffffff
100039bd:	add    edi,ebp
100039bf:	push   edi
100039c0:	mov    ecx,esi
100039c2:	call   0x100046f0
100039c7:	push   ebp
100039c8:	push   0x0
100039ca:	mov    ecx,esi
100039cc:	call   0x100046f0
100039d1:	pop    edi
100039d2:	mov    eax,esi
100039d4:	pop    esi
100039d5:	pop    ebp
100039d6:	pop    ebx
100039d7:	ret    0xc
100039da:	cmp    edi,0xfffffffe
100039dd:	jbe    0x100039e4
100039df:	call   0x1001860f
100039e4:	mov    eax,DWORD PTR [esi+0x18]
100039e7:	cmp    eax,edi
100039e9:	jae    0x10003a06
100039eb:	mov    eax,DWORD PTR [esi+0x14]
100039ee:	push   eax
100039ef:	push   edi
100039f0:	mov    ecx,esi
100039f2:	call   0x10004780
100039f7:	test   edi,edi
100039f9:	jbe    0x10003a61
100039fb:	cmp    DWORD PTR [ebx+0x18],0x10
100039ff:	jb     0x10003a30
10003a01:	mov    edx,DWORD PTR [ebx+0x4]
10003a04:	jmp    0x10003a33
10003a06:	test   edi,edi
10003a08:	jne    0x100039f9
10003a0a:	cmp    eax,0x10
10003a0d:	mov    DWORD PTR [esi+0x14],edi
10003a10:	jb     0x10003a21
10003a12:	mov    eax,DWORD PTR [esi+0x4]
10003a15:	pop    edi
10003a16:	mov    BYTE PTR [eax],0x0
10003a19:	mov    eax,esi
10003a1b:	pop    esi
10003a1c:	pop    ebp
10003a1d:	pop    ebx
10003a1e:	ret    0xc
10003a21:	lea    eax,[esi+0x4]
10003a24:	pop    edi
10003a25:	mov    BYTE PTR [eax],0x0
10003a28:	mov    eax,esi
10003a2a:	pop    esi
10003a2b:	pop    ebp
10003a2c:	pop    ebx
10003a2d:	ret    0xc
10003a30:	lea    edx,[ebx+0x4]
10003a33:	mov    ecx,DWORD PTR [esi+0x18]
10003a36:	cmp    ecx,0x10
10003a39:	lea    ebx,[esi+0x4]
10003a3c:	jb     0x10003a42
10003a3e:	mov    eax,DWORD PTR [ebx]
10003a40:	jmp    0x10003a44
10003a42:	mov    eax,ebx
10003a44:	push   edi
10003a45:	add    edx,ebp
10003a47:	push   edx
10003a48:	push   ecx
10003a49:	push   eax
10003a4a:	call   0x10018df3
10003a4f:	add    esp,0x10
10003a52:	cmp    DWORD PTR [esi+0x18],0x10
10003a56:	mov    DWORD PTR [esi+0x14],edi
10003a59:	jb     0x10003a5d
10003a5b:	mov    ebx,DWORD PTR [ebx]
10003a5d:	mov    BYTE PTR [ebx+edi*1],0x0
10003a61:	pop    edi
10003a62:	mov    eax,esi
10003a64:	pop    esi
10003a65:	pop    ebp
10003a66:	pop    ebx
10003a67:	ret    0xc
10003a6a:	int3   
10003a6b:	int3   
10003a6c:	int3   
10003a6d:	int3   
10003a6e:	int3   
10003a6f:	int3   
10003a70:	push   ebx
10003a71:	push   ebp
10003a72:	push   esi
10003a73:	mov    esi,ecx
10003a75:	mov    ecx,DWORD PTR [esi+0x18]
10003a78:	cmp    ecx,0x10
10003a7b:	lea    ebx,[esi+0x4]
10003a7e:	jb     0x10003a84
10003a80:	mov    eax,DWORD PTR [ebx]
10003a82:	jmp    0x10003a86
10003a84:	mov    eax,ebx
10003a86:	mov    ebp,DWORD PTR [esp+0x10]
10003a8a:	cmp    ebp,eax
10003a8c:	jb     0x10003abf
10003a8e:	cmp    ecx,0x10
10003a91:	jb     0x10003a97
10003a93:	mov    eax,DWORD PTR [ebx]
10003a95:	jmp    0x10003a99
10003a97:	mov    eax,ebx
10003a99:	mov    edx,DWORD PTR [esi+0x14]
10003a9c:	add    edx,eax
10003a9e:	cmp    edx,ebp
10003aa0:	jbe    0x10003abf
10003aa2:	cmp    ecx,0x10
10003aa5:	jb     0x10003aa9
10003aa7:	mov    ebx,DWORD PTR [ebx]
10003aa9:	mov    eax,DWORD PTR [esp+0x14]
10003aad:	push   eax
10003aae:	sub    ebp,ebx
10003ab0:	push   ebp
10003ab1:	push   esi
10003ab2:	mov    ecx,esi
10003ab4:	call   0x10003990
10003ab9:	pop    esi
10003aba:	pop    ebp
10003abb:	pop    ebx
10003abc:	ret    0x8
10003abf:	push   edi
10003ac0:	mov    edi,DWORD PTR [esp+0x18]
10003ac4:	cmp    edi,0xfffffffe
10003ac7:	jbe    0x10003ace
10003ac9:	call   0x1001860f
10003ace:	mov    eax,DWORD PTR [esi+0x18]
10003ad1:	cmp    eax,edi
10003ad3:	jae    0x10003af1
10003ad5:	mov    ecx,DWORD PTR [esi+0x14]
10003ad8:	push   ecx
10003ad9:	push   edi
10003ada:	mov    ecx,esi
10003adc:	call   0x10004780
10003ae1:	test   edi,edi
10003ae3:	jbe    0x10003b28
10003ae5:	mov    ecx,DWORD PTR [esi+0x18]
10003ae8:	cmp    ecx,0x10
10003aeb:	jb     0x10003b0b
10003aed:	mov    eax,DWORD PTR [ebx]
10003aef:	jmp    0x10003b0d
10003af1:	test   edi,edi
10003af3:	jne    0x10003ae3
10003af5:	cmp    eax,0x10
10003af8:	mov    DWORD PTR [esi+0x14],edi
10003afb:	jb     0x10003aff
10003afd:	mov    ebx,DWORD PTR [ebx]
10003aff:	pop    edi
10003b00:	mov    eax,esi
10003b02:	pop    esi
10003b03:	pop    ebp
10003b04:	mov    BYTE PTR [ebx],0x0
10003b07:	pop    ebx
10003b08:	ret    0x8
10003b0b:	mov    eax,ebx
10003b0d:	push   edi
10003b0e:	push   ebp
10003b0f:	push   ecx
10003b10:	push   eax
10003b11:	call   0x10018df3
10003b16:	add    esp,0x10
10003b19:	cmp    DWORD PTR [esi+0x18],0x10
10003b1d:	mov    DWORD PTR [esi+0x14],edi
10003b20:	jb     0x10003b24
10003b22:	mov    ebx,DWORD PTR [ebx]
10003b24:	mov    BYTE PTR [ebx+edi*1],0x0
10003b28:	pop    edi
10003b29:	mov    eax,esi
10003b2b:	pop    esi
10003b2c:	pop    ebp
10003b2d:	pop    ebx
10003b2e:	ret    0x8
10003b31:	int3   
10003b32:	int3   
10003b33:	int3   
10003b34:	int3   
10003b35:	int3   
10003b36:	int3   
10003b37:	int3   
10003b38:	int3   
10003b39:	int3   
10003b3a:	int3   
10003b3b:	int3   
10003b3c:	int3   
10003b3d:	int3   
10003b3e:	int3   
10003b3f:	int3   
10003b40:	push   ebx
10003b41:	push   ebp
10003b42:	mov    ebp,DWORD PTR [esp+0xc]
10003b46:	push   esi
10003b47:	push   edi
10003b48:	mov    edi,ecx
10003b4a:	cmp    DWORD PTR [edi+0x14],ebp
10003b4d:	jae    0x10003b54
10003b4f:	call   0x1001864e
10003b54:	mov    eax,DWORD PTR [edi+0x14]
10003b57:	mov    esi,DWORD PTR [esp+0x18]
10003b5b:	sub    eax,ebp
10003b5d:	cmp    eax,esi
10003b5f:	jae    0x10003b63
10003b61:	mov    esi,eax
10003b63:	mov    ebx,DWORD PTR [esp+0x20]
10003b67:	cmp    esi,ebx
10003b69:	mov    eax,esi
10003b6b:	jb     0x10003b6f
10003b6d:	mov    eax,ebx
10003b6f:	cmp    DWORD PTR [edi+0x18],0x10
10003b73:	jb     0x10003b7a
10003b75:	mov    edi,DWORD PTR [edi+0x4]
10003b78:	jmp    0x10003b7d
10003b7a:	add    edi,0x4
10003b7d:	push   eax
10003b7e:	mov    eax,DWORD PTR [esp+0x20]
10003b82:	push   eax
10003b83:	add    edi,ebp
10003b85:	push   edi
10003b86:	call   0x10001370
10003b8b:	add    esp,0xc
10003b8e:	test   eax,eax
10003b90:	jne    0x10003ba7
10003b92:	cmp    esi,ebx
10003b94:	jae    0x10003ba0
10003b96:	pop    edi
10003b97:	pop    esi
10003b98:	pop    ebp
10003b99:	or     eax,0xffffffff
10003b9c:	pop    ebx
10003b9d:	ret    0x10
10003ba0:	xor    eax,eax
10003ba2:	cmp    esi,ebx
10003ba4:	setne  al
10003ba7:	pop    edi
10003ba8:	pop    esi
10003ba9:	pop    ebp
10003baa:	pop    ebx
10003bab:	ret    0x10
10003bae:	int3   
10003baf:	int3   
10003bb0:	mov    ecx,DWORD PTR [esp+0x4]
10003bb4:	sub    esp,0xc
10003bb7:	test   ecx,ecx
10003bb9:	ja     0x10003bcc
10003bbb:	xor    ecx,ecx
10003bbd:	push   ecx
10003bbe:	call   0x100190b4
10003bc3:	add    esp,0x4
10003bc6:	add    esp,0xc
10003bc9:	ret    0x4
10003bcc:	or     eax,0xffffffff
10003bcf:	xor    edx,edx
10003bd1:	div    ecx
10003bd3:	cmp    eax,0x1
10003bd6:	jae    0x10003bbd
10003bd8:	lea    eax,[esp+0x10]
10003bdc:	push   eax
10003bdd:	lea    ecx,[esp+0x4]
10003be1:	mov    DWORD PTR [esp+0x14],0x0
10003be9:	call   0x10018f0e
10003bee:	push   0x100bba4c
10003bf3:	lea    ecx,[esp+0x4]
10003bf7:	push   ecx
10003bf8:	mov    DWORD PTR [esp+0x8],0x1002f510
10003c00:	call   0x10018e6e
10003c05:	int3   
10003c06:	int3   
10003c07:	int3   
10003c08:	int3   
10003c09:	int3   
10003c0a:	int3   
10003c0b:	int3   
10003c0c:	int3   
10003c0d:	int3   
10003c0e:	int3   
10003c0f:	int3   
10003c10:	push   ebx
10003c11:	mov    ebx,DWORD PTR [esp+0x8]
10003c15:	test   ebx,ebx
10003c17:	push   ebp
10003c18:	push   esi
10003c19:	push   edi
10003c1a:	mov    edi,ecx
10003c1c:	je     0x10003c94
10003c1e:	call   DWORD PTR ds:0x100c75d4
10003c24:	mov    ebp,DWORD PTR ds:0x1002f098
10003c2a:	push   0x0
10003c2c:	push   0x0
10003c2e:	push   0xffffffff
10003c30:	push   ebx
10003c31:	push   0x0
10003c33:	push   eax
10003c34:	call   ebp
10003c36:	mov    esi,eax
10003c38:	sub    esi,0x1
10003c3b:	test   esi,esi
10003c3d:	jle    0x10003c94
10003c3f:	mov    eax,DWORD PTR [edi]
10003c41:	mov    edx,DWORD PTR [eax-0x8]
10003c44:	sub    eax,0x10
10003c47:	mov    ecx,0x1
10003c4c:	sub    ecx,DWORD PTR [eax+0xc]
10003c4f:	sub    edx,esi
10003c51:	or     ecx,edx
10003c53:	jge    0x10003c5d
10003c55:	push   esi
10003c56:	mov    ecx,edi
10003c58:	call   0x10004aa0
10003c5d:	mov    eax,DWORD PTR [edi]
10003c5f:	push   esi
10003c60:	push   eax
10003c61:	push   0xffffffff
10003c63:	push   ebx
10003c64:	push   0x0
10003c66:	call   DWORD PTR ds:0x100c75d4
10003c6c:	push   eax
10003c6d:	call   ebp
10003c6f:	mov    eax,DWORD PTR [edi]
10003c71:	cmp    esi,DWORD PTR [eax-0x8]
10003c74:	jg     0x10003c8a
10003c76:	mov    DWORD PTR [eax-0xc],esi
10003c79:	mov    eax,DWORD PTR [edi]
10003c7b:	mov    WORD PTR [eax+esi*2],0x0
10003c81:	mov    eax,edi
10003c83:	pop    edi
10003c84:	pop    esi
10003c85:	pop    ebp
10003c86:	pop    ebx
10003c87:	ret    0x4
10003c8a:	push   0x80070057
10003c8f:	call   0x10001090
10003c94:	mov    ecx,edi
10003c96:	call   0x10004980
10003c9b:	mov    eax,edi
10003c9d:	pop    edi
10003c9e:	pop    esi
10003c9f:	pop    ebp
10003ca0:	pop    ebx
10003ca1:	ret    0x4
10003ca4:	int3   
10003ca5:	int3   
10003ca6:	int3   
10003ca7:	int3   
10003ca8:	int3   
10003ca9:	int3   
10003caa:	int3   
10003cab:	int3   
10003cac:	int3   
10003cad:	int3   
10003cae:	int3   
10003caf:	int3   
10003cb0:	mov    eax,DWORD PTR [esp+0x4]
10003cb4:	push   esi
10003cb5:	push   edi
10003cb6:	mov    edi,ecx
10003cb8:	mov    ecx,DWORD PTR [eax]
10003cba:	mov    esi,DWORD PTR [edi]
10003cbc:	lea    eax,[ecx-0x10]
10003cbf:	sub    esi,0x10
10003cc2:	cmp    eax,esi
10003cc4:	je     0x10003d1a
10003cc6:	cmp    DWORD PTR [esi+0xc],0x0
10003cca:	push   ebx
10003ccb:	lea    ebx,[esi+0xc]
10003cce:	jl     0x10003d06
10003cd0:	mov    edx,DWORD PTR [eax]
10003cd2:	cmp    edx,DWORD PTR [esi]
10003cd4:	jne    0x10003d06
10003cd6:	push   ebp
10003cd7:	push   eax
10003cd8:	call   0x10004af0
10003cdd:	mov    ebp,eax
10003cdf:	add    esp,0x4
10003ce2:	or     eax,0xffffffff
10003ce5:	lock xadd DWORD PTR [ebx],eax
10003ce9:	dec    eax
10003cea:	test   eax,eax
10003cec:	jg     0x10003cf8
10003cee:	mov    ecx,DWORD PTR [esi]
10003cf0:	mov    edx,DWORD PTR [ecx]
10003cf2:	mov    eax,DWORD PTR [edx+0x4]
10003cf5:	push   esi
10003cf6:	call   eax
10003cf8:	add    ebp,0x10
10003cfb:	mov    DWORD PTR [edi],ebp
10003cfd:	pop    ebp
10003cfe:	pop    ebx
10003cff:	mov    eax,edi
10003d01:	pop    edi
10003d02:	pop    esi
10003d03:	ret    0x4
10003d06:	mov    edx,DWORD PTR [ecx-0xc]
10003d09:	push   edx
10003d0a:	push   ecx
10003d0b:	mov    ecx,edi
10003d0d:	call   0x100049f0
10003d12:	pop    ebx
10003d13:	mov    eax,edi
10003d15:	pop    edi
10003d16:	pop    esi
10003d17:	ret    0x4
10003d1a:	mov    eax,edi
10003d1c:	pop    edi
10003d1d:	pop    esi
10003d1e:	ret    0x4
10003d21:	int3   
10003d22:	int3   
10003d23:	int3   
10003d24:	int3   
10003d25:	int3   
10003d26:	int3   
10003d27:	int3   
10003d28:	int3   
10003d29:	int3   
10003d2a:	int3   
10003d2b:	int3   
10003d2c:	int3   
10003d2d:	int3   
10003d2e:	int3   
10003d2f:	int3   
10003d30:	push   ebx
10003d31:	push   ebp
10003d32:	push   esi
10003d33:	mov    esi,DWORD PTR [esp+0x10]
10003d37:	mov    ebp,ecx
10003d39:	mov    eax,DWORD PTR [ebp+0x0]
10003d3c:	mov    ebx,DWORD PTR [eax-0xc]
10003d3f:	mov    ecx,DWORD PTR [esp+0x14]
10003d43:	sub    esi,eax
10003d45:	mov    edx,0x1
10003d4a:	sub    edx,DWORD PTR [eax-0x4]
10003d4d:	mov    eax,DWORD PTR [eax-0x8]
10003d50:	push   edi
10003d51:	lea    edi,[ebx+ecx*1]
10003d54:	sub    eax,edi
10003d56:	sar    esi,1
10003d58:	or     edx,eax
10003d5a:	jge    0x10003d64
10003d5c:	push   edi
10003d5d:	mov    ecx,ebp
10003d5f:	call   0x10004aa0
10003d64:	cmp    esi,ebx
10003d66:	mov    ecx,DWORD PTR [ebp+0x0]
10003d69:	ja     0x10003d72
10003d6b:	lea    edx,[ecx+esi*2]
10003d6e:	mov    DWORD PTR [esp+0x14],edx
10003d72:	mov    eax,DWORD PTR [esp+0x18]
10003d76:	mov    edx,DWORD PTR [esp+0x14]
10003d7a:	add    eax,eax
10003d7c:	push   eax
10003d7d:	push   edx
10003d7e:	push   eax
10003d7f:	lea    eax,[ecx+ebx*2]
10003d82:	push   eax
10003d83:	call   0x10018df3
10003d88:	add    esp,0x10
10003d8b:	test   edi,edi
10003d8d:	jl     0x10003daa
10003d8f:	mov    eax,DWORD PTR [ebp+0x0]
10003d92:	cmp    edi,DWORD PTR [eax-0x8]
10003d95:	jg     0x10003daa
10003d97:	mov    DWORD PTR [eax-0xc],edi
10003d9a:	mov    ecx,DWORD PTR [ebp+0x0]
10003d9d:	mov    WORD PTR [ecx+edi*2],0x0
10003da3:	pop    edi
10003da4:	pop    esi
10003da5:	pop    ebp
10003da6:	pop    ebx
10003da7:	ret    0x8
10003daa:	push   0x80070057
10003daf:	call   0x10001090
10003db4:	int3   
10003db5:	int3   
10003db6:	int3   
10003db7:	int3   
10003db8:	int3   
10003db9:	int3   
10003dba:	int3   
10003dbb:	int3   
10003dbc:	int3   
10003dbd:	int3   
10003dbe:	int3   
10003dbf:	int3   
10003dc0:	mov    eax,DWORD PTR [esp+0x4]
10003dc4:	test   eax,eax
10003dc6:	jl     0x10003ddd
10003dc8:	mov    edx,DWORD PTR [ecx]
10003dca:	cmp    eax,DWORD PTR [edx-0x8]
10003dcd:	jg     0x10003ddd
10003dcf:	mov    DWORD PTR [edx-0xc],eax
10003dd2:	mov    ecx,DWORD PTR [ecx]
10003dd4:	mov    WORD PTR [ecx+eax*2],0x0
10003dda:	ret    0x4
10003ddd:	push   0x80070057
10003de2:	call   0x10001090
10003de7:	int3   
10003de8:	int3   
10003de9:	int3   
10003dea:	int3   
10003deb:	int3   
10003dec:	int3   
10003ded:	int3   
10003dee:	int3   
10003def:	int3   
10003df0:	mov    eax,DWORD PTR [esp+0x14]
10003df4:	push   ebp
10003df5:	mov    ebp,DWORD PTR [esp+0x8]
10003df9:	push   esi
10003dfa:	mov    esi,DWORD PTR [esp+0x14]
10003dfe:	push   edi
10003dff:	lea    edi,[esi+eax*1]
10003e02:	mov    eax,DWORD PTR [ebp+0x0]
10003e05:	mov    edx,DWORD PTR [eax-0x8]
10003e08:	sub    eax,0x10
10003e0b:	mov    ecx,0x1
10003e10:	sub    ecx,DWORD PTR [eax+0xc]
10003e13:	sub    edx,edi
10003e15:	or     ecx,edx
10003e17:	jge    0x10003e21
10003e19:	push   edi
10003e1a:	mov    ecx,ebp
10003e1c:	call   0x10004aa0
10003e21:	mov    eax,DWORD PTR [esp+0x14]
10003e25:	push   ebx
10003e26:	mov    ebx,DWORD PTR [ebp+0x0]
10003e29:	add    esi,esi
10003e2b:	push   esi
10003e2c:	push   eax
10003e2d:	push   esi
10003e2e:	push   ebx
10003e2f:	call   0x10018df3
10003e34:	mov    eax,DWORD PTR [esp+0x34]
10003e38:	mov    ecx,DWORD PTR [esp+0x30]
10003e3c:	add    eax,eax
10003e3e:	push   eax
10003e3f:	push   ecx
10003e40:	push   eax
10003e41:	add    esi,ebx
10003e43:	push   esi
10003e44:	call   0x10018df3
10003e49:	add    esp,0x20
10003e4c:	test   edi,edi
10003e4e:	pop    ebx
10003e4f:	jl     0x10003e69
10003e51:	mov    eax,DWORD PTR [ebp+0x0]
10003e54:	cmp    edi,DWORD PTR [eax-0x8]
10003e57:	jg     0x10003e69
10003e59:	mov    DWORD PTR [eax-0xc],edi
10003e5c:	mov    edx,DWORD PTR [ebp+0x0]
10003e5f:	mov    WORD PTR [edx+edi*2],0x0
10003e65:	pop    edi
10003e66:	pop    esi
10003e67:	pop    ebp
10003e68:	ret    
10003e69:	push   0x80070057
10003e6e:	call   0x10001090
10003e73:	int3   
10003e74:	int3   
10003e75:	int3   
10003e76:	int3   
10003e77:	int3   
10003e78:	int3   
10003e79:	int3   
10003e7a:	int3   
10003e7b:	int3   
10003e7c:	int3   
10003e7d:	int3   
10003e7e:	int3   
10003e7f:	int3   
10003e80:	push   ecx
10003e81:	push   ebx
10003e82:	push   ebp
10003e83:	push   esi
10003e84:	mov    esi,DWORD PTR [ecx]
10003e86:	mov    ebx,DWORD PTR [esi-0xc]
10003e89:	sub    esi,0x10
10003e8c:	mov    DWORD PTR [esp+0xc],ecx
10003e90:	mov    ecx,DWORD PTR [esi]
10003e92:	mov    eax,DWORD PTR [ecx]
10003e94:	mov    edx,DWORD PTR [eax+0x10]
10003e97:	push   edi
10003e98:	call   edx
10003e9a:	mov    edx,DWORD PTR [eax]
10003e9c:	mov    ebp,DWORD PTR [esp+0x18]
10003ea0:	push   0x2
10003ea2:	mov    ecx,eax
10003ea4:	mov    eax,DWORD PTR [edx]
10003ea6:	push   ebp
10003ea7:	call   eax
10003ea9:	mov    edi,eax
10003eab:	test   edi,edi
10003ead:	jne    0x10003eb4
10003eaf:	call   0x10004a90
10003eb4:	cmp    ebx,ebp
10003eb6:	jge    0x10003eba
10003eb8:	mov    ebp,ebx
10003eba:	lea    eax,[ebp+ebp*1+0x2]
10003ebe:	push   eax
10003ebf:	lea    ecx,[esi+0x10]
10003ec2:	push   ecx
10003ec3:	push   eax
10003ec4:	lea    ebp,[edi+0x10]
10003ec7:	push   ebp
10003ec8:	call   0x10018df3
10003ecd:	add    esp,0x10
10003ed0:	mov    DWORD PTR [edi+0x4],ebx
10003ed3:	lea    edx,[esi+0xc]
10003ed6:	or     eax,0xffffffff
10003ed9:	lock xadd DWORD PTR [edx],eax
10003edd:	dec    eax
10003ede:	test   eax,eax
10003ee0:	jg     0x10003eec
10003ee2:	mov    ecx,DWORD PTR [esi]
10003ee4:	mov    edx,DWORD PTR [ecx]
10003ee6:	mov    eax,DWORD PTR [edx+0x4]
10003ee9:	push   esi
10003eea:	call   eax
10003eec:	mov    ecx,DWORD PTR [esp+0x10]
10003ef0:	pop    edi
10003ef1:	pop    esi
10003ef2:	mov    DWORD PTR [ecx],ebp
10003ef4:	pop    ebp
10003ef5:	pop    ebx
10003ef6:	pop    ecx
10003ef7:	ret    0x4
10003efa:	int3   
10003efb:	int3   
10003efc:	int3   
10003efd:	int3   
10003efe:	int3   
10003eff:	int3   
10003f00:	push   esi
10003f01:	mov    esi,ecx
10003f03:	push   edi
10003f04:	mov    edi,DWORD PTR [esi]
10003f06:	test   edi,edi
10003f08:	je     0x10003f2d
10003f0a:	push   ebx
10003f0b:	call   DWORD PTR ds:0x1002f094
10003f11:	push   edi
10003f12:	mov    ebx,eax
10003f14:	call   DWORD PTR ds:0x1002f064
10003f1a:	push   ebx
10003f1b:	call   DWORD PTR ds:0x1002f090
10003f21:	mov    eax,DWORD PTR [esp+0x10]
10003f25:	pop    ebx
10003f26:	pop    edi
10003f27:	mov    DWORD PTR [esi],eax
10003f29:	pop    esi
10003f2a:	ret    0x4
10003f2d:	mov    ecx,DWORD PTR [esp+0xc]
10003f31:	pop    edi
10003f32:	mov    DWORD PTR [esi],ecx
10003f34:	pop    esi
10003f35:	ret    0x4
10003f38:	int3   
10003f39:	int3   
10003f3a:	int3   
10003f3b:	int3   
10003f3c:	int3   
10003f3d:	int3   
10003f3e:	int3   
10003f3f:	int3   
10003f40:	push   0xffffffff
10003f42:	push   0x1002db8e
10003f47:	mov    eax,fs:0x0
10003f4d:	push   eax
10003f4e:	mov    eax,ds:0x100c7654
10003f53:	xor    eax,esp
10003f55:	push   eax
10003f56:	lea    eax,[esp+0x4]
10003f5a:	mov    fs:0x0,eax
10003f60:	test   BYTE PTR ds:0x100c9d34,0x1
10003f67:	jne    0x10003fb9
10003f69:	or     DWORD PTR ds:0x100c9d34,0x1
10003f70:	mov    ecx,0x100c9d18
10003f75:	mov    DWORD PTR [esp+0xc],0x0
10003f7d:	call   0x100065d0
10003f82:	mov    ds:0x100c9d1c,eax
10003f87:	mov    BYTE PTR [eax+0x45],0x1
10003f8b:	mov    eax,ds:0x100c9d1c
10003f90:	mov    DWORD PTR [eax+0x4],eax
10003f93:	mov    eax,ds:0x100c9d1c
10003f98:	mov    DWORD PTR [eax],eax
10003f9a:	mov    eax,ds:0x100c9d1c
10003f9f:	mov    DWORD PTR [eax+0x8],eax
10003fa2:	push   0x1002ea90
10003fa7:	mov    DWORD PTR ds:0x100c9d20,0x0
10003fb1:	call   0x10018ca7
10003fb6:	add    esp,0x4
10003fb9:	mov    eax,0x100c9d18
10003fbe:	mov    ecx,DWORD PTR [esp+0x4]
10003fc2:	mov    DWORD PTR fs:0x0,ecx
10003fc9:	pop    ecx
10003fca:	add    esp,0xc
10003fcd:	ret    
10003fce:	int3   
10003fcf:	int3   
10003fd0:	push   0xffffffff
10003fd2:	push   0x1002d7a8
10003fd7:	mov    eax,fs:0x0
10003fdd:	push   eax
10003fde:	push   ecx
10003fdf:	push   ebx
10003fe0:	push   ebp
10003fe1:	push   esi
10003fe2:	push   edi
10003fe3:	mov    eax,ds:0x100c7654
10003fe8:	xor    eax,esp
10003fea:	push   eax
10003feb:	lea    eax,[esp+0x18]
10003fef:	mov    fs:0x0,eax
10003ff5:	mov    esi,DWORD PTR [esp+0x28]
10003ff9:	xor    eax,eax
10003ffb:	mov    DWORD PTR [esp+0x14],eax
10003fff:	mov    DWORD PTR [esp+0x20],eax
10004003:	push   0xffffffff
10004005:	mov    DWORD PTR [esi+0x14],eax
10004008:	mov    DWORD PTR [esi+0x18],0xf
1000400f:	lea    ebp,[esi+0x4]
10004012:	push   eax
10004013:	mov    BYTE PTR [ebp+0x0],al
10004016:	lea    eax,[esp+0x34]
1000401a:	push   eax
1000401b:	mov    ecx,esi
1000401d:	call   0x10003990
10004022:	mov    eax,DWORD PTR [esi+0x14]
10004025:	mov    edi,0x1
1000402a:	cmp    eax,edi
1000402c:	jbe    0x1000406d
1000402e:	cmp    edi,eax
10004030:	jbe    0x10004037
10004032:	call   0x10018de3
10004037:	cmp    DWORD PTR [esi+0x18],0x10
1000403b:	jb     0x10004042
1000403d:	mov    ebx,DWORD PTR [ebp+0x0]
10004040:	jmp    0x10004044
10004042:	mov    ebx,ebp
10004044:	lea    ecx,[edi-0x1]
10004047:	cmp    ecx,DWORD PTR [esi+0x14]
1000404a:	jbe    0x10004051
1000404c:	call   0x10018de3
10004051:	cmp    DWORD PTR [esi+0x18],0x10
10004055:	jb     0x1000405c
10004057:	mov    eax,DWORD PTR [ebp+0x0]
1000405a:	jmp    0x1000405e
1000405c:	mov    eax,ebp
1000405e:	mov    dl,BYTE PTR [eax+edi*1-0x1]
10004062:	xor    BYTE PTR [ebx+edi*1],dl
10004065:	add    edi,0x1
10004068:	cmp    edi,DWORD PTR [esi+0x14]
1000406b:	jb     0x10004037
1000406d:	cmp    DWORD PTR [esp+0x44],0x10
10004072:	jb     0x10004081
10004074:	mov    eax,DWORD PTR [esp+0x30]
10004078:	push   eax
10004079:	call   0x1001876e
1000407e:	add    esp,0x4
10004081:	mov    eax,esi
10004083:	mov    ecx,DWORD PTR [esp+0x18]
10004087:	mov    DWORD PTR fs:0x0,ecx
1000408e:	pop    ecx
1000408f:	pop    edi
10004090:	pop    esi
10004091:	pop    ebp
10004092:	pop    ebx
10004093:	add    esp,0x10
10004096:	ret    
10004097:	int3   
10004098:	int3   
10004099:	int3   
1000409a:	int3   
1000409b:	int3   
1000409c:	int3   
1000409d:	int3   
1000409e:	int3   
1000409f:	int3   
100040a0:	push   0xffffffff
100040a2:	push   0x1002db5e
100040a7:	mov    eax,fs:0x0
100040ad:	push   eax
100040ae:	mov    eax,ds:0x100c7654
100040b3:	xor    eax,esp
100040b5:	push   eax
100040b6:	lea    eax,[esp+0x4]
100040ba:	mov    fs:0x0,eax
100040c0:	test   BYTE PTR ds:0x100c9d30,0x1
100040c7:	jne    0x10004119
100040c9:	or     DWORD PTR ds:0x100c9d30,0x1
100040d0:	mov    ecx,0x100c9d24
100040d5:	mov    DWORD PTR [esp+0xc],0x0
100040dd:	call   0x100065d0
100040e2:	mov    ds:0x100c9d28,eax
100040e7:	mov    BYTE PTR [eax+0x45],0x1
100040eb:	mov    eax,ds:0x100c9d28
100040f0:	mov    DWORD PTR [eax+0x4],eax
100040f3:	mov    eax,ds:0x100c9d28
100040f8:	mov    DWORD PTR [eax],eax
100040fa:	mov    eax,ds:0x100c9d28
100040ff:	mov    DWORD PTR [eax+0x8],eax
10004102:	push   0x1002ea80
10004107:	mov    DWORD PTR ds:0x100c9d2c,0x0
10004111:	call   0x10018ca7
10004116:	add    esp,0x4
10004119:	mov    eax,0x100c9d24
1000411e:	mov    ecx,DWORD PTR [esp+0x4]
10004122:	mov    DWORD PTR fs:0x0,ecx
10004129:	pop    ecx
1000412a:	add    esp,0xc
1000412d:	ret    
1000412e:	int3   
1000412f:	int3   
10004130:	push   0xffffffff
10004132:	push   0x1002d568
10004137:	mov    eax,fs:0x0
1000413d:	push   eax
1000413e:	push   ecx
1000413f:	push   ebx
10004140:	push   ebp
10004141:	push   esi
10004142:	push   edi
10004143:	mov    eax,ds:0x100c7654
10004148:	xor    eax,esp
1000414a:	push   eax
1000414b:	lea    eax,[esp+0x18]
1000414f:	mov    fs:0x0,eax
10004155:	mov    esi,DWORD PTR [esp+0x28]
10004159:	xor    eax,eax
1000415b:	mov    DWORD PTR [esp+0x14],eax
1000415f:	mov    DWORD PTR [esp+0x20],eax
10004163:	push   0xffffffff
10004165:	mov    DWORD PTR [esi+0x14],eax
10004168:	mov    DWORD PTR [esi+0x18],0x7
1000416f:	lea    ebp,[esi+0x4]
10004172:	push   eax
10004173:	mov    WORD PTR [ebp+0x0],ax
10004177:	lea    eax,[esp+0x34]
1000417b:	push   eax
1000417c:	mov    ecx,esi
1000417e:	call   0x10004e50
10004183:	mov    eax,DWORD PTR [esi+0x14]
10004186:	mov    edi,0x1
1000418b:	cmp    eax,edi
1000418d:	jbe    0x100041d0
1000418f:	cmp    edi,eax
10004191:	jbe    0x10004198
10004193:	call   0x10018de3
10004198:	cmp    DWORD PTR [esi+0x18],0x8
1000419c:	jb     0x100041a3
1000419e:	mov    ebx,DWORD PTR [ebp+0x0]
100041a1:	jmp    0x100041a5
100041a3:	mov    ebx,ebp
100041a5:	lea    ecx,[edi-0x1]
100041a8:	cmp    ecx,DWORD PTR [esi+0x14]
100041ab:	jbe    0x100041b2
100041ad:	call   0x10018de3
100041b2:	cmp    DWORD PTR [esi+0x18],0x8
100041b6:	jb     0x100041bd
100041b8:	mov    eax,DWORD PTR [ebp+0x0]
100041bb:	jmp    0x100041bf
100041bd:	mov    eax,ebp
100041bf:	mov    dx,WORD PTR [eax+edi*2-0x2]
100041c4:	xor    WORD PTR [ebx+edi*2],dx
100041c8:	add    edi,0x1
100041cb:	cmp    edi,DWORD PTR [esi+0x14]
100041ce:	jb     0x10004198
100041d0:	cmp    DWORD PTR [esp+0x44],0x8
100041d5:	jb     0x100041e4
100041d7:	mov    eax,DWORD PTR [esp+0x30]
100041db:	push   eax
100041dc:	call   0x1001876e
100041e1:	add    esp,0x4
100041e4:	mov    eax,esi
100041e6:	mov    ecx,DWORD PTR [esp+0x18]
100041ea:	mov    DWORD PTR fs:0x0,ecx
100041f1:	pop    ecx
100041f2:	pop    edi
100041f3:	pop    esi
100041f4:	pop    ebp
100041f5:	pop    ebx
100041f6:	add    esp,0x10
100041f9:	ret    
100041fa:	int3   
100041fb:	int3   
100041fc:	int3   
100041fd:	int3   
100041fe:	int3   
100041ff:	int3   
10004200:	push   ebp
10004201:	mov    ebp,esp
10004203:	and    esp,0xfffffff8
10004206:	push   0xffffffff
10004208:	push   0x1002db30
1000420d:	mov    eax,fs:0x0
10004213:	push   eax
10004214:	sub    esp,0x60
10004217:	push   ebx
10004218:	push   esi
10004219:	push   edi
1000421a:	mov    eax,ds:0x100c7654
1000421f:	xor    eax,esp
10004221:	push   eax
10004222:	lea    eax,[esp+0x70]
10004226:	mov    fs:0x0,eax
1000422c:	mov    edi,ecx
1000422e:	mov    ebx,DWORD PTR [ebp+0x8]
10004231:	push   ebx
10004232:	call   0x100057e0
10004237:	test   edi,edi
10004239:	mov    esi,eax
1000423b:	jne    0x10004242
1000423d:	call   0x10018de3
10004242:	mov    eax,DWORD PTR [edi+0x4]
10004245:	cmp    esi,eax
10004247:	je     0x10004271
10004249:	cmp    DWORD PTR [esi+0x24],0x10
1000424d:	mov    ecx,DWORD PTR [esi+0x20]
10004250:	jb     0x10004257
10004252:	mov    eax,DWORD PTR [esi+0x10]
10004255:	jmp    0x1000425a
10004257:	lea    eax,[esi+0x10]
1000425a:	push   ecx
1000425b:	push   eax
1000425c:	mov    eax,DWORD PTR [ebx+0x14]
1000425f:	push   eax
10004260:	push   0x0
10004262:	mov    ecx,ebx
10004264:	call   0x10003b40
10004269:	test   eax,eax
1000426b:	jge    0x10004325
10004271:	xor    eax,eax
10004273:	mov    DWORD PTR [esp+0x30],0xf
1000427b:	mov    DWORD PTR [esp+0x2c],eax
1000427f:	mov    BYTE PTR [esp+0x1c],al
10004283:	lea    ecx,[esp+0x18]
10004287:	push   ecx
10004288:	push   ebx
10004289:	lea    ecx,[esp+0x3c]
1000428d:	mov    DWORD PTR [esp+0x80],eax
10004294:	call   0x10004db0
10004299:	push   eax
1000429a:	push   esi
1000429b:	push   edi
1000429c:	lea    edx,[esp+0x1c]
100042a0:	push   edx
100042a1:	mov    ecx,edi
100042a3:	mov    BYTE PTR [esp+0x88],0x1
100042ab:	call   0x10004b60
100042b0:	cmp    DWORD PTR [esp+0x68],0x10
100042b5:	mov    edi,DWORD PTR [eax]
100042b7:	mov    esi,DWORD PTR [eax+0x4]
100042ba:	jb     0x100042c9
100042bc:	mov    eax,DWORD PTR [esp+0x54]
100042c0:	push   eax
100042c1:	call   0x1001876e
100042c6:	add    esp,0x4
100042c9:	xor    ebx,ebx
100042cb:	cmp    DWORD PTR [esp+0x4c],0x10
100042d0:	mov    DWORD PTR [esp+0x68],0xf
100042d8:	mov    DWORD PTR [esp+0x64],ebx
100042dc:	mov    BYTE PTR [esp+0x54],bl
100042e0:	jb     0x100042ef
100042e2:	mov    ecx,DWORD PTR [esp+0x38]
100042e6:	push   ecx
100042e7:	call   0x1001876e
100042ec:	add    esp,0x4
100042ef:	cmp    DWORD PTR [esp+0x30],0x10
100042f4:	mov    DWORD PTR [esp+0x4c],0xf
100042fc:	mov    DWORD PTR [esp+0x48],ebx
10004300:	mov    BYTE PTR [esp+0x38],bl
10004304:	jb     0x10004313
10004306:	mov    edx,DWORD PTR [esp+0x1c]
1000430a:	push   edx
1000430b:	call   0x1001876e
10004310:	add    esp,0x4
10004313:	mov    DWORD PTR [esp+0x30],0xf
1000431b:	mov    DWORD PTR [esp+0x2c],ebx
1000431f:	mov    BYTE PTR [esp+0x1c],bl
10004323:	jmp    0x10004327
10004325:	xor    ebx,ebx
10004327:	cmp    edi,ebx
10004329:	jne    0x10004330
1000432b:	call   0x10018de3
10004330:	cmp    esi,DWORD PTR [edi+0x4]
10004333:	jne    0x1000433a
10004335:	call   0x10018de3
1000433a:	lea    eax,[esi+0x28]
1000433d:	mov    ecx,DWORD PTR [esp+0x70]
10004341:	mov    DWORD PTR fs:0x0,ecx
10004348:	pop    ecx
10004349:	pop    edi
1000434a:	pop    esi
1000434b:	pop    ebx
1000434c:	mov    esp,ebp
1000434e:	pop    ebp
1000434f:	ret    0x4
10004352:	int3   
10004353:	int3   
10004354:	int3   
10004355:	int3   
10004356:	int3   
10004357:	int3   
10004358:	int3   
10004359:	int3   
1000435a:	int3   
1000435b:	int3   
1000435c:	int3   
1000435d:	int3   
1000435e:	int3   
1000435f:	int3   
10004360:	sub    esp,0x18
10004363:	push   ebx
10004364:	mov    ebx,DWORD PTR [esp+0x24]
10004368:	push   esi
10004369:	push   edi
1000436a:	push   ebx
1000436b:	mov    esi,ecx
1000436d:	call   0x100057e0
10004372:	test   esi,esi
10004374:	mov    edi,eax
10004376:	mov    DWORD PTR [esp+0x14],edi
1000437a:	jne    0x10004381
1000437c:	call   0x10018de3
10004381:	cmp    edi,DWORD PTR [esi+0x4]
10004384:	mov    DWORD PTR [esp+0x10],esi
10004388:	je     0x100043b4
1000438a:	cmp    DWORD PTR [edi+0x24],0x10
1000438e:	mov    eax,DWORD PTR [edi+0x20]
10004391:	jb     0x10004398
10004393:	mov    edi,DWORD PTR [edi+0x10]
10004396:	jmp    0x1000439b
10004398:	add    edi,0x10
1000439b:	push   eax
1000439c:	mov    eax,DWORD PTR [ebx+0x14]
1000439f:	push   edi
100043a0:	push   eax
100043a1:	push   0x0
100043a3:	mov    ecx,ebx
100043a5:	call   0x10003b40
100043aa:	test   eax,eax
100043ac:	jl     0x100043b4
100043ae:	lea    ecx,[esp+0x10]
100043b2:	jmp    0x100043c3
100043b4:	mov    ecx,DWORD PTR [esi+0x4]
100043b7:	mov    DWORD PTR [esp+0x1c],ecx
100043bb:	mov    DWORD PTR [esp+0x18],esi
100043bf:	lea    ecx,[esp+0x18]
100043c3:	mov    edx,DWORD PTR [ecx]
100043c5:	mov    eax,DWORD PTR [esp+0x28]
100043c9:	mov    ecx,DWORD PTR [ecx+0x4]
100043cc:	pop    edi
100043cd:	pop    esi
100043ce:	mov    DWORD PTR [eax],edx
100043d0:	mov    DWORD PTR [eax+0x4],ecx
100043d3:	pop    ebx
100043d4:	add    esp,0x18
100043d7:	ret    0x8
100043da:	int3   
100043db:	int3   
100043dc:	int3   
100043dd:	int3   
100043de:	int3   
100043df:	int3   
100043e0:	push   esi
100043e1:	mov    esi,ecx
100043e3:	cmp    DWORD PTR [esi+0x18],0x8
100043e7:	jb     0x100043f5
100043e9:	mov    eax,DWORD PTR [esi+0x4]
100043ec:	push   eax
100043ed:	call   0x1001876e
100043f2:	add    esp,0x4
100043f5:	xor    eax,eax
100043f7:	mov    DWORD PTR [esi+0x18],0x7
100043fe:	mov    DWORD PTR [esi+0x14],eax
10004401:	mov    WORD PTR [esi+0x4],ax
10004405:	pop    esi
10004406:	ret    
10004407:	int3   
10004408:	int3   
10004409:	int3   
1000440a:	int3   
1000440b:	int3   
1000440c:	int3   
1000440d:	int3   
1000440e:	int3   
1000440f:	int3   
10004410:	cmp    DWORD PTR [ecx+0x18],0x8
10004414:	jb     0x1000441a
10004416:	mov    eax,DWORD PTR [ecx+0x4]
10004419:	ret    
1000441a:	lea    eax,[ecx+0x4]
1000441d:	ret    
1000441e:	int3   
1000441f:	int3   
10004420:	push   ebp
10004421:	mov    ebp,esp
10004423:	and    esp,0xfffffff8
10004426:	push   0xffffffff
10004428:	push   0x1002db00
1000442d:	mov    eax,fs:0x0
10004433:	push   eax
10004434:	sub    esp,0x60
10004437:	push   ebx
10004438:	push   esi
10004439:	push   edi
1000443a:	mov    eax,ds:0x100c7654
1000443f:	xor    eax,esp
10004441:	push   eax
10004442:	lea    eax,[esp+0x70]
10004446:	mov    fs:0x0,eax
1000444c:	mov    edi,ecx
1000444e:	mov    ebx,DWORD PTR [ebp+0x8]
10004451:	push   ebx
10004452:	call   0x10005cb0
10004457:	test   edi,edi
10004459:	mov    esi,eax
1000445b:	jne    0x10004462
1000445d:	call   0x10018de3
10004462:	mov    eax,DWORD PTR [edi+0x4]
10004465:	cmp    esi,eax
10004467:	je     0x10004491
10004469:	cmp    DWORD PTR [esi+0x24],0x8
1000446d:	mov    ecx,DWORD PTR [esi+0x20]
10004470:	jb     0x10004477
10004472:	mov    eax,DWORD PTR [esi+0x10]
10004475:	jmp    0x1000447a
10004477:	lea    eax,[esi+0x10]
1000447a:	push   ecx
1000447b:	push   eax
1000447c:	mov    eax,DWORD PTR [ebx+0x14]
1000447f:	push   eax
10004480:	push   0x0
10004482:	mov    ecx,ebx
10004484:	call   0x10006df0
10004489:	test   eax,eax
1000448b:	jge    0x10004549
10004491:	xor    eax,eax
10004493:	mov    DWORD PTR [esp+0x30],0x7
1000449b:	mov    DWORD PTR [esp+0x2c],eax
1000449f:	mov    WORD PTR [esp+0x1c],ax
100044a4:	lea    ecx,[esp+0x18]
100044a8:	push   ecx
100044a9:	push   ebx
100044aa:	lea    ecx,[esp+0x3c]
100044ae:	mov    DWORD PTR [esp+0x80],eax
100044b5:	call   0x10005270
100044ba:	push   eax
100044bb:	push   esi
100044bc:	push   edi
100044bd:	lea    edx,[esp+0x1c]
100044c1:	push   edx
100044c2:	mov    ecx,edi
100044c4:	mov    BYTE PTR [esp+0x88],0x1
100044cc:	call   0x10005020
100044d1:	cmp    DWORD PTR [esp+0x68],0x8
100044d6:	mov    edi,DWORD PTR [eax]
100044d8:	mov    esi,DWORD PTR [eax+0x4]
100044db:	jb     0x100044ea
100044dd:	mov    eax,DWORD PTR [esp+0x54]
100044e1:	push   eax
100044e2:	call   0x1001876e
100044e7:	add    esp,0x4
100044ea:	xor    ebx,ebx
100044ec:	cmp    DWORD PTR [esp+0x4c],0x8
100044f1:	mov    DWORD PTR [esp+0x68],0x7
100044f9:	mov    DWORD PTR [esp+0x64],ebx
100044fd:	mov    WORD PTR [esp+0x54],bx
10004502:	jb     0x10004511
10004504:	mov    ecx,DWORD PTR [esp+0x38]
10004508:	push   ecx
10004509:	call   0x1001876e
1000450e:	add    esp,0x4
10004511:	cmp    DWORD PTR [esp+0x30],0x8
10004516:	mov    DWORD PTR [esp+0x4c],0x7
1000451e:	mov    DWORD PTR [esp+0x48],ebx
10004522:	mov    WORD PTR [esp+0x38],bx
10004527:	jb     0x10004536
10004529:	mov    edx,DWORD PTR [esp+0x1c]
1000452d:	push   edx
1000452e:	call   0x1001876e
10004533:	add    esp,0x4
10004536:	mov    DWORD PTR [esp+0x30],0x7
1000453e:	mov    DWORD PTR [esp+0x2c],ebx
10004542:	mov    WORD PTR [esp+0x1c],bx
10004547:	jmp    0x1000454b
10004549:	xor    ebx,ebx
1000454b:	cmp    edi,ebx
1000454d:	jne    0x10004554
1000454f:	call   0x10018de3
10004554:	cmp    esi,DWORD PTR [edi+0x4]
10004557:	jne    0x1000455e
10004559:	call   0x10018de3
1000455e:	lea    eax,[esi+0x28]
10004561:	mov    ecx,DWORD PTR [esp+0x70]
10004565:	mov    DWORD PTR fs:0x0,ecx
1000456c:	pop    ecx
1000456d:	pop    edi
1000456e:	pop    esi
1000456f:	pop    ebx
10004570:	mov    esp,ebp
10004572:	pop    ebp
10004573:	ret    0x4
10004576:	int3   
10004577:	int3   
10004578:	int3   
10004579:	int3   
1000457a:	int3   
1000457b:	int3   
1000457c:	int3   
1000457d:	int3   
1000457e:	int3   
1000457f:	int3   
10004580:	sub    esp,0x18
10004583:	push   ebx
10004584:	mov    ebx,DWORD PTR [esp+0x24]
10004588:	push   esi
10004589:	push   edi
1000458a:	push   ebx
1000458b:	mov    esi,ecx
1000458d:	call   0x10005cb0
10004592:	test   esi,esi
10004594:	mov    edi,eax
10004596:	mov    DWORD PTR [esp+0x14],edi
1000459a:	jne    0x100045a1
1000459c:	call   0x10018de3
100045a1:	cmp    edi,DWORD PTR [esi+0x4]
100045a4:	mov    DWORD PTR [esp+0x10],esi
100045a8:	je     0x100045d4
100045aa:	cmp    DWORD PTR [edi+0x24],0x8
100045ae:	mov    eax,DWORD PTR [edi+0x20]
100045b1:	jb     0x100045b8
100045b3:	mov    edi,DWORD PTR [edi+0x10]
100045b6:	jmp    0x100045bb
100045b8:	add    edi,0x10
100045bb:	push   eax
100045bc:	mov    eax,DWORD PTR [ebx+0x14]
100045bf:	push   edi
100045c0:	push   eax
100045c1:	push   0x0
100045c3:	mov    ecx,ebx
100045c5:	call   0x10006df0
100045ca:	test   eax,eax
100045cc:	jl     0x100045d4
100045ce:	lea    ecx,[esp+0x10]
100045d2:	jmp    0x100045e3
100045d4:	mov    ecx,DWORD PTR [esi+0x4]
100045d7:	mov    DWORD PTR [esp+0x1c],ecx
100045db:	mov    DWORD PTR [esp+0x18],esi
100045df:	lea    ecx,[esp+0x18]
100045e3:	mov    edx,DWORD PTR [ecx]
100045e5:	mov    eax,DWORD PTR [esp+0x28]
100045e9:	mov    ecx,DWORD PTR [ecx+0x4]
100045ec:	pop    edi
100045ed:	pop    esi
100045ee:	mov    DWORD PTR [eax],edx
100045f0:	mov    DWORD PTR [eax+0x4],ecx
100045f3:	pop    ebx
100045f4:	add    esp,0x18
100045f7:	ret    0x8
100045fa:	int3   
100045fb:	int3   
100045fc:	int3   
100045fd:	int3   
100045fe:	int3   
100045ff:	int3   
10004600:	push   esi
10004601:	mov    esi,ecx
10004603:	mov    eax,DWORD PTR [esi]
10004605:	test   eax,eax
10004607:	push   edi
10004608:	mov    edi,DWORD PTR [esp+0xc]
1000460c:	je     0x10004612
1000460e:	cmp    eax,DWORD PTR [edi]
10004610:	je     0x10004617
10004612:	call   0x10018de3
10004617:	mov    eax,DWORD PTR [esi+0x4]
1000461a:	xor    ecx,ecx
1000461c:	cmp    eax,DWORD PTR [edi+0x4]
1000461f:	pop    edi
10004620:	sete   cl
10004623:	mov    al,cl
10004625:	pop    esi
10004626:	ret    0x4
10004629:	int3   
1000462a:	int3   
1000462b:	int3   
1000462c:	int3   
1000462d:	int3   
1000462e:	int3   
1000462f:	int3   
10004630:	mov    eax,DWORD PTR [esp+0x4]
10004634:	push   esi
10004635:	push   eax
10004636:	mov    esi,ecx
10004638:	call   0x100016b0
1000463d:	mov    DWORD PTR [esi],0x1002f4f8
10004643:	mov    eax,esi
10004645:	pop    esi
10004646:	ret    0x4
10004649:	int3   
1000464a:	int3   
1000464b:	int3   
1000464c:	int3   
1000464d:	int3   
1000464e:	int3   
1000464f:	int3   
10004650:	push   ebx
10004651:	push   esi
10004652:	mov    esi,ecx
10004654:	cmp    DWORD PTR [esi+0x34],0x10
10004658:	jb     0x10004666
1000465a:	mov    eax,DWORD PTR [esi+0x20]
1000465d:	push   eax
1000465e:	call   0x1001876e
10004663:	add    esp,0x4
10004666:	xor    ebx,ebx
10004668:	mov    DWORD PTR [esi+0x34],0xf
1000466f:	mov    DWORD PTR [esi+0x30],ebx
10004672:	mov    BYTE PTR [esi+0x20],bl
10004675:	cmp    DWORD PTR [esi+0x18],0x10
10004679:	jb     0x10004687
1000467b:	mov    ecx,DWORD PTR [esi+0x4]
1000467e:	push   ecx
1000467f:	call   0x1001876e
10004684:	add    esp,0x4
10004687:	mov    DWORD PTR [esi+0x14],ebx
1000468a:	mov    DWORD PTR [esi+0x18],0xf
10004691:	mov    BYTE PTR [esi+0x4],bl
10004694:	pop    esi
10004695:	pop    ebx
10004696:	ret    
10004697:	int3   
10004698:	int3   
10004699:	int3   
1000469a:	int3   
1000469b:	int3   
1000469c:	int3   
1000469d:	int3   
1000469e:	int3   
1000469f:	int3   
100046a0:	push   esi
100046a1:	mov    esi,ecx
100046a3:	cmp    DWORD PTR [esi+0x34],0x8
100046a7:	push   edi
100046a8:	jb     0x100046b6
100046aa:	mov    eax,DWORD PTR [esi+0x20]
100046ad:	push   eax
100046ae:	call   0x1001876e
100046b3:	add    esp,0x4
100046b6:	xor    edi,edi
100046b8:	mov    DWORD PTR [esi+0x34],0x7
100046bf:	mov    DWORD PTR [esi+0x30],edi
100046c2:	mov    WORD PTR [esi+0x20],di
100046c6:	cmp    DWORD PTR [esi+0x18],0x8
100046ca:	jb     0x100046d8
100046cc:	mov    ecx,DWORD PTR [esi+0x4]
100046cf:	push   ecx
100046d0:	call   0x1001876e
100046d5:	add    esp,0x4
100046d8:	mov    DWORD PTR [esi+0x14],edi
100046db:	mov    DWORD PTR [esi+0x18],0x7
100046e2:	mov    WORD PTR [esi+0x4],di
100046e6:	pop    edi
100046e7:	pop    esi
100046e8:	ret    
100046e9:	int3   
100046ea:	int3   
100046eb:	int3   
100046ec:	int3   
100046ed:	int3   
100046ee:	int3   
100046ef:	int3   
100046f0:	push   ebx
100046f1:	mov    ebx,DWORD PTR [esp+0x8]
100046f5:	push   esi
100046f6:	mov    esi,ecx
100046f8:	cmp    DWORD PTR [esi+0x14],ebx
100046fb:	push   edi
100046fc:	jae    0x10004703
100046fe:	call   0x1001864e
10004703:	mov    eax,DWORD PTR [esi+0x14]
10004706:	mov    edi,DWORD PTR [esp+0x14]
1000470a:	sub    eax,ebx
1000470c:	cmp    eax,edi
1000470e:	jae    0x10004712
10004710:	mov    edi,eax
10004712:	test   edi,edi
10004714:	jbe    0x1000476b
10004716:	mov    ecx,DWORD PTR [esi+0x18]
10004719:	cmp    ecx,0x10
1000471c:	push   ebp
1000471d:	lea    ebp,[esi+0x4]
10004720:	jb     0x1000472b
10004722:	mov    edx,DWORD PTR [ebp+0x0]
10004725:	mov    DWORD PTR [esp+0x14],edx
10004729:	jmp    0x1000472f
1000472b:	mov    DWORD PTR [esp+0x14],ebp
1000472f:	cmp    ecx,0x10
10004732:	jb     0x10004739
10004734:	mov    edx,DWORD PTR [ebp+0x0]
10004737:	jmp    0x1000473b
10004739:	mov    edx,ebp
1000473b:	sub    eax,edi
1000473d:	push   eax
1000473e:	mov    eax,DWORD PTR [esp+0x18]
10004742:	add    eax,ebx
10004744:	add    eax,edi
10004746:	push   eax
10004747:	sub    ecx,ebx
10004749:	push   ecx
1000474a:	add    edx,ebx
1000474c:	push   edx
1000474d:	call   0x1001911e
10004752:	mov    eax,DWORD PTR [esi+0x14]
10004755:	sub    eax,edi
10004757:	add    esp,0x10
1000475a:	cmp    DWORD PTR [esi+0x18],0x10
1000475e:	mov    DWORD PTR [esi+0x14],eax
10004761:	jb     0x10004766
10004763:	mov    ebp,DWORD PTR [ebp+0x0]
10004766:	mov    BYTE PTR [eax+ebp*1],0x0
1000476a:	pop    ebp
1000476b:	pop    edi
1000476c:	mov    eax,esi
1000476e:	pop    esi
1000476f:	pop    ebx
10004770:	ret    0x8
10004773:	int3   
10004774:	int3   
10004775:	int3   
10004776:	int3   
10004777:	int3   
10004778:	int3   
10004779:	int3   
1000477a:	int3   
1000477b:	int3   
1000477c:	int3   
1000477d:	int3   
1000477e:	int3   
1000477f:	int3   
10004780:	push   ebp
10004781:	mov    ebp,esp
10004783:	push   0xffffffff
10004785:	push   0x1002d540
1000478a:	mov    eax,fs:0x0
10004790:	push   eax
10004791:	sub    esp,0x1c
10004794:	push   ebx
10004795:	push   esi
10004796:	push   edi
10004797:	mov    eax,ds:0x100c7654
1000479c:	xor    eax,ebp
1000479e:	push   eax
1000479f:	lea    eax,[ebp-0xc]
100047a2:	mov    fs:0x0,eax
100047a8:	mov    DWORD PTR [ebp-0x10],esp
100047ab:	mov    edi,ecx
100047ad:	mov    DWORD PTR [ebp-0x14],edi
100047b0:	mov    eax,DWORD PTR [ebp+0x8]
100047b3:	mov    esi,eax
100047b5:	or     esi,0xf
100047b8:	cmp    esi,0xfffffffe
100047bb:	jbe    0x100047c1
100047bd:	mov    esi,eax
100047bf:	jmp    0x100047e3
100047c1:	mov    ebx,DWORD PTR [edi+0x18]
100047c4:	mov    eax,0xaaaaaaab
100047c9:	mul    esi
100047cb:	mov    ecx,ebx
100047cd:	shr    ecx,1
100047cf:	shr    edx,1
100047d1:	cmp    edx,ecx
100047d3:	jae    0x100047e3
100047d5:	mov    eax,0xfffffffe
100047da:	sub    eax,ecx
100047dc:	cmp    ebx,eax
100047de:	ja     0x100047e3
100047e0:	lea    esi,[ecx+ebx*1]
100047e3:	xor    ebx,ebx
100047e5:	lea    ecx,[esi+0x1]
100047e8:	cmp    ecx,ebx
100047ea:	mov    DWORD PTR [ebp-0x4],ebx
100047ed:	ja     0x100047ff
100047ef:	xor    ecx,ecx
100047f1:	push   ecx
100047f2:	call   0x100190b4
100047f7:	add    esp,0x4
100047fa:	mov    DWORD PTR [ebp+0x8],eax
100047fd:	jmp    0x10004857
100047ff:	or     eax,0xffffffff
10004802:	xor    edx,edx
10004804:	div    ecx
10004806:	cmp    eax,0x1
10004809:	jae    0x100047f1
1000480b:	lea    ecx,[ebp-0x18]
1000480e:	push   ecx
1000480f:	lea    ecx,[ebp-0x28]
10004812:	mov    DWORD PTR [ebp-0x18],ebx
10004815:	call   0x10018f0e
1000481a:	push   0x100bba4c
1000481f:	lea    edx,[ebp-0x28]
10004822:	push   edx
10004823:	mov    DWORD PTR [ebp-0x28],0x1002f510
1000482a:	call   0x10018e6e
1000482f:	mov    eax,DWORD PTR [ebp+0x8]
10004832:	mov    ecx,DWORD PTR [ebp-0x14]
10004835:	mov    DWORD PTR [ebp-0x1c],eax
10004838:	add    eax,0x1
1000483b:	mov    DWORD PTR [ebp-0x10],esp
1000483e:	push   eax
1000483f:	mov    BYTE PTR [ebp-0x4],0x2
10004843:	call   0x10003bb0
10004848:	mov    DWORD PTR [ebp+0x8],eax
1000484b:	mov    eax,0x10004851
10004850:	ret    
10004851:	mov    edi,DWORD PTR [ebp-0x14]
10004854:	mov    esi,DWORD PTR [ebp-0x1c]
10004857:	mov    ebx,DWORD PTR [ebp+0xc]
1000485a:	test   ebx,ebx
1000485c:	jbe    0x1000487e
1000485e:	cmp    DWORD PTR [edi+0x18],0x10
10004862:	jb     0x10004869
10004864:	mov    eax,DWORD PTR [edi+0x4]
10004867:	jmp    0x1000486c
10004869:	lea    eax,[edi+0x4]
1000486c:	mov    ecx,DWORD PTR [ebp+0x8]
1000486f:	push   ebx
10004870:	push   eax
10004871:	lea    eax,[esi+0x1]
10004874:	push   eax
10004875:	push   ecx
10004876:	call   0x10018df3
1000487b:	add    esp,0x10
1000487e:	cmp    DWORD PTR [edi+0x18],0x10
10004882:	jb     0x10004890
10004884:	mov    edx,DWORD PTR [edi+0x4]
10004887:	push   edx
10004888:	call   0x1001876e
1000488d:	add    esp,0x4
10004890:	cmp    esi,0x10
10004893:	mov    ecx,DWORD PTR [ebp+0x8]
10004896:	lea    eax,[edi+0x4]
10004899:	mov    BYTE PTR [eax],0x0
1000489c:	mov    DWORD PTR [eax],ecx
1000489e:	mov    DWORD PTR [edi+0x18],esi
100048a1:	mov    DWORD PTR [edi+0x14],ebx
100048a4:	jb     0x100048a8
100048a6:	mov    eax,ecx
100048a8:	mov    BYTE PTR [eax+ebx*1],0x0
100048ac:	mov    ecx,DWORD PTR [ebp-0xc]
100048af:	mov    DWORD PTR fs:0x0,ecx
100048b6:	pop    ecx
100048b7:	pop    edi
100048b8:	pop    esi
100048b9:	pop    ebx
100048ba:	mov    esp,ebp
100048bc:	pop    ebp
100048bd:	ret    0x8
100048c0:	mov    esi,DWORD PTR [ebp-0x14]
100048c3:	cmp    DWORD PTR [esi+0x18],0x10
100048c7:	jb     0x100048d5
100048c9:	mov    eax,DWORD PTR [esi+0x4]
100048cc:	push   eax
100048cd:	call   0x1001876e
100048d2:	add    esp,0x4
100048d5:	push   0x0
100048d7:	mov    DWORD PTR [esi+0x18],0xf
100048de:	mov    DWORD PTR [esi+0x14],0x0
100048e5:	push   0x0
100048e7:	mov    BYTE PTR [esi+0x4],0x0
100048eb:	call   0x10018e6e
100048f0:	int3   
100048f1:	int3   
100048f2:	int3   
100048f3:	int3   
100048f4:	int3   
100048f5:	int3   
100048f6:	int3   
100048f7:	int3   
100048f8:	int3   
100048f9:	int3   
100048fa:	int3   
100048fb:	int3   
100048fc:	int3   
100048fd:	int3   
100048fe:	int3   
100048ff:	int3   
10004900:	push   edi
10004901:	mov    edi,ecx
10004903:	mov    ecx,DWORD PTR [esp+0x10]
10004907:	test   ecx,ecx
10004909:	jne    0x10004915
1000490b:	push   0x80004005
10004910:	call   0x10001090
10004915:	push   ebx
10004916:	mov    ebx,DWORD PTR [esp+0xc]
1000491a:	test   ebx,ebx
1000491c:	push   esi
1000491d:	mov    esi,DWORD PTR [esp+0x14]
10004921:	jne    0x10004931
10004923:	test   esi,esi
10004925:	je     0x10004931
10004927:	push   0x80070057
1000492c:	call   0x10001090
10004931:	mov    eax,DWORD PTR [ecx]
10004933:	mov    edx,DWORD PTR [eax]
10004935:	push   0x2
10004937:	push   esi
10004938:	call   edx
1000493a:	test   eax,eax
1000493c:	jne    0x10004943
1000493e:	call   0x10004a90
10004943:	add    eax,0x10
10004946:	test   esi,esi
10004948:	mov    DWORD PTR [edi],eax
1000494a:	jl     0x10004927
1000494c:	cmp    esi,DWORD PTR [eax-0x8]
1000494f:	jg     0x10004927
10004951:	mov    DWORD PTR [eax-0xc],esi
10004954:	mov    ecx,DWORD PTR [edi]
10004956:	lea    eax,[esi+esi*1]
10004959:	push   eax
1000495a:	push   ebx
1000495b:	mov    WORD PTR [eax+ecx*1],0x0
10004961:	mov    edx,DWORD PTR [edi]
10004963:	push   eax
10004964:	push   edx
10004965:	call   0x10018df3
1000496a:	add    esp,0x10
1000496d:	pop    esi
1000496e:	pop    ebx
1000496f:	mov    eax,edi
10004971:	pop    edi
10004972:	ret    0xc
10004975:	int3   
10004976:	int3   
10004977:	int3   
10004978:	int3   
10004979:	int3   
1000497a:	int3   
1000497b:	int3   
1000497c:	int3   
1000497d:	int3   
1000497e:	int3   
1000497f:	int3   
10004980:	push   esi
10004981:	mov    esi,ecx
10004983:	mov    ecx,DWORD PTR [esi]
10004985:	cmp    DWORD PTR [ecx-0xc],0x0
10004989:	lea    eax,[ecx-0x10]
1000498c:	push   edi
1000498d:	mov    edi,DWORD PTR [eax]
1000498f:	je     0x100049df
10004991:	cmp    DWORD PTR [eax+0xc],0x0
10004995:	lea    edx,[eax+0xc]
10004998:	jge    0x100049bb
1000499a:	cmp    DWORD PTR [ecx-0x8],0x0
1000499e:	jge    0x100049aa
100049a0:	push   0x80070057
100049a5:	call   0x10001090
100049aa:	mov    DWORD PTR [ecx-0xc],0x0
100049b1:	mov    eax,DWORD PTR [esi]
100049b3:	pop    edi
100049b4:	mov    WORD PTR [eax],0x0
100049b9:	pop    esi
100049ba:	ret    
100049bb:	or     ecx,0xffffffff
100049be:	lock xadd DWORD PTR [edx],ecx
100049c2:	dec    ecx
100049c3:	test   ecx,ecx
100049c5:	jg     0x100049d1
100049c7:	mov    ecx,DWORD PTR [eax]
100049c9:	mov    edx,DWORD PTR [ecx]
100049cb:	push   eax
100049cc:	mov    eax,DWORD PTR [edx+0x4]
100049cf:	call   eax
100049d1:	mov    edx,DWORD PTR [edi]
100049d3:	mov    eax,DWORD PTR [edx+0xc]
100049d6:	mov    ecx,edi
100049d8:	call   eax
100049da:	add    eax,0x10
100049dd:	mov    DWORD PTR [esi],eax
100049df:	pop    edi
100049e0:	pop    esi
100049e1:	ret    
100049e2:	int3   
100049e3:	int3   
100049e4:	int3   
100049e5:	int3   
100049e6:	int3   
100049e7:	int3   
100049e8:	int3   
100049e9:	int3   
100049ea:	int3   
100049eb:	int3   
100049ec:	int3   
100049ed:	int3   
100049ee:	int3   
100049ef:	int3   
100049f0:	push   ebx
100049f1:	mov    ebx,DWORD PTR [esp+0xc]
100049f5:	test   ebx,ebx
100049f7:	push   ebp
100049f8:	mov    ebp,ecx
100049fa:	jne    0x10004a06
100049fc:	call   0x10004980
10004a01:	pop    ebp
10004a02:	pop    ebx
10004a03:	ret    0x8
10004a06:	push   esi
10004a07:	mov    esi,DWORD PTR [esp+0x10]
10004a0b:	test   esi,esi
10004a0d:	jne    0x10004a19
10004a0f:	push   0x80070057
10004a14:	call   0x10001090
10004a19:	mov    eax,DWORD PTR [ebp+0x0]
10004a1c:	mov    edx,DWORD PTR [eax-0x8]
10004a1f:	mov    ecx,0x1
10004a24:	sub    ecx,DWORD PTR [eax-0x4]
10004a27:	sub    esi,eax
10004a29:	sub    edx,ebx
10004a2b:	sar    esi,1
10004a2d:	or     ecx,edx
10004a2f:	push   edi
10004a30:	mov    edi,DWORD PTR [eax-0xc]
10004a33:	jge    0x10004a3d
10004a35:	push   ebx
10004a36:	mov    ecx,ebp
10004a38:	call   0x10004aa0
10004a3d:	mov    eax,DWORD PTR [ebp+0x0]
10004a40:	cmp    esi,edi
10004a42:	lea    edi,[ebx+ebx*1]
10004a45:	push   edi
10004a46:	ja     0x10004a55
10004a48:	lea    ecx,[eax+esi*2]
10004a4b:	push   ecx
10004a4c:	push   edi
10004a4d:	push   eax
10004a4e:	call   0x1001911e
10004a53:	jmp    0x10004a61
10004a55:	mov    edx,DWORD PTR [esp+0x18]
10004a59:	push   edx
10004a5a:	push   edi
10004a5b:	push   eax
10004a5c:	call   0x10018df3
10004a61:	add    esp,0x10
10004a64:	test   ebx,ebx
10004a66:	jl     0x10004a83
10004a68:	mov    eax,DWORD PTR [ebp+0x0]
10004a6b:	cmp    ebx,DWORD PTR [eax-0x8]
10004a6e:	jg     0x10004a83
10004a70:	mov    DWORD PTR [eax-0xc],ebx
10004a73:	mov    eax,DWORD PTR [ebp+0x0]
10004a76:	mov    WORD PTR [edi+eax*1],0x0
10004a7c:	pop    edi
10004a7d:	pop    esi
10004a7e:	pop    ebp
10004a7f:	pop    ebx
10004a80:	ret    0x8
10004a83:	push   0x80070057
10004a88:	call   0x10001090
10004a8d:	int3   
10004a8e:	int3   
10004a8f:	int3   
10004a90:	push   0x8007000e
10004a95:	call   0x10001090
10004a9a:	int3   
10004a9b:	int3   
10004a9c:	int3   
10004a9d:	int3   
10004a9e:	int3   
10004a9f:	int3   
10004aa0:	mov    eax,DWORD PTR [ecx]
10004aa2:	mov    edx,DWORD PTR [esp+0x4]
10004aa6:	sub    eax,0x10
10004aa9:	push   esi
10004aaa:	mov    esi,DWORD PTR [eax+0x4]
10004aad:	cmp    esi,edx
10004aaf:	jle    0x10004ab3
10004ab1:	mov    edx,esi
10004ab3:	cmp    DWORD PTR [eax+0xc],0x1
10004ab7:	pop    esi
10004ab8:	jle    0x10004ac3
10004aba:	mov    DWORD PTR [esp+0x4],edx
10004abe:	jmp    0x10003e80
10004ac3:	mov    eax,DWORD PTR [eax+0x8]
10004ac6:	cmp    eax,edx
10004ac8:	jge    0x10004ae9
10004aca:	cmp    eax,0x400
10004acf:	jle    0x10004ad8
10004ad1:	add    eax,0x400
10004ad6:	jmp    0x10004ada
10004ad8:	add    eax,eax
10004ada:	cmp    eax,edx
10004adc:	jge    0x10004ae0
10004ade:	mov    eax,edx
10004ae0:	mov    DWORD PTR [esp+0x4],eax
10004ae4:	jmp    0x100053c0
10004ae9:	ret    0x4
10004aec:	int3   
10004aed:	int3   
10004aee:	int3   
10004aef:	int3   
10004af0:	push   esi
10004af1:	mov    esi,DWORD PTR [esp+0x8]
10004af5:	mov    ecx,DWORD PTR [esi]
10004af7:	mov    eax,DWORD PTR [ecx]
10004af9:	mov    edx,DWORD PTR [eax+0x10]
10004afc:	push   edi
10004afd:	call   edx
10004aff:	cmp    DWORD PTR [esi+0xc],0x0
10004b03:	lea    ecx,[esi+0xc]
10004b06:	jl     0x10004b1c
10004b08:	cmp    eax,DWORD PTR [esi]
10004b0a:	jne    0x10004b1c
10004b0c:	mov    edi,esi
10004b0e:	mov    eax,0x1
10004b13:	lock xadd DWORD PTR [ecx],eax
10004b17:	mov    eax,edi
10004b19:	pop    edi
10004b1a:	pop    esi
10004b1b:	ret    
10004b1c:	mov    ecx,DWORD PTR [esi+0x4]
10004b1f:	mov    edx,DWORD PTR [eax]
10004b21:	mov    edx,DWORD PTR [edx]
10004b23:	push   0x2
10004b25:	push   ecx
10004b26:	mov    ecx,eax
10004b28:	call   edx
10004b2a:	mov    edi,eax
10004b2c:	test   edi,edi
10004b2e:	jne    0x10004b35
10004b30:	jmp    0x10004a90
10004b35:	mov    eax,DWORD PTR [esi+0x4]
10004b38:	mov    DWORD PTR [edi+0x4],eax
10004b3b:	mov    eax,DWORD PTR [esi+0x4]
10004b3e:	lea    eax,[eax+eax*1+0x2]
10004b42:	push   eax
10004b43:	add    esi,0x10
10004b46:	push   esi
10004b47:	push   eax
10004b48:	lea    ecx,[edi+0x10]
10004b4b:	push   ecx
10004b4c:	call   0x10018df3
10004b51:	add    esp,0x10
10004b54:	mov    eax,edi
10004b56:	pop    edi
10004b57:	pop    esi
10004b58:	ret    
10004b59:	int3   
10004b5a:	int3   
10004b5b:	int3   
10004b5c:	int3   
10004b5d:	int3   
10004b5e:	int3   
10004b5f:	int3   
10004b60:	push   ebp
10004b61:	mov    ebp,esp
10004b63:	and    esp,0xfffffff8
10004b66:	sub    esp,0x14
10004b69:	push   ebx
10004b6a:	push   esi
10004b6b:	mov    esi,ecx
10004b6d:	cmp    DWORD PTR [esi+0x8],0x0
10004b71:	push   edi
10004b72:	jne    0x10004b94
10004b74:	mov    eax,DWORD PTR [ebp+0x14]
10004b77:	mov    ecx,DWORD PTR [esi+0x4]
10004b7a:	mov    edi,DWORD PTR [ebp+0x8]
10004b7d:	push   eax
10004b7e:	push   ecx
10004b7f:	push   0x1
10004b81:	push   edi
10004b82:	mov    ecx,esi
10004b84:	call   0x10005590
10004b89:	mov    eax,edi
10004b8b:	pop    edi
10004b8c:	pop    esi
10004b8d:	pop    ebx
10004b8e:	mov    esp,ebp
10004b90:	pop    ebp
10004b91:	ret    0x10
10004b94:	mov    edx,DWORD PTR [esi+0x4]
10004b97:	mov    edi,DWORD PTR [ebp+0xc]
10004b9a:	test   edi,edi
10004b9c:	mov    eax,DWORD PTR [edx]
10004b9e:	mov    DWORD PTR [esp+0x18],eax
10004ba2:	je     0x10004ba8
10004ba4:	cmp    edi,esi
10004ba6:	je     0x10004bad
10004ba8:	call   0x10018de3
10004bad:	mov    ebx,DWORD PTR [ebp+0x10]
10004bb0:	cmp    ebx,DWORD PTR [esp+0x18]
10004bb4:	jne    0x10004be7
10004bb6:	mov    edi,DWORD PTR [ebp+0x14]
10004bb9:	lea    ecx,[ebx+0xc]
10004bbc:	push   ecx
10004bbd:	push   edi
10004bbe:	mov    ecx,esi
10004bc0:	call   0x10004d70
10004bc5:	test   al,al
10004bc7:	je     0x10004d43
10004bcd:	push   edi
10004bce:	mov    edi,DWORD PTR [ebp+0x8]
10004bd1:	push   ebx
10004bd2:	push   0x1
10004bd4:	push   edi
10004bd5:	mov    ecx,esi
10004bd7:	call   0x10005590
10004bdc:	mov    eax,edi
10004bde:	pop    edi
10004bdf:	pop    esi
10004be0:	pop    ebx
10004be1:	mov    esp,ebp
10004be3:	pop    ebp
10004be4:	ret    0x10
10004be7:	test   edi,edi
10004be9:	mov    edx,DWORD PTR [esi+0x4]
10004bec:	mov    DWORD PTR [esp+0x18],edx
10004bf0:	je     0x10004bf6
10004bf2:	cmp    edi,esi
10004bf4:	je     0x10004bfb
10004bf6:	call   0x10018de3
10004bfb:	cmp    ebx,DWORD PTR [esp+0x18]
10004bff:	mov    edi,DWORD PTR [ebp+0x14]
10004c02:	mov    ecx,esi
10004c04:	jne    0x10004c3e
10004c06:	mov    eax,DWORD PTR [esi+0x4]
10004c09:	mov    eax,DWORD PTR [eax+0x8]
10004c0c:	add    eax,0xc
10004c0f:	push   edi
10004c10:	push   eax
10004c11:	call   0x10004d70
10004c16:	test   al,al
10004c18:	je     0x10004d43
10004c1e:	mov    ecx,DWORD PTR [esi+0x4]
10004c21:	mov    edx,DWORD PTR [ecx+0x8]
10004c24:	push   edi
10004c25:	mov    edi,DWORD PTR [ebp+0x8]
10004c28:	push   edx
10004c29:	push   0x0
10004c2b:	push   edi
10004c2c:	mov    ecx,esi
10004c2e:	call   0x10005590
10004c33:	mov    eax,edi
10004c35:	pop    edi
10004c36:	pop    esi
10004c37:	pop    ebx
10004c38:	mov    esp,ebp
10004c3a:	pop    ebp
10004c3b:	ret    0x10
10004c3e:	lea    eax,[ebx+0xc]
10004c41:	push   eax
10004c42:	push   edi
10004c43:	call   0x10004d70
10004c48:	test   al,al
10004c4a:	je     0x10004caf
10004c4c:	mov    eax,DWORD PTR [ebp+0xc]
10004c4f:	lea    ecx,[esp+0xc]
10004c53:	mov    DWORD PTR [esp+0xc],eax
10004c57:	mov    DWORD PTR [esp+0x10],ebx
10004c5b:	call   0x10006610
10004c60:	mov    ecx,DWORD PTR [esp+0x10]
10004c64:	add    ecx,0xc
10004c67:	push   edi
10004c68:	push   ecx
10004c69:	mov    ecx,esi
10004c6b:	call   0x10004d70
10004c70:	test   al,al
10004c72:	je     0x10004caf
10004c74:	mov    eax,DWORD PTR [esp+0x10]
10004c78:	mov    edx,DWORD PTR [eax+0x8]
10004c7b:	cmp    BYTE PTR [edx+0x45],0x0
10004c7f:	push   edi
10004c80:	mov    edi,DWORD PTR [ebp+0x8]
10004c83:	mov    ecx,esi
10004c85:	je     0x10004c9b
10004c87:	push   eax
10004c88:	push   0x0
10004c8a:	push   edi
10004c8b:	call   0x10005590
10004c90:	mov    eax,edi
10004c92:	pop    edi
10004c93:	pop    esi
10004c94:	pop    ebx
10004c95:	mov    esp,ebp
10004c97:	pop    ebp
10004c98:	ret    0x10
10004c9b:	push   ebx
10004c9c:	push   0x1
10004c9e:	push   edi
10004c9f:	call   0x10005590
10004ca4:	mov    eax,edi
10004ca6:	pop    edi
10004ca7:	pop    esi
10004ca8:	pop    ebx
10004ca9:	mov    esp,ebp
10004cab:	pop    ebp
10004cac:	ret    0x10
10004caf:	push   edi
10004cb0:	lea    eax,[ebx+0xc]
10004cb3:	push   eax
10004cb4:	mov    ecx,esi
10004cb6:	call   0x10004d70
10004cbb:	test   al,al
10004cbd:	je     0x10004d43
10004cc3:	mov    ecx,DWORD PTR [esi+0x4]
10004cc6:	mov    eax,DWORD PTR [ebp+0xc]
10004cc9:	mov    DWORD PTR [esp+0x18],ecx
10004ccd:	lea    ecx,[esp+0xc]
10004cd1:	mov    DWORD PTR [esp+0xc],eax
10004cd5:	mov    DWORD PTR [esp+0x10],ebx
10004cd9:	mov    DWORD PTR [esp+0x14],esi
10004cdd:	call   0x100066a0
10004ce2:	lea    edx,[esp+0x14]
10004ce6:	push   edx
10004ce7:	lea    ecx,[esp+0x10]
10004ceb:	call   0x10004600
10004cf0:	test   al,al
10004cf2:	jne    0x10004d08
10004cf4:	mov    eax,DWORD PTR [esp+0x10]
10004cf8:	add    eax,0xc
10004cfb:	push   eax
10004cfc:	push   edi
10004cfd:	mov    ecx,esi
10004cff:	call   0x10004d70
10004d04:	test   al,al
10004d06:	je     0x10004d43
10004d08:	mov    ecx,DWORD PTR [ebx+0x8]
10004d0b:	cmp    BYTE PTR [ecx+0x45],0x0
10004d0f:	push   edi
10004d10:	mov    edi,DWORD PTR [ebp+0x8]
10004d13:	mov    ecx,esi
10004d15:	je     0x10004d2b
10004d17:	push   ebx
10004d18:	push   0x0
10004d1a:	push   edi
10004d1b:	call   0x10005590
10004d20:	mov    eax,edi
10004d22:	pop    edi
10004d23:	pop    esi
10004d24:	pop    ebx
10004d25:	mov    esp,ebp
10004d27:	pop    ebp
10004d28:	ret    0x10
10004d2b:	mov    edx,DWORD PTR [esp+0x14]
10004d2f:	push   edx
10004d30:	push   0x1
10004d32:	push   edi
10004d33:	call   0x10005590
10004d38:	mov    eax,edi
10004d3a:	pop    edi
10004d3b:	pop    esi
10004d3c:	pop    ebx
10004d3d:	mov    esp,ebp
10004d3f:	pop    ebp
10004d40:	ret    0x10
10004d43:	push   edi
10004d44:	lea    eax,[esp+0x18]
10004d48:	push   eax
10004d49:	mov    ecx,esi
10004d4b:	call   0x10005400
10004d50:	mov    edx,DWORD PTR [eax]
10004d52:	mov    ecx,DWORD PTR [ebp+0x8]
10004d55:	pop    edi
10004d56:	mov    DWORD PTR [ecx],edx
10004d58:	mov    eax,DWORD PTR [eax+0x4]
10004d5b:	pop    esi
10004d5c:	mov    DWORD PTR [ecx+0x4],eax
10004d5f:	mov    eax,ecx
10004d61:	pop    ebx
10004d62:	mov    esp,ebp
10004d64:	pop    ebp
10004d65:	ret    0x10
10004d68:	int3   
10004d69:	int3   
10004d6a:	int3   
10004d6b:	int3   
10004d6c:	int3   
10004d6d:	int3   
10004d6e:	int3   
10004d6f:	int3   
10004d70:	mov    eax,DWORD PTR [esp+0x8]
10004d74:	cmp    DWORD PTR [eax+0x18],0x10
10004d78:	mov    ecx,DWORD PTR [eax+0x14]
10004d7b:	jb     0x10004d82
10004d7d:	mov    eax,DWORD PTR [eax+0x4]
10004d80:	jmp    0x10004d85
10004d82:	add    eax,0x4
10004d85:	push   ecx
10004d86:	mov    ecx,DWORD PTR [esp+0x8]
10004d8a:	push   eax
10004d8b:	mov    eax,DWORD PTR [ecx+0x14]
10004d8e:	push   eax
10004d8f:	push   0x0
10004d91:	call   0x10003b40
10004d96:	xor    ecx,ecx
10004d98:	test   eax,eax
10004d9a:	setl   cl
10004d9d:	mov    al,cl
10004d9f:	ret    0x8
10004da2:	int3   
10004da3:	int3   
10004da4:	int3   
10004da5:	int3   
10004da6:	int3   
10004da7:	int3   
10004da8:	int3   
10004da9:	int3   
10004daa:	int3   
10004dab:	int3   
10004dac:	int3   
10004dad:	int3   
10004dae:	int3   
10004daf:	int3   
10004db0:	push   0xffffffff
10004db2:	push   0x1002d778
10004db7:	mov    eax,fs:0x0
10004dbd:	push   eax
10004dbe:	push   ecx
10004dbf:	push   ebx
10004dc0:	push   esi
10004dc1:	mov    eax,ds:0x100c7654
10004dc6:	xor    eax,esp
10004dc8:	push   eax
10004dc9:	lea    eax,[esp+0x10]
10004dcd:	mov    fs:0x0,eax
10004dd3:	mov    esi,ecx
10004dd5:	mov    DWORD PTR [esp+0xc],esi
10004dd9:	mov    eax,DWORD PTR [esp+0x20]
10004ddd:	xor    ebx,ebx
10004ddf:	push   0xffffffff
10004de1:	push   ebx
10004de2:	mov    DWORD PTR [esi+0x18],0xf
10004de9:	mov    DWORD PTR [esi+0x14],ebx
10004dec:	push   eax
10004ded:	mov    BYTE PTR [esi+0x4],bl
10004df0:	call   0x10003990
10004df5:	mov    edx,DWORD PTR [esp+0x24]
10004df9:	push   0xffffffff
10004dfb:	lea    ecx,[esi+0x1c]
10004dfe:	mov    DWORD PTR [esp+0x1c],ebx
10004e02:	push   ebx
10004e03:	mov    DWORD PTR [ecx+0x18],0xf
10004e0a:	mov    DWORD PTR [ecx+0x14],ebx
10004e0d:	push   edx
10004e0e:	mov    BYTE PTR [ecx+0x4],bl
10004e11:	call   0x10003990
10004e16:	mov    eax,esi
10004e18:	mov    ecx,DWORD PTR [esp+0x10]
10004e1c:	mov    DWORD PTR fs:0x0,ecx
10004e23:	pop    ecx
10004e24:	pop    esi
10004e25:	pop    ebx
10004e26:	add    esp,0x10
10004e29:	ret    0x8
10004e2c:	int3   
10004e2d:	int3   
10004e2e:	int3   
10004e2f:	int3   
10004e30:	mov    eax,ecx
10004e32:	xor    ecx,ecx
10004e34:	mov    DWORD PTR [eax+0x18],0x7
10004e3b:	mov    DWORD PTR [eax+0x14],ecx
10004e3e:	mov    WORD PTR [eax+0x4],cx
10004e42:	ret    
10004e43:	int3   
10004e44:	int3   
10004e45:	int3   
10004e46:	int3   
10004e47:	int3   
10004e48:	int3   
10004e49:	int3   
10004e4a:	int3   
10004e4b:	int3   
10004e4c:	int3   
10004e4d:	int3   
10004e4e:	int3   
10004e4f:	int3   
10004e50:	push   ebx
10004e51:	mov    ebx,DWORD PTR [esp+0xc]
10004e55:	push   ebp
10004e56:	mov    ebp,DWORD PTR [esp+0xc]
10004e5a:	cmp    DWORD PTR [ebp+0x14],ebx
10004e5d:	push   esi
10004e5e:	push   edi
10004e5f:	mov    esi,ecx
10004e61:	jae    0x10004e68
10004e63:	call   0x1001864e
10004e68:	mov    edi,DWORD PTR [ebp+0x14]
10004e6b:	mov    eax,DWORD PTR [esp+0x1c]
10004e6f:	sub    edi,ebx
10004e71:	cmp    eax,edi
10004e73:	jae    0x10004e77
10004e75:	mov    edi,eax
10004e77:	cmp    esi,ebp
10004e79:	jne    0x10004e9a
10004e7b:	push   0xffffffff
10004e7d:	add    edi,ebx
10004e7f:	push   edi
10004e80:	mov    ecx,esi
10004e82:	call   0x100058b0
10004e87:	push   ebx
10004e88:	push   0x0
10004e8a:	mov    ecx,esi
10004e8c:	call   0x100058b0
10004e91:	pop    edi
10004e92:	mov    eax,esi
10004e94:	pop    esi
10004e95:	pop    ebp
10004e96:	pop    ebx
10004e97:	ret    0xc
10004e9a:	cmp    edi,0x7ffffffe
10004ea0:	jbe    0x10004ea7
10004ea2:	call   0x1001860f
10004ea7:	mov    eax,DWORD PTR [esi+0x18]
10004eaa:	cmp    eax,edi
10004eac:	jae    0x10004ec9
10004eae:	mov    eax,DWORD PTR [esi+0x14]
10004eb1:	push   eax
10004eb2:	push   edi
10004eb3:	mov    ecx,esi
10004eb5:	call   0x10005f00
10004eba:	test   edi,edi
10004ebc:	jbe    0x10004f36
10004ebe:	cmp    DWORD PTR [ebp+0x18],0x8
10004ec2:	jb     0x10004ef5
10004ec4:	mov    ecx,DWORD PTR [ebp+0x4]
10004ec7:	jmp    0x10004ef8
10004ec9:	test   edi,edi
10004ecb:	jne    0x10004ebc
10004ecd:	cmp    eax,0x8
10004ed0:	mov    DWORD PTR [esi+0x14],edi
10004ed3:	jb     0x10004ee4
10004ed5:	mov    eax,DWORD PTR [esi+0x4]
10004ed8:	mov    WORD PTR [eax],di
10004edb:	pop    edi
10004edc:	mov    eax,esi
10004ede:	pop    esi
10004edf:	pop    ebp
10004ee0:	pop    ebx
10004ee1:	ret    0xc
10004ee4:	lea    eax,[esi+0x4]
10004ee7:	pop    edi
10004ee8:	mov    WORD PTR [eax],0x0
10004eed:	mov    eax,esi
10004eef:	pop    esi
10004ef0:	pop    ebp
10004ef1:	pop    ebx
10004ef2:	ret    0xc
10004ef5:	lea    ecx,[ebp+0x4]
10004ef8:	cmp    DWORD PTR [esi+0x18],0x8
10004efc:	lea    ebp,[esi+0x4]
10004eff:	jb     0x10004f06
10004f01:	mov    eax,DWORD PTR [ebp+0x0]
10004f04:	jmp    0x10004f08
10004f06:	mov    eax,ebp
10004f08:	mov    edx,DWORD PTR [esp+0x18]
10004f0c:	lea    ecx,[ecx+edx*2]
10004f0f:	lea    ebx,[edi+edi*1]
10004f12:	push   ebx
10004f13:	push   ecx
10004f14:	mov    ecx,DWORD PTR [esi+0x18]
10004f17:	lea    edx,[ecx+ecx*1]
10004f1a:	push   edx
10004f1b:	push   eax
10004f1c:	call   0x10018df3
10004f21:	add    esp,0x10
10004f24:	cmp    DWORD PTR [esi+0x18],0x8
10004f28:	mov    DWORD PTR [esi+0x14],edi
10004f2b:	jb     0x10004f30
10004f2d:	mov    ebp,DWORD PTR [ebp+0x0]
10004f30:	mov    WORD PTR [ebx+ebp*1],0x0
10004f36:	pop    edi
10004f37:	mov    eax,esi
10004f39:	pop    esi
10004f3a:	pop    ebp
10004f3b:	pop    ebx
10004f3c:	ret    0xc
10004f3f:	int3   
10004f40:	push   ebp
10004f41:	push   esi
10004f42:	mov    esi,ecx
10004f44:	mov    edx,DWORD PTR [esi+0x18]
10004f47:	cmp    edx,0x8
10004f4a:	push   edi
10004f4b:	lea    ebp,[esi+0x4]
10004f4e:	jb     0x10004f55
10004f50:	mov    ecx,DWORD PTR [ebp+0x0]
10004f53:	jmp    0x10004f57
10004f55:	mov    ecx,ebp
10004f57:	mov    eax,DWORD PTR [esp+0x10]
10004f5b:	cmp    eax,ecx
10004f5d:	jb     0x10004f95
10004f5f:	cmp    edx,0x8
10004f62:	jb     0x10004f69
10004f64:	mov    ecx,DWORD PTR [ebp+0x0]
10004f67:	jmp    0x10004f6b
10004f69:	mov    ecx,ebp
10004f6b:	mov    edi,DWORD PTR [esi+0x14]
10004f6e:	lea    ecx,[ecx+edi*2]
10004f71:	cmp    ecx,eax
10004f73:	jbe    0x10004f95
10004f75:	cmp    edx,0x8
10004f78:	jb     0x10004f7d
10004f7a:	mov    ebp,DWORD PTR [ebp+0x0]
10004f7d:	mov    edx,DWORD PTR [esp+0x14]
10004f81:	sub    eax,ebp
10004f83:	push   edx
10004f84:	sar    eax,1
10004f86:	push   eax
10004f87:	push   esi
10004f88:	mov    ecx,esi
10004f8a:	call   0x10004e50
10004f8f:	pop    edi
10004f90:	pop    esi
10004f91:	pop    ebp
10004f92:	ret    0x8
10004f95:	mov    edi,DWORD PTR [esp+0x14]
10004f99:	cmp    edi,0x7ffffffe
10004f9f:	jbe    0x10004fa6
10004fa1:	call   0x1001860f
10004fa6:	mov    eax,DWORD PTR [esi+0x18]
10004fa9:	cmp    eax,edi
10004fab:	jae    0x10004fca
10004fad:	mov    eax,DWORD PTR [esi+0x14]
10004fb0:	push   eax
10004fb1:	push   edi
10004fb2:	mov    ecx,esi
10004fb4:	call   0x10005f00
10004fb9:	test   edi,edi
10004fbb:	jbe    0x10005012
10004fbd:	mov    ecx,DWORD PTR [esi+0x18]
10004fc0:	cmp    ecx,0x8
10004fc3:	jb     0x10004fe7
10004fc5:	mov    eax,DWORD PTR [ebp+0x0]
10004fc8:	jmp    0x10004fe9
10004fca:	test   edi,edi
10004fcc:	jne    0x10004fbb
10004fce:	cmp    eax,0x8
10004fd1:	mov    DWORD PTR [esi+0x14],edi
10004fd4:	jb     0x10004fd9
10004fd6:	mov    ebp,DWORD PTR [ebp+0x0]
10004fd9:	pop    edi
10004fda:	mov    eax,esi
10004fdc:	pop    esi
10004fdd:	mov    WORD PTR [ebp+0x0],0x0
10004fe3:	pop    ebp
10004fe4:	ret    0x8
10004fe7:	mov    eax,ebp
10004fe9:	mov    edx,DWORD PTR [esp+0x10]
10004fed:	push   ebx
10004fee:	lea    ebx,[edi+edi*1]
10004ff1:	push   ebx
10004ff2:	push   edx
10004ff3:	add    ecx,ecx
10004ff5:	push   ecx
10004ff6:	push   eax
10004ff7:	call   0x10018df3
10004ffc:	add    esp,0x10
10004fff:	cmp    DWORD PTR [esi+0x18],0x8
10005003:	mov    DWORD PTR [esi+0x14],edi
10005006:	jb     0x1000500b
10005008:	mov    ebp,DWORD PTR [ebp+0x0]
1000500b:	mov    WORD PTR [ebx+ebp*1],0x0
10005011:	pop    ebx
10005012:	pop    edi
10005013:	mov    eax,esi
10005015:	pop    esi
10005016:	pop    ebp
10005017:	ret    0x8
1000501a:	int3   
1000501b:	int3   
1000501c:	int3   
1000501d:	int3   
1000501e:	int3   
1000501f:	int3   
10005020:	push   ebp
10005021:	mov    ebp,esp
10005023:	and    esp,0xfffffff8
10005026:	sub    esp,0x14
10005029:	push   ebx
1000502a:	push   esi
1000502b:	mov    esi,ecx
1000502d:	cmp    DWORD PTR [esi+0x8],0x0
10005031:	push   edi
10005032:	jne    0x10005054
10005034:	mov    eax,DWORD PTR [ebp+0x14]
10005037:	mov    ecx,DWORD PTR [esi+0x4]
1000503a:	mov    edi,DWORD PTR [ebp+0x8]
1000503d:	push   eax
1000503e:	push   ecx
1000503f:	push   0x1
10005041:	push   edi
10005042:	mov    ecx,esi
10005044:	call   0x10005a60
10005049:	mov    eax,edi
1000504b:	pop    edi
1000504c:	pop    esi
1000504d:	pop    ebx
1000504e:	mov    esp,ebp
10005050:	pop    ebp
10005051:	ret    0x10
10005054:	mov    edx,DWORD PTR [esi+0x4]
10005057:	mov    edi,DWORD PTR [ebp+0xc]
1000505a:	test   edi,edi
1000505c:	mov    eax,DWORD PTR [edx]
1000505e:	mov    DWORD PTR [esp+0x18],eax
10005062:	je     0x10005068
10005064:	cmp    edi,esi
10005066:	je     0x1000506d
10005068:	call   0x10018de3
1000506d:	mov    ebx,DWORD PTR [ebp+0x10]
10005070:	cmp    ebx,DWORD PTR [esp+0x18]
10005074:	jne    0x100050a7
10005076:	mov    edi,DWORD PTR [ebp+0x14]
10005079:	lea    ecx,[ebx+0xc]
1000507c:	push   ecx
1000507d:	push   edi
1000507e:	mov    ecx,esi
10005080:	call   0x10005230
10005085:	test   al,al
10005087:	je     0x10005203
1000508d:	push   edi
1000508e:	mov    edi,DWORD PTR [ebp+0x8]
10005091:	push   ebx
10005092:	push   0x1
10005094:	push   edi
10005095:	mov    ecx,esi
10005097:	call   0x10005a60
1000509c:	mov    eax,edi
1000509e:	pop    edi
1000509f:	pop    esi
100050a0:	pop    ebx
100050a1:	mov    esp,ebp
100050a3:	pop    ebp
100050a4:	ret    0x10
100050a7:	test   edi,edi
100050a9:	mov    edx,DWORD PTR [esi+0x4]
100050ac:	mov    DWORD PTR [esp+0x18],edx
100050b0:	je     0x100050b6
100050b2:	cmp    edi,esi
100050b4:	je     0x100050bb
100050b6:	call   0x10018de3
100050bb:	cmp    ebx,DWORD PTR [esp+0x18]
100050bf:	mov    edi,DWORD PTR [ebp+0x14]
100050c2:	mov    ecx,esi
100050c4:	jne    0x100050fe
100050c6:	mov    eax,DWORD PTR [esi+0x4]
100050c9:	mov    eax,DWORD PTR [eax+0x8]
100050cc:	add    eax,0xc
100050cf:	push   edi
100050d0:	push   eax
100050d1:	call   0x10005230
100050d6:	test   al,al
100050d8:	je     0x10005203
100050de:	mov    ecx,DWORD PTR [esi+0x4]
100050e1:	mov    edx,DWORD PTR [ecx+0x8]
100050e4:	push   edi
100050e5:	mov    edi,DWORD PTR [ebp+0x8]
100050e8:	push   edx
100050e9:	push   0x0
100050eb:	push   edi
100050ec:	mov    ecx,esi
100050ee:	call   0x10005a60
100050f3:	mov    eax,edi
100050f5:	pop    edi
100050f6:	pop    esi
100050f7:	pop    ebx
100050f8:	mov    esp,ebp
100050fa:	pop    ebp
100050fb:	ret    0x10
100050fe:	lea    eax,[ebx+0xc]
10005101:	push   eax
10005102:	push   edi
10005103:	call   0x10005230
10005108:	test   al,al
1000510a:	je     0x1000516f
1000510c:	mov    eax,DWORD PTR [ebp+0xc]
1000510f:	lea    ecx,[esp+0xc]
10005113:	mov    DWORD PTR [esp+0xc],eax
10005117:	mov    DWORD PTR [esp+0x10],ebx
1000511b:	call   0x10006610
10005120:	mov    ecx,DWORD PTR [esp+0x10]
10005124:	add    ecx,0xc
10005127:	push   edi
10005128:	push   ecx
10005129:	mov    ecx,esi
1000512b:	call   0x10005230
10005130:	test   al,al
10005132:	je     0x1000516f
10005134:	mov    eax,DWORD PTR [esp+0x10]
10005138:	mov    edx,DWORD PTR [eax+0x8]
1000513b:	cmp    BYTE PTR [edx+0x45],0x0
1000513f:	push   edi
10005140:	mov    edi,DWORD PTR [ebp+0x8]
10005143:	mov    ecx,esi
10005145:	je     0x1000515b
10005147:	push   eax
10005148:	push   0x0
1000514a:	push   edi
1000514b:	call   0x10005a60
10005150:	mov    eax,edi
10005152:	pop    edi
10005153:	pop    esi
10005154:	pop    ebx
10005155:	mov    esp,ebp
10005157:	pop    ebp
10005158:	ret    0x10
1000515b:	push   ebx
1000515c:	push   0x1
1000515e:	push   edi
1000515f:	call   0x10005a60
10005164:	mov    eax,edi
10005166:	pop    edi
10005167:	pop    esi
10005168:	pop    ebx
10005169:	mov    esp,ebp
1000516b:	pop    ebp
1000516c:	ret    0x10
1000516f:	push   edi
10005170:	lea    eax,[ebx+0xc]
10005173:	push   eax
10005174:	mov    ecx,esi
10005176:	call   0x10005230
1000517b:	test   al,al
1000517d:	je     0x10005203
10005183:	mov    ecx,DWORD PTR [esi+0x4]
10005186:	mov    eax,DWORD PTR [ebp+0xc]
10005189:	mov    DWORD PTR [esp+0x18],ecx
1000518d:	lea    ecx,[esp+0xc]
10005191:	mov    DWORD PTR [esp+0xc],eax
10005195:	mov    DWORD PTR [esp+0x10],ebx
10005199:	mov    DWORD PTR [esp+0x14],esi
1000519d:	call   0x100066a0
100051a2:	lea    edx,[esp+0x14]
100051a6:	push   edx
100051a7:	lea    ecx,[esp+0x10]
100051ab:	call   0x10004600
100051b0:	test   al,al
100051b2:	jne    0x100051c8
100051b4:	mov    eax,DWORD PTR [esp+0x10]
100051b8:	add    eax,0xc
100051bb:	push   eax
100051bc:	push   edi
100051bd:	mov    ecx,esi
100051bf:	call   0x10005230
100051c4:	test   al,al
100051c6:	je     0x10005203
100051c8:	mov    ecx,DWORD PTR [ebx+0x8]
100051cb:	cmp    BYTE PTR [ecx+0x45],0x0
100051cf:	push   edi
100051d0:	mov    edi,DWORD PTR [ebp+0x8]
100051d3:	mov    ecx,esi
100051d5:	je     0x100051eb
100051d7:	push   ebx
100051d8:	push   0x0
100051da:	push   edi
100051db:	call   0x10005a60
100051e0:	mov    eax,edi
100051e2:	pop    edi
100051e3:	pop    esi
100051e4:	pop    ebx
100051e5:	mov    esp,ebp
100051e7:	pop    ebp
100051e8:	ret    0x10
100051eb:	mov    edx,DWORD PTR [esp+0x14]
100051ef:	push   edx
100051f0:	push   0x1
100051f2:	push   edi
100051f3:	call   0x10005a60
100051f8:	mov    eax,edi
100051fa:	pop    edi
100051fb:	pop    esi
100051fc:	pop    ebx
100051fd:	mov    esp,ebp
100051ff:	pop    ebp
10005200:	ret    0x10
10005203:	push   edi
10005204:	lea    eax,[esp+0x18]
10005208:	push   eax
10005209:	mov    ecx,esi
1000520b:	call   0x10005950
10005210:	mov    edx,DWORD PTR [eax]
10005212:	mov    ecx,DWORD PTR [ebp+0x8]
10005215:	pop    edi
10005216:	mov    DWORD PTR [ecx],edx
10005218:	mov    eax,DWORD PTR [eax+0x4]
1000521b:	pop    esi
1000521c:	mov    DWORD PTR [ecx+0x4],eax
1000521f:	mov    eax,ecx
10005221:	pop    ebx
10005222:	mov    esp,ebp
10005224:	pop    ebp
10005225:	ret    0x10
10005228:	int3   
10005229:	int3   
1000522a:	int3   
1000522b:	int3   
1000522c:	int3   
1000522d:	int3   
1000522e:	int3   
1000522f:	int3   
10005230:	mov    eax,DWORD PTR [esp+0x8]
10005234:	cmp    DWORD PTR [eax+0x18],0x8
10005238:	mov    ecx,DWORD PTR [eax+0x14]
1000523b:	jb     0x10005242
1000523d:	mov    eax,DWORD PTR [eax+0x4]
10005240:	jmp    0x10005245
10005242:	add    eax,0x4
10005245:	push   ecx
10005246:	mov    ecx,DWORD PTR [esp+0x8]
1000524a:	push   eax
1000524b:	mov    eax,DWORD PTR [ecx+0x14]
1000524e:	push   eax
1000524f:	push   0x0
10005251:	call   0x10006df0
10005256:	xor    ecx,ecx
10005258:	test   eax,eax
1000525a:	setl   cl
1000525d:	mov    al,cl
1000525f:	ret    0x8
10005262:	int3   
10005263:	int3   
10005264:	int3   
10005265:	int3   
10005266:	int3   
10005267:	int3   
10005268:	int3   
10005269:	int3   
1000526a:	int3   
1000526b:	int3   
1000526c:	int3   
1000526d:	int3   
1000526e:	int3   
1000526f:	int3   
10005270:	push   0xffffffff
10005272:	push   0x1002d748
10005277:	mov    eax,fs:0x0
1000527d:	push   eax
1000527e:	push   ecx
1000527f:	push   esi
10005280:	push   edi
10005281:	mov    eax,ds:0x100c7654
10005286:	xor    eax,esp
10005288:	push   eax
10005289:	lea    eax,[esp+0x10]
1000528d:	mov    fs:0x0,eax
10005293:	mov    esi,ecx
10005295:	mov    DWORD PTR [esp+0xc],esi
10005299:	mov    eax,DWORD PTR [esp+0x20]
1000529d:	xor    edi,edi
1000529f:	push   0xffffffff
100052a1:	push   edi
100052a2:	mov    DWORD PTR [esi+0x18],0x7
100052a9:	mov    DWORD PTR [esi+0x14],edi
100052ac:	push   eax
100052ad:	mov    WORD PTR [esi+0x4],di
100052b1:	call   0x10004e50
100052b6:	mov    edx,DWORD PTR [esp+0x24]
100052ba:	push   0xffffffff
100052bc:	lea    ecx,[esi+0x1c]
100052bf:	mov    DWORD PTR [esp+0x1c],edi
100052c3:	push   edi
100052c4:	mov    DWORD PTR [ecx+0x18],0x7
100052cb:	mov    DWORD PTR [ecx+0x14],edi
100052ce:	push   edx
100052cf:	mov    WORD PTR [ecx+0x4],di
100052d3:	call   0x10004e50
100052d8:	mov    eax,esi
100052da:	mov    ecx,DWORD PTR [esp+0x10]
100052de:	mov    DWORD PTR fs:0x0,ecx
100052e5:	pop    ecx
100052e6:	pop    edi
100052e7:	pop    esi
100052e8:	add    esp,0x10
100052eb:	ret    0x8
100052ee:	int3   
100052ef:	int3   
100052f0:	push   ebx
100052f1:	push   esi
100052f2:	mov    esi,DWORD PTR [esp+0x10]
100052f6:	mov    eax,esi
100052f8:	shr    eax,0x4
100052fb:	push   edi
100052fc:	mov    edi,DWORD PTR [esp+0x10]
10005300:	add    eax,0x1
10005303:	mov    ebx,ecx
10005305:	movzx  ecx,ax
10005308:	push   0x6
1000530a:	push   ecx
1000530b:	push   edi
1000530c:	call   DWORD PTR ds:0x1002f09c
10005312:	test   eax,eax
10005314:	je     0x10005327
10005316:	push   esi
10005317:	push   eax
10005318:	push   edi
10005319:	call   0x10001180
1000531e:	mov    esi,eax
10005320:	add    esp,0xc
10005323:	test   esi,esi
10005325:	jne    0x1000532f
10005327:	pop    edi
10005328:	pop    esi
10005329:	xor    eax,eax
1000532b:	pop    ebx
1000532c:	ret    0x8
1000532f:	mov    eax,DWORD PTR [ebx]
10005331:	movzx  edi,WORD PTR [esi]
10005334:	sub    eax,0x10
10005337:	mov    edx,0x1
1000533c:	sub    edx,DWORD PTR [eax+0xc]
1000533f:	mov    eax,DWORD PTR [eax+0x8]
10005342:	sub    eax,edi
10005344:	or     edx,eax
10005346:	jge    0x10005350
10005348:	push   edi
10005349:	mov    ecx,ebx
1000534b:	call   0x10004aa0
10005350:	movzx  eax,WORD PTR [esi]
10005353:	cmp    eax,0xffffffff
10005356:	push   ebp
10005357:	mov    ebp,DWORD PTR [ebx]
10005359:	lea    edx,[esi+0x2]
1000535c:	jne    0x10005375
1000535e:	mov    eax,edx
10005360:	lea    esi,[eax+0x2]
10005363:	mov    cx,WORD PTR [eax]
10005366:	add    eax,0x2
10005369:	test   cx,cx
1000536c:	jne    0x10005363
1000536e:	sub    eax,esi
10005370:	sar    eax,1
10005372:	add    eax,0x1
10005375:	lea    ecx,[eax+eax*1]
10005378:	push   ecx
10005379:	push   edx
1000537a:	lea    esi,[edi+edi*1]
1000537d:	push   esi
1000537e:	push   ebp
1000537f:	call   0x10018df3
10005384:	push   eax
10005385:	call   0x100010b0
1000538a:	add    esp,0x14
1000538d:	test   edi,edi
1000538f:	pop    ebp
10005390:	jl     0x100053af
10005392:	mov    eax,DWORD PTR [ebx]
10005394:	cmp    edi,DWORD PTR [eax-0x8]
10005397:	jg     0x100053af
10005399:	mov    DWORD PTR [eax-0xc],edi
1000539c:	mov    edx,DWORD PTR [ebx]
1000539e:	pop    edi
1000539f:	mov    WORD PTR [esi+edx*1],0x0
100053a5:	pop    esi
100053a6:	mov    eax,0x1
100053ab:	pop    ebx
100053ac:	ret    0x8
100053af:	push   0x80070057
100053b4:	call   0x10001090
100053b9:	int3   
100053ba:	int3   
100053bb:	int3   
100053bc:	int3   
100053bd:	int3   
100053be:	int3   
100053bf:	int3   
100053c0:	mov    edx,DWORD PTR [esp+0x4]
100053c4:	push   esi
100053c5:	mov    esi,ecx
100053c7:	mov    eax,DWORD PTR [esi]
100053c9:	mov    ecx,DWORD PTR [eax-0x10]
100053cc:	sub    eax,0x10
100053cf:	cmp    DWORD PTR [eax+0x8],edx
100053d2:	jge    0x100053e9
100053d4:	test   edx,edx
100053d6:	jle    0x100053e9
100053d8:	push   edi
100053d9:	mov    edi,DWORD PTR [ecx]
100053db:	push   0x2
100053dd:	push   edx
100053de:	push   eax
100053df:	mov    eax,DWORD PTR [edi+0x8]
100053e2:	call   eax
100053e4:	test   eax,eax
100053e6:	pop    edi
100053e7:	jne    0x100053ee
100053e9:	call   0x10004a90
100053ee:	add    eax,0x10
100053f1:	mov    DWORD PTR [esi],eax
100053f3:	pop    esi
100053f4:	ret    0x4
100053f7:	int3   
100053f8:	int3   
100053f9:	int3   
100053fa:	int3   
100053fb:	int3   
100053fc:	int3   
100053fd:	int3   
100053fe:	int3   
100053ff:	int3   
10005400:	push   ebp
10005401:	mov    ebp,esp
10005403:	and    esp,0xfffffff8
10005406:	sub    esp,0x24
10005409:	push   ebx
1000540a:	push   esi
1000540b:	push   edi
1000540c:	mov    edi,ecx
1000540e:	mov    eax,DWORD PTR [edi+0x4]
10005411:	mov    esi,DWORD PTR [eax+0x4]
10005414:	cmp    BYTE PTR [esi+0x45],0x0
10005418:	mov    ecx,eax
1000541a:	mov    al,0x1
1000541c:	mov    DWORD PTR [esp+0x28],edi
10005420:	mov    DWORD PTR [esp+0x10],ecx
10005424:	mov    BYTE PTR [esp+0x18],al
10005428:	jne    0x100054c8
1000542e:	mov    edx,DWORD PTR [ebp+0xc]
10005431:	mov    eax,DWORD PTR [edx+0x14]
10005434:	mov    ecx,DWORD PTR [edx+0x18]
10005437:	mov    DWORD PTR [esp+0x20],eax
1000543b:	mov    DWORD PTR [esp+0x1c],eax
1000543f:	mov    DWORD PTR [esp+0x24],ecx
10005443:	jmp    0x1000544c
10005445:	mov    edx,DWORD PTR [ebp+0xc]
10005448:	mov    eax,DWORD PTR [esp+0x1c]
1000544c:	cmp    DWORD PTR [esi+0x24],0x10
10005450:	mov    ebx,DWORD PTR [esi+0x20]
10005453:	mov    DWORD PTR [esp+0x10],esi
10005457:	jb     0x1000545e
10005459:	mov    ecx,DWORD PTR [esi+0x10]
1000545c:	jmp    0x10005461
1000545e:	lea    ecx,[esi+0x10]
10005461:	mov    edi,DWORD PTR [esp+0x20]
10005465:	cmp    eax,edi
10005467:	mov    DWORD PTR [esp+0x14],ecx
1000546b:	jae    0x1000546f
1000546d:	mov    edi,eax
1000546f:	cmp    edi,ebx
10005471:	mov    ecx,edi
10005473:	jb     0x10005477
10005475:	mov    ecx,ebx
10005477:	cmp    DWORD PTR [esp+0x24],0x10
1000547c:	lea    eax,[edx+0x4]
1000547f:	jb     0x10005483
10005481:	mov    eax,DWORD PTR [eax]
10005483:	mov    edx,DWORD PTR [esp+0x14]
10005487:	push   ecx
10005488:	push   edx
10005489:	push   eax
1000548a:	call   0x10001370
1000548f:	add    esp,0xc
10005492:	test   eax,eax
10005494:	jne    0x100054a8
10005496:	cmp    edi,ebx
10005498:	jae    0x1000549f
1000549a:	or     eax,0xffffffff
1000549d:	jmp    0x100054a6
1000549f:	xor    eax,eax
100054a1:	cmp    edi,ebx
100054a3:	setne  al
100054a6:	test   eax,eax
100054a8:	setl   al
100054ab:	test   al,al
100054ad:	mov    BYTE PTR [esp+0x18],al
100054b1:	je     0x100054b7
100054b3:	mov    esi,DWORD PTR [esi]
100054b5:	jmp    0x100054ba
100054b7:	mov    esi,DWORD PTR [esi+0x8]
100054ba:	cmp    BYTE PTR [esi+0x45],0x0
100054be:	je     0x10005445
100054c0:	mov    edi,DWORD PTR [esp+0x28]
100054c4:	mov    ecx,DWORD PTR [esp+0x10]
100054c8:	test   al,al
100054ca:	mov    esi,ecx
100054cc:	mov    DWORD PTR [esp+0x2c],esi
100054d0:	mov    DWORD PTR [esp+0x28],edi
100054d4:	je     0x10005519
100054d6:	mov    eax,DWORD PTR [edi+0x4]
100054d9:	cmp    ecx,DWORD PTR [eax]
100054db:	jne    0x1000550c
100054dd:	mov    edx,DWORD PTR [ebp+0xc]
100054e0:	push   edx
100054e1:	push   ecx
100054e2:	push   0x1
100054e4:	lea    eax,[esp+0x34]
100054e8:	push   eax
100054e9:	mov    ecx,edi
100054eb:	call   0x10005590
100054f0:	mov    ecx,eax
100054f2:	mov    edx,DWORD PTR [ecx]
100054f4:	mov    eax,DWORD PTR [ebp+0x8]
100054f7:	mov    ecx,DWORD PTR [ecx+0x4]
100054fa:	mov    DWORD PTR [eax+0x4],ecx
100054fd:	mov    BYTE PTR [eax+0x8],0x1
10005501:	mov    DWORD PTR [eax],edx
10005503:	pop    edi
10005504:	pop    esi
10005505:	pop    ebx
10005506:	mov    esp,ebp
10005508:	pop    ebp
10005509:	ret    0x8
1000550c:	lea    ecx,[esp+0x28]
10005510:	call   0x10006610
10005515:	mov    esi,DWORD PTR [esp+0x2c]
10005519:	mov    ebx,DWORD PTR [ebp+0xc]
1000551c:	cmp    DWORD PTR [ebx+0x18],0x10
10005520:	mov    edx,DWORD PTR [ebx+0x14]
10005523:	lea    ecx,[esi+0xc]
10005526:	jb     0x1000552d
10005528:	mov    eax,DWORD PTR [ebx+0x4]
1000552b:	jmp    0x10005530
1000552d:	lea    eax,[ebx+0x4]
10005530:	push   edx
10005531:	mov    edx,DWORD PTR [ecx+0x14]
10005534:	push   eax
10005535:	push   edx
10005536:	push   0x0
10005538:	call   0x10003b40
1000553d:	test   eax,eax
1000553f:	jge    0x10005574
10005541:	mov    eax,DWORD PTR [esp+0x10]
10005545:	mov    ecx,DWORD PTR [esp+0x18]
10005549:	push   ebx
1000554a:	push   eax
1000554b:	push   ecx
1000554c:	lea    edx,[esp+0x34]
10005550:	push   edx
10005551:	mov    ecx,edi
10005553:	call   0x10005590
10005558:	mov    ecx,eax
1000555a:	mov    edx,DWORD PTR [ecx]
1000555c:	mov    eax,DWORD PTR [ebp+0x8]
1000555f:	mov    ecx,DWORD PTR [ecx+0x4]
10005562:	mov    DWORD PTR [eax+0x4],ecx
10005565:	mov    BYTE PTR [eax+0x8],0x1
10005569:	mov    DWORD PTR [eax],edx
1000556b:	pop    edi
1000556c:	pop    esi
1000556d:	pop    ebx
1000556e:	mov    esp,ebp
10005570:	pop    ebp
10005571:	ret    0x8
10005574:	mov    eax,DWORD PTR [ebp+0x8]
10005577:	mov    edx,DWORD PTR [esp+0x28]
1000557b:	pop    edi
1000557c:	mov    DWORD PTR [eax+0x4],esi
1000557f:	pop    esi
10005580:	mov    BYTE PTR [eax+0x8],0x0
10005584:	mov    DWORD PTR [eax],edx
10005586:	pop    ebx
10005587:	mov    esp,ebp
10005589:	pop    ebp
1000558a:	ret    0x8
1000558d:	int3   
1000558e:	int3   
1000558f:	int3   
10005590:	push   ebp
10005591:	mov    ebp,esp
10005593:	and    esp,0xfffffff8
10005596:	push   0xffffffff
10005598:	push   0x1002dac8
1000559d:	mov    eax,fs:0x0
100055a3:	push   eax
100055a4:	sub    esp,0x50
100055a7:	push   ebx
100055a8:	push   esi
100055a9:	push   edi
100055aa:	mov    eax,ds:0x100c7654
100055af:	xor    eax,esp
100055b1:	push   eax
100055b2:	lea    eax,[esp+0x60]
100055b6:	mov    fs:0x0,eax
100055bc:	mov    edi,ecx
100055be:	xor    ebx,ebx
100055c0:	cmp    DWORD PTR [edi+0x8],0x4924923
100055c7:	jb     0x10005612
100055c9:	push   0x13
100055cb:	push   0x100b7e1c
100055d0:	lea    ecx,[esp+0x20]
100055d4:	mov    DWORD PTR [esp+0x38],0xf
100055dc:	mov    DWORD PTR [esp+0x34],ebx
100055e0:	mov    BYTE PTR [esp+0x24],bl
100055e4:	call   0x10003a70
100055e9:	lea    eax,[esp+0x18]
100055ed:	push   eax
100055ee:	lea    ecx,[esp+0x38]
100055f2:	mov    DWORD PTR [esp+0x6c],ebx
100055f6:	call   0x10001400
100055fb:	push   0x100bba14
10005600:	lea    ecx,[esp+0x38]
10005604:	push   ecx
10005605:	mov    DWORD PTR [esp+0x3c],0x1002f4f8
1000560d:	call   0x10018e6e
10005612:	mov    edx,DWORD PTR [ebp+0x14]
10005615:	mov    eax,DWORD PTR [edi+0x4]
10005618:	mov    esi,DWORD PTR [ebp+0x10]
1000561b:	push   ebx
1000561c:	push   edx
1000561d:	push   eax
1000561e:	push   esi
1000561f:	push   eax
10005620:	call   0x10005e60
10005625:	add    DWORD PTR [edi+0x8],0x1
10005629:	mov    ecx,eax
1000562b:	mov    eax,DWORD PTR [edi+0x4]
1000562e:	cmp    esi,eax
10005630:	mov    DWORD PTR [esp+0x14],ecx
10005634:	jne    0x10005646
10005636:	mov    DWORD PTR [eax+0x4],ecx
10005639:	mov    eax,DWORD PTR [edi+0x4]
1000563c:	mov    DWORD PTR [eax],ecx
1000563e:	mov    edx,DWORD PTR [edi+0x4]
10005641:	mov    DWORD PTR [edx+0x8],ecx
10005644:	jmp    0x10005666
10005646:	cmp    BYTE PTR [ebp+0xc],bl
10005649:	je     0x10005658
1000564b:	mov    DWORD PTR [esi],ecx
1000564d:	mov    eax,DWORD PTR [edi+0x4]
10005650:	cmp    esi,DWORD PTR [eax]
10005652:	jne    0x10005666
10005654:	mov    DWORD PTR [eax],ecx
10005656:	jmp    0x10005666
10005658:	mov    DWORD PTR [esi+0x8],ecx
1000565b:	mov    eax,DWORD PTR [edi+0x4]
1000565e:	cmp    esi,DWORD PTR [eax+0x8]
10005661:	jne    0x10005666
10005663:	mov    DWORD PTR [eax+0x8],ecx
10005666:	mov    edx,DWORD PTR [ecx+0x4]
10005669:	cmp    BYTE PTR [edx+0x44],bl
1000566c:	lea    eax,[ecx+0x4]
1000566f:	mov    esi,ecx
10005671:	jne    0x100057b2
10005677:	mov    ecx,DWORD PTR [eax]
10005679:	mov    edx,DWORD PTR [ecx+0x4]
1000567c:	cmp    ecx,DWORD PTR [edx]
1000567e:	jne    0x10005725
10005684:	mov    edx,DWORD PTR [edx+0x8]
10005687:	cmp    BYTE PTR [edx+0x44],bl
1000568a:	je     0x1000572c
10005690:	cmp    esi,DWORD PTR [ecx+0x8]
10005693:	jne    0x100056d0
10005695:	mov    esi,ecx
10005697:	mov    ecx,DWORD PTR [esi+0x8]
1000569a:	mov    eax,DWORD PTR [ecx]
1000569c:	mov    DWORD PTR [esi+0x8],eax
1000569f:	mov    eax,DWORD PTR [ecx]
100056a1:	cmp    BYTE PTR [eax+0x45],bl
100056a4:	jne    0x100056a9
100056a6:	mov    DWORD PTR [eax+0x4],esi
100056a9:	mov    edx,DWORD PTR [esi+0x4]
100056ac:	lea    eax,[esi+0x4]
100056af:	mov    DWORD PTR [ecx+0x4],edx
100056b2:	mov    edx,DWORD PTR [edi+0x4]
100056b5:	cmp    esi,DWORD PTR [edx+0x4]
100056b8:	jne    0x100056bf
100056ba:	mov    DWORD PTR [edx+0x4],ecx
100056bd:	jmp    0x100056cc
100056bf:	mov    edx,DWORD PTR [eax]
100056c1:	cmp    esi,DWORD PTR [edx]
100056c3:	jne    0x100056c9
100056c5:	mov    DWORD PTR [edx],ecx
100056c7:	jmp    0x100056cc
100056c9:	mov    DWORD PTR [edx+0x8],ecx
100056cc:	mov    DWORD PTR [ecx],esi
100056ce:	mov    DWORD PTR [eax],ecx
100056d0:	mov    ecx,DWORD PTR [eax]
100056d2:	mov    BYTE PTR [ecx+0x44],0x1
100056d6:	mov    edx,DWORD PTR [eax]
100056d8:	mov    ecx,DWORD PTR [edx+0x4]
100056db:	mov    BYTE PTR [ecx+0x44],bl
100056de:	mov    edx,DWORD PTR [eax]
100056e0:	mov    eax,DWORD PTR [edx+0x4]
100056e3:	mov    ecx,DWORD PTR [eax]
100056e5:	mov    edx,DWORD PTR [ecx+0x8]
100056e8:	mov    DWORD PTR [eax],edx
100056ea:	mov    edx,DWORD PTR [ecx+0x8]
100056ed:	cmp    BYTE PTR [edx+0x45],bl
100056f0:	jne    0x100056f5
100056f2:	mov    DWORD PTR [edx+0x4],eax
100056f5:	mov    edx,DWORD PTR [eax+0x4]
100056f8:	mov    DWORD PTR [ecx+0x4],edx
100056fb:	mov    edx,DWORD PTR [edi+0x4]
100056fe:	cmp    eax,DWORD PTR [edx+0x4]
10005701:	jne    0x1000570e
10005703:	mov    DWORD PTR [edx+0x4],ecx
10005706:	mov    DWORD PTR [ecx+0x8],eax
10005709:	jmp    0x1000579c
1000570e:	mov    edx,DWORD PTR [eax+0x4]
10005711:	cmp    eax,DWORD PTR [edx+0x8]
10005714:	jne    0x1000571e
10005716:	mov    DWORD PTR [edx+0x8],ecx
10005719:	mov    DWORD PTR [ecx+0x8],eax
1000571c:	jmp    0x1000579c
1000571e:	mov    DWORD PTR [edx],ecx
10005720:	mov    DWORD PTR [ecx+0x8],eax
10005723:	jmp    0x1000579c
10005725:	mov    edx,DWORD PTR [edx]
10005727:	cmp    BYTE PTR [edx+0x44],bl
1000572a:	jne    0x10005743
1000572c:	mov    BYTE PTR [ecx+0x44],0x1
10005730:	mov    BYTE PTR [edx+0x44],0x1
10005734:	mov    edx,DWORD PTR [eax]
10005736:	mov    ecx,DWORD PTR [edx+0x4]
10005739:	mov    BYTE PTR [ecx+0x44],bl
1000573c:	mov    edx,DWORD PTR [eax]
1000573e:	mov    esi,DWORD PTR [edx+0x4]
10005741:	jmp    0x1000579f
10005743:	cmp    esi,DWORD PTR [ecx]
10005745:	jne    0x10005751
10005747:	mov    esi,ecx
10005749:	push   esi
1000574a:	mov    ecx,edi
1000574c:	call   0x100061b0
10005751:	mov    eax,DWORD PTR [esi+0x4]
10005754:	mov    BYTE PTR [eax+0x44],0x1
10005758:	mov    ecx,DWORD PTR [esi+0x4]
1000575b:	mov    edx,DWORD PTR [ecx+0x4]
1000575e:	mov    BYTE PTR [edx+0x44],bl
10005761:	mov    eax,DWORD PTR [esi+0x4]
10005764:	mov    eax,DWORD PTR [eax+0x4]
10005767:	mov    ecx,DWORD PTR [eax+0x8]
1000576a:	mov    edx,DWORD PTR [ecx]
1000576c:	mov    DWORD PTR [eax+0x8],edx
1000576f:	mov    edx,DWORD PTR [ecx]
10005771:	cmp    BYTE PTR [edx+0x45],bl
10005774:	jne    0x10005779
10005776:	mov    DWORD PTR [edx+0x4],eax
10005779:	mov    edx,DWORD PTR [eax+0x4]
1000577c:	mov    DWORD PTR [ecx+0x4],edx
1000577f:	mov    edx,DWORD PTR [edi+0x4]
10005782:	cmp    eax,DWORD PTR [edx+0x4]
10005785:	jne    0x1000578c
10005787:	mov    DWORD PTR [edx+0x4],ecx
1000578a:	jmp    0x1000579a
1000578c:	mov    edx,DWORD PTR [eax+0x4]
1000578f:	cmp    eax,DWORD PTR [edx]
10005791:	jne    0x10005797
10005793:	mov    DWORD PTR [edx],ecx
10005795:	jmp    0x1000579a
10005797:	mov    DWORD PTR [edx+0x8],ecx
1000579a:	mov    DWORD PTR [ecx],eax
1000579c:	mov    DWORD PTR [eax+0x4],ecx
1000579f:	mov    ecx,DWORD PTR [esi+0x4]
100057a2:	cmp    BYTE PTR [ecx+0x44],bl
100057a5:	lea    eax,[esi+0x4]
100057a8:	je     0x10005677
100057ae:	mov    ecx,DWORD PTR [esp+0x14]
100057b2:	mov    edx,DWORD PTR [edi+0x4]
100057b5:	mov    eax,DWORD PTR [edx+0x4]
100057b8:	mov    BYTE PTR [eax+0x44],0x1
100057bc:	mov    eax,DWORD PTR [ebp+0x8]
100057bf:	mov    DWORD PTR [eax+0x4],ecx
100057c2:	mov    DWORD PTR [eax],edi
100057c4:	mov    ecx,DWORD PTR [esp+0x60]
100057c8:	mov    DWORD PTR fs:0x0,ecx
100057cf:	pop    ecx
100057d0:	pop    edi
100057d1:	pop    esi
100057d2:	pop    ebx
100057d3:	mov    esp,ebp
100057d5:	pop    ebp
100057d6:	ret    0x10
100057d9:	int3   
100057da:	int3   
100057db:	int3   
100057dc:	int3   
100057dd:	int3   
100057de:	int3   
100057df:	int3   
100057e0:	push   ecx
100057e1:	mov    eax,DWORD PTR [ecx+0x4]
100057e4:	push   esi
100057e5:	mov    esi,DWORD PTR [eax+0x4]
100057e8:	cmp    BYTE PTR [esi+0x45],0x0
100057ec:	mov    DWORD PTR [esp+0x4],eax
100057f0:	jne    0x10005867
100057f2:	mov    eax,DWORD PTR [esp+0xc]
100057f6:	mov    ecx,DWORD PTR [eax+0x18]
100057f9:	push   ebx
100057fa:	mov    ebx,DWORD PTR [eax+0x14]
100057fd:	push   ebp
100057fe:	push   edi
100057ff:	mov    DWORD PTR [esp+0x18],ecx
10005803:	lea    ebp,[eax+0x4]
10005806:	cmp    DWORD PTR [esp+0x18],0x10
1000580b:	jb     0x10005812
1000580d:	mov    edx,DWORD PTR [ebp+0x0]
10005810:	jmp    0x10005814
10005812:	mov    edx,ebp
10005814:	mov    edi,DWORD PTR [esi+0x20]
10005817:	mov    eax,edi
10005819:	cmp    eax,edi
1000581b:	jae    0x1000581d
1000581d:	cmp    edi,ebx
1000581f:	mov    ecx,edi
10005821:	jb     0x10005825
10005823:	mov    ecx,ebx
10005825:	cmp    DWORD PTR [esi+0x24],0x10
10005829:	jb     0x10005830
1000582b:	mov    eax,DWORD PTR [esi+0x10]
1000582e:	jmp    0x10005833
10005830:	lea    eax,[esi+0x10]
10005833:	push   ecx
10005834:	push   edx
10005835:	push   eax
10005836:	call   0x10001370
1000583b:	add    esp,0xc
1000583e:	test   eax,eax
10005840:	jne    0x1000584d
10005842:	cmp    edi,ebx
10005844:	jb     0x1000584f
10005846:	cmp    edi,ebx
10005848:	setne  al
1000584b:	test   eax,eax
1000584d:	jge    0x10005854
1000584f:	mov    esi,DWORD PTR [esi+0x8]
10005852:	jmp    0x1000585a
10005854:	mov    DWORD PTR [esp+0x10],esi
10005858:	mov    esi,DWORD PTR [esi]
1000585a:	cmp    BYTE PTR [esi+0x45],0x0
1000585e:	je     0x10005806
10005860:	mov    eax,DWORD PTR [esp+0x10]
10005864:	pop    edi
10005865:	pop    ebp
10005866:	pop    ebx
10005867:	pop    esi
10005868:	pop    ecx
10005869:	ret    0x4
1000586c:	int3   
1000586d:	int3   
1000586e:	int3   
1000586f:	int3   
10005870:	push   ebp
10005871:	mov    ebp,esp
10005873:	and    esp,0xfffffff8
10005876:	sub    esp,0xc
10005879:	push   esi
1000587a:	mov    esi,ecx
1000587c:	mov    eax,DWORD PTR [esi+0x4]
1000587f:	mov    ecx,DWORD PTR [eax]
10005881:	push   eax
10005882:	push   esi
10005883:	push   ecx
10005884:	push   esi
10005885:	lea    eax,[esp+0x18]
10005889:	push   eax
1000588a:	mov    ecx,esi
1000588c:	call   0x10005d50
10005891:	mov    ecx,DWORD PTR [esi+0x4]
10005894:	push   ecx
10005895:	call   0x1001876e
1000589a:	add    esp,0x4
1000589d:	xor    eax,eax
1000589f:	mov    DWORD PTR [esi+0x4],eax
100058a2:	mov    DWORD PTR [esi+0x8],eax
100058a5:	pop    esi
100058a6:	mov    esp,ebp
100058a8:	pop    ebp
100058a9:	ret    
100058aa:	int3   
100058ab:	int3   
100058ac:	int3   
100058ad:	int3   
100058ae:	int3   
100058af:	int3   
100058b0:	push   ebx
100058b1:	mov    ebx,DWORD PTR [esp+0x8]
100058b5:	push   esi
100058b6:	mov    esi,ecx
100058b8:	cmp    DWORD PTR [esi+0x14],ebx
100058bb:	push   edi
100058bc:	jae    0x100058c3
100058be:	call   0x1001864e
100058c3:	mov    eax,DWORD PTR [esi+0x14]
100058c6:	mov    edi,DWORD PTR [esp+0x14]
100058ca:	sub    eax,ebx
100058cc:	cmp    eax,edi
100058ce:	jae    0x100058d2
100058d0:	mov    edi,eax
100058d2:	test   edi,edi
100058d4:	jbe    0x1000593f
100058d6:	mov    ecx,DWORD PTR [esi+0x18]
100058d9:	cmp    ecx,0x8
100058dc:	push   ebp
100058dd:	lea    ebp,[esi+0x4]
100058e0:	jb     0x100058eb
100058e2:	mov    edx,DWORD PTR [ebp+0x0]
100058e5:	mov    DWORD PTR [esp+0x14],edx
100058e9:	jmp    0x100058ef
100058eb:	mov    DWORD PTR [esp+0x14],ebp
100058ef:	cmp    ecx,0x8
100058f2:	jb     0x100058fd
100058f4:	mov    edx,DWORD PTR [ebp+0x0]
100058f7:	mov    DWORD PTR [esp+0x18],edx
100058fb:	jmp    0x10005901
100058fd:	mov    DWORD PTR [esp+0x18],ebp
10005901:	mov    edx,DWORD PTR [esp+0x14]
10005905:	sub    eax,edi
10005907:	add    eax,eax
10005909:	push   eax
1000590a:	lea    eax,[ebx+edi*1]
1000590d:	lea    eax,[edx+eax*2]
10005910:	sub    ecx,ebx
10005912:	push   eax
10005913:	add    ecx,ecx
10005915:	push   ecx
10005916:	mov    ecx,DWORD PTR [esp+0x24]
1000591a:	lea    edx,[ecx+ebx*2]
1000591d:	push   edx
1000591e:	call   0x1001911e
10005923:	mov    eax,DWORD PTR [esi+0x14]
10005926:	sub    eax,edi
10005928:	add    esp,0x10
1000592b:	cmp    DWORD PTR [esi+0x18],0x8
1000592f:	mov    DWORD PTR [esi+0x14],eax
10005932:	jb     0x10005937
10005934:	mov    ebp,DWORD PTR [ebp+0x0]
10005937:	mov    WORD PTR [ebp+eax*2+0x0],0x0
1000593e:	pop    ebp
1000593f:	pop    edi
10005940:	mov    eax,esi
10005942:	pop    esi
10005943:	pop    ebx
10005944:	ret    0x8
10005947:	int3   
10005948:	int3   
10005949:	int3   
1000594a:	int3   
1000594b:	int3   
1000594c:	int3   
1000594d:	int3   
1000594e:	int3   
1000594f:	int3   
10005950:	push   ebp
10005951:	mov    ebp,esp
10005953:	and    esp,0xfffffff8
10005956:	sub    esp,0x14
10005959:	mov    eax,DWORD PTR [ecx+0x4]
1000595c:	push   ebx
1000595d:	push   esi
1000595e:	mov    esi,DWORD PTR [eax+0x4]
10005961:	cmp    BYTE PTR [esi+0x45],0x0
10005965:	mov    ebx,eax
10005967:	mov    al,0x1
10005969:	push   edi
1000596a:	mov    edi,DWORD PTR [ebp+0xc]
1000596d:	mov    DWORD PTR [esp+0x14],ecx
10005971:	mov    BYTE PTR [esp+0x10],al
10005975:	jne    0x100059b7
10005977:	cmp    DWORD PTR [esi+0x24],0x8
1000597b:	mov    ecx,DWORD PTR [esi+0x20]
1000597e:	mov    ebx,esi
10005980:	jb     0x10005987
10005982:	mov    eax,DWORD PTR [esi+0x10]
10005985:	jmp    0x1000598a
10005987:	lea    eax,[esi+0x10]
1000598a:	push   ecx
1000598b:	push   eax
1000598c:	mov    eax,DWORD PTR [edi+0x14]
1000598f:	push   eax
10005990:	push   0x0
10005992:	mov    ecx,edi
10005994:	call   0x10006df0
10005999:	test   eax,eax
1000599b:	setl   al
1000599e:	test   al,al
100059a0:	mov    BYTE PTR [esp+0x10],al
100059a4:	je     0x100059aa
100059a6:	mov    esi,DWORD PTR [esi]
100059a8:	jmp    0x100059ad
100059aa:	mov    esi,DWORD PTR [esi+0x8]
100059ad:	cmp    BYTE PTR [esi+0x45],0x0
100059b1:	je     0x10005977
100059b3:	mov    ecx,DWORD PTR [esp+0x14]
100059b7:	test   al,al
100059b9:	mov    esi,ebx
100059bb:	mov    DWORD PTR [esp+0x1c],esi
100059bf:	mov    DWORD PTR [esp+0x18],ecx
100059c3:	je     0x10005a03
100059c5:	mov    edx,DWORD PTR [ecx+0x4]
100059c8:	cmp    ebx,DWORD PTR [edx]
100059ca:	jne    0x100059f6
100059cc:	push   edi
100059cd:	push   ebx
100059ce:	push   0x1
100059d0:	lea    eax,[esp+0x24]
100059d4:	push   eax
100059d5:	call   0x10005a60
100059da:	mov    ecx,eax
100059dc:	mov    edx,DWORD PTR [ecx]
100059de:	mov    eax,DWORD PTR [ebp+0x8]
100059e1:	mov    ecx,DWORD PTR [ecx+0x4]
100059e4:	mov    DWORD PTR [eax+0x4],ecx
100059e7:	mov    BYTE PTR [eax+0x8],0x1
100059eb:	mov    DWORD PTR [eax],edx
100059ed:	pop    edi
100059ee:	pop    esi
100059ef:	pop    ebx
100059f0:	mov    esp,ebp
100059f2:	pop    ebp
100059f3:	ret    0x8
100059f6:	lea    ecx,[esp+0x18]
100059fa:	call   0x10006610
100059ff:	mov    esi,DWORD PTR [esp+0x1c]
10005a03:	cmp    DWORD PTR [edi+0x18],0x8
10005a07:	mov    edx,DWORD PTR [edi+0x14]
10005a0a:	lea    ecx,[esi+0xc]
10005a0d:	jb     0x10005a14
10005a0f:	mov    eax,DWORD PTR [edi+0x4]
10005a12:	jmp    0x10005a17
10005a14:	lea    eax,[edi+0x4]
10005a17:	push   edx
10005a18:	mov    edx,DWORD PTR [ecx+0x14]
10005a1b:	push   eax
10005a1c:	push   edx
10005a1d:	push   0x0
10005a1f:	call   0x10006df0
10005a24:	test   eax,eax
10005a26:	jge    0x10005a3a
10005a28:	mov    eax,DWORD PTR [esp+0x10]
10005a2c:	push   edi
10005a2d:	push   ebx
10005a2e:	lea    ecx,[esp+0x20]
10005a32:	push   eax
10005a33:	push   ecx
10005a34:	mov    ecx,DWORD PTR [esp+0x24]
10005a38:	jmp    0x100059d5
10005a3a:	mov    eax,DWORD PTR [ebp+0x8]
10005a3d:	mov    edx,DWORD PTR [esp+0x18]
10005a41:	pop    edi
10005a42:	mov    DWORD PTR [eax+0x4],esi
10005a45:	pop    esi
10005a46:	mov    BYTE PTR [eax+0x8],0x0
10005a4a:	mov    DWORD PTR [eax],edx
10005a4c:	pop    ebx
10005a4d:	mov    esp,ebp
10005a4f:	pop    ebp
10005a50:	ret    0x8
10005a53:	int3   
10005a54:	int3   
10005a55:	int3   
10005a56:	int3   
10005a57:	int3   
10005a58:	int3   
10005a59:	int3   
10005a5a:	int3   
10005a5b:	int3   
10005a5c:	int3   
10005a5d:	int3   
10005a5e:	int3   
10005a5f:	int3   
10005a60:	push   ebp
10005a61:	mov    ebp,esp
10005a63:	and    esp,0xfffffff8
10005a66:	push   0xffffffff
10005a68:	push   0x1002da98
10005a6d:	mov    eax,fs:0x0
10005a73:	push   eax
10005a74:	sub    esp,0x50
10005a77:	push   ebx
10005a78:	push   esi
10005a79:	push   edi
10005a7a:	mov    eax,ds:0x100c7654
10005a7f:	xor    eax,esp
10005a81:	push   eax
10005a82:	lea    eax,[esp+0x60]
10005a86:	mov    fs:0x0,eax
10005a8c:	mov    edi,ecx
10005a8e:	xor    ebx,ebx
10005a90:	cmp    DWORD PTR [edi+0x8],0x4924923
10005a97:	jb     0x10005ae2
10005a99:	push   0x13
10005a9b:	push   0x100b7e1c
10005aa0:	lea    ecx,[esp+0x20]
10005aa4:	mov    DWORD PTR [esp+0x38],0xf
10005aac:	mov    DWORD PTR [esp+0x34],ebx
10005ab0:	mov    BYTE PTR [esp+0x24],bl
10005ab4:	call   0x10003a70
10005ab9:	lea    eax,[esp+0x18]
10005abd:	push   eax
10005abe:	lea    ecx,[esp+0x38]
10005ac2:	mov    DWORD PTR [esp+0x6c],ebx
10005ac6:	call   0x10001400
10005acb:	push   0x100bba14
10005ad0:	lea    ecx,[esp+0x38]
10005ad4:	push   ecx
10005ad5:	mov    DWORD PTR [esp+0x3c],0x1002f4f8
10005add:	call   0x10018e6e
10005ae2:	mov    edx,DWORD PTR [ebp+0x14]
10005ae5:	mov    eax,DWORD PTR [edi+0x4]
10005ae8:	mov    esi,DWORD PTR [ebp+0x10]
10005aeb:	push   ebx
10005aec:	push   edx
10005aed:	push   eax
10005aee:	push   esi
10005aef:	push   eax
10005af0:	call   0x10006210
10005af5:	add    DWORD PTR [edi+0x8],0x1
10005af9:	mov    ecx,eax
10005afb:	mov    eax,DWORD PTR [edi+0x4]
10005afe:	cmp    esi,eax
10005b00:	mov    DWORD PTR [esp+0x14],ecx
10005b04:	jne    0x10005b16
10005b06:	mov    DWORD PTR [eax+0x4],ecx
10005b09:	mov    eax,DWORD PTR [edi+0x4]
10005b0c:	mov    DWORD PTR [eax],ecx
10005b0e:	mov    edx,DWORD PTR [edi+0x4]
10005b11:	mov    DWORD PTR [edx+0x8],ecx
10005b14:	jmp    0x10005b36
10005b16:	cmp    BYTE PTR [ebp+0xc],bl
10005b19:	je     0x10005b28
10005b1b:	mov    DWORD PTR [esi],ecx
10005b1d:	mov    eax,DWORD PTR [edi+0x4]
10005b20:	cmp    esi,DWORD PTR [eax]
10005b22:	jne    0x10005b36
10005b24:	mov    DWORD PTR [eax],ecx
10005b26:	jmp    0x10005b36
10005b28:	mov    DWORD PTR [esi+0x8],ecx
10005b2b:	mov    eax,DWORD PTR [edi+0x4]
10005b2e:	cmp    esi,DWORD PTR [eax+0x8]
10005b31:	jne    0x10005b36
10005b33:	mov    DWORD PTR [eax+0x8],ecx
10005b36:	mov    edx,DWORD PTR [ecx+0x4]
10005b39:	cmp    BYTE PTR [edx+0x44],bl
10005b3c:	lea    eax,[ecx+0x4]
10005b3f:	mov    esi,ecx
10005b41:	jne    0x10005c82
10005b47:	mov    ecx,DWORD PTR [eax]
10005b49:	mov    edx,DWORD PTR [ecx+0x4]
10005b4c:	cmp    ecx,DWORD PTR [edx]
10005b4e:	jne    0x10005bf5
10005b54:	mov    edx,DWORD PTR [edx+0x8]
10005b57:	cmp    BYTE PTR [edx+0x44],bl
10005b5a:	je     0x10005bfc
10005b60:	cmp    esi,DWORD PTR [ecx+0x8]
10005b63:	jne    0x10005ba0
10005b65:	mov    esi,ecx
10005b67:	mov    ecx,DWORD PTR [esi+0x8]
10005b6a:	mov    eax,DWORD PTR [ecx]
10005b6c:	mov    DWORD PTR [esi+0x8],eax
10005b6f:	mov    eax,DWORD PTR [ecx]
10005b71:	cmp    BYTE PTR [eax+0x45],bl
10005b74:	jne    0x10005b79
10005b76:	mov    DWORD PTR [eax+0x4],esi
10005b79:	mov    edx,DWORD PTR [esi+0x4]
10005b7c:	lea    eax,[esi+0x4]
10005b7f:	mov    DWORD PTR [ecx+0x4],edx
10005b82:	mov    edx,DWORD PTR [edi+0x4]
10005b85:	cmp    esi,DWORD PTR [edx+0x4]
10005b88:	jne    0x10005b8f
10005b8a:	mov    DWORD PTR [edx+0x4],ecx
10005b8d:	jmp    0x10005b9c
10005b8f:	mov    edx,DWORD PTR [eax]
10005b91:	cmp    esi,DWORD PTR [edx]
10005b93:	jne    0x10005b99
10005b95:	mov    DWORD PTR [edx],ecx
10005b97:	jmp    0x10005b9c
10005b99:	mov    DWORD PTR [edx+0x8],ecx
10005b9c:	mov    DWORD PTR [ecx],esi
10005b9e:	mov    DWORD PTR [eax],ecx
10005ba0:	mov    ecx,DWORD PTR [eax]
10005ba2:	mov    BYTE PTR [ecx+0x44],0x1
10005ba6:	mov    edx,DWORD PTR [eax]
10005ba8:	mov    ecx,DWORD PTR [edx+0x4]
10005bab:	mov    BYTE PTR [ecx+0x44],bl
10005bae:	mov    edx,DWORD PTR [eax]
10005bb0:	mov    eax,DWORD PTR [edx+0x4]
10005bb3:	mov    ecx,DWORD PTR [eax]
10005bb5:	mov    edx,DWORD PTR [ecx+0x8]
10005bb8:	mov    DWORD PTR [eax],edx
10005bba:	mov    edx,DWORD PTR [ecx+0x8]
10005bbd:	cmp    BYTE PTR [edx+0x45],bl
10005bc0:	jne    0x10005bc5
10005bc2:	mov    DWORD PTR [edx+0x4],eax
10005bc5:	mov    edx,DWORD PTR [eax+0x4]
10005bc8:	mov    DWORD PTR [ecx+0x4],edx
10005bcb:	mov    edx,DWORD PTR [edi+0x4]
10005bce:	cmp    eax,DWORD PTR [edx+0x4]
10005bd1:	jne    0x10005bde
10005bd3:	mov    DWORD PTR [edx+0x4],ecx
10005bd6:	mov    DWORD PTR [ecx+0x8],eax
10005bd9:	jmp    0x10005c6c
10005bde:	mov    edx,DWORD PTR [eax+0x4]
10005be1:	cmp    eax,DWORD PTR [edx+0x8]
10005be4:	jne    0x10005bee
10005be6:	mov    DWORD PTR [edx+0x8],ecx
10005be9:	mov    DWORD PTR [ecx+0x8],eax
10005bec:	jmp    0x10005c6c
10005bee:	mov    DWORD PTR [edx],ecx
10005bf0:	mov    DWORD PTR [ecx+0x8],eax
10005bf3:	jmp    0x10005c6c
10005bf5:	mov    edx,DWORD PTR [edx]
10005bf7:	cmp    BYTE PTR [edx+0x44],bl
10005bfa:	jne    0x10005c13
10005bfc:	mov    BYTE PTR [ecx+0x44],0x1
10005c00:	mov    BYTE PTR [edx+0x44],0x1
10005c04:	mov    edx,DWORD PTR [eax]
10005c06:	mov    ecx,DWORD PTR [edx+0x4]
10005c09:	mov    BYTE PTR [ecx+0x44],bl
10005c0c:	mov    edx,DWORD PTR [eax]
10005c0e:	mov    esi,DWORD PTR [edx+0x4]
10005c11:	jmp    0x10005c6f
10005c13:	cmp    esi,DWORD PTR [ecx]
10005c15:	jne    0x10005c21
10005c17:	mov    esi,ecx
10005c19:	push   esi
10005c1a:	mov    ecx,edi
10005c1c:	call   0x100061b0
10005c21:	mov    eax,DWORD PTR [esi+0x4]
10005c24:	mov    BYTE PTR [eax+0x44],0x1
10005c28:	mov    ecx,DWORD PTR [esi+0x4]
10005c2b:	mov    edx,DWORD PTR [ecx+0x4]
10005c2e:	mov    BYTE PTR [edx+0x44],bl
10005c31:	mov    eax,DWORD PTR [esi+0x4]
10005c34:	mov    eax,DWORD PTR [eax+0x4]
10005c37:	mov    ecx,DWORD PTR [eax+0x8]
10005c3a:	mov    edx,DWORD PTR [ecx]
10005c3c:	mov    DWORD PTR [eax+0x8],edx
10005c3f:	mov    edx,DWORD PTR [ecx]
10005c41:	cmp    BYTE PTR [edx+0x45],bl
10005c44:	jne    0x10005c49
10005c46:	mov    DWORD PTR [edx+0x4],eax
10005c49:	mov    edx,DWORD PTR [eax+0x4]
10005c4c:	mov    DWORD PTR [ecx+0x4],edx
10005c4f:	mov    edx,DWORD PTR [edi+0x4]
10005c52:	cmp    eax,DWORD PTR [edx+0x4]
10005c55:	jne    0x10005c5c
10005c57:	mov    DWORD PTR [edx+0x4],ecx
10005c5a:	jmp    0x10005c6a
10005c5c:	mov    edx,DWORD PTR [eax+0x4]
10005c5f:	cmp    eax,DWORD PTR [edx]
10005c61:	jne    0x10005c67
10005c63:	mov    DWORD PTR [edx],ecx
10005c65:	jmp    0x10005c6a
10005c67:	mov    DWORD PTR [edx+0x8],ecx
10005c6a:	mov    DWORD PTR [ecx],eax
10005c6c:	mov    DWORD PTR [eax+0x4],ecx
10005c6f:	mov    ecx,DWORD PTR [esi+0x4]
10005c72:	cmp    BYTE PTR [ecx+0x44],bl
10005c75:	lea    eax,[esi+0x4]
10005c78:	je     0x10005b47
10005c7e:	mov    ecx,DWORD PTR [esp+0x14]
10005c82:	mov    edx,DWORD PTR [edi+0x4]
10005c85:	mov    eax,DWORD PTR [edx+0x4]
10005c88:	mov    BYTE PTR [eax+0x44],0x1
10005c8c:	mov    eax,DWORD PTR [ebp+0x8]
10005c8f:	mov    DWORD PTR [eax+0x4],ecx
10005c92:	mov    DWORD PTR [eax],edi
10005c94:	mov    ecx,DWORD PTR [esp+0x60]
10005c98:	mov    DWORD PTR fs:0x0,ecx
10005c9f:	pop    ecx
10005ca0:	pop    edi
10005ca1:	pop    esi
10005ca2:	pop    ebx
10005ca3:	mov    esp,ebp
10005ca5:	pop    ebp
10005ca6:	ret    0x10
10005ca9:	int3   
10005caa:	int3   
10005cab:	int3   
10005cac:	int3   
10005cad:	int3   
10005cae:	int3   
10005caf:	int3   
10005cb0:	mov    eax,DWORD PTR [ecx+0x4]
10005cb3:	push   ebp
10005cb4:	push   esi
10005cb5:	mov    esi,DWORD PTR [eax+0x4]
10005cb8:	cmp    BYTE PTR [esi+0x45],0x0
10005cbc:	mov    ebp,eax
10005cbe:	jne    0x10005d06
10005cc0:	push   ebx
10005cc1:	push   edi
10005cc2:	mov    edi,DWORD PTR [esp+0x14]
10005cc6:	lea    ebx,[edi+0x4]
10005cc9:	lea    esp,[esp+0x0]
10005cd0:	cmp    DWORD PTR [edi+0x18],0x8
10005cd4:	mov    edx,DWORD PTR [edi+0x14]
10005cd7:	lea    ecx,[esi+0xc]
10005cda:	jb     0x10005ce0
10005cdc:	mov    eax,DWORD PTR [ebx]
10005cde:	jmp    0x10005ce2
10005ce0:	mov    eax,ebx
10005ce2:	push   edx
10005ce3:	push   eax
10005ce4:	mov    eax,DWORD PTR [ecx+0x14]
10005ce7:	push   eax
10005ce8:	push   0x0
10005cea:	call   0x10006df0
10005cef:	test   eax,eax
10005cf1:	jge    0x10005cf8
10005cf3:	mov    esi,DWORD PTR [esi+0x8]
10005cf6:	jmp    0x10005cfc
10005cf8:	mov    ebp,esi
10005cfa:	mov    esi,DWORD PTR [esi]
10005cfc:	cmp    BYTE PTR [esi+0x45],0x0
10005d00:	je     0x10005cd0
10005d02:	pop    edi
10005d03:	mov    eax,ebp
10005d05:	pop    ebx
10005d06:	pop    esi
10005d07:	pop    ebp
10005d08:	ret    0x4
10005d0b:	int3   
10005d0c:	int3   
10005d0d:	int3   
10005d0e:	int3   
10005d0f:	int3   
10005d10:	push   ebp
10005d11:	mov    ebp,esp
10005d13:	and    esp,0xfffffff8
10005d16:	sub    esp,0xc
10005d19:	push   esi
10005d1a:	mov    esi,ecx
10005d1c:	mov    eax,DWORD PTR [esi+0x4]
10005d1f:	mov    ecx,DWORD PTR [eax]
10005d21:	push   eax
10005d22:	push   esi
10005d23:	push   ecx
10005d24:	push   esi
10005d25:	lea    eax,[esp+0x18]
10005d29:	push   eax
10005d2a:	mov    ecx,esi
10005d2c:	call   0x10006050
10005d31:	mov    ecx,DWORD PTR [esi+0x4]
10005d34:	push   ecx
10005d35:	call   0x1001876e
10005d3a:	add    esp,0x4
10005d3d:	xor    eax,eax
10005d3f:	mov    DWORD PTR [esi+0x4],eax
10005d42:	mov    DWORD PTR [esi+0x8],eax
10005d45:	pop    esi
10005d46:	mov    esp,ebp
10005d48:	pop    ebp
10005d49:	ret    
10005d4a:	int3   
10005d4b:	int3   
10005d4c:	int3   
10005d4d:	int3   
10005d4e:	int3   
10005d4f:	int3   
10005d50:	push   ebp
10005d51:	mov    ebp,esp
10005d53:	and    esp,0xfffffff8
10005d56:	sub    esp,0x14
10005d59:	push   ebx
10005d5a:	push   esi
10005d5b:	push   edi
10005d5c:	mov    edi,ecx
10005d5e:	mov    eax,DWORD PTR [edi+0x4]
10005d61:	mov    ebx,DWORD PTR [eax]
10005d63:	mov    eax,DWORD PTR [ebp+0xc]
10005d66:	test   eax,eax
10005d68:	je     0x10005d6e
10005d6a:	cmp    eax,edi
10005d6c:	je     0x10005d73
10005d6e:	call   0x10018de3
10005d73:	mov    esi,DWORD PTR [ebp+0x10]
10005d76:	cmp    esi,ebx
10005d78:	jne    0x10005dd0
10005d7a:	mov    eax,DWORD PTR [ebp+0x14]
10005d7d:	test   eax,eax
10005d7f:	mov    ebx,DWORD PTR [edi+0x4]
10005d82:	je     0x10005d88
10005d84:	cmp    eax,edi
10005d86:	je     0x10005d8d
10005d88:	call   0x10018de3
10005d8d:	cmp    DWORD PTR [ebp+0x18],ebx
10005d90:	jne    0x10005dd0
10005d92:	mov    ecx,DWORD PTR [edi+0x4]
10005d95:	mov    edx,DWORD PTR [ecx+0x4]
10005d98:	push   edx
10005d99:	mov    ecx,edi
10005d9b:	call   0x10006b90
10005da0:	mov    eax,DWORD PTR [edi+0x4]
10005da3:	mov    DWORD PTR [eax+0x4],eax
10005da6:	mov    eax,DWORD PTR [edi+0x4]
10005da9:	mov    DWORD PTR [edi+0x8],0x0
10005db0:	mov    DWORD PTR [eax],eax
10005db2:	mov    eax,DWORD PTR [edi+0x4]
10005db5:	mov    DWORD PTR [eax+0x8],eax
10005db8:	mov    eax,DWORD PTR [edi+0x4]
10005dbb:	mov    ecx,DWORD PTR [eax]
10005dbd:	mov    eax,DWORD PTR [ebp+0x8]
10005dc0:	mov    DWORD PTR [eax+0x4],ecx
10005dc3:	mov    DWORD PTR [eax],edi
10005dc5:	pop    edi
10005dc6:	pop    esi
10005dc7:	pop    ebx
10005dc8:	mov    esp,ebp
10005dca:	pop    ebp
10005dcb:	ret    0x14
10005dce:	mov    edi,edi
10005dd0:	mov    ebx,DWORD PTR [ebp+0xc]
10005dd3:	test   ebx,ebx
10005dd5:	je     0x10005ddc
10005dd7:	cmp    ebx,DWORD PTR [ebp+0x14]
10005dda:	je     0x10005de1
10005ddc:	call   0x10018de3
10005de1:	cmp    esi,DWORD PTR [ebp+0x18]
10005de4:	je     0x10005e4e
10005de6:	test   ebx,ebx
10005de8:	mov    DWORD PTR [esp+0x14],esi
10005dec:	jne    0x10005df3
10005dee:	call   0x10018de3
10005df3:	cmp    BYTE PTR [esi+0x45],0x0
10005df7:	je     0x10005e00
10005df9:	call   0x10018de3
10005dfe:	jmp    0x10005e3a
10005e00:	mov    eax,DWORD PTR [esi+0x8]
10005e03:	cmp    BYTE PTR [eax+0x45],0x0
10005e07:	jne    0x10005e1f
10005e09:	mov    esi,eax
10005e0b:	mov    eax,DWORD PTR [esi]
10005e0d:	cmp    BYTE PTR [eax+0x45],0x0
10005e11:	jne    0x10005e3a
10005e13:	mov    esi,eax
10005e15:	mov    eax,DWORD PTR [esi]
10005e17:	cmp    BYTE PTR [eax+0x45],0x0
10005e1b:	je     0x10005e13
10005e1d:	jmp    0x10005e3a
10005e1f:	mov    eax,DWORD PTR [esi+0x4]
10005e22:	cmp    BYTE PTR [eax+0x45],0x0
10005e26:	jne    0x10005e38
10005e28:	cmp    esi,DWORD PTR [eax+0x8]
10005e2b:	jne    0x10005e38
10005e2d:	mov    esi,eax
10005e2f:	mov    eax,DWORD PTR [eax+0x4]
10005e32:	cmp    BYTE PTR [eax+0x45],0x0
10005e36:	je     0x10005e28
10005e38:	mov    esi,eax
10005e3a:	mov    edx,DWORD PTR [esp+0x14]
10005e3e:	push   edx
10005e3f:	push   ebx
10005e40:	lea    eax,[esp+0x20]
10005e44:	push   eax
10005e45:	mov    ecx,edi
10005e47:	call   0x100062b0
10005e4c:	jmp    0x10005dd0
10005e4e:	mov    eax,DWORD PTR [ebp+0x8]
10005e51:	pop    edi
10005e52:	mov    DWORD PTR [eax+0x4],esi
10005e55:	pop    esi
10005e56:	mov    DWORD PTR [eax],ebx
10005e58:	pop    ebx
10005e59:	mov    esp,ebp
10005e5b:	pop    ebp
10005e5c:	ret    0x14
10005e5f:	int3   
10005e60:	push   ebp
10005e61:	mov    ebp,esp
10005e63:	push   0xffffffff
10005e65:	push   0x1002d721
10005e6a:	mov    eax,fs:0x0
10005e70:	push   eax
10005e71:	sub    esp,0xc
10005e74:	push   ebx
10005e75:	push   esi
10005e76:	push   edi
10005e77:	mov    eax,ds:0x100c7654
10005e7c:	xor    eax,ebp
10005e7e:	push   eax
10005e7f:	lea    eax,[ebp-0xc]
10005e82:	mov    fs:0x0,eax
10005e88:	mov    DWORD PTR [ebp-0x10],esp
10005e8b:	push   0x48
10005e8d:	call   0x100190b4
10005e92:	mov    esi,eax
10005e94:	mov    DWORD PTR [ebp-0x4],0x0
10005e9b:	add    esp,0x4
10005e9e:	mov    DWORD PTR [ebp-0x14],esi
10005ea1:	mov    DWORD PTR [ebp-0x18],esi
10005ea4:	test   esi,esi
10005ea6:	mov    BYTE PTR [ebp-0x4],0x1
10005eaa:	je     0x10005ed3
10005eac:	mov    eax,DWORD PTR [ebp+0x8]
10005eaf:	mov    ecx,DWORD PTR [ebp+0xc]
10005eb2:	mov    edx,DWORD PTR [ebp+0x10]
10005eb5:	mov    DWORD PTR [esi],eax
10005eb7:	mov    eax,DWORD PTR [ebp+0x14]
10005eba:	mov    DWORD PTR [esi+0x4],ecx
10005ebd:	push   eax
10005ebe:	lea    ecx,[esi+0xc]
10005ec1:	mov    DWORD PTR [esi+0x8],edx
10005ec4:	call   0x10006a90
10005ec9:	mov    cl,BYTE PTR [ebp+0x18]
10005ecc:	mov    BYTE PTR [esi+0x44],cl
10005ecf:	mov    BYTE PTR [esi+0x45],0x0
10005ed3:	mov    eax,esi
10005ed5:	mov    ecx,DWORD PTR [ebp-0xc]
10005ed8:	mov    DWORD PTR fs:0x0,ecx
10005edf:	pop    ecx
10005ee0:	pop    edi
10005ee1:	pop    esi
10005ee2:	pop    ebx
10005ee3:	mov    esp,ebp
10005ee5:	pop    ebp
10005ee6:	ret    0x14
10005ee9:	mov    edx,DWORD PTR [ebp-0x14]
10005eec:	push   edx
10005eed:	call   0x1001876e
10005ef2:	add    esp,0x4
10005ef5:	push   0x0
10005ef7:	push   0x0
10005ef9:	call   0x10018e6e
10005efe:	int3   
10005eff:	int3   
10005f00:	push   ebp
10005f01:	mov    ebp,esp
10005f03:	push   0xffffffff
10005f05:	push   0x1002d520
10005f0a:	mov    eax,fs:0x0
10005f10:	push   eax
10005f11:	sub    esp,0xc
10005f14:	push   ebx
10005f15:	push   esi
10005f16:	push   edi
10005f17:	mov    eax,ds:0x100c7654
10005f1c:	xor    eax,ebp
10005f1e:	push   eax
10005f1f:	lea    eax,[ebp-0xc]
10005f22:	mov    fs:0x0,eax
10005f28:	mov    DWORD PTR [ebp-0x10],esp
10005f2b:	mov    edi,ecx
10005f2d:	mov    DWORD PTR [ebp-0x14],edi
10005f30:	mov    eax,DWORD PTR [ebp+0x8]
10005f33:	mov    esi,eax
10005f35:	or     esi,0x7
10005f38:	cmp    esi,0x7ffffffe
10005f3e:	jbe    0x10005f44
10005f40:	mov    esi,eax
10005f42:	jmp    0x10005f66
10005f44:	mov    ebx,DWORD PTR [edi+0x18]
10005f47:	mov    eax,0xaaaaaaab
10005f4c:	mul    esi
10005f4e:	mov    ecx,ebx
10005f50:	shr    ecx,1
10005f52:	shr    edx,1
10005f54:	cmp    edx,ecx
10005f56:	jae    0x10005f66
10005f58:	mov    eax,0x7ffffffe
10005f5d:	sub    eax,ecx
10005f5f:	cmp    ebx,eax
10005f61:	ja     0x10005f66
10005f63:	lea    esi,[ecx+ebx*1]
10005f66:	lea    ecx,[esi+0x1]
10005f69:	push   ecx
10005f6a:	mov    ecx,edi
10005f6c:	mov    DWORD PTR [ebp-0x4],0x0
10005f73:	call   0x10006710
10005f78:	mov    DWORD PTR [ebp+0x8],eax
10005f7b:	jmp    0x10005fa5
10005f7d:	mov    eax,DWORD PTR [ebp+0x8]
10005f80:	mov    ecx,DWORD PTR [ebp-0x14]
10005f83:	mov    DWORD PTR [ebp-0x18],eax
10005f86:	add    eax,0x1
10005f89:	mov    DWORD PTR [ebp-0x10],esp
10005f8c:	push   eax
10005f8d:	mov    BYTE PTR [ebp-0x4],0x2
10005f91:	call   0x10006710
10005f96:	mov    DWORD PTR [ebp+0x8],eax
10005f99:	mov    eax,0x10005f9f
10005f9e:	ret    
10005f9f:	mov    edi,DWORD PTR [ebp-0x14]
10005fa2:	mov    esi,DWORD PTR [ebp-0x18]
10005fa5:	mov    ebx,DWORD PTR [ebp+0xc]
10005fa8:	test   ebx,ebx
10005faa:	jbe    0x10005fd0
10005fac:	cmp    DWORD PTR [edi+0x18],0x8
10005fb0:	jb     0x10005fb7
10005fb2:	mov    eax,DWORD PTR [edi+0x4]
10005fb5:	jmp    0x10005fba
10005fb7:	lea    eax,[edi+0x4]
10005fba:	mov    ecx,DWORD PTR [ebp+0x8]
10005fbd:	lea    edx,[ebx+ebx*1]
10005fc0:	push   edx
10005fc1:	push   eax
10005fc2:	lea    eax,[esi+esi*1+0x2]
10005fc6:	push   eax
10005fc7:	push   ecx
10005fc8:	call   0x10018df3
10005fcd:	add    esp,0x10
10005fd0:	cmp    DWORD PTR [edi+0x18],0x8
10005fd4:	jb     0x10005fe2
10005fd6:	mov    edx,DWORD PTR [edi+0x4]
10005fd9:	push   edx
10005fda:	call   0x1001876e
10005fdf:	add    esp,0x4
10005fe2:	cmp    esi,0x8
10005fe5:	mov    ecx,DWORD PTR [ebp+0x8]
10005fe8:	lea    eax,[edi+0x4]
10005feb:	mov    WORD PTR [eax],0x0
10005ff0:	mov    DWORD PTR [eax],ecx
10005ff2:	mov    DWORD PTR [edi+0x18],esi
10005ff5:	mov    DWORD PTR [edi+0x14],ebx
10005ff8:	jb     0x10005ffc
10005ffa:	mov    eax,ecx
10005ffc:	mov    WORD PTR [eax+ebx*2],0x0
10006002:	mov    ecx,DWORD PTR [ebp-0xc]
10006005:	mov    DWORD PTR fs:0x0,ecx
1000600c:	pop    ecx
1000600d:	pop    edi
1000600e:	pop    esi
1000600f:	pop    ebx
10006010:	mov    esp,ebp
10006012:	pop    ebp
10006013:	ret    0x8
10006016:	mov    esi,DWORD PTR [ebp-0x14]
10006019:	cmp    DWORD PTR [esi+0x18],0x8
1000601d:	jb     0x1000602b
1000601f:	mov    eax,DWORD PTR [esi+0x4]
10006022:	push   eax
10006023:	call   0x1001876e
10006028:	add    esp,0x4
1000602b:	xor    eax,eax
1000602d:	push   eax
1000602e:	mov    DWORD PTR [esi+0x18],0x7
10006035:	mov    DWORD PTR [esi+0x14],eax
10006038:	push   eax
10006039:	mov    WORD PTR [esi+0x4],ax
1000603d:	call   0x10018e6e
10006042:	int3   
10006043:	int3   
10006044:	int3   
10006045:	int3   
10006046:	int3   
10006047:	int3   
10006048:	int3   
10006049:	int3   
1000604a:	int3   
1000604b:	int3   
1000604c:	int3   
1000604d:	int3   
1000604e:	int3   
1000604f:	int3   
10006050:	push   ebp
10006051:	mov    ebp,esp
10006053:	and    esp,0xfffffff8
10006056:	sub    esp,0x14
10006059:	push   ebx
1000605a:	push   esi
1000605b:	push   edi
1000605c:	mov    edi,ecx
1000605e:	mov    eax,DWORD PTR [edi+0x4]
10006061:	mov    ebx,DWORD PTR [eax]
10006063:	mov    eax,DWORD PTR [ebp+0xc]
10006066:	test   eax,eax
10006068:	je     0x1000606e
1000606a:	cmp    eax,edi
1000606c:	je     0x10006073
1000606e:	call   0x10018de3
10006073:	mov    esi,DWORD PTR [ebp+0x10]
10006076:	cmp    esi,ebx
10006078:	jne    0x100060d0
1000607a:	mov    eax,DWORD PTR [ebp+0x14]
1000607d:	test   eax,eax
1000607f:	mov    ebx,DWORD PTR [edi+0x4]
10006082:	je     0x10006088
10006084:	cmp    eax,edi
10006086:	je     0x1000608d
10006088:	call   0x10018de3
1000608d:	cmp    DWORD PTR [ebp+0x18],ebx
10006090:	jne    0x100060d0
10006092:	mov    ecx,DWORD PTR [edi+0x4]
10006095:	mov    edx,DWORD PTR [ecx+0x4]
10006098:	push   edx
10006099:	mov    ecx,edi
1000609b:	call   0x10006c30
100060a0:	mov    eax,DWORD PTR [edi+0x4]
100060a3:	mov    DWORD PTR [eax+0x4],eax
100060a6:	mov    eax,DWORD PTR [edi+0x4]
100060a9:	mov    DWORD PTR [edi+0x8],0x0
100060b0:	mov    DWORD PTR [eax],eax
100060b2:	mov    eax,DWORD PTR [edi+0x4]
100060b5:	mov    DWORD PTR [eax+0x8],eax
100060b8:	mov    eax,DWORD PTR [edi+0x4]
100060bb:	mov    ecx,DWORD PTR [eax]
100060bd:	mov    eax,DWORD PTR [ebp+0x8]
100060c0:	mov    DWORD PTR [eax+0x4],ecx
100060c3:	mov    DWORD PTR [eax],edi
100060c5:	pop    edi
100060c6:	pop    esi
100060c7:	pop    ebx
100060c8:	mov    esp,ebp
100060ca:	pop    ebp
100060cb:	ret    0x14
100060ce:	mov    edi,edi
100060d0:	mov    ebx,DWORD PTR [ebp+0xc]
100060d3:	test   ebx,ebx
100060d5:	je     0x100060dc
100060d7:	cmp    ebx,DWORD PTR [ebp+0x14]
100060da:	je     0x100060e1
100060dc:	call   0x10018de3
100060e1:	cmp    esi,DWORD PTR [ebp+0x18]
100060e4:	je     0x1000614e
100060e6:	test   ebx,ebx
100060e8:	mov    DWORD PTR [esp+0x14],esi
100060ec:	jne    0x100060f3
100060ee:	call   0x10018de3
100060f3:	cmp    BYTE PTR [esi+0x45],0x0
100060f7:	je     0x10006100
100060f9:	call   0x10018de3
100060fe:	jmp    0x1000613a
10006100:	mov    eax,DWORD PTR [esi+0x8]
10006103:	cmp    BYTE PTR [eax+0x45],0x0
10006107:	jne    0x1000611f
10006109:	mov    esi,eax
1000610b:	mov    eax,DWORD PTR [esi]
1000610d:	cmp    BYTE PTR [eax+0x45],0x0
10006111:	jne    0x1000613a
10006113:	mov    esi,eax
10006115:	mov    eax,DWORD PTR [esi]
10006117:	cmp    BYTE PTR [eax+0x45],0x0
1000611b:	je     0x10006113
1000611d:	jmp    0x1000613a
1000611f:	mov    eax,DWORD PTR [esi+0x4]
10006122:	cmp    BYTE PTR [eax+0x45],0x0
10006126:	jne    0x10006138
10006128:	cmp    esi,DWORD PTR [eax+0x8]
1000612b:	jne    0x10006138
1000612d:	mov    esi,eax
1000612f:	mov    eax,DWORD PTR [eax+0x4]
10006132:	cmp    BYTE PTR [eax+0x45],0x0
10006136:	je     0x10006128
10006138:	mov    esi,eax
1000613a:	mov    edx,DWORD PTR [esp+0x14]
1000613e:	push   edx
1000613f:	push   ebx
10006140:	lea    eax,[esp+0x20]
10006144:	push   eax
10006145:	mov    ecx,edi
10006147:	call   0x10006770
1000614c:	jmp    0x100060d0
1000614e:	mov    eax,DWORD PTR [ebp+0x8]
10006151:	pop    edi
10006152:	mov    DWORD PTR [eax+0x4],esi
10006155:	pop    esi
10006156:	mov    DWORD PTR [eax],ebx
10006158:	pop    ebx
10006159:	mov    esp,ebp
1000615b:	pop    ebp
1000615c:	ret    0x14
1000615f:	int3   
10006160:	mov    edx,DWORD PTR [esp+0x4]
10006164:	mov    eax,DWORD PTR [edx+0x8]
10006167:	push   esi
10006168:	mov    esi,DWORD PTR [eax]
1000616a:	mov    DWORD PTR [edx+0x8],esi
1000616d:	mov    esi,DWORD PTR [eax]
1000616f:	cmp    BYTE PTR [esi+0x45],0x0
10006173:	jne    0x10006178
10006175:	mov    DWORD PTR [esi+0x4],edx
10006178:	mov    esi,DWORD PTR [edx+0x4]
1000617b:	mov    DWORD PTR [eax+0x4],esi
1000617e:	mov    ecx,DWORD PTR [ecx+0x4]
10006181:	cmp    edx,DWORD PTR [ecx+0x4]
10006184:	pop    esi
10006185:	jne    0x10006192
10006187:	mov    DWORD PTR [ecx+0x4],eax
1000618a:	mov    DWORD PTR [eax],edx
1000618c:	mov    DWORD PTR [edx+0x4],eax
1000618f:	ret    0x4
10006192:	mov    ecx,DWORD PTR [edx+0x4]
10006195:	cmp    edx,DWORD PTR [ecx]
10006197:	jne    0x100061a3
10006199:	mov    DWORD PTR [ecx],eax
1000619b:	mov    DWORD PTR [eax],edx
1000619d:	mov    DWORD PTR [edx+0x4],eax
100061a0:	ret    0x4
100061a3:	mov    DWORD PTR [ecx+0x8],eax
100061a6:	mov    DWORD PTR [eax],edx
100061a8:	mov    DWORD PTR [edx+0x4],eax
100061ab:	ret    0x4
100061ae:	int3   
100061af:	int3   
100061b0:	mov    edx,DWORD PTR [esp+0x4]
100061b4:	mov    eax,DWORD PTR [edx]
100061b6:	push   esi
100061b7:	mov    esi,DWORD PTR [eax+0x8]
100061ba:	mov    DWORD PTR [edx],esi
100061bc:	mov    esi,DWORD PTR [eax+0x8]
100061bf:	cmp    BYTE PTR [esi+0x45],0x0
100061c3:	jne    0x100061c8
100061c5:	mov    DWORD PTR [esi+0x4],edx
100061c8:	mov    esi,DWORD PTR [edx+0x4]
100061cb:	mov    DWORD PTR [eax+0x4],esi
100061ce:	mov    ecx,DWORD PTR [ecx+0x4]
100061d1:	cmp    edx,DWORD PTR [ecx+0x4]
100061d4:	pop    esi
100061d5:	jne    0x100061e3
100061d7:	mov    DWORD PTR [ecx+0x4],eax
100061da:	mov    DWORD PTR [eax+0x8],edx
100061dd:	mov    DWORD PTR [edx+0x4],eax
100061e0:	ret    0x4
100061e3:	mov    ecx,DWORD PTR [edx+0x4]
100061e6:	cmp    edx,DWORD PTR [ecx+0x8]
100061e9:	jne    0x100061f7
100061eb:	mov    DWORD PTR [ecx+0x8],eax
100061ee:	mov    DWORD PTR [eax+0x8],edx
100061f1:	mov    DWORD PTR [edx+0x4],eax
100061f4:	ret    0x4
100061f7:	mov    DWORD PTR [ecx],eax
100061f9:	mov    DWORD PTR [eax+0x8],edx
100061fc:	mov    DWORD PTR [edx+0x4],eax
100061ff:	ret    0x4
10006202:	int3   
10006203:	int3   
10006204:	int3   
10006205:	int3   
10006206:	int3   
10006207:	int3   
10006208:	int3   
10006209:	int3   
1000620a:	int3   
1000620b:	int3   
1000620c:	int3   
1000620d:	int3   
1000620e:	int3   
1000620f:	int3   
10006210:	push   ebp
10006211:	mov    ebp,esp
10006213:	push   0xffffffff
10006215:	push   0x1002d6f1
1000621a:	mov    eax,fs:0x0
10006220:	push   eax
10006221:	sub    esp,0xc
10006224:	push   ebx
10006225:	push   esi
10006226:	push   edi
10006227:	mov    eax,ds:0x100c7654
1000622c:	xor    eax,ebp
1000622e:	push   eax
1000622f:	lea    eax,[ebp-0xc]
10006232:	mov    fs:0x0,eax
10006238:	mov    DWORD PTR [ebp-0x10],esp
1000623b:	push   0x48
1000623d:	call   0x100190b4
10006242:	mov    esi,eax
10006244:	mov    DWORD PTR [ebp-0x4],0x0
1000624b:	add    esp,0x4
1000624e:	mov    DWORD PTR [ebp-0x14],esi
10006251:	mov    DWORD PTR [ebp-0x18],esi
10006254:	test   esi,esi
10006256:	mov    BYTE PTR [ebp-0x4],0x1
1000625a:	je     0x10006283
1000625c:	mov    eax,DWORD PTR [ebp+0x8]
1000625f:	mov    ecx,DWORD PTR [ebp+0xc]
10006262:	mov    edx,DWORD PTR [ebp+0x10]
10006265:	mov    DWORD PTR [esi],eax
10006267:	mov    eax,DWORD PTR [ebp+0x14]
1000626a:	mov    DWORD PTR [esi+0x4],ecx
1000626d:	push   eax
1000626e:	lea    ecx,[esi+0xc]
10006271:	mov    DWORD PTR [esi+0x8],edx
10006274:	call   0x10006b10
10006279:	mov    cl,BYTE PTR [ebp+0x18]
1000627c:	mov    BYTE PTR [esi+0x44],cl
1000627f:	mov    BYTE PTR [esi+0x45],0x0
10006283:	mov    eax,esi
10006285:	mov    ecx,DWORD PTR [ebp-0xc]
10006288:	mov    DWORD PTR fs:0x0,ecx
1000628f:	pop    ecx
10006290:	pop    edi
10006291:	pop    esi
10006292:	pop    ebx
10006293:	mov    esp,ebp
10006295:	pop    ebp
10006296:	ret    0x14
10006299:	mov    edx,DWORD PTR [ebp-0x14]
1000629c:	push   edx
1000629d:	call   0x1001876e
100062a2:	add    esp,0x4
100062a5:	push   0x0
100062a7:	push   0x0
100062a9:	call   0x10018e6e
100062ae:	int3   
100062af:	int3   
100062b0:	push   ebp
100062b1:	mov    ebp,esp
100062b3:	and    esp,0xfffffff8
100062b6:	push   0xffffffff
100062b8:	push   0x1002da68
100062bd:	mov    eax,fs:0x0
100062c3:	push   eax
100062c4:	sub    esp,0x50
100062c7:	push   ebx
100062c8:	push   esi
100062c9:	push   edi
100062ca:	mov    eax,ds:0x100c7654
100062cf:	xor    eax,esp
100062d1:	push   eax
100062d2:	lea    eax,[esp+0x60]
100062d6:	mov    fs:0x0,eax
100062dc:	mov    DWORD PTR [esp+0x14],ecx
100062e0:	mov    edi,DWORD PTR [ebp+0x10]
100062e3:	cmp    BYTE PTR [edi+0x45],0x0
100062e7:	je     0x10006335
100062e9:	push   0x1b
100062eb:	xor    esi,esi
100062ed:	push   0x100b7e30
100062f2:	lea    ecx,[esp+0x20]
100062f6:	mov    DWORD PTR [esp+0x38],0xf
100062fe:	mov    DWORD PTR [esp+0x34],esi
10006302:	mov    BYTE PTR [esp+0x24],0x0
10006307:	call   0x10003a70
1000630c:	lea    eax,[esp+0x18]
10006310:	push   eax
10006311:	lea    ecx,[esp+0x38]
10006315:	mov    DWORD PTR [esp+0x6c],esi
10006319:	call   0x10001400
1000631e:	push   0x100bb9d8
10006323:	lea    ecx,[esp+0x38]
10006327:	push   ecx
10006328:	mov    DWORD PTR [esp+0x3c],0x1002f51c
10006330:	call   0x10018e6e
10006335:	lea    ecx,[ebp+0xc]
10006338:	call   0x100066a0
1000633d:	mov    ecx,DWORD PTR [edi]
1000633f:	cmp    BYTE PTR [ecx+0x45],0x0
10006343:	je     0x1000634a
10006345:	mov    ebx,DWORD PTR [edi+0x8]
10006348:	jmp    0x10006361
1000634a:	mov    edx,DWORD PTR [edi+0x8]
1000634d:	cmp    BYTE PTR [edx+0x45],0x0
10006351:	je     0x10006357
10006353:	mov    ebx,ecx
10006355:	jmp    0x10006361
10006357:	mov    eax,DWORD PTR [ebp+0x10]
1000635a:	cmp    eax,edi
1000635c:	mov    ebx,DWORD PTR [eax+0x8]
1000635f:	jne    0x100063dd
10006361:	cmp    BYTE PTR [ebx+0x45],0x0
10006365:	mov    esi,DWORD PTR [edi+0x4]
10006368:	jne    0x1000636d
1000636a:	mov    DWORD PTR [ebx+0x4],esi
1000636d:	mov    ecx,DWORD PTR [esp+0x14]
10006371:	mov    eax,DWORD PTR [ecx+0x4]
10006374:	cmp    DWORD PTR [eax+0x4],edi
10006377:	jne    0x1000637e
10006379:	mov    DWORD PTR [eax+0x4],ebx
1000637c:	jmp    0x10006389
1000637e:	cmp    DWORD PTR [esi],edi
10006380:	jne    0x10006386
10006382:	mov    DWORD PTR [esi],ebx
10006384:	jmp    0x10006389
10006386:	mov    DWORD PTR [esi+0x8],ebx
10006389:	mov    eax,DWORD PTR [ecx+0x4]
1000638c:	cmp    DWORD PTR [eax],edi
1000638e:	jne    0x100063ac
10006390:	cmp    BYTE PTR [ebx+0x45],0x0
10006394:	je     0x1000639a
10006396:	mov    eax,esi
10006398:	jmp    0x100063a7
1000639a:	push   ebx
1000639b:	call   0x10006cb0
100063a0:	mov    ecx,DWORD PTR [esp+0x18]
100063a4:	add    esp,0x4
100063a7:	mov    edx,DWORD PTR [ecx+0x4]
100063aa:	mov    DWORD PTR [edx],eax
100063ac:	mov    eax,DWORD PTR [ecx+0x4]
100063af:	cmp    DWORD PTR [eax+0x8],edi
100063b2:	jne    0x1000643c
100063b8:	cmp    BYTE PTR [ebx+0x45],0x0
100063bc:	je     0x100063c8
100063be:	mov    edx,DWORD PTR [ecx+0x4]
100063c1:	mov    eax,esi
100063c3:	mov    DWORD PTR [edx+0x8],eax
100063c6:	jmp    0x1000643c
100063c8:	push   ebx
100063c9:	call   0x10006c10
100063ce:	mov    ecx,DWORD PTR [esp+0x18]
100063d2:	mov    edx,DWORD PTR [ecx+0x4]
100063d5:	add    esp,0x4
100063d8:	mov    DWORD PTR [edx+0x8],eax
100063db:	jmp    0x1000643c
100063dd:	mov    DWORD PTR [ecx+0x4],eax
100063e0:	mov    ecx,DWORD PTR [edi]
100063e2:	mov    DWORD PTR [eax],ecx
100063e4:	cmp    eax,DWORD PTR [edi+0x8]
100063e7:	jne    0x100063ed
100063e9:	mov    esi,eax
100063eb:	jmp    0x10006407
100063ed:	cmp    BYTE PTR [ebx+0x45],0x0
100063f1:	mov    esi,DWORD PTR [eax+0x4]
100063f4:	jne    0x100063f9
100063f6:	mov    DWORD PTR [ebx+0x4],esi
100063f9:	mov    DWORD PTR [esi],ebx
100063fb:	mov    edx,DWORD PTR [edi+0x8]
100063fe:	mov    DWORD PTR [eax+0x8],edx
10006401:	mov    ecx,DWORD PTR [edi+0x8]
10006404:	mov    DWORD PTR [ecx+0x4],eax
10006407:	mov    edx,DWORD PTR [esp+0x14]
1000640b:	mov    ecx,DWORD PTR [edx+0x4]
1000640e:	cmp    DWORD PTR [ecx+0x4],edi
10006411:	jne    0x10006418
10006413:	mov    DWORD PTR [ecx+0x4],eax
10006416:	jmp    0x10006426
10006418:	mov    ecx,DWORD PTR [edi+0x4]
1000641b:	cmp    DWORD PTR [ecx],edi
1000641d:	jne    0x10006423
1000641f:	mov    DWORD PTR [ecx],eax
10006421:	jmp    0x10006426
10006423:	mov    DWORD PTR [ecx+0x8],eax
10006426:	mov    ecx,DWORD PTR [edi+0x4]
10006429:	mov    DWORD PTR [eax+0x4],ecx
1000642c:	mov    cl,BYTE PTR [eax+0x44]
1000642f:	mov    dl,BYTE PTR [edi+0x44]
10006432:	mov    BYTE PTR [eax+0x44],dl
10006435:	mov    BYTE PTR [edi+0x44],cl
10006438:	mov    ecx,DWORD PTR [esp+0x14]
1000643c:	cmp    BYTE PTR [edi+0x44],0x1
10006440:	jne    0x10006551
10006446:	mov    eax,DWORD PTR [ecx+0x4]
10006449:	cmp    ebx,DWORD PTR [eax+0x4]
1000644c:	je     0x1000654d
10006452:	cmp    BYTE PTR [ebx+0x44],0x1
10006456:	jne    0x1000654d
1000645c:	mov    eax,DWORD PTR [esi]
1000645e:	cmp    ebx,eax
10006460:	jne    0x100064d0
10006462:	mov    eax,DWORD PTR [esi+0x8]
10006465:	cmp    BYTE PTR [eax+0x44],0x0
10006469:	jne    0x10006480
1000646b:	mov    BYTE PTR [eax+0x44],0x1
1000646f:	push   esi
10006470:	mov    BYTE PTR [esi+0x44],0x0
10006474:	call   0x10006160
10006479:	mov    eax,DWORD PTR [esi+0x8]
1000647c:	mov    ecx,DWORD PTR [esp+0x14]
10006480:	cmp    BYTE PTR [eax+0x45],0x0
10006484:	jne    0x10006505
10006486:	mov    edx,DWORD PTR [eax]
10006488:	cmp    BYTE PTR [edx+0x44],0x1
1000648c:	jne    0x10006497
1000648e:	mov    edx,DWORD PTR [eax+0x8]
10006491:	cmp    BYTE PTR [edx+0x44],0x1
10006495:	je     0x10006501
10006497:	mov    edx,DWORD PTR [eax+0x8]
1000649a:	cmp    BYTE PTR [edx+0x44],0x1
1000649e:	jne    0x100064b7
100064a0:	mov    edx,DWORD PTR [eax]
100064a2:	mov    BYTE PTR [edx+0x44],0x1
100064a6:	push   eax
100064a7:	mov    BYTE PTR [eax+0x44],0x0
100064ab:	call   0x100061b0
100064b0:	mov    eax,DWORD PTR [esi+0x8]
100064b3:	mov    ecx,DWORD PTR [esp+0x14]
100064b7:	mov    dl,BYTE PTR [esi+0x44]
100064ba:	mov    BYTE PTR [eax+0x44],dl
100064bd:	mov    BYTE PTR [esi+0x44],0x1
100064c1:	mov    eax,DWORD PTR [eax+0x8]
100064c4:	push   esi
100064c5:	mov    BYTE PTR [eax+0x44],0x1
100064c9:	call   0x10006160
100064ce:	jmp    0x1000654d
100064d0:	cmp    BYTE PTR [eax+0x44],0x0
100064d4:	jne    0x100064ea
100064d6:	mov    BYTE PTR [eax+0x44],0x1
100064da:	push   esi
100064db:	mov    BYTE PTR [esi+0x44],0x0
100064df:	call   0x100061b0
100064e4:	mov    eax,DWORD PTR [esi]
100064e6:	mov    ecx,DWORD PTR [esp+0x14]
100064ea:	cmp    BYTE PTR [eax+0x45],0x0
100064ee:	jne    0x10006505
100064f0:	mov    edx,DWORD PTR [eax+0x8]
100064f3:	cmp    BYTE PTR [edx+0x44],0x1
100064f7:	jne    0x10006518
100064f9:	mov    edx,DWORD PTR [eax]
100064fb:	cmp    BYTE PTR [edx+0x44],0x1
100064ff:	jne    0x10006518
10006501:	mov    BYTE PTR [eax+0x44],0x0
10006505:	mov    eax,DWORD PTR [ecx+0x4]
10006508:	mov    ebx,esi
1000650a:	cmp    ebx,DWORD PTR [eax+0x4]
1000650d:	mov    esi,DWORD PTR [esi+0x4]
10006510:	jne    0x10006452
10006516:	jmp    0x1000654d
10006518:	mov    edx,DWORD PTR [eax]
1000651a:	cmp    BYTE PTR [edx+0x44],0x1
1000651e:	jne    0x10006537
10006520:	mov    edx,DWORD PTR [eax+0x8]
10006523:	mov    BYTE PTR [edx+0x44],0x1
10006527:	push   eax
10006528:	mov    BYTE PTR [eax+0x44],0x0
1000652c:	call   0x10006160
10006531:	mov    eax,DWORD PTR [esi]
10006533:	mov    ecx,DWORD PTR [esp+0x14]
10006537:	mov    dl,BYTE PTR [esi+0x44]
1000653a:	mov    BYTE PTR [eax+0x44],dl
1000653d:	mov    BYTE PTR [esi+0x44],0x1
10006541:	mov    eax,DWORD PTR [eax]
10006543:	push   esi
10006544:	mov    BYTE PTR [eax+0x44],0x1
10006548:	call   0x100061b0
1000654d:	mov    BYTE PTR [ebx+0x44],0x1
10006551:	cmp    DWORD PTR [edi+0x40],0x10
10006555:	jb     0x10006563
10006557:	mov    ecx,DWORD PTR [edi+0x2c]
1000655a:	push   ecx
1000655b:	call   0x1001876e
10006560:	add    esp,0x4
10006563:	xor    esi,esi
10006565:	mov    ebx,0xf
1000656a:	mov    DWORD PTR [edi+0x40],ebx
1000656d:	mov    DWORD PTR [edi+0x3c],esi
10006570:	mov    BYTE PTR [edi+0x2c],0x0
10006574:	cmp    DWORD PTR [edi+0x24],0x10
10006578:	jb     0x10006586
1000657a:	mov    edx,DWORD PTR [edi+0x10]
1000657d:	push   edx
1000657e:	call   0x1001876e
10006583:	add    esp,0x4
10006586:	mov    DWORD PTR [edi+0x24],ebx
10006589:	mov    DWORD PTR [edi+0x20],esi
1000658c:	push   edi
1000658d:	mov    BYTE PTR [edi+0x10],0x0
10006591:	call   0x1001876e
10006596:	mov    ecx,DWORD PTR [esp+0x18]
1000659a:	mov    eax,DWORD PTR [ecx+0x8]
1000659d:	add    esp,0x4
100065a0:	cmp    eax,esi
100065a2:	jbe    0x100065aa
100065a4:	add    eax,0xffffffff
100065a7:	mov    DWORD PTR [ecx+0x8],eax
100065aa:	mov    eax,DWORD PTR [ebp+0x8]
100065ad:	mov    ecx,DWORD PTR [ebp+0xc]
100065b0:	mov    edx,DWORD PTR [ebp+0x10]
100065b3:	mov    DWORD PTR [eax],ecx
100065b5:	mov    DWORD PTR [eax+0x4],edx
100065b8:	mov    ecx,DWORD PTR [esp+0x60]
100065bc:	mov    DWORD PTR fs:0x0,ecx
100065c3:	pop    ecx
100065c4:	pop    edi
100065c5:	pop    esi
100065c6:	pop    ebx
100065c7:	mov    esp,ebp
100065c9:	pop    ebp
100065ca:	ret    0xc
100065cd:	int3   
100065ce:	int3   
100065cf:	int3   
100065d0:	push   0x48
100065d2:	call   0x100190b4
100065d7:	add    esp,0x4
100065da:	test   eax,eax
100065dc:	je     0x100065e4
100065de:	mov    DWORD PTR [eax],0x0
100065e4:	lea    ecx,[eax+0x4]
100065e7:	test   ecx,ecx
100065e9:	je     0x100065f1
100065eb:	mov    DWORD PTR [ecx],0x0
100065f1:	lea    ecx,[eax+0x8]
100065f4:	test   ecx,ecx
100065f6:	je     0x100065fe
100065f8:	mov    DWORD PTR [ecx],0x0
100065fe:	mov    BYTE PTR [eax+0x44],0x1
10006602:	mov    BYTE PTR [eax+0x45],0x0
10006606:	ret    
10006607:	int3   
10006608:	int3   
10006609:	int3   
1000660a:	int3   
1000660b:	int3   
1000660c:	int3   
1000660d:	int3   
1000660e:	int3   
1000660f:	int3   
10006610:	push   esi
10006611:	mov    esi,ecx
10006613:	cmp    DWORD PTR [esi],0x0
10006616:	jne    0x1000661d
10006618:	call   0x10018de3
1000661d:	mov    eax,DWORD PTR [esi+0x4]
10006620:	cmp    BYTE PTR [eax+0x45],0x0
10006624:	je     0x10006638
10006626:	mov    eax,DWORD PTR [eax+0x8]
10006629:	mov    DWORD PTR [esi+0x4],eax
1000662c:	cmp    BYTE PTR [eax+0x45],0x0
10006630:	je     0x10006697
10006632:	pop    esi
10006633:	jmp    0x10018de3
10006638:	mov    ecx,DWORD PTR [eax]
1000663a:	cmp    BYTE PTR [ecx+0x45],0x0
1000663e:	jne    0x10006660
10006640:	mov    eax,DWORD PTR [ecx+0x8]
10006643:	cmp    BYTE PTR [eax+0x45],0x0
10006647:	jne    0x1000665b
10006649:	lea    esp,[esp+0x0]
10006650:	mov    ecx,eax
10006652:	mov    eax,DWORD PTR [ecx+0x8]
10006655:	cmp    BYTE PTR [eax+0x45],0x0
10006659:	je     0x10006650
1000665b:	mov    DWORD PTR [esi+0x4],ecx
1000665e:	pop    esi
1000665f:	ret    
10006660:	mov    eax,DWORD PTR [eax+0x4]
10006663:	cmp    BYTE PTR [eax+0x45],0x0
10006667:	jne    0x10006685
10006669:	lea    esp,[esp+0x0]
10006670:	mov    ecx,DWORD PTR [esi+0x4]
10006673:	cmp    ecx,DWORD PTR [eax]
10006675:	jne    0x10006685
10006677:	mov    DWORD PTR [esi+0x4],eax
1000667a:	mov    edx,eax
1000667c:	mov    eax,DWORD PTR [edx+0x4]
1000667f:	cmp    BYTE PTR [eax+0x45],0x0
10006683:	je     0x10006670
10006685:	mov    ecx,DWORD PTR [esi+0x4]
10006688:	cmp    BYTE PTR [ecx+0x45],0x0
1000668c:	je     0x10006694
1000668e:	pop    esi
1000668f:	jmp    0x10018de3
10006694:	mov    DWORD PTR [esi+0x4],eax
10006697:	pop    esi
10006698:	ret    
10006699:	int3   
1000669a:	int3   
1000669b:	int3   
1000669c:	int3   
1000669d:	int3   
1000669e:	int3   
1000669f:	int3   
100066a0:	push   esi
100066a1:	mov    esi,ecx
100066a3:	cmp    DWORD PTR [esi],0x0
100066a6:	jne    0x100066ad
100066a8:	call   0x10018de3
100066ad:	mov    eax,DWORD PTR [esi+0x4]
100066b0:	cmp    BYTE PTR [eax+0x45],0x0
100066b4:	je     0x100066bc
100066b6:	pop    esi
100066b7:	jmp    0x10018de3
100066bc:	mov    ecx,DWORD PTR [eax+0x8]
100066bf:	cmp    BYTE PTR [ecx+0x45],0x0
100066c3:	jne    0x100066df
100066c5:	mov    eax,DWORD PTR [ecx]
100066c7:	cmp    BYTE PTR [eax+0x45],0x0
100066cb:	jne    0x100066da
100066cd:	lea    ecx,[ecx+0x0]
100066d0:	mov    ecx,eax
100066d2:	mov    eax,DWORD PTR [ecx]
100066d4:	cmp    BYTE PTR [eax+0x45],0x0
100066d8:	je     0x100066d0
100066da:	mov    DWORD PTR [esi+0x4],ecx
100066dd:	pop    esi
100066de:	ret    
100066df:	mov    eax,DWORD PTR [eax+0x4]
100066e2:	cmp    BYTE PTR [eax+0x45],0x0
100066e6:	jne    0x100066fe
100066e8:	mov    ecx,DWORD PTR [esi+0x4]
100066eb:	cmp    ecx,DWORD PTR [eax+0x8]
100066ee:	jne    0x100066fe
100066f0:	mov    DWORD PTR [esi+0x4],eax
100066f3:	mov    edx,eax
100066f5:	mov    eax,DWORD PTR [edx+0x4]
100066f8:	cmp    BYTE PTR [eax+0x45],0x0
100066fc:	je     0x100066e8
100066fe:	mov    DWORD PTR [esi+0x4],eax
10006701:	pop    esi
10006702:	ret    
10006703:	int3   
10006704:	int3   
10006705:	int3   
10006706:	int3   
10006707:	int3   
10006708:	int3   
10006709:	int3   
1000670a:	int3   
1000670b:	int3   
1000670c:	int3   
1000670d:	int3   
1000670e:	int3   
1000670f:	int3   
10006710:	mov    ecx,DWORD PTR [esp+0x4]
10006714:	sub    esp,0xc
10006717:	test   ecx,ecx
10006719:	ja     0x1000672f
1000671b:	xor    ecx,ecx
1000671d:	lea    edx,[ecx+ecx*1]
10006720:	push   edx
10006721:	call   0x100190b4
10006726:	add    esp,0x4
10006729:	add    esp,0xc
1000672c:	ret    0x4
1000672f:	or     eax,0xffffffff
10006732:	xor    edx,edx
10006734:	div    ecx
10006736:	cmp    eax,0x2
10006739:	jae    0x1000671d
1000673b:	lea    eax,[esp+0x10]
1000673f:	push   eax
10006740:	lea    ecx,[esp+0x4]
10006744:	mov    DWORD PTR [esp+0x14],0x0
1000674c:	call   0x10018f0e
10006751:	push   0x100bba4c
10006756:	lea    ecx,[esp+0x4]
1000675a:	push   ecx
1000675b:	mov    DWORD PTR [esp+0x8],0x1002f510
10006763:	call   0x10018e6e
10006768:	int3   
10006769:	int3   
1000676a:	int3   
1000676b:	int3   
1000676c:	int3   
1000676d:	int3   
1000676e:	int3   
1000676f:	int3   
10006770:	push   ebp
10006771:	mov    ebp,esp
10006773:	and    esp,0xfffffff8
10006776:	push   0xffffffff
10006778:	push   0x1002da38
1000677d:	mov    eax,fs:0x0
10006783:	push   eax
10006784:	sub    esp,0x50
10006787:	push   ebx
10006788:	push   esi
10006789:	push   edi
1000678a:	mov    eax,ds:0x100c7654
1000678f:	xor    eax,esp
10006791:	push   eax
10006792:	lea    eax,[esp+0x60]
10006796:	mov    fs:0x0,eax
1000679c:	mov    DWORD PTR [esp+0x14],ecx
100067a0:	mov    edi,DWORD PTR [ebp+0x10]
100067a3:	cmp    BYTE PTR [edi+0x45],0x0
100067a7:	je     0x100067f5
100067a9:	push   0x1b
100067ab:	xor    esi,esi
100067ad:	push   0x100b7e30
100067b2:	lea    ecx,[esp+0x20]
100067b6:	mov    DWORD PTR [esp+0x38],0xf
100067be:	mov    DWORD PTR [esp+0x34],esi
100067c2:	mov    BYTE PTR [esp+0x24],0x0
100067c7:	call   0x10003a70
100067cc:	lea    eax,[esp+0x18]
100067d0:	push   eax
100067d1:	lea    ecx,[esp+0x38]
100067d5:	mov    DWORD PTR [esp+0x6c],esi
100067d9:	call   0x10001400
100067de:	push   0x100bb9d8
100067e3:	lea    ecx,[esp+0x38]
100067e7:	push   ecx
100067e8:	mov    DWORD PTR [esp+0x3c],0x1002f51c
100067f0:	call   0x10018e6e
100067f5:	lea    ecx,[ebp+0xc]
100067f8:	call   0x100066a0
100067fd:	mov    ecx,DWORD PTR [edi]
100067ff:	cmp    BYTE PTR [ecx+0x45],0x0
10006803:	je     0x1000680a
10006805:	mov    ebx,DWORD PTR [edi+0x8]
10006808:	jmp    0x10006821
1000680a:	mov    edx,DWORD PTR [edi+0x8]
1000680d:	cmp    BYTE PTR [edx+0x45],0x0
10006811:	je     0x10006817
10006813:	mov    ebx,ecx
10006815:	jmp    0x10006821
10006817:	mov    eax,DWORD PTR [ebp+0x10]
1000681a:	cmp    eax,edi
1000681c:	mov    ebx,DWORD PTR [eax+0x8]
1000681f:	jne    0x1000689d
10006821:	cmp    BYTE PTR [ebx+0x45],0x0
10006825:	mov    esi,DWORD PTR [edi+0x4]
10006828:	jne    0x1000682d
1000682a:	mov    DWORD PTR [ebx+0x4],esi
1000682d:	mov    ecx,DWORD PTR [esp+0x14]
10006831:	mov    eax,DWORD PTR [ecx+0x4]
10006834:	cmp    DWORD PTR [eax+0x4],edi
10006837:	jne    0x1000683e
10006839:	mov    DWORD PTR [eax+0x4],ebx
1000683c:	jmp    0x10006849
1000683e:	cmp    DWORD PTR [esi],edi
10006840:	jne    0x10006846
10006842:	mov    DWORD PTR [esi],ebx
10006844:	jmp    0x10006849
10006846:	mov    DWORD PTR [esi+0x8],ebx
10006849:	mov    eax,DWORD PTR [ecx+0x4]
1000684c:	cmp    DWORD PTR [eax],edi
1000684e:	jne    0x1000686c
10006850:	cmp    BYTE PTR [ebx+0x45],0x0
10006854:	je     0x1000685a
10006856:	mov    eax,esi
10006858:	jmp    0x10006867
1000685a:	push   ebx
1000685b:	call   0x10006cb0
10006860:	mov    ecx,DWORD PTR [esp+0x18]
10006864:	add    esp,0x4
10006867:	mov    edx,DWORD PTR [ecx+0x4]
1000686a:	mov    DWORD PTR [edx],eax
1000686c:	mov    eax,DWORD PTR [ecx+0x4]
1000686f:	cmp    DWORD PTR [eax+0x8],edi
10006872:	jne    0x100068fc
10006878:	cmp    BYTE PTR [ebx+0x45],0x0
1000687c:	je     0x10006888
1000687e:	mov    edx,DWORD PTR [ecx+0x4]
10006881:	mov    eax,esi
10006883:	mov    DWORD PTR [edx+0x8],eax
10006886:	jmp    0x100068fc
10006888:	push   ebx
10006889:	call   0x10006c10
1000688e:	mov    ecx,DWORD PTR [esp+0x18]
10006892:	mov    edx,DWORD PTR [ecx+0x4]
10006895:	add    esp,0x4
10006898:	mov    DWORD PTR [edx+0x8],eax
1000689b:	jmp    0x100068fc
1000689d:	mov    DWORD PTR [ecx+0x4],eax
100068a0:	mov    ecx,DWORD PTR [edi]
100068a2:	mov    DWORD PTR [eax],ecx
100068a4:	cmp    eax,DWORD PTR [edi+0x8]
100068a7:	jne    0x100068ad
100068a9:	mov    esi,eax
100068ab:	jmp    0x100068c7
100068ad:	cmp    BYTE PTR [ebx+0x45],0x0
100068b1:	mov    esi,DWORD PTR [eax+0x4]
100068b4:	jne    0x100068b9
100068b6:	mov    DWORD PTR [ebx+0x4],esi
100068b9:	mov    DWORD PTR [esi],ebx
100068bb:	mov    edx,DWORD PTR [edi+0x8]
100068be:	mov    DWORD PTR [eax+0x8],edx
100068c1:	mov    ecx,DWORD PTR [edi+0x8]
100068c4:	mov    DWORD PTR [ecx+0x4],eax
100068c7:	mov    edx,DWORD PTR [esp+0x14]
100068cb:	mov    ecx,DWORD PTR [edx+0x4]
100068ce:	cmp    DWORD PTR [ecx+0x4],edi
100068d1:	jne    0x100068d8
100068d3:	mov    DWORD PTR [ecx+0x4],eax
100068d6:	jmp    0x100068e6
100068d8:	mov    ecx,DWORD PTR [edi+0x4]
100068db:	cmp    DWORD PTR [ecx],edi
100068dd:	jne    0x100068e3
100068df:	mov    DWORD PTR [ecx],eax
100068e1:	jmp    0x100068e6
100068e3:	mov    DWORD PTR [ecx+0x8],eax
100068e6:	mov    ecx,DWORD PTR [edi+0x4]
100068e9:	mov    DWORD PTR [eax+0x4],ecx
100068ec:	mov    cl,BYTE PTR [eax+0x44]
100068ef:	mov    dl,BYTE PTR [edi+0x44]
100068f2:	mov    BYTE PTR [eax+0x44],dl
100068f5:	mov    BYTE PTR [edi+0x44],cl
100068f8:	mov    ecx,DWORD PTR [esp+0x14]
100068fc:	cmp    BYTE PTR [edi+0x44],0x1
10006900:	jne    0x10006a11
10006906:	mov    eax,DWORD PTR [ecx+0x4]
10006909:	cmp    ebx,DWORD PTR [eax+0x4]
1000690c:	je     0x10006a0d
10006912:	cmp    BYTE PTR [ebx+0x44],0x1
10006916:	jne    0x10006a0d
1000691c:	mov    eax,DWORD PTR [esi]
1000691e:	cmp    ebx,eax
10006920:	jne    0x10006990
10006922:	mov    eax,DWORD PTR [esi+0x8]
10006925:	cmp    BYTE PTR [eax+0x44],0x0
10006929:	jne    0x10006940
1000692b:	mov    BYTE PTR [eax+0x44],0x1
1000692f:	push   esi
10006930:	mov    BYTE PTR [esi+0x44],0x0
10006934:	call   0x10006160
10006939:	mov    eax,DWORD PTR [esi+0x8]
1000693c:	mov    ecx,DWORD PTR [esp+0x14]
10006940:	cmp    BYTE PTR [eax+0x45],0x0
10006944:	jne    0x100069c5
10006946:	mov    edx,DWORD PTR [eax]
10006948:	cmp    BYTE PTR [edx+0x44],0x1
1000694c:	jne    0x10006957
1000694e:	mov    edx,DWORD PTR [eax+0x8]
10006951:	cmp    BYTE PTR [edx+0x44],0x1
10006955:	je     0x100069c1
10006957:	mov    edx,DWORD PTR [eax+0x8]
1000695a:	cmp    BYTE PTR [edx+0x44],0x1
1000695e:	jne    0x10006977
10006960:	mov    edx,DWORD PTR [eax]
10006962:	mov    BYTE PTR [edx+0x44],0x1
10006966:	push   eax
10006967:	mov    BYTE PTR [eax+0x44],0x0
1000696b:	call   0x100061b0
10006970:	mov    eax,DWORD PTR [esi+0x8]
10006973:	mov    ecx,DWORD PTR [esp+0x14]
10006977:	mov    dl,BYTE PTR [esi+0x44]
1000697a:	mov    BYTE PTR [eax+0x44],dl
1000697d:	mov    BYTE PTR [esi+0x44],0x1
10006981:	mov    eax,DWORD PTR [eax+0x8]
10006984:	push   esi
10006985:	mov    BYTE PTR [eax+0x44],0x1
10006989:	call   0x10006160
1000698e:	jmp    0x10006a0d
10006990:	cmp    BYTE PTR [eax+0x44],0x0
10006994:	jne    0x100069aa
10006996:	mov    BYTE PTR [eax+0x44],0x1
1000699a:	push   esi
1000699b:	mov    BYTE PTR [esi+0x44],0x0
1000699f:	call   0x100061b0
100069a4:	mov    eax,DWORD PTR [esi]
100069a6:	mov    ecx,DWORD PTR [esp+0x14]
100069aa:	cmp    BYTE PTR [eax+0x45],0x0
100069ae:	jne    0x100069c5
100069b0:	mov    edx,DWORD PTR [eax+0x8]
100069b3:	cmp    BYTE PTR [edx+0x44],0x1
100069b7:	jne    0x100069d8
100069b9:	mov    edx,DWORD PTR [eax]
100069bb:	cmp    BYTE PTR [edx+0x44],0x1
100069bf:	jne    0x100069d8
100069c1:	mov    BYTE PTR [eax+0x44],0x0
100069c5:	mov    eax,DWORD PTR [ecx+0x4]
100069c8:	mov    ebx,esi
100069ca:	cmp    ebx,DWORD PTR [eax+0x4]
100069cd:	mov    esi,DWORD PTR [esi+0x4]
100069d0:	jne    0x10006912
100069d6:	jmp    0x10006a0d
100069d8:	mov    edx,DWORD PTR [eax]
100069da:	cmp    BYTE PTR [edx+0x44],0x1
100069de:	jne    0x100069f7
100069e0:	mov    edx,DWORD PTR [eax+0x8]
100069e3:	mov    BYTE PTR [edx+0x44],0x1
100069e7:	push   eax
100069e8:	mov    BYTE PTR [eax+0x44],0x0
100069ec:	call   0x10006160
100069f1:	mov    eax,DWORD PTR [esi]
100069f3:	mov    ecx,DWORD PTR [esp+0x14]
100069f7:	mov    dl,BYTE PTR [esi+0x44]
100069fa:	mov    BYTE PTR [eax+0x44],dl
100069fd:	mov    BYTE PTR [esi+0x44],0x1
10006a01:	mov    eax,DWORD PTR [eax]
10006a03:	push   esi
10006a04:	mov    BYTE PTR [eax+0x44],0x1
10006a08:	call   0x100061b0
10006a0d:	mov    BYTE PTR [ebx+0x44],0x1
10006a11:	cmp    DWORD PTR [edi+0x40],0x8
10006a15:	jb     0x10006a23
10006a17:	mov    ecx,DWORD PTR [edi+0x2c]
10006a1a:	push   ecx
10006a1b:	call   0x1001876e
10006a20:	add    esp,0x4
10006a23:	xor    esi,esi
10006a25:	mov    ebx,0x7
10006a2a:	mov    DWORD PTR [edi+0x40],ebx
10006a2d:	mov    DWORD PTR [edi+0x3c],esi
10006a30:	mov    WORD PTR [edi+0x2c],si
10006a34:	cmp    DWORD PTR [edi+0x24],0x8
10006a38:	jb     0x10006a46
10006a3a:	mov    edx,DWORD PTR [edi+0x10]
10006a3d:	push   edx
10006a3e:	call   0x1001876e
10006a43:	add    esp,0x4
10006a46:	mov    DWORD PTR [edi+0x24],ebx
10006a49:	mov    DWORD PTR [edi+0x20],esi
10006a4c:	push   edi
10006a4d:	mov    WORD PTR [edi+0x10],si
10006a51:	call   0x1001876e
10006a56:	mov    ecx,DWORD PTR [esp+0x18]
10006a5a:	mov    eax,DWORD PTR [ecx+0x8]
10006a5d:	add    esp,0x4
10006a60:	cmp    eax,esi
10006a62:	jbe    0x10006a6a
10006a64:	add    eax,0xffffffff
10006a67:	mov    DWORD PTR [ecx+0x8],eax
10006a6a:	mov    eax,DWORD PTR [ebp+0x8]
10006a6d:	mov    ecx,DWORD PTR [ebp+0xc]
10006a70:	mov    edx,DWORD PTR [ebp+0x10]
10006a73:	mov    DWORD PTR [eax],ecx
10006a75:	mov    DWORD PTR [eax+0x4],edx
10006a78:	mov    ecx,DWORD PTR [esp+0x60]
10006a7c:	mov    DWORD PTR fs:0x0,ecx
10006a83:	pop    ecx
10006a84:	pop    edi
10006a85:	pop    esi
10006a86:	pop    ebx
10006a87:	mov    esp,ebp
10006a89:	pop    ebp
10006a8a:	ret    0xc
10006a8d:	int3   
10006a8e:	int3   
10006a8f:	int3   
10006a90:	push   0xffffffff
10006a92:	push   0x1002d6b8
10006a97:	mov    eax,fs:0x0
10006a9d:	push   eax
10006a9e:	push   ecx
10006a9f:	push   ebx
10006aa0:	push   esi
10006aa1:	push   edi
10006aa2:	mov    eax,ds:0x100c7654
10006aa7:	xor    eax,esp
10006aa9:	push   eax
10006aaa:	lea    eax,[esp+0x14]
10006aae:	mov    fs:0x0,eax
10006ab4:	mov    esi,ecx
10006ab6:	mov    DWORD PTR [esp+0x10],esi
10006aba:	mov    edi,DWORD PTR [esp+0x24]
10006abe:	xor    ebx,ebx
10006ac0:	push   0xffffffff
10006ac2:	push   ebx
10006ac3:	mov    DWORD PTR [esi+0x18],0xf
10006aca:	mov    DWORD PTR [esi+0x14],ebx
10006acd:	push   edi
10006ace:	mov    BYTE PTR [esi+0x4],bl
10006ad1:	call   0x10003990
10006ad6:	push   0xffffffff
10006ad8:	lea    ecx,[esi+0x1c]
10006adb:	mov    DWORD PTR [esp+0x20],ebx
10006adf:	lea    eax,[edi+0x1c]
10006ae2:	push   ebx
10006ae3:	mov    DWORD PTR [ecx+0x18],0xf
10006aea:	mov    DWORD PTR [ecx+0x14],ebx
10006aed:	push   eax
10006aee:	mov    BYTE PTR [ecx+0x4],bl
10006af1:	call   0x10003990
10006af6:	mov    eax,esi
10006af8:	mov    ecx,DWORD PTR [esp+0x14]
10006afc:	mov    DWORD PTR fs:0x0,ecx
10006b03:	pop    ecx
10006b04:	pop    edi
10006b05:	pop    esi
10006b06:	pop    ebx
10006b07:	add    esp,0x10
10006b0a:	ret    0x4
10006b0d:	int3   
10006b0e:	int3   
10006b0f:	int3   
10006b10:	push   0xffffffff
10006b12:	push   0x1002d688
10006b17:	mov    eax,fs:0x0
10006b1d:	push   eax
10006b1e:	push   ecx
10006b1f:	push   ebx
10006b20:	push   esi
10006b21:	push   edi
10006b22:	mov    eax,ds:0x100c7654
10006b27:	xor    eax,esp
10006b29:	push   eax
10006b2a:	lea    eax,[esp+0x14]
10006b2e:	mov    fs:0x0,eax
10006b34:	mov    esi,ecx
10006b36:	mov    DWORD PTR [esp+0x10],esi
10006b3a:	mov    ebx,DWORD PTR [esp+0x24]
10006b3e:	xor    edi,edi
10006b40:	push   0xffffffff
10006b42:	push   edi
10006b43:	mov    DWORD PTR [esi+0x18],0x7
10006b4a:	mov    DWORD PTR [esi+0x14],edi
10006b4d:	push   ebx
10006b4e:	mov    WORD PTR [esi+0x4],di
10006b52:	call   0x10004e50
10006b57:	push   0xffffffff
10006b59:	lea    ecx,[esi+0x1c]
10006b5c:	mov    DWORD PTR [esp+0x20],edi
10006b60:	lea    eax,[ebx+0x1c]
10006b63:	push   edi
10006b64:	mov    DWORD PTR [ecx+0x18],0x7
10006b6b:	mov    DWORD PTR [ecx+0x14],edi
10006b6e:	push   eax
10006b6f:	mov    WORD PTR [ecx+0x4],di
10006b73:	call   0x10004e50
10006b78:	mov    eax,esi
10006b7a:	mov    ecx,DWORD PTR [esp+0x14]
10006b7e:	mov    DWORD PTR fs:0x0,ecx
10006b85:	pop    ecx
10006b86:	pop    edi
10006b87:	pop    esi
10006b88:	pop    ebx
10006b89:	add    esp,0x10
10006b8c:	ret    0x4
10006b8f:	int3   
10006b90:	push   ecx
10006b91:	push   ebx
10006b92:	push   esi
10006b93:	mov    esi,DWORD PTR [esp+0x10]
10006b97:	xor    ebx,ebx
10006b99:	cmp    BYTE PTR [esi+0x45],bl
10006b9c:	push   edi
10006b9d:	mov    DWORD PTR [esp+0xc],ecx
10006ba1:	mov    edi,esi
10006ba3:	jne    0x10006c06
10006ba5:	push   ebp
10006ba6:	lea    ebp,[ebx+0xf]
10006ba9:	lea    esp,[esp+0x0]
10006bb0:	mov    eax,DWORD PTR [edi+0x8]
10006bb3:	mov    ecx,DWORD PTR [esp+0x10]
10006bb7:	push   eax
10006bb8:	call   0x10006b90
10006bbd:	cmp    DWORD PTR [esi+0x40],0x10
10006bc1:	mov    edi,DWORD PTR [edi]
10006bc3:	jb     0x10006bd1
10006bc5:	mov    ecx,DWORD PTR [esi+0x2c]
10006bc8:	push   ecx
10006bc9:	call   0x1001876e
10006bce:	add    esp,0x4
10006bd1:	mov    DWORD PTR [esi+0x40],ebp
10006bd4:	mov    DWORD PTR [esi+0x3c],ebx
10006bd7:	mov    BYTE PTR [esi+0x2c],bl
10006bda:	cmp    DWORD PTR [esi+0x24],0x10
10006bde:	jb     0x10006bec
10006be0:	mov    edx,DWORD PTR [esi+0x10]
10006be3:	push   edx
10006be4:	call   0x1001876e
10006be9:	add    esp,0x4
10006bec:	mov    DWORD PTR [esi+0x24],ebp
10006bef:	mov    DWORD PTR [esi+0x20],ebx
10006bf2:	push   esi
10006bf3:	mov    BYTE PTR [esi+0x10],bl
10006bf6:	call   0x1001876e
10006bfb:	add    esp,0x4
10006bfe:	cmp    BYTE PTR [edi+0x45],bl
10006c01:	mov    esi,edi
10006c03:	je     0x10006bb0
10006c05:	pop    ebp
10006c06:	pop    edi
10006c07:	pop    esi
10006c08:	pop    ebx
10006c09:	pop    ecx
10006c0a:	ret    0x4
10006c0d:	int3   
10006c0e:	int3   
10006c0f:	int3   
10006c10:	mov    eax,DWORD PTR [esp+0x4]
10006c14:	mov    ecx,DWORD PTR [eax+0x8]
10006c17:	cmp    BYTE PTR [ecx+0x45],0x0
10006c1b:	jne    0x10006c2b
10006c1d:	lea    ecx,[ecx+0x0]
10006c20:	mov    eax,ecx
10006c22:	mov    ecx,DWORD PTR [eax+0x8]
10006c25:	cmp    BYTE PTR [ecx+0x45],0x0
10006c29:	je     0x10006c20
10006c2b:	ret    
10006c2c:	int3   
10006c2d:	int3   
10006c2e:	int3   
10006c2f:	int3   
10006c30:	push   ecx
10006c31:	push   ebx
10006c32:	push   esi
10006c33:	mov    esi,DWORD PTR [esp+0x10]
10006c37:	xor    ebx,ebx
10006c39:	cmp    BYTE PTR [esi+0x45],bl
10006c3c:	push   edi
10006c3d:	mov    DWORD PTR [esp+0xc],ecx
10006c41:	mov    edi,esi
10006c43:	jne    0x10006ca8
10006c45:	push   ebp
10006c46:	lea    ebp,[ebx+0x7]
10006c49:	lea    esp,[esp+0x0]
10006c50:	mov    eax,DWORD PTR [edi+0x8]
10006c53:	mov    ecx,DWORD PTR [esp+0x10]
10006c57:	push   eax
10006c58:	call   0x10006c30
10006c5d:	cmp    DWORD PTR [esi+0x40],0x8
10006c61:	mov    edi,DWORD PTR [edi]
10006c63:	jb     0x10006c71
10006c65:	mov    ecx,DWORD PTR [esi+0x2c]
10006c68:	push   ecx
10006c69:	call   0x1001876e
10006c6e:	add    esp,0x4
10006c71:	mov    DWORD PTR [esi+0x40],ebp
10006c74:	mov    DWORD PTR [esi+0x3c],ebx
10006c77:	mov    WORD PTR [esi+0x2c],bx
10006c7b:	cmp    DWORD PTR [esi+0x24],0x8
10006c7f:	jb     0x10006c8d
10006c81:	mov    edx,DWORD PTR [esi+0x10]
10006c84:	push   edx
10006c85:	call   0x1001876e
10006c8a:	add    esp,0x4
10006c8d:	mov    DWORD PTR [esi+0x24],ebp
10006c90:	mov    DWORD PTR [esi+0x20],ebx
10006c93:	push   esi
10006c94:	mov    WORD PTR [esi+0x10],bx
10006c98:	call   0x1001876e
10006c9d:	add    esp,0x4
10006ca0:	cmp    BYTE PTR [edi+0x45],bl
10006ca3:	mov    esi,edi
10006ca5:	je     0x10006c50
10006ca7:	pop    ebp
10006ca8:	pop    edi
10006ca9:	pop    esi
10006caa:	pop    ebx
10006cab:	pop    ecx
10006cac:	ret    0x4
10006caf:	int3   
10006cb0:	mov    eax,DWORD PTR [esp+0x4]
10006cb4:	mov    ecx,DWORD PTR [eax]
10006cb6:	cmp    BYTE PTR [ecx+0x45],0x0
10006cba:	jne    0x10006cca
10006cbc:	lea    esp,[esp+0x0]
10006cc0:	mov    eax,ecx
10006cc2:	mov    ecx,DWORD PTR [eax]
10006cc4:	cmp    BYTE PTR [ecx+0x45],0x0
10006cc8:	je     0x10006cc0
10006cca:	ret    
10006ccb:	int3   
10006ccc:	int3   
10006ccd:	int3   
10006cce:	int3   
10006ccf:	int3   
10006cd0:	mov    eax,DWORD PTR [esp+0x8]
10006cd4:	mov    ecx,DWORD PTR [esp+0xc]
10006cd8:	or     edx,0xffffffff
10006cdb:	sub    edx,eax
10006cdd:	cmp    edx,ecx
10006cdf:	jae    0x10006ce7
10006ce1:	mov    eax,0x80070057
10006ce6:	ret    
10006ce7:	add    eax,ecx
10006ce9:	mov    ecx,DWORD PTR [esp+0x4]
10006ced:	mov    DWORD PTR [ecx],eax
10006cef:	xor    eax,eax
10006cf1:	ret    
10006cf2:	int3   
10006cf3:	int3   
10006cf4:	int3   
10006cf5:	int3   
10006cf6:	int3   
10006cf7:	int3   
10006cf8:	int3   
10006cf9:	int3   
10006cfa:	int3   
10006cfb:	int3   
10006cfc:	int3   
10006cfd:	int3   
10006cfe:	int3   
10006cff:	int3   
10006d00:	push   0xffffffff
10006d02:	push   0x1002d8e8
10006d07:	mov    eax,fs:0x0
10006d0d:	push   eax
10006d0e:	sub    esp,0x20
10006d11:	push   ebx
10006d12:	push   ebp
10006d13:	mov    eax,ds:0x100c7654
10006d18:	xor    eax,esp
10006d1a:	push   eax
10006d1b:	lea    eax,[esp+0x2c]
10006d1f:	mov    fs:0x0,eax
10006d25:	mov    eax,DWORD PTR [esp+0x3c]
10006d29:	xor    ebx,ebx
10006d2b:	push   0xffffffff
10006d2d:	push   ebx
10006d2e:	push   eax
10006d2f:	lea    ecx,[esp+0x1c]
10006d33:	mov    DWORD PTR [esp+0x18],ebx
10006d37:	mov    DWORD PTR [esp+0x34],0xf
10006d3f:	mov    DWORD PTR [esp+0x30],ebx
10006d43:	mov    BYTE PTR [esp+0x20],bl
10006d47:	call   0x10003990
10006d4c:	mov    eax,edi
10006d4e:	mov    DWORD PTR [esp+0x34],ebx
10006d52:	lea    ebp,[eax+0x1]
10006d55:	mov    cl,BYTE PTR [eax]
10006d57:	add    eax,0x1
10006d5a:	cmp    cl,bl
10006d5c:	jne    0x10006d55
10006d5e:	sub    eax,ebp
10006d60:	push   eax
10006d61:	push   edi
10006d62:	lea    eax,[esp+0x18]
10006d66:	call   0x10002c80
10006d6b:	push   0xffffffff
10006d6d:	push   ebx
10006d6e:	mov    DWORD PTR [esi+0x18],0xf
10006d75:	mov    DWORD PTR [esi+0x14],ebx
10006d78:	push   eax
10006d79:	mov    ecx,esi
10006d7b:	mov    BYTE PTR [esi+0x4],bl
10006d7e:	call   0x10003990
10006d83:	cmp    DWORD PTR [esp+0x28],0x10
10006d88:	jb     0x10006d97
10006d8a:	mov    ecx,DWORD PTR [esp+0x14]
10006d8e:	push   ecx
10006d8f:	call   0x1001876e
10006d94:	add    esp,0x4
10006d97:	mov    eax,esi
10006d99:	mov    ecx,DWORD PTR [esp+0x2c]
10006d9d:	mov    DWORD PTR fs:0x0,ecx
10006da4:	pop    ecx
10006da5:	pop    ebp
10006da6:	pop    ebx
10006da7:	add    esp,0x2c
10006daa:	ret    
10006dab:	int3   
10006dac:	int3   
10006dad:	int3   
10006dae:	int3   
10006daf:	int3   
10006db0:	mov    eax,DWORD PTR [esp+0x4]
10006db4:	mov    cl,BYTE PTR [eax]
10006db6:	push   esi
10006db7:	mov    esi,DWORD PTR [esp+0xc]
10006dbb:	mov    dl,BYTE PTR [esi]
10006dbd:	mov    BYTE PTR [eax],dl
10006dbf:	mov    BYTE PTR [esi],cl
10006dc1:	pop    esi
10006dc2:	ret    
10006dc3:	int3   
10006dc4:	int3   
10006dc5:	int3   
10006dc6:	int3   
10006dc7:	int3   
10006dc8:	int3   
10006dc9:	int3   
10006dca:	int3   
10006dcb:	int3   
10006dcc:	int3   
10006dcd:	int3   
10006dce:	int3   
10006dcf:	int3   
10006dd0:	mov    eax,DWORD PTR [esp+0x4]
10006dd4:	push   esi
10006dd5:	push   eax
10006dd6:	mov    esi,ecx
10006dd8:	call   0x10018f74
10006ddd:	mov    DWORD PTR [esi],0x1002f510
10006de3:	mov    eax,esi
10006de5:	pop    esi
10006de6:	ret    0x4
10006de9:	int3   
10006dea:	int3   
10006deb:	int3   
10006dec:	int3   
10006ded:	int3   
10006dee:	int3   
10006def:	int3   
10006df0:	push   ebx
10006df1:	push   ebp
10006df2:	push   esi
10006df3:	push   edi
10006df4:	mov    edi,DWORD PTR [esp+0x14]
10006df8:	mov    esi,ecx
10006dfa:	cmp    DWORD PTR [esi+0x14],edi
10006dfd:	jae    0x10006e04
10006dff:	call   0x1001864e
10006e04:	mov    eax,DWORD PTR [esi+0x14]
10006e07:	mov    ebx,DWORD PTR [esp+0x18]
10006e0b:	sub    eax,edi
10006e0d:	cmp    eax,ebx
10006e0f:	jae    0x10006e13
10006e11:	mov    ebx,eax
10006e13:	mov    ebp,DWORD PTR [esp+0x20]
10006e17:	cmp    ebx,ebp
10006e19:	mov    edx,ebx
10006e1b:	jb     0x10006e1f
10006e1d:	mov    edx,ebp
10006e1f:	cmp    DWORD PTR [esi+0x18],0x8
10006e23:	jb     0x10006e2a
10006e25:	mov    eax,DWORD PTR [esi+0x4]
10006e28:	jmp    0x10006e2d
10006e2a:	lea    eax,[esi+0x4]
10006e2d:	test   edx,edx
10006e2f:	mov    ecx,DWORD PTR [esp+0x1c]
10006e33:	lea    eax,[eax+edi*2]
10006e36:	jbe    0x10006e5d
10006e38:	mov    si,WORD PTR [eax]
10006e3b:	cmp    si,WORD PTR [ecx]
10006e3e:	jne    0x10006e4d
10006e40:	add    eax,0x2
10006e43:	add    ecx,0x2
10006e46:	sub    edx,0x1
10006e49:	jne    0x10006e38
10006e4b:	jmp    0x10006e5d
10006e4d:	movzx  eax,WORD PTR [eax]
10006e50:	cmp    ax,WORD PTR [ecx]
10006e53:	sbb    eax,eax
10006e55:	and    eax,0xfffffffe
10006e58:	add    eax,0x1
10006e5b:	jne    0x10006e72
10006e5d:	cmp    ebx,ebp
10006e5f:	jae    0x10006e6b
10006e61:	pop    edi
10006e62:	pop    esi
10006e63:	pop    ebp
10006e64:	or     eax,0xffffffff
10006e67:	pop    ebx
10006e68:	ret    0x10
10006e6b:	xor    eax,eax
10006e6d:	cmp    ebx,ebp
10006e6f:	setne  al
10006e72:	pop    edi
10006e73:	pop    esi
10006e74:	pop    ebp
10006e75:	pop    ebx
10006e76:	ret    0x10
10006e79:	int3   
10006e7a:	int3   
10006e7b:	int3   
10006e7c:	int3   
10006e7d:	int3   
10006e7e:	int3   
10006e7f:	int3   
10006e80:	push   esi
10006e81:	push   0x100c9d88
10006e86:	mov    esi,ecx
10006e88:	call   DWORD PTR ds:0x1002f0e8
10006e8e:	mov    eax,esi
10006e90:	pop    esi
10006e91:	ret    
10006e92:	int3   
10006e93:	int3   
10006e94:	int3   
10006e95:	int3   
10006e96:	int3   
10006e97:	int3   
10006e98:	int3   
10006e99:	int3   
10006e9a:	int3   
10006e9b:	int3   
10006e9c:	int3   
10006e9d:	int3   
10006e9e:	int3   
10006e9f:	int3   
10006ea0:	push   0x100c9d88
10006ea5:	call   DWORD PTR ds:0x1002f0f0
10006eab:	ret    
10006eac:	int3   
10006ead:	int3   
10006eae:	int3   
10006eaf:	int3   
10006eb0:	mov    eax,ds:0x100c9fb8
10006eb5:	push   eax
10006eb6:	call   DWORD PTR ds:0x1002f0b4
10006ebc:	ret    
10006ebd:	int3   
10006ebe:	int3   
10006ebf:	int3   
10006ec0:	push   ebx
10006ec1:	mov    ebx,DWORD PTR ds:0x1002f07c
10006ec7:	push   ebp
10006ec8:	mov    ebp,DWORD PTR ds:0x1002f0f8
10006ece:	push   esi
10006ecf:	push   edi
10006ed0:	mov    edi,DWORD PTR [esp+0x14]
10006ed4:	xor    esi,esi
10006ed6:	push   0x0
10006ed8:	push   0x0
10006eda:	push   0x100c9d88
10006edf:	call   ebp
10006ee1:	test   eax,eax
10006ee3:	je     0x10006ef7
10006ee5:	cmp    edi,0xffffffff
10006ee8:	je     0x10006eee
10006eea:	cmp    esi,edi
10006eec:	ja     0x10006efe
10006eee:	push   0xa
10006ef0:	call   ebx
10006ef2:	add    esi,0xa
10006ef5:	jmp    0x10006ed6
10006ef7:	pop    edi
10006ef8:	pop    esi
10006ef9:	pop    ebp
10006efa:	mov    al,0x1
10006efc:	pop    ebx
10006efd:	ret    
10006efe:	pop    edi
10006eff:	pop    esi
10006f00:	pop    ebp
10006f01:	xor    al,al
10006f03:	pop    ebx
10006f04:	ret    
10006f05:	int3   
10006f06:	int3   
10006f07:	int3   
10006f08:	int3   
10006f09:	int3   
10006f0a:	int3   
10006f0b:	int3   
10006f0c:	int3   
10006f0d:	int3   
10006f0e:	int3   
10006f0f:	int3   
10006f10:	sub    esp,0x8
10006f13:	mov    edx,DWORD PTR [esp+0x10]
10006f17:	mov    eax,DWORD PTR [esp+0xc]
10006f1b:	mov    ecx,DWORD PTR ds:0x100c9fb8
10006f21:	push   edx
10006f22:	mov    DWORD PTR [esp+0x4],eax
10006f26:	push   0x0
10006f28:	lea    eax,[esp+0x8]
10006f2c:	push   eax
10006f2d:	push   0x2
10006f2f:	mov    DWORD PTR [esp+0x14],ecx
10006f33:	call   DWORD PTR ds:0x1002f078
10006f39:	add    esp,0x8
10006f3c:	ret    
10006f3d:	int3   
10006f3e:	int3   
10006f3f:	int3   
10006f40:	push   ebp
10006f41:	mov    ebp,esp
10006f43:	and    esp,0xfffffff8
10006f46:	push   ecx
10006f47:	push   esi
10006f48:	mov    esi,ecx
10006f4a:	cmp    DWORD PTR [esi],0x0
10006f4d:	je     0x10006f91
10006f4f:	push   0x100b7e78
10006f54:	push   0xc
10006f56:	push   0x100b7ee4
10006f5b:	call   0x100033d0
10006f60:	add    esp,0xc
10006f63:	push   eax
10006f64:	push   0x100b7ef8
10006f69:	push   0xc
10006f6b:	push   0x100b7f50
10006f70:	call   0x100035f0
10006f75:	add    esp,0xc
10006f78:	push   eax
10006f79:	call   DWORD PTR ds:0x1002f0b0
10006f7f:	push   eax
10006f80:	call   DWORD PTR ds:0x1002f050
10006f86:	mov    ecx,DWORD PTR [esi]
10006f88:	push   ecx
10006f89:	call   eax
10006f8b:	mov    DWORD PTR [esi],0x0
10006f91:	pop    esi
10006f92:	mov    esp,ebp
10006f94:	pop    ebp
10006f95:	ret    
10006f96:	int3   
10006f97:	int3   
10006f98:	int3   
10006f99:	int3   
10006f9a:	int3   
10006f9b:	int3   
10006f9c:	int3   
10006f9d:	int3   
10006f9e:	int3   
10006f9f:	int3   
10006fa0:	mov    eax,ecx
10006fa2:	mov    cl,BYTE PTR [esp+0x8]
10006fa6:	mov    BYTE PTR [eax],cl
10006fa8:	mov    DWORD PTR [eax+0x4],0xffffffff
10006faf:	mov    BYTE PTR [eax+0x8],0x1
10006fb3:	ret    0x8
10006fb6:	int3   
10006fb7:	int3   
10006fb8:	int3   
10006fb9:	int3   
10006fba:	int3   
10006fbb:	int3   
10006fbc:	int3   
10006fbd:	int3   
10006fbe:	int3   
10006fbf:	int3   
10006fc0:	push   esi
10006fc1:	mov    esi,ecx
10006fc3:	push   edi
10006fc4:	mov    edi,DWORD PTR [esi+0x4]
10006fc7:	test   edi,edi
10006fc9:	je     0x10006fe3
10006fcb:	push   ebx
10006fcc:	call   DWORD PTR ds:0x1002f094
10006fd2:	push   edi
10006fd3:	mov    ebx,eax
10006fd5:	call   DWORD PTR ds:0x1002f064
10006fdb:	push   ebx
10006fdc:	call   DWORD PTR ds:0x1002f090
10006fe2:	pop    ebx
10006fe3:	pop    edi
10006fe4:	mov    DWORD PTR [esi+0x4],0x0
10006feb:	pop    esi
10006fec:	ret    
10006fed:	int3   
10006fee:	int3   
10006fef:	int3   
10006ff0:	push   0xffffffff
10006ff2:	push   0x1002e110
10006ff7:	mov    eax,fs:0x0
10006ffd:	push   eax
10006ffe:	sub    esp,0x10
10007001:	push   ebx
10007002:	push   esi
10007003:	mov    eax,ds:0x100c7654
10007008:	xor    eax,esp
1000700a:	push   eax
1000700b:	lea    eax,[esp+0x1c]
1000700f:	mov    fs:0x0,eax
10007015:	mov    esi,ecx
10007017:	mov    eax,ds:0x100c9090
1000701c:	mov    edx,DWORD PTR [eax+0xc]
1000701f:	mov    ecx,0x100c9090
10007024:	call   edx
10007026:	add    eax,0x10
10007029:	mov    DWORD PTR [esp+0x18],eax
1000702d:	mov    DWORD PTR [esp+0x24],0x0
10007035:	mov    eax,ds:0x100c9090
1000703a:	mov    edx,DWORD PTR [eax+0xc]
1000703d:	mov    ecx,0x100c9090
10007042:	call   edx
10007044:	add    eax,0x10
10007047:	mov    DWORD PTR [esp+0x14],eax
1000704b:	mov    BYTE PTR [esp+0x24],0x1
10007050:	mov    eax,ds:0x100c9090
10007055:	mov    edx,DWORD PTR [eax+0xc]
10007058:	mov    ecx,0x100c9090
1000705d:	call   edx
1000705f:	add    eax,0x10
10007062:	mov    DWORD PTR [esp+0x10],eax
10007066:	mov    BYTE PTR [esp+0x24],0x2
1000706b:	mov    eax,ds:0x100c9090
10007070:	mov    edx,DWORD PTR [eax+0xc]
10007073:	mov    ecx,0x100c9090
10007078:	call   edx
1000707a:	add    eax,0x10
1000707d:	mov    DWORD PTR [esp+0xc],eax
10007081:	mov    edx,DWORD PTR [esp+0x2c]
10007085:	lea    eax,[esp+0x10]
10007089:	push   eax
1000708a:	lea    ecx,[esp+0x1c]
1000708e:	push   ecx
1000708f:	push   edx
10007090:	lea    edx,[esp+0x18]
10007094:	lea    ebx,[esp+0x20]
10007098:	mov    ecx,esi
1000709a:	mov    BYTE PTR [esp+0x30],0x3
1000709f:	call   0x10007150
100070a4:	mov    BYTE PTR [esp+0x24],0x2
100070a9:	mov    eax,DWORD PTR [esp+0xc]
100070ad:	add    eax,0xfffffff0
100070b0:	lea    ecx,[eax+0xc]
100070b3:	or     edx,0xffffffff
100070b6:	lock xadd DWORD PTR [ecx],edx
100070ba:	dec    edx
100070bb:	test   edx,edx
100070bd:	jg     0x100070c9
100070bf:	mov    ecx,DWORD PTR [eax]
100070c1:	mov    edx,DWORD PTR [ecx]
100070c3:	push   eax
100070c4:	mov    eax,DWORD PTR [edx+0x4]
100070c7:	call   eax
100070c9:	mov    BYTE PTR [esp+0x24],0x1
100070ce:	mov    eax,DWORD PTR [esp+0x10]
100070d2:	add    eax,0xfffffff0
100070d5:	lea    ecx,[eax+0xc]
100070d8:	or     edx,0xffffffff
100070db:	lock xadd DWORD PTR [ecx],edx
100070df:	dec    edx
100070e0:	test   edx,edx
100070e2:	jg     0x100070ee
100070e4:	mov    ecx,DWORD PTR [eax]
100070e6:	mov    edx,DWORD PTR [ecx]
100070e8:	push   eax
100070e9:	mov    eax,DWORD PTR [edx+0x4]
100070ec:	call   eax
100070ee:	mov    BYTE PTR [esp+0x24],0x0
100070f3:	mov    eax,DWORD PTR [esp+0x14]
100070f7:	add    eax,0xfffffff0
100070fa:	lea    ecx,[eax+0xc]
100070fd:	or     edx,0xffffffff
10007100:	lock xadd DWORD PTR [ecx],edx
10007104:	dec    edx
10007105:	test   edx,edx
10007107:	jg     0x10007113
10007109:	mov    ecx,DWORD PTR [eax]
1000710b:	mov    edx,DWORD PTR [ecx]
1000710d:	push   eax
1000710e:	mov    eax,DWORD PTR [edx+0x4]
10007111:	call   eax
10007113:	mov    DWORD PTR [esp+0x24],0xffffffff
1000711b:	mov    eax,DWORD PTR [esp+0x18]
1000711f:	add    eax,0xfffffff0
10007122:	lea    ecx,[eax+0xc]
10007125:	or     edx,0xffffffff
10007128:	lock xadd DWORD PTR [ecx],edx
1000712c:	dec    edx
1000712d:	test   edx,edx
1000712f:	jg     0x1000713b
10007131:	mov    ecx,DWORD PTR [eax]
10007133:	mov    edx,DWORD PTR [ecx]
10007135:	push   eax
10007136:	mov    eax,DWORD PTR [edx+0x4]
10007139:	call   eax
1000713b:	mov    ecx,DWORD PTR [esp+0x1c]
1000713f:	mov    DWORD PTR fs:0x0,ecx
10007146:	pop    ecx
10007147:	pop    esi
10007148:	pop    ebx
10007149:	add    esp,0x1c
1000714c:	ret    0x4
1000714f:	int3   
10007150:	push   ebp
10007151:	mov    ebp,esp
10007153:	and    esp,0xfffffff8
10007156:	push   0xffffffff
10007158:	push   0x1002e0bb
1000715d:	mov    eax,fs:0x0
10007163:	push   eax
10007164:	sub    esp,0x16c
1000716a:	mov    eax,ds:0x100c7654
1000716f:	xor    eax,esp
10007171:	mov    DWORD PTR [esp+0x164],eax
10007178:	push   esi
10007179:	push   edi
1000717a:	mov    eax,ds:0x100c7654
1000717f:	xor    eax,esp
10007181:	push   eax
10007182:	lea    eax,[esp+0x178]
10007189:	mov    fs:0x0,eax
1000718f:	mov    eax,DWORD PTR [ebp+0x10]
10007192:	mov    esi,DWORD PTR [ebp+0x8]
10007195:	mov    edi,DWORD PTR [ebp+0xc]
10007198:	push   0x110
1000719d:	mov    DWORD PTR [esp+0x14],eax
100071a1:	lea    eax,[esp+0x60]
100071a5:	push   eax
100071a6:	mov    DWORD PTR [esp+0x1c],edx
100071aa:	push   0x110
100071af:	mov    edx,eax
100071b1:	push   edx
100071b2:	push   0x1
100071b4:	call   0x10007670
100071b9:	test   eax,eax
100071bb:	jne    0x1000722b
100071bd:	push   0x100b7f70
100071c2:	push   0x1f
100071c4:	push   0x100b7fec
100071c9:	call   0x100033d0
100071ce:	add    esp,0xc
100071d1:	xor    edi,edi
100071d3:	mov    ecx,eax
100071d5:	mov    DWORD PTR [esp+0x30],0xf
100071dd:	mov    DWORD PTR [esp+0x2c],edi
100071e1:	mov    BYTE PTR [esp+0x1c],0x0
100071e6:	lea    esi,[ecx+0x1]
100071e9:	lea    esp,[esp+0x0]
100071f0:	mov    dl,BYTE PTR [ecx]
100071f2:	add    ecx,0x1
100071f5:	test   dl,dl
100071f7:	jne    0x100071f0
100071f9:	sub    ecx,esi
100071fb:	push   ecx
100071fc:	push   eax
100071fd:	lea    ecx,[esp+0x20]
10007201:	call   0x10003a70
10007206:	lea    eax,[esp+0x18]
1000720a:	push   eax
1000720b:	lea    ecx,[esp+0x38]
1000720f:	push   ecx
10007210:	mov    DWORD PTR [esp+0x188],edi
10007217:	call   0x10001550
1000721c:	push   0x100bb980
10007221:	lea    edx,[esp+0x38]
10007225:	push   edx
10007226:	call   0x10018e6e
1000722b:	mov    eax,DWORD PTR [esp+0x9c]
10007232:	mov    ecx,DWORD PTR [esp+0xa0]
10007239:	mov    edx,DWORD PTR [esp+0xa4]
10007240:	mov    DWORD PTR [esi],eax
10007242:	mov    eax,DWORD PTR [esp+0xa8]
10007249:	mov    DWORD PTR [esi+0x4],ecx
1000724c:	mov    DWORD PTR [esi+0x8],edx
1000724f:	mov    DWORD PTR [esi+0xc],eax
10007252:	lea    eax,[esp+0x5c]
10007256:	lea    edx,[eax+0x2]
10007259:	lea    esp,[esp+0x0]
10007260:	mov    cx,WORD PTR [eax]
10007263:	add    eax,0x2
10007266:	test   cx,cx
10007269:	jne    0x10007260
1000726b:	sub    eax,edx
1000726d:	sar    eax,1
1000726f:	push   eax
10007270:	lea    ecx,[esp+0x60]
10007274:	push   ecx
10007275:	mov    ecx,edi
10007277:	call   0x100049f0
1000727c:	lea    eax,[esp+0xac]
10007283:	lea    edx,[eax+0x2]
10007286:	mov    cx,WORD PTR [eax]
10007289:	add    eax,0x2
1000728c:	test   cx,cx
1000728f:	jne    0x10007286
10007291:	sub    eax,edx
10007293:	sar    eax,1
10007295:	push   eax
10007296:	lea    edx,[esp+0xb0]
1000729d:	push   edx
1000729e:	mov    ecx,ebx
100072a0:	call   0x100049f0
100072a5:	lea    eax,[esp+0xec]
100072ac:	lea    edx,[eax+0x2]
100072af:	nop
100072b0:	mov    cx,WORD PTR [eax]
100072b3:	add    eax,0x2
100072b6:	test   cx,cx
100072b9:	jne    0x100072b0
100072bb:	mov    ecx,DWORD PTR [esp+0x10]
100072bf:	sub    eax,edx
100072c1:	sar    eax,1
100072c3:	push   eax
100072c4:	lea    eax,[esp+0xf0]
100072cb:	push   eax
100072cc:	call   0x100049f0
100072d1:	lea    eax,[esp+0x12c]
100072d8:	lea    edx,[eax+0x2]
100072db:	jmp    0x100072e0
100072dd:	lea    ecx,[ecx+0x0]
100072e0:	mov    cx,WORD PTR [eax]
100072e3:	add    eax,0x2
100072e6:	test   cx,cx
100072e9:	jne    0x100072e0
100072eb:	sub    eax,edx
100072ed:	sar    eax,1
100072ef:	push   eax
100072f0:	lea    ecx,[esp+0x130]
100072f7:	push   ecx
100072f8:	mov    ecx,DWORD PTR [esp+0x1c]
100072fc:	call   0x100049f0
10007301:	mov    ecx,DWORD PTR [esp+0x178]
10007308:	mov    DWORD PTR fs:0x0,ecx
1000730f:	pop    ecx
10007310:	pop    edi
10007311:	pop    esi
10007312:	mov    ecx,DWORD PTR [esp+0x164]
10007319:	xor    ecx,esp
1000731b:	call   0x10018773
10007320:	mov    esp,ebp
10007322:	pop    ebp
10007323:	ret    0xc
10007326:	int3   
10007327:	int3   
10007328:	int3   
10007329:	int3   
1000732a:	int3   
1000732b:	int3   
1000732c:	int3   
1000732d:	int3   
1000732e:	int3   
1000732f:	int3   
10007330:	push   ebp
10007331:	mov    ebp,esp
10007333:	and    esp,0xfffffff8
10007336:	push   0xffffffff
10007338:	push   0x1002e088
1000733d:	mov    eax,fs:0x0
10007343:	push   eax
10007344:	sub    esp,0x50
10007347:	push   ebx
10007348:	push   esi
10007349:	push   edi
1000734a:	mov    eax,ds:0x100c7654
1000734f:	xor    eax,esp
10007351:	push   eax
10007352:	lea    eax,[esp+0x60]
10007356:	mov    fs:0x0,eax
1000735c:	xor    ebx,ebx
1000735e:	mov    DWORD PTR [esp+0x10],ebx
10007362:	mov    DWORD PTR [esp+0x14],ebx
10007366:	push   0xa
10007368:	mov    DWORD PTR [esp+0x6c],ebx
1000736c:	call   0x1001868d
10007371:	mov    edi,eax
10007373:	add    esp,0x4
10007376:	mov    DWORD PTR [esp+0x10],edi
1000737a:	mov    eax,DWORD PTR [ebp+0x10]
1000737d:	cmp    eax,ebx
1000737f:	mov    BYTE PTR [esp+0x68],0x1
10007384:	mov    DWORD PTR [edi+0x4],0x2
1000738b:	je     0x10007394
1000738d:	mov    ax,WORD PTR [eax]
10007390:	mov    WORD PTR [edi+0x8],ax
10007394:	mov    eax,DWORD PTR [edi+0x4]
10007397:	mov    ecx,DWORD PTR [ebp+0x8]
1000739a:	add    eax,0x8
1000739d:	push   eax
1000739e:	push   edi
1000739f:	push   eax
100073a0:	push   edi
100073a1:	push   0x3
100073a3:	call   0x10007670
100073a8:	test   eax,eax
100073aa:	jne    0x1000740f
100073ac:	push   0x100b8010
100073b1:	push   0x19
100073b3:	push   0x100b8068
100073b8:	call   0x100033d0
100073bd:	mov    ecx,eax
100073bf:	add    esp,0xc
100073c2:	mov    DWORD PTR [esp+0x30],0xf
100073ca:	mov    DWORD PTR [esp+0x2c],ebx
100073ce:	mov    BYTE PTR [esp+0x1c],0x0
100073d3:	lea    esi,[ecx+0x1]
100073d6:	mov    dl,BYTE PTR [ecx]
100073d8:	add    ecx,0x1
100073db:	test   dl,dl
100073dd:	jne    0x100073d6
100073df:	sub    ecx,esi
100073e1:	push   ecx
100073e2:	push   eax
100073e3:	lea    ecx,[esp+0x20]
100073e7:	call   0x10003a70
100073ec:	lea    ecx,[esp+0x18]
100073f0:	push   ecx
100073f1:	lea    edx,[esp+0x38]
100073f5:	push   edx
100073f6:	mov    BYTE PTR [esp+0x70],0x2
100073fb:	call   0x10001550
10007400:	push   0x100bb980
10007405:	lea    eax,[esp+0x38]
10007409:	push   eax
1000740a:	call   0x10018e6e
1000740f:	cmp    DWORD PTR [edi],0x1
10007412:	jne    0x10007468
10007414:	mov    ebx,DWORD PTR [edi+0x4]
10007417:	lea    ecx,[ebx+0x8]
1000741a:	push   ecx
1000741b:	call   0x1001868d
10007420:	mov    esi,eax
10007422:	add    esp,0x4
10007425:	cmp    esi,edi
10007427:	je     0x10007432
10007429:	push   edi
1000742a:	call   0x1001876e
1000742f:	add    esp,0x4
10007432:	mov    eax,DWORD PTR [ebp+0x10]
10007435:	test   eax,eax
10007437:	mov    edi,esi
10007439:	mov    DWORD PTR [esp+0x10],edi
1000743d:	mov    DWORD PTR [esi+0x4],ebx
10007440:	je     0x10007449
10007442:	mov    dx,WORD PTR [eax]
10007445:	mov    WORD PTR [esi+0x8],dx
10007449:	mov    eax,DWORD PTR [esi+0x4]
1000744c:	mov    ecx,DWORD PTR [ebp+0x8]
1000744f:	add    eax,0x8
10007452:	push   eax
10007453:	push   esi
10007454:	push   eax
10007455:	push   esi
10007456:	push   0x3
10007458:	call   0x10007670
1000745d:	test   eax,eax
1000745f:	je     0x100074b1
10007461:	cmp    DWORD PTR [esi],0x1
10007464:	je     0x10007414
10007466:	xor    ebx,ebx
10007468:	cmp    DWORD PTR [edi],ebx
1000746a:	je     0x10007519
10007470:	push   0x100b80e8
10007475:	push   0x19
10007477:	push   0x100b8068
1000747c:	call   0x100033d0
10007481:	add    esp,0xc
10007484:	push   eax
10007485:	lea    ecx,[esp+0x1c]
10007489:	call   0x10002bc0
1000748e:	lea    eax,[esp+0x18]
10007492:	push   eax
10007493:	lea    ecx,[esp+0x38]
10007497:	push   ecx
10007498:	mov    BYTE PTR [esp+0x70],0x4
1000749d:	call   0x10001550
100074a2:	push   0x100bb980
100074a7:	lea    edx,[esp+0x38]
100074ab:	push   edx
100074ac:	call   0x10018e6e
100074b1:	push   0x100b8088
100074b6:	push   0x19
100074b8:	push   0x100b8068
100074bd:	call   0x100033d0
100074c2:	mov    ecx,eax
100074c4:	add    esp,0xc
100074c7:	mov    DWORD PTR [esp+0x30],0xf
100074cf:	mov    DWORD PTR [esp+0x2c],0x0
100074d7:	mov    BYTE PTR [esp+0x1c],0x0
100074dc:	lea    esi,[ecx+0x1]
100074df:	nop
100074e0:	mov    dl,BYTE PTR [ecx]
100074e2:	add    ecx,0x1
100074e5:	test   dl,dl
100074e7:	jne    0x100074e0
100074e9:	sub    ecx,esi
100074eb:	push   ecx
100074ec:	push   eax
100074ed:	lea    ecx,[esp+0x20]
100074f1:	call   0x10003a70
100074f6:	lea    eax,[esp+0x18]
100074fa:	push   eax
100074fb:	lea    ecx,[esp+0x38]
100074ff:	push   ecx
10007500:	mov    BYTE PTR [esp+0x70],0x3
10007505:	call   0x10001550
1000750a:	push   0x100bb980
1000750f:	lea    edx,[esp+0x38]
10007513:	push   edx
10007514:	call   0x10018e6e
10007519:	mov    eax,DWORD PTR [edi+0x4]
1000751c:	mov    esi,DWORD PTR [ebp+0xc]
1000751f:	push   eax
10007520:	lea    eax,[edi+0x8]
10007523:	mov    DWORD PTR [esi+0x18],0xf
1000752a:	mov    DWORD PTR [esi+0x14],ebx
1000752d:	push   eax
1000752e:	mov    ecx,esi
10007530:	mov    BYTE PTR [esi+0x4],0x0
10007534:	call   0x10003a70
10007539:	push   edi
1000753a:	call   0x1001876e
1000753f:	add    esp,0x4
10007542:	push   ebx
10007543:	call   0x1001876e
10007548:	add    esp,0x4
1000754b:	mov    eax,esi
1000754d:	mov    ecx,DWORD PTR [esp+0x60]
10007551:	mov    DWORD PTR fs:0x0,ecx
10007558:	pop    ecx
10007559:	pop    edi
1000755a:	pop    esi
1000755b:	pop    ebx
1000755c:	mov    esp,ebp
1000755e:	pop    ebp
1000755f:	ret    0xc
10007562:	int3   
10007563:	int3   
10007564:	int3   
10007565:	int3   
10007566:	int3   
10007567:	int3   
10007568:	int3   
10007569:	int3   
1000756a:	int3   
1000756b:	int3   
1000756c:	int3   
1000756d:	int3   
1000756e:	int3   
1000756f:	int3   
10007570:	push   ebp
10007571:	mov    ebp,esp
10007573:	and    esp,0xfffffff8
10007576:	push   0xffffffff
10007578:	push   0x1002e038
1000757d:	mov    eax,fs:0x0
10007583:	push   eax
10007584:	sub    esp,0x50
10007587:	push   esi
10007588:	mov    eax,ds:0x100c7654
1000758d:	xor    eax,esp
1000758f:	push   eax
10007590:	lea    eax,[esp+0x58]
10007594:	mov    fs:0x0,eax
1000759a:	mov    eax,DWORD PTR [ebp+0x8]
1000759d:	push   0x4
1000759f:	lea    edx,[esp+0x10]
100075a3:	push   edx
100075a4:	mov    DWORD PTR [esp+0x14],eax
100075a8:	push   0x4
100075aa:	mov    eax,edx
100075ac:	push   eax
100075ad:	push   0x2
100075af:	call   0x10007670
100075b4:	test   eax,eax
100075b6:	jne    0x10007622
100075b8:	push   0x100b8140
100075bd:	push   0x12
100075bf:	push   0x100b8190
100075c4:	call   0x100033d0
100075c9:	mov    ecx,eax
100075cb:	add    esp,0xc
100075ce:	mov    DWORD PTR [esp+0x28],0xf
100075d6:	mov    DWORD PTR [esp+0x24],0x0
100075de:	mov    BYTE PTR [esp+0x14],0x0
100075e3:	lea    esi,[ecx+0x1]
100075e6:	mov    dl,BYTE PTR [ecx]
100075e8:	add    ecx,0x1
100075eb:	test   dl,dl
100075ed:	jne    0x100075e6
100075ef:	sub    ecx,esi
100075f1:	push   ecx
100075f2:	push   eax
100075f3:	lea    ecx,[esp+0x18]
100075f7:	call   0x10003a70
100075fc:	lea    ecx,[esp+0x10]
10007600:	push   ecx
10007601:	lea    edx,[esp+0x30]
10007605:	push   edx
10007606:	mov    DWORD PTR [esp+0x68],0x0
1000760e:	call   0x10001550
10007613:	push   0x100bb980
10007618:	lea    eax,[esp+0x30]
1000761c:	push   eax
1000761d:	call   0x10018e6e
10007622:	cmp    DWORD PTR [esp+0xc],0x0
10007627:	setne  al
1000762a:	mov    ecx,DWORD PTR [esp+0x58]
1000762e:	mov    DWORD PTR fs:0x0,ecx
10007635:	pop    ecx
10007636:	pop    esi
10007637:	mov    esp,ebp
10007639:	pop    ebp
1000763a:	ret    0x4
1000763d:	int3   
1000763e:	int3   
1000763f:	int3   
10007640:	push   ecx
10007641:	push   esi
10007642:	mov    esi,DWORD PTR [esp+0xc]
10007646:	lea    eax,[esp+0x10]
1000764a:	push   eax
1000764b:	push   esi
1000764c:	push   ecx
1000764d:	mov    DWORD PTR [esp+0x10],0x0
10007655:	call   0x10007330
1000765a:	mov    eax,esi
1000765c:	pop    esi
1000765d:	pop    ecx
1000765e:	ret    0x8
10007661:	int3   
10007662:	int3   
10007663:	int3   
10007664:	int3   
10007665:	int3   
10007666:	int3   
10007667:	int3   
10007668:	int3   
10007669:	int3   
1000766a:	int3   
1000766b:	int3   
1000766c:	int3   
1000766d:	int3   
1000766e:	int3   
1000766f:	int3   
10007670:	push   0xffffffff
10007672:	push   0x1002e008
10007677:	mov    eax,fs:0x0
1000767d:	push   eax
1000767e:	push   ecx
1000767f:	push   ebx
10007680:	push   ebp
10007681:	push   esi
10007682:	push   edi
10007683:	mov    eax,ds:0x100c7654
10007688:	xor    eax,esp
1000768a:	push   eax
1000768b:	lea    eax,[esp+0x18]
1000768f:	mov    fs:0x0,eax
10007695:	mov    esi,ecx
10007697:	xor    ebp,ebp
10007699:	mov    DWORD PTR [esp+0x14],ebp
1000769d:	mov    DWORD PTR [esp+0x20],ebp
100076a1:	cmp    BYTE PTR [esi],0x0
100076a4:	jne    0x100076b1
100076a6:	call   0x10007770
100076ab:	mov    ebp,eax
100076ad:	mov    ebx,ebp
100076af:	jmp    0x100076e7
100076b1:	cmp    DWORD PTR [esi+0x4],0xffffffff
100076b5:	jne    0x100076e4
100076b7:	call   0x10007770
100076bc:	mov    edi,DWORD PTR [esi+0x4]
100076bf:	test   edi,edi
100076c1:	mov    DWORD PTR [esp+0x14],eax
100076c5:	je     0x100076dd
100076c7:	call   DWORD PTR ds:0x1002f094
100076cd:	push   edi
100076ce:	mov    ebx,eax
100076d0:	call   DWORD PTR ds:0x1002f064
100076d6:	push   ebx
100076d7:	call   DWORD PTR ds:0x1002f090
100076dd:	mov    eax,DWORD PTR [esp+0x14]
100076e1:	mov    DWORD PTR [esi+0x4],eax
100076e4:	mov    ebx,DWORD PTR [esi+0x4]
100076e7:	cmp    ebx,0xffffffff
100076ea:	jne    0x1000770a
100076ec:	test   ebp,ebp
100076ee:	je     0x10007706
100076f0:	call   DWORD PTR ds:0x1002f094
100076f6:	push   ebp
100076f7:	mov    esi,eax
100076f9:	call   DWORD PTR ds:0x1002f064
100076ff:	push   esi
10007700:	call   DWORD PTR ds:0x1002f090
10007706:	xor    eax,eax
10007708:	jmp    0x10007755
1000770a:	mov    ecx,DWORD PTR [esp+0x38]
1000770e:	mov    edx,DWORD PTR [esp+0x30]
10007712:	mov    edi,DWORD PTR [esp+0x34]
10007716:	push   ecx
10007717:	mov    ecx,DWORD PTR [esp+0x2c]
1000771b:	push   edx
1000771c:	mov    edx,DWORD PTR [esp+0x34]
10007720:	push   esi
10007721:	call   0x100079d0
10007726:	mov    edi,eax
10007728:	test   edi,edi
1000772a:	jne    0x10007739
1000772c:	cmp    BYTE PTR [esi],al
1000772e:	je     0x10007739
10007730:	push   eax
10007731:	lea    ecx,[esi+0x4]
10007734:	call   0x10003f00
10007739:	test   ebp,ebp
1000773b:	je     0x10007753
1000773d:	call   DWORD PTR ds:0x1002f094
10007743:	push   ebp
10007744:	mov    esi,eax
10007746:	call   DWORD PTR ds:0x1002f064
1000774c:	push   esi
1000774d:	call   DWORD PTR ds:0x1002f090
10007753:	mov    eax,edi
10007755:	mov    ecx,DWORD PTR [esp+0x18]
10007759:	mov    DWORD PTR fs:0x0,ecx
10007760:	pop    ecx
10007761:	pop    edi
10007762:	pop    esi
10007763:	pop    ebp
10007764:	pop    ebx
10007765:	add    esp,0x10
10007768:	ret    0x14
1000776b:	int3   
1000776c:	int3   
1000776d:	int3   
1000776e:	int3   
1000776f:	int3   
10007770:	push   ebp
10007771:	mov    ebp,esp
10007773:	and    esp,0xfffffff8
10007776:	push   0xffffffff
10007778:	push   0x1002dfde
1000777d:	mov    eax,fs:0x0
10007783:	push   eax
10007784:	sub    esp,0x14
10007787:	push   ebx
10007788:	push   ebp
10007789:	push   esi
1000778a:	push   edi
1000778b:	mov    eax,ds:0x100c7654
10007790:	xor    eax,esp
10007792:	push   eax
10007793:	lea    eax,[esp+0x28]
10007797:	mov    fs:0x0,eax
1000779d:	xor    ebp,ebp
1000779f:	mov    DWORD PTR [esp+0x1c],ebp
100077a3:	mov    DWORD PTR [esp+0x30],ebp
100077a7:	mov    eax,ds:0x100c9fbc
100077ac:	push   eax
100077ad:	lea    ecx,[esp+0x1c]
100077b1:	call   0x10002dc0
100077b6:	mov    BYTE PTR [esp+0x30],0x1
100077bb:	test   BYTE PTR ds:0x100ca048,0x1
100077c2:	jne    0x10007811
100077c4:	or     DWORD PTR ds:0x100ca048,0x1
100077cb:	push   0x100b81a8
100077d0:	push   0xb
100077d2:	push   0x100b8224
100077d7:	mov    BYTE PTR [esp+0x3c],0x2
100077dc:	call   0x100033d0
100077e1:	add    esp,0xc
100077e4:	push   eax
100077e5:	push   0x100b8230
100077ea:	push   0xc
100077ec:	push   0x100b8274
100077f1:	call   0x100033d0
100077f6:	add    esp,0xc
100077f9:	push   eax
100077fa:	call   DWORD PTR ds:0x1002f0fc
10007800:	push   eax
10007801:	call   DWORD PTR ds:0x1002f050
10007807:	mov    ds:0x100ca044,eax
1000780c:	mov    BYTE PTR [esp+0x30],0x1
10007811:	mov    ecx,DWORD PTR [esp+0x18]
10007815:	push   0x0
10007817:	push   0x0
10007819:	push   0x3
1000781b:	push   0x0
1000781d:	push   0x0
1000781f:	push   0xc0000000
10007824:	push   ecx
10007825:	call   DWORD PTR ds:0x100ca044
1000782b:	test   ebp,ebp
1000782d:	mov    ebx,DWORD PTR ds:0x1002f094
10007833:	mov    esi,eax
10007835:	je     0x10007849
10007837:	call   ebx
10007839:	push   ebp
1000783a:	mov    edi,eax
1000783c:	call   DWORD PTR ds:0x1002f064
10007842:	push   edi
10007843:	call   DWORD PTR ds:0x1002f090
10007849:	cmp    esi,0xffffffff
1000784c:	mov    ebp,esi
1000784e:	mov    DWORD PTR [esp+0x1c],ebp
10007852:	jne    0x100078de
10007858:	call   ebx
1000785a:	cmp    eax,0xe7
1000785f:	jne    0x1000797b
10007865:	mov    edi,DWORD PTR [esp+0x18]
10007869:	push   0x0
1000786b:	push   0x1
1000786d:	push   0x100c9ee4
10007872:	call   DWORD PTR ds:0x1002f0f8
10007878:	test   eax,eax
1000787a:	jne    0x100078c5
1000787c:	mov    ebx,0x100ba0d0
10007881:	call   0x1000f070
10007886:	mov    ecx,0x100b9d80
1000788b:	mov    esi,eax
1000788d:	call   0x1000ee70
10007892:	push   eax
10007893:	call   DWORD PTR ds:0x1002f108
10007899:	mov    ebx,0x1
1000789e:	add    DWORD PTR ds:0x100c8ab4,ebx
100078a4:	test   eax,eax
100078a6:	je     0x100078b8
100078a8:	push   esi
100078a9:	push   eax
100078aa:	call   DWORD PTR ds:0x1002f050
100078b0:	add    DWORD PTR ds:0x100c8ab8,ebx
100078b6:	jmp    0x100078ba
100078b8:	xor    eax,eax
100078ba:	mov    ebx,DWORD PTR ds:0x1002f094
100078c0:	mov    ds:0x100c9fe0,eax
100078c5:	push   0x1f4
100078ca:	push   edi
100078cb:	call   DWORD PTR ds:0x100c9fe0
100078d1:	test   eax,eax
100078d3:	jne    0x10007811
100078d9:	jmp    0x1000797d
100078de:	push   0x0
100078e0:	push   0x0
100078e2:	lea    edx,[esp+0x28]
100078e6:	push   edx
100078e7:	push   esi
100078e8:	mov    DWORD PTR [esp+0x30],0x2
100078f0:	call   0x1000e570
100078f5:	call   eax
100078f7:	test   eax,eax
100078f9:	jne    0x10007938
100078fb:	call   ebx
100078fd:	mov    BYTE PTR [esp+0x30],0x0
10007902:	mov    eax,DWORD PTR [esp+0x18]
10007906:	add    eax,0xfffffff0
10007909:	lea    ecx,[eax+0xc]
1000790c:	or     edx,0xffffffff
1000790f:	lock xadd DWORD PTR [ecx],edx
10007913:	dec    edx
10007914:	test   edx,edx
10007916:	jg     0x10007922
10007918:	mov    ecx,DWORD PTR [eax]
1000791a:	mov    edx,DWORD PTR [ecx]
1000791c:	push   eax
1000791d:	mov    eax,DWORD PTR [edx+0x4]
10007920:	call   eax
10007922:	test   esi,esi
10007924:	je     0x100079b5
1000792a:	call   ebx
1000792c:	push   esi
1000792d:	mov    edi,eax
1000792f:	call   DWORD PTR ds:0x1002f064
10007935:	push   edi
10007936:	jmp    0x100079af
10007938:	mov    BYTE PTR [esp+0x30],0x0
1000793d:	mov    eax,DWORD PTR [esp+0x18]
10007941:	add    eax,0xfffffff0
10007944:	mov    DWORD PTR [esp+0x1c],0x0
1000794c:	lea    ecx,[eax+0xc]
1000794f:	or     edx,0xffffffff
10007952:	lock xadd DWORD PTR [ecx],edx
10007956:	dec    edx
10007957:	test   edx,edx
10007959:	jg     0x10007965
1000795b:	mov    ecx,DWORD PTR [eax]
1000795d:	mov    edx,DWORD PTR [ecx]
1000795f:	push   eax
10007960:	mov    eax,DWORD PTR [edx+0x4]
10007963:	call   eax
10007965:	mov    eax,esi
10007967:	mov    ecx,DWORD PTR [esp+0x28]
1000796b:	mov    DWORD PTR fs:0x0,ecx
10007972:	pop    ecx
10007973:	pop    edi
10007974:	pop    esi
10007975:	pop    ebp
10007976:	pop    ebx
10007977:	mov    esp,ebp
10007979:	pop    ebp
1000797a:	ret    
1000797b:	call   ebx
1000797d:	mov    BYTE PTR [esp+0x30],0x0
10007982:	mov    eax,DWORD PTR [esp+0x18]
10007986:	add    eax,0xfffffff0
10007989:	or     edx,0xffffffff
1000798c:	lea    ecx,[eax+0xc]
1000798f:	lock xadd DWORD PTR [ecx],edx
10007993:	dec    edx
10007994:	test   edx,edx
10007996:	jg     0x100079a2
10007998:	mov    ecx,DWORD PTR [eax]
1000799a:	mov    edx,DWORD PTR [ecx]
1000799c:	push   eax
1000799d:	mov    eax,DWORD PTR [edx+0x4]
100079a0:	call   eax
100079a2:	call   ebx
100079a4:	push   0xffffffff
100079a6:	mov    esi,eax
100079a8:	call   DWORD PTR ds:0x1002f064
100079ae:	push   esi
100079af:	call   DWORD PTR ds:0x1002f090
100079b5:	or     eax,0xffffffff
100079b8:	mov    ecx,DWORD PTR [esp+0x28]
100079bc:	mov    DWORD PTR fs:0x0,ecx
100079c3:	pop    ecx
100079c4:	pop    edi
100079c5:	pop    esi
100079c6:	pop    ebp
100079c7:	pop    ebx
100079c8:	mov    esp,ebp
100079ca:	pop    ebp
100079cb:	ret    
100079cc:	int3   
100079cd:	int3   
100079ce:	int3   
100079cf:	int3   
100079d0:	push   ebp
100079d1:	mov    ebp,esp
100079d3:	and    esp,0xfffffff8
100079d6:	sub    esp,0x5c
100079d9:	mov    eax,ds:0x100c7654
100079de:	xor    eax,esp
100079e0:	mov    DWORD PTR [esp+0x58],eax
100079e4:	xor    eax,eax
100079e6:	cmp    BYTE PTR ds:0x100c9d8c,al
100079ec:	push   esi
100079ed:	mov    esi,edx
100079ef:	mov    WORD PTR [esp+0x18],ax
100079f4:	mov    DWORD PTR [esp+0x1a],eax
100079f8:	mov    DWORD PTR [esp+0x1e],eax
100079fc:	mov    DWORD PTR [esp+0x22],eax
10007a00:	mov    WORD PTR [esp+0x26],ax
10007a05:	mov    DWORD PTR [esp+0x28],eax
10007a09:	mov    DWORD PTR [esp+0x2c],eax
10007a0d:	mov    DWORD PTR [esp+0x30],eax
10007a11:	mov    DWORD PTR [esp+0x34],eax
10007a15:	mov    DWORD PTR [esp+0x38],eax
10007a19:	mov    WORD PTR [esp+0x3c],ax
10007a1e:	mov    DWORD PTR [esp+0x3e],eax
10007a22:	mov    DWORD PTR [esp+0x42],eax
10007a26:	mov    DWORD PTR [esp+0x46],eax
10007a2a:	mov    WORD PTR [esp+0x4a],ax
10007a2f:	mov    DWORD PTR [esp+0x4c],eax
10007a33:	mov    DWORD PTR [esp+0x50],eax
10007a37:	mov    DWORD PTR [esp+0x54],eax
10007a3b:	mov    DWORD PTR [esp+0x58],eax
10007a3f:	jne    0x10007a8e
10007a41:	mov    DWORD PTR [esp+0x28],ecx
10007a45:	call   DWORD PTR ds:0x1002f0b8
10007a4b:	mov    ecx,DWORD PTR [ebp+0x10]
10007a4e:	mov    DWORD PTR [esp+0x2c],eax
10007a52:	mov    eax,DWORD PTR [ebp+0xc]
10007a55:	cmp    esi,edi
10007a57:	mov    DWORD PTR [esp+0x30],eax
10007a5b:	mov    eax,DWORD PTR [ebp+0x8]
10007a5e:	sete   dl
10007a61:	cmp    BYTE PTR [eax+0x8],0x0
10007a65:	mov    DWORD PTR [esp+0x34],ecx
10007a69:	mov    BYTE PTR [esp+0x38],dl
10007a6d:	je     0x10007a83
10007a6f:	push   0x8
10007a71:	lea    ecx,[esp+0x1c]
10007a75:	push   0x100b7804
10007a7a:	push   ecx
10007a7b:	call   0x1001a53e
10007a80:	add    esp,0xc
10007a83:	mov    eax,0x24
10007a88:	lea    ecx,[esp+0x18]
10007a8c:	jmp    0x10007acf
10007a8e:	mov    edx,DWORD PTR [ebp+0xc]
10007a91:	mov    eax,DWORD PTR [ebp+0x10]
10007a94:	cmp    esi,edi
10007a96:	mov    DWORD PTR [esp+0x50],edx
10007a9a:	mov    edx,DWORD PTR [ebp+0x8]
10007a9d:	mov    DWORD PTR [esp+0x4c],ecx
10007aa1:	sete   cl
10007aa4:	cmp    BYTE PTR [edx+0x8],0x0
10007aa8:	mov    DWORD PTR [esp+0x54],eax
10007aac:	mov    BYTE PTR [esp+0x58],cl
10007ab0:	je     0x10007ac6
10007ab2:	push   0x8
10007ab4:	lea    eax,[esp+0x40]
10007ab8:	push   0x100b7804
10007abd:	push   eax
10007abe:	call   0x1001a53e
10007ac3:	add    esp,0xc
10007ac6:	mov    eax,0x20
10007acb:	lea    ecx,[esp+0x3c]
10007acf:	push   0x0
10007ad1:	lea    edx,[esp+0x14]
10007ad5:	push   edx
10007ad6:	push   eax
10007ad7:	push   ecx
10007ad8:	push   ebx
10007ad9:	call   DWORD PTR ds:0x1002f0c0
10007adf:	test   eax,eax
10007ae1:	jne    0x10007af7
10007ae3:	xor    eax,eax
10007ae5:	pop    esi
10007ae6:	mov    ecx,DWORD PTR [esp+0x58]
10007aea:	xor    ecx,esp
10007aec:	call   0x10018773
10007af1:	mov    esp,ebp
10007af3:	pop    ebp
10007af4:	ret    0xc
10007af7:	mov    ecx,DWORD PTR [ebp+0xc]
10007afa:	push   0x0
10007afc:	lea    eax,[esp+0x14]
10007b00:	push   eax
10007b01:	push   ecx
10007b02:	push   esi
10007b03:	push   ebx
10007b04:	call   DWORD PTR ds:0x1002f0c0
10007b0a:	test   eax,eax
10007b0c:	je     0x10007ae3
10007b0e:	mov    esi,DWORD PTR ds:0x1002f074
10007b14:	xor    eax,eax
10007b16:	push   eax
10007b17:	lea    edx,[esp+0x18]
10007b1b:	push   edx
10007b1c:	mov    DWORD PTR [esp+0x10],eax
10007b20:	mov    DWORD PTR [esp+0x14],eax
10007b24:	push   0x8
10007b26:	lea    eax,[esp+0x14]
10007b2a:	push   eax
10007b2b:	push   ebx
10007b2c:	call   esi
10007b2e:	test   eax,eax
10007b30:	je     0x10007ae3
10007b32:	cmp    DWORD PTR [esp+0x8],0x0
10007b37:	je     0x10007ae3
10007b39:	mov    eax,DWORD PTR [esp+0xc]
10007b3d:	cmp    eax,DWORD PTR [ebp+0x10]
10007b40:	ja     0x10007ae3
10007b42:	test   eax,eax
10007b44:	je     0x10007b56
10007b46:	push   0x0
10007b48:	lea    ecx,[esp+0x18]
10007b4c:	push   ecx
10007b4d:	push   eax
10007b4e:	push   edi
10007b4f:	push   ebx
10007b50:	call   esi
10007b52:	test   eax,eax
10007b54:	je     0x10007ae3
10007b56:	mov    ecx,DWORD PTR [esp+0x5c]
10007b5a:	pop    esi
10007b5b:	xor    ecx,esp
10007b5d:	mov    eax,0x1
10007b62:	call   0x10018773
10007b67:	mov    esp,ebp
10007b69:	pop    ebp
10007b6a:	ret    0xc
10007b6d:	int3   
10007b6e:	int3   
10007b6f:	int3   
10007b70:	cmp    DWORD PTR [ecx+0x18],0x10
10007b74:	jb     0x10007b7a
10007b76:	mov    eax,DWORD PTR [ecx+0x4]
10007b79:	ret    
10007b7a:	lea    eax,[ecx+0x4]
10007b7d:	ret    
10007b7e:	int3   
10007b7f:	int3   
10007b80:	mov    eax,DWORD PTR [ecx]
10007b82:	mov    DWORD PTR [ecx],0x0
10007b88:	ret    
10007b89:	int3   
10007b8a:	int3   
10007b8b:	int3   
10007b8c:	int3   
10007b8d:	int3   
10007b8e:	int3   
10007b8f:	int3   
10007b90:	push   esi
10007b91:	mov    esi,ecx
10007b93:	mov    DWORD PTR [esi],0x100b20d8
10007b99:	cmp    DWORD PTR [esi+0x24],0x10
10007b9d:	jb     0x10007bab
10007b9f:	mov    eax,DWORD PTR [esi+0x10]
10007ba2:	push   eax
10007ba3:	call   0x1001876e
10007ba8:	add    esp,0x4
10007bab:	xor    eax,eax
10007bad:	mov    DWORD PTR [esi+0x24],0xf
10007bb4:	mov    DWORD PTR [esi+0x20],eax
10007bb7:	mov    BYTE PTR [esi+0x10],al
10007bba:	mov    ecx,esi
10007bbc:	pop    esi
10007bbd:	jmp    0x10018fcc
10007bc2:	int3   
10007bc3:	int3   
10007bc4:	int3   
10007bc5:	int3   
10007bc6:	int3   
10007bc7:	int3   
10007bc8:	int3   
10007bc9:	int3   
10007bca:	int3   
10007bcb:	int3   
10007bcc:	int3   
10007bcd:	int3   
10007bce:	int3   
10007bcf:	int3   
10007bd0:	push   esi
10007bd1:	mov    esi,ecx
10007bd3:	mov    DWORD PTR [esi],0x100b20d8
10007bd9:	cmp    DWORD PTR [esi+0x24],0x10
10007bdd:	jb     0x10007beb
10007bdf:	mov    eax,DWORD PTR [esi+0x10]
10007be2:	push   eax
10007be3:	call   0x1001876e
10007be8:	add    esp,0x4
10007beb:	xor    eax,eax
10007bed:	mov    DWORD PTR [esi+0x24],0xf
10007bf4:	mov    DWORD PTR [esi+0x20],eax
10007bf7:	mov    ecx,esi
10007bf9:	mov    BYTE PTR [esi+0x10],al
10007bfc:	call   0x10018fcc
10007c01:	test   BYTE PTR [esp+0x8],0x1
10007c06:	je     0x10007c11
10007c08:	push   esi
10007c09:	call   0x1001876e
10007c0e:	add    esp,0x4
10007c11:	mov    eax,esi
10007c13:	pop    esi
10007c14:	ret    0x4
10007c17:	int3   
10007c18:	int3   
10007c19:	int3   
10007c1a:	int3   
10007c1b:	int3   
10007c1c:	int3   
10007c1d:	int3   
10007c1e:	int3   
10007c1f:	int3   
10007c20:	push   ecx
10007c21:	xor    eax,eax
10007c23:	cmp    WORD PTR [esp+0x8],ax
10007c28:	mov    DWORD PTR [esp],eax
10007c2b:	je     0x10007c40
10007c2d:	mov    DWORD PTR [esp+0x8],eax
10007c31:	push   0x100bba80
10007c36:	lea    eax,[esp+0xc]
10007c3a:	push   eax
10007c3b:	call   0x10018e6e
10007c40:	push   0x25
10007c42:	push   0x100b8e84
10007c47:	push   0xbf4
10007c4c:	push   0x100b8290
10007c51:	push   esi
10007c52:	call   0x1000ce80
10007c57:	add    esp,0x14
10007c5a:	mov    eax,esi
10007c5c:	pop    ecx
10007c5d:	ret    
10007c5e:	int3   
10007c5f:	int3   
10007c60:	push   ecx
10007c61:	xor    eax,eax
10007c63:	cmp    WORD PTR [esp+0x8],ax
10007c68:	mov    DWORD PTR [esp],eax
10007c6b:	je     0x10007c80
10007c6d:	mov    DWORD PTR [esp+0x8],eax
10007c71:	push   0x100bba80
10007c76:	lea    eax,[esp+0xc]
10007c7a:	push   eax
10007c7b:	call   0x10018e6e
10007c80:	push   0x25
10007c82:	push   0x100b8f04
10007c87:	push   0x53
10007c89:	push   0x100b8eb0
10007c8e:	push   esi
10007c8f:	call   0x1000ce80
10007c94:	add    esp,0x14
10007c97:	mov    eax,esi
10007c99:	pop    ecx
10007c9a:	ret    
10007c9b:	int3   
10007c9c:	int3   
10007c9d:	int3   
10007c9e:	int3   
10007c9f:	int3   
10007ca0:	sub    esp,0x8
10007ca3:	xor    eax,eax
10007ca5:	cmp    WORD PTR [esp+0xc],ax
10007caa:	mov    DWORD PTR [esp+0x4],eax
10007cae:	je     0x10007cc3
10007cb0:	mov    DWORD PTR [esp+0xc],eax
10007cb4:	push   0x100bba80
10007cb9:	lea    eax,[esp+0x10]
10007cbd:	push   eax
10007cbe:	call   0x10018e6e
10007cc3:	push   0x25
10007cc5:	push   0x100b8fc0
10007cca:	push   0x8e
10007ccf:	push   0x100b8f30
10007cd4:	push   esi
10007cd5:	call   0x1000ce80
10007cda:	add    esp,0x14
10007cdd:	mov    eax,esi
10007cdf:	add    esp,0x8
10007ce2:	ret    
10007ce3:	int3   
10007ce4:	int3   
10007ce5:	int3   
10007ce6:	int3   
10007ce7:	int3   
10007ce8:	int3   
10007ce9:	int3   
10007cea:	int3   
10007ceb:	int3   
10007cec:	int3   
10007ced:	int3   
10007cee:	int3   
10007cef:	int3   
10007cf0:	mov    DWORD PTR [ecx],0x100b9cd4
10007cf6:	ret    
10007cf7:	int3   
10007cf8:	int3   
10007cf9:	int3   
10007cfa:	int3   
10007cfb:	int3   
10007cfc:	int3   
10007cfd:	int3   
10007cfe:	int3   
10007cff:	int3   
10007d00:	test   BYTE PTR [esp+0x4],0x1
10007d05:	push   esi
10007d06:	mov    esi,ecx
10007d08:	mov    DWORD PTR [esi],0x100b9cd4
10007d0e:	je     0x10007d19
10007d10:	push   esi
10007d11:	call   0x1001876e
10007d16:	add    esp,0x4
10007d19:	mov    eax,esi
10007d1b:	pop    esi
10007d1c:	ret    0x4
10007d1f:	int3   
10007d20:	push   0xffffffff
10007d22:	push   0x1002d658
10007d27:	mov    eax,fs:0x0
10007d2d:	push   eax
10007d2e:	push   esi
10007d2f:	mov    eax,ds:0x100c7654
10007d34:	xor    eax,esp
10007d36:	push   eax
10007d37:	lea    eax,[esp+0x8]
10007d3b:	mov    fs:0x0,eax
10007d41:	mov    esi,DWORD PTR [esp+0x18]
10007d45:	mov    eax,DWORD PTR [esp+0x1c]
10007d49:	mov    DWORD PTR [esp+0x10],0x0
10007d51:	mov    DWORD PTR [esi],0x100b9cdc
10007d57:	mov    eax,DWORD PTR [eax]
10007d59:	sub    eax,0x10
10007d5c:	push   eax
10007d5d:	call   0x10004af0
10007d62:	add    esp,0x4
10007d65:	add    eax,0x10
10007d68:	mov    DWORD PTR [esi+0x4],eax
10007d6b:	mov    eax,esi
10007d6d:	mov    ecx,DWORD PTR [esp+0x8]
10007d71:	mov    DWORD PTR fs:0x0,ecx
10007d78:	pop    ecx
10007d79:	pop    esi
10007d7a:	add    esp,0xc
10007d7d:	ret    0x8
10007d80:	mov    ecx,DWORD PTR [ecx+0x4]
10007d83:	push   ecx
10007d84:	call   DWORD PTR ds:0x1002f0b0
10007d8a:	test   eax,eax
10007d8c:	jne    0x10007d93
10007d8e:	xor    edx,edx
10007d90:	ret    0x4
10007d93:	mov    ecx,DWORD PTR [esp+0x4]
10007d97:	push   ecx
10007d98:	push   eax
10007d99:	call   DWORD PTR ds:0x1002f050
10007d9f:	xor    edx,edx
10007da1:	ret    0x4
10007da4:	int3   
10007da5:	int3   
10007da6:	int3   
10007da7:	int3   
10007da8:	int3   
10007da9:	int3   
10007daa:	int3   
10007dab:	int3   
10007dac:	int3   
10007dad:	int3   
10007dae:	int3   
10007daf:	int3   
10007db0:	push   esi
10007db1:	mov    esi,ecx
10007db3:	mov    eax,DWORD PTR [esi+0x4]
10007db6:	sub    eax,0x10
10007db9:	lea    ecx,[eax+0xc]
10007dbc:	or     edx,0xffffffff
10007dbf:	lock xadd DWORD PTR [ecx],edx
10007dc3:	dec    edx
10007dc4:	test   edx,edx
10007dc6:	jg     0x10007dd2
10007dc8:	mov    ecx,DWORD PTR [eax]
10007dca:	mov    edx,DWORD PTR [ecx]
10007dcc:	push   eax
10007dcd:	mov    eax,DWORD PTR [edx+0x4]
10007dd0:	call   eax
10007dd2:	test   BYTE PTR [esp+0x8],0x1
10007dd7:	mov    DWORD PTR [esi],0x100b9cd4
10007ddd:	je     0x10007de8
10007ddf:	push   esi
10007de0:	call   0x1001876e
10007de5:	add    esp,0x4
10007de8:	mov    eax,esi
10007dea:	pop    esi
10007deb:	ret    0x4
10007dee:	int3   
10007def:	int3   
10007df0:	push   0xffffffff
10007df2:	push   0x1002d8c3
10007df7:	mov    eax,fs:0x0
10007dfd:	push   eax
10007dfe:	push   ecx
10007dff:	push   esi
10007e00:	mov    eax,ds:0x100c7654
10007e05:	xor    eax,esp
10007e07:	push   eax
10007e08:	lea    eax,[esp+0xc]
10007e0c:	mov    fs:0x0,eax
10007e12:	xor    esi,esi
10007e14:	push   0x8
10007e16:	mov    DWORD PTR [esp+0x18],esi
10007e1a:	call   0x100190b4
10007e1f:	add    esp,0x4
10007e22:	mov    DWORD PTR [esp+0x8],eax
10007e26:	cmp    eax,esi
10007e28:	mov    BYTE PTR [esp+0x14],0x1
10007e2d:	je     0x10007e3c
10007e2f:	lea    ecx,[esp+0x1c]
10007e33:	push   ecx
10007e34:	push   eax
10007e35:	call   0x10007d20
10007e3a:	mov    esi,eax
10007e3c:	mov    DWORD PTR [esp+0x14],0xffffffff
10007e44:	mov    eax,DWORD PTR [esp+0x1c]
10007e48:	add    eax,0xfffffff0
10007e4b:	lea    edx,[eax+0xc]
10007e4e:	or     ecx,0xffffffff
10007e51:	lock xadd DWORD PTR [edx],ecx
10007e55:	dec    ecx
10007e56:	test   ecx,ecx
10007e58:	jg     0x10007e64
10007e5a:	mov    ecx,DWORD PTR [eax]
10007e5c:	mov    edx,DWORD PTR [ecx]
10007e5e:	push   eax
10007e5f:	mov    eax,DWORD PTR [edx+0x4]
10007e62:	call   eax
10007e64:	mov    eax,esi
10007e66:	mov    ecx,DWORD PTR [esp+0xc]
10007e6a:	mov    DWORD PTR fs:0x0,ecx
10007e71:	pop    ecx
10007e72:	pop    esi
10007e73:	add    esp,0x10
10007e76:	ret    
10007e77:	int3   
10007e78:	int3   
10007e79:	int3   
10007e7a:	int3   
10007e7b:	int3   
10007e7c:	int3   
10007e7d:	int3   
10007e7e:	int3   
10007e7f:	int3   
10007e80:	mov    eax,DWORD PTR [eax]
10007e82:	ret    
10007e83:	int3   
10007e84:	int3   
10007e85:	int3   
10007e86:	int3   
10007e87:	int3   
10007e88:	int3   
10007e89:	int3   
10007e8a:	int3   
10007e8b:	int3   
10007e8c:	int3   
10007e8d:	int3   
10007e8e:	int3   
10007e8f:	int3   
10007e90:	push   0xffffffff
10007e92:	push   0x1002df98
10007e97:	mov    eax,fs:0x0
10007e9d:	push   eax
10007e9e:	push   ecx
10007e9f:	push   edi
10007ea0:	mov    eax,ds:0x100c7654
10007ea5:	xor    eax,esp
10007ea7:	push   eax
10007ea8:	lea    eax,[esp+0xc]
10007eac:	mov    fs:0x0,eax
10007eb2:	mov    edi,DWORD PTR [esp+0x1c]
10007eb6:	mov    DWORD PTR [esp+0x14],0x0
10007ebe:	call   0x10007fe0
10007ec3:	mov    ecx,edi
10007ec5:	call   0x1000a680
10007eca:	mov    ecx,DWORD PTR [esp+0xc]
10007ece:	mov    DWORD PTR fs:0x0,ecx
10007ed5:	pop    ecx
10007ed6:	pop    edi
10007ed7:	add    esp,0x10
10007eda:	ret    0x4
10007edd:	int3   
10007ede:	int3   
10007edf:	int3   
10007ee0:	push   0xffffffff
10007ee2:	push   0x1002df68
10007ee7:	mov    eax,fs:0x0
10007eed:	push   eax
10007eee:	sub    esp,0x20
10007ef1:	push   ebx
10007ef2:	push   ebp
10007ef3:	push   esi
10007ef4:	push   edi
10007ef5:	mov    eax,ds:0x100c7654
10007efa:	xor    eax,esp
10007efc:	push   eax
10007efd:	lea    eax,[esp+0x34]
10007f01:	mov    fs:0x0,eax
10007f07:	mov    ebp,DWORD PTR [esp+0x44]
10007f0b:	mov    edi,ecx
10007f0d:	call   DWORD PTR ds:0x1002f10c
10007f13:	mov    ebx,eax
10007f15:	call   0x10007fe0
10007f1a:	push   0x0
10007f1c:	push   0x4
10007f1e:	call   0x1000e470
10007f23:	call   eax
10007f25:	mov    esi,eax
10007f27:	mov    DWORD PTR [esp+0x14],esi
10007f2b:	cmp    esi,0xffffffff
10007f2e:	mov    DWORD PTR [esp+0x3c],0x0
10007f36:	jne    0x10007f4b
10007f38:	call   DWORD PTR ds:0x1002f094
10007f3e:	push   0xffffffff
10007f40:	mov    esi,eax
10007f42:	call   DWORD PTR ds:0x1002f064
10007f48:	push   esi
10007f49:	jmp    0x10007fbb
10007f4b:	lea    eax,[esp+0x18]
10007f4f:	push   eax
10007f50:	push   esi
10007f51:	mov    DWORD PTR [esp+0x20],0x1c
10007f59:	call   0x1000ea90
10007f5e:	jmp    0x10007fa1
10007f60:	cmp    DWORD PTR [esp+0x24],ebp
10007f64:	jne    0x10007f96
10007f66:	mov    eax,DWORD PTR [esp+0x20]
10007f6a:	cmp    ebx,eax
10007f6c:	je     0x10007f96
10007f6e:	push   eax
10007f6f:	push   0x0
10007f71:	push   0x2
10007f73:	call   0x1000e9a0
10007f78:	call   eax
10007f7a:	lea    ecx,[esp+0x44]
10007f7e:	push   ecx
10007f7f:	mov    ecx,edi
10007f81:	mov    DWORD PTR [esp+0x48],eax
10007f85:	call   0x1000a630
10007f8a:	mov    edx,DWORD PTR [esp+0x44]
10007f8e:	push   edx
10007f8f:	call   0x1000e8b0
10007f94:	call   eax
10007f96:	lea    eax,[esp+0x18]
10007f9a:	push   eax
10007f9b:	push   esi
10007f9c:	call   0x1000e840
10007fa1:	call   eax
10007fa3:	test   eax,eax
10007fa5:	jne    0x10007f60
10007fa7:	test   esi,esi
10007fa9:	je     0x10007fc1
10007fab:	call   DWORD PTR ds:0x1002f094
10007fb1:	push   esi
10007fb2:	mov    edi,eax
10007fb4:	call   DWORD PTR ds:0x1002f064
10007fba:	push   edi
10007fbb:	call   DWORD PTR ds:0x1002f090
10007fc1:	mov    ecx,DWORD PTR [esp+0x34]
10007fc5:	mov    DWORD PTR fs:0x0,ecx
10007fcc:	pop    ecx
10007fcd:	pop    edi
10007fce:	pop    esi
10007fcf:	pop    ebp
10007fd0:	pop    ebx
10007fd1:	add    esp,0x2c
10007fd4:	ret    0x4
10007fd7:	int3   
10007fd8:	int3   
10007fd9:	int3   
10007fda:	int3   
10007fdb:	int3   
10007fdc:	int3   
10007fdd:	int3   
10007fde:	int3   
10007fdf:	int3   
10007fe0:	push   ebx
10007fe1:	push   ebp
10007fe2:	push   esi
10007fe3:	mov    ecx,edi
10007fe5:	call   0x1000a5e0
10007fea:	test   eax,eax
10007fec:	je     0x1000808a
10007ff2:	mov    ebp,DWORD PTR ds:0x1002f108
10007ff8:	jmp    0x10008000
10007ffa:	lea    ebx,[ebx+0x0]
10008000:	push   0x0
10008002:	push   0x1
10008004:	push   0x100c9f44
10008009:	call   DWORD PTR ds:0x1002f0f8
1000800f:	test   eax,eax
10008011:	jne    0x10008052
10008013:	mov    ebx,0x100ba17c
10008018:	call   0x1000f070
1000801d:	mov    ecx,0x100b9d80
10008022:	mov    esi,eax
10008024:	call   0x1000ee70
10008029:	push   eax
1000802a:	call   ebp
1000802c:	mov    ebx,0x1
10008031:	add    DWORD PTR ds:0x100c8ab4,ebx
10008037:	test   eax,eax
10008039:	je     0x1000804b
1000803b:	push   esi
1000803c:	push   eax
1000803d:	call   DWORD PTR ds:0x1002f050
10008043:	add    DWORD PTR ds:0x100c8ab8,ebx
10008049:	jmp    0x1000804d
1000804b:	xor    eax,eax
1000804d:	mov    ds:0x100ca004,eax
10008052:	mov    esi,DWORD PTR ds:0x100ca004
10008058:	mov    ecx,edi
1000805a:	call   0x1000a600
1000805f:	mov    eax,DWORD PTR [eax]
10008061:	push   eax
10008062:	call   esi
10008064:	mov    ecx,edi
10008066:	call   0x1000a600
1000806b:	mov    ecx,DWORD PTR [eax]
1000806d:	push   ecx
1000806e:	call   DWORD PTR ds:0x1002f064
10008074:	mov    ecx,edi
10008076:	call   0x1000a660
1000807b:	mov    ecx,edi
1000807d:	call   0x1000a5e0
10008082:	test   eax,eax
10008084:	jne    0x10008000
1000808a:	pop    esi
1000808b:	pop    ebp
1000808c:	pop    ebx
1000808d:	ret    
1000808e:	int3   
1000808f:	int3   
10008090:	jmp    0x1000a680
10008095:	int3   
10008096:	int3   
10008097:	int3   
10008098:	int3   
10008099:	int3   
1000809a:	int3   
1000809b:	int3   
1000809c:	int3   
1000809d:	int3   
1000809e:	int3   
1000809f:	int3   
100080a0:	push   0xffffffff
100080a2:	push   0x1002df3a
100080a7:	mov    eax,fs:0x0
100080ad:	push   eax
100080ae:	sub    esp,0x24
100080b1:	push   ebx
100080b2:	push   ebp
100080b3:	push   esi
100080b4:	push   edi
100080b5:	mov    eax,ds:0x100c7654
100080ba:	xor    eax,esp
100080bc:	push   eax
100080bd:	lea    eax,[esp+0x38]
100080c1:	mov    fs:0x0,eax
100080c7:	mov    esi,ecx
100080c9:	mov    edi,DWORD PTR [esp+0x48]
100080cd:	xor    ebx,ebx
100080cf:	mov    DWORD PTR [esp+0x14],ebx
100080d3:	mov    DWORD PTR [edi],ebx
100080d5:	mov    DWORD PTR [esp+0x40],ebx
100080d9:	lea    ecx,[edi+0x894]
100080df:	push   ebx
100080e0:	mov    DWORD PTR [edi+0x4],esi
100080e3:	mov    DWORD PTR [edi+0x888],ebx
100080e9:	mov    BYTE PTR [edi+0x890],bl
100080ef:	call   0x100121c0
100080f4:	push   esi
100080f5:	push   ebx
100080f6:	push   0x1f0fff
100080fb:	mov    BYTE PTR [esp+0x4c],0x1
10008100:	call   0x1000ea10
10008105:	call   eax
10008107:	mov    esi,DWORD PTR [edi]
10008109:	test   esi,esi
1000810b:	mov    ebp,eax
1000810d:	je     0x1000812b
1000810f:	call   DWORD PTR ds:0x1002f094
10008115:	push   esi
10008116:	mov    DWORD PTR [esp+0x18],eax
1000811a:	call   DWORD PTR ds:0x1002f064
10008120:	mov    eax,DWORD PTR [esp+0x14]
10008124:	push   eax
10008125:	call   DWORD PTR ds:0x1002f090
1000812b:	push   0x8
1000812d:	mov    DWORD PTR [edi],ebp
1000812f:	call   0x100190b4
10008134:	mov    ebp,eax
10008136:	add    esp,0x4
10008139:	mov    DWORD PTR [esp+0x18],ebp
1000813d:	test   ebp,ebp
1000813f:	mov    BYTE PTR [esp+0x40],0x2
10008144:	je     0x1000816c
10008146:	push   0x0
10008148:	lea    esi,[esp+0x20]
1000814c:	call   0x10007c20
10008151:	add    esp,0x4
10008154:	mov    BYTE PTR [esp+0x40],0x3
10008159:	mov    ebx,0x1
1000815e:	push   ebp
1000815f:	mov    ecx,eax
10008161:	mov    DWORD PTR [esp+0x18],ebx
10008165:	call   0x1000e040
1000816a:	jmp    0x1000816e
1000816c:	xor    eax,eax
1000816e:	push   eax
1000816f:	lea    ecx,[edi+0x894]
10008175:	call   0x1000a520
1000817a:	test   bl,0x1
1000817d:	je     0x10008193
1000817f:	cmp    DWORD PTR [esp+0x34],0x10
10008184:	jb     0x10008193
10008186:	mov    ecx,DWORD PTR [esp+0x20]
1000818a:	push   ecx
1000818b:	call   0x1001876e
10008190:	add    esp,0x4
10008193:	mov    eax,edi
10008195:	mov    ecx,DWORD PTR [esp+0x38]
10008199:	mov    DWORD PTR fs:0x0,ecx
100081a0:	pop    ecx
100081a1:	pop    edi
100081a2:	pop    esi
100081a3:	pop    ebp
100081a4:	pop    ebx
100081a5:	add    esp,0x30
100081a8:	ret    0x4
100081ab:	int3   
100081ac:	int3   
100081ad:	int3   
100081ae:	int3   
100081af:	int3   
100081b0:	push   0xffffffff
100081b2:	push   0x1002dede
100081b7:	mov    eax,fs:0x0
100081bd:	push   eax
100081be:	sub    esp,0x98
100081c4:	push   ebx
100081c5:	push   ebp
100081c6:	push   esi
100081c7:	push   edi
100081c8:	mov    eax,ds:0x100c7654
100081cd:	xor    eax,esp
100081cf:	push   eax
100081d0:	lea    eax,[esp+0xac]
100081d7:	mov    fs:0x0,eax
100081dd:	mov    ebx,ecx
100081df:	mov    ebp,DWORD PTR [esp+0xbc]
100081e6:	mov    esi,DWORD PTR [ebp+0x3c]
100081e9:	mov    ecx,DWORD PTR [esi+ebp*1+0x50]
100081ed:	mov    edx,DWORD PTR [esi+ebp*1+0x34]
100081f1:	mov    eax,DWORD PTR [ebx]
100081f3:	push   0x40
100081f5:	add    esi,ebp
100081f7:	push   0x3000
100081fc:	push   ecx
100081fd:	push   edx
100081fe:	push   eax
100081ff:	call   DWORD PTR ds:0x1002f100
10008205:	mov    edi,eax
10008207:	test   edi,edi
10008209:	jne    0x10008275
1000820b:	mov    ecx,DWORD PTR [esi+0x50]
1000820e:	mov    eax,DWORD PTR [ebx]
10008210:	push   0x40
10008212:	push   0x3000
10008217:	push   ecx
10008218:	push   edi
10008219:	push   eax
1000821a:	call   DWORD PTR ds:0x1002f100
10008220:	mov    edi,eax
10008222:	test   edi,edi
10008224:	jne    0x10008275
10008226:	xor    esi,esi
10008228:	push   esi
10008229:	push   0x100b77fa
1000822e:	lea    ecx,[esp+0x28]
10008232:	mov    DWORD PTR [esp+0x40],0xf
1000823a:	mov    DWORD PTR [esp+0x3c],esi
1000823e:	mov    BYTE PTR [esp+0x2c],0x0
10008243:	call   0x10003a70
10008248:	lea    edx,[esp+0x20]
1000824c:	push   edx
1000824d:	lea    eax,[esp+0x5c]
10008251:	push   eax
10008252:	mov    DWORD PTR [esp+0xbc],esi
10008259:	call   0x10001550
1000825e:	push   0x100bbabc
10008263:	lea    ecx,[esp+0x5c]
10008267:	push   ecx
10008268:	mov    DWORD PTR [esp+0x60],0x100b9ccc
10008270:	call   0x10018e6e
10008275:	mov    eax,DWORD PTR [ebx]
10008277:	lea    edx,[esp+0x1c]
1000827b:	push   edx
1000827c:	mov    DWORD PTR [esp+0x20],0x0
10008284:	mov    ecx,DWORD PTR [esi+0x54]
10008287:	push   ecx
10008288:	push   ebp
10008289:	push   edi
1000828a:	push   eax
1000828b:	call   0x1000e750
10008290:	call   eax
10008292:	test   eax,eax
10008294:	jne    0x100082f2
10008296:	call   DWORD PTR ds:0x1002f094
1000829c:	push   0x0
1000829e:	push   0x100b77fa
100082a3:	lea    ecx,[esp+0x28]
100082a7:	mov    DWORD PTR [esp+0x40],0xf
100082af:	mov    DWORD PTR [esp+0x3c],0x0
100082b7:	mov    BYTE PTR [esp+0x2c],0x0
100082bc:	call   0x10003a70
100082c1:	lea    edx,[esp+0x20]
100082c5:	push   edx
100082c6:	lea    eax,[esp+0x5c]
100082ca:	push   eax
100082cb:	mov    DWORD PTR [esp+0xbc],0x1
100082d6:	call   0x10001550
100082db:	push   0x100bbabc
100082e0:	lea    ecx,[esp+0x5c]
100082e4:	push   ecx
100082e5:	mov    DWORD PTR [esp+0x60],0x100b9ccc
100082ed:	call   0x10018e6e
100082f2:	movzx  eax,WORD PTR [esi+0x6]
100082f6:	sub    eax,0x1
100082f9:	movzx  edx,WORD PTR [esi+0x14]
100082fd:	lea    ebp,[edx+esi*1+0x18]
10008301:	mov    DWORD PTR [esp+0x18],0x0
10008309:	js     0x10008352
1000830b:	add    ebp,0x10
1000830e:	mov    edi,edi
10008310:	mov    ecx,DWORD PTR [ebp+0x0]
10008313:	test   ecx,ecx
10008315:	je     0x10008339
10008317:	mov    edx,DWORD PTR [ebp-0x4]
1000831a:	mov    eax,DWORD PTR [ebx]
1000831c:	push   0x0
1000831e:	push   ecx
1000831f:	mov    ecx,DWORD PTR [ebp+0x4]
10008322:	add    ecx,DWORD PTR [esp+0xc4]
10008329:	add    edx,edi
1000832b:	push   ecx
1000832c:	push   edx
1000832d:	push   eax
1000832e:	call   0x1000e750
10008333:	call   eax
10008335:	test   eax,eax
10008337:	je     0x1000837d
10008339:	movzx  ecx,WORD PTR [esi+0x6]
1000833d:	mov    eax,DWORD PTR [esp+0x18]
10008341:	add    eax,0x1
10008344:	sub    ecx,0x1
10008347:	add    ebp,0x28
1000834a:	cmp    eax,ecx
1000834c:	mov    DWORD PTR [esp+0x18],eax
10008350:	jle    0x10008310
10008352:	mov    eax,edi
10008354:	cdq    
10008355:	mov    DWORD PTR [ebx+0x70],eax
10008358:	mov    DWORD PTR [ebx+0x74],edx
1000835b:	mov    edx,DWORD PTR [esi+0x50]
1000835e:	mov    DWORD PTR [ebx+0x78],edx
10008361:	mov    ecx,DWORD PTR [esp+0xac]
10008368:	mov    DWORD PTR fs:0x0,ecx
1000836f:	pop    ecx
10008370:	pop    edi
10008371:	pop    esi
10008372:	pop    ebp
10008373:	pop    ebx
10008374:	add    esp,0xa4
1000837a:	ret    0x4
1000837d:	call   DWORD PTR ds:0x1002f094
10008383:	mov    ebx,DWORD PTR [ebx]
10008385:	push   0x8000
1000838a:	push   0x0
1000838c:	push   edi
1000838d:	push   ebx
1000838e:	call   DWORD PTR ds:0x1002f104
10008394:	push   0x0
10008396:	push   0x100b77fa
1000839b:	lea    ecx,[esp+0x44]
1000839f:	mov    DWORD PTR [esp+0x5c],0xf
100083a7:	mov    DWORD PTR [esp+0x58],0x0
100083af:	mov    BYTE PTR [esp+0x48],0x0
100083b4:	call   0x10003a70
100083b9:	lea    edx,[esp+0x3c]
100083bd:	push   edx
100083be:	lea    eax,[esp+0x84]
100083c5:	push   eax
100083c6:	mov    DWORD PTR [esp+0xbc],0x2
100083d1:	call   0x10001550
100083d6:	push   0x100bbabc
100083db:	lea    ecx,[esp+0x84]
100083e2:	push   ecx
100083e3:	mov    DWORD PTR [esp+0x88],0x100b9ccc
100083ee:	call   0x10018e6e
100083f3:	int3   
100083f4:	int3   
100083f5:	int3   
100083f6:	int3   
100083f7:	int3   
100083f8:	int3   
100083f9:	int3   
100083fa:	int3   
100083fb:	int3   
100083fc:	int3   
100083fd:	int3   
100083fe:	int3   
100083ff:	int3   
10008400:	mov    eax,DWORD PTR [esp+0x4]
10008404:	push   esi
10008405:	push   eax
10008406:	mov    esi,ecx
10008408:	call   0x100015c0
1000840d:	mov    DWORD PTR [esi],0x100b9ccc
10008413:	mov    eax,esi
10008415:	pop    esi
10008416:	ret    0x4
10008419:	int3   
1000841a:	int3   
1000841b:	int3   
1000841c:	int3   
1000841d:	int3   
1000841e:	int3   
1000841f:	int3   
10008420:	push   ebp
10008421:	mov    ebp,esp
10008423:	and    esp,0xfffffff8
10008426:	push   0xffffffff
10008428:	push   0x1002e5f0
1000842d:	mov    eax,fs:0x0
10008433:	push   eax
10008434:	sub    esp,0xac
1000843a:	push   ebx
1000843b:	push   esi
1000843c:	mov    eax,ds:0x100c7654
10008441:	xor    eax,esp
10008443:	push   eax
10008444:	lea    eax,[esp+0xb8]
1000844b:	mov    fs:0x0,eax
10008451:	lea    eax,[esp+0x14]
10008455:	push   eax
10008456:	call   DWORD PTR ds:0x1002f0f4
1000845c:	lea    ecx,[esp+0x34]
10008460:	push   ecx
10008461:	lea    edx,[esp+0x18]
10008465:	push   edx
10008466:	call   0x1000e660
1000846b:	call   eax
1000846d:	mov    ecx,DWORD PTR [esp+0x34]
10008471:	mov    eax,DWORD PTR [esp+0x38]
10008475:	sub    ecx,0x2a69c000
1000847b:	push   0x2
1000847d:	sbb    eax,0xc9
10008482:	xor    esi,esi
10008484:	push   esi
10008485:	push   esi
10008486:	mov    DWORD PTR [edi+0x80],ecx
1000848c:	lea    ecx,[esp+0x3c]
10008490:	mov    DWORD PTR [edi+0x84],eax
10008496:	mov    eax,DWORD PTR [edi]
10008498:	push   ecx
10008499:	push   eax
1000849a:	push   eax
1000849b:	mov    DWORD PTR [esp+0x48],esi
1000849f:	call   DWORD PTR ds:0x1002f0e4
100084a5:	push   eax
100084a6:	call   DWORD PTR ds:0x1002f110
100084ac:	mov    eax,DWORD PTR [esp+0x30]
100084b0:	push   0x100b8fe8
100084b5:	cdq    
100084b6:	push   0x9
100084b8:	push   0x100b9064
100084bd:	mov    DWORD PTR [edi+0x68],eax
100084c0:	mov    DWORD PTR [edi+0x6c],edx
100084c3:	call   0x100035f0
100084c8:	add    esp,0x8
100084cb:	mov    ecx,esp
100084cd:	mov    DWORD PTR [esp+0x38],esp
100084d1:	push   eax
100084d2:	call   0x10002dc0
100084d7:	call   0x10007df0
100084dc:	add    esp,0x4
100084df:	push   eax
100084e0:	lea    ecx,[esp+0x14]
100084e4:	call   0x100121c0
100084e9:	lea    ecx,[esp+0x10]
100084ed:	mov    DWORD PTR [esp+0xc0],esi
100084f4:	call   0x1000a6e0
100084f9:	push   0x100b9078
100084fe:	mov    esi,eax
10008500:	mov    ebx,DWORD PTR [esi]
10008502:	push   0xd
10008504:	push   0x100b90e0
10008509:	call   0x100033d0
1000850e:	mov    edx,DWORD PTR [ebx]
10008510:	add    esp,0xc
10008513:	push   eax
10008514:	mov    ecx,esi
10008516:	call   edx
10008518:	lea    ecx,[esp+0x10]
1000851c:	mov    DWORD PTR [esp+0x58],eax
10008520:	call   0x1000a6e0
10008525:	push   0x100b90f0
1000852a:	mov    esi,eax
1000852c:	mov    ebx,DWORD PTR [esi]
1000852e:	push   0xf
10008530:	push   0x100b9158
10008535:	call   0x100033d0
1000853a:	add    esp,0xc
1000853d:	push   eax
1000853e:	mov    eax,DWORD PTR [ebx]
10008540:	mov    ecx,esi
10008542:	call   eax
10008544:	lea    ecx,[esp+0x10]
10008548:	mov    DWORD PTR [esp+0x44],eax
1000854c:	call   0x1000a6e0
10008551:	mov    esi,eax
10008553:	mov    ebx,DWORD PTR [esi]
10008555:	push   0x100b9168
1000855a:	push   0xe
1000855c:	push   0x100b91d0
10008561:	call   0x100033d0
10008566:	mov    edx,DWORD PTR [ebx]
10008568:	add    esp,0xc
1000856b:	push   eax
1000856c:	mov    ecx,esi
1000856e:	call   edx
10008570:	lea    ecx,[esp+0x10]
10008574:	mov    DWORD PTR [esp+0x4c],eax
10008578:	call   0x1000a6e0
1000857d:	push   0x100b91e0
10008582:	mov    esi,eax
10008584:	mov    ebx,DWORD PTR [esi]
10008586:	push   0x12
10008588:	push   0x100b9240
1000858d:	call   0x100033d0
10008592:	add    esp,0xc
10008595:	push   eax
10008596:	mov    eax,DWORD PTR [ebx]
10008598:	mov    ecx,esi
1000859a:	call   eax
1000859c:	lea    ecx,[esp+0x10]
100085a0:	mov    DWORD PTR [esp+0x54],eax
100085a4:	call   0x1000a6e0
100085a9:	push   0x100b9258
100085ae:	mov    esi,eax
100085b0:	mov    ebx,DWORD PTR [esi]
100085b2:	push   0x14
100085b4:	push   0x100b929c
100085b9:	call   0x100033d0
100085be:	mov    edx,DWORD PTR [ebx]
100085c0:	add    esp,0xc
100085c3:	push   eax
100085c4:	mov    ecx,esi
100085c6:	call   edx
100085c8:	lea    ecx,[esp+0x10]
100085cc:	mov    DWORD PTR [esp+0x48],eax
100085d0:	call   0x1000a6e0
100085d5:	push   0x100b92b8
100085da:	mov    esi,eax
100085dc:	mov    ebx,DWORD PTR [esi]
100085de:	push   0xa
100085e0:	push   0x100b9304
100085e5:	call   0x100033d0
100085ea:	add    esp,0xc
100085ed:	push   eax
100085ee:	mov    eax,DWORD PTR [ebx]
100085f0:	mov    ecx,esi
100085f2:	call   eax
100085f4:	lea    ecx,[esp+0x10]
100085f8:	mov    DWORD PTR [esp+0x50],eax
100085fc:	call   0x1000a6e0
10008601:	push   0x100b9310
10008606:	mov    esi,eax
10008608:	mov    ebx,DWORD PTR [esi]
1000860a:	push   0x15
1000860c:	push   0x100b9390
10008611:	call   0x100033d0
10008616:	mov    edx,DWORD PTR [ebx]
10008618:	add    esp,0xc
1000861b:	push   eax
1000861c:	mov    ecx,esi
1000861e:	call   edx
10008620:	lea    ecx,[esp+0x10]
10008624:	mov    DWORD PTR [esp+0x3c],eax
10008628:	call   0x1000a6e0
1000862d:	push   0x100b93a8
10008632:	mov    esi,eax
10008634:	mov    ebx,DWORD PTR [esi]
10008636:	push   0x7
10008638:	push   0x100b93f4
1000863d:	call   0x100033d0
10008642:	add    esp,0xc
10008645:	push   eax
10008646:	mov    eax,DWORD PTR [ebx]
10008648:	mov    ecx,esi
1000864a:	call   eax
1000864c:	lea    ecx,[esp+0x10]
10008650:	mov    DWORD PTR [esp+0x40],eax
10008654:	call   0x1000a6e0
10008659:	push   0x100b9400
1000865e:	mov    esi,eax
10008660:	mov    ebx,DWORD PTR [esi]
10008662:	push   0x14
10008664:	push   0x100b946c
10008669:	call   0x100033d0
1000866e:	mov    edx,DWORD PTR [ebx]
10008670:	add    esp,0xc
10008673:	push   eax
10008674:	mov    ecx,esi
10008676:	call   edx
10008678:	lea    ecx,[esp+0x78]
1000867c:	mov    DWORD PTR [esp+0x34],eax
10008680:	call   0x1000a590
10008685:	mov    BYTE PTR [esp+0xc0],0x1
1000868d:	mov    eax,DWORD PTR [edi+0x4]
10008690:	push   eax
10008691:	lea    ecx,[esp+0x7c]
10008695:	call   0x10007ee0
1000869a:	push   0x100b9488
1000869f:	push   0xf
100086a1:	push   0x100b94f4
100086a6:	call   0x100033d0
100086ab:	mov    ecx,eax
100086ad:	add    esp,0xc
100086b0:	mov    DWORD PTR [esp+0x2c],0xf
100086b8:	mov    DWORD PTR [esp+0x28],0x0
100086c0:	mov    BYTE PTR [esp+0x18],0x0
100086c5:	lea    esi,[ecx+0x1]
100086c8:	mov    dl,BYTE PTR [ecx]
100086ca:	add    ecx,0x1
100086cd:	test   dl,dl
100086cf:	jne    0x100086c8
100086d1:	sub    ecx,esi
100086d3:	push   ecx
100086d4:	push   eax
100086d5:	lea    ecx,[esp+0x1c]
100086d9:	call   0x10003a70
100086de:	lea    ecx,[esp+0x14]
100086e2:	lea    ebx,[edi+0x894]
100086e8:	push   ecx
100086e9:	mov    BYTE PTR [esp+0xc4],0x2
100086f1:	mov    esi,DWORD PTR [edi]
100086f3:	mov    ecx,ebx
100086f5:	call   0x1000a6e0
100086fa:	call   0x1000e0d0
100086ff:	add    eax,DWORD PTR [edi+0x88c]
10008705:	mov    edx,DWORD PTR [esp+0x58]
10008709:	push   eax
1000870a:	push   edx
1000870b:	call   0x1000bad0
10008710:	cdq    
10008711:	add    esp,0x8
10008714:	mov    BYTE PTR [esp+0xc0],0x1
1000871c:	cmp    DWORD PTR [esp+0x2c],0x10
10008721:	mov    DWORD PTR [edi+0x8],eax
10008724:	mov    DWORD PTR [edi+0xc],edx
10008727:	jb     0x10008736
10008729:	mov    eax,DWORD PTR [esp+0x18]
1000872d:	push   eax
1000872e:	call   0x1001876e
10008733:	add    esp,0x4
10008736:	push   0x100b9508
1000873b:	push   0x11
1000873d:	push   0x100b955c
10008742:	call   0x100033d0
10008747:	mov    esi,eax
10008749:	mov    ecx,esi
1000874b:	add    esp,0xc
1000874e:	mov    DWORD PTR [esp+0x2c],0xf
10008756:	mov    DWORD PTR [esp+0x28],0x0
1000875e:	mov    BYTE PTR [esp+0x18],0x0
10008763:	lea    edx,[ecx+0x1]
10008766:	mov    al,BYTE PTR [ecx]
10008768:	add    ecx,0x1
1000876b:	test   al,al
1000876d:	jne    0x10008766
1000876f:	sub    ecx,edx
10008771:	push   ecx
10008772:	push   esi
10008773:	lea    ecx,[esp+0x1c]
10008777:	call   0x10003a70
1000877c:	lea    ecx,[esp+0x14]
10008780:	push   ecx
10008781:	mov    BYTE PTR [esp+0xc4],0x3
10008789:	mov    esi,DWORD PTR [edi]
1000878b:	mov    ecx,ebx
1000878d:	call   0x1000a6e0
10008792:	call   0x1000e0d0
10008797:	add    eax,DWORD PTR [edi+0x88c]
1000879d:	mov    edx,DWORD PTR [esp+0x44]
100087a1:	push   eax
100087a2:	push   edx
100087a3:	call   0x1000bad0
100087a8:	cdq    
100087a9:	add    esp,0x8
100087ac:	mov    BYTE PTR [esp+0xc0],0x1
100087b4:	cmp    DWORD PTR [esp+0x2c],0x10
100087b9:	mov    DWORD PTR [edi+0x10],eax
100087bc:	mov    DWORD PTR [edi+0x14],edx
100087bf:	jb     0x100087ce
100087c1:	mov    eax,DWORD PTR [esp+0x18]
100087c5:	push   eax
100087c6:	call   0x1001876e
100087cb:	add    esp,0x4
100087ce:	push   0x100b9570
100087d3:	push   0x10
100087d5:	push   0x100b95b8
100087da:	call   0x100033d0
100087df:	mov    esi,eax
100087e1:	mov    ecx,esi
100087e3:	add    esp,0xc
100087e6:	mov    DWORD PTR [esp+0x2c],0xf
100087ee:	mov    DWORD PTR [esp+0x28],0x0
100087f6:	mov    BYTE PTR [esp+0x18],0x0
100087fb:	lea    eax,[ecx+0x1]
100087fe:	mov    edi,edi
10008800:	mov    dl,BYTE PTR [ecx]
10008802:	add    ecx,0x1
10008805:	test   dl,dl
10008807:	jne    0x10008800
10008809:	sub    ecx,eax
1000880b:	push   ecx
1000880c:	push   esi
1000880d:	lea    ecx,[esp+0x1c]
10008811:	call   0x10003a70
10008816:	lea    ecx,[esp+0x14]
1000881a:	push   ecx
1000881b:	mov    BYTE PTR [esp+0xc4],0x4
10008823:	mov    esi,DWORD PTR [edi]
10008825:	mov    ecx,ebx
10008827:	call   0x1000a6e0
1000882c:	call   0x1000e0d0
10008831:	add    eax,DWORD PTR [edi+0x88c]
10008837:	mov    edx,DWORD PTR [esp+0x4c]
1000883b:	push   eax
1000883c:	push   edx
1000883d:	call   0x1000bad0
10008842:	cdq    
10008843:	add    esp,0x8
10008846:	mov    BYTE PTR [esp+0xc0],0x1
1000884e:	cmp    DWORD PTR [esp+0x2c],0x10
10008853:	mov    DWORD PTR [edi+0x28],eax
10008856:	mov    DWORD PTR [edi+0x2c],edx
10008859:	jb     0x10008868
1000885b:	mov    eax,DWORD PTR [esp+0x18]
1000885f:	push   eax
10008860:	call   0x1001876e
10008865:	add    esp,0x4
10008868:	push   0x100b95d0
1000886d:	push   0x14
1000886f:	push   0x100b9620
10008874:	call   0x100033d0
10008879:	mov    esi,eax
1000887b:	mov    ecx,esi
1000887d:	add    esp,0xc
10008880:	mov    DWORD PTR [esp+0x2c],0xf
10008888:	mov    DWORD PTR [esp+0x28],0x0
10008890:	mov    BYTE PTR [esp+0x18],0x0
10008895:	lea    eax,[ecx+0x1]
10008898:	mov    dl,BYTE PTR [ecx]
1000889a:	add    ecx,0x1
1000889d:	test   dl,dl
1000889f:	jne    0x10008898
100088a1:	sub    ecx,eax
100088a3:	push   ecx
100088a4:	push   esi
100088a5:	lea    ecx,[esp+0x1c]
100088a9:	call   0x10003a70
100088ae:	lea    ecx,[esp+0x14]
100088b2:	push   ecx
100088b3:	mov    BYTE PTR [esp+0xc4],0x5
100088bb:	mov    esi,DWORD PTR [edi]
100088bd:	mov    ecx,ebx
100088bf:	call   0x1000a6e0
100088c4:	call   0x1000e0d0
100088c9:	add    eax,DWORD PTR [edi+0x88c]
100088cf:	mov    edx,DWORD PTR [esp+0x54]
100088d3:	push   eax
100088d4:	push   edx
100088d5:	call   0x1000bad0
100088da:	cdq    
100088db:	add    esp,0x8
100088de:	mov    BYTE PTR [esp+0xc0],0x1
100088e6:	cmp    DWORD PTR [esp+0x2c],0x10
100088eb:	mov    DWORD PTR [edi+0x18],eax
100088ee:	mov    DWORD PTR [edi+0x1c],edx
100088f1:	jb     0x10008900
100088f3:	mov    eax,DWORD PTR [esp+0x18]
100088f7:	push   eax
100088f8:	call   0x1001876e
100088fd:	add    esp,0x4
10008900:	push   0x100b9638
10008905:	push   0x16
10008907:	push   0x100b968c
1000890c:	call   0x100033d0
10008911:	mov    esi,eax
10008913:	mov    ecx,esi
10008915:	add    esp,0xc
10008918:	mov    DWORD PTR [esp+0x2c],0xf
10008920:	mov    DWORD PTR [esp+0x28],0x0
10008928:	mov    BYTE PTR [esp+0x18],0x0
1000892d:	lea    eax,[ecx+0x1]
10008930:	mov    dl,BYTE PTR [ecx]
10008932:	add    ecx,0x1
10008935:	test   dl,dl
10008937:	jne    0x10008930
10008939:	sub    ecx,eax
1000893b:	push   ecx
1000893c:	push   esi
1000893d:	lea    ecx,[esp+0x1c]
10008941:	call   0x10003a70
10008946:	lea    ecx,[esp+0x14]
1000894a:	push   ecx
1000894b:	mov    BYTE PTR [esp+0xc4],0x6
10008953:	mov    esi,DWORD PTR [edi]
10008955:	mov    ecx,ebx
10008957:	call   0x1000a6e0
1000895c:	call   0x1000e0d0
10008961:	add    eax,DWORD PTR [edi+0x88c]
10008967:	mov    edx,DWORD PTR [esp+0x48]
1000896b:	push   eax
1000896c:	push   edx
1000896d:	call   0x1000bad0
10008972:	cdq    
10008973:	add    esp,0x8
10008976:	mov    BYTE PTR [esp+0xc0],0x1
1000897e:	cmp    DWORD PTR [esp+0x2c],0x10
10008983:	mov    DWORD PTR [edi+0x20],eax
10008986:	mov    DWORD PTR [edi+0x24],edx
10008989:	jb     0x10008998
1000898b:	mov    eax,DWORD PTR [esp+0x18]
1000898f:	push   eax
10008990:	call   0x1001876e
10008995:	add    esp,0x4
10008998:	push   0x100b96a8
1000899d:	push   0x17
1000899f:	push   0x100b9724
100089a4:	call   0x100033d0
100089a9:	mov    esi,eax
100089ab:	mov    ecx,esi
100089ad:	add    esp,0xc
100089b0:	mov    DWORD PTR [esp+0x2c],0xf
100089b8:	mov    DWORD PTR [esp+0x28],0x0
100089c0:	mov    BYTE PTR [esp+0x18],0x0
100089c5:	lea    eax,[ecx+0x1]
100089c8:	mov    dl,BYTE PTR [ecx]
100089ca:	add    ecx,0x1
100089cd:	test   dl,dl
100089cf:	jne    0x100089c8
100089d1:	sub    ecx,eax
100089d3:	push   ecx
100089d4:	push   esi
100089d5:	lea    ecx,[esp+0x1c]
100089d9:	call   0x10003a70
100089de:	lea    ecx,[esp+0x14]
100089e2:	push   ecx
100089e3:	mov    BYTE PTR [esp+0xc4],0x7
100089eb:	mov    esi,DWORD PTR [edi]
100089ed:	mov    ecx,ebx
100089ef:	call   0x1000a6e0
100089f4:	call   0x1000e0d0
100089f9:	add    eax,DWORD PTR [edi+0x88c]
100089ff:	mov    edx,DWORD PTR [esp+0x3c]
10008a03:	push   eax
10008a04:	push   edx
10008a05:	call   0x1000bad0
10008a0a:	cdq    
10008a0b:	add    esp,0x8
10008a0e:	mov    BYTE PTR [esp+0xc0],0x1
10008a16:	cmp    DWORD PTR [esp+0x2c],0x10
10008a1b:	mov    DWORD PTR [edi+0x30],eax
10008a1e:	mov    DWORD PTR [edi+0x34],edx
10008a21:	jb     0x10008a30
10008a23:	mov    eax,DWORD PTR [esp+0x18]
10008a27:	push   eax
10008a28:	call   0x1001876e
10008a2d:	add    esp,0x4
10008a30:	push   0x100b9740
10008a35:	push   0xc
10008a37:	push   0x100b978c
10008a3c:	call   0x100033d0
10008a41:	mov    esi,eax
10008a43:	mov    ecx,esi
10008a45:	add    esp,0xc
10008a48:	mov    DWORD PTR [esp+0x2c],0xf
10008a50:	mov    DWORD PTR [esp+0x28],0x0
10008a58:	mov    BYTE PTR [esp+0x18],0x0
10008a5d:	lea    edx,[ecx+0x1]
10008a60:	mov    al,BYTE PTR [ecx]
10008a62:	add    ecx,0x1
10008a65:	test   al,al
10008a67:	jne    0x10008a60
10008a69:	sub    ecx,edx
10008a6b:	push   ecx
10008a6c:	push   esi
10008a6d:	lea    ecx,[esp+0x1c]
10008a71:	call   0x10003a70
10008a76:	lea    ecx,[esp+0x14]
10008a7a:	push   ecx
10008a7b:	mov    BYTE PTR [esp+0xc4],0x8
10008a83:	mov    esi,DWORD PTR [edi]
10008a85:	mov    ecx,ebx
10008a87:	call   0x1000a6e0
10008a8c:	call   0x1000e0d0
10008a91:	add    eax,DWORD PTR [edi+0x88c]
10008a97:	mov    edx,DWORD PTR [esp+0x50]
10008a9b:	push   eax
10008a9c:	push   edx
10008a9d:	call   0x1000bad0
10008aa2:	cdq    
10008aa3:	add    esp,0x8
10008aa6:	mov    BYTE PTR [esp+0xc0],0x1
10008aae:	cmp    DWORD PTR [esp+0x2c],0x10
10008ab3:	mov    DWORD PTR [edi+0x38],eax
10008ab6:	mov    DWORD PTR [edi+0x3c],edx
10008ab9:	jb     0x10008ac8
10008abb:	mov    eax,DWORD PTR [esp+0x18]
10008abf:	push   eax
10008ac0:	call   0x1001876e
10008ac5:	add    esp,0x4
10008ac8:	push   0x100b97a0
10008acd:	push   0x9
10008acf:	push   0x100b9810
10008ad4:	call   0x100033d0
10008ad9:	mov    esi,eax
10008adb:	mov    ecx,esi
10008add:	add    esp,0xc
10008ae0:	mov    DWORD PTR [esp+0x2c],0xf
10008ae8:	mov    DWORD PTR [esp+0x28],0x0
10008af0:	mov    BYTE PTR [esp+0x18],0x0
10008af5:	lea    eax,[ecx+0x1]
10008af8:	mov    dl,BYTE PTR [ecx]
10008afa:	add    ecx,0x1
10008afd:	test   dl,dl
10008aff:	jne    0x10008af8
10008b01:	sub    ecx,eax
10008b03:	push   ecx
10008b04:	push   esi
10008b05:	lea    ecx,[esp+0x1c]
10008b09:	call   0x10003a70
10008b0e:	lea    ecx,[esp+0x14]
10008b12:	push   ecx
10008b13:	mov    BYTE PTR [esp+0xc4],0x9
10008b1b:	mov    esi,DWORD PTR [edi]
10008b1d:	mov    ecx,ebx
10008b1f:	call   0x1000a6e0
10008b24:	call   0x1000e0d0
10008b29:	add    eax,DWORD PTR [edi+0x88c]
10008b2f:	mov    edx,DWORD PTR [esp+0x40]
10008b33:	push   eax
10008b34:	push   edx
10008b35:	call   0x1000bad0
10008b3a:	cdq    
10008b3b:	add    esp,0x8
10008b3e:	mov    BYTE PTR [esp+0xc0],0x1
10008b46:	cmp    DWORD PTR [esp+0x2c],0x10
10008b4b:	mov    DWORD PTR [edi+0x40],eax
10008b4e:	mov    DWORD PTR [edi+0x44],edx
10008b51:	jb     0x10008b60
10008b53:	mov    eax,DWORD PTR [esp+0x18]
10008b57:	push   eax
10008b58:	call   0x1001876e
10008b5d:	add    esp,0x4
10008b60:	push   0x100b9820
10008b65:	push   0x16
10008b67:	push   0x100b9878
10008b6c:	call   0x100033d0
10008b71:	mov    esi,eax
10008b73:	mov    ecx,esi
10008b75:	add    esp,0xc
10008b78:	mov    DWORD PTR [esp+0x2c],0xf
10008b80:	mov    DWORD PTR [esp+0x28],0x0
10008b88:	mov    BYTE PTR [esp+0x18],0x0
10008b8d:	lea    eax,[ecx+0x1]
10008b90:	mov    dl,BYTE PTR [ecx]
10008b92:	add    ecx,0x1
10008b95:	test   dl,dl
10008b97:	jne    0x10008b90
10008b99:	sub    ecx,eax
10008b9b:	push   ecx
10008b9c:	push   esi
10008b9d:	lea    ecx,[esp+0x1c]
10008ba1:	call   0x10003a70
10008ba6:	lea    ecx,[esp+0x14]
10008baa:	push   ecx
10008bab:	mov    BYTE PTR [esp+0xc4],0xa
10008bb3:	mov    esi,DWORD PTR [edi]
10008bb5:	mov    ecx,ebx
10008bb7:	call   0x1000a6e0
10008bbc:	call   0x1000e0d0
10008bc1:	add    eax,DWORD PTR [edi+0x88c]
10008bc7:	mov    edx,DWORD PTR [esp+0x34]
10008bcb:	push   eax
10008bcc:	push   edx
10008bcd:	call   0x1000bad0
10008bd2:	cdq    
10008bd3:	add    esp,0x8
10008bd6:	mov    BYTE PTR [esp+0xc0],0x1
10008bde:	cmp    DWORD PTR [esp+0x2c],0x10
10008be3:	mov    DWORD PTR [edi+0x48],eax
10008be6:	mov    DWORD PTR [edi+0x4c],edx
10008be9:	jb     0x10008bf8
10008beb:	mov    eax,DWORD PTR [esp+0x18]
10008bef:	push   eax
10008bf0:	call   0x1001876e
10008bf5:	add    esp,0x4
10008bf8:	mov    ecx,DWORD PTR [edi+0x8]
10008bfb:	or     ecx,DWORD PTR [edi+0xc]
10008bfe:	je     0x10008c8b
10008c04:	mov    edx,DWORD PTR [edi+0x10]
10008c07:	or     edx,DWORD PTR [edi+0x14]
10008c0a:	je     0x10008c8b
10008c0c:	mov    eax,DWORD PTR [edi+0x28]
10008c0f:	or     eax,DWORD PTR [edi+0x2c]
10008c12:	je     0x10008c8b
10008c14:	mov    ecx,DWORD PTR [edi+0x18]
10008c17:	or     ecx,DWORD PTR [edi+0x1c]
10008c1a:	je     0x10008c8b
10008c1c:	mov    edx,DWORD PTR [edi+0x20]
10008c1f:	or     edx,DWORD PTR [edi+0x24]
10008c22:	je     0x10008c8b
10008c24:	mov    eax,DWORD PTR [edi+0x30]
10008c27:	or     eax,DWORD PTR [edi+0x34]
10008c2a:	je     0x10008c8b
10008c2c:	mov    ecx,DWORD PTR [edi+0x38]
10008c2f:	or     ecx,DWORD PTR [edi+0x3c]
10008c32:	je     0x10008c8b
10008c34:	mov    edx,DWORD PTR [edi+0x40]
10008c37:	or     edx,DWORD PTR [edi+0x44]
10008c3a:	je     0x10008c8b
10008c3c:	mov    eax,DWORD PTR [edi+0x48]
10008c3f:	or     eax,DWORD PTR [edi+0x4c]
10008c42:	je     0x10008c8b
10008c44:	push   edi
10008c45:	call   0x10008e50
10008c4a:	lea    ecx,[esp+0x78]
10008c4e:	push   ecx
10008c4f:	mov    BYTE PTR [esp+0xc4],0x0
10008c57:	call   0x10007e90
10008c5c:	call   DWORD PTR ds:0x1002f0b8
10008c62:	lea    ecx,[esp+0x10]
10008c66:	mov    DWORD PTR [esp+0xc0],0xffffffff
10008c71:	call   0x1000a6a0
10008c76:	mov    ecx,DWORD PTR [esp+0xb8]
10008c7d:	mov    DWORD PTR fs:0x0,ecx
10008c84:	pop    ecx
10008c85:	pop    esi
10008c86:	pop    ebx
10008c87:	mov    esp,ebp
10008c89:	pop    ebp
10008c8a:	ret    
10008c8b:	push   0x0
10008c8d:	push   0x100b77fa
10008c92:	lea    ecx,[esp+0x64]
10008c96:	mov    DWORD PTR [esp+0x7c],0xf
10008c9e:	mov    DWORD PTR [esp+0x78],0x0
10008ca6:	mov    BYTE PTR [esp+0x68],0x0
10008cab:	call   0x10003a70
10008cb0:	lea    edx,[esp+0x5c]
10008cb4:	push   edx
10008cb5:	lea    eax,[esp+0x90]
10008cbc:	push   eax
10008cbd:	mov    BYTE PTR [esp+0xc8],0xb
10008cc5:	call   0x10001550
10008cca:	push   0x100bb980
10008ccf:	lea    ecx,[esp+0x90]
10008cd6:	push   ecx
10008cd7:	call   0x10018e6e
10008cdc:	int3   
10008cdd:	int3   
10008cde:	int3   
10008cdf:	int3   
10008ce0:	push   0xffffffff
10008ce2:	push   0x1002de98
10008ce7:	mov    eax,fs:0x0
10008ced:	push   eax
10008cee:	sub    esp,0x1c
10008cf1:	push   ebx
10008cf2:	push   ebp
10008cf3:	push   edi
10008cf4:	mov    eax,ds:0x100c7654
10008cf9:	xor    eax,esp
10008cfb:	push   eax
10008cfc:	lea    eax,[esp+0x2c]
10008d00:	mov    fs:0x0,eax
10008d06:	mov    eax,DWORD PTR [esi]
10008d08:	mov    ebx,DWORD PTR ds:0x1002f100
10008d0e:	push   0x4
10008d10:	push   0x3000
10008d15:	push   0x880
10008d1a:	push   0x0
10008d1c:	push   eax
10008d1d:	call   ebx
10008d1f:	lea    edi,[esi+0x894]
10008d25:	mov    ecx,edi
10008d27:	mov    DWORD PTR [esi+0x888],eax
10008d2d:	call   0x1000a6e0
10008d32:	mov    eax,DWORD PTR [eax]
10008d34:	mov    ebp,DWORD PTR [eax+0x6]
10008d37:	mov    eax,DWORD PTR [esi]
10008d39:	push   0x40
10008d3b:	push   0x3000
10008d40:	push   ebp
10008d41:	push   0x0
10008d43:	push   eax
10008d44:	call   ebx
10008d46:	push   eax
10008d47:	mov    ecx,edi
10008d49:	mov    DWORD PTR [esi+0x88c],eax
10008d4f:	call   0x1000a6e0
10008d54:	call   0x1000e1c0
10008d59:	mov    ecx,edi
10008d5b:	call   0x1000a6e0
10008d60:	mov    eax,DWORD PTR [eax]
10008d62:	mov    ecx,DWORD PTR [esi]
10008d64:	xor    ebx,ebx
10008d66:	push   ebx
10008d67:	push   ebp
10008d68:	add    eax,0x12
10008d6b:	push   eax
10008d6c:	mov    eax,DWORD PTR [esi+0x88c]
10008d72:	push   eax
10008d73:	push   ecx
10008d74:	call   0x1000e750
10008d79:	call   eax
10008d7b:	test   eax,eax
10008d7d:	jne    0x10008d85
10008d7f:	call   DWORD PTR ds:0x1002f094
10008d85:	push   0x100b9890
10008d8a:	push   0xe
10008d8c:	push   0x100b98d8
10008d91:	call   0x100033d0
10008d96:	mov    ecx,eax
10008d98:	add    esp,0xc
10008d9b:	mov    DWORD PTR [esp+0x28],0xf
10008da3:	mov    DWORD PTR [esp+0x24],ebx
10008da7:	mov    BYTE PTR [esp+0x14],bl
10008dab:	lea    ebp,[ecx+0x1]
10008dae:	mov    edi,edi
10008db0:	mov    dl,BYTE PTR [ecx]
10008db2:	add    ecx,0x1
10008db5:	test   dl,dl
10008db7:	jne    0x10008db0
10008db9:	sub    ecx,ebp
10008dbb:	push   ecx
10008dbc:	push   eax
10008dbd:	lea    ecx,[esp+0x18]
10008dc1:	call   0x10003a70
10008dc6:	lea    ecx,[esp+0x10]
10008dca:	push   ecx
10008dcb:	mov    ecx,edi
10008dcd:	mov    DWORD PTR [esp+0x38],ebx
10008dd1:	call   0x1000a6e0
10008dd6:	call   0x1000e0d0
10008ddb:	mov    DWORD PTR [esp+0x34],0xffffffff
10008de3:	cmp    DWORD PTR [esp+0x28],0x10
10008de8:	mov    edi,eax
10008dea:	jb     0x10008df9
10008dec:	mov    edx,DWORD PTR [esp+0x14]
10008df0:	push   edx
10008df1:	call   0x1001876e
10008df6:	add    esp,0x4
10008df9:	mov    eax,DWORD PTR [esi]
10008dfb:	push   ebx
10008dfc:	push   0x4
10008dfe:	lea    ecx,[esi+0x888]
10008e04:	push   ecx
10008e05:	mov    ecx,DWORD PTR [esi+0x88c]
10008e0b:	add    ecx,edi
10008e0d:	push   ecx
10008e0e:	push   eax
10008e0f:	mov    DWORD PTR [esp+0x3c],0xf
10008e17:	mov    DWORD PTR [esp+0x38],ebx
10008e1b:	mov    BYTE PTR [esp+0x28],0x0
10008e20:	call   0x1000e750
10008e25:	call   eax
10008e27:	test   eax,eax
10008e29:	jne    0x10008e31
10008e2b:	call   DWORD PTR ds:0x1002f094
10008e31:	mov    ecx,DWORD PTR [esp+0x2c]
10008e35:	mov    DWORD PTR fs:0x0,ecx
10008e3c:	pop    ecx
10008e3d:	pop    edi
10008e3e:	pop    ebp
10008e3f:	pop    ebx
10008e40:	add    esp,0x28
10008e43:	ret    
10008e44:	int3   
10008e45:	int3   
10008e46:	int3   
10008e47:	int3   
10008e48:	int3   
10008e49:	int3   
10008e4a:	int3   
10008e4b:	int3   
10008e4c:	int3   
10008e4d:	int3   
10008e4e:	int3   
10008e4f:	int3   
10008e50:	push   0xffffffff
10008e52:	push   0x1002de68
10008e57:	mov    eax,fs:0x0
10008e5d:	push   eax
10008e5e:	sub    esp,0x48
10008e61:	mov    eax,ds:0x100c7654
10008e66:	xor    eax,esp
10008e68:	push   eax
10008e69:	lea    eax,[esp+0x4c]
10008e6d:	mov    fs:0x0,eax
10008e73:	mov    eax,DWORD PTR [esp+0x5c]
10008e77:	mov    ecx,DWORD PTR [eax]
10008e79:	push   0x0
10008e7b:	push   0x880
10008e80:	lea    edx,[eax+0x8]
10008e83:	mov    eax,DWORD PTR [eax+0x888]
10008e89:	push   edx
10008e8a:	push   eax
10008e8b:	push   ecx
10008e8c:	call   0x1000e750
10008e91:	call   eax
10008e93:	test   eax,eax
10008e95:	jne    0x10008edc
10008e97:	push   eax
10008e98:	push   0x100b77fa
10008e9d:	lea    ecx,[esp+0xc]
10008ea1:	mov    DWORD PTR [esp+0x24],0xf
10008ea9:	mov    DWORD PTR [esp+0x20],eax
10008ead:	mov    BYTE PTR [esp+0x10],al
10008eb1:	call   0x10003a70
10008eb6:	lea    ecx,[esp+0x4]
10008eba:	push   ecx
10008ebb:	lea    edx,[esp+0x24]
10008ebf:	push   edx
10008ec0:	mov    DWORD PTR [esp+0x5c],0x0
10008ec8:	call   0x10001550
10008ecd:	push   0x100bb980
10008ed2:	lea    eax,[esp+0x24]
10008ed6:	push   eax
10008ed7:	call   0x10018e6e
10008edc:	mov    ecx,DWORD PTR [esp+0x4c]
10008ee0:	mov    DWORD PTR fs:0x0,ecx
10008ee7:	pop    ecx
10008ee8:	add    esp,0x54
10008eeb:	ret    0x4
10008eee:	int3   
10008eef:	int3   
10008ef0:	push   ebp
10008ef1:	mov    ebp,esp
10008ef3:	push   0xfffffffe
10008ef5:	push   0x100bc578
10008efa:	push   0x1001a7b0
10008eff:	mov    eax,fs:0x0
10008f05:	push   eax
10008f06:	sub    esp,0x28
10008f09:	push   ebx
10008f0a:	push   esi
10008f0b:	push   edi
10008f0c:	mov    eax,ds:0x100c7654
10008f11:	xor    DWORD PTR [ebp-0x8],eax
10008f14:	xor    eax,ebp
10008f16:	push   eax
10008f17:	lea    eax,[ebp-0x10]
10008f1a:	mov    fs:0x0,eax
10008f20:	mov    esi,DWORD PTR [ebp+0x8]
10008f23:	xor    ebx,ebx
10008f25:	mov    DWORD PTR [ebp-0x2c],ebx
10008f28:	mov    DWORD PTR [ebp-0x30],ebx
10008f2b:	mov    DWORD PTR [ebp-0x20],ebx
10008f2e:	mov    DWORD PTR [ebp-0x34],ebx
10008f31:	mov    DWORD PTR [ebp-0x38],ebx
10008f34:	mov    DWORD PTR [ebp-0x24],ebx
10008f37:	mov    BYTE PTR [ebp-0x19],bl
10008f3a:	mov    DWORD PTR [ebp-0x4],ebx
10008f3d:	push   0x4
10008f3f:	push   0x3000
10008f44:	push   0x1020
10008f49:	push   ebx
10008f4a:	push   esi
10008f4b:	call   DWORD PTR ds:0x1002f100
10008f51:	mov    edi,eax
10008f53:	mov    DWORD PTR [ebp-0x2c],edi
10008f56:	test   edi,edi
10008f58:	jne    0x10008f65
10008f5a:	call   DWORD PTR ds:0x1002f094
10008f60:	jmp    0x10009034
10008f65:	lea    eax,[ebp-0x24]
10008f68:	push   eax
10008f69:	push   0x1020
10008f6e:	mov    ecx,DWORD PTR [ebp+0x14]
10008f71:	push   ecx
10008f72:	push   edi
10008f73:	push   esi
10008f74:	call   0x1000e750
10008f79:	call   eax
10008f7b:	test   eax,eax
10008f7d:	je     0x10009034
10008f83:	push   0x40
10008f85:	push   0x3000
10008f8a:	mov    edx,DWORD PTR [ebp+0x10]
10008f8d:	push   edx
10008f8e:	push   0x0
10008f90:	push   esi
10008f91:	call   DWORD PTR ds:0x1002f100
10008f97:	mov    ebx,eax
10008f99:	mov    DWORD PTR [ebp-0x30],ebx
10008f9c:	test   ebx,ebx
10008f9e:	je     0x10009034
10008fa4:	lea    eax,[ebp-0x24]
10008fa7:	push   eax
10008fa8:	mov    ecx,DWORD PTR [ebp+0x10]
10008fab:	push   ecx
10008fac:	mov    edx,DWORD PTR [ebp+0xc]
10008faf:	push   edx
10008fb0:	push   ebx
10008fb1:	push   esi
10008fb2:	call   0x1000e750
10008fb7:	call   eax
10008fb9:	test   eax,eax
10008fbb:	je     0x10009034
10008fbd:	mov    DWORD PTR [ebp-0x28],0x0
10008fc4:	lea    eax,[ebp-0x28]
10008fc7:	push   eax
10008fc8:	push   0xf01ff
10008fcd:	push   esi
10008fce:	call   0x1000edf0
10008fd3:	call   eax
10008fd5:	test   eax,eax
10008fd7:	je     0x10009034
10008fd9:	mov    ecx,DWORD PTR [ebp-0x28]
10008fdc:	push   ecx
10008fdd:	call   0x1000ecf0
10008fe2:	call   eax
10008fe4:	test   eax,eax
10008fe6:	je     0x10009034
10008fe8:	lea    edx,[ebp-0x34]
10008feb:	push   edx
10008fec:	push   0x0
10008fee:	push   edi
10008fef:	push   ebx
10008ff0:	push   0x0
10008ff2:	push   0x0
10008ff4:	push   esi
10008ff5:	call   0x1000e920
10008ffa:	call   eax
10008ffc:	mov    DWORD PTR [ebp-0x20],eax
10008fff:	test   eax,eax
10009001:	je     0x10009034
10009003:	call   0x1000ed70
10009008:	call   eax
1000900a:	push   0xffffffff
1000900c:	mov    eax,DWORD PTR [ebp-0x20]
1000900f:	push   eax
10009010:	call   DWORD PTR ds:0x1002f058
10009016:	lea    ecx,[ebp-0x24]
10009019:	push   ecx
1000901a:	push   0x1020
1000901f:	mov    edx,DWORD PTR [ebp+0x14]
10009022:	push   edx
10009023:	push   edi
10009024:	push   esi
10009025:	call   0x1000e7d0
1000902a:	call   eax
1000902c:	test   eax,eax
1000902e:	je     0x10009034
10009030:	mov    BYTE PTR [ebp-0x19],0x1
10009034:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1000903b:	call   0x1000905e
10009040:	mov    al,BYTE PTR [ebp-0x19]
10009043:	mov    ecx,DWORD PTR [ebp-0x10]
10009046:	mov    DWORD PTR fs:0x0,ecx
1000904d:	pop    ecx
1000904e:	pop    edi
1000904f:	pop    esi
10009050:	pop    ebx
10009051:	mov    esp,ebp
10009053:	pop    ebp
10009054:	ret    
10009055:	mov    esi,DWORD PTR [ebp+0x8]
10009058:	mov    edi,DWORD PTR [ebp-0x2c]
1000905b:	mov    ebx,DWORD PTR [ebp-0x30]
1000905e:	test   edi,edi
10009060:	je     0x10009071
10009062:	push   0x8000
10009067:	push   0x0
10009069:	push   edi
1000906a:	push   esi
1000906b:	call   DWORD PTR ds:0x1002f104
10009071:	test   ebx,ebx
10009073:	je     0x10009084
10009075:	push   0x8000
1000907a:	push   0x0
1000907c:	push   ebx
1000907d:	push   esi
1000907e:	call   DWORD PTR ds:0x1002f104
10009084:	mov    eax,DWORD PTR [ebp-0x20]
10009087:	test   eax,eax
10009089:	je     0x100090a1
1000908b:	lea    ecx,[ebp-0x38]
1000908e:	push   ecx
1000908f:	push   eax
10009090:	call   0x1000eb00
10009095:	call   eax
10009097:	mov    edx,DWORD PTR [ebp-0x20]
1000909a:	push   edx
1000909b:	call   DWORD PTR ds:0x1002f064
100090a1:	ret    
100090a2:	int3   
100090a3:	int3   
100090a4:	int3   
100090a5:	int3   
100090a6:	int3   
100090a7:	int3   
100090a8:	int3   
100090a9:	int3   
100090aa:	int3   
100090ab:	int3   
100090ac:	int3   
100090ad:	int3   
100090ae:	int3   
100090af:	int3   
100090b0:	push   ebp
100090b1:	mov    ebp,esp
100090b3:	push   0xffffffff
100090b5:	push   0x1002e371
100090ba:	mov    eax,fs:0x0
100090c0:	push   eax
100090c1:	push   ecx
100090c2:	mov    eax,0x1060
100090c7:	call   0x100191a0
100090cc:	mov    eax,ds:0x100c7654
100090d1:	xor    eax,ebp
100090d3:	mov    DWORD PTR [ebp-0x14],eax
100090d6:	push   ebx
100090d7:	push   esi
100090d8:	push   edi
100090d9:	push   eax
100090da:	lea    eax,[ebp-0xc]
100090dd:	mov    fs:0x0,eax
100090e3:	mov    DWORD PTR [ebp-0x10],esp
100090e6:	mov    ebx,DWORD PTR [ebp+0xc]
100090e9:	mov    eax,DWORD PTR [ebp+0x8]
100090ec:	push   0x1018
100090f1:	xor    edi,edi
100090f3:	lea    edx,[ebp-0x1030]
100090f9:	push   edi
100090fa:	push   edx
100090fb:	mov    DWORD PTR [ebp-0x104c],eax
10009101:	mov    DWORD PTR [ebp-0x1048],ecx
10009107:	mov    BYTE PTR [ebp-0x1038],0x0
1000910e:	call   0x100191d0
10009113:	mov    eax,ebx
10009115:	add    esp,0xc
10009118:	lea    edx,[eax+0x2]
1000911b:	jmp    0x10009120
1000911d:	lea    ecx,[ecx+0x0]
10009120:	mov    cx,WORD PTR [eax]
10009123:	add    eax,0x2
10009126:	cmp    cx,di
10009129:	jne    0x10009120
1000912b:	sub    eax,edx
1000912d:	sar    eax,1
1000912f:	cmp    eax,0x400
10009134:	ja     0x100092df
1000913a:	push   edi
1000913b:	lea    ecx,[ebp-0x103c]
10009141:	call   0x100121c0
10009146:	push   0x100b98e8
1000914b:	push   0xc
1000914d:	mov    DWORD PTR [ebp-0x4],edi
10009150:	push   0x100b7f50
10009155:	mov    BYTE PTR [ebp-0x4],0x1
10009159:	call   0x100035f0
1000915e:	add    esp,0xc
10009161:	push   ecx
10009162:	mov    ecx,esp
10009164:	mov    DWORD PTR [ebp-0x1050],esp
1000916a:	push   eax
1000916b:	call   0x10002dc0
10009170:	call   0x10007df0
10009175:	add    esp,0x4
10009178:	push   eax
10009179:	lea    ecx,[ebp-0x103c]
1000917f:	call   0x1000a700
10009184:	mov    DWORD PTR [ebp-0x4],edi
10009187:	jmp    0x1000919b
10009189:	mov    DWORD PTR [ebp-0x4],0x0
10009190:	mov    eax,0x10009196
10009195:	ret    
10009196:	mov    ebx,DWORD PTR [ebp+0xc]
10009199:	xor    edi,edi
1000919b:	lea    ecx,[ebp-0x103c]
100091a1:	call   0x10012130
100091a6:	test   eax,eax
100091a8:	je     0x100092cd
100091ae:	push   edi
100091af:	lea    esi,[ebp-0x106c]
100091b5:	call   0x10007ca0
100091ba:	add    esp,0x4
100091bd:	lea    ecx,[ebp-0x1044]
100091c3:	push   ecx
100091c4:	mov    ecx,eax
100091c6:	mov    BYTE PTR [ebp-0x4],0x3
100091ca:	call   0x1000e040
100091cf:	mov    BYTE PTR [ebp-0x4],0x5
100091d3:	cmp    DWORD PTR [ebp-0x1054],0x10
100091da:	jb     0x100091eb
100091dc:	mov    edx,DWORD PTR [ebp-0x1068]
100091e2:	push   edx
100091e3:	call   0x1001876e
100091e8:	add    esp,0x4
100091eb:	lea    ecx,[ebp-0x103c]
100091f1:	mov    DWORD PTR [ebp-0x1054],0xf
100091fb:	mov    DWORD PTR [ebp-0x1058],edi
10009201:	mov    BYTE PTR [ebp-0x1068],0x0
10009208:	mov    BYTE PTR [ebp-0x1038],0x0
1000920f:	call   0x1000a6e0
10009214:	push   0x100b9968
10009219:	mov    esi,eax
1000921b:	mov    edi,DWORD PTR [esi]
1000921d:	push   0x17
1000921f:	push   0x100b99d8
10009224:	call   0x100033d0
10009229:	add    esp,0xc
1000922c:	push   eax
1000922d:	mov    eax,DWORD PTR [edi]
1000922f:	mov    ecx,esi
10009231:	call   eax
10009233:	lea    ecx,[ebp-0x103c]
10009239:	mov    DWORD PTR [ebp-0x1030],eax
1000923f:	mov    DWORD PTR [ebp-0x102c],edx
10009245:	call   0x1000a6e0
1000924a:	push   0x100b99f0
1000924f:	mov    esi,eax
10009251:	mov    edi,DWORD PTR [esi]
10009253:	push   0x17
10009255:	push   0x100b9a40
1000925a:	call   0x100033d0
1000925f:	mov    edx,DWORD PTR [edi]
10009261:	add    esp,0xc
10009264:	push   eax
10009265:	mov    ecx,esi
10009267:	call   edx
10009269:	mov    DWORD PTR [ebp-0x1024],edx
1000926f:	lea    edx,[ebp-0x1020]
10009275:	mov    DWORD PTR [ebp-0x1028],eax
1000927b:	mov    eax,ebx
1000927d:	sub    edx,ebx
1000927f:	nop
10009280:	movzx  ecx,WORD PTR [eax]
10009283:	mov    WORD PTR [edx+eax*1],cx
10009287:	add    eax,0x2
1000928a:	test   cx,cx
1000928d:	jne    0x10009280
1000928f:	mov    eax,DWORD PTR [ebp-0x1044]
10009295:	lea    edx,[ebp-0x1038]
1000929b:	push   edx
1000929c:	mov    DWORD PTR [ebp-0x20],0x40
100092a3:	mov    ecx,DWORD PTR [eax+0x6]
100092a6:	push   ecx
100092a7:	add    eax,0x12
100092aa:	push   eax
100092ab:	mov    eax,DWORD PTR [ebp-0x104c]
100092b1:	push   eax
100092b2:	call   0x10008ef0
100092b7:	add    esp,0x10
100092ba:	test   al,al
100092bc:	jne    0x100092e3
100092be:	mov    ecx,DWORD PTR [ebp-0x1044]
100092c4:	push   ecx
100092c5:	call   0x1001876e
100092ca:	add    esp,0x4
100092cd:	lea    ecx,[ebp-0x103c]
100092d3:	mov    DWORD PTR [ebp-0x4],0xffffffff
100092da:	call   0x1000a6a0
100092df:	xor    eax,eax
100092e1:	jmp    0x10009332
100092e3:	mov    esi,DWORD PTR [ebp-0x20]
100092e6:	cmp    esi,0x40
100092e9:	jae    0x1000930f
100092eb:	mov    edx,DWORD PTR [ebp-0x1048]
100092f1:	lea    eax,[ebp-0x820]
100092f7:	mov    ecx,eax
100092f9:	sub    edx,ecx
100092fb:	jmp    0x10009300
100092fd:	lea    ecx,[ecx+0x0]
10009300:	movzx  ecx,WORD PTR [eax]
10009303:	mov    WORD PTR [edx+eax*1],cx
10009307:	add    eax,0x2
1000930a:	test   cx,cx
1000930d:	jne    0x10009300
1000930f:	mov    edx,DWORD PTR [ebp-0x1044]
10009315:	push   edx
10009316:	call   0x1001876e
1000931b:	add    esp,0x4
1000931e:	lea    ecx,[ebp-0x103c]
10009324:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000932b:	call   0x1000a6a0
10009330:	mov    eax,esi
10009332:	mov    ecx,DWORD PTR [ebp-0xc]
10009335:	mov    DWORD PTR fs:0x0,ecx
1000933c:	pop    ecx
1000933d:	pop    edi
1000933e:	pop    esi
1000933f:	pop    ebx
10009340:	mov    ecx,DWORD PTR [ebp-0x14]
10009343:	xor    ecx,ebp
10009345:	call   0x10018773
1000934a:	mov    esp,ebp
1000934c:	pop    ebp
1000934d:	ret    
1000934e:	int3   
1000934f:	int3   
10009350:	push   ebp
10009351:	mov    ebp,esp
10009353:	push   0xffffffff
10009355:	push   0x1002e321
1000935a:	mov    eax,fs:0x0
10009360:	push   eax
10009361:	push   ecx
10009362:	mov    eax,0x105c
10009367:	call   0x100191a0
1000936c:	mov    eax,ds:0x100c7654
10009371:	xor    eax,ebp
10009373:	mov    DWORD PTR [ebp-0x18],eax
10009376:	push   ebx
10009377:	push   esi
10009378:	push   edi
10009379:	push   eax
1000937a:	lea    eax,[ebp-0xc]
1000937d:	mov    fs:0x0,eax
10009383:	mov    DWORD PTR [ebp-0x10],esp
10009386:	mov    ebx,DWORD PTR [ebp+0xc]
10009389:	mov    eax,DWORD PTR [ebp+0x8]
1000938c:	push   0x1018
10009391:	xor    edi,edi
10009393:	lea    ecx,[ebp-0x1034]
10009399:	push   edi
1000939a:	push   ecx
1000939b:	mov    DWORD PTR [ebp-0x1044],eax
100093a1:	mov    BYTE PTR [ebp-0x103c],0x0
100093a8:	call   0x100191d0
100093ad:	mov    eax,ebx
100093af:	add    esp,0xc
100093b2:	lea    edx,[eax+0x2]
100093b5:	mov    cx,WORD PTR [eax]
100093b8:	add    eax,0x2
100093bb:	cmp    cx,di
100093be:	jne    0x100093b5
100093c0:	sub    eax,edx
100093c2:	sar    eax,1
100093c4:	cmp    eax,0x400
100093c9:	ja     0x100095a8
100093cf:	mov    eax,DWORD PTR [ebp+0x10]
100093d2:	lea    edx,[eax+0x2]
100093d5:	mov    cx,WORD PTR [eax]
100093d8:	add    eax,0x2
100093db:	cmp    cx,di
100093de:	jne    0x100093d5
100093e0:	sub    eax,edx
100093e2:	sar    eax,1
100093e4:	cmp    eax,0x400
100093e9:	ja     0x100095a8
100093ef:	push   edi
100093f0:	lea    ecx,[ebp-0x1040]
100093f6:	call   0x100121c0
100093fb:	push   0x100b9a58
10009400:	push   0xc
10009402:	mov    DWORD PTR [ebp-0x4],edi
10009405:	push   0x100b7f50
1000940a:	mov    BYTE PTR [ebp-0x4],0x1
1000940e:	call   0x100035f0
10009413:	add    esp,0xc
10009416:	push   ecx
10009417:	mov    ecx,esp
10009419:	mov    DWORD PTR [ebp-0x1050],esp
1000941f:	push   eax
10009420:	call   0x10002dc0
10009425:	call   0x10007df0
1000942a:	add    esp,0x4
1000942d:	push   eax
1000942e:	lea    ecx,[ebp-0x1040]
10009434:	call   0x1000a700
10009439:	mov    DWORD PTR [ebp-0x4],edi
1000943c:	jmp    0x10009450
1000943e:	mov    DWORD PTR [ebp-0x4],0x0
10009445:	mov    eax,0x1000944b
1000944a:	ret    
1000944b:	mov    ebx,DWORD PTR [ebp+0xc]
1000944e:	xor    edi,edi
10009450:	lea    ecx,[ebp-0x1040]
10009456:	call   0x10012130
1000945b:	test   eax,eax
1000945d:	je     0x10009596
10009463:	push   edi
10009464:	lea    esi,[ebp-0x106c]
1000946a:	call   0x10007ca0
1000946f:	add    esp,0x4
10009472:	lea    edx,[ebp-0x104c]
10009478:	push   edx
10009479:	mov    ecx,eax
1000947b:	mov    BYTE PTR [ebp-0x4],0x3
1000947f:	call   0x1000e040
10009484:	mov    BYTE PTR [ebp-0x4],0x5
10009488:	cmp    DWORD PTR [ebp-0x1054],0x10
1000948f:	jb     0x100094a0
10009491:	mov    eax,DWORD PTR [ebp-0x1068]
10009497:	push   eax
10009498:	call   0x1001876e
1000949d:	add    esp,0x4
100094a0:	lea    ecx,[ebp-0x1040]
100094a6:	mov    DWORD PTR [ebp-0x1054],0xf
100094b0:	mov    DWORD PTR [ebp-0x1058],edi
100094b6:	mov    BYTE PTR [ebp-0x1068],0x0
100094bd:	mov    BYTE PTR [ebp-0x103c],0x1
100094c4:	call   0x1000a6e0
100094c9:	push   0x100b9aa0
100094ce:	mov    esi,eax
100094d0:	mov    edi,DWORD PTR [esi]
100094d2:	push   0x17
100094d4:	push   0x100b99d8
100094d9:	call   0x100033d0
100094de:	mov    edx,DWORD PTR [edi]
100094e0:	add    esp,0xc
100094e3:	push   eax
100094e4:	mov    ecx,esi
100094e6:	call   edx
100094e8:	lea    ecx,[ebp-0x1040]
100094ee:	mov    DWORD PTR [ebp-0x1034],eax
100094f4:	mov    DWORD PTR [ebp-0x1030],edx
100094fa:	call   0x1000a6e0
100094ff:	push   0x100b9ae8
10009504:	mov    esi,eax
10009506:	mov    edi,DWORD PTR [esi]
10009508:	push   0x17
1000950a:	push   0x100b9a40
1000950f:	call   0x100033d0
10009514:	add    esp,0xc
10009517:	push   eax
10009518:	mov    eax,DWORD PTR [edi]
1000951a:	mov    ecx,esi
1000951c:	call   eax
1000951e:	mov    DWORD PTR [ebp-0x1028],edx
10009524:	lea    edx,[ebp-0x1024]
1000952a:	mov    DWORD PTR [ebp-0x102c],eax
10009530:	mov    eax,ebx
10009532:	sub    edx,ebx
10009534:	movzx  ecx,WORD PTR [eax]
10009537:	mov    WORD PTR [edx+eax*1],cx
1000953b:	add    eax,0x2
1000953e:	test   cx,cx
10009541:	jne    0x10009534
10009543:	mov    eax,DWORD PTR [ebp+0x10]
10009546:	lea    edx,[ebp-0x824]
1000954c:	sub    edx,eax
1000954e:	mov    edi,edi
10009550:	movzx  ecx,WORD PTR [eax]
10009553:	mov    WORD PTR [edx+eax*1],cx
10009557:	add    eax,0x2
1000955a:	test   cx,cx
1000955d:	jne    0x10009550
1000955f:	mov    eax,DWORD PTR [ebp-0x104c]
10009565:	mov    ecx,DWORD PTR [eax+0x6]
10009568:	lea    edx,[ebp-0x103c]
1000956e:	push   edx
1000956f:	push   ecx
10009570:	add    eax,0x12
10009573:	push   eax
10009574:	mov    eax,DWORD PTR [ebp-0x1044]
1000957a:	push   eax
1000957b:	call   0x10008ef0
10009580:	add    esp,0x10
10009583:	test   al,al
10009585:	jne    0x100095ac
10009587:	mov    ecx,DWORD PTR [ebp-0x104c]
1000958d:	push   ecx
1000958e:	call   0x1001876e
10009593:	add    esp,0x4
10009596:	lea    ecx,[ebp-0x1040]
1000959c:	mov    DWORD PTR [ebp-0x4],0xffffffff
100095a3:	call   0x1000a6a0
100095a8:	xor    eax,eax
100095aa:	jmp    0x100095d2
100095ac:	mov    edx,DWORD PTR [ebp-0x104c]
100095b2:	push   edx
100095b3:	call   0x1001876e
100095b8:	add    esp,0x4
100095bb:	lea    ecx,[ebp-0x1040]
100095c1:	mov    DWORD PTR [ebp-0x4],0xffffffff
100095c8:	call   0x1000a6a0
100095cd:	mov    eax,0x1
100095d2:	mov    ecx,DWORD PTR [ebp-0xc]
100095d5:	mov    DWORD PTR fs:0x0,ecx
100095dc:	pop    ecx
100095dd:	pop    edi
100095de:	pop    esi
100095df:	pop    ebx
100095e0:	mov    ecx,DWORD PTR [ebp-0x18]
100095e3:	xor    ecx,ebp
100095e5:	call   0x10018773
100095ea:	mov    esp,ebp
100095ec:	pop    ebp
100095ed:	ret    
100095ee:	int3   
100095ef:	int3   
100095f0:	push   0xffffffff
100095f2:	push   0x1002de32
100095f7:	mov    eax,fs:0x0
100095fd:	push   eax
100095fe:	sub    esp,0x94
10009604:	mov    eax,ds:0x100c7654
10009609:	xor    eax,esp
1000960b:	mov    DWORD PTR [esp+0x8c],eax
10009612:	push   ebx
10009613:	mov    eax,ds:0x100c7654
10009618:	xor    eax,esp
1000961a:	push   eax
1000961b:	lea    eax,[esp+0x9c]
10009622:	mov    fs:0x0,eax
10009628:	push   0x100b9b68
1000962d:	mov    DWORD PTR [esp+0xa8],0x0
10009638:	push   0xe
1000963a:	push   0x100b9bdc
1000963f:	mov    DWORD PTR [esp+0x1c],esi
10009643:	mov    DWORD PTR [esp+0x18],0x0
1000964b:	call   0x100035f0
10009650:	add    esp,0xc
10009653:	push   eax
10009654:	mov    ecx,esi
10009656:	call   0x10002dc0
1000965b:	mov    ecx,DWORD PTR [esp+0xac]
10009662:	push   0x10
10009664:	lea    eax,[esp+0x18]
10009668:	push   eax
10009669:	mov    DWORD PTR [esp+0xac],0x0
10009674:	push   ecx
10009675:	mov    DWORD PTR [esp+0x18],0x1
1000967d:	call   0x1001a5c9
10009682:	add    esp,0xc
10009685:	test   eax,eax
10009687:	jne    0x1000968d
10009689:	xor    ecx,ecx
1000968b:	jmp    0x100096a1
1000968d:	mov    ecx,eax
1000968f:	lea    ebx,[ecx+0x2]
10009692:	mov    dx,WORD PTR [ecx]
10009695:	add    ecx,0x2
10009698:	test   dx,dx
1000969b:	jne    0x10009692
1000969d:	sub    ecx,ebx
1000969f:	sar    ecx,1
100096a1:	push   ecx
100096a2:	push   eax
100096a3:	mov    ecx,esi
100096a5:	call   0x10003d30
100096aa:	mov    eax,esi
100096ac:	mov    ecx,DWORD PTR [esp+0x9c]
100096b3:	mov    DWORD PTR fs:0x0,ecx
100096ba:	pop    ecx
100096bb:	pop    ebx
100096bc:	mov    ecx,DWORD PTR [esp+0x8c]
100096c3:	xor    ecx,esp
100096c5:	call   0x10018773
100096ca:	add    esp,0xa0
100096d0:	ret    
100096d1:	int3   
100096d2:	int3   
100096d3:	int3   
100096d4:	int3   
100096d5:	int3   
100096d6:	int3   
100096d7:	int3   
100096d8:	int3   
100096d9:	int3   
100096da:	int3   
100096db:	int3   
100096dc:	int3   
100096dd:	int3   
100096de:	int3   
100096df:	int3   
100096e0:	push   0xffffffff
100096e2:	push   0x1002e4cb
100096e7:	mov    eax,fs:0x0
100096ed:	push   eax
100096ee:	sub    esp,0x88
100096f4:	mov    eax,ds:0x100c7654
100096f9:	xor    eax,esp
100096fb:	mov    DWORD PTR [esp+0x84],eax
10009702:	push   esi
10009703:	mov    eax,ds:0x100c7654
10009708:	xor    eax,esp
1000970a:	push   eax
1000970b:	lea    eax,[esp+0x90]
10009712:	mov    fs:0x0,eax
10009718:	mov    eax,DWORD PTR [edi+0x4]
1000971b:	push   eax
1000971c:	lea    esi,[esp+0xc]
10009720:	mov    BYTE PTR [edi+0x890],0x0
10009727:	call   0x100095f0
1000972c:	add    esp,0x4
1000972f:	mov    DWORD PTR [esp+0x98],0x0
1000973a:	mov    ecx,DWORD PTR [esp+0x8]
1000973e:	mov    eax,DWORD PTR [edi]
10009740:	push   ecx
10009741:	push   eax
10009742:	lea    ecx,[esp+0x14]
10009746:	call   0x100090b0
1000974b:	add    esp,0x8
1000974e:	test   eax,eax
10009750:	je     0x100097ad
10009752:	lea    edx,[esp+0xc]
10009756:	push   edx
10009757:	call   0x1001918f
1000975c:	mov    esi,eax
1000975e:	add    esp,0x4
10009761:	test   esi,esi
10009763:	je     0x100097ad
10009765:	mov    eax,DWORD PTR [edi]
10009767:	push   0x0
10009769:	push   0x880
1000976e:	lea    ecx,[edi+0x8]
10009771:	push   ecx
10009772:	push   esi
10009773:	push   eax
10009774:	call   0x1000e7d0
10009779:	call   eax
1000977b:	test   eax,eax
1000977d:	jne    0x100097a0
1000977f:	mov    DWORD PTR [esp+0x98],0xffffffff
1000978a:	mov    eax,DWORD PTR [esp+0x8]
1000978e:	add    eax,0xfffffff0
10009791:	lea    edx,[eax+0xc]
10009794:	or     ecx,0xffffffff
10009797:	lock xadd DWORD PTR [edx],ecx
1000979b:	dec    ecx
1000979c:	test   ecx,ecx
1000979e:	jmp    0x100097cc
100097a0:	mov    DWORD PTR [edi+0x888],esi
100097a6:	mov    BYTE PTR [edi+0x890],0x1
100097ad:	mov    DWORD PTR [esp+0x98],0xffffffff
100097b8:	mov    eax,DWORD PTR [esp+0x8]
100097bc:	add    eax,0xfffffff0
100097bf:	or     edx,0xffffffff
100097c2:	lea    ecx,[eax+0xc]
100097c5:	lock xadd DWORD PTR [ecx],edx
100097c9:	dec    edx
100097ca:	test   edx,edx
100097cc:	jg     0x100097d8
100097ce:	mov    ecx,DWORD PTR [eax]
100097d0:	mov    edx,DWORD PTR [ecx]
100097d2:	push   eax
100097d3:	mov    eax,DWORD PTR [edx+0x4]
100097d6:	call   eax
100097d8:	mov    ecx,DWORD PTR [esp+0x90]
100097df:	mov    DWORD PTR fs:0x0,ecx
100097e6:	pop    ecx
100097e7:	pop    esi
100097e8:	mov    ecx,DWORD PTR [esp+0x84]
100097ef:	xor    ecx,esp
100097f1:	call   0x10018773
100097f6:	add    esp,0x94
100097fc:	ret    
100097fd:	int3   
100097fe:	int3   
100097ff:	int3   
10009800:	push   ebp
10009801:	mov    ebp,esp
10009803:	and    esp,0xfffffff8
10009806:	push   0xffffffff
10009808:	push   0x1002e643
1000980d:	mov    eax,fs:0x0
10009813:	push   eax
10009814:	sub    esp,0x870
1000981a:	mov    eax,ds:0x100c7654
1000981f:	xor    eax,esp
10009821:	mov    DWORD PTR [esp+0x868],eax
10009828:	push   ebx
10009829:	push   esi
1000982a:	push   edi
1000982b:	mov    eax,ds:0x100c7654
10009830:	xor    eax,esp
10009832:	push   eax
10009833:	lea    eax,[esp+0x880]
1000983a:	mov    fs:0x0,eax
10009840:	mov    esi,ecx
10009842:	mov    ebx,DWORD PTR [ebp+0x8]
10009845:	mov    edi,edx
10009847:	mov    DWORD PTR [esp+0x14],ebx
1000984b:	call   0x100096e0
10009850:	cmp    BYTE PTR [edi+0x890],0x0
10009857:	je     0x10009947
1000985d:	push   ecx
1000985e:	lea    ebx,[edi+0x88]
10009864:	mov    ecx,esp
10009866:	mov    DWORD PTR [esp+0x1c],esp
1000986a:	push   ebx
1000986b:	call   0x10002dc0
10009870:	mov    eax,DWORD PTR [edi+0x4]
10009873:	push   eax
10009874:	call   0x100029b0
10009879:	add    esp,0x8
1000987c:	test   al,al
1000987e:	je     0x100098c7
10009880:	xor    esi,esi
10009882:	push   esi
10009883:	push   0x100b77fa
10009888:	lea    ecx,[esp+0x24]
1000988c:	mov    DWORD PTR [esp+0x3c],0xf
10009894:	mov    DWORD PTR [esp+0x38],esi
10009898:	mov    BYTE PTR [esp+0x28],0x0
1000989d:	call   0x10003a70
100098a2:	lea    ecx,[esp+0x1c]
100098a6:	push   ecx
100098a7:	lea    edx,[esp+0x50]
100098ab:	push   edx
100098ac:	mov    DWORD PTR [esp+0x890],esi
100098b3:	call   0x10001550
100098b8:	push   0x100bb980
100098bd:	lea    eax,[esp+0x50]
100098c1:	push   eax
100098c2:	call   0x10018e6e
100098c7:	mov    edx,ebx
100098c9:	mov    eax,esi
100098cb:	sub    edx,esi
100098cd:	lea    ecx,[ecx+0x0]
100098d0:	movzx  ecx,WORD PTR [eax]
100098d3:	mov    WORD PTR [edx+eax*1],cx
100098d7:	add    eax,0x2
100098da:	test   cx,cx
100098dd:	jne    0x100098d0
100098df:	lea    ecx,[esp+0x38]
100098e3:	call   0x1000a590
100098e8:	mov    DWORD PTR [esp+0x888],0x1
100098f3:	mov    ecx,DWORD PTR [edi+0x4]
100098f6:	push   ecx
100098f7:	lea    ecx,[esp+0x3c]
100098fb:	call   0x10007ee0
10009900:	mov    eax,DWORD PTR [edi+0x70]
10009903:	mov    ecx,DWORD PTR [edi]
10009905:	xor    edx,edx
10009907:	push   0x8000
1000990c:	push   edx
1000990d:	push   eax
1000990e:	push   ecx
1000990f:	mov    DWORD PTR [edi+0x70],edx
10009912:	mov    DWORD PTR [edi+0x74],edx
10009915:	mov    DWORD PTR [edi+0x78],edx
10009918:	call   DWORD PTR ds:0x1002f104
1000991e:	mov    edx,DWORD PTR [esp+0x14]
10009922:	push   edx
10009923:	mov    ecx,edi
10009925:	call   0x100081b0
1000992a:	push   edi
1000992b:	call   0x10008e50
10009930:	lea    eax,[esp+0x38]
10009934:	push   eax
10009935:	mov    DWORD PTR [esp+0x88c],0xffffffff
10009940:	call   0x10007e90
10009945:	jmp    0x10009974
10009947:	lea    edx,[edi+0x88]
1000994d:	mov    eax,esi
1000994f:	sub    edx,esi
10009951:	movzx  ecx,WORD PTR [eax]
10009954:	mov    WORD PTR [edx+eax*1],cx
10009958:	add    eax,0x2
1000995b:	test   cx,cx
1000995e:	jne    0x10009951
10009960:	mov    esi,edi
10009962:	call   0x10008ce0
10009967:	push   ebx
10009968:	mov    ecx,edi
1000996a:	call   0x100081b0
1000996f:	call   0x10008420
10009974:	mov    eax,DWORD PTR [edi+0x888]
1000997a:	push   0xa
1000997c:	lea    ecx,[esp+0x78]
10009980:	cdq    
10009981:	push   ecx
10009982:	push   edx
10009983:	push   eax
10009984:	call   0x1001a667
10009989:	mov    edx,DWORD PTR [edi+0x4]
1000998c:	push   edx
1000998d:	lea    esi,[esp+0x24]
10009991:	call   0x100095f0
10009996:	add    esp,0x14
10009999:	mov    DWORD PTR [esp+0x888],0x2
100099a4:	mov    ecx,DWORD PTR [esp+0x10]
100099a8:	mov    edi,DWORD PTR [edi]
100099aa:	lea    eax,[esp+0x74]
100099ae:	push   eax
100099af:	push   ecx
100099b0:	push   edi
100099b1:	call   0x10009350
100099b6:	mov    DWORD PTR [esp+0x894],0xffffffff
100099c1:	mov    eax,DWORD PTR [esp+0x1c]
100099c5:	add    eax,0xfffffff0
100099c8:	add    esp,0xc
100099cb:	lea    edx,[eax+0xc]
100099ce:	or     ecx,0xffffffff
100099d1:	lock xadd DWORD PTR [edx],ecx
100099d5:	dec    ecx
100099d6:	test   ecx,ecx
100099d8:	jg     0x100099e4
100099da:	mov    ecx,DWORD PTR [eax]
100099dc:	mov    edx,DWORD PTR [ecx]
100099de:	push   eax
100099df:	mov    eax,DWORD PTR [edx+0x4]
100099e2:	call   eax
100099e4:	mov    ecx,DWORD PTR [esp+0x880]
100099eb:	mov    DWORD PTR fs:0x0,ecx
100099f2:	pop    ecx
100099f3:	pop    edi
100099f4:	pop    esi
100099f5:	pop    ebx
100099f6:	mov    ecx,DWORD PTR [esp+0x868]
100099fd:	xor    ecx,esp
100099ff:	call   0x10018773
10009a04:	mov    esp,ebp
10009a06:	pop    ebp
10009a07:	ret    0x4
10009a0a:	int3   
10009a0b:	int3   
10009a0c:	int3   
10009a0d:	int3   
10009a0e:	int3   
10009a0f:	int3   
10009a10:	push   ebp
10009a11:	mov    ebp,esp
10009a13:	push   0xffffffff
10009a15:	push   0x1002e776
10009a1a:	mov    eax,fs:0x0
10009a20:	push   eax
10009a21:	sub    esp,0x8bc
10009a27:	mov    eax,ds:0x100c7654
10009a2c:	xor    eax,ebp
10009a2e:	mov    DWORD PTR [ebp-0x14],eax
10009a31:	push   ebx
10009a32:	push   esi
10009a33:	push   edi
10009a34:	push   eax
10009a35:	lea    eax,[ebp-0xc]
10009a38:	mov    fs:0x0,eax
10009a3e:	mov    DWORD PTR [ebp-0x10],esp
10009a41:	mov    esi,DWORD PTR [ebp+0x8]
10009a44:	mov    ebx,DWORD PTR [ebp+0xc]
10009a47:	mov    edi,DWORD PTR [ebp+0x10]
10009a4a:	lea    eax,[ebp-0x8ac]
10009a50:	push   eax
10009a51:	mov    ecx,esi
10009a53:	mov    DWORD PTR [ebp-0x4],0x0
10009a5a:	call   0x100080a0
10009a5f:	push   ebx
10009a60:	mov    ecx,edi
10009a62:	lea    edx,[ebp-0x8ac]
10009a68:	mov    BYTE PTR [ebp-0x4],0x1
10009a6c:	call   0x10009800
10009a71:	call   DWORD PTR ds:0x100c75d4
10009a77:	mov    ebx,eax
10009a79:	call   DWORD PTR ds:0x1002f0b8
10009a7f:	cmp    esi,eax
10009a81:	je     0x10009aea
10009a83:	test   edi,edi
10009a85:	jne    0x10009a9b
10009a87:	mov    ecx,DWORD PTR [ebp-0x8ac]
10009a8d:	xor    eax,eax
10009a8f:	push   eax
10009a90:	push   ecx
10009a91:	call   0x1000a000
10009a96:	add    esp,0x8
10009a99:	jmp    0x10009af1
10009a9b:	push   edi
10009a9c:	call   DWORD PTR ds:0x1002f034
10009aa2:	add    eax,0x1
10009aa5:	cmp    eax,0x3fffffff
10009aaa:	jle    0x10009ac0
10009aac:	mov    ecx,DWORD PTR [ebp-0x8ac]
10009ab2:	xor    eax,eax
10009ab4:	push   eax
10009ab5:	push   ecx
10009ab6:	call   0x1000a000
10009abb:	add    esp,0x8
10009abe:	jmp    0x10009af1
10009ac0:	lea    esi,[eax+eax*1]
10009ac3:	mov    eax,esi
10009ac5:	call   0x10018790
10009aca:	mov    DWORD PTR [ebp-0x10],esp
10009acd:	mov    eax,esp
10009acf:	push   ebx
10009ad0:	push   esi
10009ad1:	push   edi
10009ad2:	push   eax
10009ad3:	call   0x10001050
10009ad8:	mov    ecx,DWORD PTR [ebp-0x8ac]
10009ade:	push   eax
10009adf:	push   ecx
10009ae0:	call   0x1000a000
10009ae5:	add    esp,0x8
10009ae8:	jmp    0x10009af1
10009aea:	push   edi
10009aeb:	call   DWORD PTR ds:0x1002f108
10009af1:	lea    ecx,[ebp-0x18]
10009af4:	call   0x1000a4d0
10009af9:	mov    esi,DWORD PTR [ebp-0x8ac]
10009aff:	test   esi,esi
10009b01:	je     0x10009b19
10009b03:	call   DWORD PTR ds:0x1002f094
10009b09:	push   esi
10009b0a:	mov    edi,eax
10009b0c:	call   DWORD PTR ds:0x1002f064
10009b12:	push   edi
10009b13:	call   DWORD PTR ds:0x1002f090
10009b19:	lea    esp,[ebp-0x8d8]
10009b1f:	mov    ecx,DWORD PTR [ebp-0xc]
10009b22:	mov    DWORD PTR fs:0x0,ecx
10009b29:	pop    ecx
10009b2a:	pop    edi
10009b2b:	pop    esi
10009b2c:	pop    ebx
10009b2d:	mov    ecx,DWORD PTR [ebp-0x14]
10009b30:	xor    ecx,ebp
10009b32:	call   0x10018773
10009b37:	mov    esp,ebp
10009b39:	pop    ebp
10009b3a:	ret    
10009b3b:	push   0x100b77fa
10009b40:	lea    ecx,[ebp-0x8c8]
10009b46:	call   0x10002bc0
10009b4b:	lea    edx,[ebp-0x8c8]
10009b51:	push   edx
10009b52:	push   0x0
10009b54:	push   0x4
10009b56:	mov    BYTE PTR [ebp-0x4],0x3
10009b5a:	call   0x1000dcf0
10009b5f:	add    esp,0xc
10009b62:	lea    ecx,[ebp-0x8c8]
10009b68:	call   0x10002c00
10009b6d:	mov    eax,0x10009b19
10009b72:	ret    
10009b73:	int3   
10009b74:	int3   
10009b75:	int3   
10009b76:	int3   
10009b77:	int3   
10009b78:	int3   
10009b79:	int3   
10009b7a:	int3   
10009b7b:	int3   
10009b7c:	int3   
10009b7d:	int3   
10009b7e:	int3   
10009b7f:	int3   
10009b80:	push   edi
10009b81:	lea    ecx,[esi+0x894]
10009b87:	call   0x1000a4d0
10009b8c:	mov    edi,DWORD PTR [esi]
10009b8e:	test   edi,edi
10009b90:	je     0x10009baa
10009b92:	push   ebx
10009b93:	call   DWORD PTR ds:0x1002f094
10009b99:	push   edi
10009b9a:	mov    ebx,eax
10009b9c:	call   DWORD PTR ds:0x1002f064
10009ba2:	push   ebx
10009ba3:	call   DWORD PTR ds:0x1002f090
10009ba9:	pop    ebx
10009baa:	mov    DWORD PTR [esi],0x0
10009bb0:	pop    edi
10009bb1:	ret    
10009bb2:	int3   
10009bb3:	int3   
10009bb4:	int3   
10009bb5:	int3   
10009bb6:	int3   
10009bb7:	int3   
10009bb8:	int3   
10009bb9:	int3   
10009bba:	int3   
10009bbb:	int3   
10009bbc:	int3   
10009bbd:	int3   
10009bbe:	int3   
10009bbf:	int3   
10009bc0:	push   ebp
10009bc1:	mov    ebp,esp
10009bc3:	push   0xffffffff
10009bc5:	push   0x1002e736
10009bca:	mov    eax,fs:0x0
10009bd0:	push   eax
10009bd1:	push   ecx
10009bd2:	sub    esp,0x910
10009bd8:	mov    eax,ds:0x100c7654
10009bdd:	xor    eax,ebp
10009bdf:	mov    DWORD PTR [ebp-0x18],eax
10009be2:	push   ebx
10009be3:	push   esi
10009be4:	push   edi
10009be5:	push   eax
10009be6:	lea    eax,[ebp-0xc]
10009be9:	mov    fs:0x0,eax
10009bef:	mov    DWORD PTR [ebp-0x10],esp
10009bf2:	mov    DWORD PTR [ebp-0x4],0x0
10009bf9:	lea    eax,[ebp-0x8b0]
10009bff:	push   eax
10009c00:	mov    ecx,DWORD PTR [ebp+0x8]
10009c03:	call   0x100080a0
10009c08:	mov    DWORD PTR [ebp-0x914],eax
10009c0e:	mov    BYTE PTR [ebp-0x4],0x1
10009c12:	mov    ecx,DWORD PTR [ebp+0xc]
10009c15:	push   ecx
10009c16:	mov    ecx,DWORD PTR [ebp+0x10]
10009c19:	lea    edx,[ebp-0x8b0]
10009c1f:	call   0x10009800
10009c24:	call   0x10001000
10009c29:	mov    DWORD PTR [ebp-0x8b8],eax
10009c2f:	mov    edx,DWORD PTR [ebp+0x10]
10009c32:	mov    DWORD PTR [ebp-0x8b4],edx
10009c38:	cmp    DWORD PTR [ebp-0x8b4],0x0
10009c3f:	jne    0x10009c4d
10009c41:	mov    DWORD PTR [ebp-0x918],0x0
10009c4b:	jmp    0x10009cba
10009c4d:	mov    eax,DWORD PTR [ebp-0x8b4]
10009c53:	push   eax
10009c54:	call   DWORD PTR ds:0x1002f034
10009c5a:	add    eax,0x1
10009c5d:	mov    DWORD PTR [ebp-0x14],eax
10009c60:	cmp    DWORD PTR [ebp-0x14],0x3fffffff
10009c67:	jle    0x10009c75
10009c69:	mov    DWORD PTR [ebp-0x91c],0x0
10009c73:	jmp    0x10009cae
10009c75:	mov    eax,DWORD PTR [ebp-0x14]
10009c78:	shl    eax,1
10009c7a:	call   0x10018790
10009c7f:	mov    DWORD PTR [ebp-0x920],esp
10009c85:	mov    DWORD PTR [ebp-0x10],esp
10009c88:	mov    ecx,DWORD PTR [ebp-0x8b8]
10009c8e:	push   ecx
10009c8f:	mov    edx,DWORD PTR [ebp-0x14]
10009c92:	shl    edx,1
10009c94:	push   edx
10009c95:	mov    eax,DWORD PTR [ebp-0x8b4]
10009c9b:	push   eax
10009c9c:	mov    ecx,DWORD PTR [ebp-0x920]
10009ca2:	push   ecx
10009ca3:	call   0x10001050
10009ca8:	mov    DWORD PTR [ebp-0x91c],eax
10009cae:	mov    edx,DWORD PTR [ebp-0x91c]
10009cb4:	mov    DWORD PTR [ebp-0x918],edx
10009cba:	mov    eax,DWORD PTR [ebp-0x918]
10009cc0:	push   eax
10009cc1:	lea    eax,[ebp-0x8b0]
10009cc7:	call   0x10007e80
10009ccc:	push   eax
10009ccd:	call   0x1000a000
10009cd2:	add    esp,0x8
10009cd5:	mov    BYTE PTR [ebp-0x8bd],0x1
10009cdc:	mov    BYTE PTR [ebp-0x4],0x0
10009ce0:	lea    esi,[ebp-0x8b0]
10009ce6:	call   0x10009b80
10009ceb:	mov    al,BYTE PTR [ebp-0x8bd]
10009cf1:	jmp    0x10009d3f
10009cf3:	push   0x100b77fa
10009cf8:	lea    ecx,[ebp-0x8dc]
10009cfe:	call   0x10002bc0
10009d03:	mov    BYTE PTR [ebp-0x4],0x3
10009d07:	lea    ecx,[ebp-0x8dc]
10009d0d:	push   ecx
10009d0e:	push   0x0
10009d10:	push   0x4
10009d12:	call   0x1000dcf0
10009d17:	add    esp,0xc
10009d1a:	mov    BYTE PTR [ebp-0x4],0x2
10009d1e:	lea    ecx,[ebp-0x8dc]
10009d24:	call   0x10002c00
10009d29:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009d30:	mov    eax,0x10009d3d
10009d35:	ret    
10009d36:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009d3d:	xor    al,al
10009d3f:	lea    esp,[ebp-0x930]
10009d45:	mov    ecx,DWORD PTR [ebp-0xc]
10009d48:	mov    DWORD PTR fs:0x0,ecx
10009d4f:	pop    ecx
10009d50:	pop    edi
10009d51:	pop    esi
10009d52:	pop    ebx
10009d53:	mov    ecx,DWORD PTR [ebp-0x18]
10009d56:	xor    ecx,ebp
10009d58:	call   0x10018773
10009d5d:	mov    esp,ebp
10009d5f:	pop    ebp
10009d60:	ret    
10009d61:	int3   
10009d62:	int3   
10009d63:	int3   
10009d64:	int3   
10009d65:	int3   
10009d66:	int3   
10009d67:	int3   
10009d68:	int3   
10009d69:	int3   
10009d6a:	int3   
10009d6b:	int3   
10009d6c:	int3   
10009d6d:	int3   
10009d6e:	int3   
10009d6f:	int3   
10009d70:	push   ebp
10009d71:	mov    ebp,esp
10009d73:	push   0xffffffff
10009d75:	push   0x1002ddf0
10009d7a:	mov    eax,fs:0x0
10009d80:	push   eax
10009d81:	sub    esp,0x18
10009d84:	mov    eax,ds:0x100c7654
10009d89:	xor    eax,ebp
10009d8b:	push   eax
10009d8c:	lea    eax,[ebp-0xc]
10009d8f:	mov    fs:0x0,eax
10009d95:	lea    ecx,[ebp-0x11]
10009d98:	call   0x10006e80
10009d9d:	mov    DWORD PTR [ebp-0x4],0x0
10009da4:	mov    eax,DWORD PTR [ebp+0x8]
10009da7:	mov    DWORD PTR [ebp-0x10],eax
10009daa:	mov    BYTE PTR [ebp-0x4],0x1
10009dae:	mov    ecx,DWORD PTR [ebp-0x10]
10009db1:	mov    DWORD PTR [ebp-0x1c],ecx
10009db4:	mov    edx,DWORD PTR [ebp-0x1c]
10009db7:	mov    eax,DWORD PTR [edx+0x4]
10009dba:	push   eax
10009dbb:	mov    ecx,DWORD PTR [ebp-0x10]
10009dbe:	mov    edx,DWORD PTR [ecx]
10009dc0:	push   edx
10009dc1:	call   0x10006f10
10009dc6:	add    esp,0x8
10009dc9:	mov    eax,DWORD PTR [ebp-0x10]
10009dcc:	mov    DWORD PTR [ebp-0x20],eax
10009dcf:	push   0x0
10009dd1:	mov    ecx,DWORD PTR [ebp-0x20]
10009dd4:	mov    edx,DWORD PTR [ecx]
10009dd6:	push   edx
10009dd7:	call   0x1000e6d0
10009ddc:	call   eax
10009dde:	mov    DWORD PTR [ebp-0x18],0x0
10009de5:	mov    BYTE PTR [ebp-0x4],0x0
10009de9:	mov    eax,DWORD PTR [ebp-0x10]
10009dec:	mov    DWORD PTR [ebp-0x24],eax
10009def:	mov    ecx,DWORD PTR [ebp-0x24]
10009df2:	push   ecx
10009df3:	call   0x1001876e
10009df8:	add    esp,0x4
10009dfb:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009e02:	lea    ecx,[ebp-0x11]
10009e05:	call   0x10006ea0
10009e0a:	mov    eax,DWORD PTR [ebp-0x18]
10009e0d:	mov    ecx,DWORD PTR [ebp-0xc]
10009e10:	mov    DWORD PTR fs:0x0,ecx
10009e17:	pop    ecx
10009e18:	mov    esp,ebp
10009e1a:	pop    ebp
10009e1b:	ret    0x4
10009e1e:	int3   
10009e1f:	int3   
10009e20:	push   ebp
10009e21:	mov    ebp,esp
10009e23:	push   0xffffffff
10009e25:	push   0x1002e7b8
10009e2a:	mov    eax,fs:0x0
10009e30:	push   eax
10009e31:	sub    esp,0x94
10009e37:	mov    eax,ds:0x100c7654
10009e3c:	xor    eax,ebp
10009e3e:	push   eax
10009e3f:	lea    eax,[ebp-0xc]
10009e42:	mov    fs:0x0,eax
10009e48:	mov    DWORD PTR [ebp-0x64],0x0
10009e4f:	push   0x40
10009e51:	push   0x0
10009e53:	lea    eax,[ebp-0x60]
10009e56:	push   eax
10009e57:	call   0x100191d0
10009e5c:	add    esp,0xc
10009e5f:	mov    DWORD PTR [ebp-0x64],0x44
10009e66:	mov    DWORD PTR [ebp-0x1c],0x0
10009e6d:	xor    ecx,ecx
10009e6f:	mov    DWORD PTR [ebp-0x18],ecx
10009e72:	mov    DWORD PTR [ebp-0x14],ecx
10009e75:	mov    DWORD PTR [ebp-0x10],ecx
10009e78:	lea    edx,[ebp-0x1c]
10009e7b:	push   edx
10009e7c:	lea    eax,[ebp-0x64]
10009e7f:	push   eax
10009e80:	push   0x0
10009e82:	push   0x0
10009e84:	push   0x4
10009e86:	push   0x1
10009e88:	push   0x0
10009e8a:	push   0x0
10009e8c:	push   0x100b77f8
10009e91:	mov    ecx,DWORD PTR [ebp+0xc]
10009e94:	push   ecx
10009e95:	call   0x1000e4f0
10009e9a:	call   eax
10009e9c:	test   eax,eax
10009e9e:	je     0x10009fe2
10009ea4:	push   0x0
10009ea6:	lea    ecx,[ebp-0x6c]
10009ea9:	call   0x10003300
10009eae:	mov    DWORD PTR [ebp-0x4],0x0
10009eb5:	mov    edx,DWORD PTR [ebp-0x1c]
10009eb8:	push   edx
10009eb9:	lea    ecx,[ebp-0x6c]
10009ebc:	call   0x10003f00
10009ec1:	push   0x0
10009ec3:	lea    ecx,[ebp-0x68]
10009ec6:	call   0x10003300
10009ecb:	mov    BYTE PTR [ebp-0x4],0x1
10009ecf:	mov    eax,DWORD PTR [ebp-0x18]
10009ed2:	push   eax
10009ed3:	lea    ecx,[ebp-0x68]
10009ed6:	call   0x10003f00
10009edb:	mov    ecx,DWORD PTR [ebp+0x10]
10009ede:	push   ecx
10009edf:	mov    edx,DWORD PTR [ebp+0x8]
10009ee2:	push   edx
10009ee3:	mov    eax,DWORD PTR [ebp-0x14]
10009ee6:	push   eax
10009ee7:	call   0x10009bc0
10009eec:	add    esp,0xc
10009eef:	movzx  ecx,al
10009ef2:	test   ecx,ecx
10009ef4:	je     0x10009fc5
10009efa:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10009efe:	je     0x10009fc5
10009f04:	mov    DWORD PTR [ebp-0x78],0x8
10009f0b:	mov    edx,DWORD PTR [ebp-0x78]
10009f0e:	push   edx
10009f0f:	call   0x100190b4
10009f14:	add    esp,0x4
10009f17:	mov    DWORD PTR [ebp-0x7c],eax
10009f1a:	cmp    DWORD PTR [ebp-0x7c],0x0
10009f1e:	je     0x10009f3d
10009f20:	mov    eax,DWORD PTR [ebp-0x78]
10009f23:	push   eax
10009f24:	push   0x0
10009f26:	mov    ecx,DWORD PTR [ebp-0x7c]
10009f29:	push   ecx
10009f2a:	call   0x100191d0
10009f2f:	add    esp,0xc
10009f32:	mov    edx,DWORD PTR [ebp-0x7c]
10009f35:	mov    DWORD PTR [ebp-0x88],edx
10009f3b:	jmp    0x10009f47
10009f3d:	mov    DWORD PTR [ebp-0x88],0x0
10009f47:	mov    eax,DWORD PTR [ebp-0x88]
10009f4d:	mov    DWORD PTR [ebp-0x70],eax
10009f50:	mov    BYTE PTR [ebp-0x4],0x2
10009f54:	mov    ecx,DWORD PTR [ebp-0x70]
10009f57:	mov    DWORD PTR [ebp-0x90],ecx
10009f5d:	lea    ecx,[ebp-0x6c]
10009f60:	call   0x10007b80
10009f65:	mov    edx,DWORD PTR [ebp-0x90]
10009f6b:	mov    DWORD PTR [edx],eax
10009f6d:	mov    eax,DWORD PTR [ebp-0x70]
10009f70:	mov    ecx,DWORD PTR [ebp+0x14]
10009f73:	mov    DWORD PTR [eax+0x4],ecx
10009f76:	mov    edx,DWORD PTR [ebp-0x70]
10009f79:	mov    DWORD PTR [ebp-0x94],edx
10009f7f:	mov    DWORD PTR [ebp-0x70],0x0
10009f86:	push   0x0
10009f88:	push   0x0
10009f8a:	mov    eax,DWORD PTR [ebp-0x94]
10009f90:	push   eax
10009f91:	push   0x10009d70
10009f96:	call   0x1000bc10
10009f9b:	add    esp,0x4
10009f9e:	push   eax
10009f9f:	push   0x0
10009fa1:	push   0x0
10009fa3:	call   DWORD PTR ds:0x1002f080
10009fa9:	mov    BYTE PTR [ebp-0x4],0x1
10009fad:	mov    ecx,DWORD PTR [ebp-0x70]
10009fb0:	mov    DWORD PTR [ebp-0x98],ecx
10009fb6:	mov    edx,DWORD PTR [ebp-0x98]
10009fbc:	push   edx
10009fbd:	call   0x1001876e
10009fc2:	add    esp,0x4
10009fc5:	mov    BYTE PTR [ebp-0x4],0x0
10009fc9:	lea    ecx,[ebp-0x68]
10009fcc:	call   0x10003310
10009fd1:	mov    DWORD PTR [ebp-0x4],0xffffffff
10009fd8:	lea    ecx,[ebp-0x6c]
10009fdb:	call   0x10003310
10009fe0:	jmp    0x10009feb
10009fe2:	call   DWORD PTR ds:0x1002f094
10009fe8:	mov    DWORD PTR [ebp-0x74],eax
10009feb:	mov    ecx,DWORD PTR [ebp-0xc]
10009fee:	mov    DWORD PTR fs:0x0,ecx
10009ff5:	pop    ecx
10009ff6:	mov    esp,ebp
10009ff8:	pop    ebp
10009ff9:	ret    
10009ffa:	int3   
10009ffb:	int3   
10009ffc:	int3   
10009ffd:	int3   
10009ffe:	int3   
10009fff:	int3   
1000a000:	push   ebp
1000a001:	mov    ebp,esp
1000a003:	push   0xffffffff
1000a005:	push   0x1002ddab
1000a00a:	mov    eax,fs:0x0
1000a010:	push   eax
1000a011:	push   ecx
1000a012:	sub    esp,0x24c
1000a018:	mov    eax,ds:0x100c7654
1000a01d:	xor    eax,ebp
1000a01f:	mov    DWORD PTR [ebp-0x3c],eax
1000a022:	push   ebx
1000a023:	push   esi
1000a024:	push   edi
1000a025:	push   eax
1000a026:	lea    eax,[ebp-0xc]
1000a029:	mov    fs:0x0,eax
1000a02f:	mov    DWORD PTR [ebp-0x10],esp
1000a032:	push   0x100b9c00
1000a037:	push   0xc
1000a039:	push   0x100b7f50
1000a03e:	call   0x100035f0
1000a043:	add    esp,0x8
1000a046:	mov    ecx,esp
1000a048:	mov    DWORD PTR [ebp-0xd8],esp
1000a04e:	push   eax
1000a04f:	call   0x10002dc0
1000a054:	mov    DWORD PTR [ebp-0x200],eax
1000a05a:	call   0x10007df0
1000a05f:	add    esp,0x4
1000a062:	mov    DWORD PTR [ebp-0x174],eax
1000a068:	mov    eax,DWORD PTR [ebp-0x174]
1000a06e:	mov    DWORD PTR [ebp-0x28],eax
1000a071:	mov    DWORD PTR [ebp-0x4],0x0
1000a078:	cmp    DWORD PTR [ebp-0x28],0x0
1000a07c:	jne    0x1000a0dc
1000a07e:	mov    BYTE PTR [ebp-0xd9],0x0
1000a085:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000a08c:	mov    ecx,DWORD PTR [ebp-0x28]
1000a08f:	mov    DWORD PTR [ebp-0x17c],ecx
1000a095:	mov    edx,DWORD PTR [ebp-0x17c]
1000a09b:	mov    DWORD PTR [ebp-0x178],edx
1000a0a1:	cmp    DWORD PTR [ebp-0x178],0x0
1000a0a8:	je     0x1000a0c7
1000a0aa:	push   0x1
1000a0ac:	mov    eax,DWORD PTR [ebp-0x178]
1000a0b2:	mov    edx,DWORD PTR [eax]
1000a0b4:	mov    ecx,DWORD PTR [ebp-0x178]
1000a0ba:	mov    eax,DWORD PTR [edx+0x4]
1000a0bd:	call   eax
1000a0bf:	mov    DWORD PTR [ebp-0x204],eax
1000a0c5:	jmp    0x1000a0d1
1000a0c7:	mov    DWORD PTR [ebp-0x204],0x0
1000a0d1:	mov    al,BYTE PTR [ebp-0xd9]
1000a0d7:	jmp    0x1000a4a7
1000a0dc:	mov    ecx,DWORD PTR [ebp+0x8]
1000a0df:	push   ecx
1000a0e0:	call   0x10002b90
1000a0e5:	add    esp,0x4
1000a0e8:	push   eax
1000a0e9:	lea    esi,[ebp-0xf8]
1000a0ef:	call   0x10007c60
1000a0f4:	add    esp,0x4
1000a0f7:	mov    DWORD PTR [ebp-0x208],eax
1000a0fd:	mov    edx,DWORD PTR [ebp-0x208]
1000a103:	mov    DWORD PTR [ebp-0x20c],edx
1000a109:	mov    BYTE PTR [ebp-0x4],0x1
1000a10d:	lea    eax,[ebp-0x38]
1000a110:	push   eax
1000a111:	mov    ecx,DWORD PTR [ebp-0x20c]
1000a117:	call   0x1000e040
1000a11c:	mov    BYTE PTR [ebp-0x4],0x3
1000a120:	lea    ecx,[ebp-0xf8]
1000a126:	call   0x10002c00
1000a12b:	mov    BYTE PTR [ebp-0x11],0x0
1000a12f:	mov    DWORD PTR [ebp-0x18],0x0
1000a136:	mov    DWORD PTR [ebp-0x30],0x0
1000a13d:	mov    DWORD PTR [ebp-0x24],0x0
1000a144:	mov    DWORD PTR [ebp-0x2c],0x0
1000a14b:	mov    DWORD PTR [ebp-0x1c],0x0
1000a152:	mov    DWORD PTR [ebp-0x20],0x0
1000a159:	mov    BYTE PTR [ebp-0x4],0x4
1000a15d:	mov    ecx,DWORD PTR [ebp-0x28]
1000a160:	mov    DWORD PTR [ebp-0x210],ecx
1000a166:	push   0x100b9c50
1000a16b:	push   0xc
1000a16d:	push   0x100b9ca8
1000a172:	call   0x100033d0
1000a177:	add    esp,0xc
1000a17a:	mov    DWORD PTR [ebp-0x214],eax
1000a180:	mov    edx,DWORD PTR [ebp-0x214]
1000a186:	push   edx
1000a187:	mov    eax,DWORD PTR [ebp-0x210]
1000a18d:	mov    edx,DWORD PTR [eax]
1000a18f:	mov    ecx,DWORD PTR [ebp-0x210]
1000a195:	mov    eax,DWORD PTR [edx]
1000a197:	call   eax
1000a199:	mov    DWORD PTR [ebp-0x21c],eax
1000a19f:	mov    DWORD PTR [ebp-0x218],edx
1000a1a5:	mov    ecx,DWORD PTR [ebp-0x21c]
1000a1ab:	mov    DWORD PTR [ebp-0xc8],ecx
1000a1b1:	mov    edx,DWORD PTR [ebp-0x218]
1000a1b7:	mov    DWORD PTR [ebp-0xc4],edx
1000a1bd:	push   0x80
1000a1c2:	push   0x0
1000a1c4:	lea    eax,[ebp-0xc0]
1000a1ca:	push   eax
1000a1cb:	call   0x100191d0
1000a1d0:	add    esp,0xc
1000a1d3:	mov    ecx,DWORD PTR [ebp+0xc]
1000a1d6:	mov    DWORD PTR [ebp-0x220],ecx
1000a1dc:	lea    edx,[ebp-0xc0]
1000a1e2:	mov    DWORD PTR [ebp-0x224],edx
1000a1e8:	mov    eax,DWORD PTR [ebp-0x224]
1000a1ee:	mov    DWORD PTR [ebp-0x228],eax
1000a1f4:	mov    ecx,DWORD PTR [ebp-0x220]
1000a1fa:	mov    dl,BYTE PTR [ecx]
1000a1fc:	mov    BYTE PTR [ebp-0x229],dl
1000a202:	mov    eax,DWORD PTR [ebp-0x224]
1000a208:	mov    cl,BYTE PTR [ebp-0x229]
1000a20e:	mov    BYTE PTR [eax],cl
1000a210:	mov    edx,DWORD PTR [ebp-0x220]
1000a216:	add    edx,0x1
1000a219:	mov    DWORD PTR [ebp-0x220],edx
1000a21f:	mov    eax,DWORD PTR [ebp-0x224]
1000a225:	add    eax,0x1
1000a228:	mov    DWORD PTR [ebp-0x224],eax
1000a22e:	cmp    BYTE PTR [ebp-0x229],0x0
1000a235:	jne    0x1000a1f4
1000a237:	mov    ecx,DWORD PTR [ebp-0xc8]
1000a23d:	or     ecx,DWORD PTR [ebp-0xc4]
1000a243:	jne    0x1000a24a
1000a245:	jmp    0x1000a3d5
1000a24a:	push   0x4
1000a24c:	push   0x3000
1000a251:	push   0x88
1000a256:	push   0x0
1000a258:	mov    edx,DWORD PTR [ebp+0x8]
1000a25b:	push   edx
1000a25c:	call   DWORD PTR ds:0x1002f100
1000a262:	mov    DWORD PTR [ebp-0x18],eax
1000a265:	cmp    DWORD PTR [ebp-0x18],0x0
1000a269:	jne    0x1000a27c
1000a26b:	call   DWORD PTR ds:0x1002f094
1000a271:	mov    DWORD PTR [ebp-0xd4],eax
1000a277:	jmp    0x1000a3d5
1000a27c:	call   0x1000e750
1000a281:	mov    DWORD PTR [ebp-0x230],eax
1000a287:	lea    eax,[ebp-0x20]
1000a28a:	push   eax
1000a28b:	push   0x88
1000a290:	lea    ecx,[ebp-0xc8]
1000a296:	push   ecx
1000a297:	mov    edx,DWORD PTR [ebp-0x18]
1000a29a:	push   edx
1000a29b:	mov    eax,DWORD PTR [ebp+0x8]
1000a29e:	push   eax
1000a29f:	call   DWORD PTR [ebp-0x230]
1000a2a5:	lea    eax,[ebp-0x38]
1000a2a8:	call   0x1000e1b0
1000a2ad:	mov    DWORD PTR [ebp-0xcc],eax
1000a2b3:	push   0x40
1000a2b5:	push   0x3000
1000a2ba:	mov    ecx,DWORD PTR [ebp-0xcc]
1000a2c0:	push   ecx
1000a2c1:	push   0x0
1000a2c3:	mov    edx,DWORD PTR [ebp+0x8]
1000a2c6:	push   edx
1000a2c7:	call   DWORD PTR ds:0x1002f100
1000a2cd:	mov    DWORD PTR [ebp-0x30],eax
1000a2d0:	mov    eax,DWORD PTR [ebp-0x30]
1000a2d3:	push   eax
1000a2d4:	lea    eax,[ebp-0x38]
1000a2d7:	call   0x1000e1c0
1000a2dc:	cmp    DWORD PTR [ebp-0x30],0x0
1000a2e0:	jne    0x1000a2e7
1000a2e2:	jmp    0x1000a3d5
1000a2e7:	call   0x1000e750
1000a2ec:	mov    DWORD PTR [ebp-0x234],eax
1000a2f2:	lea    ecx,[ebp-0x20]
1000a2f5:	push   ecx
1000a2f6:	mov    edx,DWORD PTR [ebp-0xcc]
1000a2fc:	push   edx
1000a2fd:	lea    eax,[ebp-0x38]
1000a300:	call   0x1000e1a0
1000a305:	push   eax
1000a306:	mov    eax,DWORD PTR [ebp-0x30]
1000a309:	push   eax
1000a30a:	mov    ecx,DWORD PTR [ebp+0x8]
1000a30d:	push   ecx
1000a30e:	call   DWORD PTR [ebp-0x234]
1000a314:	mov    DWORD PTR [ebp-0x238],eax
1000a31a:	mov    DWORD PTR [ebp-0xd0],0x0
1000a324:	call   0x1000edf0
1000a329:	mov    DWORD PTR [ebp-0x23c],eax
1000a32f:	lea    edx,[ebp-0xd0]
1000a335:	push   edx
1000a336:	push   0xf01ff
1000a33b:	mov    eax,DWORD PTR [ebp+0x8]
1000a33e:	push   eax
1000a33f:	call   DWORD PTR [ebp-0x23c]
1000a345:	mov    DWORD PTR [ebp-0x240],eax
1000a34b:	call   0x1000ecf0
1000a350:	mov    DWORD PTR [ebp-0x244],eax
1000a356:	mov    ecx,DWORD PTR [ebp-0xd0]
1000a35c:	push   ecx
1000a35d:	call   DWORD PTR [ebp-0x244]
1000a363:	mov    DWORD PTR [ebp-0x248],eax
1000a369:	call   0x1000e920
1000a36e:	mov    DWORD PTR [ebp-0x24c],eax
1000a374:	lea    edx,[ebp-0x2c]
1000a377:	push   edx
1000a378:	push   0x0
1000a37a:	mov    eax,DWORD PTR [ebp-0x18]
1000a37d:	push   eax
1000a37e:	mov    ecx,DWORD PTR [ebp-0x30]
1000a381:	push   ecx
1000a382:	push   0x0
1000a384:	push   0x0
1000a386:	mov    edx,DWORD PTR [ebp+0x8]
1000a389:	push   edx
1000a38a:	call   DWORD PTR [ebp-0x24c]
1000a390:	mov    DWORD PTR [ebp-0x250],eax
1000a396:	mov    eax,DWORD PTR [ebp-0x250]
1000a39c:	mov    DWORD PTR [ebp-0x24],eax
1000a39f:	cmp    DWORD PTR [ebp-0x24],0x0
1000a3a3:	jne    0x1000a3a7
1000a3a5:	jmp    0x1000a3d5
1000a3a7:	call   0x1000ed70
1000a3ac:	mov    DWORD PTR [ebp-0x254],eax
1000a3b2:	call   DWORD PTR [ebp-0x254]
1000a3b8:	mov    DWORD PTR [ebp-0x258],eax
1000a3be:	push   0xffffffff
1000a3c0:	mov    ecx,DWORD PTR [ebp-0x24]
1000a3c3:	push   ecx
1000a3c4:	call   DWORD PTR ds:0x1002f058
1000a3ca:	mov    BYTE PTR [ebp-0x11],0x1
1000a3ce:	jmp    0x1000a3d5
1000a3d0:	jmp    0x1000a15d
1000a3d5:	jmp    0x1000a3e4
1000a3d7:	mov    DWORD PTR [ebp-0x4],0x3
1000a3de:	mov    eax,0x1000a3eb
1000a3e3:	ret    
1000a3e4:	mov    DWORD PTR [ebp-0x4],0x3
1000a3eb:	cmp    DWORD PTR [ebp-0x18],0x0
1000a3ef:	je     0x1000a406
1000a3f1:	push   0x8000
1000a3f6:	push   0x0
1000a3f8:	mov    edx,DWORD PTR [ebp-0x18]
1000a3fb:	push   edx
1000a3fc:	mov    eax,DWORD PTR [ebp+0x8]
1000a3ff:	push   eax
1000a400:	call   DWORD PTR ds:0x1002f104
1000a406:	cmp    DWORD PTR [ebp-0x30],0x0
1000a40a:	je     0x1000a421
1000a40c:	push   0x8000
1000a411:	push   0x0
1000a413:	mov    ecx,DWORD PTR [ebp-0x30]
1000a416:	push   ecx
1000a417:	mov    edx,DWORD PTR [ebp+0x8]
1000a41a:	push   edx
1000a41b:	call   DWORD PTR ds:0x1002f104
1000a421:	cmp    DWORD PTR [ebp-0x24],0x0
1000a425:	je     0x1000a440
1000a427:	lea    eax,[ebp-0x1c]
1000a42a:	push   eax
1000a42b:	mov    ecx,DWORD PTR [ebp-0x24]
1000a42e:	push   ecx
1000a42f:	call   0x1000eb00
1000a434:	call   eax
1000a436:	mov    edx,DWORD PTR [ebp-0x24]
1000a439:	push   edx
1000a43a:	call   DWORD PTR ds:0x1002f064
1000a440:	mov    al,BYTE PTR [ebp-0x11]
1000a443:	mov    BYTE PTR [ebp-0xf9],al
1000a449:	mov    BYTE PTR [ebp-0x4],0x0
1000a44d:	lea    eax,[ebp-0x38]
1000a450:	call   0x1000bd10
1000a455:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000a45c:	mov    ecx,DWORD PTR [ebp-0x28]
1000a45f:	mov    DWORD PTR [ebp-0x1fc],ecx
1000a465:	mov    edx,DWORD PTR [ebp-0x1fc]
1000a46b:	mov    DWORD PTR [ebp-0x1f8],edx
1000a471:	cmp    DWORD PTR [ebp-0x1f8],0x0
1000a478:	je     0x1000a497
1000a47a:	push   0x1
1000a47c:	mov    eax,DWORD PTR [ebp-0x1f8]
1000a482:	mov    edx,DWORD PTR [eax]
1000a484:	mov    ecx,DWORD PTR [ebp-0x1f8]
1000a48a:	mov    eax,DWORD PTR [edx+0x4]
1000a48d:	call   eax
1000a48f:	mov    DWORD PTR [ebp-0x25c],eax
1000a495:	jmp    0x1000a4a1
1000a497:	mov    DWORD PTR [ebp-0x25c],0x0
1000a4a1:	mov    al,BYTE PTR [ebp-0xf9]
1000a4a7:	mov    ecx,DWORD PTR [ebp-0xc]
1000a4aa:	mov    DWORD PTR fs:0x0,ecx
1000a4b1:	pop    ecx
1000a4b2:	pop    edi
1000a4b3:	pop    esi
1000a4b4:	pop    ebx
1000a4b5:	mov    ecx,DWORD PTR [ebp-0x3c]
1000a4b8:	xor    ecx,ebp
1000a4ba:	call   0x10018773
1000a4bf:	mov    esp,ebp
1000a4c1:	pop    ebp
1000a4c2:	ret    
1000a4c3:	int3   
1000a4c4:	int3   
1000a4c5:	int3   
1000a4c6:	int3   
1000a4c7:	int3   
1000a4c8:	int3   
1000a4c9:	int3   
1000a4ca:	int3   
1000a4cb:	int3   
1000a4cc:	int3   
1000a4cd:	int3   
1000a4ce:	int3   
1000a4cf:	int3   
1000a4d0:	push   ebp
1000a4d1:	mov    ebp,esp
1000a4d3:	sub    esp,0x14
1000a4d6:	mov    DWORD PTR [ebp-0x10],ecx
1000a4d9:	mov    eax,DWORD PTR [ebp-0x10]
1000a4dc:	mov    ecx,DWORD PTR [eax]
1000a4de:	mov    DWORD PTR [ebp-0x8],ecx
1000a4e1:	mov    edx,DWORD PTR [ebp-0x8]
1000a4e4:	mov    DWORD PTR [ebp-0x4],edx
1000a4e7:	cmp    DWORD PTR [ebp-0x4],0x0
1000a4eb:	je     0x1000a513
1000a4ed:	mov    eax,DWORD PTR [ebp-0x4]
1000a4f0:	call   0x1000bd10
1000a4f5:	mov    eax,0x1
1000a4fa:	and    eax,0x1
1000a4fd:	je     0x1000a50b
1000a4ff:	mov    ecx,DWORD PTR [ebp-0x4]
1000a502:	push   ecx
1000a503:	call   0x1001876e
1000a508:	add    esp,0x4
1000a50b:	mov    edx,DWORD PTR [ebp-0x4]
1000a50e:	mov    DWORD PTR [ebp-0x14],edx
1000a511:	jmp    0x1000a51a
1000a513:	mov    DWORD PTR [ebp-0x14],0x0
1000a51a:	mov    esp,ebp
1000a51c:	pop    ebp
1000a51d:	ret    
1000a51e:	int3   
1000a51f:	int3   
1000a520:	push   ebp
1000a521:	mov    ebp,esp
1000a523:	sub    esp,0x14
1000a526:	mov    DWORD PTR [ebp-0x10],ecx
1000a529:	mov    eax,DWORD PTR [ebp-0x10]
1000a52c:	mov    ecx,DWORD PTR [ebp+0x8]
1000a52f:	cmp    ecx,DWORD PTR [eax]
1000a531:	je     0x1000a574
1000a533:	mov    edx,DWORD PTR [ebp-0x10]
1000a536:	mov    eax,DWORD PTR [edx]
1000a538:	mov    DWORD PTR [ebp-0x8],eax
1000a53b:	mov    ecx,DWORD PTR [ebp-0x8]
1000a53e:	mov    DWORD PTR [ebp-0x4],ecx
1000a541:	cmp    DWORD PTR [ebp-0x4],0x0
1000a545:	je     0x1000a56d
1000a547:	mov    eax,DWORD PTR [ebp-0x4]
1000a54a:	call   0x1000bd10
1000a54f:	mov    edx,0x1
1000a554:	and    edx,0x1
1000a557:	je     0x1000a565
1000a559:	mov    eax,DWORD PTR [ebp-0x4]
1000a55c:	push   eax
1000a55d:	call   0x1001876e
1000a562:	add    esp,0x4
1000a565:	mov    ecx,DWORD PTR [ebp-0x4]
1000a568:	mov    DWORD PTR [ebp-0x14],ecx
1000a56b:	jmp    0x1000a574
1000a56d:	mov    DWORD PTR [ebp-0x14],0x0
1000a574:	mov    edx,DWORD PTR [ebp-0x10]
1000a577:	mov    eax,DWORD PTR [ebp+0x8]
1000a57a:	mov    DWORD PTR [edx],eax
1000a57c:	mov    esp,ebp
1000a57e:	pop    ebp
1000a57f:	ret    0x4
1000a582:	int3   
1000a583:	int3   
1000a584:	int3   
1000a585:	int3   
1000a586:	int3   
1000a587:	int3   
1000a588:	int3   
1000a589:	int3   
1000a58a:	int3   
1000a58b:	int3   
1000a58c:	int3   
1000a58d:	int3   
1000a58e:	int3   
1000a58f:	int3   
1000a590:	push   ebp
1000a591:	mov    ebp,esp
1000a593:	sub    esp,0x18
1000a596:	mov    DWORD PTR [ebp-0x18],ecx
1000a599:	lea    eax,[ebp-0x12]
1000a59c:	mov    DWORD PTR [ebp-0x8],eax
1000a59f:	lea    ecx,[ebp-0x11]
1000a5a2:	mov    DWORD PTR [ebp-0x10],ecx
1000a5a5:	mov    edx,DWORD PTR [ebp-0x18]
1000a5a8:	mov    DWORD PTR [edx+0x4],0x0
1000a5af:	mov    eax,DWORD PTR [ebp-0x18]
1000a5b2:	mov    DWORD PTR [eax+0x8],0x0
1000a5b9:	mov    ecx,DWORD PTR [ebp-0x18]
1000a5bc:	mov    DWORD PTR [ecx+0xc],0x0
1000a5c3:	mov    edx,DWORD PTR [ebp-0x18]
1000a5c6:	mov    DWORD PTR [edx+0x10],0x0
1000a5cd:	mov    eax,DWORD PTR [ebp-0x18]
1000a5d0:	mov    esp,ebp
1000a5d2:	pop    ebp
1000a5d3:	ret    
1000a5d4:	int3   
1000a5d5:	int3   
1000a5d6:	int3   
1000a5d7:	int3   
1000a5d8:	int3   
1000a5d9:	int3   
1000a5da:	int3   
1000a5db:	int3   
1000a5dc:	int3   
1000a5dd:	int3   
1000a5de:	int3   
1000a5df:	int3   
1000a5e0:	push   ebp
1000a5e1:	mov    ebp,esp
1000a5e3:	sub    esp,0x8
1000a5e6:	mov    DWORD PTR [ebp-0x8],ecx
1000a5e9:	mov    eax,DWORD PTR [ebp-0x8]
1000a5ec:	mov    ecx,DWORD PTR [eax+0x10]
1000a5ef:	mov    DWORD PTR [ebp-0x4],ecx
1000a5f2:	mov    eax,DWORD PTR [ebp-0x4]
1000a5f5:	mov    esp,ebp
1000a5f7:	pop    ebp
1000a5f8:	ret    
1000a5f9:	int3   
1000a5fa:	int3   
1000a5fb:	int3   
1000a5fc:	int3   
1000a5fd:	int3   
1000a5fe:	int3   
1000a5ff:	int3   
1000a600:	push   ebp
1000a601:	mov    ebp,esp
1000a603:	sub    esp,0x20
1000a606:	mov    DWORD PTR [ebp-0x20],ecx
1000a609:	lea    eax,[ebp-0xc]
1000a60c:	push   eax
1000a60d:	mov    ecx,DWORD PTR [ebp-0x20]
1000a610:	call   0x1000aa10
1000a615:	mov    DWORD PTR [ebp-0x1c],eax
1000a618:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a61b:	call   0x1000af50
1000a620:	mov    esp,ebp
1000a622:	pop    ebp
1000a623:	ret    
1000a624:	int3   
1000a625:	int3   
1000a626:	int3   
1000a627:	int3   
1000a628:	int3   
1000a629:	int3   
1000a62a:	int3   
1000a62b:	int3   
1000a62c:	int3   
1000a62d:	int3   
1000a62e:	int3   
1000a62f:	int3   
1000a630:	push   ebp
1000a631:	mov    ebp,esp
1000a633:	sub    esp,0xc8
1000a639:	mov    DWORD PTR [ebp-0xc8],ecx
1000a63f:	mov    eax,DWORD PTR [ebp+0x8]
1000a642:	push   eax
1000a643:	mov    ecx,DWORD PTR [ebp-0xc8]
1000a649:	call   0x1000a800
1000a64e:	mov    esp,ebp
1000a650:	pop    ebp
1000a651:	ret    0x4
1000a654:	int3   
1000a655:	int3   
1000a656:	int3   
1000a657:	int3   
1000a658:	int3   
1000a659:	int3   
1000a65a:	int3   
1000a65b:	int3   
1000a65c:	int3   
1000a65d:	int3   
1000a65e:	int3   
1000a65f:	int3   
1000a660:	push   ebp
1000a661:	mov    ebp,esp
1000a663:	sub    esp,0x8
1000a666:	mov    DWORD PTR [ebp-0x8],ecx
1000a669:	mov    ecx,DWORD PTR [ebp-0x8]
1000a66c:	call   0x1000a780
1000a671:	mov    esp,ebp
1000a673:	pop    ebp
1000a674:	ret    
1000a675:	int3   
1000a676:	int3   
1000a677:	int3   
1000a678:	int3   
1000a679:	int3   
1000a67a:	int3   
1000a67b:	int3   
1000a67c:	int3   
1000a67d:	int3   
1000a67e:	int3   
1000a67f:	int3   
1000a680:	push   ebp
1000a681:	mov    ebp,esp
1000a683:	sub    esp,0x1c
1000a686:	mov    DWORD PTR [ebp-0x1c],ecx
1000a689:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a68c:	call   0x1000a960
1000a691:	mov    esp,ebp
1000a693:	pop    ebp
1000a694:	ret    
1000a695:	int3   
1000a696:	int3   
1000a697:	int3   
1000a698:	int3   
1000a699:	int3   
1000a69a:	int3   
1000a69b:	int3   
1000a69c:	int3   
1000a69d:	int3   
1000a69e:	int3   
1000a69f:	int3   
1000a6a0:	push   ebp
1000a6a1:	mov    ebp,esp
1000a6a3:	sub    esp,0x10
1000a6a6:	mov    DWORD PTR [ebp-0xc],ecx
1000a6a9:	mov    eax,DWORD PTR [ebp-0xc]
1000a6ac:	mov    ecx,DWORD PTR [eax]
1000a6ae:	mov    DWORD PTR [ebp-0x8],ecx
1000a6b1:	mov    edx,DWORD PTR [ebp-0x8]
1000a6b4:	mov    DWORD PTR [ebp-0x4],edx
1000a6b7:	cmp    DWORD PTR [ebp-0x4],0x0
1000a6bb:	je     0x1000a6d1
1000a6bd:	push   0x1
1000a6bf:	mov    eax,DWORD PTR [ebp-0x4]
1000a6c2:	mov    edx,DWORD PTR [eax]
1000a6c4:	mov    ecx,DWORD PTR [ebp-0x4]
1000a6c7:	mov    eax,DWORD PTR [edx+0x4]
1000a6ca:	call   eax
1000a6cc:	mov    DWORD PTR [ebp-0x10],eax
1000a6cf:	jmp    0x1000a6d8
1000a6d1:	mov    DWORD PTR [ebp-0x10],0x0
1000a6d8:	mov    esp,ebp
1000a6da:	pop    ebp
1000a6db:	ret    
1000a6dc:	int3   
1000a6dd:	int3   
1000a6de:	int3   
1000a6df:	int3   
1000a6e0:	push   ebp
1000a6e1:	mov    ebp,esp
1000a6e3:	sub    esp,0x8
1000a6e6:	mov    DWORD PTR [ebp-0x8],ecx
1000a6e9:	mov    eax,DWORD PTR [ebp-0x8]
1000a6ec:	mov    ecx,DWORD PTR [eax]
1000a6ee:	mov    DWORD PTR [ebp-0x4],ecx
1000a6f1:	mov    eax,DWORD PTR [ebp-0x4]
1000a6f4:	mov    esp,ebp
1000a6f6:	pop    ebp
1000a6f7:	ret    
1000a6f8:	int3   
1000a6f9:	int3   
1000a6fa:	int3   
1000a6fb:	int3   
1000a6fc:	int3   
1000a6fd:	int3   
1000a6fe:	int3   
1000a6ff:	int3   
1000a700:	push   ebp
1000a701:	mov    ebp,esp
1000a703:	sub    esp,0x10
1000a706:	mov    DWORD PTR [ebp-0xc],ecx
1000a709:	mov    eax,DWORD PTR [ebp-0xc]
1000a70c:	mov    ecx,DWORD PTR [ebp+0x8]
1000a70f:	cmp    ecx,DWORD PTR [eax]
1000a711:	je     0x1000a742
1000a713:	mov    edx,DWORD PTR [ebp-0xc]
1000a716:	mov    eax,DWORD PTR [edx]
1000a718:	mov    DWORD PTR [ebp-0x8],eax
1000a71b:	mov    ecx,DWORD PTR [ebp-0x8]
1000a71e:	mov    DWORD PTR [ebp-0x4],ecx
1000a721:	cmp    DWORD PTR [ebp-0x4],0x0
1000a725:	je     0x1000a73b
1000a727:	push   0x1
1000a729:	mov    edx,DWORD PTR [ebp-0x4]
1000a72c:	mov    eax,DWORD PTR [edx]
1000a72e:	mov    ecx,DWORD PTR [ebp-0x4]
1000a731:	mov    edx,DWORD PTR [eax+0x4]
1000a734:	call   edx
1000a736:	mov    DWORD PTR [ebp-0x10],eax
1000a739:	jmp    0x1000a742
1000a73b:	mov    DWORD PTR [ebp-0x10],0x0
1000a742:	mov    eax,DWORD PTR [ebp-0xc]
1000a745:	mov    ecx,DWORD PTR [ebp+0x8]
1000a748:	mov    DWORD PTR [eax],ecx
1000a74a:	mov    esp,ebp
1000a74c:	pop    ebp
1000a74d:	ret    0x4
1000a750:	push   ebp
1000a751:	mov    ebp,esp
1000a753:	sub    esp,0x8
1000a756:	mov    DWORD PTR [ebp-0x8],ecx
1000a759:	mov    eax,DWORD PTR [ebp-0x8]
1000a75c:	mov    ecx,DWORD PTR [eax]
1000a75e:	mov    DWORD PTR [ebp-0x4],ecx
1000a761:	mov    edx,DWORD PTR [ebp-0x4]
1000a764:	push   edx
1000a765:	call   0x1001876e
1000a76a:	add    esp,0x4
1000a76d:	mov    esp,ebp
1000a76f:	pop    ebp
1000a770:	ret    
1000a771:	int3   
1000a772:	int3   
1000a773:	int3   
1000a774:	int3   
1000a775:	int3   
1000a776:	int3   
1000a777:	int3   
1000a778:	int3   
1000a779:	int3   
1000a77a:	int3   
1000a77b:	int3   
1000a77c:	int3   
1000a77d:	int3   
1000a77e:	int3   
1000a77f:	int3   
1000a780:	push   ebp
1000a781:	mov    ebp,esp
1000a783:	sub    esp,0x8
1000a786:	mov    DWORD PTR [ebp-0x8],ecx
1000a789:	mov    eax,DWORD PTR [ebp-0x8]
1000a78c:	xor    ecx,ecx
1000a78e:	cmp    DWORD PTR [eax+0x10],0x0
1000a792:	sete   cl
1000a795:	movzx  edx,cl
1000a798:	test   edx,edx
1000a79a:	jne    0x1000a7f4
1000a79c:	mov    eax,DWORD PTR [ebp-0x8]
1000a79f:	mov    ecx,DWORD PTR [eax+0xc]
1000a7a2:	shr    ecx,0x2
1000a7a5:	mov    DWORD PTR [ebp-0x4],ecx
1000a7a8:	mov    edx,DWORD PTR [ebp-0x8]
1000a7ab:	mov    eax,DWORD PTR [edx+0xc]
1000a7ae:	add    eax,0x1
1000a7b1:	mov    ecx,DWORD PTR [ebp-0x8]
1000a7b4:	mov    DWORD PTR [ecx+0xc],eax
1000a7b7:	mov    edx,DWORD PTR [ebp-0x8]
1000a7ba:	mov    eax,DWORD PTR [edx+0x8]
1000a7bd:	shl    eax,0x2
1000a7c0:	mov    ecx,DWORD PTR [ebp-0x8]
1000a7c3:	cmp    eax,DWORD PTR [ecx+0xc]
1000a7c6:	ja     0x1000a7d2
1000a7c8:	mov    edx,DWORD PTR [ebp-0x8]
1000a7cb:	mov    DWORD PTR [edx+0xc],0x0
1000a7d2:	mov    eax,DWORD PTR [ebp-0x8]
1000a7d5:	mov    ecx,DWORD PTR [eax+0x10]
1000a7d8:	sub    ecx,0x1
1000a7db:	mov    edx,DWORD PTR [ebp-0x8]
1000a7de:	mov    DWORD PTR [edx+0x10],ecx
1000a7e1:	mov    eax,DWORD PTR [ebp-0x8]
1000a7e4:	cmp    DWORD PTR [eax+0x10],0x0
1000a7e8:	jne    0x1000a7f4
1000a7ea:	mov    ecx,DWORD PTR [ebp-0x8]
1000a7ed:	mov    DWORD PTR [ecx+0xc],0x0
1000a7f4:	mov    esp,ebp
1000a7f6:	pop    ebp
1000a7f7:	ret    
1000a7f8:	int3   
1000a7f9:	int3   
1000a7fa:	int3   
1000a7fb:	int3   
1000a7fc:	int3   
1000a7fd:	int3   
1000a7fe:	int3   
1000a7ff:	int3   
1000a800:	push   ebp
1000a801:	mov    ebp,esp
1000a803:	sub    esp,0xe8
1000a809:	push   esi
1000a80a:	mov    DWORD PTR [ebp-0xe4],ecx
1000a810:	mov    eax,DWORD PTR [ebp-0xe4]
1000a816:	mov    eax,DWORD PTR [eax+0xc]
1000a819:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a81f:	add    eax,DWORD PTR [ecx+0x10]
1000a822:	xor    edx,edx
1000a824:	mov    ecx,0x4
1000a829:	div    ecx
1000a82b:	test   edx,edx
1000a82d:	jne    0x1000a856
1000a82f:	mov    edx,DWORD PTR [ebp-0xe4]
1000a835:	mov    eax,DWORD PTR [edx+0x10]
1000a838:	add    eax,0x4
1000a83b:	shr    eax,0x2
1000a83e:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a844:	cmp    DWORD PTR [ecx+0x8],eax
1000a847:	ja     0x1000a856
1000a849:	push   0x1
1000a84b:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a851:	call   0x1000ab00
1000a856:	mov    edx,DWORD PTR [ebp-0xe4]
1000a85c:	mov    eax,DWORD PTR [edx+0xc]
1000a85f:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a865:	add    eax,DWORD PTR [ecx+0x10]
1000a868:	mov    DWORD PTR [ebp-0x4],eax
1000a86b:	mov    edx,DWORD PTR [ebp-0x4]
1000a86e:	shr    edx,0x2
1000a871:	mov    DWORD PTR [ebp-0x8],edx
1000a874:	mov    eax,DWORD PTR [ebp-0xe4]
1000a87a:	mov    ecx,DWORD PTR [eax+0x8]
1000a87d:	cmp    ecx,DWORD PTR [ebp-0x8]
1000a880:	ja     0x1000a891
1000a882:	mov    edx,DWORD PTR [ebp-0xe4]
1000a888:	mov    eax,DWORD PTR [ebp-0x8]
1000a88b:	sub    eax,DWORD PTR [edx+0x8]
1000a88e:	mov    DWORD PTR [ebp-0x8],eax
1000a891:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a897:	mov    edx,DWORD PTR [ecx+0x4]
1000a89a:	mov    eax,DWORD PTR [ebp-0x8]
1000a89d:	cmp    DWORD PTR [edx+eax*4],0x0
1000a8a1:	jne    0x1000a8c2
1000a8a3:	push   0x4
1000a8a5:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a8ab:	add    ecx,0x1
1000a8ae:	call   0x1000aeb0
1000a8b3:	mov    ecx,DWORD PTR [ebp-0xe4]
1000a8b9:	mov    edx,DWORD PTR [ecx+0x4]
1000a8bc:	mov    ecx,DWORD PTR [ebp-0x8]
1000a8bf:	mov    DWORD PTR [edx+ecx*4],eax
1000a8c2:	mov    edx,DWORD PTR [ebp-0xe4]
1000a8c8:	mov    ecx,DWORD PTR [edx+0x4]
1000a8cb:	mov    eax,DWORD PTR [ebp-0x4]
1000a8ce:	xor    edx,edx
1000a8d0:	mov    esi,0x4
1000a8d5:	div    esi
1000a8d7:	mov    eax,DWORD PTR [ebp-0x8]
1000a8da:	mov    ecx,DWORD PTR [ecx+eax*4]
1000a8dd:	lea    edx,[ecx+edx*4]
1000a8e0:	mov    DWORD PTR [ebp-0xe0],edx
1000a8e6:	mov    eax,DWORD PTR [ebp-0xe0]
1000a8ec:	mov    DWORD PTR [ebp-0xd8],eax
1000a8f2:	mov    ecx,DWORD PTR [ebp-0xd8]
1000a8f8:	push   ecx
1000a8f9:	push   0x4
1000a8fb:	call   0x100012f0
1000a900:	add    esp,0x8
1000a903:	mov    DWORD PTR [ebp-0xdc],eax
1000a909:	cmp    DWORD PTR [ebp-0xdc],0x0
1000a910:	je     0x1000a92d
1000a912:	mov    edx,DWORD PTR [ebp-0xdc]
1000a918:	mov    eax,DWORD PTR [ebp+0x8]
1000a91b:	mov    ecx,DWORD PTR [eax]
1000a91d:	mov    DWORD PTR [edx],ecx
1000a91f:	mov    edx,DWORD PTR [ebp-0xdc]
1000a925:	mov    DWORD PTR [ebp-0xe8],edx
1000a92b:	jmp    0x1000a937
1000a92d:	mov    DWORD PTR [ebp-0xe8],0x0
1000a937:	mov    eax,DWORD PTR [ebp-0xe4]
1000a93d:	mov    ecx,DWORD PTR [eax+0x10]
1000a940:	add    ecx,0x1
1000a943:	mov    edx,DWORD PTR [ebp-0xe4]
1000a949:	mov    DWORD PTR [edx+0x10],ecx
1000a94c:	pop    esi
1000a94d:	mov    esp,ebp
1000a94f:	pop    ebp
1000a950:	ret    0x4
1000a953:	int3   
1000a954:	int3   
1000a955:	int3   
1000a956:	int3   
1000a957:	int3   
1000a958:	int3   
1000a959:	int3   
1000a95a:	int3   
1000a95b:	int3   
1000a95c:	int3   
1000a95d:	int3   
1000a95e:	int3   
1000a95f:	int3   
1000a960:	push   ebp
1000a961:	mov    ebp,esp
1000a963:	sub    esp,0x1c
1000a966:	mov    DWORD PTR [ebp-0x1c],ecx
1000a969:	mov    eax,DWORD PTR [ebp-0x1c]
1000a96c:	xor    ecx,ecx
1000a96e:	cmp    DWORD PTR [eax+0x10],0x0
1000a972:	sete   cl
1000a975:	movzx  edx,cl
1000a978:	test   edx,edx
1000a97a:	jne    0x1000a986
1000a97c:	mov    ecx,DWORD PTR [ebp-0x1c]
1000a97f:	call   0x1000aa80
1000a984:	jmp    0x1000a969
1000a986:	mov    eax,DWORD PTR [ebp-0x1c]
1000a989:	mov    ecx,DWORD PTR [eax+0x8]
1000a98c:	mov    DWORD PTR [ebp-0x4],ecx
1000a98f:	cmp    DWORD PTR [ebp-0x4],0x0
1000a993:	jbe    0x1000a9ca
1000a995:	mov    edx,DWORD PTR [ebp-0x4]
1000a998:	sub    edx,0x1
1000a99b:	mov    DWORD PTR [ebp-0x4],edx
1000a99e:	mov    eax,DWORD PTR [ebp-0x1c]
1000a9a1:	mov    ecx,DWORD PTR [eax+0x4]
1000a9a4:	mov    edx,DWORD PTR [ebp-0x4]
1000a9a7:	cmp    DWORD PTR [ecx+edx*4],0x0
1000a9ab:	je     0x1000a9c8
1000a9ad:	mov    eax,DWORD PTR [ebp-0x1c]
1000a9b0:	mov    ecx,DWORD PTR [eax+0x4]
1000a9b3:	mov    edx,DWORD PTR [ebp-0x4]
1000a9b6:	mov    eax,DWORD PTR [ecx+edx*4]
1000a9b9:	mov    DWORD PTR [ebp-0x10],eax
1000a9bc:	mov    ecx,DWORD PTR [ebp-0x10]
1000a9bf:	push   ecx
1000a9c0:	call   0x1001876e
1000a9c5:	add    esp,0x4
1000a9c8:	jmp    0x1000a98f
1000a9ca:	mov    edx,DWORD PTR [ebp-0x1c]
1000a9cd:	cmp    DWORD PTR [edx+0x4],0x0
1000a9d1:	je     0x1000a9f1
1000a9d3:	mov    eax,DWORD PTR [ebp-0x1c]
1000a9d6:	mov    ecx,DWORD PTR [eax+0x8]
1000a9d9:	mov    DWORD PTR [ebp-0x18],ecx
1000a9dc:	mov    edx,DWORD PTR [ebp-0x1c]
1000a9df:	mov    eax,DWORD PTR [edx+0x4]
1000a9e2:	mov    DWORD PTR [ebp-0x14],eax
1000a9e5:	mov    ecx,DWORD PTR [ebp-0x14]
1000a9e8:	push   ecx
1000a9e9:	call   0x1001876e
1000a9ee:	add    esp,0x4
1000a9f1:	mov    edx,DWORD PTR [ebp-0x1c]
1000a9f4:	mov    DWORD PTR [edx+0x8],0x0
1000a9fb:	mov    eax,DWORD PTR [ebp-0x1c]
1000a9fe:	mov    DWORD PTR [eax+0x4],0x0
1000aa05:	mov    esp,ebp
1000aa07:	pop    ebp
1000aa08:	ret    
1000aa09:	int3   
1000aa0a:	int3   
1000aa0b:	int3   
1000aa0c:	int3   
1000aa0d:	int3   
1000aa0e:	int3   
1000aa0f:	int3   
1000aa10:	push   ebp
1000aa11:	mov    ebp,esp
1000aa13:	sub    esp,0x8
1000aa16:	mov    DWORD PTR [ebp-0x8],ecx
1000aa19:	mov    eax,DWORD PTR [ebp-0x8]
1000aa1c:	mov    ecx,DWORD PTR [eax+0xc]
1000aa1f:	mov    DWORD PTR [ebp-0x4],ecx
1000aa22:	mov    ecx,DWORD PTR [ebp+0x8]
1000aa25:	call   0x10001270
1000aa2a:	mov    edx,0x1
1000aa2f:	test   edx,edx
1000aa31:	je     0x1000aa5a
1000aa33:	cmp    DWORD PTR [ebp-0x8],0x0
1000aa37:	je     0x1000aa55
1000aa39:	mov    eax,DWORD PTR [ebp-0x8]
1000aa3c:	mov    ecx,DWORD PTR [eax+0xc]
1000aa3f:	cmp    ecx,DWORD PTR [ebp-0x4]
1000aa42:	ja     0x1000aa55
1000aa44:	mov    edx,DWORD PTR [ebp-0x8]
1000aa47:	mov    eax,DWORD PTR [edx+0xc]
1000aa4a:	mov    ecx,DWORD PTR [ebp-0x8]
1000aa4d:	add    eax,DWORD PTR [ecx+0x10]
1000aa50:	cmp    DWORD PTR [ebp-0x4],eax
1000aa53:	jbe    0x1000aa5a
1000aa55:	call   0x10018de3
1000aa5a:	mov    edx,DWORD PTR [ebp+0x8]
1000aa5d:	mov    eax,DWORD PTR [ebp-0x8]
1000aa60:	mov    DWORD PTR [edx+0x4],eax
1000aa63:	mov    ecx,DWORD PTR [ebp+0x8]
1000aa66:	mov    edx,DWORD PTR [ebp-0x4]
1000aa69:	mov    DWORD PTR [ecx+0x8],edx
1000aa6c:	mov    eax,DWORD PTR [ebp+0x8]
1000aa6f:	mov    esp,ebp
1000aa71:	pop    ebp
1000aa72:	ret    0x4
1000aa75:	int3   
1000aa76:	int3   
1000aa77:	int3   
1000aa78:	int3   
1000aa79:	int3   
1000aa7a:	int3   
1000aa7b:	int3   
1000aa7c:	int3   
1000aa7d:	int3   
1000aa7e:	int3   
1000aa7f:	int3   
1000aa80:	push   ebp
1000aa81:	mov    ebp,esp
1000aa83:	sub    esp,0xc
1000aa86:	mov    DWORD PTR [ebp-0xc],ecx
1000aa89:	mov    eax,DWORD PTR [ebp-0xc]
1000aa8c:	xor    ecx,ecx
1000aa8e:	cmp    DWORD PTR [eax+0x10],0x0
1000aa92:	sete   cl
1000aa95:	movzx  edx,cl
1000aa98:	test   edx,edx
1000aa9a:	jne    0x1000aaf1
1000aa9c:	mov    eax,DWORD PTR [ebp-0xc]
1000aa9f:	mov    ecx,DWORD PTR [eax+0x10]
1000aaa2:	mov    edx,DWORD PTR [ebp-0xc]
1000aaa5:	mov    eax,DWORD PTR [edx+0xc]
1000aaa8:	lea    ecx,[ecx+eax*1-0x1]
1000aaac:	mov    DWORD PTR [ebp-0x4],ecx
1000aaaf:	mov    edx,DWORD PTR [ebp-0x4]
1000aab2:	shr    edx,0x2
1000aab5:	mov    DWORD PTR [ebp-0x8],edx
1000aab8:	mov    eax,DWORD PTR [ebp-0xc]
1000aabb:	mov    ecx,DWORD PTR [eax+0x8]
1000aabe:	cmp    ecx,DWORD PTR [ebp-0x8]
1000aac1:	ja     0x1000aacf
1000aac3:	mov    edx,DWORD PTR [ebp-0xc]
1000aac6:	mov    eax,DWORD PTR [ebp-0x8]
1000aac9:	sub    eax,DWORD PTR [edx+0x8]
1000aacc:	mov    DWORD PTR [ebp-0x8],eax
1000aacf:	mov    ecx,DWORD PTR [ebp-0xc]
1000aad2:	mov    edx,DWORD PTR [ecx+0x10]
1000aad5:	sub    edx,0x1
1000aad8:	mov    eax,DWORD PTR [ebp-0xc]
1000aadb:	mov    DWORD PTR [eax+0x10],edx
1000aade:	mov    ecx,DWORD PTR [ebp-0xc]
1000aae1:	cmp    DWORD PTR [ecx+0x10],0x0
1000aae5:	jne    0x1000aaf1
1000aae7:	mov    edx,DWORD PTR [ebp-0xc]
1000aaea:	mov    DWORD PTR [edx+0xc],0x0
1000aaf1:	mov    esp,ebp
1000aaf3:	pop    ebp
1000aaf4:	ret    
1000aaf5:	int3   
1000aaf6:	int3   
1000aaf7:	int3   
1000aaf8:	int3   
1000aaf9:	int3   
1000aafa:	int3   
1000aafb:	int3   
1000aafc:	int3   
1000aafd:	int3   
1000aafe:	int3   
1000aaff:	int3   
1000ab00:	push   ebp
1000ab01:	mov    ebp,esp
1000ab03:	sub    esp,0x168
1000ab09:	mov    DWORD PTR [ebp-0x160],ecx
1000ab0f:	mov    DWORD PTR [ebp-0x20],0x3fffffff
1000ab16:	cmp    DWORD PTR [ebp-0x20],0x0
1000ab1a:	jbe    0x1000ab27
1000ab1c:	mov    eax,DWORD PTR [ebp-0x20]
1000ab1f:	mov    DWORD PTR [ebp-0x164],eax
1000ab25:	jmp    0x1000ab31
1000ab27:	mov    DWORD PTR [ebp-0x164],0x1
1000ab31:	mov    ecx,DWORD PTR [ebp-0x164]
1000ab37:	shr    ecx,0x2
1000ab3a:	mov    edx,DWORD PTR [ebp-0x160]
1000ab40:	sub    ecx,DWORD PTR [edx+0x8]
1000ab43:	cmp    ecx,DWORD PTR [ebp+0x8]
1000ab46:	jae    0x1000ab4d
1000ab48:	call   0x1000aed0
1000ab4d:	mov    eax,DWORD PTR [ebp-0x160]
1000ab53:	mov    ecx,DWORD PTR [eax+0x8]
1000ab56:	shr    ecx,1
1000ab58:	mov    DWORD PTR [ebp-0x8],ecx
1000ab5b:	cmp    DWORD PTR [ebp-0x8],0x8
1000ab5f:	jae    0x1000ab68
1000ab61:	mov    DWORD PTR [ebp-0x8],0x8
1000ab68:	mov    edx,DWORD PTR [ebp+0x8]
1000ab6b:	cmp    edx,DWORD PTR [ebp-0x8]
1000ab6e:	jae    0x1000abaf
1000ab70:	mov    DWORD PTR [ebp-0x6c],0x3fffffff
1000ab77:	cmp    DWORD PTR [ebp-0x6c],0x0
1000ab7b:	jbe    0x1000ab88
1000ab7d:	mov    eax,DWORD PTR [ebp-0x6c]
1000ab80:	mov    DWORD PTR [ebp-0x168],eax
1000ab86:	jmp    0x1000ab92
1000ab88:	mov    DWORD PTR [ebp-0x168],0x1
1000ab92:	mov    ecx,DWORD PTR [ebp-0x168]
1000ab98:	shr    ecx,0x2
1000ab9b:	sub    ecx,DWORD PTR [ebp-0x8]
1000ab9e:	mov    edx,DWORD PTR [ebp-0x160]
1000aba4:	cmp    DWORD PTR [edx+0x8],ecx
1000aba7:	ja     0x1000abaf
1000aba9:	mov    eax,DWORD PTR [ebp-0x8]
1000abac:	mov    DWORD PTR [ebp+0x8],eax
1000abaf:	mov    ecx,DWORD PTR [ebp-0x160]
1000abb5:	mov    edx,DWORD PTR [ecx+0xc]
1000abb8:	shr    edx,0x2
1000abbb:	mov    DWORD PTR [ebp-0x4],edx
1000abbe:	mov    eax,DWORD PTR [ebp-0x160]
1000abc4:	mov    ecx,DWORD PTR [eax+0x8]
1000abc7:	add    ecx,DWORD PTR [ebp+0x8]
1000abca:	mov    DWORD PTR [ebp-0x7c],ecx
1000abcd:	push   0x0
1000abcf:	mov    edx,DWORD PTR [ebp-0x7c]
1000abd2:	push   edx
1000abd3:	call   0x1000b050
1000abd8:	add    esp,0x8
1000abdb:	mov    DWORD PTR [ebp-0x10],eax
1000abde:	mov    eax,DWORD PTR [ebp-0x4]
1000abe1:	mov    ecx,DWORD PTR [ebp-0x10]
1000abe4:	lea    edx,[ecx+eax*4]
1000abe7:	mov    DWORD PTR [ebp-0xc],edx
1000abea:	mov    eax,DWORD PTR [ebp-0x160]
1000abf0:	push   eax
1000abf1:	mov    ecx,DWORD PTR [ebp-0xc]
1000abf4:	push   ecx
1000abf5:	mov    edx,DWORD PTR [ebp-0x160]
1000abfb:	mov    eax,DWORD PTR [edx+0x8]
1000abfe:	mov    ecx,DWORD PTR [ebp-0x160]
1000ac04:	mov    edx,DWORD PTR [ecx+0x4]
1000ac07:	lea    eax,[edx+eax*4]
1000ac0a:	push   eax
1000ac0b:	mov    ecx,DWORD PTR [ebp-0x160]
1000ac11:	mov    edx,DWORD PTR [ecx+0x4]
1000ac14:	mov    eax,DWORD PTR [ebp-0x4]
1000ac17:	lea    ecx,[edx+eax*4]
1000ac1a:	push   ecx
1000ac1b:	call   0x1000afe0
1000ac20:	add    esp,0x10
1000ac23:	mov    DWORD PTR [ebp-0xc],eax
1000ac26:	mov    edx,DWORD PTR [ebp-0x4]
1000ac29:	cmp    edx,DWORD PTR [ebp+0x8]
1000ac2c:	ja     0x1000ad54
1000ac32:	mov    eax,DWORD PTR [ebp-0x160]
1000ac38:	push   eax
1000ac39:	mov    ecx,DWORD PTR [ebp-0xc]
1000ac3c:	push   ecx
1000ac3d:	mov    edx,DWORD PTR [ebp-0x160]
1000ac43:	mov    eax,DWORD PTR [edx+0x4]
1000ac46:	mov    ecx,DWORD PTR [ebp-0x4]
1000ac49:	lea    edx,[eax+ecx*4]
1000ac4c:	push   edx
1000ac4d:	mov    eax,DWORD PTR [ebp-0x160]
1000ac53:	mov    ecx,DWORD PTR [eax+0x4]
1000ac56:	push   ecx
1000ac57:	call   0x1000afe0
1000ac5c:	add    esp,0x10
1000ac5f:	mov    DWORD PTR [ebp-0xc],eax
1000ac62:	mov    DWORD PTR [ebp-0x14],0x0
1000ac69:	mov    edx,DWORD PTR [ebp-0xc]
1000ac6c:	mov    DWORD PTR [ebp-0xd0],edx
1000ac72:	xor    eax,eax
1000ac74:	mov    BYTE PTR [ebp-0xba],al
1000ac7a:	mov    cl,BYTE PTR [ebp-0xbc]
1000ac80:	mov    BYTE PTR [ebp-0xbb],cl
1000ac86:	mov    dl,BYTE PTR [ebp-0xba]
1000ac8c:	mov    BYTE PTR [ebp-0xc9],dl
1000ac92:	mov    eax,DWORD PTR [ebp-0xd0]
1000ac98:	mov    DWORD PTR [ebp-0xc8],eax
1000ac9e:	mov    ecx,DWORD PTR [ebp-0xc8]
1000aca4:	mov    DWORD PTR [ebp-0xc4],ecx
1000acaa:	xor    edx,edx
1000acac:	mov    BYTE PTR [ebp-0xbd],dl
1000acb2:	mov    al,BYTE PTR [ebp-0xbd]
1000acb8:	push   eax
1000acb9:	mov    cl,BYTE PTR [ebp-0xbe]
1000acbf:	push   ecx
1000acc0:	lea    edx,[ebp-0x14]
1000acc3:	push   edx
1000acc4:	mov    eax,DWORD PTR [ebp+0x8]
1000acc7:	sub    eax,DWORD PTR [ebp-0x4]
1000acca:	push   eax
1000accb:	mov    ecx,DWORD PTR [ebp-0xc4]
1000acd1:	push   ecx
1000acd2:	call   0x1000b110
1000acd7:	add    esp,0x14
1000acda:	mov    DWORD PTR [ebp-0x18],0x0
1000ace1:	mov    edx,DWORD PTR [ebp-0x10]
1000ace4:	mov    DWORD PTR [ebp-0xe8],edx
1000acea:	xor    eax,eax
1000acec:	mov    BYTE PTR [ebp-0xd1],al
1000acf2:	mov    cl,BYTE PTR [ebp-0xd3]
1000acf8:	mov    BYTE PTR [ebp-0xd2],cl
1000acfe:	mov    dl,BYTE PTR [ebp-0xd1]
1000ad04:	mov    BYTE PTR [ebp-0xe1],dl
1000ad0a:	mov    eax,DWORD PTR [ebp-0xe8]
1000ad10:	mov    DWORD PTR [ebp-0xe0],eax
1000ad16:	mov    ecx,DWORD PTR [ebp-0xe0]
1000ad1c:	mov    DWORD PTR [ebp-0xdc],ecx
1000ad22:	xor    edx,edx
1000ad24:	mov    BYTE PTR [ebp-0xd4],dl
1000ad2a:	mov    al,BYTE PTR [ebp-0xd4]
1000ad30:	push   eax
1000ad31:	mov    cl,BYTE PTR [ebp-0xd5]
1000ad37:	push   ecx
1000ad38:	lea    edx,[ebp-0x18]
1000ad3b:	push   edx
1000ad3c:	mov    eax,DWORD PTR [ebp-0x4]
1000ad3f:	push   eax
1000ad40:	mov    ecx,DWORD PTR [ebp-0xdc]
1000ad46:	push   ecx
1000ad47:	call   0x1000b110
1000ad4c:	add    esp,0x14
1000ad4f:	jmp    0x1000ae0a
1000ad54:	mov    edx,DWORD PTR [ebp-0x160]
1000ad5a:	push   edx
1000ad5b:	mov    eax,DWORD PTR [ebp-0xc]
1000ad5e:	push   eax
1000ad5f:	mov    ecx,DWORD PTR [ebp-0x160]
1000ad65:	mov    edx,DWORD PTR [ecx+0x4]
1000ad68:	mov    eax,DWORD PTR [ebp+0x8]
1000ad6b:	lea    ecx,[edx+eax*4]
1000ad6e:	push   ecx
1000ad6f:	mov    edx,DWORD PTR [ebp-0x160]
1000ad75:	mov    eax,DWORD PTR [edx+0x4]
1000ad78:	push   eax
1000ad79:	call   0x1000afe0
1000ad7e:	add    esp,0x10
1000ad81:	mov    ecx,DWORD PTR [ebp-0x160]
1000ad87:	push   ecx
1000ad88:	mov    edx,DWORD PTR [ebp-0x10]
1000ad8b:	push   edx
1000ad8c:	mov    eax,DWORD PTR [ebp-0x160]
1000ad92:	mov    ecx,DWORD PTR [eax+0x4]
1000ad95:	mov    edx,DWORD PTR [ebp-0x4]
1000ad98:	lea    eax,[ecx+edx*4]
1000ad9b:	push   eax
1000ad9c:	mov    ecx,DWORD PTR [ebp-0x160]
1000ada2:	mov    edx,DWORD PTR [ecx+0x4]
1000ada5:	mov    eax,DWORD PTR [ebp+0x8]
1000ada8:	lea    ecx,[edx+eax*4]
1000adab:	push   ecx
1000adac:	call   0x1000afe0
1000adb1:	add    esp,0x10
1000adb4:	mov    DWORD PTR [ebp-0xc],eax
1000adb7:	mov    DWORD PTR [ebp-0x1c],0x0
1000adbe:	mov    edx,DWORD PTR [ebp-0xc]
1000adc1:	mov    DWORD PTR [ebp-0x148],edx
1000adc7:	xor    eax,eax
1000adc9:	mov    BYTE PTR [ebp-0x126],al
1000adcf:	mov    cl,BYTE PTR [ebp-0x128]
1000add5:	mov    BYTE PTR [ebp-0x127],cl
1000addb:	mov    dl,BYTE PTR [ebp-0x126]
1000ade1:	mov    BYTE PTR [ebp-0x141],dl
1000ade7:	mov    eax,DWORD PTR [ebp-0x148]
1000aded:	mov    DWORD PTR [ebp-0x140],eax
1000adf3:	lea    ecx,[ebp-0x1c]
1000adf6:	push   ecx
1000adf7:	mov    edx,DWORD PTR [ebp+0x8]
1000adfa:	push   edx
1000adfb:	mov    eax,DWORD PTR [ebp-0x140]
1000ae01:	push   eax
1000ae02:	call   0x1000b0a0
1000ae07:	add    esp,0xc
1000ae0a:	mov    ecx,DWORD PTR [ebp-0x160]
1000ae10:	mov    edx,DWORD PTR [ecx+0x8]
1000ae13:	mov    eax,DWORD PTR [ebp-0x160]
1000ae19:	mov    ecx,DWORD PTR [eax+0x4]
1000ae1c:	lea    edx,[ecx+edx*4]
1000ae1f:	mov    DWORD PTR [ebp-0x154],edx
1000ae25:	mov    eax,DWORD PTR [ebp-0x160]
1000ae2b:	mov    ecx,DWORD PTR [eax+0x4]
1000ae2e:	mov    edx,DWORD PTR [ebp-0x4]
1000ae31:	lea    eax,[ecx+edx*4]
1000ae34:	mov    DWORD PTR [ebp-0x150],eax
1000ae3a:	mov    cl,BYTE PTR [ebp-0x14a]
1000ae40:	mov    BYTE PTR [ebp-0x149],cl
1000ae46:	mov    edx,DWORD PTR [ebp-0x160]
1000ae4c:	cmp    DWORD PTR [edx+0x4],0x0
1000ae50:	je     0x1000ae7f
1000ae52:	mov    eax,DWORD PTR [ebp-0x160]
1000ae58:	mov    ecx,DWORD PTR [eax+0x8]
1000ae5b:	mov    DWORD PTR [ebp-0x15c],ecx
1000ae61:	mov    edx,DWORD PTR [ebp-0x160]
1000ae67:	mov    eax,DWORD PTR [edx+0x4]
1000ae6a:	mov    DWORD PTR [ebp-0x158],eax
1000ae70:	mov    ecx,DWORD PTR [ebp-0x158]
1000ae76:	push   ecx
1000ae77:	call   0x1001876e
1000ae7c:	add    esp,0x4
1000ae7f:	mov    edx,DWORD PTR [ebp-0x160]
1000ae85:	mov    eax,DWORD PTR [ebp-0x10]
1000ae88:	mov    DWORD PTR [edx+0x4],eax
1000ae8b:	mov    ecx,DWORD PTR [ebp-0x160]
1000ae91:	mov    edx,DWORD PTR [ecx+0x8]
1000ae94:	add    edx,DWORD PTR [ebp+0x8]
1000ae97:	mov    eax,DWORD PTR [ebp-0x160]
1000ae9d:	mov    DWORD PTR [eax+0x8],edx
1000aea0:	mov    esp,ebp
1000aea2:	pop    ebp
1000aea3:	ret    0x4
1000aea6:	int3   
1000aea7:	int3   
1000aea8:	int3   
1000aea9:	int3   
1000aeaa:	int3   
1000aeab:	int3   
1000aeac:	int3   
1000aead:	int3   
1000aeae:	int3   
1000aeaf:	int3   
1000aeb0:	push   ebp
1000aeb1:	mov    ebp,esp
1000aeb3:	sub    esp,0x10
1000aeb6:	mov    DWORD PTR [ebp-0x10],ecx
1000aeb9:	push   0x0
1000aebb:	mov    eax,DWORD PTR [ebp+0x8]
1000aebe:	push   eax
1000aebf:	call   0x1000b050
1000aec4:	add    esp,0x8
1000aec7:	mov    esp,ebp
1000aec9:	pop    ebp
1000aeca:	ret    0x4
1000aecd:	int3   
1000aece:	int3   
1000aecf:	int3   
1000aed0:	push   ebp
1000aed1:	mov    ebp,esp
1000aed3:	push   0xffffffff
1000aed5:	push   0x1002da08
1000aeda:	mov    eax,fs:0x0
1000aee0:	push   eax
1000aee1:	sub    esp,0x6c
1000aee4:	mov    eax,ds:0x100c7654
1000aee9:	xor    eax,ebp
1000aeeb:	push   eax
1000aeec:	lea    eax,[ebp-0xc]
1000aeef:	mov    fs:0x0,eax
1000aef5:	push   0x100b9cb8
1000aefa:	lea    ecx,[ebp-0x50]
1000aefd:	call   0x10002bc0
1000af02:	mov    DWORD PTR [ebp-0x4],0x0
1000af09:	lea    eax,[ebp-0x50]
1000af0c:	push   eax
1000af0d:	lea    ecx,[ebp-0x34]
1000af10:	call   0x10001480
1000af15:	push   0x100bba14
1000af1a:	lea    ecx,[ebp-0x34]
1000af1d:	push   ecx
1000af1e:	call   0x10018e6e
1000af23:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000af2a:	lea    ecx,[ebp-0x50]
1000af2d:	call   0x10002c00
1000af32:	mov    ecx,DWORD PTR [ebp-0xc]
1000af35:	mov    DWORD PTR fs:0x0,ecx
1000af3c:	pop    ecx
1000af3d:	mov    esp,ebp
1000af3f:	pop    ebp
1000af40:	ret    
1000af41:	int3   
1000af42:	int3   
1000af43:	int3   
1000af44:	int3   
1000af45:	int3   
1000af46:	int3   
1000af47:	int3   
1000af48:	int3   
1000af49:	int3   
1000af4a:	int3   
1000af4b:	int3   
1000af4c:	int3   
1000af4d:	int3   
1000af4e:	int3   
1000af4f:	int3   
1000af50:	push   ebp
1000af51:	mov    ebp,esp
1000af53:	sub    esp,0xc
1000af56:	mov    DWORD PTR [ebp-0xc],ecx
1000af59:	mov    eax,DWORD PTR [ebp-0xc]
1000af5c:	mov    ecx,DWORD PTR [eax+0x8]
1000af5f:	shr    ecx,0x2
1000af62:	mov    DWORD PTR [ebp-0x4],ecx
1000af65:	mov    edx,DWORD PTR [ebp-0xc]
1000af68:	mov    eax,DWORD PTR [edx+0x8]
1000af6b:	and    eax,0x3
1000af6e:	mov    DWORD PTR [ebp-0x8],eax
1000af71:	mov    ecx,DWORD PTR [ebp-0xc]
1000af74:	cmp    DWORD PTR [ecx+0x4],0x0
1000af78:	jne    0x1000af7f
1000af7a:	call   0x10018de3
1000af7f:	mov    edx,DWORD PTR [ebp-0xc]
1000af82:	mov    eax,DWORD PTR [edx+0x4]
1000af85:	mov    ecx,DWORD PTR [ebp-0xc]
1000af88:	mov    edx,DWORD PTR [ecx+0x4]
1000af8b:	mov    eax,DWORD PTR [eax+0xc]
1000af8e:	add    eax,DWORD PTR [edx+0x10]
1000af91:	mov    ecx,DWORD PTR [ebp-0xc]
1000af94:	cmp    DWORD PTR [ecx+0x8],eax
1000af97:	jb     0x1000af9e
1000af99:	call   0x10018de3
1000af9e:	mov    edx,DWORD PTR [ebp-0xc]
1000afa1:	mov    eax,DWORD PTR [edx+0x4]
1000afa4:	mov    ecx,DWORD PTR [eax+0x8]
1000afa7:	cmp    ecx,DWORD PTR [ebp-0x4]
1000afaa:	ja     0x1000afbb
1000afac:	mov    edx,DWORD PTR [ebp-0xc]
1000afaf:	mov    eax,DWORD PTR [edx+0x4]
1000afb2:	mov    ecx,DWORD PTR [ebp-0x4]
1000afb5:	sub    ecx,DWORD PTR [eax+0x8]
1000afb8:	mov    DWORD PTR [ebp-0x4],ecx
1000afbb:	mov    edx,DWORD PTR [ebp-0xc]
1000afbe:	mov    eax,DWORD PTR [edx+0x4]
1000afc1:	mov    ecx,DWORD PTR [eax+0x4]
1000afc4:	mov    edx,DWORD PTR [ebp-0x4]
1000afc7:	mov    eax,DWORD PTR [ecx+edx*4]
1000afca:	mov    ecx,DWORD PTR [ebp-0x8]
1000afcd:	lea    eax,[eax+ecx*4]
1000afd0:	mov    esp,ebp
1000afd2:	pop    ebp
1000afd3:	ret    
1000afd4:	int3   
1000afd5:	int3   
1000afd6:	int3   
1000afd7:	int3   
1000afd8:	int3   
1000afd9:	int3   
1000afda:	int3   
1000afdb:	int3   
1000afdc:	int3   
1000afdd:	int3   
1000afde:	int3   
1000afdf:	int3   
1000afe0:	push   ebp
1000afe1:	mov    ebp,esp
1000afe3:	sub    esp,0x20
1000afe6:	xor    eax,eax
1000afe8:	mov    BYTE PTR [ebp-0x1],al
1000afeb:	mov    cl,BYTE PTR [ebp-0x3]
1000afee:	mov    BYTE PTR [ebp-0x2],cl
1000aff1:	mov    edx,DWORD PTR [ebp+0xc]
1000aff4:	mov    DWORD PTR [ebp-0x8],edx
1000aff7:	mov    eax,DWORD PTR [ebp+0x8]
1000affa:	mov    DWORD PTR [ebp-0x10],eax
1000affd:	mov    cl,BYTE PTR [ebp-0x1]
1000b000:	mov    BYTE PTR [ebp-0x1d],cl
1000b003:	mov    edx,DWORD PTR [ebp+0x10]
1000b006:	mov    DWORD PTR [ebp-0x1c],edx
1000b009:	mov    eax,DWORD PTR [ebp-0x8]
1000b00c:	sub    eax,DWORD PTR [ebp-0x10]
1000b00f:	sar    eax,0x2
1000b012:	mov    DWORD PTR [ebp-0x14],eax
1000b015:	mov    ecx,DWORD PTR [ebp-0x14]
1000b018:	mov    edx,DWORD PTR [ebp-0x1c]
1000b01b:	lea    eax,[edx+ecx*4]
1000b01e:	mov    DWORD PTR [ebp-0x18],eax
1000b021:	je     0x1000b041
1000b023:	mov    ecx,DWORD PTR [ebp-0x14]
1000b026:	shl    ecx,0x2
1000b029:	push   ecx
1000b02a:	mov    edx,DWORD PTR [ebp-0x10]
1000b02d:	push   edx
1000b02e:	mov    eax,DWORD PTR [ebp-0x14]
1000b031:	shl    eax,0x2
1000b034:	push   eax
1000b035:	mov    ecx,DWORD PTR [ebp-0x1c]
1000b038:	push   ecx
1000b039:	call   0x1001911e
1000b03e:	add    esp,0x10
1000b041:	mov    eax,DWORD PTR [ebp-0x18]
1000b044:	mov    esp,ebp
1000b046:	pop    ebp
1000b047:	ret    
1000b048:	int3   
1000b049:	int3   
1000b04a:	int3   
1000b04b:	int3   
1000b04c:	int3   
1000b04d:	int3   
1000b04e:	int3   
1000b04f:	int3   
1000b050:	push   ebp
1000b051:	mov    ebp,esp
1000b053:	sub    esp,0xc
1000b056:	cmp    DWORD PTR [ebp+0x8],0x0
1000b05a:	ja     0x1000b065
1000b05c:	mov    DWORD PTR [ebp+0x8],0x0
1000b063:	jmp    0x1000b08a
1000b065:	or     eax,0xffffffff
1000b068:	xor    edx,edx
1000b06a:	div    DWORD PTR [ebp+0x8]
1000b06d:	cmp    eax,0x4
1000b070:	jae    0x1000b08a
1000b072:	push   0x0
1000b074:	lea    ecx,[ebp-0xc]
1000b077:	call   0x10001310
1000b07c:	push   0x100bba4c
1000b081:	lea    eax,[ebp-0xc]
1000b084:	push   eax
1000b085:	call   0x10018e6e
1000b08a:	mov    ecx,DWORD PTR [ebp+0x8]
1000b08d:	shl    ecx,0x2
1000b090:	push   ecx
1000b091:	call   0x100190b4
1000b096:	add    esp,0x4
1000b099:	mov    esp,ebp
1000b09b:	pop    ebp
1000b09c:	ret    
1000b09d:	int3   
1000b09e:	int3   
1000b09f:	int3   
1000b0a0:	push   ebp
1000b0a1:	mov    ebp,esp
1000b0a3:	sub    esp,0x20
1000b0a6:	xor    eax,eax
1000b0a8:	mov    BYTE PTR [ebp-0x1],al
1000b0ab:	mov    cl,BYTE PTR [ebp-0x1]
1000b0ae:	mov    BYTE PTR [ebp-0x1e],cl
1000b0b1:	mov    dl,BYTE PTR [ebp-0x2]
1000b0b4:	mov    BYTE PTR [ebp-0x1d],dl
1000b0b7:	mov    eax,DWORD PTR [ebp+0x8]
1000b0ba:	mov    DWORD PTR [ebp-0x1c],eax
1000b0bd:	mov    ecx,DWORD PTR [ebp+0xc]
1000b0c0:	mov    edx,DWORD PTR [ebp-0x1c]
1000b0c3:	lea    eax,[edx+ecx*4]
1000b0c6:	mov    DWORD PTR [ebp-0x8],eax
1000b0c9:	xor    ecx,ecx
1000b0cb:	mov    BYTE PTR [ebp-0x9],cl
1000b0ce:	mov    dl,BYTE PTR [ebp-0x9]
1000b0d1:	mov    BYTE PTR [ebp-0x15],dl
1000b0d4:	mov    eax,DWORD PTR [ebp+0xc]
1000b0d7:	mov    DWORD PTR [ebp-0x14],eax
1000b0da:	mov    ecx,DWORD PTR [ebp-0x1c]
1000b0dd:	mov    DWORD PTR [ebp-0x10],ecx
1000b0e0:	jmp    0x1000b0f4
1000b0e2:	mov    edx,DWORD PTR [ebp-0x14]
1000b0e5:	sub    edx,0x1
1000b0e8:	mov    DWORD PTR [ebp-0x14],edx
1000b0eb:	mov    eax,DWORD PTR [ebp-0x10]
1000b0ee:	add    eax,0x4
1000b0f1:	mov    DWORD PTR [ebp-0x10],eax
1000b0f4:	cmp    DWORD PTR [ebp-0x14],0x0
1000b0f8:	jbe    0x1000b106
1000b0fa:	mov    ecx,DWORD PTR [ebp-0x10]
1000b0fd:	mov    edx,DWORD PTR [ebp+0x10]
1000b100:	mov    eax,DWORD PTR [edx]
1000b102:	mov    DWORD PTR [ecx],eax
1000b104:	jmp    0x1000b0e2
1000b106:	mov    esp,ebp
1000b108:	pop    ebp
1000b109:	ret    
1000b10a:	int3   
1000b10b:	int3   
1000b10c:	int3   
1000b10d:	int3   
1000b10e:	int3   
1000b10f:	int3   
1000b110:	push   ebp
1000b111:	mov    ebp,esp
1000b113:	sub    esp,0x14
1000b116:	mov    eax,DWORD PTR [ebp+0xc]
1000b119:	mov    ecx,DWORD PTR [ebp+0x8]
1000b11c:	lea    edx,[ecx+eax*4]
1000b11f:	mov    DWORD PTR [ebp-0x4],edx
1000b122:	xor    eax,eax
1000b124:	mov    BYTE PTR [ebp-0x5],al
1000b127:	mov    cl,BYTE PTR [ebp-0x5]
1000b12a:	mov    BYTE PTR [ebp-0x11],cl
1000b12d:	mov    edx,DWORD PTR [ebp+0xc]
1000b130:	mov    DWORD PTR [ebp-0x10],edx
1000b133:	mov    eax,DWORD PTR [ebp+0x8]
1000b136:	mov    DWORD PTR [ebp-0xc],eax
1000b139:	jmp    0x1000b14d
1000b13b:	mov    ecx,DWORD PTR [ebp-0x10]
1000b13e:	sub    ecx,0x1
1000b141:	mov    DWORD PTR [ebp-0x10],ecx
1000b144:	mov    edx,DWORD PTR [ebp-0xc]
1000b147:	add    edx,0x4
1000b14a:	mov    DWORD PTR [ebp-0xc],edx
1000b14d:	cmp    DWORD PTR [ebp-0x10],0x0
1000b151:	jbe    0x1000b15f
1000b153:	mov    eax,DWORD PTR [ebp-0xc]
1000b156:	mov    ecx,DWORD PTR [ebp+0x10]
1000b159:	mov    edx,DWORD PTR [ecx]
1000b15b:	mov    DWORD PTR [eax],edx
1000b15d:	jmp    0x1000b13b
1000b15f:	mov    esp,ebp
1000b161:	pop    ebp
1000b162:	ret    
1000b163:	int3   
1000b164:	int3   
1000b165:	int3   
1000b166:	int3   
1000b167:	int3   
1000b168:	int3   
1000b169:	int3   
1000b16a:	int3   
1000b16b:	int3   
1000b16c:	int3   
1000b16d:	int3   
1000b16e:	int3   
1000b16f:	int3   
1000b170:	push   ebx
1000b171:	push   esi
1000b172:	push   edi
1000b173:	push   0x0
1000b175:	mov    esi,ecx
1000b177:	push   0x0
1000b179:	push   esi
1000b17a:	push   0x1000b1c0
1000b17f:	call   0x1000bc10
1000b184:	add    esp,0x4
1000b187:	push   eax
1000b188:	push   0x0
1000b18a:	push   0x0
1000b18c:	call   DWORD PTR ds:0x1002f080
1000b192:	mov    edi,DWORD PTR [esi+0x4]
1000b195:	test   edi,edi
1000b197:	mov    ebx,eax
1000b199:	je     0x1000b1b3
1000b19b:	push   ebp
1000b19c:	call   DWORD PTR ds:0x1002f094
1000b1a2:	push   edi
1000b1a3:	mov    ebp,eax
1000b1a5:	call   DWORD PTR ds:0x1002f064
1000b1ab:	push   ebp
1000b1ac:	call   DWORD PTR ds:0x1002f090
1000b1b2:	pop    ebp
1000b1b3:	pop    edi
1000b1b4:	mov    DWORD PTR [esi+0x4],ebx
1000b1b7:	pop    esi
1000b1b8:	pop    ebx
1000b1b9:	ret    
1000b1ba:	int3   
1000b1bb:	int3   
1000b1bc:	int3   
1000b1bd:	int3   
1000b1be:	int3   
1000b1bf:	int3   
1000b1c0:	mov    eax,DWORD PTR [esp+0x4]
1000b1c4:	push   eax
1000b1c5:	call   0x1000b280
1000b1ca:	xor    eax,eax
1000b1cc:	ret    0x4
1000b1cf:	int3   
1000b1d0:	push   0xffffffff
1000b1d2:	push   0x1002d4f8
1000b1d7:	mov    eax,fs:0x0
1000b1dd:	push   eax
1000b1de:	sub    esp,0x8
1000b1e1:	push   ebx
1000b1e2:	push   esi
1000b1e3:	push   edi
1000b1e4:	mov    eax,ds:0x100c7654
1000b1e9:	xor    eax,esp
1000b1eb:	push   eax
1000b1ec:	lea    eax,[esp+0x18]
1000b1f0:	mov    fs:0x0,eax
1000b1f6:	push   0x100c9d88
1000b1fb:	call   DWORD PTR ds:0x1002f0e8
1000b201:	mov    DWORD PTR [esp+0x20],0x0
1000b209:	mov    esi,DWORD PTR [esp+0x28]
1000b20d:	mov    DWORD PTR [esp+0x28],esi
1000b211:	mov    BYTE PTR [esp+0x20],0x2
1000b216:	mov    eax,DWORD PTR [esi+0x4]
1000b219:	mov    ebx,DWORD PTR [esi]
1000b21b:	push   eax
1000b21c:	mov    DWORD PTR [esp+0x18],ebx
1000b220:	call   0x1000b560
1000b225:	push   ebx
1000b226:	call   DWORD PTR ds:0x1002f120
1000b22c:	push   ebx
1000b22d:	call   DWORD PTR ds:0x1002f11c
1000b233:	test   ebx,ebx
1000b235:	je     0x1000b24d
1000b237:	call   DWORD PTR ds:0x1002f094
1000b23d:	push   ebx
1000b23e:	mov    edi,eax
1000b240:	call   DWORD PTR ds:0x1002f064
1000b246:	push   edi
1000b247:	call   DWORD PTR ds:0x1002f090
1000b24d:	push   esi
1000b24e:	call   0x1001876e
1000b253:	add    esp,0x4
1000b256:	push   0x100c9d88
1000b25b:	call   DWORD PTR ds:0x1002f0f0
1000b261:	xor    eax,eax
1000b263:	mov    ecx,DWORD PTR [esp+0x18]
1000b267:	mov    DWORD PTR fs:0x0,ecx
1000b26e:	pop    ecx
1000b26f:	pop    edi
1000b270:	pop    esi
1000b271:	pop    ebx
1000b272:	add    esp,0x14
1000b275:	ret    0x4
1000b278:	int3   
1000b279:	int3   
1000b27a:	int3   
1000b27b:	int3   
1000b27c:	int3   
1000b27d:	int3   
1000b27e:	int3   
1000b27f:	int3   
1000b280:	push   ebp
1000b281:	mov    ebp,esp
1000b283:	and    esp,0xfffffff8
1000b286:	push   0xffffffff
1000b288:	push   0x1002e49b
1000b28d:	mov    eax,fs:0x0
1000b293:	push   eax
1000b294:	sub    esp,0x28
1000b297:	push   ebx
1000b298:	push   esi
1000b299:	push   edi
1000b29a:	mov    eax,ds:0x100c7654
1000b29f:	xor    eax,esp
1000b2a1:	push   eax
1000b2a2:	lea    eax,[esp+0x38]
1000b2a6:	mov    fs:0x0,eax
1000b2ac:	push   0x100c9d88
1000b2b1:	call   DWORD PTR ds:0x1002f0e8
1000b2b7:	push   0x10003310
1000b2bc:	push   0x1000b550
1000b2c1:	push   0x4
1000b2c3:	push   0x4
1000b2c5:	lea    eax,[esp+0x34]
1000b2c9:	xor    ebx,ebx
1000b2cb:	push   eax
1000b2cc:	mov    DWORD PTR [esp+0x54],ebx
1000b2d0:	call   0x1001a6cd
1000b2d5:	mov    BYTE PTR [esp+0x40],0x1
1000b2da:	mov    ecx,DWORD PTR ds:0x100c9fbc
1000b2e0:	push   ecx
1000b2e1:	lea    ecx,[esp+0x18]
1000b2e5:	call   0x10002dc0
1000b2ea:	mov    BYTE PTR [esp+0x40],0x2
1000b2ef:	mov    esi,DWORD PTR [esp+0x14]
1000b2f3:	call   0x10002620
1000b2f8:	push   eax
1000b2f9:	push   0x0
1000b2fb:	push   0x800
1000b300:	push   0x800
1000b305:	push   0xff
1000b30a:	push   0x6
1000b30c:	push   0x3
1000b30e:	push   esi
1000b30f:	call   DWORD PTR ds:0x1002f118
1000b315:	mov    esi,DWORD PTR [esp+ebx*4+0x24]
1000b319:	test   esi,esi
1000b31b:	mov    edi,eax
1000b31d:	je     0x1000b33b
1000b31f:	call   DWORD PTR ds:0x1002f094
1000b325:	push   esi
1000b326:	mov    DWORD PTR [esp+0x1c],eax
1000b32a:	call   DWORD PTR ds:0x1002f064
1000b330:	mov    edx,DWORD PTR [esp+0x18]
1000b334:	push   edx
1000b335:	call   DWORD PTR ds:0x1002f090
1000b33b:	mov    DWORD PTR [esp+ebx*4+0x24],edi
1000b33f:	add    ebx,0x1
1000b342:	cmp    ebx,0x4
1000b345:	jne    0x1000b2ef
1000b347:	xor    ebx,ebx
1000b349:	xor    edi,edi
1000b34b:	mov    DWORD PTR [esp+0x18],edi
1000b34f:	nop
1000b350:	mov    eax,DWORD PTR [esp+edi*4+0x24]
1000b354:	push   ebx
1000b355:	push   eax
1000b356:	call   DWORD PTR ds:0x1002f114
1000b35c:	test   eax,eax
1000b35e:	je     0x1000b367
1000b360:	mov    esi,0x1
1000b365:	jmp    0x1000b379
1000b367:	call   DWORD PTR ds:0x1002f094
1000b36d:	xor    ecx,ecx
1000b36f:	cmp    eax,0x217
1000b374:	sete   cl
1000b377:	mov    esi,ecx
1000b379:	mov    edx,DWORD PTR ds:0x100c9fb8
1000b37f:	push   ebx
1000b380:	push   edx
1000b381:	call   DWORD PTR ds:0x1002f058
1000b387:	test   eax,eax
1000b389:	je     0x1000b4d4
1000b38f:	cmp    esi,ebx
1000b391:	je     0x1000b3ec
1000b393:	push   0x8
1000b395:	call   0x100190b4
1000b39a:	add    esp,0x4
1000b39d:	mov    ecx,DWORD PTR [ebp+0x8]
1000b3a0:	mov    BYTE PTR [esp+0x40],0x3
1000b3a5:	push   ebx
1000b3a6:	mov    DWORD PTR [eax+0x4],ecx
1000b3a9:	mov    ecx,DWORD PTR [esp+edi*4+0x28]
1000b3ad:	push   ebx
1000b3ae:	push   eax
1000b3af:	mov    DWORD PTR [esp+edi*4+0x30],ebx
1000b3b3:	push   0x1000b1d0
1000b3b8:	mov    DWORD PTR [eax],ecx
1000b3ba:	mov    DWORD PTR [esp+0x30],ebx
1000b3be:	call   0x1000bc10
1000b3c3:	add    esp,0x4
1000b3c6:	push   eax
1000b3c7:	push   ebx
1000b3c8:	push   ebx
1000b3c9:	call   DWORD PTR ds:0x1002f080
1000b3cf:	push   eax
1000b3d0:	call   DWORD PTR ds:0x1002f064
1000b3d6:	push   0xa
1000b3d8:	call   DWORD PTR ds:0x1002f07c
1000b3de:	push   ebx
1000b3df:	mov    BYTE PTR [esp+0x44],0x2
1000b3e4:	call   0x1001876e
1000b3e9:	add    esp,0x4
1000b3ec:	mov    edx,DWORD PTR [esp+0x14]
1000b3f0:	push   ebx
1000b3f1:	push   ebx
1000b3f2:	push   0x800
1000b3f7:	push   0x800
1000b3fc:	push   0xff
1000b401:	push   0x6
1000b403:	push   0x3
1000b405:	push   edx
1000b406:	call   DWORD PTR ds:0x1002f118
1000b40c:	mov    esi,DWORD PTR [esp+edi*4+0x24]
1000b410:	test   esi,esi
1000b412:	mov    ebx,eax
1000b414:	je     0x1000b430
1000b416:	call   DWORD PTR ds:0x1002f094
1000b41c:	push   esi
1000b41d:	mov    edi,eax
1000b41f:	call   DWORD PTR ds:0x1002f064
1000b425:	push   edi
1000b426:	call   DWORD PTR ds:0x1002f090
1000b42c:	mov    edi,DWORD PTR [esp+0x18]
1000b430:	mov    esi,ebx
1000b432:	cmp    esi,0xffffffff
1000b435:	mov    DWORD PTR [esp+edi*4+0x24],ebx
1000b439:	mov    DWORD PTR [esp+0x18],esi
1000b43d:	je     0x1000b4ef
1000b443:	push   0x0
1000b445:	push   0x1
1000b447:	push   0x100c9ef0
1000b44c:	mov    DWORD PTR [esp+0x28],0x2
1000b454:	call   DWORD PTR ds:0x1002f0f8
1000b45a:	test   eax,eax
1000b45c:	jne    0x1000b4a5
1000b45e:	mov    ebx,0x100ba0e0
1000b463:	call   0x1000f070
1000b468:	mov    ecx,0x100b9d80
1000b46d:	mov    esi,eax
1000b46f:	call   0x1000ee70
1000b474:	push   eax
1000b475:	call   DWORD PTR ds:0x1002f108
1000b47b:	mov    ebx,0x1
1000b480:	add    DWORD PTR ds:0x100c8ab4,ebx
1000b486:	test   eax,eax
1000b488:	je     0x1000b49a
1000b48a:	push   esi
1000b48b:	push   eax
1000b48c:	call   DWORD PTR ds:0x1002f050
1000b492:	add    DWORD PTR ds:0x100c8ab8,ebx
1000b498:	jmp    0x1000b49c
1000b49a:	xor    eax,eax
1000b49c:	mov    esi,DWORD PTR [esp+0x18]
1000b4a0:	mov    ds:0x100c9fe4,eax
1000b4a5:	push   0x0
1000b4a7:	push   0x0
1000b4a9:	lea    eax,[esp+0x24]
1000b4ad:	push   eax
1000b4ae:	push   esi
1000b4af:	call   DWORD PTR ds:0x100c9fe4
1000b4b5:	test   eax,eax
1000b4b7:	je     0x1000b4ef
1000b4b9:	add    edi,0x1
1000b4bc:	and    edi,0x80000003
1000b4c2:	jns    0x1000b4c9
1000b4c4:	dec    edi
1000b4c5:	or     edi,0xfffffffc
1000b4c8:	inc    edi
1000b4c9:	mov    DWORD PTR [esp+0x18],edi
1000b4cd:	xor    ebx,ebx
1000b4cf:	jmp    0x1000b350
1000b4d4:	mov    BYTE PTR [esp+0x40],0x1
1000b4d9:	mov    eax,DWORD PTR [esp+0x14]
1000b4dd:	add    eax,0xfffffff0
1000b4e0:	lea    ecx,[eax+0xc]
1000b4e3:	or     edx,0xffffffff
1000b4e6:	lock xadd DWORD PTR [ecx],edx
1000b4ea:	dec    edx
1000b4eb:	test   edx,edx
1000b4ed:	jmp    0x1000b508
1000b4ef:	mov    BYTE PTR [esp+0x40],0x1
1000b4f4:	mov    eax,DWORD PTR [esp+0x14]
1000b4f8:	add    eax,0xfffffff0
1000b4fb:	or     ecx,0xffffffff
1000b4fe:	lea    edx,[eax+0xc]
1000b501:	lock xadd DWORD PTR [edx],ecx
1000b505:	dec    ecx
1000b506:	test   ecx,ecx
1000b508:	jg     0x1000b514
1000b50a:	mov    ecx,DWORD PTR [eax]
1000b50c:	mov    edx,DWORD PTR [ecx]
1000b50e:	push   eax
1000b50f:	mov    eax,DWORD PTR [edx+0x4]
1000b512:	call   eax
1000b514:	push   0x10003310
1000b519:	push   0x4
1000b51b:	push   0x4
1000b51d:	lea    ecx,[esp+0x30]
1000b521:	push   ecx
1000b522:	mov    BYTE PTR [esp+0x50],0x0
1000b527:	call   0x1001a370
1000b52c:	push   0x100c9d88
1000b531:	call   DWORD PTR ds:0x1002f0f0
1000b537:	mov    ecx,DWORD PTR [esp+0x38]
1000b53b:	mov    DWORD PTR fs:0x0,ecx
1000b542:	pop    ecx
1000b543:	pop    edi
1000b544:	pop    esi
1000b545:	pop    ebx
1000b546:	mov    esp,ebp
1000b548:	pop    ebp
1000b549:	ret    0x4
1000b54c:	int3   
1000b54d:	int3   
1000b54e:	int3   
1000b54f:	int3   
1000b550:	mov    DWORD PTR [ecx],0x0
1000b556:	ret    
1000b557:	int3   
1000b558:	int3   
1000b559:	int3   
1000b55a:	int3   
1000b55b:	int3   
1000b55c:	int3   
1000b55d:	int3   
1000b55e:	int3   
1000b55f:	int3   
1000b560:	push   ebp
1000b561:	mov    ebp,esp
1000b563:	and    esp,0xfffffff8
1000b566:	push   0xffffffff
1000b568:	push   0x1002d480
1000b56d:	mov    eax,fs:0x0
1000b573:	push   eax
1000b574:	sub    esp,0x4c
1000b577:	mov    eax,ds:0x100c7654
1000b57c:	xor    eax,esp
1000b57e:	mov    DWORD PTR [esp+0x44],eax
1000b582:	push   esi
1000b583:	push   edi
1000b584:	mov    eax,ds:0x100c7654
1000b589:	xor    eax,esp
1000b58b:	push   eax
1000b58c:	lea    eax,[esp+0x58]
1000b590:	mov    fs:0x0,eax
1000b596:	mov    eax,DWORD PTR [ebp+0x8]
1000b599:	mov    DWORD PTR [esp+0x24],eax
1000b59d:	lea    ecx,[ecx+0x0]
1000b5a0:	xor    edi,edi
1000b5a2:	xor    eax,eax
1000b5a4:	mov    DWORD PTR [esp+0x10],edi
1000b5a8:	mov    DWORD PTR [esp+0x14],edi
1000b5ac:	mov    WORD PTR [esp+0x2c],di
1000b5b1:	mov    DWORD PTR [esp+0x2e],eax
1000b5b5:	mov    DWORD PTR [esp+0x32],eax
1000b5b9:	mov    DWORD PTR [esp+0x36],eax
1000b5bd:	mov    WORD PTR [esp+0x3a],ax
1000b5c2:	mov    DWORD PTR [esp+0x3c],eax
1000b5c6:	mov    DWORD PTR [esp+0x40],eax
1000b5ca:	mov    DWORD PTR [esp+0x44],eax
1000b5ce:	mov    DWORD PTR [esp+0x48],eax
1000b5d2:	mov    DWORD PTR [esp+0x4c],eax
1000b5d6:	jmp    0x1000b5e0
1000b5d8:	lea    esp,[esp+0x0]
1000b5df:	nop
1000b5e0:	mov    esi,DWORD PTR ds:0x1002f074
1000b5e6:	push   edi
1000b5e7:	lea    ecx,[esp+0x14]
1000b5eb:	push   ecx
1000b5ec:	push   0x24
1000b5ee:	lea    edx,[esp+0x38]
1000b5f2:	push   edx
1000b5f3:	push   ebx
1000b5f4:	call   esi
1000b5f6:	cmp    eax,edi
1000b5f8:	je     0x1000b74e
1000b5fe:	cmp    DWORD PTR [esp+0x10],edi
1000b602:	jbe    0x1000b5e0
1000b604:	cmp    WORD PTR [esp+0x2c],di
1000b609:	je     0x1000b627
1000b60b:	push   0x8
1000b60d:	lea    eax,[esp+0x30]
1000b611:	push   0x100b7804
1000b616:	push   eax
1000b617:	call   0x1001a698
1000b61c:	add    esp,0xc
1000b61f:	test   eax,eax
1000b621:	jne    0x1000b74e
1000b627:	mov    ecx,DWORD PTR [esp+0x44]
1000b62b:	push   ecx
1000b62c:	call   0x1001868d
1000b631:	mov    edi,eax
1000b633:	add    esp,0x4
1000b636:	mov    DWORD PTR [esp+0x28],edi
1000b63a:	push   0x0
1000b63c:	lea    edx,[esp+0x14]
1000b640:	push   edx
1000b641:	mov    DWORD PTR [esp+0x68],0x0
1000b649:	mov    eax,DWORD PTR [esp+0x4c]
1000b64d:	push   eax
1000b64e:	push   edi
1000b64f:	push   ebx
1000b650:	call   esi
1000b652:	test   eax,eax
1000b654:	je     0x1000b729
1000b65a:	mov    DWORD PTR [esp+0xc],0x0
1000b662:	mov    BYTE PTR [esp+0x60],0x1
1000b667:	cmp    BYTE PTR [esp+0x4c],0x0
1000b66c:	je     0x1000b672
1000b66e:	mov    esi,edi
1000b670:	jmp    0x1000b693
1000b672:	mov    ecx,DWORD PTR [esp+0x48]
1000b676:	push   ecx
1000b677:	call   0x1001868d
1000b67c:	mov    esi,eax
1000b67e:	add    esp,0x4
1000b681:	test   esi,esi
1000b683:	je     0x1000b68f
1000b685:	push   0x0
1000b687:	call   0x1001876e
1000b68c:	add    esp,0x4
1000b68f:	mov    DWORD PTR [esp+0xc],esi
1000b693:	mov    edx,DWORD PTR [esp+0x48]
1000b697:	mov    ecx,DWORD PTR [esp+0x24]
1000b69b:	mov    DWORD PTR [esp+0x18],edx
1000b69f:	lea    edx,[esp+0x18]
1000b6a3:	push   edx
1000b6a4:	mov    edx,DWORD PTR [esp+0x48]
1000b6a8:	xor    eax,eax
1000b6aa:	push   esi
1000b6ab:	push   edx
1000b6ac:	mov    edx,DWORD PTR [esp+0x48]
1000b6b0:	mov    DWORD PTR [esp+0x28],eax
1000b6b4:	mov    DWORD PTR [esp+0x2c],eax
1000b6b8:	mov    eax,DWORD PTR [ecx]
1000b6ba:	mov    eax,DWORD PTR [eax+0x4]
1000b6bd:	push   edi
1000b6be:	push   edx
1000b6bf:	call   eax
1000b6c1:	movzx  eax,al
1000b6c4:	push   0x0
1000b6c6:	mov    DWORD PTR [esp+0x20],eax
1000b6ca:	lea    ecx,[esp+0x18]
1000b6ce:	push   ecx
1000b6cf:	neg    eax
1000b6d1:	push   0x8
1000b6d3:	sbb    eax,eax
1000b6d5:	and    eax,DWORD PTR [esp+0x24]
1000b6d9:	lea    edx,[esp+0x28]
1000b6dd:	push   edx
1000b6de:	push   ebx
1000b6df:	mov    DWORD PTR [esp+0x34],eax
1000b6e3:	call   DWORD PTR ds:0x1002f0c0
1000b6e9:	test   eax,eax
1000b6eb:	je     0x1000b734
1000b6ed:	mov    eax,DWORD PTR [esp+0x20]
1000b6f1:	test   eax,eax
1000b6f3:	jbe    0x1000b709
1000b6f5:	push   0x0
1000b6f7:	lea    ecx,[esp+0x18]
1000b6fb:	push   ecx
1000b6fc:	push   eax
1000b6fd:	push   esi
1000b6fe:	push   ebx
1000b6ff:	call   DWORD PTR ds:0x1002f0c0
1000b705:	test   eax,eax
1000b707:	je     0x1000b73b
1000b709:	mov    edx,DWORD PTR [esp+0xc]
1000b70d:	push   edx
1000b70e:	call   0x1001876e
1000b713:	push   edi
1000b714:	mov    DWORD PTR [esp+0x68],0xffffffff
1000b71c:	call   0x1001876e
1000b721:	add    esp,0x8
1000b724:	jmp    0x1000b5a0
1000b729:	push   edi
1000b72a:	call   0x1001876e
1000b72f:	add    esp,0x4
1000b732:	jmp    0x1000b74e
1000b734:	mov    eax,DWORD PTR [esp+0xc]
1000b738:	push   eax
1000b739:	jmp    0x1000b740
1000b73b:	mov    ecx,DWORD PTR [esp+0xc]
1000b73f:	push   ecx
1000b740:	call   0x1001876e
1000b745:	push   edi
1000b746:	call   0x1001876e
1000b74b:	add    esp,0x8
1000b74e:	mov    ecx,DWORD PTR [esp+0x58]
1000b752:	mov    DWORD PTR fs:0x0,ecx
1000b759:	pop    ecx
1000b75a:	pop    edi
1000b75b:	pop    esi
1000b75c:	mov    ecx,DWORD PTR [esp+0x44]
1000b760:	xor    ecx,esp
1000b762:	call   0x10018773
1000b767:	mov    esp,ebp
1000b769:	pop    ebp
1000b76a:	ret    0x4
1000b76d:	int3   
1000b76e:	int3   
1000b76f:	int3   
1000b770:	sub    esp,0x8
1000b773:	mov    eax,ds:0x100c8aec
1000b778:	lea    ecx,[esp]
1000b77b:	push   ecx
1000b77c:	lea    eax,[eax+eax*2]
1000b77f:	add    eax,eax
1000b781:	push   0x40
1000b783:	push   eax
1000b784:	push   esi
1000b785:	mov    DWORD PTR [esp+0x10],0x0
1000b78d:	call   0x1000e210
1000b792:	call   eax
1000b794:	mov    edx,DWORD PTR [esp+0x10]
1000b798:	sub    edx,DWORD PTR [esp+0x18]
1000b79c:	mov    ecx,DWORD PTR [esp+0xc]
1000b7a0:	lea    eax,[esi+0x1]
1000b7a3:	sub    edx,eax
1000b7a5:	lea    edx,[edx+ecx*1-0x4]
1000b7a9:	mov    ecx,DWORD PTR [esp]
1000b7ac:	mov    BYTE PTR [esi],0xe9
1000b7af:	mov    DWORD PTR [eax],edx
1000b7b1:	lea    eax,[esp+0x4]
1000b7b5:	push   eax
1000b7b6:	push   ecx
1000b7b7:	push   0x5
1000b7b9:	push   esi
1000b7ba:	mov    DWORD PTR [esp+0x14],0x0
1000b7c2:	call   0x1000e210
1000b7c7:	call   eax
1000b7c9:	add    esp,0x8
1000b7cc:	ret    
1000b7cd:	int3   
1000b7ce:	int3   
1000b7cf:	int3   
1000b7d0:	mov    eax,0x1938
1000b7d5:	call   0x100191a0
1000b7da:	mov    ecx,DWORD PTR ds:0x100c8af0
1000b7e0:	push   ebx
1000b7e1:	push   ebp
1000b7e2:	mov    ebp,DWORD PTR [esp+0x194c]
1000b7e9:	xor    eax,eax
1000b7eb:	push   esi
1000b7ec:	push   edi
1000b7ed:	mov    DWORD PTR [esp+0x38],eax
1000b7f1:	mov    DWORD PTR [esp+0x3c],eax
1000b7f5:	mov    DWORD PTR [esp+0x40],eax
1000b7f9:	mov    DWORD PTR [esp+0x30],eax
1000b7fd:	mov    DWORD PTR [esp+0x34],eax
1000b801:	mov    DWORD PTR [esp+0x44],eax
1000b805:	mov    eax,DWORD PTR [esp+0x194c]
1000b80c:	lea    edx,[esp+0x24]
1000b810:	push   edx
1000b811:	mov    DWORD PTR [esp+0x3c],eax
1000b815:	push   0x64
1000b817:	lea    eax,[esp+0x50]
1000b81b:	mov    DWORD PTR [esp+0x48],ecx
1000b81f:	xor    esi,esi
1000b821:	push   eax
1000b822:	lea    ecx,[esp+0x34]
1000b826:	push   ecx
1000b827:	mov    DWORD PTR [esp+0x34],esi
1000b82b:	mov    DWORD PTR [esp+0x38],esi
1000b82f:	mov    DWORD PTR [esp+0x3c],esi
1000b833:	mov    DWORD PTR [esp+0x4c],0x1e
1000b83b:	call   0x100151d0
1000b840:	add    esp,0x10
1000b843:	cmp    eax,0x3
1000b846:	jne    0x1000b855
1000b848:	xor    eax,eax
1000b84a:	pop    edi
1000b84b:	pop    esi
1000b84c:	pop    ebp
1000b84d:	pop    ebx
1000b84e:	add    esp,0x1938
1000b854:	ret    
1000b855:	xor    edi,edi
1000b857:	xor    ebx,ebx
1000b859:	cmp    DWORD PTR [esp+0x24],esi
1000b85d:	mov    DWORD PTR [esp+0x1c],edi
1000b861:	mov    DWORD PTR [esp+0x14],esi
1000b865:	jbe    0x1000b99d
1000b86b:	lea    edx,[esp+0x50]
1000b86f:	mov    DWORD PTR [esp+0x18],edx
1000b873:	jmp    0x1000b879
1000b875:	mov    edx,DWORD PTR [esp+0x18]
1000b879:	cmp    edi,DWORD PTR [esp+0x1950]
1000b880:	jae    0x1000b99d
1000b886:	mov    eax,DWORD PTR [esp+0x194c]
1000b88d:	add    edi,eax
1000b88f:	mov    DWORD PTR [esp+0x20],0xffffffff
1000b897:	lea    eax,[edx+0xa]
1000b89a:	lea    ebx,[ebx+0x0]
1000b8a0:	mov    cl,BYTE PTR [eax]
1000b8a2:	test   cl,cl
1000b8a4:	je     0x1000b8ba
1000b8a6:	cmp    cl,0x8
1000b8a9:	jne    0x1000b8af
1000b8ab:	mov    DWORD PTR [esp+0x20],esi
1000b8af:	add    esi,0x1
1000b8b2:	add    eax,0x4
1000b8b5:	cmp    esi,0x4
1000b8b8:	jne    0x1000b8a0
1000b8ba:	mov    DWORD PTR [esp+0x10],esi
1000b8be:	movzx  esi,BYTE PTR [edx]
1000b8c1:	push   esi
1000b8c2:	lea    ecx,[ebx+ebp*1]
1000b8c5:	push   edi
1000b8c6:	push   ecx
1000b8c7:	call   0x10019470
1000b8cc:	add    esp,0xc
1000b8cf:	cmp    DWORD PTR [esp+0x10],0x1
1000b8d4:	jne    0x1000b96e
1000b8da:	cmp    DWORD PTR [esp+0x20],0x0
1000b8df:	jne    0x1000b96e
1000b8e5:	mov    edx,DWORD PTR [esp+0x18]
1000b8e9:	movzx  ecx,WORD PTR [edx+0xc]
1000b8ed:	movzx  eax,cx
1000b8f0:	shr    eax,0x3
1000b8f3:	cmp    cx,0x10
1000b8f7:	jne    0x1000b916
1000b8f9:	sub    edi,ebp
1000b8fb:	sub    edi,ebx
1000b8fd:	sub    edi,DWORD PTR [esp+0x1960]
1000b904:	sub    esi,eax
1000b906:	add    edi,DWORD PTR [esp+0x1958]
1000b90d:	add    esi,ebx
1000b90f:	add    esi,ebp
1000b911:	add    WORD PTR [esi],di
1000b914:	jmp    0x1000b96e
1000b916:	cmp    cx,0x20
1000b91a:	jne    0x1000b93a
1000b91c:	sub    esi,eax
1000b91e:	mov    eax,DWORD PTR [esp+0x1958]
1000b925:	sub    eax,DWORD PTR [esp+0x1960]
1000b92c:	add    esi,ebx
1000b92e:	sub    eax,ebx
1000b930:	sub    eax,ebp
1000b932:	add    esi,ebp
1000b934:	add    eax,edi
1000b936:	add    DWORD PTR [esi],eax
1000b938:	jmp    0x1000b96e
1000b93a:	cmp    cx,0x40
1000b93e:	jne    0x1000b96e
1000b940:	sub    esi,eax
1000b942:	mov    eax,edi
1000b944:	sub    eax,ebx
1000b946:	sub    eax,ebp
1000b948:	add    esi,ebx
1000b94a:	cdq    
1000b94b:	add    esi,ebp
1000b94d:	sub    eax,DWORD PTR [esp+0x1960]
1000b954:	sbb    edx,DWORD PTR [esp+0x1964]
1000b95b:	add    eax,DWORD PTR [esp+0x1958]
1000b962:	adc    edx,DWORD PTR [esp+0x195c]
1000b969:	add    DWORD PTR [esi],eax
1000b96b:	adc    DWORD PTR [esi+0x4],edx
1000b96e:	mov    ecx,DWORD PTR [esp+0x18]
1000b972:	movzx  eax,BYTE PTR [ecx]
1000b975:	add    DWORD PTR [esp+0x1c],eax
1000b979:	mov    edi,DWORD PTR [esp+0x1c]
1000b97d:	add    ebx,eax
1000b97f:	mov    eax,DWORD PTR [esp+0x14]
1000b983:	add    eax,0x1
1000b986:	add    ecx,0x40
1000b989:	xor    esi,esi
1000b98b:	cmp    eax,DWORD PTR [esp+0x24]
1000b98f:	mov    DWORD PTR [esp+0x14],eax
1000b993:	mov    DWORD PTR [esp+0x18],ecx
1000b997:	jb     0x1000b875
1000b99d:	mov    ecx,DWORD PTR [esp+0x194c]
1000b9a4:	mov    eax,ds:0x100c8aec
1000b9a9:	add    edi,ecx
1000b9ab:	push   esi
1000b9ac:	mov    DWORD PTR [esp+0x24],edi
1000b9b0:	push   0x1
1000b9b2:	lea    edi,[eax+eax*2]
1000b9b5:	push   0x100c9ec4
1000b9ba:	add    ebp,ebx
1000b9bc:	mov    DWORD PTR [esp+0x20],esi
1000b9c0:	add    edi,edi
1000b9c2:	call   DWORD PTR ds:0x1002f0f8
1000b9c8:	test   eax,eax
1000b9ca:	jne    0x1000ba11
1000b9cc:	mov    ebx,0x100b9dcc
1000b9d1:	call   0x1000f070
1000b9d6:	mov    ecx,0x100b9d80
1000b9db:	mov    esi,eax
1000b9dd:	call   0x1000ee70
1000b9e2:	push   eax
1000b9e3:	call   DWORD PTR ds:0x1002f108
1000b9e9:	mov    ebx,0x1
1000b9ee:	add    DWORD PTR ds:0x100c8ab4,ebx
1000b9f4:	test   eax,eax
1000b9f6:	je     0x1000ba08
1000b9f8:	push   esi
1000b9f9:	push   eax
1000b9fa:	call   DWORD PTR ds:0x1002f050
1000ba00:	add    DWORD PTR ds:0x100c8ab8,ebx
1000ba06:	jmp    0x1000ba0a
1000ba08:	xor    eax,eax
1000ba0a:	mov    ds:0x100c9fc4,eax
1000ba0f:	xor    esi,esi
1000ba11:	lea    edx,[esp+0x14]
1000ba15:	push   edx
1000ba16:	push   0x40
1000ba18:	push   edi
1000ba19:	push   ebp
1000ba1a:	call   DWORD PTR ds:0x100c9fc4
1000ba20:	mov    eax,DWORD PTR [esp+0x1958]
1000ba27:	sub    eax,DWORD PTR [esp+0x1960]
1000ba2e:	mov    edx,DWORD PTR [esp+0x20]
1000ba32:	lea    ecx,[ebp+0x1]
1000ba35:	sub    eax,ecx
1000ba37:	lea    eax,[eax+edx*1-0x4]
1000ba3b:	mov    edx,DWORD PTR [esp+0x14]
1000ba3f:	mov    BYTE PTR [ebp+0x0],0xe9
1000ba43:	mov    DWORD PTR [ecx],eax
1000ba45:	lea    ecx,[esp+0x10]
1000ba49:	push   ecx
1000ba4a:	push   edx
1000ba4b:	push   0x5
1000ba4d:	push   ebp
1000ba4e:	mov    DWORD PTR [esp+0x20],esi
1000ba52:	call   0x1000e210
1000ba57:	call   eax
1000ba59:	pop    edi
1000ba5a:	pop    esi
1000ba5b:	pop    ebp
1000ba5c:	mov    eax,0x1
1000ba61:	pop    ebx
1000ba62:	add    esp,0x1938
1000ba68:	ret    
1000ba69:	int3   
1000ba6a:	int3   
1000ba6b:	int3   
1000ba6c:	int3   
1000ba6d:	int3   
1000ba6e:	int3   
1000ba6f:	int3   
1000ba70:	push   ecx
1000ba71:	mov    ecx,DWORD PTR [esp+0x1c]
1000ba75:	push   ebx
1000ba76:	mov    ebx,DWORD PTR [esp+0x10]
1000ba7a:	push   esi
1000ba7b:	push   edi
1000ba7c:	mov    edi,DWORD PTR [esp+0x1c]
1000ba80:	mov    esi,eax
1000ba82:	mov    eax,DWORD PTR [esp+0x2c]
1000ba86:	push   eax
1000ba87:	mov    eax,ds:0x100c8aec
1000ba8c:	push   ecx
1000ba8d:	push   edi
1000ba8e:	push   ebx
1000ba8f:	push   edx
1000ba90:	push   eax
1000ba91:	push   esi
1000ba92:	call   0x1000b7d0
1000ba97:	add    esp,0x1c
1000ba9a:	test   eax,eax
1000ba9c:	jne    0x1000baa3
1000ba9e:	pop    edi
1000ba9f:	pop    esi
1000baa0:	pop    ebx
1000baa1:	pop    ecx
1000baa2:	ret    
1000baa3:	mov    ecx,DWORD PTR [esp+0x24]
1000baa7:	mov    edx,DWORD PTR [esp+0x20]
1000baab:	mov    eax,DWORD PTR [esp+0x14]
1000baaf:	push   edi
1000bab0:	push   ebx
1000bab1:	push   ecx
1000bab2:	push   edx
1000bab3:	push   eax
1000bab4:	call   0x1000b770
1000bab9:	add    esp,0x14
1000babc:	pop    edi
1000babd:	pop    esi
1000babe:	mov    eax,0x1
1000bac3:	pop    ebx
1000bac4:	pop    ecx
1000bac5:	ret    
1000bac6:	int3   
1000bac7:	int3   
1000bac8:	int3   
1000bac9:	int3   
1000baca:	int3   
1000bacb:	int3   
1000bacc:	int3   
1000bacd:	int3   
1000bace:	int3   
1000bacf:	int3   
1000bad0:	sub    esp,0x8
1000bad3:	push   ebx
1000bad4:	push   ebp
1000bad5:	push   edi
1000bad6:	push   0x20
1000bad8:	mov    DWORD PTR [esp+0x14],0x0
1000bae0:	call   0x1001868d
1000bae5:	add    esp,0x4
1000bae8:	push   0x20
1000baea:	mov    ebx,eax
1000baec:	call   0x1001868d
1000baf1:	mov    ebp,eax
1000baf3:	mov    eax,ds:0x100c8aec
1000baf8:	lea    eax,[eax+eax*2]
1000bafb:	add    eax,eax
1000bafd:	add    esp,0x4
1000bb00:	push   eax
1000bb01:	call   0x1001868d
1000bb06:	add    esp,0x4
1000bb09:	mov    DWORD PTR [esp+0xc],eax
1000bb0d:	mov    eax,ds:0x100c8aec
1000bb12:	push   0x40
1000bb14:	lea    eax,[eax+eax*2]
1000bb17:	push   0x3000
1000bb1c:	add    eax,eax
1000bb1e:	push   eax
1000bb1f:	push   0x0
1000bb21:	push   esi
1000bb22:	call   DWORD PTR ds:0x1002f100
1000bb28:	mov    edi,eax
1000bb2a:	test   edi,edi
1000bb2c:	je     0x1000bbe4
1000bb32:	mov    eax,DWORD PTR [esp+0x18]
1000bb36:	push   0x0
1000bb38:	push   0x20
1000bb3a:	push   ebx
1000bb3b:	push   eax
1000bb3c:	push   esi
1000bb3d:	call   0x1000e7d0
1000bb42:	call   eax
1000bb44:	test   eax,eax
1000bb46:	je     0x1000bbd5
1000bb4c:	mov    ecx,DWORD PTR [esp+0x1c]
1000bb50:	push   0x0
1000bb52:	push   0x20
1000bb54:	push   ebp
1000bb55:	push   ecx
1000bb56:	push   esi
1000bb57:	call   0x1000e7d0
1000bb5c:	call   eax
1000bb5e:	test   eax,eax
1000bb60:	je     0x1000bbd5
1000bb62:	mov    ecx,DWORD PTR [esp+0xc]
1000bb66:	mov    eax,edi
1000bb68:	sub    eax,ecx
1000bb6a:	cdq    
1000bb6b:	push   edx
1000bb6c:	push   eax
1000bb6d:	mov    eax,DWORD PTR [esp+0x24]
1000bb71:	sub    eax,ebp
1000bb73:	cdq    
1000bb74:	push   edx
1000bb75:	push   eax
1000bb76:	mov    eax,DWORD PTR [esp+0x28]
1000bb7a:	sub    eax,ebx
1000bb7c:	cdq    
1000bb7d:	push   edx
1000bb7e:	push   eax
1000bb7f:	push   ebp
1000bb80:	mov    edx,ecx
1000bb82:	mov    eax,ebx
1000bb84:	call   0x1000ba70
1000bb89:	add    esp,0x1c
1000bb8c:	test   eax,eax
1000bb8e:	je     0x1000bbd5
1000bb90:	mov    eax,ds:0x100c8aec
1000bb95:	mov    edx,DWORD PTR [esp+0xc]
1000bb99:	lea    eax,[eax+eax*2]
1000bb9c:	push   0x0
1000bb9e:	add    eax,eax
1000bba0:	push   eax
1000bba1:	push   edx
1000bba2:	push   edi
1000bba3:	push   esi
1000bba4:	call   0x1000e750
1000bba9:	call   eax
1000bbab:	mov    eax,DWORD PTR [esp+0x18]
1000bbaf:	push   0x0
1000bbb1:	push   0x20
1000bbb3:	push   ebx
1000bbb4:	push   eax
1000bbb5:	push   esi
1000bbb6:	call   0x1000e750
1000bbbb:	call   eax
1000bbbd:	mov    ecx,DWORD PTR [esp+0x1c]
1000bbc1:	push   0x0
1000bbc3:	push   0x20
1000bbc5:	push   ebp
1000bbc6:	push   ecx
1000bbc7:	push   esi
1000bbc8:	call   0x1000e750
1000bbcd:	call   eax
1000bbcf:	mov    DWORD PTR [esp+0x10],edi
1000bbd3:	jmp    0x1000bbe4
1000bbd5:	push   0x8000
1000bbda:	push   0x0
1000bbdc:	push   edi
1000bbdd:	push   esi
1000bbde:	call   DWORD PTR ds:0x1002f104
1000bbe4:	push   ebx
1000bbe5:	call   0x1001a3d3
1000bbea:	add    esp,0x4
1000bbed:	push   ebp
1000bbee:	call   0x1001a3d3
1000bbf3:	mov    edx,DWORD PTR [esp+0x10]
1000bbf7:	add    esp,0x4
1000bbfa:	push   edx
1000bbfb:	call   0x1001a3d3
1000bc00:	mov    eax,DWORD PTR [esp+0x14]
1000bc04:	add    esp,0x4
1000bc07:	pop    edi
1000bc08:	pop    ebp
1000bc09:	pop    ebx
1000bc0a:	add    esp,0x8
1000bc0d:	ret    
1000bc0e:	int3   
1000bc0f:	int3   
1000bc10:	push   ebp
1000bc11:	mov    ebp,esp
1000bc13:	and    esp,0xfffffff8
1000bc16:	push   0xffffffff
1000bc18:	push   0x1002d9de
1000bc1d:	mov    eax,fs:0x0
1000bc23:	push   eax
1000bc24:	sub    esp,0x10
1000bc27:	push   ebx
1000bc28:	push   esi
1000bc29:	push   edi
1000bc2a:	mov    eax,ds:0x100c7654
1000bc2f:	xor    eax,esp
1000bc31:	push   eax
1000bc32:	lea    eax,[esp+0x20]
1000bc36:	mov    fs:0x0,eax
1000bc3c:	mov    ebx,0x1
1000bc41:	xor    esi,esi
1000bc43:	test   BYTE PTR ds:0x100ca040,bl
1000bc49:	jne    0x1000bc94
1000bc4b:	or     DWORD PTR ds:0x100ca040,ebx
1000bc51:	mov    DWORD PTR [esp+0x28],esi
1000bc55:	call   0x1000c810
1000bc5a:	mov    ds:0x100ca038,eax
1000bc5f:	mov    BYTE PTR [eax+0x15],bl
1000bc62:	mov    eax,ds:0x100ca038
1000bc67:	mov    DWORD PTR [eax+0x4],eax
1000bc6a:	mov    eax,ds:0x100ca038
1000bc6f:	mov    DWORD PTR [eax],eax
1000bc71:	mov    eax,ds:0x100ca038
1000bc76:	mov    DWORD PTR [eax+0x8],eax
1000bc79:	push   0x1002eaa0
1000bc7e:	mov    DWORD PTR ds:0x100ca03c,esi
1000bc84:	call   0x10018ca7
1000bc89:	add    esp,0x4
1000bc8c:	mov    DWORD PTR [esp+0x28],0xffffffff
1000bc94:	lea    ebx,[ebp+0x8]
1000bc97:	lea    eax,[esp+0x14]
1000bc9b:	call   0x1000bda0
1000bca0:	mov    eax,DWORD PTR [esp+0x14]
1000bca4:	cmp    eax,esi
1000bca6:	mov    edi,DWORD PTR ds:0x100ca038
1000bcac:	je     0x1000bcb5
1000bcae:	cmp    eax,0x100ca034
1000bcb3:	je     0x1000bcba
1000bcb5:	call   0x10018de3
1000bcba:	cmp    DWORD PTR [esp+0x18],edi
1000bcbe:	jne    0x1000bcea
1000bcc0:	push   0x40
1000bcc2:	push   0x1000
1000bcc7:	push   0x5
1000bcc9:	push   esi
1000bcca:	call   DWORD PTR ds:0x1002f124
1000bcd0:	mov    esi,eax
1000bcd2:	mov    eax,DWORD PTR [ebp+0x8]
1000bcd5:	sub    eax,esi
1000bcd7:	sub    eax,0x5
1000bcda:	mov    DWORD PTR [esi+0x1],eax
1000bcdd:	lea    ebx,[ebp+0x8]
1000bce0:	mov    BYTE PTR [esi],0xe9
1000bce3:	call   0x1000bd20
1000bce8:	mov    DWORD PTR [eax],esi
1000bcea:	lea    ebx,[ebp+0x8]
1000bced:	call   0x1000bd20
1000bcf2:	mov    eax,DWORD PTR [eax]
1000bcf4:	mov    ecx,DWORD PTR [esp+0x20]
1000bcf8:	mov    DWORD PTR fs:0x0,ecx
1000bcff:	pop    ecx
1000bd00:	pop    edi
1000bd01:	pop    esi
1000bd02:	pop    ebx
1000bd03:	mov    esp,ebp
1000bd05:	pop    ebp
1000bd06:	ret    
1000bd07:	int3   
1000bd08:	int3   
1000bd09:	int3   
1000bd0a:	int3   
1000bd0b:	int3   
1000bd0c:	int3   
1000bd0d:	int3   
1000bd0e:	int3   
1000bd0f:	int3   
1000bd10:	mov    ecx,DWORD PTR [eax]
1000bd12:	push   ecx
1000bd13:	call   0x1001876e
1000bd18:	pop    ecx
1000bd19:	ret    
1000bd1a:	int3   
1000bd1b:	int3   
1000bd1c:	int3   
1000bd1d:	int3   
1000bd1e:	int3   
1000bd1f:	int3   
1000bd20:	mov    ecx,DWORD PTR ds:0x100ca038
1000bd26:	mov    eax,DWORD PTR [ecx+0x4]
1000bd29:	sub    esp,0x14
1000bd2c:	cmp    BYTE PTR [eax+0x15],0x0
1000bd30:	push   esi
1000bd31:	push   edi
1000bd32:	mov    edi,ecx
1000bd34:	jne    0x1000bd4c
1000bd36:	mov    edx,DWORD PTR [ebx]
1000bd38:	cmp    DWORD PTR [eax+0xc],edx
1000bd3b:	jae    0x1000bd42
1000bd3d:	mov    eax,DWORD PTR [eax+0x8]
1000bd40:	jmp    0x1000bd46
1000bd42:	mov    edi,eax
1000bd44:	mov    eax,DWORD PTR [eax]
1000bd46:	cmp    BYTE PTR [eax+0x15],0x0
1000bd4a:	je     0x1000bd38
1000bd4c:	cmp    edi,ecx
1000bd4e:	mov    esi,0x100ca034
1000bd53:	je     0x1000bd5c
1000bd55:	mov    eax,DWORD PTR [ebx]
1000bd57:	cmp    eax,DWORD PTR [edi+0xc]
1000bd5a:	jae    0x1000bd89
1000bd5c:	mov    ecx,DWORD PTR [ebx]
1000bd5e:	push   edi
1000bd5f:	push   esi
1000bd60:	lea    edx,[esp+0x10]
1000bd64:	push   edx
1000bd65:	lea    eax,[esp+0x1c]
1000bd69:	push   eax
1000bd6a:	mov    DWORD PTR [esp+0x18],ecx
1000bd6e:	mov    DWORD PTR [esp+0x1c],0x0
1000bd76:	call   0x1000be40
1000bd7b:	mov    esi,DWORD PTR [eax]
1000bd7d:	test   esi,esi
1000bd7f:	mov    edi,DWORD PTR [eax+0x4]
1000bd82:	jne    0x1000bd89
1000bd84:	call   0x10018de3
1000bd89:	cmp    edi,DWORD PTR [esi+0x4]
1000bd8c:	jne    0x1000bd93
1000bd8e:	call   0x10018de3
1000bd93:	lea    eax,[edi+0x10]
1000bd96:	pop    edi
1000bd97:	pop    esi
1000bd98:	add    esp,0x14
1000bd9b:	ret    
1000bd9c:	int3   
1000bd9d:	int3   
1000bd9e:	int3   
1000bd9f:	int3   
1000bda0:	sub    esp,0x14
1000bda3:	push   esi
1000bda4:	mov    esi,DWORD PTR ds:0x100ca038
1000bdaa:	mov    ecx,DWORD PTR [esi+0x4]
1000bdad:	cmp    BYTE PTR [ecx+0x15],0x0
1000bdb1:	push   edi
1000bdb2:	mov    edx,esi
1000bdb4:	jne    0x1000bdcc
1000bdb6:	mov    edi,DWORD PTR [ebx]
1000bdb8:	cmp    DWORD PTR [ecx+0xc],edi
1000bdbb:	jae    0x1000bdc2
1000bdbd:	mov    ecx,DWORD PTR [ecx+0x8]
1000bdc0:	jmp    0x1000bdc6
1000bdc2:	mov    edx,ecx
1000bdc4:	mov    ecx,DWORD PTR [ecx]
1000bdc6:	cmp    BYTE PTR [ecx+0x15],0x0
1000bdca:	je     0x1000bdb8
1000bdcc:	cmp    edx,esi
1000bdce:	mov    ecx,0x100ca034
1000bdd3:	mov    DWORD PTR [esp+0xc],edx
1000bdd7:	mov    DWORD PTR [esp+0x8],ecx
1000bddb:	je     0x1000bdf8
1000bddd:	mov    edi,DWORD PTR [ebx]
1000bddf:	cmp    edi,DWORD PTR [edx+0xc]
1000bde2:	jb     0x1000bdf8
1000bde4:	lea    ecx,[esp+0x8]
1000bde8:	mov    edx,DWORD PTR [ecx]
1000bdea:	mov    ecx,DWORD PTR [ecx+0x4]
1000bded:	mov    DWORD PTR [eax],edx
1000bdef:	mov    DWORD PTR [eax+0x4],ecx
1000bdf2:	pop    edi
1000bdf3:	pop    esi
1000bdf4:	add    esp,0x14
1000bdf7:	ret    
1000bdf8:	mov    DWORD PTR [esp+0x10],ecx
1000bdfc:	mov    DWORD PTR [esp+0x14],esi
1000be00:	lea    ecx,[esp+0x10]
1000be04:	mov    edx,DWORD PTR [ecx]
1000be06:	mov    ecx,DWORD PTR [ecx+0x4]
1000be09:	pop    edi
1000be0a:	mov    DWORD PTR [eax],edx
1000be0c:	mov    DWORD PTR [eax+0x4],ecx
1000be0f:	pop    esi
1000be10:	add    esp,0x14
1000be13:	ret    
1000be14:	int3   
1000be15:	int3   
1000be16:	int3   
1000be17:	int3   
1000be18:	int3   
1000be19:	int3   
1000be1a:	int3   
1000be1b:	int3   
1000be1c:	int3   
1000be1d:	int3   
1000be1e:	int3   
1000be1f:	int3   
1000be20:	mov    eax,DWORD PTR [edi]
1000be22:	test   eax,eax
1000be24:	je     0x1000be2a
1000be26:	cmp    eax,DWORD PTR [esi]
1000be28:	je     0x1000be2f
1000be2a:	call   0x10018de3
1000be2f:	mov    eax,DWORD PTR [edi+0x4]
1000be32:	xor    ecx,ecx
1000be34:	cmp    eax,DWORD PTR [esi+0x4]
1000be37:	sete   cl
1000be3a:	mov    al,cl
1000be3c:	ret    
1000be3d:	int3   
1000be3e:	int3   
1000be3f:	int3   
1000be40:	mov    ecx,DWORD PTR ds:0x100ca038
1000be46:	sub    esp,0x14
1000be49:	cmp    DWORD PTR ds:0x100ca03c,0x0
1000be50:	push   ebx
1000be51:	push   ebp
1000be52:	mov    ebp,DWORD PTR [esp+0x20]
1000be56:	push   esi
1000be57:	push   edi
1000be58:	jne    0x1000be73
1000be5a:	mov    eax,DWORD PTR [esp+0x2c]
1000be5e:	push   eax
1000be5f:	push   0x1
1000be61:	push   ebp
1000be62:	call   0x1000c200
1000be67:	mov    eax,ebp
1000be69:	pop    edi
1000be6a:	pop    esi
1000be6b:	pop    ebp
1000be6c:	pop    ebx
1000be6d:	add    esp,0x14
1000be70:	ret    0x10
1000be73:	mov    edi,DWORD PTR [esp+0x30]
1000be77:	test   edi,edi
1000be79:	mov    esi,DWORD PTR [ecx]
1000be7b:	je     0x1000be85
1000be7d:	cmp    edi,0x100ca034
1000be83:	je     0x1000be8a
1000be85:	call   0x10018de3
1000be8a:	mov    ebx,DWORD PTR [esp+0x34]
1000be8e:	cmp    ebx,esi
1000be90:	jne    0x1000beb8
1000be92:	mov    eax,DWORD PTR [esp+0x2c]
1000be96:	mov    edx,DWORD PTR [eax]
1000be98:	cmp    edx,DWORD PTR [ebx+0xc]
1000be9b:	jae    0x1000bfdb
1000bea1:	push   eax
1000bea2:	push   0x1
1000bea4:	push   ebp
1000bea5:	mov    ecx,ebx
1000bea7:	call   0x1000c200
1000beac:	mov    eax,ebp
1000beae:	pop    edi
1000beaf:	pop    esi
1000beb0:	pop    ebp
1000beb1:	pop    ebx
1000beb2:	add    esp,0x14
1000beb5:	ret    0x10
1000beb8:	test   edi,edi
1000beba:	mov    esi,DWORD PTR ds:0x100ca038
1000bec0:	je     0x1000beca
1000bec2:	cmp    edi,0x100ca034
1000bec8:	je     0x1000becf
1000beca:	call   0x10018de3
1000becf:	cmp    ebx,esi
1000bed1:	jne    0x1000bf01
1000bed3:	mov    eax,ds:0x100ca038
1000bed8:	mov    ecx,DWORD PTR [eax+0x8]
1000bedb:	mov    edx,DWORD PTR [ecx+0xc]
1000bede:	mov    eax,DWORD PTR [esp+0x2c]
1000bee2:	cmp    edx,DWORD PTR [eax]
1000bee4:	jae    0x1000bfd7
1000beea:	mov    edx,eax
1000beec:	push   edx
1000beed:	push   0x0
1000beef:	push   ebp
1000bef0:	call   0x1000c200
1000bef5:	mov    eax,ebp
1000bef7:	pop    edi
1000bef8:	pop    esi
1000bef9:	pop    ebp
1000befa:	pop    ebx
1000befb:	add    esp,0x14
1000befe:	ret    0x10
1000bf01:	mov    eax,DWORD PTR [esp+0x2c]
1000bf05:	mov    eax,DWORD PTR [eax]
1000bf07:	cmp    DWORD PTR [ebx+0xc],eax
1000bf0a:	jbe    0x1000bf51
1000bf0c:	lea    esi,[esp+0x30]
1000bf10:	mov    DWORD PTR [esp+0x30],edi
1000bf14:	mov    DWORD PTR [esp+0x34],ebx
1000bf18:	call   0x1000c8f0
1000bf1d:	mov    edx,DWORD PTR [esp+0x2c]
1000bf21:	mov    eax,DWORD PTR [edx]
1000bf23:	mov    ecx,DWORD PTR [esp+0x34]
1000bf27:	cmp    DWORD PTR [ecx+0xc],eax
1000bf2a:	jae    0x1000bf4e
1000bf2c:	mov    eax,DWORD PTR [ecx+0x8]
1000bf2f:	cmp    BYTE PTR [eax+0x15],0x0
1000bf33:	push   edx
1000bf34:	je     0x1000bea2
1000bf3a:	push   0x0
1000bf3c:	push   ebp
1000bf3d:	call   0x1000c200
1000bf42:	mov    eax,ebp
1000bf44:	pop    edi
1000bf45:	pop    esi
1000bf46:	pop    ebp
1000bf47:	pop    ebx
1000bf48:	add    esp,0x14
1000bf4b:	ret    0x10
1000bf4e:	cmp    DWORD PTR [ebx+0xc],eax
1000bf51:	jae    0x1000bfd7
1000bf57:	mov    ecx,DWORD PTR ds:0x100ca038
1000bf5d:	lea    esi,[esp+0x30]
1000bf61:	mov    DWORD PTR [esp+0x30],edi
1000bf65:	mov    DWORD PTR [esp+0x34],ebx
1000bf69:	mov    DWORD PTR [esp+0x18],ecx
1000bf6d:	mov    DWORD PTR [esp+0x14],0x100ca034
1000bf75:	call   0x1000c970
1000bf7a:	lea    esi,[esp+0x14]
1000bf7e:	lea    edi,[esp+0x30]
1000bf82:	call   0x1000be20
1000bf87:	test   al,al
1000bf89:	mov    ecx,DWORD PTR [esp+0x34]
1000bf8d:	jne    0x1000bf9a
1000bf8f:	mov    edx,DWORD PTR [esp+0x2c]
1000bf93:	mov    eax,DWORD PTR [edx]
1000bf95:	cmp    eax,DWORD PTR [ecx+0xc]
1000bf98:	jae    0x1000bfd7
1000bf9a:	mov    edx,DWORD PTR [ebx+0x8]
1000bf9d:	cmp    BYTE PTR [edx+0x15],0x0
1000bfa1:	je     0x1000bfbe
1000bfa3:	mov    eax,DWORD PTR [esp+0x2c]
1000bfa7:	push   eax
1000bfa8:	push   0x0
1000bfaa:	push   ebp
1000bfab:	mov    ecx,ebx
1000bfad:	call   0x1000c200
1000bfb2:	mov    eax,ebp
1000bfb4:	pop    edi
1000bfb5:	pop    esi
1000bfb6:	pop    ebp
1000bfb7:	pop    ebx
1000bfb8:	add    esp,0x14
1000bfbb:	ret    0x10
1000bfbe:	mov    edx,DWORD PTR [esp+0x2c]
1000bfc2:	push   edx
1000bfc3:	push   0x1
1000bfc5:	push   ebp
1000bfc6:	call   0x1000c200
1000bfcb:	mov    eax,ebp
1000bfcd:	pop    edi
1000bfce:	pop    esi
1000bfcf:	pop    ebp
1000bfd0:	pop    ebx
1000bfd1:	add    esp,0x14
1000bfd4:	ret    0x10
1000bfd7:	mov    eax,DWORD PTR [esp+0x2c]
1000bfdb:	mov    ebx,eax
1000bfdd:	lea    edi,[esp+0x14]
1000bfe1:	call   0x1000c000
1000bfe6:	mov    ecx,DWORD PTR [eax]
1000bfe8:	pop    edi
1000bfe9:	mov    DWORD PTR [ebp+0x0],ecx
1000bfec:	mov    edx,DWORD PTR [eax+0x4]
1000bfef:	pop    esi
1000bff0:	mov    DWORD PTR [ebp+0x4],edx
1000bff3:	mov    eax,ebp
1000bff5:	pop    ebp
1000bff6:	pop    ebx
1000bff7:	add    esp,0x14
1000bffa:	ret    0x10
1000bffd:	int3   
1000bffe:	int3   
1000bfff:	int3   
1000c000:	sub    esp,0x14
1000c003:	push   ebp
1000c004:	push   esi
1000c005:	mov    esi,DWORD PTR ds:0x100ca038
1000c00b:	mov    eax,DWORD PTR [esi+0x4]
1000c00e:	cmp    BYTE PTR [eax+0x15],0x0
1000c012:	mov    cl,0x1
1000c014:	mov    ebp,esi
1000c016:	mov    BYTE PTR [esp+0xc],cl
1000c01a:	jne    0x1000c03d
1000c01c:	mov    edx,DWORD PTR [ebx]
1000c01e:	mov    edi,edi
1000c020:	cmp    edx,DWORD PTR [eax+0xc]
1000c023:	mov    ebp,eax
1000c025:	setb   cl
1000c028:	test   cl,cl
1000c02a:	mov    BYTE PTR [esp+0xc],cl
1000c02e:	je     0x1000c034
1000c030:	mov    eax,DWORD PTR [eax]
1000c032:	jmp    0x1000c037
1000c034:	mov    eax,DWORD PTR [eax+0x8]
1000c037:	cmp    BYTE PTR [eax+0x15],0x0
1000c03b:	je     0x1000c020
1000c03d:	test   cl,cl
1000c03f:	mov    eax,ebp
1000c041:	mov    DWORD PTR [esp+0x14],eax
1000c045:	mov    DWORD PTR [esp+0x10],0x100ca034
1000c04d:	je     0x1000c085
1000c04f:	cmp    ebp,DWORD PTR [esi]
1000c051:	jne    0x1000c078
1000c053:	push   ebx
1000c054:	push   0x1
1000c056:	lea    eax,[esp+0x18]
1000c05a:	push   eax
1000c05b:	mov    ecx,ebp
1000c05d:	call   0x1000c200
1000c062:	mov    ecx,DWORD PTR [eax]
1000c064:	mov    edx,DWORD PTR [eax+0x4]
1000c067:	mov    DWORD PTR [edi+0x4],edx
1000c06a:	mov    BYTE PTR [edi+0x8],0x1
1000c06e:	mov    DWORD PTR [edi],ecx
1000c070:	mov    eax,edi
1000c072:	pop    esi
1000c073:	pop    ebp
1000c074:	add    esp,0x14
1000c077:	ret    
1000c078:	lea    esi,[esp+0x10]
1000c07c:	call   0x1000c8f0
1000c081:	mov    eax,DWORD PTR [esp+0x14]
1000c085:	mov    ecx,DWORD PTR [eax+0xc]
1000c088:	cmp    ecx,DWORD PTR [ebx]
1000c08a:	jae    0x1000c094
1000c08c:	mov    edx,DWORD PTR [esp+0xc]
1000c090:	push   ebx
1000c091:	push   edx
1000c092:	jmp    0x1000c056
1000c094:	mov    ecx,DWORD PTR [esp+0x10]
1000c098:	pop    esi
1000c099:	mov    DWORD PTR [edi+0x4],eax
1000c09c:	mov    BYTE PTR [edi+0x8],0x0
1000c0a0:	mov    DWORD PTR [edi],ecx
1000c0a2:	mov    eax,edi
1000c0a4:	pop    ebp
1000c0a5:	add    esp,0x14
1000c0a8:	ret    
1000c0a9:	int3   
1000c0aa:	int3   
1000c0ab:	int3   
1000c0ac:	int3   
1000c0ad:	int3   
1000c0ae:	int3   
1000c0af:	int3   
1000c0b0:	mov    eax,ds:0x100ca038
1000c0b5:	push   ebx
1000c0b6:	mov    ebx,DWORD PTR [esp+0xc]
1000c0ba:	test   ebx,ebx
1000c0bc:	push   ebp
1000c0bd:	mov    ebp,DWORD PTR [esp+0xc]
1000c0c1:	push   esi
1000c0c2:	push   edi
1000c0c3:	mov    edi,DWORD PTR [eax]
1000c0c5:	je     0x1000c0cf
1000c0c7:	cmp    ebx,0x100ca034
1000c0cd:	je     0x1000c0d4
1000c0cf:	call   0x10018de3
1000c0d4:	mov    esi,DWORD PTR [esp+0x1c]
1000c0d8:	cmp    esi,edi
1000c0da:	jne    0x1000c150
1000c0dc:	mov    eax,DWORD PTR [esp+0x20]
1000c0e0:	test   eax,eax
1000c0e2:	mov    edi,DWORD PTR ds:0x100ca038
1000c0e8:	je     0x1000c0f1
1000c0ea:	cmp    eax,0x100ca034
1000c0ef:	je     0x1000c0f6
1000c0f1:	call   0x10018de3
1000c0f6:	cmp    DWORD PTR [esp+0x24],edi
1000c0fa:	jne    0x1000c150
1000c0fc:	mov    ecx,DWORD PTR ds:0x100ca038
1000c102:	mov    edx,DWORD PTR [ecx+0x4]
1000c105:	push   edx
1000c106:	mov    ecx,0x100ca034
1000c10b:	call   0x1000c890
1000c110:	mov    eax,ds:0x100ca038
1000c115:	mov    DWORD PTR [eax+0x4],eax
1000c118:	mov    eax,ds:0x100ca038
1000c11d:	mov    DWORD PTR ds:0x100ca03c,0x0
1000c127:	mov    DWORD PTR [eax],eax
1000c129:	mov    eax,ds:0x100ca038
1000c12e:	mov    DWORD PTR [eax+0x8],eax
1000c131:	mov    eax,ds:0x100ca038
1000c136:	mov    ecx,DWORD PTR [eax]
1000c138:	mov    DWORD PTR [ebp+0x4],ecx
1000c13b:	mov    DWORD PTR [ebp+0x0],0x100ca034
1000c142:	mov    eax,ebp
1000c144:	pop    edi
1000c145:	pop    esi
1000c146:	pop    ebp
1000c147:	pop    ebx
1000c148:	ret    0x14
1000c14b:	jmp    0x1000c150
1000c14d:	lea    ecx,[ecx+0x0]
1000c150:	test   ebx,ebx
1000c152:	je     0x1000c15a
1000c154:	cmp    ebx,DWORD PTR [esp+0x20]
1000c158:	je     0x1000c15f
1000c15a:	call   0x10018de3
1000c15f:	cmp    esi,DWORD PTR [esp+0x24]
1000c163:	je     0x1000c1e4
1000c165:	test   ebx,ebx
1000c167:	mov    edi,esi
1000c169:	jne    0x1000c170
1000c16b:	call   0x10018de3
1000c170:	cmp    BYTE PTR [esi+0x15],0x0
1000c174:	je     0x1000c189
1000c176:	call   0x10018de3
1000c17b:	push   edi
1000c17c:	push   ebx
1000c17d:	lea    edx,[esp+0x20]
1000c181:	push   edx
1000c182:	call   0x1000c4a0
1000c187:	jmp    0x1000c150
1000c189:	mov    eax,DWORD PTR [esi+0x8]
1000c18c:	cmp    BYTE PTR [eax+0x15],0x0
1000c190:	jne    0x1000c1b8
1000c192:	mov    esi,eax
1000c194:	mov    eax,DWORD PTR [esi]
1000c196:	cmp    BYTE PTR [eax+0x15],0x0
1000c19a:	jne    0x1000c1d3
1000c19c:	lea    esp,[esp+0x0]
1000c1a0:	mov    esi,eax
1000c1a2:	mov    eax,DWORD PTR [esi]
1000c1a4:	cmp    BYTE PTR [eax+0x15],0x0
1000c1a8:	je     0x1000c1a0
1000c1aa:	push   edi
1000c1ab:	push   ebx
1000c1ac:	lea    edx,[esp+0x20]
1000c1b0:	push   edx
1000c1b1:	call   0x1000c4a0
1000c1b6:	jmp    0x1000c150
1000c1b8:	mov    eax,DWORD PTR [esi+0x4]
1000c1bb:	cmp    BYTE PTR [eax+0x15],0x0
1000c1bf:	jne    0x1000c1d1
1000c1c1:	cmp    esi,DWORD PTR [eax+0x8]
1000c1c4:	jne    0x1000c1d1
1000c1c6:	mov    esi,eax
1000c1c8:	mov    eax,DWORD PTR [eax+0x4]
1000c1cb:	cmp    BYTE PTR [eax+0x15],0x0
1000c1cf:	je     0x1000c1c1
1000c1d1:	mov    esi,eax
1000c1d3:	push   edi
1000c1d4:	push   ebx
1000c1d5:	lea    edx,[esp+0x20]
1000c1d9:	push   edx
1000c1da:	call   0x1000c4a0
1000c1df:	jmp    0x1000c150
1000c1e4:	pop    edi
1000c1e5:	mov    DWORD PTR [ebp+0x4],esi
1000c1e8:	pop    esi
1000c1e9:	mov    DWORD PTR [ebp+0x0],ebx
1000c1ec:	mov    eax,ebp
1000c1ee:	pop    ebp
1000c1ef:	pop    ebx
1000c1f0:	ret    0x14
1000c1f3:	int3   
1000c1f4:	int3   
1000c1f5:	int3   
1000c1f6:	int3   
1000c1f7:	int3   
1000c1f8:	int3   
1000c1f9:	int3   
1000c1fa:	int3   
1000c1fb:	int3   
1000c1fc:	int3   
1000c1fd:	int3   
1000c1fe:	int3   
1000c1ff:	int3   
1000c200:	push   0xffffffff
1000c202:	push   0x1002d9a8
1000c207:	mov    eax,fs:0x0
1000c20d:	push   eax
1000c20e:	sub    esp,0x48
1000c211:	push   ebx
1000c212:	push   ebp
1000c213:	push   esi
1000c214:	push   edi
1000c215:	mov    eax,ds:0x100c7654
1000c21a:	xor    eax,esp
1000c21c:	push   eax
1000c21d:	lea    eax,[esp+0x5c]
1000c221:	mov    fs:0x0,eax
1000c227:	mov    edi,ecx
1000c229:	cmp    DWORD PTR ds:0x100ca03c,0x1ffffffe
1000c233:	jb     0x1000c280
1000c235:	push   0x13
1000c237:	xor    ebx,ebx
1000c239:	push   0x100b7e1c
1000c23e:	lea    ecx,[esp+0x1c]
1000c242:	mov    DWORD PTR [esp+0x34],0xf
1000c24a:	mov    DWORD PTR [esp+0x30],ebx
1000c24e:	mov    BYTE PTR [esp+0x20],bl
1000c252:	call   0x10003a70
1000c257:	lea    eax,[esp+0x14]
1000c25b:	push   eax
1000c25c:	lea    ecx,[esp+0x34]
1000c260:	mov    DWORD PTR [esp+0x68],ebx
1000c264:	call   0x10001400
1000c269:	push   0x100bba14
1000c26e:	lea    ecx,[esp+0x34]
1000c272:	push   ecx
1000c273:	mov    DWORD PTR [esp+0x38],0x1002f4f8
1000c27b:	call   0x10018e6e
1000c280:	mov    eax,ds:0x100ca038
1000c285:	mov    esi,DWORD PTR [esp+0x74]
1000c289:	push   eax
1000c28a:	push   edi
1000c28b:	push   eax
1000c28c:	call   0x1000c850
1000c291:	mov    ecx,DWORD PTR ds:0x100ca038
1000c297:	mov    ebp,eax
1000c299:	mov    eax,0x1
1000c29e:	add    DWORD PTR ds:0x100ca03c,eax
1000c2a4:	xor    ebx,ebx
1000c2a6:	cmp    edi,ecx
1000c2a8:	jne    0x1000c2bd
1000c2aa:	mov    DWORD PTR [ecx+0x4],ebp
1000c2ad:	mov    edx,DWORD PTR ds:0x100ca038
1000c2b3:	mov    DWORD PTR [edx],ebp
1000c2b5:	mov    ecx,DWORD PTR ds:0x100ca038
1000c2bb:	jmp    0x1000c2e1
1000c2bd:	cmp    BYTE PTR [esp+0x70],bl
1000c2c1:	je     0x1000c2d3
1000c2c3:	mov    DWORD PTR [edi],ebp
1000c2c5:	mov    ecx,DWORD PTR ds:0x100ca038
1000c2cb:	cmp    edi,DWORD PTR [ecx]
1000c2cd:	jne    0x1000c2e4
1000c2cf:	mov    DWORD PTR [ecx],ebp
1000c2d1:	jmp    0x1000c2e4
1000c2d3:	mov    DWORD PTR [edi+0x8],ebp
1000c2d6:	mov    ecx,DWORD PTR ds:0x100ca038
1000c2dc:	cmp    edi,DWORD PTR [ecx+0x8]
1000c2df:	jne    0x1000c2e4
1000c2e1:	mov    DWORD PTR [ecx+0x8],ebp
1000c2e4:	mov    esi,DWORD PTR [ebp+0x4]
1000c2e7:	cmp    BYTE PTR [esi+0x14],bl
1000c2ea:	lea    ecx,[ebp+0x4]
1000c2ed:	mov    edx,ebp
1000c2ef:	jne    0x1000c46f
1000c2f5:	mov    esi,DWORD PTR [ecx]
1000c2f7:	mov    edi,DWORD PTR [esi+0x4]
1000c2fa:	cmp    esi,DWORD PTR [edi]
1000c2fc:	jne    0x1000c3ae
1000c302:	mov    edi,DWORD PTR [edi+0x8]
1000c305:	cmp    BYTE PTR [edi+0x14],bl
1000c308:	je     0x1000c3b5
1000c30e:	cmp    edx,DWORD PTR [esi+0x8]
1000c311:	jne    0x1000c351
1000c313:	mov    edx,esi
1000c315:	mov    esi,DWORD PTR [edx+0x8]
1000c318:	mov    ecx,DWORD PTR [esi]
1000c31a:	mov    DWORD PTR [edx+0x8],ecx
1000c31d:	mov    ecx,DWORD PTR [esi]
1000c31f:	cmp    BYTE PTR [ecx+0x15],bl
1000c322:	jne    0x1000c327
1000c324:	mov    DWORD PTR [ecx+0x4],edx
1000c327:	mov    edi,DWORD PTR [edx+0x4]
1000c32a:	lea    ecx,[edx+0x4]
1000c32d:	mov    DWORD PTR [esi+0x4],edi
1000c330:	mov    edi,DWORD PTR ds:0x100ca038
1000c336:	cmp    edx,DWORD PTR [edi+0x4]
1000c339:	jne    0x1000c340
1000c33b:	mov    DWORD PTR [edi+0x4],esi
1000c33e:	jmp    0x1000c34d
1000c340:	mov    edi,DWORD PTR [ecx]
1000c342:	cmp    edx,DWORD PTR [edi]
1000c344:	jne    0x1000c34a
1000c346:	mov    DWORD PTR [edi],esi
1000c348:	jmp    0x1000c34d
1000c34a:	mov    DWORD PTR [edi+0x8],esi
1000c34d:	mov    DWORD PTR [esi],edx
1000c34f:	mov    DWORD PTR [ecx],esi
1000c351:	mov    esi,DWORD PTR [ecx]
1000c353:	mov    BYTE PTR [esi+0x14],al
1000c356:	mov    esi,DWORD PTR [ecx]
1000c358:	mov    esi,DWORD PTR [esi+0x4]
1000c35b:	mov    BYTE PTR [esi+0x14],bl
1000c35e:	mov    ecx,DWORD PTR [ecx]
1000c360:	mov    ecx,DWORD PTR [ecx+0x4]
1000c363:	mov    esi,DWORD PTR [ecx]
1000c365:	mov    edi,DWORD PTR [esi+0x8]
1000c368:	mov    DWORD PTR [ecx],edi
1000c36a:	mov    edi,DWORD PTR [esi+0x8]
1000c36d:	cmp    BYTE PTR [edi+0x15],bl
1000c370:	jne    0x1000c375
1000c372:	mov    DWORD PTR [edi+0x4],ecx
1000c375:	mov    edi,DWORD PTR [ecx+0x4]
1000c378:	mov    DWORD PTR [esi+0x4],edi
1000c37b:	mov    edi,DWORD PTR ds:0x100ca038
1000c381:	cmp    ecx,DWORD PTR [edi+0x4]
1000c384:	jne    0x1000c391
1000c386:	mov    DWORD PTR [edi+0x4],esi
1000c389:	mov    DWORD PTR [esi+0x8],ecx
1000c38c:	jmp    0x1000c45d
1000c391:	mov    edi,DWORD PTR [ecx+0x4]
1000c394:	cmp    ecx,DWORD PTR [edi+0x8]
1000c397:	jne    0x1000c3a4
1000c399:	mov    DWORD PTR [edi+0x8],esi
1000c39c:	mov    DWORD PTR [esi+0x8],ecx
1000c39f:	jmp    0x1000c45d
1000c3a4:	mov    DWORD PTR [edi],esi
1000c3a6:	mov    DWORD PTR [esi+0x8],ecx
1000c3a9:	jmp    0x1000c45d
1000c3ae:	mov    edi,DWORD PTR [edi]
1000c3b0:	cmp    BYTE PTR [edi+0x14],bl
1000c3b3:	jne    0x1000c3cf
1000c3b5:	mov    edx,esi
1000c3b7:	mov    BYTE PTR [edx+0x14],al
1000c3ba:	mov    BYTE PTR [edi+0x14],al
1000c3bd:	mov    edx,DWORD PTR [ecx]
1000c3bf:	mov    edx,DWORD PTR [edx+0x4]
1000c3c2:	mov    BYTE PTR [edx+0x14],bl
1000c3c5:	mov    ecx,DWORD PTR [ecx]
1000c3c7:	mov    edx,DWORD PTR [ecx+0x4]
1000c3ca:	jmp    0x1000c460
1000c3cf:	cmp    edx,DWORD PTR [esi]
1000c3d1:	jne    0x1000c413
1000c3d3:	mov    edx,esi
1000c3d5:	mov    esi,DWORD PTR [edx]
1000c3d7:	mov    ecx,DWORD PTR [esi+0x8]
1000c3da:	mov    DWORD PTR [edx],ecx
1000c3dc:	mov    ecx,DWORD PTR [esi+0x8]
1000c3df:	cmp    BYTE PTR [ecx+0x15],bl
1000c3e2:	jne    0x1000c3e7
1000c3e4:	mov    DWORD PTR [ecx+0x4],edx
1000c3e7:	mov    edi,DWORD PTR [edx+0x4]
1000c3ea:	lea    ecx,[edx+0x4]
1000c3ed:	mov    DWORD PTR [esi+0x4],edi
1000c3f0:	mov    edi,DWORD PTR ds:0x100ca038
1000c3f6:	cmp    edx,DWORD PTR [edi+0x4]
1000c3f9:	jne    0x1000c400
1000c3fb:	mov    DWORD PTR [edi+0x4],esi
1000c3fe:	jmp    0x1000c40e
1000c400:	mov    edi,DWORD PTR [ecx]
1000c402:	cmp    edx,DWORD PTR [edi+0x8]
1000c405:	jne    0x1000c40c
1000c407:	mov    DWORD PTR [edi+0x8],esi
1000c40a:	jmp    0x1000c40e
1000c40c:	mov    DWORD PTR [edi],esi
1000c40e:	mov    DWORD PTR [esi+0x8],edx
1000c411:	mov    DWORD PTR [ecx],esi
1000c413:	mov    esi,DWORD PTR [ecx]
1000c415:	mov    BYTE PTR [esi+0x14],al
1000c418:	mov    esi,DWORD PTR [ecx]
1000c41a:	mov    esi,DWORD PTR [esi+0x4]
1000c41d:	mov    BYTE PTR [esi+0x14],bl
1000c420:	mov    ecx,DWORD PTR [ecx]
1000c422:	mov    ecx,DWORD PTR [ecx+0x4]
1000c425:	mov    esi,DWORD PTR [ecx+0x8]
1000c428:	mov    edi,DWORD PTR [esi]
1000c42a:	mov    DWORD PTR [ecx+0x8],edi
1000c42d:	mov    edi,DWORD PTR [esi]
1000c42f:	cmp    BYTE PTR [edi+0x15],bl
1000c432:	jne    0x1000c437
1000c434:	mov    DWORD PTR [edi+0x4],ecx
1000c437:	mov    edi,DWORD PTR [ecx+0x4]
1000c43a:	mov    DWORD PTR [esi+0x4],edi
1000c43d:	mov    edi,DWORD PTR ds:0x100ca038
1000c443:	cmp    ecx,DWORD PTR [edi+0x4]
1000c446:	jne    0x1000c44d
1000c448:	mov    DWORD PTR [edi+0x4],esi
1000c44b:	jmp    0x1000c45b
1000c44d:	mov    edi,DWORD PTR [ecx+0x4]
1000c450:	cmp    ecx,DWORD PTR [edi]
1000c452:	jne    0x1000c458
1000c454:	mov    DWORD PTR [edi],esi
1000c456:	jmp    0x1000c45b
1000c458:	mov    DWORD PTR [edi+0x8],esi
1000c45b:	mov    DWORD PTR [esi],ecx
1000c45d:	mov    DWORD PTR [ecx+0x4],esi
1000c460:	mov    esi,DWORD PTR [edx+0x4]
1000c463:	cmp    BYTE PTR [esi+0x14],bl
1000c466:	lea    ecx,[edx+0x4]
1000c469:	je     0x1000c2f5
1000c46f:	mov    edx,DWORD PTR ds:0x100ca038
1000c475:	mov    ecx,DWORD PTR [edx+0x4]
1000c478:	mov    BYTE PTR [ecx+0x14],al
1000c47b:	mov    eax,DWORD PTR [esp+0x6c]
1000c47f:	mov    DWORD PTR [eax+0x4],ebp
1000c482:	mov    DWORD PTR [eax],0x100ca034
1000c488:	mov    ecx,DWORD PTR [esp+0x5c]
1000c48c:	mov    DWORD PTR fs:0x0,ecx
1000c493:	pop    ecx
1000c494:	pop    edi
1000c495:	pop    esi
1000c496:	pop    ebp
1000c497:	pop    ebx
1000c498:	add    esp,0x54
1000c49b:	ret    0xc
1000c49e:	int3   
1000c49f:	int3   
1000c4a0:	push   0xffffffff
1000c4a2:	push   0x1002d978
1000c4a7:	mov    eax,fs:0x0
1000c4ad:	push   eax
1000c4ae:	sub    esp,0x48
1000c4b1:	push   ebx
1000c4b2:	push   ebp
1000c4b3:	push   esi
1000c4b4:	push   edi
1000c4b5:	mov    eax,ds:0x100c7654
1000c4ba:	xor    eax,esp
1000c4bc:	push   eax
1000c4bd:	lea    eax,[esp+0x5c]
1000c4c1:	mov    fs:0x0,eax
1000c4c7:	mov    eax,DWORD PTR [esp+0x74]
1000c4cb:	cmp    BYTE PTR [eax+0x15],0x0
1000c4cf:	je     0x1000c51d
1000c4d1:	push   0x1b
1000c4d3:	xor    esi,esi
1000c4d5:	push   0x100b7e30
1000c4da:	lea    ecx,[esp+0x1c]
1000c4de:	mov    DWORD PTR [esp+0x34],0xf
1000c4e6:	mov    DWORD PTR [esp+0x30],esi
1000c4ea:	mov    BYTE PTR [esp+0x20],0x0
1000c4ef:	call   0x10003a70
1000c4f4:	lea    eax,[esp+0x14]
1000c4f8:	push   eax
1000c4f9:	lea    ecx,[esp+0x34]
1000c4fd:	mov    DWORD PTR [esp+0x68],esi
1000c501:	call   0x10001400
1000c506:	push   0x100bb9d8
1000c50b:	lea    ecx,[esp+0x34]
1000c50f:	push   ecx
1000c510:	mov    DWORD PTR [esp+0x38],0x1002f51c
1000c518:	call   0x10018e6e
1000c51d:	lea    esi,[esp+0x70]
1000c521:	mov    ebp,eax
1000c523:	call   0x1000c970
1000c528:	mov    eax,DWORD PTR [ebp+0x0]
1000c52b:	cmp    BYTE PTR [eax+0x15],0x0
1000c52f:	je     0x1000c536
1000c531:	mov    edi,DWORD PTR [ebp+0x8]
1000c534:	jmp    0x1000c54e
1000c536:	mov    edx,DWORD PTR [ebp+0x8]
1000c539:	cmp    BYTE PTR [edx+0x15],0x0
1000c53d:	je     0x1000c543
1000c53f:	mov    edi,eax
1000c541:	jmp    0x1000c54e
1000c543:	mov    ecx,DWORD PTR [esp+0x74]
1000c547:	cmp    ecx,ebp
1000c549:	mov    edi,DWORD PTR [ecx+0x8]
1000c54c:	jne    0x1000c5cd
1000c54e:	cmp    BYTE PTR [edi+0x15],0x0
1000c552:	mov    esi,DWORD PTR [ebp+0x4]
1000c555:	jne    0x1000c55a
1000c557:	mov    DWORD PTR [edi+0x4],esi
1000c55a:	mov    eax,ds:0x100ca038
1000c55f:	cmp    DWORD PTR [eax+0x4],ebp
1000c562:	jne    0x1000c569
1000c564:	mov    DWORD PTR [eax+0x4],edi
1000c567:	jmp    0x1000c574
1000c569:	cmp    DWORD PTR [esi],ebp
1000c56b:	jne    0x1000c571
1000c56d:	mov    DWORD PTR [esi],edi
1000c56f:	jmp    0x1000c574
1000c571:	mov    DWORD PTR [esi+0x8],edi
1000c574:	mov    edx,DWORD PTR ds:0x100ca038
1000c57a:	cmp    DWORD PTR [edx],ebp
1000c57c:	jne    0x1000c59e
1000c57e:	cmp    BYTE PTR [edi+0x15],0x0
1000c582:	je     0x1000c588
1000c584:	mov    ecx,esi
1000c586:	jmp    0x1000c59c
1000c588:	mov    eax,DWORD PTR [edi]
1000c58a:	cmp    BYTE PTR [eax+0x15],0x0
1000c58e:	mov    ecx,edi
1000c590:	jne    0x1000c59c
1000c592:	mov    ecx,eax
1000c594:	mov    eax,DWORD PTR [ecx]
1000c596:	cmp    BYTE PTR [eax+0x15],0x0
1000c59a:	je     0x1000c592
1000c59c:	mov    DWORD PTR [edx],ecx
1000c59e:	mov    eax,ds:0x100ca038
1000c5a3:	cmp    DWORD PTR [eax+0x8],ebp
1000c5a6:	jne    0x1000c627
1000c5a8:	cmp    BYTE PTR [edi+0x15],0x0
1000c5ac:	je     0x1000c5bb
1000c5ae:	mov    ecx,DWORD PTR ds:0x100ca038
1000c5b4:	mov    eax,esi
1000c5b6:	mov    DWORD PTR [ecx+0x8],eax
1000c5b9:	jmp    0x1000c627
1000c5bb:	mov    eax,edi
1000c5bd:	call   0x1000c8d0
1000c5c2:	mov    ecx,DWORD PTR ds:0x100ca038
1000c5c8:	mov    DWORD PTR [ecx+0x8],eax
1000c5cb:	jmp    0x1000c627
1000c5cd:	mov    DWORD PTR [eax+0x4],ecx
1000c5d0:	mov    edx,DWORD PTR [ebp+0x0]
1000c5d3:	mov    DWORD PTR [ecx],edx
1000c5d5:	cmp    ecx,DWORD PTR [ebp+0x8]
1000c5d8:	jne    0x1000c5de
1000c5da:	mov    esi,ecx
1000c5dc:	jmp    0x1000c5f8
1000c5de:	cmp    BYTE PTR [edi+0x15],0x0
1000c5e2:	mov    esi,DWORD PTR [ecx+0x4]
1000c5e5:	jne    0x1000c5ea
1000c5e7:	mov    DWORD PTR [edi+0x4],esi
1000c5ea:	mov    DWORD PTR [esi],edi
1000c5ec:	mov    eax,DWORD PTR [ebp+0x8]
1000c5ef:	mov    DWORD PTR [ecx+0x8],eax
1000c5f2:	mov    edx,DWORD PTR [ebp+0x8]
1000c5f5:	mov    DWORD PTR [edx+0x4],ecx
1000c5f8:	mov    eax,ds:0x100ca038
1000c5fd:	cmp    DWORD PTR [eax+0x4],ebp
1000c600:	jne    0x1000c607
1000c602:	mov    DWORD PTR [eax+0x4],ecx
1000c605:	jmp    0x1000c615
1000c607:	mov    eax,DWORD PTR [ebp+0x4]
1000c60a:	cmp    DWORD PTR [eax],ebp
1000c60c:	jne    0x1000c612
1000c60e:	mov    DWORD PTR [eax],ecx
1000c610:	jmp    0x1000c615
1000c612:	mov    DWORD PTR [eax+0x8],ecx
1000c615:	mov    eax,DWORD PTR [ebp+0x4]
1000c618:	mov    DWORD PTR [ecx+0x4],eax
1000c61b:	mov    dl,BYTE PTR [ebp+0x14]
1000c61e:	mov    al,BYTE PTR [ecx+0x14]
1000c621:	mov    BYTE PTR [ecx+0x14],dl
1000c624:	mov    BYTE PTR [ebp+0x14],al
1000c627:	mov    ebx,0x1
1000c62c:	cmp    BYTE PTR [ebp+0x14],bl
1000c62f:	jne    0x1000c727
1000c635:	mov    eax,ds:0x100ca038
1000c63a:	cmp    edi,DWORD PTR [eax+0x4]
1000c63d:	je     0x1000c724
1000c643:	cmp    BYTE PTR [edi+0x14],bl
1000c646:	jne    0x1000c724
1000c64c:	mov    ecx,DWORD PTR [esi]
1000c64e:	cmp    edi,ecx
1000c650:	jne    0x1000c6b2
1000c652:	mov    ecx,DWORD PTR [esi+0x8]
1000c655:	cmp    BYTE PTR [ecx+0x14],0x0
1000c659:	jne    0x1000c66c
1000c65b:	mov    BYTE PTR [ecx+0x14],bl
1000c65e:	mov    ecx,esi
1000c660:	mov    BYTE PTR [esi+0x14],0x0
1000c664:	call   0x1000c770
1000c669:	mov    ecx,DWORD PTR [esi+0x8]
1000c66c:	cmp    BYTE PTR [ecx+0x15],0x0
1000c670:	jne    0x1000c6e1
1000c672:	mov    edx,DWORD PTR [ecx]
1000c674:	cmp    BYTE PTR [edx+0x14],bl
1000c677:	jne    0x1000c681
1000c679:	mov    eax,DWORD PTR [ecx+0x8]
1000c67c:	cmp    BYTE PTR [eax+0x14],bl
1000c67f:	je     0x1000c6dd
1000c681:	mov    edx,DWORD PTR [ecx+0x8]
1000c684:	cmp    BYTE PTR [edx+0x14],bl
1000c687:	jne    0x1000c69a
1000c689:	mov    eax,DWORD PTR [ecx]
1000c68b:	mov    BYTE PTR [eax+0x14],bl
1000c68e:	mov    BYTE PTR [ecx+0x14],0x0
1000c692:	call   0x1000c7c0
1000c697:	mov    ecx,DWORD PTR [esi+0x8]
1000c69a:	mov    dl,BYTE PTR [esi+0x14]
1000c69d:	mov    BYTE PTR [ecx+0x14],dl
1000c6a0:	mov    BYTE PTR [esi+0x14],bl
1000c6a3:	mov    eax,DWORD PTR [ecx+0x8]
1000c6a6:	mov    ecx,esi
1000c6a8:	mov    BYTE PTR [eax+0x14],bl
1000c6ab:	call   0x1000c770
1000c6b0:	jmp    0x1000c724
1000c6b2:	cmp    BYTE PTR [ecx+0x14],0x0
1000c6b6:	jne    0x1000c6c8
1000c6b8:	mov    BYTE PTR [ecx+0x14],bl
1000c6bb:	mov    ecx,esi
1000c6bd:	mov    BYTE PTR [esi+0x14],0x0
1000c6c1:	call   0x1000c7c0
1000c6c6:	mov    ecx,DWORD PTR [esi]
1000c6c8:	cmp    BYTE PTR [ecx+0x15],0x0
1000c6cc:	jne    0x1000c6e1
1000c6ce:	mov    edx,DWORD PTR [ecx+0x8]
1000c6d1:	cmp    BYTE PTR [edx+0x14],bl
1000c6d4:	jne    0x1000c6f7
1000c6d6:	mov    eax,DWORD PTR [ecx]
1000c6d8:	cmp    BYTE PTR [eax+0x14],bl
1000c6db:	jne    0x1000c6f7
1000c6dd:	mov    BYTE PTR [ecx+0x14],0x0
1000c6e1:	mov    ecx,DWORD PTR ds:0x100ca038
1000c6e7:	mov    edi,esi
1000c6e9:	cmp    edi,DWORD PTR [ecx+0x4]
1000c6ec:	mov    esi,DWORD PTR [esi+0x4]
1000c6ef:	jne    0x1000c643
1000c6f5:	jmp    0x1000c724
1000c6f7:	mov    edx,DWORD PTR [ecx]
1000c6f9:	cmp    BYTE PTR [edx+0x14],bl
1000c6fc:	jne    0x1000c70f
1000c6fe:	mov    eax,DWORD PTR [ecx+0x8]
1000c701:	mov    BYTE PTR [eax+0x14],bl
1000c704:	mov    BYTE PTR [ecx+0x14],0x0
1000c708:	call   0x1000c770
1000c70d:	mov    ecx,DWORD PTR [esi]
1000c70f:	mov    dl,BYTE PTR [esi+0x14]
1000c712:	mov    BYTE PTR [ecx+0x14],dl
1000c715:	mov    BYTE PTR [esi+0x14],bl
1000c718:	mov    eax,DWORD PTR [ecx]
1000c71a:	mov    ecx,esi
1000c71c:	mov    BYTE PTR [eax+0x14],bl
1000c71f:	call   0x1000c7c0
1000c724:	mov    BYTE PTR [edi+0x14],bl
1000c727:	push   ebp
1000c728:	call   0x1001876e
1000c72d:	add    esp,0x4
1000c730:	cmp    DWORD PTR ds:0x100ca03c,0x0
1000c737:	jbe    0x1000c73f
1000c739:	sub    DWORD PTR ds:0x100ca03c,ebx
1000c73f:	mov    eax,DWORD PTR [esp+0x6c]
1000c743:	mov    ecx,DWORD PTR [esp+0x70]
1000c747:	mov    edx,DWORD PTR [esp+0x74]
1000c74b:	mov    DWORD PTR [eax],ecx
1000c74d:	mov    DWORD PTR [eax+0x4],edx
1000c750:	mov    ecx,DWORD PTR [esp+0x5c]
1000c754:	mov    DWORD PTR fs:0x0,ecx
1000c75b:	pop    ecx
1000c75c:	pop    edi
1000c75d:	pop    esi
1000c75e:	pop    ebp
1000c75f:	pop    ebx
1000c760:	add    esp,0x54
1000c763:	ret    0xc
1000c766:	int3   
1000c767:	int3   
1000c768:	int3   
1000c769:	int3   
1000c76a:	int3   
1000c76b:	int3   
1000c76c:	int3   
1000c76d:	int3   
1000c76e:	int3   
1000c76f:	int3   
1000c770:	mov    eax,DWORD PTR [ecx+0x8]
1000c773:	mov    edx,DWORD PTR [eax]
1000c775:	mov    DWORD PTR [ecx+0x8],edx
1000c778:	mov    edx,DWORD PTR [eax]
1000c77a:	cmp    BYTE PTR [edx+0x15],0x0
1000c77e:	jne    0x1000c783
1000c780:	mov    DWORD PTR [edx+0x4],ecx
1000c783:	mov    edx,DWORD PTR [ecx+0x4]
1000c786:	mov    DWORD PTR [eax+0x4],edx
1000c789:	mov    edx,DWORD PTR ds:0x100ca038
1000c78f:	cmp    ecx,DWORD PTR [edx+0x4]
1000c792:	jne    0x1000c79d
1000c794:	mov    DWORD PTR [edx+0x4],eax
1000c797:	mov    DWORD PTR [eax],ecx
1000c799:	mov    DWORD PTR [ecx+0x4],eax
1000c79c:	ret    
1000c79d:	mov    edx,DWORD PTR [ecx+0x4]
1000c7a0:	cmp    ecx,DWORD PTR [edx]
1000c7a2:	jne    0x1000c7ac
1000c7a4:	mov    DWORD PTR [edx],eax
1000c7a6:	mov    DWORD PTR [eax],ecx
1000c7a8:	mov    DWORD PTR [ecx+0x4],eax
1000c7ab:	ret    
1000c7ac:	mov    DWORD PTR [edx+0x8],eax
1000c7af:	mov    DWORD PTR [eax],ecx
1000c7b1:	mov    DWORD PTR [ecx+0x4],eax
1000c7b4:	ret    
1000c7b5:	int3   
1000c7b6:	int3   
1000c7b7:	int3   
1000c7b8:	int3   
1000c7b9:	int3   
1000c7ba:	int3   
1000c7bb:	int3   
1000c7bc:	int3   
1000c7bd:	int3   
1000c7be:	int3   
1000c7bf:	int3   
1000c7c0:	mov    eax,DWORD PTR [ecx]
1000c7c2:	mov    edx,DWORD PTR [eax+0x8]
1000c7c5:	mov    DWORD PTR [ecx],edx
1000c7c7:	mov    edx,DWORD PTR [eax+0x8]
1000c7ca:	cmp    BYTE PTR [edx+0x15],0x0
1000c7ce:	jne    0x1000c7d3
1000c7d0:	mov    DWORD PTR [edx+0x4],ecx
1000c7d3:	mov    edx,DWORD PTR [ecx+0x4]
1000c7d6:	mov    DWORD PTR [eax+0x4],edx
1000c7d9:	mov    edx,DWORD PTR ds:0x100ca038
1000c7df:	cmp    ecx,DWORD PTR [edx+0x4]
1000c7e2:	jne    0x1000c7ee
1000c7e4:	mov    DWORD PTR [edx+0x4],eax
1000c7e7:	mov    DWORD PTR [eax+0x8],ecx
1000c7ea:	mov    DWORD PTR [ecx+0x4],eax
1000c7ed:	ret    
1000c7ee:	mov    edx,DWORD PTR [ecx+0x4]
1000c7f1:	cmp    ecx,DWORD PTR [edx+0x8]
1000c7f4:	jne    0x1000c800
1000c7f6:	mov    DWORD PTR [edx+0x8],eax
1000c7f9:	mov    DWORD PTR [eax+0x8],ecx
1000c7fc:	mov    DWORD PTR [ecx+0x4],eax
1000c7ff:	ret    
1000c800:	mov    DWORD PTR [edx],eax
1000c802:	mov    DWORD PTR [eax+0x8],ecx
1000c805:	mov    DWORD PTR [ecx+0x4],eax
1000c808:	ret    
1000c809:	int3   
1000c80a:	int3   
1000c80b:	int3   
1000c80c:	int3   
1000c80d:	int3   
1000c80e:	int3   
1000c80f:	int3   
1000c810:	push   0x18
1000c812:	call   0x100190b4
1000c817:	add    esp,0x4
1000c81a:	test   eax,eax
1000c81c:	je     0x1000c824
1000c81e:	mov    DWORD PTR [eax],0x0
1000c824:	lea    ecx,[eax+0x4]
1000c827:	test   ecx,ecx
1000c829:	je     0x1000c831
1000c82b:	mov    DWORD PTR [ecx],0x0
1000c831:	lea    ecx,[eax+0x8]
1000c834:	test   ecx,ecx
1000c836:	je     0x1000c83e
1000c838:	mov    DWORD PTR [ecx],0x0
1000c83e:	mov    BYTE PTR [eax+0x14],0x1
1000c842:	mov    BYTE PTR [eax+0x15],0x0
1000c846:	ret    
1000c847:	int3   
1000c848:	int3   
1000c849:	int3   
1000c84a:	int3   
1000c84b:	int3   
1000c84c:	int3   
1000c84d:	int3   
1000c84e:	int3   
1000c84f:	int3   
1000c850:	push   0x18
1000c852:	call   0x100190b4
1000c857:	xor    ecx,ecx
1000c859:	add    esp,0x4
1000c85c:	cmp    eax,ecx
1000c85e:	je     0x1000c885
1000c860:	mov    edx,DWORD PTR [esp+0x4]
1000c864:	mov    DWORD PTR [eax],edx
1000c866:	mov    edx,DWORD PTR [esp+0x8]
1000c86a:	mov    DWORD PTR [eax+0x4],edx
1000c86d:	mov    edx,DWORD PTR [esp+0xc]
1000c871:	mov    DWORD PTR [eax+0x8],edx
1000c874:	mov    edx,DWORD PTR [esi]
1000c876:	mov    DWORD PTR [eax+0xc],edx
1000c879:	mov    edx,DWORD PTR [esi+0x4]
1000c87c:	mov    DWORD PTR [eax+0x10],edx
1000c87f:	mov    BYTE PTR [eax+0x14],cl
1000c882:	mov    BYTE PTR [eax+0x15],cl
1000c885:	ret    0xc
1000c888:	int3   
1000c889:	int3   
1000c88a:	int3   
1000c88b:	int3   
1000c88c:	int3   
1000c88d:	int3   
1000c88e:	int3   
1000c88f:	int3   
1000c890:	push   ebx
1000c891:	push   esi
1000c892:	push   edi
1000c893:	mov    edi,DWORD PTR [esp+0x10]
1000c897:	cmp    BYTE PTR [edi+0x15],0x0
1000c89b:	mov    ebx,ecx
1000c89d:	mov    esi,edi
1000c89f:	jne    0x1000c8bf
1000c8a1:	mov    eax,DWORD PTR [esi+0x8]
1000c8a4:	push   eax
1000c8a5:	mov    ecx,ebx
1000c8a7:	call   0x1000c890
1000c8ac:	mov    esi,DWORD PTR [esi]
1000c8ae:	push   edi
1000c8af:	call   0x1001876e
1000c8b4:	add    esp,0x4
1000c8b7:	cmp    BYTE PTR [esi+0x15],0x0
1000c8bb:	mov    edi,esi
1000c8bd:	je     0x1000c8a1
1000c8bf:	pop    edi
1000c8c0:	pop    esi
1000c8c1:	pop    ebx
1000c8c2:	ret    0x4
1000c8c5:	int3   
1000c8c6:	int3   
1000c8c7:	int3   
1000c8c8:	int3   
1000c8c9:	int3   
1000c8ca:	int3   
1000c8cb:	int3   
1000c8cc:	int3   
1000c8cd:	int3   
1000c8ce:	int3   
1000c8cf:	int3   
1000c8d0:	mov    ecx,DWORD PTR [eax+0x8]
1000c8d3:	cmp    BYTE PTR [ecx+0x15],0x0
1000c8d7:	jne    0x1000c8eb
1000c8d9:	lea    esp,[esp+0x0]
1000c8e0:	mov    eax,ecx
1000c8e2:	mov    ecx,DWORD PTR [eax+0x8]
1000c8e5:	cmp    BYTE PTR [ecx+0x15],0x0
1000c8e9:	je     0x1000c8e0
1000c8eb:	ret    
1000c8ec:	int3   
1000c8ed:	int3   
1000c8ee:	int3   
1000c8ef:	int3   
1000c8f0:	cmp    DWORD PTR [esi],0x0
1000c8f3:	jne    0x1000c8fa
1000c8f5:	call   0x10018de3
1000c8fa:	mov    eax,DWORD PTR [esi+0x4]
1000c8fd:	cmp    BYTE PTR [eax+0x15],0x0
1000c901:	je     0x1000c914
1000c903:	mov    eax,DWORD PTR [eax+0x8]
1000c906:	mov    DWORD PTR [esi+0x4],eax
1000c909:	cmp    BYTE PTR [eax+0x15],0x0
1000c90d:	je     0x1000c966
1000c90f:	jmp    0x10018de3
1000c914:	mov    ecx,DWORD PTR [eax]
1000c916:	cmp    BYTE PTR [ecx+0x15],0x0
1000c91a:	jne    0x1000c934
1000c91c:	mov    eax,DWORD PTR [ecx+0x8]
1000c91f:	cmp    BYTE PTR [eax+0x15],0x0
1000c923:	jne    0x1000c930
1000c925:	mov    ecx,eax
1000c927:	mov    eax,DWORD PTR [ecx+0x8]
1000c92a:	cmp    BYTE PTR [eax+0x15],0x0
1000c92e:	je     0x1000c925
1000c930:	mov    DWORD PTR [esi+0x4],ecx
1000c933:	ret    
1000c934:	mov    eax,DWORD PTR [eax+0x4]
1000c937:	cmp    BYTE PTR [eax+0x15],0x0
1000c93b:	jne    0x1000c955
1000c93d:	lea    ecx,[ecx+0x0]
1000c940:	mov    ecx,DWORD PTR [esi+0x4]
1000c943:	cmp    ecx,DWORD PTR [eax]
1000c945:	jne    0x1000c955
1000c947:	mov    DWORD PTR [esi+0x4],eax
1000c94a:	mov    edx,eax
1000c94c:	mov    eax,DWORD PTR [edx+0x4]
1000c94f:	cmp    BYTE PTR [eax+0x15],0x0
1000c953:	je     0x1000c940
1000c955:	mov    ecx,DWORD PTR [esi+0x4]
1000c958:	cmp    BYTE PTR [ecx+0x15],0x0
1000c95c:	je     0x1000c963
1000c95e:	jmp    0x10018de3
1000c963:	mov    DWORD PTR [esi+0x4],eax
1000c966:	ret    
1000c967:	int3   
1000c968:	int3   
1000c969:	int3   
1000c96a:	int3   
1000c96b:	int3   
1000c96c:	int3   
1000c96d:	int3   
1000c96e:	int3   
1000c96f:	int3   
1000c970:	cmp    DWORD PTR [esi],0x0
1000c973:	jne    0x1000c97a
1000c975:	call   0x10018de3
1000c97a:	mov    eax,DWORD PTR [esi+0x4]
1000c97d:	cmp    BYTE PTR [eax+0x15],0x0
1000c981:	je     0x1000c988
1000c983:	jmp    0x10018de3
1000c988:	mov    ecx,DWORD PTR [eax+0x8]
1000c98b:	cmp    BYTE PTR [ecx+0x15],0x0
1000c98f:	jne    0x1000c9ae
1000c991:	mov    eax,DWORD PTR [ecx]
1000c993:	cmp    BYTE PTR [eax+0x15],0x0
1000c997:	jne    0x1000c9aa
1000c999:	lea    esp,[esp+0x0]
1000c9a0:	mov    ecx,eax
1000c9a2:	mov    eax,DWORD PTR [ecx]
1000c9a4:	cmp    BYTE PTR [eax+0x15],0x0
1000c9a8:	je     0x1000c9a0
1000c9aa:	mov    DWORD PTR [esi+0x4],ecx
1000c9ad:	ret    
1000c9ae:	mov    eax,DWORD PTR [eax+0x4]
1000c9b1:	cmp    BYTE PTR [eax+0x15],0x0
1000c9b5:	jne    0x1000c9cd
1000c9b7:	mov    ecx,DWORD PTR [esi+0x4]
1000c9ba:	cmp    ecx,DWORD PTR [eax+0x8]
1000c9bd:	jne    0x1000c9cd
1000c9bf:	mov    DWORD PTR [esi+0x4],eax
1000c9c2:	mov    edx,eax
1000c9c4:	mov    eax,DWORD PTR [edx+0x4]
1000c9c7:	cmp    BYTE PTR [eax+0x15],0x0
1000c9cb:	je     0x1000c9b7
1000c9cd:	mov    DWORD PTR [esi+0x4],eax
1000c9d0:	ret    
1000c9d1:	int3   
1000c9d2:	int3   
1000c9d3:	int3   
1000c9d4:	int3   
1000c9d5:	int3   
1000c9d6:	int3   
1000c9d7:	int3   
1000c9d8:	int3   
1000c9d9:	int3   
1000c9da:	int3   
1000c9db:	int3   
1000c9dc:	int3   
1000c9dd:	int3   
1000c9de:	int3   
1000c9df:	int3   
1000c9e0:	movzx  eax,WORD PTR [esp+0x10]
1000c9e5:	push   ebx
1000c9e6:	push   ebp
1000c9e7:	mov    ebp,DWORD PTR [esp+0xc]
1000c9eb:	push   esi
1000c9ec:	push   edi
1000c9ed:	mov    edi,DWORD PTR ds:0x1002f0b0
1000c9f3:	push   0x100b9d94
1000c9f8:	push   eax
1000c9f9:	push   ebp
1000c9fa:	push   0x100b9d70
1000c9ff:	push   0x100b9d80
1000ca04:	call   edi
1000ca06:	mov    ebx,DWORD PTR ds:0x1002f050
1000ca0c:	push   eax
1000ca0d:	call   ebx
1000ca0f:	call   eax
1000ca11:	mov    esi,eax
1000ca13:	test   esi,esi
1000ca15:	jne    0x1000ca1e
1000ca17:	pop    edi
1000ca18:	pop    esi
1000ca19:	pop    ebp
1000ca1a:	xor    al,al
1000ca1c:	pop    ebx
1000ca1d:	ret    
1000ca1e:	push   esi
1000ca1f:	push   ebp
1000ca20:	push   0x100b9d9c
1000ca25:	push   0x100b9d80
1000ca2a:	call   edi
1000ca2c:	push   eax
1000ca2d:	call   ebx
1000ca2f:	call   eax
1000ca31:	test   eax,eax
1000ca33:	mov    DWORD PTR [esp+0x20],eax
1000ca37:	je     0x1000ca17
1000ca39:	push   esi
1000ca3a:	push   ebp
1000ca3b:	push   0x100b9dac
1000ca40:	push   0x100b9d80
1000ca45:	call   edi
1000ca47:	push   eax
1000ca48:	call   ebx
1000ca4a:	call   eax
1000ca4c:	mov    edx,DWORD PTR [esp+0x20]
1000ca50:	mov    ecx,DWORD PTR [esp+0x1c]
1000ca54:	push   edx
1000ca55:	push   0x100b9dbc
1000ca5a:	push   0x100b9d80
1000ca5f:	mov    DWORD PTR [ecx],eax
1000ca61:	call   edi
1000ca63:	push   eax
1000ca64:	call   ebx
1000ca66:	call   eax
1000ca68:	mov    ecx,DWORD PTR [esp+0x18]
1000ca6c:	pop    edi
1000ca6d:	pop    esi
1000ca6e:	pop    ebp
1000ca6f:	mov    DWORD PTR [ecx],eax
1000ca71:	mov    al,0x1
1000ca73:	pop    ebx
1000ca74:	ret    
1000ca75:	int3   
1000ca76:	int3   
1000ca77:	int3   
1000ca78:	int3   
1000ca79:	int3   
1000ca7a:	int3   
1000ca7b:	int3   
1000ca7c:	int3   
1000ca7d:	int3   
1000ca7e:	int3   
1000ca7f:	int3   
1000ca80:	push   ebp
1000ca81:	mov    ebp,esp
1000ca83:	and    esp,0xfffffff8
1000ca86:	sub    esp,0x844
1000ca8c:	mov    eax,ds:0x100c7654
1000ca91:	xor    eax,esp
1000ca93:	mov    DWORD PTR [esp+0x840],eax
1000ca9a:	xor    eax,eax
1000ca9c:	push   ebx
1000ca9d:	mov    ebx,edx
1000ca9f:	mov    DWORD PTR [esp+0x18],ecx
1000caa3:	push   esi
1000caa4:	add    ecx,0xc
1000caa7:	push   edi
1000caa8:	mov    DWORD PTR [esp+0x24],ebx
1000caac:	mov    DWORD PTR [esp+0xc],ebx
1000cab0:	mov    DWORD PTR [esp+0x34],eax
1000cab4:	mov    DWORD PTR [esp+0x38],eax
1000cab8:	mov    DWORD PTR [esp+0x3c],eax
1000cabc:	mov    DWORD PTR [esp+0x40],eax
1000cac0:	mov    DWORD PTR [esp+0x44],eax
1000cac4:	mov    DWORD PTR [esp+0x18],ecx
1000cac8:	jmp    0x1000cad0
1000caca:	lea    ebx,[ebx+0x0]
1000cad0:	mov    edx,DWORD PTR [esp+0xc]
1000cad4:	mov    eax,0x14
1000cad9:	lea    ecx,[esp+0x34]
1000cadd:	lea    ecx,[ecx+0x0]
1000cae0:	mov    esi,DWORD PTR [edx]
1000cae2:	cmp    esi,DWORD PTR [ecx]
1000cae4:	jne    0x1000caf8
1000cae6:	sub    eax,0x4
1000cae9:	add    ecx,0x4
1000caec:	add    edx,0x4
1000caef:	cmp    eax,0x4
1000caf2:	jae    0x1000cae0
1000caf4:	test   eax,eax
1000caf6:	je     0x1000cb55
1000caf8:	movzx  esi,BYTE PTR [edx]
1000cafb:	movzx  edi,BYTE PTR [ecx]
1000cafe:	sub    esi,edi
1000cb00:	jne    0x1000cb47
1000cb02:	sub    eax,0x1
1000cb05:	add    ecx,0x1
1000cb08:	add    edx,0x1
1000cb0b:	test   eax,eax
1000cb0d:	je     0x1000cb55
1000cb0f:	movzx  esi,BYTE PTR [edx]
1000cb12:	movzx  edi,BYTE PTR [ecx]
1000cb15:	sub    esi,edi
1000cb17:	jne    0x1000cb47
1000cb19:	sub    eax,0x1
1000cb1c:	add    ecx,0x1
1000cb1f:	add    edx,0x1
1000cb22:	test   eax,eax
1000cb24:	je     0x1000cb55
1000cb26:	movzx  esi,BYTE PTR [edx]
1000cb29:	movzx  edi,BYTE PTR [ecx]
1000cb2c:	sub    esi,edi
1000cb2e:	jne    0x1000cb47
1000cb30:	sub    eax,0x1
1000cb33:	add    ecx,0x1
1000cb36:	add    edx,0x1
1000cb39:	test   eax,eax
1000cb3b:	je     0x1000cb55
1000cb3d:	movzx  esi,BYTE PTR [edx]
1000cb40:	movzx  eax,BYTE PTR [ecx]
1000cb43:	sub    esi,eax
1000cb45:	je     0x1000cb55
1000cb47:	test   esi,esi
1000cb49:	mov    eax,0x1
1000cb4e:	jg     0x1000cb57
1000cb50:	or     eax,0xffffffff
1000cb53:	jmp    0x1000cb57
1000cb55:	xor    eax,eax
1000cb57:	test   eax,eax
1000cb59:	je     0x1000cc83
1000cb5f:	mov    eax,DWORD PTR [esp+0x20]
1000cb63:	mov    ecx,DWORD PTR [esp+0x18]
1000cb67:	sub    eax,ebx
1000cb69:	cdq    
1000cb6a:	mov    ebx,eax
1000cb6c:	mov    DWORD PTR [esp+0x2c],edx
1000cb70:	mov    edx,DWORD PTR [ecx]
1000cb72:	mov    al,BYTE PTR [edx+ebx*1+0x10000000]
1000cb79:	test   al,al
1000cb7b:	lea    ecx,[edx+ebx*1+0x10000000]
1000cb82:	mov    DWORD PTR [esp+0x28],ebx
1000cb86:	lea    edx,[esp+0x48]
1000cb8a:	je     0x1000cba3
1000cb8c:	lea    esp,[esp+0x0]
1000cb90:	movsx  ax,al
1000cb94:	add    ecx,0x1
1000cb97:	mov    WORD PTR [edx],ax
1000cb9a:	mov    al,BYTE PTR [ecx]
1000cb9c:	add    edx,0x2
1000cb9f:	test   al,al
1000cba1:	jne    0x1000cb90
1000cba3:	lea    ecx,[esp+0x48]
1000cba7:	push   ecx
1000cba8:	mov    WORD PTR [edx],0x0
1000cbad:	call   DWORD PTR ds:0x1002f0b0
1000cbb3:	test   eax,eax
1000cbb5:	mov    DWORD PTR [esp+0x1c],eax
1000cbb9:	jne    0x1000cbca
1000cbbb:	lea    edx,[esp+0x48]
1000cbbf:	push   edx
1000cbc0:	call   DWORD PTR ds:0x1002f108
1000cbc6:	mov    DWORD PTR [esp+0x1c],eax
1000cbca:	mov    eax,DWORD PTR [esp+0xc]
1000cbce:	mov    edi,DWORD PTR [eax]
1000cbd0:	mov    ecx,eax
1000cbd2:	mov    esi,DWORD PTR [ecx+0x10]
1000cbd5:	add    edi,0x10000000
1000cbdb:	add    esi,0x10000000
1000cbe1:	cmp    DWORD PTR [edi],0x0
1000cbe4:	lea    edx,[ebx+edi*1]
1000cbe7:	mov    DWORD PTR [esp+0x14],edx
1000cbeb:	je     0x1000cc56
1000cbed:	lea    ecx,[ecx+0x0]
1000cbf0:	mov    eax,DWORD PTR [esp+0x14]
1000cbf4:	mov    eax,DWORD PTR [eax]
1000cbf6:	test   eax,eax
1000cbf8:	je     0x1000cc46
1000cbfa:	js     0x1000cc46
1000cbfc:	mov    edx,DWORD PTR [esp+0x1c]
1000cc00:	lea    ecx,[eax+ebx*1+0x10000002]
1000cc07:	push   ecx
1000cc08:	push   edx
1000cc09:	call   DWORD PTR ds:0x1002f050
1000cc0f:	mov    ebx,eax
1000cc11:	xor    eax,eax
1000cc13:	mov    ecx,ebx
1000cc15:	or     ecx,eax
1000cc17:	je     0x1000cc6c
1000cc19:	lea    edx,[esp+0x10]
1000cc1d:	push   edx
1000cc1e:	push   0x40
1000cc20:	push   0x4
1000cc22:	push   esi
1000cc23:	mov    DWORD PTR [esp+0x20],eax
1000cc27:	call   DWORD PTR ds:0x100c9d90
1000cc2d:	mov    ecx,DWORD PTR [esp+0x10]
1000cc31:	lea    eax,[esp+0x10]
1000cc35:	push   eax
1000cc36:	push   ecx
1000cc37:	push   0x4
1000cc39:	push   esi
1000cc3a:	mov    DWORD PTR [esi],ebx
1000cc3c:	call   DWORD PTR ds:0x100c9d90
1000cc42:	mov    ebx,DWORD PTR [esp+0x28]
1000cc46:	add    DWORD PTR [esp+0x14],0x4
1000cc4b:	add    edi,0x4
1000cc4e:	add    esi,0x4
1000cc51:	cmp    DWORD PTR [edi],0x0
1000cc54:	jne    0x1000cbf0
1000cc56:	mov    ebx,DWORD PTR [esp+0x24]
1000cc5a:	mov    eax,0x14
1000cc5f:	add    DWORD PTR [esp+0xc],eax
1000cc63:	add    DWORD PTR [esp+0x18],eax
1000cc67:	jmp    0x1000cad0
1000cc6c:	xor    al,al
1000cc6e:	pop    edi
1000cc6f:	pop    esi
1000cc70:	pop    ebx
1000cc71:	mov    ecx,DWORD PTR [esp+0x840]
1000cc78:	xor    ecx,esp
1000cc7a:	call   0x10018773
1000cc7f:	mov    esp,ebp
1000cc81:	pop    ebp
1000cc82:	ret    
1000cc83:	mov    ecx,DWORD PTR [esp+0x84c]
1000cc8a:	pop    edi
1000cc8b:	pop    esi
1000cc8c:	pop    ebx
1000cc8d:	xor    ecx,esp
1000cc8f:	mov    al,0x1
1000cc91:	call   0x10018773
1000cc96:	mov    esp,ebp
1000cc98:	pop    ebp
1000cc99:	ret    
1000cc9a:	int3   
1000cc9b:	int3   
1000cc9c:	int3   
1000cc9d:	int3   
1000cc9e:	int3   
1000cc9f:	int3   
1000cca0:	mov    eax,0x8540
1000cca5:	call   0x100191a0
1000ccaa:	mov    eax,ds:0x100c7654
1000ccaf:	xor    eax,esp
1000ccb1:	mov    DWORD PTR [esp+0x853c],eax
1000ccb8:	push   ebp
1000ccb9:	push   esi
1000ccba:	mov    esi,DWORD PTR [esp+0x854c]
1000ccc1:	push   0x100b9dcc
1000ccc6:	push   0x100b9ddc
1000cccb:	call   DWORD PTR ds:0x1002f0fc
1000ccd1:	push   eax
1000ccd2:	call   DWORD PTR ds:0x1002f050
1000ccd8:	mov    ds:0x100c9d90,eax
1000ccdd:	mov    eax,ds:0x1000003c
1000cce2:	mov    eax,DWORD PTR [eax+0x10000080]
1000cce8:	test   eax,eax
1000ccea:	je     0x1000ccf4
1000ccec:	lea    ebp,[eax+0x10000000]
1000ccf2:	jmp    0x1000ccf6
1000ccf4:	xor    ebp,ebp
1000ccf6:	mov    ecx,DWORD PTR [esp+0x8550]
1000ccfd:	push   ecx
1000ccfe:	lea    edx,[esp+0x10]
1000cd02:	push   edx
1000cd03:	lea    eax,[esp+0x18]
1000cd07:	push   eax
1000cd08:	push   esi
1000cd09:	call   0x1000c9e0
1000cd0e:	add    esp,0x10
1000cd11:	test   al,al
1000cd13:	jne    0x1000cd2c
1000cd15:	pop    esi
1000cd16:	pop    ebp
1000cd17:	mov    ecx,DWORD PTR [esp+0x853c]
1000cd1e:	xor    ecx,esp
1000cd20:	call   0x10018773
1000cd25:	add    esp,0x8540
1000cd2b:	ret    
1000cd2c:	push   ebx
1000cd2d:	mov    ebx,DWORD PTR [esp+0x14]
1000cd31:	mov    eax,0x4
1000cd36:	mov    ecx,0x100b8288
1000cd3b:	mov    edx,ebx
1000cd3d:	push   edi
1000cd3e:	mov    edi,edi
1000cd40:	mov    esi,DWORD PTR [edx]
1000cd42:	cmp    esi,DWORD PTR [ecx]
1000cd44:	jne    0x1000cd58
1000cd46:	sub    eax,0x4
1000cd49:	add    ecx,0x4
1000cd4c:	add    edx,0x4
1000cd4f:	cmp    eax,0x4
1000cd52:	jae    0x1000cd40
1000cd54:	test   eax,eax
1000cd56:	je     0x1000cdb5
1000cd58:	movzx  edi,BYTE PTR [ecx]
1000cd5b:	movzx  esi,BYTE PTR [edx]
1000cd5e:	sub    esi,edi
1000cd60:	jne    0x1000cda7
1000cd62:	sub    eax,0x1
1000cd65:	add    ecx,0x1
1000cd68:	add    edx,0x1
1000cd6b:	test   eax,eax
1000cd6d:	je     0x1000cdb5
1000cd6f:	movzx  edi,BYTE PTR [ecx]
1000cd72:	movzx  esi,BYTE PTR [edx]
1000cd75:	sub    esi,edi
1000cd77:	jne    0x1000cda7
1000cd79:	sub    eax,0x1
1000cd7c:	add    ecx,0x1
1000cd7f:	add    edx,0x1
1000cd82:	test   eax,eax
1000cd84:	je     0x1000cdb5
1000cd86:	movzx  edi,BYTE PTR [ecx]
1000cd89:	movzx  esi,BYTE PTR [edx]
1000cd8c:	sub    esi,edi
1000cd8e:	jne    0x1000cda7
1000cd90:	sub    eax,0x1
1000cd93:	add    ecx,0x1
1000cd96:	add    edx,0x1
1000cd99:	test   eax,eax
1000cd9b:	je     0x1000cdb5
1000cd9d:	movzx  ecx,BYTE PTR [ecx]
1000cda0:	movzx  esi,BYTE PTR [edx]
1000cda3:	sub    esi,ecx
1000cda5:	je     0x1000cdb5
1000cda7:	test   esi,esi
1000cda9:	mov    eax,0x1
1000cdae:	jg     0x1000cdb7
1000cdb0:	or     eax,0xffffffff
1000cdb3:	jmp    0x1000cdb7
1000cdb5:	xor    eax,eax
1000cdb7:	test   eax,eax
1000cdb9:	je     0x1000cdc2
1000cdbb:	xor    al,al
1000cdbd:	jmp    0x1000ce54
1000cdc2:	mov    edi,DWORD PTR [ebx+0x4]
1000cdc5:	push   edi
1000cdc6:	lea    edx,[ebx+0x8]
1000cdc9:	push   edx
1000cdca:	lea    eax,[esp+0x24]
1000cdce:	push   eax
1000cdcf:	call   0x10019470
1000cdd4:	mov    esi,DWORD PTR [esp+0x20]
1000cdd8:	sub    esi,edi
1000cdda:	sub    esi,0x8
1000cddd:	push   esi
1000cdde:	lea    ecx,[edi+ebx*1+0x8]
1000cde2:	push   ecx
1000cde3:	lea    edx,[esp+0x1030]
1000cdea:	push   edx
1000cdeb:	call   0x10019470
1000cdf0:	add    esp,0x18
1000cdf3:	xor    ecx,ecx
1000cdf5:	xor    edx,edx
1000cdf7:	test   esi,esi
1000cdf9:	je     0x1000ce19
1000cdfb:	jmp    0x1000ce00
1000cdfd:	lea    ecx,[ecx+0x0]
1000ce00:	mov    al,BYTE PTR [esp+edx*1+0x1c]
1000ce04:	xor    BYTE PTR [esp+ecx*1+0x101c],al
1000ce0b:	lea    eax,[edx+0x1]
1000ce0e:	xor    edx,edx
1000ce10:	add    ecx,0x1
1000ce13:	div    edi
1000ce15:	cmp    ecx,esi
1000ce17:	jne    0x1000ce00
1000ce19:	lea    ecx,[esp+0x10]
1000ce1d:	push   ecx
1000ce1e:	push   0x40
1000ce20:	push   esi
1000ce21:	push   ebp
1000ce22:	mov    DWORD PTR [esp+0x20],0x0
1000ce2a:	call   DWORD PTR ds:0x100c9d90
1000ce30:	lea    ecx,[esp+0x101c]
1000ce37:	mov    edx,ebp
1000ce39:	call   0x1000ca80
1000ce3e:	lea    edx,[esp+0x10]
1000ce42:	push   edx
1000ce43:	mov    bl,al
1000ce45:	mov    eax,DWORD PTR [esp+0x14]
1000ce49:	push   eax
1000ce4a:	push   esi
1000ce4b:	push   ebp
1000ce4c:	call   DWORD PTR ds:0x100c9d90
1000ce52:	mov    al,bl
1000ce54:	mov    ecx,DWORD PTR [esp+0x854c]
1000ce5b:	pop    edi
1000ce5c:	pop    ebx
1000ce5d:	pop    esi
1000ce5e:	pop    ebp
1000ce5f:	xor    ecx,esp
1000ce61:	call   0x10018773
1000ce66:	add    esp,0x8540
1000ce6c:	ret    
1000ce6d:	int3   
1000ce6e:	int3   
1000ce6f:	int3   
1000ce70:	mov    eax,DWORD PTR [esp+0x4]
1000ce74:	ret    
1000ce75:	int3   
1000ce76:	int3   
1000ce77:	int3   
1000ce78:	int3   
1000ce79:	int3   
1000ce7a:	int3   
1000ce7b:	int3   
1000ce7c:	int3   
1000ce7d:	int3   
1000ce7e:	int3   
1000ce7f:	int3   
1000ce80:	push   0xffffffff
1000ce82:	push   0x1002d890
1000ce87:	mov    eax,fs:0x0
1000ce8d:	push   eax
1000ce8e:	sub    esp,0xc
1000ce91:	push   ebx
1000ce92:	push   ebp
1000ce93:	push   esi
1000ce94:	push   edi
1000ce95:	mov    eax,ds:0x100c7654
1000ce9a:	xor    eax,esp
1000ce9c:	push   eax
1000ce9d:	lea    eax,[esp+0x20]
1000cea1:	mov    fs:0x0,eax
1000cea7:	xor    ebx,ebx
1000cea9:	mov    DWORD PTR [esp+0x14],ebx
1000cead:	mov    edi,DWORD PTR [esp+0x38]
1000ceb1:	push   edi
1000ceb2:	call   0x1001868d
1000ceb7:	mov    esi,eax
1000ceb9:	mov    DWORD PTR [esp+0x1c],esi
1000cebd:	mov    eax,DWORD PTR [esp+0x38]
1000cec1:	push   edi
1000cec2:	push   eax
1000cec3:	push   esi
1000cec4:	mov    DWORD PTR [esp+0x38],ebx
1000cec8:	call   0x10019470
1000cecd:	mov    ecx,DWORD PTR [esp+0x50]
1000ced1:	mov    edx,DWORD PTR [esp+0x4c]
1000ced5:	push   ecx
1000ced6:	push   edx
1000ced7:	push   edi
1000ced8:	push   esi
1000ced9:	call   0x1000dd90
1000cede:	lea    eax,[esp+0x34]
1000cee2:	push   eax
1000cee3:	push   edi
1000cee4:	lea    ecx,[esp+0x60]
1000cee8:	push   esi
1000cee9:	push   ecx
1000ceea:	call   0x100018f0
1000ceef:	mov    edx,DWORD PTR [eax]
1000cef1:	mov    ebp,edx
1000cef3:	mov    DWORD PTR [eax],ebx
1000cef5:	mov    DWORD PTR [esp+0x4c],ebp
1000cef9:	mov    BYTE PTR [esp+0x58],0x1
1000cefe:	mov    eax,DWORD PTR [esp+0x68]
1000cf02:	push   eax
1000cf03:	call   0x1001876e
1000cf08:	mov    edi,DWORD PTR [esp+0x64]
1000cf0c:	mov    ecx,DWORD PTR [esp+0x48]
1000cf10:	add    esp,0x34
1000cf13:	push   ecx
1000cf14:	mov    DWORD PTR [edi+0x18],0xf
1000cf1b:	mov    DWORD PTR [edi+0x14],ebx
1000cf1e:	push   ebp
1000cf1f:	mov    ecx,edi
1000cf21:	mov    BYTE PTR [edi+0x4],bl
1000cf24:	call   0x10003a70
1000cf29:	push   ebp
1000cf2a:	call   0x1001876e
1000cf2f:	push   esi
1000cf30:	call   0x1001876e
1000cf35:	add    esp,0x8
1000cf38:	mov    eax,edi
1000cf3a:	mov    ecx,DWORD PTR [esp+0x20]
1000cf3e:	mov    DWORD PTR fs:0x0,ecx
1000cf45:	pop    ecx
1000cf46:	pop    edi
1000cf47:	pop    esi
1000cf48:	pop    ebp
1000cf49:	pop    ebx
1000cf4a:	add    esp,0x18
1000cf4d:	ret    
1000cf4e:	int3   
1000cf4f:	int3   
1000cf50:	push   0xffffffff
1000cf52:	push   0x1002d859
1000cf57:	mov    eax,fs:0x0
1000cf5d:	push   eax
1000cf5e:	push   ecx
1000cf5f:	push   esi
1000cf60:	push   edi
1000cf61:	mov    eax,ds:0x100c7654
1000cf66:	xor    eax,esp
1000cf68:	push   eax
1000cf69:	lea    eax,[esp+0x10]
1000cf6d:	mov    fs:0x0,eax
1000cf73:	mov    edi,DWORD PTR [esp+0x24]
1000cf77:	mov    DWORD PTR [esp+0x18],0x0
1000cf7f:	mov    DWORD PTR [esp+0xc],0x0
1000cf87:	mov    eax,DWORD PTR [edi]
1000cf89:	mov    ecx,DWORD PTR [eax-0x10]
1000cf8c:	test   ecx,ecx
1000cf8e:	je     0x1000cf9b
1000cf90:	mov    edx,DWORD PTR [ecx]
1000cf92:	mov    eax,DWORD PTR [edx+0x10]
1000cf95:	call   eax
1000cf97:	test   eax,eax
1000cf99:	jne    0x1000cfab
1000cf9b:	mov    edx,DWORD PTR ds:0x100c9090
1000cfa1:	mov    eax,DWORD PTR [edx+0x10]
1000cfa4:	mov    ecx,0x100c9090
1000cfa9:	call   eax
1000cfab:	xor    ecx,ecx
1000cfad:	test   eax,eax
1000cfaf:	setne  cl
1000cfb2:	test   ecx,ecx
1000cfb4:	jne    0x1000cfc0
1000cfb6:	push   0x80004005
1000cfbb:	call   0x10001090
1000cfc0:	mov    edx,DWORD PTR [eax]
1000cfc2:	mov    ecx,eax
1000cfc4:	mov    eax,DWORD PTR [edx+0xc]
1000cfc7:	call   eax
1000cfc9:	mov    esi,DWORD PTR [esp+0x20]
1000cfcd:	add    eax,0x10
1000cfd0:	mov    DWORD PTR [esi],eax
1000cfd2:	mov    ecx,DWORD PTR [esp+0x28]
1000cfd6:	mov    DWORD PTR [esp+0x18],0x0
1000cfde:	mov    eax,DWORD PTR [ecx]
1000cfe0:	mov    edx,DWORD PTR [eax-0xc]
1000cfe3:	mov    ecx,DWORD PTR [edi]
1000cfe5:	mov    edi,DWORD PTR [ecx-0xc]
1000cfe8:	push   edx
1000cfe9:	push   eax
1000cfea:	push   edi
1000cfeb:	push   ecx
1000cfec:	push   esi
1000cfed:	mov    DWORD PTR [esp+0x20],0x1
1000cff5:	call   0x10003df0
1000cffa:	add    esp,0x14
1000cffd:	mov    eax,esi
1000cfff:	mov    ecx,DWORD PTR [esp+0x10]
1000d003:	mov    DWORD PTR fs:0x0,ecx
1000d00a:	pop    ecx
1000d00b:	pop    edi
1000d00c:	pop    esi
1000d00d:	add    esp,0x10
1000d010:	ret    
1000d011:	int3   
1000d012:	int3   
1000d013:	int3   
1000d014:	int3   
1000d015:	int3   
1000d016:	int3   
1000d017:	int3   
1000d018:	int3   
1000d019:	int3   
1000d01a:	int3   
1000d01b:	int3   
1000d01c:	int3   
1000d01d:	int3   
1000d01e:	int3   
1000d01f:	int3   
1000d020:	push   esi
1000d021:	mov    esi,DWORD PTR [esp+0x8]
1000d025:	mov    eax,esi
1000d027:	push   edi
1000d028:	lea    edi,[eax+0x2]
1000d02b:	jmp    0x1000d030
1000d02d:	lea    ecx,[ecx+0x0]
1000d030:	mov    dx,WORD PTR [eax]
1000d033:	add    eax,0x2
1000d036:	test   dx,dx
1000d039:	jne    0x1000d030
1000d03b:	sub    eax,edi
1000d03d:	sar    eax,1
1000d03f:	push   eax
1000d040:	push   esi
1000d041:	call   0x10004f40
1000d046:	pop    edi
1000d047:	pop    esi
1000d048:	ret    0x4
1000d04b:	int3   
1000d04c:	int3   
1000d04d:	int3   
1000d04e:	int3   
1000d04f:	int3   
1000d050:	push   ecx
1000d051:	push   ebx
1000d052:	push   esi
1000d053:	push   edi
1000d054:	push   0x2710
1000d059:	call   DWORD PTR ds:0x1002f07c
1000d05f:	mov    esi,DWORD PTR [esp+0x14]
1000d063:	mov    ebx,DWORD PTR ds:0x1002f0c0
1000d069:	mov    DWORD PTR [esp+0xc],0x0
1000d071:	xor    edi,edi
1000d073:	push   0x0
1000d075:	lea    eax,[esp+0x18]
1000d079:	push   eax
1000d07a:	push   0x4
1000d07c:	lea    ecx,[esp+0x18]
1000d080:	push   ecx
1000d081:	push   esi
1000d082:	call   ebx
1000d084:	test   eax,eax
1000d086:	je     0x1000d090
1000d088:	add    edi,0x1
1000d08b:	cmp    edi,0xa
1000d08e:	jne    0x1000d073
1000d090:	test   esi,esi
1000d092:	je     0x1000d0aa
1000d094:	call   DWORD PTR ds:0x1002f094
1000d09a:	push   esi
1000d09b:	mov    edi,eax
1000d09d:	call   DWORD PTR ds:0x1002f064
1000d0a3:	push   edi
1000d0a4:	call   DWORD PTR ds:0x1002f090
1000d0aa:	pop    edi
1000d0ab:	pop    esi
1000d0ac:	xor    eax,eax
1000d0ae:	pop    ebx
1000d0af:	pop    ecx
1000d0b0:	ret    0x4
1000d0b3:	int3   
1000d0b4:	int3   
1000d0b5:	int3   
1000d0b6:	int3   
1000d0b7:	int3   
1000d0b8:	int3   
1000d0b9:	int3   
1000d0ba:	int3   
1000d0bb:	int3   
1000d0bc:	int3   
1000d0bd:	int3   
1000d0be:	int3   
1000d0bf:	int3   
1000d0c0:	push   0xffffffff
1000d0c2:	push   0x1002dd68
1000d0c7:	mov    eax,fs:0x0
1000d0cd:	push   eax
1000d0ce:	sub    esp,0x14
1000d0d1:	push   ebx
1000d0d2:	push   esi
1000d0d3:	push   edi
1000d0d4:	mov    eax,ds:0x100c7654
1000d0d9:	xor    eax,esp
1000d0db:	push   eax
1000d0dc:	lea    eax,[esp+0x24]
1000d0e0:	mov    fs:0x0,eax
1000d0e6:	mov    esi,DWORD PTR [esp+0x34]
1000d0ea:	mov    DWORD PTR [esp+0x14],esi
1000d0ee:	push   0x2
1000d0f0:	push   0x0
1000d0f2:	mov    DWORD PTR [esp+0x34],0x0
1000d0fa:	mov    ebx,DWORD PTR ds:0x1002f0e4
1000d100:	push   0x0
1000d102:	lea    eax,[esp+0x40]
1000d106:	mov    DWORD PTR [esp+0x40],0x0
1000d10e:	mov    edi,DWORD PTR [esi+0xc]
1000d111:	push   eax
1000d112:	call   ebx
1000d114:	push   eax
1000d115:	push   edi
1000d116:	call   ebx
1000d118:	push   eax
1000d119:	call   DWORD PTR ds:0x1002f110
1000d11f:	test   eax,eax
1000d121:	je     0x1000d1be
1000d127:	mov    ecx,DWORD PTR [esp+0x34]
1000d12b:	push   0x0
1000d12d:	push   0x0
1000d12f:	push   ecx
1000d130:	push   0x1000d050
1000d135:	call   0x1000bc10
1000d13a:	add    esp,0x4
1000d13d:	push   eax
1000d13e:	push   0x0
1000d140:	push   0x0
1000d142:	call   DWORD PTR ds:0x1002f080
1000d148:	push   0x0
1000d14a:	lea    edx,[esp+0x1c]
1000d14e:	push   edx
1000d14f:	push   0x4
1000d151:	mov    edi,eax
1000d153:	lea    ecx,[esp+0x1c]
1000d157:	mov    DWORD PTR [esp+0x1c],0x0
1000d15f:	mov    eax,DWORD PTR [esi+0x8]
1000d162:	push   ecx
1000d163:	push   eax
1000d164:	mov    DWORD PTR [esp+0x28],edi
1000d168:	call   DWORD PTR ds:0x1002f074
1000d16e:	test   eax,eax
1000d170:	je     0x1000d1a4
1000d172:	cmp    DWORD PTR [esp+0x18],0x4
1000d177:	jne    0x1000d1a4
1000d179:	mov    edx,DWORD PTR [esp+0x10]
1000d17d:	push   0x0
1000d17f:	lea    ecx,[esp+0x24]
1000d183:	push   ecx
1000d184:	mov    DWORD PTR [esp+0x24],edx
1000d188:	mov    eax,DWORD PTR [esi+0x4]
1000d18b:	push   0x4
1000d18d:	lea    edx,[esp+0x28]
1000d191:	push   edx
1000d192:	push   eax
1000d193:	call   DWORD PTR ds:0x1002f0c0
1000d199:	lea    ecx,[esp+0x14]
1000d19d:	call   0x10003310
1000d1a2:	jmp    0x1000d1be
1000d1a4:	test   edi,edi
1000d1a6:	je     0x1000d1be
1000d1a8:	call   DWORD PTR ds:0x1002f094
1000d1ae:	push   edi
1000d1af:	mov    ebx,eax
1000d1b1:	call   DWORD PTR ds:0x1002f064
1000d1b7:	push   ebx
1000d1b8:	call   DWORD PTR ds:0x1002f090
1000d1be:	call   0x1000d6e0
1000d1c3:	push   esi
1000d1c4:	call   0x1001876e
1000d1c9:	add    esp,0x4
1000d1cc:	xor    eax,eax
1000d1ce:	mov    ecx,DWORD PTR [esp+0x24]
1000d1d2:	mov    DWORD PTR fs:0x0,ecx
1000d1d9:	pop    ecx
1000d1da:	pop    edi
1000d1db:	pop    esi
1000d1dc:	pop    ebx
1000d1dd:	add    esp,0x20
1000d1e0:	ret    0x4
1000d1e3:	int3   
1000d1e4:	int3   
1000d1e5:	int3   
1000d1e6:	int3   
1000d1e7:	int3   
1000d1e8:	int3   
1000d1e9:	int3   
1000d1ea:	int3   
1000d1eb:	int3   
1000d1ec:	int3   
1000d1ed:	int3   
1000d1ee:	int3   
1000d1ef:	int3   
1000d1f0:	push   0xffffffff
1000d1f2:	push   0x1002dd29
1000d1f7:	mov    eax,fs:0x0
1000d1fd:	push   eax
1000d1fe:	sub    esp,0x30
1000d201:	mov    eax,ds:0x100c7654
1000d206:	xor    eax,esp
1000d208:	mov    DWORD PTR [esp+0x2c],eax
1000d20c:	push   ebx
1000d20d:	push   ebp
1000d20e:	push   esi
1000d20f:	push   edi
1000d210:	mov    eax,ds:0x100c7654
1000d215:	xor    eax,esp
1000d217:	push   eax
1000d218:	lea    eax,[esp+0x44]
1000d21c:	mov    fs:0x0,eax
1000d222:	mov    esi,ecx
1000d224:	xor    ebx,ebx
1000d226:	mov    DWORD PTR [esp+0x1c],ebx
1000d22a:	mov    edi,edx
1000d22c:	mov    DWORD PTR [esi+0x18],0xf
1000d233:	mov    DWORD PTR [esi+0x14],ebx
1000d236:	mov    DWORD PTR [esp+0x20],esi
1000d23a:	mov    DWORD PTR [esp+0x18],edi
1000d23e:	mov    BYTE PTR [esi+0x4],bl
1000d241:	mov    DWORD PTR [esp+0x4c],ebx
1000d245:	mov    ebp,0x1
1000d24a:	mov    DWORD PTR [esp+0x1c],ebp
1000d24e:	call   DWORD PTR ds:0x1002f128
1000d254:	xor    ecx,ecx
1000d256:	cmp    ecx,ebx
1000d258:	jle    0x1000d267
1000d25a:	cmp    WORD PTR [eax+ecx*2-0x2],bx
1000d25f:	jne    0x1000d267
1000d261:	cmp    WORD PTR [eax+ecx*2],bx
1000d265:	je     0x1000d26b
1000d267:	add    ecx,ebp
1000d269:	jmp    0x1000d256
1000d26b:	add    ecx,ecx
1000d26d:	push   ecx
1000d26e:	push   eax
1000d26f:	lea    ecx,[esp+0x2c]
1000d273:	mov    DWORD PTR [esp+0x44],0xf
1000d27b:	mov    DWORD PTR [esp+0x40],ebx
1000d27f:	mov    BYTE PTR [esp+0x30],bl
1000d283:	call   0x10003a70
1000d288:	push   ebx
1000d289:	lea    edx,[esp+0x28]
1000d28d:	push   edx
1000d28e:	or     eax,0xffffffff
1000d291:	mov    DWORD PTR [esp+0x54],ebp
1000d295:	call   0x10003810
1000d29a:	mov    BYTE PTR [esp+0x4c],bl
1000d29e:	cmp    DWORD PTR [esp+0x3c],0x10
1000d2a3:	jb     0x1000d2b2
1000d2a5:	mov    eax,DWORD PTR [esp+0x28]
1000d2a9:	push   eax
1000d2aa:	call   0x1001876e
1000d2af:	add    esp,0x4
1000d2b2:	mov    edx,DWORD PTR ds:0x100c9090
1000d2b8:	mov    eax,DWORD PTR [edx+0xc]
1000d2bb:	mov    ecx,0x100c9090
1000d2c0:	call   eax
1000d2c2:	add    eax,0x10
1000d2c5:	mov    DWORD PTR [esp+0x14],eax
1000d2c9:	mov    DWORD PTR [esp+0x4c],0x2
1000d2d1:	mov    eax,DWORD PTR [edi]
1000d2d3:	push   eax
1000d2d4:	push   0x100b9df0
1000d2d9:	push   0x5
1000d2db:	push   0x100b9e50
1000d2e0:	call   0x100035f0
1000d2e5:	add    esp,0xc
1000d2e8:	push   eax
1000d2e9:	lea    ecx,[esp+0x1c]
1000d2ed:	push   ecx
1000d2ee:	call   0x1000d790
1000d2f3:	mov    edi,DWORD PTR [esp+0x20]
1000d2f7:	mov    ebp,DWORD PTR [edi-0xc]
1000d2fa:	add    esp,0xc
1000d2fd:	cmp    DWORD PTR [edi-0x4],0x1
1000d301:	jle    0x1000d313
1000d303:	mov    edx,ebp
1000d305:	push   edx
1000d306:	lea    ecx,[esp+0x18]
1000d30a:	call   0x10003e80
1000d30f:	mov    edi,DWORD PTR [esp+0x14]
1000d313:	lea    eax,[ebp+ebp*1+0x2]
1000d317:	push   eax
1000d318:	push   edi
1000d319:	lea    ecx,[esp+0x2c]
1000d31d:	mov    DWORD PTR [esp+0x44],0xf
1000d325:	mov    DWORD PTR [esp+0x40],ebx
1000d329:	mov    BYTE PTR [esp+0x30],bl
1000d32d:	call   0x10003a70
1000d332:	push   ebx
1000d333:	lea    ecx,[esp+0x28]
1000d337:	push   ecx
1000d338:	or     eax,0xffffffff
1000d33b:	mov    BYTE PTR [esp+0x54],0x3
1000d340:	call   0x10003810
1000d345:	cmp    DWORD PTR [esp+0x3c],0x10
1000d34a:	jb     0x1000d359
1000d34c:	mov    edx,DWORD PTR [esp+0x28]
1000d350:	push   edx
1000d351:	call   0x1001876e
1000d356:	add    esp,0x4
1000d359:	add    edi,0xfffffff0
1000d35c:	mov    DWORD PTR [esp+0x3c],0xf
1000d364:	mov    DWORD PTR [esp+0x38],ebx
1000d368:	mov    BYTE PTR [esp+0x28],bl
1000d36c:	mov    BYTE PTR [esp+0x4c],bl
1000d370:	lea    eax,[edi+0xc]
1000d373:	or     ecx,0xffffffff
1000d376:	lock xadd DWORD PTR [eax],ecx
1000d37a:	dec    ecx
1000d37b:	test   ecx,ecx
1000d37d:	jg     0x1000d389
1000d37f:	mov    ecx,DWORD PTR [edi]
1000d381:	mov    edx,DWORD PTR [ecx]
1000d383:	mov    eax,DWORD PTR [edx+0x4]
1000d386:	push   edi
1000d387:	call   eax
1000d389:	mov    edx,DWORD PTR ds:0x100c9090
1000d38f:	mov    eax,DWORD PTR [edx+0xc]
1000d392:	mov    ecx,0x100c9090
1000d397:	call   eax
1000d399:	add    eax,0x10
1000d39c:	mov    DWORD PTR [esp+0x14],eax
1000d3a0:	mov    ecx,DWORD PTR [esp+0x18]
1000d3a4:	mov    DWORD PTR [esp+0x4c],0x4
1000d3ac:	mov    eax,DWORD PTR [ecx+0xc]
1000d3af:	push   eax
1000d3b0:	push   0x100b9e60
1000d3b5:	push   0x5
1000d3b7:	push   0x100b9eb8
1000d3bc:	call   0x100035f0
1000d3c1:	add    esp,0xc
1000d3c4:	push   eax
1000d3c5:	lea    edx,[esp+0x1c]
1000d3c9:	push   edx
1000d3ca:	call   0x1000d790
1000d3cf:	mov    edi,DWORD PTR [esp+0x20]
1000d3d3:	mov    ebp,DWORD PTR [edi-0xc]
1000d3d6:	add    esp,0xc
1000d3d9:	cmp    DWORD PTR [edi-0x4],0x1
1000d3dd:	jle    0x1000d3ef
1000d3df:	mov    eax,ebp
1000d3e1:	push   eax
1000d3e2:	lea    ecx,[esp+0x18]
1000d3e6:	call   0x10003e80
1000d3eb:	mov    edi,DWORD PTR [esp+0x14]
1000d3ef:	lea    ecx,[ebp+ebp*1+0x2]
1000d3f3:	push   ecx
1000d3f4:	push   edi
1000d3f5:	lea    ecx,[esp+0x2c]
1000d3f9:	mov    DWORD PTR [esp+0x44],0xf
1000d401:	mov    DWORD PTR [esp+0x40],ebx
1000d405:	mov    BYTE PTR [esp+0x30],bl
1000d409:	call   0x10003a70
1000d40e:	push   ebx
1000d40f:	lea    edx,[esp+0x28]
1000d413:	push   edx
1000d414:	or     eax,0xffffffff
1000d417:	mov    BYTE PTR [esp+0x54],0x5
1000d41c:	call   0x10003810
1000d421:	cmp    DWORD PTR [esp+0x3c],0x10
1000d426:	jb     0x1000d435
1000d428:	mov    eax,DWORD PTR [esp+0x28]
1000d42c:	push   eax
1000d42d:	call   0x1001876e
1000d432:	add    esp,0x4
1000d435:	mov    ebp,0xf
1000d43a:	add    edi,0xfffffff0
1000d43d:	mov    DWORD PTR [esp+0x3c],ebp
1000d441:	mov    DWORD PTR [esp+0x38],ebx
1000d445:	mov    BYTE PTR [esp+0x28],bl
1000d449:	mov    BYTE PTR [esp+0x4c],bl
1000d44d:	lea    ecx,[edi+0xc]
1000d450:	or     edx,0xffffffff
1000d453:	lock xadd DWORD PTR [ecx],edx
1000d457:	dec    edx
1000d458:	test   edx,edx
1000d45a:	jg     0x1000d466
1000d45c:	mov    ecx,DWORD PTR [edi]
1000d45e:	mov    eax,DWORD PTR [ecx]
1000d460:	mov    edx,DWORD PTR [eax+0x4]
1000d463:	push   edi
1000d464:	call   edx
1000d466:	push   0x2
1000d468:	push   0x100b9dec
1000d46d:	lea    eax,[esp+0x30]
1000d471:	push   ebp
1000d472:	push   eax
1000d473:	mov    DWORD PTR [esp+0x4c],ebp
1000d477:	mov    DWORD PTR [esp+0x48],ebx
1000d47b:	mov    BYTE PTR [esp+0x38],bl
1000d47f:	call   0x10018df3
1000d484:	mov    eax,DWORD PTR [esp+0x38]
1000d488:	mov    edi,0x10
1000d48d:	add    esp,0x10
1000d490:	cmp    DWORD PTR [esp+0x3c],edi
1000d494:	mov    DWORD PTR [esp+0x38],0x2
1000d49c:	jae    0x1000d4a2
1000d49e:	lea    eax,[esp+0x28]
1000d4a2:	mov    BYTE PTR [eax+0x2],bl
1000d4a5:	push   ebx
1000d4a6:	lea    ecx,[esp+0x28]
1000d4aa:	push   ecx
1000d4ab:	or     eax,0xffffffff
1000d4ae:	mov    DWORD PTR [esp+0x54],0x6
1000d4b6:	call   0x10003810
1000d4bb:	cmp    DWORD PTR [esp+0x3c],edi
1000d4bf:	jb     0x1000d4ce
1000d4c1:	mov    edx,DWORD PTR [esp+0x28]
1000d4c5:	push   edx
1000d4c6:	call   0x1001876e
1000d4cb:	add    esp,0x4
1000d4ce:	mov    eax,esi
1000d4d0:	mov    ecx,DWORD PTR [esp+0x44]
1000d4d4:	mov    DWORD PTR fs:0x0,ecx
1000d4db:	pop    ecx
1000d4dc:	pop    edi
1000d4dd:	pop    esi
1000d4de:	pop    ebp
1000d4df:	pop    ebx
1000d4e0:	mov    ecx,DWORD PTR [esp+0x2c]
1000d4e4:	xor    ecx,esp
1000d4e6:	call   0x10018773
1000d4eb:	add    esp,0x3c
1000d4ee:	ret    
1000d4ef:	int3   
1000d4f0:	push   0xffffffff
1000d4f2:	push   0x1002e2e1
1000d4f7:	mov    eax,fs:0x0
1000d4fd:	push   eax
1000d4fe:	sub    esp,0x28
1000d501:	push   ebx
1000d502:	push   ebp
1000d503:	push   esi
1000d504:	push   edi
1000d505:	mov    eax,ds:0x100c7654
1000d50a:	xor    eax,esp
1000d50c:	push   eax
1000d50d:	lea    eax,[esp+0x3c]
1000d511:	mov    fs:0x0,eax
1000d517:	mov    eax,DWORD PTR [esp+0x4c]
1000d51b:	xor    edi,edi
1000d51d:	mov    DWORD PTR [esp+0x44],edi
1000d521:	push   0x10
1000d523:	mov    DWORD PTR [esp+0x28],eax
1000d527:	mov    DWORD PTR [esp+0x2c],edi
1000d52b:	call   0x100190b4
1000d530:	add    esp,0x4
1000d533:	cmp    eax,edi
1000d535:	je     0x1000d546
1000d537:	mov    DWORD PTR [eax],edi
1000d539:	mov    DWORD PTR [eax+0x4],edi
1000d53c:	mov    DWORD PTR [eax+0x8],edi
1000d53f:	mov    DWORD PTR [eax+0xc],edi
1000d542:	mov    esi,eax
1000d544:	jmp    0x1000d548
1000d546:	xor    esi,esi
1000d548:	mov    DWORD PTR [esp+0x2c],esi
1000d54c:	push   edi
1000d54d:	mov    eax,0x1
1000d552:	mov    DWORD PTR [esp+0x48],eax
1000d556:	lea    ecx,[esp+0x34]
1000d55a:	push   ecx
1000d55b:	lea    edx,[esp+0x24]
1000d55f:	mov    DWORD PTR [esp+0x40],eax
1000d563:	push   edx
1000d564:	lea    eax,[esp+0x2c]
1000d568:	push   eax
1000d569:	mov    DWORD PTR [esp+0x40],0xc
1000d571:	mov    DWORD PTR [esp+0x44],edi
1000d575:	mov    DWORD PTR [esp+0x30],edi
1000d579:	mov    DWORD PTR [esp+0x2c],edi
1000d57d:	call   DWORD PTR ds:0x1002f12c
1000d583:	test   eax,eax
1000d585:	mov    ebx,DWORD PTR ds:0x1002f094
1000d58b:	mov    ebp,DWORD PTR ds:0x1002f064
1000d591:	je     0x1000d5e9
1000d593:	mov    edi,DWORD PTR [esi+0x8]
1000d596:	test   edi,edi
1000d598:	mov    ecx,DWORD PTR [esp+0x20]
1000d59c:	mov    DWORD PTR [esp+0x18],ecx
1000d5a0:	je     0x1000d5b6
1000d5a2:	call   ebx
1000d5a4:	push   edi
1000d5a5:	mov    DWORD PTR [esp+0x18],eax
1000d5a9:	call   ebp
1000d5ab:	mov    edx,DWORD PTR [esp+0x14]
1000d5af:	push   edx
1000d5b0:	call   DWORD PTR ds:0x1002f090
1000d5b6:	mov    eax,DWORD PTR [esp+0x18]
1000d5ba:	mov    DWORD PTR [esi+0x8],eax
1000d5bd:	mov    edi,DWORD PTR [esi+0xc]
1000d5c0:	test   edi,edi
1000d5c2:	mov    ecx,DWORD PTR [esp+0x1c]
1000d5c6:	mov    DWORD PTR [esp+0x14],ecx
1000d5ca:	je     0x1000d5e0
1000d5cc:	call   ebx
1000d5ce:	push   edi
1000d5cf:	mov    DWORD PTR [esp+0x1c],eax
1000d5d3:	call   ebp
1000d5d5:	mov    edx,DWORD PTR [esp+0x18]
1000d5d9:	push   edx
1000d5da:	call   DWORD PTR ds:0x1002f090
1000d5e0:	mov    eax,DWORD PTR [esp+0x14]
1000d5e4:	mov    DWORD PTR [esi+0xc],eax
1000d5e7:	xor    edi,edi
1000d5e9:	push   edi
1000d5ea:	lea    ecx,[esp+0x34]
1000d5ee:	push   ecx
1000d5ef:	lea    edx,[esp+0x24]
1000d5f3:	push   edx
1000d5f4:	lea    eax,[esp+0x2c]
1000d5f8:	push   eax
1000d5f9:	call   DWORD PTR ds:0x1002f12c
1000d5ff:	test   eax,eax
1000d601:	je     0x1000d657
1000d603:	mov    edi,DWORD PTR [esi]
1000d605:	test   edi,edi
1000d607:	mov    ecx,DWORD PTR [esp+0x20]
1000d60b:	mov    DWORD PTR [esp+0x14],ecx
1000d60f:	je     0x1000d625
1000d611:	call   ebx
1000d613:	push   edi
1000d614:	mov    DWORD PTR [esp+0x1c],eax
1000d618:	call   ebp
1000d61a:	mov    edx,DWORD PTR [esp+0x18]
1000d61e:	push   edx
1000d61f:	call   DWORD PTR ds:0x1002f090
1000d625:	mov    eax,DWORD PTR [esp+0x14]
1000d629:	mov    DWORD PTR [esi],eax
1000d62b:	mov    edi,DWORD PTR [esi+0x4]
1000d62e:	test   edi,edi
1000d630:	mov    ecx,DWORD PTR [esp+0x1c]
1000d634:	mov    DWORD PTR [esp+0x14],ecx
1000d638:	je     0x1000d64e
1000d63a:	call   ebx
1000d63c:	push   edi
1000d63d:	mov    DWORD PTR [esp+0x1c],eax
1000d641:	call   ebp
1000d643:	mov    edx,DWORD PTR [esp+0x18]
1000d647:	push   edx
1000d648:	call   DWORD PTR ds:0x1002f090
1000d64e:	mov    eax,DWORD PTR [esp+0x14]
1000d652:	mov    DWORD PTR [esi+0x4],eax
1000d655:	xor    edi,edi
1000d657:	mov    ecx,DWORD PTR [esp+0x24]
1000d65b:	mov    edx,esi
1000d65d:	call   0x1000d1f0
1000d662:	push   edi
1000d663:	push   edi
1000d664:	push   esi
1000d665:	push   0x1000d0c0
1000d66a:	mov    DWORD PTR [esp+0x38],0x1
1000d672:	mov    DWORD PTR [esp+0x3c],edi
1000d676:	call   0x1000bc10
1000d67b:	add    esp,0x4
1000d67e:	push   eax
1000d67f:	push   edi
1000d680:	push   edi
1000d681:	call   DWORD PTR ds:0x1002f080
1000d687:	mov    esi,eax
1000d689:	cmp    esi,edi
1000d68b:	je     0x1000d69b
1000d68d:	call   ebx
1000d68f:	push   esi
1000d690:	mov    edi,eax
1000d692:	call   ebp
1000d694:	push   edi
1000d695:	call   DWORD PTR ds:0x1002f090
1000d69b:	mov    eax,DWORD PTR [esp+0x24]
1000d69f:	mov    ecx,DWORD PTR [esp+0x3c]
1000d6a3:	mov    DWORD PTR fs:0x0,ecx
1000d6aa:	pop    ecx
1000d6ab:	pop    edi
1000d6ac:	pop    esi
1000d6ad:	pop    ebp
1000d6ae:	pop    ebx
1000d6af:	add    esp,0x34
1000d6b2:	ret    
1000d6b3:	int3   
1000d6b4:	int3   
1000d6b5:	int3   
1000d6b6:	int3   
1000d6b7:	int3   
1000d6b8:	int3   
1000d6b9:	int3   
1000d6ba:	int3   
1000d6bb:	int3   
1000d6bc:	int3   
1000d6bd:	int3   
1000d6be:	int3   
1000d6bf:	int3   
1000d6c0:	push   esi
1000d6c1:	mov    esi,DWORD PTR [eax]
1000d6c3:	test   esi,esi
1000d6c5:	je     0x1000d6d5
1000d6c7:	call   0x1000d6e0
1000d6cc:	push   esi
1000d6cd:	call   0x1001876e
1000d6d2:	add    esp,0x4
1000d6d5:	pop    esi
1000d6d6:	ret    
1000d6d7:	int3   
1000d6d8:	int3   
1000d6d9:	int3   
1000d6da:	int3   
1000d6db:	int3   
1000d6dc:	int3   
1000d6dd:	int3   
1000d6de:	int3   
1000d6df:	int3   
1000d6e0:	sub    esp,0x8
1000d6e3:	mov    eax,DWORD PTR [esi+0xc]
1000d6e6:	test   eax,eax
1000d6e8:	push   ebx
1000d6e9:	mov    ebx,DWORD PTR ds:0x1002f064
1000d6ef:	push   ebp
1000d6f0:	mov    ebp,DWORD PTR ds:0x1002f090
1000d6f6:	push   edi
1000d6f7:	mov    edi,DWORD PTR ds:0x1002f094
1000d6fd:	mov    DWORD PTR [esp+0xc],eax
1000d701:	je     0x1000d717
1000d703:	call   edi
1000d705:	mov    DWORD PTR [esp+0x10],eax
1000d709:	mov    eax,DWORD PTR [esp+0xc]
1000d70d:	push   eax
1000d70e:	call   ebx
1000d710:	mov    ecx,DWORD PTR [esp+0x10]
1000d714:	push   ecx
1000d715:	call   ebp
1000d717:	mov    DWORD PTR [esi+0xc],0x0
1000d71e:	mov    eax,DWORD PTR [esi+0x8]
1000d721:	test   eax,eax
1000d723:	mov    DWORD PTR [esp+0x10],eax
1000d727:	je     0x1000d73d
1000d729:	call   edi
1000d72b:	mov    edx,DWORD PTR [esp+0x10]
1000d72f:	push   edx
1000d730:	mov    DWORD PTR [esp+0x10],eax
1000d734:	call   ebx
1000d736:	mov    eax,DWORD PTR [esp+0xc]
1000d73a:	push   eax
1000d73b:	call   ebp
1000d73d:	mov    DWORD PTR [esi+0x8],0x0
1000d744:	mov    eax,DWORD PTR [esi+0x4]
1000d747:	test   eax,eax
1000d749:	mov    DWORD PTR [esp+0x10],eax
1000d74d:	je     0x1000d763
1000d74f:	call   edi
1000d751:	mov    ecx,DWORD PTR [esp+0x10]
1000d755:	push   ecx
1000d756:	mov    DWORD PTR [esp+0x10],eax
1000d75a:	call   ebx
1000d75c:	mov    edx,DWORD PTR [esp+0xc]
1000d760:	push   edx
1000d761:	call   ebp
1000d763:	mov    DWORD PTR [esi+0x4],0x0
1000d76a:	mov    eax,DWORD PTR [esi]
1000d76c:	test   eax,eax
1000d76e:	mov    DWORD PTR [esp+0x10],eax
1000d772:	je     0x1000d782
1000d774:	call   edi
1000d776:	mov    edi,eax
1000d778:	mov    eax,DWORD PTR [esp+0x10]
1000d77c:	push   eax
1000d77d:	call   ebx
1000d77f:	push   edi
1000d780:	call   ebp
1000d782:	pop    edi
1000d783:	pop    ebp
1000d784:	mov    DWORD PTR [esi],0x0
1000d78a:	pop    ebx
1000d78b:	add    esp,0x8
1000d78e:	ret    
1000d78f:	int3   
1000d790:	mov    ecx,DWORD PTR [esp+0x8]
1000d794:	lea    eax,[esp+0xc]
1000d798:	push   eax
1000d799:	push   ecx
1000d79a:	mov    ecx,DWORD PTR [esp+0xc]
1000d79e:	call   0x1000d7b0
1000d7a3:	ret    
1000d7a4:	int3   
1000d7a5:	int3   
1000d7a6:	int3   
1000d7a7:	int3   
1000d7a8:	int3   
1000d7a9:	int3   
1000d7aa:	int3   
1000d7ab:	int3   
1000d7ac:	int3   
1000d7ad:	int3   
1000d7ae:	int3   
1000d7af:	int3   
1000d7b0:	push   ebx
1000d7b1:	mov    ebx,DWORD PTR [esp+0x8]
1000d7b5:	test   ebx,ebx
1000d7b7:	push   edi
1000d7b8:	mov    edi,ecx
1000d7ba:	jne    0x1000d7c6
1000d7bc:	push   0x80070057
1000d7c1:	call   0x10001090
1000d7c6:	push   ebp
1000d7c7:	mov    ebp,DWORD PTR [esp+0x14]
1000d7cb:	push   esi
1000d7cc:	push   ebp
1000d7cd:	push   ebx
1000d7ce:	call   0x10019d2e
1000d7d3:	mov    esi,eax
1000d7d5:	mov    eax,DWORD PTR [edi]
1000d7d7:	mov    edx,DWORD PTR [eax-0x8]
1000d7da:	sub    eax,0x10
1000d7dd:	mov    ecx,0x1
1000d7e2:	sub    ecx,DWORD PTR [eax+0xc]
1000d7e5:	sub    edx,esi
1000d7e7:	add    esp,0x8
1000d7ea:	or     ecx,edx
1000d7ec:	jge    0x1000d7f6
1000d7ee:	push   esi
1000d7ef:	mov    ecx,edi
1000d7f1:	call   0x10004aa0
1000d7f6:	mov    ecx,DWORD PTR [edi]
1000d7f8:	push   ebp
1000d7f9:	push   ebx
1000d7fa:	lea    eax,[esi+0x1]
1000d7fd:	push   eax
1000d7fe:	push   ecx
1000d7ff:	call   0x10019ec3
1000d804:	add    esp,0x10
1000d807:	test   esi,esi
1000d809:	jl     0x1000d824
1000d80b:	mov    eax,DWORD PTR [edi]
1000d80d:	cmp    esi,DWORD PTR [eax-0x8]
1000d810:	jg     0x1000d824
1000d812:	mov    DWORD PTR [eax-0xc],esi
1000d815:	mov    edx,DWORD PTR [edi]
1000d817:	mov    WORD PTR [edx+esi*2],0x0
1000d81d:	pop    esi
1000d81e:	pop    ebp
1000d81f:	pop    edi
1000d820:	pop    ebx
1000d821:	ret    0x8
1000d824:	push   0x80070057
1000d829:	call   0x10001090
1000d82e:	int3   
1000d82f:	int3   
1000d830:	push   ebp
1000d831:	mov    ebp,esp
1000d833:	and    esp,0xfffffff8
1000d836:	mov    ecx,DWORD PTR [eax]
1000d838:	sub    esp,0x2c
1000d83b:	cmp    ecx,DWORD PTR [eax+0x4]
1000d83e:	push   edi
1000d83f:	jb     0x1000d857
1000d841:	lea    edi,[esp+0x8]
1000d845:	call   0x1000d890
1000d84a:	push   0x100bbaf0
1000d84f:	mov    eax,edi
1000d851:	push   eax
1000d852:	call   0x10018e6e
1000d857:	mov    edx,DWORD PTR [eax+0x8]
1000d85a:	mov    al,BYTE PTR [ecx+edx*1]
1000d85d:	pop    edi
1000d85e:	mov    esp,ebp
1000d860:	pop    ebp
1000d861:	ret    
1000d862:	int3   
1000d863:	int3   
1000d864:	int3   
1000d865:	int3   
1000d866:	int3   
1000d867:	int3   
1000d868:	int3   
1000d869:	int3   
1000d86a:	int3   
1000d86b:	int3   
1000d86c:	int3   
1000d86d:	int3   
1000d86e:	int3   
1000d86f:	int3   
1000d870:	mov    eax,DWORD PTR [esp+0x4]
1000d874:	push   esi
1000d875:	push   eax
1000d876:	mov    esi,ecx
1000d878:	call   0x100015c0
1000d87d:	mov    DWORD PTR [esi],0x100b9f3c
1000d883:	mov    eax,esi
1000d885:	pop    esi
1000d886:	ret    0x4
1000d889:	int3   
1000d88a:	int3   
1000d88b:	int3   
1000d88c:	int3   
1000d88d:	int3   
1000d88e:	int3   
1000d88f:	int3   
1000d890:	push   0xffffffff
1000d892:	push   0x1002dcb8
1000d897:	mov    eax,fs:0x0
1000d89d:	push   eax
1000d89e:	sub    esp,0x1c
1000d8a1:	push   esi
1000d8a2:	mov    eax,ds:0x100c7654
1000d8a7:	xor    eax,esp
1000d8a9:	push   eax
1000d8aa:	lea    eax,[esp+0x24]
1000d8ae:	mov    fs:0x0,eax
1000d8b4:	push   0x100b9ec8
1000d8b9:	push   0xd
1000d8bb:	push   0x100b9f2c
1000d8c0:	call   0x100033d0
1000d8c5:	mov    ecx,eax
1000d8c7:	add    esp,0xc
1000d8ca:	mov    DWORD PTR [esp+0x20],0xf
1000d8d2:	mov    DWORD PTR [esp+0x1c],0x0
1000d8da:	mov    BYTE PTR [esp+0xc],0x0
1000d8df:	lea    esi,[ecx+0x1]
1000d8e2:	mov    dl,BYTE PTR [ecx]
1000d8e4:	add    ecx,0x1
1000d8e7:	test   dl,dl
1000d8e9:	jne    0x1000d8e2
1000d8eb:	sub    ecx,esi
1000d8ed:	push   ecx
1000d8ee:	push   eax
1000d8ef:	lea    ecx,[esp+0x10]
1000d8f3:	call   0x10003a70
1000d8f8:	lea    eax,[esp+0x8]
1000d8fc:	push   eax
1000d8fd:	push   edi
1000d8fe:	mov    DWORD PTR [esp+0x34],0x0
1000d906:	call   0x10001550
1000d90b:	cmp    DWORD PTR [esp+0x20],0x10
1000d910:	jb     0x1000d91f
1000d912:	mov    ecx,DWORD PTR [esp+0xc]
1000d916:	push   ecx
1000d917:	call   0x1001876e
1000d91c:	add    esp,0x4
1000d91f:	mov    eax,edi
1000d921:	mov    DWORD PTR [edi],0x100b9f3c
1000d927:	mov    ecx,DWORD PTR [esp+0x24]
1000d92b:	mov    DWORD PTR fs:0x0,ecx
1000d932:	pop    ecx
1000d933:	pop    esi
1000d934:	add    esp,0x28
1000d937:	ret    
1000d938:	int3   
1000d939:	int3   
1000d93a:	int3   
1000d93b:	int3   
1000d93c:	int3   
1000d93d:	int3   
1000d93e:	int3   
1000d93f:	int3   
1000d940:	mov    edx,DWORD PTR [esp+0x4]
1000d944:	mov    eax,ecx
1000d946:	mov    ecx,DWORD PTR [esp+0x8]
1000d94a:	mov    DWORD PTR [eax],0x0
1000d950:	mov    DWORD PTR [eax+0x4],ecx
1000d953:	mov    DWORD PTR [eax+0x8],edx
1000d956:	ret    0x8
1000d959:	int3   
1000d95a:	int3   
1000d95b:	int3   
1000d95c:	int3   
1000d95d:	int3   
1000d95e:	int3   
1000d95f:	int3   
1000d960:	push   0xffffffff
1000d962:	push   0x1002e2a1
1000d967:	mov    eax,fs:0x0
1000d96d:	push   eax
1000d96e:	sub    esp,0x10
1000d971:	push   ebx
1000d972:	push   esi
1000d973:	push   edi
1000d974:	mov    eax,ds:0x100c7654
1000d979:	xor    eax,esp
1000d97b:	push   eax
1000d97c:	lea    eax,[esp+0x20]
1000d980:	mov    fs:0x0,eax
1000d986:	mov    esi,DWORD PTR [esp+0x30]
1000d98a:	mov    edi,ecx
1000d98c:	xor    eax,eax
1000d98e:	mov    DWORD PTR [esp+0x10],eax
1000d992:	mov    ecx,DWORD PTR [edi]
1000d994:	mov    DWORD PTR [esp+0x14],esi
1000d998:	mov    DWORD PTR [esp+0x18],edi
1000d99c:	mov    DWORD PTR [esp+0x1c],ecx
1000d9a0:	mov    DWORD PTR [esp+0x28],0x1
1000d9a8:	mov    DWORD PTR [esi+0x18],0xf
1000d9af:	mov    DWORD PTR [esi+0x14],eax
1000d9b2:	mov    BYTE PTR [esi+0x4],al
1000d9b5:	mov    eax,edi
1000d9b7:	mov    DWORD PTR [esp+0x10],0x1
1000d9bf:	call   0x1000d830
1000d9c4:	test   al,al
1000d9c6:	je     0x1000d9e4
1000d9c8:	mov    eax,edi
1000d9ca:	call   0x1000d830
1000d9cf:	mov    bl,al
1000d9d1:	call   0x10003900
1000d9d6:	add    DWORD PTR [edi],0x1
1000d9d9:	mov    eax,edi
1000d9db:	call   0x1000d830
1000d9e0:	test   al,al
1000d9e2:	jne    0x1000d9c8
1000d9e4:	mov    eax,esi
1000d9e6:	add    DWORD PTR [edi],0x1
1000d9e9:	mov    ecx,DWORD PTR [esp+0x20]
1000d9ed:	mov    DWORD PTR fs:0x0,ecx
1000d9f4:	pop    ecx
1000d9f5:	pop    edi
1000d9f6:	pop    esi
1000d9f7:	pop    ebx
1000d9f8:	add    esp,0x1c
1000d9fb:	ret    0x4
1000d9fe:	int3   
1000d9ff:	int3   
1000da00:	push   ebp
1000da01:	mov    ebp,esp
1000da03:	and    esp,0xfffffff8
1000da06:	push   0xffffffff
1000da08:	push   0x1002e448
1000da0d:	mov    eax,fs:0x0
1000da13:	push   eax
1000da14:	sub    esp,0x38
1000da17:	push   ebx
1000da18:	push   esi
1000da19:	push   edi
1000da1a:	mov    eax,ds:0x100c7654
1000da1f:	xor    eax,esp
1000da21:	push   eax
1000da22:	lea    eax,[esp+0x48]
1000da26:	mov    fs:0x0,eax
1000da2c:	mov    edi,DWORD PTR [ebp+0x8]
1000da2f:	mov    esi,ecx
1000da31:	xor    eax,eax
1000da33:	mov    DWORD PTR [esp+0x14],eax
1000da37:	mov    ecx,DWORD PTR [esi]
1000da39:	mov    DWORD PTR [esp+0x14],esi
1000da3d:	mov    DWORD PTR [esp+0x18],ecx
1000da41:	mov    ecx,esi
1000da43:	mov    DWORD PTR [esp+0x50],eax
1000da47:	call   0x1000dab0
1000da4c:	mov    ecx,DWORD PTR [esi]
1000da4e:	mov    edx,DWORD PTR [esi+0x4]
1000da51:	mov    ebx,eax
1000da53:	sub    edx,ecx
1000da55:	cmp    ebx,edx
1000da57:	jbe    0x1000da6f
1000da59:	lea    edi,[esp+0x1c]
1000da5d:	call   0x1000d890
1000da62:	push   0x100bbaf0
1000da67:	mov    eax,edi
1000da69:	push   eax
1000da6a:	call   0x10018e6e
1000da6f:	mov    eax,DWORD PTR [esi+0x8]
1000da72:	add    eax,ecx
1000da74:	push   ebx
1000da75:	mov    DWORD PTR [edi+0x18],0xf
1000da7c:	mov    DWORD PTR [edi+0x14],0x0
1000da83:	push   eax
1000da84:	mov    ecx,edi
1000da86:	mov    BYTE PTR [edi+0x4],0x0
1000da8a:	call   0x10003a70
1000da8f:	add    DWORD PTR [esi],ebx
1000da91:	mov    eax,edi
1000da93:	mov    ecx,DWORD PTR [esp+0x48]
1000da97:	mov    DWORD PTR fs:0x0,ecx
1000da9e:	pop    ecx
1000da9f:	pop    edi
1000daa0:	pop    esi
1000daa1:	pop    ebx
1000daa2:	mov    esp,ebp
1000daa4:	pop    ebp
1000daa5:	ret    0x4
1000daa8:	int3   
1000daa9:	int3   
1000daaa:	int3   
1000daab:	int3   
1000daac:	int3   
1000daad:	int3   
1000daae:	int3   
1000daaf:	int3   
1000dab0:	push   ebp
1000dab1:	mov    ebp,esp
1000dab3:	and    esp,0xfffffff8
1000dab6:	push   0xffffffff
1000dab8:	push   0x1002e258
1000dabd:	mov    eax,fs:0x0
1000dac3:	push   eax
1000dac4:	sub    esp,0x3c
1000dac7:	push   esi
1000dac8:	push   edi
1000dac9:	mov    eax,ds:0x100c7654
1000dace:	xor    eax,esp
1000dad0:	push   eax
1000dad1:	lea    eax,[esp+0x48]
1000dad5:	mov    fs:0x0,eax
1000dadb:	mov    eax,DWORD PTR [ecx]
1000dadd:	mov    DWORD PTR [esp+0x14],ecx
1000dae1:	mov    DWORD PTR [esp+0x18],eax
1000dae5:	mov    DWORD PTR [esp+0x50],0x0
1000daed:	mov    edi,DWORD PTR [ecx+0x4]
1000daf0:	cmp    eax,edi
1000daf2:	jb     0x1000db0a
1000daf4:	lea    edi,[esp+0x1c]
1000daf8:	call   0x1000d890
1000dafd:	push   0x100bbaf0
1000db02:	mov    eax,edi
1000db04:	push   eax
1000db05:	call   0x10018e6e
1000db0a:	mov    esi,DWORD PTR [ecx+0x8]
1000db0d:	mov    dl,BYTE PTR [esi+eax*1]
1000db10:	add    eax,0x1
1000db13:	cmp    eax,edi
1000db15:	mov    BYTE PTR [esp+0x10],dl
1000db19:	mov    DWORD PTR [ecx],eax
1000db1b:	jb     0x1000db33
1000db1d:	lea    edi,[esp+0x1c]
1000db21:	call   0x1000d890
1000db26:	push   0x100bbaf0
1000db2b:	mov    eax,edi
1000db2d:	push   eax
1000db2e:	call   0x10018e6e
1000db33:	mov    dl,BYTE PTR [eax+esi*1]
1000db36:	add    eax,0x1
1000db39:	cmp    eax,edi
1000db3b:	mov    BYTE PTR [esp+0x11],dl
1000db3f:	mov    DWORD PTR [ecx],eax
1000db41:	jb     0x1000db59
1000db43:	lea    edi,[esp+0x1c]
1000db47:	call   0x1000d890
1000db4c:	push   0x100bbaf0
1000db51:	mov    eax,edi
1000db53:	push   eax
1000db54:	call   0x10018e6e
1000db59:	mov    dl,BYTE PTR [eax+esi*1]
1000db5c:	add    eax,0x1
1000db5f:	cmp    eax,edi
1000db61:	mov    BYTE PTR [esp+0x12],dl
1000db65:	mov    DWORD PTR [ecx],eax
1000db67:	jb     0x1000db7f
1000db69:	lea    edi,[esp+0x1c]
1000db6d:	call   0x1000d890
1000db72:	push   0x100bbaf0
1000db77:	mov    eax,edi
1000db79:	push   eax
1000db7a:	call   0x10018e6e
1000db7f:	mov    dl,BYTE PTR [eax+esi*1]
1000db82:	add    eax,0x1
1000db85:	mov    BYTE PTR [esp+0x13],dl
1000db89:	mov    DWORD PTR [ecx],eax
1000db8b:	mov    eax,DWORD PTR [esp+0x10]
1000db8f:	mov    ecx,DWORD PTR [esp+0x48]
1000db93:	mov    DWORD PTR fs:0x0,ecx
1000db9a:	pop    ecx
1000db9b:	pop    edi
1000db9c:	pop    esi
1000db9d:	mov    esp,ebp
1000db9f:	pop    ebp
1000dba0:	ret    
1000dba1:	int3   
1000dba2:	int3   
1000dba3:	int3   
1000dba4:	int3   
1000dba5:	int3   
1000dba6:	int3   
1000dba7:	int3   
1000dba8:	int3   
1000dba9:	int3   
1000dbaa:	int3   
1000dbab:	int3   
1000dbac:	int3   
1000dbad:	int3   
1000dbae:	int3   
1000dbaf:	int3   
1000dbb0:	jmp    0x1000dab0
1000dbb5:	int3   
1000dbb6:	int3   
1000dbb7:	int3   
1000dbb8:	int3   
1000dbb9:	int3   
1000dbba:	int3   
1000dbbb:	int3   
1000dbbc:	int3   
1000dbbd:	int3   
1000dbbe:	int3   
1000dbbf:	int3   
1000dbc0:	push   ebp
1000dbc1:	mov    ebp,esp
1000dbc3:	and    esp,0xfffffff8
1000dbc6:	sub    esp,0x28
1000dbc9:	push   esi
1000dbca:	mov    esi,ecx
1000dbcc:	mov    eax,DWORD PTR [esi]
1000dbce:	push   edi
1000dbcf:	mov    edi,DWORD PTR [ebp+0xc]
1000dbd2:	lea    ecx,[eax+edi*1]
1000dbd5:	cmp    ecx,DWORD PTR [esi+0x4]
1000dbd8:	jbe    0x1000dbf0
1000dbda:	lea    edi,[esp+0x8]
1000dbde:	call   0x1000d890
1000dbe3:	push   0x100bbaf0
1000dbe8:	mov    edx,edi
1000dbea:	push   edx
1000dbeb:	call   0x10018e6e
1000dbf0:	mov    ecx,DWORD PTR [esi+0x8]
1000dbf3:	mov    edx,DWORD PTR [ebp+0x8]
1000dbf6:	push   edi
1000dbf7:	add    ecx,eax
1000dbf9:	push   ecx
1000dbfa:	push   edx
1000dbfb:	call   0x10019470
1000dc00:	add    esp,0xc
1000dc03:	add    DWORD PTR [esi],edi
1000dc05:	pop    edi
1000dc06:	pop    esi
1000dc07:	mov    esp,ebp
1000dc09:	pop    ebp
1000dc0a:	ret    0x8
1000dc0d:	int3   
1000dc0e:	int3   
1000dc0f:	int3   
1000dc10:	push   ebp
1000dc11:	mov    ebp,esp
1000dc13:	and    esp,0xfffffff8
1000dc16:	push   0xffffffff
1000dc18:	push   0x1002e418
1000dc1d:	mov    eax,fs:0x0
1000dc23:	push   eax
1000dc24:	sub    esp,0x30
1000dc27:	push   ebx
1000dc28:	push   esi
1000dc29:	push   edi
1000dc2a:	mov    eax,ds:0x100c7654
1000dc2f:	xor    eax,esp
1000dc31:	push   eax
1000dc32:	lea    eax,[esp+0x40]
1000dc36:	mov    fs:0x0,eax
1000dc3c:	mov    esi,ecx
1000dc3e:	mov    edi,DWORD PTR [ebp+0xc]
1000dc41:	push   edi
1000dc42:	mov    DWORD PTR [esp+0x14],0x0
1000dc4a:	call   0x1001868d
1000dc4f:	mov    ebx,eax
1000dc51:	add    esp,0x4
1000dc54:	mov    DWORD PTR [esp+0x10],ebx
1000dc58:	mov    DWORD PTR [esp+0x48],0x0
1000dc60:	mov    eax,DWORD PTR [esi]
1000dc62:	lea    ecx,[eax+edi*1]
1000dc65:	cmp    ecx,DWORD PTR [esi+0x4]
1000dc68:	jbe    0x1000dc80
1000dc6a:	lea    edi,[esp+0x14]
1000dc6e:	call   0x1000d890
1000dc73:	push   0x100bbaf0
1000dc78:	mov    edx,edi
1000dc7a:	push   edx
1000dc7b:	call   0x10018e6e
1000dc80:	mov    ecx,DWORD PTR [esi+0x8]
1000dc83:	push   edi
1000dc84:	add    ecx,eax
1000dc86:	push   ecx
1000dc87:	push   ebx
1000dc88:	call   0x10019470
1000dc8d:	add    DWORD PTR [esi],edi
1000dc8f:	mov    esi,DWORD PTR [ebp+0x8]
1000dc92:	add    esp,0xc
1000dc95:	push   edi
1000dc96:	mov    DWORD PTR [esi+0x18],0xf
1000dc9d:	mov    DWORD PTR [esi+0x14],0x0
1000dca4:	push   ebx
1000dca5:	mov    ecx,esi
1000dca7:	mov    BYTE PTR [esi+0x4],0x0
1000dcab:	call   0x10003a70
1000dcb0:	push   ebx
1000dcb1:	call   0x1001876e
1000dcb6:	add    esp,0x4
1000dcb9:	mov    eax,esi
1000dcbb:	mov    ecx,DWORD PTR [esp+0x40]
1000dcbf:	mov    DWORD PTR fs:0x0,ecx
1000dcc6:	pop    ecx
1000dcc7:	pop    edi
1000dcc8:	pop    esi
1000dcc9:	pop    ebx
1000dcca:	mov    esp,ebp
1000dccc:	pop    ebp
1000dccd:	ret    0x8
1000dcd0:	mov    eax,DWORD PTR [ecx+0x4]
1000dcd3:	sub    eax,DWORD PTR [ecx]
1000dcd5:	ret    
1000dcd6:	int3   
1000dcd7:	int3   
1000dcd8:	int3   
1000dcd9:	int3   
1000dcda:	int3   
1000dcdb:	int3   
1000dcdc:	int3   
1000dcdd:	int3   
1000dcde:	int3   
1000dcdf:	int3   
1000dce0:	mov    eax,DWORD PTR [ecx]
1000dce2:	test   eax,eax
1000dce4:	je     0x1000dceb
1000dce6:	mov    ecx,DWORD PTR [ecx+0x4]
1000dce9:	mov    DWORD PTR [eax],ecx
1000dceb:	ret    
1000dcec:	int3   
1000dced:	int3   
1000dcee:	int3   
1000dcef:	int3   
1000dcf0:	push   ebp
1000dcf1:	mov    ebp,esp
1000dcf3:	push   0xffffffff
1000dcf5:	push   0x1002e228
1000dcfa:	mov    eax,fs:0x0
1000dd00:	push   eax
1000dd01:	sub    esp,0x10
1000dd04:	push   ebx
1000dd05:	push   esi
1000dd06:	push   edi
1000dd07:	mov    eax,ds:0x100c7654
1000dd0c:	xor    eax,ebp
1000dd0e:	push   eax
1000dd0f:	lea    eax,[ebp-0xc]
1000dd12:	mov    fs:0x0,eax
1000dd18:	mov    DWORD PTR [ebp-0x10],esp
1000dd1b:	mov    DWORD PTR [ebp-0x4],0x0
1000dd22:	mov    al,0x1
1000dd24:	mov    BYTE PTR [ebp-0x1c],al
1000dd27:	mov    DWORD PTR [ebp-0x18],0xffffffff
1000dd2e:	mov    BYTE PTR [ebp-0x14],al
1000dd31:	push   0x4
1000dd33:	lea    ecx,[ebp+0x8]
1000dd36:	push   ecx
1000dd37:	push   0x4
1000dd39:	mov    edx,ecx
1000dd3b:	mov    BYTE PTR [ebp-0x4],al
1000dd3e:	mov    eax,DWORD PTR [ebp+0x8]
1000dd41:	push   edx
1000dd42:	push   0x7
1000dd44:	lea    ecx,[ebp-0x1c]
1000dd47:	mov    DWORD PTR [ebp+0x8],eax
1000dd4a:	call   0x10007670
1000dd4f:	mov    edi,DWORD PTR [ebp-0x18]
1000dd52:	test   edi,edi
1000dd54:	je     0x1000dd6c
1000dd56:	call   DWORD PTR ds:0x1002f094
1000dd5c:	push   edi
1000dd5d:	mov    esi,eax
1000dd5f:	call   DWORD PTR ds:0x1002f064
1000dd65:	push   esi
1000dd66:	call   DWORD PTR ds:0x1002f090
1000dd6c:	mov    ecx,DWORD PTR [ebp-0xc]
1000dd6f:	mov    DWORD PTR fs:0x0,ecx
1000dd76:	pop    ecx
1000dd77:	pop    edi
1000dd78:	pop    esi
1000dd79:	pop    ebx
1000dd7a:	mov    esp,ebp
1000dd7c:	pop    ebp
1000dd7d:	ret    
1000dd7e:	mov    eax,0x1000dd6c
1000dd83:	ret    
1000dd84:	int3   
1000dd85:	int3   
1000dd86:	int3   
1000dd87:	int3   
1000dd88:	int3   
1000dd89:	int3   
1000dd8a:	int3   
1000dd8b:	int3   
1000dd8c:	int3   
1000dd8d:	int3   
1000dd8e:	int3   
1000dd8f:	int3   
1000dd90:	push   edi
1000dd91:	mov    edi,DWORD PTR [esp+0xc]
1000dd95:	xor    ecx,ecx
1000dd97:	xor    edx,edx
1000dd99:	test   edi,edi
1000dd9b:	je     0x1000ddc7
1000dd9d:	push   ebx
1000dd9e:	mov    ebx,DWORD PTR [esp+0x14]
1000dda2:	push   ebp
1000dda3:	mov    ebp,DWORD PTR [esp+0x1c]
1000dda7:	push   esi
1000dda8:	mov    esi,DWORD PTR [esp+0x14]
1000ddac:	lea    esp,[esp+0x0]
1000ddb0:	mov    al,BYTE PTR [edx+ebx*1]
1000ddb3:	xor    BYTE PTR [ecx+esi*1],al
1000ddb6:	lea    eax,[edx+0x1]
1000ddb9:	xor    edx,edx
1000ddbb:	add    ecx,0x1
1000ddbe:	div    ebp
1000ddc0:	cmp    ecx,edi
1000ddc2:	jne    0x1000ddb0
1000ddc4:	pop    esi
1000ddc5:	pop    ebp
1000ddc6:	pop    ebx
1000ddc7:	pop    edi
1000ddc8:	ret    
1000ddc9:	int3   
1000ddca:	int3   
1000ddcb:	int3   
1000ddcc:	int3   
1000ddcd:	int3   
1000ddce:	int3   
1000ddcf:	int3   
1000ddd0:	push   0x11c
1000ddd5:	push   0x0
1000ddd7:	push   0x100c9d98
1000dddc:	mov    DWORD PTR ds:0x100c9eb4,0x0
1000dde6:	call   0x100191d0
1000ddeb:	add    esp,0xc
1000ddee:	push   0x100c9d98
1000ddf3:	mov    DWORD PTR ds:0x100c9d98,0x114
1000ddfd:	call   0x1000e5e0
1000de02:	call   eax
1000de04:	test   eax,eax
1000de06:	je     0x1000de4e
1000de08:	cmp    DWORD PTR ds:0x100c9da8,0x2
1000de0f:	mov    DWORD PTR ds:0x100c9d94,0x1
1000de19:	jne    0x1000de4e
1000de1b:	cmp    DWORD PTR ds:0x100c9d9c,0x5
1000de22:	jb     0x1000de4e
1000de24:	push   0x11c
1000de29:	push   0x0
1000de2b:	push   0x100c9d98
1000de30:	call   0x100191d0
1000de35:	add    esp,0xc
1000de38:	push   0x100c9d98
1000de3d:	mov    DWORD PTR ds:0x100c9d98,0x11c
1000de47:	call   0x1000e5e0
1000de4c:	call   eax
1000de4e:	ret    
1000de4f:	int3   
1000de50:	push   ecx
1000de51:	mov    ecx,DWORD PTR ds:0x100c9da8
1000de57:	mov    eax,ds:0x100c9da0
1000de5c:	mov    edx,DWORD PTR ds:0x100c9d9c
1000de62:	push   esi
1000de63:	xor    esi,esi
1000de65:	cmp    ecx,0x1
1000de68:	push   edi
1000de69:	movzx  edi,WORD PTR ds:0x100c9da4
1000de70:	jne    0x1000df1c
1000de76:	cmp    edx,0x4
1000de79:	jne    0x1000dfd9
1000de7f:	cmp    eax,0xa
1000de82:	jae    0x1000dec3
1000de84:	cmp    edi,0x3b6
1000de8a:	jne    0x1000de94
1000de8c:	mov    esi,ecx
1000de8e:	mov    eax,esi
1000de90:	pop    edi
1000de91:	pop    esi
1000de92:	pop    ecx
1000de93:	ret    
1000de94:	lea    ecx,[edi-0x3b7]
1000de9a:	cmp    ecx,0x81
1000dea0:	ja     0x1000dead
1000dea2:	mov    esi,0x2
1000dea7:	mov    eax,esi
1000dea9:	pop    edi
1000deaa:	pop    esi
1000deab:	pop    ecx
1000deac:	ret    
1000dead:	cmp    edi,0x438
1000deb3:	jbe    0x1000dec0
1000deb5:	mov    esi,0x3
1000deba:	mov    eax,esi
1000debc:	pop    edi
1000debd:	pop    esi
1000debe:	pop    ecx
1000debf:	ret    
1000dec0:	cmp    eax,0xa
1000dec3:	jne    0x1000df08
1000dec5:	cmp    edi,0x7ce
1000decb:	jne    0x1000ded8
1000decd:	mov    esi,0x4
1000ded2:	mov    eax,esi
1000ded4:	pop    edi
1000ded5:	pop    esi
1000ded6:	pop    ecx
1000ded7:	ret    
1000ded8:	lea    edx,[edi-0x7cf]
1000dede:	cmp    edx,0xb7
1000dee4:	ja     0x1000def1
1000dee6:	mov    esi,0x5
1000deeb:	mov    eax,esi
1000deed:	pop    edi
1000deee:	pop    esi
1000deef:	pop    ecx
1000def0:	ret    
1000def1:	cmp    edi,0x887
1000def7:	jb     0x1000dfd9
1000defd:	mov    esi,0x6
1000df02:	mov    eax,esi
1000df04:	pop    edi
1000df05:	pop    esi
1000df06:	pop    ecx
1000df07:	ret    
1000df08:	cmp    eax,0x5a
1000df0b:	jne    0x1000dfd9
1000df11:	mov    esi,0x7
1000df16:	mov    eax,esi
1000df18:	pop    edi
1000df19:	pop    esi
1000df1a:	pop    ecx
1000df1b:	ret    
1000df1c:	cmp    ecx,0x2
1000df1f:	jne    0x1000dfcf
1000df25:	cmp    edx,0x3
1000df28:	jne    0x1000df3e
1000df2a:	cmp    eax,0x33
1000df2d:	jne    0x1000dfd9
1000df33:	mov    esi,0x65
1000df38:	mov    eax,esi
1000df3a:	pop    edi
1000df3b:	pop    esi
1000df3c:	pop    ecx
1000df3d:	ret    
1000df3e:	cmp    edx,0x4
1000df41:	jne    0x1000df56
1000df43:	test   eax,eax
1000df45:	jne    0x1000dfd9
1000df4b:	mov    esi,0x66
1000df50:	mov    eax,esi
1000df52:	pop    edi
1000df53:	pop    esi
1000df54:	pop    ecx
1000df55:	ret    
1000df56:	cmp    edx,0x5
1000df59:	jne    0x1000df8a
1000df5b:	test   eax,eax
1000df5d:	jne    0x1000df6a
1000df5f:	mov    esi,0x67
1000df64:	mov    eax,esi
1000df66:	pop    edi
1000df67:	pop    esi
1000df68:	pop    ecx
1000df69:	ret    
1000df6a:	cmp    eax,0x1
1000df6d:	jne    0x1000df7a
1000df6f:	mov    esi,0x68
1000df74:	mov    eax,esi
1000df76:	pop    edi
1000df77:	pop    esi
1000df78:	pop    ecx
1000df79:	ret    
1000df7a:	cmp    eax,0x2
1000df7d:	jne    0x1000dfd9
1000df7f:	mov    esi,0x69
1000df84:	mov    eax,esi
1000df86:	pop    edi
1000df87:	pop    esi
1000df88:	pop    ecx
1000df89:	ret    
1000df8a:	cmp    edx,0x6
1000df8d:	jne    0x1000dfd9
1000df8f:	test   eax,eax
1000df91:	jne    0x1000df98
1000df93:	lea    esi,[edx+0x64]
1000df96:	jmp    0x1000dfbb
1000df98:	cmp    eax,0x1
1000df9b:	jne    0x1000dfaa
1000df9d:	cmp    BYTE PTR ds:0x100c9eb2,al
1000dfa3:	jne    0x1000dfd9
1000dfa5:	lea    esi,[eax+0x6a]
1000dfa8:	jmp    0x1000dfbb
1000dfaa:	cmp    eax,0x2
1000dfad:	jne    0x1000dfd9
1000dfaf:	cmp    BYTE PTR ds:0x100c9eb2,0x1
1000dfb6:	jne    0x1000dfd9
1000dfb8:	lea    esi,[eax+0x6a]
1000dfbb:	cmp    DWORD PTR ds:0x100c9eb4,0x0
1000dfc2:	jne    0x1000dfd9
1000dfc4:	call   0x1000dfe0
1000dfc9:	mov    eax,esi
1000dfcb:	pop    edi
1000dfcc:	pop    esi
1000dfcd:	pop    ecx
1000dfce:	ret    
1000dfcf:	cmp    ecx,0x3
1000dfd2:	jne    0x1000dfd9
1000dfd4:	mov    esi,0xc9
1000dfd9:	pop    edi
1000dfda:	mov    eax,esi
1000dfdc:	pop    esi
1000dfdd:	pop    ecx
1000dfde:	ret    
1000dfdf:	int3   
1000dfe0:	push   esi
1000dfe1:	push   0x100b9f48
1000dfe6:	push   0xc
1000dfe8:	push   0x100b9fa8
1000dfed:	call   0x100035f0
1000dff2:	add    esp,0xc
1000dff5:	push   eax
1000dff6:	call   DWORD PTR ds:0x1002f0b0
1000dffc:	mov    esi,eax
1000dffe:	test   esi,esi
1000e000:	je     0x1000e031
1000e002:	push   0x100b9fc8
1000e007:	push   0xe
1000e009:	push   0x100ba048
1000e00e:	call   0x100033d0
1000e013:	add    esp,0xc
1000e016:	push   eax
1000e017:	push   esi
1000e018:	call   DWORD PTR ds:0x1002f050
1000e01e:	test   eax,eax
1000e020:	je     0x1000e031
1000e022:	push   0x100c9eb4
1000e027:	push   0x0
1000e029:	push   0x0
1000e02b:	push   0x0
1000e02d:	push   0x6
1000e02f:	call   eax
1000e031:	mov    eax,ds:0x100c9eb4
1000e036:	pop    esi
1000e037:	ret    
1000e038:	int3   
1000e039:	int3   
1000e03a:	int3   
1000e03b:	int3   
1000e03c:	int3   
1000e03d:	int3   
1000e03e:	int3   
1000e03f:	int3   
1000e040:	push   0xffffffff
1000e042:	push   0x1002d4b8
1000e047:	mov    eax,fs:0x0
1000e04d:	push   eax
1000e04e:	push   ebx
1000e04f:	push   esi
1000e050:	push   edi
1000e051:	mov    eax,ds:0x100c7654
1000e056:	xor    eax,esp
1000e058:	push   eax
1000e059:	lea    eax,[esp+0x10]
1000e05d:	mov    fs:0x0,eax
1000e063:	mov    esi,ecx
1000e065:	mov    edi,DWORD PTR [esp+0x20]
1000e069:	mov    DWORD PTR [edi],0x0
1000e06f:	mov    DWORD PTR [esp+0x18],0x0
1000e077:	mov    eax,DWORD PTR [esi+0x14]
1000e07a:	mov    DWORD PTR [edi+0x4],eax
1000e07d:	mov    eax,DWORD PTR [esi+0x14]
1000e080:	push   eax
1000e081:	call   0x1001868d
1000e086:	mov    ebx,eax
1000e088:	mov    eax,DWORD PTR [edi]
1000e08a:	add    esp,0x4
1000e08d:	cmp    ebx,eax
1000e08f:	je     0x1000e09a
1000e091:	push   eax
1000e092:	call   0x1001876e
1000e097:	add    esp,0x4
1000e09a:	mov    DWORD PTR [edi],ebx
1000e09c:	cmp    DWORD PTR [esi+0x18],0x10
1000e0a0:	mov    eax,DWORD PTR [esi+0x14]
1000e0a3:	jb     0x1000e0aa
1000e0a5:	mov    esi,DWORD PTR [esi+0x4]
1000e0a8:	jmp    0x1000e0ad
1000e0aa:	add    esi,0x4
1000e0ad:	push   eax
1000e0ae:	push   esi
1000e0af:	push   ebx
1000e0b0:	call   0x10019470
1000e0b5:	add    esp,0xc
1000e0b8:	mov    eax,edi
1000e0ba:	mov    ecx,DWORD PTR [esp+0x10]
1000e0be:	mov    DWORD PTR fs:0x0,ecx
1000e0c5:	pop    ecx
1000e0c6:	pop    edi
1000e0c7:	pop    esi
1000e0c8:	pop    ebx
1000e0c9:	add    esp,0xc
1000e0cc:	ret    0x4
1000e0cf:	int3   
1000e0d0:	sub    esp,0x14
1000e0d3:	mov    eax,DWORD PTR [eax]
1000e0d5:	mov    ecx,DWORD PTR [eax+0xa]
1000e0d8:	imul   ecx,ecx,0xd
1000e0db:	add    ecx,DWORD PTR [eax+0x6]
1000e0de:	push   ebx
1000e0df:	push   ebp
1000e0e0:	lea    ebp,[ecx+eax*1+0x12]
1000e0e4:	mov    eax,DWORD PTR [eax+0xe]
1000e0e7:	test   eax,eax
1000e0e9:	push   esi
1000e0ea:	push   edi
1000e0eb:	mov    DWORD PTR [esp+0x10],0x0
1000e0f3:	mov    DWORD PTR [esp+0x20],eax
1000e0f7:	je     0x1000e179
1000e0fd:	mov    eax,DWORD PTR [esp+0x28]
1000e101:	mov    edx,DWORD PTR [eax+0x14]
1000e104:	mov    DWORD PTR [esp+0x14],edx
1000e108:	mov    edx,DWORD PTR [eax+0x18]
1000e10b:	mov    DWORD PTR [esp+0x1c],edx
1000e10f:	nop
1000e110:	lea    ebx,[ebp+0x6]
1000e113:	mov    eax,ebx
1000e115:	lea    edx,[eax+0x1]
1000e118:	mov    cl,BYTE PTR [eax]
1000e11a:	add    eax,0x1
1000e11d:	test   cl,cl
1000e11f:	jne    0x1000e118
1000e121:	mov    esi,DWORD PTR [esp+0x14]
1000e125:	sub    eax,edx
1000e127:	mov    edi,eax
1000e129:	cmp    esi,edi
1000e12b:	mov    eax,esi
1000e12d:	mov    ecx,esi
1000e12f:	jb     0x1000e133
1000e131:	mov    ecx,edi
1000e133:	cmp    DWORD PTR [esp+0x1c],0x10
1000e138:	mov    eax,DWORD PTR [esp+0x28]
1000e13c:	jb     0x1000e143
1000e13e:	mov    eax,DWORD PTR [eax+0x4]
1000e141:	jmp    0x1000e146
1000e143:	add    eax,0x4
1000e146:	push   ecx
1000e147:	push   ebx
1000e148:	push   eax
1000e149:	call   0x10001370
1000e14e:	add    esp,0xc
1000e151:	test   eax,eax
1000e153:	jne    0x1000e162
1000e155:	cmp    esi,edi
1000e157:	jb     0x1000e162
1000e159:	cmp    esi,edi
1000e15b:	setne  al
1000e15e:	test   eax,eax
1000e160:	je     0x1000e186
1000e162:	movzx  ecx,WORD PTR [ebp+0x0]
1000e166:	mov    eax,DWORD PTR [esp+0x10]
1000e16a:	add    eax,0x1
1000e16d:	add    ebp,ecx
1000e16f:	cmp    eax,DWORD PTR [esp+0x20]
1000e173:	mov    DWORD PTR [esp+0x10],eax
1000e177:	jne    0x1000e110
1000e179:	pop    edi
1000e17a:	pop    esi
1000e17b:	pop    ebp
1000e17c:	or     eax,0xffffffff
1000e17f:	pop    ebx
1000e180:	add    esp,0x14
1000e183:	ret    0x4
1000e186:	mov    eax,DWORD PTR [ebp+0x2]
1000e189:	pop    edi
1000e18a:	pop    esi
1000e18b:	pop    ebp
1000e18c:	pop    ebx
1000e18d:	add    esp,0x14
1000e190:	ret    0x4
1000e193:	int3   
1000e194:	int3   
1000e195:	int3   
1000e196:	int3   
1000e197:	int3   
1000e198:	int3   
1000e199:	int3   
1000e19a:	int3   
1000e19b:	int3   
1000e19c:	int3   
1000e19d:	int3   
1000e19e:	int3   
1000e19f:	int3   
1000e1a0:	mov    eax,DWORD PTR [eax]
1000e1a2:	add    eax,0x12
1000e1a5:	ret    
1000e1a6:	int3   
1000e1a7:	int3   
1000e1a8:	int3   
1000e1a9:	int3   
1000e1aa:	int3   
1000e1ab:	int3   
1000e1ac:	int3   
1000e1ad:	int3   
1000e1ae:	int3   
1000e1af:	int3   
1000e1b0:	mov    ecx,DWORD PTR [eax]
1000e1b2:	mov    eax,DWORD PTR [ecx+0x6]
1000e1b5:	ret    
1000e1b6:	int3   
1000e1b7:	int3   
1000e1b8:	int3   
1000e1b9:	int3   
1000e1ba:	int3   
1000e1bb:	int3   
1000e1bc:	int3   
1000e1bd:	int3   
1000e1be:	int3   
1000e1bf:	int3   
1000e1c0:	push   ebp
1000e1c1:	push   esi
1000e1c2:	mov    esi,DWORD PTR [eax]
1000e1c4:	mov    ecx,DWORD PTR [esi+0x6]
1000e1c7:	push   edi
1000e1c8:	lea    edi,[esi+0x12]
1000e1cb:	xor    ebp,ebp
1000e1cd:	add    ecx,edi
1000e1cf:	cmp    DWORD PTR [esi+0xa],ebp
1000e1d2:	je     0x1000e206
1000e1d4:	push   ebx
1000e1d5:	cmp    BYTE PTR [ecx+0x4],0x0
1000e1d9:	jne    0x1000e1e9
1000e1db:	mov    edx,DWORD PTR [ecx+0x5]
1000e1de:	add    edx,DWORD PTR [esp+0x14]
1000e1e2:	mov    eax,DWORD PTR [ecx]
1000e1e4:	mov    DWORD PTR [edi+eax*1],edx
1000e1e7:	jmp    0x1000e1fa
1000e1e9:	mov    eax,DWORD PTR [ecx+0x5]
1000e1ec:	add    eax,DWORD PTR [esp+0x14]
1000e1f0:	mov    ebx,DWORD PTR [ecx]
1000e1f2:	cdq    
1000e1f3:	mov    DWORD PTR [edi+ebx*1],eax
1000e1f6:	mov    DWORD PTR [edi+ebx*1+0x4],edx
1000e1fa:	add    ebp,0x1
1000e1fd:	add    ecx,0xd
1000e200:	cmp    ebp,DWORD PTR [esi+0xa]
1000e203:	jne    0x1000e1d5
1000e205:	pop    ebx
1000e206:	pop    edi
1000e207:	pop    esi
1000e208:	pop    ebp
1000e209:	ret    0x4
1000e20c:	int3   
1000e20d:	int3   
1000e20e:	int3   
1000e20f:	int3   
1000e210:	push   ecx
1000e211:	push   ebx
1000e212:	push   esi
1000e213:	push   0x0
1000e215:	push   0x1
1000e217:	push   0x100c9ec4
1000e21c:	call   DWORD PTR ds:0x1002f0f8
1000e222:	test   eax,eax
1000e224:	jne    0x1000e271
1000e226:	mov    ebx,0x100b9dcc
1000e22b:	call   0x1000f070
1000e230:	mov    ecx,0x100b9d80
1000e235:	mov    esi,eax
1000e237:	call   0x1000ee70
1000e23c:	push   eax
1000e23d:	call   DWORD PTR ds:0x1002f108
1000e243:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e24a:	test   eax,eax
1000e24c:	je     0x1000e266
1000e24e:	push   esi
1000e24f:	push   eax
1000e250:	call   DWORD PTR ds:0x1002f050
1000e256:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e25d:	mov    ds:0x100c9fc4,eax
1000e262:	pop    esi
1000e263:	pop    ebx
1000e264:	pop    ecx
1000e265:	ret    
1000e266:	xor    eax,eax
1000e268:	mov    ds:0x100c9fc4,eax
1000e26d:	pop    esi
1000e26e:	pop    ebx
1000e26f:	pop    ecx
1000e270:	ret    
1000e271:	mov    eax,ds:0x100c9fc4
1000e276:	pop    esi
1000e277:	pop    ebx
1000e278:	pop    ecx
1000e279:	ret    
1000e27a:	int3   
1000e27b:	int3   
1000e27c:	int3   
1000e27d:	int3   
1000e27e:	int3   
1000e27f:	int3   
1000e280:	push   ecx
1000e281:	push   ebx
1000e282:	push   esi
1000e283:	push   0x0
1000e285:	push   0x1
1000e287:	push   0x100c9ec8
1000e28c:	call   DWORD PTR ds:0x1002f0f8
1000e292:	test   eax,eax
1000e294:	jne    0x1000e2e1
1000e296:	mov    ebx,0x100ba058
1000e29b:	call   0x1000f070
1000e2a0:	mov    ecx,0x100b9d80
1000e2a5:	mov    esi,eax
1000e2a7:	call   0x1000ee70
1000e2ac:	push   eax
1000e2ad:	call   DWORD PTR ds:0x1002f108
1000e2b3:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e2ba:	test   eax,eax
1000e2bc:	je     0x1000e2d6
1000e2be:	push   esi
1000e2bf:	push   eax
1000e2c0:	call   DWORD PTR ds:0x1002f050
1000e2c6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e2cd:	mov    ds:0x100c9fc8,eax
1000e2d2:	pop    esi
1000e2d3:	pop    ebx
1000e2d4:	pop    ecx
1000e2d5:	ret    
1000e2d6:	xor    eax,eax
1000e2d8:	mov    ds:0x100c9fc8,eax
1000e2dd:	pop    esi
1000e2de:	pop    ebx
1000e2df:	pop    ecx
1000e2e0:	ret    
1000e2e1:	mov    eax,ds:0x100c9fc8
1000e2e6:	pop    esi
1000e2e7:	pop    ebx
1000e2e8:	pop    ecx
1000e2e9:	ret    
1000e2ea:	int3   
1000e2eb:	int3   
1000e2ec:	int3   
1000e2ed:	int3   
1000e2ee:	int3   
1000e2ef:	int3   
1000e2f0:	push   ebp
1000e2f1:	mov    ebp,esp
1000e2f3:	and    esp,0xfffffff8
1000e2f6:	push   ebx
1000e2f7:	push   esi
1000e2f8:	push   0x0
1000e2fa:	push   0x1
1000e2fc:	push   0x100c9ecc
1000e301:	call   DWORD PTR ds:0x1002f0f8
1000e307:	test   eax,eax
1000e309:	jne    0x1000e35a
1000e30b:	mov    ebx,0x100ba070
1000e310:	call   0x1000f070
1000e315:	mov    ecx,0x100b9d80
1000e31a:	mov    esi,eax
1000e31c:	call   0x1000ee70
1000e321:	push   eax
1000e322:	call   DWORD PTR ds:0x1002f108
1000e328:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e32f:	test   eax,eax
1000e331:	je     0x1000e34d
1000e333:	push   esi
1000e334:	push   eax
1000e335:	call   DWORD PTR ds:0x1002f050
1000e33b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e342:	mov    ds:0x100c9fcc,eax
1000e347:	pop    esi
1000e348:	pop    ebx
1000e349:	mov    esp,ebp
1000e34b:	pop    ebp
1000e34c:	ret    
1000e34d:	xor    eax,eax
1000e34f:	mov    ds:0x100c9fcc,eax
1000e354:	pop    esi
1000e355:	pop    ebx
1000e356:	mov    esp,ebp
1000e358:	pop    ebp
1000e359:	ret    
1000e35a:	mov    eax,ds:0x100c9fcc
1000e35f:	pop    esi
1000e360:	pop    ebx
1000e361:	mov    esp,ebp
1000e363:	pop    ebp
1000e364:	ret    
1000e365:	int3   
1000e366:	int3   
1000e367:	int3   
1000e368:	int3   
1000e369:	int3   
1000e36a:	int3   
1000e36b:	int3   
1000e36c:	int3   
1000e36d:	int3   
1000e36e:	int3   
1000e36f:	int3   
1000e370:	push   ebp
1000e371:	mov    ebp,esp
1000e373:	and    esp,0xfffffff8
1000e376:	push   ebx
1000e377:	push   esi
1000e378:	push   0x0
1000e37a:	push   0x1
1000e37c:	push   0x100c9ed0
1000e381:	call   DWORD PTR ds:0x1002f0f8
1000e387:	test   eax,eax
1000e389:	jne    0x1000e3da
1000e38b:	mov    ebx,0x100ba084
1000e390:	call   0x1000f070
1000e395:	mov    ecx,0x100b9d80
1000e39a:	mov    esi,eax
1000e39c:	call   0x1000ee70
1000e3a1:	push   eax
1000e3a2:	call   DWORD PTR ds:0x1002f108
1000e3a8:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e3af:	test   eax,eax
1000e3b1:	je     0x1000e3cd
1000e3b3:	push   esi
1000e3b4:	push   eax
1000e3b5:	call   DWORD PTR ds:0x1002f050
1000e3bb:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e3c2:	mov    ds:0x100c9fd0,eax
1000e3c7:	pop    esi
1000e3c8:	pop    ebx
1000e3c9:	mov    esp,ebp
1000e3cb:	pop    ebp
1000e3cc:	ret    
1000e3cd:	xor    eax,eax
1000e3cf:	mov    ds:0x100c9fd0,eax
1000e3d4:	pop    esi
1000e3d5:	pop    ebx
1000e3d6:	mov    esp,ebp
1000e3d8:	pop    ebp
1000e3d9:	ret    
1000e3da:	mov    eax,ds:0x100c9fd0
1000e3df:	pop    esi
1000e3e0:	pop    ebx
1000e3e1:	mov    esp,ebp
1000e3e3:	pop    ebp
1000e3e4:	ret    
1000e3e5:	int3   
1000e3e6:	int3   
1000e3e7:	int3   
1000e3e8:	int3   
1000e3e9:	int3   
1000e3ea:	int3   
1000e3eb:	int3   
1000e3ec:	int3   
1000e3ed:	int3   
1000e3ee:	int3   
1000e3ef:	int3   
1000e3f0:	push   ebp
1000e3f1:	mov    ebp,esp
1000e3f3:	and    esp,0xfffffff8
1000e3f6:	push   ebx
1000e3f7:	push   esi
1000e3f8:	push   0x0
1000e3fa:	push   0x1
1000e3fc:	push   0x100c9ed4
1000e401:	call   DWORD PTR ds:0x1002f0f8
1000e407:	test   eax,eax
1000e409:	jne    0x1000e45a
1000e40b:	mov    ebx,0x100ba094
1000e410:	call   0x1000f070
1000e415:	mov    ecx,0x100b9d80
1000e41a:	mov    esi,eax
1000e41c:	call   0x1000ee70
1000e421:	push   eax
1000e422:	call   DWORD PTR ds:0x1002f108
1000e428:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e42f:	test   eax,eax
1000e431:	je     0x1000e44d
1000e433:	push   esi
1000e434:	push   eax
1000e435:	call   DWORD PTR ds:0x1002f050
1000e43b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e442:	mov    ds:0x100c9fd4,eax
1000e447:	pop    esi
1000e448:	pop    ebx
1000e449:	mov    esp,ebp
1000e44b:	pop    ebp
1000e44c:	ret    
1000e44d:	xor    eax,eax
1000e44f:	mov    ds:0x100c9fd4,eax
1000e454:	pop    esi
1000e455:	pop    ebx
1000e456:	mov    esp,ebp
1000e458:	pop    ebp
1000e459:	ret    
1000e45a:	mov    eax,ds:0x100c9fd4
1000e45f:	pop    esi
1000e460:	pop    ebx
1000e461:	mov    esp,ebp
1000e463:	pop    ebp
1000e464:	ret    
1000e465:	int3   
1000e466:	int3   
1000e467:	int3   
1000e468:	int3   
1000e469:	int3   
1000e46a:	int3   
1000e46b:	int3   
1000e46c:	int3   
1000e46d:	int3   
1000e46e:	int3   
1000e46f:	int3   
1000e470:	push   ebp
1000e471:	mov    ebp,esp
1000e473:	and    esp,0xfffffff8
1000e476:	push   ebx
1000e477:	push   esi
1000e478:	push   0x0
1000e47a:	push   0x1
1000e47c:	push   0x100c9ed8
1000e481:	call   DWORD PTR ds:0x1002f0f8
1000e487:	test   eax,eax
1000e489:	jne    0x1000e4da
1000e48b:	mov    ebx,0x100ba0a4
1000e490:	call   0x1000f070
1000e495:	mov    ecx,0x100b9d80
1000e49a:	mov    esi,eax
1000e49c:	call   0x1000ee70
1000e4a1:	push   eax
1000e4a2:	call   DWORD PTR ds:0x1002f108
1000e4a8:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e4af:	test   eax,eax
1000e4b1:	je     0x1000e4cd
1000e4b3:	push   esi
1000e4b4:	push   eax
1000e4b5:	call   DWORD PTR ds:0x1002f050
1000e4bb:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e4c2:	mov    ds:0x100c9fd8,eax
1000e4c7:	pop    esi
1000e4c8:	pop    ebx
1000e4c9:	mov    esp,ebp
1000e4cb:	pop    ebp
1000e4cc:	ret    
1000e4cd:	xor    eax,eax
1000e4cf:	mov    ds:0x100c9fd8,eax
1000e4d4:	pop    esi
1000e4d5:	pop    ebx
1000e4d6:	mov    esp,ebp
1000e4d8:	pop    ebp
1000e4d9:	ret    
1000e4da:	mov    eax,ds:0x100c9fd8
1000e4df:	pop    esi
1000e4e0:	pop    ebx
1000e4e1:	mov    esp,ebp
1000e4e3:	pop    ebp
1000e4e4:	ret    
1000e4e5:	int3   
1000e4e6:	int3   
1000e4e7:	int3   
1000e4e8:	int3   
1000e4e9:	int3   
1000e4ea:	int3   
1000e4eb:	int3   
1000e4ec:	int3   
1000e4ed:	int3   
1000e4ee:	int3   
1000e4ef:	int3   
1000e4f0:	push   ebp
1000e4f1:	mov    ebp,esp
1000e4f3:	and    esp,0xfffffff8
1000e4f6:	push   ebx
1000e4f7:	push   esi
1000e4f8:	push   0x0
1000e4fa:	push   0x1
1000e4fc:	push   0x100c9ee0
1000e501:	call   DWORD PTR ds:0x1002f0f8
1000e507:	test   eax,eax
1000e509:	jne    0x1000e55a
1000e50b:	mov    ebx,0x100ba0c0
1000e510:	call   0x1000f070
1000e515:	mov    ecx,0x100b9d80
1000e51a:	mov    esi,eax
1000e51c:	call   0x1000ee70
1000e521:	push   eax
1000e522:	call   DWORD PTR ds:0x1002f108
1000e528:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e52f:	test   eax,eax
1000e531:	je     0x1000e54d
1000e533:	push   esi
1000e534:	push   eax
1000e535:	call   DWORD PTR ds:0x1002f050
1000e53b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e542:	mov    ds:0x100c9fdc,eax
1000e547:	pop    esi
1000e548:	pop    ebx
1000e549:	mov    esp,ebp
1000e54b:	pop    ebp
1000e54c:	ret    
1000e54d:	xor    eax,eax
1000e54f:	mov    ds:0x100c9fdc,eax
1000e554:	pop    esi
1000e555:	pop    ebx
1000e556:	mov    esp,ebp
1000e558:	pop    ebp
1000e559:	ret    
1000e55a:	mov    eax,ds:0x100c9fdc
1000e55f:	pop    esi
1000e560:	pop    ebx
1000e561:	mov    esp,ebp
1000e563:	pop    ebp
1000e564:	ret    
1000e565:	int3   
1000e566:	int3   
1000e567:	int3   
1000e568:	int3   
1000e569:	int3   
1000e56a:	int3   
1000e56b:	int3   
1000e56c:	int3   
1000e56d:	int3   
1000e56e:	int3   
1000e56f:	int3   
1000e570:	push   ecx
1000e571:	push   ebx
1000e572:	push   esi
1000e573:	push   0x0
1000e575:	push   0x1
1000e577:	push   0x100c9ef0
1000e57c:	call   DWORD PTR ds:0x1002f0f8
1000e582:	test   eax,eax
1000e584:	jne    0x1000e5d1
1000e586:	mov    ebx,0x100ba0e0
1000e58b:	call   0x1000f070
1000e590:	mov    ecx,0x100b9d80
1000e595:	mov    esi,eax
1000e597:	call   0x1000ee70
1000e59c:	push   eax
1000e59d:	call   DWORD PTR ds:0x1002f108
1000e5a3:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e5aa:	test   eax,eax
1000e5ac:	je     0x1000e5c6
1000e5ae:	push   esi
1000e5af:	push   eax
1000e5b0:	call   DWORD PTR ds:0x1002f050
1000e5b6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e5bd:	mov    ds:0x100c9fe4,eax
1000e5c2:	pop    esi
1000e5c3:	pop    ebx
1000e5c4:	pop    ecx
1000e5c5:	ret    
1000e5c6:	xor    eax,eax
1000e5c8:	mov    ds:0x100c9fe4,eax
1000e5cd:	pop    esi
1000e5ce:	pop    ebx
1000e5cf:	pop    ecx
1000e5d0:	ret    
1000e5d1:	mov    eax,ds:0x100c9fe4
1000e5d6:	pop    esi
1000e5d7:	pop    ebx
1000e5d8:	pop    ecx
1000e5d9:	ret    
1000e5da:	int3   
1000e5db:	int3   
1000e5dc:	int3   
1000e5dd:	int3   
1000e5de:	int3   
1000e5df:	int3   
1000e5e0:	push   ebp
1000e5e1:	mov    ebp,esp
1000e5e3:	and    esp,0xfffffff8
1000e5e6:	push   ebx
1000e5e7:	push   esi
1000e5e8:	push   0x0
1000e5ea:	push   0x1
1000e5ec:	push   0x100c9ef4
1000e5f1:	call   DWORD PTR ds:0x1002f0f8
1000e5f7:	test   eax,eax
1000e5f9:	jne    0x1000e64a
1000e5fb:	mov    ebx,0x100ba0f8
1000e600:	call   0x1000f070
1000e605:	mov    ecx,0x100b9d80
1000e60a:	mov    esi,eax
1000e60c:	call   0x1000ee70
1000e611:	push   eax
1000e612:	call   DWORD PTR ds:0x1002f108
1000e618:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e61f:	test   eax,eax
1000e621:	je     0x1000e63d
1000e623:	push   esi
1000e624:	push   eax
1000e625:	call   DWORD PTR ds:0x1002f050
1000e62b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e632:	mov    ds:0x100c9fe8,eax
1000e637:	pop    esi
1000e638:	pop    ebx
1000e639:	mov    esp,ebp
1000e63b:	pop    ebp
1000e63c:	ret    
1000e63d:	xor    eax,eax
1000e63f:	mov    ds:0x100c9fe8,eax
1000e644:	pop    esi
1000e645:	pop    ebx
1000e646:	mov    esp,ebp
1000e648:	pop    ebp
1000e649:	ret    
1000e64a:	mov    eax,ds:0x100c9fe8
1000e64f:	pop    esi
1000e650:	pop    ebx
1000e651:	mov    esp,ebp
1000e653:	pop    ebp
1000e654:	ret    
1000e655:	int3   
1000e656:	int3   
1000e657:	int3   
1000e658:	int3   
1000e659:	int3   
1000e65a:	int3   
1000e65b:	int3   
1000e65c:	int3   
1000e65d:	int3   
1000e65e:	int3   
1000e65f:	int3   
1000e660:	push   ecx
1000e661:	push   ebx
1000e662:	push   esi
1000e663:	push   0x0
1000e665:	push   0x1
1000e667:	push   0x100c9f2c
1000e66c:	call   DWORD PTR ds:0x1002f0f8
1000e672:	test   eax,eax
1000e674:	jne    0x1000e6c1
1000e676:	mov    ebx,0x100ba108
1000e67b:	call   0x1000f070
1000e680:	mov    ecx,0x100b9d80
1000e685:	mov    esi,eax
1000e687:	call   0x1000ee70
1000e68c:	push   eax
1000e68d:	call   DWORD PTR ds:0x1002f108
1000e693:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e69a:	test   eax,eax
1000e69c:	je     0x1000e6b6
1000e69e:	push   esi
1000e69f:	push   eax
1000e6a0:	call   DWORD PTR ds:0x1002f050
1000e6a6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e6ad:	mov    ds:0x100c9fec,eax
1000e6b2:	pop    esi
1000e6b3:	pop    ebx
1000e6b4:	pop    ecx
1000e6b5:	ret    
1000e6b6:	xor    eax,eax
1000e6b8:	mov    ds:0x100c9fec,eax
1000e6bd:	pop    esi
1000e6be:	pop    ebx
1000e6bf:	pop    ecx
1000e6c0:	ret    
1000e6c1:	mov    eax,ds:0x100c9fec
1000e6c6:	pop    esi
1000e6c7:	pop    ebx
1000e6c8:	pop    ecx
1000e6c9:	ret    
1000e6ca:	int3   
1000e6cb:	int3   
1000e6cc:	int3   
1000e6cd:	int3   
1000e6ce:	int3   
1000e6cf:	int3   
1000e6d0:	push   ebp
1000e6d1:	mov    ebp,esp
1000e6d3:	and    esp,0xfffffff8
1000e6d6:	push   ebx
1000e6d7:	push   esi
1000e6d8:	push   0x0
1000e6da:	push   0x1
1000e6dc:	push   0x100c9f30
1000e6e1:	call   DWORD PTR ds:0x1002f0f8
1000e6e7:	test   eax,eax
1000e6e9:	jne    0x1000e73a
1000e6eb:	mov    ebx,0x100ba120
1000e6f0:	call   0x1000f070
1000e6f5:	mov    ecx,0x100b9d80
1000e6fa:	mov    esi,eax
1000e6fc:	call   0x1000ee70
1000e701:	push   eax
1000e702:	call   DWORD PTR ds:0x1002f108
1000e708:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e70f:	test   eax,eax
1000e711:	je     0x1000e72d
1000e713:	push   esi
1000e714:	push   eax
1000e715:	call   DWORD PTR ds:0x1002f050
1000e71b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e722:	mov    ds:0x100c9ff0,eax
1000e727:	pop    esi
1000e728:	pop    ebx
1000e729:	mov    esp,ebp
1000e72b:	pop    ebp
1000e72c:	ret    
1000e72d:	xor    eax,eax
1000e72f:	mov    ds:0x100c9ff0,eax
1000e734:	pop    esi
1000e735:	pop    ebx
1000e736:	mov    esp,ebp
1000e738:	pop    ebp
1000e739:	ret    
1000e73a:	mov    eax,ds:0x100c9ff0
1000e73f:	pop    esi
1000e740:	pop    ebx
1000e741:	mov    esp,ebp
1000e743:	pop    ebp
1000e744:	ret    
1000e745:	int3   
1000e746:	int3   
1000e747:	int3   
1000e748:	int3   
1000e749:	int3   
1000e74a:	int3   
1000e74b:	int3   
1000e74c:	int3   
1000e74d:	int3   
1000e74e:	int3   
1000e74f:	int3   
1000e750:	push   ebp
1000e751:	mov    ebp,esp
1000e753:	and    esp,0xfffffff8
1000e756:	push   ebx
1000e757:	push   esi
1000e758:	push   0x0
1000e75a:	push   0x1
1000e75c:	push   0x100c9f34
1000e761:	call   DWORD PTR ds:0x1002f0f8
1000e767:	test   eax,eax
1000e769:	jne    0x1000e7ba
1000e76b:	mov    ebx,0x100ba134
1000e770:	call   0x1000f070
1000e775:	mov    ecx,0x100b9d80
1000e77a:	mov    esi,eax
1000e77c:	call   0x1000ee70
1000e781:	push   eax
1000e782:	call   DWORD PTR ds:0x1002f108
1000e788:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e78f:	test   eax,eax
1000e791:	je     0x1000e7ad
1000e793:	push   esi
1000e794:	push   eax
1000e795:	call   DWORD PTR ds:0x1002f050
1000e79b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e7a2:	mov    ds:0x100c9ff4,eax
1000e7a7:	pop    esi
1000e7a8:	pop    ebx
1000e7a9:	mov    esp,ebp
1000e7ab:	pop    ebp
1000e7ac:	ret    
1000e7ad:	xor    eax,eax
1000e7af:	mov    ds:0x100c9ff4,eax
1000e7b4:	pop    esi
1000e7b5:	pop    ebx
1000e7b6:	mov    esp,ebp
1000e7b8:	pop    ebp
1000e7b9:	ret    
1000e7ba:	mov    eax,ds:0x100c9ff4
1000e7bf:	pop    esi
1000e7c0:	pop    ebx
1000e7c1:	mov    esp,ebp
1000e7c3:	pop    ebp
1000e7c4:	ret    
1000e7c5:	int3   
1000e7c6:	int3   
1000e7c7:	int3   
1000e7c8:	int3   
1000e7c9:	int3   
1000e7ca:	int3   
1000e7cb:	int3   
1000e7cc:	int3   
1000e7cd:	int3   
1000e7ce:	int3   
1000e7cf:	int3   
1000e7d0:	push   ecx
1000e7d1:	push   ebx
1000e7d2:	push   esi
1000e7d3:	push   0x0
1000e7d5:	push   0x1
1000e7d7:	push   0x100c9f38
1000e7dc:	call   DWORD PTR ds:0x1002f0f8
1000e7e2:	test   eax,eax
1000e7e4:	jne    0x1000e831
1000e7e6:	mov    ebx,0x100ba148
1000e7eb:	call   0x1000f070
1000e7f0:	mov    ecx,0x100b9d80
1000e7f5:	mov    esi,eax
1000e7f7:	call   0x1000ee70
1000e7fc:	push   eax
1000e7fd:	call   DWORD PTR ds:0x1002f108
1000e803:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e80a:	test   eax,eax
1000e80c:	je     0x1000e826
1000e80e:	push   esi
1000e80f:	push   eax
1000e810:	call   DWORD PTR ds:0x1002f050
1000e816:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e81d:	mov    ds:0x100c9ff8,eax
1000e822:	pop    esi
1000e823:	pop    ebx
1000e824:	pop    ecx
1000e825:	ret    
1000e826:	xor    eax,eax
1000e828:	mov    ds:0x100c9ff8,eax
1000e82d:	pop    esi
1000e82e:	pop    ebx
1000e82f:	pop    ecx
1000e830:	ret    
1000e831:	mov    eax,ds:0x100c9ff8
1000e836:	pop    esi
1000e837:	pop    ebx
1000e838:	pop    ecx
1000e839:	ret    
1000e83a:	int3   
1000e83b:	int3   
1000e83c:	int3   
1000e83d:	int3   
1000e83e:	int3   
1000e83f:	int3   
1000e840:	push   ecx
1000e841:	push   ebx
1000e842:	push   esi
1000e843:	push   0x0
1000e845:	push   0x1
1000e847:	push   0x100c9f3c
1000e84c:	call   DWORD PTR ds:0x1002f0f8
1000e852:	test   eax,eax
1000e854:	jne    0x1000e8a1
1000e856:	mov    ebx,0x100ba15c
1000e85b:	call   0x1000f070
1000e860:	mov    ecx,0x100b9d80
1000e865:	mov    esi,eax
1000e867:	call   0x1000ee70
1000e86c:	push   eax
1000e86d:	call   DWORD PTR ds:0x1002f108
1000e873:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e87a:	test   eax,eax
1000e87c:	je     0x1000e896
1000e87e:	push   esi
1000e87f:	push   eax
1000e880:	call   DWORD PTR ds:0x1002f050
1000e886:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e88d:	mov    ds:0x100c9ffc,eax
1000e892:	pop    esi
1000e893:	pop    ebx
1000e894:	pop    ecx
1000e895:	ret    
1000e896:	xor    eax,eax
1000e898:	mov    ds:0x100c9ffc,eax
1000e89d:	pop    esi
1000e89e:	pop    ebx
1000e89f:	pop    ecx
1000e8a0:	ret    
1000e8a1:	mov    eax,ds:0x100c9ffc
1000e8a6:	pop    esi
1000e8a7:	pop    ebx
1000e8a8:	pop    ecx
1000e8a9:	ret    
1000e8aa:	int3   
1000e8ab:	int3   
1000e8ac:	int3   
1000e8ad:	int3   
1000e8ae:	int3   
1000e8af:	int3   
1000e8b0:	push   ecx
1000e8b1:	push   ebx
1000e8b2:	push   esi
1000e8b3:	push   0x0
1000e8b5:	push   0x1
1000e8b7:	push   0x100c9f40
1000e8bc:	call   DWORD PTR ds:0x1002f0f8
1000e8c2:	test   eax,eax
1000e8c4:	jne    0x1000e911
1000e8c6:	mov    ebx,0x100ba16c
1000e8cb:	call   0x1000f070
1000e8d0:	mov    ecx,0x100b9d80
1000e8d5:	mov    esi,eax
1000e8d7:	call   0x1000ee70
1000e8dc:	push   eax
1000e8dd:	call   DWORD PTR ds:0x1002f108
1000e8e3:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e8ea:	test   eax,eax
1000e8ec:	je     0x1000e906
1000e8ee:	push   esi
1000e8ef:	push   eax
1000e8f0:	call   DWORD PTR ds:0x1002f050
1000e8f6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e8fd:	mov    ds:0x100ca000,eax
1000e902:	pop    esi
1000e903:	pop    ebx
1000e904:	pop    ecx
1000e905:	ret    
1000e906:	xor    eax,eax
1000e908:	mov    ds:0x100ca000,eax
1000e90d:	pop    esi
1000e90e:	pop    ebx
1000e90f:	pop    ecx
1000e910:	ret    
1000e911:	mov    eax,ds:0x100ca000
1000e916:	pop    esi
1000e917:	pop    ebx
1000e918:	pop    ecx
1000e919:	ret    
1000e91a:	int3   
1000e91b:	int3   
1000e91c:	int3   
1000e91d:	int3   
1000e91e:	int3   
1000e91f:	int3   
1000e920:	push   ebp
1000e921:	mov    ebp,esp
1000e923:	and    esp,0xfffffff8
1000e926:	push   ebx
1000e927:	push   esi
1000e928:	push   0x0
1000e92a:	push   0x1
1000e92c:	push   0x100c9f48
1000e931:	call   DWORD PTR ds:0x1002f0f8
1000e937:	test   eax,eax
1000e939:	jne    0x1000e98a
1000e93b:	mov    ebx,0x100ba18c
1000e940:	call   0x1000f070
1000e945:	mov    ecx,0x100b9d80
1000e94a:	mov    esi,eax
1000e94c:	call   0x1000ee70
1000e951:	push   eax
1000e952:	call   DWORD PTR ds:0x1002f108
1000e958:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e95f:	test   eax,eax
1000e961:	je     0x1000e97d
1000e963:	push   esi
1000e964:	push   eax
1000e965:	call   DWORD PTR ds:0x1002f050
1000e96b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e972:	mov    ds:0x100ca008,eax
1000e977:	pop    esi
1000e978:	pop    ebx
1000e979:	mov    esp,ebp
1000e97b:	pop    ebp
1000e97c:	ret    
1000e97d:	xor    eax,eax
1000e97f:	mov    ds:0x100ca008,eax
1000e984:	pop    esi
1000e985:	pop    ebx
1000e986:	mov    esp,ebp
1000e988:	pop    ebp
1000e989:	ret    
1000e98a:	mov    eax,ds:0x100ca008
1000e98f:	pop    esi
1000e990:	pop    ebx
1000e991:	mov    esp,ebp
1000e993:	pop    ebp
1000e994:	ret    
1000e995:	int3   
1000e996:	int3   
1000e997:	int3   
1000e998:	int3   
1000e999:	int3   
1000e99a:	int3   
1000e99b:	int3   
1000e99c:	int3   
1000e99d:	int3   
1000e99e:	int3   
1000e99f:	int3   
1000e9a0:	push   ecx
1000e9a1:	push   ebx
1000e9a2:	push   esi
1000e9a3:	push   0x0
1000e9a5:	push   0x1
1000e9a7:	push   0x100c9f4c
1000e9ac:	call   DWORD PTR ds:0x1002f0f8
1000e9b2:	test   eax,eax
1000e9b4:	jne    0x1000ea01
1000e9b6:	mov    ebx,0x100ba1a0
1000e9bb:	call   0x1000f070
1000e9c0:	mov    ecx,0x100b9d80
1000e9c5:	mov    esi,eax
1000e9c7:	call   0x1000ee70
1000e9cc:	push   eax
1000e9cd:	call   DWORD PTR ds:0x1002f108
1000e9d3:	add    DWORD PTR ds:0x100c8ab4,0x1
1000e9da:	test   eax,eax
1000e9dc:	je     0x1000e9f6
1000e9de:	push   esi
1000e9df:	push   eax
1000e9e0:	call   DWORD PTR ds:0x1002f050
1000e9e6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000e9ed:	mov    ds:0x100ca00c,eax
1000e9f2:	pop    esi
1000e9f3:	pop    ebx
1000e9f4:	pop    ecx
1000e9f5:	ret    
1000e9f6:	xor    eax,eax
1000e9f8:	mov    ds:0x100ca00c,eax
1000e9fd:	pop    esi
1000e9fe:	pop    ebx
1000e9ff:	pop    ecx
1000ea00:	ret    
1000ea01:	mov    eax,ds:0x100ca00c
1000ea06:	pop    esi
1000ea07:	pop    ebx
1000ea08:	pop    ecx
1000ea09:	ret    
1000ea0a:	int3   
1000ea0b:	int3   
1000ea0c:	int3   
1000ea0d:	int3   
1000ea0e:	int3   
1000ea0f:	int3   
1000ea10:	push   ebp
1000ea11:	mov    ebp,esp
1000ea13:	and    esp,0xfffffff8
1000ea16:	push   ebx
1000ea17:	push   esi
1000ea18:	push   0x0
1000ea1a:	push   0x1
1000ea1c:	push   0x100c9f50
1000ea21:	call   DWORD PTR ds:0x1002f0f8
1000ea27:	test   eax,eax
1000ea29:	jne    0x1000ea7a
1000ea2b:	mov    ebx,0x100ba1ac
1000ea30:	call   0x1000f070
1000ea35:	mov    ecx,0x100b9d80
1000ea3a:	mov    esi,eax
1000ea3c:	call   0x1000ee70
1000ea41:	push   eax
1000ea42:	call   DWORD PTR ds:0x1002f108
1000ea48:	add    DWORD PTR ds:0x100c8ab4,0x1
1000ea4f:	test   eax,eax
1000ea51:	je     0x1000ea6d
1000ea53:	push   esi
1000ea54:	push   eax
1000ea55:	call   DWORD PTR ds:0x1002f050
1000ea5b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000ea62:	mov    ds:0x100ca010,eax
1000ea67:	pop    esi
1000ea68:	pop    ebx
1000ea69:	mov    esp,ebp
1000ea6b:	pop    ebp
1000ea6c:	ret    
1000ea6d:	xor    eax,eax
1000ea6f:	mov    ds:0x100ca010,eax
1000ea74:	pop    esi
1000ea75:	pop    ebx
1000ea76:	mov    esp,ebp
1000ea78:	pop    ebp
1000ea79:	ret    
1000ea7a:	mov    eax,ds:0x100ca010
1000ea7f:	pop    esi
1000ea80:	pop    ebx
1000ea81:	mov    esp,ebp
1000ea83:	pop    ebp
1000ea84:	ret    
1000ea85:	int3   
1000ea86:	int3   
1000ea87:	int3   
1000ea88:	int3   
1000ea89:	int3   
1000ea8a:	int3   
1000ea8b:	int3   
1000ea8c:	int3   
1000ea8d:	int3   
1000ea8e:	int3   
1000ea8f:	int3   
1000ea90:	push   ecx
1000ea91:	push   ebx
1000ea92:	push   esi
1000ea93:	push   0x0
1000ea95:	push   0x1
1000ea97:	push   0x100c9f54
1000ea9c:	call   DWORD PTR ds:0x1002f0f8
1000eaa2:	test   eax,eax
1000eaa4:	jne    0x1000eaf1
1000eaa6:	mov    ebx,0x100ba1b8
1000eaab:	call   0x1000f070
1000eab0:	mov    ecx,0x100b9d80
1000eab5:	mov    esi,eax
1000eab7:	call   0x1000ee70
1000eabc:	push   eax
1000eabd:	call   DWORD PTR ds:0x1002f108
1000eac3:	add    DWORD PTR ds:0x100c8ab4,0x1
1000eaca:	test   eax,eax
1000eacc:	je     0x1000eae6
1000eace:	push   esi
1000eacf:	push   eax
1000ead0:	call   DWORD PTR ds:0x1002f050
1000ead6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000eadd:	mov    ds:0x100ca014,eax
1000eae2:	pop    esi
1000eae3:	pop    ebx
1000eae4:	pop    ecx
1000eae5:	ret    
1000eae6:	xor    eax,eax
1000eae8:	mov    ds:0x100ca014,eax
1000eaed:	pop    esi
1000eaee:	pop    ebx
1000eaef:	pop    ecx
1000eaf0:	ret    
1000eaf1:	mov    eax,ds:0x100ca014
1000eaf6:	pop    esi
1000eaf7:	pop    ebx
1000eaf8:	pop    ecx
1000eaf9:	ret    
1000eafa:	int3   
1000eafb:	int3   
1000eafc:	int3   
1000eafd:	int3   
1000eafe:	int3   
1000eaff:	int3   
1000eb00:	push   ebp
1000eb01:	mov    ebp,esp
1000eb03:	and    esp,0xfffffff8
1000eb06:	push   ebx
1000eb07:	push   esi
1000eb08:	push   0x0
1000eb0a:	push   0x1
1000eb0c:	push   0x100c9f58
1000eb11:	call   DWORD PTR ds:0x1002f0f8
1000eb17:	test   eax,eax
1000eb19:	jne    0x1000eb6a
1000eb1b:	mov    ebx,0x100ba1c8
1000eb20:	call   0x1000f070
1000eb25:	mov    ecx,0x100b9d80
1000eb2a:	mov    esi,eax
1000eb2c:	call   0x1000ee70
1000eb31:	push   eax
1000eb32:	call   DWORD PTR ds:0x1002f108
1000eb38:	add    DWORD PTR ds:0x100c8ab4,0x1
1000eb3f:	test   eax,eax
1000eb41:	je     0x1000eb5d
1000eb43:	push   esi
1000eb44:	push   eax
1000eb45:	call   DWORD PTR ds:0x1002f050
1000eb4b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000eb52:	mov    ds:0x100ca018,eax
1000eb57:	pop    esi
1000eb58:	pop    ebx
1000eb59:	mov    esp,ebp
1000eb5b:	pop    ebp
1000eb5c:	ret    
1000eb5d:	xor    eax,eax
1000eb5f:	mov    ds:0x100ca018,eax
1000eb64:	pop    esi
1000eb65:	pop    ebx
1000eb66:	mov    esp,ebp
1000eb68:	pop    ebp
1000eb69:	ret    
1000eb6a:	mov    eax,ds:0x100ca018
1000eb6f:	pop    esi
1000eb70:	pop    ebx
1000eb71:	mov    esp,ebp
1000eb73:	pop    ebp
1000eb74:	ret    
1000eb75:	int3   
1000eb76:	int3   
1000eb77:	int3   
1000eb78:	int3   
1000eb79:	int3   
1000eb7a:	int3   
1000eb7b:	int3   
1000eb7c:	int3   
1000eb7d:	int3   
1000eb7e:	int3   
1000eb7f:	int3   
1000eb80:	push   ebp
1000eb81:	mov    ebp,esp
1000eb83:	and    esp,0xfffffff8
1000eb86:	push   ebx
1000eb87:	push   esi
1000eb88:	push   0x0
1000eb8a:	push   0x1
1000eb8c:	push   0x100c9f78
1000eb91:	call   DWORD PTR ds:0x1002f0f8
1000eb97:	test   eax,eax
1000eb99:	jne    0x1000ebea
1000eb9b:	mov    ebx,0x100ba1f0
1000eba0:	call   0x1000f070
1000eba5:	mov    ecx,0x100ba1dc
1000ebaa:	mov    esi,eax
1000ebac:	call   0x1000ee70
1000ebb1:	push   eax
1000ebb2:	call   DWORD PTR ds:0x1002f108
1000ebb8:	add    DWORD PTR ds:0x100c8ab4,0x1
1000ebbf:	test   eax,eax
1000ebc1:	je     0x1000ebdd
1000ebc3:	push   esi
1000ebc4:	push   eax
1000ebc5:	call   DWORD PTR ds:0x1002f050
1000ebcb:	add    DWORD PTR ds:0x100c8ab8,0x1
1000ebd2:	mov    ds:0x100ca01c,eax
1000ebd7:	pop    esi
1000ebd8:	pop    ebx
1000ebd9:	mov    esp,ebp
1000ebdb:	pop    ebp
1000ebdc:	ret    
1000ebdd:	xor    eax,eax
1000ebdf:	mov    ds:0x100ca01c,eax
1000ebe4:	pop    esi
1000ebe5:	pop    ebx
1000ebe6:	mov    esp,ebp
1000ebe8:	pop    ebp
1000ebe9:	ret    
1000ebea:	mov    eax,ds:0x100ca01c
1000ebef:	pop    esi
1000ebf0:	pop    ebx
1000ebf1:	mov    esp,ebp
1000ebf3:	pop    ebp
1000ebf4:	ret    
1000ebf5:	int3   
1000ebf6:	int3   
1000ebf7:	int3   
1000ebf8:	int3   
1000ebf9:	int3   
1000ebfa:	int3   
1000ebfb:	int3   
1000ebfc:	int3   
1000ebfd:	int3   
1000ebfe:	int3   
1000ebff:	int3   
1000ec00:	push   ebp
1000ec01:	mov    ebp,esp
1000ec03:	and    esp,0xfffffff8
1000ec06:	push   ebx
1000ec07:	push   esi
1000ec08:	push   0x0
1000ec0a:	push   0x1
1000ec0c:	push   0x100c9f7c
1000ec11:	call   DWORD PTR ds:0x1002f0f8
1000ec17:	test   eax,eax
1000ec19:	jne    0x1000ec6a
1000ec1b:	mov    ebx,0x100ba208
1000ec20:	call   0x1000f070
1000ec25:	mov    ecx,0x100ba1dc
1000ec2a:	mov    esi,eax
1000ec2c:	call   0x1000ee70
1000ec31:	push   eax
1000ec32:	call   DWORD PTR ds:0x1002f108
1000ec38:	add    DWORD PTR ds:0x100c8ab4,0x1
1000ec3f:	test   eax,eax
1000ec41:	je     0x1000ec5d
1000ec43:	push   esi
1000ec44:	push   eax
1000ec45:	call   DWORD PTR ds:0x1002f050
1000ec4b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000ec52:	mov    ds:0x100ca020,eax
1000ec57:	pop    esi
1000ec58:	pop    ebx
1000ec59:	mov    esp,ebp
1000ec5b:	pop    ebp
1000ec5c:	ret    
1000ec5d:	xor    eax,eax
1000ec5f:	mov    ds:0x100ca020,eax
1000ec64:	pop    esi
1000ec65:	pop    ebx
1000ec66:	mov    esp,ebp
1000ec68:	pop    ebp
1000ec69:	ret    
1000ec6a:	mov    eax,ds:0x100ca020
1000ec6f:	pop    esi
1000ec70:	pop    ebx
1000ec71:	mov    esp,ebp
1000ec73:	pop    ebp
1000ec74:	ret    
1000ec75:	int3   
1000ec76:	int3   
1000ec77:	int3   
1000ec78:	int3   
1000ec79:	int3   
1000ec7a:	int3   
1000ec7b:	int3   
1000ec7c:	int3   
1000ec7d:	int3   
1000ec7e:	int3   
1000ec7f:	int3   
1000ec80:	push   ecx
1000ec81:	push   ebx
1000ec82:	push   esi
1000ec83:	push   0x0
1000ec85:	push   0x1
1000ec87:	push   0x100c9f80
1000ec8c:	call   DWORD PTR ds:0x1002f0f8
1000ec92:	test   eax,eax
1000ec94:	jne    0x1000ece1
1000ec96:	mov    ebx,0x100ba220
1000ec9b:	call   0x1000f070
1000eca0:	mov    ecx,0x100ba1dc
1000eca5:	mov    esi,eax
1000eca7:	call   0x1000ee70
1000ecac:	push   eax
1000ecad:	call   DWORD PTR ds:0x1002f108
1000ecb3:	add    DWORD PTR ds:0x100c8ab4,0x1
1000ecba:	test   eax,eax
1000ecbc:	je     0x1000ecd6
1000ecbe:	push   esi
1000ecbf:	push   eax
1000ecc0:	call   DWORD PTR ds:0x1002f050
1000ecc6:	add    DWORD PTR ds:0x100c8ab8,0x1
1000eccd:	mov    ds:0x100ca024,eax
1000ecd2:	pop    esi
1000ecd3:	pop    ebx
1000ecd4:	pop    ecx
1000ecd5:	ret    
1000ecd6:	xor    eax,eax
1000ecd8:	mov    ds:0x100ca024,eax
1000ecdd:	pop    esi
1000ecde:	pop    ebx
1000ecdf:	pop    ecx
1000ece0:	ret    
1000ece1:	mov    eax,ds:0x100ca024
1000ece6:	pop    esi
1000ece7:	pop    ebx
1000ece8:	pop    ecx
1000ece9:	ret    
1000ecea:	int3   
1000eceb:	int3   
1000ecec:	int3   
1000eced:	int3   
1000ecee:	int3   
1000ecef:	int3   
1000ecf0:	push   ebp
1000ecf1:	mov    ebp,esp
1000ecf3:	and    esp,0xfffffff8
1000ecf6:	push   ebx
1000ecf7:	push   esi
1000ecf8:	push   0x0
1000ecfa:	push   0x1
1000ecfc:	push   0x100c9fa8
1000ed01:	call   DWORD PTR ds:0x1002f0f8
1000ed07:	test   eax,eax
1000ed09:	jne    0x1000ed5a
1000ed0b:	mov    ebx,0x100ba258
1000ed10:	call   0x1000f070
1000ed15:	mov    ecx,0x100ba1dc
1000ed1a:	mov    esi,eax
1000ed1c:	call   0x1000ee70
1000ed21:	push   eax
1000ed22:	call   DWORD PTR ds:0x1002f108
1000ed28:	add    DWORD PTR ds:0x100c8ab4,0x1
1000ed2f:	test   eax,eax
1000ed31:	je     0x1000ed4d
1000ed33:	push   esi
1000ed34:	push   eax
1000ed35:	call   DWORD PTR ds:0x1002f050
1000ed3b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000ed42:	mov    ds:0x100ca028,eax
1000ed47:	pop    esi
1000ed48:	pop    ebx
1000ed49:	mov    esp,ebp
1000ed4b:	pop    ebp
1000ed4c:	ret    
1000ed4d:	xor    eax,eax
1000ed4f:	mov    ds:0x100ca028,eax
1000ed54:	pop    esi
1000ed55:	pop    ebx
1000ed56:	mov    esp,ebp
1000ed58:	pop    ebp
1000ed59:	ret    
1000ed5a:	mov    eax,ds:0x100ca028
1000ed5f:	pop    esi
1000ed60:	pop    ebx
1000ed61:	mov    esp,ebp
1000ed63:	pop    ebp
1000ed64:	ret    
1000ed65:	int3   
1000ed66:	int3   
1000ed67:	int3   
1000ed68:	int3   
1000ed69:	int3   
1000ed6a:	int3   
1000ed6b:	int3   
1000ed6c:	int3   
1000ed6d:	int3   
1000ed6e:	int3   
1000ed6f:	int3   
1000ed70:	push   ebp
1000ed71:	mov    ebp,esp
1000ed73:	and    esp,0xfffffff8
1000ed76:	push   ebx
1000ed77:	push   esi
1000ed78:	push   0x0
1000ed7a:	push   0x1
1000ed7c:	push   0x100c9fac
1000ed81:	call   DWORD PTR ds:0x1002f0f8
1000ed87:	test   eax,eax
1000ed89:	jne    0x1000edda
1000ed8b:	mov    ebx,0x100ba270
1000ed90:	call   0x1000f070
1000ed95:	mov    ecx,0x100ba1dc
1000ed9a:	mov    esi,eax
1000ed9c:	call   0x1000ee70
1000eda1:	push   eax
1000eda2:	call   DWORD PTR ds:0x1002f108
1000eda8:	add    DWORD PTR ds:0x100c8ab4,0x1
1000edaf:	test   eax,eax
1000edb1:	je     0x1000edcd
1000edb3:	push   esi
1000edb4:	push   eax
1000edb5:	call   DWORD PTR ds:0x1002f050
1000edbb:	add    DWORD PTR ds:0x100c8ab8,0x1
1000edc2:	mov    ds:0x100ca02c,eax
1000edc7:	pop    esi
1000edc8:	pop    ebx
1000edc9:	mov    esp,ebp
1000edcb:	pop    ebp
1000edcc:	ret    
1000edcd:	xor    eax,eax
1000edcf:	mov    ds:0x100ca02c,eax
1000edd4:	pop    esi
1000edd5:	pop    ebx
1000edd6:	mov    esp,ebp
1000edd8:	pop    ebp
1000edd9:	ret    
1000edda:	mov    eax,ds:0x100ca02c
1000eddf:	pop    esi
1000ede0:	pop    ebx
1000ede1:	mov    esp,ebp
1000ede3:	pop    ebp
1000ede4:	ret    
1000ede5:	int3   
1000ede6:	int3   
1000ede7:	int3   
1000ede8:	int3   
1000ede9:	int3   
1000edea:	int3   
1000edeb:	int3   
1000edec:	int3   
1000eded:	int3   
1000edee:	int3   
1000edef:	int3   
1000edf0:	push   ebp
1000edf1:	mov    ebp,esp
1000edf3:	and    esp,0xfffffff8
1000edf6:	push   ebx
1000edf7:	push   esi
1000edf8:	push   0x0
1000edfa:	push   0x1
1000edfc:	push   0x100c9fb0
1000ee01:	call   DWORD PTR ds:0x1002f0f8
1000ee07:	test   eax,eax
1000ee09:	jne    0x1000ee5a
1000ee0b:	mov    ebx,0x100ba280
1000ee10:	call   0x1000f070
1000ee15:	mov    ecx,0x100ba1dc
1000ee1a:	mov    esi,eax
1000ee1c:	call   0x1000ee70
1000ee21:	push   eax
1000ee22:	call   DWORD PTR ds:0x1002f108
1000ee28:	add    DWORD PTR ds:0x100c8ab4,0x1
1000ee2f:	test   eax,eax
1000ee31:	je     0x1000ee4d
1000ee33:	push   esi
1000ee34:	push   eax
1000ee35:	call   DWORD PTR ds:0x1002f050
1000ee3b:	add    DWORD PTR ds:0x100c8ab8,0x1
1000ee42:	mov    ds:0x100ca030,eax
1000ee47:	pop    esi
1000ee48:	pop    ebx
1000ee49:	mov    esp,ebp
1000ee4b:	pop    ebp
1000ee4c:	ret    
1000ee4d:	xor    eax,eax
1000ee4f:	mov    ds:0x100ca030,eax
1000ee54:	pop    esi
1000ee55:	pop    ebx
1000ee56:	mov    esp,ebp
1000ee58:	pop    ebp
1000ee59:	ret    
1000ee5a:	mov    eax,ds:0x100ca030
1000ee5f:	pop    esi
1000ee60:	pop    ebx
1000ee61:	mov    esp,ebp
1000ee63:	pop    ebp
1000ee64:	ret    
1000ee65:	int3   
1000ee66:	int3   
1000ee67:	int3   
1000ee68:	int3   
1000ee69:	int3   
1000ee6a:	int3   
1000ee6b:	int3   
1000ee6c:	int3   
1000ee6d:	int3   
1000ee6e:	int3   
1000ee6f:	int3   
1000ee70:	push   0xffffffff
1000ee72:	push   0x1002dc80
1000ee77:	mov    eax,fs:0x0
1000ee7d:	push   eax
1000ee7e:	sub    esp,0x4c
1000ee81:	mov    eax,ds:0x100c7654
1000ee86:	xor    eax,esp
1000ee88:	mov    DWORD PTR [esp+0x48],eax
1000ee8c:	push   ebx
1000ee8d:	push   ebp
1000ee8e:	push   esi
1000ee8f:	push   edi
1000ee90:	mov    eax,ds:0x100c7654
1000ee95:	xor    eax,esp
1000ee97:	push   eax
1000ee98:	lea    eax,[esp+0x60]
1000ee9c:	mov    fs:0x0,eax
1000eea2:	mov    eax,ds:0x100c9d84
1000eea7:	xor    ebx,ebx
1000eea9:	cmp    eax,ebx
1000eeab:	mov    esi,ecx
1000eead:	mov    DWORD PTR [esp+0x20],esi
1000eeb1:	jne    0x1000eec1
1000eeb3:	push   ebx
1000eeb4:	push   ebx
1000eeb5:	push   ebx
1000eeb6:	call   DWORD PTR ds:0x1002f0dc
1000eebc:	mov    ds:0x100c9d84,eax
1000eec1:	push   0xffffffff
1000eec3:	push   eax
1000eec4:	call   DWORD PTR ds:0x1002f058
1000eeca:	test   eax,eax
1000eecc:	mov    eax,esi
1000eece:	jne    0x1000f051
1000eed4:	mov    edi,0x7
1000eed9:	mov    DWORD PTR [esp+0x3c],edi
1000eedd:	mov    DWORD PTR [esp+0x38],ebx
1000eee1:	mov    WORD PTR [esp+0x28],bx
1000eee6:	lea    edx,[eax+0x2]
1000eee9:	lea    esp,[esp+0x0]
1000eef0:	mov    cx,WORD PTR [eax]
1000eef3:	add    eax,0x2
1000eef6:	cmp    cx,bx
1000eef9:	jne    0x1000eef0
1000eefb:	sub    eax,edx
1000eefd:	sar    eax,1
1000eeff:	push   eax
1000ef00:	push   esi
1000ef01:	lea    ecx,[esp+0x2c]
1000ef05:	call   0x10004f40
1000ef0a:	lea    eax,[esp+0x24]
1000ef0e:	push   eax
1000ef0f:	lea    ecx,[esp+0x1c]
1000ef13:	push   ecx
1000ef14:	mov    DWORD PTR [esp+0x70],ebx
1000ef18:	call   0x100040a0
1000ef1d:	mov    ecx,eax
1000ef1f:	call   0x10004580
1000ef24:	call   0x100040a0
1000ef29:	mov    ecx,DWORD PTR [esp+0x18]
1000ef2d:	cmp    ecx,ebx
1000ef2f:	mov    esi,DWORD PTR [eax+0x4]
1000ef32:	je     0x1000ef38
1000ef34:	cmp    ecx,eax
1000ef36:	je     0x1000ef3d
1000ef38:	call   0x10018de3
1000ef3d:	cmp    DWORD PTR [esp+0x1c],esi
1000ef41:	jne    0x1000ef9e
1000ef43:	push   0xffffffff
1000ef45:	push   ebx
1000ef46:	lea    edx,[esp+0x2c]
1000ef4a:	push   edx
1000ef4b:	lea    ecx,[esp+0x4c]
1000ef4f:	mov    DWORD PTR [esp+0x64],edi
1000ef53:	mov    DWORD PTR [esp+0x60],ebx
1000ef57:	mov    WORD PTR [esp+0x50],bx
1000ef5c:	call   0x10004e50
1000ef61:	lea    eax,[esp+0x24]
1000ef65:	push   eax
1000ef66:	mov    BYTE PTR [esp+0x6c],0x1
1000ef6b:	call   0x100040a0
1000ef70:	mov    ecx,eax
1000ef72:	call   0x10004420
1000ef77:	push   0xffffffff
1000ef79:	push   ebx
1000ef7a:	lea    ecx,[esp+0x48]
1000ef7e:	push   ecx
1000ef7f:	mov    ecx,eax
1000ef81:	call   0x10004e50
1000ef86:	mov    BYTE PTR [esp+0x68],bl
1000ef8a:	cmp    DWORD PTR [esp+0x58],0x8
1000ef8f:	jb     0x1000ef9e
1000ef91:	mov    edx,DWORD PTR [esp+0x44]
1000ef95:	push   edx
1000ef96:	call   0x1001876e
1000ef9b:	add    esp,0x4
1000ef9e:	lea    eax,[esp+0x24]
1000efa2:	push   eax
1000efa3:	lea    ecx,[esp+0x1c]
1000efa7:	push   ecx
1000efa8:	call   0x100040a0
1000efad:	mov    ecx,eax
1000efaf:	call   0x10004580
1000efb4:	mov    esi,DWORD PTR [eax]
1000efb6:	mov    edi,DWORD PTR [eax+0x4]
1000efb9:	call   0x100040a0
1000efbe:	cmp    esi,ebx
1000efc0:	mov    ebp,DWORD PTR [eax+0x4]
1000efc3:	je     0x1000efc9
1000efc5:	cmp    esi,eax
1000efc7:	je     0x1000efce
1000efc9:	call   0x10018de3
1000efce:	cmp    edi,ebp
1000efd0:	je     0x1000eff5
1000efd2:	cmp    esi,ebx
1000efd4:	jne    0x1000efdb
1000efd6:	call   0x10018de3
1000efdb:	cmp    edi,DWORD PTR [esi+0x4]
1000efde:	jne    0x1000efe5
1000efe0:	call   0x10018de3
1000efe5:	cmp    DWORD PTR [edi+0x40],0x8
1000efe9:	jb     0x1000eff0
1000efeb:	mov    edi,DWORD PTR [edi+0x2c]
1000efee:	jmp    0x1000eff9
1000eff0:	add    edi,0x2c
1000eff3:	jmp    0x1000eff9
1000eff5:	mov    edi,DWORD PTR [esp+0x20]
1000eff9:	cmp    DWORD PTR ds:0x100c9d80,ebx
1000efff:	jne    0x1000f01d
1000f001:	push   0x100b7e4c
1000f006:	push   0x100b7e5c
1000f00b:	call   DWORD PTR ds:0x1002f0b0
1000f011:	push   eax
1000f012:	call   DWORD PTR ds:0x1002f050
1000f018:	mov    ds:0x100c9d80,eax
1000f01d:	mov    eax,ds:0x100c9d84
1000f022:	cmp    eax,ebx
1000f024:	jne    0x1000f034
1000f026:	push   ebx
1000f027:	push   ebx
1000f028:	push   ebx
1000f029:	call   DWORD PTR ds:0x1002f0dc
1000f02f:	mov    ds:0x100c9d84,eax
1000f034:	push   eax
1000f035:	call   DWORD PTR ds:0x100c9d80
1000f03b:	cmp    DWORD PTR [esp+0x3c],0x8
1000f040:	jb     0x1000f04f
1000f042:	mov    edx,DWORD PTR [esp+0x28]
1000f046:	push   edx
1000f047:	call   0x1001876e
1000f04c:	add    esp,0x4
1000f04f:	mov    eax,edi
1000f051:	mov    ecx,DWORD PTR [esp+0x60]
1000f055:	mov    DWORD PTR fs:0x0,ecx
1000f05c:	pop    ecx
1000f05d:	pop    edi
1000f05e:	pop    esi
1000f05f:	pop    ebp
1000f060:	pop    ebx
1000f061:	mov    ecx,DWORD PTR [esp+0x48]
1000f065:	xor    ecx,esp
1000f067:	call   0x10018773
1000f06c:	add    esp,0x58
1000f06f:	ret    
1000f070:	push   0xffffffff
1000f072:	push   0x1002dc40
1000f077:	mov    eax,fs:0x0
1000f07d:	push   eax
1000f07e:	sub    esp,0x48
1000f081:	mov    eax,ds:0x100c7654
1000f086:	xor    eax,esp
1000f088:	mov    DWORD PTR [esp+0x44],eax
1000f08c:	push   ebp
1000f08d:	push   esi
1000f08e:	push   edi
1000f08f:	mov    eax,ds:0x100c7654
1000f094:	xor    eax,esp
1000f096:	push   eax
1000f097:	lea    eax,[esp+0x58]
1000f09b:	mov    fs:0x0,eax
1000f0a1:	mov    eax,ds:0x100c9d84
1000f0a6:	xor    edi,edi
1000f0a8:	cmp    eax,edi
1000f0aa:	jne    0x1000f0ba
1000f0ac:	push   edi
1000f0ad:	push   edi
1000f0ae:	push   edi
1000f0af:	call   DWORD PTR ds:0x1002f0dc
1000f0b5:	mov    ds:0x100c9d84,eax
1000f0ba:	push   0xffffffff
1000f0bc:	push   eax
1000f0bd:	call   DWORD PTR ds:0x1002f058
1000f0c3:	test   eax,eax
1000f0c5:	mov    eax,ebx
1000f0c7:	jne    0x1000f23f
1000f0cd:	mov    ebp,0xf
1000f0d2:	mov    DWORD PTR [esp+0x34],ebp
1000f0d6:	mov    DWORD PTR [esp+0x30],edi
1000f0da:	mov    BYTE PTR [esp+0x20],0x0
1000f0df:	lea    edx,[eax+0x1]
1000f0e2:	mov    cl,BYTE PTR [eax]
1000f0e4:	add    eax,0x1
1000f0e7:	test   cl,cl
1000f0e9:	jne    0x1000f0e2
1000f0eb:	sub    eax,edx
1000f0ed:	push   eax
1000f0ee:	push   ebx
1000f0ef:	lea    ecx,[esp+0x24]
1000f0f3:	call   0x10003a70
1000f0f8:	lea    eax,[esp+0x1c]
1000f0fc:	push   eax
1000f0fd:	lea    ecx,[esp+0x18]
1000f101:	push   ecx
1000f102:	mov    DWORD PTR [esp+0x68],edi
1000f106:	call   0x10003f40
1000f10b:	mov    ecx,eax
1000f10d:	call   0x10004360
1000f112:	call   0x10003f40
1000f117:	mov    ecx,DWORD PTR [esp+0x14]
1000f11b:	cmp    ecx,edi
1000f11d:	mov    esi,DWORD PTR [eax+0x4]
1000f120:	je     0x1000f126
1000f122:	cmp    ecx,eax
1000f124:	je     0x1000f12b
1000f126:	call   0x10018de3
1000f12b:	cmp    DWORD PTR [esp+0x18],esi
1000f12f:	jne    0x1000f18d
1000f131:	push   0xffffffff
1000f133:	push   edi
1000f134:	lea    edx,[esp+0x24]
1000f138:	push   edx
1000f139:	lea    ecx,[esp+0x44]
1000f13d:	mov    DWORD PTR [esp+0x5c],ebp
1000f141:	mov    DWORD PTR [esp+0x58],edi
1000f145:	mov    BYTE PTR [esp+0x48],0x0
1000f14a:	call   0x10003990
1000f14f:	lea    eax,[esp+0x1c]
1000f153:	push   eax
1000f154:	mov    BYTE PTR [esp+0x64],0x1
1000f159:	call   0x10003f40
1000f15e:	mov    ecx,eax
1000f160:	call   0x10004200
1000f165:	push   0xffffffff
1000f167:	push   edi
1000f168:	lea    ecx,[esp+0x40]
1000f16c:	push   ecx
1000f16d:	mov    ecx,eax
1000f16f:	call   0x10003990
1000f174:	mov    BYTE PTR [esp+0x60],0x0
1000f179:	cmp    DWORD PTR [esp+0x50],0x10
1000f17e:	jb     0x1000f18d
1000f180:	mov    edx,DWORD PTR [esp+0x3c]
1000f184:	push   edx
1000f185:	call   0x1001876e
1000f18a:	add    esp,0x4
1000f18d:	lea    eax,[esp+0x1c]
1000f191:	push   eax
1000f192:	lea    ecx,[esp+0x18]
1000f196:	push   ecx
1000f197:	call   0x10003f40
1000f19c:	mov    ecx,eax
1000f19e:	call   0x10004360
1000f1a3:	mov    esi,DWORD PTR [eax]
1000f1a5:	mov    edi,DWORD PTR [eax+0x4]
1000f1a8:	call   0x10003f40
1000f1ad:	test   esi,esi
1000f1af:	mov    ebp,DWORD PTR [eax+0x4]
1000f1b2:	je     0x1000f1b8
1000f1b4:	cmp    esi,eax
1000f1b6:	je     0x1000f1bd
1000f1b8:	call   0x10018de3
1000f1bd:	cmp    edi,ebp
1000f1bf:	je     0x1000f1e4
1000f1c1:	test   esi,esi
1000f1c3:	jne    0x1000f1ca
1000f1c5:	call   0x10018de3
1000f1ca:	cmp    edi,DWORD PTR [esi+0x4]
1000f1cd:	jne    0x1000f1d4
1000f1cf:	call   0x10018de3
1000f1d4:	cmp    DWORD PTR [edi+0x40],0x10
1000f1d8:	jb     0x1000f1df
1000f1da:	mov    edi,DWORD PTR [edi+0x2c]
1000f1dd:	jmp    0x1000f1e6
1000f1df:	add    edi,0x2c
1000f1e2:	jmp    0x1000f1e6
1000f1e4:	mov    edi,ebx
1000f1e6:	cmp    DWORD PTR ds:0x100c9d80,0x0
1000f1ed:	jne    0x1000f20b
1000f1ef:	push   0x100b7e4c
1000f1f4:	push   0x100b7e5c
1000f1f9:	call   DWORD PTR ds:0x1002f0b0
1000f1ff:	push   eax
1000f200:	call   DWORD PTR ds:0x1002f050
1000f206:	mov    ds:0x100c9d80,eax
1000f20b:	mov    eax,ds:0x100c9d84
1000f210:	test   eax,eax
1000f212:	jne    0x1000f222
1000f214:	push   eax
1000f215:	push   eax
1000f216:	push   eax
1000f217:	call   DWORD PTR ds:0x1002f0dc
1000f21d:	mov    ds:0x100c9d84,eax
1000f222:	push   eax
1000f223:	call   DWORD PTR ds:0x100c9d80
1000f229:	cmp    DWORD PTR [esp+0x34],0x10
1000f22e:	jb     0x1000f23d
1000f230:	mov    edx,DWORD PTR [esp+0x20]
1000f234:	push   edx
1000f235:	call   0x1001876e
1000f23a:	add    esp,0x4
1000f23d:	mov    eax,edi
1000f23f:	mov    ecx,DWORD PTR [esp+0x58]
1000f243:	mov    DWORD PTR fs:0x0,ecx
1000f24a:	pop    ecx
1000f24b:	pop    edi
1000f24c:	pop    esi
1000f24d:	pop    ebp
1000f24e:	mov    ecx,DWORD PTR [esp+0x44]
1000f252:	xor    ecx,esp
1000f254:	call   0x10018773
1000f259:	add    esp,0x54
1000f25c:	ret    
1000f25d:	int3   
1000f25e:	int3   
1000f25f:	int3   
1000f260:	push   ebp
1000f261:	mov    ebp,esp
1000f263:	mov    eax,0x80000048
1000f268:	pop    ebp
1000f269:	ret    0x8
1000f26c:	int3   
1000f26d:	int3   
1000f26e:	int3   
1000f26f:	int3   
1000f270:	push   ebp
1000f271:	mov    ebp,esp
1000f273:	mov    eax,0x80000048
1000f278:	pop    ebp
1000f279:	ret    0x14
1000f27c:	int3   
1000f27d:	int3   
1000f27e:	int3   
1000f27f:	int3   
1000f280:	push   ebp
1000f281:	mov    ebp,esp
1000f283:	mov    eax,0x80000048
1000f288:	pop    ebp
1000f289:	ret    0x10
1000f28c:	int3   
1000f28d:	int3   
1000f28e:	int3   
1000f28f:	int3   
1000f290:	push   ebp
1000f291:	mov    ebp,esp
1000f293:	mov    eax,0x80000048
1000f298:	pop    ebp
1000f299:	ret    0x4
1000f29c:	int3   
1000f29d:	int3   
1000f29e:	int3   
1000f29f:	int3   
1000f2a0:	push   ebp
1000f2a1:	mov    ebp,esp
1000f2a3:	mov    eax,0x80000048
1000f2a8:	pop    ebp
1000f2a9:	ret    0x4
1000f2ac:	int3   
1000f2ad:	int3   
1000f2ae:	int3   
1000f2af:	int3   
1000f2b0:	push   ebp
1000f2b1:	mov    ebp,esp
1000f2b3:	mov    eax,0x80000048
1000f2b8:	pop    ebp
1000f2b9:	ret    0x4
1000f2bc:	int3   
1000f2bd:	int3   
1000f2be:	int3   
1000f2bf:	int3   
1000f2c0:	push   ebp
1000f2c1:	mov    ebp,esp
1000f2c3:	mov    eax,0x80000048
1000f2c8:	pop    ebp
1000f2c9:	ret    0xc
1000f2cc:	int3   
1000f2cd:	int3   
1000f2ce:	int3   
1000f2cf:	int3   
1000f2d0:	push   ebp
1000f2d1:	mov    ebp,esp
1000f2d3:	mov    eax,0x80000048
1000f2d8:	pop    ebp
1000f2d9:	ret    0x10
1000f2dc:	int3   
1000f2dd:	int3   
1000f2de:	int3   
1000f2df:	int3   
1000f2e0:	push   ebp
1000f2e1:	mov    ebp,esp
1000f2e3:	mov    eax,0x80000048
1000f2e8:	pop    ebp
1000f2e9:	ret    0x14
1000f2ec:	int3   
1000f2ed:	int3   
1000f2ee:	int3   
1000f2ef:	int3   
1000f2f0:	push   ebp
1000f2f1:	mov    ebp,esp
1000f2f3:	mov    eax,0x80000048
1000f2f8:	pop    ebp
1000f2f9:	ret    0xc
1000f2fc:	int3   
1000f2fd:	int3   
1000f2fe:	int3   
1000f2ff:	int3   
1000f300:	push   ebp
1000f301:	mov    ebp,esp
1000f303:	mov    eax,0x80000048
1000f308:	pop    ebp
1000f309:	ret    0x8
1000f30c:	int3   
1000f30d:	int3   
1000f30e:	int3   
1000f30f:	int3   
1000f310:	push   ebp
1000f311:	mov    ebp,esp
1000f313:	mov    eax,0x80000048
1000f318:	pop    ebp
1000f319:	ret    0x8
1000f31c:	int3   
1000f31d:	int3   
1000f31e:	int3   
1000f31f:	int3   
1000f320:	push   ebp
1000f321:	mov    ebp,esp
1000f323:	mov    eax,0x80000048
1000f328:	pop    ebp
1000f329:	ret    0x8
1000f32c:	int3   
1000f32d:	int3   
1000f32e:	int3   
1000f32f:	int3   
1000f330:	push   ebp
1000f331:	mov    ebp,esp
1000f333:	mov    eax,0x80000048
1000f338:	pop    ebp
1000f339:	ret    0x10
1000f33c:	int3   
1000f33d:	int3   
1000f33e:	int3   
1000f33f:	int3   
1000f340:	push   ebp
1000f341:	mov    ebp,esp
1000f343:	mov    eax,0x80000048
1000f348:	pop    ebp
1000f349:	ret    0x1c
1000f34c:	int3   
1000f34d:	int3   
1000f34e:	int3   
1000f34f:	int3   
1000f350:	push   ebp
1000f351:	mov    ebp,esp
1000f353:	mov    eax,0x80000048
1000f358:	pop    ebp
1000f359:	ret    0x8
1000f35c:	int3   
1000f35d:	int3   
1000f35e:	int3   
1000f35f:	int3   
1000f360:	push   ebp
1000f361:	mov    ebp,esp
1000f363:	mov    eax,0x80000048
1000f368:	pop    ebp
1000f369:	ret    0x8
1000f36c:	int3   
1000f36d:	int3   
1000f36e:	int3   
1000f36f:	int3   
1000f370:	push   ebp
1000f371:	mov    ebp,esp
1000f373:	mov    eax,0x80000048
1000f378:	pop    ebp
1000f379:	ret    0x1c
1000f37c:	int3   
1000f37d:	int3   
1000f37e:	int3   
1000f37f:	int3   
1000f380:	push   ebp
1000f381:	mov    ebp,esp
1000f383:	push   ecx
1000f384:	mov    DWORD PTR [ebp-0x4],0x0
1000f38b:	mov    eax,DWORD PTR [ebp+0x14]
1000f38e:	mov    DWORD PTR [eax],0x30000
1000f394:	mov    eax,DWORD PTR [ebp-0x4]
1000f397:	mov    esp,ebp
1000f399:	pop    ebp
1000f39a:	ret    0x10
1000f39d:	int3   
1000f39e:	int3   
1000f39f:	int3   
1000f3a0:	push   ebp
1000f3a1:	mov    ebp,esp
1000f3a3:	mov    eax,0x80000048
1000f3a8:	pop    ebp
1000f3a9:	ret    0x14
1000f3ac:	int3   
1000f3ad:	int3   
1000f3ae:	int3   
1000f3af:	int3   
1000f3b0:	push   ebp
1000f3b1:	mov    ebp,esp
1000f3b3:	mov    eax,0x80000048
1000f3b8:	pop    ebp
1000f3b9:	ret    0x8
1000f3bc:	int3   
1000f3bd:	int3   
1000f3be:	int3   
1000f3bf:	int3   
1000f3c0:	push   ebp
1000f3c1:	mov    ebp,esp
1000f3c3:	xor    eax,eax
1000f3c5:	pop    ebp
1000f3c6:	ret    0x8
1000f3c9:	int3   
1000f3ca:	int3   
1000f3cb:	int3   
1000f3cc:	int3   
1000f3cd:	int3   
1000f3ce:	int3   
1000f3cf:	int3   
1000f3d0:	push   ebp
1000f3d1:	mov    ebp,esp
1000f3d3:	xor    eax,eax
1000f3d5:	pop    ebp
1000f3d6:	ret    0x10
1000f3d9:	int3   
1000f3da:	int3   
1000f3db:	int3   
1000f3dc:	int3   
1000f3dd:	int3   
1000f3de:	int3   
1000f3df:	int3   
1000f3e0:	push   ebp
1000f3e1:	mov    ebp,esp
1000f3e3:	call   0x100106f0
1000f3e8:	mov    eax,DWORD PTR [ebp+0x24]
1000f3eb:	mov    DWORD PTR [eax],0x1
1000f3f1:	xor    eax,eax
1000f3f3:	pop    ebp
1000f3f4:	ret    0x20
1000f3f7:	int3   
1000f3f8:	int3   
1000f3f9:	int3   
1000f3fa:	int3   
1000f3fb:	int3   
1000f3fc:	int3   
1000f3fd:	int3   
1000f3fe:	int3   
1000f3ff:	int3   
1000f400:	push   ebp
1000f401:	mov    ebp,esp
1000f403:	xor    eax,eax
1000f405:	pop    ebp
1000f406:	ret    0x8
1000f409:	int3   
1000f40a:	int3   
1000f40b:	int3   
1000f40c:	int3   
1000f40d:	int3   
1000f40e:	int3   
1000f40f:	int3   
1000f410:	push   ebp
1000f411:	mov    ebp,esp
1000f413:	xor    eax,eax
1000f415:	pop    ebp
1000f416:	ret    0x8
1000f419:	int3   
1000f41a:	int3   
1000f41b:	int3   
1000f41c:	int3   
1000f41d:	int3   
1000f41e:	int3   
1000f41f:	int3   
1000f420:	push   ebp
1000f421:	mov    ebp,esp
1000f423:	xor    eax,eax
1000f425:	pop    ebp
1000f426:	ret    0x8
1000f429:	int3   
1000f42a:	int3   
1000f42b:	int3   
1000f42c:	int3   
1000f42d:	int3   
1000f42e:	int3   
1000f42f:	int3   
1000f430:	push   ebp
1000f431:	mov    ebp,esp
1000f433:	mov    eax,DWORD PTR [ebp+0xc]
1000f436:	mov    DWORD PTR [eax],0x0
1000f43c:	mov    ecx,DWORD PTR [ebp+0x10]
1000f43f:	mov    DWORD PTR [ecx],0x0
1000f445:	xor    eax,eax
1000f447:	pop    ebp
1000f448:	ret    0x18
1000f44b:	int3   
1000f44c:	int3   
1000f44d:	int3   
1000f44e:	int3   
1000f44f:	int3   
1000f450:	push   ebp
1000f451:	mov    ebp,esp
1000f453:	push   ecx
1000f454:	mov    DWORD PTR [ebp-0x4],0x0
1000f45b:	push   0x1
1000f45d:	mov    eax,DWORD PTR [ebp+0x8]
1000f460:	push   eax
1000f461:	call   0x10002160
1000f466:	add    esp,0x8
1000f469:	mov    ecx,DWORD PTR [ebp-0x4]
1000f46c:	or     ecx,0x1
1000f46f:	mov    DWORD PTR [ebp-0x4],ecx
1000f472:	mov    eax,DWORD PTR [ebp+0x8]
1000f475:	mov    esp,ebp
1000f477:	pop    ebp
1000f478:	ret    
1000f479:	int3   
1000f47a:	int3   
1000f47b:	int3   
1000f47c:	int3   
1000f47d:	int3   
1000f47e:	int3   
1000f47f:	int3   
1000f480:	push   ebp
1000f481:	mov    ebp,esp
1000f483:	sub    esp,0xc
1000f486:	mov    DWORD PTR [ebp-0x4],0x0
1000f48d:	lea    eax,[ebp-0x8]
1000f490:	push   eax
1000f491:	call   0x1000f450
1000f496:	add    esp,0x4
1000f499:	lea    ecx,[ebp-0x8]
1000f49c:	call   0x10003200
1000f4a1:	push   eax
1000f4a2:	mov    ecx,DWORD PTR [ebp+0x8]
1000f4a5:	push   ecx
1000f4a6:	call   DWORD PTR ds:0x1002f030
1000f4ac:	mov    edx,DWORD PTR [ebp-0x4]
1000f4af:	mov    DWORD PTR [ebp-0xc],edx
1000f4b2:	lea    ecx,[ebp-0x8]
1000f4b5:	call   0x10002f00
1000f4ba:	mov    eax,DWORD PTR [ebp-0xc]
1000f4bd:	mov    esp,ebp
1000f4bf:	pop    ebp
1000f4c0:	ret    0x4
1000f4c3:	int3   
1000f4c4:	int3   
1000f4c5:	int3   
1000f4c6:	int3   
1000f4c7:	int3   
1000f4c8:	int3   
1000f4c9:	int3   
1000f4ca:	int3   
1000f4cb:	int3   
1000f4cc:	int3   
1000f4cd:	int3   
1000f4ce:	int3   
1000f4cf:	int3   
1000f4d0:	push   ebp
1000f4d1:	mov    ebp,esp
1000f4d3:	xor    eax,eax
1000f4d5:	pop    ebp
1000f4d6:	ret    0x10
1000f4d9:	int3   
1000f4da:	int3   
1000f4db:	int3   
1000f4dc:	int3   
1000f4dd:	int3   
1000f4de:	int3   
1000f4df:	int3   
1000f4e0:	push   ebp
1000f4e1:	mov    ebp,esp
1000f4e3:	xor    eax,eax
1000f4e5:	pop    ebp
1000f4e6:	ret    0xc
1000f4e9:	int3   
1000f4ea:	int3   
1000f4eb:	int3   
1000f4ec:	int3   
1000f4ed:	int3   
1000f4ee:	int3   
1000f4ef:	int3   
1000f4f0:	push   ebp
1000f4f1:	mov    ebp,esp
1000f4f3:	sub    esp,0x2c
1000f4f6:	mov    eax,ds:0x100c7654
1000f4fb:	xor    eax,ebp
1000f4fd:	mov    DWORD PTR [ebp-0x1c],eax
1000f500:	call   0x10001000
1000f505:	mov    DWORD PTR [ebp-0x14],eax
1000f508:	lea    eax,[ebp-0x10]
1000f50b:	push   eax
1000f50c:	call   0x1000f450
1000f511:	add    esp,0x4
1000f514:	lea    ecx,[ebp-0x10]
1000f517:	call   0x10003200
1000f51c:	mov    DWORD PTR [ebp-0xc],eax
1000f51f:	cmp    DWORD PTR [ebp-0xc],0x0
1000f523:	jne    0x1000f52e
1000f525:	mov    DWORD PTR [ebp-0x24],0x0
1000f52c:	jmp    0x1000f57d
1000f52e:	mov    ecx,DWORD PTR [ebp-0xc]
1000f531:	push   ecx
1000f532:	call   DWORD PTR ds:0x1002f034
1000f538:	add    eax,0x1
1000f53b:	mov    DWORD PTR [ebp-0x4],eax
1000f53e:	cmp    DWORD PTR [ebp-0x4],0x3fffffff
1000f545:	jle    0x1000f550
1000f547:	mov    DWORD PTR [ebp-0x28],0x0
1000f54e:	jmp    0x1000f577
1000f550:	mov    eax,DWORD PTR [ebp-0x4]
1000f553:	shl    eax,1
1000f555:	call   0x10018790
1000f55a:	mov    DWORD PTR [ebp-0x2c],esp
1000f55d:	mov    edx,DWORD PTR [ebp-0x14]
1000f560:	push   edx
1000f561:	mov    eax,DWORD PTR [ebp-0x4]
1000f564:	shl    eax,1
1000f566:	push   eax
1000f567:	mov    ecx,DWORD PTR [ebp-0xc]
1000f56a:	push   ecx
1000f56b:	mov    edx,DWORD PTR [ebp-0x2c]
1000f56e:	push   edx
1000f56f:	call   0x10001050
1000f574:	mov    DWORD PTR [ebp-0x28],eax
1000f577:	mov    eax,DWORD PTR [ebp-0x28]
1000f57a:	mov    DWORD PTR [ebp-0x24],eax
1000f57d:	push   0x1
1000f57f:	mov    ecx,DWORD PTR [ebp-0x24]
1000f582:	push   ecx
1000f583:	call   0x1000f5c0
1000f588:	mov    DWORD PTR [ebp-0x8],eax
1000f58b:	mov    edx,DWORD PTR [ebp-0x8]
1000f58e:	mov    DWORD PTR [ebp-0x20],edx
1000f591:	lea    ecx,[ebp-0x10]
1000f594:	call   0x10002f00
1000f599:	mov    eax,DWORD PTR [ebp-0x20]
1000f59c:	lea    esp,[ebp-0x2c]
1000f59f:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f5a2:	xor    ecx,ebp
1000f5a4:	call   0x10018773
1000f5a9:	mov    esp,ebp
1000f5ab:	pop    ebp
1000f5ac:	ret    0xc
1000f5af:	int3   
1000f5b0:	push   ebp
1000f5b1:	mov    ebp,esp
1000f5b3:	xor    eax,eax
1000f5b5:	pop    ebp
1000f5b6:	ret    0xc
1000f5b9:	int3   
1000f5ba:	int3   
1000f5bb:	int3   
1000f5bc:	int3   
1000f5bd:	int3   
1000f5be:	int3   
1000f5bf:	int3   
1000f5c0:	push   ebp
1000f5c1:	mov    ebp,esp
1000f5c3:	sub    esp,0x28
1000f5c6:	cmp    DWORD PTR [ebp+0xc],0x0
1000f5ca:	je     0x1000f78c
1000f5d0:	push   0x1002f410
1000f5d5:	push   0xa
1000f5d7:	push   0x1002f478
1000f5dc:	call   0x100033d0
1000f5e1:	add    esp,0xc
1000f5e4:	push   eax
1000f5e5:	call   DWORD PTR ds:0x1002f054
1000f5eb:	mov    DWORD PTR [ebp-0x8],eax
1000f5ee:	cmp    DWORD PTR [ebp-0x8],0x0
1000f5f2:	jne    0x1000f605
1000f5f4:	mov    DWORD PTR [ebp-0x4],0x80000048
1000f5fb:	jmp    0x1000f793
1000f600:	jmp    0x1000f793
1000f605:	push   0x1002f488
1000f60a:	push   0x13
1000f60c:	push   0x1002f4e0
1000f611:	call   0x100033d0
1000f616:	add    esp,0xc
1000f619:	push   eax
1000f61a:	mov    eax,DWORD PTR [ebp-0x8]
1000f61d:	push   eax
1000f61e:	call   DWORD PTR ds:0x1002f050
1000f624:	mov    DWORD PTR [ebp-0x18],eax
1000f627:	cmp    DWORD PTR [ebp-0x18],0x0
1000f62b:	jne    0x1000f63e
1000f62d:	mov    DWORD PTR [ebp-0x4],0x80000048
1000f634:	jmp    0x1000f780
1000f639:	jmp    0x1000f780
1000f63e:	mov    DWORD PTR [ebp-0x14],0x18
1000f645:	jmp    0x1000f688
1000f647:	jmp    0x1000f688
1000f649:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f64c:	push   ecx
1000f64d:	push   0x20000
1000f652:	call   DWORD PTR [ebp-0x18]
1000f655:	mov    DWORD PTR [ebp-0x4],eax
1000f658:	cmp    DWORD PTR [ebp-0x4],0x0
1000f65c:	je     0x1000f668
1000f65e:	jmp    0x1000f776
1000f663:	jmp    0x1000f776
1000f668:	mov    edx,DWORD PTR [ebp-0x1c]
1000f66b:	mov    eax,DWORD PTR [ebp-0x1c]
1000f66e:	mov    ecx,DWORD PTR [edx+0x4]
1000f671:	cmp    ecx,DWORD PTR [eax]
1000f673:	jbe    0x1000f6b8
1000f675:	mov    edx,DWORD PTR [ebp-0x1c]
1000f678:	mov    eax,DWORD PTR [edx+0x4]
1000f67b:	mov    DWORD PTR [ebp-0x14],eax
1000f67e:	mov    ecx,DWORD PTR [ebp-0x1c]
1000f681:	push   ecx
1000f682:	call   DWORD PTR ds:0x1002f04c
1000f688:	mov    edx,DWORD PTR [ebp-0x14]
1000f68b:	push   edx
1000f68c:	push   0x40
1000f68e:	call   DWORD PTR ds:0x1002f048
1000f694:	mov    DWORD PTR [ebp-0x1c],eax
1000f697:	cmp    DWORD PTR [ebp-0x1c],0x0
1000f69b:	jne    0x1000f6ae
1000f69d:	mov    DWORD PTR [ebp-0x4],0x80000044
1000f6a4:	jmp    0x1000f780
1000f6a9:	jmp    0x1000f780
1000f6ae:	mov    eax,DWORD PTR [ebp-0x1c]
1000f6b1:	mov    ecx,DWORD PTR [ebp-0x14]
1000f6b4:	mov    DWORD PTR [eax],ecx
1000f6b6:	jmp    0x1000f649
1000f6b8:	mov    edx,DWORD PTR [ebp-0x1c]
1000f6bb:	mov    eax,DWORD PTR [ebp-0x1c]
1000f6be:	add    eax,DWORD PTR [edx+0x14]
1000f6c1:	mov    DWORD PTR [ebp-0x10],eax
1000f6c4:	mov    DWORD PTR [ebp-0xc],0x0
1000f6cb:	jmp    0x1000f6d6
1000f6cd:	mov    ecx,DWORD PTR [ebp-0xc]
1000f6d0:	add    ecx,0x1
1000f6d3:	mov    DWORD PTR [ebp-0xc],ecx
1000f6d6:	mov    edx,DWORD PTR [ebp-0x1c]
1000f6d9:	mov    eax,DWORD PTR [ebp-0xc]
1000f6dc:	cmp    eax,DWORD PTR [edx+0xc]
1000f6df:	jae    0x1000f76f
1000f6e5:	mov    ecx,DWORD PTR [ebp-0x10]
1000f6e8:	mov    edx,DWORD PTR [ebp-0x1c]
1000f6eb:	add    edx,DWORD PTR [ecx+0x8]
1000f6ee:	mov    DWORD PTR [ebp-0x24],edx
1000f6f1:	mov    eax,DWORD PTR [ebp-0x24]
1000f6f4:	push   eax
1000f6f5:	call   DWORD PTR ds:0x1002f044
1000f6fb:	mov    ecx,DWORD PTR [ebp-0x24]
1000f6fe:	lea    edx,[ecx+eax*1-0x1]
1000f702:	mov    DWORD PTR [ebp-0x20],edx
1000f705:	jmp    0x1000f710
1000f707:	mov    eax,DWORD PTR [ebp-0x20]
1000f70a:	sub    eax,0x1
1000f70d:	mov    DWORD PTR [ebp-0x20],eax
1000f710:	mov    ecx,DWORD PTR [ebp-0x20]
1000f713:	movsx  edx,BYTE PTR [ecx]
1000f716:	cmp    edx,0x5c
1000f719:	je     0x1000f725
1000f71b:	mov    eax,DWORD PTR [ebp-0x20]
1000f71e:	cmp    eax,DWORD PTR [ebp-0x24]
1000f721:	je     0x1000f725
1000f723:	jmp    0x1000f707
1000f725:	mov    ecx,DWORD PTR [ebp-0x20]
1000f728:	cmp    ecx,DWORD PTR [ebp-0x24]
1000f72b:	jne    0x1000f735
1000f72d:	mov    edx,DWORD PTR [ebp-0x20]
1000f730:	mov    DWORD PTR [ebp-0x28],edx
1000f733:	jmp    0x1000f73e
1000f735:	mov    eax,DWORD PTR [ebp-0x20]
1000f738:	add    eax,0x1
1000f73b:	mov    DWORD PTR [ebp-0x28],eax
1000f73e:	mov    ecx,DWORD PTR [ebp-0x28]
1000f741:	mov    DWORD PTR [ebp-0x24],ecx
1000f744:	mov    edx,DWORD PTR [ebp+0x8]
1000f747:	push   edx
1000f748:	mov    eax,DWORD PTR [ebp-0x24]
1000f74b:	push   eax
1000f74c:	call   DWORD PTR ds:0x1002f040
1000f752:	test   eax,eax
1000f754:	jne    0x1000f761
1000f756:	mov    DWORD PTR [ebp-0x4],0x80000056
1000f75d:	jmp    0x1000f776
1000f75f:	jmp    0x1000f776
1000f761:	mov    ecx,DWORD PTR [ebp-0x10]
1000f764:	add    ecx,0xc
1000f767:	mov    DWORD PTR [ebp-0x10],ecx
1000f76a:	jmp    0x1000f6cd
1000f76f:	mov    DWORD PTR [ebp-0x4],0x0
1000f776:	mov    edx,DWORD PTR [ebp-0x1c]
1000f779:	push   edx
1000f77a:	call   DWORD PTR ds:0x1002f04c
1000f780:	mov    eax,DWORD PTR [ebp-0x8]
1000f783:	push   eax
1000f784:	call   DWORD PTR ds:0x1002f03c
1000f78a:	jmp    0x1000f793
1000f78c:	mov    DWORD PTR [ebp-0x4],0x0
1000f793:	mov    eax,DWORD PTR [ebp-0x4]
1000f796:	mov    esp,ebp
1000f798:	pop    ebp
1000f799:	ret    0x8
1000f79c:	int3   
1000f79d:	int3   
1000f79e:	int3   
1000f79f:	int3   
1000f7a0:	push   ebp
1000f7a1:	mov    ebp,esp
1000f7a3:	push   0x0
1000f7a5:	mov    eax,ds:0x100c9fb8
1000f7aa:	push   eax
1000f7ab:	call   DWORD PTR ds:0x1002f058
1000f7b1:	neg    eax
1000f7b3:	sbb    eax,eax
1000f7b5:	add    eax,0x1
1000f7b8:	pop    ebp
1000f7b9:	ret    
1000f7ba:	int3   
1000f7bb:	int3   
1000f7bc:	int3   
1000f7bd:	int3   
1000f7be:	int3   
1000f7bf:	int3   
1000f7c0:	push   ebp
1000f7c1:	mov    ebp,esp
1000f7c3:	push   0xffffffff
1000f7c5:	push   0x1002cd50
1000f7ca:	mov    eax,fs:0x0
1000f7d0:	push   eax
1000f7d1:	push   ecx
1000f7d2:	sub    esp,0x98
1000f7d8:	mov    eax,ds:0x100c7654
1000f7dd:	xor    eax,ebp
1000f7df:	mov    DWORD PTR [ebp-0x14],eax
1000f7e2:	push   ebx
1000f7e3:	push   esi
1000f7e4:	push   edi
1000f7e5:	push   eax
1000f7e6:	lea    eax,[ebp-0xc]
1000f7e9:	mov    fs:0x0,eax
1000f7ef:	mov    DWORD PTR [ebp-0x10],esp
1000f7f2:	mov    DWORD PTR [ebp-0x4],0x0
1000f7f9:	mov    eax,DWORD PTR [ebp+0x10]
1000f7fc:	push   eax
1000f7fd:	lea    ecx,[ebp-0x50]
1000f800:	call   0x10002e70
1000f805:	mov    DWORD PTR [ebp-0x74],eax
1000f808:	mov    BYTE PTR [ebp-0x4],0x1
1000f80c:	push   0x0
1000f80e:	push   0x2c
1000f810:	lea    ecx,[ebp-0x50]
1000f813:	call   0x10010930
1000f818:	mov    DWORD PTR [ebp-0x34],eax
1000f81b:	mov    ecx,DWORD PTR [ebp-0x34]
1000f81e:	push   ecx
1000f81f:	lea    edx,[ebp-0x3c]
1000f822:	push   edx
1000f823:	lea    ecx,[ebp-0x50]
1000f826:	call   0x100030a0
1000f82b:	mov    DWORD PTR [ebp-0x78],eax
1000f82e:	mov    BYTE PTR [ebp-0x4],0x2
1000f832:	lea    ecx,[ebp-0x50]
1000f835:	call   0x10003250
1000f83a:	sub    eax,DWORD PTR [ebp-0x34]
1000f83d:	sub    eax,0x1
1000f840:	push   eax
1000f841:	lea    eax,[ebp-0x58]
1000f844:	push   eax
1000f845:	lea    ecx,[ebp-0x50]
1000f848:	call   0x10003010
1000f84d:	mov    DWORD PTR [ebp-0x7c],eax
1000f850:	mov    BYTE PTR [ebp-0x4],0x3
1000f854:	lea    ecx,[ebp-0x58]
1000f857:	call   0x10010a80
1000f85c:	lea    ecx,[ebp-0x58]
1000f85f:	call   0x100109c0
1000f864:	lea    ecx,[ebp-0x3c]
1000f867:	call   0x10003200
1000f86c:	mov    DWORD PTR [ebp-0x80],eax
1000f86f:	mov    ecx,DWORD PTR [ebp-0x80]
1000f872:	push   ecx
1000f873:	call   0x1001918a
1000f878:	add    esp,0x4
1000f87b:	mov    DWORD PTR [ebp-0x48],eax
1000f87e:	cmp    DWORD PTR [ebp-0x48],0x0
1000f882:	jne    0x1000f899
1000f884:	mov    DWORD PTR [ebp-0x68],0x0
1000f88b:	push   0x100bba80
1000f890:	lea    edx,[ebp-0x68]
1000f893:	push   edx
1000f894:	call   0x10018e6e
1000f899:	mov    eax,DWORD PTR [ebp-0x48]
1000f89c:	push   eax
1000f89d:	push   0x0
1000f89f:	push   0x400
1000f8a4:	call   DWORD PTR ds:0x1002f060
1000f8aa:	push   eax
1000f8ab:	lea    ecx,[ebp-0x44]
1000f8ae:	call   0x10003300
1000f8b3:	mov    DWORD PTR [ebp-0x84],eax
1000f8b9:	mov    BYTE PTR [ebp-0x4],0x4
1000f8bd:	lea    ecx,[ebp-0x44]
1000f8c0:	call   0x10003340
1000f8c5:	mov    DWORD PTR [ebp-0x88],eax
1000f8cb:	cmp    DWORD PTR [ebp-0x88],0x0
1000f8d2:	jne    0x1000f8e9
1000f8d4:	mov    DWORD PTR [ebp-0x6c],0x0
1000f8db:	push   0x100bba80
1000f8e0:	lea    ecx,[ebp-0x6c]
1000f8e3:	push   ecx
1000f8e4:	call   0x10018e6e
1000f8e9:	push   0x1
1000f8eb:	push   0x1
1000f8ed:	lea    ecx,[ebp-0x64]
1000f8f0:	call   0x10006fa0
1000f8f5:	mov    DWORD PTR [ebp-0x8c],eax
1000f8fb:	mov    BYTE PTR [ebp-0x4],0x5
1000f8ff:	lea    ecx,[ebp-0x44]
1000f902:	call   0x10003340
1000f907:	mov    DWORD PTR [ebp-0x90],eax
1000f90d:	mov    edx,DWORD PTR [ebp-0x90]
1000f913:	push   edx
1000f914:	call   0x10002b90
1000f919:	add    esp,0x4
1000f91c:	mov    WORD PTR [ebp-0x92],ax
1000f923:	mov    ax,WORD PTR [ebp-0x92]
1000f92a:	push   eax
1000f92b:	lea    ecx,[ebp-0x30]
1000f92e:	push   ecx
1000f92f:	lea    ecx,[ebp-0x64]
1000f932:	call   0x10007640
1000f937:	mov    DWORD PTR [ebp-0x98],eax
1000f93d:	mov    BYTE PTR [ebp-0x4],0x6
1000f941:	lea    ecx,[ebp-0x30]
1000f944:	call   0x10002d70
1000f949:	mov    DWORD PTR [ebp-0x9c],eax
1000f94f:	cmp    DWORD PTR [ebp-0x9c],0x0
1000f956:	jne    0x1000f96d
1000f958:	mov    DWORD PTR [ebp-0x70],0x0
1000f95f:	push   0x100bba80
1000f964:	lea    edx,[ebp-0x70]
1000f967:	push   edx
1000f968:	call   0x10018e6e
1000f96d:	call   0x10001000
1000f972:	mov    DWORD PTR [ebp-0x4c],eax
1000f975:	lea    ecx,[ebp-0x58]
1000f978:	call   0x10003200
1000f97d:	mov    DWORD PTR [ebp-0xa0],eax
1000f983:	mov    eax,DWORD PTR [ebp-0xa0]
1000f989:	push   eax
1000f98a:	call   0x1000ce70
1000f98f:	add    esp,0x4
1000f992:	mov    DWORD PTR [ebp-0xa4],eax
1000f998:	lea    ecx,[ebp-0x30]
1000f99b:	call   0x10007b70
1000f9a0:	mov    DWORD PTR [ebp-0xa8],eax
1000f9a6:	mov    ecx,DWORD PTR [ebp-0xa4]
1000f9ac:	push   ecx
1000f9ad:	mov    edx,DWORD PTR [ebp-0xa8]
1000f9b3:	push   edx
1000f9b4:	mov    eax,DWORD PTR [ebp-0x48]
1000f9b7:	push   eax
1000f9b8:	call   0x10009a10
1000f9bd:	add    esp,0xc
1000f9c0:	mov    BYTE PTR [ebp-0x4],0x5
1000f9c4:	lea    ecx,[ebp-0x30]
1000f9c7:	call   0x10002c00
1000f9cc:	mov    BYTE PTR [ebp-0x4],0x4
1000f9d0:	lea    ecx,[ebp-0x64]
1000f9d3:	call   0x10006fc0
1000f9d8:	mov    BYTE PTR [ebp-0x4],0x3
1000f9dc:	lea    ecx,[ebp-0x44]
1000f9df:	call   0x10003310
1000f9e4:	mov    BYTE PTR [ebp-0x4],0x2
1000f9e8:	lea    ecx,[ebp-0x58]
1000f9eb:	call   0x10002f00
1000f9f0:	mov    BYTE PTR [ebp-0x4],0x1
1000f9f4:	lea    ecx,[ebp-0x3c]
1000f9f7:	call   0x10002f00
1000f9fc:	mov    BYTE PTR [ebp-0x4],0x0
1000fa00:	lea    ecx,[ebp-0x50]
1000fa03:	call   0x10002f00
1000fa08:	jmp    0x1000fa1f
1000fa0a:	push   0x0
1000fa0c:	call   DWORD PTR ds:0x1002f05c
1000fa12:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fa19:	mov    eax,0x1000fa26
1000fa1e:	ret    
1000fa1f:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fa26:	mov    ecx,DWORD PTR [ebp-0xc]
1000fa29:	mov    DWORD PTR fs:0x0,ecx
1000fa30:	pop    ecx
1000fa31:	pop    edi
1000fa32:	pop    esi
1000fa33:	pop    ebx
1000fa34:	mov    ecx,DWORD PTR [ebp-0x14]
1000fa37:	xor    ecx,ebp
1000fa39:	call   0x10018773
1000fa3e:	mov    esp,ebp
1000fa40:	pop    ebp
1000fa41:	ret    0x10
1000fa44:	int3   
1000fa45:	int3   
1000fa46:	int3   
1000fa47:	int3   
1000fa48:	int3   
1000fa49:	int3   
1000fa4a:	int3   
1000fa4b:	int3   
1000fa4c:	int3   
1000fa4d:	int3   
1000fa4e:	int3   
1000fa4f:	int3   
1000fa50:	push   ebp
1000fa51:	mov    ebp,esp
1000fa53:	push   0xffffffff
1000fa55:	push   0x1002cdbf
1000fa5a:	mov    eax,fs:0x0
1000fa60:	push   eax
1000fa61:	push   ecx
1000fa62:	mov    eax,0x10e8
1000fa67:	call   0x100191a0
1000fa6c:	mov    eax,ds:0x100c7654
1000fa71:	xor    eax,ebp
1000fa73:	mov    DWORD PTR [ebp-0x30],eax
1000fa76:	push   ebx
1000fa77:	push   esi
1000fa78:	push   edi
1000fa79:	push   eax
1000fa7a:	lea    eax,[ebp-0xc]
1000fa7d:	mov    fs:0x0,eax
1000fa83:	mov    DWORD PTR [ebp-0x10],esp
1000fa86:	mov    DWORD PTR [ebp-0x4],0x0
1000fa8d:	push   ecx
1000fa8e:	mov    eax,esp
1000fa90:	mov    DWORD PTR [ebp-0x1090],esp
1000fa96:	push   eax
1000fa97:	call   0x10011cc0
1000fa9c:	add    esp,0x4
1000fa9f:	mov    DWORD PTR [ebp-0x10a4],eax
1000faa5:	mov    ecx,DWORD PTR [ebp+0x8]
1000faa8:	push   ecx
1000faa9:	call   0x100029b0
1000faae:	add    esp,0x8
1000fab1:	mov    BYTE PTR [ebp-0x10a5],al
1000fab7:	movzx  edx,BYTE PTR [ebp-0x10a5]
1000fabe:	test   edx,edx
1000fac0:	je     0x1000fac9
1000fac2:	mov    al,0x1
1000fac4:	jmp    0x1000fead
1000fac9:	mov    eax,DWORD PTR [ebp+0x8]
1000facc:	push   eax
1000facd:	push   0x0
1000facf:	push   0x410
1000fad4:	call   DWORD PTR ds:0x1002f060
1000fada:	push   eax
1000fadb:	lea    ecx,[ebp-0x18]
1000fade:	call   0x10003300
1000fae3:	mov    DWORD PTR [ebp-0x10ac],eax
1000fae9:	mov    BYTE PTR [ebp-0x4],0x1
1000faed:	lea    ecx,[ebp-0x18]
1000faf0:	call   0x10003340
1000faf5:	mov    DWORD PTR [ebp-0x10b0],eax
1000fafb:	cmp    DWORD PTR [ebp-0x10b0],0x0
1000fb02:	jne    0x1000fb22
1000fb04:	mov    BYTE PTR [ebp-0x1091],0x0
1000fb0b:	mov    BYTE PTR [ebp-0x4],0x0
1000fb0f:	lea    ecx,[ebp-0x18]
1000fb12:	call   0x10003310
1000fb17:	mov    al,BYTE PTR [ebp-0x1091]
1000fb1d:	jmp    0x1000fead
1000fb22:	lea    ecx,[ebp-0x18]
1000fb25:	call   0x10003340
1000fb2a:	mov    DWORD PTR [ebp-0x10b4],eax
1000fb30:	lea    ecx,[ebp-0x1c]
1000fb33:	push   ecx
1000fb34:	push   0xf01ff
1000fb39:	mov    edx,DWORD PTR [ebp-0x10b4]
1000fb3f:	push   edx
1000fb40:	call   DWORD PTR ds:0x1002f00c
1000fb46:	push   0x0
1000fb48:	lea    ecx,[ebp-0x1034]
1000fb4e:	call   0x10003300
1000fb53:	mov    DWORD PTR [ebp-0x10b8],eax
1000fb59:	mov    BYTE PTR [ebp-0x4],0x2
1000fb5d:	mov    eax,DWORD PTR [ebp-0x1c]
1000fb60:	push   eax
1000fb61:	lea    ecx,[ebp-0x1034]
1000fb67:	call   0x10003f00
1000fb6c:	lea    ecx,[ebp-0x18]
1000fb6f:	call   0x10003340
1000fb74:	mov    DWORD PTR [ebp-0x10bc],eax
1000fb7a:	push   0x1000
1000fb7f:	lea    ecx,[ebp-0x1030]
1000fb85:	push   ecx
1000fb86:	push   0x0
1000fb88:	mov    edx,DWORD PTR [ebp-0x10bc]
1000fb8e:	push   edx
1000fb8f:	call   0x100151ba
1000fb94:	test   eax,eax
1000fb96:	jne    0x1000fbc5
1000fb98:	mov    BYTE PTR [ebp-0x1092],0x0
1000fb9f:	mov    BYTE PTR [ebp-0x4],0x1
1000fba3:	lea    ecx,[ebp-0x1034]
1000fba9:	call   0x10003310
1000fbae:	mov    BYTE PTR [ebp-0x4],0x0
1000fbb2:	lea    ecx,[ebp-0x18]
1000fbb5:	call   0x10003310
1000fbba:	mov    al,BYTE PTR [ebp-0x1092]
1000fbc0:	jmp    0x1000fead
1000fbc5:	call   0x100146f0
1000fbca:	mov    BYTE PTR [ebp-0x10bd],al
1000fbd0:	movzx  eax,BYTE PTR [ebp-0x10bd]
1000fbd7:	test   eax,eax
1000fbd9:	jne    0x1000fc08
1000fbdb:	mov    BYTE PTR [ebp-0x1093],0x1
1000fbe2:	mov    BYTE PTR [ebp-0x4],0x1
1000fbe6:	lea    ecx,[ebp-0x1034]
1000fbec:	call   0x10003310
1000fbf1:	mov    BYTE PTR [ebp-0x4],0x0
1000fbf5:	lea    ecx,[ebp-0x18]
1000fbf8:	call   0x10003310
1000fbfd:	mov    al,BYTE PTR [ebp-0x1093]
1000fc03:	jmp    0x1000fead
1000fc08:	push   0x1
1000fc0a:	push   0x1
1000fc0c:	lea    ecx,[ebp-0x108c]
1000fc12:	call   0x10006fa0
1000fc17:	mov    DWORD PTR [ebp-0x10c4],eax
1000fc1d:	mov    BYTE PTR [ebp-0x4],0x3
1000fc21:	mov    ecx,DWORD PTR [ebp+0x8]
1000fc24:	push   ecx
1000fc25:	lea    ecx,[ebp-0x108c]
1000fc2b:	call   0x10007570
1000fc30:	mov    BYTE PTR [ebp-0x10c5],al
1000fc36:	movzx  edx,BYTE PTR [ebp-0x10c5]
1000fc3d:	test   edx,edx
1000fc3f:	jne    0x1000fc7d
1000fc41:	mov    BYTE PTR [ebp-0x1094],0x1
1000fc48:	mov    BYTE PTR [ebp-0x4],0x2
1000fc4c:	lea    ecx,[ebp-0x108c]
1000fc52:	call   0x10006fc0
1000fc57:	mov    BYTE PTR [ebp-0x4],0x1
1000fc5b:	lea    ecx,[ebp-0x1034]
1000fc61:	call   0x10003310
1000fc66:	mov    BYTE PTR [ebp-0x4],0x0
1000fc6a:	lea    ecx,[ebp-0x18]
1000fc6d:	call   0x10003310
1000fc72:	mov    al,BYTE PTR [ebp-0x1094]
1000fc78:	jmp    0x1000fead
1000fc7d:	lea    ecx,[ebp-0x14]
1000fc80:	call   0x10002d80
1000fc85:	mov    BYTE PTR [ebp-0x4],0x4
1000fc89:	mov    DWORD PTR [ebp-0x1080],0x0
1000fc93:	push   0x40
1000fc95:	push   0x0
1000fc97:	lea    eax,[ebp-0x107c]
1000fc9d:	push   eax
1000fc9e:	call   0x100191d0
1000fca3:	add    esp,0xc
1000fca6:	mov    DWORD PTR [ebp-0x2c],0x0
1000fcad:	xor    ecx,ecx
1000fcaf:	mov    DWORD PTR [ebp-0x28],ecx
1000fcb2:	mov    DWORD PTR [ebp-0x24],ecx
1000fcb5:	mov    DWORD PTR [ebp-0x20],ecx
1000fcb8:	mov    DWORD PTR [ebp-0x1080],0x44
1000fcc2:	lea    edx,[ebp-0x1098]
1000fcc8:	push   edx
1000fcc9:	call   0x10011c00
1000fcce:	add    esp,0x4
1000fcd1:	mov    DWORD PTR [ebp-0x10cc],eax
1000fcd7:	mov    eax,DWORD PTR [ebp-0x10cc]
1000fcdd:	mov    DWORD PTR [ebp-0x10d0],eax
1000fce3:	mov    BYTE PTR [ebp-0x4],0x5
1000fce7:	mov    ecx,DWORD PTR [ebp-0x10d0]
1000fced:	call   0x10003200
1000fcf2:	mov    DWORD PTR [ebp-0x10d4],eax
1000fcf8:	push   0x1002f820
1000fcfd:	push   0x4
1000fcff:	push   0x1002f868
1000fd04:	call   0x100035f0
1000fd09:	add    esp,0xc
1000fd0c:	mov    DWORD PTR [ebp-0x10d8],eax
1000fd12:	push   0x1
1000fd14:	push   0x0
1000fd16:	lea    ecx,[ebp-0x109c]
1000fd1c:	push   ecx
1000fd1d:	call   0x100020c0
1000fd22:	add    esp,0xc
1000fd25:	mov    DWORD PTR [ebp-0x10dc],eax
1000fd2b:	mov    edx,DWORD PTR [ebp-0x10dc]
1000fd31:	mov    DWORD PTR [ebp-0x10e0],edx
1000fd37:	mov    BYTE PTR [ebp-0x4],0x6
1000fd3b:	mov    eax,DWORD PTR [ebp-0x10d8]
1000fd41:	push   eax
1000fd42:	mov    ecx,DWORD PTR [ebp-0x10e0]
1000fd48:	push   ecx
1000fd49:	lea    edx,[ebp-0x10a0]
1000fd4f:	push   edx
1000fd50:	call   0x10003120
1000fd55:	add    esp,0xc
1000fd58:	mov    DWORD PTR [ebp-0x10e4],eax
1000fd5e:	mov    eax,DWORD PTR [ebp-0x10e4]
1000fd64:	mov    DWORD PTR [ebp-0x10e8],eax
1000fd6a:	mov    BYTE PTR [ebp-0x4],0x7
1000fd6e:	push   0x1002f878
1000fd73:	push   0x13
1000fd75:	push   0x1002f8c0
1000fd7a:	call   0x100035f0
1000fd7f:	add    esp,0xc
1000fd82:	mov    DWORD PTR [ebp-0x10ec],eax
1000fd88:	mov    ecx,DWORD PTR [ebp-0x10d4]
1000fd8e:	push   ecx
1000fd8f:	mov    edx,DWORD PTR [ebp+0x8]
1000fd92:	push   edx
1000fd93:	mov    eax,DWORD PTR [ebp-0x10e8]
1000fd99:	mov    ecx,DWORD PTR [eax]
1000fd9b:	push   ecx
1000fd9c:	mov    edx,DWORD PTR [ebp-0x10ec]
1000fda2:	push   edx
1000fda3:	lea    eax,[ebp-0x14]
1000fda6:	push   eax
1000fda7:	call   0x1000d790
1000fdac:	add    esp,0x14
1000fdaf:	mov    BYTE PTR [ebp-0x4],0x6
1000fdb3:	lea    ecx,[ebp-0x10a0]
1000fdb9:	call   0x10002f00
1000fdbe:	mov    BYTE PTR [ebp-0x4],0x5
1000fdc2:	lea    ecx,[ebp-0x109c]
1000fdc8:	call   0x10002f00
1000fdcd:	mov    BYTE PTR [ebp-0x4],0x4
1000fdd1:	lea    ecx,[ebp-0x1098]
1000fdd7:	call   0x10002f00
1000fddc:	lea    ecx,[ebp-0x14]
1000fddf:	call   0x10003200
1000fde4:	mov    DWORD PTR [ebp-0x10f0],eax
1000fdea:	push   0x1002f8e8
1000fdef:	push   0xc
1000fdf1:	push   0x1002f94c
1000fdf6:	call   0x100035f0
1000fdfb:	add    esp,0xc
1000fdfe:	mov    DWORD PTR [ebp-0x10f4],eax
1000fe04:	lea    ecx,[ebp-0x1034]
1000fe0a:	call   0x10003340
1000fe0f:	mov    DWORD PTR [ebp-0x10f8],eax
1000fe15:	lea    ecx,[ebp-0x2c]
1000fe18:	push   ecx
1000fe19:	lea    edx,[ebp-0x1080]
1000fe1f:	push   edx
1000fe20:	push   0x0
1000fe22:	push   0x0
1000fe24:	push   0x0
1000fe26:	push   0x1
1000fe28:	push   0x0
1000fe2a:	push   0x0
1000fe2c:	mov    eax,DWORD PTR [ebp-0x10f0]
1000fe32:	push   eax
1000fe33:	mov    ecx,DWORD PTR [ebp-0x10f4]
1000fe39:	push   ecx
1000fe3a:	mov    edx,DWORD PTR [ebp-0x10f8]
1000fe40:	push   edx
1000fe41:	call   DWORD PTR ds:0x1002f010
1000fe47:	test   eax,eax
1000fe49:	je     0x1000fe5f
1000fe4b:	mov    eax,DWORD PTR [ebp-0x28]
1000fe4e:	push   eax
1000fe4f:	call   DWORD PTR ds:0x1002f064
1000fe55:	mov    ecx,DWORD PTR [ebp-0x2c]
1000fe58:	push   ecx
1000fe59:	call   DWORD PTR ds:0x1002f064
1000fe5f:	mov    BYTE PTR [ebp-0x4],0x3
1000fe63:	lea    ecx,[ebp-0x14]
1000fe66:	call   0x10002f00
1000fe6b:	mov    BYTE PTR [ebp-0x4],0x2
1000fe6f:	lea    ecx,[ebp-0x108c]
1000fe75:	call   0x10006fc0
1000fe7a:	mov    BYTE PTR [ebp-0x4],0x1
1000fe7e:	lea    ecx,[ebp-0x1034]
1000fe84:	call   0x10003310
1000fe89:	mov    BYTE PTR [ebp-0x4],0x0
1000fe8d:	lea    ecx,[ebp-0x18]
1000fe90:	call   0x10003310
1000fe95:	jmp    0x1000fea4
1000fe97:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000fe9e:	mov    eax,0x1000feab
1000fea3:	ret    
1000fea4:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000feab:	mov    al,0x1
1000fead:	mov    ecx,DWORD PTR [ebp-0xc]
1000feb0:	mov    DWORD PTR fs:0x0,ecx
1000feb7:	pop    ecx
1000feb8:	pop    edi
1000feb9:	pop    esi
1000feba:	pop    ebx
1000febb:	mov    ecx,DWORD PTR [ebp-0x30]
1000febe:	xor    ecx,ebp
1000fec0:	call   0x10018773
1000fec5:	mov    esp,ebp
1000fec7:	pop    ebp
1000fec8:	ret    
1000fec9:	int3   
1000feca:	int3   
1000fecb:	int3   
1000fecc:	int3   
1000fecd:	int3   
1000fece:	int3   
1000fecf:	int3   
1000fed0:	push   ebp
1000fed1:	mov    ebp,esp
1000fed3:	push   0xffffffff
1000fed5:	push   0x1002cdef
1000feda:	mov    eax,fs:0x0
1000fee0:	push   eax
1000fee1:	sub    esp,0x23c
1000fee7:	mov    eax,ds:0x100c7654
1000feec:	xor    eax,ebp
1000feee:	mov    DWORD PTR [ebp-0x14],eax
1000fef1:	push   eax
1000fef2:	lea    eax,[ebp-0xc]
1000fef5:	mov    fs:0x0,eax
1000fefb:	mov    DWORD PTR [ebp-0x244],0x0
1000ff05:	push   0x228
1000ff0a:	push   0x0
1000ff0c:	lea    eax,[ebp-0x240]
1000ff12:	push   eax
1000ff13:	call   0x100191d0
1000ff18:	add    esp,0xc
1000ff1b:	push   0x0
1000ff1d:	lea    ecx,[ebp-0x10]
1000ff20:	call   0x10003300
1000ff25:	mov    DWORD PTR [ebp-0x4],0x0
1000ff2c:	push   0x0
1000ff2e:	push   0x2
1000ff30:	call   0x10018040
1000ff35:	push   eax
1000ff36:	lea    ecx,[ebp-0x10]
1000ff39:	call   0x10003f00
1000ff3e:	lea    ecx,[ebp-0x10]
1000ff41:	call   0x10003340
1000ff46:	cmp    eax,0xffffffff
1000ff49:	jne    0x1000ff6c
1000ff4b:	mov    BYTE PTR [ebp-0x245],0x0
1000ff52:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ff59:	lea    ecx,[ebp-0x10]
1000ff5c:	call   0x10003310
1000ff61:	mov    al,BYTE PTR [ebp-0x245]
1000ff67:	jmp    0x1001006d
1000ff6c:	mov    DWORD PTR [ebp-0x244],0x22c
1000ff76:	lea    ecx,[ebp-0x244]
1000ff7c:	push   ecx
1000ff7d:	lea    ecx,[ebp-0x10]
1000ff80:	call   0x10003340
1000ff85:	push   eax
1000ff86:	call   0x1001803a
1000ff8b:	test   eax,eax
1000ff8d:	jne    0x1000ffb0
1000ff8f:	mov    BYTE PTR [ebp-0x246],0x0
1000ff96:	mov    DWORD PTR [ebp-0x4],0xffffffff
1000ff9d:	lea    ecx,[ebp-0x10]
1000ffa0:	call   0x10003310
1000ffa5:	mov    al,BYTE PTR [ebp-0x246]
1000ffab:	jmp    0x1001006d
1000ffb0:	push   0x1002f968
1000ffb5:	push   0xc
1000ffb7:	push   0x1002f9e8
1000ffbc:	call   0x100035f0
1000ffc1:	add    esp,0xc
1000ffc4:	push   eax
1000ffc5:	lea    edx,[ebp-0x220]
1000ffcb:	push   edx
1000ffcc:	call   0x100193db
1000ffd1:	add    esp,0x8
1000ffd4:	test   eax,eax
1000ffd6:	je     0x10010000
1000ffd8:	push   0x1002fa08
1000ffdd:	push   0xb
1000ffdf:	push   0x1002fa88
1000ffe4:	call   0x100035f0
1000ffe9:	add    esp,0xc
1000ffec:	push   eax
1000ffed:	lea    eax,[ebp-0x220]
1000fff3:	push   eax
1000fff4:	call   0x100193db
1000fff9:	add    esp,0x8
1000fffc:	test   eax,eax
1000fffe:	jne    0x10010034
10010000:	mov    ecx,DWORD PTR [ebp-0x23c]
10010006:	push   ecx
10010007:	call   0x1000fa50
1001000c:	add    esp,0x4
1001000f:	movzx  edx,al
10010012:	test   edx,edx
10010014:	jne    0x10010034
10010016:	mov    BYTE PTR [ebp-0x247],0x0
1001001d:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010024:	lea    ecx,[ebp-0x10]
10010027:	call   0x10003310
1001002c:	mov    al,BYTE PTR [ebp-0x247]
10010032:	jmp    0x1001006d
10010034:	lea    eax,[ebp-0x244]
1001003a:	push   eax
1001003b:	lea    ecx,[ebp-0x10]
1001003e:	call   0x10003340
10010043:	push   eax
10010044:	call   0x10018034
10010049:	test   eax,eax
1001004b:	jne    0x1000ffb0
10010051:	mov    BYTE PTR [ebp-0x248],0x1
10010058:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001005f:	lea    ecx,[ebp-0x10]
10010062:	call   0x10003310
10010067:	mov    al,BYTE PTR [ebp-0x248]
1001006d:	mov    ecx,DWORD PTR [ebp-0xc]
10010070:	mov    DWORD PTR fs:0x0,ecx
10010077:	pop    ecx
10010078:	mov    ecx,DWORD PTR [ebp-0x14]
1001007b:	xor    ecx,ebp
1001007d:	call   0x10018773
10010082:	mov    esp,ebp
10010084:	pop    ebp
10010085:	ret    
10010086:	int3   
10010087:	int3   
10010088:	int3   
10010089:	int3   
1001008a:	int3   
1001008b:	int3   
1001008c:	int3   
1001008d:	int3   
1001008e:	int3   
1001008f:	int3   
10010090:	push   ebp
10010091:	mov    ebp,esp
10010093:	push   0xffffffff
10010095:	push   0x1002ce48
1001009a:	mov    eax,fs:0x0
100100a0:	push   eax
100100a1:	sub    esp,0x24
100100a4:	mov    eax,ds:0x100c7654
100100a9:	xor    eax,ebp
100100ab:	push   eax
100100ac:	lea    eax,[ebp-0xc]
100100af:	mov    fs:0x0,eax
100100b5:	mov    DWORD PTR [ebp-0x30],0x0
100100bc:	push   0x0
100100be:	lea    ecx,[ebp-0x10]
100100c1:	call   0x10003300
100100c6:	mov    DWORD PTR [ebp-0x4],0x1
100100cd:	mov    eax,DWORD PTR [ebp+0x10]
100100d0:	mov    DWORD PTR [eax],0x0
100100d6:	mov    DWORD PTR [ebp-0x18],0x400
100100dd:	mov    DWORD PTR [ebp-0x14],0x0
100100e4:	push   0x0
100100e6:	lea    ecx,[ebp-0x1c]
100100e9:	call   0x10003300
100100ee:	mov    BYTE PTR [ebp-0x4],0x2
100100f2:	mov    DWORD PTR [ebp-0x20],0x0
100100f9:	push   0x0
100100fb:	lea    ecx,[ebp-0x20]
100100fe:	push   ecx
100100ff:	push   0x4
10010101:	lea    edx,[ebp-0x28]
10010104:	push   edx
10010105:	mov    eax,DWORD PTR [ebp+0xc]
10010108:	push   eax
10010109:	call   DWORD PTR ds:0x1002f074
1001010f:	test   eax,eax
10010111:	je     0x10010119
10010113:	cmp    DWORD PTR [ebp-0x20],0x4
10010117:	je     0x1001014e
10010119:	lea    ecx,[ebp-0x10]
1001011c:	push   ecx
1001011d:	mov    ecx,DWORD PTR [ebp+0x8]
10010120:	call   0x10003350
10010125:	mov    edx,DWORD PTR [ebp-0x30]
10010128:	or     edx,0x1
1001012b:	mov    DWORD PTR [ebp-0x30],edx
1001012e:	mov    BYTE PTR [ebp-0x4],0x1
10010132:	lea    ecx,[ebp-0x1c]
10010135:	call   0x100033a0
1001013a:	mov    BYTE PTR [ebp-0x4],0x0
1001013e:	lea    ecx,[ebp-0x10]
10010141:	call   0x100033a0
10010146:	mov    eax,DWORD PTR [ebp+0x8]
10010149:	jmp    0x1001026d
1001014e:	cmp    DWORD PTR [ebp-0x28],0x0
10010152:	jne    0x10010159
10010154:	jmp    0x10010229
10010159:	mov    eax,DWORD PTR [ebp-0x14]
1001015c:	add    eax,DWORD PTR [ebp-0x28]
1001015f:	push   eax
10010160:	call   0x1001868d
10010165:	add    esp,0x4
10010168:	mov    DWORD PTR [ebp-0x2c],eax
1001016b:	mov    ecx,DWORD PTR [ebp-0x2c]
1001016e:	push   ecx
1001016f:	lea    ecx,[ebp-0x24]
10010172:	call   0x10003300
10010177:	mov    BYTE PTR [ebp-0x4],0x3
1001017b:	mov    edx,DWORD PTR [ebp-0x14]
1001017e:	push   edx
1001017f:	lea    ecx,[ebp-0x1c]
10010182:	call   0x10003340
10010187:	push   eax
10010188:	lea    ecx,[ebp-0x24]
1001018b:	call   0x10003340
10010190:	push   eax
10010191:	call   0x10019470
10010196:	add    esp,0xc
10010199:	lea    eax,[ebp-0x24]
1001019c:	push   eax
1001019d:	lea    ecx,[ebp-0x1c]
100101a0:	call   0x10003370
100101a5:	push   0x0
100101a7:	lea    ecx,[ebp-0x20]
100101aa:	push   ecx
100101ab:	mov    edx,DWORD PTR [ebp-0x28]
100101ae:	push   edx
100101af:	lea    ecx,[ebp-0x1c]
100101b2:	call   0x10003340
100101b7:	add    eax,DWORD PTR [ebp-0x14]
100101ba:	push   eax
100101bb:	mov    eax,DWORD PTR [ebp+0xc]
100101be:	push   eax
100101bf:	call   DWORD PTR ds:0x1002f074
100101c5:	test   eax,eax
100101c7:	je     0x100101d1
100101c9:	mov    ecx,DWORD PTR [ebp-0x20]
100101cc:	cmp    ecx,DWORD PTR [ebp-0x28]
100101cf:	je     0x1001020f
100101d1:	lea    edx,[ebp-0x10]
100101d4:	push   edx
100101d5:	mov    ecx,DWORD PTR [ebp+0x8]
100101d8:	call   0x10003350
100101dd:	mov    eax,DWORD PTR [ebp-0x30]
100101e0:	or     eax,0x1
100101e3:	mov    DWORD PTR [ebp-0x30],eax
100101e6:	mov    BYTE PTR [ebp-0x4],0x2
100101ea:	lea    ecx,[ebp-0x24]
100101ed:	call   0x100033a0
100101f2:	mov    BYTE PTR [ebp-0x4],0x1
100101f6:	lea    ecx,[ebp-0x1c]
100101f9:	call   0x100033a0
100101fe:	mov    BYTE PTR [ebp-0x4],0x0
10010202:	lea    ecx,[ebp-0x10]
10010205:	call   0x100033a0
1001020a:	mov    eax,DWORD PTR [ebp+0x8]
1001020d:	jmp    0x1001026d
1001020f:	mov    ecx,DWORD PTR [ebp-0x14]
10010212:	add    ecx,DWORD PTR [ebp-0x28]
10010215:	mov    DWORD PTR [ebp-0x14],ecx
10010218:	mov    BYTE PTR [ebp-0x4],0x2
1001021c:	lea    ecx,[ebp-0x24]
1001021f:	call   0x100033a0
10010224:	jmp    0x100100f9
10010229:	lea    edx,[ebp-0x1c]
1001022c:	push   edx
1001022d:	lea    ecx,[ebp-0x10]
10010230:	call   0x10003370
10010235:	mov    eax,DWORD PTR [ebp+0x10]
10010238:	mov    ecx,DWORD PTR [ebp-0x14]
1001023b:	mov    DWORD PTR [eax],ecx
1001023d:	lea    edx,[ebp-0x10]
10010240:	push   edx
10010241:	mov    ecx,DWORD PTR [ebp+0x8]
10010244:	call   0x10003350
10010249:	mov    eax,DWORD PTR [ebp-0x30]
1001024c:	or     eax,0x1
1001024f:	mov    DWORD PTR [ebp-0x30],eax
10010252:	mov    BYTE PTR [ebp-0x4],0x1
10010256:	lea    ecx,[ebp-0x1c]
10010259:	call   0x100033a0
1001025e:	mov    BYTE PTR [ebp-0x4],0x0
10010262:	lea    ecx,[ebp-0x10]
10010265:	call   0x100033a0
1001026a:	mov    eax,DWORD PTR [ebp+0x8]
1001026d:	mov    ecx,DWORD PTR [ebp-0xc]
10010270:	mov    DWORD PTR fs:0x0,ecx
10010277:	pop    ecx
10010278:	mov    esp,ebp
1001027a:	pop    ebp
1001027b:	ret    
1001027c:	int3   
1001027d:	int3   
1001027e:	int3   
1001027f:	int3   
10010280:	push   ebp
10010281:	mov    ebp,esp
10010283:	push   0xffffffff
10010285:	push   0x1002ce6b
1001028a:	mov    eax,fs:0x0
10010290:	push   eax
10010291:	sub    esp,0x20
10010294:	mov    eax,ds:0x100c7654
10010299:	xor    eax,ebp
1001029b:	push   eax
1001029c:	lea    eax,[ebp-0xc]
1001029f:	mov    fs:0x0,eax
100102a5:	mov    DWORD PTR [ebp-0x14],0x1
100102ac:	push   0x1
100102ae:	lea    eax,[ebp-0x14]
100102b1:	push   eax
100102b2:	lea    ecx,[ebp-0x1d]
100102b5:	push   ecx
100102b6:	call   0x100151c0
100102bb:	mov    DWORD PTR [ebp-0x1c],eax
100102be:	cmp    DWORD PTR [ebp-0x1c],0x7a
100102c2:	je     0x100102cb
100102c4:	xor    al,al
100102c6:	jmp    0x10010394
100102cb:	mov    edx,DWORD PTR [ebp-0x14]
100102ce:	push   edx
100102cf:	call   0x1001868d
100102d4:	add    esp,0x4
100102d7:	mov    DWORD PTR [ebp-0x28],eax
100102da:	mov    eax,DWORD PTR [ebp-0x28]
100102dd:	push   eax
100102de:	lea    ecx,[ebp-0x10]
100102e1:	call   0x10003300
100102e6:	mov    DWORD PTR [ebp-0x4],0x0
100102ed:	lea    ecx,[ebp-0x10]
100102f0:	call   0x10003340
100102f5:	mov    DWORD PTR [ebp-0x18],eax
100102f8:	push   0x1
100102fa:	lea    ecx,[ebp-0x14]
100102fd:	push   ecx
100102fe:	mov    edx,DWORD PTR [ebp-0x18]
10010301:	push   edx
10010302:	call   0x100151c0
10010307:	mov    DWORD PTR [ebp-0x1c],eax
1001030a:	cmp    DWORD PTR [ebp-0x1c],0x0
1001030e:	je     0x10010328
10010310:	mov    BYTE PTR [ebp-0x29],0x0
10010314:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001031b:	lea    ecx,[ebp-0x10]
1001031e:	call   0x100033a0
10010323:	mov    al,BYTE PTR [ebp-0x29]
10010326:	jmp    0x10010394
10010328:	mov    DWORD PTR [ebp-0x24],0x0
1001032f:	jmp    0x1001033a
10010331:	mov    eax,DWORD PTR [ebp-0x24]
10010334:	add    eax,0x1
10010337:	mov    DWORD PTR [ebp-0x24],eax
1001033a:	mov    ecx,DWORD PTR [ebp-0x18]
1001033d:	mov    edx,DWORD PTR [ebp-0x24]
10010340:	cmp    edx,DWORD PTR [ecx]
10010342:	je     0x1001037e
10010344:	mov    eax,DWORD PTR [ebp-0x24]
10010347:	imul   eax,eax,0x38
1001034a:	mov    ecx,DWORD PTR [ebp-0x18]
1001034d:	cmp    DWORD PTR [ecx+eax*1+0x4],0x0
10010352:	jne    0x1001037c
10010354:	mov    edx,DWORD PTR [ebp-0x24]
10010357:	imul   edx,edx,0x38
1001035a:	mov    eax,DWORD PTR [ebp-0x18]
1001035d:	cmp    DWORD PTR [eax+edx*1+0x8],0x0
10010362:	jne    0x1001037c
10010364:	mov    BYTE PTR [ebp-0x2a],0x1
10010368:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001036f:	lea    ecx,[ebp-0x10]
10010372:	call   0x100033a0
10010377:	mov    al,BYTE PTR [ebp-0x2a]
1001037a:	jmp    0x10010394
1001037c:	jmp    0x10010331
1001037e:	mov    BYTE PTR [ebp-0x2b],0x0
10010382:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010389:	lea    ecx,[ebp-0x10]
1001038c:	call   0x100033a0
10010391:	mov    al,BYTE PTR [ebp-0x2b]
10010394:	mov    ecx,DWORD PTR [ebp-0xc]
10010397:	mov    DWORD PTR fs:0x0,ecx
1001039e:	pop    ecx
1001039f:	mov    esp,ebp
100103a1:	pop    ebp
100103a2:	ret    
100103a3:	int3   
100103a4:	int3   
100103a5:	int3   
100103a6:	int3   
100103a7:	int3   
100103a8:	int3   
100103a9:	int3   
100103aa:	int3   
100103ab:	int3   
100103ac:	int3   
100103ad:	int3   
100103ae:	int3   
100103af:	int3   
100103b0:	push   ebp
100103b1:	mov    ebp,esp
100103b3:	push   0xffffffff
100103b5:	push   0x1002ce8e
100103ba:	mov    eax,fs:0x0
100103c0:	push   eax
100103c1:	sub    esp,0x18
100103c4:	mov    eax,ds:0x100c7654
100103c9:	xor    eax,ebp
100103cb:	push   eax
100103cc:	lea    eax,[ebp-0xc]
100103cf:	mov    fs:0x0,eax
100103d5:	lea    ecx,[ebp-0xd]
100103d8:	call   0x10006e80
100103dd:	mov    DWORD PTR [ebp-0x4],0x0
100103e4:	mov    DWORD PTR [ebp-0x14],0x7530
100103eb:	mov    eax,ds:0x100c8da8
100103f0:	mov    DWORD PTR [ebp-0x20],eax
100103f3:	mov    ecx,DWORD PTR ds:0x100c9fb8
100103f9:	mov    DWORD PTR [ebp-0x1c],ecx
100103fc:	mov    edx,DWORD PTR [ebp-0x14]
100103ff:	push   edx
10010400:	push   0x0
10010402:	lea    eax,[ebp-0x20]
10010405:	push   eax
10010406:	push   0x2
10010408:	call   DWORD PTR ds:0x1002f078
1001040e:	mov    DWORD PTR [ebp-0x18],eax
10010411:	cmp    DWORD PTR [ebp-0x18],0x102
10010418:	je     0x10010422
1001041a:	cmp    DWORD PTR [ebp-0x18],0x0
1001041e:	je     0x10010422
10010420:	jmp    0x10010429
10010422:	call   0x1000fed0
10010427:	jmp    0x100103eb
10010429:	mov    DWORD PTR [ebp-0x24],0x0
10010430:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010437:	lea    ecx,[ebp-0xd]
1001043a:	call   0x10006ea0
1001043f:	mov    eax,DWORD PTR [ebp-0x24]
10010442:	mov    ecx,DWORD PTR [ebp-0xc]
10010445:	mov    DWORD PTR fs:0x0,ecx
1001044c:	pop    ecx
1001044d:	mov    esp,ebp
1001044f:	pop    ebp
10010450:	ret    0x4
10010453:	int3   
10010454:	int3   
10010455:	int3   
10010456:	int3   
10010457:	int3   
10010458:	int3   
10010459:	int3   
1001045a:	int3   
1001045b:	int3   
1001045c:	int3   
1001045d:	int3   
1001045e:	int3   
1001045f:	int3   
10010460:	push   ebp
10010461:	mov    ebp,esp
10010463:	push   0xffffffff
10010465:	push   0x1002ceb1
1001046a:	mov    eax,fs:0x0
10010470:	push   eax
10010471:	sub    esp,0x8
10010474:	mov    eax,ds:0x100c7654
10010479:	xor    eax,ebp
1001047b:	push   eax
1001047c:	lea    eax,[ebp-0xc]
1001047f:	mov    fs:0x0,eax
10010485:	mov    BYTE PTR [ebp-0x11],0x0
10010489:	mov    al,BYTE PTR [ebp-0x11]
1001048c:	push   eax
1001048d:	lea    ecx,[ebp-0x10]
10010490:	push   ecx
10010491:	call   0x10001bf0
10010496:	add    esp,0x8
10010499:	mov    DWORD PTR [ebp-0x4],0x0
100104a0:	push   0x1002faa0
100104a5:	push   0xc
100104a7:	push   0x1002fb04
100104ac:	call   0x100035f0
100104b1:	add    esp,0xc
100104b4:	push   eax
100104b5:	lea    ecx,[ebp-0x10]
100104b8:	call   0x10002f40
100104bd:	lea    ecx,[ebp-0x10]
100104c0:	call   0x10003200
100104c5:	push   eax
100104c6:	call   0x10010f60
100104cb:	add    esp,0x4
100104ce:	mov    DWORD PTR [ebp-0x4],0xffffffff
100104d5:	lea    ecx,[ebp-0x10]
100104d8:	call   0x10002f00
100104dd:	mov    ecx,DWORD PTR [ebp-0xc]
100104e0:	mov    DWORD PTR fs:0x0,ecx
100104e7:	pop    ecx
100104e8:	mov    esp,ebp
100104ea:	pop    ebp
100104eb:	ret    
100104ec:	int3   
100104ed:	int3   
100104ee:	int3   
100104ef:	int3   
100104f0:	push   ebp
100104f1:	mov    ebp,esp
100104f3:	sub    esp,0xc
100104f6:	mov    DWORD PTR [ebp-0x8],0x0
100104fd:	push   0x3c
100104ff:	call   0x100198b2
10010504:	add    esp,0x4
10010507:	mov    DWORD PTR [ebp-0x4],eax
1001050a:	cmp    DWORD PTR [ebp-0x4],0x0
1001050e:	jne    0x10010517
10010510:	mov    al,0x1
10010512:	jmp    0x100105bf
10010517:	push   0x0
10010519:	lea    eax,[ebp-0x8]
1001051c:	push   eax
1001051d:	mov    ecx,DWORD PTR [ebp-0x4]
10010520:	push   ecx
10010521:	call   0x100151c0
10010526:	cmp    eax,0x7a
10010529:	jne    0x10010550
1001052b:	mov    edx,DWORD PTR [ebp-0x4]
1001052e:	push   edx
1001052f:	call   0x100197d5
10010534:	add    esp,0x4
10010537:	mov    eax,DWORD PTR [ebp-0x8]
1001053a:	push   eax
1001053b:	call   0x100198b2
10010540:	add    esp,0x4
10010543:	mov    DWORD PTR [ebp-0x4],eax
10010546:	cmp    DWORD PTR [ebp-0x4],0x0
1001054a:	jne    0x10010550
1001054c:	mov    al,0x1
1001054e:	jmp    0x100105bf
10010550:	push   0x0
10010552:	lea    ecx,[ebp-0x8]
10010555:	push   ecx
10010556:	mov    edx,DWORD PTR [ebp-0x4]
10010559:	push   edx
1001055a:	call   0x100151c0
1001055f:	test   eax,eax
10010561:	je     0x10010573
10010563:	mov    eax,DWORD PTR [ebp-0x4]
10010566:	push   eax
10010567:	call   0x100197d5
1001056c:	add    esp,0x4
1001056f:	mov    al,0x1
10010571:	jmp    0x100105bf
10010573:	mov    DWORD PTR [ebp-0xc],0x0
1001057a:	jmp    0x10010585
1001057c:	mov    ecx,DWORD PTR [ebp-0xc]
1001057f:	add    ecx,0x1
10010582:	mov    DWORD PTR [ebp-0xc],ecx
10010585:	mov    edx,DWORD PTR [ebp-0x4]
10010588:	mov    eax,DWORD PTR [ebp-0xc]
1001058b:	cmp    eax,DWORD PTR [edx]
1001058d:	jae    0x100105b1
1001058f:	mov    ecx,DWORD PTR [ebp-0xc]
10010592:	imul   ecx,ecx,0x38
10010595:	mov    edx,DWORD PTR [ebp-0x4]
10010598:	cmp    DWORD PTR [edx+ecx*1+0x4],0x0
1001059d:	jne    0x100105af
1001059f:	mov    eax,DWORD PTR [ebp-0x4]
100105a2:	push   eax
100105a3:	call   0x100197d5
100105a8:	add    esp,0x4
100105ab:	mov    al,0x1
100105ad:	jmp    0x100105bf
100105af:	jmp    0x1001057c
100105b1:	mov    ecx,DWORD PTR [ebp-0x4]
100105b4:	push   ecx
100105b5:	call   0x100197d5
100105ba:	add    esp,0x4
100105bd:	xor    al,al
100105bf:	mov    esp,ebp
100105c1:	pop    ebp
100105c2:	ret    
100105c3:	int3   
100105c4:	int3   
100105c5:	int3   
100105c6:	int3   
100105c7:	int3   
100105c8:	int3   
100105c9:	int3   
100105ca:	int3   
100105cb:	int3   
100105cc:	int3   
100105cd:	int3   
100105ce:	int3   
100105cf:	int3   
100105d0:	push   ebp
100105d1:	mov    ebp,esp
100105d3:	sub    esp,0x8
100105d6:	mov    DWORD PTR [ebp-0x8],0x3e8
100105dd:	mov    DWORD PTR [ebp-0x4],0x0
100105e4:	call   0x100104f0
100105e9:	movzx  eax,al
100105ec:	test   eax,eax
100105ee:	je     0x100105f4
100105f0:	jmp    0x1001061d
100105f2:	jmp    0x10010610
100105f4:	cmp    DWORD PTR [ebp+0x8],0xffffffff
100105f8:	je     0x10010610
100105fa:	mov    ecx,DWORD PTR [ebp-0x4]
100105fd:	add    ecx,0x3e8
10010603:	mov    DWORD PTR [ebp-0x4],ecx
10010606:	mov    edx,DWORD PTR [ebp-0x4]
10010609:	cmp    edx,DWORD PTR [ebp+0x8]
1001060c:	jbe    0x10010610
1001060e:	jmp    0x1001061d
10010610:	push   0x3e8
10010615:	call   DWORD PTR ds:0x1002f07c
1001061b:	jmp    0x100105e4
1001061d:	mov    esp,ebp
1001061f:	pop    ebp
10010620:	ret    
10010621:	int3   
10010622:	int3   
10010623:	int3   
10010624:	int3   
10010625:	int3   
10010626:	int3   
10010627:	int3   
10010628:	int3   
10010629:	int3   
1001062a:	int3   
1001062b:	int3   
1001062c:	int3   
1001062d:	int3   
1001062e:	int3   
1001062f:	int3   
10010630:	push   ebp
10010631:	mov    ebp,esp
10010633:	push   0xffffffff
10010635:	push   0x1002cedc
1001063a:	mov    eax,fs:0x0
10010640:	push   eax
10010641:	sub    esp,0x1c
10010644:	mov    eax,ds:0x100c7654
10010649:	xor    eax,ebp
1001064b:	push   eax
1001064c:	lea    eax,[ebp-0xc]
1001064f:	mov    fs:0x0,eax
10010655:	lea    ecx,[ebp-0xd]
10010658:	call   0x10006e80
1001065d:	mov    DWORD PTR [ebp-0x4],0x0
10010664:	mov    DWORD PTR [ebp-0x14],0x7530
1001066b:	push   0x927c0
10010670:	call   0x100105d0
10010675:	add    esp,0x4
10010678:	call   0x10010460
1001067d:	push   0x1
1001067f:	push   0x1
10010681:	lea    ecx,[ebp-0x24]
10010684:	call   0x10006fa0
10010689:	mov    BYTE PTR [ebp-0x4],0x1
1001068d:	mov    eax,DWORD PTR [ebp-0x14]
10010690:	push   eax
10010691:	mov    ecx,DWORD PTR ds:0x100c9fb8
10010697:	push   ecx
10010698:	call   DWORD PTR ds:0x1002f058
1001069e:	mov    DWORD PTR [ebp-0x18],eax
100106a1:	cmp    DWORD PTR [ebp-0x18],0x102
100106a8:	je     0x100106b8
100106aa:	mov    BYTE PTR [ebp-0x4],0x0
100106ae:	lea    ecx,[ebp-0x24]
100106b1:	call   0x10006fc0
100106b6:	jmp    0x100106c6
100106b8:	mov    BYTE PTR [ebp-0x4],0x0
100106bc:	lea    ecx,[ebp-0x24]
100106bf:	call   0x10006fc0
100106c4:	jmp    0x10010678
100106c6:	mov    DWORD PTR [ebp-0x28],0x0
100106cd:	mov    DWORD PTR [ebp-0x4],0xffffffff
100106d4:	lea    ecx,[ebp-0xd]
100106d7:	call   0x10006ea0
100106dc:	mov    eax,DWORD PTR [ebp-0x28]
100106df:	mov    ecx,DWORD PTR [ebp-0xc]
100106e2:	mov    DWORD PTR fs:0x0,ecx
100106e9:	pop    ecx
100106ea:	mov    esp,ebp
100106ec:	pop    ebp
100106ed:	ret    0x4
100106f0:	push   ebp
100106f1:	mov    ebp,esp
100106f3:	push   0xffffffff
100106f5:	push   0x1002ceff
100106fa:	mov    eax,fs:0x0
10010700:	push   eax
10010701:	push   ecx
10010702:	mov    eax,ds:0x100c7654
10010707:	xor    eax,ebp
10010709:	push   eax
1001070a:	lea    eax,[ebp-0xc]
1001070d:	mov    fs:0x0,eax
10010713:	push   0x0
10010715:	push   0x0
10010717:	push   0x0
10010719:	push   0x10010630
1001071e:	call   0x1000bc10
10010723:	add    esp,0x4
10010726:	push   eax
10010727:	push   0x0
10010729:	push   0x0
1001072b:	call   DWORD PTR ds:0x1002f080
10010731:	push   eax
10010732:	lea    ecx,[ebp-0x10]
10010735:	call   0x10003300
1001073a:	mov    DWORD PTR [ebp-0x4],0x0
10010741:	mov    ecx,0x100c8d48
10010746:	call   0x1000b170
1001074b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010752:	lea    ecx,[ebp-0x10]
10010755:	call   0x10003310
1001075a:	mov    ecx,DWORD PTR [ebp-0xc]
1001075d:	mov    DWORD PTR fs:0x0,ecx
10010764:	pop    ecx
10010765:	mov    esp,ebp
10010767:	pop    ebp
10010768:	ret    
10010769:	int3   
1001076a:	int3   
1001076b:	int3   
1001076c:	int3   
1001076d:	int3   
1001076e:	int3   
1001076f:	int3   
10010770:	push   ebp
10010771:	mov    ebp,esp
10010773:	push   0xffffffff
10010775:	push   0x1002cf22
1001077a:	mov    eax,fs:0x0
10010780:	push   eax
10010781:	push   ecx
10010782:	sub    esp,0x24
10010785:	mov    eax,ds:0x100c7654
1001078a:	xor    eax,ebp
1001078c:	mov    DWORD PTR [ebp-0x14],eax
1001078f:	push   ebx
10010790:	push   esi
10010791:	push   edi
10010792:	push   eax
10010793:	lea    eax,[ebp-0xc]
10010796:	mov    fs:0x0,eax
1001079c:	mov    DWORD PTR [ebp-0x10],esp
1001079f:	cmp    DWORD PTR [ebp+0xc],0x1
100107a3:	jne    0x100107b7
100107a5:	mov    eax,ds:0x100c8d40
100107aa:	add    eax,0x1
100107ad:	mov    ds:0x100c8d40,eax
100107b2:	jmp    0x10010845
100107b7:	cmp    DWORD PTR [ebp+0xc],0x0
100107bb:	jne    0x10010845
100107c1:	mov    ecx,DWORD PTR ds:0x100c8d40
100107c7:	sub    ecx,0x1
100107ca:	mov    DWORD PTR ds:0x100c8d40,ecx
100107d0:	jne    0x10010845
100107d2:	call   0x10006eb0
100107d7:	mov    DWORD PTR [ebp-0x4],0x0
100107de:	push   0x1
100107e0:	push   0x1
100107e2:	lea    ecx,[ebp-0x30]
100107e5:	call   0x10006fa0
100107ea:	mov    DWORD PTR [ebp-0x34],eax
100107ed:	mov    BYTE PTR [ebp-0x4],0x1
100107f1:	mov    DWORD PTR [ebp-0x24],0x0
100107f8:	xor    edx,edx
100107fa:	mov    DWORD PTR [ebp-0x20],edx
100107fd:	mov    DWORD PTR [ebp-0x1c],edx
10010800:	mov    DWORD PTR [ebp-0x18],edx
10010803:	lea    eax,[ebp-0x24]
10010806:	push   eax
10010807:	lea    ecx,[ebp-0x30]
1001080a:	call   0x10006ff0
1001080f:	mov    BYTE PTR [ebp-0x4],0x0
10010813:	lea    ecx,[ebp-0x30]
10010816:	call   0x10006fc0
1001081b:	jmp    0x1001082a
1001081d:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010824:	mov    eax,0x10010831
10010829:	ret    
1001082a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010831:	push   0xffffffff
10010833:	call   0x10006ec0
10010838:	add    esp,0x4
1001083b:	push   0x1
1001083d:	call   0x10010ce0
10010842:	add    esp,0x4
10010845:	mov    eax,0x1
1001084a:	mov    ecx,DWORD PTR [ebp-0xc]
1001084d:	mov    DWORD PTR fs:0x0,ecx
10010854:	pop    ecx
10010855:	pop    edi
10010856:	pop    esi
10010857:	pop    ebx
10010858:	mov    ecx,DWORD PTR [ebp-0x14]
1001085b:	xor    ecx,ebp
1001085d:	call   0x10018773
10010862:	mov    esp,ebp
10010864:	pop    ebp
10010865:	ret    0xc
10010868:	int3   
10010869:	int3   
1001086a:	int3   
1001086b:	int3   
1001086c:	int3   
1001086d:	int3   
1001086e:	int3   
1001086f:	int3   
10010870:	push   ebp
10010871:	mov    ebp,esp
10010873:	sub    esp,0x18
10010876:	movzx  eax,BYTE PTR ds:0x100c8d44
1001087d:	test   eax,eax
1001087f:	jne    0x10010910
10010885:	mov    BYTE PTR ds:0x100c8d44,0x1
1001088c:	mov    DWORD PTR [ebp-0x4],0x26e3
10010893:	push   0x250
10010898:	push   0x42
1001089a:	call   DWORD PTR ds:0x1002f08c
100108a0:	mov    DWORD PTR [ebp-0x18],eax
100108a3:	mov    ecx,DWORD PTR [ebp-0x18]
100108a6:	push   ecx
100108a7:	call   DWORD PTR ds:0x1002f088
100108ad:	mov    DWORD PTR [ebp-0x10],eax
100108b0:	mov    DWORD PTR [ebp-0x8],0x1002fb20
100108b7:	mov    edx,DWORD PTR [ebp-0x10]
100108ba:	push   edx
100108bb:	mov    eax,DWORD PTR [ebp-0x8]
100108be:	push   eax
100108bf:	call   DWORD PTR ds:0x1002f084
100108c5:	mov    DWORD PTR [ebp-0xc],eax
100108c8:	mov    ecx,DWORD PTR [ebp-0x10]
100108cb:	add    ecx,0x2c
100108ce:	mov    DWORD PTR [ebp-0x14],ecx
100108d1:	mov    edx,DWORD PTR [ebp-0x14]
100108d4:	movzx  eax,WORD PTR [edx]
100108d7:	test   eax,eax
100108d9:	je     0x100108f2
100108db:	mov    ecx,DWORD PTR [ebp-0x14]
100108de:	movzx  edx,WORD PTR [ecx]
100108e1:	add    edx,DWORD PTR [ebp-0x4]
100108e4:	mov    DWORD PTR [ebp-0x4],edx
100108e7:	mov    eax,DWORD PTR [ebp-0x14]
100108ea:	add    eax,0x2
100108ed:	mov    DWORD PTR [ebp-0x14],eax
100108f0:	jmp    0x100108d1
100108f2:	mov    ecx,DWORD PTR [ebp-0x4]
100108f5:	push   ecx
100108f6:	call   0x10002150
100108fb:	push   eax
100108fc:	call   0x1000cca0
10010901:	add    esp,0x8
10010904:	movzx  edx,al
10010907:	test   edx,edx
10010909:	jne    0x10010910
1001090b:	nop
1001090c:	xor    eax,eax
1001090e:	jmp    0x10010921
10010910:	mov    eax,DWORD PTR [ebp+0x10]
10010913:	push   eax
10010914:	mov    ecx,DWORD PTR [ebp+0xc]
10010917:	push   ecx
10010918:	mov    edx,DWORD PTR [ebp+0x8]
1001091b:	push   edx
1001091c:	call   0x10019c44
10010921:	mov    esp,ebp
10010923:	pop    ebp
10010924:	ret    0xc
10010927:	int3   
10010928:	int3   
10010929:	int3   
1001092a:	int3   
1001092b:	int3   
1001092c:	int3   
1001092d:	int3   
1001092e:	int3   
1001092f:	int3   
10010930:	push   ebp
10010931:	mov    ebp,esp
10010933:	sub    esp,0x10
10010936:	mov    DWORD PTR [ebp-0xc],ecx
10010939:	mov    ecx,DWORD PTR [ebp-0xc]
1001093c:	call   0x10003250
10010941:	mov    DWORD PTR [ebp-0x8],eax
10010944:	cmp    DWORD PTR [ebp+0xc],0x0
10010948:	jl     0x10010952
1001094a:	mov    eax,DWORD PTR [ebp+0xc]
1001094d:	cmp    eax,DWORD PTR [ebp-0x8]
10010950:	jl     0x10010957
10010952:	or     eax,0xffffffff
10010955:	jmp    0x1001099a
10010957:	mov    cx,WORD PTR [ebp+0x8]
1001095b:	push   ecx
1001095c:	mov    ecx,DWORD PTR [ebp-0xc]
1001095f:	call   0x10003340
10010964:	mov    edx,DWORD PTR [ebp+0xc]
10010967:	lea    eax,[eax+edx*2]
1001096a:	push   eax
1001096b:	call   0x100109a0
10010970:	add    esp,0x8
10010973:	mov    DWORD PTR [ebp-0x4],eax
10010976:	cmp    DWORD PTR [ebp-0x4],0x0
1001097a:	jne    0x10010985
1001097c:	mov    DWORD PTR [ebp-0x10],0xffffffff
10010983:	jmp    0x10010997
10010985:	mov    ecx,DWORD PTR [ebp-0xc]
10010988:	call   0x10003340
1001098d:	mov    ecx,DWORD PTR [ebp-0x4]
10010990:	sub    ecx,eax
10010992:	sar    ecx,1
10010994:	mov    DWORD PTR [ebp-0x10],ecx
10010997:	mov    eax,DWORD PTR [ebp-0x10]
1001099a:	mov    esp,ebp
1001099c:	pop    ebp
1001099d:	ret    0x8
100109a0:	push   ebp
100109a1:	mov    ebp,esp
100109a3:	mov    ax,WORD PTR [ebp+0xc]
100109a7:	push   eax
100109a8:	mov    ecx,DWORD PTR [ebp+0x8]
100109ab:	push   ecx
100109ac:	call   0x10019c65
100109b1:	add    esp,0x8
100109b4:	pop    ebp
100109b5:	ret    
100109b6:	int3   
100109b7:	int3   
100109b8:	int3   
100109b9:	int3   
100109ba:	int3   
100109bb:	int3   
100109bc:	int3   
100109bd:	int3   
100109be:	int3   
100109bf:	int3   
100109c0:	push   ebp
100109c1:	mov    ebp,esp
100109c3:	sub    esp,0x10
100109c6:	mov    DWORD PTR [ebp-0x10],ecx
100109c9:	mov    ecx,DWORD PTR [ebp-0x10]
100109cc:	call   0x10003340
100109d1:	mov    DWORD PTR [ebp-0x4],eax
100109d4:	mov    DWORD PTR [ebp-0x8],0x0
100109db:	mov    eax,DWORD PTR [ebp-0x4]
100109de:	movzx  ecx,WORD PTR [eax]
100109e1:	test   ecx,ecx
100109e3:	je     0x10010a1e
100109e5:	mov    edx,DWORD PTR [ebp-0x4]
100109e8:	mov    ax,WORD PTR [edx]
100109eb:	push   eax
100109ec:	call   0x10010a60
100109f1:	add    esp,0x4
100109f4:	test   eax,eax
100109f6:	je     0x10010a06
100109f8:	cmp    DWORD PTR [ebp-0x8],0x0
100109fc:	jne    0x10010a04
100109fe:	mov    ecx,DWORD PTR [ebp-0x4]
10010a01:	mov    DWORD PTR [ebp-0x8],ecx
10010a04:	jmp    0x10010a0d
10010a06:	mov    DWORD PTR [ebp-0x8],0x0
10010a0d:	mov    edx,DWORD PTR [ebp-0x4]
10010a10:	push   edx
10010a11:	call   0x10010a50
10010a16:	add    esp,0x4
10010a19:	mov    DWORD PTR [ebp-0x4],eax
10010a1c:	jmp    0x100109db
10010a1e:	cmp    DWORD PTR [ebp-0x8],0x0
10010a22:	je     0x10010a42
10010a24:	mov    ecx,DWORD PTR [ebp-0x10]
10010a27:	call   0x10003340
10010a2c:	mov    ecx,DWORD PTR [ebp-0x8]
10010a2f:	sub    ecx,eax
10010a31:	sar    ecx,1
10010a33:	mov    DWORD PTR [ebp-0xc],ecx
10010a36:	mov    edx,DWORD PTR [ebp-0xc]
10010a39:	push   edx
10010a3a:	mov    ecx,DWORD PTR [ebp-0x10]
10010a3d:	call   0x100032b0
10010a42:	mov    eax,DWORD PTR [ebp-0x10]
10010a45:	mov    esp,ebp
10010a47:	pop    ebp
10010a48:	ret    
10010a49:	int3   
10010a4a:	int3   
10010a4b:	int3   
10010a4c:	int3   
10010a4d:	int3   
10010a4e:	int3   
10010a4f:	int3   
10010a50:	push   ebp
10010a51:	mov    ebp,esp
10010a53:	mov    eax,DWORD PTR [ebp+0x8]
10010a56:	add    eax,0x2
10010a59:	pop    ebp
10010a5a:	ret    
10010a5b:	int3   
10010a5c:	int3   
10010a5d:	int3   
10010a5e:	int3   
10010a5f:	int3   
10010a60:	push   ebp
10010a61:	mov    ebp,esp
10010a63:	mov    ax,WORD PTR [ebp+0x8]
10010a67:	push   eax
10010a68:	call   0x10019ccb
10010a6d:	add    esp,0x4
10010a70:	pop    ebp
10010a71:	ret    
10010a72:	int3   
10010a73:	int3   
10010a74:	int3   
10010a75:	int3   
10010a76:	int3   
10010a77:	int3   
10010a78:	int3   
10010a79:	int3   
10010a7a:	int3   
10010a7b:	int3   
10010a7c:	int3   
10010a7d:	int3   
10010a7e:	int3   
10010a7f:	int3   
10010a80:	push   ebp
10010a81:	mov    ebp,esp
10010a83:	sub    esp,0x14
10010a86:	mov    DWORD PTR [ebp-0x14],ecx
10010a89:	mov    ecx,DWORD PTR [ebp-0x14]
10010a8c:	call   0x10003340
10010a91:	mov    DWORD PTR [ebp-0x4],eax
10010a94:	mov    eax,DWORD PTR [ebp-0x4]
10010a97:	mov    cx,WORD PTR [eax]
10010a9a:	push   ecx
10010a9b:	call   0x10010a60
10010aa0:	add    esp,0x4
10010aa3:	test   eax,eax
10010aa5:	je     0x10010ab8
10010aa7:	mov    edx,DWORD PTR [ebp-0x4]
10010aaa:	push   edx
10010aab:	call   0x10010a50
10010ab0:	add    esp,0x4
10010ab3:	mov    DWORD PTR [ebp-0x4],eax
10010ab6:	jmp    0x10010a94
10010ab8:	mov    ecx,DWORD PTR [ebp-0x14]
10010abb:	call   0x10003340
10010ac0:	cmp    DWORD PTR [ebp-0x4],eax
10010ac3:	je     0x10010b31
10010ac5:	mov    ecx,DWORD PTR [ebp-0x14]
10010ac8:	call   0x10003340
10010acd:	mov    ecx,DWORD PTR [ebp-0x4]
10010ad0:	sub    ecx,eax
10010ad2:	sar    ecx,1
10010ad4:	mov    DWORD PTR [ebp-0x10],ecx
10010ad7:	mov    ecx,DWORD PTR [ebp-0x14]
10010ada:	call   0x10003250
10010adf:	push   eax
10010ae0:	mov    ecx,DWORD PTR [ebp-0x14]
10010ae3:	call   0x10003220
10010ae8:	mov    DWORD PTR [ebp-0xc],eax
10010aeb:	mov    edx,DWORD PTR [ebp-0x10]
10010aee:	mov    eax,DWORD PTR [ebp-0xc]
10010af1:	lea    ecx,[eax+edx*2]
10010af4:	mov    DWORD PTR [ebp-0x4],ecx
10010af7:	mov    ecx,DWORD PTR [ebp-0x14]
10010afa:	call   0x10003250
10010aff:	sub    eax,DWORD PTR [ebp-0x10]
10010b02:	mov    DWORD PTR [ebp-0x8],eax
10010b05:	mov    edx,DWORD PTR [ebp-0x8]
10010b08:	lea    eax,[edx+edx*1+0x2]
10010b0c:	push   eax
10010b0d:	mov    ecx,DWORD PTR [ebp-0x4]
10010b10:	push   ecx
10010b11:	mov    edx,DWORD PTR [ebp-0x8]
10010b14:	lea    eax,[edx+edx*1+0x2]
10010b18:	push   eax
10010b19:	mov    ecx,DWORD PTR [ebp-0xc]
10010b1c:	push   ecx
10010b1d:	call   0x10001150
10010b22:	add    esp,0x10
10010b25:	mov    edx,DWORD PTR [ebp-0x8]
10010b28:	push   edx
10010b29:	mov    ecx,DWORD PTR [ebp-0x14]
10010b2c:	call   0x10003dc0
10010b31:	mov    eax,DWORD PTR [ebp-0x14]
10010b34:	mov    esp,ebp
10010b36:	pop    ebp
10010b37:	ret    
10010b38:	int3   
10010b39:	int3   
10010b3a:	int3   
10010b3b:	int3   
10010b3c:	int3   
10010b3d:	int3   
10010b3e:	int3   
10010b3f:	int3   
10010b40:	push   ebp
10010b41:	mov    ebp,esp
10010b43:	push   ecx
10010b44:	mov    DWORD PTR [ebp-0x4],ecx
10010b47:	mov    ecx,DWORD PTR [ebp-0x4]
10010b4a:	call   0x10010c00
10010b4f:	mov    eax,DWORD PTR [ebp-0x4]
10010b52:	mov    DWORD PTR [eax],0x1002fb28
10010b58:	mov    eax,DWORD PTR [ebp-0x4]
10010b5b:	mov    esp,ebp
10010b5d:	pop    ebp
10010b5e:	ret    
10010b5f:	int3   
10010b60:	push   ebp
10010b61:	mov    ebp,esp
10010b63:	push   ecx
10010b64:	mov    DWORD PTR [ebp-0x4],ecx
10010b67:	mov    ecx,DWORD PTR [ebp-0x4]
10010b6a:	call   0x10010b90
10010b6f:	mov    eax,DWORD PTR [ebp+0x8]
10010b72:	and    eax,0x1
10010b75:	je     0x10010b83
10010b77:	mov    ecx,DWORD PTR [ebp-0x4]
10010b7a:	push   ecx
10010b7b:	call   0x1001876e
10010b80:	add    esp,0x4
10010b83:	mov    eax,DWORD PTR [ebp-0x4]
10010b86:	mov    esp,ebp
10010b88:	pop    ebp
10010b89:	ret    0x4
10010b8c:	int3   
10010b8d:	int3   
10010b8e:	int3   
10010b8f:	int3   
10010b90:	push   ebp
10010b91:	mov    ebp,esp
10010b93:	push   ecx
10010b94:	mov    DWORD PTR [ebp-0x4],ecx
10010b97:	mov    ecx,DWORD PTR [ebp-0x4]
10010b9a:	call   0x10010bb0
10010b9f:	mov    esp,ebp
10010ba1:	pop    ebp
10010ba2:	ret    
10010ba3:	int3   
10010ba4:	int3   
10010ba5:	int3   
10010ba6:	int3   
10010ba7:	int3   
10010ba8:	int3   
10010ba9:	int3   
10010baa:	int3   
10010bab:	int3   
10010bac:	int3   
10010bad:	int3   
10010bae:	int3   
10010baf:	int3   
10010bb0:	push   ebp
10010bb1:	mov    ebp,esp
10010bb3:	push   ecx
10010bb4:	mov    DWORD PTR [ebp-0x4],ecx
10010bb7:	mov    eax,DWORD PTR [ebp-0x4]
10010bba:	mov    DWORD PTR [eax],0x1002fb34
10010bc0:	mov    ecx,DWORD PTR [ebp-0x4]
10010bc3:	add    ecx,0x4
10010bc6:	call   0x10003310
10010bcb:	mov    esp,ebp
10010bcd:	pop    ebp
10010bce:	ret    
10010bcf:	int3   
10010bd0:	push   ebp
10010bd1:	mov    ebp,esp
10010bd3:	push   ecx
10010bd4:	mov    DWORD PTR [ebp-0x4],ecx
10010bd7:	mov    ecx,DWORD PTR [ebp-0x4]
10010bda:	call   0x10010bb0
10010bdf:	mov    eax,DWORD PTR [ebp+0x8]
10010be2:	and    eax,0x1
10010be5:	je     0x10010bf3
10010be7:	mov    ecx,DWORD PTR [ebp-0x4]
10010bea:	push   ecx
10010beb:	call   0x1001876e
10010bf0:	add    esp,0x4
10010bf3:	mov    eax,DWORD PTR [ebp-0x4]
10010bf6:	mov    esp,ebp
10010bf8:	pop    ebp
10010bf9:	ret    0x4
10010bfc:	int3   
10010bfd:	int3   
10010bfe:	int3   
10010bff:	int3   
10010c00:	push   ebp
10010c01:	mov    ebp,esp
10010c03:	push   ecx
10010c04:	mov    DWORD PTR [ebp-0x4],ecx
10010c07:	mov    eax,DWORD PTR [ebp-0x4]
10010c0a:	mov    DWORD PTR [eax],0x1002fb34
10010c10:	push   0x0
10010c12:	mov    ecx,DWORD PTR [ebp-0x4]
10010c15:	add    ecx,0x4
10010c18:	call   0x10003300
10010c1d:	mov    eax,DWORD PTR [ebp-0x4]
10010c20:	mov    esp,ebp
10010c22:	pop    ebp
10010c23:	ret    
10010c24:	int3   
10010c25:	int3   
10010c26:	int3   
10010c27:	int3   
10010c28:	int3   
10010c29:	int3   
10010c2a:	int3   
10010c2b:	int3   
10010c2c:	int3   
10010c2d:	int3   
10010c2e:	int3   
10010c2f:	int3   
10010c30:	push   ebp
10010c31:	mov    ebp,esp
10010c33:	push   ecx
10010c34:	mov    BYTE PTR [ebp-0x1],0x1
10010c38:	mov    ecx,0x100c8d5c
10010c3d:	call   0x10002d70
10010c42:	test   eax,eax
10010c44:	jne    0x10010c4a
10010c46:	mov    BYTE PTR [ebp-0x1],0x0
10010c4a:	mov    al,BYTE PTR [ebp-0x1]
10010c4d:	mov    esp,ebp
10010c4f:	pop    ebp
10010c50:	ret    
10010c51:	int3   
10010c52:	int3   
10010c53:	int3   
10010c54:	int3   
10010c55:	int3   
10010c56:	int3   
10010c57:	int3   
10010c58:	int3   
10010c59:	int3   
10010c5a:	int3   
10010c5b:	int3   
10010c5c:	int3   
10010c5d:	int3   
10010c5e:	int3   
10010c5f:	int3   
10010c60:	push   ebp
10010c61:	mov    ebp,esp
10010c63:	push   0x0
10010c65:	push   0x2
10010c67:	mov    eax,ds:0x100c8d84
10010c6c:	push   eax
10010c6d:	mov    ecx,DWORD PTR ds:0x100c8d80
10010c73:	push   ecx
10010c74:	call   0x10019f10
10010c79:	mov    ds:0x100c8d80,eax
10010c7e:	mov    DWORD PTR ds:0x100c8d84,edx
10010c84:	mov    edx,DWORD PTR ds:0x100c8d84
10010c8a:	cmp    edx,DWORD PTR ds:0x100be06c
10010c90:	jl     0x10010cb9
10010c92:	jg     0x10010ca1
10010c94:	mov    eax,ds:0x100c8d80
10010c99:	cmp    eax,DWORD PTR ds:0x100be068
10010c9f:	jbe    0x10010cb9
10010ca1:	mov    ecx,DWORD PTR ds:0x100be068
10010ca7:	mov    DWORD PTR ds:0x100c8d80,ecx
10010cad:	mov    edx,DWORD PTR ds:0x100be06c
10010cb3:	mov    DWORD PTR ds:0x100c8d84,edx
10010cb9:	pop    ebp
10010cba:	ret    
10010cbb:	int3   
10010cbc:	int3   
10010cbd:	int3   
10010cbe:	int3   
10010cbf:	int3   
10010cc0:	push   ebp
10010cc1:	mov    ebp,esp
10010cc3:	mov    eax,ds:0x100be068
10010cc8:	mov    ds:0x100c8d80,eax
10010ccd:	mov    ecx,DWORD PTR ds:0x100be06c
10010cd3:	mov    DWORD PTR ds:0x100c8d84,ecx
10010cd9:	pop    ebp
10010cda:	ret    
10010cdb:	int3   
10010cdc:	int3   
10010cdd:	int3   
10010cde:	int3   
10010cdf:	int3   
10010ce0:	push   ebp
10010ce1:	mov    ebp,esp
10010ce3:	sub    esp,0xc
10010ce6:	mov    DWORD PTR ds:0x100c8fc8,0x0
10010cf0:	lea    eax,[ebp-0x8]
10010cf3:	push   eax
10010cf4:	call   0x10011dc0
10010cf9:	add    esp,0x4
10010cfc:	mov    DWORD PTR [ebp-0xc],eax
10010cff:	mov    ecx,DWORD PTR [ebp-0xc]
10010d02:	call   0x10003340
10010d07:	push   eax
10010d08:	call   DWORD PTR ds:0x1002f0b0
10010d0e:	mov    DWORD PTR [ebp-0x4],eax
10010d11:	lea    ecx,[ebp-0x8]
10010d14:	call   0x10002f00
10010d19:	cmp    DWORD PTR [ebp-0x4],0x0
10010d1d:	je     0x10010d35
10010d1f:	mov    ecx,DWORD PTR [ebp-0x4]
10010d22:	push   ecx
10010d23:	call   DWORD PTR ds:0x1002f03c
10010d29:	movzx  edx,BYTE PTR [ebp+0x8]
10010d2d:	test   edx,edx
10010d2f:	je     0x10010d33
10010d31:	jmp    0x10010d35
10010d33:	jmp    0x10010cf0
10010d35:	mov    esp,ebp
10010d37:	pop    ebp
10010d38:	ret    
10010d39:	int3   
10010d3a:	int3   
10010d3b:	int3   
10010d3c:	int3   
10010d3d:	int3   
10010d3e:	int3   
10010d3f:	int3   
10010d40:	push   ebp
10010d41:	mov    ebp,esp
10010d43:	push   0xffffffff
10010d45:	push   0x1002cf60
10010d4a:	mov    eax,fs:0x0
10010d50:	push   eax
10010d51:	push   ecx
10010d52:	sub    esp,0x44
10010d55:	push   ebx
10010d56:	push   esi
10010d57:	push   edi
10010d58:	mov    eax,ds:0x100c7654
10010d5d:	xor    eax,ebp
10010d5f:	push   eax
10010d60:	lea    eax,[ebp-0xc]
10010d63:	mov    fs:0x0,eax
10010d69:	mov    DWORD PTR [ebp-0x10],esp
10010d6c:	mov    DWORD PTR [ebp-0x4],0x1
10010d73:	mov    BYTE PTR [ebp-0x4],0x2
10010d77:	call   0x10001000
10010d7c:	mov    DWORD PTR [ebp-0x28],eax
10010d7f:	mov    ecx,0x100c8d5c
10010d84:	call   0x10002d70
10010d89:	mov    DWORD PTR [ebp-0x34],eax
10010d8c:	cmp    DWORD PTR [ebp-0x34],0x0
10010d90:	jne    0x10010da0
10010d92:	mov    eax,DWORD PTR [ebp+0x8]
10010d95:	push   eax
10010d96:	mov    ecx,0x100c8d5c
10010d9b:	call   0x10002c30
10010da0:	mov    ecx,0x100c8d8c
10010da5:	call   0x10002d70
10010daa:	mov    DWORD PTR [ebp-0x38],eax
10010dad:	cmp    DWORD PTR [ebp-0x38],0x0
10010db1:	jne    0x10010dc1
10010db3:	mov    ecx,DWORD PTR [ebp+0xc]
10010db6:	push   ecx
10010db7:	mov    ecx,0x100c8d8c
10010dbc:	call   0x10002c30
10010dc1:	mov    ecx,DWORD PTR [ebp+0x8]
10010dc4:	call   0x10002d70
10010dc9:	mov    DWORD PTR [ebp-0x3c],eax
10010dcc:	cmp    DWORD PTR [ebp-0x3c],0x0
10010dd0:	je     0x10010df9
10010dd2:	mov    ecx,DWORD PTR [ebp+0x8]
10010dd5:	call   0x10007b70
10010dda:	mov    DWORD PTR [ebp-0x40],eax
10010ddd:	lea    ecx,[ebp+0x14]
10010de0:	call   0x10003340
10010de5:	push   eax
10010de6:	mov    edx,DWORD PTR [ebp-0x40]
10010de9:	push   edx
10010dea:	call   DWORD PTR ds:0x1002f0b8
10010df0:	push   eax
10010df1:	call   0x10009a10
10010df6:	add    esp,0xc
10010df9:	lea    ecx,[ebp+0x14]
10010dfc:	call   0x10003340
10010e01:	push   eax
10010e02:	call   DWORD PTR ds:0x1002f0b0
10010e08:	mov    DWORD PTR [ebp-0x20],eax
10010e0b:	cmp    DWORD PTR [ebp-0x20],0x0
10010e0f:	jne    0x10010e3a
10010e11:	mov    BYTE PTR [ebp-0x2d],0x0
10010e15:	mov    BYTE PTR [ebp-0x4],0x0
10010e19:	lea    ecx,[ebp+0x14]
10010e1c:	call   0x10002f00
10010e21:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010e28:	lea    ecx,[ebp+0x18]
10010e2b:	call   0x10002f00
10010e30:	mov    al,BYTE PTR [ebp-0x2d]
10010e33:	jmp    0x10010f40
10010e38:	jmp    0x10010e56
10010e3a:	mov    ecx,DWORD PTR [ebp+0x8]
10010e3d:	call   0x10002d70
10010e42:	mov    DWORD PTR [ebp-0x44],eax
10010e45:	cmp    DWORD PTR [ebp-0x44],0x0
10010e49:	jne    0x10010e56
10010e4b:	mov    ecx,DWORD PTR [ebp+0xc]
10010e4e:	call   0x10002d70
10010e53:	mov    DWORD PTR [ebp-0x48],eax
10010e56:	push   0x100b202c
10010e5b:	mov    eax,DWORD PTR [ebp-0x20]
10010e5e:	push   eax
10010e5f:	call   DWORD PTR ds:0x1002f050
10010e65:	mov    DWORD PTR [ebp-0x14],eax
10010e68:	cmp    DWORD PTR [ebp-0x14],0x0
10010e6c:	jne    0x10010e95
10010e6e:	mov    BYTE PTR [ebp-0x2e],0x0
10010e72:	mov    BYTE PTR [ebp-0x4],0x0
10010e76:	lea    ecx,[ebp+0x14]
10010e79:	call   0x10002f00
10010e7e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010e85:	lea    ecx,[ebp+0x18]
10010e88:	call   0x10002f00
10010e8d:	mov    al,BYTE PTR [ebp-0x2e]
10010e90:	jmp    0x10010f40
10010e95:	mov    ecx,DWORD PTR [ebp+0x10]
10010e98:	call   0x10002d70
10010e9d:	mov    DWORD PTR [ebp-0x4c],eax
10010ea0:	mov    ecx,DWORD PTR [ebp+0x10]
10010ea3:	call   0x10007b70
10010ea8:	mov    DWORD PTR [ebp-0x50],eax
10010eab:	mov    ecx,DWORD PTR [ebp-0x4c]
10010eae:	push   ecx
10010eaf:	mov    edx,DWORD PTR [ebp-0x50]
10010eb2:	push   edx
10010eb3:	push   0x100c8fc8
10010eb8:	call   DWORD PTR [ebp-0x14]
10010ebb:	add    esp,0xc
10010ebe:	mov    BYTE PTR [ebp-0x51],al
10010ec1:	mov    al,BYTE PTR [ebp-0x51]
10010ec4:	mov    BYTE PTR [ebp-0x15],al
10010ec7:	movzx  ecx,BYTE PTR [ebp-0x15]
10010ecb:	test   ecx,ecx
10010ecd:	je     0x10010edc
10010ecf:	mov    edx,DWORD PTR ds:0x100c8da8
10010ed5:	push   edx
10010ed6:	call   DWORD PTR ds:0x1002f0b4
10010edc:	mov    al,BYTE PTR [ebp-0x15]
10010edf:	mov    BYTE PTR [ebp-0x2f],al
10010ee2:	mov    BYTE PTR [ebp-0x4],0x0
10010ee6:	lea    ecx,[ebp+0x14]
10010ee9:	call   0x10002f00
10010eee:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010ef5:	lea    ecx,[ebp+0x18]
10010ef8:	call   0x10002f00
10010efd:	mov    al,BYTE PTR [ebp-0x2f]
10010f00:	jmp    0x10010f40
10010f02:	mov    BYTE PTR [ebp-0x30],0x0
10010f06:	mov    DWORD PTR [ebp-0x4],0x1
10010f0d:	mov    eax,0x10010f22
10010f12:	ret    
10010f13:	mov    eax,0x10010f19
10010f18:	ret    
10010f19:	mov    DWORD PTR [ebp-0x4],0x1
10010f20:	jmp    0x10010f40
10010f22:	mov    BYTE PTR [ebp-0x4],0x0
10010f26:	lea    ecx,[ebp+0x14]
10010f29:	call   0x10002f00
10010f2e:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010f35:	lea    ecx,[ebp+0x18]
10010f38:	call   0x10002f00
10010f3d:	mov    al,BYTE PTR [ebp-0x30]
10010f40:	mov    ecx,DWORD PTR [ebp-0xc]
10010f43:	mov    DWORD PTR fs:0x0,ecx
10010f4a:	pop    ecx
10010f4b:	pop    edi
10010f4c:	pop    esi
10010f4d:	pop    ebx
10010f4e:	mov    esp,ebp
10010f50:	pop    ebp
10010f51:	ret    
10010f52:	int3   
10010f53:	int3   
10010f54:	int3   
10010f55:	int3   
10010f56:	int3   
10010f57:	int3   
10010f58:	int3   
10010f59:	int3   
10010f5a:	int3   
10010f5b:	int3   
10010f5c:	int3   
10010f5d:	int3   
10010f5e:	int3   
10010f5f:	int3   
10010f60:	push   ebp
10010f61:	mov    ebp,esp
10010f63:	push   0xffffffff
10010f65:	push   0x1002cf9b
10010f6a:	mov    eax,fs:0x0
10010f70:	push   eax
10010f71:	sub    esp,0x78
10010f74:	mov    eax,ds:0x100c7654
10010f79:	xor    eax,ebp
10010f7b:	mov    DWORD PTR [ebp-0x10],eax
10010f7e:	push   eax
10010f7f:	lea    eax,[ebp-0xc]
10010f82:	mov    fs:0x0,eax
10010f88:	lea    ecx,[ebp-0x50]
10010f8b:	call   0x10012040
10010f90:	mov    DWORD PTR [ebp-0x4],0x0
10010f97:	push   0xffffffff
10010f99:	mov    eax,ds:0x100c8dac
10010f9e:	push   eax
10010f9f:	lea    ecx,[ebp-0x50]
10010fa2:	call   0x10012080
10010fa7:	test   eax,eax
10010fa9:	je     0x10010fc6
10010fab:	mov    BYTE PTR [ebp-0x51],0x0
10010faf:	mov    DWORD PTR [ebp-0x4],0xffffffff
10010fb6:	lea    ecx,[ebp-0x50]
10010fb9:	call   0x10012060
10010fbe:	mov    al,BYTE PTR [ebp-0x51]
10010fc1:	jmp    0x100110f7
10010fc6:	call   0x10001b00
10010fcb:	mov    DWORD PTR [ebp-0x5c],eax
10010fce:	mov    DWORD PTR [ebp-0x58],edx
10010fd1:	mov    ecx,DWORD PTR ds:0x100c8d50
10010fd7:	add    ecx,DWORD PTR ds:0x100c8d80
10010fdd:	mov    edx,DWORD PTR ds:0x100c8d54
10010fe3:	adc    edx,DWORD PTR ds:0x100c8d84
10010fe9:	mov    DWORD PTR [ebp-0x7c],ecx
10010fec:	mov    DWORD PTR [ebp-0x78],edx
10010fef:	mov    eax,DWORD PTR [ebp-0x78]
10010ff2:	cmp    eax,DWORD PTR [ebp-0x58]
10010ff5:	jb     0x1001101c
10010ff7:	ja     0x10011001
10010ff9:	mov    ecx,DWORD PTR [ebp-0x7c]
10010ffc:	cmp    ecx,DWORD PTR [ebp-0x5c]
10010fff:	jbe    0x1001101c
10011001:	mov    BYTE PTR [ebp-0x5d],0x0
10011005:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001100c:	lea    ecx,[ebp-0x50]
1001100f:	call   0x10012060
10011014:	mov    al,BYTE PTR [ebp-0x5d]
10011017:	jmp    0x100110f7
1001101c:	call   0x10010c60
10011021:	call   0x10001b00
10011026:	mov    DWORD PTR [ebp-0x6c],eax
10011029:	mov    DWORD PTR [ebp-0x68],edx
1001102c:	mov    edx,DWORD PTR [ebp-0x6c]
1001102f:	mov    DWORD PTR ds:0x100c8d50,edx
10011035:	mov    eax,DWORD PTR [ebp-0x68]
10011038:	mov    ds:0x100c8d54,eax
1001103d:	push   0x25
1001103f:	push   0x10055060
10011044:	push   0x253bd
10011049:	push   0x1002fca0
1001104e:	lea    ecx,[ebp-0x4c]
10011051:	push   ecx
10011052:	call   0x1000ce80
10011057:	add    esp,0x14
1001105a:	mov    BYTE PTR [ebp-0x4],0x1
1001105e:	push   0x0
10011060:	push   0x0
10011062:	lea    edx,[ebp-0x4c]
10011065:	push   edx
10011066:	lea    ecx,[ebp-0x30]
10011069:	call   0x10011ec0
1001106e:	mov    BYTE PTR [ebp-0x4],0x2
10011072:	push   0x493e0
10011077:	lea    eax,[ebp-0x70]
1001107a:	push   eax
1001107b:	lea    ecx,[ebp-0x30]
1001107e:	call   0x10011fa0
10011083:	mov    DWORD PTR [ebp-0x80],eax
10011086:	mov    ecx,DWORD PTR [ebp-0x80]
10011089:	mov    DWORD PTR [ebp-0x84],ecx
1001108f:	mov    BYTE PTR [ebp-0x4],0x3
10011093:	mov    ecx,DWORD PTR [ebp-0x84]
10011099:	call   0x10003200
1001109e:	push   eax
1001109f:	call   0x1000ce70
100110a4:	add    esp,0x4
100110a7:	push   eax
100110a8:	mov    edx,DWORD PTR [ebp+0x8]
100110ab:	push   edx
100110ac:	lea    ecx,[ebp-0x4c]
100110af:	call   0x10007b70
100110b4:	push   eax
100110b5:	call   0x10009e20
100110ba:	add    esp,0x10
100110bd:	mov    BYTE PTR [ebp-0x4],0x2
100110c1:	lea    ecx,[ebp-0x70]
100110c4:	call   0x10002f00
100110c9:	mov    BYTE PTR [ebp-0x71],0x0
100110cd:	mov    BYTE PTR [ebp-0x4],0x1
100110d1:	lea    ecx,[ebp-0x30]
100110d4:	call   0x10011fd0
100110d9:	mov    BYTE PTR [ebp-0x4],0x0
100110dd:	lea    ecx,[ebp-0x4c]
100110e0:	call   0x10002c00
100110e5:	mov    DWORD PTR [ebp-0x4],0xffffffff
100110ec:	lea    ecx,[ebp-0x50]
100110ef:	call   0x10012060
100110f4:	mov    al,BYTE PTR [ebp-0x71]
100110f7:	mov    ecx,DWORD PTR [ebp-0xc]
100110fa:	mov    DWORD PTR fs:0x0,ecx
10011101:	pop    ecx
10011102:	mov    ecx,DWORD PTR [ebp-0x10]
10011105:	xor    ecx,ebp
10011107:	call   0x10018773
1001110c:	mov    esp,ebp
1001110e:	pop    ebp
1001110f:	ret    
10011110:	push   ebp
10011111:	mov    ebp,esp
10011113:	push   0xffffffff
10011115:	push   0x1002cff0
1001111a:	mov    eax,fs:0x0
10011120:	push   eax
10011121:	sub    esp,0x34
10011124:	mov    eax,ds:0x100c7654
10011129:	xor    eax,ebp
1001112b:	push   eax
1001112c:	lea    eax,[ebp-0xc]
1001112f:	mov    fs:0x0,eax
10011135:	lea    ecx,[ebp-0x1c]
10011138:	call   0x10002d80
1001113d:	mov    DWORD PTR [ebp-0x4],0x0
10011144:	push   0x104
10011149:	lea    ecx,[ebp-0x1c]
1001114c:	call   0x10003220
10011151:	push   eax
10011152:	push   0x104
10011157:	call   DWORD PTR ds:0x1002f0d4
1001115d:	mov    DWORD PTR [ebp-0x10],eax
10011160:	cmp    DWORD PTR [ebp-0x10],0x0
10011164:	je     0x1001116f
10011166:	cmp    DWORD PTR [ebp-0x10],0x104
1001116d:	jbe    0x1001118a
1001116f:	mov    BYTE PTR [ebp-0x29],0x0
10011173:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001117a:	lea    ecx,[ebp-0x1c]
1001117d:	call   0x10002f00
10011182:	mov    al,BYTE PTR [ebp-0x29]
10011185:	jmp    0x100113a9
1001118a:	push   0xffffffff
1001118c:	lea    ecx,[ebp-0x1c]
1001118f:	call   0x10003260
10011194:	lea    ecx,[ebp-0x20]
10011197:	call   0x10002d80
1001119c:	mov    BYTE PTR [ebp-0x4],0x1
100111a0:	push   0x104
100111a5:	lea    ecx,[ebp-0x20]
100111a8:	call   0x10003220
100111ad:	push   eax
100111ae:	push   0x0
100111b0:	push   0x100b2038
100111b5:	lea    ecx,[ebp-0x1c]
100111b8:	call   0x10003340
100111bd:	push   eax
100111be:	call   DWORD PTR ds:0x1002f0d0
100111c4:	test   eax,eax
100111c6:	jne    0x100111ef
100111c8:	mov    BYTE PTR [ebp-0x2a],0x0
100111cc:	mov    BYTE PTR [ebp-0x4],0x0
100111d0:	lea    ecx,[ebp-0x20]
100111d3:	call   0x10002f00
100111d8:	mov    DWORD PTR [ebp-0x4],0xffffffff
100111df:	lea    ecx,[ebp-0x1c]
100111e2:	call   0x10002f00
100111e7:	mov    al,BYTE PTR [ebp-0x2a]
100111ea:	jmp    0x100113a9
100111ef:	push   0xffffffff
100111f1:	lea    ecx,[ebp-0x20]
100111f4:	call   0x10003260
100111f9:	lea    ecx,[ebp-0x20]
100111fc:	call   0x10003340
10011201:	push   eax
10011202:	call   DWORD PTR ds:0x1002f0cc
10011208:	push   0x0
1001120a:	lea    ecx,[ebp-0x20]
1001120d:	call   0x10003340
10011212:	push   eax
10011213:	call   DWORD PTR ds:0x1002f0c8
10011219:	push   0x100b203c
1001121e:	lea    ecx,[ebp-0x30]
10011221:	call   0x10002e70
10011226:	mov    BYTE PTR [ebp-0x4],0x2
1001122a:	mov    eax,DWORD PTR [ebp+0x10]
1001122d:	push   eax
1001122e:	lea    ecx,[ebp-0x30]
10011231:	push   ecx
10011232:	lea    edx,[ebp-0x20]
10011235:	push   edx
10011236:	lea    eax,[ebp-0x34]
10011239:	push   eax
1001123a:	call   0x1000cf50
1001123f:	add    esp,0xc
10011242:	mov    DWORD PTR [ebp-0x3c],eax
10011245:	mov    ecx,DWORD PTR [ebp-0x3c]
10011248:	mov    DWORD PTR [ebp-0x40],ecx
1001124b:	mov    BYTE PTR [ebp-0x4],0x3
1001124f:	mov    edx,DWORD PTR [ebp-0x40]
10011252:	push   edx
10011253:	lea    eax,[ebp-0x18]
10011256:	push   eax
10011257:	call   0x1000cf50
1001125c:	add    esp,0xc
1001125f:	mov    BYTE PTR [ebp-0x4],0x5
10011263:	lea    ecx,[ebp-0x34]
10011266:	call   0x10002f00
1001126b:	mov    BYTE PTR [ebp-0x4],0x6
1001126f:	lea    ecx,[ebp-0x30]
10011272:	call   0x10002f00
10011277:	push   0x0
10011279:	push   0x80
1001127e:	push   0x2
10011280:	push   0x0
10011282:	push   0x0
10011284:	push   0x40000000
10011289:	lea    ecx,[ebp-0x18]
1001128c:	call   0x10003340
10011291:	push   eax
10011292:	call   DWORD PTR ds:0x1002f0c4
10011298:	push   eax
10011299:	lea    ecx,[ebp-0x14]
1001129c:	call   0x10003300
100112a1:	mov    BYTE PTR [ebp-0x4],0x7
100112a5:	lea    ecx,[ebp-0x14]
100112a8:	call   0x10003340
100112ad:	cmp    eax,0xffffffff
100112b0:	jne    0x100112fa
100112b2:	call   DWORD PTR ds:0x1002f094
100112b8:	mov    DWORD PTR [ebp-0x28],eax
100112bb:	mov    BYTE PTR [ebp-0x35],0x0
100112bf:	mov    BYTE PTR [ebp-0x4],0x6
100112c3:	lea    ecx,[ebp-0x14]
100112c6:	call   0x10003310
100112cb:	mov    BYTE PTR [ebp-0x4],0x1
100112cf:	lea    ecx,[ebp-0x18]
100112d2:	call   0x10002f00
100112d7:	mov    BYTE PTR [ebp-0x4],0x0
100112db:	lea    ecx,[ebp-0x20]
100112de:	call   0x10002f00
100112e3:	mov    DWORD PTR [ebp-0x4],0xffffffff
100112ea:	lea    ecx,[ebp-0x1c]
100112ed:	call   0x10002f00
100112f2:	mov    al,BYTE PTR [ebp-0x35]
100112f5:	jmp    0x100113a9
100112fa:	push   0x0
100112fc:	lea    ecx,[ebp-0x24]
100112ff:	push   ecx
10011300:	mov    edx,DWORD PTR [ebp+0xc]
10011303:	push   edx
10011304:	mov    eax,DWORD PTR [ebp+0x8]
10011307:	push   eax
10011308:	lea    ecx,[ebp-0x14]
1001130b:	call   0x10003340
10011310:	push   eax
10011311:	call   DWORD PTR ds:0x1002f0c0
10011317:	test   eax,eax
10011319:	jne    0x10011357
1001131b:	mov    BYTE PTR [ebp-0x36],0x0
1001131f:	mov    BYTE PTR [ebp-0x4],0x6
10011323:	lea    ecx,[ebp-0x14]
10011326:	call   0x10003310
1001132b:	mov    BYTE PTR [ebp-0x4],0x1
1001132f:	lea    ecx,[ebp-0x18]
10011332:	call   0x10002f00
10011337:	mov    BYTE PTR [ebp-0x4],0x0
1001133b:	lea    ecx,[ebp-0x20]
1001133e:	call   0x10002f00
10011343:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001134a:	lea    ecx,[ebp-0x1c]
1001134d:	call   0x10002f00
10011352:	mov    al,BYTE PTR [ebp-0x36]
10011355:	jmp    0x100113a9
10011357:	lea    ecx,[ebp-0x18]
1001135a:	push   ecx
1001135b:	mov    ecx,DWORD PTR [ebp+0x18]
1001135e:	call   0x10002f20
10011363:	lea    edx,[ebp-0x20]
10011366:	push   edx
10011367:	mov    ecx,DWORD PTR [ebp+0x14]
1001136a:	call   0x10002f20
1001136f:	mov    BYTE PTR [ebp-0x37],0x1
10011373:	mov    BYTE PTR [ebp-0x4],0x6
10011377:	lea    ecx,[ebp-0x14]
1001137a:	call   0x10003310
1001137f:	mov    BYTE PTR [ebp-0x4],0x1
10011383:	lea    ecx,[ebp-0x18]
10011386:	call   0x10002f00
1001138b:	mov    BYTE PTR [ebp-0x4],0x0
1001138f:	lea    ecx,[ebp-0x20]
10011392:	call   0x10002f00
10011397:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001139e:	lea    ecx,[ebp-0x1c]
100113a1:	call   0x10002f00
100113a6:	mov    al,BYTE PTR [ebp-0x37]
100113a9:	mov    ecx,DWORD PTR [ebp-0xc]
100113ac:	mov    DWORD PTR fs:0x0,ecx
100113b3:	pop    ecx
100113b4:	mov    esp,ebp
100113b6:	pop    ebp
100113b7:	ret    
100113b8:	int3   
100113b9:	int3   
100113ba:	int3   
100113bb:	int3   
100113bc:	int3   
100113bd:	int3   
100113be:	int3   
100113bf:	int3   
100113c0:	push   ebp
100113c1:	mov    ebp,esp
100113c3:	push   0xffffffff
100113c5:	push   0x1002d057
100113ca:	mov    eax,fs:0x0
100113d0:	push   eax
100113d1:	push   ecx
100113d2:	mov    eax,0x1138
100113d7:	call   0x100191a0
100113dc:	mov    eax,ds:0x100c7654
100113e1:	xor    eax,ebp
100113e3:	mov    DWORD PTR [ebp-0x20],eax
100113e6:	push   ebx
100113e7:	push   esi
100113e8:	push   edi
100113e9:	push   eax
100113ea:	lea    eax,[ebp-0xc]
100113ed:	mov    fs:0x0,eax
100113f3:	mov    DWORD PTR [ebp-0x10],esp
100113f6:	mov    DWORD PTR [ebp-0x4],0x0
100113fd:	mov    ecx,DWORD PTR [ebp+0x8]
10011400:	call   0x1000dab0
10011405:	mov    DWORD PTR [ebp-0x1108],eax
1001140b:	mov    eax,DWORD PTR [ebp-0x1108]
10011411:	mov    DWORD PTR [ebp-0x48],eax
10011414:	lea    ecx,[ebp-0x10cc]
1001141a:	push   ecx
1001141b:	mov    ecx,DWORD PTR [ebp+0x8]
1001141e:	call   0x1000da00
10011423:	mov    DWORD PTR [ebp-0x110c],eax
10011429:	mov    BYTE PTR [ebp-0x4],0x1
1001142d:	cmp    DWORD PTR [ebp-0x48],0x2
10011431:	je     0x10011454
10011433:	mov    BYTE PTR [ebp-0x10f9],0x1
1001143a:	mov    BYTE PTR [ebp-0x4],0x0
1001143e:	lea    ecx,[ebp-0x10cc]
10011444:	call   0x10002c00
10011449:	mov    al,BYTE PTR [ebp-0x10f9]
1001144f:	jmp    0x10011821
10011454:	lea    ecx,[ebp-0x10cc]
1001145a:	call   0x10002d70
1001145f:	mov    DWORD PTR [ebp-0x1110],eax
10011465:	cmp    DWORD PTR [ebp-0x1110],0x0
1001146c:	jne    0x1001148f
1001146e:	mov    BYTE PTR [ebp-0x10fa],0x1
10011475:	mov    BYTE PTR [ebp-0x4],0x0
10011479:	lea    ecx,[ebp-0x10cc]
1001147f:	call   0x10002c00
10011484:	mov    al,BYTE PTR [ebp-0x10fa]
1001148a:	jmp    0x10011821
1001148f:	push   0x100b2040
10011494:	push   0xc
10011496:	push   0x100b20a0
1001149b:	call   0x100035f0
100114a0:	add    esp,0xc
100114a3:	mov    DWORD PTR [ebp-0x1114],eax
100114a9:	mov    edx,DWORD PTR [ebp-0x1114]
100114af:	push   edx
100114b0:	lea    ecx,[ebp-0x10d0]
100114b6:	call   0x10002dc0
100114bb:	mov    DWORD PTR [ebp-0x1118],eax
100114c1:	mov    BYTE PTR [ebp-0x4],0x2
100114c5:	lea    ecx,[ebp-0x40]
100114c8:	call   0x10002d80
100114cd:	mov    BYTE PTR [ebp-0x4],0x3
100114d1:	lea    ecx,[ebp-0x18]
100114d4:	call   0x10002d80
100114d9:	mov    BYTE PTR [ebp-0x4],0x4
100114dd:	lea    ecx,[ebp-0x10cc]
100114e3:	call   0x10002d70
100114e8:	mov    DWORD PTR [ebp-0x111c],eax
100114ee:	lea    ecx,[ebp-0x10cc]
100114f4:	call   0x10007b70
100114f9:	mov    DWORD PTR [ebp-0x1120],eax
100114ff:	lea    eax,[ebp-0x18]
10011502:	push   eax
10011503:	lea    ecx,[ebp-0x40]
10011506:	push   ecx
10011507:	lea    edx,[ebp-0x10d0]
1001150d:	push   edx
1001150e:	mov    eax,DWORD PTR [ebp-0x111c]
10011514:	push   eax
10011515:	mov    ecx,DWORD PTR [ebp-0x1120]
1001151b:	push   ecx
1001151c:	call   0x10011110
10011521:	add    esp,0x14
10011524:	mov    BYTE PTR [ebp-0x1121],al
1001152a:	movzx  edx,BYTE PTR [ebp-0x1121]
10011531:	test   edx,edx
10011533:	jne    0x1001157d
10011535:	mov    BYTE PTR [ebp-0x10fb],0x1
1001153c:	mov    BYTE PTR [ebp-0x4],0x3
10011540:	lea    ecx,[ebp-0x18]
10011543:	call   0x10002f00
10011548:	mov    BYTE PTR [ebp-0x4],0x2
1001154c:	lea    ecx,[ebp-0x40]
1001154f:	call   0x10002f00
10011554:	mov    BYTE PTR [ebp-0x4],0x1
10011558:	lea    ecx,[ebp-0x10d0]
1001155e:	call   0x10002f00
10011563:	mov    BYTE PTR [ebp-0x4],0x0
10011567:	lea    ecx,[ebp-0x10cc]
1001156d:	call   0x10002c00
10011572:	mov    al,BYTE PTR [ebp-0x10fb]
10011578:	jmp    0x10011821
1001157d:	call   0x10001000
10011582:	mov    DWORD PTR [ebp-0x10ac],eax
10011588:	push   0x0
1001158a:	lea    eax,[ebp-0x1100]
10011590:	push   eax
10011591:	call   0x10001bf0
10011596:	add    esp,0x8
10011599:	mov    DWORD PTR [ebp-0x1128],eax
1001159f:	mov    ecx,DWORD PTR [ebp-0x1128]
100115a5:	mov    DWORD PTR [ebp-0x112c],ecx
100115ab:	mov    BYTE PTR [ebp-0x4],0x5
100115af:	push   0x100b20bc
100115b4:	mov    edx,DWORD PTR [ebp-0x112c]
100115ba:	push   edx
100115bb:	lea    eax,[ebp-0x44]
100115be:	push   eax
100115bf:	call   0x10003120
100115c4:	add    esp,0xc
100115c7:	mov    DWORD PTR [ebp-0x1130],eax
100115cd:	mov    BYTE PTR [ebp-0x4],0x7
100115d1:	lea    ecx,[ebp-0x1100]
100115d7:	call   0x10002f00
100115dc:	lea    ecx,[ebp-0x18]
100115df:	call   0x10003340
100115e4:	mov    DWORD PTR [ebp-0x4c],eax
100115e7:	cmp    DWORD PTR [ebp-0x4c],0x0
100115eb:	jne    0x100115f9
100115ed:	mov    DWORD PTR [ebp-0x1134],0x0
100115f7:	jmp    0x10011660
100115f9:	mov    ecx,DWORD PTR [ebp-0x4c]
100115fc:	push   ecx
100115fd:	call   DWORD PTR ds:0x1002f034
10011603:	add    eax,0x1
10011606:	mov    DWORD PTR [ebp-0x14],eax
10011609:	cmp    DWORD PTR [ebp-0x14],0x3fffffff
10011610:	jle    0x1001161e
10011612:	mov    DWORD PTR [ebp-0x1138],0x0
1001161c:	jmp    0x10011654
1001161e:	mov    eax,DWORD PTR [ebp-0x14]
10011621:	shl    eax,1
10011623:	call   0x10018790
10011628:	mov    DWORD PTR [ebp-0x113c],esp
1001162e:	mov    DWORD PTR [ebp-0x10],esp
10011631:	mov    edx,DWORD PTR [ebp-0x10ac]
10011637:	push   edx
10011638:	mov    eax,DWORD PTR [ebp-0x14]
1001163b:	shl    eax,1
1001163d:	push   eax
1001163e:	mov    ecx,DWORD PTR [ebp-0x4c]
10011641:	push   ecx
10011642:	mov    edx,DWORD PTR [ebp-0x113c]
10011648:	push   edx
10011649:	call   0x10001050
1001164e:	mov    DWORD PTR [ebp-0x1138],eax
10011654:	mov    eax,DWORD PTR [ebp-0x1138]
1001165a:	mov    DWORD PTR [ebp-0x1134],eax
10011660:	mov    ecx,DWORD PTR [ebp-0x1134]
10011666:	push   ecx
10011667:	lea    ecx,[ebp-0x1104]
1001166d:	call   0x10002e70
10011672:	mov    DWORD PTR [ebp-0x1140],eax
10011678:	mov    BYTE PTR [ebp-0x4],0x8
1001167c:	lea    edx,[ebp-0x44]
1001167f:	push   edx
10011680:	lea    eax,[ebp-0x1104]
10011686:	push   eax
10011687:	call   0x100020f0
1001168c:	add    esp,0x8
1001168f:	mov    BYTE PTR [ebp-0x4],0x7
10011693:	lea    ecx,[ebp-0x1104]
10011699:	call   0x10002f00
1001169e:	mov    DWORD PTR [ebp-0x10a8],0x0
100116a8:	push   0x40
100116aa:	push   0x0
100116ac:	lea    ecx,[ebp-0x10a4]
100116b2:	push   ecx
100116b3:	call   0x100191d0
100116b8:	add    esp,0xc
100116bb:	mov    DWORD PTR [ebp-0x60],0x0
100116c2:	xor    edx,edx
100116c4:	mov    DWORD PTR [ebp-0x5c],edx
100116c7:	mov    DWORD PTR [ebp-0x58],edx
100116ca:	mov    DWORD PTR [ebp-0x54],edx
100116cd:	mov    DWORD PTR [ebp-0x10a8],0x44
100116d7:	mov    DWORD PTR [ebp-0x50],0x1000
100116de:	lea    eax,[ebp-0x3c]
100116e1:	push   eax
100116e2:	call   0x1000d4f0
100116e7:	add    esp,0x4
100116ea:	mov    DWORD PTR [ebp-0x1144],eax
100116f0:	mov    BYTE PTR [ebp-0x4],0x9
100116f4:	mov    DWORD PTR [ebp-0x1c],0x0
100116fb:	mov    DWORD PTR [ebp-0x1c],0x400
10011702:	lea    ecx,[ebp-0x3c]
10011705:	call   0x10007b70
1001170a:	mov    DWORD PTR [ebp-0x1148],eax
10011710:	lea    ecx,[ebp-0x60]
10011713:	push   ecx
10011714:	lea    edx,[ebp-0x10a8]
1001171a:	push   edx
1001171b:	push   0x0
1001171d:	mov    eax,DWORD PTR [ebp-0x1148]
10011723:	push   eax
10011724:	mov    ecx,DWORD PTR [ebp-0x1c]
10011727:	push   ecx
10011728:	push   0x1
1001172a:	push   0x0
1001172c:	push   0x0
1001172e:	push   0x0
10011730:	lea    ecx,[ebp-0x18]
10011733:	call   0x10003340
10011738:	push   eax
10011739:	call   DWORD PTR ds:0x1002f0d8
1001173f:	test   eax,eax
10011741:	je     0x10011757
10011743:	mov    edx,DWORD PTR [ebp-0x5c]
10011746:	push   edx
10011747:	call   DWORD PTR ds:0x1002f064
1001174d:	mov    eax,DWORD PTR [ebp-0x60]
10011750:	push   eax
10011751:	call   DWORD PTR ds:0x1002f064
10011757:	lea    ecx,[ebp-0x18]
1001175a:	call   0x10003340
1001175f:	push   eax
10011760:	call   DWORD PTR ds:0x1002f0cc
10011766:	test   eax,eax
10011768:	jne    0x1001177d
1001176a:	push   0x4
1001176c:	push   0x0
1001176e:	lea    ecx,[ebp-0x18]
10011771:	call   0x10003340
10011776:	push   eax
10011777:	call   DWORD PTR ds:0x1002f0bc
1001177d:	lea    ecx,[ebp-0x40]
10011780:	call   0x10003340
10011785:	push   eax
10011786:	call   DWORD PTR ds:0x1002f0cc
1001178c:	test   eax,eax
1001178e:	jne    0x100117a3
10011790:	push   0x4
10011792:	push   0x0
10011794:	lea    ecx,[ebp-0x40]
10011797:	call   0x10003340
1001179c:	push   eax
1001179d:	call   DWORD PTR ds:0x1002f0bc
100117a3:	mov    BYTE PTR [ebp-0x4],0x7
100117a7:	lea    ecx,[ebp-0x3c]
100117aa:	call   0x10002c00
100117af:	mov    BYTE PTR [ebp-0x4],0x4
100117b3:	lea    ecx,[ebp-0x44]
100117b6:	call   0x10002f00
100117bb:	mov    BYTE PTR [ebp-0x4],0x3
100117bf:	lea    ecx,[ebp-0x18]
100117c2:	call   0x10002f00
100117c7:	mov    BYTE PTR [ebp-0x4],0x2
100117cb:	lea    ecx,[ebp-0x40]
100117ce:	call   0x10002f00
100117d3:	mov    BYTE PTR [ebp-0x4],0x1
100117d7:	lea    ecx,[ebp-0x10d0]
100117dd:	call   0x10002f00
100117e2:	mov    BYTE PTR [ebp-0x4],0x0
100117e6:	lea    ecx,[ebp-0x10cc]
100117ec:	call   0x10002c00
100117f1:	jmp    0x10011818
100117f3:	lea    ecx,[ebp-0x10f8]
100117f9:	call   0x10007b90
100117fe:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011805:	mov    eax,0x1001181f
1001180a:	ret    
1001180b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011812:	mov    eax,0x1001181f
10011817:	ret    
10011818:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001181f:	mov    al,0x1
10011821:	lea    esp,[ebp-0x1158]
10011827:	mov    ecx,DWORD PTR [ebp-0xc]
1001182a:	mov    DWORD PTR fs:0x0,ecx
10011831:	pop    ecx
10011832:	pop    edi
10011833:	pop    esi
10011834:	pop    ebx
10011835:	mov    ecx,DWORD PTR [ebp-0x20]
10011838:	xor    ecx,ebp
1001183a:	call   0x10018773
1001183f:	mov    esp,ebp
10011841:	pop    ebp
10011842:	ret    
10011843:	int3   
10011844:	int3   
10011845:	int3   
10011846:	int3   
10011847:	int3   
10011848:	int3   
10011849:	int3   
1001184a:	int3   
1001184b:	int3   
1001184c:	int3   
1001184d:	int3   
1001184e:	int3   
1001184f:	int3   
10011850:	push   ebp
10011851:	mov    ebp,esp
10011853:	push   0xffffffff
10011855:	push   0x1002d0c6
1001185a:	mov    eax,fs:0x0
10011860:	push   eax
10011861:	sub    esp,0xa8
10011867:	mov    eax,ds:0x100c7654
1001186c:	xor    eax,ebp
1001186e:	mov    DWORD PTR [ebp-0x10],eax
10011871:	push   eax
10011872:	lea    eax,[ebp-0xc]
10011875:	mov    fs:0x0,eax
1001187b:	lea    eax,[ebp-0x64]
1001187e:	push   eax
1001187f:	mov    ecx,DWORD PTR [ebp+0x8]
10011882:	call   0x1000da00
10011887:	mov    DWORD PTR [ebp-0x4],0x0
1001188e:	lea    ecx,[ebp-0x48]
10011891:	push   ecx
10011892:	mov    ecx,DWORD PTR [ebp+0x8]
10011895:	call   0x1000da00
1001189a:	mov    BYTE PTR [ebp-0x4],0x1
1001189e:	mov    ecx,DWORD PTR [ebp+0x8]
100118a1:	call   0x1000dcd0
100118a6:	push   eax
100118a7:	lea    edx,[ebp-0x2c]
100118aa:	push   edx
100118ab:	mov    ecx,DWORD PTR [ebp+0x8]
100118ae:	call   0x1000dc10
100118b3:	mov    BYTE PTR [ebp-0x4],0x2
100118b7:	lea    ecx,[ebp-0x64]
100118ba:	call   0x100120f0
100118bf:	movzx  eax,al
100118c2:	test   eax,eax
100118c4:	je     0x10011914
100118c6:	push   0x25
100118c8:	push   0x100b2004
100118cd:	push   0x5cf7b
100118d2:	push   0x10055088
100118d7:	lea    ecx,[ebp-0x80]
100118da:	push   ecx
100118db:	call   0x1000ce80
100118e0:	add    esp,0x14
100118e3:	mov    DWORD PTR [ebp-0x9c],eax
100118e9:	mov    edx,DWORD PTR [ebp-0x9c]
100118ef:	mov    DWORD PTR [ebp-0xa0],edx
100118f5:	mov    BYTE PTR [ebp-0x4],0x3
100118f9:	mov    eax,DWORD PTR [ebp-0xa0]
100118ff:	push   eax
10011900:	lea    ecx,[ebp-0x64]
10011903:	call   0x10002c30
10011908:	mov    BYTE PTR [ebp-0x4],0x2
1001190c:	lea    ecx,[ebp-0x80]
1001190f:	call   0x10002c00
10011914:	call   0x10010c30
10011919:	movzx  ecx,al
1001191c:	test   ecx,ecx
1001191e:	jne    0x1001195b
10011920:	lea    ecx,[ebp-0x64]
10011923:	call   0x100120f0
10011928:	movzx  edx,al
1001192b:	test   edx,edx
1001192d:	je     0x1001195b
1001192f:	mov    BYTE PTR [ebp-0x4],0x1
10011933:	lea    ecx,[ebp-0x2c]
10011936:	call   0x10002c00
1001193b:	mov    BYTE PTR [ebp-0x4],0x0
1001193f:	lea    ecx,[ebp-0x48]
10011942:	call   0x10002c00
10011947:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001194e:	lea    ecx,[ebp-0x64]
10011951:	call   0x10002c00
10011956:	jmp    0x10011af3
1001195b:	mov    ecx,0x100c8d88
10011960:	call   0x10012130
10011965:	test   eax,eax
10011967:	jne    0x100119ce
10011969:	push   0x20
1001196b:	call   0x100190b4
10011970:	add    esp,0x4
10011973:	mov    DWORD PTR [ebp-0x88],eax
10011979:	mov    BYTE PTR [ebp-0x4],0x4
1001197d:	cmp    DWORD PTR [ebp-0x88],0x0
10011984:	je     0x100119a1
10011986:	push   0x0
10011988:	push   0x1
1001198a:	lea    eax,[ebp-0x64]
1001198d:	push   eax
1001198e:	mov    ecx,DWORD PTR [ebp-0x88]
10011994:	call   0x10011ec0
10011999:	mov    DWORD PTR [ebp-0xa4],eax
1001199f:	jmp    0x100119ab
100119a1:	mov    DWORD PTR [ebp-0xa4],0x0
100119ab:	mov    ecx,DWORD PTR [ebp-0xa4]
100119b1:	mov    DWORD PTR [ebp-0x84],ecx
100119b7:	mov    BYTE PTR [ebp-0x4],0x2
100119bb:	mov    edx,DWORD PTR [ebp-0x84]
100119c1:	push   edx
100119c2:	mov    ecx,0x100c8d88
100119c7:	call   0x10012140
100119cc:	jmp    0x100119db
100119ce:	push   0x1002fb4f
100119d3:	lea    ecx,[ebp-0x64]
100119d6:	call   0x10002c50
100119db:	mov    ecx,0x100c8d7c
100119e0:	call   0x10012130
100119e5:	test   eax,eax
100119e7:	jne    0x10011a4e
100119e9:	push   0x20
100119eb:	call   0x100190b4
100119f0:	add    esp,0x4
100119f3:	mov    DWORD PTR [ebp-0x90],eax
100119f9:	mov    BYTE PTR [ebp-0x4],0x5
100119fd:	cmp    DWORD PTR [ebp-0x90],0x0
10011a04:	je     0x10011a21
10011a06:	push   0x1
10011a08:	push   0x1
10011a0a:	lea    eax,[ebp-0x48]
10011a0d:	push   eax
10011a0e:	mov    ecx,DWORD PTR [ebp-0x90]
10011a14:	call   0x10011ec0
10011a19:	mov    DWORD PTR [ebp-0xa8],eax
10011a1f:	jmp    0x10011a2b
10011a21:	mov    DWORD PTR [ebp-0xa8],0x0
10011a2b:	mov    ecx,DWORD PTR [ebp-0xa8]
10011a31:	mov    DWORD PTR [ebp-0x8c],ecx
10011a37:	mov    BYTE PTR [ebp-0x4],0x2
10011a3b:	mov    edx,DWORD PTR [ebp-0x8c]
10011a41:	push   edx
10011a42:	mov    ecx,0x100c8d7c
10011a47:	call   0x10012140
10011a4c:	jmp    0x10011a5b
10011a4e:	push   0x1002fbaa
10011a53:	lea    ecx,[ebp-0x48]
10011a56:	call   0x10002c50
10011a5b:	mov    BYTE PTR ds:0x100c8d58,0x1
10011a62:	push   ecx
10011a63:	mov    eax,esp
10011a65:	mov    DWORD PTR [ebp-0x94],esp
10011a6b:	push   eax
10011a6c:	mov    ecx,0x100c8d7c
10011a71:	call   0x10012110
10011a76:	mov    ecx,eax
10011a78:	call   0x10011fa0
10011a7d:	mov    DWORD PTR [ebp-0xac],eax
10011a83:	mov    ecx,DWORD PTR [ebp-0xac]
10011a89:	mov    DWORD PTR [ebp-0xb0],ecx
10011a8f:	mov    BYTE PTR [ebp-0x4],0x6
10011a93:	push   ecx
10011a94:	mov    edx,esp
10011a96:	mov    DWORD PTR [ebp-0x98],esp
10011a9c:	push   edx
10011a9d:	mov    ecx,0x100c8d88
10011aa2:	call   0x10012110
10011aa7:	mov    ecx,eax
10011aa9:	call   0x10011fa0
10011aae:	mov    DWORD PTR [ebp-0xb4],eax
10011ab4:	lea    eax,[ebp-0x2c]
10011ab7:	push   eax
10011ab8:	lea    ecx,[ebp-0x48]
10011abb:	push   ecx
10011abc:	lea    edx,[ebp-0x64]
10011abf:	push   edx
10011ac0:	mov    BYTE PTR [ebp-0x4],0x2
10011ac4:	call   0x10010d40
10011ac9:	add    esp,0x14
10011acc:	mov    BYTE PTR [ebp-0x4],0x1
10011ad0:	lea    ecx,[ebp-0x2c]
10011ad3:	call   0x10002c00
10011ad8:	mov    BYTE PTR [ebp-0x4],0x0
10011adc:	lea    ecx,[ebp-0x48]
10011adf:	call   0x10002c00
10011ae4:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011aeb:	lea    ecx,[ebp-0x64]
10011aee:	call   0x10002c00
10011af3:	mov    ecx,DWORD PTR [ebp-0xc]
10011af6:	mov    DWORD PTR fs:0x0,ecx
10011afd:	pop    ecx
10011afe:	mov    ecx,DWORD PTR [ebp-0x10]
10011b01:	xor    ecx,ebp
10011b03:	call   0x10018773
10011b08:	mov    esp,ebp
10011b0a:	pop    ebp
10011b0b:	ret    
10011b0c:	int3   
10011b0d:	int3   
10011b0e:	int3   
10011b0f:	int3   
10011b10:	push   ebp
10011b11:	mov    ebp,esp
10011b13:	push   0xffffffff
10011b15:	push   0x1002d0f6
10011b1a:	mov    eax,fs:0x0
10011b20:	push   eax
10011b21:	push   ecx
10011b22:	sub    esp,0x5c
10011b25:	mov    eax,ds:0x100c7654
10011b2a:	xor    eax,ebp
10011b2c:	mov    DWORD PTR [ebp-0x24],eax
10011b2f:	push   ebx
10011b30:	push   esi
10011b31:	push   edi
10011b32:	push   eax
10011b33:	lea    eax,[ebp-0xc]
10011b36:	mov    fs:0x0,eax
10011b3c:	mov    DWORD PTR [ebp-0x10],esp
10011b3f:	call   0x10010cc0
10011b44:	mov    DWORD PTR [ebp-0x4],0x0
10011b4b:	mov    eax,DWORD PTR [ebp+0xc]
10011b4e:	push   eax
10011b4f:	mov    ecx,DWORD PTR [ebp+0x8]
10011b52:	push   ecx
10011b53:	lea    ecx,[ebp-0x20]
10011b56:	call   0x1000d940
10011b5b:	lea    ecx,[ebp-0x20]
10011b5e:	call   0x1000dab0
10011b63:	mov    DWORD PTR [ebp-0x6c],eax
10011b66:	mov    edx,DWORD PTR [ebp-0x6c]
10011b69:	mov    DWORD PTR [ebp-0x14],edx
10011b6c:	cmp    DWORD PTR [ebp-0x14],0x0
10011b70:	jne    0x10011b8a
10011b72:	lea    eax,[ebp-0x20]
10011b75:	push   eax
10011b76:	call   0x100113c0
10011b7b:	add    esp,0x4
10011b7e:	lea    ecx,[ebp-0x20]
10011b81:	push   ecx
10011b82:	call   0x10011850
10011b87:	add    esp,0x4
10011b8a:	jmp    0x10011bdb
10011b8c:	lea    ecx,[ebp-0x4c]
10011b8f:	call   0x10007b90
10011b94:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011b9b:	mov    eax,0x10011be2
10011ba0:	ret    
10011ba1:	push   0x1002fbab
10011ba6:	lea    ecx,[ebp-0x68]
10011ba9:	call   0x10002bc0
10011bae:	mov    BYTE PTR [ebp-0x4],0x2
10011bb2:	lea    edx,[ebp-0x68]
10011bb5:	push   edx
10011bb6:	push   0x0
10011bb8:	push   0x4
10011bba:	call   0x1000dcf0
10011bbf:	add    esp,0xc
10011bc2:	mov    BYTE PTR [ebp-0x4],0x1
10011bc6:	lea    ecx,[ebp-0x68]
10011bc9:	call   0x10002c00
10011bce:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011bd5:	mov    eax,0x10011be2
10011bda:	ret    
10011bdb:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011be2:	mov    ecx,DWORD PTR [ebp-0xc]
10011be5:	mov    DWORD PTR fs:0x0,ecx
10011bec:	pop    ecx
10011bed:	pop    edi
10011bee:	pop    esi
10011bef:	pop    ebx
10011bf0:	mov    ecx,DWORD PTR [ebp-0x24]
10011bf3:	xor    ecx,ebp
10011bf5:	call   0x10018773
10011bfa:	mov    esp,ebp
10011bfc:	pop    ebp
10011bfd:	ret    
10011bfe:	int3   
10011bff:	int3   
10011c00:	push   ebp
10011c01:	mov    ebp,esp
10011c03:	push   ecx
10011c04:	mov    DWORD PTR [ebp-0x4],0x0
10011c0b:	mov    ecx,0x100c8d88
10011c10:	call   0x10012130
10011c15:	test   eax,eax
10011c17:	jne    0x10011c2f
10011c19:	mov    ecx,DWORD PTR [ebp+0x8]
10011c1c:	call   0x10002d80
10011c21:	mov    eax,DWORD PTR [ebp-0x4]
10011c24:	or     eax,0x1
10011c27:	mov    DWORD PTR [ebp-0x4],eax
10011c2a:	mov    eax,DWORD PTR [ebp+0x8]
10011c2d:	jmp    0x10011c50
10011c2f:	mov    ecx,DWORD PTR [ebp+0x8]
10011c32:	push   ecx
10011c33:	mov    ecx,0x100c8d88
10011c38:	call   0x10012110
10011c3d:	mov    ecx,eax
10011c3f:	call   0x10011fa0
10011c44:	mov    edx,DWORD PTR [ebp-0x4]
10011c47:	or     edx,0x1
10011c4a:	mov    DWORD PTR [ebp-0x4],edx
10011c4d:	mov    eax,DWORD PTR [ebp+0x8]
10011c50:	mov    esp,ebp
10011c52:	pop    ebp
10011c53:	ret    
10011c54:	int3   
10011c55:	int3   
10011c56:	int3   
10011c57:	int3   
10011c58:	int3   
10011c59:	int3   
10011c5a:	int3   
10011c5b:	int3   
10011c5c:	int3   
10011c5d:	int3   
10011c5e:	int3   
10011c5f:	int3   
10011c60:	push   ebp
10011c61:	mov    ebp,esp
10011c63:	sub    esp,0x8
10011c66:	mov    DWORD PTR [ebp-0x8],0x0
10011c6d:	mov    DWORD PTR [ebp-0x4],0x100c8d88
10011c74:	mov    ecx,DWORD PTR [ebp-0x4]
10011c77:	call   0x10012130
10011c7c:	test   eax,eax
10011c7e:	jne    0x10011c96
10011c80:	mov    ecx,DWORD PTR [ebp+0x8]
10011c83:	call   0x10002d80
10011c88:	mov    eax,DWORD PTR [ebp-0x8]
10011c8b:	or     eax,0x1
10011c8e:	mov    DWORD PTR [ebp-0x8],eax
10011c91:	mov    eax,DWORD PTR [ebp+0x8]
10011c94:	jmp    0x10011cb5
10011c96:	mov    ecx,DWORD PTR [ebp+0x8]
10011c99:	push   ecx
10011c9a:	mov    ecx,DWORD PTR [ebp-0x4]
10011c9d:	call   0x10012110
10011ca2:	mov    ecx,eax
10011ca4:	call   0x10011fa0
10011ca9:	mov    edx,DWORD PTR [ebp-0x8]
10011cac:	or     edx,0x1
10011caf:	mov    DWORD PTR [ebp-0x8],edx
10011cb2:	mov    eax,DWORD PTR [ebp+0x8]
10011cb5:	mov    esp,ebp
10011cb7:	pop    ebp
10011cb8:	ret    
10011cb9:	int3   
10011cba:	int3   
10011cbb:	int3   
10011cbc:	int3   
10011cbd:	int3   
10011cbe:	int3   
10011cbf:	int3   
10011cc0:	push   ebp
10011cc1:	mov    ebp,esp
10011cc3:	push   0xffffffff
10011cc5:	push   0x1002d12b
10011cca:	mov    eax,fs:0x0
10011cd0:	push   eax
10011cd1:	sub    esp,0x18
10011cd4:	mov    eax,ds:0x100c7654
10011cd9:	xor    eax,ebp
10011cdb:	push   eax
10011cdc:	lea    eax,[ebp-0xc]
10011cdf:	mov    fs:0x0,eax
10011ce5:	mov    DWORD PTR [ebp-0x1c],0x0
10011cec:	mov    ecx,0x100c8d88
10011cf1:	call   0x10012130
10011cf6:	test   eax,eax
10011cf8:	jne    0x10011d13
10011cfa:	mov    ecx,DWORD PTR [ebp+0x8]
10011cfd:	call   0x10002d80
10011d02:	mov    eax,DWORD PTR [ebp-0x1c]
10011d05:	or     eax,0x1
10011d08:	mov    DWORD PTR [ebp-0x1c],eax
10011d0b:	mov    eax,DWORD PTR [ebp+0x8]
10011d0e:	jmp    0x10011da9
10011d13:	lea    ecx,[ebp-0x14]
10011d16:	push   ecx
10011d17:	mov    ecx,0x100c8d88
10011d1c:	call   0x10012110
10011d21:	mov    ecx,eax
10011d23:	call   0x10011fa0
10011d28:	mov    DWORD PTR [ebp-0x4],0x0
10011d2f:	push   0x5c
10011d31:	lea    ecx,[ebp-0x14]
10011d34:	call   0x10002fe0
10011d39:	mov    DWORD PTR [ebp-0x10],eax
10011d3c:	cmp    DWORD PTR [ebp-0x10],0xffffffff
10011d40:	je     0x10011d82
10011d42:	lea    ecx,[ebp-0x14]
10011d45:	call   0x10003250
10011d4a:	sub    eax,DWORD PTR [ebp-0x10]
10011d4d:	sub    eax,0x1
10011d50:	push   eax
10011d51:	lea    edx,[ebp-0x18]
10011d54:	push   edx
10011d55:	lea    ecx,[ebp-0x14]
10011d58:	call   0x10003010
10011d5d:	mov    DWORD PTR [ebp-0x20],eax
10011d60:	mov    eax,DWORD PTR [ebp-0x20]
10011d63:	mov    DWORD PTR [ebp-0x24],eax
10011d66:	mov    BYTE PTR [ebp-0x4],0x1
10011d6a:	mov    ecx,DWORD PTR [ebp-0x24]
10011d6d:	push   ecx
10011d6e:	lea    ecx,[ebp-0x14]
10011d71:	call   0x10002f20
10011d76:	mov    BYTE PTR [ebp-0x4],0x0
10011d7a:	lea    ecx,[ebp-0x18]
10011d7d:	call   0x10002f00
10011d82:	lea    edx,[ebp-0x14]
10011d85:	push   edx
10011d86:	mov    ecx,DWORD PTR [ebp+0x8]
10011d89:	call   0x10002da0
10011d8e:	mov    eax,DWORD PTR [ebp-0x1c]
10011d91:	or     eax,0x1
10011d94:	mov    DWORD PTR [ebp-0x1c],eax
10011d97:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011d9e:	lea    ecx,[ebp-0x14]
10011da1:	call   0x10002f00
10011da6:	mov    eax,DWORD PTR [ebp+0x8]
10011da9:	mov    ecx,DWORD PTR [ebp-0xc]
10011dac:	mov    DWORD PTR fs:0x0,ecx
10011db3:	pop    ecx
10011db4:	mov    esp,ebp
10011db6:	pop    ebp
10011db7:	ret    
10011db8:	int3   
10011db9:	int3   
10011dba:	int3   
10011dbb:	int3   
10011dbc:	int3   
10011dbd:	int3   
10011dbe:	int3   
10011dbf:	int3   
10011dc0:	push   ebp
10011dc1:	mov    ebp,esp
10011dc3:	push   0xffffffff
10011dc5:	push   0x1002d156
10011dca:	mov    eax,fs:0x0
10011dd0:	push   eax
10011dd1:	sub    esp,0x1c
10011dd4:	mov    eax,ds:0x100c7654
10011dd9:	xor    eax,ebp
10011ddb:	push   eax
10011ddc:	lea    eax,[ebp-0xc]
10011ddf:	mov    fs:0x0,eax
10011de5:	mov    DWORD PTR [ebp-0x20],0x0
10011dec:	mov    DWORD PTR [ebp-0x14],0x100c8d88
10011df3:	mov    ecx,DWORD PTR [ebp-0x14]
10011df6:	call   0x10012130
10011dfb:	test   eax,eax
10011dfd:	jne    0x10011e18
10011dff:	mov    ecx,DWORD PTR [ebp+0x8]
10011e02:	call   0x10002d80
10011e07:	mov    eax,DWORD PTR [ebp-0x20]
10011e0a:	or     eax,0x1
10011e0d:	mov    DWORD PTR [ebp-0x20],eax
10011e10:	mov    eax,DWORD PTR [ebp+0x8]
10011e13:	jmp    0x10011eac
10011e18:	lea    ecx,[ebp-0x18]
10011e1b:	push   ecx
10011e1c:	mov    ecx,DWORD PTR [ebp-0x14]
10011e1f:	call   0x10012110
10011e24:	mov    ecx,eax
10011e26:	call   0x10011fa0
10011e2b:	mov    DWORD PTR [ebp-0x4],0x0
10011e32:	push   0x5c
10011e34:	lea    ecx,[ebp-0x18]
10011e37:	call   0x10002fe0
10011e3c:	mov    DWORD PTR [ebp-0x10],eax
10011e3f:	cmp    DWORD PTR [ebp-0x10],0xffffffff
10011e43:	je     0x10011e85
10011e45:	lea    ecx,[ebp-0x18]
10011e48:	call   0x10003250
10011e4d:	sub    eax,DWORD PTR [ebp-0x10]
10011e50:	sub    eax,0x1
10011e53:	push   eax
10011e54:	lea    edx,[ebp-0x1c]
10011e57:	push   edx
10011e58:	lea    ecx,[ebp-0x18]
10011e5b:	call   0x10003010
10011e60:	mov    DWORD PTR [ebp-0x24],eax
10011e63:	mov    eax,DWORD PTR [ebp-0x24]
10011e66:	mov    DWORD PTR [ebp-0x28],eax
10011e69:	mov    BYTE PTR [ebp-0x4],0x1
10011e6d:	mov    ecx,DWORD PTR [ebp-0x28]
10011e70:	push   ecx
10011e71:	lea    ecx,[ebp-0x18]
10011e74:	call   0x10002f20
10011e79:	mov    BYTE PTR [ebp-0x4],0x0
10011e7d:	lea    ecx,[ebp-0x1c]
10011e80:	call   0x10002f00
10011e85:	lea    edx,[ebp-0x18]
10011e88:	push   edx
10011e89:	mov    ecx,DWORD PTR [ebp+0x8]
10011e8c:	call   0x10002da0
10011e91:	mov    eax,DWORD PTR [ebp-0x20]
10011e94:	or     eax,0x1
10011e97:	mov    DWORD PTR [ebp-0x20],eax
10011e9a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011ea1:	lea    ecx,[ebp-0x18]
10011ea4:	call   0x10002f00
10011ea9:	mov    eax,DWORD PTR [ebp+0x8]
10011eac:	mov    ecx,DWORD PTR [ebp-0xc]
10011eaf:	mov    DWORD PTR fs:0x0,ecx
10011eb6:	pop    ecx
10011eb7:	mov    esp,ebp
10011eb9:	pop    ebp
10011eba:	ret    
10011ebb:	int3   
10011ebc:	int3   
10011ebd:	int3   
10011ebe:	int3   
10011ebf:	int3   
10011ec0:	push   ebp
10011ec1:	mov    ebp,esp
10011ec3:	push   0xffffffff
10011ec5:	push   0x1002d1a3
10011eca:	mov    eax,fs:0x0
10011ed0:	push   eax
10011ed1:	sub    esp,0x1c
10011ed4:	mov    eax,ds:0x100c7654
10011ed9:	xor    eax,ebp
10011edb:	push   eax
10011edc:	lea    eax,[ebp-0xc]
10011edf:	mov    fs:0x0,eax
10011ee5:	mov    DWORD PTR [ebp-0x18],ecx
10011ee8:	mov    ecx,DWORD PTR [ebp-0x18]
10011eeb:	call   0x10002d80
10011ef0:	mov    DWORD PTR [ebp-0x4],0x0
10011ef7:	mov    ecx,DWORD PTR [ebp-0x18]
10011efa:	add    ecx,0x4
10011efd:	call   0x10002ba0
10011f02:	mov    BYTE PTR [ebp-0x4],0x1
10011f06:	movzx  eax,BYTE PTR [ebp+0xc]
10011f0a:	test   eax,eax
10011f0c:	je     0x10011f47
10011f0e:	mov    cl,BYTE PTR [ebp+0x10]
10011f11:	push   ecx
10011f12:	push   0x1
10011f14:	lea    edx,[ebp-0x10]
10011f17:	push   edx
10011f18:	call   0x10002710
10011f1d:	add    esp,0xc
10011f20:	mov    DWORD PTR [ebp-0x1c],eax
10011f23:	mov    eax,DWORD PTR [ebp-0x1c]
10011f26:	mov    DWORD PTR [ebp-0x20],eax
10011f29:	mov    BYTE PTR [ebp-0x4],0x2
10011f2d:	mov    ecx,DWORD PTR [ebp-0x20]
10011f30:	push   ecx
10011f31:	mov    ecx,DWORD PTR [ebp-0x18]
10011f34:	call   0x10002f20
10011f39:	mov    BYTE PTR [ebp-0x4],0x1
10011f3d:	lea    ecx,[ebp-0x10]
10011f40:	call   0x10002f00
10011f45:	jmp    0x10011f7a
10011f47:	push   0x1
10011f49:	lea    edx,[ebp-0x14]
10011f4c:	push   edx
10011f4d:	call   0x10002860
10011f52:	add    esp,0x8
10011f55:	mov    DWORD PTR [ebp-0x24],eax
10011f58:	mov    eax,DWORD PTR [ebp-0x24]
10011f5b:	mov    DWORD PTR [ebp-0x28],eax
10011f5e:	mov    BYTE PTR [ebp-0x4],0x3
10011f62:	mov    ecx,DWORD PTR [ebp-0x28]
10011f65:	push   ecx
10011f66:	mov    ecx,DWORD PTR [ebp-0x18]
10011f69:	call   0x10002f20
10011f6e:	mov    BYTE PTR [ebp-0x4],0x1
10011f72:	lea    ecx,[ebp-0x14]
10011f75:	call   0x10002f00
10011f7a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10011f81:	mov    eax,DWORD PTR [ebp-0x18]
10011f84:	mov    ecx,DWORD PTR [ebp-0xc]
10011f87:	mov    DWORD PTR fs:0x0,ecx
10011f8e:	pop    ecx
10011f8f:	mov    esp,ebp
10011f91:	pop    ebp
10011f92:	ret    0xc
10011f95:	int3   
10011f96:	int3   
10011f97:	int3   
10011f98:	int3   
10011f99:	int3   
10011f9a:	int3   
10011f9b:	int3   
10011f9c:	int3   
10011f9d:	int3   
10011f9e:	int3   
10011f9f:	int3   
10011fa0:	push   ebp
10011fa1:	mov    ebp,esp
10011fa3:	sub    esp,0x8
10011fa6:	mov    DWORD PTR [ebp-0x8],ecx
10011fa9:	mov    DWORD PTR [ebp-0x4],0x0
10011fb0:	mov    eax,DWORD PTR [ebp-0x8]
10011fb3:	push   eax
10011fb4:	mov    ecx,DWORD PTR [ebp+0x8]
10011fb7:	call   0x10002da0
10011fbc:	mov    ecx,DWORD PTR [ebp-0x4]
10011fbf:	or     ecx,0x1
10011fc2:	mov    DWORD PTR [ebp-0x4],ecx
10011fc5:	mov    eax,DWORD PTR [ebp+0x8]
10011fc8:	mov    esp,ebp
10011fca:	pop    ebp
10011fcb:	ret    0x4
10011fce:	int3   
10011fcf:	int3   
10011fd0:	push   ebp
10011fd1:	mov    ebp,esp
10011fd3:	push   0xffffffff
10011fd5:	push   0x1002d1c8
10011fda:	mov    eax,fs:0x0
10011fe0:	push   eax
10011fe1:	push   ecx
10011fe2:	mov    eax,ds:0x100c7654
10011fe7:	xor    eax,ebp
10011fe9:	push   eax
10011fea:	lea    eax,[ebp-0xc]
10011fed:	mov    fs:0x0,eax
10011ff3:	mov    DWORD PTR [ebp-0x10],ecx
10011ff6:	mov    DWORD PTR [ebp-0x4],0x0
10011ffd:	push   0x4
10011fff:	push   0x0
10012001:	mov    ecx,DWORD PTR [ebp-0x10]
10012004:	call   0x10003340
10012009:	push   eax
1001200a:	call   DWORD PTR ds:0x1002f0bc
10012010:	mov    ecx,DWORD PTR [ebp-0x10]
10012013:	add    ecx,0x4
10012016:	call   0x10002c00
1001201b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012022:	mov    ecx,DWORD PTR [ebp-0x10]
10012025:	call   0x10002f00
1001202a:	mov    ecx,DWORD PTR [ebp-0xc]
1001202d:	mov    DWORD PTR fs:0x0,ecx
10012034:	pop    ecx
10012035:	mov    esp,ebp
10012037:	pop    ebp
10012038:	ret    
10012039:	int3   
1001203a:	int3   
1001203b:	int3   
1001203c:	int3   
1001203d:	int3   
1001203e:	int3   
1001203f:	int3   
10012040:	push   ebp
10012041:	mov    ebp,esp
10012043:	push   ecx
10012044:	mov    DWORD PTR [ebp-0x4],ecx
10012047:	mov    eax,DWORD PTR [ebp-0x4]
1001204a:	mov    DWORD PTR [eax],0x0
10012050:	mov    eax,DWORD PTR [ebp-0x4]
10012053:	mov    esp,ebp
10012055:	pop    ebp
10012056:	ret    
10012057:	int3   
10012058:	int3   
10012059:	int3   
1001205a:	int3   
1001205b:	int3   
1001205c:	int3   
1001205d:	int3   
1001205e:	int3   
1001205f:	int3   
10012060:	push   ebp
10012061:	mov    ebp,esp
10012063:	push   ecx
10012064:	mov    DWORD PTR [ebp-0x4],ecx
10012067:	mov    ecx,DWORD PTR [ebp-0x4]
1001206a:	call   0x10006f40
1001206f:	mov    esp,ebp
10012071:	pop    ebp
10012072:	ret    
10012073:	int3   
10012074:	int3   
10012075:	int3   
10012076:	int3   
10012077:	int3   
10012078:	int3   
10012079:	int3   
1001207a:	int3   
1001207b:	int3   
1001207c:	int3   
1001207d:	int3   
1001207e:	int3   
1001207f:	int3   
10012080:	push   ebp
10012081:	mov    ebp,esp
10012083:	sub    esp,0xc
10012086:	mov    DWORD PTR [ebp-0x8],ecx
10012089:	mov    eax,DWORD PTR [ebp+0xc]
1001208c:	push   eax
1001208d:	mov    ecx,DWORD PTR [ebp+0x8]
10012090:	push   ecx
10012091:	call   0x10006f10
10012096:	add    esp,0x8
10012099:	mov    DWORD PTR [ebp-0xc],eax
1001209c:	cmp    DWORD PTR [ebp-0xc],0x0
100120a0:	je     0x100120b3
100120a2:	cmp    DWORD PTR [ebp-0xc],0x1
100120a6:	je     0x100120c4
100120a8:	cmp    DWORD PTR [ebp-0xc],0x102
100120af:	je     0x100120cd
100120b1:	jmp    0x100120d6
100120b3:	mov    edx,DWORD PTR [ebp-0x8]
100120b6:	mov    eax,DWORD PTR [ebp+0x8]
100120b9:	mov    DWORD PTR [edx],eax
100120bb:	mov    DWORD PTR [ebp-0x4],0x0
100120c2:	jmp    0x100120dd
100120c4:	mov    DWORD PTR [ebp-0x4],0x1
100120cb:	jmp    0x100120dd
100120cd:	mov    DWORD PTR [ebp-0x4],0x2
100120d4:	jmp    0x100120dd
100120d6:	mov    DWORD PTR [ebp-0x4],0x3
100120dd:	mov    eax,DWORD PTR [ebp-0x4]
100120e0:	mov    esp,ebp
100120e2:	pop    ebp
100120e3:	ret    0x8
100120e6:	int3   
100120e7:	int3   
100120e8:	int3   
100120e9:	int3   
100120ea:	int3   
100120eb:	int3   
100120ec:	int3   
100120ed:	int3   
100120ee:	int3   
100120ef:	int3   
100120f0:	push   ebp
100120f1:	mov    ebp,esp
100120f3:	push   ecx
100120f4:	mov    DWORD PTR [ebp-0x4],ecx
100120f7:	mov    eax,DWORD PTR [ebp-0x4]
100120fa:	xor    ecx,ecx
100120fc:	cmp    DWORD PTR [eax+0x14],0x0
10012100:	sete   cl
10012103:	mov    al,cl
10012105:	mov    esp,ebp
10012107:	pop    ebp
10012108:	ret    
10012109:	int3   
1001210a:	int3   
1001210b:	int3   
1001210c:	int3   
1001210d:	int3   
1001210e:	int3   
1001210f:	int3   
10012110:	push   ebp
10012111:	mov    ebp,esp
10012113:	push   ecx
10012114:	mov    DWORD PTR [ebp-0x4],ecx
10012117:	mov    ecx,DWORD PTR [ebp-0x4]
1001211a:	call   0x10012130
1001211f:	mov    esp,ebp
10012121:	pop    ebp
10012122:	ret    
10012123:	int3   
10012124:	int3   
10012125:	int3   
10012126:	int3   
10012127:	int3   
10012128:	int3   
10012129:	int3   
1001212a:	int3   
1001212b:	int3   
1001212c:	int3   
1001212d:	int3   
1001212e:	int3   
1001212f:	int3   
10012130:	push   ebp
10012131:	mov    ebp,esp
10012133:	push   ecx
10012134:	mov    DWORD PTR [ebp-0x4],ecx
10012137:	mov    eax,DWORD PTR [ebp-0x4]
1001213a:	mov    eax,DWORD PTR [eax]
1001213c:	mov    esp,ebp
1001213e:	pop    ebp
1001213f:	ret    
10012140:	push   ebp
10012141:	mov    ebp,esp
10012143:	sub    esp,0x10
10012146:	mov    DWORD PTR [ebp-0xc],ecx
10012149:	mov    eax,DWORD PTR [ebp-0xc]
1001214c:	mov    ecx,DWORD PTR [ebp+0x8]
1001214f:	cmp    ecx,DWORD PTR [eax]
10012151:	je     0x1001217d
10012153:	mov    edx,DWORD PTR [ebp-0xc]
10012156:	mov    eax,DWORD PTR [edx]
10012158:	mov    DWORD PTR [ebp-0x8],eax
1001215b:	mov    ecx,DWORD PTR [ebp-0x8]
1001215e:	mov    DWORD PTR [ebp-0x4],ecx
10012161:	cmp    DWORD PTR [ebp-0x4],0x0
10012165:	je     0x10012176
10012167:	push   0x1
10012169:	mov    ecx,DWORD PTR [ebp-0x4]
1001216c:	call   0x10012190
10012171:	mov    DWORD PTR [ebp-0x10],eax
10012174:	jmp    0x1001217d
10012176:	mov    DWORD PTR [ebp-0x10],0x0
1001217d:	mov    edx,DWORD PTR [ebp-0xc]
10012180:	mov    eax,DWORD PTR [ebp+0x8]
10012183:	mov    DWORD PTR [edx],eax
10012185:	mov    esp,ebp
10012187:	pop    ebp
10012188:	ret    0x4
1001218b:	int3   
1001218c:	int3   
1001218d:	int3   
1001218e:	int3   
1001218f:	int3   
10012190:	push   ebp
10012191:	mov    ebp,esp
10012193:	push   ecx
10012194:	mov    DWORD PTR [ebp-0x4],ecx
10012197:	mov    ecx,DWORD PTR [ebp-0x4]
1001219a:	call   0x10011fd0
1001219f:	mov    eax,DWORD PTR [ebp+0x8]
100121a2:	and    eax,0x1
100121a5:	je     0x100121b3
100121a7:	mov    ecx,DWORD PTR [ebp-0x4]
100121aa:	push   ecx
100121ab:	call   0x1001876e
100121b0:	add    esp,0x4
100121b3:	mov    eax,DWORD PTR [ebp-0x4]
100121b6:	mov    esp,ebp
100121b8:	pop    ebp
100121b9:	ret    0x4
100121bc:	int3   
100121bd:	int3   
100121be:	int3   
100121bf:	int3   
100121c0:	push   ebp
100121c1:	mov    ebp,esp
100121c3:	push   ecx
100121c4:	mov    DWORD PTR [ebp-0x4],ecx
100121c7:	mov    eax,DWORD PTR [ebp-0x4]
100121ca:	mov    ecx,DWORD PTR [ebp+0x8]
100121cd:	mov    DWORD PTR [eax],ecx
100121cf:	mov    eax,DWORD PTR [ebp-0x4]
100121d2:	mov    esp,ebp
100121d4:	pop    ebp
100121d5:	ret    0x4
100121d8:	int3   
100121d9:	int3   
100121da:	int3   
100121db:	int3   
100121dc:	int3   
100121dd:	int3   
100121de:	int3   
100121df:	int3   
100121e0:	push   ebp
100121e1:	mov    ebp,esp
100121e3:	sub    esp,0x10
100121e6:	mov    DWORD PTR [ebp-0xc],ecx
100121e9:	mov    eax,DWORD PTR [ebp-0xc]
100121ec:	mov    ecx,DWORD PTR [eax]
100121ee:	mov    DWORD PTR [ebp-0x8],ecx
100121f1:	mov    edx,DWORD PTR [ebp-0x8]
100121f4:	mov    DWORD PTR [ebp-0x4],edx
100121f7:	cmp    DWORD PTR [ebp-0x4],0x0
100121fb:	je     0x1001220c
100121fd:	push   0x1
100121ff:	mov    ecx,DWORD PTR [ebp-0x4]
10012202:	call   0x10012190
10012207:	mov    DWORD PTR [ebp-0x10],eax
1001220a:	jmp    0x10012213
1001220c:	mov    DWORD PTR [ebp-0x10],0x0
10012213:	mov    esp,ebp
10012215:	pop    ebp
10012216:	ret    
10012217:	int3   
10012218:	int3   
10012219:	int3   
1001221a:	int3   
1001221b:	int3   
1001221c:	int3   
1001221d:	int3   
1001221e:	int3   
1001221f:	int3   
10012220:	push   ebp
10012221:	mov    ebp,esp
10012223:	push   0xffffffff
10012225:	push   0x1002d1f8
1001222a:	mov    eax,fs:0x0
10012230:	push   eax
10012231:	push   ecx
10012232:	mov    eax,ds:0x100c7654
10012237:	xor    eax,ebp
10012239:	push   eax
1001223a:	lea    eax,[ebp-0xc]
1001223d:	mov    fs:0x0,eax
10012243:	cmp    DWORD PTR [ebp+0x8],0x40
10012247:	jg     0x1001224f
10012249:	cmp    DWORD PTR [ebp+0x8],0x0
1001224d:	jge    0x10012251
1001224f:	jmp    0x100122ab
10012251:	lea    ecx,[ebp-0x10]
10012254:	call   0x10012040
10012259:	mov    DWORD PTR [ebp-0x4],0x0
10012260:	push   0xffffffff
10012262:	mov    eax,ds:0x100c8eb4
10012267:	push   eax
10012268:	lea    ecx,[ebp-0x10]
1001226b:	call   0x10012080
10012270:	test   eax,eax
10012272:	je     0x10012285
10012274:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001227b:	lea    ecx,[ebp-0x10]
1001227e:	call   0x10012060
10012283:	jmp    0x100122ab
10012285:	mov    ecx,DWORD PTR [ebp+0x8]
10012288:	mov    edx,DWORD PTR [ecx*4+0x100c8db0]
1001228f:	add    edx,0x1
10012292:	mov    eax,DWORD PTR [ebp+0x8]
10012295:	mov    DWORD PTR [eax*4+0x100c8db0],edx
1001229c:	mov    DWORD PTR [ebp-0x4],0xffffffff
100122a3:	lea    ecx,[ebp-0x10]
100122a6:	call   0x10012060
100122ab:	mov    ecx,DWORD PTR [ebp-0xc]
100122ae:	mov    DWORD PTR fs:0x0,ecx
100122b5:	pop    ecx
100122b6:	mov    esp,ebp
100122b8:	pop    ebp
100122b9:	ret    
100122ba:	int3   
100122bb:	int3   
100122bc:	int3   
100122bd:	int3   
100122be:	int3   
100122bf:	int3   
100122c0:	push   ebp
100122c1:	mov    ebp,esp
100122c3:	push   0xffffffff
100122c5:	push   0x1002d21b
100122ca:	mov    eax,fs:0x0
100122d0:	push   eax
100122d1:	sub    esp,0xc
100122d4:	mov    eax,ds:0x100c7654
100122d9:	xor    eax,ebp
100122db:	push   eax
100122dc:	lea    eax,[ebp-0xc]
100122df:	mov    fs:0x0,eax
100122e5:	cmp    DWORD PTR [ebp+0x8],0x40
100122e9:	jg     0x100122f1
100122eb:	cmp    DWORD PTR [ebp+0x8],0x0
100122ef:	jge    0x100122f5
100122f1:	xor    eax,eax
100122f3:	jmp    0x10012352
100122f5:	lea    ecx,[ebp-0x10]
100122f8:	call   0x10012040
100122fd:	mov    DWORD PTR [ebp-0x4],0x0
10012304:	push   0xffffffff
10012306:	mov    eax,ds:0x100c8eb4
1001230b:	push   eax
1001230c:	lea    ecx,[ebp-0x10]
1001230f:	call   0x10012080
10012314:	test   eax,eax
10012316:	je     0x10012333
10012318:	mov    DWORD PTR [ebp-0x14],0x0
1001231f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012326:	lea    ecx,[ebp-0x10]
10012329:	call   0x10012060
1001232e:	mov    eax,DWORD PTR [ebp-0x14]
10012331:	jmp    0x10012352
10012333:	mov    ecx,DWORD PTR [ebp+0x8]
10012336:	mov    edx,DWORD PTR [ecx*4+0x100c8db0]
1001233d:	mov    DWORD PTR [ebp-0x18],edx
10012340:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012347:	lea    ecx,[ebp-0x10]
1001234a:	call   0x10012060
1001234f:	mov    eax,DWORD PTR [ebp-0x18]
10012352:	mov    ecx,DWORD PTR [ebp-0xc]
10012355:	mov    DWORD PTR fs:0x0,ecx
1001235c:	pop    ecx
1001235d:	mov    esp,ebp
1001235f:	pop    ebp
10012360:	ret    
10012361:	int3   
10012362:	int3   
10012363:	int3   
10012364:	int3   
10012365:	int3   
10012366:	int3   
10012367:	int3   
10012368:	int3   
10012369:	int3   
1001236a:	int3   
1001236b:	int3   
1001236c:	int3   
1001236d:	int3   
1001236e:	int3   
1001236f:	int3   
10012370:	push   ebp
10012371:	mov    ebp,esp
10012373:	push   ecx
10012374:	mov    DWORD PTR [ebp-0x4],ecx
10012377:	push   0x100
1001237c:	push   0x0
1001237e:	push   0x100c8db0
10012383:	call   0x100191d0
10012388:	add    esp,0xc
1001238b:	mov    eax,DWORD PTR [ebp-0x4]
1001238e:	mov    esp,ebp
10012390:	pop    ebp
10012391:	ret    
10012392:	int3   
10012393:	int3   
10012394:	int3   
10012395:	int3   
10012396:	int3   
10012397:	int3   
10012398:	int3   
10012399:	int3   
1001239a:	int3   
1001239b:	int3   
1001239c:	int3   
1001239d:	int3   
1001239e:	int3   
1001239f:	int3   
100123a0:	push   ebp
100123a1:	mov    ebp,esp
100123a3:	sub    esp,0x30
100123a6:	lea    eax,[ebp-0x8]
100123a9:	push   eax
100123aa:	mov    ecx,0x100c8ebc
100123af:	call   0x10012580
100123b4:	call   0x10001b00
100123b9:	mov    DWORD PTR [ebp-0x18],eax
100123bc:	mov    DWORD PTR [ebp-0x14],edx
100123bf:	mov    ecx,DWORD PTR [ebp-0x18]
100123c2:	mov    DWORD PTR [ebp-0x10],ecx
100123c5:	mov    edx,DWORD PTR [ebp-0x14]
100123c8:	mov    DWORD PTR [ebp-0xc],edx
100123cb:	lea    eax,[ebp-0x20]
100123ce:	push   eax
100123cf:	mov    ecx,0x100c8ebc
100123d4:	call   0x100125b0
100123d9:	push   eax
100123da:	lea    ecx,[ebp-0x8]
100123dd:	call   0x10013080
100123e2:	movzx  ecx,al
100123e5:	test   ecx,ecx
100123e7:	je     0x10012445
100123e9:	lea    ecx,[ebp-0x8]
100123ec:	call   0x10013000
100123f1:	mov    edx,DWORD PTR [eax+0x8]
100123f4:	add    edx,0x23c34600
100123fa:	mov    eax,DWORD PTR [eax+0xc]
100123fd:	adc    eax,0x0
10012400:	mov    DWORD PTR [ebp-0x30],edx
10012403:	mov    DWORD PTR [ebp-0x2c],eax
10012406:	mov    ecx,DWORD PTR [ebp-0x2c]
10012409:	cmp    ecx,DWORD PTR [ebp-0xc]
1001240c:	ja     0x1001243b
1001240e:	jb     0x10012418
10012410:	mov    edx,DWORD PTR [ebp-0x30]
10012413:	cmp    edx,DWORD PTR [ebp-0x10]
10012416:	jae    0x1001243b
10012418:	mov    eax,DWORD PTR [ebp-0x4]
1001241b:	push   eax
1001241c:	mov    ecx,DWORD PTR [ebp-0x8]
1001241f:	push   ecx
10012420:	lea    edx,[ebp-0x28]
10012423:	push   edx
10012424:	mov    ecx,0x100c8ebc
10012429:	call   0x100127a0
1001242e:	mov    ecx,DWORD PTR [eax]
10012430:	mov    edx,DWORD PTR [eax+0x4]
10012433:	mov    DWORD PTR [ebp-0x8],ecx
10012436:	mov    DWORD PTR [ebp-0x4],edx
10012439:	jmp    0x10012443
1001243b:	lea    ecx,[ebp-0x8]
1001243e:	call   0x10013020
10012443:	jmp    0x100123cb
10012445:	mov    esp,ebp
10012447:	pop    ebp
10012448:	ret    
10012449:	int3   
1001244a:	int3   
1001244b:	int3   
1001244c:	int3   
1001244d:	int3   
1001244e:	int3   
1001244f:	int3   
10012450:	push   ebp
10012451:	mov    ebp,esp
10012453:	push   0xffffffff
10012455:	push   0x1002d248
1001245a:	mov    eax,fs:0x0
10012460:	push   eax
10012461:	sub    esp,0x58
10012464:	mov    eax,ds:0x100c7654
10012469:	xor    eax,ebp
1001246b:	push   eax
1001246c:	lea    eax,[ebp-0xc]
1001246f:	mov    fs:0x0,eax
10012475:	cmp    DWORD PTR [ebp+0xc],0x4
10012479:	je     0x10012482
1001247b:	xor    al,al
1001247d:	jmp    0x1001256a
10012482:	mov    eax,DWORD PTR [ebp+0x8]
10012485:	mov    ecx,DWORD PTR [eax]
10012487:	mov    DWORD PTR [ebp-0x1c],ecx
1001248a:	mov    edx,DWORD PTR [ebp+0x8]
1001248d:	mov    DWORD PTR [ebp-0x20],edx
10012490:	mov    eax,DWORD PTR [ebp-0x20]
10012493:	mov    DWORD PTR [eax],0x0
10012499:	lea    ecx,[ebp-0x18]
1001249c:	call   0x10012040
100124a1:	mov    DWORD PTR [ebp-0x4],0x0
100124a8:	push   0xffffffff
100124aa:	mov    ecx,DWORD PTR ds:0x100c8eb8
100124b0:	push   ecx
100124b1:	lea    ecx,[ebp-0x18]
100124b4:	call   0x10012080
100124b9:	test   eax,eax
100124bb:	je     0x100124d8
100124bd:	mov    BYTE PTR [ebp-0x21],0x0
100124c1:	mov    DWORD PTR [ebp-0x4],0xffffffff
100124c8:	lea    ecx,[ebp-0x18]
100124cb:	call   0x10012060
100124d0:	mov    al,BYTE PTR [ebp-0x21]
100124d3:	jmp    0x1001256a
100124d8:	call   0x100123a0
100124dd:	lea    edx,[ebp-0x1c]
100124e0:	push   edx
100124e1:	lea    eax,[ebp-0x14]
100124e4:	push   eax
100124e5:	mov    ecx,0x100c8ebc
100124ea:	call   0x10012f70
100124ef:	lea    ecx,[ebp-0x2c]
100124f2:	push   ecx
100124f3:	mov    ecx,0x100c8ebc
100124f8:	call   0x100125b0
100124fd:	push   eax
100124fe:	lea    ecx,[ebp-0x14]
10012501:	call   0x10013040
10012506:	movzx  edx,al
10012509:	test   edx,edx
1001250b:	je     0x10012516
1001250d:	mov    eax,DWORD PTR [ebp-0x20]
10012510:	mov    DWORD PTR [eax],0x1
10012516:	call   0x10001b00
1001251b:	mov    DWORD PTR [ebp-0x44],eax
1001251e:	mov    DWORD PTR [ebp-0x40],edx
10012521:	mov    ecx,DWORD PTR [ebp-0x40]
10012524:	push   ecx
10012525:	mov    edx,DWORD PTR [ebp-0x44]
10012528:	push   edx
10012529:	mov    eax,DWORD PTR [ebp-0x1c]
1001252c:	push   eax
1001252d:	lea    ecx,[ebp-0x54]
10012530:	push   ecx
10012531:	call   0x10013f00
10012536:	add    esp,0x10
10012539:	push   eax
1001253a:	lea    ecx,[ebp-0x3c]
1001253d:	call   0x10013f20
10012542:	lea    edx,[ebp-0x3c]
10012545:	push   edx
10012546:	lea    eax,[ebp-0x60]
10012549:	push   eax
1001254a:	mov    ecx,0x100c8ebc
1001254f:	call   0x100125e0
10012554:	mov    BYTE PTR [ebp-0x61],0x1
10012558:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001255f:	lea    ecx,[ebp-0x18]
10012562:	call   0x10012060
10012567:	mov    al,BYTE PTR [ebp-0x61]
1001256a:	mov    ecx,DWORD PTR [ebp-0xc]
1001256d:	mov    DWORD PTR fs:0x0,ecx
10012574:	pop    ecx
10012575:	mov    esp,ebp
10012577:	pop    ebp
10012578:	ret    
10012579:	int3   
1001257a:	int3   
1001257b:	int3   
1001257c:	int3   
1001257d:	int3   
1001257e:	int3   
1001257f:	int3   
10012580:	push   ebp
10012581:	mov    ebp,esp
10012583:	push   ecx
10012584:	mov    DWORD PTR [ebp-0x4],ecx
10012587:	mov    eax,DWORD PTR [ebp-0x4]
1001258a:	push   eax
1001258b:	mov    ecx,DWORD PTR [ebp-0x4]
1001258e:	call   0x100135d0
10012593:	mov    ecx,DWORD PTR [eax]
10012595:	push   ecx
10012596:	mov    ecx,DWORD PTR [ebp+0x8]
10012599:	call   0x10013950
1001259e:	mov    eax,DWORD PTR [ebp+0x8]
100125a1:	mov    esp,ebp
100125a3:	pop    ebp
100125a4:	ret    0x4
100125a7:	int3   
100125a8:	int3   
100125a9:	int3   
100125aa:	int3   
100125ab:	int3   
100125ac:	int3   
100125ad:	int3   
100125ae:	int3   
100125af:	int3   
100125b0:	push   ebp
100125b1:	mov    ebp,esp
100125b3:	push   ecx
100125b4:	mov    DWORD PTR [ebp-0x4],ecx
100125b7:	mov    eax,DWORD PTR [ebp-0x4]
100125ba:	push   eax
100125bb:	mov    ecx,DWORD PTR [ebp-0x4]
100125be:	mov    edx,DWORD PTR [ecx+0x4]
100125c1:	push   edx
100125c2:	mov    ecx,DWORD PTR [ebp+0x8]
100125c5:	call   0x10013950
100125ca:	mov    eax,DWORD PTR [ebp+0x8]
100125cd:	mov    esp,ebp
100125cf:	pop    ebp
100125d0:	ret    0x4
100125d3:	int3   
100125d4:	int3   
100125d5:	int3   
100125d6:	int3   
100125d7:	int3   
100125d8:	int3   
100125d9:	int3   
100125da:	int3   
100125db:	int3   
100125dc:	int3   
100125dd:	int3   
100125de:	int3   
100125df:	int3   
100125e0:	push   ebp
100125e1:	mov    ebp,esp
100125e3:	sub    esp,0x4c
100125e6:	mov    DWORD PTR [ebp-0x48],ecx
100125e9:	mov    ecx,DWORD PTR [ebp-0x48]
100125ec:	call   0x100137c0
100125f1:	mov    eax,DWORD PTR [eax]
100125f3:	mov    DWORD PTR [ebp-0xc],eax
100125f6:	mov    ecx,DWORD PTR [ebp-0x48]
100125f9:	mov    edx,DWORD PTR [ecx+0x4]
100125fc:	mov    DWORD PTR [ebp-0x8],edx
100125ff:	mov    BYTE PTR [ebp-0x1],0x1
10012603:	mov    eax,DWORD PTR [ebp-0xc]
10012606:	push   eax
10012607:	call   0x100130c0
1001260c:	add    esp,0x4
1001260f:	movsx  ecx,BYTE PTR [eax]
10012612:	test   ecx,ecx
10012614:	jne    0x10012675
10012616:	mov    edx,DWORD PTR [ebp-0xc]
10012619:	mov    DWORD PTR [ebp-0x8],edx
1001261c:	mov    eax,DWORD PTR [ebp-0xc]
1001261f:	push   eax
10012620:	call   0x100130d0
10012625:	add    esp,0x4
10012628:	push   eax
10012629:	mov    ecx,DWORD PTR [ebp+0xc]
1001262c:	push   ecx
1001262d:	call   0x100130f0
10012632:	add    esp,0x4
10012635:	push   eax
10012636:	mov    ecx,DWORD PTR [ebp-0x48]
10012639:	call   0x10013910
1001263e:	mov    BYTE PTR [ebp-0x1],al
10012641:	movzx  edx,BYTE PTR [ebp-0x1]
10012645:	test   edx,edx
10012647:	je     0x1001265c
10012649:	mov    eax,DWORD PTR [ebp-0xc]
1001264c:	push   eax
1001264d:	call   0x100130f0
10012652:	add    esp,0x4
10012655:	mov    ecx,DWORD PTR [eax]
10012657:	mov    DWORD PTR [ebp-0x4c],ecx
1001265a:	jmp    0x1001266d
1001265c:	mov    edx,DWORD PTR [ebp-0xc]
1001265f:	push   edx
10012660:	call   0x10013110
10012665:	add    esp,0x4
10012668:	mov    eax,DWORD PTR [eax]
1001266a:	mov    DWORD PTR [ebp-0x4c],eax
1001266d:	mov    ecx,DWORD PTR [ebp-0x4c]
10012670:	mov    DWORD PTR [ebp-0xc],ecx
10012673:	jmp    0x10012603
10012675:	xor    edx,edx
10012677:	je     0x100126af
10012679:	mov    BYTE PTR [ebp-0x15],0x1
1001267d:	lea    eax,[ebp-0x15]
10012680:	push   eax
10012681:	mov    ecx,DWORD PTR [ebp+0xc]
10012684:	push   ecx
10012685:	mov    edx,DWORD PTR [ebp-0x8]
10012688:	push   edx
10012689:	mov    al,BYTE PTR [ebp-0x1]
1001268c:	push   eax
1001268d:	lea    ecx,[ebp-0x20]
10012690:	push   ecx
10012691:	mov    ecx,DWORD PTR [ebp-0x48]
10012694:	call   0x10013150
10012699:	push   eax
1001269a:	mov    ecx,DWORD PTR [ebp+0x8]
1001269d:	call   0x10013a10
100126a2:	mov    eax,DWORD PTR [ebp+0x8]
100126a5:	jmp    0x10012790
100126aa:	jmp    0x10012790
100126af:	mov    edx,DWORD PTR [ebp-0x48]
100126b2:	push   edx
100126b3:	mov    eax,DWORD PTR [ebp-0x8]
100126b6:	push   eax
100126b7:	lea    ecx,[ebp-0x14]
100126ba:	call   0x10013950
100126bf:	movzx  ecx,BYTE PTR [ebp-0x1]
100126c3:	test   ecx,ecx
100126c5:	jne    0x100126c9
100126c7:	jmp    0x1001271b
100126c9:	lea    edx,[ebp-0x28]
100126cc:	push   edx
100126cd:	mov    ecx,DWORD PTR [ebp-0x48]
100126d0:	call   0x10012580
100126d5:	push   eax
100126d6:	lea    ecx,[ebp-0x14]
100126d9:	call   0x10013040
100126de:	movzx  eax,al
100126e1:	test   eax,eax
100126e3:	je     0x10012713
100126e5:	mov    BYTE PTR [ebp-0x29],0x1
100126e9:	lea    ecx,[ebp-0x29]
100126ec:	push   ecx
100126ed:	mov    edx,DWORD PTR [ebp+0xc]
100126f0:	push   edx
100126f1:	mov    eax,DWORD PTR [ebp-0x8]
100126f4:	push   eax
100126f5:	push   0x1
100126f7:	lea    ecx,[ebp-0x34]
100126fa:	push   ecx
100126fb:	mov    ecx,DWORD PTR [ebp-0x48]
100126fe:	call   0x10013150
10012703:	push   eax
10012704:	mov    ecx,DWORD PTR [ebp+0x8]
10012707:	call   0x10013a10
1001270c:	mov    eax,DWORD PTR [ebp+0x8]
1001270f:	jmp    0x10012790
10012711:	jmp    0x1001271b
10012713:	lea    ecx,[ebp-0x14]
10012716:	call   0x10013970
1001271b:	mov    edx,DWORD PTR [ebp+0xc]
1001271e:	push   edx
1001271f:	call   0x100130f0
10012724:	add    esp,0x4
10012727:	push   eax
10012728:	lea    ecx,[ebp-0x14]
1001272b:	call   0x100139f0
10012730:	push   eax
10012731:	call   0x100130d0
10012736:	add    esp,0x4
10012739:	push   eax
1001273a:	mov    ecx,DWORD PTR [ebp-0x48]
1001273d:	call   0x10013910
10012742:	movzx  eax,al
10012745:	test   eax,eax
10012747:	je     0x10012779
10012749:	mov    BYTE PTR [ebp-0x35],0x1
1001274d:	lea    ecx,[ebp-0x35]
10012750:	push   ecx
10012751:	mov    edx,DWORD PTR [ebp+0xc]
10012754:	push   edx
10012755:	mov    eax,DWORD PTR [ebp-0x8]
10012758:	push   eax
10012759:	mov    cl,BYTE PTR [ebp-0x1]
1001275c:	push   ecx
1001275d:	lea    edx,[ebp-0x40]
10012760:	push   edx
10012761:	mov    ecx,DWORD PTR [ebp-0x48]
10012764:	call   0x10013150
10012769:	push   eax
1001276a:	mov    ecx,DWORD PTR [ebp+0x8]
1001276d:	call   0x10013a10
10012772:	mov    eax,DWORD PTR [ebp+0x8]
10012775:	jmp    0x10012790
10012777:	jmp    0x10012790
10012779:	mov    BYTE PTR [ebp-0x41],0x0
1001277d:	lea    eax,[ebp-0x41]
10012780:	push   eax
10012781:	lea    ecx,[ebp-0x14]
10012784:	push   ecx
10012785:	mov    ecx,DWORD PTR [ebp+0x8]
10012788:	call   0x10013a10
1001278d:	mov    eax,DWORD PTR [ebp+0x8]
10012790:	mov    esp,ebp
10012792:	pop    ebp
10012793:	ret    0x8
10012796:	int3   
10012797:	int3   
10012798:	int3   
10012799:	int3   
1001279a:	int3   
1001279b:	int3   
1001279c:	int3   
1001279d:	int3   
1001279e:	int3   
1001279f:	int3   
100127a0:	push   ebp
100127a1:	mov    ebp,esp
100127a3:	push   0xffffffff
100127a5:	push   0x1002d278
100127aa:	mov    eax,fs:0x0
100127b0:	push   eax
100127b1:	sub    esp,0x60
100127b4:	push   esi
100127b5:	mov    eax,ds:0x100c7654
100127ba:	xor    eax,ebp
100127bc:	push   eax
100127bd:	lea    eax,[ebp-0xc]
100127c0:	mov    fs:0x0,eax
100127c6:	mov    DWORD PTR [ebp-0x64],ecx
100127c9:	lea    ecx,[ebp+0xc]
100127cc:	call   0x100139f0
100127d1:	push   eax
100127d2:	call   0x100130c0
100127d7:	add    esp,0x4
100127da:	movsx  eax,BYTE PTR [eax]
100127dd:	test   eax,eax
100127df:	je     0x1001281e
100127e1:	push   0x100b7e30
100127e6:	lea    ecx,[ebp-0x60]
100127e9:	call   0x10002bc0
100127ee:	mov    DWORD PTR [ebp-0x4],0x0
100127f5:	lea    ecx,[ebp-0x60]
100127f8:	push   ecx
100127f9:	lea    ecx,[ebp-0x44]
100127fc:	call   0x100014a0
10012801:	push   0x100bb9d8
10012806:	lea    edx,[ebp-0x44]
10012809:	push   edx
1001280a:	call   0x10018e6e
1001280f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10012816:	lea    ecx,[ebp-0x60]
10012819:	call   0x10002c00
1001281e:	lea    ecx,[ebp+0xc]
10012821:	call   0x100139f0
10012826:	mov    DWORD PTR [ebp-0x10],eax
10012829:	lea    ecx,[ebp+0xc]
1001282c:	call   0x10013020
10012831:	mov    eax,DWORD PTR [ebp-0x10]
10012834:	mov    DWORD PTR [ebp-0x18],eax
10012837:	mov    ecx,DWORD PTR [ebp-0x18]
1001283a:	push   ecx
1001283b:	call   0x100130f0
10012840:	add    esp,0x4
10012843:	mov    edx,DWORD PTR [eax]
10012845:	push   edx
10012846:	call   0x100130c0
1001284b:	add    esp,0x4
1001284e:	movsx  eax,BYTE PTR [eax]
10012851:	test   eax,eax
10012853:	je     0x10012868
10012855:	mov    ecx,DWORD PTR [ebp-0x18]
10012858:	push   ecx
10012859:	call   0x10013110
1001285e:	add    esp,0x4
10012861:	mov    edx,DWORD PTR [eax]
10012863:	mov    DWORD PTR [ebp-0x14],edx
10012866:	jmp    0x100128b5
10012868:	mov    eax,DWORD PTR [ebp-0x18]
1001286b:	push   eax
1001286c:	call   0x10013110
10012871:	add    esp,0x4
10012874:	mov    ecx,DWORD PTR [eax]
10012876:	push   ecx
10012877:	call   0x100130c0
1001287c:	add    esp,0x4
1001287f:	movsx  edx,BYTE PTR [eax]
10012882:	test   edx,edx
10012884:	je     0x10012899
10012886:	mov    eax,DWORD PTR [ebp-0x18]
10012889:	push   eax
1001288a:	call   0x100130f0
1001288f:	add    esp,0x4
10012892:	mov    ecx,DWORD PTR [eax]
10012894:	mov    DWORD PTR [ebp-0x14],ecx
10012897:	jmp    0x100128b5
10012899:	lea    ecx,[ebp+0xc]
1001289c:	call   0x100139f0
100128a1:	mov    DWORD PTR [ebp-0x18],eax
100128a4:	mov    edx,DWORD PTR [ebp-0x18]
100128a7:	push   edx
100128a8:	call   0x10013110
100128ad:	add    esp,0x4
100128b0:	mov    eax,DWORD PTR [eax]
100128b2:	mov    DWORD PTR [ebp-0x14],eax
100128b5:	mov    ecx,DWORD PTR [ebp-0x18]
100128b8:	cmp    ecx,DWORD PTR [ebp-0x10]
100128bb:	jne    0x100129dc
100128c1:	mov    edx,DWORD PTR [ebp-0x10]
100128c4:	push   edx
100128c5:	call   0x10013100
100128ca:	add    esp,0x4
100128cd:	mov    eax,DWORD PTR [eax]
100128cf:	mov    DWORD PTR [ebp-0x1c],eax
100128d2:	mov    ecx,DWORD PTR [ebp-0x14]
100128d5:	push   ecx
100128d6:	call   0x100130c0
100128db:	add    esp,0x4
100128de:	movsx  edx,BYTE PTR [eax]
100128e1:	test   edx,edx
100128e3:	jne    0x100128f6
100128e5:	mov    eax,DWORD PTR [ebp-0x14]
100128e8:	push   eax
100128e9:	call   0x10013100
100128ee:	add    esp,0x4
100128f1:	mov    ecx,DWORD PTR [ebp-0x1c]
100128f4:	mov    DWORD PTR [eax],ecx
100128f6:	mov    ecx,DWORD PTR [ebp-0x64]
100128f9:	call   0x100137c0
100128fe:	mov    edx,DWORD PTR [eax]
10012900:	cmp    edx,DWORD PTR [ebp-0x10]
10012903:	jne    0x10012914
10012905:	mov    ecx,DWORD PTR [ebp-0x64]
10012908:	call   0x100137c0
1001290d:	mov    ecx,DWORD PTR [ebp-0x14]
10012910:	mov    DWORD PTR [eax],ecx
10012912:	jmp    0x1001294b
10012914:	mov    edx,DWORD PTR [ebp-0x1c]
10012917:	push   edx
10012918:	call   0x100130f0
1001291d:	add    esp,0x4
10012920:	mov    eax,DWORD PTR [eax]
10012922:	cmp    eax,DWORD PTR [ebp-0x10]
10012925:	jne    0x1001293a
10012927:	mov    ecx,DWORD PTR [ebp-0x1c]
1001292a:	push   ecx
1001292b:	call   0x100130f0
10012930:	add    esp,0x4
10012933:	mov    edx,DWORD PTR [ebp-0x14]
10012936:	mov    DWORD PTR [eax],edx
10012938:	jmp    0x1001294b
1001293a:	mov    eax,DWORD PTR [ebp-0x1c]
1001293d:	push   eax
1001293e:	call   0x10013110
10012943:	add    esp,0x4
10012946:	mov    ecx,DWORD PTR [ebp-0x14]
10012949:	mov    DWORD PTR [eax],ecx
1001294b:	mov    ecx,DWORD PTR [ebp-0x64]
1001294e:	call   0x100135d0
10012953:	mov    edx,DWORD PTR [eax]
10012955:	cmp    edx,DWORD PTR [ebp-0x10]
10012958:	jne    0x10012991
1001295a:	mov    eax,DWORD PTR [ebp-0x14]
1001295d:	push   eax
1001295e:	call   0x100130c0
10012963:	add    esp,0x4
10012966:	movsx  ecx,BYTE PTR [eax]
10012969:	test   ecx,ecx
1001296b:	je     0x10012975
1001296d:	mov    edx,DWORD PTR [ebp-0x1c]
10012970:	mov    DWORD PTR [ebp-0x68],edx
10012973:	jmp    0x10012984
10012975:	mov    eax,DWORD PTR [ebp-0x14]
10012978:	push   eax
10012979:	call   0x10013760
1001297e:	add    esp,0x4
10012981:	mov    DWORD PTR [ebp-0x68],eax
10012984:	mov    ecx,DWORD PTR [ebp-0x64]
10012987:	call   0x100135d0
1001298c:	mov    ecx,DWORD PTR [ebp-0x68]
1001298f:	mov    DWORD PTR [eax],ecx
10012991:	mov    ecx,DWORD PTR [ebp-0x64]
10012994:	call   0x100137a0
10012999:	mov    edx,DWORD PTR [eax]
1001299b:	cmp    edx,DWORD PTR [ebp-0x10]
1001299e:	jne    0x100129d7
100129a0:	mov    eax,DWORD PTR [ebp-0x14]
100129a3:	push   eax
100129a4:	call   0x100130c0
100129a9:	add    esp,0x4
100129ac:	movsx  ecx,BYTE PTR [eax]
100129af:	test   ecx,ecx
100129b1:	je     0x100129bb
100129b3:	mov    edx,DWORD PTR [ebp-0x1c]
100129b6:	mov    DWORD PTR [ebp-0x6c],edx
100129b9:	jmp    0x100129ca
100129bb:	mov    eax,DWORD PTR [ebp-0x14]
100129be:	push   eax
100129bf:	call   0x10013720
100129c4:	add    esp,0x4
100129c7:	mov    DWORD PTR [ebp-0x6c],eax
100129ca:	mov    ecx,DWORD PTR [ebp-0x64]
100129cd:	call   0x100137a0
100129d2:	mov    ecx,DWORD PTR [ebp-0x6c]
100129d5:	mov    DWORD PTR [eax],ecx
100129d7:	jmp    0x10012b6a
100129dc:	mov    edx,DWORD PTR [ebp-0x10]
100129df:	push   edx
100129e0:	call   0x100130f0
100129e5:	add    esp,0x4
100129e8:	mov    eax,DWORD PTR [eax]
100129ea:	push   eax
100129eb:	call   0x10013100
100129f0:	add    esp,0x4
100129f3:	mov    ecx,DWORD PTR [ebp-0x18]
100129f6:	mov    DWORD PTR [eax],ecx
100129f8:	mov    edx,DWORD PTR [ebp-0x10]
100129fb:	push   edx
100129fc:	call   0x100130f0
10012a01:	add    esp,0x4
10012a04:	mov    esi,eax
10012a06:	mov    eax,DWORD PTR [ebp-0x18]
10012a09:	push   eax
10012a0a:	call   0x100130f0
10012a0f:	add    esp,0x4
10012a12:	mov    ecx,DWORD PTR [esi]
10012a14:	mov    DWORD PTR [eax],ecx
10012a16:	mov    edx,DWORD PTR [ebp-0x10]
10012a19:	push   edx
10012a1a:	call   0x10013110
10012a1f:	add    esp,0x4
10012a22:	mov    ecx,DWORD PTR [ebp-0x18]
10012a25:	cmp    ecx,DWORD PTR [eax]
10012a27:	jne    0x10012a34
10012a29:	mov    edx,DWORD PTR [ebp-0x18]
10012a2c:	mov    DWORD PTR [ebp-0x1c],edx
10012a2f:	jmp    0x10012ab4
10012a34:	mov    eax,DWORD PTR [ebp-0x18]
10012a37:	push   eax
10012a38:	call   0x10013100
10012a3d:	add    esp,0x4
10012a40:	mov    ecx,DWORD PTR [eax]
10012a42:	mov    DWORD PTR [ebp-0x1c],ecx
10012a45:	mov    edx,DWORD PTR [ebp-0x14]
10012a48:	push   edx
10012a49:	call   0x100130c0
10012a4e:	add    esp,0x4
10012a51:	movsx  eax,BYTE PTR [eax]
10012a54:	test   eax,eax
10012a56:	jne    0x10012a69
10012a58:	mov    ecx,DWORD PTR [ebp-0x14]
10012a5b:	push   ecx
10012a5c:	call   0x10013100
10012a61:	add    esp,0x4
10012a64:	mov    edx,DWORD PTR [ebp-0x1c]
10012a67:	mov    DWORD PTR [eax],edx
10012a69:	mov    eax,DWORD PTR [ebp-0x1c]
10012a6c:	push   eax
10012a6d:	call   0x100130f0
10012a72:	add    esp,0x4
10012a75:	mov    ecx,DWORD PTR [ebp-0x14]
10012a78:	mov    DWORD PTR [eax],ecx
10012a7a:	mov    edx,DWORD PTR [ebp-0x10]
10012a7d:	push   edx
10012a7e:	call   0x10013110
10012a83:	add    esp,0x4
10012a86:	mov    esi,eax
10012a88:	mov    eax,DWORD PTR [ebp-0x18]
10012a8b:	push   eax
10012a8c:	call   0x10013110
10012a91:	add    esp,0x4
10012a94:	mov    ecx,DWORD PTR [esi]
10012a96:	mov    DWORD PTR [eax],ecx
10012a98:	mov    edx,DWORD PTR [ebp-0x10]
10012a9b:	push   edx
10012a9c:	call   0x10013110
10012aa1:	add    esp,0x4
10012aa4:	mov    eax,DWORD PTR [eax]
10012aa6:	push   eax
10012aa7:	call   0x10013100
10012aac:	add    esp,0x4
10012aaf:	mov    ecx,DWORD PTR [ebp-0x18]
10012ab2:	mov    DWORD PTR [eax],ecx
10012ab4:	mov    ecx,DWORD PTR [ebp-0x64]
10012ab7:	call   0x100137c0
10012abc:	mov    edx,DWORD PTR [eax]
10012abe:	cmp    edx,DWORD PTR [ebp-0x10]
10012ac1:	jne    0x10012ad2
10012ac3:	mov    ecx,DWORD PTR [ebp-0x64]
10012ac6:	call   0x100137c0
10012acb:	mov    ecx,DWORD PTR [ebp-0x18]
10012ace:	mov    DWORD PTR [eax],ecx
10012ad0:	jmp    0x10012b2a
10012ad2:	mov    edx,DWORD PTR [ebp-0x10]
10012ad5:	push   edx
10012ad6:	call   0x10013100
10012adb:	add    esp,0x4
10012ade:	mov    eax,DWORD PTR [eax]
10012ae0:	push   eax
10012ae1:	call   0x100130f0
10012ae6:	add    esp,0x4
10012ae9:	mov    ecx,DWORD PTR [eax]
10012aeb:	cmp    ecx,DWORD PTR [ebp-0x10]
10012aee:	jne    0x10012b0e
10012af0:	mov    edx,DWORD PTR [ebp-0x10]
10012af3:	push   edx
10012af4:	call   0x10013100
10012af9:	add    esp,0x4
10012afc:	mov    eax,DWORD PTR [eax]
10012afe:	push   eax
10012aff:	call   0x100130f0
10012b04:	add    esp,0x4
10012b07:	mov    ecx,DWORD PTR [ebp-0x18]
10012b0a:	mov    DWORD PTR [eax],ecx
10012b0c:	jmp    0x10012b2a
10012b0e:	mov    edx,DWORD PTR [ebp-0x10]
10012b11:	push   edx
10012b12:	call   0x10013100
10012b17:	add    esp,0x4
10012b1a:	mov    eax,DWORD PTR [eax]
10012b1c:	push   eax
10012b1d:	call   0x10013110
10012b22:	add    esp,0x4
10012b25:	mov    ecx,DWORD PTR [ebp-0x18]
10012b28:	mov    DWORD PTR [eax],ecx
10012b2a:	mov    edx,DWORD PTR [ebp-0x10]
10012b2d:	push   edx
10012b2e:	call   0x10013100
10012b33:	add    esp,0x4
10012b36:	mov    esi,eax
10012b38:	mov    eax,DWORD PTR [ebp-0x18]
10012b3b:	push   eax
10012b3c:	call   0x10013100
10012b41:	add    esp,0x4
10012b44:	mov    ecx,DWORD PTR [esi]
10012b46:	mov    DWORD PTR [eax],ecx
10012b48:	mov    edx,DWORD PTR [ebp-0x10]
10012b4b:	push   edx
10012b4c:	call   0x100130b0
10012b51:	add    esp,0x4
10012b54:	push   eax
10012b55:	mov    eax,DWORD PTR [ebp-0x18]
10012b58:	push   eax
10012b59:	call   0x100130b0
10012b5e:	add    esp,0x4
10012b61:	push   eax
10012b62:	call   0x10006db0
10012b67:	add    esp,0x8
10012b6a:	mov    ecx,DWORD PTR [ebp-0x10]
10012b6d:	push   ecx
10012b6e:	call   0x100130b0
10012b73:	add    esp,0x4
10012b76:	movsx  edx,BYTE PTR [eax]
10012b79:	cmp    edx,0x1
10012b7c:	jne    0x10012f11
10012b82:	jmp    0x10012b95
10012b84:	mov    eax,DWORD PTR [ebp-0x14]
10012b87:	push   eax
10012b88:	call   0x10013100
10012b8d:	add    esp,0x4
10012b90:	mov    ecx,DWORD PTR [eax]
10012b92:	mov    DWORD PTR [ebp-0x1c],ecx
10012b95:	mov    ecx,DWORD PTR [ebp-0x64]
10012b98:	call   0x100137c0
10012b9d:	mov    edx,DWORD PTR [ebp-0x14]
10012ba0:	cmp    edx,DWORD PTR [eax]
10012ba2:	je     0x10012f02
10012ba8:	mov    eax,DWORD PTR [ebp-0x14]
10012bab:	push   eax
10012bac:	call   0x100130b0
10012bb1:	add    esp,0x4
10012bb4:	movsx  ecx,BYTE PTR [eax]
10012bb7:	cmp    ecx,0x1
10012bba:	jne    0x10012f02
10012bc0:	mov    edx,DWORD PTR [ebp-0x1c]
10012bc3:	push   edx
10012bc4:	call   0x100130f0
10012bc9:	add    esp,0x4
10012bcc:	mov    ecx,DWORD PTR [ebp-0x14]
10012bcf:	cmp    ecx,DWORD PTR [eax]
10012bd1:	jne    0x10012d6e
10012bd7:	mov    edx,DWORD PTR [ebp-0x1c]
10012bda:	push   edx
10012bdb:	call   0x10013110
10012be0:	add    esp,0x4
10012be3:	mov    eax,DWORD PTR [eax]
10012be5:	mov    DWORD PTR [ebp-0x18],eax
10012be8:	mov    ecx,DWORD PTR [ebp-0x18]
10012beb:	push   ecx
10012bec:	call   0x100130b0
10012bf1:	add    esp,0x4
10012bf4:	movsx  edx,BYTE PTR [eax]
10012bf7:	test   edx,edx
10012bf9:	jne    0x10012c36
10012bfb:	mov    eax,DWORD PTR [ebp-0x18]
10012bfe:	push   eax
10012bff:	call   0x100130b0
10012c04:	add    esp,0x4
10012c07:	mov    BYTE PTR [eax],0x1
10012c0a:	mov    ecx,DWORD PTR [ebp-0x1c]
10012c0d:	push   ecx
10012c0e:	call   0x100130b0
10012c13:	add    esp,0x4
10012c16:	mov    BYTE PTR [eax],0x0
10012c19:	mov    edx,DWORD PTR [ebp-0x1c]
10012c1c:	push   edx
10012c1d:	mov    ecx,DWORD PTR [ebp-0x64]
10012c20:	call   0x100135f0
10012c25:	mov    eax,DWORD PTR [ebp-0x1c]
10012c28:	push   eax
10012c29:	call   0x10013110
10012c2e:	add    esp,0x4
10012c31:	mov    ecx,DWORD PTR [eax]
10012c33:	mov    DWORD PTR [ebp-0x18],ecx
10012c36:	mov    edx,DWORD PTR [ebp-0x18]
10012c39:	push   edx
10012c3a:	call   0x100130c0
10012c3f:	add    esp,0x4
10012c42:	movsx  eax,BYTE PTR [eax]
10012c45:	test   eax,eax
10012c47:	je     0x10012c54
10012c49:	mov    ecx,DWORD PTR [ebp-0x1c]
10012c4c:	mov    DWORD PTR [ebp-0x14],ecx
10012c4f:	jmp    0x10012d69
10012c54:	mov    edx,DWORD PTR [ebp-0x18]
10012c57:	push   edx
10012c58:	call   0x100130f0
10012c5d:	add    esp,0x4
10012c60:	mov    eax,DWORD PTR [eax]
10012c62:	push   eax
10012c63:	call   0x100130b0
10012c68:	add    esp,0x4
10012c6b:	movsx  ecx,BYTE PTR [eax]
10012c6e:	cmp    ecx,0x1
10012c71:	jne    0x10012cac
10012c73:	mov    edx,DWORD PTR [ebp-0x18]
10012c76:	push   edx
10012c77:	call   0x10013110
10012c7c:	add    esp,0x4
10012c7f:	mov    eax,DWORD PTR [eax]
10012c81:	push   eax
10012c82:	call   0x100130b0
10012c87:	add    esp,0x4
10012c8a:	movsx  ecx,BYTE PTR [eax]
10012c8d:	cmp    ecx,0x1
10012c90:	jne    0x10012cac
10012c92:	mov    edx,DWORD PTR [ebp-0x18]
10012c95:	push   edx
10012c96:	call   0x100130b0
10012c9b:	add    esp,0x4
10012c9e:	mov    BYTE PTR [eax],0x0
10012ca1:	mov    eax,DWORD PTR [ebp-0x1c]
10012ca4:	mov    DWORD PTR [ebp-0x14],eax
10012ca7:	jmp    0x10012d69
10012cac:	mov    ecx,DWORD PTR [ebp-0x18]
10012caf:	push   ecx
10012cb0:	call   0x10013110
10012cb5:	add    esp,0x4
10012cb8:	mov    edx,DWORD PTR [eax]
10012cba:	push   edx
10012cbb:	call   0x100130b0
10012cc0:	add    esp,0x4
10012cc3:	movsx  eax,BYTE PTR [eax]
10012cc6:	cmp    eax,0x1
10012cc9:	jne    0x10012d11
10012ccb:	mov    ecx,DWORD PTR [ebp-0x18]
10012cce:	push   ecx
10012ccf:	call   0x100130f0
10012cd4:	add    esp,0x4
10012cd7:	mov    edx,DWORD PTR [eax]
10012cd9:	push   edx
10012cda:	call   0x100130b0
10012cdf:	add    esp,0x4
10012ce2:	mov    BYTE PTR [eax],0x1
10012ce5:	mov    eax,DWORD PTR [ebp-0x18]
10012ce8:	push   eax
10012ce9:	call   0x100130b0
10012cee:	add    esp,0x4
10012cf1:	mov    BYTE PTR [eax],0x0
10012cf4:	mov    ecx,DWORD PTR [ebp-0x18]
10012cf7:	push   ecx
10012cf8:	mov    ecx,DWORD PTR [ebp-0x64]
10012cfb:	call   0x100137e0
10012d00:	mov    edx,DWORD PTR [ebp-0x1c]
10012d03:	push   edx
10012d04:	call   0x10013110
10012d09:	add    esp,0x4
10012d0c:	mov    eax,DWORD PTR [eax]
10012d0e:	mov    DWORD PTR [ebp-0x18],eax
10012d11:	mov    ecx,DWORD PTR [ebp-0x1c]
10012d14:	push   ecx
10012d15:	call   0x100130b0
10012d1a:	add    esp,0x4
10012d1d:	mov    esi,eax
10012d1f:	mov    edx,DWORD PTR [ebp-0x18]
10012d22:	push   edx
10012d23:	call   0x100130b0
10012d28:	add    esp,0x4
10012d2b:	mov    cl,BYTE PTR [esi]
10012d2d:	mov    BYTE PTR [eax],cl
10012d2f:	mov    edx,DWORD PTR [ebp-0x1c]
10012d32:	push   edx
10012d33:	call   0x100130b0
10012d38:	add    esp,0x4
10012d3b:	mov    BYTE PTR [eax],0x1
10012d3e:	mov    eax,DWORD PTR [ebp-0x18]
10012d41:	push   eax
10012d42:	call   0x10013110
10012d47:	add    esp,0x4
10012d4a:	mov    ecx,DWORD PTR [eax]
10012d4c:	push   ecx
10012d4d:	call   0x100130b0
10012d52:	add    esp,0x4
10012d55:	mov    BYTE PTR [eax],0x1
10012d58:	mov    edx,DWORD PTR [ebp-0x1c]
10012d5b:	push   edx
10012d5c:	mov    ecx,DWORD PTR [ebp-0x64]
10012d5f:	call   0x100135f0
10012d64:	jmp    0x10012f02
10012d69:	jmp    0x10012efd
10012d6e:	mov    eax,DWORD PTR [ebp-0x1c]
10012d71:	push   eax
10012d72:	call   0x100130f0
10012d77:	add    esp,0x4
10012d7a:	mov    ecx,DWORD PTR [eax]
10012d7c:	mov    DWORD PTR [ebp-0x18],ecx
10012d7f:	mov    edx,DWORD PTR [ebp-0x18]
10012d82:	push   edx
10012d83:	call   0x100130b0
10012d88:	add    esp,0x4
10012d8b:	movsx  eax,BYTE PTR [eax]
10012d8e:	test   eax,eax
10012d90:	jne    0x10012dcd
10012d92:	mov    ecx,DWORD PTR [ebp-0x18]
10012d95:	push   ecx
10012d96:	call   0x100130b0
10012d9b:	add    esp,0x4
10012d9e:	mov    BYTE PTR [eax],0x1
10012da1:	mov    edx,DWORD PTR [ebp-0x1c]
10012da4:	push   edx
10012da5:	call   0x100130b0
10012daa:	add    esp,0x4
10012dad:	mov    BYTE PTR [eax],0x0
10012db0:	mov    eax,DWORD PTR [ebp-0x1c]
10012db3:	push   eax
10012db4:	mov    ecx,DWORD PTR [ebp-0x64]
10012db7:	call   0x100137e0
10012dbc:	mov    ecx,DWORD PTR [ebp-0x1c]
10012dbf:	push   ecx
10012dc0:	call   0x100130f0
10012dc5:	add    esp,0x4
10012dc8:	mov    edx,DWORD PTR [eax]
10012dca:	mov    DWORD PTR [ebp-0x18],edx
10012dcd:	mov    eax,DWORD PTR [ebp-0x18]
10012dd0:	push   eax
10012dd1:	call   0x100130c0
10012dd6:	add    esp,0x4
10012dd9:	movsx  ecx,BYTE PTR [eax]
10012ddc:	test   ecx,ecx
10012dde:	je     0x10012deb
10012de0:	mov    edx,DWORD PTR [ebp-0x1c]
10012de3:	mov    DWORD PTR [ebp-0x14],edx
10012de6:	jmp    0x10012efd
10012deb:	mov    eax,DWORD PTR [ebp-0x18]
10012dee:	push   eax
10012def:	call   0x10013110
10012df4:	add    esp,0x4
10012df7:	mov    ecx,DWORD PTR [eax]
10012df9:	push   ecx
10012dfa:	call   0x100130b0
10012dff:	add    esp,0x4
10012e02:	movsx  edx,BYTE PTR [eax]
10012e05:	cmp    edx,0x1
10012e08:	jne    0x10012e43
10012e0a:	mov    eax,DWORD PTR [ebp-0x18]
10012e0d:	push   eax
10012e0e:	call   0x100130f0
10012e13:	add    esp,0x4
10012e16:	mov    ecx,DWORD PTR [eax]
10012e18:	push   ecx
10012e19:	call   0x100130b0
10012e1e:	add    esp,0x4
10012e21:	movsx  edx,BYTE PTR [eax]
10012e24:	cmp    edx,0x1
10012e27:	jne    0x10012e43
10012e29:	mov    eax,DWORD PTR [ebp-0x18]
10012e2c:	push   eax
10012e2d:	call   0x100130b0
10012e32:	add    esp,0x4
10012e35:	mov    BYTE PTR [eax],0x0
10012e38:	mov    ecx,DWORD PTR [ebp-0x1c]
10012e3b:	mov    DWORD PTR [ebp-0x14],ecx
10012e3e:	jmp    0x10012efd
10012e43:	mov    edx,DWORD PTR [ebp-0x18]
10012e46:	push   edx
10012e47:	call   0x100130f0
10012e4c:	add    esp,0x4
10012e4f:	mov    eax,DWORD PTR [eax]
10012e51:	push   eax
10012e52:	call   0x100130b0
10012e57:	add    esp,0x4
10012e5a:	movsx  ecx,BYTE PTR [eax]
10012e5d:	cmp    ecx,0x1
10012e60:	jne    0x10012ea8
10012e62:	mov    edx,DWORD PTR [ebp-0x18]
10012e65:	push   edx
10012e66:	call   0x10013110
10012e6b:	add    esp,0x4
10012e6e:	mov    eax,DWORD PTR [eax]
10012e70:	push   eax
10012e71:	call   0x100130b0
10012e76:	add    esp,0x4
10012e79:	mov    BYTE PTR [eax],0x1
10012e7c:	mov    ecx,DWORD PTR [ebp-0x18]
10012e7f:	push   ecx
10012e80:	call   0x100130b0
10012e85:	add    esp,0x4
10012e88:	mov    BYTE PTR [eax],0x0
10012e8b:	mov    edx,DWORD PTR [ebp-0x18]
10012e8e:	push   edx
10012e8f:	mov    ecx,DWORD PTR [ebp-0x64]
10012e92:	call   0x100135f0
10012e97:	mov    eax,DWORD PTR [ebp-0x1c]
10012e9a:	push   eax
10012e9b:	call   0x100130f0
10012ea0:	add    esp,0x4
10012ea3:	mov    ecx,DWORD PTR [eax]
10012ea5:	mov    DWORD PTR [ebp-0x18],ecx
10012ea8:	mov    edx,DWORD PTR [ebp-0x1c]
10012eab:	push   edx
10012eac:	call   0x100130b0
10012eb1:	add    esp,0x4
10012eb4:	mov    esi,eax
10012eb6:	mov    eax,DWORD PTR [ebp-0x18]
10012eb9:	push   eax
10012eba:	call   0x100130b0
10012ebf:	add    esp,0x4
10012ec2:	mov    cl,BYTE PTR [esi]
10012ec4:	mov    BYTE PTR [eax],cl
10012ec6:	mov    edx,DWORD PTR [ebp-0x1c]
10012ec9:	push   edx
10012eca:	call   0x100130b0
10012ecf:	add    esp,0x4
10012ed2:	mov    BYTE PTR [eax],0x1
10012ed5:	mov    eax,DWORD PTR [ebp-0x18]
10012ed8:	push   eax
10012ed9:	call   0x100130f0
10012ede:	add    esp,0x4
10012ee1:	mov    ecx,DWORD PTR [eax]
10012ee3:	push   ecx
10012ee4:	call   0x100130b0
10012ee9:	add    esp,0x4
10012eec:	mov    BYTE PTR [eax],0x1
10012eef:	mov    edx,DWORD PTR [ebp-0x1c]
10012ef2:	push   edx
10012ef3:	mov    ecx,DWORD PTR [ebp-0x64]
10012ef6:	call   0x100137e0
10012efb:	jmp    0x10012f02
10012efd:	jmp    0x10012b84
10012f02:	mov    eax,DWORD PTR [ebp-0x14]
10012f05:	push   eax
10012f06:	call   0x100130b0
10012f0b:	add    esp,0x4
10012f0e:	mov    BYTE PTR [eax],0x1
10012f11:	mov    ecx,DWORD PTR [ebp-0x10]
10012f14:	push   ecx
10012f15:	mov    ecx,DWORD PTR [ebp-0x64]
10012f18:	add    ecx,0x1
10012f1b:	call   0x100142a0
10012f20:	push   0x1
10012f22:	mov    edx,DWORD PTR [ebp-0x10]
10012f25:	push   edx
10012f26:	mov    ecx,DWORD PTR [ebp-0x64]
10012f29:	add    ecx,0x1
10012f2c:	call   0x10013930
10012f31:	mov    eax,DWORD PTR [ebp-0x64]
10012f34:	cmp    DWORD PTR [eax+0x8],0x0
10012f38:	jbe    0x10012f49
10012f3a:	mov    ecx,DWORD PTR [ebp-0x64]
10012f3d:	mov    edx,DWORD PTR [ecx+0x8]
10012f40:	sub    edx,0x1
10012f43:	mov    eax,DWORD PTR [ebp-0x64]
10012f46:	mov    DWORD PTR [eax+0x8],edx
10012f49:	mov    ecx,DWORD PTR [ebp+0x8]
10012f4c:	mov    edx,DWORD PTR [ebp+0xc]
10012f4f:	mov    DWORD PTR [ecx],edx
10012f51:	mov    eax,DWORD PTR [ebp+0x10]
10012f54:	mov    DWORD PTR [ecx+0x4],eax
10012f57:	mov    eax,DWORD PTR [ebp+0x8]
10012f5a:	mov    ecx,DWORD PTR [ebp-0xc]
10012f5d:	mov    DWORD PTR fs:0x0,ecx
10012f64:	pop    ecx
10012f65:	pop    esi
10012f66:	mov    esp,ebp
10012f68:	pop    ebp
10012f69:	ret    0xc
10012f6c:	int3   
10012f6d:	int3   
10012f6e:	int3   
10012f6f:	int3   
10012f70:	push   ebp
10012f71:	mov    ebp,esp
10012f73:	sub    esp,0x24
10012f76:	mov    DWORD PTR [ebp-0x20],ecx
10012f79:	mov    eax,DWORD PTR [ebp+0xc]
10012f7c:	push   eax
10012f7d:	lea    ecx,[ebp-0x8]
10012f80:	push   ecx
10012f81:	mov    ecx,DWORD PTR [ebp-0x20]
10012f84:	call   0x10013120
10012f89:	lea    edx,[ebp-0x14]
10012f8c:	push   edx
10012f8d:	mov    ecx,DWORD PTR [ebp-0x20]
10012f90:	call   0x100125b0
10012f95:	push   eax
10012f96:	lea    ecx,[ebp-0x8]
10012f99:	call   0x10013040
10012f9e:	movzx  eax,al
10012fa1:	test   eax,eax
10012fa3:	jne    0x10012fd2
10012fa5:	lea    ecx,[ebp-0x8]
10012fa8:	call   0x100139f0
10012fad:	push   eax
10012fae:	call   0x100130d0
10012fb3:	add    esp,0x4
10012fb6:	push   eax
10012fb7:	mov    ecx,DWORD PTR [ebp+0xc]
10012fba:	push   ecx
10012fbb:	mov    ecx,DWORD PTR [ebp-0x20]
10012fbe:	call   0x10013910
10012fc3:	movzx  edx,al
10012fc6:	test   edx,edx
10012fc8:	jne    0x10012fd2
10012fca:	lea    eax,[ebp-0x8]
10012fcd:	mov    DWORD PTR [ebp-0x24],eax
10012fd0:	jmp    0x10012fe1
10012fd2:	lea    ecx,[ebp-0x1c]
10012fd5:	push   ecx
10012fd6:	mov    ecx,DWORD PTR [ebp-0x20]
10012fd9:	call   0x100125b0
10012fde:	mov    DWORD PTR [ebp-0x24],eax
10012fe1:	mov    edx,DWORD PTR [ebp-0x24]
10012fe4:	mov    DWORD PTR [ebp-0xc],edx
10012fe7:	mov    eax,DWORD PTR [ebp-0xc]
10012fea:	mov    ecx,DWORD PTR [eax]
10012fec:	mov    edx,DWORD PTR [eax+0x4]
10012fef:	mov    eax,DWORD PTR [ebp+0x8]
10012ff2:	mov    DWORD PTR [eax],ecx
10012ff4:	mov    DWORD PTR [eax+0x4],edx
10012ff7:	mov    eax,DWORD PTR [ebp+0x8]
10012ffa:	mov    esp,ebp
10012ffc:	pop    ebp
10012ffd:	ret    0x8
10013000:	push   ebp
10013001:	mov    ebp,esp
10013003:	push   ecx
10013004:	mov    DWORD PTR [ebp-0x4],ecx
10013007:	mov    ecx,DWORD PTR [ebp-0x4]
1001300a:	call   0x10013990
1001300f:	mov    esp,ebp
10013011:	pop    ebp
10013012:	ret    
10013013:	int3   
10013014:	int3   
10013015:	int3   
10013016:	int3   
10013017:	int3   
10013018:	int3   
10013019:	int3   
1001301a:	int3   
1001301b:	int3   
1001301c:	int3   
1001301d:	int3   
1001301e:	int3   
1001301f:	int3   
10013020:	push   ebp
10013021:	mov    ebp,esp
10013023:	push   ecx
10013024:	mov    DWORD PTR [ebp-0x4],ecx
10013027:	mov    ecx,DWORD PTR [ebp-0x4]
1001302a:	call   0x100139d0
1001302f:	mov    eax,DWORD PTR [ebp-0x4]
10013032:	mov    esp,ebp
10013034:	pop    ebp
10013035:	ret    
10013036:	int3   
10013037:	int3   
10013038:	int3   
10013039:	int3   
1001303a:	int3   
1001303b:	int3   
1001303c:	int3   
1001303d:	int3   
1001303e:	int3   
1001303f:	int3   
10013040:	push   ebp
10013041:	mov    ebp,esp
10013043:	push   ecx
10013044:	mov    DWORD PTR [ebp-0x4],ecx
10013047:	mov    eax,DWORD PTR [ebp-0x4]
1001304a:	cmp    DWORD PTR [eax],0x0
1001304d:	je     0x1001305b
1001304f:	mov    ecx,DWORD PTR [ebp-0x4]
10013052:	mov    edx,DWORD PTR [ebp+0x8]
10013055:	mov    eax,DWORD PTR [ecx]
10013057:	cmp    eax,DWORD PTR [edx]
10013059:	je     0x10013060
1001305b:	call   0x10018de3
10013060:	mov    ecx,DWORD PTR [ebp-0x4]
10013063:	mov    edx,DWORD PTR [ebp+0x8]
10013066:	mov    eax,DWORD PTR [ecx+0x4]
10013069:	xor    ecx,ecx
1001306b:	cmp    eax,DWORD PTR [edx+0x4]
1001306e:	sete   cl
10013071:	mov    al,cl
10013073:	mov    esp,ebp
10013075:	pop    ebp
10013076:	ret    0x4
10013079:	int3   
1001307a:	int3   
1001307b:	int3   
1001307c:	int3   
1001307d:	int3   
1001307e:	int3   
1001307f:	int3   
10013080:	push   ebp
10013081:	mov    ebp,esp
10013083:	push   ecx
10013084:	mov    DWORD PTR [ebp-0x4],ecx
10013087:	mov    eax,DWORD PTR [ebp+0x8]
1001308a:	push   eax
1001308b:	mov    ecx,DWORD PTR [ebp-0x4]
1001308e:	call   0x10013040
10013093:	movzx  eax,al
10013096:	neg    eax
10013098:	sbb    eax,eax
1001309a:	add    eax,0x1
1001309d:	mov    esp,ebp
1001309f:	pop    ebp
100130a0:	ret    0x4
100130a3:	int3   
100130a4:	int3   
100130a5:	int3   
100130a6:	int3   
100130a7:	int3   
100130a8:	int3   
100130a9:	int3   
100130aa:	int3   
100130ab:	int3   
100130ac:	int3   
100130ad:	int3   
100130ae:	int3   
100130af:	int3   
100130b0:	push   ebp
100130b1:	mov    ebp,esp
100130b3:	mov    eax,DWORD PTR [ebp+0x8]
100130b6:	add    eax,0x20
100130b9:	pop    ebp
100130ba:	ret    
100130bb:	int3   
100130bc:	int3   
100130bd:	int3   
100130be:	int3   
100130bf:	int3   
100130c0:	push   ebp
100130c1:	mov    ebp,esp
100130c3:	mov    eax,DWORD PTR [ebp+0x8]
100130c6:	add    eax,0x21
100130c9:	pop    ebp
100130ca:	ret    
100130cb:	int3   
100130cc:	int3   
100130cd:	int3   
100130ce:	int3   
100130cf:	int3   
100130d0:	push   ebp
100130d1:	mov    ebp,esp
100130d3:	mov    eax,DWORD PTR [ebp+0x8]
100130d6:	push   eax
100130d7:	call   0x10013a40
100130dc:	add    esp,0x4
100130df:	push   eax
100130e0:	call   0x100130f0
100130e5:	add    esp,0x4
100130e8:	pop    ebp
100130e9:	ret    
100130ea:	int3   
100130eb:	int3   
100130ec:	int3   
100130ed:	int3   
100130ee:	int3   
100130ef:	int3   
100130f0:	push   ebp
100130f1:	mov    ebp,esp
100130f3:	mov    eax,DWORD PTR [ebp+0x8]
100130f6:	pop    ebp
100130f7:	ret    
100130f8:	int3   
100130f9:	int3   
100130fa:	int3   
100130fb:	int3   
100130fc:	int3   
100130fd:	int3   
100130fe:	int3   
100130ff:	int3   
10013100:	push   ebp
10013101:	mov    ebp,esp
10013103:	mov    eax,DWORD PTR [ebp+0x8]
10013106:	add    eax,0x4
10013109:	pop    ebp
1001310a:	ret    
1001310b:	int3   
1001310c:	int3   
1001310d:	int3   
1001310e:	int3   
1001310f:	int3   
10013110:	push   ebp
10013111:	mov    ebp,esp
10013113:	mov    eax,DWORD PTR [ebp+0x8]
10013116:	add    eax,0x8
10013119:	pop    ebp
1001311a:	ret    
1001311b:	int3   
1001311c:	int3   
1001311d:	int3   
1001311e:	int3   
1001311f:	int3   
10013120:	push   ebp
10013121:	mov    ebp,esp
10013123:	push   ecx
10013124:	mov    DWORD PTR [ebp-0x4],ecx
10013127:	mov    eax,DWORD PTR [ebp-0x4]
1001312a:	push   eax
1001312b:	mov    ecx,DWORD PTR [ebp+0xc]
1001312e:	push   ecx
1001312f:	mov    ecx,DWORD PTR [ebp-0x4]
10013132:	call   0x10013a70
10013137:	push   eax
10013138:	mov    ecx,DWORD PTR [ebp+0x8]
1001313b:	call   0x10013950
10013140:	mov    eax,DWORD PTR [ebp+0x8]
10013143:	mov    esp,ebp
10013145:	pop    ebp
10013146:	ret    0x8
10013149:	int3   
1001314a:	int3   
1001314b:	int3   
1001314c:	int3   
1001314d:	int3   
1001314e:	int3   
1001314f:	int3   
10013150:	push   ebp
10013151:	mov    ebp,esp
10013153:	push   0xffffffff
10013155:	push   0x1002d2a8
1001315a:	mov    eax,fs:0x0
10013160:	push   eax
10013161:	sub    esp,0x50
10013164:	push   esi
10013165:	mov    eax,ds:0x100c7654
1001316a:	xor    eax,ebp
1001316c:	push   eax
1001316d:	lea    eax,[ebp-0xc]
10013170:	mov    fs:0x0,eax
10013176:	mov    DWORD PTR [ebp-0x5c],ecx
10013179:	mov    ecx,DWORD PTR [ebp-0x5c]
1001317c:	call   0x10013a50
10013181:	sub    eax,0x1
10013184:	mov    ecx,DWORD PTR [ebp-0x5c]
10013187:	cmp    eax,DWORD PTR [ecx+0x8]
1001318a:	ja     0x100131c9
1001318c:	push   0x100b7e1c
10013191:	lea    ecx,[ebp-0x58]
10013194:	call   0x10002bc0
10013199:	mov    DWORD PTR [ebp-0x4],0x0
100131a0:	lea    edx,[ebp-0x58]
100131a3:	push   edx
100131a4:	lea    ecx,[ebp-0x3c]
100131a7:	call   0x10001480
100131ac:	push   0x100bba14
100131b1:	lea    eax,[ebp-0x3c]
100131b4:	push   eax
100131b5:	call   0x10018e6e
100131ba:	mov    DWORD PTR [ebp-0x4],0xffffffff
100131c1:	lea    ecx,[ebp-0x58]
100131c4:	call   0x10002c00
100131c9:	push   0x0
100131cb:	mov    ecx,DWORD PTR [ebp+0x14]
100131ce:	push   ecx
100131cf:	mov    edx,DWORD PTR [ebp-0x5c]
100131d2:	mov    eax,DWORD PTR [edx+0x4]
100131d5:	push   eax
100131d6:	mov    ecx,DWORD PTR [ebp+0x10]
100131d9:	push   ecx
100131da:	mov    edx,DWORD PTR [ebp-0x5c]
100131dd:	mov    eax,DWORD PTR [edx+0x4]
100131e0:	push   eax
100131e1:	mov    ecx,DWORD PTR [ebp-0x5c]
100131e4:	call   0x10013b00
100131e9:	mov    DWORD PTR [ebp-0x10],eax
100131ec:	mov    ecx,DWORD PTR [ebp-0x5c]
100131ef:	mov    edx,DWORD PTR [ecx+0x8]
100131f2:	add    edx,0x1
100131f5:	mov    eax,DWORD PTR [ebp-0x5c]
100131f8:	mov    DWORD PTR [eax+0x8],edx
100131fb:	mov    ecx,DWORD PTR [ebp-0x5c]
100131fe:	mov    edx,DWORD PTR [ebp+0x10]
10013201:	cmp    edx,DWORD PTR [ecx+0x4]
10013204:	jne    0x1001322f
10013206:	mov    ecx,DWORD PTR [ebp-0x5c]
10013209:	call   0x100137c0
1001320e:	mov    ecx,DWORD PTR [ebp-0x10]
10013211:	mov    DWORD PTR [eax],ecx
10013213:	mov    ecx,DWORD PTR [ebp-0x5c]
10013216:	call   0x100135d0
1001321b:	mov    edx,DWORD PTR [ebp-0x10]
1001321e:	mov    DWORD PTR [eax],edx
10013220:	mov    ecx,DWORD PTR [ebp-0x5c]
10013223:	call   0x100137a0
10013228:	mov    ecx,DWORD PTR [ebp-0x10]
1001322b:	mov    DWORD PTR [eax],ecx
1001322d:	jmp    0x10013293
1001322f:	movzx  edx,BYTE PTR [ebp+0xc]
10013233:	test   edx,edx
10013235:	je     0x10013266
10013237:	mov    eax,DWORD PTR [ebp+0x10]
1001323a:	push   eax
1001323b:	call   0x100130f0
10013240:	add    esp,0x4
10013243:	mov    ecx,DWORD PTR [ebp-0x10]
10013246:	mov    DWORD PTR [eax],ecx
10013248:	mov    ecx,DWORD PTR [ebp-0x5c]
1001324b:	call   0x100135d0
10013250:	mov    edx,DWORD PTR [ebp+0x10]
10013253:	cmp    edx,DWORD PTR [eax]
10013255:	jne    0x10013264
10013257:	mov    ecx,DWORD PTR [ebp-0x5c]
1001325a:	call   0x100135d0
1001325f:	mov    ecx,DWORD PTR [ebp-0x10]
10013262:	mov    DWORD PTR [eax],ecx
10013264:	jmp    0x10013293
10013266:	mov    edx,DWORD PTR [ebp+0x10]
10013269:	push   edx
1001326a:	call   0x10013110
1001326f:	add    esp,0x4
10013272:	mov    ecx,DWORD PTR [ebp-0x10]
10013275:	mov    DWORD PTR [eax],ecx
10013277:	mov    ecx,DWORD PTR [ebp-0x5c]
1001327a:	call   0x100137a0
1001327f:	mov    edx,DWORD PTR [ebp+0x10]
10013282:	cmp    edx,DWORD PTR [eax]
10013284:	jne    0x10013293
10013286:	mov    ecx,DWORD PTR [ebp-0x5c]
10013289:	call   0x100137a0
1001328e:	mov    ecx,DWORD PTR [ebp-0x10]
10013291:	mov    DWORD PTR [eax],ecx
10013293:	mov    edx,DWORD PTR [ebp-0x10]
10013296:	mov    DWORD PTR [ebp-0x14],edx
10013299:	mov    eax,DWORD PTR [ebp-0x14]
1001329c:	push   eax
1001329d:	call   0x10013100
100132a2:	add    esp,0x4
100132a5:	mov    ecx,DWORD PTR [eax]
100132a7:	push   ecx
100132a8:	call   0x100130b0
100132ad:	add    esp,0x4
100132b0:	movsx  edx,BYTE PTR [eax]
100132b3:	test   edx,edx
100132b5:	jne    0x10013589
100132bb:	mov    eax,DWORD PTR [ebp-0x14]
100132be:	push   eax
100132bf:	call   0x10013100
100132c4:	add    esp,0x4
100132c7:	mov    esi,eax
100132c9:	mov    ecx,DWORD PTR [ebp-0x14]
100132cc:	push   ecx
100132cd:	call   0x10013100
100132d2:	add    esp,0x4
100132d5:	mov    edx,DWORD PTR [eax]
100132d7:	push   edx
100132d8:	call   0x10013100
100132dd:	add    esp,0x4
100132e0:	mov    eax,DWORD PTR [eax]
100132e2:	push   eax
100132e3:	call   0x100130f0
100132e8:	add    esp,0x4
100132eb:	mov    ecx,DWORD PTR [esi]
100132ed:	cmp    ecx,DWORD PTR [eax]
100132ef:	jne    0x1001343f
100132f5:	mov    edx,DWORD PTR [ebp-0x14]
100132f8:	push   edx
100132f9:	call   0x10013100
100132fe:	add    esp,0x4
10013301:	mov    eax,DWORD PTR [eax]
10013303:	push   eax
10013304:	call   0x10013100
10013309:	add    esp,0x4
1001330c:	mov    ecx,DWORD PTR [eax]
1001330e:	push   ecx
1001330f:	call   0x10013110
10013314:	add    esp,0x4
10013317:	mov    edx,DWORD PTR [eax]
10013319:	mov    DWORD PTR [ebp+0x10],edx
1001331c:	mov    eax,DWORD PTR [ebp+0x10]
1001331f:	push   eax
10013320:	call   0x100130b0
10013325:	add    esp,0x4
10013328:	movsx  ecx,BYTE PTR [eax]
1001332b:	test   ecx,ecx
1001332d:	jne    0x1001339e
1001332f:	mov    edx,DWORD PTR [ebp-0x14]
10013332:	push   edx
10013333:	call   0x10013100
10013338:	add    esp,0x4
1001333b:	mov    eax,DWORD PTR [eax]
1001333d:	push   eax
1001333e:	call   0x100130b0
10013343:	add    esp,0x4
10013346:	mov    BYTE PTR [eax],0x1
10013349:	mov    ecx,DWORD PTR [ebp+0x10]
1001334c:	push   ecx
1001334d:	call   0x100130b0
10013352:	add    esp,0x4
10013355:	mov    BYTE PTR [eax],0x1
10013358:	mov    edx,DWORD PTR [ebp-0x14]
1001335b:	push   edx
1001335c:	call   0x10013100
10013361:	add    esp,0x4
10013364:	mov    eax,DWORD PTR [eax]
10013366:	push   eax
10013367:	call   0x10013100
1001336c:	add    esp,0x4
1001336f:	mov    ecx,DWORD PTR [eax]
10013371:	push   ecx
10013372:	call   0x100130b0
10013377:	add    esp,0x4
1001337a:	mov    BYTE PTR [eax],0x0
1001337d:	mov    edx,DWORD PTR [ebp-0x14]
10013380:	push   edx
10013381:	call   0x10013100
10013386:	add    esp,0x4
10013389:	mov    eax,DWORD PTR [eax]
1001338b:	push   eax
1001338c:	call   0x10013100
10013391:	add    esp,0x4
10013394:	mov    ecx,DWORD PTR [eax]
10013396:	mov    DWORD PTR [ebp-0x14],ecx
10013399:	jmp    0x1001343a
1001339e:	mov    edx,DWORD PTR [ebp-0x14]
100133a1:	push   edx
100133a2:	call   0x10013100
100133a7:	add    esp,0x4
100133aa:	mov    eax,DWORD PTR [eax]
100133ac:	push   eax
100133ad:	call   0x10013110
100133b2:	add    esp,0x4
100133b5:	mov    ecx,DWORD PTR [ebp-0x14]
100133b8:	cmp    ecx,DWORD PTR [eax]
100133ba:	jne    0x100133d9
100133bc:	mov    edx,DWORD PTR [ebp-0x14]
100133bf:	push   edx
100133c0:	call   0x10013100
100133c5:	add    esp,0x4
100133c8:	mov    eax,DWORD PTR [eax]
100133ca:	mov    DWORD PTR [ebp-0x14],eax
100133cd:	mov    ecx,DWORD PTR [ebp-0x14]
100133d0:	push   ecx
100133d1:	mov    ecx,DWORD PTR [ebp-0x5c]
100133d4:	call   0x100135f0
100133d9:	mov    edx,DWORD PTR [ebp-0x14]
100133dc:	push   edx
100133dd:	call   0x10013100
100133e2:	add    esp,0x4
100133e5:	mov    eax,DWORD PTR [eax]
100133e7:	push   eax
100133e8:	call   0x100130b0
100133ed:	add    esp,0x4
100133f0:	mov    BYTE PTR [eax],0x1
100133f3:	mov    ecx,DWORD PTR [ebp-0x14]
100133f6:	push   ecx
100133f7:	call   0x10013100
100133fc:	add    esp,0x4
100133ff:	mov    edx,DWORD PTR [eax]
10013401:	push   edx
10013402:	call   0x10013100
10013407:	add    esp,0x4
1001340a:	mov    eax,DWORD PTR [eax]
1001340c:	push   eax
1001340d:	call   0x100130b0
10013412:	add    esp,0x4
10013415:	mov    BYTE PTR [eax],0x0
10013418:	mov    ecx,DWORD PTR [ebp-0x14]
1001341b:	push   ecx
1001341c:	call   0x10013100
10013421:	add    esp,0x4
10013424:	mov    edx,DWORD PTR [eax]
10013426:	push   edx
10013427:	call   0x10013100
1001342c:	add    esp,0x4
1001342f:	mov    eax,DWORD PTR [eax]
10013431:	push   eax
10013432:	mov    ecx,DWORD PTR [ebp-0x5c]
10013435:	call   0x100137e0
1001343a:	jmp    0x10013584
1001343f:	mov    ecx,DWORD PTR [ebp-0x14]
10013442:	push   ecx
10013443:	call   0x10013100
10013448:	add    esp,0x4
1001344b:	mov    edx,DWORD PTR [eax]
1001344d:	push   edx
1001344e:	call   0x10013100
10013453:	add    esp,0x4
10013456:	mov    eax,DWORD PTR [eax]
10013458:	push   eax
10013459:	call   0x100130f0
1001345e:	add    esp,0x4
10013461:	mov    ecx,DWORD PTR [eax]
10013463:	mov    DWORD PTR [ebp+0x10],ecx
10013466:	mov    edx,DWORD PTR [ebp+0x10]
10013469:	push   edx
1001346a:	call   0x100130b0
1001346f:	add    esp,0x4
10013472:	movsx  eax,BYTE PTR [eax]
10013475:	test   eax,eax
10013477:	jne    0x100134e8
10013479:	mov    ecx,DWORD PTR [ebp-0x14]
1001347c:	push   ecx
1001347d:	call   0x10013100
10013482:	add    esp,0x4
10013485:	mov    edx,DWORD PTR [eax]
10013487:	push   edx
10013488:	call   0x100130b0
1001348d:	add    esp,0x4
10013490:	mov    BYTE PTR [eax],0x1
10013493:	mov    eax,DWORD PTR [ebp+0x10]
10013496:	push   eax
10013497:	call   0x100130b0
1001349c:	add    esp,0x4
1001349f:	mov    BYTE PTR [eax],0x1
100134a2:	mov    ecx,DWORD PTR [ebp-0x14]
100134a5:	push   ecx
100134a6:	call   0x10013100
100134ab:	add    esp,0x4
100134ae:	mov    edx,DWORD PTR [eax]
100134b0:	push   edx
100134b1:	call   0x10013100
100134b6:	add    esp,0x4
100134b9:	mov    eax,DWORD PTR [eax]
100134bb:	push   eax
100134bc:	call   0x100130b0
100134c1:	add    esp,0x4
100134c4:	mov    BYTE PTR [eax],0x0
100134c7:	mov    ecx,DWORD PTR [ebp-0x14]
100134ca:	push   ecx
100134cb:	call   0x10013100
100134d0:	add    esp,0x4
100134d3:	mov    edx,DWORD PTR [eax]
100134d5:	push   edx
100134d6:	call   0x10013100
100134db:	add    esp,0x4
100134de:	mov    eax,DWORD PTR [eax]
100134e0:	mov    DWORD PTR [ebp-0x14],eax
100134e3:	jmp    0x10013584
100134e8:	mov    ecx,DWORD PTR [ebp-0x14]
100134eb:	push   ecx
100134ec:	call   0x10013100
100134f1:	add    esp,0x4
100134f4:	mov    edx,DWORD PTR [eax]
100134f6:	push   edx
100134f7:	call   0x100130f0
100134fc:	add    esp,0x4
100134ff:	mov    ecx,DWORD PTR [ebp-0x14]
10013502:	cmp    ecx,DWORD PTR [eax]
10013504:	jne    0x10013523
10013506:	mov    edx,DWORD PTR [ebp-0x14]
10013509:	push   edx
1001350a:	call   0x10013100
1001350f:	add    esp,0x4
10013512:	mov    eax,DWORD PTR [eax]
10013514:	mov    DWORD PTR [ebp-0x14],eax
10013517:	mov    ecx,DWORD PTR [ebp-0x14]
1001351a:	push   ecx
1001351b:	mov    ecx,DWORD PTR [ebp-0x5c]
1001351e:	call   0x100137e0
10013523:	mov    edx,DWORD PTR [ebp-0x14]
10013526:	push   edx
10013527:	call   0x10013100
1001352c:	add    esp,0x4
1001352f:	mov    eax,DWORD PTR [eax]
10013531:	push   eax
10013532:	call   0x100130b0
10013537:	add    esp,0x4
1001353a:	mov    BYTE PTR [eax],0x1
1001353d:	mov    ecx,DWORD PTR [ebp-0x14]
10013540:	push   ecx
10013541:	call   0x10013100
10013546:	add    esp,0x4
10013549:	mov    edx,DWORD PTR [eax]
1001354b:	push   edx
1001354c:	call   0x10013100
10013551:	add    esp,0x4
10013554:	mov    eax,DWORD PTR [eax]
10013556:	push   eax
10013557:	call   0x100130b0
1001355c:	add    esp,0x4
1001355f:	mov    BYTE PTR [eax],0x0
10013562:	mov    ecx,DWORD PTR [ebp-0x14]
10013565:	push   ecx
10013566:	call   0x10013100
1001356b:	add    esp,0x4
1001356e:	mov    edx,DWORD PTR [eax]
10013570:	push   edx
10013571:	call   0x10013100
10013576:	add    esp,0x4
10013579:	mov    eax,DWORD PTR [eax]
1001357b:	push   eax
1001357c:	mov    ecx,DWORD PTR [ebp-0x5c]
1001357f:	call   0x100135f0
10013584:	jmp    0x10013299
10013589:	mov    ecx,DWORD PTR [ebp-0x5c]
1001358c:	call   0x100137c0
10013591:	mov    ecx,DWORD PTR [eax]
10013593:	push   ecx
10013594:	call   0x100130b0
10013599:	add    esp,0x4
1001359c:	mov    BYTE PTR [eax],0x1
1001359f:	mov    edx,DWORD PTR [ebp-0x5c]
100135a2:	push   edx
100135a3:	mov    eax,DWORD PTR [ebp-0x10]
100135a6:	push   eax
100135a7:	mov    ecx,DWORD PTR [ebp+0x8]
100135aa:	call   0x10013950
100135af:	mov    eax,DWORD PTR [ebp+0x8]
100135b2:	mov    ecx,DWORD PTR [ebp-0xc]
100135b5:	mov    DWORD PTR fs:0x0,ecx
100135bc:	pop    ecx
100135bd:	pop    esi
100135be:	mov    esp,ebp
100135c0:	pop    ebp
100135c1:	ret    0x10
100135c4:	int3   
100135c5:	int3   
100135c6:	int3   
100135c7:	int3   
100135c8:	int3   
100135c9:	int3   
100135ca:	int3   
100135cb:	int3   
100135cc:	int3   
100135cd:	int3   
100135ce:	int3   
100135cf:	int3   
100135d0:	push   ebp
100135d1:	mov    ebp,esp
100135d3:	push   ecx
100135d4:	mov    DWORD PTR [ebp-0x4],ecx
100135d7:	mov    eax,DWORD PTR [ebp-0x4]
100135da:	mov    ecx,DWORD PTR [eax+0x4]
100135dd:	push   ecx
100135de:	call   0x100130f0
100135e3:	add    esp,0x4
100135e6:	mov    esp,ebp
100135e8:	pop    ebp
100135e9:	ret    
100135ea:	int3   
100135eb:	int3   
100135ec:	int3   
100135ed:	int3   
100135ee:	int3   
100135ef:	int3   
100135f0:	push   ebp
100135f1:	mov    ebp,esp
100135f3:	sub    esp,0x8
100135f6:	push   esi
100135f7:	mov    DWORD PTR [ebp-0x8],ecx
100135fa:	mov    eax,DWORD PTR [ebp+0x8]
100135fd:	push   eax
100135fe:	call   0x10013110
10013603:	add    esp,0x4
10013606:	mov    ecx,DWORD PTR [eax]
10013608:	mov    DWORD PTR [ebp-0x4],ecx
1001360b:	mov    edx,DWORD PTR [ebp-0x4]
1001360e:	push   edx
1001360f:	call   0x100130f0
10013614:	add    esp,0x4
10013617:	mov    esi,eax
10013619:	mov    eax,DWORD PTR [ebp+0x8]
1001361c:	push   eax
1001361d:	call   0x10013110
10013622:	add    esp,0x4
10013625:	mov    ecx,DWORD PTR [esi]
10013627:	mov    DWORD PTR [eax],ecx
10013629:	mov    edx,DWORD PTR [ebp-0x4]
1001362c:	push   edx
1001362d:	call   0x100130f0
10013632:	add    esp,0x4
10013635:	mov    eax,DWORD PTR [eax]
10013637:	push   eax
10013638:	call   0x100130c0
1001363d:	add    esp,0x4
10013640:	movsx  ecx,BYTE PTR [eax]
10013643:	test   ecx,ecx
10013645:	jne    0x10013663
10013647:	mov    edx,DWORD PTR [ebp-0x4]
1001364a:	push   edx
1001364b:	call   0x100130f0
10013650:	add    esp,0x4
10013653:	mov    eax,DWORD PTR [eax]
10013655:	push   eax
10013656:	call   0x10013100
1001365b:	add    esp,0x4
1001365e:	mov    ecx,DWORD PTR [ebp+0x8]
10013661:	mov    DWORD PTR [eax],ecx
10013663:	mov    edx,DWORD PTR [ebp+0x8]
10013666:	push   edx
10013667:	call   0x10013100
1001366c:	add    esp,0x4
1001366f:	mov    esi,eax
10013671:	mov    eax,DWORD PTR [ebp-0x4]
10013674:	push   eax
10013675:	call   0x10013100
1001367a:	add    esp,0x4
1001367d:	mov    ecx,DWORD PTR [esi]
1001367f:	mov    DWORD PTR [eax],ecx
10013681:	mov    ecx,DWORD PTR [ebp-0x8]
10013684:	call   0x100137c0
10013689:	mov    edx,DWORD PTR [ebp+0x8]
1001368c:	cmp    edx,DWORD PTR [eax]
1001368e:	jne    0x1001369f
10013690:	mov    ecx,DWORD PTR [ebp-0x8]
10013693:	call   0x100137c0
10013698:	mov    ecx,DWORD PTR [ebp-0x4]
1001369b:	mov    DWORD PTR [eax],ecx
1001369d:	jmp    0x100136f7
1001369f:	mov    edx,DWORD PTR [ebp+0x8]
100136a2:	push   edx
100136a3:	call   0x10013100
100136a8:	add    esp,0x4
100136ab:	mov    eax,DWORD PTR [eax]
100136ad:	push   eax
100136ae:	call   0x100130f0
100136b3:	add    esp,0x4
100136b6:	mov    ecx,DWORD PTR [ebp+0x8]
100136b9:	cmp    ecx,DWORD PTR [eax]
100136bb:	jne    0x100136db
100136bd:	mov    edx,DWORD PTR [ebp+0x8]
100136c0:	push   edx
100136c1:	call   0x10013100
100136c6:	add    esp,0x4
100136c9:	mov    eax,DWORD PTR [eax]
100136cb:	push   eax
100136cc:	call   0x100130f0
100136d1:	add    esp,0x4
100136d4:	mov    ecx,DWORD PTR [ebp-0x4]
100136d7:	mov    DWORD PTR [eax],ecx
100136d9:	jmp    0x100136f7
100136db:	mov    edx,DWORD PTR [ebp+0x8]
100136de:	push   edx
100136df:	call   0x10013100
100136e4:	add    esp,0x4
100136e7:	mov    eax,DWORD PTR [eax]
100136e9:	push   eax
100136ea:	call   0x10013110
100136ef:	add    esp,0x4
100136f2:	mov    ecx,DWORD PTR [ebp-0x4]
100136f5:	mov    DWORD PTR [eax],ecx
100136f7:	mov    edx,DWORD PTR [ebp-0x4]
100136fa:	push   edx
100136fb:	call   0x100130f0
10013700:	add    esp,0x4
10013703:	mov    ecx,DWORD PTR [ebp+0x8]
10013706:	mov    DWORD PTR [eax],ecx
10013708:	mov    edx,DWORD PTR [ebp+0x8]
1001370b:	push   edx
1001370c:	call   0x10013100
10013711:	add    esp,0x4
10013714:	mov    ecx,DWORD PTR [ebp-0x4]
10013717:	mov    DWORD PTR [eax],ecx
10013719:	pop    esi
1001371a:	mov    esp,ebp
1001371c:	pop    ebp
1001371d:	ret    0x4
10013720:	push   ebp
10013721:	mov    ebp,esp
10013723:	mov    eax,DWORD PTR [ebp+0x8]
10013726:	push   eax
10013727:	call   0x10013110
1001372c:	add    esp,0x4
1001372f:	mov    ecx,DWORD PTR [eax]
10013731:	push   ecx
10013732:	call   0x100130c0
10013737:	add    esp,0x4
1001373a:	movsx  edx,BYTE PTR [eax]
1001373d:	test   edx,edx
1001373f:	jne    0x10013754
10013741:	mov    eax,DWORD PTR [ebp+0x8]
10013744:	push   eax
10013745:	call   0x10013110
1001374a:	add    esp,0x4
1001374d:	mov    ecx,DWORD PTR [eax]
1001374f:	mov    DWORD PTR [ebp+0x8],ecx
10013752:	jmp    0x10013723
10013754:	mov    eax,DWORD PTR [ebp+0x8]
10013757:	pop    ebp
10013758:	ret    
10013759:	int3   
1001375a:	int3   
1001375b:	int3   
1001375c:	int3   
1001375d:	int3   
1001375e:	int3   
1001375f:	int3   
10013760:	push   ebp
10013761:	mov    ebp,esp
10013763:	mov    eax,DWORD PTR [ebp+0x8]
10013766:	push   eax
10013767:	call   0x100130f0
1001376c:	add    esp,0x4
1001376f:	mov    ecx,DWORD PTR [eax]
10013771:	push   ecx
10013772:	call   0x100130c0
10013777:	add    esp,0x4
1001377a:	movsx  edx,BYTE PTR [eax]
1001377d:	test   edx,edx
1001377f:	jne    0x10013794
10013781:	mov    eax,DWORD PTR [ebp+0x8]
10013784:	push   eax
10013785:	call   0x100130f0
1001378a:	add    esp,0x4
1001378d:	mov    ecx,DWORD PTR [eax]
1001378f:	mov    DWORD PTR [ebp+0x8],ecx
10013792:	jmp    0x10013763
10013794:	mov    eax,DWORD PTR [ebp+0x8]
10013797:	pop    ebp
10013798:	ret    
10013799:	int3   
1001379a:	int3   
1001379b:	int3   
1001379c:	int3   
1001379d:	int3   
1001379e:	int3   
1001379f:	int3   
100137a0:	push   ebp
100137a1:	mov    ebp,esp
100137a3:	push   ecx
100137a4:	mov    DWORD PTR [ebp-0x4],ecx
100137a7:	mov    eax,DWORD PTR [ebp-0x4]
100137aa:	mov    ecx,DWORD PTR [eax+0x4]
100137ad:	push   ecx
100137ae:	call   0x10013110
100137b3:	add    esp,0x4
100137b6:	mov    esp,ebp
100137b8:	pop    ebp
100137b9:	ret    
100137ba:	int3   
100137bb:	int3   
100137bc:	int3   
100137bd:	int3   
100137be:	int3   
100137bf:	int3   
100137c0:	push   ebp
100137c1:	mov    ebp,esp
100137c3:	push   ecx
100137c4:	mov    DWORD PTR [ebp-0x4],ecx
100137c7:	mov    eax,DWORD PTR [ebp-0x4]
100137ca:	mov    ecx,DWORD PTR [eax+0x4]
100137cd:	push   ecx
100137ce:	call   0x10013100
100137d3:	add    esp,0x4
100137d6:	mov    esp,ebp
100137d8:	pop    ebp
100137d9:	ret    
100137da:	int3   
100137db:	int3   
100137dc:	int3   
100137dd:	int3   
100137de:	int3   
100137df:	int3   
100137e0:	push   ebp
100137e1:	mov    ebp,esp
100137e3:	sub    esp,0x8
100137e6:	push   esi
100137e7:	mov    DWORD PTR [ebp-0x8],ecx
100137ea:	mov    eax,DWORD PTR [ebp+0x8]
100137ed:	push   eax
100137ee:	call   0x100130f0
100137f3:	add    esp,0x4
100137f6:	mov    ecx,DWORD PTR [eax]
100137f8:	mov    DWORD PTR [ebp-0x4],ecx
100137fb:	mov    edx,DWORD PTR [ebp-0x4]
100137fe:	push   edx
100137ff:	call   0x10013110
10013804:	add    esp,0x4
10013807:	mov    esi,eax
10013809:	mov    eax,DWORD PTR [ebp+0x8]
1001380c:	push   eax
1001380d:	call   0x100130f0
10013812:	add    esp,0x4
10013815:	mov    ecx,DWORD PTR [esi]
10013817:	mov    DWORD PTR [eax],ecx
10013819:	mov    edx,DWORD PTR [ebp-0x4]
1001381c:	push   edx
1001381d:	call   0x10013110
10013822:	add    esp,0x4
10013825:	mov    eax,DWORD PTR [eax]
10013827:	push   eax
10013828:	call   0x100130c0
1001382d:	add    esp,0x4
10013830:	movsx  ecx,BYTE PTR [eax]
10013833:	test   ecx,ecx
10013835:	jne    0x10013853
10013837:	mov    edx,DWORD PTR [ebp-0x4]
1001383a:	push   edx
1001383b:	call   0x10013110
10013840:	add    esp,0x4
10013843:	mov    eax,DWORD PTR [eax]
10013845:	push   eax
10013846:	call   0x10013100
1001384b:	add    esp,0x4
1001384e:	mov    ecx,DWORD PTR [ebp+0x8]
10013851:	mov    DWORD PTR [eax],ecx
10013853:	mov    edx,DWORD PTR [ebp+0x8]
10013856:	push   edx
10013857:	call   0x10013100
1001385c:	add    esp,0x4
1001385f:	mov    esi,eax
10013861:	mov    eax,DWORD PTR [ebp-0x4]
10013864:	push   eax
10013865:	call   0x10013100
1001386a:	add    esp,0x4
1001386d:	mov    ecx,DWORD PTR [esi]
1001386f:	mov    DWORD PTR [eax],ecx
10013871:	mov    ecx,DWORD PTR [ebp-0x8]
10013874:	call   0x100137c0
10013879:	mov    edx,DWORD PTR [ebp+0x8]
1001387c:	cmp    edx,DWORD PTR [eax]
1001387e:	jne    0x1001388f
10013880:	mov    ecx,DWORD PTR [ebp-0x8]
10013883:	call   0x100137c0
10013888:	mov    ecx,DWORD PTR [ebp-0x4]
1001388b:	mov    DWORD PTR [eax],ecx
1001388d:	jmp    0x100138e7
1001388f:	mov    edx,DWORD PTR [ebp+0x8]
10013892:	push   edx
10013893:	call   0x10013100
10013898:	add    esp,0x4
1001389b:	mov    eax,DWORD PTR [eax]
1001389d:	push   eax
1001389e:	call   0x10013110
100138a3:	add    esp,0x4
100138a6:	mov    ecx,DWORD PTR [ebp+0x8]
100138a9:	cmp    ecx,DWORD PTR [eax]
100138ab:	jne    0x100138cb
100138ad:	mov    edx,DWORD PTR [ebp+0x8]
100138b0:	push   edx
100138b1:	call   0x10013100
100138b6:	add    esp,0x4
100138b9:	mov    eax,DWORD PTR [eax]
100138bb:	push   eax
100138bc:	call   0x10013110
100138c1:	add    esp,0x4
100138c4:	mov    ecx,DWORD PTR [ebp-0x4]
100138c7:	mov    DWORD PTR [eax],ecx
100138c9:	jmp    0x100138e7
100138cb:	mov    edx,DWORD PTR [ebp+0x8]
100138ce:	push   edx
100138cf:	call   0x10013100
100138d4:	add    esp,0x4
100138d7:	mov    eax,DWORD PTR [eax]
100138d9:	push   eax
100138da:	call   0x100130f0
100138df:	add    esp,0x4
100138e2:	mov    ecx,DWORD PTR [ebp-0x4]
100138e5:	mov    DWORD PTR [eax],ecx
100138e7:	mov    edx,DWORD PTR [ebp-0x4]
100138ea:	push   edx
100138eb:	call   0x10013110
100138f0:	add    esp,0x4
100138f3:	mov    ecx,DWORD PTR [ebp+0x8]
100138f6:	mov    DWORD PTR [eax],ecx
100138f8:	mov    edx,DWORD PTR [ebp+0x8]
100138fb:	push   edx
100138fc:	call   0x10013100
10013901:	add    esp,0x4
10013904:	mov    ecx,DWORD PTR [ebp-0x4]
10013907:	mov    DWORD PTR [eax],ecx
10013909:	pop    esi
1001390a:	mov    esp,ebp
1001390c:	pop    ebp
1001390d:	ret    0x4
10013910:	push   ebp
10013911:	mov    ebp,esp
10013913:	push   ecx
10013914:	mov    DWORD PTR [ebp-0x4],ecx
10013917:	mov    eax,DWORD PTR [ebp+0x8]
1001391a:	mov    ecx,DWORD PTR [ebp+0xc]
1001391d:	mov    edx,DWORD PTR [eax]
1001391f:	cmp    edx,DWORD PTR [ecx]
10013921:	sbb    eax,eax
10013923:	neg    eax
10013925:	mov    esp,ebp
10013927:	pop    ebp
10013928:	ret    0x8
1001392b:	int3   
1001392c:	int3   
1001392d:	int3   
1001392e:	int3   
1001392f:	int3   
10013930:	push   ebp
10013931:	mov    ebp,esp
10013933:	push   ecx
10013934:	mov    DWORD PTR [ebp-0x4],ecx
10013937:	mov    eax,DWORD PTR [ebp+0x8]
1001393a:	push   eax
1001393b:	call   0x1001876e
10013940:	add    esp,0x4
10013943:	mov    esp,ebp
10013945:	pop    ebp
10013946:	ret    0x8
10013949:	int3   
1001394a:	int3   
1001394b:	int3   
1001394c:	int3   
1001394d:	int3   
1001394e:	int3   
1001394f:	int3   
10013950:	push   ebp
10013951:	mov    ebp,esp
10013953:	push   ecx
10013954:	mov    DWORD PTR [ebp-0x4],ecx
10013957:	mov    eax,DWORD PTR [ebp+0xc]
1001395a:	push   eax
1001395b:	mov    ecx,DWORD PTR [ebp+0x8]
1001395e:	push   ecx
1001395f:	mov    ecx,DWORD PTR [ebp-0x4]
10013962:	call   0x10013be0
10013967:	mov    eax,DWORD PTR [ebp-0x4]
1001396a:	mov    esp,ebp
1001396c:	pop    ebp
1001396d:	ret    0x8
10013970:	push   ebp
10013971:	mov    ebp,esp
10013973:	push   ecx
10013974:	mov    DWORD PTR [ebp-0x4],ecx
10013977:	mov    ecx,DWORD PTR [ebp-0x4]
1001397a:	call   0x10013c20
1001397f:	mov    eax,DWORD PTR [ebp-0x4]
10013982:	mov    esp,ebp
10013984:	pop    ebp
10013985:	ret    
10013986:	int3   
10013987:	int3   
10013988:	int3   
10013989:	int3   
1001398a:	int3   
1001398b:	int3   
1001398c:	int3   
1001398d:	int3   
1001398e:	int3   
1001398f:	int3   
10013990:	push   ebp
10013991:	mov    ebp,esp
10013993:	push   ecx
10013994:	mov    DWORD PTR [ebp-0x4],ecx
10013997:	mov    eax,DWORD PTR [ebp-0x4]
1001399a:	cmp    DWORD PTR [eax],0x0
1001399d:	jne    0x100139a4
1001399f:	call   0x10018de3
100139a4:	mov    ecx,DWORD PTR [ebp-0x4]
100139a7:	mov    edx,DWORD PTR [ecx]
100139a9:	mov    eax,DWORD PTR [ebp-0x4]
100139ac:	mov    ecx,DWORD PTR [eax+0x4]
100139af:	cmp    ecx,DWORD PTR [edx+0x4]
100139b2:	jne    0x100139b9
100139b4:	call   0x10018de3
100139b9:	mov    edx,DWORD PTR [ebp-0x4]
100139bc:	mov    eax,DWORD PTR [edx+0x4]
100139bf:	push   eax
100139c0:	call   0x10013a40
100139c5:	add    esp,0x4
100139c8:	mov    esp,ebp
100139ca:	pop    ebp
100139cb:	ret    
100139cc:	int3   
100139cd:	int3   
100139ce:	int3   
100139cf:	int3   
100139d0:	push   ebp
100139d1:	mov    ebp,esp
100139d3:	push   ecx
100139d4:	mov    DWORD PTR [ebp-0x4],ecx
100139d7:	mov    ecx,DWORD PTR [ebp-0x4]
100139da:	call   0x10013c40
100139df:	mov    eax,DWORD PTR [ebp-0x4]
100139e2:	mov    esp,ebp
100139e4:	pop    ebp
100139e5:	ret    
100139e6:	int3   
100139e7:	int3   
100139e8:	int3   
100139e9:	int3   
100139ea:	int3   
100139eb:	int3   
100139ec:	int3   
100139ed:	int3   
100139ee:	int3   
100139ef:	int3   
100139f0:	push   ebp
100139f1:	mov    ebp,esp
100139f3:	push   ecx
100139f4:	mov    DWORD PTR [ebp-0x4],ecx
100139f7:	mov    eax,DWORD PTR [ebp-0x4]
100139fa:	mov    eax,DWORD PTR [eax+0x4]
100139fd:	mov    esp,ebp
100139ff:	pop    ebp
10013a00:	ret    
10013a01:	int3   
10013a02:	int3   
10013a03:	int3   
10013a04:	int3   
10013a05:	int3   
10013a06:	int3   
10013a07:	int3   
10013a08:	int3   
10013a09:	int3   
10013a0a:	int3   
10013a0b:	int3   
10013a0c:	int3   
10013a0d:	int3   
10013a0e:	int3   
10013a0f:	int3   
10013a10:	push   ebp
10013a11:	mov    ebp,esp
10013a13:	push   ecx
10013a14:	mov    DWORD PTR [ebp-0x4],ecx
10013a17:	mov    eax,DWORD PTR [ebp+0x8]
10013a1a:	mov    ecx,DWORD PTR [eax]
10013a1c:	mov    edx,DWORD PTR [eax+0x4]
10013a1f:	mov    eax,DWORD PTR [ebp-0x4]
10013a22:	mov    DWORD PTR [eax],ecx
10013a24:	mov    DWORD PTR [eax+0x4],edx
10013a27:	mov    ecx,DWORD PTR [ebp-0x4]
10013a2a:	mov    edx,DWORD PTR [ebp+0xc]
10013a2d:	mov    al,BYTE PTR [edx]
10013a2f:	mov    BYTE PTR [ecx+0x8],al
10013a32:	mov    eax,DWORD PTR [ebp-0x4]
10013a35:	mov    esp,ebp
10013a37:	pop    ebp
10013a38:	ret    0x8
10013a3b:	int3   
10013a3c:	int3   
10013a3d:	int3   
10013a3e:	int3   
10013a3f:	int3   
10013a40:	push   ebp
10013a41:	mov    ebp,esp
10013a43:	mov    eax,DWORD PTR [ebp+0x8]
10013a46:	add    eax,0x10
10013a49:	pop    ebp
10013a4a:	ret    
10013a4b:	int3   
10013a4c:	int3   
10013a4d:	int3   
10013a4e:	int3   
10013a4f:	int3   
10013a50:	push   ebp
10013a51:	mov    ebp,esp
10013a53:	push   ecx
10013a54:	mov    DWORD PTR [ebp-0x4],ecx
10013a57:	mov    ecx,DWORD PTR [ebp-0x4]
10013a5a:	add    ecx,0x3
10013a5d:	call   0x10013d30
10013a62:	mov    esp,ebp
10013a64:	pop    ebp
10013a65:	ret    
10013a66:	int3   
10013a67:	int3   
10013a68:	int3   
10013a69:	int3   
10013a6a:	int3   
10013a6b:	int3   
10013a6c:	int3   
10013a6d:	int3   
10013a6e:	int3   
10013a6f:	int3   
10013a70:	push   ebp
10013a71:	mov    ebp,esp
10013a73:	sub    esp,0xc
10013a76:	mov    DWORD PTR [ebp-0xc],ecx
10013a79:	mov    ecx,DWORD PTR [ebp-0xc]
10013a7c:	call   0x100137c0
10013a81:	mov    eax,DWORD PTR [eax]
10013a83:	mov    DWORD PTR [ebp-0x8],eax
10013a86:	mov    ecx,DWORD PTR [ebp-0xc]
10013a89:	mov    edx,DWORD PTR [ecx+0x4]
10013a8c:	mov    DWORD PTR [ebp-0x4],edx
10013a8f:	mov    eax,DWORD PTR [ebp-0x8]
10013a92:	push   eax
10013a93:	call   0x100130c0
10013a98:	add    esp,0x4
10013a9b:	movsx  ecx,BYTE PTR [eax]
10013a9e:	test   ecx,ecx
10013aa0:	jne    0x10013aee
10013aa2:	mov    edx,DWORD PTR [ebp+0x8]
10013aa5:	push   edx
10013aa6:	mov    eax,DWORD PTR [ebp-0x8]
10013aa9:	push   eax
10013aaa:	call   0x100130d0
10013aaf:	add    esp,0x4
10013ab2:	push   eax
10013ab3:	mov    ecx,DWORD PTR [ebp-0xc]
10013ab6:	call   0x10013910
10013abb:	movzx  ecx,al
10013abe:	test   ecx,ecx
10013ac0:	je     0x10013ad5
10013ac2:	mov    edx,DWORD PTR [ebp-0x8]
10013ac5:	push   edx
10013ac6:	call   0x10013110
10013acb:	add    esp,0x4
10013ace:	mov    eax,DWORD PTR [eax]
10013ad0:	mov    DWORD PTR [ebp-0x8],eax
10013ad3:	jmp    0x10013aec
10013ad5:	mov    ecx,DWORD PTR [ebp-0x8]
10013ad8:	mov    DWORD PTR [ebp-0x4],ecx
10013adb:	mov    edx,DWORD PTR [ebp-0x8]
10013ade:	push   edx
10013adf:	call   0x100130f0
10013ae4:	add    esp,0x4
10013ae7:	mov    eax,DWORD PTR [eax]
10013ae9:	mov    DWORD PTR [ebp-0x8],eax
10013aec:	jmp    0x10013a8f
10013aee:	mov    eax,DWORD PTR [ebp-0x4]
10013af1:	mov    esp,ebp
10013af3:	pop    ebp
10013af4:	ret    0x4
10013af7:	int3   
10013af8:	int3   
10013af9:	int3   
10013afa:	int3   
10013afb:	int3   
10013afc:	int3   
10013afd:	int3   
10013afe:	int3   
10013aff:	int3   
10013b00:	push   ebp
10013b01:	mov    ebp,esp
10013b03:	push   0xffffffff
10013b05:	push   0x1002d2e1
10013b0a:	mov    eax,fs:0x0
10013b10:	push   eax
10013b11:	push   ecx
10013b12:	sub    esp,0x18
10013b15:	push   ebx
10013b16:	push   esi
10013b17:	push   edi
10013b18:	mov    eax,ds:0x100c7654
10013b1d:	xor    eax,ebp
10013b1f:	push   eax
10013b20:	lea    eax,[ebp-0xc]
10013b23:	mov    fs:0x0,eax
10013b29:	mov    DWORD PTR [ebp-0x10],esp
10013b2c:	mov    DWORD PTR [ebp-0x20],ecx
10013b2f:	push   0x1
10013b31:	mov    ecx,DWORD PTR [ebp-0x20]
10013b34:	add    ecx,0x1
10013b37:	call   0x10013d60
10013b3c:	mov    DWORD PTR [ebp-0x14],eax
10013b3f:	mov    DWORD PTR [ebp-0x4],0x0
10013b46:	mov    eax,DWORD PTR [ebp-0x14]
10013b49:	push   eax
10013b4a:	push   0x28
10013b4c:	call   0x100012f0
10013b51:	add    esp,0x8
10013b54:	mov    DWORD PTR [ebp-0x1c],eax
10013b57:	mov    BYTE PTR [ebp-0x4],0x1
10013b5b:	cmp    DWORD PTR [ebp-0x1c],0x0
10013b5f:	je     0x10013b88
10013b61:	mov    cl,BYTE PTR [ebp+0x18]
10013b64:	push   ecx
10013b65:	mov    edx,DWORD PTR [ebp+0x14]
10013b68:	push   edx
10013b69:	mov    eax,DWORD PTR [ebp+0x10]
10013b6c:	push   eax
10013b6d:	mov    ecx,DWORD PTR [ebp+0xc]
10013b70:	push   ecx
10013b71:	mov    edx,DWORD PTR [ebp+0x8]
10013b74:	push   edx
10013b75:	mov    ecx,DWORD PTR [ebp-0x1c]
10013b78:	call   0x10013ea0
10013b7d:	mov    DWORD PTR [ebp-0x24],eax
10013b80:	mov    eax,DWORD PTR [ebp-0x24]
10013b83:	mov    DWORD PTR [ebp-0x28],eax
10013b86:	jmp    0x10013b8f
10013b88:	mov    DWORD PTR [ebp-0x28],0x0
10013b8f:	mov    ecx,DWORD PTR [ebp-0x28]
10013b92:	mov    DWORD PTR [ebp-0x18],ecx
10013b95:	mov    BYTE PTR [ebp-0x4],0x0
10013b99:	jmp    0x10013bc2
10013b9b:	push   0x1
10013b9d:	mov    edx,DWORD PTR [ebp-0x14]
10013ba0:	push   edx
10013ba1:	mov    ecx,DWORD PTR [ebp-0x20]
10013ba4:	add    ecx,0x1
10013ba7:	call   0x10013930
10013bac:	push   0x0
10013bae:	push   0x0
10013bb0:	call   0x10018e6e
10013bb5:	mov    DWORD PTR [ebp-0x4],0xffffffff
10013bbc:	mov    eax,0x10013bc9
10013bc1:	ret    
10013bc2:	mov    DWORD PTR [ebp-0x4],0xffffffff
10013bc9:	mov    eax,DWORD PTR [ebp-0x14]
10013bcc:	mov    ecx,DWORD PTR [ebp-0xc]
10013bcf:	mov    DWORD PTR fs:0x0,ecx
10013bd6:	pop    ecx
10013bd7:	pop    edi
10013bd8:	pop    esi
10013bd9:	pop    ebx
10013bda:	mov    esp,ebp
10013bdc:	pop    ebp
10013bdd:	ret    0x14
10013be0:	push   ebp
10013be1:	mov    ebp,esp
10013be3:	push   ecx
10013be4:	mov    DWORD PTR [ebp-0x4],ecx
10013be7:	mov    ecx,DWORD PTR [ebp-0x4]
10013bea:	call   0x10013d10
10013bef:	mov    eax,DWORD PTR [ebp-0x4]
10013bf2:	mov    ecx,DWORD PTR [ebp+0x8]
10013bf5:	mov    DWORD PTR [eax+0x4],ecx
10013bf8:	cmp    DWORD PTR [ebp+0xc],0x0
10013bfc:	jne    0x10013c03
10013bfe:	call   0x10018de3
10013c03:	mov    edx,DWORD PTR [ebp-0x4]
10013c06:	mov    eax,DWORD PTR [ebp+0xc]
10013c09:	mov    DWORD PTR [edx],eax
10013c0b:	mov    eax,DWORD PTR [ebp-0x4]
10013c0e:	mov    esp,ebp
10013c10:	pop    ebp
10013c11:	ret    0x8
10013c14:	int3   
10013c15:	int3   
10013c16:	int3   
10013c17:	int3   
10013c18:	int3   
10013c19:	int3   
10013c1a:	int3   
10013c1b:	int3   
10013c1c:	int3   
10013c1d:	int3   
10013c1e:	int3   
10013c1f:	int3   
10013c20:	push   ebp
10013c21:	mov    ebp,esp
10013c23:	push   ecx
10013c24:	mov    DWORD PTR [ebp-0x4],ecx
10013c27:	mov    ecx,DWORD PTR [ebp-0x4]
10013c2a:	call   0x10013d80
10013c2f:	mov    eax,DWORD PTR [ebp-0x4]
10013c32:	mov    esp,ebp
10013c34:	pop    ebp
10013c35:	ret    
10013c36:	int3   
10013c37:	int3   
10013c38:	int3   
10013c39:	int3   
10013c3a:	int3   
10013c3b:	int3   
10013c3c:	int3   
10013c3d:	int3   
10013c3e:	int3   
10013c3f:	int3   
10013c40:	push   ebp
10013c41:	mov    ebp,esp
10013c43:	sub    esp,0x8
10013c46:	mov    DWORD PTR [ebp-0x8],ecx
10013c49:	mov    eax,DWORD PTR [ebp-0x8]
10013c4c:	cmp    DWORD PTR [eax],0x0
10013c4f:	jne    0x10013c56
10013c51:	call   0x10018de3
10013c56:	mov    ecx,DWORD PTR [ebp-0x8]
10013c59:	mov    edx,DWORD PTR [ecx+0x4]
10013c5c:	push   edx
10013c5d:	call   0x100130c0
10013c62:	add    esp,0x4
10013c65:	movsx  eax,BYTE PTR [eax]
10013c68:	test   eax,eax
10013c6a:	je     0x10013c76
10013c6c:	call   0x10018de3
10013c71:	jmp    0x10013d0a
10013c76:	mov    ecx,DWORD PTR [ebp-0x8]
10013c79:	mov    edx,DWORD PTR [ecx+0x4]
10013c7c:	push   edx
10013c7d:	call   0x10013110
10013c82:	add    esp,0x4
10013c85:	mov    eax,DWORD PTR [eax]
10013c87:	push   eax
10013c88:	call   0x100130c0
10013c8d:	add    esp,0x4
10013c90:	movsx  ecx,BYTE PTR [eax]
10013c93:	test   ecx,ecx
10013c95:	jne    0x10013cb9
10013c97:	mov    edx,DWORD PTR [ebp-0x8]
10013c9a:	mov    eax,DWORD PTR [edx+0x4]
10013c9d:	push   eax
10013c9e:	call   0x10013110
10013ca3:	add    esp,0x4
10013ca6:	mov    ecx,DWORD PTR [eax]
10013ca8:	push   ecx
10013ca9:	call   0x10013760
10013cae:	add    esp,0x4
10013cb1:	mov    edx,DWORD PTR [ebp-0x8]
10013cb4:	mov    DWORD PTR [edx+0x4],eax
10013cb7:	jmp    0x10013d0a
10013cb9:	mov    eax,DWORD PTR [ebp-0x8]
10013cbc:	mov    ecx,DWORD PTR [eax+0x4]
10013cbf:	push   ecx
10013cc0:	call   0x10013100
10013cc5:	add    esp,0x4
10013cc8:	mov    edx,DWORD PTR [eax]
10013cca:	mov    DWORD PTR [ebp-0x4],edx
10013ccd:	mov    eax,DWORD PTR [ebp-0x4]
10013cd0:	push   eax
10013cd1:	call   0x100130c0
10013cd6:	add    esp,0x4
10013cd9:	movsx  ecx,BYTE PTR [eax]
10013cdc:	test   ecx,ecx
10013cde:	jne    0x10013d01
10013ce0:	mov    edx,DWORD PTR [ebp-0x4]
10013ce3:	push   edx
10013ce4:	call   0x10013110
10013ce9:	add    esp,0x4
10013cec:	mov    ecx,DWORD PTR [ebp-0x8]
10013cef:	mov    edx,DWORD PTR [ecx+0x4]
10013cf2:	cmp    edx,DWORD PTR [eax]
10013cf4:	jne    0x10013d01
10013cf6:	mov    eax,DWORD PTR [ebp-0x8]
10013cf9:	mov    ecx,DWORD PTR [ebp-0x4]
10013cfc:	mov    DWORD PTR [eax+0x4],ecx
10013cff:	jmp    0x10013cb9
10013d01:	mov    edx,DWORD PTR [ebp-0x8]
10013d04:	mov    eax,DWORD PTR [ebp-0x4]
10013d07:	mov    DWORD PTR [edx+0x4],eax
10013d0a:	mov    esp,ebp
10013d0c:	pop    ebp
10013d0d:	ret    
10013d0e:	int3   
10013d0f:	int3   
10013d10:	push   ebp
10013d11:	mov    ebp,esp
10013d13:	push   ecx
10013d14:	mov    DWORD PTR [ebp-0x4],ecx
10013d17:	mov    ecx,DWORD PTR [ebp-0x4]
10013d1a:	call   0x10001270
10013d1f:	mov    eax,DWORD PTR [ebp-0x4]
10013d22:	mov    esp,ebp
10013d24:	pop    ebp
10013d25:	ret    
10013d26:	int3   
10013d27:	int3   
10013d28:	int3   
10013d29:	int3   
10013d2a:	int3   
10013d2b:	int3   
10013d2c:	int3   
10013d2d:	int3   
10013d2e:	int3   
10013d2f:	int3   
10013d30:	push   ebp
10013d31:	mov    ebp,esp
10013d33:	sub    esp,0xc
10013d36:	mov    DWORD PTR [ebp-0x8],ecx
10013d39:	mov    DWORD PTR [ebp-0x4],0xfffffff
10013d40:	cmp    DWORD PTR [ebp-0x4],0x0
10013d44:	jbe    0x10013d4e
10013d46:	mov    eax,DWORD PTR [ebp-0x4]
10013d49:	mov    DWORD PTR [ebp-0xc],eax
10013d4c:	jmp    0x10013d55
10013d4e:	mov    DWORD PTR [ebp-0xc],0x1
10013d55:	mov    eax,DWORD PTR [ebp-0xc]
10013d58:	mov    esp,ebp
10013d5a:	pop    ebp
10013d5b:	ret    
10013d5c:	int3   
10013d5d:	int3   
10013d5e:	int3   
10013d5f:	int3   
10013d60:	push   ebp
10013d61:	mov    ebp,esp
10013d63:	push   ecx
10013d64:	mov    DWORD PTR [ebp-0x4],ecx
10013d67:	push   0x0
10013d69:	mov    eax,DWORD PTR [ebp+0x8]
10013d6c:	push   eax
10013d6d:	call   0x10013f60
10013d72:	add    esp,0x8
10013d75:	mov    esp,ebp
10013d77:	pop    ebp
10013d78:	ret    0x4
10013d7b:	int3   
10013d7c:	int3   
10013d7d:	int3   
10013d7e:	int3   
10013d7f:	int3   
10013d80:	push   ebp
10013d81:	mov    ebp,esp
10013d83:	sub    esp,0x8
10013d86:	mov    DWORD PTR [ebp-0x8],ecx
10013d89:	mov    eax,DWORD PTR [ebp-0x8]
10013d8c:	cmp    DWORD PTR [eax],0x0
10013d8f:	jne    0x10013d96
10013d91:	call   0x10018de3
10013d96:	mov    ecx,DWORD PTR [ebp-0x8]
10013d99:	mov    edx,DWORD PTR [ecx+0x4]
10013d9c:	push   edx
10013d9d:	call   0x100130c0
10013da2:	add    esp,0x4
10013da5:	movsx  eax,BYTE PTR [eax]
10013da8:	test   eax,eax
10013daa:	je     0x10013de3
10013dac:	mov    ecx,DWORD PTR [ebp-0x8]
10013daf:	mov    edx,DWORD PTR [ecx+0x4]
10013db2:	push   edx
10013db3:	call   0x10013110
10013db8:	add    esp,0x4
10013dbb:	mov    ecx,DWORD PTR [ebp-0x8]
10013dbe:	mov    edx,DWORD PTR [eax]
10013dc0:	mov    DWORD PTR [ecx+0x4],edx
10013dc3:	mov    eax,DWORD PTR [ebp-0x8]
10013dc6:	mov    ecx,DWORD PTR [eax+0x4]
10013dc9:	push   ecx
10013dca:	call   0x100130c0
10013dcf:	add    esp,0x4
10013dd2:	movsx  edx,BYTE PTR [eax]
10013dd5:	test   edx,edx
10013dd7:	je     0x10013dde
10013dd9:	call   0x10018de3
10013dde:	jmp    0x10013e94
10013de3:	mov    eax,DWORD PTR [ebp-0x8]
10013de6:	mov    ecx,DWORD PTR [eax+0x4]
10013de9:	push   ecx
10013dea:	call   0x100130f0
10013def:	add    esp,0x4
10013df2:	mov    edx,DWORD PTR [eax]
10013df4:	push   edx
10013df5:	call   0x100130c0
10013dfa:	add    esp,0x4
10013dfd:	movsx  eax,BYTE PTR [eax]
10013e00:	test   eax,eax
10013e02:	jne    0x10013e26
10013e04:	mov    ecx,DWORD PTR [ebp-0x8]
10013e07:	mov    edx,DWORD PTR [ecx+0x4]
10013e0a:	push   edx
10013e0b:	call   0x100130f0
10013e10:	add    esp,0x4
10013e13:	mov    eax,DWORD PTR [eax]
10013e15:	push   eax
10013e16:	call   0x10013720
10013e1b:	add    esp,0x4
10013e1e:	mov    ecx,DWORD PTR [ebp-0x8]
10013e21:	mov    DWORD PTR [ecx+0x4],eax
10013e24:	jmp    0x10013e94
10013e26:	mov    edx,DWORD PTR [ebp-0x8]
10013e29:	mov    eax,DWORD PTR [edx+0x4]
10013e2c:	push   eax
10013e2d:	call   0x10013100
10013e32:	add    esp,0x4
10013e35:	mov    ecx,DWORD PTR [eax]
10013e37:	mov    DWORD PTR [ebp-0x4],ecx
10013e3a:	mov    edx,DWORD PTR [ebp-0x4]
10013e3d:	push   edx
10013e3e:	call   0x100130c0
10013e43:	add    esp,0x4
10013e46:	movsx  eax,BYTE PTR [eax]
10013e49:	test   eax,eax
10013e4b:	jne    0x10013e6e
10013e4d:	mov    ecx,DWORD PTR [ebp-0x4]
10013e50:	push   ecx
10013e51:	call   0x100130f0
10013e56:	add    esp,0x4
10013e59:	mov    edx,DWORD PTR [ebp-0x8]
10013e5c:	mov    ecx,DWORD PTR [edx+0x4]
10013e5f:	cmp    ecx,DWORD PTR [eax]
10013e61:	jne    0x10013e6e
10013e63:	mov    edx,DWORD PTR [ebp-0x8]
10013e66:	mov    eax,DWORD PTR [ebp-0x4]
10013e69:	mov    DWORD PTR [edx+0x4],eax
10013e6c:	jmp    0x10013e26
10013e6e:	mov    ecx,DWORD PTR [ebp-0x8]
10013e71:	mov    edx,DWORD PTR [ecx+0x4]
10013e74:	push   edx
10013e75:	call   0x100130c0
10013e7a:	add    esp,0x4
10013e7d:	movsx  eax,BYTE PTR [eax]
10013e80:	test   eax,eax
10013e82:	je     0x10013e8b
10013e84:	call   0x10018de3
10013e89:	jmp    0x10013e94
10013e8b:	mov    ecx,DWORD PTR [ebp-0x8]
10013e8e:	mov    edx,DWORD PTR [ebp-0x4]
10013e91:	mov    DWORD PTR [ecx+0x4],edx
10013e94:	mov    esp,ebp
10013e96:	pop    ebp
10013e97:	ret    
10013e98:	int3   
10013e99:	int3   
10013e9a:	int3   
10013e9b:	int3   
10013e9c:	int3   
10013e9d:	int3   
10013e9e:	int3   
10013e9f:	int3   
10013ea0:	push   ebp
10013ea1:	mov    ebp,esp
10013ea3:	push   ecx
10013ea4:	mov    DWORD PTR [ebp-0x4],ecx
10013ea7:	mov    eax,DWORD PTR [ebp-0x4]
10013eaa:	mov    ecx,DWORD PTR [ebp+0x8]
10013ead:	mov    DWORD PTR [eax],ecx
10013eaf:	mov    edx,DWORD PTR [ebp-0x4]
10013eb2:	mov    eax,DWORD PTR [ebp+0xc]
10013eb5:	mov    DWORD PTR [edx+0x4],eax
10013eb8:	mov    ecx,DWORD PTR [ebp-0x4]
10013ebb:	mov    edx,DWORD PTR [ebp+0x10]
10013ebe:	mov    DWORD PTR [ecx+0x8],edx
10013ec1:	mov    eax,DWORD PTR [ebp+0x14]
10013ec4:	mov    ecx,DWORD PTR [ebp-0x4]
10013ec7:	add    ecx,0x10
10013eca:	mov    edx,DWORD PTR [eax]
10013ecc:	mov    DWORD PTR [ecx],edx
10013ece:	mov    edx,DWORD PTR [eax+0x4]
10013ed1:	mov    DWORD PTR [ecx+0x4],edx
10013ed4:	mov    edx,DWORD PTR [eax+0x8]
10013ed7:	mov    DWORD PTR [ecx+0x8],edx
10013eda:	mov    eax,DWORD PTR [eax+0xc]
10013edd:	mov    DWORD PTR [ecx+0xc],eax
10013ee0:	mov    ecx,DWORD PTR [ebp-0x4]
10013ee3:	mov    dl,BYTE PTR [ebp+0x18]
10013ee6:	mov    BYTE PTR [ecx+0x20],dl
10013ee9:	mov    eax,DWORD PTR [ebp-0x4]
10013eec:	mov    BYTE PTR [eax+0x21],0x0
10013ef0:	mov    eax,DWORD PTR [ebp-0x4]
10013ef3:	mov    esp,ebp
10013ef5:	pop    ebp
10013ef6:	ret    0x14
10013ef9:	int3   
10013efa:	int3   
10013efb:	int3   
10013efc:	int3   
10013efd:	int3   
10013efe:	int3   
10013eff:	int3   
10013f00:	push   ebp
10013f01:	mov    ebp,esp
10013f03:	lea    eax,[ebp+0x10]
10013f06:	push   eax
10013f07:	lea    ecx,[ebp+0xc]
10013f0a:	push   ecx
10013f0b:	mov    ecx,DWORD PTR [ebp+0x8]
10013f0e:	call   0x10013fb0
10013f13:	mov    eax,DWORD PTR [ebp+0x8]
10013f16:	pop    ebp
10013f17:	ret    
10013f18:	int3   
10013f19:	int3   
10013f1a:	int3   
10013f1b:	int3   
10013f1c:	int3   
10013f1d:	int3   
10013f1e:	int3   
10013f1f:	int3   
10013f20:	push   ebp
10013f21:	mov    ebp,esp
10013f23:	push   ecx
10013f24:	mov    DWORD PTR [ebp-0x4],ecx
10013f27:	mov    eax,DWORD PTR [ebp-0x4]
10013f2a:	mov    ecx,DWORD PTR [ebp+0x8]
10013f2d:	mov    edx,DWORD PTR [ecx]
10013f2f:	mov    DWORD PTR [eax],edx
10013f31:	mov    eax,DWORD PTR [ebp-0x4]
10013f34:	mov    ecx,DWORD PTR [ebp+0x8]
10013f37:	mov    edx,DWORD PTR [ecx+0x8]
10013f3a:	mov    DWORD PTR [eax+0x8],edx
10013f3d:	mov    ecx,DWORD PTR [ecx+0xc]
10013f40:	mov    DWORD PTR [eax+0xc],ecx
10013f43:	mov    eax,DWORD PTR [ebp-0x4]
10013f46:	mov    esp,ebp
10013f48:	pop    ebp
10013f49:	ret    0x4
10013f4c:	int3   
10013f4d:	int3   
10013f4e:	int3   
10013f4f:	int3   
10013f50:	push   ebp
10013f51:	mov    ebp,esp
10013f53:	pop    ebp
10013f54:	ret    
10013f55:	int3   
10013f56:	int3   
10013f57:	int3   
10013f58:	int3   
10013f59:	int3   
10013f5a:	int3   
10013f5b:	int3   
10013f5c:	int3   
10013f5d:	int3   
10013f5e:	int3   
10013f5f:	int3   
10013f60:	push   ebp
10013f61:	mov    ebp,esp
10013f63:	sub    esp,0xc
10013f66:	cmp    DWORD PTR [ebp+0x8],0x0
10013f6a:	ja     0x10013f75
10013f6c:	mov    DWORD PTR [ebp+0x8],0x0
10013f73:	jmp    0x10013f9a
10013f75:	or     eax,0xffffffff
10013f78:	xor    edx,edx
10013f7a:	div    DWORD PTR [ebp+0x8]
10013f7d:	cmp    eax,0x28
10013f80:	jae    0x10013f9a
10013f82:	push   0x0
10013f84:	lea    ecx,[ebp-0xc]
10013f87:	call   0x10001310
10013f8c:	push   0x100bba4c
10013f91:	lea    eax,[ebp-0xc]
10013f94:	push   eax
10013f95:	call   0x10018e6e
10013f9a:	mov    ecx,DWORD PTR [ebp+0x8]
10013f9d:	imul   ecx,ecx,0x28
10013fa0:	push   ecx
10013fa1:	call   0x100190b4
10013fa6:	add    esp,0x4
10013fa9:	mov    esp,ebp
10013fab:	pop    ebp
10013fac:	ret    
10013fad:	int3   
10013fae:	int3   
10013faf:	int3   
10013fb0:	push   ebp
10013fb1:	mov    ebp,esp
10013fb3:	push   ecx
10013fb4:	mov    DWORD PTR [ebp-0x4],ecx
10013fb7:	mov    eax,DWORD PTR [ebp-0x4]
10013fba:	mov    ecx,DWORD PTR [ebp+0x8]
10013fbd:	mov    edx,DWORD PTR [ecx]
10013fbf:	mov    DWORD PTR [eax],edx
10013fc1:	mov    eax,DWORD PTR [ebp-0x4]
10013fc4:	mov    ecx,DWORD PTR [ebp+0xc]
10013fc7:	mov    edx,DWORD PTR [ecx]
10013fc9:	mov    DWORD PTR [eax+0x8],edx
10013fcc:	mov    ecx,DWORD PTR [ecx+0x4]
10013fcf:	mov    DWORD PTR [eax+0xc],ecx
10013fd2:	mov    eax,DWORD PTR [ebp-0x4]
10013fd5:	mov    esp,ebp
10013fd7:	pop    ebp
10013fd8:	ret    0x8
10013fdb:	int3   
10013fdc:	int3   
10013fdd:	int3   
10013fde:	int3   
10013fdf:	int3   
10013fe0:	push   ebp
10013fe1:	mov    ebp,esp
10013fe3:	sub    esp,0x8
10013fe6:	mov    DWORD PTR [ebp-0x8],ecx
10013fe9:	lea    ecx,[ebp-0x1]
10013fec:	call   0x10014050
10013ff1:	push   eax
10013ff2:	lea    eax,[ebp-0x2]
10013ff5:	push   eax
10013ff6:	mov    ecx,DWORD PTR [ebp-0x8]
10013ff9:	call   0x10014010
10013ffe:	mov    eax,DWORD PTR [ebp-0x8]
10014001:	mov    esp,ebp
10014003:	pop    ebp
10014004:	ret    
10014005:	int3   
10014006:	int3   
10014007:	int3   
10014008:	int3   
10014009:	int3   
1001400a:	int3   
1001400b:	int3   
1001400c:	int3   
1001400d:	int3   
1001400e:	int3   
1001400f:	int3   
10014010:	push   ebp
10014011:	mov    ebp,esp
10014013:	sub    esp,0x8
10014016:	mov    DWORD PTR [ebp-0x8],ecx
10014019:	push   ecx
1001401a:	mov    ecx,esp
1001401c:	mov    eax,DWORD PTR [ebp+0xc]
1001401f:	push   eax
10014020:	call   0x10014110
10014025:	mov    ecx,DWORD PTR [ebp+0x8]
10014028:	push   ecx
10014029:	mov    ecx,DWORD PTR [ebp-0x8]
1001402c:	call   0x100140d0
10014031:	mov    ecx,DWORD PTR [ebp-0x8]
10014034:	call   0x10014060
10014039:	mov    eax,DWORD PTR [ebp-0x8]
1001403c:	mov    esp,ebp
1001403e:	pop    ebp
1001403f:	ret    0x8
10014042:	int3   
10014043:	int3   
10014044:	int3   
10014045:	int3   
10014046:	int3   
10014047:	int3   
10014048:	int3   
10014049:	int3   
1001404a:	int3   
1001404b:	int3   
1001404c:	int3   
1001404d:	int3   
1001404e:	int3   
1001404f:	int3   
10014050:	push   ebp
10014051:	mov    ebp,esp
10014053:	push   ecx
10014054:	mov    DWORD PTR [ebp-0x4],ecx
10014057:	mov    eax,DWORD PTR [ebp-0x4]
1001405a:	mov    esp,ebp
1001405c:	pop    ebp
1001405d:	ret    
1001405e:	int3   
1001405f:	int3   
10014060:	push   ebp
10014061:	mov    ebp,esp
10014063:	push   ecx
10014064:	mov    DWORD PTR [ebp-0x4],ecx
10014067:	mov    ecx,DWORD PTR [ebp-0x4]
1001406a:	call   0x10014120
1001406f:	mov    ecx,DWORD PTR [ebp-0x4]
10014072:	mov    DWORD PTR [ecx+0x4],eax
10014075:	mov    edx,DWORD PTR [ebp-0x4]
10014078:	mov    eax,DWORD PTR [edx+0x4]
1001407b:	push   eax
1001407c:	call   0x100130c0
10014081:	add    esp,0x4
10014084:	mov    BYTE PTR [eax],0x1
10014087:	mov    ecx,DWORD PTR [ebp-0x4]
1001408a:	call   0x100137c0
1001408f:	mov    ecx,DWORD PTR [ebp-0x4]
10014092:	mov    edx,DWORD PTR [ecx+0x4]
10014095:	mov    DWORD PTR [eax],edx
10014097:	mov    ecx,DWORD PTR [ebp-0x4]
1001409a:	call   0x100135d0
1001409f:	mov    ecx,DWORD PTR [ebp-0x4]
100140a2:	mov    edx,DWORD PTR [ecx+0x4]
100140a5:	mov    DWORD PTR [eax],edx
100140a7:	mov    ecx,DWORD PTR [ebp-0x4]
100140aa:	call   0x100137a0
100140af:	mov    ecx,DWORD PTR [ebp-0x4]
100140b2:	mov    edx,DWORD PTR [ecx+0x4]
100140b5:	mov    DWORD PTR [eax],edx
100140b7:	mov    eax,DWORD PTR [ebp-0x4]
100140ba:	mov    DWORD PTR [eax+0x8],0x0
100140c1:	mov    esp,ebp
100140c3:	pop    ebp
100140c4:	ret    
100140c5:	int3   
100140c6:	int3   
100140c7:	int3   
100140c8:	int3   
100140c9:	int3   
100140ca:	int3   
100140cb:	int3   
100140cc:	int3   
100140cd:	int3   
100140ce:	int3   
100140cf:	int3   
100140d0:	push   ebp
100140d1:	mov    ebp,esp
100140d3:	sub    esp,0x8
100140d6:	mov    DWORD PTR [ebp-0x8],ecx
100140d9:	push   ecx
100140da:	mov    ecx,esp
100140dc:	lea    eax,[ebp+0xc]
100140df:	push   eax
100140e0:	call   0x10014110
100140e5:	mov    ecx,DWORD PTR [ebp+0x8]
100140e8:	push   ecx
100140e9:	mov    ecx,DWORD PTR [ebp-0x8]
100140ec:	call   0x100142c0
100140f1:	lea    edx,[ebp+0xc]
100140f4:	push   edx
100140f5:	mov    ecx,DWORD PTR [ebp-0x8]
100140f8:	add    ecx,0x3
100140fb:	call   0x10014110
10014100:	mov    eax,DWORD PTR [ebp-0x8]
10014103:	mov    esp,ebp
10014105:	pop    ebp
10014106:	ret    0x8
10014109:	int3   
1001410a:	int3   
1001410b:	int3   
1001410c:	int3   
1001410d:	int3   
1001410e:	int3   
1001410f:	int3   
10014110:	push   ebp
10014111:	mov    ebp,esp
10014113:	push   ecx
10014114:	mov    DWORD PTR [ebp-0x4],ecx
10014117:	mov    eax,DWORD PTR [ebp-0x4]
1001411a:	mov    esp,ebp
1001411c:	pop    ebp
1001411d:	ret    0x4
10014120:	push   ebp
10014121:	mov    ebp,esp
10014123:	push   0xffffffff
10014125:	push   0x1002d300
1001412a:	mov    eax,fs:0x0
10014130:	push   eax
10014131:	push   ecx
10014132:	sub    esp,0x24
10014135:	push   ebx
10014136:	push   esi
10014137:	push   edi
10014138:	mov    eax,ds:0x100c7654
1001413d:	xor    eax,ebp
1001413f:	push   eax
10014140:	lea    eax,[ebp-0xc]
10014143:	mov    fs:0x0,eax
10014149:	mov    DWORD PTR [ebp-0x10],esp
1001414c:	mov    DWORD PTR [ebp-0x28],ecx
1001414f:	push   0x1
10014151:	mov    ecx,DWORD PTR [ebp-0x28]
10014154:	add    ecx,0x1
10014157:	call   0x10013d60
1001415c:	mov    DWORD PTR [ebp-0x18],eax
1001415f:	mov    DWORD PTR [ebp-0x14],0x0
10014166:	mov    DWORD PTR [ebp-0x4],0x0
1001416d:	mov    DWORD PTR [ebp-0x1c],0x0
10014174:	mov    eax,DWORD PTR [ebp-0x18]
10014177:	push   eax
10014178:	call   0x100130f0
1001417d:	add    esp,0x4
10014180:	mov    DWORD PTR [ebp-0x2c],eax
10014183:	lea    ecx,[ebp-0x1c]
10014186:	push   ecx
10014187:	mov    edx,DWORD PTR [ebp-0x2c]
1001418a:	push   edx
1001418b:	mov    ecx,DWORD PTR [ebp-0x28]
1001418e:	add    ecx,0x2
10014191:	call   0x10014330
10014196:	mov    eax,DWORD PTR [ebp-0x14]
10014199:	add    eax,0x1
1001419c:	mov    DWORD PTR [ebp-0x14],eax
1001419f:	mov    DWORD PTR [ebp-0x20],0x0
100141a6:	mov    ecx,DWORD PTR [ebp-0x18]
100141a9:	push   ecx
100141aa:	call   0x10013100
100141af:	add    esp,0x4
100141b2:	mov    DWORD PTR [ebp-0x30],eax
100141b5:	lea    edx,[ebp-0x20]
100141b8:	push   edx
100141b9:	mov    eax,DWORD PTR [ebp-0x30]
100141bc:	push   eax
100141bd:	mov    ecx,DWORD PTR [ebp-0x28]
100141c0:	add    ecx,0x2
100141c3:	call   0x10014330
100141c8:	mov    ecx,DWORD PTR [ebp-0x14]
100141cb:	add    ecx,0x1
100141ce:	mov    DWORD PTR [ebp-0x14],ecx
100141d1:	mov    DWORD PTR [ebp-0x24],0x0
100141d8:	mov    edx,DWORD PTR [ebp-0x18]
100141db:	push   edx
100141dc:	call   0x10013110
100141e1:	add    esp,0x4
100141e4:	mov    DWORD PTR [ebp-0x34],eax
100141e7:	lea    eax,[ebp-0x24]
100141ea:	push   eax
100141eb:	mov    ecx,DWORD PTR [ebp-0x34]
100141ee:	push   ecx
100141ef:	mov    ecx,DWORD PTR [ebp-0x28]
100141f2:	add    ecx,0x2
100141f5:	call   0x10014330
100141fa:	jmp    0x1001425f
100141fc:	cmp    DWORD PTR [ebp-0x14],0x1
10014200:	jle    0x1001421a
10014202:	mov    edx,DWORD PTR [ebp-0x18]
10014205:	push   edx
10014206:	call   0x10013100
1001420b:	add    esp,0x4
1001420e:	push   eax
1001420f:	mov    ecx,DWORD PTR [ebp-0x28]
10014212:	add    ecx,0x2
10014215:	call   0x100142a0
1001421a:	cmp    DWORD PTR [ebp-0x14],0x0
1001421e:	jle    0x10014238
10014220:	mov    eax,DWORD PTR [ebp-0x18]
10014223:	push   eax
10014224:	call   0x100130f0
10014229:	add    esp,0x4
1001422c:	push   eax
1001422d:	mov    ecx,DWORD PTR [ebp-0x28]
10014230:	add    ecx,0x2
10014233:	call   0x100142a0
10014238:	push   0x1
1001423a:	mov    ecx,DWORD PTR [ebp-0x18]
1001423d:	push   ecx
1001423e:	mov    ecx,DWORD PTR [ebp-0x28]
10014241:	add    ecx,0x1
10014244:	call   0x10013930
10014249:	push   0x0
1001424b:	push   0x0
1001424d:	call   0x10018e6e
10014252:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014259:	mov    eax,0x10014266
1001425e:	ret    
1001425f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014266:	mov    edx,DWORD PTR [ebp-0x18]
10014269:	push   edx
1001426a:	call   0x100130b0
1001426f:	add    esp,0x4
10014272:	mov    BYTE PTR [eax],0x1
10014275:	mov    eax,DWORD PTR [ebp-0x18]
10014278:	push   eax
10014279:	call   0x100130c0
1001427e:	add    esp,0x4
10014281:	mov    BYTE PTR [eax],0x0
10014284:	mov    eax,DWORD PTR [ebp-0x18]
10014287:	mov    ecx,DWORD PTR [ebp-0xc]
1001428a:	mov    DWORD PTR fs:0x0,ecx
10014291:	pop    ecx
10014292:	pop    edi
10014293:	pop    esi
10014294:	pop    ebx
10014295:	mov    esp,ebp
10014297:	pop    ebp
10014298:	ret    
10014299:	int3   
1001429a:	int3   
1001429b:	int3   
1001429c:	int3   
1001429d:	int3   
1001429e:	int3   
1001429f:	int3   
100142a0:	push   ebp
100142a1:	mov    ebp,esp
100142a3:	push   ecx
100142a4:	mov    DWORD PTR [ebp-0x4],ecx
100142a7:	mov    eax,DWORD PTR [ebp+0x8]
100142aa:	push   eax
100142ab:	call   0x10013f50
100142b0:	add    esp,0x4
100142b3:	mov    esp,ebp
100142b5:	pop    ebp
100142b6:	ret    0x4
100142b9:	int3   
100142ba:	int3   
100142bb:	int3   
100142bc:	int3   
100142bd:	int3   
100142be:	int3   
100142bf:	int3   
100142c0:	push   ebp
100142c1:	mov    ebp,esp
100142c3:	sub    esp,0x8
100142c6:	mov    DWORD PTR [ebp-0x8],ecx
100142c9:	push   ecx
100142ca:	mov    ecx,esp
100142cc:	lea    eax,[ebp+0xc]
100142cf:	push   eax
100142d0:	call   0x10014110
100142d5:	mov    ecx,DWORD PTR [ebp+0x8]
100142d8:	push   ecx
100142d9:	mov    ecx,DWORD PTR [ebp-0x8]
100142dc:	call   0x10014300
100142e1:	lea    edx,[ebp+0xc]
100142e4:	push   edx
100142e5:	mov    ecx,DWORD PTR [ebp-0x8]
100142e8:	add    ecx,0x2
100142eb:	call   0x10014110
100142f0:	mov    eax,DWORD PTR [ebp-0x8]
100142f3:	mov    esp,ebp
100142f5:	pop    ebp
100142f6:	ret    0x8
100142f9:	int3   
100142fa:	int3   
100142fb:	int3   
100142fc:	int3   
100142fd:	int3   
100142fe:	int3   
100142ff:	int3   
10014300:	push   ebp
10014301:	mov    ebp,esp
10014303:	push   ecx
10014304:	mov    DWORD PTR [ebp-0x4],ecx
10014307:	mov    eax,DWORD PTR [ebp+0x8]
1001430a:	mov    cl,BYTE PTR [eax]
1001430c:	push   ecx
1001430d:	mov    ecx,DWORD PTR [ebp-0x4]
10014310:	call   0x10014110
10014315:	lea    edx,[ebp+0xc]
10014318:	push   edx
10014319:	mov    ecx,DWORD PTR [ebp-0x4]
1001431c:	add    ecx,0x1
1001431f:	call   0x10014110
10014324:	mov    eax,DWORD PTR [ebp-0x4]
10014327:	mov    esp,ebp
10014329:	pop    ebp
1001432a:	ret    0x8
1001432d:	int3   
1001432e:	int3   
1001432f:	int3   
10014330:	push   ebp
10014331:	mov    ebp,esp
10014333:	push   ecx
10014334:	mov    DWORD PTR [ebp-0x4],ecx
10014337:	mov    eax,DWORD PTR [ebp+0xc]
1001433a:	push   eax
1001433b:	mov    ecx,DWORD PTR [ebp+0x8]
1001433e:	push   ecx
1001433f:	call   0x10014350
10014344:	add    esp,0x8
10014347:	mov    esp,ebp
10014349:	pop    ebp
1001434a:	ret    0x8
1001434d:	int3   
1001434e:	int3   
1001434f:	int3   
10014350:	push   ebp
10014351:	mov    ebp,esp
10014353:	sub    esp,0xc
10014356:	mov    eax,DWORD PTR [ebp+0x8]
10014359:	mov    DWORD PTR [ebp-0x4],eax
1001435c:	mov    ecx,DWORD PTR [ebp-0x4]
1001435f:	push   ecx
10014360:	push   0x4
10014362:	call   0x100012f0
10014367:	add    esp,0x8
1001436a:	mov    DWORD PTR [ebp-0x8],eax
1001436d:	cmp    DWORD PTR [ebp-0x8],0x0
10014371:	je     0x10014385
10014373:	mov    edx,DWORD PTR [ebp-0x8]
10014376:	mov    eax,DWORD PTR [ebp+0xc]
10014379:	mov    ecx,DWORD PTR [eax]
1001437b:	mov    DWORD PTR [edx],ecx
1001437d:	mov    edx,DWORD PTR [ebp-0x8]
10014380:	mov    DWORD PTR [ebp-0xc],edx
10014383:	jmp    0x1001438c
10014385:	mov    DWORD PTR [ebp-0xc],0x0
1001438c:	mov    esp,ebp
1001438e:	pop    ebp
1001438f:	ret    
10014390:	push   ebp
10014391:	mov    ebp,esp
10014393:	push   ecx
10014394:	mov    DWORD PTR [ebp-0x4],ecx
10014397:	mov    ecx,DWORD PTR [ebp-0x4]
1001439a:	call   0x100143b0
1001439f:	mov    esp,ebp
100143a1:	pop    ebp
100143a2:	ret    
100143a3:	int3   
100143a4:	int3   
100143a5:	int3   
100143a6:	int3   
100143a7:	int3   
100143a8:	int3   
100143a9:	int3   
100143aa:	int3   
100143ab:	int3   
100143ac:	int3   
100143ad:	int3   
100143ae:	int3   
100143af:	int3   
100143b0:	push   ebp
100143b1:	mov    ebp,esp
100143b3:	push   ecx
100143b4:	mov    DWORD PTR [ebp-0x4],ecx
100143b7:	mov    ecx,DWORD PTR [ebp-0x4]
100143ba:	call   0x100143d0
100143bf:	mov    esp,ebp
100143c1:	pop    ebp
100143c2:	ret    
100143c3:	int3   
100143c4:	int3   
100143c5:	int3   
100143c6:	int3   
100143c7:	int3   
100143c8:	int3   
100143c9:	int3   
100143ca:	int3   
100143cb:	int3   
100143cc:	int3   
100143cd:	int3   
100143ce:	int3   
100143cf:	int3   
100143d0:	push   ebp
100143d1:	mov    ebp,esp
100143d3:	sub    esp,0x1c
100143d6:	mov    DWORD PTR [ebp-0x1c],ecx
100143d9:	lea    eax,[ebp-0x8]
100143dc:	push   eax
100143dd:	mov    ecx,DWORD PTR [ebp-0x1c]
100143e0:	call   0x100125b0
100143e5:	mov    ecx,DWORD PTR [eax+0x4]
100143e8:	push   ecx
100143e9:	mov    edx,DWORD PTR [eax]
100143eb:	push   edx
100143ec:	lea    eax,[ebp-0x10]
100143ef:	push   eax
100143f0:	mov    ecx,DWORD PTR [ebp-0x1c]
100143f3:	call   0x10012580
100143f8:	mov    ecx,DWORD PTR [eax+0x4]
100143fb:	push   ecx
100143fc:	mov    edx,DWORD PTR [eax]
100143fe:	push   edx
100143ff:	lea    eax,[ebp-0x18]
10014402:	push   eax
10014403:	mov    ecx,DWORD PTR [ebp-0x1c]
10014406:	call   0x10014490
1001440b:	mov    ecx,DWORD PTR [ebp-0x1c]
1001440e:	mov    edx,DWORD PTR [ecx+0x4]
10014411:	push   edx
10014412:	call   0x100130f0
10014417:	add    esp,0x4
1001441a:	push   eax
1001441b:	mov    ecx,DWORD PTR [ebp-0x1c]
1001441e:	add    ecx,0x2
10014421:	call   0x100142a0
10014426:	mov    eax,DWORD PTR [ebp-0x1c]
10014429:	mov    ecx,DWORD PTR [eax+0x4]
1001442c:	push   ecx
1001442d:	call   0x10013100
10014432:	add    esp,0x4
10014435:	push   eax
10014436:	mov    ecx,DWORD PTR [ebp-0x1c]
10014439:	add    ecx,0x2
1001443c:	call   0x100142a0
10014441:	mov    edx,DWORD PTR [ebp-0x1c]
10014444:	mov    eax,DWORD PTR [edx+0x4]
10014447:	push   eax
10014448:	call   0x10013110
1001444d:	add    esp,0x4
10014450:	push   eax
10014451:	mov    ecx,DWORD PTR [ebp-0x1c]
10014454:	add    ecx,0x2
10014457:	call   0x100142a0
1001445c:	push   0x1
1001445e:	mov    ecx,DWORD PTR [ebp-0x1c]
10014461:	mov    edx,DWORD PTR [ecx+0x4]
10014464:	push   edx
10014465:	mov    ecx,DWORD PTR [ebp-0x1c]
10014468:	add    ecx,0x1
1001446b:	call   0x10013930
10014470:	mov    eax,DWORD PTR [ebp-0x1c]
10014473:	mov    DWORD PTR [eax+0x4],0x0
1001447a:	mov    ecx,DWORD PTR [ebp-0x1c]
1001447d:	mov    DWORD PTR [ecx+0x8],0x0
10014484:	mov    esp,ebp
10014486:	pop    ebp
10014487:	ret    
10014488:	int3   
10014489:	int3   
1001448a:	int3   
1001448b:	int3   
1001448c:	int3   
1001448d:	int3   
1001448e:	int3   
1001448f:	int3   
10014490:	push   ebp
10014491:	mov    ebp,esp
10014493:	sub    esp,0x24
10014496:	mov    DWORD PTR [ebp-0x24],ecx
10014499:	lea    eax,[ebp-0x8]
1001449c:	push   eax
1001449d:	mov    ecx,DWORD PTR [ebp-0x24]
100144a0:	call   0x10012580
100144a5:	push   eax
100144a6:	lea    ecx,[ebp+0xc]
100144a9:	call   0x10013040
100144ae:	movzx  ecx,al
100144b1:	test   ecx,ecx
100144b3:	je     0x100144ec
100144b5:	lea    edx,[ebp-0x10]
100144b8:	push   edx
100144b9:	mov    ecx,DWORD PTR [ebp-0x24]
100144bc:	call   0x100125b0
100144c1:	push   eax
100144c2:	lea    ecx,[ebp+0x14]
100144c5:	call   0x10013040
100144ca:	movzx  eax,al
100144cd:	test   eax,eax
100144cf:	je     0x100144ec
100144d1:	mov    ecx,DWORD PTR [ebp-0x24]
100144d4:	call   0x10014540
100144d9:	mov    ecx,DWORD PTR [ebp+0x8]
100144dc:	push   ecx
100144dd:	mov    ecx,DWORD PTR [ebp-0x24]
100144e0:	call   0x10012580
100144e5:	mov    eax,DWORD PTR [ebp+0x8]
100144e8:	jmp    0x10014533
100144ea:	jmp    0x10014533
100144ec:	lea    edx,[ebp+0x14]
100144ef:	push   edx
100144f0:	lea    ecx,[ebp+0xc]
100144f3:	call   0x10013080
100144f8:	movzx  eax,al
100144fb:	test   eax,eax
100144fd:	je     0x10014522
100144ff:	push   0x0
10014501:	lea    ecx,[ebp-0x18]
10014504:	push   ecx
10014505:	lea    ecx,[ebp+0xc]
10014508:	call   0x100145a0
1001450d:	mov    edx,DWORD PTR [eax+0x4]
10014510:	push   edx
10014511:	mov    eax,DWORD PTR [eax]
10014513:	push   eax
10014514:	lea    ecx,[ebp-0x20]
10014517:	push   ecx
10014518:	mov    ecx,DWORD PTR [ebp-0x24]
1001451b:	call   0x100127a0
10014520:	jmp    0x100144ec
10014522:	mov    edx,DWORD PTR [ebp+0x8]
10014525:	mov    eax,DWORD PTR [ebp+0xc]
10014528:	mov    DWORD PTR [edx],eax
1001452a:	mov    ecx,DWORD PTR [ebp+0x10]
1001452d:	mov    DWORD PTR [edx+0x4],ecx
10014530:	mov    eax,DWORD PTR [ebp+0x8]
10014533:	mov    esp,ebp
10014535:	pop    ebp
10014536:	ret    0x14
10014539:	int3   
1001453a:	int3   
1001453b:	int3   
1001453c:	int3   
1001453d:	int3   
1001453e:	int3   
1001453f:	int3   
10014540:	push   ebp
10014541:	mov    ebp,esp
10014543:	push   ecx
10014544:	mov    DWORD PTR [ebp-0x4],ecx
10014547:	mov    ecx,DWORD PTR [ebp-0x4]
1001454a:	call   0x100137c0
1001454f:	mov    eax,DWORD PTR [eax]
10014551:	push   eax
10014552:	mov    ecx,DWORD PTR [ebp-0x4]
10014555:	call   0x100145e0
1001455a:	mov    ecx,DWORD PTR [ebp-0x4]
1001455d:	call   0x100137c0
10014562:	mov    ecx,DWORD PTR [ebp-0x4]
10014565:	mov    edx,DWORD PTR [ecx+0x4]
10014568:	mov    DWORD PTR [eax],edx
1001456a:	mov    eax,DWORD PTR [ebp-0x4]
1001456d:	mov    DWORD PTR [eax+0x8],0x0
10014574:	mov    ecx,DWORD PTR [ebp-0x4]
10014577:	call   0x100135d0
1001457c:	mov    ecx,DWORD PTR [ebp-0x4]
1001457f:	mov    edx,DWORD PTR [ecx+0x4]
10014582:	mov    DWORD PTR [eax],edx
10014584:	mov    ecx,DWORD PTR [ebp-0x4]
10014587:	call   0x100137a0
1001458c:	mov    ecx,DWORD PTR [ebp-0x4]
1001458f:	mov    edx,DWORD PTR [ecx+0x4]
10014592:	mov    DWORD PTR [eax],edx
10014594:	mov    esp,ebp
10014596:	pop    ebp
10014597:	ret    
10014598:	int3   
10014599:	int3   
1001459a:	int3   
1001459b:	int3   
1001459c:	int3   
1001459d:	int3   
1001459e:	int3   
1001459f:	int3   
100145a0:	push   ebp
100145a1:	mov    ebp,esp
100145a3:	sub    esp,0xc
100145a6:	mov    DWORD PTR [ebp-0xc],ecx
100145a9:	mov    eax,DWORD PTR [ebp-0xc]
100145ac:	mov    ecx,DWORD PTR [eax]
100145ae:	mov    edx,DWORD PTR [eax+0x4]
100145b1:	mov    DWORD PTR [ebp-0x8],ecx
100145b4:	mov    DWORD PTR [ebp-0x4],edx
100145b7:	mov    ecx,DWORD PTR [ebp-0xc]
100145ba:	call   0x10013020
100145bf:	mov    eax,DWORD PTR [ebp+0x8]
100145c2:	mov    ecx,DWORD PTR [ebp-0x8]
100145c5:	mov    DWORD PTR [eax],ecx
100145c7:	mov    edx,DWORD PTR [ebp-0x4]
100145ca:	mov    DWORD PTR [eax+0x4],edx
100145cd:	mov    eax,DWORD PTR [ebp+0x8]
100145d0:	mov    esp,ebp
100145d2:	pop    ebp
100145d3:	ret    0x8
100145d6:	int3   
100145d7:	int3   
100145d8:	int3   
100145d9:	int3   
100145da:	int3   
100145db:	int3   
100145dc:	int3   
100145dd:	int3   
100145de:	int3   
100145df:	int3   
100145e0:	push   ebp
100145e1:	mov    ebp,esp
100145e3:	sub    esp,0x8
100145e6:	mov    DWORD PTR [ebp-0x8],ecx
100145e9:	mov    eax,DWORD PTR [ebp+0x8]
100145ec:	mov    DWORD PTR [ebp-0x4],eax
100145ef:	jmp    0x100145f7
100145f1:	mov    ecx,DWORD PTR [ebp-0x4]
100145f4:	mov    DWORD PTR [ebp+0x8],ecx
100145f7:	mov    edx,DWORD PTR [ebp-0x4]
100145fa:	push   edx
100145fb:	call   0x100130c0
10014600:	add    esp,0x4
10014603:	movsx  eax,BYTE PTR [eax]
10014606:	test   eax,eax
10014608:	jne    0x10014654
1001460a:	mov    ecx,DWORD PTR [ebp-0x4]
1001460d:	push   ecx
1001460e:	call   0x10013110
10014613:	add    esp,0x4
10014616:	mov    edx,DWORD PTR [eax]
10014618:	push   edx
10014619:	mov    ecx,DWORD PTR [ebp-0x8]
1001461c:	call   0x100145e0
10014621:	mov    eax,DWORD PTR [ebp-0x4]
10014624:	push   eax
10014625:	call   0x100130f0
1001462a:	add    esp,0x4
1001462d:	mov    ecx,DWORD PTR [eax]
1001462f:	mov    DWORD PTR [ebp-0x4],ecx
10014632:	mov    edx,DWORD PTR [ebp+0x8]
10014635:	push   edx
10014636:	mov    ecx,DWORD PTR [ebp-0x8]
10014639:	add    ecx,0x1
1001463c:	call   0x100142a0
10014641:	push   0x1
10014643:	mov    eax,DWORD PTR [ebp+0x8]
10014646:	push   eax
10014647:	mov    ecx,DWORD PTR [ebp-0x8]
1001464a:	add    ecx,0x1
1001464d:	call   0x10013930
10014652:	jmp    0x100145f1
10014654:	mov    esp,ebp
10014656:	pop    ebp
10014657:	ret    0x4
1001465a:	int3   
1001465b:	int3   
1001465c:	int3   
1001465d:	int3   
1001465e:	int3   
1001465f:	int3   
10014660:	push   ebp
10014661:	mov    ebp,esp
10014663:	cmp    DWORD PTR [ebp+0xc],0xb4
1001466a:	je     0x10014670
1001466c:	xor    al,al
1001466e:	jmp    0x10014688
10014670:	push   0xb4
10014675:	mov    eax,DWORD PTR [ebp+0x8]
10014678:	push   eax
10014679:	push   0x100c8fd0
1001467e:	call   0x10019470
10014683:	add    esp,0xc
10014686:	mov    al,0x1
10014688:	pop    ebp
10014689:	ret    
1001468a:	int3   
1001468b:	int3   
1001468c:	int3   
1001468d:	int3   
1001468e:	int3   
1001468f:	int3   
10014690:	push   ebp
10014691:	mov    ebp,esp
10014693:	push   ecx
10014694:	mov    eax,DWORD PTR [ebp+0x8]
10014697:	mov    DWORD PTR [ebp-0x4],eax
1001469a:	mov    ecx,DWORD PTR [ebp-0x4]
1001469d:	cmp    DWORD PTR [ecx+0x4],0xb4
100146a4:	jae    0x100146bd
100146a6:	mov    edx,DWORD PTR [ebp-0x4]
100146a9:	mov    DWORD PTR [edx+0x4],0xb4
100146b0:	mov    eax,DWORD PTR [ebp-0x4]
100146b3:	mov    DWORD PTR [eax],0x1
100146b9:	mov    al,0x1
100146bb:	jmp    0x100146eb
100146bd:	mov    ecx,DWORD PTR [ebp-0x4]
100146c0:	mov    DWORD PTR [ecx],0x0
100146c6:	mov    edx,DWORD PTR [ebp-0x4]
100146c9:	mov    DWORD PTR [edx+0x4],0xb4
100146d0:	push   0xb4
100146d5:	push   0x100c8fd0
100146da:	mov    eax,DWORD PTR [ebp-0x4]
100146dd:	add    eax,0x8
100146e0:	push   eax
100146e1:	call   0x10019470
100146e6:	add    esp,0xc
100146e9:	mov    al,0x1
100146eb:	mov    esp,ebp
100146ed:	pop    ebp
100146ee:	ret    
100146ef:	int3   
100146f0:	push   ebp
100146f1:	mov    ebp,esp
100146f3:	push   0xffffffff
100146f5:	push   0x1002d328
100146fa:	mov    eax,fs:0x0
10014700:	push   eax
10014701:	sub    esp,0xc
10014704:	mov    eax,ds:0x100c7654
10014709:	xor    eax,ebp
1001470b:	push   eax
1001470c:	lea    eax,[ebp-0xc]
1001470f:	mov    fs:0x0,eax
10014715:	lea    eax,[ebp-0x14]
10014718:	push   eax
10014719:	call   0x10011c60
1001471e:	add    esp,0x4
10014721:	mov    DWORD PTR [ebp-0x4],0x0
10014728:	lea    ecx,[ebp-0x14]
1001472b:	call   0x10003200
10014730:	push   eax
10014731:	call   0x1000ce70
10014736:	add    esp,0x4
10014739:	push   eax
1001473a:	call   DWORD PTR ds:0x1002f0b0
10014740:	mov    DWORD PTR [ebp-0x10],eax
10014743:	xor    ecx,ecx
10014745:	cmp    DWORD PTR [ebp-0x10],0x0
10014749:	setne  cl
1001474c:	mov    BYTE PTR [ebp-0x15],cl
1001474f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014756:	lea    ecx,[ebp-0x14]
10014759:	call   0x10002f00
1001475e:	mov    al,BYTE PTR [ebp-0x15]
10014761:	mov    ecx,DWORD PTR [ebp-0xc]
10014764:	mov    DWORD PTR fs:0x0,ecx
1001476b:	pop    ecx
1001476c:	mov    esp,ebp
1001476e:	pop    ebp
1001476f:	ret    
10014770:	push   ebp
10014771:	mov    ebp,esp
10014773:	sub    esp,0x18
10014776:	cmp    DWORD PTR [ebp+0xc],0xa
1001477a:	jae    0x10014783
1001477c:	xor    al,al
1001477e:	jmp    0x10014859
10014783:	mov    eax,DWORD PTR [ebp+0x8]
10014786:	mov    DWORD PTR [ebp-0x8],eax
10014789:	mov    ecx,DWORD PTR [ebp-0x8]
1001478c:	mov    dx,WORD PTR [ecx+0x8]
10014790:	mov    WORD PTR [ebp-0x4],dx
10014794:	call   DWORD PTR ds:0x1002f0e4
1001479a:	push   eax
1001479b:	call   0x10002b90
100147a0:	add    esp,0x4
100147a3:	mov    WORD PTR [ebp-0x14],ax
100147a7:	mov    DWORD PTR [ebp-0x10],0x0
100147ae:	mov    DWORD PTR [ebp-0xc],0x0
100147b5:	movzx  eax,WORD PTR [ebp-0x4]
100147b9:	mov    DWORD PTR [ebp-0x18],eax
100147bc:	cmp    DWORD PTR [ebp-0x18],0x0
100147c0:	je     0x100147ca
100147c2:	cmp    DWORD PTR [ebp-0x18],0x9
100147c6:	je     0x100147d3
100147c8:	jmp    0x100147da
100147ca:	mov    DWORD PTR [ebp-0x10],0x100c8d5c
100147d1:	jmp    0x100147da
100147d3:	mov    DWORD PTR [ebp-0x10],0x100c8d8c
100147da:	cmp    DWORD PTR [ebp-0x10],0x0
100147de:	jne    0x100147e4
100147e0:	xor    al,al
100147e2:	jmp    0x10014859
100147e4:	mov    ecx,DWORD PTR [ebp-0x10]
100147e7:	call   0x10002d70
100147ec:	test   eax,eax
100147ee:	jne    0x100147f4
100147f0:	xor    al,al
100147f2:	jmp    0x10014859
100147f4:	mov    ecx,DWORD PTR [ebp-0x10]
100147f7:	call   0x10002d70
100147fc:	mov    ecx,DWORD PTR [ebp-0x8]
100147ff:	cmp    eax,DWORD PTR [ecx+0x4]
10014802:	jbe    0x1001481f
10014804:	mov    ecx,DWORD PTR [ebp-0x10]
10014807:	call   0x10002d70
1001480c:	mov    edx,DWORD PTR [ebp-0x8]
1001480f:	mov    DWORD PTR [edx+0x4],eax
10014812:	mov    eax,DWORD PTR [ebp-0x8]
10014815:	mov    DWORD PTR [eax],0x1
1001481b:	mov    al,0x1
1001481d:	jmp    0x10014859
1001481f:	mov    ecx,DWORD PTR [ebp-0x8]
10014822:	mov    DWORD PTR [ecx],0x0
10014828:	mov    ecx,DWORD PTR [ebp-0x10]
1001482b:	call   0x10002d70
10014830:	mov    edx,DWORD PTR [ebp-0x8]
10014833:	mov    DWORD PTR [edx+0x4],eax
10014836:	mov    ecx,DWORD PTR [ebp-0x10]
10014839:	call   0x10002d70
1001483e:	push   eax
1001483f:	mov    ecx,DWORD PTR [ebp-0x10]
10014842:	call   0x10007b70
10014847:	push   eax
10014848:	mov    eax,DWORD PTR [ebp-0x8]
1001484b:	add    eax,0x8
1001484e:	push   eax
1001484f:	call   0x10019470
10014854:	add    esp,0xc
10014857:	mov    al,0x1
10014859:	mov    esp,ebp
1001485b:	pop    ebp
1001485c:	ret    
1001485d:	int3   
1001485e:	int3   
1001485f:	int3   
10014860:	push   ebp
10014861:	mov    ebp,esp
10014863:	push   ecx
10014864:	mov    eax,DWORD PTR [ebp+0x8]
10014867:	mov    DWORD PTR [ebp-0x4],eax
1001486a:	mov    ecx,DWORD PTR [ebp-0x4]
1001486d:	mov    DWORD PTR [ecx],0x1
10014873:	mov    ecx,0x100c8d5c
10014878:	call   0x10002d70
1001487d:	test   eax,eax
1001487f:	jne    0x1001488a
10014881:	mov    edx,DWORD PTR [ebp-0x4]
10014884:	mov    DWORD PTR [edx],0x0
1001488a:	mov    al,0x1
1001488c:	mov    esp,ebp
1001488e:	pop    ebp
1001488f:	ret    
10014890:	push   ebp
10014891:	mov    ebp,esp
10014893:	push   0xffffffff
10014895:	push   0x1002d36b
1001489a:	mov    eax,fs:0x0
100148a0:	push   eax
100148a1:	sub    esp,0x84
100148a7:	mov    eax,ds:0x100c7654
100148ac:	xor    eax,ebp
100148ae:	mov    DWORD PTR [ebp-0x1c],eax
100148b1:	push   eax
100148b2:	lea    eax,[ebp-0xc]
100148b5:	mov    fs:0x0,eax
100148bb:	lea    ecx,[ebp-0x5c]
100148be:	call   0x10001270
100148c3:	mov    DWORD PTR [ebp-0x4],0x0
100148ca:	push   0x20019
100148cf:	push   0x100b2518
100148d4:	push   0x33
100148d6:	push   0x100b2568
100148db:	call   0x100035f0
100148e0:	add    esp,0xc
100148e3:	push   eax
100148e4:	push   0x80000002
100148e9:	lea    ecx,[ebp-0x5c]
100148ec:	call   0x100012a0
100148f1:	test   eax,eax
100148f3:	jge    0x10014909
100148f5:	mov    DWORD PTR [ebp-0x4],0xffffffff
100148fc:	lea    ecx,[ebp-0x5c]
100148ff:	call   0x10001280
10014904:	jmp    0x10014b8e
10014909:	mov    DWORD PTR [ebp-0x58],0x800
10014910:	push   0x0
10014912:	lea    ecx,[ebp-0x64]
10014915:	call   0x10003300
1001491a:	mov    BYTE PTR [ebp-0x4],0x1
1001491e:	push   0x800
10014923:	call   0x1001868d
10014928:	add    esp,0x4
1001492b:	mov    DWORD PTR [ebp-0x78],eax
1001492e:	mov    eax,DWORD PTR [ebp-0x78]
10014931:	push   eax
10014932:	lea    ecx,[ebp-0x64]
10014935:	call   0x100033b0
1001493a:	lea    ecx,[ebp-0x58]
1001493d:	push   ecx
1001493e:	lea    ecx,[ebp-0x64]
10014941:	call   0x10003340
10014946:	push   eax
10014947:	push   0x100b25d0
1001494c:	push   0xa
1001494e:	push   0x100b2648
10014953:	call   0x100035f0
10014958:	add    esp,0xc
1001495b:	push   eax
1001495c:	lea    ecx,[ebp-0x5c]
1001495f:	call   0x10015150
10014964:	test   eax,eax
10014966:	jge    0x10014988
10014968:	mov    BYTE PTR [ebp-0x4],0x0
1001496c:	lea    ecx,[ebp-0x64]
1001496f:	call   0x100033a0
10014974:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001497b:	lea    ecx,[ebp-0x5c]
1001497e:	call   0x10001280
10014983:	jmp    0x10014b8e
10014988:	call   0x10001000
1001498d:	mov    DWORD PTR [ebp-0x60],eax
10014990:	push   0x1
10014992:	push   0x6
10014994:	lea    edx,[ebp-0x14]
10014997:	push   edx
10014998:	call   0x100020c0
1001499d:	add    esp,0xc
100149a0:	mov    BYTE PTR [ebp-0x4],0x2
100149a4:	lea    ecx,[ebp-0x14]
100149a7:	call   0x10003200
100149ac:	mov    DWORD PTR [ebp-0x18],eax
100149af:	cmp    DWORD PTR [ebp-0x18],0x0
100149b3:	jne    0x100149be
100149b5:	mov    DWORD PTR [ebp-0x7c],0x0
100149bc:	jmp    0x10014a13
100149be:	mov    eax,DWORD PTR [ebp-0x18]
100149c1:	push   eax
100149c2:	call   DWORD PTR ds:0x1002f034
100149c8:	add    eax,0x1
100149cb:	mov    DWORD PTR [ebp-0x10],eax
100149ce:	cmp    DWORD PTR [ebp-0x10],0x3fffffff
100149d5:	jle    0x100149e0
100149d7:	mov    DWORD PTR [ebp-0x80],0x0
100149de:	jmp    0x10014a0d
100149e0:	mov    eax,DWORD PTR [ebp-0x10]
100149e3:	shl    eax,1
100149e5:	call   0x10018790
100149ea:	mov    DWORD PTR [ebp-0x84],esp
100149f0:	mov    ecx,DWORD PTR [ebp-0x60]
100149f3:	push   ecx
100149f4:	mov    edx,DWORD PTR [ebp-0x10]
100149f7:	shl    edx,1
100149f9:	push   edx
100149fa:	mov    eax,DWORD PTR [ebp-0x18]
100149fd:	push   eax
100149fe:	mov    ecx,DWORD PTR [ebp-0x84]
10014a04:	push   ecx
10014a05:	call   0x10001050
10014a0a:	mov    DWORD PTR [ebp-0x80],eax
10014a0d:	mov    edx,DWORD PTR [ebp-0x80]
10014a10:	mov    DWORD PTR [ebp-0x7c],edx
10014a13:	mov    eax,DWORD PTR [ebp-0x7c]
10014a16:	push   eax
10014a17:	lea    ecx,[ebp-0x38]
10014a1a:	call   0x10002bc0
10014a1f:	mov    BYTE PTR [ebp-0x4],0x3
10014a23:	lea    ecx,[ebp-0x38]
10014a26:	call   0x10002d70
10014a2b:	push   eax
10014a2c:	lea    ecx,[ebp-0x38]
10014a2f:	call   0x10007b70
10014a34:	push   eax
10014a35:	mov    ecx,DWORD PTR [ebp-0x58]
10014a38:	push   ecx
10014a39:	lea    ecx,[ebp-0x64]
10014a3c:	call   0x10003340
10014a41:	push   eax
10014a42:	call   0x1000dd90
10014a47:	add    esp,0x10
10014a4a:	mov    edx,DWORD PTR [ebp-0x58]
10014a4d:	push   edx
10014a4e:	lea    ecx,[ebp-0x64]
10014a51:	call   0x10003340
10014a56:	push   eax
10014a57:	lea    ecx,[ebp-0x70]
10014a5a:	call   0x1000d940
10014a5f:	lea    ecx,[ebp-0x70]
10014a62:	call   0x1000dbb0
10014a67:	cmp    eax,0x44544f4b
10014a6c:	je     0x10014aa6
10014a6e:	mov    BYTE PTR [ebp-0x4],0x2
10014a72:	lea    ecx,[ebp-0x38]
10014a75:	call   0x10002c00
10014a7a:	mov    BYTE PTR [ebp-0x4],0x1
10014a7e:	lea    ecx,[ebp-0x14]
10014a81:	call   0x10002f00
10014a86:	mov    BYTE PTR [ebp-0x4],0x0
10014a8a:	lea    ecx,[ebp-0x64]
10014a8d:	call   0x100033a0
10014a92:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014a99:	lea    ecx,[ebp-0x5c]
10014a9c:	call   0x10001280
10014aa1:	jmp    0x10014b8e
10014aa6:	push   0x10
10014aa8:	mov    eax,DWORD PTR [ebp+0xc]
10014aab:	push   eax
10014aac:	lea    ecx,[ebp-0x70]
10014aaf:	call   0x1000dbc0
10014ab4:	lea    ecx,[ebp-0x54]
10014ab7:	push   ecx
10014ab8:	lea    ecx,[ebp-0x70]
10014abb:	call   0x1000d960
10014ac0:	mov    BYTE PTR [ebp-0x4],0x4
10014ac4:	lea    ecx,[ebp-0x54]
10014ac7:	call   0x10007b70
10014acc:	mov    DWORD PTR [ebp-0x74],eax
10014acf:	cmp    DWORD PTR [ebp-0x74],0x0
10014ad3:	jne    0x10014ae1
10014ad5:	mov    DWORD PTR [ebp-0x88],0x0
10014adf:	jmp    0x10014b40
10014ae1:	mov    edx,DWORD PTR [ebp-0x74]
10014ae4:	push   edx
10014ae5:	call   DWORD PTR ds:0x1002f044
10014aeb:	add    eax,0x1
10014aee:	mov    DWORD PTR [ebp-0x10],eax
10014af1:	cmp    DWORD PTR [ebp-0x10],0x3fffffff
10014af8:	jle    0x10014b06
10014afa:	mov    DWORD PTR [ebp-0x8c],0x0
10014b04:	jmp    0x10014b34
10014b06:	mov    eax,DWORD PTR [ebp-0x10]
10014b09:	shl    eax,1
10014b0b:	call   0x10018790
10014b10:	mov    DWORD PTR [ebp-0x90],esp
10014b16:	mov    eax,DWORD PTR [ebp-0x60]
10014b19:	push   eax
10014b1a:	mov    ecx,DWORD PTR [ebp-0x10]
10014b1d:	push   ecx
10014b1e:	mov    edx,DWORD PTR [ebp-0x74]
10014b21:	push   edx
10014b22:	mov    eax,DWORD PTR [ebp-0x90]
10014b28:	push   eax
10014b29:	call   0x10001010
10014b2e:	mov    DWORD PTR [ebp-0x8c],eax
10014b34:	mov    ecx,DWORD PTR [ebp-0x8c]
10014b3a:	mov    DWORD PTR [ebp-0x88],ecx
10014b40:	mov    edx,DWORD PTR [ebp-0x88]
10014b46:	push   edx
10014b47:	mov    ecx,DWORD PTR [ebp+0x8]
10014b4a:	call   0x100151a0
10014b4f:	mov    BYTE PTR [ebp-0x4],0x3
10014b53:	lea    ecx,[ebp-0x54]
10014b56:	call   0x10002c00
10014b5b:	mov    BYTE PTR [ebp-0x4],0x2
10014b5f:	lea    ecx,[ebp-0x38]
10014b62:	call   0x10002c00
10014b67:	mov    BYTE PTR [ebp-0x4],0x1
10014b6b:	lea    ecx,[ebp-0x14]
10014b6e:	call   0x10002f00
10014b73:	mov    BYTE PTR [ebp-0x4],0x0
10014b77:	lea    ecx,[ebp-0x64]
10014b7a:	call   0x100033a0
10014b7f:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014b86:	lea    ecx,[ebp-0x5c]
10014b89:	call   0x10001280
10014b8e:	lea    esp,[ebp-0x94]
10014b94:	mov    ecx,DWORD PTR [ebp-0xc]
10014b97:	mov    DWORD PTR fs:0x0,ecx
10014b9e:	pop    ecx
10014b9f:	mov    ecx,DWORD PTR [ebp-0x1c]
10014ba2:	xor    ecx,ebp
10014ba4:	call   0x10018773
10014ba9:	mov    esp,ebp
10014bab:	pop    ebp
10014bac:	ret    
10014bad:	int3   
10014bae:	int3   
10014baf:	int3   
10014bb0:	push   ebp
10014bb1:	mov    ebp,esp
10014bb3:	push   0xffffffff
10014bb5:	push   0x1002d3ab
10014bba:	mov    eax,fs:0x0
10014bc0:	push   eax
10014bc1:	push   ecx
10014bc2:	sub    esp,0x9c
10014bc8:	mov    eax,ds:0x100c7654
10014bcd:	xor    eax,ebp
10014bcf:	mov    DWORD PTR [ebp-0x2c],eax
10014bd2:	push   ebx
10014bd3:	push   esi
10014bd4:	push   edi
10014bd5:	push   eax
10014bd6:	lea    eax,[ebp-0xc]
10014bd9:	mov    fs:0x0,eax
10014bdf:	mov    DWORD PTR [ebp-0x10],esp
10014be2:	mov    DWORD PTR [ebp-0x74],ecx
10014be5:	mov    BYTE PTR [ebp-0x11],0x0
10014be9:	mov    eax,DWORD PTR [ebp+0x8]
10014bec:	mov    DWORD PTR [ebp-0x78],eax
10014bef:	cmp    DWORD PTR [ebp-0x78],0x1000
10014bf6:	ja     0x10014c1e
10014bf8:	cmp    DWORD PTR [ebp-0x78],0x1000
10014bff:	je     0x10014c2c
10014c01:	mov    ecx,DWORD PTR [ebp-0x78]
10014c04:	sub    ecx,0x1
10014c07:	mov    DWORD PTR [ebp-0x78],ecx
10014c0a:	cmp    DWORD PTR [ebp-0x78],0x9
10014c0e:	ja     0x100150d5
10014c14:	mov    edx,DWORD PTR [ebp-0x78]
10014c17:	jmp    DWORD PTR [edx*4+0x10015120]
10014c1e:	cmp    DWORD PTR [ebp-0x78],0x1001
10014c25:	je     0x10014c84
10014c27:	jmp    0x100150d5
10014c2c:	mov    DWORD PTR [ebp-0x4],0x0
10014c33:	mov    eax,DWORD PTR [ebp+0xc]
10014c36:	mov    DWORD PTR [ebp-0x18],eax
10014c39:	mov    ecx,DWORD PTR [ebp-0x18]
10014c3c:	cmp    DWORD PTR [ecx],0x0
10014c3f:	jl     0x10014c65
10014c41:	mov    edx,DWORD PTR [ebp-0x18]
10014c44:	cmp    DWORD PTR [edx],0x20
10014c47:	jge    0x10014c65
10014c49:	mov    eax,DWORD PTR [ebp-0x18]
10014c4c:	mov    ecx,DWORD PTR [eax]
10014c4e:	mov    edx,DWORD PTR [ecx*8+0x100c8ec8]
10014c55:	mov    eax,DWORD PTR [ecx*8+0x100c8ecc]
10014c5c:	mov    ecx,DWORD PTR [ebp-0x18]
10014c5f:	mov    DWORD PTR [ecx+0x8],edx
10014c62:	mov    DWORD PTR [ecx+0xc],eax
10014c65:	mov    BYTE PTR [ebp-0x11],0x1
10014c69:	jmp    0x10014c78
10014c6b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014c72:	mov    eax,0x10014c7f
10014c77:	ret    
10014c78:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014c7f:	jmp    0x100150fe
10014c84:	mov    DWORD PTR [ebp-0x4],0x2
10014c8b:	mov    edx,DWORD PTR [ebp+0xc]
10014c8e:	mov    DWORD PTR [ebp-0x1c],edx
10014c91:	mov    eax,DWORD PTR [ebp-0x1c]
10014c94:	cmp    DWORD PTR [eax],0x0
10014c97:	jl     0x10014cbd
10014c99:	mov    ecx,DWORD PTR [ebp-0x1c]
10014c9c:	cmp    DWORD PTR [ecx],0x20
10014c9f:	jge    0x10014cbd
10014ca1:	mov    edx,DWORD PTR [ebp-0x1c]
10014ca4:	mov    eax,DWORD PTR [edx]
10014ca6:	mov    ecx,DWORD PTR [ebp-0x1c]
10014ca9:	mov    edx,DWORD PTR [ecx+0x8]
10014cac:	mov    ecx,DWORD PTR [ecx+0xc]
10014caf:	mov    DWORD PTR [eax*8+0x100c8ec8],edx
10014cb6:	mov    DWORD PTR [eax*8+0x100c8ecc],ecx
10014cbd:	mov    BYTE PTR [ebp-0x11],0x1
10014cc1:	mov    edx,DWORD PTR [ebp+0x18]
10014cc4:	mov    DWORD PTR [edx],0x0
10014cca:	jmp    0x10014cd9
10014ccc:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014cd3:	mov    eax,0x10014ce0
10014cd8:	ret    
10014cd9:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014ce0:	jmp    0x100150fe
10014ce5:	mov    DWORD PTR [ebp-0x4],0x4
10014cec:	call   0x10001000
10014cf1:	mov    DWORD PTR [ebp-0x5c],eax
10014cf4:	mov    eax,DWORD PTR [ebp+0xc]
10014cf7:	mov    DWORD PTR [ebp-0x24],eax
10014cfa:	mov    ecx,DWORD PTR ds:0x100be07c
10014d00:	push   ecx
10014d01:	mov    edx,DWORD PTR [ebp-0x24]
10014d04:	push   edx
10014d05:	call   0x10019f74
10014d0a:	add    esp,0x8
10014d0d:	push   0x1
10014d0f:	push   0x0
10014d11:	lea    eax,[ebp-0x6c]
10014d14:	push   eax
10014d15:	call   0x100020c0
10014d1a:	add    esp,0xc
10014d1d:	mov    DWORD PTR [ebp-0x7c],eax
10014d20:	mov    ecx,DWORD PTR [ebp-0x7c]
10014d23:	mov    DWORD PTR [ebp-0x80],ecx
10014d26:	mov    BYTE PTR [ebp-0x4],0x5
10014d2a:	mov    ecx,DWORD PTR [ebp-0x80]
10014d2d:	call   0x10003200
10014d32:	mov    DWORD PTR [ebp-0x84],eax
10014d38:	mov    edx,DWORD PTR [ebp-0x84]
10014d3e:	push   edx
10014d3f:	call   0x1000ce70
10014d44:	add    esp,0x4
10014d47:	mov    DWORD PTR [ebp-0x88],eax
10014d4d:	mov    eax,DWORD PTR [ebp-0x88]
10014d53:	push   eax
10014d54:	mov    ecx,DWORD PTR [ebp-0x24]
10014d57:	add    ecx,0x50
10014d5a:	push   ecx
10014d5b:	call   0x10019f74
10014d60:	add    esp,0x8
10014d63:	mov    BYTE PTR [ebp-0x4],0x4
10014d67:	lea    ecx,[ebp-0x6c]
10014d6a:	call   0x10002f00
10014d6f:	push   0x1
10014d71:	push   0x2
10014d73:	lea    edx,[ebp-0x70]
10014d76:	push   edx
10014d77:	call   0x100020c0
10014d7c:	add    esp,0xc
10014d7f:	mov    DWORD PTR [ebp-0x8c],eax
10014d85:	mov    eax,DWORD PTR [ebp-0x8c]
10014d8b:	mov    DWORD PTR [ebp-0x90],eax
10014d91:	mov    BYTE PTR [ebp-0x4],0x6
10014d95:	mov    ecx,DWORD PTR [ebp-0x90]
10014d9b:	call   0x10003200
10014da0:	mov    DWORD PTR [ebp-0x94],eax
10014da6:	mov    ecx,DWORD PTR [ebp-0x94]
10014dac:	push   ecx
10014dad:	call   0x1000ce70
10014db2:	add    esp,0x4
10014db5:	mov    DWORD PTR [ebp-0x98],eax
10014dbb:	mov    edx,DWORD PTR [ebp-0x98]
10014dc1:	push   edx
10014dc2:	mov    eax,DWORD PTR [ebp-0x24]
10014dc5:	add    eax,0x90
10014dca:	push   eax
10014dcb:	call   0x10019f74
10014dd0:	add    esp,0x8
10014dd3:	mov    BYTE PTR [ebp-0x4],0x4
10014dd7:	lea    ecx,[ebp-0x70]
10014dda:	call   0x10002f00
10014ddf:	lea    ecx,[ebp-0x48]
10014de2:	call   0x10004e30
10014de7:	mov    DWORD PTR [ebp-0x9c],eax
10014ded:	mov    BYTE PTR [ebp-0x4],0x7
10014df1:	mov    ecx,DWORD PTR ds:0x100b2660
10014df7:	mov    DWORD PTR [ebp-0x58],ecx
10014dfa:	mov    edx,DWORD PTR ds:0x100b2664
10014e00:	mov    DWORD PTR [ebp-0x54],edx
10014e03:	mov    eax,ds:0x100b2668
10014e08:	mov    DWORD PTR [ebp-0x50],eax
10014e0b:	mov    ecx,DWORD PTR ds:0x100b266c
10014e11:	mov    DWORD PTR [ebp-0x4c],ecx
10014e14:	lea    edx,[ebp-0x58]
10014e17:	push   edx
10014e18:	lea    eax,[ebp-0x48]
10014e1b:	push   eax
10014e1c:	call   0x10014890
10014e21:	add    esp,0x8
10014e24:	lea    ecx,[ebp-0x48]
10014e27:	call   0x10004410
10014e2c:	mov    DWORD PTR [ebp-0xa0],eax
10014e32:	mov    ecx,DWORD PTR [ebp-0xa0]
10014e38:	push   ecx
10014e39:	mov    edx,DWORD PTR [ebp-0x24]
10014e3c:	add    edx,0xd0
10014e42:	push   edx
10014e43:	call   0x10019f74
10014e48:	add    esp,0x8
10014e4b:	mov    eax,DWORD PTR [ebp-0x24]
10014e4e:	add    eax,0x40
10014e51:	mov    ecx,DWORD PTR [ebp-0x58]
10014e54:	mov    DWORD PTR [eax],ecx
10014e56:	mov    edx,DWORD PTR [ebp-0x54]
10014e59:	mov    DWORD PTR [eax+0x4],edx
10014e5c:	mov    ecx,DWORD PTR [ebp-0x50]
10014e5f:	mov    DWORD PTR [eax+0x8],ecx
10014e62:	mov    edx,DWORD PTR [ebp-0x4c]
10014e65:	mov    DWORD PTR [eax+0xc],edx
10014e68:	mov    BYTE PTR [ebp-0x11],0x1
10014e6c:	mov    BYTE PTR [ebp-0x4],0x4
10014e70:	lea    ecx,[ebp-0x48]
10014e73:	call   0x100043e0
10014e78:	jmp    0x10014e87
10014e7a:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014e81:	mov    eax,0x10014e8e
10014e86:	ret    
10014e87:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014e8e:	jmp    0x100150fe
10014e93:	mov    DWORD PTR [ebp-0x4],0x9
10014e9a:	mov    eax,DWORD PTR [ebp+0xc]
10014e9d:	mov    DWORD PTR [ebp-0x64],eax
10014ea0:	mov    ecx,DWORD PTR [ebp-0x64]
10014ea3:	mov    edx,DWORD PTR [ecx]
10014ea5:	push   edx
10014ea6:	call   0x10012220
10014eab:	add    esp,0x4
10014eae:	mov    BYTE PTR [ebp-0x11],0x1
10014eb2:	mov    eax,DWORD PTR [ebp+0x18]
10014eb5:	mov    DWORD PTR [eax],0x0
10014ebb:	jmp    0x10014eca
10014ebd:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014ec4:	mov    eax,0x10014ed1
10014ec9:	ret    
10014eca:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014ed1:	jmp    0x100150fe
10014ed6:	mov    DWORD PTR [ebp-0x4],0xb
10014edd:	mov    ecx,DWORD PTR [ebp+0xc]
10014ee0:	mov    DWORD PTR [ebp-0x68],ecx
10014ee3:	mov    edx,DWORD PTR [ebp-0x68]
10014ee6:	mov    eax,DWORD PTR [edx]
10014ee8:	push   eax
10014ee9:	call   0x100122c0
10014eee:	add    esp,0x4
10014ef1:	mov    DWORD PTR [ebp-0xa4],eax
10014ef7:	mov    ecx,DWORD PTR [ebp-0x68]
10014efa:	mov    edx,DWORD PTR [ebp-0xa4]
10014f00:	mov    DWORD PTR [ecx],edx
10014f02:	mov    BYTE PTR [ebp-0x11],0x1
10014f06:	jmp    0x10014f15
10014f08:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014f0f:	mov    eax,0x10014f1c
10014f14:	ret    
10014f15:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014f1c:	jmp    0x100150fe
10014f21:	mov    DWORD PTR [ebp-0x4],0xd
10014f28:	mov    eax,DWORD PTR [ebp+0x10]
10014f2b:	push   eax
10014f2c:	mov    ecx,DWORD PTR [ebp+0xc]
10014f2f:	push   ecx
10014f30:	call   0x10014660
10014f35:	add    esp,0x8
10014f38:	mov    BYTE PTR [ebp-0xa5],al
10014f3e:	mov    dl,BYTE PTR [ebp-0xa5]
10014f44:	mov    BYTE PTR [ebp-0x11],dl
10014f47:	mov    eax,DWORD PTR [ebp+0x18]
10014f4a:	mov    DWORD PTR [eax],0x0
10014f50:	jmp    0x10014f68
10014f52:	mov    ecx,DWORD PTR [ebp+0x18]
10014f55:	mov    DWORD PTR [ecx],0x0
10014f5b:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014f62:	mov    eax,0x10014f6f
10014f67:	ret    
10014f68:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014f6f:	jmp    0x100150fe
10014f74:	mov    DWORD PTR [ebp-0x4],0xf
10014f7b:	mov    edx,DWORD PTR [ebp+0x10]
10014f7e:	push   edx
10014f7f:	mov    eax,DWORD PTR [ebp+0xc]
10014f82:	push   eax
10014f83:	call   0x10014690
10014f88:	add    esp,0x8
10014f8b:	mov    BYTE PTR [ebp-0xa6],al
10014f91:	mov    cl,BYTE PTR [ebp-0xa6]
10014f97:	mov    BYTE PTR [ebp-0x11],cl
10014f9a:	jmp    0x10014fb2
10014f9c:	mov    edx,DWORD PTR [ebp+0x18]
10014f9f:	mov    DWORD PTR [edx],0x0
10014fa5:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014fac:	mov    eax,0x10014fb9
10014fb1:	ret    
10014fb2:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014fb9:	jmp    0x100150fe
10014fbe:	mov    DWORD PTR [ebp-0x4],0x11
10014fc5:	mov    eax,DWORD PTR [ebp+0x10]
10014fc8:	push   eax
10014fc9:	mov    ecx,DWORD PTR [ebp+0xc]
10014fcc:	push   ecx
10014fcd:	call   0x10012450
10014fd2:	add    esp,0x8
10014fd5:	mov    BYTE PTR [ebp-0xa7],al
10014fdb:	mov    dl,BYTE PTR [ebp-0xa7]
10014fe1:	mov    BYTE PTR [ebp-0x11],dl
10014fe4:	jmp    0x10014ffc
10014fe6:	mov    eax,DWORD PTR [ebp+0x18]
10014fe9:	mov    DWORD PTR [eax],0x0
10014fef:	mov    DWORD PTR [ebp-0x4],0xffffffff
10014ff6:	mov    eax,0x10015003
10014ffb:	ret    
10014ffc:	mov    DWORD PTR [ebp-0x4],0xffffffff
10015003:	jmp    0x100150fe
10015008:	mov    DWORD PTR [ebp-0x4],0x13
1001500f:	mov    ecx,DWORD PTR [ebp+0x10]
10015012:	push   ecx
10015013:	mov    edx,DWORD PTR [ebp+0xc]
10015016:	push   edx
10015017:	call   0x10014770
1001501c:	add    esp,0x8
1001501f:	mov    BYTE PTR [ebp-0xa8],al
10015025:	mov    al,BYTE PTR [ebp-0xa8]
1001502b:	mov    BYTE PTR [ebp-0x11],al
1001502e:	jmp    0x10015046
10015030:	mov    ecx,DWORD PTR [ebp+0x18]
10015033:	mov    DWORD PTR [ecx],0x0
10015039:	mov    DWORD PTR [ebp-0x4],0xffffffff
10015040:	mov    eax,0x1001504d
10015045:	ret    
10015046:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001504d:	jmp    0x100150fe
10015052:	mov    DWORD PTR [ebp-0x4],0x15
10015059:	mov    edx,DWORD PTR [ebp+0x10]
1001505c:	push   edx
1001505d:	mov    eax,DWORD PTR [ebp+0xc]
10015060:	push   eax
10015061:	call   0x10014860
10015066:	add    esp,0x8
10015069:	mov    BYTE PTR [ebp-0xa9],al
1001506f:	mov    cl,BYTE PTR [ebp-0xa9]
10015075:	mov    BYTE PTR [ebp-0x11],cl
10015078:	jmp    0x10015090
1001507a:	mov    edx,DWORD PTR [ebp+0x18]
1001507d:	mov    DWORD PTR [edx],0x0
10015083:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001508a:	mov    eax,0x10015097
1001508f:	ret    
10015090:	mov    DWORD PTR [ebp-0x4],0xffffffff
10015097:	jmp    0x100150fe
10015099:	mov    DWORD PTR [ebp-0x4],0x17
100150a0:	mov    eax,DWORD PTR [ebp+0x10]
100150a3:	push   eax
100150a4:	mov    ecx,DWORD PTR [ebp+0xc]
100150a7:	push   ecx
100150a8:	call   0x10011b10
100150ad:	add    esp,0x8
100150b0:	mov    BYTE PTR [ebp-0x11],0x1
100150b4:	mov    edx,DWORD PTR [ebp+0x18]
100150b7:	mov    DWORD PTR [edx],0x0
100150bd:	jmp    0x100150cc
100150bf:	mov    DWORD PTR [ebp-0x4],0xffffffff
100150c6:	mov    eax,0x100150d3
100150cb:	ret    
100150cc:	mov    DWORD PTR [ebp-0x4],0xffffffff
100150d3:	jmp    0x100150fe
100150d5:	cmp    DWORD PTR ds:0x100c8fc8,0x0
100150dc:	je     0x100150fe
100150de:	mov    eax,DWORD PTR [ebp+0x18]
100150e1:	push   eax
100150e2:	mov    ecx,DWORD PTR [ebp+0x14]
100150e5:	push   ecx
100150e6:	mov    edx,DWORD PTR [ebp+0x10]
100150e9:	push   edx
100150ea:	mov    eax,DWORD PTR [ebp+0xc]
100150ed:	push   eax
100150ee:	mov    ecx,DWORD PTR [ebp+0x8]
100150f1:	push   ecx
100150f2:	call   DWORD PTR ds:0x100c8fc8
100150f8:	add    esp,0x14
100150fb:	mov    BYTE PTR [ebp-0x11],al
100150fe:	mov    al,BYTE PTR [ebp-0x11]
10015101:	mov    ecx,DWORD PTR [ebp-0xc]
10015104:	mov    DWORD PTR fs:0x0,ecx
1001510b:	pop    ecx
1001510c:	pop    edi
1001510d:	pop    esi
1001510e:	pop    ebx
1001510f:	mov    ecx,DWORD PTR [ebp-0x2c]
10015112:	xor    ecx,ebp
10015114:	call   0x10018773
10015119:	mov    esp,ebp
1001511b:	pop    ebp
1001511c:	ret    0x14
1001511f:	nop
10015120:	in     eax,0x4c
10015122:	add    DWORD PTR [eax],edx
10015124:	mov    esi,0x810014f
10015129:	push   eax
1001512a:	add    DWORD PTR [eax],edx
1001512c:	push   edx
1001512d:	push   eax
1001512e:	add    DWORD PTR [eax],edx
10015130:	cdq    
10015131:	push   eax
10015132:	add    DWORD PTR [eax],edx
10015134:	aad    0x50
10015136:	add    DWORD PTR [eax],edx
10015138:	xchg   ebx,eax
10015139:	dec    esi
1001513a:	add    DWORD PTR [eax],edx
1001513c:	(bad)  
1001513d:	dec    esi
1001513e:	add    DWORD PTR [eax],edx
10015140:	and    DWORD PTR [edi+0x1],ecx
10015143:	adc    BYTE PTR [edi+ecx*2+0x1],dh
10015147:	adc    ah,cl
10015149:	int3   
1001514a:	int3   
1001514b:	int3   
1001514c:	int3   
1001514d:	int3   
1001514e:	int3   
1001514f:	int3   
10015150:	push   ebp
10015151:	mov    ebp,esp
10015153:	sub    esp,0xc
10015156:	mov    DWORD PTR [ebp-0xc],ecx
10015159:	xor    eax,eax
1001515b:	jne    0x10015159
1001515d:	mov    ecx,DWORD PTR [ebp+0x10]
10015160:	push   ecx
10015161:	mov    edx,DWORD PTR [ebp+0xc]
10015164:	push   edx
10015165:	lea    eax,[ebp-0x4]
10015168:	push   eax
10015169:	push   0x0
1001516b:	mov    ecx,DWORD PTR [ebp+0x8]
1001516e:	push   ecx
1001516f:	mov    edx,DWORD PTR [ebp-0xc]
10015172:	mov    eax,DWORD PTR [edx]
10015174:	push   eax
10015175:	call   DWORD PTR ds:0x1002f000
1001517b:	mov    DWORD PTR [ebp-0x8],eax
1001517e:	cmp    DWORD PTR [ebp-0x8],0x0
10015182:	je     0x10015189
10015184:	mov    eax,DWORD PTR [ebp-0x8]
10015187:	jmp    0x10015198
10015189:	cmp    DWORD PTR [ebp-0x4],0x3
1001518d:	je     0x10015196
1001518f:	mov    eax,0xd
10015194:	jmp    0x10015198
10015196:	xor    eax,eax
10015198:	mov    esp,ebp
1001519a:	pop    ebp
1001519b:	ret    0xc
1001519e:	int3   
1001519f:	int3   
100151a0:	push   ebp
100151a1:	mov    ebp,esp
100151a3:	push   ecx
100151a4:	mov    DWORD PTR [ebp-0x4],ecx
100151a7:	mov    eax,DWORD PTR [ebp+0x8]
100151aa:	push   eax
100151ab:	mov    ecx,DWORD PTR [ebp-0x4]
100151ae:	call   0x1000d020
100151b3:	mov    esp,ebp
100151b5:	pop    ebp
100151b6:	ret    0x4
100151b9:	int3   
100151ba:	jmp    DWORD PTR ds:0x1002f1f4
100151c0:	jmp    DWORD PTR ds:0x1002f204
100151c6:	int3   
100151c7:	int3   
100151c8:	int3   
100151c9:	int3   
100151ca:	int3   
100151cb:	int3   
100151cc:	int3   
100151cd:	int3   
100151ce:	int3   
100151cf:	int3   
100151d0:	push   edi
100151d1:	mov    edi,DWORD PTR [esp+0x14]
100151d5:	test   edi,edi
100151d7:	jne    0x100151de
100151d9:	lea    eax,[edi+0x1]
100151dc:	pop    edi
100151dd:	ret    
100151de:	mov    eax,DWORD PTR [esp+0x8]
100151e2:	test   eax,eax
100151e4:	push   esi
100151e5:	mov    DWORD PTR [edi],0x0
100151eb:	je     0x1001523d
100151ed:	mov    esi,DWORD PTR [eax+0x14]
100151f0:	test   esi,esi
100151f2:	jl     0x1001523d
100151f4:	mov    ecx,DWORD PTR [eax+0x18]
100151f7:	test   ecx,ecx
100151f9:	je     0x10015205
100151fb:	cmp    ecx,0x1
100151fe:	je     0x10015205
10015200:	cmp    ecx,0x2
10015203:	jne    0x1001523d
10015205:	cmp    DWORD PTR [eax+0x10],0x0
10015209:	je     0x1001523d
1001520b:	mov    ecx,DWORD PTR [esp+0x10]
1001520f:	test   ecx,ecx
10015211:	je     0x1001523d
10015213:	mov    edx,DWORD PTR [eax+0x1c]
10015216:	and    edx,0x3
10015219:	cmp    dl,0x3
1001521c:	je     0x1001523d
1001521e:	test   esi,esi
10015220:	jne    0x10015228
10015222:	lea    eax,[esi+0x1]
10015225:	pop    esi
10015226:	pop    edi
10015227:	ret    
10015228:	mov    edx,DWORD PTR [esp+0x14]
1001522c:	push   edi
1001522d:	push   edx
1001522e:	push   ecx
1001522f:	push   0x0
10015231:	push   eax
10015232:	call   0x10015740
10015237:	add    esp,0x14
1001523a:	pop    esi
1001523b:	pop    edi
1001523c:	ret    
1001523d:	pop    esi
1001523e:	mov    eax,0x3
10015243:	pop    edi
10015244:	ret    
10015245:	int3   
10015246:	int3   
10015247:	int3   
10015248:	int3   
10015249:	int3   
1001524a:	int3   
1001524b:	int3   
1001524c:	int3   
1001524d:	int3   
1001524e:	int3   
1001524f:	int3   
10015250:	test   DWORD PTR [esp+0x4],0x4000
10015258:	je     0x10015261
1001525a:	mov    eax,DWORD PTR [eax*4+0x100be080]
10015261:	ret    
10015262:	int3   
10015263:	int3   
10015264:	int3   
10015265:	int3   
10015266:	int3   
10015267:	int3   
10015268:	int3   
10015269:	int3   
1001526a:	int3   
1001526b:	int3   
1001526c:	int3   
1001526d:	int3   
1001526e:	int3   
1001526f:	int3   
10015270:	test   ecx,0x2000
10015276:	je     0x10015280
10015278:	mov    eax,DWORD PTR [eax*4+0x100be08c]
1001527f:	ret    
10015280:	cmp    eax,0x2
10015283:	jne    0x100152ad
10015285:	and    edx,0x3000000
1001528b:	cmp    edx,0x1000000
10015291:	je     0x100152a8
10015293:	test   ecx,0x2000000
10015299:	je     0x100152a2
1001529b:	test   BYTE PTR [esp+0x4],0x8
100152a0:	jne    0x100152a8
100152a2:	mov    eax,0x1
100152a7:	ret    
100152a8:	mov    eax,0x2
100152ad:	ret    
100152ae:	int3   
100152af:	int3   
100152b0:	sub    esp,0x18
100152b3:	mov    edx,DWORD PTR [ebx+0x10]
100152b6:	push   ebp
100152b7:	mov    ebp,DWORD PTR [esp+0x20]
100152bb:	mov    ecx,DWORD PTR [ebp+0x28]
100152be:	push   esi
100152bf:	xor    eax,eax
100152c1:	push   ebp
100152c2:	push   ebx
100152c3:	mov    DWORD PTR [esp+0x10],eax
100152c7:	mov    DWORD PTR [esp+0x1c],ecx
100152cb:	mov    DWORD PTR [esp+0x24],edx
100152cf:	mov    BYTE PTR [esp+0x2c],al
100152d3:	mov    DWORD PTR [esp+0x20],eax
100152d7:	call   0x10017d00
100152dc:	mov    esi,eax
100152de:	add    esp,0x8
100152e1:	test   esi,esi
100152e3:	je     0x100154e0
100152e9:	cmp    DWORD PTR [ebp+0x18],0x1
100152ed:	jne    0x10015319
100152ef:	mov    eax,DWORD PTR [ebp+0x0]
100152f2:	test   eax,0x2000
100152f7:	je     0x10015319
100152f9:	cmp    DWORD PTR [ebp+0x20],0x0
100152fd:	jne    0x10015319
100152ff:	test   BYTE PTR [esp+0x14],0x8
10015304:	je     0x10015319
10015306:	and    eax,0xffffdfff
1001530b:	push   0x3
1001530d:	push   ebp
1001530e:	mov    DWORD PTR [ebp+0x0],eax
10015311:	call   0x10017650
10015316:	add    esp,0x8
10015319:	mov    eax,DWORD PTR [ebx+0x18]
1001531c:	cmp    eax,0x2
1001531f:	jne    0x10015332
10015321:	test   DWORD PTR [esi+0x8],0x800000
10015328:	jne    0x100154e0
1001532e:	cmp    eax,eax
10015330:	je     0x1001533f
10015332:	test   DWORD PTR [esi+0x8],0x8000000
10015339:	jne    0x100154e0
1001533f:	mov    ecx,DWORD PTR [esi+0x8]
10015342:	test   cl,0x1
10015345:	je     0x10015391
10015347:	not    ecx
10015349:	test   ecx,0x40000000
1001534f:	je     0x1001535f
10015351:	add    DWORD PTR [ebx+0x10],0x1
10015355:	add    DWORD PTR [ebx+0x14],0xffffffff
10015359:	js     0x100154e0
1001535f:	mov    ecx,DWORD PTR [ebx+0x10]
10015362:	movzx  edx,BYTE PTR [ecx]
10015365:	mov    ecx,DWORD PTR [esi+0x8]
10015368:	test   ecx,0x10000000
1001536e:	mov    DWORD PTR [esp+0x8],edx
10015372:	je     0x1001537d
10015374:	test   dl,0x38
10015377:	jne    0x100154e0
1001537d:	test   ecx,0x100000
10015383:	je     0x10015391
10015385:	cmp    edx,0xc0
1001538b:	jb     0x100154e0
10015391:	mov    edx,DWORD PTR [esp+0x14]
10015395:	add    DWORD PTR [ebx+0x10],0x1
10015399:	mov    ecx,DWORD PTR [ebp+0x0]
1001539c:	push   edx
1001539d:	mov    edx,DWORD PTR [esi+0x8]
100153a0:	call   0x10015270
100153a5:	mov    DWORD PTR [esp+0x14],eax
100153a9:	mov    eax,ecx
100153ab:	push   eax
100153ac:	mov    eax,DWORD PTR [ebx+0x18]
100153af:	call   0x10015250
100153b4:	push   0x40
100153b6:	push   0x0
100153b8:	push   edi
100153b9:	mov    DWORD PTR [esp+0x20],eax
100153bd:	call   0x100191d0
100153c2:	mov    BYTE PTR [edi+0xd],0xff
100153c6:	mov    al,BYTE PTR [esi+0x3]
100153c9:	add    esp,0x14
100153cc:	test   al,al
100153ce:	je     0x1001549a
100153d4:	mov    edx,DWORD PTR [esp+0xc]
100153d8:	lea    ecx,[esp+0x18]
100153dc:	push   ecx
100153dd:	mov    ecx,DWORD PTR [esp+0x14]
100153e1:	push   edx
100153e2:	mov    edx,DWORD PTR [esp+0x10]
100153e6:	push   ecx
100153e7:	push   ebp
100153e8:	push   edx
100153e9:	push   0x0
100153eb:	movzx  eax,al
100153ee:	push   eax
100153ef:	push   esi
100153f0:	push   edi
100153f1:	push   ebx
100153f2:	call   0x10016460
100153f7:	add    esp,0x28
100153fa:	test   eax,eax
100153fc:	je     0x100154e0
10015402:	mov    al,BYTE PTR [esi+0x2]
10015405:	test   al,al
10015407:	je     0x1001549a
1001540d:	mov    ecx,DWORD PTR [esp+0xc]
10015411:	mov    edx,DWORD PTR [esp+0x10]
10015415:	push   0x0
10015417:	push   ecx
10015418:	mov    ecx,DWORD PTR [esp+0x10]
1001541c:	push   edx
1001541d:	push   ebp
1001541e:	push   ecx
1001541f:	push   0x1
10015421:	movzx  edx,al
10015424:	push   edx
10015425:	push   esi
10015426:	push   edi
10015427:	push   ebx
10015428:	call   0x10016460
1001542d:	add    esp,0x28
10015430:	test   eax,eax
10015432:	je     0x100154e0
10015438:	test   DWORD PTR [esi+0x8],0x20000
1001543f:	je     0x1001549a
10015441:	mov    eax,DWORD PTR [esp+0xc]
10015445:	mov    ecx,DWORD PTR [esp+0x10]
10015449:	mov    edx,DWORD PTR [esp+0x8]
1001544d:	push   0x0
1001544f:	push   eax
10015450:	movzx  eax,BYTE PTR [esi+0x10]
10015454:	push   ecx
10015455:	push   ebp
10015456:	push   edx
10015457:	push   0x2
10015459:	push   eax
1001545a:	push   esi
1001545b:	push   edi
1001545c:	push   ebx
1001545d:	call   0x10016460
10015462:	add    esp,0x28
10015465:	test   eax,eax
10015467:	je     0x100154e0
10015469:	test   DWORD PTR [esi+0x8],0x40000
10015470:	je     0x1001549a
10015472:	mov    ecx,DWORD PTR [esp+0xc]
10015476:	mov    edx,DWORD PTR [esp+0x10]
1001547a:	mov    eax,DWORD PTR [esp+0x8]
1001547e:	push   0x0
10015480:	push   ecx
10015481:	movzx  ecx,BYTE PTR [esi+0x11]
10015485:	push   edx
10015486:	push   ebp
10015487:	push   eax
10015488:	push   0x3
1001548a:	push   ecx
1001548b:	push   esi
1001548c:	push   edi
1001548d:	push   ebx
1001548e:	call   0x10016460
10015493:	add    esp,0x28
10015496:	test   eax,eax
10015498:	je     0x100154e0
1001549a:	test   DWORD PTR [esi+0x8],0x200000
100154a1:	je     0x100154b2
100154a3:	push   ebx
100154a4:	call   0x10017ff0
100154a9:	mov    esi,eax
100154ab:	add    esp,0x4
100154ae:	test   esi,esi
100154b0:	je     0x100154e0
100154b2:	test   DWORD PTR [esi+0x8],0x400000
100154b9:	je     0x100154d5
100154bb:	add    DWORD PTR [ebx+0x14],0xffffffff
100154bf:	js     0x100154e0
100154c1:	mov    eax,DWORD PTR [ebx+0x10]
100154c4:	mov    cl,BYTE PTR [eax]
100154c6:	add    eax,0x1
100154c9:	cmp    cl,0x8
100154cc:	mov    BYTE PTR [esp+0x24],cl
100154d0:	mov    DWORD PTR [ebx+0x10],eax
100154d3:	jae    0x100154e0
100154d5:	mov    edx,DWORD PTR [ebx+0x10]
100154d8:	sub    edx,DWORD PTR [ebp+0x8]
100154db:	cmp    edx,0xf
100154de:	jle    0x10015525
100154e0:	push   0x40
100154e2:	push   0x0
100154e4:	push   edi
100154e5:	call   0x100191d0
100154ea:	mov    eax,DWORD PTR [esp+0x28]
100154ee:	mov    BYTE PTR [edi+0xd],0xff
100154f2:	mov    BYTE PTR [edi+0x8],0x1
100154f6:	add    esp,0xc
100154f9:	mov    DWORD PTR [ebp+0x4],0x0
10015500:	cmp    BYTE PTR [eax],0x9b
10015503:	jne    0x1001551a
10015505:	or     BYTE PTR [edi+0x3a],0x8
10015509:	pop    esi
1001550a:	mov    WORD PTR [edi+0x10],0x3db
10015510:	mov    eax,0x1
10015515:	pop    ebp
10015516:	add    esp,0x18
10015519:	ret    
1001551a:	pop    esi
1001551b:	mov    eax,0x3
10015520:	pop    ebp
10015521:	add    esp,0x18
10015524:	ret    
10015525:	mov    edx,0x1
1001552a:	cmp    DWORD PTR [esp+0x18],edx
1001552e:	jne    0x10015540
10015530:	test   BYTE PTR [esi+0x8],0x10
10015534:	je     0x10015540
10015536:	or     DWORD PTR [ebp+0x4],0x10
1001553a:	or     WORD PTR [edi+0xa],dx
1001553e:	jmp    0x1001556b
10015540:	mov    eax,DWORD PTR [esi+0x8]
10015543:	test   al,0x20
10015545:	je     0x10015558
10015547:	test   BYTE PTR [ebp+0x0],0x20
1001554b:	je     0x10015558
1001554d:	or     DWORD PTR [ebp+0x4],0x20
10015551:	or     WORD PTR [edi+0xa],0x2
10015556:	jmp    0x1001556b
10015558:	test   al,0x40
1001555a:	je     0x1001556b
1001555c:	test   BYTE PTR [ebp+0x0],0x40
10015560:	je     0x1001556b
10015562:	or     DWORD PTR [ebp+0x4],0x40
10015566:	or     WORD PTR [edi+0xa],0x4
1001556b:	mov    eax,DWORD PTR [esi+0x8]
1001556e:	mov    ecx,eax
10015570:	and    ecx,0x14000
10015576:	cmp    ecx,0x14000
1001557c:	jne    0x100155af
1001557e:	mov    eax,DWORD PTR [esp+0xc]
10015582:	or     DWORD PTR [ebp+0x4],0x4000
10015589:	test   eax,eax
1001558b:	je     0x1001568b
10015591:	cmp    eax,edx
10015593:	jne    0x100155a2
10015595:	mov    ax,WORD PTR [esi+0x12]
10015599:	mov    WORD PTR [edi+0x10],ax
1001559d:	jmp    0x10015693
100155a2:	mov    cx,WORD PTR [esi+0x14]
100155a6:	mov    WORD PTR [edi+0x10],cx
100155aa:	jmp    0x10015693
100155af:	mov    ecx,eax
100155b1:	and    ecx,0xc000
100155b7:	cmp    ecx,0xc000
100155bd:	jne    0x100155d3
100155bf:	mov    dx,WORD PTR [esi+0x4]
100155c3:	mov    WORD PTR [edi+0x10],dx
100155c7:	or     DWORD PTR [ebp+0x4],0x4000
100155ce:	jmp    0x10015693
100155d3:	mov    ecx,DWORD PTR [esp+0x10]
100155d7:	test   ecx,ecx
100155d9:	jne    0x100155fd
100155db:	test   eax,0x10000
100155e0:	je     0x100155f0
100155e2:	test   eax,0x1000008
100155e7:	jne    0x100155f0
100155e9:	or     DWORD PTR [ebp+0x4],0x2000
100155f0:	mov    ax,WORD PTR [esi+0x4]
100155f4:	mov    WORD PTR [edi+0x10],ax
100155f8:	jmp    0x10015693
100155fd:	cmp    ecx,edx
100155ff:	jne    0x10015652
10015601:	or     WORD PTR [edi+0xa],0x100
10015607:	test   DWORD PTR [esi+0x8],0x10000
1001560e:	je     0x1001568b
10015610:	or     DWORD PTR [ebp+0x4],0x2000
10015617:	mov    eax,DWORD PTR [esi+0x8]
1001561a:	test   eax,0x80000
1001561f:	je     0x1001563b
10015621:	cmp    DWORD PTR [esp+0x8],0xc0
10015629:	jb     0x10015635
1001562b:	mov    cx,WORD PTR [esi+0x4]
1001562f:	mov    WORD PTR [edi+0x10],cx
10015633:	jmp    0x10015693
10015635:	mov    dx,WORD PTR [esi+0x12]
10015639:	jmp    0x1001568f
1001563b:	test   eax,0x400000
10015640:	je     0x10015681
10015642:	movzx  ax,BYTE PTR [esp+0x24]
10015648:	add    ax,WORD PTR [esi+0x4]
1001564c:	mov    WORD PTR [edi+0x10],ax
10015650:	jmp    0x10015693
10015652:	or     WORD PTR [edi+0xa],0x200
10015658:	mov    eax,DWORD PTR [esi+0x8]
1001565b:	test   eax,0x4010000
10015660:	je     0x1001568b
10015662:	test   eax,0x4000000
10015667:	je     0x10015681
10015669:	test   BYTE PTR [esp+0x14],0x8
1001566e:	je     0x10015681
10015670:	or     DWORD PTR [ebp+0x4],0x2000000
10015677:	mov    ax,WORD PTR [esi+0x14]
1001567b:	mov    WORD PTR [edi+0x10],ax
1001567f:	jmp    0x10015693
10015681:	mov    cx,WORD PTR [esi+0x12]
10015685:	mov    WORD PTR [edi+0x10],cx
10015689:	jmp    0x10015693
1001568b:	mov    dx,WORD PTR [esi+0x4]
1001568f:	mov    WORD PTR [edi+0x10],dx
10015693:	test   DWORD PTR [esi+0x8],0x8000
1001569a:	je     0x100156ac
1001569c:	test   DWORD PTR [ebp+0x0],0x2000
100156a3:	je     0x100156ac
100156a5:	or     DWORD PTR [ebp+0x4],0x2000
100156ac:	test   DWORD PTR [esi+0x8],0x20000000
100156b3:	je     0x100156d6
100156b5:	mov    eax,DWORD PTR [esi+0xc]
100156b8:	test   al,0x4
100156ba:	je     0x100156c3
100156bc:	test   BYTE PTR [esp+0x14],0x8
100156c1:	jne    0x100156ce
100156c3:	test   al,0x8
100156c5:	je     0x100156d6
100156c7:	test   BYTE PTR [esp+0x14],0x10
100156cc:	je     0x100156d6
100156ce:	mov    ax,WORD PTR [esi+0x12]
100156d2:	mov    WORD PTR [edi+0x10],ax
100156d6:	mov    eax,DWORD PTR [esp+0xc]
100156da:	and    eax,0x3
100156dd:	shl    eax,0xa
100156e0:	or     WORD PTR [edi+0xa],ax
100156e4:	test   DWORD PTR [esi+0x8],0x80000000
100156eb:	movzx  eax,WORD PTR [edi+0xa]
100156ef:	je     0x100156f8
100156f1:	or     eax,0x40
100156f4:	mov    WORD PTR [edi+0xa],ax
100156f8:	push   ebp
100156f9:	call   0x10017690
100156fe:	mov    WORD PTR [edi+0x38],ax
10015702:	mov    cl,BYTE PTR [esi+0x1]
10015705:	add    esp,0x4
10015708:	cmp    BYTE PTR [edi+0xc],0x0
1001570c:	mov    BYTE PTR [edi+0x3a],cl
1001570f:	jne    0x10015715
10015711:	mov    BYTE PTR [edi+0xc],0xff
10015715:	mov    al,BYTE PTR [edi+0xd]
10015718:	cmp    al,0xff
1001571a:	je     0x1001572b
1001571c:	movzx  edx,al
1001571f:	mov    ax,WORD PTR [edx*2+0x100be098]
10015727:	or     WORD PTR [edi+0x3c],ax
1001572b:	mov    cl,BYTE PTR [ebx+0x10]
1001572e:	sub    cl,BYTE PTR [esp+0x1c]
10015732:	pop    esi
10015733:	mov    BYTE PTR [edi+0x8],cl
10015736:	mov    eax,0x1
1001573b:	pop    ebp
1001573c:	add    esp,0x18
1001573f:	ret    
10015740:	sub    esp,0x90
10015746:	push   ebx
10015747:	push   ebp
10015748:	push   esi
10015749:	or     eax,0xffffffff
1001574c:	push   edi
1001574d:	mov    edi,DWORD PTR [esp+0xa4]
10015754:	mov    ebp,DWORD PTR [edi]
10015756:	mov    ecx,DWORD PTR [edi+0x4]
10015759:	mov    ebx,DWORD PTR [edi+0x10]
1001575c:	mov    edx,DWORD PTR [edi+0x14]
1001575f:	mov    DWORD PTR [esp+0x2c],eax
10015763:	mov    DWORD PTR [esp+0x30],eax
10015767:	mov    eax,DWORD PTR [edi+0x1c]
1001576a:	xor    esi,esi
1001576c:	test   al,0x2
1001576e:	mov    DWORD PTR [esp+0x1c],ebp
10015772:	mov    DWORD PTR [esp+0x20],ecx
10015776:	mov    DWORD PTR [esp+0x18],ebx
1001577a:	mov    DWORD PTR [esp+0x14],edx
1001577e:	je     0x1001578a
10015780:	mov    DWORD PTR [esp+0x2c],0xffffffff
10015788:	jmp    0x10015796
1001578a:	test   al,0x1
1001578c:	je     0x1001579a
1001578e:	mov    DWORD PTR [esp+0x2c],0xffff
10015796:	mov    DWORD PTR [esp+0x30],esi
1001579a:	test   edx,edx
1001579c:	mov    eax,DWORD PTR [esp+0xb4]
100157a3:	mov    DWORD PTR [eax],esi
100157a5:	mov    eax,DWORD PTR [edi+0x18]
100157a8:	mov    DWORD PTR [esp+0x98],eax
100157af:	mov    DWORD PTR [edi+0x8],ebp
100157b2:	mov    DWORD PTR [edi+0xc],ecx
100157b5:	jg     0x100157d8
100157b7:	pop    edi
100157b8:	pop    esi
100157b9:	pop    ebp
100157ba:	mov    eax,0x1
100157bf:	pop    ebx
100157c0:	add    esp,0x90
100157c6:	ret    
100157c7:	jmp    0x100157d0
100157c9:	lea    esp,[esp+0x0]
100157d0:	mov    ecx,DWORD PTR [esp+0x20]
100157d4:	mov    ebp,DWORD PTR [esp+0x1c]
100157d8:	push   0x2c
100157da:	mov    DWORD PTR [esp+0x3c],ecx
100157de:	lea    ecx,[esp+0x44]
100157e2:	push   0x0
100157e4:	push   ecx
100157e5:	call   0x100191d0
100157ea:	mov    edx,DWORD PTR [esp+0xa4]
100157f1:	or     eax,0xffffffff
100157f4:	mov    DWORD PTR [esp+0x78],eax
100157f8:	mov    DWORD PTR [esp+0x7c],eax
100157fc:	mov    DWORD PTR [esp+0x80],eax
10015803:	mov    DWORD PTR [esp+0x84],eax
1001580a:	mov    DWORD PTR [esp+0x88],eax
10015811:	mov    DWORD PTR [esp+0x54],ebx
10015815:	mov    DWORD PTR [esp+0x58],ebx
10015819:	movzx  eax,BYTE PTR [ebx]
1001581c:	push   edx
1001581d:	push   eax
1001581e:	mov    DWORD PTR [esp+0x38],0x0
10015826:	call   0x10017540
1001582b:	add    esp,0x14
1001582e:	test   eax,eax
10015830:	je     0x1001595e
10015836:	mov    ecx,DWORD PTR [esp+0x98]
1001583d:	mov    eax,DWORD PTR [esp+0x14]
10015841:	push   ecx
10015842:	lea    edx,[esp+0x44]
10015846:	push   edx
10015847:	push   eax
10015848:	push   ebx
10015849:	call   0x10017720
1001584e:	mov    ecx,DWORD PTR [esp+0x5c]
10015852:	mov    eax,ecx
10015854:	sub    eax,DWORD PTR [esp+0x58]
10015858:	add    esp,0x10
1001585b:	sub    DWORD PTR [esp+0x14],eax
1001585f:	mov    DWORD PTR [esp+0x24],eax
10015863:	je     0x1001586e
10015865:	cmp    eax,0xf
10015868:	jne    0x10015946
1001586e:	mov    edx,DWORD PTR [edi+0x1c]
10015871:	not    edx
10015873:	test   dl,0x4
10015876:	je     0x1001593b
1001587c:	sub    ecx,ebx
1001587e:	lea    edx,[ecx+esi*1]
10015881:	cmp    edx,DWORD PTR [esp+0xb0]
10015888:	ja     0x10015c61
1001588e:	cmp    ebx,DWORD PTR [esp+0x4c]
10015892:	jae    0x10015932
10015898:	mov    edx,DWORD PTR [esp+0xac]
1001589f:	mov    edi,esi
100158a1:	imul   edi,edi,0xa8
100158a7:	mov    eax,esi
100158a9:	shl    eax,0x6
100158ac:	add    eax,edx
100158ae:	add    edi,edx
100158b0:	add    esi,ecx
100158b2:	mov    DWORD PTR [esp+0x10],esi
100158b6:	jmp    0x100158c4
100158b8:	jmp    0x100158c0
100158ba:	lea    ebx,[ebx+0x0]
100158c0:	mov    eax,DWORD PTR [esp+0x28]
100158c4:	cmp    DWORD PTR [esp+0xa8],0x0
100158cc:	mov    esi,edi
100158ce:	jne    0x100158d2
100158d0:	mov    esi,eax
100158d2:	push   0x40
100158d4:	add    eax,0x40
100158d7:	push   0x0
100158d9:	push   esi
100158da:	add    edi,0xa8
100158e0:	mov    DWORD PTR [esp+0x34],eax
100158e4:	call   0x100191d0
100158e9:	mov    ecx,DWORD PTR [esp+0x38]
100158ed:	mov    edx,DWORD PTR [esp+0x3c]
100158f1:	and    edx,DWORD PTR [esp+0x44]
100158f5:	mov    WORD PTR [esi+0xa],0xffff
100158fb:	mov    al,BYTE PTR [ebx]
100158fd:	and    ecx,ebp
100158ff:	add    esp,0xc
10015902:	add    ebx,0x1
10015905:	add    ebp,0x1
10015908:	adc    DWORD PTR [esp+0x38],0x0
1001590d:	cmp    ebx,DWORD PTR [esp+0x4c]
10015911:	mov    BYTE PTR [esi+0x30],al
10015914:	mov    BYTE PTR [esi+0x8],0x1
10015918:	mov    DWORD PTR [esi],ecx
1001591a:	mov    DWORD PTR [esi+0x4],edx
1001591d:	jb     0x100158c0
1001591f:	mov    eax,DWORD PTR [esp+0x24]
10015923:	mov    esi,DWORD PTR [esp+0x10]
10015927:	mov    ebx,DWORD PTR [esp+0x18]
1001592b:	mov    edi,DWORD PTR [esp+0xa4]
10015932:	mov    ecx,DWORD PTR [esp+0xb4]
10015939:	mov    DWORD PTR [ecx],esi
1001593b:	cmp    DWORD PTR [esp+0x14],0x0
10015940:	je     0x100157b7
10015946:	add    ebx,eax
10015948:	add    DWORD PTR [esp+0x1c],eax
1001594c:	mov    DWORD PTR [esp+0x18],ebx
10015950:	adc    DWORD PTR [esp+0x20],0x0
10015955:	cmp    eax,0xf
10015958:	je     0x10015c46
1001595e:	cmp    DWORD PTR [esp+0x98],0x2
10015966:	jne    0x100159bb
10015968:	test   DWORD PTR [esp+0x40],0x2000000
10015970:	je     0x1001599a
10015972:	add    ebx,0xffffffff
10015975:	cmp    DWORD PTR [esp+0x54],ebx
10015979:	je     0x1001599a
1001597b:	and    DWORD PTR [esp+0x40],0xfdffffff
10015983:	lea    edx,[esp+0x40]
10015987:	push   0x0
10015989:	push   edx
1001598a:	mov    DWORD PTR [esp+0x60],0x0
10015992:	call   0x10017650
10015997:	add    esp,0x8
1001599a:	test   DWORD PTR [esp+0x40],0x780
100159a2:	je     0x100159bb
100159a4:	and    DWORD PTR [esp+0x40],0xfffff87f
100159ac:	lea    eax,[esp+0x40]
100159b0:	push   0x2
100159b2:	push   eax
100159b3:	call   0x10017650
100159b8:	add    esp,0x8
100159bb:	lea    eax,[esi+0x1]
100159be:	cmp    eax,DWORD PTR [esp+0xb0]
100159c5:	ja     0x10015c61
100159cb:	cmp    DWORD PTR [esp+0xa8],0x0
100159d3:	je     0x100159dd
100159d5:	imul   esi,esi,0xa8
100159db:	jmp    0x100159e0
100159dd:	shl    esi,0x6
100159e0:	add    esi,DWORD PTR [esp+0xac]
100159e7:	mov    ecx,DWORD PTR [esp+0x18]
100159eb:	mov    edx,DWORD PTR [esp+0x14]
100159ef:	mov    DWORD PTR [esp+0x10],eax
100159f3:	lea    eax,[esp+0x40]
100159f7:	mov    edi,esi
100159f9:	push   eax
100159fa:	lea    ebx,[esp+0x84]
10015a01:	mov    DWORD PTR [esp+0x94],ecx
10015a08:	mov    DWORD PTR [esp+0x98],edx
10015a0f:	call   0x100152b0
10015a14:	mov    ecx,DWORD PTR [esp+0xa8]
10015a1b:	add    esp,0x4
10015a1e:	test   BYTE PTR [ecx+0x1c],0x4
10015a22:	mov    DWORD PTR [esp+0x28],eax
10015a26:	je     0x10015a36
10015a28:	test   BYTE PTR [edi+0x3a],0x7
10015a2c:	jne    0x10015a36
10015a2e:	mov    DWORD PTR [esp+0x28],0x4
10015a36:	mov    ecx,DWORD PTR [esp+0x30]
10015a3a:	and    DWORD PTR [edi+0x2c],ecx
10015a3d:	mov    eax,DWORD PTR [esp+0x2c]
10015a41:	and    DWORD PTR [edi+0x28],eax
10015a44:	mov    esi,ecx
10015a46:	mov    cl,BYTE PTR [edi+0x8]
10015a49:	and    esi,DWORD PTR [esp+0x38]
10015a4d:	movzx  ebx,cl
10015a50:	sub    DWORD PTR [esp+0x14],ebx
10015a54:	mov    edx,eax
10015a56:	and    edx,ebp
10015a58:	mov    DWORD PTR [edi],edx
10015a5a:	mov    eax,ebx
10015a5c:	cdq    
10015a5d:	add    DWORD PTR [esp+0x1c],eax
10015a61:	mov    eax,DWORD PTR [esp+0x24]
10015a65:	mov    DWORD PTR [edi+0x4],esi
10015a68:	adc    DWORD PTR [esp+0x20],edx
10015a6c:	mov    edx,DWORD PTR [esp+0x28]
10015a70:	add    DWORD PTR [esp+0x18],ebx
10015a74:	add    cl,al
10015a76:	cmp    edx,0x3
10015a79:	mov    BYTE PTR [edi+0x8],cl
10015a7c:	jne    0x10015b69
10015a82:	mov    ecx,DWORD PTR [esp+0xa4]
10015a89:	mov    ecx,DWORD PTR [ecx+0x1c]
10015a8c:	not    ecx
10015a8e:	test   cl,0x4
10015a91:	je     0x10015b73
10015a97:	mov    esi,DWORD PTR [esp+0x10]
10015a9b:	sub    esi,0x1
10015a9e:	lea    ecx,[eax+0x1]
10015aa1:	test   ecx,ecx
10015aa3:	mov    DWORD PTR [esp+0x10],esi
10015aa7:	jbe    0x10015b73
10015aad:	lea    eax,[eax+esi*1+0x1]
10015ab1:	cmp    eax,DWORD PTR [esp+0xb0]
10015ab8:	ja     0x10015c61
10015abe:	mov    ecx,DWORD PTR [esp+0x4c]
10015ac2:	mov    ebx,DWORD PTR [esp+0x48]
10015ac6:	add    ecx,0x1
10015ac9:	cmp    ebx,ecx
10015acb:	mov    DWORD PTR [esp+0x3c],ecx
10015acf:	jae    0x10015b73
10015ad5:	mov    edx,DWORD PTR [esp+0xac]
10015adc:	mov    eax,esi
10015ade:	imul   esi,esi,0xa8
10015ae4:	shl    eax,0x6
10015ae7:	sub    ecx,ebx
10015ae9:	add    eax,edx
10015aeb:	add    esi,edx
10015aed:	add    DWORD PTR [esp+0x10],ecx
10015af1:	jmp    0x10015b04
10015af3:	jmp    0x10015b00
10015af5:	lea    esp,[esp+0x0]
10015afc:	lea    esp,[esp+0x0]
10015b00:	mov    eax,DWORD PTR [esp+0x24]
10015b04:	cmp    DWORD PTR [esp+0xa8],0x0
10015b0c:	mov    edi,esi
10015b0e:	jne    0x10015b12
10015b10:	mov    edi,eax
10015b12:	push   0x40
10015b14:	add    eax,0x40
10015b17:	push   0x0
10015b19:	push   edi
10015b1a:	add    esi,0xa8
10015b20:	mov    DWORD PTR [esp+0x30],eax
10015b24:	call   0x100191d0
10015b29:	mov    eax,DWORD PTR [esp+0x44]
10015b2d:	mov    edx,DWORD PTR [esp+0x38]
10015b31:	mov    WORD PTR [edi+0xa],0xffff
10015b37:	mov    cl,BYTE PTR [ebx]
10015b39:	mov    BYTE PTR [edi+0x30],cl
10015b3c:	mov    ecx,DWORD PTR [esp+0x3c]
10015b40:	and    ecx,eax
10015b42:	and    edx,ebp
10015b44:	add    esp,0xc
10015b47:	add    ebx,0x1
10015b4a:	add    ebp,0x1
10015b4d:	adc    eax,0x0
10015b50:	cmp    ebx,DWORD PTR [esp+0x3c]
10015b54:	mov    BYTE PTR [edi+0x8],0x1
10015b58:	mov    DWORD PTR [edi],edx
10015b5a:	mov    DWORD PTR [edi+0x4],ecx
10015b5d:	mov    DWORD PTR [esp+0x38],eax
10015b61:	jb     0x10015b00
10015b63:	mov    edx,DWORD PTR [esp+0x28]
10015b67:	jmp    0x10015b73
10015b69:	cmp    edx,0x4
10015b6c:	jne    0x10015b73
10015b6e:	sub    DWORD PTR [esp+0x10],0x1
10015b73:	cmp    edx,0x1
10015b76:	mov    eax,DWORD PTR [esp+0xb4]
10015b7d:	mov    ecx,DWORD PTR [esp+0x10]
10015b81:	mov    DWORD PTR [eax],ecx
10015b83:	mov    ecx,DWORD PTR [esp+0x1c]
10015b87:	mov    eax,DWORD PTR [esp+0xa4]
10015b8e:	mov    DWORD PTR [eax+0x8],ecx
10015b91:	mov    ecx,DWORD PTR [esp+0x20]
10015b95:	mov    DWORD PTR [eax+0xc],ecx
10015b98:	jne    0x10015c37
10015b9e:	mov    eax,DWORD PTR [eax+0x1c]
10015ba1:	test   eax,0x3f8
10015ba6:	je     0x10015c37
10015bac:	test   al,0x8
10015bae:	je     0x10015bbf
10015bb0:	mov    dl,BYTE PTR [edi+0x3a]
10015bb3:	and    dl,0x7
10015bb6:	cmp    dl,0x1
10015bb9:	je     0x100157b7
10015bbf:	test   al,0x10
10015bc1:	je     0x10015bd2
10015bc3:	mov    cl,BYTE PTR [edi+0x3a]
10015bc6:	and    cl,0x7
10015bc9:	cmp    cl,0x2
10015bcc:	je     0x100157b7
10015bd2:	test   al,0x20
10015bd4:	je     0x10015be5
10015bd6:	mov    dl,BYTE PTR [edi+0x3a]
10015bd9:	and    dl,0x7
10015bdc:	cmp    dl,0x3
10015bdf:	je     0x100157b7
10015be5:	test   al,0x40
10015be7:	je     0x10015bf8
10015be9:	mov    cl,BYTE PTR [edi+0x3a]
10015bec:	and    cl,0x7
10015bef:	cmp    cl,0x4
10015bf2:	je     0x100157b7
10015bf8:	test   al,al
10015bfa:	jns    0x10015c0b
10015bfc:	mov    dl,BYTE PTR [edi+0x3a]
10015bff:	and    dl,0x7
10015c02:	cmp    dl,0x5
10015c05:	je     0x100157b7
10015c0b:	test   eax,0x100
10015c10:	je     0x10015c21
10015c12:	mov    cl,BYTE PTR [edi+0x3a]
10015c15:	and    cl,0x7
10015c18:	cmp    cl,0x6
10015c1b:	je     0x100157b7
10015c21:	test   eax,0x200
10015c26:	je     0x10015c37
10015c28:	mov    dl,BYTE PTR [edi+0x3a]
10015c2b:	and    dl,0x7
10015c2e:	cmp    dl,0x7
10015c31:	je     0x100157b7
10015c37:	mov    esi,DWORD PTR [esp+0x10]
10015c3b:	mov    ebx,DWORD PTR [esp+0x18]
10015c3f:	mov    edi,DWORD PTR [esp+0xa4]
10015c46:	cmp    DWORD PTR [esp+0x14],0x0
10015c4b:	jg     0x100157d0
10015c51:	pop    edi
10015c52:	pop    esi
10015c53:	pop    ebp
10015c54:	mov    eax,0x1
10015c59:	pop    ebx
10015c5a:	add    esp,0x90
10015c60:	ret    
10015c61:	pop    edi
10015c62:	pop    esi
10015c63:	pop    ebp
10015c64:	mov    eax,0x2
10015c69:	pop    ebx
10015c6a:	add    esp,0x90
10015c70:	ret    
10015c71:	int3   
10015c72:	int3   
10015c73:	int3   
10015c74:	int3   
10015c75:	int3   
10015c76:	int3   
10015c77:	int3   
10015c78:	int3   
10015c79:	int3   
10015c7a:	int3   
10015c7b:	int3   
10015c7c:	int3   
10015c7d:	int3   
10015c7e:	int3   
10015c7f:	int3   
10015c80:	lea    ecx,[eax-0x4]
10015c83:	cmp    ecx,0x3
10015c86:	ja     0x10015c8c
10015c88:	add    eax,0x3c
10015c8b:	ret    
10015c8c:	add    eax,0x30
10015c8f:	ret    
10015c90:	mov    cl,BYTE PTR [esp+0x4]
10015c94:	mov    BYTE PTR [eax],cl
10015c96:	mov    WORD PTR [eax+0x2],dx
10015c9a:	ret    0x4
10015c9d:	int3   
10015c9e:	int3   
10015c9f:	int3   
10015ca0:	mov    cl,BYTE PTR [esp+0x4]
10015ca4:	mov    dl,BYTE PTR [esp+0xc]
10015ca8:	mov    BYTE PTR [eax],cl
10015caa:	mov    cx,WORD PTR [esp+0x8]
10015caf:	mov    BYTE PTR [eax+0x1],dl
10015cb2:	mov    WORD PTR [eax+0x2],cx
10015cb6:	ret    0xc
10015cb9:	int3   
10015cba:	int3   
10015cbb:	int3   
10015cbc:	int3   
10015cbd:	int3   
10015cbe:	int3   
10015cbf:	int3   
10015cc0:	sub    DWORD PTR [eax+0x14],esi
10015cc3:	jns    0x10015cc8
10015cc5:	xor    eax,eax
10015cc7:	ret    
10015cc8:	lea    edx,[esi-0x1]
10015ccb:	cmp    edx,0x7
10015cce:	ja     0x10015d18
10015cd0:	jmp    DWORD PTR [edx*4+0x10015d24]
10015cd7:	mov    edx,DWORD PTR [eax+0x10]
10015cda:	mov    dl,BYTE PTR [edx]
10015cdc:	mov    BYTE PTR [ecx],dl
10015cde:	add    DWORD PTR [eax+0x10],esi
10015ce1:	mov    eax,0x1
10015ce6:	ret    
10015ce7:	mov    edx,DWORD PTR [eax+0x10]
10015cea:	mov    dx,WORD PTR [edx]
10015ced:	mov    WORD PTR [ecx],dx
10015cf0:	add    DWORD PTR [eax+0x10],esi
10015cf3:	mov    eax,0x1
10015cf8:	ret    
10015cf9:	mov    edx,DWORD PTR [eax+0x10]
10015cfc:	mov    edx,DWORD PTR [edx]
10015cfe:	mov    DWORD PTR [ecx],edx
10015d00:	add    DWORD PTR [eax+0x10],esi
10015d03:	mov    eax,0x1
10015d08:	ret    
10015d09:	mov    edx,DWORD PTR [eax+0x10]
10015d0c:	push   edi
10015d0d:	mov    edi,DWORD PTR [edx]
10015d0f:	mov    DWORD PTR [ecx],edi
10015d11:	mov    edx,DWORD PTR [edx+0x4]
10015d14:	mov    DWORD PTR [ecx+0x4],edx
10015d17:	pop    edi
10015d18:	add    DWORD PTR [eax+0x10],esi
10015d1b:	mov    eax,0x1
10015d20:	ret    
10015d21:	lea    ecx,[ecx+0x0]
10015d24:	xlat   BYTE PTR ds:[ebx]
10015d25:	pop    esp
10015d26:	add    DWORD PTR [eax],edx
10015d28:	out    0x5c,eax
10015d2a:	add    DWORD PTR [eax],edx
10015d2c:	sbb    BYTE PTR [ebp+0x1],bl
10015d2f:	adc    cl,bh
10015d31:	pop    esp
10015d32:	add    DWORD PTR [eax],edx
10015d34:	sbb    BYTE PTR [ebp+0x1],bl
10015d37:	adc    BYTE PTR [eax],bl
10015d39:	pop    ebp
10015d3a:	add    DWORD PTR [eax],edx
10015d3c:	sbb    BYTE PTR [ebp+0x1],bl
10015d3f:	adc    BYTE PTR [ecx],cl
10015d41:	pop    ebp
10015d42:	add    DWORD PTR [eax],edx
10015d44:	int3   
10015d45:	int3   
10015d46:	int3   
10015d47:	int3   
10015d48:	int3   
10015d49:	int3   
10015d4a:	int3   
10015d4b:	int3   
10015d4c:	int3   
10015d4d:	int3   
10015d4e:	int3   
10015d4f:	int3   
10015d50:	sub    DWORD PTR [ecx+0x14],edi
10015d53:	jns    0x10015d58
10015d55:	xor    eax,eax
10015d57:	ret    
10015d58:	lea    eax,[edi-0x1]
10015d5b:	cmp    eax,0x7
10015d5e:	ja     0x10015db2
10015d60:	jmp    DWORD PTR [eax*4+0x10015dbc]
10015d67:	mov    eax,DWORD PTR [ecx+0x10]
10015d6a:	movsx  eax,BYTE PTR [eax]
10015d6d:	cdq    
10015d6e:	mov    DWORD PTR [esi],eax
10015d70:	mov    DWORD PTR [esi+0x4],edx
10015d73:	add    DWORD PTR [ecx+0x10],edi
10015d76:	mov    eax,0x1
10015d7b:	ret    
10015d7c:	mov    edx,DWORD PTR [ecx+0x10]
10015d7f:	movsx  eax,WORD PTR [edx]
10015d82:	cdq    
10015d83:	mov    DWORD PTR [esi],eax
10015d85:	mov    DWORD PTR [esi+0x4],edx
10015d88:	add    DWORD PTR [ecx+0x10],edi
10015d8b:	mov    eax,0x1
10015d90:	ret    
10015d91:	mov    eax,DWORD PTR [ecx+0x10]
10015d94:	mov    eax,DWORD PTR [eax]
10015d96:	cdq    
10015d97:	mov    DWORD PTR [esi],eax
10015d99:	mov    DWORD PTR [esi+0x4],edx
10015d9c:	add    DWORD PTR [ecx+0x10],edi
10015d9f:	mov    eax,0x1
10015da4:	ret    
10015da5:	mov    eax,DWORD PTR [ecx+0x10]
10015da8:	mov    edx,DWORD PTR [eax]
10015daa:	mov    DWORD PTR [esi],edx
10015dac:	mov    eax,DWORD PTR [eax+0x4]
10015daf:	mov    DWORD PTR [esi+0x4],eax
10015db2:	add    DWORD PTR [ecx+0x10],edi
10015db5:	mov    eax,0x1
10015dba:	ret    
10015dbb:	nop
10015dbc:	addr16 pop ebp
10015dbe:	add    DWORD PTR [eax],edx
10015dc0:	jl     0x10015e1f
10015dc2:	add    DWORD PTR [eax],edx
10015dc4:	mov    dl,0x5d
10015dc6:	add    DWORD PTR [eax],edx
10015dc8:	xchg   ecx,eax
10015dc9:	pop    ebp
10015dca:	add    DWORD PTR [eax],edx
10015dcc:	mov    dl,0x5d
10015dce:	add    DWORD PTR [eax],edx
10015dd0:	mov    dl,0x5d
10015dd2:	add    DWORD PTR [eax],edx
10015dd4:	mov    dl,0x5d
10015dd6:	add    DWORD PTR [eax],edx
10015dd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10015dd9:	pop    ebp
10015dda:	add    DWORD PTR [eax],edx
10015ddc:	int3   
10015ddd:	int3   
10015dde:	int3   
10015ddf:	int3   
10015de0:	mov    eax,DWORD PTR [edi+0x28]
10015de3:	push   ebx
10015de4:	push   ebp
10015de5:	push   esi
10015de6:	mov    esi,edx
10015de8:	mov    ebx,edx
10015dea:	shr    esi,0x6
10015ded:	shr    ebx,0x3
10015df0:	and    esi,0x3
10015df3:	and    ebx,0x7
10015df6:	and    edx,0x7
10015df9:	test   al,0x2
10015dfb:	je     0x10015e07
10015dfd:	or     DWORD PTR [edi+0x4],0x2000000
10015e04:	add    ebx,0x8
10015e07:	cmp    ebx,0x4
10015e0a:	jne    0x10015e1f
10015e0c:	mov    ecx,DWORD PTR [esp+0x10]
10015e10:	mov    ebp,DWORD PTR [esp+0x14]
10015e14:	mov    BYTE PTR [ecx+ebp*4+0x12],0x6
10015e19:	lea    ebp,[ecx+ebp*4+0x13]
10015e1d:	jmp    0x10015e33
10015e1f:	mov    ebp,DWORD PTR [esp+0x10]
10015e23:	mov    ecx,DWORD PTR [esp+0x14]
10015e27:	mov    BYTE PTR [ebp+ecx*4+0x12],0x7
10015e2c:	mov    ecx,DWORD PTR [esp+0x10]
10015e30:	add    ebp,0xd
10015e33:	cmp    edx,0x5
10015e36:	je     0x10015e7a
10015e38:	test   al,0x1
10015e3a:	je     0x10015e43
10015e3c:	or     DWORD PTR [edi+0x4],0x2000000
10015e43:	and    al,0x1
10015e45:	add    al,al
10015e47:	add    al,al
10015e49:	add    al,al
10015e4b:	cmp    DWORD PTR [esp+0x18],0x2
10015e50:	sete   cl
10015e53:	sub    cl,0x1
10015e56:	and    ecx,0x10
10015e59:	add    al,cl
10015e5b:	mov    ecx,DWORD PTR [esp+0x10]
10015e5f:	add    al,dl
10015e61:	cmp    ebx,0x4
10015e64:	mov    BYTE PTR [ebp+0x0],al
10015e67:	je     0x10015edd
10015e69:	cmp    DWORD PTR [esp+0x18],0x2
10015e6e:	jne    0x10015eb5
10015e70:	mov    eax,DWORD PTR [esp+0x14]
10015e74:	mov    BYTE PTR [ecx+eax*4+0x13],bl
10015e78:	jmp    0x10015ec0
10015e7a:	cmp    DWORD PTR [esp+0x1c],0x0
10015e7f:	je     0x10015ea3
10015e81:	test   al,0x1
10015e83:	je     0x10015e8c
10015e85:	or     DWORD PTR [edi+0x4],0x2000000
10015e8c:	and    al,0x1
10015e8e:	add    al,al
10015e90:	add    al,al
10015e92:	add    al,al
10015e94:	cmp    DWORD PTR [esp+0x18],0x2
10015e99:	jne    0x10015e9f
10015e9b:	add    al,0x5
10015e9d:	jmp    0x10015e61
10015e9f:	add    al,0x15
10015ea1:	jmp    0x10015e61
10015ea3:	cmp    ebx,0x4
10015ea6:	jne    0x10015e69
10015ea8:	mov    edx,DWORD PTR [esp+0x14]
10015eac:	pop    esi
10015ead:	pop    ebp
10015eae:	mov    BYTE PTR [ecx+edx*4+0x12],0x5
10015eb3:	pop    ebx
10015eb4:	ret    
10015eb5:	mov    edx,DWORD PTR [esp+0x14]
10015eb9:	add    bl,0x10
10015ebc:	mov    BYTE PTR [ecx+edx*4+0x13],bl
10015ec0:	test   esi,esi
10015ec2:	je     0x10015ed8
10015ec4:	mov    ecx,esi
10015ec6:	mov    eax,0x1
10015ecb:	shl    eax,cl
10015ecd:	mov    ecx,DWORD PTR [esp+0x10]
10015ed1:	pop    esi
10015ed2:	pop    ebp
10015ed3:	mov    BYTE PTR [ecx+0xe],al
10015ed6:	pop    ebx
10015ed7:	ret    
10015ed8:	xor    eax,eax
10015eda:	mov    BYTE PTR [ecx+0xe],al
10015edd:	pop    esi
10015ede:	pop    ebp
10015edf:	pop    ebx
10015ee0:	ret    
10015ee1:	int3   
10015ee2:	int3   
10015ee3:	int3   
10015ee4:	int3   
10015ee5:	int3   
10015ee6:	int3   
10015ee7:	int3   
10015ee8:	int3   
10015ee9:	int3   
10015eea:	int3   
10015eeb:	int3   
10015eec:	int3   
10015eed:	int3   
10015eee:	int3   
10015eef:	int3   
10015ef0:	mov    edx,DWORD PTR [esp+0x20]
10015ef4:	push   ebx
10015ef5:	push   ebp
10015ef6:	mov    ebp,DWORD PTR [esp+0x1c]
10015efa:	push   esi
10015efb:	xor    esi,esi
10015efd:	cmp    edx,0x3
10015f00:	push   edi
10015f01:	mov    edi,DWORD PTR [esp+0x1c]
10015f05:	mov    ebx,ecx
10015f07:	mov    ecx,DWORD PTR [ebp+0x28]
10015f0a:	mov    DWORD PTR [esp+0x24],esi
10015f0e:	jne    0x10016129
10015f14:	mov    edx,DWORD PTR [esp+0x18]
10015f18:	mov    eax,DWORD PTR [esp+0x20]
10015f1c:	mov    BYTE PTR [edx+eax*4+0x12],0x1
10015f21:	lea    eax,[edx+eax*4+0x14]
10015f25:	movzx  edx,WORD PTR [eax]
10015f28:	lea    esi,[edi-0xf]
10015f2b:	cmp    esi,0x4c
10015f2e:	mov    DWORD PTR [esp+0x30],eax
10015f32:	ja     0x1001617b
10015f38:	movzx  eax,BYTE PTR [esi+0x10016410]
10015f3f:	jmp    DWORD PTR [eax*4+0x100163dc]
10015f46:	mov    eax,DWORD PTR [esp+0x28]
10015f4a:	sub    eax,0x0
10015f4d:	je     0x10015fc0
10015f4f:	sub    eax,0x1
10015f52:	je     0x10015f81
10015f54:	sub    eax,0x1
10015f57:	jne    0x10015fa3
10015f59:	cmp    edi,0x1c
10015f5c:	mov    eax,0x2000000
10015f61:	jne    0x10015f66
10015f63:	or     DWORD PTR [ebp+0x4],eax
10015f66:	test   DWORD PTR [esp+0x34],eax
10015f6a:	je     0x10015f6f
10015f6c:	or     DWORD PTR [ebp+0x4],eax
10015f6f:	test   cl,0x1
10015f72:	je     0x10015f7a
10015f74:	or     DWORD PTR [ebp+0x4],eax
10015f77:	add    ebx,0x8
10015f7a:	mov    edx,0x40
10015f7f:	jmp    0x10015fa3
10015f81:	or     DWORD PTR [ebp+0x4],0x2000
10015f88:	test   cl,0x1
10015f8b:	mov    eax,DWORD PTR [ebp+0x4]
10015f8e:	je     0x10015f9b
10015f90:	or     eax,0x2000000
10015f95:	mov    DWORD PTR [ebp+0x4],eax
10015f98:	add    ebx,0x8
10015f9b:	mov    edx,0x20
10015fa0:	add    ebx,0x10
10015fa3:	mov    eax,DWORD PTR [esp+0x30]
10015fa7:	mov    ecx,DWORD PTR [esp+0x18]
10015fab:	pop    edi
10015fac:	mov    WORD PTR [eax],dx
10015faf:	mov    edx,DWORD PTR [esp+0x1c]
10015fb3:	pop    esi
10015fb4:	pop    ebp
10015fb5:	mov    BYTE PTR [ecx+edx*4+0x13],bl
10015fb9:	mov    eax,0x1
10015fbe:	pop    ebx
10015fbf:	ret    
10015fc0:	or     DWORD PTR [ebp+0x4],0x2000
10015fc7:	test   cl,0x1
10015fca:	mov    eax,DWORD PTR [ebp+0x4]
10015fcd:	je     0x10015fda
10015fcf:	or     eax,0x2000000
10015fd4:	mov    DWORD PTR [ebp+0x4],eax
10015fd7:	add    ebx,0x8
10015fda:	mov    edx,0x10
10015fdf:	add    ebx,0x20
10015fe2:	jmp    0x10015fa3
10015fe4:	test   cl,0x1
10015fe7:	mov    eax,0x2000000
10015fec:	je     0x10015ff4
10015fee:	or     DWORD PTR [ebp+0x4],eax
10015ff1:	add    ebx,0x8
10015ff4:	mov    edx,DWORD PTR [esp+0x14]
10015ff8:	cmp    DWORD PTR [edx+0x18],0x2
10015ffc:	jne    0x10016014
10015ffe:	mov    edx,DWORD PTR [esp+0x34]
10016002:	and    edx,0x3000000
10016008:	cmp    edx,0x1000000
1001600e:	je     0x1001611f
10016014:	test   cl,0x8
10016017:	je     0x10015f9b
10016019:	or     DWORD PTR [ebp+0x4],eax
1001601c:	mov    edx,0x40
10016021:	jmp    0x10015fa3
10016023:	test   cl,0x1
10016026:	je     0x10016032
10016028:	or     DWORD PTR [ebp+0x4],0x2000000
1001602f:	add    ebx,0x8
10016032:	test   DWORD PTR [ebp+0x0],0x2000
10016039:	je     0x10015f9b
1001603f:	or     DWORD PTR [ebp+0x4],0x2000
10016046:	mov    edx,0x10
1001604b:	add    ebx,0x20
1001604e:	jmp    0x10015fa3
10016053:	test   cl,0x1
10016056:	je     0x10016062
10016058:	or     DWORD PTR [ebp+0x4],0x2000000
1001605f:	add    ebx,0x8
10016062:	add    ebx,0x20
10016065:	jmp    0x10015fa3
1001606a:	cmp    DWORD PTR [ebp+0x18],0x1
1001606e:	jne    0x10016089
10016070:	or     DWORD PTR [ebp+0x4],0x2000000
10016077:	and    ecx,0x1
1001607a:	lea    eax,[ebx+ecx*8]
1001607d:	call   0x10015c80
10016082:	mov    ebx,eax
10016084:	jmp    0x10015fa3
10016089:	add    ebx,0x30
1001608c:	jmp    0x10015fa3
10016091:	mov    edx,0x40
10016096:	add    ebx,0x53
10016099:	jmp    0x10015fa3
1001609e:	test   cl,0x1
100160a1:	je     0x100160ad
100160a3:	or     DWORD PTR [ebp+0x4],0x2000000
100160aa:	add    ebx,0x8
100160ad:	mov    edx,0x80
100160b2:	add    ebx,0x5b
100160b5:	jmp    0x10015fa3
100160ba:	test   cl,0x1
100160bd:	je     0x10015f9b
100160c3:	or     DWORD PTR [ebp+0x4],0x2000000
100160ca:	jmp    0x10015f98
100160cf:	test   cl,0x1
100160d2:	je     0x100160d7
100160d4:	add    ebx,0x8
100160d7:	add    ebx,0x6b
100160da:	jmp    0x10015fa3
100160df:	test   cl,0x1
100160e2:	je     0x100160e7
100160e4:	add    ebx,0x8
100160e7:	test   cl,0x10
100160ea:	je     0x100160ad
100160ec:	mov    edx,0x100
100160f1:	add    ebx,0x6b
100160f4:	jmp    0x10015fa3
100160f9:	test   cl,0x1
100160fc:	je     0x100160ad
100160fe:	add    ebx,0x8
10016101:	mov    edx,0x80
10016106:	add    ebx,0x5b
10016109:	jmp    0x10015fa3
1001610e:	test   cl,0x1
10016111:	je     0x10016116
10016113:	add    ebx,0x8
10016116:	test   cl,0x8
10016119:	je     0x10015f9b
1001611f:	mov    edx,0x40
10016124:	jmp    0x10015fa3
10016129:	or     DWORD PTR [ebp+0x4],0x4000
10016130:	test   eax,eax
10016132:	je     0x10016140
10016134:	test   BYTE PTR [ebp+0x0],0x10
10016138:	je     0x10016140
1001613a:	mov    DWORD PTR [eax],0x1
10016140:	cmp    DWORD PTR [esp+0x2c],esi
10016144:	jne    0x10016255
1001614a:	test   edx,edx
1001614c:	jne    0x10016182
1001614e:	cmp    ebx,0x6
10016151:	jne    0x10016182
10016153:	mov    eax,DWORD PTR [esp+0x18]
10016157:	mov    ecx,DWORD PTR [esp+0x20]
1001615b:	mov    BYTE PTR [eax+ecx*4+0x12],0x5
10016160:	mov    ecx,DWORD PTR [esp+0x14]
10016164:	lea    esi,[eax+0x28]
10016167:	lea    edi,[edx+0x2]
1001616a:	mov    BYTE PTR [eax+0xf],0x10
1001616e:	call   0x10015d50
10016173:	test   eax,eax
10016175:	jne    0x1001621e
1001617b:	pop    edi
1001617c:	pop    esi
1001617d:	pop    ebp
1001617e:	xor    eax,eax
10016180:	pop    ebx
10016181:	ret    
10016182:	cmp    ebx,0x4
10016185:	jae    0x100161a9
10016187:	mov    esi,DWORD PTR [esp+0x18]
1001618b:	mov    edi,DWORD PTR [esp+0x20]
1001618f:	mov    BYTE PTR [esi+edi*4+0x12],0x7
10016194:	mov    al,BYTE PTR [ebx+0x100be1c0]
1001619a:	mov    BYTE PTR [esi+0xd],al
1001619d:	mov    cl,BYTE PTR [ebx+0x100be1c8]
100161a3:	mov    BYTE PTR [esi+edi*4+0x13],cl
100161a7:	jmp    0x100161c0
100161a9:	mov    edi,DWORD PTR [esp+0x18]
100161ad:	mov    esi,DWORD PTR [esp+0x20]
100161b1:	mov    BYTE PTR [edi+esi*4+0x12],0x6
100161b6:	mov    al,BYTE PTR [ebx+0x100be1c0]
100161bc:	mov    BYTE PTR [edi+esi*4+0x13],al
100161c0:	cmp    edx,0x1
100161c3:	jne    0x100161e4
100161c5:	mov    eax,DWORD PTR [esp+0x18]
100161c9:	mov    ecx,DWORD PTR [esp+0x14]
100161cd:	lea    esi,[eax+0x28]
100161d0:	mov    edi,edx
100161d2:	mov    BYTE PTR [eax+0xf],0x8
100161d6:	call   0x10015d50
100161db:	test   eax,eax
100161dd:	jne    0x10016207
100161df:	pop    edi
100161e0:	pop    esi
100161e1:	pop    ebp
100161e2:	pop    ebx
100161e3:	ret    
100161e4:	cmp    edx,0x2
100161e7:	jne    0x1001620b
100161e9:	mov    eax,DWORD PTR [esp+0x18]
100161ed:	mov    ecx,DWORD PTR [esp+0x14]
100161f1:	lea    esi,[eax+0x28]
100161f4:	mov    edi,edx
100161f6:	mov    BYTE PTR [eax+0xf],0x10
100161fa:	call   0x10015d50
100161ff:	test   eax,eax
10016201:	je     0x1001617b
10016207:	mov    edx,DWORD PTR [esp+0x30]
1001620b:	cmp    ebx,0x2
1001620e:	je     0x10016243
10016210:	cmp    ebx,0x3
10016213:	je     0x10016243
10016215:	cmp    ebx,0x6
10016218:	jne    0x1001621e
1001621a:	test   edx,edx
1001621c:	jne    0x10016243
1001621e:	mov    ecx,DWORD PTR [esp+0x18]
10016222:	mov    edx,DWORD PTR [esp+0x14]
10016226:	mov    eax,DWORD PTR [edx+0x18]
10016229:	push   ecx
1001622a:	push   eax
1001622b:	push   ebp
1001622c:	push   0x200
10016231:	call   0x10017a70
10016236:	add    esp,0x10
10016239:	pop    edi
1001623a:	pop    esi
1001623b:	pop    ebp
1001623c:	mov    eax,0x1
10016241:	pop    ebx
10016242:	ret    
10016243:	mov    ecx,DWORD PTR [esp+0x18]
10016247:	mov    edx,DWORD PTR [esp+0x14]
1001624b:	mov    eax,DWORD PTR [edx+0x18]
1001624e:	push   ecx
1001624f:	push   eax
10016250:	jmp    0x100163c2
10016255:	test   edx,edx
10016257:	jne    0x100162aa
10016259:	cmp    ebx,0x5
1001625c:	jne    0x100162aa
1001625e:	mov    ebx,DWORD PTR [esp+0x18]
10016262:	mov    ecx,DWORD PTR [esp+0x14]
10016266:	lea    esi,[ebx+0x28]
10016269:	lea    edi,[edx+0x4]
1001626c:	mov    BYTE PTR [ebx+0xf],0x20
10016270:	call   0x10015d50
10016275:	test   eax,eax
10016277:	je     0x1001617b
1001627d:	cmp    DWORD PTR [ecx+0x18],0x2
10016281:	jne    0x1001629c
10016283:	mov    eax,DWORD PTR [esp+0x20]
10016287:	mov    BYTE PTR [ebx+eax*4+0x12],0x6
1001628c:	mov    BYTE PTR [ebx+eax*4+0x13],0x4a
10016291:	or     WORD PTR [ebx+0xa],0x80
10016297:	jmp    0x10016373
1001629c:	mov    ecx,DWORD PTR [esp+0x20]
100162a0:	mov    BYTE PTR [ebx+ecx*4+0x12],0x5
100162a5:	jmp    0x10016373
100162aa:	cmp    ebx,0x4
100162ad:	jne    0x100162f1
100162af:	mov    eax,DWORD PTR [esp+0x14]
100162b3:	lea    esi,[ebx-0x3]
100162b6:	lea    ecx,[esp+0x24]
100162ba:	call   0x10015cc0
100162bf:	test   eax,eax
100162c1:	je     0x1001617b
100162c7:	mov    edx,DWORD PTR [esp+0x30]
100162cb:	mov    eax,DWORD PTR [esp+0x2c]
100162cf:	mov    ecx,DWORD PTR [esp+0x20]
100162d3:	mov    esi,DWORD PTR [esp+0x24]
100162d7:	push   edx
100162d8:	mov    edx,DWORD PTR [esp+0x1c]
100162dc:	push   eax
100162dd:	push   ecx
100162de:	push   edx
100162df:	mov    edx,esi
100162e1:	mov    edi,ebp
100162e3:	call   0x10015de0
100162e8:	mov    edx,DWORD PTR [esp+0x40]
100162ec:	add    esp,0x10
100162ef:	jmp    0x1001631b
100162f1:	test   cl,0x1
100162f4:	mov    edi,DWORD PTR [esp+0x18]
100162f8:	mov    eax,DWORD PTR [esp+0x20]
100162fc:	mov    BYTE PTR [edi+eax*4+0x12],0x6
10016301:	je     0x1001630d
10016303:	or     DWORD PTR [ebp+0x4],0x2000000
1001630a:	add    ebx,0x8
1001630d:	cmp    DWORD PTR [esp+0x2c],0x2
10016312:	je     0x10016317
10016314:	add    bl,0x10
10016317:	mov    BYTE PTR [edi+eax*4+0x13],bl
1001631b:	cmp    edx,0x1
1001631e:	jne    0x1001633f
10016320:	mov    eax,DWORD PTR [esp+0x18]
10016324:	mov    ecx,DWORD PTR [esp+0x14]
10016328:	lea    esi,[eax+0x28]
1001632b:	mov    edi,edx
1001632d:	mov    BYTE PTR [eax+0xf],0x8
10016331:	call   0x10015d50
10016336:	test   eax,eax
10016338:	jne    0x1001636f
1001633a:	pop    edi
1001633b:	pop    esi
1001633c:	pop    ebp
1001633d:	pop    ebx
1001633e:	ret    
1001633f:	cmp    edx,0x2
10016342:	je     0x1001634d
10016344:	mov    eax,esi
10016346:	and    eax,0x7
10016349:	cmp    al,0x5
1001634b:	jne    0x1001636f
1001634d:	mov    ebx,DWORD PTR [esp+0x18]
10016351:	mov    ecx,DWORD PTR [esp+0x14]
10016355:	lea    esi,[ebx+0x28]
10016358:	mov    edi,0x4
1001635d:	mov    BYTE PTR [ebx+0xf],0x20
10016361:	call   0x10015d50
10016366:	test   eax,eax
10016368:	jne    0x10016373
1001636a:	pop    edi
1001636b:	pop    esi
1001636c:	pop    ebp
1001636d:	pop    ebx
1001636e:	ret    
1001636f:	mov    ebx,DWORD PTR [esp+0x18]
10016373:	mov    al,BYTE PTR [ebx+0xd]
10016376:	cmp    al,0xff
10016378:	mov    ecx,DWORD PTR [esp+0x20]
1001637c:	movzx  ecx,BYTE PTR [ebx+ecx*4+0x13]
10016381:	je     0x10016388
10016383:	movzx  ecx,al
10016386:	jmp    0x1001638e
10016388:	cmp    BYTE PTR [ebx+0xe],0x2
1001638c:	jae    0x10016398
1001638e:	cmp    ecx,0x15
10016391:	je     0x100163b9
10016393:	cmp    ecx,0x14
10016396:	je     0x100163b9
10016398:	mov    edx,DWORD PTR [esp+0x14]
1001639c:	mov    eax,DWORD PTR [edx+0x18]
1001639f:	push   ebx
100163a0:	push   eax
100163a1:	push   ebp
100163a2:	push   0x200
100163a7:	call   0x10017a70
100163ac:	add    esp,0x10
100163af:	pop    edi
100163b0:	pop    esi
100163b1:	pop    ebp
100163b2:	mov    eax,0x1
100163b7:	pop    ebx
100163b8:	ret    
100163b9:	mov    ecx,DWORD PTR [esp+0x14]
100163bd:	mov    edx,DWORD PTR [ecx+0x18]
100163c0:	push   ebx
100163c1:	push   edx
100163c2:	push   ebp
100163c3:	push   0x100
100163c8:	call   0x10017a70
100163cd:	add    esp,0x10
100163d0:	pop    edi
100163d1:	pop    esi
100163d2:	pop    ebp
100163d3:	mov    eax,0x1
100163d8:	pop    ebx
100163d9:	ret    
100163da:	mov    edi,edi
100163dc:	push   0x60
100163de:	add    DWORD PTR [eax],edx
100163e0:	push   ebx
100163e1:	pusha  
100163e2:	add    DWORD PTR [eax],edx
100163e4:	inc    esi
100163e5:	pop    edi
100163e6:	add    DWORD PTR [eax],edx
100163e8:	in     al,0x5f
100163ea:	add    DWORD PTR [eax],edx
100163ec:	and    esp,DWORD PTR [eax+0x1]
100163ef:	adc    BYTE PTR [edx-0x6eeffea0],bh
100163f5:	pusha  
100163f6:	add    DWORD PTR [eax],edx
100163f8:	sahf   
100163f9:	pusha  
100163fa:	add    DWORD PTR [eax],edx
100163fc:	push   cs
100163fd:	popa   
100163fe:	add    DWORD PTR [eax],edx
10016400:	stc    
10016401:	pusha  
10016402:	add    DWORD PTR [eax],edx
10016404:	iret   
10016405:	pusha  
10016406:	add    DWORD PTR [eax],edx
10016408:	fbld   TBYTE PTR [eax+0x1]
1001640b:	adc    BYTE PTR [ebx+0x61],bh
1001640e:	add    DWORD PTR [eax],edx
10016410:	add    BYTE PTR [ecx],al
10016412:	add    al,BYTE PTR [ebx]
10016414:	add    al,0xc
10016416:	or     al,0xc
10016418:	or     al,0x5
1001641a:	add    eax,0xc020303
1001641f:	or     al,0xc
10016421:	or     al,0xc
10016423:	or     al,0xc
10016425:	or     al,0xc
10016427:	or     al,0xc
10016429:	or     al,0xc
1001642b:	or     al,0xc
1001642d:	or     al,0xc
1001642f:	or     al,0xc
10016431:	or     al,0xc
10016433:	or     al,0xc
10016435:	or     al,0xc
10016437:	or     al,0xc
10016439:	or     al,0xc
1001643b:	or     al,0xc
1001643d:	or     al,0xc
1001643f:	or     al,0xc
10016441:	or     al,0xc
10016443:	push   es
10016444:	push   es
10016445:	or     al,0xc
10016447:	pop    es
10016448:	pop    es
10016449:	pop    es
1001644a:	pop    es
1001644b:	or     al,0x5
1001644d:	or     BYTE PTR [eax],cl
1001644f:	or     al,0x8
10016451:	or     DWORD PTR [esp+ecx*1],ecx
10016454:	or     al,0xc
10016456:	or     al,0xa
10016458:	or     al,0xc
1001645a:	or     ecx,DWORD PTR [ebx]
1001645c:	or     esp,ecx
1001645e:	int3   
1001645f:	int3   
10016460:	sub    esp,0xc
10016463:	mov    ecx,DWORD PTR [esp+0x18]
10016467:	mov    edx,DWORD PTR [ecx+0x8]
1001646a:	mov    ecx,DWORD PTR [esp+0x14]
1001646e:	push   ebx
1001646f:	push   ebp
10016470:	mov    ebp,DWORD PTR [esp+0x30]
10016474:	mov    eax,DWORD PTR [ebp+0x24]
10016477:	push   esi
10016478:	mov    esi,DWORD PTR [esp+0x30]
1001647c:	mov    DWORD PTR [esp+0x34],edx
10016480:	mov    edx,DWORD PTR [esp+0x2c]
10016484:	lea    ebx,[ecx+edx*4+0x12]
10016488:	push   edi
10016489:	mov    edi,esi
1001648b:	mov    edx,esi
1001648d:	and    esi,0x7
10016490:	mov    DWORD PTR [esp+0x34],esi
10016494:	mov    esi,DWORD PTR [esp+0x2c]
10016498:	shr    edi,0x6
1001649b:	shr    edx,0x3
1001649e:	mov    DWORD PTR [esp+0x18],eax
100164a2:	mov    eax,DWORD PTR [ebp+0x28]
100164a5:	and    edx,0x7
100164a8:	add    esi,0xffffffec
100164ab:	xor    ecx,ecx
100164ad:	and    edi,0x3
100164b0:	cmp    esi,0x48
100164b3:	mov    DWORD PTR [esp+0x14],eax
100164b7:	mov    DWORD PTR [esp+0x10],edx
100164bb:	ja     0x1001661c
100164c1:	movzx  esi,BYTE PTR [esi+0x10017330]
100164c8:	jmp    DWORD PTR [esi*4+0x100172fc]
100164cf:	mov    eax,DWORD PTR [esp+0x44]
100164d3:	test   eax,eax
100164d5:	je     0x100164e3
100164d7:	test   BYTE PTR [ebp+0x0],0x10
100164db:	je     0x100164e3
100164dd:	mov    DWORD PTR [eax],0x1
100164e3:	cmp    DWORD PTR [esp+0x3c],0x2
100164e8:	jne    0x10016509
100164ea:	or     DWORD PTR [ebp+0x4],0x2000000
100164f1:	mov    ecx,0x6
100164f6:	jmp    0x10016595
100164fb:	cmp    DWORD PTR [esp+0x3c],0x2
10016500:	jne    0x1001654b
10016502:	or     DWORD PTR [ebp+0x4],0x2000000
10016509:	mov    ecx,0x4
1001650e:	jmp    0x10016595
10016513:	mov    eax,DWORD PTR [esp+0x3c]
10016517:	sub    eax,0x0
1001651a:	je     0x10016552
1001651c:	sub    eax,0x1
1001651f:	je     0x10016544
10016521:	sub    eax,0x1
10016524:	jne    0x10016595
10016526:	mov    eax,DWORD PTR [esp+0x38]
1001652a:	and    eax,0x3000000
1001652f:	cmp    eax,0x3000000
10016534:	jne    0x10016509
10016536:	or     DWORD PTR [ebp+0x4],0x2000000
1001653d:	mov    ecx,0x4
10016542:	jmp    0x10016595
10016544:	or     DWORD PTR [ebp+0x4],0x2000
1001654b:	mov    ecx,0x3
10016550:	jmp    0x10016595
10016552:	or     DWORD PTR [ebp+0x4],0x2000
10016559:	mov    ecx,0x2
1001655e:	jmp    0x10016595
10016560:	mov    edx,DWORD PTR [esp+0x20]
10016564:	xor    ecx,ecx
10016566:	cmp    DWORD PTR [edx+0x18],0x2
1001656a:	sete   cl
1001656d:	add    ecx,0x3
10016570:	jmp    0x10016595
10016572:	cmp    edi,0x3
10016575:	jne    0x100165b2
10016577:	lea    eax,[edi-0x2]
1001657a:	pop    edi
1001657b:	pop    esi
1001657c:	pop    ebp
1001657d:	pop    ebx
1001657e:	add    esp,0xc
10016581:	ret    
10016582:	mov    ecx,0x5
10016587:	jmp    0x10016595
10016589:	movzx  ecx,al
1001658c:	and    ecx,0x10
1001658f:	or     ecx,0x60
10016592:	shr    ecx,0x4
10016595:	cmp    edi,0x3
10016598:	jne    0x100165b2
1001659a:	mov    eax,DWORD PTR [esp+0x44]
1001659e:	test   eax,eax
100165a0:	je     0x100165a8
100165a2:	mov    DWORD PTR [eax],0x0
100165a8:	xor    eax,eax
100165aa:	pop    edi
100165ab:	pop    esi
100165ac:	pop    ebp
100165ad:	pop    ebx
100165ae:	add    esp,0xc
100165b1:	ret    
100165b2:	mov    ax,WORD PTR [ecx*2+0x100be1b0]
100165ba:	mov    ecx,DWORD PTR [esp+0x38]
100165be:	mov    edx,DWORD PTR [esp+0x40]
100165c2:	mov    esi,DWORD PTR [esp+0x24]
100165c6:	push   ecx
100165c7:	mov    ecx,DWORD PTR [esp+0x34]
100165cb:	push   edi
100165cc:	push   edx
100165cd:	mov    edx,DWORD PTR [esp+0x38]
100165d1:	mov    WORD PTR [ebx+0x2],ax
100165d5:	mov    eax,DWORD PTR [esp+0x48]
100165d9:	push   eax
100165da:	mov    eax,DWORD PTR [esp+0x30]
100165de:	push   ebp
100165df:	push   ecx
100165e0:	mov    ecx,DWORD PTR [esp+0x4c]
100165e4:	push   edx
100165e5:	push   esi
100165e6:	push   eax
100165e7:	mov    eax,DWORD PTR [esp+0x68]
100165eb:	call   0x10015ef0
100165f0:	mov    cl,BYTE PTR [ebx]
100165f2:	add    esp,0x24
100165f5:	cmp    cl,0x1
100165f8:	je     0x10016604
100165fa:	cmp    cl,0x6
100165fd:	je     0x10016604
100165ff:	cmp    cl,0x7
10016602:	jne    0x100165aa
10016604:	movzx  ecx,BYTE PTR [ebx+0x1]
10016608:	mov    dx,WORD PTR [ecx*2+0x100be098]
10016610:	or     WORD PTR [esi+0x3c],dx
10016614:	pop    edi
10016615:	pop    esi
10016616:	pop    ebp
10016617:	pop    ebx
10016618:	add    esp,0xc
1001661b:	ret    
1001661c:	mov    esi,DWORD PTR [esp+0x2c]
10016620:	lea    ecx,[esi-0xf]
10016623:	cmp    ecx,0x4c
10016626:	ja     0x10016796
1001662c:	movzx  ecx,BYTE PTR [ecx+0x100173bc]
10016633:	mov    esi,0x2000
10016638:	jmp    DWORD PTR [ecx*4+0x1001737c]
1001663f:	or     DWORD PTR [ebp+0x4],esi
10016642:	mov    ecx,DWORD PTR [esp+0x3c]
10016646:	cmp    ecx,0x1
10016649:	mov    eax,DWORD PTR [ebp+0x4]
1001664c:	jne    0x10016660
1001664e:	mov    eax,0x3
10016653:	mov    ax,WORD PTR [eax*2+0x100be1b0]
1001665b:	jmp    0x100165ba
10016660:	cmp    ecx,0x2
10016663:	jne    0x10016689
10016665:	test   DWORD PTR [esp+0x38],0x1000000
1001666d:	jne    0x10016677
1001666f:	or     eax,0x2000000
10016674:	mov    DWORD PTR [ebp+0x4],eax
10016677:	mov    eax,0x4
1001667c:	mov    ax,WORD PTR [eax*2+0x100be1b0]
10016684:	jmp    0x100165ba
10016689:	cmp    DWORD PTR [esp+0x2c],0x10
1001668e:	je     0x10016693
10016690:	or     DWORD PTR [ebp+0x4],esi
10016693:	mov    eax,0x2
10016698:	mov    ax,WORD PTR [eax*2+0x100be1b0]
100166a0:	jmp    0x100165ba
100166a5:	cmp    DWORD PTR [esp+0x3c],0x2
100166aa:	jne    0x1001664e
100166ac:	mov    edx,DWORD PTR [esp+0x38]
100166b0:	and    edx,0x3000000
100166b6:	cmp    edx,0x3000000
100166bc:	mov    eax,0x4
100166c1:	jne    0x10016785
100166c7:	or     DWORD PTR [ebp+0x4],0x2000000
100166ce:	mov    ax,WORD PTR [eax*2+0x100be1b0]
100166d6:	jmp    0x100165ba
100166db:	test   DWORD PTR [ebp+0x0],esi
100166de:	je     0x1001664e
100166e4:	or     DWORD PTR [ebp+0x4],esi
100166e7:	mov    eax,0x2
100166ec:	mov    ax,WORD PTR [eax*2+0x100be1b0]
100166f4:	jmp    0x100165ba
100166f9:	and    al,0x8
100166fb:	neg    al
100166fd:	sbb    eax,eax
100166ff:	neg    eax
10016701:	add    eax,0x3
10016704:	mov    ax,WORD PTR [eax*2+0x100be1b0]
1001670c:	jmp    0x100165ba
10016711:	and    al,0x10
10016713:	neg    al
10016715:	sbb    eax,eax
10016717:	and    eax,0x3
1001671a:	add    eax,0x4
1001671d:	mov    ax,WORD PTR [eax*2+0x100be1b0]
10016725:	jmp    0x100165ba
1001672a:	movzx  eax,al
1001672d:	and    eax,0x10
10016730:	or     eax,0x60
10016733:	shr    eax,0x4
10016736:	mov    ax,WORD PTR [eax*2+0x100be1b0]
1001673e:	jmp    0x100165ba
10016743:	movzx  eax,al
10016746:	and    eax,0x10
10016749:	or     eax,0x20
1001674c:	shr    eax,0x3
1001674f:	mov    ax,WORD PTR [eax*2+0x100be1b0]
10016757:	jmp    0x100165ba
1001675c:	mov    eax,0x1
10016761:	mov    ax,WORD PTR [eax*2+0x100be1b0]
10016769:	jmp    0x100165ba
1001676e:	mov    eax,0x6
10016773:	mov    ax,WORD PTR [eax*2+0x100be1b0]
1001677b:	jmp    0x100165ba
10016780:	mov    eax,0x7
10016785:	mov    ax,WORD PTR [eax*2+0x100be1b0]
1001678d:	jmp    0x100165ba
10016792:	mov    esi,DWORD PTR [esp+0x2c]
10016796:	lea    ecx,[esi-0x1]
10016799:	cmp    ecx,0x57
1001679c:	ja     0x100165a8
100167a2:	movzx  ecx,BYTE PTR [ecx+0x100174dc]
100167a9:	jmp    DWORD PTR [ecx*4+0x1001740c]
100167b0:	push   0x2
100167b2:	mov    edx,0x8
100167b7:	mov    eax,ebx
100167b9:	call   0x10015c90
100167be:	mov    ecx,DWORD PTR [esp+0x24]
100167c2:	add    ecx,0x30
100167c5:	mov    esi,0x1
100167ca:	mov    eax,DWORD PTR [esp+0x20]
100167ce:	call   0x10015cc0
100167d3:	test   eax,eax
100167d5:	jne    0x100169bd
100167db:	pop    edi
100167dc:	pop    esi
100167dd:	pop    ebp
100167de:	pop    ebx
100167df:	add    esp,0xc
100167e2:	ret    
100167e3:	mov    eax,DWORD PTR [esp+0x3c]
100167e7:	test   eax,eax
100167e9:	jne    0x1001680c
100167eb:	or     DWORD PTR [ebp+0x4],0x2000
100167f2:	push   0x2
100167f4:	mov    edx,0x10
100167f9:	mov    eax,ebx
100167fb:	call   0x10015c90
10016800:	mov    ecx,DWORD PTR [esp+0x24]
10016804:	add    ecx,0x30
10016807:	lea    esi,[edx-0xe]
1001680a:	jmp    0x100167ca
1001680c:	cmp    eax,0x2
1001680f:	jne    0x10016842
10016811:	mov    eax,DWORD PTR [esp+0x38]
10016815:	and    eax,0x3000000
1001681a:	cmp    eax,0x3000000
1001681f:	jne    0x10016842
10016821:	or     DWORD PTR [ebp+0x4],0x2000000
10016828:	push   0x2
1001682a:	mov    edx,0x40
1001682f:	mov    eax,ebx
10016831:	call   0x10015c90
10016836:	mov    ecx,DWORD PTR [esp+0x24]
1001683a:	add    ecx,0x30
1001683d:	lea    esi,[edx-0x38]
10016840:	jmp    0x100167ca
10016842:	or     DWORD PTR [ebp+0x4],0x2000
10016849:	mov    eax,DWORD PTR [esp+0x20]
1001684d:	mov    ecx,DWORD PTR [esp+0x24]
10016851:	mov    BYTE PTR [ebx],0x2
10016854:	cmp    DWORD PTR [eax+0x18],0x2
10016858:	jne    0x10016879
1001685a:	mov    edx,0x20
1001685f:	mov    WORD PTR [ebx+0x2],dx
10016863:	or     WORD PTR [ecx+0xa],dx
10016867:	lea    esi,[ecx+0x30]
1001686a:	lea    edi,[edx-0x1c]
1001686d:	mov    ecx,eax
1001686f:	call   0x10015d50
10016874:	jmp    0x100167d3
10016879:	mov    WORD PTR [ebx+0x2],0x20
1001687f:	add    ecx,0x30
10016882:	mov    esi,0x4
10016887:	jmp    0x100167ce
1001688c:	mov    ecx,DWORD PTR [esp+0x20]
10016890:	mov    esi,0x2000
10016895:	test   DWORD PTR [esp+0x38],esi
10016899:	mov    BYTE PTR [ebx],0x2
1001689c:	je     0x100168c5
1001689e:	test   DWORD PTR [ebp+0x0],esi
100168a1:	je     0x100168c5
100168a3:	or     DWORD PTR [ebp+0x4],esi
100168a6:	mov    eax,DWORD PTR [ecx+0x18]
100168a9:	test   eax,eax
100168ab:	je     0x100168bd
100168ad:	add    eax,0xffffffff
100168b0:	cmp    eax,0x1
100168b3:	ja     0x100168cb
100168b5:	mov    WORD PTR [ebx+0x2],0x10
100168bb:	jmp    0x100168cb
100168bd:	mov    WORD PTR [ebx+0x2],0x20
100168c3:	jmp    0x100168cb
100168c5:	mov    WORD PTR [ebx+0x2],0x8
100168cb:	mov    eax,DWORD PTR [esp+0x24]
100168cf:	or     WORD PTR [eax+0xa],0x20
100168d4:	lea    esi,[eax+0x30]
100168d7:	mov    edi,0x1
100168dc:	call   0x10015d50
100168e1:	jmp    0x100167d3
100168e6:	push   0x3
100168e8:	jmp    0x100167f4
100168ed:	push   0x3
100168ef:	jmp    0x100167b2
100168f4:	push   0x4
100168f6:	mov    edx,0x8
100168fb:	mov    eax,ebx
100168fd:	call   0x10015c90
10016902:	mov    ecx,DWORD PTR [esp+0x24]
10016906:	add    ecx,0x34
10016909:	jmp    0x100167c5
1001690e:	push   0x1
10016910:	mov    edx,0x8
10016915:	mov    eax,ebx
10016917:	call   0x10015c90
1001691c:	cmp    DWORD PTR [ebp+0x18],0x0
10016920:	je     0x10016941
10016922:	mov    eax,DWORD PTR [esp+0x14]
10016926:	mov    edx,DWORD PTR [esp+0x10]
1001692a:	or     DWORD PTR [ebp+0x4],0x2000000
10016931:	and    eax,0x4
10016934:	lea    eax,[edx+eax*2]
10016937:	call   0x10015c80
1001693c:	mov    BYTE PTR [ebx+0x1],al
1001693f:	jmp    0x100169bd
10016941:	mov    al,BYTE PTR [esp+0x10]
10016945:	add    al,0x30
10016947:	mov    BYTE PTR [ebx+0x1],al
1001694a:	jmp    0x100169bd
1001694c:	mov    ecx,DWORD PTR [esp+0x3c]
10016950:	sub    ecx,0x0
10016953:	je     0x1001697e
10016955:	sub    ecx,0x1
10016958:	je     0x10016971
1001695a:	sub    ecx,0x1
1001695d:	jne    0x100169bd
1001695f:	or     DWORD PTR [ebp+0x4],0x2000000
10016966:	and    eax,0x4
10016969:	lea    eax,[edx+eax*2]
1001696c:	push   eax
1001696d:	push   0x40
1001696f:	jmp    0x100169b4
10016971:	test   al,0x4
10016973:	jne    0x100169a4
10016975:	or     DWORD PTR [ebp+0x4],0x2000
1001697c:	jmp    0x100169ae
1001697e:	or     DWORD PTR [ebp+0x4],0x2000
10016985:	test   al,0x4
10016987:	mov    ecx,DWORD PTR [ebp+0x4]
1001698a:	je     0x10016998
1001698c:	or     ecx,0x2000000
10016992:	mov    DWORD PTR [ebp+0x4],ecx
10016995:	add    edx,0x8
10016998:	add    edx,0x20
1001699b:	push   edx
1001699c:	push   0x10
1001699e:	jmp    0x100169b4
100169a0:	test   al,0x4
100169a2:	je     0x100169ae
100169a4:	or     DWORD PTR [ebp+0x4],0x2000000
100169ab:	add    edx,0x8
100169ae:	add    edx,0x10
100169b1:	push   edx
100169b2:	push   0x20
100169b4:	mov    eax,ebx
100169b6:	push   0x1
100169b8:	call   0x10015ca0
100169bd:	mov    al,BYTE PTR [ebx]
100169bf:	cmp    al,0x1
100169c1:	je     0x100169cb
100169c3:	cmp    al,0x6
100169c5:	je     0x100169cb
100169c7:	cmp    al,0x7
100169c9:	jne    0x100169df
100169cb:	movzx  ecx,BYTE PTR [ebx+0x1]
100169cf:	mov    dx,WORD PTR [ecx*2+0x100be098]
100169d7:	mov    eax,DWORD PTR [esp+0x24]
100169db:	or     WORD PTR [eax+0x3c],dx
100169df:	pop    edi
100169e0:	pop    esi
100169e1:	pop    ebp
100169e2:	mov    eax,0x1
100169e7:	pop    ebx
100169e8:	add    esp,0xc
100169eb:	ret    
100169ec:	test   al,0x4
100169ee:	mov    edi,0x2000000
100169f3:	je     0x100169fb
100169f5:	or     DWORD PTR [ebp+0x4],edi
100169f8:	add    edx,0x8
100169fb:	mov    ecx,DWORD PTR [esp+0x20]
100169ff:	cmp    DWORD PTR [ecx+0x18],0x2
10016a03:	jne    0x10016a1c
10016a05:	mov    esi,DWORD PTR [esp+0x38]
10016a09:	and    esi,0x3000000
10016a0f:	cmp    esi,0x1000000
10016a15:	jne    0x10016a1c
10016a17:	push   edx
10016a18:	push   0x40
10016a1a:	jmp    0x100169b4
10016a1c:	test   al,0x8
10016a1e:	mov    eax,ebx
10016a20:	je     0x10016a2a
10016a22:	or     DWORD PTR [ebp+0x4],edi
10016a25:	push   edx
10016a26:	push   0x40
10016a28:	jmp    0x100169b6
10016a2a:	add    edx,0x10
10016a2d:	push   edx
10016a2e:	push   0x20
10016a30:	jmp    0x100169b6
10016a32:	test   al,0x1
10016a34:	mov    eax,DWORD PTR [esp+0x34]
10016a38:	je     0x10016a44
10016a3a:	or     DWORD PTR [ebp+0x4],0x2000000
10016a41:	add    eax,0x8
10016a44:	mov    edx,DWORD PTR [esp+0x20]
10016a48:	cmp    DWORD PTR [edx+0x18],0x2
10016a4c:	jne    0x10016a56
10016a4e:	push   eax
10016a4f:	push   0x40
10016a51:	jmp    0x100169b4
10016a56:	add    eax,0x10
10016a59:	push   eax
10016a5a:	jmp    0x100169b2
10016a5f:	add    edx,0x53
10016a62:	push   edx
10016a63:	push   0x40
10016a65:	jmp    0x100169b4
10016a6a:	mov    eax,DWORD PTR [esp+0x34]
10016a6e:	add    eax,0x53
10016a71:	push   eax
10016a72:	push   0x40
10016a74:	jmp    0x100169b4
10016a79:	xor    eax,eax
10016a7b:	mov    DWORD PTR [esp+0x10],eax
10016a7f:	mov    DWORD PTR [esp+0x14],eax
10016a83:	mov    edx,eax
10016a85:	test   al,0x4
10016a87:	je     0x10016a93
10016a89:	or     DWORD PTR [ebp+0x4],0x2000000
10016a90:	add    edx,0x8
10016a93:	add    edx,0x5b
10016a96:	push   edx
10016a97:	push   0x80
10016a9c:	jmp    0x100169b4
10016aa1:	test   al,0x1
10016aa3:	je     0x10016ab1
10016aa5:	or     DWORD PTR [ebp+0x4],0x2000000
10016aac:	add    DWORD PTR [esp+0x34],0x8
10016ab1:	mov    ecx,DWORD PTR [esp+0x34]
10016ab5:	add    ecx,0x5b
10016ab8:	push   ecx
10016ab9:	push   0x80
10016abe:	jmp    0x100169b4
10016ac3:	test   al,0x4
10016ac5:	mov    eax,DWORD PTR [esp+0x20]
10016ac9:	je     0x10016ad7
10016acb:	or     DWORD PTR [ebp+0x4],0x2000000
10016ad2:	add    edx,0x8
10016ad5:	jmp    0x10016aea
10016ad7:	cmp    DWORD PTR [eax+0x18],0x1
10016adb:	jne    0x10016aea
10016add:	test   BYTE PTR [ebp+0x0],0x10
10016ae1:	je     0x10016aea
10016ae3:	add    edx,0x8
10016ae6:	or     DWORD PTR [ebp+0x4],0x10
10016aea:	cmp    edx,0x9
10016aed:	jae    0x100165a8
10016af3:	cmp    edx,0x1
10016af6:	je     0x100165a8
10016afc:	cmp    edx,0x5
10016aff:	jb     0x10016b0a
10016b01:	cmp    edx,0x7
10016b04:	jbe    0x100165a8
10016b0a:	mov    BYTE PTR [ebx],0x1
10016b0d:	mov    eax,DWORD PTR [eax+0x18]
10016b10:	sub    eax,0x2
10016b13:	neg    eax
10016b15:	sbb    eax,eax
10016b17:	and    eax,0xffffffe0
10016b1a:	add    eax,0x40
10016b1d:	add    dl,0x7b
10016b20:	mov    WORD PTR [ebx+0x2],ax
10016b24:	mov    BYTE PTR [ebx+0x1],dl
10016b27:	jmp    0x100169cb
10016b2c:	cmp    edx,0x4
10016b2f:	je     0x100165a8
10016b35:	cmp    edx,0x5
10016b38:	je     0x100165a8
10016b3e:	test   al,0x4
10016b40:	jne    0x100165a8
10016b46:	mov    ecx,DWORD PTR [esp+0x20]
10016b4a:	mov    BYTE PTR [ebx],0x1
10016b4d:	mov    eax,DWORD PTR [ecx+0x18]
10016b50:	sub    eax,0x2
10016b53:	neg    eax
10016b55:	sbb    eax,eax
10016b57:	and    eax,0xffffffe0
10016b5a:	add    eax,0x40
10016b5d:	sub    dl,0x7c
10016b60:	mov    WORD PTR [ebx+0x2],ax
10016b64:	mov    BYTE PTR [ebx+0x1],dl
10016b67:	jmp    0x100169cb
10016b6c:	cmp    DWORD PTR [esp+0x44],0x0
10016b71:	je     0x10016b7c
10016b73:	cmp    edx,0x1
10016b76:	je     0x100165a8
10016b7c:	cmp    edx,0x5
10016b7f:	ja     0x100165a8
10016b85:	add    edx,0x44
10016b88:	push   edx
10016b89:	push   0x10
10016b8b:	jmp    0x100169b4
10016b90:	mov    eax,DWORD PTR [esp+0x38]
10016b94:	mov    BYTE PTR [ebx],0x1
10016b97:	mov    WORD PTR [ebx+0x2],0x10
10016b9d:	or     DWORD PTR [ebp+0x4],0x2000
10016ba4:	and    eax,0x1f80
10016ba9:	cmp    eax,0x400
10016bae:	ja     0x10016bef
10016bb0:	je     0x10016be6
10016bb2:	cmp    eax,0x80
10016bb7:	je     0x10016bdd
10016bb9:	cmp    eax,0x100
10016bbe:	je     0x10016bd4
10016bc0:	cmp    eax,0x200
10016bc5:	jne    0x100169bd
10016bcb:	mov    BYTE PTR [ebx+0x1],0x47
10016bcf:	jmp    0x100169bd
10016bd4:	mov    BYTE PTR [ebx+0x1],0x46
10016bd8:	jmp    0x100169bd
10016bdd:	mov    BYTE PTR [ebx+0x1],0x45
10016be1:	jmp    0x100169bd
10016be6:	mov    BYTE PTR [ebx+0x1],0x44
10016bea:	jmp    0x100169bd
10016bef:	cmp    eax,0x800
10016bf4:	je     0x10016c0a
10016bf6:	cmp    eax,0x1000
10016bfb:	jne    0x100169bd
10016c01:	mov    BYTE PTR [ebx+0x1],0x49
10016c05:	jmp    0x100169bd
10016c0a:	mov    BYTE PTR [ebx+0x1],0x48
10016c0e:	jmp    0x100169bd
10016c13:	push   0x30
10016c15:	push   0x8
10016c17:	jmp    0x100169b4
10016c1c:	mov    eax,DWORD PTR [esp+0x3c]
10016c20:	test   eax,eax
10016c22:	jne    0x10016c34
10016c24:	or     DWORD PTR [ebp+0x4],0x2000
10016c2b:	push   0x20
10016c2d:	push   0x10
10016c2f:	jmp    0x100169b4
10016c34:	cmp    eax,0x1
10016c37:	jne    0x10016c47
10016c39:	or     DWORD PTR [ebp+0x4],0x2000
10016c40:	push   0x10
10016c42:	jmp    0x100169b2
10016c47:	mov    eax,DWORD PTR [esp+0x38]
10016c4b:	not    eax
10016c4d:	test   eax,0x1000000
10016c52:	je     0x10016c5b
10016c54:	or     DWORD PTR [ebp+0x4],0x2000000
10016c5b:	push   0x0
10016c5d:	push   0x40
10016c5f:	jmp    0x100169b4
10016c64:	or     DWORD PTR [ebp+0x4],0x2000
10016c6b:	cmp    DWORD PTR [esp+0x3c],0x0
10016c70:	mov    esi,DWORD PTR [esp+0x20]
10016c74:	jne    0x10016caf
10016c76:	add    DWORD PTR [esi+0x14],0xfffffffc
10016c7a:	js     0x100165a8
10016c80:	push   0x9
10016c82:	mov    edx,0x10
10016c87:	mov    eax,ebx
10016c89:	call   0x10015c90
10016c8e:	mov    ecx,DWORD PTR [esi+0x10]
10016c91:	movzx  edx,WORD PTR [ecx]
10016c94:	mov    eax,DWORD PTR [esp+0x24]
10016c98:	mov    DWORD PTR [eax+0x34],edx
10016c9b:	mov    ecx,DWORD PTR [esi+0x10]
10016c9e:	mov    dx,WORD PTR [ecx+0x2]
10016ca2:	mov    WORD PTR [eax+0x30],dx
10016ca6:	add    DWORD PTR [esi+0x10],0x4
10016caa:	jmp    0x100169bd
10016caf:	add    DWORD PTR [esi+0x14],0xfffffffa
10016cb3:	js     0x100165a8
10016cb9:	push   0x9
10016cbb:	mov    edx,0x20
10016cc0:	mov    eax,ebx
10016cc2:	call   0x10015c90
10016cc7:	mov    eax,DWORD PTR [esi+0x10]
10016cca:	mov    ecx,DWORD PTR [eax]
10016ccc:	mov    eax,DWORD PTR [esp+0x24]
10016cd0:	mov    DWORD PTR [eax+0x34],ecx
10016cd3:	mov    edx,DWORD PTR [esi+0x10]
10016cd6:	mov    cx,WORD PTR [edx+0x4]
10016cda:	mov    WORD PTR [eax+0x30],cx
10016cde:	add    DWORD PTR [esi+0x10],0x6
10016ce2:	jmp    0x100169bd
10016ce7:	cmp    esi,0x28
10016cea:	push   0x8
10016cec:	mov    eax,ebx
10016cee:	jne    0x10016d17
10016cf0:	lea    edx,[esi-0x20]
10016cf3:	call   0x10015c90
10016cf8:	lea    edi,[esi-0x27]
10016cfb:	mov    esi,DWORD PTR [esp+0x24]
10016cff:	mov    ecx,DWORD PTR [esp+0x20]
10016d03:	add    esi,0x30
10016d06:	call   0x10015d50
10016d0b:	test   eax,eax
10016d0d:	jne    0x10016d59
10016d0f:	pop    edi
10016d10:	pop    esi
10016d11:	pop    ebp
10016d12:	pop    ebx
10016d13:	add    esp,0xc
10016d16:	ret    
10016d17:	or     DWORD PTR [ebp+0x4],0x2000
10016d1e:	cmp    DWORD PTR [esp+0x40],0x0
10016d23:	jne    0x10016d34
10016d25:	mov    edx,0x10
10016d2a:	call   0x10015c90
10016d2f:	lea    edi,[edx-0xe]
10016d32:	jmp    0x10016cfb
10016d34:	mov    edx,0x20
10016d39:	call   0x10015c90
10016d3e:	mov    esi,DWORD PTR [esp+0x24]
10016d42:	mov    ecx,DWORD PTR [esp+0x20]
10016d46:	add    esi,0x30
10016d49:	lea    edi,[edx-0x1c]
10016d4c:	call   0x10015d50
10016d51:	test   eax,eax
10016d53:	je     0x100165a8
10016d59:	mov    edx,DWORD PTR [esp+0x28]
10016d5d:	movzx  eax,WORD PTR [edx+0x4]
10016d61:	cmp    ax,0x18
10016d65:	jb     0x100169bd
10016d6b:	cmp    ax,0x27
10016d6f:	ja     0x100169bd
10016d75:	mov    eax,DWORD PTR [ebp+0x0]
10016d78:	test   al,al
10016d7a:	jns    0x10016d91
10016d7c:	mov    eax,DWORD PTR [esp+0x24]
10016d80:	or     DWORD PTR [ebp+0x4],0x80
10016d87:	or     WORD PTR [eax+0xa],0x10
10016d8c:	jmp    0x100169bd
10016d91:	test   eax,0x200
10016d96:	je     0x100169bd
10016d9c:	mov    eax,DWORD PTR [esp+0x24]
10016da0:	or     DWORD PTR [ebp+0x4],0x200
10016da7:	or     WORD PTR [eax+0xa],0x8
10016dac:	jmp    0x100169bd
10016db1:	mov    WORD PTR [ebx+0x2],0x8
10016db7:	cmp    WORD PTR [ebx+0x2],0x0
10016dbc:	mov    BYTE PTR [ebx],0x5
10016dbf:	jne    0x10016dea
10016dc1:	mov    eax,DWORD PTR [esp+0x3c]
10016dc5:	sub    eax,0x0
10016dc8:	je     0x10016de4
10016dca:	sub    eax,0x1
10016dcd:	je     0x10016ddc
10016dcf:	sub    eax,0x1
10016dd2:	jne    0x10016dea
10016dd4:	mov    WORD PTR [ebx+0x2],0x40
10016dda:	jmp    0x10016dea
10016ddc:	mov    WORD PTR [ebx+0x2],0x20
10016de2:	jmp    0x10016dea
10016de4:	mov    WORD PTR [ebx+0x2],0x10
10016dea:	mov    eax,DWORD PTR [esp+0x24]
10016dee:	mov    edi,DWORD PTR [esp+0x20]
10016df2:	mov    ecx,DWORD PTR [edi+0x18]
10016df5:	push   eax
10016df6:	push   ecx
10016df7:	push   ebp
10016df8:	push   0x200
10016dfd:	call   0x10017a70
10016e02:	mov    eax,DWORD PTR [esp+0x50]
10016e06:	add    esp,0x10
10016e09:	test   eax,eax
10016e0b:	jne    0x10016e2b
10016e0d:	mov    eax,DWORD PTR [esp+0x24]
10016e11:	or     DWORD PTR [ebp+0x4],0x4000
10016e18:	mov    BYTE PTR [eax+0xf],0x10
10016e1c:	lea    ecx,[eax+0x28]
10016e1f:	mov    esi,0x2
10016e24:	mov    eax,edi
10016e26:	jmp    0x100167ce
10016e2b:	cmp    eax,0x1
10016e2e:	mov    eax,DWORD PTR [esp+0x24]
10016e32:	lea    ecx,[eax+0x28]
10016e35:	jne    0x10016e4e
10016e37:	or     DWORD PTR [ebp+0x4],0x4000
10016e3e:	mov    BYTE PTR [eax+0xf],0x20
10016e42:	mov    esi,0x4
10016e47:	mov    eax,edi
10016e49:	jmp    0x100167ce
10016e4e:	mov    BYTE PTR [eax+0xf],0x40
10016e52:	mov    esi,0x8
10016e57:	mov    eax,edi
10016e59:	jmp    0x100167ce
10016e5e:	push   0x2
10016e60:	mov    edx,0x8
10016e65:	mov    eax,ebx
10016e67:	call   0x10015c90
10016e6c:	mov    edx,DWORD PTR [esp+0x24]
10016e70:	mov    BYTE PTR [edx+0x30],0x1
10016e74:	jmp    0x100169bd
10016e79:	push   0x31
10016e7b:	push   0x8
10016e7d:	jmp    0x100169b4
10016e82:	mov    eax,DWORD PTR [esp+0x20]
10016e86:	mov    ecx,DWORD PTR [eax+0x10]
10016e89:	movzx  edx,BYTE PTR [ecx-0x1]
10016e8d:	and    edx,0x7
10016e90:	add    edx,0x4b
10016e93:	jmp    0x100169b1
10016e98:	push   0x4b
10016e9a:	push   0x20
10016e9c:	push   0x1
10016e9e:	mov    eax,ebx
10016ea0:	call   0x10015ca0
10016ea5:	mov    eax,DWORD PTR [esp+0x20]
10016ea9:	mov    ecx,DWORD PTR [eax+0x10]
10016eac:	movzx  edx,BYTE PTR [ecx-0x1]
10016eb0:	and    edx,0x7
10016eb3:	add    edx,0x4b
10016eb6:	push   edx
10016eb7:	push   0x20
10016eb9:	lea    eax,[ebx+0x4]
10016ebc:	jmp    0x100169b6
10016ec1:	mov    eax,DWORD PTR [esp+0x20]
10016ec5:	mov    ecx,DWORD PTR [eax+0x10]
10016ec8:	movzx  edx,BYTE PTR [ecx-0x1]
10016ecc:	and    edx,0x7
10016ecf:	add    edx,0x4b
10016ed2:	push   edx
10016ed3:	push   0x20
10016ed5:	push   0x1
10016ed7:	mov    eax,ebx
10016ed9:	call   0x10015ca0
10016ede:	push   0x4b
10016ee0:	push   0x20
10016ee2:	lea    eax,[ebx+0x4]
10016ee5:	jmp    0x100169b6
10016eea:	push   0x1
10016eec:	mov    edx,0x8
10016ef1:	mov    eax,ebx
10016ef3:	call   0x10015c90
10016ef8:	mov    eax,DWORD PTR [esp+0x20]
10016efc:	mov    ecx,DWORD PTR [eax+0x10]
10016eff:	movzx  eax,BYTE PTR [ecx-0x1]
10016f03:	and    eax,0x7
10016f06:	test   BYTE PTR [esp+0x14],0x1
10016f0b:	je     0x10016f23
10016f0d:	or     DWORD PTR [ebp+0x4],0x2000000
10016f14:	add    eax,edx
10016f16:	call   0x10015c80
10016f1b:	mov    BYTE PTR [ebx+0x1],al
10016f1e:	jmp    0x100169bd
10016f23:	cmp    DWORD PTR [ebp+0x18],0x1
10016f27:	jne    0x10016945
10016f2d:	or     DWORD PTR [ebp+0x4],0x2000000
10016f34:	call   0x10015c80
10016f39:	mov    BYTE PTR [ebx+0x1],al
10016f3c:	jmp    0x100169bd
10016f41:	mov    edx,DWORD PTR [esp+0x20]
10016f45:	mov    ecx,DWORD PTR [edx+0x10]
10016f48:	movzx  ecx,BYTE PTR [ecx-0x1]
10016f4c:	mov    edx,DWORD PTR [esp+0x3c]
10016f50:	and    ecx,0x7
10016f53:	sub    edx,0x0
10016f56:	je     0x10016fc5
10016f58:	sub    edx,0x1
10016f5b:	je     0x10016f9e
10016f5d:	sub    edx,0x1
10016f60:	jne    0x100169bd
10016f66:	mov    edx,DWORD PTR [esp+0x38]
10016f6a:	test   edx,0x1000000
10016f70:	mov    edi,0x2000000
10016f75:	je     0x10016f8d
10016f77:	test   edi,edx
10016f79:	jne    0x10016f8d
10016f7b:	test   al,0x1
10016f7d:	je     0x10016f96
10016f7f:	or     DWORD PTR [ebp+0x4],edi
10016f82:	add    ecx,0x8
10016f85:	push   ecx
10016f86:	push   0x40
10016f88:	jmp    0x100169b4
10016f8d:	or     DWORD PTR [ebp+0x4],edi
10016f90:	and    eax,0x1
10016f93:	lea    ecx,[ecx+eax*8]
10016f96:	push   ecx
10016f97:	push   0x40
10016f99:	jmp    0x100169b4
10016f9e:	test   al,0x1
10016fa0:	je     0x10016fb5
10016fa2:	or     DWORD PTR [ebp+0x4],0x2000000
10016fa9:	add    ecx,0x8
10016fac:	add    ecx,0x10
10016faf:	push   ecx
10016fb0:	jmp    0x100169b2
10016fb5:	or     DWORD PTR [ebp+0x4],0x2000
10016fbc:	add    ecx,0x10
10016fbf:	push   ecx
10016fc0:	jmp    0x100169b2
10016fc5:	or     DWORD PTR [ebp+0x4],0x2000
10016fcc:	test   al,0x1
10016fce:	mov    edx,DWORD PTR [ebp+0x4]
10016fd1:	je     0x10016fdf
10016fd3:	or     edx,0x2000000
10016fd9:	mov    DWORD PTR [ebp+0x4],edx
10016fdc:	add    ecx,0x8
10016fdf:	add    ecx,0x20
10016fe2:	push   ecx
10016fe3:	push   0x10
10016fe5:	jmp    0x100169b4
10016fea:	or     DWORD PTR [ebp+0x4],0x4000
10016ff1:	mov    edx,DWORD PTR [esp+0x38]
10016ff5:	test   dl,0x4
10016ff8:	mov    BYTE PTR [ebx],0x6
10016ffb:	je     0x1001703c
10016ffd:	or     DWORD PTR [ebp+0x4],0x2000
10017004:	mov    ecx,DWORD PTR [esp+0x3c]
10017008:	test   ecx,ecx
1001700a:	mov    eax,DWORD PTR [ebp+0x4]
1001700d:	jne    0x10017017
1001700f:	mov    WORD PTR [ebx+0x2],0x10
10017015:	jmp    0x10017042
10017017:	cmp    ecx,0x2
1001701a:	jne    0x10017034
1001701c:	test   edx,0x1000000
10017022:	je     0x10017034
10017024:	or     eax,0x2000000
10017029:	mov    DWORD PTR [ebp+0x4],eax
1001702c:	mov    WORD PTR [ebx+0x2],0x40
10017032:	jmp    0x10017042
10017034:	mov    WORD PTR [ebx+0x2],0x20
1001703a:	jmp    0x10017042
1001703c:	mov    WORD PTR [ebx+0x2],0x8
10017042:	mov    eax,DWORD PTR [esp+0x24]
10017046:	mov    edx,DWORD PTR [esp+0x20]
1001704a:	push   eax
1001704b:	mov    BYTE PTR [eax+0xc],0x0
1001704f:	mov    eax,DWORD PTR [edx+0x18]
10017052:	push   eax
10017053:	push   ebp
10017054:	push   0x200
10017059:	call   0x10017a70
1001705e:	mov    eax,DWORD PTR [esp+0x50]
10017062:	add    esp,0x10
10017065:	test   eax,eax
10017067:	jne    0x10017072
10017069:	mov    BYTE PTR [ebx+0x1],0x26
1001706d:	jmp    0x100169bd
10017072:	sub    eax,0x1
10017075:	neg    eax
10017077:	sbb    al,al
10017079:	and    al,0xf0
1001707b:	add    al,0x16
1001707d:	mov    BYTE PTR [ebx+0x1],al
10017080:	jmp    0x100169bd
10017085:	or     DWORD PTR [ebp+0x4],0x4000
1001708c:	mov    edx,DWORD PTR [esp+0x38]
10017090:	test   dl,0x4
10017093:	mov    BYTE PTR [ebx],0x6
10017096:	je     0x100170d7
10017098:	or     DWORD PTR [ebp+0x4],0x2000
1001709f:	mov    ecx,DWORD PTR [esp+0x3c]
100170a3:	test   ecx,ecx
100170a5:	mov    eax,DWORD PTR [ebp+0x4]
100170a8:	jne    0x100170b2
100170aa:	mov    WORD PTR [ebx+0x2],0x10
100170b0:	jmp    0x100170dd
100170b2:	cmp    ecx,0x2
100170b5:	jne    0x100170cf
100170b7:	test   edx,0x1000000
100170bd:	je     0x100170cf
100170bf:	or     eax,0x2000000
100170c4:	mov    DWORD PTR [ebp+0x4],eax
100170c7:	mov    WORD PTR [ebx+0x2],0x40
100170cd:	jmp    0x100170dd
100170cf:	mov    WORD PTR [ebx+0x2],0x20
100170d5:	jmp    0x100170dd
100170d7:	mov    WORD PTR [ebx+0x2],0x8
100170dd:	cmp    DWORD PTR [esp+0x30],0x0
100170e2:	jne    0x100170f6
100170e4:	mov    ecx,DWORD PTR [esp+0x20]
100170e8:	cmp    DWORD PTR [ecx+0x18],0x2
100170ec:	je     0x100170f6
100170ee:	mov    edx,DWORD PTR [esp+0x24]
100170f2:	mov    BYTE PTR [edx+0xc],0xc4
100170f6:	mov    eax,DWORD PTR [esp+0x40]
100170fa:	test   eax,eax
100170fc:	jne    0x10017107
100170fe:	mov    BYTE PTR [ebx+0x1],0x27
10017102:	jmp    0x100169bd
10017107:	sub    eax,0x1
1001710a:	neg    eax
1001710c:	sbb    al,al
1001710e:	and    al,0xf0
10017110:	add    al,0x17
10017112:	mov    BYTE PTR [ebx+0x1],al
10017115:	jmp    0x100169bd
1001711a:	push   0x22
1001711c:	push   0x10
1001711e:	jmp    0x100169b4
10017123:	push   0x11
10017125:	jmp    0x100169b2
1001712a:	mov    eax,DWORD PTR [esp+0x20]
1001712e:	or     DWORD PTR [ebp+0x4],0x4000
10017135:	mov    edi,DWORD PTR [esp+0x24]
10017139:	mov    ecx,DWORD PTR [eax+0x18]
1001713c:	push   edi
1001713d:	push   ecx
1001713e:	push   ebp
1001713f:	push   0x200
10017144:	call   0x10017a70
10017149:	add    esp,0x10
1001714c:	push   0x30
1001714e:	push   0x8
10017150:	push   0x7
10017152:	mov    eax,ebx
10017154:	call   0x10015ca0
10017159:	mov    eax,DWORD PTR [esp+0x40]
1001715d:	test   eax,eax
1001715f:	jne    0x1001716a
10017161:	mov    BYTE PTR [edi+0xd],0x23
10017165:	jmp    0x100169bd
1001716a:	cmp    eax,0x1
1001716d:	jne    0x10017178
1001716f:	mov    BYTE PTR [edi+0xd],0x13
10017173:	jmp    0x100169bd
10017178:	or     DWORD PTR [ebp+0x4],0x2000000
1001717f:	mov    BYTE PTR [edi+0xd],0x3
10017183:	jmp    0x100169bd
10017188:	mov    eax,DWORD PTR [esp+0x40]
1001718c:	cmp    eax,0x2
1001718f:	jne    0x1001719e
10017191:	push   0x0
10017193:	push   0x40
10017195:	push   0x6
10017197:	mov    eax,ebx
10017199:	jmp    0x100169b8
1001719e:	or     DWORD PTR [ebp+0x4],0x4000
100171a5:	cmp    eax,0x1
100171a8:	mov    eax,ebx
100171aa:	jne    0x100171b7
100171ac:	push   0x10
100171ae:	push   0x20
100171b0:	push   0x6
100171b2:	jmp    0x100169b8
100171b7:	push   0x20
100171b9:	push   0x10
100171bb:	push   0x6
100171bd:	jmp    0x100169b8
100171c2:	mov    edx,DWORD PTR [esp+0x18]
100171c6:	add    edx,0x5b
100171c9:	push   edx
100171ca:	push   0x80
100171cf:	jmp    0x100169b4
100171d4:	mov    edi,DWORD PTR [esp+0x20]
100171d8:	add    DWORD PTR [edi+0x14],0xffffffff
100171dc:	js     0x100165a8
100171e2:	mov    esi,0x1
100171e7:	cmp    DWORD PTR [edi+0x18],esi
100171ea:	jne    0x100171fa
100171ec:	mov    eax,DWORD PTR [edi+0x10]
100171ef:	movzx  eax,BYTE PTR [eax]
100171f2:	shr    eax,0x4
100171f5:	and    eax,0x7
100171f8:	jmp    0x10017203
100171fa:	mov    ecx,DWORD PTR [edi+0x10]
100171fd:	movzx  eax,BYTE PTR [ecx]
10017200:	shr    eax,0x4
10017203:	add    eax,0x5b
10017206:	push   eax
10017207:	push   0x80
1001720c:	push   esi
1001720d:	mov    eax,ebx
1001720f:	call   0x10015ca0
10017214:	add    DWORD PTR [edi+0x10],esi
10017217:	jmp    0x100169bd
1001721c:	test   al,0x4
1001721e:	je     0x10017223
10017220:	add    edx,0x8
10017223:	test   al,0x10
10017225:	mov    eax,ebx
10017227:	je     0x10017237
10017229:	add    edx,0x6b
1001722c:	push   edx
1001722d:	push   0x100
10017232:	jmp    0x100169b6
10017237:	add    edx,0x5b
1001723a:	push   edx
1001723b:	push   0x80
10017240:	jmp    0x100169b6
10017245:	mov    edi,DWORD PTR [esp+0x20]
10017249:	add    DWORD PTR [edi+0x14],0xffffffff
1001724d:	js     0x100165a8
10017253:	mov    esi,0x1
10017258:	cmp    DWORD PTR [edi+0x18],esi
1001725b:	jne    0x1001726b
1001725d:	mov    edx,DWORD PTR [edi+0x10]
10017260:	movzx  eax,BYTE PTR [edx]
10017263:	shr    eax,0x4
10017266:	and    eax,0x7
10017269:	jmp    0x10017274
1001726b:	mov    eax,DWORD PTR [edi+0x10]
1001726e:	movzx  eax,BYTE PTR [eax]
10017271:	shr    eax,0x4
10017274:	test   BYTE PTR [ebp+0x28],0x10
10017278:	je     0x10017203
1001727a:	add    eax,0x6b
1001727d:	push   eax
1001727e:	push   0x100
10017283:	push   esi
10017284:	mov    eax,ebx
10017286:	call   0x10015ca0
1001728b:	add    DWORD PTR [edi+0x10],esi
1001728e:	jmp    0x100169bd
10017293:	test   al,0x4
10017295:	je     0x1001729a
10017297:	add    edx,0x8
1001729a:	add    edx,0x6b
1001729d:	push   edx
1001729e:	push   0x100
100172a3:	jmp    0x100169b4
100172a8:	mov    ecx,DWORD PTR [esp+0x18]
100172ac:	add    ecx,0x6b
100172af:	push   ecx
100172b0:	push   0x100
100172b5:	jmp    0x100169b4
100172ba:	test   al,0x10
100172bc:	je     0x100172d0
100172be:	mov    edx,DWORD PTR [esp+0x18]
100172c2:	add    edx,0x6b
100172c5:	push   edx
100172c6:	push   0x100
100172cb:	jmp    0x100169b4
100172d0:	mov    eax,DWORD PTR [esp+0x18]
100172d4:	add    eax,0x5b
100172d7:	push   eax
100172d8:	push   0x80
100172dd:	jmp    0x100169b4
100172e2:	test   al,0x4
100172e4:	je     0x100172e9
100172e6:	add    edx,0x8
100172e9:	test   al,0x8
100172eb:	je     0x100169ae
100172f1:	push   edx
100172f2:	push   0x40
100172f4:	jmp    0x100169b4
100172f9:	lea    ecx,[ecx+0x0]
100172fc:	pop    ecx
100172fd:	add    DWORD PTR gs:[eax],edx
10017300:	dec    ebx
10017301:	add    DWORD PTR gs:[eax],edx
10017304:	or     DWORD PTR [ebp+0x1],esp
10017307:	adc    BYTE PTR [edx+0x13100165],al
1001730d:	add    DWORD PTR gs:[eax],edx
10017310:	pusha  
10017311:	add    DWORD PTR gs:[eax],edx
10017314:	xchg   ebp,eax
10017315:	add    DWORD PTR gs:[eax],edx
10017318:	jb     0x1001737f
1001731a:	add    DWORD PTR [eax],edx
1001731c:	sti    
1001731d:	add    DWORD PTR fs:[eax],edx
10017320:	icebp  
10017321:	add    DWORD PTR fs:[eax],edx
10017324:	iret   
10017325:	add    DWORD PTR fs:[eax],edx
10017328:	mov    DWORD PTR [ebp+0x1],esp
1001732b:	adc    BYTE PTR [esi+eiz*2],bl
1001732e:	add    DWORD PTR [eax],edx
10017330:	add    BYTE PTR [ecx],al
10017332:	add    al,BYTE PTR [ebx]
10017334:	or     al,0xc
10017336:	or     al,0xc
10017338:	or     al,0xc
1001733a:	or     al,0xc
1001733c:	or     al,0xc
1001733e:	or     al,0xc
10017340:	or     al,0x4
10017342:	or     al,0x5
10017344:	or     al,0xc
10017346:	push   es
10017347:	pop    es
10017348:	add    DWORD PTR [eax],ecx
1001734a:	add    cl,BYTE PTR [ecx]
1001734c:	or     cl,BYTE PTR [esp+ecx*1]
1001734f:	or     al,0xc
10017351:	or     al,0xc
10017353:	or     al,0xc
10017355:	or     al,0xc
10017357:	or     al,0xc
10017359:	or     al,0xc
1001735b:	or     al,0xc
1001735d:	or     al,0xc
1001735f:	or     al,0xc
10017361:	or     al,0xc
10017363:	or     al,0xc
10017365:	or     al,0xc
10017367:	or     al,0xc
10017369:	or     al,0xc
1001736b:	or     al,0xc
1001736d:	or     al,0xc
1001736f:	or     al,0xc
10017371:	or     al,0xc
10017373:	or     al,0xc
10017375:	or     al,0xc
10017377:	or     al,0xb
10017379:	lea    ecx,[ecx+0x0]
1001737c:	pop    esp
1001737d:	add    DWORD PTR [bx+si],edx
10017380:	mov    DWORD PTR [esi+0x1],esp
10017383:	adc    BYTE PTR [edi],bh
10017385:	add    WORD PTR [eax],dx
10017388:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10017389:	add    WORD PTR [eax],dx
1001738c:	(bad)  [esi+0x1]
1001738f:	adc    BYTE PTR [ebx-0x6feffe9a],dl
10017395:	add    WORD PTR [eax],dx
10017398:	dec    esi
10017399:	add    WORD PTR [eax],dx
1001739c:	ja     0x10017404
1001739e:	add    DWORD PTR [eax],edx
100173a0:	outs   dx,BYTE PTR ds:[esi]
100173a1:	add    DWORD PTR [bx+si],edx
100173a4:	stc    
100173a5:	add    WORD PTR [eax],dx
100173a8:	and    BYTE PTR [edi+0x1],0x10
100173ac:	adc    DWORD PTR [edi+0x1],esp
100173af:	adc    BYTE PTR [edx],ch
100173b1:	add    DWORD PTR [bx+si],edx
100173b4:	inc    ebx
100173b5:	add    DWORD PTR [bx+si],edx
100173b8:	xchg   edx,eax
100173b9:	add    DWORD PTR [bx+si],edx
100173bc:	add    BYTE PTR [ecx],al
100173be:	add    al,BYTE PTR [ebx]
100173c0:	add    al,0xf
100173c2:	(bad)  
100173c3:	(bad)  
100173c4:	sldt   WORD PTR ds:0xf060500
100173cb:	(bad)  
100173cc:	(bad)  
100173cd:	(bad)  
100173ce:	(bad)  
100173cf:	(bad)  
100173d0:	(bad)  
100173d1:	(bad)  
100173d2:	(bad)  
100173d3:	(bad)  
100173d4:	(bad)  
100173d5:	(bad)  
100173d6:	(bad)  
100173d7:	(bad)  
100173d8:	(bad)  
100173d9:	(bad)  
100173da:	(bad)  
100173db:	(bad)  
100173dc:	(bad)  
100173dd:	(bad)  
100173de:	(bad)  
100173df:	(bad)  
100173e0:	(bad)  
100173e1:	(bad)  
100173e2:	(bad)  
100173e3:	(bad)  
100173e4:	(bad)  
100173e5:	(bad)  
100173e6:	(bad)  
100173e7:	(bad)  
100173e8:	(bad)  
100173e9:	(bad)  
100173ea:	(bad)  
100173eb:	(bad)  
100173ec:	(bad)  
100173ed:	(bad)  
100173ee:	sysret 
100173f0:	or     BYTE PTR [edi],cl
100173f2:	syscall 
100173f4:	pop    es
100173f5:	or     BYTE PTR [ecx],cl
100173f7:	sysret 
100173f9:	add    BYTE PTR ds:0xf0a0a0f,al
100173ff:	(bad)  
10017400:	(bad)  
10017401:	(bad)  
10017402:	ud2    
10017404:	pfcmpeq mm1,QWORD PTR [ecx*1+0x498d0e]
1001740d:	add    DWORD PTR [bx+si],edx
10017410:	repnz add DWORD PTR [bx+si],edx
10017414:	jecxz  0x1001747d
10017416:	add    DWORD PTR [eax],edx
10017418:	dec    ecx
10017419:	push   0x688c1001
1001741e:	add    DWORD PTR [eax],edx
10017420:	out    0x68,al
10017422:	add    DWORD PTR [eax],edx
10017424:	in     eax,dx
10017425:	push   0x68f41001
1001742a:	add    DWORD PTR [eax],edx
1001742c:	push   cs
1001742d:	imul   eax,DWORD PTR [ecx],0x1699810
10017433:	adc    BYTE PTR [ecx+ebp*2+0x1],cl
10017437:	adc    BYTE PTR [eax-0x13effe97],ah
1001743d:	imul   eax,DWORD PTR [ecx],0x16a3210
10017443:	adc    bl,al
10017445:	push   0x1
10017447:	adc    BYTE PTR [ebx+ebp*2],ch
1001744a:	add    DWORD PTR [eax],edx
1001744c:	ins    BYTE PTR es:[edi],dx
1001744d:	imul   eax,DWORD PTR [ecx],0x10
10017450:	nop
10017451:	imul   eax,DWORD PTR [ecx],0x10
10017454:	adc    ebp,DWORD PTR [ecx+eax*1+0x10]
10017458:	sub    ebp,DWORD PTR [ecx+eax*1+0x10]
1001745c:	sbb    al,0x6c
1001745e:	add    DWORD PTR [eax],edx
10017460:	fs ins BYTE PTR es:[edi],dx
10017462:	add    DWORD PTR [eax],edx
10017464:	out    0x6c,eax
10017466:	add    DWORD PTR [eax],edx
10017468:	mov    cl,0x6d
1001746a:	add    DWORD PTR [eax],edx
1001746c:	mov    bh,0x6d
1001746e:	add    DWORD PTR [eax],edx
10017470:	pop    esi
10017471:	outs   dx,BYTE PTR ds:[esi]
10017472:	add    DWORD PTR [eax],edx
10017474:	jns    0x100174e4
10017476:	add    DWORD PTR [eax],edx
10017478:	jmp    0x16f:0x4110016e
1001747f:	adc    dl,ch
10017481:	outs   dx,DWORD PTR ds:[esi]
10017482:	add    DWORD PTR [eax],edx
10017484:	test   DWORD PTR [eax+0x1],esi
10017487:	adc    BYTE PTR [edx],ch
10017489:	jno    0x1001748c
1001748b:	adc    BYTE PTR [eax+0x1a100171],cl
10017491:	jno    0x10017494
10017493:	adc    BYTE PTR [ebx],ah
10017495:	jno    0x10017498
10017497:	adc    BYTE PTR [edx-0x67effe92],al
1001749d:	outs   dx,BYTE PTR ds:[esi]
1001749e:	add    DWORD PTR [eax],edx
100174a0:	shr    DWORD PTR [esi+0x1],0x10
100174a4:	pop    edi
100174a5:	push   0x1
100174a7:	adc    BYTE PTR [edx+0x6a],ch
100174aa:	add    DWORD PTR [eax],edx
100174ac:	test   DWORD PTR [edx+0x1],ebp
100174af:	adc    BYTE PTR [ecx+0x7910016a],ah
100174b5:	push   0x1
100174b7:	adc    dl,ah
100174b9:	jb     0x100174bc
100174bb:	adc    dl,al
100174bd:	jno    0x100174c0
100174bf:	adc    ah,dl
100174c1:	jno    0x100174c4
100174c3:	adc    BYTE PTR [edx+esi*2],bl
100174c6:	add    DWORD PTR [eax],edx
100174c8:	inc    ebp
100174c9:	jb     0x100174cc
100174cb:	adc    BYTE PTR [ebx-0x57effe8e],dl
100174d1:	jb     0x100174d4
100174d3:	adc    BYTE PTR [edx-0x57effe8e],bh
100174d9:	add    DWORD PTR gs:[eax],edx
100174dc:	add    BYTE PTR [ecx],al
100174de:	add    al,BYTE PTR [ebx]
100174e0:	add    al,0x5
100174e2:	push   es
100174e3:	pop    es
100174e4:	or     BYTE PTR [ecx],cl
100174e6:	or     cl,BYTE PTR [ebx]
100174e8:	or     al,0xd
100174ea:	xor    esi,DWORD PTR [ebx]
100174ec:	xor    esi,DWORD PTR [ebx]
100174ee:	xor    esi,DWORD PTR [ebx]
100174f0:	xor    esi,DWORD PTR [ebx]
100174f2:	xor    esi,DWORD PTR [ebx]
100174f4:	xor    esi,DWORD PTR [ebx]
100174f6:	xor    esi,DWORD PTR [ebx]
100174f8:	push   cs
100174f9:	movups xmm2,XMMWORD PTR [ecx]
100174fc:	adc    dl,BYTE PTR [ebx]
100174fe:	adc    al,0x14
10017500:	xor    edx,DWORD PTR ds:0x33161633
10017506:	xor    esi,DWORD PTR [ebx]
10017508:	xor    esi,DWORD PTR [ebx]
1001750a:	xor    esi,DWORD PTR [ebx]
1001750c:	pop    ss
1001750d:	sbb    BYTE PTR [ecx],bl
1001750f:	sbb    bl,BYTE PTR [ebx]
10017511:	sbb    al,0x1d
10017513:	push   ds
10017514:	pop    ds
10017515:	and    BYTE PTR [ecx],ah
10017517:	and    ah,BYTE PTR [ebx]
10017519:	and    al,0x25
1001751b:	es daa 
1001751d:	xor    esi,DWORD PTR [ebx]
1001751f:	sub    BYTE PTR [ecx],ch
10017521:	xor    esi,DWORD PTR [ebx]
10017523:	xor    esi,DWORD PTR [ebx]
10017525:	sub    dh,BYTE PTR [ebx]
10017527:	xor    esi,DWORD PTR [ebx]
10017529:	sub    esi,DWORD PTR [ebx]
1001752b:	xor    ebp,DWORD PTR [ebp*1+0x33302f2e]
10017532:	xor    DWORD PTR [edx],esi
10017534:	int3   
10017535:	int3   
10017536:	int3   
10017537:	int3   
10017538:	int3   
10017539:	int3   
1001753a:	int3   
1001753b:	int3   
1001753c:	int3   
1001753d:	int3   
1001753e:	int3   
1001753f:	int3   
10017540:	mov    eax,DWORD PTR [esp+0x4]
10017544:	add    eax,0xffffffda
10017547:	cmp    eax,0xcd
1001754c:	ja     0x1001756d
1001754e:	movzx  eax,BYTE PTR [eax+0x1001757c]
10017555:	jmp    DWORD PTR [eax*4+0x10017570]
1001755c:	xor    eax,eax
1001755e:	cmp    DWORD PTR [esp+0x8],0x2
10017563:	sete   al
10017566:	ret    
10017567:	mov    eax,0x1
1001756c:	ret    
1001756d:	xor    eax,eax
1001756f:	ret    
10017570:	addr16 jne 0x10017574
10017573:	adc    BYTE PTR [ebp+esi*2+0x1],bl
10017577:	adc    BYTE PTR [ebp+0x75],ch
1001757a:	add    DWORD PTR [eax],edx
1001757c:	add    BYTE PTR [edx],al
1001757e:	add    al,BYTE PTR [edx]
10017580:	add    al,BYTE PTR [edx]
10017582:	add    al,BYTE PTR [edx]
10017584:	add    BYTE PTR [edx],al
10017586:	add    al,BYTE PTR [edx]
10017588:	add    al,BYTE PTR [edx]
1001758a:	add    al,BYTE PTR [edx]
1001758c:	add    BYTE PTR [edx],al
1001758e:	add    al,BYTE PTR [edx]
10017590:	add    al,BYTE PTR [edx]
10017592:	add    al,BYTE PTR [edx]
10017594:	add    BYTE PTR [edx],al
10017596:	add    DWORD PTR [ecx],eax
10017598:	add    DWORD PTR [ecx],eax
1001759a:	add    DWORD PTR [ecx],eax
1001759c:	add    DWORD PTR [ecx],eax
1001759e:	add    DWORD PTR [ecx],eax
100175a0:	add    DWORD PTR [ecx],eax
100175a2:	add    DWORD PTR [ecx],eax
100175a4:	add    DWORD PTR [ecx],eax
100175a6:	add    al,BYTE PTR [edx]
100175a8:	add    al,BYTE PTR [edx]
100175aa:	add    al,BYTE PTR [edx]
100175ac:	add    al,BYTE PTR [edx]
100175ae:	add    al,BYTE PTR [edx]
100175b0:	add    al,BYTE PTR [edx]
100175b2:	add    al,BYTE PTR [edx]
100175b4:	add    al,BYTE PTR [edx]
100175b6:	add    al,BYTE PTR [edx]
100175b8:	add    al,BYTE PTR [edx]
100175ba:	add    BYTE PTR [eax],al
100175bc:	add    BYTE PTR [eax],al
100175be:	add    al,BYTE PTR [edx]
100175c0:	add    al,BYTE PTR [edx]
100175c2:	add    al,BYTE PTR [edx]
100175c4:	add    al,BYTE PTR [edx]
100175c6:	add    al,BYTE PTR [edx]
100175c8:	add    al,BYTE PTR [edx]
100175ca:	add    al,BYTE PTR [edx]
100175cc:	add    al,BYTE PTR [edx]
100175ce:	add    al,BYTE PTR [edx]
100175d0:	add    al,BYTE PTR [edx]
100175d2:	add    al,BYTE PTR [edx]
100175d4:	add    al,BYTE PTR [edx]
100175d6:	add    al,BYTE PTR [edx]
100175d8:	add    al,BYTE PTR [edx]
100175da:	add    al,BYTE PTR [edx]
100175dc:	add    al,BYTE PTR [edx]
100175de:	add    al,BYTE PTR [edx]
100175e0:	add    al,BYTE PTR [edx]
100175e2:	add    al,BYTE PTR [edx]
100175e4:	add    al,BYTE PTR [edx]
100175e6:	add    al,BYTE PTR [edx]
100175e8:	add    al,BYTE PTR [edx]
100175ea:	add    al,BYTE PTR [edx]
100175ec:	add    al,BYTE PTR [edx]
100175ee:	add    al,BYTE PTR [edx]
100175f0:	add    al,BYTE PTR [edx]
100175f2:	add    al,BYTE PTR [edx]
100175f4:	add    al,BYTE PTR [edx]
100175f6:	add    al,BYTE PTR [edx]
100175f8:	add    al,BYTE PTR [edx]
100175fa:	add    al,BYTE PTR [edx]
100175fc:	add    al,BYTE PTR [edx]
100175fe:	add    al,BYTE PTR [edx]
10017600:	add    al,BYTE PTR [edx]
10017602:	add    al,BYTE PTR [edx]
10017604:	add    al,BYTE PTR [edx]
10017606:	add    al,BYTE PTR [edx]
10017608:	add    al,BYTE PTR [edx]
1001760a:	add    al,BYTE PTR [edx]
1001760c:	add    al,BYTE PTR [edx]
1001760e:	add    al,BYTE PTR [edx]
10017610:	add    al,BYTE PTR [edx]
10017612:	add    al,BYTE PTR [edx]
10017614:	add    al,BYTE PTR [edx]
10017616:	add    al,BYTE PTR [edx]
10017618:	add    al,BYTE PTR [edx]
1001761a:	add    BYTE PTR [eax],al
1001761c:	add    al,BYTE PTR [edx]
1001761e:	add    al,BYTE PTR [edx]
10017620:	add    al,BYTE PTR [edx]
10017622:	add    al,BYTE PTR [edx]
10017624:	add    al,BYTE PTR [edx]
10017626:	add    al,BYTE PTR [edx]
10017628:	add    al,BYTE PTR [edx]
1001762a:	add    al,BYTE PTR [edx]
1001762c:	add    al,BYTE PTR [edx]
1001762e:	add    al,BYTE PTR [edx]
10017630:	add    al,BYTE PTR [edx]
10017632:	add    al,BYTE PTR [edx]
10017634:	add    al,BYTE PTR [edx]
10017636:	add    al,BYTE PTR [edx]
10017638:	add    al,BYTE PTR [edx]
1001763a:	add    al,BYTE PTR [edx]
1001763c:	add    al,BYTE PTR [edx]
1001763e:	add    al,BYTE PTR [edx]
10017640:	add    al,BYTE PTR [edx]
10017642:	add    al,BYTE PTR [edx]
10017644:	add    al,BYTE PTR [edx]
10017646:	add    BYTE PTR [edx],al
10017648:	add    BYTE PTR [eax],al
1001764a:	int3   
1001764b:	int3   
1001764c:	int3   
1001764d:	int3   
1001764e:	int3   
1001764f:	int3   
10017650:	mov    eax,DWORD PTR [esp+0x4]
10017654:	mov    ecx,DWORD PTR [esp+0x8]
10017658:	mov    ecx,DWORD PTR [eax+ecx*4+0x2c]
1001765c:	cmp    ecx,0xffffffff
1001765f:	je     0x1001766c
10017661:	mov    edx,0x1
10017666:	shl    edx,cl
10017668:	or     WORD PTR [eax+0x1c],dx
1001766c:	ret    
1001766d:	int3   
1001766e:	int3   
1001766f:	int3   
10017670:	push   esi
10017671:	push   edi
10017672:	mov    edi,DWORD PTR [esp+0xc]
10017676:	xor    esi,esi
10017678:	push   esi
10017679:	push   edi
1001767a:	call   0x10017650
1001767f:	add    esi,0x1
10017682:	add    esp,0x8
10017685:	cmp    esi,0x5
10017688:	jl     0x10017678
1001768a:	pop    edi
1001768b:	pop    esi
1001768c:	ret    
1001768d:	int3   
1001768e:	int3   
1001768f:	int3   
10017690:	push   ebx
10017691:	push   esi
10017692:	mov    esi,DWORD PTR [esp+0xc]
10017696:	mov    ebx,DWORD PTR [esi+0x4]
10017699:	xor    ebx,DWORD PTR [esi]
1001769b:	test   ebx,0x2000000
100176a1:	je     0x100176ae
100176a3:	push   0x0
100176a5:	push   esi
100176a6:	call   0x10017650
100176ab:	add    esp,0x8
100176ae:	test   ebx,0x1f80
100176b4:	je     0x100176c1
100176b6:	push   0x2
100176b8:	push   esi
100176b9:	call   0x10017650
100176be:	add    esp,0x8
100176c1:	test   bl,0x70
100176c4:	je     0x100176d1
100176c6:	push   0x1
100176c8:	push   esi
100176c9:	call   0x10017650
100176ce:	add    esp,0x8
100176d1:	test   ebx,0x2000
100176d7:	je     0x100176e4
100176d9:	push   0x3
100176db:	push   esi
100176dc:	call   0x10017650
100176e1:	add    esp,0x8
100176e4:	test   ebx,0x4000
100176ea:	je     0x100176f7
100176ec:	push   0x4
100176ee:	push   esi
100176ef:	call   0x10017650
100176f4:	add    esp,0x8
100176f7:	mov    ax,WORD PTR [esi+0x1c]
100176fb:	pop    esi
100176fc:	pop    ebx
100176fd:	ret    
100176fe:	int3   
100176ff:	int3   
10017700:	push   esi
10017701:	mov    esi,DWORD PTR [esp+0x10]
10017705:	push   edi
10017706:	mov    edi,DWORD PTR [esp+0xc]
1001770a:	push   esi
1001770b:	push   edi
1001770c:	call   0x10017650
10017711:	mov    eax,DWORD PTR [esp+0x18]
10017715:	add    esp,0x8
10017718:	mov    DWORD PTR [edi+esi*4+0x2c],eax
1001771c:	pop    edi
1001771d:	pop    esi
1001771e:	ret    
1001771f:	int3   
10017720:	push   ebx
10017721:	mov    ebx,DWORD PTR [esp+0x8]
10017725:	push   esi
10017726:	mov    esi,DWORD PTR [esp+0x14]
1001772a:	push   edi
1001772b:	xor    edi,edi
1001772d:	cmp    DWORD PTR [esp+0x14],edi
10017731:	jle    0x10017887
10017737:	mov    eax,ebx
10017739:	sub    eax,DWORD PTR [esi+0x8]
1001773c:	cmp    eax,0xf
1001773f:	jge    0x10017887
10017745:	movzx  eax,BYTE PTR [ebx]
10017748:	add    eax,0xffffffda
1001774b:	cmp    eax,0xcd
10017750:	ja     0x10017887
10017756:	movzx  ecx,BYTE PTR [eax+0x10017994]
1001775d:	jmp    DWORD PTR [ecx*4+0x10017960]
10017764:	cmp    DWORD PTR [esp+0x1c],0x2
10017769:	jne    0x10017887
1001776f:	or     DWORD PTR [esi],0x2000000
10017775:	movzx  edx,BYTE PTR [ebx]
10017778:	push   0x0
1001777a:	and    edx,0xf
1001777d:	push   edi
1001777e:	push   esi
1001777f:	mov    DWORD PTR [esi+0x28],edx
10017782:	mov    DWORD PTR [esi+0x14],ebx
10017785:	mov    DWORD PTR [esi+0x18],0x1
1001778c:	call   0x10017700
10017791:	add    esp,0xc
10017794:	jmp    0x1001786e
10017799:	or     DWORD PTR [esi],0x10
1001779c:	push   0x1
1001779e:	push   esi
1001779f:	call   0x10017650
100177a4:	mov    DWORD PTR [esi+0x30],edi
100177a7:	jmp    0x1001786b
100177ac:	or     DWORD PTR [esi],0x20
100177af:	push   0x1
100177b1:	push   esi
100177b2:	call   0x10017650
100177b7:	mov    DWORD PTR [esi+0x30],edi
100177ba:	jmp    0x1001786b
100177bf:	or     DWORD PTR [esi],0x40
100177c2:	push   0x1
100177c4:	push   esi
100177c5:	call   0x10017650
100177ca:	mov    DWORD PTR [esi+0x30],edi
100177cd:	jmp    0x1001786b
100177d2:	or     DWORD PTR [esi],0x80
100177d8:	push   0x2
100177da:	push   esi
100177db:	call   0x10017650
100177e0:	mov    DWORD PTR [esi+0x34],edi
100177e3:	jmp    0x1001786b
100177e8:	or     DWORD PTR [esi],0x100
100177ee:	push   0x2
100177f0:	push   esi
100177f1:	call   0x10017650
100177f6:	mov    DWORD PTR [esi+0x34],edi
100177f9:	jmp    0x1001786b
100177fb:	or     DWORD PTR [esi],0x200
10017801:	push   0x2
10017803:	push   esi
10017804:	call   0x10017650
10017809:	mov    DWORD PTR [esi+0x34],edi
1001780c:	jmp    0x1001786b
1001780e:	or     DWORD PTR [esi],0x400
10017814:	push   0x2
10017816:	push   esi
10017817:	call   0x10017650
1001781c:	mov    DWORD PTR [esi+0x34],edi
1001781f:	jmp    0x1001786b
10017821:	or     DWORD PTR [esi],0x800
10017827:	push   0x2
10017829:	push   esi
1001782a:	call   0x10017650
1001782f:	mov    DWORD PTR [esi+0x34],edi
10017832:	jmp    0x1001786b
10017834:	or     DWORD PTR [esi],0x1000
1001783a:	push   0x2
1001783c:	push   esi
1001783d:	call   0x10017650
10017842:	mov    DWORD PTR [esi+0x34],edi
10017845:	jmp    0x1001786b
10017847:	or     DWORD PTR [esi],0x2000
1001784d:	push   0x3
1001784f:	push   esi
10017850:	call   0x10017650
10017855:	mov    DWORD PTR [esi+0x38],edi
10017858:	jmp    0x1001786b
1001785a:	or     DWORD PTR [esi],0x4000
10017860:	push   0x4
10017862:	push   esi
10017863:	call   0x10017650
10017868:	mov    DWORD PTR [esi+0x3c],edi
1001786b:	add    esp,0x8
1001786e:	mov    eax,DWORD PTR [esp+0x14]
10017872:	sub    eax,0x1
10017875:	add    ebx,0x1
10017878:	add    edi,0x1
1001787b:	test   eax,eax
1001787d:	mov    DWORD PTR [esp+0x14],eax
10017881:	jg     0x10017737
10017887:	mov    eax,0x2
1001788c:	cmp    DWORD PTR [esp+0x14],eax
10017890:	mov    dl,0xc0
10017892:	jl     0x100178e1
10017894:	cmp    BYTE PTR [ebx],0xc5
10017897:	jne    0x100178e1
10017899:	mov    ecx,ebx
1001789b:	sub    ecx,DWORD PTR [esi+0x8]
1001789e:	cmp    ecx,0xd
100178a1:	jg     0x100178e1
100178a3:	cmp    DWORD PTR [esp+0x1c],eax
100178a7:	je     0x100178ae
100178a9:	cmp    BYTE PTR [ebx+0x1],dl
100178ac:	jb     0x100178e1
100178ae:	or     DWORD PTR [esi],0x20000000
100178b4:	lea    eax,[ebx+0x1]
100178b7:	mov    edi,0x2
100178bc:	mov    DWORD PTR [esi+0x10],eax
100178bf:	mov    DWORD PTR [esi+0x18],edi
100178c2:	mov    al,BYTE PTR [eax]
100178c4:	movzx  ecx,al
100178c7:	not    ecx
100178c9:	test   cl,cl
100178cb:	jns    0x100178d7
100178cd:	cmp    DWORD PTR [esp+0x1c],edi
100178d1:	jne    0x100178d7
100178d3:	or     DWORD PTR [esi+0x28],0x4
100178d7:	test   al,0x4
100178d9:	je     0x100178df
100178db:	or     DWORD PTR [esi+0x28],0x10
100178df:	add    ebx,edi
100178e1:	mov    edi,0x3
100178e6:	cmp    DWORD PTR [esp+0x14],edi
100178ea:	jl     0x10017958
100178ec:	cmp    BYTE PTR [ebx],0xc4
100178ef:	jne    0x10017958
100178f1:	mov    eax,ebx
100178f3:	sub    eax,DWORD PTR [esi+0x8]
100178f6:	cmp    eax,0xc
100178f9:	jg     0x10017958
100178fb:	mov    ecx,DWORD PTR [esi]
100178fd:	mov    eax,ecx
100178ff:	not    eax
10017901:	test   eax,0x20000000
10017906:	je     0x10017958
10017908:	cmp    DWORD PTR [esp+0x1c],0x2
1001790d:	je     0x10017914
1001790f:	cmp    BYTE PTR [ebx+0x1],dl
10017912:	jb     0x10017958
10017914:	or     ecx,0x20000000
1001791a:	lea    eax,[ebx+0x1]
1001791d:	mov    DWORD PTR [esi],ecx
1001791f:	mov    DWORD PTR [esi+0x10],eax
10017922:	mov    DWORD PTR [esi+0x18],edi
10017925:	movzx  ecx,BYTE PTR [eax]
10017928:	not    ecx
1001792a:	sar    ecx,0x5
1001792d:	and    ecx,0x7
10017930:	or     DWORD PTR [esi+0x28],ecx
10017933:	mov    al,BYTE PTR [eax+0x1]
10017936:	test   al,0x4
10017938:	mov    ecx,DWORD PTR [esi+0x28]
1001793b:	je     0x10017943
1001793d:	or     ecx,0x10
10017940:	mov    DWORD PTR [esi+0x28],ecx
10017943:	test   al,al
10017945:	jns    0x1001794b
10017947:	or     DWORD PTR [esi+0x28],0x8
1001794b:	cmp    DWORD PTR [esp+0x1c],0x2
10017950:	je     0x10017956
10017952:	and    DWORD PTR [esi+0x28],0xfffffff0
10017956:	add    ebx,edi
10017958:	pop    edi
10017959:	mov    DWORD PTR [esi+0xc],ebx
1001795c:	pop    esi
1001795d:	pop    ebx
1001795e:	ret    
1001795f:	nop
10017960:	push   cs
10017961:	js     0x10017964
10017963:	adc    dl,dl
10017965:	ja     0x10017968
10017967:	adc    al,ch
10017969:	ja     0x1001796c
1001796b:	adc    bl,bh
1001796d:	ja     0x10017970
1001796f:	adc    BYTE PTR [edi+esi*2+0x1],ah
10017973:	adc    BYTE PTR [ecx],ah
10017975:	js     0x10017978
10017977:	adc    BYTE PTR [eax+edi*2],dh
1001797a:	add    DWORD PTR [eax],edx
1001797c:	inc    edi
1001797d:	js     0x10017980
1001797f:	adc    BYTE PTR [edx+0x78],bl
10017982:	add    DWORD PTR [eax],edx
10017984:	cdq    
10017985:	ja     0x10017988
10017987:	adc    BYTE PTR [edi+esi*2+0x77bf1001],ch
1001798e:	add    DWORD PTR [eax],edx
10017990:	xchg   DWORD PTR [eax+0x1],edi
10017993:	adc    BYTE PTR [eax],al
10017995:	or     al,0xc
10017997:	or     al,0xc
10017999:	or     al,0xc
1001799b:	or     al,0x1
1001799d:	or     al,0xc
1001799f:	or     al,0xc
100179a1:	or     al,0xc
100179a3:	or     al,0x2
100179a5:	or     al,0xc
100179a7:	or     al,0xc
100179a9:	or     al,0xc
100179ab:	or     al,0x3
100179ad:	or     al,0x4
100179af:	add    al,0x4
100179b1:	add    al,0x4
100179b3:	add    al,0x4
100179b5:	add    al,0x4
100179b7:	add    al,0x4
100179b9:	add    al,0x4
100179bb:	add    al,0x4
100179bd:	add    al,0xc
100179bf:	or     al,0xc
100179c1:	or     al,0xc
100179c3:	or     al,0xc
100179c5:	or     al,0xc
100179c7:	or     al,0xc
100179c9:	or     al,0xc
100179cb:	or     al,0xc
100179cd:	or     al,0xc
100179cf:	or     al,0xc
100179d1:	or     al,0x5
100179d3:	push   es
100179d4:	pop    es
100179d5:	or     BYTE PTR [esp+ecx*1],cl
100179d8:	or     al,0xc
100179da:	or     al,0xc
100179dc:	or     al,0xc
100179de:	or     al,0xc
100179e0:	or     al,0xc
100179e2:	or     al,0xc
100179e4:	or     al,0xc
100179e6:	or     al,0xc
100179e8:	or     al,0xc
100179ea:	or     al,0xc
100179ec:	or     al,0xc
100179ee:	or     al,0xc
100179f0:	or     al,0xc
100179f2:	or     al,0xc
100179f4:	or     al,0xc
100179f6:	or     al,0xc
100179f8:	or     al,0xc
100179fa:	or     al,0xc
100179fc:	or     al,0xc
100179fe:	or     al,0xc
10017a00:	or     al,0xc
10017a02:	or     al,0xc
10017a04:	or     al,0xc
10017a06:	or     al,0xc
10017a08:	or     al,0xc
10017a0a:	or     al,0xc
10017a0c:	or     al,0xc
10017a0e:	or     al,0xc
10017a10:	or     al,0xc
10017a12:	or     al,0xc
10017a14:	or     al,0xc
10017a16:	or     al,0xc
10017a18:	or     al,0xc
10017a1a:	or     al,0xc
10017a1c:	or     al,0xc
10017a1e:	or     al,0xc
10017a20:	or     al,0xc
10017a22:	or     al,0xc
10017a24:	or     al,0xc
10017a26:	or     al,0xc
10017a28:	or     al,0xc
10017a2a:	or     al,0xc
10017a2c:	or     al,0xc
10017a2e:	or     al,0xc
10017a30:	or     al,0xc
10017a32:	or     al,0xc
10017a34:	or     al,0xc
10017a36:	or     al,0xc
10017a38:	or     al,0xc
10017a3a:	or     al,0xc
10017a3c:	or     al,0xc
10017a3e:	or     al,0xc
10017a40:	or     al,0xc
10017a42:	or     al,0xc
10017a44:	or     al,0xc
10017a46:	or     al,0xc
10017a48:	or     al,0xc
10017a4a:	or     al,0xc
10017a4c:	or     al,0xc
10017a4e:	or     al,0xc
10017a50:	or     al,0xc
10017a52:	or     al,0xc
10017a54:	or     al,0xc
10017a56:	or     al,0xc
10017a58:	or     al,0xc
10017a5a:	or     al,0xc
10017a5c:	or     al,0xc
10017a5e:	or     DWORD PTR [edx+ecx*1],ecx
10017a61:	or     ecx,esp
10017a63:	int3   
10017a64:	int3   
10017a65:	int3   
10017a66:	int3   
10017a67:	int3   
10017a68:	int3   
10017a69:	int3   
10017a6a:	int3   
10017a6b:	int3   
10017a6c:	int3   
10017a6d:	int3   
10017a6e:	int3   
10017a6f:	int3   
10017a70:	push   esi
10017a71:	mov    esi,DWORD PTR [esp+0xc]
10017a75:	mov    eax,DWORD PTR [esi]
10017a77:	push   edi
10017a78:	mov    edi,DWORD PTR [esp+0x14]
10017a7c:	cmp    edi,0x2
10017a7f:	jne    0x10017a88
10017a81:	and    eax,0x1800
10017a86:	jmp    0x10017a8d
10017a88:	and    eax,0x1f80
10017a8d:	test   eax,eax
10017a8f:	mov    ecx,DWORD PTR [esp+0x18]
10017a93:	mov    edx,DWORD PTR [esp+0xc]
10017a97:	je     0x10017aa2
10017a99:	cmp    eax,edx
10017a9b:	je     0x10017aa2
10017a9d:	or     DWORD PTR [esi+0x4],eax
10017aa0:	jmp    0x10017aa8
10017aa2:	or     BYTE PTR [ecx+0xc],0x80
10017aa6:	mov    eax,edx
10017aa8:	cmp    eax,0x400
10017aad:	ja     0x10017ade
10017aaf:	je     0x10017ad8
10017ab1:	cmp    eax,0x80
10017ab6:	je     0x10017ad2
10017ab8:	cmp    eax,0x100
10017abd:	je     0x10017acc
10017abf:	cmp    eax,0x200
10017ac4:	jne    0x10017af6
10017ac6:	or     BYTE PTR [ecx+0xc],0x47
10017aca:	jmp    0x10017af6
10017acc:	or     BYTE PTR [ecx+0xc],0x46
10017ad0:	jmp    0x10017af6
10017ad2:	or     BYTE PTR [ecx+0xc],0x45
10017ad6:	jmp    0x10017af6
10017ad8:	or     BYTE PTR [ecx+0xc],0x44
10017adc:	jmp    0x10017af6
10017ade:	cmp    eax,0x800
10017ae3:	je     0x10017af2
10017ae5:	cmp    eax,0x1000
10017aea:	jne    0x10017af6
10017aec:	or     BYTE PTR [ecx+0xc],0x49
10017af0:	jmp    0x10017af6
10017af2:	or     BYTE PTR [ecx+0xc],0x48
10017af6:	cmp    edi,0x2
10017af9:	pop    edi
10017afa:	pop    esi
10017afb:	jne    0x10017b08
10017afd:	test   eax,0x780
10017b02:	je     0x10017b08
10017b04:	mov    BYTE PTR [ecx+0xc],0xff
10017b08:	ret    
10017b09:	int3   
10017b0a:	int3   
10017b0b:	int3   
10017b0c:	int3   
10017b0d:	int3   
10017b0e:	int3   
10017b0f:	int3   
10017b10:	mov    ecx,DWORD PTR [esi]
10017b12:	mov    eax,ecx
10017b14:	and    eax,0x2060
10017b19:	cmp    eax,0x40
10017b1c:	push   edi
10017b1d:	ja     0x10017b5f
10017b1f:	je     0x10017b4d
10017b21:	test   eax,eax
10017b23:	je     0x10017b3f
10017b25:	cmp    eax,0x20
10017b28:	jne    0x10017b66
10017b2a:	mov    eax,DWORD PTR [edx+0x4]
10017b2d:	movzx  eax,BYTE PTR [eax+0x3]
10017b31:	mov    edi,DWORD PTR [edx+0x8]
10017b34:	mov    eax,DWORD PTR [edi+eax*4]
10017b37:	and    ecx,0xffffffdf
10017b3a:	jmp    0x10017bc6
10017b3f:	mov    ecx,DWORD PTR [edx+0x4]
10017b42:	movzx  eax,BYTE PTR [ecx]
10017b45:	mov    ecx,DWORD PTR [edx+0x8]
10017b48:	mov    eax,DWORD PTR [ecx+eax*4]
10017b4b:	jmp    0x10017bc8
10017b4d:	mov    eax,DWORD PTR [edx+0x4]
10017b50:	movzx  eax,BYTE PTR [eax+0x2]
10017b54:	mov    edi,DWORD PTR [edx+0x8]
10017b57:	mov    eax,DWORD PTR [edi+eax*4]
10017b5a:	and    ecx,0xffffffbf
10017b5d:	jmp    0x10017bc6
10017b5f:	cmp    eax,0x2000
10017b64:	je     0x10017bac
10017b66:	mov    eax,ecx
10017b68:	and    eax,0x60
10017b6b:	cmp    al,0x60
10017b6d:	je     0x10017ba8
10017b6f:	test   cl,0x20
10017b72:	je     0x10017b80
10017b74:	mov    eax,DWORD PTR [edx+0x4]
10017b77:	movzx  eax,BYTE PTR [eax+0x3]
10017b7b:	and    ecx,0xffffffdf
10017b7e:	jmp    0x10017b8f
10017b80:	test   cl,0x40
10017b83:	je     0x10017ba8
10017b85:	mov    eax,DWORD PTR [edx+0x4]
10017b88:	movzx  eax,BYTE PTR [eax+0x2]
10017b8c:	and    ecx,0xffffffbf
10017b8f:	mov    edi,DWORD PTR [edx+0x8]
10017b92:	mov    eax,DWORD PTR [edi+eax*4]
10017b95:	test   eax,eax
10017b97:	mov    DWORD PTR [esi],ecx
10017b99:	je     0x10017ba8
10017b9b:	mov    ecx,DWORD PTR [eax+0x8]
10017b9e:	not    ecx
10017ba0:	test   ecx,0x2000
10017ba6:	je     0x10017bc8
10017ba8:	xor    eax,eax
10017baa:	pop    edi
10017bab:	ret    
10017bac:	mov    eax,DWORD PTR [edx+0x4]
10017baf:	movzx  eax,BYTE PTR [eax+0x1]
10017bb3:	mov    edi,DWORD PTR [edx+0x8]
10017bb6:	mov    eax,DWORD PTR [edi+eax*4]
10017bb9:	mov    DWORD PTR [esi+0x20],0x1
10017bc0:	and    ecx,0xffffdfff
10017bc6:	mov    DWORD PTR [esi],ecx
10017bc8:	test   eax,eax
10017bca:	jne    0x10017bd8
10017bcc:	mov    ecx,DWORD PTR [edx+0x4]
10017bcf:	movzx  eax,BYTE PTR [ecx]
10017bd2:	mov    ecx,DWORD PTR [edx+0x8]
10017bd5:	mov    eax,DWORD PTR [ecx+eax*4]
10017bd8:	pop    edi
10017bd9:	ret    
10017bda:	int3   
10017bdb:	int3   
10017bdc:	int3   
10017bdd:	int3   
10017bde:	int3   
10017bdf:	int3   
10017be0:	test   DWORD PTR [edx],0x2002070
10017be6:	mov    ecx,DWORD PTR [edx+0x10]
10017be9:	mov    al,BYTE PTR [ecx]
10017beb:	push   ebx
10017bec:	mov    ebx,0x4
10017bf1:	je     0x10017bf7
10017bf3:	xor    eax,eax
10017bf5:	pop    ebx
10017bf6:	ret    
10017bf7:	cmp    DWORD PTR [edx+0x18],0x2
10017bfb:	push   ebp
10017bfc:	push   esi
10017bfd:	jne    0x10017c18
10017bff:	movzx  ecx,al
10017c02:	mov    eax,ecx
10017c04:	not    eax
10017c06:	sar    eax,0x3
10017c09:	and    al,0xf
10017c0b:	movzx  esi,al
10017c0e:	mov    DWORD PTR [edx+0x24],esi
10017c11:	mov    esi,0x1
10017c16:	jmp    0x10017c30
10017c18:	movzx  ecx,BYTE PTR [ecx+0x1]
10017c1c:	and    eax,0x1f
10017c1f:	mov    esi,eax
10017c21:	mov    eax,ecx
10017c23:	not    eax
10017c25:	sar    eax,0x3
10017c28:	and    al,0xf
10017c2a:	movzx  ebp,al
10017c2d:	mov    DWORD PTR [edx+0x24],ebp
10017c30:	and    ecx,0x3
10017c33:	sub    esi,0x1
10017c36:	je     0x10017c54
10017c38:	sub    esi,0x1
10017c3b:	je     0x10017c4d
10017c3d:	sub    esi,0x1
10017c40:	jne    0x10017cf1
10017c46:	mov    edx,0x100c3444
10017c4b:	jmp    0x10017c59
10017c4d:	mov    edx,0x100c4fb4
10017c52:	jmp    0x10017c59
10017c54:	mov    edx,0x100c6830
10017c59:	test   al,al
10017c5b:	jne    0x10017c62
10017c5d:	mov    ebx,0x8
10017c62:	add    ebx,ecx
10017c64:	add    DWORD PTR [edi+0x14],0xffffffff
10017c68:	mov    esi,DWORD PTR [edi+0x14]
10017c6b:	js     0x10017cf1
10017c71:	mov    ecx,DWORD PTR [edi+0x10]
10017c74:	movzx  eax,BYTE PTR [ecx]
10017c77:	mov    ebp,DWORD PTR [edx+0x4]
10017c7a:	movzx  eax,BYTE PTR [eax+ebp*1]
10017c7e:	mov    edx,DWORD PTR [edx+0x8]
10017c81:	mov    eax,DWORD PTR [edx+eax*4]
10017c84:	test   eax,eax
10017c86:	je     0x10017cf1
10017c88:	mov    dl,BYTE PTR [eax]
10017c8a:	cmp    dl,0x5
10017c8d:	je     0x10017ce0
10017c8f:	cmp    dl,0x1
10017c92:	je     0x10017cf1
10017c94:	cmp    dl,0x4
10017c97:	je     0x10017cf1
10017c99:	lea    edx,[ecx+0x1]
10017c9c:	lea    ecx,[esi-0x1]
10017c9f:	test   ecx,ecx
10017ca1:	mov    DWORD PTR [edi+0x10],edx
10017ca4:	mov    DWORD PTR [edi+0x14],ecx
10017ca7:	jl     0x10017cf1
10017ca9:	mov    cl,BYTE PTR [eax]
10017cab:	cmp    cl,0x2
10017cae:	jne    0x10017cc2
10017cb0:	movzx  ecx,BYTE PTR [edx]
10017cb3:	mov    edx,DWORD PTR [eax+0x4]
10017cb6:	shr    ecx,0x3
10017cb9:	and    ecx,0x7
10017cbc:	movzx  ecx,BYTE PTR [ecx+edx*1]
10017cc0:	jmp    0x10017cd1
10017cc2:	cmp    cl,0x3
10017cc5:	jne    0x10017cf1
10017cc7:	movzx  ecx,BYTE PTR [edx]
10017cca:	mov    edx,DWORD PTR [eax+0x4]
10017ccd:	movzx  ecx,BYTE PTR [edx+ecx*1]
10017cd1:	mov    edx,DWORD PTR [eax+0x8]
10017cd4:	mov    eax,DWORD PTR [edx+ecx*4]
10017cd7:	test   eax,eax
10017cd9:	je     0x10017cf1
10017cdb:	cmp    BYTE PTR [eax],0x5
10017cde:	jne    0x10017cf1
10017ce0:	mov    ecx,DWORD PTR [eax+0x4]
10017ce3:	movzx  edx,BYTE PTR [ecx+ebx*1]
10017ce7:	mov    eax,DWORD PTR [eax+0x8]
10017cea:	mov    eax,DWORD PTR [eax+edx*4]
10017ced:	pop    esi
10017cee:	pop    ebp
10017cef:	pop    ebx
10017cf0:	ret    
10017cf1:	pop    esi
10017cf2:	pop    ebp
10017cf3:	xor    eax,eax
10017cf5:	pop    ebx
10017cf6:	ret    
10017cf7:	int3   
10017cf8:	int3   
10017cf9:	int3   
10017cfa:	int3   
10017cfb:	int3   
10017cfc:	int3   
10017cfd:	int3   
10017cfe:	int3   
10017cff:	int3   
10017d00:	sub    esp,0x8
10017d03:	push   ebx
10017d04:	push   esi
10017d05:	mov    esi,DWORD PTR [esp+0x18]
10017d09:	mov    eax,DWORD PTR [esi+0x28]
10017d0c:	xor    ebx,ebx
10017d0e:	test   DWORD PTR [esi],0x20000000
10017d14:	push   edi
10017d15:	mov    edi,DWORD PTR [esp+0x18]
10017d19:	mov    DWORD PTR [esp+0x10],eax
10017d1d:	je     0x10017d4f
10017d1f:	mov    edx,esi
10017d21:	call   0x10017be0
10017d26:	test   eax,eax
10017d28:	je     0x10017fe8
10017d2e:	test   BYTE PTR [eax+0xc],0x10
10017d32:	je     0x10017fe8
10017d38:	mov    ecx,DWORD PTR [esi+0x28]
10017d3b:	not    ecx
10017d3d:	test   cl,0x10
10017d40:	je     0x10017fe8
10017d46:	pop    edi
10017d47:	pop    esi
10017d48:	xor    eax,eax
10017d4a:	pop    ebx
10017d4b:	add    esp,0x8
10017d4e:	ret    
10017d4f:	push   ebp
10017d50:	or     ebp,0xffffffff
10017d53:	add    DWORD PTR [edi+0x14],ebp
10017d56:	mov    eax,DWORD PTR [edi+0x14]
10017d59:	js     0x10017fe5
10017d5f:	mov    edx,DWORD PTR [edi+0x10]
10017d62:	movzx  ecx,BYTE PTR [edx]
10017d65:	cmp    ecx,0x9b
10017d6b:	mov    DWORD PTR [esp+0x10],ecx
10017d6f:	jne    0x10017d96
10017d71:	push   esi
10017d72:	lea    ebx,[ebp+0x2]
10017d75:	call   0x10017670
10017d7a:	add    DWORD PTR [edi+0x10],ebx
10017d7d:	mov    ecx,DWORD PTR [edi+0x10]
10017d80:	add    esp,0x4
10017d83:	add    DWORD PTR [edi+0x14],ebp
10017d86:	mov    eax,DWORD PTR [edi+0x14]
10017d89:	js     0x10017fe5
10017d8f:	movzx  ecx,BYTE PTR [ecx]
10017d92:	mov    DWORD PTR [esp+0x10],ecx
10017d96:	mov    edx,DWORD PTR ds:0x100c7590
10017d9c:	movzx  edx,BYTE PTR [edx+ecx*1]
10017da0:	mov    ebp,DWORD PTR ds:0x100c7594
10017da6:	mov    ebp,DWORD PTR [ebp+edx*4+0x0]
10017daa:	test   ebp,ebp
10017dac:	je     0x10017fe5
10017db2:	cmp    BYTE PTR [ebp+0x0],0x1
10017db6:	jne    0x10017e4a
10017dbc:	test   ebx,ebx
10017dbe:	jne    0x10017e4a
10017dc4:	mov    eax,ecx
10017dc6:	sub    eax,0x63
10017dc9:	je     0x10017e2e
10017dcb:	sub    eax,0x2a
10017dce:	je     0x10017e13
10017dd0:	sub    eax,0x3
10017dd3:	jne    0x10017e24
10017dd5:	test   BYTE PTR [esi],0x40
10017dd8:	je     0x10017deb
10017dda:	or     DWORD PTR [esi+0x4],0x40
10017dde:	pop    ebp
10017ddf:	pop    edi
10017de0:	pop    esi
10017de1:	mov    eax,0x100c75c8
10017de6:	pop    ebx
10017de7:	add    esp,0x8
10017dea:	ret    
10017deb:	mov    eax,DWORD PTR [esp+0x14]
10017def:	test   al,0x8
10017df1:	je     0x10017dfa
10017df3:	or     DWORD PTR [esi+0x4],0x2000000
10017dfa:	cmp    DWORD PTR [edi+0x18],0x2
10017dfe:	jne    0x10017e06
10017e00:	not    eax
10017e02:	test   al,0x1
10017e04:	je     0x10017e24
10017e06:	pop    ebp
10017e07:	pop    edi
10017e08:	pop    esi
10017e09:	mov    eax,0x100c75bc
10017e0e:	pop    ebx
10017e0f:	add    esp,0x8
10017e12:	ret    
10017e13:	and    DWORD PTR [esi],0xffffe07f
10017e19:	push   0x2
10017e1b:	push   esi
10017e1c:	call   0x10017650
10017e21:	add    esp,0x8
10017e24:	mov    eax,ebp
10017e26:	pop    ebp
10017e27:	pop    edi
10017e28:	pop    esi
10017e29:	pop    ebx
10017e2a:	add    esp,0x8
10017e2d:	ret    
10017e2e:	cmp    DWORD PTR [edi+0x18],0x2
10017e32:	mov    eax,0x100c75a4
10017e37:	je     0x10017fe7
10017e3d:	pop    ebp
10017e3e:	pop    edi
10017e3f:	pop    esi
10017e40:	mov    eax,0x100c7598
10017e45:	pop    ebx
10017e46:	add    esp,0x8
10017e49:	ret    
10017e4a:	add    DWORD PTR [edi+0x10],0x1
10017e4e:	mov    esi,DWORD PTR [edi+0x10]
10017e51:	lea    edx,[eax-0x1]
10017e54:	test   edx,edx
10017e56:	mov    DWORD PTR [edi+0x14],edx
10017e59:	jl     0x10017fe5
10017e5f:	mov    cl,BYTE PTR [ebp+0x0]
10017e62:	cmp    cl,0x2
10017e65:	movzx  eax,BYTE PTR [esi]
10017e68:	jne    0x10017e89
10017e6a:	test   ebx,ebx
10017e6c:	jne    0x10017e89
10017e6e:	mov    ecx,DWORD PTR [ebp+0x4]
10017e71:	shr    eax,0x3
10017e74:	and    eax,0x7
10017e77:	movzx  edx,BYTE PTR [eax+ecx*1]
10017e7b:	mov    eax,DWORD PTR [ebp+0x8]
10017e7e:	mov    eax,DWORD PTR [eax+edx*4]
10017e81:	pop    ebp
10017e82:	pop    edi
10017e83:	pop    esi
10017e84:	pop    ebx
10017e85:	add    esp,0x8
10017e88:	ret    
10017e89:	cmp    cl,0x4
10017e8c:	jne    0x10017ef2
10017e8e:	cmp    eax,0xc0
10017e93:	jae    0x10017e9d
10017e95:	shr    eax,0x3
10017e98:	and    eax,0x7
10017e9b:	jmp    0x10017ea2
10017e9d:	sub    eax,0xb8
10017ea2:	mov    ecx,DWORD PTR [ebp+0x4]
10017ea5:	movzx  edx,BYTE PTR [ecx+eax*1]
10017ea9:	mov    eax,DWORD PTR [ebp+0x8]
10017eac:	mov    eax,DWORD PTR [eax+edx*4]
10017eaf:	test   eax,eax
10017eb1:	je     0x10017fe5
10017eb7:	cmp    BYTE PTR [eax],0x1
10017eba:	jne    0x10017edd
10017ebc:	mov    ecx,DWORD PTR [eax+0x8]
10017ebf:	not    ecx
10017ec1:	test   ecx,0x2000
10017ec7:	je     0x10017fe7
10017ecd:	test   ebx,ebx
10017ecf:	jne    0x10017fe5
10017ed5:	pop    ebp
10017ed6:	pop    edi
10017ed7:	pop    esi
10017ed8:	pop    ebx
10017ed9:	add    esp,0x8
10017edc:	ret    
10017edd:	mov    edx,DWORD PTR [eax+0x4]
10017ee0:	movzx  ecx,BYTE PTR [edx+ebx*1]
10017ee4:	mov    edx,DWORD PTR [eax+0x8]
10017ee7:	mov    eax,DWORD PTR [edx+ecx*4]
10017eea:	pop    ebp
10017eeb:	pop    edi
10017eec:	pop    esi
10017eed:	pop    ebx
10017eee:	add    esp,0x8
10017ef1:	ret    
10017ef2:	test   ebx,ebx
10017ef4:	jne    0x10017fe5
10017efa:	cmp    cl,0x3
10017efd:	jne    0x10017f4f
10017eff:	mov    ecx,DWORD PTR [ebp+0x4]
10017f02:	movzx  ecx,BYTE PTR [ecx+eax*1]
10017f06:	mov    ebx,DWORD PTR [ebp+0x8]
10017f09:	mov    ebp,DWORD PTR [ebx+ecx*4]
10017f0c:	test   ebp,ebp
10017f0e:	je     0x10017fe5
10017f14:	cmp    DWORD PTR [esp+0x10],0xf
10017f19:	jne    0x10017f2d
10017f1b:	cmp    eax,0xf
10017f1e:	jne    0x10017f2d
10017f20:	pop    ebp
10017f21:	pop    edi
10017f22:	pop    esi
10017f23:	mov    eax,0x100be1cc
10017f28:	pop    ebx
10017f29:	add    esp,0x8
10017f2c:	ret    
10017f2d:	mov    al,BYTE PTR [ebp+0x0]
10017f30:	cmp    al,0x1
10017f32:	je     0x10017e24
10017f38:	cmp    al,0x5
10017f3a:	jne    0x10017f4f
10017f3c:	mov    esi,DWORD PTR [esp+0x20]
10017f40:	mov    edx,ebp
10017f42:	call   0x10017b10
10017f47:	pop    ebp
10017f48:	pop    edi
10017f49:	pop    esi
10017f4a:	pop    ebx
10017f4b:	add    esp,0x8
10017f4e:	ret    
10017f4f:	lea    ecx,[edx-0x1]
10017f52:	test   ecx,ecx
10017f54:	lea    eax,[esi+0x1]
10017f57:	mov    DWORD PTR [edi+0x10],eax
10017f5a:	mov    DWORD PTR [edi+0x14],ecx
10017f5d:	jl     0x10017fe5
10017f63:	movzx  ecx,BYTE PTR [eax]
10017f66:	mov    edi,DWORD PTR [ebp+0x4]
10017f69:	mov    esi,DWORD PTR [ebp+0x8]
10017f6c:	mov    edx,ecx
10017f6e:	shr    edx,0x3
10017f71:	and    edx,0x7
10017f74:	movzx  eax,BYTE PTR [edx+edi*1]
10017f78:	mov    dl,BYTE PTR [ebp+0x0]
10017f7b:	cmp    dl,0x2
10017f7e:	mov    eax,DWORD PTR [esi+eax*4]
10017f81:	jne    0x10017f9f
10017f83:	test   eax,eax
10017f85:	je     0x10017fe5
10017f87:	cmp    BYTE PTR [eax],0x1
10017f8a:	je     0x10017fe7
10017f8c:	mov    esi,DWORD PTR [esp+0x20]
10017f90:	mov    edx,eax
10017f92:	call   0x10017b10
10017f97:	pop    ebp
10017f98:	pop    edi
10017f99:	pop    esi
10017f9a:	pop    ebx
10017f9b:	add    esp,0x8
10017f9e:	ret    
10017f9f:	cmp    dl,0x4
10017fa2:	jne    0x10017fc9
10017fa4:	test   eax,eax
10017fa6:	je     0x10017fae
10017fa8:	test   BYTE PTR [eax+0x8],0x2
10017fac:	jne    0x10017fe7
10017fae:	cmp    ecx,0xc0
10017fb4:	jb     0x10017fe7
10017fb6:	movzx  ecx,BYTE PTR [edi+ecx*1-0xb8]
10017fbe:	mov    eax,DWORD PTR [esi+ecx*4]
10017fc1:	pop    ebp
10017fc2:	pop    edi
10017fc3:	pop    esi
10017fc4:	pop    ebx
10017fc5:	add    esp,0x8
10017fc8:	ret    
10017fc9:	cmp    dl,0x3
10017fcc:	jne    0x10017fe5
10017fce:	movzx  edx,BYTE PTR [edi+ecx*1]
10017fd2:	mov    eax,DWORD PTR [esi+edx*4]
10017fd5:	test   eax,eax
10017fd7:	je     0x10017fe5
10017fd9:	mov    cl,BYTE PTR [eax]
10017fdb:	cmp    cl,0x1
10017fde:	je     0x10017fe7
10017fe0:	cmp    cl,0x5
10017fe3:	je     0x10017f8c
10017fe5:	xor    eax,eax
10017fe7:	pop    ebp
10017fe8:	pop    edi
10017fe9:	pop    esi
10017fea:	pop    ebx
10017feb:	add    esp,0x8
10017fee:	ret    
10017fef:	int3   
10017ff0:	mov    ecx,DWORD PTR [esp+0x4]
10017ff4:	push   esi
10017ff5:	mov    esi,DWORD PTR [ecx+0x14]
10017ff8:	cmp    esi,0x1
10017ffb:	jl     0x1001802f
10017ffd:	mov    edx,DWORD PTR [ecx+0x10]
10018000:	movzx  eax,BYTE PTR [edx]
10018003:	push   edi
10018004:	mov    edi,DWORD PTR ds:0x100c5ab8
1001800a:	movzx  eax,BYTE PTR [eax+edi*1]
1001800e:	mov    edi,DWORD PTR ds:0x100c5abc
10018014:	mov    eax,DWORD PTR [edi+eax*4]
10018017:	test   eax,eax
10018019:	pop    edi
1001801a:	je     0x1001802f
1001801c:	cmp    BYTE PTR [eax],0x1
1001801f:	jne    0x1001802f
10018021:	add    esi,0xffffffff
10018024:	add    edx,0x1
10018027:	mov    DWORD PTR [ecx+0x14],esi
1001802a:	mov    DWORD PTR [ecx+0x10],edx
1001802d:	pop    esi
1001802e:	ret    
1001802f:	xor    eax,eax
10018031:	pop    esi
10018032:	ret    
10018033:	int3   
10018034:	jmp    DWORD PTR ds:0x1002f068
1001803a:	jmp    DWORD PTR ds:0x1002f06c
10018040:	jmp    DWORD PTR ds:0x1002f070
10018046:	push   ebp
10018047:	mov    ebp,esp
10018049:	sub    esp,0xc
1001804c:	mov    eax,ds:0x100c7654
10018051:	xor    eax,ebp
10018053:	mov    DWORD PTR [ebp-0x4],eax
10018056:	push   esi
10018057:	xor    esi,esi
10018059:	call   DWORD PTR ds:0x1002f174
1001805f:	push   0x7
10018061:	lea    ecx,[ebp-0xc]
10018064:	push   ecx
10018065:	push   0x1004
1001806a:	push   eax
1001806b:	call   DWORD PTR ds:0x1002f170
10018071:	test   eax,eax
10018073:	je     0x10018094
10018075:	mov    cl,BYTE PTR [ebp-0xc]
10018078:	test   cl,cl
1001807a:	lea    eax,[ebp-0xc]
1001807d:	je     0x10018094
1001807f:	imul   esi,esi,0xa
10018082:	movsx  ecx,cl
10018085:	inc    eax
10018086:	lea    esi,[esi+ecx*1-0x30]
1001808a:	mov    cl,BYTE PTR [eax]
1001808c:	test   cl,cl
1001808e:	jne    0x1001807f
10018090:	test   esi,esi
10018092:	jne    0x1001809c
10018094:	call   DWORD PTR ds:0x1002f16c
1001809a:	mov    esi,eax
1001809c:	mov    ecx,DWORD PTR [ebp-0x4]
1001809f:	mov    eax,esi
100180a1:	xor    ecx,ebp
100180a3:	pop    esi
100180a4:	call   0x10018773
100180a9:	leave  
100180aa:	ret    
100180ab:	push   0x3
100180ad:	pop    eax
100180ae:	ret    
100180af:	push   ebp
100180b0:	mov    ebp,esp
100180b2:	sub    esp,0x98
100180b8:	mov    eax,ds:0x100c7654
100180bd:	xor    eax,ebp
100180bf:	mov    DWORD PTR [ebp-0x4],eax
100180c2:	lea    eax,[ebp-0x98]
100180c8:	push   eax
100180c9:	mov    DWORD PTR [ebp-0x98],0x94
100180d3:	call   DWORD PTR ds:0x1002f178
100180d9:	cmp    DWORD PTR [ebp-0x88],0x2
100180e0:	jne    0x100180f0
100180e2:	cmp    DWORD PTR [ebp-0x94],0x5
100180e9:	mov    eax,0x100180ab
100180ee:	jae    0x100180f5
100180f0:	mov    eax,0x10018046
100180f5:	push   eax
100180f6:	push   0x100c75d4
100180fb:	call   DWORD PTR ds:0x1002f168
10018101:	call   DWORD PTR ds:0x100c75d4
10018107:	mov    ecx,DWORD PTR [ebp-0x4]
1001810a:	xor    ecx,ebp
1001810c:	call   0x10018773
10018111:	leave  
10018112:	ret    
10018113:	cmp    BYTE PTR [ecx+0x8],0x0
10018117:	mov    DWORD PTR [ecx],0x100b2670
1001811d:	je     0x1001812d
1001811f:	mov    ecx,DWORD PTR [ecx+0x4]
10018122:	test   ecx,ecx
10018124:	je     0x1001812d
10018126:	push   ecx
10018127:	call   DWORD PTR ds:0x1002f17c
1001812d:	ret    
1001812e:	push   DWORD PTR [esp+0x4]
10018132:	push   0x0
10018134:	push   DWORD PTR [ecx+0x4]
10018137:	call   DWORD PTR ds:0x1002f180
1001813d:	ret    0x4
10018140:	cmp    DWORD PTR [esp+0x4],0x0
10018145:	je     0x10018156
10018147:	push   DWORD PTR [esp+0x4]
1001814b:	push   0x0
1001814d:	push   DWORD PTR [ecx+0x4]
10018150:	call   DWORD PTR ds:0x1002f184
10018156:	ret    0x4
10018159:	push   ebp
1001815a:	mov    ebp,esp
1001815c:	xor    eax,eax
1001815e:	cmp    DWORD PTR [ebp+0x8],eax
10018161:	jne    0x1001816c
10018163:	push   DWORD PTR [ebp+0xc]
10018166:	mov    eax,DWORD PTR [ecx]
10018168:	call   DWORD PTR [eax]
1001816a:	jmp    0x1001818d
1001816c:	cmp    DWORD PTR [ebp+0xc],eax
1001816f:	jne    0x1001817d
10018171:	push   DWORD PTR [ebp+0x8]
10018174:	mov    eax,DWORD PTR [ecx]
10018176:	call   DWORD PTR [eax+0x4]
10018179:	xor    eax,eax
1001817b:	jmp    0x1001818d
1001817d:	push   DWORD PTR [ebp+0xc]
10018180:	push   DWORD PTR [ebp+0x8]
10018183:	push   eax
10018184:	push   DWORD PTR [ecx+0x4]
10018187:	call   DWORD PTR ds:0x1002f188
1001818d:	pop    ebp
1001818e:	ret    0x8
10018191:	push   DWORD PTR [esp+0x4]
10018195:	push   0x0
10018197:	push   DWORD PTR [ecx+0x4]
1001819a:	call   DWORD PTR ds:0x1002f18c
100181a0:	ret    0x4
100181a3:	push   esi
100181a4:	mov    esi,ecx
100181a6:	call   0x10018113
100181ab:	test   BYTE PTR [esp+0x8],0x1
100181b0:	je     0x100181b9
100181b2:	push   esi
100181b3:	call   0x1001876e
100181b8:	pop    ecx
100181b9:	mov    eax,esi
100181bb:	pop    esi
100181bc:	ret    0x4
100181bf:	mov    eax,ecx
100181c1:	mov    ecx,DWORD PTR [esp+0x4]
100181c5:	mov    DWORD PTR [eax+0x4],ecx
100181c8:	mov    DWORD PTR [eax],0x100b2684
100181ce:	xor    ecx,ecx
100181d0:	mov    DWORD PTR [eax+0x14],0x2
100181d7:	mov    DWORD PTR [eax+0xc],ecx
100181da:	mov    DWORD PTR [eax+0x10],ecx
100181dd:	mov    WORD PTR [eax+0x18],cx
100181e1:	mov    WORD PTR [eax+0x1a],cx
100181e5:	mov    DWORD PTR [eax+0x8],eax
100181e8:	ret    0x4
100181eb:	mov    eax,DWORD PTR [esp+0x8]
100181ef:	mul    DWORD PTR [esp+0xc]
100181f3:	test   edx,edx
100181f5:	ja     0x100181fc
100181f7:	cmp    eax,0xffffffff
100181fa:	jbe    0x10018202
100181fc:	mov    eax,0x80070057
10018201:	ret    
10018202:	mov    ecx,DWORD PTR [esp+0x4]
10018206:	mov    DWORD PTR [ecx],eax
10018208:	xor    eax,eax
1001820a:	ret    
1001820b:	mov    ecx,DWORD PTR [ecx+0x4]
1001820e:	mov    eax,DWORD PTR [ecx]
10018210:	jmp    DWORD PTR [eax+0x4]
10018213:	xor    edx,edx
10018215:	lea    eax,[ecx+0x14]
10018218:	inc    edx
10018219:	lock xadd DWORD PTR [eax],edx
1001821d:	lea    eax,[ecx+0x8]
10018220:	ret    
10018221:	mov    eax,ecx
10018223:	ret    
10018224:	test   BYTE PTR [esp+0x4],0x1
10018229:	push   esi
1001822a:	mov    esi,ecx
1001822c:	mov    DWORD PTR [esi],0x100b2684
10018232:	je     0x1001823b
10018234:	push   esi
10018235:	call   0x1001876e
1001823a:	pop    ecx
1001823b:	mov    eax,esi
1001823d:	pop    esi
1001823e:	ret    0x4
10018241:	mov    eax,DWORD PTR [esp+0x8]
10018245:	mov    ecx,DWORD PTR [esp+0xc]
10018249:	or     edx,0xffffffff
1001824c:	sub    edx,eax
1001824e:	cmp    edx,ecx
10018250:	jae    0x10018258
10018252:	mov    eax,0x80070057
10018257:	ret    
10018258:	add    eax,ecx
1001825a:	mov    ecx,DWORD PTR [esp+0x4]
1001825e:	mov    DWORD PTR [ecx],eax
10018260:	xor    eax,eax
10018262:	ret    
10018263:	push   ebp
10018264:	mov    ebp,esp
10018266:	push   esi
10018267:	mov    esi,DWORD PTR [ebp+0x8]
1001826a:	push   edi
1001826b:	push   DWORD PTR [ebp+0xc]
1001826e:	add    esi,0x8
10018271:	and    esi,0xfffffff8
10018274:	lea    eax,[ebp+0x8]
10018277:	push   esi
10018278:	push   eax
10018279:	mov    edi,ecx
1001827b:	call   0x100181eb
10018280:	add    esp,0xc
10018283:	test   eax,eax
10018285:	jl     0x100182bd
10018287:	push   DWORD PTR [ebp+0x8]
1001828a:	lea    eax,[ebp+0x8]
1001828d:	push   0x10
1001828f:	push   eax
10018290:	call   0x10018241
10018295:	add    esp,0xc
10018298:	test   eax,eax
1001829a:	jl     0x100182bd
1001829c:	mov    ecx,DWORD PTR [edi+0x4]
1001829f:	push   DWORD PTR [ebp+0x8]
100182a2:	mov    eax,DWORD PTR [ecx]
100182a4:	call   DWORD PTR [eax]
100182a6:	test   eax,eax
100182a8:	je     0x100182bd
100182aa:	dec    esi
100182ab:	and    DWORD PTR [eax+0x4],0x0
100182af:	mov    DWORD PTR [eax],edi
100182b1:	mov    DWORD PTR [eax+0xc],0x1
100182b8:	mov    DWORD PTR [eax+0x8],esi
100182bb:	jmp    0x100182bf
100182bd:	xor    eax,eax
100182bf:	pop    edi
100182c0:	pop    esi
100182c1:	pop    ebp
100182c2:	ret    0x8
100182c5:	push   ebp
100182c6:	mov    ebp,esp
100182c8:	push   esi
100182c9:	mov    esi,DWORD PTR [ebp+0xc]
100182cc:	push   edi
100182cd:	push   DWORD PTR [ebp+0x10]
100182d0:	add    esi,0x8
100182d3:	and    esi,0xfffffff8
100182d6:	lea    eax,[ebp+0xc]
100182d9:	push   esi
100182da:	push   eax
100182db:	mov    edi,ecx
100182dd:	call   0x100181eb
100182e2:	add    esp,0xc
100182e5:	test   eax,eax
100182e7:	jl     0x10018316
100182e9:	push   DWORD PTR [ebp+0xc]
100182ec:	lea    eax,[ebp+0xc]
100182ef:	push   0x10
100182f1:	push   eax
100182f2:	call   0x10006cd0
100182f7:	add    esp,0xc
100182fa:	test   eax,eax
100182fc:	jl     0x10018316
100182fe:	push   DWORD PTR [ebp+0xc]
10018301:	mov    ecx,DWORD PTR [edi+0x4]
10018304:	push   DWORD PTR [ebp+0x8]
10018307:	mov    eax,DWORD PTR [ecx]
10018309:	call   DWORD PTR [eax+0x8]
1001830c:	test   eax,eax
1001830e:	je     0x10018316
10018310:	dec    esi
10018311:	mov    DWORD PTR [eax+0x8],esi
10018314:	jmp    0x10018318
10018316:	xor    eax,eax
10018318:	pop    edi
10018319:	pop    esi
1001831a:	pop    ebp
1001831b:	ret    0xc
1001831e:	push   esi
1001831f:	mov    esi,ecx
10018321:	mov    eax,DWORD PTR [esi]
10018323:	test   eax,eax
10018325:	je     0x10018331
10018327:	push   eax
10018328:	call   0x100197d5
1001832d:	and    DWORD PTR [esi],0x0
10018330:	pop    ecx
10018331:	and    DWORD PTR [esi+0x4],0x0
10018335:	and    DWORD PTR [esi+0x8],0x0
10018339:	pop    esi
1001833a:	ret    
1001833b:	push   esi
1001833c:	push   0x18
1001833e:	mov    esi,ecx
10018340:	push   0x0
10018342:	push   esi
10018343:	call   0x100191d0
10018348:	add    esp,0xc
1001834b:	mov    eax,esi
1001834d:	pop    esi
1001834e:	ret    
1001834f:	push   0xc
10018351:	push   0x100bb2d0
10018356:	call   0x1001a750
1001835b:	and    DWORD PTR [ebp-0x4],0x0
1001835f:	push   ecx
10018360:	call   DWORD PTR ds:0x1002f1a0
10018366:	and    DWORD PTR [ebp-0x1c],0x0
1001836a:	jmp    0x1001838a
1001836c:	mov    eax,DWORD PTR [ebp-0x14]
1001836f:	mov    eax,DWORD PTR [eax]
10018371:	mov    eax,DWORD PTR [eax]
10018373:	xor    ecx,ecx
10018375:	cmp    eax,0xc0000017
1001837a:	sete   cl
1001837d:	mov    eax,ecx
1001837f:	ret    
10018380:	mov    esp,DWORD PTR [ebp-0x18]
10018383:	mov    DWORD PTR [ebp-0x1c],0x8007000e
1001838a:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018391:	mov    eax,DWORD PTR [ebp-0x1c]
10018394:	call   0x1001a795
10018399:	ret    
1001839a:	mov    eax,DWORD PTR [esp+0x4]
1001839e:	test   eax,eax
100183a0:	jne    0x100183a9
100183a2:	mov    eax,0x80070057
100183a7:	jmp    0x100183ba
100183a9:	cmp    DWORD PTR [eax],0x2c
100183ac:	jne    0x100183a2
100183ae:	and    DWORD PTR [eax+0x1c],0x0
100183b2:	lea    ecx,[eax+0x4]
100183b5:	call   0x1001834f
100183ba:	ret    0x4
100183bd:	mov    eax,DWORD PTR [esp+0x4]
100183c1:	test   eax,eax
100183c3:	jl     0x100183d2
100183c5:	cmp    eax,DWORD PTR [ecx+0x4]
100183c8:	jge    0x100183d2
100183ca:	mov    ecx,DWORD PTR [ecx]
100183cc:	lea    eax,[ecx+eax*2]
100183cf:	ret    0x4
100183d2:	push   0x0
100183d4:	push   0x0
100183d6:	push   0x1
100183d8:	push   0xc000008c
100183dd:	call   DWORD PTR ds:0x1002f194
100183e3:	int3   
100183e4:	mov    eax,DWORD PTR [esp+0x4]
100183e8:	test   eax,eax
100183ea:	jl     0x100183f9
100183ec:	cmp    eax,DWORD PTR [ecx+0x4]
100183ef:	jge    0x100183f9
100183f1:	mov    ecx,DWORD PTR [ecx]
100183f3:	lea    eax,[ecx+eax*4]
100183f6:	ret    0x4
100183f9:	push   0x0
100183fb:	push   0x0
100183fd:	push   0x1
100183ff:	push   0xc000008c
10018404:	call   DWORD PTR ds:0x1002f194
1001840a:	int3   
1001840b:	push   esi
1001840c:	mov    esi,ecx
1001840e:	lea    ecx,[esi+0x4]
10018411:	call   0x1001833b
10018416:	xor    eax,eax
10018418:	mov    DWORD PTR [esi+0x20],eax
1001841b:	mov    DWORD PTR [esi+0x24],eax
1001841e:	mov    DWORD PTR [esi+0x28],eax
10018421:	mov    eax,esi
10018423:	pop    esi
10018424:	ret    
10018425:	push   esi
10018426:	mov    esi,DWORD PTR [esp+0x8]
1001842a:	test   esi,esi
1001842c:	jne    0x10018435
1001842e:	mov    eax,0x80070057
10018433:	jmp    0x10018481
10018435:	mov    eax,DWORD PTR [esi]
10018437:	test   eax,eax
10018439:	je     0x1001847f
1001843b:	cmp    eax,0x2c
1001843e:	jne    0x1001842e
10018440:	push   edi
10018441:	xor    edi,edi
10018443:	cmp    DWORD PTR [esi+0x24],edi
10018446:	jle    0x10018469
10018448:	push   ebx
10018449:	lea    ebx,[esi+0x20]
1001844c:	push   edi
1001844d:	mov    ecx,ebx
1001844f:	call   0x100183bd
10018454:	movzx  eax,WORD PTR [eax]
10018457:	push   DWORD PTR [esp+0x14]
1001845b:	push   eax
1001845c:	call   DWORD PTR ds:0x1002f1fc
10018462:	inc    edi
10018463:	cmp    edi,DWORD PTR [esi+0x24]
10018466:	jl     0x1001844c
10018468:	pop    ebx
10018469:	lea    ecx,[esi+0x20]
1001846c:	call   0x1001831e
10018471:	lea    eax,[esi+0x4]
10018474:	push   eax
10018475:	call   DWORD PTR ds:0x1002f1a4
1001847b:	and    DWORD PTR [esi],0x0
1001847e:	pop    edi
1001847f:	xor    eax,eax
10018481:	pop    esi
10018482:	ret    0x8
10018485:	push   esi
10018486:	mov    esi,ecx
10018488:	cmp    BYTE PTR [esi+0x4],0x0
1001848c:	je     0x1001849a
1001848e:	push   DWORD PTR [esi]
10018490:	call   DWORD PTR ds:0x1002f19c
10018496:	mov    BYTE PTR [esi+0x4],0x0
1001849a:	pop    esi
1001849b:	ret    
1001849c:	push   esi
1001849d:	mov    esi,ecx
1001849f:	lea    ecx,[esi+0x18]
100184a2:	call   0x1001833b
100184a7:	xor    eax,eax
100184a9:	mov    DWORD PTR [esi+0x30],eax
100184ac:	mov    DWORD PTR [esi+0x34],eax
100184af:	mov    DWORD PTR [esi+0x38],eax
100184b2:	mov    eax,esi
100184b4:	pop    esi
100184b5:	ret    
100184b6:	push   esi
100184b7:	mov    esi,ecx
100184b9:	lea    eax,[esi+0x18]
100184bc:	push   eax
100184bd:	call   DWORD PTR ds:0x1002f1a4
100184c3:	lea    ecx,[esi+0x30]
100184c6:	pop    esi
100184c7:	jmp    0x1001831e
100184cc:	push   ebp
100184cd:	mov    ebp,esp
100184cf:	push   ecx
100184d0:	push   ecx
100184d1:	push   esi
100184d2:	mov    esi,ecx
100184d4:	lea    eax,[esi+0x18]
100184d7:	push   eax
100184d8:	mov    DWORD PTR [ebp-0x8],eax
100184db:	call   DWORD PTR ds:0x1002f198
100184e1:	mov    eax,DWORD PTR [esi+0x34]
100184e4:	mov    ecx,DWORD PTR [ebp+0x8]
100184e7:	cmp    ecx,eax
100184e9:	mov    BYTE PTR [ebp-0x4],0x1
100184ed:	jg     0x10018513
100184ef:	test   ecx,ecx
100184f1:	jl     0x10018513
100184f3:	cmp    ecx,eax
100184f5:	jne    0x10018506
100184f7:	mov    esi,DWORD PTR [esi+0x8]
100184fa:	lea    ecx,[ebp-0x8]
100184fd:	call   0x10018485
10018502:	mov    eax,esi
10018504:	jmp    0x1001851d
10018506:	push   ecx
10018507:	lea    ecx,[esi+0x30]
1001850a:	call   0x100183e4
1001850f:	mov    esi,DWORD PTR [eax]
10018511:	jmp    0x100184fa
10018513:	lea    ecx,[ebp-0x8]
10018516:	call   0x10018485
1001851b:	xor    eax,eax
1001851d:	pop    esi
1001851e:	leave  
1001851f:	ret    0x4
10018522:	push   esi
10018523:	mov    esi,ecx
10018525:	call   0x1001840b
1001852a:	push   esi
1001852b:	mov    DWORD PTR [esi],0x2c
10018531:	call   0x1001839a
10018536:	test   eax,eax
10018538:	jge    0x10018544
1001853a:	mov    BYTE PTR ds:0x100c9d38,0x1
10018541:	and    DWORD PTR [esi],0x0
10018544:	mov    eax,esi
10018546:	pop    esi
10018547:	ret    
10018548:	push   ebp
10018549:	lea    ebp,[esp-0x78]
1001854d:	sub    esp,0x98
10018553:	mov    eax,ds:0x100c7654
10018558:	xor    eax,ebp
1001855a:	mov    DWORD PTR [ebp+0x74],eax
1001855d:	push   esi
1001855e:	mov    esi,ecx
10018560:	call   0x1001849c
10018565:	mov    eax,0x10000000
1001856a:	push   0x94
1001856f:	mov    DWORD PTR [esi+0x8],eax
10018572:	mov    DWORD PTR [esi+0x4],eax
10018575:	lea    eax,[ebp-0x20]
10018578:	push   0x0
1001857a:	push   eax
1001857b:	mov    DWORD PTR [esi],0x3c
10018581:	mov    BYTE PTR [esi+0xc],0x0
10018585:	call   0x100191d0
1001858a:	add    esp,0xc
1001858d:	lea    eax,[ebp-0x20]
10018590:	push   eax
10018591:	mov    DWORD PTR [ebp-0x20],0x94
10018598:	call   DWORD PTR ds:0x1002f178
1001859e:	cmp    DWORD PTR [ebp-0x10],0x2
100185a2:	jne    0x100185ac
100185a4:	cmp    DWORD PTR [ebp-0x1c],0x5
100185a8:	jb     0x100185c4
100185aa:	jmp    0x100185c0
100185ac:	cmp    DWORD PTR [ebp-0x10],0x1
100185b0:	jne    0x100185c4
100185b2:	cmp    DWORD PTR [ebp-0x1c],0x4
100185b6:	ja     0x100185c0
100185b8:	jne    0x100185c4
100185ba:	cmp    DWORD PTR [ebp-0x18],0x0
100185be:	jbe    0x100185c4
100185c0:	mov    BYTE PTR [esi+0xc],0x1
100185c4:	lea    ecx,[esi+0x18]
100185c7:	mov    DWORD PTR [esi+0x10],0x800
100185ce:	mov    DWORD PTR [esi+0x14],0x100b26ac
100185d5:	call   0x1001834f
100185da:	test   eax,eax
100185dc:	jge    0x100185e5
100185de:	mov    BYTE PTR ds:0x100c9d38,0x1
100185e5:	mov    ecx,DWORD PTR [ebp+0x74]
100185e8:	mov    eax,esi
100185ea:	xor    ecx,ebp
100185ec:	pop    esi
100185ed:	call   0x10018773
100185f2:	add    ebp,0x78
100185f5:	leave  
100185f6:	ret    
100185f7:	push   esi
100185f8:	push   DWORD PTR ds:0x100c90b0
100185fe:	mov    esi,ecx
10018600:	push   esi
10018601:	call   0x10018425
10018606:	lea    ecx,[esi+0x20]
10018609:	pop    esi
1001860a:	jmp    0x1001831e
1001860f:	push   0x44
10018611:	mov    eax,0x1002d3db
10018616:	call   0x1001ab61
1001861b:	push   0x100b26bc
10018620:	lea    ecx,[ebp-0x28]
10018623:	call   0x10002bc0
10018628:	and    DWORD PTR [ebp-0x4],0x0
1001862c:	lea    eax,[ebp-0x28]
1001862f:	push   eax
10018630:	lea    ecx,[ebp-0x50]
10018633:	call   0x10001400
10018638:	push   0x100bba14
1001863d:	lea    eax,[ebp-0x50]
10018640:	push   eax
10018641:	mov    DWORD PTR [ebp-0x50],0x1002f4f8
10018648:	call   0x10018e6e
1001864d:	int3   
1001864e:	push   0x44
10018650:	mov    eax,0x1002d3fe
10018655:	call   0x1001ab61
1001865a:	push   0x100b26cc
1001865f:	lea    ecx,[ebp-0x28]
10018662:	call   0x10002bc0
10018667:	and    DWORD PTR [ebp-0x4],0x0
1001866b:	lea    eax,[ebp-0x28]
1001866e:	push   eax
1001866f:	lea    ecx,[ebp-0x50]
10018672:	call   0x10001400
10018677:	push   0x100bb9d8
1001867c:	lea    eax,[ebp-0x50]
1001867f:	push   eax
10018680:	mov    DWORD PTR [ebp-0x50],0x1002f51c
10018687:	call   0x10018e6e
1001868c:	int3   
1001868d:	jmp    0x100190b4
10018692:	push   edi
10018693:	push   0x100c75e8
10018698:	mov    edi,ecx
1001869a:	call   DWORD PTR ds:0x1002f0e8
100186a0:	test   eax,eax
100186a2:	jne    0x100186bd
100186a4:	push   esi
100186a5:	mov    esi,0x100c9158
100186aa:	push   esi
100186ab:	call   0x1001871d
100186b0:	add    esi,0x18
100186b3:	cmp    esi,0x100c91b8
100186b9:	pop    ecx
100186ba:	jl     0x100186aa
100186bc:	pop    esi
100186bd:	mov    eax,edi
100186bf:	pop    edi
100186c0:	ret    
100186c1:	push   0x100c75e8
100186c6:	call   DWORD PTR ds:0x1002f0f0
100186cc:	test   eax,eax
100186ce:	jge    0x100186e9
100186d0:	push   esi
100186d1:	mov    esi,0x100c9158
100186d6:	push   esi
100186d7:	call   0x10018728
100186dc:	add    esi,0x18
100186df:	cmp    esi,0x100c91b8
100186e5:	pop    ecx
100186e6:	jl     0x100186d6
100186e8:	pop    esi
100186e9:	ret    
100186ea:	mov    eax,DWORD PTR [esp+0x4]
100186ee:	and    eax,0x3
100186f1:	push   esi
100186f2:	mov    esi,ecx
100186f4:	mov    DWORD PTR [esi],eax
100186f6:	imul   eax,eax,0x18
100186f9:	add    eax,0x100c9158
100186fe:	push   eax
100186ff:	call   0x10018733
10018704:	pop    ecx
10018705:	mov    eax,esi
10018707:	pop    esi
10018708:	ret    0x4
1001870b:	mov    eax,DWORD PTR [ecx]
1001870d:	imul   eax,eax,0x18
10018710:	add    eax,0x100c9158
10018715:	push   eax
10018716:	call   0x1001873e
1001871b:	pop    ecx
1001871c:	ret    
1001871d:	push   DWORD PTR [esp+0x4]
10018721:	call   DWORD PTR ds:0x1002f1a0
10018727:	ret    
10018728:	push   DWORD PTR [esp+0x4]
1001872c:	call   DWORD PTR ds:0x1002f1a4
10018732:	ret    
10018733:	push   DWORD PTR [esp+0x4]
10018737:	call   DWORD PTR ds:0x1002f198
1001873d:	ret    
1001873e:	push   DWORD PTR [esp+0x4]
10018742:	call   DWORD PTR ds:0x1002f19c
10018748:	ret    
10018749:	jmp    0x10018763
1001874b:	mov    ecx,DWORD PTR [eax*4+0x100c9204]
10018752:	inc    eax
10018753:	test   ecx,ecx
10018755:	mov    ds:0x100c75f4,eax
1001875a:	je     0x10018768
1001875c:	call   DWORD PTR [eax*4+0x100c9200]
10018763:	mov    eax,ds:0x100c75f4
10018768:	cmp    eax,0xa
1001876b:	jb     0x1001874b
1001876d:	ret    
1001876e:	jmp    0x100197d5
10018773:	cmp    ecx,DWORD PTR ds:0x100c7654
10018779:	jne    0x1001877d
1001877b:	repz ret 
1001877d:	jmp    0x1001b499
10018782:	int3   
10018783:	int3   
10018784:	int3   
10018785:	int3   
10018786:	int3   
10018787:	int3   
10018788:	int3   
10018789:	int3   
1001878a:	int3   
1001878b:	int3   
1001878c:	int3   
1001878d:	int3   
1001878e:	int3   
1001878f:	int3   
10018790:	push   ecx
10018791:	lea    ecx,[esp+0x8]
10018795:	sub    ecx,eax
10018797:	and    ecx,0xf
1001879a:	add    eax,ecx
1001879c:	sbb    ecx,ecx
1001879e:	or     eax,ecx
100187a0:	pop    ecx
100187a1:	jmp    0x100191a0
100187a6:	push   ecx
100187a7:	lea    ecx,[esp+0x8]
100187ab:	sub    ecx,eax
100187ad:	and    ecx,0x7
100187b0:	add    eax,ecx
100187b2:	sbb    ecx,ecx
100187b4:	or     eax,ecx
100187b6:	pop    ecx
100187b7:	jmp    0x100191a0
100187bc:	push   ebp
100187bd:	mov    ebp,esp
100187bf:	push   ecx
100187c0:	push   ebx
100187c1:	mov    eax,DWORD PTR [ebp+0xc]
100187c4:	add    eax,0xc
100187c7:	mov    DWORD PTR [ebp-0x4],eax
100187ca:	mov    ebx,DWORD PTR fs:0x0
100187d1:	mov    eax,DWORD PTR [ebx]
100187d3:	mov    fs:0x0,eax
100187d9:	mov    eax,DWORD PTR [ebp+0x8]
100187dc:	mov    ebx,DWORD PTR [ebp+0xc]
100187df:	mov    ebp,DWORD PTR [ebp-0x4]
100187e2:	mov    esp,DWORD PTR [ebx-0x4]
100187e5:	jmp    eax
100187e7:	pop    ebx
100187e8:	leave  
100187e9:	ret    0x8
100187ec:	pop    eax
100187ed:	pop    ecx
100187ee:	xchg   DWORD PTR [esp],eax
100187f1:	jmp    eax
100187f3:	push   ebp
100187f4:	mov    ebp,esp
100187f6:	push   ecx
100187f7:	push   ecx
100187f8:	push   ebx
100187f9:	push   esi
100187fa:	push   edi
100187fb:	mov    esi,DWORD PTR fs:0x0
10018802:	mov    DWORD PTR [ebp-0x4],esi
10018805:	mov    DWORD PTR [ebp-0x8],0x1001881c
1001880c:	push   0x0
1001880e:	push   DWORD PTR [ebp+0xc]
10018811:	push   DWORD PTR [ebp-0x8]
10018814:	push   DWORD PTR [ebp+0x8]
10018817:	call   0x1002cd0e
1001881c:	mov    eax,DWORD PTR [ebp+0xc]
1001881f:	mov    eax,DWORD PTR [eax+0x4]
10018822:	and    eax,0xfffffffd
10018825:	mov    ecx,DWORD PTR [ebp+0xc]
10018828:	mov    DWORD PTR [ecx+0x4],eax
1001882b:	mov    edi,DWORD PTR fs:0x0
10018832:	mov    ebx,DWORD PTR [ebp-0x4]
10018835:	mov    DWORD PTR [ebx],edi
10018837:	mov    DWORD PTR fs:0x0,ebx
1001883e:	pop    edi
1001883f:	pop    esi
10018840:	pop    ebx
10018841:	leave  
10018842:	ret    0x8
10018845:	push   ebp
10018846:	mov    ebp,esp
10018848:	sub    esp,0x8
1001884b:	push   ebx
1001884c:	push   esi
1001884d:	push   edi
1001884e:	cld    
1001884f:	mov    DWORD PTR [ebp-0x4],eax
10018852:	xor    eax,eax
10018854:	push   eax
10018855:	push   eax
10018856:	push   eax
10018857:	push   DWORD PTR [ebp-0x4]
1001885a:	push   DWORD PTR [ebp+0x14]
1001885d:	push   DWORD PTR [ebp+0x10]
10018860:	push   DWORD PTR [ebp+0xc]
10018863:	push   DWORD PTR [ebp+0x8]
10018866:	call   0x1001c143
1001886b:	add    esp,0x20
1001886e:	mov    DWORD PTR [ebp-0x8],eax
10018871:	pop    edi
10018872:	pop    esi
10018873:	pop    ebx
10018874:	mov    eax,DWORD PTR [ebp-0x8]
10018877:	mov    esp,ebp
10018879:	pop    ebp
1001887a:	ret    
1001887b:	push   esi
1001887c:	cld    
1001887d:	mov    esi,DWORD PTR [esp+0xc]
10018881:	mov    ecx,DWORD PTR [esi+0x8]
10018884:	xor    ecx,esi
10018886:	call   0x10018773
1001888b:	push   0x0
1001888d:	push   esi
1001888e:	push   DWORD PTR [esi+0x14]
10018891:	push   DWORD PTR [esi+0xc]
10018894:	push   0x0
10018896:	push   DWORD PTR [esp+0x24]
1001889a:	push   DWORD PTR [esi+0x10]
1001889d:	push   DWORD PTR [esp+0x24]
100188a1:	call   0x1001c143
100188a6:	add    esp,0x20
100188a9:	pop    esi
100188aa:	ret    
100188ab:	push   ebp
100188ac:	mov    ebp,esp
100188ae:	sub    esp,0x38
100188b1:	push   ebx
100188b2:	cmp    DWORD PTR [ebp+0x8],0x123
100188b9:	jne    0x100188cd
100188bb:	mov    eax,0x10018954
100188c0:	mov    ecx,DWORD PTR [ebp+0xc]
100188c3:	mov    DWORD PTR [ecx],eax
100188c5:	xor    eax,eax
100188c7:	inc    eax
100188c8:	jmp    0x1001897d
100188cd:	and    DWORD PTR [ebp-0x28],0x0
100188d1:	mov    DWORD PTR [ebp-0x24],0x10018980
100188d8:	mov    eax,ds:0x100c7654
100188dd:	lea    ecx,[ebp-0x28]
100188e0:	xor    eax,ecx
100188e2:	mov    DWORD PTR [ebp-0x20],eax
100188e5:	mov    eax,DWORD PTR [ebp+0x18]
100188e8:	mov    DWORD PTR [ebp-0x1c],eax
100188eb:	mov    eax,DWORD PTR [ebp+0xc]
100188ee:	mov    DWORD PTR [ebp-0x18],eax
100188f1:	mov    eax,DWORD PTR [ebp+0x1c]
100188f4:	mov    DWORD PTR [ebp-0x14],eax
100188f7:	mov    eax,DWORD PTR [ebp+0x20]
100188fa:	mov    DWORD PTR [ebp-0x10],eax
100188fd:	and    DWORD PTR [ebp-0xc],0x0
10018901:	and    DWORD PTR [ebp-0x8],0x0
10018905:	and    DWORD PTR [ebp-0x4],0x0
10018909:	mov    DWORD PTR [ebp-0xc],esp
1001890c:	mov    DWORD PTR [ebp-0x8],ebp
1001890f:	mov    eax,fs:0x0
10018915:	mov    DWORD PTR [ebp-0x28],eax
10018918:	lea    eax,[ebp-0x28]
1001891b:	mov    fs:0x0,eax
10018921:	mov    DWORD PTR [ebp-0x38],0x1
10018928:	mov    eax,DWORD PTR [ebp+0x8]
1001892b:	mov    DWORD PTR [ebp-0x34],eax
1001892e:	mov    eax,DWORD PTR [ebp+0x10]
10018931:	mov    DWORD PTR [ebp-0x30],eax
10018934:	call   0x1001c526
10018939:	mov    eax,DWORD PTR [eax+0x80]
1001893f:	mov    DWORD PTR [ebp-0x2c],eax
10018942:	lea    eax,[ebp-0x34]
10018945:	push   eax
10018946:	mov    eax,DWORD PTR [ebp+0x8]
10018949:	push   DWORD PTR [eax]
1001894b:	call   DWORD PTR [ebp-0x2c]
1001894e:	pop    ecx
1001894f:	pop    ecx
10018950:	and    DWORD PTR [ebp-0x38],0x0
10018954:	cmp    DWORD PTR [ebp-0x4],0x0
10018958:	je     0x10018971
1001895a:	mov    ebx,DWORD PTR fs:0x0
10018961:	mov    eax,DWORD PTR [ebx]
10018963:	mov    ebx,DWORD PTR [ebp-0x28]
10018966:	mov    DWORD PTR [ebx],eax
10018968:	mov    DWORD PTR fs:0x0,ebx
1001896f:	jmp    0x1001897a
10018971:	mov    eax,DWORD PTR [ebp-0x28]
10018974:	mov    fs:0x0,eax
1001897a:	mov    eax,DWORD PTR [ebp-0x38]
1001897d:	pop    ebx
1001897e:	leave  
1001897f:	ret    
10018980:	push   ebp
10018981:	mov    ebp,esp
10018983:	push   ecx
10018984:	push   ebx
10018985:	cld    
10018986:	mov    eax,DWORD PTR [ebp+0xc]
10018989:	mov    ecx,DWORD PTR [eax+0x8]
1001898c:	xor    ecx,DWORD PTR [ebp+0xc]
1001898f:	call   0x10018773
10018994:	mov    eax,DWORD PTR [ebp+0x8]
10018997:	mov    eax,DWORD PTR [eax+0x4]
1001899a:	and    eax,0x66
1001899d:	je     0x100189b0
1001899f:	mov    eax,DWORD PTR [ebp+0xc]
100189a2:	mov    DWORD PTR [eax+0x24],0x1
100189a9:	xor    eax,eax
100189ab:	inc    eax
100189ac:	jmp    0x10018a1a
100189ae:	jmp    0x10018a1a
100189b0:	push   0x1
100189b2:	mov    eax,DWORD PTR [ebp+0xc]
100189b5:	push   DWORD PTR [eax+0x18]
100189b8:	mov    eax,DWORD PTR [ebp+0xc]
100189bb:	push   DWORD PTR [eax+0x14]
100189be:	mov    eax,DWORD PTR [ebp+0xc]
100189c1:	push   DWORD PTR [eax+0xc]
100189c4:	push   0x0
100189c6:	push   DWORD PTR [ebp+0x10]
100189c9:	mov    eax,DWORD PTR [ebp+0xc]
100189cc:	push   DWORD PTR [eax+0x10]
100189cf:	push   DWORD PTR [ebp+0x8]
100189d2:	call   0x1001c143
100189d7:	add    esp,0x20
100189da:	mov    eax,DWORD PTR [ebp+0xc]
100189dd:	cmp    DWORD PTR [eax+0x24],0x0
100189e1:	jne    0x100189ee
100189e3:	push   DWORD PTR [ebp+0x8]
100189e6:	push   DWORD PTR [ebp+0xc]
100189e9:	call   0x100187f3
100189ee:	push   0x0
100189f0:	push   0x0
100189f2:	push   0x0
100189f4:	push   0x0
100189f6:	push   0x0
100189f8:	lea    eax,[ebp-0x4]
100189fb:	push   eax
100189fc:	push   0x123
10018a01:	call   0x100188ab
10018a06:	add    esp,0x1c
10018a09:	mov    eax,DWORD PTR [ebp-0x4]
10018a0c:	mov    ebx,DWORD PTR [ebp+0xc]
10018a0f:	mov    esp,DWORD PTR [ebx+0x1c]
10018a12:	mov    ebp,DWORD PTR [ebx+0x20]
10018a15:	jmp    eax
10018a17:	xor    eax,eax
10018a19:	inc    eax
10018a1a:	pop    ebx
10018a1b:	leave  
10018a1c:	ret    
10018a1d:	push   ebp
10018a1e:	mov    ebp,esp
10018a20:	push   ecx
10018a21:	push   ebx
10018a22:	push   esi
10018a23:	push   edi
10018a24:	mov    edi,DWORD PTR [ebp+0x8]
10018a27:	mov    eax,DWORD PTR [edi+0x10]
10018a2a:	mov    esi,DWORD PTR [edi+0xc]
10018a2d:	mov    DWORD PTR [ebp-0x4],eax
10018a30:	mov    ebx,esi
10018a32:	jmp    0x10018a61
10018a34:	cmp    esi,0xffffffff
10018a37:	jne    0x10018a3e
10018a39:	call   0x1001c898
10018a3e:	mov    ecx,DWORD PTR [ebp-0x4]
10018a41:	dec    esi
10018a42:	mov    eax,esi
10018a44:	imul   eax,eax,0x14
10018a47:	add    eax,ecx
10018a49:	mov    ecx,DWORD PTR [ebp+0x10]
10018a4c:	cmp    DWORD PTR [eax+0x4],ecx
10018a4f:	jge    0x10018a56
10018a51:	cmp    ecx,DWORD PTR [eax+0x8]
10018a54:	jle    0x10018a5b
10018a56:	cmp    esi,0xffffffff
10018a59:	jne    0x10018a64
10018a5b:	dec    DWORD PTR [ebp+0xc]
10018a5e:	mov    ebx,DWORD PTR [ebp+0x8]
10018a61:	mov    DWORD PTR [ebp+0x8],esi
10018a64:	cmp    DWORD PTR [ebp+0xc],0x0
10018a68:	jge    0x10018a34
10018a6a:	mov    eax,DWORD PTR [ebp+0x14]
10018a6d:	inc    esi
10018a6e:	mov    DWORD PTR [eax],esi
10018a70:	mov    eax,DWORD PTR [ebp+0x18]
10018a73:	mov    DWORD PTR [eax],ebx
10018a75:	cmp    ebx,DWORD PTR [edi+0xc]
10018a78:	ja     0x10018a7e
10018a7a:	cmp    esi,ebx
10018a7c:	jbe    0x10018a83
10018a7e:	call   0x1001c898
10018a83:	mov    eax,esi
10018a85:	imul   eax,eax,0x14
10018a88:	add    eax,DWORD PTR [ebp-0x4]
10018a8b:	pop    edi
10018a8c:	pop    esi
10018a8d:	pop    ebx
10018a8e:	leave  
10018a8f:	ret    
10018a90:	mov    eax,DWORD PTR [esp+0x8]
10018a94:	push   esi
10018a95:	mov    esi,DWORD PTR [esp+0x8]
10018a99:	mov    DWORD PTR [esi],eax
10018a9b:	call   0x1001c526
10018aa0:	mov    eax,DWORD PTR [eax+0x98]
10018aa6:	mov    DWORD PTR [esi+0x4],eax
10018aa9:	call   0x1001c526
10018aae:	mov    DWORD PTR [eax+0x98],esi
10018ab4:	mov    eax,esi
10018ab6:	pop    esi
10018ab7:	ret    
10018ab8:	call   0x1001c526
10018abd:	mov    eax,DWORD PTR [eax+0x98]
10018ac3:	jmp    0x10018ad0
10018ac5:	mov    ecx,DWORD PTR [eax]
10018ac7:	cmp    ecx,DWORD PTR [esp+0x4]
10018acb:	je     0x10018ad6
10018acd:	mov    eax,DWORD PTR [eax+0x4]
10018ad0:	test   eax,eax
10018ad2:	jne    0x10018ac5
10018ad4:	inc    eax
10018ad5:	ret    
10018ad6:	xor    eax,eax
10018ad8:	ret    
10018ad9:	push   esi
10018ada:	call   0x1001c526
10018adf:	mov    esi,DWORD PTR [esp+0x8]
10018ae3:	cmp    esi,DWORD PTR [eax+0x98]
10018ae9:	jne    0x10018afb
10018aeb:	call   0x1001c526
10018af0:	mov    ecx,DWORD PTR [esi+0x4]
10018af3:	mov    DWORD PTR [eax+0x98],ecx
10018af9:	pop    esi
10018afa:	ret    
10018afb:	call   0x1001c526
10018b00:	mov    eax,DWORD PTR [eax+0x98]
10018b06:	jmp    0x10018b11
10018b08:	mov    ecx,DWORD PTR [eax+0x4]
10018b0b:	cmp    esi,ecx
10018b0d:	je     0x10018b1d
10018b0f:	mov    eax,ecx
10018b11:	cmp    DWORD PTR [eax+0x4],0x0
10018b15:	jne    0x10018b08
10018b17:	pop    esi
10018b18:	jmp    0x1001c898
10018b1d:	mov    ecx,DWORD PTR [esi+0x4]
10018b20:	mov    DWORD PTR [eax+0x4],ecx
10018b23:	pop    esi
10018b24:	ret    
10018b25:	push   ebp
10018b26:	mov    ebp,esp
10018b28:	sub    esp,0x18
10018b2b:	mov    eax,ds:0x100c7654
10018b30:	and    DWORD PTR [ebp-0x18],0x0
10018b34:	lea    ecx,[ebp-0x18]
10018b37:	xor    eax,ecx
10018b39:	mov    ecx,DWORD PTR [ebp+0x8]
10018b3c:	mov    DWORD PTR [ebp-0x10],eax
10018b3f:	mov    eax,DWORD PTR [ebp+0xc]
10018b42:	mov    DWORD PTR [ebp-0xc],eax
10018b45:	mov    eax,DWORD PTR [ebp+0x14]
10018b48:	inc    eax
10018b49:	mov    DWORD PTR [ebp-0x14],0x1001887b
10018b50:	mov    DWORD PTR [ebp-0x8],ecx
10018b53:	mov    DWORD PTR [ebp-0x4],eax
10018b56:	mov    eax,fs:0x0
10018b5c:	mov    DWORD PTR [ebp-0x18],eax
10018b5f:	lea    eax,[ebp-0x18]
10018b62:	mov    fs:0x0,eax
10018b68:	push   DWORD PTR [ebp+0x18]
10018b6b:	push   ecx
10018b6c:	push   DWORD PTR [ebp+0x10]
10018b6f:	call   0x1001c8e0
10018b74:	mov    ecx,eax
10018b76:	mov    eax,DWORD PTR [ebp-0x18]
10018b79:	mov    fs:0x0,eax
10018b7f:	mov    eax,ecx
10018b81:	leave  
10018b82:	ret    
10018b83:	push   ecx
10018b84:	push   ebx
10018b85:	push   ebp
10018b86:	push   esi
10018b87:	push   edi
10018b88:	push   DWORD PTR ds:0x100cb1b0
10018b8e:	call   0x1001c30a
10018b93:	push   DWORD PTR ds:0x100cb1ac
10018b99:	mov    esi,eax
10018b9b:	mov    DWORD PTR [esp+0x18],esi
10018b9f:	call   0x1001c30a
10018ba4:	mov    edi,eax
10018ba6:	cmp    edi,esi
10018ba8:	pop    ecx
10018ba9:	pop    ecx
10018baa:	jb     0x10018c34
10018bb0:	mov    ebx,edi
10018bb2:	sub    ebx,esi
10018bb4:	lea    ebp,[ebx+0x4]
10018bb7:	cmp    ebp,0x4
10018bba:	jb     0x10018c34
10018bbc:	push   esi
10018bbd:	call   0x1001c92c
10018bc2:	mov    esi,eax
10018bc4:	cmp    esi,ebp
10018bc6:	pop    ecx
10018bc7:	jae    0x10018c13
10018bc9:	mov    eax,0x800
10018bce:	cmp    esi,eax
10018bd0:	jae    0x10018bd4
10018bd2:	mov    eax,esi
10018bd4:	add    eax,esi
10018bd6:	cmp    eax,esi
10018bd8:	jb     0x10018bea
10018bda:	push   eax
10018bdb:	push   DWORD PTR [esp+0x14]
10018bdf:	call   0x1001b037
10018be4:	test   eax,eax
10018be6:	pop    ecx
10018be7:	pop    ecx
10018be8:	jne    0x10018c01
10018bea:	lea    eax,[esi+0x10]
10018bed:	cmp    eax,esi
10018bef:	jb     0x10018c34
10018bf1:	push   eax
10018bf2:	push   DWORD PTR [esp+0x14]
10018bf6:	call   0x1001b037
10018bfb:	test   eax,eax
10018bfd:	pop    ecx
10018bfe:	pop    ecx
10018bff:	je     0x10018c34
10018c01:	sar    ebx,0x2
10018c04:	push   eax
10018c05:	lea    edi,[eax+ebx*4]
10018c08:	call   0x1001c293
10018c0d:	pop    ecx
10018c0e:	mov    ds:0x100cb1b0,eax
10018c13:	push   DWORD PTR [esp+0x18]
10018c17:	call   0x1001c293
10018c1c:	mov    DWORD PTR [edi],eax
10018c1e:	add    edi,0x4
10018c21:	push   edi
10018c22:	call   0x1001c293
10018c27:	pop    ecx
10018c28:	mov    ds:0x100cb1ac,eax
10018c2d:	mov    eax,DWORD PTR [esp+0x1c]
10018c31:	pop    ecx
10018c32:	jmp    0x10018c36
10018c34:	xor    eax,eax
10018c36:	pop    edi
10018c37:	pop    esi
10018c38:	pop    ebp
10018c39:	pop    ebx
10018c3a:	pop    ecx
10018c3b:	ret    
10018c3c:	push   esi
10018c3d:	push   0x4
10018c3f:	push   0x20
10018c41:	call   0x1001afef
10018c46:	mov    esi,eax
10018c48:	push   esi
10018c49:	call   0x1001c293
10018c4e:	add    esp,0xc
10018c51:	test   esi,esi
10018c53:	mov    ds:0x100cb1b0,eax
10018c58:	mov    ds:0x100cb1ac,eax
10018c5d:	jne    0x10018c64
10018c5f:	push   0x18
10018c61:	pop    eax
10018c62:	pop    esi
10018c63:	ret    
10018c64:	and    DWORD PTR [esi],0x0
10018c67:	xor    eax,eax
10018c69:	pop    esi
10018c6a:	ret    
10018c6b:	push   0xc
10018c6d:	push   0x100bb348
10018c72:	call   0x1001a750
10018c77:	call   0x1001ca2e
10018c7c:	and    DWORD PTR [ebp-0x4],0x0
10018c80:	push   DWORD PTR [ebp+0x8]
10018c83:	call   0x10018b83
10018c88:	pop    ecx
10018c89:	mov    DWORD PTR [ebp-0x1c],eax
10018c8c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10018c93:	call   0x10018ca1
10018c98:	mov    eax,DWORD PTR [ebp-0x1c]
10018c9b:	call   0x1001a795
10018ca0:	ret    
10018ca1:	call   0x1001ca37
10018ca6:	ret    
10018ca7:	push   DWORD PTR [esp+0x4]
10018cab:	call   0x10018c6b
10018cb0:	neg    eax
10018cb2:	sbb    eax,eax
10018cb4:	neg    eax
10018cb6:	pop    ecx
10018cb7:	dec    eax
10018cb8:	ret    
10018cb9:	mov    eax,DWORD PTR [esp+0x4]
10018cbd:	mov    ds:0x100c9230,eax
10018cc2:	ret    
10018cc3:	push   ebp
10018cc4:	lea    ebp,[esp-0x2a8]
10018ccb:	sub    esp,0x328
10018cd1:	mov    eax,ds:0x100c7654
10018cd6:	xor    eax,ebp
10018cd8:	mov    DWORD PTR [ebp+0x2a4],eax
10018cde:	push   esi
10018cdf:	mov    DWORD PTR [ebp+0x88],eax
10018ce5:	mov    DWORD PTR [ebp+0x84],ecx
10018ceb:	mov    DWORD PTR [ebp+0x80],edx
10018cf1:	mov    DWORD PTR [ebp+0x7c],ebx
10018cf4:	mov    DWORD PTR [ebp+0x78],esi
10018cf7:	mov    DWORD PTR [ebp+0x74],edi
10018cfa:	data16 mov WORD PTR [ebp+0xa0],ss
10018d01:	data16 mov WORD PTR [ebp+0x94],cs
10018d08:	data16 mov WORD PTR [ebp+0x70],ds
10018d0c:	data16 mov WORD PTR [ebp+0x6c],es
10018d10:	data16 mov WORD PTR [ebp+0x68],fs
10018d14:	data16 mov WORD PTR [ebp+0x64],gs
10018d18:	pushf  
10018d19:	pop    DWORD PTR [ebp+0x98]
10018d1f:	mov    esi,DWORD PTR [ebp+0x2ac]
10018d25:	lea    eax,[ebp+0x2ac]
10018d2b:	mov    DWORD PTR [ebp+0x9c],eax
10018d31:	mov    DWORD PTR [ebp-0x28],0x10001
10018d38:	mov    DWORD PTR [ebp+0x90],esi
10018d3e:	mov    eax,DWORD PTR [eax-0x4]
10018d41:	push   0x50
10018d43:	mov    DWORD PTR [ebp+0x8c],eax
10018d49:	lea    eax,[ebp-0x80]
10018d4c:	push   0x0
10018d4e:	push   eax
10018d4f:	call   0x100191d0
10018d54:	lea    eax,[ebp-0x80]
10018d57:	mov    DWORD PTR [ebp-0x30],eax
10018d5a:	lea    eax,[ebp-0x28]
10018d5d:	add    esp,0xc
10018d60:	mov    DWORD PTR [ebp-0x80],0xc000000d
10018d67:	mov    DWORD PTR [ebp-0x74],esi
10018d6a:	mov    DWORD PTR [ebp-0x2c],eax
10018d6d:	call   DWORD PTR ds:0x1002f1b8
10018d73:	push   0x0
10018d75:	mov    esi,eax
10018d77:	call   DWORD PTR ds:0x1002f1b4
10018d7d:	lea    eax,[ebp-0x30]
10018d80:	push   eax
10018d81:	call   DWORD PTR ds:0x1002f1b0
10018d87:	test   eax,eax
10018d89:	jne    0x10018d97
10018d8b:	test   esi,esi
10018d8d:	jne    0x10018d97
10018d8f:	push   0x2
10018d91:	call   0x1001cccb
10018d96:	pop    ecx
10018d97:	push   0xc000000d
10018d9c:	call   DWORD PTR ds:0x1002f0e4
10018da2:	push   eax
10018da3:	call   DWORD PTR ds:0x1002f1ac
10018da9:	mov    ecx,DWORD PTR [ebp+0x2a4]
10018daf:	xor    ecx,ebp
10018db1:	pop    esi
10018db2:	call   0x10018773
10018db7:	add    ebp,0x2a8
10018dbd:	leave  
10018dbe:	ret    
10018dbf:	push   ebp
10018dc0:	mov    ebp,esp
10018dc2:	push   DWORD PTR ds:0x100c9230
10018dc8:	call   0x1001c30a
10018dcd:	test   eax,eax
10018dcf:	pop    ecx
10018dd0:	je     0x10018dd5
10018dd2:	pop    ebp
10018dd3:	jmp    eax
10018dd5:	push   0x2
10018dd7:	call   0x1001cccb
10018ddc:	pop    ecx
10018ddd:	pop    ebp
10018dde:	jmp    0x10018cc3
10018de3:	xor    eax,eax
10018de5:	push   eax
10018de6:	push   eax
10018de7:	push   eax
10018de8:	push   eax
10018de9:	push   eax
10018dea:	call   0x10018dbf
10018def:	add    esp,0x14
10018df2:	ret    
10018df3:	push   ebp
10018df4:	mov    ebp,esp
10018df6:	push   esi
10018df7:	mov    esi,DWORD PTR [ebp+0x14]
10018dfa:	push   edi
10018dfb:	xor    edi,edi
10018dfd:	cmp    esi,edi
10018dff:	jne    0x10018e05
10018e01:	xor    eax,eax
10018e03:	jmp    0x10018e6a
10018e05:	cmp    DWORD PTR [ebp+0x8],edi
10018e08:	jne    0x10018e25
10018e0a:	call   0x1001cd0e
10018e0f:	push   0x16
10018e11:	pop    esi
10018e12:	mov    DWORD PTR [eax],esi
10018e14:	push   edi
10018e15:	push   edi
10018e16:	push   edi
10018e17:	push   edi
10018e18:	push   edi
10018e19:	call   0x10018dbf
10018e1e:	add    esp,0x14
10018e21:	mov    eax,esi
10018e23:	jmp    0x10018e6a
10018e25:	cmp    DWORD PTR [ebp+0x10],edi
10018e28:	je     0x10018e40
10018e2a:	cmp    DWORD PTR [ebp+0xc],esi
10018e2d:	jb     0x10018e40
10018e2f:	push   esi
10018e30:	push   DWORD PTR [ebp+0x10]
10018e33:	push   DWORD PTR [ebp+0x8]
10018e36:	call   0x10019470
10018e3b:	add    esp,0xc
10018e3e:	jmp    0x10018e01
10018e40:	push   DWORD PTR [ebp+0xc]
10018e43:	push   edi
10018e44:	push   DWORD PTR [ebp+0x8]
10018e47:	call   0x100191d0
10018e4c:	add    esp,0xc
10018e4f:	cmp    DWORD PTR [ebp+0x10],edi
10018e52:	je     0x10018e0a
10018e54:	cmp    DWORD PTR [ebp+0xc],esi
10018e57:	jae    0x10018e67
10018e59:	call   0x1001cd0e
10018e5e:	push   0x22
10018e60:	pop    ecx
10018e61:	mov    DWORD PTR [eax],ecx
10018e63:	mov    esi,ecx
10018e65:	jmp    0x10018e14
10018e67:	push   0x16
10018e69:	pop    eax
10018e6a:	pop    edi
10018e6b:	pop    esi
10018e6c:	pop    ebp
10018e6d:	ret    
10018e6e:	push   ebp
10018e6f:	mov    ebp,esp
10018e71:	sub    esp,0x20
10018e74:	mov    eax,DWORD PTR [ebp+0x8]
10018e77:	push   esi
10018e78:	push   edi
10018e79:	push   0x8
10018e7b:	pop    ecx
10018e7c:	mov    esi,0x100b26ec
10018e81:	lea    edi,[ebp-0x20]
10018e84:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10018e86:	mov    DWORD PTR [ebp-0x8],eax
10018e89:	mov    eax,DWORD PTR [ebp+0xc]
10018e8c:	test   eax,eax
10018e8e:	pop    edi
10018e8f:	mov    DWORD PTR [ebp-0x4],eax
10018e92:	pop    esi
10018e93:	je     0x10018ea1
10018e95:	test   BYTE PTR [eax],0x8
10018e98:	je     0x10018ea1
10018e9a:	mov    DWORD PTR [ebp-0xc],0x1994000
10018ea1:	lea    eax,[ebp-0xc]
10018ea4:	push   eax
10018ea5:	push   DWORD PTR [ebp-0x10]
10018ea8:	push   DWORD PTR [ebp-0x1c]
10018eab:	push   DWORD PTR [ebp-0x20]
10018eae:	call   DWORD PTR ds:0x1002f194
10018eb4:	leave  
10018eb5:	ret    0x8
10018eb8:	push   ecx
10018eb9:	mov    DWORD PTR [ecx],0x100b2710
10018ebf:	call   0x1001cd52
10018ec4:	pop    ecx
10018ec5:	ret    
10018ec6:	push   esi
10018ec7:	mov    esi,ecx
10018ec9:	call   0x10018eb8
10018ece:	test   BYTE PTR [esp+0x8],0x1
10018ed3:	je     0x10018edc
10018ed5:	push   esi
10018ed6:	call   0x1001876e
10018edb:	pop    ecx
10018edc:	mov    eax,esi
10018ede:	pop    esi
10018edf:	ret    0x4
10018ee2:	mov    eax,DWORD PTR [esp+0x4]
10018ee6:	add    ecx,0x9
10018ee9:	push   ecx
10018eea:	add    eax,0x9
10018eed:	push   eax
10018eee:	call   0x1001cdd0
10018ef3:	neg    eax
10018ef5:	pop    ecx
10018ef6:	sbb    eax,eax
10018ef8:	pop    ecx
10018ef9:	inc    eax
10018efa:	ret    0x4
10018efd:	mov    eax,ecx
10018eff:	and    DWORD PTR [eax+0x4],0x0
10018f03:	and    DWORD PTR [eax+0x8],0x0
10018f07:	mov    DWORD PTR [eax],0x100b2718
10018f0d:	ret    
10018f0e:	push   ebx
10018f0f:	mov    ebx,DWORD PTR [esp+0x8]
10018f13:	push   esi
10018f14:	push   edi
10018f15:	mov    edi,ecx
10018f17:	mov    DWORD PTR [edi],0x100b2718
10018f1d:	mov    eax,DWORD PTR [ebx]
10018f1f:	test   eax,eax
10018f21:	je     0x10018f49
10018f23:	push   eax
10018f24:	call   0x10019010
10018f29:	mov    esi,eax
10018f2b:	inc    esi
10018f2c:	push   esi
10018f2d:	call   0x100198b2
10018f32:	test   eax,eax
10018f34:	pop    ecx
10018f35:	pop    ecx
10018f36:	mov    DWORD PTR [edi+0x4],eax
10018f39:	je     0x10018f4d
10018f3b:	push   DWORD PTR [ebx]
10018f3d:	push   esi
10018f3e:	push   eax
10018f3f:	call   0x1001ce58
10018f44:	add    esp,0xc
10018f47:	jmp    0x10018f4d
10018f49:	and    DWORD PTR [edi+0x4],0x0
10018f4d:	mov    DWORD PTR [edi+0x8],0x1
10018f54:	mov    eax,edi
10018f56:	pop    edi
10018f57:	pop    esi
10018f58:	pop    ebx
10018f59:	ret    0x4
10018f5c:	mov    eax,ecx
10018f5e:	mov    ecx,DWORD PTR [esp+0x4]
10018f62:	mov    DWORD PTR [eax],0x100b2718
10018f68:	mov    ecx,DWORD PTR [ecx]
10018f6a:	and    DWORD PTR [eax+0x8],0x0
10018f6e:	mov    DWORD PTR [eax+0x4],ecx
10018f71:	ret    0x8
10018f74:	push   ebx
10018f75:	mov    ebx,DWORD PTR [esp+0x8]
10018f79:	push   esi
10018f7a:	mov    esi,ecx
10018f7c:	mov    DWORD PTR [esi],0x100b2718
10018f82:	mov    eax,DWORD PTR [ebx+0x8]
10018f85:	mov    DWORD PTR [esi+0x8],eax
10018f88:	test   eax,eax
10018f8a:	mov    eax,DWORD PTR [ebx+0x4]
10018f8d:	push   edi
10018f8e:	je     0x10018fc1
10018f90:	test   eax,eax
10018f92:	je     0x10018fbb
10018f94:	push   eax
10018f95:	call   0x10019010
10018f9a:	mov    edi,eax
10018f9c:	inc    edi
10018f9d:	push   edi
10018f9e:	call   0x100198b2
10018fa3:	test   eax,eax
10018fa5:	pop    ecx
10018fa6:	pop    ecx
10018fa7:	mov    DWORD PTR [esi+0x4],eax
10018faa:	je     0x10018fc4
10018fac:	push   DWORD PTR [ebx+0x4]
10018faf:	push   edi
10018fb0:	push   eax
10018fb1:	call   0x1001ce58
10018fb6:	add    esp,0xc
10018fb9:	jmp    0x10018fc4
10018fbb:	and    DWORD PTR [esi+0x4],0x0
10018fbf:	jmp    0x10018fc4
10018fc1:	mov    DWORD PTR [esi+0x4],eax
10018fc4:	pop    edi
10018fc5:	mov    eax,esi
10018fc7:	pop    esi
10018fc8:	pop    ebx
10018fc9:	ret    0x4
10018fcc:	cmp    DWORD PTR [ecx+0x8],0x0
10018fd0:	mov    DWORD PTR [ecx],0x100b2718
10018fd6:	je     0x10018fe1
10018fd8:	push   DWORD PTR [ecx+0x4]
10018fdb:	call   0x100197d5
10018fe0:	pop    ecx
10018fe1:	ret    
10018fe2:	mov    eax,DWORD PTR [ecx+0x4]
10018fe5:	test   eax,eax
10018fe7:	jne    0x10018fee
10018fe9:	mov    eax,0x100b2720
10018fee:	ret    
10018fef:	push   esi
10018ff0:	mov    esi,ecx
10018ff2:	call   0x10018fcc
10018ff7:	test   BYTE PTR [esp+0x8],0x1
10018ffc:	je     0x10019005
10018ffe:	push   esi
10018fff:	call   0x1001876e
10019004:	pop    ecx
10019005:	mov    eax,esi
10019007:	pop    esi
10019008:	ret    0x4
1001900b:	int3   
1001900c:	int3   
1001900d:	int3   
1001900e:	int3   
1001900f:	int3   
10019010:	mov    ecx,DWORD PTR [esp+0x4]
10019014:	test   ecx,0x3
1001901a:	je     0x10019040
1001901c:	mov    al,BYTE PTR [ecx]
1001901e:	add    ecx,0x1
10019021:	test   al,al
10019023:	je     0x10019073
10019025:	test   ecx,0x3
1001902b:	jne    0x1001901c
1001902d:	add    eax,0x0
10019032:	lea    esp,[esp+0x0]
10019039:	lea    esp,[esp+0x0]
10019040:	mov    eax,DWORD PTR [ecx]
10019042:	mov    edx,0x7efefeff
10019047:	add    edx,eax
10019049:	xor    eax,0xffffffff
1001904c:	xor    eax,edx
1001904e:	add    ecx,0x4
10019051:	test   eax,0x81010100
10019056:	je     0x10019040
10019058:	mov    eax,DWORD PTR [ecx-0x4]
1001905b:	test   al,al
1001905d:	je     0x10019091
1001905f:	test   ah,ah
10019061:	je     0x10019087
10019063:	test   eax,0xff0000
10019068:	je     0x1001907d
1001906a:	test   eax,0xff000000
1001906f:	je     0x10019073
10019071:	jmp    0x10019040
10019073:	lea    eax,[ecx-0x1]
10019076:	mov    ecx,DWORD PTR [esp+0x4]
1001907a:	sub    eax,ecx
1001907c:	ret    
1001907d:	lea    eax,[ecx-0x2]
10019080:	mov    ecx,DWORD PTR [esp+0x4]
10019084:	sub    eax,ecx
10019086:	ret    
10019087:	lea    eax,[ecx-0x3]
1001908a:	mov    ecx,DWORD PTR [esp+0x4]
1001908e:	sub    eax,ecx
10019090:	ret    
10019091:	lea    eax,[ecx-0x4]
10019094:	mov    ecx,DWORD PTR [esp+0x4]
10019098:	sub    eax,ecx
1001909a:	ret    
1001909b:	push   esi
1001909c:	push   0x1
1001909e:	push   0x100c7680
100190a3:	mov    esi,ecx
100190a5:	call   0x10018f5c
100190aa:	mov    DWORD PTR [esi],0x1002f510
100190b0:	mov    eax,esi
100190b2:	pop    esi
100190b3:	ret    
100190b4:	push   ebp
100190b5:	mov    ebp,esp
100190b7:	sub    esp,0xc
100190ba:	jmp    0x100190c9
100190bc:	push   DWORD PTR [ebp+0x8]
100190bf:	call   0x1001cec7
100190c4:	test   eax,eax
100190c6:	pop    ecx
100190c7:	je     0x100190d8
100190c9:	push   DWORD PTR [ebp+0x8]
100190cc:	call   0x100198b2
100190d1:	test   eax,eax
100190d3:	pop    ecx
100190d4:	je     0x100190bc
100190d6:	leave  
100190d7:	ret    
100190d8:	test   BYTE PTR ds:0x100c9240,0x1
100190df:	mov    esi,0x100c9234
100190e4:	jne    0x100190ff
100190e6:	or     DWORD PTR ds:0x100c9240,0x1
100190ed:	mov    ecx,esi
100190ef:	call   0x1001909b
100190f4:	push   0x1002ebb0
100190f9:	call   0x10018ca7
100190fe:	pop    ecx
100190ff:	push   esi
10019100:	lea    ecx,[ebp-0xc]
10019103:	call   0x10018f74
10019108:	push   0x100bba4c
1001910d:	lea    eax,[ebp-0xc]
10019110:	push   eax
10019111:	mov    DWORD PTR [ebp-0xc],0x1002f510
10019118:	call   0x10018e6e
1001911d:	int3   
1001911e:	push   ebp
1001911f:	mov    ebp,esp
10019121:	mov    eax,DWORD PTR [ebp+0x14]
10019124:	push   esi
10019125:	push   edi
10019126:	xor    edi,edi
10019128:	cmp    eax,edi
1001912a:	je     0x10019173
1001912c:	cmp    DWORD PTR [ebp+0x8],edi
1001912f:	jne    0x1001914c
10019131:	call   0x1001cd0e
10019136:	push   0x16
10019138:	pop    esi
10019139:	mov    DWORD PTR [eax],esi
1001913b:	push   edi
1001913c:	push   edi
1001913d:	push   edi
1001913e:	push   edi
1001913f:	push   edi
10019140:	call   0x10018dbf
10019145:	add    esp,0x14
10019148:	mov    eax,esi
1001914a:	jmp    0x10019175
1001914c:	cmp    DWORD PTR [ebp+0x10],edi
1001914f:	je     0x10019131
10019151:	cmp    DWORD PTR [ebp+0xc],eax
10019154:	jae    0x10019164
10019156:	call   0x1001cd0e
1001915b:	push   0x22
1001915d:	pop    ecx
1001915e:	mov    DWORD PTR [eax],ecx
10019160:	mov    esi,ecx
10019162:	jmp    0x1001913b
10019164:	push   eax
10019165:	push   DWORD PTR [ebp+0x10]
10019168:	push   DWORD PTR [ebp+0x8]
1001916b:	call   0x1001cef0
10019170:	add    esp,0xc
10019173:	xor    eax,eax
10019175:	pop    edi
10019176:	pop    esi
10019177:	pop    ebp
10019178:	ret    
10019179:	push   0xa
1001917b:	push   0x0
1001917d:	push   DWORD PTR [esp+0xc]
10019181:	call   0x1001d44c
10019186:	add    esp,0xc
10019189:	ret    
1001918a:	jmp    0x10019179
1001918f:	push   0xa
10019191:	push   0x0
10019193:	push   DWORD PTR [esp+0xc]
10019197:	call   0x1001d725
1001919c:	add    esp,0xc
1001919f:	ret    
100191a0:	push   ecx
100191a1:	lea    ecx,[esp+0x4]
100191a5:	sub    ecx,eax
100191a7:	sbb    eax,eax
100191a9:	not    eax
100191ab:	and    ecx,eax
100191ad:	mov    eax,esp
100191af:	and    eax,0xfffff000
100191b4:	cmp    ecx,eax
100191b6:	jb     0x100191c2
100191b8:	mov    eax,ecx
100191ba:	pop    ecx
100191bb:	xchg   esp,eax
100191bc:	mov    eax,DWORD PTR [eax]
100191be:	mov    DWORD PTR [esp],eax
100191c1:	ret    
100191c2:	sub    eax,0x1000
100191c7:	test   DWORD PTR [eax],eax
100191c9:	jmp    0x100191b4
100191cb:	int3   
100191cc:	int3   
100191cd:	int3   
100191ce:	int3   
100191cf:	int3   
100191d0:	mov    edx,DWORD PTR [esp+0xc]
100191d4:	mov    ecx,DWORD PTR [esp+0x4]
100191d8:	test   edx,edx
100191da:	je     0x10019245
100191dc:	xor    eax,eax
100191de:	mov    al,BYTE PTR [esp+0x8]
100191e2:	test   al,al
100191e4:	jne    0x100191fc
100191e6:	cmp    edx,0x100
100191ec:	jb     0x100191fc
100191ee:	cmp    DWORD PTR ds:0x100cb1a0,0x0
100191f5:	je     0x100191fc
100191f7:	jmp    0x1001d7a5
100191fc:	push   edi
100191fd:	mov    edi,ecx
100191ff:	cmp    edx,0x4
10019202:	jb     0x10019235
10019204:	neg    ecx
10019206:	and    ecx,0x3
10019209:	je     0x10019217
1001920b:	sub    edx,ecx
1001920d:	mov    BYTE PTR [edi],al
1001920f:	add    edi,0x1
10019212:	sub    ecx,0x1
10019215:	jne    0x1001920d
10019217:	mov    ecx,eax
10019219:	shl    eax,0x8
1001921c:	add    eax,ecx
1001921e:	mov    ecx,eax
10019220:	shl    eax,0x10
10019223:	add    eax,ecx
10019225:	mov    ecx,edx
10019227:	and    edx,0x3
1001922a:	shr    ecx,0x2
1001922d:	je     0x10019235
1001922f:	rep stos DWORD PTR es:[edi],eax
10019231:	test   edx,edx
10019233:	je     0x1001923f
10019235:	mov    BYTE PTR [edi],al
10019237:	add    edi,0x1
1001923a:	sub    edx,0x1
1001923d:	jne    0x10019235
1001923f:	mov    eax,DWORD PTR [esp+0x8]
10019243:	pop    edi
10019244:	ret    
10019245:	mov    eax,DWORD PTR [esp+0x4]
10019249:	ret    
1001924a:	mov    eax,DWORD PTR [esp+0x4]
1001924e:	test   eax,eax
10019250:	push   esi
10019251:	mov    esi,ecx
10019253:	mov    BYTE PTR [esi+0xc],0x0
10019257:	jne    0x100192bc
10019259:	call   0x1001c526
1001925e:	mov    DWORD PTR [esi+0x8],eax
10019261:	mov    ecx,DWORD PTR [eax+0x6c]
10019264:	mov    DWORD PTR [esi],ecx
10019266:	mov    ecx,DWORD PTR [eax+0x68]
10019269:	mov    DWORD PTR [esi+0x4],ecx
1001926c:	mov    ecx,DWORD PTR [esi]
1001926e:	cmp    ecx,DWORD PTR ds:0x100c7f58
10019274:	je     0x10019288
10019276:	mov    ecx,DWORD PTR ds:0x100c7e70
1001927c:	test   DWORD PTR [eax+0x70],ecx
1001927f:	jne    0x10019288
10019281:	call   0x1001b312
10019286:	mov    DWORD PTR [esi],eax
10019288:	mov    eax,DWORD PTR [esi+0x4]
1001928b:	cmp    eax,DWORD PTR ds:0x100c7d78
10019291:	je     0x100192a9
10019293:	mov    eax,DWORD PTR [esi+0x8]
10019296:	mov    ecx,DWORD PTR ds:0x100c7e70
1001929c:	test   DWORD PTR [eax+0x70],ecx
1001929f:	jne    0x100192a9
100192a1:	call   0x1001da56
100192a6:	mov    DWORD PTR [esi+0x4],eax
100192a9:	mov    eax,DWORD PTR [esi+0x8]
100192ac:	test   BYTE PTR [eax+0x70],0x2
100192b0:	jne    0x100192c6
100192b2:	or     DWORD PTR [eax+0x70],0x2
100192b6:	mov    BYTE PTR [esi+0xc],0x1
100192ba:	jmp    0x100192c6
100192bc:	mov    ecx,DWORD PTR [eax]
100192be:	mov    DWORD PTR [esi],ecx
100192c0:	mov    eax,DWORD PTR [eax+0x4]
100192c3:	mov    DWORD PTR [esi+0x4],eax
100192c6:	mov    eax,esi
100192c8:	pop    esi
100192c9:	ret    0x4
100192cc:	push   ebp
100192cd:	mov    ebp,esp
100192cf:	sub    esp,0x10
100192d2:	push   ebx
100192d3:	push   esi
100192d4:	push   DWORD PTR [ebp+0x10]
100192d7:	lea    ecx,[ebp-0x10]
100192da:	call   0x1001924a
100192df:	mov    ebx,DWORD PTR [ebp+0x8]
100192e2:	xor    esi,esi
100192e4:	cmp    ebx,esi
100192e6:	jne    0x10019317
100192e8:	call   0x1001cd0e
100192ed:	push   esi
100192ee:	push   esi
100192ef:	push   esi
100192f0:	push   esi
100192f1:	push   esi
100192f2:	mov    DWORD PTR [eax],0x16
100192f8:	call   0x10018dbf
100192fd:	add    esp,0x14
10019300:	cmp    BYTE PTR [ebp-0x4],0x0
10019304:	je     0x1001930d
10019306:	mov    eax,DWORD PTR [ebp-0x8]
10019309:	and    DWORD PTR [eax+0x70],0xfffffffd
1001930d:	mov    eax,0x7fffffff
10019312:	jmp    0x100193d7
10019317:	push   edi
10019318:	mov    edi,DWORD PTR [ebp+0xc]
1001931b:	cmp    edi,esi
1001931d:	jne    0x1001934e
1001931f:	call   0x1001cd0e
10019324:	push   esi
10019325:	push   esi
10019326:	push   esi
10019327:	push   esi
10019328:	push   esi
10019329:	mov    DWORD PTR [eax],0x16
1001932f:	call   0x10018dbf
10019334:	add    esp,0x14
10019337:	cmp    BYTE PTR [ebp-0x4],0x0
1001933b:	je     0x10019344
1001933d:	mov    eax,DWORD PTR [ebp-0x8]
10019340:	and    DWORD PTR [eax+0x70],0xfffffffd
10019344:	mov    eax,0x7fffffff
10019349:	jmp    0x100193d6
1001934e:	mov    eax,DWORD PTR [ebp-0x10]
10019351:	cmp    DWORD PTR [eax+0x14],esi
10019354:	jne    0x10019390
10019356:	movzx  eax,WORD PTR [ebx]
10019359:	cmp    ax,0x41
1001935d:	jb     0x10019368
1001935f:	cmp    ax,0x5a
10019363:	ja     0x10019368
10019365:	add    eax,0x20
10019368:	movzx  esi,ax
1001936b:	movzx  eax,WORD PTR [edi]
1001936e:	cmp    ax,0x41
10019372:	jb     0x1001937d
10019374:	cmp    ax,0x5a
10019378:	ja     0x1001937d
1001937a:	add    eax,0x20
1001937d:	inc    ebx
1001937e:	inc    ebx
1001937f:	inc    edi
10019380:	inc    edi
10019381:	test   si,si
10019384:	movzx  eax,ax
10019387:	je     0x100193c1
10019389:	cmp    si,ax
1001938c:	je     0x10019356
1001938e:	jmp    0x100193c1
10019390:	movzx  eax,WORD PTR [ebx]
10019393:	lea    ecx,[ebp-0x10]
10019396:	push   ecx
10019397:	push   eax
10019398:	call   0x1001df05
1001939d:	movzx  esi,ax
100193a0:	movzx  eax,WORD PTR [edi]
100193a3:	lea    ecx,[ebp-0x10]
100193a6:	push   ecx
100193a7:	inc    ebx
100193a8:	push   eax
100193a9:	inc    ebx
100193aa:	call   0x1001df05
100193af:	add    esp,0x10
100193b2:	inc    edi
100193b3:	inc    edi
100193b4:	test   si,si
100193b7:	movzx  eax,ax
100193ba:	je     0x100193c1
100193bc:	cmp    si,ax
100193bf:	je     0x10019390
100193c1:	movzx  ecx,ax
100193c4:	movzx  eax,si
100193c7:	sub    eax,ecx
100193c9:	cmp    BYTE PTR [ebp-0x4],0x0
100193cd:	je     0x100193d6
100193cf:	mov    ecx,DWORD PTR [ebp-0x8]
100193d2:	and    DWORD PTR [ecx+0x70],0xfffffffd
100193d6:	pop    edi
100193d7:	pop    esi
100193d8:	pop    ebx
100193d9:	leave  
100193da:	ret    
100193db:	push   esi
100193dc:	xor    esi,esi
100193de:	cmp    DWORD PTR ds:0x100c9260,esi
100193e4:	push   edi
100193e5:	jne    0x10019458
100193e7:	mov    edi,DWORD PTR [esp+0xc]
100193eb:	cmp    edi,esi
100193ed:	jne    0x1001940e
100193ef:	call   0x1001cd0e
100193f4:	push   esi
100193f5:	push   esi
100193f6:	push   esi
100193f7:	push   esi
100193f8:	push   esi
100193f9:	mov    DWORD PTR [eax],0x16
100193ff:	call   0x10018dbf
10019404:	add    esp,0x14
10019407:	mov    eax,0x7fffffff
1001940c:	jmp    0x10019469
1001940e:	mov    edx,DWORD PTR [esp+0x10]
10019412:	cmp    edx,esi
10019414:	je     0x100193ef
10019416:	movzx  eax,WORD PTR [edi]
10019419:	cmp    ax,0x41
1001941d:	jb     0x10019428
1001941f:	cmp    ax,0x5a
10019423:	ja     0x10019428
10019425:	add    eax,0x20
10019428:	movzx  ecx,ax
1001942b:	movzx  eax,WORD PTR [edx]
1001942e:	cmp    ax,0x41
10019432:	jb     0x1001943d
10019434:	cmp    ax,0x5a
10019438:	ja     0x1001943d
1001943a:	add    eax,0x20
1001943d:	inc    edi
1001943e:	inc    edi
1001943f:	inc    edx
10019440:	inc    edx
10019441:	cmp    cx,si
10019444:	movzx  eax,ax
10019447:	je     0x1001944e
10019449:	cmp    cx,ax
1001944c:	je     0x10019416
1001944e:	movzx  edx,ax
10019451:	movzx  eax,cx
10019454:	sub    eax,edx
10019456:	jmp    0x10019469
10019458:	push   esi
10019459:	push   DWORD PTR [esp+0x14]
1001945d:	push   DWORD PTR [esp+0x14]
10019461:	call   0x100192cc
10019466:	add    esp,0xc
10019469:	pop    edi
1001946a:	pop    esi
1001946b:	ret    
1001946c:	int3   
1001946d:	int3   
1001946e:	int3   
1001946f:	int3   
10019470:	push   ebp
10019471:	mov    ebp,esp
10019473:	push   edi
10019474:	push   esi
10019475:	mov    esi,DWORD PTR [ebp+0xc]
10019478:	mov    ecx,DWORD PTR [ebp+0x10]
1001947b:	mov    edi,DWORD PTR [ebp+0x8]
1001947e:	mov    eax,ecx
10019480:	mov    edx,ecx
10019482:	add    eax,esi
10019484:	cmp    edi,esi
10019486:	jbe    0x10019490
10019488:	cmp    edi,eax
1001948a:	jb     0x10019634
10019490:	cmp    ecx,0x100
10019496:	jb     0x100194b7
10019498:	cmp    DWORD PTR ds:0x100cb1a0,0x0
1001949f:	je     0x100194b7
100194a1:	push   edi
100194a2:	push   esi
100194a3:	and    edi,0xf
100194a6:	and    esi,0xf
100194a9:	cmp    edi,esi
100194ab:	pop    esi
100194ac:	pop    edi
100194ad:	jne    0x100194b7
100194af:	pop    esi
100194b0:	pop    edi
100194b1:	pop    ebp
100194b2:	jmp    0x1001e039
100194b7:	test   edi,0x3
100194bd:	jne    0x100194d4
100194bf:	shr    ecx,0x2
100194c2:	and    edx,0x3
100194c5:	cmp    ecx,0x8
100194c8:	jb     0x100194f4
100194ca:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100194cc:	jmp    DWORD PTR [edx*4+0x100195e4]
100194d3:	nop
100194d4:	mov    eax,edi
100194d6:	mov    edx,0x3
100194db:	sub    ecx,0x4
100194de:	jb     0x100194ec
100194e0:	and    eax,0x3
100194e3:	add    ecx,eax
100194e5:	jmp    DWORD PTR [eax*4+0x100194f8]
100194ec:	jmp    DWORD PTR [ecx*4+0x100195f4]
100194f3:	nop
100194f4:	jmp    DWORD PTR [ecx*4+0x10019578]
100194fb:	nop
100194fc:	or     BYTE PTR [ebp-0x6acbefff],dl
10019502:	add    DWORD PTR [eax],edx
10019504:	pop    eax
10019505:	xchg   ebp,eax
10019506:	add    DWORD PTR [eax],edx
10019508:	and    edx,ecx
1001950a:	mov    al,BYTE PTR [esi]
1001950c:	mov    BYTE PTR [edi],al
1001950e:	mov    al,BYTE PTR [esi+0x1]
10019511:	mov    BYTE PTR [edi+0x1],al
10019514:	mov    al,BYTE PTR [esi+0x2]
10019517:	shr    ecx,0x2
1001951a:	mov    BYTE PTR [edi+0x2],al
1001951d:	add    esi,0x3
10019520:	add    edi,0x3
10019523:	cmp    ecx,0x8
10019526:	jb     0x100194f4
10019528:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001952a:	jmp    DWORD PTR [edx*4+0x100195e4]
10019531:	lea    ecx,[ecx+0x0]
10019534:	and    edx,ecx
10019536:	mov    al,BYTE PTR [esi]
10019538:	mov    BYTE PTR [edi],al
1001953a:	mov    al,BYTE PTR [esi+0x1]
1001953d:	shr    ecx,0x2
10019540:	mov    BYTE PTR [edi+0x1],al
10019543:	add    esi,0x2
10019546:	add    edi,0x2
10019549:	cmp    ecx,0x8
1001954c:	jb     0x100194f4
1001954e:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10019550:	jmp    DWORD PTR [edx*4+0x100195e4]
10019557:	nop
10019558:	and    edx,ecx
1001955a:	mov    al,BYTE PTR [esi]
1001955c:	mov    BYTE PTR [edi],al
1001955e:	add    esi,0x1
10019561:	shr    ecx,0x2
10019564:	add    edi,0x1
10019567:	cmp    ecx,0x8
1001956a:	jb     0x100194f4
1001956c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001956e:	jmp    DWORD PTR [edx*4+0x100195e4]
10019575:	lea    ecx,[ecx+0x0]
10019578:	fist   DWORD PTR [ebp-0x6a37efff]
1001957e:	add    DWORD PTR [eax],edx
10019580:	rcl    BYTE PTR [ebp-0x6a47efff],0x1
10019587:	adc    BYTE PTR [eax-0x57effe6b],dh
1001958d:	xchg   ebp,eax
1001958e:	add    DWORD PTR [eax],edx
10019590:	mov    al,ds:0x98100195
10019595:	xchg   ebp,eax
10019596:	add    DWORD PTR [eax],edx
10019598:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
1001959c:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
100195a0:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
100195a4:	mov    DWORD PTR [edi+ecx*4-0x18],eax
100195a8:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
100195ac:	mov    DWORD PTR [edi+ecx*4-0x14],eax
100195b0:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
100195b4:	mov    DWORD PTR [edi+ecx*4-0x10],eax
100195b8:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
100195bc:	mov    DWORD PTR [edi+ecx*4-0xc],eax
100195c0:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
100195c4:	mov    DWORD PTR [edi+ecx*4-0x8],eax
100195c8:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
100195cc:	mov    DWORD PTR [edi+ecx*4-0x4],eax
100195d0:	lea    eax,[ecx*4+0x0]
100195d7:	add    esi,eax
100195d9:	add    edi,eax
100195db:	jmp    DWORD PTR [edx*4+0x100195e4]
100195e2:	mov    edi,edi
100195e4:	hlt    
100195e5:	xchg   ebp,eax
100195e6:	add    DWORD PTR [eax],edx
100195e8:	cld    
100195e9:	xchg   ebp,eax
100195ea:	add    DWORD PTR [eax],edx
100195ec:	or     BYTE PTR [esi-0x69e3efff],dl
100195f2:	add    DWORD PTR [eax],edx
100195f4:	mov    eax,DWORD PTR [ebp+0x8]
100195f7:	pop    esi
100195f8:	pop    edi
100195f9:	leave  
100195fa:	ret    
100195fb:	nop
100195fc:	mov    al,BYTE PTR [esi]
100195fe:	mov    BYTE PTR [edi],al
10019600:	mov    eax,DWORD PTR [ebp+0x8]
10019603:	pop    esi
10019604:	pop    edi
10019605:	leave  
10019606:	ret    
10019607:	nop
10019608:	mov    al,BYTE PTR [esi]
1001960a:	mov    BYTE PTR [edi],al
1001960c:	mov    al,BYTE PTR [esi+0x1]
1001960f:	mov    BYTE PTR [edi+0x1],al
10019612:	mov    eax,DWORD PTR [ebp+0x8]
10019615:	pop    esi
10019616:	pop    edi
10019617:	leave  
10019618:	ret    
10019619:	lea    ecx,[ecx+0x0]
1001961c:	mov    al,BYTE PTR [esi]
1001961e:	mov    BYTE PTR [edi],al
10019620:	mov    al,BYTE PTR [esi+0x1]
10019623:	mov    BYTE PTR [edi+0x1],al
10019626:	mov    al,BYTE PTR [esi+0x2]
10019629:	mov    BYTE PTR [edi+0x2],al
1001962c:	mov    eax,DWORD PTR [ebp+0x8]
1001962f:	pop    esi
10019630:	pop    edi
10019631:	leave  
10019632:	ret    
10019633:	nop
10019634:	lea    esi,[ecx+esi*1-0x4]
10019638:	lea    edi,[ecx+edi*1-0x4]
1001963c:	test   edi,0x3
10019642:	jne    0x10019668
10019644:	shr    ecx,0x2
10019647:	and    edx,0x3
1001964a:	cmp    ecx,0x8
1001964d:	jb     0x1001965c
1001964f:	std    
10019650:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10019652:	cld    
10019653:	jmp    DWORD PTR [edx*4+0x10019780]
1001965a:	mov    edi,edi
1001965c:	neg    ecx
1001965e:	jmp    DWORD PTR [ecx*4+0x10019730]
10019665:	lea    ecx,[ecx+0x0]
10019668:	mov    eax,edi
1001966a:	mov    edx,0x3
1001966f:	cmp    ecx,0x4
10019672:	jb     0x10019680
10019674:	and    eax,0x3
10019677:	sub    ecx,eax
10019679:	jmp    DWORD PTR [eax*4+0x10019684]
10019680:	jmp    DWORD PTR [ecx*4+0x10019780]
10019687:	nop
10019688:	xchg   esp,eax
10019689:	xchg   esi,eax
1001968a:	add    DWORD PTR [eax],edx
1001968c:	mov    eax,0xe0100196
10019691:	xchg   esi,eax
10019692:	add    DWORD PTR [eax],edx
10019694:	mov    al,BYTE PTR [esi+0x3]
10019697:	and    edx,ecx
10019699:	mov    BYTE PTR [edi+0x3],al
1001969c:	sub    esi,0x1
1001969f:	shr    ecx,0x2
100196a2:	sub    edi,0x1
100196a5:	cmp    ecx,0x8
100196a8:	jb     0x1001965c
100196aa:	std    
100196ab:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100196ad:	cld    
100196ae:	jmp    DWORD PTR [edx*4+0x10019780]
100196b5:	lea    ecx,[ecx+0x0]
100196b8:	mov    al,BYTE PTR [esi+0x3]
100196bb:	and    edx,ecx
100196bd:	mov    BYTE PTR [edi+0x3],al
100196c0:	mov    al,BYTE PTR [esi+0x2]
100196c3:	shr    ecx,0x2
100196c6:	mov    BYTE PTR [edi+0x2],al
100196c9:	sub    esi,0x2
100196cc:	sub    edi,0x2
100196cf:	cmp    ecx,0x8
100196d2:	jb     0x1001965c
100196d4:	std    
100196d5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
100196d7:	cld    
100196d8:	jmp    DWORD PTR [edx*4+0x10019780]
100196df:	nop
100196e0:	mov    al,BYTE PTR [esi+0x3]
100196e3:	and    edx,ecx
100196e5:	mov    BYTE PTR [edi+0x3],al
100196e8:	mov    al,BYTE PTR [esi+0x2]
100196eb:	mov    BYTE PTR [edi+0x2],al
100196ee:	mov    al,BYTE PTR [esi+0x1]
100196f1:	shr    ecx,0x2
100196f4:	mov    BYTE PTR [edi+0x1],al
100196f7:	sub    esi,0x3
100196fa:	sub    edi,0x3
100196fd:	cmp    ecx,0x8
10019700:	jb     0x1001965c
10019706:	std    
10019707:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
10019709:	cld    
1001970a:	jmp    DWORD PTR [edx*4+0x10019780]
10019711:	lea    ecx,[ecx+0x0]
10019714:	xor    al,0x97
10019716:	add    DWORD PTR [eax],edx
10019718:	cmp    al,0x97
1001971a:	add    DWORD PTR [eax],edx
1001971c:	inc    esp
1001971d:	xchg   edi,eax
1001971e:	add    DWORD PTR [eax],edx
10019720:	dec    esp
10019721:	xchg   edi,eax
10019722:	add    DWORD PTR [eax],edx
10019724:	push   esp
10019725:	xchg   edi,eax
10019726:	add    DWORD PTR [eax],edx
10019728:	pop    esp
10019729:	xchg   edi,eax
1001972a:	add    DWORD PTR [eax],edx
1001972c:	fs xchg edi,eax
1001972e:	add    DWORD PTR [eax],edx
10019730:	ja     0x100196c9
10019732:	add    DWORD PTR [eax],edx
10019734:	mov    eax,DWORD PTR [esi+ecx*4+0x1c]
10019738:	mov    DWORD PTR [edi+ecx*4+0x1c],eax
1001973c:	mov    eax,DWORD PTR [esi+ecx*4+0x18]
10019740:	mov    DWORD PTR [edi+ecx*4+0x18],eax
10019744:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
10019748:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1001974c:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
10019750:	mov    DWORD PTR [edi+ecx*4+0x10],eax
10019754:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
10019758:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1001975c:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
10019760:	mov    DWORD PTR [edi+ecx*4+0x8],eax
10019764:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
10019768:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1001976c:	lea    eax,[ecx*4+0x0]
10019773:	add    esi,eax
10019775:	add    edi,eax
10019777:	jmp    DWORD PTR [edx*4+0x10019780]
1001977e:	mov    edi,edi
10019780:	nop
10019781:	xchg   edi,eax
10019782:	add    DWORD PTR [eax],edx
10019784:	cwde   
10019785:	xchg   edi,eax
10019786:	add    DWORD PTR [eax],edx
10019788:	test   al,0x97
1001978a:	add    DWORD PTR [eax],edx
1001978c:	mov    esp,0x8b100197
10019791:	inc    ebp
10019792:	or     BYTE PTR [esi+0x5f],bl
10019795:	leave  
10019796:	ret    
10019797:	nop
10019798:	mov    al,BYTE PTR [esi+0x3]
1001979b:	mov    BYTE PTR [edi+0x3],al
1001979e:	mov    eax,DWORD PTR [ebp+0x8]
100197a1:	pop    esi
100197a2:	pop    edi
100197a3:	leave  
100197a4:	ret    
100197a5:	lea    ecx,[ecx+0x0]
100197a8:	mov    al,BYTE PTR [esi+0x3]
100197ab:	mov    BYTE PTR [edi+0x3],al
100197ae:	mov    al,BYTE PTR [esi+0x2]
100197b1:	mov    BYTE PTR [edi+0x2],al
100197b4:	mov    eax,DWORD PTR [ebp+0x8]
100197b7:	pop    esi
100197b8:	pop    edi
100197b9:	leave  
100197ba:	ret    
100197bb:	nop
100197bc:	mov    al,BYTE PTR [esi+0x3]
100197bf:	mov    BYTE PTR [edi+0x3],al
100197c2:	mov    al,BYTE PTR [esi+0x2]
100197c5:	mov    BYTE PTR [edi+0x2],al
100197c8:	mov    al,BYTE PTR [esi+0x1]
100197cb:	mov    BYTE PTR [edi+0x1],al
100197ce:	mov    eax,DWORD PTR [ebp+0x8]
100197d1:	pop    esi
100197d2:	pop    edi
100197d3:	leave  
100197d4:	ret    
100197d5:	push   0xc
100197d7:	push   0x100bb368
100197dc:	call   0x1001a750
100197e1:	mov    esi,DWORD PTR [ebp+0x8]
100197e4:	test   esi,esi
100197e6:	je     0x1001985d
100197e8:	cmp    DWORD PTR ds:0x100cb198,0x3
100197ef:	jne    0x10019834
100197f1:	push   0x4
100197f3:	call   0x1001e3bb
100197f8:	pop    ecx
100197f9:	and    DWORD PTR [ebp-0x4],0x0
100197fd:	push   esi
100197fe:	call   0x1001e434
10019803:	pop    ecx
10019804:	mov    DWORD PTR [ebp-0x1c],eax
10019807:	test   eax,eax
10019809:	je     0x10019814
1001980b:	push   esi
1001980c:	push   eax
1001980d:	call   0x1001e45f
10019812:	pop    ecx
10019813:	pop    ecx
10019814:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001981b:	call   0x1001982b
10019820:	cmp    DWORD PTR [ebp-0x1c],0x0
10019824:	jne    0x1001985d
10019826:	push   DWORD PTR [ebp+0x8]
10019829:	jmp    0x10019835
1001982b:	push   0x4
1001982d:	call   0x1001e2e3
10019832:	pop    ecx
10019833:	ret    
10019834:	push   esi
10019835:	push   0x0
10019837:	push   DWORD PTR ds:0x100c9630
1001983d:	call   DWORD PTR ds:0x1002f184
10019843:	test   eax,eax
10019845:	jne    0x1001985d
10019847:	call   0x1001cd0e
1001984c:	mov    esi,eax
1001984e:	call   DWORD PTR ds:0x1002f094
10019854:	push   eax
10019855:	call   0x1001ccd3
1001985a:	mov    DWORD PTR [esi],eax
1001985c:	pop    ecx
1001985d:	call   0x1001a795
10019862:	ret    
10019863:	push   0xc
10019865:	push   0x100bb388
1001986a:	call   0x1001a750
1001986f:	and    DWORD PTR [ebp-0x1c],0x0
10019873:	mov    esi,DWORD PTR [ebp+0x8]
10019876:	cmp    esi,DWORD PTR ds:0x100cb188
1001987c:	ja     0x100198a0
1001987e:	push   0x4
10019880:	call   0x1001e3bb
10019885:	pop    ecx
10019886:	and    DWORD PTR [ebp-0x4],0x0
1001988a:	push   esi
1001988b:	call   0x1001ec08
10019890:	pop    ecx
10019891:	mov    DWORD PTR [ebp-0x1c],eax
10019894:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001989b:	call   0x100198a9
100198a0:	mov    eax,DWORD PTR [ebp-0x1c]
100198a3:	call   0x1001a795
100198a8:	ret    
100198a9:	push   0x4
100198ab:	call   0x1001e2e3
100198b0:	pop    ecx
100198b1:	ret    
100198b2:	push   ebp
100198b3:	mov    ebp,DWORD PTR [esp+0x8]
100198b7:	cmp    ebp,0xffffffe0
100198ba:	ja     0x1001995f
100198c0:	push   ebx
100198c1:	mov    ebx,DWORD PTR ds:0x1002f180
100198c7:	push   esi
100198c8:	push   edi
100198c9:	xor    esi,esi
100198cb:	cmp    DWORD PTR ds:0x100c9630,esi
100198d1:	mov    edi,ebp
100198d3:	jne    0x100198ed
100198d5:	call   0x1001f08b
100198da:	push   0x1e
100198dc:	call   0x1001eeeb
100198e1:	push   0xff
100198e6:	call   0x1001ca19
100198eb:	pop    ecx
100198ec:	pop    ecx
100198ed:	mov    eax,ds:0x100cb198
100198f2:	cmp    eax,0x1
100198f5:	jne    0x10019905
100198f7:	cmp    ebp,esi
100198f9:	je     0x100198ff
100198fb:	mov    eax,ebp
100198fd:	jmp    0x10019902
100198ff:	xor    eax,eax
10019901:	inc    eax
10019902:	push   eax
10019903:	jmp    0x10019923
10019905:	cmp    eax,0x3
10019908:	jne    0x10019915
1001990a:	push   ebp
1001990b:	call   0x10019863
10019910:	cmp    eax,esi
10019912:	pop    ecx
10019913:	jne    0x1001992c
10019915:	cmp    ebp,esi
10019917:	jne    0x1001991c
10019919:	xor    edi,edi
1001991b:	inc    edi
1001991c:	add    edi,0xf
1001991f:	and    edi,0xfffffff0
10019922:	push   edi
10019923:	push   esi
10019924:	push   DWORD PTR ds:0x100c9630
1001992a:	call   ebx
1001992c:	mov    esi,eax
1001992e:	test   esi,esi
10019930:	jne    0x10019958
10019932:	cmp    DWORD PTR ds:0x100c9aa4,eax
10019938:	push   0xc
1001993a:	pop    edi
1001993b:	je     0x1001994a
1001993d:	push   ebp
1001993e:	call   0x1001cec7
10019943:	test   eax,eax
10019945:	pop    ecx
10019946:	jne    0x100198c9
10019948:	jmp    0x10019951
1001994a:	call   0x1001cd0e
1001994f:	mov    DWORD PTR [eax],edi
10019951:	call   0x1001cd0e
10019956:	mov    DWORD PTR [eax],edi
10019958:	pop    edi
10019959:	mov    eax,esi
1001995b:	pop    esi
1001995c:	pop    ebx
1001995d:	pop    ebp
1001995e:	ret    
1001995f:	push   ebp
10019960:	call   0x1001cec7
10019965:	pop    ecx
10019966:	call   0x1001cd0e
1001996b:	mov    DWORD PTR [eax],0xc
10019971:	xor    eax,eax
10019973:	pop    ebp
10019974:	ret    
10019975:	push   ebp
10019976:	mov    ebp,esp
10019978:	push   ecx
10019979:	mov    eax,DWORD PTR [ebp+0xc]
1001997c:	cmp    eax,0x1
1001997f:	push   ebx
10019980:	push   esi
10019981:	push   edi
10019982:	jne    0x10019a9f
10019988:	mov    ebx,DWORD PTR ds:0x1002f190
1001998e:	mov    edi,0x94
10019993:	push   edi
10019994:	push   0x0
10019996:	call   ebx
10019998:	push   eax
10019999:	call   DWORD PTR ds:0x1002f180
1001999f:	mov    esi,eax
100199a1:	test   esi,esi
100199a3:	jne    0x100199ac
100199a5:	xor    eax,eax
100199a7:	jmp    0x10019b47
100199ac:	push   esi
100199ad:	mov    DWORD PTR [esi],edi
100199af:	call   DWORD PTR ds:0x1002f178
100199b5:	test   eax,eax
100199b7:	push   esi
100199b8:	push   0x0
100199ba:	jne    0x100199c7
100199bc:	call   ebx
100199be:	push   eax
100199bf:	call   DWORD PTR ds:0x1002f184
100199c5:	jmp    0x100199a5
100199c7:	mov    eax,DWORD PTR [esi+0x10]
100199ca:	mov    edi,DWORD PTR [esi+0xc]
100199cd:	mov    DWORD PTR [ebp+0xc],eax
100199d0:	mov    eax,DWORD PTR [esi+0x4]
100199d3:	mov    DWORD PTR [ebp+0x10],eax
100199d6:	mov    eax,DWORD PTR [esi+0x8]
100199d9:	mov    DWORD PTR [ebp-0x4],eax
100199dc:	and    edi,0x7fff
100199e2:	call   ebx
100199e4:	push   eax
100199e5:	call   DWORD PTR ds:0x1002f184
100199eb:	mov    eax,DWORD PTR [ebp+0xc]
100199ee:	cmp    eax,0x2
100199f1:	je     0x100199f9
100199f3:	or     edi,0x8000
100199f9:	mov    ecx,DWORD PTR [ebp-0x4]
100199fc:	mov    ds:0x100c95a4,eax
10019a01:	mov    eax,DWORD PTR [ebp+0x10]
10019a04:	mov    edx,eax
10019a06:	shl    edx,0x8
10019a09:	add    edx,ecx
10019a0b:	push   0x1
10019a0d:	mov    DWORD PTR ds:0x100c95ac,edx
10019a13:	mov    ds:0x100c95b0,eax
10019a18:	mov    DWORD PTR ds:0x100c95b4,ecx
10019a1e:	mov    DWORD PTR ds:0x100c95a8,edi
10019a24:	call   0x1001e177
10019a29:	test   eax,eax
10019a2b:	pop    ecx
10019a2c:	je     0x100199a5
10019a32:	call   0x1001c6c8
10019a37:	test   eax,eax
10019a39:	jne    0x10019a45
10019a3b:	call   0x1001e1d1
10019a40:	jmp    0x100199a5
10019a45:	call   0x1001f7c5
10019a4a:	call   DWORD PTR ds:0x1002f1bc
10019a50:	mov    ds:0x100cb1bc,eax
10019a55:	call   0x1001f690
10019a5a:	mov    ds:0x100c9248,eax
10019a5f:	call   0x1001f0c4
10019a64:	test   eax,eax
10019a66:	jge    0x10019a6f
10019a68:	call   0x1001c3b3
10019a6d:	jmp    0x10019a3b
10019a6f:	call   0x1001f5d7
10019a74:	test   eax,eax
10019a76:	jl     0x10019a98
10019a78:	call   0x1001f364
10019a7d:	test   eax,eax
10019a7f:	jl     0x10019a98
10019a81:	push   0x0
10019a83:	call   0x1001caeb
10019a88:	test   eax,eax
10019a8a:	pop    ecx
10019a8b:	jne    0x10019a98
10019a8d:	inc    DWORD PTR ds:0x100c9244
10019a93:	jmp    0x10019b44
10019a98:	call   0x1001f318
10019a9d:	jmp    0x10019a68
10019a9f:	xor    edi,edi
10019aa1:	cmp    eax,edi
10019aa3:	jne    0x10019ada
10019aa5:	cmp    DWORD PTR ds:0x100c9244,edi
10019aab:	jle    0x100199a5
10019ab1:	dec    DWORD PTR ds:0x100c9244
10019ab7:	cmp    DWORD PTR ds:0x100c95e0,edi
10019abd:	jne    0x10019ac4
10019abf:	call   0x1001cc70
10019ac4:	cmp    DWORD PTR [ebp+0x10],edi
10019ac7:	jne    0x10019b44
10019ac9:	call   0x1001f318
10019ace:	call   0x1001c3b3
10019ad3:	call   0x1001e1d1
10019ad8:	jmp    0x10019b44
10019ada:	cmp    eax,0x2
10019add:	jne    0x10019b38
10019adf:	call   0x1001c381
10019ae4:	push   0x214
10019ae9:	push   0x1
10019aeb:	call   0x1001afef
10019af0:	mov    esi,eax
10019af2:	cmp    esi,edi
10019af4:	pop    ecx
10019af5:	pop    ecx
10019af6:	je     0x100199a5
10019afc:	push   esi
10019afd:	push   DWORD PTR ds:0x100c77c4
10019b03:	push   DWORD PTR ds:0x100c9594
10019b09:	call   0x1001c30a
10019b0e:	pop    ecx
10019b0f:	call   eax
10019b11:	test   eax,eax
10019b13:	je     0x10019b2c
10019b15:	push   edi
10019b16:	push   esi
10019b17:	call   0x1001c3f0
10019b1c:	pop    ecx
10019b1d:	pop    ecx
10019b1e:	call   DWORD PTR ds:0x1002f10c
10019b24:	or     DWORD PTR [esi+0x4],0xffffffff
10019b28:	mov    DWORD PTR [esi],eax
10019b2a:	jmp    0x10019b44
10019b2c:	push   esi
10019b2d:	call   0x100197d5
10019b32:	pop    ecx
10019b33:	jmp    0x100199a5
10019b38:	cmp    eax,0x3
10019b3b:	jne    0x10019b44
10019b3d:	push   edi
10019b3e:	call   0x1001c65f
10019b43:	pop    ecx
10019b44:	xor    eax,eax
10019b46:	inc    eax
10019b47:	pop    edi
10019b48:	pop    esi
10019b49:	pop    ebx
10019b4a:	leave  
10019b4b:	ret    0xc
10019b4e:	push   0xc
10019b50:	push   0x100bb3a8
10019b55:	call   0x1001a750
10019b5a:	mov    edi,ecx
10019b5c:	mov    esi,edx
10019b5e:	mov    ebx,DWORD PTR [ebp+0x8]
10019b61:	xor    eax,eax
10019b63:	inc    eax
10019b64:	mov    DWORD PTR [ebp-0x1c],eax
10019b67:	test   esi,esi
10019b69:	jne    0x10019b77
10019b6b:	cmp    DWORD PTR ds:0x100c9244,edx
10019b71:	je     0x10019c3c
10019b77:	and    DWORD PTR [ebp-0x4],0x0
10019b7b:	cmp    esi,eax
10019b7d:	je     0x10019b84
10019b7f:	cmp    esi,0x2
10019b82:	jne    0x10019bb2
10019b84:	mov    eax,ds:0x100b2734
10019b89:	test   eax,eax
10019b8b:	je     0x10019b95
10019b8d:	push   edi
10019b8e:	push   esi
10019b8f:	push   ebx
10019b90:	call   eax
10019b92:	mov    DWORD PTR [ebp-0x1c],eax
10019b95:	cmp    DWORD PTR [ebp-0x1c],0x0
10019b99:	je     0x10019c35
10019b9f:	push   edi
10019ba0:	push   esi
10019ba1:	push   ebx
10019ba2:	call   0x10019975
10019ba7:	mov    DWORD PTR [ebp-0x1c],eax
10019baa:	test   eax,eax
10019bac:	je     0x10019c35
10019bb2:	push   edi
10019bb3:	push   esi
10019bb4:	push   ebx
10019bb5:	call   0x10010770
10019bba:	mov    DWORD PTR [ebp-0x1c],eax
10019bbd:	cmp    esi,0x1
10019bc0:	jne    0x10019be6
10019bc2:	test   eax,eax
10019bc4:	jne    0x10019be6
10019bc6:	push   edi
10019bc7:	push   eax
10019bc8:	push   ebx
10019bc9:	call   0x10010770
10019bce:	push   edi
10019bcf:	push   0x0
10019bd1:	push   ebx
10019bd2:	call   0x10019975
10019bd7:	mov    eax,ds:0x100b2734
10019bdc:	test   eax,eax
10019bde:	je     0x10019be6
10019be0:	push   edi
10019be1:	push   0x0
10019be3:	push   ebx
10019be4:	call   eax
10019be6:	test   esi,esi
10019be8:	je     0x10019bef
10019bea:	cmp    esi,0x3
10019bed:	jne    0x10019c15
10019bef:	push   edi
10019bf0:	push   esi
10019bf1:	push   ebx
10019bf2:	call   0x10019975
10019bf7:	test   eax,eax
10019bf9:	jne    0x10019bfe
10019bfb:	and    DWORD PTR [ebp-0x1c],eax
10019bfe:	cmp    DWORD PTR [ebp-0x1c],0x0
10019c02:	je     0x10019c15
10019c04:	mov    eax,ds:0x100b2734
10019c09:	test   eax,eax
10019c0b:	je     0x10019c15
10019c0d:	push   edi
10019c0e:	push   esi
10019c0f:	push   ebx
10019c10:	call   eax
10019c12:	mov    DWORD PTR [ebp-0x1c],eax
10019c15:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019c1c:	mov    eax,DWORD PTR [ebp-0x1c]
10019c1f:	jmp    0x10019c3e
10019c21:	mov    eax,DWORD PTR [ebp-0x14]
10019c24:	mov    ecx,DWORD PTR [eax]
10019c26:	mov    ecx,DWORD PTR [ecx]
10019c28:	push   eax
10019c29:	push   ecx
10019c2a:	call   0x1001f96c
10019c2f:	pop    ecx
10019c30:	pop    ecx
10019c31:	ret    
10019c32:	mov    esp,DWORD PTR [ebp-0x18]
10019c35:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10019c3c:	xor    eax,eax
10019c3e:	call   0x1001a795
10019c43:	ret    
10019c44:	cmp    DWORD PTR [esp+0x8],0x1
10019c49:	jne    0x10019c50
10019c4b:	call   0x1001f987
10019c50:	push   DWORD PTR [esp+0x4]
10019c54:	mov    ecx,DWORD PTR [esp+0x10]
10019c58:	mov    edx,DWORD PTR [esp+0xc]
10019c5c:	call   0x10019b4e
10019c61:	pop    ecx
10019c62:	ret    0xc
10019c65:	mov    eax,DWORD PTR [esp+0x4]
10019c69:	mov    dx,WORD PTR [esp+0x8]
10019c6e:	jmp    0x10019c77
10019c70:	cmp    cx,dx
10019c73:	je     0x10019c86
10019c75:	inc    eax
10019c76:	inc    eax
10019c77:	movzx  ecx,WORD PTR [eax]
10019c7a:	test   cx,cx
10019c7d:	jne    0x10019c70
10019c7f:	cmp    WORD PTR [eax],dx
10019c82:	je     0x10019c86
10019c84:	xor    eax,eax
10019c86:	ret    
10019c87:	push   ebp
10019c88:	mov    ebp,esp
10019c8a:	sub    esp,0x10
10019c8d:	push   DWORD PTR [ebp+0xc]
10019c90:	lea    ecx,[ebp-0x10]
10019c93:	call   0x1001924a
10019c98:	movzx  eax,BYTE PTR [ebp+0x8]
10019c9c:	mov    ecx,DWORD PTR [ebp-0x10]
10019c9f:	mov    ecx,DWORD PTR [ecx+0xc8]
10019ca5:	movzx  eax,WORD PTR [ecx+eax*2]
10019ca9:	and    eax,0x8000
10019cae:	cmp    BYTE PTR [ebp-0x4],0x0
10019cb2:	je     0x10019cbb
10019cb4:	mov    ecx,DWORD PTR [ebp-0x8]
10019cb7:	and    DWORD PTR [ecx+0x70],0xfffffffd
10019cbb:	leave  
10019cbc:	ret    
10019cbd:	push   0x0
10019cbf:	push   DWORD PTR [esp+0x8]
10019cc3:	call   0x10019c87
10019cc8:	pop    ecx
10019cc9:	pop    ecx
10019cca:	ret    
10019ccb:	push   0x8
10019ccd:	push   DWORD PTR [esp+0x8]
10019cd1:	call   0x1001fa9d
10019cd6:	pop    ecx
10019cd7:	pop    ecx
10019cd8:	ret    
10019cd9:	push   ebp
10019cda:	mov    ebp,esp
10019cdc:	sub    esp,0x20
10019cdf:	push   esi
10019ce0:	xor    esi,esi
10019ce2:	cmp    DWORD PTR [ebp+0xc],esi
10019ce5:	jne    0x10019d04
10019ce7:	call   0x1001cd0e
10019cec:	push   esi
10019ced:	push   esi
10019cee:	push   esi
10019cef:	push   esi
10019cf0:	push   esi
10019cf1:	mov    DWORD PTR [eax],0x16
10019cf7:	call   0x10018dbf
10019cfc:	add    esp,0x14
10019cff:	or     eax,0xffffffff
10019d02:	jmp    0x10019d2b
10019d04:	push   DWORD PTR [ebp+0x14]
10019d07:	lea    eax,[ebp-0x20]
10019d0a:	push   DWORD PTR [ebp+0x10]
10019d0d:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10019d14:	push   DWORD PTR [ebp+0xc]
10019d17:	mov    DWORD PTR [ebp-0x14],0x42
10019d1e:	push   eax
10019d1f:	mov    DWORD PTR [ebp-0x18],esi
10019d22:	mov    DWORD PTR [ebp-0x20],esi
10019d25:	call   DWORD PTR [ebp+0x8]
10019d28:	add    esp,0x10
10019d2b:	pop    esi
10019d2c:	leave  
10019d2d:	ret    
10019d2e:	push   DWORD PTR [esp+0x8]
10019d32:	push   0x0
10019d34:	push   DWORD PTR [esp+0xc]
10019d38:	push   0x1001fd04
10019d3d:	call   0x10019cd9
10019d42:	add    esp,0x10
10019d45:	ret    
10019d46:	push   ebp
10019d47:	mov    ebp,esp
10019d49:	sub    esp,0x20
10019d4c:	push   ebx
10019d4d:	xor    ebx,ebx
10019d4f:	cmp    DWORD PTR [ebp+0x14],ebx
10019d52:	jne    0x10019d74
10019d54:	call   0x1001cd0e
10019d59:	push   ebx
10019d5a:	push   ebx
10019d5b:	push   ebx
10019d5c:	push   ebx
10019d5d:	push   ebx
10019d5e:	mov    DWORD PTR [eax],0x16
10019d64:	call   0x10018dbf
10019d69:	add    esp,0x14
10019d6c:	or     eax,0xffffffff
10019d6f:	jmp    0x10019e39
10019d74:	push   esi
10019d75:	mov    esi,DWORD PTR [ebp+0xc]
10019d78:	push   edi
10019d79:	mov    edi,DWORD PTR [ebp+0x10]
10019d7c:	cmp    edi,ebx
10019d7e:	je     0x10019da4
10019d80:	cmp    esi,ebx
10019d82:	jne    0x10019da4
10019d84:	call   0x1001cd0e
10019d89:	push   ebx
10019d8a:	push   ebx
10019d8b:	push   ebx
10019d8c:	push   ebx
10019d8d:	push   ebx
10019d8e:	mov    DWORD PTR [eax],0x16
10019d94:	call   0x10018dbf
10019d99:	add    esp,0x14
10019d9c:	or     eax,0xffffffff
10019d9f:	jmp    0x10019e37
10019da4:	cmp    edi,0x3fffffff
10019daa:	mov    DWORD PTR [ebp-0x14],0x42
10019db1:	mov    DWORD PTR [ebp-0x18],esi
10019db4:	mov    DWORD PTR [ebp-0x20],esi
10019db7:	jbe    0x10019dc2
10019db9:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
10019dc0:	jmp    0x10019dc8
10019dc2:	lea    eax,[edi+edi*1]
10019dc5:	mov    DWORD PTR [ebp-0x1c],eax
10019dc8:	push   DWORD PTR [ebp+0x1c]
10019dcb:	lea    eax,[ebp-0x20]
10019dce:	push   DWORD PTR [ebp+0x18]
10019dd1:	push   DWORD PTR [ebp+0x14]
10019dd4:	push   eax
10019dd5:	call   DWORD PTR [ebp+0x8]
10019dd8:	add    esp,0x10
10019ddb:	cmp    esi,ebx
10019ddd:	mov    DWORD PTR [ebp+0x14],eax
10019de0:	je     0x10019e37
10019de2:	cmp    eax,ebx
10019de4:	jl     0x10019e28
10019de6:	dec    DWORD PTR [ebp-0x1c]
10019de9:	js     0x10019df5
10019deb:	mov    eax,DWORD PTR [ebp-0x20]
10019dee:	mov    BYTE PTR [eax],bl
10019df0:	inc    DWORD PTR [ebp-0x20]
10019df3:	jmp    0x10019e06
10019df5:	lea    eax,[ebp-0x20]
10019df8:	push   eax
10019df9:	push   ebx
10019dfa:	call   0x1001fb0b
10019dff:	cmp    eax,0xffffffff
10019e02:	pop    ecx
10019e03:	pop    ecx
10019e04:	je     0x10019e28
10019e06:	dec    DWORD PTR [ebp-0x1c]
10019e09:	js     0x10019e12
10019e0b:	mov    eax,DWORD PTR [ebp-0x20]
10019e0e:	mov    BYTE PTR [eax],bl
10019e10:	jmp    0x10019e23
10019e12:	lea    eax,[ebp-0x20]
10019e15:	push   eax
10019e16:	push   ebx
10019e17:	call   0x1001fb0b
10019e1c:	cmp    eax,0xffffffff
10019e1f:	pop    ecx
10019e20:	pop    ecx
10019e21:	je     0x10019e28
10019e23:	mov    eax,DWORD PTR [ebp+0x14]
10019e26:	jmp    0x10019e37
10019e28:	xor    eax,eax
10019e2a:	cmp    DWORD PTR [ebp-0x1c],ebx
10019e2d:	mov    WORD PTR [esi+edi*2-0x2],bx
10019e32:	setge  al
10019e35:	dec    eax
10019e36:	dec    eax
10019e37:	pop    edi
10019e38:	pop    esi
10019e39:	pop    ebx
10019e3a:	leave  
10019e3b:	ret    
10019e3c:	push   ebp
10019e3d:	mov    ebp,esp
10019e3f:	push   esi
10019e40:	xor    esi,esi
10019e42:	cmp    DWORD PTR [ebp+0x10],esi
10019e45:	jne    0x10019e64
10019e47:	call   0x1001cd0e
10019e4c:	push   esi
10019e4d:	push   esi
10019e4e:	push   esi
10019e4f:	push   esi
10019e50:	push   esi
10019e51:	mov    DWORD PTR [eax],0x16
10019e57:	call   0x10018dbf
10019e5c:	add    esp,0x14
10019e5f:	or     eax,0xffffffff
10019e62:	jmp    0x10019ec0
10019e64:	push   edi
10019e65:	mov    edi,DWORD PTR [ebp+0x8]
10019e68:	cmp    edi,esi
10019e6a:	je     0x10019e71
10019e6c:	cmp    DWORD PTR [ebp+0xc],esi
10019e6f:	ja     0x10019e7e
10019e71:	call   0x1001cd0e
10019e76:	mov    DWORD PTR [eax],0x16
10019e7c:	jmp    0x10019eaf
10019e7e:	push   DWORD PTR [ebp+0x18]
10019e81:	push   DWORD PTR [ebp+0x14]
10019e84:	push   DWORD PTR [ebp+0x10]
10019e87:	push   DWORD PTR [ebp+0xc]
10019e8a:	push   edi
10019e8b:	push   0x10020614
10019e90:	call   0x10019d46
10019e95:	add    esp,0x18
10019e98:	cmp    eax,esi
10019e9a:	jge    0x10019e9f
10019e9c:	mov    WORD PTR [edi],si
10019e9f:	cmp    eax,0xfffffffe
10019ea2:	jne    0x10019ebf
10019ea4:	call   0x1001cd0e
10019ea9:	mov    DWORD PTR [eax],0x22
10019eaf:	push   esi
10019eb0:	push   esi
10019eb1:	push   esi
10019eb2:	push   esi
10019eb3:	push   esi
10019eb4:	call   0x10018dbf
10019eb9:	add    esp,0x14
10019ebc:	or     eax,0xffffffff
10019ebf:	pop    edi
10019ec0:	pop    esi
10019ec1:	pop    ebp
10019ec2:	ret    
10019ec3:	push   DWORD PTR [esp+0x10]
10019ec7:	push   0x0
10019ec9:	push   DWORD PTR [esp+0x14]
10019ecd:	push   DWORD PTR [esp+0x14]
10019ed1:	push   DWORD PTR [esp+0x14]
10019ed5:	call   0x10019e3c
10019eda:	add    esp,0x14
10019edd:	ret    
10019ede:	push   DWORD PTR ds:0x100c9bbc
10019ee4:	call   0x1001c30a
10019ee9:	test   eax,eax
10019eeb:	pop    ecx
10019eec:	je     0x10019ef0
10019eee:	call   eax
10019ef0:	push   0x19
10019ef2:	call   0x1001eeeb
10019ef7:	push   0x1
10019ef9:	push   0x0
10019efb:	call   0x1001b47b
10019f00:	add    esp,0xc
10019f03:	jmp    0x1001b388
10019f08:	int3   
10019f09:	int3   
10019f0a:	int3   
10019f0b:	int3   
10019f0c:	int3   
10019f0d:	int3   
10019f0e:	int3   
10019f0f:	int3   
10019f10:	mov    eax,DWORD PTR [esp+0x8]
10019f14:	mov    ecx,DWORD PTR [esp+0x10]
10019f18:	or     ecx,eax
10019f1a:	mov    ecx,DWORD PTR [esp+0xc]
10019f1e:	jne    0x10019f29
10019f20:	mov    eax,DWORD PTR [esp+0x4]
10019f24:	mul    ecx
10019f26:	ret    0x10
10019f29:	push   ebx
10019f2a:	mul    ecx
10019f2c:	mov    ebx,eax
10019f2e:	mov    eax,DWORD PTR [esp+0x8]
10019f32:	mul    DWORD PTR [esp+0x14]
10019f36:	add    ebx,eax
10019f38:	mov    eax,DWORD PTR [esp+0x8]
10019f3c:	mul    ecx
10019f3e:	add    edx,ebx
10019f40:	pop    ebx
10019f41:	ret    0x10
10019f44:	mov    eax,DWORD PTR [esp+0x4]
10019f48:	mov    edx,eax
10019f4a:	mov    cx,WORD PTR [eax]
10019f4d:	inc    eax
10019f4e:	inc    eax
10019f4f:	test   cx,cx
10019f52:	jne    0x10019f4a
10019f54:	mov    cx,WORD PTR [esp+0x8]
10019f59:	dec    eax
10019f5a:	dec    eax
10019f5b:	cmp    eax,edx
10019f5d:	je     0x10019f64
10019f5f:	cmp    WORD PTR [eax],cx
10019f62:	jne    0x10019f59
10019f64:	mov    dx,WORD PTR [eax]
10019f67:	sub    dx,cx
10019f6a:	neg    dx
10019f6d:	sbb    edx,edx
10019f6f:	not    edx
10019f71:	and    eax,edx
10019f73:	ret    
10019f74:	mov    ecx,DWORD PTR [esp+0x4]
10019f78:	mov    edx,DWORD PTR [esp+0x8]
10019f7c:	movzx  eax,WORD PTR [edx]
10019f7f:	mov    WORD PTR [ecx],ax
10019f82:	inc    ecx
10019f83:	inc    ecx
10019f84:	inc    edx
10019f85:	inc    edx
10019f86:	test   ax,ax
10019f89:	jne    0x10019f7c
10019f8b:	mov    eax,DWORD PTR [esp+0x4]
10019f8f:	ret    
10019f90:	push   esi
10019f91:	mov    esi,DWORD PTR [esp+0x8]
10019f95:	push   edi
10019f96:	push   esi
10019f97:	call   0x10021157
10019f9c:	cmp    eax,0xffffffff
10019f9f:	pop    ecx
10019fa0:	je     0x10019ff2
10019fa2:	cmp    esi,0x1
10019fa5:	mov    eax,ds:0x100cb080
10019faa:	jne    0x10019fb5
10019fac:	test   BYTE PTR [eax+0x84],0x1
10019fb3:	jne    0x10019fc0
10019fb5:	cmp    esi,0x2
10019fb8:	jne    0x10019fd6
10019fba:	test   BYTE PTR [eax+0x44],0x1
10019fbe:	je     0x10019fd6
10019fc0:	push   0x2
10019fc2:	call   0x10021157
10019fc7:	push   0x1
10019fc9:	mov    edi,eax
10019fcb:	call   0x10021157
10019fd0:	cmp    eax,edi
10019fd2:	pop    ecx
10019fd3:	pop    ecx
10019fd4:	je     0x10019ff2
10019fd6:	push   esi
10019fd7:	call   0x10021157
10019fdc:	pop    ecx
10019fdd:	push   eax
10019fde:	call   DWORD PTR ds:0x1002f064
10019fe4:	test   eax,eax
10019fe6:	jne    0x10019ff2
10019fe8:	call   DWORD PTR ds:0x1002f094
10019fee:	mov    edi,eax
10019ff0:	jmp    0x10019ff4
10019ff2:	xor    edi,edi
10019ff4:	push   esi
10019ff5:	call   0x100210d6
10019ffa:	mov    eax,esi
10019ffc:	sar    eax,0x5
10019fff:	mov    eax,DWORD PTR [eax*4+0x100cb080]
1001a006:	and    esi,0x1f
1001a009:	shl    esi,0x6
1001a00c:	test   edi,edi
1001a00e:	pop    ecx
1001a00f:	mov    BYTE PTR [eax+esi*1+0x4],0x0
1001a014:	je     0x1001a022
1001a016:	push   edi
1001a017:	call   0x1001cd34
1001a01c:	pop    ecx
1001a01d:	or     eax,0xffffffff
1001a020:	jmp    0x1001a024
1001a022:	xor    eax,eax
1001a024:	pop    edi
1001a025:	pop    esi
1001a026:	ret    
1001a027:	push   0x10
1001a029:	push   0x100bb3c8
1001a02e:	call   0x1001a750
1001a033:	mov    eax,DWORD PTR [ebp+0x8]
1001a036:	cmp    eax,0xfffffffe
1001a039:	jne    0x1001a056
1001a03b:	call   0x1001cd21
1001a040:	and    DWORD PTR [eax],0x0
1001a043:	call   0x1001cd0e
1001a048:	mov    DWORD PTR [eax],0x9
1001a04e:	or     eax,0xffffffff
1001a051:	jmp    0x1001a0e4
1001a056:	xor    edi,edi
1001a058:	cmp    eax,edi
1001a05a:	jl     0x1001a064
1001a05c:	cmp    eax,DWORD PTR ds:0x100cb064
1001a062:	jb     0x1001a085
1001a064:	call   0x1001cd21
1001a069:	mov    DWORD PTR [eax],edi
1001a06b:	call   0x1001cd0e
1001a070:	mov    DWORD PTR [eax],0x9
1001a076:	push   edi
1001a077:	push   edi
1001a078:	push   edi
1001a079:	push   edi
1001a07a:	push   edi
1001a07b:	call   0x10018dbf
1001a080:	add    esp,0x14
1001a083:	jmp    0x1001a04e
1001a085:	mov    ecx,eax
1001a087:	sar    ecx,0x5
1001a08a:	lea    ebx,[ecx*4+0x100cb080]
1001a091:	mov    esi,eax
1001a093:	and    esi,0x1f
1001a096:	shl    esi,0x6
1001a099:	mov    ecx,DWORD PTR [ebx]
1001a09b:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
1001a0a0:	and    ecx,0x1
1001a0a3:	je     0x1001a064
1001a0a5:	push   eax
1001a0a6:	call   0x100211c8
1001a0ab:	pop    ecx
1001a0ac:	mov    DWORD PTR [ebp-0x4],edi
1001a0af:	mov    eax,DWORD PTR [ebx]
1001a0b1:	test   BYTE PTR [eax+esi*1+0x4],0x1
1001a0b6:	je     0x1001a0c6
1001a0b8:	push   DWORD PTR [ebp+0x8]
1001a0bb:	call   0x10019f90
1001a0c0:	pop    ecx
1001a0c1:	mov    DWORD PTR [ebp-0x1c],eax
1001a0c4:	jmp    0x1001a0d5
1001a0c6:	call   0x1001cd0e
1001a0cb:	mov    DWORD PTR [eax],0x9
1001a0d1:	or     DWORD PTR [ebp-0x1c],0xffffffff
1001a0d5:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a0dc:	call   0x1001a0ea
1001a0e1:	mov    eax,DWORD PTR [ebp-0x1c]
1001a0e4:	call   0x1001a795
1001a0e9:	ret    
1001a0ea:	push   DWORD PTR [ebp+0x8]
1001a0ed:	call   0x10021268
1001a0f2:	pop    ecx
1001a0f3:	ret    
1001a0f4:	cmp    DWORD PTR [esp+0x8],0x0
1001a0f9:	je     0x1001a101
1001a0fb:	mov    BYTE PTR [ecx],0x2d
1001a0fe:	inc    ecx
1001a0ff:	neg    eax
1001a101:	push   esi
1001a102:	mov    esi,ecx
1001a104:	xor    edx,edx
1001a106:	div    DWORD PTR [esp+0x8]
1001a10a:	cmp    edx,0x9
1001a10d:	jbe    0x1001a114
1001a10f:	add    dl,0x57
1001a112:	jmp    0x1001a117
1001a114:	add    dl,0x30
1001a117:	mov    BYTE PTR [ecx],dl
1001a119:	inc    ecx
1001a11a:	test   eax,eax
1001a11c:	ja     0x1001a104
1001a11e:	mov    BYTE PTR [ecx],0x0
1001a121:	dec    ecx
1001a122:	mov    dl,BYTE PTR [esi]
1001a124:	mov    al,BYTE PTR [ecx]
1001a126:	mov    BYTE PTR [ecx],dl
1001a128:	dec    ecx
1001a129:	mov    BYTE PTR [esi],al
1001a12b:	inc    esi
1001a12c:	cmp    esi,ecx
1001a12e:	jb     0x1001a122
1001a130:	pop    esi
1001a131:	ret    0x8
1001a134:	push   ebp
1001a135:	mov    ebp,esp
1001a137:	xor    eax,eax
1001a139:	cmp    DWORD PTR [ebp+0x10],0xa
1001a13d:	jne    0x1001a145
1001a13f:	cmp    DWORD PTR [ebp+0x8],eax
1001a142:	jge    0x1001a145
1001a144:	inc    eax
1001a145:	mov    ecx,DWORD PTR [ebp+0xc]
1001a148:	push   eax
1001a149:	push   DWORD PTR [ebp+0x10]
1001a14c:	mov    eax,DWORD PTR [ebp+0x8]
1001a14f:	call   0x1001a0f4
1001a154:	mov    eax,DWORD PTR [ebp+0xc]
1001a157:	pop    ebp
1001a158:	ret    
1001a159:	push   ebp
1001a15a:	mov    ebp,esp
1001a15c:	sub    esp,0x18
1001a15f:	push   ebx
1001a160:	push   esi
1001a161:	push   DWORD PTR [ebp+0xc]
1001a164:	lea    ecx,[ebp-0x18]
1001a167:	call   0x1001924a
1001a16c:	mov    ebx,DWORD PTR [ebp+0x8]
1001a16f:	mov    esi,0x100
1001a174:	cmp    ebx,esi
1001a176:	jae    0x1001a1cc
1001a178:	mov    ecx,DWORD PTR [ebp-0x18]
1001a17b:	cmp    DWORD PTR [ecx+0xac],0x1
1001a182:	jle    0x1001a198
1001a184:	lea    eax,[ebp-0x18]
1001a187:	push   eax
1001a188:	push   0x1
1001a18a:	push   ebx
1001a18b:	call   0x10021615
1001a190:	mov    ecx,DWORD PTR [ebp-0x18]
1001a193:	add    esp,0xc
1001a196:	jmp    0x1001a1a5
1001a198:	mov    eax,DWORD PTR [ecx+0xc8]
1001a19e:	movzx  eax,BYTE PTR [eax+ebx*2]
1001a1a2:	and    eax,0x1
1001a1a5:	test   eax,eax
1001a1a7:	je     0x1001a1b8
1001a1a9:	mov    eax,DWORD PTR [ecx+0xcc]
1001a1af:	movzx  eax,BYTE PTR [eax+ebx*1]
1001a1b3:	jmp    0x1001a25f
1001a1b8:	cmp    BYTE PTR [ebp-0xc],0x0
1001a1bc:	je     0x1001a1c5
1001a1be:	mov    eax,DWORD PTR [ebp-0x10]
1001a1c1:	and    DWORD PTR [eax+0x70],0xfffffffd
1001a1c5:	mov    eax,ebx
1001a1c7:	jmp    0x1001a26c
1001a1cc:	mov    eax,DWORD PTR [ebp-0x18]
1001a1cf:	cmp    DWORD PTR [eax+0xac],0x1
1001a1d6:	jle    0x1001a209
1001a1d8:	mov    DWORD PTR [ebp+0x8],ebx
1001a1db:	sar    DWORD PTR [ebp+0x8],0x8
1001a1df:	lea    eax,[ebp-0x18]
1001a1e2:	push   eax
1001a1e3:	mov    eax,DWORD PTR [ebp+0x8]
1001a1e6:	and    eax,0xff
1001a1eb:	push   eax
1001a1ec:	call   0x10019c87
1001a1f1:	test   eax,eax
1001a1f3:	pop    ecx
1001a1f4:	pop    ecx
1001a1f5:	je     0x1001a209
1001a1f7:	mov    al,BYTE PTR [ebp+0x8]
1001a1fa:	push   0x2
1001a1fc:	mov    BYTE PTR [ebp-0x4],al
1001a1ff:	mov    BYTE PTR [ebp-0x3],bl
1001a202:	mov    BYTE PTR [ebp-0x2],0x0
1001a206:	pop    ecx
1001a207:	jmp    0x1001a21e
1001a209:	call   0x1001cd0e
1001a20e:	mov    DWORD PTR [eax],0x2a
1001a214:	xor    ecx,ecx
1001a216:	mov    BYTE PTR [ebp-0x4],bl
1001a219:	mov    BYTE PTR [ebp-0x3],0x0
1001a21d:	inc    ecx
1001a21e:	mov    eax,DWORD PTR [ebp-0x18]
1001a221:	push   0x1
1001a223:	push   DWORD PTR [eax+0x4]
1001a226:	lea    edx,[ebp-0x8]
1001a229:	push   0x3
1001a22b:	push   edx
1001a22c:	push   ecx
1001a22d:	lea    ecx,[ebp-0x4]
1001a230:	push   ecx
1001a231:	push   esi
1001a232:	push   DWORD PTR [eax+0x14]
1001a235:	lea    eax,[ebp-0x18]
1001a238:	push   eax
1001a239:	call   0x1001af6c
1001a23e:	add    esp,0x24
1001a241:	test   eax,eax
1001a243:	je     0x1001a1b8
1001a249:	cmp    eax,0x1
1001a24c:	jne    0x1001a254
1001a24e:	movzx  eax,BYTE PTR [ebp-0x8]
1001a252:	jmp    0x1001a25f
1001a254:	movzx  ecx,BYTE PTR [ebp-0x7]
1001a258:	xor    eax,eax
1001a25a:	mov    ah,BYTE PTR [ebp-0x8]
1001a25d:	or     eax,ecx
1001a25f:	cmp    BYTE PTR [ebp-0xc],0x0
1001a263:	je     0x1001a26c
1001a265:	mov    ecx,DWORD PTR [ebp-0x10]
1001a268:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001a26c:	pop    esi
1001a26d:	pop    ebx
1001a26e:	leave  
1001a26f:	ret    
1001a270:	cmp    DWORD PTR ds:0x100c9260,0x0
1001a277:	jne    0x1001a289
1001a279:	mov    eax,DWORD PTR [esp+0x4]
1001a27d:	lea    ecx,[eax-0x41]
1001a280:	cmp    ecx,0x19
1001a283:	ja     0x1001a296
1001a285:	add    eax,0x20
1001a288:	ret    
1001a289:	push   0x0
1001a28b:	push   DWORD PTR [esp+0x8]
1001a28f:	call   0x1001a159
1001a294:	pop    ecx
1001a295:	pop    ecx
1001a296:	ret    
1001a297:	push   ebp
1001a298:	mov    ebp,esp
1001a29a:	sub    esp,0x20
1001a29d:	push   ebx
1001a29e:	xor    ebx,ebx
1001a2a0:	cmp    DWORD PTR [ebp+0xc],ebx
1001a2a3:	jne    0x1001a2c2
1001a2a5:	call   0x1001cd0e
1001a2aa:	push   ebx
1001a2ab:	push   ebx
1001a2ac:	push   ebx
1001a2ad:	push   ebx
1001a2ae:	push   ebx
1001a2af:	mov    DWORD PTR [eax],0x16
1001a2b5:	call   0x10018dbf
1001a2ba:	add    esp,0x14
1001a2bd:	or     eax,0xffffffff
1001a2c0:	jmp    0x1001a30f
1001a2c2:	mov    eax,DWORD PTR [ebp+0x8]
1001a2c5:	cmp    eax,ebx
1001a2c7:	je     0x1001a2a5
1001a2c9:	push   esi
1001a2ca:	mov    DWORD PTR [ebp-0x18],eax
1001a2cd:	mov    DWORD PTR [ebp-0x20],eax
1001a2d0:	lea    eax,[ebp+0x10]
1001a2d3:	push   eax
1001a2d4:	push   ebx
1001a2d5:	push   DWORD PTR [ebp+0xc]
1001a2d8:	lea    eax,[ebp-0x20]
1001a2db:	push   eax
1001a2dc:	mov    DWORD PTR [ebp-0x1c],0x7fffffff
1001a2e3:	mov    DWORD PTR [ebp-0x14],0x42
1001a2ea:	call   0x1002176c
1001a2ef:	add    esp,0x10
1001a2f2:	dec    DWORD PTR [ebp-0x1c]
1001a2f5:	mov    esi,eax
1001a2f7:	js     0x1001a300
1001a2f9:	mov    eax,DWORD PTR [ebp-0x20]
1001a2fc:	mov    BYTE PTR [eax],bl
1001a2fe:	jmp    0x1001a30c
1001a300:	lea    eax,[ebp-0x20]
1001a303:	push   eax
1001a304:	push   ebx
1001a305:	call   0x1001fb0b
1001a30a:	pop    ecx
1001a30b:	pop    ecx
1001a30c:	mov    eax,esi
1001a30e:	pop    esi
1001a30f:	pop    ebx
1001a310:	leave  
1001a311:	ret    
1001a312:	push   0x14
1001a314:	push   0x100bb3e8
1001a319:	call   0x1001a750
1001a31e:	and    DWORD PTR [ebp-0x4],0x0
1001a322:	dec    DWORD PTR [ebp+0x10]
1001a325:	js     0x1001a361
1001a327:	mov    ecx,DWORD PTR [ebp+0x8]
1001a32a:	sub    ecx,DWORD PTR [ebp+0xc]
1001a32d:	mov    DWORD PTR [ebp+0x8],ecx
1001a330:	call   DWORD PTR [ebp+0x14]
1001a333:	jmp    0x1001a322
1001a335:	mov    eax,DWORD PTR [ebp-0x14]
1001a338:	mov    DWORD PTR [ebp-0x1c],eax
1001a33b:	mov    eax,DWORD PTR [ebp-0x1c]
1001a33e:	mov    eax,DWORD PTR [eax]
1001a340:	mov    DWORD PTR [ebp-0x20],eax
1001a343:	mov    eax,DWORD PTR [ebp-0x20]
1001a346:	cmp    DWORD PTR [eax],0xe06d7363
1001a34c:	je     0x1001a359
1001a34e:	mov    DWORD PTR [ebp-0x24],0x0
1001a355:	mov    eax,DWORD PTR [ebp-0x24]
1001a358:	ret    
1001a359:	call   0x1001c84c
1001a35e:	mov    esp,DWORD PTR [ebp-0x18]
1001a361:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a368:	call   0x1001a795
1001a36d:	ret    0x10
1001a370:	push   0xc
1001a372:	push   0x100bb408
1001a377:	call   0x1001a750
1001a37c:	and    DWORD PTR [ebp-0x1c],0x0
1001a380:	mov    esi,DWORD PTR [ebp+0xc]
1001a383:	mov    eax,esi
1001a385:	imul   eax,DWORD PTR [ebp+0x10]
1001a389:	add    DWORD PTR [ebp+0x8],eax
1001a38c:	and    DWORD PTR [ebp-0x4],0x0
1001a390:	dec    DWORD PTR [ebp+0x10]
1001a393:	js     0x1001a3a0
1001a395:	sub    DWORD PTR [ebp+0x8],esi
1001a398:	mov    ecx,DWORD PTR [ebp+0x8]
1001a39b:	call   DWORD PTR [ebp+0x14]
1001a39e:	jmp    0x1001a390
1001a3a0:	mov    DWORD PTR [ebp-0x1c],0x1
1001a3a7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a3ae:	call   0x1001a3bb
1001a3b3:	call   0x1001a795
1001a3b8:	ret    0x10
1001a3bb:	cmp    DWORD PTR [ebp-0x1c],0x0
1001a3bf:	jne    0x1001a3d2
1001a3c1:	push   DWORD PTR [ebp+0x14]
1001a3c4:	push   DWORD PTR [ebp+0x10]
1001a3c7:	push   DWORD PTR [ebp+0xc]
1001a3ca:	push   DWORD PTR [ebp+0x8]
1001a3cd:	call   0x1001a312
1001a3d2:	ret    
1001a3d3:	jmp    0x1001876e
1001a3d8:	push   ebx
1001a3d9:	push   esi
1001a3da:	mov    esi,DWORD PTR [esp+0xc]
1001a3de:	push   edi
1001a3df:	xor    edi,edi
1001a3e1:	or     ebx,0xffffffff
1001a3e4:	cmp    esi,edi
1001a3e6:	jne    0x1001a404
1001a3e8:	call   0x1001cd0e
1001a3ed:	push   edi
1001a3ee:	push   edi
1001a3ef:	push   edi
1001a3f0:	push   edi
1001a3f1:	push   edi
1001a3f2:	mov    DWORD PTR [eax],0x16
1001a3f8:	call   0x10018dbf
1001a3fd:	add    esp,0x14
1001a400:	or     eax,ebx
1001a402:	jmp    0x1001a446
1001a404:	test   BYTE PTR [esi+0xc],0x83
1001a408:	je     0x1001a441
1001a40a:	push   esi
1001a40b:	call   0x10022186
1001a410:	push   esi
1001a411:	mov    ebx,eax
1001a413:	call   0x1002215a
1001a418:	push   esi
1001a419:	call   0x1002212d
1001a41e:	push   eax
1001a41f:	call   0x1001a027
1001a424:	add    esp,0x10
1001a427:	test   eax,eax
1001a429:	jge    0x1001a430
1001a42b:	or     ebx,0xffffffff
1001a42e:	jmp    0x1001a441
1001a430:	mov    eax,DWORD PTR [esi+0x1c]
1001a433:	cmp    eax,edi
1001a435:	je     0x1001a441
1001a437:	push   eax
1001a438:	call   0x100197d5
1001a43d:	pop    ecx
1001a43e:	mov    DWORD PTR [esi+0x1c],edi
1001a441:	mov    DWORD PTR [esi+0xc],edi
1001a444:	mov    eax,ebx
1001a446:	pop    edi
1001a447:	pop    esi
1001a448:	pop    ebx
1001a449:	ret    
1001a44a:	push   0xc
1001a44c:	push   0x100bb428
1001a451:	call   0x1001a750
1001a456:	or     DWORD PTR [ebp-0x1c],0xffffffff
1001a45a:	xor    eax,eax
1001a45c:	mov    esi,DWORD PTR [ebp+0x8]
1001a45f:	xor    edi,edi
1001a461:	cmp    esi,edi
1001a463:	setne  al
1001a466:	cmp    eax,edi
1001a468:	jne    0x1001a487
1001a46a:	call   0x1001cd0e
1001a46f:	mov    DWORD PTR [eax],0x16
1001a475:	push   edi
1001a476:	push   edi
1001a477:	push   edi
1001a478:	push   edi
1001a479:	push   edi
1001a47a:	call   0x10018dbf
1001a47f:	add    esp,0x14
1001a482:	or     eax,0xffffffff
1001a485:	jmp    0x1001a493
1001a487:	test   BYTE PTR [esi+0xc],0x40
1001a48b:	je     0x1001a499
1001a48d:	mov    DWORD PTR [esi+0xc],edi
1001a490:	mov    eax,DWORD PTR [ebp-0x1c]
1001a493:	call   0x1001a795
1001a498:	ret    
1001a499:	push   esi
1001a49a:	call   0x10021361
1001a49f:	pop    ecx
1001a4a0:	mov    DWORD PTR [ebp-0x4],edi
1001a4a3:	push   esi
1001a4a4:	call   0x1001a3d8
1001a4a9:	pop    ecx
1001a4aa:	mov    DWORD PTR [ebp-0x1c],eax
1001a4ad:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a4b4:	call   0x1001a4be
1001a4b9:	jmp    0x1001a490
1001a4bb:	mov    esi,DWORD PTR [ebp+0x8]
1001a4be:	push   esi
1001a4bf:	call   0x100213cb
1001a4c4:	pop    ecx
1001a4c5:	ret    
1001a4c6:	push   ebp
1001a4c7:	mov    ebp,esp
1001a4c9:	sub    esp,0x10
1001a4cc:	push   DWORD PTR [ebp+0xc]
1001a4cf:	lea    ecx,[ebp-0x10]
1001a4d2:	call   0x1001924a
1001a4d7:	mov    eax,DWORD PTR [ebp-0x10]
1001a4da:	cmp    DWORD PTR [eax+0xac],0x1
1001a4e1:	jle    0x1001a4f6
1001a4e3:	lea    eax,[ebp-0x10]
1001a4e6:	push   eax
1001a4e7:	push   0x4
1001a4e9:	push   DWORD PTR [ebp+0x8]
1001a4ec:	call   0x10021615
1001a4f1:	add    esp,0xc
1001a4f4:	jmp    0x1001a506
1001a4f6:	mov    eax,DWORD PTR [eax+0xc8]
1001a4fc:	mov    ecx,DWORD PTR [ebp+0x8]
1001a4ff:	movzx  eax,BYTE PTR [eax+ecx*2]
1001a503:	and    eax,0x4
1001a506:	cmp    BYTE PTR [ebp-0x4],0x0
1001a50a:	je     0x1001a513
1001a50c:	mov    ecx,DWORD PTR [ebp-0x8]
1001a50f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001a513:	leave  
1001a514:	ret    
1001a515:	cmp    DWORD PTR ds:0x100c9260,0x0
1001a51c:	jne    0x1001a530
1001a51e:	mov    eax,DWORD PTR [esp+0x4]
1001a522:	mov    ecx,DWORD PTR ds:0x100c7f48
1001a528:	movzx  eax,BYTE PTR [ecx+eax*2]
1001a52c:	and    eax,0x4
1001a52f:	ret    
1001a530:	push   0x0
1001a532:	push   DWORD PTR [esp+0x8]
1001a536:	call   0x1001a4c6
1001a53b:	pop    ecx
1001a53c:	pop    ecx
1001a53d:	ret    
1001a53e:	mov    ecx,DWORD PTR [esp+0xc]
1001a542:	test   ecx,ecx
1001a544:	push   esi
1001a545:	push   edi
1001a546:	mov    edi,DWORD PTR [esp+0xc]
1001a54a:	mov    esi,edi
1001a54c:	je     0x1001a576
1001a54e:	mov    edx,DWORD PTR [esp+0x10]
1001a552:	movzx  eax,WORD PTR [edx]
1001a555:	mov    WORD PTR [edi],ax
1001a558:	inc    edi
1001a559:	inc    edi
1001a55a:	inc    edx
1001a55b:	inc    edx
1001a55c:	test   ax,ax
1001a55f:	je     0x1001a564
1001a561:	dec    ecx
1001a562:	jne    0x1001a552
1001a564:	test   ecx,ecx
1001a566:	je     0x1001a576
1001a568:	dec    ecx
1001a569:	je     0x1001a576
1001a56b:	xor    eax,eax
1001a56d:	shr    ecx,1
1001a56f:	rep stos DWORD PTR es:[edi],eax
1001a571:	adc    ecx,ecx
1001a573:	rep stos WORD PTR es:[edi],ax
1001a576:	pop    edi
1001a577:	mov    eax,esi
1001a579:	pop    esi
1001a57a:	ret    
1001a57b:	cmp    DWORD PTR [esp+0x8],0x0
1001a580:	je     0x1001a58c
1001a582:	mov    WORD PTR [ecx],0x2d
1001a587:	add    ecx,0x2
1001a58a:	neg    eax
1001a58c:	push   esi
1001a58d:	mov    esi,ecx
1001a58f:	xor    edx,edx
1001a591:	div    DWORD PTR [esp+0x8]
1001a595:	cmp    edx,0x9
1001a598:	jbe    0x1001a59f
1001a59a:	add    edx,0x57
1001a59d:	jmp    0x1001a5a2
1001a59f:	add    edx,0x30
1001a5a2:	mov    WORD PTR [ecx],dx
1001a5a5:	inc    ecx
1001a5a6:	inc    ecx
1001a5a7:	test   eax,eax
1001a5a9:	ja     0x1001a58f
1001a5ab:	and    WORD PTR [ecx],0x0
1001a5af:	dec    ecx
1001a5b0:	dec    ecx
1001a5b1:	mov    dx,WORD PTR [esi]
1001a5b4:	movzx  eax,WORD PTR [ecx]
1001a5b7:	mov    WORD PTR [ecx],dx
1001a5ba:	dec    ecx
1001a5bb:	mov    WORD PTR [esi],ax
1001a5be:	dec    ecx
1001a5bf:	inc    esi
1001a5c0:	inc    esi
1001a5c1:	cmp    esi,ecx
1001a5c3:	jb     0x1001a5b1
1001a5c5:	pop    esi
1001a5c6:	ret    0x8
1001a5c9:	push   ebp
1001a5ca:	mov    ebp,esp
1001a5cc:	cmp    DWORD PTR [ebp+0x10],0xa
1001a5d0:	mov    eax,DWORD PTR [ebp+0x8]
1001a5d3:	jne    0x1001a5df
1001a5d5:	test   eax,eax
1001a5d7:	jge    0x1001a5df
1001a5d9:	push   0x1
1001a5db:	push   0xa
1001a5dd:	jmp    0x1001a5e4
1001a5df:	push   0x0
1001a5e1:	push   DWORD PTR [ebp+0x10]
1001a5e4:	mov    ecx,DWORD PTR [ebp+0xc]
1001a5e7:	call   0x1001a57b
1001a5ec:	mov    eax,DWORD PTR [ebp+0xc]
1001a5ef:	pop    ebp
1001a5f0:	ret    
1001a5f1:	push   ebp
1001a5f2:	mov    ebp,esp
1001a5f4:	cmp    DWORD PTR [ebp+0x14],0x0
1001a5f8:	push   ebx
1001a5f9:	mov    ebx,DWORD PTR [ebp+0x8]
1001a5fc:	push   esi
1001a5fd:	mov    esi,eax
1001a5ff:	mov    eax,DWORD PTR [ebp+0xc]
1001a602:	push   edi
1001a603:	je     0x1001a614
1001a605:	mov    WORD PTR [esi],0x2d
1001a60a:	add    esi,0x2
1001a60d:	neg    ebx
1001a60f:	adc    eax,0x0
1001a612:	neg    eax
1001a614:	mov    edi,esi
1001a616:	xor    ecx,ecx
1001a618:	push   ecx
1001a619:	push   DWORD PTR [ebp+0x10]
1001a61c:	push   eax
1001a61d:	push   ebx
1001a61e:	call   0x10021580
1001a623:	cmp    ecx,0x9
1001a626:	mov    DWORD PTR [ebp+0xc],ebx
1001a629:	mov    ebx,eax
1001a62b:	mov    eax,edx
1001a62d:	jbe    0x1001a634
1001a62f:	add    ecx,0x57
1001a632:	jmp    0x1001a637
1001a634:	add    ecx,0x30
1001a637:	mov    WORD PTR [esi],cx
1001a63a:	inc    esi
1001a63b:	inc    esi
1001a63c:	test   eax,eax
1001a63e:	ja     0x1001a616
1001a640:	jb     0x1001a646
1001a642:	test   ebx,ebx
1001a644:	ja     0x1001a616
1001a646:	and    WORD PTR [esi],0x0
1001a64a:	dec    esi
1001a64b:	dec    esi
1001a64c:	mov    cx,WORD PTR [edi]
1001a64f:	movzx  eax,WORD PTR [esi]
1001a652:	mov    WORD PTR [esi],cx
1001a655:	dec    esi
1001a656:	mov    WORD PTR [edi],ax
1001a659:	dec    esi
1001a65a:	inc    edi
1001a65b:	inc    edi
1001a65c:	cmp    edi,esi
1001a65e:	jb     0x1001a64c
1001a660:	pop    edi
1001a661:	pop    esi
1001a662:	pop    ebx
1001a663:	pop    ebp
1001a664:	ret    0x10
1001a667:	push   ebp
1001a668:	mov    ebp,esp
1001a66a:	xor    eax,eax
1001a66c:	cmp    DWORD PTR [ebp+0x14],0xa
1001a670:	jne    0x1001a681
1001a672:	cmp    DWORD PTR [ebp+0xc],eax
1001a675:	jg     0x1001a681
1001a677:	jl     0x1001a67e
1001a679:	cmp    DWORD PTR [ebp+0x8],eax
1001a67c:	jae    0x1001a681
1001a67e:	xor    eax,eax
1001a680:	inc    eax
1001a681:	push   eax
1001a682:	push   DWORD PTR [ebp+0x14]
1001a685:	mov    eax,DWORD PTR [ebp+0x10]
1001a688:	push   DWORD PTR [ebp+0xc]
1001a68b:	push   DWORD PTR [ebp+0x8]
1001a68e:	call   0x1001a5f1
1001a693:	mov    eax,DWORD PTR [ebp+0x10]
1001a696:	pop    ebp
1001a697:	ret    
1001a698:	push   ebp
1001a699:	mov    ebp,esp
1001a69b:	cmp    DWORD PTR [ebp+0x10],0x0
1001a69f:	jne    0x1001a6a5
1001a6a1:	xor    eax,eax
1001a6a3:	pop    ebp
1001a6a4:	ret    
1001a6a5:	mov    edx,DWORD PTR [ebp+0xc]
1001a6a8:	mov    ecx,DWORD PTR [ebp+0x8]
1001a6ab:	dec    DWORD PTR [ebp+0x10]
1001a6ae:	je     0x1001a6c3
1001a6b0:	movzx  eax,WORD PTR [ecx]
1001a6b3:	test   ax,ax
1001a6b6:	je     0x1001a6c3
1001a6b8:	cmp    ax,WORD PTR [edx]
1001a6bb:	jne    0x1001a6c3
1001a6bd:	inc    ecx
1001a6be:	inc    ecx
1001a6bf:	inc    edx
1001a6c0:	inc    edx
1001a6c1:	jmp    0x1001a6ab
1001a6c3:	movzx  eax,WORD PTR [ecx]
1001a6c6:	movzx  ecx,WORD PTR [edx]
1001a6c9:	sub    eax,ecx
1001a6cb:	pop    ebp
1001a6cc:	ret    
1001a6cd:	push   0x10
1001a6cf:	push   0x100bb448
1001a6d4:	call   0x1001a750
1001a6d9:	xor    eax,eax
1001a6db:	mov    DWORD PTR [ebp-0x20],eax
1001a6de:	mov    DWORD PTR [ebp-0x4],eax
1001a6e1:	mov    DWORD PTR [ebp-0x1c],eax
1001a6e4:	mov    eax,DWORD PTR [ebp-0x1c]
1001a6e7:	cmp    eax,DWORD PTR [ebp+0x10]
1001a6ea:	jge    0x1001a6ff
1001a6ec:	mov    esi,DWORD PTR [ebp+0x8]
1001a6ef:	mov    ecx,esi
1001a6f1:	call   DWORD PTR [ebp+0x14]
1001a6f4:	add    esi,DWORD PTR [ebp+0xc]
1001a6f7:	mov    DWORD PTR [ebp+0x8],esi
1001a6fa:	inc    DWORD PTR [ebp-0x1c]
1001a6fd:	jmp    0x1001a6e4
1001a6ff:	mov    DWORD PTR [ebp-0x20],0x1
1001a706:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a70d:	call   0x1001a71a
1001a712:	call   0x1001a795
1001a717:	ret    0x14
1001a71a:	cmp    DWORD PTR [ebp-0x20],0x0
1001a71e:	jne    0x1001a731
1001a720:	push   DWORD PTR [ebp+0x18]
1001a723:	push   DWORD PTR [ebp-0x1c]
1001a726:	push   DWORD PTR [ebp+0xc]
1001a729:	push   DWORD PTR [ebp+0x8]
1001a72c:	call   0x1001a312
1001a731:	ret    
1001a732:	mov    eax,DWORD PTR [esp+0x4]
1001a736:	test   eax,eax
1001a738:	je     0x1001a74c
1001a73a:	sub    eax,0x8
1001a73d:	cmp    DWORD PTR [eax],0xdddd
1001a743:	jne    0x1001a74c
1001a745:	push   eax
1001a746:	call   0x100197d5
1001a74b:	pop    ecx
1001a74c:	ret    
1001a74d:	int3   
1001a74e:	int3   
1001a74f:	int3   
1001a750:	push   0x1001a7b0
1001a755:	push   DWORD PTR fs:0x0
1001a75c:	mov    eax,DWORD PTR [esp+0x10]
1001a760:	mov    DWORD PTR [esp+0x10],ebp
1001a764:	lea    ebp,[esp+0x10]
1001a768:	sub    esp,eax
1001a76a:	push   ebx
1001a76b:	push   esi
1001a76c:	push   edi
1001a76d:	mov    eax,ds:0x100c7654
1001a772:	xor    DWORD PTR [ebp-0x4],eax
1001a775:	xor    eax,ebp
1001a777:	push   eax
1001a778:	mov    DWORD PTR [ebp-0x18],esp
1001a77b:	push   DWORD PTR [ebp-0x8]
1001a77e:	mov    eax,DWORD PTR [ebp-0x4]
1001a781:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001a788:	mov    DWORD PTR [ebp-0x8],eax
1001a78b:	lea    eax,[ebp-0x10]
1001a78e:	mov    fs:0x0,eax
1001a794:	ret    
1001a795:	mov    ecx,DWORD PTR [ebp-0x10]
1001a798:	mov    DWORD PTR fs:0x0,ecx
1001a79f:	pop    ecx
1001a7a0:	pop    edi
1001a7a1:	pop    edi
1001a7a2:	pop    esi
1001a7a3:	pop    ebx
1001a7a4:	mov    esp,ebp
1001a7a6:	pop    ebp
1001a7a7:	push   ecx
1001a7a8:	ret    
1001a7a9:	int3   
1001a7aa:	int3   
1001a7ab:	int3   
1001a7ac:	int3   
1001a7ad:	int3   
1001a7ae:	int3   
1001a7af:	int3   
1001a7b0:	sub    esp,0x14
1001a7b3:	push   ebx
1001a7b4:	mov    ebx,DWORD PTR [esp+0x20]
1001a7b8:	push   ebp
1001a7b9:	push   esi
1001a7ba:	mov    esi,DWORD PTR [ebx+0x8]
1001a7bd:	xor    esi,DWORD PTR ds:0x100c7654
1001a7c3:	push   edi
1001a7c4:	mov    eax,DWORD PTR [esi]
1001a7c6:	cmp    eax,0xfffffffe
1001a7c9:	mov    BYTE PTR [esp+0x13],0x0
1001a7ce:	mov    DWORD PTR [esp+0x18],0x1
1001a7d6:	lea    edi,[ebx+0x10]
1001a7d9:	je     0x1001a7e8
1001a7db:	mov    ecx,DWORD PTR [esi+0x4]
1001a7de:	add    ecx,edi
1001a7e0:	xor    ecx,DWORD PTR [eax+edi*1]
1001a7e3:	call   0x10018773
1001a7e8:	mov    ecx,DWORD PTR [esi+0xc]
1001a7eb:	mov    eax,DWORD PTR [esi+0x8]
1001a7ee:	add    ecx,edi
1001a7f0:	xor    ecx,DWORD PTR [eax+edi*1]
1001a7f3:	call   0x10018773
1001a7f8:	mov    eax,DWORD PTR [esp+0x28]
1001a7fc:	test   BYTE PTR [eax+0x4],0x66
1001a800:	jne    0x1001a925
1001a806:	mov    ebp,DWORD PTR [ebx+0xc]
1001a809:	cmp    ebp,0xfffffffe
1001a80c:	mov    ecx,DWORD PTR [esp+0x30]
1001a810:	lea    edx,[esp+0x1c]
1001a814:	mov    DWORD PTR [esp+0x1c],eax
1001a818:	mov    DWORD PTR [esp+0x20],ecx
1001a81c:	mov    DWORD PTR [ebx-0x4],edx
1001a81f:	je     0x1001a87f
1001a821:	lea    eax,[ebp+ebp*2+0x0]
1001a825:	mov    ecx,DWORD PTR [esi+eax*4+0x14]
1001a829:	test   ecx,ecx
1001a82b:	lea    ebx,[esi+eax*4+0x10]
1001a82f:	mov    eax,DWORD PTR [ebx]
1001a831:	mov    DWORD PTR [esp+0x14],eax
1001a835:	je     0x1001a84d
1001a837:	mov    edx,edi
1001a839:	call   0x1002151e
1001a83e:	test   eax,eax
1001a840:	mov    BYTE PTR [esp+0x13],0x1
1001a845:	jl     0x1001a88b
1001a847:	jg     0x1001a895
1001a849:	mov    eax,DWORD PTR [esp+0x14]
1001a84d:	cmp    eax,0xfffffffe
1001a850:	mov    ebp,eax
1001a852:	jne    0x1001a821
1001a854:	cmp    BYTE PTR [esp+0x13],0x0
1001a859:	je     0x1001a87f
1001a85b:	mov    eax,DWORD PTR [esi]
1001a85d:	cmp    eax,0xfffffffe
1001a860:	je     0x1001a86f
1001a862:	mov    ecx,DWORD PTR [esi+0x4]
1001a865:	add    ecx,edi
1001a867:	xor    ecx,DWORD PTR [eax+edi*1]
1001a86a:	call   0x10018773
1001a86f:	mov    ecx,DWORD PTR [esi+0xc]
1001a872:	mov    eax,DWORD PTR [esi+0x8]
1001a875:	add    ecx,edi
1001a877:	xor    ecx,DWORD PTR [eax+edi*1]
1001a87a:	call   0x10018773
1001a87f:	mov    eax,DWORD PTR [esp+0x18]
1001a883:	pop    edi
1001a884:	pop    esi
1001a885:	pop    ebp
1001a886:	pop    ebx
1001a887:	add    esp,0x14
1001a88a:	ret    
1001a88b:	mov    DWORD PTR [esp+0x18],0x0
1001a893:	jmp    0x1001a85b
1001a895:	mov    ecx,DWORD PTR [esp+0x28]
1001a899:	cmp    DWORD PTR [ecx],0xe06d7363
1001a89f:	jne    0x1001a8cb
1001a8a1:	cmp    DWORD PTR ds:0x100b2fd8,0x0
1001a8a8:	je     0x1001a8cb
1001a8aa:	push   0x100b2fd8
1001a8af:	call   0x10022e10
1001a8b4:	add    esp,0x4
1001a8b7:	test   eax,eax
1001a8b9:	je     0x1001a8cb
1001a8bb:	mov    edx,DWORD PTR [esp+0x28]
1001a8bf:	push   0x1
1001a8c1:	push   edx
1001a8c2:	call   DWORD PTR ds:0x100b2fd8
1001a8c8:	add    esp,0x8
1001a8cb:	mov    ecx,DWORD PTR [esp+0x2c]
1001a8cf:	call   0x1002154e
1001a8d4:	mov    eax,DWORD PTR [esp+0x2c]
1001a8d8:	cmp    DWORD PTR [eax+0xc],ebp
1001a8db:	je     0x1001a8f0
1001a8dd:	push   0x100c7654
1001a8e2:	push   edi
1001a8e3:	mov    edx,ebp
1001a8e5:	mov    ecx,eax
1001a8e7:	call   0x10021568
1001a8ec:	mov    eax,DWORD PTR [esp+0x2c]
1001a8f0:	mov    ecx,DWORD PTR [esp+0x14]
1001a8f4:	mov    DWORD PTR [eax+0xc],ecx
1001a8f7:	mov    eax,DWORD PTR [esi]
1001a8f9:	cmp    eax,0xfffffffe
1001a8fc:	je     0x1001a90b
1001a8fe:	mov    ecx,DWORD PTR [esi+0x4]
1001a901:	add    ecx,edi
1001a903:	xor    ecx,DWORD PTR [eax+edi*1]
1001a906:	call   0x10018773
1001a90b:	mov    ecx,DWORD PTR [esi+0xc]
1001a90e:	mov    edx,DWORD PTR [esi+0x8]
1001a911:	add    ecx,edi
1001a913:	xor    ecx,DWORD PTR [edx+edi*1]
1001a916:	call   0x10018773
1001a91b:	mov    ecx,DWORD PTR [ebx+0x8]
1001a91e:	mov    edx,edi
1001a920:	jmp    0x10021535
1001a925:	cmp    DWORD PTR [ebx+0xc],0xfffffffe
1001a929:	je     0x1001a87f
1001a92f:	push   0x100c7654
1001a934:	push   edi
1001a935:	mov    ecx,ebx
1001a937:	mov    edx,0xfffffffe
1001a93c:	call   0x10021568
1001a941:	jmp    0x1001a85b
1001a946:	push   0x10
1001a948:	push   0x100bb468
1001a94d:	call   0x1001a750
1001a952:	mov    ebx,DWORD PTR [ebp+0x8]
1001a955:	test   ebx,ebx
1001a957:	jne    0x1001a967
1001a959:	push   DWORD PTR [ebp+0xc]
1001a95c:	call   0x100198b2
1001a961:	pop    ecx
1001a962:	jmp    0x1001ab33
1001a967:	mov    esi,DWORD PTR [ebp+0xc]
1001a96a:	test   esi,esi
1001a96c:	jne    0x1001a97a
1001a96e:	push   ebx
1001a96f:	call   0x100197d5
1001a974:	pop    ecx
1001a975:	jmp    0x1001ab31
1001a97a:	cmp    DWORD PTR ds:0x100cb198,0x3
1001a981:	jne    0x1001ab1a
1001a987:	xor    edi,edi
1001a989:	mov    DWORD PTR [ebp-0x1c],edi
1001a98c:	cmp    esi,0xffffffe0
1001a98f:	ja     0x1001ab1f
1001a995:	push   0x4
1001a997:	call   0x1001e3bb
1001a99c:	pop    ecx
1001a99d:	mov    DWORD PTR [ebp-0x4],edi
1001a9a0:	push   ebx
1001a9a1:	call   0x1001e434
1001a9a6:	pop    ecx
1001a9a7:	mov    DWORD PTR [ebp-0x20],eax
1001a9aa:	cmp    eax,edi
1001a9ac:	je     0x1001aa50
1001a9b2:	cmp    esi,DWORD PTR ds:0x100cb188
1001a9b8:	ja     0x1001aa03
1001a9ba:	push   esi
1001a9bb:	push   ebx
1001a9bc:	push   eax
1001a9bd:	call   0x1001e929
1001a9c2:	add    esp,0xc
1001a9c5:	test   eax,eax
1001a9c7:	je     0x1001a9ce
1001a9c9:	mov    DWORD PTR [ebp-0x1c],ebx
1001a9cc:	jmp    0x1001aa03
1001a9ce:	push   esi
1001a9cf:	call   0x1001ec08
1001a9d4:	pop    ecx
1001a9d5:	mov    DWORD PTR [ebp-0x1c],eax
1001a9d8:	cmp    eax,edi
1001a9da:	je     0x1001aa03
1001a9dc:	mov    eax,DWORD PTR [ebx-0x4]
1001a9df:	dec    eax
1001a9e0:	cmp    eax,esi
1001a9e2:	jb     0x1001a9e6
1001a9e4:	mov    eax,esi
1001a9e6:	push   eax
1001a9e7:	push   ebx
1001a9e8:	push   DWORD PTR [ebp-0x1c]
1001a9eb:	call   0x10019470
1001a9f0:	push   ebx
1001a9f1:	call   0x1001e434
1001a9f6:	mov    DWORD PTR [ebp-0x20],eax
1001a9f9:	push   ebx
1001a9fa:	push   eax
1001a9fb:	call   0x1001e45f
1001aa00:	add    esp,0x18
1001aa03:	cmp    DWORD PTR [ebp-0x1c],edi
1001aa06:	jne    0x1001aa50
1001aa08:	cmp    esi,edi
1001aa0a:	jne    0x1001aa12
1001aa0c:	xor    esi,esi
1001aa0e:	inc    esi
1001aa0f:	mov    DWORD PTR [ebp+0xc],esi
1001aa12:	add    esi,0xf
1001aa15:	and    esi,0xfffffff0
1001aa18:	mov    DWORD PTR [ebp+0xc],esi
1001aa1b:	push   esi
1001aa1c:	push   edi
1001aa1d:	push   DWORD PTR ds:0x100c9630
1001aa23:	call   DWORD PTR ds:0x1002f180
1001aa29:	mov    DWORD PTR [ebp-0x1c],eax
1001aa2c:	cmp    eax,edi
1001aa2e:	je     0x1001aa50
1001aa30:	mov    eax,DWORD PTR [ebx-0x4]
1001aa33:	dec    eax
1001aa34:	cmp    eax,esi
1001aa36:	jb     0x1001aa3a
1001aa38:	mov    eax,esi
1001aa3a:	push   eax
1001aa3b:	push   ebx
1001aa3c:	push   DWORD PTR [ebp-0x1c]
1001aa3f:	call   0x10019470
1001aa44:	push   ebx
1001aa45:	push   DWORD PTR [ebp-0x20]
1001aa48:	call   0x1001e45f
1001aa4d:	add    esp,0x14
1001aa50:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001aa57:	call   0x1001aa8a
1001aa5c:	cmp    DWORD PTR [ebp-0x20],0x0
1001aa60:	jne    0x1001aa93
1001aa62:	test   esi,esi
1001aa64:	jne    0x1001aa67
1001aa66:	inc    esi
1001aa67:	add    esi,0xf
1001aa6a:	and    esi,0xfffffff0
1001aa6d:	mov    DWORD PTR [ebp+0xc],esi
1001aa70:	push   esi
1001aa71:	push   ebx
1001aa72:	push   0x0
1001aa74:	push   DWORD PTR ds:0x100c9630
1001aa7a:	call   DWORD PTR ds:0x1002f188
1001aa80:	mov    edi,eax
1001aa82:	jmp    0x1001aa96
1001aa84:	mov    esi,DWORD PTR [ebp+0xc]
1001aa87:	mov    ebx,DWORD PTR [ebp+0x8]
1001aa8a:	push   0x4
1001aa8c:	call   0x1001e2e3
1001aa91:	pop    ecx
1001aa92:	ret    
1001aa93:	mov    edi,DWORD PTR [ebp-0x1c]
1001aa96:	test   edi,edi
1001aa98:	jne    0x1001ab5d
1001aa9e:	cmp    DWORD PTR ds:0x100c9aa4,edi
1001aaa4:	je     0x1001aad2
1001aaa6:	push   esi
1001aaa7:	call   0x1001cec7
1001aaac:	pop    ecx
1001aaad:	test   eax,eax
1001aaaf:	jne    0x1001a987
1001aab5:	call   0x1001cd0e
1001aaba:	cmp    DWORD PTR [ebp-0x20],edi
1001aabd:	jne    0x1001ab2b
1001aabf:	mov    esi,eax
1001aac1:	call   DWORD PTR ds:0x1002f094
1001aac7:	push   eax
1001aac8:	call   0x1001ccd3
1001aacd:	pop    ecx
1001aace:	mov    DWORD PTR [esi],eax
1001aad0:	jmp    0x1001ab31
1001aad2:	test   edi,edi
1001aad4:	jne    0x1001ab5d
1001aada:	call   0x1001cd0e
1001aadf:	cmp    DWORD PTR [ebp-0x20],edi
1001aae2:	je     0x1001ab4c
1001aae4:	mov    DWORD PTR [eax],0xc
1001aaea:	jmp    0x1001ab5d
1001aaec:	test   esi,esi
1001aaee:	jne    0x1001aaf1
1001aaf0:	inc    esi
1001aaf1:	push   esi
1001aaf2:	push   ebx
1001aaf3:	push   0x0
1001aaf5:	push   DWORD PTR ds:0x100c9630
1001aafb:	call   DWORD PTR ds:0x1002f188
1001ab01:	mov    edi,eax
1001ab03:	test   edi,edi
1001ab05:	jne    0x1001ab5d
1001ab07:	cmp    DWORD PTR ds:0x100c9aa4,eax
1001ab0d:	je     0x1001ab43
1001ab0f:	push   esi
1001ab10:	call   0x1001cec7
1001ab15:	pop    ecx
1001ab16:	test   eax,eax
1001ab18:	je     0x1001ab39
1001ab1a:	cmp    esi,0xffffffe0
1001ab1d:	jbe    0x1001aaec
1001ab1f:	push   esi
1001ab20:	call   0x1001cec7
1001ab25:	pop    ecx
1001ab26:	call   0x1001cd0e
1001ab2b:	mov    DWORD PTR [eax],0xc
1001ab31:	xor    eax,eax
1001ab33:	call   0x1001a795
1001ab38:	ret    
1001ab39:	call   0x1001cd0e
1001ab3e:	jmp    0x1001aabf
1001ab43:	test   edi,edi
1001ab45:	jne    0x1001ab5d
1001ab47:	call   0x1001cd0e
1001ab4c:	mov    esi,eax
1001ab4e:	call   DWORD PTR ds:0x1002f094
1001ab54:	push   eax
1001ab55:	call   0x1001ccd3
1001ab5a:	mov    DWORD PTR [esi],eax
1001ab5c:	pop    ecx
1001ab5d:	mov    eax,edi
1001ab5f:	jmp    0x1001ab33
1001ab61:	push   eax
1001ab62:	push   DWORD PTR fs:0x0
1001ab69:	lea    eax,[esp+0xc]
1001ab6d:	sub    esp,DWORD PTR [esp+0xc]
1001ab71:	push   ebx
1001ab72:	push   esi
1001ab73:	push   edi
1001ab74:	mov    DWORD PTR [eax],ebp
1001ab76:	mov    ebp,eax
1001ab78:	mov    eax,ds:0x100c7654
1001ab7d:	xor    eax,ebp
1001ab7f:	push   eax
1001ab80:	push   DWORD PTR [ebp-0x4]
1001ab83:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001ab8a:	lea    eax,[ebp-0xc]
1001ab8d:	mov    fs:0x0,eax
1001ab93:	ret    
1001ab94:	push   eax
1001ab95:	push   DWORD PTR fs:0x0
1001ab9c:	lea    eax,[esp+0xc]
1001aba0:	sub    esp,DWORD PTR [esp+0xc]
1001aba4:	push   ebx
1001aba5:	push   esi
1001aba6:	push   edi
1001aba7:	mov    DWORD PTR [eax],ebp
1001aba9:	mov    ebp,eax
1001abab:	mov    eax,ds:0x100c7654
1001abb0:	xor    eax,ebp
1001abb2:	push   eax
1001abb3:	mov    DWORD PTR [ebp-0x10],esp
1001abb6:	push   DWORD PTR [ebp-0x4]
1001abb9:	mov    DWORD PTR [ebp-0x4],0xffffffff
1001abc0:	lea    eax,[ebp-0xc]
1001abc3:	mov    fs:0x0,eax
1001abc9:	ret    
1001abca:	push   ebp
1001abcb:	mov    ebp,esp
1001abcd:	sub    esp,0x14
1001abd0:	mov    eax,ds:0x100c7654
1001abd5:	xor    eax,ebp
1001abd7:	mov    DWORD PTR [ebp-0x4],eax
1001abda:	push   ebx
1001abdb:	push   esi
1001abdc:	xor    ebx,ebx
1001abde:	cmp    DWORD PTR ds:0x100c9258,ebx
1001abe4:	push   edi
1001abe5:	mov    esi,ecx
1001abe7:	jne    0x1001ac21
1001abe9:	push   ebx
1001abea:	push   ebx
1001abeb:	xor    edi,edi
1001abed:	inc    edi
1001abee:	push   edi
1001abef:	push   0x100b9dec
1001abf4:	push   0x100
1001abf9:	push   ebx
1001abfa:	call   DWORD PTR ds:0x1002f1c8
1001ac00:	test   eax,eax
1001ac02:	je     0x1001ac0c
1001ac04:	mov    DWORD PTR ds:0x100c9258,edi
1001ac0a:	jmp    0x1001ac21
1001ac0c:	call   DWORD PTR ds:0x1002f094
1001ac12:	cmp    eax,0x78
1001ac15:	jne    0x1001ac21
1001ac17:	mov    DWORD PTR ds:0x100c9258,0x2
1001ac21:	cmp    DWORD PTR [ebp+0x14],ebx
1001ac24:	jle    0x1001ac48
1001ac26:	mov    ecx,DWORD PTR [ebp+0x14]
1001ac29:	mov    eax,DWORD PTR [ebp+0x10]
1001ac2c:	dec    ecx
1001ac2d:	cmp    BYTE PTR [eax],bl
1001ac2f:	je     0x1001ac39
1001ac31:	inc    eax
1001ac32:	cmp    ecx,ebx
1001ac34:	jne    0x1001ac2c
1001ac36:	or     ecx,0xffffffff
1001ac39:	mov    eax,DWORD PTR [ebp+0x14]
1001ac3c:	sub    eax,ecx
1001ac3e:	dec    eax
1001ac3f:	cmp    eax,DWORD PTR [ebp+0x14]
1001ac42:	jge    0x1001ac45
1001ac44:	inc    eax
1001ac45:	mov    DWORD PTR [ebp+0x14],eax
1001ac48:	mov    eax,ds:0x100c9258
1001ac4d:	cmp    eax,0x2
1001ac50:	je     0x1001ae01
1001ac56:	cmp    eax,ebx
1001ac58:	je     0x1001ae01
1001ac5e:	cmp    eax,0x1
1001ac61:	jne    0x1001ae32
1001ac67:	cmp    DWORD PTR [ebp+0x20],ebx
1001ac6a:	mov    DWORD PTR [ebp-0x8],ebx
1001ac6d:	jne    0x1001ac77
1001ac6f:	mov    eax,DWORD PTR [esi]
1001ac71:	mov    eax,DWORD PTR [eax+0x4]
1001ac74:	mov    DWORD PTR [ebp+0x20],eax
1001ac77:	mov    esi,DWORD PTR ds:0x1002f098
1001ac7d:	xor    eax,eax
1001ac7f:	cmp    DWORD PTR [ebp+0x24],ebx
1001ac82:	push   ebx
1001ac83:	push   ebx
1001ac84:	push   DWORD PTR [ebp+0x14]
1001ac87:	setne  al
1001ac8a:	push   DWORD PTR [ebp+0x10]
1001ac8d:	lea    eax,[eax*8+0x1]
1001ac94:	push   eax
1001ac95:	push   DWORD PTR [ebp+0x20]
1001ac98:	call   esi
1001ac9a:	mov    edi,eax
1001ac9c:	cmp    edi,ebx
1001ac9e:	je     0x1001ae32
1001aca4:	jle    0x1001ace9
1001aca6:	push   0xffffffe0
1001aca8:	xor    edx,edx
1001acaa:	pop    eax
1001acab:	div    edi
1001acad:	cmp    eax,0x2
1001acb0:	jb     0x1001ace9
1001acb2:	lea    eax,[edi+edi*1+0x8]
1001acb6:	cmp    eax,0x400
1001acbb:	ja     0x1001acd0
1001acbd:	call   0x10018790
1001acc2:	mov    eax,esp
1001acc4:	cmp    eax,ebx
1001acc6:	je     0x1001ace4
1001acc8:	mov    DWORD PTR [eax],0xcccc
1001acce:	jmp    0x1001ace1
1001acd0:	push   eax
1001acd1:	call   0x100198b2
1001acd6:	cmp    eax,ebx
1001acd8:	pop    ecx
1001acd9:	je     0x1001ace4
1001acdb:	mov    DWORD PTR [eax],0xdddd
1001ace1:	add    eax,0x8
1001ace4:	mov    DWORD PTR [ebp-0xc],eax
1001ace7:	jmp    0x1001acec
1001ace9:	mov    DWORD PTR [ebp-0xc],ebx
1001acec:	cmp    DWORD PTR [ebp-0xc],ebx
1001acef:	je     0x1001ae32
1001acf5:	push   edi
1001acf6:	push   DWORD PTR [ebp-0xc]
1001acf9:	push   DWORD PTR [ebp+0x14]
1001acfc:	push   DWORD PTR [ebp+0x10]
1001acff:	push   0x1
1001ad01:	push   DWORD PTR [ebp+0x20]
1001ad04:	call   esi
1001ad06:	test   eax,eax
1001ad08:	je     0x1001adf0
1001ad0e:	mov    esi,DWORD PTR ds:0x1002f1c8
1001ad14:	push   ebx
1001ad15:	push   ebx
1001ad16:	push   edi
1001ad17:	push   DWORD PTR [ebp-0xc]
1001ad1a:	push   DWORD PTR [ebp+0xc]
1001ad1d:	push   DWORD PTR [ebp+0x8]
1001ad20:	call   esi
1001ad22:	mov    ecx,eax
1001ad24:	cmp    ecx,ebx
1001ad26:	mov    DWORD PTR [ebp-0x8],ecx
1001ad29:	je     0x1001adf0
1001ad2f:	test   WORD PTR [ebp+0xc],0x400
1001ad35:	je     0x1001ad60
1001ad37:	cmp    DWORD PTR [ebp+0x1c],ebx
1001ad3a:	je     0x1001adf0
1001ad40:	cmp    ecx,DWORD PTR [ebp+0x1c]
1001ad43:	jg     0x1001adf0
1001ad49:	push   DWORD PTR [ebp+0x1c]
1001ad4c:	push   DWORD PTR [ebp+0x18]
1001ad4f:	push   edi
1001ad50:	push   DWORD PTR [ebp-0xc]
1001ad53:	push   DWORD PTR [ebp+0xc]
1001ad56:	push   DWORD PTR [ebp+0x8]
1001ad59:	call   esi
1001ad5b:	jmp    0x1001adf0
1001ad60:	cmp    ecx,ebx
1001ad62:	jle    0x1001ada9
1001ad64:	push   0xffffffe0
1001ad66:	xor    edx,edx
1001ad68:	pop    eax
1001ad69:	div    ecx
1001ad6b:	cmp    eax,0x2
1001ad6e:	jb     0x1001ada9
1001ad70:	lea    eax,[ecx+ecx*1+0x8]
1001ad74:	cmp    eax,0x400
1001ad79:	ja     0x1001ad91
1001ad7b:	call   0x10018790
1001ad80:	mov    esi,esp
1001ad82:	cmp    esi,ebx
1001ad84:	je     0x1001adf0
1001ad86:	mov    DWORD PTR [esi],0xcccc
1001ad8c:	add    esi,0x8
1001ad8f:	jmp    0x1001adab
1001ad91:	push   eax
1001ad92:	call   0x100198b2
1001ad97:	cmp    eax,ebx
1001ad99:	pop    ecx
1001ad9a:	je     0x1001ada5
1001ad9c:	mov    DWORD PTR [eax],0xdddd
1001ada2:	add    eax,0x8
1001ada5:	mov    esi,eax
1001ada7:	jmp    0x1001adab
1001ada9:	xor    esi,esi
1001adab:	cmp    esi,ebx
1001adad:	je     0x1001adf0
1001adaf:	push   DWORD PTR [ebp-0x8]
1001adb2:	push   esi
1001adb3:	push   edi
1001adb4:	push   DWORD PTR [ebp-0xc]
1001adb7:	push   DWORD PTR [ebp+0xc]
1001adba:	push   DWORD PTR [ebp+0x8]
1001adbd:	call   DWORD PTR ds:0x1002f1c8
1001adc3:	test   eax,eax
1001adc5:	je     0x1001ade9
1001adc7:	cmp    DWORD PTR [ebp+0x1c],ebx
1001adca:	push   ebx
1001adcb:	push   ebx
1001adcc:	jne    0x1001add2
1001adce:	push   ebx
1001adcf:	push   ebx
1001add0:	jmp    0x1001add8
1001add2:	push   DWORD PTR [ebp+0x1c]
1001add5:	push   DWORD PTR [ebp+0x18]
1001add8:	push   DWORD PTR [ebp-0x8]
1001addb:	push   esi
1001addc:	push   ebx
1001addd:	push   DWORD PTR [ebp+0x20]
1001ade0:	call   DWORD PTR ds:0x1002f038
1001ade6:	mov    DWORD PTR [ebp-0x8],eax
1001ade9:	push   esi
1001adea:	call   0x1001a732
1001adef:	pop    ecx
1001adf0:	push   DWORD PTR [ebp-0xc]
1001adf3:	call   0x1001a732
1001adf8:	mov    eax,DWORD PTR [ebp-0x8]
1001adfb:	pop    ecx
1001adfc:	jmp    0x1001af5a
1001ae01:	cmp    DWORD PTR [ebp+0x8],ebx
1001ae04:	mov    DWORD PTR [ebp-0xc],ebx
1001ae07:	mov    DWORD PTR [ebp-0x10],ebx
1001ae0a:	jne    0x1001ae14
1001ae0c:	mov    eax,DWORD PTR [esi]
1001ae0e:	mov    eax,DWORD PTR [eax+0x14]
1001ae11:	mov    DWORD PTR [ebp+0x8],eax
1001ae14:	cmp    DWORD PTR [ebp+0x20],ebx
1001ae17:	jne    0x1001ae21
1001ae19:	mov    eax,DWORD PTR [esi]
1001ae1b:	mov    eax,DWORD PTR [eax+0x4]
1001ae1e:	mov    DWORD PTR [ebp+0x20],eax
1001ae21:	push   DWORD PTR [ebp+0x8]
1001ae24:	call   0x10022ecb
1001ae29:	cmp    eax,0xffffffff
1001ae2c:	pop    ecx
1001ae2d:	mov    DWORD PTR [ebp-0x14],eax
1001ae30:	jne    0x1001ae39
1001ae32:	xor    eax,eax
1001ae34:	jmp    0x1001af5a
1001ae39:	cmp    eax,DWORD PTR [ebp+0x20]
1001ae3c:	je     0x1001af1d
1001ae42:	push   ebx
1001ae43:	push   ebx
1001ae44:	lea    ecx,[ebp+0x14]
1001ae47:	push   ecx
1001ae48:	push   DWORD PTR [ebp+0x10]
1001ae4b:	push   eax
1001ae4c:	push   DWORD PTR [ebp+0x20]
1001ae4f:	call   0x10022f12
1001ae54:	add    esp,0x18
1001ae57:	cmp    eax,ebx
1001ae59:	mov    DWORD PTR [ebp-0xc],eax
1001ae5c:	je     0x1001ae32
1001ae5e:	mov    esi,DWORD PTR ds:0x1002f1c4
1001ae64:	push   ebx
1001ae65:	push   ebx
1001ae66:	push   DWORD PTR [ebp+0x14]
1001ae69:	push   eax
1001ae6a:	push   DWORD PTR [ebp+0xc]
1001ae6d:	push   DWORD PTR [ebp+0x8]
1001ae70:	call   esi
1001ae72:	cmp    eax,ebx
1001ae74:	mov    DWORD PTR [ebp-0x8],eax
1001ae77:	jne    0x1001ae80
1001ae79:	xor    esi,esi
1001ae7b:	jmp    0x1001af37
1001ae80:	jle    0x1001aebf
1001ae82:	cmp    eax,0xffffffe0
1001ae85:	ja     0x1001aebf
1001ae87:	add    eax,0x8
1001ae8a:	cmp    eax,0x400
1001ae8f:	ja     0x1001aea7
1001ae91:	call   0x10018790
1001ae96:	mov    edi,esp
1001ae98:	cmp    edi,ebx
1001ae9a:	je     0x1001ae79
1001ae9c:	mov    DWORD PTR [edi],0xcccc
1001aea2:	add    edi,0x8
1001aea5:	jmp    0x1001aec1
1001aea7:	push   eax
1001aea8:	call   0x100198b2
1001aead:	cmp    eax,ebx
1001aeaf:	pop    ecx
1001aeb0:	je     0x1001aebb
1001aeb2:	mov    DWORD PTR [eax],0xdddd
1001aeb8:	add    eax,0x8
1001aebb:	mov    edi,eax
1001aebd:	jmp    0x1001aec1
1001aebf:	xor    edi,edi
1001aec1:	cmp    edi,ebx
1001aec3:	je     0x1001ae79
1001aec5:	push   DWORD PTR [ebp-0x8]
1001aec8:	push   ebx
1001aec9:	push   edi
1001aeca:	call   0x100191d0
1001aecf:	add    esp,0xc
1001aed2:	push   DWORD PTR [ebp-0x8]
1001aed5:	push   edi
1001aed6:	push   DWORD PTR [ebp+0x14]
1001aed9:	push   DWORD PTR [ebp-0xc]
1001aedc:	push   DWORD PTR [ebp+0xc]
1001aedf:	push   DWORD PTR [ebp+0x8]
1001aee2:	call   esi
1001aee4:	cmp    eax,ebx
1001aee6:	mov    DWORD PTR [ebp-0x8],eax
1001aee9:	jne    0x1001aeef
1001aeeb:	xor    esi,esi
1001aeed:	jmp    0x1001af14
1001aeef:	push   DWORD PTR [ebp+0x1c]
1001aef2:	lea    eax,[ebp-0x8]
1001aef5:	push   DWORD PTR [ebp+0x18]
1001aef8:	push   eax
1001aef9:	push   edi
1001aefa:	push   DWORD PTR [ebp+0x20]
1001aefd:	push   DWORD PTR [ebp-0x14]
1001af00:	call   0x10022f12
1001af05:	mov    esi,eax
1001af07:	mov    DWORD PTR [ebp-0x10],esi
1001af0a:	add    esp,0x18
1001af0d:	neg    esi
1001af0f:	sbb    esi,esi
1001af11:	and    esi,DWORD PTR [ebp-0x8]
1001af14:	push   edi
1001af15:	call   0x1001a732
1001af1a:	pop    ecx
1001af1b:	jmp    0x1001af37
1001af1d:	push   DWORD PTR [ebp+0x1c]
1001af20:	push   DWORD PTR [ebp+0x18]
1001af23:	push   DWORD PTR [ebp+0x14]
1001af26:	push   DWORD PTR [ebp+0x10]
1001af29:	push   DWORD PTR [ebp+0xc]
1001af2c:	push   DWORD PTR [ebp+0x8]
1001af2f:	call   DWORD PTR ds:0x1002f1c4
1001af35:	mov    esi,eax
1001af37:	cmp    DWORD PTR [ebp-0xc],ebx
1001af3a:	je     0x1001af45
1001af3c:	push   DWORD PTR [ebp-0xc]
1001af3f:	call   0x100197d5
1001af44:	pop    ecx
1001af45:	mov    eax,DWORD PTR [ebp-0x10]
1001af48:	cmp    eax,ebx
1001af4a:	je     0x1001af58
1001af4c:	cmp    DWORD PTR [ebp+0x18],eax
1001af4f:	je     0x1001af58
1001af51:	push   eax
1001af52:	call   0x100197d5
1001af57:	pop    ecx
1001af58:	mov    eax,esi
1001af5a:	lea    esp,[ebp-0x20]
1001af5d:	pop    edi
1001af5e:	pop    esi
1001af5f:	pop    ebx
1001af60:	mov    ecx,DWORD PTR [ebp-0x4]
1001af63:	xor    ecx,ebp
1001af65:	call   0x10018773
1001af6a:	leave  
1001af6b:	ret    
1001af6c:	push   ebp
1001af6d:	mov    ebp,esp
1001af6f:	sub    esp,0x10
1001af72:	push   DWORD PTR [ebp+0x8]
1001af75:	lea    ecx,[ebp-0x10]
1001af78:	call   0x1001924a
1001af7d:	push   DWORD PTR [ebp+0x28]
1001af80:	lea    ecx,[ebp-0x10]
1001af83:	push   DWORD PTR [ebp+0x24]
1001af86:	push   DWORD PTR [ebp+0x20]
1001af89:	push   DWORD PTR [ebp+0x1c]
1001af8c:	push   DWORD PTR [ebp+0x18]
1001af8f:	push   DWORD PTR [ebp+0x14]
1001af92:	push   DWORD PTR [ebp+0x10]
1001af95:	push   DWORD PTR [ebp+0xc]
1001af98:	call   0x1001abca
1001af9d:	add    esp,0x20
1001afa0:	cmp    BYTE PTR [ebp-0x4],0x0
1001afa4:	je     0x1001afad
1001afa6:	mov    ecx,DWORD PTR [ebp-0x8]
1001afa9:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001afad:	leave  
1001afae:	ret    
1001afaf:	push   esi
1001afb0:	push   edi
1001afb1:	xor    esi,esi
1001afb3:	push   DWORD PTR [esp+0xc]
1001afb7:	call   0x100198b2
1001afbc:	mov    edi,eax
1001afbe:	test   edi,edi
1001afc0:	pop    ecx
1001afc1:	jne    0x1001afea
1001afc3:	cmp    DWORD PTR ds:0x100c925c,eax
1001afc9:	jbe    0x1001afea
1001afcb:	push   esi
1001afcc:	call   DWORD PTR ds:0x1002f07c
1001afd2:	lea    eax,[esi+0x3e8]
1001afd8:	cmp    eax,DWORD PTR ds:0x100c925c
1001afde:	jbe    0x1001afe3
1001afe0:	or     eax,0xffffffff
1001afe3:	cmp    eax,0xffffffff
1001afe6:	mov    esi,eax
1001afe8:	jne    0x1001afb3
1001afea:	mov    eax,edi
1001afec:	pop    edi
1001afed:	pop    esi
1001afee:	ret    
1001afef:	push   esi
1001aff0:	push   edi
1001aff1:	xor    esi,esi
1001aff3:	push   0x0
1001aff5:	push   DWORD PTR [esp+0x14]
1001aff9:	push   DWORD PTR [esp+0x14]
1001affd:	call   0x100232bc
1001b002:	mov    edi,eax
1001b004:	add    esp,0xc
1001b007:	test   edi,edi
1001b009:	jne    0x1001b032
1001b00b:	cmp    DWORD PTR ds:0x100c925c,eax
1001b011:	jbe    0x1001b032
1001b013:	push   esi
1001b014:	call   DWORD PTR ds:0x1002f07c
1001b01a:	lea    eax,[esi+0x3e8]
1001b020:	cmp    eax,DWORD PTR ds:0x100c925c
1001b026:	jbe    0x1001b02b
1001b028:	or     eax,0xffffffff
1001b02b:	cmp    eax,0xffffffff
1001b02e:	mov    esi,eax
1001b030:	jne    0x1001aff3
1001b032:	mov    eax,edi
1001b034:	pop    edi
1001b035:	pop    esi
1001b036:	ret    
1001b037:	push   esi
1001b038:	push   edi
1001b039:	xor    esi,esi
1001b03b:	push   DWORD PTR [esp+0x10]
1001b03f:	push   DWORD PTR [esp+0x10]
1001b043:	call   0x1001a946
1001b048:	mov    edi,eax
1001b04a:	test   edi,edi
1001b04c:	pop    ecx
1001b04d:	pop    ecx
1001b04e:	jne    0x1001b07d
1001b050:	cmp    DWORD PTR [esp+0x10],eax
1001b054:	je     0x1001b07d
1001b056:	cmp    DWORD PTR ds:0x100c925c,eax
1001b05c:	jbe    0x1001b07d
1001b05e:	push   esi
1001b05f:	call   DWORD PTR ds:0x1002f07c
1001b065:	lea    eax,[esi+0x3e8]
1001b06b:	cmp    eax,DWORD PTR ds:0x100c925c
1001b071:	jbe    0x1001b076
1001b073:	or     eax,0xffffffff
1001b076:	cmp    eax,0xffffffff
1001b079:	mov    esi,eax
1001b07b:	jne    0x1001b03b
1001b07d:	mov    eax,edi
1001b07f:	pop    edi
1001b080:	pop    esi
1001b081:	ret    
1001b082:	push   ebx
1001b083:	push   ebp
1001b084:	push   esi
1001b085:	mov    esi,DWORD PTR [esp+0x10]
1001b089:	mov    eax,DWORD PTR [esi+0xbc]
1001b08f:	xor    ebp,ebp
1001b091:	cmp    eax,ebp
1001b093:	push   edi
1001b094:	je     0x1001b105
1001b096:	cmp    eax,0x100c8568
1001b09b:	je     0x1001b105
1001b09d:	mov    eax,DWORD PTR [esi+0xb0]
1001b0a3:	cmp    eax,ebp
1001b0a5:	je     0x1001b105
1001b0a7:	cmp    DWORD PTR [eax],ebp
1001b0a9:	jne    0x1001b105
1001b0ab:	mov    eax,DWORD PTR [esi+0xb8]
1001b0b1:	cmp    eax,ebp
1001b0b3:	je     0x1001b0cc
1001b0b5:	cmp    DWORD PTR [eax],ebp
1001b0b7:	jne    0x1001b0cc
1001b0b9:	push   eax
1001b0ba:	call   0x100197d5
1001b0bf:	push   DWORD PTR [esi+0xbc]
1001b0c5:	call   0x100235aa
1001b0ca:	pop    ecx
1001b0cb:	pop    ecx
1001b0cc:	mov    eax,DWORD PTR [esi+0xb4]
1001b0d2:	cmp    eax,ebp
1001b0d4:	je     0x1001b0ed
1001b0d6:	cmp    DWORD PTR [eax],ebp
1001b0d8:	jne    0x1001b0ed
1001b0da:	push   eax
1001b0db:	call   0x100197d5
1001b0e0:	push   DWORD PTR [esi+0xbc]
1001b0e6:	call   0x1002356a
1001b0eb:	pop    ecx
1001b0ec:	pop    ecx
1001b0ed:	push   DWORD PTR [esi+0xb0]
1001b0f3:	call   0x100197d5
1001b0f8:	push   DWORD PTR [esi+0xbc]
1001b0fe:	call   0x100197d5
1001b103:	pop    ecx
1001b104:	pop    ecx
1001b105:	mov    eax,DWORD PTR [esi+0xc0]
1001b10b:	cmp    eax,ebp
1001b10d:	je     0x1001b153
1001b10f:	cmp    DWORD PTR [eax],ebp
1001b111:	jne    0x1001b153
1001b113:	mov    eax,DWORD PTR [esi+0xc4]
1001b119:	sub    eax,0xfe
1001b11e:	push   eax
1001b11f:	call   0x100197d5
1001b124:	mov    eax,DWORD PTR [esi+0xcc]
1001b12a:	mov    edi,0x80
1001b12f:	sub    eax,edi
1001b131:	push   eax
1001b132:	call   0x100197d5
1001b137:	mov    eax,DWORD PTR [esi+0xd0]
1001b13d:	sub    eax,edi
1001b13f:	push   eax
1001b140:	call   0x100197d5
1001b145:	push   DWORD PTR [esi+0xc0]
1001b14b:	call   0x100197d5
1001b150:	add    esp,0x10
1001b153:	lea    edi,[esi+0xd4]
1001b159:	mov    eax,DWORD PTR [edi]
1001b15b:	cmp    eax,0x100c84a8
1001b160:	je     0x1001b179
1001b162:	cmp    DWORD PTR [eax+0xb4],ebp
1001b168:	jne    0x1001b179
1001b16a:	push   eax
1001b16b:	call   0x100233da
1001b170:	push   DWORD PTR [edi]
1001b172:	call   0x100197d5
1001b177:	pop    ecx
1001b178:	pop    ecx
1001b179:	push   0x6
1001b17b:	lea    edi,[esi+0x50]
1001b17e:	pop    ebx
1001b17f:	cmp    DWORD PTR [edi-0x8],0x100c7e78
1001b186:	je     0x1001b199
1001b188:	mov    eax,DWORD PTR [edi]
1001b18a:	cmp    eax,ebp
1001b18c:	je     0x1001b199
1001b18e:	cmp    DWORD PTR [eax],ebp
1001b190:	jne    0x1001b199
1001b192:	push   eax
1001b193:	call   0x100197d5
1001b198:	pop    ecx
1001b199:	cmp    DWORD PTR [edi-0x4],ebp
1001b19c:	je     0x1001b1b0
1001b19e:	mov    eax,DWORD PTR [edi+0x4]
1001b1a1:	cmp    eax,ebp
1001b1a3:	je     0x1001b1b0
1001b1a5:	cmp    DWORD PTR [eax],ebp
1001b1a7:	jne    0x1001b1b0
1001b1a9:	push   eax
1001b1aa:	call   0x100197d5
1001b1af:	pop    ecx
1001b1b0:	add    edi,0x10
1001b1b3:	dec    ebx
1001b1b4:	jne    0x1001b17f
1001b1b6:	push   esi
1001b1b7:	call   0x100197d5
1001b1bc:	pop    ecx
1001b1bd:	pop    edi
1001b1be:	pop    esi
1001b1bf:	pop    ebp
1001b1c0:	pop    ebx
1001b1c1:	ret    
1001b1c2:	push   ebx
1001b1c3:	push   ebp
1001b1c4:	push   esi
1001b1c5:	mov    esi,DWORD PTR [esp+0x10]
1001b1c9:	push   edi
1001b1ca:	mov    edi,DWORD PTR ds:0x1002f0e8
1001b1d0:	push   esi
1001b1d1:	call   edi
1001b1d3:	mov    eax,DWORD PTR [esi+0xb0]
1001b1d9:	test   eax,eax
1001b1db:	je     0x1001b1e0
1001b1dd:	push   eax
1001b1de:	call   edi
1001b1e0:	mov    eax,DWORD PTR [esi+0xb8]
1001b1e6:	test   eax,eax
1001b1e8:	je     0x1001b1ed
1001b1ea:	push   eax
1001b1eb:	call   edi
1001b1ed:	mov    eax,DWORD PTR [esi+0xb4]
1001b1f3:	test   eax,eax
1001b1f5:	je     0x1001b1fa
1001b1f7:	push   eax
1001b1f8:	call   edi
1001b1fa:	mov    eax,DWORD PTR [esi+0xc0]
1001b200:	test   eax,eax
1001b202:	je     0x1001b207
1001b204:	push   eax
1001b205:	call   edi
1001b207:	push   0x6
1001b209:	lea    ebx,[esi+0x50]
1001b20c:	pop    ebp
1001b20d:	cmp    DWORD PTR [ebx-0x8],0x100c7e78
1001b214:	je     0x1001b21f
1001b216:	mov    eax,DWORD PTR [ebx]
1001b218:	test   eax,eax
1001b21a:	je     0x1001b21f
1001b21c:	push   eax
1001b21d:	call   edi
1001b21f:	cmp    DWORD PTR [ebx-0x4],0x0
1001b223:	je     0x1001b22f
1001b225:	mov    eax,DWORD PTR [ebx+0x4]
1001b228:	test   eax,eax
1001b22a:	je     0x1001b22f
1001b22c:	push   eax
1001b22d:	call   edi
1001b22f:	add    ebx,0x10
1001b232:	dec    ebp
1001b233:	jne    0x1001b20d
1001b235:	mov    eax,DWORD PTR [esi+0xd4]
1001b23b:	add    eax,0xb4
1001b240:	push   eax
1001b241:	call   edi
1001b243:	pop    edi
1001b244:	pop    esi
1001b245:	pop    ebp
1001b246:	pop    ebx
1001b247:	ret    
1001b248:	push   esi
1001b249:	mov    esi,DWORD PTR [esp+0x8]
1001b24d:	test   esi,esi
1001b24f:	je     0x1001b2d0
1001b251:	push   ebx
1001b252:	push   ebp
1001b253:	push   edi
1001b254:	mov    edi,DWORD PTR ds:0x1002f0f0
1001b25a:	push   esi
1001b25b:	call   edi
1001b25d:	mov    eax,DWORD PTR [esi+0xb0]
1001b263:	test   eax,eax
1001b265:	je     0x1001b26a
1001b267:	push   eax
1001b268:	call   edi
1001b26a:	mov    eax,DWORD PTR [esi+0xb8]
1001b270:	test   eax,eax
1001b272:	je     0x1001b277
1001b274:	push   eax
1001b275:	call   edi
1001b277:	mov    eax,DWORD PTR [esi+0xb4]
1001b27d:	test   eax,eax
1001b27f:	je     0x1001b284
1001b281:	push   eax
1001b282:	call   edi
1001b284:	mov    eax,DWORD PTR [esi+0xc0]
1001b28a:	test   eax,eax
1001b28c:	je     0x1001b291
1001b28e:	push   eax
1001b28f:	call   edi
1001b291:	push   0x6
1001b293:	lea    ebx,[esi+0x50]
1001b296:	pop    ebp
1001b297:	cmp    DWORD PTR [ebx-0x8],0x100c7e78
1001b29e:	je     0x1001b2a9
1001b2a0:	mov    eax,DWORD PTR [ebx]
1001b2a2:	test   eax,eax
1001b2a4:	je     0x1001b2a9
1001b2a6:	push   eax
1001b2a7:	call   edi
1001b2a9:	cmp    DWORD PTR [ebx-0x4],0x0
1001b2ad:	je     0x1001b2b9
1001b2af:	mov    eax,DWORD PTR [ebx+0x4]
1001b2b2:	test   eax,eax
1001b2b4:	je     0x1001b2b9
1001b2b6:	push   eax
1001b2b7:	call   edi
1001b2b9:	add    ebx,0x10
1001b2bc:	dec    ebp
1001b2bd:	jne    0x1001b297
1001b2bf:	mov    eax,DWORD PTR [esi+0xd4]
1001b2c5:	add    eax,0xb4
1001b2ca:	push   eax
1001b2cb:	call   edi
1001b2cd:	pop    edi
1001b2ce:	pop    ebp
1001b2cf:	pop    ebx
1001b2d0:	mov    eax,esi
1001b2d2:	pop    esi
1001b2d3:	ret    
1001b2d4:	test   edi,edi
1001b2d6:	je     0x1001b30f
1001b2d8:	test   eax,eax
1001b2da:	je     0x1001b30f
1001b2dc:	push   esi
1001b2dd:	mov    esi,DWORD PTR [eax]
1001b2df:	cmp    esi,edi
1001b2e1:	je     0x1001b30b
1001b2e3:	push   edi
1001b2e4:	mov    DWORD PTR [eax],edi
1001b2e6:	call   0x1001b1c2
1001b2eb:	test   esi,esi
1001b2ed:	pop    ecx
1001b2ee:	je     0x1001b30b
1001b2f0:	push   esi
1001b2f1:	call   0x1001b248
1001b2f6:	cmp    DWORD PTR [esi],0x0
1001b2f9:	pop    ecx
1001b2fa:	jne    0x1001b30b
1001b2fc:	cmp    esi,0x100c7e80
1001b302:	je     0x1001b30b
1001b304:	push   esi
1001b305:	call   0x1001b082
1001b30a:	pop    ecx
1001b30b:	mov    eax,edi
1001b30d:	pop    esi
1001b30e:	ret    
1001b30f:	xor    eax,eax
1001b311:	ret    
1001b312:	push   0xc
1001b314:	push   0x100bb488
1001b319:	call   0x1001a750
1001b31e:	call   0x1001c526
1001b323:	mov    esi,eax
1001b325:	mov    eax,ds:0x100c7e70
1001b32a:	test   DWORD PTR [esi+0x70],eax
1001b32d:	je     0x1001b351
1001b32f:	cmp    DWORD PTR [esi+0x6c],0x0
1001b333:	je     0x1001b351
1001b335:	call   0x1001c526
1001b33a:	mov    esi,DWORD PTR [eax+0x6c]
1001b33d:	test   esi,esi
1001b33f:	jne    0x1001b349
1001b341:	push   0x20
1001b343:	call   0x1001c9cf
1001b348:	pop    ecx
1001b349:	mov    eax,esi
1001b34b:	call   0x1001a795
1001b350:	ret    
1001b351:	push   0xc
1001b353:	call   0x1001e3bb
1001b358:	pop    ecx
1001b359:	and    DWORD PTR [ebp-0x4],0x0
1001b35d:	lea    eax,[esi+0x6c]
1001b360:	mov    edi,DWORD PTR ds:0x100c7f58
1001b366:	call   0x1001b2d4
1001b36b:	mov    DWORD PTR [ebp-0x1c],eax
1001b36e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b375:	call   0x1001b37c
1001b37a:	jmp    0x1001b33d
1001b37c:	push   0xc
1001b37e:	call   0x1001e2e3
1001b383:	pop    ecx
1001b384:	mov    esi,DWORD PTR [ebp-0x1c]
1001b387:	ret    
1001b388:	push   ebp
1001b389:	lea    ebp,[esp-0x2a8]
1001b390:	sub    esp,0x328
1001b396:	mov    eax,ds:0x100c7654
1001b39b:	xor    eax,ebp
1001b39d:	mov    DWORD PTR [ebp+0x2a4],eax
1001b3a3:	test   BYTE PTR ds:0x100c779c,0x1
1001b3aa:	push   esi
1001b3ab:	je     0x1001b3b5
1001b3ad:	push   0xa
1001b3af:	call   0x1001eeeb
1001b3b4:	pop    ecx
1001b3b5:	call   0x1002383d
1001b3ba:	test   eax,eax
1001b3bc:	je     0x1001b3c6
1001b3be:	push   0x16
1001b3c0:	call   0x1002384a
1001b3c5:	pop    ecx
1001b3c6:	test   BYTE PTR ds:0x100c779c,0x2
1001b3cd:	je     0x1001b473
1001b3d3:	mov    DWORD PTR [ebp+0x88],eax
1001b3d9:	mov    DWORD PTR [ebp+0x84],ecx
1001b3df:	mov    DWORD PTR [ebp+0x80],edx
1001b3e5:	mov    DWORD PTR [ebp+0x7c],ebx
1001b3e8:	mov    DWORD PTR [ebp+0x78],esi
1001b3eb:	mov    DWORD PTR [ebp+0x74],edi
1001b3ee:	data16 mov WORD PTR [ebp+0xa0],ss
1001b3f5:	data16 mov WORD PTR [ebp+0x94],cs
1001b3fc:	data16 mov WORD PTR [ebp+0x70],ds
1001b400:	data16 mov WORD PTR [ebp+0x6c],es
1001b404:	data16 mov WORD PTR [ebp+0x68],fs
1001b408:	data16 mov WORD PTR [ebp+0x64],gs
1001b40c:	pushf  
1001b40d:	pop    DWORD PTR [ebp+0x98]
1001b413:	mov    esi,DWORD PTR [ebp+0x2ac]
1001b419:	lea    eax,[ebp+0x2ac]
1001b41f:	mov    DWORD PTR [ebp+0x9c],eax
1001b425:	mov    DWORD PTR [ebp-0x28],0x10001
1001b42c:	mov    DWORD PTR [ebp+0x90],esi
1001b432:	mov    eax,DWORD PTR [eax-0x4]
1001b435:	push   0x50
1001b437:	mov    DWORD PTR [ebp+0x8c],eax
1001b43d:	lea    eax,[ebp-0x80]
1001b440:	push   0x0
1001b442:	push   eax
1001b443:	call   0x100191d0
1001b448:	lea    eax,[ebp-0x80]
1001b44b:	add    esp,0xc
1001b44e:	mov    DWORD PTR [ebp-0x30],eax
1001b451:	lea    eax,[ebp-0x28]
1001b454:	push   0x0
1001b456:	mov    DWORD PTR [ebp-0x80],0x40000015
1001b45d:	mov    DWORD PTR [ebp-0x74],esi
1001b460:	mov    DWORD PTR [ebp-0x2c],eax
1001b463:	call   DWORD PTR ds:0x1002f1b4
1001b469:	lea    eax,[ebp-0x30]
1001b46c:	push   eax
1001b46d:	call   DWORD PTR ds:0x1002f1b0
1001b473:	push   0x3
1001b475:	call   0x1001cc5f
1001b47a:	int3   
1001b47b:	mov    ecx,DWORD PTR [esp+0x8]
1001b47f:	mov    eax,ds:0x100c779c
1001b484:	mov    edx,DWORD PTR [esp+0x4]
1001b488:	and    edx,DWORD PTR [esp+0x8]
1001b48c:	not    ecx
1001b48e:	and    ecx,eax
1001b490:	or     ecx,edx
1001b492:	mov    DWORD PTR ds:0x100c779c,ecx
1001b498:	ret    
1001b499:	push   ebp
1001b49a:	mov    ebp,esp
1001b49c:	sub    esp,0x328
1001b4a2:	mov    ds:0x100c9370,eax
1001b4a7:	mov    DWORD PTR ds:0x100c936c,ecx
1001b4ad:	mov    DWORD PTR ds:0x100c9368,edx
1001b4b3:	mov    DWORD PTR ds:0x100c9364,ebx
1001b4b9:	mov    DWORD PTR ds:0x100c9360,esi
1001b4bf:	mov    DWORD PTR ds:0x100c935c,edi
1001b4c5:	data16 mov WORD PTR ds:0x100c9388,ss
1001b4cc:	data16 mov WORD PTR ds:0x100c937c,cs
1001b4d3:	data16 mov WORD PTR ds:0x100c9358,ds
1001b4da:	data16 mov WORD PTR ds:0x100c9354,es
1001b4e1:	data16 mov WORD PTR ds:0x100c9350,fs
1001b4e8:	data16 mov WORD PTR ds:0x100c934c,gs
1001b4ef:	pushf  
1001b4f0:	pop    DWORD PTR ds:0x100c9380
1001b4f6:	mov    eax,DWORD PTR [ebp+0x0]
1001b4f9:	mov    ds:0x100c9374,eax
1001b4fe:	mov    eax,DWORD PTR [ebp+0x4]
1001b501:	mov    ds:0x100c9378,eax
1001b506:	lea    eax,[ebp+0x8]
1001b509:	mov    ds:0x100c9384,eax
1001b50e:	mov    eax,DWORD PTR [ebp-0x320]
1001b514:	mov    DWORD PTR ds:0x100c92c0,0x10001
1001b51e:	mov    eax,ds:0x100c9378
1001b523:	mov    ds:0x100c9274,eax
1001b528:	mov    DWORD PTR ds:0x100c9268,0xc0000409
1001b532:	mov    DWORD PTR ds:0x100c926c,0x1
1001b53c:	mov    eax,ds:0x100c7654
1001b541:	mov    DWORD PTR [ebp-0x328],eax
1001b547:	mov    eax,ds:0x100c7658
1001b54c:	mov    DWORD PTR [ebp-0x324],eax
1001b552:	call   DWORD PTR ds:0x1002f1b8
1001b558:	mov    ds:0x100c92b8,eax
1001b55d:	push   0x1
1001b55f:	call   0x1001cccb
1001b564:	pop    ecx
1001b565:	push   0x0
1001b567:	call   DWORD PTR ds:0x1002f1b4
1001b56d:	push   0x100b2fd0
1001b572:	call   DWORD PTR ds:0x1002f1b0
1001b578:	cmp    DWORD PTR ds:0x100c92b8,0x0
1001b57f:	jne    0x1001b589
1001b581:	push   0x1
1001b583:	call   0x1001cccb
1001b588:	pop    ecx
1001b589:	push   0xc0000409
1001b58e:	call   DWORD PTR ds:0x1002f0e4
1001b594:	push   eax
1001b595:	call   DWORD PTR ds:0x1002f1ac
1001b59b:	leave  
1001b59c:	ret    
1001b59d:	mov    DWORD PTR [ecx],0x100b2fe0
1001b5a3:	jmp    0x10018fcc
1001b5a8:	push   esi
1001b5a9:	mov    esi,ecx
1001b5ab:	mov    DWORD PTR [esi],0x100b2fe0
1001b5b1:	call   0x10018fcc
1001b5b6:	test   BYTE PTR [esp+0x8],0x1
1001b5bb:	je     0x1001b5c4
1001b5bd:	push   esi
1001b5be:	call   0x1001876e
1001b5c3:	pop    ecx
1001b5c4:	mov    eax,esi
1001b5c6:	pop    esi
1001b5c7:	ret    0x4
1001b5ca:	push   esi
1001b5cb:	push   edi
1001b5cc:	mov    edi,DWORD PTR [esp+0xc]
1001b5d0:	mov    eax,DWORD PTR [edi+0x4]
1001b5d3:	test   eax,eax
1001b5d5:	je     0x1001b620
1001b5d7:	lea    edx,[eax+0x8]
1001b5da:	cmp    BYTE PTR [edx],0x0
1001b5dd:	je     0x1001b620
1001b5df:	mov    esi,DWORD PTR [esp+0x10]
1001b5e3:	mov    ecx,DWORD PTR [esi+0x4]
1001b5e6:	cmp    eax,ecx
1001b5e8:	je     0x1001b5fe
1001b5ea:	add    ecx,0x8
1001b5ed:	push   ecx
1001b5ee:	push   edx
1001b5ef:	call   0x1001cdd0
1001b5f4:	test   eax,eax
1001b5f6:	pop    ecx
1001b5f7:	pop    ecx
1001b5f8:	je     0x1001b5fe
1001b5fa:	xor    eax,eax
1001b5fc:	jmp    0x1001b623
1001b5fe:	test   BYTE PTR [esi],0x2
1001b601:	je     0x1001b608
1001b603:	test   BYTE PTR [edi],0x8
1001b606:	je     0x1001b5fa
1001b608:	mov    eax,DWORD PTR [esp+0x14]
1001b60c:	mov    eax,DWORD PTR [eax]
1001b60e:	test   al,0x1
1001b610:	je     0x1001b617
1001b612:	test   BYTE PTR [edi],0x1
1001b615:	je     0x1001b5fa
1001b617:	test   al,0x2
1001b619:	je     0x1001b620
1001b61b:	test   BYTE PTR [edi],0x2
1001b61e:	je     0x1001b5fa
1001b620:	xor    eax,eax
1001b622:	inc    eax
1001b623:	pop    edi
1001b624:	pop    esi
1001b625:	ret    
1001b626:	mov    eax,DWORD PTR [esp+0x4]
1001b62a:	mov    eax,DWORD PTR [eax]
1001b62c:	mov    eax,DWORD PTR [eax]
1001b62e:	cmp    eax,0xe0434f4d
1001b633:	je     0x1001b64d
1001b635:	cmp    eax,0xe06d7363
1001b63a:	jne    0x1001b667
1001b63c:	call   0x1001c526
1001b641:	and    DWORD PTR [eax+0x90],0x0
1001b648:	jmp    0x1001c84c
1001b64d:	call   0x1001c526
1001b652:	cmp    DWORD PTR [eax+0x90],0x0
1001b659:	jle    0x1001b667
1001b65b:	call   0x1001c526
1001b660:	add    eax,0x90
1001b665:	dec    DWORD PTR [eax]
1001b667:	xor    eax,eax
1001b669:	ret    
1001b66a:	push   0x10
1001b66c:	push   0x100bb4a8
1001b671:	call   0x1001a750
1001b676:	mov    edi,DWORD PTR [ebp+0x10]
1001b679:	mov    ebx,DWORD PTR [ebp+0x8]
1001b67c:	cmp    DWORD PTR [edi+0x4],0x80
1001b683:	jg     0x1001b68b
1001b685:	movsx  esi,BYTE PTR [ebx+0x8]
1001b689:	jmp    0x1001b68e
1001b68b:	mov    esi,DWORD PTR [ebx+0x8]
1001b68e:	mov    DWORD PTR [ebp-0x1c],esi
1001b691:	call   0x1001c526
1001b696:	add    eax,0x90
1001b69b:	inc    DWORD PTR [eax]
1001b69d:	and    DWORD PTR [ebp-0x4],0x0
1001b6a1:	cmp    esi,DWORD PTR [ebp+0x14]
1001b6a4:	je     0x1001b70b
1001b6a6:	cmp    esi,0xffffffff
1001b6a9:	jle    0x1001b6b0
1001b6ab:	cmp    esi,DWORD PTR [edi+0x4]
1001b6ae:	jl     0x1001b6b5
1001b6b0:	call   0x1001c898
1001b6b5:	mov    eax,esi
1001b6b7:	shl    eax,0x3
1001b6ba:	mov    ecx,DWORD PTR [edi+0x8]
1001b6bd:	add    ecx,eax
1001b6bf:	mov    esi,DWORD PTR [ecx]
1001b6c1:	mov    DWORD PTR [ebp-0x20],esi
1001b6c4:	mov    DWORD PTR [ebp-0x4],0x1
1001b6cb:	cmp    DWORD PTR [ecx+0x4],0x0
1001b6cf:	je     0x1001b6e6
1001b6d1:	mov    DWORD PTR [ebx+0x8],esi
1001b6d4:	push   0x103
1001b6d9:	push   ebx
1001b6da:	mov    ecx,DWORD PTR [edi+0x8]
1001b6dd:	push   DWORD PTR [ecx+eax*1+0x4]
1001b6e1:	call   0x1001c8e0
1001b6e6:	and    DWORD PTR [ebp-0x4],0x0
1001b6ea:	jmp    0x1001b706
1001b6ec:	push   DWORD PTR [ebp-0x14]
1001b6ef:	call   0x1001b626
1001b6f4:	pop    ecx
1001b6f5:	ret    
1001b6f6:	mov    esp,DWORD PTR [ebp-0x18]
1001b6f9:	and    DWORD PTR [ebp-0x4],0x0
1001b6fd:	mov    edi,DWORD PTR [ebp+0x10]
1001b700:	mov    ebx,DWORD PTR [ebp+0x8]
1001b703:	mov    esi,DWORD PTR [ebp-0x20]
1001b706:	mov    DWORD PTR [ebp-0x1c],esi
1001b709:	jmp    0x1001b6a1
1001b70b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b712:	call   0x1001b730
1001b717:	cmp    esi,DWORD PTR [ebp+0x14]
1001b71a:	je     0x1001b721
1001b71c:	call   0x1001c898
1001b721:	mov    DWORD PTR [ebx+0x8],esi
1001b724:	call   0x1001a795
1001b729:	ret    
1001b72a:	mov    ebx,DWORD PTR [ebp+0x8]
1001b72d:	mov    esi,DWORD PTR [ebp-0x1c]
1001b730:	call   0x1001c526
1001b735:	cmp    DWORD PTR [eax+0x90],0x0
1001b73c:	jle    0x1001b74a
1001b73e:	call   0x1001c526
1001b743:	add    eax,0x90
1001b748:	dec    DWORD PTR [eax]
1001b74a:	ret    
1001b74b:	mov    eax,DWORD PTR [eax]
1001b74d:	cmp    DWORD PTR [eax],0xe06d7363
1001b753:	jne    0x1001b78d
1001b755:	cmp    DWORD PTR [eax+0x10],0x3
1001b759:	jne    0x1001b78d
1001b75b:	mov    ecx,DWORD PTR [eax+0x14]
1001b75e:	cmp    ecx,0x19930520
1001b764:	je     0x1001b776
1001b766:	cmp    ecx,0x19930521
1001b76c:	je     0x1001b776
1001b76e:	cmp    ecx,0x19930522
1001b774:	jne    0x1001b78d
1001b776:	cmp    DWORD PTR [eax+0x1c],0x0
1001b77a:	jne    0x1001b78d
1001b77c:	call   0x1001c526
1001b781:	xor    ecx,ecx
1001b783:	inc    ecx
1001b784:	mov    DWORD PTR [eax+0x20c],ecx
1001b78a:	mov    eax,ecx
1001b78c:	ret    
1001b78d:	xor    eax,eax
1001b78f:	ret    
1001b790:	push   0x8
1001b792:	push   0x100bb4d0
1001b797:	call   0x1001a750
1001b79c:	mov    ecx,DWORD PTR [ebp+0x8]
1001b79f:	test   ecx,ecx
1001b7a1:	je     0x1001b7cd
1001b7a3:	cmp    DWORD PTR [ecx],0xe06d7363
1001b7a9:	jne    0x1001b7cd
1001b7ab:	mov    eax,DWORD PTR [ecx+0x1c]
1001b7ae:	test   eax,eax
1001b7b0:	je     0x1001b7cd
1001b7b2:	mov    eax,DWORD PTR [eax+0x4]
1001b7b5:	test   eax,eax
1001b7b7:	je     0x1001b7cd
1001b7b9:	and    DWORD PTR [ebp-0x4],0x0
1001b7bd:	push   eax
1001b7be:	push   DWORD PTR [ecx+0x18]
1001b7c1:	call   0x100187ec
1001b7c6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b7cd:	call   0x1001a795
1001b7d2:	ret    
1001b7d3:	xor    eax,eax
1001b7d5:	cmp    BYTE PTR [ebp+0xc],al
1001b7d8:	setne  al
1001b7db:	ret    
1001b7dc:	mov    esp,DWORD PTR [ebp-0x18]
1001b7df:	jmp    0x1001c84c
1001b7e4:	mov    ecx,DWORD PTR [esp+0x8]
1001b7e8:	mov    eax,DWORD PTR [ecx]
1001b7ea:	push   esi
1001b7eb:	mov    esi,DWORD PTR [esp+0x8]
1001b7ef:	add    eax,esi
1001b7f1:	cmp    DWORD PTR [ecx+0x4],0x0
1001b7f5:	jl     0x1001b807
1001b7f7:	mov    edx,DWORD PTR [ecx+0x4]
1001b7fa:	mov    ecx,DWORD PTR [ecx+0x8]
1001b7fd:	mov    esi,DWORD PTR [edx+esi*1]
1001b800:	mov    ecx,DWORD PTR [esi+ecx*1]
1001b803:	add    ecx,edx
1001b805:	add    eax,ecx
1001b807:	pop    esi
1001b808:	ret    
1001b809:	push   ebp
1001b80a:	mov    ebp,esp
1001b80c:	sub    esp,0xc
1001b80f:	test   edi,edi
1001b811:	jne    0x1001b81d
1001b813:	call   0x1001c898
1001b818:	jmp    0x1001c84c
1001b81d:	and    DWORD PTR [ebp-0x8],0x0
1001b821:	cmp    DWORD PTR [edi],0x0
1001b824:	mov    BYTE PTR [ebp-0x1],0x0
1001b828:	jle    0x1001b87d
1001b82a:	push   ebx
1001b82b:	push   esi
1001b82c:	mov    eax,DWORD PTR [ebp+0x8]
1001b82f:	mov    eax,DWORD PTR [eax+0x1c]
1001b832:	mov    eax,DWORD PTR [eax+0xc]
1001b835:	mov    ebx,DWORD PTR [eax]
1001b837:	test   ebx,ebx
1001b839:	lea    esi,[eax+0x4]
1001b83c:	jle    0x1001b871
1001b83e:	mov    eax,DWORD PTR [ebp-0x8]
1001b841:	shl    eax,0x4
1001b844:	mov    DWORD PTR [ebp-0xc],eax
1001b847:	mov    ecx,DWORD PTR [ebp+0x8]
1001b84a:	push   DWORD PTR [ecx+0x1c]
1001b84d:	mov    eax,DWORD PTR [esi]
1001b84f:	push   eax
1001b850:	mov    eax,DWORD PTR [edi+0x4]
1001b853:	add    eax,DWORD PTR [ebp-0xc]
1001b856:	push   eax
1001b857:	call   0x1001b5ca
1001b85c:	add    esp,0xc
1001b85f:	test   eax,eax
1001b861:	jne    0x1001b86d
1001b863:	dec    ebx
1001b864:	add    esi,0x4
1001b867:	test   ebx,ebx
1001b869:	jg     0x1001b847
1001b86b:	jmp    0x1001b871
1001b86d:	mov    BYTE PTR [ebp-0x1],0x1
1001b871:	inc    DWORD PTR [ebp-0x8]
1001b874:	mov    eax,DWORD PTR [ebp-0x8]
1001b877:	cmp    eax,DWORD PTR [edi]
1001b879:	jl     0x1001b82c
1001b87b:	pop    esi
1001b87c:	pop    ebx
1001b87d:	mov    al,BYTE PTR [ebp-0x1]
1001b880:	leave  
1001b881:	ret    
1001b882:	push   0x4
1001b884:	mov    eax,0x1002d419
1001b889:	call   0x1001ab94
1001b88e:	call   0x1001c526
1001b893:	cmp    DWORD PTR [eax+0x94],0x0
1001b89a:	je     0x1001b8a1
1001b89c:	call   0x1001c898
1001b8a1:	and    DWORD PTR [ebp-0x4],0x0
1001b8a5:	call   0x1001c885
1001b8aa:	or     DWORD PTR [ebp-0x4],0xffffffff
1001b8ae:	jmp    0x1001c84c
1001b8b3:	call   0x1001c526
1001b8b8:	mov    ecx,DWORD PTR [ebp+0x8]
1001b8bb:	push   0x0
1001b8bd:	push   0x0
1001b8bf:	mov    DWORD PTR [eax+0x94],ecx
1001b8c5:	call   0x10018e6e
1001b8ca:	int3   
1001b8cb:	push   0x2c
1001b8cd:	push   0x100bb548
1001b8d2:	call   0x1001a750
1001b8d7:	mov    ebx,ecx
1001b8d9:	mov    edi,DWORD PTR [ebp+0xc]
1001b8dc:	mov    esi,DWORD PTR [ebp+0x8]
1001b8df:	mov    DWORD PTR [ebp-0x1c],ebx
1001b8e2:	and    DWORD PTR [ebp-0x34],0x0
1001b8e6:	mov    eax,DWORD PTR [edi-0x4]
1001b8e9:	mov    DWORD PTR [ebp-0x24],eax
1001b8ec:	push   DWORD PTR [esi+0x18]
1001b8ef:	lea    eax,[ebp-0x3c]
1001b8f2:	push   eax
1001b8f3:	call   0x10018a90
1001b8f8:	pop    ecx
1001b8f9:	pop    ecx
1001b8fa:	mov    DWORD PTR [ebp-0x28],eax
1001b8fd:	call   0x1001c526
1001b902:	mov    eax,DWORD PTR [eax+0x88]
1001b908:	mov    DWORD PTR [ebp-0x2c],eax
1001b90b:	call   0x1001c526
1001b910:	mov    eax,DWORD PTR [eax+0x8c]
1001b916:	mov    DWORD PTR [ebp-0x30],eax
1001b919:	call   0x1001c526
1001b91e:	mov    DWORD PTR [eax+0x88],esi
1001b924:	call   0x1001c526
1001b929:	mov    ecx,DWORD PTR [ebp+0x10]
1001b92c:	mov    DWORD PTR [eax+0x8c],ecx
1001b932:	and    DWORD PTR [ebp-0x4],0x0
1001b936:	xor    eax,eax
1001b938:	inc    eax
1001b939:	mov    DWORD PTR [ebp+0x10],eax
1001b93c:	mov    DWORD PTR [ebp-0x4],eax
1001b93f:	push   DWORD PTR [ebp+0x1c]
1001b942:	push   DWORD PTR [ebp+0x18]
1001b945:	push   ebx
1001b946:	push   DWORD PTR [ebp+0x14]
1001b949:	push   edi
1001b94a:	call   0x10018b25
1001b94f:	add    esp,0x14
1001b952:	mov    DWORD PTR [ebp-0x1c],eax
1001b955:	and    DWORD PTR [ebp-0x4],0x0
1001b959:	jmp    0x1001b9ca
1001b95b:	mov    eax,DWORD PTR [ebp-0x14]
1001b95e:	call   0x1001b74b
1001b963:	ret    
1001b964:	mov    esp,DWORD PTR [ebp-0x18]
1001b967:	call   0x1001c526
1001b96c:	and    DWORD PTR [eax+0x20c],0x0
1001b973:	mov    esi,DWORD PTR [ebp+0x14]
1001b976:	mov    edi,DWORD PTR [ebp+0xc]
1001b979:	cmp    DWORD PTR [esi+0x4],0x80
1001b980:	jg     0x1001b988
1001b982:	movsx  ecx,BYTE PTR [edi+0x8]
1001b986:	jmp    0x1001b98b
1001b988:	mov    ecx,DWORD PTR [edi+0x8]
1001b98b:	mov    ebx,DWORD PTR [esi+0x10]
1001b98e:	and    DWORD PTR [ebp-0x20],0x0
1001b992:	mov    eax,DWORD PTR [ebp-0x20]
1001b995:	cmp    eax,DWORD PTR [esi+0xc]
1001b998:	jae    0x1001b9b2
1001b99a:	imul   eax,eax,0x14
1001b99d:	add    eax,ebx
1001b99f:	mov    edx,DWORD PTR [eax+0x4]
1001b9a2:	cmp    ecx,edx
1001b9a4:	jle    0x1001b9e6
1001b9a6:	cmp    ecx,DWORD PTR [eax+0x8]
1001b9a9:	jg     0x1001b9e6
1001b9ab:	mov    eax,DWORD PTR [esi+0x8]
1001b9ae:	mov    ecx,DWORD PTR [eax+edx*8+0x8]
1001b9b2:	push   ecx
1001b9b3:	push   esi
1001b9b4:	push   0x0
1001b9b6:	push   edi
1001b9b7:	call   0x1001b66a
1001b9bc:	add    esp,0x10
1001b9bf:	and    DWORD PTR [ebp-0x1c],0x0
1001b9c3:	and    DWORD PTR [ebp-0x4],0x0
1001b9c7:	mov    esi,DWORD PTR [ebp+0x8]
1001b9ca:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001b9d1:	mov    DWORD PTR [ebp+0x10],0x0
1001b9d8:	call   0x1001b9f1
1001b9dd:	mov    eax,DWORD PTR [ebp-0x1c]
1001b9e0:	call   0x1001a795
1001b9e5:	ret    
1001b9e6:	inc    DWORD PTR [ebp-0x20]
1001b9e9:	jmp    0x1001b992
1001b9eb:	mov    edi,DWORD PTR [ebp+0xc]
1001b9ee:	mov    esi,DWORD PTR [ebp+0x8]
1001b9f1:	mov    eax,DWORD PTR [ebp-0x24]
1001b9f4:	mov    DWORD PTR [edi-0x4],eax
1001b9f7:	push   DWORD PTR [ebp-0x28]
1001b9fa:	call   0x10018ad9
1001b9ff:	pop    ecx
1001ba00:	call   0x1001c526
1001ba05:	mov    ecx,DWORD PTR [ebp-0x2c]
1001ba08:	mov    DWORD PTR [eax+0x88],ecx
1001ba0e:	call   0x1001c526
1001ba13:	mov    ecx,DWORD PTR [ebp-0x30]
1001ba16:	mov    DWORD PTR [eax+0x8c],ecx
1001ba1c:	cmp    DWORD PTR [esi],0xe06d7363
1001ba22:	jne    0x1001ba66
1001ba24:	cmp    DWORD PTR [esi+0x10],0x3
1001ba28:	jne    0x1001ba66
1001ba2a:	mov    eax,DWORD PTR [esi+0x14]
1001ba2d:	cmp    eax,0x19930520
1001ba32:	je     0x1001ba42
1001ba34:	cmp    eax,0x19930521
1001ba39:	je     0x1001ba42
1001ba3b:	cmp    eax,0x19930522
1001ba40:	jne    0x1001ba66
1001ba42:	cmp    DWORD PTR [ebp-0x34],0x0
1001ba46:	jne    0x1001ba66
1001ba48:	cmp    DWORD PTR [ebp-0x1c],0x0
1001ba4c:	je     0x1001ba66
1001ba4e:	push   DWORD PTR [esi+0x18]
1001ba51:	call   0x10018ab8
1001ba56:	pop    ecx
1001ba57:	test   eax,eax
1001ba59:	je     0x1001ba66
1001ba5b:	push   DWORD PTR [ebp+0x10]
1001ba5e:	push   esi
1001ba5f:	call   0x1001b790
1001ba64:	pop    ecx
1001ba65:	pop    ecx
1001ba66:	ret    
1001ba67:	push   0xc
1001ba69:	push   0x100bb570
1001ba6e:	call   0x1001a750
1001ba73:	xor    edx,edx
1001ba75:	mov    DWORD PTR [ebp-0x1c],edx
1001ba78:	mov    eax,DWORD PTR [ebp+0x10]
1001ba7b:	mov    ecx,DWORD PTR [eax+0x4]
1001ba7e:	cmp    ecx,edx
1001ba80:	je     0x1001bbde
1001ba86:	cmp    BYTE PTR [ecx+0x8],dl
1001ba89:	je     0x1001bbde
1001ba8f:	mov    ecx,DWORD PTR [eax+0x8]
1001ba92:	cmp    ecx,edx
1001ba94:	jne    0x1001baa2
1001ba96:	test   DWORD PTR [eax],0x80000000
1001ba9c:	je     0x1001bbde
1001baa2:	mov    eax,DWORD PTR [eax]
1001baa4:	mov    esi,DWORD PTR [ebp+0xc]
1001baa7:	test   eax,eax
1001baa9:	js     0x1001baaf
1001baab:	lea    esi,[ecx+esi*1+0xc]
1001baaf:	mov    DWORD PTR [ebp-0x4],edx
1001bab2:	xor    ebx,ebx
1001bab4:	inc    ebx
1001bab5:	push   ebx
1001bab6:	test   al,0x8
1001bab8:	je     0x1001bafb
1001baba:	mov    edi,DWORD PTR [ebp+0x8]
1001babd:	push   DWORD PTR [edi+0x18]
1001bac0:	call   0x100239fa
1001bac5:	pop    ecx
1001bac6:	pop    ecx
1001bac7:	test   eax,eax
1001bac9:	je     0x1001bbc1
1001bacf:	push   ebx
1001bad0:	push   esi
1001bad1:	call   0x100239fa
1001bad6:	pop    ecx
1001bad7:	pop    ecx
1001bad8:	test   eax,eax
1001bada:	je     0x1001bbc1
1001bae0:	mov    eax,DWORD PTR [edi+0x18]
1001bae3:	mov    DWORD PTR [esi],eax
1001bae5:	mov    ecx,DWORD PTR [ebp+0x14]
1001bae8:	add    ecx,0x8
1001baeb:	push   ecx
1001baec:	push   eax
1001baed:	call   0x1001b7e4
1001baf2:	pop    ecx
1001baf3:	pop    ecx
1001baf4:	mov    DWORD PTR [esi],eax
1001baf6:	jmp    0x1001bbc6
1001bafb:	mov    edi,DWORD PTR [ebp+0x14]
1001bafe:	mov    eax,DWORD PTR [ebp+0x8]
1001bb01:	push   DWORD PTR [eax+0x18]
1001bb04:	test   BYTE PTR [edi],bl
1001bb06:	je     0x1001bb50
1001bb08:	call   0x100239fa
1001bb0d:	pop    ecx
1001bb0e:	pop    ecx
1001bb0f:	test   eax,eax
1001bb11:	je     0x1001bbc1
1001bb17:	push   ebx
1001bb18:	push   esi
1001bb19:	call   0x100239fa
1001bb1e:	pop    ecx
1001bb1f:	pop    ecx
1001bb20:	test   eax,eax
1001bb22:	je     0x1001bbc1
1001bb28:	push   DWORD PTR [edi+0x14]
1001bb2b:	mov    eax,DWORD PTR [ebp+0x8]
1001bb2e:	push   DWORD PTR [eax+0x18]
1001bb31:	push   esi
1001bb32:	call   0x1001cef0
1001bb37:	add    esp,0xc
1001bb3a:	cmp    DWORD PTR [edi+0x14],0x4
1001bb3e:	jne    0x1001bbc6
1001bb44:	mov    eax,DWORD PTR [esi]
1001bb46:	test   eax,eax
1001bb48:	je     0x1001bbc6
1001bb4a:	add    edi,0x8
1001bb4d:	push   edi
1001bb4e:	jmp    0x1001baec
1001bb50:	cmp    DWORD PTR [edi+0x18],edx
1001bb53:	jne    0x1001bb8d
1001bb55:	call   0x100239fa
1001bb5a:	pop    ecx
1001bb5b:	pop    ecx
1001bb5c:	test   eax,eax
1001bb5e:	je     0x1001bbc1
1001bb60:	push   ebx
1001bb61:	push   esi
1001bb62:	call   0x100239fa
1001bb67:	pop    ecx
1001bb68:	pop    ecx
1001bb69:	test   eax,eax
1001bb6b:	je     0x1001bbc1
1001bb6d:	push   DWORD PTR [edi+0x14]
1001bb70:	add    edi,0x8
1001bb73:	push   edi
1001bb74:	mov    eax,DWORD PTR [ebp+0x8]
1001bb77:	push   DWORD PTR [eax+0x18]
1001bb7a:	call   0x1001b7e4
1001bb7f:	pop    ecx
1001bb80:	pop    ecx
1001bb81:	push   eax
1001bb82:	push   esi
1001bb83:	call   0x1001cef0
1001bb88:	add    esp,0xc
1001bb8b:	jmp    0x1001bbc6
1001bb8d:	call   0x100239fa
1001bb92:	pop    ecx
1001bb93:	pop    ecx
1001bb94:	test   eax,eax
1001bb96:	je     0x1001bbc1
1001bb98:	push   ebx
1001bb99:	push   esi
1001bb9a:	call   0x100239fa
1001bb9f:	pop    ecx
1001bba0:	pop    ecx
1001bba1:	test   eax,eax
1001bba3:	je     0x1001bbc1
1001bba5:	push   DWORD PTR [edi+0x18]
1001bba8:	call   0x100239fa
1001bbad:	pop    ecx
1001bbae:	test   eax,eax
1001bbb0:	je     0x1001bbc1
1001bbb2:	test   BYTE PTR [edi],0x4
1001bbb5:	push   0x0
1001bbb7:	pop    eax
1001bbb8:	setne  al
1001bbbb:	inc    eax
1001bbbc:	mov    DWORD PTR [ebp-0x1c],eax
1001bbbf:	jmp    0x1001bbc6
1001bbc1:	call   0x1001c898
1001bbc6:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001bbcd:	mov    eax,DWORD PTR [ebp-0x1c]
1001bbd0:	jmp    0x1001bbe0
1001bbd2:	xor    eax,eax
1001bbd4:	inc    eax
1001bbd5:	ret    
1001bbd6:	mov    esp,DWORD PTR [ebp-0x18]
1001bbd9:	jmp    0x1001c84c
1001bbde:	xor    eax,eax
1001bbe0:	call   0x1001a795
1001bbe5:	ret    
1001bbe6:	push   0x8
1001bbe8:	push   0x100bb590
1001bbed:	call   0x1001a750
1001bbf2:	mov    eax,DWORD PTR [ebp+0x10]
1001bbf5:	test   DWORD PTR [eax],0x80000000
1001bbfb:	je     0x1001bc02
1001bbfd:	mov    ebx,DWORD PTR [ebp+0xc]
1001bc00:	jmp    0x1001bc0c
1001bc02:	mov    ecx,DWORD PTR [eax+0x8]
1001bc05:	mov    edx,DWORD PTR [ebp+0xc]
1001bc08:	lea    ebx,[ecx+edx*1+0xc]
1001bc0c:	and    DWORD PTR [ebp-0x4],0x0
1001bc10:	mov    esi,DWORD PTR [ebp+0x14]
1001bc13:	push   esi
1001bc14:	push   eax
1001bc15:	push   DWORD PTR [ebp+0xc]
1001bc18:	mov    edi,DWORD PTR [ebp+0x8]
1001bc1b:	push   edi
1001bc1c:	call   0x1001ba67
1001bc21:	add    esp,0x10
1001bc24:	dec    eax
1001bc25:	je     0x1001bc46
1001bc27:	dec    eax
1001bc28:	jne    0x1001bc5e
1001bc2a:	push   0x1
1001bc2c:	lea    eax,[esi+0x8]
1001bc2f:	push   eax
1001bc30:	push   DWORD PTR [edi+0x18]
1001bc33:	call   0x1001b7e4
1001bc38:	pop    ecx
1001bc39:	pop    ecx
1001bc3a:	push   eax
1001bc3b:	push   DWORD PTR [esi+0x18]
1001bc3e:	push   ebx
1001bc3f:	call   0x100187ec
1001bc44:	jmp    0x1001bc5e
1001bc46:	lea    eax,[esi+0x8]
1001bc49:	push   eax
1001bc4a:	push   DWORD PTR [edi+0x18]
1001bc4d:	call   0x1001b7e4
1001bc52:	pop    ecx
1001bc53:	pop    ecx
1001bc54:	push   eax
1001bc55:	push   DWORD PTR [esi+0x18]
1001bc58:	push   ebx
1001bc59:	call   0x100187ec
1001bc5e:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001bc65:	call   0x1001a795
1001bc6a:	ret    
1001bc6b:	xor    eax,eax
1001bc6d:	inc    eax
1001bc6e:	ret    
1001bc6f:	mov    esp,DWORD PTR [ebp-0x18]
1001bc72:	jmp    0x1001c84c
1001bc77:	push   ebp
1001bc78:	mov    ebp,esp
1001bc7a:	cmp    DWORD PTR [ebp+0x18],0x0
1001bc7e:	je     0x1001bc90
1001bc80:	push   DWORD PTR [ebp+0x18]
1001bc83:	push   ebx
1001bc84:	push   esi
1001bc85:	push   DWORD PTR [ebp+0x8]
1001bc88:	call   0x1001bbe6
1001bc8d:	add    esp,0x10
1001bc90:	cmp    DWORD PTR [ebp+0x20],0x0
1001bc94:	push   DWORD PTR [ebp+0x8]
1001bc97:	jne    0x1001bc9c
1001bc99:	push   esi
1001bc9a:	jmp    0x1001bc9f
1001bc9c:	push   DWORD PTR [ebp+0x20]
1001bc9f:	call   0x100187f3
1001bca4:	push   DWORD PTR [edi]
1001bca6:	push   DWORD PTR [ebp+0x14]
1001bca9:	push   DWORD PTR [ebp+0x10]
1001bcac:	push   esi
1001bcad:	call   0x1001b66a
1001bcb2:	mov    eax,DWORD PTR [edi+0x4]
1001bcb5:	push   0x100
1001bcba:	push   DWORD PTR [ebp+0x1c]
1001bcbd:	inc    eax
1001bcbe:	push   DWORD PTR [ebp+0x14]
1001bcc1:	mov    DWORD PTR [esi+0x8],eax
1001bcc4:	push   DWORD PTR [ebp+0xc]
1001bcc7:	mov    ecx,DWORD PTR [ebx+0xc]
1001bcca:	push   esi
1001bccb:	push   DWORD PTR [ebp+0x8]
1001bcce:	call   0x1001b8cb
1001bcd3:	add    esp,0x28
1001bcd6:	test   eax,eax
1001bcd8:	je     0x1001bce1
1001bcda:	push   esi
1001bcdb:	push   eax
1001bcdc:	call   0x100187bc
1001bce1:	pop    ebp
1001bce2:	ret    
1001bce3:	push   ebp
1001bce4:	mov    ebp,esp
1001bce6:	push   ecx
1001bce7:	push   ecx
1001bce8:	push   esi
1001bce9:	mov    esi,DWORD PTR [ebp+0x8]
1001bcec:	cmp    DWORD PTR [esi],0x80000003
1001bcf2:	je     0x1001bdd2
1001bcf8:	push   edi
1001bcf9:	call   0x1001c526
1001bcfe:	cmp    DWORD PTR [eax+0x80],0x0
1001bd05:	je     0x1001bd46
1001bd07:	call   0x1001c526
1001bd0c:	lea    edi,[eax+0x80]
1001bd12:	call   0x1001c301
1001bd17:	cmp    DWORD PTR [edi],eax
1001bd19:	je     0x1001bd46
1001bd1b:	cmp    DWORD PTR [esi],0xe0434f4d
1001bd21:	je     0x1001bd46
1001bd23:	push   DWORD PTR [ebp+0x24]
1001bd26:	push   DWORD PTR [ebp+0x20]
1001bd29:	push   DWORD PTR [ebp+0x18]
1001bd2c:	push   DWORD PTR [ebp+0x14]
1001bd2f:	push   DWORD PTR [ebp+0x10]
1001bd32:	push   DWORD PTR [ebp+0xc]
1001bd35:	push   esi
1001bd36:	call   0x100188ab
1001bd3b:	add    esp,0x1c
1001bd3e:	test   eax,eax
1001bd40:	jne    0x1001bdd1
1001bd46:	mov    edi,DWORD PTR [ebp+0x18]
1001bd49:	cmp    DWORD PTR [edi+0xc],0x0
1001bd4d:	jne    0x1001bd54
1001bd4f:	call   0x1001c898
1001bd54:	mov    esi,DWORD PTR [ebp+0x1c]
1001bd57:	lea    eax,[ebp-0x8]
1001bd5a:	push   eax
1001bd5b:	lea    eax,[ebp-0x4]
1001bd5e:	push   eax
1001bd5f:	push   esi
1001bd60:	push   DWORD PTR [ebp+0x20]
1001bd63:	push   edi
1001bd64:	call   0x10018a1d
1001bd69:	mov    edi,eax
1001bd6b:	mov    eax,DWORD PTR [ebp-0x4]
1001bd6e:	add    esp,0x14
1001bd71:	cmp    eax,DWORD PTR [ebp-0x8]
1001bd74:	jae    0x1001bdd1
1001bd76:	push   ebx
1001bd77:	cmp    esi,DWORD PTR [edi]
1001bd79:	jl     0x1001bdc2
1001bd7b:	cmp    esi,DWORD PTR [edi+0x4]
1001bd7e:	jg     0x1001bdc2
1001bd80:	mov    eax,DWORD PTR [edi+0xc]
1001bd83:	mov    ecx,DWORD PTR [edi+0x10]
1001bd86:	shl    eax,0x4
1001bd89:	add    eax,ecx
1001bd8b:	mov    ecx,DWORD PTR [eax-0xc]
1001bd8e:	test   ecx,ecx
1001bd90:	je     0x1001bd98
1001bd92:	cmp    BYTE PTR [ecx+0x8],0x0
1001bd96:	jne    0x1001bdc2
1001bd98:	lea    ebx,[eax-0x10]
1001bd9b:	test   BYTE PTR [ebx],0x40
1001bd9e:	jne    0x1001bdc2
1001bda0:	push   DWORD PTR [ebp+0x24]
1001bda3:	mov    esi,DWORD PTR [ebp+0xc]
1001bda6:	push   DWORD PTR [ebp+0x20]
1001bda9:	push   0x0
1001bdab:	push   DWORD PTR [ebp+0x18]
1001bdae:	push   DWORD PTR [ebp+0x14]
1001bdb1:	push   DWORD PTR [ebp+0x10]
1001bdb4:	push   DWORD PTR [ebp+0x8]
1001bdb7:	call   0x1001bc77
1001bdbc:	mov    esi,DWORD PTR [ebp+0x1c]
1001bdbf:	add    esp,0x1c
1001bdc2:	inc    DWORD PTR [ebp-0x4]
1001bdc5:	mov    eax,DWORD PTR [ebp-0x4]
1001bdc8:	add    edi,0x14
1001bdcb:	cmp    eax,DWORD PTR [ebp-0x8]
1001bdce:	jb     0x1001bd77
1001bdd0:	pop    ebx
1001bdd1:	pop    edi
1001bdd2:	pop    esi
1001bdd3:	leave  
1001bdd4:	ret    
1001bdd5:	push   ebp
1001bdd6:	mov    ebp,esp
1001bdd8:	sub    esp,0x2c
1001bddb:	mov    ecx,DWORD PTR [ebp+0xc]
1001bdde:	push   ebx
1001bddf:	mov    ebx,DWORD PTR [ebp+0x18]
1001bde2:	mov    eax,DWORD PTR [ebx+0x4]
1001bde5:	cmp    eax,0x80
1001bdea:	push   esi
1001bdeb:	push   edi
1001bdec:	mov    BYTE PTR [ebp-0x1],0x0
1001bdf0:	jg     0x1001bdf8
1001bdf2:	movsx  ecx,BYTE PTR [ecx+0x8]
1001bdf6:	jmp    0x1001bdfb
1001bdf8:	mov    ecx,DWORD PTR [ecx+0x8]
1001bdfb:	cmp    ecx,0xffffffff
1001bdfe:	mov    DWORD PTR [ebp-0x8],ecx
1001be01:	jl     0x1001be07
1001be03:	cmp    ecx,eax
1001be05:	jl     0x1001be0c
1001be07:	call   0x1001c898
1001be0c:	mov    esi,DWORD PTR [ebp+0x8]
1001be0f:	mov    edi,0xe06d7363
1001be14:	cmp    DWORD PTR [esi],edi
1001be16:	jne    0x1001c0e7
1001be1c:	cmp    DWORD PTR [esi+0x10],0x3
1001be20:	mov    ebx,0x19930520
1001be25:	jne    0x1001bf54
1001be2b:	mov    eax,DWORD PTR [esi+0x14]
1001be2e:	cmp    eax,ebx
1001be30:	je     0x1001be44
1001be32:	cmp    eax,0x19930521
1001be37:	je     0x1001be44
1001be39:	cmp    eax,0x19930522
1001be3e:	jne    0x1001bf54
1001be44:	cmp    DWORD PTR [esi+0x1c],0x0
1001be48:	jne    0x1001bf54
1001be4e:	call   0x1001c526
1001be53:	cmp    DWORD PTR [eax+0x88],0x0
1001be5a:	je     0x1001c126
1001be60:	call   0x1001c526
1001be65:	mov    esi,DWORD PTR [eax+0x88]
1001be6b:	mov    DWORD PTR [ebp+0x8],esi
1001be6e:	call   0x1001c526
1001be73:	mov    eax,DWORD PTR [eax+0x8c]
1001be79:	push   0x1
1001be7b:	push   esi
1001be7c:	mov    DWORD PTR [ebp+0x10],eax
1001be7f:	call   0x100239fa
1001be84:	test   eax,eax
1001be86:	pop    ecx
1001be87:	pop    ecx
1001be88:	jne    0x1001be8f
1001be8a:	call   0x1001c898
1001be8f:	cmp    DWORD PTR [esi],edi
1001be91:	jne    0x1001beb9
1001be93:	cmp    DWORD PTR [esi+0x10],0x3
1001be97:	jne    0x1001beb9
1001be99:	mov    eax,DWORD PTR [esi+0x14]
1001be9c:	cmp    eax,ebx
1001be9e:	je     0x1001beae
1001bea0:	cmp    eax,0x19930521
1001bea5:	je     0x1001beae
1001bea7:	cmp    eax,0x19930522
1001beac:	jne    0x1001beb9
1001beae:	cmp    DWORD PTR [esi+0x1c],0x0
1001beb2:	jne    0x1001beb9
1001beb4:	call   0x1001c898
1001beb9:	call   0x1001c526
1001bebe:	cmp    DWORD PTR [eax+0x94],0x0
1001bec5:	je     0x1001bf54
1001becb:	call   0x1001c526
1001bed0:	mov    edi,DWORD PTR [eax+0x94]
1001bed6:	call   0x1001c526
1001bedb:	push   DWORD PTR [ebp+0x8]
1001bede:	xor    esi,esi
1001bee0:	mov    DWORD PTR [eax+0x94],esi
1001bee6:	call   0x1001b809
1001beeb:	test   al,al
1001beed:	pop    ecx
1001beee:	jne    0x1001bf4c
1001bef0:	xor    ebx,ebx
1001bef2:	cmp    DWORD PTR [edi],ebx
1001bef4:	jle    0x1001bf13
1001bef6:	mov    eax,DWORD PTR [edi+0x4]
1001bef9:	mov    ecx,DWORD PTR [ebx+eax*1+0x4]
1001befd:	push   0x100c77a4
1001bf02:	call   0x10018ee2
1001bf07:	test   al,al
1001bf09:	jne    0x1001bf18
1001bf0b:	inc    esi
1001bf0c:	add    ebx,0x10
1001bf0f:	cmp    esi,DWORD PTR [edi]
1001bf11:	jl     0x1001bef6
1001bf13:	jmp    0x1001c84c
1001bf18:	push   0x1
1001bf1a:	push   DWORD PTR [ebp+0x8]
1001bf1d:	call   0x1001b790
1001bf22:	pop    ecx
1001bf23:	pop    ecx
1001bf24:	lea    eax,[ebp+0x8]
1001bf27:	push   eax
1001bf28:	lea    ecx,[ebp-0x2c]
1001bf2b:	mov    DWORD PTR [ebp+0x8],0x100b2fe8
1001bf32:	call   0x10018f0e
1001bf37:	push   0x100bb5ac
1001bf3c:	lea    eax,[ebp-0x2c]
1001bf3f:	push   eax
1001bf40:	mov    DWORD PTR [ebp-0x2c],0x100b2fe0
1001bf47:	call   0x10018e6e
1001bf4c:	mov    esi,DWORD PTR [ebp+0x8]
1001bf4f:	mov    edi,0xe06d7363
1001bf54:	cmp    DWORD PTR [esi],edi
1001bf56:	jne    0x1001c0e4
1001bf5c:	cmp    DWORD PTR [esi+0x10],0x3
1001bf60:	jne    0x1001c0e4
1001bf66:	mov    eax,DWORD PTR [esi+0x14]
1001bf69:	cmp    eax,ebx
1001bf6b:	je     0x1001bf7f
1001bf6d:	cmp    eax,0x19930521
1001bf72:	je     0x1001bf7f
1001bf74:	cmp    eax,0x19930522
1001bf79:	jne    0x1001c0e4
1001bf7f:	mov    edi,DWORD PTR [ebp+0x18]
1001bf82:	cmp    DWORD PTR [edi+0xc],0x0
1001bf86:	jbe    0x1001c04b
1001bf8c:	lea    eax,[ebp-0x1c]
1001bf8f:	push   eax
1001bf90:	lea    eax,[ebp-0x10]
1001bf93:	push   eax
1001bf94:	push   DWORD PTR [ebp-0x8]
1001bf97:	push   DWORD PTR [ebp+0x20]
1001bf9a:	push   edi
1001bf9b:	call   0x10018a1d
1001bfa0:	add    esp,0x14
1001bfa3:	mov    edi,eax
1001bfa5:	mov    eax,DWORD PTR [ebp-0x10]
1001bfa8:	cmp    eax,DWORD PTR [ebp-0x1c]
1001bfab:	jae    0x1001c048
1001bfb1:	mov    eax,DWORD PTR [ebp-0x8]
1001bfb4:	cmp    DWORD PTR [edi],eax
1001bfb6:	jg     0x1001c03d
1001bfbc:	cmp    eax,DWORD PTR [edi+0x4]
1001bfbf:	jg     0x1001c03d
1001bfc1:	mov    eax,DWORD PTR [edi+0x10]
1001bfc4:	mov    DWORD PTR [ebp-0xc],eax
1001bfc7:	mov    eax,DWORD PTR [edi+0xc]
1001bfca:	test   eax,eax
1001bfcc:	mov    DWORD PTR [ebp-0x18],eax
1001bfcf:	jle    0x1001c03d
1001bfd1:	mov    eax,DWORD PTR [esi+0x1c]
1001bfd4:	mov    eax,DWORD PTR [eax+0xc]
1001bfd7:	lea    ebx,[eax+0x4]
1001bfda:	mov    eax,DWORD PTR [eax]
1001bfdc:	test   eax,eax
1001bfde:	mov    DWORD PTR [ebp-0x14],eax
1001bfe1:	jle    0x1001c006
1001bfe3:	push   DWORD PTR [esi+0x1c]
1001bfe6:	mov    eax,DWORD PTR [ebx]
1001bfe8:	push   eax
1001bfe9:	push   DWORD PTR [ebp-0xc]
1001bfec:	mov    DWORD PTR [ebp-0x20],eax
1001bfef:	call   0x1001b5ca
1001bff4:	add    esp,0xc
1001bff7:	test   eax,eax
1001bff9:	jne    0x1001c015
1001bffb:	dec    DWORD PTR [ebp-0x14]
1001bffe:	add    ebx,0x4
1001c001:	cmp    DWORD PTR [ebp-0x14],eax
1001c004:	jg     0x1001bfe3
1001c006:	dec    DWORD PTR [ebp-0x18]
1001c009:	add    DWORD PTR [ebp-0xc],0x10
1001c00d:	cmp    DWORD PTR [ebp-0x18],0x0
1001c011:	jg     0x1001bfd1
1001c013:	jmp    0x1001c03d
1001c015:	push   DWORD PTR [ebp+0x24]
1001c018:	mov    ebx,DWORD PTR [ebp-0xc]
1001c01b:	push   DWORD PTR [ebp+0x20]
1001c01e:	mov    BYTE PTR [ebp-0x1],0x1
1001c022:	push   DWORD PTR [ebp-0x20]
1001c025:	push   DWORD PTR [ebp+0x18]
1001c028:	push   DWORD PTR [ebp+0x14]
1001c02b:	push   DWORD PTR [ebp+0x10]
1001c02e:	push   esi
1001c02f:	mov    esi,DWORD PTR [ebp+0xc]
1001c032:	call   0x1001bc77
1001c037:	mov    esi,DWORD PTR [ebp+0x8]
1001c03a:	add    esp,0x1c
1001c03d:	inc    DWORD PTR [ebp-0x10]
1001c040:	add    edi,0x14
1001c043:	jmp    0x1001bfa5
1001c048:	mov    edi,DWORD PTR [ebp+0x18]
1001c04b:	cmp    BYTE PTR [ebp+0x1c],0x0
1001c04f:	je     0x1001c05b
1001c051:	push   0x1
1001c053:	push   esi
1001c054:	call   0x1001b790
1001c059:	pop    ecx
1001c05a:	pop    ecx
1001c05b:	cmp    BYTE PTR [ebp-0x1],0x0
1001c05f:	jne    0x1001c113
1001c065:	mov    eax,DWORD PTR [edi]
1001c067:	and    eax,0x1fffffff
1001c06c:	cmp    eax,0x19930521
1001c071:	jb     0x1001c113
1001c077:	mov    edi,DWORD PTR [edi+0x1c]
1001c07a:	test   edi,edi
1001c07c:	je     0x1001c113
1001c082:	push   esi
1001c083:	call   0x1001b809
1001c088:	test   al,al
1001c08a:	pop    ecx
1001c08b:	jne    0x1001c113
1001c091:	call   0x1001c526
1001c096:	call   0x1001c526
1001c09b:	call   0x1001c526
1001c0a0:	mov    DWORD PTR [eax+0x88],esi
1001c0a6:	call   0x1001c526
1001c0ab:	cmp    DWORD PTR [ebp+0x24],0x0
1001c0af:	mov    ecx,DWORD PTR [ebp+0x10]
1001c0b2:	mov    DWORD PTR [eax+0x8c],ecx
1001c0b8:	push   esi
1001c0b9:	jne    0x1001c0c0
1001c0bb:	push   DWORD PTR [ebp+0xc]
1001c0be:	jmp    0x1001c0c3
1001c0c0:	push   DWORD PTR [ebp+0x24]
1001c0c3:	call   0x100187f3
1001c0c8:	mov    esi,DWORD PTR [ebp+0x18]
1001c0cb:	push   0xffffffff
1001c0cd:	push   esi
1001c0ce:	push   DWORD PTR [ebp+0x14]
1001c0d1:	push   DWORD PTR [ebp+0xc]
1001c0d4:	call   0x1001b66a
1001c0d9:	add    esp,0x10
1001c0dc:	push   DWORD PTR [esi+0x1c]
1001c0df:	call   0x1001b882
1001c0e4:	mov    ebx,DWORD PTR [ebp+0x18]
1001c0e7:	cmp    DWORD PTR [ebx+0xc],0x0
1001c0eb:	jbe    0x1001c113
1001c0ed:	cmp    BYTE PTR [ebp+0x1c],0x0
1001c0f1:	jne    0x1001bf13
1001c0f7:	push   DWORD PTR [ebp+0x24]
1001c0fa:	push   DWORD PTR [ebp+0x20]
1001c0fd:	push   DWORD PTR [ebp-0x8]
1001c100:	push   ebx
1001c101:	push   DWORD PTR [ebp+0x14]
1001c104:	push   DWORD PTR [ebp+0x10]
1001c107:	push   DWORD PTR [ebp+0xc]
1001c10a:	push   esi
1001c10b:	call   0x1001bce3
1001c110:	add    esp,0x20
1001c113:	call   0x1001c526
1001c118:	cmp    DWORD PTR [eax+0x94],0x0
1001c11f:	je     0x1001c126
1001c121:	call   0x1001c898
1001c126:	pop    edi
1001c127:	pop    esi
1001c128:	pop    ebx
1001c129:	leave  
1001c12a:	ret    
1001c12b:	push   esi
1001c12c:	push   DWORD PTR [esp+0x8]
1001c130:	mov    esi,ecx
1001c132:	call   0x10018f74
1001c137:	mov    DWORD PTR [esi],0x100b2fe0
1001c13d:	mov    eax,esi
1001c13f:	pop    esi
1001c140:	ret    0x4
1001c143:	push   ebp
1001c144:	mov    ebp,esp
1001c146:	push   ebx
1001c147:	push   esi
1001c148:	push   edi
1001c149:	call   0x1001c526
1001c14e:	cmp    DWORD PTR [eax+0x20c],0x0
1001c155:	mov    eax,DWORD PTR [ebp+0x18]
1001c158:	mov    ecx,DWORD PTR [ebp+0x8]
1001c15b:	mov    edi,0xe06d7363
1001c160:	mov    esi,0x1fffffff
1001c165:	mov    ebx,0x19930522
1001c16a:	jne    0x1001c18c
1001c16c:	mov    edx,DWORD PTR [ecx]
1001c16e:	cmp    edx,edi
1001c170:	je     0x1001c18c
1001c172:	cmp    edx,0x80000026
1001c178:	je     0x1001c18c
1001c17a:	mov    edx,DWORD PTR [eax]
1001c17c:	and    edx,esi
1001c17e:	cmp    edx,ebx
1001c180:	jb     0x1001c18c
1001c182:	test   BYTE PTR [eax+0x20],0x1
1001c186:	jne    0x1001c21f
1001c18c:	test   BYTE PTR [ecx+0x4],0x66
1001c190:	je     0x1001c1b5
1001c192:	cmp    DWORD PTR [eax+0x4],0x0
1001c196:	je     0x1001c21f
1001c19c:	cmp    DWORD PTR [ebp+0x1c],0x0
1001c1a0:	jne    0x1001c21f
1001c1a2:	push   0xffffffff
1001c1a4:	push   eax
1001c1a5:	push   DWORD PTR [ebp+0x14]
1001c1a8:	push   DWORD PTR [ebp+0xc]
1001c1ab:	call   0x1001b66a
1001c1b0:	add    esp,0x10
1001c1b3:	jmp    0x1001c21f
1001c1b5:	cmp    DWORD PTR [eax+0xc],0x0
1001c1b9:	jne    0x1001c1cd
1001c1bb:	mov    edx,DWORD PTR [eax]
1001c1bd:	and    edx,esi
1001c1bf:	cmp    edx,0x19930521
1001c1c5:	jb     0x1001c21f
1001c1c7:	cmp    DWORD PTR [eax+0x1c],0x0
1001c1cb:	je     0x1001c21f
1001c1cd:	cmp    DWORD PTR [ecx],edi
1001c1cf:	jne    0x1001c203
1001c1d1:	cmp    DWORD PTR [ecx+0x10],0x3
1001c1d5:	jb     0x1001c203
1001c1d7:	cmp    DWORD PTR [ecx+0x14],ebx
1001c1da:	jbe    0x1001c203
1001c1dc:	mov    edx,DWORD PTR [ecx+0x1c]
1001c1df:	mov    edx,DWORD PTR [edx+0x8]
1001c1e2:	test   edx,edx
1001c1e4:	je     0x1001c203
1001c1e6:	movzx  esi,BYTE PTR [ebp+0x24]
1001c1ea:	push   esi
1001c1eb:	push   DWORD PTR [ebp+0x20]
1001c1ee:	push   DWORD PTR [ebp+0x1c]
1001c1f1:	push   eax
1001c1f2:	push   DWORD PTR [ebp+0x14]
1001c1f5:	push   DWORD PTR [ebp+0x10]
1001c1f8:	push   DWORD PTR [ebp+0xc]
1001c1fb:	push   ecx
1001c1fc:	call   edx
1001c1fe:	add    esp,0x20
1001c201:	jmp    0x1001c222
1001c203:	push   DWORD PTR [ebp+0x20]
1001c206:	push   DWORD PTR [ebp+0x1c]
1001c209:	push   DWORD PTR [ebp+0x24]
1001c20c:	push   eax
1001c20d:	push   DWORD PTR [ebp+0x14]
1001c210:	push   DWORD PTR [ebp+0x10]
1001c213:	push   DWORD PTR [ebp+0xc]
1001c216:	push   ecx
1001c217:	call   0x1001bdd5
1001c21c:	add    esp,0x20
1001c21f:	xor    eax,eax
1001c221:	inc    eax
1001c222:	pop    edi
1001c223:	pop    esi
1001c224:	pop    ebx
1001c225:	pop    ebp
1001c226:	ret    
1001c227:	push   ebp
1001c228:	mov    ebp,esp
1001c22a:	push   ecx
1001c22b:	push   ecx
1001c22c:	push   ebx
1001c22d:	push   esi
1001c22e:	xor    esi,esi
1001c230:	lea    eax,[ebp-0x4]
1001c233:	inc    esi
1001c234:	xor    ebx,ebx
1001c236:	push   eax
1001c237:	mov    DWORD PTR [ebp-0x8],esi
1001c23a:	mov    DWORD PTR [ebp-0x4],ebx
1001c23d:	call   0x1001caaf
1001c242:	cmp    DWORD PTR [ebp-0x4],0x5
1001c246:	pop    ecx
1001c247:	jle    0x1001c24d
1001c249:	mov    eax,esi
1001c24b:	jmp    0x1001c28f
1001c24d:	push   edi
1001c24e:	push   ebx
1001c24f:	call   DWORD PTR ds:0x1002f0fc
1001c255:	mov    esi,DWORD PTR [eax+0x3c]
1001c258:	add    esi,eax
1001c25a:	cmp    WORD PTR [esi+0x6],bx
1001c25e:	movzx  eax,WORD PTR [esi+0x14]
1001c262:	lea    edi,[eax+esi*1+0x18]
1001c266:	jbe    0x1001c28b
1001c268:	push   edi
1001c269:	push   0x100b2ff8
1001c26e:	call   0x1001cdd0
1001c273:	test   eax,eax
1001c275:	pop    ecx
1001c276:	pop    ecx
1001c277:	je     0x1001c287
1001c279:	movzx  eax,WORD PTR [esi+0x6]
1001c27d:	inc    ebx
1001c27e:	add    edi,0x28
1001c281:	cmp    ebx,eax
1001c283:	jb     0x1001c268
1001c285:	jmp    0x1001c28b
1001c287:	and    DWORD PTR [ebp-0x8],0x0
1001c28b:	mov    eax,DWORD PTR [ebp-0x8]
1001c28e:	pop    edi
1001c28f:	pop    esi
1001c290:	pop    ebx
1001c291:	leave  
1001c292:	ret    
1001c293:	push   esi
1001c294:	push   DWORD PTR ds:0x100c77c8
1001c29a:	mov    esi,DWORD PTR ds:0x1002f1d0
1001c2a0:	call   esi
1001c2a2:	test   eax,eax
1001c2a4:	je     0x1001c2c7
1001c2a6:	mov    eax,ds:0x100c77c4
1001c2ab:	cmp    eax,0xffffffff
1001c2ae:	je     0x1001c2c7
1001c2b0:	push   eax
1001c2b1:	push   DWORD PTR ds:0x100c77c8
1001c2b7:	call   esi
1001c2b9:	call   eax
1001c2bb:	test   eax,eax
1001c2bd:	je     0x1001c2c7
1001c2bf:	mov    eax,DWORD PTR [eax+0x1f8]
1001c2c5:	jmp    0x1001c2ed
1001c2c7:	push   0x100b3010
1001c2cc:	call   DWORD PTR ds:0x1002f0fc
1001c2d2:	mov    esi,eax
1001c2d4:	test   esi,esi
1001c2d6:	je     0x1001c2fb
1001c2d8:	call   0x1001c227
1001c2dd:	test   eax,eax
1001c2df:	je     0x1001c2fb
1001c2e1:	push   0x100b3000
1001c2e6:	push   esi
1001c2e7:	call   DWORD PTR ds:0x1002f050
1001c2ed:	test   eax,eax
1001c2ef:	je     0x1001c2fb
1001c2f1:	push   DWORD PTR [esp+0x8]
1001c2f5:	call   eax
1001c2f7:	mov    DWORD PTR [esp+0x8],eax
1001c2fb:	mov    eax,DWORD PTR [esp+0x8]
1001c2ff:	pop    esi
1001c300:	ret    
1001c301:	push   0x0
1001c303:	call   0x1001c293
1001c308:	pop    ecx
1001c309:	ret    
1001c30a:	push   esi
1001c30b:	push   DWORD PTR ds:0x100c77c8
1001c311:	mov    esi,DWORD PTR ds:0x1002f1d0
1001c317:	call   esi
1001c319:	test   eax,eax
1001c31b:	je     0x1001c33e
1001c31d:	mov    eax,ds:0x100c77c4
1001c322:	cmp    eax,0xffffffff
1001c325:	je     0x1001c33e
1001c327:	push   eax
1001c328:	push   DWORD PTR ds:0x100c77c8
1001c32e:	call   esi
1001c330:	call   eax
1001c332:	test   eax,eax
1001c334:	je     0x1001c33e
1001c336:	mov    eax,DWORD PTR [eax+0x1fc]
1001c33c:	jmp    0x1001c364
1001c33e:	push   0x100b3010
1001c343:	call   DWORD PTR ds:0x1002f0fc
1001c349:	mov    esi,eax
1001c34b:	test   esi,esi
1001c34d:	je     0x1001c372
1001c34f:	call   0x1001c227
1001c354:	test   eax,eax
1001c356:	je     0x1001c372
1001c358:	push   0x100b3020
1001c35d:	push   esi
1001c35e:	call   DWORD PTR ds:0x1002f050
1001c364:	test   eax,eax
1001c366:	je     0x1001c372
1001c368:	push   DWORD PTR [esp+0x8]
1001c36c:	call   eax
1001c36e:	mov    DWORD PTR [esp+0x8],eax
1001c372:	mov    eax,DWORD PTR [esp+0x8]
1001c376:	pop    esi
1001c377:	ret    
1001c378:	call   DWORD PTR ds:0x1002f1d4
1001c37e:	ret    0x4
1001c381:	push   esi
1001c382:	push   DWORD PTR ds:0x100c77c8
1001c388:	call   DWORD PTR ds:0x1002f1d0
1001c38e:	mov    esi,eax
1001c390:	test   esi,esi
1001c392:	jne    0x1001c3af
1001c394:	push   DWORD PTR ds:0x100c9590
1001c39a:	call   0x1001c30a
1001c39f:	pop    ecx
1001c3a0:	mov    esi,eax
1001c3a2:	push   esi
1001c3a3:	push   DWORD PTR ds:0x100c77c8
1001c3a9:	call   DWORD PTR ds:0x1002f1d8
1001c3af:	mov    eax,esi
1001c3b1:	pop    esi
1001c3b2:	ret    
1001c3b3:	mov    eax,ds:0x100c77c4
1001c3b8:	cmp    eax,0xffffffff
1001c3bb:	je     0x1001c3d3
1001c3bd:	push   eax
1001c3be:	push   DWORD PTR ds:0x100c9598
1001c3c4:	call   0x1001c30a
1001c3c9:	pop    ecx
1001c3ca:	call   eax
1001c3cc:	or     DWORD PTR ds:0x100c77c4,0xffffffff
1001c3d3:	mov    eax,ds:0x100c77c8
1001c3d8:	cmp    eax,0xffffffff
1001c3db:	je     0x1001c3eb
1001c3dd:	push   eax
1001c3de:	call   DWORD PTR ds:0x1002f1dc
1001c3e4:	or     DWORD PTR ds:0x100c77c8,0xffffffff
1001c3eb:	jmp    0x1001e28e
1001c3f0:	push   0xc
1001c3f2:	push   0x100bb5e8
1001c3f7:	call   0x1001a750
1001c3fc:	push   0x100b3010
1001c401:	call   DWORD PTR ds:0x1002f0fc
1001c407:	mov    DWORD PTR [ebp-0x1c],eax
1001c40a:	mov    esi,DWORD PTR [ebp+0x8]
1001c40d:	mov    DWORD PTR [esi+0x5c],0x100c8188
1001c414:	xor    edi,edi
1001c416:	inc    edi
1001c417:	mov    DWORD PTR [esi+0x14],edi
1001c41a:	test   eax,eax
1001c41c:	je     0x1001c44d
1001c41e:	call   0x1001c227
1001c423:	test   eax,eax
1001c425:	je     0x1001c44d
1001c427:	push   0x100b3000
1001c42c:	push   DWORD PTR [ebp-0x1c]
1001c42f:	mov    ebx,DWORD PTR ds:0x1002f050
1001c435:	call   ebx
1001c437:	mov    DWORD PTR [esi+0x1f8],eax
1001c43d:	push   0x100b3020
1001c442:	push   DWORD PTR [ebp-0x1c]
1001c445:	call   ebx
1001c447:	mov    DWORD PTR [esi+0x1fc],eax
1001c44d:	mov    DWORD PTR [esi+0x70],edi
1001c450:	mov    BYTE PTR [esi+0xc8],0x43
1001c457:	mov    BYTE PTR [esi+0x14b],0x43
1001c45e:	mov    eax,0x100c7950
1001c463:	mov    DWORD PTR [esi+0x68],eax
1001c466:	push   eax
1001c467:	call   DWORD PTR ds:0x1002f0e8
1001c46d:	push   0xc
1001c46f:	call   0x1001e3bb
1001c474:	pop    ecx
1001c475:	and    DWORD PTR [ebp-0x4],0x0
1001c479:	mov    eax,DWORD PTR [ebp+0xc]
1001c47c:	mov    DWORD PTR [esi+0x6c],eax
1001c47f:	test   eax,eax
1001c481:	jne    0x1001c48b
1001c483:	mov    eax,ds:0x100c7f58
1001c488:	mov    DWORD PTR [esi+0x6c],eax
1001c48b:	push   DWORD PTR [esi+0x6c]
1001c48e:	call   0x1001b1c2
1001c493:	pop    ecx
1001c494:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c49b:	call   0x1001c4a6
1001c4a0:	call   0x1001a795
1001c4a5:	ret    
1001c4a6:	push   0xc
1001c4a8:	call   0x1001e2e3
1001c4ad:	pop    ecx
1001c4ae:	ret    
1001c4af:	push   esi
1001c4b0:	push   edi
1001c4b1:	call   DWORD PTR ds:0x1002f094
1001c4b7:	push   DWORD PTR ds:0x100c77c4
1001c4bd:	mov    edi,eax
1001c4bf:	call   0x1001c381
1001c4c4:	call   eax
1001c4c6:	mov    esi,eax
1001c4c8:	test   esi,esi
1001c4ca:	jne    0x1001c51a
1001c4cc:	push   0x214
1001c4d1:	push   0x1
1001c4d3:	call   0x1001afef
1001c4d8:	mov    esi,eax
1001c4da:	test   esi,esi
1001c4dc:	pop    ecx
1001c4dd:	pop    ecx
1001c4de:	je     0x1001c51a
1001c4e0:	push   esi
1001c4e1:	push   DWORD PTR ds:0x100c77c4
1001c4e7:	push   DWORD PTR ds:0x100c9594
1001c4ed:	call   0x1001c30a
1001c4f2:	pop    ecx
1001c4f3:	call   eax
1001c4f5:	test   eax,eax
1001c4f7:	je     0x1001c511
1001c4f9:	push   0x0
1001c4fb:	push   esi
1001c4fc:	call   0x1001c3f0
1001c501:	pop    ecx
1001c502:	pop    ecx
1001c503:	call   DWORD PTR ds:0x1002f10c
1001c509:	or     DWORD PTR [esi+0x4],0xffffffff
1001c50d:	mov    DWORD PTR [esi],eax
1001c50f:	jmp    0x1001c51a
1001c511:	push   esi
1001c512:	call   0x100197d5
1001c517:	pop    ecx
1001c518:	xor    esi,esi
1001c51a:	push   edi
1001c51b:	call   DWORD PTR ds:0x1002f090
1001c521:	pop    edi
1001c522:	mov    eax,esi
1001c524:	pop    esi
1001c525:	ret    
1001c526:	push   esi
1001c527:	call   0x1001c4af
1001c52c:	mov    esi,eax
1001c52e:	test   esi,esi
1001c530:	jne    0x1001c53a
1001c532:	push   0x10
1001c534:	call   0x1001c9cf
1001c539:	pop    ecx
1001c53a:	mov    eax,esi
1001c53c:	pop    esi
1001c53d:	ret    
1001c53e:	push   0x8
1001c540:	push   0x100bb608
1001c545:	call   0x1001a750
1001c54a:	mov    esi,DWORD PTR [ebp+0x8]
1001c54d:	test   esi,esi
1001c54f:	je     0x1001c63f
1001c555:	mov    eax,DWORD PTR [esi+0x24]
1001c558:	test   eax,eax
1001c55a:	je     0x1001c563
1001c55c:	push   eax
1001c55d:	call   0x100197d5
1001c562:	pop    ecx
1001c563:	mov    eax,DWORD PTR [esi+0x2c]
1001c566:	test   eax,eax
1001c568:	je     0x1001c571
1001c56a:	push   eax
1001c56b:	call   0x100197d5
1001c570:	pop    ecx
1001c571:	mov    eax,DWORD PTR [esi+0x34]
1001c574:	test   eax,eax
1001c576:	je     0x1001c57f
1001c578:	push   eax
1001c579:	call   0x100197d5
1001c57e:	pop    ecx
1001c57f:	mov    eax,DWORD PTR [esi+0x3c]
1001c582:	test   eax,eax
1001c584:	je     0x1001c58d
1001c586:	push   eax
1001c587:	call   0x100197d5
1001c58c:	pop    ecx
1001c58d:	mov    eax,DWORD PTR [esi+0x44]
1001c590:	test   eax,eax
1001c592:	je     0x1001c59b
1001c594:	push   eax
1001c595:	call   0x100197d5
1001c59a:	pop    ecx
1001c59b:	mov    eax,DWORD PTR [esi+0x48]
1001c59e:	test   eax,eax
1001c5a0:	je     0x1001c5a9
1001c5a2:	push   eax
1001c5a3:	call   0x100197d5
1001c5a8:	pop    ecx
1001c5a9:	mov    eax,DWORD PTR [esi+0x5c]
1001c5ac:	cmp    eax,0x100c8188
1001c5b1:	je     0x1001c5ba
1001c5b3:	push   eax
1001c5b4:	call   0x100197d5
1001c5b9:	pop    ecx
1001c5ba:	push   0xd
1001c5bc:	call   0x1001e3bb
1001c5c1:	pop    ecx
1001c5c2:	and    DWORD PTR [ebp-0x4],0x0
1001c5c6:	mov    edi,DWORD PTR [esi+0x68]
1001c5c9:	test   edi,edi
1001c5cb:	je     0x1001c5e7
1001c5cd:	push   edi
1001c5ce:	call   DWORD PTR ds:0x1002f0f0
1001c5d4:	test   eax,eax
1001c5d6:	jne    0x1001c5e7
1001c5d8:	cmp    edi,0x100c7950
1001c5de:	je     0x1001c5e7
1001c5e0:	push   edi
1001c5e1:	call   0x100197d5
1001c5e6:	pop    ecx
1001c5e7:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c5ee:	call   0x1001c64a
1001c5f3:	push   0xc
1001c5f5:	call   0x1001e3bb
1001c5fa:	pop    ecx
1001c5fb:	mov    DWORD PTR [ebp-0x4],0x1
1001c602:	mov    edi,DWORD PTR [esi+0x6c]
1001c605:	test   edi,edi
1001c607:	je     0x1001c62c
1001c609:	push   edi
1001c60a:	call   0x1001b248
1001c60f:	pop    ecx
1001c610:	cmp    edi,DWORD PTR ds:0x100c7f58
1001c616:	je     0x1001c62c
1001c618:	cmp    edi,0x100c7e80
1001c61e:	je     0x1001c62c
1001c620:	cmp    DWORD PTR [edi],0x0
1001c623:	jne    0x1001c62c
1001c625:	push   edi
1001c626:	call   0x1001b082
1001c62b:	pop    ecx
1001c62c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c633:	call   0x1001c656
1001c638:	push   esi
1001c639:	call   0x100197d5
1001c63e:	pop    ecx
1001c63f:	call   0x1001a795
1001c644:	ret    0x4
1001c647:	mov    esi,DWORD PTR [ebp+0x8]
1001c64a:	push   0xd
1001c64c:	call   0x1001e2e3
1001c651:	pop    ecx
1001c652:	ret    
1001c653:	mov    esi,DWORD PTR [ebp+0x8]
1001c656:	push   0xc
1001c658:	call   0x1001e2e3
1001c65d:	pop    ecx
1001c65e:	ret    
1001c65f:	cmp    DWORD PTR ds:0x100c77c4,0xffffffff
1001c666:	je     0x1001c6b4
1001c668:	push   edi
1001c669:	mov    edi,DWORD PTR [esp+0x8]
1001c66d:	test   edi,edi
1001c66f:	jne    0x1001c697
1001c671:	push   esi
1001c672:	push   DWORD PTR ds:0x100c77c8
1001c678:	mov    esi,DWORD PTR ds:0x1002f1d0
1001c67e:	call   esi
1001c680:	test   eax,eax
1001c682:	je     0x1001c696
1001c684:	push   DWORD PTR ds:0x100c77c4
1001c68a:	push   DWORD PTR ds:0x100c77c8
1001c690:	call   esi
1001c692:	call   eax
1001c694:	mov    edi,eax
1001c696:	pop    esi
1001c697:	push   0x0
1001c699:	push   DWORD PTR ds:0x100c77c4
1001c69f:	push   DWORD PTR ds:0x100c9594
1001c6a5:	call   0x1001c30a
1001c6aa:	pop    ecx
1001c6ab:	call   eax
1001c6ad:	push   edi
1001c6ae:	call   0x1001c53e
1001c6b3:	pop    edi
1001c6b4:	mov    eax,ds:0x100c77c8
1001c6b9:	cmp    eax,0xffffffff
1001c6bc:	je     0x1001c6c7
1001c6be:	push   0x0
1001c6c0:	push   eax
1001c6c1:	call   DWORD PTR ds:0x1002f1d8
1001c6c7:	ret    
1001c6c8:	push   edi
1001c6c9:	push   0x100b3010
1001c6ce:	call   DWORD PTR ds:0x1002f0fc
1001c6d4:	mov    edi,eax
1001c6d6:	test   edi,edi
1001c6d8:	jne    0x1001c6e3
1001c6da:	call   0x1001c3b3
1001c6df:	xor    eax,eax
1001c6e1:	pop    edi
1001c6e2:	ret    
1001c6e3:	push   esi
1001c6e4:	mov    esi,DWORD PTR ds:0x1002f050
1001c6ea:	push   0x100b3050
1001c6ef:	push   edi
1001c6f0:	call   esi
1001c6f2:	push   0x100b3044
1001c6f7:	push   edi
1001c6f8:	mov    ds:0x100c958c,eax
1001c6fd:	call   esi
1001c6ff:	push   0x100b3038
1001c704:	push   edi
1001c705:	mov    ds:0x100c9590,eax
1001c70a:	call   esi
1001c70c:	push   0x100b3030
1001c711:	push   edi
1001c712:	mov    ds:0x100c9594,eax
1001c717:	call   esi
1001c719:	cmp    DWORD PTR ds:0x100c958c,0x0
1001c720:	mov    esi,DWORD PTR ds:0x1002f1d8
1001c726:	mov    ds:0x100c9598,eax
1001c72b:	je     0x1001c743
1001c72d:	cmp    DWORD PTR ds:0x100c9590,0x0
1001c734:	je     0x1001c743
1001c736:	cmp    DWORD PTR ds:0x100c9594,0x0
1001c73d:	je     0x1001c743
1001c73f:	test   eax,eax
1001c741:	jne    0x1001c767
1001c743:	mov    eax,ds:0x1002f1d0
1001c748:	mov    ds:0x100c9590,eax
1001c74d:	mov    eax,ds:0x1002f1dc
1001c752:	mov    DWORD PTR ds:0x100c958c,0x1001c378
1001c75c:	mov    DWORD PTR ds:0x100c9594,esi
1001c762:	mov    ds:0x100c9598,eax
1001c767:	call   DWORD PTR ds:0x1002f1d4
1001c76d:	cmp    eax,0xffffffff
1001c770:	mov    ds:0x100c77c8,eax
1001c775:	je     0x1001c847
1001c77b:	push   DWORD PTR ds:0x100c9590
1001c781:	push   eax
1001c782:	call   esi
1001c784:	test   eax,eax
1001c786:	je     0x1001c847
1001c78c:	call   0x1001cc7f
1001c791:	push   DWORD PTR ds:0x100c958c
1001c797:	call   0x1001c293
1001c79c:	push   DWORD PTR ds:0x100c9590
1001c7a2:	mov    ds:0x100c958c,eax
1001c7a7:	call   0x1001c293
1001c7ac:	push   DWORD PTR ds:0x100c9594
1001c7b2:	mov    ds:0x100c9590,eax
1001c7b7:	call   0x1001c293
1001c7bc:	push   DWORD PTR ds:0x100c9598
1001c7c2:	mov    ds:0x100c9594,eax
1001c7c7:	call   0x1001c293
1001c7cc:	add    esp,0x10
1001c7cf:	mov    ds:0x100c9598,eax
1001c7d4:	call   0x1001e245
1001c7d9:	test   eax,eax
1001c7db:	je     0x1001c842
1001c7dd:	push   0x1001c53e
1001c7e2:	push   DWORD PTR ds:0x100c958c
1001c7e8:	call   0x1001c30a
1001c7ed:	pop    ecx
1001c7ee:	call   eax
1001c7f0:	cmp    eax,0xffffffff
1001c7f3:	mov    ds:0x100c77c4,eax
1001c7f8:	je     0x1001c842
1001c7fa:	push   0x214
1001c7ff:	push   0x1
1001c801:	call   0x1001afef
1001c806:	mov    esi,eax
1001c808:	test   esi,esi
1001c80a:	pop    ecx
1001c80b:	pop    ecx
1001c80c:	je     0x1001c842
1001c80e:	push   esi
1001c80f:	push   DWORD PTR ds:0x100c77c4
1001c815:	push   DWORD PTR ds:0x100c9594
1001c81b:	call   0x1001c30a
1001c820:	pop    ecx
1001c821:	call   eax
1001c823:	test   eax,eax
1001c825:	je     0x1001c842
1001c827:	push   0x0
1001c829:	push   esi
1001c82a:	call   0x1001c3f0
1001c82f:	pop    ecx
1001c830:	pop    ecx
1001c831:	call   DWORD PTR ds:0x1002f10c
1001c837:	or     DWORD PTR [esi+0x4],0xffffffff
1001c83b:	mov    DWORD PTR [esi],eax
1001c83d:	xor    eax,eax
1001c83f:	inc    eax
1001c840:	jmp    0x1001c849
1001c842:	call   0x1001c3b3
1001c847:	xor    eax,eax
1001c849:	pop    esi
1001c84a:	pop    edi
1001c84b:	ret    
1001c84c:	push   0x8
1001c84e:	push   0x100bb630
1001c853:	call   0x1001a750
1001c858:	call   0x1001c526
1001c85d:	mov    eax,DWORD PTR [eax+0x78]
1001c860:	test   eax,eax
1001c862:	je     0x1001c87a
1001c864:	and    DWORD PTR [ebp-0x4],0x0
1001c868:	call   eax
1001c86a:	jmp    0x1001c873
1001c86c:	xor    eax,eax
1001c86e:	inc    eax
1001c86f:	ret    
1001c870:	mov    esp,DWORD PTR [ebp-0x18]
1001c873:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c87a:	call   0x1001b388
1001c87f:	call   0x1001a795
1001c884:	ret    
1001c885:	call   0x1001c526
1001c88a:	mov    eax,DWORD PTR [eax+0x7c]
1001c88d:	test   eax,eax
1001c88f:	je     0x1001c893
1001c891:	call   eax
1001c893:	jmp    0x1001c84c
1001c898:	push   0x8
1001c89a:	push   0x100bb650
1001c89f:	call   0x1001a750
1001c8a4:	push   DWORD PTR ds:0x100c959c
1001c8aa:	call   0x1001c30a
1001c8af:	pop    ecx
1001c8b0:	test   eax,eax
1001c8b2:	je     0x1001c8ca
1001c8b4:	and    DWORD PTR [ebp-0x4],0x0
1001c8b8:	call   eax
1001c8ba:	jmp    0x1001c8c3
1001c8bc:	xor    eax,eax
1001c8be:	inc    eax
1001c8bf:	ret    
1001c8c0:	mov    esp,DWORD PTR [ebp-0x18]
1001c8c3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c8ca:	jmp    0x1001c84c
1001c8cf:	push   0x1001c84c
1001c8d4:	call   0x1001c293
1001c8d9:	pop    ecx
1001c8da:	mov    ds:0x100c959c,eax
1001c8df:	ret    
1001c8e0:	push   ebp
1001c8e1:	mov    ebp,esp
1001c8e3:	sub    esp,0x4
1001c8e6:	push   ebx
1001c8e7:	push   ecx
1001c8e8:	mov    eax,DWORD PTR [ebp+0xc]
1001c8eb:	add    eax,0xc
1001c8ee:	mov    DWORD PTR [ebp-0x4],eax
1001c8f1:	mov    eax,DWORD PTR [ebp+0x8]
1001c8f4:	push   ebp
1001c8f5:	push   DWORD PTR [ebp+0x10]
1001c8f8:	mov    ecx,DWORD PTR [ebp+0x10]
1001c8fb:	mov    ebp,DWORD PTR [ebp-0x4]
1001c8fe:	call   0x10023b14
1001c903:	push   esi
1001c904:	push   edi
1001c905:	call   eax
1001c907:	pop    edi
1001c908:	pop    esi
1001c909:	mov    ebx,ebp
1001c90b:	pop    ebp
1001c90c:	mov    ecx,DWORD PTR [ebp+0x10]
1001c90f:	push   ebp
1001c910:	mov    ebp,ebx
1001c912:	cmp    ecx,0x100
1001c918:	jne    0x1001c91f
1001c91a:	mov    ecx,0x2
1001c91f:	push   ecx
1001c920:	call   0x10023b14
1001c925:	pop    ebp
1001c926:	pop    ecx
1001c927:	pop    ebx
1001c928:	leave  
1001c929:	ret    0xc
1001c92c:	push   0x10
1001c92e:	push   0x100bb670
1001c933:	call   0x1001a750
1001c938:	xor    eax,eax
1001c93a:	mov    ebx,DWORD PTR [ebp+0x8]
1001c93d:	xor    edi,edi
1001c93f:	cmp    ebx,edi
1001c941:	setne  al
1001c944:	cmp    eax,edi
1001c946:	jne    0x1001c965
1001c948:	call   0x1001cd0e
1001c94d:	mov    DWORD PTR [eax],0x16
1001c953:	push   edi
1001c954:	push   edi
1001c955:	push   edi
1001c956:	push   edi
1001c957:	push   edi
1001c958:	call   0x10018dbf
1001c95d:	add    esp,0x14
1001c960:	or     eax,0xffffffff
1001c963:	jmp    0x1001c9b8
1001c965:	cmp    DWORD PTR ds:0x100cb198,0x3
1001c96c:	jne    0x1001c9a6
1001c96e:	push   0x4
1001c970:	call   0x1001e3bb
1001c975:	pop    ecx
1001c976:	mov    DWORD PTR [ebp-0x4],edi
1001c979:	push   ebx
1001c97a:	call   0x1001e434
1001c97f:	pop    ecx
1001c980:	mov    DWORD PTR [ebp-0x20],eax
1001c983:	cmp    eax,edi
1001c985:	je     0x1001c992
1001c987:	mov    esi,DWORD PTR [ebx-0x4]
1001c98a:	sub    esi,0x9
1001c98d:	mov    DWORD PTR [ebp-0x1c],esi
1001c990:	jmp    0x1001c995
1001c992:	mov    esi,DWORD PTR [ebp-0x1c]
1001c995:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001c99c:	call   0x1001c9c6
1001c9a1:	cmp    DWORD PTR [ebp-0x20],edi
1001c9a4:	jne    0x1001c9b6
1001c9a6:	push   ebx
1001c9a7:	push   edi
1001c9a8:	push   DWORD PTR ds:0x100c9630
1001c9ae:	call   DWORD PTR ds:0x1002f18c
1001c9b4:	mov    esi,eax
1001c9b6:	mov    eax,esi
1001c9b8:	call   0x1001a795
1001c9bd:	ret    
1001c9be:	xor    edi,edi
1001c9c0:	mov    ebx,DWORD PTR [ebp+0x8]
1001c9c3:	mov    esi,DWORD PTR [ebp-0x1c]
1001c9c6:	push   0x4
1001c9c8:	call   0x1001e2e3
1001c9cd:	pop    ecx
1001c9ce:	ret    
1001c9cf:	call   0x1001f08b
1001c9d4:	push   DWORD PTR [esp+0x4]
1001c9d8:	call   0x1001eeeb
1001c9dd:	push   DWORD PTR ds:0x100c77d0
1001c9e3:	call   0x1001c30a
1001c9e8:	push   0xff
1001c9ed:	call   eax
1001c9ef:	add    esp,0xc
1001c9f2:	ret    
1001c9f3:	push   0x100b306c
1001c9f8:	call   DWORD PTR ds:0x1002f0fc
1001c9fe:	test   eax,eax
1001ca00:	je     0x1001ca18
1001ca02:	push   0x100b305c
1001ca07:	push   eax
1001ca08:	call   DWORD PTR ds:0x1002f050
1001ca0e:	test   eax,eax
1001ca10:	je     0x1001ca18
1001ca12:	push   DWORD PTR [esp+0x4]
1001ca16:	call   eax
1001ca18:	ret    
1001ca19:	push   DWORD PTR [esp+0x4]
1001ca1d:	call   0x1001c9f3
1001ca22:	pop    ecx
1001ca23:	push   DWORD PTR [esp+0x4]
1001ca27:	call   DWORD PTR ds:0x1002f05c
1001ca2d:	int3   
1001ca2e:	push   0x8
1001ca30:	call   0x1001e3bb
1001ca35:	pop    ecx
1001ca36:	ret    
1001ca37:	push   0x8
1001ca39:	call   0x1001e2e3
1001ca3e:	pop    ecx
1001ca3f:	ret    
1001ca40:	push   esi
1001ca41:	mov    esi,eax
1001ca43:	jmp    0x1001ca50
1001ca45:	mov    eax,DWORD PTR [esi]
1001ca47:	test   eax,eax
1001ca49:	je     0x1001ca4d
1001ca4b:	call   eax
1001ca4d:	add    esi,0x4
1001ca50:	cmp    esi,DWORD PTR [esp+0x8]
1001ca54:	jb     0x1001ca45
1001ca56:	pop    esi
1001ca57:	ret    
1001ca58:	push   esi
1001ca59:	mov    esi,DWORD PTR [esp+0x8]
1001ca5d:	xor    eax,eax
1001ca5f:	jmp    0x1001ca70
1001ca61:	test   eax,eax
1001ca63:	jne    0x1001ca76
1001ca65:	mov    ecx,DWORD PTR [esi]
1001ca67:	test   ecx,ecx
1001ca69:	je     0x1001ca6d
1001ca6b:	call   ecx
1001ca6d:	add    esi,0x4
1001ca70:	cmp    esi,DWORD PTR [esp+0xc]
1001ca74:	jb     0x1001ca61
1001ca76:	pop    esi
1001ca77:	ret    
1001ca78:	mov    ecx,DWORD PTR [esp+0x4]
1001ca7c:	push   esi
1001ca7d:	xor    esi,esi
1001ca7f:	cmp    ecx,esi
1001ca81:	jne    0x1001caa0
1001ca83:	call   0x1001cd0e
1001ca88:	push   esi
1001ca89:	push   esi
1001ca8a:	push   esi
1001ca8b:	push   esi
1001ca8c:	push   esi
1001ca8d:	mov    DWORD PTR [eax],0x16
1001ca93:	call   0x10018dbf
1001ca98:	add    esp,0x14
1001ca9b:	push   0x16
1001ca9d:	pop    eax
1001ca9e:	pop    esi
1001ca9f:	ret    
1001caa0:	mov    eax,ds:0x100c95a4
1001caa5:	cmp    eax,esi
1001caa7:	je     0x1001ca83
1001caa9:	mov    DWORD PTR [ecx],eax
1001caab:	xor    eax,eax
1001caad:	pop    esi
1001caae:	ret    
1001caaf:	mov    eax,DWORD PTR [esp+0x4]
1001cab3:	push   esi
1001cab4:	xor    esi,esi
1001cab6:	cmp    eax,esi
1001cab8:	jne    0x1001cad7
1001caba:	call   0x1001cd0e
1001cabf:	push   esi
1001cac0:	push   esi
1001cac1:	push   esi
1001cac2:	push   esi
1001cac3:	push   esi
1001cac4:	mov    DWORD PTR [eax],0x16
1001caca:	call   0x10018dbf
1001cacf:	add    esp,0x14
1001cad2:	push   0x16
1001cad4:	pop    eax
1001cad5:	pop    esi
1001cad6:	ret    
1001cad7:	cmp    DWORD PTR ds:0x100c95a4,esi
1001cadd:	je     0x1001caba
1001cadf:	mov    ecx,DWORD PTR ds:0x100c95b0
1001cae5:	mov    DWORD PTR [eax],ecx
1001cae7:	xor    eax,eax
1001cae9:	pop    esi
1001caea:	ret    
1001caeb:	cmp    DWORD PTR ds:0x100b36cc,0x0
1001caf2:	je     0x1001cb0e
1001caf4:	push   0x100b36cc
1001caf9:	call   0x10022e10
1001cafe:	test   eax,eax
1001cb00:	pop    ecx
1001cb01:	je     0x1001cb0e
1001cb03:	push   DWORD PTR [esp+0x4]
1001cb07:	call   DWORD PTR ds:0x100b36cc
1001cb0d:	pop    ecx
1001cb0e:	call   0x10023b3f
1001cb13:	push   0x1002f290
1001cb18:	push   0x1002f278
1001cb1d:	call   0x1001ca58
1001cb22:	test   eax,eax
1001cb24:	pop    ecx
1001cb25:	pop    ecx
1001cb26:	jne    0x1001cb7c
1001cb28:	push   esi
1001cb29:	push   edi
1001cb2a:	push   0x1001f7e9
1001cb2f:	call   0x10018ca7
1001cb34:	mov    esi,0x1002f20c
1001cb39:	mov    eax,esi
1001cb3b:	mov    edi,0x1002f274
1001cb40:	cmp    eax,edi
1001cb42:	pop    ecx
1001cb43:	jae    0x1001cb54
1001cb45:	mov    eax,DWORD PTR [esi]
1001cb47:	test   eax,eax
1001cb49:	je     0x1001cb4d
1001cb4b:	call   eax
1001cb4d:	add    esi,0x4
1001cb50:	cmp    esi,edi
1001cb52:	jb     0x1001cb45
1001cb54:	cmp    DWORD PTR ds:0x100cb1b8,0x0
1001cb5b:	pop    edi
1001cb5c:	pop    esi
1001cb5d:	je     0x1001cb7a
1001cb5f:	push   0x100cb1b8
1001cb64:	call   0x10022e10
1001cb69:	test   eax,eax
1001cb6b:	pop    ecx
1001cb6c:	je     0x1001cb7a
1001cb6e:	push   0x0
1001cb70:	push   0x2
1001cb72:	push   0x0
1001cb74:	call   DWORD PTR ds:0x100cb1b8
1001cb7a:	xor    eax,eax
1001cb7c:	ret    
1001cb7d:	push   0x10
1001cb7f:	push   0x100bb690
1001cb84:	call   0x1001a750
1001cb89:	push   0x8
1001cb8b:	call   0x1001e3bb
1001cb90:	pop    ecx
1001cb91:	xor    edi,edi
1001cb93:	mov    DWORD PTR [ebp-0x4],edi
1001cb96:	xor    ebx,ebx
1001cb98:	inc    ebx
1001cb99:	cmp    DWORD PTR ds:0x100c95e4,ebx
1001cb9f:	je     0x1001cc1f
1001cba1:	mov    DWORD PTR ds:0x100c95e0,ebx
1001cba7:	mov    al,BYTE PTR [ebp+0x10]
1001cbaa:	mov    ds:0x100c95dc,al
1001cbaf:	cmp    DWORD PTR [ebp+0xc],edi
1001cbb2:	jne    0x1001cc0f
1001cbb4:	push   DWORD PTR ds:0x100cb1b0
1001cbba:	call   0x1001c30a
1001cbbf:	mov    DWORD PTR [ebp-0x1c],eax
1001cbc2:	push   DWORD PTR ds:0x100cb1ac
1001cbc8:	call   0x1001c30a
1001cbcd:	pop    ecx
1001cbce:	pop    ecx
1001cbcf:	mov    esi,eax
1001cbd1:	mov    DWORD PTR [ebp-0x20],esi
1001cbd4:	cmp    DWORD PTR [ebp-0x1c],edi
1001cbd7:	je     0x1001cbff
1001cbd9:	sub    esi,0x4
1001cbdc:	mov    DWORD PTR [ebp-0x20],esi
1001cbdf:	cmp    esi,DWORD PTR [ebp-0x1c]
1001cbe2:	jb     0x1001cbff
1001cbe4:	cmp    DWORD PTR [esi],0x0
1001cbe7:	je     0x1001cbd9
1001cbe9:	mov    edi,DWORD PTR [esi]
1001cbeb:	call   0x1001c301
1001cbf0:	cmp    edi,eax
1001cbf2:	je     0x1001cbd9
1001cbf4:	push   edi
1001cbf5:	call   0x1001c30a
1001cbfa:	pop    ecx
1001cbfb:	call   eax
1001cbfd:	jmp    0x1001cbd9
1001cbff:	push   0x1002f2a0
1001cc04:	mov    eax,0x1002f294
1001cc09:	call   0x1001ca40
1001cc0e:	pop    ecx
1001cc0f:	push   0x1002f2a8
1001cc14:	mov    eax,0x1002f2a4
1001cc19:	call   0x1001ca40
1001cc1e:	pop    ecx
1001cc1f:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001cc26:	call   0x1001cc4a
1001cc2b:	cmp    DWORD PTR [ebp+0x10],0x0
1001cc2f:	jne    0x1001cc59
1001cc31:	mov    DWORD PTR ds:0x100c95e4,ebx
1001cc37:	push   0x8
1001cc39:	call   0x1001e2e3
1001cc3e:	pop    ecx
1001cc3f:	push   DWORD PTR [ebp+0x8]
1001cc42:	call   0x1001ca19
1001cc47:	xor    ebx,ebx
1001cc49:	inc    ebx
1001cc4a:	cmp    DWORD PTR [ebp+0x10],0x0
1001cc4e:	je     0x1001cc58
1001cc50:	push   0x8
1001cc52:	call   0x1001e2e3
1001cc57:	pop    ecx
1001cc58:	ret    
1001cc59:	call   0x1001a795
1001cc5e:	ret    
1001cc5f:	push   0x0
1001cc61:	push   0x1
1001cc63:	push   DWORD PTR [esp+0xc]
1001cc67:	call   0x1001cb7d
1001cc6c:	add    esp,0xc
1001cc6f:	ret    
1001cc70:	push   0x1
1001cc72:	push   0x0
1001cc74:	push   0x0
1001cc76:	call   0x1001cb7d
1001cc7b:	add    esp,0xc
1001cc7e:	ret    
1001cc7f:	push   esi
1001cc80:	call   0x1001c301
1001cc85:	mov    esi,eax
1001cc87:	push   esi
1001cc88:	call   0x1001cebd
1001cc8d:	push   esi
1001cc8e:	call   0x10023b68
1001cc93:	push   esi
1001cc94:	call   0x10018cb9
1001cc99:	push   esi
1001cc9a:	call   0x10020f30
1001cc9f:	push   esi
1001cca0:	call   0x10023b5e
1001cca5:	push   esi
1001cca6:	call   0x100237f0
1001ccab:	push   esi
1001ccac:	call   0x1001f80d
1001ccb1:	push   esi
1001ccb2:	call   0x1001c8cf
1001ccb7:	push   0x1001cc5f
1001ccbc:	call   0x1001c293
1001ccc1:	add    esp,0x24
1001ccc4:	mov    ds:0x100c77d0,eax
1001ccc9:	pop    esi
1001ccca:	ret    
1001cccb:	and    DWORD PTR ds:0x100cb1a4,0x0
1001ccd2:	ret    
1001ccd3:	mov    eax,DWORD PTR [esp+0x4]
1001ccd7:	xor    ecx,ecx
1001ccd9:	cmp    eax,DWORD PTR [ecx*8+0x100c77d8]
1001cce0:	je     0x1001ccf4
1001cce2:	inc    ecx
1001cce3:	cmp    ecx,0x2d
1001cce6:	jb     0x1001ccd9
1001cce8:	lea    ecx,[eax-0x13]
1001cceb:	cmp    ecx,0x11
1001ccee:	ja     0x1001ccfc
1001ccf0:	push   0xd
1001ccf2:	pop    eax
1001ccf3:	ret    
1001ccf4:	mov    eax,DWORD PTR [ecx*8+0x100c77dc]
1001ccfb:	ret    
1001ccfc:	add    eax,0xffffff44
1001cd01:	push   0xe
1001cd03:	pop    ecx
1001cd04:	cmp    ecx,eax
1001cd06:	sbb    eax,eax
1001cd08:	and    eax,ecx
1001cd0a:	add    eax,0x8
1001cd0d:	ret    
1001cd0e:	call   0x1001c4af
1001cd13:	test   eax,eax
1001cd15:	jne    0x1001cd1d
1001cd17:	mov    eax,0x100c7940
1001cd1c:	ret    
1001cd1d:	add    eax,0x8
1001cd20:	ret    
1001cd21:	call   0x1001c4af
1001cd26:	test   eax,eax
1001cd28:	jne    0x1001cd30
1001cd2a:	mov    eax,0x100c7944
1001cd2f:	ret    
1001cd30:	add    eax,0xc
1001cd33:	ret    
1001cd34:	push   esi
1001cd35:	call   0x1001cd21
1001cd3a:	mov    ecx,DWORD PTR [esp+0x8]
1001cd3e:	push   ecx
1001cd3f:	mov    DWORD PTR [eax],ecx
1001cd41:	call   0x1001ccd3
1001cd46:	pop    ecx
1001cd47:	mov    esi,eax
1001cd49:	call   0x1001cd0e
1001cd4e:	mov    DWORD PTR [eax],esi
1001cd50:	pop    esi
1001cd51:	ret    
1001cd52:	push   0xc
1001cd54:	push   0x100bb6b0
1001cd59:	call   0x1001a750
1001cd5e:	push   0xe
1001cd60:	call   0x1001e3bb
1001cd65:	pop    ecx
1001cd66:	and    DWORD PTR [ebp-0x4],0x0
1001cd6a:	mov    esi,DWORD PTR [ebp+0x8]
1001cd6d:	mov    ecx,DWORD PTR [esi+0x4]
1001cd70:	test   ecx,ecx
1001cd72:	je     0x1001cda3
1001cd74:	mov    eax,ds:0x100c95ec
1001cd79:	mov    edx,0x100c95e8
1001cd7e:	mov    DWORD PTR [ebp-0x1c],eax
1001cd81:	test   eax,eax
1001cd83:	je     0x1001cd96
1001cd85:	cmp    DWORD PTR [eax],ecx
1001cd87:	jne    0x1001cdb5
1001cd89:	mov    ecx,DWORD PTR [eax+0x4]
1001cd8c:	mov    DWORD PTR [edx+0x4],ecx
1001cd8f:	push   eax
1001cd90:	call   0x100197d5
1001cd95:	pop    ecx
1001cd96:	push   DWORD PTR [esi+0x4]
1001cd99:	call   0x100197d5
1001cd9e:	pop    ecx
1001cd9f:	and    DWORD PTR [esi+0x4],0x0
1001cda3:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001cdaa:	call   0x1001cdb9
1001cdaf:	call   0x1001a795
1001cdb4:	ret    
1001cdb5:	mov    edx,eax
1001cdb7:	jmp    0x1001cd7e
1001cdb9:	push   0xe
1001cdbb:	call   0x1001e2e3
1001cdc0:	pop    ecx
1001cdc1:	ret    
1001cdc2:	int3   
1001cdc3:	int3   
1001cdc4:	int3   
1001cdc5:	int3   
1001cdc6:	int3   
1001cdc7:	int3   
1001cdc8:	int3   
1001cdc9:	int3   
1001cdca:	int3   
1001cdcb:	int3   
1001cdcc:	int3   
1001cdcd:	int3   
1001cdce:	int3   
1001cdcf:	int3   
1001cdd0:	mov    edx,DWORD PTR [esp+0x4]
1001cdd4:	mov    ecx,DWORD PTR [esp+0x8]
1001cdd8:	test   edx,0x3
1001cdde:	jne    0x1001ce1c
1001cde0:	mov    eax,DWORD PTR [edx]
1001cde2:	cmp    al,BYTE PTR [ecx]
1001cde4:	jne    0x1001ce14
1001cde6:	or     al,al
1001cde8:	je     0x1001ce10
1001cdea:	cmp    ah,BYTE PTR [ecx+0x1]
1001cded:	jne    0x1001ce14
1001cdef:	or     ah,ah
1001cdf1:	je     0x1001ce10
1001cdf3:	shr    eax,0x10
1001cdf6:	cmp    al,BYTE PTR [ecx+0x2]
1001cdf9:	jne    0x1001ce14
1001cdfb:	or     al,al
1001cdfd:	je     0x1001ce10
1001cdff:	cmp    ah,BYTE PTR [ecx+0x3]
1001ce02:	jne    0x1001ce14
1001ce04:	add    ecx,0x4
1001ce07:	add    edx,0x4
1001ce0a:	or     ah,ah
1001ce0c:	jne    0x1001cde0
1001ce0e:	mov    edi,edi
1001ce10:	xor    eax,eax
1001ce12:	ret    
1001ce13:	nop
1001ce14:	sbb    eax,eax
1001ce16:	shl    eax,1
1001ce18:	add    eax,0x1
1001ce1b:	ret    
1001ce1c:	test   edx,0x1
1001ce22:	je     0x1001ce3c
1001ce24:	mov    al,BYTE PTR [edx]
1001ce26:	add    edx,0x1
1001ce29:	cmp    al,BYTE PTR [ecx]
1001ce2b:	jne    0x1001ce14
1001ce2d:	add    ecx,0x1
1001ce30:	or     al,al
1001ce32:	je     0x1001ce10
1001ce34:	test   edx,0x2
1001ce3a:	je     0x1001cde0
1001ce3c:	mov    ax,WORD PTR [edx]
1001ce3f:	add    edx,0x2
1001ce42:	cmp    al,BYTE PTR [ecx]
1001ce44:	jne    0x1001ce14
1001ce46:	or     al,al
1001ce48:	je     0x1001ce10
1001ce4a:	cmp    ah,BYTE PTR [ecx+0x1]
1001ce4d:	jne    0x1001ce14
1001ce4f:	or     ah,ah
1001ce51:	je     0x1001ce10
1001ce53:	add    ecx,0x2
1001ce56:	jmp    0x1001cde0
1001ce58:	mov    ecx,DWORD PTR [esp+0x4]
1001ce5c:	push   ebx
1001ce5d:	xor    ebx,ebx
1001ce5f:	cmp    ecx,ebx
1001ce61:	push   esi
1001ce62:	push   edi
1001ce63:	je     0x1001ce6d
1001ce65:	mov    edi,DWORD PTR [esp+0x14]
1001ce69:	cmp    edi,ebx
1001ce6b:	ja     0x1001ce88
1001ce6d:	call   0x1001cd0e
1001ce72:	push   0x16
1001ce74:	pop    esi
1001ce75:	mov    DWORD PTR [eax],esi
1001ce77:	push   ebx
1001ce78:	push   ebx
1001ce79:	push   ebx
1001ce7a:	push   ebx
1001ce7b:	push   ebx
1001ce7c:	call   0x10018dbf
1001ce81:	add    esp,0x14
1001ce84:	mov    eax,esi
1001ce86:	jmp    0x1001ceb9
1001ce88:	mov    esi,DWORD PTR [esp+0x18]
1001ce8c:	cmp    esi,ebx
1001ce8e:	jne    0x1001ce94
1001ce90:	mov    BYTE PTR [ecx],bl
1001ce92:	jmp    0x1001ce6d
1001ce94:	mov    edx,ecx
1001ce96:	mov    al,BYTE PTR [esi]
1001ce98:	mov    BYTE PTR [edx],al
1001ce9a:	inc    edx
1001ce9b:	inc    esi
1001ce9c:	cmp    al,bl
1001ce9e:	je     0x1001cea3
1001cea0:	dec    edi
1001cea1:	jne    0x1001ce96
1001cea3:	cmp    edi,ebx
1001cea5:	jne    0x1001ceb7
1001cea7:	mov    BYTE PTR [ecx],bl
1001cea9:	call   0x1001cd0e
1001ceae:	push   0x22
1001ceb0:	pop    ecx
1001ceb1:	mov    DWORD PTR [eax],ecx
1001ceb3:	mov    esi,ecx
1001ceb5:	jmp    0x1001ce77
1001ceb7:	xor    eax,eax
1001ceb9:	pop    edi
1001ceba:	pop    esi
1001cebb:	pop    ebx
1001cebc:	ret    
1001cebd:	mov    eax,DWORD PTR [esp+0x4]
1001cec1:	mov    ds:0x100c95f0,eax
1001cec6:	ret    
1001cec7:	push   DWORD PTR ds:0x100c95f0
1001cecd:	call   0x1001c30a
1001ced2:	test   eax,eax
1001ced4:	pop    ecx
1001ced5:	je     0x1001cee6
1001ced7:	push   DWORD PTR [esp+0x4]
1001cedb:	call   eax
1001cedd:	test   eax,eax
1001cedf:	pop    ecx
1001cee0:	je     0x1001cee6
1001cee2:	xor    eax,eax
1001cee4:	inc    eax
1001cee5:	ret    
1001cee6:	xor    eax,eax
1001cee8:	ret    
1001cee9:	int3   
1001ceea:	int3   
1001ceeb:	int3   
1001ceec:	int3   
1001ceed:	int3   
1001ceee:	int3   
1001ceef:	int3   
1001cef0:	push   ebp
1001cef1:	mov    ebp,esp
1001cef3:	push   edi
1001cef4:	push   esi
1001cef5:	mov    esi,DWORD PTR [ebp+0xc]
1001cef8:	mov    ecx,DWORD PTR [ebp+0x10]
1001cefb:	mov    edi,DWORD PTR [ebp+0x8]
1001cefe:	mov    eax,ecx
1001cf00:	mov    edx,ecx
1001cf02:	add    eax,esi
1001cf04:	cmp    edi,esi
1001cf06:	jbe    0x1001cf10
1001cf08:	cmp    edi,eax
1001cf0a:	jb     0x1001d0b4
1001cf10:	cmp    ecx,0x100
1001cf16:	jb     0x1001cf37
1001cf18:	cmp    DWORD PTR ds:0x100cb1a0,0x0
1001cf1f:	je     0x1001cf37
1001cf21:	push   edi
1001cf22:	push   esi
1001cf23:	and    edi,0xf
1001cf26:	and    esi,0xf
1001cf29:	cmp    edi,esi
1001cf2b:	pop    esi
1001cf2c:	pop    edi
1001cf2d:	jne    0x1001cf37
1001cf2f:	pop    esi
1001cf30:	pop    edi
1001cf31:	pop    ebp
1001cf32:	jmp    0x1001e039
1001cf37:	test   edi,0x3
1001cf3d:	jne    0x1001cf54
1001cf3f:	shr    ecx,0x2
1001cf42:	and    edx,0x3
1001cf45:	cmp    ecx,0x8
1001cf48:	jb     0x1001cf74
1001cf4a:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cf4c:	jmp    DWORD PTR [edx*4+0x1001d064]
1001cf53:	nop
1001cf54:	mov    eax,edi
1001cf56:	mov    edx,0x3
1001cf5b:	sub    ecx,0x4
1001cf5e:	jb     0x1001cf6c
1001cf60:	and    eax,0x3
1001cf63:	add    ecx,eax
1001cf65:	jmp    DWORD PTR [eax*4+0x1001cf78]
1001cf6c:	jmp    DWORD PTR [ecx*4+0x1001d074]
1001cf73:	nop
1001cf74:	jmp    DWORD PTR [ecx*4+0x1001cff8]
1001cf7b:	nop
1001cf7c:	mov    bh,cl
1001cf7e:	add    DWORD PTR [eax],edx
1001cf80:	mov    ah,0xcf
1001cf82:	add    DWORD PTR [eax],edx
1001cf84:	fmul   st,st(7)
1001cf86:	add    DWORD PTR [eax],edx
1001cf88:	and    edx,ecx
1001cf8a:	mov    al,BYTE PTR [esi]
1001cf8c:	mov    BYTE PTR [edi],al
1001cf8e:	mov    al,BYTE PTR [esi+0x1]
1001cf91:	mov    BYTE PTR [edi+0x1],al
1001cf94:	mov    al,BYTE PTR [esi+0x2]
1001cf97:	shr    ecx,0x2
1001cf9a:	mov    BYTE PTR [edi+0x2],al
1001cf9d:	add    esi,0x3
1001cfa0:	add    edi,0x3
1001cfa3:	cmp    ecx,0x8
1001cfa6:	jb     0x1001cf74
1001cfa8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfaa:	jmp    DWORD PTR [edx*4+0x1001d064]
1001cfb1:	lea    ecx,[ecx+0x0]
1001cfb4:	and    edx,ecx
1001cfb6:	mov    al,BYTE PTR [esi]
1001cfb8:	mov    BYTE PTR [edi],al
1001cfba:	mov    al,BYTE PTR [esi+0x1]
1001cfbd:	shr    ecx,0x2
1001cfc0:	mov    BYTE PTR [edi+0x1],al
1001cfc3:	add    esi,0x2
1001cfc6:	add    edi,0x2
1001cfc9:	cmp    ecx,0x8
1001cfcc:	jb     0x1001cf74
1001cfce:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfd0:	jmp    DWORD PTR [edx*4+0x1001d064]
1001cfd7:	nop
1001cfd8:	and    edx,ecx
1001cfda:	mov    al,BYTE PTR [esi]
1001cfdc:	mov    BYTE PTR [edi],al
1001cfde:	add    esi,0x1
1001cfe1:	shr    ecx,0x2
1001cfe4:	add    edi,0x1
1001cfe7:	cmp    ecx,0x8
1001cfea:	jb     0x1001cf74
1001cfec:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001cfee:	jmp    DWORD PTR [edx*4+0x1001d064]
1001cff5:	lea    ecx,[ecx+0x0]
1001cff8:	pop    ebx
1001cff9:	rol    BYTE PTR [ecx],1
1001cffb:	adc    BYTE PTR [eax-0x30],cl
1001cffe:	add    DWORD PTR [eax],edx
1001d000:	inc    eax
1001d001:	rol    BYTE PTR [ecx],1
1001d003:	adc    BYTE PTR [eax],bh
1001d005:	rol    BYTE PTR [ecx],1
1001d007:	adc    BYTE PTR [eax],dh
1001d009:	rol    BYTE PTR [ecx],1
1001d00b:	adc    BYTE PTR [eax],ch
1001d00d:	rol    BYTE PTR [ecx],1
1001d00f:	adc    BYTE PTR [eax],ah
1001d011:	rol    BYTE PTR [ecx],1
1001d013:	adc    BYTE PTR [eax],bl
1001d015:	rol    BYTE PTR [ecx],1
1001d017:	adc    BYTE PTR [ebx-0x761b71bc],cl
1001d01d:	inc    esp
1001d01e:	(bad)  
1001d01f:	in     al,0x8b
1001d021:	inc    esp
1001d022:	mov    gs,eax
1001d024:	mov    DWORD PTR [edi+ecx*4-0x18],eax
1001d028:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
1001d02c:	mov    DWORD PTR [edi+ecx*4-0x14],eax
1001d030:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
1001d034:	mov    DWORD PTR [edi+ecx*4-0x10],eax
1001d038:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
1001d03c:	mov    DWORD PTR [edi+ecx*4-0xc],eax
1001d040:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
1001d044:	mov    DWORD PTR [edi+ecx*4-0x8],eax
1001d048:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
1001d04c:	mov    DWORD PTR [edi+ecx*4-0x4],eax
1001d050:	lea    eax,[ecx*4+0x0]
1001d057:	add    esi,eax
1001d059:	add    edi,eax
1001d05b:	jmp    DWORD PTR [edx*4+0x1001d064]
1001d062:	mov    edi,edi
1001d064:	je     0x1001d036
1001d066:	add    DWORD PTR [eax],edx
1001d068:	jl     0x1001d03a
1001d06a:	add    DWORD PTR [eax],edx
1001d06c:	mov    al,dl
1001d06e:	add    DWORD PTR [eax],edx
1001d070:	pushf  
1001d071:	rol    BYTE PTR [ecx],1
1001d073:	adc    BYTE PTR [ebx+0x5f5e0845],cl
1001d079:	leave  
1001d07a:	ret    
1001d07b:	nop
1001d07c:	mov    al,BYTE PTR [esi]
1001d07e:	mov    BYTE PTR [edi],al
1001d080:	mov    eax,DWORD PTR [ebp+0x8]
1001d083:	pop    esi
1001d084:	pop    edi
1001d085:	leave  
1001d086:	ret    
1001d087:	nop
1001d088:	mov    al,BYTE PTR [esi]
1001d08a:	mov    BYTE PTR [edi],al
1001d08c:	mov    al,BYTE PTR [esi+0x1]
1001d08f:	mov    BYTE PTR [edi+0x1],al
1001d092:	mov    eax,DWORD PTR [ebp+0x8]
1001d095:	pop    esi
1001d096:	pop    edi
1001d097:	leave  
1001d098:	ret    
1001d099:	lea    ecx,[ecx+0x0]
1001d09c:	mov    al,BYTE PTR [esi]
1001d09e:	mov    BYTE PTR [edi],al
1001d0a0:	mov    al,BYTE PTR [esi+0x1]
1001d0a3:	mov    BYTE PTR [edi+0x1],al
1001d0a6:	mov    al,BYTE PTR [esi+0x2]
1001d0a9:	mov    BYTE PTR [edi+0x2],al
1001d0ac:	mov    eax,DWORD PTR [ebp+0x8]
1001d0af:	pop    esi
1001d0b0:	pop    edi
1001d0b1:	leave  
1001d0b2:	ret    
1001d0b3:	nop
1001d0b4:	lea    esi,[ecx+esi*1-0x4]
1001d0b8:	lea    edi,[ecx+edi*1-0x4]
1001d0bc:	test   edi,0x3
1001d0c2:	jne    0x1001d0e8
1001d0c4:	shr    ecx,0x2
1001d0c7:	and    edx,0x3
1001d0ca:	cmp    ecx,0x8
1001d0cd:	jb     0x1001d0dc
1001d0cf:	std    
1001d0d0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d0d2:	cld    
1001d0d3:	jmp    DWORD PTR [edx*4+0x1001d200]
1001d0da:	mov    edi,edi
1001d0dc:	neg    ecx
1001d0de:	jmp    DWORD PTR [ecx*4+0x1001d1b0]
1001d0e5:	lea    ecx,[ecx+0x0]
1001d0e8:	mov    eax,edi
1001d0ea:	mov    edx,0x3
1001d0ef:	cmp    ecx,0x4
1001d0f2:	jb     0x1001d100
1001d0f4:	and    eax,0x3
1001d0f7:	sub    ecx,eax
1001d0f9:	jmp    DWORD PTR [eax*4+0x1001d104]
1001d100:	jmp    DWORD PTR [ecx*4+0x1001d200]
1001d107:	nop
1001d108:	adc    al,0xd1
1001d10a:	add    DWORD PTR [eax],edx
1001d10c:	cmp    cl,dl
1001d10e:	add    DWORD PTR [eax],edx
1001d110:	pusha  
1001d111:	rol    DWORD PTR [ecx],1
1001d113:	adc    BYTE PTR [edx-0x2edcfcba],cl
1001d119:	mov    BYTE PTR [edi+0x3],al
1001d11c:	sub    esi,0x1
1001d11f:	shr    ecx,0x2
1001d122:	sub    edi,0x1
1001d125:	cmp    ecx,0x8
1001d128:	jb     0x1001d0dc
1001d12a:	std    
1001d12b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d12d:	cld    
1001d12e:	jmp    DWORD PTR [edx*4+0x1001d200]
1001d135:	lea    ecx,[ecx+0x0]
1001d138:	mov    al,BYTE PTR [esi+0x3]
1001d13b:	and    edx,ecx
1001d13d:	mov    BYTE PTR [edi+0x3],al
1001d140:	mov    al,BYTE PTR [esi+0x2]
1001d143:	shr    ecx,0x2
1001d146:	mov    BYTE PTR [edi+0x2],al
1001d149:	sub    esi,0x2
1001d14c:	sub    edi,0x2
1001d14f:	cmp    ecx,0x8
1001d152:	jb     0x1001d0dc
1001d154:	std    
1001d155:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d157:	cld    
1001d158:	jmp    DWORD PTR [edx*4+0x1001d200]
1001d15f:	nop
1001d160:	mov    al,BYTE PTR [esi+0x3]
1001d163:	and    edx,ecx
1001d165:	mov    BYTE PTR [edi+0x3],al
1001d168:	mov    al,BYTE PTR [esi+0x2]
1001d16b:	mov    BYTE PTR [edi+0x2],al
1001d16e:	mov    al,BYTE PTR [esi+0x1]
1001d171:	shr    ecx,0x2
1001d174:	mov    BYTE PTR [edi+0x1],al
1001d177:	sub    esi,0x3
1001d17a:	sub    edi,0x3
1001d17d:	cmp    ecx,0x8
1001d180:	jb     0x1001d0dc
1001d186:	std    
1001d187:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001d189:	cld    
1001d18a:	jmp    DWORD PTR [edx*4+0x1001d200]
1001d191:	lea    ecx,[ecx+0x0]
1001d194:	mov    ah,0xd1
1001d196:	add    DWORD PTR [eax],edx
1001d198:	mov    esp,0xc41001d1
1001d19d:	rol    DWORD PTR [ecx],1
1001d19f:	adc    ah,cl
1001d1a1:	rol    DWORD PTR [ecx],1
1001d1a3:	adc    ah,dl
1001d1a5:	rol    DWORD PTR [ecx],1
1001d1a7:	adc    ah,bl
1001d1a9:	rol    DWORD PTR [ecx],1
1001d1ab:	adc    ah,ah
1001d1ad:	rol    DWORD PTR [ecx],1
1001d1af:	adc    bh,dh
1001d1b1:	rol    DWORD PTR [ecx],1
1001d1b3:	adc    BYTE PTR [ebx-0x76e371bc],cl
1001d1b9:	inc    esp
1001d1ba:	(bad)  
1001d1bb:	sbb    al,0x8b
1001d1bd:	inc    esp
1001d1be:	mov    ds,WORD PTR [eax]
1001d1c0:	mov    DWORD PTR [edi+ecx*4+0x18],eax
1001d1c4:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
1001d1c8:	mov    DWORD PTR [edi+ecx*4+0x14],eax
1001d1cc:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
1001d1d0:	mov    DWORD PTR [edi+ecx*4+0x10],eax
1001d1d4:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
1001d1d8:	mov    DWORD PTR [edi+ecx*4+0xc],eax
1001d1dc:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
1001d1e0:	mov    DWORD PTR [edi+ecx*4+0x8],eax
1001d1e4:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
1001d1e8:	mov    DWORD PTR [edi+ecx*4+0x4],eax
1001d1ec:	lea    eax,[ecx*4+0x0]
1001d1f3:	add    esi,eax
1001d1f5:	add    edi,eax
1001d1f7:	jmp    DWORD PTR [edx*4+0x1001d200]
1001d1fe:	mov    edi,edi
1001d200:	adc    dl,dl
1001d202:	add    DWORD PTR [eax],edx
1001d204:	sbb    dl,dl
1001d206:	add    DWORD PTR [eax],edx
1001d208:	sub    dl,dl
1001d20a:	add    DWORD PTR [eax],edx
1001d20c:	cmp    al,0xd2
1001d20e:	add    DWORD PTR [eax],edx
1001d210:	mov    eax,DWORD PTR [ebp+0x8]
1001d213:	pop    esi
1001d214:	pop    edi
1001d215:	leave  
1001d216:	ret    
1001d217:	nop
1001d218:	mov    al,BYTE PTR [esi+0x3]
1001d21b:	mov    BYTE PTR [edi+0x3],al
1001d21e:	mov    eax,DWORD PTR [ebp+0x8]
1001d221:	pop    esi
1001d222:	pop    edi
1001d223:	leave  
1001d224:	ret    
1001d225:	lea    ecx,[ecx+0x0]
1001d228:	mov    al,BYTE PTR [esi+0x3]
1001d22b:	mov    BYTE PTR [edi+0x3],al
1001d22e:	mov    al,BYTE PTR [esi+0x2]
1001d231:	mov    BYTE PTR [edi+0x2],al
1001d234:	mov    eax,DWORD PTR [ebp+0x8]
1001d237:	pop    esi
1001d238:	pop    edi
1001d239:	leave  
1001d23a:	ret    
1001d23b:	nop
1001d23c:	mov    al,BYTE PTR [esi+0x3]
1001d23f:	mov    BYTE PTR [edi+0x3],al
1001d242:	mov    al,BYTE PTR [esi+0x2]
1001d245:	mov    BYTE PTR [edi+0x2],al
1001d248:	mov    al,BYTE PTR [esi+0x1]
1001d24b:	mov    BYTE PTR [edi+0x1],al
1001d24e:	mov    eax,DWORD PTR [ebp+0x8]
1001d251:	pop    esi
1001d252:	pop    edi
1001d253:	leave  
1001d254:	ret    
1001d255:	push   ebp
1001d256:	mov    ebp,esp
1001d258:	sub    esp,0x18
1001d25b:	push   ebx
1001d25c:	push   edi
1001d25d:	push   DWORD PTR [ebp+0x8]
1001d260:	lea    ecx,[ebp-0x18]
1001d263:	call   0x1001924a
1001d268:	mov    eax,DWORD PTR [ebp+0x10]
1001d26b:	mov    edi,DWORD PTR [ebp+0xc]
1001d26e:	xor    ebx,ebx
1001d270:	cmp    eax,ebx
1001d272:	je     0x1001d276
1001d274:	mov    DWORD PTR [eax],edi
1001d276:	cmp    edi,ebx
1001d278:	jne    0x1001d2a5
1001d27a:	call   0x1001cd0e
1001d27f:	push   ebx
1001d280:	push   ebx
1001d281:	push   ebx
1001d282:	push   ebx
1001d283:	push   ebx
1001d284:	mov    DWORD PTR [eax],0x16
1001d28a:	call   0x10018dbf
1001d28f:	add    esp,0x14
1001d292:	cmp    BYTE PTR [ebp-0xc],bl
1001d295:	je     0x1001d29e
1001d297:	mov    eax,DWORD PTR [ebp-0x10]
1001d29a:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d29e:	xor    eax,eax
1001d2a0:	jmp    0x1001d448
1001d2a5:	cmp    DWORD PTR [ebp+0x14],ebx
1001d2a8:	je     0x1001d2b6
1001d2aa:	cmp    DWORD PTR [ebp+0x14],0x2
1001d2ae:	jl     0x1001d27a
1001d2b0:	cmp    DWORD PTR [ebp+0x14],0x24
1001d2b4:	jg     0x1001d27a
1001d2b6:	push   esi
1001d2b7:	movzx  esi,WORD PTR [edi]
1001d2ba:	mov    DWORD PTR [ebp-0x4],ebx
1001d2bd:	add    edi,0x2
1001d2c0:	jmp    0x1001d2c7
1001d2c2:	movzx  esi,WORD PTR [edi]
1001d2c5:	inc    edi
1001d2c6:	inc    edi
1001d2c7:	lea    eax,[ebp-0x18]
1001d2ca:	push   eax
1001d2cb:	push   0x8
1001d2cd:	push   esi
1001d2ce:	call   0x1001fa1b
1001d2d3:	add    esp,0xc
1001d2d6:	test   eax,eax
1001d2d8:	jne    0x1001d2c2
1001d2da:	cmp    si,0x2d
1001d2de:	jne    0x1001d2e6
1001d2e0:	or     DWORD PTR [ebp+0x18],0x2
1001d2e4:	jmp    0x1001d2ec
1001d2e6:	cmp    si,0x2b
1001d2ea:	jne    0x1001d2f1
1001d2ec:	movzx  esi,WORD PTR [edi]
1001d2ef:	inc    edi
1001d2f0:	inc    edi
1001d2f1:	cmp    DWORD PTR [ebp+0x14],ebx
1001d2f4:	jne    0x1001d329
1001d2f6:	push   esi
1001d2f7:	call   0x10023c47
1001d2fc:	test   eax,eax
1001d2fe:	pop    ecx
1001d2ff:	je     0x1001d30a
1001d301:	mov    DWORD PTR [ebp+0x14],0xa
1001d308:	jmp    0x1001d350
1001d30a:	movzx  eax,WORD PTR [edi]
1001d30d:	cmp    ax,0x78
1001d311:	je     0x1001d322
1001d313:	cmp    ax,0x58
1001d317:	je     0x1001d322
1001d319:	mov    DWORD PTR [ebp+0x14],0x8
1001d320:	jmp    0x1001d350
1001d322:	mov    DWORD PTR [ebp+0x14],0x10
1001d329:	cmp    DWORD PTR [ebp+0x14],0x10
1001d32d:	jne    0x1001d350
1001d32f:	push   esi
1001d330:	call   0x10023c47
1001d335:	test   eax,eax
1001d337:	pop    ecx
1001d338:	jne    0x1001d350
1001d33a:	movzx  eax,WORD PTR [edi]
1001d33d:	cmp    ax,0x78
1001d341:	je     0x1001d349
1001d343:	cmp    ax,0x58
1001d347:	jne    0x1001d350
1001d349:	inc    edi
1001d34a:	inc    edi
1001d34b:	movzx  esi,WORD PTR [edi]
1001d34e:	inc    edi
1001d34f:	inc    edi
1001d350:	or     eax,0xffffffff
1001d353:	xor    edx,edx
1001d355:	div    DWORD PTR [ebp+0x14]
1001d358:	mov    DWORD PTR [ebp-0x8],edx
1001d35b:	mov    ebx,eax
1001d35d:	push   esi
1001d35e:	call   0x10023c47
1001d363:	cmp    eax,0xffffffff
1001d366:	pop    ecx
1001d367:	jne    0x1001d390
1001d369:	cmp    si,0x41
1001d36d:	jb     0x1001d375
1001d36f:	cmp    si,0x5a
1001d373:	jbe    0x1001d37e
1001d375:	lea    eax,[esi-0x61]
1001d378:	cmp    ax,0x19
1001d37c:	ja     0x1001d3af
1001d37e:	lea    eax,[esi-0x61]
1001d381:	cmp    ax,0x19
1001d385:	movzx  eax,si
1001d388:	ja     0x1001d38d
1001d38a:	sub    eax,0x20
1001d38d:	add    eax,0xffffffc9
1001d390:	cmp    eax,DWORD PTR [ebp+0x14]
1001d393:	jae    0x1001d3af
1001d395:	or     DWORD PTR [ebp+0x18],0x8
1001d399:	cmp    DWORD PTR [ebp-0x4],ebx
1001d39c:	jb     0x1001d3c7
1001d39e:	jne    0x1001d3a5
1001d3a0:	cmp    eax,DWORD PTR [ebp-0x8]
1001d3a3:	jbe    0x1001d3c7
1001d3a5:	or     DWORD PTR [ebp+0x18],0x4
1001d3a9:	cmp    DWORD PTR [ebp+0x10],0x0
1001d3ad:	jne    0x1001d3d3
1001d3af:	mov    eax,DWORD PTR [ebp+0x18]
1001d3b2:	dec    edi
1001d3b3:	dec    edi
1001d3b4:	test   al,0x8
1001d3b6:	jne    0x1001d3da
1001d3b8:	cmp    DWORD PTR [ebp+0x10],0x0
1001d3bc:	je     0x1001d3c1
1001d3be:	mov    edi,DWORD PTR [ebp+0xc]
1001d3c1:	and    DWORD PTR [ebp-0x4],0x0
1001d3c5:	jmp    0x1001d425
1001d3c7:	mov    ecx,DWORD PTR [ebp-0x4]
1001d3ca:	imul   ecx,DWORD PTR [ebp+0x14]
1001d3ce:	add    ecx,eax
1001d3d0:	mov    DWORD PTR [ebp-0x4],ecx
1001d3d3:	movzx  esi,WORD PTR [edi]
1001d3d6:	inc    edi
1001d3d7:	inc    edi
1001d3d8:	jmp    0x1001d35d
1001d3da:	test   al,0x4
1001d3dc:	mov    esi,0x7fffffff
1001d3e1:	jne    0x1001d3fe
1001d3e3:	test   al,0x1
1001d3e5:	jne    0x1001d425
1001d3e7:	and    eax,0x2
1001d3ea:	je     0x1001d3f5
1001d3ec:	cmp    DWORD PTR [ebp-0x4],0x80000000
1001d3f3:	ja     0x1001d3fe
1001d3f5:	test   eax,eax
1001d3f7:	jne    0x1001d425
1001d3f9:	cmp    DWORD PTR [ebp-0x4],esi
1001d3fc:	jbe    0x1001d425
1001d3fe:	call   0x1001cd0e
1001d403:	test   BYTE PTR [ebp+0x18],0x1
1001d407:	mov    DWORD PTR [eax],0x22
1001d40d:	je     0x1001d415
1001d40f:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d413:	jmp    0x1001d425
1001d415:	mov    al,BYTE PTR [ebp+0x18]
1001d418:	and    al,0x2
1001d41a:	neg    al
1001d41c:	sbb    eax,eax
1001d41e:	neg    eax
1001d420:	add    eax,esi
1001d422:	mov    DWORD PTR [ebp-0x4],eax
1001d425:	mov    eax,DWORD PTR [ebp+0x10]
1001d428:	test   eax,eax
1001d42a:	pop    esi
1001d42b:	je     0x1001d42f
1001d42d:	mov    DWORD PTR [eax],edi
1001d42f:	test   BYTE PTR [ebp+0x18],0x2
1001d433:	je     0x1001d438
1001d435:	neg    DWORD PTR [ebp-0x4]
1001d438:	cmp    BYTE PTR [ebp-0xc],0x0
1001d43c:	je     0x1001d445
1001d43e:	mov    eax,DWORD PTR [ebp-0x10]
1001d441:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d445:	mov    eax,DWORD PTR [ebp-0x4]
1001d448:	pop    edi
1001d449:	pop    ebx
1001d44a:	leave  
1001d44b:	ret    
1001d44c:	push   ebp
1001d44d:	mov    ebp,esp
1001d44f:	xor    eax,eax
1001d451:	cmp    DWORD PTR ds:0x100c9260,eax
1001d457:	push   eax
1001d458:	push   DWORD PTR [ebp+0x10]
1001d45b:	push   DWORD PTR [ebp+0xc]
1001d45e:	push   DWORD PTR [ebp+0x8]
1001d461:	jne    0x1001d46a
1001d463:	push   0x100c7f60
1001d468:	jmp    0x1001d46b
1001d46a:	push   eax
1001d46b:	call   0x1001d255
1001d470:	add    esp,0x14
1001d473:	pop    ebp
1001d474:	ret    
1001d475:	push   ebp
1001d476:	mov    ebp,esp
1001d478:	sub    esp,0x30
1001d47b:	push   ebx
1001d47c:	push   esi
1001d47d:	push   DWORD PTR [ebp+0x8]
1001d480:	lea    ecx,[ebp-0x30]
1001d483:	call   0x1001924a
1001d488:	mov    eax,DWORD PTR [ebp+0x10]
1001d48b:	mov    ebx,DWORD PTR [ebp+0xc]
1001d48e:	xor    esi,esi
1001d490:	cmp    eax,esi
1001d492:	je     0x1001d496
1001d494:	mov    DWORD PTR [eax],ebx
1001d496:	cmp    ebx,esi
1001d498:	jne    0x1001d4c8
1001d49a:	call   0x1001cd0e
1001d49f:	push   esi
1001d4a0:	push   esi
1001d4a1:	push   esi
1001d4a2:	push   esi
1001d4a3:	push   esi
1001d4a4:	mov    DWORD PTR [eax],0x16
1001d4aa:	call   0x10018dbf
1001d4af:	add    esp,0x14
1001d4b2:	cmp    BYTE PTR [ebp-0x24],0x0
1001d4b6:	je     0x1001d4bf
1001d4b8:	mov    eax,DWORD PTR [ebp-0x28]
1001d4bb:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d4bf:	xor    eax,eax
1001d4c1:	xor    edx,edx
1001d4c3:	jmp    0x1001d721
1001d4c8:	cmp    DWORD PTR [ebp+0x14],esi
1001d4cb:	je     0x1001d4d9
1001d4cd:	cmp    DWORD PTR [ebp+0x14],0x2
1001d4d1:	jl     0x1001d49a
1001d4d3:	cmp    DWORD PTR [ebp+0x14],0x24
1001d4d7:	jg     0x1001d49a
1001d4d9:	push   edi
1001d4da:	mov    DWORD PTR [ebp-0x8],esi
1001d4dd:	mov    DWORD PTR [ebp-0x4],esi
1001d4e0:	movzx  esi,WORD PTR [ebx]
1001d4e3:	lea    edi,[ebx+0x2]
1001d4e6:	jmp    0x1001d4ed
1001d4e8:	movzx  esi,WORD PTR [edi]
1001d4eb:	inc    edi
1001d4ec:	inc    edi
1001d4ed:	lea    eax,[ebp-0x30]
1001d4f0:	push   eax
1001d4f1:	push   0x8
1001d4f3:	push   esi
1001d4f4:	call   0x1001fa1b
1001d4f9:	add    esp,0xc
1001d4fc:	test   eax,eax
1001d4fe:	jne    0x1001d4e8
1001d500:	cmp    si,0x2d
1001d504:	jne    0x1001d50c
1001d506:	or     DWORD PTR [ebp+0x18],0x2
1001d50a:	jmp    0x1001d512
1001d50c:	cmp    si,0x2b
1001d510:	jne    0x1001d517
1001d512:	movzx  esi,WORD PTR [edi]
1001d515:	inc    edi
1001d516:	inc    edi
1001d517:	mov    eax,DWORD PTR [ebp+0x14]
1001d51a:	test   eax,eax
1001d51c:	jl     0x1001d706
1001d522:	cmp    eax,0x1
1001d525:	je     0x1001d706
1001d52b:	cmp    eax,0x24
1001d52e:	jg     0x1001d706
1001d534:	test   eax,eax
1001d536:	push   0x10
1001d538:	pop    ebx
1001d539:	jne    0x1001d56a
1001d53b:	push   esi
1001d53c:	call   0x10023c47
1001d541:	test   eax,eax
1001d543:	pop    ecx
1001d544:	je     0x1001d54f
1001d546:	mov    DWORD PTR [ebp+0x14],0xa
1001d54d:	jmp    0x1001d590
1001d54f:	movzx  eax,WORD PTR [edi]
1001d552:	cmp    ax,0x78
1001d556:	je     0x1001d567
1001d558:	cmp    ax,0x58
1001d55c:	je     0x1001d567
1001d55e:	mov    DWORD PTR [ebp+0x14],0x8
1001d565:	jmp    0x1001d590
1001d567:	mov    DWORD PTR [ebp+0x14],ebx
1001d56a:	cmp    DWORD PTR [ebp+0x14],ebx
1001d56d:	jne    0x1001d590
1001d56f:	push   esi
1001d570:	call   0x10023c47
1001d575:	test   eax,eax
1001d577:	pop    ecx
1001d578:	jne    0x1001d590
1001d57a:	movzx  eax,WORD PTR [edi]
1001d57d:	cmp    ax,0x78
1001d581:	je     0x1001d589
1001d583:	cmp    ax,0x58
1001d587:	jne    0x1001d590
1001d589:	inc    edi
1001d58a:	inc    edi
1001d58b:	movzx  esi,WORD PTR [edi]
1001d58e:	inc    edi
1001d58f:	inc    edi
1001d590:	mov    eax,DWORD PTR [ebp+0x14]
1001d593:	cdq    
1001d594:	push   edx
1001d595:	push   eax
1001d596:	push   0xffffffff
1001d598:	push   0xffffffff
1001d59a:	mov    DWORD PTR [ebp-0x20],eax
1001d59d:	mov    DWORD PTR [ebp-0x1c],edx
1001d5a0:	call   0x10021580
1001d5a5:	mov    DWORD PTR [ebp-0x18],ecx
1001d5a8:	mov    DWORD PTR [ebp-0x14],ebx
1001d5ab:	mov    DWORD PTR [ebp-0x10],eax
1001d5ae:	mov    DWORD PTR [ebp-0xc],edx
1001d5b1:	push   esi
1001d5b2:	call   0x10023c47
1001d5b7:	mov    ebx,eax
1001d5b9:	cmp    ebx,0xffffffff
1001d5bc:	pop    ecx
1001d5bd:	jne    0x1001d5e6
1001d5bf:	cmp    si,0x41
1001d5c3:	jb     0x1001d5cb
1001d5c5:	cmp    si,0x5a
1001d5c9:	jbe    0x1001d5d4
1001d5cb:	lea    eax,[esi-0x61]
1001d5ce:	cmp    ax,0x19
1001d5d2:	ja     0x1001d626
1001d5d4:	lea    eax,[esi-0x61]
1001d5d7:	cmp    ax,0x19
1001d5db:	movzx  eax,si
1001d5de:	ja     0x1001d5e3
1001d5e0:	sub    eax,0x20
1001d5e3:	lea    ebx,[eax-0x37]
1001d5e6:	cmp    ebx,DWORD PTR [ebp+0x14]
1001d5e9:	jae    0x1001d626
1001d5eb:	mov    ecx,DWORD PTR [ebp-0x4]
1001d5ee:	or     DWORD PTR [ebp+0x18],0x8
1001d5f2:	cmp    ecx,DWORD PTR [ebp-0xc]
1001d5f5:	jb     0x1001d644
1001d5f7:	ja     0x1001d601
1001d5f9:	mov    eax,DWORD PTR [ebp-0x8]
1001d5fc:	cmp    eax,DWORD PTR [ebp-0x10]
1001d5ff:	jb     0x1001d644
1001d601:	mov    eax,DWORD PTR [ebp-0x10]
1001d604:	cmp    DWORD PTR [ebp-0x8],eax
1001d607:	jne    0x1001d61c
1001d609:	cmp    ecx,DWORD PTR [ebp-0xc]
1001d60c:	jne    0x1001d61c
1001d60e:	xor    eax,eax
1001d610:	cmp    eax,DWORD PTR [ebp-0x14]
1001d613:	jb     0x1001d644
1001d615:	ja     0x1001d61c
1001d617:	cmp    ebx,DWORD PTR [ebp-0x18]
1001d61a:	jbe    0x1001d644
1001d61c:	or     DWORD PTR [ebp+0x18],0x4
1001d620:	cmp    DWORD PTR [ebp+0x10],0x0
1001d624:	jne    0x1001d65f
1001d626:	mov    eax,DWORD PTR [ebp+0x18]
1001d629:	dec    edi
1001d62a:	dec    edi
1001d62b:	test   al,0x8
1001d62d:	jne    0x1001d669
1001d62f:	xor    eax,eax
1001d631:	cmp    DWORD PTR [ebp+0x10],eax
1001d634:	je     0x1001d639
1001d636:	mov    edi,DWORD PTR [ebp+0xc]
1001d639:	mov    DWORD PTR [ebp-0x8],eax
1001d63c:	mov    DWORD PTR [ebp-0x4],eax
1001d63f:	jmp    0x1001d6cf
1001d644:	push   ecx
1001d645:	push   DWORD PTR [ebp-0x8]
1001d648:	push   DWORD PTR [ebp-0x1c]
1001d64b:	push   DWORD PTR [ebp-0x20]
1001d64e:	call   0x10019f10
1001d653:	xor    ecx,ecx
1001d655:	add    eax,ebx
1001d657:	adc    edx,ecx
1001d659:	mov    DWORD PTR [ebp-0x8],eax
1001d65c:	mov    DWORD PTR [ebp-0x4],edx
1001d65f:	movzx  esi,WORD PTR [edi]
1001d662:	inc    edi
1001d663:	inc    edi
1001d664:	jmp    0x1001d5b1
1001d669:	test   al,0x4
1001d66b:	mov    esi,0x7fffffff
1001d670:	mov    ebx,0x80000000
1001d675:	jne    0x1001d69e
1001d677:	test   al,0x1
1001d679:	jne    0x1001d6cf
1001d67b:	and    eax,0x2
1001d67e:	je     0x1001d68d
1001d680:	cmp    DWORD PTR [ebp-0x4],ebx
1001d683:	ja     0x1001d69e
1001d685:	jb     0x1001d68d
1001d687:	cmp    DWORD PTR [ebp-0x8],0x0
1001d68b:	ja     0x1001d69e
1001d68d:	test   eax,eax
1001d68f:	jne    0x1001d6cf
1001d691:	cmp    DWORD PTR [ebp-0x4],esi
1001d694:	jb     0x1001d6cf
1001d696:	ja     0x1001d69e
1001d698:	cmp    DWORD PTR [ebp-0x8],0xffffffff
1001d69c:	jbe    0x1001d6cf
1001d69e:	call   0x1001cd0e
1001d6a3:	test   BYTE PTR [ebp+0x18],0x1
1001d6a7:	mov    DWORD PTR [eax],0x22
1001d6ad:	je     0x1001d6b9
1001d6af:	or     DWORD PTR [ebp-0x8],0xffffffff
1001d6b3:	or     DWORD PTR [ebp-0x4],0xffffffff
1001d6b7:	jmp    0x1001d6cf
1001d6b9:	test   BYTE PTR [ebp+0x18],0x2
1001d6bd:	je     0x1001d6c8
1001d6bf:	and    DWORD PTR [ebp-0x8],0x0
1001d6c3:	mov    DWORD PTR [ebp-0x4],ebx
1001d6c6:	jmp    0x1001d6cf
1001d6c8:	or     DWORD PTR [ebp-0x8],0xffffffff
1001d6cc:	mov    DWORD PTR [ebp-0x4],esi
1001d6cf:	mov    eax,DWORD PTR [ebp+0x10]
1001d6d2:	test   eax,eax
1001d6d4:	je     0x1001d6d8
1001d6d6:	mov    DWORD PTR [eax],edi
1001d6d8:	test   BYTE PTR [ebp+0x18],0x2
1001d6dc:	je     0x1001d6f1
1001d6de:	mov    eax,DWORD PTR [ebp-0x8]
1001d6e1:	mov    ecx,DWORD PTR [ebp-0x4]
1001d6e4:	neg    eax
1001d6e6:	adc    ecx,0x0
1001d6e9:	neg    ecx
1001d6eb:	mov    DWORD PTR [ebp-0x8],eax
1001d6ee:	mov    DWORD PTR [ebp-0x4],ecx
1001d6f1:	cmp    BYTE PTR [ebp-0x24],0x0
1001d6f5:	je     0x1001d6fe
1001d6f7:	mov    eax,DWORD PTR [ebp-0x28]
1001d6fa:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d6fe:	mov    eax,DWORD PTR [ebp-0x8]
1001d701:	mov    edx,DWORD PTR [ebp-0x4]
1001d704:	jmp    0x1001d720
1001d706:	mov    eax,DWORD PTR [ebp+0x10]
1001d709:	test   eax,eax
1001d70b:	je     0x1001d70f
1001d70d:	mov    DWORD PTR [eax],ebx
1001d70f:	cmp    BYTE PTR [ebp-0x24],0x0
1001d713:	je     0x1001d71c
1001d715:	mov    eax,DWORD PTR [ebp-0x28]
1001d718:	and    DWORD PTR [eax+0x70],0xfffffffd
1001d71c:	xor    eax,eax
1001d71e:	xor    edx,edx
1001d720:	pop    edi
1001d721:	pop    esi
1001d722:	pop    ebx
1001d723:	leave  
1001d724:	ret    
1001d725:	push   ebp
1001d726:	mov    ebp,esp
1001d728:	xor    eax,eax
1001d72a:	cmp    DWORD PTR ds:0x100c9260,eax
1001d730:	push   eax
1001d731:	push   DWORD PTR [ebp+0x10]
1001d734:	push   DWORD PTR [ebp+0xc]
1001d737:	push   DWORD PTR [ebp+0x8]
1001d73a:	jne    0x1001d743
1001d73c:	push   0x100c7f60
1001d741:	jmp    0x1001d744
1001d743:	push   eax
1001d744:	call   0x1001d475
1001d749:	add    esp,0x14
1001d74c:	pop    ebp
1001d74d:	ret    
1001d74e:	push   ebp
1001d74f:	mov    ebp,esp
1001d751:	sub    esp,0x4
1001d754:	mov    DWORD PTR [ebp-0x4],edi
1001d757:	mov    edi,DWORD PTR [ebp+0x8]
1001d75a:	mov    ecx,DWORD PTR [ebp+0xc]
1001d75d:	shr    ecx,0x7
1001d760:	pxor   xmm0,xmm0
1001d764:	jmp    0x1001d76e
1001d766:	lea    esp,[esp+0x0]
1001d76d:	nop
1001d76e:	movdqa XMMWORD PTR [edi],xmm0
1001d772:	movdqa XMMWORD PTR [edi+0x10],xmm0
1001d777:	movdqa XMMWORD PTR [edi+0x20],xmm0
1001d77c:	movdqa XMMWORD PTR [edi+0x30],xmm0
1001d781:	movdqa XMMWORD PTR [edi+0x40],xmm0
1001d786:	movdqa XMMWORD PTR [edi+0x50],xmm0
1001d78b:	movdqa XMMWORD PTR [edi+0x60],xmm0
1001d790:	movdqa XMMWORD PTR [edi+0x70],xmm0
1001d795:	lea    edi,[edi+0x80]
1001d79b:	dec    ecx
1001d79c:	jne    0x1001d76e
1001d79e:	mov    edi,DWORD PTR [ebp-0x4]
1001d7a1:	mov    esp,ebp
1001d7a3:	pop    ebp
1001d7a4:	ret    
1001d7a5:	push   ebp
1001d7a6:	mov    ebp,esp
1001d7a8:	sub    esp,0x10
1001d7ab:	mov    DWORD PTR [ebp-0x4],edi
1001d7ae:	mov    eax,DWORD PTR [ebp+0x8]
1001d7b1:	cdq    
1001d7b2:	mov    edi,eax
1001d7b4:	xor    edi,edx
1001d7b6:	sub    edi,edx
1001d7b8:	and    edi,0xf
1001d7bb:	xor    edi,edx
1001d7bd:	sub    edi,edx
1001d7bf:	test   edi,edi
1001d7c1:	jne    0x1001d7ff
1001d7c3:	mov    ecx,DWORD PTR [ebp+0x10]
1001d7c6:	mov    edx,ecx
1001d7c8:	and    edx,0x7f
1001d7cb:	mov    DWORD PTR [ebp-0xc],edx
1001d7ce:	cmp    ecx,edx
1001d7d0:	je     0x1001d7e4
1001d7d2:	sub    ecx,edx
1001d7d4:	push   ecx
1001d7d5:	push   eax
1001d7d6:	call   0x1001d74e
1001d7db:	add    esp,0x8
1001d7de:	mov    eax,DWORD PTR [ebp+0x8]
1001d7e1:	mov    edx,DWORD PTR [ebp-0xc]
1001d7e4:	test   edx,edx
1001d7e6:	je     0x1001d82d
1001d7e8:	add    eax,DWORD PTR [ebp+0x10]
1001d7eb:	sub    eax,edx
1001d7ed:	mov    DWORD PTR [ebp-0x8],eax
1001d7f0:	xor    eax,eax
1001d7f2:	mov    edi,DWORD PTR [ebp-0x8]
1001d7f5:	mov    ecx,DWORD PTR [ebp-0xc]
1001d7f8:	rep stos BYTE PTR es:[edi],al
1001d7fa:	mov    eax,DWORD PTR [ebp+0x8]
1001d7fd:	jmp    0x1001d82d
1001d7ff:	neg    edi
1001d801:	add    edi,0x10
1001d804:	mov    DWORD PTR [ebp-0x10],edi
1001d807:	xor    eax,eax
1001d809:	mov    edi,DWORD PTR [ebp+0x8]
1001d80c:	mov    ecx,DWORD PTR [ebp-0x10]
1001d80f:	rep stos BYTE PTR es:[edi],al
1001d811:	mov    eax,DWORD PTR [ebp-0x10]
1001d814:	mov    ecx,DWORD PTR [ebp+0x8]
1001d817:	mov    edx,DWORD PTR [ebp+0x10]
1001d81a:	add    ecx,eax
1001d81c:	sub    edx,eax
1001d81e:	push   edx
1001d81f:	push   0x0
1001d821:	push   ecx
1001d822:	call   0x1001d7a5
1001d827:	add    esp,0xc
1001d82a:	mov    eax,DWORD PTR [ebp+0x8]
1001d82d:	mov    edi,DWORD PTR [ebp-0x4]
1001d830:	mov    esp,ebp
1001d832:	pop    ebp
1001d833:	ret    
1001d834:	and    DWORD PTR ds:0x100cb19c,0x0
1001d83b:	call   0x10023e19
1001d840:	mov    ds:0x100cb19c,eax
1001d845:	xor    eax,eax
1001d847:	ret    
1001d848:	sub    eax,0x3a4
1001d84d:	je     0x1001d871
1001d84f:	sub    eax,0x4
1001d852:	je     0x1001d86b
1001d854:	sub    eax,0xd
1001d857:	je     0x1001d865
1001d859:	dec    eax
1001d85a:	je     0x1001d85f
1001d85c:	xor    eax,eax
1001d85e:	ret    
1001d85f:	mov    eax,0x404
1001d864:	ret    
1001d865:	mov    eax,0x412
1001d86a:	ret    
1001d86b:	mov    eax,0x804
1001d870:	ret    
1001d871:	mov    eax,0x411
1001d876:	ret    
1001d877:	push   ebx
1001d878:	push   ebp
1001d879:	push   esi
1001d87a:	push   edi
1001d87b:	mov    ebp,0x101
1001d880:	mov    esi,eax
1001d882:	push   ebp
1001d883:	xor    edi,edi
1001d885:	lea    ebx,[esi+0x1c]
1001d888:	push   edi
1001d889:	push   ebx
1001d88a:	call   0x100191d0
1001d88f:	mov    DWORD PTR [esi+0x4],edi
1001d892:	mov    DWORD PTR [esi+0x8],edi
1001d895:	mov    DWORD PTR [esi+0xc],edi
1001d898:	xor    eax,eax
1001d89a:	lea    edi,[esi+0x10]
1001d89d:	stos   DWORD PTR es:[edi],eax
1001d89e:	stos   DWORD PTR es:[edi],eax
1001d89f:	stos   DWORD PTR es:[edi],eax
1001d8a0:	mov    eax,0x100c7950
1001d8a5:	add    esp,0xc
1001d8a8:	sub    eax,esi
1001d8aa:	mov    cl,BYTE PTR [eax+ebx*1]
1001d8ad:	mov    BYTE PTR [ebx],cl
1001d8af:	inc    ebx
1001d8b0:	dec    ebp
1001d8b1:	jne    0x1001d8aa
1001d8b3:	lea    ecx,[esi+0x11d]
1001d8b9:	mov    esi,0x100
1001d8be:	mov    dl,BYTE PTR [ecx+eax*1]
1001d8c1:	mov    BYTE PTR [ecx],dl
1001d8c3:	inc    ecx
1001d8c4:	dec    esi
1001d8c5:	jne    0x1001d8be
1001d8c7:	pop    edi
1001d8c8:	pop    esi
1001d8c9:	pop    ebp
1001d8ca:	pop    ebx
1001d8cb:	ret    
1001d8cc:	push   ebp
1001d8cd:	lea    ebp,[esp-0x49c]
1001d8d4:	sub    esp,0x51c
1001d8da:	mov    eax,ds:0x100c7654
1001d8df:	xor    eax,ebp
1001d8e1:	mov    DWORD PTR [ebp+0x498],eax
1001d8e7:	push   ebx
1001d8e8:	push   edi
1001d8e9:	lea    eax,[ebp-0x7c]
1001d8ec:	push   eax
1001d8ed:	push   DWORD PTR [esi+0x4]
1001d8f0:	call   DWORD PTR ds:0x1002f1cc
1001d8f6:	test   eax,eax
1001d8f8:	mov    edi,0x100
1001d8fd:	je     0x1001d9f2
1001d903:	xor    eax,eax
1001d905:	mov    BYTE PTR [ebp+eax*1+0x398],al
1001d90c:	inc    eax
1001d90d:	cmp    eax,edi
1001d90f:	jb     0x1001d905
1001d911:	mov    al,BYTE PTR [ebp-0x76]
1001d914:	test   al,al
1001d916:	mov    BYTE PTR [ebp+0x398],0x20
1001d91d:	je     0x1001d94a
1001d91f:	lea    ebx,[ebp-0x75]
1001d922:	movzx  ecx,al
1001d925:	movzx  eax,BYTE PTR [ebx]
1001d928:	cmp    ecx,eax
1001d92a:	ja     0x1001d942
1001d92c:	sub    eax,ecx
1001d92e:	inc    eax
1001d92f:	push   eax
1001d930:	lea    edx,[ebp+ecx*1+0x398]
1001d937:	push   0x20
1001d939:	push   edx
1001d93a:	call   0x100191d0
1001d93f:	add    esp,0xc
1001d942:	inc    ebx
1001d943:	mov    al,BYTE PTR [ebx]
1001d945:	inc    ebx
1001d946:	test   al,al
1001d948:	jne    0x1001d922
1001d94a:	push   0x0
1001d94c:	push   DWORD PTR [esi+0xc]
1001d94f:	lea    eax,[ebp-0x68]
1001d952:	push   DWORD PTR [esi+0x4]
1001d955:	push   eax
1001d956:	push   edi
1001d957:	lea    eax,[ebp+0x398]
1001d95d:	push   eax
1001d95e:	push   0x1
1001d960:	push   0x0
1001d962:	call   0x1002327c
1001d967:	xor    ebx,ebx
1001d969:	push   ebx
1001d96a:	push   DWORD PTR [esi+0x4]
1001d96d:	lea    eax,[ebp+0x298]
1001d973:	push   edi
1001d974:	push   eax
1001d975:	push   edi
1001d976:	lea    eax,[ebp+0x398]
1001d97c:	push   eax
1001d97d:	push   edi
1001d97e:	push   DWORD PTR [esi+0xc]
1001d981:	push   ebx
1001d982:	call   0x1001af6c
1001d987:	add    esp,0x44
1001d98a:	push   ebx
1001d98b:	push   DWORD PTR [esi+0x4]
1001d98e:	lea    eax,[ebp+0x198]
1001d994:	push   edi
1001d995:	push   eax
1001d996:	push   edi
1001d997:	lea    eax,[ebp+0x398]
1001d99d:	push   eax
1001d99e:	push   0x200
1001d9a3:	push   DWORD PTR [esi+0xc]
1001d9a6:	push   ebx
1001d9a7:	call   0x1001af6c
1001d9ac:	add    esp,0x24
1001d9af:	xor    eax,eax
1001d9b1:	movzx  ecx,WORD PTR [ebp+eax*2-0x68]
1001d9b6:	test   cl,0x1
1001d9b9:	je     0x1001d9c9
1001d9bb:	or     BYTE PTR [esi+eax*1+0x1d],0x10
1001d9c0:	mov    cl,BYTE PTR [ebp+eax*1+0x298]
1001d9c7:	jmp    0x1001d9da
1001d9c9:	test   cl,0x2
1001d9cc:	je     0x1001d9e3
1001d9ce:	or     BYTE PTR [esi+eax*1+0x1d],0x20
1001d9d3:	mov    cl,BYTE PTR [ebp+eax*1+0x198]
1001d9da:	mov    BYTE PTR [esi+eax*1+0x11d],cl
1001d9e1:	jmp    0x1001d9eb
1001d9e3:	mov    BYTE PTR [esi+eax*1+0x11d],0x0
1001d9eb:	inc    eax
1001d9ec:	cmp    eax,edi
1001d9ee:	jb     0x1001d9b1
1001d9f0:	jmp    0x1001da3f
1001d9f2:	lea    eax,[esi+0x11d]
1001d9f8:	mov    DWORD PTR [ebp-0x80],0xffffff9f
1001d9ff:	xor    ecx,ecx
1001da01:	sub    DWORD PTR [ebp-0x80],eax
1001da04:	mov    edx,DWORD PTR [ebp-0x80]
1001da07:	lea    eax,[esi+ecx*1+0x11d]
1001da0e:	add    edx,eax
1001da10:	lea    ebx,[edx+0x20]
1001da13:	cmp    ebx,0x19
1001da16:	ja     0x1001da24
1001da18:	or     BYTE PTR [esi+ecx*1+0x1d],0x10
1001da1d:	mov    dl,cl
1001da1f:	add    dl,0x20
1001da22:	jmp    0x1001da33
1001da24:	cmp    edx,0x19
1001da27:	ja     0x1001da37
1001da29:	or     BYTE PTR [esi+ecx*1+0x1d],0x20
1001da2e:	mov    dl,cl
1001da30:	sub    dl,0x20
1001da33:	mov    BYTE PTR [eax],dl
1001da35:	jmp    0x1001da3a
1001da37:	mov    BYTE PTR [eax],0x0
1001da3a:	inc    ecx
1001da3b:	cmp    ecx,edi
1001da3d:	jb     0x1001da04
1001da3f:	mov    ecx,DWORD PTR [ebp+0x498]
1001da45:	pop    edi
1001da46:	xor    ecx,ebp
1001da48:	pop    ebx
1001da49:	call   0x10018773
1001da4e:	add    ebp,0x49c
1001da54:	leave  
1001da55:	ret    
1001da56:	push   0xc
1001da58:	push   0x100bb6d0
1001da5d:	call   0x1001a750
1001da62:	call   0x1001c526
1001da67:	mov    edi,eax
1001da69:	mov    eax,ds:0x100c7e70
1001da6e:	test   DWORD PTR [edi+0x70],eax
1001da71:	je     0x1001da90
1001da73:	cmp    DWORD PTR [edi+0x6c],0x0
1001da77:	je     0x1001da90
1001da79:	mov    esi,DWORD PTR [edi+0x68]
1001da7c:	test   esi,esi
1001da7e:	jne    0x1001da88
1001da80:	push   0x20
1001da82:	call   0x1001c9cf
1001da87:	pop    ecx
1001da88:	mov    eax,esi
1001da8a:	call   0x1001a795
1001da8f:	ret    
1001da90:	push   0xd
1001da92:	call   0x1001e3bb
1001da97:	pop    ecx
1001da98:	and    DWORD PTR [ebp-0x4],0x0
1001da9c:	mov    esi,DWORD PTR [edi+0x68]
1001da9f:	mov    DWORD PTR [ebp-0x1c],esi
1001daa2:	cmp    esi,DWORD PTR ds:0x100c7d78
1001daa8:	je     0x1001dae0
1001daaa:	test   esi,esi
1001daac:	je     0x1001dac8
1001daae:	push   esi
1001daaf:	call   DWORD PTR ds:0x1002f0f0
1001dab5:	test   eax,eax
1001dab7:	jne    0x1001dac8
1001dab9:	cmp    esi,0x100c7950
1001dabf:	je     0x1001dac8
1001dac1:	push   esi
1001dac2:	call   0x100197d5
1001dac7:	pop    ecx
1001dac8:	mov    eax,ds:0x100c7d78
1001dacd:	mov    DWORD PTR [edi+0x68],eax
1001dad0:	mov    esi,DWORD PTR ds:0x100c7d78
1001dad6:	mov    DWORD PTR [ebp-0x1c],esi
1001dad9:	push   esi
1001dada:	call   DWORD PTR ds:0x1002f0e8
1001dae0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001dae7:	call   0x1001daf1
1001daec:	jmp    0x1001da7c
1001daee:	mov    esi,DWORD PTR [ebp-0x1c]
1001daf1:	push   0xd
1001daf3:	call   0x1001e2e3
1001daf8:	pop    ecx
1001daf9:	ret    
1001dafa:	push   ebp
1001dafb:	mov    ebp,esp
1001dafd:	sub    esp,0x10
1001db00:	push   ebx
1001db01:	xor    ebx,ebx
1001db03:	push   ebx
1001db04:	lea    ecx,[ebp-0x10]
1001db07:	call   0x1001924a
1001db0c:	cmp    esi,0xfffffffe
1001db0f:	mov    DWORD PTR ds:0x100c95f4,ebx
1001db15:	jne    0x1001db35
1001db17:	mov    DWORD PTR ds:0x100c95f4,0x1
1001db21:	call   DWORD PTR ds:0x1002f1e0
1001db27:	cmp    BYTE PTR [ebp-0x4],bl
1001db2a:	je     0x1001db71
1001db2c:	mov    ecx,DWORD PTR [ebp-0x8]
1001db2f:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001db33:	jmp    0x1001db71
1001db35:	cmp    esi,0xfffffffd
1001db38:	jne    0x1001db4c
1001db3a:	mov    DWORD PTR ds:0x100c95f4,0x1
1001db44:	call   DWORD PTR ds:0x1002f16c
1001db4a:	jmp    0x1001db27
1001db4c:	cmp    esi,0xfffffffc
1001db4f:	jne    0x1001db63
1001db51:	mov    eax,DWORD PTR [ebp-0x10]
1001db54:	mov    eax,DWORD PTR [eax+0x4]
1001db57:	mov    DWORD PTR ds:0x100c95f4,0x1
1001db61:	jmp    0x1001db27
1001db63:	cmp    BYTE PTR [ebp-0x4],bl
1001db66:	je     0x1001db6f
1001db68:	mov    eax,DWORD PTR [ebp-0x8]
1001db6b:	and    DWORD PTR [eax+0x70],0xfffffffd
1001db6f:	mov    eax,esi
1001db71:	pop    ebx
1001db72:	leave  
1001db73:	ret    
1001db74:	push   ebp
1001db75:	mov    ebp,esp
1001db77:	sub    esp,0x20
1001db7a:	mov    eax,ds:0x100c7654
1001db7f:	xor    eax,ebp
1001db81:	mov    DWORD PTR [ebp-0x4],eax
1001db84:	push   ebx
1001db85:	mov    ebx,DWORD PTR [ebp+0xc]
1001db88:	push   esi
1001db89:	mov    esi,DWORD PTR [ebp+0x8]
1001db8c:	push   edi
1001db8d:	call   0x1001dafa
1001db92:	mov    edi,eax
1001db94:	xor    esi,esi
1001db96:	cmp    edi,esi
1001db98:	mov    DWORD PTR [ebp+0x8],edi
1001db9b:	jne    0x1001dbab
1001db9d:	mov    eax,ebx
1001db9f:	call   0x1001d877
1001dba4:	xor    eax,eax
1001dba6:	jmp    0x1001dd3e
1001dbab:	mov    DWORD PTR [ebp-0x1c],esi
1001dbae:	xor    eax,eax
1001dbb0:	cmp    DWORD PTR [eax+0x100c7d80],edi
1001dbb6:	je     0x1001dc4d
1001dbbc:	inc    DWORD PTR [ebp-0x1c]
1001dbbf:	add    eax,0x30
1001dbc2:	cmp    eax,0xf0
1001dbc7:	jb     0x1001dbb0
1001dbc9:	cmp    edi,0xfde8
1001dbcf:	je     0x1001dd3b
1001dbd5:	cmp    edi,0xfde9
1001dbdb:	je     0x1001dd3b
1001dbe1:	movzx  eax,di
1001dbe4:	push   eax
1001dbe5:	call   DWORD PTR ds:0x1002f1e4
1001dbeb:	test   eax,eax
1001dbed:	je     0x1001dd3b
1001dbf3:	lea    eax,[ebp-0x18]
1001dbf6:	push   eax
1001dbf7:	push   edi
1001dbf8:	call   DWORD PTR ds:0x1002f1cc
1001dbfe:	test   eax,eax
1001dc00:	je     0x1001dd2f
1001dc06:	push   0x101
1001dc0b:	lea    eax,[ebx+0x1c]
1001dc0e:	push   esi
1001dc0f:	push   eax
1001dc10:	call   0x100191d0
1001dc15:	xor    edx,edx
1001dc17:	inc    edx
1001dc18:	add    esp,0xc
1001dc1b:	cmp    DWORD PTR [ebp-0x18],edx
1001dc1e:	mov    DWORD PTR [ebx+0x4],edi
1001dc21:	mov    DWORD PTR [ebx+0xc],esi
1001dc24:	jbe    0x1001dd22
1001dc2a:	cmp    BYTE PTR [ebp-0x12],0x0
1001dc2e:	je     0x1001dd03
1001dc34:	lea    esi,[ebp-0x11]
1001dc37:	mov    cl,BYTE PTR [esi]
1001dc39:	test   cl,cl
1001dc3b:	je     0x1001dd03
1001dc41:	movzx  eax,BYTE PTR [esi-0x1]
1001dc45:	movzx  ecx,cl
1001dc48:	jmp    0x1001dcf3
1001dc4d:	push   0x101
1001dc52:	lea    eax,[ebx+0x1c]
1001dc55:	push   esi
1001dc56:	push   eax
1001dc57:	call   0x100191d0
1001dc5c:	mov    ecx,DWORD PTR [ebp-0x1c]
1001dc5f:	add    esp,0xc
1001dc62:	imul   ecx,ecx,0x30
1001dc65:	mov    DWORD PTR [ebp-0x20],esi
1001dc68:	lea    esi,[ecx+0x100c7d90]
1001dc6e:	mov    DWORD PTR [ebp-0x1c],esi
1001dc71:	jmp    0x1001dc9d
1001dc73:	mov    al,BYTE PTR [esi+0x1]
1001dc76:	test   al,al
1001dc78:	je     0x1001dca2
1001dc7a:	movzx  edi,BYTE PTR [esi]
1001dc7d:	movzx  eax,al
1001dc80:	jmp    0x1001dc94
1001dc82:	mov    eax,DWORD PTR [ebp-0x20]
1001dc85:	mov    al,BYTE PTR [eax+0x100c7d7c]
1001dc8b:	or     BYTE PTR [ebx+edi*1+0x1d],al
1001dc8f:	movzx  eax,BYTE PTR [esi+0x1]
1001dc93:	inc    edi
1001dc94:	cmp    edi,eax
1001dc96:	jbe    0x1001dc82
1001dc98:	mov    edi,DWORD PTR [ebp+0x8]
1001dc9b:	inc    esi
1001dc9c:	inc    esi
1001dc9d:	cmp    BYTE PTR [esi],0x0
1001dca0:	jne    0x1001dc73
1001dca2:	mov    esi,DWORD PTR [ebp-0x1c]
1001dca5:	inc    DWORD PTR [ebp-0x20]
1001dca8:	add    esi,0x8
1001dcab:	cmp    DWORD PTR [ebp-0x20],0x4
1001dcaf:	mov    DWORD PTR [ebp-0x1c],esi
1001dcb2:	jb     0x1001dc9d
1001dcb4:	mov    eax,edi
1001dcb6:	mov    DWORD PTR [ebx+0x4],edi
1001dcb9:	mov    DWORD PTR [ebx+0x8],0x1
1001dcc0:	call   0x1001d848
1001dcc5:	push   0x6
1001dcc7:	mov    DWORD PTR [ebx+0xc],eax
1001dcca:	lea    eax,[ebx+0x10]
1001dccd:	lea    ecx,[ecx+0x100c7d84]
1001dcd3:	pop    edx
1001dcd4:	mov    si,WORD PTR [ecx]
1001dcd7:	inc    ecx
1001dcd8:	mov    WORD PTR [eax],si
1001dcdb:	inc    ecx
1001dcdc:	inc    eax
1001dcdd:	inc    eax
1001dcde:	dec    edx
1001dcdf:	jne    0x1001dcd4
1001dce1:	mov    esi,ebx
1001dce3:	call   0x1001d8cc
1001dce8:	jmp    0x1001dba4
1001dced:	or     BYTE PTR [ebx+eax*1+0x1d],0x4
1001dcf2:	inc    eax
1001dcf3:	cmp    eax,ecx
1001dcf5:	jbe    0x1001dced
1001dcf7:	inc    esi
1001dcf8:	inc    esi
1001dcf9:	cmp    BYTE PTR [esi-0x1],0x0
1001dcfd:	jne    0x1001dc37
1001dd03:	lea    eax,[ebx+0x1e]
1001dd06:	mov    ecx,0xfe
1001dd0b:	or     BYTE PTR [eax],0x8
1001dd0e:	inc    eax
1001dd0f:	dec    ecx
1001dd10:	jne    0x1001dd0b
1001dd12:	mov    eax,DWORD PTR [ebx+0x4]
1001dd15:	call   0x1001d848
1001dd1a:	mov    DWORD PTR [ebx+0xc],eax
1001dd1d:	mov    DWORD PTR [ebx+0x8],edx
1001dd20:	jmp    0x1001dd25
1001dd22:	mov    DWORD PTR [ebx+0x8],esi
1001dd25:	xor    eax,eax
1001dd27:	lea    edi,[ebx+0x10]
1001dd2a:	stos   DWORD PTR es:[edi],eax
1001dd2b:	stos   DWORD PTR es:[edi],eax
1001dd2c:	stos   DWORD PTR es:[edi],eax
1001dd2d:	jmp    0x1001dce1
1001dd2f:	cmp    DWORD PTR ds:0x100c95f4,esi
1001dd35:	jne    0x1001db9d
1001dd3b:	or     eax,0xffffffff
1001dd3e:	mov    ecx,DWORD PTR [ebp-0x4]
1001dd41:	pop    edi
1001dd42:	pop    esi
1001dd43:	xor    ecx,ebp
1001dd45:	pop    ebx
1001dd46:	call   0x10018773
1001dd4b:	leave  
1001dd4c:	ret    
1001dd4d:	push   0x14
1001dd4f:	push   0x100bb6f0
1001dd54:	call   0x1001a750
1001dd59:	or     DWORD PTR [ebp-0x20],0xffffffff
1001dd5d:	call   0x1001c526
1001dd62:	mov    edi,eax
1001dd64:	mov    DWORD PTR [ebp-0x24],edi
1001dd67:	call   0x1001da56
1001dd6c:	mov    ebx,DWORD PTR [edi+0x68]
1001dd6f:	mov    esi,DWORD PTR [ebp+0x8]
1001dd72:	call   0x1001dafa
1001dd77:	mov    DWORD PTR [ebp+0x8],eax
1001dd7a:	cmp    eax,DWORD PTR [ebx+0x4]
1001dd7d:	je     0x1001deda
1001dd83:	push   0x220
1001dd88:	call   0x1001afaf
1001dd8d:	pop    ecx
1001dd8e:	mov    ebx,eax
1001dd90:	test   ebx,ebx
1001dd92:	je     0x1001dede
1001dd98:	mov    ecx,0x88
1001dd9d:	mov    esi,DWORD PTR [edi+0x68]
1001dda0:	mov    edi,ebx
1001dda2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001dda4:	and    DWORD PTR [ebx],0x0
1001dda7:	push   ebx
1001dda8:	push   DWORD PTR [ebp+0x8]
1001ddab:	call   0x1001db74
1001ddb0:	pop    ecx
1001ddb1:	pop    ecx
1001ddb2:	mov    DWORD PTR [ebp-0x20],eax
1001ddb5:	test   eax,eax
1001ddb7:	jne    0x1001deb9
1001ddbd:	mov    esi,DWORD PTR [ebp-0x24]
1001ddc0:	push   DWORD PTR [esi+0x68]
1001ddc3:	call   DWORD PTR ds:0x1002f0f0
1001ddc9:	test   eax,eax
1001ddcb:	jne    0x1001ddde
1001ddcd:	mov    eax,DWORD PTR [esi+0x68]
1001ddd0:	cmp    eax,0x100c7950
1001ddd5:	je     0x1001ddde
1001ddd7:	push   eax
1001ddd8:	call   0x100197d5
1001dddd:	pop    ecx
1001ddde:	mov    DWORD PTR [esi+0x68],ebx
1001dde1:	push   ebx
1001dde2:	mov    edi,DWORD PTR ds:0x1002f0e8
1001dde8:	call   edi
1001ddea:	test   BYTE PTR [esi+0x70],0x2
1001ddee:	jne    0x1001dede
1001ddf4:	test   BYTE PTR ds:0x100c7e70,0x1
1001ddfb:	jne    0x1001dede
1001de01:	push   0xd
1001de03:	call   0x1001e3bb
1001de08:	pop    ecx
1001de09:	and    DWORD PTR [ebp-0x4],0x0
1001de0d:	mov    eax,DWORD PTR [ebx+0x4]
1001de10:	mov    ds:0x100c9604,eax
1001de15:	mov    eax,DWORD PTR [ebx+0x8]
1001de18:	mov    ds:0x100c9608,eax
1001de1d:	mov    eax,DWORD PTR [ebx+0xc]
1001de20:	mov    ds:0x100c960c,eax
1001de25:	xor    eax,eax
1001de27:	mov    DWORD PTR [ebp-0x1c],eax
1001de2a:	cmp    eax,0x5
1001de2d:	jge    0x1001de3f
1001de2f:	mov    cx,WORD PTR [ebx+eax*2+0x10]
1001de34:	mov    WORD PTR [eax*2+0x100c95f8],cx
1001de3c:	inc    eax
1001de3d:	jmp    0x1001de27
1001de3f:	xor    eax,eax
1001de41:	mov    DWORD PTR [ebp-0x1c],eax
1001de44:	cmp    eax,0x101
1001de49:	jge    0x1001de58
1001de4b:	mov    cl,BYTE PTR [eax+ebx*1+0x1c]
1001de4f:	mov    BYTE PTR [eax+0x100c7b70],cl
1001de55:	inc    eax
1001de56:	jmp    0x1001de41
1001de58:	xor    eax,eax
1001de5a:	mov    DWORD PTR [ebp-0x1c],eax
1001de5d:	cmp    eax,0x100
1001de62:	jge    0x1001de74
1001de64:	mov    cl,BYTE PTR [eax+ebx*1+0x11d]
1001de6b:	mov    BYTE PTR [eax+0x100c7c78],cl
1001de71:	inc    eax
1001de72:	jmp    0x1001de5a
1001de74:	push   DWORD PTR ds:0x100c7d78
1001de7a:	call   DWORD PTR ds:0x1002f0f0
1001de80:	test   eax,eax
1001de82:	jne    0x1001de97
1001de84:	mov    eax,ds:0x100c7d78
1001de89:	cmp    eax,0x100c7950
1001de8e:	je     0x1001de97
1001de90:	push   eax
1001de91:	call   0x100197d5
1001de96:	pop    ecx
1001de97:	mov    DWORD PTR ds:0x100c7d78,ebx
1001de9d:	push   ebx
1001de9e:	call   edi
1001dea0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001dea7:	call   0x1001deae
1001deac:	jmp    0x1001dede
1001deae:	push   0xd
1001deb0:	call   0x1001e2e3
1001deb5:	pop    ecx
1001deb6:	ret    
1001deb7:	jmp    0x1001dede
1001deb9:	cmp    eax,0xffffffff
1001debc:	jne    0x1001dede
1001debe:	cmp    ebx,0x100c7950
1001dec4:	je     0x1001decd
1001dec6:	push   ebx
1001dec7:	call   0x100197d5
1001decc:	pop    ecx
1001decd:	call   0x1001cd0e
1001ded2:	mov    DWORD PTR [eax],0x16
1001ded8:	jmp    0x1001dede
1001deda:	and    DWORD PTR [ebp-0x20],0x0
1001dede:	mov    eax,DWORD PTR [ebp-0x20]
1001dee1:	call   0x1001a795
1001dee6:	ret    
1001dee7:	cmp    DWORD PTR ds:0x100cb1b4,0x0
1001deee:	jne    0x1001df02
1001def0:	push   0xfffffffd
1001def2:	call   0x1001dd4d
1001def7:	pop    ecx
1001def8:	mov    DWORD PTR ds:0x100cb1b4,0x1
1001df02:	xor    eax,eax
1001df04:	ret    
1001df05:	push   ebp
1001df06:	mov    ebp,esp
1001df08:	mov    eax,0xffff
1001df0d:	sub    esp,0x14
1001df10:	cmp    WORD PTR [ebp+0x8],ax
1001df14:	je     0x1001dfb0
1001df1a:	push   ebx
1001df1b:	push   DWORD PTR [ebp+0xc]
1001df1e:	lea    ecx,[ebp-0x14]
1001df21:	call   0x1001924a
1001df26:	mov    ecx,DWORD PTR [ebp-0x14]
1001df29:	mov    edx,DWORD PTR [ecx+0x14]
1001df2c:	xor    ebx,ebx
1001df2e:	cmp    edx,ebx
1001df30:	jne    0x1001df46
1001df32:	mov    eax,DWORD PTR [ebp+0x8]
1001df35:	lea    ecx,[eax-0x41]
1001df38:	cmp    cx,0x19
1001df3c:	ja     0x1001df41
1001df3e:	add    eax,0x20
1001df41:	movzx  eax,ax
1001df44:	jmp    0x1001dfa3
1001df46:	mov    eax,0x100
1001df4b:	cmp    WORD PTR [ebp+0x8],ax
1001df4f:	jae    0x1001df7a
1001df51:	lea    eax,[ebp-0x14]
1001df54:	push   eax
1001df55:	push   0x1
1001df57:	push   DWORD PTR [ebp+0x8]
1001df5a:	call   0x1001fa1b
1001df5f:	add    esp,0xc
1001df62:	test   eax,eax
1001df64:	movzx  eax,WORD PTR [ebp+0x8]
1001df68:	je     0x1001dfa3
1001df6a:	mov    ecx,DWORD PTR [ebp-0x14]
1001df6d:	mov    ecx,DWORD PTR [ecx+0xcc]
1001df73:	movzx  ax,BYTE PTR [ecx+eax*1]
1001df78:	jmp    0x1001df41
1001df7a:	push   DWORD PTR [ecx+0x4]
1001df7d:	lea    ecx,[ebp-0x4]
1001df80:	push   0x1
1001df82:	push   ecx
1001df83:	push   0x1
1001df85:	lea    ecx,[ebp+0x8]
1001df88:	push   ecx
1001df89:	push   eax
1001df8a:	push   edx
1001df8b:	lea    eax,[ebp-0x14]
1001df8e:	push   eax
1001df8f:	call   0x10022c6c
1001df94:	add    esp,0x20
1001df97:	test   eax,eax
1001df99:	movzx  eax,WORD PTR [ebp+0x8]
1001df9d:	je     0x1001dfa3
1001df9f:	movzx  eax,WORD PTR [ebp-0x4]
1001dfa3:	cmp    BYTE PTR [ebp-0x8],bl
1001dfa6:	je     0x1001dfaf
1001dfa8:	mov    ecx,DWORD PTR [ebp-0xc]
1001dfab:	and    DWORD PTR [ecx+0x70],0xfffffffd
1001dfaf:	pop    ebx
1001dfb0:	leave  
1001dfb1:	ret    
1001dfb2:	push   ebp
1001dfb3:	mov    ebp,esp
1001dfb5:	sub    esp,0x8
1001dfb8:	mov    DWORD PTR [ebp-0x4],edi
1001dfbb:	mov    DWORD PTR [ebp-0x8],esi
1001dfbe:	mov    esi,DWORD PTR [ebp+0xc]
1001dfc1:	mov    edi,DWORD PTR [ebp+0x8]
1001dfc4:	mov    ecx,DWORD PTR [ebp+0x10]
1001dfc7:	shr    ecx,0x7
1001dfca:	jmp    0x1001dfd2
1001dfcc:	lea    ebx,[ebx+0x0]
1001dfd2:	movdqa xmm0,XMMWORD PTR [esi]
1001dfd6:	movdqa xmm1,XMMWORD PTR [esi+0x10]
1001dfdb:	movdqa xmm2,XMMWORD PTR [esi+0x20]
1001dfe0:	movdqa xmm3,XMMWORD PTR [esi+0x30]
1001dfe5:	movdqa XMMWORD PTR [edi],xmm0
1001dfe9:	movdqa XMMWORD PTR [edi+0x10],xmm1
1001dfee:	movdqa XMMWORD PTR [edi+0x20],xmm2
1001dff3:	movdqa XMMWORD PTR [edi+0x30],xmm3
1001dff8:	movdqa xmm4,XMMWORD PTR [esi+0x40]
1001dffd:	movdqa xmm5,XMMWORD PTR [esi+0x50]
1001e002:	movdqa xmm6,XMMWORD PTR [esi+0x60]
1001e007:	movdqa xmm7,XMMWORD PTR [esi+0x70]
1001e00c:	movdqa XMMWORD PTR [edi+0x40],xmm4
1001e011:	movdqa XMMWORD PTR [edi+0x50],xmm5
1001e016:	movdqa XMMWORD PTR [edi+0x60],xmm6
1001e01b:	movdqa XMMWORD PTR [edi+0x70],xmm7
1001e020:	lea    esi,[esi+0x80]
1001e026:	lea    edi,[edi+0x80]
1001e02c:	dec    ecx
1001e02d:	jne    0x1001dfd2
1001e02f:	mov    esi,DWORD PTR [ebp-0x8]
1001e032:	mov    edi,DWORD PTR [ebp-0x4]
1001e035:	mov    esp,ebp
1001e037:	pop    ebp
1001e038:	ret    
1001e039:	push   ebp
1001e03a:	mov    ebp,esp
1001e03c:	sub    esp,0x1c
1001e03f:	mov    DWORD PTR [ebp-0xc],edi
1001e042:	mov    DWORD PTR [ebp-0x8],esi
1001e045:	mov    DWORD PTR [ebp-0x4],ebx
1001e048:	mov    ebx,DWORD PTR [ebp+0xc]
1001e04b:	mov    eax,ebx
1001e04d:	cdq    
1001e04e:	mov    ecx,eax
1001e050:	mov    eax,DWORD PTR [ebp+0x8]
1001e053:	xor    ecx,edx
1001e055:	sub    ecx,edx
1001e057:	and    ecx,0xf
1001e05a:	xor    ecx,edx
1001e05c:	sub    ecx,edx
1001e05e:	cdq    
1001e05f:	mov    edi,eax
1001e061:	xor    edi,edx
1001e063:	sub    edi,edx
1001e065:	and    edi,0xf
1001e068:	xor    edi,edx
1001e06a:	sub    edi,edx
1001e06c:	mov    edx,ecx
1001e06e:	or     edx,edi
1001e070:	jne    0x1001e0bc
1001e072:	mov    esi,DWORD PTR [ebp+0x10]
1001e075:	mov    ecx,esi
1001e077:	and    ecx,0x7f
1001e07a:	mov    DWORD PTR [ebp-0x18],ecx
1001e07d:	cmp    esi,ecx
1001e07f:	je     0x1001e094
1001e081:	sub    esi,ecx
1001e083:	push   esi
1001e084:	push   ebx
1001e085:	push   eax
1001e086:	call   0x1001dfb2
1001e08b:	add    esp,0xc
1001e08e:	mov    eax,DWORD PTR [ebp+0x8]
1001e091:	mov    ecx,DWORD PTR [ebp-0x18]
1001e094:	test   ecx,ecx
1001e096:	je     0x1001e10f
1001e098:	mov    ebx,DWORD PTR [ebp+0x10]
1001e09b:	mov    edx,DWORD PTR [ebp+0xc]
1001e09e:	add    edx,ebx
1001e0a0:	sub    edx,ecx
1001e0a2:	mov    DWORD PTR [ebp-0x14],edx
1001e0a5:	add    ebx,eax
1001e0a7:	sub    ebx,ecx
1001e0a9:	mov    DWORD PTR [ebp-0x10],ebx
1001e0ac:	mov    esi,DWORD PTR [ebp-0x14]
1001e0af:	mov    edi,DWORD PTR [ebp-0x10]
1001e0b2:	mov    ecx,DWORD PTR [ebp-0x18]
1001e0b5:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001e0b7:	mov    eax,DWORD PTR [ebp+0x8]
1001e0ba:	jmp    0x1001e10f
1001e0bc:	cmp    ecx,edi
1001e0be:	jne    0x1001e0f5
1001e0c0:	neg    ecx
1001e0c2:	add    ecx,0x10
1001e0c5:	mov    DWORD PTR [ebp-0x1c],ecx
1001e0c8:	mov    esi,DWORD PTR [ebp+0xc]
1001e0cb:	mov    edi,DWORD PTR [ebp+0x8]
1001e0ce:	mov    ecx,DWORD PTR [ebp-0x1c]
1001e0d1:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001e0d3:	mov    ecx,DWORD PTR [ebp+0x8]
1001e0d6:	add    ecx,DWORD PTR [ebp-0x1c]
1001e0d9:	mov    edx,DWORD PTR [ebp+0xc]
1001e0dc:	add    edx,DWORD PTR [ebp-0x1c]
1001e0df:	mov    eax,DWORD PTR [ebp+0x10]
1001e0e2:	sub    eax,DWORD PTR [ebp-0x1c]
1001e0e5:	push   eax
1001e0e6:	push   edx
1001e0e7:	push   ecx
1001e0e8:	call   0x1001e039
1001e0ed:	add    esp,0xc
1001e0f0:	mov    eax,DWORD PTR [ebp+0x8]
1001e0f3:	jmp    0x1001e10f
1001e0f5:	mov    esi,DWORD PTR [ebp+0xc]
1001e0f8:	mov    edi,DWORD PTR [ebp+0x8]
1001e0fb:	mov    ecx,DWORD PTR [ebp+0x10]
1001e0fe:	mov    edx,ecx
1001e100:	shr    ecx,0x2
1001e103:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
1001e105:	mov    ecx,edx
1001e107:	and    ecx,0x3
1001e10a:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
1001e10c:	mov    eax,DWORD PTR [ebp+0x8]
1001e10f:	mov    ebx,DWORD PTR [ebp-0x4]
1001e112:	mov    esi,DWORD PTR [ebp-0x8]
1001e115:	mov    edi,DWORD PTR [ebp-0xc]
1001e118:	mov    esp,ebp
1001e11a:	pop    ebp
1001e11b:	ret    
1001e11c:	push   ebp
1001e11d:	mov    ebp,esp
1001e11f:	push   ecx
1001e120:	push   ecx
1001e121:	push   esi
1001e122:	lea    eax,[ebp-0x4]
1001e125:	xor    esi,esi
1001e127:	push   eax
1001e128:	mov    DWORD PTR [ebp-0x4],esi
1001e12b:	mov    DWORD PTR [ebp-0x8],esi
1001e12e:	call   0x1001ca78
1001e133:	test   eax,eax
1001e135:	pop    ecx
1001e136:	je     0x1001e145
1001e138:	push   esi
1001e139:	push   esi
1001e13a:	push   esi
1001e13b:	push   esi
1001e13c:	push   esi
1001e13d:	call   0x10018cc3
1001e142:	add    esp,0x14
1001e145:	lea    eax,[ebp-0x8]
1001e148:	push   eax
1001e149:	call   0x1001caaf
1001e14e:	test   eax,eax
1001e150:	pop    ecx
1001e151:	je     0x1001e160
1001e153:	push   esi
1001e154:	push   esi
1001e155:	push   esi
1001e156:	push   esi
1001e157:	push   esi
1001e158:	call   0x10018cc3
1001e15d:	add    esp,0x14
1001e160:	cmp    DWORD PTR [ebp-0x4],0x2
1001e164:	pop    esi
1001e165:	jne    0x1001e172
1001e167:	cmp    DWORD PTR [ebp-0x8],0x5
1001e16b:	jb     0x1001e172
1001e16d:	xor    eax,eax
1001e16f:	inc    eax
1001e170:	leave  
1001e171:	ret    
1001e172:	push   0x3
1001e174:	pop    eax
1001e175:	leave  
1001e176:	ret    
1001e177:	xor    eax,eax
1001e179:	cmp    DWORD PTR [esp+0x4],eax
1001e17d:	push   0x0
1001e17f:	sete   al
1001e182:	push   0x1000
1001e187:	push   eax
1001e188:	call   DWORD PTR ds:0x1002f1e8
1001e18e:	test   eax,eax
1001e190:	mov    ds:0x100c9630,eax
1001e195:	jne    0x1001e19a
1001e197:	xor    eax,eax
1001e199:	ret    
1001e19a:	call   0x1001e11c
1001e19f:	cmp    eax,0x3
1001e1a2:	mov    ds:0x100cb198,eax
1001e1a7:	jne    0x1001e1cd
1001e1a9:	push   0x3f8
1001e1ae:	call   0x1001e3ec
1001e1b3:	test   eax,eax
1001e1b5:	pop    ecx
1001e1b6:	jne    0x1001e1cd
1001e1b8:	push   DWORD PTR ds:0x100c9630
1001e1be:	call   DWORD PTR ds:0x1002f17c
1001e1c4:	and    DWORD PTR ds:0x100c9630,0x0
1001e1cb:	jmp    0x1001e197
1001e1cd:	xor    eax,eax
1001e1cf:	inc    eax
1001e1d0:	ret    
1001e1d1:	push   ebp
1001e1d2:	xor    ebp,ebp
1001e1d4:	cmp    DWORD PTR ds:0x100cb198,0x3
1001e1db:	jne    0x1001e231
1001e1dd:	push   ebx
1001e1de:	mov    ebx,DWORD PTR ds:0x1002f184
1001e1e4:	push   edi
1001e1e5:	xor    edi,edi
1001e1e7:	cmp    DWORD PTR ds:0x100cb180,ebp
1001e1ed:	jle    0x1001e220
1001e1ef:	push   esi
1001e1f0:	mov    esi,DWORD PTR ds:0x100cb184
1001e1f6:	add    esi,0x10
1001e1f9:	push   0x8000
1001e1fe:	push   ebp
1001e1ff:	push   DWORD PTR [esi-0x4]
1001e202:	call   DWORD PTR ds:0x1002f164
1001e208:	push   DWORD PTR [esi]
1001e20a:	push   ebp
1001e20b:	push   DWORD PTR ds:0x100c9630
1001e211:	call   ebx
1001e213:	add    esi,0x14
1001e216:	inc    edi
1001e217:	cmp    edi,DWORD PTR ds:0x100cb180
1001e21d:	jl     0x1001e1f9
1001e21f:	pop    esi
1001e220:	push   DWORD PTR ds:0x100cb184
1001e226:	push   ebp
1001e227:	push   DWORD PTR ds:0x100c9630
1001e22d:	call   ebx
1001e22f:	pop    edi
1001e230:	pop    ebx
1001e231:	push   DWORD PTR ds:0x100c9630
1001e237:	call   DWORD PTR ds:0x1002f17c
1001e23d:	mov    DWORD PTR ds:0x100c9630,ebp
1001e243:	pop    ebp
1001e244:	ret    
1001e245:	push   esi
1001e246:	push   edi
1001e247:	xor    esi,esi
1001e249:	mov    edi,0x100c9638
1001e24e:	cmp    DWORD PTR [esi*8+0x100c7f74],0x1
1001e256:	jne    0x1001e276
1001e258:	lea    eax,[esi*8+0x100c7f70]
1001e25f:	mov    DWORD PTR [eax],edi
1001e261:	push   0xfa0
1001e266:	push   DWORD PTR [eax]
1001e268:	add    edi,0x18
1001e26b:	call   0x10023b82
1001e270:	test   eax,eax
1001e272:	pop    ecx
1001e273:	pop    ecx
1001e274:	je     0x1001e282
1001e276:	inc    esi
1001e277:	cmp    esi,0x24
1001e27a:	jl     0x1001e24e
1001e27c:	xor    eax,eax
1001e27e:	inc    eax
1001e27f:	pop    edi
1001e280:	pop    esi
1001e281:	ret    
1001e282:	and    DWORD PTR [esi*8+0x100c7f70],0x0
1001e28a:	xor    eax,eax
1001e28c:	jmp    0x1001e27f
1001e28e:	push   ebx
1001e28f:	mov    ebx,DWORD PTR ds:0x1002f1a4
1001e295:	push   esi
1001e296:	mov    esi,0x100c7f70
1001e29b:	push   edi
1001e29c:	mov    edi,DWORD PTR [esi]
1001e29e:	test   edi,edi
1001e2a0:	je     0x1001e2b5
1001e2a2:	cmp    DWORD PTR [esi+0x4],0x1
1001e2a6:	je     0x1001e2b5
1001e2a8:	push   edi
1001e2a9:	call   ebx
1001e2ab:	push   edi
1001e2ac:	call   0x100197d5
1001e2b1:	and    DWORD PTR [esi],0x0
1001e2b4:	pop    ecx
1001e2b5:	add    esi,0x8
1001e2b8:	cmp    esi,0x100c8090
1001e2be:	jl     0x1001e29c
1001e2c0:	mov    esi,0x100c7f70
1001e2c5:	pop    edi
1001e2c6:	mov    eax,DWORD PTR [esi]
1001e2c8:	test   eax,eax
1001e2ca:	je     0x1001e2d5
1001e2cc:	cmp    DWORD PTR [esi+0x4],0x1
1001e2d0:	jne    0x1001e2d5
1001e2d2:	push   eax
1001e2d3:	call   ebx
1001e2d5:	add    esi,0x8
1001e2d8:	cmp    esi,0x100c8090
1001e2de:	jl     0x1001e2c6
1001e2e0:	pop    esi
1001e2e1:	pop    ebx
1001e2e2:	ret    
1001e2e3:	push   ebp
1001e2e4:	mov    ebp,esp
1001e2e6:	mov    eax,DWORD PTR [ebp+0x8]
1001e2e9:	push   DWORD PTR [eax*8+0x100c7f70]
1001e2f0:	call   DWORD PTR ds:0x1002f19c
1001e2f6:	pop    ebp
1001e2f7:	ret    
1001e2f8:	push   0xc
1001e2fa:	push   0x100bb710
1001e2ff:	call   0x1001a750
1001e304:	xor    edi,edi
1001e306:	inc    edi
1001e307:	mov    DWORD PTR [ebp-0x1c],edi
1001e30a:	xor    ebx,ebx
1001e30c:	cmp    DWORD PTR ds:0x100c9630,ebx
1001e312:	jne    0x1001e32c
1001e314:	call   0x1001f08b
1001e319:	push   0x1e
1001e31b:	call   0x1001eeeb
1001e320:	push   0xff
1001e325:	call   0x1001ca19
1001e32a:	pop    ecx
1001e32b:	pop    ecx
1001e32c:	mov    esi,DWORD PTR [ebp+0x8]
1001e32f:	lea    esi,[esi*8+0x100c7f70]
1001e336:	cmp    DWORD PTR [esi],ebx
1001e338:	je     0x1001e33e
1001e33a:	mov    eax,edi
1001e33c:	jmp    0x1001e3ac
1001e33e:	push   0x18
1001e340:	call   0x1001afaf
1001e345:	pop    ecx
1001e346:	mov    edi,eax
1001e348:	cmp    edi,ebx
1001e34a:	jne    0x1001e35b
1001e34c:	call   0x1001cd0e
1001e351:	mov    DWORD PTR [eax],0xc
1001e357:	xor    eax,eax
1001e359:	jmp    0x1001e3ac
1001e35b:	push   0xa
1001e35d:	call   0x1001e3bb
1001e362:	pop    ecx
1001e363:	mov    DWORD PTR [ebp-0x4],ebx
1001e366:	cmp    DWORD PTR [esi],ebx
1001e368:	jne    0x1001e396
1001e36a:	push   0xfa0
1001e36f:	push   edi
1001e370:	call   0x10023b82
1001e375:	pop    ecx
1001e376:	pop    ecx
1001e377:	test   eax,eax
1001e379:	jne    0x1001e392
1001e37b:	push   edi
1001e37c:	call   0x100197d5
1001e381:	pop    ecx
1001e382:	call   0x1001cd0e
1001e387:	mov    DWORD PTR [eax],0xc
1001e38d:	mov    DWORD PTR [ebp-0x1c],ebx
1001e390:	jmp    0x1001e39d
1001e392:	mov    DWORD PTR [esi],edi
1001e394:	jmp    0x1001e39d
1001e396:	push   edi
1001e397:	call   0x100197d5
1001e39c:	pop    ecx
1001e39d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001e3a4:	call   0x1001e3b2
1001e3a9:	mov    eax,DWORD PTR [ebp-0x1c]
1001e3ac:	call   0x1001a795
1001e3b1:	ret    
1001e3b2:	push   0xa
1001e3b4:	call   0x1001e2e3
1001e3b9:	pop    ecx
1001e3ba:	ret    
1001e3bb:	push   ebp
1001e3bc:	mov    ebp,esp
1001e3be:	mov    eax,DWORD PTR [ebp+0x8]
1001e3c1:	push   esi
1001e3c2:	lea    esi,[eax*8+0x100c7f70]
1001e3c9:	cmp    DWORD PTR [esi],0x0
1001e3cc:	jne    0x1001e3e1
1001e3ce:	push   eax
1001e3cf:	call   0x1001e2f8
1001e3d4:	test   eax,eax
1001e3d6:	pop    ecx
1001e3d7:	jne    0x1001e3e1
1001e3d9:	push   0x11
1001e3db:	call   0x1001c9cf
1001e3e0:	pop    ecx
1001e3e1:	push   DWORD PTR [esi]
1001e3e3:	call   DWORD PTR ds:0x1002f198
1001e3e9:	pop    esi
1001e3ea:	pop    ebp
1001e3eb:	ret    
1001e3ec:	push   0x140
1001e3f1:	push   0x0
1001e3f3:	push   DWORD PTR ds:0x100c9630
1001e3f9:	call   DWORD PTR ds:0x1002f180
1001e3ff:	test   eax,eax
1001e401:	mov    ds:0x100cb184,eax
1001e406:	jne    0x1001e409
1001e408:	ret    
1001e409:	mov    ecx,DWORD PTR [esp+0x4]
1001e40d:	and    DWORD PTR ds:0x100c9788,0x0
1001e414:	and    DWORD PTR ds:0x100cb180,0x0
1001e41b:	mov    ds:0x100cb18c,eax
1001e420:	xor    eax,eax
1001e422:	mov    DWORD PTR ds:0x100cb188,ecx
1001e428:	mov    DWORD PTR ds:0x100cb190,0x10
1001e432:	inc    eax
1001e433:	ret    
1001e434:	mov    ecx,DWORD PTR ds:0x100cb180
1001e43a:	mov    eax,ds:0x100cb184
1001e43f:	imul   ecx,ecx,0x14
1001e442:	add    ecx,eax
1001e444:	jmp    0x1001e458
1001e446:	mov    edx,DWORD PTR [esp+0x4]
1001e44a:	sub    edx,DWORD PTR [eax+0xc]
1001e44d:	cmp    edx,0x100000
1001e453:	jb     0x1001e45e
1001e455:	add    eax,0x14
1001e458:	cmp    eax,ecx
1001e45a:	jb     0x1001e446
1001e45c:	xor    eax,eax
1001e45e:	ret    
1001e45f:	push   ebp
1001e460:	mov    ebp,esp
1001e462:	sub    esp,0x10
1001e465:	mov    ecx,DWORD PTR [ebp+0x8]
1001e468:	mov    eax,DWORD PTR [ecx+0x10]
1001e46b:	push   esi
1001e46c:	mov    esi,DWORD PTR [ebp+0xc]
1001e46f:	push   edi
1001e470:	mov    edi,esi
1001e472:	sub    edi,DWORD PTR [ecx+0xc]
1001e475:	add    esi,0xfffffffc
1001e478:	shr    edi,0xf
1001e47b:	mov    ecx,edi
1001e47d:	imul   ecx,ecx,0x204
1001e483:	lea    ecx,[ecx+eax*1+0x144]
1001e48a:	mov    DWORD PTR [ebp-0x10],ecx
1001e48d:	mov    ecx,DWORD PTR [esi]
1001e48f:	dec    ecx
1001e490:	test   cl,0x1
1001e493:	mov    DWORD PTR [ebp-0x4],ecx
1001e496:	jne    0x1001e76f
1001e49c:	push   ebx
1001e49d:	lea    ebx,[ecx+esi*1]
1001e4a0:	mov    edx,DWORD PTR [ebx]
1001e4a2:	mov    DWORD PTR [ebp-0xc],edx
1001e4a5:	mov    edx,DWORD PTR [esi-0x4]
1001e4a8:	mov    DWORD PTR [ebp-0x8],edx
1001e4ab:	mov    edx,DWORD PTR [ebp-0xc]
1001e4ae:	test   dl,0x1
1001e4b1:	mov    DWORD PTR [ebp+0xc],ebx
1001e4b4:	jne    0x1001e52a
1001e4b6:	sar    edx,0x4
1001e4b9:	dec    edx
1001e4ba:	cmp    edx,0x3f
1001e4bd:	jbe    0x1001e4c2
1001e4bf:	push   0x3f
1001e4c1:	pop    edx
1001e4c2:	mov    ecx,DWORD PTR [ebx+0x4]
1001e4c5:	cmp    ecx,DWORD PTR [ebx+0x8]
1001e4c8:	jne    0x1001e50c
1001e4ca:	cmp    edx,0x20
1001e4cd:	mov    ebx,0x80000000
1001e4d2:	jae    0x1001e4ed
1001e4d4:	mov    ecx,edx
1001e4d6:	shr    ebx,cl
1001e4d8:	lea    ecx,[edx+eax*1+0x4]
1001e4dc:	not    ebx
1001e4de:	and    DWORD PTR [eax+edi*4+0x44],ebx
1001e4e2:	dec    BYTE PTR [ecx]
1001e4e4:	jne    0x1001e509
1001e4e6:	mov    ecx,DWORD PTR [ebp+0x8]
1001e4e9:	and    DWORD PTR [ecx],ebx
1001e4eb:	jmp    0x1001e509
1001e4ed:	lea    ecx,[edx-0x20]
1001e4f0:	shr    ebx,cl
1001e4f2:	lea    ecx,[edx+eax*1+0x4]
1001e4f6:	not    ebx
1001e4f8:	and    DWORD PTR [eax+edi*4+0xc4],ebx
1001e4ff:	dec    BYTE PTR [ecx]
1001e501:	jne    0x1001e509
1001e503:	mov    ecx,DWORD PTR [ebp+0x8]
1001e506:	and    DWORD PTR [ecx+0x4],ebx
1001e509:	mov    ebx,DWORD PTR [ebp+0xc]
1001e50c:	mov    edx,DWORD PTR [ebx+0x8]
1001e50f:	mov    ebx,DWORD PTR [ebx+0x4]
1001e512:	mov    ecx,DWORD PTR [ebp-0x4]
1001e515:	add    ecx,DWORD PTR [ebp-0xc]
1001e518:	mov    DWORD PTR [edx+0x4],ebx
1001e51b:	mov    edx,DWORD PTR [ebp+0xc]
1001e51e:	mov    ebx,DWORD PTR [edx+0x4]
1001e521:	mov    edx,DWORD PTR [edx+0x8]
1001e524:	mov    DWORD PTR [ebx+0x8],edx
1001e527:	mov    DWORD PTR [ebp-0x4],ecx
1001e52a:	mov    edx,ecx
1001e52c:	sar    edx,0x4
1001e52f:	dec    edx
1001e530:	cmp    edx,0x3f
1001e533:	jbe    0x1001e538
1001e535:	push   0x3f
1001e537:	pop    edx
1001e538:	mov    ebx,DWORD PTR [ebp-0x8]
1001e53b:	and    ebx,0x1
1001e53e:	mov    DWORD PTR [ebp-0xc],ebx
1001e541:	jne    0x1001e5d6
1001e547:	sub    esi,DWORD PTR [ebp-0x8]
1001e54a:	mov    ebx,DWORD PTR [ebp-0x8]
1001e54d:	sar    ebx,0x4
1001e550:	push   0x3f
1001e552:	mov    DWORD PTR [ebp+0xc],esi
1001e555:	dec    ebx
1001e556:	pop    esi
1001e557:	cmp    ebx,esi
1001e559:	jbe    0x1001e55d
1001e55b:	mov    ebx,esi
1001e55d:	add    ecx,DWORD PTR [ebp-0x8]
1001e560:	mov    edx,ecx
1001e562:	sar    edx,0x4
1001e565:	dec    edx
1001e566:	cmp    edx,esi
1001e568:	mov    DWORD PTR [ebp-0x4],ecx
1001e56b:	jbe    0x1001e56f
1001e56d:	mov    edx,esi
1001e56f:	cmp    ebx,edx
1001e571:	je     0x1001e5d1
1001e573:	mov    ecx,DWORD PTR [ebp+0xc]
1001e576:	mov    esi,DWORD PTR [ecx+0x4]
1001e579:	cmp    esi,DWORD PTR [ecx+0x8]
1001e57c:	jne    0x1001e5b9
1001e57e:	cmp    ebx,0x20
1001e581:	mov    esi,0x80000000
1001e586:	jae    0x1001e59f
1001e588:	mov    ecx,ebx
1001e58a:	shr    esi,cl
1001e58c:	not    esi
1001e58e:	and    DWORD PTR [eax+edi*4+0x44],esi
1001e592:	dec    BYTE PTR [ebx+eax*1+0x4]
1001e596:	jne    0x1001e5b9
1001e598:	mov    ecx,DWORD PTR [ebp+0x8]
1001e59b:	and    DWORD PTR [ecx],esi
1001e59d:	jmp    0x1001e5b9
1001e59f:	lea    ecx,[ebx-0x20]
1001e5a2:	shr    esi,cl
1001e5a4:	not    esi
1001e5a6:	and    DWORD PTR [eax+edi*4+0xc4],esi
1001e5ad:	dec    BYTE PTR [ebx+eax*1+0x4]
1001e5b1:	jne    0x1001e5b9
1001e5b3:	mov    ecx,DWORD PTR [ebp+0x8]
1001e5b6:	and    DWORD PTR [ecx+0x4],esi
1001e5b9:	mov    ecx,DWORD PTR [ebp+0xc]
1001e5bc:	mov    esi,DWORD PTR [ecx+0x8]
1001e5bf:	mov    ecx,DWORD PTR [ecx+0x4]
1001e5c2:	mov    DWORD PTR [esi+0x4],ecx
1001e5c5:	mov    ecx,DWORD PTR [ebp+0xc]
1001e5c8:	mov    esi,DWORD PTR [ecx+0x4]
1001e5cb:	mov    ecx,DWORD PTR [ecx+0x8]
1001e5ce:	mov    DWORD PTR [esi+0x8],ecx
1001e5d1:	mov    esi,DWORD PTR [ebp+0xc]
1001e5d4:	jmp    0x1001e5d9
1001e5d6:	mov    ebx,DWORD PTR [ebp+0x8]
1001e5d9:	cmp    DWORD PTR [ebp-0xc],0x0
1001e5dd:	jne    0x1001e5e7
1001e5df:	cmp    ebx,edx
1001e5e1:	je     0x1001e667
1001e5e7:	mov    ecx,DWORD PTR [ebp-0x10]
1001e5ea:	lea    ecx,[ecx+edx*8]
1001e5ed:	mov    ebx,DWORD PTR [ecx+0x4]
1001e5f0:	mov    DWORD PTR [esi+0x8],ecx
1001e5f3:	mov    DWORD PTR [esi+0x4],ebx
1001e5f6:	mov    DWORD PTR [ecx+0x4],esi
1001e5f9:	mov    ecx,DWORD PTR [esi+0x4]
1001e5fc:	mov    DWORD PTR [ecx+0x8],esi
1001e5ff:	mov    ecx,DWORD PTR [esi+0x4]
1001e602:	cmp    ecx,DWORD PTR [esi+0x8]
1001e605:	jne    0x1001e667
1001e607:	mov    cl,BYTE PTR [edx+eax*1+0x4]
1001e60b:	mov    BYTE PTR [ebp+0xf],cl
1001e60e:	inc    cl
1001e610:	cmp    edx,0x20
1001e613:	mov    BYTE PTR [edx+eax*1+0x4],cl
1001e617:	jae    0x1001e63e
1001e619:	cmp    BYTE PTR [ebp+0xf],0x0
1001e61d:	jne    0x1001e62d
1001e61f:	mov    ecx,edx
1001e621:	mov    ebx,0x80000000
1001e626:	shr    ebx,cl
1001e628:	mov    ecx,DWORD PTR [ebp+0x8]
1001e62b:	or     DWORD PTR [ecx],ebx
1001e62d:	mov    ebx,0x80000000
1001e632:	mov    ecx,edx
1001e634:	shr    ebx,cl
1001e636:	lea    eax,[eax+edi*4+0x44]
1001e63a:	or     DWORD PTR [eax],ebx
1001e63c:	jmp    0x1001e667
1001e63e:	cmp    BYTE PTR [ebp+0xf],0x0
1001e642:	jne    0x1001e654
1001e644:	lea    ecx,[edx-0x20]
1001e647:	mov    ebx,0x80000000
1001e64c:	shr    ebx,cl
1001e64e:	mov    ecx,DWORD PTR [ebp+0x8]
1001e651:	or     DWORD PTR [ecx+0x4],ebx
1001e654:	lea    ecx,[edx-0x20]
1001e657:	mov    edx,0x80000000
1001e65c:	shr    edx,cl
1001e65e:	lea    eax,[eax+edi*4+0xc4]
1001e665:	or     DWORD PTR [eax],edx
1001e667:	mov    eax,DWORD PTR [ebp-0x4]
1001e66a:	mov    DWORD PTR [esi],eax
1001e66c:	mov    DWORD PTR [eax+esi*1-0x4],eax
1001e670:	mov    eax,DWORD PTR [ebp-0x10]
1001e673:	dec    DWORD PTR [eax]
1001e675:	jne    0x1001e76e
1001e67b:	mov    eax,ds:0x100c9788
1001e680:	test   eax,eax
1001e682:	je     0x1001e760
1001e688:	mov    ecx,DWORD PTR ds:0x100cb194
1001e68e:	mov    esi,DWORD PTR ds:0x1002f164
1001e694:	push   0x4000
1001e699:	shl    ecx,0xf
1001e69c:	add    ecx,DWORD PTR [eax+0xc]
1001e69f:	mov    ebx,0x8000
1001e6a4:	push   ebx
1001e6a5:	push   ecx
1001e6a6:	call   esi
1001e6a8:	mov    ecx,DWORD PTR ds:0x100cb194
1001e6ae:	mov    eax,ds:0x100c9788
1001e6b3:	mov    edx,0x80000000
1001e6b8:	shr    edx,cl
1001e6ba:	or     DWORD PTR [eax+0x8],edx
1001e6bd:	mov    eax,ds:0x100c9788
1001e6c2:	mov    eax,DWORD PTR [eax+0x10]
1001e6c5:	mov    ecx,DWORD PTR ds:0x100cb194
1001e6cb:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
1001e6d3:	mov    eax,ds:0x100c9788
1001e6d8:	mov    eax,DWORD PTR [eax+0x10]
1001e6db:	dec    BYTE PTR [eax+0x43]
1001e6de:	mov    eax,ds:0x100c9788
1001e6e3:	mov    ecx,DWORD PTR [eax+0x10]
1001e6e6:	cmp    BYTE PTR [ecx+0x43],0x0
1001e6ea:	jne    0x1001e6f5
1001e6ec:	and    DWORD PTR [eax+0x4],0xfffffffe
1001e6f0:	mov    eax,ds:0x100c9788
1001e6f5:	cmp    DWORD PTR [eax+0x8],0xffffffff
1001e6f9:	jne    0x1001e760
1001e6fb:	push   ebx
1001e6fc:	push   0x0
1001e6fe:	push   DWORD PTR [eax+0xc]
1001e701:	call   esi
1001e703:	mov    eax,ds:0x100c9788
1001e708:	push   DWORD PTR [eax+0x10]
1001e70b:	push   0x0
1001e70d:	push   DWORD PTR ds:0x100c9630
1001e713:	call   DWORD PTR ds:0x1002f184
1001e719:	mov    ecx,DWORD PTR ds:0x100cb180
1001e71f:	mov    eax,ds:0x100c9788
1001e724:	imul   ecx,ecx,0x14
1001e727:	mov    edx,DWORD PTR ds:0x100cb184
1001e72d:	sub    ecx,eax
1001e72f:	lea    ecx,[ecx+edx*1-0x14]
1001e733:	push   ecx
1001e734:	lea    ecx,[eax+0x14]
1001e737:	push   ecx
1001e738:	push   eax
1001e739:	call   0x1001cef0
1001e73e:	mov    eax,DWORD PTR [ebp+0x8]
1001e741:	add    esp,0xc
1001e744:	dec    DWORD PTR ds:0x100cb180
1001e74a:	cmp    eax,DWORD PTR ds:0x100c9788
1001e750:	jbe    0x1001e756
1001e752:	sub    DWORD PTR [ebp+0x8],0x14
1001e756:	mov    eax,ds:0x100cb184
1001e75b:	mov    ds:0x100cb18c,eax
1001e760:	mov    eax,DWORD PTR [ebp+0x8]
1001e763:	mov    ds:0x100c9788,eax
1001e768:	mov    DWORD PTR ds:0x100cb194,edi
1001e76e:	pop    ebx
1001e76f:	pop    edi
1001e770:	pop    esi
1001e771:	leave  
1001e772:	ret    
1001e773:	mov    eax,ds:0x100cb190
1001e778:	push   esi
1001e779:	mov    esi,DWORD PTR ds:0x100cb180
1001e77f:	push   edi
1001e780:	xor    edi,edi
1001e782:	cmp    esi,eax
1001e784:	jne    0x1001e7ba
1001e786:	add    eax,0x10
1001e789:	imul   eax,eax,0x14
1001e78c:	push   eax
1001e78d:	push   DWORD PTR ds:0x100cb184
1001e793:	push   edi
1001e794:	push   DWORD PTR ds:0x100c9630
1001e79a:	call   DWORD PTR ds:0x1002f188
1001e7a0:	cmp    eax,edi
1001e7a2:	jne    0x1001e7a8
1001e7a4:	xor    eax,eax
1001e7a6:	jmp    0x1001e820
1001e7a8:	add    DWORD PTR ds:0x100cb190,0x10
1001e7af:	mov    esi,DWORD PTR ds:0x100cb180
1001e7b5:	mov    ds:0x100cb184,eax
1001e7ba:	imul   esi,esi,0x14
1001e7bd:	add    esi,DWORD PTR ds:0x100cb184
1001e7c3:	push   0x41c4
1001e7c8:	push   0x8
1001e7ca:	push   DWORD PTR ds:0x100c9630
1001e7d0:	call   DWORD PTR ds:0x1002f180
1001e7d6:	cmp    eax,edi
1001e7d8:	mov    DWORD PTR [esi+0x10],eax
1001e7db:	je     0x1001e7a4
1001e7dd:	push   0x4
1001e7df:	push   0x2000
1001e7e4:	push   0x100000
1001e7e9:	push   edi
1001e7ea:	call   DWORD PTR ds:0x1002f124
1001e7f0:	cmp    eax,edi
1001e7f2:	mov    DWORD PTR [esi+0xc],eax
1001e7f5:	jne    0x1001e809
1001e7f7:	push   DWORD PTR [esi+0x10]
1001e7fa:	push   edi
1001e7fb:	push   DWORD PTR ds:0x100c9630
1001e801:	call   DWORD PTR ds:0x1002f184
1001e807:	jmp    0x1001e7a4
1001e809:	or     DWORD PTR [esi+0x8],0xffffffff
1001e80d:	mov    DWORD PTR [esi],edi
1001e80f:	mov    DWORD PTR [esi+0x4],edi
1001e812:	inc    DWORD PTR ds:0x100cb180
1001e818:	mov    eax,DWORD PTR [esi+0x10]
1001e81b:	or     DWORD PTR [eax],0xffffffff
1001e81e:	mov    eax,esi
1001e820:	pop    edi
1001e821:	pop    esi
1001e822:	ret    
1001e823:	push   ebp
1001e824:	mov    ebp,esp
1001e826:	push   ecx
1001e827:	push   ecx
1001e828:	mov    ecx,DWORD PTR [ebp+0x8]
1001e82b:	mov    eax,DWORD PTR [ecx+0x8]
1001e82e:	push   ebx
1001e82f:	push   esi
1001e830:	mov    esi,DWORD PTR [ecx+0x10]
1001e833:	push   edi
1001e834:	xor    ebx,ebx
1001e836:	jmp    0x1001e83b
1001e838:	add    eax,eax
1001e83a:	inc    ebx
1001e83b:	test   eax,eax
1001e83d:	jge    0x1001e838
1001e83f:	mov    eax,ebx
1001e841:	imul   eax,eax,0x204
1001e847:	lea    eax,[eax+esi*1+0x144]
1001e84e:	push   0x3f
1001e850:	mov    DWORD PTR [ebp-0x8],eax
1001e853:	pop    edx
1001e854:	mov    DWORD PTR [eax+0x8],eax
1001e857:	mov    DWORD PTR [eax+0x4],eax
1001e85a:	add    eax,0x8
1001e85d:	dec    edx
1001e85e:	jne    0x1001e854
1001e860:	push   0x4
1001e862:	mov    edi,ebx
1001e864:	push   0x1000
1001e869:	shl    edi,0xf
1001e86c:	add    edi,DWORD PTR [ecx+0xc]
1001e86f:	push   0x8000
1001e874:	push   edi
1001e875:	call   DWORD PTR ds:0x1002f124
1001e87b:	test   eax,eax
1001e87d:	jne    0x1001e887
1001e87f:	or     eax,0xffffffff
1001e882:	jmp    0x1001e924
1001e887:	lea    edx,[edi+0x7000]
1001e88d:	cmp    edi,edx
1001e88f:	mov    DWORD PTR [ebp-0x4],edx
1001e892:	ja     0x1001e8d7
1001e894:	mov    ecx,edx
1001e896:	sub    ecx,edi
1001e898:	shr    ecx,0xc
1001e89b:	lea    eax,[edi+0x10]
1001e89e:	inc    ecx
1001e89f:	or     DWORD PTR [eax-0x8],0xffffffff
1001e8a3:	or     DWORD PTR [eax+0xfec],0xffffffff
1001e8aa:	lea    edx,[eax+0xffc]
1001e8b0:	mov    DWORD PTR [eax],edx
1001e8b2:	lea    edx,[eax-0x1004]
1001e8b8:	mov    DWORD PTR [eax-0x4],0xff0
1001e8bf:	mov    DWORD PTR [eax+0x4],edx
1001e8c2:	mov    DWORD PTR [eax+0xfe8],0xff0
1001e8cc:	add    eax,0x1000
1001e8d1:	dec    ecx
1001e8d2:	jne    0x1001e89f
1001e8d4:	mov    edx,DWORD PTR [ebp-0x4]
1001e8d7:	mov    eax,DWORD PTR [ebp-0x8]
1001e8da:	add    eax,0x1f8
1001e8df:	lea    ecx,[edi+0xc]
1001e8e2:	mov    DWORD PTR [eax+0x4],ecx
1001e8e5:	mov    DWORD PTR [ecx+0x8],eax
1001e8e8:	lea    ecx,[edx+0xc]
1001e8eb:	mov    DWORD PTR [eax+0x8],ecx
1001e8ee:	mov    DWORD PTR [ecx+0x4],eax
1001e8f1:	and    DWORD PTR [esi+ebx*4+0x44],0x0
1001e8f6:	xor    edi,edi
1001e8f8:	inc    edi
1001e8f9:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
1001e900:	mov    al,BYTE PTR [esi+0x43]
1001e903:	mov    cl,al
1001e905:	inc    cl
1001e907:	test   al,al
1001e909:	mov    eax,DWORD PTR [ebp+0x8]
1001e90c:	mov    BYTE PTR [esi+0x43],cl
1001e90f:	jne    0x1001e914
1001e911:	or     DWORD PTR [eax+0x4],edi
1001e914:	mov    edx,0x80000000
1001e919:	mov    ecx,ebx
1001e91b:	shr    edx,cl
1001e91d:	not    edx
1001e91f:	and    DWORD PTR [eax+0x8],edx
1001e922:	mov    eax,ebx
1001e924:	pop    edi
1001e925:	pop    esi
1001e926:	pop    ebx
1001e927:	leave  
1001e928:	ret    
1001e929:	push   ebp
1001e92a:	mov    ebp,esp
1001e92c:	sub    esp,0xc
1001e92f:	mov    ecx,DWORD PTR [ebp+0x8]
1001e932:	mov    eax,DWORD PTR [ecx+0x10]
1001e935:	push   ebx
1001e936:	push   esi
1001e937:	mov    esi,DWORD PTR [ebp+0x10]
1001e93a:	push   edi
1001e93b:	mov    edi,DWORD PTR [ebp+0xc]
1001e93e:	mov    edx,edi
1001e940:	sub    edx,DWORD PTR [ecx+0xc]
1001e943:	add    esi,0x17
1001e946:	shr    edx,0xf
1001e949:	mov    ecx,edx
1001e94b:	imul   ecx,ecx,0x204
1001e951:	lea    ecx,[ecx+eax*1+0x144]
1001e958:	mov    DWORD PTR [ebp-0xc],ecx
1001e95b:	mov    ecx,DWORD PTR [edi-0x4]
1001e95e:	and    esi,0xfffffff0
1001e961:	dec    ecx
1001e962:	cmp    esi,ecx
1001e964:	lea    edi,[ecx+edi*1-0x4]
1001e968:	mov    ebx,DWORD PTR [edi]
1001e96a:	mov    DWORD PTR [ebp+0x10],ecx
1001e96d:	mov    DWORD PTR [ebp-0x4],ebx
1001e970:	jle    0x1001eacb
1001e976:	test   bl,0x1
1001e979:	jne    0x1001eac4
1001e97f:	add    ebx,ecx
1001e981:	cmp    esi,ebx
1001e983:	jg     0x1001eac4
1001e989:	mov    ecx,DWORD PTR [ebp-0x4]
1001e98c:	sar    ecx,0x4
1001e98f:	dec    ecx
1001e990:	cmp    ecx,0x3f
1001e993:	mov    DWORD PTR [ebp-0x8],ecx
1001e996:	jbe    0x1001e99e
1001e998:	push   0x3f
1001e99a:	pop    ecx
1001e99b:	mov    DWORD PTR [ebp-0x8],ecx
1001e99e:	mov    ebx,DWORD PTR [edi+0x4]
1001e9a1:	cmp    ebx,DWORD PTR [edi+0x8]
1001e9a4:	jne    0x1001e9e9
1001e9a6:	cmp    ecx,0x20
1001e9a9:	mov    ebx,0x80000000
1001e9ae:	jae    0x1001e9ca
1001e9b0:	shr    ebx,cl
1001e9b2:	mov    ecx,DWORD PTR [ebp-0x8]
1001e9b5:	lea    ecx,[ecx+eax*1+0x4]
1001e9b9:	not    ebx
1001e9bb:	and    DWORD PTR [eax+edx*4+0x44],ebx
1001e9bf:	dec    BYTE PTR [ecx]
1001e9c1:	jne    0x1001e9e9
1001e9c3:	mov    ecx,DWORD PTR [ebp+0x8]
1001e9c6:	and    DWORD PTR [ecx],ebx
1001e9c8:	jmp    0x1001e9e9
1001e9ca:	add    ecx,0xffffffe0
1001e9cd:	shr    ebx,cl
1001e9cf:	mov    ecx,DWORD PTR [ebp-0x8]
1001e9d2:	lea    ecx,[ecx+eax*1+0x4]
1001e9d6:	not    ebx
1001e9d8:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1001e9df:	dec    BYTE PTR [ecx]
1001e9e1:	jne    0x1001e9e9
1001e9e3:	mov    ecx,DWORD PTR [ebp+0x8]
1001e9e6:	and    DWORD PTR [ecx+0x4],ebx
1001e9e9:	mov    ecx,DWORD PTR [edi+0x8]
1001e9ec:	mov    ebx,DWORD PTR [edi+0x4]
1001e9ef:	mov    DWORD PTR [ecx+0x4],ebx
1001e9f2:	mov    ecx,DWORD PTR [edi+0x4]
1001e9f5:	mov    edi,DWORD PTR [edi+0x8]
1001e9f8:	mov    DWORD PTR [ecx+0x8],edi
1001e9fb:	mov    ecx,DWORD PTR [ebp+0x10]
1001e9fe:	sub    ecx,esi
1001ea00:	add    DWORD PTR [ebp-0x4],ecx
1001ea03:	cmp    DWORD PTR [ebp-0x4],0x0
1001ea07:	jle    0x1001eab2
1001ea0d:	mov    edi,DWORD PTR [ebp-0x4]
1001ea10:	mov    ecx,DWORD PTR [ebp+0xc]
1001ea13:	sar    edi,0x4
1001ea16:	dec    edi
1001ea17:	cmp    edi,0x3f
1001ea1a:	lea    ecx,[ecx+esi*1-0x4]
1001ea1e:	jbe    0x1001ea23
1001ea20:	push   0x3f
1001ea22:	pop    edi
1001ea23:	mov    ebx,DWORD PTR [ebp-0xc]
1001ea26:	lea    ebx,[ebx+edi*8]
1001ea29:	mov    DWORD PTR [ebp+0x10],ebx
1001ea2c:	mov    ebx,DWORD PTR [ebx+0x4]
1001ea2f:	mov    DWORD PTR [ecx+0x4],ebx
1001ea32:	mov    ebx,DWORD PTR [ebp+0x10]
1001ea35:	mov    DWORD PTR [ecx+0x8],ebx
1001ea38:	mov    DWORD PTR [ebx+0x4],ecx
1001ea3b:	mov    ebx,DWORD PTR [ecx+0x4]
1001ea3e:	mov    DWORD PTR [ebx+0x8],ecx
1001ea41:	mov    ebx,DWORD PTR [ecx+0x4]
1001ea44:	cmp    ebx,DWORD PTR [ecx+0x8]
1001ea47:	jne    0x1001eaa0
1001ea49:	mov    cl,BYTE PTR [edi+eax*1+0x4]
1001ea4d:	mov    BYTE PTR [ebp+0x13],cl
1001ea50:	inc    cl
1001ea52:	cmp    edi,0x20
1001ea55:	mov    BYTE PTR [edi+eax*1+0x4],cl
1001ea59:	jae    0x1001ea77
1001ea5b:	cmp    BYTE PTR [ebp+0x13],0x0
1001ea5f:	jne    0x1001ea6f
1001ea61:	mov    ecx,edi
1001ea63:	mov    ebx,0x80000000
1001ea68:	shr    ebx,cl
1001ea6a:	mov    ecx,DWORD PTR [ebp+0x8]
1001ea6d:	or     DWORD PTR [ecx],ebx
1001ea6f:	lea    eax,[eax+edx*4+0x44]
1001ea73:	mov    ecx,edi
1001ea75:	jmp    0x1001ea97
1001ea77:	cmp    BYTE PTR [ebp+0x13],0x0
1001ea7b:	jne    0x1001ea8d
1001ea7d:	lea    ecx,[edi-0x20]
1001ea80:	mov    ebx,0x80000000
1001ea85:	shr    ebx,cl
1001ea87:	mov    ecx,DWORD PTR [ebp+0x8]
1001ea8a:	or     DWORD PTR [ecx+0x4],ebx
1001ea8d:	lea    eax,[eax+edx*4+0xc4]
1001ea94:	lea    ecx,[edi-0x20]
1001ea97:	mov    edx,0x80000000
1001ea9c:	shr    edx,cl
1001ea9e:	or     DWORD PTR [eax],edx
1001eaa0:	mov    edx,DWORD PTR [ebp+0xc]
1001eaa3:	mov    ecx,DWORD PTR [ebp-0x4]
1001eaa6:	lea    eax,[edx+esi*1-0x4]
1001eaaa:	mov    DWORD PTR [eax],ecx
1001eaac:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
1001eab0:	jmp    0x1001eab5
1001eab2:	mov    edx,DWORD PTR [ebp+0xc]
1001eab5:	lea    eax,[esi+0x1]
1001eab8:	mov    DWORD PTR [edx-0x4],eax
1001eabb:	mov    DWORD PTR [edx+esi*1-0x8],eax
1001eabf:	jmp    0x1001ec00
1001eac4:	xor    eax,eax
1001eac6:	jmp    0x1001ec03
1001eacb:	jge    0x1001ec00
1001ead1:	mov    ebx,DWORD PTR [ebp+0xc]
1001ead4:	sub    DWORD PTR [ebp+0x10],esi
1001ead7:	lea    ecx,[esi+0x1]
1001eada:	mov    DWORD PTR [ebx-0x4],ecx
1001eadd:	lea    ebx,[ebx+esi*1-0x4]
1001eae1:	mov    esi,DWORD PTR [ebp+0x10]
1001eae4:	sar    esi,0x4
1001eae7:	dec    esi
1001eae8:	cmp    esi,0x3f
1001eaeb:	mov    DWORD PTR [ebp+0xc],ebx
1001eaee:	mov    DWORD PTR [ebx-0x4],ecx
1001eaf1:	jbe    0x1001eaf6
1001eaf3:	push   0x3f
1001eaf5:	pop    esi
1001eaf6:	test   BYTE PTR [ebp-0x4],0x1
1001eafa:	jne    0x1001eb80
1001eb00:	mov    esi,DWORD PTR [ebp-0x4]
1001eb03:	sar    esi,0x4
1001eb06:	dec    esi
1001eb07:	cmp    esi,0x3f
1001eb0a:	jbe    0x1001eb0f
1001eb0c:	push   0x3f
1001eb0e:	pop    esi
1001eb0f:	mov    ecx,DWORD PTR [edi+0x4]
1001eb12:	cmp    ecx,DWORD PTR [edi+0x8]
1001eb15:	jne    0x1001eb59
1001eb17:	cmp    esi,0x20
1001eb1a:	mov    ebx,0x80000000
1001eb1f:	jae    0x1001eb3a
1001eb21:	mov    ecx,esi
1001eb23:	shr    ebx,cl
1001eb25:	lea    esi,[esi+eax*1+0x4]
1001eb29:	not    ebx
1001eb2b:	and    DWORD PTR [eax+edx*4+0x44],ebx
1001eb2f:	dec    BYTE PTR [esi]
1001eb31:	jne    0x1001eb56
1001eb33:	mov    ecx,DWORD PTR [ebp+0x8]
1001eb36:	and    DWORD PTR [ecx],ebx
1001eb38:	jmp    0x1001eb56
1001eb3a:	lea    ecx,[esi-0x20]
1001eb3d:	shr    ebx,cl
1001eb3f:	lea    ecx,[esi+eax*1+0x4]
1001eb43:	not    ebx
1001eb45:	and    DWORD PTR [eax+edx*4+0xc4],ebx
1001eb4c:	dec    BYTE PTR [ecx]
1001eb4e:	jne    0x1001eb56
1001eb50:	mov    ecx,DWORD PTR [ebp+0x8]
1001eb53:	and    DWORD PTR [ecx+0x4],ebx
1001eb56:	mov    ebx,DWORD PTR [ebp+0xc]
1001eb59:	mov    ecx,DWORD PTR [edi+0x8]
1001eb5c:	mov    esi,DWORD PTR [edi+0x4]
1001eb5f:	mov    DWORD PTR [ecx+0x4],esi
1001eb62:	mov    esi,DWORD PTR [edi+0x8]
1001eb65:	mov    ecx,DWORD PTR [edi+0x4]
1001eb68:	mov    DWORD PTR [ecx+0x8],esi
1001eb6b:	mov    esi,DWORD PTR [ebp+0x10]
1001eb6e:	add    esi,DWORD PTR [ebp-0x4]
1001eb71:	mov    DWORD PTR [ebp+0x10],esi
1001eb74:	sar    esi,0x4
1001eb77:	dec    esi
1001eb78:	cmp    esi,0x3f
1001eb7b:	jbe    0x1001eb80
1001eb7d:	push   0x3f
1001eb7f:	pop    esi
1001eb80:	mov    ecx,DWORD PTR [ebp-0xc]
1001eb83:	lea    ecx,[ecx+esi*8]
1001eb86:	mov    edi,DWORD PTR [ecx+0x4]
1001eb89:	mov    DWORD PTR [ebx+0x8],ecx
1001eb8c:	mov    DWORD PTR [ebx+0x4],edi
1001eb8f:	mov    DWORD PTR [ecx+0x4],ebx
1001eb92:	mov    ecx,DWORD PTR [ebx+0x4]
1001eb95:	mov    DWORD PTR [ecx+0x8],ebx
1001eb98:	mov    ecx,DWORD PTR [ebx+0x4]
1001eb9b:	cmp    ecx,DWORD PTR [ebx+0x8]
1001eb9e:	jne    0x1001ebf7
1001eba0:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1001eba4:	mov    BYTE PTR [ebp+0xf],cl
1001eba7:	inc    cl
1001eba9:	cmp    esi,0x20
1001ebac:	mov    BYTE PTR [esi+eax*1+0x4],cl
1001ebb0:	jae    0x1001ebce
1001ebb2:	cmp    BYTE PTR [ebp+0xf],0x0
1001ebb6:	jne    0x1001ebc6
1001ebb8:	mov    ecx,esi
1001ebba:	mov    edi,0x80000000
1001ebbf:	shr    edi,cl
1001ebc1:	mov    ecx,DWORD PTR [ebp+0x8]
1001ebc4:	or     DWORD PTR [ecx],edi
1001ebc6:	lea    eax,[eax+edx*4+0x44]
1001ebca:	mov    ecx,esi
1001ebcc:	jmp    0x1001ebee
1001ebce:	cmp    BYTE PTR [ebp+0xf],0x0
1001ebd2:	jne    0x1001ebe4
1001ebd4:	lea    ecx,[esi-0x20]
1001ebd7:	mov    edi,0x80000000
1001ebdc:	shr    edi,cl
1001ebde:	mov    ecx,DWORD PTR [ebp+0x8]
1001ebe1:	or     DWORD PTR [ecx+0x4],edi
1001ebe4:	lea    eax,[eax+edx*4+0xc4]
1001ebeb:	lea    ecx,[esi-0x20]
1001ebee:	mov    edx,0x80000000
1001ebf3:	shr    edx,cl
1001ebf5:	or     DWORD PTR [eax],edx
1001ebf7:	mov    eax,DWORD PTR [ebp+0x10]
1001ebfa:	mov    DWORD PTR [ebx],eax
1001ebfc:	mov    DWORD PTR [eax+ebx*1-0x4],eax
1001ec00:	xor    eax,eax
1001ec02:	inc    eax
1001ec03:	pop    edi
1001ec04:	pop    esi
1001ec05:	pop    ebx
1001ec06:	leave  
1001ec07:	ret    
1001ec08:	push   ebp
1001ec09:	mov    ebp,esp
1001ec0b:	sub    esp,0x14
1001ec0e:	mov    eax,ds:0x100cb180
1001ec13:	mov    ecx,DWORD PTR [ebp+0x8]
1001ec16:	imul   eax,eax,0x14
1001ec19:	add    eax,DWORD PTR ds:0x100cb184
1001ec1f:	add    ecx,0x17
1001ec22:	and    ecx,0xfffffff0
1001ec25:	mov    DWORD PTR [ebp-0x10],ecx
1001ec28:	sar    ecx,0x4
1001ec2b:	push   ebx
1001ec2c:	dec    ecx
1001ec2d:	cmp    ecx,0x20
1001ec30:	push   esi
1001ec31:	push   edi
1001ec32:	jge    0x1001ec3f
1001ec34:	or     esi,0xffffffff
1001ec37:	shr    esi,cl
1001ec39:	or     DWORD PTR [ebp-0x8],0xffffffff
1001ec3d:	jmp    0x1001ec4c
1001ec3f:	add    ecx,0xffffffe0
1001ec42:	or     edx,0xffffffff
1001ec45:	xor    esi,esi
1001ec47:	shr    edx,cl
1001ec49:	mov    DWORD PTR [ebp-0x8],edx
1001ec4c:	mov    ecx,DWORD PTR ds:0x100cb18c
1001ec52:	mov    ebx,ecx
1001ec54:	jmp    0x1001ec67
1001ec56:	mov    edx,DWORD PTR [ebx+0x4]
1001ec59:	mov    edi,DWORD PTR [ebx]
1001ec5b:	and    edx,DWORD PTR [ebp-0x8]
1001ec5e:	and    edi,esi
1001ec60:	or     edx,edi
1001ec62:	jne    0x1001ec6e
1001ec64:	add    ebx,0x14
1001ec67:	cmp    ebx,eax
1001ec69:	mov    DWORD PTR [ebp+0x8],ebx
1001ec6c:	jb     0x1001ec56
1001ec6e:	cmp    ebx,eax
1001ec70:	jne    0x1001ecf1
1001ec72:	mov    ebx,DWORD PTR ds:0x100cb184
1001ec78:	jmp    0x1001ec8b
1001ec7a:	mov    edx,DWORD PTR [ebx+0x4]
1001ec7d:	mov    edi,DWORD PTR [ebx]
1001ec7f:	and    edx,DWORD PTR [ebp-0x8]
1001ec82:	and    edi,esi
1001ec84:	or     edx,edi
1001ec86:	jne    0x1001ec92
1001ec88:	add    ebx,0x14
1001ec8b:	cmp    ebx,ecx
1001ec8d:	mov    DWORD PTR [ebp+0x8],ebx
1001ec90:	jb     0x1001ec7a
1001ec92:	cmp    ebx,ecx
1001ec94:	jne    0x1001ecf1
1001ec96:	jmp    0x1001eca4
1001ec98:	cmp    DWORD PTR [ebx+0x8],0x0
1001ec9c:	jne    0x1001eca8
1001ec9e:	add    ebx,0x14
1001eca1:	mov    DWORD PTR [ebp+0x8],ebx
1001eca4:	cmp    ebx,eax
1001eca6:	jb     0x1001ec98
1001eca8:	cmp    ebx,eax
1001ecaa:	jne    0x1001ecdd
1001ecac:	mov    ebx,DWORD PTR ds:0x100cb184
1001ecb2:	jmp    0x1001ecbd
1001ecb4:	cmp    DWORD PTR [ebx+0x8],0x0
1001ecb8:	jne    0x1001ecc4
1001ecba:	add    ebx,0x14
1001ecbd:	cmp    ebx,ecx
1001ecbf:	mov    DWORD PTR [ebp+0x8],ebx
1001ecc2:	jb     0x1001ecb4
1001ecc4:	cmp    ebx,ecx
1001ecc6:	jne    0x1001ecdd
1001ecc8:	call   0x1001e773
1001eccd:	mov    ebx,eax
1001eccf:	test   ebx,ebx
1001ecd1:	mov    DWORD PTR [ebp+0x8],ebx
1001ecd4:	jne    0x1001ecdd
1001ecd6:	xor    eax,eax
1001ecd8:	jmp    0x1001eee6
1001ecdd:	push   ebx
1001ecde:	call   0x1001e823
1001ece3:	pop    ecx
1001ece4:	mov    ecx,DWORD PTR [ebx+0x10]
1001ece7:	mov    DWORD PTR [ecx],eax
1001ece9:	mov    eax,DWORD PTR [ebx+0x10]
1001ecec:	cmp    DWORD PTR [eax],0xffffffff
1001ecef:	je     0x1001ecd6
1001ecf1:	mov    DWORD PTR ds:0x100cb18c,ebx
1001ecf7:	mov    eax,DWORD PTR [ebx+0x10]
1001ecfa:	mov    edx,DWORD PTR [eax]
1001ecfc:	cmp    edx,0xffffffff
1001ecff:	mov    DWORD PTR [ebp-0x4],edx
1001ed02:	je     0x1001ed18
1001ed04:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1001ed0b:	mov    edi,DWORD PTR [eax+edx*4+0x44]
1001ed0f:	and    ecx,DWORD PTR [ebp-0x8]
1001ed12:	and    edi,esi
1001ed14:	or     ecx,edi
1001ed16:	jne    0x1001ed41
1001ed18:	and    DWORD PTR [ebp-0x4],0x0
1001ed1c:	mov    edx,DWORD PTR [eax+0xc4]
1001ed22:	lea    ecx,[eax+0x44]
1001ed25:	mov    edi,DWORD PTR [ecx]
1001ed27:	and    edx,DWORD PTR [ebp-0x8]
1001ed2a:	and    edi,esi
1001ed2c:	or     edx,edi
1001ed2e:	jne    0x1001ed3e
1001ed30:	inc    DWORD PTR [ebp-0x4]
1001ed33:	mov    edx,DWORD PTR [ecx+0x84]
1001ed39:	add    ecx,0x4
1001ed3c:	jmp    0x1001ed25
1001ed3e:	mov    edx,DWORD PTR [ebp-0x4]
1001ed41:	mov    ecx,edx
1001ed43:	imul   ecx,ecx,0x204
1001ed49:	lea    ecx,[ecx+eax*1+0x144]
1001ed50:	mov    DWORD PTR [ebp-0xc],ecx
1001ed53:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
1001ed57:	xor    edi,edi
1001ed59:	and    ecx,esi
1001ed5b:	jne    0x1001ed6f
1001ed5d:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
1001ed64:	and    ecx,DWORD PTR [ebp-0x8]
1001ed67:	push   0x20
1001ed69:	pop    edi
1001ed6a:	jmp    0x1001ed6f
1001ed6c:	add    ecx,ecx
1001ed6e:	inc    edi
1001ed6f:	test   ecx,ecx
1001ed71:	jge    0x1001ed6c
1001ed73:	mov    ecx,DWORD PTR [ebp-0xc]
1001ed76:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
1001ed7a:	mov    ecx,DWORD PTR [edx]
1001ed7c:	sub    ecx,DWORD PTR [ebp-0x10]
1001ed7f:	mov    esi,ecx
1001ed81:	sar    esi,0x4
1001ed84:	dec    esi
1001ed85:	cmp    esi,0x3f
1001ed88:	mov    DWORD PTR [ebp-0x8],ecx
1001ed8b:	jle    0x1001ed90
1001ed8d:	push   0x3f
1001ed8f:	pop    esi
1001ed90:	cmp    esi,edi
1001ed92:	je     0x1001ee99
1001ed98:	mov    ecx,DWORD PTR [edx+0x4]
1001ed9b:	cmp    ecx,DWORD PTR [edx+0x8]
1001ed9e:	jne    0x1001edfc
1001eda0:	cmp    edi,0x20
1001eda3:	mov    ebx,0x80000000
1001eda8:	jge    0x1001edd0
1001edaa:	mov    ecx,edi
1001edac:	shr    ebx,cl
1001edae:	mov    ecx,DWORD PTR [ebp-0x4]
1001edb1:	lea    edi,[eax+edi*1+0x4]
1001edb5:	not    ebx
1001edb7:	mov    DWORD PTR [ebp-0x14],ebx
1001edba:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
1001edbe:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
1001edc2:	dec    BYTE PTR [edi]
1001edc4:	jne    0x1001edf9
1001edc6:	mov    ecx,DWORD PTR [ebp-0x14]
1001edc9:	mov    ebx,DWORD PTR [ebp+0x8]
1001edcc:	and    DWORD PTR [ebx],ecx
1001edce:	jmp    0x1001edfc
1001edd0:	lea    ecx,[edi-0x20]
1001edd3:	shr    ebx,cl
1001edd5:	mov    ecx,DWORD PTR [ebp-0x4]
1001edd8:	lea    ecx,[eax+ecx*4+0xc4]
1001eddf:	lea    edi,[eax+edi*1+0x4]
1001ede3:	not    ebx
1001ede5:	and    DWORD PTR [ecx],ebx
1001ede7:	dec    BYTE PTR [edi]
1001ede9:	mov    DWORD PTR [ebp-0x14],ebx
1001edec:	jne    0x1001edf9
1001edee:	mov    ebx,DWORD PTR [ebp+0x8]
1001edf1:	mov    ecx,DWORD PTR [ebp-0x14]
1001edf4:	and    DWORD PTR [ebx+0x4],ecx
1001edf7:	jmp    0x1001edfc
1001edf9:	mov    ebx,DWORD PTR [ebp+0x8]
1001edfc:	cmp    DWORD PTR [ebp-0x8],0x0
1001ee00:	mov    ecx,DWORD PTR [edx+0x8]
1001ee03:	mov    edi,DWORD PTR [edx+0x4]
1001ee06:	mov    DWORD PTR [ecx+0x4],edi
1001ee09:	mov    ecx,DWORD PTR [edx+0x4]
1001ee0c:	mov    edi,DWORD PTR [edx+0x8]
1001ee0f:	mov    DWORD PTR [ecx+0x8],edi
1001ee12:	je     0x1001eea5
1001ee18:	mov    ecx,DWORD PTR [ebp-0xc]
1001ee1b:	lea    ecx,[ecx+esi*8]
1001ee1e:	mov    edi,DWORD PTR [ecx+0x4]
1001ee21:	mov    DWORD PTR [edx+0x8],ecx
1001ee24:	mov    DWORD PTR [edx+0x4],edi
1001ee27:	mov    DWORD PTR [ecx+0x4],edx
1001ee2a:	mov    ecx,DWORD PTR [edx+0x4]
1001ee2d:	mov    DWORD PTR [ecx+0x8],edx
1001ee30:	mov    ecx,DWORD PTR [edx+0x4]
1001ee33:	cmp    ecx,DWORD PTR [edx+0x8]
1001ee36:	jne    0x1001ee96
1001ee38:	mov    cl,BYTE PTR [esi+eax*1+0x4]
1001ee3c:	mov    BYTE PTR [ebp+0xb],cl
1001ee3f:	inc    cl
1001ee41:	cmp    esi,0x20
1001ee44:	mov    BYTE PTR [esi+eax*1+0x4],cl
1001ee48:	jge    0x1001ee6d
1001ee4a:	cmp    BYTE PTR [ebp+0xb],0x0
1001ee4e:	jne    0x1001ee5b
1001ee50:	mov    edi,0x80000000
1001ee55:	mov    ecx,esi
1001ee57:	shr    edi,cl
1001ee59:	or     DWORD PTR [ebx],edi
1001ee5b:	mov    ecx,esi
1001ee5d:	mov    edi,0x80000000
1001ee62:	shr    edi,cl
1001ee64:	mov    ecx,DWORD PTR [ebp-0x4]
1001ee67:	or     DWORD PTR [eax+ecx*4+0x44],edi
1001ee6b:	jmp    0x1001ee96
1001ee6d:	cmp    BYTE PTR [ebp+0xb],0x0
1001ee71:	jne    0x1001ee80
1001ee73:	lea    ecx,[esi-0x20]
1001ee76:	mov    edi,0x80000000
1001ee7b:	shr    edi,cl
1001ee7d:	or     DWORD PTR [ebx+0x4],edi
1001ee80:	mov    ecx,DWORD PTR [ebp-0x4]
1001ee83:	lea    edi,[eax+ecx*4+0xc4]
1001ee8a:	lea    ecx,[esi-0x20]
1001ee8d:	mov    esi,0x80000000
1001ee92:	shr    esi,cl
1001ee94:	or     DWORD PTR [edi],esi
1001ee96:	mov    ecx,DWORD PTR [ebp-0x8]
1001ee99:	test   ecx,ecx
1001ee9b:	je     0x1001eea8
1001ee9d:	mov    DWORD PTR [edx],ecx
1001ee9f:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
1001eea3:	jmp    0x1001eea8
1001eea5:	mov    ecx,DWORD PTR [ebp-0x8]
1001eea8:	mov    esi,DWORD PTR [ebp-0x10]
1001eeab:	add    edx,ecx
1001eead:	lea    ecx,[esi+0x1]
1001eeb0:	mov    DWORD PTR [edx],ecx
1001eeb2:	mov    DWORD PTR [edx+esi*1-0x4],ecx
1001eeb6:	mov    esi,DWORD PTR [ebp-0xc]
1001eeb9:	mov    ecx,DWORD PTR [esi]
1001eebb:	test   ecx,ecx
1001eebd:	lea    edi,[ecx+0x1]
1001eec0:	mov    DWORD PTR [esi],edi
1001eec2:	jne    0x1001eede
1001eec4:	cmp    ebx,DWORD PTR ds:0x100c9788
1001eeca:	jne    0x1001eede
1001eecc:	mov    ecx,DWORD PTR [ebp-0x4]
1001eecf:	cmp    ecx,DWORD PTR ds:0x100cb194
1001eed5:	jne    0x1001eede
1001eed7:	and    DWORD PTR ds:0x100c9788,0x0
1001eede:	mov    ecx,DWORD PTR [ebp-0x4]
1001eee1:	mov    DWORD PTR [eax],ecx
1001eee3:	lea    eax,[edx+0x4]
1001eee6:	pop    edi
1001eee7:	pop    esi
1001eee8:	pop    ebx
1001eee9:	leave  
1001eeea:	ret    
1001eeeb:	push   ecx
1001eeec:	push   ebx
1001eeed:	mov    ebx,DWORD PTR [esp+0xc]
1001eef1:	push   esi
1001eef2:	push   edi
1001eef3:	xor    esi,esi
1001eef5:	xor    edi,edi
1001eef7:	cmp    ebx,DWORD PTR [edi*8+0x100c8090]
1001eefe:	je     0x1001ef06
1001ef00:	inc    edi
1001ef01:	cmp    edi,0x17
1001ef04:	jb     0x1001eef7
1001ef06:	cmp    edi,0x17
1001ef09:	jae    0x1001f086
1001ef0f:	push   ebp
1001ef10:	push   0x3
1001ef12:	call   0x10024043
1001ef17:	cmp    eax,0x1
1001ef1a:	pop    ecx
1001ef1b:	je     0x1001f052
1001ef21:	push   0x3
1001ef23:	call   0x10024043
1001ef28:	test   eax,eax
1001ef2a:	pop    ecx
1001ef2b:	jne    0x1001ef3a
1001ef2d:	cmp    DWORD PTR ds:0x100c9254,0x1
1001ef34:	je     0x1001f052
1001ef3a:	cmp    ebx,0xfc
1001ef40:	je     0x1001f085
1001ef46:	push   0x100b3618
1001ef4b:	mov    ebx,0x314
1001ef50:	push   ebx
1001ef51:	mov    ebp,0x100c9790
1001ef56:	push   ebp
1001ef57:	call   0x1001ce58
1001ef5c:	add    esp,0xc
1001ef5f:	test   eax,eax
1001ef61:	je     0x1001ef70
1001ef63:	push   esi
1001ef64:	push   esi
1001ef65:	push   esi
1001ef66:	push   esi
1001ef67:	push   esi
1001ef68:	call   0x10018cc3
1001ef6d:	add    esp,0x14
1001ef70:	push   0x104
1001ef75:	mov    esi,0x100c97a9
1001ef7a:	push   esi
1001ef7b:	push   0x0
1001ef7d:	mov    BYTE PTR ds:0x100c98ad,0x0
1001ef84:	call   DWORD PTR ds:0x1002f134
1001ef8a:	test   eax,eax
1001ef8c:	jne    0x1001efb4
1001ef8e:	push   0x100b3600
1001ef93:	push   0x2fb
1001ef98:	push   esi
1001ef99:	call   0x1001ce58
1001ef9e:	add    esp,0xc
1001efa1:	test   eax,eax
1001efa3:	je     0x1001efb4
1001efa5:	xor    eax,eax
1001efa7:	push   eax
1001efa8:	push   eax
1001efa9:	push   eax
1001efaa:	push   eax
1001efab:	push   eax
1001efac:	call   0x10018cc3
1001efb1:	add    esp,0x14
1001efb4:	push   esi
1001efb5:	call   0x10019010
1001efba:	inc    eax
1001efbb:	cmp    eax,0x3c
1001efbe:	pop    ecx
1001efbf:	jbe    0x1001eff9
1001efc1:	push   esi
1001efc2:	call   0x10019010
1001efc7:	sub    esi,0x3b
1001efca:	add    eax,esi
1001efcc:	push   0x3
1001efce:	mov    ecx,0x100c9aa4
1001efd3:	push   0x100b35fc
1001efd8:	sub    ecx,eax
1001efda:	push   ecx
1001efdb:	push   eax
1001efdc:	call   0x100236f6
1001efe1:	add    esp,0x14
1001efe4:	test   eax,eax
1001efe6:	je     0x1001eff9
1001efe8:	xor    esi,esi
1001efea:	push   esi
1001efeb:	push   esi
1001efec:	push   esi
1001efed:	push   esi
1001efee:	push   esi
1001efef:	call   0x10018cc3
1001eff4:	add    esp,0x14
1001eff7:	jmp    0x1001effb
1001eff9:	xor    esi,esi
1001effb:	push   0x100b35f8
1001f000:	push   ebx
1001f001:	push   ebp
1001f002:	call   0x10023633
1001f007:	add    esp,0xc
1001f00a:	test   eax,eax
1001f00c:	je     0x1001f01b
1001f00e:	push   esi
1001f00f:	push   esi
1001f010:	push   esi
1001f011:	push   esi
1001f012:	push   esi
1001f013:	call   0x10018cc3
1001f018:	add    esp,0x14
1001f01b:	push   DWORD PTR [edi*8+0x100c8094]
1001f022:	push   ebx
1001f023:	push   ebp
1001f024:	call   0x10023633
1001f029:	add    esp,0xc
1001f02c:	test   eax,eax
1001f02e:	je     0x1001f03d
1001f030:	push   esi
1001f031:	push   esi
1001f032:	push   esi
1001f033:	push   esi
1001f034:	push   esi
1001f035:	call   0x10018cc3
1001f03a:	add    esp,0x14
1001f03d:	push   0x12010
1001f042:	push   0x100b35d0
1001f047:	push   ebp
1001f048:	call   0x10023e86
1001f04d:	add    esp,0xc
1001f050:	jmp    0x1001f085
1001f052:	push   0xfffffff4
1001f054:	call   DWORD PTR ds:0x1002f160
1001f05a:	mov    ebp,eax
1001f05c:	cmp    ebp,esi
1001f05e:	je     0x1001f085
1001f060:	cmp    ebp,0xffffffff
1001f063:	je     0x1001f085
1001f065:	push   0x0
1001f067:	lea    eax,[esp+0x14]
1001f06b:	push   eax
1001f06c:	lea    esi,[edi*8+0x100c8094]
1001f073:	push   DWORD PTR [esi]
1001f075:	call   0x10019010
1001f07a:	pop    ecx
1001f07b:	push   eax
1001f07c:	push   DWORD PTR [esi]
1001f07e:	push   ebp
1001f07f:	call   DWORD PTR ds:0x1002f0c0
1001f085:	pop    ebp
1001f086:	pop    edi
1001f087:	pop    esi
1001f088:	pop    ebx
1001f089:	pop    ecx
1001f08a:	ret    
1001f08b:	push   0x3
1001f08d:	call   0x10024043
1001f092:	cmp    eax,0x1
1001f095:	pop    ecx
1001f096:	je     0x1001f0ad
1001f098:	push   0x3
1001f09a:	call   0x10024043
1001f09f:	test   eax,eax
1001f0a1:	pop    ecx
1001f0a2:	jne    0x1001f0c3
1001f0a4:	cmp    DWORD PTR ds:0x100c9254,0x1
1001f0ab:	jne    0x1001f0c3
1001f0ad:	push   0xfc
1001f0b2:	call   0x1001eeeb
1001f0b7:	push   0xff
1001f0bc:	call   0x1001eeeb
1001f0c1:	pop    ecx
1001f0c2:	pop    ecx
1001f0c3:	ret    
1001f0c4:	push   0x54
1001f0c6:	push   0x100bb730
1001f0cb:	call   0x1001a750
1001f0d0:	xor    edi,edi
1001f0d2:	mov    DWORD PTR [ebp-0x4],edi
1001f0d5:	lea    eax,[ebp-0x64]
1001f0d8:	push   eax
1001f0d9:	call   DWORD PTR ds:0x1002f140
1001f0df:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001f0e6:	push   0x40
1001f0e8:	push   0x20
1001f0ea:	pop    esi
1001f0eb:	push   esi
1001f0ec:	call   0x1001afef
1001f0f1:	pop    ecx
1001f0f2:	pop    ecx
1001f0f3:	cmp    eax,edi
1001f0f5:	je     0x1001f30f
1001f0fb:	mov    ds:0x100cb080,eax
1001f100:	mov    DWORD PTR ds:0x100cb064,esi
1001f106:	lea    ecx,[eax+0x800]
1001f10c:	jmp    0x1001f13e
1001f10e:	mov    BYTE PTR [eax+0x4],0x0
1001f112:	or     DWORD PTR [eax],0xffffffff
1001f115:	mov    BYTE PTR [eax+0x5],0xa
1001f119:	mov    DWORD PTR [eax+0x8],edi
1001f11c:	mov    BYTE PTR [eax+0x24],0x0
1001f120:	mov    BYTE PTR [eax+0x25],0xa
1001f124:	mov    BYTE PTR [eax+0x26],0xa
1001f128:	mov    DWORD PTR [eax+0x38],edi
1001f12b:	mov    BYTE PTR [eax+0x34],0x0
1001f12f:	add    eax,0x40
1001f132:	mov    ecx,DWORD PTR ds:0x100cb080
1001f138:	add    ecx,0x800
1001f13e:	cmp    eax,ecx
1001f140:	jb     0x1001f10e
1001f142:	cmp    WORD PTR [ebp-0x32],di
1001f146:	je     0x1001f256
1001f14c:	mov    eax,DWORD PTR [ebp-0x30]
1001f14f:	cmp    eax,edi
1001f151:	je     0x1001f256
1001f157:	mov    edi,DWORD PTR [eax]
1001f159:	lea    ebx,[eax+0x4]
1001f15c:	lea    eax,[ebx+edi*1]
1001f15f:	mov    DWORD PTR [ebp-0x1c],eax
1001f162:	mov    esi,0x800
1001f167:	cmp    edi,esi
1001f169:	jl     0x1001f16d
1001f16b:	mov    edi,esi
1001f16d:	mov    DWORD PTR [ebp-0x20],0x1
1001f174:	jmp    0x1001f1d1
1001f176:	push   0x40
1001f178:	push   0x20
1001f17a:	call   0x1001afef
1001f17f:	pop    ecx
1001f180:	pop    ecx
1001f181:	test   eax,eax
1001f183:	je     0x1001f1db
1001f185:	mov    ecx,DWORD PTR [ebp-0x20]
1001f188:	lea    ecx,[ecx*4+0x100cb080]
1001f18f:	mov    DWORD PTR [ecx],eax
1001f191:	add    DWORD PTR ds:0x100cb064,0x20
1001f198:	lea    edx,[eax+0x800]
1001f19e:	jmp    0x1001f1ca
1001f1a0:	mov    BYTE PTR [eax+0x4],0x0
1001f1a4:	or     DWORD PTR [eax],0xffffffff
1001f1a7:	mov    BYTE PTR [eax+0x5],0xa
1001f1ab:	and    DWORD PTR [eax+0x8],0x0
1001f1af:	and    BYTE PTR [eax+0x24],0x80
1001f1b3:	mov    BYTE PTR [eax+0x25],0xa
1001f1b7:	mov    BYTE PTR [eax+0x26],0xa
1001f1bb:	and    DWORD PTR [eax+0x38],0x0
1001f1bf:	mov    BYTE PTR [eax+0x34],0x0
1001f1c3:	add    eax,0x40
1001f1c6:	mov    edx,DWORD PTR [ecx]
1001f1c8:	add    edx,esi
1001f1ca:	cmp    eax,edx
1001f1cc:	jb     0x1001f1a0
1001f1ce:	inc    DWORD PTR [ebp-0x20]
1001f1d1:	cmp    DWORD PTR ds:0x100cb064,edi
1001f1d7:	jl     0x1001f176
1001f1d9:	jmp    0x1001f1e1
1001f1db:	mov    edi,DWORD PTR ds:0x100cb064
1001f1e1:	and    DWORD PTR [ebp-0x20],0x0
1001f1e5:	test   edi,edi
1001f1e7:	jle    0x1001f256
1001f1e9:	mov    eax,DWORD PTR [ebp-0x1c]
1001f1ec:	mov    ecx,DWORD PTR [eax]
1001f1ee:	cmp    ecx,0xffffffff
1001f1f1:	je     0x1001f249
1001f1f3:	cmp    ecx,0xfffffffe
1001f1f6:	je     0x1001f249
1001f1f8:	mov    al,BYTE PTR [ebx]
1001f1fa:	test   al,0x1
1001f1fc:	je     0x1001f249
1001f1fe:	test   al,0x8
1001f200:	jne    0x1001f20d
1001f202:	push   ecx
1001f203:	call   DWORD PTR ds:0x1002f028
1001f209:	test   eax,eax
1001f20b:	je     0x1001f249
1001f20d:	mov    esi,DWORD PTR [ebp-0x20]
1001f210:	mov    eax,esi
1001f212:	sar    eax,0x5
1001f215:	and    esi,0x1f
1001f218:	shl    esi,0x6
1001f21b:	add    esi,DWORD PTR [eax*4+0x100cb080]
1001f222:	mov    eax,DWORD PTR [ebp-0x1c]
1001f225:	mov    eax,DWORD PTR [eax]
1001f227:	mov    DWORD PTR [esi],eax
1001f229:	mov    al,BYTE PTR [ebx]
1001f22b:	mov    BYTE PTR [esi+0x4],al
1001f22e:	push   0xfa0
1001f233:	lea    eax,[esi+0xc]
1001f236:	push   eax
1001f237:	call   0x10023b82
1001f23c:	pop    ecx
1001f23d:	pop    ecx
1001f23e:	test   eax,eax
1001f240:	je     0x1001f30f
1001f246:	inc    DWORD PTR [esi+0x8]
1001f249:	inc    DWORD PTR [ebp-0x20]
1001f24c:	inc    ebx
1001f24d:	add    DWORD PTR [ebp-0x1c],0x4
1001f251:	cmp    DWORD PTR [ebp-0x20],edi
1001f254:	jl     0x1001f1e9
1001f256:	xor    ebx,ebx
1001f258:	mov    esi,ebx
1001f25a:	shl    esi,0x6
1001f25d:	add    esi,DWORD PTR ds:0x100cb080
1001f263:	mov    eax,DWORD PTR [esi]
1001f265:	cmp    eax,0xffffffff
1001f268:	je     0x1001f275
1001f26a:	cmp    eax,0xfffffffe
1001f26d:	je     0x1001f275
1001f26f:	or     BYTE PTR [esi+0x4],0x80
1001f273:	jmp    0x1001f2e7
1001f275:	mov    BYTE PTR [esi+0x4],0x81
1001f279:	test   ebx,ebx
1001f27b:	jne    0x1001f282
1001f27d:	push   0xfffffff6
1001f27f:	pop    eax
1001f280:	jmp    0x1001f28c
1001f282:	mov    eax,ebx
1001f284:	dec    eax
1001f285:	neg    eax
1001f287:	sbb    eax,eax
1001f289:	add    eax,0xfffffff5
1001f28c:	push   eax
1001f28d:	call   DWORD PTR ds:0x1002f160
1001f293:	mov    edi,eax
1001f295:	cmp    edi,0xffffffff
1001f298:	je     0x1001f2dd
1001f29a:	test   edi,edi
1001f29c:	je     0x1001f2dd
1001f29e:	push   edi
1001f29f:	call   DWORD PTR ds:0x1002f028
1001f2a5:	test   eax,eax
1001f2a7:	je     0x1001f2dd
1001f2a9:	mov    DWORD PTR [esi],edi
1001f2ab:	and    eax,0xff
1001f2b0:	cmp    eax,0x2
1001f2b3:	jne    0x1001f2bb
1001f2b5:	or     BYTE PTR [esi+0x4],0x40
1001f2b9:	jmp    0x1001f2c4
1001f2bb:	cmp    eax,0x3
1001f2be:	jne    0x1001f2c4
1001f2c0:	or     BYTE PTR [esi+0x4],0x8
1001f2c4:	push   0xfa0
1001f2c9:	lea    eax,[esi+0xc]
1001f2cc:	push   eax
1001f2cd:	call   0x10023b82
1001f2d2:	pop    ecx
1001f2d3:	pop    ecx
1001f2d4:	test   eax,eax
1001f2d6:	je     0x1001f30f
1001f2d8:	inc    DWORD PTR [esi+0x8]
1001f2db:	jmp    0x1001f2e7
1001f2dd:	or     BYTE PTR [esi+0x4],0x40
1001f2e1:	mov    DWORD PTR [esi],0xfffffffe
1001f2e7:	inc    ebx
1001f2e8:	cmp    ebx,0x3
1001f2eb:	jl     0x1001f258
1001f2f1:	push   DWORD PTR ds:0x100cb064
1001f2f7:	call   DWORD PTR ds:0x1002f02c
1001f2fd:	xor    eax,eax
1001f2ff:	jmp    0x1001f312
1001f301:	xor    eax,eax
1001f303:	inc    eax
1001f304:	ret    
1001f305:	mov    esp,DWORD PTR [ebp-0x18]
1001f308:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1001f30f:	or     eax,0xffffffff
1001f312:	call   0x1001a795
1001f317:	ret    
1001f318:	push   esi
1001f319:	push   edi
1001f31a:	mov    esi,0x100cb080
1001f31f:	mov    edi,DWORD PTR [esi]
1001f321:	test   edi,edi
1001f323:	je     0x1001f356
1001f325:	lea    eax,[edi+0x800]
1001f32b:	jmp    0x1001f347
1001f32d:	cmp    DWORD PTR [edi+0x8],0x0
1001f331:	je     0x1001f33d
1001f333:	lea    eax,[edi+0xc]
1001f336:	push   eax
1001f337:	call   DWORD PTR ds:0x1002f1a4
1001f33d:	mov    eax,DWORD PTR [esi]
1001f33f:	add    edi,0x40
1001f342:	add    eax,0x800
1001f347:	cmp    edi,eax
1001f349:	jb     0x1001f32d
1001f34b:	push   DWORD PTR [esi]
1001f34d:	call   0x100197d5
1001f352:	and    DWORD PTR [esi],0x0
1001f355:	pop    ecx
1001f356:	add    esi,0x4
1001f359:	cmp    esi,0x100cb180
1001f35f:	jl     0x1001f31f
1001f361:	pop    edi
1001f362:	pop    esi
1001f363:	ret    
1001f364:	push   ebx
1001f365:	xor    ebx,ebx
1001f367:	cmp    DWORD PTR ds:0x100cb1b4,ebx
1001f36d:	push   esi
1001f36e:	push   edi
1001f36f:	jne    0x1001f376
1001f371:	call   0x1001dee7
1001f376:	mov    esi,DWORD PTR ds:0x100c9248
1001f37c:	xor    edi,edi
1001f37e:	cmp    esi,ebx
1001f380:	jne    0x1001f39a
1001f382:	or     eax,0xffffffff
1001f385:	jmp    0x1001f425
1001f38a:	cmp    al,0x3d
1001f38c:	je     0x1001f38f
1001f38e:	inc    edi
1001f38f:	push   esi
1001f390:	call   0x10019010
1001f395:	pop    ecx
1001f396:	lea    esi,[esi+eax*1+0x1]
1001f39a:	mov    al,BYTE PTR [esi]
1001f39c:	cmp    al,bl
1001f39e:	jne    0x1001f38a
1001f3a0:	push   0x4
1001f3a2:	inc    edi
1001f3a3:	push   edi
1001f3a4:	call   0x1001afef
1001f3a9:	mov    edi,eax
1001f3ab:	cmp    edi,ebx
1001f3ad:	pop    ecx
1001f3ae:	pop    ecx
1001f3af:	mov    DWORD PTR ds:0x100c95c4,edi
1001f3b5:	je     0x1001f382
1001f3b7:	mov    esi,DWORD PTR ds:0x100c9248
1001f3bd:	push   ebp
1001f3be:	jmp    0x1001f400
1001f3c0:	push   esi
1001f3c1:	call   0x10019010
1001f3c6:	mov    ebp,eax
1001f3c8:	inc    ebp
1001f3c9:	cmp    BYTE PTR [esi],0x3d
1001f3cc:	pop    ecx
1001f3cd:	je     0x1001f3fe
1001f3cf:	push   0x1
1001f3d1:	push   ebp
1001f3d2:	call   0x1001afef
1001f3d7:	cmp    eax,ebx
1001f3d9:	pop    ecx
1001f3da:	pop    ecx
1001f3db:	mov    DWORD PTR [edi],eax
1001f3dd:	je     0x1001f429
1001f3df:	push   esi
1001f3e0:	push   ebp
1001f3e1:	push   eax
1001f3e2:	call   0x1001ce58
1001f3e7:	add    esp,0xc
1001f3ea:	test   eax,eax
1001f3ec:	je     0x1001f3fb
1001f3ee:	push   ebx
1001f3ef:	push   ebx
1001f3f0:	push   ebx
1001f3f1:	push   ebx
1001f3f2:	push   ebx
1001f3f3:	call   0x10018cc3
1001f3f8:	add    esp,0x14
1001f3fb:	add    edi,0x4
1001f3fe:	add    esi,ebp
1001f400:	cmp    BYTE PTR [esi],bl
1001f402:	jne    0x1001f3c0
1001f404:	push   DWORD PTR ds:0x100c9248
1001f40a:	call   0x100197d5
1001f40f:	mov    DWORD PTR ds:0x100c9248,ebx
1001f415:	mov    DWORD PTR [edi],ebx
1001f417:	mov    DWORD PTR ds:0x100cb1a8,0x1
1001f421:	xor    eax,eax
1001f423:	pop    ecx
1001f424:	pop    ebp
1001f425:	pop    edi
1001f426:	pop    esi
1001f427:	pop    ebx
1001f428:	ret    
1001f429:	push   DWORD PTR ds:0x100c95c4
1001f42f:	call   0x100197d5
1001f434:	mov    DWORD PTR ds:0x100c95c4,ebx
1001f43a:	or     eax,0xffffffff
1001f43d:	jmp    0x1001f423
1001f43f:	push   ebp
1001f440:	mov    ebp,esp
1001f442:	push   ecx
1001f443:	mov    ecx,DWORD PTR [ebp+0x10]
1001f446:	push   ebx
1001f447:	xor    eax,eax
1001f449:	cmp    DWORD PTR [ebp+0x8],eax
1001f44c:	push   esi
1001f44d:	mov    DWORD PTR [edi],eax
1001f44f:	mov    esi,edx
1001f451:	mov    edx,DWORD PTR [ebp+0xc]
1001f454:	mov    DWORD PTR [ecx],0x1
1001f45a:	je     0x1001f465
1001f45c:	mov    ebx,DWORD PTR [ebp+0x8]
1001f45f:	add    DWORD PTR [ebp+0x8],0x4
1001f463:	mov    DWORD PTR [ebx],edx
1001f465:	mov    DWORD PTR [ebp-0x4],eax
1001f468:	cmp    BYTE PTR [esi],0x22
1001f46b:	jne    0x1001f47d
1001f46d:	xor    eax,eax
1001f46f:	cmp    DWORD PTR [ebp-0x4],eax
1001f472:	mov    bl,0x22
1001f474:	sete   al
1001f477:	inc    esi
1001f478:	mov    DWORD PTR [ebp-0x4],eax
1001f47b:	jmp    0x1001f4b9
1001f47d:	inc    DWORD PTR [edi]
1001f47f:	test   edx,edx
1001f481:	je     0x1001f48b
1001f483:	mov    al,BYTE PTR [esi]
1001f485:	mov    BYTE PTR [edx],al
1001f487:	inc    edx
1001f488:	mov    DWORD PTR [ebp+0xc],edx
1001f48b:	mov    bl,BYTE PTR [esi]
1001f48d:	movzx  eax,bl
1001f490:	push   eax
1001f491:	inc    esi
1001f492:	call   0x10022d7b
1001f497:	test   eax,eax
1001f499:	pop    ecx
1001f49a:	je     0x1001f4af
1001f49c:	inc    DWORD PTR [edi]
1001f49e:	cmp    DWORD PTR [ebp+0xc],0x0
1001f4a2:	je     0x1001f4ae
1001f4a4:	mov    ecx,DWORD PTR [ebp+0xc]
1001f4a7:	mov    al,BYTE PTR [esi]
1001f4a9:	inc    DWORD PTR [ebp+0xc]
1001f4ac:	mov    BYTE PTR [ecx],al
1001f4ae:	inc    esi
1001f4af:	test   bl,bl
1001f4b1:	mov    edx,DWORD PTR [ebp+0xc]
1001f4b4:	mov    ecx,DWORD PTR [ebp+0x10]
1001f4b7:	je     0x1001f4eb
1001f4b9:	cmp    DWORD PTR [ebp-0x4],0x0
1001f4bd:	jne    0x1001f468
1001f4bf:	cmp    bl,0x20
1001f4c2:	je     0x1001f4c9
1001f4c4:	cmp    bl,0x9
1001f4c7:	jne    0x1001f468
1001f4c9:	test   edx,edx
1001f4cb:	je     0x1001f4d1
1001f4cd:	mov    BYTE PTR [edx-0x1],0x0
1001f4d1:	and    DWORD PTR [ebp-0x4],0x0
1001f4d5:	cmp    BYTE PTR [esi],0x0
1001f4d8:	je     0x1001f5c7
1001f4de:	mov    al,BYTE PTR [esi]
1001f4e0:	cmp    al,0x20
1001f4e2:	je     0x1001f4e8
1001f4e4:	cmp    al,0x9
1001f4e6:	jne    0x1001f4ee
1001f4e8:	inc    esi
1001f4e9:	jmp    0x1001f4de
1001f4eb:	dec    esi
1001f4ec:	jmp    0x1001f4d1
1001f4ee:	cmp    BYTE PTR [esi],0x0
1001f4f1:	je     0x1001f5c7
1001f4f7:	cmp    DWORD PTR [ebp+0x8],0x0
1001f4fb:	je     0x1001f506
1001f4fd:	mov    eax,DWORD PTR [ebp+0x8]
1001f500:	add    DWORD PTR [ebp+0x8],0x4
1001f504:	mov    DWORD PTR [eax],edx
1001f506:	inc    DWORD PTR [ecx]
1001f508:	xor    ebx,ebx
1001f50a:	inc    ebx
1001f50b:	xor    ecx,ecx
1001f50d:	jmp    0x1001f511
1001f50f:	inc    esi
1001f510:	inc    ecx
1001f511:	cmp    BYTE PTR [esi],0x5c
1001f514:	je     0x1001f50f
1001f516:	cmp    BYTE PTR [esi],0x22
1001f519:	jne    0x1001f541
1001f51b:	test   cl,0x1
1001f51e:	jne    0x1001f53f
1001f520:	cmp    DWORD PTR [ebp-0x4],0x0
1001f524:	je     0x1001f532
1001f526:	lea    eax,[esi+0x1]
1001f529:	cmp    BYTE PTR [eax],0x22
1001f52c:	jne    0x1001f532
1001f52e:	mov    esi,eax
1001f530:	jmp    0x1001f53f
1001f532:	xor    eax,eax
1001f534:	xor    ebx,ebx
1001f536:	cmp    DWORD PTR [ebp-0x4],eax
1001f539:	sete   al
1001f53c:	mov    DWORD PTR [ebp-0x4],eax
1001f53f:	shr    ecx,1
1001f541:	test   ecx,ecx
1001f543:	je     0x1001f557
1001f545:	dec    ecx
1001f546:	test   edx,edx
1001f548:	je     0x1001f54e
1001f54a:	mov    BYTE PTR [edx],0x5c
1001f54d:	inc    edx
1001f54e:	inc    DWORD PTR [edi]
1001f550:	test   ecx,ecx
1001f552:	jne    0x1001f545
1001f554:	mov    DWORD PTR [ebp+0xc],edx
1001f557:	mov    al,BYTE PTR [esi]
1001f559:	test   al,al
1001f55b:	je     0x1001f5b2
1001f55d:	cmp    DWORD PTR [ebp-0x4],0x0
1001f561:	jne    0x1001f56b
1001f563:	cmp    al,0x20
1001f565:	je     0x1001f5b2
1001f567:	cmp    al,0x9
1001f569:	je     0x1001f5b2
1001f56b:	test   ebx,ebx
1001f56d:	je     0x1001f5ac
1001f56f:	test   edx,edx
1001f571:	movsx  eax,al
1001f574:	push   eax
1001f575:	je     0x1001f59a
1001f577:	call   0x10022d7b
1001f57c:	test   eax,eax
1001f57e:	pop    ecx
1001f57f:	je     0x1001f58e
1001f581:	mov    al,BYTE PTR [esi]
1001f583:	mov    ecx,DWORD PTR [ebp+0xc]
1001f586:	inc    DWORD PTR [ebp+0xc]
1001f589:	mov    BYTE PTR [ecx],al
1001f58b:	inc    esi
1001f58c:	inc    DWORD PTR [edi]
1001f58e:	mov    ecx,DWORD PTR [ebp+0xc]
1001f591:	mov    al,BYTE PTR [esi]
1001f593:	inc    DWORD PTR [ebp+0xc]
1001f596:	mov    BYTE PTR [ecx],al
1001f598:	jmp    0x1001f5a7
1001f59a:	call   0x10022d7b
1001f59f:	test   eax,eax
1001f5a1:	pop    ecx
1001f5a2:	je     0x1001f5a7
1001f5a4:	inc    esi
1001f5a5:	inc    DWORD PTR [edi]
1001f5a7:	inc    DWORD PTR [edi]
1001f5a9:	mov    edx,DWORD PTR [ebp+0xc]
1001f5ac:	inc    esi
1001f5ad:	jmp    0x1001f508
1001f5b2:	test   edx,edx
1001f5b4:	je     0x1001f5bd
1001f5b6:	mov    BYTE PTR [edx],0x0
1001f5b9:	inc    edx
1001f5ba:	mov    DWORD PTR [ebp+0xc],edx
1001f5bd:	inc    DWORD PTR [edi]
1001f5bf:	mov    ecx,DWORD PTR [ebp+0x10]
1001f5c2:	jmp    0x1001f4d5
1001f5c7:	mov    eax,DWORD PTR [ebp+0x8]
1001f5ca:	test   eax,eax
1001f5cc:	pop    esi
1001f5cd:	pop    ebx
1001f5ce:	je     0x1001f5d3
1001f5d0:	and    DWORD PTR [eax],0x0
1001f5d3:	inc    DWORD PTR [ecx]
1001f5d5:	leave  
1001f5d6:	ret    
1001f5d7:	push   ebp
1001f5d8:	mov    ebp,esp
1001f5da:	sub    esp,0xc
1001f5dd:	push   ebx
1001f5de:	xor    ebx,ebx
1001f5e0:	cmp    DWORD PTR ds:0x100cb1b4,ebx
1001f5e6:	push   esi
1001f5e7:	push   edi
1001f5e8:	jne    0x1001f5ef
1001f5ea:	call   0x1001dee7
1001f5ef:	push   0x104
1001f5f4:	mov    esi,0x100c9aa8
1001f5f9:	push   esi
1001f5fa:	push   ebx
1001f5fb:	mov    BYTE PTR ds:0x100c9bac,bl
1001f601:	call   DWORD PTR ds:0x1002f134
1001f607:	mov    eax,ds:0x100cb1bc
1001f60c:	cmp    eax,ebx
1001f60e:	mov    DWORD PTR ds:0x100c95d4,esi
1001f614:	je     0x1001f61d
1001f616:	cmp    BYTE PTR [eax],bl
1001f618:	mov    DWORD PTR [ebp-0x4],eax
1001f61b:	jne    0x1001f620
1001f61d:	mov    DWORD PTR [ebp-0x4],esi
1001f620:	mov    edx,DWORD PTR [ebp-0x4]
1001f623:	lea    eax,[ebp-0x8]
1001f626:	push   eax
1001f627:	push   ebx
1001f628:	push   ebx
1001f629:	lea    edi,[ebp-0xc]
1001f62c:	call   0x1001f43f
1001f631:	mov    eax,DWORD PTR [ebp-0x8]
1001f634:	add    esp,0xc
1001f637:	cmp    eax,0x3fffffff
1001f63c:	jae    0x1001f688
1001f63e:	mov    ecx,DWORD PTR [ebp-0xc]
1001f641:	cmp    ecx,0xffffffff
1001f644:	jae    0x1001f688
1001f646:	mov    edi,eax
1001f648:	shl    edi,0x2
1001f64b:	lea    eax,[edi+ecx*1]
1001f64e:	cmp    eax,ecx
1001f650:	jb     0x1001f688
1001f652:	push   eax
1001f653:	call   0x1001afaf
1001f658:	mov    esi,eax
1001f65a:	cmp    esi,ebx
1001f65c:	pop    ecx
1001f65d:	je     0x1001f688
1001f65f:	mov    edx,DWORD PTR [ebp-0x4]
1001f662:	lea    eax,[ebp-0x8]
1001f665:	push   eax
1001f666:	add    edi,esi
1001f668:	push   edi
1001f669:	push   esi
1001f66a:	lea    edi,[ebp-0xc]
1001f66d:	call   0x1001f43f
1001f672:	mov    eax,DWORD PTR [ebp-0x8]
1001f675:	add    esp,0xc
1001f678:	dec    eax
1001f679:	mov    ds:0x100c95b8,eax
1001f67e:	mov    DWORD PTR ds:0x100c95bc,esi
1001f684:	xor    eax,eax
1001f686:	jmp    0x1001f68b
1001f688:	or     eax,0xffffffff
1001f68b:	pop    edi
1001f68c:	pop    esi
1001f68d:	pop    ebx
1001f68e:	leave  
1001f68f:	ret    
1001f690:	push   ecx
1001f691:	push   ecx
1001f692:	mov    eax,ds:0x100c9bb0
1001f697:	push   ebx
1001f698:	push   ebp
1001f699:	push   esi
1001f69a:	push   edi
1001f69b:	mov    edi,DWORD PTR ds:0x1002f128
1001f6a1:	xor    ebx,ebx
1001f6a3:	xor    esi,esi
1001f6a5:	cmp    eax,ebx
1001f6a7:	push   0x2
1001f6a9:	pop    ebp
1001f6aa:	jne    0x1001f6d9
1001f6ac:	call   edi
1001f6ae:	mov    esi,eax
1001f6b0:	cmp    esi,ebx
1001f6b2:	je     0x1001f6c0
1001f6b4:	mov    DWORD PTR ds:0x100c9bb0,0x1
1001f6be:	jmp    0x1001f6e2
1001f6c0:	call   DWORD PTR ds:0x1002f094
1001f6c6:	cmp    eax,0x78
1001f6c9:	jne    0x1001f6d4
1001f6cb:	mov    eax,ebp
1001f6cd:	mov    ds:0x100c9bb0,eax
1001f6d2:	jmp    0x1001f6d9
1001f6d4:	mov    eax,ds:0x100c9bb0
1001f6d9:	cmp    eax,0x1
1001f6dc:	jne    0x1001f766
1001f6e2:	cmp    esi,ebx
1001f6e4:	jne    0x1001f6f5
1001f6e6:	call   edi
1001f6e8:	mov    esi,eax
1001f6ea:	cmp    esi,ebx
1001f6ec:	jne    0x1001f6f5
1001f6ee:	xor    eax,eax
1001f6f0:	jmp    0x1001f7be
1001f6f5:	cmp    WORD PTR [esi],bx
1001f6f8:	mov    eax,esi
1001f6fa:	je     0x1001f70a
1001f6fc:	add    eax,ebp
1001f6fe:	cmp    WORD PTR [eax],bx
1001f701:	jne    0x1001f6fc
1001f703:	add    eax,ebp
1001f705:	cmp    WORD PTR [eax],bx
1001f708:	jne    0x1001f6fc
1001f70a:	mov    edi,DWORD PTR ds:0x1002f038
1001f710:	push   ebx
1001f711:	push   ebx
1001f712:	push   ebx
1001f713:	sub    eax,esi
1001f715:	push   ebx
1001f716:	sar    eax,1
1001f718:	inc    eax
1001f719:	push   eax
1001f71a:	push   esi
1001f71b:	push   ebx
1001f71c:	push   ebx
1001f71d:	mov    DWORD PTR [esp+0x34],eax
1001f721:	call   edi
1001f723:	mov    ebp,eax
1001f725:	cmp    ebp,ebx
1001f727:	je     0x1001f75b
1001f729:	push   ebp
1001f72a:	call   0x1001afaf
1001f72f:	cmp    eax,ebx
1001f731:	pop    ecx
1001f732:	mov    DWORD PTR [esp+0x10],eax
1001f736:	je     0x1001f75b
1001f738:	push   ebx
1001f739:	push   ebx
1001f73a:	push   ebp
1001f73b:	push   eax
1001f73c:	push   DWORD PTR [esp+0x24]
1001f740:	push   esi
1001f741:	push   ebx
1001f742:	push   ebx
1001f743:	call   edi
1001f745:	test   eax,eax
1001f747:	jne    0x1001f757
1001f749:	push   DWORD PTR [esp+0x10]
1001f74d:	call   0x100197d5
1001f752:	pop    ecx
1001f753:	mov    DWORD PTR [esp+0x10],ebx
1001f757:	mov    ebx,DWORD PTR [esp+0x10]
1001f75b:	push   esi
1001f75c:	call   DWORD PTR ds:0x1002f14c
1001f762:	mov    eax,ebx
1001f764:	jmp    0x1001f7be
1001f766:	cmp    eax,ebp
1001f768:	je     0x1001f76e
1001f76a:	cmp    eax,ebx
1001f76c:	jne    0x1001f6ee
1001f76e:	call   DWORD PTR ds:0x1002f148
1001f774:	mov    esi,eax
1001f776:	cmp    esi,ebx
1001f778:	je     0x1001f6ee
1001f77e:	cmp    BYTE PTR [esi],bl
1001f780:	je     0x1001f78c
1001f782:	inc    eax
1001f783:	cmp    BYTE PTR [eax],bl
1001f785:	jne    0x1001f782
1001f787:	inc    eax
1001f788:	cmp    BYTE PTR [eax],bl
1001f78a:	jne    0x1001f782
1001f78c:	sub    eax,esi
1001f78e:	inc    eax
1001f78f:	mov    ebp,eax
1001f791:	push   ebp
1001f792:	call   0x1001afaf
1001f797:	mov    edi,eax
1001f799:	cmp    edi,ebx
1001f79b:	pop    ecx
1001f79c:	jne    0x1001f7aa
1001f79e:	push   esi
1001f79f:	call   DWORD PTR ds:0x1002f144
1001f7a5:	jmp    0x1001f6ee
1001f7aa:	push   ebp
1001f7ab:	push   esi
1001f7ac:	push   edi
1001f7ad:	call   0x10019470
1001f7b2:	add    esp,0xc
1001f7b5:	push   esi
1001f7b6:	call   DWORD PTR ds:0x1002f144
1001f7bc:	mov    eax,edi
1001f7be:	pop    edi
1001f7bf:	pop    esi
1001f7c0:	pop    ebp
1001f7c1:	pop    ebx
1001f7c2:	pop    ecx
1001f7c3:	pop    ecx
1001f7c4:	ret    
1001f7c5:	push   esi
1001f7c6:	push   edi
1001f7c7:	mov    eax,0x100ba80c
1001f7cc:	mov    edi,0x100ba80c
1001f7d1:	cmp    eax,edi
1001f7d3:	mov    esi,eax
1001f7d5:	jae    0x1001f7e6
1001f7d7:	mov    eax,DWORD PTR [esi]
1001f7d9:	test   eax,eax
1001f7db:	je     0x1001f7df
1001f7dd:	call   eax
1001f7df:	add    esi,0x4
1001f7e2:	cmp    esi,edi
1001f7e4:	jb     0x1001f7d7
1001f7e6:	pop    edi
1001f7e7:	pop    esi
1001f7e8:	ret    
1001f7e9:	push   esi
1001f7ea:	push   edi
1001f7eb:	mov    eax,0x100ba814
1001f7f0:	mov    edi,0x100ba814
1001f7f5:	cmp    eax,edi
1001f7f7:	mov    esi,eax
1001f7f9:	jae    0x1001f80a
1001f7fb:	mov    eax,DWORD PTR [esi]
1001f7fd:	test   eax,eax
1001f7ff:	je     0x1001f803
1001f801:	call   eax
1001f803:	add    esi,0x4
1001f806:	cmp    esi,edi
1001f808:	jb     0x1001f7fb
1001f80a:	pop    edi
1001f80b:	pop    esi
1001f80c:	ret    
1001f80d:	ret    
1001f80e:	push   ebp
1001f80f:	mov    ebp,esp
1001f811:	push   ecx
1001f812:	push   ecx
1001f813:	push   esi
1001f814:	call   0x1001c4af
1001f819:	mov    esi,eax
1001f81b:	test   esi,esi
1001f81d:	je     0x1001f969
1001f823:	mov    edx,DWORD PTR [esi+0x5c]
1001f826:	mov    eax,ds:0x100c820c
1001f82b:	push   edi
1001f82c:	mov    edi,DWORD PTR [ebp+0x8]
1001f82f:	mov    ecx,edx
1001f831:	push   ebx
1001f832:	cmp    DWORD PTR [ecx],edi
1001f834:	je     0x1001f844
1001f836:	mov    ebx,eax
1001f838:	imul   ebx,ebx,0xc
1001f83b:	add    ecx,0xc
1001f83e:	add    ebx,edx
1001f840:	cmp    ecx,ebx
1001f842:	jb     0x1001f832
1001f844:	imul   eax,eax,0xc
1001f847:	add    eax,edx
1001f849:	cmp    ecx,eax
1001f84b:	jae    0x1001f855
1001f84d:	cmp    DWORD PTR [ecx],edi
1001f84f:	jne    0x1001f855
1001f851:	mov    eax,ecx
1001f853:	jmp    0x1001f857
1001f855:	xor    eax,eax
1001f857:	test   eax,eax
1001f859:	je     0x1001f865
1001f85b:	mov    ebx,DWORD PTR [eax+0x8]
1001f85e:	test   ebx,ebx
1001f860:	mov    DWORD PTR [ebp-0x4],ebx
1001f863:	jne    0x1001f86c
1001f865:	xor    eax,eax
1001f867:	jmp    0x1001f967
1001f86c:	cmp    ebx,0x5
1001f86f:	jne    0x1001f87d
1001f871:	and    DWORD PTR [eax+0x8],0x0
1001f875:	xor    eax,eax
1001f877:	inc    eax
1001f878:	jmp    0x1001f967
1001f87d:	cmp    ebx,0x1
1001f880:	je     0x1001f964
1001f886:	mov    ecx,DWORD PTR [esi+0x60]
1001f889:	mov    DWORD PTR [ebp-0x8],ecx
1001f88c:	mov    ecx,DWORD PTR [ebp+0xc]
1001f88f:	mov    DWORD PTR [esi+0x60],ecx
1001f892:	mov    ecx,DWORD PTR [eax+0x4]
1001f895:	cmp    ecx,0x8
1001f898:	jne    0x1001f956
1001f89e:	mov    ecx,DWORD PTR ds:0x100c8200
1001f8a4:	mov    edi,DWORD PTR ds:0x100c8204
1001f8aa:	mov    edx,ecx
1001f8ac:	add    edi,ecx
1001f8ae:	cmp    edx,edi
1001f8b0:	jge    0x1001f8d6
1001f8b2:	imul   ecx,ecx,0xc
1001f8b5:	mov    edi,DWORD PTR [esi+0x5c]
1001f8b8:	and    DWORD PTR [ecx+edi*1+0x8],0x0
1001f8bd:	mov    edi,DWORD PTR ds:0x100c8200
1001f8c3:	mov    ebx,DWORD PTR ds:0x100c8204
1001f8c9:	inc    edx
1001f8ca:	add    ebx,edi
1001f8cc:	add    ecx,0xc
1001f8cf:	cmp    edx,ebx
1001f8d1:	jl     0x1001f8b5
1001f8d3:	mov    ebx,DWORD PTR [ebp-0x4]
1001f8d6:	mov    eax,DWORD PTR [eax]
1001f8d8:	cmp    eax,0xc000008e
1001f8dd:	mov    edi,DWORD PTR [esi+0x64]
1001f8e0:	jne    0x1001f8eb
1001f8e2:	mov    DWORD PTR [esi+0x64],0x83
1001f8e9:	jmp    0x1001f949
1001f8eb:	cmp    eax,0xc0000090
1001f8f0:	jne    0x1001f8fb
1001f8f2:	mov    DWORD PTR [esi+0x64],0x81
1001f8f9:	jmp    0x1001f949
1001f8fb:	cmp    eax,0xc0000091
1001f900:	jne    0x1001f90b
1001f902:	mov    DWORD PTR [esi+0x64],0x84
1001f909:	jmp    0x1001f949
1001f90b:	cmp    eax,0xc0000093
1001f910:	jne    0x1001f91b
1001f912:	mov    DWORD PTR [esi+0x64],0x85
1001f919:	jmp    0x1001f949
1001f91b:	cmp    eax,0xc000008d
1001f920:	jne    0x1001f92b
1001f922:	mov    DWORD PTR [esi+0x64],0x82
1001f929:	jmp    0x1001f949
1001f92b:	cmp    eax,0xc000008f
1001f930:	jne    0x1001f93b
1001f932:	mov    DWORD PTR [esi+0x64],0x86
1001f939:	jmp    0x1001f949
1001f93b:	cmp    eax,0xc0000092
1001f940:	jne    0x1001f949
1001f942:	mov    DWORD PTR [esi+0x64],0x8a
1001f949:	push   DWORD PTR [esi+0x64]
1001f94c:	push   0x8
1001f94e:	call   ebx
1001f950:	pop    ecx
1001f951:	mov    DWORD PTR [esi+0x64],edi
1001f954:	jmp    0x1001f95d
1001f956:	and    DWORD PTR [eax+0x8],0x0
1001f95a:	push   ecx
1001f95b:	call   ebx
1001f95d:	mov    eax,DWORD PTR [ebp-0x8]
1001f960:	pop    ecx
1001f961:	mov    DWORD PTR [esi+0x60],eax
1001f964:	or     eax,0xffffffff
1001f967:	pop    ebx
1001f968:	pop    edi
1001f969:	pop    esi
1001f96a:	leave  
1001f96b:	ret    
1001f96c:	mov    eax,0xe06d7363
1001f971:	cmp    DWORD PTR [esp+0x4],eax
1001f975:	jne    0x1001f984
1001f977:	push   DWORD PTR [esp+0x8]
1001f97b:	push   eax
1001f97c:	call   0x1001f80e
1001f981:	pop    ecx
1001f982:	pop    ecx
1001f983:	ret    
1001f984:	xor    eax,eax
1001f986:	ret    
1001f987:	push   ebp
1001f988:	mov    ebp,esp
1001f98a:	sub    esp,0x10
1001f98d:	mov    eax,ds:0x100c7654
1001f992:	and    DWORD PTR [ebp-0x8],0x0
1001f996:	and    DWORD PTR [ebp-0x4],0x0
1001f99a:	push   ebx
1001f99b:	push   edi
1001f99c:	mov    edi,0xbb40e64e
1001f9a1:	cmp    eax,edi
1001f9a3:	mov    ebx,0xffff0000
1001f9a8:	je     0x1001f9b7
1001f9aa:	test   ebx,eax
1001f9ac:	je     0x1001f9b7
1001f9ae:	not    eax
1001f9b0:	mov    ds:0x100c7658,eax
1001f9b5:	jmp    0x1001fa17
1001f9b7:	push   esi
1001f9b8:	lea    eax,[ebp-0x8]
1001f9bb:	push   eax
1001f9bc:	call   DWORD PTR ds:0x1002f1ec
1001f9c2:	mov    esi,DWORD PTR [ebp-0x4]
1001f9c5:	xor    esi,DWORD PTR [ebp-0x8]
1001f9c8:	call   DWORD PTR ds:0x1002f0b8
1001f9ce:	xor    esi,eax
1001f9d0:	call   DWORD PTR ds:0x1002f10c
1001f9d6:	xor    esi,eax
1001f9d8:	call   DWORD PTR ds:0x1002f130
1001f9de:	xor    esi,eax
1001f9e0:	lea    eax,[ebp-0x10]
1001f9e3:	push   eax
1001f9e4:	call   DWORD PTR ds:0x1002f150
1001f9ea:	mov    eax,DWORD PTR [ebp-0xc]
1001f9ed:	xor    eax,DWORD PTR [ebp-0x10]
1001f9f0:	xor    esi,eax
1001f9f2:	cmp    esi,edi
1001f9f4:	jne    0x1001f9fd
1001f9f6:	mov    esi,0xbb40e64f
1001f9fb:	jmp    0x1001fa08
1001f9fd:	test   ebx,esi
1001f9ff:	jne    0x1001fa08
1001fa01:	mov    eax,esi
1001fa03:	shl    eax,0x10
1001fa06:	or     esi,eax
1001fa08:	mov    DWORD PTR ds:0x100c7654,esi
1001fa0e:	not    esi
1001fa10:	mov    DWORD PTR ds:0x100c7658,esi
1001fa16:	pop    esi
1001fa17:	pop    edi
1001fa18:	pop    ebx
1001fa19:	leave  
1001fa1a:	ret    
1001fa1b:	push   ebp
1001fa1c:	mov    ebp,esp
1001fa1e:	sub    esp,0x14
1001fa21:	cmp    WORD PTR [ebp+0x8],0xffff
1001fa27:	jne    0x1001fa2f
1001fa29:	and    DWORD PTR [ebp-0x4],0x0
1001fa2d:	jmp    0x1001fa91
1001fa2f:	cmp    WORD PTR [ebp+0x8],0x100
1001fa35:	jae    0x1001fa51
1001fa37:	movzx  eax,WORD PTR [ebp+0x8]
1001fa3b:	mov    ecx,DWORD PTR ds:0x100c7794
1001fa41:	mov    ax,WORD PTR [ecx+eax*2]
1001fa45:	and    ax,WORD PTR [ebp+0xc]
1001fa49:	movzx  eax,ax
1001fa4c:	mov    DWORD PTR [ebp-0x4],eax
1001fa4f:	jmp    0x1001fa91
1001fa51:	push   DWORD PTR [ebp+0x10]
1001fa54:	lea    ecx,[ebp-0x14]
1001fa57:	call   0x1001924a
1001fa5c:	mov    eax,DWORD PTR [ebp-0x14]
1001fa5f:	push   DWORD PTR [eax+0x14]
1001fa62:	push   DWORD PTR [eax+0x4]
1001fa65:	lea    eax,[ebp-0x4]
1001fa68:	push   eax
1001fa69:	push   0x1
1001fa6b:	lea    eax,[ebp+0x8]
1001fa6e:	push   eax
1001fa6f:	lea    eax,[ebp-0x14]
1001fa72:	push   0x1
1001fa74:	push   eax
1001fa75:	call   0x100242ad
1001fa7a:	add    esp,0x1c
1001fa7d:	test   eax,eax
1001fa7f:	jne    0x1001fa84
1001fa81:	and    DWORD PTR [ebp-0x4],eax
1001fa84:	cmp    BYTE PTR [ebp-0x8],0x0
1001fa88:	je     0x1001fa91
1001fa8a:	mov    eax,DWORD PTR [ebp-0xc]
1001fa8d:	and    DWORD PTR [eax+0x70],0xfffffffd
1001fa91:	movzx  eax,WORD PTR [ebp-0x4]
1001fa95:	movzx  ecx,WORD PTR [ebp+0xc]
1001fa99:	and    eax,ecx
1001fa9b:	leave  
1001fa9c:	ret    
1001fa9d:	push   ebp
1001fa9e:	mov    ebp,esp
1001faa0:	push   ecx
1001faa1:	cmp    WORD PTR [ebp+0x8],0xffff
1001faa7:	jne    0x1001faad
1001faa9:	xor    eax,eax
1001faab:	leave  
1001faac:	ret    
1001faad:	cmp    WORD PTR [ebp+0x8],0x100
1001fab3:	jae    0x1001facb
1001fab5:	movzx  eax,WORD PTR [ebp+0x8]
1001fab9:	mov    ecx,DWORD PTR ds:0x100c7794
1001fabf:	movzx  eax,WORD PTR [ecx+eax*2]
1001fac3:	movzx  ecx,WORD PTR [ebp+0xc]
1001fac7:	and    eax,ecx
1001fac9:	leave  
1001faca:	ret    
1001facb:	cmp    DWORD PTR ds:0x100c9260,0x0
1001fad2:	jne    0x1001faf9
1001fad4:	push   DWORD PTR ds:0x100c7e94
1001fada:	lea    eax,[ebp-0x4]
1001fadd:	push   DWORD PTR ds:0x100c7e84
1001fae3:	push   eax
1001fae4:	push   0x1
1001fae6:	lea    eax,[ebp+0x8]
1001fae9:	push   eax
1001faea:	push   0x1
1001faec:	push   0x100c7f60
1001faf1:	call   0x100242ad
1001faf6:	add    esp,0x1c
1001faf9:	push   0x0
1001fafb:	push   DWORD PTR [ebp+0xc]
1001fafe:	push   DWORD PTR [ebp+0x8]
1001fb01:	call   0x1001fa1b
1001fb06:	add    esp,0xc
1001fb09:	leave  
1001fb0a:	ret    
1001fb0b:	push   ebp
1001fb0c:	mov    ebp,esp
1001fb0e:	push   ecx
1001fb0f:	push   esi
1001fb10:	mov    esi,DWORD PTR [ebp+0xc]
1001fb13:	push   esi
1001fb14:	call   0x1002212d
1001fb19:	mov    DWORD PTR [ebp+0xc],eax
1001fb1c:	mov    eax,DWORD PTR [esi+0xc]
1001fb1f:	test   al,0x82
1001fb21:	pop    ecx
1001fb22:	jne    0x1001fb3b
1001fb24:	call   0x1001cd0e
1001fb29:	mov    DWORD PTR [eax],0x9
1001fb2f:	or     DWORD PTR [esi+0xc],0x20
1001fb33:	or     eax,0xffffffff
1001fb36:	jmp    0x1001fc68
1001fb3b:	test   al,0x40
1001fb3d:	je     0x1001fb4c
1001fb3f:	call   0x1001cd0e
1001fb44:	mov    DWORD PTR [eax],0x22
1001fb4a:	jmp    0x1001fb2f
1001fb4c:	push   ebx
1001fb4d:	xor    ebx,ebx
1001fb4f:	test   al,0x1
1001fb51:	je     0x1001fb69
1001fb53:	test   al,0x10
1001fb55:	mov    DWORD PTR [esi+0x4],ebx
1001fb58:	je     0x1001fbe3
1001fb5e:	mov    ecx,DWORD PTR [esi+0x8]
1001fb61:	and    eax,0xfffffffe
1001fb64:	mov    DWORD PTR [esi],ecx
1001fb66:	mov    DWORD PTR [esi+0xc],eax
1001fb69:	mov    eax,DWORD PTR [esi+0xc]
1001fb6c:	and    eax,0xffffffef
1001fb6f:	or     eax,0x2
1001fb72:	test   ax,0x10c
1001fb76:	mov    DWORD PTR [esi+0xc],eax
1001fb79:	mov    DWORD PTR [esi+0x4],ebx
1001fb7c:	mov    DWORD PTR [ebp-0x4],ebx
1001fb7f:	jne    0x1001fbad
1001fb81:	call   0x1002128a
1001fb86:	add    eax,0x20
1001fb89:	cmp    esi,eax
1001fb8b:	je     0x1001fb99
1001fb8d:	call   0x1002128a
1001fb92:	add    eax,0x40
1001fb95:	cmp    esi,eax
1001fb97:	jne    0x1001fba6
1001fb99:	push   DWORD PTR [ebp+0xc]
1001fb9c:	call   0x1002432f
1001fba1:	test   eax,eax
1001fba3:	pop    ecx
1001fba4:	jne    0x1001fbad
1001fba6:	push   esi
1001fba7:	call   0x100242eb
1001fbac:	pop    ecx
1001fbad:	test   WORD PTR [esi+0xc],0x108
1001fbb3:	push   edi
1001fbb4:	je     0x1001fc3a
1001fbba:	mov    eax,DWORD PTR [esi+0x8]
1001fbbd:	mov    edi,DWORD PTR [esi]
1001fbbf:	lea    ecx,[eax+0x1]
1001fbc2:	mov    DWORD PTR [esi],ecx
1001fbc4:	mov    ecx,DWORD PTR [esi+0x18]
1001fbc7:	sub    edi,eax
1001fbc9:	dec    ecx
1001fbca:	cmp    edi,ebx
1001fbcc:	mov    DWORD PTR [esi+0x4],ecx
1001fbcf:	jle    0x1001fbee
1001fbd1:	push   edi
1001fbd2:	push   eax
1001fbd3:	push   DWORD PTR [ebp+0xc]
1001fbd6:	call   0x1002292f
1001fbdb:	add    esp,0xc
1001fbde:	mov    DWORD PTR [ebp-0x4],eax
1001fbe1:	jmp    0x1001fc30
1001fbe3:	or     eax,0x20
1001fbe6:	mov    DWORD PTR [esi+0xc],eax
1001fbe9:	or     eax,0xffffffff
1001fbec:	jmp    0x1001fc67
1001fbee:	mov    ecx,DWORD PTR [ebp+0xc]
1001fbf1:	cmp    ecx,0xffffffff
1001fbf4:	je     0x1001fc11
1001fbf6:	cmp    ecx,0xfffffffe
1001fbf9:	je     0x1001fc11
1001fbfb:	mov    eax,ecx
1001fbfd:	and    eax,0x1f
1001fc00:	mov    edx,ecx
1001fc02:	sar    edx,0x5
1001fc05:	shl    eax,0x6
1001fc08:	add    eax,DWORD PTR [edx*4+0x100cb080]
1001fc0f:	jmp    0x1001fc16
1001fc11:	mov    eax,0x100c8148
1001fc16:	test   BYTE PTR [eax+0x4],0x20
1001fc1a:	je     0x1001fc30
1001fc1c:	push   0x2
1001fc1e:	push   ebx
1001fc1f:	push   ebx
1001fc20:	push   ecx
1001fc21:	call   0x10020fbd
1001fc26:	and    eax,edx
1001fc28:	add    esp,0x10
1001fc2b:	cmp    eax,0xffffffff
1001fc2e:	je     0x1001fc55
1001fc30:	mov    eax,DWORD PTR [esi+0x8]
1001fc33:	mov    cl,BYTE PTR [ebp+0x8]
1001fc36:	mov    BYTE PTR [eax],cl
1001fc38:	jmp    0x1001fc50
1001fc3a:	xor    edi,edi
1001fc3c:	inc    edi
1001fc3d:	push   edi
1001fc3e:	lea    eax,[ebp+0x8]
1001fc41:	push   eax
1001fc42:	push   DWORD PTR [ebp+0xc]
1001fc45:	call   0x1002292f
1001fc4a:	add    esp,0xc
1001fc4d:	mov    DWORD PTR [ebp-0x4],eax
1001fc50:	cmp    DWORD PTR [ebp-0x4],edi
1001fc53:	je     0x1001fc5e
1001fc55:	or     DWORD PTR [esi+0xc],0x20
1001fc59:	or     eax,0xffffffff
1001fc5c:	jmp    0x1001fc66
1001fc5e:	mov    eax,DWORD PTR [ebp+0x8]
1001fc61:	and    eax,0xff
1001fc66:	pop    edi
1001fc67:	pop    ebx
1001fc68:	pop    esi
1001fc69:	leave  
1001fc6a:	ret    
1001fc6b:	test   BYTE PTR [eax+0xc],0x40
1001fc6f:	je     0x1001fc77
1001fc71:	cmp    DWORD PTR [eax+0x8],0x0
1001fc75:	je     0x1001fc8d
1001fc77:	push   eax
1001fc78:	push   DWORD PTR [esp+0x8]
1001fc7c:	call   0x1002438d
1001fc81:	cmp    ax,0xffff
1001fc85:	pop    ecx
1001fc86:	pop    ecx
1001fc87:	jne    0x1001fc8d
1001fc89:	or     DWORD PTR [esi],0xffffffff
1001fc8c:	ret    
1001fc8d:	inc    DWORD PTR [esi]
1001fc8f:	ret    
1001fc90:	push   ebp
1001fc91:	mov    ebp,esp
1001fc93:	push   esi
1001fc94:	mov    esi,eax
1001fc96:	jmp    0x1001fcac
1001fc98:	push   DWORD PTR [ebp+0x8]
1001fc9b:	mov    eax,DWORD PTR [ebp+0x10]
1001fc9e:	dec    DWORD PTR [ebp+0xc]
1001fca1:	call   0x1001fc6b
1001fca6:	cmp    DWORD PTR [esi],0xffffffff
1001fca9:	pop    ecx
1001fcaa:	je     0x1001fcb2
1001fcac:	cmp    DWORD PTR [ebp+0xc],0x0
1001fcb0:	jg     0x1001fc98
1001fcb2:	pop    esi
1001fcb3:	pop    ebp
1001fcb4:	ret    
1001fcb5:	test   BYTE PTR [edi+0xc],0x40
1001fcb9:	push   ebx
1001fcba:	push   esi
1001fcbb:	mov    esi,eax
1001fcbd:	mov    ebx,ecx
1001fcbf:	je     0x1001fcfa
1001fcc1:	cmp    DWORD PTR [edi+0x8],0x0
1001fcc5:	jne    0x1001fcfa
1001fcc7:	mov    eax,DWORD PTR [esp+0xc]
1001fccb:	add    DWORD PTR [esi],eax
1001fccd:	jmp    0x1001fd01
1001fccf:	movzx  eax,WORD PTR [ebx]
1001fcd2:	dec    DWORD PTR [esp+0xc]
1001fcd6:	push   eax
1001fcd7:	mov    eax,edi
1001fcd9:	call   0x1001fc6b
1001fcde:	inc    ebx
1001fcdf:	inc    ebx
1001fce0:	cmp    DWORD PTR [esi],0xffffffff
1001fce3:	pop    ecx
1001fce4:	jne    0x1001fcfa
1001fce6:	call   0x1001cd0e
1001fceb:	cmp    DWORD PTR [eax],0x2a
1001fcee:	jne    0x1001fd01
1001fcf0:	push   0x3f
1001fcf2:	mov    eax,edi
1001fcf4:	call   0x1001fc6b
1001fcf9:	pop    ecx
1001fcfa:	cmp    DWORD PTR [esp+0xc],0x0
1001fcff:	jg     0x1001fccf
1001fd01:	pop    esi
1001fd02:	pop    ebx
1001fd03:	ret    
1001fd04:	push   ebp
1001fd05:	lea    ebp,[esp-0x3f4]
1001fd0c:	sub    esp,0x474
1001fd12:	mov    eax,ds:0x100c7654
1001fd17:	xor    eax,ebp
1001fd19:	mov    DWORD PTR [ebp+0x3f0],eax
1001fd1f:	mov    eax,DWORD PTR [ebp+0x3fc]
1001fd25:	push   ebx
1001fd26:	mov    ebx,DWORD PTR [ebp+0x408]
1001fd2c:	push   esi
1001fd2d:	mov    esi,DWORD PTR [ebp+0x400]
1001fd33:	push   edi
1001fd34:	push   DWORD PTR [ebp+0x404]
1001fd3a:	xor    edi,edi
1001fd3c:	lea    ecx,[ebp-0x64]
1001fd3f:	mov    DWORD PTR [ebp-0x3c],eax
1001fd42:	mov    DWORD PTR [ebp-0x28],ebx
1001fd45:	mov    DWORD PTR [ebp-0x54],edi
1001fd48:	mov    DWORD PTR [ebp-0x14],edi
1001fd4b:	mov    DWORD PTR [ebp-0x38],edi
1001fd4e:	mov    DWORD PTR [ebp-0x18],edi
1001fd51:	mov    DWORD PTR [ebp-0x30],edi
1001fd54:	mov    DWORD PTR [ebp-0x48],edi
1001fd57:	mov    DWORD PTR [ebp-0x34],edi
1001fd5a:	call   0x1001924a
1001fd5f:	cmp    DWORD PTR [ebp-0x3c],edi
1001fd62:	jne    0x1001fd91
1001fd64:	call   0x1001cd0e
1001fd69:	push   edi
1001fd6a:	push   edi
1001fd6b:	push   edi
1001fd6c:	push   edi
1001fd6d:	mov    DWORD PTR [eax],0x16
1001fd73:	push   edi
1001fd74:	call   0x10018dbf
1001fd79:	add    esp,0x14
1001fd7c:	cmp    BYTE PTR [ebp-0x58],0x0
1001fd80:	je     0x1001fd89
1001fd82:	mov    eax,DWORD PTR [ebp-0x5c]
1001fd85:	and    DWORD PTR [eax+0x70],0xfffffffd
1001fd89:	or     eax,0xffffffff
1001fd8c:	jmp    0x100205dc
1001fd91:	cmp    esi,edi
1001fd93:	je     0x1001fd64
1001fd95:	movzx  edx,WORD PTR [esi]
1001fd98:	xor    ecx,ecx
1001fd9a:	cmp    dx,di
1001fd9d:	mov    DWORD PTR [ebp-0x2c],edi
1001fda0:	mov    DWORD PTR [ebp-0x20],edi
1001fda3:	mov    DWORD PTR [ebp-0x50],edi
1001fda6:	mov    DWORD PTR [ebp-0x24],edx
1001fda9:	je     0x100205cc
1001fdaf:	push   0x2
1001fdb1:	pop    edi
1001fdb2:	add    esi,edi
1001fdb4:	cmp    DWORD PTR [ebp-0x2c],0x0
1001fdb8:	mov    DWORD PTR [ebp-0x4c],esi
1001fdbb:	jl     0x100205cc
1001fdc1:	lea    eax,[edx-0x20]
1001fdc4:	cmp    ax,0x58
1001fdc8:	ja     0x1001fdd9
1001fdca:	movzx  eax,dx
1001fdcd:	movzx  eax,BYTE PTR [eax+0x100b3650]
1001fdd4:	and    eax,0xf
1001fdd7:	jmp    0x1001fddb
1001fdd9:	xor    eax,eax
1001fddb:	movsx  eax,BYTE PTR [ecx+eax*8+0x100b3670]
1001fde3:	push   0x7
1001fde5:	sar    eax,0x4
1001fde8:	pop    ecx
1001fde9:	cmp    eax,ecx
1001fdeb:	mov    DWORD PTR [ebp-0x68],eax
1001fdee:	ja     0x1002059a
1001fdf4:	jmp    DWORD PTR [eax*4+0x100205f4]
1001fdfb:	xor    eax,eax
1001fdfd:	or     DWORD PTR [ebp-0x18],0xffffffff
1001fe01:	mov    DWORD PTR [ebp-0x6c],eax
1001fe04:	mov    DWORD PTR [ebp-0x48],eax
1001fe07:	mov    DWORD PTR [ebp-0x38],eax
1001fe0a:	mov    DWORD PTR [ebp-0x30],eax
1001fe0d:	mov    DWORD PTR [ebp-0x14],eax
1001fe10:	mov    DWORD PTR [ebp-0x34],eax
1001fe13:	jmp    0x1002059a
1001fe18:	movzx  eax,dx
1001fe1b:	sub    eax,0x20
1001fe1e:	je     0x1001fe5e
1001fe20:	sub    eax,0x3
1001fe23:	je     0x1001fe52
1001fe25:	sub    eax,0x8
1001fe28:	je     0x1001fe49
1001fe2a:	sub    eax,edi
1001fe2c:	je     0x1001fe40
1001fe2e:	sub    eax,0x3
1001fe31:	jne    0x1002059a
1001fe37:	or     DWORD PTR [ebp-0x14],0x8
1001fe3b:	jmp    0x1002059a
1001fe40:	or     DWORD PTR [ebp-0x14],0x4
1001fe44:	jmp    0x1002059a
1001fe49:	or     DWORD PTR [ebp-0x14],0x1
1001fe4d:	jmp    0x1002059a
1001fe52:	or     DWORD PTR [ebp-0x14],0x80
1001fe59:	jmp    0x1002059a
1001fe5e:	or     DWORD PTR [ebp-0x14],edi
1001fe61:	jmp    0x1002059a
1001fe66:	cmp    dx,0x2a
1001fe6a:	jne    0x1001fe8c
1001fe6c:	add    ebx,0x4
1001fe6f:	mov    DWORD PTR [ebp-0x28],ebx
1001fe72:	mov    ebx,DWORD PTR [ebx-0x4]
1001fe75:	test   ebx,ebx
1001fe77:	mov    DWORD PTR [ebp-0x38],ebx
1001fe7a:	jge    0x1002059a
1001fe80:	or     DWORD PTR [ebp-0x14],0x4
1001fe84:	neg    DWORD PTR [ebp-0x38]
1001fe87:	jmp    0x1002059a
1001fe8c:	mov    eax,DWORD PTR [ebp-0x38]
1001fe8f:	imul   eax,eax,0xa
1001fe92:	movzx  ecx,dx
1001fe95:	lea    eax,[eax+ecx*1-0x30]
1001fe99:	mov    DWORD PTR [ebp-0x38],eax
1001fe9c:	jmp    0x1002059a
1001fea1:	and    DWORD PTR [ebp-0x18],0x0
1001fea5:	jmp    0x1002059a
1001feaa:	cmp    dx,0x2a
1001feae:	jne    0x1001fecd
1001feb0:	add    ebx,0x4
1001feb3:	mov    DWORD PTR [ebp-0x28],ebx
1001feb6:	mov    ebx,DWORD PTR [ebx-0x4]
1001feb9:	test   ebx,ebx
1001febb:	mov    DWORD PTR [ebp-0x18],ebx
1001febe:	jge    0x1002059a
1001fec4:	or     DWORD PTR [ebp-0x18],0xffffffff
1001fec8:	jmp    0x1002059a
1001fecd:	mov    eax,DWORD PTR [ebp-0x18]
1001fed0:	imul   eax,eax,0xa
1001fed3:	movzx  ecx,dx
1001fed6:	lea    eax,[eax+ecx*1-0x30]
1001feda:	mov    DWORD PTR [ebp-0x18],eax
1001fedd:	jmp    0x1002059a
1001fee2:	movzx  eax,dx
1001fee5:	cmp    eax,0x49
1001fee8:	je     0x1001ff32
1001feea:	cmp    eax,0x68
1001feed:	je     0x1001ff29
1001feef:	cmp    eax,0x6c
1001fef2:	je     0x1001ff09
1001fef4:	cmp    eax,0x77
1001fef7:	jne    0x1002059a
1001fefd:	or     DWORD PTR [ebp-0x14],0x800
1001ff04:	jmp    0x1002059a
1001ff09:	cmp    WORD PTR [esi],0x6c
1001ff0d:	jne    0x1001ff20
1001ff0f:	add    esi,edi
1001ff11:	or     DWORD PTR [ebp-0x14],0x1000
1001ff18:	mov    DWORD PTR [ebp-0x4c],esi
1001ff1b:	jmp    0x1002059a
1001ff20:	or     DWORD PTR [ebp-0x14],0x10
1001ff24:	jmp    0x1002059a
1001ff29:	or     DWORD PTR [ebp-0x14],0x20
1001ff2d:	jmp    0x1002059a
1001ff32:	movzx  eax,WORD PTR [esi]
1001ff35:	cmp    ax,0x36
1001ff39:	jne    0x1001ff54
1001ff3b:	cmp    WORD PTR [esi+0x2],0x34
1001ff40:	jne    0x1001ff54
1001ff42:	add    esi,0x4
1001ff45:	or     DWORD PTR [ebp-0x14],0x8000
1001ff4c:	mov    DWORD PTR [ebp-0x4c],esi
1001ff4f:	jmp    0x1002059a
1001ff54:	cmp    ax,0x33
1001ff58:	jne    0x1001ff73
1001ff5a:	cmp    WORD PTR [esi+0x2],0x32
1001ff5f:	jne    0x1001ff73
1001ff61:	add    esi,0x4
1001ff64:	and    DWORD PTR [ebp-0x14],0xffff7fff
1001ff6b:	mov    DWORD PTR [ebp-0x4c],esi
1001ff6e:	jmp    0x1002059a
1001ff73:	cmp    ax,0x64
1001ff77:	je     0x1002059a
1001ff7d:	cmp    ax,0x69
1001ff81:	je     0x1002059a
1001ff87:	cmp    ax,0x6f
1001ff8b:	je     0x1002059a
1001ff91:	cmp    ax,0x75
1001ff95:	je     0x1002059a
1001ff9b:	cmp    ax,0x78
1001ff9f:	je     0x1002059a
1001ffa5:	cmp    ax,0x58
1001ffa9:	je     0x1002059a
1001ffaf:	and    DWORD PTR [ebp-0x68],0x0
1001ffb3:	mov    eax,DWORD PTR [ebp-0x3c]
1001ffb6:	push   edx
1001ffb7:	lea    esi,[ebp-0x2c]
1001ffba:	mov    DWORD PTR [ebp-0x34],0x1
1001ffc1:	call   0x1001fc6b
1001ffc6:	jmp    0x10020599
1001ffcb:	movzx  eax,dx
1001ffce:	cmp    eax,0x64
1001ffd1:	jg     0x1002017e
1001ffd7:	je     0x100201fd
1001ffdd:	cmp    eax,0x53
1001ffe0:	jg     0x100200bd
1001ffe6:	je     0x10020047
1001ffe8:	sub    eax,0x41
1001ffeb:	je     0x1001fffd
1001ffed:	sub    eax,edi
1001ffef:	je     0x10020032
1001fff1:	sub    eax,edi
1001fff3:	je     0x1001fffd
1001fff5:	sub    eax,edi
1001fff7:	jne    0x1002047e
1001fffd:	add    edx,0x20
10020000:	mov    DWORD PTR [ebp-0x6c],0x1
10020007:	mov    DWORD PTR [ebp-0x24],edx
1002000a:	or     DWORD PTR [ebp-0x14],0x40
1002000e:	cmp    DWORD PTR [ebp-0x18],0x0
10020012:	lea    esi,[ebp-0x10]
10020015:	mov    eax,0x200
1002001a:	mov    DWORD PTR [ebp-0x1c],esi
1002001d:	mov    DWORD PTR [ebp-0x20],eax
10020020:	jge    0x10020221
10020026:	mov    DWORD PTR [ebp-0x18],0x6
1002002d:	jmp    0x1002026e
10020032:	test   WORD PTR [ebp-0x14],0x830
10020038:	jne    0x100200da
1002003e:	or     DWORD PTR [ebp-0x14],0x20
10020042:	jmp    0x100200da
10020047:	test   WORD PTR [ebp-0x14],0x830
1002004d:	jne    0x10020053
1002004f:	or     DWORD PTR [ebp-0x14],0x20
10020053:	mov    edi,DWORD PTR [ebp-0x18]
10020056:	cmp    edi,0xffffffff
10020059:	jne    0x10020060
1002005b:	mov    edi,0x7fffffff
10020060:	add    ebx,0x4
10020063:	test   BYTE PTR [ebp-0x14],0x20
10020067:	mov    DWORD PTR [ebp-0x28],ebx
1002006a:	mov    ebx,DWORD PTR [ebx-0x4]
1002006d:	mov    DWORD PTR [ebp-0x1c],ebx
10020070:	je     0x10020451
10020076:	test   ebx,ebx
10020078:	jne    0x10020082
1002007a:	mov    eax,ds:0x100c8490
1002007f:	mov    DWORD PTR [ebp-0x1c],eax
10020082:	and    DWORD PTR [ebp-0x20],0x0
10020086:	test   edi,edi
10020088:	mov    esi,DWORD PTR [ebp-0x1c]
1002008b:	jle    0x1002047e
10020091:	mov    al,BYTE PTR [esi]
10020093:	test   al,al
10020095:	je     0x1002047e
1002009b:	lea    ecx,[ebp-0x64]
1002009e:	movzx  eax,al
100200a1:	push   ecx
100200a2:	push   eax
100200a3:	call   0x10019c87
100200a8:	test   eax,eax
100200aa:	pop    ecx
100200ab:	pop    ecx
100200ac:	je     0x100200af
100200ae:	inc    esi
100200af:	inc    esi
100200b0:	inc    DWORD PTR [ebp-0x20]
100200b3:	cmp    DWORD PTR [ebp-0x20],edi
100200b6:	jl     0x10020091
100200b8:	jmp    0x1002047e
100200bd:	sub    eax,0x58
100200c0:	je     0x10020309
100200c6:	sub    eax,edi
100200c8:	je     0x10020131
100200ca:	sub    eax,ecx
100200cc:	je     0x1002000a
100200d2:	sub    eax,edi
100200d4:	jne    0x1002047e
100200da:	movzx  eax,WORD PTR [ebx]
100200dd:	add    ebx,0x4
100200e0:	xor    esi,esi
100200e2:	inc    esi
100200e3:	test   BYTE PTR [ebp-0x14],0x20
100200e7:	mov    DWORD PTR [ebp-0x34],esi
100200ea:	mov    DWORD PTR [ebp-0x28],ebx
100200ed:	mov    DWORD PTR [ebp-0x70],eax
100200f0:	je     0x1002011f
100200f2:	mov    BYTE PTR [ebp-0x40],al
100200f5:	lea    eax,[ebp-0x64]
100200f8:	push   eax
100200f9:	mov    eax,DWORD PTR [ebp-0x64]
100200fc:	mov    BYTE PTR [ebp-0x3f],0x0
10020100:	push   DWORD PTR [eax+0xac]
10020106:	lea    eax,[ebp-0x40]
10020109:	push   eax
1002010a:	lea    eax,[ebp-0x10]
1002010d:	push   eax
1002010e:	call   0x10024581
10020113:	add    esp,0x10
10020116:	test   eax,eax
10020118:	jge    0x10020123
1002011a:	mov    DWORD PTR [ebp-0x48],esi
1002011d:	jmp    0x10020123
1002011f:	mov    WORD PTR [ebp-0x10],ax
10020123:	lea    eax,[ebp-0x10]
10020126:	mov    DWORD PTR [ebp-0x1c],eax
10020129:	mov    DWORD PTR [ebp-0x20],esi
1002012c:	jmp    0x1002047e
10020131:	mov    eax,DWORD PTR [ebx]
10020133:	add    ebx,0x4
10020136:	test   eax,eax
10020138:	mov    DWORD PTR [ebp-0x28],ebx
1002013b:	je     0x1002016a
1002013d:	mov    ecx,DWORD PTR [eax+0x4]
10020140:	test   ecx,ecx
10020142:	je     0x1002016a
10020144:	test   WORD PTR [ebp-0x14],0x800
1002014a:	movsx  eax,WORD PTR [eax]
1002014d:	mov    DWORD PTR [ebp-0x1c],ecx
10020150:	je     0x10020161
10020152:	cdq    
10020153:	sub    eax,edx
10020155:	mov    DWORD PTR [ebp-0x34],0x1
1002015c:	jmp    0x10020479
10020161:	and    DWORD PTR [ebp-0x34],0x0
10020165:	jmp    0x1002047b
1002016a:	mov    eax,ds:0x100c8490
1002016f:	mov    DWORD PTR [ebp-0x1c],eax
10020172:	push   eax
10020173:	call   0x10019010
10020178:	pop    ecx
10020179:	jmp    0x1002047b
1002017e:	cmp    eax,0x70
10020181:	jg     0x1002030e
10020187:	je     0x10020302
1002018d:	cmp    eax,0x65
10020190:	jl     0x1002047e
10020196:	cmp    eax,0x67
10020199:	jle    0x1002000a
1002019f:	cmp    eax,0x69
100201a2:	je     0x100201fd
100201a4:	cmp    eax,0x6e
100201a7:	je     0x100201c8
100201a9:	cmp    eax,0x6f
100201ac:	jne    0x1002047e
100201b2:	test   BYTE PTR [ebp-0x14],0x80
100201b6:	mov    DWORD PTR [ebp-0x24],0x8
100201bd:	je     0x10020208
100201bf:	or     DWORD PTR [ebp-0x14],0x200
100201c6:	jmp    0x10020208
100201c8:	mov    esi,DWORD PTR [ebx]
100201ca:	add    ebx,0x4
100201cd:	mov    DWORD PTR [ebp-0x28],ebx
100201d0:	call   0x1002456b
100201d5:	test   eax,eax
100201d7:	je     0x100205b5
100201dd:	test   BYTE PTR [ebp-0x14],0x20
100201e1:	je     0x100201ec
100201e3:	mov    ax,WORD PTR [ebp-0x2c]
100201e7:	mov    WORD PTR [esi],ax
100201ea:	jmp    0x100201f1
100201ec:	mov    eax,DWORD PTR [ebp-0x2c]
100201ef:	mov    DWORD PTR [esi],eax
100201f1:	mov    DWORD PTR [ebp-0x48],0x1
100201f8:	jmp    0x10020587
100201fd:	or     DWORD PTR [ebp-0x14],0x40
10020201:	mov    DWORD PTR [ebp-0x24],0xa
10020208:	test   WORD PTR [ebp-0x14],0x8000
1002020e:	je     0x10020358
10020214:	mov    eax,DWORD PTR [ebx]
10020216:	mov    edx,DWORD PTR [ebx+0x4]
10020219:	add    ebx,0x8
1002021c:	jmp    0x10020391
10020221:	jne    0x10020232
10020223:	cmp    dx,0x67
10020227:	jne    0x1002026e
10020229:	mov    DWORD PTR [ebp-0x18],0x1
10020230:	jmp    0x1002026e
10020232:	cmp    DWORD PTR [ebp-0x18],eax
10020235:	jle    0x1002023a
10020237:	mov    DWORD PTR [ebp-0x18],eax
1002023a:	cmp    DWORD PTR [ebp-0x18],0xa3
10020241:	jle    0x1002026e
10020243:	mov    edi,DWORD PTR [ebp-0x18]
10020246:	add    edi,0x15d
1002024c:	push   edi
1002024d:	call   0x1001afaf
10020252:	test   eax,eax
10020254:	mov    edx,DWORD PTR [ebp-0x24]
10020257:	pop    ecx
10020258:	mov    DWORD PTR [ebp-0x50],eax
1002025b:	je     0x10020267
1002025d:	mov    DWORD PTR [ebp-0x1c],eax
10020260:	mov    DWORD PTR [ebp-0x20],edi
10020263:	mov    esi,eax
10020265:	jmp    0x1002026e
10020267:	mov    DWORD PTR [ebp-0x18],0xa3
1002026e:	mov    eax,DWORD PTR [ebx]
10020270:	add    ebx,0x8
10020273:	mov    DWORD PTR [ebp-0x78],eax
10020276:	mov    eax,DWORD PTR [ebx-0x4]
10020279:	mov    DWORD PTR [ebp-0x74],eax
1002027c:	lea    eax,[ebp-0x64]
1002027f:	push   eax
10020280:	push   DWORD PTR [ebp-0x6c]
10020283:	movsx  eax,dl
10020286:	push   DWORD PTR [ebp-0x18]
10020289:	mov    DWORD PTR [ebp-0x28],ebx
1002028c:	push   eax
1002028d:	push   DWORD PTR [ebp-0x20]
10020290:	lea    eax,[ebp-0x78]
10020293:	push   esi
10020294:	push   eax
10020295:	push   DWORD PTR ds:0x100c85d8
1002029b:	call   0x1001c30a
100202a0:	pop    ecx
100202a1:	call   eax
100202a3:	mov    ebx,DWORD PTR [ebp-0x14]
100202a6:	add    esp,0x1c
100202a9:	and    ebx,0x80
100202af:	je     0x100202cc
100202b1:	cmp    DWORD PTR [ebp-0x18],0x0
100202b5:	jne    0x100202cc
100202b7:	lea    eax,[ebp-0x64]
100202ba:	push   eax
100202bb:	push   esi
100202bc:	push   DWORD PTR ds:0x100c85e4
100202c2:	call   0x1001c30a
100202c7:	pop    ecx
100202c8:	call   eax
100202ca:	pop    ecx
100202cb:	pop    ecx
100202cc:	cmp    WORD PTR [ebp-0x24],0x67
100202d1:	jne    0x100202ec
100202d3:	test   ebx,ebx
100202d5:	jne    0x100202ec
100202d7:	lea    eax,[ebp-0x64]
100202da:	push   eax
100202db:	push   esi
100202dc:	push   DWORD PTR ds:0x100c85e0
100202e2:	call   0x1001c30a
100202e7:	pop    ecx
100202e8:	call   eax
100202ea:	pop    ecx
100202eb:	pop    ecx
100202ec:	cmp    BYTE PTR [esi],0x2d
100202ef:	jne    0x100202fc
100202f1:	or     DWORD PTR [ebp-0x14],0x100
100202f8:	inc    esi
100202f9:	mov    DWORD PTR [ebp-0x1c],esi
100202fc:	push   esi
100202fd:	jmp    0x10020173
10020302:	mov    DWORD PTR [ebp-0x18],0x8
10020309:	mov    DWORD PTR [ebp-0x54],ecx
1002030c:	jmp    0x1002032f
1002030e:	sub    eax,0x73
10020311:	je     0x10020053
10020317:	sub    eax,edi
10020319:	je     0x10020201
1002031f:	sub    eax,0x3
10020322:	jne    0x1002047e
10020328:	mov    DWORD PTR [ebp-0x54],0x27
1002032f:	test   BYTE PTR [ebp-0x14],0x80
10020333:	mov    DWORD PTR [ebp-0x24],0x10
1002033a:	je     0x10020208
10020340:	mov    eax,DWORD PTR [ebp-0x54]
10020343:	add    eax,0x51
10020346:	mov    WORD PTR [ebp-0x44],0x30
1002034c:	mov    WORD PTR [ebp-0x42],ax
10020350:	mov    DWORD PTR [ebp-0x30],edi
10020353:	jmp    0x10020208
10020358:	test   WORD PTR [ebp-0x14],0x1000
1002035e:	jne    0x10020214
10020364:	add    ebx,0x4
10020367:	test   BYTE PTR [ebp-0x14],0x20
1002036b:	je     0x10020383
1002036d:	test   BYTE PTR [ebp-0x14],0x40
10020371:	mov    DWORD PTR [ebp-0x28],ebx
10020374:	je     0x1002037c
10020376:	movsx  eax,WORD PTR [ebx-0x4]
1002037a:	jmp    0x10020380
1002037c:	movzx  eax,WORD PTR [ebx-0x4]
10020380:	cdq    
10020381:	jmp    0x10020394
10020383:	test   BYTE PTR [ebp-0x14],0x40
10020387:	mov    eax,DWORD PTR [ebx-0x4]
1002038a:	je     0x1002038f
1002038c:	cdq    
1002038d:	jmp    0x10020391
1002038f:	xor    edx,edx
10020391:	mov    DWORD PTR [ebp-0x28],ebx
10020394:	test   BYTE PTR [ebp-0x14],0x40
10020398:	je     0x100203b2
1002039a:	test   edx,edx
1002039c:	jg     0x100203b2
1002039e:	jl     0x100203a4
100203a0:	test   eax,eax
100203a2:	jae    0x100203b2
100203a4:	neg    eax
100203a6:	adc    edx,0x0
100203a9:	neg    edx
100203ab:	or     DWORD PTR [ebp-0x14],0x100
100203b2:	test   WORD PTR [ebp-0x14],0x9000
100203b8:	mov    ebx,edx
100203ba:	mov    edi,eax
100203bc:	jne    0x100203c0
100203be:	xor    ebx,ebx
100203c0:	cmp    DWORD PTR [ebp-0x18],0x0
100203c4:	jge    0x100203cf
100203c6:	mov    DWORD PTR [ebp-0x18],0x1
100203cd:	jmp    0x100203e0
100203cf:	and    DWORD PTR [ebp-0x14],0xfffffff7
100203d3:	mov    eax,0x200
100203d8:	cmp    DWORD PTR [ebp-0x18],eax
100203db:	jle    0x100203e0
100203dd:	mov    DWORD PTR [ebp-0x18],eax
100203e0:	mov    eax,edi
100203e2:	or     eax,ebx
100203e4:	jne    0x100203e9
100203e6:	and    DWORD PTR [ebp-0x30],eax
100203e9:	lea    esi,[ebp+0x1ef]
100203ef:	mov    eax,DWORD PTR [ebp-0x18]
100203f2:	dec    DWORD PTR [ebp-0x18]
100203f5:	test   eax,eax
100203f7:	jg     0x100203ff
100203f9:	mov    eax,edi
100203fb:	or     eax,ebx
100203fd:	je     0x10020423
100203ff:	mov    eax,DWORD PTR [ebp-0x24]
10020402:	cdq    
10020403:	push   edx
10020404:	push   eax
10020405:	push   ebx
10020406:	push   edi
10020407:	call   0x10021580
1002040c:	add    ecx,0x30
1002040f:	cmp    ecx,0x39
10020412:	mov    DWORD PTR [ebp-0x7c],ebx
10020415:	mov    edi,eax
10020417:	mov    ebx,edx
10020419:	jle    0x1002041e
1002041b:	add    ecx,DWORD PTR [ebp-0x54]
1002041e:	mov    BYTE PTR [esi],cl
10020420:	dec    esi
10020421:	jmp    0x100203ef
10020423:	lea    eax,[ebp+0x1ef]
10020429:	sub    eax,esi
1002042b:	inc    esi
1002042c:	test   WORD PTR [ebp-0x14],0x200
10020432:	mov    DWORD PTR [ebp-0x20],eax
10020435:	mov    DWORD PTR [ebp-0x1c],esi
10020438:	je     0x1002047e
1002043a:	test   eax,eax
1002043c:	je     0x10020445
1002043e:	mov    ecx,esi
10020440:	cmp    BYTE PTR [ecx],0x30
10020443:	je     0x1002047e
10020445:	dec    DWORD PTR [ebp-0x1c]
10020448:	mov    ecx,DWORD PTR [ebp-0x1c]
1002044b:	mov    BYTE PTR [ecx],0x30
1002044e:	inc    eax
1002044f:	jmp    0x1002047b
10020451:	test   ebx,ebx
10020453:	jne    0x1002045d
10020455:	mov    eax,ds:0x100c8494
1002045a:	mov    DWORD PTR [ebp-0x1c],eax
1002045d:	mov    eax,DWORD PTR [ebp-0x1c]
10020460:	mov    DWORD PTR [ebp-0x34],0x1
10020467:	jmp    0x10020472
10020469:	dec    edi
1002046a:	cmp    WORD PTR [eax],0x0
1002046e:	je     0x10020476
10020470:	inc    eax
10020471:	inc    eax
10020472:	test   edi,edi
10020474:	jne    0x10020469
10020476:	sub    eax,DWORD PTR [ebp-0x1c]
10020479:	sar    eax,1
1002047b:	mov    DWORD PTR [ebp-0x20],eax
1002047e:	cmp    DWORD PTR [ebp-0x48],0x0
10020482:	jne    0x10020587
10020488:	mov    eax,DWORD PTR [ebp-0x14]
1002048b:	test   al,0x40
1002048d:	je     0x100204ba
1002048f:	test   ax,0x100
10020493:	je     0x1002049d
10020495:	mov    WORD PTR [ebp-0x44],0x2d
1002049b:	jmp    0x100204b3
1002049d:	test   al,0x1
1002049f:	je     0x100204a9
100204a1:	mov    WORD PTR [ebp-0x44],0x2b
100204a7:	jmp    0x100204b3
100204a9:	test   al,0x2
100204ab:	je     0x100204ba
100204ad:	mov    WORD PTR [ebp-0x44],0x20
100204b3:	mov    DWORD PTR [ebp-0x30],0x1
100204ba:	mov    ebx,DWORD PTR [ebp-0x38]
100204bd:	mov    esi,DWORD PTR [ebp-0x20]
100204c0:	sub    ebx,esi
100204c2:	sub    ebx,DWORD PTR [ebp-0x30]
100204c5:	test   BYTE PTR [ebp-0x14],0xc
100204c9:	jne    0x100204dc
100204cb:	push   DWORD PTR [ebp-0x3c]
100204ce:	lea    eax,[ebp-0x2c]
100204d1:	push   ebx
100204d2:	push   0x20
100204d4:	call   0x1001fc90
100204d9:	add    esp,0xc
100204dc:	push   DWORD PTR [ebp-0x30]
100204df:	mov    edi,DWORD PTR [ebp-0x3c]
100204e2:	lea    eax,[ebp-0x2c]
100204e5:	lea    ecx,[ebp-0x44]
100204e8:	call   0x1001fcb5
100204ed:	test   BYTE PTR [ebp-0x14],0x8
100204f1:	pop    ecx
100204f2:	je     0x10020509
100204f4:	test   BYTE PTR [ebp-0x14],0x4
100204f8:	jne    0x10020509
100204fa:	push   edi
100204fb:	push   ebx
100204fc:	push   0x30
100204fe:	lea    eax,[ebp-0x2c]
10020501:	call   0x1001fc90
10020506:	add    esp,0xc
10020509:	cmp    DWORD PTR [ebp-0x34],0x0
1002050d:	jne    0x1002055d
1002050f:	test   esi,esi
10020511:	jle    0x1002055d
10020513:	mov    edi,DWORD PTR [ebp-0x1c]
10020516:	mov    DWORD PTR [ebp-0x24],esi
10020519:	dec    DWORD PTR [ebp-0x24]
1002051c:	lea    eax,[ebp-0x64]
1002051f:	push   eax
10020520:	mov    eax,DWORD PTR [ebp-0x64]
10020523:	push   DWORD PTR [eax+0xac]
10020529:	lea    eax,[ebp-0x70]
1002052c:	push   edi
1002052d:	push   eax
1002052e:	call   0x10024581
10020533:	add    esp,0x10
10020536:	test   eax,eax
10020538:	mov    DWORD PTR [ebp-0x7c],eax
1002053b:	jle    0x10020557
1002053d:	push   DWORD PTR [ebp-0x70]
10020540:	mov    eax,DWORD PTR [ebp-0x3c]
10020543:	lea    esi,[ebp-0x2c]
10020546:	call   0x1001fc6b
1002054b:	add    edi,DWORD PTR [ebp-0x7c]
1002054e:	cmp    DWORD PTR [ebp-0x24],0x0
10020552:	pop    ecx
10020553:	jg     0x10020519
10020555:	jmp    0x1002056a
10020557:	or     DWORD PTR [ebp-0x2c],0xffffffff
1002055b:	jmp    0x1002056a
1002055d:	mov    ecx,DWORD PTR [ebp-0x1c]
10020560:	push   esi
10020561:	lea    eax,[ebp-0x2c]
10020564:	call   0x1001fcb5
10020569:	pop    ecx
1002056a:	cmp    DWORD PTR [ebp-0x2c],0x0
1002056e:	jl     0x10020587
10020570:	test   BYTE PTR [ebp-0x14],0x4
10020574:	je     0x10020587
10020576:	push   DWORD PTR [ebp-0x3c]
10020579:	lea    eax,[ebp-0x2c]
1002057c:	push   ebx
1002057d:	push   0x20
1002057f:	call   0x1001fc90
10020584:	add    esp,0xc
10020587:	cmp    DWORD PTR [ebp-0x50],0x0
1002058b:	je     0x1002059a
1002058d:	push   DWORD PTR [ebp-0x50]
10020590:	call   0x100197d5
10020595:	and    DWORD PTR [ebp-0x50],0x0
10020599:	pop    ecx
1002059a:	mov    esi,DWORD PTR [ebp-0x4c]
1002059d:	movzx  eax,WORD PTR [esi]
100205a0:	test   ax,ax
100205a3:	mov    DWORD PTR [ebp-0x24],eax
100205a6:	je     0x100205cc
100205a8:	mov    ecx,DWORD PTR [ebp-0x68]
100205ab:	mov    ebx,DWORD PTR [ebp-0x28]
100205ae:	mov    edx,eax
100205b0:	jmp    0x1001fdaf
100205b5:	call   0x1001cd0e
100205ba:	mov    DWORD PTR [eax],0x16
100205c0:	xor    eax,eax
100205c2:	push   eax
100205c3:	push   eax
100205c4:	push   eax
100205c5:	push   eax
100205c6:	push   eax
100205c7:	jmp    0x1001fd74
100205cc:	cmp    BYTE PTR [ebp-0x58],0x0
100205d0:	je     0x100205d9
100205d2:	mov    eax,DWORD PTR [ebp-0x5c]
100205d5:	and    DWORD PTR [eax+0x70],0xfffffffd
100205d9:	mov    eax,DWORD PTR [ebp-0x2c]
100205dc:	mov    ecx,DWORD PTR [ebp+0x3f0]
100205e2:	pop    edi
100205e3:	pop    esi
100205e4:	xor    ecx,ebp
100205e6:	pop    ebx
100205e7:	call   0x10018773
100205ec:	add    ebp,0x3f4
100205f2:	leave  
100205f3:	ret    
100205f4:	mov    bl,0xff
100205f6:	add    DWORD PTR [eax],edx
100205f8:	sti    
100205f9:	std    
100205fa:	add    DWORD PTR [eax],edx
100205fc:	sbb    dh,bh
100205fe:	add    DWORD PTR [eax],edx
10020600:	data16 inc BYTE PTR [ecx]
10020603:	adc    BYTE PTR [ecx-0x55effe02],ah
10020609:	inc    BYTE PTR [ecx]
1002060b:	adc    dl,ah
1002060d:	inc    BYTE PTR [ecx]
1002060f:	adc    bl,cl
10020611:	inc    DWORD PTR [ecx]
10020613:	adc    BYTE PTR [ebp-0x73],dl
10020616:	lods   al,BYTE PTR ds:[esi]
10020617:	and    al,0xc
10020619:	cld    
1002061a:	(bad)  
1002061b:	inc    DWORD PTR [ecx+0x474ec]
10020621:	add    BYTE PTR [ecx+0x100c7654],ah
10020627:	xor    eax,ebp
10020629:	mov    DWORD PTR [ebp+0x3f0],eax
1002062f:	push   ebx
10020630:	mov    ebx,DWORD PTR [ebp+0x408]
10020636:	push   esi
10020637:	mov    esi,DWORD PTR [ebp+0x3fc]
1002063d:	xor    eax,eax
1002063f:	push   edi
10020640:	push   DWORD PTR [ebp+0x404]
10020646:	mov    edi,DWORD PTR [ebp+0x400]
1002064c:	lea    ecx,[ebp-0x58]
1002064f:	mov    DWORD PTR [ebp-0x48],esi
10020652:	mov    DWORD PTR [ebp-0x24],ebx
10020655:	mov    DWORD PTR [ebp-0x60],eax
10020658:	mov    DWORD PTR [ebp-0x14],eax
1002065b:	mov    DWORD PTR [ebp-0x38],eax
1002065e:	mov    DWORD PTR [ebp-0x18],eax
10020661:	mov    DWORD PTR [ebp-0x30],eax
10020664:	mov    DWORD PTR [ebp-0x5c],eax
10020667:	mov    DWORD PTR [ebp-0x34],eax
1002066a:	call   0x1001924a
1002066f:	test   esi,esi
10020671:	jne    0x100206a2
10020673:	call   0x1001cd0e
10020678:	mov    DWORD PTR [eax],0x16
1002067e:	xor    eax,eax
10020680:	push   eax
10020681:	push   eax
10020682:	push   eax
10020683:	push   eax
10020684:	push   eax
10020685:	call   0x10018dbf
1002068a:	add    esp,0x14
1002068d:	cmp    BYTE PTR [ebp-0x4c],0x0
10020691:	je     0x1002069a
10020693:	mov    eax,DWORD PTR [ebp-0x50]
10020696:	and    DWORD PTR [eax+0x70],0xfffffffd
1002069a:	or     eax,0xffffffff
1002069d:	jmp    0x10020ef8
100206a2:	xor    esi,esi
100206a4:	cmp    edi,esi
100206a6:	jne    0x100206ba
100206a8:	call   0x1001cd0e
100206ad:	push   esi
100206ae:	push   esi
100206af:	push   esi
100206b0:	push   esi
100206b1:	mov    DWORD PTR [eax],0x16
100206b7:	push   esi
100206b8:	jmp    0x10020685
100206ba:	movzx  ecx,WORD PTR [edi]
100206bd:	cmp    cx,si
100206c0:	mov    DWORD PTR [ebp-0x2c],esi
100206c3:	mov    DWORD PTR [ebp-0x20],esi
100206c6:	mov    DWORD PTR [ebp-0x40],esi
100206c9:	mov    DWORD PTR [ebp-0x64],esi
100206cc:	mov    DWORD PTR [ebp-0x28],ecx
100206cf:	je     0x10020ee8
100206d5:	push   0x2
100206d7:	pop    esi
100206d8:	add    edi,esi
100206da:	xor    eax,eax
100206dc:	cmp    DWORD PTR [ebp-0x2c],eax
100206df:	mov    DWORD PTR [ebp-0x6c],edi
100206e2:	jl     0x10020ed8
100206e8:	lea    edx,[ecx-0x20]
100206eb:	cmp    dx,0x58
100206ef:	ja     0x100206fe
100206f1:	movzx  eax,cx
100206f4:	movzx  eax,BYTE PTR [eax+0x100b36b8]
100206fb:	and    eax,0xf
100206fe:	mov    edx,DWORD PTR [ebp-0x40]
10020701:	imul   eax,eax,0x9
10020704:	movzx  eax,BYTE PTR [eax+edx*1+0x100b36d8]
1002070c:	push   0x8
1002070e:	shr    eax,0x4
10020711:	pop    edx
10020712:	cmp    eax,edx
10020714:	mov    DWORD PTR [ebp-0x40],eax
10020717:	je     0x10020673
1002071d:	cmp    eax,0x7
10020720:	ja     0x10020ec0
10020726:	jmp    DWORD PTR [eax*4+0x10020f10]
1002072d:	xor    eax,eax
1002072f:	or     DWORD PTR [ebp-0x18],0xffffffff
10020733:	mov    DWORD PTR [ebp-0x68],eax
10020736:	mov    DWORD PTR [ebp-0x5c],eax
10020739:	mov    DWORD PTR [ebp-0x38],eax
1002073c:	mov    DWORD PTR [ebp-0x30],eax
1002073f:	mov    DWORD PTR [ebp-0x14],eax
10020742:	mov    DWORD PTR [ebp-0x34],eax
10020745:	jmp    0x10020ec6
1002074a:	movzx  eax,cx
1002074d:	sub    eax,0x20
10020750:	je     0x1002078e
10020752:	sub    eax,0x3
10020755:	je     0x10020782
10020757:	sub    eax,edx
10020759:	je     0x10020779
1002075b:	sub    eax,esi
1002075d:	je     0x10020770
1002075f:	sub    eax,0x3
10020762:	jne    0x10020ec0
10020768:	or     DWORD PTR [ebp-0x14],edx
1002076b:	jmp    0x10020ec6
10020770:	or     DWORD PTR [ebp-0x14],0x4
10020774:	jmp    0x10020ec6
10020779:	or     DWORD PTR [ebp-0x14],0x1
1002077d:	jmp    0x10020ec6
10020782:	or     DWORD PTR [ebp-0x14],0x80
10020789:	jmp    0x10020ec6
1002078e:	or     DWORD PTR [ebp-0x14],esi
10020791:	jmp    0x10020ec6
10020796:	cmp    cx,0x2a
1002079a:	jne    0x100207bb
1002079c:	mov    eax,DWORD PTR [ebx]
1002079e:	add    ebx,0x4
100207a1:	test   eax,eax
100207a3:	mov    DWORD PTR [ebp-0x24],ebx
100207a6:	mov    DWORD PTR [ebp-0x38],eax
100207a9:	jge    0x10020ec6
100207af:	or     DWORD PTR [ebp-0x14],0x4
100207b3:	neg    DWORD PTR [ebp-0x38]
100207b6:	jmp    0x10020ec6
100207bb:	mov    eax,DWORD PTR [ebp-0x38]
100207be:	imul   eax,eax,0xa
100207c1:	movzx  ecx,cx
100207c4:	lea    eax,[eax+ecx*1-0x30]
100207c8:	mov    DWORD PTR [ebp-0x38],eax
100207cb:	jmp    0x10020ec6
100207d0:	and    DWORD PTR [ebp-0x18],0x0
100207d4:	jmp    0x10020ec6
100207d9:	cmp    cx,0x2a
100207dd:	jne    0x100207fb
100207df:	mov    eax,DWORD PTR [ebx]
100207e1:	add    ebx,0x4
100207e4:	test   eax,eax
100207e6:	mov    DWORD PTR [ebp-0x24],ebx
100207e9:	mov    DWORD PTR [ebp-0x18],eax
100207ec:	jge    0x10020ec6
100207f2:	or     DWORD PTR [ebp-0x18],0xffffffff
100207f6:	jmp    0x10020ec6
100207fb:	mov    eax,DWORD PTR [ebp-0x18]
100207fe:	imul   eax,eax,0xa
10020801:	movzx  ecx,cx
10020804:	lea    eax,[eax+ecx*1-0x30]
10020808:	mov    DWORD PTR [ebp-0x18],eax
1002080b:	jmp    0x10020ec6
10020810:	movzx  eax,cx
10020813:	cmp    eax,0x49
10020816:	je     0x1002085d
10020818:	cmp    eax,0x68
1002081b:	je     0x10020854
1002081d:	cmp    eax,0x6c
10020820:	je     0x10020837
10020822:	cmp    eax,0x77
10020825:	jne    0x10020ec6
1002082b:	or     DWORD PTR [ebp-0x14],0x800
10020832:	jmp    0x10020ec6
10020837:	cmp    WORD PTR [edi],0x6c
1002083b:	jne    0x1002084b
1002083d:	add    edi,esi
1002083f:	or     DWORD PTR [ebp-0x14],0x1000
10020846:	jmp    0x10020ec6
1002084b:	or     DWORD PTR [ebp-0x14],0x10
1002084f:	jmp    0x10020ec6
10020854:	or     DWORD PTR [ebp-0x14],0x20
10020858:	jmp    0x10020ec6
1002085d:	movzx  eax,WORD PTR [edi]
10020860:	cmp    ax,0x36
10020864:	jne    0x1002087c
10020866:	cmp    WORD PTR [edi+0x2],0x34
1002086b:	jne    0x1002087c
1002086d:	add    edi,0x4
10020870:	or     DWORD PTR [ebp-0x14],0x8000
10020877:	jmp    0x10020ec6
1002087c:	cmp    ax,0x33
10020880:	jne    0x10020898
10020882:	cmp    WORD PTR [edi+0x2],0x32
10020887:	jne    0x10020898
10020889:	add    edi,0x4
1002088c:	and    DWORD PTR [ebp-0x14],0xffff7fff
10020893:	jmp    0x10020ec6
10020898:	cmp    ax,0x64
1002089c:	je     0x10020ec6
100208a2:	cmp    ax,0x69
100208a6:	je     0x10020ec6
100208ac:	cmp    ax,0x6f
100208b0:	je     0x10020ec6
100208b6:	cmp    ax,0x75
100208ba:	je     0x10020ec6
100208c0:	cmp    ax,0x78
100208c4:	je     0x10020ec6
100208ca:	cmp    ax,0x58
100208ce:	je     0x10020ec6
100208d4:	and    DWORD PTR [ebp-0x40],0x0
100208d8:	mov    eax,DWORD PTR [ebp-0x48]
100208db:	push   ecx
100208dc:	lea    esi,[ebp-0x2c]
100208df:	mov    DWORD PTR [ebp-0x34],0x1
100208e6:	call   0x1001fc6b
100208eb:	pop    ecx
100208ec:	jmp    0x10020ec6
100208f1:	movzx  eax,cx
100208f4:	cmp    eax,0x64
100208f7:	jg     0x10020aa5
100208fd:	je     0x10020b20
10020903:	cmp    eax,0x53
10020906:	jg     0x100209e3
1002090c:	je     0x1002096d
1002090e:	sub    eax,0x41
10020911:	je     0x10020923
10020913:	sub    eax,esi
10020915:	je     0x10020958
10020917:	sub    eax,esi
10020919:	je     0x10020923
1002091b:	sub    eax,esi
1002091d:	jne    0x10020da4
10020923:	add    ecx,0x20
10020926:	mov    DWORD PTR [ebp-0x68],0x1
1002092d:	mov    DWORD PTR [ebp-0x28],ecx
10020930:	or     DWORD PTR [ebp-0x14],0x40
10020934:	cmp    DWORD PTR [ebp-0x18],0x0
10020938:	lea    esi,[ebp-0x10]
1002093b:	mov    eax,0x200
10020940:	mov    DWORD PTR [ebp-0x1c],esi
10020943:	mov    DWORD PTR [ebp-0x20],eax
10020946:	jge    0x10020b44
1002094c:	mov    DWORD PTR [ebp-0x18],0x6
10020953:	jmp    0x10020b94
10020958:	test   WORD PTR [ebp-0x14],0x830
1002095e:	jne    0x10020a01
10020964:	or     DWORD PTR [ebp-0x14],0x20
10020968:	jmp    0x10020a01
1002096d:	test   WORD PTR [ebp-0x14],0x830
10020973:	jne    0x10020979
10020975:	or     DWORD PTR [ebp-0x14],0x20
10020979:	mov    edi,DWORD PTR [ebp-0x18]
1002097c:	cmp    edi,0xffffffff
1002097f:	jne    0x10020986
10020981:	mov    edi,0x7fffffff
10020986:	add    ebx,0x4
10020989:	test   BYTE PTR [ebp-0x14],0x20
1002098d:	mov    DWORD PTR [ebp-0x24],ebx
10020990:	mov    ebx,DWORD PTR [ebx-0x4]
10020993:	mov    DWORD PTR [ebp-0x1c],ebx
10020996:	je     0x10020d77
1002099c:	test   ebx,ebx
1002099e:	jne    0x100209a8
100209a0:	mov    eax,ds:0x100c8490
100209a5:	mov    DWORD PTR [ebp-0x1c],eax
100209a8:	and    DWORD PTR [ebp-0x20],0x0
100209ac:	test   edi,edi
100209ae:	mov    esi,DWORD PTR [ebp-0x1c]
100209b1:	jle    0x10020da4
100209b7:	mov    al,BYTE PTR [esi]
100209b9:	test   al,al
100209bb:	je     0x10020da4
100209c1:	lea    ecx,[ebp-0x58]
100209c4:	movzx  eax,al
100209c7:	push   ecx
100209c8:	push   eax
100209c9:	call   0x10019c87
100209ce:	test   eax,eax
100209d0:	pop    ecx
100209d1:	pop    ecx
100209d2:	je     0x100209d5
100209d4:	inc    esi
100209d5:	inc    esi
100209d6:	inc    DWORD PTR [ebp-0x20]
100209d9:	cmp    DWORD PTR [ebp-0x20],edi
100209dc:	jl     0x100209b7
100209de:	jmp    0x10020da4
100209e3:	sub    eax,0x58
100209e6:	je     0x10020c2b
100209ec:	sub    eax,esi
100209ee:	je     0x10020a58
100209f0:	sub    eax,0x7
100209f3:	je     0x10020930
100209f9:	sub    eax,esi
100209fb:	jne    0x10020da4
10020a01:	movzx  eax,WORD PTR [ebx]
10020a04:	add    ebx,0x4
10020a07:	xor    esi,esi
10020a09:	inc    esi
10020a0a:	test   BYTE PTR [ebp-0x14],0x20
10020a0e:	mov    DWORD PTR [ebp-0x34],esi
10020a11:	mov    DWORD PTR [ebp-0x24],ebx
10020a14:	mov    DWORD PTR [ebp-0x70],eax
10020a17:	je     0x10020a46
10020a19:	mov    BYTE PTR [ebp-0x44],al
10020a1c:	lea    eax,[ebp-0x58]
10020a1f:	push   eax
10020a20:	mov    eax,DWORD PTR [ebp-0x58]
10020a23:	mov    BYTE PTR [ebp-0x43],0x0
10020a27:	push   DWORD PTR [eax+0xac]
10020a2d:	lea    eax,[ebp-0x44]
10020a30:	push   eax
10020a31:	lea    eax,[ebp-0x10]
10020a34:	push   eax
10020a35:	call   0x10024581
10020a3a:	add    esp,0x10
10020a3d:	test   eax,eax
10020a3f:	jge    0x10020a4a
10020a41:	mov    DWORD PTR [ebp-0x5c],esi
10020a44:	jmp    0x10020a4a
10020a46:	mov    WORD PTR [ebp-0x10],ax
10020a4a:	lea    eax,[ebp-0x10]
10020a4d:	mov    DWORD PTR [ebp-0x1c],eax
10020a50:	mov    DWORD PTR [ebp-0x20],esi
10020a53:	jmp    0x10020da4
10020a58:	mov    eax,DWORD PTR [ebx]
10020a5a:	add    ebx,0x4
10020a5d:	test   eax,eax
10020a5f:	mov    DWORD PTR [ebp-0x24],ebx
10020a62:	je     0x10020a91
10020a64:	mov    ecx,DWORD PTR [eax+0x4]
10020a67:	test   ecx,ecx
10020a69:	je     0x10020a91
10020a6b:	test   WORD PTR [ebp-0x14],0x800
10020a71:	movsx  eax,WORD PTR [eax]
10020a74:	mov    DWORD PTR [ebp-0x1c],ecx
10020a77:	je     0x10020a88
10020a79:	cdq    
10020a7a:	sub    eax,edx
10020a7c:	mov    DWORD PTR [ebp-0x34],0x1
10020a83:	jmp    0x10020d9f
10020a88:	and    DWORD PTR [ebp-0x34],0x0
10020a8c:	jmp    0x10020da1
10020a91:	mov    eax,ds:0x100c8490
10020a96:	mov    DWORD PTR [ebp-0x1c],eax
10020a99:	push   eax
10020a9a:	call   0x10019010
10020a9f:	pop    ecx
10020aa0:	jmp    0x10020da1
10020aa5:	cmp    eax,0x70
10020aa8:	jg     0x10020c34
10020aae:	je     0x10020c28
10020ab4:	cmp    eax,0x65
10020ab7:	jl     0x10020da4
10020abd:	cmp    eax,0x67
10020ac0:	jle    0x10020930
10020ac6:	cmp    eax,0x69
10020ac9:	je     0x10020b20
10020acb:	cmp    eax,0x6e
10020ace:	je     0x10020aeb
10020ad0:	cmp    eax,0x6f
10020ad3:	jne    0x10020da4
10020ad9:	test   BYTE PTR [ebp-0x14],0x80
10020add:	mov    DWORD PTR [ebp-0x28],edx
10020ae0:	je     0x10020b2b
10020ae2:	or     DWORD PTR [ebp-0x14],0x200
10020ae9:	jmp    0x10020b2b
10020aeb:	mov    esi,DWORD PTR [ebx]
10020aed:	add    ebx,0x4
10020af0:	mov    DWORD PTR [ebp-0x24],ebx
10020af3:	call   0x1002456b
10020af8:	test   eax,eax
10020afa:	je     0x10020673
10020b00:	test   BYTE PTR [ebp-0x14],0x20
10020b04:	je     0x10020b0f
10020b06:	mov    ax,WORD PTR [ebp-0x2c]
10020b0a:	mov    WORD PTR [esi],ax
10020b0d:	jmp    0x10020b14
10020b0f:	mov    eax,DWORD PTR [ebp-0x2c]
10020b12:	mov    DWORD PTR [esi],eax
10020b14:	mov    DWORD PTR [ebp-0x5c],0x1
10020b1b:	jmp    0x10020ead
10020b20:	or     DWORD PTR [ebp-0x14],0x40
10020b24:	mov    DWORD PTR [ebp-0x28],0xa
10020b2b:	test   WORD PTR [ebp-0x14],0x8000
10020b31:	je     0x10020c7e
10020b37:	add    ebx,edx
10020b39:	mov    eax,DWORD PTR [ebx-0x8]
10020b3c:	mov    edx,DWORD PTR [ebx-0x4]
10020b3f:	jmp    0x10020cb7
10020b44:	jne    0x10020b55
10020b46:	cmp    cx,0x67
10020b4a:	jne    0x10020b94
10020b4c:	mov    DWORD PTR [ebp-0x18],0x1
10020b53:	jmp    0x10020b94
10020b55:	cmp    DWORD PTR [ebp-0x18],eax
10020b58:	jle    0x10020b5d
10020b5a:	mov    DWORD PTR [ebp-0x18],eax
10020b5d:	cmp    DWORD PTR [ebp-0x18],0xa3
10020b64:	jle    0x10020b94
10020b66:	mov    edi,DWORD PTR [ebp-0x18]
10020b69:	add    edi,0x15d
10020b6f:	push   edi
10020b70:	call   0x1001afaf
10020b75:	test   eax,eax
10020b77:	pop    ecx
10020b78:	mov    ecx,DWORD PTR [ebp-0x28]
10020b7b:	push   0x8
10020b7d:	mov    DWORD PTR [ebp-0x64],eax
10020b80:	pop    edx
10020b81:	je     0x10020b8d
10020b83:	mov    DWORD PTR [ebp-0x1c],eax
10020b86:	mov    DWORD PTR [ebp-0x20],edi
10020b89:	mov    esi,eax
10020b8b:	jmp    0x10020b94
10020b8d:	mov    DWORD PTR [ebp-0x18],0xa3
10020b94:	add    ebx,edx
10020b96:	mov    eax,DWORD PTR [ebx-0x8]
10020b99:	mov    DWORD PTR [ebp-0x78],eax
10020b9c:	mov    eax,DWORD PTR [ebx-0x4]
10020b9f:	mov    DWORD PTR [ebp-0x74],eax
10020ba2:	lea    eax,[ebp-0x58]
10020ba5:	push   eax
10020ba6:	push   DWORD PTR [ebp-0x68]
10020ba9:	movsx  eax,cl
10020bac:	push   DWORD PTR [ebp-0x18]
10020baf:	mov    DWORD PTR [ebp-0x24],ebx
10020bb2:	push   eax
10020bb3:	push   DWORD PTR [ebp-0x20]
10020bb6:	lea    eax,[ebp-0x78]
10020bb9:	push   esi
10020bba:	push   eax
10020bbb:	push   DWORD PTR ds:0x100c85d8
10020bc1:	call   0x1001c30a
10020bc6:	pop    ecx
10020bc7:	call   eax
10020bc9:	mov    ebx,DWORD PTR [ebp-0x14]
10020bcc:	add    esp,0x1c
10020bcf:	and    ebx,0x80
10020bd5:	je     0x10020bf2
10020bd7:	cmp    DWORD PTR [ebp-0x18],0x0
10020bdb:	jne    0x10020bf2
10020bdd:	lea    eax,[ebp-0x58]
10020be0:	push   eax
10020be1:	push   esi
10020be2:	push   DWORD PTR ds:0x100c85e4
10020be8:	call   0x1001c30a
10020bed:	pop    ecx
10020bee:	call   eax
10020bf0:	pop    ecx
10020bf1:	pop    ecx
10020bf2:	cmp    WORD PTR [ebp-0x28],0x67
10020bf7:	jne    0x10020c12
10020bf9:	test   ebx,ebx
10020bfb:	jne    0x10020c12
10020bfd:	lea    eax,[ebp-0x58]
10020c00:	push   eax
10020c01:	push   esi
10020c02:	push   DWORD PTR ds:0x100c85e0
10020c08:	call   0x1001c30a
10020c0d:	pop    ecx
10020c0e:	call   eax
10020c10:	pop    ecx
10020c11:	pop    ecx
10020c12:	cmp    BYTE PTR [esi],0x2d
10020c15:	jne    0x10020c22
10020c17:	or     DWORD PTR [ebp-0x14],0x100
10020c1e:	inc    esi
10020c1f:	mov    DWORD PTR [ebp-0x1c],esi
10020c22:	push   esi
10020c23:	jmp    0x10020a9a
10020c28:	mov    DWORD PTR [ebp-0x18],edx
10020c2b:	mov    DWORD PTR [ebp-0x60],0x7
10020c32:	jmp    0x10020c55
10020c34:	sub    eax,0x73
10020c37:	je     0x10020979
10020c3d:	sub    eax,esi
10020c3f:	je     0x10020b24
10020c45:	sub    eax,0x3
10020c48:	jne    0x10020da4
10020c4e:	mov    DWORD PTR [ebp-0x60],0x27
10020c55:	test   BYTE PTR [ebp-0x14],0x80
10020c59:	mov    DWORD PTR [ebp-0x28],0x10
10020c60:	je     0x10020b2b
10020c66:	mov    eax,DWORD PTR [ebp-0x60]
10020c69:	add    eax,0x51
10020c6c:	mov    WORD PTR [ebp-0x3c],0x30
10020c72:	mov    WORD PTR [ebp-0x3a],ax
10020c76:	mov    DWORD PTR [ebp-0x30],esi
10020c79:	jmp    0x10020b2b
10020c7e:	test   WORD PTR [ebp-0x14],0x1000
10020c84:	jne    0x10020b37
10020c8a:	add    ebx,0x4
10020c8d:	test   BYTE PTR [ebp-0x14],0x20
10020c91:	je     0x10020ca9
10020c93:	test   BYTE PTR [ebp-0x14],0x40
10020c97:	mov    DWORD PTR [ebp-0x24],ebx
10020c9a:	je     0x10020ca2
10020c9c:	movsx  eax,WORD PTR [ebx-0x4]
10020ca0:	jmp    0x10020ca6
10020ca2:	movzx  eax,WORD PTR [ebx-0x4]
10020ca6:	cdq    
10020ca7:	jmp    0x10020cba
10020ca9:	test   BYTE PTR [ebp-0x14],0x40
10020cad:	mov    eax,DWORD PTR [ebx-0x4]
10020cb0:	je     0x10020cb5
10020cb2:	cdq    
10020cb3:	jmp    0x10020cb7
10020cb5:	xor    edx,edx
10020cb7:	mov    DWORD PTR [ebp-0x24],ebx
10020cba:	test   BYTE PTR [ebp-0x14],0x40
10020cbe:	je     0x10020cd8
10020cc0:	test   edx,edx
10020cc2:	jg     0x10020cd8
10020cc4:	jl     0x10020cca
10020cc6:	test   eax,eax
10020cc8:	jae    0x10020cd8
10020cca:	neg    eax
10020ccc:	adc    edx,0x0
10020ccf:	neg    edx
10020cd1:	or     DWORD PTR [ebp-0x14],0x100
10020cd8:	test   WORD PTR [ebp-0x14],0x9000
10020cde:	mov    ebx,edx
10020ce0:	mov    edi,eax
10020ce2:	jne    0x10020ce6
10020ce4:	xor    ebx,ebx
10020ce6:	cmp    DWORD PTR [ebp-0x18],0x0
10020cea:	jge    0x10020cf5
10020cec:	mov    DWORD PTR [ebp-0x18],0x1
10020cf3:	jmp    0x10020d06
10020cf5:	and    DWORD PTR [ebp-0x14],0xfffffff7
10020cf9:	mov    eax,0x200
10020cfe:	cmp    DWORD PTR [ebp-0x18],eax
10020d01:	jle    0x10020d06
10020d03:	mov    DWORD PTR [ebp-0x18],eax
10020d06:	mov    eax,edi
10020d08:	or     eax,ebx
10020d0a:	jne    0x10020d0f
10020d0c:	and    DWORD PTR [ebp-0x30],eax
10020d0f:	lea    esi,[ebp+0x1ef]
10020d15:	mov    eax,DWORD PTR [ebp-0x18]
10020d18:	dec    DWORD PTR [ebp-0x18]
10020d1b:	test   eax,eax
10020d1d:	jg     0x10020d25
10020d1f:	mov    eax,edi
10020d21:	or     eax,ebx
10020d23:	je     0x10020d49
10020d25:	mov    eax,DWORD PTR [ebp-0x28]
10020d28:	cdq    
10020d29:	push   edx
10020d2a:	push   eax
10020d2b:	push   ebx
10020d2c:	push   edi
10020d2d:	call   0x10021580
10020d32:	add    ecx,0x30
10020d35:	cmp    ecx,0x39
10020d38:	mov    DWORD PTR [ebp-0x7c],ebx
10020d3b:	mov    edi,eax
10020d3d:	mov    ebx,edx
10020d3f:	jle    0x10020d44
10020d41:	add    ecx,DWORD PTR [ebp-0x60]
10020d44:	mov    BYTE PTR [esi],cl
10020d46:	dec    esi
10020d47:	jmp    0x10020d15
10020d49:	lea    eax,[ebp+0x1ef]
10020d4f:	sub    eax,esi
10020d51:	inc    esi
10020d52:	test   WORD PTR [ebp-0x14],0x200
10020d58:	mov    DWORD PTR [ebp-0x20],eax
10020d5b:	mov    DWORD PTR [ebp-0x1c],esi
10020d5e:	je     0x10020da4
10020d60:	test   eax,eax
10020d62:	je     0x10020d6b
10020d64:	mov    ecx,esi
10020d66:	cmp    BYTE PTR [ecx],0x30
10020d69:	je     0x10020da4
10020d6b:	dec    DWORD PTR [ebp-0x1c]
10020d6e:	mov    ecx,DWORD PTR [ebp-0x1c]
10020d71:	mov    BYTE PTR [ecx],0x30
10020d74:	inc    eax
10020d75:	jmp    0x10020da1
10020d77:	test   ebx,ebx
10020d79:	jne    0x10020d83
10020d7b:	mov    eax,ds:0x100c8494
10020d80:	mov    DWORD PTR [ebp-0x1c],eax
10020d83:	mov    eax,DWORD PTR [ebp-0x1c]
10020d86:	mov    DWORD PTR [ebp-0x34],0x1
10020d8d:	jmp    0x10020d98
10020d8f:	dec    edi
10020d90:	cmp    WORD PTR [eax],0x0
10020d94:	je     0x10020d9c
10020d96:	add    eax,esi
10020d98:	test   edi,edi
10020d9a:	jne    0x10020d8f
10020d9c:	sub    eax,DWORD PTR [ebp-0x1c]
10020d9f:	sar    eax,1
10020da1:	mov    DWORD PTR [ebp-0x20],eax
10020da4:	cmp    DWORD PTR [ebp-0x5c],0x0
10020da8:	jne    0x10020ead
10020dae:	mov    eax,DWORD PTR [ebp-0x14]
10020db1:	test   al,0x40
10020db3:	je     0x10020de0
10020db5:	test   ax,0x100
10020db9:	je     0x10020dc3
10020dbb:	mov    WORD PTR [ebp-0x3c],0x2d
10020dc1:	jmp    0x10020dd9
10020dc3:	test   al,0x1
10020dc5:	je     0x10020dcf
10020dc7:	mov    WORD PTR [ebp-0x3c],0x2b
10020dcd:	jmp    0x10020dd9
10020dcf:	test   al,0x2
10020dd1:	je     0x10020de0
10020dd3:	mov    WORD PTR [ebp-0x3c],0x20
10020dd9:	mov    DWORD PTR [ebp-0x30],0x1
10020de0:	mov    ebx,DWORD PTR [ebp-0x38]
10020de3:	mov    esi,DWORD PTR [ebp-0x20]
10020de6:	sub    ebx,esi
10020de8:	sub    ebx,DWORD PTR [ebp-0x30]
10020deb:	test   BYTE PTR [ebp-0x14],0xc
10020def:	jne    0x10020e02
10020df1:	push   DWORD PTR [ebp-0x48]
10020df4:	lea    eax,[ebp-0x2c]
10020df7:	push   ebx
10020df8:	push   0x20
10020dfa:	call   0x1001fc90
10020dff:	add    esp,0xc
10020e02:	push   DWORD PTR [ebp-0x30]
10020e05:	mov    edi,DWORD PTR [ebp-0x48]
10020e08:	lea    eax,[ebp-0x2c]
10020e0b:	lea    ecx,[ebp-0x3c]
10020e0e:	call   0x1001fcb5
10020e13:	test   BYTE PTR [ebp-0x14],0x8
10020e17:	pop    ecx
10020e18:	je     0x10020e2f
10020e1a:	test   BYTE PTR [ebp-0x14],0x4
10020e1e:	jne    0x10020e2f
10020e20:	push   edi
10020e21:	push   ebx
10020e22:	push   0x30
10020e24:	lea    eax,[ebp-0x2c]
10020e27:	call   0x1001fc90
10020e2c:	add    esp,0xc
10020e2f:	cmp    DWORD PTR [ebp-0x34],0x0
10020e33:	jne    0x10020e83
10020e35:	test   esi,esi
10020e37:	jle    0x10020e83
10020e39:	mov    edi,DWORD PTR [ebp-0x1c]
10020e3c:	mov    DWORD PTR [ebp-0x28],esi
10020e3f:	dec    DWORD PTR [ebp-0x28]
10020e42:	lea    eax,[ebp-0x58]
10020e45:	push   eax
10020e46:	mov    eax,DWORD PTR [ebp-0x58]
10020e49:	push   DWORD PTR [eax+0xac]
10020e4f:	lea    eax,[ebp-0x70]
10020e52:	push   edi
10020e53:	push   eax
10020e54:	call   0x10024581
10020e59:	add    esp,0x10
10020e5c:	test   eax,eax
10020e5e:	mov    DWORD PTR [ebp-0x7c],eax
10020e61:	jle    0x10020e7d
10020e63:	push   DWORD PTR [ebp-0x70]
10020e66:	mov    eax,DWORD PTR [ebp-0x48]
10020e69:	lea    esi,[ebp-0x2c]
10020e6c:	call   0x1001fc6b
10020e71:	add    edi,DWORD PTR [ebp-0x7c]
10020e74:	cmp    DWORD PTR [ebp-0x28],0x0
10020e78:	pop    ecx
10020e79:	jg     0x10020e3f
10020e7b:	jmp    0x10020e90
10020e7d:	or     DWORD PTR [ebp-0x2c],0xffffffff
10020e81:	jmp    0x10020e90
10020e83:	mov    ecx,DWORD PTR [ebp-0x1c]
10020e86:	push   esi
10020e87:	lea    eax,[ebp-0x2c]
10020e8a:	call   0x1001fcb5
10020e8f:	pop    ecx
10020e90:	cmp    DWORD PTR [ebp-0x2c],0x0
10020e94:	jl     0x10020ead
10020e96:	test   BYTE PTR [ebp-0x14],0x4
10020e9a:	je     0x10020ead
10020e9c:	push   DWORD PTR [ebp-0x48]
10020e9f:	lea    eax,[ebp-0x2c]
10020ea2:	push   ebx
10020ea3:	push   0x20
10020ea5:	call   0x1001fc90
10020eaa:	add    esp,0xc
10020ead:	cmp    DWORD PTR [ebp-0x64],0x0
10020eb1:	je     0x10020ec0
10020eb3:	push   DWORD PTR [ebp-0x64]
10020eb6:	call   0x100197d5
10020ebb:	and    DWORD PTR [ebp-0x64],0x0
10020ebf:	pop    ecx
10020ec0:	mov    edi,DWORD PTR [ebp-0x6c]
10020ec3:	mov    ebx,DWORD PTR [ebp-0x24]
10020ec6:	movzx  eax,WORD PTR [edi]
10020ec9:	test   ax,ax
10020ecc:	mov    DWORD PTR [ebp-0x28],eax
10020ecf:	je     0x10020ed8
10020ed1:	mov    ecx,eax
10020ed3:	jmp    0x100206d5
10020ed8:	cmp    DWORD PTR [ebp-0x40],0x0
10020edc:	je     0x10020ee8
10020ede:	cmp    DWORD PTR [ebp-0x40],0x7
10020ee2:	jne    0x10020673
10020ee8:	cmp    BYTE PTR [ebp-0x4c],0x0
10020eec:	je     0x10020ef5
10020eee:	mov    eax,DWORD PTR [ebp-0x50]
10020ef1:	and    DWORD PTR [eax+0x70],0xfffffffd
10020ef5:	mov    eax,DWORD PTR [ebp-0x2c]
10020ef8:	mov    ecx,DWORD PTR [ebp+0x3f0]
10020efe:	pop    edi
10020eff:	pop    esi
10020f00:	xor    ecx,ebp
10020f02:	pop    ebx
10020f03:	call   0x10018773
10020f08:	add    ebp,0x3f4
10020f0e:	leave  
10020f0f:	ret    
10020f10:	fmul   DWORD PTR [eax]
10020f12:	add    dl,BYTE PTR [eax]
10020f14:	sub    eax,0x4a100207
10020f19:	pop    es
10020f1a:	add    dl,BYTE PTR [eax]
10020f1c:	xchg   esi,eax
10020f1d:	pop    es
10020f1e:	add    dl,BYTE PTR [eax]
10020f20:	rol    BYTE PTR [edi],1
10020f22:	add    dl,BYTE PTR [eax]
10020f24:	fld    DWORD PTR [edi]
10020f26:	add    dl,BYTE PTR [eax]
10020f28:	adc    BYTE PTR [eax],cl
10020f2a:	add    dl,BYTE PTR [eax]
10020f2c:	icebp  
10020f2d:	or     BYTE PTR [edx],al
10020f2f:	adc    BYTE PTR [ebx-0x5cfbdbbc],cl
10020f35:	mov    esp,0xc3100c9b
10020f3a:	push   ebp
10020f3b:	mov    ebp,esp
10020f3d:	push   ecx
10020f3e:	push   ecx
10020f3f:	mov    eax,DWORD PTR [ebp+0xc]
10020f42:	push   esi
10020f43:	mov    esi,DWORD PTR [ebp+0x8]
10020f46:	mov    DWORD PTR [ebp-0x8],eax
10020f49:	mov    eax,DWORD PTR [ebp+0x10]
10020f4c:	push   edi
10020f4d:	push   esi
10020f4e:	mov    DWORD PTR [ebp-0x4],eax
10020f51:	call   0x10021157
10020f56:	or     edi,0xffffffff
10020f59:	cmp    eax,edi
10020f5b:	pop    ecx
10020f5c:	jne    0x10020f6f
10020f5e:	call   0x1001cd0e
10020f63:	mov    DWORD PTR [eax],0x9
10020f69:	mov    eax,edi
10020f6b:	mov    edx,edi
10020f6d:	jmp    0x10020fb9
10020f6f:	push   DWORD PTR [ebp+0x14]
10020f72:	lea    ecx,[ebp-0x4]
10020f75:	push   ecx
10020f76:	push   DWORD PTR [ebp-0x8]
10020f79:	push   eax
10020f7a:	call   DWORD PTR ds:0x1002f1c0
10020f80:	cmp    eax,edi
10020f82:	mov    DWORD PTR [ebp-0x8],eax
10020f85:	jne    0x10020f9a
10020f87:	call   DWORD PTR ds:0x1002f094
10020f8d:	test   eax,eax
10020f8f:	je     0x10020f9a
10020f91:	push   eax
10020f92:	call   0x1001cd34
10020f97:	pop    ecx
10020f98:	jmp    0x10020f69
10020f9a:	mov    eax,esi
10020f9c:	sar    eax,0x5
10020f9f:	mov    eax,DWORD PTR [eax*4+0x100cb080]
10020fa6:	and    esi,0x1f
10020fa9:	shl    esi,0x6
10020fac:	lea    eax,[eax+esi*1+0x4]
10020fb0:	and    BYTE PTR [eax],0xfd
10020fb3:	mov    eax,DWORD PTR [ebp-0x8]
10020fb6:	mov    edx,DWORD PTR [ebp-0x4]
10020fb9:	pop    edi
10020fba:	pop    esi
10020fbb:	leave  
10020fbc:	ret    
10020fbd:	push   0x14
10020fbf:	push   0x100bb750
10020fc4:	call   0x1001a750
10020fc9:	or     esi,0xffffffff
10020fcc:	mov    DWORD PTR [ebp-0x24],esi
10020fcf:	mov    DWORD PTR [ebp-0x20],esi
10020fd2:	mov    eax,DWORD PTR [ebp+0x8]
10020fd5:	cmp    eax,0xfffffffe
10020fd8:	jne    0x10020ff6
10020fda:	call   0x1001cd21
10020fdf:	and    DWORD PTR [eax],0x0
10020fe2:	call   0x1001cd0e
10020fe7:	mov    DWORD PTR [eax],0x9
10020fed:	mov    eax,esi
10020fef:	mov    edx,esi
10020ff1:	jmp    0x100210c6
10020ff6:	xor    edi,edi
10020ff8:	cmp    eax,edi
10020ffa:	jl     0x10021004
10020ffc:	cmp    eax,DWORD PTR ds:0x100cb064
10021002:	jb     0x10021025
10021004:	call   0x1001cd21
10021009:	mov    DWORD PTR [eax],edi
1002100b:	call   0x1001cd0e
10021010:	mov    DWORD PTR [eax],0x9
10021016:	push   edi
10021017:	push   edi
10021018:	push   edi
10021019:	push   edi
1002101a:	push   edi
1002101b:	call   0x10018dbf
10021020:	add    esp,0x14
10021023:	jmp    0x10020fed
10021025:	mov    ecx,eax
10021027:	sar    ecx,0x5
1002102a:	lea    ebx,[ecx*4+0x100cb080]
10021031:	mov    esi,eax
10021033:	and    esi,0x1f
10021036:	shl    esi,0x6
10021039:	mov    ecx,DWORD PTR [ebx]
1002103b:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
10021040:	and    ecx,0x1
10021043:	jne    0x1002106b
10021045:	call   0x1001cd21
1002104a:	mov    DWORD PTR [eax],edi
1002104c:	call   0x1001cd0e
10021051:	mov    DWORD PTR [eax],0x9
10021057:	push   edi
10021058:	push   edi
10021059:	push   edi
1002105a:	push   edi
1002105b:	push   edi
1002105c:	call   0x10018dbf
10021061:	add    esp,0x14
10021064:	or     edx,0xffffffff
10021067:	mov    eax,edx
10021069:	jmp    0x100210c6
1002106b:	push   eax
1002106c:	call   0x100211c8
10021071:	pop    ecx
10021072:	mov    DWORD PTR [ebp-0x4],edi
10021075:	mov    eax,DWORD PTR [ebx]
10021077:	test   BYTE PTR [eax+esi*1+0x4],0x1
1002107c:	je     0x1002109a
1002107e:	push   DWORD PTR [ebp+0x14]
10021081:	push   DWORD PTR [ebp+0x10]
10021084:	push   DWORD PTR [ebp+0xc]
10021087:	push   DWORD PTR [ebp+0x8]
1002108a:	call   0x10020f3a
1002108f:	add    esp,0x10
10021092:	mov    DWORD PTR [ebp-0x24],eax
10021095:	mov    DWORD PTR [ebp-0x20],edx
10021098:	jmp    0x100210b4
1002109a:	call   0x1001cd0e
1002109f:	mov    DWORD PTR [eax],0x9
100210a5:	call   0x1001cd21
100210aa:	mov    DWORD PTR [eax],edi
100210ac:	or     DWORD PTR [ebp-0x24],0xffffffff
100210b0:	or     DWORD PTR [ebp-0x20],0xffffffff
100210b4:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100210bb:	call   0x100210cc
100210c0:	mov    eax,DWORD PTR [ebp-0x24]
100210c3:	mov    edx,DWORD PTR [ebp-0x20]
100210c6:	call   0x1001a795
100210cb:	ret    
100210cc:	push   DWORD PTR [ebp+0x8]
100210cf:	call   0x10021268
100210d4:	pop    ecx
100210d5:	ret    
100210d6:	mov    ecx,DWORD PTR [esp+0x4]
100210da:	push   ebx
100210db:	xor    ebx,ebx
100210dd:	cmp    ecx,ebx
100210df:	push   esi
100210e0:	push   edi
100210e1:	jl     0x1002113e
100210e3:	cmp    ecx,DWORD PTR ds:0x100cb064
100210e9:	jae    0x1002113e
100210eb:	mov    eax,ecx
100210ed:	sar    eax,0x5
100210f0:	mov    esi,ecx
100210f2:	lea    edi,[eax*4+0x100cb080]
100210f9:	mov    eax,DWORD PTR [edi]
100210fb:	and    esi,0x1f
100210fe:	shl    esi,0x6
10021101:	add    eax,esi
10021103:	test   BYTE PTR [eax+0x4],0x1
10021107:	je     0x1002113e
10021109:	cmp    DWORD PTR [eax],0xffffffff
1002110c:	je     0x1002113e
1002110e:	cmp    DWORD PTR ds:0x100c9254,0x1
10021115:	jne    0x10021134
10021117:	sub    ecx,ebx
10021119:	je     0x1002112b
1002111b:	dec    ecx
1002111c:	je     0x10021126
1002111e:	dec    ecx
1002111f:	jne    0x10021134
10021121:	push   ebx
10021122:	push   0xfffffff4
10021124:	jmp    0x1002112e
10021126:	push   ebx
10021127:	push   0xfffffff5
10021129:	jmp    0x1002112e
1002112b:	push   ebx
1002112c:	push   0xfffffff6
1002112e:	call   DWORD PTR ds:0x1002f15c
10021134:	mov    eax,DWORD PTR [edi]
10021136:	or     DWORD PTR [esi+eax*1],0xffffffff
1002113a:	xor    eax,eax
1002113c:	jmp    0x10021153
1002113e:	call   0x1001cd0e
10021143:	mov    DWORD PTR [eax],0x9
10021149:	call   0x1001cd21
1002114e:	mov    DWORD PTR [eax],ebx
10021150:	or     eax,0xffffffff
10021153:	pop    edi
10021154:	pop    esi
10021155:	pop    ebx
10021156:	ret    
10021157:	mov    eax,DWORD PTR [esp+0x4]
1002115b:	cmp    eax,0xfffffffe
1002115e:	jne    0x10021177
10021160:	call   0x1001cd21
10021165:	and    DWORD PTR [eax],0x0
10021168:	call   0x1001cd0e
1002116d:	mov    DWORD PTR [eax],0x9
10021173:	or     eax,0xffffffff
10021176:	ret    
10021177:	push   esi
10021178:	xor    esi,esi
1002117a:	cmp    eax,esi
1002117c:	jl     0x100211a0
1002117e:	cmp    eax,DWORD PTR ds:0x100cb064
10021184:	jae    0x100211a0
10021186:	mov    ecx,eax
10021188:	and    eax,0x1f
1002118b:	sar    ecx,0x5
1002118e:	mov    ecx,DWORD PTR [ecx*4+0x100cb080]
10021195:	shl    eax,0x6
10021198:	add    eax,ecx
1002119a:	test   BYTE PTR [eax+0x4],0x1
1002119e:	jne    0x100211c4
100211a0:	call   0x1001cd21
100211a5:	mov    DWORD PTR [eax],esi
100211a7:	call   0x1001cd0e
100211ac:	push   esi
100211ad:	push   esi
100211ae:	push   esi
100211af:	push   esi
100211b0:	push   esi
100211b1:	mov    DWORD PTR [eax],0x9
100211b7:	call   0x10018dbf
100211bc:	add    esp,0x14
100211bf:	or     eax,0xffffffff
100211c2:	pop    esi
100211c3:	ret    
100211c4:	mov    eax,DWORD PTR [eax]
100211c6:	pop    esi
100211c7:	ret    
100211c8:	push   0xc
100211ca:	push   0x100bb770
100211cf:	call   0x1001a750
100211d4:	mov    edi,DWORD PTR [ebp+0x8]
100211d7:	mov    eax,edi
100211d9:	sar    eax,0x5
100211dc:	mov    esi,edi
100211de:	and    esi,0x1f
100211e1:	shl    esi,0x6
100211e4:	add    esi,DWORD PTR [eax*4+0x100cb080]
100211eb:	mov    DWORD PTR [ebp-0x1c],0x1
100211f2:	xor    ebx,ebx
100211f4:	cmp    DWORD PTR [esi+0x8],ebx
100211f7:	jne    0x1002122f
100211f9:	push   0xa
100211fb:	call   0x1001e3bb
10021200:	pop    ecx
10021201:	mov    DWORD PTR [ebp-0x4],ebx
10021204:	cmp    DWORD PTR [esi+0x8],ebx
10021207:	jne    0x10021223
10021209:	push   0xfa0
1002120e:	lea    eax,[esi+0xc]
10021211:	push   eax
10021212:	call   0x10023b82
10021217:	pop    ecx
10021218:	pop    ecx
10021219:	test   eax,eax
1002121b:	jne    0x10021220
1002121d:	mov    DWORD PTR [ebp-0x1c],ebx
10021220:	inc    DWORD PTR [esi+0x8]
10021223:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1002122a:	call   0x1002125f
1002122f:	cmp    DWORD PTR [ebp-0x1c],ebx
10021232:	je     0x10021251
10021234:	mov    eax,edi
10021236:	sar    eax,0x5
10021239:	and    edi,0x1f
1002123c:	shl    edi,0x6
1002123f:	mov    eax,DWORD PTR [eax*4+0x100cb080]
10021246:	lea    eax,[eax+edi*1+0xc]
1002124a:	push   eax
1002124b:	call   DWORD PTR ds:0x1002f198
10021251:	mov    eax,DWORD PTR [ebp-0x1c]
10021254:	call   0x1001a795
10021259:	ret    
1002125a:	xor    ebx,ebx
1002125c:	mov    edi,DWORD PTR [ebp+0x8]
1002125f:	push   0xa
10021261:	call   0x1001e2e3
10021266:	pop    ecx
10021267:	ret    
10021268:	mov    eax,DWORD PTR [esp+0x4]
1002126c:	mov    ecx,eax
1002126e:	and    eax,0x1f
10021271:	sar    ecx,0x5
10021274:	mov    ecx,DWORD PTR [ecx*4+0x100cb080]
1002127b:	shl    eax,0x6
1002127e:	lea    eax,[ecx+eax*1+0xc]
10021282:	push   eax
10021283:	call   DWORD PTR ds:0x1002f19c
10021289:	ret    
1002128a:	mov    eax,0x100c8210
1002128f:	ret    
10021290:	mov    eax,ds:0x100cb060
10021295:	test   eax,eax
10021297:	push   esi
10021298:	push   0x14
1002129a:	pop    esi
1002129b:	jne    0x100212a4
1002129d:	mov    eax,0x200
100212a2:	jmp    0x100212aa
100212a4:	cmp    eax,esi
100212a6:	jge    0x100212af
100212a8:	mov    eax,esi
100212aa:	mov    ds:0x100cb060,eax
100212af:	push   0x4
100212b1:	push   eax
100212b2:	call   0x1001afef
100212b7:	test   eax,eax
100212b9:	pop    ecx
100212ba:	pop    ecx
100212bb:	mov    ds:0x100ca050,eax
100212c0:	jne    0x100212e0
100212c2:	push   0x4
100212c4:	push   esi
100212c5:	mov    DWORD PTR ds:0x100cb060,esi
100212cb:	call   0x1001afef
100212d0:	test   eax,eax
100212d2:	pop    ecx
100212d3:	pop    ecx
100212d4:	mov    ds:0x100ca050,eax
100212d9:	jne    0x100212e0
100212db:	push   0x1a
100212dd:	pop    eax
100212de:	pop    esi
100212df:	ret    
100212e0:	xor    edx,edx
100212e2:	mov    ecx,0x100c8210
100212e7:	jmp    0x100212ee
100212e9:	mov    eax,ds:0x100ca050
100212ee:	mov    DWORD PTR [edx+eax*1],ecx
100212f1:	add    ecx,0x20
100212f4:	add    edx,0x4
100212f7:	cmp    ecx,0x100c8490
100212fd:	jl     0x100212e9
100212ff:	push   0xfffffffe
10021301:	pop    esi
10021302:	xor    edx,edx
10021304:	mov    ecx,0x100c8220
10021309:	push   edi
1002130a:	mov    eax,edx
1002130c:	sar    eax,0x5
1002130f:	mov    eax,DWORD PTR [eax*4+0x100cb080]
10021316:	mov    edi,edx
10021318:	and    edi,0x1f
1002131b:	shl    edi,0x6
1002131e:	mov    eax,DWORD PTR [edi+eax*1]
10021321:	cmp    eax,0xffffffff
10021324:	je     0x1002132e
10021326:	cmp    eax,esi
10021328:	je     0x1002132e
1002132a:	test   eax,eax
1002132c:	jne    0x10021330
1002132e:	mov    DWORD PTR [ecx],esi
10021330:	add    ecx,0x20
10021333:	inc    edx
10021334:	cmp    ecx,0x100c8280
1002133a:	jl     0x1002130a
1002133c:	pop    edi
1002133d:	xor    eax,eax
1002133f:	pop    esi
10021340:	ret    
10021341:	call   0x10022304
10021346:	cmp    BYTE PTR ds:0x100c95dc,0x0
1002134d:	je     0x10021354
1002134f:	call   0x100246ab
10021354:	push   DWORD PTR ds:0x100ca050
1002135a:	call   0x100197d5
1002135f:	pop    ecx
10021360:	ret    
10021361:	push   esi
10021362:	mov    esi,DWORD PTR [esp+0x8]
10021366:	mov    eax,0x100c8210
1002136b:	cmp    esi,eax
1002136d:	jb     0x10021391
1002136f:	cmp    esi,0x100c8470
10021375:	ja     0x10021391
10021377:	mov    ecx,esi
10021379:	sub    ecx,eax
1002137b:	sar    ecx,0x5
1002137e:	add    ecx,0x10
10021381:	push   ecx
10021382:	call   0x1001e3bb
10021387:	or     DWORD PTR [esi+0xc],0x8000
1002138e:	pop    ecx
1002138f:	pop    esi
10021390:	ret    
10021391:	add    esi,0x20
10021394:	push   esi
10021395:	call   DWORD PTR ds:0x1002f198
1002139b:	pop    esi
1002139c:	ret    
1002139d:	mov    eax,DWORD PTR [esp+0x4]
100213a1:	cmp    eax,0x14
100213a4:	jge    0x100213bc
100213a6:	add    eax,0x10
100213a9:	push   eax
100213aa:	call   0x1001e3bb
100213af:	mov    eax,DWORD PTR [esp+0xc]
100213b3:	or     DWORD PTR [eax+0xc],0x8000
100213ba:	pop    ecx
100213bb:	ret    
100213bc:	mov    eax,DWORD PTR [esp+0x8]
100213c0:	add    eax,0x20
100213c3:	push   eax
100213c4:	call   DWORD PTR ds:0x1002f198
100213ca:	ret    
100213cb:	mov    eax,DWORD PTR [esp+0x4]
100213cf:	mov    ecx,0x100c8210
100213d4:	cmp    eax,ecx
100213d6:	jb     0x100213f6
100213d8:	cmp    eax,0x100c8470
100213dd:	ja     0x100213f6
100213df:	and    DWORD PTR [eax+0xc],0xffff7fff
100213e6:	sub    eax,ecx
100213e8:	sar    eax,0x5
100213eb:	add    eax,0x10
100213ee:	push   eax
100213ef:	call   0x1001e2e3
100213f4:	pop    ecx
100213f5:	ret    
100213f6:	add    eax,0x20
100213f9:	push   eax
100213fa:	call   DWORD PTR ds:0x1002f19c
10021400:	ret    
10021401:	mov    ecx,DWORD PTR [esp+0x4]
10021405:	cmp    ecx,0x14
10021408:	mov    eax,DWORD PTR [esp+0x8]
1002140c:	jge    0x10021420
1002140e:	and    DWORD PTR [eax+0xc],0xffff7fff
10021415:	add    ecx,0x10
10021418:	push   ecx
10021419:	call   0x1001e2e3
1002141e:	pop    ecx
1002141f:	ret    
10021420:	add    eax,0x20
10021423:	push   eax
10021424:	call   DWORD PTR ds:0x1002f19c
1002142a:	ret    
1002142b:	int3   
1002142c:	push   ebx
1002142d:	push   esi
1002142e:	push   edi
1002142f:	mov    edx,DWORD PTR [esp+0x10]
10021433:	mov    eax,DWORD PTR [esp+0x14]
10021437:	mov    ecx,DWORD PTR [esp+0x18]
1002143b:	push   ebp
1002143c:	push   edx
1002143d:	push   eax
1002143e:	push   ecx
1002143f:	push   ecx
10021440:	push   0x100214bc
10021445:	push   DWORD PTR fs:0x0
1002144c:	mov    eax,ds:0x100c7654
10021451:	xor    eax,esp
10021453:	mov    DWORD PTR [esp+0x8],eax
10021457:	mov    DWORD PTR fs:0x0,esp
1002145e:	mov    eax,DWORD PTR [esp+0x30]
10021462:	mov    ebx,DWORD PTR [eax+0x8]
10021465:	mov    ecx,DWORD PTR [esp+0x2c]
10021469:	xor    ebx,DWORD PTR [ecx]
1002146b:	mov    esi,DWORD PTR [eax+0xc]
1002146e:	cmp    esi,0xfffffffe
10021471:	je     0x100214ae
10021473:	mov    edx,DWORD PTR [esp+0x34]
10021477:	cmp    edx,0xfffffffe
1002147a:	je     0x10021480
1002147c:	cmp    esi,edx
1002147e:	jbe    0x100214ae
10021480:	lea    esi,[esi+esi*2]
10021483:	lea    ebx,[ebx+esi*4+0x10]
10021487:	mov    ecx,DWORD PTR [ebx]
10021489:	mov    DWORD PTR [eax+0xc],ecx
1002148c:	cmp    DWORD PTR [ebx+0x4],0x0
10021490:	jne    0x1002145e
10021492:	push   0x101
10021497:	mov    eax,DWORD PTR [ebx+0x8]
1002149a:	call   0x10023b1d
1002149f:	mov    ecx,0x1
100214a4:	mov    eax,DWORD PTR [ebx+0x8]
100214a7:	call   0x10023b3c
100214ac:	jmp    0x1002145e
100214ae:	pop    DWORD PTR fs:0x0
100214b5:	add    esp,0x18
100214b8:	pop    edi
100214b9:	pop    esi
100214ba:	pop    ebx
100214bb:	ret    
100214bc:	mov    ecx,DWORD PTR [esp+0x4]
100214c0:	test   DWORD PTR [ecx+0x4],0x6
100214c7:	mov    eax,0x1
100214cc:	je     0x10021501
100214ce:	mov    eax,DWORD PTR [esp+0x8]
100214d2:	mov    ecx,DWORD PTR [eax+0x8]
100214d5:	xor    ecx,eax
100214d7:	call   0x10018773
100214dc:	push   ebp
100214dd:	mov    ebp,DWORD PTR [eax+0x18]
100214e0:	push   DWORD PTR [eax+0xc]
100214e3:	push   DWORD PTR [eax+0x10]
100214e6:	push   DWORD PTR [eax+0x14]
100214e9:	call   0x1002142c
100214ee:	add    esp,0xc
100214f1:	pop    ebp
100214f2:	mov    eax,DWORD PTR [esp+0x8]
100214f6:	mov    edx,DWORD PTR [esp+0x10]
100214fa:	mov    DWORD PTR [edx],eax
100214fc:	mov    eax,0x3
10021501:	ret    
10021502:	push   ebp
10021503:	mov    ecx,DWORD PTR [esp+0x8]
10021507:	mov    ebp,DWORD PTR [ecx]
10021509:	push   DWORD PTR [ecx+0x1c]
1002150c:	push   DWORD PTR [ecx+0x18]
1002150f:	push   DWORD PTR [ecx+0x28]
10021512:	call   0x1002142c
10021517:	add    esp,0xc
1002151a:	pop    ebp
1002151b:	ret    0x4
1002151e:	push   ebp
1002151f:	push   esi
10021520:	push   edi
10021521:	push   ebx
10021522:	mov    ebp,edx
10021524:	xor    eax,eax
10021526:	xor    ebx,ebx
10021528:	xor    edx,edx
1002152a:	xor    esi,esi
1002152c:	xor    edi,edi
1002152e:	call   ecx
10021530:	pop    ebx
10021531:	pop    edi
10021532:	pop    esi
10021533:	pop    ebp
10021534:	ret    
10021535:	mov    ebp,edx
10021537:	mov    esi,ecx
10021539:	mov    eax,ecx
1002153b:	push   0x1
1002153d:	call   0x10023b1d
10021542:	xor    eax,eax
10021544:	xor    ebx,ebx
10021546:	xor    ecx,ecx
10021548:	xor    edx,edx
1002154a:	xor    edi,edi
1002154c:	jmp    esi
1002154e:	push   ebp
1002154f:	mov    ebp,esp
10021551:	push   ebx
10021552:	push   esi
10021553:	push   edi
10021554:	push   0x0
10021556:	push   0x0
10021558:	push   0x10021563
1002155d:	push   ecx
1002155e:	call   0x1002cd0e
10021563:	pop    edi
10021564:	pop    esi
10021565:	pop    ebx
10021566:	pop    ebp
10021567:	ret    
10021568:	push   ebp
10021569:	mov    ebp,DWORD PTR [esp+0x8]
1002156d:	push   edx
1002156e:	push   ecx
1002156f:	push   DWORD PTR [esp+0x14]
10021573:	call   0x1002142c
10021578:	add    esp,0xc
1002157b:	pop    ebp
1002157c:	ret    0x8
1002157f:	int3   
10021580:	push   esi
10021581:	mov    eax,DWORD PTR [esp+0x14]
10021585:	or     eax,eax
10021587:	jne    0x100215b1
10021589:	mov    ecx,DWORD PTR [esp+0x10]
1002158d:	mov    eax,DWORD PTR [esp+0xc]
10021591:	xor    edx,edx
10021593:	div    ecx
10021595:	mov    ebx,eax
10021597:	mov    eax,DWORD PTR [esp+0x8]
1002159b:	div    ecx
1002159d:	mov    esi,eax
1002159f:	mov    eax,ebx
100215a1:	mul    DWORD PTR [esp+0x10]
100215a5:	mov    ecx,eax
100215a7:	mov    eax,esi
100215a9:	mul    DWORD PTR [esp+0x10]
100215ad:	add    edx,ecx
100215af:	jmp    0x100215f8
100215b1:	mov    ecx,eax
100215b3:	mov    ebx,DWORD PTR [esp+0x10]
100215b7:	mov    edx,DWORD PTR [esp+0xc]
100215bb:	mov    eax,DWORD PTR [esp+0x8]
100215bf:	shr    ecx,1
100215c1:	rcr    ebx,1
100215c3:	shr    edx,1
100215c5:	rcr    eax,1
100215c7:	or     ecx,ecx
100215c9:	jne    0x100215bf
100215cb:	div    ebx
100215cd:	mov    esi,eax
100215cf:	mul    DWORD PTR [esp+0x14]
100215d3:	mov    ecx,eax
100215d5:	mov    eax,DWORD PTR [esp+0x10]
100215d9:	mul    esi
100215db:	add    edx,ecx
100215dd:	jb     0x100215ed
100215df:	cmp    edx,DWORD PTR [esp+0xc]
100215e3:	ja     0x100215ed
100215e5:	jb     0x100215f6
100215e7:	cmp    eax,DWORD PTR [esp+0x8]
100215eb:	jbe    0x100215f6
100215ed:	dec    esi
100215ee:	sub    eax,DWORD PTR [esp+0x10]
100215f2:	sbb    edx,DWORD PTR [esp+0x14]
100215f6:	xor    ebx,ebx
100215f8:	sub    eax,DWORD PTR [esp+0x8]
100215fc:	sbb    edx,DWORD PTR [esp+0xc]
10021600:	neg    edx
10021602:	neg    eax
10021604:	sbb    edx,0x0
10021607:	mov    ecx,edx
10021609:	mov    edx,ebx
1002160b:	mov    ebx,ecx
1002160d:	mov    ecx,eax
1002160f:	mov    eax,esi
10021611:	pop    esi
10021612:	ret    0x10
10021615:	push   ebp
10021616:	mov    ebp,esp
10021618:	sub    esp,0x18
1002161b:	push   ebx
1002161c:	push   DWORD PTR [ebp+0x10]
1002161f:	lea    ecx,[ebp-0x18]
10021622:	call   0x1001924a
10021627:	mov    ebx,DWORD PTR [ebp+0x8]
1002162a:	lea    eax,[ebx+0x1]
1002162d:	cmp    eax,0x100
10021632:	ja     0x10021643
10021634:	mov    eax,DWORD PTR [ebp-0x18]
10021637:	mov    eax,DWORD PTR [eax+0xc8]
1002163d:	movzx  eax,WORD PTR [eax+ebx*2]
10021641:	jmp    0x100216b8
10021643:	mov    DWORD PTR [ebp+0x8],ebx
10021646:	sar    DWORD PTR [ebp+0x8],0x8
1002164a:	lea    eax,[ebp-0x18]
1002164d:	push   eax
1002164e:	mov    eax,DWORD PTR [ebp+0x8]
10021651:	and    eax,0xff
10021656:	push   eax
10021657:	call   0x10019c87
1002165c:	test   eax,eax
1002165e:	pop    ecx
1002165f:	pop    ecx
10021660:	je     0x10021674
10021662:	mov    al,BYTE PTR [ebp+0x8]
10021665:	push   0x2
10021667:	mov    BYTE PTR [ebp-0x8],al
1002166a:	mov    BYTE PTR [ebp-0x7],bl
1002166d:	mov    BYTE PTR [ebp-0x6],0x0
10021671:	pop    ecx
10021672:	jmp    0x1002167e
10021674:	xor    ecx,ecx
10021676:	mov    BYTE PTR [ebp-0x8],bl
10021679:	mov    BYTE PTR [ebp-0x7],0x0
1002167d:	inc    ecx
1002167e:	mov    eax,DWORD PTR [ebp-0x18]
10021681:	push   0x1
10021683:	push   DWORD PTR [eax+0x14]
10021686:	push   DWORD PTR [eax+0x4]
10021689:	lea    eax,[ebp-0x4]
1002168c:	push   eax
1002168d:	push   ecx
1002168e:	lea    eax,[ebp-0x8]
10021691:	push   eax
10021692:	lea    eax,[ebp-0x18]
10021695:	push   0x1
10021697:	push   eax
10021698:	call   0x1002327c
1002169d:	add    esp,0x20
100216a0:	test   eax,eax
100216a2:	jne    0x100216b4
100216a4:	cmp    BYTE PTR [ebp-0xc],al
100216a7:	je     0x100216b0
100216a9:	mov    eax,DWORD PTR [ebp-0x10]
100216ac:	and    DWORD PTR [eax+0x70],0xfffffffd
100216b0:	xor    eax,eax
100216b2:	jmp    0x100216c8
100216b4:	movzx  eax,WORD PTR [ebp-0x4]
100216b8:	and    eax,DWORD PTR [ebp+0xc]
100216bb:	cmp    BYTE PTR [ebp-0xc],0x0
100216bf:	je     0x100216c8
100216c1:	mov    ecx,DWORD PTR [ebp-0x10]
100216c4:	and    DWORD PTR [ecx+0x70],0xfffffffd
100216c8:	pop    ebx
100216c9:	leave  
100216ca:	ret    
100216cb:	test   BYTE PTR [ecx+0xc],0x40
100216cf:	je     0x100216d7
100216d1:	cmp    DWORD PTR [ecx+0x8],0x0
100216d5:	je     0x100216fb
100216d7:	dec    DWORD PTR [ecx+0x4]
100216da:	js     0x100216e7
100216dc:	mov    edx,DWORD PTR [ecx]
100216de:	mov    BYTE PTR [edx],al
100216e0:	inc    DWORD PTR [ecx]
100216e2:	movzx  eax,al
100216e5:	jmp    0x100216f3
100216e7:	movsx  eax,al
100216ea:	push   ecx
100216eb:	push   eax
100216ec:	call   0x1001fb0b
100216f1:	pop    ecx
100216f2:	pop    ecx
100216f3:	cmp    eax,0xffffffff
100216f6:	jne    0x100216fb
100216f8:	or     DWORD PTR [esi],eax
100216fa:	ret    
100216fb:	inc    DWORD PTR [esi]
100216fd:	ret    
100216fe:	push   ebp
100216ff:	mov    ebp,esp
10021701:	push   esi
10021702:	mov    esi,eax
10021704:	jmp    0x10021719
10021706:	mov    ecx,DWORD PTR [ebp+0x10]
10021709:	mov    al,BYTE PTR [ebp+0x8]
1002170c:	dec    DWORD PTR [ebp+0xc]
1002170f:	call   0x100216cb
10021714:	cmp    DWORD PTR [esi],0xffffffff
10021717:	je     0x1002171f
10021719:	cmp    DWORD PTR [ebp+0xc],0x0
1002171d:	jg     0x10021706
1002171f:	pop    esi
10021720:	pop    ebp
10021721:	ret    
10021722:	test   BYTE PTR [edi+0xc],0x40
10021726:	push   ebx
10021727:	push   esi
10021728:	mov    esi,eax
1002172a:	mov    ebx,ecx
1002172c:	je     0x10021762
1002172e:	cmp    DWORD PTR [edi+0x8],0x0
10021732:	jne    0x10021762
10021734:	mov    eax,DWORD PTR [esp+0xc]
10021738:	add    DWORD PTR [esi],eax
1002173a:	jmp    0x10021769
1002173c:	mov    al,BYTE PTR [ebx]
1002173e:	dec    DWORD PTR [esp+0xc]
10021742:	mov    ecx,edi
10021744:	call   0x100216cb
10021749:	inc    ebx
1002174a:	cmp    DWORD PTR [esi],0xffffffff
1002174d:	jne    0x10021762
1002174f:	call   0x1001cd0e
10021754:	cmp    DWORD PTR [eax],0x2a
10021757:	jne    0x10021769
10021759:	mov    ecx,edi
1002175b:	mov    al,0x3f
1002175d:	call   0x100216cb
10021762:	cmp    DWORD PTR [esp+0xc],0x0
10021767:	jg     0x1002173c
10021769:	pop    esi
1002176a:	pop    ebx
1002176b:	ret    
1002176c:	push   ebp
1002176d:	lea    ebp,[esp-0x1f8]
10021774:	sub    esp,0x278
1002177a:	mov    eax,ds:0x100c7654
1002177f:	xor    eax,ebp
10021781:	mov    DWORD PTR [ebp+0x1f4],eax
10021787:	mov    eax,DWORD PTR [ebp+0x200]
1002178d:	push   ebx
1002178e:	mov    ebx,DWORD PTR [ebp+0x204]
10021794:	push   esi
10021795:	xor    esi,esi
10021797:	push   edi
10021798:	mov    edi,DWORD PTR [ebp+0x20c]
1002179e:	push   DWORD PTR [ebp+0x208]
100217a4:	lea    ecx,[ebp-0x64]
100217a7:	mov    DWORD PTR [ebp-0x30],eax
100217aa:	mov    DWORD PTR [ebp-0x2c],edi
100217ad:	mov    DWORD PTR [ebp-0x4c],esi
100217b0:	mov    DWORD PTR [ebp-0x18],esi
100217b3:	mov    DWORD PTR [ebp-0x40],esi
100217b6:	mov    DWORD PTR [ebp-0x20],esi
100217b9:	mov    DWORD PTR [ebp-0x3c],esi
100217bc:	mov    DWORD PTR [ebp-0x50],esi
100217bf:	mov    DWORD PTR [ebp-0x44],esi
100217c2:	call   0x1001924a
100217c7:	cmp    DWORD PTR [ebp-0x30],esi
100217ca:	jne    0x100217f9
100217cc:	call   0x1001cd0e
100217d1:	push   esi
100217d2:	push   esi
100217d3:	push   esi
100217d4:	push   esi
100217d5:	mov    DWORD PTR [eax],0x16
100217db:	push   esi
100217dc:	call   0x10018dbf
100217e1:	add    esp,0x14
100217e4:	cmp    BYTE PTR [ebp-0x58],0x0
100217e8:	je     0x100217f1
100217ea:	mov    eax,DWORD PTR [ebp-0x5c]
100217ed:	and    DWORD PTR [eax+0x70],0xfffffffd
100217f1:	or     eax,0xffffffff
100217f4:	jmp    0x100220c8
100217f9:	mov    eax,DWORD PTR [ebp-0x30]
100217fc:	test   BYTE PTR [eax+0xc],0x40
10021800:	jne    0x100218aa
10021806:	push   eax
10021807:	call   0x1002212d
1002180c:	cmp    eax,0xffffffff
1002180f:	pop    ecx
10021810:	je     0x10021848
10021812:	push   DWORD PTR [ebp-0x30]
10021815:	call   0x1002212d
1002181a:	cmp    eax,0xfffffffe
1002181d:	pop    ecx
1002181e:	je     0x10021848
10021820:	push   DWORD PTR [ebp-0x30]
10021823:	call   0x1002212d
10021828:	push   DWORD PTR [ebp-0x30]
1002182b:	sar    eax,0x5
1002182e:	lea    esi,[eax*4+0x100cb080]
10021835:	call   0x1002212d
1002183a:	and    eax,0x1f
1002183d:	shl    eax,0x6
10021840:	add    eax,DWORD PTR [esi]
10021842:	pop    ecx
10021843:	pop    ecx
10021844:	xor    esi,esi
10021846:	jmp    0x1002184d
10021848:	mov    eax,0x100c8148
1002184d:	test   BYTE PTR [eax+0x24],0x7f
10021851:	jne    0x100217cc
10021857:	push   DWORD PTR [ebp-0x30]
1002185a:	call   0x1002212d
1002185f:	cmp    eax,0xffffffff
10021862:	pop    ecx
10021863:	je     0x1002189b
10021865:	push   DWORD PTR [ebp-0x30]
10021868:	call   0x1002212d
1002186d:	cmp    eax,0xfffffffe
10021870:	pop    ecx
10021871:	je     0x1002189b
10021873:	push   DWORD PTR [ebp-0x30]
10021876:	call   0x1002212d
1002187b:	push   DWORD PTR [ebp-0x30]
1002187e:	sar    eax,0x5
10021881:	lea    esi,[eax*4+0x100cb080]
10021888:	call   0x1002212d
1002188d:	and    eax,0x1f
10021890:	shl    eax,0x6
10021893:	add    eax,DWORD PTR [esi]
10021895:	pop    ecx
10021896:	pop    ecx
10021897:	xor    esi,esi
10021899:	jmp    0x100218a0
1002189b:	mov    eax,0x100c8148
100218a0:	test   BYTE PTR [eax+0x24],0x80
100218a4:	jne    0x100217cc
100218aa:	cmp    ebx,esi
100218ac:	je     0x100217cc
100218b2:	mov    dl,BYTE PTR [ebx]
100218b4:	xor    ecx,ecx
100218b6:	test   dl,dl
100218b8:	mov    DWORD PTR [ebp-0x34],esi
100218bb:	mov    DWORD PTR [ebp-0x28],esi
100218be:	mov    DWORD PTR [ebp-0x54],esi
100218c1:	mov    BYTE PTR [ebp-0x19],dl
100218c4:	je     0x100220b8
100218ca:	inc    ebx
100218cb:	cmp    DWORD PTR [ebp-0x34],0x0
100218cf:	mov    DWORD PTR [ebp-0x48],ebx
100218d2:	jl     0x100220b8
100218d8:	mov    al,dl
100218da:	sub    al,0x20
100218dc:	cmp    al,0x58
100218de:	ja     0x100218f1
100218e0:	movsx  eax,dl
100218e3:	movzx  eax,BYTE PTR [eax+0x100b3650]
100218ea:	and    eax,0xf
100218ed:	xor    esi,esi
100218ef:	jmp    0x100218f5
100218f1:	xor    esi,esi
100218f3:	xor    eax,eax
100218f5:	movsx  eax,BYTE PTR [ecx+eax*8+0x100b3670]
100218fd:	push   0x7
100218ff:	sar    eax,0x4
10021902:	pop    ecx
10021903:	cmp    eax,ecx
10021905:	mov    DWORD PTR [ebp-0x74],eax
10021908:	ja     0x10022088
1002190e:	jmp    DWORD PTR [eax*4+0x100220e0]
10021915:	or     DWORD PTR [ebp-0x20],0xffffffff
10021919:	mov    DWORD PTR [ebp-0x78],esi
1002191c:	mov    DWORD PTR [ebp-0x50],esi
1002191f:	mov    DWORD PTR [ebp-0x40],esi
10021922:	mov    DWORD PTR [ebp-0x3c],esi
10021925:	mov    DWORD PTR [ebp-0x18],esi
10021928:	mov    DWORD PTR [ebp-0x44],esi
1002192b:	jmp    0x10022088
10021930:	movsx  eax,dl
10021933:	sub    eax,0x20
10021936:	je     0x10021976
10021938:	sub    eax,0x3
1002193b:	je     0x1002196a
1002193d:	sub    eax,0x8
10021940:	je     0x10021961
10021942:	dec    eax
10021943:	dec    eax
10021944:	je     0x10021958
10021946:	sub    eax,0x3
10021949:	jne    0x10022088
1002194f:	or     DWORD PTR [ebp-0x18],0x8
10021953:	jmp    0x10022088
10021958:	or     DWORD PTR [ebp-0x18],0x4
1002195c:	jmp    0x10022088
10021961:	or     DWORD PTR [ebp-0x18],0x1
10021965:	jmp    0x10022088
1002196a:	or     DWORD PTR [ebp-0x18],0x80
10021971:	jmp    0x10022088
10021976:	or     DWORD PTR [ebp-0x18],0x2
1002197a:	jmp    0x10022088
1002197f:	cmp    dl,0x2a
10021982:	jne    0x100219a4
10021984:	add    edi,0x4
10021987:	mov    DWORD PTR [ebp-0x2c],edi
1002198a:	mov    edi,DWORD PTR [edi-0x4]
1002198d:	cmp    edi,esi
1002198f:	mov    DWORD PTR [ebp-0x40],edi
10021992:	jge    0x10022088
10021998:	or     DWORD PTR [ebp-0x18],0x4
1002199c:	neg    DWORD PTR [ebp-0x40]
1002199f:	jmp    0x10022088
100219a4:	mov    eax,DWORD PTR [ebp-0x40]
100219a7:	imul   eax,eax,0xa
100219aa:	movsx  ecx,dl
100219ad:	lea    eax,[eax+ecx*1-0x30]
100219b1:	mov    DWORD PTR [ebp-0x40],eax
100219b4:	jmp    0x10022088
100219b9:	mov    DWORD PTR [ebp-0x20],esi
100219bc:	jmp    0x10022088
100219c1:	cmp    dl,0x2a
100219c4:	jne    0x100219e3
100219c6:	add    edi,0x4
100219c9:	mov    DWORD PTR [ebp-0x2c],edi
100219cc:	mov    edi,DWORD PTR [edi-0x4]
100219cf:	cmp    edi,esi
100219d1:	mov    DWORD PTR [ebp-0x20],edi
100219d4:	jge    0x10022088
100219da:	or     DWORD PTR [ebp-0x20],0xffffffff
100219de:	jmp    0x10022088
100219e3:	mov    eax,DWORD PTR [ebp-0x20]
100219e6:	imul   eax,eax,0xa
100219e9:	movsx  ecx,dl
100219ec:	lea    eax,[eax+ecx*1-0x30]
100219f0:	mov    DWORD PTR [ebp-0x20],eax
100219f3:	jmp    0x10022088
100219f8:	cmp    dl,0x49
100219fb:	je     0x10021a43
100219fd:	cmp    dl,0x68
10021a00:	je     0x10021a3a
10021a02:	cmp    dl,0x6c
10021a05:	je     0x10021a1c
10021a07:	cmp    dl,0x77
10021a0a:	jne    0x10022088
10021a10:	or     DWORD PTR [ebp-0x18],0x800
10021a17:	jmp    0x10022088
10021a1c:	cmp    BYTE PTR [ebx],0x6c
10021a1f:	jne    0x10021a31
10021a21:	inc    ebx
10021a22:	or     DWORD PTR [ebp-0x18],0x1000
10021a29:	mov    DWORD PTR [ebp-0x48],ebx
10021a2c:	jmp    0x10022088
10021a31:	or     DWORD PTR [ebp-0x18],0x10
10021a35:	jmp    0x10022088
10021a3a:	or     DWORD PTR [ebp-0x18],0x20
10021a3e:	jmp    0x10022088
10021a43:	mov    al,BYTE PTR [ebx]
10021a45:	cmp    al,0x36
10021a47:	jne    0x10021a60
10021a49:	cmp    BYTE PTR [ebx+0x1],0x34
10021a4d:	jne    0x10021a60
10021a4f:	inc    ebx
10021a50:	inc    ebx
10021a51:	or     DWORD PTR [ebp-0x18],0x8000
10021a58:	mov    DWORD PTR [ebp-0x48],ebx
10021a5b:	jmp    0x10022088
10021a60:	cmp    al,0x33
10021a62:	jne    0x10021a7b
10021a64:	cmp    BYTE PTR [ebx+0x1],0x32
10021a68:	jne    0x10021a7b
10021a6a:	inc    ebx
10021a6b:	inc    ebx
10021a6c:	and    DWORD PTR [ebp-0x18],0xffff7fff
10021a73:	mov    DWORD PTR [ebp-0x48],ebx
10021a76:	jmp    0x10022088
10021a7b:	cmp    al,0x64
10021a7d:	je     0x10022088
10021a83:	cmp    al,0x69
10021a85:	je     0x10022088
10021a8b:	cmp    al,0x6f
10021a8d:	je     0x10022088
10021a93:	cmp    al,0x75
10021a95:	je     0x10022088
10021a9b:	cmp    al,0x78
10021a9d:	je     0x10022088
10021aa3:	cmp    al,0x58
10021aa5:	je     0x10022088
10021aab:	mov    DWORD PTR [ebp-0x74],esi
10021aae:	lea    eax,[ebp-0x64]
10021ab1:	push   eax
10021ab2:	movzx  eax,dl
10021ab5:	push   eax
10021ab6:	mov    DWORD PTR [ebp-0x44],esi
10021ab9:	call   0x10019c87
10021abe:	pop    ecx
10021abf:	test   eax,eax
10021ac1:	mov    al,BYTE PTR [ebp-0x19]
10021ac4:	pop    ecx
10021ac5:	je     0x10021ae0
10021ac7:	mov    ecx,DWORD PTR [ebp-0x30]
10021aca:	lea    esi,[ebp-0x34]
10021acd:	call   0x100216cb
10021ad2:	mov    al,BYTE PTR [ebx]
10021ad4:	inc    ebx
10021ad5:	test   al,al
10021ad7:	mov    DWORD PTR [ebp-0x48],ebx
10021ada:	je     0x100220a1
10021ae0:	mov    ecx,DWORD PTR [ebp-0x30]
10021ae3:	lea    esi,[ebp-0x34]
10021ae6:	call   0x100216cb
10021aeb:	jmp    0x10022088
10021af0:	movsx  eax,dl
10021af3:	cmp    eax,0x64
10021af6:	jg     0x10021c6e
10021afc:	je     0x10021ced
10021b02:	cmp    eax,0x53
10021b05:	jg     0x10021bb6
10021b0b:	je     0x10021b67
10021b0d:	sub    eax,0x41
10021b10:	je     0x10021b22
10021b12:	dec    eax
10021b13:	dec    eax
10021b14:	je     0x10021b56
10021b16:	dec    eax
10021b17:	dec    eax
10021b18:	je     0x10021b22
10021b1a:	dec    eax
10021b1b:	dec    eax
10021b1c:	jne    0x10021f70
10021b22:	add    dl,0x20
10021b25:	mov    DWORD PTR [ebp-0x78],0x1
10021b2c:	mov    BYTE PTR [ebp-0x19],dl
10021b2f:	or     DWORD PTR [ebp-0x18],0x40
10021b33:	cmp    DWORD PTR [ebp-0x20],esi
10021b36:	lea    ebx,[ebp-0x14]
10021b39:	mov    eax,0x200
10021b3e:	mov    DWORD PTR [ebp-0x24],ebx
10021b41:	mov    DWORD PTR [ebp-0x68],eax
10021b44:	jge    0x10021d11
10021b4a:	mov    DWORD PTR [ebp-0x20],0x6
10021b51:	jmp    0x10021d5f
10021b56:	test   WORD PTR [ebp-0x18],0x830
10021b5c:	jne    0x10021bd3
10021b5e:	or     DWORD PTR [ebp-0x18],0x800
10021b65:	jmp    0x10021bd3
10021b67:	test   WORD PTR [ebp-0x18],0x830
10021b6d:	jne    0x10021b76
10021b6f:	or     DWORD PTR [ebp-0x18],0x800
10021b76:	mov    ecx,DWORD PTR [ebp-0x20]
10021b79:	cmp    ecx,0xffffffff
10021b7c:	jne    0x10021b83
10021b7e:	mov    ecx,0x7fffffff
10021b83:	add    edi,0x4
10021b86:	test   WORD PTR [ebp-0x18],0x810
10021b8c:	mov    DWORD PTR [ebp-0x2c],edi
10021b8f:	mov    edi,DWORD PTR [edi-0x4]
10021b92:	mov    DWORD PTR [ebp-0x24],edi
10021b95:	je     0x10021f4e
10021b9b:	cmp    edi,esi
10021b9d:	jne    0x10021ba7
10021b9f:	mov    eax,ds:0x100c8494
10021ba4:	mov    DWORD PTR [ebp-0x24],eax
10021ba7:	mov    eax,DWORD PTR [ebp-0x24]
10021baa:	mov    DWORD PTR [ebp-0x44],0x1
10021bb1:	jmp    0x10021f43
10021bb6:	sub    eax,0x58
10021bb9:	je     0x10021df8
10021bbf:	dec    eax
10021bc0:	dec    eax
10021bc1:	je     0x10021c20
10021bc3:	sub    eax,ecx
10021bc5:	je     0x10021b2f
10021bcb:	dec    eax
10021bcc:	dec    eax
10021bcd:	jne    0x10021f70
10021bd3:	add    edi,0x4
10021bd6:	test   WORD PTR [ebp-0x18],0x810
10021bdc:	mov    DWORD PTR [ebp-0x2c],edi
10021bdf:	je     0x10021c08
10021be1:	movzx  eax,WORD PTR [edi-0x4]
10021be5:	push   eax
10021be6:	push   0x200
10021beb:	lea    eax,[ebp-0x14]
10021bee:	push   eax
10021bef:	lea    eax,[ebp-0x28]
10021bf2:	push   eax
10021bf3:	call   0x100248a9
10021bf8:	add    esp,0x10
10021bfb:	test   eax,eax
10021bfd:	je     0x10021c15
10021bff:	mov    DWORD PTR [ebp-0x50],0x1
10021c06:	jmp    0x10021c15
10021c08:	mov    al,BYTE PTR [edi-0x4]
10021c0b:	mov    BYTE PTR [ebp-0x14],al
10021c0e:	mov    DWORD PTR [ebp-0x28],0x1
10021c15:	lea    eax,[ebp-0x14]
10021c18:	mov    DWORD PTR [ebp-0x24],eax
10021c1b:	jmp    0x10021f70
10021c20:	mov    eax,DWORD PTR [edi]
10021c22:	add    edi,0x4
10021c25:	cmp    eax,esi
10021c27:	mov    DWORD PTR [ebp-0x2c],edi
10021c2a:	je     0x10021c5a
10021c2c:	mov    ecx,DWORD PTR [eax+0x4]
10021c2f:	cmp    ecx,esi
10021c31:	je     0x10021c5a
10021c33:	test   WORD PTR [ebp-0x18],0x800
10021c39:	movsx  eax,WORD PTR [eax]
10021c3c:	mov    DWORD PTR [ebp-0x24],ecx
10021c3f:	je     0x10021c52
10021c41:	cdq    
10021c42:	sub    eax,edx
10021c44:	sar    eax,1
10021c46:	mov    DWORD PTR [ebp-0x44],0x1
10021c4d:	jmp    0x10021f6d
10021c52:	mov    DWORD PTR [ebp-0x44],esi
10021c55:	jmp    0x10021f6d
10021c5a:	mov    eax,ds:0x100c8490
10021c5f:	mov    DWORD PTR [ebp-0x24],eax
10021c62:	push   eax
10021c63:	call   0x10019010
10021c68:	pop    ecx
10021c69:	jmp    0x10021f6d
10021c6e:	cmp    eax,0x70
10021c71:	jg     0x10021dfd
10021c77:	je     0x10021df1
10021c7d:	cmp    eax,0x65
10021c80:	jl     0x10021f70
10021c86:	cmp    eax,0x67
10021c89:	jle    0x10021b2f
10021c8f:	cmp    eax,0x69
10021c92:	je     0x10021ced
10021c94:	cmp    eax,0x6e
10021c97:	je     0x10021cb8
10021c99:	cmp    eax,0x6f
10021c9c:	jne    0x10021f70
10021ca2:	test   BYTE PTR [ebp-0x18],0x80
10021ca6:	mov    DWORD PTR [ebp-0x28],0x8
10021cad:	je     0x10021cf8
10021caf:	or     DWORD PTR [ebp-0x18],0x200
10021cb6:	jmp    0x10021cf8
10021cb8:	mov    esi,DWORD PTR [edi]
10021cba:	add    edi,0x4
10021cbd:	mov    DWORD PTR [ebp-0x2c],edi
10021cc0:	call   0x1002456b
10021cc5:	test   eax,eax
10021cc7:	je     0x100220a1
10021ccd:	test   BYTE PTR [ebp-0x18],0x20
10021cd1:	je     0x10021cdc
10021cd3:	mov    ax,WORD PTR [ebp-0x34]
10021cd7:	mov    WORD PTR [esi],ax
10021cda:	jmp    0x10021ce1
10021cdc:	mov    eax,DWORD PTR [ebp-0x34]
10021cdf:	mov    DWORD PTR [esi],eax
10021ce1:	mov    DWORD PTR [ebp-0x50],0x1
10021ce8:	jmp    0x10022075
10021ced:	or     DWORD PTR [ebp-0x18],0x40
10021cf1:	mov    DWORD PTR [ebp-0x28],0xa
10021cf8:	mov    ecx,DWORD PTR [ebp-0x18]
10021cfb:	test   cx,cx
10021cfe:	jns    0x10021e47
10021d04:	mov    eax,DWORD PTR [edi]
10021d06:	mov    edx,DWORD PTR [edi+0x4]
10021d09:	add    edi,0x8
10021d0c:	jmp    0x10021e7c
10021d11:	jne    0x10021d21
10021d13:	cmp    dl,0x67
10021d16:	jne    0x10021d5f
10021d18:	mov    DWORD PTR [ebp-0x20],0x1
10021d1f:	jmp    0x10021d5f
10021d21:	cmp    DWORD PTR [ebp-0x20],eax
10021d24:	jle    0x10021d29
10021d26:	mov    DWORD PTR [ebp-0x20],eax
10021d29:	cmp    DWORD PTR [ebp-0x20],0xa3
10021d30:	jle    0x10021d5f
10021d32:	mov    esi,DWORD PTR [ebp-0x20]
10021d35:	add    esi,0x15d
10021d3b:	push   esi
10021d3c:	call   0x1001afaf
10021d41:	test   eax,eax
10021d43:	mov    dl,BYTE PTR [ebp-0x19]
10021d46:	pop    ecx
10021d47:	mov    DWORD PTR [ebp-0x54],eax
10021d4a:	je     0x10021d56
10021d4c:	mov    DWORD PTR [ebp-0x24],eax
10021d4f:	mov    DWORD PTR [ebp-0x68],esi
10021d52:	mov    ebx,eax
10021d54:	jmp    0x10021d5d
10021d56:	mov    DWORD PTR [ebp-0x20],0xa3
10021d5d:	xor    esi,esi
10021d5f:	mov    eax,DWORD PTR [edi]
10021d61:	add    edi,0x8
10021d64:	mov    DWORD PTR [ebp-0x80],eax
10021d67:	mov    eax,DWORD PTR [edi-0x4]
10021d6a:	mov    DWORD PTR [ebp-0x7c],eax
10021d6d:	lea    eax,[ebp-0x64]
10021d70:	push   eax
10021d71:	push   DWORD PTR [ebp-0x78]
10021d74:	movsx  eax,dl
10021d77:	push   DWORD PTR [ebp-0x20]
10021d7a:	mov    DWORD PTR [ebp-0x2c],edi
10021d7d:	push   eax
10021d7e:	push   DWORD PTR [ebp-0x68]
10021d81:	lea    eax,[ebp-0x80]
10021d84:	push   ebx
10021d85:	push   eax
10021d86:	push   DWORD PTR ds:0x100c85d8
10021d8c:	call   0x1001c30a
10021d91:	pop    ecx
10021d92:	call   eax
10021d94:	mov    edi,DWORD PTR [ebp-0x18]
10021d97:	add    esp,0x1c
10021d9a:	and    edi,0x80
10021da0:	je     0x10021dbc
10021da2:	cmp    DWORD PTR [ebp-0x20],esi
10021da5:	jne    0x10021dbc
10021da7:	lea    eax,[ebp-0x64]
10021daa:	push   eax
10021dab:	push   ebx
10021dac:	push   DWORD PTR ds:0x100c85e4
10021db2:	call   0x1001c30a
10021db7:	pop    ecx
10021db8:	call   eax
10021dba:	pop    ecx
10021dbb:	pop    ecx
10021dbc:	cmp    BYTE PTR [ebp-0x19],0x67
10021dc0:	jne    0x10021ddb
10021dc2:	cmp    edi,esi
10021dc4:	jne    0x10021ddb
10021dc6:	lea    eax,[ebp-0x64]
10021dc9:	push   eax
10021dca:	push   ebx
10021dcb:	push   DWORD PTR ds:0x100c85e0
10021dd1:	call   0x1001c30a
10021dd6:	pop    ecx
10021dd7:	call   eax
10021dd9:	pop    ecx
10021dda:	pop    ecx
10021ddb:	cmp    BYTE PTR [ebx],0x2d
10021dde:	jne    0x10021deb
10021de0:	or     DWORD PTR [ebp-0x18],0x100
10021de7:	inc    ebx
10021de8:	mov    DWORD PTR [ebp-0x24],ebx
10021deb:	push   ebx
10021dec:	jmp    0x10021c63
10021df1:	mov    DWORD PTR [ebp-0x20],0x8
10021df8:	mov    DWORD PTR [ebp-0x4c],ecx
10021dfb:	jmp    0x10021e1e
10021dfd:	sub    eax,0x73
10021e00:	je     0x10021b76
10021e06:	dec    eax
10021e07:	dec    eax
10021e08:	je     0x10021cf1
10021e0e:	sub    eax,0x3
10021e11:	jne    0x10021f70
10021e17:	mov    DWORD PTR [ebp-0x4c],0x27
10021e1e:	test   BYTE PTR [ebp-0x18],0x80
10021e22:	mov    DWORD PTR [ebp-0x28],0x10
10021e29:	je     0x10021cf8
10021e2f:	mov    al,BYTE PTR [ebp-0x4c]
10021e32:	add    al,0x51
10021e34:	mov    BYTE PTR [ebp-0x38],0x30
10021e38:	mov    BYTE PTR [ebp-0x37],al
10021e3b:	mov    DWORD PTR [ebp-0x3c],0x2
10021e42:	jmp    0x10021cf8
10021e47:	test   cx,0x1000
10021e4c:	jne    0x10021d04
10021e52:	add    edi,0x4
10021e55:	test   cl,0x20
10021e58:	je     0x10021e6f
10021e5a:	test   cl,0x40
10021e5d:	mov    DWORD PTR [ebp-0x2c],edi
10021e60:	je     0x10021e68
10021e62:	movsx  eax,WORD PTR [edi-0x4]
10021e66:	jmp    0x10021e6c
10021e68:	movzx  eax,WORD PTR [edi-0x4]
10021e6c:	cdq    
10021e6d:	jmp    0x10021e7f
10021e6f:	test   cl,0x40
10021e72:	mov    eax,DWORD PTR [edi-0x4]
10021e75:	je     0x10021e7a
10021e77:	cdq    
10021e78:	jmp    0x10021e7c
10021e7a:	xor    edx,edx
10021e7c:	mov    DWORD PTR [ebp-0x2c],edi
10021e7f:	test   cl,0x40
10021e82:	je     0x10021e9c
10021e84:	cmp    edx,esi
10021e86:	jg     0x10021e9c
10021e88:	jl     0x10021e8e
10021e8a:	cmp    eax,esi
10021e8c:	jae    0x10021e9c
10021e8e:	neg    eax
10021e90:	adc    edx,0x0
10021e93:	neg    edx
10021e95:	or     DWORD PTR [ebp-0x18],0x100
10021e9c:	test   WORD PTR [ebp-0x18],0x9000
10021ea2:	mov    ebx,edx
10021ea4:	mov    edi,eax
10021ea6:	jne    0x10021eaa
10021ea8:	xor    ebx,ebx
10021eaa:	cmp    DWORD PTR [ebp-0x20],0x0
10021eae:	jge    0x10021eb9
10021eb0:	mov    DWORD PTR [ebp-0x20],0x1
10021eb7:	jmp    0x10021eca
10021eb9:	and    DWORD PTR [ebp-0x18],0xfffffff7
10021ebd:	mov    eax,0x200
10021ec2:	cmp    DWORD PTR [ebp-0x20],eax
10021ec5:	jle    0x10021eca
10021ec7:	mov    DWORD PTR [ebp-0x20],eax
10021eca:	mov    eax,edi
10021ecc:	or     eax,ebx
10021ece:	jne    0x10021ed3
10021ed0:	and    DWORD PTR [ebp-0x3c],eax
10021ed3:	lea    esi,[ebp+0x1eb]
10021ed9:	mov    eax,DWORD PTR [ebp-0x20]
10021edc:	dec    DWORD PTR [ebp-0x20]
10021edf:	test   eax,eax
10021ee1:	jg     0x10021ee9
10021ee3:	mov    eax,edi
10021ee5:	or     eax,ebx
10021ee7:	je     0x10021f0d
10021ee9:	mov    eax,DWORD PTR [ebp-0x28]
10021eec:	cdq    
10021eed:	push   edx
10021eee:	push   eax
10021eef:	push   ebx
10021ef0:	push   edi
10021ef1:	call   0x10021580
10021ef6:	add    ecx,0x30
10021ef9:	cmp    ecx,0x39
10021efc:	mov    DWORD PTR [ebp-0x68],ebx
10021eff:	mov    edi,eax
10021f01:	mov    ebx,edx
10021f03:	jle    0x10021f08
10021f05:	add    ecx,DWORD PTR [ebp-0x4c]
10021f08:	mov    BYTE PTR [esi],cl
10021f0a:	dec    esi
10021f0b:	jmp    0x10021ed9
10021f0d:	lea    eax,[ebp+0x1eb]
10021f13:	sub    eax,esi
10021f15:	inc    esi
10021f16:	test   WORD PTR [ebp-0x18],0x200
10021f1c:	mov    DWORD PTR [ebp-0x28],eax
10021f1f:	mov    DWORD PTR [ebp-0x24],esi
10021f22:	je     0x10021f70
10021f24:	test   eax,eax
10021f26:	je     0x10021f2f
10021f28:	mov    ecx,esi
10021f2a:	cmp    BYTE PTR [ecx],0x30
10021f2d:	je     0x10021f70
10021f2f:	dec    DWORD PTR [ebp-0x24]
10021f32:	mov    ecx,DWORD PTR [ebp-0x24]
10021f35:	mov    BYTE PTR [ecx],0x30
10021f38:	inc    eax
10021f39:	jmp    0x10021f6d
10021f3b:	dec    ecx
10021f3c:	cmp    WORD PTR [eax],si
10021f3f:	je     0x10021f47
10021f41:	inc    eax
10021f42:	inc    eax
10021f43:	cmp    ecx,esi
10021f45:	jne    0x10021f3b
10021f47:	sub    eax,DWORD PTR [ebp-0x24]
10021f4a:	sar    eax,1
10021f4c:	jmp    0x10021f6d
10021f4e:	cmp    edi,esi
10021f50:	jne    0x10021f5a
10021f52:	mov    eax,ds:0x100c8490
10021f57:	mov    DWORD PTR [ebp-0x24],eax
10021f5a:	mov    eax,DWORD PTR [ebp-0x24]
10021f5d:	jmp    0x10021f66
10021f5f:	dec    ecx
10021f60:	cmp    BYTE PTR [eax],0x0
10021f63:	je     0x10021f6a
10021f65:	inc    eax
10021f66:	cmp    ecx,esi
10021f68:	jne    0x10021f5f
10021f6a:	sub    eax,DWORD PTR [ebp-0x24]
10021f6d:	mov    DWORD PTR [ebp-0x28],eax
10021f70:	cmp    DWORD PTR [ebp-0x50],0x0
10021f74:	jne    0x10022075
10021f7a:	mov    eax,DWORD PTR [ebp-0x18]
10021f7d:	test   al,0x40
10021f7f:	je     0x10021fa6
10021f81:	test   ax,0x100
10021f85:	je     0x10021f8d
10021f87:	mov    BYTE PTR [ebp-0x38],0x2d
10021f8b:	jmp    0x10021f9f
10021f8d:	test   al,0x1
10021f8f:	je     0x10021f97
10021f91:	mov    BYTE PTR [ebp-0x38],0x2b
10021f95:	jmp    0x10021f9f
10021f97:	test   al,0x2
10021f99:	je     0x10021fa6
10021f9b:	mov    BYTE PTR [ebp-0x38],0x20
10021f9f:	mov    DWORD PTR [ebp-0x3c],0x1
10021fa6:	mov    ebx,DWORD PTR [ebp-0x40]
10021fa9:	sub    ebx,DWORD PTR [ebp-0x28]
10021fac:	sub    ebx,DWORD PTR [ebp-0x3c]
10021faf:	test   BYTE PTR [ebp-0x18],0xc
10021fb3:	jne    0x10021fc6
10021fb5:	push   DWORD PTR [ebp-0x30]
10021fb8:	lea    eax,[ebp-0x34]
10021fbb:	push   ebx
10021fbc:	push   0x20
10021fbe:	call   0x100216fe
10021fc3:	add    esp,0xc
10021fc6:	push   DWORD PTR [ebp-0x3c]
10021fc9:	mov    edi,DWORD PTR [ebp-0x30]
10021fcc:	lea    eax,[ebp-0x34]
10021fcf:	lea    ecx,[ebp-0x38]
10021fd2:	call   0x10021722
10021fd7:	test   BYTE PTR [ebp-0x18],0x8
10021fdb:	pop    ecx
10021fdc:	je     0x10021ff3
10021fde:	test   BYTE PTR [ebp-0x18],0x4
10021fe2:	jne    0x10021ff3
10021fe4:	push   edi
10021fe5:	push   ebx
10021fe6:	push   0x30
10021fe8:	lea    eax,[ebp-0x34]
10021feb:	call   0x100216fe
10021ff0:	add    esp,0xc
10021ff3:	cmp    DWORD PTR [ebp-0x44],0x0
10021ff7:	mov    eax,DWORD PTR [ebp-0x28]
10021ffa:	je     0x1002204d
10021ffc:	test   eax,eax
10021ffe:	jle    0x1002204d
10022000:	mov    esi,DWORD PTR [ebp-0x24]
10022003:	mov    DWORD PTR [ebp-0x68],eax
10022006:	movzx  eax,WORD PTR [esi]
10022009:	dec    DWORD PTR [ebp-0x68]
1002200c:	push   eax
1002200d:	push   0x6
1002200f:	lea    eax,[ebp+0x1ec]
10022015:	push   eax
10022016:	lea    eax,[ebp-0x70]
10022019:	inc    esi
1002201a:	push   eax
1002201b:	inc    esi
1002201c:	call   0x100248a9
10022021:	add    esp,0x10
10022024:	test   eax,eax
10022026:	jne    0x10022047
10022028:	cmp    DWORD PTR [ebp-0x70],eax
1002202b:	je     0x10022047
1002202d:	push   DWORD PTR [ebp-0x70]
10022030:	lea    eax,[ebp-0x34]
10022033:	lea    ecx,[ebp+0x1ec]
10022039:	call   0x10021722
1002203e:	cmp    DWORD PTR [ebp-0x68],0x0
10022042:	pop    ecx
10022043:	jne    0x10022006
10022045:	jmp    0x1002205a
10022047:	or     DWORD PTR [ebp-0x34],0xffffffff
1002204b:	jmp    0x1002205a
1002204d:	mov    ecx,DWORD PTR [ebp-0x24]
10022050:	push   eax
10022051:	lea    eax,[ebp-0x34]
10022054:	call   0x10021722
10022059:	pop    ecx
1002205a:	cmp    DWORD PTR [ebp-0x34],0x0
1002205e:	jl     0x10022075
10022060:	test   BYTE PTR [ebp-0x18],0x4
10022064:	je     0x10022075
10022066:	push   edi
10022067:	push   ebx
10022068:	push   0x20
1002206a:	lea    eax,[ebp-0x34]
1002206d:	call   0x100216fe
10022072:	add    esp,0xc
10022075:	cmp    DWORD PTR [ebp-0x54],0x0
10022079:	je     0x10022088
1002207b:	push   DWORD PTR [ebp-0x54]
1002207e:	call   0x100197d5
10022083:	and    DWORD PTR [ebp-0x54],0x0
10022087:	pop    ecx
10022088:	mov    ebx,DWORD PTR [ebp-0x48]
1002208b:	mov    al,BYTE PTR [ebx]
1002208d:	test   al,al
1002208f:	mov    BYTE PTR [ebp-0x19],al
10022092:	je     0x100220b8
10022094:	mov    ecx,DWORD PTR [ebp-0x74]
10022097:	mov    edi,DWORD PTR [ebp-0x2c]
1002209a:	mov    dl,al
1002209c:	jmp    0x100218ca
100220a1:	call   0x1001cd0e
100220a6:	mov    DWORD PTR [eax],0x16
100220ac:	xor    eax,eax
100220ae:	push   eax
100220af:	push   eax
100220b0:	push   eax
100220b1:	push   eax
100220b2:	push   eax
100220b3:	jmp    0x100217dc
100220b8:	cmp    BYTE PTR [ebp-0x58],0x0
100220bc:	je     0x100220c5
100220be:	mov    eax,DWORD PTR [ebp-0x5c]
100220c1:	and    DWORD PTR [eax+0x70],0xfffffffd
100220c5:	mov    eax,DWORD PTR [ebp-0x34]
100220c8:	mov    ecx,DWORD PTR [ebp+0x1f4]
100220ce:	pop    edi
100220cf:	pop    esi
100220d0:	xor    ecx,ebp
100220d2:	pop    ebx
100220d3:	call   0x10018773
100220d8:	add    ebp,0x1f8
100220de:	leave  
100220df:	ret    
100220e0:	scas   al,BYTE PTR es:[edi]
100220e1:	sbb    al,BYTE PTR [edx]
100220e3:	adc    BYTE PTR ds:0x30100219,dl
100220e9:	sbb    DWORD PTR [edx],eax
100220eb:	adc    BYTE PTR [edi+0x19],bh
100220ee:	add    dl,BYTE PTR [eax]
100220f0:	mov    ecx,0xc1100219
100220f5:	sbb    DWORD PTR [edx],eax
100220f7:	adc    al,bh
100220f9:	sbb    DWORD PTR [edx],eax
100220fb:	adc    al,dh
100220fd:	sbb    al,BYTE PTR [edx]
100220ff:	adc    BYTE PTR [ebp-0x75],dl
10022102:	in     al,dx
10022103:	push   edi
10022104:	mov    edi,DWORD PTR [ebp+0x8]
10022107:	xor    eax,eax
10022109:	or     ecx,0xffffffff
1002210c:	repnz scas al,BYTE PTR es:[edi]
1002210e:	add    ecx,0x1
10022111:	neg    ecx
10022113:	sub    edi,0x1
10022116:	mov    al,BYTE PTR [ebp+0xc]
10022119:	std    
1002211a:	repnz scas al,BYTE PTR es:[edi]
1002211c:	add    edi,0x1
1002211f:	cmp    BYTE PTR [edi],al
10022121:	je     0x10022127
10022123:	xor    eax,eax
10022125:	jmp    0x10022129
10022127:	mov    eax,edi
10022129:	cld    
1002212a:	pop    edi
1002212b:	leave  
1002212c:	ret    
1002212d:	mov    eax,DWORD PTR [esp+0x4]
10022131:	push   esi
10022132:	xor    esi,esi
10022134:	cmp    eax,esi
10022136:	jne    0x10022155
10022138:	call   0x1001cd0e
1002213d:	push   esi
1002213e:	push   esi
1002213f:	push   esi
10022140:	push   esi
10022141:	push   esi
10022142:	mov    DWORD PTR [eax],0x16
10022148:	call   0x10018dbf
1002214d:	add    esp,0x14
10022150:	or     eax,0xffffffff
10022153:	pop    esi
10022154:	ret    
10022155:	mov    eax,DWORD PTR [eax+0x10]
10022158:	pop    esi
10022159:	ret    
1002215a:	push   esi
1002215b:	mov    esi,DWORD PTR [esp+0x8]
1002215f:	mov    eax,DWORD PTR [esi+0xc]
10022162:	test   al,0x83
10022164:	je     0x10022184
10022166:	test   al,0x8
10022168:	je     0x10022184
1002216a:	push   DWORD PTR [esi+0x8]
1002216d:	call   0x100197d5
10022172:	and    DWORD PTR [esi+0xc],0xfffffbf7
10022179:	xor    eax,eax
1002217b:	pop    ecx
1002217c:	mov    DWORD PTR [esi],eax
1002217e:	mov    DWORD PTR [esi+0x8],eax
10022181:	mov    DWORD PTR [esi+0x4],eax
10022184:	pop    esi
10022185:	ret    
10022186:	push   ebx
10022187:	push   esi
10022188:	mov    esi,DWORD PTR [esp+0xc]
1002218c:	mov    eax,DWORD PTR [esi+0xc]
1002218f:	mov    ecx,eax
10022191:	and    cl,0x3
10022194:	xor    ebx,ebx
10022196:	cmp    cl,0x2
10022199:	jne    0x100221da
1002219b:	test   ax,0x108
1002219f:	je     0x100221da
100221a1:	mov    eax,DWORD PTR [esi+0x8]
100221a4:	push   edi
100221a5:	mov    edi,DWORD PTR [esi]
100221a7:	sub    edi,eax
100221a9:	test   edi,edi
100221ab:	jle    0x100221d9
100221ad:	push   edi
100221ae:	push   eax
100221af:	push   esi
100221b0:	call   0x1002212d
100221b5:	pop    ecx
100221b6:	push   eax
100221b7:	call   0x1002292f
100221bc:	add    esp,0xc
100221bf:	cmp    eax,edi
100221c1:	jne    0x100221d2
100221c3:	mov    eax,DWORD PTR [esi+0xc]
100221c6:	test   al,al
100221c8:	jns    0x100221d9
100221ca:	and    eax,0xfffffffd
100221cd:	mov    DWORD PTR [esi+0xc],eax
100221d0:	jmp    0x100221d9
100221d2:	or     DWORD PTR [esi+0xc],0x20
100221d6:	or     ebx,0xffffffff
100221d9:	pop    edi
100221da:	mov    eax,DWORD PTR [esi+0x8]
100221dd:	and    DWORD PTR [esi+0x4],0x0
100221e1:	mov    DWORD PTR [esi],eax
100221e3:	pop    esi
100221e4:	mov    eax,ebx
100221e6:	pop    ebx
100221e7:	ret    
100221e8:	push   esi
100221e9:	mov    esi,DWORD PTR [esp+0x8]
100221ed:	test   esi,esi
100221ef:	jne    0x100221fa
100221f1:	push   esi
100221f2:	call   0x1002222a
100221f7:	pop    ecx
100221f8:	pop    esi
100221f9:	ret    
100221fa:	push   esi
100221fb:	call   0x10022186
10022200:	test   eax,eax
10022202:	pop    ecx
10022203:	je     0x1002220a
10022205:	or     eax,0xffffffff
10022208:	pop    esi
10022209:	ret    
1002220a:	test   WORD PTR [esi+0xc],0x4000
10022210:	je     0x10022226
10022212:	push   esi
10022213:	call   0x1002212d
10022218:	push   eax
10022219:	call   0x100248c4
1002221e:	pop    ecx
1002221f:	pop    ecx
10022220:	neg    eax
10022222:	sbb    eax,eax
10022224:	pop    esi
10022225:	ret    
10022226:	xor    eax,eax
10022228:	pop    esi
10022229:	ret    
1002222a:	push   0x14
1002222c:	push   0x100bb790
10022231:	call   0x1001a750
10022236:	xor    edi,edi
10022238:	mov    DWORD PTR [ebp-0x1c],edi
1002223b:	mov    DWORD PTR [ebp-0x24],edi
1002223e:	push   0x1
10022240:	call   0x1001e3bb
10022245:	pop    ecx
10022246:	mov    DWORD PTR [ebp-0x4],edi
10022249:	xor    esi,esi
1002224b:	mov    DWORD PTR [ebp-0x20],esi
1002224e:	cmp    esi,DWORD PTR ds:0x100cb060
10022254:	jge    0x100222dd
1002225a:	mov    eax,ds:0x100ca050
1002225f:	lea    eax,[eax+esi*4]
10022262:	cmp    DWORD PTR [eax],edi
10022264:	je     0x100222c4
10022266:	mov    eax,DWORD PTR [eax]
10022268:	test   BYTE PTR [eax+0xc],0x83
1002226c:	je     0x100222c4
1002226e:	push   eax
1002226f:	push   esi
10022270:	call   0x1002139d
10022275:	pop    ecx
10022276:	pop    ecx
10022277:	xor    edx,edx
10022279:	inc    edx
1002227a:	mov    DWORD PTR [ebp-0x4],edx
1002227d:	mov    eax,ds:0x100ca050
10022282:	mov    eax,DWORD PTR [eax+esi*4]
10022285:	mov    ecx,DWORD PTR [eax+0xc]
10022288:	test   cl,0x83
1002228b:	je     0x100222bc
1002228d:	cmp    DWORD PTR [ebp+0x8],edx
10022290:	jne    0x100222a3
10022292:	push   eax
10022293:	call   0x100221e8
10022298:	pop    ecx
10022299:	cmp    eax,0xffffffff
1002229c:	je     0x100222bc
1002229e:	inc    DWORD PTR [ebp-0x1c]
100222a1:	jmp    0x100222bc
100222a3:	cmp    DWORD PTR [ebp+0x8],edi
100222a6:	jne    0x100222bc
100222a8:	test   cl,0x2
100222ab:	je     0x100222bc
100222ad:	push   eax
100222ae:	call   0x100221e8
100222b3:	pop    ecx
100222b4:	cmp    eax,0xffffffff
100222b7:	jne    0x100222bc
100222b9:	or     DWORD PTR [ebp-0x24],eax
100222bc:	mov    DWORD PTR [ebp-0x4],edi
100222bf:	call   0x100222cc
100222c4:	inc    esi
100222c5:	jmp    0x1002224b
100222c7:	xor    edi,edi
100222c9:	mov    esi,DWORD PTR [ebp-0x20]
100222cc:	mov    eax,ds:0x100ca050
100222d1:	push   DWORD PTR [eax+esi*4]
100222d4:	push   esi
100222d5:	call   0x10021401
100222da:	pop    ecx
100222db:	pop    ecx
100222dc:	ret    
100222dd:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100222e4:	call   0x100222fb
100222e9:	cmp    DWORD PTR [ebp+0x8],0x1
100222ed:	mov    eax,DWORD PTR [ebp-0x1c]
100222f0:	je     0x100222f5
100222f2:	mov    eax,DWORD PTR [ebp-0x24]
100222f5:	call   0x1001a795
100222fa:	ret    
100222fb:	push   0x1
100222fd:	call   0x1001e2e3
10022302:	pop    ecx
10022303:	ret    
10022304:	push   0x1
10022306:	call   0x1002222a
1002230b:	pop    ecx
1002230c:	ret    
1002230d:	push   ebp
1002230e:	lea    ebp,[esp-0x514]
10022315:	sub    esp,0x590
1002231b:	mov    eax,ds:0x100c7654
10022320:	xor    eax,ebp
10022322:	mov    DWORD PTR [ebp+0x510],eax
10022328:	mov    eax,DWORD PTR [ebp+0x520]
1002232e:	push   esi
1002232f:	xor    esi,esi
10022331:	cmp    DWORD PTR [ebp+0x524],esi
10022337:	mov    DWORD PTR [ebp-0x64],eax
1002233a:	mov    DWORD PTR [ebp-0x60],esi
1002233d:	mov    DWORD PTR [ebp-0x68],esi
10022340:	jne    0x10022349
10022342:	xor    eax,eax
10022344:	jmp    0x10022919
10022349:	cmp    eax,esi
1002234b:	jne    0x10022374
1002234d:	call   0x1001cd21
10022352:	mov    DWORD PTR [eax],esi
10022354:	call   0x1001cd0e
10022359:	push   esi
1002235a:	push   esi
1002235b:	push   esi
1002235c:	push   esi
1002235d:	push   esi
1002235e:	mov    DWORD PTR [eax],0x16
10022364:	call   0x10018dbf
10022369:	add    esp,0x14
1002236c:	or     eax,0xffffffff
1002236f:	jmp    0x10022919
10022374:	push   ebx
10022375:	push   edi
10022376:	mov    edi,DWORD PTR [ebp+0x51c]
1002237c:	mov    eax,edi
1002237e:	sar    eax,0x5
10022381:	lea    esi,[eax*4+0x100cb080]
10022388:	mov    eax,DWORD PTR [esi]
1002238a:	and    edi,0x1f
1002238d:	shl    edi,0x6
10022390:	add    eax,edi
10022392:	mov    bl,BYTE PTR [eax+0x24]
10022395:	add    bl,bl
10022397:	sar    bl,1
10022399:	cmp    bl,0x2
1002239c:	mov    DWORD PTR [ebp-0x70],esi
1002239f:	mov    BYTE PTR [ebp-0x71],bl
100223a2:	je     0x100223a9
100223a4:	cmp    bl,0x1
100223a7:	jne    0x100223dc
100223a9:	mov    ecx,DWORD PTR [ebp+0x524]
100223af:	not    ecx
100223b1:	test   cl,0x1
100223b4:	jne    0x100223dc
100223b6:	call   0x1001cd21
100223bb:	xor    esi,esi
100223bd:	mov    DWORD PTR [eax],esi
100223bf:	call   0x1001cd0e
100223c4:	push   esi
100223c5:	push   esi
100223c6:	push   esi
100223c7:	push   esi
100223c8:	push   esi
100223c9:	mov    DWORD PTR [eax],0x16
100223cf:	call   0x10018dbf
100223d4:	add    esp,0x14
100223d7:	jmp    0x1002290c
100223dc:	test   BYTE PTR [eax+0x4],0x20
100223e0:	je     0x100223f6
100223e2:	push   0x2
100223e4:	push   0x0
100223e6:	push   0x0
100223e8:	push   DWORD PTR [ebp+0x51c]
100223ee:	call   0x10020f3a
100223f3:	add    esp,0x10
100223f6:	push   DWORD PTR [ebp+0x51c]
100223fc:	call   0x1002432f
10022401:	test   eax,eax
10022403:	pop    ecx
10022404:	je     0x10022643
1002240a:	mov    eax,DWORD PTR [esi]
1002240c:	test   BYTE PTR [edi+eax*1+0x4],0x80
10022411:	je     0x10022643
10022417:	call   0x1001c526
1002241c:	mov    eax,DWORD PTR [eax+0x6c]
1002241f:	xor    ecx,ecx
10022421:	cmp    DWORD PTR [eax+0x14],ecx
10022424:	lea    eax,[ebp-0x7c]
10022427:	sete   cl
1002242a:	push   eax
1002242b:	mov    eax,DWORD PTR [esi]
1002242d:	push   DWORD PTR [edi+eax*1]
10022430:	mov    DWORD PTR [ebp-0x78],ecx
10022433:	call   DWORD PTR ds:0x1002f13c
10022439:	test   eax,eax
1002243b:	je     0x10022643
10022441:	xor    ecx,ecx
10022443:	cmp    DWORD PTR [ebp-0x78],ecx
10022446:	je     0x10022450
10022448:	test   bl,bl
1002244a:	je     0x10022645
10022450:	call   DWORD PTR ds:0x1002f158
10022456:	mov    ebx,DWORD PTR [ebp-0x64]
10022459:	mov    DWORD PTR [ebp-0x7c],eax
1002245c:	xor    eax,eax
1002245e:	cmp    DWORD PTR [ebp+0x524],eax
10022464:	mov    DWORD PTR [ebp-0x5c],eax
10022467:	jbe    0x100228b4
1002246d:	mov    DWORD PTR [ebp-0x54],eax
10022470:	mov    al,BYTE PTR [ebp-0x71]
10022473:	test   al,al
10022475:	jne    0x100225b8
1002247b:	mov    cl,BYTE PTR [ebx]
1002247d:	mov    esi,DWORD PTR [ebp-0x70]
10022480:	xor    eax,eax
10022482:	cmp    cl,0xa
10022485:	sete   al
10022488:	mov    DWORD PTR [ebp-0x78],eax
1002248b:	mov    eax,DWORD PTR [esi]
1002248d:	add    eax,edi
1002248f:	cmp    DWORD PTR [eax+0x38],0x0
10022493:	je     0x100224b3
10022495:	mov    dl,BYTE PTR [eax+0x34]
10022498:	mov    BYTE PTR [ebp+0x508],dl
1002249e:	mov    BYTE PTR [ebp+0x509],cl
100224a4:	and    DWORD PTR [eax+0x38],0x0
100224a8:	push   0x2
100224aa:	lea    eax,[ebp+0x508]
100224b0:	push   eax
100224b1:	jmp    0x100224f8
100224b3:	movsx  eax,cl
100224b6:	push   eax
100224b7:	call   0x10019cbd
100224bc:	test   eax,eax
100224be:	pop    ecx
100224bf:	je     0x100224f5
100224c1:	mov    ecx,DWORD PTR [ebp-0x64]
100224c4:	sub    ecx,ebx
100224c6:	add    ecx,DWORD PTR [ebp+0x524]
100224cc:	xor    eax,eax
100224ce:	inc    eax
100224cf:	cmp    ecx,eax
100224d1:	jbe    0x1002262d
100224d7:	push   0x2
100224d9:	lea    eax,[ebp-0x58]
100224dc:	push   ebx
100224dd:	push   eax
100224de:	call   0x10024694
100224e3:	add    esp,0xc
100224e6:	cmp    eax,0xffffffff
100224e9:	je     0x100228ae
100224ef:	inc    ebx
100224f0:	inc    DWORD PTR [ebp-0x54]
100224f3:	jmp    0x1002250d
100224f5:	push   0x1
100224f7:	push   ebx
100224f8:	lea    eax,[ebp-0x58]
100224fb:	push   eax
100224fc:	call   0x10024694
10022501:	add    esp,0xc
10022504:	cmp    eax,0xffffffff
10022507:	je     0x100228ae
1002250d:	xor    eax,eax
1002250f:	push   eax
10022510:	push   eax
10022511:	push   0x5
10022513:	lea    ecx,[ebp+0x508]
10022519:	push   ecx
1002251a:	push   0x1
1002251c:	lea    ecx,[ebp-0x58]
1002251f:	push   ecx
10022520:	push   eax
10022521:	push   DWORD PTR [ebp-0x7c]
10022524:	inc    ebx
10022525:	inc    DWORD PTR [ebp-0x54]
10022528:	call   DWORD PTR ds:0x1002f038
1002252e:	mov    esi,eax
10022530:	test   esi,esi
10022532:	je     0x100228ae
10022538:	push   0x0
1002253a:	lea    eax,[ebp-0x5c]
1002253d:	push   eax
1002253e:	push   esi
1002253f:	lea    eax,[ebp+0x508]
10022545:	push   eax
10022546:	mov    eax,DWORD PTR [ebp-0x70]
10022549:	mov    eax,DWORD PTR [eax]
1002254b:	push   DWORD PTR [edi+eax*1]
1002254e:	call   DWORD PTR ds:0x1002f0c0
10022554:	test   eax,eax
10022556:	je     0x100228a5
1002255c:	mov    eax,DWORD PTR [ebp-0x54]
1002255f:	mov    ecx,DWORD PTR [ebp-0x68]
10022562:	add    eax,ecx
10022564:	cmp    DWORD PTR [ebp-0x5c],esi
10022567:	mov    DWORD PTR [ebp-0x60],eax
1002256a:	jl     0x100228ae
10022570:	cmp    DWORD PTR [ebp-0x78],0x0
10022574:	je     0x10022619
1002257a:	push   0x0
1002257c:	lea    eax,[ebp-0x5c]
1002257f:	push   eax
10022580:	push   0x1
10022582:	lea    eax,[ebp+0x508]
10022588:	push   eax
10022589:	mov    eax,DWORD PTR [ebp-0x70]
1002258c:	mov    eax,DWORD PTR [eax]
1002258e:	mov    BYTE PTR [ebp+0x508],0xd
10022595:	push   DWORD PTR [edi+eax*1]
10022598:	call   DWORD PTR ds:0x1002f0c0
1002259e:	test   eax,eax
100225a0:	je     0x100228a5
100225a6:	cmp    DWORD PTR [ebp-0x5c],0x1
100225aa:	jl     0x100228ae
100225b0:	inc    DWORD PTR [ebp-0x68]
100225b3:	inc    DWORD PTR [ebp-0x60]
100225b6:	jmp    0x10022619
100225b8:	cmp    al,0x1
100225ba:	je     0x100225c0
100225bc:	cmp    al,0x2
100225be:	jne    0x100225d8
100225c0:	movzx  esi,WORD PTR [ebx]
100225c3:	xor    ecx,ecx
100225c5:	cmp    si,0xa
100225c9:	sete   cl
100225cc:	inc    ebx
100225cd:	inc    ebx
100225ce:	add    DWORD PTR [ebp-0x54],0x2
100225d2:	mov    DWORD PTR [ebp-0x58],esi
100225d5:	mov    DWORD PTR [ebp-0x78],ecx
100225d8:	cmp    al,0x1
100225da:	je     0x100225e0
100225dc:	cmp    al,0x2
100225de:	jne    0x10022619
100225e0:	push   DWORD PTR [ebp-0x58]
100225e3:	call   0x100249a5
100225e8:	cmp    ax,WORD PTR [ebp-0x58]
100225ec:	pop    ecx
100225ed:	jne    0x100228a5
100225f3:	inc    DWORD PTR [ebp-0x60]
100225f6:	cmp    DWORD PTR [ebp-0x78],0x0
100225fa:	je     0x10022619
100225fc:	push   0xd
100225fe:	pop    eax
100225ff:	push   eax
10022600:	mov    DWORD PTR [ebp-0x58],eax
10022603:	call   0x100249a5
10022608:	cmp    ax,WORD PTR [ebp-0x58]
1002260c:	pop    ecx
1002260d:	jne    0x100228a5
10022613:	inc    DWORD PTR [ebp-0x60]
10022616:	inc    DWORD PTR [ebp-0x68]
10022619:	mov    eax,DWORD PTR [ebp+0x524]
1002261f:	cmp    DWORD PTR [ebp-0x54],eax
10022622:	jb     0x10022470
10022628:	jmp    0x100228ae
1002262d:	mov    ecx,DWORD PTR [esi]
1002262f:	mov    dl,BYTE PTR [ebx]
10022631:	inc    DWORD PTR [ebp-0x60]
10022634:	mov    BYTE PTR [edi+ecx*1+0x34],dl
10022638:	mov    ecx,DWORD PTR [esi]
1002263a:	mov    DWORD PTR [edi+ecx*1+0x38],eax
1002263e:	jmp    0x100228ae
10022643:	xor    ecx,ecx
10022645:	mov    eax,DWORD PTR [esi]
10022647:	add    eax,edi
10022649:	test   BYTE PTR [eax+0x4],0x80
1002264d:	je     0x1002287e
10022653:	test   bl,bl
10022655:	mov    eax,DWORD PTR [ebp-0x64]
10022658:	mov    DWORD PTR [ebp-0x58],ecx
1002265b:	jne    0x100226f7
10022661:	cmp    DWORD PTR [ebp+0x524],ecx
10022667:	mov    DWORD PTR [ebp-0x5c],eax
1002266a:	jbe    0x100228e4
10022670:	jmp    0x10022675
10022672:	mov    esi,DWORD PTR [ebp-0x70]
10022675:	mov    ecx,DWORD PTR [ebp-0x5c]
10022678:	and    DWORD PTR [ebp-0x54],0x0
1002267c:	sub    ecx,DWORD PTR [ebp-0x64]
1002267f:	lea    eax,[ebp-0x50]
10022682:	cmp    ecx,DWORD PTR [ebp+0x524]
10022688:	jae    0x100226b1
1002268a:	mov    edx,DWORD PTR [ebp-0x5c]
1002268d:	inc    DWORD PTR [ebp-0x5c]
10022690:	mov    dl,BYTE PTR [edx]
10022692:	inc    ecx
10022693:	cmp    dl,0xa
10022696:	jne    0x100226a2
10022698:	inc    DWORD PTR [ebp-0x68]
1002269b:	mov    BYTE PTR [eax],0xd
1002269e:	inc    eax
1002269f:	inc    DWORD PTR [ebp-0x54]
100226a2:	mov    BYTE PTR [eax],dl
100226a4:	inc    eax
100226a5:	inc    DWORD PTR [ebp-0x54]
100226a8:	cmp    DWORD PTR [ebp-0x54],0x400
100226af:	jb     0x10022682
100226b1:	mov    ebx,eax
100226b3:	lea    eax,[ebp-0x50]
100226b6:	sub    ebx,eax
100226b8:	push   0x0
100226ba:	lea    eax,[ebp-0x6c]
100226bd:	push   eax
100226be:	push   ebx
100226bf:	lea    eax,[ebp-0x50]
100226c2:	push   eax
100226c3:	mov    eax,DWORD PTR [esi]
100226c5:	push   DWORD PTR [edi+eax*1]
100226c8:	call   DWORD PTR ds:0x1002f0c0
100226ce:	test   eax,eax
100226d0:	je     0x100228a5
100226d6:	mov    eax,DWORD PTR [ebp-0x6c]
100226d9:	add    DWORD PTR [ebp-0x60],eax
100226dc:	cmp    eax,ebx
100226de:	jl     0x100228ae
100226e4:	mov    eax,DWORD PTR [ebp-0x5c]
100226e7:	sub    eax,DWORD PTR [ebp-0x64]
100226ea:	cmp    eax,DWORD PTR [ebp+0x524]
100226f0:	jb     0x10022672
100226f2:	jmp    0x100228ae
100226f7:	cmp    bl,0x2
100226fa:	mov    DWORD PTR [ebp-0x54],eax
100226fd:	jne    0x100227a6
10022703:	cmp    DWORD PTR [ebp+0x524],ecx
10022709:	jbe    0x100228e4
1002270f:	jmp    0x10022714
10022711:	mov    esi,DWORD PTR [ebp-0x70]
10022714:	mov    ecx,DWORD PTR [ebp-0x54]
10022717:	and    DWORD PTR [ebp-0x5c],0x0
1002271b:	sub    ecx,DWORD PTR [ebp-0x64]
1002271e:	lea    eax,[ebp-0x50]
10022721:	cmp    ecx,DWORD PTR [ebp+0x524]
10022727:	jae    0x1002275c
10022729:	mov    edx,DWORD PTR [ebp-0x54]
1002272c:	add    DWORD PTR [ebp-0x54],0x2
10022730:	movzx  edx,WORD PTR [edx]
10022733:	inc    ecx
10022734:	inc    ecx
10022735:	cmp    dx,0xa
10022739:	jne    0x1002274a
1002273b:	add    DWORD PTR [ebp-0x68],0x2
1002273f:	mov    WORD PTR [eax],0xd
10022744:	inc    eax
10022745:	inc    eax
10022746:	add    DWORD PTR [ebp-0x5c],0x2
1002274a:	add    DWORD PTR [ebp-0x5c],0x2
1002274e:	mov    WORD PTR [eax],dx
10022751:	inc    eax
10022752:	inc    eax
10022753:	cmp    DWORD PTR [ebp-0x5c],0x3ff
1002275a:	jb     0x10022721
1002275c:	mov    ebx,eax
1002275e:	lea    eax,[ebp-0x50]
10022761:	sub    ebx,eax
10022763:	push   0x0
10022765:	lea    eax,[ebp-0x6c]
10022768:	push   eax
10022769:	push   ebx
1002276a:	lea    eax,[ebp-0x50]
1002276d:	push   eax
1002276e:	mov    eax,DWORD PTR [esi]
10022770:	push   DWORD PTR [edi+eax*1]
10022773:	call   DWORD PTR ds:0x1002f0c0
10022779:	test   eax,eax
1002277b:	je     0x100228a5
10022781:	mov    eax,DWORD PTR [ebp-0x6c]
10022784:	add    DWORD PTR [ebp-0x60],eax
10022787:	cmp    eax,ebx
10022789:	jl     0x100228ae
1002278f:	mov    eax,DWORD PTR [ebp-0x54]
10022792:	sub    eax,DWORD PTR [ebp-0x64]
10022795:	cmp    eax,DWORD PTR [ebp+0x524]
1002279b:	jb     0x10022711
100227a1:	jmp    0x100228ae
100227a6:	cmp    DWORD PTR [ebp+0x524],ecx
100227ac:	jbe    0x100228e4
100227b2:	mov    ecx,DWORD PTR [ebp-0x54]
100227b5:	and    DWORD PTR [ebp-0x5c],0x0
100227b9:	sub    ecx,DWORD PTR [ebp-0x64]
100227bc:	push   0x2
100227be:	lea    eax,[ebp+0x3b4]
100227c4:	pop    esi
100227c5:	cmp    ecx,DWORD PTR [ebp+0x524]
100227cb:	jae    0x100227f9
100227cd:	mov    edx,DWORD PTR [ebp-0x54]
100227d0:	movzx  edx,WORD PTR [edx]
100227d3:	add    DWORD PTR [ebp-0x54],esi
100227d6:	add    ecx,esi
100227d8:	cmp    dx,0xa
100227dc:	jne    0x100227e8
100227de:	mov    WORD PTR [eax],0xd
100227e3:	add    eax,esi
100227e5:	add    DWORD PTR [ebp-0x5c],esi
100227e8:	add    DWORD PTR [ebp-0x5c],esi
100227eb:	mov    WORD PTR [eax],dx
100227ee:	add    eax,esi
100227f0:	cmp    DWORD PTR [ebp-0x5c],0x152
100227f7:	jb     0x100227c5
100227f9:	xor    esi,esi
100227fb:	push   esi
100227fc:	push   esi
100227fd:	push   0x2ab
10022802:	lea    ecx,[ebp+0x104]
10022808:	push   ecx
10022809:	lea    ecx,[ebp+0x3b4]
1002280f:	sub    eax,ecx
10022811:	cdq    
10022812:	sub    eax,edx
10022814:	sar    eax,1
10022816:	push   eax
10022817:	mov    eax,ecx
10022819:	push   eax
1002281a:	push   esi
1002281b:	push   0xfde9
10022820:	call   DWORD PTR ds:0x1002f038
10022826:	mov    ebx,eax
10022828:	cmp    ebx,esi
1002282a:	je     0x100228a5
1002282c:	push   0x0
1002282e:	lea    eax,[ebp-0x6c]
10022831:	push   eax
10022832:	mov    eax,ebx
10022834:	sub    eax,esi
10022836:	push   eax
10022837:	lea    eax,[ebp+esi*1+0x104]
1002283e:	push   eax
1002283f:	mov    eax,DWORD PTR [ebp-0x70]
10022842:	mov    eax,DWORD PTR [eax]
10022844:	push   DWORD PTR [edi+eax*1]
10022847:	call   DWORD PTR ds:0x1002f0c0
1002284d:	test   eax,eax
1002284f:	je     0x1002285a
10022851:	add    esi,DWORD PTR [ebp-0x6c]
10022854:	cmp    ebx,esi
10022856:	jg     0x1002282c
10022858:	jmp    0x10022863
1002285a:	call   DWORD PTR ds:0x1002f094
10022860:	mov    DWORD PTR [ebp-0x58],eax
10022863:	cmp    ebx,esi
10022865:	jg     0x100228ae
10022867:	mov    eax,DWORD PTR [ebp-0x54]
1002286a:	sub    eax,DWORD PTR [ebp-0x64]
1002286d:	cmp    eax,DWORD PTR [ebp+0x524]
10022873:	mov    DWORD PTR [ebp-0x60],eax
10022876:	jb     0x100227b2
1002287c:	jmp    0x100228ae
1002287e:	push   0x0
10022880:	lea    ecx,[ebp-0x6c]
10022883:	push   ecx
10022884:	push   DWORD PTR [ebp+0x524]
1002288a:	push   DWORD PTR [ebp-0x64]
1002288d:	push   DWORD PTR [eax]
1002288f:	call   DWORD PTR ds:0x1002f0c0
10022895:	test   eax,eax
10022897:	je     0x100228a5
10022899:	mov    eax,DWORD PTR [ebp-0x6c]
1002289c:	and    DWORD PTR [ebp-0x58],0x0
100228a0:	mov    DWORD PTR [ebp-0x60],eax
100228a3:	jmp    0x100228ae
100228a5:	call   DWORD PTR ds:0x1002f094
100228ab:	mov    DWORD PTR [ebp-0x58],eax
100228ae:	cmp    DWORD PTR [ebp-0x60],0x0
100228b2:	jne    0x10022911
100228b4:	cmp    DWORD PTR [ebp-0x58],0x0
100228b8:	je     0x100228e1
100228ba:	push   0x5
100228bc:	pop    esi
100228bd:	cmp    DWORD PTR [ebp-0x58],esi
100228c0:	jne    0x100228d6
100228c2:	call   0x1001cd0e
100228c7:	mov    DWORD PTR [eax],0x9
100228cd:	call   0x1001cd21
100228d2:	mov    DWORD PTR [eax],esi
100228d4:	jmp    0x1002290c
100228d6:	push   DWORD PTR [ebp-0x58]
100228d9:	call   0x1001cd34
100228de:	pop    ecx
100228df:	jmp    0x1002290c
100228e1:	mov    esi,DWORD PTR [ebp-0x70]
100228e4:	mov    eax,DWORD PTR [esi]
100228e6:	test   BYTE PTR [edi+eax*1+0x4],0x40
100228eb:	je     0x100228f9
100228ed:	mov    eax,DWORD PTR [ebp-0x64]
100228f0:	cmp    BYTE PTR [eax],0x1a
100228f3:	jne    0x100228f9
100228f5:	xor    eax,eax
100228f7:	jmp    0x10022917
100228f9:	call   0x1001cd0e
100228fe:	mov    DWORD PTR [eax],0x1c
10022904:	call   0x1001cd21
10022909:	and    DWORD PTR [eax],0x0
1002290c:	or     eax,0xffffffff
1002290f:	jmp    0x10022917
10022911:	mov    eax,DWORD PTR [ebp-0x60]
10022914:	sub    eax,DWORD PTR [ebp-0x68]
10022917:	pop    edi
10022918:	pop    ebx
10022919:	mov    ecx,DWORD PTR [ebp+0x510]
1002291f:	xor    ecx,ebp
10022921:	pop    esi
10022922:	call   0x10018773
10022927:	add    ebp,0x514
1002292d:	leave  
1002292e:	ret    
1002292f:	push   0x10
10022931:	push   0x100bb7b8
10022936:	call   0x1001a750
1002293b:	mov    eax,DWORD PTR [ebp+0x8]
1002293e:	cmp    eax,0xfffffffe
10022941:	jne    0x1002295e
10022943:	call   0x1001cd21
10022948:	and    DWORD PTR [eax],0x0
1002294b:	call   0x1001cd0e
10022950:	mov    DWORD PTR [eax],0x9
10022956:	or     eax,0xffffffff
10022959:	jmp    0x100229fb
1002295e:	xor    edi,edi
10022960:	cmp    eax,edi
10022962:	jl     0x1002296c
10022964:	cmp    eax,DWORD PTR ds:0x100cb064
1002296a:	jb     0x1002298d
1002296c:	call   0x1001cd21
10022971:	mov    DWORD PTR [eax],edi
10022973:	call   0x1001cd0e
10022978:	mov    DWORD PTR [eax],0x9
1002297e:	push   edi
1002297f:	push   edi
10022980:	push   edi
10022981:	push   edi
10022982:	push   edi
10022983:	call   0x10018dbf
10022988:	add    esp,0x14
1002298b:	jmp    0x10022956
1002298d:	mov    ecx,eax
1002298f:	sar    ecx,0x5
10022992:	lea    ebx,[ecx*4+0x100cb080]
10022999:	mov    esi,eax
1002299b:	and    esi,0x1f
1002299e:	shl    esi,0x6
100229a1:	mov    ecx,DWORD PTR [ebx]
100229a3:	movzx  ecx,BYTE PTR [ecx+esi*1+0x4]
100229a8:	and    ecx,0x1
100229ab:	je     0x1002296c
100229ad:	push   eax
100229ae:	call   0x100211c8
100229b3:	pop    ecx
100229b4:	mov    DWORD PTR [ebp-0x4],edi
100229b7:	mov    eax,DWORD PTR [ebx]
100229b9:	test   BYTE PTR [eax+esi*1+0x4],0x1
100229be:	je     0x100229d6
100229c0:	push   DWORD PTR [ebp+0x10]
100229c3:	push   DWORD PTR [ebp+0xc]
100229c6:	push   DWORD PTR [ebp+0x8]
100229c9:	call   0x1002230d
100229ce:	add    esp,0xc
100229d1:	mov    DWORD PTR [ebp-0x1c],eax
100229d4:	jmp    0x100229ec
100229d6:	call   0x1001cd0e
100229db:	mov    DWORD PTR [eax],0x9
100229e1:	call   0x1001cd21
100229e6:	mov    DWORD PTR [eax],edi
100229e8:	or     DWORD PTR [ebp-0x1c],0xffffffff
100229ec:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100229f3:	call   0x10022a01
100229f8:	mov    eax,DWORD PTR [ebp-0x1c]
100229fb:	call   0x1001a795
10022a00:	ret    
10022a01:	push   DWORD PTR [ebp+0x8]
10022a04:	call   0x10021268
10022a09:	pop    ecx
10022a0a:	ret    
10022a0b:	push   ebp
10022a0c:	mov    ebp,esp
10022a0e:	sub    esp,0x10
10022a11:	mov    eax,ds:0x100c7654
10022a16:	xor    eax,ebp
10022a18:	mov    DWORD PTR [ebp-0x4],eax
10022a1b:	push   ebx
10022a1c:	push   esi
10022a1d:	mov    esi,DWORD PTR ds:0x1002f1c8
10022a23:	xor    ebx,ebx
10022a25:	cmp    DWORD PTR ds:0x100c9bc4,ebx
10022a2b:	push   edi
10022a2c:	mov    edi,ecx
10022a2e:	jne    0x10022a66
10022a30:	push   ebx
10022a31:	push   ebx
10022a32:	push   0x1
10022a34:	push   0x100b9dec
10022a39:	push   0x100
10022a3e:	push   ebx
10022a3f:	call   esi
10022a41:	test   eax,eax
10022a43:	je     0x10022a51
10022a45:	mov    DWORD PTR ds:0x100c9bc4,0x1
10022a4f:	jmp    0x10022a66
10022a51:	call   DWORD PTR ds:0x1002f094
10022a57:	cmp    eax,0x78
10022a5a:	jne    0x10022a66
10022a5c:	mov    DWORD PTR ds:0x100c9bc4,0x2
10022a66:	cmp    DWORD PTR [ebp+0x14],ebx
10022a69:	jle    0x10022a88
10022a6b:	mov    ecx,DWORD PTR [ebp+0x14]
10022a6e:	mov    eax,DWORD PTR [ebp+0x10]
10022a71:	dec    ecx
10022a72:	cmp    WORD PTR [eax],bx
10022a75:	je     0x10022a80
10022a77:	inc    eax
10022a78:	inc    eax
10022a79:	cmp    ecx,ebx
10022a7b:	jne    0x10022a71
10022a7d:	or     ecx,0xffffffff
10022a80:	or     eax,0xffffffff
10022a83:	sub    eax,ecx
10022a85:	add    DWORD PTR [ebp+0x14],eax
10022a88:	mov    eax,ds:0x100c9bc4
10022a8d:	cmp    eax,0x1
10022a90:	jne    0x10022aab
10022a92:	push   DWORD PTR [ebp+0x1c]
10022a95:	push   DWORD PTR [ebp+0x18]
10022a98:	push   DWORD PTR [ebp+0x14]
10022a9b:	push   DWORD PTR [ebp+0x10]
10022a9e:	push   DWORD PTR [ebp+0xc]
10022aa1:	push   DWORD PTR [ebp+0x8]
10022aa4:	call   esi
10022aa6:	jmp    0x10022c5a
10022aab:	cmp    eax,0x2
10022aae:	je     0x10022ab4
10022ab0:	cmp    eax,ebx
10022ab2:	jne    0x10022b06
10022ab4:	cmp    DWORD PTR [ebp+0x8],ebx
10022ab7:	mov    DWORD PTR [ebp-0xc],ebx
10022aba:	jne    0x10022ac4
10022abc:	mov    eax,DWORD PTR [edi]
10022abe:	mov    eax,DWORD PTR [eax+0x14]
10022ac1:	mov    DWORD PTR [ebp+0x8],eax
10022ac4:	cmp    DWORD PTR [ebp+0x20],ebx
10022ac7:	jne    0x10022ad1
10022ac9:	mov    eax,DWORD PTR [edi]
10022acb:	mov    eax,DWORD PTR [eax+0x4]
10022ace:	mov    DWORD PTR [ebp+0x20],eax
10022ad1:	push   DWORD PTR [ebp+0x8]
10022ad4:	call   0x10022ecb
10022ad9:	cmp    DWORD PTR [ebp+0x20],eax
10022adc:	pop    ecx
10022add:	je     0x10022ae7
10022adf:	cmp    eax,0xffffffff
10022ae2:	je     0x10022ae7
10022ae4:	mov    DWORD PTR [ebp+0x20],eax
10022ae7:	mov    esi,DWORD PTR ds:0x1002f038
10022aed:	push   ebx
10022aee:	push   ebx
10022aef:	push   ebx
10022af0:	push   ebx
10022af1:	push   DWORD PTR [ebp+0x14]
10022af4:	push   DWORD PTR [ebp+0x10]
10022af7:	push   ebx
10022af8:	push   DWORD PTR [ebp+0x20]
10022afb:	call   esi
10022afd:	mov    edi,eax
10022aff:	cmp    edi,ebx
10022b01:	mov    DWORD PTR [ebp-0x10],edi
10022b04:	jne    0x10022b0d
10022b06:	xor    eax,eax
10022b08:	jmp    0x10022c5a
10022b0d:	jle    0x10022b51
10022b0f:	push   0xffffffe0
10022b11:	xor    edx,edx
10022b13:	pop    eax
10022b14:	div    edi
10022b16:	cmp    eax,0x1
10022b19:	jb     0x10022b51
10022b1b:	lea    eax,[edi+0x8]
10022b1e:	cmp    eax,0x400
10022b23:	ja     0x10022b38
10022b25:	call   0x10018790
10022b2a:	mov    eax,esp
10022b2c:	cmp    eax,ebx
10022b2e:	je     0x10022b4c
10022b30:	mov    DWORD PTR [eax],0xcccc
10022b36:	jmp    0x10022b49
10022b38:	push   eax
10022b39:	call   0x100198b2
10022b3e:	cmp    eax,ebx
10022b40:	pop    ecx
10022b41:	je     0x10022b4c
10022b43:	mov    DWORD PTR [eax],0xdddd
10022b49:	add    eax,0x8
10022b4c:	mov    DWORD PTR [ebp-0x8],eax
10022b4f:	jmp    0x10022b54
10022b51:	mov    DWORD PTR [ebp-0x8],ebx
10022b54:	cmp    DWORD PTR [ebp-0x8],ebx
10022b57:	je     0x10022b06
10022b59:	push   ebx
10022b5a:	push   ebx
10022b5b:	push   edi
10022b5c:	push   DWORD PTR [ebp-0x8]
10022b5f:	push   DWORD PTR [ebp+0x14]
10022b62:	push   DWORD PTR [ebp+0x10]
10022b65:	push   ebx
10022b66:	push   DWORD PTR [ebp+0x20]
10022b69:	call   esi
10022b6b:	test   eax,eax
10022b6d:	je     0x10022c4e
10022b73:	push   ebx
10022b74:	push   ebx
10022b75:	push   edi
10022b76:	push   DWORD PTR [ebp-0x8]
10022b79:	mov    edi,DWORD PTR ds:0x1002f1c4
10022b7f:	push   DWORD PTR [ebp+0xc]
10022b82:	push   DWORD PTR [ebp+0x8]
10022b85:	call   edi
10022b87:	mov    esi,eax
10022b89:	cmp    esi,ebx
10022b8b:	je     0x10022c4e
10022b91:	jle    0x10022bd2
10022b93:	push   0xffffffe0
10022b95:	xor    edx,edx
10022b97:	pop    eax
10022b98:	div    esi
10022b9a:	cmp    eax,0x1
10022b9d:	jb     0x10022bd2
10022b9f:	lea    eax,[esi+0x8]
10022ba2:	cmp    eax,0x400
10022ba7:	ja     0x10022bbc
10022ba9:	call   0x10018790
10022bae:	mov    eax,esp
10022bb0:	cmp    eax,ebx
10022bb2:	je     0x10022bd0
10022bb4:	mov    DWORD PTR [eax],0xcccc
10022bba:	jmp    0x10022bcd
10022bbc:	push   eax
10022bbd:	call   0x100198b2
10022bc2:	cmp    eax,ebx
10022bc4:	pop    ecx
10022bc5:	je     0x10022bd0
10022bc7:	mov    DWORD PTR [eax],0xdddd
10022bcd:	add    eax,0x8
10022bd0:	mov    ebx,eax
10022bd2:	test   ebx,ebx
10022bd4:	je     0x10022c4e
10022bd6:	push   esi
10022bd7:	push   ebx
10022bd8:	push   DWORD PTR [ebp-0x10]
10022bdb:	push   DWORD PTR [ebp-0x8]
10022bde:	push   DWORD PTR [ebp+0xc]
10022be1:	push   DWORD PTR [ebp+0x8]
10022be4:	call   edi
10022be6:	test   eax,eax
10022be8:	je     0x10022c47
10022bea:	test   WORD PTR [ebp+0xc],0x400
10022bf0:	je     0x10022c26
10022bf2:	mov    eax,DWORD PTR [ebp+0x1c]
10022bf5:	xor    edi,edi
10022bf7:	cmp    eax,edi
10022bf9:	mov    DWORD PTR [ebp-0xc],esi
10022bfc:	je     0x10022c47
10022bfe:	cmp    eax,esi
10022c00:	jg     0x10022c05
10022c02:	lea    esi,[eax-0x1]
10022c05:	push   esi
10022c06:	push   ebx
10022c07:	push   eax
10022c08:	push   DWORD PTR [ebp+0x18]
10022c0b:	call   0x100236f6
10022c10:	add    esp,0x10
10022c13:	test   eax,eax
10022c15:	je     0x10022c47
10022c17:	push   edi
10022c18:	push   edi
10022c19:	push   edi
10022c1a:	push   edi
10022c1b:	push   edi
10022c1c:	call   0x10018cc3
10022c21:	add    esp,0x14
10022c24:	jmp    0x10022c47
10022c26:	xor    eax,eax
10022c28:	cmp    DWORD PTR [ebp+0x1c],eax
10022c2b:	jne    0x10022c31
10022c2d:	push   eax
10022c2e:	push   eax
10022c2f:	jmp    0x10022c37
10022c31:	push   DWORD PTR [ebp+0x1c]
10022c34:	push   DWORD PTR [ebp+0x18]
10022c37:	push   esi
10022c38:	push   ebx
10022c39:	push   0x1
10022c3b:	push   DWORD PTR [ebp+0x20]
10022c3e:	call   DWORD PTR ds:0x1002f098
10022c44:	mov    DWORD PTR [ebp-0xc],eax
10022c47:	push   ebx
10022c48:	call   0x1001a732
10022c4d:	pop    ecx
10022c4e:	push   DWORD PTR [ebp-0x8]
10022c51:	call   0x1001a732
10022c56:	mov    eax,DWORD PTR [ebp-0xc]
10022c59:	pop    ecx
10022c5a:	lea    esp,[ebp-0x1c]
10022c5d:	pop    edi
10022c5e:	pop    esi
10022c5f:	pop    ebx
10022c60:	mov    ecx,DWORD PTR [ebp-0x4]
10022c63:	xor    ecx,ebp
10022c65:	call   0x10018773
10022c6a:	leave  
10022c6b:	ret    
10022c6c:	push   ebp
10022c6d:	mov    ebp,esp
10022c6f:	sub    esp,0x10
10022c72:	push   DWORD PTR [ebp+0x8]
10022c75:	lea    ecx,[ebp-0x10]
10022c78:	call   0x1001924a
10022c7d:	push   DWORD PTR [ebp+0x24]
10022c80:	lea    ecx,[ebp-0x10]
10022c83:	push   DWORD PTR [ebp+0x20]
10022c86:	push   DWORD PTR [ebp+0x1c]
10022c89:	push   DWORD PTR [ebp+0x18]
10022c8c:	push   DWORD PTR [ebp+0x14]
10022c8f:	push   DWORD PTR [ebp+0x10]
10022c92:	push   DWORD PTR [ebp+0xc]
10022c95:	call   0x10022a0b
10022c9a:	add    esp,0x1c
10022c9d:	cmp    BYTE PTR [ebp-0x4],0x0
10022ca1:	je     0x10022caa
10022ca3:	mov    ecx,DWORD PTR [ebp-0x8]
10022ca6:	and    DWORD PTR [ecx+0x70],0xfffffffd
10022caa:	leave  
10022cab:	ret    
10022cac:	mov    eax,0x10025f78
10022cb1:	mov    ds:0x100c85c0,eax
10022cb6:	mov    DWORD PTR ds:0x100c85c4,0x10025674
10022cc0:	mov    DWORD PTR ds:0x100c85c8,0x10025632
10022cca:	mov    DWORD PTR ds:0x100c85cc,0x10025666
10022cd4:	mov    DWORD PTR ds:0x100c85d0,0x100255dc
10022cde:	mov    ds:0x100c85d4,eax
10022ce3:	mov    DWORD PTR ds:0x100c85d8,0x10025ef2
10022ced:	mov    DWORD PTR ds:0x100c85dc,0x100255f2
10022cf7:	mov    DWORD PTR ds:0x100c85e0,0x1002555c
10022d01:	mov    DWORD PTR ds:0x100c85e4,0x100254eb
10022d0b:	ret    
10022d0c:	call   0x10022cac
10022d11:	call   0x10025ffe
10022d16:	cmp    DWORD PTR [esp+0x4],0x0
10022d1b:	mov    ds:0x100c9bcc,eax
10022d20:	je     0x10022d27
10022d22:	call   0x10025f99
10022d27:	fnclex 
10022d29:	ret    
10022d2a:	push   ebp
10022d2b:	mov    ebp,esp
10022d2d:	sub    esp,0x10
10022d30:	push   DWORD PTR [ebp+0x8]
10022d33:	lea    ecx,[ebp-0x10]
10022d36:	call   0x1001924a
10022d3b:	movzx  eax,BYTE PTR [ebp+0xc]
10022d3f:	mov    ecx,DWORD PTR [ebp-0xc]
10022d42:	mov    dl,BYTE PTR [ebp+0x14]
10022d45:	test   BYTE PTR [ecx+eax*1+0x1d],dl
10022d49:	jne    0x10022d69
10022d4b:	cmp    DWORD PTR [ebp+0x10],0x0
10022d4f:	je     0x10022d63
10022d51:	mov    ecx,DWORD PTR [ebp-0x10]
10022d54:	mov    ecx,DWORD PTR [ecx+0xc8]
10022d5a:	movzx  eax,WORD PTR [ecx+eax*2]
10022d5e:	and    eax,DWORD PTR [ebp+0x10]
10022d61:	jmp    0x10022d65
10022d63:	xor    eax,eax
10022d65:	test   eax,eax
10022d67:	je     0x10022d6c
10022d69:	xor    eax,eax
10022d6b:	inc    eax
10022d6c:	cmp    BYTE PTR [ebp-0x4],0x0
10022d70:	je     0x10022d79
10022d72:	mov    ecx,DWORD PTR [ebp-0x8]
10022d75:	and    DWORD PTR [ecx+0x70],0xfffffffd
10022d79:	leave  
10022d7a:	ret    
10022d7b:	push   0x4
10022d7d:	push   0x0
10022d7f:	push   DWORD PTR [esp+0xc]
10022d83:	push   0x0
10022d85:	call   0x10022d2a
10022d8a:	add    esp,0x10
10022d8d:	ret    
10022d8e:	int3   
10022d8f:	int3   
10022d90:	mov    ecx,DWORD PTR [esp+0x4]
10022d94:	cmp    WORD PTR [ecx],0x5a4d
10022d99:	je     0x10022d9e
10022d9b:	xor    eax,eax
10022d9d:	ret    
10022d9e:	mov    eax,DWORD PTR [ecx+0x3c]
10022da1:	add    eax,ecx
10022da3:	cmp    DWORD PTR [eax],0x4550
10022da9:	jne    0x10022d9b
10022dab:	xor    ecx,ecx
10022dad:	cmp    WORD PTR [eax+0x18],0x10b
10022db3:	sete   cl
10022db6:	mov    eax,ecx
10022db8:	ret    
10022db9:	int3   
10022dba:	int3   
10022dbb:	int3   
10022dbc:	int3   
10022dbd:	int3   
10022dbe:	int3   
10022dbf:	int3   
10022dc0:	mov    eax,DWORD PTR [esp+0x4]
10022dc4:	mov    ecx,DWORD PTR [eax+0x3c]
10022dc7:	add    ecx,eax
10022dc9:	movzx  eax,WORD PTR [ecx+0x14]
10022dcd:	push   ebx
10022dce:	push   esi
10022dcf:	movzx  esi,WORD PTR [ecx+0x6]
10022dd3:	xor    edx,edx
10022dd5:	test   esi,esi
10022dd7:	push   edi
10022dd8:	lea    eax,[eax+ecx*1+0x18]
10022ddc:	jbe    0x10022dfc
10022dde:	mov    edi,DWORD PTR [esp+0x14]
10022de2:	mov    ecx,DWORD PTR [eax+0xc]
10022de5:	cmp    edi,ecx
10022de7:	jb     0x10022df2
10022de9:	mov    ebx,DWORD PTR [eax+0x8]
10022dec:	add    ebx,ecx
10022dee:	cmp    edi,ebx
10022df0:	jb     0x10022dfe
10022df2:	add    edx,0x1
10022df5:	add    eax,0x28
10022df8:	cmp    edx,esi
10022dfa:	jb     0x10022de2
10022dfc:	xor    eax,eax
10022dfe:	pop    edi
10022dff:	pop    esi
10022e00:	pop    ebx
10022e01:	ret    
10022e02:	int3   
10022e03:	int3   
10022e04:	int3   
10022e05:	int3   
10022e06:	int3   
10022e07:	int3   
10022e08:	int3   
10022e09:	int3   
10022e0a:	int3   
10022e0b:	int3   
10022e0c:	int3   
10022e0d:	int3   
10022e0e:	int3   
10022e0f:	int3   
10022e10:	push   ebp
10022e11:	mov    ebp,esp
10022e13:	push   0xfffffffe
10022e15:	push   0x100bb7d8
10022e1a:	push   0x1001a7b0
10022e1f:	mov    eax,fs:0x0
10022e25:	push   eax
10022e26:	sub    esp,0x8
10022e29:	push   ebx
10022e2a:	push   esi
10022e2b:	push   edi
10022e2c:	mov    eax,ds:0x100c7654
10022e31:	xor    DWORD PTR [ebp-0x8],eax
10022e34:	xor    eax,ebp
10022e36:	push   eax
10022e37:	lea    eax,[ebp-0x10]
10022e3a:	mov    fs:0x0,eax
10022e40:	mov    DWORD PTR [ebp-0x18],esp
10022e43:	mov    DWORD PTR [ebp-0x4],0x0
10022e4a:	push   0x10000000
10022e4f:	call   0x10022d90
10022e54:	add    esp,0x4
10022e57:	test   eax,eax
10022e59:	je     0x10022eb0
10022e5b:	mov    eax,DWORD PTR [ebp+0x8]
10022e5e:	sub    eax,0x10000000
10022e63:	push   eax
10022e64:	push   0x10000000
10022e69:	call   0x10022dc0
10022e6e:	add    esp,0x8
10022e71:	test   eax,eax
10022e73:	je     0x10022eb0
10022e75:	mov    eax,DWORD PTR [eax+0x24]
10022e78:	shr    eax,0x1f
10022e7b:	not    eax
10022e7d:	and    eax,0x1
10022e80:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10022e87:	mov    ecx,DWORD PTR [ebp-0x10]
10022e8a:	mov    DWORD PTR fs:0x0,ecx
10022e91:	pop    ecx
10022e92:	pop    edi
10022e93:	pop    esi
10022e94:	pop    ebx
10022e95:	mov    esp,ebp
10022e97:	pop    ebp
10022e98:	ret    
10022e99:	mov    eax,DWORD PTR [ebp-0x14]
10022e9c:	mov    ecx,DWORD PTR [eax]
10022e9e:	mov    eax,DWORD PTR [ecx]
10022ea0:	xor    edx,edx
10022ea2:	cmp    eax,0xc0000005
10022ea7:	sete   dl
10022eaa:	mov    eax,edx
10022eac:	ret    
10022ead:	mov    esp,DWORD PTR [ebp-0x18]
10022eb0:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10022eb7:	xor    eax,eax
10022eb9:	mov    ecx,DWORD PTR [ebp-0x10]
10022ebc:	mov    DWORD PTR fs:0x0,ecx
10022ec3:	pop    ecx
10022ec4:	pop    edi
10022ec5:	pop    esi
10022ec6:	pop    ebx
10022ec7:	mov    esp,ebp
10022ec9:	pop    ebp
10022eca:	ret    
10022ecb:	push   ebp
10022ecc:	mov    ebp,esp
10022ece:	sub    esp,0xc
10022ed1:	mov    eax,ds:0x100c7654
10022ed6:	xor    eax,ebp
10022ed8:	mov    DWORD PTR [ebp-0x4],eax
10022edb:	push   0x6
10022edd:	lea    eax,[ebp-0xc]
10022ee0:	push   eax
10022ee1:	push   0x1004
10022ee6:	push   DWORD PTR [ebp+0x8]
10022ee9:	mov    BYTE PTR [ebp-0x6],0x0
10022eed:	call   DWORD PTR ds:0x1002f170
10022ef3:	test   eax,eax
10022ef5:	jne    0x10022efc
10022ef7:	or     eax,0xffffffff
10022efa:	jmp    0x10022f06
10022efc:	lea    eax,[ebp-0xc]
10022eff:	push   eax
10022f00:	call   0x10026447
10022f05:	pop    ecx
10022f06:	mov    ecx,DWORD PTR [ebp-0x4]
10022f09:	xor    ecx,ebp
10022f0b:	call   0x10018773
10022f10:	leave  
10022f11:	ret    
10022f12:	push   ebp
10022f13:	mov    ebp,esp
10022f15:	sub    esp,0x34
10022f18:	mov    eax,ds:0x100c7654
10022f1d:	xor    eax,ebp
10022f1f:	mov    DWORD PTR [ebp-0x4],eax
10022f22:	mov    eax,DWORD PTR [ebp+0x10]
10022f25:	mov    ecx,DWORD PTR [ebp+0x18]
10022f28:	mov    DWORD PTR [ebp-0x28],eax
10022f2b:	mov    eax,DWORD PTR [ebp+0x14]
10022f2e:	push   ebx
10022f2f:	mov    DWORD PTR [ebp-0x30],eax
10022f32:	mov    eax,DWORD PTR [eax]
10022f34:	push   esi
10022f35:	mov    DWORD PTR [ebp-0x24],eax
10022f38:	mov    eax,DWORD PTR [ebp+0x8]
10022f3b:	push   edi
10022f3c:	xor    edi,edi
10022f3e:	cmp    eax,DWORD PTR [ebp+0xc]
10022f41:	mov    DWORD PTR [ebp-0x34],ecx
10022f44:	mov    DWORD PTR [ebp-0x20],edi
10022f47:	mov    DWORD PTR [ebp-0x2c],edi
10022f4a:	je     0x100230af
10022f50:	mov    esi,DWORD PTR ds:0x1002f1cc
10022f56:	lea    ecx,[ebp-0x18]
10022f59:	push   ecx
10022f5a:	push   eax
10022f5b:	call   esi
10022f5d:	test   eax,eax
10022f5f:	mov    ebx,DWORD PTR ds:0x1002f098
10022f65:	je     0x10022fc5
10022f67:	cmp    DWORD PTR [ebp-0x18],0x1
10022f6b:	jne    0x10022fc5
10022f6d:	lea    eax,[ebp-0x18]
10022f70:	push   eax
10022f71:	push   DWORD PTR [ebp+0xc]
10022f74:	call   esi
10022f76:	test   eax,eax
10022f78:	je     0x10022fc5
10022f7a:	cmp    DWORD PTR [ebp-0x18],0x1
10022f7e:	jne    0x10022fc5
10022f80:	mov    esi,DWORD PTR [ebp-0x24]
10022f83:	cmp    esi,0xffffffff
10022f86:	mov    DWORD PTR [ebp-0x2c],0x1
10022f8d:	jne    0x10022f9b
10022f8f:	push   DWORD PTR [ebp-0x28]
10022f92:	call   0x10019010
10022f97:	mov    esi,eax
10022f99:	pop    ecx
10022f9a:	inc    esi
10022f9b:	cmp    esi,edi
10022f9d:	jle    0x10022ffa
10022f9f:	cmp    esi,0x7ffffff0
10022fa5:	ja     0x10022ffa
10022fa7:	lea    eax,[esi+esi*1+0x8]
10022fab:	cmp    eax,0x400
10022fb0:	ja     0x10022fe1
10022fb2:	call   0x10018790
10022fb7:	mov    eax,esp
10022fb9:	cmp    eax,edi
10022fbb:	je     0x10022ff5
10022fbd:	mov    DWORD PTR [eax],0xcccc
10022fc3:	jmp    0x10022ff2
10022fc5:	push   edi
10022fc6:	push   edi
10022fc7:	push   DWORD PTR [ebp-0x24]
10022fca:	push   DWORD PTR [ebp-0x28]
10022fcd:	push   0x1
10022fcf:	push   DWORD PTR [ebp+0x8]
10022fd2:	call   ebx
10022fd4:	mov    esi,eax
10022fd6:	cmp    esi,edi
10022fd8:	jne    0x10022f9d
10022fda:	xor    eax,eax
10022fdc:	jmp    0x100230b2
10022fe1:	push   eax
10022fe2:	call   0x100198b2
10022fe7:	cmp    eax,edi
10022fe9:	pop    ecx
10022fea:	je     0x10022ff5
10022fec:	mov    DWORD PTR [eax],0xdddd
10022ff2:	add    eax,0x8
10022ff5:	mov    DWORD PTR [ebp-0x1c],eax
10022ff8:	jmp    0x10022ffd
10022ffa:	mov    DWORD PTR [ebp-0x1c],edi
10022ffd:	cmp    DWORD PTR [ebp-0x1c],edi
10023000:	je     0x10022fda
10023002:	lea    eax,[esi+esi*1]
10023005:	push   eax
10023006:	push   edi
10023007:	push   DWORD PTR [ebp-0x1c]
1002300a:	call   0x100191d0
1002300f:	add    esp,0xc
10023012:	push   esi
10023013:	push   DWORD PTR [ebp-0x1c]
10023016:	push   DWORD PTR [ebp-0x24]
10023019:	push   DWORD PTR [ebp-0x28]
1002301c:	push   0x1
1002301e:	push   DWORD PTR [ebp+0x8]
10023021:	call   ebx
10023023:	test   eax,eax
10023025:	je     0x100230a6
10023027:	mov    ebx,DWORD PTR [ebp-0x34]
1002302a:	cmp    ebx,edi
1002302c:	je     0x1002304b
1002302e:	push   edi
1002302f:	push   edi
10023030:	push   DWORD PTR [ebp+0x1c]
10023033:	push   ebx
10023034:	push   esi
10023035:	push   DWORD PTR [ebp-0x1c]
10023038:	push   edi
10023039:	push   DWORD PTR [ebp+0xc]
1002303c:	call   DWORD PTR ds:0x1002f038
10023042:	test   eax,eax
10023044:	je     0x100230a6
10023046:	mov    DWORD PTR [ebp-0x20],ebx
10023049:	jmp    0x100230a6
1002304b:	cmp    DWORD PTR [ebp-0x2c],edi
1002304e:	mov    ebx,DWORD PTR ds:0x1002f038
10023054:	jne    0x1002306a
10023056:	push   edi
10023057:	push   edi
10023058:	push   edi
10023059:	push   edi
1002305a:	push   esi
1002305b:	push   DWORD PTR [ebp-0x1c]
1002305e:	push   edi
1002305f:	push   DWORD PTR [ebp+0xc]
10023062:	call   ebx
10023064:	mov    esi,eax
10023066:	cmp    esi,edi
10023068:	je     0x100230a6
1002306a:	push   esi
1002306b:	push   0x1
1002306d:	call   0x1001afef
10023072:	cmp    eax,edi
10023074:	pop    ecx
10023075:	pop    ecx
10023076:	mov    DWORD PTR [ebp-0x20],eax
10023079:	je     0x100230a6
1002307b:	push   edi
1002307c:	push   edi
1002307d:	push   esi
1002307e:	push   eax
1002307f:	push   esi
10023080:	push   DWORD PTR [ebp-0x1c]
10023083:	push   edi
10023084:	push   DWORD PTR [ebp+0xc]
10023087:	call   ebx
10023089:	cmp    eax,edi
1002308b:	jne    0x1002309b
1002308d:	push   DWORD PTR [ebp-0x20]
10023090:	call   0x100197d5
10023095:	pop    ecx
10023096:	mov    DWORD PTR [ebp-0x20],edi
10023099:	jmp    0x100230a6
1002309b:	cmp    DWORD PTR [ebp-0x24],0xffffffff
1002309f:	je     0x100230a6
100230a1:	mov    ecx,DWORD PTR [ebp-0x30]
100230a4:	mov    DWORD PTR [ecx],eax
100230a6:	push   DWORD PTR [ebp-0x1c]
100230a9:	call   0x1001a732
100230ae:	pop    ecx
100230af:	mov    eax,DWORD PTR [ebp-0x20]
100230b2:	lea    esp,[ebp-0x40]
100230b5:	pop    edi
100230b6:	pop    esi
100230b7:	pop    ebx
100230b8:	mov    ecx,DWORD PTR [ebp-0x4]
100230bb:	xor    ecx,ebp
100230bd:	call   0x10018773
100230c2:	leave  
100230c3:	ret    
100230c4:	push   ebp
100230c5:	mov    ebp,esp
100230c7:	push   ecx
100230c8:	push   ecx
100230c9:	mov    eax,ds:0x100c7654
100230ce:	xor    eax,ebp
100230d0:	mov    DWORD PTR [ebp-0x4],eax
100230d3:	mov    eax,ds:0x100c9bd0
100230d8:	push   ebx
100230d9:	push   esi
100230da:	xor    ebx,ebx
100230dc:	cmp    eax,ebx
100230de:	push   edi
100230df:	mov    edi,ecx
100230e1:	jne    0x1002311d
100230e3:	lea    eax,[ebp-0x8]
100230e6:	push   eax
100230e7:	xor    esi,esi
100230e9:	inc    esi
100230ea:	push   esi
100230eb:	push   0x100b9dec
100230f0:	push   esi
100230f1:	call   DWORD PTR ds:0x1002f020
100230f7:	test   eax,eax
100230f9:	je     0x10023103
100230fb:	mov    DWORD PTR ds:0x100c9bd0,esi
10023101:	jmp    0x10023137
10023103:	call   DWORD PTR ds:0x1002f094
10023109:	cmp    eax,0x78
1002310c:	jne    0x10023118
1002310e:	push   0x2
10023110:	pop    eax
10023111:	mov    ds:0x100c9bd0,eax
10023116:	jmp    0x1002311d
10023118:	mov    eax,ds:0x100c9bd0
1002311d:	cmp    eax,0x2
10023120:	je     0x100231f5
10023126:	cmp    eax,ebx
10023128:	je     0x100231f5
1002312e:	cmp    eax,0x1
10023131:	jne    0x1002321f
10023137:	cmp    DWORD PTR [ebp+0x18],ebx
1002313a:	mov    DWORD PTR [ebp-0x8],ebx
1002313d:	jne    0x10023147
1002313f:	mov    eax,DWORD PTR [edi]
10023141:	mov    eax,DWORD PTR [eax+0x4]
10023144:	mov    DWORD PTR [ebp+0x18],eax
10023147:	mov    esi,DWORD PTR ds:0x1002f098
1002314d:	xor    eax,eax
1002314f:	cmp    DWORD PTR [ebp+0x20],ebx
10023152:	push   ebx
10023153:	push   ebx
10023154:	push   DWORD PTR [ebp+0x10]
10023157:	setne  al
1002315a:	push   DWORD PTR [ebp+0xc]
1002315d:	lea    eax,[eax*8+0x1]
10023164:	push   eax
10023165:	push   DWORD PTR [ebp+0x18]
10023168:	call   esi
1002316a:	mov    edi,eax
1002316c:	cmp    edi,ebx
1002316e:	je     0x1002321f
10023174:	jle    0x100231b2
10023176:	cmp    edi,0x7ffffff0
1002317c:	ja     0x100231b2
1002317e:	lea    eax,[edi+edi*1+0x8]
10023182:	cmp    eax,0x400
10023187:	ja     0x1002319c
10023189:	call   0x10018790
1002318e:	mov    eax,esp
10023190:	cmp    eax,ebx
10023192:	je     0x100231b0
10023194:	mov    DWORD PTR [eax],0xcccc
1002319a:	jmp    0x100231ad
1002319c:	push   eax
1002319d:	call   0x100198b2
100231a2:	cmp    eax,ebx
100231a4:	pop    ecx
100231a5:	je     0x100231b0
100231a7:	mov    DWORD PTR [eax],0xdddd
100231ad:	add    eax,0x8
100231b0:	mov    ebx,eax
100231b2:	test   ebx,ebx
100231b4:	je     0x1002321f
100231b6:	lea    eax,[edi+edi*1]
100231b9:	push   eax
100231ba:	push   0x0
100231bc:	push   ebx
100231bd:	call   0x100191d0
100231c2:	add    esp,0xc
100231c5:	push   edi
100231c6:	push   ebx
100231c7:	push   DWORD PTR [ebp+0x10]
100231ca:	push   DWORD PTR [ebp+0xc]
100231cd:	push   0x1
100231cf:	push   DWORD PTR [ebp+0x18]
100231d2:	call   esi
100231d4:	test   eax,eax
100231d6:	je     0x100231e9
100231d8:	push   DWORD PTR [ebp+0x14]
100231db:	push   eax
100231dc:	push   ebx
100231dd:	push   DWORD PTR [ebp+0x8]
100231e0:	call   DWORD PTR ds:0x1002f020
100231e6:	mov    DWORD PTR [ebp-0x8],eax
100231e9:	push   ebx
100231ea:	call   0x1001a732
100231ef:	mov    eax,DWORD PTR [ebp-0x8]
100231f2:	pop    ecx
100231f3:	jmp    0x1002326a
100231f5:	xor    esi,esi
100231f7:	cmp    DWORD PTR [ebp+0x1c],ebx
100231fa:	jne    0x10023204
100231fc:	mov    eax,DWORD PTR [edi]
100231fe:	mov    eax,DWORD PTR [eax+0x14]
10023201:	mov    DWORD PTR [ebp+0x1c],eax
10023204:	cmp    DWORD PTR [ebp+0x18],ebx
10023207:	jne    0x10023211
10023209:	mov    eax,DWORD PTR [edi]
1002320b:	mov    eax,DWORD PTR [eax+0x4]
1002320e:	mov    DWORD PTR [ebp+0x18],eax
10023211:	push   DWORD PTR [ebp+0x1c]
10023214:	call   0x10022ecb
10023219:	cmp    eax,0xffffffff
1002321c:	pop    ecx
1002321d:	jne    0x10023223
1002321f:	xor    eax,eax
10023221:	jmp    0x1002326a
10023223:	cmp    eax,DWORD PTR [ebp+0x18]
10023226:	je     0x10023246
10023228:	push   ebx
10023229:	push   ebx
1002322a:	lea    ecx,[ebp+0x10]
1002322d:	push   ecx
1002322e:	push   DWORD PTR [ebp+0xc]
10023231:	push   eax
10023232:	push   DWORD PTR [ebp+0x18]
10023235:	call   0x10022f12
1002323a:	mov    esi,eax
1002323c:	add    esp,0x18
1002323f:	cmp    esi,ebx
10023241:	je     0x1002321f
10023243:	mov    DWORD PTR [ebp+0xc],esi
10023246:	push   DWORD PTR [ebp+0x14]
10023249:	push   DWORD PTR [ebp+0x10]
1002324c:	push   DWORD PTR [ebp+0xc]
1002324f:	push   DWORD PTR [ebp+0x8]
10023252:	push   DWORD PTR [ebp+0x1c]
10023255:	call   DWORD PTR ds:0x1002f024
1002325b:	cmp    esi,ebx
1002325d:	mov    edi,eax
1002325f:	je     0x10023268
10023261:	push   esi
10023262:	call   0x100197d5
10023267:	pop    ecx
10023268:	mov    eax,edi
1002326a:	lea    esp,[ebp-0x14]
1002326d:	pop    edi
1002326e:	pop    esi
1002326f:	pop    ebx
10023270:	mov    ecx,DWORD PTR [ebp-0x4]
10023273:	xor    ecx,ebp
10023275:	call   0x10018773
1002327a:	leave  
1002327b:	ret    
1002327c:	push   ebp
1002327d:	mov    ebp,esp
1002327f:	sub    esp,0x10
10023282:	push   DWORD PTR [ebp+0x8]
10023285:	lea    ecx,[ebp-0x10]
10023288:	call   0x1001924a
1002328d:	push   DWORD PTR [ebp+0x24]
10023290:	lea    ecx,[ebp-0x10]
10023293:	push   DWORD PTR [ebp+0x20]
10023296:	push   DWORD PTR [ebp+0x1c]
10023299:	push   DWORD PTR [ebp+0x18]
1002329c:	push   DWORD PTR [ebp+0x14]
1002329f:	push   DWORD PTR [ebp+0x10]
100232a2:	push   DWORD PTR [ebp+0xc]
100232a5:	call   0x100230c4
100232aa:	add    esp,0x1c
100232ad:	cmp    BYTE PTR [ebp-0x4],0x0
100232b1:	je     0x100232ba
100232b3:	mov    ecx,DWORD PTR [ebp-0x8]
100232b6:	and    DWORD PTR [ecx+0x70],0xfffffffd
100232ba:	leave  
100232bb:	ret    
100232bc:	push   0xc
100232be:	push   0x100bb7f8
100232c3:	call   0x1001a750
100232c8:	mov    ecx,DWORD PTR [ebp+0x8]
100232cb:	xor    edi,edi
100232cd:	cmp    ecx,edi
100232cf:	jbe    0x100232ff
100232d1:	push   0xffffffe0
100232d3:	pop    eax
100232d4:	xor    edx,edx
100232d6:	div    ecx
100232d8:	cmp    eax,DWORD PTR [ebp+0xc]
100232db:	sbb    eax,eax
100232dd:	inc    eax
100232de:	jne    0x100232ff
100232e0:	call   0x1001cd0e
100232e5:	mov    DWORD PTR [eax],0xc
100232eb:	push   edi
100232ec:	push   edi
100232ed:	push   edi
100232ee:	push   edi
100232ef:	push   edi
100232f0:	call   0x10018dbf
100232f5:	add    esp,0x14
100232f8:	xor    eax,eax
100232fa:	jmp    0x100233d4
100232ff:	imul   ecx,DWORD PTR [ebp+0xc]
10023303:	mov    esi,ecx
10023305:	mov    DWORD PTR [ebp+0x8],esi
10023308:	cmp    esi,edi
1002330a:	jne    0x1002330f
1002330c:	xor    esi,esi
1002330e:	inc    esi
1002330f:	xor    ebx,ebx
10023311:	mov    DWORD PTR [ebp-0x1c],ebx
10023314:	cmp    esi,0xffffffe0
10023317:	ja     0x10023382
10023319:	cmp    DWORD PTR ds:0x100cb198,0x3
10023320:	jne    0x1002336d
10023322:	add    esi,0xf
10023325:	and    esi,0xfffffff0
10023328:	mov    DWORD PTR [ebp+0xc],esi
1002332b:	mov    eax,DWORD PTR [ebp+0x8]
1002332e:	cmp    eax,DWORD PTR ds:0x100cb188
10023334:	ja     0x1002336d
10023336:	push   0x4
10023338:	call   0x1001e3bb
1002333d:	pop    ecx
1002333e:	mov    DWORD PTR [ebp-0x4],edi
10023341:	push   DWORD PTR [ebp+0x8]
10023344:	call   0x1001ec08
10023349:	pop    ecx
1002334a:	mov    DWORD PTR [ebp-0x1c],eax
1002334d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10023354:	call   0x100233b8
10023359:	mov    ebx,DWORD PTR [ebp-0x1c]
1002335c:	cmp    ebx,edi
1002335e:	je     0x10023371
10023360:	push   DWORD PTR [ebp+0x8]
10023363:	push   edi
10023364:	push   ebx
10023365:	call   0x100191d0
1002336a:	add    esp,0xc
1002336d:	cmp    ebx,edi
1002336f:	jne    0x100233d2
10023371:	push   esi
10023372:	push   0x8
10023374:	push   DWORD PTR ds:0x100c9630
1002337a:	call   DWORD PTR ds:0x1002f180
10023380:	mov    ebx,eax
10023382:	cmp    ebx,edi
10023384:	jne    0x100233d2
10023386:	cmp    DWORD PTR ds:0x100c9aa4,edi
1002338c:	je     0x100233c1
1002338e:	push   esi
1002338f:	call   0x1001cec7
10023394:	pop    ecx
10023395:	test   eax,eax
10023397:	jne    0x1002330f
1002339d:	mov    eax,DWORD PTR [ebp+0x10]
100233a0:	cmp    eax,edi
100233a2:	je     0x100232f8
100233a8:	mov    DWORD PTR [eax],0xc
100233ae:	jmp    0x100232f8
100233b3:	xor    edi,edi
100233b5:	mov    esi,DWORD PTR [ebp+0xc]
100233b8:	push   0x4
100233ba:	call   0x1001e2e3
100233bf:	pop    ecx
100233c0:	ret    
100233c1:	cmp    ebx,edi
100233c3:	jne    0x100233d2
100233c5:	mov    eax,DWORD PTR [ebp+0x10]
100233c8:	cmp    eax,edi
100233ca:	je     0x100233d2
100233cc:	mov    DWORD PTR [eax],0xc
100233d2:	mov    eax,ebx
100233d4:	call   0x1001a795
100233d9:	ret    
100233da:	push   esi
100233db:	mov    esi,DWORD PTR [esp+0x8]
100233df:	test   esi,esi
100233e1:	je     0x10023568
100233e7:	push   DWORD PTR [esi+0x4]
100233ea:	call   0x100197d5
100233ef:	push   DWORD PTR [esi+0x8]
100233f2:	call   0x100197d5
100233f7:	push   DWORD PTR [esi+0xc]
100233fa:	call   0x100197d5
100233ff:	push   DWORD PTR [esi+0x10]
10023402:	call   0x100197d5
10023407:	push   DWORD PTR [esi+0x14]
1002340a:	call   0x100197d5
1002340f:	push   DWORD PTR [esi+0x18]
10023412:	call   0x100197d5
10023417:	push   DWORD PTR [esi]
10023419:	call   0x100197d5
1002341e:	push   DWORD PTR [esi+0x20]
10023421:	call   0x100197d5
10023426:	push   DWORD PTR [esi+0x24]
10023429:	call   0x100197d5
1002342e:	push   DWORD PTR [esi+0x28]
10023431:	call   0x100197d5
10023436:	push   DWORD PTR [esi+0x2c]
10023439:	call   0x100197d5
1002343e:	push   DWORD PTR [esi+0x30]
10023441:	call   0x100197d5
10023446:	push   DWORD PTR [esi+0x34]
10023449:	call   0x100197d5
1002344e:	push   DWORD PTR [esi+0x1c]
10023451:	call   0x100197d5
10023456:	push   DWORD PTR [esi+0x38]
10023459:	call   0x100197d5
1002345e:	push   DWORD PTR [esi+0x3c]
10023461:	call   0x100197d5
10023466:	add    esp,0x40
10023469:	push   DWORD PTR [esi+0x40]
1002346c:	call   0x100197d5
10023471:	push   DWORD PTR [esi+0x44]
10023474:	call   0x100197d5
10023479:	push   DWORD PTR [esi+0x48]
1002347c:	call   0x100197d5
10023481:	push   DWORD PTR [esi+0x4c]
10023484:	call   0x100197d5
10023489:	push   DWORD PTR [esi+0x50]
1002348c:	call   0x100197d5
10023491:	push   DWORD PTR [esi+0x54]
10023494:	call   0x100197d5
10023499:	push   DWORD PTR [esi+0x58]
1002349c:	call   0x100197d5
100234a1:	push   DWORD PTR [esi+0x5c]
100234a4:	call   0x100197d5
100234a9:	push   DWORD PTR [esi+0x60]
100234ac:	call   0x100197d5
100234b1:	push   DWORD PTR [esi+0x64]
100234b4:	call   0x100197d5
100234b9:	push   DWORD PTR [esi+0x68]
100234bc:	call   0x100197d5
100234c1:	push   DWORD PTR [esi+0x6c]
100234c4:	call   0x100197d5
100234c9:	push   DWORD PTR [esi+0x70]
100234cc:	call   0x100197d5
100234d1:	push   DWORD PTR [esi+0x74]
100234d4:	call   0x100197d5
100234d9:	push   DWORD PTR [esi+0x78]
100234dc:	call   0x100197d5
100234e1:	push   DWORD PTR [esi+0x7c]
100234e4:	call   0x100197d5
100234e9:	add    esp,0x40
100234ec:	push   DWORD PTR [esi+0x80]
100234f2:	call   0x100197d5
100234f7:	push   DWORD PTR [esi+0x84]
100234fd:	call   0x100197d5
10023502:	push   DWORD PTR [esi+0x88]
10023508:	call   0x100197d5
1002350d:	push   DWORD PTR [esi+0x8c]
10023513:	call   0x100197d5
10023518:	push   DWORD PTR [esi+0x90]
1002351e:	call   0x100197d5
10023523:	push   DWORD PTR [esi+0x94]
10023529:	call   0x100197d5
1002352e:	push   DWORD PTR [esi+0x98]
10023534:	call   0x100197d5
10023539:	push   DWORD PTR [esi+0x9c]
1002353f:	call   0x100197d5
10023544:	push   DWORD PTR [esi+0xa0]
1002354a:	call   0x100197d5
1002354f:	push   DWORD PTR [esi+0xa4]
10023555:	call   0x100197d5
1002355a:	push   DWORD PTR [esi+0xa8]
10023560:	call   0x100197d5
10023565:	add    esp,0x2c
10023568:	pop    esi
10023569:	ret    
1002356a:	push   esi
1002356b:	mov    esi,DWORD PTR [esp+0x8]
1002356f:	test   esi,esi
10023571:	je     0x100235a8
10023573:	mov    eax,DWORD PTR [esi]
10023575:	cmp    eax,DWORD PTR ds:0x100c8568
1002357b:	je     0x10023584
1002357d:	push   eax
1002357e:	call   0x100197d5
10023583:	pop    ecx
10023584:	mov    eax,DWORD PTR [esi+0x4]
10023587:	cmp    eax,DWORD PTR ds:0x100c856c
1002358d:	je     0x10023596
1002358f:	push   eax
10023590:	call   0x100197d5
10023595:	pop    ecx
10023596:	mov    esi,DWORD PTR [esi+0x8]
10023599:	cmp    esi,DWORD PTR ds:0x100c8570
1002359f:	je     0x100235a8
100235a1:	push   esi
100235a2:	call   0x100197d5
100235a7:	pop    ecx
100235a8:	pop    esi
100235a9:	ret    
100235aa:	push   esi
100235ab:	mov    esi,DWORD PTR [esp+0x8]
100235af:	test   esi,esi
100235b1:	je     0x10023631
100235b3:	mov    eax,DWORD PTR [esi+0xc]
100235b6:	cmp    eax,DWORD PTR ds:0x100c8574
100235bc:	je     0x100235c5
100235be:	push   eax
100235bf:	call   0x100197d5
100235c4:	pop    ecx
100235c5:	mov    eax,DWORD PTR [esi+0x10]
100235c8:	cmp    eax,DWORD PTR ds:0x100c8578
100235ce:	je     0x100235d7
100235d0:	push   eax
100235d1:	call   0x100197d5
100235d6:	pop    ecx
100235d7:	mov    eax,DWORD PTR [esi+0x14]
100235da:	cmp    eax,DWORD PTR ds:0x100c857c
100235e0:	je     0x100235e9
100235e2:	push   eax
100235e3:	call   0x100197d5
100235e8:	pop    ecx
100235e9:	mov    eax,DWORD PTR [esi+0x18]
100235ec:	cmp    eax,DWORD PTR ds:0x100c8580
100235f2:	je     0x100235fb
100235f4:	push   eax
100235f5:	call   0x100197d5
100235fa:	pop    ecx
100235fb:	mov    eax,DWORD PTR [esi+0x1c]
100235fe:	cmp    eax,DWORD PTR ds:0x100c8584
10023604:	je     0x1002360d
10023606:	push   eax
10023607:	call   0x100197d5
1002360c:	pop    ecx
1002360d:	mov    eax,DWORD PTR [esi+0x20]
10023610:	cmp    eax,DWORD PTR ds:0x100c8588
10023616:	je     0x1002361f
10023618:	push   eax
10023619:	call   0x100197d5
1002361e:	pop    ecx
1002361f:	mov    esi,DWORD PTR [esi+0x24]
10023622:	cmp    esi,DWORD PTR ds:0x100c858c
10023628:	je     0x10023631
1002362a:	push   esi
1002362b:	call   0x100197d5
10023630:	pop    ecx
10023631:	pop    esi
10023632:	ret    
10023633:	mov    eax,DWORD PTR [esp+0x4]
10023637:	push   ebx
10023638:	xor    ebx,ebx
1002363a:	cmp    eax,ebx
1002363c:	push   esi
1002363d:	push   edi
1002363e:	je     0x10023648
10023640:	mov    edi,DWORD PTR [esp+0x14]
10023644:	cmp    edi,ebx
10023646:	ja     0x10023663
10023648:	call   0x1001cd0e
1002364d:	push   0x16
1002364f:	pop    esi
10023650:	mov    DWORD PTR [eax],esi
10023652:	push   ebx
10023653:	push   ebx
10023654:	push   ebx
10023655:	push   ebx
10023656:	push   ebx
10023657:	call   0x10018dbf
1002365c:	add    esp,0x14
1002365f:	mov    eax,esi
10023661:	jmp    0x100236a0
10023663:	mov    esi,DWORD PTR [esp+0x18]
10023667:	cmp    esi,ebx
10023669:	jne    0x1002366f
1002366b:	mov    BYTE PTR [eax],bl
1002366d:	jmp    0x10023648
1002366f:	mov    edx,eax
10023671:	cmp    BYTE PTR [edx],bl
10023673:	je     0x10023679
10023675:	inc    edx
10023676:	dec    edi
10023677:	jne    0x10023671
10023679:	cmp    edi,ebx
1002367b:	je     0x1002366b
1002367d:	mov    cl,BYTE PTR [esi]
1002367f:	mov    BYTE PTR [edx],cl
10023681:	inc    edx
10023682:	inc    esi
10023683:	cmp    cl,bl
10023685:	je     0x1002368a
10023687:	dec    edi
10023688:	jne    0x1002367d
1002368a:	cmp    edi,ebx
1002368c:	jne    0x1002369e
1002368e:	mov    BYTE PTR [eax],bl
10023690:	call   0x1001cd0e
10023695:	push   0x22
10023697:	pop    ecx
10023698:	mov    DWORD PTR [eax],ecx
1002369a:	mov    esi,ecx
1002369c:	jmp    0x10023652
1002369e:	xor    eax,eax
100236a0:	pop    edi
100236a1:	pop    esi
100236a2:	pop    ebx
100236a3:	ret    
100236a4:	int3   
100236a5:	int3   
100236a6:	int3   
100236a7:	int3   
100236a8:	int3   
100236a9:	int3   
100236aa:	int3   
100236ab:	int3   
100236ac:	int3   
100236ad:	int3   
100236ae:	int3   
100236af:	int3   
100236b0:	push   ebp
100236b1:	mov    ebp,esp
100236b3:	push   esi
100236b4:	xor    eax,eax
100236b6:	push   eax
100236b7:	push   eax
100236b8:	push   eax
100236b9:	push   eax
100236ba:	push   eax
100236bb:	push   eax
100236bc:	push   eax
100236bd:	push   eax
100236be:	mov    edx,DWORD PTR [ebp+0xc]
100236c1:	lea    ecx,[ecx+0x0]
100236c4:	mov    al,BYTE PTR [edx]
100236c6:	or     al,al
100236c8:	je     0x100236d3
100236ca:	add    edx,0x1
100236cd:	bts    DWORD PTR [esp],eax
100236d1:	jmp    0x100236c4
100236d3:	mov    esi,DWORD PTR [ebp+0x8]
100236d6:	or     ecx,0xffffffff
100236d9:	lea    ecx,[ecx+0x0]
100236dc:	add    ecx,0x1
100236df:	mov    al,BYTE PTR [esi]
100236e1:	or     al,al
100236e3:	je     0x100236ee
100236e5:	add    esi,0x1
100236e8:	bt     DWORD PTR [esp],eax
100236ec:	jae    0x100236dc
100236ee:	mov    eax,ecx
100236f0:	add    esp,0x20
100236f3:	pop    esi
100236f4:	leave  
100236f5:	ret    
100236f6:	push   ebp
100236f7:	mov    ebp,esp
100236f9:	push   ebx
100236fa:	push   esi
100236fb:	mov    esi,DWORD PTR [ebp+0x8]
100236fe:	xor    ebx,ebx
10023700:	cmp    DWORD PTR [ebp+0x14],ebx
10023703:	push   edi
10023704:	jne    0x10023716
10023706:	cmp    esi,ebx
10023708:	jne    0x1002371a
1002370a:	cmp    DWORD PTR [ebp+0xc],ebx
1002370d:	jne    0x10023721
1002370f:	xor    eax,eax
10023711:	pop    edi
10023712:	pop    esi
10023713:	pop    ebx
10023714:	pop    ebp
10023715:	ret    
10023716:	cmp    esi,ebx
10023718:	je     0x10023721
1002371a:	mov    edi,DWORD PTR [ebp+0xc]
1002371d:	cmp    edi,ebx
1002371f:	ja     0x1002373c
10023721:	call   0x1001cd0e
10023726:	push   0x16
10023728:	pop    esi
10023729:	mov    DWORD PTR [eax],esi
1002372b:	push   ebx
1002372c:	push   ebx
1002372d:	push   ebx
1002372e:	push   ebx
1002372f:	push   ebx
10023730:	call   0x10018dbf
10023735:	add    esp,0x14
10023738:	mov    eax,esi
1002373a:	jmp    0x10023711
1002373c:	cmp    DWORD PTR [ebp+0x14],ebx
1002373f:	jne    0x10023745
10023741:	mov    BYTE PTR [esi],bl
10023743:	jmp    0x1002370f
10023745:	mov    edx,DWORD PTR [ebp+0x10]
10023748:	cmp    edx,ebx
1002374a:	jne    0x10023750
1002374c:	mov    BYTE PTR [esi],bl
1002374e:	jmp    0x10023721
10023750:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10023754:	mov    eax,esi
10023756:	jne    0x10023767
10023758:	mov    cl,BYTE PTR [edx]
1002375a:	mov    BYTE PTR [eax],cl
1002375c:	inc    eax
1002375d:	inc    edx
1002375e:	cmp    cl,bl
10023760:	je     0x10023780
10023762:	dec    edi
10023763:	jne    0x10023758
10023765:	jmp    0x10023780
10023767:	mov    cl,BYTE PTR [edx]
10023769:	mov    BYTE PTR [eax],cl
1002376b:	inc    eax
1002376c:	inc    edx
1002376d:	cmp    cl,bl
1002376f:	je     0x10023779
10023771:	dec    edi
10023772:	je     0x10023779
10023774:	dec    DWORD PTR [ebp+0x14]
10023777:	jne    0x10023767
10023779:	cmp    DWORD PTR [ebp+0x14],ebx
1002377c:	jne    0x10023780
1002377e:	mov    BYTE PTR [eax],bl
10023780:	cmp    edi,ebx
10023782:	jne    0x1002370f
10023784:	cmp    DWORD PTR [ebp+0x14],0xffffffff
10023788:	jne    0x10023799
1002378a:	mov    eax,DWORD PTR [ebp+0xc]
1002378d:	push   0x50
1002378f:	mov    BYTE PTR [esi+eax*1-0x1],bl
10023793:	pop    eax
10023794:	jmp    0x10023711
10023799:	mov    BYTE PTR [esi],bl
1002379b:	call   0x1001cd0e
100237a0:	push   0x22
100237a2:	pop    ecx
100237a3:	mov    DWORD PTR [eax],ecx
100237a5:	mov    esi,ecx
100237a7:	jmp    0x1002372b
100237a9:	int3   
100237aa:	int3   
100237ab:	int3   
100237ac:	int3   
100237ad:	int3   
100237ae:	int3   
100237af:	int3   
100237b0:	push   ebp
100237b1:	mov    ebp,esp
100237b3:	push   esi
100237b4:	xor    eax,eax
100237b6:	push   eax
100237b7:	push   eax
100237b8:	push   eax
100237b9:	push   eax
100237ba:	push   eax
100237bb:	push   eax
100237bc:	push   eax
100237bd:	push   eax
100237be:	mov    edx,DWORD PTR [ebp+0xc]
100237c1:	lea    ecx,[ecx+0x0]
100237c4:	mov    al,BYTE PTR [edx]
100237c6:	or     al,al
100237c8:	je     0x100237d3
100237ca:	add    edx,0x1
100237cd:	bts    DWORD PTR [esp],eax
100237d1:	jmp    0x100237c4
100237d3:	mov    esi,DWORD PTR [ebp+0x8]
100237d6:	mov    edi,edi
100237d8:	mov    al,BYTE PTR [esi]
100237da:	or     al,al
100237dc:	je     0x100237ea
100237de:	add    esi,0x1
100237e1:	bt     DWORD PTR [esp],eax
100237e5:	jae    0x100237d8
100237e7:	lea    eax,[esi-0x1]
100237ea:	add    esp,0x20
100237ed:	pop    esi
100237ee:	leave  
100237ef:	ret    
100237f0:	mov    eax,DWORD PTR [esp+0x4]
100237f4:	mov    ds:0x100c9bd8,eax
100237f9:	mov    ds:0x100c9bdc,eax
100237fe:	mov    ds:0x100c9be0,eax
10023803:	mov    ds:0x100c9be4,eax
10023808:	ret    
10023809:	mov    eax,DWORD PTR [esp+0x4]
1002380d:	mov    ecx,DWORD PTR ds:0x100c820c
10023813:	push   esi
10023814:	cmp    DWORD PTR [eax+0x4],edx
10023817:	je     0x10023829
10023819:	mov    esi,ecx
1002381b:	imul   esi,esi,0xc
1002381e:	add    esi,DWORD PTR [esp+0x8]
10023822:	add    eax,0xc
10023825:	cmp    eax,esi
10023827:	jb     0x10023814
10023829:	imul   ecx,ecx,0xc
1002382c:	add    ecx,DWORD PTR [esp+0x8]
10023830:	pop    esi
10023831:	cmp    eax,ecx
10023833:	jae    0x1002383a
10023835:	cmp    DWORD PTR [eax+0x4],edx
10023838:	je     0x1002383c
1002383a:	xor    eax,eax
1002383c:	ret    
1002383d:	push   DWORD PTR ds:0x100c9be0
10023843:	call   0x1001c30a
10023848:	pop    ecx
10023849:	ret    
1002384a:	push   0x20
1002384c:	push   0x100bb818
10023851:	call   0x1001a750
10023856:	xor    edi,edi
10023858:	mov    DWORD PTR [ebp-0x1c],edi
1002385b:	mov    DWORD PTR [ebp-0x28],edi
1002385e:	mov    ebx,DWORD PTR [ebp+0x8]
10023861:	cmp    ebx,0xb
10023864:	jg     0x100238b2
10023866:	je     0x1002387d
10023868:	mov    eax,ebx
1002386a:	push   0x2
1002386c:	pop    ecx
1002386d:	sub    eax,ecx
1002386f:	je     0x10023893
10023871:	sub    eax,ecx
10023873:	je     0x1002387d
10023875:	sub    eax,ecx
10023877:	je     0x100238dd
10023879:	sub    eax,ecx
1002387b:	jne    0x100238c1
1002387d:	call   0x1001c4af
10023882:	mov    edi,eax
10023884:	mov    DWORD PTR [ebp-0x28],edi
10023887:	test   edi,edi
10023889:	jne    0x1002389f
1002388b:	or     eax,0xffffffff
1002388e:	jmp    0x100239f4
10023893:	mov    esi,0x100c9bd8
10023898:	mov    eax,ds:0x100c9bd8
1002389d:	jmp    0x100238ff
1002389f:	push   DWORD PTR [edi+0x5c]
100238a2:	mov    edx,ebx
100238a4:	call   0x10023809
100238a9:	mov    esi,eax
100238ab:	add    esi,0x8
100238ae:	mov    eax,DWORD PTR [esi]
100238b0:	jmp    0x1002390c
100238b2:	mov    eax,ebx
100238b4:	sub    eax,0xf
100238b7:	je     0x100238f5
100238b9:	sub    eax,0x6
100238bc:	je     0x100238e9
100238be:	dec    eax
100238bf:	je     0x100238dd
100238c1:	call   0x1001cd0e
100238c6:	mov    DWORD PTR [eax],0x16
100238cc:	xor    eax,eax
100238ce:	push   eax
100238cf:	push   eax
100238d0:	push   eax
100238d1:	push   eax
100238d2:	push   eax
100238d3:	call   0x10018dbf
100238d8:	add    esp,0x14
100238db:	jmp    0x1002388b
100238dd:	mov    esi,0x100c9be0
100238e2:	mov    eax,ds:0x100c9be0
100238e7:	jmp    0x100238ff
100238e9:	mov    esi,0x100c9bdc
100238ee:	mov    eax,ds:0x100c9bdc
100238f3:	jmp    0x100238ff
100238f5:	mov    esi,0x100c9be4
100238fa:	mov    eax,ds:0x100c9be4
100238ff:	mov    DWORD PTR [ebp-0x1c],0x1
10023906:	push   eax
10023907:	call   0x1001c30a
1002390c:	mov    DWORD PTR [ebp-0x20],eax
1002390f:	pop    ecx
10023910:	xor    eax,eax
10023912:	cmp    DWORD PTR [ebp-0x20],0x1
10023916:	je     0x100239f4
1002391c:	cmp    DWORD PTR [ebp-0x20],eax
1002391f:	jne    0x10023928
10023921:	push   0x3
10023923:	call   0x1001cc5f
10023928:	cmp    DWORD PTR [ebp-0x1c],eax
1002392b:	je     0x10023934
1002392d:	push   eax
1002392e:	call   0x1001e3bb
10023933:	pop    ecx
10023934:	xor    eax,eax
10023936:	mov    DWORD PTR [ebp-0x4],eax
10023939:	cmp    ebx,0x8
1002393c:	je     0x10023948
1002393e:	cmp    ebx,0xb
10023941:	je     0x10023948
10023943:	cmp    ebx,0x4
10023946:	jne    0x10023963
10023948:	mov    ecx,DWORD PTR [edi+0x60]
1002394b:	mov    DWORD PTR [ebp-0x2c],ecx
1002394e:	mov    DWORD PTR [edi+0x60],eax
10023951:	cmp    ebx,0x8
10023954:	jne    0x10023996
10023956:	mov    ecx,DWORD PTR [edi+0x64]
10023959:	mov    DWORD PTR [ebp-0x30],ecx
1002395c:	mov    DWORD PTR [edi+0x64],0x8c
10023963:	cmp    ebx,0x8
10023966:	jne    0x10023996
10023968:	mov    ecx,DWORD PTR ds:0x100c8200
1002396e:	mov    DWORD PTR [ebp-0x24],ecx
10023971:	mov    ecx,DWORD PTR ds:0x100c8204
10023977:	mov    edx,DWORD PTR ds:0x100c8200
1002397d:	add    ecx,edx
1002397f:	cmp    DWORD PTR [ebp-0x24],ecx
10023982:	jge    0x1002399d
10023984:	mov    ecx,DWORD PTR [ebp-0x24]
10023987:	imul   ecx,ecx,0xc
1002398a:	mov    edx,DWORD PTR [edi+0x5c]
1002398d:	mov    DWORD PTR [ecx+edx*1+0x8],eax
10023991:	inc    DWORD PTR [ebp-0x24]
10023994:	jmp    0x10023971
10023996:	call   0x1001c301
1002399b:	mov    DWORD PTR [esi],eax
1002399d:	mov    DWORD PTR [ebp-0x4],0xfffffffe
100239a4:	call   0x100239be
100239a9:	cmp    ebx,0x8
100239ac:	jne    0x100239cd
100239ae:	push   DWORD PTR [edi+0x64]
100239b1:	push   ebx
100239b2:	call   DWORD PTR [ebp-0x20]
100239b5:	pop    ecx
100239b6:	jmp    0x100239d1
100239b8:	mov    ebx,DWORD PTR [ebp+0x8]
100239bb:	mov    edi,DWORD PTR [ebp-0x28]
100239be:	cmp    DWORD PTR [ebp-0x1c],0x0
100239c2:	je     0x100239cc
100239c4:	push   0x0
100239c6:	call   0x1001e2e3
100239cb:	pop    ecx
100239cc:	ret    
100239cd:	push   ebx
100239ce:	call   DWORD PTR [ebp-0x20]
100239d1:	pop    ecx
100239d2:	cmp    ebx,0x8
100239d5:	je     0x100239e1
100239d7:	cmp    ebx,0xb
100239da:	je     0x100239e1
100239dc:	cmp    ebx,0x4
100239df:	jne    0x100239f2
100239e1:	mov    eax,DWORD PTR [ebp-0x2c]
100239e4:	mov    DWORD PTR [edi+0x60],eax
100239e7:	cmp    ebx,0x8
100239ea:	jne    0x100239f2
100239ec:	mov    eax,DWORD PTR [ebp-0x30]
100239ef:	mov    DWORD PTR [edi+0x64],eax
100239f2:	xor    eax,eax
100239f4:	call   0x1001a795
100239f9:	ret    
100239fa:	xor    eax,eax
100239fc:	inc    eax
100239fd:	cmp    DWORD PTR [esp+0x4],0x0
10023a02:	jne    0x10023a06
10023a04:	xor    eax,eax
10023a06:	ret    
10023a07:	int3   
10023a08:	push   ebp
10023a09:	mov    ebp,esp
10023a0b:	push   ebx
10023a0c:	push   esi
10023a0d:	push   edi
10023a0e:	push   ebp
10023a0f:	push   0x0
10023a11:	push   0x0
10023a13:	push   0x10023a20
10023a18:	push   DWORD PTR [ebp+0x8]
10023a1b:	call   0x1002cd0e
10023a20:	pop    ebp
10023a21:	pop    edi
10023a22:	pop    esi
10023a23:	pop    ebx
10023a24:	mov    esp,ebp
10023a26:	pop    ebp
10023a27:	ret    
10023a28:	mov    ecx,DWORD PTR [esp+0x4]
10023a2c:	test   DWORD PTR [ecx+0x4],0x6
10023a33:	mov    eax,0x1
10023a38:	je     0x10023a6c
10023a3a:	mov    eax,DWORD PTR [esp+0x14]
10023a3e:	mov    ecx,DWORD PTR [eax-0x4]
10023a41:	xor    ecx,eax
10023a43:	call   0x10018773
10023a48:	push   ebp
10023a49:	mov    ebp,DWORD PTR [eax+0x10]
10023a4c:	mov    edx,DWORD PTR [eax+0x28]
10023a4f:	push   edx
10023a50:	mov    edx,DWORD PTR [eax+0x24]
10023a53:	push   edx
10023a54:	call   0x10023a6d
10023a59:	add    esp,0x8
10023a5c:	pop    ebp
10023a5d:	mov    eax,DWORD PTR [esp+0x8]
10023a61:	mov    edx,DWORD PTR [esp+0x10]
10023a65:	mov    DWORD PTR [edx],eax
10023a67:	mov    eax,0x3
10023a6c:	ret    
10023a6d:	push   ebx
10023a6e:	push   esi
10023a6f:	push   edi
10023a70:	mov    eax,DWORD PTR [esp+0x10]
10023a74:	push   ebp
10023a75:	push   eax
10023a76:	push   0xfffffffe
10023a78:	push   0x10023a28
10023a7d:	push   DWORD PTR fs:0x0
10023a84:	mov    eax,ds:0x100c7654
10023a89:	xor    eax,esp
10023a8b:	push   eax
10023a8c:	lea    eax,[esp+0x4]
10023a90:	mov    fs:0x0,eax
10023a96:	mov    eax,DWORD PTR [esp+0x28]
10023a9a:	mov    ebx,DWORD PTR [eax+0x8]
10023a9d:	mov    esi,DWORD PTR [eax+0xc]
10023aa0:	cmp    esi,0xffffffff
10023aa3:	je     0x10023adf
10023aa5:	cmp    DWORD PTR [esp+0x2c],0xffffffff
10023aaa:	je     0x10023ab2
10023aac:	cmp    esi,DWORD PTR [esp+0x2c]
10023ab0:	jbe    0x10023adf
10023ab2:	lea    esi,[esi+esi*2]
10023ab5:	mov    ecx,DWORD PTR [ebx+esi*4]
10023ab8:	mov    DWORD PTR [esp+0xc],ecx
10023abc:	mov    DWORD PTR [eax+0xc],ecx
10023abf:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
10023ac4:	jne    0x10023add
10023ac6:	push   0x101
10023acb:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
10023acf:	call   0x10023b1d
10023ad4:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
10023ad8:	call   0x10023b3c
10023add:	jmp    0x10023a96
10023adf:	mov    ecx,DWORD PTR [esp+0x4]
10023ae3:	mov    DWORD PTR fs:0x0,ecx
10023aea:	add    esp,0x18
10023aed:	pop    edi
10023aee:	pop    esi
10023aef:	pop    ebx
10023af0:	ret    
10023af1:	xor    eax,eax
10023af3:	mov    ecx,DWORD PTR fs:0x0
10023afa:	cmp    DWORD PTR [ecx+0x4],0x10023a28
10023b01:	jne    0x10023b13
10023b03:	mov    edx,DWORD PTR [ecx+0xc]
10023b06:	mov    edx,DWORD PTR [edx+0xc]
10023b09:	cmp    DWORD PTR [ecx+0x8],edx
10023b0c:	jne    0x10023b13
10023b0e:	mov    eax,0x1
10023b13:	ret    
10023b14:	push   ebx
10023b15:	push   ecx
10023b16:	mov    ebx,0x100c85b0
10023b1b:	jmp    0x10023b28
10023b1d:	push   ebx
10023b1e:	push   ecx
10023b1f:	mov    ebx,0x100c85b0
10023b24:	mov    ecx,DWORD PTR [esp+0xc]
10023b28:	mov    DWORD PTR [ebx+0x8],ecx
10023b2b:	mov    DWORD PTR [ebx+0x4],eax
10023b2e:	mov    DWORD PTR [ebx+0xc],ebp
10023b31:	push   ebp
10023b32:	push   ecx
10023b33:	push   eax
10023b34:	pop    eax
10023b35:	pop    ecx
10023b36:	pop    ebp
10023b37:	pop    ecx
10023b38:	pop    ebx
10023b39:	ret    0x4
10023b3c:	call   eax
10023b3e:	ret    
10023b3f:	push   esi
10023b40:	push   edi
10023b41:	xor    edi,edi
10023b43:	lea    esi,[edi+0x100c85c0]
10023b49:	push   DWORD PTR [esi]
10023b4b:	call   0x1001c293
10023b50:	add    edi,0x4
10023b53:	cmp    edi,0x28
10023b56:	pop    ecx
10023b57:	mov    DWORD PTR [esi],eax
10023b59:	jb     0x10023b43
10023b5b:	pop    edi
10023b5c:	pop    esi
10023b5d:	ret    
10023b5e:	mov    eax,DWORD PTR [esp+0x4]
10023b62:	mov    ds:0x100c9bec,eax
10023b67:	ret    
10023b68:	mov    eax,DWORD PTR [esp+0x4]
10023b6c:	mov    ds:0x100c9bf0,eax
10023b71:	ret    
10023b72:	push   DWORD PTR [esp+0x4]
10023b76:	call   DWORD PTR ds:0x1002f1a0
10023b7c:	xor    eax,eax
10023b7e:	inc    eax
10023b7f:	ret    0x8
10023b82:	push   0x14
10023b84:	push   0x100bb838
10023b89:	call   0x1001a750
10023b8e:	xor    edi,edi
10023b90:	mov    DWORD PTR [ebp-0x1c],edi
10023b93:	push   DWORD PTR ds:0x100c9bf0
10023b99:	call   0x1001c30a
10023b9e:	pop    ecx
10023b9f:	mov    esi,eax
10023ba1:	cmp    esi,edi
10023ba3:	jne    0x10023bf8
10023ba5:	lea    eax,[ebp-0x1c]
10023ba8:	push   eax
10023ba9:	call   0x1001ca78
10023bae:	pop    ecx
10023baf:	cmp    eax,edi
10023bb1:	je     0x10023bc0
10023bb3:	push   edi
10023bb4:	push   edi
10023bb5:	push   edi
10023bb6:	push   edi
10023bb7:	push   edi
10023bb8:	call   0x10018cc3
10023bbd:	add    esp,0x14
10023bc0:	cmp    DWORD PTR [ebp-0x1c],0x1
10023bc4:	je     0x10023be7
10023bc6:	push   0x100b2738
10023bcb:	call   DWORD PTR ds:0x1002f0fc
10023bd1:	cmp    eax,edi
10023bd3:	je     0x10023be7
10023bd5:	push   0x100b3860
10023bda:	push   eax
10023bdb:	call   DWORD PTR ds:0x1002f050
10023be1:	mov    esi,eax
10023be3:	cmp    esi,edi
10023be5:	jne    0x10023bec
10023be7:	mov    esi,0x10023b72
10023bec:	push   esi
10023bed:	call   0x1001c293
10023bf2:	pop    ecx
10023bf3:	mov    ds:0x100c9bf0,eax
10023bf8:	mov    DWORD PTR [ebp-0x4],edi
10023bfb:	push   DWORD PTR [ebp+0xc]
10023bfe:	push   DWORD PTR [ebp+0x8]
10023c01:	call   esi
10023c03:	mov    DWORD PTR [ebp-0x20],eax
10023c06:	jmp    0x10023c37
10023c08:	mov    eax,DWORD PTR [ebp-0x14]
10023c0b:	mov    eax,DWORD PTR [eax]
10023c0d:	mov    eax,DWORD PTR [eax]
10023c0f:	mov    DWORD PTR [ebp-0x24],eax
10023c12:	xor    ecx,ecx
10023c14:	cmp    eax,0xc0000017
10023c19:	sete   cl
10023c1c:	mov    eax,ecx
10023c1e:	ret    
10023c1f:	mov    esp,DWORD PTR [ebp-0x18]
10023c22:	cmp    DWORD PTR [ebp-0x24],0xc0000017
10023c29:	jne    0x10023c33
10023c2b:	push   0x8
10023c2d:	call   DWORD PTR ds:0x1002f090
10023c33:	and    DWORD PTR [ebp-0x20],0x0
10023c37:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10023c3e:	mov    eax,DWORD PTR [ebp-0x20]
10023c41:	call   0x1001a795
10023c46:	ret    
10023c47:	mov    ax,WORD PTR [esp+0x4]
10023c4c:	cmp    ax,0x30
10023c50:	jb     0x10023dc5
10023c56:	cmp    ax,0x3a
10023c5a:	jae    0x10023c63
10023c5c:	movzx  eax,ax
10023c5f:	sub    eax,0x30
10023c62:	ret    
10023c63:	mov    ecx,0xff10
10023c68:	cmp    ax,cx
10023c6b:	jae    0x10023dbb
10023c71:	mov    ecx,0x660
10023c76:	cmp    ax,cx
10023c79:	jb     0x10023dc5
10023c7f:	cmp    ax,0x66a
10023c83:	jae    0x10023c8b
10023c85:	movzx  eax,ax
10023c88:	sub    eax,ecx
10023c8a:	ret    
10023c8b:	mov    ecx,0x6f0
10023c90:	cmp    ax,cx
10023c93:	jb     0x10023dc5
10023c99:	cmp    ax,0x6fa
10023c9d:	jb     0x10023c85
10023c9f:	mov    ecx,0x966
10023ca4:	cmp    ax,cx
10023ca7:	jb     0x10023dc5
10023cad:	cmp    ax,0x970
10023cb1:	jb     0x10023c85
10023cb3:	mov    ecx,0x9e6
10023cb8:	cmp    ax,cx
10023cbb:	jb     0x10023dc5
10023cc1:	cmp    ax,0x9f0
10023cc5:	jb     0x10023c85
10023cc7:	mov    ecx,0xa66
10023ccc:	cmp    ax,cx
10023ccf:	jb     0x10023dc5
10023cd5:	cmp    ax,0xa70
10023cd9:	jb     0x10023c85
10023cdb:	mov    ecx,0xae6
10023ce0:	cmp    ax,cx
10023ce3:	jb     0x10023dc5
10023ce9:	cmp    ax,0xaf0
10023ced:	jb     0x10023c85
10023cef:	mov    ecx,0xb66
10023cf4:	cmp    ax,cx
10023cf7:	jb     0x10023dc5
10023cfd:	cmp    ax,0xb70
10023d01:	jb     0x10023c85
10023d03:	mov    ecx,0xc66
10023d08:	cmp    ax,cx
10023d0b:	jb     0x10023dc5
10023d11:	cmp    ax,0xc70
10023d15:	jb     0x10023c85
10023d1b:	mov    ecx,0xce6
10023d20:	cmp    ax,cx
10023d23:	jb     0x10023dc5
10023d29:	cmp    ax,0xcf0
10023d2d:	jb     0x10023c85
10023d33:	mov    ecx,0xd66
10023d38:	cmp    ax,cx
10023d3b:	jb     0x10023dc5
10023d41:	cmp    ax,0xd70
10023d45:	jb     0x10023c85
10023d4b:	mov    ecx,0xe50
10023d50:	cmp    ax,cx
10023d53:	jb     0x10023dc5
10023d55:	cmp    ax,0xe5a
10023d59:	jb     0x10023c85
10023d5f:	mov    ecx,0xed0
10023d64:	cmp    ax,cx
10023d67:	jb     0x10023dc5
10023d69:	cmp    ax,0xeda
10023d6d:	jb     0x10023c85
10023d73:	add    ecx,0x50
10023d76:	cmp    ax,cx
10023d79:	jb     0x10023dc5
10023d7b:	cmp    ax,0xf2a
10023d7f:	jb     0x10023c85
10023d85:	mov    ecx,0x1040
10023d8a:	cmp    ax,cx
10023d8d:	jb     0x10023dc5
10023d8f:	cmp    ax,0x104a
10023d93:	jb     0x10023c85
10023d99:	mov    ecx,0x17e0
10023d9e:	cmp    ax,cx
10023da1:	jb     0x10023dc5
10023da3:	cmp    ax,0x17ea
10023da7:	jb     0x10023c85
10023dad:	add    ecx,0x30
10023db0:	cmp    ax,cx
10023db3:	jb     0x10023dc5
10023db5:	cmp    ax,0x181a
10023db9:	jmp    0x10023dbf
10023dbb:	cmp    ax,0xff1a
10023dbf:	jb     0x10023c85
10023dc5:	or     eax,0xffffffff
10023dc8:	ret    
10023dc9:	push   0xc
10023dcb:	push   0x100bb858
10023dd0:	call   0x1001a750
10023dd5:	and    DWORD PTR [ebp-0x4],0x0
10023dd9:	movapd xmm0,xmm1
10023ddd:	mov    DWORD PTR [ebp-0x1c],0x1
10023de4:	jmp    0x10023e09
10023de6:	mov    eax,DWORD PTR [ebp-0x14]
10023de9:	mov    eax,DWORD PTR [eax]
10023deb:	mov    eax,DWORD PTR [eax]
10023ded:	cmp    eax,0xc0000005
10023df2:	je     0x10023dfe
10023df4:	cmp    eax,0xc000001d
10023df9:	je     0x10023dfe
10023dfb:	xor    eax,eax
10023dfd:	ret    
10023dfe:	xor    eax,eax
10023e00:	inc    eax
10023e01:	ret    
10023e02:	mov    esp,DWORD PTR [ebp-0x18]
10023e05:	and    DWORD PTR [ebp-0x1c],0x0
10023e09:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10023e10:	mov    eax,DWORD PTR [ebp-0x1c]
10023e13:	call   0x1001a795
10023e18:	ret    
10023e19:	push   ebp
10023e1a:	mov    ebp,esp
10023e1c:	sub    esp,0x18
10023e1f:	xor    eax,eax
10023e21:	push   ebx
10023e22:	mov    DWORD PTR [ebp-0x4],eax
10023e25:	mov    DWORD PTR [ebp-0xc],eax
10023e28:	mov    DWORD PTR [ebp-0x8],eax
10023e2b:	push   ebx
10023e2c:	pushf  
10023e2d:	pop    eax
10023e2e:	mov    ecx,eax
10023e30:	xor    eax,0x200000
10023e35:	push   eax
10023e36:	popf   
10023e37:	pushf  
10023e38:	pop    edx
10023e39:	sub    edx,ecx
10023e3b:	je     0x10023e5c
10023e3d:	push   ecx
10023e3e:	popf   
10023e3f:	xor    eax,eax
10023e41:	cpuid  
10023e43:	mov    DWORD PTR [ebp-0xc],eax
10023e46:	mov    DWORD PTR [ebp-0x18],ebx
10023e49:	mov    DWORD PTR [ebp-0x14],edx
10023e4c:	mov    DWORD PTR [ebp-0x10],ecx
10023e4f:	mov    eax,0x1
10023e54:	cpuid  
10023e56:	mov    DWORD PTR [ebp-0x4],edx
10023e59:	mov    DWORD PTR [ebp-0x8],eax
10023e5c:	pop    ebx
10023e5d:	test   DWORD PTR [ebp-0x4],0x4000000
10023e64:	je     0x10023e74
10023e66:	call   0x10023dc9
10023e6b:	test   eax,eax
10023e6d:	je     0x10023e74
10023e6f:	xor    eax,eax
10023e71:	inc    eax
10023e72:	jmp    0x10023e76
10023e74:	xor    eax,eax
10023e76:	pop    ebx
10023e77:	leave  
10023e78:	ret    
10023e79:	call   0x10023e19
10023e7e:	mov    ds:0x100cb1a0,eax
10023e83:	xor    eax,eax
10023e85:	ret    
10023e86:	push   ebp
10023e87:	mov    ebp,esp
10023e89:	sub    esp,0x20
10023e8c:	push   ebx
10023e8d:	push   esi
10023e8e:	push   edi
10023e8f:	call   0x1001c301
10023e94:	xor    ebx,ebx
10023e96:	cmp    DWORD PTR ds:0x100c9c30,ebx
10023e9c:	mov    DWORD PTR [ebp-0x8],eax
10023e9f:	mov    DWORD PTR [ebp-0x4],ebx
10023ea2:	mov    DWORD PTR [ebp-0xc],ebx
10023ea5:	mov    DWORD PTR [ebp-0x10],ebx
10023ea8:	jne    0x10023f5c
10023eae:	push   0x100b3ffc
10023eb3:	call   DWORD PTR ds:0x1002f054
10023eb9:	mov    edi,eax
10023ebb:	cmp    edi,ebx
10023ebd:	je     0x1002403c
10023ec3:	mov    esi,DWORD PTR ds:0x1002f050
10023ec9:	push   0x100b3ff0
10023ece:	push   edi
10023ecf:	call   esi
10023ed1:	cmp    eax,ebx
10023ed3:	je     0x1002403c
10023ed9:	push   eax
10023eda:	call   0x1001c293
10023edf:	mov    DWORD PTR [esp],0x100b3fe0
10023ee6:	push   edi
10023ee7:	mov    ds:0x100c9c30,eax
10023eec:	call   esi
10023eee:	push   eax
10023eef:	call   0x1001c293
10023ef4:	mov    DWORD PTR [esp],0x100b3fcc
10023efb:	push   edi
10023efc:	mov    ds:0x100c9c34,eax
10023f01:	call   esi
10023f03:	push   eax
10023f04:	call   0x1001c293
10023f09:	mov    ds:0x100c9c38,eax
10023f0e:	lea    eax,[ebp-0xc]
10023f11:	push   eax
10023f12:	call   0x1001ca78
10023f17:	test   eax,eax
10023f19:	pop    ecx
10023f1a:	pop    ecx
10023f1b:	je     0x10023f2a
10023f1d:	push   ebx
10023f1e:	push   ebx
10023f1f:	push   ebx
10023f20:	push   ebx
10023f21:	push   ebx
10023f22:	call   0x10018cc3
10023f27:	add    esp,0x14
10023f2a:	cmp    DWORD PTR [ebp-0xc],0x2
10023f2e:	jne    0x10023f5c
10023f30:	push   0x100b3fb0
10023f35:	push   edi
10023f36:	call   esi
10023f38:	push   eax
10023f39:	call   0x1001c293
10023f3e:	cmp    eax,ebx
10023f40:	pop    ecx
10023f41:	mov    ds:0x100c9c40,eax
10023f46:	je     0x10023f5c
10023f48:	push   0x100b3f98
10023f4d:	push   edi
10023f4e:	call   esi
10023f50:	push   eax
10023f51:	call   0x1001c293
10023f56:	pop    ecx
10023f57:	mov    ds:0x100c9c3c,eax
10023f5c:	mov    eax,ds:0x100c9c3c
10023f61:	mov    ecx,DWORD PTR [ebp-0x8]
10023f64:	cmp    eax,ecx
10023f66:	je     0x10023fe1
10023f68:	cmp    DWORD PTR ds:0x100c9c40,ecx
10023f6e:	je     0x10023fe1
10023f70:	push   eax
10023f71:	call   0x1001c30a
10023f76:	push   DWORD PTR ds:0x100c9c40
10023f7c:	mov    esi,eax
10023f7e:	call   0x1001c30a
10023f83:	cmp    esi,ebx
10023f85:	pop    ecx
10023f86:	pop    ecx
10023f87:	mov    edi,eax
10023f89:	je     0x10023fe1
10023f8b:	cmp    edi,ebx
10023f8d:	je     0x10023fe1
10023f8f:	call   esi
10023f91:	cmp    eax,ebx
10023f93:	je     0x10023fae
10023f95:	lea    ecx,[ebp-0x14]
10023f98:	push   ecx
10023f99:	push   0xc
10023f9b:	lea    ecx,[ebp-0x20]
10023f9e:	push   ecx
10023f9f:	push   0x1
10023fa1:	push   eax
10023fa2:	call   edi
10023fa4:	test   eax,eax
10023fa6:	je     0x10023fae
10023fa8:	test   BYTE PTR [ebp-0x18],0x1
10023fac:	jne    0x10023fe1
10023fae:	lea    eax,[ebp-0x10]
10023fb1:	push   eax
10023fb2:	call   0x1001caaf
10023fb7:	test   eax,eax
10023fb9:	pop    ecx
10023fba:	je     0x10023fc9
10023fbc:	push   ebx
10023fbd:	push   ebx
10023fbe:	push   ebx
10023fbf:	push   ebx
10023fc0:	push   ebx
10023fc1:	call   0x10018cc3
10023fc6:	add    esp,0x14
10023fc9:	cmp    DWORD PTR [ebp-0x10],0x4
10023fcd:	jb     0x10023fd8
10023fcf:	or     DWORD PTR [ebp+0x10],0x200000
10023fd6:	jmp    0x1002401c
10023fd8:	or     DWORD PTR [ebp+0x10],0x40000
10023fdf:	jmp    0x1002401c
10023fe1:	mov    eax,ds:0x100c9c34
10023fe6:	cmp    eax,DWORD PTR [ebp-0x8]
10023fe9:	je     0x1002401c
10023feb:	push   eax
10023fec:	call   0x1001c30a
10023ff1:	cmp    eax,ebx
10023ff3:	pop    ecx
10023ff4:	je     0x1002401c
10023ff6:	call   eax
10023ff8:	cmp    eax,ebx
10023ffa:	mov    DWORD PTR [ebp-0x4],eax
10023ffd:	je     0x1002401c
10023fff:	mov    eax,ds:0x100c9c38
10024004:	cmp    eax,DWORD PTR [ebp-0x8]
10024007:	je     0x1002401c
10024009:	push   eax
1002400a:	call   0x1001c30a
1002400f:	cmp    eax,ebx
10024011:	pop    ecx
10024012:	je     0x1002401c
10024014:	push   DWORD PTR [ebp-0x4]
10024017:	call   eax
10024019:	mov    DWORD PTR [ebp-0x4],eax
1002401c:	push   DWORD PTR ds:0x100c9c30
10024022:	call   0x1001c30a
10024027:	cmp    eax,ebx
10024029:	pop    ecx
1002402a:	je     0x1002403c
1002402c:	push   DWORD PTR [ebp+0x10]
1002402f:	push   DWORD PTR [ebp+0xc]
10024032:	push   DWORD PTR [ebp+0x8]
10024035:	push   DWORD PTR [ebp-0x4]
10024038:	call   eax
1002403a:	jmp    0x1002403e
1002403c:	xor    eax,eax
1002403e:	pop    edi
1002403f:	pop    esi
10024040:	pop    ebx
10024041:	leave  
10024042:	ret    
10024043:	mov    ecx,DWORD PTR [esp+0x4]
10024047:	push   esi
10024048:	xor    esi,esi
1002404a:	cmp    ecx,esi
1002404c:	jl     0x1002406c
1002404e:	cmp    ecx,0x2
10024051:	jle    0x1002405f
10024053:	cmp    ecx,0x3
10024056:	jne    0x1002406c
10024058:	mov    eax,ds:0x100c9250
1002405d:	pop    esi
1002405e:	ret    
1002405f:	mov    eax,ds:0x100c9250
10024064:	mov    DWORD PTR ds:0x100c9250,ecx
1002406a:	pop    esi
1002406b:	ret    
1002406c:	call   0x1001cd0e
10024071:	push   esi
10024072:	push   esi
10024073:	push   esi
10024074:	push   esi
10024075:	push   esi
10024076:	mov    DWORD PTR [eax],0x16
1002407c:	call   0x10018dbf
10024081:	add    esp,0x14
10024084:	or     eax,0xffffffff
10024087:	pop    esi
10024088:	ret    
10024089:	push   ebp
1002408a:	mov    ebp,esp
1002408c:	sub    esp,0x10
1002408f:	mov    eax,ds:0x100c7654
10024094:	xor    eax,ebp
10024096:	mov    DWORD PTR [ebp-0x4],eax
10024099:	cmp    DWORD PTR [ebp+0x14],0xffffffff
1002409d:	push   ebx
1002409e:	push   esi
1002409f:	push   edi
100240a0:	jge    0x100240a9
100240a2:	xor    eax,eax
100240a4:	jmp    0x1002429b
100240a9:	mov    eax,ds:0x100c9c44
100240ae:	mov    esi,DWORD PTR ds:0x1002f020
100240b4:	xor    ebx,ebx
100240b6:	xor    edi,edi
100240b8:	inc    ebx
100240b9:	cmp    eax,edi
100240bb:	jne    0x100240f0
100240bd:	lea    eax,[ebp-0x8]
100240c0:	push   eax
100240c1:	push   ebx
100240c2:	push   0x100b9dec
100240c7:	push   ebx
100240c8:	call   esi
100240ca:	test   eax,eax
100240cc:	je     0x100240d6
100240ce:	mov    DWORD PTR ds:0x100c9c44,ebx
100240d4:	jmp    0x100240f4
100240d6:	call   DWORD PTR ds:0x1002f094
100240dc:	cmp    eax,0x78
100240df:	jne    0x100240eb
100240e1:	push   0x2
100240e3:	pop    eax
100240e4:	mov    ds:0x100c9c44,eax
100240e9:	jmp    0x100240f0
100240eb:	mov    eax,ds:0x100c9c44
100240f0:	cmp    eax,ebx
100240f2:	jne    0x10024107
100240f4:	push   DWORD PTR [ebp+0x18]
100240f7:	push   DWORD PTR [ebp+0x14]
100240fa:	push   DWORD PTR [ebp+0x10]
100240fd:	push   DWORD PTR [ebp+0xc]
10024100:	call   esi
10024102:	jmp    0x1002429b
10024107:	cmp    eax,0x2
1002410a:	je     0x10024110
1002410c:	cmp    eax,edi
1002410e:	jne    0x100240a2
10024110:	cmp    DWORD PTR [ebp+0x20],edi
10024113:	mov    DWORD PTR [ebp-0xc],edi
10024116:	jne    0x10024123
10024118:	mov    eax,DWORD PTR [ebp+0x8]
1002411b:	mov    eax,DWORD PTR [eax]
1002411d:	mov    eax,DWORD PTR [eax+0x14]
10024120:	mov    DWORD PTR [ebp+0x20],eax
10024123:	cmp    DWORD PTR [ebp+0x1c],edi
10024126:	jne    0x10024133
10024128:	mov    eax,DWORD PTR [ebp+0x8]
1002412b:	mov    eax,DWORD PTR [eax]
1002412d:	mov    eax,DWORD PTR [eax+0x4]
10024130:	mov    DWORD PTR [ebp+0x1c],eax
10024133:	push   DWORD PTR [ebp+0x20]
10024136:	call   0x10022ecb
1002413b:	cmp    DWORD PTR [ebp+0x1c],eax
1002413e:	pop    ecx
1002413f:	je     0x10024149
10024141:	cmp    eax,0xffffffff
10024144:	je     0x10024149
10024146:	mov    DWORD PTR [ebp+0x1c],eax
10024149:	mov    ebx,DWORD PTR ds:0x1002f038
1002414f:	push   edi
10024150:	push   edi
10024151:	push   edi
10024152:	push   edi
10024153:	push   DWORD PTR [ebp+0x14]
10024156:	push   DWORD PTR [ebp+0x10]
10024159:	push   edi
1002415a:	push   DWORD PTR [ebp+0x1c]
1002415d:	call   ebx
1002415f:	mov    esi,eax
10024161:	cmp    esi,edi
10024163:	mov    DWORD PTR [ebp-0x10],esi
10024166:	je     0x100240a2
1002416c:	jle    0x100241a9
1002416e:	cmp    esi,0xffffffe0
10024171:	ja     0x100241a9
10024173:	lea    eax,[esi+0x8]
10024176:	cmp    eax,0x400
1002417b:	ja     0x10024190
1002417d:	call   0x10018790
10024182:	mov    eax,esp
10024184:	cmp    eax,edi
10024186:	je     0x100241a4
10024188:	mov    DWORD PTR [eax],0xcccc
1002418e:	jmp    0x100241a1
10024190:	push   eax
10024191:	call   0x100198b2
10024196:	cmp    eax,edi
10024198:	pop    ecx
10024199:	je     0x100241a4
1002419b:	mov    DWORD PTR [eax],0xdddd
100241a1:	add    eax,0x8
100241a4:	mov    DWORD PTR [ebp-0x8],eax
100241a7:	jmp    0x100241ac
100241a9:	mov    DWORD PTR [ebp-0x8],edi
100241ac:	cmp    DWORD PTR [ebp-0x8],edi
100241af:	je     0x100240a2
100241b5:	push   esi
100241b6:	push   edi
100241b7:	push   DWORD PTR [ebp-0x8]
100241ba:	call   0x100191d0
100241bf:	add    esp,0xc
100241c2:	push   edi
100241c3:	push   edi
100241c4:	push   esi
100241c5:	push   DWORD PTR [ebp-0x8]
100241c8:	push   DWORD PTR [ebp+0x14]
100241cb:	push   DWORD PTR [ebp+0x10]
100241ce:	push   edi
100241cf:	push   DWORD PTR [ebp+0x1c]
100241d2:	call   ebx
100241d4:	test   eax,eax
100241d6:	je     0x1002428f
100241dc:	lea    eax,[esi+0x1]
100241df:	cmp    eax,edi
100241e1:	jle    0x10024227
100241e3:	cmp    eax,0x7ffffff0
100241e8:	ja     0x10024227
100241ea:	lea    eax,[esi+esi*1+0xa]
100241ee:	cmp    eax,0x400
100241f3:	ja     0x1002420f
100241f5:	call   0x10018790
100241fa:	mov    ebx,esp
100241fc:	cmp    ebx,edi
100241fe:	je     0x1002428f
10024204:	mov    DWORD PTR [ebx],0xcccc
1002420a:	add    ebx,0x8
1002420d:	jmp    0x10024229
1002420f:	push   eax
10024210:	call   0x100198b2
10024215:	cmp    eax,edi
10024217:	pop    ecx
10024218:	je     0x10024223
1002421a:	mov    DWORD PTR [eax],0xdddd
10024220:	add    eax,0x8
10024223:	mov    ebx,eax
10024225:	jmp    0x10024229
10024227:	xor    ebx,ebx
10024229:	cmp    ebx,edi
1002422b:	je     0x1002428f
1002422d:	cmp    DWORD PTR [ebp+0x20],edi
10024230:	jne    0x1002423d
10024232:	mov    eax,DWORD PTR [ebp+0x8]
10024235:	mov    eax,DWORD PTR [eax]
10024237:	mov    eax,DWORD PTR [eax+0x14]
1002423a:	mov    DWORD PTR [ebp+0x20],eax
1002423d:	mov    edi,DWORD PTR [ebp+0x14]
10024240:	push   ebx
10024241:	push   DWORD PTR [ebp-0x10]
10024244:	add    edi,edi
10024246:	push   DWORD PTR [ebp-0x8]
10024249:	lea    esi,[edi+ebx*1]
1002424c:	push   DWORD PTR [ebp+0xc]
1002424f:	or     WORD PTR [esi],0xffff
10024254:	push   DWORD PTR [ebp+0x20]
10024257:	or     WORD PTR [esi-0x2],0xffff
1002425d:	call   DWORD PTR ds:0x1002f024
10024263:	cmp    WORD PTR [esi-0x2],0xffff
10024269:	mov    DWORD PTR [ebp-0xc],eax
1002426c:	je     0x10024284
1002426e:	cmp    WORD PTR [esi],0xffff
10024273:	jne    0x10024284
10024275:	push   edi
10024276:	push   ebx
10024277:	push   DWORD PTR [ebp+0x18]
1002427a:	call   0x1001cef0
1002427f:	add    esp,0xc
10024282:	jmp    0x10024288
10024284:	and    DWORD PTR [ebp-0xc],0x0
10024288:	push   ebx
10024289:	call   0x1001a732
1002428e:	pop    ecx
1002428f:	push   DWORD PTR [ebp-0x8]
10024292:	call   0x1001a732
10024297:	mov    eax,DWORD PTR [ebp-0xc]
1002429a:	pop    ecx
1002429b:	lea    esp,[ebp-0x1c]
1002429e:	pop    edi
1002429f:	pop    esi
100242a0:	pop    ebx
100242a1:	mov    ecx,DWORD PTR [ebp-0x4]
100242a4:	xor    ecx,ebp
100242a6:	call   0x10018773
100242ab:	leave  
100242ac:	ret    
100242ad:	push   ebp
100242ae:	mov    ebp,esp
100242b0:	sub    esp,0x10
100242b3:	push   DWORD PTR [ebp+0x8]
100242b6:	lea    ecx,[ebp-0x10]
100242b9:	call   0x1001924a
100242be:	push   DWORD PTR [ebp+0x20]
100242c1:	lea    eax,[ebp-0x10]
100242c4:	push   DWORD PTR [ebp+0x1c]
100242c7:	push   DWORD PTR [ebp+0x18]
100242ca:	push   DWORD PTR [ebp+0x14]
100242cd:	push   DWORD PTR [ebp+0x10]
100242d0:	push   DWORD PTR [ebp+0xc]
100242d3:	push   eax
100242d4:	call   0x10024089
100242d9:	add    esp,0x1c
100242dc:	cmp    BYTE PTR [ebp-0x4],0x0
100242e0:	je     0x100242e9
100242e2:	mov    ecx,DWORD PTR [ebp-0x8]
100242e5:	and    DWORD PTR [ecx+0x70],0xfffffffd
100242e9:	leave  
100242ea:	ret    
100242eb:	inc    DWORD PTR ds:0x100c9bc0
100242f1:	push   0x1000
100242f6:	call   0x1001afaf
100242fb:	test   eax,eax
100242fd:	pop    ecx
100242fe:	mov    ecx,DWORD PTR [esp+0x4]
10024302:	mov    DWORD PTR [ecx+0x8],eax
10024305:	je     0x10024314
10024307:	or     DWORD PTR [ecx+0xc],0x8
1002430b:	mov    DWORD PTR [ecx+0x18],0x1000
10024312:	jmp    0x10024325
10024314:	or     DWORD PTR [ecx+0xc],0x4
10024318:	lea    eax,[ecx+0x14]
1002431b:	mov    DWORD PTR [ecx+0x8],eax
1002431e:	mov    DWORD PTR [ecx+0x18],0x2
10024325:	mov    eax,DWORD PTR [ecx+0x8]
10024328:	and    DWORD PTR [ecx+0x4],0x0
1002432c:	mov    DWORD PTR [ecx],eax
1002432e:	ret    
1002432f:	mov    eax,DWORD PTR [esp+0x4]
10024333:	cmp    eax,0xfffffffe
10024336:	jne    0x10024346
10024338:	call   0x1001cd0e
1002433d:	mov    DWORD PTR [eax],0x9
10024343:	xor    eax,eax
10024345:	ret    
10024346:	push   esi
10024347:	xor    esi,esi
10024349:	cmp    eax,esi
1002434b:	jl     0x10024355
1002434d:	cmp    eax,DWORD PTR ds:0x100cb064
10024353:	jb     0x10024371
10024355:	call   0x1001cd0e
1002435a:	push   esi
1002435b:	push   esi
1002435c:	push   esi
1002435d:	push   esi
1002435e:	push   esi
1002435f:	mov    DWORD PTR [eax],0x9
10024365:	call   0x10018dbf
1002436a:	add    esp,0x14
1002436d:	xor    eax,eax
1002436f:	pop    esi
10024370:	ret    
10024371:	mov    ecx,eax
10024373:	and    eax,0x1f
10024376:	sar    ecx,0x5
10024379:	mov    ecx,DWORD PTR [ecx*4+0x100cb080]
10024380:	shl    eax,0x6
10024383:	movzx  eax,BYTE PTR [ecx+eax*1+0x4]
10024388:	and    eax,0x40
1002438b:	pop    esi
1002438c:	ret    
1002438d:	push   ebp
1002438e:	mov    ebp,esp
10024390:	sub    esp,0x10
10024393:	mov    eax,ds:0x100c7654
10024398:	xor    eax,ebp
1002439a:	mov    DWORD PTR [ebp-0x4],eax
1002439d:	push   ebx
1002439e:	push   esi
1002439f:	mov    esi,DWORD PTR [ebp+0xc]
100243a2:	test   BYTE PTR [esi+0xc],0x40
100243a6:	push   edi
100243a7:	jne    0x1002453c
100243ad:	push   esi
100243ae:	call   0x1002212d
100243b3:	cmp    eax,0xffffffff
100243b6:	pop    ecx
100243b7:	mov    edi,0x100c8148
100243bc:	je     0x100243ec
100243be:	push   esi
100243bf:	call   0x1002212d
100243c4:	cmp    eax,0xfffffffe
100243c7:	pop    ecx
100243c8:	je     0x100243ec
100243ca:	push   esi
100243cb:	call   0x1002212d
100243d0:	sar    eax,0x5
100243d3:	push   esi
100243d4:	lea    ebx,[eax*4+0x100cb080]
100243db:	call   0x1002212d
100243e0:	and    eax,0x1f
100243e3:	pop    ecx
100243e4:	shl    eax,0x6
100243e7:	add    eax,DWORD PTR [ebx]
100243e9:	pop    ecx
100243ea:	jmp    0x100243ee
100243ec:	mov    eax,edi
100243ee:	mov    al,BYTE PTR [eax+0x24]
100243f1:	and    al,0x7f
100243f3:	cmp    al,0x2
100243f5:	je     0x1002453c
100243fb:	push   esi
100243fc:	call   0x1002212d
10024401:	cmp    eax,0xffffffff
10024404:	pop    ecx
10024405:	je     0x10024435
10024407:	push   esi
10024408:	call   0x1002212d
1002440d:	cmp    eax,0xfffffffe
10024410:	pop    ecx
10024411:	je     0x10024435
10024413:	push   esi
10024414:	call   0x1002212d
10024419:	sar    eax,0x5
1002441c:	push   esi
1002441d:	lea    ebx,[eax*4+0x100cb080]
10024424:	call   0x1002212d
10024429:	and    eax,0x1f
1002442c:	pop    ecx
1002442d:	shl    eax,0x6
10024430:	add    eax,DWORD PTR [ebx]
10024432:	pop    ecx
10024433:	jmp    0x10024437
10024435:	mov    eax,edi
10024437:	mov    al,BYTE PTR [eax+0x24]
1002443a:	and    al,0x7f
1002443c:	cmp    al,0x1
1002443e:	jne    0x1002449c
10024440:	dec    DWORD PTR [esi+0x4]
10024443:	mov    ebx,DWORD PTR [ebp+0x8]
10024446:	js     0x10024456
10024448:	mov    eax,DWORD PTR [esi]
1002444a:	mov    BYTE PTR [eax],bl
1002444c:	mov    ecx,DWORD PTR [esi]
1002444e:	movzx  eax,BYTE PTR [ecx]
10024451:	inc    ecx
10024452:	mov    DWORD PTR [esi],ecx
10024454:	jmp    0x10024462
10024456:	movsx  eax,bl
10024459:	push   esi
1002445a:	push   eax
1002445b:	call   0x1001fb0b
10024460:	pop    ecx
10024461:	pop    ecx
10024462:	cmp    eax,0xffffffff
10024465:	jne    0x10024470
10024467:	or     ax,0xffff
1002446b:	jmp    0x1002455c
10024470:	dec    DWORD PTR [esi+0x4]
10024473:	js     0x10024483
10024475:	mov    eax,DWORD PTR [esi]
10024477:	mov    BYTE PTR [eax],bh
10024479:	mov    ecx,DWORD PTR [esi]
1002447b:	movzx  eax,BYTE PTR [ecx]
1002447e:	inc    ecx
1002447f:	mov    DWORD PTR [esi],ecx
10024481:	jmp    0x1002448f
10024483:	movsx  eax,bh
10024486:	push   esi
10024487:	push   eax
10024488:	call   0x1001fb0b
1002448d:	pop    ecx
1002448e:	pop    ecx
1002448f:	cmp    eax,0xffffffff
10024492:	je     0x10024467
10024494:	mov    ax,bx
10024497:	jmp    0x1002455c
1002449c:	push   esi
1002449d:	call   0x1002212d
100244a2:	cmp    eax,0xffffffff
100244a5:	pop    ecx
100244a6:	je     0x100244d6
100244a8:	push   esi
100244a9:	call   0x1002212d
100244ae:	cmp    eax,0xfffffffe
100244b1:	pop    ecx
100244b2:	je     0x100244d6
100244b4:	push   esi
100244b5:	call   0x1002212d
100244ba:	sar    eax,0x5
100244bd:	push   esi
100244be:	lea    ebx,[eax*4+0x100cb080]
100244c5:	call   0x1002212d
100244ca:	and    eax,0x1f
100244cd:	pop    ecx
100244ce:	shl    eax,0x6
100244d1:	add    eax,DWORD PTR [ebx]
100244d3:	pop    ecx
100244d4:	jmp    0x100244d8
100244d6:	mov    eax,edi
100244d8:	test   BYTE PTR [eax+0x4],0x80
100244dc:	je     0x1002453c
100244de:	push   DWORD PTR [ebp+0x8]
100244e1:	lea    eax,[ebp-0xc]
100244e4:	push   0x5
100244e6:	push   eax
100244e7:	lea    eax,[ebp-0x10]
100244ea:	push   eax
100244eb:	call   0x100248a9
100244f0:	add    esp,0x10
100244f3:	test   eax,eax
100244f5:	jne    0x10024467
100244fb:	xor    ebx,ebx
100244fd:	cmp    DWORD PTR [ebp-0x10],ebx
10024500:	jle    0x10024536
10024502:	dec    DWORD PTR [esi+0x4]
10024505:	js     0x10024519
10024507:	mov    eax,DWORD PTR [esi]
10024509:	mov    cl,BYTE PTR [ebp+ebx*1-0xc]
1002450d:	mov    BYTE PTR [eax],cl
1002450f:	mov    ecx,DWORD PTR [esi]
10024511:	movzx  eax,BYTE PTR [ecx]
10024514:	inc    ecx
10024515:	mov    DWORD PTR [esi],ecx
10024517:	jmp    0x10024527
10024519:	movsx  eax,BYTE PTR [ebp+ebx*1-0xc]
1002451e:	push   esi
1002451f:	push   eax
10024520:	call   0x1001fb0b
10024525:	pop    ecx
10024526:	pop    ecx
10024527:	cmp    eax,0xffffffff
1002452a:	je     0x10024467
10024530:	inc    ebx
10024531:	cmp    ebx,DWORD PTR [ebp-0x10]
10024534:	jl     0x10024502
10024536:	mov    ax,WORD PTR [ebp+0x8]
1002453a:	jmp    0x1002455c
1002453c:	add    DWORD PTR [esi+0x4],0xfffffffe
10024540:	js     0x1002454f
10024542:	mov    ecx,DWORD PTR [esi]
10024544:	mov    eax,DWORD PTR [ebp+0x8]
10024547:	mov    WORD PTR [ecx],ax
1002454a:	add    DWORD PTR [esi],0x2
1002454d:	jmp    0x1002455c
1002454f:	movzx  eax,WORD PTR [ebp+0x8]
10024553:	push   esi
10024554:	push   eax
10024555:	call   0x10026461
1002455a:	pop    ecx
1002455b:	pop    ecx
1002455c:	mov    ecx,DWORD PTR [ebp-0x4]
1002455f:	pop    edi
10024560:	pop    esi
10024561:	xor    ecx,ebp
10024563:	pop    ebx
10024564:	call   0x10018773
10024569:	leave  
1002456a:	ret    
1002456b:	mov    eax,ds:0x100c7654
10024570:	or     eax,0x1
10024573:	xor    ecx,ecx
10024575:	cmp    DWORD PTR ds:0x100c9c48,eax
1002457b:	sete   cl
1002457e:	mov    eax,ecx
10024580:	ret    
10024581:	push   ebp
10024582:	mov    ebp,esp
10024584:	sub    esp,0x10
10024587:	push   ebx
10024588:	push   esi
10024589:	mov    esi,DWORD PTR [ebp+0xc]
1002458c:	xor    ebx,ebx
1002458e:	cmp    esi,ebx
10024590:	je     0x100245a5
10024592:	cmp    DWORD PTR [ebp+0x10],ebx
10024595:	je     0x100245a5
10024597:	cmp    BYTE PTR [esi],bl
10024599:	jne    0x100245ab
1002459b:	mov    eax,DWORD PTR [ebp+0x8]
1002459e:	cmp    eax,ebx
100245a0:	je     0x100245a5
100245a2:	mov    WORD PTR [eax],bx
100245a5:	xor    eax,eax
100245a7:	pop    esi
100245a8:	pop    ebx
100245a9:	leave  
100245aa:	ret    
100245ab:	push   DWORD PTR [ebp+0x14]
100245ae:	lea    ecx,[ebp-0x10]
100245b1:	call   0x1001924a
100245b6:	mov    eax,DWORD PTR [ebp-0x10]
100245b9:	cmp    DWORD PTR [eax+0x14],ebx
100245bc:	jne    0x100245dd
100245be:	mov    eax,DWORD PTR [ebp+0x8]
100245c1:	cmp    eax,ebx
100245c3:	je     0x100245cc
100245c5:	movzx  cx,BYTE PTR [esi]
100245c9:	mov    WORD PTR [eax],cx
100245cc:	cmp    BYTE PTR [ebp-0x4],bl
100245cf:	je     0x100245d8
100245d1:	mov    eax,DWORD PTR [ebp-0x8]
100245d4:	and    DWORD PTR [eax+0x70],0xfffffffd
100245d8:	xor    eax,eax
100245da:	inc    eax
100245db:	jmp    0x100245a7
100245dd:	lea    eax,[ebp-0x10]
100245e0:	push   eax
100245e1:	movzx  eax,BYTE PTR [esi]
100245e4:	push   eax
100245e5:	call   0x10019c87
100245ea:	test   eax,eax
100245ec:	pop    ecx
100245ed:	pop    ecx
100245ee:	je     0x1002466d
100245f0:	mov    eax,DWORD PTR [ebp-0x10]
100245f3:	mov    ecx,DWORD PTR [eax+0xac]
100245f9:	cmp    ecx,0x1
100245fc:	jle    0x10024623
100245fe:	cmp    DWORD PTR [ebp+0x10],ecx
10024601:	jl     0x10024623
10024603:	xor    edx,edx
10024605:	cmp    DWORD PTR [ebp+0x8],ebx
10024608:	setne  dl
1002460b:	push   edx
1002460c:	push   DWORD PTR [ebp+0x8]
1002460f:	push   ecx
10024610:	push   esi
10024611:	push   0x9
10024613:	push   DWORD PTR [eax+0x4]
10024616:	call   DWORD PTR ds:0x1002f098
1002461c:	test   eax,eax
1002461e:	mov    eax,DWORD PTR [ebp-0x10]
10024621:	jne    0x10024633
10024623:	mov    ecx,DWORD PTR [ebp+0x10]
10024626:	cmp    ecx,DWORD PTR [eax+0xac]
1002462c:	jb     0x1002464e
1002462e:	cmp    BYTE PTR [esi+0x1],bl
10024631:	je     0x1002464e
10024633:	cmp    BYTE PTR [ebp-0x4],bl
10024636:	mov    eax,DWORD PTR [eax+0xac]
1002463c:	je     0x100245a7
10024642:	mov    ecx,DWORD PTR [ebp-0x8]
10024645:	and    DWORD PTR [ecx+0x70],0xfffffffd
10024649:	jmp    0x100245a7
1002464e:	call   0x1001cd0e
10024653:	mov    DWORD PTR [eax],0x2a
10024659:	cmp    BYTE PTR [ebp-0x4],bl
1002465c:	je     0x10024665
1002465e:	mov    eax,DWORD PTR [ebp-0x8]
10024661:	and    DWORD PTR [eax+0x70],0xfffffffd
10024665:	or     eax,0xffffffff
10024668:	jmp    0x100245a7
1002466d:	xor    eax,eax
1002466f:	cmp    DWORD PTR [ebp+0x8],ebx
10024672:	setne  al
10024675:	push   eax
10024676:	push   DWORD PTR [ebp+0x8]
10024679:	mov    eax,DWORD PTR [ebp-0x10]
1002467c:	push   0x1
1002467e:	push   esi
1002467f:	push   0x9
10024681:	push   DWORD PTR [eax+0x4]
10024684:	call   DWORD PTR ds:0x1002f098
1002468a:	test   eax,eax
1002468c:	jne    0x100245cc
10024692:	jmp    0x1002464e
10024694:	push   0x0
10024696:	push   DWORD PTR [esp+0x10]
1002469a:	push   DWORD PTR [esp+0x10]
1002469e:	push   DWORD PTR [esp+0x10]
100246a2:	call   0x10024581
100246a7:	add    esp,0x10
100246aa:	ret    
100246ab:	push   0x10
100246ad:	push   0x100bb878
100246b2:	call   0x1001a750
100246b7:	xor    ebx,ebx
100246b9:	mov    DWORD PTR [ebp-0x1c],ebx
100246bc:	push   0x1
100246be:	call   0x1001e3bb
100246c3:	pop    ecx
100246c4:	mov    DWORD PTR [ebp-0x4],ebx
100246c7:	push   0x3
100246c9:	pop    edi
100246ca:	mov    DWORD PTR [ebp-0x20],edi
100246cd:	cmp    edi,DWORD PTR ds:0x100cb060
100246d3:	jge    0x1002472c
100246d5:	mov    esi,edi
100246d7:	shl    esi,0x2
100246da:	mov    eax,ds:0x100ca050
100246df:	add    eax,esi
100246e1:	cmp    DWORD PTR [eax],ebx
100246e3:	je     0x10024729
100246e5:	mov    eax,DWORD PTR [eax]
100246e7:	test   BYTE PTR [eax+0xc],0x83
100246eb:	je     0x100246fc
100246ed:	push   eax
100246ee:	call   0x1001a44a
100246f3:	pop    ecx
100246f4:	cmp    eax,0xffffffff
100246f7:	je     0x100246fc
100246f9:	inc    DWORD PTR [ebp-0x1c]
100246fc:	cmp    edi,0x14
100246ff:	jl     0x10024729
10024701:	mov    eax,ds:0x100ca050
10024706:	mov    eax,DWORD PTR [esi+eax*1]
10024709:	add    eax,0x20
1002470c:	push   eax
1002470d:	call   DWORD PTR ds:0x1002f1a4
10024713:	mov    eax,ds:0x100ca050
10024718:	push   DWORD PTR [esi+eax*1]
1002471b:	call   0x100197d5
10024720:	pop    ecx
10024721:	mov    eax,ds:0x100ca050
10024726:	mov    DWORD PTR [esi+eax*1],ebx
10024729:	inc    edi
1002472a:	jmp    0x100246ca
1002472c:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10024733:	call   0x10024741
10024738:	mov    eax,DWORD PTR [ebp-0x1c]
1002473b:	call   0x1001a795
10024740:	ret    
10024741:	push   0x1
10024743:	call   0x1001e2e3
10024748:	pop    ecx
10024749:	ret    
1002474a:	push   ebp
1002474b:	mov    ebp,esp
1002474d:	sub    esp,0x10
10024750:	push   ebx
10024751:	push   esi
10024752:	mov    esi,DWORD PTR [ebp+0xc]
10024755:	xor    ebx,ebx
10024757:	cmp    esi,ebx
10024759:	push   edi
1002475a:	mov    edi,DWORD PTR [ebp+0x10]
1002475d:	jne    0x10024770
1002475f:	cmp    edi,ebx
10024761:	jbe    0x10024770
10024763:	mov    eax,DWORD PTR [ebp+0x8]
10024766:	cmp    eax,ebx
10024768:	je     0x1002476c
1002476a:	mov    DWORD PTR [eax],ebx
1002476c:	xor    eax,eax
1002476e:	jmp    0x100247ef
10024770:	mov    eax,DWORD PTR [ebp+0x8]
10024773:	cmp    eax,ebx
10024775:	je     0x1002477a
10024777:	or     DWORD PTR [eax],0xffffffff
1002477a:	cmp    edi,0x7fffffff
10024780:	jbe    0x1002479d
10024782:	call   0x1001cd0e
10024787:	push   0x16
10024789:	pop    esi
1002478a:	push   ebx
1002478b:	push   ebx
1002478c:	push   ebx
1002478d:	push   ebx
1002478e:	push   ebx
1002478f:	mov    DWORD PTR [eax],esi
10024791:	call   0x10018dbf
10024796:	add    esp,0x14
10024799:	mov    eax,esi
1002479b:	jmp    0x100247ef
1002479d:	push   DWORD PTR [ebp+0x18]
100247a0:	lea    ecx,[ebp-0x10]
100247a3:	call   0x1001924a
100247a8:	mov    eax,DWORD PTR [ebp-0x10]
100247ab:	cmp    DWORD PTR [eax+0x14],ebx
100247ae:	jne    0x10024848
100247b4:	mov    ax,WORD PTR [ebp+0x14]
100247b8:	cmp    ax,0xff
100247bc:	jbe    0x100247f4
100247be:	cmp    esi,ebx
100247c0:	je     0x100247d1
100247c2:	cmp    edi,ebx
100247c4:	jbe    0x100247d1
100247c6:	push   edi
100247c7:	push   ebx
100247c8:	push   esi
100247c9:	call   0x100191d0
100247ce:	add    esp,0xc
100247d1:	call   0x1001cd0e
100247d6:	mov    DWORD PTR [eax],0x2a
100247dc:	call   0x1001cd0e
100247e1:	cmp    BYTE PTR [ebp-0x4],bl
100247e4:	mov    eax,DWORD PTR [eax]
100247e6:	je     0x100247ef
100247e8:	mov    ecx,DWORD PTR [ebp-0x8]
100247eb:	and    DWORD PTR [ecx+0x70],0xfffffffd
100247ef:	pop    edi
100247f0:	pop    esi
100247f1:	pop    ebx
100247f2:	leave  
100247f3:	ret    
100247f4:	cmp    esi,ebx
100247f6:	je     0x10024826
100247f8:	cmp    edi,ebx
100247fa:	ja     0x10024824
100247fc:	call   0x1001cd0e
10024801:	push   0x22
10024803:	pop    esi
10024804:	push   ebx
10024805:	push   ebx
10024806:	push   ebx
10024807:	push   ebx
10024808:	push   ebx
10024809:	mov    DWORD PTR [eax],esi
1002480b:	call   0x10018dbf
10024810:	add    esp,0x14
10024813:	cmp    BYTE PTR [ebp-0x4],bl
10024816:	je     0x10024799
10024818:	mov    eax,DWORD PTR [ebp-0x8]
1002481b:	and    DWORD PTR [eax+0x70],0xfffffffd
1002481f:	jmp    0x10024799
10024824:	mov    BYTE PTR [esi],al
10024826:	mov    eax,DWORD PTR [ebp+0x8]
10024829:	cmp    eax,ebx
1002482b:	je     0x10024833
1002482d:	mov    DWORD PTR [eax],0x1
10024833:	cmp    BYTE PTR [ebp-0x4],bl
10024836:	je     0x1002476c
1002483c:	mov    eax,DWORD PTR [ebp-0x8]
1002483f:	and    DWORD PTR [eax+0x70],0xfffffffd
10024843:	jmp    0x1002476c
10024848:	lea    ecx,[ebp+0xc]
1002484b:	push   ecx
1002484c:	push   ebx
1002484d:	push   edi
1002484e:	push   esi
1002484f:	push   0x1
10024851:	lea    ecx,[ebp+0x14]
10024854:	push   ecx
10024855:	push   ebx
10024856:	mov    DWORD PTR [ebp+0xc],ebx
10024859:	push   DWORD PTR [eax+0x4]
1002485c:	call   DWORD PTR ds:0x1002f038
10024862:	cmp    eax,ebx
10024864:	je     0x1002487a
10024866:	cmp    DWORD PTR [ebp+0xc],ebx
10024869:	jne    0x100247d1
1002486f:	mov    ecx,DWORD PTR [ebp+0x8]
10024872:	cmp    ecx,ebx
10024874:	je     0x10024833
10024876:	mov    DWORD PTR [ecx],eax
10024878:	jmp    0x10024833
1002487a:	call   DWORD PTR ds:0x1002f094
10024880:	cmp    eax,0x7a
10024883:	jne    0x100247d1
10024889:	cmp    esi,ebx
1002488b:	je     0x100247fc
10024891:	cmp    edi,ebx
10024893:	jbe    0x100247fc
10024899:	push   edi
1002489a:	push   ebx
1002489b:	push   esi
1002489c:	call   0x100191d0
100248a1:	add    esp,0xc
100248a4:	jmp    0x100247fc
100248a9:	push   0x0
100248ab:	push   DWORD PTR [esp+0x14]
100248af:	push   DWORD PTR [esp+0x14]
100248b3:	push   DWORD PTR [esp+0x14]
100248b7:	push   DWORD PTR [esp+0x14]
100248bb:	call   0x1002474a
100248c0:	add    esp,0x14
100248c3:	ret    
100248c4:	push   0x10
100248c6:	push   0x100bb898
100248cb:	call   0x1001a750
100248d0:	mov    eax,DWORD PTR [ebp+0x8]
100248d3:	cmp    eax,0xfffffffe
100248d6:	jne    0x100248eb
100248d8:	call   0x1001cd0e
100248dd:	mov    DWORD PTR [eax],0x9
100248e3:	or     eax,0xffffffff
100248e6:	jmp    0x10024995
100248eb:	xor    ebx,ebx
100248ed:	cmp    eax,ebx
100248ef:	jl     0x100248f9
100248f1:	cmp    eax,DWORD PTR ds:0x100cb064
100248f7:	jb     0x10024913
100248f9:	call   0x1001cd0e
100248fe:	mov    DWORD PTR [eax],0x9
10024904:	push   ebx
10024905:	push   ebx
10024906:	push   ebx
10024907:	push   ebx
10024908:	push   ebx
10024909:	call   0x10018dbf
1002490e:	add    esp,0x14
10024911:	jmp    0x100248e3
10024913:	mov    ecx,eax
10024915:	sar    ecx,0x5
10024918:	lea    edi,[ecx*4+0x100cb080]
1002491f:	mov    esi,eax
10024921:	and    esi,0x1f
10024924:	shl    esi,0x6
10024927:	mov    ecx,DWORD PTR [edi]
10024929:	movzx  ecx,BYTE PTR [esi+ecx*1+0x4]
1002492e:	and    ecx,0x1
10024931:	je     0x100248f9
10024933:	push   eax
10024934:	call   0x100211c8
10024939:	pop    ecx
1002493a:	mov    DWORD PTR [ebp-0x4],ebx
1002493d:	mov    eax,DWORD PTR [edi]
1002493f:	test   BYTE PTR [esi+eax*1+0x4],0x1
10024944:	je     0x10024977
10024946:	push   DWORD PTR [ebp+0x8]
10024949:	call   0x10021157
1002494e:	pop    ecx
1002494f:	push   eax
10024950:	call   DWORD PTR ds:0x1002f120
10024956:	test   eax,eax
10024958:	jne    0x10024965
1002495a:	call   DWORD PTR ds:0x1002f094
10024960:	mov    DWORD PTR [ebp-0x1c],eax
10024963:	jmp    0x10024968
10024965:	mov    DWORD PTR [ebp-0x1c],ebx
10024968:	cmp    DWORD PTR [ebp-0x1c],ebx
1002496b:	je     0x10024986
1002496d:	call   0x1001cd21
10024972:	mov    ecx,DWORD PTR [ebp-0x1c]
10024975:	mov    DWORD PTR [eax],ecx
10024977:	call   0x1001cd0e
1002497c:	mov    DWORD PTR [eax],0x9
10024982:	or     DWORD PTR [ebp-0x1c],0xffffffff
10024986:	mov    DWORD PTR [ebp-0x4],0xfffffffe
1002498d:	call   0x1002499b
10024992:	mov    eax,DWORD PTR [ebp-0x1c]
10024995:	call   0x1001a795
1002499a:	ret    
1002499b:	push   DWORD PTR [ebp+0x8]
1002499e:	call   0x10021268
100249a3:	pop    ecx
100249a4:	ret    
100249a5:	push   ebp
100249a6:	mov    ebp,esp
100249a8:	sub    esp,0x10
100249ab:	mov    eax,ds:0x100c7654
100249b0:	xor    eax,ebp
100249b2:	mov    DWORD PTR [ebp-0x4],eax
100249b5:	push   esi
100249b6:	xor    esi,esi
100249b8:	cmp    DWORD PTR ds:0x100c85e8,esi
100249be:	je     0x10024a0e
100249c0:	cmp    DWORD PTR ds:0x100c8994,0xfffffffe
100249c7:	jne    0x100249ce
100249c9:	call   0x100265d1
100249ce:	mov    eax,ds:0x100c8994
100249d3:	cmp    eax,0xffffffff
100249d6:	jne    0x100249de
100249d8:	or     ax,0xffff
100249dc:	jmp    0x10024a4e
100249de:	push   esi
100249df:	lea    ecx,[ebp-0x10]
100249e2:	push   ecx
100249e3:	push   0x1
100249e5:	lea    ecx,[ebp+0x8]
100249e8:	push   ecx
100249e9:	push   eax
100249ea:	call   DWORD PTR ds:0x1002f0ac
100249f0:	test   eax,eax
100249f2:	jne    0x10024a5b
100249f4:	cmp    DWORD PTR ds:0x100c85e8,0x2
100249fb:	jne    0x100249d8
100249fd:	call   DWORD PTR ds:0x1002f094
10024a03:	cmp    eax,0x78
10024a06:	jne    0x100249d8
10024a08:	mov    DWORD PTR ds:0x100c85e8,esi
10024a0e:	push   esi
10024a0f:	push   esi
10024a10:	push   0x5
10024a12:	lea    eax,[ebp-0xc]
10024a15:	push   eax
10024a16:	push   0x1
10024a18:	lea    eax,[ebp+0x8]
10024a1b:	push   eax
10024a1c:	push   esi
10024a1d:	call   DWORD PTR ds:0x1002f018
10024a23:	push   eax
10024a24:	call   DWORD PTR ds:0x1002f038
10024a2a:	mov    ecx,DWORD PTR ds:0x100c8994
10024a30:	cmp    ecx,0xffffffff
10024a33:	je     0x100249d8
10024a35:	push   esi
10024a36:	lea    edx,[ebp-0x10]
10024a39:	push   edx
10024a3a:	push   eax
10024a3b:	lea    eax,[ebp-0xc]
10024a3e:	push   eax
10024a3f:	push   ecx
10024a40:	call   DWORD PTR ds:0x1002f01c
10024a46:	test   eax,eax
10024a48:	je     0x100249d8
10024a4a:	mov    ax,WORD PTR [ebp+0x8]
10024a4e:	mov    ecx,DWORD PTR [ebp-0x4]
10024a51:	xor    ecx,ebp
10024a53:	pop    esi
10024a54:	call   0x10018773
10024a59:	leave  
10024a5a:	ret    
10024a5b:	mov    DWORD PTR ds:0x100c85e8,0x1
10024a65:	jmp    0x10024a4a
10024a67:	push   ebp
10024a68:	mov    ebp,esp
10024a6a:	sub    esp,0x2c
10024a6d:	mov    eax,DWORD PTR [ebp+0x8]
10024a70:	movzx  ecx,WORD PTR [eax+0xa]
10024a74:	push   ebx
10024a75:	mov    ebx,ecx
10024a77:	and    ecx,0x8000
10024a7d:	mov    DWORD PTR [ebp-0x14],ecx
10024a80:	mov    ecx,DWORD PTR [eax+0x6]
10024a83:	mov    DWORD PTR [ebp-0x20],ecx
10024a86:	mov    ecx,DWORD PTR [eax+0x2]
10024a89:	movzx  eax,WORD PTR [eax]
10024a8c:	and    ebx,0x7fff
10024a92:	sub    ebx,0x3fff
10024a98:	shl    eax,0x10
10024a9b:	cmp    ebx,0xffffc001
10024aa1:	push   edi
10024aa2:	mov    DWORD PTR [ebp-0x1c],ecx
10024aa5:	mov    DWORD PTR [ebp-0x18],eax
10024aa8:	jne    0x10024ad1
10024aaa:	xor    ebx,ebx
10024aac:	xor    eax,eax
10024aae:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
10024ab2:	jne    0x10024ac1
10024ab4:	inc    eax
10024ab5:	cmp    eax,0x3
10024ab8:	jl     0x10024aae
10024aba:	xor    eax,eax
10024abc:	jmp    0x10024f66
10024ac1:	xor    eax,eax
10024ac3:	lea    edi,[ebp-0x20]
10024ac6:	stos   DWORD PTR es:[edi],eax
10024ac7:	stos   DWORD PTR es:[edi],eax
10024ac8:	push   0x2
10024aca:	stos   DWORD PTR es:[edi],eax
10024acb:	pop    eax
10024acc:	jmp    0x10024f66
10024ad1:	and    DWORD PTR [ebp+0x8],0x0
10024ad5:	push   esi
10024ad6:	lea    esi,[ebp-0x20]
10024ad9:	lea    edi,[ebp-0x2c]
10024adc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024adf:	mov    esi,DWORD PTR ds:0x100c85f4
10024ae5:	dec    esi
10024ae6:	lea    ecx,[esi+0x1]
10024ae9:	mov    eax,ecx
10024aeb:	cdq    
10024aec:	and    edx,0x1f
10024aef:	add    eax,edx
10024af1:	sar    eax,0x5
10024af4:	mov    edx,ecx
10024af6:	and    edx,0x8000001f
10024afc:	mov    DWORD PTR [ebp-0x10],ebx
10024aff:	mov    DWORD PTR [ebp-0xc],eax
10024b02:	jns    0x10024b09
10024b04:	dec    edx
10024b05:	or     edx,0xffffffe0
10024b08:	inc    edx
10024b09:	lea    edi,[ebp+eax*4-0x20]
10024b0d:	push   0x1f
10024b0f:	xor    eax,eax
10024b11:	pop    ecx
10024b12:	sub    ecx,edx
10024b14:	inc    eax
10024b15:	shl    eax,cl
10024b17:	mov    DWORD PTR [ebp-0x8],ecx
10024b1a:	test   DWORD PTR [edi],eax
10024b1c:	je     0x10024baf
10024b22:	mov    eax,DWORD PTR [ebp-0xc]
10024b25:	or     edx,0xffffffff
10024b28:	shl    edx,cl
10024b2a:	not    edx
10024b2c:	test   DWORD PTR [ebp+eax*4-0x20],edx
10024b30:	jmp    0x10024b37
10024b32:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10024b37:	jne    0x10024b41
10024b39:	inc    eax
10024b3a:	cmp    eax,0x3
10024b3d:	jl     0x10024b32
10024b3f:	jmp    0x10024baf
10024b41:	mov    eax,esi
10024b43:	cdq    
10024b44:	push   0x1f
10024b46:	pop    ecx
10024b47:	and    edx,ecx
10024b49:	add    eax,edx
10024b4b:	sar    eax,0x5
10024b4e:	and    esi,0x8000001f
10024b54:	jns    0x10024b5b
10024b56:	dec    esi
10024b57:	or     esi,0xffffffe0
10024b5a:	inc    esi
10024b5b:	and    DWORD PTR [ebp-0x4],0x0
10024b5f:	sub    ecx,esi
10024b61:	xor    edx,edx
10024b63:	inc    edx
10024b64:	shl    edx,cl
10024b66:	lea    ecx,[ebp+eax*4-0x20]
10024b6a:	mov    esi,DWORD PTR [ecx]
10024b6c:	add    esi,edx
10024b6e:	mov    DWORD PTR [ebp+0x8],esi
10024b71:	mov    esi,DWORD PTR [ecx]
10024b73:	cmp    DWORD PTR [ebp+0x8],esi
10024b76:	jb     0x10024b9a
10024b78:	cmp    DWORD PTR [ebp+0x8],edx
10024b7b:	jmp    0x10024b98
10024b7d:	test   ecx,ecx
10024b7f:	je     0x10024bac
10024b81:	and    DWORD PTR [ebp-0x4],0x0
10024b85:	lea    ecx,[ebp+eax*4-0x20]
10024b89:	mov    edx,DWORD PTR [ecx]
10024b8b:	lea    esi,[edx+0x1]
10024b8e:	cmp    esi,edx
10024b90:	mov    DWORD PTR [ebp+0x8],esi
10024b93:	jb     0x10024b9a
10024b95:	cmp    esi,0x1
10024b98:	jae    0x10024ba1
10024b9a:	mov    DWORD PTR [ebp-0x4],0x1
10024ba1:	dec    eax
10024ba2:	mov    edx,DWORD PTR [ebp+0x8]
10024ba5:	mov    DWORD PTR [ecx],edx
10024ba7:	mov    ecx,DWORD PTR [ebp-0x4]
10024baa:	jns    0x10024b7d
10024bac:	mov    DWORD PTR [ebp+0x8],ecx
10024baf:	mov    ecx,DWORD PTR [ebp-0x8]
10024bb2:	or     eax,0xffffffff
10024bb5:	shl    eax,cl
10024bb7:	and    DWORD PTR [edi],eax
10024bb9:	mov    eax,DWORD PTR [ebp-0xc]
10024bbc:	inc    eax
10024bbd:	cmp    eax,0x3
10024bc0:	jge    0x10024bcf
10024bc2:	push   0x3
10024bc4:	pop    ecx
10024bc5:	lea    edi,[ebp+eax*4-0x20]
10024bc9:	sub    ecx,eax
10024bcb:	xor    eax,eax
10024bcd:	rep stos DWORD PTR es:[edi],eax
10024bcf:	cmp    DWORD PTR [ebp+0x8],0x0
10024bd3:	je     0x10024bd6
10024bd5:	inc    ebx
10024bd6:	mov    eax,ds:0x100c85f0
10024bdb:	mov    ecx,eax
10024bdd:	sub    ecx,DWORD PTR ds:0x100c85f4
10024be3:	cmp    ebx,ecx
10024be5:	jge    0x10024bf4
10024be7:	xor    eax,eax
10024be9:	lea    edi,[ebp-0x20]
10024bec:	stos   DWORD PTR es:[edi],eax
10024bed:	stos   DWORD PTR es:[edi],eax
10024bee:	stos   DWORD PTR es:[edi],eax
10024bef:	jmp    0x10024e01
10024bf4:	cmp    ebx,eax
10024bf6:	jg     0x10024e0b
10024bfc:	sub    eax,DWORD PTR [ebp-0x10]
10024bff:	lea    esi,[ebp-0x2c]
10024c02:	mov    ecx,eax
10024c04:	lea    edi,[ebp-0x20]
10024c07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024c08:	cdq    
10024c09:	and    edx,0x1f
10024c0c:	add    eax,edx
10024c0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024c0f:	mov    edx,ecx
10024c11:	sar    eax,0x5
10024c14:	and    edx,0x8000001f
10024c1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10024c1b:	jns    0x10024c22
10024c1d:	dec    edx
10024c1e:	or     edx,0xffffffe0
10024c21:	inc    edx
10024c22:	and    DWORD PTR [ebp-0xc],0x0
10024c26:	and    DWORD PTR [ebp+0x8],0x0
10024c2a:	or     edi,0xffffffff
10024c2d:	mov    ecx,edx
10024c2f:	shl    edi,cl
10024c31:	mov    DWORD PTR [ebp-0x4],0x20
10024c38:	sub    DWORD PTR [ebp-0x4],edx
10024c3b:	not    edi
10024c3d:	mov    ebx,DWORD PTR [ebp+0x8]
10024c40:	lea    ebx,[ebp+ebx*4-0x20]
10024c44:	mov    esi,DWORD PTR [ebx]
10024c46:	mov    ecx,esi
10024c48:	and    ecx,edi
10024c4a:	mov    DWORD PTR [ebp-0x10],ecx
10024c4d:	mov    ecx,edx
10024c4f:	shr    esi,cl
10024c51:	mov    ecx,DWORD PTR [ebp-0x4]
10024c54:	or     esi,DWORD PTR [ebp-0xc]
10024c57:	mov    DWORD PTR [ebx],esi
10024c59:	mov    esi,DWORD PTR [ebp-0x10]
10024c5c:	shl    esi,cl
10024c5e:	inc    DWORD PTR [ebp+0x8]
10024c61:	cmp    DWORD PTR [ebp+0x8],0x3
10024c65:	mov    DWORD PTR [ebp-0xc],esi
10024c68:	jl     0x10024c3d
10024c6a:	mov    esi,eax
10024c6c:	push   0x2
10024c6e:	shl    esi,0x2
10024c71:	lea    ecx,[ebp-0x18]
10024c74:	pop    edx
10024c75:	sub    ecx,esi
10024c77:	cmp    edx,eax
10024c79:	jl     0x10024c83
10024c7b:	mov    esi,DWORD PTR [ecx]
10024c7d:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10024c81:	jmp    0x10024c88
10024c83:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10024c88:	dec    edx
10024c89:	sub    ecx,0x4
10024c8c:	test   edx,edx
10024c8e:	jge    0x10024c77
10024c90:	mov    esi,DWORD PTR ds:0x100c85f4
10024c96:	dec    esi
10024c97:	lea    ecx,[esi+0x1]
10024c9a:	mov    eax,ecx
10024c9c:	cdq    
10024c9d:	and    edx,0x1f
10024ca0:	add    eax,edx
10024ca2:	sar    eax,0x5
10024ca5:	mov    edx,ecx
10024ca7:	and    edx,0x8000001f
10024cad:	mov    DWORD PTR [ebp-0xc],eax
10024cb0:	jns    0x10024cb7
10024cb2:	dec    edx
10024cb3:	or     edx,0xffffffe0
10024cb6:	inc    edx
10024cb7:	push   0x1f
10024cb9:	pop    ecx
10024cba:	sub    ecx,edx
10024cbc:	xor    edx,edx
10024cbe:	inc    edx
10024cbf:	shl    edx,cl
10024cc1:	lea    ebx,[ebp+eax*4-0x20]
10024cc5:	mov    DWORD PTR [ebp-0x10],ecx
10024cc8:	test   DWORD PTR [ebx],edx
10024cca:	je     0x10024d52
10024cd0:	or     edx,0xffffffff
10024cd3:	shl    edx,cl
10024cd5:	not    edx
10024cd7:	test   DWORD PTR [ebp+eax*4-0x20],edx
10024cdb:	jmp    0x10024ce2
10024cdd:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10024ce2:	jne    0x10024cec
10024ce4:	inc    eax
10024ce5:	cmp    eax,0x3
10024ce8:	jl     0x10024cdd
10024cea:	jmp    0x10024d52
10024cec:	mov    eax,esi
10024cee:	cdq    
10024cef:	push   0x1f
10024cf1:	pop    ecx
10024cf2:	and    edx,ecx
10024cf4:	add    eax,edx
10024cf6:	sar    eax,0x5
10024cf9:	and    esi,0x8000001f
10024cff:	jns    0x10024d06
10024d01:	dec    esi
10024d02:	or     esi,0xffffffe0
10024d05:	inc    esi
10024d06:	and    DWORD PTR [ebp+0x8],0x0
10024d0a:	xor    edx,edx
10024d0c:	sub    ecx,esi
10024d0e:	inc    edx
10024d0f:	shl    edx,cl
10024d11:	lea    ecx,[ebp+eax*4-0x20]
10024d15:	mov    esi,DWORD PTR [ecx]
10024d17:	lea    edi,[esi+edx*1]
10024d1a:	cmp    edi,esi
10024d1c:	jb     0x10024d22
10024d1e:	cmp    edi,edx
10024d20:	jae    0x10024d29
10024d22:	mov    DWORD PTR [ebp+0x8],0x1
10024d29:	mov    DWORD PTR [ecx],edi
10024d2b:	mov    ecx,DWORD PTR [ebp+0x8]
10024d2e:	jmp    0x10024d4f
10024d30:	test   ecx,ecx
10024d32:	je     0x10024d52
10024d34:	lea    ecx,[ebp+eax*4-0x20]
10024d38:	mov    edx,DWORD PTR [ecx]
10024d3a:	lea    esi,[edx+0x1]
10024d3d:	xor    edi,edi
10024d3f:	cmp    esi,edx
10024d41:	jb     0x10024d48
10024d43:	cmp    esi,0x1
10024d46:	jae    0x10024d4b
10024d48:	xor    edi,edi
10024d4a:	inc    edi
10024d4b:	mov    DWORD PTR [ecx],esi
10024d4d:	mov    ecx,edi
10024d4f:	dec    eax
10024d50:	jns    0x10024d30
10024d52:	mov    ecx,DWORD PTR [ebp-0x10]
10024d55:	or     eax,0xffffffff
10024d58:	shl    eax,cl
10024d5a:	and    DWORD PTR [ebx],eax
10024d5c:	mov    eax,DWORD PTR [ebp-0xc]
10024d5f:	inc    eax
10024d60:	cmp    eax,0x3
10024d63:	jge    0x10024d72
10024d65:	push   0x3
10024d67:	pop    ecx
10024d68:	lea    edi,[ebp+eax*4-0x20]
10024d6c:	sub    ecx,eax
10024d6e:	xor    eax,eax
10024d70:	rep stos DWORD PTR es:[edi],eax
10024d72:	mov    ecx,DWORD PTR ds:0x100c85f8
10024d78:	inc    ecx
10024d79:	mov    eax,ecx
10024d7b:	cdq    
10024d7c:	and    edx,0x1f
10024d7f:	add    eax,edx
10024d81:	mov    edx,ecx
10024d83:	sar    eax,0x5
10024d86:	and    edx,0x8000001f
10024d8c:	jns    0x10024d93
10024d8e:	dec    edx
10024d8f:	or     edx,0xffffffe0
10024d92:	inc    edx
10024d93:	and    DWORD PTR [ebp-0xc],0x0
10024d97:	and    DWORD PTR [ebp+0x8],0x0
10024d9b:	or     edi,0xffffffff
10024d9e:	mov    ecx,edx
10024da0:	shl    edi,cl
10024da2:	mov    DWORD PTR [ebp-0x4],0x20
10024da9:	sub    DWORD PTR [ebp-0x4],edx
10024dac:	not    edi
10024dae:	mov    ebx,DWORD PTR [ebp+0x8]
10024db1:	lea    ebx,[ebp+ebx*4-0x20]
10024db5:	mov    esi,DWORD PTR [ebx]
10024db7:	mov    ecx,esi
10024db9:	and    ecx,edi
10024dbb:	mov    DWORD PTR [ebp-0x10],ecx
10024dbe:	mov    ecx,edx
10024dc0:	shr    esi,cl
10024dc2:	mov    ecx,DWORD PTR [ebp-0x4]
10024dc5:	or     esi,DWORD PTR [ebp-0xc]
10024dc8:	mov    DWORD PTR [ebx],esi
10024dca:	mov    esi,DWORD PTR [ebp-0x10]
10024dcd:	shl    esi,cl
10024dcf:	inc    DWORD PTR [ebp+0x8]
10024dd2:	cmp    DWORD PTR [ebp+0x8],0x3
10024dd6:	mov    DWORD PTR [ebp-0xc],esi
10024dd9:	jl     0x10024dae
10024ddb:	mov    esi,eax
10024ddd:	push   0x2
10024ddf:	shl    esi,0x2
10024de2:	lea    ecx,[ebp-0x18]
10024de5:	pop    edx
10024de6:	sub    ecx,esi
10024de8:	cmp    edx,eax
10024dea:	jl     0x10024df4
10024dec:	mov    esi,DWORD PTR [ecx]
10024dee:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10024df2:	jmp    0x10024df9
10024df4:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10024df9:	dec    edx
10024dfa:	sub    ecx,0x4
10024dfd:	test   edx,edx
10024dff:	jge    0x10024de8
10024e01:	push   0x2
10024e03:	xor    ebx,ebx
10024e05:	pop    eax
10024e06:	jmp    0x10024f65
10024e0b:	cmp    ebx,DWORD PTR ds:0x100c85ec
10024e11:	mov    ecx,DWORD PTR ds:0x100c85f8
10024e17:	jl     0x10024eca
10024e1d:	xor    eax,eax
10024e1f:	lea    edi,[ebp-0x20]
10024e22:	stos   DWORD PTR es:[edi],eax
10024e23:	stos   DWORD PTR es:[edi],eax
10024e24:	stos   DWORD PTR es:[edi],eax
10024e25:	or     DWORD PTR [ebp-0x20],0x80000000
10024e2c:	mov    eax,ecx
10024e2e:	cdq    
10024e2f:	and    edx,0x1f
10024e32:	add    eax,edx
10024e34:	mov    edx,ecx
10024e36:	sar    eax,0x5
10024e39:	and    edx,0x8000001f
10024e3f:	jns    0x10024e46
10024e41:	dec    edx
10024e42:	or     edx,0xffffffe0
10024e45:	inc    edx
10024e46:	and    DWORD PTR [ebp-0xc],0x0
10024e4a:	and    DWORD PTR [ebp+0x8],0x0
10024e4e:	or     edi,0xffffffff
10024e51:	mov    ecx,edx
10024e53:	shl    edi,cl
10024e55:	mov    DWORD PTR [ebp-0x4],0x20
10024e5c:	sub    DWORD PTR [ebp-0x4],edx
10024e5f:	not    edi
10024e61:	mov    ebx,DWORD PTR [ebp+0x8]
10024e64:	lea    ebx,[ebp+ebx*4-0x20]
10024e68:	mov    esi,DWORD PTR [ebx]
10024e6a:	mov    ecx,esi
10024e6c:	and    ecx,edi
10024e6e:	mov    DWORD PTR [ebp-0x10],ecx
10024e71:	mov    ecx,edx
10024e73:	shr    esi,cl
10024e75:	mov    ecx,DWORD PTR [ebp-0x4]
10024e78:	or     esi,DWORD PTR [ebp-0xc]
10024e7b:	mov    DWORD PTR [ebx],esi
10024e7d:	mov    esi,DWORD PTR [ebp-0x10]
10024e80:	shl    esi,cl
10024e82:	inc    DWORD PTR [ebp+0x8]
10024e85:	cmp    DWORD PTR [ebp+0x8],0x3
10024e89:	mov    DWORD PTR [ebp-0xc],esi
10024e8c:	jl     0x10024e61
10024e8e:	mov    esi,eax
10024e90:	push   0x2
10024e92:	shl    esi,0x2
10024e95:	lea    ecx,[ebp-0x18]
10024e98:	pop    edx
10024e99:	sub    ecx,esi
10024e9b:	cmp    edx,eax
10024e9d:	jl     0x10024ea7
10024e9f:	mov    esi,DWORD PTR [ecx]
10024ea1:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10024ea5:	jmp    0x10024eac
10024ea7:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10024eac:	dec    edx
10024ead:	sub    ecx,0x4
10024eb0:	test   edx,edx
10024eb2:	jge    0x10024e9b
10024eb4:	mov    eax,ds:0x100c85ec
10024eb9:	mov    ecx,DWORD PTR ds:0x100c8600
10024ebf:	lea    ebx,[ecx+eax*1]
10024ec2:	xor    eax,eax
10024ec4:	inc    eax
10024ec5:	jmp    0x10024f65
10024eca:	mov    eax,ds:0x100c8600
10024ecf:	and    DWORD PTR [ebp-0x20],0x7fffffff
10024ed6:	add    ebx,eax
10024ed8:	mov    eax,ecx
10024eda:	cdq    
10024edb:	and    edx,0x1f
10024ede:	add    eax,edx
10024ee0:	mov    edx,ecx
10024ee2:	sar    eax,0x5
10024ee5:	and    edx,0x8000001f
10024eeb:	jns    0x10024ef2
10024eed:	dec    edx
10024eee:	or     edx,0xffffffe0
10024ef1:	inc    edx
10024ef2:	and    DWORD PTR [ebp-0xc],0x0
10024ef6:	and    DWORD PTR [ebp+0x8],0x0
10024efa:	or     esi,0xffffffff
10024efd:	mov    ecx,edx
10024eff:	shl    esi,cl
10024f01:	mov    DWORD PTR [ebp-0x4],0x20
10024f08:	sub    DWORD PTR [ebp-0x4],edx
10024f0b:	not    esi
10024f0d:	mov    ecx,DWORD PTR [ebp+0x8]
10024f10:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
10024f14:	mov    ecx,edi
10024f16:	and    ecx,esi
10024f18:	mov    DWORD PTR [ebp-0x10],ecx
10024f1b:	mov    ecx,edx
10024f1d:	shr    edi,cl
10024f1f:	mov    ecx,DWORD PTR [ebp+0x8]
10024f22:	or     edi,DWORD PTR [ebp-0xc]
10024f25:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
10024f29:	mov    edi,DWORD PTR [ebp-0x10]
10024f2c:	mov    ecx,DWORD PTR [ebp-0x4]
10024f2f:	shl    edi,cl
10024f31:	inc    DWORD PTR [ebp+0x8]
10024f34:	cmp    DWORD PTR [ebp+0x8],0x3
10024f38:	mov    DWORD PTR [ebp-0xc],edi
10024f3b:	jl     0x10024f0d
10024f3d:	mov    esi,eax
10024f3f:	push   0x2
10024f41:	shl    esi,0x2
10024f44:	lea    ecx,[ebp-0x18]
10024f47:	pop    edx
10024f48:	sub    ecx,esi
10024f4a:	cmp    edx,eax
10024f4c:	jl     0x10024f56
10024f4e:	mov    esi,DWORD PTR [ecx]
10024f50:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10024f54:	jmp    0x10024f5b
10024f56:	and    DWORD PTR [ebp+edx*4-0x20],0x0
10024f5b:	dec    edx
10024f5c:	sub    ecx,0x4
10024f5f:	test   edx,edx
10024f61:	jge    0x10024f4a
10024f63:	xor    eax,eax
10024f65:	pop    esi
10024f66:	push   0x1f
10024f68:	pop    ecx
10024f69:	sub    ecx,DWORD PTR ds:0x100c85f8
10024f6f:	shl    ebx,cl
10024f71:	mov    ecx,DWORD PTR [ebp-0x14]
10024f74:	neg    ecx
10024f76:	sbb    ecx,ecx
10024f78:	and    ecx,0x80000000
10024f7e:	or     ebx,ecx
10024f80:	mov    ecx,DWORD PTR ds:0x100c85fc
10024f86:	or     ebx,DWORD PTR [ebp-0x20]
10024f89:	cmp    ecx,0x40
10024f8c:	jne    0x10024f9b
10024f8e:	mov    ecx,DWORD PTR [ebp+0xc]
10024f91:	mov    edx,DWORD PTR [ebp-0x1c]
10024f94:	mov    DWORD PTR [ecx+0x4],ebx
10024f97:	mov    DWORD PTR [ecx],edx
10024f99:	jmp    0x10024fa5
10024f9b:	cmp    ecx,0x20
10024f9e:	jne    0x10024fa5
10024fa0:	mov    ecx,DWORD PTR [ebp+0xc]
10024fa3:	mov    DWORD PTR [ecx],ebx
10024fa5:	pop    edi
10024fa6:	pop    ebx
10024fa7:	leave  
10024fa8:	ret    
10024fa9:	push   ebp
10024faa:	mov    ebp,esp
10024fac:	sub    esp,0x2c
10024faf:	mov    eax,DWORD PTR [ebp+0x8]
10024fb2:	movzx  ecx,WORD PTR [eax+0xa]
10024fb6:	push   ebx
10024fb7:	mov    ebx,ecx
10024fb9:	and    ecx,0x8000
10024fbf:	mov    DWORD PTR [ebp-0x14],ecx
10024fc2:	mov    ecx,DWORD PTR [eax+0x6]
10024fc5:	mov    DWORD PTR [ebp-0x20],ecx
10024fc8:	mov    ecx,DWORD PTR [eax+0x2]
10024fcb:	movzx  eax,WORD PTR [eax]
10024fce:	and    ebx,0x7fff
10024fd4:	sub    ebx,0x3fff
10024fda:	shl    eax,0x10
10024fdd:	cmp    ebx,0xffffc001
10024fe3:	push   edi
10024fe4:	mov    DWORD PTR [ebp-0x1c],ecx
10024fe7:	mov    DWORD PTR [ebp-0x18],eax
10024fea:	jne    0x10025013
10024fec:	xor    ebx,ebx
10024fee:	xor    eax,eax
10024ff0:	cmp    DWORD PTR [ebp+eax*4-0x20],ebx
10024ff4:	jne    0x10025003
10024ff6:	inc    eax
10024ff7:	cmp    eax,0x3
10024ffa:	jl     0x10024ff0
10024ffc:	xor    eax,eax
10024ffe:	jmp    0x100254a8
10025003:	xor    eax,eax
10025005:	lea    edi,[ebp-0x20]
10025008:	stos   DWORD PTR es:[edi],eax
10025009:	stos   DWORD PTR es:[edi],eax
1002500a:	push   0x2
1002500c:	stos   DWORD PTR es:[edi],eax
1002500d:	pop    eax
1002500e:	jmp    0x100254a8
10025013:	and    DWORD PTR [ebp+0x8],0x0
10025017:	push   esi
10025018:	lea    esi,[ebp-0x20]
1002501b:	lea    edi,[ebp-0x2c]
1002501e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002501f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10025020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10025021:	mov    esi,DWORD PTR ds:0x100c860c
10025027:	dec    esi
10025028:	lea    ecx,[esi+0x1]
1002502b:	mov    eax,ecx
1002502d:	cdq    
1002502e:	and    edx,0x1f
10025031:	add    eax,edx
10025033:	sar    eax,0x5
10025036:	mov    edx,ecx
10025038:	and    edx,0x8000001f
1002503e:	mov    DWORD PTR [ebp-0x10],ebx
10025041:	mov    DWORD PTR [ebp-0xc],eax
10025044:	jns    0x1002504b
10025046:	dec    edx
10025047:	or     edx,0xffffffe0
1002504a:	inc    edx
1002504b:	lea    edi,[ebp+eax*4-0x20]
1002504f:	push   0x1f
10025051:	xor    eax,eax
10025053:	pop    ecx
10025054:	sub    ecx,edx
10025056:	inc    eax
10025057:	shl    eax,cl
10025059:	mov    DWORD PTR [ebp-0x8],ecx
1002505c:	test   DWORD PTR [edi],eax
1002505e:	je     0x100250f1
10025064:	mov    eax,DWORD PTR [ebp-0xc]
10025067:	or     edx,0xffffffff
1002506a:	shl    edx,cl
1002506c:	not    edx
1002506e:	test   DWORD PTR [ebp+eax*4-0x20],edx
10025072:	jmp    0x10025079
10025074:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10025079:	jne    0x10025083
1002507b:	inc    eax
1002507c:	cmp    eax,0x3
1002507f:	jl     0x10025074
10025081:	jmp    0x100250f1
10025083:	mov    eax,esi
10025085:	cdq    
10025086:	push   0x1f
10025088:	pop    ecx
10025089:	and    edx,ecx
1002508b:	add    eax,edx
1002508d:	sar    eax,0x5
10025090:	and    esi,0x8000001f
10025096:	jns    0x1002509d
10025098:	dec    esi
10025099:	or     esi,0xffffffe0
1002509c:	inc    esi
1002509d:	and    DWORD PTR [ebp-0x4],0x0
100250a1:	sub    ecx,esi
100250a3:	xor    edx,edx
100250a5:	inc    edx
100250a6:	shl    edx,cl
100250a8:	lea    ecx,[ebp+eax*4-0x20]
100250ac:	mov    esi,DWORD PTR [ecx]
100250ae:	add    esi,edx
100250b0:	mov    DWORD PTR [ebp+0x8],esi
100250b3:	mov    esi,DWORD PTR [ecx]
100250b5:	cmp    DWORD PTR [ebp+0x8],esi
100250b8:	jb     0x100250dc
100250ba:	cmp    DWORD PTR [ebp+0x8],edx
100250bd:	jmp    0x100250da
100250bf:	test   ecx,ecx
100250c1:	je     0x100250ee
100250c3:	and    DWORD PTR [ebp-0x4],0x0
100250c7:	lea    ecx,[ebp+eax*4-0x20]
100250cb:	mov    edx,DWORD PTR [ecx]
100250cd:	lea    esi,[edx+0x1]
100250d0:	cmp    esi,edx
100250d2:	mov    DWORD PTR [ebp+0x8],esi
100250d5:	jb     0x100250dc
100250d7:	cmp    esi,0x1
100250da:	jae    0x100250e3
100250dc:	mov    DWORD PTR [ebp-0x4],0x1
100250e3:	dec    eax
100250e4:	mov    edx,DWORD PTR [ebp+0x8]
100250e7:	mov    DWORD PTR [ecx],edx
100250e9:	mov    ecx,DWORD PTR [ebp-0x4]
100250ec:	jns    0x100250bf
100250ee:	mov    DWORD PTR [ebp+0x8],ecx
100250f1:	mov    ecx,DWORD PTR [ebp-0x8]
100250f4:	or     eax,0xffffffff
100250f7:	shl    eax,cl
100250f9:	and    DWORD PTR [edi],eax
100250fb:	mov    eax,DWORD PTR [ebp-0xc]
100250fe:	inc    eax
100250ff:	cmp    eax,0x3
10025102:	jge    0x10025111
10025104:	push   0x3
10025106:	pop    ecx
10025107:	lea    edi,[ebp+eax*4-0x20]
1002510b:	sub    ecx,eax
1002510d:	xor    eax,eax
1002510f:	rep stos DWORD PTR es:[edi],eax
10025111:	cmp    DWORD PTR [ebp+0x8],0x0
10025115:	je     0x10025118
10025117:	inc    ebx
10025118:	mov    eax,ds:0x100c8608
1002511d:	mov    ecx,eax
1002511f:	sub    ecx,DWORD PTR ds:0x100c860c
10025125:	cmp    ebx,ecx
10025127:	jge    0x10025136
10025129:	xor    eax,eax
1002512b:	lea    edi,[ebp-0x20]
1002512e:	stos   DWORD PTR es:[edi],eax
1002512f:	stos   DWORD PTR es:[edi],eax
10025130:	stos   DWORD PTR es:[edi],eax
10025131:	jmp    0x10025343
10025136:	cmp    ebx,eax
10025138:	jg     0x1002534d
1002513e:	sub    eax,DWORD PTR [ebp-0x10]
10025141:	lea    esi,[ebp-0x2c]
10025144:	mov    ecx,eax
10025146:	lea    edi,[ebp-0x20]
10025149:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002514a:	cdq    
1002514b:	and    edx,0x1f
1002514e:	add    eax,edx
10025150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10025151:	mov    edx,ecx
10025153:	sar    eax,0x5
10025156:	and    edx,0x8000001f
1002515c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002515d:	jns    0x10025164
1002515f:	dec    edx
10025160:	or     edx,0xffffffe0
10025163:	inc    edx
10025164:	and    DWORD PTR [ebp-0xc],0x0
10025168:	and    DWORD PTR [ebp+0x8],0x0
1002516c:	or     edi,0xffffffff
1002516f:	mov    ecx,edx
10025171:	shl    edi,cl
10025173:	mov    DWORD PTR [ebp-0x4],0x20
1002517a:	sub    DWORD PTR [ebp-0x4],edx
1002517d:	not    edi
1002517f:	mov    ebx,DWORD PTR [ebp+0x8]
10025182:	lea    ebx,[ebp+ebx*4-0x20]
10025186:	mov    esi,DWORD PTR [ebx]
10025188:	mov    ecx,esi
1002518a:	and    ecx,edi
1002518c:	mov    DWORD PTR [ebp-0x10],ecx
1002518f:	mov    ecx,edx
10025191:	shr    esi,cl
10025193:	mov    ecx,DWORD PTR [ebp-0x4]
10025196:	or     esi,DWORD PTR [ebp-0xc]
10025199:	mov    DWORD PTR [ebx],esi
1002519b:	mov    esi,DWORD PTR [ebp-0x10]
1002519e:	shl    esi,cl
100251a0:	inc    DWORD PTR [ebp+0x8]
100251a3:	cmp    DWORD PTR [ebp+0x8],0x3
100251a7:	mov    DWORD PTR [ebp-0xc],esi
100251aa:	jl     0x1002517f
100251ac:	mov    esi,eax
100251ae:	push   0x2
100251b0:	shl    esi,0x2
100251b3:	lea    ecx,[ebp-0x18]
100251b6:	pop    edx
100251b7:	sub    ecx,esi
100251b9:	cmp    edx,eax
100251bb:	jl     0x100251c5
100251bd:	mov    esi,DWORD PTR [ecx]
100251bf:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100251c3:	jmp    0x100251ca
100251c5:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100251ca:	dec    edx
100251cb:	sub    ecx,0x4
100251ce:	test   edx,edx
100251d0:	jge    0x100251b9
100251d2:	mov    esi,DWORD PTR ds:0x100c860c
100251d8:	dec    esi
100251d9:	lea    ecx,[esi+0x1]
100251dc:	mov    eax,ecx
100251de:	cdq    
100251df:	and    edx,0x1f
100251e2:	add    eax,edx
100251e4:	sar    eax,0x5
100251e7:	mov    edx,ecx
100251e9:	and    edx,0x8000001f
100251ef:	mov    DWORD PTR [ebp-0xc],eax
100251f2:	jns    0x100251f9
100251f4:	dec    edx
100251f5:	or     edx,0xffffffe0
100251f8:	inc    edx
100251f9:	push   0x1f
100251fb:	pop    ecx
100251fc:	sub    ecx,edx
100251fe:	xor    edx,edx
10025200:	inc    edx
10025201:	shl    edx,cl
10025203:	lea    ebx,[ebp+eax*4-0x20]
10025207:	mov    DWORD PTR [ebp-0x10],ecx
1002520a:	test   DWORD PTR [ebx],edx
1002520c:	je     0x10025294
10025212:	or     edx,0xffffffff
10025215:	shl    edx,cl
10025217:	not    edx
10025219:	test   DWORD PTR [ebp+eax*4-0x20],edx
1002521d:	jmp    0x10025224
1002521f:	cmp    DWORD PTR [ebp+eax*4-0x20],0x0
10025224:	jne    0x1002522e
10025226:	inc    eax
10025227:	cmp    eax,0x3
1002522a:	jl     0x1002521f
1002522c:	jmp    0x10025294
1002522e:	mov    eax,esi
10025230:	cdq    
10025231:	push   0x1f
10025233:	pop    ecx
10025234:	and    edx,ecx
10025236:	add    eax,edx
10025238:	sar    eax,0x5
1002523b:	and    esi,0x8000001f
10025241:	jns    0x10025248
10025243:	dec    esi
10025244:	or     esi,0xffffffe0
10025247:	inc    esi
10025248:	and    DWORD PTR [ebp+0x8],0x0
1002524c:	xor    edx,edx
1002524e:	sub    ecx,esi
10025250:	inc    edx
10025251:	shl    edx,cl
10025253:	lea    ecx,[ebp+eax*4-0x20]
10025257:	mov    esi,DWORD PTR [ecx]
10025259:	lea    edi,[esi+edx*1]
1002525c:	cmp    edi,esi
1002525e:	jb     0x10025264
10025260:	cmp    edi,edx
10025262:	jae    0x1002526b
10025264:	mov    DWORD PTR [ebp+0x8],0x1
1002526b:	mov    DWORD PTR [ecx],edi
1002526d:	mov    ecx,DWORD PTR [ebp+0x8]
10025270:	jmp    0x10025291
10025272:	test   ecx,ecx
10025274:	je     0x10025294
10025276:	lea    ecx,[ebp+eax*4-0x20]
1002527a:	mov    edx,DWORD PTR [ecx]
1002527c:	lea    esi,[edx+0x1]
1002527f:	xor    edi,edi
10025281:	cmp    esi,edx
10025283:	jb     0x1002528a
10025285:	cmp    esi,0x1
10025288:	jae    0x1002528d
1002528a:	xor    edi,edi
1002528c:	inc    edi
1002528d:	mov    DWORD PTR [ecx],esi
1002528f:	mov    ecx,edi
10025291:	dec    eax
10025292:	jns    0x10025272
10025294:	mov    ecx,DWORD PTR [ebp-0x10]
10025297:	or     eax,0xffffffff
1002529a:	shl    eax,cl
1002529c:	and    DWORD PTR [ebx],eax
1002529e:	mov    eax,DWORD PTR [ebp-0xc]
100252a1:	inc    eax
100252a2:	cmp    eax,0x3
100252a5:	jge    0x100252b4
100252a7:	push   0x3
100252a9:	pop    ecx
100252aa:	lea    edi,[ebp+eax*4-0x20]
100252ae:	sub    ecx,eax
100252b0:	xor    eax,eax
100252b2:	rep stos DWORD PTR es:[edi],eax
100252b4:	mov    ecx,DWORD PTR ds:0x100c8610
100252ba:	inc    ecx
100252bb:	mov    eax,ecx
100252bd:	cdq    
100252be:	and    edx,0x1f
100252c1:	add    eax,edx
100252c3:	mov    edx,ecx
100252c5:	sar    eax,0x5
100252c8:	and    edx,0x8000001f
100252ce:	jns    0x100252d5
100252d0:	dec    edx
100252d1:	or     edx,0xffffffe0
100252d4:	inc    edx
100252d5:	and    DWORD PTR [ebp-0xc],0x0
100252d9:	and    DWORD PTR [ebp+0x8],0x0
100252dd:	or     edi,0xffffffff
100252e0:	mov    ecx,edx
100252e2:	shl    edi,cl
100252e4:	mov    DWORD PTR [ebp-0x4],0x20
100252eb:	sub    DWORD PTR [ebp-0x4],edx
100252ee:	not    edi
100252f0:	mov    ebx,DWORD PTR [ebp+0x8]
100252f3:	lea    ebx,[ebp+ebx*4-0x20]
100252f7:	mov    esi,DWORD PTR [ebx]
100252f9:	mov    ecx,esi
100252fb:	and    ecx,edi
100252fd:	mov    DWORD PTR [ebp-0x10],ecx
10025300:	mov    ecx,edx
10025302:	shr    esi,cl
10025304:	mov    ecx,DWORD PTR [ebp-0x4]
10025307:	or     esi,DWORD PTR [ebp-0xc]
1002530a:	mov    DWORD PTR [ebx],esi
1002530c:	mov    esi,DWORD PTR [ebp-0x10]
1002530f:	shl    esi,cl
10025311:	inc    DWORD PTR [ebp+0x8]
10025314:	cmp    DWORD PTR [ebp+0x8],0x3
10025318:	mov    DWORD PTR [ebp-0xc],esi
1002531b:	jl     0x100252f0
1002531d:	mov    esi,eax
1002531f:	push   0x2
10025321:	shl    esi,0x2
10025324:	lea    ecx,[ebp-0x18]
10025327:	pop    edx
10025328:	sub    ecx,esi
1002532a:	cmp    edx,eax
1002532c:	jl     0x10025336
1002532e:	mov    esi,DWORD PTR [ecx]
10025330:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10025334:	jmp    0x1002533b
10025336:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1002533b:	dec    edx
1002533c:	sub    ecx,0x4
1002533f:	test   edx,edx
10025341:	jge    0x1002532a
10025343:	push   0x2
10025345:	xor    ebx,ebx
10025347:	pop    eax
10025348:	jmp    0x100254a7
1002534d:	cmp    ebx,DWORD PTR ds:0x100c8604
10025353:	mov    ecx,DWORD PTR ds:0x100c8610
10025359:	jl     0x1002540c
1002535f:	xor    eax,eax
10025361:	lea    edi,[ebp-0x20]
10025364:	stos   DWORD PTR es:[edi],eax
10025365:	stos   DWORD PTR es:[edi],eax
10025366:	stos   DWORD PTR es:[edi],eax
10025367:	or     DWORD PTR [ebp-0x20],0x80000000
1002536e:	mov    eax,ecx
10025370:	cdq    
10025371:	and    edx,0x1f
10025374:	add    eax,edx
10025376:	mov    edx,ecx
10025378:	sar    eax,0x5
1002537b:	and    edx,0x8000001f
10025381:	jns    0x10025388
10025383:	dec    edx
10025384:	or     edx,0xffffffe0
10025387:	inc    edx
10025388:	and    DWORD PTR [ebp-0xc],0x0
1002538c:	and    DWORD PTR [ebp+0x8],0x0
10025390:	or     edi,0xffffffff
10025393:	mov    ecx,edx
10025395:	shl    edi,cl
10025397:	mov    DWORD PTR [ebp-0x4],0x20
1002539e:	sub    DWORD PTR [ebp-0x4],edx
100253a1:	not    edi
100253a3:	mov    ebx,DWORD PTR [ebp+0x8]
100253a6:	lea    ebx,[ebp+ebx*4-0x20]
100253aa:	mov    esi,DWORD PTR [ebx]
100253ac:	mov    ecx,esi
100253ae:	and    ecx,edi
100253b0:	mov    DWORD PTR [ebp-0x10],ecx
100253b3:	mov    ecx,edx
100253b5:	shr    esi,cl
100253b7:	mov    ecx,DWORD PTR [ebp-0x4]
100253ba:	or     esi,DWORD PTR [ebp-0xc]
100253bd:	mov    DWORD PTR [ebx],esi
100253bf:	mov    esi,DWORD PTR [ebp-0x10]
100253c2:	shl    esi,cl
100253c4:	inc    DWORD PTR [ebp+0x8]
100253c7:	cmp    DWORD PTR [ebp+0x8],0x3
100253cb:	mov    DWORD PTR [ebp-0xc],esi
100253ce:	jl     0x100253a3
100253d0:	mov    esi,eax
100253d2:	push   0x2
100253d4:	shl    esi,0x2
100253d7:	lea    ecx,[ebp-0x18]
100253da:	pop    edx
100253db:	sub    ecx,esi
100253dd:	cmp    edx,eax
100253df:	jl     0x100253e9
100253e1:	mov    esi,DWORD PTR [ecx]
100253e3:	mov    DWORD PTR [ebp+edx*4-0x20],esi
100253e7:	jmp    0x100253ee
100253e9:	and    DWORD PTR [ebp+edx*4-0x20],0x0
100253ee:	dec    edx
100253ef:	sub    ecx,0x4
100253f2:	test   edx,edx
100253f4:	jge    0x100253dd
100253f6:	mov    eax,ds:0x100c8604
100253fb:	mov    ecx,DWORD PTR ds:0x100c8618
10025401:	lea    ebx,[ecx+eax*1]
10025404:	xor    eax,eax
10025406:	inc    eax
10025407:	jmp    0x100254a7
1002540c:	mov    eax,ds:0x100c8618
10025411:	and    DWORD PTR [ebp-0x20],0x7fffffff
10025418:	add    ebx,eax
1002541a:	mov    eax,ecx
1002541c:	cdq    
1002541d:	and    edx,0x1f
10025420:	add    eax,edx
10025422:	mov    edx,ecx
10025424:	sar    eax,0x5
10025427:	and    edx,0x8000001f
1002542d:	jns    0x10025434
1002542f:	dec    edx
10025430:	or     edx,0xffffffe0
10025433:	inc    edx
10025434:	and    DWORD PTR [ebp-0xc],0x0
10025438:	and    DWORD PTR [ebp+0x8],0x0
1002543c:	or     esi,0xffffffff
1002543f:	mov    ecx,edx
10025441:	shl    esi,cl
10025443:	mov    DWORD PTR [ebp-0x4],0x20
1002544a:	sub    DWORD PTR [ebp-0x4],edx
1002544d:	not    esi
1002544f:	mov    ecx,DWORD PTR [ebp+0x8]
10025452:	mov    edi,DWORD PTR [ebp+ecx*4-0x20]
10025456:	mov    ecx,edi
10025458:	and    ecx,esi
1002545a:	mov    DWORD PTR [ebp-0x10],ecx
1002545d:	mov    ecx,edx
1002545f:	shr    edi,cl
10025461:	mov    ecx,DWORD PTR [ebp+0x8]
10025464:	or     edi,DWORD PTR [ebp-0xc]
10025467:	mov    DWORD PTR [ebp+ecx*4-0x20],edi
1002546b:	mov    edi,DWORD PTR [ebp-0x10]
1002546e:	mov    ecx,DWORD PTR [ebp-0x4]
10025471:	shl    edi,cl
10025473:	inc    DWORD PTR [ebp+0x8]
10025476:	cmp    DWORD PTR [ebp+0x8],0x3
1002547a:	mov    DWORD PTR [ebp-0xc],edi
1002547d:	jl     0x1002544f
1002547f:	mov    esi,eax
10025481:	push   0x2
10025483:	shl    esi,0x2
10025486:	lea    ecx,[ebp-0x18]
10025489:	pop    edx
1002548a:	sub    ecx,esi
1002548c:	cmp    edx,eax
1002548e:	jl     0x10025498
10025490:	mov    esi,DWORD PTR [ecx]
10025492:	mov    DWORD PTR [ebp+edx*4-0x20],esi
10025496:	jmp    0x1002549d
10025498:	and    DWORD PTR [ebp+edx*4-0x20],0x0
1002549d:	dec    edx
1002549e:	sub    ecx,0x4
100254a1:	test   edx,edx
100254a3:	jge    0x1002548c
100254a5:	xor    eax,eax
100254a7:	pop    esi
100254a8:	push   0x1f
100254aa:	pop    ecx
100254ab:	sub    ecx,DWORD PTR ds:0x100c8610
100254b1:	shl    ebx,cl
100254b3:	mov    ecx,DWORD PTR [ebp-0x14]
100254b6:	neg    ecx
100254b8:	sbb    ecx,ecx
100254ba:	and    ecx,0x80000000
100254c0:	or     ebx,ecx
100254c2:	mov    ecx,DWORD PTR ds:0x100c8614
100254c8:	or     ebx,DWORD PTR [ebp-0x20]
100254cb:	cmp    ecx,0x40
100254ce:	jne    0x100254dd
100254d0:	mov    ecx,DWORD PTR [ebp+0xc]
100254d3:	mov    edx,DWORD PTR [ebp-0x1c]
100254d6:	mov    DWORD PTR [ecx+0x4],ebx
100254d9:	mov    DWORD PTR [ecx],edx
100254db:	jmp    0x100254e7
100254dd:	cmp    ecx,0x20
100254e0:	jne    0x100254e7
100254e2:	mov    ecx,DWORD PTR [ebp+0xc]
100254e5:	mov    DWORD PTR [ecx],ebx
100254e7:	pop    edi
100254e8:	pop    ebx
100254e9:	leave  
100254ea:	ret    
100254eb:	push   ebp
100254ec:	mov    ebp,esp
100254ee:	sub    esp,0x10
100254f1:	push   esi
100254f2:	push   DWORD PTR [ebp+0xc]
100254f5:	lea    ecx,[ebp-0x10]
100254f8:	call   0x1001924a
100254fd:	mov    esi,DWORD PTR [ebp+0x8]
10025500:	movsx  eax,BYTE PTR [esi]
10025503:	push   eax
10025504:	call   0x1001a270
10025509:	cmp    eax,0x65
1002550c:	jmp    0x1002551a
1002550e:	inc    esi
1002550f:	movzx  eax,BYTE PTR [esi]
10025512:	push   eax
10025513:	call   0x1001a515
10025518:	test   eax,eax
1002551a:	pop    ecx
1002551b:	jne    0x1002550e
1002551d:	movsx  eax,BYTE PTR [esi]
10025520:	push   eax
10025521:	call   0x1001a270
10025526:	cmp    eax,0x78
10025529:	pop    ecx
1002552a:	jne    0x1002552e
1002552c:	inc    esi
1002552d:	inc    esi
1002552e:	mov    ecx,DWORD PTR [ebp-0x10]
10025531:	mov    ecx,DWORD PTR [ecx+0xbc]
10025537:	mov    ecx,DWORD PTR [ecx]
10025539:	mov    al,BYTE PTR [esi]
1002553b:	mov    cl,BYTE PTR [ecx]
1002553d:	mov    BYTE PTR [esi],cl
1002553f:	inc    esi
10025540:	mov    cl,BYTE PTR [esi]
10025542:	mov    BYTE PTR [esi],al
10025544:	mov    al,cl
10025546:	mov    cl,BYTE PTR [esi]
10025548:	inc    esi
10025549:	test   cl,cl
1002554b:	jne    0x10025540
1002554d:	cmp    BYTE PTR [ebp-0x4],cl
10025550:	pop    esi
10025551:	je     0x1002555a
10025553:	mov    eax,DWORD PTR [ebp-0x8]
10025556:	and    DWORD PTR [eax+0x70],0xfffffffd
1002555a:	leave  
1002555b:	ret    
1002555c:	push   ebp
1002555d:	mov    ebp,esp
1002555f:	sub    esp,0x10
10025562:	push   esi
10025563:	push   DWORD PTR [ebp+0xc]
10025566:	lea    ecx,[ebp-0x10]
10025569:	call   0x1001924a
1002556e:	mov    eax,DWORD PTR [ebp+0x8]
10025571:	mov    cl,BYTE PTR [eax]
10025573:	test   cl,cl
10025575:	mov    esi,DWORD PTR [ebp-0x10]
10025578:	je     0x1002558f
1002557a:	mov    edx,DWORD PTR [esi+0xbc]
10025580:	mov    edx,DWORD PTR [edx]
10025582:	mov    dl,BYTE PTR [edx]
10025584:	cmp    cl,dl
10025586:	je     0x1002558f
10025588:	inc    eax
10025589:	mov    cl,BYTE PTR [eax]
1002558b:	test   cl,cl
1002558d:	jne    0x10025584
1002558f:	mov    cl,BYTE PTR [eax]
10025591:	inc    eax
10025592:	test   cl,cl
10025594:	je     0x100255cc
10025596:	jmp    0x100255a3
10025598:	cmp    cl,0x65
1002559b:	je     0x100255a9
1002559d:	cmp    cl,0x45
100255a0:	je     0x100255a9
100255a2:	inc    eax
100255a3:	mov    cl,BYTE PTR [eax]
100255a5:	test   cl,cl
100255a7:	jne    0x10025598
100255a9:	mov    edx,eax
100255ab:	dec    eax
100255ac:	cmp    BYTE PTR [eax],0x30
100255af:	je     0x100255ab
100255b1:	mov    ecx,DWORD PTR [esi+0xbc]
100255b7:	mov    ecx,DWORD PTR [ecx]
100255b9:	push   ebx
100255ba:	mov    bl,BYTE PTR [eax]
100255bc:	cmp    bl,BYTE PTR [ecx]
100255be:	pop    ebx
100255bf:	jne    0x100255c2
100255c1:	dec    eax
100255c2:	mov    cl,BYTE PTR [edx]
100255c4:	inc    eax
100255c5:	inc    edx
100255c6:	test   cl,cl
100255c8:	mov    BYTE PTR [eax],cl
100255ca:	jne    0x100255c2
100255cc:	cmp    BYTE PTR [ebp-0x4],0x0
100255d0:	pop    esi
100255d1:	je     0x100255da
100255d3:	mov    eax,DWORD PTR [ebp-0x8]
100255d6:	and    DWORD PTR [eax+0x70],0xfffffffd
100255da:	leave  
100255db:	ret    
100255dc:	fldz   
100255de:	mov    eax,DWORD PTR [esp+0x4]
100255e2:	fcomp  QWORD PTR [eax]
100255e4:	fnstsw ax
100255e6:	test   ah,0x41
100255e9:	jp     0x100255ef
100255eb:	xor    eax,eax
100255ed:	inc    eax
100255ee:	ret    
100255ef:	xor    eax,eax
100255f1:	ret    
100255f2:	push   ebp
100255f3:	mov    ebp,esp
100255f5:	push   ecx
100255f6:	push   ecx
100255f7:	cmp    DWORD PTR [ebp+0x8],0x0
100255fb:	push   DWORD PTR [ebp+0x14]
100255fe:	push   DWORD PTR [ebp+0x10]
10025601:	je     0x1002561c
10025603:	lea    eax,[ebp-0x8]
10025606:	push   eax
10025607:	call   0x1002661d
1002560c:	mov    ecx,DWORD PTR [ebp-0x8]
1002560f:	mov    eax,DWORD PTR [ebp+0xc]
10025612:	mov    DWORD PTR [eax],ecx
10025614:	mov    ecx,DWORD PTR [ebp-0x4]
10025617:	mov    DWORD PTR [eax+0x4],ecx
1002561a:	jmp    0x1002562d
1002561c:	lea    eax,[ebp+0x8]
1002561f:	push   eax
10025620:	call   0x100266c3
10025625:	mov    eax,DWORD PTR [ebp+0xc]
10025628:	mov    ecx,DWORD PTR [ebp+0x8]
1002562b:	mov    DWORD PTR [eax],ecx
1002562d:	add    esp,0xc
10025630:	leave  
10025631:	ret    
10025632:	push   0x0
10025634:	push   DWORD PTR [esp+0x10]
10025638:	push   DWORD PTR [esp+0x10]
1002563c:	push   DWORD PTR [esp+0x10]
10025640:	call   0x100255f2
10025645:	add    esp,0x10
10025648:	ret    
10025649:	test   edi,edi
1002564b:	push   esi
1002564c:	mov    esi,eax
1002564e:	je     0x10025664
10025650:	push   esi
10025651:	call   0x10019010
10025656:	inc    eax
10025657:	push   eax
10025658:	push   esi
10025659:	add    esi,edi
1002565b:	push   esi
1002565c:	call   0x1001cef0
10025661:	add    esp,0x10
10025664:	pop    esi
10025665:	ret    
10025666:	push   0x0
10025668:	push   DWORD PTR [esp+0x8]
1002566c:	call   0x100254eb
10025671:	pop    ecx
10025672:	pop    ecx
10025673:	ret    
10025674:	push   0x0
10025676:	push   DWORD PTR [esp+0x8]
1002567a:	call   0x1002555c
1002567f:	pop    ecx
10025680:	pop    ecx
10025681:	ret    
10025682:	push   ebp
10025683:	mov    ebp,esp
10025685:	sub    esp,0x10
10025688:	push   ebx
10025689:	push   esi
1002568a:	push   edi
1002568b:	push   DWORD PTR [ebp+0x1c]
1002568e:	lea    ecx,[ebp-0x10]
10025691:	mov    ebx,eax
10025693:	call   0x1001924a
10025698:	xor    esi,esi
1002569a:	cmp    ebx,esi
1002569c:	jne    0x100256c9
1002569e:	call   0x1001cd0e
100256a3:	push   0x16
100256a5:	pop    edi
100256a6:	push   esi
100256a7:	push   esi
100256a8:	push   esi
100256a9:	push   esi
100256aa:	push   esi
100256ab:	mov    DWORD PTR [eax],edi
100256ad:	call   0x10018dbf
100256b2:	add    esp,0x14
100256b5:	cmp    BYTE PTR [ebp-0x4],0x0
100256b9:	je     0x100256c2
100256bb:	mov    eax,DWORD PTR [ebp-0x8]
100256be:	and    DWORD PTR [eax+0x70],0xfffffffd
100256c2:	mov    eax,edi
100256c4:	jmp    0x100257ea
100256c9:	cmp    DWORD PTR [ebp+0x8],esi
100256cc:	jbe    0x1002569e
100256ce:	cmp    DWORD PTR [ebp+0xc],esi
100256d1:	jle    0x100256d8
100256d3:	mov    eax,DWORD PTR [ebp+0xc]
100256d6:	jmp    0x100256da
100256d8:	xor    eax,eax
100256da:	add    eax,0x9
100256dd:	cmp    DWORD PTR [ebp+0x8],eax
100256e0:	ja     0x100256eb
100256e2:	call   0x1001cd0e
100256e7:	push   0x22
100256e9:	jmp    0x100256a5
100256eb:	cmp    BYTE PTR [ebp+0x18],0x0
100256ef:	je     0x1002570f
100256f1:	mov    edx,DWORD PTR [ebp+0x14]
100256f4:	xor    eax,eax
100256f6:	cmp    DWORD PTR [ebp+0xc],esi
100256f9:	setg   al
100256fc:	xor    ecx,ecx
100256fe:	cmp    DWORD PTR [edx],0x2d
10025701:	sete   cl
10025704:	mov    edi,eax
10025706:	add    ecx,ebx
10025708:	mov    eax,ecx
1002570a:	call   0x10025649
1002570f:	mov    edi,DWORD PTR [ebp+0x14]
10025712:	cmp    DWORD PTR [edi],0x2d
10025715:	mov    esi,ebx
10025717:	jne    0x1002571f
10025719:	mov    BYTE PTR [ebx],0x2d
1002571c:	lea    esi,[ebx+0x1]
1002571f:	cmp    DWORD PTR [ebp+0xc],0x0
10025723:	jle    0x1002573d
10025725:	lea    eax,[esi+0x1]
10025728:	mov    cl,BYTE PTR [eax]
1002572a:	mov    BYTE PTR [esi],cl
1002572c:	mov    esi,eax
1002572e:	mov    eax,DWORD PTR [ebp-0x10]
10025731:	mov    eax,DWORD PTR [eax+0xbc]
10025737:	mov    eax,DWORD PTR [eax]
10025739:	mov    al,BYTE PTR [eax]
1002573b:	mov    BYTE PTR [esi],al
1002573d:	xor    eax,eax
1002573f:	cmp    BYTE PTR [ebp+0x18],al
10025742:	sete   al
10025745:	add    eax,DWORD PTR [ebp+0xc]
10025748:	add    esi,eax
1002574a:	cmp    DWORD PTR [ebp+0x8],0xffffffff
1002574e:	jne    0x10025755
10025750:	or     ebx,0xffffffff
10025753:	jmp    0x1002575a
10025755:	sub    ebx,esi
10025757:	add    ebx,DWORD PTR [ebp+0x8]
1002575a:	push   0x100b4008
1002575f:	push   ebx
10025760:	push   esi
10025761:	call   0x1001ce58
10025766:	add    esp,0xc
10025769:	xor    ebx,ebx
1002576b:	test   eax,eax
1002576d:	je     0x1002577c
1002576f:	push   ebx
10025770:	push   ebx
10025771:	push   ebx
10025772:	push   ebx
10025773:	push   ebx
10025774:	call   0x10018cc3
10025779:	add    esp,0x14
1002577c:	cmp    DWORD PTR [ebp+0x10],ebx
1002577f:	lea    ecx,[esi+0x2]
10025782:	je     0x10025787
10025784:	mov    BYTE PTR [esi],0x45
10025787:	mov    eax,DWORD PTR [edi+0xc]
1002578a:	inc    esi
1002578b:	cmp    BYTE PTR [eax],0x30
1002578e:	je     0x100257be
10025790:	mov    eax,DWORD PTR [edi+0x4]
10025793:	dec    eax
10025794:	jns    0x1002579b
10025796:	neg    eax
10025798:	mov    BYTE PTR [esi],0x2d
1002579b:	inc    esi
1002579c:	cmp    eax,0x64
1002579f:	jl     0x100257ab
100257a1:	cdq    
100257a2:	push   0x64
100257a4:	pop    edi
100257a5:	idiv   edi
100257a7:	add    BYTE PTR [esi],al
100257a9:	mov    eax,edx
100257ab:	inc    esi
100257ac:	cmp    eax,0xa
100257af:	jl     0x100257bb
100257b1:	cdq    
100257b2:	push   0xa
100257b4:	pop    edi
100257b5:	idiv   edi
100257b7:	add    BYTE PTR [esi],al
100257b9:	mov    eax,edx
100257bb:	add    BYTE PTR [esi+0x1],al
100257be:	test   BYTE PTR ds:0x100c9d14,0x1
100257c5:	je     0x100257db
100257c7:	cmp    BYTE PTR [ecx],0x30
100257ca:	jne    0x100257db
100257cc:	push   0x3
100257ce:	lea    eax,[ecx+0x1]
100257d1:	push   eax
100257d2:	push   ecx
100257d3:	call   0x1001cef0
100257d8:	add    esp,0xc
100257db:	cmp    BYTE PTR [ebp-0x4],0x0
100257df:	je     0x100257e8
100257e1:	mov    eax,DWORD PTR [ebp-0x8]
100257e4:	and    DWORD PTR [eax+0x70],0xfffffffd
100257e8:	xor    eax,eax
100257ea:	pop    edi
100257eb:	pop    esi
100257ec:	pop    ebx
100257ed:	leave  
100257ee:	ret    
100257ef:	push   ebp
100257f0:	mov    ebp,esp
100257f2:	sub    esp,0x2c
100257f5:	mov    eax,ds:0x100c7654
100257fa:	xor    eax,ebp
100257fc:	mov    DWORD PTR [ebp-0x4],eax
100257ff:	mov    eax,DWORD PTR [ebp+0x8]
10025802:	push   ebx
10025803:	push   esi
10025804:	push   edi
10025805:	mov    edi,DWORD PTR [ebp+0xc]
10025808:	push   0x16
1002580a:	pop    esi
1002580b:	push   esi
1002580c:	lea    ecx,[ebp-0x1c]
1002580f:	push   ecx
10025810:	lea    ecx,[ebp-0x2c]
10025813:	push   ecx
10025814:	push   DWORD PTR [eax+0x4]
10025817:	push   DWORD PTR [eax]
10025819:	call   0x100268e1
1002581e:	xor    ebx,ebx
10025820:	add    esp,0x14
10025823:	cmp    edi,ebx
10025825:	jne    0x1002583f
10025827:	call   0x1001cd0e
1002582c:	push   ebx
1002582d:	push   ebx
1002582e:	push   ebx
1002582f:	push   ebx
10025830:	push   ebx
10025831:	mov    DWORD PTR [eax],esi
10025833:	call   0x10018dbf
10025838:	add    esp,0x14
1002583b:	mov    eax,esi
1002583d:	jmp    0x100258ae
1002583f:	mov    eax,DWORD PTR [ebp+0x10]
10025842:	cmp    eax,ebx
10025844:	jbe    0x10025827
10025846:	cmp    eax,0xffffffff
10025849:	mov    esi,DWORD PTR [ebp+0x14]
1002584c:	jne    0x10025853
1002584e:	or     eax,0xffffffff
10025851:	jmp    0x10025867
10025853:	xor    ecx,ecx
10025855:	cmp    DWORD PTR [ebp-0x2c],0x2d
10025859:	sete   cl
1002585c:	sub    eax,ecx
1002585e:	xor    ecx,ecx
10025860:	cmp    esi,ebx
10025862:	setg   cl
10025865:	sub    eax,ecx
10025867:	lea    ecx,[ebp-0x2c]
1002586a:	push   ecx
1002586b:	lea    ecx,[esi+0x1]
1002586e:	push   ecx
1002586f:	push   eax
10025870:	xor    eax,eax
10025872:	cmp    DWORD PTR [ebp-0x2c],0x2d
10025876:	sete   al
10025879:	xor    ecx,ecx
1002587b:	cmp    esi,ebx
1002587d:	setg   cl
10025880:	add    eax,edi
10025882:	add    ecx,eax
10025884:	push   ecx
10025885:	call   0x10026769
1002588a:	add    esp,0x10
1002588d:	cmp    eax,ebx
1002588f:	je     0x10025895
10025891:	mov    BYTE PTR [edi],bl
10025893:	jmp    0x100258ae
10025895:	push   DWORD PTR [ebp+0x1c]
10025898:	lea    eax,[ebp-0x2c]
1002589b:	push   ebx
1002589c:	push   eax
1002589d:	push   DWORD PTR [ebp+0x18]
100258a0:	mov    eax,edi
100258a2:	push   esi
100258a3:	push   DWORD PTR [ebp+0x10]
100258a6:	call   0x10025682
100258ab:	add    esp,0x18
100258ae:	mov    ecx,DWORD PTR [ebp-0x4]
100258b1:	pop    edi
100258b2:	pop    esi
100258b3:	xor    ecx,ebp
100258b5:	pop    ebx
100258b6:	call   0x10018773
100258bb:	leave  
100258bc:	ret    
100258bd:	push   ebp
100258be:	mov    ebp,esp
100258c0:	push   0x0
100258c2:	push   DWORD PTR [ebp+0x18]
100258c5:	push   DWORD PTR [ebp+0x14]
100258c8:	push   DWORD PTR [ebp+0x10]
100258cb:	push   DWORD PTR [ebp+0xc]
100258ce:	push   DWORD PTR [ebp+0x8]
100258d1:	call   0x100257ef
100258d6:	add    esp,0x18
100258d9:	pop    ebp
100258da:	ret    
100258db:	push   ebp
100258dc:	mov    ebp,esp
100258de:	sub    esp,0x24
100258e1:	push   esi
100258e2:	push   edi
100258e3:	push   DWORD PTR [ebp+0x1c]
100258e6:	lea    ecx,[ebp-0x24]
100258e9:	mov    DWORD PTR [ebp-0x14],0x3ff
100258f0:	xor    edi,edi
100258f2:	mov    DWORD PTR [ebp-0x4],0x30
100258f9:	call   0x1001924a
100258fe:	cmp    DWORD PTR [ebp+0x14],edi
10025901:	jge    0x10025906
10025903:	mov    DWORD PTR [ebp+0x14],edi
10025906:	mov    esi,DWORD PTR [ebp+0xc]
10025909:	cmp    esi,edi
1002590b:	jne    0x10025938
1002590d:	call   0x1001cd0e
10025912:	push   0x16
10025914:	pop    esi
10025915:	push   edi
10025916:	push   edi
10025917:	push   edi
10025918:	push   edi
10025919:	push   edi
1002591a:	mov    DWORD PTR [eax],esi
1002591c:	call   0x10018dbf
10025921:	add    esp,0x14
10025924:	cmp    BYTE PTR [ebp-0x18],0x0
10025928:	je     0x10025931
1002592a:	mov    eax,DWORD PTR [ebp-0x1c]
1002592d:	and    DWORD PTR [eax+0x70],0xfffffffd
10025931:	mov    eax,esi
10025933:	jmp    0x10025c48
10025938:	cmp    DWORD PTR [ebp+0x10],edi
1002593b:	jbe    0x1002590d
1002593d:	mov    eax,DWORD PTR [ebp+0x14]
10025940:	add    eax,0xb
10025943:	cmp    DWORD PTR [ebp+0x10],eax
10025946:	mov    BYTE PTR [esi],0x0
10025949:	ja     0x10025954
1002594b:	call   0x1001cd0e
10025950:	push   0x22
10025952:	jmp    0x10025914
10025954:	mov    edi,DWORD PTR [ebp+0x8]
10025957:	mov    eax,DWORD PTR [edi]
10025959:	mov    DWORD PTR [ebp-0xc],eax
1002595c:	mov    eax,DWORD PTR [edi+0x4]
1002595f:	mov    ecx,eax
10025961:	shr    ecx,0x14
10025964:	mov    edx,0x7ff
10025969:	push   ebx
1002596a:	and    ecx,edx
1002596c:	xor    ebx,ebx
1002596e:	cmp    ecx,edx
10025970:	jne    0x10025a06
10025976:	test   ebx,ebx
10025978:	jne    0x10025a06
1002597e:	mov    eax,DWORD PTR [ebp+0x10]
10025981:	cmp    eax,0xffffffff
10025984:	jne    0x1002598a
10025986:	or     eax,eax
10025988:	jmp    0x1002598d
1002598a:	add    eax,0xfffffffe
1002598d:	push   0x0
1002598f:	push   DWORD PTR [ebp+0x14]
10025992:	lea    ebx,[esi+0x2]
10025995:	push   eax
10025996:	push   ebx
10025997:	push   edi
10025998:	call   0x100258bd
1002599d:	add    esp,0x14
100259a0:	test   eax,eax
100259a2:	je     0x100259bd
100259a4:	cmp    BYTE PTR [ebp-0x18],0x0
100259a8:	mov    BYTE PTR [esi],0x0
100259ab:	je     0x10025c47
100259b1:	mov    ecx,DWORD PTR [ebp-0x1c]
100259b4:	and    DWORD PTR [ecx+0x70],0xfffffffd
100259b8:	jmp    0x10025c47
100259bd:	cmp    BYTE PTR [ebx],0x2d
100259c0:	jne    0x100259c6
100259c2:	mov    BYTE PTR [esi],0x2d
100259c5:	inc    esi
100259c6:	mov    BYTE PTR [esi],0x30
100259c9:	inc    esi
100259ca:	cmp    DWORD PTR [ebp+0x18],0x0
100259ce:	push   0x65
100259d0:	sete   al
100259d3:	dec    al
100259d5:	and    al,0xe0
100259d7:	add    al,0x78
100259d9:	mov    BYTE PTR [esi],al
100259db:	inc    esi
100259dc:	push   esi
100259dd:	call   0x10022100
100259e2:	test   eax,eax
100259e4:	pop    ecx
100259e5:	pop    ecx
100259e6:	je     0x10025c38
100259ec:	cmp    DWORD PTR [ebp+0x18],0x0
100259f0:	sete   cl
100259f3:	dec    cl
100259f5:	and    cl,0xe0
100259f8:	add    cl,0x70
100259fb:	mov    BYTE PTR [eax],cl
100259fd:	mov    BYTE PTR [eax+0x3],0x0
10025a01:	jmp    0x10025c38
10025a06:	and    eax,0x80000000
10025a0b:	xor    ecx,ecx
10025a0d:	or     ecx,eax
10025a0f:	je     0x10025a15
10025a11:	mov    BYTE PTR [esi],0x2d
10025a14:	inc    esi
10025a15:	mov    ebx,DWORD PTR [ebp+0x18]
10025a18:	mov    BYTE PTR [esi],0x30
10025a1b:	inc    esi
10025a1c:	test   ebx,ebx
10025a1e:	sete   al
10025a21:	dec    al
10025a23:	and    al,0xe0
10025a25:	add    al,0x78
10025a27:	mov    BYTE PTR [esi],al
10025a29:	mov    ecx,DWORD PTR [edi+0x4]
10025a2c:	inc    esi
10025a2d:	neg    ebx
10025a2f:	sbb    ebx,ebx
10025a31:	and    ebx,0xffffffe0
10025a34:	and    ecx,0x7ff00000
10025a3a:	xor    eax,eax
10025a3c:	add    ebx,0x27
10025a3f:	xor    edx,edx
10025a41:	or     eax,ecx
10025a43:	jne    0x10025a66
10025a45:	mov    BYTE PTR [esi],0x30
10025a48:	mov    ecx,DWORD PTR [edi+0x4]
10025a4b:	mov    eax,DWORD PTR [edi]
10025a4d:	and    ecx,0xfffff
10025a53:	inc    esi
10025a54:	or     eax,ecx
10025a56:	jne    0x10025a5d
10025a58:	mov    DWORD PTR [ebp-0x14],edx
10025a5b:	jmp    0x10025a6a
10025a5d:	mov    DWORD PTR [ebp-0x14],0x3fe
10025a64:	jmp    0x10025a6a
10025a66:	mov    BYTE PTR [esi],0x31
10025a69:	inc    esi
10025a6a:	mov    eax,esi
10025a6c:	inc    esi
10025a6d:	cmp    DWORD PTR [ebp+0x14],edx
10025a70:	mov    DWORD PTR [ebp+0xc],eax
10025a73:	jne    0x10025a79
10025a75:	mov    BYTE PTR [eax],dl
10025a77:	jmp    0x10025a88
10025a79:	mov    ecx,DWORD PTR [ebp-0x24]
10025a7c:	mov    ecx,DWORD PTR [ecx+0xbc]
10025a82:	mov    ecx,DWORD PTR [ecx]
10025a84:	mov    cl,BYTE PTR [ecx]
10025a86:	mov    BYTE PTR [eax],cl
10025a88:	mov    ecx,DWORD PTR [edi+0x4]
10025a8b:	mov    eax,DWORD PTR [edi]
10025a8d:	and    ecx,0xfffff
10025a93:	mov    DWORD PTR [ebp-0x8],ecx
10025a96:	ja     0x10025aa0
10025a98:	cmp    eax,edx
10025a9a:	jbe    0x10025b55
10025aa0:	mov    DWORD PTR [ebp-0xc],edx
10025aa3:	mov    DWORD PTR [ebp-0x8],0xf0000
10025aaa:	cmp    DWORD PTR [ebp+0x14],0x0
10025aae:	jle    0x10025afd
10025ab0:	mov    edx,DWORD PTR [edi+0x4]
10025ab3:	and    edx,DWORD PTR [ebp-0x8]
10025ab6:	mov    eax,DWORD PTR [edi]
10025ab8:	movsx  ecx,WORD PTR [ebp-0x4]
10025abc:	and    eax,DWORD PTR [ebp-0xc]
10025abf:	and    edx,0xfffff
10025ac5:	call   0x10026a50
10025aca:	add    ax,0x30
10025ace:	movzx  eax,ax
10025ad1:	cmp    ax,0x39
10025ad5:	jbe    0x10025ad9
10025ad7:	add    eax,ebx
10025ad9:	mov    ecx,DWORD PTR [ebp-0x8]
10025adc:	sub    DWORD PTR [ebp-0x4],0x4
10025ae0:	mov    BYTE PTR [esi],al
10025ae2:	mov    eax,DWORD PTR [ebp-0xc]
10025ae5:	shrd   eax,ecx,0x4
10025ae9:	shr    ecx,0x4
10025aec:	inc    esi
10025aed:	dec    DWORD PTR [ebp+0x14]
10025af0:	cmp    WORD PTR [ebp-0x4],0x0
10025af5:	mov    DWORD PTR [ebp-0xc],eax
10025af8:	mov    DWORD PTR [ebp-0x8],ecx
10025afb:	jge    0x10025aaa
10025afd:	cmp    WORD PTR [ebp-0x4],0x0
10025b02:	jl     0x10025b55
10025b04:	mov    edx,DWORD PTR [edi+0x4]
10025b07:	and    edx,DWORD PTR [ebp-0x8]
10025b0a:	mov    eax,DWORD PTR [edi]
10025b0c:	movsx  ecx,WORD PTR [ebp-0x4]
10025b10:	and    eax,DWORD PTR [ebp-0xc]
10025b13:	and    edx,0xfffff
10025b19:	call   0x10026a50
10025b1e:	cmp    ax,0x8
10025b22:	jbe    0x10025b55
10025b24:	lea    eax,[esi-0x1]
10025b27:	mov    cl,BYTE PTR [eax]
10025b29:	cmp    cl,0x66
10025b2c:	je     0x10025b33
10025b2e:	cmp    cl,0x46
10025b31:	jne    0x10025b39
10025b33:	mov    BYTE PTR [eax],0x30
10025b36:	dec    eax
10025b37:	jmp    0x10025b27
10025b39:	cmp    eax,DWORD PTR [ebp+0xc]
10025b3c:	je     0x10025b52
10025b3e:	mov    cl,BYTE PTR [eax]
10025b40:	cmp    cl,0x39
10025b43:	jne    0x10025b4c
10025b45:	add    bl,0x3a
10025b48:	mov    BYTE PTR [eax],bl
10025b4a:	jmp    0x10025b55
10025b4c:	inc    cl
10025b4e:	mov    BYTE PTR [eax],cl
10025b50:	jmp    0x10025b55
10025b52:	inc    BYTE PTR [eax-0x1]
10025b55:	cmp    DWORD PTR [ebp+0x14],0x0
10025b59:	jle    0x10025b6c
10025b5b:	push   DWORD PTR [ebp+0x14]
10025b5e:	push   0x30
10025b60:	push   esi
10025b61:	call   0x100191d0
10025b66:	add    esp,0xc
10025b69:	add    esi,DWORD PTR [ebp+0x14]
10025b6c:	mov    eax,DWORD PTR [ebp+0xc]
10025b6f:	cmp    BYTE PTR [eax],0x0
10025b72:	jne    0x10025b76
10025b74:	mov    esi,eax
10025b76:	cmp    DWORD PTR [ebp+0x18],0x0
10025b7a:	mov    cl,0x34
10025b7c:	sete   al
10025b7f:	dec    al
10025b81:	and    al,0xe0
10025b83:	add    al,0x70
10025b85:	mov    BYTE PTR [esi],al
10025b87:	mov    eax,DWORD PTR [edi]
10025b89:	mov    edx,DWORD PTR [edi+0x4]
10025b8c:	inc    esi
10025b8d:	call   0x10026a50
10025b92:	xor    ebx,ebx
10025b94:	and    eax,0x7ff
10025b99:	and    edx,ebx
10025b9b:	sub    eax,DWORD PTR [ebp-0x14]
10025b9e:	push   ebx
10025b9f:	pop    ecx
10025ba0:	sbb    edx,ecx
10025ba2:	js     0x10025bb0
10025ba4:	jg     0x10025baa
10025ba6:	cmp    eax,ebx
10025ba8:	jb     0x10025bb0
10025baa:	mov    BYTE PTR [esi],0x2b
10025bad:	inc    esi
10025bae:	jmp    0x10025bba
10025bb0:	mov    BYTE PTR [esi],0x2d
10025bb3:	inc    esi
10025bb4:	neg    eax
10025bb6:	adc    edx,ebx
10025bb8:	neg    edx
10025bba:	cmp    edx,ebx
10025bbc:	mov    edi,esi
10025bbe:	mov    BYTE PTR [esi],0x30
10025bc1:	jl     0x10025be7
10025bc3:	mov    ecx,0x3e8
10025bc8:	jg     0x10025bce
10025bca:	cmp    eax,ecx
10025bcc:	jb     0x10025be7
10025bce:	push   ebx
10025bcf:	push   ecx
10025bd0:	push   edx
10025bd1:	push   eax
10025bd2:	call   0x10026970
10025bd7:	add    al,0x30
10025bd9:	mov    BYTE PTR [esi],al
10025bdb:	inc    esi
10025bdc:	cmp    esi,edi
10025bde:	mov    DWORD PTR [ebp-0x10],edx
10025be1:	mov    eax,ecx
10025be3:	mov    edx,ebx
10025be5:	jne    0x10025bf2
10025be7:	test   edx,edx
10025be9:	jl     0x10025c09
10025beb:	jg     0x10025bf2
10025bed:	cmp    eax,0x64
10025bf0:	jb     0x10025c09
10025bf2:	push   0x0
10025bf4:	push   0x64
10025bf6:	push   edx
10025bf7:	push   eax
10025bf8:	call   0x10026970
10025bfd:	add    al,0x30
10025bff:	mov    BYTE PTR [esi],al
10025c01:	mov    DWORD PTR [ebp-0x10],edx
10025c04:	inc    esi
10025c05:	mov    eax,ecx
10025c07:	mov    edx,ebx
10025c09:	cmp    esi,edi
10025c0b:	jne    0x10025c18
10025c0d:	test   edx,edx
10025c0f:	jl     0x10025c30
10025c11:	jg     0x10025c18
10025c13:	cmp    eax,0xa
10025c16:	jb     0x10025c30
10025c18:	push   0x0
10025c1a:	push   0xa
10025c1c:	push   edx
10025c1d:	push   eax
10025c1e:	call   0x10026970
10025c23:	add    al,0x30
10025c25:	mov    BYTE PTR [esi],al
10025c27:	mov    DWORD PTR [ebp-0x10],edx
10025c2a:	inc    esi
10025c2b:	mov    eax,ecx
10025c2d:	mov    DWORD PTR [ebp-0x10],ebx
10025c30:	add    al,0x30
10025c32:	mov    BYTE PTR [esi],al
10025c34:	mov    BYTE PTR [esi+0x1],0x0
10025c38:	cmp    BYTE PTR [ebp-0x18],0x0
10025c3c:	je     0x10025c45
10025c3e:	mov    eax,DWORD PTR [ebp-0x1c]
10025c41:	and    DWORD PTR [eax+0x70],0xfffffffd
10025c45:	xor    eax,eax
10025c47:	pop    ebx
10025c48:	pop    edi
10025c49:	pop    esi
10025c4a:	leave  
10025c4b:	ret    
10025c4c:	push   ebp
10025c4d:	mov    ebp,esp
10025c4f:	sub    esp,0x10
10025c52:	push   ebx
10025c53:	push   esi
10025c54:	push   edi
10025c55:	push   DWORD PTR [ebp+0x14]
10025c58:	mov    ebx,eax
10025c5a:	mov    esi,DWORD PTR [ebx+0x4]
10025c5d:	mov    edi,ecx
10025c5f:	lea    ecx,[ebp-0x10]
10025c62:	dec    esi
10025c63:	call   0x1001924a
10025c68:	test   edi,edi
10025c6a:	jne    0x10025c99
10025c6c:	call   0x1001cd0e
10025c71:	push   0x16
10025c73:	pop    esi
10025c74:	mov    DWORD PTR [eax],esi
10025c76:	xor    eax,eax
10025c78:	push   eax
10025c79:	push   eax
10025c7a:	push   eax
10025c7b:	push   eax
10025c7c:	push   eax
10025c7d:	call   0x10018dbf
10025c82:	add    esp,0x14
10025c85:	cmp    BYTE PTR [ebp-0x4],0x0
10025c89:	je     0x10025c92
10025c8b:	mov    eax,DWORD PTR [ebp-0x8]
10025c8e:	and    DWORD PTR [eax+0x70],0xfffffffd
10025c92:	mov    eax,esi
10025c94:	jmp    0x10025d3c
10025c99:	cmp    DWORD PTR [ebp+0x8],0x0
10025c9d:	jbe    0x10025c6c
10025c9f:	cmp    BYTE PTR [ebp+0x10],0x0
10025ca3:	je     0x10025cbd
10025ca5:	cmp    esi,DWORD PTR [ebp+0xc]
10025ca8:	jne    0x10025cbd
10025caa:	xor    eax,eax
10025cac:	cmp    DWORD PTR [ebx],0x2d
10025caf:	sete   al
10025cb2:	add    eax,esi
10025cb4:	add    eax,edi
10025cb6:	mov    BYTE PTR [eax],0x30
10025cb9:	mov    BYTE PTR [eax+0x1],0x0
10025cbd:	cmp    DWORD PTR [ebx],0x2d
10025cc0:	mov    esi,edi
10025cc2:	jne    0x10025cca
10025cc4:	mov    BYTE PTR [edi],0x2d
10025cc7:	lea    esi,[edi+0x1]
10025cca:	mov    eax,DWORD PTR [ebx+0x4]
10025ccd:	xor    edi,edi
10025ccf:	inc    edi
10025cd0:	test   eax,eax
10025cd2:	jg     0x10025ce1
10025cd4:	mov    eax,esi
10025cd6:	call   0x10025649
10025cdb:	mov    BYTE PTR [esi],0x30
10025cde:	inc    esi
10025cdf:	jmp    0x10025ce3
10025ce1:	add    esi,eax
10025ce3:	cmp    DWORD PTR [ebp+0xc],0x0
10025ce7:	jle    0x10025d2d
10025ce9:	mov    eax,esi
10025ceb:	call   0x10025649
10025cf0:	mov    eax,DWORD PTR [ebp-0x10]
10025cf3:	mov    eax,DWORD PTR [eax+0xbc]
10025cf9:	mov    eax,DWORD PTR [eax]
10025cfb:	mov    al,BYTE PTR [eax]
10025cfd:	mov    BYTE PTR [esi],al
10025cff:	mov    ebx,DWORD PTR [ebx+0x4]
10025d02:	inc    esi
10025d03:	test   ebx,ebx
10025d05:	jge    0x10025d2d
10025d07:	neg    ebx
10025d09:	cmp    BYTE PTR [ebp+0x10],0x0
10025d0d:	jne    0x10025d14
10025d0f:	cmp    DWORD PTR [ebp+0xc],ebx
10025d12:	jl     0x10025d17
10025d14:	mov    DWORD PTR [ebp+0xc],ebx
10025d17:	mov    edi,DWORD PTR [ebp+0xc]
10025d1a:	mov    eax,esi
10025d1c:	call   0x10025649
10025d21:	push   edi
10025d22:	push   0x30
10025d24:	push   esi
10025d25:	call   0x100191d0
10025d2a:	add    esp,0xc
10025d2d:	cmp    BYTE PTR [ebp-0x4],0x0
10025d31:	je     0x10025d3a
10025d33:	mov    eax,DWORD PTR [ebp-0x8]
10025d36:	and    DWORD PTR [eax+0x70],0xfffffffd
10025d3a:	xor    eax,eax
10025d3c:	pop    edi
10025d3d:	pop    esi
10025d3e:	pop    ebx
10025d3f:	leave  
10025d40:	ret    
10025d41:	push   ebp
10025d42:	mov    ebp,esp
10025d44:	sub    esp,0x2c
10025d47:	mov    eax,ds:0x100c7654
10025d4c:	xor    eax,ebp
10025d4e:	mov    DWORD PTR [ebp-0x4],eax
10025d51:	mov    eax,DWORD PTR [ebp+0x8]
10025d54:	push   ebx
10025d55:	push   esi
10025d56:	push   edi
10025d57:	mov    edi,DWORD PTR [ebp+0xc]
10025d5a:	push   0x16
10025d5c:	pop    esi
10025d5d:	push   esi
10025d5e:	lea    ecx,[ebp-0x1c]
10025d61:	push   ecx
10025d62:	lea    ecx,[ebp-0x2c]
10025d65:	push   ecx
10025d66:	push   DWORD PTR [eax+0x4]
10025d69:	push   DWORD PTR [eax]
10025d6b:	call   0x100268e1
10025d70:	xor    ebx,ebx
10025d72:	add    esp,0x14
10025d75:	cmp    edi,ebx
10025d77:	jne    0x10025d91
10025d79:	call   0x1001cd0e
10025d7e:	push   ebx
10025d7f:	push   ebx
10025d80:	push   ebx
10025d81:	push   ebx
10025d82:	push   ebx
10025d83:	mov    DWORD PTR [eax],esi
10025d85:	call   0x10018dbf
10025d8a:	add    esp,0x14
10025d8d:	mov    eax,esi
10025d8f:	jmp    0x10025deb
10025d91:	mov    eax,DWORD PTR [ebp+0x10]
10025d94:	cmp    eax,ebx
10025d96:	jbe    0x10025d79
10025d98:	cmp    eax,0xffffffff
10025d9b:	jne    0x10025da1
10025d9d:	or     eax,eax
10025d9f:	jmp    0x10025dac
10025da1:	xor    ecx,ecx
10025da3:	cmp    DWORD PTR [ebp-0x2c],0x2d
10025da7:	sete   cl
10025daa:	sub    eax,ecx
10025dac:	mov    esi,DWORD PTR [ebp+0x14]
10025daf:	lea    ecx,[ebp-0x2c]
10025db2:	push   ecx
10025db3:	mov    ecx,DWORD PTR [ebp-0x28]
10025db6:	add    ecx,esi
10025db8:	push   ecx
10025db9:	push   eax
10025dba:	xor    eax,eax
10025dbc:	cmp    DWORD PTR [ebp-0x2c],0x2d
10025dc0:	sete   al
10025dc3:	add    eax,edi
10025dc5:	push   eax
10025dc6:	call   0x10026769
10025dcb:	add    esp,0x10
10025dce:	cmp    eax,ebx
10025dd0:	je     0x10025dd6
10025dd2:	mov    BYTE PTR [edi],bl
10025dd4:	jmp    0x10025deb
10025dd6:	push   DWORD PTR [ebp+0x18]
10025dd9:	lea    eax,[ebp-0x2c]
10025ddc:	push   ebx
10025ddd:	push   esi
10025dde:	push   DWORD PTR [ebp+0x10]
10025de1:	mov    ecx,edi
10025de3:	call   0x10025c4c
10025de8:	add    esp,0x10
10025deb:	mov    ecx,DWORD PTR [ebp-0x4]
10025dee:	pop    edi
10025def:	pop    esi
10025df0:	xor    ecx,ebp
10025df2:	pop    ebx
10025df3:	call   0x10018773
10025df8:	leave  
10025df9:	ret    
10025dfa:	push   ebp
10025dfb:	mov    ebp,esp
10025dfd:	sub    esp,0x30
10025e00:	mov    eax,ds:0x100c7654
10025e05:	xor    eax,ebp
10025e07:	mov    DWORD PTR [ebp-0x4],eax
10025e0a:	mov    eax,DWORD PTR [ebp+0x8]
10025e0d:	push   ebx
10025e0e:	push   esi
10025e0f:	mov    esi,DWORD PTR [ebp+0xc]
10025e12:	push   edi
10025e13:	push   0x16
10025e15:	pop    edi
10025e16:	push   edi
10025e17:	lea    ecx,[ebp-0x1c]
10025e1a:	push   ecx
10025e1b:	lea    ecx,[ebp-0x30]
10025e1e:	push   ecx
10025e1f:	push   DWORD PTR [eax+0x4]
10025e22:	push   DWORD PTR [eax]
10025e24:	call   0x100268e1
10025e29:	xor    ebx,ebx
10025e2b:	add    esp,0x14
10025e2e:	cmp    esi,ebx
10025e30:	jne    0x10025e4d
10025e32:	call   0x1001cd0e
10025e37:	push   ebx
10025e38:	push   ebx
10025e39:	push   ebx
10025e3a:	push   ebx
10025e3b:	push   ebx
10025e3c:	mov    DWORD PTR [eax],edi
10025e3e:	call   0x10018dbf
10025e43:	add    esp,0x14
10025e46:	mov    eax,edi
10025e48:	jmp    0x10025ee3
10025e4d:	mov    ecx,DWORD PTR [ebp+0x10]
10025e50:	cmp    ecx,ebx
10025e52:	jbe    0x10025e32
10025e54:	mov    eax,DWORD PTR [ebp-0x2c]
10025e57:	dec    eax
10025e58:	mov    DWORD PTR [ebp-0x20],eax
10025e5b:	xor    eax,eax
10025e5d:	cmp    DWORD PTR [ebp-0x30],0x2d
10025e61:	sete   al
10025e64:	cmp    ecx,0xffffffff
10025e67:	lea    edi,[eax+esi*1]
10025e6a:	jne    0x10025e70
10025e6c:	or     ecx,ecx
10025e6e:	jmp    0x10025e72
10025e70:	sub    ecx,eax
10025e72:	lea    eax,[ebp-0x30]
10025e75:	push   eax
10025e76:	push   DWORD PTR [ebp+0x14]
10025e79:	push   ecx
10025e7a:	push   edi
10025e7b:	call   0x10026769
10025e80:	add    esp,0x10
10025e83:	cmp    eax,ebx
10025e85:	je     0x10025e8b
10025e87:	mov    BYTE PTR [esi],bl
10025e89:	jmp    0x10025ee3
10025e8b:	mov    eax,DWORD PTR [ebp-0x2c]
10025e8e:	dec    eax
10025e8f:	cmp    DWORD PTR [ebp-0x20],eax
10025e92:	setl   cl
10025e95:	cmp    eax,0xfffffffc
10025e98:	jl     0x10025ec7
10025e9a:	cmp    eax,DWORD PTR [ebp+0x14]
10025e9d:	jge    0x10025ec7
10025e9f:	cmp    cl,bl
10025ea1:	je     0x10025ead
10025ea3:	mov    al,BYTE PTR [edi]
10025ea5:	inc    edi
10025ea6:	test   al,al
10025ea8:	jne    0x10025ea3
10025eaa:	mov    BYTE PTR [edi-0x2],bl
10025ead:	push   DWORD PTR [ebp+0x1c]
10025eb0:	lea    eax,[ebp-0x30]
10025eb3:	push   0x1
10025eb5:	push   DWORD PTR [ebp+0x14]
10025eb8:	mov    ecx,esi
10025eba:	push   DWORD PTR [ebp+0x10]
10025ebd:	call   0x10025c4c
10025ec2:	add    esp,0x10
10025ec5:	jmp    0x10025ee3
10025ec7:	push   DWORD PTR [ebp+0x1c]
10025eca:	lea    eax,[ebp-0x30]
10025ecd:	push   0x1
10025ecf:	push   eax
10025ed0:	push   DWORD PTR [ebp+0x18]
10025ed3:	mov    eax,esi
10025ed5:	push   DWORD PTR [ebp+0x14]
10025ed8:	push   DWORD PTR [ebp+0x10]
10025edb:	call   0x10025682
10025ee0:	add    esp,0x18
10025ee3:	mov    ecx,DWORD PTR [ebp-0x4]
10025ee6:	pop    edi
10025ee7:	pop    esi
10025ee8:	xor    ecx,ebp
10025eea:	pop    ebx
10025eeb:	call   0x10018773
10025ef0:	leave  
10025ef1:	ret    
10025ef2:	push   ebp
10025ef3:	mov    ebp,esp
10025ef5:	mov    eax,DWORD PTR [ebp+0x14]
10025ef8:	cmp    eax,0x65
10025efb:	je     0x10025f5c
10025efd:	cmp    eax,0x45
10025f00:	je     0x10025f5c
10025f02:	cmp    eax,0x66
10025f05:	jne    0x10025f20
10025f07:	push   DWORD PTR [ebp+0x20]
10025f0a:	push   DWORD PTR [ebp+0x18]
10025f0d:	push   DWORD PTR [ebp+0x10]
10025f10:	push   DWORD PTR [ebp+0xc]
10025f13:	push   DWORD PTR [ebp+0x8]
10025f16:	call   0x10025d41
10025f1b:	add    esp,0x14
10025f1e:	pop    ebp
10025f1f:	ret    
10025f20:	cmp    eax,0x61
10025f23:	je     0x10025f43
10025f25:	cmp    eax,0x41
10025f28:	je     0x10025f43
10025f2a:	push   DWORD PTR [ebp+0x20]
10025f2d:	push   DWORD PTR [ebp+0x1c]
10025f30:	push   DWORD PTR [ebp+0x18]
10025f33:	push   DWORD PTR [ebp+0x10]
10025f36:	push   DWORD PTR [ebp+0xc]
10025f39:	push   DWORD PTR [ebp+0x8]
10025f3c:	call   0x10025dfa
10025f41:	jmp    0x10025f73
10025f43:	push   DWORD PTR [ebp+0x20]
10025f46:	push   DWORD PTR [ebp+0x1c]
10025f49:	push   DWORD PTR [ebp+0x18]
10025f4c:	push   DWORD PTR [ebp+0x10]
10025f4f:	push   DWORD PTR [ebp+0xc]
10025f52:	push   DWORD PTR [ebp+0x8]
10025f55:	call   0x100258db
10025f5a:	jmp    0x10025f73
10025f5c:	push   DWORD PTR [ebp+0x20]
10025f5f:	push   DWORD PTR [ebp+0x1c]
10025f62:	push   DWORD PTR [ebp+0x18]
10025f65:	push   DWORD PTR [ebp+0x10]
10025f68:	push   DWORD PTR [ebp+0xc]
10025f6b:	push   DWORD PTR [ebp+0x8]
10025f6e:	call   0x100257ef
10025f73:	add    esp,0x18
10025f76:	pop    ebp
10025f77:	ret    
10025f78:	push   ebp
10025f79:	mov    ebp,esp
10025f7b:	push   0x0
10025f7d:	push   DWORD PTR [ebp+0x1c]
10025f80:	push   DWORD PTR [ebp+0x18]
10025f83:	push   DWORD PTR [ebp+0x14]
10025f86:	push   DWORD PTR [ebp+0x10]
10025f89:	push   DWORD PTR [ebp+0xc]
10025f8c:	push   DWORD PTR [ebp+0x8]
10025f8f:	call   0x10025ef2
10025f94:	add    esp,0x1c
10025f97:	pop    ebp
10025f98:	ret    
10025f99:	push   esi
10025f9a:	push   0x30000
10025f9f:	push   0x10000
10025fa4:	xor    esi,esi
10025fa6:	push   esi
10025fa7:	call   0x10026a6f
10025fac:	add    esp,0xc
10025faf:	test   eax,eax
10025fb1:	je     0x10025fc0
10025fb3:	push   esi
10025fb4:	push   esi
10025fb5:	push   esi
10025fb6:	push   esi
10025fb7:	push   esi
10025fb8:	call   0x10018cc3
10025fbd:	add    esp,0x14
10025fc0:	pop    esi
10025fc1:	ret    
10025fc2:	push   ebp
10025fc3:	mov    ebp,esp
10025fc5:	sub    esp,0x18
10025fc8:	fld    QWORD PTR ds:0x100b4018
10025fce:	fstp   QWORD PTR [ebp-0x10]
10025fd1:	fld    QWORD PTR ds:0x100b4010
10025fd7:	fstp   QWORD PTR [ebp-0x18]
10025fda:	fld    QWORD PTR [ebp-0x18]
10025fdd:	fdiv   QWORD PTR [ebp-0x10]
10025fe0:	fmul   QWORD PTR [ebp-0x10]
10025fe3:	fsubr  QWORD PTR [ebp-0x18]
10025fe6:	fstp   QWORD PTR [ebp-0x8]
10025fe9:	fld1   
10025feb:	fcomp  QWORD PTR [ebp-0x8]
10025fee:	fnstsw ax
10025ff0:	test   ah,0x5
10025ff3:	jp     0x10025ffa
10025ff5:	xor    eax,eax
10025ff7:	inc    eax
10025ff8:	leave  
10025ff9:	ret    
10025ffa:	xor    eax,eax
10025ffc:	leave  
10025ffd:	ret    
10025ffe:	push   0x100b403c
10026003:	call   DWORD PTR ds:0x1002f0fc
10026009:	test   eax,eax
1002600b:	je     0x10026022
1002600d:	push   0x100b4020
10026012:	push   eax
10026013:	call   DWORD PTR ds:0x1002f050
10026019:	test   eax,eax
1002601b:	je     0x10026022
1002601d:	push   0x0
1002601f:	call   eax
10026021:	ret    
10026022:	jmp    0x10025fc2
10026027:	push   ebp
10026028:	mov    ebp,esp
1002602a:	sub    esp,0x18
1002602d:	mov    eax,ds:0x100c7654
10026032:	xor    eax,ebp
10026034:	mov    DWORD PTR [ebp-0x4],eax
10026037:	mov    eax,DWORD PTR [ebp+0x10]
1002603a:	push   ebx
1002603b:	push   esi
1002603c:	xor    esi,esi
1002603e:	cmp    DWORD PTR [ebp+0xc],esi
10026041:	push   edi
10026042:	mov    DWORD PTR [ebp-0x18],0x404e
10026049:	mov    DWORD PTR [eax],esi
1002604b:	mov    DWORD PTR [eax+0x4],esi
1002604e:	mov    DWORD PTR [eax+0x8],esi
10026051:	jbe    0x1002619d
10026057:	mov    edx,DWORD PTR [eax]
10026059:	mov    ebx,DWORD PTR [eax+0x4]
1002605c:	mov    esi,eax
1002605e:	lea    edi,[ebp-0x10]
10026061:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10026062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10026063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10026064:	mov    ecx,edx
10026066:	shr    ecx,0x1f
10026069:	lea    edi,[edx+edx*1]
1002606c:	lea    edx,[ebx+ebx*1]
1002606f:	or     edx,ecx
10026071:	mov    ecx,DWORD PTR [eax+0x8]
10026074:	mov    esi,ebx
10026076:	shr    esi,0x1f
10026079:	add    ecx,ecx
1002607b:	or     ecx,esi
1002607d:	mov    DWORD PTR [ebp-0x14],edi
10026080:	mov    esi,edi
10026082:	and    DWORD PTR [ebp-0x14],0x0
10026086:	mov    ebx,edx
10026088:	shr    ebx,0x1f
1002608b:	add    ecx,ecx
1002608d:	shr    edi,0x1f
10026090:	or     ecx,ebx
10026092:	mov    ebx,DWORD PTR [ebp-0x10]
10026095:	add    esi,esi
10026097:	add    edx,edx
10026099:	or     edx,edi
1002609b:	lea    edi,[esi+ebx*1]
1002609e:	cmp    edi,esi
100260a0:	mov    DWORD PTR [eax],esi
100260a2:	mov    DWORD PTR [eax+0x4],edx
100260a5:	mov    DWORD PTR [eax+0x8],ecx
100260a8:	jb     0x100260ae
100260aa:	cmp    edi,ebx
100260ac:	jae    0x100260b5
100260ae:	mov    DWORD PTR [ebp-0x14],0x1
100260b5:	xor    ebx,ebx
100260b7:	cmp    DWORD PTR [ebp-0x14],ebx
100260ba:	mov    DWORD PTR [eax],edi
100260bc:	je     0x100260d8
100260be:	lea    esi,[edx+0x1]
100260c1:	cmp    esi,edx
100260c3:	jb     0x100260ca
100260c5:	cmp    esi,0x1
100260c8:	jae    0x100260cd
100260ca:	xor    ebx,ebx
100260cc:	inc    ebx
100260cd:	test   ebx,ebx
100260cf:	mov    DWORD PTR [eax+0x4],esi
100260d2:	je     0x100260d8
100260d4:	inc    ecx
100260d5:	mov    DWORD PTR [eax+0x8],ecx
100260d8:	mov    ecx,DWORD PTR [eax+0x4]
100260db:	mov    edx,DWORD PTR [ebp-0xc]
100260de:	lea    ebx,[ecx+edx*1]
100260e1:	xor    esi,esi
100260e3:	cmp    ebx,ecx
100260e5:	jb     0x100260eb
100260e7:	cmp    ebx,edx
100260e9:	jae    0x100260ee
100260eb:	xor    esi,esi
100260ed:	inc    esi
100260ee:	test   esi,esi
100260f0:	mov    DWORD PTR [eax+0x4],ebx
100260f3:	je     0x100260f8
100260f5:	inc    DWORD PTR [eax+0x8]
100260f8:	mov    ecx,DWORD PTR [ebp-0x8]
100260fb:	add    DWORD PTR [eax+0x8],ecx
100260fe:	and    DWORD PTR [ebp-0x14],0x0
10026102:	lea    ecx,[edi+edi*1]
10026105:	mov    edx,edi
10026107:	shr    edx,0x1f
1002610a:	lea    edi,[ebx+ebx*1]
1002610d:	or     edi,edx
1002610f:	mov    edx,DWORD PTR [eax+0x8]
10026112:	mov    esi,ebx
10026114:	shr    esi,0x1f
10026117:	lea    ebx,[edx+edx*1]
1002611a:	mov    edx,DWORD PTR [ebp+0x8]
1002611d:	or     ebx,esi
1002611f:	mov    DWORD PTR [eax],ecx
10026121:	mov    DWORD PTR [eax+0x4],edi
10026124:	mov    DWORD PTR [eax+0x8],ebx
10026127:	movsx  edx,BYTE PTR [edx]
1002612a:	lea    esi,[ecx+edx*1]
1002612d:	cmp    esi,ecx
1002612f:	mov    DWORD PTR [ebp-0x10],edx
10026132:	jb     0x10026138
10026134:	cmp    esi,edx
10026136:	jae    0x1002613f
10026138:	mov    DWORD PTR [ebp-0x14],0x1
1002613f:	cmp    DWORD PTR [ebp-0x14],0x0
10026143:	mov    DWORD PTR [eax],esi
10026145:	je     0x10026163
10026147:	lea    ecx,[edi+0x1]
1002614a:	xor    edx,edx
1002614c:	cmp    ecx,edi
1002614e:	jb     0x10026155
10026150:	cmp    ecx,0x1
10026153:	jae    0x10026158
10026155:	xor    edx,edx
10026157:	inc    edx
10026158:	test   edx,edx
1002615a:	mov    DWORD PTR [eax+0x4],ecx
1002615d:	je     0x10026163
1002615f:	inc    ebx
10026160:	mov    DWORD PTR [eax+0x8],ebx
10026163:	dec    DWORD PTR [ebp+0xc]
10026166:	inc    DWORD PTR [ebp+0x8]
10026169:	cmp    DWORD PTR [ebp+0xc],0x0
1002616d:	ja     0x10026057
10026173:	xor    esi,esi
10026175:	jmp    0x1002619d
10026177:	mov    ecx,DWORD PTR [eax+0x4]
1002617a:	mov    edx,ecx
1002617c:	shr    edx,0x10
1002617f:	mov    DWORD PTR [eax+0x8],edx
10026182:	mov    edx,DWORD PTR [eax]
10026184:	mov    edi,edx
10026186:	shl    ecx,0x10
10026189:	shr    edi,0x10
1002618c:	or     ecx,edi
1002618e:	shl    edx,0x10
10026191:	add    DWORD PTR [ebp-0x18],0xfff0
10026198:	mov    DWORD PTR [eax+0x4],ecx
1002619b:	mov    DWORD PTR [eax],edx
1002619d:	cmp    DWORD PTR [eax+0x8],esi
100261a0:	je     0x10026177
100261a2:	mov    ebx,0x8000
100261a7:	test   DWORD PTR [eax+0x8],ebx
100261aa:	jne    0x100261dc
100261ac:	mov    esi,DWORD PTR [eax]
100261ae:	mov    edi,DWORD PTR [eax+0x4]
100261b1:	add    DWORD PTR [ebp-0x18],0xffff
100261b8:	mov    ecx,esi
100261ba:	add    esi,esi
100261bc:	shr    ecx,0x1f
100261bf:	mov    DWORD PTR [eax],esi
100261c1:	lea    esi,[edi+edi*1]
100261c4:	or     esi,ecx
100261c6:	mov    ecx,DWORD PTR [eax+0x8]
100261c9:	mov    edx,edi
100261cb:	shr    edx,0x1f
100261ce:	add    ecx,ecx
100261d0:	or     ecx,edx
100261d2:	test   ebx,ecx
100261d4:	mov    DWORD PTR [eax+0x4],esi
100261d7:	mov    DWORD PTR [eax+0x8],ecx
100261da:	je     0x100261ac
100261dc:	mov    cx,WORD PTR [ebp-0x18]
100261e0:	mov    WORD PTR [eax+0xa],cx
100261e4:	mov    ecx,DWORD PTR [ebp-0x4]
100261e7:	pop    edi
100261e8:	pop    esi
100261e9:	xor    ecx,ebp
100261eb:	pop    ebx
100261ec:	call   0x10018773
100261f1:	leave  
100261f2:	ret    
100261f3:	push   ebp
100261f4:	mov    ebp,esp
100261f6:	sub    esp,0x14
100261f9:	push   esi
100261fa:	push   edi
100261fb:	push   DWORD PTR [ebp+0x8]
100261fe:	lea    ecx,[ebp-0x14]
10026201:	call   0x1001924a
10026206:	mov    eax,DWORD PTR [ebp+0x10]
10026209:	mov    esi,DWORD PTR [ebp+0xc]
1002620c:	xor    edi,edi
1002620e:	cmp    eax,edi
10026210:	je     0x10026214
10026212:	mov    DWORD PTR [eax],esi
10026214:	cmp    esi,edi
10026216:	jne    0x10026244
10026218:	call   0x1001cd0e
1002621d:	push   edi
1002621e:	push   edi
1002621f:	push   edi
10026220:	push   edi
10026221:	push   edi
10026222:	mov    DWORD PTR [eax],0x16
10026228:	call   0x10018dbf
1002622d:	add    esp,0x14
10026230:	cmp    BYTE PTR [ebp-0x8],0x0
10026234:	je     0x1002623d
10026236:	mov    eax,DWORD PTR [ebp-0xc]
10026239:	and    DWORD PTR [eax+0x70],0xfffffffd
1002623d:	xor    eax,eax
1002623f:	jmp    0x1002641a
10026244:	cmp    DWORD PTR [ebp+0x14],edi
10026247:	je     0x10026255
10026249:	cmp    DWORD PTR [ebp+0x14],0x2
1002624d:	jl     0x10026218
1002624f:	cmp    DWORD PTR [ebp+0x14],0x24
10026253:	jg     0x10026218
10026255:	mov    ecx,DWORD PTR [ebp-0x14]
10026258:	push   ebx
10026259:	mov    bl,BYTE PTR [esi]
1002625b:	mov    DWORD PTR [ebp-0x4],edi
1002625e:	lea    edi,[esi+0x1]
10026261:	cmp    DWORD PTR [ecx+0xac],0x1
10026268:	jle    0x10026281
1002626a:	lea    eax,[ebp-0x14]
1002626d:	push   eax
1002626e:	movzx  eax,bl
10026271:	push   0x8
10026273:	push   eax
10026274:	call   0x10021615
10026279:	mov    ecx,DWORD PTR [ebp-0x14]
1002627c:	add    esp,0xc
1002627f:	jmp    0x10026291
10026281:	mov    edx,DWORD PTR [ecx+0xc8]
10026287:	movzx  eax,bl
1002628a:	movzx  eax,BYTE PTR [edx+eax*2]
1002628e:	and    eax,0x8
10026291:	test   eax,eax
10026293:	je     0x1002629a
10026295:	mov    bl,BYTE PTR [edi]
10026297:	inc    edi
10026298:	jmp    0x10026261
1002629a:	cmp    bl,0x2d
1002629d:	jne    0x100262a5
1002629f:	or     DWORD PTR [ebp+0x18],0x2
100262a3:	jmp    0x100262aa
100262a5:	cmp    bl,0x2b
100262a8:	jne    0x100262ad
100262aa:	mov    bl,BYTE PTR [edi]
100262ac:	inc    edi
100262ad:	mov    eax,DWORD PTR [ebp+0x14]
100262b0:	test   eax,eax
100262b2:	jl     0x10026401
100262b8:	cmp    eax,0x1
100262bb:	je     0x10026401
100262c1:	cmp    eax,0x24
100262c4:	jg     0x10026401
100262ca:	test   eax,eax
100262cc:	jne    0x100262f8
100262ce:	cmp    bl,0x30
100262d1:	je     0x100262dc
100262d3:	mov    DWORD PTR [ebp+0x14],0xa
100262da:	jmp    0x10026310
100262dc:	mov    al,BYTE PTR [edi]
100262de:	cmp    al,0x78
100262e0:	je     0x100262ef
100262e2:	cmp    al,0x58
100262e4:	je     0x100262ef
100262e6:	mov    DWORD PTR [ebp+0x14],0x8
100262ed:	jmp    0x10026310
100262ef:	mov    DWORD PTR [ebp+0x14],0x10
100262f6:	jmp    0x10026302
100262f8:	cmp    eax,0x10
100262fb:	jne    0x10026310
100262fd:	cmp    bl,0x30
10026300:	jne    0x10026310
10026302:	mov    al,BYTE PTR [edi]
10026304:	cmp    al,0x78
10026306:	je     0x1002630c
10026308:	cmp    al,0x58
1002630a:	jne    0x10026310
1002630c:	inc    edi
1002630d:	mov    bl,BYTE PTR [edi]
1002630f:	inc    edi
10026310:	mov    esi,DWORD PTR [ecx+0xc8]
10026316:	or     eax,0xffffffff
10026319:	xor    edx,edx
1002631b:	div    DWORD PTR [ebp+0x14]
1002631e:	movzx  ecx,bl
10026321:	movzx  ecx,WORD PTR [esi+ecx*2]
10026325:	test   cl,0x4
10026328:	je     0x10026332
1002632a:	movsx  ecx,bl
1002632d:	sub    ecx,0x30
10026330:	jmp    0x1002634c
10026332:	test   cx,0x103
10026337:	je     0x1002636a
10026339:	mov    cl,bl
1002633b:	sub    cl,0x61
1002633e:	cmp    cl,0x19
10026341:	movsx  ecx,bl
10026344:	ja     0x10026349
10026346:	sub    ecx,0x20
10026349:	add    ecx,0xffffffc9
1002634c:	cmp    ecx,DWORD PTR [ebp+0x14]
1002634f:	jae    0x1002636a
10026351:	or     DWORD PTR [ebp+0x18],0x8
10026355:	cmp    DWORD PTR [ebp-0x4],eax
10026358:	jb     0x10026381
1002635a:	jne    0x10026360
1002635c:	cmp    ecx,edx
1002635e:	jbe    0x10026381
10026360:	or     DWORD PTR [ebp+0x18],0x4
10026364:	cmp    DWORD PTR [ebp+0x10],0x0
10026368:	jne    0x1002638d
1002636a:	mov    eax,DWORD PTR [ebp+0x18]
1002636d:	dec    edi
1002636e:	test   al,0x8
10026370:	jne    0x10026392
10026372:	cmp    DWORD PTR [ebp+0x10],0x0
10026376:	je     0x1002637b
10026378:	mov    edi,DWORD PTR [ebp+0xc]
1002637b:	and    DWORD PTR [ebp-0x4],0x0
1002637f:	jmp    0x100263dd
10026381:	mov    ebx,DWORD PTR [ebp-0x4]
10026384:	imul   ebx,DWORD PTR [ebp+0x14]
10026388:	add    ebx,ecx
1002638a:	mov    DWORD PTR [ebp-0x4],ebx
1002638d:	mov    bl,BYTE PTR [edi]
1002638f:	inc    edi
10026390:	jmp    0x1002631e
10026392:	test   al,0x4
10026394:	mov    esi,0x7fffffff
10026399:	jne    0x100263b6
1002639b:	test   al,0x1
1002639d:	jne    0x100263dd
1002639f:	and    eax,0x2
100263a2:	je     0x100263ad
100263a4:	cmp    DWORD PTR [ebp-0x4],0x80000000
100263ab:	ja     0x100263b6
100263ad:	test   eax,eax
100263af:	jne    0x100263dd
100263b1:	cmp    DWORD PTR [ebp-0x4],esi
100263b4:	jbe    0x100263dd
100263b6:	call   0x1001cd0e
100263bb:	test   BYTE PTR [ebp+0x18],0x1
100263bf:	mov    DWORD PTR [eax],0x22
100263c5:	je     0x100263cd
100263c7:	or     DWORD PTR [ebp-0x4],0xffffffff
100263cb:	jmp    0x100263dd
100263cd:	mov    al,BYTE PTR [ebp+0x18]
100263d0:	and    al,0x2
100263d2:	neg    al
100263d4:	sbb    eax,eax
100263d6:	neg    eax
100263d8:	add    eax,esi
100263da:	mov    DWORD PTR [ebp-0x4],eax
100263dd:	mov    eax,DWORD PTR [ebp+0x10]
100263e0:	test   eax,eax
100263e2:	je     0x100263e6
100263e4:	mov    DWORD PTR [eax],edi
100263e6:	test   BYTE PTR [ebp+0x18],0x2
100263ea:	je     0x100263ef
100263ec:	neg    DWORD PTR [ebp-0x4]
100263ef:	cmp    BYTE PTR [ebp-0x8],0x0
100263f3:	je     0x100263fc
100263f5:	mov    eax,DWORD PTR [ebp-0xc]
100263f8:	and    DWORD PTR [eax+0x70],0xfffffffd
100263fc:	mov    eax,DWORD PTR [ebp-0x4]
100263ff:	jmp    0x10026419
10026401:	mov    eax,DWORD PTR [ebp+0x10]
10026404:	test   eax,eax
10026406:	je     0x1002640a
10026408:	mov    DWORD PTR [eax],esi
1002640a:	cmp    BYTE PTR [ebp-0x8],0x0
1002640e:	je     0x10026417
10026410:	mov    eax,DWORD PTR [ebp-0xc]
10026413:	and    DWORD PTR [eax+0x70],0xfffffffd
10026417:	xor    eax,eax
10026419:	pop    ebx
1002641a:	pop    edi
1002641b:	pop    esi
1002641c:	leave  
1002641d:	ret    
1002641e:	push   ebp
1002641f:	mov    ebp,esp
10026421:	xor    eax,eax
10026423:	cmp    DWORD PTR ds:0x100c9260,eax
10026429:	push   eax
1002642a:	push   DWORD PTR [ebp+0x10]
1002642d:	push   DWORD PTR [ebp+0xc]
10026430:	push   DWORD PTR [ebp+0x8]
10026433:	jne    0x1002643c
10026435:	push   0x100c7f60
1002643a:	jmp    0x1002643d
1002643c:	push   eax
1002643d:	call   0x100261f3
10026442:	add    esp,0x14
10026445:	pop    ebp
10026446:	ret    
10026447:	push   0xa
10026449:	push   0x0
1002644b:	push   DWORD PTR [esp+0xc]
1002644f:	call   0x1002641e
10026454:	add    esp,0xc
10026457:	ret    
10026458:	push   0x2
1002645a:	call   0x1001c9cf
1002645f:	pop    ecx
10026460:	ret    
10026461:	push   ebp
10026462:	mov    ebp,esp
10026464:	push   ecx
10026465:	push   esi
10026466:	mov    esi,DWORD PTR [ebp+0xc]
10026469:	push   esi
1002646a:	call   0x1002212d
1002646f:	mov    DWORD PTR [ebp+0xc],eax
10026472:	mov    eax,DWORD PTR [esi+0xc]
10026475:	test   al,0x82
10026477:	pop    ecx
10026478:	jne    0x10026493
1002647a:	call   0x1001cd0e
1002647f:	mov    DWORD PTR [eax],0x9
10026485:	or     DWORD PTR [esi+0xc],0x20
10026489:	mov    eax,0xffff
1002648e:	jmp    0x100265ce
10026493:	test   al,0x40
10026495:	je     0x100264a4
10026497:	call   0x1001cd0e
1002649c:	mov    DWORD PTR [eax],0x22
100264a2:	jmp    0x10026485
100264a4:	test   al,0x1
100264a6:	je     0x100264bf
100264a8:	and    DWORD PTR [esi+0x4],0x0
100264ac:	test   al,0x10
100264ae:	je     0x1002653f
100264b4:	mov    ecx,DWORD PTR [esi+0x8]
100264b7:	and    eax,0xfffffffe
100264ba:	mov    DWORD PTR [esi],ecx
100264bc:	mov    DWORD PTR [esi+0xc],eax
100264bf:	mov    eax,DWORD PTR [esi+0xc]
100264c2:	and    DWORD PTR [esi+0x4],0x0
100264c6:	and    DWORD PTR [ebp-0x4],0x0
100264ca:	push   ebx
100264cb:	push   0x2
100264cd:	and    eax,0xffffffef
100264d0:	pop    ebx
100264d1:	or     eax,ebx
100264d3:	test   ax,0x10c
100264d7:	mov    DWORD PTR [esi+0xc],eax
100264da:	jne    0x10026508
100264dc:	call   0x1002128a
100264e1:	add    eax,0x20
100264e4:	cmp    esi,eax
100264e6:	je     0x100264f4
100264e8:	call   0x1002128a
100264ed:	add    eax,0x40
100264f0:	cmp    esi,eax
100264f2:	jne    0x10026501
100264f4:	push   DWORD PTR [ebp+0xc]
100264f7:	call   0x1002432f
100264fc:	test   eax,eax
100264fe:	pop    ecx
100264ff:	jne    0x10026508
10026501:	push   esi
10026502:	call   0x100242eb
10026507:	pop    ecx
10026508:	test   WORD PTR [esi+0xc],0x108
1002650e:	push   edi
1002650f:	je     0x10026598
10026515:	mov    eax,DWORD PTR [esi+0x8]
10026518:	mov    edi,DWORD PTR [esi]
1002651a:	lea    ecx,[eax+0x2]
1002651d:	mov    DWORD PTR [esi],ecx
1002651f:	mov    ecx,DWORD PTR [esi+0x18]
10026522:	sub    edi,eax
10026524:	sub    ecx,ebx
10026526:	test   edi,edi
10026528:	mov    DWORD PTR [esi+0x4],ecx
1002652b:	jle    0x1002654a
1002652d:	push   edi
1002652e:	push   eax
1002652f:	push   DWORD PTR [ebp+0xc]
10026532:	call   0x1002292f
10026537:	add    esp,0xc
1002653a:	mov    DWORD PTR [ebp-0x4],eax
1002653d:	jmp    0x1002658d
1002653f:	or     eax,0x20
10026542:	mov    DWORD PTR [esi+0xc],eax
10026545:	jmp    0x10026489
1002654a:	mov    ecx,DWORD PTR [ebp+0xc]
1002654d:	cmp    ecx,0xffffffff
10026550:	je     0x1002656d
10026552:	cmp    ecx,0xfffffffe
10026555:	je     0x1002656d
10026557:	mov    eax,ecx
10026559:	and    eax,0x1f
1002655c:	mov    edx,ecx
1002655e:	sar    edx,0x5
10026561:	shl    eax,0x6
10026564:	add    eax,DWORD PTR [edx*4+0x100cb080]
1002656b:	jmp    0x10026572
1002656d:	mov    eax,0x100c8148
10026572:	test   BYTE PTR [eax+0x4],0x20
10026576:	je     0x1002658d
10026578:	push   ebx
10026579:	push   0x0
1002657b:	push   0x0
1002657d:	push   ecx
1002657e:	call   0x10020fbd
10026583:	and    eax,edx
10026585:	add    esp,0x10
10026588:	cmp    eax,0xffffffff
1002658b:	je     0x100265ba
1002658d:	mov    eax,DWORD PTR [esi+0x8]
10026590:	mov    ebx,DWORD PTR [ebp+0x8]
10026593:	mov    WORD PTR [eax],bx
10026596:	jmp    0x100265b5
10026598:	push   0x2
1002659a:	lea    eax,[ebp-0x4]
1002659d:	push   eax
1002659e:	push   DWORD PTR [ebp+0xc]
100265a1:	mov    edi,ebx
100265a3:	mov    ebx,DWORD PTR [ebp+0x8]
100265a6:	mov    WORD PTR [ebp-0x4],bx
100265aa:	call   0x1002292f
100265af:	add    esp,0xc
100265b2:	mov    DWORD PTR [ebp-0x4],eax
100265b5:	cmp    DWORD PTR [ebp-0x4],edi
100265b8:	je     0x100265c5
100265ba:	or     DWORD PTR [esi+0xc],0x20
100265be:	mov    eax,0xffff
100265c3:	jmp    0x100265cc
100265c5:	mov    eax,ebx
100265c7:	and    eax,0xffff
100265cc:	pop    edi
100265cd:	pop    ebx
100265ce:	pop    esi
100265cf:	leave  
100265d0:	ret    
100265d1:	xor    eax,eax
100265d3:	push   eax
100265d4:	push   eax
100265d5:	push   0x3
100265d7:	push   eax
100265d8:	push   0x3
100265da:	push   0x40000000
100265df:	push   0x100b4088
100265e4:	call   DWORD PTR ds:0x1002f138
100265ea:	mov    ds:0x100c8994,eax
100265ef:	ret    
100265f0:	mov    eax,ds:0x100c8994
100265f5:	cmp    eax,0xffffffff
100265f8:	push   esi
100265f9:	mov    esi,DWORD PTR ds:0x1002f064
100265ff:	je     0x10026609
10026601:	cmp    eax,0xfffffffe
10026604:	je     0x10026609
10026606:	push   eax
10026607:	call   esi
10026609:	mov    eax,ds:0x100c8990
1002660e:	cmp    eax,0xffffffff
10026611:	je     0x1002661b
10026613:	cmp    eax,0xfffffffe
10026616:	je     0x1002661b
10026618:	push   eax
10026619:	call   esi
1002661b:	pop    esi
1002661c:	ret    
1002661d:	push   ebp
1002661e:	mov    ebp,esp
10026620:	sub    esp,0x28
10026623:	mov    eax,ds:0x100c7654
10026628:	xor    eax,ebp
1002662a:	mov    DWORD PTR [ebp-0x4],eax
1002662d:	push   ebx
1002662e:	push   esi
1002662f:	mov    esi,DWORD PTR [ebp+0x8]
10026632:	push   edi
10026633:	push   DWORD PTR [ebp+0x10]
10026636:	mov    edi,DWORD PTR [ebp+0xc]
10026639:	lea    ecx,[ebp-0x24]
1002663c:	call   0x1001924a
10026641:	lea    eax,[ebp-0x24]
10026644:	push   eax
10026645:	xor    ebx,ebx
10026647:	push   ebx
10026648:	push   ebx
10026649:	push   ebx
1002664a:	push   ebx
1002664b:	push   edi
1002664c:	lea    eax,[ebp-0x28]
1002664f:	push   eax
10026650:	lea    eax,[ebp-0x10]
10026653:	push   eax
10026654:	call   0x10026b41
10026659:	mov    DWORD PTR [ebp-0x14],eax
1002665c:	lea    eax,[ebp-0x10]
1002665f:	push   esi
10026660:	push   eax
10026661:	call   0x10024a67
10026666:	add    esp,0x28
10026669:	test   BYTE PTR [ebp-0x14],0x3
1002666d:	jne    0x1002669a
1002666f:	cmp    eax,0x1
10026672:	jne    0x10026685
10026674:	cmp    BYTE PTR [ebp-0x18],bl
10026677:	je     0x10026680
10026679:	mov    eax,DWORD PTR [ebp-0x1c]
1002667c:	and    DWORD PTR [eax+0x70],0xfffffffd
10026680:	push   0x3
10026682:	pop    eax
10026683:	jmp    0x100266b4
10026685:	cmp    eax,0x2
10026688:	jne    0x100266a6
1002668a:	cmp    BYTE PTR [ebp-0x18],bl
1002668d:	je     0x10026696
1002668f:	mov    eax,DWORD PTR [ebp-0x1c]
10026692:	and    DWORD PTR [eax+0x70],0xfffffffd
10026696:	push   0x4
10026698:	jmp    0x10026682
1002669a:	test   BYTE PTR [ebp-0x14],0x1
1002669e:	jne    0x1002668a
100266a0:	test   BYTE PTR [ebp-0x14],0x2
100266a4:	jne    0x10026674
100266a6:	cmp    BYTE PTR [ebp-0x18],bl
100266a9:	je     0x100266b2
100266ab:	mov    eax,DWORD PTR [ebp-0x1c]
100266ae:	and    DWORD PTR [eax+0x70],0xfffffffd
100266b2:	xor    eax,eax
100266b4:	mov    ecx,DWORD PTR [ebp-0x4]
100266b7:	pop    edi
100266b8:	pop    esi
100266b9:	xor    ecx,ebp
100266bb:	pop    ebx
100266bc:	call   0x10018773
100266c1:	leave  
100266c2:	ret    
100266c3:	push   ebp
100266c4:	mov    ebp,esp
100266c6:	sub    esp,0x28
100266c9:	mov    eax,ds:0x100c7654
100266ce:	xor    eax,ebp
100266d0:	mov    DWORD PTR [ebp-0x4],eax
100266d3:	push   ebx
100266d4:	push   esi
100266d5:	mov    esi,DWORD PTR [ebp+0x8]
100266d8:	push   edi
100266d9:	push   DWORD PTR [ebp+0x10]
100266dc:	mov    edi,DWORD PTR [ebp+0xc]
100266df:	lea    ecx,[ebp-0x24]
100266e2:	call   0x1001924a
100266e7:	lea    eax,[ebp-0x24]
100266ea:	push   eax
100266eb:	xor    ebx,ebx
100266ed:	push   ebx
100266ee:	push   ebx
100266ef:	push   ebx
100266f0:	push   ebx
100266f1:	push   edi
100266f2:	lea    eax,[ebp-0x28]
100266f5:	push   eax
100266f6:	lea    eax,[ebp-0x10]
100266f9:	push   eax
100266fa:	call   0x10026b41
100266ff:	mov    DWORD PTR [ebp-0x14],eax
10026702:	lea    eax,[ebp-0x10]
10026705:	push   esi
10026706:	push   eax
10026707:	call   0x10024fa9
1002670c:	add    esp,0x28
1002670f:	test   BYTE PTR [ebp-0x14],0x3
10026713:	jne    0x10026740
10026715:	cmp    eax,0x1
10026718:	jne    0x1002672b
1002671a:	cmp    BYTE PTR [ebp-0x18],bl
1002671d:	je     0x10026726
1002671f:	mov    eax,DWORD PTR [ebp-0x1c]
10026722:	and    DWORD PTR [eax+0x70],0xfffffffd
10026726:	push   0x3
10026728:	pop    eax
10026729:	jmp    0x1002675a
1002672b:	cmp    eax,0x2
1002672e:	jne    0x1002674c
10026730:	cmp    BYTE PTR [ebp-0x18],bl
10026733:	je     0x1002673c
10026735:	mov    eax,DWORD PTR [ebp-0x1c]
10026738:	and    DWORD PTR [eax+0x70],0xfffffffd
1002673c:	push   0x4
1002673e:	jmp    0x10026728
10026740:	test   BYTE PTR [ebp-0x14],0x1
10026744:	jne    0x10026730
10026746:	test   BYTE PTR [ebp-0x14],0x2
1002674a:	jne    0x1002671a
1002674c:	cmp    BYTE PTR [ebp-0x18],bl
1002674f:	je     0x10026758
10026751:	mov    eax,DWORD PTR [ebp-0x1c]
10026754:	and    DWORD PTR [eax+0x70],0xfffffffd
10026758:	xor    eax,eax
1002675a:	mov    ecx,DWORD PTR [ebp-0x4]
1002675d:	pop    edi
1002675e:	pop    esi
1002675f:	xor    ecx,ebp
10026761:	pop    ebx
10026762:	call   0x10018773
10026767:	leave  
10026768:	ret    
10026769:	push   ebp
1002676a:	mov    ebp,esp
1002676c:	mov    ecx,DWORD PTR [ebp+0x14]
1002676f:	push   ebx
10026770:	push   esi
10026771:	mov    esi,DWORD PTR [ebp+0x8]
10026774:	xor    ebx,ebx
10026776:	cmp    esi,ebx
10026778:	push   edi
10026779:	mov    edi,DWORD PTR [ecx+0xc]
1002677c:	jne    0x1002679c
1002677e:	call   0x1001cd0e
10026783:	push   0x16
10026785:	pop    esi
10026786:	mov    DWORD PTR [eax],esi
10026788:	push   ebx
10026789:	push   ebx
1002678a:	push   ebx
1002678b:	push   ebx
1002678c:	push   ebx
1002678d:	call   0x10018dbf
10026792:	add    esp,0x14
10026795:	mov    eax,esi
10026797:	jmp    0x10026821
1002679c:	cmp    DWORD PTR [ebp+0xc],ebx
1002679f:	jbe    0x1002677e
100267a1:	mov    edx,DWORD PTR [ebp+0x10]
100267a4:	cmp    edx,ebx
100267a6:	mov    BYTE PTR [esi],bl
100267a8:	jle    0x100267ae
100267aa:	mov    eax,edx
100267ac:	jmp    0x100267b0
100267ae:	xor    eax,eax
100267b0:	inc    eax
100267b1:	cmp    DWORD PTR [ebp+0xc],eax
100267b4:	ja     0x100267c4
100267b6:	call   0x1001cd0e
100267bb:	push   0x22
100267bd:	pop    ecx
100267be:	mov    DWORD PTR [eax],ecx
100267c0:	mov    esi,ecx
100267c2:	jmp    0x10026788
100267c4:	cmp    edx,ebx
100267c6:	mov    BYTE PTR [esi],0x30
100267c9:	lea    eax,[esi+0x1]
100267cc:	jle    0x100267e8
100267ce:	mov    cl,BYTE PTR [edi]
100267d0:	cmp    cl,bl
100267d2:	je     0x100267da
100267d4:	movsx  ecx,cl
100267d7:	inc    edi
100267d8:	jmp    0x100267dd
100267da:	push   0x30
100267dc:	pop    ecx
100267dd:	mov    BYTE PTR [eax],cl
100267df:	inc    eax
100267e0:	dec    edx
100267e1:	cmp    edx,ebx
100267e3:	jg     0x100267ce
100267e5:	mov    ecx,DWORD PTR [ebp+0x14]
100267e8:	cmp    edx,ebx
100267ea:	mov    BYTE PTR [eax],bl
100267ec:	jl     0x10026800
100267ee:	cmp    BYTE PTR [edi],0x35
100267f1:	jl     0x10026800
100267f3:	jmp    0x100267f8
100267f5:	mov    BYTE PTR [eax],0x30
100267f8:	dec    eax
100267f9:	cmp    BYTE PTR [eax],0x39
100267fc:	je     0x100267f5
100267fe:	inc    BYTE PTR [eax]
10026800:	cmp    BYTE PTR [esi],0x31
10026803:	jne    0x1002680a
10026805:	inc    DWORD PTR [ecx+0x4]
10026808:	jmp    0x1002681f
1002680a:	lea    edi,[esi+0x1]
1002680d:	push   edi
1002680e:	call   0x10019010
10026813:	inc    eax
10026814:	push   eax
10026815:	push   edi
10026816:	push   esi
10026817:	call   0x1001cef0
1002681c:	add    esp,0x10
1002681f:	xor    eax,eax
10026821:	pop    edi
10026822:	pop    esi
10026823:	pop    ebx
10026824:	pop    ebp
10026825:	ret    
10026826:	push   ebp
10026827:	mov    ebp,esp
10026829:	push   ecx
1002682a:	mov    edx,DWORD PTR [ebp+0xc]
1002682d:	movzx  eax,WORD PTR [edx+0x6]
10026831:	push   ebx
10026832:	mov    ecx,eax
10026834:	push   esi
10026835:	push   edi
10026836:	shr    ecx,0x4
10026839:	and    eax,0x8000
1002683e:	mov    edi,0x7ff
10026843:	and    ecx,edi
10026845:	mov    DWORD PTR [ebp+0xc],eax
10026848:	mov    eax,DWORD PTR [edx+0x4]
1002684b:	mov    edx,DWORD PTR [edx]
1002684d:	movzx  ebx,cx
10026850:	mov    esi,0x80000000
10026855:	and    eax,0xfffff
1002685a:	test   ebx,ebx
1002685c:	mov    DWORD PTR [ebp-0x4],esi
1002685f:	je     0x10026874
10026861:	cmp    ebx,edi
10026863:	je     0x1002686d
10026865:	add    ecx,0x3c00
1002686b:	jmp    0x10026895
1002686d:	mov    edi,0x7fff
10026872:	jmp    0x10026898
10026874:	xor    ebx,ebx
10026876:	cmp    eax,ebx
10026878:	jne    0x1002688c
1002687a:	cmp    edx,ebx
1002687c:	jne    0x1002688c
1002687e:	mov    eax,DWORD PTR [ebp+0x8]
10026881:	mov    cx,WORD PTR [ebp+0xc]
10026885:	mov    DWORD PTR [eax+0x4],ebx
10026888:	mov    DWORD PTR [eax],ebx
1002688a:	jmp    0x100268d8
1002688c:	add    ecx,0x3c01
10026892:	mov    DWORD PTR [ebp-0x4],ebx
10026895:	movzx  edi,cx
10026898:	mov    ecx,edx
1002689a:	shr    ecx,0x15
1002689d:	shl    eax,0xb
100268a0:	or     ecx,eax
100268a2:	or     ecx,DWORD PTR [ebp-0x4]
100268a5:	mov    eax,DWORD PTR [ebp+0x8]
100268a8:	shl    edx,0xb
100268ab:	test   esi,ecx
100268ad:	mov    DWORD PTR [eax+0x4],ecx
100268b0:	mov    DWORD PTR [eax],edx
100268b2:	jne    0x100268d3
100268b4:	mov    ecx,DWORD PTR [eax]
100268b6:	mov    edx,DWORD PTR [eax+0x4]
100268b9:	mov    ebx,ecx
100268bb:	add    edx,edx
100268bd:	shr    ebx,0x1f
100268c0:	or     edx,ebx
100268c2:	add    ecx,ecx
100268c4:	add    edi,0xffff
100268ca:	test   esi,edx
100268cc:	mov    DWORD PTR [eax+0x4],edx
100268cf:	mov    DWORD PTR [eax],ecx
100268d1:	je     0x100268b4
100268d3:	mov    ecx,DWORD PTR [ebp+0xc]
100268d6:	or     ecx,edi
100268d8:	pop    edi
100268d9:	pop    esi
100268da:	mov    WORD PTR [eax+0x8],cx
100268de:	pop    ebx
100268df:	leave  
100268e0:	ret    
100268e1:	push   ebp
100268e2:	mov    ebp,esp
100268e4:	sub    esp,0x30
100268e7:	mov    eax,ds:0x100c7654
100268ec:	xor    eax,ebp
100268ee:	mov    DWORD PTR [ebp-0x4],eax
100268f1:	mov    eax,DWORD PTR [ebp+0x14]
100268f4:	push   ebx
100268f5:	mov    ebx,DWORD PTR [ebp+0x10]
100268f8:	push   esi
100268f9:	mov    DWORD PTR [ebp-0x30],eax
100268fc:	push   edi
100268fd:	lea    eax,[ebp+0x8]
10026900:	push   eax
10026901:	lea    eax,[ebp-0x10]
10026904:	push   eax
10026905:	call   0x10026826
1002690a:	pop    ecx
1002690b:	pop    ecx
1002690c:	lea    eax,[ebp-0x2c]
1002690f:	push   eax
10026910:	push   0x0
10026912:	push   0x11
10026914:	sub    esp,0xc
10026917:	lea    esi,[ebp-0x10]
1002691a:	mov    edi,esp
1002691c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002691d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002691e:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
10026920:	call   0x10027201
10026925:	mov    esi,DWORD PTR [ebp-0x30]
10026928:	mov    DWORD PTR [ebx+0x8],eax
1002692b:	movsx  eax,BYTE PTR [ebp-0x2a]
1002692f:	mov    DWORD PTR [ebx],eax
10026931:	movsx  eax,WORD PTR [ebp-0x2c]
10026935:	mov    DWORD PTR [ebx+0x4],eax
10026938:	lea    eax,[ebp-0x28]
1002693b:	push   eax
1002693c:	push   DWORD PTR [ebp+0x18]
1002693f:	push   esi
10026940:	call   0x1001ce58
10026945:	add    esp,0x24
10026948:	test   eax,eax
1002694a:	je     0x1002695b
1002694c:	xor    eax,eax
1002694e:	push   eax
1002694f:	push   eax
10026950:	push   eax
10026951:	push   eax
10026952:	push   eax
10026953:	call   0x10018cc3
10026958:	add    esp,0x14
1002695b:	mov    ecx,DWORD PTR [ebp-0x4]
1002695e:	pop    edi
1002695f:	mov    DWORD PTR [ebx+0xc],esi
10026962:	pop    esi
10026963:	mov    eax,ebx
10026965:	xor    ecx,ebp
10026967:	pop    ebx
10026968:	call   0x10018773
1002696d:	leave  
1002696e:	ret    
1002696f:	int3   
10026970:	push   edi
10026971:	push   esi
10026972:	push   ebp
10026973:	xor    edi,edi
10026975:	xor    ebp,ebp
10026977:	mov    eax,DWORD PTR [esp+0x14]
1002697b:	or     eax,eax
1002697d:	jge    0x10026994
1002697f:	inc    edi
10026980:	inc    ebp
10026981:	mov    edx,DWORD PTR [esp+0x10]
10026985:	neg    eax
10026987:	neg    edx
10026989:	sbb    eax,0x0
1002698c:	mov    DWORD PTR [esp+0x14],eax
10026990:	mov    DWORD PTR [esp+0x10],edx
10026994:	mov    eax,DWORD PTR [esp+0x1c]
10026998:	or     eax,eax
1002699a:	jge    0x100269b0
1002699c:	inc    edi
1002699d:	mov    edx,DWORD PTR [esp+0x18]
100269a1:	neg    eax
100269a3:	neg    edx
100269a5:	sbb    eax,0x0
100269a8:	mov    DWORD PTR [esp+0x1c],eax
100269ac:	mov    DWORD PTR [esp+0x18],edx
100269b0:	or     eax,eax
100269b2:	jne    0x100269dc
100269b4:	mov    ecx,DWORD PTR [esp+0x18]
100269b8:	mov    eax,DWORD PTR [esp+0x14]
100269bc:	xor    edx,edx
100269be:	div    ecx
100269c0:	mov    ebx,eax
100269c2:	mov    eax,DWORD PTR [esp+0x10]
100269c6:	div    ecx
100269c8:	mov    esi,eax
100269ca:	mov    eax,ebx
100269cc:	mul    DWORD PTR [esp+0x18]
100269d0:	mov    ecx,eax
100269d2:	mov    eax,esi
100269d4:	mul    DWORD PTR [esp+0x18]
100269d8:	add    edx,ecx
100269da:	jmp    0x10026a23
100269dc:	mov    ebx,eax
100269de:	mov    ecx,DWORD PTR [esp+0x18]
100269e2:	mov    edx,DWORD PTR [esp+0x14]
100269e6:	mov    eax,DWORD PTR [esp+0x10]
100269ea:	shr    ebx,1
100269ec:	rcr    ecx,1
100269ee:	shr    edx,1
100269f0:	rcr    eax,1
100269f2:	or     ebx,ebx
100269f4:	jne    0x100269ea
100269f6:	div    ecx
100269f8:	mov    esi,eax
100269fa:	mul    DWORD PTR [esp+0x1c]
100269fe:	mov    ecx,eax
10026a00:	mov    eax,DWORD PTR [esp+0x18]
10026a04:	mul    esi
10026a06:	add    edx,ecx
10026a08:	jb     0x10026a18
10026a0a:	cmp    edx,DWORD PTR [esp+0x14]
10026a0e:	ja     0x10026a18
10026a10:	jb     0x10026a21
10026a12:	cmp    eax,DWORD PTR [esp+0x10]
10026a16:	jbe    0x10026a21
10026a18:	dec    esi
10026a19:	sub    eax,DWORD PTR [esp+0x18]
10026a1d:	sbb    edx,DWORD PTR [esp+0x1c]
10026a21:	xor    ebx,ebx
10026a23:	sub    eax,DWORD PTR [esp+0x10]
10026a27:	sbb    edx,DWORD PTR [esp+0x14]
10026a2b:	dec    ebp
10026a2c:	jns    0x10026a35
10026a2e:	neg    edx
10026a30:	neg    eax
10026a32:	sbb    edx,0x0
10026a35:	mov    ecx,edx
10026a37:	mov    edx,ebx
10026a39:	mov    ebx,ecx
10026a3b:	mov    ecx,eax
10026a3d:	mov    eax,esi
10026a3f:	dec    edi
10026a40:	jne    0x10026a49
10026a42:	neg    edx
10026a44:	neg    eax
10026a46:	sbb    edx,0x0
10026a49:	pop    ebp
10026a4a:	pop    esi
10026a4b:	pop    edi
10026a4c:	ret    0x10
10026a4f:	int3   
10026a50:	cmp    cl,0x40
10026a53:	jae    0x10026a6a
10026a55:	cmp    cl,0x20
10026a58:	jae    0x10026a60
10026a5a:	shrd   eax,edx,cl
10026a5d:	shr    edx,cl
10026a5f:	ret    
10026a60:	mov    eax,edx
10026a62:	xor    edx,edx
10026a64:	and    cl,0x1f
10026a67:	shr    eax,cl
10026a69:	ret    
10026a6a:	xor    eax,eax
10026a6c:	xor    edx,edx
10026a6e:	ret    
10026a6f:	push   ebp
10026a70:	mov    ebp,esp
10026a72:	mov    eax,DWORD PTR [ebp+0x10]
10026a75:	mov    ecx,DWORD PTR [ebp+0xc]
10026a78:	and    eax,0xfff7ffff
10026a7d:	and    ecx,eax
10026a7f:	test   ecx,0xfcf0fce0
10026a85:	push   esi
10026a86:	je     0x10026ab9
10026a88:	push   edi
10026a89:	mov    edi,DWORD PTR [ebp+0x8]
10026a8c:	xor    esi,esi
10026a8e:	cmp    edi,esi
10026a90:	je     0x10026a9d
10026a92:	push   esi
10026a93:	push   esi
10026a94:	call   0x10027bf5
10026a99:	pop    ecx
10026a9a:	pop    ecx
10026a9b:	mov    DWORD PTR [edi],eax
10026a9d:	call   0x1001cd0e
10026aa2:	push   0x16
10026aa4:	pop    edi
10026aa5:	push   esi
10026aa6:	push   esi
10026aa7:	push   esi
10026aa8:	push   esi
10026aa9:	push   esi
10026aaa:	mov    DWORD PTR [eax],edi
10026aac:	call   0x10018dbf
10026ab1:	add    esp,0x14
10026ab4:	mov    eax,edi
10026ab6:	pop    edi
10026ab7:	jmp    0x10026ad6
10026ab9:	mov    esi,DWORD PTR [ebp+0x8]
10026abc:	test   esi,esi
10026abe:	push   eax
10026abf:	push   DWORD PTR [ebp+0xc]
10026ac2:	je     0x10026acd
10026ac4:	call   0x10027bf5
10026ac9:	mov    DWORD PTR [esi],eax
10026acb:	jmp    0x10026ad2
10026acd:	call   0x10027bf5
10026ad2:	pop    ecx
10026ad3:	pop    ecx
10026ad4:	xor    eax,eax
10026ad6:	pop    esi
10026ad7:	pop    ebp
10026ad8:	ret    
10026ad9:	int3   
10026ada:	int3   
10026adb:	int3   
10026adc:	int3   
10026add:	int3   
10026ade:	int3   
10026adf:	int3   
10026ae0:	push   ebp
10026ae1:	mov    ebp,esp
10026ae3:	push   edi
10026ae4:	push   esi
10026ae5:	push   ebx
10026ae6:	mov    ecx,DWORD PTR [ebp+0x10]
10026ae9:	or     ecx,ecx
10026aeb:	je     0x10026b3a
10026aed:	mov    esi,DWORD PTR [ebp+0x8]
10026af0:	mov    edi,DWORD PTR [ebp+0xc]
10026af3:	mov    bh,0x41
10026af5:	mov    bl,0x5a
10026af7:	mov    dh,0x20
10026af9:	lea    ecx,[ecx+0x0]
10026afc:	mov    ah,BYTE PTR [esi]
10026afe:	or     ah,ah
10026b00:	mov    al,BYTE PTR [edi]
10026b02:	je     0x10026b2b
10026b04:	or     al,al
10026b06:	je     0x10026b2b
10026b08:	add    esi,0x1
10026b0b:	add    edi,0x1
10026b0e:	cmp    ah,bh
10026b10:	jb     0x10026b18
10026b12:	cmp    ah,bl
10026b14:	ja     0x10026b18
10026b16:	add    ah,dh
10026b18:	cmp    al,bh
10026b1a:	jb     0x10026b22
10026b1c:	cmp    al,bl
10026b1e:	ja     0x10026b22
10026b20:	add    al,dh
10026b22:	cmp    ah,al
10026b24:	jne    0x10026b31
10026b26:	sub    ecx,0x1
10026b29:	jne    0x10026afc
10026b2b:	xor    ecx,ecx
10026b2d:	cmp    ah,al
10026b2f:	je     0x10026b3a
10026b31:	mov    ecx,0xffffffff
10026b36:	jb     0x10026b3a
10026b38:	neg    ecx
10026b3a:	mov    eax,ecx
10026b3c:	pop    ebx
10026b3d:	pop    esi
10026b3e:	pop    edi
10026b3f:	leave  
10026b40:	ret    
10026b41:	push   ebp
10026b42:	mov    ebp,esp
10026b44:	sub    esp,0x7c
10026b47:	mov    eax,ds:0x100c7654
10026b4c:	xor    eax,ebp
10026b4e:	mov    DWORD PTR [ebp-0x4],eax
10026b51:	mov    eax,DWORD PTR [ebp+0x8]
10026b54:	push   ebx
10026b55:	xor    ebx,ebx
10026b57:	push   esi
10026b58:	xor    esi,esi
10026b5a:	mov    DWORD PTR [ebp-0x7c],eax
10026b5d:	mov    eax,DWORD PTR [ebp+0xc]
10026b60:	inc    esi
10026b61:	xor    ecx,ecx
10026b63:	cmp    DWORD PTR [ebp+0x24],ebx
10026b66:	push   edi
10026b67:	mov    DWORD PTR [ebp-0x70],eax
10026b6a:	lea    edi,[ebp-0x20]
10026b6d:	mov    DWORD PTR [ebp-0x74],ebx
10026b70:	mov    DWORD PTR [ebp-0x68],esi
10026b73:	mov    DWORD PTR [ebp-0x4c],ebx
10026b76:	mov    DWORD PTR [ebp-0x58],ebx
10026b79:	mov    DWORD PTR [ebp-0x5c],ebx
10026b7c:	mov    DWORD PTR [ebp-0x60],ebx
10026b7f:	mov    DWORD PTR [ebp-0x64],ebx
10026b82:	mov    DWORD PTR [ebp-0x50],ebx
10026b85:	mov    DWORD PTR [ebp-0x6c],ebx
10026b88:	jne    0x10026ba9
10026b8a:	call   0x1001cd0e
10026b8f:	push   ebx
10026b90:	push   ebx
10026b91:	push   ebx
10026b92:	push   ebx
10026b93:	push   ebx
10026b94:	mov    DWORD PTR [eax],0x16
10026b9a:	call   0x10018dbf
10026b9f:	add    esp,0x14
10026ba2:	xor    eax,eax
10026ba4:	jmp    0x100271c2
10026ba9:	mov    edx,DWORD PTR [ebp+0x10]
10026bac:	mov    DWORD PTR [ebp-0x54],edx
10026baf:	mov    al,BYTE PTR [edx]
10026bb1:	cmp    al,0x20
10026bb3:	je     0x10026bc1
10026bb5:	cmp    al,0x9
10026bb7:	je     0x10026bc1
10026bb9:	cmp    al,0xa
10026bbb:	je     0x10026bc1
10026bbd:	cmp    al,0xd
10026bbf:	jne    0x10026bc4
10026bc1:	inc    edx
10026bc2:	jmp    0x10026baf
10026bc4:	mov    bl,0x30
10026bc6:	mov    al,BYTE PTR [edx]
10026bc8:	inc    edx
10026bc9:	cmp    ecx,0xb
10026bcc:	ja     0x10026e01
10026bd2:	jmp    DWORD PTR [ecx*4+0x100271d1]
10026bd9:	mov    cl,al
10026bdb:	sub    cl,0x31
10026bde:	cmp    cl,0x8
10026be1:	ja     0x10026be9
10026be3:	push   0x3
10026be5:	pop    ecx
10026be6:	dec    edx
10026be7:	jmp    0x10026bc6
10026be9:	mov    ecx,DWORD PTR [ebp+0x24]
10026bec:	mov    ecx,DWORD PTR [ecx]
10026bee:	mov    ecx,DWORD PTR [ecx+0xbc]
10026bf4:	mov    ecx,DWORD PTR [ecx]
10026bf6:	cmp    al,BYTE PTR [ecx]
10026bf8:	jne    0x10026bff
10026bfa:	push   0x5
10026bfc:	pop    ecx
10026bfd:	jmp    0x10026bc6
10026bff:	movsx  eax,al
10026c02:	sub    eax,0x2b
10026c05:	je     0x10026c24
10026c07:	dec    eax
10026c08:	dec    eax
10026c09:	je     0x10026c18
10026c0b:	sub    eax,0x3
10026c0e:	jne    0x10026d9f
10026c14:	mov    ecx,esi
10026c16:	jmp    0x10026bc6
10026c18:	push   0x2
10026c1a:	pop    ecx
10026c1b:	mov    DWORD PTR [ebp-0x74],0x8000
10026c22:	jmp    0x10026bc6
10026c24:	and    DWORD PTR [ebp-0x74],0x0
10026c28:	push   0x2
10026c2a:	pop    ecx
10026c2b:	jmp    0x10026bc6
10026c2d:	mov    cl,al
10026c2f:	sub    cl,0x31
10026c32:	cmp    cl,0x8
10026c35:	mov    DWORD PTR [ebp-0x58],esi
10026c38:	jbe    0x10026be3
10026c3a:	mov    ecx,DWORD PTR [ebp+0x24]
10026c3d:	mov    ecx,DWORD PTR [ecx]
10026c3f:	mov    ecx,DWORD PTR [ecx+0xbc]
10026c45:	mov    ecx,DWORD PTR [ecx]
10026c47:	cmp    al,BYTE PTR [ecx]
10026c49:	jne    0x10026c4f
10026c4b:	push   0x4
10026c4d:	jmp    0x10026bfc
10026c4f:	cmp    al,0x2b
10026c51:	je     0x10026c7b
10026c53:	cmp    al,0x2d
10026c55:	je     0x10026c7b
10026c57:	cmp    al,bl
10026c59:	je     0x10026c14
10026c5b:	cmp    al,0x43
10026c5d:	jle    0x10026d9f
10026c63:	cmp    al,0x45
10026c65:	jle    0x10026c77
10026c67:	cmp    al,0x63
10026c69:	jle    0x10026d9f
10026c6f:	cmp    al,0x65
10026c71:	jg     0x10026d9f
10026c77:	push   0x6
10026c79:	jmp    0x10026bfc
10026c7b:	dec    edx
10026c7c:	push   0xb
10026c7e:	jmp    0x10026bfc
10026c83:	mov    cl,al
10026c85:	sub    cl,0x31
10026c88:	cmp    cl,0x8
10026c8b:	jbe    0x10026be3
10026c91:	mov    ecx,DWORD PTR [ebp+0x24]
10026c94:	mov    ecx,DWORD PTR [ecx]
10026c96:	mov    ecx,DWORD PTR [ecx+0xbc]
10026c9c:	mov    ecx,DWORD PTR [ecx]
10026c9e:	cmp    al,BYTE PTR [ecx]
10026ca0:	je     0x10026bfa
10026ca6:	cmp    al,bl
10026ca8:	je     0x10026c14
10026cae:	mov    edx,DWORD PTR [ebp-0x54]
10026cb1:	jmp    0x10026dca
10026cb6:	mov    DWORD PTR [ebp-0x58],esi
10026cb9:	jmp    0x10026cd5
10026cbb:	cmp    al,0x39
10026cbd:	jg     0x10026cd9
10026cbf:	cmp    DWORD PTR [ebp-0x4c],0x19
10026cc3:	jae    0x10026ccf
10026cc5:	inc    DWORD PTR [ebp-0x4c]
10026cc8:	sub    al,bl
10026cca:	mov    BYTE PTR [edi],al
10026ccc:	inc    edi
10026ccd:	jmp    0x10026cd2
10026ccf:	inc    DWORD PTR [ebp-0x50]
10026cd2:	mov    al,BYTE PTR [edx]
10026cd4:	inc    edx
10026cd5:	cmp    al,bl
10026cd7:	jge    0x10026cbb
10026cd9:	mov    ecx,DWORD PTR [ebp+0x24]
10026cdc:	mov    ecx,DWORD PTR [ecx]
10026cde:	mov    ecx,DWORD PTR [ecx+0xbc]
10026ce4:	mov    ecx,DWORD PTR [ecx]
10026ce6:	cmp    al,BYTE PTR [ecx]
10026ce8:	je     0x10026c4b
10026cee:	cmp    al,0x2b
10026cf0:	je     0x10026c7b
10026cf2:	cmp    al,0x2d
10026cf4:	je     0x10026c7b
10026cf6:	jmp    0x10026c5b
10026cfb:	cmp    DWORD PTR [ebp-0x4c],0x0
10026cff:	mov    DWORD PTR [ebp-0x58],esi
10026d02:	mov    DWORD PTR [ebp-0x5c],esi
10026d05:	jne    0x10026d2d
10026d07:	jmp    0x10026d0f
10026d09:	dec    DWORD PTR [ebp-0x50]
10026d0c:	mov    al,BYTE PTR [edx]
10026d0e:	inc    edx
10026d0f:	cmp    al,bl
10026d11:	je     0x10026d09
10026d13:	jmp    0x10026d2d
10026d15:	cmp    al,0x39
10026d17:	jg     0x10026cee
10026d19:	cmp    DWORD PTR [ebp-0x4c],0x19
10026d1d:	jae    0x10026d2a
10026d1f:	inc    DWORD PTR [ebp-0x4c]
10026d22:	sub    al,bl
10026d24:	mov    BYTE PTR [edi],al
10026d26:	inc    edi
10026d27:	dec    DWORD PTR [ebp-0x50]
10026d2a:	mov    al,BYTE PTR [edx]
10026d2c:	inc    edx
10026d2d:	cmp    al,bl
10026d2f:	jge    0x10026d15
10026d31:	jmp    0x10026cee
10026d33:	sub    al,bl
10026d35:	cmp    al,0x9
10026d37:	mov    DWORD PTR [ebp-0x5c],esi
10026d3a:	ja     0x10026cae
10026d40:	push   0x4
10026d42:	jmp    0x10026be5
10026d47:	lea    ecx,[edx-0x2]
10026d4a:	mov    DWORD PTR [ebp-0x54],ecx
10026d4d:	mov    cl,al
10026d4f:	sub    cl,0x31
10026d52:	cmp    cl,0x8
10026d55:	ja     0x10026d5e
10026d57:	push   0x9
10026d59:	jmp    0x10026be5
10026d5e:	movsx  eax,al
10026d61:	sub    eax,0x2b
10026d64:	je     0x10026d86
10026d66:	dec    eax
10026d67:	dec    eax
10026d68:	je     0x10026d7a
10026d6a:	sub    eax,0x3
10026d6d:	jne    0x10026cae
10026d73:	push   0x8
10026d75:	jmp    0x10026bfc
10026d7a:	or     DWORD PTR [ebp-0x68],0xffffffff
10026d7e:	push   0x7
10026d80:	pop    ecx
10026d81:	jmp    0x10026bc6
10026d86:	push   0x7
10026d88:	jmp    0x10026bfc
10026d8d:	mov    DWORD PTR [ebp-0x60],esi
10026d90:	jmp    0x10026d95
10026d92:	mov    al,BYTE PTR [edx]
10026d94:	inc    edx
10026d95:	cmp    al,bl
10026d97:	je     0x10026d92
10026d99:	sub    al,0x31
10026d9b:	cmp    al,0x8
10026d9d:	jbe    0x10026d57
10026d9f:	dec    edx
10026da0:	jmp    0x10026dca
10026da2:	mov    cl,al
10026da4:	sub    cl,0x31
10026da7:	cmp    cl,0x8
10026daa:	jbe    0x10026d57
10026dac:	cmp    al,bl
10026dae:	jmp    0x10026d6d
10026db0:	cmp    DWORD PTR [ebp+0x20],0x0
10026db4:	je     0x10026dfd
10026db6:	movsx  eax,al
10026db9:	sub    eax,0x2b
10026dbc:	lea    ecx,[edx-0x1]
10026dbf:	mov    DWORD PTR [ebp-0x54],ecx
10026dc2:	je     0x10026d86
10026dc4:	dec    eax
10026dc5:	dec    eax
10026dc6:	je     0x10026d7a
10026dc8:	mov    edx,ecx
10026dca:	cmp    DWORD PTR [ebp-0x58],0x0
10026dce:	mov    eax,DWORD PTR [ebp-0x70]
10026dd1:	mov    DWORD PTR [eax],edx
10026dd3:	je     0x1002717d
10026dd9:	push   0x18
10026ddb:	pop    eax
10026ddc:	cmp    DWORD PTR [ebp-0x4c],eax
10026ddf:	jbe    0x10026df1
10026de1:	cmp    BYTE PTR [ebp-0x9],0x5
10026de5:	jl     0x10026dea
10026de7:	inc    BYTE PTR [ebp-0x9]
10026dea:	dec    edi
10026deb:	inc    DWORD PTR [ebp-0x50]
10026dee:	mov    DWORD PTR [ebp-0x4c],eax
10026df1:	cmp    DWORD PTR [ebp-0x4c],0x0
10026df5:	jbe    0x100271a4
10026dfb:	jmp    0x10026e56
10026dfd:	push   0xa
10026dff:	pop    ecx
10026e00:	dec    edx
10026e01:	cmp    ecx,0xa
10026e04:	jne    0x10026bc6
10026e0a:	jmp    0x10026dca
10026e0c:	mov    DWORD PTR [ebp-0x60],esi
10026e0f:	xor    ecx,ecx
10026e11:	jmp    0x10026e2c
10026e13:	cmp    al,0x39
10026e15:	jg     0x10026e37
10026e17:	imul   ecx,ecx,0xa
10026e1a:	movsx  esi,al
10026e1d:	lea    ecx,[ecx+esi*1-0x30]
10026e21:	cmp    ecx,0x1450
10026e27:	jg     0x10026e32
10026e29:	mov    al,BYTE PTR [edx]
10026e2b:	inc    edx
10026e2c:	cmp    al,bl
10026e2e:	jge    0x10026e13
10026e30:	jmp    0x10026e37
10026e32:	mov    ecx,0x1451
10026e37:	mov    DWORD PTR [ebp-0x64],ecx
10026e3a:	jmp    0x10026e47
10026e3c:	cmp    al,0x39
10026e3e:	jg     0x10026d9f
10026e44:	mov    al,BYTE PTR [edx]
10026e46:	inc    edx
10026e47:	cmp    al,bl
10026e49:	jge    0x10026e3c
10026e4b:	jmp    0x10026d9f
10026e50:	dec    DWORD PTR [ebp-0x4c]
10026e53:	inc    DWORD PTR [ebp-0x50]
10026e56:	dec    edi
10026e57:	cmp    BYTE PTR [edi],0x0
10026e5a:	je     0x10026e50
10026e5c:	lea    eax,[ebp-0x3c]
10026e5f:	push   eax
10026e60:	push   DWORD PTR [ebp-0x4c]
10026e63:	lea    eax,[ebp-0x20]
10026e66:	push   eax
10026e67:	call   0x10026027
10026e6c:	mov    eax,DWORD PTR [ebp-0x64]
10026e6f:	xor    ecx,ecx
10026e71:	add    esp,0xc
10026e74:	cmp    DWORD PTR [ebp-0x68],ecx
10026e77:	jge    0x10026e7b
10026e79:	neg    eax
10026e7b:	add    eax,DWORD PTR [ebp-0x50]
10026e7e:	cmp    DWORD PTR [ebp-0x60],ecx
10026e81:	jne    0x10026e86
10026e83:	add    eax,DWORD PTR [ebp+0x18]
10026e86:	cmp    DWORD PTR [ebp-0x5c],ecx
10026e89:	jne    0x10026e8e
10026e8b:	sub    eax,DWORD PTR [ebp+0x1c]
10026e8e:	cmp    eax,0x1450
10026e93:	jg     0x10027186
10026e99:	cmp    eax,0xffffebb0
10026e9e:	jl     0x1002719d
10026ea4:	mov    esi,0x100c8620
10026ea9:	sub    esi,0x60
10026eac:	cmp    eax,ecx
10026eae:	mov    DWORD PTR [ebp-0x54],eax
10026eb1:	je     0x1002716b
10026eb7:	jge    0x10026ec6
10026eb9:	neg    eax
10026ebb:	mov    esi,0x100c8780
10026ec0:	mov    DWORD PTR [ebp-0x54],eax
10026ec3:	sub    esi,0x60
10026ec6:	cmp    DWORD PTR [ebp+0x14],ecx
10026ec9:	jne    0x10026ecf
10026ecb:	mov    WORD PTR [ebp-0x3c],cx
10026ecf:	cmp    DWORD PTR [ebp-0x54],ecx
10026ed2:	je     0x1002716b
10026ed8:	mov    eax,DWORD PTR [ebp-0x54]
10026edb:	sar    DWORD PTR [ebp-0x54],0x3
10026edf:	add    esi,0x54
10026ee2:	and    eax,0x7
10026ee5:	test   eax,eax
10026ee7:	mov    DWORD PTR [ebp-0x4c],esi
10026eea:	je     0x10027161
10026ef0:	imul   eax,eax,0xc
10026ef3:	add    eax,esi
10026ef5:	mov    ebx,eax
10026ef7:	cmp    WORD PTR [ebx],0x8000
10026efc:	mov    DWORD PTR [ebp-0x70],ebx
10026eff:	jb     0x10026f15
10026f01:	mov    esi,ebx
10026f03:	lea    edi,[ebp-0x48]
10026f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10026f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10026f08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
10026f09:	dec    DWORD PTR [ebp-0x46]
10026f0c:	mov    esi,DWORD PTR [ebp-0x4c]
10026f0f:	lea    ebx,[ebp-0x48]
10026f12:	mov    DWORD PTR [ebp-0x70],ebx
10026f15:	movzx  edx,WORD PTR [ebx+0xa]
10026f19:	mov    ecx,DWORD PTR [ebp-0x32]
10026f1c:	xor    eax,eax
10026f1e:	mov    DWORD PTR [ebp-0x50],eax
10026f21:	mov    DWORD PTR [ebp-0x2c],eax
10026f24:	mov    DWORD PTR [ebp-0x28],eax
10026f27:	mov    DWORD PTR [ebp-0x24],eax
10026f2a:	mov    eax,edx
10026f2c:	mov    edi,0x7fff
10026f31:	xor    eax,ecx
10026f33:	and    ecx,edi
10026f35:	and    edx,edi
10026f37:	and    eax,0x8000
10026f3c:	cmp    cx,0x7fff
10026f41:	lea    edi,[edx+ecx*1]
10026f44:	movzx  edi,di
10026f47:	jae    0x10027147
10026f4d:	cmp    dx,0x7fff
10026f52:	jae    0x10027147
10026f58:	cmp    di,0xbffd
10026f5d:	ja     0x10027147
10026f63:	cmp    di,0x3fbf
10026f68:	ja     0x10026f77
10026f6a:	xor    eax,eax
10026f6c:	mov    DWORD PTR [ebp-0x38],eax
10026f6f:	mov    DWORD PTR [ebp-0x3c],eax
10026f72:	jmp    0x1002715e
10026f77:	test   cx,cx
10026f7a:	jne    0x10026f9b
10026f7c:	inc    edi
10026f7d:	test   DWORD PTR [ebp-0x34],0x7fffffff
10026f84:	jne    0x10026f9b
10026f86:	cmp    DWORD PTR [ebp-0x38],0x0
10026f8a:	jne    0x10026f9b
10026f8c:	cmp    DWORD PTR [ebp-0x3c],0x0
10026f90:	jne    0x10026f9b
10026f92:	and    WORD PTR [ebp-0x32],cx
10026f96:	jmp    0x10027161
10026f9b:	xor    ecx,ecx
10026f9d:	cmp    dx,cx
10026fa0:	jne    0x10026fc3
10026fa2:	inc    edi
10026fa3:	test   DWORD PTR [ebx+0x8],0x7fffffff
10026faa:	jne    0x10026fc3
10026fac:	cmp    DWORD PTR [ebx+0x4],ecx
10026faf:	jne    0x10026fc3
10026fb1:	cmp    DWORD PTR [ebx],ecx
10026fb3:	jne    0x10026fc3
10026fb5:	mov    DWORD PTR [ebp-0x34],ecx
10026fb8:	mov    DWORD PTR [ebp-0x38],ecx
10026fbb:	mov    DWORD PTR [ebp-0x3c],ecx
10026fbe:	jmp    0x10027161
10026fc3:	and    DWORD PTR [ebp-0x68],ecx
10026fc6:	lea    esi,[ebp-0x28]
10026fc9:	mov    DWORD PTR [ebp-0x58],0x5
10026fd0:	mov    ecx,DWORD PTR [ebp-0x68]
10026fd3:	mov    edx,DWORD PTR [ebp-0x58]
10026fd6:	add    ecx,ecx
10026fd8:	test   edx,edx
10026fda:	mov    DWORD PTR [ebp-0x64],edx
10026fdd:	jle    0x10027034
10026fdf:	lea    ecx,[ebp+ecx*1-0x3c]
10026fe3:	add    ebx,0x8
10026fe6:	mov    DWORD PTR [ebp-0x5c],ecx
10026fe9:	mov    DWORD PTR [ebp-0x60],ebx
10026fec:	mov    ecx,DWORD PTR [ebp-0x60]
10026fef:	mov    edx,DWORD PTR [ebp-0x5c]
10026ff2:	movzx  edx,WORD PTR [edx]
10026ff5:	movzx  ecx,WORD PTR [ecx]
10026ff8:	and    DWORD PTR [ebp-0x78],0x0
10026ffc:	imul   ecx,edx
10026fff:	mov    edx,DWORD PTR [esi-0x4]
10027002:	lea    ebx,[edx+ecx*1]
10027005:	cmp    ebx,edx
10027007:	jb     0x1002700d
10027009:	cmp    ebx,ecx
1002700b:	jae    0x10027014
1002700d:	mov    DWORD PTR [ebp-0x78],0x1
10027014:	cmp    DWORD PTR [ebp-0x78],0x0
10027018:	mov    DWORD PTR [esi-0x4],ebx
1002701b:	je     0x10027020
1002701d:	inc    WORD PTR [esi]
10027020:	add    DWORD PTR [ebp-0x5c],0x2
10027024:	sub    DWORD PTR [ebp-0x60],0x2
10027028:	dec    DWORD PTR [ebp-0x64]
1002702b:	cmp    DWORD PTR [ebp-0x64],0x0
1002702f:	jg     0x10026fec
10027031:	mov    ebx,DWORD PTR [ebp-0x70]
10027034:	inc    esi
10027035:	inc    esi
10027036:	inc    DWORD PTR [ebp-0x68]
10027039:	dec    DWORD PTR [ebp-0x58]
1002703c:	cmp    DWORD PTR [ebp-0x58],0x0
10027040:	jg     0x10026fd0
10027042:	add    edi,0xc002
10027048:	test   di,di
1002704b:	jle    0x10027088
1002704d:	test   DWORD PTR [ebp-0x24],0x80000000
10027054:	jne    0x10027083
10027056:	mov    esi,DWORD PTR [ebp-0x28]
10027059:	mov    ecx,DWORD PTR [ebp-0x2c]
1002705c:	shl    DWORD PTR [ebp-0x2c],1
1002705f:	shr    ecx,0x1f
10027062:	mov    edx,esi
10027064:	add    esi,esi
10027066:	or     esi,ecx
10027068:	mov    ecx,DWORD PTR [ebp-0x24]
1002706b:	shr    edx,0x1f
1002706e:	add    ecx,ecx
10027070:	or     ecx,edx
10027072:	add    edi,0xffff
10027078:	test   di,di
1002707b:	mov    DWORD PTR [ebp-0x28],esi
1002707e:	mov    DWORD PTR [ebp-0x24],ecx
10027081:	jg     0x1002704d
10027083:	test   di,di
10027086:	jg     0x100270d5
10027088:	add    edi,0xffff
1002708e:	test   di,di
10027091:	jge    0x100270d5
10027093:	mov    ecx,edi
10027095:	neg    ecx
10027097:	movzx  esi,cx
1002709a:	add    edi,esi
1002709c:	test   BYTE PTR [ebp-0x2c],0x1
100270a0:	je     0x100270a5
100270a2:	inc    DWORD PTR [ebp-0x50]
100270a5:	mov    ecx,DWORD PTR [ebp-0x24]
100270a8:	mov    ebx,DWORD PTR [ebp-0x28]
100270ab:	mov    edx,DWORD PTR [ebp-0x28]
100270ae:	shr    DWORD PTR [ebp-0x24],1
100270b1:	shl    ecx,0x1f
100270b4:	shr    ebx,1
100270b6:	or     ebx,ecx
100270b8:	mov    ecx,DWORD PTR [ebp-0x2c]
100270bb:	shl    edx,0x1f
100270be:	shr    ecx,1
100270c0:	or     ecx,edx
100270c2:	dec    esi
100270c3:	mov    DWORD PTR [ebp-0x28],ebx
100270c6:	mov    DWORD PTR [ebp-0x2c],ecx
100270c9:	jne    0x1002709c
100270cb:	cmp    DWORD PTR [ebp-0x50],esi
100270ce:	je     0x100270d5
100270d0:	or     WORD PTR [ebp-0x2c],0x1
100270d5:	cmp    WORD PTR [ebp-0x2c],0x8000
100270db:	ja     0x100270ee
100270dd:	mov    ecx,DWORD PTR [ebp-0x2c]
100270e0:	and    ecx,0x1ffff
100270e6:	cmp    ecx,0x18000
100270ec:	jne    0x10027121
100270ee:	cmp    DWORD PTR [ebp-0x2a],0xffffffff
100270f2:	jne    0x1002711e
100270f4:	and    DWORD PTR [ebp-0x2a],0x0
100270f8:	cmp    DWORD PTR [ebp-0x26],0xffffffff
100270fc:	jne    0x10027119
100270fe:	and    DWORD PTR [ebp-0x26],0x0
10027102:	cmp    WORD PTR [ebp-0x22],0xffff
10027108:	jne    0x10027113
1002710a:	mov    WORD PTR [ebp-0x22],0x8000
10027110:	inc    edi
10027111:	jmp    0x10027121
10027113:	inc    WORD PTR [ebp-0x22]
10027117:	jmp    0x10027121
10027119:	inc    DWORD PTR [ebp-0x26]
1002711c:	jmp    0x10027121
1002711e:	inc    DWORD PTR [ebp-0x2a]
10027121:	cmp    di,0x7fff
10027126:	mov    esi,DWORD PTR [ebp-0x4c]
10027129:	jae    0x10027147
1002712b:	mov    cx,WORD PTR [ebp-0x2a]
1002712f:	mov    WORD PTR [ebp-0x3c],cx
10027133:	mov    ecx,DWORD PTR [ebp-0x28]
10027136:	mov    DWORD PTR [ebp-0x3a],ecx
10027139:	mov    ecx,DWORD PTR [ebp-0x24]
1002713c:	or     edi,eax
1002713e:	mov    DWORD PTR [ebp-0x36],ecx
10027141:	mov    WORD PTR [ebp-0x32],di
10027145:	jmp    0x10027161
10027147:	neg    ax
1002714a:	sbb    eax,eax
1002714c:	and    DWORD PTR [ebp-0x38],0x0
10027150:	and    eax,0x80000000
10027155:	add    eax,0x7fff8000
1002715a:	and    DWORD PTR [ebp-0x3c],0x0
1002715e:	mov    DWORD PTR [ebp-0x34],eax
10027161:	cmp    DWORD PTR [ebp-0x54],0x0
10027165:	jne    0x10026ed8
1002716b:	mov    eax,DWORD PTR [ebp-0x34]
1002716e:	movzx  ecx,WORD PTR [ebp-0x3c]
10027172:	mov    esi,DWORD PTR [ebp-0x3a]
10027175:	mov    edx,DWORD PTR [ebp-0x36]
10027178:	shr    eax,0x10
1002717b:	jmp    0x100271ac
1002717d:	mov    DWORD PTR [ebp-0x6c],0x4
10027184:	jmp    0x100271a4
10027186:	xor    esi,esi
10027188:	mov    eax,0x7fff
1002718d:	mov    edx,0x80000000
10027192:	xor    ecx,ecx
10027194:	mov    DWORD PTR [ebp-0x6c],0x2
1002719b:	jmp    0x100271ac
1002719d:	mov    DWORD PTR [ebp-0x6c],0x1
100271a4:	xor    ecx,ecx
100271a6:	xor    eax,eax
100271a8:	xor    edx,edx
100271aa:	xor    esi,esi
100271ac:	mov    edi,DWORD PTR [ebp-0x7c]
100271af:	or     eax,DWORD PTR [ebp-0x74]
100271b2:	mov    WORD PTR [edi],cx
100271b5:	mov    WORD PTR [edi+0xa],ax
100271b9:	mov    eax,DWORD PTR [ebp-0x6c]
100271bc:	mov    DWORD PTR [edi+0x2],esi
100271bf:	mov    DWORD PTR [edi+0x6],edx
100271c2:	mov    ecx,DWORD PTR [ebp-0x4]
100271c5:	pop    edi
100271c6:	pop    esi
100271c7:	xor    ecx,ebp
100271c9:	pop    ebx
100271ca:	call   0x10018773
100271cf:	leave  
100271d0:	ret    
100271d1:	fldcw  WORD PTR [ebx+0x2]
100271d4:	adc    BYTE PTR ds:0x8310026c,ch
100271da:	ins    BYTE PTR es:[edi],dx
100271db:	add    dl,BYTE PTR [eax]
100271dd:	mov    dh,0x6c
100271df:	add    dl,BYTE PTR [eax]
100271e1:	sti    
100271e2:	ins    BYTE PTR es:[edi],dx
100271e3:	add    dl,BYTE PTR [eax]
100271e5:	xor    ebp,DWORD PTR [ebp+0x2]
100271e8:	adc    BYTE PTR [edi+0x6d],al
100271eb:	add    dl,BYTE PTR [eax]
100271ed:	mov    ds:0x8d10026d,al
100271f2:	ins    DWORD PTR es:[edi],dx
100271f3:	add    dl,BYTE PTR [eax]
100271f5:	or     al,0x6e
100271f7:	add    dl,BYTE PTR [eax]
100271f9:	add    DWORD PTR [esi+0x2],ebp
100271fc:	adc    BYTE PTR [eax+0x5510026d],dh
10027202:	mov    ebp,esp
10027204:	sub    esp,0x74
10027207:	mov    eax,ds:0x100c7654
1002720c:	xor    eax,ebp
1002720e:	mov    DWORD PTR [ebp-0x4],eax
10027211:	push   ebx
10027212:	mov    ebx,DWORD PTR [ebp+0x1c]
10027215:	push   esi
10027216:	push   edi
10027217:	lea    esi,[ebp+0x8]
1002721a:	lea    edi,[ebp-0x10]
1002721d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002721e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002721f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
10027221:	mov    edx,DWORD PTR [ebp-0x8]
10027224:	mov    ecx,edx
10027226:	mov    eax,0x8000
1002722b:	and    ecx,eax
1002722d:	and    edx,0x7fff
10027233:	test   cx,cx
10027236:	mov    DWORD PTR [ebp-0x60],ebx
10027239:	mov    BYTE PTR [ebp-0x30],0xcc
1002723d:	mov    BYTE PTR [ebp-0x2f],0xcc
10027241:	mov    BYTE PTR [ebp-0x2e],0xcc
10027245:	mov    BYTE PTR [ebp-0x2d],0xcc
10027249:	mov    BYTE PTR [ebp-0x2c],0xcc
1002724d:	mov    BYTE PTR [ebp-0x2b],0xcc
10027251:	mov    BYTE PTR [ebp-0x2a],0xcc
10027255:	mov    BYTE PTR [ebp-0x29],0xcc
10027259:	mov    BYTE PTR [ebp-0x28],0xcc
1002725d:	mov    BYTE PTR [ebp-0x27],0xcc
10027261:	mov    BYTE PTR [ebp-0x26],0xfb
10027265:	mov    BYTE PTR [ebp-0x25],0x3f
10027269:	mov    DWORD PTR [ebp-0x74],0x1
10027270:	mov    DWORD PTR [ebp-0x6c],ecx
10027273:	je     0x1002727b
10027275:	mov    BYTE PTR [ebx+0x2],0x2d
10027279:	jmp    0x1002727f
1002727b:	mov    BYTE PTR [ebx+0x2],0x20
1002727f:	test   dx,dx
10027282:	mov    esi,DWORD PTR [ebp-0xc]
10027285:	mov    edi,DWORD PTR [ebp-0x10]
10027288:	jne    0x100272b8
1002728a:	test   esi,esi
1002728c:	jne    0x100272b8
1002728e:	test   edi,edi
10027290:	jne    0x100272b8
10027292:	and    WORD PTR [ebx],di
10027295:	cmp    cx,ax
10027298:	setne  al
1002729b:	dec    al
1002729d:	and    al,0xd
1002729f:	add    al,0x20
100272a1:	mov    BYTE PTR [ebx+0x2],al
100272a4:	mov    BYTE PTR [ebx+0x3],0x1
100272a8:	mov    BYTE PTR [ebx+0x4],0x30
100272ac:	mov    BYTE PTR [ebx+0x5],0x0
100272b0:	xor    eax,eax
100272b2:	inc    eax
100272b3:	jmp    0x10027a7f
100272b8:	cmp    dx,0x7fff
100272bd:	jne    0x10027361
100272c3:	mov    eax,0x80000000
100272c8:	cmp    esi,eax
100272ca:	mov    WORD PTR [ebx],0x1
100272cf:	jne    0x100272d5
100272d1:	test   edi,edi
100272d3:	je     0x100272e4
100272d5:	test   esi,0x40000000
100272db:	jne    0x100272e4
100272dd:	push   0x100b40a8
100272e2:	jmp    0x10027335
100272e4:	test   cx,cx
100272e7:	je     0x100272fc
100272e9:	cmp    esi,0xc0000000
100272ef:	jne    0x100272fc
100272f1:	test   edi,edi
100272f3:	jne    0x10027330
100272f5:	push   0x100b40a0
100272fa:	jmp    0x10027309
100272fc:	cmp    esi,eax
100272fe:	jne    0x10027330
10027300:	test   edi,edi
10027302:	jne    0x10027330
10027304:	push   0x100b4098
10027309:	lea    eax,[ebx+0x4]
1002730c:	push   0x16
1002730e:	push   eax
1002730f:	call   0x1001ce58
10027314:	add    esp,0xc
10027317:	xor    esi,esi
10027319:	test   eax,eax
1002731b:	je     0x1002732a
1002731d:	push   esi
1002731e:	push   esi
1002731f:	push   esi
10027320:	push   esi
10027321:	push   esi
10027322:	call   0x10018cc3
10027327:	add    esp,0x14
1002732a:	mov    BYTE PTR [ebx+0x3],0x5
1002732e:	jmp    0x1002735a
10027330:	push   0x100b4090
10027335:	lea    eax,[ebx+0x4]
10027338:	push   0x16
1002733a:	push   eax
1002733b:	call   0x1001ce58
10027340:	add    esp,0xc
10027343:	xor    esi,esi
10027345:	test   eax,eax
10027347:	je     0x10027356
10027349:	push   esi
1002734a:	push   esi
1002734b:	push   esi
1002734c:	push   esi
1002734d:	push   esi
1002734e:	call   0x10018cc3
10027353:	add    esp,0x14
10027356:	mov    BYTE PTR [ebx+0x3],0x6
1002735a:	xor    eax,eax
1002735c:	jmp    0x10027a7f
10027361:	movzx  ecx,dx
10027364:	mov    ebx,ecx
10027366:	imul   ecx,ecx,0x4d10
1002736c:	shr    ebx,0x8
1002736f:	mov    eax,esi
10027371:	shr    eax,0x18
10027374:	lea    eax,[ebx+eax*2]
10027377:	imul   eax,eax,0x4d
1002737a:	lea    eax,[eax+ecx*1-0x134312f4]
10027381:	sar    eax,0x10
10027384:	movzx  ecx,ax
10027387:	movsx  ebx,cx
1002738a:	mov    DWORD PTR [ebp-0x4c],ecx
1002738d:	xor    eax,eax
1002738f:	mov    ecx,0x100c8620
10027394:	neg    ebx
10027396:	sub    ecx,0x60
10027399:	cmp    ebx,eax
1002739b:	mov    WORD PTR [ebp-0x16],dx
1002739f:	mov    DWORD PTR [ebp-0x1a],esi
100273a2:	mov    DWORD PTR [ebp-0x1e],edi
100273a5:	mov    WORD PTR [ebp-0x20],ax
100273a9:	mov    DWORD PTR [ebp-0x68],ecx
100273ac:	je     0x10027660
100273b2:	jge    0x100273c1
100273b4:	mov    ecx,0x100c8780
100273b9:	neg    ebx
100273bb:	sub    ecx,0x60
100273be:	mov    DWORD PTR [ebp-0x68],ecx
100273c1:	cmp    ebx,eax
100273c3:	je     0x10027660
100273c9:	add    DWORD PTR [ebp-0x68],0x54
100273cd:	mov    ecx,ebx
100273cf:	and    ecx,0x7
100273d2:	sar    ebx,0x3
100273d5:	test   ecx,ecx
100273d7:	je     0x10027656
100273dd:	imul   ecx,ecx,0xc
100273e0:	add    ecx,DWORD PTR [ebp-0x68]
100273e3:	cmp    WORD PTR [ecx],0x8000
100273e8:	mov    DWORD PTR [ebp-0x64],ecx
100273eb:	jb     0x10027400
100273ed:	mov    esi,ecx
100273ef:	lea    edi,[ebp-0x3c]
100273f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100273f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100273f4:	lea    eax,[ebp-0x3c]
100273f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
100273f8:	dec    DWORD PTR [ebp-0x3a]
100273fb:	mov    DWORD PTR [ebp-0x64],eax
100273fe:	mov    ecx,eax
10027400:	movzx  edi,WORD PTR [ecx+0xa]
10027404:	mov    edx,DWORD PTR [ebp-0x16]
10027407:	xor    eax,eax
10027409:	mov    ecx,edi
1002740b:	mov    esi,0x7fff
10027410:	xor    ecx,edx
10027412:	and    edx,esi
10027414:	and    edi,esi
10027416:	mov    DWORD PTR [ebp-0x48],eax
10027419:	mov    DWORD PTR [ebp-0x10],eax
1002741c:	mov    DWORD PTR [ebp-0xc],eax
1002741f:	mov    DWORD PTR [ebp-0x8],eax
10027422:	and    ecx,0x8000
10027428:	cmp    dx,si
1002742b:	lea    eax,[edi+edx*1]
1002742e:	movzx  eax,ax
10027431:	jae    0x1002763a
10027437:	cmp    di,si
1002743a:	jae    0x1002763a
10027440:	cmp    ax,0xbffd
10027444:	ja     0x1002763a
1002744a:	cmp    ax,0x3fbf
1002744e:	ja     0x10027460
10027450:	xor    eax,eax
10027452:	mov    DWORD PTR [ebp-0x18],eax
10027455:	mov    DWORD PTR [ebp-0x1c],eax
10027458:	mov    DWORD PTR [ebp-0x20],eax
1002745b:	jmp    0x10027656
10027460:	xor    esi,esi
10027462:	cmp    dx,si
10027465:	jne    0x10027484
10027467:	inc    eax
10027468:	test   DWORD PTR [ebp-0x18],0x7fffffff
1002746f:	jne    0x10027484
10027471:	cmp    DWORD PTR [ebp-0x1c],esi
10027474:	jne    0x10027484
10027476:	cmp    DWORD PTR [ebp-0x20],esi
10027479:	jne    0x10027484
1002747b:	mov    WORD PTR [ebp-0x16],si
1002747f:	jmp    0x10027656
10027484:	cmp    di,si
10027487:	jne    0x100274ad
10027489:	mov    edx,DWORD PTR [ebp-0x64]
1002748c:	inc    eax
1002748d:	test   DWORD PTR [edx+0x8],0x7fffffff
10027494:	jne    0x100274ad
10027496:	cmp    DWORD PTR [edx+0x4],esi
10027499:	jne    0x100274ad
1002749b:	cmp    DWORD PTR [edx],esi
1002749d:	jne    0x100274ad
1002749f:	mov    DWORD PTR [ebp-0x18],esi
100274a2:	mov    DWORD PTR [ebp-0x1c],esi
100274a5:	mov    DWORD PTR [ebp-0x20],esi
100274a8:	jmp    0x10027656
100274ad:	lea    edi,[ebp-0xc]
100274b0:	mov    DWORD PTR [ebp-0x5c],esi
100274b3:	mov    DWORD PTR [ebp-0x44],edi
100274b6:	mov    DWORD PTR [ebp-0x40],0x5
100274bd:	mov    edx,DWORD PTR [ebp-0x5c]
100274c0:	mov    esi,DWORD PTR [ebp-0x40]
100274c3:	add    edx,edx
100274c5:	test   esi,esi
100274c7:	mov    DWORD PTR [ebp-0x50],esi
100274ca:	jle    0x10027524
100274cc:	lea    edx,[ebp+edx*1-0x20]
100274d0:	mov    DWORD PTR [ebp-0x58],edx
100274d3:	mov    edx,DWORD PTR [ebp-0x64]
100274d6:	add    edx,0x8
100274d9:	mov    DWORD PTR [ebp-0x54],edx
100274dc:	mov    edx,DWORD PTR [ebp-0x58]
100274df:	mov    esi,DWORD PTR [ebp-0x54]
100274e2:	movzx  esi,WORD PTR [esi]
100274e5:	movzx  edx,WORD PTR [edx]
100274e8:	mov    edi,DWORD PTR [edi-0x4]
100274eb:	imul   edx,esi
100274ee:	and    DWORD PTR [ebp-0x70],0x0
100274f2:	lea    esi,[edi+edx*1]
100274f5:	cmp    esi,edi
100274f7:	jb     0x100274fd
100274f9:	cmp    esi,edx
100274fb:	jae    0x10027504
100274fd:	mov    DWORD PTR [ebp-0x70],0x1
10027504:	cmp    DWORD PTR [ebp-0x70],0x0
10027508:	mov    edi,DWORD PTR [ebp-0x44]
1002750b:	mov    DWORD PTR [edi-0x4],esi
1002750e:	je     0x10027513
10027510:	inc    WORD PTR [edi]
10027513:	add    DWORD PTR [ebp-0x58],0x2
10027517:	sub    DWORD PTR [ebp-0x54],0x2
1002751b:	dec    DWORD PTR [ebp-0x50]
1002751e:	cmp    DWORD PTR [ebp-0x50],0x0
10027522:	jg     0x100274dc
10027524:	inc    edi
10027525:	inc    edi
10027526:	inc    DWORD PTR [ebp-0x5c]
10027529:	dec    DWORD PTR [ebp-0x40]
1002752c:	cmp    DWORD PTR [ebp-0x40],0x0
10027530:	mov    DWORD PTR [ebp-0x44],edi
10027533:	jg     0x100274bd
10027535:	add    eax,0xc002
1002753a:	test   ax,ax
1002753d:	jle    0x1002757a
1002753f:	test   DWORD PTR [ebp-0x8],0x80000000
10027546:	jne    0x10027575
10027548:	mov    edx,DWORD PTR [ebp-0x10]
1002754b:	mov    edi,DWORD PTR [ebp-0xc]
1002754e:	mov    esi,DWORD PTR [ebp-0xc]
10027551:	shl    DWORD PTR [ebp-0x10],1
10027554:	shr    edx,0x1f
10027557:	add    edi,edi
10027559:	or     edi,edx
1002755b:	mov    edx,DWORD PTR [ebp-0x8]
1002755e:	shr    esi,0x1f
10027561:	add    edx,edx
10027563:	or     edx,esi
10027565:	add    eax,0xffff
1002756a:	test   ax,ax
1002756d:	mov    DWORD PTR [ebp-0xc],edi
10027570:	mov    DWORD PTR [ebp-0x8],edx
10027573:	jg     0x1002753f
10027575:	test   ax,ax
10027578:	jg     0x100275cc
1002757a:	add    eax,0xffff
1002757f:	test   ax,ax
10027582:	jge    0x100275cc
10027584:	mov    edx,eax
10027586:	neg    edx
10027588:	movzx  edx,dx
1002758b:	mov    DWORD PTR [ebp-0x44],edx
1002758e:	add    eax,edx
10027590:	test   BYTE PTR [ebp-0x10],0x1
10027594:	je     0x10027599
10027596:	inc    DWORD PTR [ebp-0x48]
10027599:	mov    edx,DWORD PTR [ebp-0x8]
1002759c:	mov    edi,DWORD PTR [ebp-0xc]
1002759f:	mov    esi,DWORD PTR [ebp-0xc]
100275a2:	shr    DWORD PTR [ebp-0x8],1
100275a5:	shl    edx,0x1f
100275a8:	shr    edi,1
100275aa:	or     edi,edx
100275ac:	mov    edx,DWORD PTR [ebp-0x10]
100275af:	shl    esi,0x1f
100275b2:	shr    edx,1
100275b4:	or     edx,esi
100275b6:	dec    DWORD PTR [ebp-0x44]
100275b9:	mov    DWORD PTR [ebp-0xc],edi
100275bc:	mov    DWORD PTR [ebp-0x10],edx
100275bf:	jne    0x10027590
100275c1:	cmp    DWORD PTR [ebp-0x48],0x0
100275c5:	je     0x100275cc
100275c7:	or     WORD PTR [ebp-0x10],0x1
100275cc:	cmp    WORD PTR [ebp-0x10],0x8000
100275d2:	ja     0x100275e5
100275d4:	mov    edx,DWORD PTR [ebp-0x10]
100275d7:	and    edx,0x1ffff
100275dd:	cmp    edx,0x18000
100275e3:	jne    0x10027618
100275e5:	cmp    DWORD PTR [ebp-0xe],0xffffffff
100275e9:	jne    0x10027615
100275eb:	and    DWORD PTR [ebp-0xe],0x0
100275ef:	cmp    DWORD PTR [ebp-0xa],0xffffffff
100275f3:	jne    0x10027610
100275f5:	and    DWORD PTR [ebp-0xa],0x0
100275f9:	cmp    WORD PTR [ebp-0x6],0xffff
100275ff:	jne    0x1002760a
10027601:	mov    WORD PTR [ebp-0x6],0x8000
10027607:	inc    eax
10027608:	jmp    0x10027618
1002760a:	inc    WORD PTR [ebp-0x6]
1002760e:	jmp    0x10027618
10027610:	inc    DWORD PTR [ebp-0xa]
10027613:	jmp    0x10027618
10027615:	inc    DWORD PTR [ebp-0xe]
10027618:	cmp    ax,0x7fff
1002761c:	jae    0x1002763a
1002761e:	mov    dx,WORD PTR [ebp-0xe]
10027622:	mov    WORD PTR [ebp-0x20],dx
10027626:	mov    edx,DWORD PTR [ebp-0xc]
10027629:	mov    DWORD PTR [ebp-0x1e],edx
1002762c:	mov    edx,DWORD PTR [ebp-0x8]
1002762f:	or     eax,ecx
10027631:	mov    DWORD PTR [ebp-0x1a],edx
10027634:	mov    WORD PTR [ebp-0x16],ax
10027638:	jmp    0x10027656
1002763a:	neg    cx
1002763d:	sbb    ecx,ecx
1002763f:	and    DWORD PTR [ebp-0x1c],0x0
10027643:	and    ecx,0x80000000
10027649:	add    ecx,0x7fff8000
1002764f:	and    DWORD PTR [ebp-0x20],0x0
10027653:	mov    DWORD PTR [ebp-0x18],ecx
10027656:	test   ebx,ebx
10027658:	jne    0x100273c9
1002765e:	xor    eax,eax
10027660:	mov    ecx,DWORD PTR [ebp-0x18]
10027663:	shr    ecx,0x10
10027666:	cmp    cx,0x3fff
1002766b:	mov    ebx,0x7fff
10027670:	jb     0x100278be
10027676:	mov    esi,DWORD PTR [ebp-0x26]
10027679:	inc    DWORD PTR [ebp-0x4c]
1002767c:	movzx  edx,cx
1002767f:	mov    ecx,esi
10027681:	xor    ecx,edx
10027683:	and    edx,ebx
10027685:	and    esi,ebx
10027687:	and    ecx,0x8000
1002768d:	cmp    dx,bx
10027690:	lea    edi,[esi+edx*1]
10027693:	mov    DWORD PTR [ebp-0x58],eax
10027696:	mov    DWORD PTR [ebp-0x10],eax
10027699:	mov    DWORD PTR [ebp-0xc],eax
1002769c:	mov    DWORD PTR [ebp-0x8],eax
1002769f:	movzx  edi,di
100276a2:	jae    0x100278a4
100276a8:	cmp    si,bx
100276ab:	jae    0x100278a4
100276b1:	cmp    di,0xbffd
100276b6:	ja     0x100278a4
100276bc:	cmp    di,0x3fbf
100276c1:	ja     0x100276cb
100276c3:	mov    DWORD PTR [ebp-0x18],eax
100276c6:	jmp    0x100278b8
100276cb:	cmp    dx,ax
100276ce:	jne    0x100276ed
100276d0:	inc    edi
100276d1:	test   DWORD PTR [ebp-0x18],0x7fffffff
100276d8:	jne    0x100276ed
100276da:	cmp    DWORD PTR [ebp-0x1c],eax
100276dd:	jne    0x100276ed
100276df:	cmp    DWORD PTR [ebp-0x20],eax
100276e2:	jne    0x100276ed
100276e4:	mov    WORD PTR [ebp-0x16],ax
100276e8:	jmp    0x100278be
100276ed:	cmp    si,ax
100276f0:	jne    0x10027706
100276f2:	inc    edi
100276f3:	test   DWORD PTR [ebp-0x28],0x7fffffff
100276fa:	jne    0x10027706
100276fc:	cmp    DWORD PTR [ebp-0x2c],eax
100276ff:	jne    0x10027706
10027701:	cmp    DWORD PTR [ebp-0x30],eax
10027704:	je     0x100276c3
10027706:	and    DWORD PTR [ebp-0x54],0x0
1002770a:	lea    eax,[ebp-0xc]
1002770d:	mov    DWORD PTR [ebp-0x40],0x5
10027714:	mov    edx,DWORD PTR [ebp-0x54]
10027717:	mov    esi,DWORD PTR [ebp-0x40]
1002771a:	add    edx,edx
1002771c:	test   esi,esi
1002771e:	mov    DWORD PTR [ebp-0x50],esi
10027721:	jle    0x10027775
10027723:	lea    esi,[ebp-0x28]
10027726:	lea    edx,[ebp+edx*1-0x20]
1002772a:	mov    DWORD PTR [ebp-0x5c],esi
1002772d:	mov    DWORD PTR [ebp-0x48],edx
10027730:	mov    edx,DWORD PTR [ebp-0x5c]
10027733:	mov    esi,DWORD PTR [ebp-0x48]
10027736:	movzx  esi,WORD PTR [esi]
10027739:	movzx  edx,WORD PTR [edx]
1002773c:	and    DWORD PTR [ebp-0x44],0x0
10027740:	imul   edx,esi
10027743:	mov    esi,DWORD PTR [eax-0x4]
10027746:	lea    ebx,[esi+edx*1]
10027749:	cmp    ebx,esi
1002774b:	jb     0x10027751
1002774d:	cmp    ebx,edx
1002774f:	jae    0x10027758
10027751:	mov    DWORD PTR [ebp-0x44],0x1
10027758:	cmp    DWORD PTR [ebp-0x44],0x0
1002775c:	mov    DWORD PTR [eax-0x4],ebx
1002775f:	je     0x10027764
10027761:	inc    WORD PTR [eax]
10027764:	add    DWORD PTR [ebp-0x48],0x2
10027768:	sub    DWORD PTR [ebp-0x5c],0x2
1002776c:	dec    DWORD PTR [ebp-0x50]
1002776f:	cmp    DWORD PTR [ebp-0x50],0x0
10027773:	jg     0x10027730
10027775:	inc    eax
10027776:	inc    eax
10027777:	inc    DWORD PTR [ebp-0x54]
1002777a:	dec    DWORD PTR [ebp-0x40]
1002777d:	cmp    DWORD PTR [ebp-0x40],0x0
10027781:	jg     0x10027714
10027783:	add    edi,0xc002
10027789:	xor    eax,eax
1002778b:	cmp    di,ax
1002778e:	jle    0x100277cc
10027790:	test   DWORD PTR [ebp-0x8],0x80000000
10027797:	jne    0x100277c7
10027799:	mov    edx,DWORD PTR [ebp-0x10]
1002779c:	mov    ebx,DWORD PTR [ebp-0xc]
1002779f:	mov    esi,DWORD PTR [ebp-0xc]
100277a2:	shl    DWORD PTR [ebp-0x10],1
100277a5:	shr    edx,0x1f
100277a8:	add    ebx,ebx
100277aa:	or     ebx,edx
100277ac:	mov    edx,DWORD PTR [ebp-0x8]
100277af:	shr    esi,0x1f
100277b2:	add    edx,edx
100277b4:	or     edx,esi
100277b6:	add    edi,0xffff
100277bc:	cmp    di,ax
100277bf:	mov    DWORD PTR [ebp-0xc],ebx
100277c2:	mov    DWORD PTR [ebp-0x8],edx
100277c5:	jg     0x10027790
100277c7:	cmp    di,ax
100277ca:	jg     0x10027819
100277cc:	add    edi,0xffff
100277d2:	cmp    di,ax
100277d5:	jge    0x10027819
100277d7:	mov    eax,edi
100277d9:	neg    eax
100277db:	movzx  eax,ax
100277de:	add    edi,eax
100277e0:	test   BYTE PTR [ebp-0x10],0x1
100277e4:	je     0x100277e9
100277e6:	inc    DWORD PTR [ebp-0x58]
100277e9:	mov    edx,DWORD PTR [ebp-0x8]
100277ec:	mov    ebx,DWORD PTR [ebp-0xc]
100277ef:	mov    esi,DWORD PTR [ebp-0xc]
100277f2:	shr    DWORD PTR [ebp-0x8],1
100277f5:	shl    edx,0x1f
100277f8:	shr    ebx,1
100277fa:	or     ebx,edx
100277fc:	mov    edx,DWORD PTR [ebp-0x10]
100277ff:	shl    esi,0x1f
10027802:	shr    edx,1
10027804:	or     edx,esi
10027806:	dec    eax
10027807:	mov    DWORD PTR [ebp-0xc],ebx
1002780a:	mov    DWORD PTR [ebp-0x10],edx
1002780d:	jne    0x100277e0
1002780f:	cmp    DWORD PTR [ebp-0x58],eax
10027812:	je     0x10027819
10027814:	or     WORD PTR [ebp-0x10],0x1
10027819:	cmp    WORD PTR [ebp-0x10],0x8000
1002781f:	ja     0x10027832
10027821:	mov    edx,DWORD PTR [ebp-0x10]
10027824:	and    edx,0x1ffff
1002782a:	cmp    edx,0x18000
10027830:	jne    0x10027863
10027832:	cmp    DWORD PTR [ebp-0xe],0xffffffff
10027836:	jne    0x10027860
10027838:	cmp    DWORD PTR [ebp-0xa],0xffffffff
1002783c:	mov    DWORD PTR [ebp-0xe],eax
1002783f:	jne    0x1002785b
10027841:	cmp    WORD PTR [ebp-0x6],0xffff
10027847:	mov    DWORD PTR [ebp-0xa],eax
1002784a:	jne    0x10027855
1002784c:	mov    WORD PTR [ebp-0x6],0x8000
10027852:	inc    edi
10027853:	jmp    0x10027863
10027855:	inc    WORD PTR [ebp-0x6]
10027859:	jmp    0x10027863
1002785b:	inc    DWORD PTR [ebp-0xa]
1002785e:	jmp    0x10027863
10027860:	inc    DWORD PTR [ebp-0xe]
10027863:	cmp    di,0x7fff
10027868:	jb     0x10027888
1002786a:	neg    cx
1002786d:	mov    DWORD PTR [ebp-0x1c],eax
10027870:	mov    DWORD PTR [ebp-0x20],eax
10027873:	sbb    ecx,ecx
10027875:	and    ecx,0x80000000
1002787b:	add    ecx,0x7fff8000
10027881:	mov    DWORD PTR [ebp-0x18],ecx
10027884:	xor    eax,eax
10027886:	jmp    0x100278be
10027888:	mov    ax,WORD PTR [ebp-0xe]
1002788c:	mov    WORD PTR [ebp-0x20],ax
10027890:	mov    eax,DWORD PTR [ebp-0xc]
10027893:	mov    DWORD PTR [ebp-0x1e],eax
10027896:	mov    eax,DWORD PTR [ebp-0x8]
10027899:	or     edi,ecx
1002789b:	mov    DWORD PTR [ebp-0x1a],eax
1002789e:	mov    WORD PTR [ebp-0x16],di
100278a2:	jmp    0x10027884
100278a4:	neg    cx
100278a7:	sbb    ecx,ecx
100278a9:	and    ecx,0x80000000
100278af:	add    ecx,0x7fff8000
100278b5:	mov    DWORD PTR [ebp-0x18],ecx
100278b8:	mov    DWORD PTR [ebp-0x1c],eax
100278bb:	mov    DWORD PTR [ebp-0x20],eax
100278be:	test   BYTE PTR [ebp+0x18],0x1
100278c2:	mov    edx,DWORD PTR [ebp-0x60]
100278c5:	mov    ecx,DWORD PTR [ebp-0x4c]
100278c8:	mov    WORD PTR [edx],cx
100278cb:	je     0x100278ff
100278cd:	movsx  ecx,cx
100278d0:	add    DWORD PTR [ebp+0x14],ecx
100278d3:	cmp    DWORD PTR [ebp+0x14],eax
100278d6:	jg     0x100278ff
100278d8:	and    WORD PTR [edx],0x0
100278dc:	cmp    WORD PTR [ebp-0x6c],0x8000
100278e2:	mov    BYTE PTR [edx+0x3],0x1
100278e6:	setne  al
100278e9:	dec    al
100278eb:	and    al,0xd
100278ed:	add    al,0x20
100278ef:	mov    BYTE PTR [edx+0x2],al
100278f2:	mov    BYTE PTR [edx+0x4],0x30
100278f6:	mov    BYTE PTR [edx+0x5],0x0
100278fa:	jmp    0x100272b0
100278ff:	push   0x15
10027901:	pop    ecx
10027902:	cmp    DWORD PTR [ebp+0x14],ecx
10027905:	jle    0x1002790a
10027907:	mov    DWORD PTR [ebp+0x14],ecx
1002790a:	mov    esi,DWORD PTR [ebp-0x18]
1002790d:	shr    esi,0x10
10027910:	push   0x8
10027912:	sub    esi,0x3ffe
10027918:	mov    WORD PTR [ebp-0x16],ax
1002791c:	pop    ebx
1002791d:	mov    eax,DWORD PTR [ebp-0x20]
10027920:	mov    edi,DWORD PTR [ebp-0x1c]
10027923:	mov    ecx,DWORD PTR [ebp-0x1c]
10027926:	shl    DWORD PTR [ebp-0x20],1
10027929:	shr    eax,0x1f
1002792c:	add    edi,edi
1002792e:	or     edi,eax
10027930:	mov    eax,DWORD PTR [ebp-0x18]
10027933:	shr    ecx,0x1f
10027936:	add    eax,eax
10027938:	or     eax,ecx
1002793a:	dec    ebx
1002793b:	mov    DWORD PTR [ebp-0x1c],edi
1002793e:	mov    DWORD PTR [ebp-0x18],eax
10027941:	jne    0x1002791d
10027943:	test   esi,esi
10027945:	jge    0x10027979
10027947:	neg    esi
10027949:	and    esi,0xff
1002794f:	jle    0x10027979
10027951:	mov    eax,DWORD PTR [ebp-0x18]
10027954:	mov    edi,DWORD PTR [ebp-0x1c]
10027957:	mov    ecx,DWORD PTR [ebp-0x1c]
1002795a:	shr    DWORD PTR [ebp-0x18],1
1002795d:	shl    eax,0x1f
10027960:	shr    edi,1
10027962:	or     edi,eax
10027964:	mov    eax,DWORD PTR [ebp-0x20]
10027967:	shl    ecx,0x1f
1002796a:	shr    eax,1
1002796c:	or     eax,ecx
1002796e:	dec    esi
1002796f:	test   esi,esi
10027971:	mov    DWORD PTR [ebp-0x1c],edi
10027974:	mov    DWORD PTR [ebp-0x20],eax
10027977:	jg     0x10027951
10027979:	mov    eax,DWORD PTR [ebp+0x14]
1002797c:	inc    eax
1002797d:	test   eax,eax
1002797f:	lea    ebx,[edx+0x4]
10027982:	mov    DWORD PTR [ebp-0x40],ebx
10027985:	mov    DWORD PTR [ebp-0x4c],eax
10027988:	jle    0x10027a43
1002798e:	mov    edx,DWORD PTR [ebp-0x20]
10027991:	mov    eax,DWORD PTR [ebp-0x1c]
10027994:	lea    esi,[ebp-0x20]
10027997:	lea    edi,[ebp-0x3c]
1002799a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002799b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002799c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
1002799d:	shl    DWORD PTR [ebp-0x20],1
100279a0:	mov    edi,DWORD PTR [ebp-0x20]
100279a3:	shl    DWORD PTR [ebp-0x20],1
100279a6:	shr    edx,0x1f
100279a9:	lea    ecx,[eax+eax*1]
100279ac:	or     ecx,edx
100279ae:	mov    edx,DWORD PTR [ebp-0x18]
100279b1:	mov    esi,eax
100279b3:	shr    esi,0x1f
100279b6:	add    edx,edx
100279b8:	or     edx,esi
100279ba:	mov    eax,ecx
100279bc:	lea    esi,[ecx+ecx*1]
100279bf:	shr    eax,0x1f
100279c2:	lea    ecx,[edx+edx*1]
100279c5:	mov    edx,DWORD PTR [ebp-0x3c]
100279c8:	shr    edi,0x1f
100279cb:	or     ecx,eax
100279cd:	mov    eax,DWORD PTR [ebp-0x20]
100279d0:	or     esi,edi
100279d2:	lea    edi,[edx+eax*1]
100279d5:	cmp    edi,eax
100279d7:	jb     0x100279dd
100279d9:	cmp    edi,edx
100279db:	jae    0x100279f5
100279dd:	lea    eax,[esi+0x1]
100279e0:	xor    edx,edx
100279e2:	cmp    eax,esi
100279e4:	jb     0x100279eb
100279e6:	cmp    eax,0x1
100279e9:	jae    0x100279ee
100279eb:	xor    edx,edx
100279ed:	inc    edx
100279ee:	test   edx,edx
100279f0:	mov    esi,eax
100279f2:	je     0x100279f5
100279f4:	inc    ecx
100279f5:	mov    eax,DWORD PTR [ebp-0x38]
100279f8:	lea    edx,[eax+esi*1]
100279fb:	cmp    edx,esi
100279fd:	mov    DWORD PTR [ebp-0x44],edx
10027a00:	jb     0x10027a06
10027a02:	cmp    edx,eax
10027a04:	jae    0x10027a07
10027a06:	inc    ecx
10027a07:	add    ecx,DWORD PTR [ebp-0x34]
10027a0a:	shr    edx,0x1f
10027a0d:	add    ecx,ecx
10027a0f:	or     ecx,edx
10027a11:	lea    esi,[edi+edi*1]
10027a14:	mov    DWORD PTR [ebp-0x20],esi
10027a17:	mov    esi,DWORD PTR [ebp-0x44]
10027a1a:	mov    DWORD PTR [ebp-0x18],ecx
10027a1d:	shr    ecx,0x18
10027a20:	add    esi,esi
10027a22:	add    cl,0x30
10027a25:	mov    eax,edi
10027a27:	shr    eax,0x1f
10027a2a:	or     esi,eax
10027a2c:	mov    BYTE PTR [ebx],cl
10027a2e:	inc    ebx
10027a2f:	dec    DWORD PTR [ebp-0x4c]
10027a32:	cmp    DWORD PTR [ebp-0x4c],0x0
10027a36:	mov    DWORD PTR [ebp-0x1c],esi
10027a39:	mov    BYTE PTR [ebp-0x15],0x0
10027a3d:	jg     0x1002798e
10027a43:	dec    ebx
10027a44:	mov    al,BYTE PTR [ebx]
10027a46:	dec    ebx
10027a47:	cmp    al,0x35
10027a49:	jge    0x10027a59
10027a4b:	mov    ecx,DWORD PTR [ebp-0x40]
10027a4e:	jmp    0x10027a94
10027a50:	cmp    BYTE PTR [ebx],0x39
10027a53:	jne    0x10027a5e
10027a55:	mov    BYTE PTR [ebx],0x30
10027a58:	dec    ebx
10027a59:	cmp    ebx,DWORD PTR [ebp-0x40]
10027a5c:	jae    0x10027a50
10027a5e:	cmp    ebx,DWORD PTR [ebp-0x40]
10027a61:	mov    eax,DWORD PTR [ebp-0x60]
10027a64:	jae    0x10027a6a
10027a66:	inc    ebx
10027a67:	inc    WORD PTR [eax]
10027a6a:	inc    BYTE PTR [ebx]
10027a6c:	sub    bl,al
10027a6e:	sub    bl,0x3
10027a71:	movsx  ecx,bl
10027a74:	mov    BYTE PTR [eax+0x3],bl
10027a77:	mov    BYTE PTR [ecx+eax*1+0x4],0x0
10027a7c:	mov    eax,DWORD PTR [ebp-0x74]
10027a7f:	mov    ecx,DWORD PTR [ebp-0x4]
10027a82:	pop    edi
10027a83:	pop    esi
10027a84:	xor    ecx,ebp
10027a86:	pop    ebx
10027a87:	call   0x10018773
10027a8c:	leave  
10027a8d:	ret    
10027a8e:	cmp    BYTE PTR [ebx],0x30
10027a91:	jne    0x10027a98
10027a93:	dec    ebx
10027a94:	cmp    ebx,ecx
10027a96:	jae    0x10027a8e
10027a98:	cmp    ebx,ecx
10027a9a:	mov    eax,DWORD PTR [ebp-0x60]
10027a9d:	jae    0x10027a6c
10027a9f:	and    WORD PTR [eax],0x0
10027aa3:	cmp    WORD PTR [ebp-0x6c],0x8000
10027aa9:	mov    BYTE PTR [eax+0x3],0x1
10027aad:	setne  dl
10027ab0:	dec    dl
10027ab2:	and    dl,0xd
10027ab5:	add    dl,0x20
10027ab8:	mov    BYTE PTR [eax+0x2],dl
10027abb:	mov    BYTE PTR [ecx],0x30
10027abe:	mov    BYTE PTR [eax+0x5],0x0
10027ac2:	jmp    0x100272b0
10027ac7:	xor    eax,eax
10027ac9:	test   bl,0x10
10027acc:	je     0x10027acf
10027ace:	inc    eax
10027acf:	test   bl,0x8
10027ad2:	je     0x10027ad7
10027ad4:	or     eax,0x4
10027ad7:	test   bl,0x4
10027ada:	je     0x10027adf
10027adc:	or     eax,0x8
10027adf:	test   bl,0x2
10027ae2:	je     0x10027ae7
10027ae4:	or     eax,0x10
10027ae7:	test   bl,0x1
10027aea:	je     0x10027aef
10027aec:	or     eax,0x20
10027aef:	test   ebx,0x80000
10027af5:	je     0x10027afa
10027af7:	or     eax,0x2
10027afa:	mov    ecx,ebx
10027afc:	mov    edx,0x300
10027b01:	and    ecx,edx
10027b03:	push   esi
10027b04:	mov    esi,0x200
10027b09:	je     0x10027b2e
10027b0b:	cmp    ecx,0x100
10027b11:	je     0x10027b29
10027b13:	cmp    ecx,esi
10027b15:	je     0x10027b22
10027b17:	cmp    ecx,edx
10027b19:	jne    0x10027b2e
10027b1b:	or     eax,0xc00
10027b20:	jmp    0x10027b2e
10027b22:	or     eax,0x800
10027b27:	jmp    0x10027b2e
10027b29:	or     eax,0x400
10027b2e:	mov    ecx,ebx
10027b30:	and    ecx,0x30000
10027b36:	je     0x10027b44
10027b38:	cmp    ecx,0x10000
10027b3e:	jne    0x10027b46
10027b40:	or     eax,esi
10027b42:	jmp    0x10027b46
10027b44:	or     eax,edx
10027b46:	test   ebx,0x40000
10027b4c:	pop    esi
10027b4d:	je     0x10027b54
10027b4f:	or     eax,0x1000
10027b54:	ret    
10027b55:	xor    eax,eax
10027b57:	test   dl,0x10
10027b5a:	je     0x10027b61
10027b5c:	mov    eax,0x80
10027b61:	test   dl,0x8
10027b64:	push   ebx
10027b65:	push   esi
10027b66:	push   edi
10027b67:	mov    ebx,0x200
10027b6c:	je     0x10027b70
10027b6e:	or     eax,ebx
10027b70:	test   dl,0x4
10027b73:	je     0x10027b7a
10027b75:	or     eax,0x400
10027b7a:	test   dl,0x2
10027b7d:	je     0x10027b84
10027b7f:	or     eax,0x800
10027b84:	test   dl,0x1
10027b87:	je     0x10027b8e
10027b89:	or     eax,0x1000
10027b8e:	test   edx,0x80000
10027b94:	mov    edi,0x100
10027b99:	je     0x10027b9d
10027b9b:	or     eax,edi
10027b9d:	mov    ecx,edx
10027b9f:	mov    esi,0x300
10027ba4:	and    ecx,esi
10027ba6:	je     0x10027bc7
10027ba8:	cmp    ecx,edi
10027baa:	je     0x10027bc2
10027bac:	cmp    ecx,ebx
10027bae:	je     0x10027bbb
10027bb0:	cmp    ecx,esi
10027bb2:	jne    0x10027bc7
10027bb4:	or     eax,0x6000
10027bb9:	jmp    0x10027bc7
10027bbb:	or     eax,0x4000
10027bc0:	jmp    0x10027bc7
10027bc2:	or     eax,0x2000
10027bc7:	mov    ecx,0x3000000
10027bcc:	pop    edi
10027bcd:	and    edx,ecx
10027bcf:	cmp    edx,0x1000000
10027bd5:	pop    esi
10027bd6:	pop    ebx
10027bd7:	je     0x10027bef
10027bd9:	cmp    edx,0x2000000
10027bdf:	je     0x10027beb
10027be1:	cmp    edx,ecx
10027be3:	jne    0x10027bf4
10027be5:	or     eax,0x8000
10027bea:	ret    
10027beb:	or     eax,0x40
10027bee:	ret    
10027bef:	or     eax,0x8040
10027bf4:	ret    
10027bf5:	sub    esp,0x10
10027bf8:	push   ebx
10027bf9:	push   ebp
10027bfa:	push   esi
10027bfb:	push   edi
10027bfc:	fstcw  WORD PTR [esp+0x14]
10027c01:	mov    ebx,DWORD PTR [esp+0x14]
10027c05:	xor    edx,edx
10027c07:	test   bl,0x1
10027c0a:	je     0x10027c0f
10027c0c:	push   0x10
10027c0e:	pop    edx
10027c0f:	test   bl,0x4
10027c12:	je     0x10027c17
10027c14:	or     edx,0x8
10027c17:	test   bl,0x8
10027c1a:	je     0x10027c1f
10027c1c:	or     edx,0x4
10027c1f:	test   bl,0x10
10027c22:	je     0x10027c27
10027c24:	or     edx,0x2
10027c27:	test   bl,0x20
10027c2a:	je     0x10027c2f
10027c2c:	or     edx,0x1
10027c2f:	test   bl,0x2
10027c32:	je     0x10027c3a
10027c34:	or     edx,0x80000
10027c3a:	movzx  ecx,bx
10027c3d:	mov    eax,ecx
10027c3f:	mov    edi,0xc00
10027c44:	and    eax,edi
10027c46:	mov    ebp,0x300
10027c4b:	mov    esi,0x200
10027c50:	je     0x10027c72
10027c52:	cmp    eax,0x400
10027c57:	je     0x10027c6c
10027c59:	cmp    eax,0x800
10027c5e:	je     0x10027c68
10027c60:	cmp    eax,edi
10027c62:	jne    0x10027c72
10027c64:	or     edx,ebp
10027c66:	jmp    0x10027c72
10027c68:	or     edx,esi
10027c6a:	jmp    0x10027c72
10027c6c:	or     edx,0x100
10027c72:	and    ecx,ebp
10027c74:	je     0x10027c82
10027c76:	cmp    ecx,esi
10027c78:	jne    0x10027c88
10027c7a:	or     edx,0x10000
10027c80:	jmp    0x10027c88
10027c82:	or     edx,0x20000
10027c88:	test   bx,0x1000
10027c8d:	je     0x10027c95
10027c8f:	or     edx,0x40000
10027c95:	mov    esi,DWORD PTR [esp+0x28]
10027c99:	mov    ecx,DWORD PTR [esp+0x24]
10027c9d:	mov    eax,esi
10027c9f:	not    eax
10027ca1:	and    eax,edx
10027ca3:	and    ecx,esi
10027ca5:	or     eax,ecx
10027ca7:	cmp    eax,edx
10027ca9:	mov    DWORD PTR [esp+0x1c],eax
10027cad:	je     0x10027d5d
10027cb3:	mov    ebx,eax
10027cb5:	call   0x10027ac7
10027cba:	movzx  eax,ax
10027cbd:	mov    DWORD PTR [esp+0x10],eax
10027cc1:	fldcw  WORD PTR [esp+0x10]
10027cc5:	fstcw  WORD PTR [esp+0x10]
10027cca:	mov    ebx,DWORD PTR [esp+0x10]
10027cce:	xor    edx,edx
10027cd0:	test   bl,0x1
10027cd3:	je     0x10027cd8
10027cd5:	push   0x10
10027cd7:	pop    edx
10027cd8:	test   bl,0x4
10027cdb:	je     0x10027ce0
10027cdd:	or     edx,0x8
10027ce0:	test   bl,0x8
10027ce3:	je     0x10027ce8
10027ce5:	or     edx,0x4
10027ce8:	test   bl,0x10
10027ceb:	je     0x10027cf0
10027ced:	or     edx,0x2
10027cf0:	test   bl,0x20
10027cf3:	je     0x10027cf8
10027cf5:	or     edx,0x1
10027cf8:	test   bl,0x2
10027cfb:	je     0x10027d03
10027cfd:	or     edx,0x80000
10027d03:	movzx  ecx,bx
10027d06:	mov    eax,ecx
10027d08:	and    eax,edi
10027d0a:	je     0x10027d30
10027d0c:	cmp    eax,0x400
10027d11:	je     0x10027d2a
10027d13:	cmp    eax,0x800
10027d18:	je     0x10027d22
10027d1a:	cmp    eax,edi
10027d1c:	jne    0x10027d30
10027d1e:	or     edx,ebp
10027d20:	jmp    0x10027d30
10027d22:	or     edx,0x200
10027d28:	jmp    0x10027d30
10027d2a:	or     edx,0x100
10027d30:	and    ecx,ebp
10027d32:	je     0x10027d44
10027d34:	cmp    ecx,0x200
10027d3a:	jne    0x10027d4a
10027d3c:	or     edx,0x10000
10027d42:	jmp    0x10027d4a
10027d44:	or     edx,0x20000
10027d4a:	test   bx,0x1000
10027d4f:	je     0x10027d57
10027d51:	or     edx,0x40000
10027d57:	mov    eax,edx
10027d59:	mov    DWORD PTR [esp+0x1c],edx
10027d5d:	cmp    DWORD PTR ds:0x100cb1a0,0x0
10027d64:	je     0x10027ef0
10027d6a:	and    esi,0x308031f
10027d70:	mov    edi,esi
10027d72:	stmxcsr DWORD PTR [esp+0x18]
10027d77:	mov    eax,DWORD PTR [esp+0x18]
10027d7b:	xor    esi,esi
10027d7d:	test   al,al
10027d7f:	jns    0x10027d84
10027d81:	push   0x10
10027d83:	pop    esi
10027d84:	test   ax,0x200
10027d88:	je     0x10027d8d
10027d8a:	or     esi,0x8
10027d8d:	test   ax,0x400
10027d91:	je     0x10027d96
10027d93:	or     esi,0x4
10027d96:	test   ax,0x800
10027d9a:	je     0x10027d9f
10027d9c:	or     esi,0x2
10027d9f:	test   ax,0x1000
10027da3:	je     0x10027da8
10027da5:	or     esi,0x1
10027da8:	test   ax,0x100
10027dac:	je     0x10027db4
10027dae:	or     esi,0x80000
10027db4:	mov    ecx,eax
10027db6:	mov    ebp,0x6000
10027dbb:	and    ecx,ebp
10027dbd:	je     0x10027de9
10027dbf:	cmp    ecx,0x2000
10027dc5:	je     0x10027de3
10027dc7:	cmp    ecx,0x4000
10027dcd:	je     0x10027ddb
10027dcf:	cmp    ecx,ebp
10027dd1:	jne    0x10027de9
10027dd3:	or     esi,0x300
10027dd9:	jmp    0x10027de9
10027ddb:	or     esi,0x200
10027de1:	jmp    0x10027de9
10027de3:	or     esi,0x100
10027de9:	mov    ebx,0x8040
10027dee:	and    eax,ebx
10027df0:	sub    eax,0x40
10027df3:	je     0x10027e11
10027df5:	sub    eax,0x7fc0
10027dfa:	je     0x10027e09
10027dfc:	sub    eax,0x40
10027dff:	jne    0x10027e17
10027e01:	or     esi,0x1000000
10027e07:	jmp    0x10027e17
10027e09:	or     esi,0x3000000
10027e0f:	jmp    0x10027e17
10027e11:	or     esi,0x2000000
10027e17:	mov    edx,edi
10027e19:	and    edi,DWORD PTR [esp+0x24]
10027e1d:	not    edx
10027e1f:	and    edx,esi
10027e21:	or     edx,edi
10027e23:	cmp    edx,esi
10027e25:	jne    0x10027e2e
10027e27:	mov    eax,esi
10027e29:	jmp    0x10027ed9
10027e2e:	call   0x10027b55
10027e33:	push   eax
10027e34:	mov    DWORD PTR [esp+0x2c],eax
10027e38:	call   0x10027ef8
10027e3d:	pop    ecx
10027e3e:	stmxcsr DWORD PTR [esp+0x28]
10027e43:	mov    eax,DWORD PTR [esp+0x28]
10027e47:	xor    edx,edx
10027e49:	test   al,al
10027e4b:	jns    0x10027e50
10027e4d:	push   0x10
10027e4f:	pop    edx
10027e50:	mov    edi,0x200
10027e55:	test   edi,eax
10027e57:	je     0x10027e5c
10027e59:	or     edx,0x8
10027e5c:	test   ax,0x400
10027e60:	je     0x10027e65
10027e62:	or     edx,0x4
10027e65:	test   ax,0x800
10027e69:	je     0x10027e6e
10027e6b:	or     edx,0x2
10027e6e:	test   ax,0x1000
10027e72:	je     0x10027e77
10027e74:	or     edx,0x1
10027e77:	mov    esi,0x100
10027e7c:	test   esi,eax
10027e7e:	je     0x10027e86
10027e80:	or     edx,0x80000
10027e86:	mov    ecx,eax
10027e88:	and    ecx,ebp
10027e8a:	je     0x10027eae
10027e8c:	cmp    ecx,0x2000
10027e92:	je     0x10027eac
10027e94:	cmp    ecx,0x4000
10027e9a:	je     0x10027ea8
10027e9c:	cmp    ecx,ebp
10027e9e:	jne    0x10027eae
10027ea0:	or     edx,0x300
10027ea6:	jmp    0x10027eae
10027ea8:	or     edx,edi
10027eaa:	jmp    0x10027eae
10027eac:	or     edx,esi
10027eae:	and    eax,ebx
10027eb0:	sub    eax,0x40
10027eb3:	je     0x10027ed1
10027eb5:	sub    eax,0x7fc0
10027eba:	je     0x10027ec9
10027ebc:	sub    eax,0x40
10027ebf:	jne    0x10027ed7
10027ec1:	or     edx,0x1000000
10027ec7:	jmp    0x10027ed7
10027ec9:	or     edx,0x3000000
10027ecf:	jmp    0x10027ed7
10027ed1:	or     edx,0x2000000
10027ed7:	mov    eax,edx
10027ed9:	mov    ecx,DWORD PTR [esp+0x1c]
10027edd:	mov    edx,eax
10027edf:	xor    edx,ecx
10027ee1:	or     eax,ecx
10027ee3:	test   edx,0x8031f
10027ee9:	je     0x10027ef0
10027eeb:	or     eax,0x80000000
10027ef0:	pop    edi
10027ef1:	pop    esi
10027ef2:	pop    ebp
10027ef3:	pop    ebx
10027ef4:	add    esp,0x10
10027ef7:	ret    
10027ef8:	push   0x8
10027efa:	push   0x100bb8b8
10027eff:	call   0x1001a750
10027f04:	xor    eax,eax
10027f06:	cmp    DWORD PTR ds:0x100cb1a0,eax
10027f0c:	je     0x10027f64
10027f0e:	test   BYTE PTR [ebp+0x8],0x40
10027f12:	je     0x10027f5c
10027f14:	cmp    DWORD PTR ds:0x100c8a28,eax
10027f1a:	je     0x10027f5c
10027f1c:	mov    DWORD PTR [ebp-0x4],eax
10027f1f:	ldmxcsr DWORD PTR [ebp+0x8]
10027f23:	jmp    0x10027f53
10027f25:	mov    eax,DWORD PTR [ebp-0x14]
10027f28:	mov    eax,DWORD PTR [eax]
10027f2a:	mov    eax,DWORD PTR [eax]
10027f2c:	cmp    eax,0xc0000005
10027f31:	je     0x10027f3d
10027f33:	cmp    eax,0xc000001d
10027f38:	je     0x10027f3d
10027f3a:	xor    eax,eax
10027f3c:	ret    
10027f3d:	xor    eax,eax
10027f3f:	inc    eax
10027f40:	ret    
10027f41:	mov    esp,DWORD PTR [ebp-0x18]
10027f44:	and    DWORD PTR ds:0x100c8a28,0x0
10027f4b:	and    DWORD PTR [ebp+0x8],0xffffffbf
10027f4f:	ldmxcsr DWORD PTR [ebp+0x8]
10027f53:	mov    DWORD PTR [ebp-0x4],0xfffffffe
10027f5a:	jmp    0x10027f64
10027f5c:	and    DWORD PTR [ebp+0x8],0xffffffbf
10027f60:	ldmxcsr DWORD PTR [ebp+0x8]
10027f64:	call   0x1001a795
10027f69:	ret    
10027f6a:	int3   
10027f6b:	int3   
10027f6c:	int3   
10027f6d:	int3   
10027f6e:	int3   
10027f6f:	int3   
10027f70:	lea    eax,[edx-0x1]
10027f73:	pop    ebx
10027f74:	ret    
10027f75:	lea    esp,[esp+0x0]
10027f7c:	lea    esp,[esp+0x0]
10027f80:	xor    eax,eax
10027f82:	mov    al,BYTE PTR [esp+0x8]
10027f86:	push   ebx
10027f87:	mov    ebx,eax
10027f89:	shl    eax,0x8
10027f8c:	mov    edx,DWORD PTR [esp+0x8]
10027f90:	test   edx,0x3
10027f96:	je     0x10027fad
10027f98:	mov    cl,BYTE PTR [edx]
10027f9a:	add    edx,0x1
10027f9d:	cmp    cl,bl
10027f9f:	je     0x10027f70
10027fa1:	test   cl,cl
10027fa3:	je     0x10027ff6
10027fa5:	test   edx,0x3
10027fab:	jne    0x10027f98
10027fad:	or     ebx,eax
10027faf:	push   edi
10027fb0:	mov    eax,ebx
10027fb2:	shl    ebx,0x10
10027fb5:	push   esi
10027fb6:	or     ebx,eax
10027fb8:	mov    ecx,DWORD PTR [edx]
10027fba:	mov    edi,0x7efefeff
10027fbf:	mov    eax,ecx
10027fc1:	mov    esi,edi
10027fc3:	xor    ecx,ebx
10027fc5:	add    esi,eax
10027fc7:	add    edi,ecx
10027fc9:	xor    ecx,0xffffffff
10027fcc:	xor    eax,0xffffffff
10027fcf:	xor    ecx,edi
10027fd1:	xor    eax,esi
10027fd3:	add    edx,0x4
10027fd6:	and    ecx,0x81010100
10027fdc:	jne    0x10027ffa
10027fde:	and    eax,0x81010100
10027fe3:	je     0x10027fb8
10027fe5:	and    eax,0x1010100
10027fea:	jne    0x10027ff4
10027fec:	and    esi,0x80000000
10027ff2:	jne    0x10027fb8
10027ff4:	pop    esi
10027ff5:	pop    edi
10027ff6:	pop    ebx
10027ff7:	xor    eax,eax
10027ff9:	ret    
10027ffa:	mov    eax,DWORD PTR [edx-0x4]
10027ffd:	cmp    al,bl
10027fff:	je     0x10028037
10028001:	test   al,al
10028003:	je     0x10027ff4
10028005:	cmp    ah,bl
10028007:	je     0x10028030
10028009:	test   ah,ah
1002800b:	je     0x10027ff4
1002800d:	shr    eax,0x10
10028010:	cmp    al,bl
10028012:	je     0x10028029
10028014:	test   al,al
10028016:	je     0x10027ff4
10028018:	cmp    ah,bl
1002801a:	je     0x10028022
1002801c:	test   ah,ah
1002801e:	je     0x10027ff4
10028020:	jmp    0x10027fb8
10028022:	pop    esi
10028023:	pop    edi
10028024:	lea    eax,[edx-0x1]
10028027:	pop    ebx
10028028:	ret    
10028029:	lea    eax,[edx-0x2]
1002802c:	pop    esi
1002802d:	pop    edi
1002802e:	pop    ebx
1002802f:	ret    
10028030:	lea    eax,[edx-0x3]
10028033:	pop    esi
10028034:	pop    edi
10028035:	pop    ebx
10028036:	ret    
10028037:	lea    eax,[edx-0x4]
1002803a:	pop    esi
1002803b:	pop    edi
1002803c:	pop    ebx
1002803d:	ret    
1002803e:	int3   
1002803f:	int3   
10028040:	push   esi
10028041:	mov    esi,ecx
10028043:	mov    eax,DWORD PTR [esi+0x8]
10028046:	test   eax,eax
10028048:	mov    DWORD PTR [esi],0x100b40b4
1002804e:	je     0x10028058
10028050:	mov    ecx,DWORD PTR [eax]
10028052:	mov    edx,DWORD PTR [ecx+0x8]
10028055:	push   eax
10028056:	call   edx
10028058:	cmp    DWORD PTR [esi+0xc],0x0
1002805c:	je     0x10028075
1002805e:	call   DWORD PTR ds:0x1002f190
10028064:	test   eax,eax
10028066:	je     0x10028075
10028068:	mov    ecx,DWORD PTR [esi+0xc]
1002806b:	push   ecx
1002806c:	push   0x0
1002806e:	push   eax
1002806f:	call   DWORD PTR ds:0x1002f184
10028075:	pop    esi
10028076:	ret    
10028077:	int3   
10028078:	int3   
10028079:	int3   
1002807a:	int3   
1002807b:	int3   
1002807c:	int3   
1002807d:	int3   
1002807e:	int3   
1002807f:	int3   
10028080:	sub    esp,0x10
10028083:	mov    eax,DWORD PTR [esp+0x14]
10028087:	mov    ecx,DWORD PTR [esp+0x18]
1002808b:	push   0x100bb8d4
10028090:	lea    edx,[esp+0x4]
10028094:	push   edx
10028095:	mov    DWORD PTR [esp+0x8],0x100b40b4
1002809d:	mov    DWORD PTR [esp+0xc],eax
100280a1:	mov    DWORD PTR [esp+0x10],ecx
100280a5:	mov    DWORD PTR [esp+0x14],0x0
100280ad:	call   0x10018e6e
100280b2:	int3   
100280b3:	int3   
100280b4:	int3   
100280b5:	int3   
100280b6:	int3   
100280b7:	int3   
100280b8:	int3   
100280b9:	int3   
100280ba:	int3   
100280bb:	int3   
100280bc:	int3   
100280bd:	int3   
100280be:	int3   
100280bf:	int3   
100280c0:	mov    eax,DWORD PTR [esp+0x4]
100280c4:	push   esi
100280c5:	mov    esi,ecx
100280c7:	mov    DWORD PTR [esi],0x100b40b4
100280cd:	mov    ecx,DWORD PTR [eax+0x4]
100280d0:	mov    DWORD PTR [esi+0x4],ecx
100280d3:	mov    edx,DWORD PTR [eax+0x8]
100280d6:	mov    eax,edx
100280d8:	test   eax,eax
100280da:	mov    DWORD PTR [esi+0x8],edx
100280dd:	mov    DWORD PTR [esi+0xc],0x0
100280e4:	je     0x100280ee
100280e6:	mov    ecx,DWORD PTR [eax]
100280e8:	mov    edx,DWORD PTR [ecx+0x4]
100280eb:	push   eax
100280ec:	call   edx
100280ee:	mov    eax,esi
100280f0:	pop    esi
100280f1:	ret    0x4
100280f4:	int3   
100280f5:	int3   
100280f6:	int3   
100280f7:	int3   
100280f8:	int3   
100280f9:	int3   
100280fa:	int3   
100280fb:	int3   
100280fc:	int3   
100280fd:	int3   
100280fe:	int3   
100280ff:	int3   
10028100:	push   esi
10028101:	mov    esi,ecx
10028103:	mov    eax,DWORD PTR [esi+0x8]
10028106:	test   eax,eax
10028108:	mov    DWORD PTR [esi],0x100b40b4
1002810e:	je     0x10028118
10028110:	mov    ecx,DWORD PTR [eax]
10028112:	mov    edx,DWORD PTR [ecx+0x8]
10028115:	push   eax
10028116:	call   edx
10028118:	cmp    DWORD PTR [esi+0xc],0x0
1002811c:	je     0x10028135
1002811e:	call   DWORD PTR ds:0x1002f190
10028124:	test   eax,eax
10028126:	je     0x10028135
10028128:	mov    ecx,DWORD PTR [esi+0xc]
1002812b:	push   ecx
1002812c:	push   0x0
1002812e:	push   eax
1002812f:	call   DWORD PTR ds:0x1002f184
10028135:	test   BYTE PTR [esp+0x8],0x1
1002813a:	je     0x10028145
1002813c:	push   esi
1002813d:	call   0x1001876e
10028142:	add    esp,0x4
10028145:	mov    eax,esi
10028147:	pop    esi
10028148:	ret    0x4
1002814b:	int3   
1002814c:	int3   
1002814d:	int3   
1002814e:	int3   
1002814f:	int3   
10028150:	mov    edx,DWORD PTR [esp+0x4]
10028154:	xor    ecx,ecx
10028156:	cmp    edx,ecx
10028158:	je     0x100281a7
1002815a:	mov    eax,DWORD PTR [edx+0x1c]
1002815d:	cmp    eax,ecx
1002815f:	je     0x100281a7
10028161:	mov    DWORD PTR [eax+0x1c],ecx
10028164:	mov    DWORD PTR [edx+0x14],ecx
10028167:	mov    DWORD PTR [edx+0x8],ecx
1002816a:	mov    DWORD PTR [edx+0x18],ecx
1002816d:	mov    DWORD PTR [edx+0x30],0x1
10028174:	mov    DWORD PTR [eax],ecx
10028176:	mov    DWORD PTR [eax+0x4],ecx
10028179:	mov    DWORD PTR [eax+0xc],ecx
1002817c:	mov    DWORD PTR [eax+0x20],ecx
1002817f:	mov    DWORD PTR [eax+0x28],ecx
10028182:	mov    DWORD PTR [eax+0x2c],ecx
10028185:	mov    DWORD PTR [eax+0x30],ecx
10028188:	mov    DWORD PTR [eax+0x38],ecx
1002818b:	mov    DWORD PTR [eax+0x3c],ecx
1002818e:	lea    ecx,[eax+0x530]
10028194:	mov    DWORD PTR [eax+0x14],0x8000
1002819b:	mov    DWORD PTR [eax+0x6c],ecx
1002819e:	mov    DWORD PTR [eax+0x50],ecx
100281a1:	mov    DWORD PTR [eax+0x4c],ecx
100281a4:	xor    eax,eax
100281a6:	ret    
100281a7:	mov    eax,0xfffffffe
100281ac:	ret    
100281ad:	int3   
100281ae:	int3   
100281af:	int3   
100281b0:	mov    eax,DWORD PTR [esp+0xc]
100281b4:	push   edi
100281b5:	xor    edi,edi
100281b7:	cmp    eax,edi
100281b9:	je     0x10028274
100281bf:	cmp    BYTE PTR [eax],0x31
100281c2:	jne    0x10028274
100281c8:	cmp    DWORD PTR [esp+0x14],0x38
100281cd:	jne    0x10028274
100281d3:	push   esi
100281d4:	mov    esi,DWORD PTR [esp+0xc]
100281d8:	cmp    esi,edi
100281da:	je     0x1002826c
100281e0:	cmp    DWORD PTR [esi+0x20],edi
100281e3:	mov    DWORD PTR [esi+0x18],edi
100281e6:	jne    0x100281f2
100281e8:	mov    DWORD PTR [esi+0x20],0x1002a620
100281ef:	mov    DWORD PTR [esi+0x28],edi
100281f2:	cmp    DWORD PTR [esi+0x24],edi
100281f5:	jne    0x100281fe
100281f7:	mov    DWORD PTR [esi+0x24],0x1002a640
100281fe:	mov    eax,DWORD PTR [esi+0x28]
10028201:	mov    ecx,DWORD PTR [esi+0x20]
10028204:	push   0x2530
10028209:	push   0x1
1002820b:	push   eax
1002820c:	call   ecx
1002820e:	add    esp,0xc
10028211:	cmp    eax,edi
10028213:	jne    0x1002821d
10028215:	pop    esi
10028216:	mov    eax,0xfffffffc
1002821b:	pop    edi
1002821c:	ret    
1002821d:	mov    ecx,DWORD PTR [esp+0x10]
10028221:	cmp    ecx,edi
10028223:	mov    DWORD PTR [esi+0x1c],eax
10028226:	jge    0x1002822f
10028228:	mov    DWORD PTR [eax+0x8],edi
1002822b:	neg    ecx
1002822d:	jmp    0x10028242
1002822f:	mov    edx,ecx
10028231:	sar    edx,0x4
10028234:	add    edx,0x1
10028237:	cmp    ecx,0x30
1002823a:	mov    DWORD PTR [eax+0x8],edx
1002823d:	jge    0x10028242
1002823f:	and    ecx,0xf
10028242:	lea    edx,[ecx-0x8]
10028245:	cmp    edx,0x7
10028248:	ja     0x1002825c
1002824a:	push   esi
1002824b:	mov    DWORD PTR [eax+0x24],ecx
1002824e:	mov    DWORD PTR [eax+0x34],edi
10028251:	call   0x10028150
10028256:	add    esp,0x4
10028259:	pop    esi
1002825a:	pop    edi
1002825b:	ret    
1002825c:	mov    ecx,DWORD PTR [esi+0x24]
1002825f:	push   eax
10028260:	mov    eax,DWORD PTR [esi+0x28]
10028263:	push   eax
10028264:	call   ecx
10028266:	add    esp,0x8
10028269:	mov    DWORD PTR [esi+0x1c],edi
1002826c:	pop    esi
1002826d:	mov    eax,0xfffffffe
10028272:	pop    edi
10028273:	ret    
10028274:	mov    eax,0xfffffffa
10028279:	pop    edi
1002827a:	ret    
1002827b:	int3   
1002827c:	int3   
1002827d:	int3   
1002827e:	int3   
1002827f:	int3   
10028280:	mov    DWORD PTR [eax+0x4c],0x100b40b8
10028287:	mov    DWORD PTR [eax+0x54],0x9
1002828e:	mov    DWORD PTR [eax+0x50],0x100b48b8
10028295:	mov    DWORD PTR [eax+0x58],0x5
1002829c:	ret    
1002829d:	int3   
1002829e:	int3   
1002829f:	int3   
100282a0:	push   ebp
100282a1:	push   esi
100282a2:	mov    esi,DWORD PTR [ebx+0x1c]
100282a5:	xor    ebp,ebp
100282a7:	cmp    DWORD PTR [esi+0x34],ebp
100282aa:	push   edi
100282ab:	mov    edi,eax
100282ad:	jne    0x100282d6
100282af:	mov    ecx,DWORD PTR [esi+0x24]
100282b2:	mov    edx,DWORD PTR [ebx+0x20]
100282b5:	mov    eax,0x1
100282ba:	shl    eax,cl
100282bc:	mov    ecx,DWORD PTR [ebx+0x28]
100282bf:	push   0x1
100282c1:	push   eax
100282c2:	push   ecx
100282c3:	call   edx
100282c5:	add    esp,0xc
100282c8:	cmp    eax,ebp
100282ca:	mov    DWORD PTR [esi+0x34],eax
100282cd:	jne    0x100282d6
100282cf:	pop    edi
100282d0:	pop    esi
100282d1:	lea    eax,[ebp+0x1]
100282d4:	pop    ebp
100282d5:	ret    
100282d6:	cmp    DWORD PTR [esi+0x28],ebp
100282d9:	jne    0x100282ee
100282db:	mov    ecx,DWORD PTR [esi+0x24]
100282de:	mov    eax,0x1
100282e3:	shl    eax,cl
100282e5:	mov    DWORD PTR [esi+0x30],ebp
100282e8:	mov    DWORD PTR [esi+0x2c],ebp
100282eb:	mov    DWORD PTR [esi+0x28],eax
100282ee:	sub    edi,DWORD PTR [ebx+0x10]
100282f1:	mov    eax,DWORD PTR [esi+0x28]
100282f4:	cmp    edi,eax
100282f6:	jb     0x1002831a
100282f8:	mov    ecx,DWORD PTR [ebx+0xc]
100282fb:	mov    edx,DWORD PTR [esi+0x34]
100282fe:	push   eax
100282ff:	sub    ecx,eax
10028301:	push   ecx
10028302:	push   edx
10028303:	call   0x10019470
10028308:	mov    eax,DWORD PTR [esi+0x28]
1002830b:	add    esp,0xc
1002830e:	pop    edi
1002830f:	mov    DWORD PTR [esi+0x30],ebp
10028312:	mov    DWORD PTR [esi+0x2c],eax
10028315:	pop    esi
10028316:	xor    eax,eax
10028318:	pop    ebp
10028319:	ret    
1002831a:	sub    eax,DWORD PTR [esi+0x30]
1002831d:	mov    ebp,eax
1002831f:	cmp    ebp,edi
10028321:	jbe    0x10028325
10028323:	mov    ebp,edi
10028325:	mov    ecx,DWORD PTR [ebx+0xc]
10028328:	mov    edx,DWORD PTR [esi+0x34]
1002832b:	add    edx,DWORD PTR [esi+0x30]
1002832e:	push   ebp
1002832f:	sub    ecx,edi
10028331:	push   ecx
10028332:	push   edx
10028333:	call   0x10019470
10028338:	add    esp,0xc
1002833b:	sub    edi,ebp
1002833d:	je     0x10028361
1002833f:	mov    eax,DWORD PTR [ebx+0xc]
10028342:	mov    ecx,DWORD PTR [esi+0x34]
10028345:	push   edi
10028346:	sub    eax,edi
10028348:	push   eax
10028349:	push   ecx
1002834a:	call   0x10019470
1002834f:	mov    edx,DWORD PTR [esi+0x28]
10028352:	add    esp,0xc
10028355:	mov    DWORD PTR [esi+0x30],edi
10028358:	pop    edi
10028359:	mov    DWORD PTR [esi+0x2c],edx
1002835c:	pop    esi
1002835d:	xor    eax,eax
1002835f:	pop    ebp
10028360:	ret    
10028361:	add    DWORD PTR [esi+0x30],ebp
10028364:	mov    ecx,DWORD PTR [esi+0x30]
10028367:	mov    eax,DWORD PTR [esi+0x28]
1002836a:	cmp    ecx,eax
1002836c:	jne    0x10028375
1002836e:	mov    DWORD PTR [esi+0x30],0x0
10028375:	mov    ecx,DWORD PTR [esi+0x2c]
10028378:	cmp    ecx,eax
1002837a:	jae    0x10028381
1002837c:	add    ecx,ebp
1002837e:	mov    DWORD PTR [esi+0x2c],ecx
10028381:	pop    edi
10028382:	pop    esi
10028383:	xor    eax,eax
10028385:	pop    ebp
10028386:	ret    
10028387:	int3   
10028388:	int3   
10028389:	int3   
1002838a:	int3   
1002838b:	int3   
1002838c:	int3   
1002838d:	int3   
1002838e:	int3   
1002838f:	int3   
10028390:	mov    eax,DWORD PTR [esp+0x4]
10028394:	sub    esp,0x2c
10028397:	test   eax,eax
10028399:	push   edi
1002839a:	je     0x100298f4
100283a0:	mov    edi,DWORD PTR [eax+0x1c]
100283a3:	test   edi,edi
100283a5:	je     0x100298f4
100283ab:	cmp    DWORD PTR [eax+0xc],0x0
100283af:	je     0x100298f4
100283b5:	cmp    DWORD PTR [eax],0x0
100283b8:	jne    0x100283c4
100283ba:	cmp    DWORD PTR [eax+0x4],0x0
100283be:	jne    0x100298f4
100283c4:	cmp    DWORD PTR [edi],0xb
100283c7:	jne    0x100283cf
100283c9:	mov    DWORD PTR [edi],0xc
100283cf:	mov    ecx,DWORD PTR [eax+0xc]
100283d2:	mov    edx,DWORD PTR [eax+0x4]
100283d5:	push   ebx
100283d6:	mov    ebx,DWORD PTR [edi+0x38]
100283d9:	push   ebp
100283da:	mov    ebp,DWORD PTR [eax]
100283dc:	mov    DWORD PTR [esp+0x24],ecx
100283e0:	mov    ecx,DWORD PTR [eax+0x10]
100283e3:	mov    eax,DWORD PTR [edi]
100283e5:	cmp    eax,0x1c
100283e8:	push   esi
100283e9:	mov    esi,DWORD PTR [edi+0x3c]
100283ec:	mov    DWORD PTR [esp+0x20],ecx
100283f0:	mov    DWORD PTR [esp+0x10],edx
100283f4:	mov    DWORD PTR [esp+0x18],ebx
100283f8:	mov    DWORD PTR [esp+0x38],edx
100283fc:	mov    DWORD PTR [esp+0x2c],ecx
10028400:	mov    DWORD PTR [esp+0x30],0x0
10028408:	ja     0x100297a1
1002840e:	mov    edi,edi
10028410:	jmp    DWORD PTR [eax*4+0x10029900]
10028417:	cmp    DWORD PTR [edi+0x8],0x0
1002841b:	jne    0x10028428
1002841d:	mov    DWORD PTR [edi],0xc
10028423:	jmp    0x10029796
10028428:	cmp    esi,0x10
1002842b:	jae    0x10028458
1002842d:	lea    ecx,[ecx+0x0]
10028430:	test   edx,edx
10028432:	je     0x100297f4
10028438:	movzx  eax,BYTE PTR [ebp+0x0]
1002843c:	mov    ecx,esi
1002843e:	shl    eax,cl
10028440:	sub    edx,0x1
10028443:	add    esi,0x8
10028446:	add    ebp,0x1
10028449:	add    ebx,eax
1002844b:	cmp    esi,0x10
1002844e:	mov    DWORD PTR [esp+0x10],edx
10028452:	mov    DWORD PTR [esp+0x18],ebx
10028456:	jb     0x10028430
10028458:	test   BYTE PTR [edi+0x8],0x2
1002845c:	je     0x100284ab
1002845e:	cmp    ebx,0x8b1f
10028464:	jne    0x100284ab
10028466:	push   0x0
10028468:	push   0x0
1002846a:	push   0x0
1002846c:	call   0x1002b520
10028471:	mov    DWORD PTR [edi+0x18],eax
10028474:	push   0x2
10028476:	lea    ecx,[esp+0x2c]
1002847a:	mov    BYTE PTR [esp+0x2c],0x1f
1002847f:	mov    BYTE PTR [esp+0x2d],0x8b
10028484:	mov    edx,DWORD PTR [edi+0x18]
10028487:	push   ecx
10028488:	push   edx
10028489:	call   0x1002b520
1002848e:	mov    edx,DWORD PTR [esp+0x28]
10028492:	xor    ebx,ebx
10028494:	add    esp,0x18
10028497:	mov    DWORD PTR [edi+0x18],eax
1002849a:	mov    DWORD PTR [esp+0x18],ebx
1002849e:	xor    esi,esi
100284a0:	mov    DWORD PTR [edi],0x1
100284a6:	jmp    0x10029796
100284ab:	mov    eax,DWORD PTR [edi+0x20]
100284ae:	test   eax,eax
100284b0:	mov    DWORD PTR [edi+0x10],0x0
100284b7:	je     0x100284c0
100284b9:	mov    DWORD PTR [eax+0x30],0xffffffff
100284c0:	test   BYTE PTR [edi+0x8],0x1
100284c4:	je     0x10028571
100284ca:	movzx  eax,bl
100284cd:	shl    eax,0x8
100284d0:	mov    ecx,ebx
100284d2:	shr    ecx,0x8
100284d5:	add    eax,ecx
100284d7:	xor    edx,edx
100284d9:	mov    ecx,0x1f
100284de:	div    ecx
100284e0:	test   edx,edx
100284e2:	jne    0x10028571
100284e8:	mov    edx,ebx
100284ea:	and    dl,0xf
100284ed:	cmp    dl,0x8
100284f0:	je     0x10028506
100284f2:	mov    eax,DWORD PTR [esp+0x40]
100284f6:	mov    edx,DWORD PTR [esp+0x10]
100284fa:	mov    DWORD PTR [eax+0x18],0x100b4b04
10028501:	jmp    0x10029790
10028506:	shr    ebx,0x4
10028509:	mov    ecx,ebx
1002850b:	and    ecx,0xf
1002850e:	add    ecx,0x8
10028511:	sub    esi,0x4
10028514:	cmp    ecx,DWORD PTR [edi+0x24]
10028517:	mov    DWORD PTR [esp+0x18],ebx
1002851b:	jbe    0x10028531
1002851d:	mov    ecx,DWORD PTR [esp+0x40]
10028521:	mov    edx,DWORD PTR [esp+0x10]
10028525:	mov    DWORD PTR [ecx+0x18],0x100b4af0
1002852c:	jmp    0x10029790
10028531:	mov    edx,0x1
10028536:	shl    edx,cl
10028538:	push   0x0
1002853a:	push   0x0
1002853c:	push   0x0
1002853e:	mov    DWORD PTR [edi+0x14],edx
10028541:	call   0x1002b000
10028546:	mov    ecx,DWORD PTR [esp+0x4c]
1002854a:	mov    edx,DWORD PTR [esp+0x1c]
1002854e:	shr    ebx,0x8
10028551:	not    ebx
10028553:	and    ebx,0x2
10028556:	or     ebx,0x9
10028559:	mov    DWORD PTR [edi+0x18],eax
1002855c:	mov    DWORD PTR [ecx+0x30],eax
1002855f:	mov    DWORD PTR [edi],ebx
10028561:	xor    ebx,ebx
10028563:	add    esp,0xc
10028566:	mov    DWORD PTR [esp+0x18],ebx
1002856a:	xor    esi,esi
1002856c:	jmp    0x10029796
10028571:	mov    edx,DWORD PTR [esp+0x40]
10028575:	mov    DWORD PTR [edx+0x18],0x100b4ad8
1002857c:	mov    DWORD PTR [edi],0x1b
10028582:	nop
10028583:	mov    edx,DWORD PTR [esp+0x10]
10028587:	jmp    0x10029796
1002858c:	cmp    esi,0x10
1002858f:	jae    0x100285b9
10028591:	test   edx,edx
10028593:	je     0x100297f4
10028599:	movzx  eax,BYTE PTR [ebp+0x0]
1002859d:	mov    ecx,esi
1002859f:	shl    eax,cl
100285a1:	sub    edx,0x1
100285a4:	add    esi,0x8
100285a7:	add    ebp,0x1
100285aa:	add    ebx,eax
100285ac:	cmp    esi,0x10
100285af:	mov    DWORD PTR [esp+0x10],edx
100285b3:	mov    DWORD PTR [esp+0x18],ebx
100285b7:	jb     0x10028591
100285b9:	cmp    bl,0x8
100285bc:	mov    DWORD PTR [edi+0x10],ebx
100285bf:	je     0x100285d1
100285c1:	mov    ecx,DWORD PTR [esp+0x40]
100285c5:	mov    DWORD PTR [ecx+0x18],0x100b4b04
100285cc:	jmp    0x10029790
100285d1:	test   ebx,0xe000
100285d7:	je     0x100285e9
100285d9:	mov    eax,DWORD PTR [esp+0x40]
100285dd:	mov    DWORD PTR [eax+0x18],0x100b4abc
100285e4:	jmp    0x10029790
100285e9:	mov    eax,DWORD PTR [edi+0x20]
100285ec:	test   eax,eax
100285ee:	je     0x100285fa
100285f0:	mov    ecx,ebx
100285f2:	shr    ecx,0x8
100285f5:	and    ecx,0x1
100285f8:	mov    DWORD PTR [eax],ecx
100285fa:	test   DWORD PTR [edi+0x10],0x200
10028601:	je     0x10028628
10028603:	mov    BYTE PTR [esp+0x1c],bl
10028607:	shr    ebx,0x8
1002860a:	push   0x2
1002860c:	lea    edx,[esp+0x20]
10028610:	mov    BYTE PTR [esp+0x21],bl
10028614:	mov    eax,DWORD PTR [edi+0x18]
10028617:	push   edx
10028618:	push   eax
10028619:	call   0x1002b520
1002861e:	mov    edx,DWORD PTR [esp+0x1c]
10028622:	add    esp,0xc
10028625:	mov    DWORD PTR [edi+0x18],eax
10028628:	xor    ebx,ebx
1002862a:	xor    esi,esi
1002862c:	mov    DWORD PTR [edi],0x2
10028632:	jmp    0x10028640
10028634:	cmp    esi,0x20
10028637:	jae    0x10028664
10028639:	lea    esp,[esp+0x0]
10028640:	test   edx,edx
10028642:	je     0x100297f4
10028648:	movzx  eax,BYTE PTR [ebp+0x0]
1002864c:	mov    ecx,esi
1002864e:	shl    eax,cl
10028650:	sub    edx,0x1
10028653:	add    esi,0x8
10028656:	add    ebp,0x1
10028659:	add    ebx,eax
1002865b:	cmp    esi,0x20
1002865e:	mov    DWORD PTR [esp+0x10],edx
10028662:	jb     0x10028640
10028664:	mov    eax,DWORD PTR [edi+0x20]
10028667:	test   eax,eax
10028669:	je     0x1002866e
1002866b:	mov    DWORD PTR [eax+0x4],ebx
1002866e:	test   DWORD PTR [edi+0x10],0x200
10028675:	je     0x100286ae
10028677:	mov    BYTE PTR [esp+0x1c],bl
1002867b:	mov    ecx,ebx
1002867d:	mov    edx,ebx
1002867f:	shr    ecx,0x8
10028682:	shr    edx,0x10
10028685:	shr    ebx,0x18
10028688:	push   0x4
1002868a:	lea    eax,[esp+0x20]
1002868e:	mov    BYTE PTR [esp+0x21],cl
10028692:	mov    BYTE PTR [esp+0x22],dl
10028696:	mov    BYTE PTR [esp+0x23],bl
1002869a:	mov    ecx,DWORD PTR [edi+0x18]
1002869d:	push   eax
1002869e:	push   ecx
1002869f:	call   0x1002b520
100286a4:	mov    edx,DWORD PTR [esp+0x1c]
100286a8:	add    esp,0xc
100286ab:	mov    DWORD PTR [edi+0x18],eax
100286ae:	xor    ebx,ebx
100286b0:	xor    esi,esi
100286b2:	mov    DWORD PTR [edi],0x3
100286b8:	jmp    0x100286c0
100286ba:	cmp    esi,0x10
100286bd:	jae    0x100286e4
100286bf:	nop
100286c0:	test   edx,edx
100286c2:	je     0x100297f4
100286c8:	movzx  eax,BYTE PTR [ebp+0x0]
100286cc:	mov    ecx,esi
100286ce:	shl    eax,cl
100286d0:	sub    edx,0x1
100286d3:	add    esi,0x8
100286d6:	add    ebp,0x1
100286d9:	add    ebx,eax
100286db:	cmp    esi,0x10
100286de:	mov    DWORD PTR [esp+0x10],edx
100286e2:	jb     0x100286c0
100286e4:	mov    eax,DWORD PTR [edi+0x20]
100286e7:	test   eax,eax
100286e9:	je     0x10028701
100286eb:	mov    ecx,ebx
100286ed:	and    ecx,0xff
100286f3:	mov    DWORD PTR [eax+0x8],ecx
100286f6:	mov    ecx,DWORD PTR [edi+0x20]
100286f9:	mov    eax,ebx
100286fb:	shr    eax,0x8
100286fe:	mov    DWORD PTR [ecx+0xc],eax
10028701:	test   DWORD PTR [edi+0x10],0x200
10028708:	je     0x1002872f
1002870a:	mov    BYTE PTR [esp+0x1c],bl
1002870e:	shr    ebx,0x8
10028711:	push   0x2
10028713:	lea    edx,[esp+0x20]
10028717:	mov    BYTE PTR [esp+0x21],bl
1002871b:	mov    eax,DWORD PTR [edi+0x18]
1002871e:	push   edx
1002871f:	push   eax
10028720:	call   0x1002b520
10028725:	mov    edx,DWORD PTR [esp+0x1c]
10028729:	add    esp,0xc
1002872c:	mov    DWORD PTR [edi+0x18],eax
1002872f:	xor    ebx,ebx
10028731:	mov    DWORD PTR [esp+0x18],ebx
10028735:	xor    esi,esi
10028737:	mov    DWORD PTR [edi],0x4
1002873d:	test   DWORD PTR [edi+0x10],0x400
10028744:	je     0x100287b9
10028746:	cmp    esi,0x10
10028749:	jae    0x10028774
1002874b:	jmp    0x10028750
1002874d:	lea    ecx,[ecx+0x0]
10028750:	test   edx,edx
10028752:	je     0x100297f4
10028758:	movzx  eax,BYTE PTR [ebp+0x0]
1002875c:	mov    ecx,esi
1002875e:	shl    eax,cl
10028760:	sub    edx,0x1
10028763:	add    esi,0x8
10028766:	add    ebp,0x1
10028769:	add    ebx,eax
1002876b:	cmp    esi,0x10
1002876e:	mov    DWORD PTR [esp+0x10],edx
10028772:	jb     0x10028750
10028774:	mov    eax,DWORD PTR [edi+0x20]
10028777:	test   eax,eax
10028779:	mov    DWORD PTR [edi+0x40],ebx
1002877c:	je     0x10028781
1002877e:	mov    DWORD PTR [eax+0x14],ebx
10028781:	test   DWORD PTR [edi+0x10],0x200
10028788:	je     0x100287af
1002878a:	mov    BYTE PTR [esp+0x1c],bl
1002878e:	shr    ebx,0x8
10028791:	push   0x2
10028793:	lea    ecx,[esp+0x20]
10028797:	mov    BYTE PTR [esp+0x21],bl
1002879b:	mov    edx,DWORD PTR [edi+0x18]
1002879e:	push   ecx
1002879f:	push   edx
100287a0:	call   0x1002b520
100287a5:	mov    edx,DWORD PTR [esp+0x1c]
100287a9:	add    esp,0xc
100287ac:	mov    DWORD PTR [edi+0x18],eax
100287af:	xor    ebx,ebx
100287b1:	mov    DWORD PTR [esp+0x18],ebx
100287b5:	xor    esi,esi
100287b7:	jmp    0x100287c7
100287b9:	mov    eax,DWORD PTR [edi+0x20]
100287bc:	test   eax,eax
100287be:	je     0x100287c7
100287c0:	mov    DWORD PTR [eax+0x10],0x0
100287c7:	mov    DWORD PTR [edi],0x5
100287cd:	test   DWORD PTR [edi+0x10],0x400
100287d4:	je     0x10028878
100287da:	mov    eax,DWORD PTR [edi+0x40]
100287dd:	cmp    eax,edx
100287df:	mov    DWORD PTR [esp+0x14],eax
100287e3:	jbe    0x100287eb
100287e5:	mov    eax,edx
100287e7:	mov    DWORD PTR [esp+0x14],edx
100287eb:	test   eax,eax
100287ed:	je     0x1002886e
100287ef:	mov    ecx,DWORD PTR [edi+0x20]
100287f2:	test   ecx,ecx
100287f4:	je     0x1002883d
100287f6:	mov    ecx,DWORD PTR [ecx+0x10]
100287f9:	test   ecx,ecx
100287fb:	mov    DWORD PTR [esp+0x34],ecx
100287ff:	je     0x1002883d
10028801:	mov    ecx,DWORD PTR [edi+0x20]
10028804:	mov    ecx,DWORD PTR [ecx+0x14]
10028807:	sub    ecx,DWORD PTR [edi+0x40]
1002880a:	mov    edx,DWORD PTR [edi+0x20]
1002880d:	mov    edx,DWORD PTR [edx+0x18]
10028810:	mov    DWORD PTR [esp+0x24],ecx
10028814:	add    ecx,eax
10028816:	cmp    ecx,edx
10028818:	jbe    0x10028820
1002881a:	sub    edx,DWORD PTR [esp+0x24]
1002881e:	mov    eax,edx
10028820:	mov    edx,DWORD PTR [esp+0x34]
10028824:	push   eax
10028825:	mov    eax,DWORD PTR [esp+0x28]
10028829:	add    edx,eax
1002882b:	push   ebp
1002882c:	push   edx
1002882d:	call   0x10019470
10028832:	mov    eax,DWORD PTR [esp+0x20]
10028836:	mov    edx,DWORD PTR [esp+0x1c]
1002883a:	add    esp,0xc
1002883d:	test   DWORD PTR [edi+0x10],0x200
10028844:	je     0x10028863
10028846:	mov    ecx,DWORD PTR [esp+0x14]
1002884a:	mov    edx,DWORD PTR [edi+0x18]
1002884d:	push   ecx
1002884e:	push   ebp
1002884f:	push   edx
10028850:	call   0x1002b520
10028855:	mov    edx,DWORD PTR [esp+0x1c]
10028859:	mov    DWORD PTR [edi+0x18],eax
1002885c:	mov    eax,DWORD PTR [esp+0x20]
10028860:	add    esp,0xc
10028863:	sub    edx,eax
10028865:	add    ebp,eax
10028867:	sub    DWORD PTR [edi+0x40],eax
1002886a:	mov    DWORD PTR [esp+0x10],edx
1002886e:	cmp    DWORD PTR [edi+0x40],0x0
10028872:	jne    0x100297f4
10028878:	mov    DWORD PTR [edi+0x40],0x0
1002887f:	mov    DWORD PTR [edi],0x6
10028885:	test   DWORD PTR [edi+0x10],0x800
1002888c:	je     0x10028926
10028892:	test   edx,edx
10028894:	je     0x100297f4
1002889a:	xor    eax,eax
1002889c:	lea    esp,[esp+0x0]
100288a0:	movzx  ecx,BYTE PTR [eax+ebp*1]
100288a4:	add    eax,0x1
100288a7:	mov    DWORD PTR [esp+0x14],eax
100288ab:	mov    eax,DWORD PTR [edi+0x20]
100288ae:	test   eax,eax
100288b0:	mov    DWORD PTR [esp+0x24],ecx
100288b4:	je     0x100288dc
100288b6:	mov    ecx,DWORD PTR [eax+0x1c]
100288b9:	test   ecx,ecx
100288bb:	mov    DWORD PTR [esp+0x34],ecx
100288bf:	je     0x100288dc
100288c1:	mov    ecx,DWORD PTR [edi+0x40]
100288c4:	cmp    ecx,DWORD PTR [eax+0x20]
100288c7:	jae    0x100288dc
100288c9:	mov    edx,DWORD PTR [esp+0x34]
100288cd:	mov    al,BYTE PTR [esp+0x24]
100288d1:	mov    BYTE PTR [edx+ecx*1],al
100288d4:	add    DWORD PTR [edi+0x40],0x1
100288d8:	mov    edx,DWORD PTR [esp+0x10]
100288dc:	cmp    DWORD PTR [esp+0x24],0x0
100288e1:	je     0x100288eb
100288e3:	mov    eax,DWORD PTR [esp+0x14]
100288e7:	cmp    eax,edx
100288e9:	jb     0x100288a0
100288eb:	test   DWORD PTR [edi+0x10],0x200
100288f2:	je     0x1002890d
100288f4:	mov    ecx,DWORD PTR [esp+0x14]
100288f8:	mov    edx,DWORD PTR [edi+0x18]
100288fb:	push   ecx
100288fc:	push   ebp
100288fd:	push   edx
100288fe:	call   0x1002b520
10028903:	mov    edx,DWORD PTR [esp+0x1c]
10028907:	add    esp,0xc
1002890a:	mov    DWORD PTR [edi+0x18],eax
1002890d:	mov    eax,DWORD PTR [esp+0x14]
10028911:	sub    edx,eax
10028913:	add    ebp,eax
10028915:	cmp    DWORD PTR [esp+0x24],0x0
1002891a:	mov    DWORD PTR [esp+0x10],edx
1002891e:	jne    0x100297f4
10028924:	jmp    0x10028934
10028926:	mov    eax,DWORD PTR [edi+0x20]
10028929:	test   eax,eax
1002892b:	je     0x10028934
1002892d:	mov    DWORD PTR [eax+0x1c],0x0
10028934:	mov    DWORD PTR [edi+0x40],0x0
1002893b:	mov    DWORD PTR [edi],0x7
10028941:	test   DWORD PTR [edi+0x10],0x1000
10028948:	je     0x100289e6
1002894e:	test   edx,edx
10028950:	je     0x100297f4
10028956:	xor    eax,eax
10028958:	jmp    0x10028960
1002895a:	lea    ebx,[ebx+0x0]
10028960:	movzx  ecx,BYTE PTR [eax+ebp*1]
10028964:	add    eax,0x1
10028967:	mov    DWORD PTR [esp+0x14],eax
1002896b:	mov    eax,DWORD PTR [edi+0x20]
1002896e:	test   eax,eax
10028970:	mov    DWORD PTR [esp+0x24],ecx
10028974:	je     0x1002899c
10028976:	mov    ecx,DWORD PTR [eax+0x24]
10028979:	test   ecx,ecx
1002897b:	mov    DWORD PTR [esp+0x34],ecx
1002897f:	je     0x1002899c
10028981:	mov    ecx,DWORD PTR [edi+0x40]
10028984:	cmp    ecx,DWORD PTR [eax+0x28]
10028987:	jae    0x1002899c
10028989:	mov    edx,DWORD PTR [esp+0x34]
1002898d:	mov    al,BYTE PTR [esp+0x24]
10028991:	mov    BYTE PTR [edx+ecx*1],al
10028994:	add    DWORD PTR [edi+0x40],0x1
10028998:	mov    edx,DWORD PTR [esp+0x10]
1002899c:	cmp    DWORD PTR [esp+0x24],0x0
100289a1:	je     0x100289ab
100289a3:	mov    eax,DWORD PTR [esp+0x14]
100289a7:	cmp    eax,edx
100289a9:	jb     0x10028960
100289ab:	test   DWORD PTR [edi+0x10],0x200
100289b2:	je     0x100289cd
100289b4:	mov    ecx,DWORD PTR [esp+0x14]
100289b8:	mov    edx,DWORD PTR [edi+0x18]
100289bb:	push   ecx
100289bc:	push   ebp
100289bd:	push   edx
100289be:	call   0x1002b520
100289c3:	mov    edx,DWORD PTR [esp+0x1c]
100289c7:	add    esp,0xc
100289ca:	mov    DWORD PTR [edi+0x18],eax
100289cd:	mov    eax,DWORD PTR [esp+0x14]
100289d1:	sub    edx,eax
100289d3:	add    ebp,eax
100289d5:	cmp    DWORD PTR [esp+0x24],0x0
100289da:	mov    DWORD PTR [esp+0x10],edx
100289de:	jne    0x100297f4
100289e4:	jmp    0x100289f4
100289e6:	mov    eax,DWORD PTR [edi+0x20]
100289e9:	test   eax,eax
100289eb:	je     0x100289f4
100289ed:	mov    DWORD PTR [eax+0x24],0x0
100289f4:	mov    DWORD PTR [edi],0x8
100289fa:	test   DWORD PTR [edi+0x10],0x200
10028a01:	je     0x10028a50
10028a03:	cmp    esi,0x10
10028a06:	jae    0x10028a30
10028a08:	test   edx,edx
10028a0a:	je     0x100297f4
10028a10:	movzx  eax,BYTE PTR [ebp+0x0]
10028a14:	mov    ecx,esi
10028a16:	shl    eax,cl
10028a18:	sub    edx,0x1
10028a1b:	add    esi,0x8
10028a1e:	add    ebp,0x1
10028a21:	add    ebx,eax
10028a23:	cmp    esi,0x10
10028a26:	mov    DWORD PTR [esp+0x10],edx
10028a2a:	mov    DWORD PTR [esp+0x18],ebx
10028a2e:	jb     0x10028a08
10028a30:	movzx  ecx,WORD PTR [edi+0x18]
10028a34:	cmp    ebx,ecx
10028a36:	je     0x10028a48
10028a38:	mov    eax,DWORD PTR [esp+0x40]
10028a3c:	mov    DWORD PTR [eax+0x18],0x100b4aa8
10028a43:	jmp    0x10029790
10028a48:	xor    ebx,ebx
10028a4a:	mov    DWORD PTR [esp+0x18],ebx
10028a4e:	xor    esi,esi
10028a50:	mov    eax,DWORD PTR [edi+0x20]
10028a53:	test   eax,eax
10028a55:	je     0x10028a6d
10028a57:	mov    ecx,DWORD PTR [edi+0x10]
10028a5a:	sar    ecx,0x9
10028a5d:	and    ecx,0x1
10028a60:	mov    DWORD PTR [eax+0x2c],ecx
10028a63:	mov    edx,DWORD PTR [edi+0x20]
10028a66:	mov    DWORD PTR [edx+0x30],0x1
10028a6d:	push   0x0
10028a6f:	push   0x0
10028a71:	push   0x0
10028a73:	call   0x1002b520
10028a78:	mov    ecx,DWORD PTR [esp+0x4c]
10028a7c:	mov    edx,DWORD PTR [esp+0x1c]
10028a80:	mov    DWORD PTR [edi+0x18],eax
10028a83:	mov    DWORD PTR [ecx+0x30],eax
10028a86:	add    esp,0xc
10028a89:	mov    DWORD PTR [edi],0xb
10028a8f:	jmp    0x10029796
10028a94:	cmp    esi,0x20
10028a97:	jae    0x10028ac8
10028a99:	lea    esp,[esp+0x0]
10028aa0:	test   edx,edx
10028aa2:	je     0x100297f4
10028aa8:	movzx  eax,BYTE PTR [ebp+0x0]
10028aac:	mov    ecx,esi
10028aae:	shl    eax,cl
10028ab0:	sub    edx,0x1
10028ab3:	add    esi,0x8
10028ab6:	add    ebp,0x1
10028ab9:	add    ebx,eax
10028abb:	cmp    esi,0x20
10028abe:	mov    DWORD PTR [esp+0x10],edx
10028ac2:	mov    DWORD PTR [esp+0x18],ebx
10028ac6:	jb     0x10028aa0
10028ac8:	mov    ecx,ebx
10028aca:	and    ecx,0xff00
10028ad0:	mov    eax,ebx
10028ad2:	shl    eax,0x10
10028ad5:	add    ecx,eax
10028ad7:	xor    eax,eax
10028ad9:	mov    ah,BYTE PTR [esp+0x1a]
10028add:	shl    ecx,0x8
10028ae0:	shr    ebx,0x18
10028ae3:	add    ecx,eax
10028ae5:	lea    eax,[ecx+ebx*1]
10028ae8:	mov    ecx,DWORD PTR [esp+0x40]
10028aec:	mov    DWORD PTR [edi+0x18],eax
10028aef:	mov    DWORD PTR [ecx+0x30],eax
10028af2:	xor    ebx,ebx
10028af4:	xor    esi,esi
10028af6:	mov    DWORD PTR [edi],0xa
10028afc:	cmp    DWORD PTR [edi+0xc],0x0
10028b00:	je     0x100297ae
10028b06:	push   0x0
10028b08:	push   0x0
10028b0a:	push   0x0
10028b0c:	call   0x1002b000
10028b11:	mov    edx,DWORD PTR [esp+0x4c]
10028b15:	mov    DWORD PTR [edi+0x18],eax
10028b18:	mov    DWORD PTR [edx+0x30],eax
10028b1b:	mov    edx,DWORD PTR [esp+0x1c]
10028b1f:	add    esp,0xc
10028b22:	mov    DWORD PTR [edi],0xb
10028b28:	cmp    DWORD PTR [esp+0x44],0x5
10028b2d:	je     0x100297f4
10028b33:	cmp    DWORD PTR [edi+0x4],0x0
10028b37:	je     0x10028b51
10028b39:	mov    ecx,esi
10028b3b:	and    ecx,0x7
10028b3e:	shr    ebx,cl
10028b40:	sub    esi,ecx
10028b42:	mov    DWORD PTR [edi],0x18
10028b48:	mov    DWORD PTR [esp+0x18],ebx
10028b4c:	jmp    0x10029796
10028b51:	cmp    esi,0x3
10028b54:	jae    0x10028b7a
10028b56:	test   edx,edx
10028b58:	je     0x100297f4
10028b5e:	movzx  eax,BYTE PTR [ebp+0x0]
10028b62:	mov    ecx,esi
10028b64:	shl    eax,cl
10028b66:	sub    edx,0x1
10028b69:	add    esi,0x8
10028b6c:	add    ebp,0x1
10028b6f:	add    ebx,eax
10028b71:	cmp    esi,0x3
10028b74:	mov    DWORD PTR [esp+0x10],edx
10028b78:	jb     0x10028b56
10028b7a:	mov    ecx,ebx
10028b7c:	shr    ebx,1
10028b7e:	mov    eax,ebx
10028b80:	and    ecx,0x1
10028b83:	and    eax,0x3
10028b86:	sub    esi,0x1
10028b89:	cmp    eax,0x3
10028b8c:	mov    DWORD PTR [edi+0x4],ecx
10028b8f:	ja     0x10028bef
10028b91:	jmp    DWORD PTR [eax*4+0x10029974]
10028b98:	shr    ebx,0x2
10028b9b:	mov    DWORD PTR [edi],0xd
10028ba1:	mov    DWORD PTR [esp+0x18],ebx
10028ba5:	sub    esi,0x2
10028ba8:	jmp    0x10029796
10028bad:	mov    eax,edi
10028baf:	call   0x10028280
10028bb4:	shr    ebx,0x2
10028bb7:	mov    DWORD PTR [edi],0x12
10028bbd:	mov    DWORD PTR [esp+0x18],ebx
10028bc1:	sub    esi,0x2
10028bc4:	jmp    0x10029796
10028bc9:	shr    ebx,0x2
10028bcc:	mov    DWORD PTR [edi],0xf
10028bd2:	mov    DWORD PTR [esp+0x18],ebx
10028bd6:	sub    esi,0x2
10028bd9:	jmp    0x10029796
10028bde:	mov    eax,DWORD PTR [esp+0x40]
10028be2:	mov    DWORD PTR [eax+0x18],0x100b4a94
10028be9:	mov    DWORD PTR [edi],0x1b
10028bef:	shr    ebx,0x2
10028bf2:	mov    DWORD PTR [esp+0x18],ebx
10028bf6:	sub    esi,0x2
10028bf9:	jmp    0x10029796
10028bfe:	mov    ecx,esi
10028c00:	and    ecx,0x7
10028c03:	shr    ebx,cl
10028c05:	sub    esi,ecx
10028c07:	cmp    esi,0x20
10028c0a:	mov    DWORD PTR [esp+0x18],ebx
10028c0e:	jae    0x10028c38
10028c10:	test   edx,edx
10028c12:	je     0x100297f4
10028c18:	movzx  eax,BYTE PTR [ebp+0x0]
10028c1c:	mov    ecx,esi
10028c1e:	shl    eax,cl
10028c20:	sub    edx,0x1
10028c23:	add    esi,0x8
10028c26:	add    ebp,0x1
10028c29:	add    ebx,eax
10028c2b:	cmp    esi,0x20
10028c2e:	mov    DWORD PTR [esp+0x10],edx
10028c32:	mov    DWORD PTR [esp+0x18],ebx
10028c36:	jb     0x10028c10
10028c38:	mov    ecx,ebx
10028c3a:	mov    eax,ebx
10028c3c:	not    ecx
10028c3e:	and    eax,0xffff
10028c43:	shr    ecx,0x10
10028c46:	cmp    eax,ecx
10028c48:	je     0x10028c5a
10028c4a:	mov    eax,DWORD PTR [esp+0x40]
10028c4e:	mov    DWORD PTR [eax+0x18],0x100b4a74
10028c55:	jmp    0x10029790
10028c5a:	xor    ebx,ebx
10028c5c:	mov    DWORD PTR [edi+0x40],eax
10028c5f:	mov    DWORD PTR [esp+0x18],ebx
10028c63:	xor    esi,esi
10028c65:	mov    DWORD PTR [edi],0xe
10028c6b:	mov    eax,DWORD PTR [edi+0x40]
10028c6e:	test   eax,eax
10028c70:	mov    DWORD PTR [esp+0x14],eax
10028c74:	je     0x10029329
10028c7a:	cmp    eax,edx
10028c7c:	jbe    0x10028c84
10028c7e:	mov    eax,edx
10028c80:	mov    DWORD PTR [esp+0x14],edx
10028c84:	mov    ecx,DWORD PTR [esp+0x20]
10028c88:	cmp    eax,ecx
10028c8a:	jbe    0x10028c92
10028c8c:	mov    eax,ecx
10028c8e:	mov    DWORD PTR [esp+0x14],eax
10028c92:	test   eax,eax
10028c94:	je     0x100297f4
10028c9a:	mov    ecx,DWORD PTR [esp+0x14]
10028c9e:	mov    edx,DWORD PTR [esp+0x28]
10028ca2:	push   ecx
10028ca3:	push   ebp
10028ca4:	push   edx
10028ca5:	call   0x10019470
10028caa:	mov    eax,DWORD PTR [esp+0x20]
10028cae:	sub    DWORD PTR [esp+0x1c],eax
10028cb2:	sub    DWORD PTR [esp+0x2c],eax
10028cb6:	add    DWORD PTR [esp+0x34],eax
10028cba:	mov    edx,DWORD PTR [esp+0x1c]
10028cbe:	add    esp,0xc
10028cc1:	add    ebp,eax
10028cc3:	sub    DWORD PTR [edi+0x40],eax
10028cc6:	jmp    0x10029796
10028ccb:	cmp    esi,0xe
10028cce:	jae    0x10028cf4
10028cd0:	test   edx,edx
10028cd2:	je     0x100297f4
10028cd8:	movzx  eax,BYTE PTR [ebp+0x0]
10028cdc:	mov    ecx,esi
10028cde:	shl    eax,cl
10028ce0:	sub    edx,0x1
10028ce3:	add    esi,0x8
10028ce6:	add    ebp,0x1
10028ce9:	add    ebx,eax
10028ceb:	cmp    esi,0xe
10028cee:	mov    DWORD PTR [esp+0x10],edx
10028cf2:	jb     0x10028cd0
10028cf4:	mov    ecx,ebx
10028cf6:	and    ecx,0x1f
10028cf9:	shr    ebx,0x5
10028cfc:	add    ecx,0x101
10028d02:	mov    eax,ebx
10028d04:	mov    DWORD PTR [edi+0x60],ecx
10028d07:	shr    ebx,0x5
10028d0a:	mov    ecx,ebx
10028d0c:	and    eax,0x1f
10028d0f:	and    ecx,0xf
10028d12:	add    eax,0x1
10028d15:	add    ecx,0x4
10028d18:	shr    ebx,0x4
10028d1b:	sub    esi,0xe
10028d1e:	cmp    DWORD PTR [edi+0x60],0x11e
10028d25:	mov    DWORD PTR [edi+0x64],eax
10028d28:	mov    DWORD PTR [edi+0x5c],ecx
10028d2b:	mov    DWORD PTR [esp+0x18],ebx
10028d2f:	ja     0x10028e25
10028d35:	cmp    eax,0x1e
10028d38:	ja     0x10028e25
10028d3e:	mov    DWORD PTR [edi+0x68],0x0
10028d45:	mov    DWORD PTR [edi],0x10
10028d4b:	mov    ecx,DWORD PTR [edi+0x68]
10028d4e:	cmp    ecx,DWORD PTR [edi+0x5c]
10028d51:	jae    0x10028da8
10028d53:	cmp    esi,0x3
10028d56:	jae    0x10028d7c
10028d58:	test   edx,edx
10028d5a:	je     0x100297f4
10028d60:	movzx  eax,BYTE PTR [ebp+0x0]
10028d64:	mov    ecx,esi
10028d66:	shl    eax,cl
10028d68:	sub    edx,0x1
10028d6b:	add    esi,0x8
10028d6e:	add    ebp,0x1
10028d71:	add    ebx,eax
10028d73:	cmp    esi,0x3
10028d76:	mov    DWORD PTR [esp+0x10],edx
10028d7a:	jb     0x10028d58
10028d7c:	mov    eax,DWORD PTR [edi+0x68]
10028d7f:	movzx  eax,WORD PTR [eax*2+0x100b4938]
10028d87:	movzx  ecx,bl
10028d8a:	and    ecx,0x7
10028d8d:	mov    WORD PTR [edi+eax*2+0x70],cx
10028d92:	add    DWORD PTR [edi+0x68],0x1
10028d96:	mov    ecx,DWORD PTR [edi+0x68]
10028d99:	shr    ebx,0x3
10028d9c:	sub    esi,0x3
10028d9f:	cmp    ecx,DWORD PTR [edi+0x5c]
10028da2:	mov    DWORD PTR [esp+0x18],ebx
10028da6:	jb     0x10028d53
10028da8:	cmp    DWORD PTR [edi+0x68],0x13
10028dac:	jae    0x10028dd9
10028dae:	mov    ecx,0x1
10028db3:	xor    eax,eax
10028db5:	jmp    0x10028dc0
10028db7:	lea    esp,[esp+0x0]
10028dbe:	mov    edi,edi
10028dc0:	mov    edx,DWORD PTR [edi+0x68]
10028dc3:	movzx  edx,WORD PTR [edx*2+0x100b4938]
10028dcb:	mov    WORD PTR [edi+edx*2+0x70],ax
10028dd0:	add    DWORD PTR [edi+0x68],ecx
10028dd3:	cmp    DWORD PTR [edi+0x68],0x13
10028dd7:	jb     0x10028dc0
10028dd9:	lea    eax,[edi+0x530]
10028ddf:	lea    ecx,[edi+0x6c]
10028de2:	mov    DWORD PTR [ecx],eax
10028de4:	mov    DWORD PTR [edi+0x4c],eax
10028de7:	lea    edx,[edi+0x2f0]
10028ded:	push   edx
10028dee:	lea    eax,[edi+0x54]
10028df1:	push   eax
10028df2:	push   ecx
10028df3:	mov    DWORD PTR [eax],0x7
10028df9:	push   0x13
10028dfb:	lea    eax,[edi+0x70]
10028dfe:	push   eax
10028dff:	push   0x0
10028e01:	call   0x1002ab10
10028e06:	mov    edx,DWORD PTR [esp+0x28]
10028e0a:	add    esp,0x18
10028e0d:	test   eax,eax
10028e0f:	mov    DWORD PTR [esp+0x30],eax
10028e13:	je     0x10028e35
10028e15:	mov    ecx,DWORD PTR [esp+0x40]
10028e19:	mov    DWORD PTR [ecx+0x18],0x100b4a58
10028e20:	jmp    0x10029790
10028e25:	mov    eax,DWORD PTR [esp+0x40]
10028e29:	mov    DWORD PTR [eax+0x18],0x100b4a34
10028e30:	jmp    0x10029790
10028e35:	mov    DWORD PTR [edi+0x68],0x0
10028e3c:	mov    DWORD PTR [edi],0x11
10028e42:	mov    eax,DWORD PTR [edi+0x64]
10028e45:	add    eax,DWORD PTR [edi+0x60]
10028e48:	cmp    DWORD PTR [edi+0x68],eax
10028e4b:	jae    0x10029089
10028e51:	mov    ecx,DWORD PTR [edi+0x54]
10028e54:	mov    eax,0x1
10028e59:	shl    eax,cl
10028e5b:	mov    ecx,DWORD PTR [edi+0x4c]
10028e5e:	sub    eax,0x1
10028e61:	and    eax,ebx
10028e63:	mov    eax,DWORD PTR [ecx+eax*4]
10028e66:	mov    ecx,eax
10028e68:	shr    ecx,0x8
10028e6b:	movzx  ecx,cl
10028e6e:	cmp    ecx,esi
10028e70:	mov    DWORD PTR [esp+0x14],eax
10028e74:	jbe    0x10028eba
10028e76:	test   edx,edx
10028e78:	je     0x100297f4
10028e7e:	movzx  eax,BYTE PTR [ebp+0x0]
10028e82:	mov    ecx,esi
10028e84:	shl    eax,cl
10028e86:	mov    ecx,DWORD PTR [edi+0x54]
10028e89:	sub    edx,0x1
10028e8c:	add    esi,0x8
10028e8f:	add    ebx,eax
10028e91:	mov    eax,0x1
10028e96:	shl    eax,cl
10028e98:	mov    ecx,DWORD PTR [edi+0x4c]
10028e9b:	add    ebp,0x1
10028e9e:	mov    DWORD PTR [esp+0x10],edx
10028ea2:	sub    eax,0x1
10028ea5:	and    eax,ebx
10028ea7:	mov    eax,DWORD PTR [ecx+eax*4]
10028eaa:	mov    ecx,eax
10028eac:	shr    ecx,0x8
10028eaf:	movzx  ecx,cl
10028eb2:	cmp    ecx,esi
10028eb4:	mov    DWORD PTR [esp+0x14],eax
10028eb8:	ja     0x10028e76
10028eba:	mov    ecx,eax
10028ebc:	shr    ecx,0x10
10028ebf:	cmp    ecx,0x10
10028ec2:	jae    0x10028f1b
10028ec4:	mov    ecx,eax
10028ec6:	shr    ecx,0x8
10028ec9:	movzx  ecx,cl
10028ecc:	cmp    esi,ecx
10028ece:	jae    0x10028efa
10028ed0:	test   edx,edx
10028ed2:	je     0x100297f4
10028ed8:	movzx  eax,BYTE PTR [ebp+0x0]
10028edc:	mov    ecx,esi
10028ede:	shl    eax,cl
10028ee0:	sub    edx,0x1
10028ee3:	add    esi,0x8
10028ee6:	add    ebp,0x1
10028ee9:	add    ebx,eax
10028eeb:	mov    eax,DWORD PTR [esp+0x14]
10028eef:	movzx  ecx,ah
10028ef2:	cmp    esi,ecx
10028ef4:	mov    DWORD PTR [esp+0x10],edx
10028ef8:	jb     0x10028ed0
10028efa:	movzx  ecx,ah
10028efd:	mov    eax,DWORD PTR [edi+0x68]
10028f00:	shr    ebx,cl
10028f02:	sub    esi,ecx
10028f04:	mov    cx,WORD PTR [esp+0x16]
10028f09:	mov    WORD PTR [edi+eax*2+0x70],cx
10028f0e:	add    DWORD PTR [edi+0x68],0x1
10028f12:	mov    DWORD PTR [esp+0x18],ebx
10028f16:	jmp    0x1002907a
10028f1b:	mov    cx,WORD PTR [esp+0x16]
10028f20:	cmp    cx,0x10
10028f24:	jne    0x10028f91
10028f26:	movzx  ecx,ah
10028f29:	lea    eax,[ecx+0x2]
10028f2c:	cmp    esi,eax
10028f2e:	mov    DWORD PTR [esp+0x24],ecx
10028f32:	jae    0x10028f5e
10028f34:	test   edx,edx
10028f36:	je     0x100297f4
10028f3c:	movzx  eax,BYTE PTR [ebp+0x0]
10028f40:	mov    ecx,esi
10028f42:	shl    eax,cl
10028f44:	mov    ecx,DWORD PTR [esp+0x24]
10028f48:	sub    edx,0x1
10028f4b:	add    esi,0x8
10028f4e:	add    ebx,eax
10028f50:	lea    eax,[ecx+0x2]
10028f53:	add    ebp,0x1
10028f56:	cmp    esi,eax
10028f58:	mov    DWORD PTR [esp+0x10],edx
10028f5c:	jb     0x10028f34
10028f5e:	mov    eax,DWORD PTR [edi+0x68]
10028f61:	shr    ebx,cl
10028f63:	sub    esi,ecx
10028f65:	test   eax,eax
10028f67:	mov    DWORD PTR [esp+0x18],ebx
10028f6b:	je     0x100290e0
10028f71:	movzx  ecx,WORD PTR [edi+eax*2+0x6e]
10028f76:	mov    eax,ebx
10028f78:	and    eax,0x3
10028f7b:	add    eax,0x3
10028f7e:	shr    ebx,0x2
10028f81:	mov    DWORD PTR [esp+0x24],ecx
10028f85:	mov    DWORD PTR [esp+0x14],eax
10028f89:	sub    esi,0x2
10028f8c:	jmp    0x10029040
10028f91:	cmp    cx,0x11
10028f95:	movzx  ecx,ah
10028f98:	mov    DWORD PTR [esp+0x24],ecx
10028f9c:	jne    0x10028fe7
10028f9e:	lea    eax,[ecx+0x3]
10028fa1:	cmp    esi,eax
10028fa3:	jae    0x10028fcf
10028fa5:	test   edx,edx
10028fa7:	je     0x100297f4
10028fad:	movzx  eax,BYTE PTR [ebp+0x0]
10028fb1:	mov    ecx,esi
10028fb3:	shl    eax,cl
10028fb5:	mov    ecx,DWORD PTR [esp+0x24]
10028fb9:	sub    edx,0x1
10028fbc:	add    esi,0x8
10028fbf:	add    ebx,eax
10028fc1:	lea    eax,[ecx+0x3]
10028fc4:	add    ebp,0x1
10028fc7:	cmp    esi,eax
10028fc9:	mov    DWORD PTR [esp+0x10],edx
10028fcd:	jb     0x10028fa5
10028fcf:	shr    ebx,cl
10028fd1:	mov    eax,ebx
10028fd3:	and    eax,0x7
10028fd6:	add    eax,0x3
10028fd9:	mov    DWORD PTR [esp+0x14],eax
10028fdd:	shr    ebx,0x3
10028fe0:	mov    eax,0xfffffffd
10028fe5:	jmp    0x10029030
10028fe7:	lea    eax,[ecx+0x7]
10028fea:	cmp    esi,eax
10028fec:	jae    0x1002901a
10028fee:	mov    edi,edi
10028ff0:	test   edx,edx
10028ff2:	je     0x100297f4
10028ff8:	movzx  eax,BYTE PTR [ebp+0x0]
10028ffc:	mov    ecx,esi
10028ffe:	shl    eax,cl
10029000:	mov    ecx,DWORD PTR [esp+0x24]
10029004:	sub    edx,0x1
10029007:	add    esi,0x8
1002900a:	add    ebx,eax
1002900c:	lea    eax,[ecx+0x7]
1002900f:	add    ebp,0x1
10029012:	cmp    esi,eax
10029014:	mov    DWORD PTR [esp+0x10],edx
10029018:	jb     0x10028ff0
1002901a:	shr    ebx,cl
1002901c:	mov    eax,ebx
1002901e:	and    eax,0x7f
10029021:	add    eax,0xb
10029024:	mov    DWORD PTR [esp+0x14],eax
10029028:	shr    ebx,0x7
1002902b:	mov    eax,0xfffffff9
10029030:	sub    eax,ecx
10029032:	add    esi,eax
10029034:	mov    eax,DWORD PTR [esp+0x14]
10029038:	mov    DWORD PTR [esp+0x24],0x0
10029040:	mov    ecx,DWORD PTR [edi+0x68]
10029043:	add    ecx,eax
10029045:	mov    eax,DWORD PTR [edi+0x64]
10029048:	add    eax,DWORD PTR [edi+0x60]
1002904b:	mov    DWORD PTR [esp+0x18],ebx
1002904f:	cmp    ecx,eax
10029051:	ja     0x100290f0
10029057:	cmp    DWORD PTR [esp+0x14],0x0
1002905c:	je     0x1002907a
1002905e:	mov    eax,DWORD PTR [esp+0x24]
10029062:	mov    ecx,DWORD PTR [edi+0x68]
10029065:	sub    DWORD PTR [esp+0x14],0x1
1002906a:	mov    WORD PTR [edi+ecx*2+0x70],ax
1002906f:	add    DWORD PTR [edi+0x68],0x1
10029073:	cmp    DWORD PTR [esp+0x14],0x0
10029078:	jne    0x10029062
1002907a:	mov    eax,DWORD PTR [edi+0x64]
1002907d:	add    eax,DWORD PTR [edi+0x60]
10029080:	cmp    DWORD PTR [edi+0x68],eax
10029083:	jb     0x10028e51
10029089:	cmp    DWORD PTR [edi],0x1b
1002908c:	je     0x10029796
10029092:	lea    eax,[edi+0x530]
10029098:	lea    ecx,[edi+0x6c]
1002909b:	mov    DWORD PTR [ecx],eax
1002909d:	lea    edx,[edi+0x2f0]
100290a3:	push   edx
100290a4:	mov    DWORD PTR [edi+0x4c],eax
100290a7:	lea    eax,[edi+0x54]
100290aa:	push   eax
100290ab:	push   ecx
100290ac:	mov    ecx,DWORD PTR [edi+0x60]
100290af:	push   ecx
100290b0:	lea    edx,[edi+0x70]
100290b3:	push   edx
100290b4:	push   0x1
100290b6:	mov    DWORD PTR [eax],0x9
100290bc:	call   0x1002ab10
100290c1:	add    esp,0x18
100290c4:	test   eax,eax
100290c6:	mov    DWORD PTR [esp+0x30],eax
100290ca:	je     0x10029100
100290cc:	mov    eax,DWORD PTR [esp+0x40]
100290d0:	mov    edx,DWORD PTR [esp+0x10]
100290d4:	mov    DWORD PTR [eax+0x18],0x100b4a18
100290db:	jmp    0x10029790
100290e0:	mov    ecx,DWORD PTR [esp+0x40]
100290e4:	mov    DWORD PTR [ecx+0x18],0x100b49fc
100290eb:	jmp    0x10029790
100290f0:	mov    eax,DWORD PTR [esp+0x40]
100290f4:	mov    DWORD PTR [eax+0x18],0x100b49fc
100290fb:	jmp    0x10029790
10029100:	mov    edx,DWORD PTR [edi+0x6c]
10029103:	lea    ecx,[edi+0x6c]
10029106:	mov    DWORD PTR [edi+0x50],edx
10029109:	lea    edx,[edi+0x2f0]
1002910f:	push   edx
10029110:	lea    eax,[edi+0x58]
10029113:	push   eax
10029114:	push   ecx
10029115:	mov    ecx,DWORD PTR [edi+0x60]
10029118:	mov    DWORD PTR [eax],0x6
1002911e:	mov    eax,DWORD PTR [edi+0x64]
10029121:	push   eax
10029122:	lea    edx,[edi+ecx*2+0x70]
10029126:	push   edx
10029127:	push   0x2
10029129:	call   0x1002ab10
1002912e:	mov    edx,DWORD PTR [esp+0x28]
10029132:	add    esp,0x18
10029135:	test   eax,eax
10029137:	mov    DWORD PTR [esp+0x30],eax
1002913b:	je     0x1002914d
1002913d:	mov    eax,DWORD PTR [esp+0x40]
10029141:	mov    DWORD PTR [eax+0x18],0x100b49e4
10029148:	jmp    0x10029790
1002914d:	mov    DWORD PTR [edi],0x12
10029153:	cmp    edx,0x6
10029156:	jb     0x100291bd
10029158:	cmp    DWORD PTR [esp+0x20],0x102
10029160:	jb     0x100291bd
10029162:	mov    eax,DWORD PTR [esp+0x40]
10029166:	mov    edx,DWORD PTR [esp+0x20]
1002916a:	mov    ecx,DWORD PTR [esp+0x28]
1002916e:	mov    DWORD PTR [eax+0x10],edx
10029171:	mov    edx,DWORD PTR [esp+0x2c]
10029175:	mov    DWORD PTR [eax+0xc],ecx
10029178:	mov    ecx,DWORD PTR [esp+0x10]
1002917c:	push   edx
1002917d:	mov    DWORD PTR [eax],ebp
1002917f:	mov    DWORD PTR [eax+0x4],ecx
10029182:	push   eax
10029183:	mov    DWORD PTR [edi+0x38],ebx
10029186:	mov    DWORD PTR [edi+0x3c],esi
10029189:	call   0x1002a650
1002918e:	mov    eax,DWORD PTR [esp+0x48]
10029192:	mov    edx,DWORD PTR [eax+0x10]
10029195:	mov    ecx,DWORD PTR [eax+0xc]
10029198:	mov    ebp,DWORD PTR [eax]
1002919a:	mov    eax,DWORD PTR [eax+0x4]
1002919d:	mov    ebx,DWORD PTR [edi+0x38]
100291a0:	mov    esi,DWORD PTR [edi+0x3c]
100291a3:	mov    DWORD PTR [esp+0x28],edx
100291a7:	add    esp,0x8
100291aa:	mov    DWORD PTR [esp+0x28],ecx
100291ae:	mov    DWORD PTR [esp+0x10],eax
100291b2:	mov    DWORD PTR [esp+0x18],ebx
100291b6:	mov    edx,eax
100291b8:	jmp    0x10029796
100291bd:	mov    ecx,DWORD PTR [edi+0x54]
100291c0:	mov    eax,0x1
100291c5:	shl    eax,cl
100291c7:	sub    eax,0x1
100291ca:	and    eax,ebx
100291cc:	mov    ecx,eax
100291ce:	mov    eax,DWORD PTR [edi+0x4c]
100291d1:	mov    eax,DWORD PTR [eax+ecx*4]
100291d4:	mov    ecx,eax
100291d6:	shr    ecx,0x8
100291d9:	movzx  ecx,cl
100291dc:	cmp    ecx,esi
100291de:	mov    DWORD PTR [esp+0x14],eax
100291e2:	jbe    0x10029228
100291e4:	test   edx,edx
100291e6:	je     0x100297f4
100291ec:	movzx  eax,BYTE PTR [ebp+0x0]
100291f0:	mov    ecx,esi
100291f2:	shl    eax,cl
100291f4:	mov    ecx,DWORD PTR [edi+0x54]
100291f7:	sub    edx,0x1
100291fa:	add    esi,0x8
100291fd:	add    ebx,eax
100291ff:	mov    eax,0x1
10029204:	shl    eax,cl
10029206:	mov    ecx,DWORD PTR [edi+0x4c]
10029209:	add    ebp,0x1
1002920c:	mov    DWORD PTR [esp+0x10],edx
10029210:	sub    eax,0x1
10029213:	and    eax,ebx
10029215:	mov    eax,DWORD PTR [ecx+eax*4]
10029218:	mov    ecx,eax
1002921a:	shr    ecx,0x8
1002921d:	movzx  ecx,cl
10029220:	cmp    ecx,esi
10029222:	mov    DWORD PTR [esp+0x14],eax
10029226:	ja     0x100291e4
10029228:	test   al,al
1002922a:	je     0x100292fa
10029230:	test   al,0xf0
10029232:	jne    0x100292fa
10029238:	mov    ecx,eax
1002923a:	shr    ecx,0x8
1002923d:	mov    DWORD PTR [esp+0x34],ecx
10029241:	movzx  ecx,cl
10029244:	mov    DWORD PTR [esp+0x24],ecx
10029248:	movzx  ecx,al
1002924b:	add    ecx,DWORD PTR [esp+0x24]
1002924f:	mov    DWORD PTR [esp+0x18],eax
10029253:	mov    eax,0x1
10029258:	shl    eax,cl
1002925a:	mov    ecx,DWORD PTR [esp+0x24]
1002925e:	sub    eax,0x1
10029261:	and    eax,ebx
10029263:	shr    eax,cl
10029265:	mov    ecx,DWORD PTR [esp+0x14]
10029269:	shr    ecx,0x10
1002926c:	add    eax,ecx
1002926e:	mov    ecx,eax
10029270:	mov    eax,DWORD PTR [edi+0x4c]
10029273:	mov    eax,DWORD PTR [eax+ecx*4]
10029276:	movzx  ecx,BYTE PTR [esp+0x34]
1002927b:	mov    DWORD PTR [esp+0x14],eax
1002927f:	shr    eax,0x8
10029282:	movzx  eax,al
10029285:	add    eax,ecx
10029287:	cmp    eax,esi
10029289:	jbe    0x100292ed
1002928b:	jmp    0x10029290
1002928d:	lea    ecx,[ecx+0x0]
10029290:	test   edx,edx
10029292:	je     0x100297f4
10029298:	movzx  eax,BYTE PTR [ebp+0x0]
1002929c:	mov    ecx,esi
1002929e:	shl    eax,cl
100292a0:	mov    ecx,DWORD PTR [esp+0x18]
100292a4:	sub    edx,0x1
100292a7:	add    esi,0x8
100292aa:	add    ebx,eax
100292ac:	movzx  eax,ch
100292af:	add    ecx,eax
100292b1:	mov    DWORD PTR [esp+0x24],eax
100292b5:	mov    eax,0x1
100292ba:	shl    eax,cl
100292bc:	mov    ecx,DWORD PTR [esp+0x24]
100292c0:	add    ebp,0x1
100292c3:	mov    DWORD PTR [esp+0x10],edx
100292c7:	sub    eax,0x1
100292ca:	and    eax,ebx
100292cc:	shr    eax,cl
100292ce:	movzx  ecx,WORD PTR [esp+0x1a]
100292d3:	add    eax,ecx
100292d5:	mov    ecx,DWORD PTR [edi+0x4c]
100292d8:	mov    eax,DWORD PTR [ecx+eax*4]
100292db:	mov    DWORD PTR [esp+0x14],eax
100292df:	shr    eax,0x8
100292e2:	movzx  eax,al
100292e5:	add    eax,DWORD PTR [esp+0x24]
100292e9:	cmp    eax,esi
100292eb:	ja     0x10029290
100292ed:	movzx  ecx,BYTE PTR [esp+0x19]
100292f2:	mov    eax,DWORD PTR [esp+0x14]
100292f6:	shr    ebx,cl
100292f8:	sub    esi,ecx
100292fa:	mov    ecx,eax
100292fc:	shr    ecx,0x8
100292ff:	movzx  ecx,cl
10029302:	shr    ebx,cl
10029304:	sub    esi,ecx
10029306:	mov    DWORD PTR [esp+0x24],ecx
1002930a:	mov    ecx,eax
1002930c:	shr    ecx,0x10
1002930f:	test   al,al
10029311:	mov    DWORD PTR [esp+0x18],ebx
10029315:	mov    DWORD PTR [edi+0x40],ecx
10029318:	jne    0x10029325
1002931a:	mov    DWORD PTR [edi],0x17
10029320:	jmp    0x10029796
10029325:	test   al,0x20
10029327:	je     0x10029334
10029329:	mov    DWORD PTR [edi],0xb
1002932f:	jmp    0x10029796
10029334:	test   al,0x40
10029336:	je     0x10029348
10029338:	mov    eax,DWORD PTR [esp+0x40]
1002933c:	mov    DWORD PTR [eax+0x18],0x100b49c8
10029343:	jmp    0x10029790
10029348:	and    eax,0xf
1002934b:	mov    DWORD PTR [edi+0x48],eax
1002934e:	mov    DWORD PTR [edi],0x13
10029354:	mov    eax,DWORD PTR [edi+0x48]
10029357:	test   eax,eax
10029359:	je     0x1002939a
1002935b:	cmp    esi,eax
1002935d:	jae    0x10029384
1002935f:	nop
10029360:	test   edx,edx
10029362:	je     0x100297f4
10029368:	movzx  eax,BYTE PTR [ebp+0x0]
1002936c:	mov    ecx,esi
1002936e:	shl    eax,cl
10029370:	sub    edx,0x1
10029373:	add    esi,0x8
10029376:	add    ebp,0x1
10029379:	add    ebx,eax
1002937b:	cmp    esi,DWORD PTR [edi+0x48]
1002937e:	mov    DWORD PTR [esp+0x10],edx
10029382:	jb     0x10029360
10029384:	mov    ecx,DWORD PTR [edi+0x48]
10029387:	mov    eax,0x1
1002938c:	shl    eax,cl
1002938e:	sub    eax,0x1
10029391:	and    eax,ebx
10029393:	add    DWORD PTR [edi+0x40],eax
10029396:	shr    ebx,cl
10029398:	sub    esi,ecx
1002939a:	mov    DWORD PTR [edi],0x14
100293a0:	mov    ecx,DWORD PTR [edi+0x58]
100293a3:	mov    eax,0x1
100293a8:	shl    eax,cl
100293aa:	sub    eax,0x1
100293ad:	and    eax,ebx
100293af:	mov    ecx,eax
100293b1:	mov    eax,DWORD PTR [edi+0x50]
100293b4:	mov    eax,DWORD PTR [eax+ecx*4]
100293b7:	mov    ecx,eax
100293b9:	shr    ecx,0x8
100293bc:	movzx  ecx,cl
100293bf:	cmp    ecx,esi
100293c1:	mov    DWORD PTR [esp+0x14],eax
100293c5:	jbe    0x1002940b
100293c7:	test   edx,edx
100293c9:	je     0x100297f4
100293cf:	movzx  eax,BYTE PTR [ebp+0x0]
100293d3:	mov    ecx,esi
100293d5:	shl    eax,cl
100293d7:	mov    ecx,DWORD PTR [edi+0x58]
100293da:	sub    edx,0x1
100293dd:	add    esi,0x8
100293e0:	add    ebx,eax
100293e2:	mov    eax,0x1
100293e7:	shl    eax,cl
100293e9:	mov    ecx,DWORD PTR [edi+0x50]
100293ec:	add    ebp,0x1
100293ef:	mov    DWORD PTR [esp+0x10],edx
100293f3:	sub    eax,0x1
100293f6:	and    eax,ebx
100293f8:	mov    eax,DWORD PTR [ecx+eax*4]
100293fb:	mov    ecx,eax
100293fd:	shr    ecx,0x8
10029400:	movzx  ecx,cl
10029403:	cmp    ecx,esi
10029405:	mov    DWORD PTR [esp+0x14],eax
10029409:	ja     0x100293c7
1002940b:	test   al,0xf0
1002940d:	jne    0x100294d0
10029413:	mov    ecx,eax
10029415:	shr    ecx,0x8
10029418:	mov    DWORD PTR [esp+0x34],ecx
1002941c:	movzx  ecx,cl
1002941f:	mov    DWORD PTR [esp+0x24],ecx
10029423:	movzx  ecx,al
10029426:	add    ecx,DWORD PTR [esp+0x24]
1002942a:	mov    DWORD PTR [esp+0x18],eax
1002942e:	mov    eax,0x1
10029433:	shl    eax,cl
10029435:	mov    ecx,DWORD PTR [esp+0x24]
10029439:	sub    eax,0x1
1002943c:	and    eax,ebx
1002943e:	shr    eax,cl
10029440:	mov    ecx,DWORD PTR [esp+0x14]
10029444:	shr    ecx,0x10
10029447:	add    eax,ecx
10029449:	mov    ecx,eax
1002944b:	mov    eax,DWORD PTR [edi+0x50]
1002944e:	mov    eax,DWORD PTR [eax+ecx*4]
10029451:	movzx  ecx,BYTE PTR [esp+0x34]
10029456:	mov    DWORD PTR [esp+0x14],eax
1002945a:	shr    eax,0x8
1002945d:	movzx  eax,al
10029460:	add    eax,ecx
10029462:	cmp    eax,esi
10029464:	jbe    0x100294c3
10029466:	test   edx,edx
10029468:	je     0x100297f4
1002946e:	movzx  eax,BYTE PTR [ebp+0x0]
10029472:	mov    ecx,esi
10029474:	shl    eax,cl
10029476:	mov    ecx,DWORD PTR [esp+0x18]
1002947a:	sub    edx,0x1
1002947d:	add    esi,0x8
10029480:	add    ebx,eax
10029482:	movzx  eax,ch
10029485:	add    ecx,eax
10029487:	mov    DWORD PTR [esp+0x24],eax
1002948b:	mov    eax,0x1
10029490:	shl    eax,cl
10029492:	mov    ecx,DWORD PTR [esp+0x24]
10029496:	add    ebp,0x1
10029499:	mov    DWORD PTR [esp+0x10],edx
1002949d:	sub    eax,0x1
100294a0:	and    eax,ebx
100294a2:	shr    eax,cl
100294a4:	movzx  ecx,WORD PTR [esp+0x1a]
100294a9:	add    eax,ecx
100294ab:	mov    ecx,DWORD PTR [edi+0x50]
100294ae:	mov    eax,DWORD PTR [ecx+eax*4]
100294b1:	mov    DWORD PTR [esp+0x14],eax
100294b5:	shr    eax,0x8
100294b8:	movzx  eax,al
100294bb:	add    eax,DWORD PTR [esp+0x24]
100294bf:	cmp    eax,esi
100294c1:	ja     0x10029466
100294c3:	movzx  ecx,BYTE PTR [esp+0x19]
100294c8:	mov    eax,DWORD PTR [esp+0x14]
100294cc:	shr    ebx,cl
100294ce:	sub    esi,ecx
100294d0:	mov    ecx,eax
100294d2:	shr    ecx,0x8
100294d5:	movzx  ecx,cl
100294d8:	shr    ebx,cl
100294da:	sub    esi,ecx
100294dc:	test   al,0x40
100294de:	mov    DWORD PTR [esp+0x24],ecx
100294e2:	mov    DWORD PTR [esp+0x18],ebx
100294e6:	je     0x100294f8
100294e8:	mov    eax,DWORD PTR [esp+0x40]
100294ec:	mov    DWORD PTR [eax+0x18],0x100b49b0
100294f3:	jmp    0x10029790
100294f8:	mov    ecx,eax
100294fa:	shr    ecx,0x10
100294fd:	and    eax,0xf
10029500:	mov    DWORD PTR [edi+0x44],ecx
10029503:	mov    DWORD PTR [edi+0x48],eax
10029506:	mov    DWORD PTR [edi],0x15
1002950c:	mov    eax,DWORD PTR [edi+0x48]
1002950f:	test   eax,eax
10029511:	je     0x10029555
10029513:	cmp    esi,eax
10029515:	jae    0x1002953b
10029517:	test   edx,edx
10029519:	je     0x100297f4
1002951f:	movzx  eax,BYTE PTR [ebp+0x0]
10029523:	mov    ecx,esi
10029525:	shl    eax,cl
10029527:	sub    edx,0x1
1002952a:	add    esi,0x8
1002952d:	add    ebp,0x1
10029530:	add    ebx,eax
10029532:	cmp    esi,DWORD PTR [edi+0x48]
10029535:	mov    DWORD PTR [esp+0x10],edx
10029539:	jb     0x10029517
1002953b:	mov    ecx,DWORD PTR [edi+0x48]
1002953e:	mov    eax,0x1
10029543:	shl    eax,cl
10029545:	sub    eax,0x1
10029548:	and    eax,ebx
1002954a:	add    DWORD PTR [edi+0x44],eax
1002954d:	shr    ebx,cl
1002954f:	sub    esi,ecx
10029551:	mov    DWORD PTR [esp+0x18],ebx
10029555:	mov    ecx,DWORD PTR [edi+0x2c]
10029558:	sub    ecx,DWORD PTR [esp+0x20]
1002955c:	add    ecx,DWORD PTR [esp+0x2c]
10029560:	cmp    DWORD PTR [edi+0x44],ecx
10029563:	jbe    0x10029575
10029565:	mov    eax,DWORD PTR [esp+0x40]
10029569:	mov    DWORD PTR [eax+0x18],0x100b4990
10029570:	jmp    0x10029790
10029575:	mov    DWORD PTR [edi],0x16
1002957b:	cmp    DWORD PTR [esp+0x20],0x0
10029580:	je     0x100297f4
10029586:	mov    ecx,DWORD PTR [esp+0x2c]
1002958a:	sub    ecx,DWORD PTR [esp+0x20]
1002958e:	mov    eax,DWORD PTR [edi+0x44]
10029591:	cmp    eax,ecx
10029593:	jbe    0x100295d1
10029595:	sub    eax,ecx
10029597:	mov    ecx,DWORD PTR [edi+0x30]
1002959a:	cmp    eax,ecx
1002959c:	mov    DWORD PTR [esp+0x14],eax
100295a0:	jbe    0x100295b2
100295a2:	sub    eax,ecx
100295a4:	mov    ecx,DWORD PTR [edi+0x34]
100295a7:	add    ecx,DWORD PTR [edi+0x28]
100295aa:	mov    DWORD PTR [esp+0x14],eax
100295ae:	sub    ecx,eax
100295b0:	jmp    0x100295be
100295b2:	mov    ecx,DWORD PTR [edi+0x34]
100295b5:	sub    ecx,eax
100295b7:	add    ecx,DWORD PTR [edi+0x30]
100295ba:	mov    eax,DWORD PTR [esp+0x14]
100295be:	mov    DWORD PTR [esp+0x24],ecx
100295c2:	mov    ecx,DWORD PTR [edi+0x40]
100295c5:	cmp    eax,ecx
100295c7:	mov    DWORD PTR [esp+0x34],ecx
100295cb:	jbe    0x100295e6
100295cd:	mov    eax,ecx
100295cf:	jmp    0x100295e2
100295d1:	mov    ecx,DWORD PTR [esp+0x28]
100295d5:	sub    ecx,eax
100295d7:	mov    eax,DWORD PTR [edi+0x40]
100295da:	mov    DWORD PTR [esp+0x24],ecx
100295de:	mov    DWORD PTR [esp+0x34],eax
100295e2:	mov    DWORD PTR [esp+0x14],eax
100295e6:	mov    ecx,DWORD PTR [esp+0x20]
100295ea:	cmp    eax,ecx
100295ec:	jbe    0x100295f4
100295ee:	mov    eax,ecx
100295f0:	mov    DWORD PTR [esp+0x14],eax
100295f4:	sub    ecx,eax
100295f6:	mov    DWORD PTR [esp+0x20],ecx
100295fa:	mov    ecx,DWORD PTR [esp+0x34]
100295fe:	sub    ecx,eax
10029600:	mov    eax,DWORD PTR [esp+0x28]
10029604:	mov    DWORD PTR [edi+0x40],ecx
10029607:	jmp    0x10029610
10029609:	lea    esp,[esp+0x0]
10029610:	mov    ecx,DWORD PTR [esp+0x24]
10029614:	mov    cl,BYTE PTR [ecx]
10029616:	add    DWORD PTR [esp+0x24],0x1
1002961b:	mov    BYTE PTR [eax],cl
1002961d:	add    eax,0x1
10029620:	sub    DWORD PTR [esp+0x14],0x1
10029625:	jne    0x10029610
10029627:	cmp    DWORD PTR [edi+0x40],0x0
1002962b:	mov    DWORD PTR [esp+0x28],eax
1002962f:	jne    0x10029796
10029635:	mov    DWORD PTR [edi],0x12
1002963b:	jmp    0x10029796
10029640:	cmp    DWORD PTR [esp+0x20],0x0
10029645:	je     0x100297f4
1002964b:	mov    eax,DWORD PTR [esp+0x28]
1002964f:	mov    cl,BYTE PTR [edi+0x40]
10029652:	mov    BYTE PTR [eax],cl
10029654:	add    eax,0x1
10029657:	sub    DWORD PTR [esp+0x20],0x1
1002965c:	mov    DWORD PTR [esp+0x28],eax
10029660:	mov    DWORD PTR [edi],0x12
10029666:	jmp    0x10029796
1002966b:	cmp    DWORD PTR [edi+0x8],0x0
1002966f:	je     0x10029739
10029675:	cmp    esi,0x20
10029678:	jae    0x100296a8
1002967a:	lea    ebx,[ebx+0x0]
10029680:	test   edx,edx
10029682:	je     0x100297f4
10029688:	movzx  eax,BYTE PTR [ebp+0x0]
1002968c:	mov    ecx,esi
1002968e:	shl    eax,cl
10029690:	sub    edx,0x1
10029693:	add    esi,0x8
10029696:	add    ebp,0x1
10029699:	add    ebx,eax
1002969b:	cmp    esi,0x20
1002969e:	mov    DWORD PTR [esp+0x10],edx
100296a2:	mov    DWORD PTR [esp+0x18],ebx
100296a6:	jb     0x10029680
100296a8:	mov    eax,DWORD PTR [esp+0x2c]
100296ac:	sub    eax,DWORD PTR [esp+0x20]
100296b0:	mov    ecx,DWORD PTR [esp+0x40]
100296b4:	add    DWORD PTR [ecx+0x14],eax
100296b7:	add    DWORD PTR [edi+0x1c],eax
100296ba:	test   eax,eax
100296bc:	mov    DWORD PTR [esp+0x2c],eax
100296c0:	je     0x100296f1
100296c2:	mov    ecx,DWORD PTR [esp+0x28]
100296c6:	mov    edx,DWORD PTR [edi+0x18]
100296c9:	push   eax
100296ca:	sub    ecx,eax
100296cc:	cmp    DWORD PTR [edi+0x10],0x0
100296d0:	push   ecx
100296d1:	push   edx
100296d2:	je     0x100296db
100296d4:	call   0x1002b520
100296d9:	jmp    0x100296e0
100296db:	call   0x1002b000
100296e0:	mov    ecx,DWORD PTR [esp+0x4c]
100296e4:	mov    edx,DWORD PTR [esp+0x1c]
100296e8:	mov    DWORD PTR [edi+0x18],eax
100296eb:	add    esp,0xc
100296ee:	mov    DWORD PTR [ecx+0x30],eax
100296f1:	cmp    DWORD PTR [edi+0x10],0x0
100296f5:	mov    eax,DWORD PTR [esp+0x20]
100296f9:	mov    DWORD PTR [esp+0x2c],eax
100296fd:	mov    eax,ebx
100296ff:	jne    0x1002971f
10029701:	and    eax,0xff00
10029706:	mov    ecx,ebx
10029708:	shl    ecx,0x10
1002970b:	add    eax,ecx
1002970d:	xor    ecx,ecx
1002970f:	mov    ch,BYTE PTR [esp+0x1a]
10029713:	shl    eax,0x8
10029716:	add    eax,ecx
10029718:	mov    ecx,ebx
1002971a:	shr    ecx,0x18
1002971d:	add    eax,ecx
1002971f:	cmp    eax,DWORD PTR [edi+0x18]
10029722:	je     0x10029731
10029724:	mov    eax,DWORD PTR [esp+0x40]
10029728:	mov    DWORD PTR [eax+0x18],0x100b4978
1002972f:	jmp    0x10029790
10029731:	xor    ebx,ebx
10029733:	mov    DWORD PTR [esp+0x18],ebx
10029737:	xor    esi,esi
10029739:	mov    DWORD PTR [edi],0x19
1002973f:	cmp    DWORD PTR [edi+0x8],0x0
10029743:	je     0x100297dc
10029749:	cmp    DWORD PTR [edi+0x10],0x0
1002974d:	je     0x100297dc
10029753:	cmp    esi,0x20
10029756:	jae    0x10029780
10029758:	test   edx,edx
1002975a:	je     0x100297f4
10029760:	movzx  eax,BYTE PTR [ebp+0x0]
10029764:	mov    ecx,esi
10029766:	shl    eax,cl
10029768:	sub    edx,0x1
1002976b:	add    esi,0x8
1002976e:	add    ebp,0x1
10029771:	add    ebx,eax
10029773:	cmp    esi,0x20
10029776:	mov    DWORD PTR [esp+0x10],edx
1002977a:	mov    DWORD PTR [esp+0x18],ebx
1002977e:	jb     0x10029758
10029780:	cmp    ebx,DWORD PTR [edi+0x1c]
10029783:	je     0x100297d8
10029785:	mov    ecx,DWORD PTR [esp+0x40]
10029789:	mov    DWORD PTR [ecx+0x18],0x100b4960
10029790:	mov    DWORD PTR [edi],0x1b
10029796:	mov    eax,DWORD PTR [edi]
10029798:	cmp    eax,0x1c
1002979b:	jbe    0x10028410
100297a1:	mov    eax,0xfffffffe
100297a6:	pop    esi
100297a7:	pop    ebp
100297a8:	pop    ebx
100297a9:	pop    edi
100297aa:	add    esp,0x2c
100297ad:	ret    
100297ae:	mov    eax,DWORD PTR [esp+0x40]
100297b2:	mov    ecx,DWORD PTR [esp+0x28]
100297b6:	mov    DWORD PTR [eax+0xc],ecx
100297b9:	mov    ecx,DWORD PTR [esp+0x20]
100297bd:	mov    DWORD PTR [eax],ebp
100297bf:	mov    DWORD PTR [eax+0x10],ecx
100297c2:	mov    DWORD PTR [eax+0x4],edx
100297c5:	mov    DWORD PTR [edi+0x3c],esi
100297c8:	pop    esi
100297c9:	pop    ebp
100297ca:	mov    DWORD PTR [edi+0x38],ebx
100297cd:	pop    ebx
100297ce:	mov    eax,0x2
100297d3:	pop    edi
100297d4:	add    esp,0x2c
100297d7:	ret    
100297d8:	xor    ebx,ebx
100297da:	xor    esi,esi
100297dc:	mov    DWORD PTR [edi],0x1a
100297e2:	mov    DWORD PTR [esp+0x30],0x1
100297ea:	jmp    0x100297f4
100297ec:	mov    DWORD PTR [esp+0x30],0xfffffffd
100297f4:	mov    eax,DWORD PTR [esp+0x40]
100297f8:	mov    ecx,DWORD PTR [esp+0x28]
100297fc:	mov    DWORD PTR [eax+0xc],ecx
100297ff:	mov    ecx,DWORD PTR [esp+0x20]
10029803:	mov    DWORD PTR [eax+0x10],ecx
10029806:	mov    DWORD PTR [eax],ebp
10029808:	mov    DWORD PTR [eax+0x4],edx
1002980b:	cmp    DWORD PTR [edi+0x28],0x0
1002980f:	mov    DWORD PTR [edi+0x38],ebx
10029812:	mov    DWORD PTR [edi+0x3c],esi
10029815:	jne    0x10029825
10029817:	cmp    DWORD PTR [edi],0x18
1002981a:	jge    0x10029849
1002981c:	mov    edx,DWORD PTR [esp+0x2c]
10029820:	cmp    edx,DWORD PTR [eax+0x10]
10029823:	je     0x10029849
10029825:	mov    eax,DWORD PTR [esp+0x2c]
10029829:	mov    ebx,DWORD PTR [esp+0x40]
1002982d:	call   0x100282a0
10029832:	test   eax,eax
10029834:	je     0x10029849
10029836:	mov    DWORD PTR [edi],0x1c
1002983c:	pop    esi
1002983d:	pop    ebp
1002983e:	pop    ebx
1002983f:	mov    eax,0xfffffffc
10029844:	pop    edi
10029845:	add    esp,0x2c
10029848:	ret    
10029849:	mov    esi,DWORD PTR [esp+0x40]
1002984d:	mov    ebp,DWORD PTR [esp+0x38]
10029851:	sub    ebp,DWORD PTR [esi+0x4]
10029854:	mov    ebx,DWORD PTR [esp+0x2c]
10029858:	sub    ebx,DWORD PTR [esi+0x10]
1002985b:	add    DWORD PTR [esi+0x8],ebp
1002985e:	add    DWORD PTR [esi+0x14],ebx
10029861:	add    DWORD PTR [edi+0x1c],ebx
10029864:	cmp    DWORD PTR [edi+0x8],0x0
10029868:	je     0x1002989e
1002986a:	test   ebx,ebx
1002986c:	je     0x1002989e
1002986e:	cmp    DWORD PTR [edi+0x10],0x0
10029872:	push   ebx
10029873:	je     0x10029886
10029875:	mov    ecx,DWORD PTR [esi+0xc]
10029878:	mov    edx,DWORD PTR [edi+0x18]
1002987b:	sub    ecx,ebx
1002987d:	push   ecx
1002987e:	push   edx
1002987f:	call   0x1002b520
10029884:	jmp    0x10029895
10029886:	mov    eax,DWORD PTR [esi+0xc]
10029889:	mov    ecx,DWORD PTR [edi+0x18]
1002988c:	sub    eax,ebx
1002988e:	push   eax
1002988f:	push   ecx
10029890:	call   0x1002b000
10029895:	mov    DWORD PTR [edi+0x18],eax
10029898:	add    esp,0xc
1002989b:	mov    DWORD PTR [esi+0x30],eax
1002989e:	mov    edx,DWORD PTR [edi+0x4]
100298a1:	neg    edx
100298a3:	sbb    edx,edx
100298a5:	and    edx,0x40
100298a8:	xor    eax,eax
100298aa:	cmp    DWORD PTR [edi],0xb
100298ad:	setne  al
100298b0:	sub    eax,0x1
100298b3:	and    eax,0x80
100298b8:	add    edx,eax
100298ba:	add    edx,DWORD PTR [edi+0x3c]
100298bd:	test   ebp,ebp
100298bf:	mov    DWORD PTR [esi+0x2c],edx
100298c2:	jne    0x100298c8
100298c4:	test   ebx,ebx
100298c6:	je     0x100298cf
100298c8:	cmp    DWORD PTR [esp+0x44],0x4
100298cd:	jne    0x100298e8
100298cf:	mov    eax,DWORD PTR [esp+0x30]
100298d3:	test   eax,eax
100298d5:	jne    0x100297a6
100298db:	pop    esi
100298dc:	pop    ebp
100298dd:	pop    ebx
100298de:	mov    eax,0xfffffffb
100298e3:	pop    edi
100298e4:	add    esp,0x2c
100298e7:	ret    
100298e8:	mov    eax,DWORD PTR [esp+0x30]
100298ec:	pop    esi
100298ed:	pop    ebp
100298ee:	pop    ebx
100298ef:	pop    edi
100298f0:	add    esp,0x2c
100298f3:	ret    
100298f4:	mov    eax,0xfffffffe
100298f9:	pop    edi
100298fa:	add    esp,0x2c
100298fd:	ret    
100298fe:	mov    edi,edi
10029900:	pop    ss
10029901:	test   BYTE PTR [edx],al
10029903:	adc    BYTE PTR [ebp+eax*4-0x79cbeffe],cl
1002990a:	add    dl,BYTE PTR [eax]
1002990c:	mov    edx,0x3d100286
10029911:	xchg   DWORD PTR [edx],eax
10029913:	adc    ch,cl
10029915:	xchg   DWORD PTR [edx],eax
10029917:	adc    BYTE PTR [ebp+0x41100288],al
1002991d:	mov    DWORD PTR [edx],eax
1002991f:	adc    dl,bh
10029921:	mov    DWORD PTR [edx],eax
10029923:	adc    BYTE PTR [edx+ecx*4-0x7503effe],dl
1002992a:	add    dl,BYTE PTR [eax]
1002992c:	sub    BYTE PTR [ebx-0x74cceffe],cl
10029932:	add    dl,BYTE PTR [eax]
10029934:	dec    BYTE PTR [ebx-0x7394effe]
1002993a:	add    dl,BYTE PTR [eax]
1002993c:	retf   
1002993d:	mov    WORD PTR [edx],es
1002993f:	adc    BYTE PTR [ebx-0x73],cl
10029942:	add    dl,BYTE PTR [eax]
10029944:	inc    edx
10029945:	mov    es,WORD PTR [edx]
10029947:	adc    BYTE PTR [ebx-0x6f],dl
1002994a:	add    dl,BYTE PTR [eax]
1002994c:	push   esp
1002994d:	xchg   ebx,eax
1002994e:	add    dl,BYTE PTR [eax]
10029950:	mov    al,ds:0xc100293
10029955:	xchg   ebp,eax
10029956:	add    dl,BYTE PTR [eax]
10029958:	jnp    0x100298ef
1002995a:	add    dl,BYTE PTR [eax]
1002995c:	inc    eax
1002995d:	xchg   esi,eax
1002995e:	add    dl,BYTE PTR [eax]
10029960:	imul   edx,DWORD PTR [esi-0x68c0effe],0x2
10029967:	adc    dl,ah
10029969:	xchg   edi,eax
1002996a:	add    dl,BYTE PTR [eax]
1002996c:	in     al,dx
1002996d:	xchg   edi,eax
1002996e:	add    dl,BYTE PTR [eax]
10029970:	cmp    al,0x98
10029972:	add    dl,BYTE PTR [eax]
10029974:	cwde   
10029975:	mov    eax,DWORD PTR [edx]
10029977:	adc    BYTE PTR [ebp-0x36effd75],ch
1002997d:	mov    eax,DWORD PTR [edx]
1002997f:	adc    dh,bl
10029981:	mov    eax,DWORD PTR [edx]
10029983:	adc    ah,cl
10029985:	int3   
10029986:	int3   
10029987:	int3   
10029988:	int3   
10029989:	int3   
1002998a:	int3   
1002998b:	int3   
1002998c:	int3   
1002998d:	int3   
1002998e:	int3   
1002998f:	int3   
10029990:	push   esi
10029991:	mov    esi,DWORD PTR [esp+0x8]
10029995:	test   esi,esi
10029997:	je     0x100299d3
10029999:	mov    eax,DWORD PTR [esi+0x1c]
1002999c:	test   eax,eax
1002999e:	je     0x100299d3
100299a0:	mov    ecx,DWORD PTR [esi+0x24]
100299a3:	test   ecx,ecx
100299a5:	je     0x100299d3
100299a7:	mov    eax,DWORD PTR [eax+0x34]
100299aa:	test   eax,eax
100299ac:	je     0x100299b8
100299ae:	push   eax
100299af:	mov    eax,DWORD PTR [esi+0x28]
100299b2:	push   eax
100299b3:	call   ecx
100299b5:	add    esp,0x8
100299b8:	mov    ecx,DWORD PTR [esi+0x1c]
100299bb:	mov    edx,DWORD PTR [esi+0x28]
100299be:	mov    eax,DWORD PTR [esi+0x24]
100299c1:	push   ecx
100299c2:	push   edx
100299c3:	call   eax
100299c5:	add    esp,0x8
100299c8:	mov    DWORD PTR [esi+0x1c],0x0
100299cf:	xor    eax,eax
100299d1:	pop    esi
100299d2:	ret    
100299d3:	mov    eax,0xfffffffe
100299d8:	pop    esi
100299d9:	ret    
100299da:	int3   
100299db:	int3   
100299dc:	int3   
100299dd:	int3   
100299de:	int3   
100299df:	int3   
100299e0:	push   esi
100299e1:	mov    esi,eax
100299e3:	mov    eax,DWORD PTR [esi+0x1c]
100299e6:	mov    ecx,DWORD PTR [esi+0x10]
100299e9:	push   edi
100299ea:	mov    edi,DWORD PTR [eax+0x14]
100299ed:	cmp    edi,ecx
100299ef:	jbe    0x100299f3
100299f1:	mov    edi,ecx
100299f3:	test   edi,edi
100299f5:	je     0x10029a2c
100299f7:	mov    eax,DWORD PTR [eax+0x10]
100299fa:	mov    ecx,DWORD PTR [esi+0xc]
100299fd:	push   edi
100299fe:	push   eax
100299ff:	push   ecx
10029a00:	call   0x10019470
10029a05:	mov    eax,DWORD PTR [esi+0x1c]
10029a08:	add    DWORD PTR [esi+0xc],edi
10029a0b:	add    DWORD PTR [eax+0x10],edi
10029a0e:	add    DWORD PTR [esi+0x14],edi
10029a11:	sub    DWORD PTR [esi+0x10],edi
10029a14:	mov    eax,DWORD PTR [esi+0x1c]
10029a17:	sub    DWORD PTR [eax+0x14],edi
10029a1a:	mov    esi,DWORD PTR [esi+0x1c]
10029a1d:	add    esp,0xc
10029a20:	cmp    DWORD PTR [esi+0x14],0x0
10029a24:	jne    0x10029a2c
10029a26:	mov    edx,DWORD PTR [esi+0x8]
10029a29:	mov    DWORD PTR [esi+0x10],edx
10029a2c:	pop    edi
10029a2d:	pop    esi
10029a2e:	ret    
10029a2f:	int3   
10029a30:	mov    eax,DWORD PTR [esi+0x4]
10029a33:	push   edi
10029a34:	mov    edi,eax
10029a36:	cmp    edi,ecx
10029a38:	jbe    0x10029a3c
10029a3a:	mov    edi,ecx
10029a3c:	test   edi,edi
10029a3e:	jne    0x10029a44
10029a40:	xor    eax,eax
10029a42:	pop    edi
10029a43:	ret    
10029a44:	sub    eax,edi
10029a46:	mov    DWORD PTR [esi+0x4],eax
10029a49:	mov    eax,DWORD PTR [esi+0x1c]
10029a4c:	mov    eax,DWORD PTR [eax+0x18]
10029a4f:	cmp    eax,0x1
10029a52:	jne    0x10029a63
10029a54:	mov    ecx,DWORD PTR [esi]
10029a56:	mov    edx,DWORD PTR [esi+0x30]
10029a59:	push   edi
10029a5a:	push   ecx
10029a5b:	push   edx
10029a5c:	call   0x1002b000
10029a61:	jmp    0x10029a75
10029a63:	cmp    eax,0x2
10029a66:	jne    0x10029a7b
10029a68:	mov    eax,DWORD PTR [esi]
10029a6a:	mov    ecx,DWORD PTR [esi+0x30]
10029a6d:	push   edi
10029a6e:	push   eax
10029a6f:	push   ecx
10029a70:	call   0x1002b520
10029a75:	mov    DWORD PTR [esi+0x30],eax
10029a78:	add    esp,0xc
10029a7b:	mov    edx,DWORD PTR [esi]
10029a7d:	mov    eax,DWORD PTR [esp+0x8]
10029a81:	push   edi
10029a82:	push   edx
10029a83:	push   eax
10029a84:	call   0x10019470
10029a89:	add    DWORD PTR [esi],edi
10029a8b:	add    DWORD PTR [esi+0x8],edi
10029a8e:	add    esp,0xc
10029a91:	mov    eax,edi
10029a93:	pop    edi
10029a94:	ret    
10029a95:	int3   
10029a96:	int3   
10029a97:	int3   
10029a98:	int3   
10029a99:	int3   
10029a9a:	int3   
10029a9b:	int3   
10029a9c:	int3   
10029a9d:	int3   
10029a9e:	int3   
10029a9f:	int3   
10029aa0:	sub    esp,0x14
10029aa3:	mov    ecx,DWORD PTR [edi+0x7c]
10029aa6:	mov    edx,DWORD PTR [edi+0x6c]
10029aa9:	push   ebx
10029aaa:	push   ebp
10029aab:	mov    ebp,DWORD PTR [edi+0x78]
10029aae:	push   esi
10029aaf:	mov    esi,DWORD PTR [edi+0x90]
10029ab5:	mov    DWORD PTR [esp+0x10],ecx
10029ab9:	mov    ecx,DWORD PTR [edi+0x38]
10029abc:	mov    DWORD PTR [esp+0x14],esi
10029ac0:	mov    esi,DWORD PTR [edi+0x2c]
10029ac3:	lea    ebx,[esi-0x106]
10029ac9:	add    ecx,edx
10029acb:	cmp    edx,ebx
10029acd:	jbe    0x10029add
10029acf:	sub    edx,esi
10029ad1:	add    edx,0x106
10029ad7:	mov    DWORD PTR [esp+0x18],edx
10029adb:	jmp    0x10029ae5
10029add:	mov    DWORD PTR [esp+0x18],0x0
10029ae5:	cmp    ebp,DWORD PTR [edi+0x8c]
10029aeb:	movzx  edx,BYTE PTR [ecx+ebp*1-0x1]
10029af0:	mov    BYTE PTR [esp+0xe],dl
10029af4:	movzx  edx,BYTE PTR [ecx+ebp*1]
10029af8:	lea    esi,[ecx+0x102]
10029afe:	mov    BYTE PTR [esp+0xf],dl
10029b02:	jb     0x10029b09
10029b04:	shr    DWORD PTR [esp+0x10],0x2
10029b09:	mov    edx,DWORD PTR [edi+0x74]
10029b0c:	cmp    DWORD PTR [esp+0x14],edx
10029b10:	jbe    0x10029b16
10029b12:	mov    DWORD PTR [esp+0x14],edx
10029b16:	mov    edx,DWORD PTR [edi+0x38]
10029b19:	mov    bl,BYTE PTR [esp+0xf]
10029b1d:	add    edx,eax
10029b1f:	cmp    BYTE PTR [edx+ebp*1],bl
10029b22:	jne    0x10029bef
10029b28:	mov    bl,BYTE PTR [esp+0xe]
10029b2c:	cmp    BYTE PTR [edx+ebp*1-0x1],bl
10029b30:	jne    0x10029bef
10029b36:	mov    bl,BYTE PTR [edx]
10029b38:	cmp    bl,BYTE PTR [ecx]
10029b3a:	jne    0x10029bef
10029b40:	mov    bl,BYTE PTR [edx+0x1]
10029b43:	add    edx,0x1
10029b46:	cmp    bl,BYTE PTR [ecx+0x1]
10029b49:	jne    0x10029bef
10029b4f:	add    ecx,0x2
10029b52:	add    edx,0x1
10029b55:	mov    bl,BYTE PTR [ecx+0x1]
10029b58:	add    ecx,0x1
10029b5b:	add    edx,0x1
10029b5e:	cmp    bl,BYTE PTR [edx]
10029b60:	jne    0x10029bc1
10029b62:	mov    bl,BYTE PTR [ecx+0x1]
10029b65:	add    ecx,0x1
10029b68:	add    edx,0x1
10029b6b:	cmp    bl,BYTE PTR [edx]
10029b6d:	jne    0x10029bc1
10029b6f:	mov    bl,BYTE PTR [ecx+0x1]
10029b72:	add    ecx,0x1
10029b75:	add    edx,0x1
10029b78:	cmp    bl,BYTE PTR [edx]
10029b7a:	jne    0x10029bc1
10029b7c:	mov    bl,BYTE PTR [ecx+0x1]
10029b7f:	add    ecx,0x1
10029b82:	add    edx,0x1
10029b85:	cmp    bl,BYTE PTR [edx]
10029b87:	jne    0x10029bc1
10029b89:	mov    bl,BYTE PTR [ecx+0x1]
10029b8c:	add    ecx,0x1
10029b8f:	add    edx,0x1
10029b92:	cmp    bl,BYTE PTR [edx]
10029b94:	jne    0x10029bc1
10029b96:	mov    bl,BYTE PTR [ecx+0x1]
10029b99:	add    ecx,0x1
10029b9c:	add    edx,0x1
10029b9f:	cmp    bl,BYTE PTR [edx]
10029ba1:	jne    0x10029bc1
10029ba3:	mov    bl,BYTE PTR [ecx+0x1]
10029ba6:	add    ecx,0x1
10029ba9:	add    edx,0x1
10029bac:	cmp    bl,BYTE PTR [edx]
10029bae:	jne    0x10029bc1
10029bb0:	mov    bl,BYTE PTR [ecx+0x1]
10029bb3:	add    ecx,0x1
10029bb6:	add    edx,0x1
10029bb9:	cmp    bl,BYTE PTR [edx]
10029bbb:	jne    0x10029bc1
10029bbd:	cmp    ecx,esi
10029bbf:	jb     0x10029b55
10029bc1:	mov    edx,ecx
10029bc3:	sub    edx,esi
10029bc5:	add    edx,0x102
10029bcb:	cmp    edx,ebp
10029bcd:	lea    ecx,[esi-0x102]
10029bd3:	jle    0x10029bef
10029bd5:	cmp    edx,DWORD PTR [esp+0x14]
10029bd9:	mov    DWORD PTR [edi+0x70],eax
10029bdc:	mov    ebp,edx
10029bde:	jge    0x10029c0c
10029be0:	mov    bl,BYTE PTR [edx+ecx*1-0x1]
10029be4:	mov    dl,BYTE PTR [edx+ecx*1]
10029be7:	mov    BYTE PTR [esp+0xe],bl
10029beb:	mov    BYTE PTR [esp+0xf],dl
10029bef:	mov    edx,DWORD PTR [edi+0x34]
10029bf2:	and    edx,eax
10029bf4:	mov    eax,DWORD PTR [edi+0x40]
10029bf7:	movzx  eax,WORD PTR [eax+edx*2]
10029bfb:	cmp    eax,DWORD PTR [esp+0x18]
10029bff:	jbe    0x10029c0c
10029c01:	sub    DWORD PTR [esp+0x10],0x1
10029c06:	jne    0x10029b16
10029c0c:	mov    eax,DWORD PTR [edi+0x74]
10029c0f:	cmp    ebp,eax
10029c11:	ja     0x10029c15
10029c13:	mov    eax,ebp
10029c15:	pop    esi
10029c16:	pop    ebp
10029c17:	pop    ebx
10029c18:	add    esp,0x14
10029c1b:	ret    
10029c1c:	int3   
10029c1d:	int3   
10029c1e:	int3   
10029c1f:	int3   
10029c20:	mov    ecx,DWORD PTR [esi+0x38]
10029c23:	mov    eax,DWORD PTR [esi+0x6c]
10029c26:	push   ebp
10029c27:	mov    ebp,DWORD PTR [esp+0x8]
10029c2b:	mov    dl,BYTE PTR [ecx+ebp*1]
10029c2e:	add    eax,ecx
10029c30:	add    ecx,ebp
10029c32:	cmp    dl,BYTE PTR [eax]
10029c34:	push   edi
10029c35:	lea    edi,[eax+0x102]
10029c3b:	jne    0x10029cda
10029c41:	mov    dl,BYTE PTR [ecx+0x1]
10029c44:	cmp    dl,BYTE PTR [eax+0x1]
10029c47:	jne    0x10029cda
10029c4d:	add    eax,0x2
10029c50:	add    ecx,0x2
10029c53:	mov    dl,BYTE PTR [eax+0x1]
10029c56:	add    eax,0x1
10029c59:	add    ecx,0x1
10029c5c:	cmp    dl,BYTE PTR [ecx]
10029c5e:	jne    0x10029cbf
10029c60:	mov    dl,BYTE PTR [eax+0x1]
10029c63:	add    eax,0x1
10029c66:	add    ecx,0x1
10029c69:	cmp    dl,BYTE PTR [ecx]
10029c6b:	jne    0x10029cbf
10029c6d:	mov    dl,BYTE PTR [eax+0x1]
10029c70:	add    eax,0x1
10029c73:	add    ecx,0x1
10029c76:	cmp    dl,BYTE PTR [ecx]
10029c78:	jne    0x10029cbf
10029c7a:	mov    dl,BYTE PTR [eax+0x1]
10029c7d:	add    eax,0x1
10029c80:	add    ecx,0x1
10029c83:	cmp    dl,BYTE PTR [ecx]
10029c85:	jne    0x10029cbf
10029c87:	mov    dl,BYTE PTR [eax+0x1]
10029c8a:	add    eax,0x1
10029c8d:	add    ecx,0x1
10029c90:	cmp    dl,BYTE PTR [ecx]
10029c92:	jne    0x10029cbf
10029c94:	mov    dl,BYTE PTR [eax+0x1]
10029c97:	add    eax,0x1
10029c9a:	add    ecx,0x1
10029c9d:	cmp    dl,BYTE PTR [ecx]
10029c9f:	jne    0x10029cbf
10029ca1:	mov    dl,BYTE PTR [eax+0x1]
10029ca4:	add    eax,0x1
10029ca7:	add    ecx,0x1
10029caa:	cmp    dl,BYTE PTR [ecx]
10029cac:	jne    0x10029cbf
10029cae:	mov    dl,BYTE PTR [eax+0x1]
10029cb1:	add    eax,0x1
10029cb4:	add    ecx,0x1
10029cb7:	cmp    dl,BYTE PTR [ecx]
10029cb9:	jne    0x10029cbf
10029cbb:	cmp    eax,edi
10029cbd:	jb     0x10029c53
10029cbf:	sub    eax,edi
10029cc1:	add    eax,0x102
10029cc6:	cmp    eax,0x3
10029cc9:	jl     0x10029cda
10029ccb:	mov    ecx,DWORD PTR [esi+0x74]
10029cce:	cmp    eax,ecx
10029cd0:	mov    DWORD PTR [esi+0x70],ebp
10029cd3:	jbe    0x10029cdf
10029cd5:	pop    edi
10029cd6:	mov    eax,ecx
10029cd8:	pop    ebp
10029cd9:	ret    
10029cda:	mov    eax,0x2
10029cdf:	pop    edi
10029ce0:	pop    ebp
10029ce1:	ret    
10029ce2:	int3   
10029ce3:	int3   
10029ce4:	int3   
10029ce5:	int3   
10029ce6:	int3   
10029ce7:	int3   
10029ce8:	int3   
10029ce9:	int3   
10029cea:	int3   
10029ceb:	int3   
10029cec:	int3   
10029ced:	int3   
10029cee:	int3   
10029cef:	int3   
10029cf0:	push   ebx
10029cf1:	mov    ebx,DWORD PTR [edi+0x2c]
10029cf4:	push   ebp
10029cf5:	push   esi
10029cf6:	mov    ebp,DWORD PTR [edi+0x3c]
10029cf9:	sub    ebp,DWORD PTR [edi+0x74]
10029cfc:	mov    eax,DWORD PTR [edi+0x6c]
10029cff:	mov    ecx,DWORD PTR [edi+0x2c]
10029d02:	lea    edx,[ebx+ecx*1-0x106]
10029d09:	sub    ebp,eax
10029d0b:	cmp    eax,edx
10029d0d:	jb     0x10029d6e
10029d0f:	mov    eax,DWORD PTR [edi+0x38]
10029d12:	push   ebx
10029d13:	lea    ecx,[eax+ebx*1]
10029d16:	push   ecx
10029d17:	push   eax
10029d18:	call   0x10019470
10029d1d:	mov    edx,DWORD PTR [edi+0x4c]
10029d20:	mov    eax,DWORD PTR [edi+0x44]
10029d23:	sub    DWORD PTR [edi+0x70],ebx
10029d26:	sub    DWORD PTR [edi+0x6c],ebx
10029d29:	add    esp,0xc
10029d2c:	sub    DWORD PTR [edi+0x5c],ebx
10029d2f:	lea    ecx,[eax+edx*2]
10029d32:	movzx  eax,WORD PTR [ecx-0x2]
10029d36:	sub    ecx,0x2
10029d39:	cmp    eax,ebx
10029d3b:	jb     0x10029d41
10029d3d:	sub    eax,ebx
10029d3f:	jmp    0x10029d43
10029d41:	xor    eax,eax
10029d43:	sub    edx,0x1
10029d46:	mov    WORD PTR [ecx],ax
10029d49:	jne    0x10029d32
10029d4b:	mov    ecx,DWORD PTR [edi+0x40]
10029d4e:	mov    edx,ebx
10029d50:	lea    ecx,[ecx+ebx*2]
10029d53:	movzx  eax,WORD PTR [ecx-0x2]
10029d57:	sub    ecx,0x2
10029d5a:	cmp    eax,ebx
10029d5c:	jb     0x10029d62
10029d5e:	sub    eax,ebx
10029d60:	jmp    0x10029d64
10029d62:	xor    eax,eax
10029d64:	sub    edx,0x1
10029d67:	mov    WORD PTR [ecx],ax
10029d6a:	jne    0x10029d53
10029d6c:	add    ebp,ebx
10029d6e:	mov    esi,DWORD PTR [edi]
10029d70:	cmp    DWORD PTR [esi+0x4],0x0
10029d74:	je     0x10029dc9
10029d76:	mov    edx,DWORD PTR [edi+0x74]
10029d79:	add    edx,DWORD PTR [edi+0x6c]
10029d7c:	mov    ecx,ebp
10029d7e:	add    edx,DWORD PTR [edi+0x38]
10029d81:	push   edx
10029d82:	call   0x10029a30
10029d87:	add    DWORD PTR [edi+0x74],eax
10029d8a:	mov    edx,DWORD PTR [edi+0x74]
10029d8d:	add    esp,0x4
10029d90:	cmp    edx,0x3
10029d93:	jb     0x10029db5
10029d95:	mov    eax,DWORD PTR [edi+0x6c]
10029d98:	mov    ecx,DWORD PTR [edi+0x38]
10029d9b:	lea    esi,[eax+ecx*1]
10029d9e:	movzx  eax,BYTE PTR [esi]
10029da1:	mov    ecx,DWORD PTR [edi+0x58]
10029da4:	mov    DWORD PTR [edi+0x48],eax
10029da7:	shl    eax,cl
10029da9:	movzx  ecx,BYTE PTR [esi+0x1]
10029dad:	xor    eax,ecx
10029daf:	and    eax,DWORD PTR [edi+0x54]
10029db2:	mov    DWORD PTR [edi+0x48],eax
10029db5:	cmp    edx,0x106
10029dbb:	jae    0x10029dc9
10029dbd:	mov    edx,DWORD PTR [edi]
10029dbf:	cmp    DWORD PTR [edx+0x4],0x0
10029dc3:	jne    0x10029cf6
10029dc9:	pop    esi
10029dca:	pop    ebp
10029dcb:	pop    ebx
10029dcc:	ret    
10029dcd:	int3   
10029dce:	int3   
10029dcf:	int3   
10029dd0:	push   esi
10029dd1:	push   edi
10029dd2:	mov    edi,DWORD PTR [esp+0xc]
10029dd6:	mov    eax,DWORD PTR [edi+0xc]
10029dd9:	mov    esi,0xffff
10029dde:	add    eax,0xfffffffb
10029de1:	cmp    eax,esi
10029de3:	jae    0x10029de7
10029de5:	mov    esi,eax
10029de7:	mov    eax,DWORD PTR [edi+0x74]
10029dea:	cmp    eax,0x1
10029ded:	ja     0x10029dff
10029def:	call   0x10029cf0
10029df4:	mov    eax,DWORD PTR [edi+0x74]
10029df7:	test   eax,eax
10029df9:	je     0x10029e9d
10029dff:	add    DWORD PTR [edi+0x6c],eax
10029e02:	mov    ecx,DWORD PTR [edi+0x5c]
10029e05:	mov    edx,DWORD PTR [edi+0x6c]
10029e08:	mov    DWORD PTR [edi+0x74],0x0
10029e0f:	lea    eax,[ecx+esi*1]
10029e12:	je     0x10029e18
10029e14:	cmp    edx,eax
10029e16:	jb     0x10029e51
10029e18:	sub    edx,eax
10029e1a:	test   ecx,ecx
10029e1c:	mov    DWORD PTR [edi+0x74],edx
10029e1f:	mov    DWORD PTR [edi+0x6c],eax
10029e22:	jl     0x10029e2b
10029e24:	mov    edx,DWORD PTR [edi+0x38]
10029e27:	add    edx,ecx
10029e29:	jmp    0x10029e2d
10029e2b:	xor    edx,edx
10029e2d:	push   0x0
10029e2f:	sub    eax,ecx
10029e31:	push   eax
10029e32:	push   edx
10029e33:	push   edi
10029e34:	call   0x1002cb00
10029e39:	mov    eax,DWORD PTR [edi+0x6c]
10029e3c:	mov    DWORD PTR [edi+0x5c],eax
10029e3f:	mov    eax,DWORD PTR [edi]
10029e41:	add    esp,0x10
10029e44:	call   0x100299e0
10029e49:	mov    ecx,DWORD PTR [edi]
10029e4b:	cmp    DWORD PTR [ecx+0x10],0x0
10029e4f:	je     0x10029e98
10029e51:	mov    ecx,DWORD PTR [edi+0x5c]
10029e54:	mov    edx,DWORD PTR [edi+0x6c]
10029e57:	mov    eax,DWORD PTR [edi+0x2c]
10029e5a:	sub    edx,ecx
10029e5c:	sub    eax,0x106
10029e61:	cmp    edx,eax
10029e63:	jb     0x10029de7
10029e65:	test   ecx,ecx
10029e67:	jl     0x10029e70
10029e69:	mov    eax,DWORD PTR [edi+0x38]
10029e6c:	add    eax,ecx
10029e6e:	jmp    0x10029e72
10029e70:	xor    eax,eax
10029e72:	push   0x0
10029e74:	push   edx
10029e75:	push   eax
10029e76:	push   edi
10029e77:	call   0x1002cb00
10029e7c:	mov    ecx,DWORD PTR [edi+0x6c]
10029e7f:	mov    eax,DWORD PTR [edi]
10029e81:	add    esp,0x10
10029e84:	mov    DWORD PTR [edi+0x5c],ecx
10029e87:	call   0x100299e0
10029e8c:	mov    edx,DWORD PTR [edi]
10029e8e:	cmp    DWORD PTR [edx+0x10],0x0
10029e92:	jne    0x10029de7
10029e98:	pop    edi
10029e99:	xor    eax,eax
10029e9b:	pop    esi
10029e9c:	ret    
10029e9d:	mov    esi,DWORD PTR [esp+0x10]
10029ea1:	test   esi,esi
10029ea3:	je     0x10029e98
10029ea5:	mov    ecx,DWORD PTR [edi+0x5c]
10029ea8:	test   ecx,ecx
10029eaa:	jl     0x10029eb3
10029eac:	mov    eax,DWORD PTR [edi+0x38]
10029eaf:	add    eax,ecx
10029eb1:	jmp    0x10029eb5
10029eb3:	xor    eax,eax
10029eb5:	xor    edx,edx
10029eb7:	cmp    esi,0x4
10029eba:	sete   dl
10029ebd:	push   edx
10029ebe:	mov    edx,DWORD PTR [edi+0x6c]
10029ec1:	sub    edx,ecx
10029ec3:	push   edx
10029ec4:	push   eax
10029ec5:	push   edi
10029ec6:	call   0x1002cb00
10029ecb:	mov    eax,DWORD PTR [edi+0x6c]
10029ece:	mov    DWORD PTR [edi+0x5c],eax
10029ed1:	mov    eax,DWORD PTR [edi]
10029ed3:	add    esp,0x10
10029ed6:	call   0x100299e0
10029edb:	mov    ecx,DWORD PTR [edi]
10029edd:	xor    eax,eax
10029edf:	cmp    DWORD PTR [ecx+0x10],eax
10029ee2:	jne    0x10029ef3
10029ee4:	cmp    esi,0x4
10029ee7:	setne  al
10029eea:	pop    edi
10029eeb:	pop    esi
10029eec:	sub    eax,0x1
10029eef:	and    eax,0x2
10029ef2:	ret    
10029ef3:	cmp    esi,0x4
10029ef6:	sete   al
10029ef9:	pop    edi
10029efa:	pop    esi
10029efb:	lea    eax,[eax+eax*1+0x1]
10029eff:	ret    
10029f00:	push   ebx
10029f01:	push   ebp
10029f02:	push   esi
10029f03:	xor    ebp,ebp
10029f05:	push   edi
10029f06:	mov    edi,DWORD PTR [esp+0x14]
10029f0a:	lea    ebx,[ebp+0x1]
10029f0d:	lea    ecx,[ecx+0x0]
10029f10:	mov    eax,DWORD PTR [edi+0x74]
10029f13:	cmp    eax,0x106
10029f18:	jae    0x10029f3d
10029f1a:	call   0x10029cf0
10029f1f:	mov    eax,DWORD PTR [edi+0x74]
10029f22:	cmp    eax,0x106
10029f27:	mov    esi,DWORD PTR [esp+0x18]
10029f2b:	jae    0x10029f35
10029f2d:	test   esi,esi
10029f2f:	je     0x1002a1b4
10029f35:	test   eax,eax
10029f37:	je     0x1002a1bb
10029f3d:	cmp    eax,0x3
10029f40:	jb     0x10029f8b
10029f42:	mov    eax,DWORD PTR [edi+0x48]
10029f45:	mov    ecx,DWORD PTR [edi+0x58]
10029f48:	mov    edx,DWORD PTR [edi+0x6c]
10029f4b:	mov    esi,DWORD PTR [edi+0x34]
10029f4e:	shl    eax,cl
10029f50:	mov    ecx,DWORD PTR [edi+0x38]
10029f53:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
10029f58:	xor    eax,ecx
10029f5a:	and    eax,DWORD PTR [edi+0x54]
10029f5d:	mov    ecx,DWORD PTR [edi+0x44]
10029f60:	mov    DWORD PTR [edi+0x48],eax
10029f63:	mov    ax,WORD PTR [ecx+eax*2]
10029f67:	and    esi,edx
10029f69:	mov    edx,DWORD PTR [edi+0x40]
10029f6c:	mov    WORD PTR [edx+esi*2],ax
10029f70:	mov    ecx,DWORD PTR [edi+0x6c]
10029f73:	and    ecx,DWORD PTR [edi+0x34]
10029f76:	mov    edx,DWORD PTR [edi+0x40]
10029f79:	movzx  ebp,WORD PTR [edx+ecx*2]
10029f7d:	mov    eax,DWORD PTR [edi+0x48]
10029f80:	mov    ecx,DWORD PTR [edi+0x44]
10029f83:	mov    dx,WORD PTR [edi+0x6c]
10029f87:	mov    WORD PTR [ecx+eax*2],dx
10029f8b:	test   ebp,ebp
10029f8d:	je     0x10029fd1
10029f8f:	mov    eax,DWORD PTR [edi+0x6c]
10029f92:	mov    ecx,DWORD PTR [edi+0x2c]
10029f95:	sub    eax,ebp
10029f97:	sub    ecx,0x106
10029f9d:	cmp    eax,ecx
10029f9f:	ja     0x10029fd1
10029fa1:	mov    ecx,DWORD PTR [edi+0x88]
10029fa7:	cmp    ecx,0x2
10029faa:	je     0x10029fba
10029fac:	cmp    ecx,0x3
10029faf:	je     0x10029fbf
10029fb1:	mov    eax,ebp
10029fb3:	call   0x10029aa0
10029fb8:	jmp    0x10029fce
10029fba:	cmp    ecx,0x3
10029fbd:	jne    0x10029fd1
10029fbf:	cmp    eax,ebx
10029fc1:	jne    0x10029fd1
10029fc3:	push   ebp
10029fc4:	mov    esi,edi
10029fc6:	call   0x10029c20
10029fcb:	add    esp,0x4
10029fce:	mov    DWORD PTR [edi+0x60],eax
10029fd1:	cmp    DWORD PTR [edi+0x60],0x3
10029fd5:	jb     0x1002a113
10029fdb:	mov    dx,WORD PTR [edi+0x6c]
10029fdf:	sub    dx,WORD PTR [edi+0x70]
10029fe3:	mov    al,BYTE PTR [edi+0x60]
10029fe6:	mov    esi,DWORD PTR [edi+0x16a4]
10029fec:	movzx  ecx,dx
10029fef:	mov    edx,DWORD PTR [edi+0x16a0]
10029ff5:	mov    WORD PTR [esi+edx*2],cx
10029ff9:	mov    edx,DWORD PTR [edi+0x1698]
10029fff:	mov    esi,DWORD PTR [edi+0x16a0]
1002a005:	sub    al,0x3
1002a007:	mov    BYTE PTR [edx+esi*1],al
1002a00a:	add    DWORD PTR [edi+0x16a0],ebx
1002a010:	movzx  eax,al
1002a013:	movzx  edx,BYTE PTR [eax+0x100b75f8]
1002a01a:	add    WORD PTR [edi+edx*4+0x498],bx
1002a022:	lea    eax,[edi+edx*4+0x498]
1002a029:	add    ecx,0xffff
1002a02f:	cmp    cx,0x100
1002a034:	jae    0x1002a042
1002a036:	movzx  eax,cx
1002a039:	movzx  eax,BYTE PTR [eax+0x100b73f8]
1002a040:	jmp    0x1002a04f
1002a042:	movzx  ecx,cx
1002a045:	shr    ecx,0x7
1002a048:	movzx  eax,BYTE PTR [ecx+0x100b74f8]
1002a04f:	add    WORD PTR [edi+eax*4+0x988],bx
1002a057:	mov    edx,DWORD PTR [edi+0x169c]
1002a05d:	xor    eax,eax
1002a05f:	sub    edx,ebx
1002a061:	cmp    DWORD PTR [edi+0x16a0],edx
1002a067:	sete   al
1002a06a:	mov    esi,eax
1002a06c:	mov    eax,DWORD PTR [edi+0x60]
1002a06f:	sub    DWORD PTR [edi+0x74],eax
1002a072:	cmp    eax,DWORD PTR [edi+0x80]
1002a078:	mov    ecx,DWORD PTR [edi+0x74]
1002a07b:	ja     0x1002a0e7
1002a07d:	cmp    ecx,0x3
1002a080:	jb     0x1002a0e7
1002a082:	add    eax,0xffffffff
1002a085:	mov    DWORD PTR [edi+0x60],eax
1002a088:	jmp    0x1002a090
1002a08a:	lea    ebx,[ebx+0x0]
1002a090:	add    DWORD PTR [edi+0x6c],ebx
1002a093:	mov    edx,DWORD PTR [edi+0x6c]
1002a096:	mov    ecx,DWORD PTR [edi+0x38]
1002a099:	movzx  eax,BYTE PTR [edx+ecx*1+0x2]
1002a09e:	mov    ebp,DWORD PTR [edi+0x48]
1002a0a1:	mov    ecx,DWORD PTR [edi+0x58]
1002a0a4:	shl    ebp,cl
1002a0a6:	mov    ecx,DWORD PTR [edi+0x44]
1002a0a9:	xor    eax,ebp
1002a0ab:	and    eax,DWORD PTR [edi+0x54]
1002a0ae:	mov    ebp,DWORD PTR [edi+0x34]
1002a0b1:	and    ebp,edx
1002a0b3:	mov    edx,DWORD PTR [edi+0x40]
1002a0b6:	mov    DWORD PTR [edi+0x48],eax
1002a0b9:	mov    ax,WORD PTR [ecx+eax*2]
1002a0bd:	mov    WORD PTR [edx+ebp*2],ax
1002a0c1:	mov    ecx,DWORD PTR [edi+0x6c]
1002a0c4:	and    ecx,DWORD PTR [edi+0x34]
1002a0c7:	mov    edx,DWORD PTR [edi+0x40]
1002a0ca:	movzx  ebp,WORD PTR [edx+ecx*2]
1002a0ce:	mov    eax,DWORD PTR [edi+0x48]
1002a0d1:	mov    ecx,DWORD PTR [edi+0x44]
1002a0d4:	mov    dx,WORD PTR [edi+0x6c]
1002a0d8:	mov    WORD PTR [ecx+eax*2],dx
1002a0dc:	add    DWORD PTR [edi+0x60],0xffffffff
1002a0e0:	jne    0x1002a090
1002a0e2:	jmp    0x1002a16e
1002a0e7:	add    DWORD PTR [edi+0x6c],eax
1002a0ea:	mov    eax,DWORD PTR [edi+0x6c]
1002a0ed:	mov    ecx,DWORD PTR [edi+0x38]
1002a0f0:	lea    edx,[eax+ecx*1]
1002a0f3:	mov    ecx,DWORD PTR [edi+0x58]
1002a0f6:	mov    DWORD PTR [edi+0x60],0x0
1002a0fd:	movzx  eax,BYTE PTR [edx]
1002a100:	mov    DWORD PTR [edi+0x48],eax
1002a103:	movzx  edx,BYTE PTR [edx+0x1]
1002a107:	shl    eax,cl
1002a109:	xor    eax,edx
1002a10b:	and    eax,DWORD PTR [edi+0x54]
1002a10e:	mov    DWORD PTR [edi+0x48],eax
1002a111:	jmp    0x1002a171
1002a113:	mov    eax,DWORD PTR [edi+0x6c]
1002a116:	mov    ecx,DWORD PTR [edi+0x38]
1002a119:	mov    al,BYTE PTR [eax+ecx*1]
1002a11c:	mov    edx,DWORD PTR [edi+0x16a0]
1002a122:	mov    ecx,DWORD PTR [edi+0x16a4]
1002a128:	mov    WORD PTR [ecx+edx*2],0x0
1002a12e:	mov    ecx,DWORD PTR [edi+0x16a0]
1002a134:	mov    edx,DWORD PTR [edi+0x1698]
1002a13a:	mov    BYTE PTR [edx+ecx*1],al
1002a13d:	add    DWORD PTR [edi+0x16a0],ebx
1002a143:	movzx  edx,al
1002a146:	add    WORD PTR [edi+edx*4+0x94],bx
1002a14e:	lea    eax,[edi+edx*4+0x94]
1002a155:	mov    eax,DWORD PTR [edi+0x169c]
1002a15b:	xor    ecx,ecx
1002a15d:	sub    eax,ebx
1002a15f:	cmp    DWORD PTR [edi+0x16a0],eax
1002a165:	sete   cl
1002a168:	add    DWORD PTR [edi+0x74],0xffffffff
1002a16c:	mov    esi,ecx
1002a16e:	add    DWORD PTR [edi+0x6c],ebx
1002a171:	test   esi,esi
1002a173:	je     0x10029f10
1002a179:	mov    ecx,DWORD PTR [edi+0x5c]
1002a17c:	test   ecx,ecx
1002a17e:	jl     0x1002a187
1002a180:	mov    eax,DWORD PTR [edi+0x38]
1002a183:	add    eax,ecx
1002a185:	jmp    0x1002a189
1002a187:	xor    eax,eax
1002a189:	mov    edx,DWORD PTR [edi+0x6c]
1002a18c:	push   0x0
1002a18e:	sub    edx,ecx
1002a190:	push   edx
1002a191:	push   eax
1002a192:	push   edi
1002a193:	call   0x1002cb00
1002a198:	mov    eax,DWORD PTR [edi+0x6c]
1002a19b:	mov    DWORD PTR [edi+0x5c],eax
1002a19e:	mov    eax,DWORD PTR [edi]
1002a1a0:	add    esp,0x10
1002a1a3:	call   0x100299e0
1002a1a8:	mov    ecx,DWORD PTR [edi]
1002a1aa:	cmp    DWORD PTR [ecx+0x10],0x0
1002a1ae:	jne    0x10029f10
1002a1b4:	pop    edi
1002a1b5:	pop    esi
1002a1b6:	pop    ebp
1002a1b7:	xor    eax,eax
1002a1b9:	pop    ebx
1002a1ba:	ret    
1002a1bb:	mov    ecx,DWORD PTR [edi+0x5c]
1002a1be:	test   ecx,ecx
1002a1c0:	jl     0x1002a1c9
1002a1c2:	mov    eax,DWORD PTR [edi+0x38]
1002a1c5:	add    eax,ecx
1002a1c7:	jmp    0x1002a1cb
1002a1c9:	xor    eax,eax
1002a1cb:	xor    edx,edx
1002a1cd:	cmp    esi,0x4
1002a1d0:	sete   dl
1002a1d3:	push   edx
1002a1d4:	mov    edx,DWORD PTR [edi+0x6c]
1002a1d7:	sub    edx,ecx
1002a1d9:	push   edx
1002a1da:	push   eax
1002a1db:	push   edi
1002a1dc:	call   0x1002cb00
1002a1e1:	mov    eax,DWORD PTR [edi+0x6c]
1002a1e4:	mov    DWORD PTR [edi+0x5c],eax
1002a1e7:	mov    eax,DWORD PTR [edi]
1002a1e9:	add    esp,0x10
1002a1ec:	call   0x100299e0
1002a1f1:	mov    ecx,DWORD PTR [edi]
1002a1f3:	xor    eax,eax
1002a1f5:	cmp    DWORD PTR [ecx+0x10],eax
1002a1f8:	jne    0x1002a20b
1002a1fa:	cmp    esi,0x4
1002a1fd:	setne  al
1002a200:	pop    edi
1002a201:	pop    esi
1002a202:	pop    ebp
1002a203:	pop    ebx
1002a204:	sub    eax,0x1
1002a207:	and    eax,0x2
1002a20a:	ret    
1002a20b:	cmp    esi,0x4
1002a20e:	sete   al
1002a211:	pop    edi
1002a212:	pop    esi
1002a213:	pop    ebp
1002a214:	pop    ebx
1002a215:	lea    eax,[eax+eax*1+0x1]
1002a219:	ret    
1002a21a:	int3   
1002a21b:	int3   
1002a21c:	int3   
1002a21d:	int3   
1002a21e:	int3   
1002a21f:	int3   
1002a220:	push   ecx
1002a221:	push   ebx
1002a222:	push   ebp
1002a223:	push   esi
1002a224:	push   edi
1002a225:	mov    edi,DWORD PTR [esp+0x18]
1002a229:	mov    DWORD PTR [esp+0x10],0x0
1002a231:	mov    ebp,0x1
1002a236:	mov    eax,DWORD PTR [edi+0x74]
1002a239:	cmp    eax,0x106
1002a23e:	jae    0x1002a263
1002a240:	call   0x10029cf0
1002a245:	mov    eax,DWORD PTR [edi+0x74]
1002a248:	cmp    eax,0x106
1002a24d:	mov    esi,DWORD PTR [esp+0x1c]
1002a251:	jae    0x1002a25b
1002a253:	test   esi,esi
1002a255:	je     0x1002a4b6
1002a25b:	test   eax,eax
1002a25d:	je     0x1002a56b
1002a263:	cmp    eax,0x3
1002a266:	jb     0x1002a2b5
1002a268:	mov    eax,DWORD PTR [edi+0x48]
1002a26b:	mov    ecx,DWORD PTR [edi+0x58]
1002a26e:	mov    edx,DWORD PTR [edi+0x6c]
1002a271:	mov    esi,DWORD PTR [edi+0x34]
1002a274:	shl    eax,cl
1002a276:	mov    ecx,DWORD PTR [edi+0x38]
1002a279:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
1002a27e:	xor    eax,ecx
1002a280:	and    eax,DWORD PTR [edi+0x54]
1002a283:	mov    ecx,DWORD PTR [edi+0x44]
1002a286:	mov    DWORD PTR [edi+0x48],eax
1002a289:	movzx  eax,WORD PTR [ecx+eax*2]
1002a28d:	and    esi,edx
1002a28f:	mov    edx,DWORD PTR [edi+0x40]
1002a292:	mov    WORD PTR [edx+esi*2],ax
1002a296:	mov    ecx,DWORD PTR [edi+0x6c]
1002a299:	and    ecx,DWORD PTR [edi+0x34]
1002a29c:	mov    edx,DWORD PTR [edi+0x40]
1002a29f:	movzx  eax,WORD PTR [edx+ecx*2]
1002a2a3:	mov    ecx,DWORD PTR [edi+0x48]
1002a2a6:	mov    edx,DWORD PTR [edi+0x44]
1002a2a9:	mov    DWORD PTR [esp+0x10],eax
1002a2ad:	movzx  eax,WORD PTR [edi+0x6c]
1002a2b1:	mov    WORD PTR [edx+ecx*2],ax
1002a2b5:	mov    edx,DWORD PTR [edi+0x70]
1002a2b8:	mov    ecx,DWORD PTR [edi+0x60]
1002a2bb:	mov    DWORD PTR [edi+0x64],edx
1002a2be:	mov    edx,DWORD PTR [esp+0x10]
1002a2c2:	test   edx,edx
1002a2c4:	mov    ebx,0x2
1002a2c9:	mov    DWORD PTR [edi+0x78],ecx
1002a2cc:	mov    DWORD PTR [edi+0x60],ebx
1002a2cf:	je     0x1002a342
1002a2d1:	mov    eax,ecx
1002a2d3:	cmp    eax,DWORD PTR [edi+0x80]
1002a2d9:	jae    0x1002a342
1002a2db:	mov    eax,DWORD PTR [edi+0x6c]
1002a2de:	mov    ecx,DWORD PTR [edi+0x2c]
1002a2e1:	sub    eax,edx
1002a2e3:	sub    ecx,0x106
1002a2e9:	cmp    eax,ecx
1002a2eb:	ja     0x1002a342
1002a2ed:	mov    ecx,DWORD PTR [edi+0x88]
1002a2f3:	cmp    ecx,ebx
1002a2f5:	je     0x1002a305
1002a2f7:	cmp    ecx,0x3
1002a2fa:	je     0x1002a30a
1002a2fc:	mov    eax,edx
1002a2fe:	call   0x10029aa0
1002a303:	jmp    0x1002a319
1002a305:	cmp    ecx,0x3
1002a308:	jne    0x1002a31c
1002a30a:	cmp    eax,ebp
1002a30c:	jne    0x1002a31c
1002a30e:	push   edx
1002a30f:	mov    esi,edi
1002a311:	call   0x10029c20
1002a316:	add    esp,0x4
1002a319:	mov    DWORD PTR [edi+0x60],eax
1002a31c:	mov    eax,DWORD PTR [edi+0x60]
1002a31f:	cmp    eax,0x5
1002a322:	ja     0x1002a342
1002a324:	cmp    DWORD PTR [edi+0x88],ebp
1002a32a:	je     0x1002a33f
1002a32c:	cmp    eax,0x3
1002a32f:	jne    0x1002a342
1002a331:	mov    edx,DWORD PTR [edi+0x6c]
1002a334:	sub    edx,DWORD PTR [edi+0x70]
1002a337:	cmp    edx,0x1000
1002a33d:	jbe    0x1002a342
1002a33f:	mov    DWORD PTR [edi+0x60],ebx
1002a342:	mov    eax,DWORD PTR [edi+0x78]
1002a345:	cmp    eax,0x3
1002a348:	jb     0x1002a4be
1002a34e:	cmp    DWORD PTR [edi+0x60],eax
1002a351:	ja     0x1002a4be
1002a357:	mov    dx,WORD PTR [edi+0x6c]
1002a35b:	sub    dx,WORD PTR [edi+0x64]
1002a35f:	mov    eax,DWORD PTR [edi+0x6c]
1002a362:	mov    ecx,DWORD PTR [edi+0x74]
1002a365:	mov    ebx,DWORD PTR [edi+0x16a4]
1002a36b:	lea    esi,[eax+ecx*1-0x3]
1002a36f:	mov    al,BYTE PTR [edi+0x78]
1002a372:	sub    dx,bp
1002a375:	movzx  ecx,dx
1002a378:	mov    edx,DWORD PTR [edi+0x16a0]
1002a37e:	mov    WORD PTR [ebx+edx*2],cx
1002a382:	mov    edx,DWORD PTR [edi+0x1698]
1002a388:	mov    ebx,DWORD PTR [edi+0x16a0]
1002a38e:	sub    al,0x3
1002a390:	mov    BYTE PTR [edx+ebx*1],al
1002a393:	add    DWORD PTR [edi+0x16a0],ebp
1002a399:	movzx  eax,al
1002a39c:	movzx  edx,BYTE PTR [eax+0x100b75f8]
1002a3a3:	add    WORD PTR [edi+edx*4+0x498],bp
1002a3ab:	lea    eax,[edi+edx*4+0x498]
1002a3b2:	add    ecx,0xffff
1002a3b8:	cmp    cx,0x100
1002a3bd:	jae    0x1002a3cb
1002a3bf:	movzx  eax,cx
1002a3c2:	movzx  eax,BYTE PTR [eax+0x100b73f8]
1002a3c9:	jmp    0x1002a3d8
1002a3cb:	movzx  ecx,cx
1002a3ce:	shr    ecx,0x7
1002a3d1:	movzx  eax,BYTE PTR [ecx+0x100b74f8]
1002a3d8:	add    WORD PTR [edi+eax*4+0x988],bp
1002a3e0:	mov    edx,DWORD PTR [edi+0x169c]
1002a3e6:	mov    eax,DWORD PTR [edi+0x78]
1002a3e9:	sub    edx,ebp
1002a3eb:	xor    ebx,ebx
1002a3ed:	cmp    DWORD PTR [edi+0x16a0],edx
1002a3f3:	mov    ecx,ebp
1002a3f5:	sete   bl
1002a3f8:	sub    ecx,eax
1002a3fa:	add    DWORD PTR [edi+0x74],ecx
1002a3fd:	add    eax,0xfffffffe
1002a400:	mov    DWORD PTR [edi+0x78],eax
1002a403:	add    DWORD PTR [edi+0x6c],ebp
1002a406:	mov    edx,DWORD PTR [edi+0x6c]
1002a409:	cmp    edx,esi
1002a40b:	ja     0x1002a45c
1002a40d:	mov    eax,DWORD PTR [edi+0x48]
1002a410:	mov    ecx,DWORD PTR [edi+0x58]
1002a413:	mov    ebp,DWORD PTR [edi+0x34]
1002a416:	shl    eax,cl
1002a418:	mov    ecx,DWORD PTR [edi+0x38]
1002a41b:	movzx  ecx,BYTE PTR [ecx+edx*1+0x2]
1002a420:	xor    eax,ecx
1002a422:	and    eax,DWORD PTR [edi+0x54]
1002a425:	mov    ecx,DWORD PTR [edi+0x44]
1002a428:	mov    DWORD PTR [edi+0x48],eax
1002a42b:	movzx  eax,WORD PTR [ecx+eax*2]
1002a42f:	and    ebp,edx
1002a431:	mov    edx,DWORD PTR [edi+0x40]
1002a434:	mov    WORD PTR [edx+ebp*2],ax
1002a438:	mov    ecx,DWORD PTR [edi+0x6c]
1002a43b:	and    ecx,DWORD PTR [edi+0x34]
1002a43e:	mov    edx,DWORD PTR [edi+0x40]
1002a441:	movzx  eax,WORD PTR [edx+ecx*2]
1002a445:	mov    ecx,DWORD PTR [edi+0x48]
1002a448:	mov    edx,DWORD PTR [edi+0x44]
1002a44b:	mov    DWORD PTR [esp+0x10],eax
1002a44f:	movzx  eax,WORD PTR [edi+0x6c]
1002a453:	mov    WORD PTR [edx+ecx*2],ax
1002a457:	mov    ebp,0x1
1002a45c:	add    DWORD PTR [edi+0x78],0xffffffff
1002a460:	jne    0x1002a403
1002a462:	add    DWORD PTR [edi+0x6c],ebp
1002a465:	test   ebx,ebx
1002a467:	mov    eax,DWORD PTR [edi+0x6c]
1002a46a:	mov    DWORD PTR [edi+0x68],0x0
1002a471:	mov    DWORD PTR [edi+0x60],0x2
1002a478:	je     0x1002a236
1002a47e:	mov    edx,DWORD PTR [edi+0x5c]
1002a481:	test   edx,edx
1002a483:	jl     0x1002a48c
1002a485:	mov    ecx,DWORD PTR [edi+0x38]
1002a488:	add    ecx,edx
1002a48a:	jmp    0x1002a48e
1002a48c:	xor    ecx,ecx
1002a48e:	push   0x0
1002a490:	sub    eax,edx
1002a492:	push   eax
1002a493:	push   ecx
1002a494:	push   edi
1002a495:	call   0x1002cb00
1002a49a:	mov    ecx,DWORD PTR [edi+0x6c]
1002a49d:	mov    eax,DWORD PTR [edi]
1002a49f:	add    esp,0x10
1002a4a2:	mov    DWORD PTR [edi+0x5c],ecx
1002a4a5:	call   0x100299e0
1002a4aa:	mov    edx,DWORD PTR [edi]
1002a4ac:	cmp    DWORD PTR [edx+0x10],0x0
1002a4b0:	jne    0x1002a236
1002a4b6:	pop    edi
1002a4b7:	pop    esi
1002a4b8:	pop    ebp
1002a4b9:	xor    eax,eax
1002a4bb:	pop    ebx
1002a4bc:	pop    ecx
1002a4bd:	ret    
1002a4be:	cmp    DWORD PTR [edi+0x68],0x0
1002a4c2:	je     0x1002a55c
1002a4c8:	mov    eax,DWORD PTR [edi+0x6c]
1002a4cb:	mov    ecx,DWORD PTR [edi+0x38]
1002a4ce:	mov    al,BYTE PTR [eax+ecx*1-0x1]
1002a4d2:	mov    edx,DWORD PTR [edi+0x16a0]
1002a4d8:	mov    ecx,DWORD PTR [edi+0x16a4]
1002a4de:	mov    WORD PTR [ecx+edx*2],0x0
1002a4e4:	mov    edx,DWORD PTR [edi+0x1698]
1002a4ea:	mov    ecx,DWORD PTR [edi+0x16a0]
1002a4f0:	mov    BYTE PTR [edx+ecx*1],al
1002a4f3:	add    DWORD PTR [edi+0x16a0],ebp
1002a4f9:	movzx  edx,al
1002a4fc:	add    WORD PTR [edi+edx*4+0x94],bp
1002a504:	lea    eax,[edi+edx*4+0x94]
1002a50b:	mov    eax,DWORD PTR [edi+0x169c]
1002a511:	sub    eax,ebp
1002a513:	cmp    DWORD PTR [edi+0x16a0],eax
1002a519:	jne    0x1002a54a
1002a51b:	mov    ecx,DWORD PTR [edi+0x5c]
1002a51e:	test   ecx,ecx
1002a520:	jl     0x1002a529
1002a522:	mov    eax,DWORD PTR [edi+0x38]
1002a525:	add    eax,ecx
1002a527:	jmp    0x1002a52b
1002a529:	xor    eax,eax
1002a52b:	mov    edx,DWORD PTR [edi+0x6c]
1002a52e:	push   0x0
1002a530:	sub    edx,ecx
1002a532:	push   edx
1002a533:	push   eax
1002a534:	push   edi
1002a535:	call   0x1002cb00
1002a53a:	mov    eax,DWORD PTR [edi+0x6c]
1002a53d:	mov    DWORD PTR [edi+0x5c],eax
1002a540:	mov    eax,DWORD PTR [edi]
1002a542:	add    esp,0x10
1002a545:	call   0x100299e0
1002a54a:	mov    ecx,DWORD PTR [edi]
1002a54c:	add    DWORD PTR [edi+0x6c],ebp
1002a54f:	add    DWORD PTR [edi+0x74],0xffffffff
1002a553:	cmp    DWORD PTR [ecx+0x10],0x0
1002a557:	jmp    0x1002a4b0
1002a55c:	add    DWORD PTR [edi+0x6c],ebp
1002a55f:	add    DWORD PTR [edi+0x74],0xffffffff
1002a563:	mov    DWORD PTR [edi+0x68],ebp
1002a566:	jmp    0x1002a236
1002a56b:	cmp    DWORD PTR [edi+0x68],0x0
1002a56f:	je     0x1002a5bb
1002a571:	mov    edx,DWORD PTR [edi+0x6c]
1002a574:	mov    eax,DWORD PTR [edi+0x38]
1002a577:	mov    al,BYTE PTR [edx+eax*1-0x1]
1002a57b:	mov    ecx,DWORD PTR [edi+0x16a0]
1002a581:	mov    edx,DWORD PTR [edi+0x16a4]
1002a587:	mov    WORD PTR [edx+ecx*2],0x0
1002a58d:	mov    edx,DWORD PTR [edi+0x16a0]
1002a593:	mov    ecx,DWORD PTR [edi+0x1698]
1002a599:	mov    BYTE PTR [ecx+edx*1],al
1002a59c:	add    DWORD PTR [edi+0x16a0],ebp
1002a5a2:	movzx  eax,al
1002a5a5:	add    WORD PTR [edi+eax*4+0x94],bp
1002a5ad:	lea    eax,[edi+eax*4+0x94]
1002a5b4:	mov    DWORD PTR [edi+0x68],0x0
1002a5bb:	mov    ecx,DWORD PTR [edi+0x5c]
1002a5be:	test   ecx,ecx
1002a5c0:	jl     0x1002a5c9
1002a5c2:	mov    eax,DWORD PTR [edi+0x38]
1002a5c5:	add    eax,ecx
1002a5c7:	jmp    0x1002a5cb
1002a5c9:	xor    eax,eax
1002a5cb:	xor    edx,edx
1002a5cd:	cmp    esi,0x4
1002a5d0:	sete   dl
1002a5d3:	push   edx
1002a5d4:	mov    edx,DWORD PTR [edi+0x6c]
1002a5d7:	sub    edx,ecx
1002a5d9:	push   edx
1002a5da:	push   eax
1002a5db:	push   edi
1002a5dc:	call   0x1002cb00
1002a5e1:	mov    eax,DWORD PTR [edi+0x6c]
1002a5e4:	mov    DWORD PTR [edi+0x5c],eax
1002a5e7:	mov    eax,DWORD PTR [edi]
1002a5e9:	add    esp,0x10
1002a5ec:	call   0x100299e0
1002a5f1:	mov    ecx,DWORD PTR [edi]
1002a5f3:	xor    eax,eax
1002a5f5:	cmp    DWORD PTR [ecx+0x10],eax
1002a5f8:	jne    0x1002a60c
1002a5fa:	cmp    esi,0x4
1002a5fd:	setne  al
1002a600:	pop    edi
1002a601:	pop    esi
1002a602:	pop    ebp
1002a603:	pop    ebx
1002a604:	sub    eax,0x1
1002a607:	and    eax,0x2
1002a60a:	pop    ecx
1002a60b:	ret    
1002a60c:	cmp    esi,0x4
1002a60f:	sete   al
1002a612:	pop    edi
1002a613:	pop    esi
1002a614:	pop    ebp
1002a615:	pop    ebx
1002a616:	lea    eax,[eax+eax*1+0x1]
1002a61a:	pop    ecx
1002a61b:	ret    
1002a61c:	int3   
1002a61d:	int3   
1002a61e:	int3   
1002a61f:	int3   
1002a620:	mov    eax,DWORD PTR [esp+0x8]
1002a624:	imul   eax,DWORD PTR [esp+0xc]
1002a629:	push   eax
1002a62a:	call   0x100198b2
1002a62f:	add    esp,0x4
1002a632:	ret    
1002a633:	int3   
1002a634:	int3   
1002a635:	int3   
1002a636:	int3   
1002a637:	int3   
1002a638:	int3   
1002a639:	int3   
1002a63a:	int3   
1002a63b:	int3   
1002a63c:	int3   
1002a63d:	int3   
1002a63e:	int3   
1002a63f:	int3   
1002a640:	mov    eax,DWORD PTR [esp+0x8]
1002a644:	push   eax
1002a645:	call   0x100197d5
1002a64a:	pop    ecx
1002a64b:	ret    
1002a64c:	int3   
1002a64d:	int3   
1002a64e:	int3   
1002a64f:	int3   
1002a650:	sub    esp,0x3c
1002a653:	push   ebx
1002a654:	push   ebp
1002a655:	push   esi
1002a656:	push   edi
1002a657:	mov    ecx,DWORD PTR [esp+0x50]
1002a65b:	mov    eax,DWORD PTR [ecx+0x1c]
1002a65e:	mov    edx,DWORD PTR [ecx+0x4]
1002a661:	mov    ebx,DWORD PTR [eax+0x38]
1002a664:	mov    ebp,DWORD PTR [ecx]
1002a666:	sub    ebp,0x1
1002a669:	lea    edx,[edx+ebp*1-0x5]
1002a66d:	mov    DWORD PTR [esp+0x14],edx
1002a671:	mov    esi,DWORD PTR [ecx+0xc]
1002a674:	mov    ecx,DWORD PTR [ecx+0x10]
1002a677:	mov    edx,ecx
1002a679:	sub    edx,DWORD PTR [esp+0x54]
1002a67d:	sub    esi,0x1
1002a680:	add    edx,esi
1002a682:	lea    ecx,[ecx+esi*1-0x101]
1002a689:	mov    DWORD PTR [esp+0x38],edx
1002a68d:	mov    edx,DWORD PTR [eax+0x28]
1002a690:	mov    DWORD PTR [esp+0x2c],ecx
1002a694:	mov    ecx,DWORD PTR [eax+0x2c]
1002a697:	mov    DWORD PTR [esp+0x28],edx
1002a69b:	mov    edx,DWORD PTR [eax+0x30]
1002a69e:	mov    DWORD PTR [esp+0x3c],ecx
1002a6a2:	mov    ecx,DWORD PTR [eax+0x34]
1002a6a5:	mov    DWORD PTR [esp+0x44],edx
1002a6a9:	mov    edx,DWORD PTR [eax+0x4c]
1002a6ac:	mov    DWORD PTR [esp+0x40],ecx
1002a6b0:	mov    ecx,DWORD PTR [eax+0x50]
1002a6b3:	mov    DWORD PTR [esp+0x20],edx
1002a6b7:	mov    DWORD PTR [esp+0x24],ecx
1002a6bb:	mov    ecx,DWORD PTR [eax+0x54]
1002a6be:	mov    edx,0x1
1002a6c3:	shl    edx,cl
1002a6c5:	mov    ecx,DWORD PTR [eax+0x58]
1002a6c8:	mov    DWORD PTR [esp+0x18],eax
1002a6cc:	mov    edi,DWORD PTR [eax+0x3c]
1002a6cf:	mov    DWORD PTR [esp+0x54],0x1
1002a6d7:	mov    eax,DWORD PTR [esp+0x54]
1002a6db:	shl    eax,cl
1002a6dd:	sub    edx,0x1
1002a6e0:	mov    DWORD PTR [esp+0x10],ebp
1002a6e4:	mov    DWORD PTR [esp+0x48],edx
1002a6e8:	sub    eax,0x1
1002a6eb:	mov    DWORD PTR [esp+0x30],eax
1002a6ef:	nop
1002a6f0:	cmp    edi,0xf
1002a6f3:	jae    0x1002a719
1002a6f5:	movzx  eax,BYTE PTR [ebp+0x1]
1002a6f9:	add    ebp,0x1
1002a6fc:	mov    ecx,edi
1002a6fe:	shl    eax,cl
1002a700:	add    ebp,0x1
1002a703:	add    edi,0x8
1002a706:	mov    ecx,edi
1002a708:	add    ebx,eax
1002a70a:	movzx  eax,BYTE PTR [ebp+0x0]
1002a70e:	shl    eax,cl
1002a710:	mov    DWORD PTR [esp+0x10],ebp
1002a714:	add    ebx,eax
1002a716:	add    edi,0x8
1002a719:	mov    ecx,DWORD PTR [esp+0x20]
1002a71d:	and    edx,ebx
1002a71f:	mov    eax,DWORD PTR [ecx+edx*4]
1002a722:	mov    edx,eax
1002a724:	shr    edx,0x8
1002a727:	movzx  ecx,dl
1002a72a:	movzx  edx,al
1002a72d:	shr    ebx,cl
1002a72f:	sub    edi,ecx
1002a731:	test   edx,edx
1002a733:	je     0x1002a778
1002a735:	test   dl,0x10
1002a738:	jne    0x1002a785
1002a73a:	test   dl,0x40
1002a73d:	jne    0x1002aa8a
1002a743:	mov    ecx,0x1
1002a748:	mov    DWORD PTR [esp+0x54],ecx
1002a74c:	mov    ecx,edx
1002a74e:	mov    edx,DWORD PTR [esp+0x54]
1002a752:	shl    edx,cl
1002a754:	shr    eax,0x10
1002a757:	sub    edx,0x1
1002a75a:	and    edx,ebx
1002a75c:	add    edx,eax
1002a75e:	mov    eax,DWORD PTR [esp+0x20]
1002a762:	mov    eax,DWORD PTR [eax+edx*4]
1002a765:	mov    ecx,eax
1002a767:	shr    ecx,0x8
1002a76a:	movzx  ecx,cl
1002a76d:	movzx  edx,al
1002a770:	shr    ebx,cl
1002a772:	sub    edi,ecx
1002a774:	test   edx,edx
1002a776:	jne    0x1002a735
1002a778:	add    esi,0x1
1002a77b:	shr    eax,0x10
1002a77e:	mov    BYTE PTR [esi],al
1002a780:	jmp    0x1002a9e5
1002a785:	shr    eax,0x10
1002a788:	and    edx,0xf
1002a78b:	mov    DWORD PTR [esp+0x54],eax
1002a78f:	je     0x1002a7bf
1002a791:	cmp    edi,edx
1002a793:	jae    0x1002a7a9
1002a795:	movzx  eax,BYTE PTR [ebp+0x1]
1002a799:	add    ebp,0x1
1002a79c:	mov    ecx,edi
1002a79e:	shl    eax,cl
1002a7a0:	mov    DWORD PTR [esp+0x10],ebp
1002a7a4:	add    ebx,eax
1002a7a6:	add    edi,0x8
1002a7a9:	mov    ecx,edx
1002a7ab:	mov    eax,0x1
1002a7b0:	shl    eax,cl
1002a7b2:	sub    eax,0x1
1002a7b5:	and    eax,ebx
1002a7b7:	add    DWORD PTR [esp+0x54],eax
1002a7bb:	shr    ebx,cl
1002a7bd:	sub    edi,edx
1002a7bf:	cmp    edi,0xf
1002a7c2:	jae    0x1002a7e8
1002a7c4:	movzx  edx,BYTE PTR [ebp+0x1]
1002a7c8:	add    ebp,0x1
1002a7cb:	movzx  eax,BYTE PTR [ebp+0x1]
1002a7cf:	mov    ecx,edi
1002a7d1:	add    ebp,0x1
1002a7d4:	shl    edx,cl
1002a7d6:	add    edi,0x8
1002a7d9:	mov    ecx,edi
1002a7db:	shl    eax,cl
1002a7dd:	add    ebx,edx
1002a7df:	mov    DWORD PTR [esp+0x10],ebp
1002a7e3:	add    ebx,eax
1002a7e5:	add    edi,0x8
1002a7e8:	mov    ecx,DWORD PTR [esp+0x30]
1002a7ec:	mov    edx,DWORD PTR [esp+0x24]
1002a7f0:	and    ecx,ebx
1002a7f2:	mov    edx,DWORD PTR [edx+ecx*4]
1002a7f5:	mov    eax,edx
1002a7f7:	shr    eax,0x8
1002a7fa:	movzx  ecx,al
1002a7fd:	movzx  eax,dl
1002a800:	shr    ebx,cl
1002a802:	sub    edi,ecx
1002a804:	test   al,0x10
1002a806:	mov    DWORD PTR [esp+0x1c],edx
1002a80a:	jne    0x1002a84b
1002a80c:	lea    esp,[esp+0x0]
1002a810:	test   al,0x40
1002a812:	jne    0x1002aa7d
1002a818:	mov    ecx,eax
1002a81a:	movzx  eax,WORD PTR [esp+0x1e]
1002a81f:	mov    edx,0x1
1002a824:	shl    edx,cl
1002a826:	mov    ecx,DWORD PTR [esp+0x24]
1002a82a:	sub    edx,0x1
1002a82d:	and    edx,ebx
1002a82f:	add    edx,eax
1002a831:	mov    edx,DWORD PTR [ecx+edx*4]
1002a834:	mov    eax,edx
1002a836:	shr    eax,0x8
1002a839:	movzx  ecx,al
1002a83c:	movzx  eax,dl
1002a83f:	shr    ebx,cl
1002a841:	sub    edi,ecx
1002a843:	test   al,0x10
1002a845:	mov    DWORD PTR [esp+0x1c],edx
1002a849:	je     0x1002a810
1002a84b:	shr    edx,0x10
1002a84e:	and    eax,0xf
1002a851:	cmp    edi,eax
1002a853:	mov    DWORD PTR [esp+0x1c],edx
1002a857:	jae    0x1002a885
1002a859:	movzx  edx,BYTE PTR [ebp+0x1]
1002a85d:	add    ebp,0x1
1002a860:	mov    ecx,edi
1002a862:	shl    edx,cl
1002a864:	add    edi,0x8
1002a867:	mov    DWORD PTR [esp+0x10],ebp
1002a86b:	add    ebx,edx
1002a86d:	cmp    edi,eax
1002a86f:	jae    0x1002a885
1002a871:	movzx  edx,BYTE PTR [ebp+0x1]
1002a875:	add    ebp,0x1
1002a878:	mov    ecx,edi
1002a87a:	shl    edx,cl
1002a87c:	mov    DWORD PTR [esp+0x10],ebp
1002a880:	add    ebx,edx
1002a882:	add    edi,0x8
1002a885:	mov    ecx,0x1
1002a88a:	mov    edx,ecx
1002a88c:	mov    ecx,eax
1002a88e:	shl    edx,cl
1002a890:	sub    edi,eax
1002a892:	sub    edx,0x1
1002a895:	and    edx,ebx
1002a897:	mov    ecx,edx
1002a899:	mov    edx,DWORD PTR [esp+0x1c]
1002a89d:	add    edx,ecx
1002a89f:	mov    ecx,eax
1002a8a1:	mov    eax,esi
1002a8a3:	sub    eax,DWORD PTR [esp+0x38]
1002a8a7:	shr    ebx,cl
1002a8a9:	cmp    edx,eax
1002a8ab:	mov    DWORD PTR [esp+0x1c],edx
1002a8af:	jbe    0x1002aa04
1002a8b5:	mov    ebp,edx
1002a8b7:	sub    ebp,eax
1002a8b9:	cmp    ebp,DWORD PTR [esp+0x3c]
1002a8bd:	ja     0x1002aa62
1002a8c3:	mov    ecx,DWORD PTR [esp+0x40]
1002a8c7:	mov    eax,DWORD PTR [esp+0x44]
1002a8cb:	add    ecx,0xffffffff
1002a8ce:	test   eax,eax
1002a8d0:	mov    DWORD PTR [esp+0x34],ecx
1002a8d4:	jne    0x1002a902
1002a8d6:	mov    eax,DWORD PTR [esp+0x28]
1002a8da:	sub    eax,ebp
1002a8dc:	add    ecx,eax
1002a8de:	cmp    ebp,DWORD PTR [esp+0x54]
1002a8e2:	jae    0x1002a97a
1002a8e8:	sub    DWORD PTR [esp+0x54],ebp
1002a8ec:	lea    esp,[esp+0x0]
1002a8f0:	mov    al,BYTE PTR [ecx+0x1]
1002a8f3:	add    ecx,0x1
1002a8f6:	add    esi,0x1
1002a8f9:	sub    ebp,0x1
1002a8fc:	mov    BYTE PTR [esi],al
1002a8fe:	jne    0x1002a8f0
1002a900:	jmp    0x1002a976
1002a902:	cmp    eax,ebp
1002a904:	jae    0x1002a958
1002a906:	mov    edx,eax
1002a908:	sub    edx,ebp
1002a90a:	add    edx,DWORD PTR [esp+0x28]
1002a90e:	sub    ebp,eax
1002a910:	add    ecx,edx
1002a912:	cmp    ebp,DWORD PTR [esp+0x54]
1002a916:	jae    0x1002a97a
1002a918:	sub    DWORD PTR [esp+0x54],ebp
1002a91c:	lea    esp,[esp+0x0]
1002a920:	mov    dl,BYTE PTR [ecx+0x1]
1002a923:	add    ecx,0x1
1002a926:	add    esi,0x1
1002a929:	sub    ebp,0x1
1002a92c:	mov    BYTE PTR [esi],dl
1002a92e:	jne    0x1002a920
1002a930:	cmp    eax,DWORD PTR [esp+0x54]
1002a934:	mov    ecx,DWORD PTR [esp+0x34]
1002a938:	jae    0x1002a97a
1002a93a:	sub    DWORD PTR [esp+0x54],eax
1002a93e:	mov    ebp,eax
1002a940:	mov    al,BYTE PTR [ecx+0x1]
1002a943:	add    ecx,0x1
1002a946:	add    esi,0x1
1002a949:	sub    ebp,0x1
1002a94c:	mov    BYTE PTR [esi],al
1002a94e:	jne    0x1002a940
1002a950:	mov    ecx,esi
1002a952:	sub    ecx,DWORD PTR [esp+0x1c]
1002a956:	jmp    0x1002a97a
1002a958:	sub    eax,ebp
1002a95a:	add    ecx,eax
1002a95c:	cmp    ebp,DWORD PTR [esp+0x54]
1002a960:	jae    0x1002a97a
1002a962:	sub    DWORD PTR [esp+0x54],ebp
1002a966:	mov    al,BYTE PTR [ecx+0x1]
1002a969:	add    ecx,0x1
1002a96c:	add    esi,0x1
1002a96f:	sub    ebp,0x1
1002a972:	mov    BYTE PTR [esi],al
1002a974:	jne    0x1002a966
1002a976:	mov    ecx,esi
1002a978:	sub    ecx,edx
1002a97a:	mov    eax,DWORD PTR [esp+0x54]
1002a97e:	cmp    eax,0x2
1002a981:	jbe    0x1002a9c1
1002a983:	lea    edx,[eax-0x3]
1002a986:	mov    eax,0xaaaaaaab
1002a98b:	mul    edx
1002a98d:	mov    ebp,edx
1002a98f:	shr    ebp,1
1002a991:	add    ebp,0x1
1002a994:	movzx  eax,BYTE PTR [ecx+0x1]
1002a998:	sub    DWORD PTR [esp+0x54],0x3
1002a99d:	add    ecx,0x1
1002a9a0:	add    esi,0x1
1002a9a3:	mov    BYTE PTR [esi],al
1002a9a5:	mov    dl,BYTE PTR [ecx+0x1]
1002a9a8:	add    ecx,0x1
1002a9ab:	add    esi,0x1
1002a9ae:	mov    BYTE PTR [esi],dl
1002a9b0:	movzx  eax,BYTE PTR [ecx+0x1]
1002a9b4:	add    ecx,0x1
1002a9b7:	add    esi,0x1
1002a9ba:	sub    ebp,0x1
1002a9bd:	mov    BYTE PTR [esi],al
1002a9bf:	jne    0x1002a994
1002a9c1:	mov    ebp,DWORD PTR [esp+0x54]
1002a9c5:	test   ebp,ebp
1002a9c7:	je     0x1002a9e1
1002a9c9:	mov    dl,BYTE PTR [ecx+0x1]
1002a9cc:	add    ecx,0x1
1002a9cf:	add    esi,0x1
1002a9d2:	cmp    ebp,0x1
1002a9d5:	mov    BYTE PTR [esi],dl
1002a9d7:	jbe    0x1002a9e1
1002a9d9:	mov    al,BYTE PTR [ecx+0x1]
1002a9dc:	add    esi,0x1
1002a9df:	mov    BYTE PTR [esi],al
1002a9e1:	mov    ebp,DWORD PTR [esp+0x10]
1002a9e5:	mov    edx,DWORD PTR [esp+0x14]
1002a9e9:	cmp    ebp,edx
1002a9eb:	jae    0x1002aab4
1002a9f1:	cmp    esi,DWORD PTR [esp+0x2c]
1002a9f5:	jae    0x1002aab4
1002a9fb:	mov    edx,DWORD PTR [esp+0x48]
1002a9ff:	jmp    0x1002a6f0
1002aa04:	mov    eax,esi
1002aa06:	sub    eax,edx
1002aa08:	jmp    0x1002aa10
1002aa0a:	lea    ebx,[ebx+0x0]
1002aa10:	movzx  ecx,BYTE PTR [eax+0x1]
1002aa14:	add    eax,0x1
1002aa17:	mov    BYTE PTR [esi+0x1],cl
1002aa1a:	mov    dl,BYTE PTR [eax+0x1]
1002aa1d:	add    esi,0x1
1002aa20:	add    eax,0x1
1002aa23:	add    esi,0x1
1002aa26:	mov    BYTE PTR [esi],dl
1002aa28:	movzx  ecx,BYTE PTR [eax+0x1]
1002aa2c:	add    eax,0x1
1002aa2f:	add    esi,0x1
1002aa32:	mov    BYTE PTR [esi],cl
1002aa34:	mov    ecx,DWORD PTR [esp+0x54]
1002aa38:	sub    ecx,0x3
1002aa3b:	cmp    ecx,0x2
1002aa3e:	mov    DWORD PTR [esp+0x54],ecx
1002aa42:	ja     0x1002aa10
1002aa44:	test   ecx,ecx
1002aa46:	je     0x1002a9e5
1002aa48:	mov    dl,BYTE PTR [eax+0x1]
1002aa4b:	add    eax,0x1
1002aa4e:	add    esi,0x1
1002aa51:	cmp    ecx,0x1
1002aa54:	mov    BYTE PTR [esi],dl
1002aa56:	jbe    0x1002a9e5
1002aa58:	mov    al,BYTE PTR [eax+0x1]
1002aa5b:	add    esi,0x1
1002aa5e:	mov    BYTE PTR [esi],al
1002aa60:	jmp    0x1002a9e5
1002aa62:	mov    ecx,DWORD PTR [esp+0x50]
1002aa66:	mov    edx,DWORD PTR [esp+0x18]
1002aa6a:	mov    ebp,DWORD PTR [esp+0x10]
1002aa6e:	mov    DWORD PTR [ecx+0x18],0x100b4990
1002aa75:	mov    DWORD PTR [edx],0x1b
1002aa7b:	jmp    0x1002aab0
1002aa7d:	mov    eax,DWORD PTR [esp+0x50]
1002aa81:	mov    DWORD PTR [eax+0x18],0x100b49b0
1002aa88:	jmp    0x1002aaa6
1002aa8a:	test   dl,0x20
1002aa8d:	je     0x1002aa9b
1002aa8f:	mov    edx,DWORD PTR [esp+0x18]
1002aa93:	mov    DWORD PTR [edx],0xb
1002aa99:	jmp    0x1002aab0
1002aa9b:	mov    eax,DWORD PTR [esp+0x50]
1002aa9f:	mov    DWORD PTR [eax+0x18],0x100b49c8
1002aaa6:	mov    ecx,DWORD PTR [esp+0x18]
1002aaaa:	mov    DWORD PTR [ecx],0x1b
1002aab0:	mov    edx,DWORD PTR [esp+0x14]
1002aab4:	mov    eax,edi
1002aab6:	shr    eax,0x3
1002aab9:	sub    ebp,eax
1002aabb:	add    eax,eax
1002aabd:	add    eax,eax
1002aabf:	add    eax,eax
1002aac1:	sub    edi,eax
1002aac3:	mov    ecx,edi
1002aac5:	mov    eax,0x1
1002aaca:	shl    eax,cl
1002aacc:	mov    ecx,DWORD PTR [esp+0x50]
1002aad0:	sub    edx,ebp
1002aad2:	add    edx,0x5
1002aad5:	sub    eax,0x1
1002aad8:	and    ebx,eax
1002aada:	lea    eax,[ebp+0x1]
1002aadd:	mov    DWORD PTR [ecx],eax
1002aadf:	lea    eax,[esi+0x1]
1002aae2:	mov    DWORD PTR [ecx+0xc],eax
1002aae5:	mov    eax,DWORD PTR [esp+0x2c]
1002aae9:	sub    eax,esi
1002aaeb:	add    eax,0x101
1002aaf0:	mov    DWORD PTR [ecx+0x10],eax
1002aaf3:	mov    eax,DWORD PTR [esp+0x18]
1002aaf7:	mov    DWORD PTR [ecx+0x4],edx
1002aafa:	mov    DWORD PTR [eax+0x3c],edi
1002aafd:	pop    edi
1002aafe:	pop    esi
1002aaff:	pop    ebp
1002ab00:	mov    DWORD PTR [eax+0x38],ebx
1002ab03:	pop    ebx
1002ab04:	add    esp,0x3c
1002ab07:	ret    
1002ab08:	int3   
1002ab09:	int3   
1002ab0a:	int3   
1002ab0b:	int3   
1002ab0c:	int3   
1002ab0d:	int3   
1002ab0e:	int3   
1002ab0f:	int3   
1002ab10:	sub    esp,0x8c
1002ab16:	mov    eax,ds:0x100c7654
1002ab1b:	xor    eax,esp
1002ab1d:	mov    DWORD PTR [esp+0x88],eax
1002ab24:	mov    eax,DWORD PTR [esp+0xa4]
1002ab2b:	mov    edx,DWORD PTR [esp+0xa0]
1002ab32:	push   ebx
1002ab33:	mov    ebx,DWORD PTR [esp+0xa0]
1002ab3a:	push   ebp
1002ab3b:	mov    ebp,DWORD PTR [esp+0x9c]
1002ab42:	push   esi
1002ab43:	mov    esi,DWORD PTR [esp+0xa4]
1002ab4a:	mov    DWORD PTR [esp+0x18],eax
1002ab4e:	xor    eax,eax
1002ab50:	test   esi,esi
1002ab52:	mov    DWORD PTR [esp+0x50],ebp
1002ab56:	mov    DWORD PTR [esp+0x38],ebx
1002ab5a:	mov    DWORD PTR [esp+0x48],edx
1002ab5e:	mov    DWORD PTR [esp+0x54],eax
1002ab62:	mov    DWORD PTR [esp+0x58],eax
1002ab66:	mov    DWORD PTR [esp+0x5c],eax
1002ab6a:	mov    DWORD PTR [esp+0x60],eax
1002ab6e:	mov    DWORD PTR [esp+0x64],eax
1002ab72:	mov    DWORD PTR [esp+0x68],eax
1002ab76:	mov    DWORD PTR [esp+0x6c],eax
1002ab7a:	mov    DWORD PTR [esp+0x70],eax
1002ab7e:	jbe    0x1002ab96
1002ab80:	movzx  ecx,WORD PTR [ebp+eax*2+0x0]
1002ab85:	add    WORD PTR [esp+ecx*2+0x54],0x1
1002ab8b:	lea    ecx,[esp+ecx*2+0x54]
1002ab8f:	add    eax,0x1
1002ab92:	cmp    eax,esi
1002ab94:	jb     0x1002ab80
1002ab96:	mov    eax,DWORD PTR [edx]
1002ab98:	mov    DWORD PTR [esp+0x10],eax
1002ab9c:	mov    ecx,0xf
1002aba1:	cmp    WORD PTR [esp+ecx*2+0x54],0x0
1002aba7:	jne    0x1002abb1
1002aba9:	sub    ecx,0x1
1002abac:	cmp    ecx,0x1
1002abaf:	jae    0x1002aba1
1002abb1:	cmp    eax,ecx
1002abb3:	mov    DWORD PTR [esp+0x1c],ecx
1002abb7:	jbe    0x1002abbf
1002abb9:	mov    DWORD PTR [esp+0x10],ecx
1002abbd:	mov    eax,ecx
1002abbf:	test   ecx,ecx
1002abc1:	jne    0x1002ac04
1002abc3:	mov    WORD PTR [esp+0xe],cx
1002abc8:	mov    ecx,DWORD PTR [ebx]
1002abca:	mov    BYTE PTR [esp+0xc],0x40
1002abcf:	mov    BYTE PTR [esp+0xd],0x1
1002abd4:	mov    eax,DWORD PTR [esp+0xc]
1002abd8:	mov    DWORD PTR [ecx],eax
1002abda:	add    DWORD PTR [ebx],0x4
1002abdd:	mov    ecx,DWORD PTR [ebx]
1002abdf:	pop    esi
1002abe0:	mov    DWORD PTR [ecx],eax
1002abe2:	add    DWORD PTR [ebx],0x4
1002abe5:	pop    ebp
1002abe6:	mov    DWORD PTR [edx],0x1
1002abec:	xor    eax,eax
1002abee:	pop    ebx
1002abef:	mov    ecx,DWORD PTR [esp+0x88]
1002abf6:	xor    ecx,esp
1002abf8:	call   0x10018773
1002abfd:	add    esp,0x8c
1002ac03:	ret    
1002ac04:	mov    esi,0x1
1002ac09:	lea    esp,[esp+0x0]
1002ac10:	cmp    WORD PTR [esp+esi*2+0x54],0x0
1002ac16:	jne    0x1002ac54
1002ac18:	cmp    WORD PTR [esp+esi*2+0x56],0x0
1002ac1e:	jne    0x1002ac42
1002ac20:	cmp    WORD PTR [esp+esi*2+0x58],0x0
1002ac26:	jne    0x1002ac47
1002ac28:	cmp    WORD PTR [esp+esi*2+0x5a],0x0
1002ac2e:	jne    0x1002ac4c
1002ac30:	cmp    WORD PTR [esp+esi*2+0x5c],0x0
1002ac36:	jne    0x1002ac51
1002ac38:	add    esi,0x5
1002ac3b:	cmp    esi,0xf
1002ac3e:	jbe    0x1002ac10
1002ac40:	jmp    0x1002ac54
1002ac42:	add    esi,0x1
1002ac45:	jmp    0x1002ac54
1002ac47:	add    esi,0x2
1002ac4a:	jmp    0x1002ac54
1002ac4c:	add    esi,0x3
1002ac4f:	jmp    0x1002ac54
1002ac51:	add    esi,0x4
1002ac54:	cmp    eax,esi
1002ac56:	jae    0x1002ac5c
1002ac58:	mov    DWORD PTR [esp+0x10],esi
1002ac5c:	mov    edx,0x1
1002ac61:	mov    eax,edx
1002ac63:	push   edi
1002ac64:	movzx  edi,WORD PTR [esp+eax*2+0x58]
1002ac69:	add    edx,edx
1002ac6b:	sub    edx,edi
1002ac6d:	js     0x1002ac8b
1002ac6f:	add    eax,0x1
1002ac72:	cmp    eax,0xf
1002ac75:	jbe    0x1002ac64
1002ac77:	test   edx,edx
1002ac79:	mov    edi,DWORD PTR [esp+0xa0]
1002ac80:	jle    0x1002ac93
1002ac82:	test   edi,edi
1002ac84:	je     0x1002ac8b
1002ac86:	cmp    ecx,0x1
1002ac89:	je     0x1002ac93
1002ac8b:	or     eax,0xffffffff
1002ac8e:	jmp    0x1002afe5
1002ac93:	mov    WORD PTR [esp+0x7a],0x0
1002ac9a:	mov    eax,0x2
1002ac9f:	nop
1002aca0:	mov    cx,WORD PTR [esp+eax*1+0x78]
1002aca5:	add    cx,WORD PTR [esp+eax*1+0x58]
1002acaa:	add    eax,0x2
1002acad:	cmp    eax,0x1e
1002acb0:	mov    WORD PTR [esp+eax*1+0x78],cx
1002acb5:	jb     0x1002aca0
1002acb7:	mov    ecx,DWORD PTR [esp+0x1c]
1002acbb:	xor    eax,eax
1002acbd:	cmp    DWORD PTR [esp+0xa8],eax
1002acc4:	jbe    0x1002acf7
1002acc6:	cmp    WORD PTR [ebp+eax*2+0x0],0x0
1002accc:	je     0x1002aceb
1002acce:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
1002acd3:	movzx  edx,WORD PTR [esp+edx*2+0x78]
1002acd8:	mov    WORD PTR [ecx+edx*2],ax
1002acdc:	movzx  edx,WORD PTR [ebp+eax*2+0x0]
1002ace1:	add    WORD PTR [esp+edx*2+0x78],0x1
1002ace7:	lea    edx,[esp+edx*2+0x78]
1002aceb:	add    eax,0x1
1002acee:	cmp    eax,DWORD PTR [esp+0xa8]
1002acf5:	jb     0x1002acc6
1002acf7:	mov    eax,edi
1002acf9:	sub    eax,0x0
1002acfc:	mov    edx,0xffffffff
1002ad01:	je     0x1002ad44
1002ad03:	sub    eax,0x1
1002ad06:	je     0x1002ad1e
1002ad08:	mov    DWORD PTR [esp+0x2c],0x100b4d30
1002ad10:	mov    DWORD PTR [esp+0x38],0x100b4d70
1002ad18:	mov    DWORD PTR [esp+0x30],edx
1002ad1c:	jmp    0x1002ad54
1002ad1e:	mov    eax,0x100b4cb0
1002ad23:	sub    eax,0x202
1002ad28:	mov    DWORD PTR [esp+0x2c],eax
1002ad2c:	mov    eax,0x100b4cf0
1002ad31:	sub    eax,0x202
1002ad36:	mov    DWORD PTR [esp+0x38],eax
1002ad3a:	mov    DWORD PTR [esp+0x30],0x100
1002ad42:	jmp    0x1002ad54
1002ad44:	mov    DWORD PTR [esp+0x38],ecx
1002ad48:	mov    DWORD PTR [esp+0x2c],ecx
1002ad4c:	mov    DWORD PTR [esp+0x30],0x13
1002ad54:	mov    eax,DWORD PTR [ebx]
1002ad56:	mov    ecx,DWORD PTR [esp+0x14]
1002ad5a:	mov    DWORD PTR [esp+0x24],eax
1002ad5e:	mov    eax,0x1
1002ad63:	shl    eax,cl
1002ad65:	xor    ebp,ebp
1002ad67:	xor    ebx,ebx
1002ad69:	cmp    edi,0x1
1002ad6c:	lea    ecx,[eax-0x1]
1002ad6f:	mov    DWORD PTR [esp+0x18],esi
1002ad73:	mov    DWORD PTR [esp+0x34],edx
1002ad77:	mov    DWORD PTR [esp+0x44],eax
1002ad7b:	mov    DWORD PTR [esp+0x28],eax
1002ad7f:	mov    DWORD PTR [esp+0x40],ecx
1002ad83:	jne    0x1002ad90
1002ad85:	cmp    eax,0x5b0
1002ad8a:	jae    0x1002afe0
1002ad90:	mov    edx,DWORD PTR [esp+0x1c]
1002ad94:	mov    DWORD PTR [esp+0x1c],edx
1002ad98:	jmp    0x1002ada0
1002ad9a:	lea    ebx,[ebx+0x0]
1002ada0:	mov    al,BYTE PTR [esp+0x18]
1002ada4:	mov    esi,DWORD PTR [esp+0x1c]
1002ada8:	mov    edx,DWORD PTR [esp+0x30]
1002adac:	sub    al,bl
1002adae:	mov    BYTE PTR [esp+0x11],al
1002adb2:	movzx  eax,WORD PTR [esi]
1002adb5:	movzx  ecx,ax
1002adb8:	cmp    ecx,edx
1002adba:	jge    0x1002adc8
1002adbc:	mov    BYTE PTR [esp+0x10],0x0
1002adc1:	mov    WORD PTR [esp+0x12],ax
1002adc6:	jmp    0x1002adf5
1002adc8:	jle    0x1002ade9
1002adca:	movzx  eax,WORD PTR [esi]
1002adcd:	mov    ecx,DWORD PTR [esp+0x38]
1002add1:	add    eax,eax
1002add3:	mov    dl,BYTE PTR [eax+ecx*1]
1002add6:	mov    ecx,DWORD PTR [esp+0x2c]
1002adda:	mov    BYTE PTR [esp+0x10],dl
1002adde:	mov    dx,WORD PTR [eax+ecx*1]
1002ade2:	mov    WORD PTR [esp+0x12],dx
1002ade7:	jmp    0x1002adf5
1002ade9:	mov    BYTE PTR [esp+0x10],0x60
1002adee:	mov    WORD PTR [esp+0x12],0x0
1002adf5:	mov    ecx,DWORD PTR [esp+0x18]
1002adf9:	mov    eax,DWORD PTR [esp+0x44]
1002adfd:	sub    ecx,ebx
1002adff:	mov    edx,0x1
1002ae04:	shl    edx,cl
1002ae06:	mov    ecx,ebx
1002ae08:	mov    edi,ebp
1002ae0a:	shr    edi,cl
1002ae0c:	mov    ecx,DWORD PTR [esp+0x24]
1002ae10:	mov    DWORD PTR [esp+0x50],eax
1002ae14:	lea    esi,[edx*4+0x0]
1002ae1b:	add    edi,eax
1002ae1d:	lea    ecx,[ecx+edi*4]
1002ae20:	mov    edi,DWORD PTR [esp+0x10]
1002ae24:	sub    eax,edx
1002ae26:	sub    ecx,esi
1002ae28:	test   eax,eax
1002ae2a:	mov    DWORD PTR [ecx],edi
1002ae2c:	jne    0x1002ae24
1002ae2e:	mov    edx,DWORD PTR [esp+0x18]
1002ae32:	lea    ecx,[edx-0x1]
1002ae35:	mov    eax,0x1
1002ae3a:	shl    eax,cl
1002ae3c:	test   ebp,eax
1002ae3e:	je     0x1002ae46
1002ae40:	shr    eax,1
1002ae42:	test   ebp,eax
1002ae44:	jne    0x1002ae40
1002ae46:	test   eax,eax
1002ae48:	je     0x1002ae55
1002ae4a:	lea    ecx,[eax-0x1]
1002ae4d:	and    ecx,ebp
1002ae4f:	add    ecx,eax
1002ae51:	mov    ebp,ecx
1002ae53:	jmp    0x1002ae57
1002ae55:	xor    ebp,ebp
1002ae57:	add    WORD PTR [esp+edx*2+0x58],0xffff
1002ae5e:	movzx  eax,WORD PTR [esp+edx*2+0x58]
1002ae63:	add    DWORD PTR [esp+0x1c],0x2
1002ae68:	test   ax,ax
1002ae6b:	jne    0x1002ae8a
1002ae6d:	cmp    edx,DWORD PTR [esp+0x20]
1002ae71:	je     0x1002af53
1002ae77:	mov    edx,DWORD PTR [esp+0x1c]
1002ae7b:	movzx  eax,WORD PTR [edx]
1002ae7e:	mov    ecx,DWORD PTR [esp+0x54]
1002ae82:	movzx  edx,WORD PTR [ecx+eax*2]
1002ae86:	mov    DWORD PTR [esp+0x18],edx
1002ae8a:	cmp    edx,DWORD PTR [esp+0x14]
1002ae8e:	jbe    0x1002ada0
1002ae94:	mov    esi,DWORD PTR [esp+0x40]
1002ae98:	and    esi,ebp
1002ae9a:	cmp    esi,DWORD PTR [esp+0x34]
1002ae9e:	mov    DWORD PTR [esp+0x48],esi
1002aea2:	je     0x1002ada0
1002aea8:	test   ebx,ebx
1002aeaa:	jne    0x1002aeb0
1002aeac:	mov    ebx,DWORD PTR [esp+0x14]
1002aeb0:	mov    eax,DWORD PTR [esp+0x24]
1002aeb4:	mov    ecx,DWORD PTR [esp+0x50]
1002aeb8:	lea    edx,[eax+ecx*4]
1002aebb:	mov    ecx,DWORD PTR [esp+0x18]
1002aebf:	sub    ecx,ebx
1002aec1:	mov    DWORD PTR [esp+0x24],edx
1002aec5:	mov    eax,0x1
1002aeca:	lea    edx,[ebx+ecx*1]
1002aecd:	shl    eax,cl
1002aecf:	cmp    edx,DWORD PTR [esp+0x20]
1002aed3:	jae    0x1002aefe
1002aed5:	lea    esi,[esp+edx*2+0x58]
1002aed9:	lea    esp,[esp+0x0]
1002aee0:	movzx  edi,WORD PTR [esi]
1002aee3:	sub    eax,edi
1002aee5:	test   eax,eax
1002aee7:	jle    0x1002aefa
1002aee9:	add    edx,0x1
1002aeec:	add    ecx,0x1
1002aeef:	add    esi,0x2
1002aef2:	add    eax,eax
1002aef4:	cmp    edx,DWORD PTR [esp+0x20]
1002aef8:	jb     0x1002aee0
1002aefa:	mov    esi,DWORD PTR [esp+0x48]
1002aefe:	mov    eax,0x1
1002af03:	shl    eax,cl
1002af05:	add    DWORD PTR [esp+0x28],eax
1002af09:	cmp    DWORD PTR [esp+0xa0],0x1
1002af11:	mov    DWORD PTR [esp+0x44],eax
1002af15:	jne    0x1002af25
1002af17:	cmp    DWORD PTR [esp+0x28],0x5b0
1002af1f:	jae    0x1002afe0
1002af25:	mov    edx,esi
1002af27:	mov    esi,DWORD PTR [esp+0x3c]
1002af2b:	mov    eax,DWORD PTR [esi]
1002af2d:	mov    BYTE PTR [eax+edx*4],cl
1002af30:	mov    ecx,DWORD PTR [esi]
1002af32:	mov    al,BYTE PTR [esp+0x14]
1002af36:	mov    BYTE PTR [ecx+edx*4+0x1],al
1002af3a:	mov    eax,DWORD PTR [esi]
1002af3c:	mov    ecx,DWORD PTR [esp+0x24]
1002af40:	sub    ecx,eax
1002af42:	sar    ecx,0x2
1002af45:	mov    DWORD PTR [esp+0x34],edx
1002af49:	mov    WORD PTR [eax+edx*4+0x2],cx
1002af4e:	jmp    0x1002ada0
1002af53:	mov    edi,DWORD PTR [esp+0x3c]
1002af57:	mov    al,dl
1002af59:	sub    al,bl
1002af5b:	test   ebp,ebp
1002af5d:	mov    BYTE PTR [esp+0x10],0x40
1002af62:	mov    BYTE PTR [esp+0x11],al
1002af66:	mov    WORD PTR [esp+0x12],0x0
1002af6d:	je     0x1002afc5
1002af6f:	mov    esi,DWORD PTR [esp+0x24]
1002af73:	test   ebx,ebx
1002af75:	je     0x1002af95
1002af77:	mov    ecx,DWORD PTR [esp+0x40]
1002af7b:	and    ecx,ebp
1002af7d:	cmp    ecx,DWORD PTR [esp+0x34]
1002af81:	je     0x1002af95
1002af83:	mov    eax,DWORD PTR [esp+0x14]
1002af87:	mov    esi,DWORD PTR [edi]
1002af89:	xor    ebx,ebx
1002af8b:	mov    DWORD PTR [esp+0x18],eax
1002af8f:	mov    BYTE PTR [esp+0x11],al
1002af93:	mov    edx,eax
1002af95:	mov    ecx,ebx
1002af97:	mov    eax,ebp
1002af99:	shr    eax,cl
1002af9b:	mov    ecx,DWORD PTR [esp+0x10]
1002af9f:	mov    DWORD PTR [esi+eax*4],ecx
1002afa2:	lea    ecx,[edx-0x1]
1002afa5:	mov    eax,0x1
1002afaa:	shl    eax,cl
1002afac:	test   ebp,eax
1002afae:	je     0x1002afb6
1002afb0:	shr    eax,1
1002afb2:	test   ebp,eax
1002afb4:	jne    0x1002afb0
1002afb6:	test   eax,eax
1002afb8:	je     0x1002afc5
1002afba:	lea    ecx,[eax-0x1]
1002afbd:	and    ecx,ebp
1002afbf:	add    ecx,eax
1002afc1:	mov    ebp,ecx
1002afc3:	jne    0x1002af73
1002afc5:	mov    edx,DWORD PTR [esp+0x28]
1002afc9:	mov    ecx,DWORD PTR [esp+0x4c]
1002afcd:	lea    eax,[edx*4+0x0]
1002afd4:	add    DWORD PTR [edi],eax
1002afd6:	mov    edx,DWORD PTR [esp+0x14]
1002afda:	mov    DWORD PTR [ecx],edx
1002afdc:	xor    eax,eax
1002afde:	jmp    0x1002afe5
1002afe0:	mov    eax,0x1
1002afe5:	mov    ecx,DWORD PTR [esp+0x98]
1002afec:	pop    edi
1002afed:	pop    esi
1002afee:	pop    ebp
1002afef:	pop    ebx
1002aff0:	xor    ecx,esp
1002aff2:	call   0x10018773
1002aff7:	add    esp,0x8c
1002affd:	ret    
1002affe:	int3   
1002afff:	int3   
1002b000:	mov    ecx,DWORD PTR [esp+0x4]
1002b004:	push   ebx
1002b005:	mov    ebx,DWORD PTR [esp+0x10]
1002b009:	push   edi
1002b00a:	mov    edi,ecx
1002b00c:	shr    edi,0x10
1002b00f:	and    ecx,0xffff
1002b015:	cmp    ebx,0x1
1002b018:	jne    0x1002b04b
1002b01a:	mov    eax,DWORD PTR [esp+0x10]
1002b01e:	movzx  edx,BYTE PTR [eax]
1002b021:	add    ecx,edx
1002b023:	cmp    ecx,0xfff1
1002b029:	jb     0x1002b031
1002b02b:	sub    ecx,0xfff1
1002b031:	add    edi,ecx
1002b033:	cmp    edi,0xfff1
1002b039:	jb     0x1002b041
1002b03b:	sub    edi,0xfff1
1002b041:	mov    eax,edi
1002b043:	shl    eax,0x10
1002b046:	pop    edi
1002b047:	or     eax,ecx
1002b049:	pop    ebx
1002b04a:	ret    
1002b04b:	push   esi
1002b04c:	mov    esi,DWORD PTR [esp+0x14]
1002b050:	test   esi,esi
1002b052:	jne    0x1002b05b
1002b054:	lea    eax,[esi+0x1]
1002b057:	pop    esi
1002b058:	pop    edi
1002b059:	pop    ebx
1002b05a:	ret    
1002b05b:	cmp    ebx,0x10
1002b05e:	jae    0x1002b09f
1002b060:	test   ebx,ebx
1002b062:	je     0x1002b075
1002b064:	movzx  eax,BYTE PTR [esi]
1002b067:	add    ecx,eax
1002b069:	sub    ebx,0x1
1002b06c:	add    esi,0x1
1002b06f:	add    edi,ecx
1002b071:	test   ebx,ebx
1002b073:	jne    0x1002b064
1002b075:	cmp    ecx,0xfff1
1002b07b:	jb     0x1002b083
1002b07d:	sub    ecx,0xfff1
1002b083:	mov    eax,0x80078071
1002b088:	mul    edi
1002b08a:	shr    edx,0xf
1002b08d:	mov    eax,edx
1002b08f:	shl    eax,0x4
1002b092:	sub    eax,edx
1002b094:	add    eax,edi
1002b096:	pop    esi
1002b097:	shl    eax,0x10
1002b09a:	pop    edi
1002b09b:	or     eax,ecx
1002b09d:	pop    ebx
1002b09e:	ret    
1002b09f:	cmp    ebx,0x15b0
1002b0a5:	jb     0x1002b189
1002b0ab:	mov    eax,0x5e6ea9af
1002b0b0:	mul    ebx
1002b0b2:	push   ebp
1002b0b3:	mov    ebp,edx
1002b0b5:	shr    ebp,0xb
1002b0b8:	jmp    0x1002b0c0
1002b0ba:	lea    ebx,[ebx+0x0]
1002b0c0:	sub    ebx,0x15b0
1002b0c6:	mov    eax,0x15b
1002b0cb:	jmp    0x1002b0d0
1002b0cd:	lea    ecx,[ecx+0x0]
1002b0d0:	movzx  edx,BYTE PTR [esi]
1002b0d3:	add    ecx,edx
1002b0d5:	movzx  edx,BYTE PTR [esi+0x1]
1002b0d9:	add    edi,ecx
1002b0db:	add    ecx,edx
1002b0dd:	movzx  edx,BYTE PTR [esi+0x2]
1002b0e1:	add    edi,ecx
1002b0e3:	add    ecx,edx
1002b0e5:	movzx  edx,BYTE PTR [esi+0x3]
1002b0e9:	add    edi,ecx
1002b0eb:	add    ecx,edx
1002b0ed:	movzx  edx,BYTE PTR [esi+0x4]
1002b0f1:	add    edi,ecx
1002b0f3:	add    ecx,edx
1002b0f5:	movzx  edx,BYTE PTR [esi+0x5]
1002b0f9:	add    edi,ecx
1002b0fb:	add    ecx,edx
1002b0fd:	movzx  edx,BYTE PTR [esi+0x6]
1002b101:	add    edi,ecx
1002b103:	add    ecx,edx
1002b105:	movzx  edx,BYTE PTR [esi+0x7]
1002b109:	add    edi,ecx
1002b10b:	add    ecx,edx
1002b10d:	movzx  edx,BYTE PTR [esi+0x8]
1002b111:	add    edi,ecx
1002b113:	add    ecx,edx
1002b115:	movzx  edx,BYTE PTR [esi+0x9]
1002b119:	add    edi,ecx
1002b11b:	add    ecx,edx
1002b11d:	movzx  edx,BYTE PTR [esi+0xa]
1002b121:	add    edi,ecx
1002b123:	add    ecx,edx
1002b125:	movzx  edx,BYTE PTR [esi+0xb]
1002b129:	add    edi,ecx
1002b12b:	add    ecx,edx
1002b12d:	movzx  edx,BYTE PTR [esi+0xc]
1002b131:	add    edi,ecx
1002b133:	add    ecx,edx
1002b135:	movzx  edx,BYTE PTR [esi+0xd]
1002b139:	add    edi,ecx
1002b13b:	add    ecx,edx
1002b13d:	movzx  edx,BYTE PTR [esi+0xe]
1002b141:	add    edi,ecx
1002b143:	add    ecx,edx
1002b145:	movzx  edx,BYTE PTR [esi+0xf]
1002b149:	add    edi,ecx
1002b14b:	add    ecx,edx
1002b14d:	add    edi,ecx
1002b14f:	add    esi,0x10
1002b152:	sub    eax,0x1
1002b155:	jne    0x1002b0d0
1002b15b:	mov    eax,0x80078071
1002b160:	mul    ecx
1002b162:	shr    edx,0xf
1002b165:	imul   edx,edx,0xffff000f
1002b16b:	add    ecx,edx
1002b16d:	mov    eax,0x80078071
1002b172:	mul    edi
1002b174:	shr    edx,0xf
1002b177:	imul   edx,edx,0xffff000f
1002b17d:	add    edi,edx
1002b17f:	sub    ebp,0x1
1002b182:	jne    0x1002b0c0
1002b188:	pop    ebp
1002b189:	test   ebx,ebx
1002b18b:	je     0x1002b267
1002b191:	cmp    ebx,0x10
1002b194:	jb     0x1002b22e
1002b19a:	mov    eax,ebx
1002b19c:	shr    eax,0x4
1002b19f:	nop
1002b1a0:	movzx  edx,BYTE PTR [esi]
1002b1a3:	add    ecx,edx
1002b1a5:	movzx  edx,BYTE PTR [esi+0x1]
1002b1a9:	add    edi,ecx
1002b1ab:	add    ecx,edx
1002b1ad:	movzx  edx,BYTE PTR [esi+0x2]
1002b1b1:	add    edi,ecx
1002b1b3:	add    ecx,edx
1002b1b5:	movzx  edx,BYTE PTR [esi+0x3]
1002b1b9:	add    edi,ecx
1002b1bb:	add    ecx,edx
1002b1bd:	movzx  edx,BYTE PTR [esi+0x4]
1002b1c1:	add    edi,ecx
1002b1c3:	add    ecx,edx
1002b1c5:	movzx  edx,BYTE PTR [esi+0x5]
1002b1c9:	add    edi,ecx
1002b1cb:	add    ecx,edx
1002b1cd:	movzx  edx,BYTE PTR [esi+0x6]
1002b1d1:	add    edi,ecx
1002b1d3:	add    ecx,edx
1002b1d5:	movzx  edx,BYTE PTR [esi+0x7]
1002b1d9:	add    edi,ecx
1002b1db:	add    ecx,edx
1002b1dd:	movzx  edx,BYTE PTR [esi+0x8]
1002b1e1:	add    edi,ecx
1002b1e3:	add    ecx,edx
1002b1e5:	movzx  edx,BYTE PTR [esi+0x9]
1002b1e9:	add    edi,ecx
1002b1eb:	add    ecx,edx
1002b1ed:	movzx  edx,BYTE PTR [esi+0xa]
1002b1f1:	add    edi,ecx
1002b1f3:	add    ecx,edx
1002b1f5:	movzx  edx,BYTE PTR [esi+0xb]
1002b1f9:	add    edi,ecx
1002b1fb:	add    ecx,edx
1002b1fd:	movzx  edx,BYTE PTR [esi+0xc]
1002b201:	add    edi,ecx
1002b203:	add    ecx,edx
1002b205:	movzx  edx,BYTE PTR [esi+0xd]
1002b209:	add    edi,ecx
1002b20b:	add    ecx,edx
1002b20d:	movzx  edx,BYTE PTR [esi+0xe]
1002b211:	add    edi,ecx
1002b213:	add    ecx,edx
1002b215:	movzx  edx,BYTE PTR [esi+0xf]
1002b219:	add    edi,ecx
1002b21b:	add    ecx,edx
1002b21d:	sub    ebx,0x10
1002b220:	add    edi,ecx
1002b222:	add    esi,0x10
1002b225:	sub    eax,0x1
1002b228:	jne    0x1002b1a0
1002b22e:	test   ebx,ebx
1002b230:	je     0x1002b243
1002b232:	movzx  eax,BYTE PTR [esi]
1002b235:	add    ecx,eax
1002b237:	sub    ebx,0x1
1002b23a:	add    esi,0x1
1002b23d:	add    edi,ecx
1002b23f:	test   ebx,ebx
1002b241:	jne    0x1002b232
1002b243:	mov    eax,0x80078071
1002b248:	mul    ecx
1002b24a:	shr    edx,0xf
1002b24d:	imul   edx,edx,0xffff000f
1002b253:	add    ecx,edx
1002b255:	mov    eax,0x80078071
1002b25a:	mul    edi
1002b25c:	shr    edx,0xf
1002b25f:	imul   edx,edx,0xffff000f
1002b265:	add    edi,edx
1002b267:	mov    eax,edi
1002b269:	pop    esi
1002b26a:	shl    eax,0x10
1002b26d:	pop    edi
1002b26e:	or     eax,ecx
1002b270:	pop    ebx
1002b271:	ret    
1002b272:	int3   
1002b273:	int3   
1002b274:	int3   
1002b275:	int3   
1002b276:	int3   
1002b277:	int3   
1002b278:	int3   
1002b279:	int3   
1002b27a:	int3   
1002b27b:	int3   
1002b27c:	int3   
1002b27d:	int3   
1002b27e:	int3   
1002b27f:	int3   
1002b280:	push   esi
1002b281:	mov    esi,edx
1002b283:	test   esi,esi
1002b285:	not    eax
1002b287:	je     0x1002b2b2
1002b289:	lea    esp,[esp+0x0]
1002b290:	test   cl,0x3
1002b293:	je     0x1002b2b2
1002b295:	movzx  edx,BYTE PTR [ecx]
1002b298:	xor    edx,eax
1002b29a:	and    edx,0xff
1002b2a0:	shr    eax,0x8
1002b2a3:	xor    eax,DWORD PTR [edx*4+0x100b4db0]
1002b2aa:	add    ecx,0x1
1002b2ad:	sub    esi,0x1
1002b2b0:	jne    0x1002b290
1002b2b2:	cmp    esi,0x20
1002b2b5:	push   ebx
1002b2b6:	push   edi
1002b2b7:	jb     0x1002b49c
1002b2bd:	mov    edi,esi
1002b2bf:	shr    edi,0x5
1002b2c2:	xor    eax,DWORD PTR [ecx]
1002b2c4:	add    ecx,0x4
1002b2c7:	mov    edx,eax
1002b2c9:	shr    edx,0x10
1002b2cc:	movzx  ebx,ah
1002b2cf:	and    edx,0xff
1002b2d5:	mov    edx,DWORD PTR [edx*4+0x100b51b0]
1002b2dc:	xor    edx,DWORD PTR [ebx*4+0x100b55b0]
1002b2e3:	mov    ebx,eax
1002b2e5:	and    eax,0xff
1002b2ea:	shr    ebx,0x18
1002b2ed:	xor    edx,DWORD PTR [ebx*4+0x100b4db0]
1002b2f4:	add    ecx,0x4
1002b2f7:	xor    edx,DWORD PTR [eax*4+0x100b59b0]
1002b2fe:	add    ecx,0x4
1002b301:	xor    edx,DWORD PTR [ecx-0x8]
1002b304:	add    ecx,0x4
1002b307:	mov    eax,edx
1002b309:	shr    eax,0x10
1002b30c:	and    eax,0xff
1002b311:	mov    eax,DWORD PTR [eax*4+0x100b51b0]
1002b318:	movzx  ebx,dh
1002b31b:	xor    eax,DWORD PTR [ebx*4+0x100b55b0]
1002b322:	mov    ebx,edx
1002b324:	and    edx,0xff
1002b32a:	shr    ebx,0x18
1002b32d:	xor    eax,DWORD PTR [ebx*4+0x100b4db0]
1002b334:	add    ecx,0x4
1002b337:	xor    eax,DWORD PTR [edx*4+0x100b59b0]
1002b33e:	add    ecx,0x4
1002b341:	xor    eax,DWORD PTR [ecx-0x10]
1002b344:	mov    edx,eax
1002b346:	shr    edx,0x10
1002b349:	movzx  ebx,ah
1002b34c:	and    edx,0xff
1002b352:	mov    edx,DWORD PTR [edx*4+0x100b51b0]
1002b359:	xor    edx,DWORD PTR [ebx*4+0x100b55b0]
1002b360:	mov    ebx,eax
1002b362:	and    eax,0xff
1002b367:	shr    ebx,0x18
1002b36a:	xor    edx,DWORD PTR [ebx*4+0x100b4db0]
1002b371:	xor    edx,DWORD PTR [eax*4+0x100b59b0]
1002b378:	xor    edx,DWORD PTR [ecx-0xc]
1002b37b:	mov    eax,edx
1002b37d:	shr    eax,0x10
1002b380:	and    eax,0xff
1002b385:	mov    eax,DWORD PTR [eax*4+0x100b51b0]
1002b38c:	movzx  ebx,dh
1002b38f:	xor    eax,DWORD PTR [ebx*4+0x100b55b0]
1002b396:	mov    ebx,edx
1002b398:	and    edx,0xff
1002b39e:	shr    ebx,0x18
1002b3a1:	xor    eax,DWORD PTR [ebx*4+0x100b4db0]
1002b3a8:	xor    eax,DWORD PTR [edx*4+0x100b59b0]
1002b3af:	xor    eax,DWORD PTR [ecx-0x8]
1002b3b2:	mov    edx,eax
1002b3b4:	shr    edx,0x10
1002b3b7:	movzx  ebx,ah
1002b3ba:	and    edx,0xff
1002b3c0:	mov    edx,DWORD PTR [edx*4+0x100b51b0]
1002b3c7:	xor    edx,DWORD PTR [ebx*4+0x100b55b0]
1002b3ce:	mov    ebx,eax
1002b3d0:	and    eax,0xff
1002b3d5:	shr    ebx,0x18
1002b3d8:	xor    edx,DWORD PTR [ebx*4+0x100b4db0]
1002b3df:	xor    edx,DWORD PTR [eax*4+0x100b59b0]
1002b3e6:	xor    edx,DWORD PTR [ecx-0x4]
1002b3e9:	mov    eax,edx
1002b3eb:	shr    eax,0x10
1002b3ee:	and    eax,0xff
1002b3f3:	mov    eax,DWORD PTR [eax*4+0x100b51b0]
1002b3fa:	movzx  ebx,dh
1002b3fd:	xor    eax,DWORD PTR [ebx*4+0x100b55b0]
1002b404:	mov    ebx,edx
1002b406:	shr    ebx,0x18
1002b409:	xor    eax,DWORD PTR [ebx*4+0x100b4db0]
1002b410:	and    edx,0xff
1002b416:	xor    eax,DWORD PTR [edx*4+0x100b59b0]
1002b41d:	xor    eax,DWORD PTR [ecx]
1002b41f:	add    ecx,0x4
1002b422:	mov    edx,eax
1002b424:	shr    edx,0x10
1002b427:	movzx  ebx,ah
1002b42a:	and    edx,0xff
1002b430:	mov    edx,DWORD PTR [edx*4+0x100b51b0]
1002b437:	xor    edx,DWORD PTR [ebx*4+0x100b55b0]
1002b43e:	mov    ebx,eax
1002b440:	and    eax,0xff
1002b445:	shr    ebx,0x18
1002b448:	xor    edx,DWORD PTR [ebx*4+0x100b4db0]
1002b44f:	add    ecx,0x4
1002b452:	xor    edx,DWORD PTR [eax*4+0x100b59b0]
1002b459:	sub    esi,0x20
1002b45c:	xor    edx,DWORD PTR [ecx-0x4]
1002b45f:	mov    eax,edx
1002b461:	shr    eax,0x10
1002b464:	and    eax,0xff
1002b469:	mov    eax,DWORD PTR [eax*4+0x100b51b0]
1002b470:	movzx  ebx,dh
1002b473:	xor    eax,DWORD PTR [ebx*4+0x100b55b0]
1002b47a:	mov    ebx,edx
1002b47c:	shr    ebx,0x18
1002b47f:	xor    eax,DWORD PTR [ebx*4+0x100b4db0]
1002b486:	and    edx,0xff
1002b48c:	xor    eax,DWORD PTR [edx*4+0x100b59b0]
1002b493:	sub    edi,0x1
1002b496:	jne    0x1002b2c2
1002b49c:	cmp    esi,0x4
1002b49f:	jb     0x1002b4e9
1002b4a1:	mov    edx,esi
1002b4a3:	shr    edx,0x2
1002b4a6:	xor    eax,DWORD PTR [ecx]
1002b4a8:	add    ecx,0x4
1002b4ab:	mov    edi,eax
1002b4ad:	shr    edi,0x10
1002b4b0:	and    edi,0xff
1002b4b6:	mov    edi,DWORD PTR [edi*4+0x100b51b0]
1002b4bd:	movzx  ebx,ah
1002b4c0:	xor    edi,DWORD PTR [ebx*4+0x100b55b0]
1002b4c7:	mov    ebx,eax
1002b4c9:	shr    ebx,0x18
1002b4cc:	xor    edi,DWORD PTR [ebx*4+0x100b4db0]
1002b4d3:	and    eax,0xff
1002b4d8:	xor    edi,DWORD PTR [eax*4+0x100b59b0]
1002b4df:	sub    esi,0x4
1002b4e2:	sub    edx,0x1
1002b4e5:	mov    eax,edi
1002b4e7:	jne    0x1002b4a6
1002b4e9:	test   esi,esi
1002b4eb:	pop    edi
1002b4ec:	pop    ebx
1002b4ed:	je     0x1002b50d
1002b4ef:	nop
1002b4f0:	movzx  edx,BYTE PTR [ecx]
1002b4f3:	xor    edx,eax
1002b4f5:	and    edx,0xff
1002b4fb:	shr    eax,0x8
1002b4fe:	xor    eax,DWORD PTR [edx*4+0x100b4db0]
1002b505:	add    ecx,0x1
1002b508:	sub    esi,0x1
1002b50b:	jne    0x1002b4f0
1002b50d:	not    eax
1002b50f:	pop    esi
1002b510:	ret    
1002b511:	int3   
1002b512:	int3   
1002b513:	int3   
1002b514:	int3   
1002b515:	int3   
1002b516:	int3   
1002b517:	int3   
1002b518:	int3   
1002b519:	int3   
1002b51a:	int3   
1002b51b:	int3   
1002b51c:	int3   
1002b51d:	int3   
1002b51e:	int3   
1002b51f:	int3   
1002b520:	mov    ecx,DWORD PTR [esp+0x8]
1002b524:	test   ecx,ecx
1002b526:	jne    0x1002b52b
1002b528:	xor    eax,eax
1002b52a:	ret    
1002b52b:	mov    edx,DWORD PTR [esp+0xc]
1002b52f:	mov    eax,DWORD PTR [esp+0x4]
1002b533:	jmp    0x1002b280
1002b538:	int3   
1002b539:	int3   
1002b53a:	int3   
1002b53b:	int3   
1002b53c:	int3   
1002b53d:	int3   
1002b53e:	int3   
1002b53f:	int3   
1002b540:	push   esi
1002b541:	lea    eax,[edx+0x94]
1002b547:	mov    ecx,0x11e
1002b54c:	xor    esi,esi
1002b54e:	mov    edi,edi
1002b550:	mov    WORD PTR [eax],si
1002b553:	add    eax,0x4
1002b556:	sub    ecx,0x1
1002b559:	jne    0x1002b550
1002b55b:	lea    eax,[edx+0x988]
1002b561:	mov    ecx,0x1e
1002b566:	mov    WORD PTR [eax],si
1002b569:	add    eax,0x4
1002b56c:	sub    ecx,0x1
1002b56f:	jne    0x1002b566
1002b571:	lea    eax,[edx+0xa7c]
1002b577:	mov    ecx,0x13
1002b57c:	lea    esp,[esp+0x0]
1002b580:	mov    WORD PTR [eax],si
1002b583:	add    eax,0x4
1002b586:	sub    ecx,0x1
1002b589:	jne    0x1002b580
1002b58b:	mov    DWORD PTR [edx+0x16ac],esi
1002b591:	mov    DWORD PTR [edx+0x16a8],esi
1002b597:	mov    DWORD PTR [edx+0x16b0],esi
1002b59d:	mov    DWORD PTR [edx+0x16a0],esi
1002b5a3:	mov    WORD PTR [edx+0x494],0x1
1002b5ac:	pop    esi
1002b5ad:	ret    
1002b5ae:	int3   
1002b5af:	int3   
1002b5b0:	push   ecx
1002b5b1:	mov    edx,DWORD PTR [eax+0x1450]
1002b5b7:	push   ebp
1002b5b8:	push   esi
1002b5b9:	mov    esi,DWORD PTR [esp+0x10]
1002b5bd:	mov    ebp,DWORD PTR [eax+esi*4+0xb5c]
1002b5c4:	lea    ecx,[esi+esi*1]
1002b5c7:	cmp    ecx,edx
1002b5c9:	mov    DWORD PTR [esp+0x8],ebp
1002b5cd:	jg     0x1002b66b
1002b5d3:	push   ebx
1002b5d4:	jge    0x1002b60a
1002b5d6:	mov    esi,DWORD PTR [eax+ecx*4+0xb60]
1002b5dd:	mov    ebp,DWORD PTR [eax+ecx*4+0xb5c]
1002b5e4:	movzx  edx,WORD PTR [edi+esi*4]
1002b5e8:	movzx  ebx,WORD PTR [edi+ebp*4]
1002b5ec:	cmp    dx,bx
1002b5ef:	jb     0x1002b603
1002b5f1:	jne    0x1002b606
1002b5f3:	mov    dl,BYTE PTR [esi+eax*1+0x1458]
1002b5fa:	cmp    dl,BYTE PTR [eax+ebp*1+0x1458]
1002b601:	ja     0x1002b606
1002b603:	add    ecx,0x1
1002b606:	mov    ebp,DWORD PTR [esp+0xc]
1002b60a:	mov    esi,DWORD PTR [eax+ecx*4+0xb5c]
1002b611:	movzx  edx,WORD PTR [edi+ebp*4]
1002b615:	movzx  ebx,WORD PTR [edi+esi*4]
1002b619:	cmp    dx,bx
1002b61c:	jb     0x1002b64b
1002b61e:	jne    0x1002b630
1002b620:	mov    dl,BYTE PTR [eax+ebp*1+0x1458]
1002b627:	cmp    dl,BYTE PTR [esi+eax*1+0x1458]
1002b62e:	jbe    0x1002b65b
1002b630:	mov    edx,DWORD PTR [esp+0x14]
1002b634:	mov    DWORD PTR [eax+edx*4+0xb5c],esi
1002b63b:	mov    edx,DWORD PTR [eax+0x1450]
1002b641:	mov    DWORD PTR [esp+0x14],ecx
1002b645:	add    ecx,ecx
1002b647:	cmp    ecx,edx
1002b649:	jle    0x1002b5d4
1002b64b:	mov    ecx,DWORD PTR [esp+0x14]
1002b64f:	pop    ebx
1002b650:	pop    esi
1002b651:	mov    DWORD PTR [eax+ecx*4+0xb5c],ebp
1002b658:	pop    ebp
1002b659:	pop    ecx
1002b65a:	ret    
1002b65b:	mov    edx,DWORD PTR [esp+0x14]
1002b65f:	pop    ebx
1002b660:	pop    esi
1002b661:	mov    DWORD PTR [eax+edx*4+0xb5c],ebp
1002b668:	pop    ebp
1002b669:	pop    ecx
1002b66a:	ret    
1002b66b:	mov    DWORD PTR [eax+esi*4+0xb5c],ebp
1002b672:	pop    esi
1002b673:	pop    ebp
1002b674:	pop    ecx
1002b675:	ret    
1002b676:	int3   
1002b677:	int3   
1002b678:	int3   
1002b679:	int3   
1002b67a:	int3   
1002b67b:	int3   
1002b67c:	int3   
1002b67d:	int3   
1002b67e:	int3   
1002b67f:	int3   
1002b680:	sub    esp,0x20
1002b683:	mov    edx,DWORD PTR [ecx+0x4]
1002b686:	push   ebx
1002b687:	mov    ebx,DWORD PTR [ecx]
1002b689:	mov    ecx,DWORD PTR [ecx+0x8]
1002b68c:	mov    DWORD PTR [esp+0x18],edx
1002b690:	mov    edx,DWORD PTR [ecx+0x4]
1002b693:	push   ebp
1002b694:	mov    ebp,DWORD PTR [ecx]
1002b696:	mov    DWORD PTR [esp+0x24],edx
1002b69a:	mov    edx,DWORD PTR [ecx+0x8]
1002b69d:	push   esi
1002b69e:	mov    esi,DWORD PTR [ecx+0x10]
1002b6a1:	xor    ecx,ecx
1002b6a3:	mov    DWORD PTR [eax+0xb3c],ecx
1002b6a9:	mov    DWORD PTR [eax+0xb40],ecx
1002b6af:	mov    DWORD PTR [eax+0xb44],ecx
1002b6b5:	mov    DWORD PTR [eax+0xb48],ecx
1002b6bb:	mov    DWORD PTR [eax+0xb4c],ecx
1002b6c1:	mov    DWORD PTR [eax+0xb50],ecx
1002b6c7:	mov    DWORD PTR [eax+0xb54],ecx
1002b6cd:	mov    DWORD PTR [eax+0xb58],ecx
1002b6d3:	mov    DWORD PTR [esp+0x24],edx
1002b6d7:	mov    edx,DWORD PTR [eax+0x1454]
1002b6dd:	mov    edx,DWORD PTR [eax+edx*4+0xb5c]
1002b6e4:	push   edi
1002b6e5:	mov    WORD PTR [ebx+edx*4+0x2],cx
1002b6ea:	mov    edi,DWORD PTR [eax+0x1454]
1002b6f0:	add    edi,0x1
1002b6f3:	cmp    edi,0x23d
1002b6f9:	mov    DWORD PTR [esp+0x1c],esi
1002b6fd:	mov    DWORD PTR [esp+0x18],ecx
1002b701:	jge    0x1002b88f
1002b707:	lea    ecx,[eax+edi*4+0xb5c]
1002b70e:	mov    DWORD PTR [esp+0x14],ecx
1002b712:	mov    ecx,0x23d
1002b717:	sub    ecx,edi
1002b719:	add    edi,ecx
1002b71b:	mov    DWORD PTR [esp+0x20],ecx
1002b71f:	mov    DWORD PTR [esp+0x10],edi
1002b723:	jmp    0x1002b729
1002b725:	mov    esi,DWORD PTR [esp+0x1c]
1002b729:	mov    edx,DWORD PTR [esp+0x14]
1002b72d:	mov    edx,DWORD PTR [edx]
1002b72f:	movzx  ecx,WORD PTR [ebx+edx*4+0x2]
1002b734:	movzx  ecx,WORD PTR [ebx+ecx*4+0x2]
1002b739:	add    ecx,0x1
1002b73c:	cmp    ecx,esi
1002b73e:	jle    0x1002b747
1002b740:	add    DWORD PTR [esp+0x18],0x1
1002b745:	mov    ecx,esi
1002b747:	cmp    edx,DWORD PTR [esp+0x24]
1002b74b:	mov    WORD PTR [ebx+edx*4+0x2],cx
1002b750:	jg     0x1002b79a
1002b752:	mov    edi,DWORD PTR [esp+0x28]
1002b756:	add    WORD PTR [eax+ecx*2+0xb3c],0x1
1002b75f:	xor    esi,esi
1002b761:	cmp    edx,edi
1002b763:	jl     0x1002b770
1002b765:	mov    esi,edx
1002b767:	sub    esi,edi
1002b769:	mov    edi,DWORD PTR [esp+0x2c]
1002b76d:	mov    esi,DWORD PTR [edi+esi*4]
1002b770:	movzx  edi,WORD PTR [ebx+edx*4]
1002b774:	movzx  edi,di
1002b777:	add    ecx,esi
1002b779:	imul   ecx,edi
1002b77c:	add    DWORD PTR [eax+0x16a8],ecx
1002b782:	test   ebp,ebp
1002b784:	je     0x1002b796
1002b786:	movzx  edx,WORD PTR [ebp+edx*4+0x2]
1002b78b:	add    edx,esi
1002b78d:	imul   edx,edi
1002b790:	add    DWORD PTR [eax+0x16ac],edx
1002b796:	mov    edi,DWORD PTR [esp+0x10]
1002b79a:	add    DWORD PTR [esp+0x14],0x4
1002b79f:	sub    DWORD PTR [esp+0x20],0x1
1002b7a4:	jne    0x1002b725
1002b7aa:	mov    ebp,DWORD PTR [esp+0x18]
1002b7ae:	test   ebp,ebp
1002b7b0:	je     0x1002b88f
1002b7b6:	mov    ecx,DWORD PTR [esp+0x1c]
1002b7ba:	lea    edx,[ecx-0x1]
1002b7bd:	mov    DWORD PTR [esp+0x2c],edx
1002b7c1:	lea    esi,[eax+ecx*2+0xb3c]
1002b7c8:	jmp    0x1002b7d0
1002b7ca:	lea    ebx,[ebx+0x0]
1002b7d0:	mov    ecx,DWORD PTR [esp+0x2c]
1002b7d4:	cmp    WORD PTR [eax+ecx*2+0xb3c],0x0
1002b7dd:	lea    edx,[eax+ecx*2+0xb3c]
1002b7e4:	jne    0x1002b7f2
1002b7e6:	sub    edx,0x2
1002b7e9:	sub    ecx,0x1
1002b7ec:	cmp    WORD PTR [edx],0x0
1002b7f0:	je     0x1002b7e6
1002b7f2:	add    WORD PTR [eax+ecx*2+0xb3c],0xffff
1002b7fc:	add    WORD PTR [eax+ecx*2+0xb3e],0x2
1002b805:	add    WORD PTR [esi],0xffff
1002b80a:	sub    ebp,0x2
1002b80d:	test   ebp,ebp
1002b80f:	jg     0x1002b7d0
1002b811:	mov    edx,DWORD PTR [esp+0x1c]
1002b815:	test   edx,edx
1002b817:	je     0x1002b88f
1002b819:	mov    DWORD PTR [esp+0x20],esi
1002b81d:	lea    ecx,[ecx+0x0]
1002b820:	movzx  esi,WORD PTR [esi]
1002b823:	test   esi,esi
1002b825:	mov    DWORD PTR [esp+0x1c],esi
1002b829:	je     0x1002b87d
1002b82b:	lea    ebp,[eax+edi*4+0xb5c]
1002b832:	mov    ecx,DWORD PTR [ebp-0x4]
1002b835:	sub    DWORD PTR [esp+0x10],0x1
1002b83a:	sub    ebp,0x4
1002b83d:	cmp    ecx,DWORD PTR [esp+0x24]
1002b841:	mov    DWORD PTR [esp+0x2c],ebp
1002b845:	jg     0x1002b875
1002b847:	movzx  edi,WORD PTR [ebx+ecx*4+0x2]
1002b84c:	cmp    edi,edx
1002b84e:	lea    esi,[ebx+ecx*4+0x2]
1002b852:	je     0x1002b86c
1002b854:	movzx  ecx,WORD PTR [ebx+ecx*4]
1002b858:	mov    ebp,edx
1002b85a:	sub    ebp,edi
1002b85c:	imul   ebp,ecx
1002b85f:	add    DWORD PTR [eax+0x16a8],ebp
1002b865:	mov    ebp,DWORD PTR [esp+0x2c]
1002b869:	mov    WORD PTR [esi],dx
1002b86c:	sub    DWORD PTR [esp+0x1c],0x1
1002b871:	mov    esi,DWORD PTR [esp+0x1c]
1002b875:	test   esi,esi
1002b877:	jne    0x1002b832
1002b879:	mov    edi,DWORD PTR [esp+0x10]
1002b87d:	mov    esi,DWORD PTR [esp+0x20]
1002b881:	sub    edx,0x1
1002b884:	sub    esi,0x2
1002b887:	test   edx,edx
1002b889:	mov    DWORD PTR [esp+0x20],esi
1002b88d:	jne    0x1002b820
1002b88f:	pop    edi
1002b890:	pop    esi
1002b891:	pop    ebp
1002b892:	pop    ebx
1002b893:	add    esp,0x20
1002b896:	ret    
1002b897:	int3   
1002b898:	int3   
1002b899:	int3   
1002b89a:	int3   
1002b89b:	int3   
1002b89c:	int3   
1002b89d:	int3   
1002b89e:	int3   
1002b89f:	int3   
1002b8a0:	sub    esp,0xc
1002b8a3:	push   ebx
1002b8a4:	push   ebp
1002b8a5:	mov    ebp,DWORD PTR [esp+0x18]
1002b8a9:	push   esi
1002b8aa:	push   edi
1002b8ab:	movzx  edi,WORD PTR [eax+0x2]
1002b8af:	xor    edx,edx
1002b8b1:	test   edi,edi
1002b8b3:	mov    ebx,ecx
1002b8b5:	mov    DWORD PTR [esp+0x14],0xffffffff
1002b8bd:	lea    ecx,[edx+0x7]
1002b8c0:	lea    esi,[edx+0x4]
1002b8c3:	jne    0x1002b8cd
1002b8c5:	mov    ecx,0x8a
1002b8ca:	lea    esi,[edx+0x3]
1002b8cd:	test   ebx,ebx
1002b8cf:	mov    WORD PTR [eax+ebx*4+0x6],0xffff
1002b8d6:	jl     0x1002b97a
1002b8dc:	add    eax,0x6
1002b8df:	add    ebx,0x1
1002b8e2:	mov    DWORD PTR [esp+0x18],ebx
1002b8e6:	mov    DWORD PTR [esp+0x10],eax
1002b8ea:	mov    ebx,0x1
1002b8ef:	nop
1002b8f0:	mov    eax,edi
1002b8f2:	mov    edi,DWORD PTR [esp+0x10]
1002b8f6:	movzx  edi,WORD PTR [edi]
1002b8f9:	add    edx,ebx
1002b8fb:	cmp    edx,ecx
1002b8fd:	jge    0x1002b903
1002b8ff:	cmp    eax,edi
1002b901:	je     0x1002b96b
1002b903:	cmp    edx,esi
1002b905:	jge    0x1002b911
1002b907:	add    WORD PTR [ebp+eax*4+0xa7c],dx
1002b90f:	jmp    0x1002b941
1002b911:	test   eax,eax
1002b913:	je     0x1002b92c
1002b915:	cmp    eax,DWORD PTR [esp+0x14]
1002b919:	je     0x1002b923
1002b91b:	add    WORD PTR [ebp+eax*4+0xa7c],bx
1002b923:	add    WORD PTR [ebp+0xabc],bx
1002b92a:	jmp    0x1002b941
1002b92c:	cmp    edx,0xa
1002b92f:	jg     0x1002b93a
1002b931:	add    WORD PTR [ebp+0xac0],bx
1002b938:	jmp    0x1002b941
1002b93a:	add    WORD PTR [ebp+0xac4],bx
1002b941:	xor    edx,edx
1002b943:	test   edi,edi
1002b945:	mov    DWORD PTR [esp+0x14],eax
1002b949:	jne    0x1002b955
1002b94b:	mov    ecx,0x8a
1002b950:	lea    esi,[edx+0x3]
1002b953:	jmp    0x1002b96b
1002b955:	cmp    eax,edi
1002b957:	jne    0x1002b963
1002b959:	mov    ecx,0x6
1002b95e:	lea    esi,[ecx-0x3]
1002b961:	jmp    0x1002b96b
1002b963:	mov    ecx,0x7
1002b968:	lea    esi,[ecx-0x3]
1002b96b:	add    DWORD PTR [esp+0x10],0x4
1002b970:	sub    DWORD PTR [esp+0x18],ebx
1002b974:	jne    0x1002b8f0
1002b97a:	pop    edi
1002b97b:	pop    esi
1002b97c:	pop    ebp
1002b97d:	pop    ebx
1002b97e:	add    esp,0xc
1002b981:	ret    
1002b982:	int3   
1002b983:	int3   
1002b984:	int3   
1002b985:	int3   
1002b986:	int3   
1002b987:	int3   
1002b988:	int3   
1002b989:	int3   
1002b98a:	int3   
1002b98b:	int3   
1002b98c:	int3   
1002b98d:	int3   
1002b98e:	int3   
1002b98f:	int3   
1002b990:	sub    esp,0x18
1002b993:	push   ebx
1002b994:	push   ebp
1002b995:	movzx  ebp,WORD PTR [edx+0x2]
1002b999:	push   esi
1002b99a:	xor    esi,esi
1002b99c:	test   ebp,ebp
1002b99e:	push   edi
1002b99f:	mov    ebx,ecx
1002b9a1:	mov    DWORD PTR [esp+0x1c],0xffffffff
1002b9a9:	mov    DWORD PTR [esp+0x14],ebp
1002b9ad:	lea    ecx,[esi+0x7]
1002b9b0:	lea    edi,[esi+0x4]
1002b9b3:	jne    0x1002b9bd
1002b9b5:	mov    ecx,0x8a
1002b9ba:	lea    edi,[ebp+0x3]
1002b9bd:	test   ebx,ebx
1002b9bf:	jl     0x1002be93
1002b9c5:	add    edx,0x6
1002b9c8:	add    ebx,0x1
1002b9cb:	mov    DWORD PTR [esp+0x18],edx
1002b9cf:	mov    DWORD PTR [esp+0x20],ebx
1002b9d3:	mov    ebp,0x1
1002b9d8:	jmp    0x1002b9e0
1002b9da:	lea    ebx,[ebx+0x0]
1002b9e0:	mov    ebx,DWORD PTR [esp+0x18]
1002b9e4:	movzx  ebx,WORD PTR [ebx]
1002b9e7:	mov    edx,DWORD PTR [esp+0x14]
1002b9eb:	add    esi,ebp
1002b9ed:	cmp    esi,ecx
1002b9ef:	mov    DWORD PTR [esp+0x24],edx
1002b9f3:	mov    DWORD PTR [esp+0x14],ebx
1002b9f7:	mov    DWORD PTR [esp+0x10],esi
1002b9fb:	jge    0x1002ba05
1002b9fd:	cmp    edx,ebx
1002b9ff:	je     0x1002be84
1002ba05:	cmp    esi,edi
1002ba07:	jge    0x1002baaf
1002ba0d:	lea    ecx,[ecx+0x0]
1002ba10:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
1002ba18:	mov    ecx,DWORD PTR [eax+0x16bc]
1002ba1e:	mov    ebx,0x10
1002ba23:	sub    ebx,edi
1002ba25:	cmp    ecx,ebx
1002ba27:	jle    0x1002ba84
1002ba29:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
1002ba31:	mov    edx,esi
1002ba33:	shl    edx,cl
1002ba35:	mov    ecx,DWORD PTR [eax+0x8]
1002ba38:	or     WORD PTR [eax+0x16b8],dx
1002ba3f:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002ba46:	mov    edx,DWORD PTR [eax+0x14]
1002ba49:	mov    BYTE PTR [ecx+edx*1],bl
1002ba4c:	add    DWORD PTR [eax+0x14],ebp
1002ba4f:	mov    ecx,DWORD PTR [eax+0x14]
1002ba52:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002ba59:	mov    edx,DWORD PTR [eax+0x8]
1002ba5c:	mov    BYTE PTR [ecx+edx*1],bl
1002ba5f:	mov    edx,DWORD PTR [eax+0x16bc]
1002ba65:	add    DWORD PTR [eax+0x14],ebp
1002ba68:	mov    cl,0x10
1002ba6a:	sub    cl,dl
1002ba6c:	shr    si,cl
1002ba6f:	lea    ecx,[edx+edi*1-0x10]
1002ba73:	mov    edx,DWORD PTR [esp+0x24]
1002ba77:	mov    WORD PTR [eax+0x16b8],si
1002ba7e:	mov    esi,DWORD PTR [esp+0x10]
1002ba82:	jmp    0x1002ba98
1002ba84:	mov    bx,WORD PTR [eax+edx*4+0xa7c]
1002ba8c:	shl    bx,cl
1002ba8f:	or     WORD PTR [eax+0x16b8],bx
1002ba96:	add    ecx,edi
1002ba98:	sub    esi,ebp
1002ba9a:	mov    DWORD PTR [eax+0x16bc],ecx
1002baa0:	mov    DWORD PTR [esp+0x10],esi
1002baa4:	jne    0x1002ba10
1002baaa:	jmp    0x1002be56
1002baaf:	test   edx,edx
1002bab1:	je     0x1002bc5c
1002bab7:	cmp    edx,DWORD PTR [esp+0x1c]
1002babb:	je     0x1002bb5d
1002bac1:	movzx  edi,WORD PTR [eax+edx*4+0xa7e]
1002bac9:	mov    ecx,DWORD PTR [eax+0x16bc]
1002bacf:	mov    ebx,0x10
1002bad4:	sub    ebx,edi
1002bad6:	cmp    ecx,ebx
1002bad8:	mov    DWORD PTR [esp+0x1c],edi
1002badc:	jle    0x1002bb39
1002bade:	movzx  esi,WORD PTR [eax+edx*4+0xa7c]
1002bae6:	mov    edi,esi
1002bae8:	shl    edi,cl
1002baea:	mov    ecx,DWORD PTR [eax+0x8]
1002baed:	or     WORD PTR [eax+0x16b8],di
1002baf4:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bafb:	mov    edi,DWORD PTR [eax+0x14]
1002bafe:	mov    BYTE PTR [ecx+edi*1],bl
1002bb01:	add    DWORD PTR [eax+0x14],ebp
1002bb04:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bb0b:	mov    ecx,DWORD PTR [eax+0x8]
1002bb0e:	mov    edi,DWORD PTR [eax+0x14]
1002bb11:	mov    BYTE PTR [edi+ecx*1],bl
1002bb14:	mov    ebx,DWORD PTR [eax+0x16bc]
1002bb1a:	add    DWORD PTR [eax+0x14],ebp
1002bb1d:	mov    cl,0x10
1002bb1f:	sub    cl,bl
1002bb21:	shr    si,cl
1002bb24:	mov    ecx,DWORD PTR [esp+0x1c]
1002bb28:	lea    ecx,[ebx+ecx*1-0x10]
1002bb2c:	mov    WORD PTR [eax+0x16b8],si
1002bb33:	mov    esi,DWORD PTR [esp+0x10]
1002bb37:	jmp    0x1002bb51
1002bb39:	mov    di,WORD PTR [eax+edx*4+0xa7c]
1002bb41:	shl    di,cl
1002bb44:	or     WORD PTR [eax+0x16b8],di
1002bb4b:	mov    edi,DWORD PTR [esp+0x1c]
1002bb4f:	add    ecx,edi
1002bb51:	sub    esi,ebp
1002bb53:	mov    DWORD PTR [eax+0x16bc],ecx
1002bb59:	mov    DWORD PTR [esp+0x10],esi
1002bb5d:	movzx  edi,WORD PTR [eax+0xabe]
1002bb64:	mov    ecx,DWORD PTR [eax+0x16bc]
1002bb6a:	mov    ebx,0x10
1002bb6f:	sub    ebx,edi
1002bb71:	cmp    ecx,ebx
1002bb73:	mov    DWORD PTR [esp+0x1c],edi
1002bb77:	jle    0x1002bbd3
1002bb79:	movzx  esi,WORD PTR [eax+0xabc]
1002bb80:	mov    edi,esi
1002bb82:	shl    edi,cl
1002bb84:	mov    ecx,DWORD PTR [eax+0x8]
1002bb87:	or     WORD PTR [eax+0x16b8],di
1002bb8e:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bb95:	mov    edi,DWORD PTR [eax+0x14]
1002bb98:	mov    BYTE PTR [ecx+edi*1],bl
1002bb9b:	add    DWORD PTR [eax+0x14],ebp
1002bb9e:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bba5:	mov    ecx,DWORD PTR [eax+0x8]
1002bba8:	mov    edi,DWORD PTR [eax+0x14]
1002bbab:	mov    BYTE PTR [edi+ecx*1],bl
1002bbae:	mov    ebx,DWORD PTR [eax+0x16bc]
1002bbb4:	add    DWORD PTR [eax+0x14],ebp
1002bbb7:	mov    cl,0x10
1002bbb9:	sub    cl,bl
1002bbbb:	shr    si,cl
1002bbbe:	mov    ecx,DWORD PTR [esp+0x1c]
1002bbc2:	lea    ecx,[ebx+ecx*1-0x10]
1002bbc6:	mov    WORD PTR [eax+0x16b8],si
1002bbcd:	mov    esi,DWORD PTR [esp+0x10]
1002bbd1:	jmp    0x1002bbea
1002bbd3:	mov    di,WORD PTR [eax+0xabc]
1002bbda:	shl    di,cl
1002bbdd:	or     WORD PTR [eax+0x16b8],di
1002bbe4:	mov    edi,DWORD PTR [esp+0x1c]
1002bbe8:	add    ecx,edi
1002bbea:	add    esi,0xfffffffd
1002bbed:	cmp    ecx,0xe
1002bbf0:	mov    DWORD PTR [eax+0x16bc],ecx
1002bbf6:	jle    0x1002bc4b
1002bbf8:	mov    edi,esi
1002bbfa:	shl    edi,cl
1002bbfc:	mov    ecx,DWORD PTR [eax+0x8]
1002bbff:	or     WORD PTR [eax+0x16b8],di
1002bc06:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bc0d:	mov    edi,DWORD PTR [eax+0x14]
1002bc10:	mov    BYTE PTR [ecx+edi*1],bl
1002bc13:	add    DWORD PTR [eax+0x14],ebp
1002bc16:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bc1d:	mov    edi,DWORD PTR [eax+0x14]
1002bc20:	mov    ecx,DWORD PTR [eax+0x8]
1002bc23:	mov    BYTE PTR [edi+ecx*1],bl
1002bc26:	mov    ebx,DWORD PTR [eax+0x16bc]
1002bc2c:	add    DWORD PTR [eax+0x14],ebp
1002bc2f:	mov    cl,0x10
1002bc31:	sub    cl,bl
1002bc33:	shr    si,cl
1002bc36:	add    ebx,0xfffffff2
1002bc39:	mov    DWORD PTR [eax+0x16bc],ebx
1002bc3f:	mov    WORD PTR [eax+0x16b8],si
1002bc46:	jmp    0x1002be56
1002bc4b:	shl    esi,cl
1002bc4d:	or     WORD PTR [eax+0x16b8],si
1002bc54:	add    ecx,0x2
1002bc57:	jmp    0x1002be50
1002bc5c:	cmp    esi,0xa
1002bc5f:	mov    ecx,DWORD PTR [eax+0x16bc]
1002bc65:	mov    ebx,0x10
1002bc6a:	jg     0x1002bd64
1002bc70:	movzx  edi,WORD PTR [eax+0xac2]
1002bc77:	sub    ebx,edi
1002bc79:	cmp    ecx,ebx
1002bc7b:	mov    DWORD PTR [esp+0x1c],edi
1002bc7f:	jle    0x1002bcdb
1002bc81:	movzx  esi,WORD PTR [eax+0xac0]
1002bc88:	mov    edi,esi
1002bc8a:	shl    edi,cl
1002bc8c:	mov    ecx,DWORD PTR [eax+0x8]
1002bc8f:	or     WORD PTR [eax+0x16b8],di
1002bc96:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bc9d:	mov    edi,DWORD PTR [eax+0x14]
1002bca0:	mov    BYTE PTR [ecx+edi*1],bl
1002bca3:	add    DWORD PTR [eax+0x14],ebp
1002bca6:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bcad:	mov    ecx,DWORD PTR [eax+0x8]
1002bcb0:	mov    edi,DWORD PTR [eax+0x14]
1002bcb3:	mov    BYTE PTR [edi+ecx*1],bl
1002bcb6:	mov    ebx,DWORD PTR [eax+0x16bc]
1002bcbc:	add    DWORD PTR [eax+0x14],ebp
1002bcbf:	mov    cl,0x10
1002bcc1:	sub    cl,bl
1002bcc3:	shr    si,cl
1002bcc6:	mov    ecx,DWORD PTR [esp+0x1c]
1002bcca:	lea    ecx,[ebx+ecx*1-0x10]
1002bcce:	mov    WORD PTR [eax+0x16b8],si
1002bcd5:	mov    esi,DWORD PTR [esp+0x10]
1002bcd9:	jmp    0x1002bcf2
1002bcdb:	mov    di,WORD PTR [eax+0xac0]
1002bce2:	shl    di,cl
1002bce5:	or     WORD PTR [eax+0x16b8],di
1002bcec:	mov    edi,DWORD PTR [esp+0x1c]
1002bcf0:	add    ecx,edi
1002bcf2:	add    esi,0xfffffffd
1002bcf5:	cmp    ecx,0xd
1002bcf8:	mov    DWORD PTR [eax+0x16bc],ecx
1002bcfe:	jle    0x1002bd53
1002bd00:	mov    edi,esi
1002bd02:	shl    edi,cl
1002bd04:	mov    ecx,DWORD PTR [eax+0x8]
1002bd07:	or     WORD PTR [eax+0x16b8],di
1002bd0e:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bd15:	mov    edi,DWORD PTR [eax+0x14]
1002bd18:	mov    BYTE PTR [ecx+edi*1],bl
1002bd1b:	add    DWORD PTR [eax+0x14],ebp
1002bd1e:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bd25:	mov    edi,DWORD PTR [eax+0x14]
1002bd28:	mov    ecx,DWORD PTR [eax+0x8]
1002bd2b:	mov    BYTE PTR [edi+ecx*1],bl
1002bd2e:	mov    ebx,DWORD PTR [eax+0x16bc]
1002bd34:	add    DWORD PTR [eax+0x14],ebp
1002bd37:	mov    cl,0x10
1002bd39:	sub    cl,bl
1002bd3b:	shr    si,cl
1002bd3e:	add    ebx,0xfffffff3
1002bd41:	mov    DWORD PTR [eax+0x16bc],ebx
1002bd47:	mov    WORD PTR [eax+0x16b8],si
1002bd4e:	jmp    0x1002be56
1002bd53:	shl    esi,cl
1002bd55:	or     WORD PTR [eax+0x16b8],si
1002bd5c:	add    ecx,0x3
1002bd5f:	jmp    0x1002be50
1002bd64:	movzx  edi,WORD PTR [eax+0xac6]
1002bd6b:	sub    ebx,edi
1002bd6d:	cmp    ecx,ebx
1002bd6f:	mov    DWORD PTR [esp+0x1c],edi
1002bd73:	jle    0x1002bdcf
1002bd75:	movzx  esi,WORD PTR [eax+0xac4]
1002bd7c:	mov    edi,esi
1002bd7e:	shl    edi,cl
1002bd80:	mov    ecx,DWORD PTR [eax+0x8]
1002bd83:	or     WORD PTR [eax+0x16b8],di
1002bd8a:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bd91:	mov    edi,DWORD PTR [eax+0x14]
1002bd94:	mov    BYTE PTR [ecx+edi*1],bl
1002bd97:	add    DWORD PTR [eax+0x14],ebp
1002bd9a:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bda1:	mov    ecx,DWORD PTR [eax+0x8]
1002bda4:	mov    edi,DWORD PTR [eax+0x14]
1002bda7:	mov    BYTE PTR [edi+ecx*1],bl
1002bdaa:	mov    ebx,DWORD PTR [eax+0x16bc]
1002bdb0:	add    DWORD PTR [eax+0x14],ebp
1002bdb3:	mov    cl,0x10
1002bdb5:	sub    cl,bl
1002bdb7:	shr    si,cl
1002bdba:	mov    ecx,DWORD PTR [esp+0x1c]
1002bdbe:	lea    ecx,[ebx+ecx*1-0x10]
1002bdc2:	mov    WORD PTR [eax+0x16b8],si
1002bdc9:	mov    esi,DWORD PTR [esp+0x10]
1002bdcd:	jmp    0x1002bde6
1002bdcf:	mov    di,WORD PTR [eax+0xac4]
1002bdd6:	shl    di,cl
1002bdd9:	or     WORD PTR [eax+0x16b8],di
1002bde0:	mov    edi,DWORD PTR [esp+0x1c]
1002bde4:	add    ecx,edi
1002bde6:	add    esi,0xfffffff5
1002bde9:	cmp    ecx,0x9
1002bdec:	mov    DWORD PTR [eax+0x16bc],ecx
1002bdf2:	jle    0x1002be44
1002bdf4:	mov    edi,esi
1002bdf6:	shl    edi,cl
1002bdf8:	mov    ecx,DWORD PTR [eax+0x8]
1002bdfb:	or     WORD PTR [eax+0x16b8],di
1002be02:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002be09:	mov    edi,DWORD PTR [eax+0x14]
1002be0c:	mov    BYTE PTR [ecx+edi*1],bl
1002be0f:	add    DWORD PTR [eax+0x14],ebp
1002be12:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002be19:	mov    edi,DWORD PTR [eax+0x14]
1002be1c:	mov    ecx,DWORD PTR [eax+0x8]
1002be1f:	mov    BYTE PTR [edi+ecx*1],bl
1002be22:	mov    ebx,DWORD PTR [eax+0x16bc]
1002be28:	add    DWORD PTR [eax+0x14],ebp
1002be2b:	mov    cl,0x10
1002be2d:	sub    cl,bl
1002be2f:	shr    si,cl
1002be32:	add    ebx,0xfffffff7
1002be35:	mov    DWORD PTR [eax+0x16bc],ebx
1002be3b:	mov    WORD PTR [eax+0x16b8],si
1002be42:	jmp    0x1002be56
1002be44:	shl    esi,cl
1002be46:	or     WORD PTR [eax+0x16b8],si
1002be4d:	add    ecx,0x7
1002be50:	mov    DWORD PTR [eax+0x16bc],ecx
1002be56:	mov    ecx,DWORD PTR [esp+0x14]
1002be5a:	xor    esi,esi
1002be5c:	test   ecx,ecx
1002be5e:	mov    DWORD PTR [esp+0x1c],edx
1002be62:	jne    0x1002be6e
1002be64:	mov    ecx,0x8a
1002be69:	lea    edi,[esi+0x3]
1002be6c:	jmp    0x1002be84
1002be6e:	cmp    edx,ecx
1002be70:	jne    0x1002be7c
1002be72:	mov    ecx,0x6
1002be77:	lea    edi,[ecx-0x3]
1002be7a:	jmp    0x1002be84
1002be7c:	mov    ecx,0x7
1002be81:	lea    edi,[ecx-0x3]
1002be84:	add    DWORD PTR [esp+0x18],0x4
1002be89:	sub    DWORD PTR [esp+0x20],ebp
1002be8d:	jne    0x1002b9e0
1002be93:	pop    edi
1002be94:	pop    esi
1002be95:	pop    ebp
1002be96:	pop    ebx
1002be97:	add    esp,0x18
1002be9a:	ret    
1002be9b:	int3   
1002be9c:	int3   
1002be9d:	int3   
1002be9e:	int3   
1002be9f:	int3   
1002bea0:	push   ecx
1002bea1:	mov    ecx,DWORD PTR [eax+0x16bc]
1002bea7:	cmp    ecx,0xb
1002beaa:	push   ebx
1002beab:	mov    ebx,DWORD PTR [esp+0x14]
1002beaf:	push   ebp
1002beb0:	push   esi
1002beb1:	push   edi
1002beb2:	mov    ebp,0x1
1002beb7:	jle    0x1002bf17
1002beb9:	mov    esi,DWORD PTR [esp+0x18]
1002bebd:	add    esi,0xfffffeff
1002bec3:	mov    edx,esi
1002bec5:	shl    edx,cl
1002bec7:	mov    ecx,DWORD PTR [eax+0x14]
1002beca:	or     WORD PTR [eax+0x16b8],dx
1002bed1:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bed8:	mov    edx,DWORD PTR [eax+0x8]
1002bedb:	mov    BYTE PTR [ecx+edx*1],bl
1002bede:	add    DWORD PTR [eax+0x14],ebp
1002bee1:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bee8:	mov    ecx,DWORD PTR [eax+0x14]
1002beeb:	mov    edx,DWORD PTR [eax+0x8]
1002beee:	mov    BYTE PTR [ecx+edx*1],bl
1002bef1:	mov    edx,DWORD PTR [eax+0x16bc]
1002bef7:	add    DWORD PTR [eax+0x14],ebp
1002befa:	mov    ebx,DWORD PTR [esp+0x20]
1002befe:	mov    cl,0x10
1002bf00:	sub    cl,dl
1002bf02:	shr    si,cl
1002bf05:	add    edx,0xfffffff5
1002bf08:	mov    DWORD PTR [eax+0x16bc],edx
1002bf0e:	mov    WORD PTR [eax+0x16b8],si
1002bf15:	jmp    0x1002bf33
1002bf17:	mov    edx,DWORD PTR [esp+0x18]
1002bf1b:	add    edx,0xfffffeff
1002bf21:	shl    edx,cl
1002bf23:	or     WORD PTR [eax+0x16b8],dx
1002bf2a:	add    ecx,0x5
1002bf2d:	mov    DWORD PTR [eax+0x16bc],ecx
1002bf33:	mov    ecx,DWORD PTR [eax+0x16bc]
1002bf39:	cmp    ecx,0xb
1002bf3c:	jle    0x1002bf9d
1002bf3e:	mov    esi,DWORD PTR [esp+0x1c]
1002bf42:	add    esi,0xffffffff
1002bf45:	mov    edx,esi
1002bf47:	shl    edx,cl
1002bf49:	mov    ecx,DWORD PTR [eax+0x14]
1002bf4c:	mov    DWORD PTR [esp+0x10],ebx
1002bf50:	or     WORD PTR [eax+0x16b8],dx
1002bf57:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bf5e:	mov    edx,DWORD PTR [eax+0x8]
1002bf61:	mov    BYTE PTR [ecx+edx*1],bl
1002bf64:	add    DWORD PTR [eax+0x14],ebp
1002bf67:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bf6e:	mov    ecx,DWORD PTR [eax+0x14]
1002bf71:	mov    edx,DWORD PTR [eax+0x8]
1002bf74:	mov    BYTE PTR [ecx+edx*1],bl
1002bf77:	mov    edx,DWORD PTR [eax+0x16bc]
1002bf7d:	add    DWORD PTR [eax+0x14],ebp
1002bf80:	mov    ebx,DWORD PTR [esp+0x10]
1002bf84:	mov    cl,0x10
1002bf86:	sub    cl,dl
1002bf88:	shr    si,cl
1002bf8b:	add    edx,0xfffffff5
1002bf8e:	mov    DWORD PTR [eax+0x16bc],edx
1002bf94:	mov    WORD PTR [eax+0x16b8],si
1002bf9b:	jmp    0x1002bfb6
1002bf9d:	mov    edx,DWORD PTR [esp+0x1c]
1002bfa1:	add    edx,0xffffffff
1002bfa4:	shl    edx,cl
1002bfa6:	or     WORD PTR [eax+0x16b8],dx
1002bfad:	add    ecx,0x5
1002bfb0:	mov    DWORD PTR [eax+0x16bc],ecx
1002bfb6:	mov    ecx,DWORD PTR [eax+0x16bc]
1002bfbc:	cmp    ecx,0xc
1002bfbf:	jle    0x1002c01c
1002bfc1:	lea    esi,[ebx-0x4]
1002bfc4:	mov    edx,esi
1002bfc6:	shl    edx,cl
1002bfc8:	mov    ecx,DWORD PTR [eax+0x14]
1002bfcb:	mov    DWORD PTR [esp+0x10],ebx
1002bfcf:	or     WORD PTR [eax+0x16b8],dx
1002bfd6:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002bfdd:	mov    edx,DWORD PTR [eax+0x8]
1002bfe0:	mov    BYTE PTR [ecx+edx*1],bl
1002bfe3:	add    DWORD PTR [eax+0x14],ebp
1002bfe6:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002bfed:	mov    ecx,DWORD PTR [eax+0x14]
1002bff0:	mov    edx,DWORD PTR [eax+0x8]
1002bff3:	mov    BYTE PTR [ecx+edx*1],bl
1002bff6:	mov    edx,DWORD PTR [eax+0x16bc]
1002bffc:	add    DWORD PTR [eax+0x14],ebp
1002bfff:	mov    ebx,DWORD PTR [esp+0x10]
1002c003:	mov    cl,0x10
1002c005:	sub    cl,dl
1002c007:	shr    si,cl
1002c00a:	add    edx,0xfffffff4
1002c00d:	mov    DWORD PTR [eax+0x16bc],edx
1002c013:	mov    WORD PTR [eax+0x16b8],si
1002c01a:	jmp    0x1002c031
1002c01c:	lea    edx,[ebx-0x4]
1002c01f:	shl    edx,cl
1002c021:	or     WORD PTR [eax+0x16b8],dx
1002c028:	add    ecx,0x4
1002c02b:	mov    DWORD PTR [eax+0x16bc],ecx
1002c031:	xor    edi,edi
1002c033:	test   ebx,ebx
1002c035:	jle    0x1002c0d3
1002c03b:	jmp    0x1002c040
1002c03d:	lea    ecx,[ecx+0x0]
1002c040:	mov    ecx,DWORD PTR [eax+0x16bc]
1002c046:	cmp    ecx,0xd
1002c049:	movzx  edx,BYTE PTR [edi+0x100b6e24]
1002c050:	jle    0x1002c0ae
1002c052:	movzx  esi,WORD PTR [eax+edx*4+0xa7e]
1002c05a:	mov    edx,esi
1002c05c:	shl    edx,cl
1002c05e:	mov    ecx,DWORD PTR [eax+0x14]
1002c061:	or     WORD PTR [eax+0x16b8],dx
1002c068:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c06f:	mov    edx,DWORD PTR [eax+0x8]
1002c072:	mov    BYTE PTR [ecx+edx*1],bl
1002c075:	add    DWORD PTR [eax+0x14],ebp
1002c078:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c07f:	mov    ecx,DWORD PTR [eax+0x14]
1002c082:	mov    edx,DWORD PTR [eax+0x8]
1002c085:	mov    BYTE PTR [ecx+edx*1],bl
1002c088:	mov    edx,DWORD PTR [eax+0x16bc]
1002c08e:	add    DWORD PTR [eax+0x14],ebp
1002c091:	mov    ebx,DWORD PTR [esp+0x20]
1002c095:	mov    cl,0x10
1002c097:	sub    cl,dl
1002c099:	shr    si,cl
1002c09c:	add    edx,0xfffffff3
1002c09f:	mov    DWORD PTR [eax+0x16bc],edx
1002c0a5:	mov    WORD PTR [eax+0x16b8],si
1002c0ac:	jmp    0x1002c0c9
1002c0ae:	mov    dx,WORD PTR [eax+edx*4+0xa7e]
1002c0b6:	shl    dx,cl
1002c0b9:	or     WORD PTR [eax+0x16b8],dx
1002c0c0:	add    ecx,0x3
1002c0c3:	mov    DWORD PTR [eax+0x16bc],ecx
1002c0c9:	add    edi,ebp
1002c0cb:	cmp    edi,ebx
1002c0cd:	jl     0x1002c040
1002c0d3:	mov    ecx,DWORD PTR [esp+0x18]
1002c0d7:	add    ecx,0xffffffff
1002c0da:	lea    edx,[eax+0x94]
1002c0e0:	call   0x1002b990
1002c0e5:	mov    ecx,DWORD PTR [esp+0x1c]
1002c0e9:	pop    edi
1002c0ea:	pop    esi
1002c0eb:	pop    ebp
1002c0ec:	add    ecx,0xffffffff
1002c0ef:	lea    edx,[eax+0x988]
1002c0f5:	pop    ebx
1002c0f6:	add    esp,0x4
1002c0f9:	jmp    0x1002b990
1002c0fe:	int3   
1002c0ff:	int3   
1002c100:	sub    esp,0xc
1002c103:	push   ebx
1002c104:	mov    ebx,DWORD PTR [esp+0x14]
1002c108:	push   ebp
1002c109:	xor    ecx,ecx
1002c10b:	cmp    DWORD PTR [eax+0x16a0],ecx
1002c111:	push   esi
1002c112:	push   edi
1002c113:	je     0x1002c452
1002c119:	lea    esp,[esp+0x0]
1002c120:	mov    edx,DWORD PTR [eax+0x16a4]
1002c126:	movzx  ebp,WORD PTR [edx+ecx*2]
1002c12a:	mov    edx,DWORD PTR [eax+0x1698]
1002c130:	movzx  esi,BYTE PTR [ecx+edx*1]
1002c134:	add    ecx,0x1
1002c137:	test   ebp,ebp
1002c139:	mov    DWORD PTR [esp+0x18],ecx
1002c13d:	mov    ecx,DWORD PTR [eax+0x16bc]
1002c143:	jne    0x1002c1ca
1002c149:	movzx  edi,WORD PTR [ebx+esi*4+0x2]
1002c14e:	mov    edx,0x10
1002c153:	sub    edx,edi
1002c155:	cmp    ecx,edx
1002c157:	jle    0x1002c1b5
1002c159:	movzx  esi,WORD PTR [ebx+esi*4]
1002c15d:	mov    edx,esi
1002c15f:	shl    edx,cl
1002c161:	mov    ecx,DWORD PTR [eax+0x8]
1002c164:	mov    DWORD PTR [esp+0x10],ebx
1002c168:	or     WORD PTR [eax+0x16b8],dx
1002c16f:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c176:	mov    edx,DWORD PTR [eax+0x14]
1002c179:	mov    BYTE PTR [ecx+edx*1],bl
1002c17c:	add    DWORD PTR [eax+0x14],0x1
1002c180:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c187:	mov    ecx,DWORD PTR [eax+0x14]
1002c18a:	mov    edx,DWORD PTR [eax+0x8]
1002c18d:	mov    BYTE PTR [ecx+edx*1],bl
1002c190:	mov    edx,DWORD PTR [eax+0x16bc]
1002c196:	add    DWORD PTR [eax+0x14],0x1
1002c19a:	mov    ebx,DWORD PTR [esp+0x10]
1002c19e:	mov    cl,0x10
1002c1a0:	sub    cl,dl
1002c1a2:	shr    si,cl
1002c1a5:	lea    ecx,[edx+edi*1-0x10]
1002c1a9:	mov    WORD PTR [eax+0x16b8],si
1002c1b0:	jmp    0x1002c43c
1002c1b5:	mov    dx,WORD PTR [ebx+esi*4]
1002c1b9:	shl    dx,cl
1002c1bc:	or     WORD PTR [eax+0x16b8],dx
1002c1c3:	add    ecx,edi
1002c1c5:	jmp    0x1002c43c
1002c1ca:	movzx  edx,BYTE PTR [esi+0x100b75f8]
1002c1d1:	movzx  edi,WORD PTR [ebx+edx*4+0x406]
1002c1d9:	mov    ebx,0x10
1002c1de:	sub    ebx,edi
1002c1e0:	cmp    ecx,ebx
1002c1e2:	mov    DWORD PTR [esp+0x10],edi
1002c1e6:	mov    edi,DWORD PTR [esp+0x20]
1002c1ea:	mov    DWORD PTR [esp+0x14],edx
1002c1ee:	jle    0x1002c253
1002c1f0:	movzx  edi,WORD PTR [edi+edx*4+0x404]
1002c1f8:	mov    edx,edi
1002c1fa:	shl    edx,cl
1002c1fc:	mov    ecx,DWORD PTR [eax+0x8]
1002c1ff:	or     WORD PTR [eax+0x16b8],dx
1002c206:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c20d:	mov    edx,DWORD PTR [eax+0x14]
1002c210:	mov    BYTE PTR [ecx+edx*1],bl
1002c213:	add    DWORD PTR [eax+0x14],0x1
1002c217:	mov    ecx,DWORD PTR [eax+0x14]
1002c21a:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c221:	mov    edx,DWORD PTR [eax+0x8]
1002c224:	mov    BYTE PTR [ecx+edx*1],bl
1002c227:	mov    edx,DWORD PTR [eax+0x16bc]
1002c22d:	add    DWORD PTR [eax+0x14],0x1
1002c231:	mov    cl,0x10
1002c233:	sub    cl,dl
1002c235:	shr    di,cl
1002c238:	mov    ecx,DWORD PTR [esp+0x10]
1002c23c:	lea    edx,[edx+ecx*1-0x10]
1002c240:	mov    DWORD PTR [eax+0x16bc],edx
1002c246:	mov    edx,DWORD PTR [esp+0x14]
1002c24a:	mov    WORD PTR [eax+0x16b8],di
1002c251:	jmp    0x1002c271
1002c253:	mov    di,WORD PTR [edi+edx*4+0x404]
1002c25b:	shl    di,cl
1002c25e:	or     WORD PTR [eax+0x16b8],di
1002c265:	mov    edi,DWORD PTR [esp+0x10]
1002c269:	add    ecx,edi
1002c26b:	mov    DWORD PTR [eax+0x16bc],ecx
1002c271:	mov    edi,DWORD PTR [edx*4+0x100b6db0]
1002c278:	test   edi,edi
1002c27a:	mov    ebx,DWORD PTR [esp+0x20]
1002c27e:	je     0x1002c2fa
1002c280:	sub    esi,DWORD PTR [edx*4+0x100b76f8]
1002c287:	mov    ecx,DWORD PTR [eax+0x16bc]
1002c28d:	mov    edx,0x10
1002c292:	sub    edx,edi
1002c294:	cmp    ecx,edx
1002c296:	jle    0x1002c2e9
1002c298:	mov    edx,esi
1002c29a:	shl    edx,cl
1002c29c:	mov    ecx,DWORD PTR [eax+0x8]
1002c29f:	or     WORD PTR [eax+0x16b8],dx
1002c2a6:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c2ad:	mov    edx,DWORD PTR [eax+0x14]
1002c2b0:	mov    BYTE PTR [ecx+edx*1],bl
1002c2b3:	add    DWORD PTR [eax+0x14],0x1
1002c2b7:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c2be:	mov    ecx,DWORD PTR [eax+0x14]
1002c2c1:	mov    edx,DWORD PTR [eax+0x8]
1002c2c4:	mov    BYTE PTR [ecx+edx*1],bl
1002c2c7:	mov    edx,DWORD PTR [eax+0x16bc]
1002c2cd:	add    DWORD PTR [eax+0x14],0x1
1002c2d1:	mov    ebx,DWORD PTR [esp+0x20]
1002c2d5:	mov    cl,0x10
1002c2d7:	sub    cl,dl
1002c2d9:	shr    si,cl
1002c2dc:	lea    ecx,[edx+edi*1-0x10]
1002c2e0:	mov    WORD PTR [eax+0x16b8],si
1002c2e7:	jmp    0x1002c2f4
1002c2e9:	shl    esi,cl
1002c2eb:	or     WORD PTR [eax+0x16b8],si
1002c2f2:	add    ecx,edi
1002c2f4:	mov    DWORD PTR [eax+0x16bc],ecx
1002c2fa:	sub    ebp,0x1
1002c2fd:	cmp    ebp,0x100
1002c303:	jae    0x1002c30e
1002c305:	movzx  edi,BYTE PTR [ebp+0x100b73f8]
1002c30c:	jmp    0x1002c31a
1002c30e:	mov    edx,ebp
1002c310:	shr    edx,0x7
1002c313:	movzx  edi,BYTE PTR [edx+0x100b74f8]
1002c31a:	mov    ecx,DWORD PTR [esp+0x24]
1002c31e:	movzx  edx,WORD PTR [ecx+edi*4+0x2]
1002c323:	mov    ecx,DWORD PTR [eax+0x16bc]
1002c329:	mov    esi,0x10
1002c32e:	sub    esi,edx
1002c330:	cmp    ecx,esi
1002c332:	mov    DWORD PTR [esp+0x14],edx
1002c336:	jle    0x1002c39b
1002c338:	mov    edx,DWORD PTR [esp+0x24]
1002c33c:	movzx  esi,WORD PTR [edx+edi*4]
1002c340:	mov    edx,esi
1002c342:	shl    edx,cl
1002c344:	mov    ecx,DWORD PTR [eax+0x8]
1002c347:	or     WORD PTR [eax+0x16b8],dx
1002c34e:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c355:	mov    edx,DWORD PTR [eax+0x14]
1002c358:	mov    BYTE PTR [ecx+edx*1],bl
1002c35b:	add    DWORD PTR [eax+0x14],0x1
1002c35f:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c366:	mov    ecx,DWORD PTR [eax+0x14]
1002c369:	mov    edx,DWORD PTR [eax+0x8]
1002c36c:	mov    BYTE PTR [ecx+edx*1],bl
1002c36f:	mov    edx,DWORD PTR [eax+0x16bc]
1002c375:	add    DWORD PTR [eax+0x14],0x1
1002c379:	mov    ebx,DWORD PTR [esp+0x20]
1002c37d:	mov    cl,0x10
1002c37f:	sub    cl,dl
1002c381:	shr    si,cl
1002c384:	mov    ecx,DWORD PTR [esp+0x14]
1002c388:	lea    edx,[edx+ecx*1-0x10]
1002c38c:	mov    DWORD PTR [eax+0x16bc],edx
1002c392:	mov    WORD PTR [eax+0x16b8],si
1002c399:	jmp    0x1002c3b5
1002c39b:	mov    esi,DWORD PTR [esp+0x24]
1002c39f:	mov    si,WORD PTR [esi+edi*4]
1002c3a3:	shl    si,cl
1002c3a6:	or     WORD PTR [eax+0x16b8],si
1002c3ad:	add    ecx,edx
1002c3af:	mov    DWORD PTR [eax+0x16bc],ecx
1002c3b5:	mov    esi,DWORD PTR [edi*4+0x100b6e38]
1002c3bc:	test   esi,esi
1002c3be:	je     0x1002c442
1002c3c4:	mov    ecx,DWORD PTR [eax+0x16bc]
1002c3ca:	sub    ebp,DWORD PTR [edi*4+0x100b7770]
1002c3d1:	mov    edx,0x10
1002c3d6:	sub    edx,esi
1002c3d8:	cmp    ecx,edx
1002c3da:	jle    0x1002c431
1002c3dc:	mov    edx,ebp
1002c3de:	shl    edx,cl
1002c3e0:	mov    ecx,DWORD PTR [eax+0x8]
1002c3e3:	mov    DWORD PTR [esp+0x14],ebx
1002c3e7:	or     WORD PTR [eax+0x16b8],dx
1002c3ee:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c3f5:	mov    edx,DWORD PTR [eax+0x14]
1002c3f8:	mov    BYTE PTR [ecx+edx*1],bl
1002c3fb:	add    DWORD PTR [eax+0x14],0x1
1002c3ff:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c406:	mov    ecx,DWORD PTR [eax+0x14]
1002c409:	mov    edx,DWORD PTR [eax+0x8]
1002c40c:	mov    BYTE PTR [ecx+edx*1],bl
1002c40f:	mov    edx,DWORD PTR [eax+0x16bc]
1002c415:	add    DWORD PTR [eax+0x14],0x1
1002c419:	mov    ebx,DWORD PTR [esp+0x14]
1002c41d:	mov    cl,0x10
1002c41f:	sub    cl,dl
1002c421:	shr    bp,cl
1002c424:	lea    ecx,[edx+esi*1-0x10]
1002c428:	mov    WORD PTR [eax+0x16b8],bp
1002c42f:	jmp    0x1002c43c
1002c431:	shl    ebp,cl
1002c433:	or     WORD PTR [eax+0x16b8],bp
1002c43a:	add    ecx,esi
1002c43c:	mov    DWORD PTR [eax+0x16bc],ecx
1002c442:	mov    ecx,DWORD PTR [esp+0x18]
1002c446:	cmp    ecx,DWORD PTR [eax+0x16a0]
1002c44c:	jb     0x1002c120
1002c452:	movzx  edi,WORD PTR [ebx+0x402]
1002c459:	mov    ecx,DWORD PTR [eax+0x16bc]
1002c45f:	mov    edx,0x10
1002c464:	sub    edx,edi
1002c466:	cmp    ecx,edx
1002c468:	jle    0x1002c4dd
1002c46a:	movzx  esi,WORD PTR [ebx+0x400]
1002c471:	mov    edx,esi
1002c473:	shl    edx,cl
1002c475:	mov    ecx,DWORD PTR [eax+0x8]
1002c478:	mov    DWORD PTR [esp+0x20],ebx
1002c47c:	or     WORD PTR [eax+0x16b8],dx
1002c483:	mov    edx,DWORD PTR [eax+0x14]
1002c486:	mov    bl,BYTE PTR [eax+0x16b8]
1002c48c:	mov    BYTE PTR [ecx+edx*1],bl
1002c48f:	add    DWORD PTR [eax+0x14],0x1
1002c493:	mov    ebp,DWORD PTR [eax+0x14]
1002c496:	mov    ecx,DWORD PTR [eax+0x8]
1002c499:	mov    dl,BYTE PTR [eax+0x16b9]
1002c49f:	mov    ebx,DWORD PTR [esp+0x20]
1002c4a3:	mov    BYTE PTR [ecx+ebp*1],dl
1002c4a6:	mov    edx,DWORD PTR [eax+0x16bc]
1002c4ac:	add    DWORD PTR [eax+0x14],0x1
1002c4b0:	mov    cl,0x10
1002c4b2:	sub    cl,dl
1002c4b4:	shr    si,cl
1002c4b7:	lea    ecx,[edx+edi*1-0x10]
1002c4bb:	pop    edi
1002c4bc:	mov    DWORD PTR [eax+0x16bc],ecx
1002c4c2:	mov    WORD PTR [eax+0x16b8],si
1002c4c9:	movzx  edx,WORD PTR [ebx+0x402]
1002c4d0:	pop    esi
1002c4d1:	pop    ebp
1002c4d2:	mov    DWORD PTR [eax+0x16b4],edx
1002c4d8:	pop    ebx
1002c4d9:	add    esp,0xc
1002c4dc:	ret    
1002c4dd:	mov    dx,WORD PTR [ebx+0x400]
1002c4e4:	shl    dx,cl
1002c4e7:	or     WORD PTR [eax+0x16b8],dx
1002c4ee:	add    ecx,edi
1002c4f0:	pop    edi
1002c4f1:	mov    DWORD PTR [eax+0x16bc],ecx
1002c4f7:	movzx  ecx,WORD PTR [ebx+0x402]
1002c4fe:	pop    esi
1002c4ff:	pop    ebp
1002c500:	mov    DWORD PTR [eax+0x16b4],ecx
1002c506:	pop    ebx
1002c507:	add    esp,0xc
1002c50a:	ret    
1002c50b:	int3   
1002c50c:	int3   
1002c50d:	int3   
1002c50e:	int3   
1002c50f:	int3   
1002c510:	xor    eax,eax
1002c512:	lea    ecx,[edx+0x94]
1002c518:	cmp    WORD PTR [ecx],0x0
1002c51c:	jne    0x1002c529
1002c51e:	add    eax,0x1
1002c521:	add    ecx,0x4
1002c524:	cmp    eax,0x9
1002c527:	jl     0x1002c518
1002c529:	cmp    eax,0x9
1002c52c:	jne    0x1002c5cd
1002c532:	mov    eax,0xe
1002c537:	lea    ecx,[edx+0xd0]
1002c53d:	lea    ecx,[ecx+0x0]
1002c540:	cmp    WORD PTR [ecx-0x4],0x0
1002c545:	jne    0x1002c5cd
1002c54b:	cmp    WORD PTR [ecx],0x0
1002c54f:	jne    0x1002c586
1002c551:	cmp    WORD PTR [ecx+0x4],0x0
1002c556:	jne    0x1002c597
1002c558:	cmp    WORD PTR [ecx+0x8],0x0
1002c55d:	jne    0x1002c5a8
1002c55f:	cmp    WORD PTR [ecx+0xc],0x0
1002c564:	jne    0x1002c5b9
1002c566:	cmp    WORD PTR [ecx+0x10],0x0
1002c56b:	jne    0x1002c5ca
1002c56d:	add    eax,0x6
1002c570:	add    ecx,0x18
1002c573:	cmp    eax,0x20
1002c576:	jl     0x1002c540
1002c578:	mov    edx,DWORD PTR [edx]
1002c57a:	xor    ecx,ecx
1002c57c:	cmp    eax,0x20
1002c57f:	sete   cl
1002c582:	mov    DWORD PTR [edx+0x2c],ecx
1002c585:	ret    
1002c586:	mov    edx,DWORD PTR [edx]
1002c588:	xor    ecx,ecx
1002c58a:	add    eax,0x1
1002c58d:	cmp    eax,0x20
1002c590:	sete   cl
1002c593:	mov    DWORD PTR [edx+0x2c],ecx
1002c596:	ret    
1002c597:	mov    edx,DWORD PTR [edx]
1002c599:	xor    ecx,ecx
1002c59b:	add    eax,0x2
1002c59e:	cmp    eax,0x20
1002c5a1:	sete   cl
1002c5a4:	mov    DWORD PTR [edx+0x2c],ecx
1002c5a7:	ret    
1002c5a8:	mov    edx,DWORD PTR [edx]
1002c5aa:	xor    ecx,ecx
1002c5ac:	add    eax,0x3
1002c5af:	cmp    eax,0x20
1002c5b2:	sete   cl
1002c5b5:	mov    DWORD PTR [edx+0x2c],ecx
1002c5b8:	ret    
1002c5b9:	mov    edx,DWORD PTR [edx]
1002c5bb:	xor    ecx,ecx
1002c5bd:	add    eax,0x4
1002c5c0:	cmp    eax,0x20
1002c5c3:	sete   cl
1002c5c6:	mov    DWORD PTR [edx+0x2c],ecx
1002c5c9:	ret    
1002c5ca:	add    eax,0x5
1002c5cd:	mov    edx,DWORD PTR [edx]
1002c5cf:	xor    ecx,ecx
1002c5d1:	cmp    eax,0x20
1002c5d4:	sete   cl
1002c5d7:	mov    DWORD PTR [edx+0x2c],ecx
1002c5da:	ret    
1002c5db:	int3   
1002c5dc:	int3   
1002c5dd:	int3   
1002c5de:	int3   
1002c5df:	int3   
1002c5e0:	xor    eax,eax
1002c5e2:	push   esi
1002c5e3:	mov    esi,ecx
1002c5e5:	and    esi,0x1
1002c5e8:	or     eax,esi
1002c5ea:	sub    edx,0x1
1002c5ed:	shr    ecx,1
1002c5ef:	add    eax,eax
1002c5f1:	test   edx,edx
1002c5f3:	jg     0x1002c5e3
1002c5f5:	shr    eax,1
1002c5f7:	pop    esi
1002c5f8:	ret    
1002c5f9:	int3   
1002c5fa:	int3   
1002c5fb:	int3   
1002c5fc:	int3   
1002c5fd:	int3   
1002c5fe:	int3   
1002c5ff:	int3   
1002c600:	mov    edx,DWORD PTR [eax+0x16bc]
1002c606:	cmp    edx,0x8
1002c609:	push   ebx
1002c60a:	push   esi
1002c60b:	jle    0x1002c64a
1002c60d:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002c614:	mov    edx,DWORD PTR [eax+0x14]
1002c617:	mov    ecx,DWORD PTR [eax+0x8]
1002c61a:	mov    BYTE PTR [ecx+edx*1],bl
1002c61d:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002c624:	mov    edx,DWORD PTR [eax+0x8]
1002c627:	mov    esi,0x1
1002c62c:	add    DWORD PTR [eax+0x14],esi
1002c62f:	mov    ecx,DWORD PTR [eax+0x14]
1002c632:	mov    BYTE PTR [ecx+edx*1],bl
1002c635:	add    DWORD PTR [eax+0x14],esi
1002c638:	xor    ecx,ecx
1002c63a:	pop    esi
1002c63b:	mov    WORD PTR [eax+0x16b8],cx
1002c642:	mov    DWORD PTR [eax+0x16bc],ecx
1002c648:	pop    ebx
1002c649:	ret    
1002c64a:	xor    ecx,ecx
1002c64c:	cmp    edx,ecx
1002c64e:	jle    0x1002c663
1002c650:	mov    esi,DWORD PTR [eax+0x14]
1002c653:	mov    edx,DWORD PTR [eax+0x8]
1002c656:	mov    bl,BYTE PTR [eax+0x16b8]
1002c65c:	mov    BYTE PTR [edx+esi*1],bl
1002c65f:	add    DWORD PTR [eax+0x14],0x1
1002c663:	pop    esi
1002c664:	mov    WORD PTR [eax+0x16b8],cx
1002c66b:	mov    DWORD PTR [eax+0x16bc],ecx
1002c671:	pop    ebx
1002c672:	ret    
1002c673:	int3   
1002c674:	int3   
1002c675:	int3   
1002c676:	int3   
1002c677:	int3   
1002c678:	int3   
1002c679:	int3   
1002c67a:	int3   
1002c67b:	int3   
1002c67c:	int3   
1002c67d:	int3   
1002c67e:	int3   
1002c67f:	int3   
1002c680:	push   ebx
1002c681:	push   esi
1002c682:	push   edi
1002c683:	mov    ebx,ecx
1002c685:	mov    esi,edx
1002c687:	call   0x1002c600
1002c68c:	cmp    DWORD PTR [esp+0x10],0x0
1002c691:	mov    DWORD PTR [eax+0x16b4],0x8
1002c69b:	mov    edi,0x1
1002c6a0:	je     0x1002c6dc
1002c6a2:	mov    ecx,DWORD PTR [eax+0x14]
1002c6a5:	mov    edx,DWORD PTR [eax+0x8]
1002c6a8:	mov    BYTE PTR [ecx+edx*1],bl
1002c6ab:	add    DWORD PTR [eax+0x14],edi
1002c6ae:	mov    ecx,DWORD PTR [eax+0x14]
1002c6b1:	mov    edx,DWORD PTR [eax+0x8]
1002c6b4:	mov    BYTE PTR [ecx+edx*1],bh
1002c6b7:	add    DWORD PTR [eax+0x14],edi
1002c6ba:	mov    edx,DWORD PTR [eax+0x8]
1002c6bd:	push   ebp
1002c6be:	mov    ebp,DWORD PTR [eax+0x14]
1002c6c1:	mov    cl,bl
1002c6c3:	not    cl
1002c6c5:	mov    BYTE PTR [edx+ebp*1],cl
1002c6c8:	add    DWORD PTR [eax+0x14],edi
1002c6cb:	mov    ebp,DWORD PTR [eax+0x14]
1002c6ce:	mov    edx,DWORD PTR [eax+0x8]
1002c6d1:	mov    ecx,ebx
1002c6d3:	not    ecx
1002c6d5:	mov    BYTE PTR [edx+ebp*1],ch
1002c6d8:	add    DWORD PTR [eax+0x14],edi
1002c6db:	pop    ebp
1002c6dc:	test   ebx,ebx
1002c6de:	je     0x1002c6fe
1002c6e0:	mov    ecx,DWORD PTR [eax+0x14]
1002c6e3:	mov    edx,DWORD PTR [eax+0x8]
1002c6e6:	sub    ebx,edi
1002c6e8:	mov    DWORD PTR [esp+0x10],ebx
1002c6ec:	mov    bl,BYTE PTR [esi]
1002c6ee:	mov    BYTE PTR [ecx+edx*1],bl
1002c6f1:	mov    ebx,DWORD PTR [esp+0x10]
1002c6f5:	add    DWORD PTR [eax+0x14],edi
1002c6f8:	add    esi,edi
1002c6fa:	test   ebx,ebx
1002c6fc:	jne    0x1002c6e0
1002c6fe:	pop    edi
1002c6ff:	pop    esi
1002c700:	pop    ebx
1002c701:	ret    
1002c702:	int3   
1002c703:	int3   
1002c704:	int3   
1002c705:	int3   
1002c706:	int3   
1002c707:	int3   
1002c708:	int3   
1002c709:	int3   
1002c70a:	int3   
1002c70b:	int3   
1002c70c:	int3   
1002c70d:	int3   
1002c70e:	int3   
1002c70f:	int3   
1002c710:	sub    esp,0x24
1002c713:	mov    eax,ds:0x100c7654
1002c718:	xor    eax,esp
1002c71a:	mov    DWORD PTR [esp+0x20],eax
1002c71e:	push   esi
1002c71f:	lea    esi,[esp+0x6]
1002c723:	xor    ecx,ecx
1002c725:	mov    eax,0x1
1002c72a:	sub    edx,esi
1002c72c:	lea    esp,[esp+0x0]
1002c730:	lea    esi,[edx+eax*2]
1002c733:	mov    si,WORD PTR [esp+esi*1+0x4]
1002c738:	add    si,cx
1002c73b:	add    si,si
1002c73e:	movzx  ecx,si
1002c741:	mov    WORD PTR [esp+eax*2+0x4],cx
1002c746:	add    eax,0x1
1002c749:	cmp    eax,0xf
1002c74c:	jle    0x1002c730
1002c74e:	xor    esi,esi
1002c750:	test   ebx,ebx
1002c752:	jl     0x1002c77d
1002c754:	movzx  edx,WORD PTR [edi+esi*4+0x2]
1002c759:	test   edx,edx
1002c75b:	je     0x1002c776
1002c75d:	movzx  eax,WORD PTR [esp+edx*2+0x4]
1002c762:	movzx  ecx,ax
1002c765:	add    eax,0x1
1002c768:	mov    WORD PTR [esp+edx*2+0x4],ax
1002c76d:	call   0x1002c5e0
1002c772:	mov    WORD PTR [edi+esi*4],ax
1002c776:	add    esi,0x1
1002c779:	cmp    esi,ebx
1002c77b:	jle    0x1002c754
1002c77d:	mov    ecx,DWORD PTR [esp+0x24]
1002c781:	pop    esi
1002c782:	xor    ecx,esp
1002c784:	call   0x10018773
1002c789:	add    esp,0x24
1002c78c:	ret    
1002c78d:	int3   
1002c78e:	int3   
1002c78f:	int3   
1002c790:	sub    esp,0x8
1002c793:	mov    eax,DWORD PTR [esp+0xc]
1002c797:	push   ebx
1002c798:	push   ebp
1002c799:	push   edi
1002c79a:	mov    edi,DWORD PTR [eax]
1002c79c:	mov    eax,DWORD PTR [eax+0x8]
1002c79f:	mov    ecx,DWORD PTR [eax+0xc]
1002c7a2:	mov    ebp,DWORD PTR [eax]
1002c7a4:	xor    edx,edx
1002c7a6:	or     ebx,0xffffffff
1002c7a9:	xor    eax,eax
1002c7ab:	cmp    ecx,edx
1002c7ad:	mov    DWORD PTR [esp+0x10],ecx
1002c7b1:	mov    DWORD PTR [esp+0xc],ebx
1002c7b5:	mov    DWORD PTR [esi+0x1450],edx
1002c7bb:	mov    DWORD PTR [esi+0x1454],0x23d
1002c7c5:	jle    0x1002c7fe
1002c7c7:	cmp    WORD PTR [edi+eax*4],dx
1002c7cb:	je     0x1002c7f0
1002c7cd:	add    DWORD PTR [esi+0x1450],0x1
1002c7d4:	mov    ecx,DWORD PTR [esi+0x1450]
1002c7da:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
1002c7e1:	mov    DWORD PTR [esp+0xc],eax
1002c7e5:	mov    BYTE PTR [eax+esi*1+0x1458],dl
1002c7ec:	mov    ebx,eax
1002c7ee:	jmp    0x1002c7f5
1002c7f0:	mov    WORD PTR [edi+eax*4+0x2],dx
1002c7f5:	add    eax,0x1
1002c7f8:	cmp    eax,DWORD PTR [esp+0x10]
1002c7fc:	jl     0x1002c7c7
1002c7fe:	cmp    DWORD PTR [esi+0x1450],0x2
1002c805:	jge    0x1002c859
1002c807:	cmp    ebx,0x2
1002c80a:	jge    0x1002c813
1002c80c:	add    ebx,0x1
1002c80f:	mov    eax,ebx
1002c811:	jmp    0x1002c815
1002c813:	xor    eax,eax
1002c815:	add    DWORD PTR [esi+0x1450],0x1
1002c81c:	mov    ecx,DWORD PTR [esi+0x1450]
1002c822:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
1002c829:	mov    WORD PTR [edi+eax*4],0x1
1002c82f:	mov    BYTE PTR [esi+eax*1+0x1458],dl
1002c836:	add    DWORD PTR [esi+0x16a8],0xffffffff
1002c83d:	cmp    ebp,edx
1002c83f:	je     0x1002c84c
1002c841:	movzx  eax,WORD PTR [ebp+eax*4+0x2]
1002c846:	sub    DWORD PTR [esi+0x16ac],eax
1002c84c:	cmp    DWORD PTR [esi+0x1450],0x2
1002c853:	jl     0x1002c807
1002c855:	mov    DWORD PTR [esp+0xc],ebx
1002c859:	mov    ecx,DWORD PTR [esp+0x18]
1002c85d:	mov    DWORD PTR [ecx+0x4],ebx
1002c860:	mov    eax,DWORD PTR [esi+0x1450]
1002c866:	cdq    
1002c867:	sub    eax,edx
1002c869:	mov    ebp,eax
1002c86b:	sar    ebp,1
1002c86d:	cmp    ebp,0x1
1002c870:	jl     0x1002c885
1002c872:	push   ebp
1002c873:	mov    eax,esi
1002c875:	call   0x1002b5b0
1002c87a:	sub    ebp,0x1
1002c87d:	add    esp,0x4
1002c880:	cmp    ebp,0x1
1002c883:	jge    0x1002c872
1002c885:	mov    ebx,DWORD PTR [esp+0x10]
1002c889:	lea    esp,[esp+0x0]
1002c890:	mov    eax,DWORD PTR [esi+0x1450]
1002c896:	mov    edx,DWORD PTR [esi+eax*4+0xb5c]
1002c89d:	mov    ebp,DWORD PTR [esi+0xb60]
1002c8a3:	add    eax,0xffffffff
1002c8a6:	mov    DWORD PTR [esi+0x1450],eax
1002c8ac:	push   0x1
1002c8ae:	mov    eax,esi
1002c8b0:	mov    DWORD PTR [esi+0xb60],edx
1002c8b6:	call   0x1002b5b0
1002c8bb:	mov    eax,DWORD PTR [esi+0xb60]
1002c8c1:	or     edx,0xffffffff
1002c8c4:	add    DWORD PTR [esi+0x1454],edx
1002c8ca:	mov    ecx,DWORD PTR [esi+0x1454]
1002c8d0:	mov    DWORD PTR [esi+ecx*4+0xb5c],ebp
1002c8d7:	add    DWORD PTR [esi+0x1454],edx
1002c8dd:	mov    ecx,DWORD PTR [esi+0x1454]
1002c8e3:	mov    DWORD PTR [esi+ecx*4+0xb5c],eax
1002c8ea:	mov    cx,WORD PTR [edi+eax*4]
1002c8ee:	add    cx,WORD PTR [edi+ebp*4]
1002c8f2:	add    esp,0x4
1002c8f5:	mov    WORD PTR [edi+ebx*4],cx
1002c8f9:	mov    cl,BYTE PTR [esi+eax*1+0x1458]
1002c900:	mov    dl,BYTE PTR [esi+ebp*1+0x1458]
1002c907:	cmp    dl,cl
1002c909:	jb     0x1002c910
1002c90b:	movzx  ecx,dl
1002c90e:	jmp    0x1002c913
1002c910:	movzx  ecx,cl
1002c913:	add    cl,0x1
1002c916:	mov    BYTE PTR [esi+ebx*1+0x1458],cl
1002c91d:	movzx  ecx,bx
1002c920:	mov    WORD PTR [edi+eax*4+0x2],cx
1002c925:	mov    WORD PTR [edi+ebp*4+0x2],cx
1002c92a:	mov    DWORD PTR [esi+0xb60],ebx
1002c930:	push   0x1
1002c932:	mov    eax,esi
1002c934:	add    ebx,0x1
1002c937:	call   0x1002b5b0
1002c93c:	add    esp,0x4
1002c93f:	cmp    DWORD PTR [esi+0x1450],0x2
1002c946:	jge    0x1002c890
1002c94c:	add    DWORD PTR [esi+0x1454],0xffffffff
1002c953:	mov    eax,DWORD PTR [esi+0x1454]
1002c959:	mov    edx,DWORD PTR [esi+0xb60]
1002c95f:	mov    ecx,DWORD PTR [esp+0x18]
1002c963:	mov    DWORD PTR [esi+eax*4+0xb5c],edx
1002c96a:	mov    eax,esi
1002c96c:	call   0x1002b680
1002c971:	mov    ebx,DWORD PTR [esp+0xc]
1002c975:	lea    edx,[esi+0xb3c]
1002c97b:	call   0x1002c710
1002c980:	pop    edi
1002c981:	pop    ebp
1002c982:	pop    ebx
1002c983:	add    esp,0x8
1002c986:	ret    
1002c987:	int3   
1002c988:	int3   
1002c989:	int3   
1002c98a:	int3   
1002c98b:	int3   
1002c98c:	int3   
1002c98d:	int3   
1002c98e:	int3   
1002c98f:	int3   
1002c990:	push   esi
1002c991:	mov    esi,eax
1002c993:	mov    ecx,DWORD PTR [esi+0xb1c]
1002c999:	lea    eax,[esi+0x94]
1002c99f:	push   esi
1002c9a0:	call   0x1002b8a0
1002c9a5:	mov    ecx,DWORD PTR [esi+0xb28]
1002c9ab:	lea    eax,[esi+0x988]
1002c9b1:	push   esi
1002c9b2:	call   0x1002b8a0
1002c9b7:	lea    eax,[esi+0xb30]
1002c9bd:	push   eax
1002c9be:	call   0x1002c790
1002c9c3:	add    esp,0xc
1002c9c6:	mov    eax,0x12
1002c9cb:	jmp    0x1002c9d0
1002c9cd:	lea    ecx,[ecx+0x0]
1002c9d0:	movzx  ecx,BYTE PTR [eax+0x100b6e24]
1002c9d7:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
1002c9e0:	jne    0x1002ca4d
1002c9e2:	movzx  edx,BYTE PTR [eax+0x100b6e23]
1002c9e9:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
1002c9f2:	jne    0x1002ca2c
1002c9f4:	movzx  ecx,BYTE PTR [eax+0x100b6e22]
1002c9fb:	cmp    WORD PTR [esi+ecx*4+0xa7e],0x0
1002ca04:	jne    0x1002ca3b
1002ca06:	movzx  edx,BYTE PTR [eax+0x100b6e21]
1002ca0d:	cmp    WORD PTR [esi+edx*4+0xa7e],0x0
1002ca16:	jne    0x1002ca4a
1002ca18:	sub    eax,0x4
1002ca1b:	cmp    eax,0x3
1002ca1e:	jge    0x1002c9d0
1002ca20:	lea    ecx,[eax+eax*2+0x11]
1002ca24:	add    DWORD PTR [esi+0x16a8],ecx
1002ca2a:	pop    esi
1002ca2b:	ret    
1002ca2c:	sub    eax,0x1
1002ca2f:	lea    ecx,[eax+eax*2+0x11]
1002ca33:	add    DWORD PTR [esi+0x16a8],ecx
1002ca39:	pop    esi
1002ca3a:	ret    
1002ca3b:	sub    eax,0x2
1002ca3e:	lea    ecx,[eax+eax*2+0x11]
1002ca42:	add    DWORD PTR [esi+0x16a8],ecx
1002ca48:	pop    esi
1002ca49:	ret    
1002ca4a:	sub    eax,0x3
1002ca4d:	lea    ecx,[eax+eax*2+0x11]
1002ca51:	add    DWORD PTR [esi+0x16a8],ecx
1002ca57:	pop    esi
1002ca58:	ret    
1002ca59:	int3   
1002ca5a:	int3   
1002ca5b:	int3   
1002ca5c:	int3   
1002ca5d:	int3   
1002ca5e:	int3   
1002ca5f:	int3   
1002ca60:	mov    eax,DWORD PTR [esp+0x4]
1002ca64:	mov    ecx,DWORD PTR [eax+0x16bc]
1002ca6a:	cmp    ecx,0xd
1002ca6d:	jle    0x1002cad8
1002ca6f:	push   ebx
1002ca70:	push   esi
1002ca71:	mov    esi,DWORD PTR [esp+0x18]
1002ca75:	mov    edx,esi
1002ca77:	shl    edx,cl
1002ca79:	mov    ecx,DWORD PTR [eax+0x8]
1002ca7c:	or     WORD PTR [eax+0x16b8],dx
1002ca83:	movzx  ebx,BYTE PTR [eax+0x16b8]
1002ca8a:	mov    edx,DWORD PTR [eax+0x14]
1002ca8d:	mov    BYTE PTR [ecx+edx*1],bl
1002ca90:	movzx  ebx,BYTE PTR [eax+0x16b9]
1002ca97:	add    DWORD PTR [eax+0x14],0x1
1002ca9b:	mov    ecx,DWORD PTR [eax+0x14]
1002ca9e:	mov    edx,DWORD PTR [eax+0x8]
1002caa1:	mov    BYTE PTR [ecx+edx*1],bl
1002caa4:	mov    edx,DWORD PTR [eax+0x16bc]
1002caaa:	add    DWORD PTR [eax+0x14],0x1
1002caae:	mov    cl,0x10
1002cab0:	sub    cl,dl
1002cab2:	shr    si,cl
1002cab5:	mov    ecx,DWORD PTR [esp+0x14]
1002cab9:	add    edx,0xfffffff3
1002cabc:	mov    DWORD PTR [eax+0x16bc],edx
1002cac2:	mov    edx,DWORD PTR [esp+0x10]
1002cac6:	mov    WORD PTR [eax+0x16b8],si
1002cacd:	pop    esi
1002cace:	pop    ebx
1002cacf:	push   0x1
1002cad1:	call   0x1002c680
1002cad6:	pop    ecx
1002cad7:	ret    
1002cad8:	mov    edx,DWORD PTR [esp+0x10]
1002cadc:	shl    edx,cl
1002cade:	add    ecx,0x3
1002cae1:	mov    DWORD PTR [eax+0x16bc],ecx
1002cae7:	mov    ecx,DWORD PTR [esp+0xc]
1002caeb:	or     WORD PTR [eax+0x16b8],dx
1002caf2:	mov    edx,DWORD PTR [esp+0x8]
1002caf6:	push   0x1
1002caf8:	call   0x1002c680
1002cafd:	pop    ecx
1002cafe:	ret    
1002caff:	int3   
1002cb00:	push   ecx
1002cb01:	push   ebx
1002cb02:	mov    ebx,DWORD PTR [esp+0x14]
1002cb06:	push   esi
1002cb07:	mov    esi,DWORD PTR [esp+0x10]
1002cb0b:	cmp    DWORD PTR [esi+0x84],0x0
1002cb12:	push   edi
1002cb13:	mov    DWORD PTR [esp+0xc],0x0
1002cb1b:	jle    0x1002cb74
1002cb1d:	test   ebx,ebx
1002cb1f:	jbe    0x1002cb30
1002cb21:	mov    eax,DWORD PTR [esi]
1002cb23:	cmp    DWORD PTR [eax+0x2c],0x2
1002cb27:	jne    0x1002cb30
1002cb29:	mov    edx,esi
1002cb2b:	call   0x1002c510
1002cb30:	lea    ecx,[esi+0xb18]
1002cb36:	push   ecx
1002cb37:	call   0x1002c790
1002cb3c:	lea    edx,[esi+0xb24]
1002cb42:	push   edx
1002cb43:	call   0x1002c790
1002cb48:	add    esp,0x8
1002cb4b:	mov    eax,esi
1002cb4d:	call   0x1002c990
1002cb52:	mov    edx,DWORD PTR [esi+0x16a8]
1002cb58:	mov    ecx,DWORD PTR [esi+0x16ac]
1002cb5e:	add    edx,0xa
1002cb61:	add    ecx,0xa
1002cb64:	shr    edx,0x3
1002cb67:	shr    ecx,0x3
1002cb6a:	cmp    ecx,edx
1002cb6c:	mov    DWORD PTR [esp+0xc],eax
1002cb70:	ja     0x1002cb79
1002cb72:	jmp    0x1002cb77
1002cb74:	lea    ecx,[ebx+0x5]
1002cb77:	mov    edx,ecx
1002cb79:	lea    eax,[ebx+0x4]
1002cb7c:	cmp    eax,edx
1002cb7e:	ja     0x1002cb9d
1002cb80:	mov    eax,DWORD PTR [esp+0x18]
1002cb84:	test   eax,eax
1002cb86:	je     0x1002cb9d
1002cb88:	mov    edi,DWORD PTR [esp+0x20]
1002cb8c:	push   edi
1002cb8d:	push   ebx
1002cb8e:	push   eax
1002cb8f:	push   esi
1002cb90:	call   0x1002ca60
1002cb95:	add    esp,0x10
1002cb98:	jmp    0x1002ccf2
1002cb9d:	cmp    DWORD PTR [esi+0x88],0x4
1002cba4:	je     0x1002cc68
1002cbaa:	cmp    ecx,edx
1002cbac:	je     0x1002cc68
1002cbb2:	mov    ecx,DWORD PTR [esi+0x16bc]
1002cbb8:	cmp    ecx,0xd
1002cbbb:	mov    edi,DWORD PTR [esp+0x20]
1002cbbf:	lea    edx,[edi+0x4]
1002cbc2:	jle    0x1002cc16
1002cbc4:	mov    eax,edx
1002cbc6:	shl    eax,cl
1002cbc8:	mov    ecx,DWORD PTR [esi+0x8]
1002cbcb:	or     WORD PTR [esi+0x16b8],ax
1002cbd2:	movzx  ebx,BYTE PTR [esi+0x16b8]
1002cbd9:	mov    eax,DWORD PTR [esi+0x14]
1002cbdc:	mov    BYTE PTR [ecx+eax*1],bl
1002cbdf:	add    DWORD PTR [esi+0x14],0x1
1002cbe3:	movzx  ebx,BYTE PTR [esi+0x16b9]
1002cbea:	mov    ecx,DWORD PTR [esi+0x14]
1002cbed:	mov    eax,DWORD PTR [esi+0x8]
1002cbf0:	mov    BYTE PTR [ecx+eax*1],bl
1002cbf3:	mov    ebx,DWORD PTR [esi+0x16bc]
1002cbf9:	add    DWORD PTR [esi+0x14],0x1
1002cbfd:	mov    cl,0x10
1002cbff:	sub    cl,bl
1002cc01:	shr    dx,cl
1002cc04:	add    ebx,0xfffffff3
1002cc07:	mov    DWORD PTR [esi+0x16bc],ebx
1002cc0d:	mov    WORD PTR [esi+0x16b8],dx
1002cc14:	jmp    0x1002cc28
1002cc16:	shl    edx,cl
1002cc18:	or     WORD PTR [esi+0x16b8],dx
1002cc1f:	add    ecx,0x3
1002cc22:	mov    DWORD PTR [esi+0x16bc],ecx
1002cc28:	mov    eax,DWORD PTR [esp+0xc]
1002cc2c:	mov    ecx,DWORD PTR [esi+0xb28]
1002cc32:	mov    edx,DWORD PTR [esi+0xb1c]
1002cc38:	add    eax,0x1
1002cc3b:	push   eax
1002cc3c:	add    ecx,0x1
1002cc3f:	push   ecx
1002cc40:	add    edx,0x1
1002cc43:	push   edx
1002cc44:	mov    eax,esi
1002cc46:	call   0x1002bea0
1002cc4b:	lea    eax,[esi+0x988]
1002cc51:	push   eax
1002cc52:	lea    ecx,[esi+0x94]
1002cc58:	push   ecx
1002cc59:	mov    eax,esi
1002cc5b:	call   0x1002c100
1002cc60:	add    esp,0x14
1002cc63:	jmp    0x1002ccf2
1002cc68:	mov    ecx,DWORD PTR [esi+0x16bc]
1002cc6e:	cmp    ecx,0xd
1002cc71:	mov    edi,DWORD PTR [esp+0x20]
1002cc75:	lea    eax,[edi+0x2]
1002cc78:	jle    0x1002cccc
1002cc7a:	mov    edx,eax
1002cc7c:	shl    edx,cl
1002cc7e:	mov    ecx,DWORD PTR [esi+0x8]
1002cc81:	or     WORD PTR [esi+0x16b8],dx
1002cc88:	movzx  ebx,BYTE PTR [esi+0x16b8]
1002cc8f:	mov    edx,DWORD PTR [esi+0x14]
1002cc92:	mov    BYTE PTR [ecx+edx*1],bl
1002cc95:	add    DWORD PTR [esi+0x14],0x1
1002cc99:	movzx  ebx,BYTE PTR [esi+0x16b9]
1002cca0:	mov    ecx,DWORD PTR [esi+0x14]
1002cca3:	mov    edx,DWORD PTR [esi+0x8]
1002cca6:	mov    BYTE PTR [ecx+edx*1],bl
1002cca9:	mov    edx,DWORD PTR [esi+0x16bc]
1002ccaf:	add    DWORD PTR [esi+0x14],0x1
1002ccb3:	mov    cl,0x10
1002ccb5:	sub    cl,dl
1002ccb7:	shr    ax,cl
1002ccba:	add    edx,0xfffffff3
1002ccbd:	mov    DWORD PTR [esi+0x16bc],edx
1002ccc3:	mov    WORD PTR [esi+0x16b8],ax
1002ccca:	jmp    0x1002ccde
1002cccc:	shl    eax,cl
1002ccce:	or     WORD PTR [esi+0x16b8],ax
1002ccd5:	add    ecx,0x3
1002ccd8:	mov    DWORD PTR [esi+0x16bc],ecx
1002ccde:	push   0x100b7380
1002cce3:	push   0x100b6f00
1002cce8:	mov    eax,esi
1002ccea:	call   0x1002c100
1002ccef:	add    esp,0x8
1002ccf2:	mov    edx,esi
1002ccf4:	call   0x1002b540
1002ccf9:	test   edi,edi
1002ccfb:	pop    edi
1002ccfc:	je     0x1002cd0a
1002ccfe:	mov    eax,esi
1002cd00:	pop    esi
1002cd01:	pop    ebx
1002cd02:	add    esp,0x4
1002cd05:	jmp    0x1002c600
1002cd0a:	pop    esi
1002cd0b:	pop    ebx
1002cd0c:	pop    ecx
1002cd0d:	ret    
1002cd0e:	jmp    DWORD PTR ds:0x1002f1a8
1002cd14:	int3   
1002cd15:	int3   
1002cd16:	int3   
1002cd17:	int3   
1002cd18:	int3   
1002cd19:	int3   
1002cd1a:	int3   
1002cd1b:	int3   
1002cd1c:	int3   
1002cd1d:	int3   
1002cd1e:	int3   
1002cd1f:	int3   
1002cd20:	lea    ecx,[ebp-0x50]
1002cd23:	jmp    0x10002f00
1002cd28:	lea    ecx,[ebp-0x3c]
1002cd2b:	jmp    0x10002f00
1002cd30:	lea    ecx,[ebp-0x58]
1002cd33:	jmp    0x10002f00
1002cd38:	lea    ecx,[ebp-0x44]
1002cd3b:	jmp    0x10003310
1002cd40:	lea    ecx,[ebp-0x64]
1002cd43:	jmp    0x10006fc0
1002cd48:	lea    ecx,[ebp-0x30]
1002cd4b:	jmp    0x10002c00
1002cd50:	mov    edx,DWORD PTR [esp+0x8]
1002cd54:	lea    eax,[edx+0xc]
1002cd57:	mov    ecx,DWORD PTR [edx-0xac]
1002cd5d:	xor    ecx,eax
1002cd5f:	call   0x10018773
1002cd64:	mov    ecx,DWORD PTR [edx-0x8]
1002cd67:	xor    ecx,eax
1002cd69:	call   0x10018773
1002cd6e:	mov    eax,0x100ba83c
1002cd73:	jmp    0x10018845
1002cd78:	lea    ecx,[ebp-0x18]
1002cd7b:	jmp    0x10003310
1002cd80:	lea    ecx,[ebp-0x1034]
1002cd86:	jmp    0x10003310
1002cd8b:	lea    ecx,[ebp-0x108c]
1002cd91:	jmp    0x10006fc0
1002cd96:	lea    ecx,[ebp-0x14]
1002cd99:	jmp    0x10002f00
1002cd9e:	lea    ecx,[ebp-0x1098]
1002cda4:	jmp    0x10002f00
1002cda9:	lea    ecx,[ebp-0x109c]
1002cdaf:	jmp    0x10002f00
1002cdb4:	lea    ecx,[ebp-0x10a0]
1002cdba:	jmp    0x10002f00
1002cdbf:	mov    edx,DWORD PTR [esp+0x8]
1002cdc3:	lea    eax,[edx+0xc]
1002cdc6:	mov    ecx,DWORD PTR [edx-0x10fc]
1002cdcc:	xor    ecx,eax
1002cdce:	call   0x10018773
1002cdd3:	mov    ecx,DWORD PTR [edx-0x24]
1002cdd6:	xor    ecx,eax
1002cdd8:	call   0x10018773
1002cddd:	mov    eax,0x100ba8c4
1002cde2:	jmp    0x10018845
1002cde7:	lea    ecx,[ebp-0x10]
1002cdea:	jmp    0x10003310
1002cdef:	mov    edx,DWORD PTR [esp+0x8]
1002cdf3:	lea    eax,[edx+0xc]
1002cdf6:	mov    ecx,DWORD PTR [edx-0x240]
1002cdfc:	xor    ecx,eax
1002cdfe:	call   0x10018773
1002ce03:	mov    ecx,DWORD PTR [edx-0x8]
1002ce06:	xor    ecx,eax
1002ce08:	call   0x10018773
1002ce0d:	mov    eax,0x100ba938
1002ce12:	jmp    0x10018845
1002ce17:	lea    ecx,[ebp-0x10]
1002ce1a:	jmp    0x100033a0
1002ce1f:	lea    ecx,[ebp-0x1c]
1002ce22:	jmp    0x100033a0
1002ce27:	mov    eax,DWORD PTR [ebp-0x30]
1002ce2a:	and    eax,0x1
1002ce2d:	je     0x1002ce3f
1002ce33:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002ce37:	mov    ecx,DWORD PTR [ebp+0x8]
1002ce3a:	jmp    0x100033a0
1002ce3f:	ret    
1002ce40:	lea    ecx,[ebp-0x24]
1002ce43:	jmp    0x100033a0
1002ce48:	mov    edx,DWORD PTR [esp+0x8]
1002ce4c:	lea    eax,[edx+0xc]
1002ce4f:	mov    ecx,DWORD PTR [edx-0x28]
1002ce52:	xor    ecx,eax
1002ce54:	call   0x10018773
1002ce59:	mov    eax,0x100ba97c
1002ce5e:	jmp    0x10018845
1002ce63:	lea    ecx,[ebp-0x10]
1002ce66:	jmp    0x100033a0
1002ce6b:	mov    edx,DWORD PTR [esp+0x8]
1002ce6f:	lea    eax,[edx+0xc]
1002ce72:	mov    ecx,DWORD PTR [edx-0x24]
1002ce75:	xor    ecx,eax
1002ce77:	call   0x10018773
1002ce7c:	mov    eax,0x100ba9a8
1002ce81:	jmp    0x10018845
1002ce86:	lea    ecx,[ebp-0xd]
1002ce89:	jmp    0x10006ea0
1002ce8e:	mov    edx,DWORD PTR [esp+0x8]
1002ce92:	lea    eax,[edx+0xc]
1002ce95:	mov    ecx,DWORD PTR [edx-0x1c]
1002ce98:	xor    ecx,eax
1002ce9a:	call   0x10018773
1002ce9f:	mov    eax,0x100ba9d4
1002cea4:	jmp    0x10018845
1002cea9:	lea    ecx,[ebp-0x10]
1002ceac:	jmp    0x10002f00
1002ceb1:	mov    edx,DWORD PTR [esp+0x8]
1002ceb5:	lea    eax,[edx+0xc]
1002ceb8:	mov    ecx,DWORD PTR [edx-0xc]
1002cebb:	xor    ecx,eax
1002cebd:	call   0x10018773
1002cec2:	mov    eax,0x100baa00
1002cec7:	jmp    0x10018845
1002cecc:	lea    ecx,[ebp-0xd]
1002cecf:	jmp    0x10006ea0
1002ced4:	lea    ecx,[ebp-0x24]
1002ced7:	jmp    0x10006fc0
1002cedc:	mov    edx,DWORD PTR [esp+0x8]
1002cee0:	lea    eax,[edx+0xc]
1002cee3:	mov    ecx,DWORD PTR [edx-0x20]
1002cee6:	xor    ecx,eax
1002cee8:	call   0x10018773
1002ceed:	mov    eax,0x100baa34
1002cef2:	jmp    0x10018845
1002cef7:	lea    ecx,[ebp-0x10]
1002cefa:	jmp    0x10003310
1002ceff:	mov    edx,DWORD PTR [esp+0x8]
1002cf03:	lea    eax,[edx+0xc]
1002cf06:	mov    ecx,DWORD PTR [edx-0x8]
1002cf09:	xor    ecx,eax
1002cf0b:	call   0x10018773
1002cf10:	mov    eax,0x100baa60
1002cf15:	jmp    0x10018845
1002cf1a:	lea    ecx,[ebp-0x30]
1002cf1d:	jmp    0x10006fc0
1002cf22:	mov    edx,DWORD PTR [esp+0x8]
1002cf26:	lea    eax,[edx+0xc]
1002cf29:	mov    ecx,DWORD PTR [edx-0x38]
1002cf2c:	xor    ecx,eax
1002cf2e:	call   0x10018773
1002cf33:	mov    ecx,DWORD PTR [edx-0x8]
1002cf36:	xor    ecx,eax
1002cf38:	call   0x10018773
1002cf3d:	mov    eax,0x100baac0
1002cf42:	jmp    0x10018845
1002cf47:	int3   
1002cf48:	int3   
1002cf49:	int3   
1002cf4a:	int3   
1002cf4b:	int3   
1002cf4c:	int3   
1002cf4d:	int3   
1002cf4e:	int3   
1002cf4f:	int3   
1002cf50:	lea    ecx,[ebp+0x18]
1002cf53:	jmp    0x10002f00
1002cf58:	lea    ecx,[ebp+0x14]
1002cf5b:	jmp    0x10002f00
1002cf60:	mov    edx,DWORD PTR [esp+0x8]
1002cf64:	lea    eax,[edx+0xc]
1002cf67:	mov    ecx,DWORD PTR [edx-0x58]
1002cf6a:	xor    ecx,eax
1002cf6c:	call   0x10018773
1002cf71:	mov    eax,0x100bab28
1002cf76:	jmp    0x10018845
1002cf7b:	lea    ecx,[ebp-0x50]
1002cf7e:	jmp    0x10012060
1002cf83:	lea    ecx,[ebp-0x4c]
1002cf86:	jmp    0x10002c00
1002cf8b:	lea    ecx,[ebp-0x30]
1002cf8e:	jmp    0x10011fd0
1002cf93:	lea    ecx,[ebp-0x70]
1002cf96:	jmp    0x10002f00
1002cf9b:	mov    edx,DWORD PTR [esp+0x8]
1002cf9f:	lea    eax,[edx+0xc]
1002cfa2:	mov    ecx,DWORD PTR [edx-0x7c]
1002cfa5:	xor    ecx,eax
1002cfa7:	call   0x10018773
1002cfac:	mov    ecx,DWORD PTR [edx-0x4]
1002cfaf:	xor    ecx,eax
1002cfb1:	call   0x10018773
1002cfb6:	mov    eax,0x100bab6c
1002cfbb:	jmp    0x10018845
1002cfc0:	lea    ecx,[ebp-0x1c]
1002cfc3:	jmp    0x10002f00
1002cfc8:	lea    ecx,[ebp-0x20]
1002cfcb:	jmp    0x10002f00
1002cfd0:	lea    ecx,[ebp-0x30]
1002cfd3:	jmp    0x10002f00
1002cfd8:	lea    ecx,[ebp-0x34]
1002cfdb:	jmp    0x10002f00
1002cfe0:	lea    ecx,[ebp-0x18]
1002cfe3:	jmp    0x10002f00
1002cfe8:	lea    ecx,[ebp-0x14]
1002cfeb:	jmp    0x10003310
1002cff0:	mov    edx,DWORD PTR [esp+0x8]
1002cff4:	lea    eax,[edx+0xc]
1002cff7:	mov    ecx,DWORD PTR [edx-0x38]
1002cffa:	xor    ecx,eax
1002cffc:	call   0x10018773
1002d001:	mov    eax,0x100bab90
1002d006:	jmp    0x10018845
1002d00b:	lea    ecx,[ebp-0x10cc]
1002d011:	jmp    0x10002c00
1002d016:	lea    ecx,[ebp-0x10d0]
1002d01c:	jmp    0x10002f00
1002d021:	lea    ecx,[ebp-0x40]
1002d024:	jmp    0x10002f00
1002d029:	lea    ecx,[ebp-0x18]
1002d02c:	jmp    0x10002f00
1002d031:	lea    ecx,[ebp-0x1100]
1002d037:	jmp    0x10002f00
1002d03c:	lea    ecx,[ebp-0x44]
1002d03f:	jmp    0x10002f00
1002d044:	lea    ecx,[ebp-0x1104]
1002d04a:	jmp    0x10002f00
1002d04f:	lea    ecx,[ebp-0x3c]
1002d052:	jmp    0x10002c00
1002d057:	mov    edx,DWORD PTR [esp+0x8]
1002d05b:	lea    eax,[edx+0xc]
1002d05e:	mov    ecx,DWORD PTR [edx-0x114c]
1002d064:	xor    ecx,eax
1002d066:	call   0x10018773
1002d06b:	mov    ecx,DWORD PTR [edx-0x14]
1002d06e:	xor    ecx,eax
1002d070:	call   0x10018773
1002d075:	mov    eax,0x100bac28
1002d07a:	jmp    0x10018845
1002d07f:	lea    ecx,[ebp-0x64]
1002d082:	jmp    0x10002c00
1002d087:	lea    ecx,[ebp-0x48]
1002d08a:	jmp    0x10002c00
1002d08f:	lea    ecx,[ebp-0x2c]
1002d092:	jmp    0x10002c00
1002d097:	lea    ecx,[ebp-0x80]
1002d09a:	jmp    0x10002c00
1002d09f:	mov    eax,DWORD PTR [ebp-0x88]
1002d0a5:	push   eax
1002d0a6:	call   0x1001876e
1002d0ab:	pop    ecx
1002d0ac:	ret    
1002d0ad:	mov    eax,DWORD PTR [ebp-0x90]
1002d0b3:	push   eax
1002d0b4:	call   0x1001876e
1002d0b9:	pop    ecx
1002d0ba:	ret    
1002d0bb:	mov    ecx,DWORD PTR [ebp-0x94]
1002d0c1:	jmp    0x10002f00
1002d0c6:	mov    edx,DWORD PTR [esp+0x8]
1002d0ca:	lea    eax,[edx+0xc]
1002d0cd:	mov    ecx,DWORD PTR [edx-0xac]
1002d0d3:	xor    ecx,eax
1002d0d5:	call   0x10018773
1002d0da:	mov    ecx,DWORD PTR [edx-0x4]
1002d0dd:	xor    ecx,eax
1002d0df:	call   0x10018773
1002d0e4:	mov    eax,0x100baca4
1002d0e9:	jmp    0x10018845
1002d0ee:	lea    ecx,[ebp-0x68]
1002d0f1:	jmp    0x10002c00
1002d0f6:	mov    edx,DWORD PTR [esp+0x8]
1002d0fa:	lea    eax,[edx+0xc]
1002d0fd:	mov    ecx,DWORD PTR [edx-0x70]
1002d100:	xor    ecx,eax
1002d102:	call   0x10018773
1002d107:	mov    ecx,DWORD PTR [edx-0x18]
1002d10a:	xor    ecx,eax
1002d10c:	call   0x10018773
1002d111:	mov    eax,0x100bad4c
1002d116:	jmp    0x10018845
1002d11b:	lea    ecx,[ebp-0x14]
1002d11e:	jmp    0x10002f00
1002d123:	lea    ecx,[ebp-0x18]
1002d126:	jmp    0x10002f00
1002d12b:	mov    edx,DWORD PTR [esp+0x8]
1002d12f:	lea    eax,[edx+0xc]
1002d132:	mov    ecx,DWORD PTR [edx-0x1c]
1002d135:	xor    ecx,eax
1002d137:	call   0x10018773
1002d13c:	mov    eax,0x100bad80
1002d141:	jmp    0x10018845
1002d146:	lea    ecx,[ebp-0x18]
1002d149:	jmp    0x10002f00
1002d14e:	lea    ecx,[ebp-0x1c]
1002d151:	jmp    0x10002f00
1002d156:	mov    edx,DWORD PTR [esp+0x8]
1002d15a:	lea    eax,[edx+0xc]
1002d15d:	mov    ecx,DWORD PTR [edx-0x20]
1002d160:	xor    ecx,eax
1002d162:	call   0x10018773
1002d167:	mov    eax,0x100badb4
1002d16c:	jmp    0x10018845
1002d171:	int3   
1002d172:	int3   
1002d173:	int3   
1002d174:	int3   
1002d175:	int3   
1002d176:	int3   
1002d177:	int3   
1002d178:	int3   
1002d179:	int3   
1002d17a:	int3   
1002d17b:	int3   
1002d17c:	int3   
1002d17d:	int3   
1002d17e:	int3   
1002d17f:	int3   
1002d180:	mov    ecx,DWORD PTR [ebp-0x18]
1002d183:	jmp    0x10002f00
1002d188:	mov    ecx,DWORD PTR [ebp-0x18]
1002d18b:	add    ecx,0x4
1002d18e:	jmp    0x10002c00
1002d193:	lea    ecx,[ebp-0x10]
1002d196:	jmp    0x10002f00
1002d19b:	lea    ecx,[ebp-0x14]
1002d19e:	jmp    0x10002f00
1002d1a3:	mov    edx,DWORD PTR [esp+0x8]
1002d1a7:	lea    eax,[edx+0xc]
1002d1aa:	mov    ecx,DWORD PTR [edx-0x20]
1002d1ad:	xor    ecx,eax
1002d1af:	call   0x10018773
1002d1b4:	mov    eax,0x100badf8
1002d1b9:	jmp    0x10018845
1002d1be:	int3   
1002d1bf:	int3   
1002d1c0:	mov    ecx,DWORD PTR [ebp-0x10]
1002d1c3:	jmp    0x10002f00
1002d1c8:	mov    edx,DWORD PTR [esp+0x8]
1002d1cc:	lea    eax,[edx+0xc]
1002d1cf:	mov    ecx,DWORD PTR [edx-0x8]
1002d1d2:	xor    ecx,eax
1002d1d4:	call   0x10018773
1002d1d9:	mov    eax,0x100bae24
1002d1de:	jmp    0x10018845
1002d1e3:	int3   
1002d1e4:	int3   
1002d1e5:	int3   
1002d1e6:	int3   
1002d1e7:	int3   
1002d1e8:	int3   
1002d1e9:	int3   
1002d1ea:	int3   
1002d1eb:	int3   
1002d1ec:	int3   
1002d1ed:	int3   
1002d1ee:	int3   
1002d1ef:	int3   
1002d1f0:	lea    ecx,[ebp-0x10]
1002d1f3:	jmp    0x10012060
1002d1f8:	mov    edx,DWORD PTR [esp+0x8]
1002d1fc:	lea    eax,[edx+0xc]
1002d1ff:	mov    ecx,DWORD PTR [edx-0x8]
1002d202:	xor    ecx,eax
1002d204:	call   0x10018773
1002d209:	mov    eax,0x100bae50
1002d20e:	jmp    0x10018845
1002d213:	lea    ecx,[ebp-0x10]
1002d216:	jmp    0x10012060
1002d21b:	mov    edx,DWORD PTR [esp+0x8]
1002d21f:	lea    eax,[edx+0xc]
1002d222:	mov    ecx,DWORD PTR [edx-0x10]
1002d225:	xor    ecx,eax
1002d227:	call   0x10018773
1002d22c:	mov    eax,0x100bae7c
1002d231:	jmp    0x10018845
1002d236:	int3   
1002d237:	int3   
1002d238:	int3   
1002d239:	int3   
1002d23a:	int3   
1002d23b:	int3   
1002d23c:	int3   
1002d23d:	int3   
1002d23e:	int3   
1002d23f:	int3   
1002d240:	lea    ecx,[ebp-0x18]
1002d243:	jmp    0x10012060
1002d248:	mov    edx,DWORD PTR [esp+0x8]
1002d24c:	lea    eax,[edx+0xc]
1002d24f:	mov    ecx,DWORD PTR [edx-0x5c]
1002d252:	xor    ecx,eax
1002d254:	call   0x10018773
1002d259:	mov    eax,0x100baea8
1002d25e:	jmp    0x10018845
1002d263:	int3   
1002d264:	int3   
1002d265:	int3   
1002d266:	int3   
1002d267:	int3   
1002d268:	int3   
1002d269:	int3   
1002d26a:	int3   
1002d26b:	int3   
1002d26c:	int3   
1002d26d:	int3   
1002d26e:	int3   
1002d26f:	int3   
1002d270:	lea    ecx,[ebp-0x60]
1002d273:	jmp    0x10002c00
1002d278:	mov    edx,DWORD PTR [esp+0x8]
1002d27c:	lea    eax,[edx+0xc]
1002d27f:	mov    ecx,DWORD PTR [edx-0x68]
1002d282:	xor    ecx,eax
1002d284:	call   0x10018773
1002d289:	mov    eax,0x100baed4
1002d28e:	jmp    0x10018845
1002d293:	int3   
1002d294:	int3   
1002d295:	int3   
1002d296:	int3   
1002d297:	int3   
1002d298:	int3   
1002d299:	int3   
1002d29a:	int3   
1002d29b:	int3   
1002d29c:	int3   
1002d29d:	int3   
1002d29e:	int3   
1002d29f:	int3   
1002d2a0:	lea    ecx,[ebp-0x58]
1002d2a3:	jmp    0x10002c00
1002d2a8:	mov    edx,DWORD PTR [esp+0x8]
1002d2ac:	lea    eax,[edx+0xc]
1002d2af:	mov    ecx,DWORD PTR [edx-0x58]
1002d2b2:	xor    ecx,eax
1002d2b4:	call   0x10018773
1002d2b9:	mov    eax,0x100baf00
1002d2be:	jmp    0x10018845
1002d2c3:	int3   
1002d2c4:	int3   
1002d2c5:	int3   
1002d2c6:	int3   
1002d2c7:	int3   
1002d2c8:	int3   
1002d2c9:	int3   
1002d2ca:	int3   
1002d2cb:	int3   
1002d2cc:	int3   
1002d2cd:	int3   
1002d2ce:	int3   
1002d2cf:	int3   
1002d2d0:	mov    eax,DWORD PTR [ebp-0x14]
1002d2d3:	push   eax
1002d2d4:	mov    ecx,DWORD PTR [ebp-0x1c]
1002d2d7:	push   ecx
1002d2d8:	call   0x10001300
1002d2dd:	add    esp,0x8
1002d2e0:	ret    
1002d2e1:	mov    edx,DWORD PTR [esp+0x8]
1002d2e5:	lea    eax,[edx+0xc]
1002d2e8:	mov    ecx,DWORD PTR [edx-0x2c]
1002d2eb:	xor    ecx,eax
1002d2ed:	call   0x10018773
1002d2f2:	mov    eax,0x100baf60
1002d2f7:	jmp    0x10018845
1002d2fc:	int3   
1002d2fd:	int3   
1002d2fe:	int3   
1002d2ff:	int3   
1002d300:	mov    edx,DWORD PTR [esp+0x8]
1002d304:	lea    eax,[edx+0xc]
1002d307:	mov    ecx,DWORD PTR [edx-0x38]
1002d30a:	xor    ecx,eax
1002d30c:	call   0x10018773
1002d311:	mov    eax,0x100bafb8
1002d316:	jmp    0x10018845
1002d31b:	int3   
1002d31c:	int3   
1002d31d:	int3   
1002d31e:	int3   
1002d31f:	int3   
1002d320:	lea    ecx,[ebp-0x14]
1002d323:	jmp    0x10002f00
1002d328:	mov    edx,DWORD PTR [esp+0x8]
1002d32c:	lea    eax,[edx+0xc]
1002d32f:	mov    ecx,DWORD PTR [edx-0x10]
1002d332:	xor    ecx,eax
1002d334:	call   0x10018773
1002d339:	mov    eax,0x100bafe4
1002d33e:	jmp    0x10018845
1002d343:	lea    ecx,[ebp-0x5c]
1002d346:	jmp    0x10001280
1002d34b:	lea    ecx,[ebp-0x64]
1002d34e:	jmp    0x100033a0
1002d353:	lea    ecx,[ebp-0x14]
1002d356:	jmp    0x10002f00
1002d35b:	lea    ecx,[ebp-0x38]
1002d35e:	jmp    0x10002c00
1002d363:	lea    ecx,[ebp-0x54]
1002d366:	jmp    0x10002c00
1002d36b:	mov    edx,DWORD PTR [esp+0x8]
1002d36f:	lea    eax,[edx+0xc]
1002d372:	mov    ecx,DWORD PTR [edx-0x88]
1002d378:	xor    ecx,eax
1002d37a:	call   0x10018773
1002d37f:	mov    ecx,DWORD PTR [edx-0x10]
1002d382:	xor    ecx,eax
1002d384:	call   0x10018773
1002d389:	mov    eax,0x100bb008
1002d38e:	jmp    0x10018845
1002d393:	lea    ecx,[ebp-0x6c]
1002d396:	jmp    0x10002f00
1002d39b:	lea    ecx,[ebp-0x70]
1002d39e:	jmp    0x10002f00
1002d3a3:	lea    ecx,[ebp-0x48]
1002d3a6:	jmp    0x100043e0
1002d3ab:	mov    edx,DWORD PTR [esp+0x8]
1002d3af:	lea    eax,[edx+0xc]
1002d3b2:	mov    ecx,DWORD PTR [edx-0xb0]
1002d3b8:	xor    ecx,eax
1002d3ba:	call   0x10018773
1002d3bf:	mov    ecx,DWORD PTR [edx-0x20]
1002d3c2:	xor    ecx,eax
1002d3c4:	call   0x10018773
1002d3c9:	mov    eax,0x100bb104
1002d3ce:	jmp    0x10018845
1002d3d3:	lea    ecx,[ebp-0x28]
1002d3d6:	jmp    0x10002c00
1002d3db:	mov    edx,DWORD PTR [esp+0x8]
1002d3df:	lea    eax,[edx+0xc]
1002d3e2:	mov    ecx,DWORD PTR [edx-0x54]
1002d3e5:	xor    ecx,eax
1002d3e7:	call   0x10018773
1002d3ec:	mov    eax,0x100bb2f4
1002d3f1:	jmp    0x10018845
1002d3f6:	lea    ecx,[ebp-0x28]
1002d3f9:	jmp    0x10002c00
1002d3fe:	mov    edx,DWORD PTR [esp+0x8]
1002d402:	lea    eax,[edx+0xc]
1002d405:	mov    ecx,DWORD PTR [edx-0x54]
1002d408:	xor    ecx,eax
1002d40a:	call   0x10018773
1002d40f:	mov    eax,0x100bb320
1002d414:	jmp    0x10018845
1002d419:	mov    edx,DWORD PTR [esp+0x8]
1002d41d:	lea    eax,[edx+0xc]
1002d420:	mov    ecx,DWORD PTR [edx-0x14]
1002d423:	xor    ecx,eax
1002d425:	call   0x10018773
1002d42a:	mov    eax,0x100bb520
1002d42f:	jmp    0x10018845
1002d434:	int3   
1002d435:	int3   
1002d436:	int3   
1002d437:	int3   
1002d438:	int3   
1002d439:	int3   
1002d43a:	int3   
1002d43b:	int3   
1002d43c:	int3   
1002d43d:	int3   
1002d43e:	int3   
1002d43f:	int3   
1002d440:	lea    ecx,[ebp-0x50]
1002d443:	jmp    0x100033a0
1002d448:	lea    ecx,[ebp-0x4c]
1002d44b:	jmp    0x100033a0
1002d450:	mov    edx,DWORD PTR [esp+0x8]
1002d454:	lea    eax,[edx-0x5c]
1002d457:	mov    ecx,DWORD PTR [edx-0x60]
1002d45a:	xor    ecx,eax
1002d45c:	call   0x10018773
1002d461:	mov    eax,0x100bbb10
1002d466:	jmp    0x10018845
1002d46b:	int3   
1002d46c:	int3   
1002d46d:	int3   
1002d46e:	int3   
1002d46f:	int3   
1002d470:	lea    ecx,[ebp-0x3c]
1002d473:	jmp    0x100033a0
1002d478:	lea    ecx,[ebp-0x58]
1002d47b:	jmp    0x100033a0
1002d480:	mov    edx,DWORD PTR [esp+0x8]
1002d484:	lea    eax,[edx-0x54]
1002d487:	mov    ecx,DWORD PTR [edx-0x58]
1002d48a:	xor    ecx,eax
1002d48c:	call   0x10018773
1002d491:	add    eax,0x8
1002d494:	mov    ecx,DWORD PTR [edx-0x8]
1002d497:	xor    ecx,eax
1002d499:	call   0x10018773
1002d49e:	mov    eax,0x100bbb44
1002d4a3:	jmp    0x10018845
1002d4a8:	int3   
1002d4a9:	int3   
1002d4aa:	int3   
1002d4ab:	int3   
1002d4ac:	int3   
1002d4ad:	int3   
1002d4ae:	int3   
1002d4af:	int3   
1002d4b0:	mov    ecx,DWORD PTR [ebp+0x4]
1002d4b3:	jmp    0x100033a0
1002d4b8:	mov    edx,DWORD PTR [esp+0x8]
1002d4bc:	lea    eax,[edx-0xc]
1002d4bf:	mov    ecx,DWORD PTR [edx-0x10]
1002d4c2:	xor    ecx,eax
1002d4c4:	call   0x10018773
1002d4c9:	mov    eax,0x100bbb70
1002d4ce:	jmp    0x10018845
1002d4d3:	int3   
1002d4d4:	int3   
1002d4d5:	int3   
1002d4d6:	int3   
1002d4d7:	int3   
1002d4d8:	int3   
1002d4d9:	int3   
1002d4da:	int3   
1002d4db:	int3   
1002d4dc:	int3   
1002d4dd:	int3   
1002d4de:	int3   
1002d4df:	int3   
1002d4e0:	lea    ecx,[ebp-0x11]
1002d4e3:	jmp    0x10006ea0
1002d4e8:	lea    eax,[ebp+0x4]
1002d4eb:	jmp    0x1000bd10
1002d4f0:	lea    ecx,[ebp-0x10]
1002d4f3:	jmp    0x10003310
1002d4f8:	mov    edx,DWORD PTR [esp+0x8]
1002d4fc:	lea    eax,[edx-0x14]
1002d4ff:	mov    ecx,DWORD PTR [edx-0x18]
1002d502:	xor    ecx,eax
1002d504:	call   0x10018773
1002d509:	mov    eax,0x100bbbac
1002d50e:	jmp    0x10018845
1002d513:	int3   
1002d514:	int3   
1002d515:	int3   
1002d516:	int3   
1002d517:	int3   
1002d518:	int3   
1002d519:	int3   
1002d51a:	int3   
1002d51b:	int3   
1002d51c:	int3   
1002d51d:	int3   
1002d51e:	int3   
1002d51f:	int3   
1002d520:	mov    edx,DWORD PTR [esp+0x8]
1002d524:	lea    eax,[edx+0xc]
1002d527:	mov    ecx,DWORD PTR [edx-0x1c]
1002d52a:	xor    ecx,eax
1002d52c:	call   0x10018773
1002d531:	mov    eax,0x100bbc38
1002d536:	jmp    0x10018845
1002d53b:	int3   
1002d53c:	int3   
1002d53d:	int3   
1002d53e:	int3   
1002d53f:	int3   
1002d540:	mov    edx,DWORD PTR [esp+0x8]
1002d544:	lea    eax,[edx+0xc]
1002d547:	mov    ecx,DWORD PTR [edx-0x2c]
1002d54a:	xor    ecx,eax
1002d54c:	call   0x10018773
1002d551:	mov    eax,0x100bbcc4
1002d556:	jmp    0x10018845
1002d55b:	int3   
1002d55c:	int3   
1002d55d:	int3   
1002d55e:	int3   
1002d55f:	int3   
1002d560:	lea    ecx,[ebp+0x8]
1002d563:	jmp    0x100043e0
1002d568:	mov    edx,DWORD PTR [esp+0x8]
1002d56c:	lea    eax,[edx-0x14]
1002d56f:	mov    ecx,DWORD PTR [edx-0x18]
1002d572:	xor    ecx,eax
1002d574:	call   0x10018773
1002d579:	mov    eax,0x100bbcf0
1002d57e:	jmp    0x10018845
1002d583:	int3   
1002d584:	int3   
1002d585:	int3   
1002d586:	int3   
1002d587:	int3   
1002d588:	int3   
1002d589:	int3   
1002d58a:	int3   
1002d58b:	int3   
1002d58c:	int3   
1002d58d:	int3   
1002d58e:	int3   
1002d58f:	int3   
1002d590:	mov    ecx,DWORD PTR [ebp-0x10]
1002d593:	jmp    0x10018fcc
1002d598:	mov    edx,DWORD PTR [esp+0x8]
1002d59c:	lea    eax,[edx-0xc]
1002d59f:	mov    ecx,DWORD PTR [edx-0x10]
1002d5a2:	xor    ecx,eax
1002d5a4:	call   0x10018773
1002d5a9:	mov    eax,0x100bbd1c
1002d5ae:	jmp    0x10018845
1002d5b3:	int3   
1002d5b4:	int3   
1002d5b5:	int3   
1002d5b6:	int3   
1002d5b7:	int3   
1002d5b8:	int3   
1002d5b9:	int3   
1002d5ba:	int3   
1002d5bb:	int3   
1002d5bc:	int3   
1002d5bd:	int3   
1002d5be:	int3   
1002d5bf:	int3   
1002d5c0:	mov    ecx,DWORD PTR [ebp-0x10]
1002d5c3:	jmp    0x10018fcc
1002d5c8:	mov    edx,DWORD PTR [esp+0x8]
1002d5cc:	lea    eax,[edx-0xc]
1002d5cf:	mov    ecx,DWORD PTR [edx-0x10]
1002d5d2:	xor    ecx,eax
1002d5d4:	call   0x10018773
1002d5d9:	mov    eax,0x100bbd48
1002d5de:	jmp    0x10018845
1002d5e3:	int3   
1002d5e4:	int3   
1002d5e5:	int3   
1002d5e6:	int3   
1002d5e7:	int3   
1002d5e8:	int3   
1002d5e9:	int3   
1002d5ea:	int3   
1002d5eb:	int3   
1002d5ec:	int3   
1002d5ed:	int3   
1002d5ee:	int3   
1002d5ef:	int3   
1002d5f0:	mov    ecx,DWORD PTR [ebp+0x4]
1002d5f3:	jmp    0x10018fcc
1002d5f8:	mov    edx,DWORD PTR [esp+0x8]
1002d5fc:	lea    eax,[edx-0x4]
1002d5ff:	mov    ecx,DWORD PTR [edx-0x8]
1002d602:	xor    ecx,eax
1002d604:	call   0x10018773
1002d609:	mov    eax,0x100bbd74
1002d60e:	jmp    0x10018845
1002d613:	int3   
1002d614:	int3   
1002d615:	int3   
1002d616:	int3   
1002d617:	int3   
1002d618:	int3   
1002d619:	int3   
1002d61a:	int3   
1002d61b:	int3   
1002d61c:	int3   
1002d61d:	int3   
1002d61e:	int3   
1002d61f:	int3   
1002d620:	mov    ecx,DWORD PTR [ebp-0x10]
1002d623:	jmp    0x10018fcc
1002d628:	mov    edx,DWORD PTR [esp+0x8]
1002d62c:	lea    eax,[edx-0x8]
1002d62f:	mov    ecx,DWORD PTR [edx-0xc]
1002d632:	xor    ecx,eax
1002d634:	call   0x10018773
1002d639:	mov    eax,0x100bbda0
1002d63e:	jmp    0x10018845
1002d643:	int3   
1002d644:	int3   
1002d645:	int3   
1002d646:	int3   
1002d647:	int3   
1002d648:	int3   
1002d649:	int3   
1002d64a:	int3   
1002d64b:	int3   
1002d64c:	int3   
1002d64d:	int3   
1002d64e:	int3   
1002d64f:	int3   
1002d650:	mov    ecx,DWORD PTR [ebp+0x4]
1002d653:	jmp    0x10007cf0
1002d658:	mov    edx,DWORD PTR [esp+0x8]
1002d65c:	lea    eax,[edx-0x4]
1002d65f:	mov    ecx,DWORD PTR [edx-0x8]
1002d662:	xor    ecx,eax
1002d664:	call   0x10018773
1002d669:	mov    eax,0x100bbdcc
1002d66e:	jmp    0x10018845
1002d673:	int3   
1002d674:	int3   
1002d675:	int3   
1002d676:	int3   
1002d677:	int3   
1002d678:	int3   
1002d679:	int3   
1002d67a:	int3   
1002d67b:	int3   
1002d67c:	int3   
1002d67d:	int3   
1002d67e:	int3   
1002d67f:	int3   
1002d680:	mov    ecx,DWORD PTR [ebp-0x10]
1002d683:	jmp    0x100043e0
1002d688:	mov    edx,DWORD PTR [esp+0x8]
1002d68c:	lea    eax,[edx-0x10]
1002d68f:	mov    ecx,DWORD PTR [edx-0x14]
1002d692:	xor    ecx,eax
1002d694:	call   0x10018773
1002d699:	mov    eax,0x100bbdf8
1002d69e:	jmp    0x10018845
1002d6a3:	int3   
1002d6a4:	int3   
1002d6a5:	int3   
1002d6a6:	int3   
1002d6a7:	int3   
1002d6a8:	int3   
1002d6a9:	int3   
1002d6aa:	int3   
1002d6ab:	int3   
1002d6ac:	int3   
1002d6ad:	int3   
1002d6ae:	int3   
1002d6af:	int3   
1002d6b0:	mov    ecx,DWORD PTR [ebp-0x10]
1002d6b3:	jmp    0x10002c00
1002d6b8:	mov    edx,DWORD PTR [esp+0x8]
1002d6bc:	lea    eax,[edx-0x10]
1002d6bf:	mov    ecx,DWORD PTR [edx-0x14]
1002d6c2:	xor    ecx,eax
1002d6c4:	call   0x10018773
1002d6c9:	mov    eax,0x100bbe24
1002d6ce:	jmp    0x10018845
1002d6d3:	int3   
1002d6d4:	int3   
1002d6d5:	int3   
1002d6d6:	int3   
1002d6d7:	int3   
1002d6d8:	int3   
1002d6d9:	int3   
1002d6da:	int3   
1002d6db:	int3   
1002d6dc:	int3   
1002d6dd:	int3   
1002d6de:	int3   
1002d6df:	int3   
1002d6e0:	mov    eax,DWORD PTR [ebp-0x14]
1002d6e3:	push   eax
1002d6e4:	mov    ecx,DWORD PTR [ebp-0x18]
1002d6e7:	push   ecx
1002d6e8:	call   0x10001300
1002d6ed:	add    esp,0x8
1002d6f0:	ret    
1002d6f1:	mov    edx,DWORD PTR [esp+0x8]
1002d6f5:	lea    eax,[edx+0xc]
1002d6f8:	mov    ecx,DWORD PTR [edx-0x1c]
1002d6fb:	xor    ecx,eax
1002d6fd:	call   0x10018773
1002d702:	mov    eax,0x100bbe84
1002d707:	jmp    0x10018845
1002d70c:	int3   
1002d70d:	int3   
1002d70e:	int3   
1002d70f:	int3   
1002d710:	mov    eax,DWORD PTR [ebp-0x14]
1002d713:	push   eax
1002d714:	mov    ecx,DWORD PTR [ebp-0x18]
1002d717:	push   ecx
1002d718:	call   0x10001300
1002d71d:	add    esp,0x8
1002d720:	ret    
1002d721:	mov    edx,DWORD PTR [esp+0x8]
1002d725:	lea    eax,[edx+0xc]
1002d728:	mov    ecx,DWORD PTR [edx-0x1c]
1002d72b:	xor    ecx,eax
1002d72d:	call   0x10018773
1002d732:	mov    eax,0x100bbee4
1002d737:	jmp    0x10018845
1002d73c:	int3   
1002d73d:	int3   
1002d73e:	int3   
1002d73f:	int3   
1002d740:	mov    ecx,DWORD PTR [ebp-0x10]
1002d743:	jmp    0x100043e0
1002d748:	mov    edx,DWORD PTR [esp+0x8]
1002d74c:	lea    eax,[edx-0xc]
1002d74f:	mov    ecx,DWORD PTR [edx-0x10]
1002d752:	xor    ecx,eax
1002d754:	call   0x10018773
1002d759:	mov    eax,0x100bbf10
1002d75e:	jmp    0x10018845
1002d763:	int3   
1002d764:	int3   
1002d765:	int3   
1002d766:	int3   
1002d767:	int3   
1002d768:	int3   
1002d769:	int3   
1002d76a:	int3   
1002d76b:	int3   
1002d76c:	int3   
1002d76d:	int3   
1002d76e:	int3   
1002d76f:	int3   
1002d770:	mov    ecx,DWORD PTR [ebp-0x10]
1002d773:	jmp    0x10002c00
1002d778:	mov    edx,DWORD PTR [esp+0x8]
1002d77c:	lea    eax,[edx-0xc]
1002d77f:	mov    ecx,DWORD PTR [edx-0x10]
1002d782:	xor    ecx,eax
1002d784:	call   0x10018773
1002d789:	mov    eax,0x100bbf3c
1002d78e:	jmp    0x10018845
1002d793:	int3   
1002d794:	int3   
1002d795:	int3   
1002d796:	int3   
1002d797:	int3   
1002d798:	int3   
1002d799:	int3   
1002d79a:	int3   
1002d79b:	int3   
1002d79c:	int3   
1002d79d:	int3   
1002d79e:	int3   
1002d79f:	int3   
1002d7a0:	lea    ecx,[ebp+0x8]
1002d7a3:	jmp    0x10002c00
1002d7a8:	mov    edx,DWORD PTR [esp+0x8]
1002d7ac:	lea    eax,[edx-0x14]
1002d7af:	mov    ecx,DWORD PTR [edx-0x18]
1002d7b2:	xor    ecx,eax
1002d7b4:	call   0x10018773
1002d7b9:	mov    eax,0x100bbf68
1002d7be:	jmp    0x10018845
1002d7c3:	int3   
1002d7c4:	int3   
1002d7c5:	int3   
1002d7c6:	int3   
1002d7c7:	int3   
1002d7c8:	int3   
1002d7c9:	int3   
1002d7ca:	int3   
1002d7cb:	int3   
1002d7cc:	int3   
1002d7cd:	int3   
1002d7ce:	int3   
1002d7cf:	int3   
1002d7d0:	mov    eax,DWORD PTR [ebp-0x10]
1002d7d3:	and    eax,0x1
1002d7d6:	je     0x1002d7e8
1002d7dc:	and    DWORD PTR [ebp-0x10],0xfffffffe
1002d7e0:	mov    ecx,DWORD PTR [ebp+0x4]
1002d7e3:	jmp    0x10002f00
1002d7e8:	ret    
1002d7e9:	mov    edx,DWORD PTR [esp+0x8]
1002d7ed:	lea    eax,[edx-0x10]
1002d7f0:	mov    ecx,DWORD PTR [edx-0x14]
1002d7f3:	xor    ecx,eax
1002d7f5:	call   0x10018773
1002d7fa:	mov    eax,0x100bbf94
1002d7ff:	jmp    0x10018845
1002d804:	int3   
1002d805:	int3   
1002d806:	int3   
1002d807:	int3   
1002d808:	int3   
1002d809:	int3   
1002d80a:	int3   
1002d80b:	int3   
1002d80c:	int3   
1002d80d:	int3   
1002d80e:	int3   
1002d80f:	int3   
1002d810:	lea    ecx,[ebp-0x10]
1002d813:	jmp    0x10002f00
1002d818:	mov    edx,DWORD PTR [esp+0x8]
1002d81c:	lea    eax,[edx-0xc]
1002d81f:	mov    ecx,DWORD PTR [edx-0x10]
1002d822:	xor    ecx,eax
1002d824:	call   0x10018773
1002d829:	mov    eax,0x100bbfc0
1002d82e:	jmp    0x10018845
1002d833:	int3   
1002d834:	int3   
1002d835:	int3   
1002d836:	int3   
1002d837:	int3   
1002d838:	int3   
1002d839:	int3   
1002d83a:	int3   
1002d83b:	int3   
1002d83c:	int3   
1002d83d:	int3   
1002d83e:	int3   
1002d83f:	int3   
1002d840:	mov    eax,DWORD PTR [ebp-0x10]
1002d843:	and    eax,0x1
1002d846:	je     0x1002d858
1002d84c:	and    DWORD PTR [ebp-0x10],0xfffffffe
1002d850:	mov    ecx,DWORD PTR [ebp+0x4]
1002d853:	jmp    0x10002f00
1002d858:	ret    
1002d859:	mov    edx,DWORD PTR [esp+0x8]
1002d85d:	lea    eax,[edx-0xc]
1002d860:	mov    ecx,DWORD PTR [edx-0x10]
1002d863:	xor    ecx,eax
1002d865:	call   0x10018773
1002d86a:	mov    eax,0x100bbfec
1002d86f:	jmp    0x10018845
1002d874:	int3   
1002d875:	int3   
1002d876:	int3   
1002d877:	int3   
1002d878:	int3   
1002d879:	int3   
1002d87a:	int3   
1002d87b:	int3   
1002d87c:	int3   
1002d87d:	int3   
1002d87e:	int3   
1002d87f:	int3   
1002d880:	lea    eax,[ebp-0x14]
1002d883:	jmp    0x1000bd10
1002d888:	lea    ecx,[ebp-0x10]
1002d88b:	jmp    0x100033a0
1002d890:	mov    edx,DWORD PTR [esp+0x8]
1002d894:	lea    eax,[edx-0x1c]
1002d897:	mov    ecx,DWORD PTR [edx-0x20]
1002d89a:	xor    ecx,eax
1002d89c:	call   0x10018773
1002d8a1:	mov    eax,0x100bc020
1002d8a6:	jmp    0x10018845
1002d8ab:	int3   
1002d8ac:	int3   
1002d8ad:	int3   
1002d8ae:	int3   
1002d8af:	int3   
1002d8b0:	lea    ecx,[ebp+0x4]
1002d8b3:	jmp    0x10002f00
1002d8b8:	mov    eax,DWORD PTR [ebp-0x10]
1002d8bb:	push   eax
1002d8bc:	call   0x1001876e
1002d8c1:	pop    ecx
1002d8c2:	ret    
1002d8c3:	mov    edx,DWORD PTR [esp+0x8]
1002d8c7:	lea    eax,[edx-0x8]
1002d8ca:	mov    ecx,DWORD PTR [edx-0xc]
1002d8cd:	xor    ecx,eax
1002d8cf:	call   0x10018773
1002d8d4:	mov    eax,0x100bc054
1002d8d9:	jmp    0x10018845
1002d8de:	int3   
1002d8df:	int3   
1002d8e0:	lea    ecx,[ebp-0x28]
1002d8e3:	jmp    0x10002c00
1002d8e8:	mov    edx,DWORD PTR [esp+0x8]
1002d8ec:	lea    eax,[edx-0x28]
1002d8ef:	mov    ecx,DWORD PTR [edx-0x2c]
1002d8f2:	xor    ecx,eax
1002d8f4:	call   0x10018773
1002d8f9:	mov    eax,0x100bc080
1002d8fe:	jmp    0x10018845
1002d903:	int3   
1002d904:	int3   
1002d905:	int3   
1002d906:	int3   
1002d907:	int3   
1002d908:	int3   
1002d909:	int3   
1002d90a:	int3   
1002d90b:	int3   
1002d90c:	int3   
1002d90d:	int3   
1002d90e:	int3   
1002d90f:	int3   
1002d910:	mov    ecx,DWORD PTR [ebp-0x10]
1002d913:	jmp    0x10002f00
1002d918:	mov    edx,DWORD PTR [esp+0x8]
1002d91c:	lea    eax,[edx-0xc]
1002d91f:	mov    ecx,DWORD PTR [edx-0x10]
1002d922:	xor    ecx,eax
1002d924:	call   0x10018773
1002d929:	mov    eax,0x100bc0ac
1002d92e:	jmp    0x10018845
1002d933:	int3   
1002d934:	int3   
1002d935:	int3   
1002d936:	int3   
1002d937:	int3   
1002d938:	int3   
1002d939:	int3   
1002d93a:	int3   
1002d93b:	int3   
1002d93c:	int3   
1002d93d:	int3   
1002d93e:	int3   
1002d93f:	int3   
1002d940:	mov    ecx,DWORD PTR [ebp-0x10]
1002d943:	jmp    0x10002f00
1002d948:	mov    edx,DWORD PTR [esp+0x8]
1002d94c:	lea    eax,[edx-0xc]
1002d94f:	mov    ecx,DWORD PTR [edx-0x10]
1002d952:	xor    ecx,eax
1002d954:	call   0x10018773
1002d959:	mov    eax,0x100bc0d8
1002d95e:	jmp    0x10018845
1002d963:	int3   
1002d964:	int3   
1002d965:	int3   
1002d966:	int3   
1002d967:	int3   
1002d968:	int3   
1002d969:	int3   
1002d96a:	int3   
1002d96b:	int3   
1002d96c:	int3   
1002d96d:	int3   
1002d96e:	int3   
1002d96f:	int3   
1002d970:	lea    ecx,[ebp-0x54]
1002d973:	jmp    0x10002c00
1002d978:	mov    edx,DWORD PTR [esp+0x8]
1002d97c:	lea    eax,[edx-0x58]
1002d97f:	mov    ecx,DWORD PTR [edx-0x5c]
1002d982:	xor    ecx,eax
1002d984:	call   0x10018773
1002d989:	mov    eax,0x100bc104
1002d98e:	jmp    0x10018845
1002d993:	int3   
1002d994:	int3   
1002d995:	int3   
1002d996:	int3   
1002d997:	int3   
1002d998:	int3   
1002d999:	int3   
1002d99a:	int3   
1002d99b:	int3   
1002d99c:	int3   
1002d99d:	int3   
1002d99e:	int3   
1002d99f:	int3   
1002d9a0:	lea    ecx,[ebp-0x54]
1002d9a3:	jmp    0x10002c00
1002d9a8:	mov    edx,DWORD PTR [esp+0x8]
1002d9ac:	lea    eax,[edx-0x58]
1002d9af:	mov    ecx,DWORD PTR [edx-0x5c]
1002d9b2:	xor    ecx,eax
1002d9b4:	call   0x10018773
1002d9b9:	mov    eax,0x100bc130
1002d9be:	jmp    0x10018845
1002d9c3:	int3   
1002d9c4:	int3   
1002d9c5:	int3   
1002d9c6:	int3   
1002d9c7:	int3   
1002d9c8:	int3   
1002d9c9:	int3   
1002d9ca:	int3   
1002d9cb:	int3   
1002d9cc:	int3   
1002d9cd:	int3   
1002d9ce:	int3   
1002d9cf:	int3   
1002d9d0:	mov    eax,ds:0x100ca040
1002d9d5:	and    eax,0xfffffffe
1002d9d8:	mov    ds:0x100ca040,eax
1002d9dd:	ret    
1002d9de:	mov    edx,DWORD PTR [esp+0x8]
1002d9e2:	lea    eax,[edx-0x1c]
1002d9e5:	mov    ecx,DWORD PTR [edx-0x20]
1002d9e8:	xor    ecx,eax
1002d9ea:	call   0x10018773
1002d9ef:	mov    eax,0x100bc15c
1002d9f4:	jmp    0x10018845
1002d9f9:	int3   
1002d9fa:	int3   
1002d9fb:	int3   
1002d9fc:	int3   
1002d9fd:	int3   
1002d9fe:	int3   
1002d9ff:	int3   
1002da00:	lea    ecx,[ebp-0x50]
1002da03:	jmp    0x10002c00
1002da08:	mov    edx,DWORD PTR [esp+0x8]
1002da0c:	lea    eax,[edx+0xc]
1002da0f:	mov    ecx,DWORD PTR [edx-0x70]
1002da12:	xor    ecx,eax
1002da14:	call   0x10018773
1002da19:	mov    eax,0x100bc188
1002da1e:	jmp    0x10018845
1002da23:	int3   
1002da24:	int3   
1002da25:	int3   
1002da26:	int3   
1002da27:	int3   
1002da28:	int3   
1002da29:	int3   
1002da2a:	int3   
1002da2b:	int3   
1002da2c:	int3   
1002da2d:	int3   
1002da2e:	int3   
1002da2f:	int3   
1002da30:	lea    ecx,[ebp-0x54]
1002da33:	jmp    0x10002c00
1002da38:	mov    edx,DWORD PTR [esp+0x8]
1002da3c:	lea    eax,[edx-0x5c]
1002da3f:	mov    ecx,DWORD PTR [edx-0x60]
1002da42:	xor    ecx,eax
1002da44:	call   0x10018773
1002da49:	mov    eax,0x100bc1b4
1002da4e:	jmp    0x10018845
1002da53:	int3   
1002da54:	int3   
1002da55:	int3   
1002da56:	int3   
1002da57:	int3   
1002da58:	int3   
1002da59:	int3   
1002da5a:	int3   
1002da5b:	int3   
1002da5c:	int3   
1002da5d:	int3   
1002da5e:	int3   
1002da5f:	int3   
1002da60:	lea    ecx,[ebp-0x54]
1002da63:	jmp    0x10002c00
1002da68:	mov    edx,DWORD PTR [esp+0x8]
1002da6c:	lea    eax,[edx-0x5c]
1002da6f:	mov    ecx,DWORD PTR [edx-0x60]
1002da72:	xor    ecx,eax
1002da74:	call   0x10018773
1002da79:	mov    eax,0x100bc1e0
1002da7e:	jmp    0x10018845
1002da83:	int3   
1002da84:	int3   
1002da85:	int3   
1002da86:	int3   
1002da87:	int3   
1002da88:	int3   
1002da89:	int3   
1002da8a:	int3   
1002da8b:	int3   
1002da8c:	int3   
1002da8d:	int3   
1002da8e:	int3   
1002da8f:	int3   
1002da90:	lea    ecx,[ebp-0x54]
1002da93:	jmp    0x10002c00
1002da98:	mov    edx,DWORD PTR [esp+0x8]
1002da9c:	lea    eax,[edx-0x5c]
1002da9f:	mov    ecx,DWORD PTR [edx-0x60]
1002daa2:	xor    ecx,eax
1002daa4:	call   0x10018773
1002daa9:	mov    eax,0x100bc20c
1002daae:	jmp    0x10018845
1002dab3:	int3   
1002dab4:	int3   
1002dab5:	int3   
1002dab6:	int3   
1002dab7:	int3   
1002dab8:	int3   
1002dab9:	int3   
1002daba:	int3   
1002dabb:	int3   
1002dabc:	int3   
1002dabd:	int3   
1002dabe:	int3   
1002dabf:	int3   
1002dac0:	lea    ecx,[ebp-0x54]
1002dac3:	jmp    0x10002c00
1002dac8:	mov    edx,DWORD PTR [esp+0x8]
1002dacc:	lea    eax,[edx-0x5c]
1002dacf:	mov    ecx,DWORD PTR [edx-0x60]
1002dad2:	xor    ecx,eax
1002dad4:	call   0x10018773
1002dad9:	mov    eax,0x100bc238
1002dade:	jmp    0x10018845
1002dae3:	int3   
1002dae4:	int3   
1002dae5:	int3   
1002dae6:	int3   
1002dae7:	int3   
1002dae8:	int3   
1002dae9:	int3   
1002daea:	int3   
1002daeb:	int3   
1002daec:	int3   
1002daed:	int3   
1002daee:	int3   
1002daef:	int3   
1002daf0:	lea    ecx,[ebp-0x64]
1002daf3:	jmp    0x100043e0
1002daf8:	lea    ecx,[ebp-0x48]
1002dafb:	jmp    0x100046a0
1002db00:	mov    edx,DWORD PTR [esp+0x8]
1002db04:	lea    eax,[edx-0x6c]
1002db07:	mov    ecx,DWORD PTR [edx-0x70]
1002db0a:	xor    ecx,eax
1002db0c:	call   0x10018773
1002db11:	mov    eax,0x100bc26c
1002db16:	jmp    0x10018845
1002db1b:	int3   
1002db1c:	int3   
1002db1d:	int3   
1002db1e:	int3   
1002db1f:	int3   
1002db20:	lea    ecx,[ebp-0x64]
1002db23:	jmp    0x10002c00
1002db28:	lea    ecx,[ebp-0x48]
1002db2b:	jmp    0x10004650
1002db30:	mov    edx,DWORD PTR [esp+0x8]
1002db34:	lea    eax,[edx-0x6c]
1002db37:	mov    ecx,DWORD PTR [edx-0x70]
1002db3a:	xor    ecx,eax
1002db3c:	call   0x10018773
1002db41:	mov    eax,0x100bc2a0
1002db46:	jmp    0x10018845
1002db4b:	int3   
1002db4c:	int3   
1002db4d:	int3   
1002db4e:	int3   
1002db4f:	int3   
1002db50:	mov    eax,ds:0x100c9d30
1002db55:	and    eax,0xfffffffe
1002db58:	mov    ds:0x100c9d30,eax
1002db5d:	ret    
1002db5e:	mov    edx,DWORD PTR [esp+0x8]
1002db62:	lea    eax,[edx]
1002db64:	mov    ecx,DWORD PTR [edx-0x4]
1002db67:	xor    ecx,eax
1002db69:	call   0x10018773
1002db6e:	mov    eax,0x100bc2cc
1002db73:	jmp    0x10018845
1002db78:	int3   
1002db79:	int3   
1002db7a:	int3   
1002db7b:	int3   
1002db7c:	int3   
1002db7d:	int3   
1002db7e:	int3   
1002db7f:	int3   
1002db80:	mov    eax,ds:0x100c9d34
1002db85:	and    eax,0xfffffffe
1002db88:	mov    ds:0x100c9d34,eax
1002db8d:	ret    
1002db8e:	mov    edx,DWORD PTR [esp+0x8]
1002db92:	lea    eax,[edx]
1002db94:	mov    ecx,DWORD PTR [edx-0x4]
1002db97:	xor    ecx,eax
1002db99:	call   0x10018773
1002db9e:	mov    eax,0x100bc2f8
1002dba3:	jmp    0x10018845
1002dba8:	int3   
1002dba9:	int3   
1002dbaa:	int3   
1002dbab:	int3   
1002dbac:	int3   
1002dbad:	int3   
1002dbae:	int3   
1002dbaf:	int3   
1002dbb0:	lea    ecx,[ebp-0x4c]
1002dbb3:	jmp    0x100043e0
1002dbb8:	lea    ecx,[ebp-0x30]
1002dbbb:	jmp    0x100043e0
1002dbc0:	mov    edx,DWORD PTR [esp+0x8]
1002dbc4:	lea    eax,[edx-0x5c]
1002dbc7:	mov    ecx,DWORD PTR [edx-0x60]
1002dbca:	xor    ecx,eax
1002dbcc:	call   0x10018773
1002dbd1:	add    eax,0xc
1002dbd4:	mov    ecx,DWORD PTR [edx-0x8]
1002dbd7:	xor    ecx,eax
1002dbd9:	call   0x10018773
1002dbde:	mov    eax,0x100bc32c
1002dbe3:	jmp    0x10018845
1002dbe8:	int3   
1002dbe9:	int3   
1002dbea:	int3   
1002dbeb:	int3   
1002dbec:	int3   
1002dbed:	int3   
1002dbee:	int3   
1002dbef:	int3   
1002dbf0:	lea    ecx,[ebp-0x4c]
1002dbf3:	jmp    0x10002c00
1002dbf8:	lea    ecx,[ebp-0x30]
1002dbfb:	jmp    0x10002c00
1002dc00:	mov    edx,DWORD PTR [esp+0x8]
1002dc04:	lea    eax,[edx-0x5c]
1002dc07:	mov    ecx,DWORD PTR [edx-0x60]
1002dc0a:	xor    ecx,eax
1002dc0c:	call   0x10018773
1002dc11:	add    eax,0xc
1002dc14:	mov    ecx,DWORD PTR [edx-0x8]
1002dc17:	xor    ecx,eax
1002dc19:	call   0x10018773
1002dc1e:	mov    eax,0x100bc360
1002dc23:	jmp    0x10018845
1002dc28:	int3   
1002dc29:	int3   
1002dc2a:	int3   
1002dc2b:	int3   
1002dc2c:	int3   
1002dc2d:	int3   
1002dc2e:	int3   
1002dc2f:	int3   
1002dc30:	lea    ecx,[ebp-0x48]
1002dc33:	jmp    0x10002c00
1002dc38:	lea    ecx,[ebp-0x2c]
1002dc3b:	jmp    0x10002c00
1002dc40:	mov    edx,DWORD PTR [esp+0x8]
1002dc44:	lea    eax,[edx-0x54]
1002dc47:	mov    ecx,DWORD PTR [edx-0x58]
1002dc4a:	xor    ecx,eax
1002dc4c:	call   0x10018773
1002dc51:	add    eax,0xc
1002dc54:	mov    ecx,DWORD PTR [edx-0x4]
1002dc57:	xor    ecx,eax
1002dc59:	call   0x10018773
1002dc5e:	mov    eax,0x100bc394
1002dc63:	jmp    0x10018845
1002dc68:	int3   
1002dc69:	int3   
1002dc6a:	int3   
1002dc6b:	int3   
1002dc6c:	int3   
1002dc6d:	int3   
1002dc6e:	int3   
1002dc6f:	int3   
1002dc70:	lea    ecx,[ebp-0x48]
1002dc73:	jmp    0x100043e0
1002dc78:	lea    ecx,[ebp-0x2c]
1002dc7b:	jmp    0x100043e0
1002dc80:	mov    edx,DWORD PTR [esp+0x8]
1002dc84:	lea    eax,[edx-0x5c]
1002dc87:	mov    ecx,DWORD PTR [edx-0x60]
1002dc8a:	xor    ecx,eax
1002dc8c:	call   0x10018773
1002dc91:	add    eax,0x10
1002dc94:	mov    ecx,DWORD PTR [edx-0x4]
1002dc97:	xor    ecx,eax
1002dc99:	call   0x10018773
1002dc9e:	mov    eax,0x100bc3c8
1002dca3:	jmp    0x10018845
1002dca8:	int3   
1002dca9:	int3   
1002dcaa:	int3   
1002dcab:	int3   
1002dcac:	int3   
1002dcad:	int3   
1002dcae:	int3   
1002dcaf:	int3   
1002dcb0:	lea    ecx,[ebp-0x28]
1002dcb3:	jmp    0x10002c00
1002dcb8:	mov    edx,DWORD PTR [esp+0x8]
1002dcbc:	lea    eax,[edx-0x20]
1002dcbf:	mov    ecx,DWORD PTR [edx-0x24]
1002dcc2:	xor    ecx,eax
1002dcc4:	call   0x10018773
1002dcc9:	mov    eax,0x100bc3f4
1002dcce:	jmp    0x10018845
1002dcd3:	int3   
1002dcd4:	int3   
1002dcd5:	int3   
1002dcd6:	int3   
1002dcd7:	int3   
1002dcd8:	int3   
1002dcd9:	int3   
1002dcda:	int3   
1002dcdb:	int3   
1002dcdc:	int3   
1002dcdd:	int3   
1002dcde:	int3   
1002dcdf:	int3   
1002dce0:	mov    eax,DWORD PTR [ebp-0x34]
1002dce3:	and    eax,0x1
1002dce6:	je     0x1002dcf8
1002dcec:	and    DWORD PTR [ebp-0x34],0xfffffffe
1002dcf0:	mov    ecx,DWORD PTR [ebp-0x30]
1002dcf3:	jmp    0x10002c00
1002dcf8:	ret    
1002dcf9:	lea    ecx,[ebp-0x2c]
1002dcfc:	jmp    0x10002c00
1002dd01:	lea    ecx,[ebp-0x3c]
1002dd04:	jmp    0x10002f00
1002dd09:	lea    ecx,[ebp-0x2c]
1002dd0c:	jmp    0x10002c00
1002dd11:	lea    ecx,[ebp-0x3c]
1002dd14:	jmp    0x10002f00
1002dd19:	lea    ecx,[ebp-0x2c]
1002dd1c:	jmp    0x10002c00
1002dd21:	lea    ecx,[ebp-0x2c]
1002dd24:	jmp    0x10002c00
1002dd29:	mov    edx,DWORD PTR [esp+0x8]
1002dd2d:	lea    eax,[edx-0x40]
1002dd30:	mov    ecx,DWORD PTR [edx-0x44]
1002dd33:	xor    ecx,eax
1002dd35:	call   0x10018773
1002dd3a:	add    eax,0x10
1002dd3d:	mov    ecx,DWORD PTR [edx-0x4]
1002dd40:	xor    ecx,eax
1002dd42:	call   0x10018773
1002dd47:	mov    eax,0x100bc450
1002dd4c:	jmp    0x10018845
1002dd51:	int3   
1002dd52:	int3   
1002dd53:	int3   
1002dd54:	int3   
1002dd55:	int3   
1002dd56:	int3   
1002dd57:	int3   
1002dd58:	int3   
1002dd59:	int3   
1002dd5a:	int3   
1002dd5b:	int3   
1002dd5c:	int3   
1002dd5d:	int3   
1002dd5e:	int3   
1002dd5f:	int3   
1002dd60:	lea    eax,[ebp-0x1c]
1002dd63:	jmp    0x1000d6c0
1002dd68:	mov    edx,DWORD PTR [esp+0x8]
1002dd6c:	lea    eax,[edx-0x20]
1002dd6f:	mov    ecx,DWORD PTR [edx-0x24]
1002dd72:	xor    ecx,eax
1002dd74:	call   0x10018773
1002dd79:	mov    eax,0x100bc47c
1002dd7e:	jmp    0x10018845
1002dd83:	int3   
1002dd84:	int3   
1002dd85:	int3   
1002dd86:	int3   
1002dd87:	int3   
1002dd88:	int3   
1002dd89:	int3   
1002dd8a:	int3   
1002dd8b:	int3   
1002dd8c:	int3   
1002dd8d:	int3   
1002dd8e:	int3   
1002dd8f:	int3   
1002dd90:	lea    ecx,[ebp-0x28]
1002dd93:	jmp    0x1000a6a0
1002dd98:	lea    ecx,[ebp-0xf8]
1002dd9e:	jmp    0x10002c00
1002dda3:	lea    eax,[ebp-0x38]
1002dda6:	jmp    0x1000bd10
1002ddab:	mov    edx,DWORD PTR [esp+0x8]
1002ddaf:	lea    eax,[edx+0xc]
1002ddb2:	mov    ecx,DWORD PTR [edx-0x260]
1002ddb8:	xor    ecx,eax
1002ddba:	call   0x10018773
1002ddbf:	mov    ecx,DWORD PTR [edx-0x30]
1002ddc2:	xor    ecx,eax
1002ddc4:	call   0x10018773
1002ddc9:	mov    eax,0x100bc4f4
1002ddce:	jmp    0x10018845
1002ddd3:	int3   
1002ddd4:	int3   
1002ddd5:	int3   
1002ddd6:	int3   
1002ddd7:	int3   
1002ddd8:	int3   
1002ddd9:	int3   
1002ddda:	int3   
1002dddb:	int3   
1002dddc:	int3   
1002dddd:	int3   
1002ddde:	int3   
1002dddf:	int3   
1002dde0:	lea    ecx,[ebp-0x11]
1002dde3:	jmp    0x10006ea0
1002dde8:	lea    ecx,[ebp-0x10]
1002ddeb:	jmp    0x1000a750
1002ddf0:	mov    edx,DWORD PTR [esp+0x8]
1002ddf4:	lea    eax,[edx+0xc]
1002ddf7:	mov    ecx,DWORD PTR [edx-0x1c]
1002ddfa:	xor    ecx,eax
1002ddfc:	call   0x10018773
1002de01:	mov    eax,0x100bc528
1002de06:	jmp    0x10018845
1002de0b:	int3   
1002de0c:	int3   
1002de0d:	int3   
1002de0e:	int3   
1002de0f:	int3   
1002de10:	mov    eax,DWORD PTR [ebp-0x9c]
1002de16:	and    eax,0x1
1002de19:	je     0x1002de31
1002de1f:	and    DWORD PTR [ebp-0x9c],0xfffffffe
1002de26:	mov    ecx,DWORD PTR [ebp-0x98]
1002de2c:	jmp    0x10002f00
1002de31:	ret    
1002de32:	mov    edx,DWORD PTR [esp+0x8]
1002de36:	lea    eax,[edx-0x98]
1002de3c:	mov    ecx,DWORD PTR [edx-0x9c]
1002de42:	xor    ecx,eax
1002de44:	call   0x10018773
1002de49:	add    eax,0x4
1002de4c:	mov    ecx,DWORD PTR [edx-0x8]
1002de4f:	xor    ecx,eax
1002de51:	call   0x10018773
1002de56:	mov    eax,0x100bc554
1002de5b:	jmp    0x10018845
1002de60:	lea    ecx,[ebp-0x54]
1002de63:	jmp    0x10002c00
1002de68:	mov    edx,DWORD PTR [esp+0x8]
1002de6c:	lea    eax,[edx-0x48]
1002de6f:	mov    ecx,DWORD PTR [edx-0x4c]
1002de72:	xor    ecx,eax
1002de74:	call   0x10018773
1002de79:	mov    eax,0x100bc59c
1002de7e:	jmp    0x10018845
1002de83:	int3   
1002de84:	int3   
1002de85:	int3   
1002de86:	int3   
1002de87:	int3   
1002de88:	int3   
1002de89:	int3   
1002de8a:	int3   
1002de8b:	int3   
1002de8c:	int3   
1002de8d:	int3   
1002de8e:	int3   
1002de8f:	int3   
1002de90:	lea    ecx,[ebp-0x28]
1002de93:	jmp    0x10002c00
1002de98:	mov    edx,DWORD PTR [esp+0x8]
1002de9c:	lea    eax,[edx-0x28]
1002de9f:	mov    ecx,DWORD PTR [edx-0x2c]
1002dea2:	xor    ecx,eax
1002dea4:	call   0x10018773
1002dea9:	mov    eax,0x100bc5c8
1002deae:	jmp    0x10018845
1002deb3:	int3   
1002deb4:	int3   
1002deb5:	int3   
1002deb6:	int3   
1002deb7:	int3   
1002deb8:	int3   
1002deb9:	int3   
1002deba:	int3   
1002debb:	int3   
1002debc:	int3   
1002debd:	int3   
1002debe:	int3   
1002debf:	int3   
1002dec0:	lea    ecx,[ebp-0x98]
1002dec6:	jmp    0x10002c00
1002decb:	lea    ecx,[ebp-0x98]
1002ded1:	jmp    0x10002c00
1002ded6:	lea    ecx,[ebp-0x7c]
1002ded9:	jmp    0x10002c00
1002dede:	mov    edx,DWORD PTR [esp+0x8]
1002dee2:	lea    eax,[edx-0xa8]
1002dee8:	mov    ecx,DWORD PTR [edx-0xac]
1002deee:	xor    ecx,eax
1002def0:	call   0x10018773
1002def5:	mov    eax,0x100bc604
1002defa:	jmp    0x10018845
1002deff:	int3   
1002df00:	mov    ecx,DWORD PTR [ebp+0x4]
1002df03:	jmp    0x10003310
1002df08:	mov    ecx,DWORD PTR [ebp+0x4]
1002df0b:	add    ecx,0x894
1002df11:	jmp    0x1000a4d0
1002df16:	mov    eax,DWORD PTR [ebp-0x2c]
1002df19:	push   eax
1002df1a:	call   0x1001876e
1002df1f:	pop    ecx
1002df20:	ret    
1002df21:	mov    eax,DWORD PTR [ebp-0x30]
1002df24:	and    eax,0x1
1002df27:	je     0x1002df39
1002df2d:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002df31:	lea    ecx,[ebp-0x28]
1002df34:	jmp    0x10002c00
1002df39:	ret    
1002df3a:	mov    edx,DWORD PTR [esp+0x8]
1002df3e:	lea    eax,[edx-0x34]
1002df41:	mov    ecx,DWORD PTR [edx-0x38]
1002df44:	xor    ecx,eax
1002df46:	call   0x10018773
1002df4b:	mov    eax,0x100bc650
1002df50:	jmp    0x10018845
1002df55:	int3   
1002df56:	int3   
1002df57:	int3   
1002df58:	int3   
1002df59:	int3   
1002df5a:	int3   
1002df5b:	int3   
1002df5c:	int3   
1002df5d:	int3   
1002df5e:	int3   
1002df5f:	int3   
1002df60:	lea    ecx,[ebp-0x2c]
1002df63:	jmp    0x10003310
1002df68:	mov    edx,DWORD PTR [esp+0x8]
1002df6c:	lea    eax,[edx-0x30]
1002df6f:	mov    ecx,DWORD PTR [edx-0x34]
1002df72:	xor    ecx,eax
1002df74:	call   0x10018773
1002df79:	mov    eax,0x100bc67c
1002df7e:	jmp    0x10018845
1002df83:	int3   
1002df84:	int3   
1002df85:	int3   
1002df86:	int3   
1002df87:	int3   
1002df88:	int3   
1002df89:	int3   
1002df8a:	int3   
1002df8b:	int3   
1002df8c:	int3   
1002df8d:	int3   
1002df8e:	int3   
1002df8f:	int3   
1002df90:	mov    ecx,DWORD PTR [ebp+0x4]
1002df93:	jmp    0x10008090
1002df98:	mov    edx,DWORD PTR [esp+0x8]
1002df9c:	lea    eax,[edx-0x8]
1002df9f:	mov    ecx,DWORD PTR [edx-0xc]
1002dfa2:	xor    ecx,eax
1002dfa4:	call   0x10018773
1002dfa9:	mov    eax,0x100bc6a8
1002dfae:	jmp    0x10018845
1002dfb3:	int3   
1002dfb4:	int3   
1002dfb5:	int3   
1002dfb6:	int3   
1002dfb7:	int3   
1002dfb8:	int3   
1002dfb9:	int3   
1002dfba:	int3   
1002dfbb:	int3   
1002dfbc:	int3   
1002dfbd:	int3   
1002dfbe:	int3   
1002dfbf:	int3   
1002dfc0:	lea    ecx,[ebp-0x18]
1002dfc3:	jmp    0x10003310
1002dfc8:	lea    ecx,[ebp-0x1c]
1002dfcb:	jmp    0x10002f00
1002dfd0:	mov    eax,ds:0x100ca048
1002dfd5:	and    eax,0xfffffffe
1002dfd8:	mov    ds:0x100ca048,eax
1002dfdd:	ret    
1002dfde:	mov    edx,DWORD PTR [esp+0x8]
1002dfe2:	lea    eax,[edx-0x24]
1002dfe5:	mov    ecx,DWORD PTR [edx-0x28]
1002dfe8:	xor    ecx,eax
1002dfea:	call   0x10018773
1002dfef:	mov    eax,0x100bc6e4
1002dff4:	jmp    0x10018845
1002dff9:	int3   
1002dffa:	int3   
1002dffb:	int3   
1002dffc:	int3   
1002dffd:	int3   
1002dffe:	int3   
1002dfff:	int3   
1002e000:	lea    ecx,[ebp-0x10]
1002e003:	jmp    0x10003310
1002e008:	mov    edx,DWORD PTR [esp+0x8]
1002e00c:	lea    eax,[edx-0x14]
1002e00f:	mov    ecx,DWORD PTR [edx-0x18]
1002e012:	xor    ecx,eax
1002e014:	call   0x10018773
1002e019:	mov    eax,0x100bc710
1002e01e:	jmp    0x10018845
1002e023:	int3   
1002e024:	int3   
1002e025:	int3   
1002e026:	int3   
1002e027:	int3   
1002e028:	int3   
1002e029:	int3   
1002e02a:	int3   
1002e02b:	int3   
1002e02c:	int3   
1002e02d:	int3   
1002e02e:	int3   
1002e02f:	int3   
1002e030:	lea    ecx,[ebp-0x54]
1002e033:	jmp    0x10002c00
1002e038:	mov    edx,DWORD PTR [esp+0x8]
1002e03c:	lea    eax,[edx-0x54]
1002e03f:	mov    ecx,DWORD PTR [edx-0x58]
1002e042:	xor    ecx,eax
1002e044:	call   0x10018773
1002e049:	mov    eax,0x100bc73c
1002e04e:	jmp    0x10018845
1002e053:	int3   
1002e054:	int3   
1002e055:	int3   
1002e056:	int3   
1002e057:	int3   
1002e058:	int3   
1002e059:	int3   
1002e05a:	int3   
1002e05b:	int3   
1002e05c:	int3   
1002e05d:	int3   
1002e05e:	int3   
1002e05f:	int3   
1002e060:	lea    ecx,[ebp-0x58]
1002e063:	jmp    0x100033a0
1002e068:	lea    eax,[ebp-0x5c]
1002e06b:	jmp    0x1000bd10
1002e070:	lea    ecx,[ebp-0x54]
1002e073:	jmp    0x10002c00
1002e078:	lea    ecx,[ebp-0x54]
1002e07b:	jmp    0x10002c00
1002e080:	lea    ecx,[ebp-0x54]
1002e083:	jmp    0x10002c00
1002e088:	mov    edx,DWORD PTR [esp+0x8]
1002e08c:	lea    eax,[edx-0x5c]
1002e08f:	mov    ecx,DWORD PTR [edx-0x60]
1002e092:	xor    ecx,eax
1002e094:	call   0x10018773
1002e099:	mov    eax,0x100bc788
1002e09e:	jmp    0x10018845
1002e0a3:	int3   
1002e0a4:	int3   
1002e0a5:	int3   
1002e0a6:	int3   
1002e0a7:	int3   
1002e0a8:	int3   
1002e0a9:	int3   
1002e0aa:	int3   
1002e0ab:	int3   
1002e0ac:	int3   
1002e0ad:	int3   
1002e0ae:	int3   
1002e0af:	int3   
1002e0b0:	lea    ecx,[ebp-0x16c]
1002e0b6:	jmp    0x10002c00
1002e0bb:	mov    edx,DWORD PTR [esp+0x8]
1002e0bf:	lea    eax,[edx-0x174]
1002e0c5:	mov    ecx,DWORD PTR [edx-0x178]
1002e0cb:	xor    ecx,eax
1002e0cd:	call   0x10018773
1002e0d2:	add    eax,0x8
1002e0d5:	mov    ecx,DWORD PTR [edx-0x8]
1002e0d8:	xor    ecx,eax
1002e0da:	call   0x10018773
1002e0df:	mov    eax,0x100bc7b4
1002e0e4:	jmp    0x10018845
1002e0e9:	int3   
1002e0ea:	int3   
1002e0eb:	int3   
1002e0ec:	int3   
1002e0ed:	int3   
1002e0ee:	int3   
1002e0ef:	int3   
1002e0f0:	lea    ecx,[ebp-0x10]
1002e0f3:	jmp    0x10002f00
1002e0f8:	lea    ecx,[ebp-0x14]
1002e0fb:	jmp    0x10002f00
1002e100:	lea    ecx,[ebp-0x18]
1002e103:	jmp    0x10002f00
1002e108:	lea    ecx,[ebp-0x1c]
1002e10b:	jmp    0x10002f00
1002e110:	mov    edx,DWORD PTR [esp+0x8]
1002e114:	lea    eax,[edx-0x18]
1002e117:	mov    ecx,DWORD PTR [edx-0x1c]
1002e11a:	xor    ecx,eax
1002e11c:	call   0x10018773
1002e121:	mov    eax,0x100bc7f8
1002e126:	jmp    0x10018845
1002e12b:	int3   
1002e12c:	int3   
1002e12d:	int3   
1002e12e:	int3   
1002e12f:	int3   
1002e130:	lea    ecx,[ebp+0x8]
1002e133:	jmp    0x10002f00
1002e138:	lea    ecx,[ebp-0x43c]
1002e13e:	jmp    0x10003310
1002e143:	mov    edx,DWORD PTR [esp+0x8]
1002e147:	lea    eax,[edx-0x444]
1002e14d:	mov    ecx,DWORD PTR [edx-0x448]
1002e153:	xor    ecx,eax
1002e155:	call   0x10018773
1002e15a:	add    eax,0x10
1002e15d:	mov    ecx,DWORD PTR [edx-0x4]
1002e160:	xor    ecx,eax
1002e162:	call   0x10018773
1002e167:	mov    eax,0x100bc82c
1002e16c:	jmp    0x10018845
1002e171:	int3   
1002e172:	int3   
1002e173:	int3   
1002e174:	int3   
1002e175:	int3   
1002e176:	int3   
1002e177:	int3   
1002e178:	int3   
1002e179:	int3   
1002e17a:	int3   
1002e17b:	int3   
1002e17c:	int3   
1002e17d:	int3   
1002e17e:	int3   
1002e17f:	int3   
1002e180:	mov    eax,ds:0x100ca04c
1002e185:	and    eax,0xfffffffe
1002e188:	mov    ds:0x100ca04c,eax
1002e18d:	ret    
1002e18e:	mov    eax,DWORD PTR [ebp-0x30]
1002e191:	and    eax,0x1
1002e194:	je     0x1002e1a6
1002e19a:	and    DWORD PTR [ebp-0x30],0xfffffffe
1002e19e:	mov    ecx,DWORD PTR [ebp-0x34]
1002e1a1:	jmp    0x10002f00
1002e1a6:	ret    
1002e1a7:	lea    ecx,[ebp-0x50]
1002e1aa:	jmp    0x10002c00
1002e1af:	mov    edx,DWORD PTR [esp+0x8]
1002e1b3:	lea    eax,[edx+0xc]
1002e1b6:	mov    ecx,DWORD PTR [edx-0xa20]
1002e1bc:	xor    ecx,eax
1002e1be:	call   0x10018773
1002e1c3:	mov    ecx,DWORD PTR [edx-0x8]
1002e1c6:	xor    ecx,eax
1002e1c8:	call   0x10018773
1002e1cd:	mov    eax,0x100bc868
1002e1d2:	jmp    0x10018845
1002e1d7:	int3   
1002e1d8:	int3   
1002e1d9:	int3   
1002e1da:	int3   
1002e1db:	int3   
1002e1dc:	int3   
1002e1dd:	int3   
1002e1de:	int3   
1002e1df:	int3   
1002e1e0:	mov    eax,DWORD PTR [ebp-0x54]
1002e1e3:	and    eax,0x1
1002e1e6:	je     0x1002e1f8
1002e1ec:	and    DWORD PTR [ebp-0x54],0xfffffffe
1002e1f0:	mov    ecx,DWORD PTR [ebp+0x4]
1002e1f3:	jmp    0x10002f00
1002e1f8:	ret    
1002e1f9:	lea    ecx,[ebp-0x50]
1002e1fc:	jmp    0x10002c00
1002e201:	mov    edx,DWORD PTR [esp+0x8]
1002e205:	lea    eax,[edx-0x54]
1002e208:	mov    ecx,DWORD PTR [edx-0x58]
1002e20b:	xor    ecx,eax
1002e20d:	call   0x10018773
1002e212:	mov    eax,0x100bc89c
1002e217:	jmp    0x10018845
1002e21c:	int3   
1002e21d:	int3   
1002e21e:	int3   
1002e21f:	int3   
1002e220:	lea    ecx,[ebp-0x1c]
1002e223:	jmp    0x10006fc0
1002e228:	mov    edx,DWORD PTR [esp+0x8]
1002e22c:	lea    eax,[edx+0xc]
1002e22f:	mov    ecx,DWORD PTR [edx-0x20]
1002e232:	xor    ecx,eax
1002e234:	call   0x10018773
1002e239:	mov    eax,0x100bc8fc
1002e23e:	jmp    0x10018845
1002e243:	int3   
1002e244:	int3   
1002e245:	int3   
1002e246:	int3   
1002e247:	int3   
1002e248:	int3   
1002e249:	int3   
1002e24a:	int3   
1002e24b:	int3   
1002e24c:	int3   
1002e24d:	int3   
1002e24e:	int3   
1002e24f:	int3   
1002e250:	lea    ecx,[ebp-0x40]
1002e253:	jmp    0x1000dce0
1002e258:	mov    edx,DWORD PTR [esp+0x8]
1002e25c:	lea    eax,[edx-0x44]
1002e25f:	mov    ecx,DWORD PTR [edx-0x48]
1002e262:	xor    ecx,eax
1002e264:	call   0x10018773
1002e269:	mov    eax,0x100bc928
1002e26e:	jmp    0x10018845
1002e273:	int3   
1002e274:	int3   
1002e275:	int3   
1002e276:	int3   
1002e277:	int3   
1002e278:	int3   
1002e279:	int3   
1002e27a:	int3   
1002e27b:	int3   
1002e27c:	int3   
1002e27d:	int3   
1002e27e:	int3   
1002e27f:	int3   
1002e280:	lea    ecx,[ebp-0x14]
1002e283:	jmp    0x1000dce0
1002e288:	mov    eax,DWORD PTR [ebp-0x1c]
1002e28b:	and    eax,0x1
1002e28e:	je     0x1002e2a0
1002e294:	and    DWORD PTR [ebp-0x1c],0xfffffffe
1002e298:	mov    ecx,DWORD PTR [ebp-0x18]
1002e29b:	jmp    0x10002c00
1002e2a0:	ret    
1002e2a1:	mov    edx,DWORD PTR [esp+0x8]
1002e2a5:	lea    eax,[edx-0x1c]
1002e2a8:	mov    ecx,DWORD PTR [edx-0x20]
1002e2ab:	xor    ecx,eax
1002e2ad:	call   0x10018773
1002e2b2:	mov    eax,0x100bc95c
1002e2b7:	jmp    0x10018845
1002e2bc:	int3   
1002e2bd:	int3   
1002e2be:	int3   
1002e2bf:	int3   
1002e2c0:	lea    eax,[ebp-0x1c]
1002e2c3:	jmp    0x1000d6c0
1002e2c8:	mov    eax,DWORD PTR [ebp-0x20]
1002e2cb:	and    eax,0x1
1002e2ce:	je     0x1002e2e0
1002e2d4:	and    DWORD PTR [ebp-0x20],0xfffffffe
1002e2d8:	mov    ecx,DWORD PTR [ebp-0x24]
1002e2db:	jmp    0x10002c00
1002e2e0:	ret    
1002e2e1:	mov    edx,DWORD PTR [esp+0x8]
1002e2e5:	lea    eax,[edx-0x38]
1002e2e8:	mov    ecx,DWORD PTR [edx-0x3c]
1002e2eb:	xor    ecx,eax
1002e2ed:	call   0x10018773
1002e2f2:	mov    eax,0x100bc990
1002e2f7:	jmp    0x10018845
1002e2fc:	int3   
1002e2fd:	int3   
1002e2fe:	int3   
1002e2ff:	int3   
1002e300:	lea    ecx,[ebp-0x1040]
1002e306:	jmp    0x1000a6a0
1002e30b:	lea    ecx,[ebp-0x106c]
1002e311:	jmp    0x10002c00
1002e316:	lea    eax,[ebp-0x104c]
1002e31c:	jmp    0x1000bd10
1002e321:	mov    edx,DWORD PTR [esp+0x8]
1002e325:	lea    eax,[edx+0xc]
1002e328:	mov    ecx,DWORD PTR [edx-0x1070]
1002e32e:	xor    ecx,eax
1002e330:	call   0x10018773
1002e335:	mov    ecx,DWORD PTR [edx-0xc]
1002e338:	xor    ecx,eax
1002e33a:	call   0x10018773
1002e33f:	mov    eax,0x100bca08
1002e344:	jmp    0x10018845
1002e349:	int3   
1002e34a:	int3   
1002e34b:	int3   
1002e34c:	int3   
1002e34d:	int3   
1002e34e:	int3   
1002e34f:	int3   
1002e350:	lea    ecx,[ebp-0x103c]
1002e356:	jmp    0x1000a6a0
1002e35b:	lea    ecx,[ebp-0x106c]
1002e361:	jmp    0x10002c00
1002e366:	lea    eax,[ebp-0x1044]
1002e36c:	jmp    0x1000bd10
1002e371:	mov    edx,DWORD PTR [esp+0x8]
1002e375:	lea    eax,[edx+0xc]
1002e378:	mov    ecx,DWORD PTR [edx-0x1074]
1002e37e:	xor    ecx,eax
1002e380:	call   0x10018773
1002e385:	mov    ecx,DWORD PTR [edx-0x8]
1002e388:	xor    ecx,eax
1002e38a:	call   0x10018773
1002e38f:	mov    eax,0x100bca80
1002e394:	jmp    0x10018845
1002e399:	int3   
1002e39a:	int3   
1002e39b:	int3   
1002e39c:	int3   
1002e39d:	int3   
1002e39e:	int3   
1002e39f:	int3   
1002e3a0:	lea    ecx,[ebp-0x10]
1002e3a3:	jmp    0x10002f00
1002e3a8:	mov    edx,DWORD PTR [esp+0x8]
1002e3ac:	lea    eax,[edx-0x4]
1002e3af:	mov    ecx,DWORD PTR [edx-0x8]
1002e3b2:	xor    ecx,eax
1002e3b4:	call   0x10018773
1002e3b9:	mov    eax,0x100bcaac
1002e3be:	jmp    0x10018845
1002e3c3:	int3   
1002e3c4:	int3   
1002e3c5:	int3   
1002e3c6:	int3   
1002e3c7:	int3   
1002e3c8:	int3   
1002e3c9:	int3   
1002e3ca:	int3   
1002e3cb:	int3   
1002e3cc:	int3   
1002e3cd:	int3   
1002e3ce:	int3   
1002e3cf:	int3   
1002e3d0:	mov    eax,DWORD PTR [ebp-0x58]
1002e3d3:	and    eax,0x1
1002e3d6:	je     0x1002e3e8
1002e3dc:	and    DWORD PTR [ebp-0x58],0xfffffffe
1002e3e0:	mov    ecx,DWORD PTR [ebp+0x4]
1002e3e3:	jmp    0x10002f00
1002e3e8:	ret    
1002e3e9:	lea    ecx,[ebp-0x54]
1002e3ec:	jmp    0x10002c00
1002e3f1:	mov    edx,DWORD PTR [esp+0x8]
1002e3f5:	lea    eax,[edx-0x60]
1002e3f8:	mov    ecx,DWORD PTR [edx-0x64]
1002e3fb:	xor    ecx,eax
1002e3fd:	call   0x10018773
1002e402:	mov    eax,0x100bcae0
1002e407:	jmp    0x10018845
1002e40c:	int3   
1002e40d:	int3   
1002e40e:	int3   
1002e40f:	int3   
1002e410:	lea    ecx,[ebp-0x3c]
1002e413:	jmp    0x100033a0
1002e418:	mov    edx,DWORD PTR [esp+0x8]
1002e41c:	lea    eax,[edx-0x3c]
1002e41f:	mov    ecx,DWORD PTR [edx-0x40]
1002e422:	xor    ecx,eax
1002e424:	call   0x10018773
1002e429:	mov    eax,0x100bcb0c
1002e42e:	jmp    0x10018845
1002e433:	int3   
1002e434:	int3   
1002e435:	int3   
1002e436:	int3   
1002e437:	int3   
1002e438:	int3   
1002e439:	int3   
1002e43a:	int3   
1002e43b:	int3   
1002e43c:	int3   
1002e43d:	int3   
1002e43e:	int3   
1002e43f:	int3   
1002e440:	lea    ecx,[ebp-0x40]
1002e443:	jmp    0x1000dce0
1002e448:	mov    edx,DWORD PTR [esp+0x8]
1002e44c:	lea    eax,[edx-0x44]
1002e44f:	mov    ecx,DWORD PTR [edx-0x48]
1002e452:	xor    ecx,eax
1002e454:	call   0x10018773
1002e459:	mov    eax,0x100bcb38
1002e45e:	jmp    0x10018845
1002e463:	int3   
1002e464:	int3   
1002e465:	int3   
1002e466:	int3   
1002e467:	int3   
1002e468:	int3   
1002e469:	int3   
1002e46a:	int3   
1002e46b:	int3   
1002e46c:	int3   
1002e46d:	int3   
1002e46e:	int3   
1002e46f:	int3   
1002e470:	lea    ecx,[ebp-0x31]
1002e473:	jmp    0x10006ea0
1002e478:	push   0x10003310
1002e47d:	push   0x4
1002e47f:	push   0x4
1002e481:	lea    eax,[ebp-0x20]
1002e484:	push   eax
1002e485:	call   0x1001a370
1002e48a:	ret    
1002e48b:	lea    ecx,[ebp-0x30]
1002e48e:	jmp    0x10002f00
1002e493:	lea    eax,[ebp-0x24]
1002e496:	jmp    0x1000bd10
1002e49b:	mov    edx,DWORD PTR [esp+0x8]
1002e49f:	lea    eax,[edx-0x34]
1002e4a2:	mov    ecx,DWORD PTR [edx-0x38]
1002e4a5:	xor    ecx,eax
1002e4a7:	call   0x10018773
1002e4ac:	mov    eax,0x100bcb7c
1002e4b1:	jmp    0x10018845
1002e4b6:	int3   
1002e4b7:	int3   
1002e4b8:	int3   
1002e4b9:	int3   
1002e4ba:	int3   
1002e4bb:	int3   
1002e4bc:	int3   
1002e4bd:	int3   
1002e4be:	int3   
1002e4bf:	int3   
1002e4c0:	lea    ecx,[ebp-0x94]
1002e4c6:	jmp    0x10002f00
1002e4cb:	mov    edx,DWORD PTR [esp+0x8]
1002e4cf:	lea    eax,[edx-0x8c]
1002e4d5:	mov    ecx,DWORD PTR [edx-0x90]
1002e4db:	xor    ecx,eax
1002e4dd:	call   0x10018773
1002e4e2:	add    eax,0x4
1002e4e5:	mov    ecx,DWORD PTR [edx-0x4]
1002e4e8:	xor    ecx,eax
1002e4ea:	call   0x10018773
1002e4ef:	mov    eax,0x100bcba8
1002e4f4:	jmp    0x10018845
1002e4f9:	int3   
1002e4fa:	int3   
1002e4fb:	int3   
1002e4fc:	int3   
1002e4fd:	int3   
1002e4fe:	int3   
1002e4ff:	int3   
1002e500:	lea    ecx,[ebp-0x7c]
1002e503:	jmp    0x10002f00
1002e508:	lea    ecx,[ebp-0xa4]
1002e50e:	jmp    0x10002c00
1002e513:	lea    ecx,[ebp-0xe8]
1002e519:	jmp    0x10002c00
1002e51e:	lea    ecx,[ebp-0x104]
1002e524:	jmp    0x10002c00
1002e529:	lea    ecx,[ebp-0x13c]
1002e52f:	jmp    0x10002c00
1002e534:	lea    ecx,[ebp-0x120]
1002e53a:	jmp    0x10002c00
1002e53f:	mov    edx,DWORD PTR [esp+0x8]
1002e543:	lea    eax,[edx+0xc]
1002e546:	mov    ecx,DWORD PTR [edx-0x144]
1002e54c:	xor    ecx,eax
1002e54e:	call   0x10018773
1002e553:	mov    ecx,DWORD PTR [edx-0x4]
1002e556:	xor    ecx,eax
1002e558:	call   0x10018773
1002e55d:	mov    eax,0x100bcbfc
1002e562:	jmp    0x10018845
1002e567:	int3   
1002e568:	int3   
1002e569:	int3   
1002e56a:	int3   
1002e56b:	int3   
1002e56c:	int3   
1002e56d:	int3   
1002e56e:	int3   
1002e56f:	int3   
1002e570:	lea    ecx,[ebp-0xb4]
1002e576:	jmp    0x1000a6a0
1002e57b:	lea    eax,[ebp-0x4c]
1002e57e:	push   eax
1002e57f:	call   0x10007e90
1002e584:	ret    
1002e585:	lea    ecx,[ebp-0xb0]
1002e58b:	jmp    0x10002c00
1002e590:	lea    ecx,[ebp-0xb0]
1002e596:	jmp    0x10002c00
1002e59b:	lea    ecx,[ebp-0xb0]
1002e5a1:	jmp    0x10002c00
1002e5a6:	lea    ecx,[ebp-0xb0]
1002e5ac:	jmp    0x10002c00
1002e5b1:	lea    ecx,[ebp-0xb0]
1002e5b7:	jmp    0x10002c00
1002e5bc:	lea    ecx,[ebp-0xb0]
1002e5c2:	jmp    0x10002c00
1002e5c7:	lea    ecx,[ebp-0xb0]
1002e5cd:	jmp    0x10002c00
1002e5d2:	lea    ecx,[ebp-0xb0]
1002e5d8:	jmp    0x10002c00
1002e5dd:	lea    ecx,[ebp-0xb0]
1002e5e3:	jmp    0x10002c00
1002e5e8:	lea    ecx,[ebp-0x68]
1002e5eb:	jmp    0x10002c00
1002e5f0:	mov    edx,DWORD PTR [esp+0x8]
1002e5f4:	lea    eax,[edx-0xb4]
1002e5fa:	mov    ecx,DWORD PTR [edx-0xb8]
1002e600:	xor    ecx,eax
1002e602:	call   0x10018773
1002e607:	mov    eax,0x100bcc80
1002e60c:	jmp    0x10018845
1002e611:	int3   
1002e612:	int3   
1002e613:	int3   
1002e614:	int3   
1002e615:	int3   
1002e616:	int3   
1002e617:	int3   
1002e618:	int3   
1002e619:	int3   
1002e61a:	int3   
1002e61b:	int3   
1002e61c:	int3   
1002e61d:	int3   
1002e61e:	int3   
1002e61f:	int3   
1002e620:	lea    ecx,[ebp-0x870]
1002e626:	jmp    0x10002c00
1002e62b:	lea    eax,[ebp-0x854]
1002e631:	push   eax
1002e632:	call   0x10007e90
1002e637:	ret    
1002e638:	lea    ecx,[ebp-0x87c]
1002e63e:	jmp    0x10002f00
1002e643:	mov    edx,DWORD PTR [esp+0x8]
1002e647:	lea    eax,[edx-0x87c]
1002e64d:	mov    ecx,DWORD PTR [edx-0x880]
1002e653:	xor    ecx,eax
1002e655:	call   0x10018773
1002e65a:	add    eax,0xc
1002e65d:	mov    ecx,DWORD PTR [edx-0x8]
1002e660:	xor    ecx,eax
1002e662:	call   0x10018773
1002e667:	mov    eax,0x100bccbc
1002e66c:	jmp    0x10018845
1002e671:	int3   
1002e672:	int3   
1002e673:	int3   
1002e674:	int3   
1002e675:	int3   
1002e676:	int3   
1002e677:	int3   
1002e678:	int3   
1002e679:	int3   
1002e67a:	int3   
1002e67b:	int3   
1002e67c:	int3   
1002e67d:	int3   
1002e67e:	int3   
1002e67f:	int3   
1002e680:	mov    eax,DWORD PTR [ebp-0x18]
1002e683:	and    eax,0x1
1002e686:	je     0x1002e698
1002e68c:	and    DWORD PTR [ebp-0x18],0xfffffffe
1002e690:	mov    ecx,DWORD PTR [ebp+0x4]
1002e693:	jmp    0x10002f00
1002e698:	ret    
1002e699:	lea    ecx,[ebp-0x14]
1002e69c:	jmp    0x10002f00
1002e6a1:	lea    ecx,[ebp-0x10]
1002e6a4:	jmp    0x10002f00
1002e6a9:	lea    ecx,[ebp-0x14]
1002e6ac:	jmp    0x10002f00
1002e6b1:	mov    edx,DWORD PTR [esp+0x8]
1002e6b5:	lea    eax,[edx-0x14]
1002e6b8:	mov    ecx,DWORD PTR [edx-0x18]
1002e6bb:	xor    ecx,eax
1002e6bd:	call   0x10018773
1002e6c2:	mov    eax,0x100bcd00
1002e6c7:	jmp    0x10018845
1002e6cc:	int3   
1002e6cd:	int3   
1002e6ce:	int3   
1002e6cf:	int3   
1002e6d0:	mov    eax,DWORD PTR [ebp-0x18]
1002e6d3:	and    eax,0x1
1002e6d6:	je     0x1002e6e8
1002e6dc:	and    DWORD PTR [ebp-0x18],0xfffffffe
1002e6e0:	mov    ecx,DWORD PTR [ebp+0x4]
1002e6e3:	jmp    0x10002f00
1002e6e8:	ret    
1002e6e9:	lea    ecx,[ebp-0x14]
1002e6ec:	jmp    0x10002f00
1002e6f1:	lea    ecx,[ebp-0x10]
1002e6f4:	jmp    0x10002f00
1002e6f9:	lea    ecx,[ebp-0x14]
1002e6fc:	jmp    0x10002f00
1002e701:	mov    edx,DWORD PTR [esp+0x8]
1002e705:	lea    eax,[edx-0x14]
1002e708:	mov    ecx,DWORD PTR [edx-0x18]
1002e70b:	xor    ecx,eax
1002e70d:	call   0x10018773
1002e712:	mov    eax,0x100bcd44
1002e717:	jmp    0x10018845
1002e71c:	int3   
1002e71d:	int3   
1002e71e:	int3   
1002e71f:	int3   
1002e720:	lea    esi,[ebp-0x8b0]
1002e726:	jmp    0x10009b80
1002e72b:	lea    ecx,[ebp-0x8dc]
1002e731:	jmp    0x10002c00
1002e736:	mov    edx,DWORD PTR [esp+0x8]
1002e73a:	lea    eax,[edx+0xc]
1002e73d:	mov    ecx,DWORD PTR [edx-0x924]
1002e743:	xor    ecx,eax
1002e745:	call   0x10018773
1002e74a:	mov    ecx,DWORD PTR [edx-0xc]
1002e74d:	xor    ecx,eax
1002e74f:	call   0x10018773
1002e754:	mov    eax,0x100bcdac
1002e759:	jmp    0x10018845
1002e75e:	int3   
1002e75f:	int3   
1002e760:	lea    esi,[ebp-0x8ac]
1002e766:	jmp    0x10009b80
1002e76b:	lea    ecx,[ebp-0x8c8]
1002e771:	jmp    0x10002c00
1002e776:	mov    edx,DWORD PTR [esp+0x8]
1002e77a:	lea    eax,[edx+0xc]
1002e77d:	mov    ecx,DWORD PTR [edx-0x8cc]
1002e783:	xor    ecx,eax
1002e785:	call   0x10018773
1002e78a:	mov    ecx,DWORD PTR [edx-0x8]
1002e78d:	xor    ecx,eax
1002e78f:	call   0x10018773
1002e794:	mov    eax,0x100bce14
1002e799:	jmp    0x10018845
1002e79e:	int3   
1002e79f:	int3   
1002e7a0:	lea    ecx,[ebp-0x6c]
1002e7a3:	jmp    0x10003310
1002e7a8:	lea    ecx,[ebp-0x68]
1002e7ab:	jmp    0x10003310
1002e7b0:	lea    ecx,[ebp-0x70]
1002e7b3:	jmp    0x1000a750
1002e7b8:	mov    edx,DWORD PTR [esp+0x8]
1002e7bc:	lea    eax,[edx+0xc]
1002e7bf:	mov    ecx,DWORD PTR [edx-0x98]
1002e7c5:	xor    ecx,eax
1002e7c7:	call   0x10018773
1002e7cc:	mov    eax,0x100bce50
1002e7d1:	jmp    0x10018845
1002e7d6:	int3   
1002e7d7:	int3   
1002e7d8:	int3   
1002e7d9:	int3   
1002e7da:	int3   
1002e7db:	int3   
1002e7dc:	int3   
1002e7dd:	int3   
1002e7de:	int3   
1002e7df:	int3   
1002e7e0:	cmp    DWORD PTR ds:0x100c9d94,0x0
1002e7e7:	jne    0x1002e7ee
1002e7e9:	jmp    0x1000ddd0
1002e7ee:	ret    
1002e7ef:	int3   
1002e7f0:	push   0x0
1002e7f2:	push   0x0
1002e7f4:	push   0x1
1002e7f6:	push   0x0
1002e7f8:	call   DWORD PTR ds:0x1002f0e0
1002e7fe:	mov    ds:0x100c9fb8,eax
1002e803:	ret    
1002e804:	int3   
1002e805:	int3   
1002e806:	int3   
1002e807:	int3   
1002e808:	int3   
1002e809:	int3   
1002e80a:	int3   
1002e80b:	int3   
1002e80c:	int3   
1002e80d:	int3   
1002e80e:	int3   
1002e80f:	int3   
1002e810:	push   0x100b9ce8
1002e815:	push   0xf
1002e817:	push   0x100b9d50
1002e81c:	call   0x100035f0
1002e821:	add    esp,0xc
1002e824:	mov    ds:0x100c9fbc,eax
1002e829:	ret    
1002e82a:	int3   
1002e82b:	int3   
1002e82c:	int3   
1002e82d:	int3   
1002e82e:	int3   
1002e82f:	int3   
1002e830:	cmp    DWORD PTR ds:0x100c9d94,0x0
1002e837:	jne    0x1002e83e
1002e839:	jmp    0x1000ddd0
1002e83e:	ret    
1002e83f:	int3   
1002e840:	push   ebp
1002e841:	mov    ebp,esp
1002e843:	mov    ecx,0x100c8d48
1002e848:	call   0x10010b40
1002e84d:	push   0x1002eaf0
1002e852:	call   0x10018ca7
1002e857:	add    esp,0x4
1002e85a:	pop    ebp
1002e85b:	ret    
1002e85c:	int3   
1002e85d:	int3   
1002e85e:	int3   
1002e85f:	int3   
1002e860:	push   ebp
1002e861:	mov    ebp,esp
1002e863:	push   0x0
1002e865:	push   0x0
1002e867:	push   0x0
1002e869:	call   DWORD PTR ds:0x1002f0dc
1002e86f:	mov    ds:0x100c8dac,eax
1002e874:	pop    ebp
1002e875:	ret    
1002e876:	int3   
1002e877:	int3   
1002e878:	int3   
1002e879:	int3   
1002e87a:	int3   
1002e87b:	int3   
1002e87c:	int3   
1002e87d:	int3   
1002e87e:	int3   
1002e87f:	int3   
1002e880:	push   ebp
1002e881:	mov    ebp,esp
1002e883:	push   0x0
1002e885:	mov    ecx,0x100c8d78
1002e88a:	call   0x10003300
1002e88f:	push   0x1002eb00
1002e894:	call   0x10018ca7
1002e899:	add    esp,0x4
1002e89c:	pop    ebp
1002e89d:	ret    
1002e89e:	int3   
1002e89f:	int3   
1002e8a0:	push   ebp
1002e8a1:	mov    ebp,esp
1002e8a3:	mov    ecx,0x100c8d5c
1002e8a8:	call   0x10002ba0
1002e8ad:	push   0x1002eb10
1002e8b2:	call   0x10018ca7
1002e8b7:	add    esp,0x4
1002e8ba:	pop    ebp
1002e8bb:	ret    
1002e8bc:	int3   
1002e8bd:	int3   
1002e8be:	int3   
1002e8bf:	int3   
1002e8c0:	push   ebp
1002e8c1:	mov    ebp,esp
1002e8c3:	mov    ecx,0x100c8d8c
1002e8c8:	call   0x10002ba0
1002e8cd:	push   0x1002eb20
1002e8d2:	call   0x10018ca7
1002e8d7:	add    esp,0x4
1002e8da:	pop    ebp
1002e8db:	ret    
1002e8dc:	int3   
1002e8dd:	int3   
1002e8de:	int3   
1002e8df:	int3   
1002e8e0:	push   ebp
1002e8e1:	mov    ebp,esp
1002e8e3:	push   0x0
1002e8e5:	push   0x0
1002e8e7:	push   0x0
1002e8e9:	push   0x0
1002e8eb:	call   DWORD PTR ds:0x1002f0e0
1002e8f1:	mov    ds:0x100c8da8,eax
1002e8f6:	pop    ebp
1002e8f7:	ret    
1002e8f8:	int3   
1002e8f9:	int3   
1002e8fa:	int3   
1002e8fb:	int3   
1002e8fc:	int3   
1002e8fd:	int3   
1002e8fe:	int3   
1002e8ff:	int3   
1002e900:	push   ebp
1002e901:	mov    ebp,esp
1002e903:	mov    eax,ds:0x100be060
1002e908:	mov    ds:0x100c8d80,eax
1002e90d:	mov    ecx,DWORD PTR ds:0x100be064
1002e913:	mov    DWORD PTR ds:0x100c8d84,ecx
1002e919:	pop    ebp
1002e91a:	ret    
1002e91b:	int3   
1002e91c:	int3   
1002e91d:	int3   
1002e91e:	int3   
1002e91f:	int3   
1002e920:	push   ebp
1002e921:	mov    ebp,esp
1002e923:	push   0x0
1002e925:	mov    ecx,0x100c8d88
1002e92a:	call   0x100121c0
1002e92f:	push   0x1002eb30
1002e934:	call   0x10018ca7
1002e939:	add    esp,0x4
1002e93c:	pop    ebp
1002e93d:	ret    
1002e93e:	int3   
1002e93f:	int3   
1002e940:	push   ebp
1002e941:	mov    ebp,esp
1002e943:	push   0x0
1002e945:	mov    ecx,0x100c8d7c
1002e94a:	call   0x100121c0
1002e94f:	push   0x1002eb40
1002e954:	call   0x10018ca7
1002e959:	add    esp,0x4
1002e95c:	pop    ebp
1002e95d:	ret    
1002e95e:	int3   
1002e95f:	int3   
1002e960:	push   ebp
1002e961:	mov    ebp,esp
1002e963:	push   0x0
1002e965:	push   0x0
1002e967:	push   0x0
1002e969:	call   DWORD PTR ds:0x1002f0dc
1002e96f:	mov    ds:0x100c8eb4,eax
1002e974:	pop    ebp
1002e975:	ret    
1002e976:	int3   
1002e977:	int3   
1002e978:	int3   
1002e979:	int3   
1002e97a:	int3   
1002e97b:	int3   
1002e97c:	int3   
1002e97d:	int3   
1002e97e:	int3   
1002e97f:	int3   
1002e980:	push   ebp
1002e981:	mov    ebp,esp
1002e983:	mov    ecx,0x100c8eb0
1002e988:	call   0x10012370
1002e98d:	pop    ebp
1002e98e:	ret    
1002e98f:	int3   
1002e990:	push   ebp
1002e991:	mov    ebp,esp
1002e993:	push   0x0
1002e995:	push   0x0
1002e997:	push   0x0
1002e999:	call   DWORD PTR ds:0x1002f0dc
1002e99f:	mov    ds:0x100c8eb8,eax
1002e9a4:	pop    ebp
1002e9a5:	ret    
1002e9a6:	int3   
1002e9a7:	int3   
1002e9a8:	int3   
1002e9a9:	int3   
1002e9aa:	int3   
1002e9ab:	int3   
1002e9ac:	int3   
1002e9ad:	int3   
1002e9ae:	int3   
1002e9af:	int3   
1002e9b0:	push   ebp
1002e9b1:	mov    ebp,esp
1002e9b3:	mov    ecx,0x100c8ebc
1002e9b8:	call   0x10013fe0
1002e9bd:	push   0x1002eb50
1002e9c2:	call   0x10018ca7
1002e9c7:	add    esp,0x4
1002e9ca:	pop    ebp
1002e9cb:	ret    
1002e9cc:	call   DWORD PTR ds:0x1002f190
1002e9d2:	push   0x1002eb5f
1002e9d7:	mov    DWORD PTR ds:0x100c9084,0x100b2670
1002e9e1:	mov    ds:0x100c9088,eax
1002e9e6:	mov    BYTE PTR ds:0x100c908c,0x0
1002e9ed:	call   0x10018ca7
1002e9f2:	pop    ecx
1002e9f3:	ret    
1002e9f4:	push   0x100c9084
1002e9f9:	mov    ecx,0x100c9090
1002e9fe:	call   0x100181bf
1002ea03:	push   0x1002eb69
1002ea08:	call   0x10018ca7
1002ea0d:	pop    ecx
1002ea0e:	ret    
1002ea0f:	mov    ecx,0x100c90ac
1002ea14:	call   0x10018548
1002ea19:	push   0x1002eb74
1002ea1e:	call   0x10018ca7
1002ea23:	pop    ecx
1002ea24:	ret    
1002ea25:	mov    ecx,0x100c90e8
1002ea2a:	call   0x10018522
1002ea2f:	push   0x1002eb7e
1002ea34:	call   0x10018ca7
1002ea39:	pop    ecx
1002ea3a:	ret    
1002ea3b:	mov    ecx,0x100c91b8
1002ea40:	call   0x10018692
1002ea45:	push   0x1002eb88
1002ea4a:	call   0x10018ca7
1002ea4f:	pop    ecx
1002ea50:	ret    
1002ea51:	push   0x1002eb92
1002ea56:	call   0x10018ca7
1002ea5b:	pop    ecx
1002ea5c:	ret    
1002ea5d:	mov    ecx,0x100c922c
1002ea62:	call   0x10018692
1002ea67:	push   0x1002eb9c
1002ea6c:	call   0x10018ca7
1002ea71:	pop    ecx
1002ea72:	ret    
1002ea73:	push   0x1002eba6
1002ea78:	call   0x10018ca7
1002ea7d:	pop    ecx
1002ea7e:	ret    
1002ea7f:	int3   
1002ea80:	mov    ecx,0x100c9d24
1002ea85:	jmp    0x10005d10
1002ea8a:	int3   
1002ea8b:	int3   
1002ea8c:	int3   
1002ea8d:	int3   
1002ea8e:	int3   
1002ea8f:	int3   
1002ea90:	mov    ecx,0x100c9d18
1002ea95:	jmp    0x10005870
1002ea9a:	int3   
1002ea9b:	int3   
1002ea9c:	int3   
1002ea9d:	int3   
1002ea9e:	int3   
1002ea9f:	int3   
1002eaa0:	push   ebp
1002eaa1:	mov    ebp,esp
1002eaa3:	and    esp,0xfffffff8
1002eaa6:	mov    eax,ds:0x100ca038
1002eaab:	mov    edx,DWORD PTR [eax]
1002eaad:	sub    esp,0xc
1002eab0:	push   esi
1002eab1:	push   eax
1002eab2:	mov    ecx,0x100ca034
1002eab7:	push   ecx
1002eab8:	push   edx
1002eab9:	mov    esi,ecx
1002eabb:	push   esi
1002eabc:	lea    eax,[esp+0x18]
1002eac0:	push   eax
1002eac1:	call   0x1000c0b0
1002eac6:	mov    ecx,DWORD PTR ds:0x100ca038
1002eacc:	push   ecx
1002eacd:	call   0x1001876e
1002ead2:	add    esp,0x4
1002ead5:	xor    eax,eax
1002ead7:	mov    ds:0x100ca038,eax
1002eadc:	mov    ds:0x100ca03c,eax
1002eae1:	pop    esi
1002eae2:	mov    esp,ebp
1002eae4:	pop    ebp
1002eae5:	ret    
1002eae6:	int3   
1002eae7:	int3   
1002eae8:	int3   
1002eae9:	int3   
1002eaea:	int3   
1002eaeb:	int3   
1002eaec:	int3   
1002eaed:	int3   
1002eaee:	int3   
1002eaef:	int3   
1002eaf0:	push   ebp
1002eaf1:	mov    ebp,esp
1002eaf3:	mov    ecx,0x100c8d48
1002eaf8:	call   0x10010b90
1002eafd:	pop    ebp
1002eafe:	ret    
1002eaff:	int3   
1002eb00:	push   ebp
1002eb01:	mov    ebp,esp
1002eb03:	mov    ecx,0x100c8d78
1002eb08:	call   0x10003310
1002eb0d:	pop    ebp
1002eb0e:	ret    
1002eb0f:	int3   
1002eb10:	push   ebp
1002eb11:	mov    ebp,esp
1002eb13:	mov    ecx,0x100c8d5c
1002eb18:	call   0x10002c00
1002eb1d:	pop    ebp
1002eb1e:	ret    
1002eb1f:	int3   
1002eb20:	push   ebp
1002eb21:	mov    ebp,esp
1002eb23:	mov    ecx,0x100c8d8c
1002eb28:	call   0x10002c00
1002eb2d:	pop    ebp
1002eb2e:	ret    
1002eb2f:	int3   
1002eb30:	push   ebp
1002eb31:	mov    ebp,esp
1002eb33:	mov    ecx,0x100c8d88
1002eb38:	call   0x100121e0
1002eb3d:	pop    ebp
1002eb3e:	ret    
1002eb3f:	int3   
1002eb40:	push   ebp
1002eb41:	mov    ebp,esp
1002eb43:	mov    ecx,0x100c8d7c
1002eb48:	call   0x100121e0
1002eb4d:	pop    ebp
1002eb4e:	ret    
1002eb4f:	int3   
1002eb50:	push   ebp
1002eb51:	mov    ebp,esp
1002eb53:	mov    ecx,0x100c8ebc
1002eb58:	call   0x10014390
1002eb5d:	pop    ebp
1002eb5e:	ret    
1002eb5f:	mov    ecx,0x100c9084
1002eb64:	jmp    0x10018113
1002eb69:	mov    DWORD PTR ds:0x100c9090,0x100b2684
1002eb73:	ret    
1002eb74:	mov    ecx,0x100c90ac
1002eb79:	jmp    0x100184b6
1002eb7e:	mov    ecx,0x100c90e8
1002eb83:	jmp    0x100185f7
1002eb88:	mov    ecx,0x100c91b8
1002eb8d:	jmp    0x100186c1
1002eb92:	mov    ecx,0x100c91dc
1002eb97:	jmp    0x10001640
1002eb9c:	mov    ecx,0x100c922c
1002eba1:	jmp    0x100186c1
1002eba6:	mov    ecx,0x100c922d
1002ebab:	jmp    0x10018749
1002ebb0:	mov    DWORD PTR ds:0x100c9234,0x1002f510
1002ebba:	mov    ecx,0x100c9234
1002ebbf:	jmp    0x10018fcc
